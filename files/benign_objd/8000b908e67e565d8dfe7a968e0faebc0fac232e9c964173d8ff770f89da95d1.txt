
8000b908e67e565d8dfe7a968e0faebc0fac232e9c964173d8ff770f89da95d1.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x8],rbx
   140001005:	push   rdi
   140001006:	sub    rsp,0x20
   14000100a:	xor    ebx,ebx
   14000100c:	mov    rdi,rcx
   14000100f:	test   rcx,rcx
   140001012:	je     0x14000103e
   140001014:	mov    rdx,rcx
   140001017:	lea    rcx,[rip+0x53c2]        # 0x1400063e0
   14000101e:	mov    r8d,0x104
   140001024:	call   QWORD PTR [rip+0x5136]        # 0x140006160
   14000102a:	test   eax,eax
   14000102c:	jne    0x14000103c
   14000102e:	mov    edx,0x104
   140001033:	mov    rcx,rdi
   140001036:	call   QWORD PTR [rip+0x512c]        # 0x140006168
   14000103c:	mov    bl,0x1
   14000103e:	mov    al,bl
   140001040:	mov    rbx,QWORD PTR [rsp+0x30]
   140001045:	add    rsp,0x20
   140001049:	pop    rdi
   14000104a:	ret    
   14000104b:	int3   
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	int3   
   140001051:	int3   
   140001052:	int3   
   140001053:	int3   
   140001054:	int3   
   140001055:	int3   
   140001056:	int3   
   140001057:	int3   
   140001058:	int3   
   140001059:	int3   
   14000105a:	int3   
   14000105b:	int3   
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	rex push rbx
   140001062:	sub    rsp,0x20
   140001066:	xor    ebx,ebx
   140001068:	test   rcx,rcx
   14000106b:	je     0x140001090
   14000106d:	mov    rdx,rcx
   140001070:	lea    rcx,[rip+0x5381]        # 0x1400063f8
   140001077:	mov    r8d,0x104
   14000107d:	call   QWORD PTR [rip+0x50dd]        # 0x140006160
   140001083:	movzx  ebx,bl
   140001086:	mov    edx,0x1
   14000108b:	test   eax,eax
   14000108d:	cmovne ebx,edx
   140001090:	mov    al,bl
   140001092:	add    rsp,0x20
   140001096:	pop    rbx
   140001097:	ret    
   140001098:	int3   
   140001099:	int3   
   14000109a:	int3   
   14000109b:	int3   
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	rex push rbx
   1400010a2:	sub    rsp,0x830
   1400010a9:	mov    rax,QWORD PTR [rip+0x7f78]        # 0x140009028
   1400010b0:	xor    rax,rsp
   1400010b3:	mov    QWORD PTR [rsp+0x820],rax
   1400010bb:	mov    rbx,rcx
   1400010be:	test   rcx,rcx
   1400010c1:	je     0x1400010f9
   1400010c3:	lea    rcx,[rsp+0x20]
   1400010c8:	call   0x140001060
   1400010cd:	test   al,al
   1400010cf:	jne    0x1400010e0
   1400010d1:	lea    rcx,[rsp+0x20]
   1400010d6:	mov    edx,0x400
   1400010db:	call   0x1400039b4
   1400010e0:	lea    r8,[rsp+0x20]
   1400010e5:	lea    rdx,[rip+0x5334]        # 0x140006420
   1400010ec:	mov    rcx,rbx
   1400010ef:	call   QWORD PTR [rip+0x524b]        # 0x140006340
   1400010f5:	mov    al,0x1
   1400010f7:	jmp    0x1400010fb
   1400010f9:	xor    al,al
   1400010fb:	mov    rcx,QWORD PTR [rsp+0x820]
   140001103:	xor    rcx,rsp
   140001106:	call   0x1400049c0
   14000110b:	add    rsp,0x830
   140001112:	pop    rbx
   140001113:	ret    
   140001114:	rex.W jmp QWORD PTR [rip+0x51ad]        # 0x1400062c8
   14000111b:	int3   
   14000111c:	int3   
   14000111d:	int3   
   14000111e:	int3   
   14000111f:	int3   
   140001120:	int3   
   140001121:	int3   
   140001122:	int3   
   140001123:	int3   
   140001124:	rex push rbx
   140001126:	sub    rsp,0x20
   14000112a:	xor    ebx,ebx
   14000112c:	test   rcx,rcx
   14000112f:	je     0x14000115a
   140001131:	mov    WORD PTR [rcx],bx
   140001134:	mov    rdx,rcx
   140001137:	lea    rcx,[rip+0x5352]        # 0x140006490
   14000113e:	mov    r8d,0x400
   140001144:	call   QWORD PTR [rip+0x5016]        # 0x140006160
   14000114a:	test   eax,eax
   14000114c:	je     0x14000115a
   14000114e:	cmp    eax,0x400
   140001153:	jae    0x14000115a
   140001155:	lea    eax,[rbx+0x1]
   140001158:	jmp    0x14000115c
   14000115a:	xor    eax,eax
   14000115c:	add    rsp,0x20
   140001160:	pop    rbx
   140001161:	ret    
   140001162:	int3   
   140001163:	int3   
   140001164:	int3   
   140001165:	int3   
   140001166:	int3   
   140001167:	int3   
   140001168:	int3   
   140001169:	int3   
   14000116a:	int3   
   14000116b:	int3   
   14000116c:	int3   
   14000116d:	int3   
   14000116e:	int3   
   14000116f:	int3   
   140001170:	int3   
   140001171:	int3   
   140001172:	int3   
   140001173:	int3   
   140001174:	mov    QWORD PTR [rsp+0x8],rdi
   140001179:	mov    r8,rcx
   14000117c:	or     rcx,0xffffffffffffffff
   140001180:	xor    eax,eax
   140001182:	mov    rdi,r8
   140001185:	mov    r10,rdx
   140001188:	mov    r9b,0x1
   14000118b:	repnz scas ax,WORD PTR es:[rdi]
   14000118e:	xor    edi,edi
   140001190:	not    rcx
   140001193:	dec    rcx
   140001196:	dec    ecx
   140001198:	movsxd rdx,ecx
   14000119b:	js     0x1400011cd
   14000119d:	lea    rcx,[r10+rdx*2]
   1400011a1:	sub    r8,r10
   1400011a4:	test   r9b,r9b
   1400011a7:	jne    0x1400011b1
   1400011a9:	movzx  eax,WORD PTR [r8+rcx*1]
   1400011ae:	mov    WORD PTR [rcx],ax
   1400011b1:	cmp    WORD PTR [r8+rcx*1],0x5c
   1400011b7:	jne    0x1400011c4
   1400011b9:	test   r9b,r9b
   1400011bc:	je     0x1400011c4
   1400011be:	mov    WORD PTR [rcx],di
   1400011c1:	mov    r9b,dil
   1400011c4:	sub    rcx,0x2
   1400011c8:	dec    rdx
   1400011cb:	jns    0x1400011a4
   1400011cd:	mov    rdi,QWORD PTR [rsp+0x8]
   1400011d2:	ret    
   1400011d3:	int3   
   1400011d4:	int3   
   1400011d5:	int3   
   1400011d6:	int3   
   1400011d7:	int3   
   1400011d8:	int3   
   1400011d9:	int3   
   1400011da:	int3   
   1400011db:	int3   
   1400011dc:	int3   
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	int3   
   1400011e1:	int3   
   1400011e2:	int3   
   1400011e3:	int3   
   1400011e4:	rex push rbx
   1400011e6:	push   rbp
   1400011e7:	push   rdi
   1400011e8:	mov    eax,0x1050
   1400011ed:	call   0x140004a00
   1400011f2:	sub    rsp,rax
   1400011f5:	mov    rax,QWORD PTR [rip+0x7e2c]        # 0x140009028
   1400011fc:	xor    rax,rsp
   1400011ff:	mov    QWORD PTR [rsp+0x1040],rax
   140001207:	mov    edi,edx
   140001209:	mov    edx,ecx
   14000120b:	mov    rcx,QWORD PTR [rip+0x7f0e]        # 0x140009120
   140001212:	mov    rbx,r8
   140001215:	lea    r8,[rsp+0x840]
   14000121d:	mov    r9d,0x800
   140001223:	call   QWORD PTR [rip+0x510f]        # 0x140006338
   140001229:	xor    ebp,ebp
   14000122b:	lea    rax,[rsp+0x40]
   140001230:	mov    QWORD PTR [rsp+0x30],rbp
   140001235:	xor    r9d,r9d
   140001238:	mov    r8d,edi
   14000123b:	xor    edx,edx
   14000123d:	mov    ecx,0x1000
   140001242:	mov    DWORD PTR [rsp+0x28],0x800
   14000124a:	mov    QWORD PTR [rsp+0x20],rax
   14000124f:	mov    WORD PTR [rsp+0x40],bp
   140001254:	call   QWORD PTR [rip+0x4efe]        # 0x140006158
   14000125a:	test   rbx,rbx
   14000125d:	je     0x14000129a
   14000125f:	xor    eax,eax
   140001261:	or     rdx,0xffffffffffffffff
   140001265:	lea    rdi,[rsp+0x40]
   14000126a:	mov    rcx,rdx
   14000126d:	repnz scas ax,WORD PTR es:[rdi]
   140001270:	mov    eax,DWORD PTR [rip+0x523e]        # 0x1400064b4
   140001276:	mov    rcx,rdx
   140001279:	mov    DWORD PTR [rdi-0x2],eax
   14000127c:	xor    eax,eax
   14000127e:	lea    rdi,[rsp+0x40]
   140001283:	repnz scas ax,WORD PTR es:[rdi]
   140001286:	xor    ecx,ecx
   140001288:	movzx  eax,WORD PTR [rbx+rcx*1]
   14000128c:	add    rcx,0x2
   140001290:	mov    WORD PTR [rdi+rcx*1-0x4],ax
   140001295:	test   ax,ax
   140001298:	jne    0x140001288
   14000129a:	lea    r8,[rsp+0x840]
   1400012a2:	lea    rdx,[rsp+0x40]
   1400012a7:	mov    r9d,0x30
   1400012ad:	xor    ecx,ecx
   1400012af:	call   QWORD PTR [rip+0x507b]        # 0x140006330
   1400012b5:	mov    rcx,QWORD PTR [rsp+0x1040]
   1400012bd:	xor    rcx,rsp
   1400012c0:	call   0x1400049c0
   1400012c5:	add    rsp,0x1050
   1400012cc:	pop    rdi
   1400012cd:	pop    rbp
   1400012ce:	pop    rbx
   1400012cf:	ret    
   1400012d0:	int3   
   1400012d1:	int3   
   1400012d2:	int3   
   1400012d3:	int3   
   1400012d4:	int3   
   1400012d5:	int3   
   1400012d6:	int3   
   1400012d7:	int3   
   1400012d8:	int3   
   1400012d9:	int3   
   1400012da:	int3   
   1400012db:	int3   
   1400012dc:	int3   
   1400012dd:	int3   
   1400012de:	int3   
   1400012df:	int3   
   1400012e0:	int3   
   1400012e1:	int3   
   1400012e2:	int3   
   1400012e3:	int3   
   1400012e4:	rex push rbp
   1400012e6:	push   rsi
   1400012e7:	push   rdi
   1400012e8:	push   r12
   1400012ea:	push   r13
   1400012ec:	push   r14
   1400012ee:	push   r15
   1400012f0:	lea    rbp,[rsp-0x1a80]
   1400012f8:	mov    eax,0x1b80
   1400012fd:	call   0x140004a00
   140001302:	sub    rsp,rax
   140001305:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14000130e:	mov    QWORD PTR [rsp+0x1bd0],rbx
   140001316:	mov    rax,QWORD PTR [rip+0x7d0b]        # 0x140009028
   14000131d:	xor    rax,rsp
   140001320:	mov    QWORD PTR [rbp+0x1a70],rax
   140001327:	mov    r13,rdx
   14000132a:	mov    rsi,rcx
   14000132d:	lea    rcx,[rbp+0x440]
   140001334:	call   0x140001000
   140001339:	lea    rcx,[rbp+0x860]
   140001340:	call   0x140001060
   140001345:	xor    r14d,r14d
   140001348:	cmp    al,0x1
   14000134a:	jne    0x140001369
   14000134c:	lea    r8,[rbp+0x860]
   140001353:	lea    rdx,[rip+0x515e]        # 0x1400064b8
   14000135a:	lea    rcx,[rbp+0xa70]
   140001361:	call   QWORD PTR [rip+0x4fd9]        # 0x140006340
   140001367:	jmp    0x140001371
   140001369:	mov    WORD PTR [rbp+0xa70],r14w
   140001371:	mov    r12d,0x800
   140001377:	mov    WORD PTR [rbp+0x1270],r14w
   14000137f:	lea    rcx,[rbp+0x1270]
   140001386:	call   0x140001124
   14000138b:	mov    ecx,0xc00
   140001390:	cmp    eax,0x1
   140001393:	cmove  r12d,ecx
   140001397:	mov    r9,rsi
   14000139a:	lea    r8,[rip+0x5157]        # 0x1400064f8
   1400013a1:	mov    edx,0x104
   1400013a6:	lea    rcx,[rbp+0x20]
   1400013aa:	call   QWORD PTR [rip+0x4ef8]        # 0x1400062a8
   1400013b0:	lea    rdx,[rbp+0x20]
   1400013b4:	lea    rcx,[rsp+0x58]
   1400013b9:	call   0x1400017d8
   1400013be:	nop
   1400013bf:	mov    rbx,QWORD PTR [rax]
   1400013c2:	test   rbx,rbx
   1400013c5:	je     0x1400013df
   1400013c7:	cmp    QWORD PTR [rbx+0x8],r14
   1400013cb:	jne    0x1400013d9
   1400013cd:	mov    rcx,QWORD PTR [rbx]
   1400013d0:	call   0x1400056d0
   1400013d5:	mov    QWORD PTR [rbx+0x8],rax
   1400013d9:	mov    rcx,QWORD PTR [rbx+0x8]
   1400013dd:	jmp    0x1400013e2
   1400013df:	mov    rcx,r14
   1400013e2:	lea    rdx,[rbp-0x10]
   1400013e6:	call   QWORD PTR [rip+0x4edc]        # 0x1400062c8
   1400013ec:	test   eax,eax
   1400013ee:	setne  dil
   1400013f2:	or     r15,0xffffffffffffffff
   1400013f6:	mov    rbx,QWORD PTR [rsp+0x58]
   1400013fb:	test   rbx,rbx
   1400013fe:	je     0x140001436
   140001400:	mov    eax,r15d
   140001403:	lock xadd DWORD PTR [rbx+0x10],eax
   140001408:	add    eax,r15d
   14000140b:	jne    0x140001436
   14000140d:	test   rbx,rbx
   140001410:	je     0x140001436
   140001412:	mov    rcx,QWORD PTR [rbx]
   140001415:	test   rcx,rcx
   140001418:	je     0x140001420
   14000141a:	call   QWORD PTR [rip+0x4f00]        # 0x140006320
   140001420:	mov    rcx,QWORD PTR [rbx+0x8]
   140001424:	test   rcx,rcx
   140001427:	je     0x14000142e
   140001429:	call   0x1400049e6
   14000142e:	mov    rcx,rbx
   140001431:	call   0x140004a54
   140001436:	test   dil,dil
   140001439:	je     0x1400014f2
   14000143f:	mov    r9,rsi
   140001442:	lea    r8,[rip+0x50cf]        # 0x140006518
   140001449:	mov    edi,0x104
   14000144e:	mov    edx,edi
   140001450:	lea    rcx,[rbp+0x650]
   140001457:	call   QWORD PTR [rip+0x4e4b]        # 0x1400062a8
   14000145d:	lea    rcx,[rbp+0x650]
   140001464:	call   QWORD PTR [rip+0x4cc6]        # 0x140006130
   14000146a:	mov    rbx,rax
   14000146d:	test   rax,rax
   140001470:	jne    0x14000148a
   140001472:	call   QWORD PTR [rip+0x4cc0]        # 0x140006138
   140001478:	mov    edx,eax
   14000147a:	xor    r8d,r8d
   14000147d:	lea    ecx,[rbx+0x2]
   140001480:	call   0x1400011e4
   140001485:	jmp    0x1400015c7
   14000148a:	lea    rdx,[rip+0x50a7]        # 0x140006538
   140001491:	mov    rcx,rax
   140001494:	call   QWORD PTR [rip+0x4ca6]        # 0x140006140
   14000149a:	test   rax,rax
   14000149d:	jne    0x1400014c1
   14000149f:	call   QWORD PTR [rip+0x4c93]        # 0x140006138
   1400014a5:	mov    edx,eax
   1400014a7:	xor    r8d,r8d
   1400014aa:	lea    ecx,[r8+0x2]
   1400014ae:	call   0x1400011e4
   1400014b3:	mov    rcx,rbx
   1400014b6:	call   QWORD PTR [rip+0x4c8c]        # 0x140006148
   1400014bc:	jmp    0x1400015c7
   1400014c1:	lea    rcx,[rbp+0x230]
   1400014c8:	call   rax
   1400014ca:	test   eax,eax
   1400014cc:	je     0x14000149f
   1400014ce:	mov    rcx,rbx
   1400014d1:	call   QWORD PTR [rip+0x4c71]        # 0x140006148
   1400014d7:	lea    r9,[rbp+0x230]
   1400014de:	lea    r8,[rip+0x5073]        # 0x140006558
   1400014e5:	mov    rdx,rdi
   1400014e8:	lea    rcx,[rbp+0x20]
   1400014ec:	call   QWORD PTR [rip+0x4db6]        # 0x1400062a8
   1400014f2:	movsxd rcx,r12d
   1400014f5:	mov    eax,0x2
   1400014fa:	mul    rcx
   1400014fd:	cmovo  rax,r15
   140001501:	mov    rcx,rax
   140001504:	call   0x140004aec
   140001509:	mov    rbx,rax
   14000150c:	mov    QWORD PTR [rsp+0x38],r13
   140001511:	lea    rax,[rbp+0xa70]
   140001518:	mov    QWORD PTR [rsp+0x30],rax
   14000151d:	lea    rax,[rbp+0x440]
   140001524:	mov    QWORD PTR [rsp+0x28],rax
   140001529:	lea    rax,[rbp+0x1270]
   140001530:	mov    QWORD PTR [rsp+0x20],rax
   140001535:	mov    r9,rsi
   140001538:	lea    r8,[rbp+0x20]
   14000153c:	lea    rdx,[rip+0x503d]        # 0x140006580
   140001543:	mov    rcx,rbx
   140001546:	call   QWORD PTR [rip+0x4df4]        # 0x140006340
   14000154c:	mov    edi,0x68
   140001551:	mov    r8d,edi
   140001554:	xor    edx,edx
   140001556:	lea    rcx,[rbp-0x80]
   14000155a:	call   0x140004af2
   14000155f:	mov    DWORD PTR [rbp-0x80],edi
   140001562:	lea    rax,[rsp+0x68]
   140001567:	mov    QWORD PTR [rsp+0x48],rax
   14000156c:	lea    rax,[rbp-0x80]
   140001570:	mov    QWORD PTR [rsp+0x40],rax
   140001575:	mov    QWORD PTR [rsp+0x38],rsi
   14000157a:	mov    QWORD PTR [rsp+0x30],r14
   14000157f:	mov    DWORD PTR [rsp+0x28],r14d
   140001584:	mov    DWORD PTR [rsp+0x20],r14d
   140001589:	xor    r9d,r9d
   14000158c:	xor    r8d,r8d
   14000158f:	mov    rdx,rbx
   140001592:	lea    rcx,[rbp+0x20]
   140001596:	call   0x140002234
   14000159b:	test   eax,eax
   14000159d:	jne    0x1400015b4
   14000159f:	call   QWORD PTR [rip+0x4b93]        # 0x140006138
   1400015a5:	mov    edx,eax
   1400015a7:	mov    r8,rbx
   1400015aa:	lea    ecx,[rdi-0x66]
   1400015ad:	call   0x1400011e4
   1400015b2:	jmp    0x1400015bf
   1400015b4:	mov    rcx,QWORD PTR [rsp+0x68]
   1400015b9:	call   QWORD PTR [rip+0x4b91]        # 0x140006150
   1400015bf:	mov    rcx,rbx
   1400015c2:	call   0x1400049e6
   1400015c7:	mov    rcx,QWORD PTR [rbp+0x1a70]
   1400015ce:	xor    rcx,rsp
   1400015d1:	call   0x1400049c0
   1400015d6:	mov    rbx,QWORD PTR [rsp+0x1bd0]
   1400015de:	add    rsp,0x1b80
   1400015e5:	pop    r15
   1400015e7:	pop    r14
   1400015e9:	pop    r13
   1400015eb:	pop    r12
   1400015ed:	pop    rdi
   1400015ee:	pop    rsi
   1400015ef:	pop    rbp
   1400015f0:	ret    
   1400015f1:	int3   
   1400015f2:	int3   
   1400015f3:	int3   
   1400015f4:	int3   
   1400015f5:	int3   
   1400015f6:	int3   
   1400015f7:	int3   
   1400015f8:	int3   
   1400015f9:	int3   
   1400015fa:	int3   
   1400015fb:	int3   
   1400015fc:	int3   
   1400015fd:	int3   
   1400015fe:	int3   
   1400015ff:	int3   
   140001600:	int3   
   140001601:	int3   
   140001602:	int3   
   140001603:	int3   
   140001604:	mov    rax,rsp
   140001607:	mov    QWORD PTR [rax+0x8],rbx
   14000160b:	mov    QWORD PTR [rax+0x10],rsi
   14000160f:	mov    QWORD PTR [rax+0x20],rdi
   140001613:	push   rbp
   140001614:	lea    rbp,[rax-0x1748]
   14000161b:	mov    eax,0x1840
   140001620:	call   0x140004a00
   140001625:	sub    rsp,rax
   140001628:	mov    rax,QWORD PTR [rip+0x79f9]        # 0x140009028
   14000162f:	xor    rax,rsp
   140001632:	mov    QWORD PTR [rbp+0x1730],rax
   140001639:	mov    QWORD PTR [rip+0x7ae0],rcx        # 0x140009120
   140001640:	mov    rbx,r8
   140001643:	mov    edi,0x7fe
   140001648:	lea    rcx,[rsp+0x32]
   14000164d:	xor    esi,esi
   14000164f:	xor    edx,edx
   140001651:	mov    r8d,edi
   140001654:	mov    WORD PTR [rsp+0x30],si
   140001659:	call   0x140004af2
   14000165e:	lea    rcx,[rbp+0xf32]
   140001665:	mov    r8d,edi
   140001668:	xor    edx,edx
   14000166a:	mov    WORD PTR [rbp+0xf30],si
   140001671:	call   0x140004af2
   140001676:	lea    rcx,[rbp+0x732]
   14000167d:	mov    r8d,edi
   140001680:	xor    edx,edx
   140001682:	mov    WORD PTR [rbp+0x730],si
   140001689:	call   0x140004af2
   14000168e:	mov    edi,0x400
   140001693:	lea    rdx,[rsp+0x30]
   140001698:	mov    r8d,edi
   14000169b:	xor    ecx,ecx
   14000169d:	call   QWORD PTR [rip+0x4a85]        # 0x140006128
   1400016a3:	lea    rdx,[rbp+0x730]
   1400016aa:	lea    rcx,[rsp+0x30]
   1400016af:	mov    r8d,edi
   1400016b2:	call   QWORD PTR [rip+0x4948]        # 0x140006000
   1400016b8:	lea    rdx,[rbp+0xf30]
   1400016bf:	lea    rcx,[rbp+0x730]
   1400016c6:	call   0x140001174
   1400016cb:	lea    rcx,[rsp+0x28]
   1400016d0:	mov    rdx,rbx
   1400016d3:	call   0x140001760
   1400016d8:	mov    rdx,QWORD PTR [rax]
   1400016db:	test   rdx,rdx
   1400016de:	je     0x1400016e5
   1400016e0:	mov    rdx,QWORD PTR [rdx]
   1400016e3:	jmp    0x1400016e8
   1400016e5:	mov    rdx,rsi
   1400016e8:	lea    rcx,[rbp+0xf30]
   1400016ef:	call   0x1400012e4
   1400016f4:	mov    rbx,QWORD PTR [rsp+0x28]
   1400016f9:	test   rbx,rbx
   1400016fc:	je     0x140001733
   1400016fe:	or     eax,0xffffffff
   140001701:	lock xadd DWORD PTR [rbx+0x10],eax
   140001706:	dec    eax
   140001708:	jne    0x140001733
   14000170a:	test   rbx,rbx
   14000170d:	je     0x140001733
   14000170f:	mov    rcx,QWORD PTR [rbx]
   140001712:	test   rcx,rcx
   140001715:	je     0x14000171d
   140001717:	call   QWORD PTR [rip+0x4c03]        # 0x140006320
   14000171d:	mov    rcx,QWORD PTR [rbx+0x8]
   140001721:	test   rcx,rcx
   140001724:	je     0x14000172b
   140001726:	call   0x1400049e6
   14000172b:	mov    rcx,rbx
   14000172e:	call   0x140004a54
   140001733:	xor    eax,eax
   140001735:	mov    rcx,QWORD PTR [rbp+0x1730]
   14000173c:	xor    rcx,rsp
   14000173f:	call   0x1400049c0
   140001744:	lea    r11,[rsp+0x1840]
   14000174c:	mov    rbx,QWORD PTR [r11+0x10]
   140001750:	mov    rsi,QWORD PTR [r11+0x18]
   140001754:	mov    rdi,QWORD PTR [r11+0x28]
   140001758:	mov    rsp,r11
   14000175b:	pop    rbp
   14000175c:	ret    
   14000175d:	int3   
   14000175e:	int3   
   14000175f:	int3   
   140001760:	rex push rdi
   140001762:	sub    rsp,0x30
   140001766:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000176f:	mov    QWORD PTR [rsp+0x48],rbx
   140001774:	mov    QWORD PTR [rsp+0x50],rsi
   140001779:	mov    rsi,rdx
   14000177c:	mov    rdi,rcx
   14000177f:	mov    ecx,0x18
   140001784:	call   0x1400049e0
   140001789:	mov    rbx,rax
   14000178c:	mov    QWORD PTR [rsp+0x40],rax
   140001791:	test   rax,rax
   140001794:	je     0x1400017af
   140001796:	and    QWORD PTR [rax+0x8],0x0
   14000179b:	mov    DWORD PTR [rax+0x10],0x1
   1400017a2:	mov    rcx,rsi
   1400017a5:	call   0x140005540
   1400017aa:	mov    QWORD PTR [rbx],rax
   1400017ad:	jmp    0x1400017b1
   1400017af:	xor    ebx,ebx
   1400017b1:	mov    QWORD PTR [rdi],rbx
   1400017b4:	test   rbx,rbx
   1400017b7:	jne    0x1400017c4
   1400017b9:	mov    ecx,0x8007000e
   1400017be:	call   0x1400057e0
   1400017c3:	int3   
   1400017c4:	mov    rax,rdi
   1400017c7:	mov    rbx,QWORD PTR [rsp+0x48]
   1400017cc:	mov    rsi,QWORD PTR [rsp+0x50]
   1400017d1:	add    rsp,0x30
   1400017d5:	pop    rdi
   1400017d6:	ret    
   1400017d7:	int3   
   1400017d8:	rex push rdi
   1400017da:	sub    rsp,0x30
   1400017de:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400017e7:	mov    QWORD PTR [rsp+0x40],rbx
   1400017ec:	mov    QWORD PTR [rsp+0x48],rsi
   1400017f1:	mov    rsi,rdx
   1400017f4:	mov    rdi,rcx
   1400017f7:	mov    ecx,0x18
   1400017fc:	call   0x1400049e0
   140001801:	mov    rbx,rax
   140001804:	mov    QWORD PTR [rsp+0x50],rax
   140001809:	test   rax,rax
   14000180c:	je     0x14000183b
   14000180e:	and    QWORD PTR [rax+0x8],0x0
   140001813:	mov    DWORD PTR [rax+0x10],0x1
   14000181a:	mov    rcx,rsi
   14000181d:	call   QWORD PTR [rip+0x4aed]        # 0x140006310
   140001823:	mov    QWORD PTR [rbx],rax
   140001826:	test   rax,rax
   140001829:	jne    0x14000183d
   14000182b:	test   rsi,rsi
   14000182e:	je     0x14000183d
   140001830:	mov    ecx,0x8007000e
   140001835:	call   0x1400057e0
   14000183a:	int3   
   14000183b:	xor    ebx,ebx
   14000183d:	mov    QWORD PTR [rdi],rbx
   140001840:	test   rbx,rbx
   140001843:	jne    0x140001850
   140001845:	mov    ecx,0x8007000e
   14000184a:	call   0x1400057e0
   14000184f:	int3   
   140001850:	mov    rax,rdi
   140001853:	mov    rbx,QWORD PTR [rsp+0x40]
   140001858:	mov    rsi,QWORD PTR [rsp+0x48]
   14000185d:	add    rsp,0x30
   140001861:	pop    rdi
   140001862:	ret    
   140001863:	int3   
   140001864:	mov    QWORD PTR [rsp+0x10],rbx
   140001869:	push   rdi
   14000186a:	sub    rsp,0x20
   14000186e:	mov    rbx,QWORD PTR [rcx]
   140001871:	mov    rdi,rcx
   140001874:	test   rbx,rbx
   140001877:	je     0x1400018b2
   140001879:	or     eax,0xffffffff
   14000187c:	lock xadd DWORD PTR [rbx+0x10],eax
   140001881:	dec    eax
   140001883:	jne    0x1400018ae
   140001885:	test   rbx,rbx
   140001888:	je     0x1400018ae
   14000188a:	mov    rcx,QWORD PTR [rbx]
   14000188d:	test   rcx,rcx
   140001890:	je     0x140001898
   140001892:	call   QWORD PTR [rip+0x4a88]        # 0x140006320
   140001898:	mov    rcx,QWORD PTR [rbx+0x8]
   14000189c:	test   rcx,rcx
   14000189f:	je     0x1400018a6
   1400018a1:	call   0x1400049e6
   1400018a6:	mov    rcx,rbx
   1400018a9:	call   0x140004a54
   1400018ae:	and    QWORD PTR [rdi],0x0
   1400018b2:	mov    rbx,QWORD PTR [rsp+0x38]
   1400018b7:	add    rsp,0x20
   1400018bb:	pop    rdi
   1400018bc:	ret    
   1400018bd:	int3   
   1400018be:	int3   
   1400018bf:	int3   
   1400018c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400018c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400018ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400018cf:	push   rdi
   1400018d0:	sub    rsp,0x40
   1400018d4:	cmp    QWORD PTR [rcx],0x0
   1400018d8:	mov    edi,r9d
   1400018db:	mov    rsi,r8
   1400018de:	mov    rbp,rdx
   1400018e1:	mov    rbx,rcx
   1400018e4:	je     0x140001937
   1400018e6:	lea    rcx,[rip+0x5a9b]        # 0x140007388
   1400018ed:	call   QWORD PTR [rip+0x482d]        # 0x140006120
   1400018f3:	test   rax,rax
   1400018f6:	je     0x14000195d
   1400018f8:	lea    rdx,[rip+0x5a71]        # 0x140007370
   1400018ff:	mov    rcx,rax
   140001902:	call   QWORD PTR [rip+0x4838]        # 0x140006140
   140001908:	test   rax,rax
   14000190b:	je     0x14000195d
   14000190d:	mov    rcx,QWORD PTR [rbx]
   140001910:	and    QWORD PTR [rsp+0x30],0x0
   140001916:	mov    r9d,DWORD PTR [rsp+0x70]
   14000191b:	mov    QWORD PTR [rsp+0x28],rcx
   140001920:	mov    rcx,QWORD PTR [rsp+0x78]
   140001925:	mov    r8d,edi
   140001928:	mov    QWORD PTR [rsp+0x20],rcx
   14000192d:	mov    rcx,rbp
   140001930:	mov    rdx,rsi
   140001933:	call   rax
   140001935:	jmp    0x140001962
   140001937:	cmp    DWORD PTR [rcx+0x8],0x0
   14000193b:	je     0x14000195d
   14000193d:	mov    rax,QWORD PTR [rsp+0x78]
   140001942:	mov    r9d,DWORD PTR [rsp+0x70]
   140001947:	mov    r8d,edi
   14000194a:	mov    rdx,rsi
   14000194d:	mov    rcx,rbp
   140001950:	mov    QWORD PTR [rsp+0x20],rax
   140001955:	call   QWORD PTR [rip+0x773d]        # 0x140009098
   14000195b:	jmp    0x140001962
   14000195d:	mov    eax,0x1
   140001962:	mov    rbx,QWORD PTR [rsp+0x50]
   140001967:	mov    rbp,QWORD PTR [rsp+0x58]
   14000196c:	mov    rsi,QWORD PTR [rsp+0x60]
   140001971:	add    rsp,0x40
   140001975:	pop    rdi
   140001976:	ret    
   140001977:	int3   
   140001978:	mov    QWORD PTR [rsp+0x8],rbx
   14000197d:	mov    QWORD PTR [rsp+0x10],rsi
   140001982:	push   rdi
   140001983:	sub    rsp,0x30
   140001987:	cmp    QWORD PTR [rcx],0x0
   14000198b:	mov    rdi,r8
   14000198e:	mov    rsi,rdx
   140001991:	mov    rbx,rcx
   140001994:	je     0x1400019db
   140001996:	lea    rcx,[rip+0x59eb]        # 0x140007388
   14000199d:	call   QWORD PTR [rip+0x477d]        # 0x140006120
   1400019a3:	test   rax,rax
   1400019a6:	je     0x1400019ef
   1400019a8:	lea    rdx,[rip+0x59f9]        # 0x1400073a8
   1400019af:	mov    rcx,rax
   1400019b2:	call   QWORD PTR [rip+0x4788]        # 0x140006140
   1400019b8:	test   rax,rax
   1400019bb:	je     0x1400019ef
   1400019bd:	mov    rcx,QWORD PTR [rbx]
   1400019c0:	and    QWORD PTR [rsp+0x28],0x0
   1400019c6:	xor    r9d,r9d
   1400019c9:	mov    QWORD PTR [rsp+0x20],rcx
   1400019ce:	xor    r8d,r8d
   1400019d1:	mov    rdx,rdi
   1400019d4:	mov    rcx,rsi
   1400019d7:	call   rax
   1400019d9:	jmp    0x1400019f4
   1400019db:	cmp    DWORD PTR [rcx+0x8],0x0
   1400019df:	je     0x1400019ef
   1400019e1:	mov    rdx,r8
   1400019e4:	mov    rcx,rsi
   1400019e7:	call   QWORD PTR [rip+0x76b3]        # 0x1400090a0
   1400019ed:	jmp    0x1400019f4
   1400019ef:	mov    eax,0x1
   1400019f4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400019f9:	mov    rsi,QWORD PTR [rsp+0x48]
   1400019fe:	add    rsp,0x30
   140001a02:	pop    rdi
   140001a03:	ret    
   140001a04:	mov    QWORD PTR [rsp+0x8],rbx
   140001a09:	push   rdi
   140001a0a:	sub    rsp,0x20
   140001a0e:	mov    rbx,rcx
   140001a11:	mov    rcx,QWORD PTR [rcx+0x10]
   140001a15:	mov    rdi,rdx
   140001a18:	test   rcx,rcx
   140001a1b:	je     0x140001a2a
   140001a1d:	mov    r8,rdx
   140001a20:	mov    rdx,QWORD PTR [rbx]
   140001a23:	call   0x140001978
   140001a28:	jmp    0x140001a91
   140001a2a:	cmp    BYTE PTR [rip+0x76ff],0x0        # 0x140009130
   140001a31:	jne    0x140001a6e
   140001a33:	lea    rcx,[rip+0x594e]        # 0x140007388
   140001a3a:	call   QWORD PTR [rip+0x46e0]        # 0x140006120
   140001a40:	test   rax,rax
   140001a43:	je     0x140001a5e
   140001a45:	lea    rdx,[rip+0x5974]        # 0x1400073c0
   140001a4c:	mov    rcx,rax
   140001a4f:	call   QWORD PTR [rip+0x46eb]        # 0x140006140
   140001a55:	mov    QWORD PTR [rip+0x76cc],rax        # 0x140009128
   140001a5c:	jmp    0x140001a65
   140001a5e:	mov    rax,QWORD PTR [rip+0x76c3]        # 0x140009128
   140001a65:	mov    BYTE PTR [rip+0x76c4],0x1        # 0x140009130
   140001a6c:	jmp    0x140001a75
   140001a6e:	mov    rax,QWORD PTR [rip+0x76b3]        # 0x140009128
   140001a75:	mov    rcx,QWORD PTR [rbx]
   140001a78:	mov    rdx,rdi
   140001a7b:	test   rax,rax
   140001a7e:	je     0x140001a8b
   140001a80:	mov    r8d,DWORD PTR [rbx+0x8]
   140001a84:	xor    r9d,r9d
   140001a87:	call   rax
   140001a89:	jmp    0x140001a91
   140001a8b:	call   QWORD PTR [rip+0x760f]        # 0x1400090a0
   140001a91:	mov    rbx,QWORD PTR [rsp+0x30]
   140001a96:	add    rsp,0x20
   140001a9a:	pop    rdi
   140001a9b:	ret    
   140001a9c:	mov    r11,rsp
   140001a9f:	mov    QWORD PTR [r11+0x10],rbx
   140001aa3:	push   rdi
   140001aa4:	sub    rsp,0x30
   140001aa8:	and    QWORD PTR [r11+0x8],0x0
   140001aad:	mov    rbx,rcx
   140001ab0:	mov    rcx,QWORD PTR [rcx+0x10]
   140001ab4:	mov    edi,r9d
   140001ab7:	mov    rax,r8
   140001aba:	mov    r10,rdx
   140001abd:	test   rcx,rcx
   140001ac0:	je     0x140001adb
   140001ac2:	lea    rdx,[r11+0x8]
   140001ac6:	mov    QWORD PTR [r11-0x10],rdx
   140001aca:	mov    DWORD PTR [r11-0x18],r9d
   140001ace:	xor    r9d,r9d
   140001ad1:	mov    rdx,r10
   140001ad4:	call   0x1400018c0
   140001ad9:	jmp    0x140001af4
   140001adb:	lea    rcx,[rsp+0x40]
   140001ae0:	xor    r8d,r8d
   140001ae3:	mov    rdx,rax
   140001ae6:	mov    QWORD PTR [rsp+0x20],rcx
   140001aeb:	mov    rcx,r10
   140001aee:	call   QWORD PTR [rip+0x75a4]        # 0x140009098
   140001af4:	mov    r11d,eax
   140001af7:	test   eax,eax
   140001af9:	jne    0x140001b21
   140001afb:	mov    rcx,QWORD PTR [rbx]
   140001afe:	test   rcx,rcx
   140001b01:	je     0x140001b10
   140001b03:	call   QWORD PTR [rip+0x759f]        # 0x1400090a8
   140001b09:	and    QWORD PTR [rbx],0x0
   140001b0d:	mov    r11d,eax
   140001b10:	mov    rax,QWORD PTR [rsp+0x40]
   140001b15:	and    edi,0x300
   140001b1b:	mov    QWORD PTR [rbx],rax
   140001b1e:	mov    DWORD PTR [rbx+0x8],edi
   140001b21:	mov    eax,r11d
   140001b24:	mov    rbx,QWORD PTR [rsp+0x48]
   140001b29:	add    rsp,0x30
   140001b2d:	pop    rdi
   140001b2e:	ret    
   140001b2f:	int3   
   140001b30:	mov    r11,rsp
   140001b33:	mov    QWORD PTR [r11+0x8],rbx
   140001b37:	mov    QWORD PTR [r11+0x10],rsi
   140001b3b:	push   rdi
   140001b3c:	sub    rsp,0x40
   140001b40:	mov    eax,DWORD PTR [r9]
   140001b43:	mov    rbx,r8
   140001b46:	mov    rdi,r9
   140001b49:	add    eax,eax
   140001b4b:	xor    esi,esi
   140001b4d:	xor    r8d,r8d
   140001b50:	mov    DWORD PTR [r9],esi
   140001b53:	mov    rcx,QWORD PTR [rcx]
   140001b56:	mov    DWORD PTR [rsp+0x30],eax
   140001b5a:	lea    rax,[r11-0x18]
   140001b5e:	lea    r9,[r11+0x20]
   140001b62:	mov    QWORD PTR [r11-0x20],rax
   140001b66:	mov    QWORD PTR [r11-0x28],rbx
   140001b6a:	call   QWORD PTR [rip+0x7540]        # 0x1400090b0
   140001b70:	test   eax,eax
   140001b72:	jne    0x140001bb2
   140001b74:	cmp    DWORD PTR [rsp+0x68],0x1
   140001b79:	je     0x140001b89
   140001b7b:	cmp    DWORD PTR [rsp+0x68],0x2
   140001b80:	je     0x140001b89
   140001b82:	mov    eax,0xd
   140001b87:	jmp    0x140001bb2
   140001b89:	mov    ecx,DWORD PTR [rsp+0x30]
   140001b8d:	test   rbx,rbx
   140001b90:	je     0x140001bac
   140001b92:	test   ecx,ecx
   140001b94:	je     0x140001ba9
   140001b96:	test   cl,0x1
   140001b99:	jne    0x140001b82
   140001b9b:	mov    eax,ecx
   140001b9d:	shr    rax,1
   140001ba0:	cmp    WORD PTR [rbx+rax*2-0x2],si
   140001ba5:	je     0x140001bac
   140001ba7:	jmp    0x140001b82
   140001ba9:	mov    WORD PTR [rbx],si
   140001bac:	shr    ecx,1
   140001bae:	xor    eax,eax
   140001bb0:	mov    DWORD PTR [rdi],ecx
   140001bb2:	mov    rbx,QWORD PTR [rsp+0x50]
   140001bb7:	mov    rsi,QWORD PTR [rsp+0x58]
   140001bbc:	add    rsp,0x40
   140001bc0:	pop    rdi
   140001bc1:	ret    
   140001bc2:	int3   
   140001bc3:	int3   
   140001bc4:	lea    eax,[rcx+rdx*1]
   140001bc7:	cmp    eax,edx
   140001bc9:	jae    0x140001bd1
   140001bcb:	mov    eax,0x80070216
   140001bd0:	ret    
   140001bd1:	mov    DWORD PTR [r8],eax
   140001bd4:	xor    eax,eax
   140001bd6:	ret    
   140001bd7:	int3   
   140001bd8:	int3   
   140001bd9:	int3   
   140001bda:	int3   
   140001bdb:	int3   
   140001bdc:	int3   
   140001bdd:	int3   
   140001bde:	int3   
   140001bdf:	int3   
   140001be0:	int3   
   140001be1:	int3   
   140001be2:	int3   
   140001be3:	int3   
   140001be4:	mov    eax,edx
   140001be6:	mov    r9d,ecx
   140001be9:	imul   r9,rax
   140001bed:	mov    eax,0xffffffff
   140001bf2:	cmp    r9,rax
   140001bf5:	ja     0x140001bfd
   140001bf7:	mov    DWORD PTR [r8],r9d
   140001bfa:	xor    eax,eax
   140001bfc:	ret    
   140001bfd:	mov    eax,0x80070216
   140001c02:	ret    
   140001c03:	int3   
   140001c04:	int3   
   140001c05:	int3   
   140001c06:	int3   
   140001c07:	int3   
   140001c08:	int3   
   140001c09:	int3   
   140001c0a:	int3   
   140001c0b:	int3   
   140001c0c:	int3   
   140001c0d:	int3   
   140001c0e:	int3   
   140001c0f:	int3   
   140001c10:	int3   
   140001c11:	int3   
   140001c12:	int3   
   140001c13:	int3   
   140001c14:	rex push rbx
   140001c16:	sub    rsp,0x20
   140001c1a:	cmp    DWORD PTR [rdx+0x20],0x0
   140001c1e:	mov    r8,QWORD PTR [rdx+0x28]
   140001c22:	lea    rax,[rip+0x4c57]        # 0x140006880
   140001c29:	mov    rbx,rdx
   140001c2c:	mov    rdx,QWORD PTR [rdx+0x18]
   140001c30:	lea    rcx,[rip+0x4c99]        # 0x1400068d0
   140001c37:	cmovne rcx,rax
   140001c3b:	call   0x140004814
   140001c40:	mov    ecx,DWORD PTR [rbx+0x40]
   140001c43:	xor    edx,edx
   140001c45:	or     ecx,0x806d0001
   140001c4b:	call   0x140005830
   140001c50:	int3   
   140001c51:	int3   
   140001c52:	int3   
   140001c53:	int3   
   140001c54:	int3   
   140001c55:	int3   
   140001c56:	int3   
   140001c57:	int3   
   140001c58:	int3   
   140001c59:	int3   
   140001c5a:	int3   
   140001c5b:	int3   
   140001c5c:	int3   
   140001c5d:	int3   
   140001c5e:	int3   
   140001c5f:	int3   
   140001c60:	int3   
   140001c61:	int3   
   140001c62:	int3   
   140001c63:	int3   
   140001c64:	lea    rax,[rip+0xffffffffffffffa9]        # 0x140001c14
   140001c6b:	mov    QWORD PTR [rip+0x74e6],rax        # 0x140009158
   140001c72:	mov    eax,0x1
   140001c77:	ret    
   140001c78:	int3   
   140001c79:	int3   
   140001c7a:	int3   
   140001c7b:	int3   
   140001c7c:	int3   
   140001c7d:	int3   
   140001c7e:	int3   
   140001c7f:	int3   
   140001c80:	int3   
   140001c81:	int3   
   140001c82:	int3   
   140001c83:	int3   
   140001c84:	mov    r11,rsp
   140001c87:	mov    QWORD PTR [r11+0x8],rsi
   140001c8b:	mov    QWORD PTR [r11+0x10],rdi
   140001c8f:	lea    rsi,[rip+0x4c9a]        # 0x140006930
   140001c96:	lea    rdi,[rip+0x4c83]        # 0x140006920
   140001c9d:	mov    ecx,0x8
   140001ca2:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140001ca5:	mov    rsi,QWORD PTR [r11+0x8]
   140001ca9:	mov    rdi,QWORD PTR [r11+0x10]
   140001cad:	mov    eax,0x0
   140001cb2:	setae  al
   140001cb5:	ret    
   140001cb6:	int3   
   140001cb7:	int3   
   140001cb8:	int3   
   140001cb9:	int3   
   140001cba:	int3   
   140001cbb:	int3   
   140001cbc:	int3   
   140001cbd:	int3   
   140001cbe:	int3   
   140001cbf:	int3   
   140001cc0:	int3   
   140001cc1:	int3   
   140001cc2:	int3   
   140001cc3:	int3   
   140001cc4:	rex push rbx
   140001cc6:	sub    rsp,0x20
   140001cca:	xor    edx,edx
   140001ccc:	mov    rbx,rcx
   140001ccf:	lea    r8d,[rdx+0x40]
   140001cd3:	call   0x140004af2
   140001cd8:	mov    rcx,rbx
   140001cdb:	mov    DWORD PTR [rbx],0x40
   140001ce1:	call   QWORD PTR [rip+0x4431]        # 0x140006118
   140001ce7:	mov    rax,rbx
   140001cea:	add    rsp,0x20
   140001cee:	pop    rbx
   140001cef:	ret    
   140001cf0:	int3   
   140001cf1:	int3   
   140001cf2:	int3   
   140001cf3:	int3   
   140001cf4:	int3   
   140001cf5:	int3   
   140001cf6:	int3   
   140001cf7:	int3   
   140001cf8:	int3   
   140001cf9:	int3   
   140001cfa:	int3   
   140001cfb:	int3   
   140001cfc:	int3   
   140001cfd:	int3   
   140001cfe:	int3   
   140001cff:	int3   
   140001d00:	int3   
   140001d01:	int3   
   140001d02:	int3   
   140001d03:	int3   
   140001d04:	mov    rax,QWORD PTR [rcx+0x8]
   140001d08:	ret    
   140001d09:	int3   
   140001d0a:	int3   
   140001d0b:	int3   
   140001d0c:	int3   
   140001d0d:	int3   
   140001d0e:	int3   
   140001d0f:	int3   
   140001d10:	int3   
   140001d11:	int3   
   140001d12:	int3   
   140001d13:	int3   
   140001d14:	mov    rax,QWORD PTR [rcx+0x10]
   140001d18:	ret    
   140001d19:	int3   
   140001d1a:	int3   
   140001d1b:	int3   
   140001d1c:	int3   
   140001d1d:	int3   
   140001d1e:	int3   
   140001d1f:	int3   
   140001d20:	int3   
   140001d21:	int3   
   140001d22:	int3   
   140001d23:	int3   
   140001d24:	mov    rax,QWORD PTR [rcx+0x30]
   140001d28:	ret    
   140001d29:	int3   
   140001d2a:	int3   
   140001d2b:	int3   
   140001d2c:	int3   
   140001d2d:	int3   
   140001d2e:	int3   
   140001d2f:	int3   
   140001d30:	int3   
   140001d31:	int3   
   140001d32:	int3   
   140001d33:	int3   
   140001d34:	sub    rsp,0x158
   140001d3b:	mov    rax,QWORD PTR [rip+0x72e6]        # 0x140009028
   140001d42:	xor    rax,rsp
   140001d45:	mov    QWORD PTR [rsp+0x140],rax
   140001d4d:	lea    rcx,[rsp+0x20]
   140001d52:	xor    edx,edx
   140001d54:	mov    r8d,0x114
   140001d5a:	call   0x140004af2
   140001d5f:	lea    rcx,[rsp+0x20]
   140001d64:	mov    DWORD PTR [rsp+0x20],0x114
   140001d6c:	call   QWORD PTR [rip+0x439e]        # 0x140006110
   140001d72:	xor    eax,eax
   140001d74:	cmp    DWORD PTR [rsp+0x30],0x1
   140001d79:	je     0x140001d83
   140001d7b:	cmp    DWORD PTR [rsp+0x30],0x2
   140001d80:	sete   al
   140001d83:	mov    rcx,QWORD PTR [rsp+0x140]
   140001d8b:	xor    rcx,rsp
   140001d8e:	call   0x1400049c0
   140001d93:	add    rsp,0x158
   140001d9a:	ret    
   140001d9b:	int3   
   140001d9c:	int3   
   140001d9d:	int3   
   140001d9e:	int3   
   140001d9f:	int3   
   140001da0:	int3   
   140001da1:	int3   
   140001da2:	int3   
   140001da3:	int3   
   140001da4:	sub    rsp,0x158
   140001dab:	mov    rax,QWORD PTR [rip+0x7276]        # 0x140009028
   140001db2:	xor    rax,rsp
   140001db5:	mov    QWORD PTR [rsp+0x140],rax
   140001dbd:	cmp    DWORD PTR [rip+0x7374],0x0        # 0x140009138
   140001dc4:	je     0x140001dce
   140001dc6:	mov    eax,DWORD PTR [rip+0x7368]        # 0x140009134
   140001dcc:	jmp    0x140001e34
   140001dce:	lea    rcx,[rsp+0x20]
   140001dd3:	xor    edx,edx
   140001dd5:	mov    r8d,0x114
   140001ddb:	call   0x140004af2
   140001de0:	lea    rcx,[rsp+0x20]
   140001de5:	mov    DWORD PTR [rsp+0x20],0x114
   140001ded:	call   QWORD PTR [rip+0x431d]        # 0x140006110
   140001df3:	cmp    DWORD PTR [rsp+0x30],0x2
   140001df8:	mov    r11d,0x1
   140001dfe:	ja     0x140001e09
   140001e00:	jne    0x140001e27
   140001e02:	cmp    DWORD PTR [rsp+0x24],0x5
   140001e07:	jbe    0x140001e14
   140001e09:	mov    eax,r11d
   140001e0c:	mov    DWORD PTR [rip+0x7322],eax        # 0x140009134
   140001e12:	jmp    0x140001e2d
   140001e14:	jne    0x140001e27
   140001e16:	mov    eax,DWORD PTR [rip+0x7318]        # 0x140009134
   140001e1c:	cmp    DWORD PTR [rsp+0x28],r11d
   140001e21:	cmovae eax,r11d
   140001e25:	jmp    0x140001e0c
   140001e27:	mov    eax,DWORD PTR [rip+0x7307]        # 0x140009134
   140001e2d:	mov    DWORD PTR [rip+0x7304],r11d        # 0x140009138
   140001e34:	mov    rcx,QWORD PTR [rsp+0x140]
   140001e3c:	xor    rcx,rsp
   140001e3f:	call   0x1400049c0
   140001e44:	add    rsp,0x158
   140001e4b:	ret    
   140001e4c:	int3   
   140001e4d:	int3   
   140001e4e:	int3   
   140001e4f:	int3   
   140001e50:	int3   
   140001e51:	int3   
   140001e52:	int3   
   140001e53:	int3   
   140001e54:	rex push rbx
   140001e56:	sub    rsp,0x150
   140001e5d:	mov    rax,QWORD PTR [rip+0x71c4]        # 0x140009028
   140001e64:	xor    rax,rsp
   140001e67:	mov    QWORD PTR [rsp+0x140],rax
   140001e6f:	xor    ebx,ebx
   140001e71:	cmp    DWORD PTR [rip+0x72c9],ebx        # 0x140009140
   140001e77:	je     0x140001e81
   140001e79:	mov    eax,DWORD PTR [rip+0x72bd]        # 0x14000913c
   140001e7f:	jmp    0x140001ef2
   140001e81:	lea    rcx,[rsp+0x20]
   140001e86:	xor    edx,edx
   140001e88:	mov    r8d,0x11c
   140001e8e:	call   0x140004af2
   140001e93:	mov    edx,0x2
   140001e98:	mov    r8b,0x3
   140001e9b:	xor    ecx,ecx
   140001e9d:	mov    DWORD PTR [rsp+0x20],0x11c
   140001ea5:	mov    DWORD PTR [rsp+0x24],0x6
   140001ead:	mov    DWORD PTR [rsp+0x28],edx
   140001eb1:	call   QWORD PTR [rip+0x4249]        # 0x140006100
   140001eb7:	mov    r8b,0x3
   140001eba:	mov    rcx,rax
   140001ebd:	mov    edx,0x1
   140001ec2:	call   QWORD PTR [rip+0x4238]        # 0x140006100
   140001ec8:	lea    rcx,[rsp+0x20]
   140001ecd:	mov    edx,0x3
   140001ed2:	mov    r8,rax
   140001ed5:	call   QWORD PTR [rip+0x422d]        # 0x140006108
   140001edb:	mov    DWORD PTR [rip+0x725b],0x1        # 0x140009140
   140001ee5:	test   eax,eax
   140001ee7:	setne  bl
   140001eea:	mov    DWORD PTR [rip+0x724c],ebx        # 0x14000913c
   140001ef0:	mov    eax,ebx
   140001ef2:	mov    rcx,QWORD PTR [rsp+0x140]
   140001efa:	xor    rcx,rsp
   140001efd:	call   0x1400049c0
   140001f02:	add    rsp,0x150
   140001f09:	pop    rbx
   140001f0a:	ret    
   140001f0b:	int3   
   140001f0c:	int3   
   140001f0d:	int3   
   140001f0e:	int3   
   140001f0f:	int3   
   140001f10:	int3   
   140001f11:	int3   
   140001f12:	int3   
   140001f13:	int3   
   140001f14:	rex push rbx
   140001f16:	sub    rsp,0x150
   140001f1d:	mov    rax,QWORD PTR [rip+0x7104]        # 0x140009028
   140001f24:	xor    rax,rsp
   140001f27:	mov    QWORD PTR [rsp+0x140],rax
   140001f2f:	xor    ebx,ebx
   140001f31:	cmp    DWORD PTR [rip+0x7211],ebx        # 0x140009148
   140001f37:	je     0x140001f41
   140001f39:	mov    eax,DWORD PTR [rip+0x7205]        # 0x140009144
   140001f3f:	jmp    0x140001f8c
   140001f41:	lea    rcx,[rsp+0x20]
   140001f46:	xor    edx,edx
   140001f48:	mov    r8d,0x114
   140001f4e:	call   0x140004af2
   140001f53:	lea    rcx,[rsp+0x20]
   140001f58:	mov    DWORD PTR [rsp+0x20],0x114
   140001f60:	call   QWORD PTR [rip+0x41aa]        # 0x140006110
   140001f66:	cmp    DWORD PTR [rsp+0x30],0x2
   140001f6b:	mov    r11d,0x1
   140001f71:	jne    0x140001f7d
   140001f73:	cmp    DWORD PTR [rsp+0x24],0x6
   140001f78:	jb     0x140001f7d
   140001f7a:	mov    ebx,r11d
   140001f7d:	mov    DWORD PTR [rip+0x71c1],ebx        # 0x140009144
   140001f83:	mov    DWORD PTR [rip+0x71be],r11d        # 0x140009148
   140001f8a:	mov    eax,ebx
   140001f8c:	mov    rcx,QWORD PTR [rsp+0x140]
   140001f94:	xor    rcx,rsp
   140001f97:	call   0x1400049c0
   140001f9c:	add    rsp,0x150
   140001fa3:	pop    rbx
   140001fa4:	ret    
   140001fa5:	int3   
   140001fa6:	int3   
   140001fa7:	int3   
   140001fa8:	int3   
   140001fa9:	int3   
   140001faa:	int3   
   140001fab:	int3   
   140001fac:	int3   
   140001fad:	int3   
   140001fae:	int3   
   140001faf:	int3   
   140001fb0:	int3   
   140001fb1:	int3   
   140001fb2:	int3   
   140001fb3:	int3   
   140001fb4:	rex push rbx
   140001fb6:	sub    rsp,0x150
   140001fbd:	mov    rax,QWORD PTR [rip+0x7064]        # 0x140009028
   140001fc4:	xor    rax,rsp
   140001fc7:	mov    QWORD PTR [rsp+0x140],rax
   140001fcf:	xor    ebx,ebx
   140001fd1:	cmp    DWORD PTR [rip+0x7179],ebx        # 0x140009150
   140001fd7:	je     0x140001fe1
   140001fd9:	mov    eax,DWORD PTR [rip+0x716d]        # 0x14000914c
   140001fdf:	jmp    0x140002046
   140001fe1:	lea    rcx,[rsp+0x20]
   140001fe6:	xor    edx,edx
   140001fe8:	mov    r8d,0x11c
   140001fee:	call   0x140004af2
   140001ff3:	lea    rcx,[rsp+0x20]
   140001ff8:	mov    DWORD PTR [rsp+0x20],0x11c
   140002000:	call   QWORD PTR [rip+0x410a]        # 0x140006110
   140002006:	cmp    DWORD PTR [rsp+0x30],0x2
   14000200b:	mov    r11d,0x1
   140002011:	jne    0x140002037
   140002013:	cmp    DWORD PTR [rsp+0x24],0x6
   140002018:	jne    0x140002037
   14000201a:	cmp    DWORD PTR [rsp+0x28],ebx
   14000201e:	jne    0x140002037
   140002020:	cmp    BYTE PTR [rsp+0x13a],r11b
   140002028:	jne    0x140002037
   14000202a:	cmp    WORD PTR [rsp+0x134],bx
   140002032:	jne    0x140002037
   140002034:	mov    ebx,r11d
   140002037:	mov    DWORD PTR [rip+0x710f],ebx        # 0x14000914c
   14000203d:	mov    DWORD PTR [rip+0x710c],r11d        # 0x140009150
   140002044:	mov    eax,ebx
   140002046:	mov    rcx,QWORD PTR [rsp+0x140]
   14000204e:	xor    rcx,rsp
   140002051:	call   0x1400049c0
   140002056:	add    rsp,0x150
   14000205d:	pop    rbx
   14000205e:	ret    
   14000205f:	int3   
   140002060:	int3   
   140002061:	int3   
   140002062:	int3   
   140002063:	int3   
   140002064:	int3   
   140002065:	int3   
   140002066:	int3   
   140002067:	int3   
   140002068:	int3   
   140002069:	int3   
   14000206a:	int3   
   14000206b:	int3   
   14000206c:	int3   
   14000206d:	int3   
   14000206e:	int3   
   14000206f:	int3   
   140002070:	int3   
   140002071:	int3   
   140002072:	int3   
   140002073:	int3   
   140002074:	rex push rbx
   140002076:	sub    rsp,0x20
   14000207a:	and    DWORD PTR [rsp+0x30],0x0
   14000207f:	lea    rcx,[rip+0x48ca]        # 0x140006950
   140002086:	call   QWORD PTR [rip+0x4094]        # 0x140006120
   14000208c:	lea    rdx,[rip+0x48ad]        # 0x140006940
   140002093:	mov    rcx,rax
   140002096:	call   QWORD PTR [rip+0x40a4]        # 0x140006140
   14000209c:	mov    rbx,rax
   14000209f:	test   rax,rax
   1400020a2:	je     0x1400020b4
   1400020a4:	call   QWORD PTR [rip+0x404e]        # 0x1400060f8
   1400020aa:	lea    rdx,[rsp+0x30]
   1400020af:	mov    rcx,rax
   1400020b2:	call   rbx
   1400020b4:	mov    eax,DWORD PTR [rsp+0x30]
   1400020b8:	add    rsp,0x20
   1400020bc:	pop    rbx
   1400020bd:	ret    
   1400020be:	int3   
   1400020bf:	int3   
   1400020c0:	int3   
   1400020c1:	int3   
   1400020c2:	int3   
   1400020c3:	int3   
   1400020c4:	sub    rsp,0x58
   1400020c8:	xor    edx,edx
   1400020ca:	lea    rcx,[rsp+0x20]
   1400020cf:	lea    r8d,[rdx+0x30]
   1400020d3:	call   0x140004af2
   1400020d8:	lea    rcx,[rsp+0x20]
   1400020dd:	call   QWORD PTR [rip+0x400d]        # 0x1400060f0
   1400020e3:	xor    eax,eax
   1400020e5:	cmp    WORD PTR [rsp+0x20],0x9
   1400020eb:	sete   al
   1400020ee:	add    rsp,0x58
   1400020f2:	ret    
   1400020f3:	int3   
   1400020f4:	int3   
   1400020f5:	int3   
   1400020f6:	int3   
   1400020f7:	int3   
   1400020f8:	int3   
   1400020f9:	int3   
   1400020fa:	int3   
   1400020fb:	int3   
   1400020fc:	int3   
   1400020fd:	int3   
   1400020fe:	int3   
   1400020ff:	int3   
   140002100:	int3   
   140002101:	int3   
   140002102:	int3   
   140002103:	int3   
   140002104:	rex push rbx
   140002106:	sub    rsp,0x40
   14000210a:	xor    ebx,ebx
   14000210c:	xor    r9d,r9d
   14000210f:	xor    r8d,r8d
   140002112:	mov    QWORD PTR [rsp+0x30],rbx
   140002117:	mov    edx,0x40000000
   14000211c:	mov    DWORD PTR [rsp+0x28],0x80
   140002124:	mov    DWORD PTR [rsp+0x20],0x3
   14000212c:	call   QWORD PTR [rip+0x3fb6]        # 0x1400060e8
   140002132:	cmp    rax,0xffffffffffffffff
   140002136:	jne    0x140002148
   140002138:	call   QWORD PTR [rip+0x3ffa]        # 0x140006138
   14000213e:	cmp    eax,0x20
   140002141:	jne    0x140002151
   140002143:	lea    ebx,[rax-0x1f]
   140002146:	jmp    0x140002151
   140002148:	mov    rcx,rax
   14000214b:	call   QWORD PTR [rip+0x3fff]        # 0x140006150
   140002151:	mov    eax,ebx
   140002153:	add    rsp,0x40
   140002157:	pop    rbx
   140002158:	ret    
   140002159:	int3   
   14000215a:	int3   
   14000215b:	int3   
   14000215c:	int3   
   14000215d:	int3   
   14000215e:	int3   
   14000215f:	int3   
   140002160:	int3   
   140002161:	int3   
   140002162:	int3   
   140002163:	int3   
   140002164:	mov    QWORD PTR [rsp+0x10],rbx
   140002169:	push   rsi
   14000216a:	sub    rsp,0x450
   140002171:	mov    rax,QWORD PTR [rip+0x6eb0]        # 0x140009028
   140002178:	xor    rax,rsp
   14000217b:	mov    QWORD PTR [rsp+0x440],rax
   140002183:	mov    rbx,rcx
   140002186:	lea    rcx,[rsp+0x22]
   14000218b:	xor    esi,esi
   14000218d:	xor    edx,edx
   14000218f:	mov    r8d,0x206
   140002195:	mov    WORD PTR [rsp+0x20],si
   14000219a:	call   0x140004af2
   14000219f:	lea    rcx,[rsp+0x20]
   1400021a4:	mov    edx,0x104
   1400021a9:	call   QWORD PTR [rip+0x3f31]        # 0x1400060e0
   1400021af:	test   eax,eax
   1400021b1:	je     0x140002204
   1400021b3:	cmp    eax,0x104
   1400021b8:	ja     0x140002204
   1400021ba:	lea    rcx,[rsp+0x232]
   1400021c2:	xor    edx,edx
   1400021c4:	mov    r8d,0x206
   1400021ca:	mov    WORD PTR [rsp+0x230],si
   1400021d2:	call   0x140004af2
   1400021d7:	lea    r8,[rsp+0x20]
   1400021dc:	lea    rdx,[rip+0x4ce5]        # 0x140006ec8
   1400021e3:	lea    rcx,[rsp+0x230]
   1400021eb:	mov    r9,rbx
   1400021ee:	call   QWORD PTR [rip+0x414c]        # 0x140006340
   1400021f4:	lea    rcx,[rsp+0x230]
   1400021fc:	call   QWORD PTR [rip+0x3f2e]        # 0x140006130
   140002202:	jmp    0x140002206
   140002204:	xor    eax,eax
   140002206:	mov    rcx,QWORD PTR [rsp+0x440]
   14000220e:	xor    rcx,rsp
   140002211:	call   0x1400049c0
   140002216:	mov    rbx,QWORD PTR [rsp+0x468]
   14000221e:	add    rsp,0x450
   140002225:	pop    rsi
   140002226:	ret    
   140002227:	int3   
   140002228:	int3   
   140002229:	int3   
   14000222a:	int3   
   14000222b:	int3   
   14000222c:	int3   
   14000222d:	int3   
   14000222e:	int3   
   14000222f:	int3   
   140002230:	int3   
   140002231:	int3   
   140002232:	int3   
   140002233:	int3   
   140002234:	sub    rsp,0x58
   140002238:	test   rcx,rcx
   14000223b:	jne    0x140002241
   14000223d:	xor    eax,eax
   14000223f:	jmp    0x140002291
   140002241:	mov    rax,QWORD PTR [rsp+0xa8]
   140002249:	mov    QWORD PTR [rsp+0x48],rax
   14000224e:	mov    rax,QWORD PTR [rsp+0xa0]
   140002256:	mov    QWORD PTR [rsp+0x40],rax
   14000225b:	mov    rax,QWORD PTR [rsp+0x98]
   140002263:	mov    QWORD PTR [rsp+0x38],rax
   140002268:	mov    rax,QWORD PTR [rsp+0x90]
   140002270:	mov    QWORD PTR [rsp+0x30],rax
   140002275:	mov    eax,DWORD PTR [rsp+0x88]
   14000227c:	mov    DWORD PTR [rsp+0x28],eax
   140002280:	mov    eax,DWORD PTR [rsp+0x80]
   140002287:	mov    DWORD PTR [rsp+0x20],eax
   14000228b:	call   QWORD PTR [rip+0x3e47]        # 0x1400060d8
   140002291:	add    rsp,0x58
   140002295:	ret    
   140002296:	int3   
   140002297:	int3   
   140002298:	int3   
   140002299:	int3   
   14000229a:	int3   
   14000229b:	int3   
   14000229c:	int3   
   14000229d:	int3   
   14000229e:	int3   
   14000229f:	int3   
   1400022a0:	int3   
   1400022a1:	int3   
   1400022a2:	int3   
   1400022a3:	int3   
   1400022a4:	sub    rsp,0x68
   1400022a8:	test   rdx,rdx
   1400022ab:	jne    0x1400022b1
   1400022ad:	xor    eax,eax
   1400022af:	jmp    0x14000230e
   1400022b1:	mov    rax,QWORD PTR [rsp+0xc0]
   1400022b9:	mov    QWORD PTR [rsp+0x50],rax
   1400022be:	mov    rax,QWORD PTR [rsp+0xb8]
   1400022c6:	mov    QWORD PTR [rsp+0x48],rax
   1400022cb:	mov    rax,QWORD PTR [rsp+0xb0]
   1400022d3:	mov    QWORD PTR [rsp+0x40],rax
   1400022d8:	mov    rax,QWORD PTR [rsp+0xa8]
   1400022e0:	mov    QWORD PTR [rsp+0x38],rax
   1400022e5:	mov    eax,DWORD PTR [rsp+0xa0]
   1400022ec:	mov    DWORD PTR [rsp+0x30],eax
   1400022f0:	mov    eax,DWORD PTR [rsp+0x98]
   1400022f7:	mov    DWORD PTR [rsp+0x28],eax
   1400022fb:	mov    rax,QWORD PTR [rsp+0x90]
   140002303:	mov    QWORD PTR [rsp+0x20],rax
   140002308:	call   QWORD PTR [rip+0x6daa]        # 0x1400090b8
   14000230e:	add    rsp,0x68
   140002312:	ret    
   140002313:	int3   
   140002314:	int3   
   140002315:	int3   
   140002316:	int3   
   140002317:	int3   
   140002318:	int3   
   140002319:	int3   
   14000231a:	int3   
   14000231b:	int3   
   14000231c:	int3   
   14000231d:	int3   
   14000231e:	int3   
   14000231f:	int3   
   140002320:	int3   
   140002321:	int3   
   140002322:	int3   
   140002323:	int3   
   140002324:	mov    QWORD PTR [rsp+0x8],rbx
   140002329:	mov    QWORD PTR [rsp+0x10],rsi
   14000232e:	push   rbp
   14000232f:	push   rdi
   140002330:	push   r12
   140002332:	lea    rbp,[rsp-0x47]
   140002337:	sub    rsp,0xf0
   14000233e:	mov    rsi,rcx
   140002341:	mov    ebx,r8d
   140002344:	mov    rdi,rdx
   140002347:	mov    r12d,0x68
   14000234d:	lea    rcx,[rbp-0x29]
   140002351:	xor    edx,edx
   140002353:	mov    r8d,r12d
   140002356:	call   0x140004af2
   14000235b:	xor    r11d,r11d
   14000235e:	mov    DWORD PTR [rbp-0x29],r12d
   140002362:	xor    r12d,r12d
   140002365:	mov    QWORD PTR [rbp-0x49],r11
   140002369:	mov    QWORD PTR [rbp-0x41],r11
   14000236d:	mov    QWORD PTR [rbp-0x39],r11
   140002371:	mov    DWORD PTR [rbp+0x13],0x1
   140002378:	mov    WORD PTR [rbp+0x17],r12w
   14000237d:	call   QWORD PTR [rip+0x3d75]        # 0x1400060f8
   140002383:	lea    r8,[rbp+0x7f]
   140002387:	mov    edx,0x2000000
   14000238c:	mov    rcx,rax
   14000238f:	call   QWORD PTR [rip+0x6d2b]        # 0x1400090c0
   140002395:	test   eax,eax
   140002397:	je     0x140002404
   140002399:	mov    rcx,QWORD PTR [rbp+0x7f]
   14000239d:	lea    rax,[rbp-0x49]
   1400023a1:	xor    r9d,r9d
   1400023a4:	mov    QWORD PTR [rsp+0x50],rax
   1400023a9:	lea    rax,[rbp-0x29]
   1400023ad:	mov    r8,rdi
   1400023b0:	mov    QWORD PTR [rsp+0x48],rax
   1400023b5:	mov    QWORD PTR [rsp+0x40],r12
   1400023ba:	mov    QWORD PTR [rsp+0x38],r12
   1400023bf:	mov    DWORD PTR [rsp+0x30],0x8000008
   1400023c7:	mov    rdx,rsi
   1400023ca:	mov    DWORD PTR [rsp+0x28],r12d
   1400023cf:	mov    QWORD PTR [rsp+0x20],r12
   1400023d4:	call   0x1400022a4
   1400023d9:	test   eax,eax
   1400023db:	je     0x140002404
   1400023dd:	mov    rcx,QWORD PTR [rbp-0x49]
   1400023e1:	mov    edx,ebx
   1400023e3:	call   QWORD PTR [rip+0x3ce7]        # 0x1400060d0
   1400023e9:	mov    rcx,QWORD PTR [rbp-0x49]
   1400023ed:	call   QWORD PTR [rip+0x3d5d]        # 0x140006150
   1400023f3:	mov    rcx,QWORD PTR [rbp-0x41]
   1400023f7:	call   QWORD PTR [rip+0x3d53]        # 0x140006150
   1400023fd:	lea    eax,[r12+0x1]
   140002402:	jmp    0x140002406
   140002404:	xor    eax,eax
   140002406:	lea    r11,[rsp+0xf0]
   14000240e:	mov    rbx,QWORD PTR [r11+0x20]
   140002412:	mov    rsi,QWORD PTR [r11+0x28]
   140002416:	mov    rsp,r11
   140002419:	pop    r12
   14000241b:	pop    rdi
   14000241c:	pop    rbp
   14000241d:	ret    
   14000241e:	int3   
   14000241f:	int3   
   140002420:	int3   
   140002421:	int3   
   140002422:	int3   
   140002423:	int3   
   140002424:	mov    rax,rsp
   140002427:	mov    QWORD PTR [rax+0x10],rbx
   14000242b:	mov    QWORD PTR [rax+0x18],rsi
   14000242f:	mov    QWORD PTR [rax+0x20],rdi
   140002433:	push   rbp
   140002434:	lea    rbp,[rax-0x2758]
   14000243b:	mov    eax,0x2850
   140002440:	call   0x140004a00
   140002445:	sub    rsp,rax
   140002448:	mov    rax,QWORD PTR [rip+0x6bd9]        # 0x140009028
   14000244f:	xor    rax,rsp
   140002452:	mov    QWORD PTR [rbp+0x2740],rax
   140002459:	mov    rbx,rcx
   14000245c:	lea    rcx,[rbp+0x1742]
   140002463:	xor    edi,edi
   140002465:	xor    edx,edx
   140002467:	mov    r8d,0xffe
   14000246d:	mov    WORD PTR [rbp+0x1740],di
   140002474:	call   0x140004af2
   140002479:	mov    esi,0x800
   14000247e:	lea    r9,[rip+0x4a5b]        # 0x140006ee0
   140002485:	lea    r8,[rip+0x4aac]        # 0x140006f38
   14000248c:	lea    rcx,[rbp+0x1740]
   140002493:	mov    edx,esi
   140002495:	mov    QWORD PTR [rsp+0x20],rbx
   14000249a:	call   QWORD PTR [rip+0x3e08]        # 0x1400062a8
   1400024a0:	lea    r11,[rsp+0x38]
   1400024a5:	lea    rdx,[rbp+0x1740]
   1400024ac:	mov    r9d,0x20019
   1400024b2:	xor    r8d,r8d
   1400024b5:	mov    rcx,0xffffffff80000002
   1400024bc:	mov    QWORD PTR [rsp+0x20],r11
   1400024c1:	call   QWORD PTR [rip+0x6bd1]        # 0x140009098
   1400024c7:	test   eax,eax
   1400024c9:	jne    0x1400025de
   1400024cf:	mov    rcx,QWORD PTR [rsp+0x38]
   1400024d4:	lea    rax,[rsp+0x30]
   1400024d9:	lea    rdx,[rip+0x4a68]        # 0x140006f48
   1400024e0:	mov    QWORD PTR [rsp+0x28],rax
   1400024e5:	lea    rax,[rsp+0x40]
   1400024ea:	xor    r9d,r9d
   1400024ed:	xor    r8d,r8d
   1400024f0:	mov    DWORD PTR [rsp+0x30],esi
   1400024f4:	mov    QWORD PTR [rsp+0x20],rax
   1400024f9:	call   QWORD PTR [rip+0x6bb1]        # 0x1400090b0
   1400024ff:	mov    rcx,QWORD PTR [rsp+0x38]
   140002504:	mov    ebx,eax
   140002506:	call   QWORD PTR [rip+0x6b9c]        # 0x1400090a8
   14000250c:	test   ebx,ebx
   14000250e:	jne    0x1400025de
   140002514:	lea    rcx,[rbp+0x742]
   14000251b:	xor    edx,edx
   14000251d:	mov    r8d,0xffe
   140002523:	mov    WORD PTR [rbp+0x740],di
   14000252a:	call   0x140004af2
   14000252f:	lea    r11,[rip+0x4a2a]        # 0x140006f60
   140002536:	lea    r9,[rsp+0x40]
   14000253b:	lea    r8,[rip+0x4a3e]        # 0x140006f80
   140002542:	lea    rcx,[rbp+0x740]
   140002549:	mov    edx,esi
   14000254b:	mov    QWORD PTR [rsp+0x20],r11
   140002550:	call   QWORD PTR [rip+0x3d52]        # 0x1400062a8
   140002556:	lea    rcx,[rbp+0x740]
   14000255d:	call   QWORD PTR [rip+0x6ba5]        # 0x140009108
   140002563:	test   eax,eax
   140002565:	je     0x1400025de
   140002567:	lea    rax,[rip+0x4a22]        # 0x140006f90
   14000256e:	lea    r9,[rsp+0x40]
   140002573:	lea    r8,[rip+0x4a3e]        # 0x140006fb8
   14000257a:	lea    rcx,[rbp+0x740]
   140002581:	mov    edx,esi
   140002583:	mov    QWORD PTR [rsp+0x20],rax
   140002588:	call   QWORD PTR [rip+0x3d1a]        # 0x1400062a8
   14000258e:	lea    rcx,[rbp+0x740]
   140002595:	call   QWORD PTR [rip+0x6b6d]        # 0x140009108
   14000259b:	lea    r9,[rsp+0x40]
   1400025a0:	lea    r8,[rip+0x4a49]        # 0x140006ff0
   1400025a7:	mov    ebx,eax
   1400025a9:	lea    rax,[rip+0x4a18]        # 0x140006fc8
   1400025b0:	lea    rcx,[rbp+0x740]
   1400025b7:	mov    edx,esi
   1400025b9:	mov    QWORD PTR [rsp+0x20],rax
   1400025be:	call   QWORD PTR [rip+0x3ce4]        # 0x1400062a8
   1400025c4:	lea    rcx,[rbp+0x740]
   1400025cb:	call   QWORD PTR [rip+0x6b37]        # 0x140009108
   1400025d1:	test   ebx,ebx
   1400025d3:	jne    0x1400025d9
   1400025d5:	test   eax,eax
   1400025d7:	je     0x1400025de
   1400025d9:	mov    edi,0x1
   1400025de:	mov    eax,edi
   1400025e0:	mov    rcx,QWORD PTR [rbp+0x2740]
   1400025e7:	xor    rcx,rsp
   1400025ea:	call   0x1400049c0
   1400025ef:	lea    r11,[rsp+0x2850]
   1400025f7:	mov    rbx,QWORD PTR [r11+0x18]
   1400025fb:	mov    rsi,QWORD PTR [r11+0x20]
   1400025ff:	mov    rdi,QWORD PTR [r11+0x28]
   140002603:	mov    rsp,r11
   140002606:	pop    rbp
   140002607:	ret    
   140002608:	int3   
   140002609:	int3   
   14000260a:	int3   
   14000260b:	int3   
   14000260c:	int3   
   14000260d:	int3   
   14000260e:	int3   
   14000260f:	int3   
   140002610:	int3   
   140002611:	int3   
   140002612:	int3   
   140002613:	int3   
   140002614:	sub    rsp,0x58
   140002618:	lea    rax,[rip+0x49e1]        # 0x140007000
   14000261f:	mov    QWORD PTR [rsp+0x40],rax
   140002624:	mov    DWORD PTR [rsp+0x38],r9d
   140002629:	mov    DWORD PTR [rsp+0x30],r8d
   14000262e:	mov    DWORD PTR [rsp+0x28],edx
   140002632:	mov    rdx,QWORD PTR [rsp+0x88]
   14000263a:	mov    DWORD PTR [rsp+0x20],ecx
   14000263e:	mov    rcx,QWORD PTR [rsp+0x80]
   140002646:	lea    r9,[rip+0x49d3]        # 0x140007020
   14000264d:	lea    r8,[rip+0x49e4]        # 0x140007038
   140002654:	call   QWORD PTR [rip+0x3c4e]        # 0x1400062a8
   14000265a:	add    rsp,0x58
   14000265e:	ret    
   14000265f:	int3   
   140002660:	int3   
   140002661:	int3   
   140002662:	int3   
   140002663:	int3   
   140002664:	int3   
   140002665:	int3   
   140002666:	int3   
   140002667:	int3   
   140002668:	int3   
   140002669:	int3   
   14000266a:	int3   
   14000266b:	int3   
   14000266c:	int3   
   14000266d:	int3   
   14000266e:	int3   
   14000266f:	int3   
   140002670:	int3   
   140002671:	int3   
   140002672:	int3   
   140002673:	int3   
   140002674:	sub    rsp,0x58
   140002678:	lea    rax,[rip+0x49e9]        # 0x140007068
   14000267f:	mov    QWORD PTR [rsp+0x40],rax
   140002684:	mov    DWORD PTR [rsp+0x38],r9d
   140002689:	mov    DWORD PTR [rsp+0x30],r8d
   14000268e:	mov    DWORD PTR [rsp+0x28],edx
   140002692:	mov    rdx,QWORD PTR [rsp+0x88]
   14000269a:	mov    DWORD PTR [rsp+0x20],ecx
   14000269e:	mov    rcx,QWORD PTR [rsp+0x80]
   1400026a6:	lea    r9,[rip+0x49db]        # 0x140007088
   1400026ad:	lea    r8,[rip+0x49ec]        # 0x1400070a0
   1400026b4:	call   QWORD PTR [rip+0x3bee]        # 0x1400062a8
   1400026ba:	add    rsp,0x58
   1400026be:	ret    
   1400026bf:	int3   
   1400026c0:	int3   
   1400026c1:	int3   
   1400026c2:	int3   
   1400026c3:	int3   
   1400026c4:	int3   
   1400026c5:	int3   
   1400026c6:	int3   
   1400026c7:	int3   
   1400026c8:	int3   
   1400026c9:	int3   
   1400026ca:	int3   
   1400026cb:	int3   
   1400026cc:	int3   
   1400026cd:	int3   
   1400026ce:	int3   
   1400026cf:	int3   
   1400026d0:	int3   
   1400026d1:	int3   
   1400026d2:	int3   
   1400026d3:	int3   
   1400026d4:	sub    rsp,0x58
   1400026d8:	lea    rax,[rip+0x49f1]        # 0x1400070d0
   1400026df:	mov    QWORD PTR [rsp+0x40],rax
   1400026e4:	mov    DWORD PTR [rsp+0x38],r9d
   1400026e9:	mov    DWORD PTR [rsp+0x30],r8d
   1400026ee:	mov    DWORD PTR [rsp+0x28],edx
   1400026f2:	mov    rdx,QWORD PTR [rsp+0x88]
   1400026fa:	mov    DWORD PTR [rsp+0x20],ecx
   1400026fe:	mov    rcx,QWORD PTR [rsp+0x80]
   140002706:	lea    r9,[rip+0x49e3]        # 0x1400070f0
   14000270d:	lea    r8,[rip+0x49f4]        # 0x140007108
   140002714:	call   QWORD PTR [rip+0x3b8e]        # 0x1400062a8
   14000271a:	add    rsp,0x58
   14000271e:	ret    
   14000271f:	int3   
   140002720:	int3   
   140002721:	int3   
   140002722:	int3   
   140002723:	int3   
   140002724:	int3   
   140002725:	int3   
   140002726:	int3   
   140002727:	int3   
   140002728:	int3   
   140002729:	int3   
   14000272a:	int3   
   14000272b:	int3   
   14000272c:	int3   
   14000272d:	int3   
   14000272e:	int3   
   14000272f:	int3   
   140002730:	int3   
   140002731:	int3   
   140002732:	int3   
   140002733:	int3   
   140002734:	mov    QWORD PTR [rsp+0x10],rbx
   140002739:	mov    QWORD PTR [rsp+0x20],rsi
   14000273e:	push   rbp
   14000273f:	push   rdi
   140002740:	push   r12
   140002742:	lea    rbp,[rsp-0xf50]
   14000274a:	mov    eax,0x1050
   14000274f:	call   0x140004a00
   140002754:	sub    rsp,rax
   140002757:	mov    rax,QWORD PTR [rip+0x68ca]        # 0x140009028
   14000275e:	xor    rax,rsp
   140002761:	mov    QWORD PTR [rbp+0xf40],rax
   140002768:	mov    rbx,rcx
   14000276b:	mov    edi,r8d
   14000276e:	mov    r12,rdx
   140002771:	lea    rcx,[rsp+0x42]
   140002776:	xor    esi,esi
   140002778:	xor    edx,edx
   14000277a:	mov    r8d,0x7fe
   140002780:	mov    WORD PTR [rsp+0x40],si
   140002785:	call   0x140004af2
   14000278a:	lea    r8,[rip+0x49ff]        # 0x140007190
   140002791:	lea    rcx,[rsp+0x40]
   140002796:	mov    r9,rbx
   140002799:	mov    edx,0x400
   14000279e:	call   QWORD PTR [rip+0x3b04]        # 0x1400062a8
   1400027a4:	lea    rax,[rsp+0x30]
   1400027a9:	neg    edi
   1400027ab:	sbb    rcx,rcx
   1400027ae:	lea    rdx,[rsp+0x40]
   1400027b3:	mov    r9d,0x20019
   1400027b9:	add    rcx,0xffffffff80000002
   1400027c0:	xor    r8d,r8d
   1400027c3:	mov    QWORD PTR [rsp+0x20],rax
   1400027c8:	call   QWORD PTR [rip+0x68ca]        # 0x140009098
   1400027ce:	test   eax,eax
   1400027d0:	je     0x1400027db
   1400027d2:	cmp    eax,0x2
   1400027d5:	sete   sil
   1400027d9:	jmp    0x140002840
   1400027db:	mov    rcx,QWORD PTR [rsp+0x30]
   1400027e0:	lea    r9,[rsp+0x38]
   1400027e5:	lea    r8,[rbp+0x740]
   1400027ec:	lea    rdx,[rip+0x3f91]        # 0x140006784
   1400027f3:	mov    DWORD PTR [rsp+0x38],0x800
   1400027fb:	call   QWORD PTR [rip+0x68c7]        # 0x1400090c8
   140002801:	mov    rcx,QWORD PTR [rsp+0x30]
   140002806:	test   eax,eax
   140002808:	je     0x140002814
   14000280a:	call   QWORD PTR [rip+0x6898]        # 0x1400090a8
   140002810:	xor    eax,eax
   140002812:	jmp    0x140002842
   140002814:	call   QWORD PTR [rip+0x688e]        # 0x1400090a8
   14000281a:	lea    rdx,[rbp+0x740]
   140002821:	sub    rdx,r12
   140002824:	movzx  eax,WORD PTR [r12]
   140002829:	movzx  ecx,WORD PTR [r12+rdx*1]
   14000282e:	sub    eax,ecx
   140002830:	jne    0x14000283a
   140002832:	add    r12,0x2
   140002836:	test   ecx,ecx
   140002838:	jne    0x140002824
   14000283a:	test   eax,eax
   14000283c:	setne  sil
   140002840:	mov    eax,esi
   140002842:	mov    rcx,QWORD PTR [rbp+0xf40]
   140002849:	xor    rcx,rsp
   14000284c:	call   0x1400049c0
   140002851:	lea    r11,[rsp+0x1050]
   140002859:	mov    rbx,QWORD PTR [r11+0x28]
   14000285d:	mov    rsi,QWORD PTR [r11+0x38]
   140002861:	mov    rsp,r11
   140002864:	pop    r12
   140002866:	pop    rdi
   140002867:	pop    rbp
   140002868:	ret    
   140002869:	int3   
   14000286a:	int3   
   14000286b:	int3   
   14000286c:	int3   
   14000286d:	int3   
   14000286e:	int3   
   14000286f:	int3   
   140002870:	int3   
   140002871:	int3   
   140002872:	int3   
   140002873:	int3   
   140002874:	rex push rbp
   140002876:	push   rbx
   140002877:	push   rsi
   140002878:	push   rdi
   140002879:	push   r12
   14000287b:	push   r13
   14000287d:	push   r14
   14000287f:	push   r15
   140002881:	lea    rbp,[rsp-0x17]
   140002886:	sub    rsp,0xb8
   14000288d:	mov    rax,QWORD PTR [rip+0x6794]        # 0x140009028
   140002894:	xor    rax,rsp
   140002897:	mov    QWORD PTR [rbp+0x7],rax
   14000289b:	mov    r14,QWORD PTR [rbp+0x7f]
   14000289f:	xor    eax,eax
   1400028a1:	xor    esi,esi
   1400028a3:	mov    QWORD PTR [rsp+0x20],r9
   1400028a8:	mov    r13,r8
   1400028ab:	mov    rbx,rdx
   1400028ae:	mov    WORD PTR [rbp-0x79],si
   1400028b2:	mov    QWORD PTR [rbp-0x77],rax
   1400028b6:	mov    QWORD PTR [rbp-0x6f],rax
   1400028ba:	mov    QWORD PTR [rbp-0x67],rax
   1400028be:	mov    DWORD PTR [rbp-0x5f],eax
   1400028c1:	mov    WORD PTR [rbp-0x5b],ax
   1400028c5:	mov    WORD PTR [rbp-0x59],si
   1400028c9:	mov    QWORD PTR [rbp-0x57],rax
   1400028cd:	mov    QWORD PTR [rbp-0x4f],rax
   1400028d1:	mov    QWORD PTR [rbp-0x47],rax
   1400028d5:	mov    DWORD PTR [rbp-0x3f],eax
   1400028d8:	mov    WORD PTR [rbp-0x3b],ax
   1400028dc:	mov    WORD PTR [rbp-0x39],si
   1400028e0:	mov    QWORD PTR [rbp-0x37],rax
   1400028e4:	mov    QWORD PTR [rbp-0x2f],rax
   1400028e8:	mov    QWORD PTR [rbp-0x27],rax
   1400028ec:	mov    DWORD PTR [rbp-0x1f],eax
   1400028ef:	mov    WORD PTR [rbp-0x1b],ax
   1400028f3:	mov    WORD PTR [rbp-0x19],si
   1400028f7:	mov    QWORD PTR [rbp-0x17],rax
   1400028fb:	mov    QWORD PTR [rbp-0xf],rax
   1400028ff:	mov    QWORD PTR [rbp-0x7],rax
   140002903:	mov    DWORD PTR [rbp+0x1],eax
   140002906:	mov    WORD PTR [rbp+0x5],ax
   14000290a:	mov    rdi,rcx
   14000290d:	test   rcx,rcx
   140002910:	je     0x140002ad0
   140002916:	call   QWORD PTR [rip+0x37ac]        # 0x1400060c8
   14000291c:	lea    r12d,[rsi+0x10]
   140002920:	lea    r8,[rip+0x3e6d]        # 0x140006794
   140002927:	lea    rcx,[rbp-0x79]
   14000292b:	mov    edx,r12d
   14000292e:	movsxd r15,eax
   140002931:	call   QWORD PTR [rip+0x3959]        # 0x140006290
   140002937:	lea    r8,[rip+0x3e86]        # 0x1400067c4
   14000293e:	lea    rcx,[rbp-0x59]
   140002942:	mov    edx,r12d
   140002945:	call   QWORD PTR [rip+0x3945]        # 0x140006290
   14000294b:	lea    r8,[rip+0x3e8a]        # 0x1400067dc
   140002952:	lea    rcx,[rbp-0x39]
   140002956:	mov    edx,r12d
   140002959:	call   QWORD PTR [rip+0x3931]        # 0x140006290
   14000295f:	lea    r8,[rip+0x3e8e]        # 0x1400067f4
   140002966:	lea    rcx,[rbp-0x19]
   14000296a:	mov    edx,r12d
   14000296d:	call   QWORD PTR [rip+0x391d]        # 0x140006290
   140002973:	lea    rcx,[rbp-0x79]
   140002977:	mov    r8,rdi
   14000297a:	mov    edx,r12d
   14000297d:	call   QWORD PTR [rip+0x390d]        # 0x140006290
   140002983:	mov    r11d,esi
   140002986:	mov    eax,esi
   140002988:	test   r15d,r15d
   14000298b:	jle    0x1400029a9
   14000298d:	cmp    WORD PTR [rdi+rax*2],0x2e
   140002992:	je     0x1400029a1
   140002994:	inc    rax
   140002997:	inc    r11d
   14000299a:	cmp    rax,r15
   14000299d:	jl     0x14000298d
   14000299f:	jmp    0x1400029a9
   1400029a1:	movsxd rax,r11d
   1400029a4:	mov    WORD PTR [rbp+rax*2-0x79],si
   1400029a9:	lea    rcx,[rbp-0x79]
   1400029ad:	call   QWORD PTR [rip+0x38e5]        # 0x140006298
   1400029b3:	lea    rcx,[rbp-0x79]
   1400029b7:	mov    DWORD PTR [rbx],eax
   1400029b9:	call   QWORD PTR [rip+0x3709]        # 0x1400060c8
   1400029bf:	lea    rcx,[rbp-0x59]
   1400029c3:	lea    ebx,[rax+0x1]
   1400029c6:	mov    rdx,r12
   1400029c9:	movsxd rsi,ebx
   1400029cc:	lea    r8,[rdi+rsi*2]
   1400029d0:	call   QWORD PTR [rip+0x38ba]        # 0x140006290
   1400029d6:	mov    rax,rsi
   1400029d9:	cmp    rsi,r15
   1400029dc:	jge    0x1400029fe
   1400029de:	cmp    WORD PTR [rdi+rax*2],0x2e
   1400029e3:	je     0x1400029f1
   1400029e5:	inc    rax
   1400029e8:	inc    ebx
   1400029ea:	cmp    rax,r15
   1400029ed:	jl     0x1400029de
   1400029ef:	jmp    0x1400029fe
   1400029f1:	movsxd rax,ebx
   1400029f4:	sub    rax,rsi
   1400029f7:	xor    ecx,ecx
   1400029f9:	mov    WORD PTR [rbp+rax*2-0x59],cx
   1400029fe:	lea    rcx,[rbp-0x59]
   140002a02:	call   QWORD PTR [rip+0x3890]        # 0x140006298
   140002a08:	lea    rcx,[rbp-0x59]
   140002a0c:	mov    DWORD PTR [r13+0x0],eax
   140002a10:	call   QWORD PTR [rip+0x36b2]        # 0x1400060c8
   140002a16:	lea    rcx,[rbp-0x79]
   140002a1a:	mov    ebx,eax
   140002a1c:	call   QWORD PTR [rip+0x36a6]        # 0x1400060c8
   140002a22:	lea    ebx,[rbx+rax*1+0x2]
   140002a26:	cmp    ebx,r15d
   140002a29:	jge    0x140002acb
   140002a2f:	movsxd rsi,ebx
   140002a32:	lea    rcx,[rbp-0x39]
   140002a36:	mov    rdx,r12
   140002a39:	lea    r8,[rdi+rsi*2]
   140002a3d:	mov    r13,r12
   140002a40:	call   QWORD PTR [rip+0x384a]        # 0x140006290
   140002a46:	mov    rax,rsi
   140002a49:	cmp    rsi,r15
   140002a4c:	jge    0x140002a6e
   140002a4e:	cmp    WORD PTR [rdi+rax*2],0x5f
   140002a53:	je     0x140002a61
   140002a55:	inc    rax
   140002a58:	inc    ebx
   140002a5a:	cmp    rax,r15
   140002a5d:	jl     0x140002a4e
   140002a5f:	jmp    0x140002a6e
   140002a61:	movsxd rax,ebx
   140002a64:	sub    rax,rsi
   140002a67:	xor    ecx,ecx
   140002a69:	mov    WORD PTR [rbp+rax*2-0x39],cx
   140002a6e:	lea    rcx,[rbp-0x39]
   140002a72:	call   QWORD PTR [rip+0x3820]        # 0x140006298
   140002a78:	mov    rcx,QWORD PTR [rsp+0x20]
   140002a7d:	mov    DWORD PTR [rcx],eax
   140002a7f:	lea    rcx,[rbp-0x39]
   140002a83:	call   QWORD PTR [rip+0x363f]        # 0x1400060c8
   140002a89:	lea    rcx,[rbp-0x59]
   140002a8d:	mov    ebx,eax
   140002a8f:	call   QWORD PTR [rip+0x3633]        # 0x1400060c8
   140002a95:	lea    rcx,[rbp-0x79]
   140002a99:	add    ebx,eax
   140002a9b:	call   QWORD PTR [rip+0x3627]        # 0x1400060c8
   140002aa1:	lea    ecx,[rax+rbx*1+0x3]
   140002aa5:	cmp    ecx,r15d
   140002aa8:	jge    0x140002abe
   140002aaa:	movsxd rax,ecx
   140002aad:	lea    rcx,[rbp-0x19]
   140002ab1:	mov    rdx,r13
   140002ab4:	lea    r8,[rdi+rax*2]
   140002ab8:	call   QWORD PTR [rip+0x37d2]        # 0x140006290
   140002abe:	lea    rcx,[rbp-0x19]
   140002ac2:	call   QWORD PTR [rip+0x37d0]        # 0x140006298
   140002ac8:	mov    DWORD PTR [r14],eax
   140002acb:	mov    eax,0x1
   140002ad0:	mov    rcx,QWORD PTR [rbp+0x7]
   140002ad4:	xor    rcx,rsp
   140002ad7:	call   0x1400049c0
   140002adc:	add    rsp,0xb8
   140002ae3:	pop    r15
   140002ae5:	pop    r14
   140002ae7:	pop    r13
   140002ae9:	pop    r12
   140002aeb:	pop    rdi
   140002aec:	pop    rsi
   140002aed:	pop    rbx
   140002aee:	pop    rbp
   140002aef:	ret    
   140002af0:	int3   
   140002af1:	int3   
   140002af2:	int3   
   140002af3:	int3   
   140002af4:	int3   
   140002af5:	int3   
   140002af6:	int3   
   140002af7:	int3   
   140002af8:	int3   
   140002af9:	int3   
   140002afa:	int3   
   140002afb:	int3   
   140002afc:	int3   
   140002afd:	int3   
   140002afe:	int3   
   140002aff:	int3   
   140002b00:	int3   
   140002b01:	int3   
   140002b02:	int3   
   140002b03:	int3   
   140002b04:	mov    rax,rsp
   140002b07:	mov    QWORD PTR [rax+0x8],rcx
   140002b0b:	push   rdi
   140002b0c:	sub    rsp,0x50
   140002b10:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140002b19:	mov    QWORD PTR [rax+0x18],rbx
   140002b1d:	mov    QWORD PTR [rax+0x20],rsi
   140002b21:	mov    rsi,rcx
   140002b24:	xor    edi,edi
   140002b26:	mov    WORD PTR [rcx],di
   140002b29:	mov    DWORD PTR [rax-0x38],0x104
   140002b30:	mov    r9,rcx
   140002b33:	xor    r8d,r8d
   140002b36:	xor    edx,edx
   140002b38:	lea    rcx,[rip+0x3941]        # 0x140006480
   140002b3f:	call   QWORD PTR [rip+0x65ab]        # 0x1400090f0
   140002b45:	mov    ebx,eax
   140002b47:	test   eax,eax
   140002b49:	jns    0x140002b63
   140002b4b:	mov    edx,eax
   140002b4d:	lea    rcx,[rip+0x3eec]        # 0x140006a40
   140002b54:	call   0x140004814
   140002b59:	xor    edx,edx
   140002b5b:	mov    ecx,ebx
   140002b5d:	call   0x140005830
   140002b62:	nop
   140002b63:	jmp    0x140002b6e
   140002b65:	mov    rsi,QWORD PTR [rsp+0x60]
   140002b6a:	mov    ebx,DWORD PTR [rsp+0x68]
   140002b6e:	test   ebx,ebx
   140002b70:	jns    0x140002bef
   140002b72:	mov    QWORD PTR [rsp+0x20],rsi
   140002b77:	xor    r9d,r9d
   140002b7a:	xor    r8d,r8d
   140002b7d:	lea    edx,[r9+0x1a]
   140002b81:	xor    ecx,ecx
   140002b83:	call   QWORD PTR [rip+0x655f]        # 0x1400090e8
   140002b89:	mov    ebx,eax
   140002b8b:	test   eax,eax
   140002b8d:	jns    0x140002ba7
   140002b8f:	mov    edx,eax
   140002b91:	lea    rcx,[rip+0x3f78]        # 0x140006b10
   140002b98:	call   0x140004814
   140002b9d:	xor    edx,edx
   140002b9f:	mov    ecx,ebx
   140002ba1:	call   0x140005830
   140002ba6:	nop
   140002ba7:	jmp    0x140002bb2
   140002ba9:	mov    rsi,QWORD PTR [rsp+0x60]
   140002bae:	mov    ebx,DWORD PTR [rsp+0x68]
   140002bb2:	test   ebx,ebx
   140002bb4:	jns    0x140002bef
   140002bb6:	mov    r9d,0x1
   140002bbc:	lea    r8d,[r9+0x19]
   140002bc0:	mov    rdx,rsi
   140002bc3:	xor    ecx,ecx
   140002bc5:	call   QWORD PTR [rip+0x652d]        # 0x1400090f8
   140002bcb:	mov    ebx,eax
   140002bcd:	test   eax,eax
   140002bcf:	jns    0x140002be9
   140002bd1:	mov    edx,eax
   140002bd3:	lea    rcx,[rip+0x3fe6]        # 0x140006bc0
   140002bda:	call   0x140004814
   140002bdf:	xor    edx,edx
   140002be1:	mov    ecx,ebx
   140002be3:	call   0x140005830
   140002be8:	nop
   140002be9:	jmp    0x140002bef
   140002beb:	mov    ebx,DWORD PTR [rsp+0x68]
   140002bef:	mov    eax,ebx
   140002bf1:	mov    rbx,QWORD PTR [rsp+0x70]
   140002bf6:	mov    rsi,QWORD PTR [rsp+0x78]
   140002bfb:	add    rsp,0x50
   140002bff:	pop    rdi
   140002c00:	ret    
   140002c01:	int3   
   140002c02:	int3   
   140002c03:	int3   
   140002c04:	int3   
   140002c05:	int3   
   140002c06:	int3   
   140002c07:	int3   
   140002c08:	int3   
   140002c09:	int3   
   140002c0a:	int3   
   140002c0b:	int3   
   140002c0c:	int3   
   140002c0d:	int3   
   140002c0e:	int3   
   140002c0f:	int3   
   140002c10:	int3   
   140002c11:	int3   
   140002c12:	int3   
   140002c13:	int3   
   140002c14:	mov    QWORD PTR [rsp+0x10],rbx
   140002c19:	push   rbp
   140002c1a:	push   rsi
   140002c1b:	push   rdi
   140002c1c:	push   r12
   140002c1e:	push   r13
   140002c20:	push   r14
   140002c22:	push   r15
   140002c24:	lea    rbp,[rsp-0x1f60]
   140002c2c:	mov    eax,0x2060
   140002c31:	call   0x140004a00
   140002c36:	sub    rsp,rax
   140002c39:	mov    rax,QWORD PTR [rip+0x63e8]        # 0x140009028
   140002c40:	xor    rax,rsp
   140002c43:	mov    QWORD PTR [rbp+0x1f50],rax
   140002c4a:	mov    r13,rcx
   140002c4d:	mov    rbx,r8
   140002c50:	mov    r12d,edx
   140002c53:	xor    r15d,r15d
   140002c56:	mov    r14d,0x7fe
   140002c5c:	lea    rcx,[rbp+0x752]
   140002c63:	xor    edx,edx
   140002c65:	mov    r8d,r14d
   140002c68:	mov    esi,r9d
   140002c6b:	mov    edi,r15d
   140002c6e:	mov    WORD PTR [rbp+0x750],r15w
   140002c76:	call   0x140004af2
   140002c7b:	lea    rcx,[rsp+0x52]
   140002c80:	mov    r8d,r14d
   140002c83:	xor    edx,edx
   140002c85:	mov    WORD PTR [rsp+0x50],r15w
   140002c8b:	call   0x140004af2
   140002c90:	lea    rcx,[rbp+0x1752]
   140002c97:	mov    r8d,r14d
   140002c9a:	xor    edx,edx
   140002c9c:	mov    WORD PTR [rbp+0x1750],r15w
   140002ca4:	call   0x140004af2
   140002ca9:	lea    rcx,[rbp+0xf52]
   140002cb0:	mov    r8d,r14d
   140002cb3:	xor    edx,edx
   140002cb5:	mov    WORD PTR [rbp+0xf50],r15w
   140002cbd:	call   0x140004af2
   140002cc2:	test   r13,r13
   140002cc5:	je     0x140002cdf
   140002cc7:	mov    rcx,r13
   140002cca:	call   QWORD PTR [rip+0x3450]        # 0x140006120
   140002cd0:	mov    rdi,rax
   140002cd3:	test   rax,rax
   140002cd6:	jne    0x140002cdf
   140002cd8:	xor    eax,eax
   140002cda:	jmp    0x140002dab
   140002cdf:	mov    r8d,esi
   140002ce2:	mov    rdx,rbx
   140002ce5:	mov    rcx,rdi
   140002ce8:	call   QWORD PTR [rip+0x343a]        # 0x140006128
   140002cee:	test   eax,eax
   140002cf0:	je     0x140002cd8
   140002cf2:	mov    r8d,esi
   140002cf5:	mov    rdx,rbx
   140002cf8:	mov    rcx,rbx
   140002cfb:	test   r12d,r12d
   140002cfe:	je     0x140002dd5
   140002d04:	call   QWORD PTR [rip+0x33ae]        # 0x1400060b8
   140002d0a:	test   eax,eax
   140002d0c:	je     0x140002cd8
   140002d0e:	mov    r8d,0x400
   140002d14:	lea    rax,[rbp+0xf50]
   140002d1b:	lea    r9,[rsp+0x50]
   140002d20:	mov    QWORD PTR [rsp+0x40],r8
   140002d25:	mov    QWORD PTR [rsp+0x38],rax
   140002d2a:	mov    QWORD PTR [rsp+0x30],r8
   140002d2f:	lea    rax,[rbp+0x1750]
   140002d36:	lea    rdx,[rbp+0x750]
   140002d3d:	mov    rcx,rbx
   140002d40:	mov    QWORD PTR [rsp+0x28],rax
   140002d45:	mov    QWORD PTR [rsp+0x20],r8
   140002d4a:	call   QWORD PTR [rip+0x3538]        # 0x140006288
   140002d50:	or     rcx,0xffffffffffffffff
   140002d54:	xor    eax,eax
   140002d56:	lea    rdi,[rsp+0x50]
   140002d5b:	repnz scas ax,WORD PTR es:[rdi]
   140002d5e:	not    rcx
   140002d61:	dec    rcx
   140002d64:	cmp    ecx,0x1
   140002d67:	jle    0x140002d82
   140002d69:	movsxd rcx,ecx
   140002d6c:	cmp    WORD PTR [rsp+rcx*2+0x4e],0x5c
   140002d72:	je     0x140002d7c
   140002d74:	cmp    WORD PTR [rsp+rcx*2+0x4e],0x2f
   140002d7a:	jne    0x140002d82
   140002d7c:	mov    WORD PTR [rsp+rcx*2+0x4e],r15w
   140002d82:	lea    r8,[rbp+0x750]
   140002d89:	mov    rdx,rsi
   140002d8c:	mov    rcx,rbx
   140002d8f:	call   QWORD PTR [rip+0x34fb]        # 0x140006290
   140002d95:	lea    r8,[rsp+0x50]
   140002d9a:	mov    rdx,rsi
   140002d9d:	mov    rcx,rbx
   140002da0:	call   QWORD PTR [rip+0x34d2]        # 0x140006278
   140002da6:	mov    eax,0x1
   140002dab:	mov    rcx,QWORD PTR [rbp+0x1f50]
   140002db2:	xor    rcx,rsp
   140002db5:	call   0x1400049c0
   140002dba:	mov    rbx,QWORD PTR [rsp+0x20a8]
   140002dc2:	add    rsp,0x2060
   140002dc9:	pop    r15
   140002dcb:	pop    r14
   140002dcd:	pop    r13
   140002dcf:	pop    r12
   140002dd1:	pop    rdi
   140002dd2:	pop    rsi
   140002dd3:	pop    rbp
   140002dd4:	ret    
   140002dd5:	call   QWORD PTR [rip+0x3225]        # 0x140006000
   140002ddb:	jmp    0x140002d0a
   140002de0:	int3   
   140002de1:	int3   
   140002de2:	int3   
   140002de3:	int3   
   140002de4:	int3   
   140002de5:	int3   
   140002de6:	int3   
   140002de7:	int3   
   140002de8:	int3   
   140002de9:	int3   
   140002dea:	int3   
   140002deb:	int3   
   140002dec:	int3   
   140002ded:	int3   
   140002dee:	int3   
   140002def:	int3   
   140002df0:	int3   
   140002df1:	int3   
   140002df2:	int3   
   140002df3:	int3   
   140002df4:	mov    rax,rsp
   140002df7:	mov    QWORD PTR [rax+0x8],rbx
   140002dfb:	mov    QWORD PTR [rax+0x10],rsi
   140002dff:	mov    QWORD PTR [rax+0x18],rdi
   140002e03:	mov    QWORD PTR [rax+0x20],r13
   140002e07:	push   rbp
   140002e08:	push   r14
   140002e0a:	push   r15
   140002e0c:	lea    rbp,[rax-0x7c8]
   140002e13:	sub    rsp,0x8b0
   140002e1a:	mov    rax,QWORD PTR [rip+0x6207]        # 0x140009028
   140002e21:	xor    rax,rsp
   140002e24:	mov    QWORD PTR [rbp+0x7a0],rax
   140002e2b:	xor    r15d,r15d
   140002e2e:	mov    r14,rcx
   140002e31:	mov    edi,0x20019
   140002e36:	lea    rcx,[rsp+0x70]
   140002e3b:	lea    r8,[rip+0x3f86]        # 0x140006dc8
   140002e42:	mov    rdx,0xffffffff80000002
   140002e49:	mov    r9d,edi
   140002e4c:	mov    QWORD PTR [rsp+0x70],r15
   140002e51:	mov    DWORD PTR [rsp+0x78],r15d
   140002e56:	mov    QWORD PTR [rbp-0x80],r15
   140002e5a:	mov    QWORD PTR [rsp+0x58],r15
   140002e5f:	mov    DWORD PTR [rsp+0x60],r15d
   140002e64:	mov    QWORD PTR [rsp+0x68],r15
   140002e69:	mov    QWORD PTR [rsp+0x40],r15
   140002e6e:	mov    DWORD PTR [rsp+0x48],r15d
   140002e73:	mov    QWORD PTR [rsp+0x50],r15
   140002e78:	mov    QWORD PTR [rbp-0x78],r15
   140002e7c:	mov    DWORD PTR [rbp-0x70],r15d
   140002e80:	mov    QWORD PTR [rbp-0x68],r15
   140002e84:	mov    esi,r15d
   140002e87:	mov    r13d,r15d
   140002e8a:	call   0x140001a9c
   140002e8f:	test   eax,eax
   140002e91:	je     0x140002eaa
   140002e93:	mov    rcx,QWORD PTR [rsp+0x70]
   140002e98:	test   rcx,rcx
   140002e9b:	je     0x140002ea3
   140002e9d:	call   QWORD PTR [rip+0x6205]        # 0x1400090a8
   140002ea3:	xor    eax,eax
   140002ea5:	jmp    0x14000303b
   140002eaa:	mov    rbx,QWORD PTR [rsp+0x70]
   140002eaf:	lea    r8,[rip+0x3f2a]        # 0x140006de0
   140002eb6:	lea    rcx,[rsp+0x58]
   140002ebb:	mov    rdx,rbx
   140002ebe:	mov    r9d,edi
   140002ec1:	call   0x140001a9c
   140002ec6:	test   eax,eax
   140002ec8:	je     0x140002ee4
   140002eca:	mov    rcx,QWORD PTR [rsp+0x58]
   140002ecf:	test   rcx,rcx
   140002ed2:	je     0x140002eda
   140002ed4:	call   QWORD PTR [rip+0x61ce]        # 0x1400090a8
   140002eda:	test   rbx,rbx
   140002edd:	je     0x140002ea3
   140002edf:	mov    rcx,rbx
   140002ee2:	jmp    0x140002e9d
   140002ee4:	mov    r9d,edi
   140002ee7:	mov    rdi,QWORD PTR [rsp+0x58]
   140002eec:	lea    r8,[rip+0x3f05]        # 0x140006df8
   140002ef3:	lea    rcx,[rsp+0x40]
   140002ef8:	mov    rdx,rdi
   140002efb:	call   0x140001a9c
   140002f00:	test   eax,eax
   140002f02:	je     0x140002f1e
   140002f04:	mov    rcx,QWORD PTR [rsp+0x40]
   140002f09:	test   rcx,rcx
   140002f0c:	je     0x140002f14
   140002f0e:	call   QWORD PTR [rip+0x6194]        # 0x1400090a8
   140002f14:	test   rdi,rdi
   140002f17:	je     0x140002eda
   140002f19:	mov    rcx,rdi
   140002f1c:	jmp    0x140002ed4
   140002f1e:	lea    rcx,[rbp-0x60]
   140002f22:	xor    edx,edx
   140002f24:	mov    r8d,0x400
   140002f2a:	call   0x140004af2
   140002f2f:	xor    edx,edx
   140002f31:	jmp    0x140002f6a
   140002f33:	lea    rax,[rbp-0x60]
   140002f37:	mov    r8,r14
   140002f3a:	inc    esi
   140002f3c:	sub    r8,rax
   140002f3f:	movzx  ecx,WORD PTR [rax]
   140002f42:	movzx  edx,WORD PTR [rax+r8*1]
   140002f47:	sub    ecx,edx
   140002f49:	jne    0x140002f53
   140002f4b:	add    rax,0x2
   140002f4f:	test   edx,edx
   140002f51:	jne    0x140002f3f
   140002f53:	test   ecx,ecx
   140002f55:	je     0x140002f88
   140002f57:	lea    rcx,[rbp-0x60]
   140002f5b:	xor    edx,edx
   140002f5d:	mov    r8d,0x400
   140002f63:	call   0x140004af2
   140002f68:	mov    edx,esi
   140002f6a:	mov    rcx,QWORD PTR [rsp+0x40]
   140002f6f:	lea    r8,[rbp-0x60]
   140002f73:	mov    r9d,0x400
   140002f79:	call   QWORD PTR [rip+0x6159]        # 0x1400090d8
   140002f7f:	test   eax,eax
   140002f81:	je     0x140002f33
   140002f83:	jmp    0x14000300a
   140002f88:	mov    rdx,QWORD PTR [rsp+0x40]
   140002f8d:	lea    r8,[rbp-0x60]
   140002f91:	lea    rcx,[rbp-0x78]
   140002f95:	mov    r9d,0x20019
   140002f9b:	call   0x140001a9c
   140002fa0:	mov    rsi,QWORD PTR [rbp-0x78]
   140002fa4:	test   eax,eax
   140002fa6:	jne    0x140002ffc
   140002fa8:	lea    rax,[rsp+0x34]
   140002fad:	lea    r9,[rsp+0x38]
   140002fb2:	lea    rdx,[rip+0x3e5f]        # 0x140006e18
   140002fb9:	mov    QWORD PTR [rsp+0x28],rax
   140002fbe:	lea    rax,[rsp+0x30]
   140002fc3:	xor    r8d,r8d
   140002fc6:	mov    rcx,rsi
   140002fc9:	mov    DWORD PTR [rsp+0x30],r15d
   140002fce:	mov    DWORD PTR [rsp+0x34],0x4
   140002fd6:	mov    QWORD PTR [rsp+0x20],rax
   140002fdb:	call   QWORD PTR [rip+0x60cf]        # 0x1400090b0
   140002fe1:	test   eax,eax
   140002fe3:	jne    0x140002ffc
   140002fe5:	cmp    DWORD PTR [rsp+0x38],0x4
   140002fea:	jne    0x140002ffc
   140002fec:	mov    eax,r15d
   140002fef:	test   eax,eax
   140002ff1:	jne    0x140002ffc
   140002ff3:	cmp    DWORD PTR [rsp+0x30],0x1
   140002ff8:	sete   r13b
   140002ffc:	test   rsi,rsi
   140002fff:	je     0x14000300a
   140003001:	mov    rcx,rsi
   140003004:	call   QWORD PTR [rip+0x609e]        # 0x1400090a8
   14000300a:	cmp    QWORD PTR [rsp+0x40],r15
   14000300f:	je     0x14000301c
   140003011:	mov    rcx,QWORD PTR [rsp+0x40]
   140003016:	call   QWORD PTR [rip+0x608c]        # 0x1400090a8
   14000301c:	test   rdi,rdi
   14000301f:	je     0x14000302a
   140003021:	mov    rcx,rdi
   140003024:	call   QWORD PTR [rip+0x607e]        # 0x1400090a8
   14000302a:	test   rbx,rbx
   14000302d:	je     0x140003038
   14000302f:	mov    rcx,rbx
   140003032:	call   QWORD PTR [rip+0x6070]        # 0x1400090a8
   140003038:	mov    eax,r13d
   14000303b:	mov    rcx,QWORD PTR [rbp+0x7a0]
   140003042:	xor    rcx,rsp
   140003045:	call   0x1400049c0
   14000304a:	lea    r11,[rsp+0x8b0]
   140003052:	mov    rbx,QWORD PTR [r11+0x20]
   140003056:	mov    rsi,QWORD PTR [r11+0x28]
   14000305a:	mov    rdi,QWORD PTR [r11+0x30]
   14000305e:	mov    r13,QWORD PTR [r11+0x38]
   140003062:	mov    rsp,r11
   140003065:	pop    r15
   140003067:	pop    r14
   140003069:	pop    rbp
   14000306a:	ret    
   14000306b:	int3   
   14000306c:	int3   
   14000306d:	int3   
   14000306e:	int3   
   14000306f:	int3   
   140003070:	int3   
   140003071:	int3   
   140003072:	int3   
   140003073:	int3   
   140003074:	mov    QWORD PTR [rsp+0x8],rbx
   140003079:	mov    QWORD PTR [rsp+0x10],rsi
   14000307e:	mov    QWORD PTR [rsp+0x18],rdi
   140003083:	push   rbp
   140003084:	push   r12
   140003086:	push   r13
   140003088:	push   r14
   14000308a:	push   r15
   14000308c:	mov    rbp,rsp
   14000308f:	sub    rsp,0x80
   140003096:	xor    r15d,r15d
   140003099:	mov    r12,r8
   14000309c:	mov    rsi,rcx
   14000309f:	mov    r13d,r9d
   1400030a2:	mov    r14d,edx
   1400030a5:	mov    DWORD PTR [rbp+0x48],r9d
   1400030a9:	mov    edi,0x20019
   1400030ae:	lea    r8,[rip+0x3d8b]        # 0x140006e40
   1400030b5:	lea    rcx,[rbp-0x48]
   1400030b9:	mov    rdx,0xffffffff80000002
   1400030c0:	mov    r9d,edi
   1400030c3:	mov    QWORD PTR [rbp-0x48],r15
   1400030c7:	mov    DWORD PTR [rbp-0x40],r15d
   1400030cb:	mov    QWORD PTR [rbp-0x38],r15
   1400030cf:	mov    QWORD PTR [rbp-0x30],r15
   1400030d3:	mov    DWORD PTR [rbp-0x28],r15d
   1400030d7:	mov    QWORD PTR [rbp-0x20],r15
   1400030db:	mov    QWORD PTR [rbp-0x18],r15
   1400030df:	mov    DWORD PTR [rbp-0x10],r15d
   1400030e3:	mov    QWORD PTR [rbp-0x8],r15
   1400030e7:	mov    QWORD PTR [rbp-0x60],r15
   1400030eb:	mov    DWORD PTR [rbp-0x58],r15d
   1400030ef:	mov    QWORD PTR [rbp-0x50],r15
   1400030f3:	call   0x140001a9c
   1400030f8:	test   eax,eax
   1400030fa:	je     0x140003112
   1400030fc:	mov    rcx,QWORD PTR [rbp-0x48]
   140003100:	test   rcx,rcx
   140003103:	je     0x14000310b
   140003105:	call   QWORD PTR [rip+0x5f9d]        # 0x1400090a8
   14000310b:	xor    eax,eax
   14000310d:	jmp    0x140003227
   140003112:	mov    rbx,QWORD PTR [rbp-0x48]
   140003116:	lea    r8,[rip+0x3d3b]        # 0x140006e58
   14000311d:	lea    rcx,[rbp-0x30]
   140003121:	mov    rdx,rbx
   140003124:	mov    r9d,edi
   140003127:	call   0x140001a9c
   14000312c:	test   eax,eax
   14000312e:	je     0x140003149
   140003130:	mov    rcx,QWORD PTR [rbp-0x30]
   140003134:	test   rcx,rcx
   140003137:	je     0x14000313f
   140003139:	call   QWORD PTR [rip+0x5f69]        # 0x1400090a8
   14000313f:	test   rbx,rbx
   140003142:	je     0x14000310b
   140003144:	mov    rcx,rbx
   140003147:	jmp    0x140003105
   140003149:	mov    r9d,edi
   14000314c:	mov    rdi,QWORD PTR [rbp-0x30]
   140003150:	lea    r8,[rip+0x3d19]        # 0x140006e70
   140003157:	lea    rcx,[rbp-0x18]
   14000315b:	mov    rdx,rdi
   14000315e:	call   0x140001a9c
   140003163:	test   eax,eax
   140003165:	je     0x140003180
   140003167:	mov    rcx,QWORD PTR [rbp-0x18]
   14000316b:	test   rcx,rcx
   14000316e:	je     0x140003176
   140003170:	call   QWORD PTR [rip+0x5f32]        # 0x1400090a8
   140003176:	test   rdi,rdi
   140003179:	je     0x14000313f
   14000317b:	mov    rcx,rdi
   14000317e:	jmp    0x140003139
   140003180:	mov    r8,rsi
   140003183:	mov    rsi,QWORD PTR [rbp-0x18]
   140003187:	lea    rcx,[rbp-0x60]
   14000318b:	mov    rdx,rsi
   14000318e:	mov    r9d,0x20019
   140003194:	call   0x140001a9c
   140003199:	test   eax,eax
   14000319b:	je     0x1400031b6
   14000319d:	mov    rcx,QWORD PTR [rbp-0x60]
   1400031a1:	test   rcx,rcx
   1400031a4:	je     0x1400031ac
   1400031a6:	call   QWORD PTR [rip+0x5efc]        # 0x1400090a8
   1400031ac:	test   rsi,rsi
   1400031af:	je     0x140003176
   1400031b1:	mov    rcx,rsi
   1400031b4:	jmp    0x140003170
   1400031b6:	lea    r9,[rbp+0x48]
   1400031ba:	lea    rdx,[rip+0x3ccf]        # 0x140006e90
   1400031c1:	lea    rcx,[rbp-0x60]
   1400031c5:	mov    r8,r12
   1400031c8:	call   0x140001b30
   1400031cd:	test   eax,eax
   1400031cf:	jne    0x14000319d
   1400031d1:	mov    r8d,r13d
   1400031d4:	mov    rdx,r12
   1400031d7:	mov    rcx,r12
   1400031da:	test   r14d,r14d
   1400031dd:	je     0x140003248
   1400031df:	call   QWORD PTR [rip+0x2ed3]        # 0x1400060b8
   1400031e5:	test   eax,eax
   1400031e7:	je     0x14000319d
   1400031e9:	mov    rcx,QWORD PTR [rbp-0x60]
   1400031ed:	test   rcx,rcx
   1400031f0:	je     0x1400031f8
   1400031f2:	call   QWORD PTR [rip+0x5eb0]        # 0x1400090a8
   1400031f8:	test   rsi,rsi
   1400031fb:	je     0x140003206
   1400031fd:	mov    rcx,rsi
   140003200:	call   QWORD PTR [rip+0x5ea2]        # 0x1400090a8
   140003206:	test   rdi,rdi
   140003209:	je     0x140003214
   14000320b:	mov    rcx,rdi
   14000320e:	call   QWORD PTR [rip+0x5e94]        # 0x1400090a8
   140003214:	test   rbx,rbx
   140003217:	je     0x140003222
   140003219:	mov    rcx,rbx
   14000321c:	call   QWORD PTR [rip+0x5e86]        # 0x1400090a8
   140003222:	mov    eax,0x1
   140003227:	lea    r11,[rsp+0x80]
   14000322f:	mov    rbx,QWORD PTR [r11+0x30]
   140003233:	mov    rsi,QWORD PTR [r11+0x38]
   140003237:	mov    rdi,QWORD PTR [r11+0x40]
   14000323b:	mov    rsp,r11
   14000323e:	pop    r15
   140003240:	pop    r14
   140003242:	pop    r13
   140003244:	pop    r12
   140003246:	pop    rbp
   140003247:	ret    
   140003248:	call   QWORD PTR [rip+0x2db2]        # 0x140006000
   14000324e:	jmp    0x1400031e5
   140003250:	int3   
   140003251:	int3   
   140003252:	int3   
   140003253:	int3   
   140003254:	int3   
   140003255:	int3   
   140003256:	int3   
   140003257:	int3   
   140003258:	int3   
   140003259:	int3   
   14000325a:	int3   
   14000325b:	int3   
   14000325c:	int3   
   14000325d:	int3   
   14000325e:	int3   
   14000325f:	int3   
   140003260:	int3   
   140003261:	int3   
   140003262:	int3   
   140003263:	int3   
   140003264:	mov    r8d,0xbb8
   14000326a:	jmp    0x140002324
   14000326f:	int3   
   140003270:	int3   
   140003271:	int3   
   140003272:	int3   
   140003273:	int3   
   140003274:	int3   
   140003275:	int3   
   140003276:	int3   
   140003277:	int3   
   140003278:	int3   
   140003279:	int3   
   14000327a:	int3   
   14000327b:	int3   
   14000327c:	int3   
   14000327d:	int3   
   14000327e:	int3   
   14000327f:	int3   
   140003280:	int3   
   140003281:	int3   
   140003282:	int3   
   140003283:	int3   
   140003284:	rex push rbx
   140003286:	push   rbp
   140003287:	push   rsi
   140003288:	push   rdi
   140003289:	push   r14
   14000328b:	push   r15
   14000328d:	sub    rsp,0x848
   140003294:	mov    rax,QWORD PTR [rip+0x5d8d]        # 0x140009028
   14000329b:	xor    rax,rsp
   14000329e:	mov    QWORD PTR [rsp+0x830],rax
   1400032a6:	mov    ebx,r9d
   1400032a9:	mov    ebp,r8d
   1400032ac:	mov    edi,edx
   1400032ae:	mov    esi,ecx
   1400032b0:	cmp    r9d,DWORD PTR [rsp+0x8a0]
   1400032b8:	jg     0x1400033d1
   1400032be:	mov    r14d,0x1
   1400032c4:	mov    r15d,0x400
   1400032ca:	cmp    esi,r14d
   1400032cd:	jg     0x140003302
   1400032cf:	cmp    edi,0x3
   1400032d2:	jne    0x1400032dd
   1400032d4:	test   ebp,ebp
   1400032d6:	jne    0x1400032dd
   1400032d8:	cmp    ebx,0x2
   1400032db:	je     0x140003302
   1400032dd:	lea    rax,[rsp+0x30]
   1400032e2:	mov    r9d,ebx
   1400032e5:	mov    r8d,ebp
   1400032e8:	mov    edx,edi
   1400032ea:	mov    ecx,esi
   1400032ec:	mov    QWORD PTR [rsp+0x28],r15
   1400032f1:	mov    QWORD PTR [rsp+0x20],rax
   1400032f6:	call   0x140002614
   1400032fb:	lea    rcx,[rsp+0x30]
   140003300:	jmp    0x140003309
   140003302:	lea    rcx,[rip+0x3e37]        # 0x140007140
   140003309:	mov    r8d,DWORD PTR [rsp+0x8b0]
   140003311:	mov    rdx,QWORD PTR [rsp+0x8a8]
   140003319:	call   0x140002734
   14000331e:	test   eax,eax
   140003320:	jne    0x1400033f3
   140003326:	cmp    esi,r14d
   140003329:	jg     0x14000333f
   14000332b:	cmp    edi,0x4
   14000332e:	jge    0x14000333f
   140003330:	cmp    edi,0x3
   140003333:	jne    0x14000337b
   140003335:	cmp    ebp,r14d
   140003338:	jne    0x14000337b
   14000333a:	cmp    ebx,r14d
   14000333d:	jl     0x14000337b
   14000333f:	lea    rax,[rsp+0x30]
   140003344:	mov    r9d,ebx
   140003347:	mov    r8d,ebp
   14000334a:	mov    edx,edi
   14000334c:	mov    ecx,esi
   14000334e:	mov    QWORD PTR [rsp+0x28],r15
   140003353:	mov    QWORD PTR [rsp+0x20],rax
   140003358:	call   0x140002674
   14000335d:	mov    r8d,DWORD PTR [rsp+0x8b0]
   140003365:	mov    rdx,QWORD PTR [rsp+0x8a8]
   14000336d:	lea    rcx,[rsp+0x30]
   140003372:	call   0x140002734
   140003377:	test   eax,eax
   140003379:	jne    0x1400033f3
   14000337b:	cmp    esi,r14d
   14000337e:	jg     0x140003385
   140003380:	cmp    edi,0x5
   140003383:	jl     0x1400033c1
   140003385:	lea    rax,[rsp+0x30]
   14000338a:	mov    r9d,ebx
   14000338d:	mov    r8d,ebp
   140003390:	mov    edx,edi
   140003392:	mov    ecx,esi
   140003394:	mov    QWORD PTR [rsp+0x28],r15
   140003399:	mov    QWORD PTR [rsp+0x20],rax
   14000339e:	call   0x1400026d4
   1400033a3:	mov    r8d,DWORD PTR [rsp+0x8b0]
   1400033ab:	mov    rdx,QWORD PTR [rsp+0x8a8]
   1400033b3:	lea    rcx,[rsp+0x30]
   1400033b8:	call   0x140002734
   1400033bd:	test   eax,eax
   1400033bf:	jne    0x1400033f3
   1400033c1:	add    ebx,r14d
   1400033c4:	cmp    ebx,DWORD PTR [rsp+0x8a0]
   1400033cb:	jle    0x1400032ca
   1400033d1:	xor    eax,eax
   1400033d3:	mov    rcx,QWORD PTR [rsp+0x830]
   1400033db:	xor    rcx,rsp
   1400033de:	call   0x1400049c0
   1400033e3:	add    rsp,0x848
   1400033ea:	pop    r15
   1400033ec:	pop    r14
   1400033ee:	pop    rdi
   1400033ef:	pop    rsi
   1400033f0:	pop    rbp
   1400033f1:	pop    rbx
   1400033f2:	ret    
   1400033f3:	mov    eax,r14d
   1400033f6:	jmp    0x1400033d3
   1400033f8:	int3   
   1400033f9:	int3   
   1400033fa:	int3   
   1400033fb:	int3   
   1400033fc:	int3   
   1400033fd:	int3   
   1400033fe:	int3   
   1400033ff:	int3   
   140003400:	int3   
   140003401:	int3   
   140003402:	int3   
   140003403:	int3   
   140003404:	mov    QWORD PTR [rsp+0x8],rbx
   140003409:	push   rbp
   14000340a:	push   rsi
   14000340b:	push   rdi
   14000340c:	push   r12
   14000340e:	push   r13
   140003410:	push   r14
   140003412:	push   r15
   140003414:	lea    rbp,[rsp-0xfb0]
   14000341c:	mov    eax,0x10b0
   140003421:	call   0x140004a00
   140003426:	sub    rsp,rax
   140003429:	mov    rax,QWORD PTR [rip+0x5bf8]        # 0x140009028
   140003430:	xor    rax,rsp
   140003433:	mov    QWORD PTR [rbp+0xfa0],rax
   14000343a:	xor    r15d,r15d
   14000343d:	mov    r14,r8
   140003440:	mov    ebx,ecx
   140003442:	mov    r13,rdx
   140003445:	mov    r12d,0x20019
   14000344b:	lea    r8,[rip+0x3d96]        # 0x1400071e8
   140003452:	lea    rcx,[rsp+0x70]
   140003457:	mov    r9d,r12d
   14000345a:	mov    rdx,0xffffffff80000002
   140003461:	mov    QWORD PTR [rsp+0x70],r15
   140003466:	mov    DWORD PTR [rsp+0x78],r15d
   14000346b:	mov    QWORD PTR [rbp-0x80],r15
   14000346f:	mov    QWORD PTR [rsp+0x40],r15
   140003474:	mov    DWORD PTR [rsp+0x48],r15d
   140003479:	mov    QWORD PTR [rsp+0x50],r15
   14000347e:	mov    QWORD PTR [rsp+0x28],r15
   140003483:	mov    DWORD PTR [rsp+0x30],r15d
   140003488:	mov    QWORD PTR [rsp+0x38],r15
   14000348d:	mov    QWORD PTR [rbp-0x78],r15
   140003491:	mov    DWORD PTR [rbp-0x70],r15d
   140003495:	mov    QWORD PTR [rbp-0x68],r15
   140003499:	mov    QWORD PTR [rsp+0x58],r15
   14000349e:	mov    DWORD PTR [rsp+0x60],r15d
   1400034a3:	mov    QWORD PTR [rsp+0x68],r15
   1400034a8:	call   0x140001a9c
   1400034ad:	test   eax,eax
   1400034af:	je     0x1400034c8
   1400034b1:	mov    rcx,QWORD PTR [rsp+0x70]
   1400034b6:	test   rcx,rcx
   1400034b9:	je     0x1400034c1
   1400034bb:	call   QWORD PTR [rip+0x5be7]        # 0x1400090a8
   1400034c1:	xor    eax,eax
   1400034c3:	jmp    0x14000368f
   1400034c8:	test   ebx,ebx
   1400034ca:	mov    rbx,QWORD PTR [rsp+0x70]
   1400034cf:	mov    r9d,r12d
   1400034d2:	mov    rdx,rbx
   1400034d5:	lea    rcx,[rsp+0x40]
   1400034da:	je     0x140003540
   1400034dc:	lea    r8,[rip+0x3d1d]        # 0x140007200
   1400034e3:	call   0x140001a9c
   1400034e8:	test   eax,eax
   1400034ea:	je     0x140003506
   1400034ec:	mov    rcx,QWORD PTR [rsp+0x40]
   1400034f1:	test   rcx,rcx
   1400034f4:	je     0x1400034fc
   1400034f6:	call   QWORD PTR [rip+0x5bac]        # 0x1400090a8
   1400034fc:	test   rbx,rbx
   1400034ff:	je     0x1400034c1
   140003501:	mov    rcx,rbx
   140003504:	jmp    0x1400034bb
   140003506:	lea    r8,[rip+0x3d03]        # 0x140007210
   14000350d:	mov    rdi,QWORD PTR [rsp+0x40]
   140003512:	lea    rcx,[rsp+0x28]
   140003517:	mov    r9d,r12d
   14000351a:	mov    rdx,rdi
   14000351d:	call   0x140001a9c
   140003522:	test   eax,eax
   140003524:	je     0x140003559
   140003526:	mov    rcx,QWORD PTR [rsp+0x28]
   14000352b:	test   rcx,rcx
   14000352e:	je     0x140003536
   140003530:	call   QWORD PTR [rip+0x5b72]        # 0x1400090a8
   140003536:	test   rdi,rdi
   140003539:	je     0x1400034fc
   14000353b:	mov    rcx,rdi
   14000353e:	jmp    0x1400034f6
   140003540:	lea    r8,[rip+0x3ce9]        # 0x140007230
   140003547:	call   0x140001a9c
   14000354c:	test   eax,eax
   14000354e:	jne    0x1400034ec
   140003550:	lea    r8,[rip+0x3cf1]        # 0x140007248
   140003557:	jmp    0x14000350d
   140003559:	lea    rcx,[rbp-0x5e]
   14000355d:	xor    edx,edx
   14000355f:	mov    r8d,0xffe
   140003565:	mov    WORD PTR [rbp-0x60],r15w
   14000356a:	call   0x140004af2
   14000356f:	lea    r9,[rsp+0x20]
   140003574:	lea    r8,[rbp-0x60]
   140003578:	lea    rdx,[rip+0x3cd9]        # 0x140007258
   14000357f:	lea    rcx,[rsp+0x28]
   140003584:	mov    DWORD PTR [rsp+0x20],0x800
   14000358c:	call   0x140001b30
   140003591:	test   eax,eax
   140003593:	jne    0x140003526
   140003595:	mov    rsi,QWORD PTR [rsp+0x28]
   14000359a:	lea    r8,[rbp-0x60]
   14000359e:	lea    rcx,[rbp-0x78]
   1400035a2:	mov    rdx,rsi
   1400035a5:	mov    r9d,r12d
   1400035a8:	call   0x140001a9c
   1400035ad:	test   eax,eax
   1400035af:	je     0x1400035d1
   1400035b1:	mov    rcx,QWORD PTR [rbp-0x78]
   1400035b5:	test   rcx,rcx
   1400035b8:	je     0x1400035c0
   1400035ba:	call   QWORD PTR [rip+0x5ae8]        # 0x1400090a8
   1400035c0:	test   rsi,rsi
   1400035c3:	je     0x140003536
   1400035c9:	mov    rcx,rsi
   1400035cc:	jmp    0x140003530
   1400035d1:	mov    r9d,r12d
   1400035d4:	mov    r12,QWORD PTR [rbp-0x78]
   1400035d8:	lea    r8,[rip+0x3c99]        # 0x140007278
   1400035df:	lea    rcx,[rsp+0x58]
   1400035e4:	mov    rdx,r12
   1400035e7:	mov    DWORD PTR [rsp+0x20],0x800
   1400035ef:	call   0x140001a9c
   1400035f4:	test   eax,eax
   1400035f6:	je     0x140003612
   1400035f8:	mov    rcx,QWORD PTR [rsp+0x58]
   1400035fd:	test   rcx,rcx
   140003600:	je     0x140003608
   140003602:	call   QWORD PTR [rip+0x5aa0]        # 0x1400090a8
   140003608:	test   r12,r12
   14000360b:	je     0x1400035c0
   14000360d:	mov    rcx,r12
   140003610:	jmp    0x1400035ba
   140003612:	lea    r9,[rsp+0x20]
   140003617:	lea    rdx,[rip+0x3c6a]        # 0x140007288
   14000361e:	lea    rcx,[rsp+0x58]
   140003623:	mov    r8,r13
   140003626:	call   0x140001b30
   14000362b:	test   eax,eax
   14000362d:	jne    0x1400035f8
   14000362f:	lea    r8,[rip+0x3c7a]        # 0x1400072b0
   140003636:	mov    rdx,r14
   140003639:	mov    rcx,r13
   14000363c:	call   QWORD PTR [rip+0x2c36]        # 0x140006278
   140003642:	mov    rcx,QWORD PTR [rsp+0x58]
   140003647:	test   rcx,rcx
   14000364a:	je     0x140003652
   14000364c:	call   QWORD PTR [rip+0x5a56]        # 0x1400090a8
   140003652:	test   r12,r12
   140003655:	je     0x140003660
   140003657:	mov    rcx,r12
   14000365a:	call   QWORD PTR [rip+0x5a48]        # 0x1400090a8
   140003660:	test   rsi,rsi
   140003663:	je     0x14000366e
   140003665:	mov    rcx,rsi
   140003668:	call   QWORD PTR [rip+0x5a3a]        # 0x1400090a8
   14000366e:	test   rdi,rdi
   140003671:	je     0x14000367c
   140003673:	mov    rcx,rdi
   140003676:	call   QWORD PTR [rip+0x5a2c]        # 0x1400090a8
   14000367c:	test   rbx,rbx
   14000367f:	je     0x14000368a
   140003681:	mov    rcx,rbx
   140003684:	call   QWORD PTR [rip+0x5a1e]        # 0x1400090a8
   14000368a:	mov    eax,0x1
   14000368f:	mov    rcx,QWORD PTR [rbp+0xfa0]
   140003696:	xor    rcx,rsp
   140003699:	call   0x1400049c0
   14000369e:	mov    rbx,QWORD PTR [rsp+0x10f0]
   1400036a6:	add    rsp,0x10b0
   1400036ad:	pop    r15
   1400036af:	pop    r14
   1400036b1:	pop    r13
   1400036b3:	pop    r12
   1400036b5:	pop    rdi
   1400036b6:	pop    rsi
   1400036b7:	pop    rbp
   1400036b8:	ret    
   1400036b9:	int3   
   1400036ba:	int3   
   1400036bb:	int3   
   1400036bc:	int3   
   1400036bd:	int3   
   1400036be:	int3   
   1400036bf:	int3   
   1400036c0:	int3   
   1400036c1:	int3   
   1400036c2:	int3   
   1400036c3:	int3   
   1400036c4:	mov    rax,rsp
   1400036c7:	mov    QWORD PTR [rax+0x8],rbx
   1400036cb:	mov    QWORD PTR [rax+0x10],rsi
   1400036cf:	mov    QWORD PTR [rax+0x18],rdi
   1400036d3:	push   rbp
   1400036d4:	push   r12
   1400036d6:	push   r13
   1400036d8:	lea    rbp,[rax-0xfa8]
   1400036df:	mov    eax,0x1090
   1400036e4:	call   0x140004a00
   1400036e9:	sub    rsp,rax
   1400036ec:	mov    rax,QWORD PTR [rip+0x5935]        # 0x140009028
   1400036f3:	xor    rax,rsp
   1400036f6:	mov    QWORD PTR [rbp+0xf80],rax
   1400036fd:	lea    rcx,[rbp-0x7e]
   140003701:	xor    r13d,r13d
   140003704:	xor    edx,edx
   140003706:	mov    r8d,0xffe
   14000370c:	mov    WORD PTR [rbp-0x80],r13w
   140003711:	call   0x140004af2
   140003716:	lea    rcx,[rbp-0x80]
   14000371a:	mov    edx,0x800
   14000371f:	mov    QWORD PTR [rsp+0x48],r13
   140003724:	call   QWORD PTR [rip+0x2a3e]        # 0x140006168
   14000372a:	dec    eax
   14000372c:	cmp    eax,0x7fe
   140003731:	ja     0x14000397f
   140003737:	call   0x140002074
   14000373c:	lea    rdx,[rbp-0x80]
   140003740:	test   eax,eax
   140003742:	je     0x140003898
   140003748:	lea    rcx,[rsp+0x28]
   14000374d:	call   0x1400017d8
   140003752:	lea    rdx,[rip+0x320f]        # 0x140006968
   140003759:	lea    rcx,[rsp+0x38]
   14000375e:	call   0x1400017d8
   140003763:	lea    rdx,[rsp+0x38]
   140003768:	lea    rcx,[rsp+0x28]
   14000376d:	call   0x140004494
   140003772:	mov    rax,QWORD PTR [rsp+0x38]
   140003777:	or     edi,0xffffffff
   14000377a:	test   rax,rax
   14000377d:	je     0x1400037b3
   14000377f:	mov    ecx,edi
   140003781:	lock xadd DWORD PTR [rax+0x10],ecx
   140003786:	add    ecx,edi
   140003788:	jne    0x1400037b3
   14000378a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000378f:	mov    rcx,QWORD PTR [rbx]
   140003792:	test   rcx,rcx
   140003795:	je     0x14000379d
   140003797:	call   QWORD PTR [rip+0x2b83]        # 0x140006320
   14000379d:	mov    rcx,QWORD PTR [rbx+0x8]
   1400037a1:	test   rcx,rcx
   1400037a4:	je     0x1400037ab
   1400037a6:	call   0x1400049e6
   1400037ab:	mov    rcx,rbx
   1400037ae:	call   0x140004a54
   1400037b3:	lea    rcx,[rip+0x31fe]        # 0x1400069b8
   1400037ba:	call   QWORD PTR [rip+0x2960]        # 0x140006120
   1400037c0:	lea    rdx,[rip+0x31d1]        # 0x140006998
   1400037c7:	mov    rcx,rax
   1400037ca:	call   QWORD PTR [rip+0x2970]        # 0x140006140
   1400037d0:	lea    rcx,[rip+0x3219]        # 0x1400069f0
   1400037d7:	mov    r12,rax
   1400037da:	call   QWORD PTR [rip+0x2940]        # 0x140006120
   1400037e0:	lea    rdx,[rip+0x31e9]        # 0x1400069d0
   1400037e7:	mov    rcx,rax
   1400037ea:	call   QWORD PTR [rip+0x2950]        # 0x140006140
   1400037f0:	mov    rbx,QWORD PTR [rsp+0x28]
   1400037f5:	mov    rsi,rax
   1400037f8:	test   r12,r12
   1400037fb:	je     0x140003876
   1400037fd:	test   rax,rax
   140003800:	je     0x140003876
   140003802:	lea    rcx,[rsp+0x48]
   140003807:	call   r12
   14000380a:	test   eax,eax
   14000380c:	je     0x140003876
   14000380e:	test   rbx,rbx
   140003811:	je     0x140003818
   140003813:	mov    rcx,QWORD PTR [rbx]
   140003816:	jmp    0x14000381b
   140003818:	mov    rcx,r13
   14000381b:	lea    rdx,[rsp+0x50]
   140003820:	call   QWORD PTR [rip+0x2a4a]        # 0x140006270
   140003826:	mov    rcx,QWORD PTR [rsp+0x48]
   14000382b:	test   eax,eax
   14000382d:	jne    0x140003874
   14000382f:	call   rsi
   140003831:	test   rbx,rbx
   140003834:	je     0x14000386a
   140003836:	mov    eax,edi
   140003838:	lock xadd DWORD PTR [rbx+0x10],eax
   14000383d:	add    eax,edi
   14000383f:	jne    0x14000386a
   140003841:	mov    rbx,QWORD PTR [rsp+0x28]
   140003846:	mov    rcx,QWORD PTR [rbx]
   140003849:	test   rcx,rcx
   14000384c:	je     0x140003854
   14000384e:	call   QWORD PTR [rip+0x2acc]        # 0x140006320
   140003854:	mov    rcx,QWORD PTR [rbx+0x8]
   140003858:	test   rcx,rcx
   14000385b:	je     0x140003862
   14000385d:	call   0x1400049e6
   140003862:	mov    rcx,rbx
   140003865:	call   0x140004a54
   14000386a:	mov    eax,0x1
   14000386f:	jmp    0x140003981
   140003874:	call   rsi
   140003876:	test   rbx,rbx
   140003879:	je     0x14000397f
   14000387f:	mov    eax,edi
   140003881:	lock xadd DWORD PTR [rbx+0x10],eax
   140003886:	add    eax,edi
   140003888:	jne    0x14000397f
   14000388e:	mov    rbx,QWORD PTR [rsp+0x28]
   140003893:	jmp    0x14000395b
   140003898:	lea    rcx,[rsp+0x30]
   14000389d:	call   0x1400017d8
   1400038a2:	lea    rdx,[rip+0x315f]        # 0x140006a08
   1400038a9:	lea    rcx,[rsp+0x40]
   1400038ae:	call   0x1400017d8
   1400038b3:	lea    rdx,[rsp+0x40]
   1400038b8:	lea    rcx,[rsp+0x30]
   1400038bd:	call   0x140004494
   1400038c2:	mov    rax,QWORD PTR [rsp+0x40]
   1400038c7:	or     edi,0xffffffff
   1400038ca:	test   rax,rax
   1400038cd:	je     0x140003903
   1400038cf:	mov    ecx,edi
   1400038d1:	lock xadd DWORD PTR [rax+0x10],ecx
   1400038d6:	add    ecx,edi
   1400038d8:	jne    0x140003903
   1400038da:	mov    rbx,QWORD PTR [rsp+0x40]
   1400038df:	mov    rcx,QWORD PTR [rbx]
   1400038e2:	test   rcx,rcx
   1400038e5:	je     0x1400038ed
   1400038e7:	call   QWORD PTR [rip+0x2a33]        # 0x140006320
   1400038ed:	mov    rcx,QWORD PTR [rbx+0x8]
   1400038f1:	test   rcx,rcx
   1400038f4:	je     0x1400038fb
   1400038f6:	call   0x1400049e6
   1400038fb:	mov    rcx,rbx
   1400038fe:	call   0x140004a54
   140003903:	mov    rbx,QWORD PTR [rsp+0x30]
   140003908:	test   rbx,rbx
   14000390b:	je     0x140003912
   14000390d:	mov    rcx,QWORD PTR [rbx]
   140003910:	jmp    0x140003915
   140003912:	mov    rcx,r13
   140003915:	lea    rdx,[rsp+0x50]
   14000391a:	call   QWORD PTR [rip+0x2950]        # 0x140006270
   140003920:	test   eax,eax
   140003922:	jne    0x140003946
   140003924:	test   rbx,rbx
   140003927:	je     0x14000386a
   14000392d:	mov    eax,edi
   14000392f:	lock xadd DWORD PTR [rbx+0x10],eax
   140003934:	add    eax,edi
   140003936:	jne    0x14000386a
   14000393c:	mov    rbx,QWORD PTR [rsp+0x30]
   140003941:	jmp    0x140003846
   140003946:	test   rbx,rbx
   140003949:	je     0x14000397f
   14000394b:	mov    eax,edi
   14000394d:	lock xadd DWORD PTR [rbx+0x10],eax
   140003952:	add    eax,edi
   140003954:	jne    0x14000397f
   140003956:	mov    rbx,QWORD PTR [rsp+0x30]
   14000395b:	mov    rcx,QWORD PTR [rbx]
   14000395e:	test   rcx,rcx
   140003961:	je     0x140003969
   140003963:	call   QWORD PTR [rip+0x29b7]        # 0x140006320
   140003969:	mov    rcx,QWORD PTR [rbx+0x8]
   14000396d:	test   rcx,rcx
   140003970:	je     0x140003977
   140003972:	call   0x1400049e6
   140003977:	mov    rcx,rbx
   14000397a:	call   0x140004a54
   14000397f:	xor    eax,eax
   140003981:	mov    rcx,QWORD PTR [rbp+0xf80]
   140003988:	xor    rcx,rsp
   14000398b:	call   0x1400049c0
   140003990:	lea    r11,[rsp+0x1090]
   140003998:	mov    rbx,QWORD PTR [r11+0x20]
   14000399c:	mov    rsi,QWORD PTR [r11+0x28]
   1400039a0:	mov    rdi,QWORD PTR [r11+0x30]
   1400039a4:	mov    rsp,r11
   1400039a7:	pop    r13
   1400039a9:	pop    r12
   1400039ab:	pop    rbp
   1400039ac:	ret    
   1400039ad:	int3   
   1400039ae:	int3   
   1400039af:	int3   
   1400039b0:	int3   
   1400039b1:	int3   
   1400039b2:	int3   
   1400039b3:	int3   
   1400039b4:	mov    rax,rsp
   1400039b7:	push   rsi
   1400039b8:	push   rdi
   1400039b9:	push   r12
   1400039bb:	sub    rsp,0x260
   1400039c2:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400039cb:	mov    QWORD PTR [rax+0x18],rbx
   1400039cf:	mov    rax,QWORD PTR [rip+0x5652]        # 0x140009028
   1400039d6:	xor    rax,rsp
   1400039d9:	mov    QWORD PTR [rsp+0x250],rax
   1400039e1:	movsxd r12,edx
   1400039e4:	mov    rdi,rcx
   1400039e7:	xor    ebx,ebx
   1400039e9:	mov    WORD PTR [rcx],bx
   1400039ec:	lea    rcx,[rsp+0x40]
   1400039f1:	call   0x140002b04
   1400039f6:	mov    esi,eax
   1400039f8:	test   eax,eax
   1400039fa:	jns    0x140003a13
   1400039fc:	mov    edx,eax
   1400039fe:	lea    rcx,[rip+0x327b]        # 0x140006c80
   140003a05:	call   0x140004814
   140003a0a:	xor    edx,edx
   140003a0c:	mov    ecx,esi
   140003a0e:	call   0x140005830
   140003a13:	lea    rdx,[rsp+0x40]
   140003a18:	lea    rcx,[rsp+0x28]
   140003a1d:	call   0x1400017d8
   140003a22:	mov    rax,QWORD PTR [rax]
   140003a25:	test   rax,rax
   140003a28:	je     0x140003a2f
   140003a2a:	mov    r8,QWORD PTR [rax]
   140003a2d:	jmp    0x140003a32
   140003a2f:	mov    r8,rbx
   140003a32:	mov    rdx,r12
   140003a35:	mov    r9d,0x104
   140003a3b:	mov    rcx,rdi
   140003a3e:	call   QWORD PTR [rip+0x2824]        # 0x140006268
   140003a44:	mov    rdi,QWORD PTR [rsp+0x28]
   140003a49:	test   rdi,rdi
   140003a4c:	je     0x140003a84
   140003a4e:	or     eax,0xffffffff
   140003a51:	lock xadd DWORD PTR [rdi+0x10],eax
   140003a56:	dec    eax
   140003a58:	jne    0x140003a84
   140003a5a:	test   rdi,rdi
   140003a5d:	je     0x140003a84
   140003a5f:	cmp    QWORD PTR [rdi],rbx
   140003a62:	je     0x140003a6d
   140003a64:	mov    rcx,QWORD PTR [rdi]
   140003a67:	call   QWORD PTR [rip+0x28b3]        # 0x140006320
   140003a6d:	mov    rcx,QWORD PTR [rdi+0x8]
   140003a71:	test   rcx,rcx
   140003a74:	je     0x140003a7b
   140003a76:	call   0x1400049e6
   140003a7b:	mov    rcx,rdi
   140003a7e:	call   0x140004a54
   140003a83:	nop
   140003a84:	jmp    0x140003a8c
   140003a86:	xor    ebx,ebx
   140003a88:	mov    esi,DWORD PTR [rsp+0x20]
   140003a8c:	test   esi,esi
   140003a8e:	setns  bl
   140003a91:	mov    eax,ebx
   140003a93:	mov    rcx,QWORD PTR [rsp+0x250]
   140003a9b:	xor    rcx,rsp
   140003a9e:	call   0x1400049c0
   140003aa3:	mov    rbx,QWORD PTR [rsp+0x290]
   140003aab:	add    rsp,0x260
   140003ab2:	pop    r12
   140003ab4:	pop    rdi
   140003ab5:	pop    rsi
   140003ab6:	ret    
   140003ab7:	int3   
   140003ab8:	int3   
   140003ab9:	int3   
   140003aba:	int3   
   140003abb:	int3   
   140003abc:	int3   
   140003abd:	int3   
   140003abe:	int3   
   140003abf:	int3   
   140003ac0:	int3   
   140003ac1:	int3   
   140003ac2:	int3   
   140003ac3:	int3   
   140003ac4:	mov    rax,rsp
   140003ac7:	push   rsi
   140003ac8:	push   rdi
   140003ac9:	push   r12
   140003acb:	sub    rsp,0x270
   140003ad2:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140003adb:	mov    QWORD PTR [rax+0x18],rbx
   140003adf:	mov    rax,QWORD PTR [rip+0x5542]        # 0x140009028
   140003ae6:	xor    rax,rsp
   140003ae9:	mov    QWORD PTR [rsp+0x260],rax
   140003af1:	movsxd r12,edx
   140003af4:	mov    rdi,rcx
   140003af7:	xor    ebx,ebx
   140003af9:	mov    WORD PTR [rcx],bx
   140003afc:	mov    DWORD PTR [rsp+0x20],0x104
   140003b04:	lea    r9,[rsp+0x50]
   140003b09:	xor    r8d,r8d
   140003b0c:	xor    edx,edx
   140003b0e:	lea    rcx,[rip+0x296b]        # 0x140006480
   140003b15:	call   QWORD PTR [rip+0x55d5]        # 0x1400090f0
   140003b1b:	mov    esi,eax
   140003b1d:	test   eax,eax
   140003b1f:	jns    0x140003b38
   140003b21:	mov    edx,eax
   140003b23:	lea    rcx,[rip+0x31c6]        # 0x140006cf0
   140003b2a:	call   0x140004814
   140003b2f:	xor    edx,edx
   140003b31:	mov    ecx,esi
   140003b33:	call   0x140005830
   140003b38:	lea    rdx,[rsp+0x50]
   140003b3d:	lea    rcx,[rsp+0x38]
   140003b42:	call   0x1400017d8
   140003b47:	mov    rax,QWORD PTR [rax]
   140003b4a:	test   rax,rax
   140003b4d:	je     0x140003b54
   140003b4f:	mov    r8,QWORD PTR [rax]
   140003b52:	jmp    0x140003b57
   140003b54:	mov    r8,rbx
   140003b57:	mov    rdx,r12
   140003b5a:	mov    r9d,0x104
   140003b60:	mov    rcx,rdi
   140003b63:	call   QWORD PTR [rip+0x26ff]        # 0x140006268
   140003b69:	mov    rdi,QWORD PTR [rsp+0x38]
   140003b6e:	test   rdi,rdi
   140003b71:	je     0x140003ba9
   140003b73:	or     eax,0xffffffff
   140003b76:	lock xadd DWORD PTR [rdi+0x10],eax
   140003b7b:	dec    eax
   140003b7d:	jne    0x140003ba9
   140003b7f:	test   rdi,rdi
   140003b82:	je     0x140003ba9
   140003b84:	cmp    QWORD PTR [rdi],rbx
   140003b87:	je     0x140003b92
   140003b89:	mov    rcx,QWORD PTR [rdi]
   140003b8c:	call   QWORD PTR [rip+0x278e]        # 0x140006320
   140003b92:	mov    rcx,QWORD PTR [rdi+0x8]
   140003b96:	test   rcx,rcx
   140003b99:	je     0x140003ba0
   140003b9b:	call   0x1400049e6
   140003ba0:	mov    rcx,rdi
   140003ba3:	call   0x140004a54
   140003ba8:	nop
   140003ba9:	jmp    0x140003bb1
   140003bab:	xor    ebx,ebx
   140003bad:	mov    esi,DWORD PTR [rsp+0x30]
   140003bb1:	test   esi,esi
   140003bb3:	setns  bl
   140003bb6:	mov    eax,ebx
   140003bb8:	mov    rcx,QWORD PTR [rsp+0x260]
   140003bc0:	xor    rcx,rsp
   140003bc3:	call   0x1400049c0
   140003bc8:	mov    rbx,QWORD PTR [rsp+0x2a0]
   140003bd0:	add    rsp,0x270
   140003bd7:	pop    r12
   140003bd9:	pop    rdi
   140003bda:	pop    rsi
   140003bdb:	ret    
   140003bdc:	int3   
   140003bdd:	int3   
   140003bde:	int3   
   140003bdf:	int3   
   140003be0:	int3   
   140003be1:	int3   
   140003be2:	int3   
   140003be3:	int3   
   140003be4:	mov    DWORD PTR [rsp+0x10],edx
   140003be8:	push   rbp
   140003be9:	push   rbx
   140003bea:	push   rsi
   140003beb:	push   rdi
   140003bec:	push   r12
   140003bee:	mov    rbp,rsp
   140003bf1:	sub    rsp,0x70
   140003bf5:	and    QWORD PTR [rbp-0x48],0x0
   140003bfa:	and    DWORD PTR [rbp-0x40],0x0
   140003bfe:	and    QWORD PTR [rbp-0x38],0x0
   140003c03:	and    QWORD PTR [rbp-0x30],0x0
   140003c08:	and    DWORD PTR [rbp-0x28],0x0
   140003c0c:	and    QWORD PTR [rbp-0x20],0x0
   140003c11:	and    QWORD PTR [rbp-0x18],0x0
   140003c16:	and    DWORD PTR [rbp-0x10],0x0
   140003c1a:	and    QWORD PTR [rbp-0x8],0x0
   140003c1f:	mov    r12,rcx
   140003c22:	mov    esi,0x20019
   140003c27:	lea    r8,[rip+0x327a]        # 0x140006ea8
   140003c2e:	lea    rcx,[rbp-0x48]
   140003c32:	mov    r9d,esi
   140003c35:	mov    rdx,0xffffffff80000000
   140003c3c:	call   0x140001a9c
   140003c41:	test   eax,eax
   140003c43:	je     0x140003c5b
   140003c45:	mov    rcx,QWORD PTR [rbp-0x48]
   140003c49:	test   rcx,rcx
   140003c4c:	je     0x140003c54
   140003c4e:	call   QWORD PTR [rip+0x5454]        # 0x1400090a8
   140003c54:	xor    eax,eax
   140003c56:	jmp    0x140003e17
   140003c5b:	and    QWORD PTR [rbp-0x50],0x0
   140003c60:	lea    rdx,[rbp-0x50]
   140003c64:	lea    rcx,[rip+0x2765]        # 0x1400063d0
   140003c6b:	call   QWORD PTR [rip+0x26e7]        # 0x140006358
   140003c71:	test   eax,eax
   140003c73:	js     0x140003c45
   140003c75:	mov    rdx,QWORD PTR [rbp-0x50]
   140003c79:	lea    rcx,[rbp+0x48]
   140003c7d:	call   0x1400017d8
   140003c82:	mov    rcx,QWORD PTR [rbp-0x50]
   140003c86:	call   QWORD PTR [rip+0x26c4]        # 0x140006350
   140003c8c:	mov    rbx,QWORD PTR [rbp+0x48]
   140003c90:	test   rbx,rbx
   140003c93:	je     0x140003c9a
   140003c95:	mov    r8,QWORD PTR [rbx]
   140003c98:	jmp    0x140003c9d
   140003c9a:	xor    r8d,r8d
   140003c9d:	mov    rdi,QWORD PTR [rbp-0x48]
   140003ca1:	lea    rcx,[rbp-0x30]
   140003ca5:	mov    r9d,esi
   140003ca8:	mov    rdx,rdi
   140003cab:	call   0x140001a9c
   140003cb0:	test   eax,eax
   140003cb2:	je     0x140003d11
   140003cb4:	test   rbx,rbx
   140003cb7:	je     0x140003cf1
   140003cb9:	or     eax,0xffffffff
   140003cbc:	lock xadd DWORD PTR [rbx+0x10],eax
   140003cc1:	dec    eax
   140003cc3:	jne    0x140003ced
   140003cc5:	mov    rbx,QWORD PTR [rbp+0x48]
   140003cc9:	mov    rcx,QWORD PTR [rbx]
   140003ccc:	test   rcx,rcx
   140003ccf:	je     0x140003cd7
   140003cd1:	call   QWORD PTR [rip+0x2649]        # 0x140006320
   140003cd7:	mov    rcx,QWORD PTR [rbx+0x8]
   140003cdb:	test   rcx,rcx
   140003cde:	je     0x140003ce5
   140003ce0:	call   0x1400049e6
   140003ce5:	mov    rcx,rbx
   140003ce8:	call   0x140004a54
   140003ced:	mov    rdi,QWORD PTR [rbp-0x48]
   140003cf1:	mov    rcx,QWORD PTR [rbp-0x30]
   140003cf5:	test   rcx,rcx
   140003cf8:	je     0x140003d00
   140003cfa:	call   QWORD PTR [rip+0x53a8]        # 0x1400090a8
   140003d00:	test   rdi,rdi
   140003d03:	je     0x140003c54
   140003d09:	mov    rcx,rdi
   140003d0c:	jmp    0x140003c4e
   140003d11:	mov    r9d,esi
   140003d14:	mov    rsi,QWORD PTR [rbp-0x30]
   140003d18:	lea    r8,[rip+0x3199]        # 0x140006eb8
   140003d1f:	lea    rcx,[rbp-0x18]
   140003d23:	mov    rdx,rsi
   140003d26:	call   0x140001a9c
   140003d2b:	test   eax,eax
   140003d2d:	je     0x140003d90
   140003d2f:	test   rbx,rbx
   140003d32:	je     0x140003d70
   140003d34:	or     eax,0xffffffff
   140003d37:	lock xadd DWORD PTR [rbx+0x10],eax
   140003d3c:	dec    eax
   140003d3e:	jne    0x140003d68
   140003d40:	mov    rbx,QWORD PTR [rbp+0x48]
   140003d44:	mov    rcx,QWORD PTR [rbx]
   140003d47:	test   rcx,rcx
   140003d4a:	je     0x140003d52
   140003d4c:	call   QWORD PTR [rip+0x25ce]        # 0x140006320
   140003d52:	mov    rcx,QWORD PTR [rbx+0x8]
   140003d56:	test   rcx,rcx
   140003d59:	je     0x140003d60
   140003d5b:	call   0x1400049e6
   140003d60:	mov    rcx,rbx
   140003d63:	call   0x140004a54
   140003d68:	mov    rsi,QWORD PTR [rbp-0x30]
   140003d6c:	mov    rdi,QWORD PTR [rbp-0x48]
   140003d70:	mov    rcx,QWORD PTR [rbp-0x18]
   140003d74:	test   rcx,rcx
   140003d77:	je     0x140003d7f
   140003d79:	call   QWORD PTR [rip+0x5329]        # 0x1400090a8
   140003d7f:	test   rsi,rsi
   140003d82:	je     0x140003d00
   140003d88:	mov    rcx,rsi
   140003d8b:	jmp    0x140003cfa
   140003d90:	lea    r9,[rbp+0x38]
   140003d94:	lea    rcx,[rbp-0x18]
   140003d98:	mov    r8,r12
   140003d9b:	xor    edx,edx
   140003d9d:	call   0x140001b30
   140003da2:	test   eax,eax
   140003da4:	jne    0x140003d2f
   140003da6:	test   rbx,rbx
   140003da9:	je     0x140003de7
   140003dab:	or     eax,0xffffffff
   140003dae:	lock xadd DWORD PTR [rbx+0x10],eax
   140003db3:	dec    eax
   140003db5:	jne    0x140003ddf
   140003db7:	mov    rbx,QWORD PTR [rbp+0x48]
   140003dbb:	mov    rcx,QWORD PTR [rbx]
   140003dbe:	test   rcx,rcx
   140003dc1:	je     0x140003dc9
   140003dc3:	call   QWORD PTR [rip+0x2557]        # 0x140006320
   140003dc9:	mov    rcx,QWORD PTR [rbx+0x8]
   140003dcd:	test   rcx,rcx
   140003dd0:	je     0x140003dd7
   140003dd2:	call   0x1400049e6
   140003dd7:	mov    rcx,rbx
   140003dda:	call   0x140004a54
   140003ddf:	mov    rsi,QWORD PTR [rbp-0x30]
   140003de3:	mov    rdi,QWORD PTR [rbp-0x48]
   140003de7:	mov    rcx,QWORD PTR [rbp-0x18]
   140003deb:	test   rcx,rcx
   140003dee:	je     0x140003df6
   140003df0:	call   QWORD PTR [rip+0x52b2]        # 0x1400090a8
   140003df6:	test   rsi,rsi
   140003df9:	je     0x140003e04
   140003dfb:	mov    rcx,rsi
   140003dfe:	call   QWORD PTR [rip+0x52a4]        # 0x1400090a8
   140003e04:	test   rdi,rdi
   140003e07:	je     0x140003e12
   140003e09:	mov    rcx,rdi
   140003e0c:	call   QWORD PTR [rip+0x5296]        # 0x1400090a8
   140003e12:	mov    eax,0x1
   140003e17:	add    rsp,0x70
   140003e1b:	pop    r12
   140003e1d:	pop    rdi
   140003e1e:	pop    rsi
   140003e1f:	pop    rbx
   140003e20:	pop    rbp
   140003e21:	ret    
   140003e22:	int3   
   140003e23:	int3   
   140003e24:	int3   
   140003e25:	int3   
   140003e26:	int3   
   140003e27:	int3   
   140003e28:	int3   
   140003e29:	int3   
   140003e2a:	int3   
   140003e2b:	int3   
   140003e2c:	int3   
   140003e2d:	int3   
   140003e2e:	int3   
   140003e2f:	int3   
   140003e30:	int3   
   140003e31:	int3   
   140003e32:	int3   
   140003e33:	int3   
   140003e34:	mov    QWORD PTR [rsp+0x8],rbx
   140003e39:	push   rbp
   140003e3a:	push   rsi
   140003e3b:	push   rdi
   140003e3c:	push   r12
   140003e3e:	push   r13
   140003e40:	mov    rbp,rsp
   140003e43:	sub    rsp,0x60
   140003e47:	xor    r12d,r12d
   140003e4a:	mov    rsi,rcx
   140003e4d:	lea    rdx,[rip+0x3474]        # 0x1400072c8
   140003e54:	lea    rcx,[rbp+0x40]
   140003e58:	mov    QWORD PTR [rbp-0x18],r12
   140003e5c:	mov    DWORD PTR [rbp-0x10],r12d
   140003e60:	mov    QWORD PTR [rbp-0x8],r12
   140003e64:	lea    edi,[r12+0x1]
   140003e69:	call   0x1400017d8
   140003e6e:	mov    r11,QWORD PTR [rbp+0x40]
   140003e72:	mov    QWORD PTR [rbp+0x48],r11
   140003e76:	test   r11,r11
   140003e79:	je     0x140003e80
   140003e7b:	lock add DWORD PTR [r11+0x10],edi
   140003e80:	lea    rdx,[rip+0x2985]        # 0x14000680c
   140003e87:	lea    rcx,[rbp-0x30]
   140003e8b:	call   0x1400017d8
   140003e90:	lea    rdx,[rbp-0x30]
   140003e94:	lea    rcx,[rbp+0x48]
   140003e98:	call   0x140004494
   140003e9d:	mov    rax,QWORD PTR [rbp-0x30]
   140003ea1:	or     r13d,0xffffffff
   140003ea5:	test   rax,rax
   140003ea8:	je     0x140003edf
   140003eaa:	mov    ecx,r13d
   140003ead:	lock xadd DWORD PTR [rax+0x10],ecx
   140003eb2:	add    ecx,r13d
   140003eb5:	jne    0x140003edf
   140003eb7:	mov    rbx,QWORD PTR [rbp-0x30]
   140003ebb:	mov    rcx,QWORD PTR [rbx]
   140003ebe:	test   rcx,rcx
   140003ec1:	je     0x140003ec9
   140003ec3:	call   QWORD PTR [rip+0x2457]        # 0x140006320
   140003ec9:	mov    rcx,QWORD PTR [rbx+0x8]
   140003ecd:	test   rcx,rcx
   140003ed0:	je     0x140003ed7
   140003ed2:	call   0x1400049e6
   140003ed7:	mov    rcx,rbx
   140003eda:	call   0x140004a54
   140003edf:	lea    rcx,[rbp-0x28]
   140003ee3:	mov    rdx,rsi
   140003ee6:	call   0x1400017d8
   140003eeb:	lea    rdx,[rbp-0x28]
   140003eef:	lea    rcx,[rbp+0x48]
   140003ef3:	call   0x140004494
   140003ef8:	mov    r11,QWORD PTR [rbp-0x28]
   140003efc:	test   r11,r11
   140003eff:	je     0x140003f37
   140003f01:	mov    eax,r13d
   140003f04:	lock xadd DWORD PTR [r11+0x10],eax
   140003f0a:	add    eax,r13d
   140003f0d:	jne    0x140003f37
   140003f0f:	mov    rbx,QWORD PTR [rbp-0x28]
   140003f13:	mov    rcx,QWORD PTR [rbx]
   140003f16:	test   rcx,rcx
   140003f19:	je     0x140003f21
   140003f1b:	call   QWORD PTR [rip+0x23ff]        # 0x140006320
   140003f21:	mov    rcx,QWORD PTR [rbx+0x8]
   140003f25:	test   rcx,rcx
   140003f28:	je     0x140003f2f
   140003f2a:	call   0x1400049e6
   140003f2f:	mov    rcx,rbx
   140003f32:	call   0x140004a54
   140003f37:	mov    rbx,QWORD PTR [rbp+0x48]
   140003f3b:	test   rbx,rbx
   140003f3e:	je     0x140003f45
   140003f40:	mov    rdx,QWORD PTR [rbx]
   140003f43:	jmp    0x140003f48
   140003f45:	mov    rdx,r12
   140003f48:	lea    rax,[rbp-0x20]
   140003f4c:	mov    r9d,0x20019
   140003f52:	xor    r8d,r8d
   140003f55:	mov    rcx,0xffffffff80000001
   140003f5c:	mov    QWORD PTR [rsp+0x20],rax
   140003f61:	call   QWORD PTR [rip+0x5131]        # 0x140009098
   140003f67:	test   eax,eax
   140003f69:	je     0x14000407e
   140003f6f:	cmp    eax,0x2
   140003f72:	jne    0x140003ffe
   140003f78:	test   rbx,rbx
   140003f7b:	je     0x140003fb2
   140003f7d:	mov    eax,r13d
   140003f80:	lock xadd DWORD PTR [rbx+0x10],eax
   140003f85:	add    eax,r13d
   140003f88:	jne    0x140003fb2
   140003f8a:	mov    rbx,QWORD PTR [rbp+0x48]
   140003f8e:	mov    rcx,QWORD PTR [rbx]
   140003f91:	test   rcx,rcx
   140003f94:	je     0x140003f9c
   140003f96:	call   QWORD PTR [rip+0x2384]        # 0x140006320
   140003f9c:	mov    rcx,QWORD PTR [rbx+0x8]
   140003fa0:	test   rcx,rcx
   140003fa3:	je     0x140003faa
   140003fa5:	call   0x1400049e6
   140003faa:	mov    rcx,rbx
   140003fad:	call   0x140004a54
   140003fb2:	mov    r11,QWORD PTR [rbp+0x40]
   140003fb6:	test   r11,r11
   140003fb9:	je     0x140004165
   140003fbf:	mov    eax,r13d
   140003fc2:	lock xadd DWORD PTR [r11+0x10],eax
   140003fc8:	add    eax,r13d
   140003fcb:	jne    0x140004165
   140003fd1:	mov    rbx,QWORD PTR [rbp+0x40]
   140003fd5:	mov    rcx,QWORD PTR [rbx]
   140003fd8:	test   rcx,rcx
   140003fdb:	je     0x140003fe3
   140003fdd:	call   QWORD PTR [rip+0x233d]        # 0x140006320
   140003fe3:	mov    rcx,QWORD PTR [rbx+0x8]
   140003fe7:	test   rcx,rcx
   140003fea:	je     0x140003ff1
   140003fec:	call   0x1400049e6
   140003ff1:	mov    rcx,rbx
   140003ff4:	call   0x140004a54
   140003ff9:	jmp    0x140004165
   140003ffe:	test   rbx,rbx
   140004001:	je     0x140004038
   140004003:	mov    eax,r13d
   140004006:	lock xadd DWORD PTR [rbx+0x10],eax
   14000400b:	add    eax,r13d
   14000400e:	jne    0x140004038
   140004010:	mov    rbx,QWORD PTR [rbp+0x48]
   140004014:	mov    rcx,QWORD PTR [rbx]
   140004017:	test   rcx,rcx
   14000401a:	je     0x140004022
   14000401c:	call   QWORD PTR [rip+0x22fe]        # 0x140006320
   140004022:	mov    rcx,QWORD PTR [rbx+0x8]
   140004026:	test   rcx,rcx
   140004029:	je     0x140004030
   14000402b:	call   0x1400049e6
   140004030:	mov    rcx,rbx
   140004033:	call   0x140004a54
   140004038:	mov    r11,QWORD PTR [rbp+0x40]
   14000403c:	test   r11,r11
   14000403f:	je     0x140004077
   140004041:	mov    eax,r13d
   140004044:	lock xadd DWORD PTR [r11+0x10],eax
   14000404a:	add    eax,r13d
   14000404d:	jne    0x140004077
   14000404f:	mov    rbx,QWORD PTR [rbp+0x40]
   140004053:	mov    rcx,QWORD PTR [rbx]
   140004056:	test   rcx,rcx
   140004059:	je     0x140004061
   14000405b:	call   QWORD PTR [rip+0x22bf]        # 0x140006320
   140004061:	mov    rcx,QWORD PTR [rbx+0x8]
   140004065:	test   rcx,rcx
   140004068:	je     0x14000406f
   14000406a:	call   0x1400049e6
   14000406f:	mov    rcx,rbx
   140004072:	call   0x140004a54
   140004077:	xor    eax,eax
   140004079:	jmp    0x140004167
   14000407e:	mov    rcx,QWORD PTR [rbp-0x20]
   140004082:	call   QWORD PTR [rip+0x5020]        # 0x1400090a8
   140004088:	mov    r11,QWORD PTR [rbp+0x40]
   14000408c:	test   r11,r11
   14000408f:	je     0x140004096
   140004091:	mov    r8,QWORD PTR [r11]
   140004094:	jmp    0x140004099
   140004096:	mov    r8,r12
   140004099:	lea    rcx,[rbp-0x18]
   14000409d:	mov    rdx,0xffffffff80000001
   1400040a4:	mov    r9d,0x2001f
   1400040aa:	call   0x140001a9c
   1400040af:	test   eax,eax
   1400040b1:	jne    0x1400040dd
   1400040b3:	lea    rcx,[rbp-0x18]
   1400040b7:	mov    rdx,rsi
   1400040ba:	call   0x14000417c
   1400040bf:	test   eax,eax
   1400040c1:	je     0x1400040ca
   1400040c3:	cmp    eax,0x2
   1400040c6:	cmovne edi,r12d
   1400040ca:	mov    rcx,QWORD PTR [rbp-0x18]
   1400040ce:	test   rcx,rcx
   1400040d1:	je     0x1400040dd
   1400040d3:	call   QWORD PTR [rip+0x4fcf]        # 0x1400090a8
   1400040d9:	mov    QWORD PTR [rbp-0x18],r12
   1400040dd:	test   rbx,rbx
   1400040e0:	je     0x140004117
   1400040e2:	mov    eax,r13d
   1400040e5:	lock xadd DWORD PTR [rbx+0x10],eax
   1400040ea:	add    eax,r13d
   1400040ed:	jne    0x140004117
   1400040ef:	mov    rbx,QWORD PTR [rbp+0x48]
   1400040f3:	mov    rcx,QWORD PTR [rbx]
   1400040f6:	test   rcx,rcx
   1400040f9:	je     0x140004101
   1400040fb:	call   QWORD PTR [rip+0x221f]        # 0x140006320
   140004101:	mov    rcx,QWORD PTR [rbx+0x8]
   140004105:	test   rcx,rcx
   140004108:	je     0x14000410f
   14000410a:	call   0x1400049e6
   14000410f:	mov    rcx,rbx
   140004112:	call   0x140004a54
   140004117:	mov    r11,QWORD PTR [rbp+0x40]
   14000411b:	test   r11,r11
   14000411e:	je     0x140004156
   140004120:	mov    eax,r13d
   140004123:	lock xadd DWORD PTR [r11+0x10],eax
   140004129:	add    eax,r13d
   14000412c:	jne    0x140004156
   14000412e:	mov    rbx,QWORD PTR [rbp+0x40]
   140004132:	mov    rcx,QWORD PTR [rbx]
   140004135:	test   rcx,rcx
   140004138:	je     0x140004140
   14000413a:	call   QWORD PTR [rip+0x21e0]        # 0x140006320
   140004140:	mov    rcx,QWORD PTR [rbx+0x8]
   140004144:	test   rcx,rcx
   140004147:	je     0x14000414e
   140004149:	call   0x1400049e6
   14000414e:	mov    rcx,rbx
   140004151:	call   0x140004a54
   140004156:	mov    rcx,QWORD PTR [rbp-0x18]
   14000415a:	test   rcx,rcx
   14000415d:	je     0x140004165
   14000415f:	call   QWORD PTR [rip+0x4f43]        # 0x1400090a8
   140004165:	mov    eax,edi
   140004167:	mov    rbx,QWORD PTR [rsp+0x90]
   14000416f:	add    rsp,0x60
   140004173:	pop    r13
   140004175:	pop    r12
   140004177:	pop    rdi
   140004178:	pop    rsi
   140004179:	pop    rbp
   14000417a:	ret    
   14000417b:	int3   
   14000417c:	mov    QWORD PTR [rsp+0x18],rbx
   140004181:	push   rbp
   140004182:	push   rsi
   140004183:	push   rdi
   140004184:	lea    rbp,[rsp-0x180]
   14000418c:	sub    rsp,0x280
   140004193:	mov    rax,QWORD PTR [rip+0x4e8e]        # 0x140009028
   14000419a:	xor    rax,rsp
   14000419d:	mov    QWORD PTR [rbp+0x170],rax
   1400041a4:	mov    r9d,DWORD PTR [rcx+0x8]
   1400041a8:	xor    eax,eax
   1400041aa:	mov    rsi,rdx
   1400041ad:	mov    r8,rdx
   1400041b0:	mov    rdx,QWORD PTR [rcx]
   1400041b3:	mov    rdi,rcx
   1400041b6:	lea    rcx,[rsp+0x48]
   1400041bb:	or     r9d,0x2001f
   1400041c2:	mov    QWORD PTR [rsp+0x48],rax
   1400041c7:	mov    DWORD PTR [rsp+0x50],eax
   1400041cb:	mov    QWORD PTR [rsp+0x58],rax
   1400041d0:	call   0x140001a9c
   1400041d5:	jmp    0x1400041e6
   1400041d7:	lea    rdx,[rsp+0x70]
   1400041dc:	lea    rcx,[rsp+0x48]
   1400041e1:	call   0x14000417c
   1400041e6:	mov    rcx,QWORD PTR [rsp+0x48]
   1400041eb:	mov    ebx,eax
   1400041ed:	test   eax,eax
   1400041ef:	jne    0x140004255
   1400041f1:	xor    ebx,ebx
   1400041f3:	lea    rax,[rsp+0x60]
   1400041f8:	lea    r9,[rsp+0x40]
   1400041fd:	mov    QWORD PTR [rsp+0x38],rax
   140004202:	mov    QWORD PTR [rsp+0x30],rbx
   140004207:	lea    r8,[rsp+0x70]
   14000420c:	xor    edx,edx
   14000420e:	mov    QWORD PTR [rsp+0x28],rbx
   140004213:	mov    DWORD PTR [rsp+0x40],0x100
   14000421b:	mov    QWORD PTR [rsp+0x20],rbx
   140004220:	call   QWORD PTR [rip+0x4eaa]        # 0x1400090d0
   140004226:	test   eax,eax
   140004228:	je     0x1400041d7
   14000422a:	mov    rcx,QWORD PTR [rsp+0x48]
   14000422f:	test   rcx,rcx
   140004232:	je     0x14000423f
   140004234:	call   QWORD PTR [rip+0x4e6e]        # 0x1400090a8
   14000423a:	mov    QWORD PTR [rsp+0x48],rbx
   14000423f:	mov    rdx,rsi
   140004242:	mov    rcx,rdi
   140004245:	mov    DWORD PTR [rsp+0x50],ebx
   140004249:	call   0x140001a04
   14000424e:	mov    rcx,QWORD PTR [rsp+0x48]
   140004253:	mov    ebx,eax
   140004255:	test   rcx,rcx
   140004258:	je     0x140004260
   14000425a:	call   QWORD PTR [rip+0x4e48]        # 0x1400090a8
   140004260:	mov    eax,ebx
   140004262:	mov    rcx,QWORD PTR [rbp+0x170]
   140004269:	xor    rcx,rsp
   14000426c:	call   0x1400049c0
   140004271:	mov    rbx,QWORD PTR [rsp+0x2b0]
   140004279:	add    rsp,0x280
   140004280:	pop    rdi
   140004281:	pop    rsi
   140004282:	pop    rbp
   140004283:	ret    
   140004284:	mov    QWORD PTR [rsp+0x8],rbx
   140004289:	mov    QWORD PTR [rsp+0x10],rbp
   14000428e:	mov    QWORD PTR [rsp+0x18],rsi
   140004293:	push   rdi
   140004294:	push   r12
   140004296:	push   r13
   140004298:	sub    rsp,0x20
   14000429c:	and    QWORD PTR [rcx+0x8],0x0
   1400042a1:	mov    rsi,rcx
   1400042a4:	mov    DWORD PTR [rcx+0x10],0x1
   1400042ab:	mov    rcx,QWORD PTR [rdx]
   1400042ae:	mov    r13,r8
   1400042b1:	mov    r12,rdx
   1400042b4:	test   rcx,rcx
   1400042b7:	je     0x1400042cb
   1400042b9:	mov    rcx,QWORD PTR [rcx]
   1400042bc:	test   rcx,rcx
   1400042bf:	je     0x1400042cb
   1400042c1:	call   QWORD PTR [rip+0x2039]        # 0x140006300
   1400042c7:	mov    ebp,eax
   1400042c9:	jmp    0x1400042cd
   1400042cb:	xor    ebp,ebp
   1400042cd:	mov    rax,QWORD PTR [r13+0x0]
   1400042d1:	test   rax,rax
   1400042d4:	je     0x1400042e8
   1400042d6:	mov    rcx,QWORD PTR [rax]
   1400042d9:	test   rcx,rcx
   1400042dc:	je     0x1400042e8
   1400042de:	call   QWORD PTR [rip+0x201c]        # 0x140006300
   1400042e4:	mov    edi,eax
   1400042e6:	jmp    0x1400042ea
   1400042e8:	xor    edi,edi
   1400042ea:	lea    ebx,[rdi+rbp*1]
   1400042ed:	cmp    ebx,edi
   1400042ef:	jb     0x140004396
   1400042f5:	mov    eax,ebx
   1400042f7:	mov    ecx,0xffffffff
   1400042fc:	add    rax,rax
   1400042ff:	cmp    rax,rcx
   140004302:	ja     0x140004396
   140004308:	lea    edx,[rbx+rbx*1]
   14000430b:	xor    ecx,ecx
   14000430d:	call   QWORD PTR [rip+0x1ff5]        # 0x140006308
   140004313:	mov    rcx,rax
   140004316:	mov    QWORD PTR [rsi],rax
   140004319:	test   rax,rax
   14000431c:	jne    0x14000432d
   14000431e:	test   ebx,ebx
   140004320:	je     0x14000437a
   140004322:	mov    ecx,0x8007000e
   140004327:	call   0x1400057e0
   14000432c:	int3   
   14000432d:	mov    r8,QWORD PTR [r12]
   140004331:	test   r8,r8
   140004334:	je     0x140004339
   140004336:	mov    r8,QWORD PTR [r8]
   140004339:	test   r8,r8
   14000433c:	je     0x140004351
   14000433e:	lea    r9d,[rbp+0x1]
   140004342:	lea    edx,[rbx+0x1]
   140004345:	add    r9,r9
   140004348:	add    rdx,rdx
   14000434b:	call   QWORD PTR [rip+0x1f2f]        # 0x140006280
   140004351:	mov    r8,QWORD PTR [r13+0x0]
   140004355:	test   r8,r8
   140004358:	je     0x14000435d
   14000435a:	mov    r8,QWORD PTR [r8]
   14000435d:	test   r8,r8
   140004360:	je     0x14000437a
   140004362:	mov    rax,QWORD PTR [rsi]
   140004365:	lea    edx,[rdi+0x1]
   140004368:	mov    ecx,ebp
   14000436a:	add    rdx,rdx
   14000436d:	lea    rcx,[rax+rcx*2]
   140004371:	mov    r9,rdx
   140004374:	call   QWORD PTR [rip+0x1f06]        # 0x140006280
   14000437a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000437f:	mov    rbp,QWORD PTR [rsp+0x48]
   140004384:	mov    rax,rsi
   140004387:	mov    rsi,QWORD PTR [rsp+0x50]
   14000438c:	add    rsp,0x20
   140004390:	pop    r13
   140004392:	pop    r12
   140004394:	pop    rdi
   140004395:	ret    
   140004396:	mov    ecx,0x8007000e
   14000439b:	call   0x1400057e0
   1400043a0:	int3   
   1400043a1:	int3   
   1400043a2:	int3   
   1400043a3:	int3   
   1400043a4:	mov    rax,rsp
   1400043a7:	mov    QWORD PTR [rax+0x8],rbx
   1400043ab:	mov    QWORD PTR [rax+0x10],rsi
   1400043af:	push   rdi
   1400043b0:	sub    rsp,0x40
   1400043b4:	lea    rbx,[rcx+0x18]
   1400043b8:	xor    esi,esi
   1400043ba:	mov    rdi,rcx
   1400043bd:	cmp    QWORD PTR [rbx],rsi
   1400043c0:	jne    0x140004481
   1400043c6:	mov    r8d,DWORD PTR [rcx+0x8]
   1400043ca:	mov    QWORD PTR [rax-0x18],rsi
   1400043ce:	mov    DWORD PTR [rax-0x20],esi
   1400043d1:	mov    r9d,0x400
   1400043d7:	xor    edx,edx
   1400043d9:	mov    ecx,0x1300
   1400043de:	mov    QWORD PTR [rax-0x28],rbx
   1400043e2:	call   QWORD PTR [rip+0x1d70]        # 0x140006158
   1400043e8:	mov    rcx,QWORD PTR [rbx]
   1400043eb:	test   rcx,rcx
   1400043ee:	je     0x140004423
   1400043f0:	call   QWORD PTR [rip+0x1cd2]        # 0x1400060c8
   1400043f6:	cmp    eax,0x1
   1400043f9:	jle    0x140004481
   1400043ff:	mov    rcx,QWORD PTR [rbx]
   140004402:	cdqe   
   140004404:	cmp    WORD PTR [rcx+rax*2-0x2],0xa
   14000440a:	jne    0x140004481
   14000440c:	mov    WORD PTR [rcx+rax*2-0x2],si
   140004411:	mov    rcx,QWORD PTR [rbx]
   140004414:	cmp    WORD PTR [rcx+rax*2-0x4],0xd
   14000441a:	jne    0x140004481
   14000441c:	mov    WORD PTR [rcx+rax*2-0x4],si
   140004421:	jmp    0x140004481
   140004423:	mov    edx,0x40
   140004428:	xor    ecx,ecx
   14000442a:	call   QWORD PTR [rip+0x1c90]        # 0x1400060c0
   140004430:	mov    rcx,rax
   140004433:	mov    QWORD PTR [rbx],rax
   140004436:	test   rax,rax
   140004439:	je     0x140004481
   14000443b:	mov    r9d,DWORD PTR [rdi+0x8]
   14000443f:	lea    eax,[r9+0x7ffbfe00]
   140004446:	cmp    eax,0xfdff
   14000444b:	ja     0x14000445b
   14000444d:	mov    edx,0x200
   140004452:	movzx  eax,r9w
   140004456:	sub    ax,dx
   140004459:	jmp    0x14000445d
   14000445b:	mov    eax,esi
   14000445d:	mov    edx,0x20
   140004462:	test   ax,ax
   140004465:	je     0x140004474
   140004467:	movzx  r9d,ax
   14000446b:	lea    r8,[rip+0x2f8e]        # 0x140007400
   140004472:	jmp    0x14000447b
   140004474:	lea    r8,[rip+0x2f55]        # 0x1400073d0
   14000447b:	call   QWORD PTR [rip+0x1e27]        # 0x1400062a8
   140004481:	mov    rax,QWORD PTR [rbx]
   140004484:	mov    rsi,QWORD PTR [rsp+0x58]
   140004489:	mov    rbx,QWORD PTR [rsp+0x50]
   14000448e:	add    rsp,0x40
   140004492:	pop    rdi
   140004493:	ret    
   140004494:	rex push rdi
   140004496:	sub    rsp,0x30
   14000449a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400044a3:	mov    QWORD PTR [rsp+0x40],rbx
   1400044a8:	mov    QWORD PTR [rsp+0x48],rsi
   1400044ad:	mov    rbx,rdx
   1400044b0:	mov    rdi,rcx
   1400044b3:	mov    ecx,0x18
   1400044b8:	call   0x1400049e0
   1400044bd:	mov    QWORD PTR [rsp+0x50],rax
   1400044c2:	test   rax,rax
   1400044c5:	je     0x1400044da
   1400044c7:	mov    r8,rbx
   1400044ca:	mov    rdx,rdi
   1400044cd:	mov    rcx,rax
   1400044d0:	call   0x140004284
   1400044d5:	mov    rsi,rax
   1400044d8:	jmp    0x1400044dc
   1400044da:	xor    esi,esi
   1400044dc:	test   rsi,rsi
   1400044df:	jne    0x1400044ec
   1400044e1:	mov    ecx,0x8007000e
   1400044e6:	call   0x1400057e0
   1400044eb:	int3   
   1400044ec:	mov    rbx,QWORD PTR [rdi]
   1400044ef:	test   rbx,rbx
   1400044f2:	je     0x14000452d
   1400044f4:	or     eax,0xffffffff
   1400044f7:	lock xadd DWORD PTR [rbx+0x10],eax
   1400044fc:	dec    eax
   1400044fe:	jne    0x140004529
   140004500:	test   rbx,rbx
   140004503:	je     0x140004529
   140004505:	mov    rcx,QWORD PTR [rbx]
   140004508:	test   rcx,rcx
   14000450b:	je     0x140004513
   14000450d:	call   QWORD PTR [rip+0x1e0d]        # 0x140006320
   140004513:	mov    rcx,QWORD PTR [rbx+0x8]
   140004517:	test   rcx,rcx
   14000451a:	je     0x140004521
   14000451c:	call   0x1400049e6
   140004521:	mov    rcx,rbx
   140004524:	call   0x140004a54
   140004529:	and    QWORD PTR [rdi],0x0
   14000452d:	mov    QWORD PTR [rdi],rsi
   140004530:	mov    rax,rdi
   140004533:	mov    rbx,QWORD PTR [rsp+0x40]
   140004538:	mov    rsi,QWORD PTR [rsp+0x48]
   14000453d:	add    rsp,0x30
   140004541:	pop    rdi
   140004542:	ret    
   140004543:	int3   
   140004544:	rex.W jmp QWORD PTR [rip+0x1d15]        # 0x140006260
   14000454b:	int3   
   14000454c:	int3   
   14000454d:	int3   
   14000454e:	int3   
   14000454f:	int3   
   140004550:	int3   
   140004551:	int3   
   140004552:	int3   
   140004553:	int3   
   140004554:	mov    QWORD PTR [rsp+0x18],rbx
   140004559:	mov    QWORD PTR [rsp+0x20],rsi
   14000455e:	push   rdi
   14000455f:	sub    rsp,0x50
   140004563:	mov    rax,QWORD PTR [rip+0x4abe]        # 0x140009028
   14000456a:	xor    rax,rsp
   14000456d:	mov    QWORD PTR [rsp+0x40],rax
   140004572:	mov    rdi,rcx
   140004575:	lea    rcx,[rsp+0x30]
   14000457a:	mov    rbx,rdx
   14000457d:	call   QWORD PTR [rip+0x1cc5]        # 0x140006248
   140004583:	lea    rcx,[rsp+0x30]
   140004588:	call   QWORD PTR [rip+0x1cd2]        # 0x140006260
   14000458e:	lea    r8,[rip+0x305b]        # 0x1400075f0
   140004595:	mov    rdx,rbx
   140004598:	mov    r9,rax
   14000459b:	mov    rcx,rdi
   14000459e:	call   QWORD PTR [rip+0x1cac]        # 0x140006250
   1400045a4:	xor    esi,esi
   1400045a6:	test   rax,rax
   1400045a9:	je     0x1400045e4
   1400045ab:	lea    rcx,[rax+0x4]
   1400045af:	cmp    rcx,rbx
   1400045b2:	jae    0x1400045e4
   1400045b4:	movzx  r8d,WORD PTR [rsp+0x38]
   1400045ba:	sub    rbx,rax
   1400045bd:	lea    rcx,[rdi+rax*2]
   1400045c1:	mov    DWORD PTR [rsp+0x20],r8d
   1400045c6:	lea    rdx,[rbx-0x1]
   1400045ca:	lea    r9,[rip+0x303f]        # 0x140007610
   1400045d1:	or     r8,0xffffffffffffffff
   1400045d5:	call   QWORD PTR [rip+0x1c7d]        # 0x140006258
   1400045db:	test   eax,eax
   1400045dd:	jns    0x1400045e4
   1400045df:	mov    WORD PTR [rdi+rbx*2-0x2],si
   1400045e4:	mov    rax,rdi
   1400045e7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400045ec:	xor    rcx,rsp
   1400045ef:	call   0x1400049c0
   1400045f4:	mov    rbx,QWORD PTR [rsp+0x70]
   1400045f9:	mov    rsi,QWORD PTR [rsp+0x78]
   1400045fe:	add    rsp,0x50
   140004602:	pop    rdi
   140004603:	ret    
   140004604:	int3   
   140004605:	int3   
   140004606:	int3   
   140004607:	int3   
   140004608:	int3   
   140004609:	int3   
   14000460a:	int3   
   14000460b:	int3   
   14000460c:	int3   
   14000460d:	int3   
   14000460e:	int3   
   14000460f:	int3   
   140004610:	int3   
   140004611:	int3   
   140004612:	int3   
   140004613:	int3   
   140004614:	mov    QWORD PTR [rsp+0x18],rbx
   140004619:	mov    QWORD PTR [rsp+0x20],rsi
   14000461e:	push   rbp
   14000461f:	push   rdi
   140004620:	push   r12
   140004622:	push   r13
   140004624:	push   r14
   140004626:	lea    rbp,[rsp-0xf90]
   14000462e:	mov    eax,0x1090
   140004633:	call   0x140004a00
   140004638:	sub    rsp,rax
   14000463b:	mov    rax,QWORD PTR [rip+0x49e6]        # 0x140009028
   140004642:	xor    rax,rsp
   140004645:	mov    QWORD PTR [rbp+0xf80],rax
   14000464c:	mov    rsi,rcx
   14000464f:	mov    rdi,rdx
   140004652:	mov    ebx,0x7fe
   140004657:	lea    rcx,[rbp+0x782]
   14000465e:	xor    r13d,r13d
   140004661:	xor    edx,edx
   140004663:	mov    r8d,ebx
   140004666:	mov    WORD PTR [rbp+0x780],r13w
   14000466e:	call   0x140004af2
   140004673:	or     r14,0xffffffffffffffff
   140004677:	lea    rcx,[rbp+0x780]
   14000467e:	mov    r8,r14
   140004681:	mov    r9,rsi
   140004684:	mov    edx,0x400
   140004689:	mov    QWORD PTR [rsp+0x20],rdi
   14000468e:	call   QWORD PTR [rip+0x1bac]        # 0x140006240
   140004694:	test   eax,eax
   140004696:	jns    0x1400046a0
   140004698:	mov    WORD PTR [rbp+0xf7e],r13w
   1400046a0:	xor    edx,edx
   1400046a2:	lea    rcx,[rsp+0x42]
   1400046a7:	mov    WORD PTR [rsp+0x40],r13w
   1400046ad:	lea    r8d,[rdx+0x3e]
   1400046b1:	call   0x140004af2
   1400046b6:	mov    edi,0x20
   1400046bb:	lea    rcx,[rsp+0x40]
   1400046c0:	mov    edx,edi
   1400046c2:	call   0x140004554
   1400046c7:	lea    r8,[rip+0x2e2e]        # 0x1400074fc
   1400046ce:	lea    rcx,[rsp+0x40]
   1400046d3:	mov    edx,edi
   1400046d5:	call   QWORD PTR [rip+0x1b9d]        # 0x140006278
   1400046db:	lea    rcx,[rbp-0x7e]
   1400046df:	mov    r8,rbx
   1400046e2:	xor    edx,edx
   1400046e4:	mov    WORD PTR [rbp-0x80],r13w
   1400046e9:	call   0x140004af2
   1400046ee:	xor    eax,eax
   1400046f0:	mov    rcx,r14
   1400046f3:	mov    rdi,rsi
   1400046f6:	repnz scas ax,WORD PTR es:[rdi]
   1400046f9:	not    rcx
   1400046fc:	dec    rcx
   1400046ff:	cmp    rcx,0x6
   140004703:	jbe    0x14000471c
   140004705:	lea    rsi,[rsi+rcx*2-0xc]
   14000470a:	lea    rdi,[rip+0x2f0f]        # 0x140007620
   140004711:	lea    ecx,[rax+0x7]
   140004714:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140004717:	lea    edx,[rax+0x1]
   14000471a:	je     0x14000471f
   14000471c:	mov    edx,r13d
   14000471f:	lea    rdi,[rsp+0x40]
   140004724:	mov    rcx,r14
   140004727:	lea    rbx,[rip+0x2dde]        # 0x14000750c
   14000472e:	repnz scas ax,WORD PTR es:[rdi]
   140004731:	lea    rax,[rip+0x2ef8]        # 0x140007630
   140004738:	test   edx,edx
   14000473a:	not    rcx
   14000473d:	cmovne rbx,rax
   140004741:	lea    rsi,[rcx-0x1]
   140004745:	lea    r12,[rcx+rcx*1-0x2]
   14000474a:	call   QWORD PTR [rip+0x1950]        # 0x1400060a0
   140004750:	mov    edi,eax
   140004752:	call   QWORD PTR [rip+0x1950]        # 0x1400060a8
   140004758:	mov    edx,0x3ff
   14000475d:	sub    rdx,rsi
   140004760:	lea    rsi,[rbp+0x780]
   140004767:	lea    rcx,[rbp+r12*1-0x80]
   14000476c:	mov    QWORD PTR [rsp+0x38],rsi
   140004771:	mov    QWORD PTR [rsp+0x30],rbx
   140004776:	lea    r9,[rip+0x2ec3]        # 0x140007640
   14000477d:	mov    r8,r14
   140004780:	mov    DWORD PTR [rsp+0x28],edi
   140004784:	mov    DWORD PTR [rsp+0x20],eax
   140004788:	call   QWORD PTR [rip+0x1aca]        # 0x140006258
   14000478e:	test   eax,eax
   140004790:	jns    0x1400047b1
   140004792:	mov    rdx,r13
   140004795:	lea    rax,[rip+0x2ecc]        # 0x140007668
   14000479c:	movzx  eax,WORD PTR [rdx+rax*1]
   1400047a0:	add    rdx,0x2
   1400047a4:	mov    WORD PTR [rbp+rdx*1+0x774],ax
   1400047ac:	test   ax,ax
   1400047af:	jne    0x140004795
   1400047b1:	lea    rdx,[rsp+0x40]
   1400047b6:	lea    rcx,[rbp-0x80]
   1400047ba:	mov    r8,r12
   1400047bd:	call   0x140004c0e
   1400047c2:	xor    eax,eax
   1400047c4:	lea    rdi,[rbp-0x80]
   1400047c8:	mov    rcx,r14
   1400047cb:	repnz scas ax,WORD PTR es:[rdi]
   1400047ce:	mov    eax,DWORD PTR [rip+0x2d68]        # 0x14000753c
   1400047d4:	lea    rcx,[rbp-0x80]
   1400047d8:	mov    DWORD PTR [rdi-0x2],eax
   1400047db:	call   QWORD PTR [rip+0x18cf]        # 0x1400060b0
   1400047e1:	mov    rcx,QWORD PTR [rbp+0xf80]
   1400047e8:	xor    rcx,rsp
   1400047eb:	call   0x1400049c0
   1400047f0:	lea    r11,[rsp+0x1090]
   1400047f8:	mov    rbx,QWORD PTR [r11+0x40]
   1400047fc:	mov    rsi,QWORD PTR [r11+0x48]
   140004800:	mov    rsp,r11
   140004803:	pop    r14
   140004805:	pop    r13
   140004807:	pop    r12
   140004809:	pop    rdi
   14000480a:	pop    rbp
   14000480b:	ret    
   14000480c:	int3   
   14000480d:	int3   
   14000480e:	int3   
   14000480f:	int3   
   140004810:	int3   
   140004811:	int3   
   140004812:	int3   
   140004813:	int3   
   140004814:	mov    rax,rsp
   140004817:	mov    QWORD PTR [rax+0x8],rcx
   14000481b:	mov    QWORD PTR [rax+0x10],rdx
   14000481f:	mov    QWORD PTR [rax+0x18],r8
   140004823:	mov    QWORD PTR [rax+0x20],r9
   140004827:	sub    rsp,0x28
   14000482b:	lea    rdx,[rax+0x10]
   14000482f:	call   0x140004614
   140004834:	add    rsp,0x28
   140004838:	ret    
   140004839:	lea    rax,[rip+0x4858]        # 0x140009098
   140004840:	jmp    0x140004845
   140004845:	mov    QWORD PTR [rsp+0x8],rcx
   14000484a:	mov    QWORD PTR [rsp+0x10],rdx
   14000484f:	mov    QWORD PTR [rsp+0x18],r8
   140004854:	mov    QWORD PTR [rsp+0x20],r9
   140004859:	sub    rsp,0x68
   14000485d:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140004863:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140004869:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000486f:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140004875:	mov    rdx,rax
   140004878:	lea    rcx,[rip+0x38e9]        # 0x140008168
   14000487f:	call   0x140005904
   140004884:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   14000488a:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140004890:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140004896:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   14000489c:	mov    rcx,QWORD PTR [rsp+0x70]
   1400048a1:	mov    rdx,QWORD PTR [rsp+0x78]
   1400048a6:	mov    r8,QWORD PTR [rsp+0x80]
   1400048ae:	mov    r9,QWORD PTR [rsp+0x88]
   1400048b6:	add    rsp,0x68
   1400048ba:	jmp    0x1400048bc
   1400048bc:	jmp    rax
   1400048be:	lea    rax,[rip+0x47db]        # 0x1400090a0
   1400048c5:	jmp    0x140004845
   1400048ca:	lea    rax,[rip+0x47d7]        # 0x1400090a8
   1400048d1:	jmp    0x140004845
   1400048d6:	lea    rax,[rip+0x47d3]        # 0x1400090b0
   1400048dd:	jmp    0x140004845
   1400048e2:	lea    rax,[rip+0x47cf]        # 0x1400090b8
   1400048e9:	jmp    0x140004845
   1400048ee:	lea    rax,[rip+0x47cb]        # 0x1400090c0
   1400048f5:	jmp    0x140004845
   1400048fa:	lea    rax,[rip+0x47c7]        # 0x1400090c8
   140004901:	jmp    0x140004845
   140004906:	lea    rax,[rip+0x47c3]        # 0x1400090d0
   14000490d:	jmp    0x140004845
   140004912:	lea    rax,[rip+0x47bf]        # 0x1400090d8
   140004919:	jmp    0x140004845
   14000491e:	int3   
   14000491f:	int3   
   140004920:	rex push rbx
   140004922:	sub    rsp,0x20
   140004926:	mov    r11d,DWORD PTR [r8]
   140004929:	mov    rbx,rdx
   14000492c:	mov    r9,rcx
   14000492f:	and    r11d,0xfffffff8
   140004933:	test   BYTE PTR [r8],0x4
   140004937:	mov    r10,rcx
   14000493a:	je     0x14000494f
   14000493c:	mov    eax,DWORD PTR [r8+0x8]
   140004940:	movsxd r10,DWORD PTR [r8+0x4]
   140004944:	neg    eax
   140004946:	add    r10,rcx
   140004949:	movsxd rcx,eax
   14000494c:	and    r10,rcx
   14000494f:	movsxd rax,r11d
   140004952:	mov    rdx,QWORD PTR [rax+r10*1]
   140004956:	mov    rax,QWORD PTR [rbx+0x10]
   14000495a:	mov    ecx,DWORD PTR [rax+0x8]
   14000495d:	add    rcx,QWORD PTR [rbx+0x8]
   140004961:	test   BYTE PTR [rcx+0x3],0xf
   140004965:	je     0x140004973
   140004967:	movzx  eax,BYTE PTR [rcx+0x3]
   14000496b:	and    eax,0xfffffff0
   14000496e:	cdqe   
   140004970:	add    r9,rax
   140004973:	xor    r9,rdx
   140004976:	mov    rcx,r9
   140004979:	add    rsp,0x20
   14000497d:	pop    rbx
   14000497e:	jmp    0x1400049c0
   140004983:	int3   
   140004984:	sub    rsp,0x28
   140004988:	mov    r8,QWORD PTR [r9+0x38]
   14000498c:	mov    rcx,rdx
   14000498f:	mov    rdx,r9
   140004992:	call   0x140004920
   140004997:	mov    eax,0x1
   14000499c:	add    rsp,0x28
   1400049a0:	ret    
   1400049a1:	int3   
   1400049a2:	int3   
   1400049a3:	int3   
   1400049a4:	int3   
   1400049a5:	int3   
   1400049a6:	int3   
   1400049a7:	int3   
   1400049a8:	int3   
   1400049a9:	int3   
   1400049aa:	int3   
   1400049ab:	int3   
   1400049ac:	int3   
   1400049ad:	int3   
   1400049ae:	int3   
   1400049af:	int3   
   1400049b0:	int3   
   1400049b1:	int3   
   1400049b2:	int3   
   1400049b3:	int3   
   1400049b4:	int3   
   1400049b5:	int3   
   1400049b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400049c0:	cmp    rcx,QWORD PTR [rip+0x4661]        # 0x140009028
   1400049c7:	jne    0x1400049da
   1400049c9:	rol    rcx,0x10
   1400049cd:	test   cx,0xffff
   1400049d2:	jne    0x1400049d6
   1400049d4:	repz ret 
   1400049d6:	ror    rcx,0x10
   1400049da:	jmp    0x140004f60
   1400049df:	int3   
   1400049e0:	jmp    QWORD PTR [rip+0x17da]        # 0x1400061c0
   1400049e6:	jmp    QWORD PTR [rip+0x18f4]        # 0x1400062e0
   1400049ec:	int3   
   1400049ed:	int3   
   1400049ee:	int3   
   1400049ef:	int3   
   1400049f0:	int3   
   1400049f1:	int3   
   1400049f2:	int3   
   1400049f3:	int3   
   1400049f4:	int3   
   1400049f5:	int3   
   1400049f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004a00:	sub    rsp,0x10
   140004a04:	mov    QWORD PTR [rsp],r10
   140004a08:	mov    QWORD PTR [rsp+0x8],r11
   140004a0d:	xor    r11,r11
   140004a10:	lea    r10,[rsp+0x18]
   140004a15:	sub    r10,rax
   140004a18:	cmovb  r10,r11
   140004a1c:	mov    r11,QWORD PTR gs:0x10
   140004a25:	cmp    r10,r11
   140004a28:	jae    0x140004a40
   140004a2a:	and    r10w,0xf000
   140004a30:	lea    r11,[r11-0x1000]
   140004a37:	mov    BYTE PTR [r11],0x0
   140004a3b:	cmp    r10,r11
   140004a3e:	jne    0x140004a30
   140004a40:	mov    r10,QWORD PTR [rsp]
   140004a44:	mov    r11,QWORD PTR [rsp+0x8]
   140004a49:	add    rsp,0x10
   140004a4d:	ret    
   140004a4e:	jmp    QWORD PTR [rip+0x186c]        # 0x1400062c0
   140004a54:	jmp    QWORD PTR [rip+0x185e]        # 0x1400062b8
   140004a5a:	int3   
   140004a5b:	int3   
   140004a5c:	mov    rax,rsp
   140004a5f:	mov    QWORD PTR [rax+0x8],rbx
   140004a63:	mov    QWORD PTR [rax+0x10],rbp
   140004a67:	mov    QWORD PTR [rax+0x18],rsi
   140004a6b:	mov    QWORD PTR [rax+0x20],rdi
   140004a6f:	push   r12
   140004a71:	sub    rsp,0x20
   140004a75:	mov    rbx,QWORD PTR [r9+0x38]
   140004a79:	mov    rsi,rdx
   140004a7c:	mov    r12,r8
   140004a7f:	mov    rbp,rcx
   140004a82:	lea    r8,[rbx+0x4]
   140004a86:	mov    rdx,r9
   140004a89:	mov    rcx,rsi
   140004a8c:	mov    rdi,r9
   140004a8f:	call   0x140004920
   140004a94:	mov    r11d,DWORD PTR [rbx+0x4]
   140004a98:	mov    r10d,DWORD PTR [rbp+0x4]
   140004a9c:	mov    eax,r11d
   140004a9f:	and    r11d,0x2
   140004aa3:	mov    r8d,0x1
   140004aa9:	and    eax,r8d
   140004aac:	and    r10b,0x66
   140004ab0:	cmove  r11d,eax
   140004ab4:	test   r11d,r11d
   140004ab7:	je     0x140004acd
   140004ab9:	mov    r9,rdi
   140004abc:	mov    r8,r12
   140004abf:	mov    rdx,rsi
   140004ac2:	mov    rcx,rbp
   140004ac5:	call   0x140004a4e
   140004aca:	mov    r8d,eax
   140004acd:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ad2:	mov    rbp,QWORD PTR [rsp+0x38]
   140004ad7:	mov    rsi,QWORD PTR [rsp+0x40]
   140004adc:	mov    rdi,QWORD PTR [rsp+0x48]
   140004ae1:	mov    eax,r8d
   140004ae4:	add    rsp,0x20
   140004ae8:	pop    r12
   140004aea:	ret    
   140004aeb:	int3   
   140004aec:	jmp    QWORD PTR [rip+0x17be]        # 0x1400062b0
   140004af2:	jmp    QWORD PTR [rip+0x17a8]        # 0x1400062a0
   140004af8:	mov    QWORD PTR [rsp+0x8],rbx
   140004afd:	mov    QWORD PTR [rsp+0x10],rsi
   140004b02:	push   rdi
   140004b03:	sub    rsp,0x20
   140004b07:	mov    esi,edx
   140004b09:	mov    rbx,rcx
   140004b0c:	test   dl,0x2
   140004b0f:	je     0x140004b3b
   140004b11:	mov    r8d,DWORD PTR [rcx-0x8]
   140004b15:	lea    r9,[rip+0x8d2]        # 0x1400053ee
   140004b1c:	mov    edx,0x18
   140004b21:	call   0x140004bb0
   140004b26:	test   sil,0x1
   140004b2a:	je     0x140004b35
   140004b2c:	lea    rcx,[rbx-0x8]
   140004b30:	call   0x140004a54
   140004b35:	lea    rax,[rbx-0x8]
   140004b39:	jmp    0x140004b51
   140004b3b:	call   0x1400053ee
   140004b40:	test   sil,0x1
   140004b44:	je     0x140004b4e
   140004b46:	mov    rcx,rbx
   140004b49:	call   0x140004a54
   140004b4e:	mov    rax,rbx
   140004b51:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b56:	mov    rsi,QWORD PTR [rsp+0x38]
   140004b5b:	add    rsp,0x20
   140004b5f:	pop    rdi
   140004b60:	ret    
   140004b61:	int3   
   140004b62:	int3   
   140004b63:	int3   
   140004b64:	mov    QWORD PTR [rsp+0x10],rbx
   140004b69:	mov    DWORD PTR [rsp+0x18],r8d
   140004b6e:	mov    QWORD PTR [rsp+0x8],rcx
   140004b73:	push   rsi
   140004b74:	push   rdi
   140004b75:	push   r12
   140004b77:	sub    rsp,0x40
   140004b7b:	mov    rsi,r9
   140004b7e:	mov    edi,r8d
   140004b81:	mov    r12,rdx
   140004b84:	mov    rbx,rcx
   140004b87:	dec    edi
   140004b89:	mov    DWORD PTR [rsp+0x70],edi
   140004b8d:	js     0x140004b9e
   140004b8f:	sub    rbx,r12
   140004b92:	mov    QWORD PTR [rsp+0x60],rbx
   140004b97:	mov    rcx,rbx
   140004b9a:	call   rsi
   140004b9c:	jmp    0x140004b87
   140004b9e:	jmp    0x140004ba0
   140004ba0:	mov    rbx,QWORD PTR [rsp+0x68]
   140004ba5:	add    rsp,0x40
   140004ba9:	pop    r12
   140004bab:	pop    rdi
   140004bac:	pop    rsi
   140004bad:	ret    
   140004bae:	int3   
   140004baf:	int3   
   140004bb0:	mov    rax,rsp
   140004bb3:	mov    QWORD PTR [rax+0x20],r9
   140004bb7:	mov    DWORD PTR [rax+0x18],r8d
   140004bbb:	mov    QWORD PTR [rax+0x10],rdx
   140004bbf:	push   rbx
   140004bc0:	push   rsi
   140004bc1:	push   rdi
   140004bc2:	push   r12
   140004bc4:	sub    rsp,0x38
   140004bc8:	mov    r12,r9
   140004bcb:	movsxd rdi,r8d
   140004bce:	mov    rsi,rdx
   140004bd1:	and    DWORD PTR [rax-0x38],0x0
   140004bd5:	mov    rbx,rdi
   140004bd8:	imul   rbx,rdx
   140004bdc:	add    rbx,rcx
   140004bdf:	mov    QWORD PTR [rax+0x8],rbx
   140004be3:	dec    edi
   140004be5:	mov    DWORD PTR [rsp+0x70],edi
   140004be9:	js     0x140004bfb
   140004beb:	sub    rbx,rsi
   140004bee:	mov    QWORD PTR [rsp+0x60],rbx
   140004bf3:	mov    rcx,rbx
   140004bf6:	call   r12
   140004bf9:	jmp    0x140004be3
   140004bfb:	mov    DWORD PTR [rsp+0x20],0x1
   140004c03:	add    rsp,0x38
   140004c07:	pop    r12
   140004c09:	pop    rdi
   140004c0a:	pop    rsi
   140004c0b:	pop    rbx
   140004c0c:	ret    
   140004c0d:	int3   
   140004c0e:	jmp    QWORD PTR [rip+0x1624]        # 0x140006238
   140004c14:	sub    rsp,0x38
   140004c18:	lea    rcx,[rip+0x5fd]        # 0x14000521c
   140004c1f:	call   0x1400051cc
   140004c24:	mov    r11d,DWORD PTR [rip+0x4ad9]        # 0x140009704
   140004c2b:	mov    r9d,DWORD PTR [rip+0x4ace]        # 0x140009700
   140004c32:	lea    rax,[rip+0x454b]        # 0x140009184
   140004c39:	lea    r8,[rip+0x4530]        # 0x140009170
   140004c40:	lea    rdx,[rip+0x4531]        # 0x140009178
   140004c47:	lea    rcx,[rip+0x451a]        # 0x140009168
   140004c4e:	mov    DWORD PTR [rip+0x452f],r11d        # 0x140009184
   140004c55:	mov    QWORD PTR [rsp+0x20],rax
   140004c5a:	call   QWORD PTR [rip+0x15b8]        # 0x140006218
   140004c60:	mov    DWORD PTR [rip+0x451a],eax        # 0x140009180
   140004c66:	test   eax,eax
   140004c68:	jns    0x140004c74
   140004c6a:	mov    ecx,0x8
   140004c6f:	call   0x140005114
   140004c74:	add    rsp,0x38
   140004c78:	ret    
   140004c79:	int3   
   140004c7a:	int3   
   140004c7b:	int3   
   140004c7c:	mov    QWORD PTR [rsp+0x8],rbx
   140004c81:	push   rdi
   140004c82:	sub    rsp,0xa0
   140004c89:	and    DWORD PTR [rsp+0x20],0x0
   140004c8e:	lea    rcx,[rsp+0x30]
   140004c93:	call   QWORD PTR [rip+0x13f7]        # 0x140006090
   140004c99:	nop
   140004c9a:	mov    rax,QWORD PTR gs:0x30
   140004ca3:	mov    rbx,QWORD PTR [rax+0x8]
   140004ca7:	xor    edi,edi
   140004ca9:	xor    eax,eax
   140004cab:	lock cmpxchg QWORD PTR [rip+0x4a84],rbx        # 0x140009738
   140004cb4:	je     0x140004ccf
   140004cb6:	cmp    rax,rbx
   140004cb9:	jne    0x140004cc2
   140004cbb:	mov    edi,0x1
   140004cc0:	jmp    0x140004ccf
   140004cc2:	mov    ecx,0x3e8
   140004cc7:	call   QWORD PTR [rip+0x13cb]        # 0x140006098
   140004ccd:	jmp    0x140004ca9
   140004ccf:	mov    eax,DWORD PTR [rip+0x4a5b]        # 0x140009730
   140004cd5:	cmp    eax,0x1
   140004cd8:	jne    0x140004ce4
   140004cda:	lea    ecx,[rax+0x1e]
   140004cdd:	call   0x140005114
   140004ce2:	jmp    0x140004d23
   140004ce4:	mov    eax,DWORD PTR [rip+0x4a46]        # 0x140009730
   140004cea:	test   eax,eax
   140004cec:	jne    0x140004d19
   140004cee:	mov    DWORD PTR [rip+0x4a38],0x1        # 0x140009730
   140004cf8:	lea    rdx,[rip+0x16a9]        # 0x1400063a8
   140004cff:	lea    rcx,[rip+0x168a]        # 0x140006390
   140004d06:	call   0x140005328
   140004d0b:	test   eax,eax
   140004d0d:	je     0x140004d23
   140004d0f:	mov    eax,0xff
   140004d14:	jmp    0x140004e6a
   140004d19:	mov    DWORD PTR [rip+0x4469],0x1        # 0x14000918c
   140004d23:	mov    eax,DWORD PTR [rip+0x4a07]        # 0x140009730
   140004d29:	cmp    eax,0x1
   140004d2c:	jne    0x140004d4b
   140004d2e:	lea    rdx,[rip+0x1653]        # 0x140006388
   140004d35:	lea    rcx,[rip+0x162c]        # 0x140006368
   140004d3c:	call   0x140005322
   140004d41:	mov    DWORD PTR [rip+0x49e5],0x2        # 0x140009730
   140004d4b:	test   edi,edi
   140004d4d:	jne    0x140004d58
   140004d4f:	xor    eax,eax
   140004d51:	xchg   QWORD PTR [rip+0x49e0],rax        # 0x140009738
   140004d58:	cmp    QWORD PTR [rip+0x49f0],0x0        # 0x140009750
   140004d60:	je     0x140004d81
   140004d62:	lea    rcx,[rip+0x49e7]        # 0x140009750
   140004d69:	call   0x1400052e0
   140004d6e:	test   eax,eax
   140004d70:	je     0x140004d81
   140004d72:	xor    r8d,r8d
   140004d75:	lea    edx,[r8+0x2]
   140004d79:	xor    ecx,ecx
   140004d7b:	call   QWORD PTR [rip+0x49cf]        # 0x140009750
   140004d81:	mov    rax,QWORD PTR [rip+0x1460]        # 0x1400061e8
   140004d88:	mov    rbx,QWORD PTR [rax]
   140004d8b:	mov    QWORD PTR [rsp+0x28],rbx
   140004d90:	mov    edi,DWORD PTR [rsp+0x20]
   140004d94:	cmp    BYTE PTR [rbx],0x20
   140004d97:	ja     0x140004e09
   140004d99:	cmp    BYTE PTR [rbx],0x0
   140004d9c:	je     0x140004da2
   140004d9e:	test   edi,edi
   140004da0:	jne    0x140004e09
   140004da2:	mov    al,BYTE PTR [rbx]
   140004da4:	test   al,al
   140004da6:	je     0x140004db6
   140004da8:	cmp    al,0x20
   140004daa:	ja     0x140004db6
   140004dac:	inc    rbx
   140004daf:	mov    QWORD PTR [rsp+0x28],rbx
   140004db4:	jmp    0x140004da2
   140004db6:	test   BYTE PTR [rsp+0x6c],0x1
   140004dbb:	movzx  eax,WORD PTR [rsp+0x70]
   140004dc0:	mov    r9d,0xa
   140004dc6:	cmovne r9d,eax
   140004dca:	mov    r8,rbx
   140004dcd:	xor    edx,edx
   140004dcf:	lea    rcx,[rip+0xffffffffffffb22a]        # 0x140000000
   140004dd6:	call   0x140001604
   140004ddb:	mov    DWORD PTR [rip+0x43a7],eax        # 0x140009188
   140004de1:	cmp    DWORD PTR [rip+0x4384],0x0        # 0x14000916c
   140004de8:	jne    0x140004df2
   140004dea:	mov    ecx,eax
   140004dec:	call   QWORD PTR [rip+0x13fe]        # 0x1400061f0
   140004df2:	cmp    DWORD PTR [rip+0x4393],0x0        # 0x14000918c
   140004df9:	jne    0x140004e07
   140004dfb:	call   QWORD PTR [rip+0x13f7]        # 0x1400061f8
   140004e01:	mov    eax,DWORD PTR [rip+0x4381]        # 0x140009188
   140004e07:	jmp    0x140004e6a
   140004e09:	cmp    BYTE PTR [rbx],0x22
   140004e0c:	jne    0x140004e1b
   140004e0e:	xor    eax,eax
   140004e10:	test   edi,edi
   140004e12:	sete   al
   140004e15:	mov    edi,eax
   140004e17:	mov    DWORD PTR [rsp+0x20],eax
   140004e1b:	movzx  ecx,BYTE PTR [rbx]
   140004e1e:	call   QWORD PTR [rip+0x13dc]        # 0x140006200
   140004e24:	test   eax,eax
   140004e26:	je     0x140004e30
   140004e28:	inc    rbx
   140004e2b:	mov    QWORD PTR [rsp+0x28],rbx
   140004e30:	inc    rbx
   140004e33:	mov    QWORD PTR [rsp+0x28],rbx
   140004e38:	jmp    0x140004d94
   140004e3d:	mov    DWORD PTR [rip+0x4345],eax        # 0x140009188
   140004e43:	cmp    DWORD PTR [rip+0x4322],0x0        # 0x14000916c
   140004e4a:	jne    0x140004e55
   140004e4c:	mov    ecx,eax
   140004e4e:	call   QWORD PTR [rip+0x13b4]        # 0x140006208
   140004e54:	int3   
   140004e55:	cmp    DWORD PTR [rip+0x4330],0x0        # 0x14000918c
   140004e5c:	jne    0x140004e6a
   140004e5e:	call   QWORD PTR [rip+0x1394]        # 0x1400061f8
   140004e64:	mov    eax,DWORD PTR [rip+0x431e]        # 0x140009188
   140004e6a:	mov    rbx,QWORD PTR [rsp+0xb0]
   140004e72:	add    rsp,0xa0
   140004e79:	pop    rdi
   140004e7a:	ret    
   140004e7b:	int3   
   140004e7c:	sub    rsp,0x28
   140004e80:	mov    eax,0x5a4d
   140004e85:	cmp    WORD PTR [rip+0xffffffffffffb174],ax        # 0x140000000
   140004e8c:	je     0x140004e92
   140004e8e:	xor    ecx,ecx
   140004e90:	jmp    0x140004eca
   140004e92:	movsxd rax,DWORD PTR [rip+0xffffffffffffb1a3]        # 0x14000003c
   140004e99:	lea    rcx,[rip+0xffffffffffffb160]        # 0x140000000
   140004ea0:	add    rax,rcx
   140004ea3:	cmp    DWORD PTR [rax],0x4550
   140004ea9:	jne    0x140004e8e
   140004eab:	mov    ecx,0x20b
   140004eb0:	cmp    WORD PTR [rax+0x18],cx
   140004eb4:	jne    0x140004e8e
   140004eb6:	xor    ecx,ecx
   140004eb8:	cmp    DWORD PTR [rax+0x84],0xe
   140004ebf:	jbe    0x140004eca
   140004ec1:	cmp    DWORD PTR [rax+0xf8],ecx
   140004ec7:	setne  cl
   140004eca:	mov    DWORD PTR [rip+0x429c],ecx        # 0x14000916c
   140004ed0:	mov    ecx,0x2
   140004ed5:	call   QWORD PTR [rip+0x12cd]        # 0x1400061a8
   140004edb:	or     rcx,0xffffffffffffffff
   140004edf:	call   QWORD PTR [rip+0x11a3]        # 0x140006088
   140004ee5:	mov    rcx,QWORD PTR [rip+0x12c4]        # 0x1400061b0
   140004eec:	mov    QWORD PTR [rip+0x484d],rax        # 0x140009740
   140004ef3:	mov    QWORD PTR [rip+0x484e],rax        # 0x140009748
   140004efa:	mov    eax,DWORD PTR [rip+0x480c]        # 0x14000970c
   140004f00:	mov    DWORD PTR [rcx],eax
   140004f02:	mov    rdx,QWORD PTR [rip+0x12af]        # 0x1400061b8
   140004f09:	mov    eax,DWORD PTR [rip+0x47f9]        # 0x140009708
   140004f0f:	mov    DWORD PTR [rdx],eax
   140004f11:	call   0x1400051e4
   140004f16:	call   0x140005330
   140004f1b:	cmp    DWORD PTR [rip+0x414a],0x0        # 0x14000906c
   140004f22:	jne    0x140004f31
   140004f24:	lea    rcx,[rip+0x405]        # 0x140005330
   140004f2b:	call   QWORD PTR [rip+0x1297]        # 0x1400061c8
   140004f31:	cmp    DWORD PTR [rip+0x4130],0xffffffff        # 0x140009068
   140004f38:	jne    0x140004f43
   140004f3a:	or     ecx,0xffffffff
   140004f3d:	call   QWORD PTR [rip+0x128d]        # 0x1400061d0
   140004f43:	xor    eax,eax
   140004f45:	add    rsp,0x28
   140004f49:	ret    
   140004f4a:	int3   
   140004f4b:	int3   
   140004f4c:	sub    rsp,0x28
   140004f50:	call   0x140005334
   140004f55:	add    rsp,0x28
   140004f59:	jmp    0x140004c7c
   140004f5e:	int3   
   140004f5f:	int3   
   140004f60:	mov    QWORD PTR [rsp+0x8],rcx
   140004f65:	sub    rsp,0x88
   140004f6c:	lea    rcx,[rip+0x42bd]        # 0x140009230
   140004f73:	call   QWORD PTR [rip+0x10d7]        # 0x140006050
   140004f79:	mov    rax,QWORD PTR [rip+0x43a8]        # 0x140009328
   140004f80:	mov    QWORD PTR [rsp+0x58],rax
   140004f85:	xor    r8d,r8d
   140004f88:	lea    rdx,[rsp+0x60]
   140004f8d:	mov    rcx,QWORD PTR [rsp+0x58]
   140004f92:	call   0x14000540c
   140004f97:	mov    QWORD PTR [rsp+0x50],rax
   140004f9c:	cmp    QWORD PTR [rsp+0x50],0x0
   140004fa2:	je     0x140004fe5
   140004fa4:	mov    QWORD PTR [rsp+0x38],0x0
   140004fad:	lea    rax,[rsp+0x48]
   140004fb2:	mov    QWORD PTR [rsp+0x30],rax
   140004fb7:	lea    rax,[rsp+0x40]
   140004fbc:	mov    QWORD PTR [rsp+0x28],rax
   140004fc1:	lea    rax,[rip+0x4268]        # 0x140009230
   140004fc8:	mov    QWORD PTR [rsp+0x20],rax
   140004fcd:	mov    r9,QWORD PTR [rsp+0x50]
   140004fd2:	mov    r8,QWORD PTR [rsp+0x58]
   140004fd7:	mov    rdx,QWORD PTR [rsp+0x60]
   140004fdc:	xor    ecx,ecx
   140004fde:	call   0x140005406
   140004fe3:	jmp    0x140005007
   140004fe5:	mov    rax,QWORD PTR [rsp+0x88]
   140004fed:	mov    QWORD PTR [rip+0x4334],rax        # 0x140009328
   140004ff4:	lea    rax,[rsp+0x88]
   140004ffc:	add    rax,0x8
   140005000:	mov    QWORD PTR [rip+0x42c1],rax        # 0x1400092c8
   140005007:	mov    rax,QWORD PTR [rip+0x431a]        # 0x140009328
   14000500e:	mov    QWORD PTR [rip+0x418b],rax        # 0x1400091a0
   140005015:	mov    rax,QWORD PTR [rsp+0x90]
   14000501d:	mov    QWORD PTR [rip+0x428c],rax        # 0x1400092b0
   140005024:	mov    DWORD PTR [rip+0x4162],0xc0000409        # 0x140009190
   14000502e:	mov    DWORD PTR [rip+0x415c],0x1        # 0x140009194
   140005038:	mov    rax,QWORD PTR [rip+0x3fe9]        # 0x140009028
   14000503f:	mov    QWORD PTR [rsp+0x68],rax
   140005044:	mov    rax,QWORD PTR [rip+0x3fe5]        # 0x140009030
   14000504b:	mov    QWORD PTR [rsp+0x70],rax
   140005050:	call   QWORD PTR [rip+0x1012]        # 0x140006068
   140005056:	mov    DWORD PTR [rip+0x41cc],eax        # 0x140009228
   14000505c:	mov    ecx,0x1
   140005061:	call   0x1400053e8
   140005066:	xor    ecx,ecx
   140005068:	call   QWORD PTR [rip+0x1002]        # 0x140006070
   14000506e:	lea    rcx,[rip+0x261b]        # 0x140007690
   140005075:	call   QWORD PTR [rip+0xffd]        # 0x140006078
   14000507b:	cmp    DWORD PTR [rip+0x41a6],0x0        # 0x140009228
   140005082:	jne    0x14000508e
   140005084:	mov    ecx,0x1
   140005089:	call   0x1400053e8
   14000508e:	call   QWORD PTR [rip+0x1064]        # 0x1400060f8
   140005094:	mov    edx,0xc0000409
   140005099:	mov    rcx,rax
   14000509c:	call   QWORD PTR [rip+0xfde]        # 0x140006080
   1400050a2:	add    rsp,0x88
   1400050a9:	ret    
   1400050aa:	jmp    QWORD PTR [rip+0x1180]        # 0x140006230
   1400050b0:	jmp    QWORD PTR [rip+0x1172]        # 0x140006228
   1400050b6:	int3   
   1400050b7:	int3   
   1400050b8:	sub    rsp,0x28
   1400050bc:	mov    rax,QWORD PTR [rcx]
   1400050bf:	cmp    DWORD PTR [rax],0xe06d7363
   1400050c5:	jne    0x1400050f2
   1400050c7:	cmp    DWORD PTR [rax+0x18],0x4
   1400050cb:	jne    0x1400050f2
   1400050cd:	mov    eax,DWORD PTR [rax+0x20]
   1400050d0:	cmp    eax,0x19930520
   1400050d5:	je     0x1400050ec
   1400050d7:	cmp    eax,0x19930521
   1400050dc:	je     0x1400050ec
   1400050de:	cmp    eax,0x19930522
   1400050e3:	je     0x1400050ec
   1400050e5:	cmp    eax,0x1994000
   1400050ea:	jne    0x1400050f2
   1400050ec:	call   0x1400050aa
   1400050f1:	int3   
   1400050f2:	xor    eax,eax
   1400050f4:	add    rsp,0x28
   1400050f8:	ret    
   1400050f9:	int3   
   1400050fa:	int3   
   1400050fb:	int3   
   1400050fc:	sub    rsp,0x28
   140005100:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x1400050b8
   140005107:	call   QWORD PTR [rip+0xf63]        # 0x140006070
   14000510d:	xor    eax,eax
   14000510f:	add    rsp,0x28
   140005113:	ret    
   140005114:	jmp    QWORD PTR [rip+0x1106]        # 0x140006220
   14000511a:	int3   
   14000511b:	int3   
   14000511c:	rex push rbx
   14000511e:	sub    rsp,0x20
   140005122:	mov    rbx,rcx
   140005125:	mov    rcx,QWORD PTR [rip+0x461c]        # 0x140009748
   14000512c:	call   QWORD PTR [rip+0xf16]        # 0x140006048
   140005132:	mov    QWORD PTR [rsp+0x38],rax
   140005137:	cmp    rax,0xffffffffffffffff
   14000513b:	jne    0x140005148
   14000513d:	mov    rcx,rbx
   140005140:	call   QWORD PTR [rip+0x103a]        # 0x140006180
   140005146:	jmp    0x1400051c6
   140005148:	mov    ecx,0x8
   14000514d:	call   0x140005400
   140005152:	nop
   140005153:	mov    rcx,QWORD PTR [rip+0x45ee]        # 0x140009748
   14000515a:	call   QWORD PTR [rip+0xee8]        # 0x140006048
   140005160:	mov    QWORD PTR [rsp+0x38],rax
   140005165:	mov    rcx,QWORD PTR [rip+0x45d4]        # 0x140009740
   14000516c:	call   QWORD PTR [rip+0xed6]        # 0x140006048
   140005172:	mov    QWORD PTR [rsp+0x40],rax
   140005177:	mov    rcx,rbx
   14000517a:	call   QWORD PTR [rip+0xf08]        # 0x140006088
   140005180:	mov    rcx,rax
   140005183:	lea    r8,[rsp+0x40]
   140005188:	lea    rdx,[rsp+0x38]
   14000518d:	call   0x1400053fa
   140005192:	mov    rbx,rax
   140005195:	mov    rcx,QWORD PTR [rsp+0x38]
   14000519a:	call   QWORD PTR [rip+0xee8]        # 0x140006088
   1400051a0:	mov    QWORD PTR [rip+0x45a1],rax        # 0x140009748
   1400051a7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400051ac:	call   QWORD PTR [rip+0xed6]        # 0x140006088
   1400051b2:	mov    QWORD PTR [rip+0x4587],rax        # 0x140009740
   1400051b9:	mov    ecx,0x8
   1400051be:	call   0x1400053f4
   1400051c3:	mov    rax,rbx
   1400051c6:	add    rsp,0x20
   1400051ca:	pop    rbx
   1400051cb:	ret    
   1400051cc:	sub    rsp,0x28
   1400051d0:	call   0x14000511c
   1400051d5:	neg    rax
   1400051d8:	sbb    eax,eax
   1400051da:	neg    eax
   1400051dc:	dec    eax
   1400051de:	add    rsp,0x28
   1400051e2:	ret    
   1400051e3:	int3   
   1400051e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400051e9:	push   rdi
   1400051ea:	sub    rsp,0x20
   1400051ee:	lea    rbx,[rip+0x25e3]        # 0x1400077d8
   1400051f5:	lea    rdi,[rip+0x25dc]        # 0x1400077d8
   1400051fc:	jmp    0x14000520c
   1400051fe:	mov    rax,QWORD PTR [rbx]
   140005201:	test   rax,rax
   140005204:	je     0x140005208
   140005206:	call   rax
   140005208:	add    rbx,0x8
   14000520c:	cmp    rbx,rdi
   14000520f:	jb     0x1400051fe
   140005211:	mov    rbx,QWORD PTR [rsp+0x30]
   140005216:	add    rsp,0x20
   14000521a:	pop    rdi
   14000521b:	ret    
   14000521c:	mov    QWORD PTR [rsp+0x8],rbx
   140005221:	push   rdi
   140005222:	sub    rsp,0x20
   140005226:	lea    rbx,[rip+0x25bb]        # 0x1400077e8
   14000522d:	lea    rdi,[rip+0x25b4]        # 0x1400077e8
   140005234:	jmp    0x140005244
   140005236:	mov    rax,QWORD PTR [rbx]
   140005239:	test   rax,rax
   14000523c:	je     0x140005240
   14000523e:	call   rax
   140005240:	add    rbx,0x8
   140005244:	cmp    rbx,rdi
   140005247:	jb     0x140005236
   140005249:	mov    rbx,QWORD PTR [rsp+0x30]
   14000524e:	add    rsp,0x20
   140005252:	pop    rdi
   140005253:	ret    
   140005254:	jmp    QWORD PTR [rip+0xfb6]        # 0x140006210
   14000525a:	int3   
   14000525b:	int3   
   14000525c:	int3   
   14000525d:	int3   
   14000525e:	int3   
   14000525f:	int3   
   140005260:	mov    rax,rcx
   140005263:	mov    ecx,0x5a4d
   140005268:	cmp    WORD PTR [rax],cx
   14000526b:	je     0x140005270
   14000526d:	xor    eax,eax
   14000526f:	ret    
   140005270:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005274:	add    rcx,rax
   140005277:	xor    eax,eax
   140005279:	cmp    DWORD PTR [rcx],0x4550
   14000527f:	jne    0x14000528d
   140005281:	mov    edx,0x20b
   140005286:	cmp    WORD PTR [rcx+0x18],dx
   14000528a:	sete   al
   14000528d:	repz ret 
   14000528f:	int3   
   140005290:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005294:	xor    r9d,r9d
   140005297:	mov    r10,rdx
   14000529a:	add    r8,rcx
   14000529d:	movzx  eax,WORD PTR [r8+0x14]
   1400052a2:	movzx  r11d,WORD PTR [r8+0x6]
   1400052a7:	lea    rcx,[rax+r8*1+0x18]
   1400052ac:	test   r11d,r11d
   1400052af:	je     0x1400052cf
   1400052b1:	mov    edx,DWORD PTR [rcx+0xc]
   1400052b4:	cmp    r10,rdx
   1400052b7:	jb     0x1400052c3
   1400052b9:	mov    eax,DWORD PTR [rcx+0x8]
   1400052bc:	add    eax,edx
   1400052be:	cmp    r10,rax
   1400052c1:	jb     0x1400052d2
   1400052c3:	inc    r9d
   1400052c6:	add    rcx,0x28
   1400052ca:	cmp    r9d,r11d
   1400052cd:	jb     0x1400052b1
   1400052cf:	xor    eax,eax
   1400052d1:	ret    
   1400052d2:	mov    rax,rcx
   1400052d5:	ret    
   1400052d6:	int3   
   1400052d7:	int3   
   1400052d8:	int3   
   1400052d9:	int3   
   1400052da:	int3   
   1400052db:	int3   
   1400052dc:	int3   
   1400052dd:	int3   
   1400052de:	int3   
   1400052df:	int3   
   1400052e0:	sub    rsp,0x28
   1400052e4:	mov    r8,rcx
   1400052e7:	lea    r9,[rip+0xffffffffffffad12]        # 0x140000000
   1400052ee:	mov    rcx,r9
   1400052f1:	call   0x140005260
   1400052f6:	test   eax,eax
   1400052f8:	je     0x14000531c
   1400052fa:	sub    r8,r9
   1400052fd:	mov    rdx,r8
   140005300:	mov    rcx,r9
   140005303:	call   0x140005290
   140005308:	test   rax,rax
   14000530b:	je     0x14000531c
   14000530d:	mov    eax,DWORD PTR [rax+0x24]
   140005310:	shr    eax,0x1f
   140005313:	not    eax
   140005315:	and    eax,0x1
   140005318:	jmp    0x14000531c
   14000531a:	xor    eax,eax
   14000531c:	add    rsp,0x28
   140005320:	ret    
   140005321:	int3   
   140005322:	jmp    QWORD PTR [rip+0xeb8]        # 0x1400061e0
   140005328:	jmp    QWORD PTR [rip+0xeaa]        # 0x1400061d8
   14000532e:	int3   
   14000532f:	int3   
   140005330:	xor    eax,eax
   140005332:	ret    
   140005333:	int3   
   140005334:	mov    QWORD PTR [rsp+0x18],rbx
   140005339:	push   rdi
   14000533a:	sub    rsp,0x20
   14000533e:	mov    rax,QWORD PTR [rip+0x3ce3]        # 0x140009028
   140005345:	and    QWORD PTR [rsp+0x30],0x0
   14000534b:	movabs rdi,0x2b992ddfa232
   140005355:	cmp    rax,rdi
   140005358:	je     0x140005366
   14000535a:	not    rax
   14000535d:	mov    QWORD PTR [rip+0x3ccc],rax        # 0x140009030
   140005364:	jmp    0x1400053dc
   140005366:	lea    rcx,[rsp+0x30]
   14000536b:	call   QWORD PTR [rip+0xcbf]        # 0x140006030
   140005371:	mov    rbx,QWORD PTR [rsp+0x30]
   140005376:	call   QWORD PTR [rip+0xd2c]        # 0x1400060a8
   14000537c:	mov    r11d,eax
   14000537f:	xor    rbx,r11
   140005382:	call   QWORD PTR [rip+0xd18]        # 0x1400060a0
   140005388:	mov    r11d,eax
   14000538b:	xor    rbx,r11
   14000538e:	call   QWORD PTR [rip+0xca4]        # 0x140006038
   140005394:	lea    rcx,[rsp+0x38]
   140005399:	mov    r11d,eax
   14000539c:	xor    rbx,r11
   14000539f:	call   QWORD PTR [rip+0xc9b]        # 0x140006040
   1400053a5:	mov    r11,QWORD PTR [rsp+0x38]
   1400053aa:	xor    r11,rbx
   1400053ad:	movabs rax,0xffffffffffff
   1400053b7:	and    r11,rax
   1400053ba:	movabs rax,0x2b992ddfa233
   1400053c4:	cmp    r11,rdi
   1400053c7:	cmove  r11,rax
   1400053cb:	mov    QWORD PTR [rip+0x3c56],r11        # 0x140009028
   1400053d2:	not    r11
   1400053d5:	mov    QWORD PTR [rip+0x3c54],r11        # 0x140009030
   1400053dc:	mov    rbx,QWORD PTR [rsp+0x40]
   1400053e1:	add    rsp,0x20
   1400053e5:	pop    rdi
   1400053e6:	ret    
   1400053e7:	int3   
   1400053e8:	jmp    QWORD PTR [rip+0xdb2]        # 0x1400061a0
   1400053ee:	jmp    QWORD PTR [rip+0xda4]        # 0x140006198
   1400053f4:	jmp    QWORD PTR [rip+0xd96]        # 0x140006190
   1400053fa:	jmp    QWORD PTR [rip+0xd88]        # 0x140006188
   140005400:	jmp    QWORD PTR [rip+0xeea]        # 0x1400062f0
   140005406:	jmp    QWORD PTR [rip+0xc54]        # 0x140006060
   14000540c:	jmp    QWORD PTR [rip+0xc46]        # 0x140006058
   140005412:	lea    rax,[rip+0x3cdf]        # 0x1400090f8
   140005419:	jmp    0x14000541e
   14000541e:	mov    QWORD PTR [rsp+0x8],rcx
   140005423:	mov    QWORD PTR [rsp+0x10],rdx
   140005428:	mov    QWORD PTR [rsp+0x18],r8
   14000542d:	mov    QWORD PTR [rsp+0x20],r9
   140005432:	sub    rsp,0x68
   140005436:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000543c:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140005442:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140005448:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   14000544e:	mov    rdx,rax
   140005451:	lea    rcx,[rip+0x2d30]        # 0x140008188
   140005458:	call   0x140005904
   14000545d:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140005463:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140005469:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   14000546f:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140005475:	mov    rcx,QWORD PTR [rsp+0x70]
   14000547a:	mov    rdx,QWORD PTR [rsp+0x78]
   14000547f:	mov    r8,QWORD PTR [rsp+0x80]
   140005487:	mov    r9,QWORD PTR [rsp+0x88]
   14000548f:	add    rsp,0x68
   140005493:	jmp    0x140005495
   140005495:	jmp    rax
   140005497:	lea    rax,[rip+0x3c4a]        # 0x1400090e8
   14000549e:	jmp    0x14000541e
   1400054a3:	lea    rax,[rip+0x3c46]        # 0x1400090f0
   1400054aa:	jmp    0x14000541e
   1400054af:	lea    rax,[rip+0x3c52]        # 0x140009108
   1400054b6:	jmp    0x1400054bb
   1400054bb:	mov    QWORD PTR [rsp+0x8],rcx
   1400054c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400054c5:	mov    QWORD PTR [rsp+0x18],r8
   1400054ca:	mov    QWORD PTR [rsp+0x20],r9
   1400054cf:	sub    rsp,0x68
   1400054d3:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400054d9:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   1400054df:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   1400054e5:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   1400054eb:	mov    rdx,rax
   1400054ee:	lea    rcx,[rip+0x2cb3]        # 0x1400081a8
   1400054f5:	call   0x140005904
   1400054fa:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140005500:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140005506:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   14000550c:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140005512:	mov    rcx,QWORD PTR [rsp+0x70]
   140005517:	mov    rdx,QWORD PTR [rsp+0x78]
   14000551c:	mov    r8,QWORD PTR [rsp+0x80]
   140005524:	mov    r9,QWORD PTR [rsp+0x88]
   14000552c:	add    rsp,0x68
   140005530:	jmp    0x140005532
   140005532:	jmp    rax
   140005534:	int3   
   140005535:	int3   
   140005536:	int3   
   140005537:	int3   
   140005538:	int3   
   140005539:	int3   
   14000553a:	int3   
   14000553b:	int3   
   14000553c:	int3   
   14000553d:	int3   
   14000553e:	int3   
   14000553f:	int3   
   140005540:	mov    QWORD PTR [rsp+0x8],rcx
   140005545:	push   rbp
   140005546:	push   rdi
   140005547:	push   r12
   140005549:	sub    rsp,0x50
   14000554d:	lea    rbp,[rsp+0x30]
   140005552:	mov    QWORD PTR [rbp+0x48],rbx
   140005556:	mov    QWORD PTR [rbp+0x50],rsi
   14000555a:	mov    rax,QWORD PTR [rip+0x3ac7]        # 0x140009028
   140005561:	xor    rax,rbp
   140005564:	mov    QWORD PTR [rbp+0x10],rax
   140005568:	mov    rsi,rcx
   14000556b:	test   rcx,rcx
   14000556e:	jne    0x140005577
   140005570:	xor    eax,eax
   140005572:	jmp    0x1400056a6
   140005577:	call   QWORD PTR [rip+0xa9b]        # 0x140006018
   14000557d:	lea    r12d,[rax+0x1]
   140005581:	mov    DWORD PTR [rbp+0x4],r12d
   140005585:	xor    eax,eax
   140005587:	mov    DWORD PTR [rsp+0x28],eax
   14000558b:	mov    QWORD PTR [rsp+0x20],rax
   140005590:	mov    r9d,r12d
   140005593:	mov    r8,rsi
   140005596:	xor    edx,edx
   140005598:	xor    ecx,ecx
   14000559a:	call   QWORD PTR [rip+0xa80]        # 0x140006020
   1400055a0:	movsxd rdi,eax
   1400055a3:	mov    DWORD PTR [rbp+0x0],edi
   1400055a6:	test   eax,eax
   1400055a8:	jne    0x1400055c4
   1400055aa:	call   QWORD PTR [rip+0xb88]        # 0x140006138
   1400055b0:	test   eax,eax
   1400055b2:	jle    0x1400055bc
   1400055b4:	movzx  eax,ax
   1400055b7:	or     eax,0x80070000
   1400055bc:	mov    ecx,eax
   1400055be:	call   0x1400057e0
   1400055c3:	nop
   1400055c4:	cmp    edi,0x1000
   1400055ca:	jge    0x1400055fb
   1400055cc:	mov    rax,rdi
   1400055cf:	add    rax,rax
   1400055d2:	lea    rcx,[rax+0xf]
   1400055d6:	cmp    rcx,rax
   1400055d9:	ja     0x1400055e5
   1400055db:	movabs rcx,0xffffffffffffff0
   1400055e5:	and    rcx,0xfffffffffffffff0
   1400055e9:	mov    rax,rcx
   1400055ec:	call   0x140004a00
   1400055f1:	sub    rsp,rcx
   1400055f4:	lea    rbx,[rsp+0x30]
   1400055f9:	jmp    0x140005609
   1400055fb:	mov    rcx,rdi
   1400055fe:	add    rcx,rcx
   140005601:	call   0x140005c62
   140005606:	mov    rbx,rax
   140005609:	mov    QWORD PTR [rbp+0x8],rbx
   14000560d:	jmp    0x140005620
   14000560f:	xor    ebx,ebx
   140005611:	mov    QWORD PTR [rbp+0x8],rbx
   140005615:	mov    rsi,QWORD PTR [rbp+0x40]
   140005619:	mov    r12d,DWORD PTR [rbp+0x4]
   14000561d:	mov    edi,DWORD PTR [rbp+0x0]
   140005620:	test   rbx,rbx
   140005623:	jne    0x140005630
   140005625:	mov    ecx,0x8007000e
   14000562a:	call   0x1400057e0
   14000562f:	int3   
   140005630:	mov    DWORD PTR [rsp+0x28],edi
   140005634:	mov    QWORD PTR [rsp+0x20],rbx
   140005639:	mov    r9d,r12d
   14000563c:	mov    r8,rsi
   14000563f:	xor    edx,edx
   140005641:	xor    ecx,ecx
   140005643:	call   QWORD PTR [rip+0x9d7]        # 0x140006020
   140005649:	test   eax,eax
   14000564b:	jne    0x140005677
   14000564d:	cmp    edi,0x1000
   140005653:	jl     0x14000565d
   140005655:	mov    rcx,rbx
   140005658:	call   0x140005c5c
   14000565d:	call   QWORD PTR [rip+0xad5]        # 0x140006138
   140005663:	test   eax,eax
   140005665:	jle    0x14000566f
   140005667:	movzx  eax,ax
   14000566a:	or     eax,0x80070000
   14000566f:	mov    ecx,eax
   140005671:	call   0x1400057e0
   140005676:	int3   
   140005677:	mov    rcx,rbx
   14000567a:	call   QWORD PTR [rip+0xc90]        # 0x140006310
   140005680:	mov    rsi,rax
   140005683:	cmp    edi,0x1000
   140005689:	jl     0x140005693
   14000568b:	mov    rcx,rbx
   14000568e:	call   0x140005c5c
   140005693:	test   rsi,rsi
   140005696:	jne    0x1400056a3
   140005698:	mov    ecx,0x8007000e
   14000569d:	call   0x1400057e0
   1400056a2:	int3   
   1400056a3:	mov    rax,rsi
   1400056a6:	mov    rcx,QWORD PTR [rbp+0x10]
   1400056aa:	xor    rcx,rbp
   1400056ad:	call   0x1400049c0
   1400056b2:	mov    rbx,QWORD PTR [rbp+0x48]
   1400056b6:	mov    rsi,QWORD PTR [rbp+0x50]
   1400056ba:	lea    rsp,[rbp+0x20]
   1400056be:	pop    r12
   1400056c0:	pop    rdi
   1400056c1:	pop    rbp
   1400056c2:	ret    
   1400056c3:	int3   
   1400056c4:	int3   
   1400056c5:	int3   
   1400056c6:	int3   
   1400056c7:	int3   
   1400056c8:	int3   
   1400056c9:	int3   
   1400056ca:	int3   
   1400056cb:	int3   
   1400056cc:	int3   
   1400056cd:	int3   
   1400056ce:	int3   
   1400056cf:	int3   
   1400056d0:	mov    r11,rsp
   1400056d3:	push   r13
   1400056d5:	sub    rsp,0x50
   1400056d9:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400056e2:	mov    QWORD PTR [r11+0x8],rbx
   1400056e6:	mov    QWORD PTR [r11+0x10],rsi
   1400056ea:	mov    QWORD PTR [r11+0x18],rdi
   1400056ee:	mov    QWORD PTR [r11+0x20],r12
   1400056f2:	mov    rbx,rcx
   1400056f5:	xor    eax,eax
   1400056f7:	test   rcx,rcx
   1400056fa:	je     0x1400057c0
   140005700:	or     rcx,0xffffffffffffffff
   140005704:	mov    rdi,rbx
   140005707:	repnz scas ax,WORD PTR es:[rdi]
   14000570a:	not    rcx
   14000570d:	lea    r12,[rcx-0x1]
   140005711:	xor    r13d,r13d
   140005714:	mov    QWORD PTR [r11-0x20],r13
   140005718:	mov    QWORD PTR [r11-0x28],r13
   14000571c:	mov    DWORD PTR [r11-0x30],r13d
   140005720:	mov    QWORD PTR [r11-0x38],r13
   140005724:	mov    r9d,ecx
   140005727:	mov    r8,rbx
   14000572a:	xor    edx,edx
   14000572c:	xor    ecx,ecx
   14000572e:	call   QWORD PTR [rip+0x8dc]        # 0x140006010
   140005734:	movsxd rsi,eax
   140005737:	test   eax,eax
   140005739:	jne    0x140005755
   14000573b:	call   QWORD PTR [rip+0x9f7]        # 0x140006138
   140005741:	test   eax,eax
   140005743:	jle    0x14000574d
   140005745:	movzx  eax,ax
   140005748:	or     eax,0x80070000
   14000574d:	mov    ecx,eax
   14000574f:	call   0x1400057e0
   140005754:	nop
   140005755:	mov    rcx,rsi
   140005758:	call   0x1400049e0
   14000575d:	mov    rdi,rax
   140005760:	test   rax,rax
   140005763:	je     0x1400057b5
   140005765:	mov    QWORD PTR [rsp+0x38],r13
   14000576a:	mov    QWORD PTR [rsp+0x30],r13
   14000576f:	mov    DWORD PTR [rsp+0x28],esi
   140005773:	mov    QWORD PTR [rsp+0x20],rax
   140005778:	lea    r9d,[r12+0x1]
   14000577d:	mov    r8,rbx
   140005780:	xor    edx,edx
   140005782:	xor    ecx,ecx
   140005784:	call   QWORD PTR [rip+0x886]        # 0x140006010
   14000578a:	test   eax,eax
   14000578c:	jne    0x1400057b0
   14000578e:	mov    rcx,rdi
   140005791:	call   0x140004a54
   140005796:	call   QWORD PTR [rip+0x99c]        # 0x140006138
   14000579c:	test   eax,eax
   14000579e:	jle    0x1400057a8
   1400057a0:	movzx  eax,ax
   1400057a3:	or     eax,0x80070000
   1400057a8:	mov    ecx,eax
   1400057aa:	call   0x1400057e0
   1400057af:	int3   
   1400057b0:	mov    rax,rdi
   1400057b3:	jmp    0x1400057c0
   1400057b5:	mov    ecx,0x8007000e
   1400057ba:	call   0x1400057e0
   1400057bf:	int3   
   1400057c0:	mov    rbx,QWORD PTR [rsp+0x60]
   1400057c5:	mov    rsi,QWORD PTR [rsp+0x68]
   1400057ca:	mov    rdi,QWORD PTR [rsp+0x70]
   1400057cf:	mov    r12,QWORD PTR [rsp+0x78]
   1400057d4:	add    rsp,0x50
   1400057d8:	pop    r13
   1400057da:	ret    
   1400057db:	int3   
   1400057dc:	int3   
   1400057dd:	int3   
   1400057de:	int3   
   1400057df:	int3   
   1400057e0:	xor    edx,edx
   1400057e2:	rex.W jmp QWORD PTR [rip+0x389f]        # 0x140009088
   1400057e9:	int3   
   1400057ea:	int3   
   1400057eb:	int3   
   1400057ec:	int3   
   1400057ed:	int3   
   1400057ee:	int3   
   1400057ef:	int3   
   1400057f0:	rex push rbx
   1400057f2:	sub    rsp,0x20
   1400057f6:	lea    rax,[rip+0x1eeb]        # 0x1400076e8
   1400057fd:	mov    rbx,rcx
   140005800:	mov    QWORD PTR [rcx],rax
   140005803:	mov    rcx,QWORD PTR [rcx+0x10]
   140005807:	test   rcx,rcx
   14000580a:	je     0x140005812
   14000580c:	mov    rax,QWORD PTR [rcx]
   14000580f:	call   QWORD PTR [rax+0x10]
   140005812:	mov    rcx,QWORD PTR [rbx+0x18]
   140005816:	test   rcx,rcx
   140005819:	je     0x140005821
   14000581b:	call   QWORD PTR [rip+0x7e7]        # 0x140006008
   140005821:	add    rsp,0x20
   140005825:	pop    rbx
   140005826:	ret    
   140005827:	int3   
   140005828:	int3   
   140005829:	int3   
   14000582a:	int3   
   14000582b:	int3   
   14000582c:	int3   
   14000582d:	int3   
   14000582e:	int3   
   14000582f:	int3   
   140005830:	sub    rsp,0x48
   140005834:	lea    rax,[rip+0x1ead]        # 0x1400076e8
   14000583b:	mov    DWORD PTR [rsp+0x28],ecx
   14000583f:	mov    QWORD PTR [rsp+0x30],rdx
   140005844:	lea    rdx,[rip+0x28c5]        # 0x140008110
   14000584b:	lea    rcx,[rsp+0x20]
   140005850:	mov    QWORD PTR [rsp+0x38],0x0
   140005859:	mov    QWORD PTR [rsp+0x20],rax
   14000585e:	call   0x140005c68
   140005863:	int3   
   140005864:	int3   
   140005865:	int3   
   140005866:	int3   
   140005867:	int3   
   140005868:	int3   
   140005869:	int3   
   14000586a:	int3   
   14000586b:	int3   
   14000586c:	int3   
   14000586d:	int3   
   14000586e:	int3   
   14000586f:	int3   
   140005870:	rex push rbx
   140005872:	sub    rsp,0x20
   140005876:	lea    rax,[rip+0x1e6b]        # 0x1400076e8
   14000587d:	mov    rbx,rcx
   140005880:	mov    QWORD PTR [rcx],rax
   140005883:	mov    eax,DWORD PTR [rdx+0x8]
   140005886:	mov    DWORD PTR [rcx+0x8],eax
   140005889:	mov    rax,QWORD PTR [rdx+0x10]
   14000588d:	mov    QWORD PTR [rcx+0x18],0x0
   140005895:	mov    QWORD PTR [rcx+0x10],rax
   140005899:	mov    rcx,rax
   14000589c:	test   rax,rax
   14000589f:	je     0x1400058a7
   1400058a1:	mov    rax,QWORD PTR [rax]
   1400058a4:	call   QWORD PTR [rax+0x8]
   1400058a7:	mov    rax,rbx
   1400058aa:	add    rsp,0x20
   1400058ae:	pop    rbx
   1400058af:	ret    
   1400058b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400058b5:	push   rdi
   1400058b6:	sub    rsp,0x20
   1400058ba:	lea    rax,[rip+0x1e27]        # 0x1400076e8
   1400058c1:	mov    rbx,rcx
   1400058c4:	mov    edi,edx
   1400058c6:	mov    QWORD PTR [rcx],rax
   1400058c9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400058cd:	test   rcx,rcx
   1400058d0:	je     0x1400058d8
   1400058d2:	mov    rax,QWORD PTR [rcx]
   1400058d5:	call   QWORD PTR [rax+0x10]
   1400058d8:	mov    rcx,QWORD PTR [rbx+0x18]
   1400058dc:	test   rcx,rcx
   1400058df:	je     0x1400058e7
   1400058e1:	call   QWORD PTR [rip+0x721]        # 0x140006008
   1400058e7:	test   dil,0x1
   1400058eb:	je     0x1400058f5
   1400058ed:	mov    rcx,rbx
   1400058f0:	call   0x140004a54
   1400058f5:	mov    rax,rbx
   1400058f8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400058fd:	add    rsp,0x20
   140005901:	pop    rdi
   140005902:	ret    
   140005903:	int3   
   140005904:	rex push rbp
   140005906:	push   rbx
   140005907:	push   rsi
   140005908:	push   rdi
   140005909:	push   r12
   14000590b:	push   r13
   14000590d:	push   r14
   14000590f:	push   r15
   140005911:	mov    rbp,rsp
   140005914:	sub    rsp,0x78
   140005918:	mov    eax,DWORD PTR [rcx+0x4]
   14000591b:	mov    r9d,DWORD PTR [rcx]
   14000591e:	mov    r13d,DWORD PTR [rcx+0x8]
   140005922:	mov    r10d,DWORD PTR [rcx+0xc]
   140005926:	and    DWORD PTR [rbp-0x38],0x0
   14000592a:	mov    rsi,rcx
   14000592d:	mov    r15d,DWORD PTR [rsi+0x14]
   140005931:	mov    ecx,DWORD PTR [rcx+0x10]
   140005934:	mov    r14,rdx
   140005937:	lea    rdx,[rip+0xffffffffffffa6c2]        # 0x140000000
   14000593e:	and    r9d,0x1
   140005942:	mov    DWORD PTR [rbp-0x58],0x48
   140005949:	add    rax,rdx
   14000594c:	add    r15,rdx
   14000594f:	add    r13,rdx
   140005952:	add    r10,rdx
   140005955:	add    rcx,rdx
   140005958:	mov    edx,DWORD PTR [rsi+0x1c]
   14000595b:	mov    QWORD PTR [rbp-0x40],rax
   14000595f:	xor    eax,eax
   140005961:	mov    QWORD PTR [rbp-0x50],rsi
   140005965:	and    QWORD PTR [rbp-0x28],rax
   140005969:	and    QWORD PTR [rbp-0x20],rax
   14000596d:	and    DWORD PTR [rbp-0x18],eax
   140005970:	mov    DWORD PTR [rbp+0x48],edx
   140005973:	mov    QWORD PTR [rbp-0x48],r14
   140005977:	mov    QWORD PTR [rbp-0x30],rax
   14000597b:	test   r9b,r9b
   14000597e:	jne    0x1400059a4
   140005980:	xor    edx,edx
   140005982:	lea    rax,[rbp-0x58]
   140005986:	lea    r9,[rbp+0x50]
   14000598a:	lea    r8d,[rdx+0x1]
   14000598e:	mov    ecx,0xc06d0057
   140005993:	mov    QWORD PTR [rbp+0x50],rax
   140005997:	call   QWORD PTR [rip+0x68b]        # 0x140006028
   14000599d:	xor    eax,eax
   14000599f:	jmp    0x140005bb5
   1400059a4:	mov    rdi,QWORD PTR [r13+0x0]
   1400059a8:	movabs rax,0x8000000000000000
   1400059b2:	mov    r12,r14
   1400059b5:	sub    r12,r10
   1400059b8:	sar    r12,0x3
   1400059bc:	mov    r12d,r12d
   1400059bf:	test   QWORD PTR [rcx+r12*8],rax
   1400059c3:	mov    eax,0x0
   1400059c8:	sete   al
   1400059cb:	mov    DWORD PTR [rbp-0x38],eax
   1400059ce:	test   eax,eax
   1400059d0:	je     0x1400059e6
   1400059d2:	mov    eax,DWORD PTR [rcx+r12*8]
   1400059d6:	lea    rcx,[rip+0xffffffffffffa625]        # 0x140000002
   1400059dd:	add    rax,rcx
   1400059e0:	mov    QWORD PTR [rbp-0x30],rax
   1400059e4:	jmp    0x1400059ee
   1400059e6:	movzx  eax,WORD PTR [rcx+r12*8]
   1400059eb:	mov    DWORD PTR [rbp-0x30],eax
   1400059ee:	mov    rax,QWORD PTR [rip+0x3d33]        # 0x140009728
   1400059f5:	xor    ebx,ebx
   1400059f7:	test   rax,rax
   1400059fa:	je     0x140005a17
   1400059fc:	lea    rdx,[rbp-0x58]
   140005a00:	xor    ecx,ecx
   140005a02:	call   rax
   140005a04:	mov    rbx,rax
   140005a07:	test   rax,rax
   140005a0a:	jne    0x140005b8f
   140005a10:	mov    rax,QWORD PTR [rip+0x3d11]        # 0x140009728
   140005a17:	test   rdi,rdi
   140005a1a:	jne    0x140005ae0
   140005a20:	test   rax,rax
   140005a23:	je     0x140005a36
   140005a25:	lea    rdx,[rbp-0x58]
   140005a29:	lea    ecx,[rdi+0x1]
   140005a2c:	call   rax
   140005a2e:	mov    rdi,rax
   140005a31:	test   rax,rax
   140005a34:	jne    0x140005a94
   140005a36:	mov    rcx,QWORD PTR [rbp-0x40]
   140005a3a:	call   QWORD PTR [rip+0x730]        # 0x140006170
   140005a40:	mov    rdi,rax
   140005a43:	test   rax,rax
   140005a46:	jne    0x140005a94
   140005a48:	call   QWORD PTR [rip+0x6ea]        # 0x140006138
   140005a4e:	mov    DWORD PTR [rbp-0x18],eax
   140005a51:	mov    rax,QWORD PTR [rip+0x3700]        # 0x140009158
   140005a58:	test   rax,rax
   140005a5b:	je     0x140005a6e
   140005a5d:	lea    rdx,[rbp-0x58]
   140005a61:	lea    ecx,[rdi+0x3]
   140005a64:	call   rax
   140005a66:	mov    rdi,rax
   140005a69:	test   rax,rax
   140005a6c:	jne    0x140005a94
   140005a6e:	xor    edx,edx
   140005a70:	lea    rax,[rbp-0x58]
   140005a74:	lea    r9,[rbp+0x58]
   140005a78:	lea    r8d,[rdx+0x1]
   140005a7c:	mov    ecx,0xc06d007e
   140005a81:	mov    QWORD PTR [rbp+0x58],rax
   140005a85:	call   QWORD PTR [rip+0x59d]        # 0x140006028
   140005a8b:	mov    rax,QWORD PTR [rbp-0x20]
   140005a8f:	jmp    0x140005bb5
   140005a94:	mov    rax,rdi
   140005a97:	xchg   QWORD PTR [r13+0x0],rax
   140005a9b:	cmp    rax,rdi
   140005a9e:	je     0x140005ad0
   140005aa0:	cmp    DWORD PTR [rsi+0x18],0x0
   140005aa4:	je     0x140005ad9
   140005aa6:	mov    edx,0x10
   140005aab:	lea    ecx,[rdx+0x30]
   140005aae:	call   QWORD PTR [rip+0x60c]        # 0x1400060c0
   140005ab4:	test   rax,rax
   140005ab7:	je     0x140005ad9
   140005ab9:	mov    QWORD PTR [rax+0x8],rsi
   140005abd:	mov    rcx,QWORD PTR [rip+0x3c5c]        # 0x140009720
   140005ac4:	mov    QWORD PTR [rax],rcx
   140005ac7:	mov    QWORD PTR [rip+0x3c52],rax        # 0x140009720
   140005ace:	jmp    0x140005ad9
   140005ad0:	mov    rcx,rdi
   140005ad3:	call   QWORD PTR [rip+0x66f]        # 0x140006148
   140005ad9:	mov    rax,QWORD PTR [rip+0x3c48]        # 0x140009728
   140005ae0:	mov    QWORD PTR [rbp-0x28],rdi
   140005ae4:	test   rax,rax
   140005ae7:	je     0x140005af7
   140005ae9:	lea    rdx,[rbp-0x58]
   140005aed:	mov    ecx,0x2
   140005af2:	call   rax
   140005af4:	mov    rbx,rax
   140005af7:	test   rbx,rbx
   140005afa:	jne    0x140005b8c
   140005b00:	cmp    DWORD PTR [rsi+0x14],ebx
   140005b03:	je     0x140005b30
   140005b05:	cmp    DWORD PTR [rsi+0x1c],ebx
   140005b08:	je     0x140005b30
   140005b0a:	movsxd rax,DWORD PTR [rdi+0x3c]
   140005b0e:	cmp    DWORD PTR [rax+rdi*1],0x4550
   140005b15:	jne    0x140005b30
   140005b17:	mov    ecx,DWORD PTR [rbp+0x48]
   140005b1a:	cmp    DWORD PTR [rax+rdi*1+0x8],ecx
   140005b1e:	jne    0x140005b30
   140005b20:	cmp    rdi,QWORD PTR [rax+rdi*1+0x30]
   140005b25:	jne    0x140005b30
   140005b27:	mov    rbx,QWORD PTR [r15+r12*8]
   140005b2b:	test   rbx,rbx
   140005b2e:	jne    0x140005b8c
   140005b30:	mov    rdx,QWORD PTR [rbp-0x30]
   140005b34:	mov    rcx,rdi
   140005b37:	call   QWORD PTR [rip+0x603]        # 0x140006140
   140005b3d:	mov    rbx,rax
   140005b40:	test   rax,rax
   140005b43:	jne    0x140005b8c
   140005b45:	call   QWORD PTR [rip+0x5ed]        # 0x140006138
   140005b4b:	mov    DWORD PTR [rbp-0x18],eax
   140005b4e:	mov    rax,QWORD PTR [rip+0x3603]        # 0x140009158
   140005b55:	test   rax,rax
   140005b58:	je     0x140005b6b
   140005b5a:	lea    rdx,[rbp-0x58]
   140005b5e:	lea    ecx,[rbx+0x4]
   140005b61:	call   rax
   140005b63:	mov    rbx,rax
   140005b66:	test   rax,rax
   140005b69:	jne    0x140005b8c
   140005b6b:	xor    edx,edx
   140005b6d:	lea    rax,[rbp-0x58]
   140005b71:	lea    r9,[rbp+0x60]
   140005b75:	lea    r8d,[rdx+0x1]
   140005b79:	mov    ecx,0xc06d007f
   140005b7e:	mov    QWORD PTR [rbp+0x60],rax
   140005b82:	call   QWORD PTR [rip+0x4a0]        # 0x140006028
   140005b88:	mov    rbx,QWORD PTR [rbp-0x20]
   140005b8c:	mov    QWORD PTR [r14],rbx
   140005b8f:	mov    rax,QWORD PTR [rip+0x3b92]        # 0x140009728
   140005b96:	test   rax,rax
   140005b99:	je     0x140005bb2
   140005b9b:	and    DWORD PTR [rbp-0x18],0x0
   140005b9f:	lea    rdx,[rbp-0x58]
   140005ba3:	mov    ecx,0x5
   140005ba8:	mov    QWORD PTR [rbp-0x28],rdi
   140005bac:	mov    QWORD PTR [rbp-0x20],rbx
   140005bb0:	call   rax
   140005bb2:	mov    rax,rbx
   140005bb5:	add    rsp,0x78
   140005bb9:	pop    r15
   140005bbb:	pop    r14
   140005bbd:	pop    r13
   140005bbf:	pop    r12
   140005bc1:	pop    rdi
   140005bc2:	pop    rsi
   140005bc3:	pop    rbx
   140005bc4:	pop    rbp
   140005bc5:	ret    
   140005bc6:	int3   
   140005bc7:	int3   
   140005bc8:	mov    rax,rsp
   140005bcb:	mov    QWORD PTR [rax+0x8],rbx
   140005bcf:	mov    QWORD PTR [rax+0x10],rbp
   140005bd3:	mov    QWORD PTR [rax+0x18],rsi
   140005bd7:	mov    QWORD PTR [rax+0x20],rdi
   140005bdb:	push   r12
   140005bdd:	sub    rsp,0x20
   140005be1:	mov    r10,QWORD PTR [r9+0x38]
   140005be5:	mov    rsi,rdx
   140005be8:	mov    r12,r8
   140005beb:	mov    eax,DWORD PTR [r10]
   140005bee:	mov    rbp,rcx
   140005bf1:	mov    rdx,r9
   140005bf4:	add    rax,rax
   140005bf7:	mov    rcx,rsi
   140005bfa:	mov    rdi,r9
   140005bfd:	lea    rbx,[r10+rax*8+0x4]
   140005c02:	mov    r8,rbx
   140005c05:	call   0x140004920
   140005c0a:	mov    r11d,DWORD PTR [rbx]
   140005c0d:	mov    r10d,DWORD PTR [rbp+0x4]
   140005c11:	mov    eax,r11d
   140005c14:	and    r11d,0x2
   140005c18:	mov    edx,0x1
   140005c1d:	and    eax,edx
   140005c1f:	and    r10b,0x66
   140005c23:	cmove  r11d,eax
   140005c27:	test   r11d,r11d
   140005c2a:	je     0x140005c3f
   140005c2c:	mov    r9,rdi
   140005c2f:	mov    r8,r12
   140005c32:	mov    rdx,rsi
   140005c35:	mov    rcx,rbp
   140005c38:	call   0x1400050b0
   140005c3d:	mov    edx,eax
   140005c3f:	mov    rbx,QWORD PTR [rsp+0x30]
   140005c44:	mov    rbp,QWORD PTR [rsp+0x38]
   140005c49:	mov    rsi,QWORD PTR [rsp+0x40]
   140005c4e:	mov    rdi,QWORD PTR [rsp+0x48]
   140005c53:	mov    eax,edx
   140005c55:	add    rsp,0x20
   140005c59:	pop    r12
   140005c5b:	ret    
   140005c5c:	jmp    QWORD PTR [rip+0x686]        # 0x1400062e8
   140005c62:	jmp    QWORD PTR [rip+0x670]        # 0x1400062d8
   140005c68:	jmp    QWORD PTR [rip+0x662]        # 0x1400062d0
   140005c6e:	int3   
   140005c6f:	int3   
   140005c70:	mov    rcx,QWORD PTR [rdx+0x40]
   140005c77:	jmp    0x140004a54
   140005c7c:	lea    rcx,[rdx+0x58]
   140005c83:	jmp    0x140001864
   140005c88:	mov    QWORD PTR [rsp+0x10],rdx
   140005c8d:	push   rbx
   140005c8e:	push   rbp
   140005c8f:	sub    rsp,0x38
   140005c93:	mov    rbp,rdx
   140005c96:	mov    rcx,QWORD PTR [rbp+0x38]
   140005c9a:	mov    ebx,DWORD PTR [rcx+0x8]
   140005c9d:	mov    DWORD PTR [rbp+0x68],ebx
   140005ca0:	call   0x1400043a4
   140005ca5:	mov    r8,rax
   140005ca8:	mov    edx,ebx
   140005caa:	lea    rcx,[rip+0xe37]        # 0x140006ae8
   140005cb1:	call   0x140004814
   140005cb6:	nop
   140005cb7:	lea    rax,[rip+0xffffffffffffcea7]        # 0x140002b65
   140005cbe:	add    rsp,0x38
   140005cc2:	pop    rbp
   140005cc3:	pop    rbx
   140005cc4:	ret    
   140005cc5:	int3   
   140005cc6:	int3   
   140005cc7:	int3   
   140005cc8:	mov    QWORD PTR [rsp+0x10],rdx
   140005ccd:	push   rbx
   140005cce:	push   rbp
   140005ccf:	sub    rsp,0x38
   140005cd3:	mov    rbp,rdx
   140005cd6:	mov    rcx,QWORD PTR [rbp+0x40]
   140005cda:	mov    ebx,DWORD PTR [rcx+0x8]
   140005cdd:	mov    DWORD PTR [rbp+0x68],ebx
   140005ce0:	call   0x1400043a4
   140005ce5:	mov    r8,rax
   140005ce8:	mov    edx,ebx
   140005cea:	lea    rcx,[rip+0xea7]        # 0x140006b98
   140005cf1:	call   0x140004814
   140005cf6:	nop
   140005cf7:	lea    rax,[rip+0xffffffffffffceab]        # 0x140002ba9
   140005cfe:	add    rsp,0x38
   140005d02:	pop    rbp
   140005d03:	pop    rbx
   140005d04:	ret    
   140005d05:	int3   
   140005d06:	int3   
   140005d07:	int3   
   140005d08:	mov    QWORD PTR [rsp+0x10],rdx
   140005d0d:	push   rbx
   140005d0e:	push   rbp
   140005d0f:	sub    rsp,0x38
   140005d13:	mov    rbp,rdx
   140005d16:	mov    rcx,QWORD PTR [rbp+0x48]
   140005d1a:	mov    ebx,DWORD PTR [rcx+0x8]
   140005d1d:	mov    DWORD PTR [rbp+0x68],ebx
   140005d20:	call   0x1400043a4
   140005d25:	mov    r8,rax
   140005d28:	mov    edx,ebx
   140005d2a:	lea    rcx,[rip+0xf1f]        # 0x140006c50
   140005d31:	call   0x140004814
   140005d36:	nop
   140005d37:	lea    rax,[rip+0xffffffffffffcead]        # 0x140002beb
   140005d3e:	add    rsp,0x38
   140005d42:	pop    rbp
   140005d43:	pop    rbx
   140005d44:	ret    
   140005d45:	int3   
   140005d46:	int3   
   140005d47:	int3   
   140005d48:	int3   
   140005d49:	int3   
   140005d4a:	int3   
   140005d4b:	int3   
   140005d4c:	int3   
   140005d4d:	int3   
   140005d4e:	int3   
   140005d4f:	int3   
   140005d50:	int3   
   140005d51:	int3   
   140005d52:	int3   
   140005d53:	int3   
   140005d54:	int3   
   140005d55:	int3   
   140005d56:	int3   
   140005d57:	int3   
   140005d58:	mov    QWORD PTR [rsp+0x10],rdx
   140005d5d:	push   rbx
   140005d5e:	push   rbp
   140005d5f:	sub    rsp,0x28
   140005d63:	mov    rbp,rdx
   140005d66:	mov    rcx,QWORD PTR [rbp+0x38]
   140005d6a:	mov    ebx,DWORD PTR [rcx+0x8]
   140005d6d:	mov    DWORD PTR [rbp+0x20],ebx
   140005d70:	call   0x1400043a4
   140005d75:	mov    r8,rax
   140005d78:	mov    edx,ebx
   140005d7a:	lea    rcx,[rip+0xf47]        # 0x140006cc8
   140005d81:	call   0x140004814
   140005d86:	nop
   140005d87:	lea    rax,[rip+0xffffffffffffdcf8]        # 0x140003a86
   140005d8e:	add    rsp,0x28
   140005d92:	pop    rbp
   140005d93:	pop    rbx
   140005d94:	ret    
   140005d95:	int3   
   140005d96:	int3   
   140005d97:	int3   
   140005d98:	int3   
   140005d99:	int3   
   140005d9a:	int3   
   140005d9b:	int3   
   140005d9c:	int3   
   140005d9d:	int3   
   140005d9e:	int3   
   140005d9f:	int3   
   140005da0:	int3   
   140005da1:	int3   
   140005da2:	int3   
   140005da3:	int3   
   140005da4:	int3   
   140005da5:	int3   
   140005da6:	int3   
   140005da7:	int3   
   140005da8:	mov    QWORD PTR [rsp+0x10],rdx
   140005dad:	push   rbx
   140005dae:	push   rbp
   140005daf:	sub    rsp,0x38
   140005db3:	mov    rbp,rdx
   140005db6:	mov    rcx,QWORD PTR [rbp+0x48]
   140005dba:	mov    ebx,DWORD PTR [rcx+0x8]
   140005dbd:	mov    DWORD PTR [rbp+0x30],ebx
   140005dc0:	call   0x1400043a4
   140005dc5:	mov    r8,rax
   140005dc8:	mov    edx,ebx
   140005dca:	lea    rcx,[rip+0xfcf]        # 0x140006da0
   140005dd1:	call   0x140004814
   140005dd6:	nop
   140005dd7:	lea    rax,[rip+0xffffffffffffddcd]        # 0x140003bab
   140005dde:	add    rsp,0x38
   140005de2:	pop    rbp
   140005de3:	pop    rbx
   140005de4:	ret    
   140005de5:	int3   
   140005de6:	mov    rcx,QWORD PTR [rdx+0x50]
   140005ded:	jmp    0x140004a54
   140005df2:	rex push rbp
   140005df4:	sub    rsp,0x20
   140005df8:	mov    rbp,rdx
   140005dfb:	mov    QWORD PTR [rbp+0x38],rcx
   140005dff:	mov    QWORD PTR [rbp+0x28],rcx
   140005e03:	mov    rax,QWORD PTR [rbp+0x28]
   140005e07:	mov    rcx,QWORD PTR [rax]
   140005e0a:	mov    QWORD PTR [rbp+0x30],rcx
   140005e0e:	mov    rax,QWORD PTR [rbp+0x30]
   140005e12:	cmp    DWORD PTR [rax],0xe06d7363
   140005e18:	je     0x140005e26
   140005e1a:	mov    DWORD PTR [rbp+0x20],0x0
   140005e21:	mov    eax,DWORD PTR [rbp+0x20]
   140005e24:	jmp    0x140005e2c
   140005e26:	call   0x1400050aa
   140005e2b:	nop
   140005e2c:	add    rsp,0x20
   140005e30:	pop    rbp
   140005e31:	ret    
   140005e32:	int3   
   140005e33:	rex push rbp
   140005e35:	sub    rsp,0x20
   140005e39:	mov    rbp,rdx
   140005e3c:	cmp    DWORD PTR [rbp+0x20],0x0
   140005e40:	jne    0x140005e58
   140005e42:	mov    r9,QWORD PTR [rbp+0x78]
   140005e46:	mov    r8d,DWORD PTR [rbp+0x70]
   140005e4a:	mov    rdx,QWORD PTR [rbp+0x68]
   140005e4e:	mov    rcx,QWORD PTR [rbp+0x60]
   140005e52:	call   0x140004b64
   140005e57:	nop
   140005e58:	add    rsp,0x20
   140005e5c:	pop    rbp
   140005e5d:	ret    
   140005e5e:	int3   
   140005e5f:	rex push rbp
   140005e61:	sub    rsp,0x20
   140005e65:	mov    rbp,rdx
   140005e68:	mov    rax,QWORD PTR [rcx]
   140005e6b:	mov    rdx,rcx
   140005e6e:	mov    ecx,DWORD PTR [rax]
   140005e70:	call   0x140005254
   140005e75:	nop
   140005e76:	add    rsp,0x20
   140005e7a:	pop    rbp
   140005e7b:	ret    
   140005e7c:	int3   
   140005e7d:	rex push rbp
   140005e7f:	sub    rsp,0x20
   140005e83:	mov    rbp,rdx
   140005e86:	mov    ecx,0x8
   140005e8b:	call   0x1400053f4
   140005e90:	nop
   140005e91:	add    rsp,0x20
   140005e95:	pop    rbp
   140005e96:	ret    
   140005e97:	int3   
   140005e98:	int3   
   140005e99:	int3   
   140005e9a:	int3   
   140005e9b:	int3   
   140005e9c:	int3   
   140005e9d:	int3   
   140005e9e:	int3   
   140005e9f:	int3   
   140005ea0:	rex push rbp
   140005ea2:	sub    rsp,0x20
   140005ea6:	mov    rbp,rdx
   140005ea9:	mov    rax,QWORD PTR [rcx]
   140005eac:	xor    ecx,ecx
   140005eae:	cmp    DWORD PTR [rax],0xc0000005
   140005eb4:	sete   cl
   140005eb7:	mov    eax,ecx
   140005eb9:	mov    eax,ecx
   140005ebb:	add    rsp,0x20
   140005ebf:	pop    rbp
   140005ec0:	ret    
   140005ec1:	int3   
   140005ec2:	int3   
   140005ec3:	int3   
   140005ec4:	int3   
   140005ec5:	int3   
   140005ec6:	int3   
   140005ec7:	int3   
   140005ec8:	int3   
   140005ec9:	int3   
   140005eca:	int3   
   140005ecb:	int3   
   140005ecc:	int3   
   140005ecd:	int3   
   140005ece:	int3   
   140005ecf:	int3   
   140005ed0:	mov    QWORD PTR [rsp+0x10],rdx
   140005ed5:	push   rbp
   140005ed6:	sub    rsp,0x40
   140005eda:	mov    rbp,rdx
   140005edd:	lea    rax,[rip+0xfffffffffffff8d1]        # 0x1400057b5
   140005ee4:	add    rsp,0x40
   140005ee8:	pop    rbp
   140005ee9:	ret    
   140005eea:	int3   
   140005eeb:	int3   
   140005eec:	int3   
   140005eed:	int3   
   140005eee:	int3   
   140005eef:	int3   
   140005ef0:	lea    rax,[rip+0xffffffffffffbd1d]        # 0x140001c14
   140005ef7:	mov    QWORD PTR [rip+0x325a],rax        # 0x140009158
   140005efe:	ret    
   140005eff:	int3   
   140005f00:	lea    rcx,[rip+0x9]        # 0x140005f10
   140005f07:	jmp    0x1400051cc
   140005f0c:	int3   
   140005f0d:	int3   
   140005f0e:	int3   
   140005f0f:	int3   
   140005f10:	lea    rcx,[rip+0x3159]        # 0x140009070
   140005f17:	rex.W jmp QWORD PTR [rip+0x3fa]        # 0x140006318

Disassembly of section .rdata:

0000000140006000 <.rdata>:
   140006000:	sub    al,0x8b
   140006002:	add    BYTE PTR [rax],al
   140006004:	add    BYTE PTR [rax],al
   140006006:	add    BYTE PTR [rax],al
   140006008:	outs   dx,BYTE PTR ds:[rsi]
   140006009:	mov    es,WORD PTR [rax]
   14000600b:	add    BYTE PTR [rax],al
   14000600d:	add    BYTE PTR [rax],al
   14000600f:	add    BYTE PTR [rax-0x72],bl
   140006012:	add    BYTE PTR [rax],al
   140006014:	add    BYTE PTR [rax],al
   140006016:	add    BYTE PTR [rax],al
   140006018:	rex.WR mov es,WORD PTR [rax]
   14000601b:	add    BYTE PTR [rax],al
   14000601d:	add    BYTE PTR [rax],al
   14000601f:	add    BYTE PTR [rsi],dh
   140006021:	mov    es,WORD PTR [rax]
   140006023:	add    BYTE PTR [rax],al
   140006025:	add    BYTE PTR [rax],al
   140006027:	add    BYTE PTR [rdx+0x8e],cl
   14000602d:	add    BYTE PTR [rax],al
   14000602f:	add    BYTE PTR [rbp+rcx*4+0x0],ch
   140006036:	add    BYTE PTR [rax],al
   140006038:	pushf  
   140006039:	lea    eax,[rax]
   14000603b:	add    BYTE PTR [rax],al
   14000603d:	add    BYTE PTR [rax],al
   14000603f:	add    BYTE PTR [rdx+0x8d],al
   140006045:	add    BYTE PTR [rax],al
   140006047:	add    BYTE PTR [rdx-0x73],dh
   14000604a:	add    BYTE PTR [rax],al
   14000604c:	add    BYTE PTR [rax],al
   14000604e:	add    BYTE PTR [rax],al
   140006050:	pop    rsi
   140006051:	lea    eax,[rax]
   140006053:	add    BYTE PTR [rax],al
   140006055:	add    BYTE PTR [rax],al
   140006057:	add    BYTE PTR [rbp+rcx*4+0x0],al
   14000605b:	add    BYTE PTR [rax],al
   14000605d:	add    BYTE PTR [rax],al
   14000605f:	add    BYTE PTR [rax],dh
   140006061:	lea    eax,[rax]
   140006063:	add    BYTE PTR [rax],al
   140006065:	add    BYTE PTR [rax],al
   140006067:	add    BYTE PTR [rcx*4+0x0],bl
   14000606e:	add    BYTE PTR [rax],al
   140006070:	dec    BYTE PTR [rax+rax*1+0x0]
   140006077:	add    dl,ah
   140006079:	mov    WORD PTR [rax],es
   14000607b:	add    BYTE PTR [rax],al
   14000607d:	add    BYTE PTR [rax],al
   14000607f:	add    dh,cl
   140006081:	mov    WORD PTR [rax],es
   140006083:	add    BYTE PTR [rax],al
   140006085:	add    BYTE PTR [rax],al
   140006087:	add    BYTE PTR [rsi+0x8c],bh
   14000608d:	add    BYTE PTR [rax],al
   14000608f:	add    BYTE PTR [rsp+rcx*4+0x0],ch
   140006096:	add    BYTE PTR [rax],al
   140006098:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140006099:	mov    WORD PTR [rax],es
   14000609b:	add    BYTE PTR [rax],al
   14000609d:	add    BYTE PTR [rax],al
   14000609f:	add    BYTE PTR [rsi+0x8c],cl
   1400060a5:	add    BYTE PTR [rax],al
   1400060a7:	add    BYTE PTR [rax-0x74],bh
   1400060aa:	add    BYTE PTR [rax],al
   1400060ac:	add    BYTE PTR [rax],al
   1400060ae:	add    BYTE PTR [rax],al
   1400060b0:	(bad)  
   1400060b1:	mov    WORD PTR [rax],es
   1400060b3:	add    BYTE PTR [rax],al
   1400060b5:	add    BYTE PTR [rax],al
   1400060b7:	add    BYTE PTR [rsi-0x74],cl
   1400060ba:	add    BYTE PTR [rax],al
   1400060bc:	add    BYTE PTR [rax],al
   1400060be:	add    BYTE PTR [rax],al
   1400060c0:	rex mov WORD PTR [rax],es
   1400060c3:	add    BYTE PTR [rax],al
   1400060c5:	add    BYTE PTR [rax],al
   1400060c7:	add    BYTE PTR [rsp+rcx*4],dh
   1400060ca:	add    BYTE PTR [rax],al
   1400060cc:	add    BYTE PTR [rax],al
   1400060ce:	add    BYTE PTR [rax],al
   1400060d0:	(bad)  
   1400060d1:	mov    WORD PTR [rax],es
   1400060d3:	add    BYTE PTR [rax],al
   1400060d5:	add    BYTE PTR [rax],al
   1400060d7:	add    BYTE PTR [rsp+rcx*4],cl
   1400060da:	add    BYTE PTR [rax],al
   1400060dc:	add    BYTE PTR [rax],al
   1400060de:	add    BYTE PTR [rax],al
   1400060e0:	test   BYTE PTR [rbx+0x0],0x0
   1400060e7:	add    al,ch
   1400060e9:	mov    eax,DWORD PTR [rax]
   1400060eb:	add    BYTE PTR [rax],al
   1400060ed:	add    BYTE PTR [rax],al
   1400060ef:	add    dl,dl
   1400060f1:	mov    eax,DWORD PTR [rax]
   1400060f3:	add    BYTE PTR [rax],al
   1400060f5:	add    BYTE PTR [rax],al
   1400060f7:	add    BYTE PTR [rsi+0x8b],bh
   1400060fd:	add    BYTE PTR [rax],al
   1400060ff:	add    BYTE PTR [rax+0x8b],ch
   140006105:	add    BYTE PTR [rax],al
   140006107:	add    BYTE PTR [rdx+0x8b],dl
   14000610d:	add    BYTE PTR [rax],al
   14000610f:	add    BYTE PTR [rdx+0x8b],al
   140006115:	add    BYTE PTR [rax],al
   140006117:	add    BYTE PTR [rdx-0x75],ch
   14000611a:	add    BYTE PTR [rax],al
   14000611c:	add    BYTE PTR [rax],al
   14000611e:	add    BYTE PTR [rax],al
   140006120:	push   rsi
   140006121:	mov    eax,DWORD PTR [rax]
   140006123:	add    BYTE PTR [rax],al
   140006125:	add    BYTE PTR [rax],al
   140006127:	add    BYTE PTR [rax-0x75],al
   14000612a:	add    BYTE PTR [rax],al
   14000612c:	add    BYTE PTR [rax],al
   14000612e:	add    BYTE PTR [rax],al
   140006130:	sbb    al,0x8b
   140006132:	add    BYTE PTR [rax],al
   140006134:	add    BYTE PTR [rax],al
   140006136:	add    BYTE PTR [rax],al
   140006138:	or     al,0x8b
   14000613a:	add    BYTE PTR [rax],al
   14000613c:	add    BYTE PTR [rax],al
   14000613e:	add    BYTE PTR [rax],al
   140006140:	cli    
   140006141:	mov    al,BYTE PTR [rax]
   140006143:	add    BYTE PTR [rax],al
   140006145:	add    BYTE PTR [rax],al
   140006147:	add    ah,ch
   140006149:	mov    al,BYTE PTR [rax]
   14000614b:	add    BYTE PTR [rax],al
   14000614d:	add    BYTE PTR [rax],al
   14000614f:	add    dh,bl
   140006151:	mov    al,BYTE PTR [rax]
   140006153:	add    BYTE PTR [rax],al
   140006155:	add    BYTE PTR [rax],al
   140006157:	add    ah,cl
   140006159:	mov    al,BYTE PTR [rax]
   14000615b:	add    BYTE PTR [rax],al
   14000615d:	add    BYTE PTR [rax],al
   14000615f:	add    BYTE PTR [rdx+0x8a],dh
   140006165:	add    BYTE PTR [rax],al
   140006167:	add    BYTE PTR [rdx+0x8a],bl
   14000616d:	add    BYTE PTR [rax],al
   14000616f:	add    BYTE PTR [rdx-0x72],bh
	...
   14000617e:	add    BYTE PTR [rax],al
   140006180:	nop
   140006181:	mov    al,BYTE PTR [rax]
   140006183:	add    BYTE PTR [rax],al
   140006185:	add    BYTE PTR [rax],al
   140006187:	add    BYTE PTR [rdx-0x76],bh
   14000618a:	add    BYTE PTR [rax],al
   14000618c:	add    BYTE PTR [rax],al
   14000618e:	add    BYTE PTR [rax],al
   140006190:	jo     0x14000611c
   140006192:	add    BYTE PTR [rax],al
   140006194:	add    BYTE PTR [rax],al
   140006196:	add    BYTE PTR [rax],al
   140006198:	cmp    cl,BYTE PTR [rdx+0x0]
   14000619e:	add    BYTE PTR [rax],al
   1400061a0:	and    al,0x8a
   1400061a2:	add    BYTE PTR [rax],al
   1400061a4:	add    BYTE PTR [rax],al
   1400061a6:	add    BYTE PTR [rax],al
   1400061a8:	adc    cl,BYTE PTR [rdx+0x0]
   1400061ae:	add    BYTE PTR [rax],al
   1400061b0:	or     BYTE PTR [rdx+0x0],cl
   1400061b6:	add    BYTE PTR [rax],al
   1400061b8:	cld    
   1400061b9:	mov    DWORD PTR [rax],eax
   1400061bb:	add    BYTE PTR [rax],al
   1400061bd:	add    BYTE PTR [rax],al
   1400061bf:	add    ah,dh
   1400061c1:	xchg   DWORD PTR [rax],eax
   1400061c3:	add    BYTE PTR [rax],al
   1400061c5:	add    BYTE PTR [rax],al
   1400061c7:	add    al,ch
   1400061c9:	mov    DWORD PTR [rax],eax
   1400061cb:	add    BYTE PTR [rax],al
   1400061cd:	add    BYTE PTR [rax],al
   1400061cf:	add    dl,dl
   1400061d1:	mov    DWORD PTR [rax],eax
   1400061d3:	add    BYTE PTR [rax],al
   1400061d5:	add    BYTE PTR [rax],al
   1400061d7:	add    ah,al
   1400061d9:	mov    DWORD PTR [rax],eax
   1400061db:	add    BYTE PTR [rax],al
   1400061dd:	add    BYTE PTR [rax],al
   1400061df:	add    BYTE PTR [rax+0x89],bh
   1400061e5:	add    BYTE PTR [rax],al
   1400061e7:	add    BYTE PTR [rsi+0x89],ch
   1400061ed:	add    BYTE PTR [rax],al
   1400061ef:	add    BYTE PTR [rsi+0x89],ah
   1400061f5:	add    BYTE PTR [rax],al
   1400061f7:	add    BYTE PTR [rcx+rcx*4+0x0],bl
   1400061fe:	add    BYTE PTR [rax],al
   140006200:	mov    cs,WORD PTR [rcx+0x0]
   140006206:	add    BYTE PTR [rax],al
   140006208:	xchg   BYTE PTR [rcx+0x0],cl
   14000620e:	add    BYTE PTR [rax],al
   140006210:	js     0x14000619b
   140006212:	add    BYTE PTR [rax],al
   140006214:	add    BYTE PTR [rax],al
   140006216:	add    BYTE PTR [rax],al
   140006218:	push   0x89
   14000621d:	add    BYTE PTR [rax],al
   14000621f:	add    BYTE PTR [rdx-0x77],bl
   140006222:	add    BYTE PTR [rax],al
   140006224:	add    BYTE PTR [rax],al
   140006226:	add    BYTE PTR [rax],al
   140006228:	rex.X mov DWORD PTR [rax],eax
   14000622b:	add    BYTE PTR [rax],al
   14000622d:	add    BYTE PTR [rax],al
   14000622f:	add    BYTE PTR [rsi],ch
   140006231:	mov    DWORD PTR [rax],eax
   140006233:	add    BYTE PTR [rax],al
   140006235:	add    BYTE PTR [rax],al
   140006237:	add    BYTE PTR [rsi],dl
   140006239:	mov    DWORD PTR [rax],eax
   14000623b:	add    BYTE PTR [rax],al
   14000623d:	add    BYTE PTR [rax],al
   14000623f:	add    BYTE PTR [rsi],al
   140006241:	mov    DWORD PTR [rax],eax
   140006243:	add    BYTE PTR [rax],al
   140006245:	add    BYTE PTR [rax],al
   140006247:	add    al,bh
   140006249:	mov    BYTE PTR [rax],al
   14000624b:	add    BYTE PTR [rax],al
   14000624d:	add    BYTE PTR [rax],al
   14000624f:	add    ah,ch
   140006251:	mov    BYTE PTR [rax],al
   140006253:	add    BYTE PTR [rax],al
   140006255:	add    BYTE PTR [rax],al
   140006257:	add    ah,bl
   140006259:	mov    BYTE PTR [rax],al
   14000625b:	add    BYTE PTR [rax],al
   14000625d:	add    BYTE PTR [rax],al
   14000625f:	add    ah,cl
   140006261:	mov    BYTE PTR [rax],al
   140006263:	add    BYTE PTR [rax],al
   140006265:	add    BYTE PTR [rax],al
   140006267:	add    al,al
   140006269:	mov    BYTE PTR [rax],al
   14000626b:	add    BYTE PTR [rax],al
   14000626d:	add    BYTE PTR [rax],al
   14000626f:	add    BYTE PTR [rdx+0x88],dh
   140006275:	add    BYTE PTR [rax],al
   140006277:	add    BYTE PTR [rsi+0x88],ah
   14000627d:	add    BYTE PTR [rax],al
   14000627f:	add    BYTE PTR [rdx+0x88],bl
   140006285:	add    BYTE PTR [rax],al
   140006287:	add    BYTE PTR [rdx+0x88],cl
   14000628d:	add    BYTE PTR [rax],al
   14000628f:	add    BYTE PTR [rsi-0x78],bh
   140006292:	add    BYTE PTR [rax],al
   140006294:	add    BYTE PTR [rax],al
   140006296:	add    BYTE PTR [rax],al
   140006298:	jbe    0x140006222
   14000629a:	add    BYTE PTR [rax],al
   14000629c:	add    BYTE PTR [rax],al
   14000629e:	add    BYTE PTR [rax],al
   1400062a0:	ins    BYTE PTR es:[rdi],dx
   1400062a1:	mov    BYTE PTR [rax],al
   1400062a3:	add    BYTE PTR [rax],al
   1400062a5:	add    BYTE PTR [rax],al
   1400062a7:	add    BYTE PTR [rsi-0x78],bl
   1400062aa:	add    BYTE PTR [rax],al
   1400062ac:	add    BYTE PTR [rax],al
   1400062ae:	add    BYTE PTR [rax],al
   1400062b0:	rex.WR mov BYTE PTR [rax],r8b
   1400062b3:	add    BYTE PTR [rax],al
   1400062b5:	add    BYTE PTR [rax],al
   1400062b7:	add    BYTE PTR [rax+rcx*4],bh
   1400062ba:	add    BYTE PTR [rax],al
   1400062bc:	add    BYTE PTR [rax],al
   1400062be:	add    BYTE PTR [rax],al
   1400062c0:	mov    BYTE PTR es:[rax],al
   1400062c3:	add    BYTE PTR [rax],al
   1400062c5:	add    BYTE PTR [rax],al
   1400062c7:	add    BYTE PTR [rax],bl
   1400062c9:	mov    BYTE PTR [rax],al
   1400062cb:	add    BYTE PTR [rax],al
   1400062cd:	add    BYTE PTR [rax],al
   1400062cf:	add    BYTE PTR [rax],ah
   1400062d1:	mov    es,WORD PTR [rax]
   1400062d3:	add    BYTE PTR [rax],al
   1400062d5:	add    BYTE PTR [rax],al
   1400062d7:	add    BYTE PTR [rsi],dl
   1400062d9:	mov    es,WORD PTR [rax]
   1400062db:	add    BYTE PTR [rax],al
   1400062dd:	add    BYTE PTR [rax],al
   1400062df:	add    BYTE PTR [rsi],al
   1400062e1:	mov    BYTE PTR [rax],al
   1400062e3:	add    BYTE PTR [rax],al
   1400062e5:	add    BYTE PTR [rax],al
   1400062e7:	add    BYTE PTR [rsi],cl
   1400062e9:	mov    es,WORD PTR [rax]
   1400062eb:	add    BYTE PTR [rax],al
   1400062ed:	add    BYTE PTR [rax],al
   1400062ef:	add    BYTE PTR [rax+0x8a],cl
	...
   1400062fd:	add    BYTE PTR [rax],al
   1400062ff:	add    BYTE PTR [rdi],al
   140006301:	add    BYTE PTR [rax],al
   140006303:	add    BYTE PTR [rax],al
   140006305:	add    BYTE PTR [rax],al
   140006307:	adc    BYTE PTR [rsi+0x0],0x0
   14000630e:	add    BYTE PTR [rax+0x2],al
   140006314:	add    BYTE PTR [rax],al
   140006316:	add    BYTE PTR [rax+0x9],al
   14000631c:	add    BYTE PTR [rax],al
   14000631e:	add    BYTE PTR [rax+0x6],al
   140006324:	add    BYTE PTR [rax],al
   140006326:	add    BYTE PTR [rax+0x0],al
   14000632c:	add    BYTE PTR [rax],al
   14000632e:	add    BYTE PTR [rax],al
   140006330:	int3   
   140006331:	xchg   DWORD PTR [rax],eax
   140006333:	add    BYTE PTR [rax],al
   140006335:	add    BYTE PTR [rax],al
   140006337:	add    dl,bl
   140006339:	xchg   DWORD PTR [rax],eax
   14000633b:	add    BYTE PTR [rax],al
   14000633d:	add    BYTE PTR [rax],al
   14000633f:	add    al,al
   140006341:	xchg   DWORD PTR [rax],eax
	...
   14000634f:	add    ah,dl
   140006351:	lea    eax,[rax]
   140006353:	add    BYTE PTR [rax],al
   140006355:	add    BYTE PTR [rax],al
   140006357:	add    ah,ah
   140006359:	lea    eax,[rax]
	...
   14000636f:	add    BYTE PTR [rsp+rcx*2],dl
   140006372:	add    BYTE PTR [rax+0x1],al
   140006375:	add    BYTE PTR [rax],al
   140006377:	add    al,dh
   140006379:	pop    rsi
   14000637a:	add    BYTE PTR [rax+0x1],al
   14000637d:	add    BYTE PTR [rax],al
   14000637f:	add    BYTE PTR [rax],al
   140006381:	pop    rdi
   140006382:	add    BYTE PTR [rax+0x1],al
	...
   140006395:	add    BYTE PTR [rax],al
   140006397:	add    BYTE PTR [rsi+rcx*2+0x0],bh
   14000639b:	rex add DWORD PTR [rax],eax
   14000639e:	add    BYTE PTR [rax],al
   1400063a0:	cld    
   1400063a1:	push   rax
   1400063a2:	add    BYTE PTR [rax+0x1],al
	...
   1400063b1:	add    BYTE PTR [rax],al
   1400063b3:	add    BYTE PTR [rcx-0x67],dl
   1400063b6:	push   0x53
   1400063b8:	add    BYTE PTR [rax],al
   1400063ba:	add    BYTE PTR [rax],al
   1400063bc:	add    al,BYTE PTR [rax]
   1400063be:	add    BYTE PTR [rax],al
   1400063c0:	(bad)  
   1400063c1:	add    BYTE PTR [rax],al
   1400063c3:	add    al,dh
   1400063c5:	jbe    0x1400063c7
   1400063c7:	add    al,dh
   1400063c9:	push   0x0
   1400063cb:	add    BYTE PTR [rax],al
   1400063cd:	add    BYTE PTR [rax],al
   1400063cf:	add    al,al
   1400063d1:	in     eax,0xb0
   1400063d3:	or     bl,cl
   1400063d5:	rex.WRXB iretq 
   1400063d7:	adc    DWORD PTR [rdx+0x1c4000a5],ebp
   1400063dd:	(bad)  
   1400063de:	test   DWORD PTR [rcx],eax
   1400063e0:	push   rbp
   1400063e1:	add    BYTE PTR [rbx+0x0],dl
   1400063e4:	add    BYTE PTR [r10+0x0],r10b
   1400063e8:	push   rax
   1400063e9:	add    BYTE PTR [rdx+0x0],dl
   1400063ec:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   1400063f0:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   1400063f5:	add    BYTE PTR [rax],al
   1400063f7:	add    BYTE PTR [rbp+0x0],dl
   1400063fa:	push   rbx
   1400063fb:	add    BYTE PTR [rbp+0x0],al
   1400063fe:	push   rdx
   1400063ff:	add    BYTE PTR [rdi+0x0],bl
   140006402:	rex.WX add BYTE PTR [rax+0x0],dl
   140006406:	rex.WB add BYTE PTR [r15+0x0],bl
   14000640a:	push   rax
   14000640b:	add    BYTE PTR [rdx+0x0],dl
   14000640e:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   140006412:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
	...
   14000641f:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c00d725
   140006425:	add    BYTE PTR [rbx+0x0],dl
   140006428:	jne    0x14000642a
   14000642a:	outs   dx,BYTE PTR ds:[rsi]
   14000642b:	add    BYTE PTR [rax+rax*1+0x4a],bl
   14000642f:	add    BYTE PTR [rcx+0x0],ah
   140006432:	jbe    0x140006434
   140006434:	(bad)  
   140006435:	add    BYTE PTR [rax+rax*1+0x44],bl
   140006439:	add    BYTE PTR [rbp+0x0],ah
   14000643c:	jo     0x14000643e
   14000643e:	ins    BYTE PTR es:[rdi],dx
   14000643f:	add    BYTE PTR [rdi+0x0],ch
   140006442:	jns    0x140006444
   140006444:	ins    DWORD PTR es:[rdi],dx
   140006445:	add    BYTE PTR [rbp+0x0],ah
   140006448:	outs   dx,BYTE PTR ds:[rsi]
   140006449:	add    BYTE PTR [rax+rax*1+0x5c],dh
   14000644d:	add    BYTE PTR [rax+rax*1+0x65],ah
   140006451:	add    BYTE PTR [rax+0x0],dh
   140006454:	ins    BYTE PTR es:[rdi],dx
   140006455:	add    BYTE PTR [rdi+0x0],ch
   140006458:	jns    0x14000645a
   14000645a:	ins    DWORD PTR es:[rdi],dx
   14000645b:	add    BYTE PTR [rbp+0x0],ah
   14000645e:	outs   dx,BYTE PTR ds:[rsi]
   14000645f:	add    BYTE PTR [rax+rax*1+0x2e],dh
   140006463:	add    BYTE PTR [rax+0x0],dh
   140006466:	jb     0x140006468
   140006468:	outs   dx,DWORD PTR ds:[rsi]
   140006469:	add    BYTE PTR [rax+0x0],dh
   14000646c:	add    BYTE PTR gs:[rdx+0x0],dh
   140006470:	je     0x140006472
   140006472:	imul   eax,DWORD PTR [rax],0x730065
	...
   140006480:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140006481:	movabs eax,ds:0x18bd4ff61780a520
   14000648a:	(bad)  
   14000648b:	jae    0x1400064d0
   14000648d:	(bad)
   140006490:	pop    rdi
   140006491:	add    BYTE PTR [rdx+0x0],cl
   140006494:	add    BYTE PTR [r14+0x0],dl
   140006498:	add    BYTE PTR [r15+0x0],bl
   14000649c:	push   rsi
   14000649d:	add    BYTE PTR [rbp+0x0],cl
   1400064a0:	pop    rdi
   1400064a1:	add    BYTE PTR [rdi+0x0],cl
   1400064a4:	push   rax
   1400064a5:	add    BYTE PTR [rax+rax*1+0x49],dl
   1400064a9:	add    BYTE PTR [rdi+0x0],cl
   1400064ac:	rex.WRX add BYTE PTR [rbx+0x0],r10b
   1400064b0:	add    BYTE PTR [rax],al
   1400064b2:	add    BYTE PTR [rax],al
   1400064b4:	or     al,BYTE PTR [rax]
   1400064b6:	add    BYTE PTR [rax],al
   1400064b8:	sub    eax,0x6a004400
   1400064bd:	add    BYTE PTR [rcx+0x0],ah
   1400064c0:	jbe    0x1400064c2
   1400064c2:	(bad)  
   1400064c3:	add    BYTE PTR [rax+0x0],dh
   1400064c6:	ins    BYTE PTR es:[rdi],dx
   1400064c7:	add    BYTE PTR [rbp+0x0],dh
   1400064ca:	add    BYTE PTR [ecx+0x0],ch
   1400064ce:	outs   dx,BYTE PTR ds:[rsi]
   1400064cf:	add    BYTE PTR [rsi],ch
   1400064d1:	add    BYTE PTR [rbp+0x0],dh
   1400064d4:	jae    0x1400064d6
   1400064d6:	add    BYTE PTR gs:[rdx+0x0],dh
   1400064da:	add    BYTE PTR cs:[rax+0x0],dh
   1400064de:	jb     0x1400064e0
   1400064e0:	outs   dx,DWORD PTR ds:[rsi]
   1400064e1:	add    BYTE PTR [rsi+0x0],ah
   1400064e4:	imul   eax,DWORD PTR [rax],0x65006c
   1400064ea:	cmp    eax,0x25002200
   1400064ef:	add    BYTE PTR [rbx+0x0],dh
   1400064f2:	and    al,BYTE PTR [rax]
   1400064f4:	add    BYTE PTR [rax],al
   1400064f6:	add    BYTE PTR [rax],al
   1400064f8:	and    eax,0x5c007300
   1400064fd:	add    BYTE PTR [rdx+0x0],ch
   140006500:	(bad)  
   140006501:	add    BYTE PTR [rsi+0x0],dh
   140006504:	(bad)  
   140006505:	add    BYTE PTR [rdi+0x0],dh
   140006508:	add    BYTE PTR cs:[rbp+0x0],ah
   14000650c:	js     0x14000650e
   14000650e:	add    BYTE PTR gs:[rax],al
   140006511:	add    BYTE PTR [rax],al
   140006513:	add    BYTE PTR [rax],al
   140006515:	add    BYTE PTR [rax],al
   140006517:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c00d81d
   14000651d:	add    BYTE PTR [rax+rax*1+0x65],ah
   140006521:	add    BYTE PTR [rax+0x0],dh
   140006524:	ins    BYTE PTR es:[rdi],dx
   140006525:	add    BYTE PTR [rdi+0x0],ch
   140006528:	jns    0x14000652a
   14000652a:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000652f:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006533:	add    BYTE PTR [rax],al
   140006535:	add    BYTE PTR [rax],al
   140006537:	add    BYTE PTR [rdi+0x65],al
   14000653a:	je     0x14000657f
   14000653c:	jne    0x1400065b0
   14000653e:	jb     0x1400065a5
   140006540:	outs   dx,BYTE PTR ds:[rsi]
   140006541:	je     0x14000658d
   140006543:	(bad)  
   140006544:	jbe    0x1400065a7
   140006546:	rex.W outs dx,DWORD PTR ds:[rsi]
   140006548:	ins    DWORD PTR es:[rdi],dx
   140006549:	gs rex.RX jb 0x1400065bc
   14000654d:	ins    DWORD PTR es:[rdi],dx
   14000654e:	push   rdx
   14000654f:	imul   esi,DWORD PTR gs:[ebx+0x74],0x7972
   140006558:	and    eax,0x5c007300
   14000655d:	add    BYTE PTR [rdx+0x0],ah
   140006560:	imul   eax,DWORD PTR [rax],0x5c006e
   140006566:	push   0x0
   140006568:	(bad)  
   140006569:	add    BYTE PTR [rsi+0x0],dh
   14000656c:	(bad)  
   14000656d:	add    BYTE PTR [rdi+0x0],dh
   140006570:	add    BYTE PTR cs:[rbp+0x0],ah
   140006574:	js     0x140006576
   140006576:	add    BYTE PTR gs:[rax],al
   140006579:	add    BYTE PTR [rax],al
   14000657b:	add    BYTE PTR [rax],al
   14000657d:	add    BYTE PTR [rax],al
   14000657f:	add    BYTE PTR [rdx],ah
   140006581:	add    BYTE PTR [rip+0x22007300],ah        # 0x16200d887
   140006587:	add    BYTE PTR [rax],ah
   140006589:	add    BYTE PTR [rip+0x62005800],ch        # 0x1a200bd8f
   14000658f:	add    BYTE PTR [rdi+0x0],ch
   140006592:	outs   dx,DWORD PTR ds:[rsi]
   140006593:	add    BYTE PTR [rax+rax*1+0x63],dh
   140006597:	add    BYTE PTR [rax+rax*1+0x61],ch
   14000659b:	add    BYTE PTR [rbx+0x0],dh
   14000659e:	jae    0x1400065a0
   1400065a0:	jo     0x1400065a2
   1400065a2:	(bad)  
   1400065a3:	add    BYTE PTR [rax+rax*1+0x68],dh
   1400065a7:	add    BYTE PTR [rdi],ch
   1400065a9:	add    BYTE PTR [rcx+0x0],ah
   1400065ac:	cmp    al,BYTE PTR [rax]
   1400065ae:	and    al,BYTE PTR [rax]
   1400065b0:	and    eax,0x5c007300
   1400065b5:	add    BYTE PTR [rsi],ch
   1400065b7:	add    BYTE PTR [rsi],ch
   1400065b9:	add    BYTE PTR [rax+rax*1+0x6c],bl
   1400065bd:	add    BYTE PTR [rcx+0x0],ch
   1400065c0:	(bad)  
   1400065c1:	add    BYTE PTR [rax+rax*1+0x64],bl
   1400065c5:	add    BYTE PTR [rbp+0x0],ah
   1400065c8:	jo     0x1400065ca
   1400065ca:	ins    BYTE PTR es:[rdi],dx
   1400065cb:	add    BYTE PTR [rdi+0x0],ch
   1400065ce:	jns    0x1400065d0
   1400065d0:	add    BYTE PTR cs:[rdx+0x0],ch
   1400065d4:	(bad)  
   1400065d5:	add    BYTE PTR [rdx+0x0],dh
   1400065d8:	and    al,BYTE PTR [rax]
   1400065da:	and    BYTE PTR [rax],al
   1400065dc:	and    eax,0x20007300
   1400065e1:	add    BYTE PTR [rip+0x75004400],ch        # 0x1b500a9e7
   1400065e7:	add    BYTE PTR [rbx+0x0],dh
   1400065ea:	add    BYTE PTR gs:[rdx+0x0],dh
   1400065ee:	add    BYTE PTR cs:[rax+0x0],ch
   1400065f2:	outs   dx,DWORD PTR ds:[rsi]
   1400065f3:	add    BYTE PTR [rbp+0x0],ch
   1400065f6:	add    BYTE PTR gs:[rip+0x25002200],bh        # 0x1650087fd
   1400065fd:	add    BYTE PTR [rbx+0x0],dh
   140006600:	and    al,BYTE PTR [rax]
   140006602:	and    BYTE PTR [rax],al
   140006604:	and    eax,0x20007300
   140006609:	add    BYTE PTR [rbx+0x0],ah
   14000660c:	outs   dx,DWORD PTR ds:[rsi]
   14000660d:	add    BYTE PTR [rbp+0x0],ch
   140006610:	add    BYTE PTR cs:[rbx+0x0],dh
   140006614:	jne    0x140006616
   140006616:	outs   dx,BYTE PTR ds:[rsi]
   140006617:	add    BYTE PTR [rsi],ch
   140006619:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000661d:	add    BYTE PTR [rax+0x0],dh
   140006620:	ins    BYTE PTR es:[rdi],dx
   140006621:	add    BYTE PTR [rdi+0x0],ch
   140006624:	jns    0x140006626
   140006626:	add    BYTE PTR cs:[rax+0x0],dh
   14000662a:	(bad)  
   14000662b:	add    BYTE PTR [rsi+0x0],ch
   14000662e:	add    BYTE PTR gs:[rax+rax*1+0x2e],ch
   140006633:	add    BYTE PTR [rbx+0x0],al
   140006636:	outs   dx,DWORD PTR ds:[rsi]
   140006637:	add    BYTE PTR [rsi+0x0],ch
   14000663a:	je     0x14000663c
   14000663c:	jb     0x14000663e
   14000663e:	outs   dx,DWORD PTR ds:[rsi]
   14000663f:	add    BYTE PTR [rax+rax*1+0x50],ch
   140006643:	add    BYTE PTR [rcx+0x0],ah
   140006646:	outs   dx,BYTE PTR ds:[rsi]
   140006647:	add    BYTE PTR [rbp+0x0],ah
   14000664a:	ins    BYTE PTR es:[rdi],dx
   14000664b:	add    BYTE PTR [rax],ah
   14000664d:	add    BYTE PTR [rip+0x7300],ah        # 0x14000d953
   140006653:	add    BYTE PTR [rax],al
   140006655:	add    BYTE PTR [rax],al
   140006657:	add    BYTE PTR [rdx],ah
   140006659:	add    eax,0x11993
   14000665e:	add    BYTE PTR [rax],al
   140006660:	rex js 0x140006663
	...
   14000666b:	add    BYTE PTR [rbx],al
   14000666d:	add    BYTE PTR [rax],al
   14000666f:	add    BYTE PTR [rax+0x78],dh
   140006672:	add    BYTE PTR [rax],al
   140006674:	(bad)  
   140006675:	add    BYTE PTR [rax],al
   140006677:	add    BYTE PTR [rax],al
   140006679:	add    BYTE PTR [rax],al
   14000667b:	add    BYTE PTR [rcx],al
   14000667d:	add    BYTE PTR [rax],al
   14000667f:	add    BYTE PTR [rdx],ah
   140006681:	add    eax,0x11993
   140006686:	add    BYTE PTR [rax],al
   140006688:	sar    BYTE PTR [rax+0x0],0x0
	...
   140006694:	add    eax,DWORD PTR [rax]
   140006696:	add    BYTE PTR [rax],al
   140006698:	enter  0x78,0x0
   14000669c:	and    BYTE PTR [rax],al
   14000669e:	add    BYTE PTR [rax],al
   1400066a0:	add    BYTE PTR [rax],al
   1400066a2:	add    BYTE PTR [rax],al
   1400066a4:	add    DWORD PTR [rax],eax
	...
   1400066ae:	add    BYTE PTR [rax],al
   1400066b0:	and    al,BYTE PTR [rip+0x11993]        # 0x140018049
   1400066b6:	add    BYTE PTR [rax],al
   1400066b8:	nop
   1400066b9:	jle    0x1400066bb
	...
   1400066c3:	add    BYTE PTR [rbx],al
   1400066c5:	add    BYTE PTR [rax],al
   1400066c7:	add    al,bh
   1400066c9:	js     0x1400066cb
   1400066cb:	add    BYTE PTR [rax],ah
   1400066cd:	add    BYTE PTR [rax],al
   1400066cf:	add    BYTE PTR [rax],al
   1400066d1:	add    BYTE PTR [rax],al
   1400066d3:	add    BYTE PTR [rcx],al
	...
   1400066dd:	add    BYTE PTR [rax],al
   1400066df:	add    BYTE PTR [rbx+0x0],dl
   1400066e2:	add    BYTE PTR [rax],al
   1400066e4:	rex.WRB add BYTE PTR [r8],r8b
   1400066e7:	add    al,ah
   1400066e9:	data16 add BYTE PTR [rax+0x1],al
   1400066ed:	add    BYTE PTR [rax],al
   1400066ef:	add    ah,ah
   1400066f1:	data16 add BYTE PTR [rax+0x1],al
   1400066f5:	add    BYTE PTR [rax],al
   1400066f7:	add    BYTE PTR [rax+rax*1+0x0],al
   1400066fb:	add    BYTE PTR [rdx+0x0],al
   1400066fe:	add    BYTE PTR [rax],al
   140006700:	clc    
   140006701:	data16 add BYTE PTR [rax+0x1],al
   140006705:	add    BYTE PTR [rax],al
   140006707:	add    ah,bh
   140006709:	data16 add BYTE PTR [rax+0x1],al
   14000670d:	add    BYTE PTR [rax],al
   14000670f:	add    BYTE PTR [rsi+0x0],dl
   140006712:	(bad)  
   140006713:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006717:	add    BYTE PTR [rax],dl
   140006719:	add    BYTE PTR [eax+0x1],al
   14000671d:	add    BYTE PTR [rax],al
   14000671f:	add    BYTE PTR [rsi+0x0],al
   140006722:	outs   dx,DWORD PTR ds:[rsi]
   140006723:	add    BYTE PTR [rdx+0x0],dh
   140006726:	movsxd eax,DWORD PTR [rax]
   140006728:	add    BYTE PTR gs:[rdx+0x0],dl
   14000672c:	add    BYTE PTR gs:[rbp+0x0],ch
   140006730:	outs   dx,DWORD PTR ds:[rsi]
   140006731:	add    BYTE PTR [rsi+0x0],dh
   140006734:	add    BYTE PTR gs:[rax],al
   140006737:	add    BYTE PTR [rax],ah
   140006739:	add    BYTE PTR [eax+0x1],al
   14000673d:	add    BYTE PTR [rax],al
   14000673f:	add    BYTE PTR [rsi+0x0],cl
   140006742:	outs   dx,DWORD PTR ds:[rsi]
   140006743:	add    BYTE PTR [rdx+0x0],dl
   140006746:	add    BYTE PTR gs:[rbp+0x0],ch
   14000674a:	outs   dx,DWORD PTR ds:[rsi]
   14000674b:	add    BYTE PTR [rsi+0x0],dh
   14000674e:	add    BYTE PTR gs:[rax],al
   140006751:	add    BYTE PTR [rax],al
   140006753:	add    BYTE PTR [rax],al
   140006755:	add    BYTE PTR [rax],al
   140006757:	add    BYTE PTR [rax+0x67],al
   14000675a:	add    BYTE PTR [rax+0x1],al
   14000675d:	add    BYTE PTR [rax],al
   14000675f:	add    BYTE PTR [rax+rax*1+0x65],al
   140006763:	add    BYTE PTR [rax+rax*1+0x65],ch
   140006767:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000676b:	add    BYTE PTR [rax],al
   14000676d:	add    BYTE PTR [rax],al
   14000676f:	add    BYTE PTR [rax+0x67],ah
   140006772:	add    BYTE PTR [rax+0x1],al
   140006775:	add    BYTE PTR [rax],al
   140006777:	add    BYTE PTR [rcx+0x0],al
   14000677a:	jo     0x14000677c
   14000677c:	jo     0x14000677e
   14000677e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140006783:	add    BYTE PTR [rax],al
   140006785:	add    BYTE PTR [rax],al
   140006787:	add    BYTE PTR [rbx+0x0],al
   14000678a:	rex.WR add BYTE PTR [rbx+0x0],r10b
   14000678e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140006793:	add    BYTE PTR [rax],dh
   140006795:	add    BYTE PTR [rax],al
   140006797:	add    BYTE PTR [rbx+0x0],al
   14000679a:	outs   dx,DWORD PTR ds:[rsi]
   14000679b:	add    BYTE PTR [rbp+0x0],ch
   14000679e:	jo     0x1400067a0
   1400067a0:	outs   dx,DWORD PTR ds:[rsi]
   1400067a1:	add    BYTE PTR [rsi+0x0],ch
   1400067a4:	add    BYTE PTR gs:[rsi+0x0],ch
   1400067a8:	je     0x1400067aa
   1400067aa:	and    BYTE PTR [rax],al
   1400067ac:	rex.XB add BYTE PTR [r9+0x0],spl
   1400067b0:	je     0x1400067b2
   1400067b2:	add    BYTE PTR gs:[rdi+0x0],ah
   1400067b6:	outs   dx,DWORD PTR ds:[rsi]
   1400067b7:	add    BYTE PTR [rdx+0x0],dh
   1400067ba:	imul   eax,DWORD PTR [rax],0x730065
   1400067c0:	add    BYTE PTR [rax],al
   1400067c2:	add    BYTE PTR [rax],al
   1400067c4:	xor    BYTE PTR [rax],al
   1400067c6:	add    BYTE PTR [rax],al
   1400067c8:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400067cc:	ins    BYTE PTR es:[rdi],dx
   1400067cd:	add    BYTE PTR [rbp+0x0],ah
   1400067d0:	push   rsp
   1400067d1:	add    BYTE PTR [rcx+0x0],bh
   1400067d4:	jo     0x1400067d6
   1400067d6:	add    BYTE PTR gs:[rax],al
   1400067d9:	add    BYTE PTR [rax],al
   1400067db:	add    BYTE PTR [rax],dh
   1400067dd:	add    BYTE PTR [rax],al
   1400067df:	add    BYTE PTR [rcx+0x0],cl
   1400067e2:	outs   dx,BYTE PTR ds:[rsi]
   1400067e3:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400067e7:	add    BYTE PTR [rdx+0x0],dh
   1400067ea:	data16 add BYTE PTR [rcx+0x0],ah
   1400067ee:	movsxd eax,DWORD PTR [rax]
   1400067f0:	add    BYTE PTR gs:[rax],al
   1400067f3:	add    BYTE PTR [rax],dh
   1400067f5:	add    BYTE PTR [rax],al
   1400067f7:	add    BYTE PTR [rax+0x0],cl
   1400067fa:	(bad)  
   1400067fb:	add    BYTE PTR [rdx+0x0],dh
   1400067fe:	add    BYTE PTR fs:[rdi+0x0],dh
   140006802:	(bad)  
   140006803:	add    BYTE PTR [rdx+0x0],dh
   140006806:	add    BYTE PTR gs:[rax],al
   140006809:	add    BYTE PTR [rax],al
   14000680b:	add    BYTE PTR [rax+rax*1+0x0],bl
   14000680f:	add    BYTE PTR [rbp+0x0],cl
   140006812:	imul   eax,DWORD PTR [rax],0x65006d
	...
   140006820:	push   rbx
   140006821:	add    BYTE PTR [rcx+0x0],al
   140006824:	rex.WRB add BYTE PTR [r8],r8b
   140006827:	add    BYTE PTR [rbx+0x0],dl
   14000682a:	add    BYTE PTR [r11+0x0],r8b
   14000682e:	push   rbp
   14000682f:	add    BYTE PTR [rdx+0x0],dl
   140006832:	rex.WB add BYTE PTR [r8+rax*1+0x59],dl
	...
   14000683f:	add    BYTE PTR [rbx+0x0],dl
   140006842:	pop    rcx
   140006843:	add    BYTE PTR [rbx+0x0],dl
   140006846:	push   rsp
   140006847:	add    BYTE PTR [rbp+0x0],al
   14000684a:	rex.WRB add BYTE PTR [r8],r8b
   14000684d:	add    BYTE PTR [rax],al
   14000684f:	add    BYTE PTR [rbx+0x0],dl
   140006852:	outs   dx,DWORD PTR ds:[rsi]
   140006853:	add    BYTE PTR [rsi+0x0],ah
   140006856:	je     0x140006858
   140006858:	ja     0x14000685a
   14000685a:	(bad)  
   14000685b:	add    BYTE PTR [rdx+0x0],dh
   14000685e:	add    BYTE PTR gs:[rax],al
   140006861:	add    BYTE PTR [rax],al
   140006863:	add    BYTE PTR [rax],al
   140006865:	add    BYTE PTR [rax],al
   140006867:	add    BYTE PTR [rax+rax*1+0x79],dl
   14000686b:	add    BYTE PTR [rax+0x0],dh
   14000686e:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
   140006873:	add    BYTE PTR [rdx+0x0],ah
	...
   14000687e:	add    BYTE PTR [rax],al
   140006880:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140006884:	(bad)  
   140006885:	add    BYTE PTR [rax+rax*1+0x20],ah
   140006889:	add    BYTE PTR [rsi+0x0],ah
   14000688c:	(bad)  
   14000688d:	add    BYTE PTR [rcx+0x0],ch
   140006890:	ins    BYTE PTR es:[rdi],dx
   140006891:	add    BYTE PTR [rbp+0x0],ah
   140006894:	add    BYTE PTR fs:[rax],ah
   140006897:	add    BYTE PTR [rcx+0x0],ch
   14000689a:	outs   dx,BYTE PTR ds:[rsi]
   14000689b:	add    BYTE PTR [rax],ah
   14000689d:	add    BYTE PTR [rip+0x20007300],ah        # 0x16000dba3
   1400068a3:	add    BYTE PTR [rcx+0x0],ah
   1400068a6:	je     0x1400068a8
   1400068a8:	and    BYTE PTR [rax],al
   1400068aa:	data16 add BYTE PTR [rbp+0x0],dh
   1400068ae:	outs   dx,BYTE PTR ds:[rsi]
   1400068af:	add    BYTE PTR [rbx+0x0],ah
   1400068b2:	je     0x1400068b4
   1400068b4:	imul   eax,DWORD PTR [rax],0x6e006f
   1400068ba:	and    BYTE PTR [rax],al
   1400068bc:	and    eax,0x7300
	...
   1400068cd:	add    BYTE PTR [rax],al
   1400068cf:	add    BYTE PTR [rax+rax*1+0x6f],cl
   1400068d3:	add    BYTE PTR [rcx+0x0],ah
   1400068d6:	add    BYTE PTR fs:[rax],ah
   1400068d9:	add    BYTE PTR [rsi+0x0],ah
   1400068dc:	(bad)  
   1400068dd:	add    BYTE PTR [rcx+0x0],ch
   1400068e0:	ins    BYTE PTR es:[rdi],dx
   1400068e1:	add    BYTE PTR [rbp+0x0],ah
   1400068e4:	add    BYTE PTR fs:[rax],ah
   1400068e7:	add    BYTE PTR [rcx+0x0],ch
   1400068ea:	outs   dx,BYTE PTR ds:[rsi]
   1400068eb:	add    BYTE PTR [rax],ah
   1400068ed:	add    BYTE PTR [rip+0x20007300],ah        # 0x16000dbf3
   1400068f3:	add    BYTE PTR [rcx+0x0],ah
   1400068f6:	je     0x1400068f8
   1400068f8:	and    BYTE PTR [rax],al
   1400068fa:	data16 add BYTE PTR [rbp+0x0],dh
   1400068fe:	outs   dx,BYTE PTR ds:[rsi]
   1400068ff:	add    BYTE PTR [rbx+0x0],ah
   140006902:	je     0x140006904
   140006904:	imul   eax,DWORD PTR [rax],0x6e006f
   14000690a:	and    BYTE PTR [rax],al
   14000690c:	outs   dx,DWORD PTR ds:[rsi]
   14000690d:	add    BYTE PTR [rdx+0x0],dh
   140006910:	add    BYTE PTR fs:[rbp+0x0],ah
   140006914:	jb     0x140006916
   140006916:	cmp    al,BYTE PTR [rax]
   140006918:	and    eax,0x6400
   14000691d:	add    BYTE PTR [rax],al
   14000691f:	add    BYTE PTR [rcx],dh
   140006921:	add    BYTE PTR [rcx],dh
   140006923:	add    BYTE PTR [rsi],ch
   140006925:	add    BYTE PTR [rax],dh
   140006927:	add    BYTE PTR [rsi],ch
   140006929:	add    BYTE PTR [rax],dh
   14000692b:	add    BYTE PTR [rax],al
   14000692d:	add    BYTE PTR [rax],al
   14000692f:	add    BYTE PTR [rcx],dh
   140006931:	add    BYTE PTR [rax],dh
   140006933:	add    BYTE PTR [rsi],ch
   140006935:	add    BYTE PTR [rsi],dh
   140006937:	add    BYTE PTR [rax],dh
   140006939:	add    BYTE PTR [rsi],ch
   14000693b:	add    BYTE PTR [rdx],dh
   14000693d:	add    BYTE PTR [rax],al
   14000693f:	add    BYTE PTR [rcx+0x73],cl
   140006942:	push   rdi
   140006943:	outs   dx,DWORD PTR ds:[rsi]
   140006944:	ja     0x14000697c
   140006946:	xor    al,0x50
   140006948:	jb     0x1400069b9
   14000694a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000694d:	jae    0x14000694f
   14000694f:	add    BYTE PTR [rbx+0x0],ch
   140006952:	add    BYTE PTR gs:[rdx+0x0],dh
   140006956:	outs   dx,BYTE PTR ds:[rsi]
   140006957:	add    BYTE PTR [rbp+0x0],ah
   14000695a:	ins    BYTE PTR es:[rdi],dx
   14000695b:	add    BYTE PTR [rbx],dh
   14000695d:	add    BYTE PTR [rdx],dh
	...
   140006967:	add    BYTE PTR [rax+rax*1+0x73],bl
   14000696b:	add    BYTE PTR [rcx+0x0],bh
   14000696e:	jae    0x140006970
   140006970:	je     0x140006972
   140006972:	add    BYTE PTR gs:[rbp+0x0],ch
   140006976:	xor    eax,DWORD PTR [rax]
   140006978:	xor    al,BYTE PTR [rax]
   14000697a:	pop    rsp
   14000697b:	add    BYTE PTR [rdx+0x0],ch
   14000697e:	(bad)  
   14000697f:	add    BYTE PTR [rsi+0x0],dh
   140006982:	(bad)  
   140006983:	add    BYTE PTR [rdi+0x0],dh
   140006986:	jae    0x140006988
   140006988:	add    BYTE PTR cs:[rbp+0x0],ah
   14000698c:	js     0x14000698e
   14000698e:	add    BYTE PTR gs:[rax],al
   140006991:	add    BYTE PTR [rax],al
   140006993:	add    BYTE PTR [rax],al
   140006995:	add    BYTE PTR [rax],al
   140006997:	add    BYTE PTR [rdi+0x6f],dl
   14000699a:	ja     0x1400069d2
   14000699c:	xor    al,0x44
   14000699e:	imul   esi,DWORD PTR [rbx+0x61],0x57656c62
   1400069a5:	outs   dx,DWORD PTR ds:[rsi]
   1400069a6:	ja     0x1400069de
   1400069a8:	xor    al,0x46
   1400069aa:	jae    0x1400069fe
   1400069ac:	gs imul esi,DWORD PTR fs:[rdx+0x65],0x6f697463
   1400069b5:	outs   dx,BYTE PTR ds:[rsi]
   1400069b6:	add    BYTE PTR [rax],al
   1400069b8:	imul   eax,DWORD PTR [rax],0x65
   1400069bb:	add    BYTE PTR [rdx+0x0],dh
   1400069be:	outs   dx,BYTE PTR ds:[rsi]
   1400069bf:	add    BYTE PTR [rbp+0x0],ah
   1400069c2:	ins    BYTE PTR es:[rdi],dx
   1400069c3:	add    BYTE PTR [rbx],dh
   1400069c5:	add    BYTE PTR [rdx],dh
	...
   1400069cf:	add    BYTE PTR [rdi+0x6f],dl
   1400069d2:	ja     0x140006a0a
   1400069d4:	xor    al,0x52
   1400069d6:	gs jbe 0x140006a3e
   1400069d9:	jb     0x140006a4f
   1400069db:	push   rdi
   1400069dc:	outs   dx,DWORD PTR ds:[rsi]
   1400069dd:	ja     0x140006a15
   1400069df:	xor    al,0x46
   1400069e1:	jae    0x140006a35
   1400069e3:	gs imul esi,DWORD PTR fs:[rdx+0x65],0x6f697463
   1400069ec:	outs   dx,BYTE PTR ds:[rsi]
   1400069ed:	add    BYTE PTR [rax],al
   1400069ef:	add    BYTE PTR [rbx+0x0],ch
   1400069f2:	add    BYTE PTR gs:[rdx+0x0],dh
   1400069f6:	outs   dx,BYTE PTR ds:[rsi]
   1400069f7:	add    BYTE PTR [rbp+0x0],ah
   1400069fa:	ins    BYTE PTR es:[rdi],dx
   1400069fb:	add    BYTE PTR [rbx],dh
   1400069fd:	add    BYTE PTR [rdx],dh
	...
   140006a07:	add    BYTE PTR [rax+rax*1+0x73],bl
   140006a0b:	add    BYTE PTR [rcx+0x0],bh
   140006a0e:	jae    0x140006a10
   140006a10:	push   rdi
   140006a11:	add    BYTE PTR [rdi+0x0],ch
   140006a14:	ja     0x140006a16
   140006a16:	add    BYTE PTR ss:[rax+rax*1],dh
   140006a1a:	pop    rsp
   140006a1b:	add    BYTE PTR [rdx+0x0],ch
   140006a1e:	(bad)  
   140006a1f:	add    BYTE PTR [rsi+0x0],dh
   140006a22:	(bad)  
   140006a23:	add    BYTE PTR [rdi+0x0],dh
   140006a26:	jae    0x140006a28
   140006a28:	add    BYTE PTR cs:[rbp+0x0],ah
   140006a2c:	js     0x140006a2e
   140006a2e:	add    BYTE PTR gs:[rax],al
	...
   140006a3d:	add    BYTE PTR [rax],al
   140006a3f:	add    BYTE PTR [rbp+0x0],al
   140006a42:	jb     0x140006a44
   140006a44:	jb     0x140006a46
   140006a46:	outs   dx,DWORD PTR ds:[rsi]
   140006a47:	add    BYTE PTR [rdx+0x0],dh
   140006a4a:	cmp    al,BYTE PTR [rax]
   140006a4c:	and    eax,0x38003000
   140006a51:	add    BYTE PTR [rax+0x0],bh
   140006a54:	and    BYTE PTR [rax],al
   140006a56:	imul   eax,DWORD PTR [rax],0x20006e
   140006a5c:	push   rbx
   140006a5d:	add    BYTE PTR [rax+0x0],cl
   140006a60:	rex.RXB add BYTE PTR [r13+0x0],r12b
   140006a64:	je     0x140006a66
   140006a66:	rex.RX add BYTE PTR [rdi+0x0],r13b
   140006a6a:	ins    BYTE PTR es:[rdi],dx
   140006a6b:	add    BYTE PTR [rax+rax*1+0x65],ah
   140006a6f:	add    BYTE PTR [rdx+0x0],dh
   140006a72:	push   rax
   140006a73:	add    BYTE PTR [rcx+0x0],ah
   140006a76:	je     0x140006a78
   140006a78:	push   0x78004500
   140006a7d:	add    BYTE PTR [rax],ch
   140006a7f:	add    BYTE PTR [rsi+0x0],al
   140006a82:	rex.WRXB add BYTE PTR [r8+r8*1+0x44],r9b
   140006a87:	add    BYTE PTR [rbp+0x0],al
   140006a8a:	push   rdx
   140006a8b:	add    BYTE PTR [rcx+0x0],cl
   140006a8e:	add    BYTE PTR [rdi+0x0],r11b
   140006a92:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140006a96:	movsxd eax,DWORD PTR [rax]
   140006a98:	(bad)  
   140006a99:	add    BYTE PTR [rax+rax*1+0x41],ch
   140006a9d:	add    BYTE PTR [rax+0x0],dh
   140006aa0:	jo     0x140006aa2
   140006aa2:	add    BYTE PTR [rcx+0x0],r12b
   140006aa6:	je     0x140006aa8
   140006aa8:	(bad)  
   140006aa9:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140006aad:	add    BYTE PTR [rdi+0x0],dh
   140006ab0:	sub    al,0x0
   140006ab2:	and    BYTE PTR [rax],al
   140006ab4:	xor    BYTE PTR [rax],al
   140006ab6:	sub    al,0x0
   140006ab8:	and    BYTE PTR [rax],al
   140006aba:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   140006abe:	rex.WR add BYTE PTR [rax+rax*1+0x2c],r9b
   140006ac3:	add    BYTE PTR [rax],ah
   140006ac5:	add    BYTE PTR [rax+0x0],dh
   140006ac8:	push   rax
   140006ac9:	add    BYTE PTR [rcx+0x0],ah
   140006acc:	je     0x140006ace
   140006ace:	push   0x20002c00
   140006ad3:	add    BYTE PTR [rbp+0x0],cl
   140006ad6:	add    BYTE PTR [r8+0x0],bl
   140006ada:	pop    rdi
   140006adb:	add    BYTE PTR [rax+0x0],dl
   140006ade:	add    BYTE PTR [r8+rax*1+0x48],dl
   140006ae3:	add    BYTE PTR [rcx],ch
   140006ae5:	add    BYTE PTR [rax],al
   140006ae7:	add    BYTE PTR [rbx+0x0],al
   140006aea:	rex.WRXB add BYTE PTR [r13+0x0],r9b
   140006aee:	and    BYTE PTR [rax],al
   140006af0:	add    BYTE PTR [r10+0x0],r14b
   140006af4:	jb     0x140006af6
   140006af6:	outs   dx,DWORD PTR ds:[rsi]
   140006af7:	add    BYTE PTR [rdx+0x0],dh
   140006afa:	cmp    al,BYTE PTR [rax]
   140006afc:	and    eax,0x38003000
   140006b01:	add    BYTE PTR [rax+0x0],bh
   140006b04:	and    BYTE PTR [rax],al
   140006b06:	and    eax,0x7300
   140006b0b:	add    BYTE PTR [rax],al
   140006b0d:	add    BYTE PTR [rax],al
   140006b0f:	add    BYTE PTR [rbp+0x0],al
   140006b12:	jb     0x140006b14
   140006b14:	jb     0x140006b16
   140006b16:	outs   dx,DWORD PTR ds:[rsi]
   140006b17:	add    BYTE PTR [rdx+0x0],dh
   140006b1a:	cmp    al,BYTE PTR [rax]
   140006b1c:	and    eax,0x38003000
   140006b21:	add    BYTE PTR [rax+0x0],bh
   140006b24:	and    BYTE PTR [rax],al
   140006b26:	imul   eax,DWORD PTR [rax],0x20006e
   140006b2c:	push   rbx
   140006b2d:	add    BYTE PTR [rax+0x0],cl
   140006b30:	rex.RXB add BYTE PTR [r13+0x0],r12b
   140006b34:	je     0x140006b36
   140006b36:	rex.RX add BYTE PTR [rdi+0x0],r13b
   140006b3a:	ins    BYTE PTR es:[rdi],dx
   140006b3b:	add    BYTE PTR [rax+rax*1+0x65],ah
   140006b3f:	add    BYTE PTR [rdx+0x0],dh
   140006b42:	push   rax
   140006b43:	add    BYTE PTR [rcx+0x0],ah
   140006b46:	je     0x140006b48
   140006b48:	push   0x28005700
   140006b4d:	add    BYTE PTR [rsi+0x0],cl
   140006b50:	push   rbp
   140006b51:	add    BYTE PTR [rax+rax*1+0x4c],cl
   140006b55:	add    BYTE PTR [rax+rax*1],ch
   140006b58:	and    BYTE PTR [rax],al
   140006b5a:	rex.XB add BYTE PTR [r11+0x0],dl
   140006b5e:	rex.WB add BYTE PTR [r8+rax*1+0x4c],al
   140006b63:	add    BYTE PTR [rdi+0x0],bl
   140006b66:	add    BYTE PTR [r8+0x0],dl
   140006b6a:	push   rax
   140006b6b:	add    BYTE PTR [rax+rax*1+0x41],al
   140006b6f:	add    BYTE PTR [rax+rax*1+0x41],dl
   140006b73:	add    BYTE PTR [rax+rax*1],ch
   140006b76:	and    BYTE PTR [rax],al
   140006b78:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   140006b7c:	rex.WR add BYTE PTR [rax+rax*1+0x2c],r9b
   140006b81:	add    BYTE PTR [rax],ah
   140006b83:	add    BYTE PTR [rax],dh
   140006b85:	add    BYTE PTR [rax+rax*1],ch
   140006b88:	and    BYTE PTR [rax],al
   140006b8a:	jo     0x140006b8c
   140006b8c:	push   rax
   140006b8d:	add    BYTE PTR [rcx+0x0],ah
   140006b90:	je     0x140006b92
   140006b92:	push   0x2900
   140006b97:	add    BYTE PTR [rbx+0x0],al
   140006b9a:	rex.WRXB add BYTE PTR [r13+0x0],r9b
   140006b9e:	and    BYTE PTR [rax],al
   140006ba0:	add    BYTE PTR [r10+0x0],r14b
   140006ba4:	jb     0x140006ba6
   140006ba6:	outs   dx,DWORD PTR ds:[rsi]
   140006ba7:	add    BYTE PTR [rdx+0x0],dh
   140006baa:	cmp    al,BYTE PTR [rax]
   140006bac:	and    eax,0x38003000
   140006bb1:	add    BYTE PTR [rax+0x0],bh
   140006bb4:	and    BYTE PTR [rax],al
   140006bb6:	and    eax,0x7300
   140006bbb:	add    BYTE PTR [rax],al
   140006bbd:	add    BYTE PTR [rax],al
   140006bbf:	add    BYTE PTR [rbp+0x0],al
   140006bc2:	jb     0x140006bc4
   140006bc4:	jb     0x140006bc6
   140006bc6:	outs   dx,DWORD PTR ds:[rsi]
   140006bc7:	add    BYTE PTR [rdx+0x0],dh
   140006bca:	cmp    al,BYTE PTR [rax]
   140006bcc:	and    eax,0x38003000
   140006bd1:	add    BYTE PTR [rax+0x0],bh
   140006bd4:	and    BYTE PTR [rax],al
   140006bd6:	imul   eax,DWORD PTR [rax],0x20006e
   140006bdc:	push   rbx
   140006bdd:	add    BYTE PTR [rax+0x0],cl
   140006be0:	rex.RXB add BYTE PTR [r13+0x0],r12b
   140006be4:	je     0x140006be6
   140006be6:	push   rbx
   140006be7:	add    BYTE PTR [rax+0x0],dh
   140006bea:	add    BYTE PTR gs:[rbx+0x0],ah
   140006bee:	imul   eax,DWORD PTR [rax],0x6c0061
   140006bf4:	rex.RX add BYTE PTR [rdi+0x0],r13b
   140006bf8:	ins    BYTE PTR es:[rdi],dx
   140006bf9:	add    BYTE PTR [rax+rax*1+0x65],ah
   140006bfd:	add    BYTE PTR [rdx+0x0],dh
   140006c00:	push   rax
   140006c01:	add    BYTE PTR [rcx+0x0],ah
   140006c04:	je     0x140006c06
   140006c06:	push   0x28005700
   140006c0b:	add    BYTE PTR [rsi+0x0],cl
   140006c0e:	push   rbp
   140006c0f:	add    BYTE PTR [rax+rax*1+0x4c],cl
   140006c13:	add    BYTE PTR [rax+rax*1],ch
   140006c16:	and    BYTE PTR [rax],al
   140006c18:	jo     0x140006c1a
   140006c1a:	push   rax
   140006c1b:	add    BYTE PTR [rcx+0x0],ah
   140006c1e:	je     0x140006c20
   140006c20:	push   0x20002c00
   140006c25:	add    BYTE PTR [rbx+0x0],al
   140006c28:	push   rbx
   140006c29:	add    BYTE PTR [rcx+0x0],cl
   140006c2c:	add    BYTE PTR [rax+rax*1+0x5f],r9b
   140006c31:	add    BYTE PTR [rcx+0x0],al
   140006c34:	push   rax
   140006c35:	add    BYTE PTR [rax+0x0],dl
   140006c38:	add    BYTE PTR [rcx+0x0],r8b
   140006c3c:	push   rsp
   140006c3d:	add    BYTE PTR [rcx+0x0],al
   140006c40:	sub    al,0x0
   140006c42:	and    BYTE PTR [rax],al
   140006c44:	push   rsp
   140006c45:	add    BYTE PTR [rdx+0x0],dl
   140006c48:	push   rbp
   140006c49:	add    BYTE PTR [rbp+0x0],al
   140006c4c:	sub    DWORD PTR [rax],eax
   140006c4e:	add    BYTE PTR [rax],al
   140006c50:	rex.XB add BYTE PTR [r15+0x0],cl
   140006c54:	rex.WRB add BYTE PTR [r8],r12b
   140006c57:	add    BYTE PTR [rbp+0x0],al
   140006c5a:	jb     0x140006c5c
   140006c5c:	jb     0x140006c5e
   140006c5e:	outs   dx,DWORD PTR ds:[rsi]
   140006c5f:	add    BYTE PTR [rdx+0x0],dh
   140006c62:	cmp    al,BYTE PTR [rax]
   140006c64:	and    eax,0x38003000
   140006c69:	add    BYTE PTR [rax+0x0],bh
   140006c6c:	and    BYTE PTR [rax],al
   140006c6e:	and    eax,0x7300
	...
   140006c7f:	add    BYTE PTR [rbp+0x0],al
   140006c82:	jb     0x140006c84
   140006c84:	jb     0x140006c86
   140006c86:	outs   dx,DWORD PTR ds:[rsi]
   140006c87:	add    BYTE PTR [rdx+0x0],dh
   140006c8a:	cmp    al,BYTE PTR [rax]
   140006c8c:	and    eax,0x38003000
   140006c91:	add    BYTE PTR [rax+0x0],bh
   140006c94:	and    BYTE PTR [rax],al
   140006c96:	imul   eax,DWORD PTR [rax],0x20006e
   140006c9c:	rex.RXB add BYTE PTR [r13+0x0],r12b
   140006ca0:	je     0x140006ca2
   140006ca2:	push   rbp
   140006ca3:	add    BYTE PTR [rbx+0x0],dh
   140006ca6:	add    BYTE PTR gs:[rdx+0x0],dh
   140006caa:	push   rax
   140006cab:	add    BYTE PTR [rcx+0x0],ah
   140006cae:	je     0x140006cb0
   140006cb0:	push   0x28005700
   140006cb5:	add    BYTE PTR [rbx+0x0],dh
   140006cb8:	jp     0x140006cba
   140006cba:	push   rax
   140006cbb:	add    BYTE PTR [rcx+0x0],ah
   140006cbe:	je     0x140006cc0
   140006cc0:	push   0x2900
   140006cc5:	add    BYTE PTR [rax],al
   140006cc7:	add    BYTE PTR [rbx+0x0],al
   140006cca:	rex.WRXB add BYTE PTR [r13+0x0],r9b
   140006cce:	and    BYTE PTR [rax],al
   140006cd0:	add    BYTE PTR [r10+0x0],r14b
   140006cd4:	jb     0x140006cd6
   140006cd6:	outs   dx,DWORD PTR ds:[rsi]
   140006cd7:	add    BYTE PTR [rdx+0x0],dh
   140006cda:	cmp    al,BYTE PTR [rax]
   140006cdc:	and    eax,0x38003000
   140006ce1:	add    BYTE PTR [rax+0x0],bh
   140006ce4:	and    BYTE PTR [rax],al
   140006ce6:	and    eax,0x7300
   140006ceb:	add    BYTE PTR [rax],al
   140006ced:	add    BYTE PTR [rax],al
   140006cef:	add    BYTE PTR [rbp+0x0],al
   140006cf2:	jb     0x140006cf4
   140006cf4:	jb     0x140006cf6
   140006cf6:	outs   dx,DWORD PTR ds:[rsi]
   140006cf7:	add    BYTE PTR [rdx+0x0],dh
   140006cfa:	cmp    al,BYTE PTR [rax]
   140006cfc:	and    eax,0x38003000
   140006d01:	add    BYTE PTR [rax+0x0],bh
   140006d04:	and    BYTE PTR [rax],al
   140006d06:	imul   eax,DWORD PTR [rax],0x20006e
   140006d0c:	push   rbx
   140006d0d:	add    BYTE PTR [rax+0x0],cl
   140006d10:	rex.RXB add BYTE PTR [r13+0x0],r12b
   140006d14:	je     0x140006d16
   140006d16:	rex.RX add BYTE PTR [rdi+0x0],r13b
   140006d1a:	ins    BYTE PTR es:[rdi],dx
   140006d1b:	add    BYTE PTR [rax+rax*1+0x65],ah
   140006d1f:	add    BYTE PTR [rdx+0x0],dh
   140006d22:	push   rax
   140006d23:	add    BYTE PTR [rcx+0x0],ah
   140006d26:	je     0x140006d28
   140006d28:	push   0x78004500
   140006d2d:	add    BYTE PTR [rax],ch
   140006d2f:	add    BYTE PTR [rsi+0x0],al
   140006d32:	rex.WRXB add BYTE PTR [r8+r8*1+0x44],r9b
   140006d37:	add    BYTE PTR [rbp+0x0],al
   140006d3a:	push   rdx
   140006d3b:	add    BYTE PTR [rcx+0x0],cl
   140006d3e:	add    BYTE PTR [rdi+0x0],r11b
   140006d42:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140006d46:	movsxd eax,DWORD PTR [rax]
   140006d48:	(bad)  
   140006d49:	add    BYTE PTR [rax+rax*1+0x41],ch
   140006d4d:	add    BYTE PTR [rax+0x0],dh
   140006d50:	jo     0x140006d52
   140006d52:	add    BYTE PTR [rcx+0x0],r12b
   140006d56:	je     0x140006d58
   140006d58:	(bad)  
   140006d59:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140006d5d:	add    BYTE PTR [rdi+0x0],dh
   140006d60:	sub    al,0x0
   140006d62:	and    BYTE PTR [rax],al
   140006d64:	xor    BYTE PTR [rax],al
   140006d66:	sub    al,0x0
   140006d68:	and    BYTE PTR [rax],al
   140006d6a:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   140006d6e:	rex.WR add BYTE PTR [rax+rax*1+0x2c],r9b
   140006d73:	add    BYTE PTR [rax],ah
   140006d75:	add    BYTE PTR [rbx+0x0],dh
   140006d78:	jp     0x140006d7a
   140006d7a:	push   rax
   140006d7b:	add    BYTE PTR [rcx+0x0],ah
   140006d7e:	je     0x140006d80
   140006d80:	push   0x20002c00
   140006d85:	add    BYTE PTR [rbp+0x0],cl
   140006d88:	add    BYTE PTR [r8+0x0],bl
   140006d8c:	pop    rdi
   140006d8d:	add    BYTE PTR [rax+0x0],dl
   140006d90:	add    BYTE PTR [r8+rax*1+0x48],dl
   140006d95:	add    BYTE PTR [rcx],ch
	...
   140006d9f:	add    BYTE PTR [rbx+0x0],al
   140006da2:	rex.WRXB add BYTE PTR [r13+0x0],r9b
   140006da6:	and    BYTE PTR [rax],al
   140006da8:	add    BYTE PTR [r10+0x0],r14b
   140006dac:	jb     0x140006dae
   140006dae:	outs   dx,DWORD PTR ds:[rsi]
   140006daf:	add    BYTE PTR [rdx+0x0],dh
   140006db2:	cmp    al,BYTE PTR [rax]
   140006db4:	and    eax,0x38003000
   140006db9:	add    BYTE PTR [rax+0x0],bh
   140006dbc:	and    BYTE PTR [rax],al
   140006dbe:	and    eax,0x7300
   140006dc3:	add    BYTE PTR [rax],al
   140006dc5:	add    BYTE PTR [rax],al
   140006dc7:	add    BYTE PTR [rbx+0x0],dl
   140006dca:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   140006dce:	push   rsp
   140006dcf:	add    BYTE PTR [rdi+0x0],dl
   140006dd2:	add    BYTE PTR [r10+0x0],dl
   140006dd6:	add    BYTE PTR [r8],r8b
   140006dd9:	add    BYTE PTR [rax],al
   140006ddb:	add    BYTE PTR [rax],al
   140006ddd:	add    BYTE PTR [rax],al
   140006ddf:	add    BYTE PTR [rdx+0x0],cl
   140006de2:	(bad)  
   140006de3:	add    BYTE PTR [rsi+0x0],dh
   140006de6:	(bad)  
   140006de7:	add    BYTE PTR [rbx+0x0],dl
   140006dea:	outs   dx,DWORD PTR ds:[rsi]
   140006deb:	add    BYTE PTR [rsi+0x0],ah
   140006dee:	je     0x140006df0
	...
   140006df8:	rex.WX add BYTE PTR [rcx+0x0],spl
   140006dfc:	jbe    0x140006dfe
   140006dfe:	(bad)  
   140006dff:	add    BYTE PTR [rax],ah
   140006e01:	add    BYTE PTR [rax+0x0],dl
   140006e04:	ins    BYTE PTR es:[rdi],dx
   140006e05:	add    BYTE PTR [rbp+0x0],dh
   140006e08:	add    BYTE PTR [eip+0x6e006900],ch        # 0x1ae00d70f
	...
   140006e17:	add    BYTE PTR [rbp+0x0],dl
   140006e1a:	jae    0x140006e1c
   140006e1c:	add    BYTE PTR gs:[rsi+0x0],cl
   140006e20:	add    BYTE PTR gs:[rdi+0x0],dh
   140006e24:	rex.WX add BYTE PTR [rcx+0x0],spl
   140006e28:	jbe    0x140006e2a
   140006e2a:	(bad)  
   140006e2b:	add    BYTE PTR [rax+0x0],dl
   140006e2e:	ins    BYTE PTR es:[rdi],dx
   140006e2f:	add    BYTE PTR [rbp+0x0],dh
   140006e32:	add    BYTE PTR [ecx+0x0],ch
   140006e36:	outs   dx,BYTE PTR ds:[rsi]
	...
   140006e3f:	add    BYTE PTR [rbx+0x0],dl
   140006e42:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   140006e46:	push   rsp
   140006e47:	add    BYTE PTR [rdi+0x0],dl
   140006e4a:	add    BYTE PTR [r10+0x0],dl
   140006e4e:	add    BYTE PTR [r8],r8b
   140006e51:	add    BYTE PTR [rax],al
   140006e53:	add    BYTE PTR [rax],al
   140006e55:	add    BYTE PTR [rax],al
   140006e57:	add    BYTE PTR [rdx+0x0],cl
   140006e5a:	(bad)  
   140006e5b:	add    BYTE PTR [rsi+0x0],dh
   140006e5e:	(bad)  
   140006e5f:	add    BYTE PTR [rbx+0x0],dl
   140006e62:	outs   dx,DWORD PTR ds:[rsi]
   140006e63:	add    BYTE PTR [rsi+0x0],ah
   140006e66:	je     0x140006e68
	...
   140006e70:	rex.WX add BYTE PTR [rcx+0x0],spl
   140006e74:	jbe    0x140006e76
   140006e76:	(bad)  
   140006e77:	add    BYTE PTR [rax],ah
   140006e79:	add    BYTE PTR [rax+0x0],dl
   140006e7c:	ins    BYTE PTR es:[rdi],dx
   140006e7d:	add    BYTE PTR [rbp+0x0],dh
   140006e80:	add    BYTE PTR [eip+0x6e006900],ch        # 0x1ae00d787
	...
   140006e8f:	add    BYTE PTR [rdx+0x0],cl
   140006e92:	(bad)  
   140006e93:	add    BYTE PTR [rsi+0x0],dh
   140006e96:	(bad)  
   140006e97:	add    BYTE PTR [rax+0x0],cl
   140006e9a:	outs   dx,DWORD PTR ds:[rsi]
   140006e9b:	add    BYTE PTR [rbp+0x0],ch
   140006e9e:	add    BYTE PTR gs:[rax],al
   140006ea1:	add    BYTE PTR [rax],al
   140006ea3:	add    BYTE PTR [rax],al
   140006ea5:	add    BYTE PTR [rax],al
   140006ea7:	add    BYTE PTR [rbx+0x0],al
   140006eaa:	rex.WR add BYTE PTR [rbx+0x0],r10b
   140006eae:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140006eb3:	add    BYTE PTR [rax],al
   140006eb5:	add    BYTE PTR [rax],al
   140006eb7:	add    BYTE PTR [rax+rax*1+0x72],dl
   140006ebb:	add    BYTE PTR [rbp+0x0],ah
   140006ebe:	(bad)  
   140006ebf:	add    BYTE PTR [rax+rax*1+0x41],dh
   140006ec3:	add    BYTE PTR [rbx+0x0],dh
   140006ec6:	add    BYTE PTR [rax],al
   140006ec8:	and    eax,0x5c007300
   140006ecd:	add    BYTE PTR [rip+0x7300],ah        # 0x14000e1d3
	...
   140006edf:	add    BYTE PTR [rbx+0x0],dl
   140006ee2:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   140006ee6:	push   rsp
   140006ee7:	add    BYTE PTR [rdi+0x0],dl
   140006eea:	add    BYTE PTR [r10+0x0],dl
   140006eee:	add    BYTE PTR [r8+rax*1+0x4a],r11b
   140006ef3:	add    BYTE PTR [rcx+0x0],ah
   140006ef6:	jbe    0x140006ef8
   140006ef8:	(bad)  
   140006ef9:	add    BYTE PTR [rbx+0x0],dl
   140006efc:	outs   dx,DWORD PTR ds:[rsi]
   140006efd:	add    BYTE PTR [rsi+0x0],ah
   140006f00:	je     0x140006f02
   140006f02:	pop    rsp
   140006f03:	add    BYTE PTR [rdx+0x0],cl
   140006f06:	(bad)  
   140006f07:	add    BYTE PTR [rsi+0x0],dh
   140006f0a:	(bad)  
   140006f0b:	add    BYTE PTR [rax],ah
   140006f0d:	add    BYTE PTR [rdx+0x0],dl
   140006f10:	jne    0x140006f12
   140006f12:	outs   dx,BYTE PTR ds:[rsi]
   140006f13:	add    BYTE PTR [rax+rax*1+0x69],dh
   140006f17:	add    BYTE PTR [rbp+0x0],ch
   140006f1a:	add    BYTE PTR gs:[rax],ah
   140006f1d:	add    BYTE PTR [rbp+0x0],al
   140006f20:	outs   dx,BYTE PTR ds:[rsi]
   140006f21:	add    BYTE PTR [rsi+0x0],dh
   140006f24:	imul   eax,DWORD PTR [rax],0x6f0072
   140006f2a:	outs   dx,BYTE PTR ds:[rsi]
   140006f2b:	add    BYTE PTR [rbp+0x0],ch
   140006f2e:	add    BYTE PTR gs:[rsi+0x0],ch
   140006f32:	je     0x140006f34
   140006f34:	add    BYTE PTR [rax],al
   140006f36:	add    BYTE PTR [rax],al
   140006f38:	and    eax,0x5c007300
   140006f3d:	add    BYTE PTR [rip+0x7300],ah        # 0x14000e243
   140006f43:	add    BYTE PTR [rax],al
   140006f45:	add    BYTE PTR [rax],al
   140006f47:	add    BYTE PTR [rdx+0x0],cl
   140006f4a:	(bad)  
   140006f4b:	add    BYTE PTR [rsi+0x0],dh
   140006f4e:	(bad)  
   140006f4f:	add    BYTE PTR [rax+0x0],cl
   140006f52:	outs   dx,DWORD PTR ds:[rsi]
   140006f53:	add    BYTE PTR [rbp+0x0],ch
   140006f56:	add    BYTE PTR gs:[rax],al
   140006f59:	add    BYTE PTR [rax],al
   140006f5b:	add    BYTE PTR [rax],al
   140006f5d:	add    BYTE PTR [rax],al
   140006f5f:	add    BYTE PTR [rdx+0x0],ah
   140006f62:	imul   eax,DWORD PTR [rax],0x5c006e
   140006f68:	push   0x0
   140006f6a:	(bad)  
   140006f6b:	add    BYTE PTR [rsi+0x0],dh
   140006f6e:	(bad)  
   140006f6f:	add    BYTE PTR [rsi],ch
   140006f71:	add    BYTE PTR [rbp+0x0],ah
   140006f74:	js     0x140006f76
   140006f76:	add    BYTE PTR gs:[rax],al
   140006f79:	add    BYTE PTR [rax],al
   140006f7b:	add    BYTE PTR [rax],al
   140006f7d:	add    BYTE PTR [rax],al
   140006f7f:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c00e285
   140006f85:	add    BYTE PTR [rip+0x7300],ah        # 0x14000e28b
   140006f8b:	add    BYTE PTR [rax],al
   140006f8d:	add    BYTE PTR [rax],al
   140006f8f:	add    BYTE PTR [rdx+0x0],ah
   140006f92:	imul   eax,DWORD PTR [rax],0x5c006e
   140006f98:	movsxd eax,DWORD PTR [rax]
   140006f9a:	ins    BYTE PTR es:[rdi],dx
   140006f9b:	add    BYTE PTR [rcx+0x0],ch
   140006f9e:	add    BYTE PTR gs:[rsi+0x0],ch
   140006fa2:	je     0x140006fa4
   140006fa4:	pop    rsp
   140006fa5:	add    BYTE PTR [rdx+0x0],ch
   140006fa8:	jbe    0x140006faa
   140006faa:	ins    DWORD PTR es:[rdi],dx
   140006fab:	add    BYTE PTR [rsi],ch
   140006fad:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140006fb1:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006fb5:	add    BYTE PTR [rax],al
   140006fb7:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c00e2bd
   140006fbd:	add    BYTE PTR [rip+0x7300],ah        # 0x14000e2c3
   140006fc3:	add    BYTE PTR [rax],al
   140006fc5:	add    BYTE PTR [rax],al
   140006fc7:	add    BYTE PTR [rdx+0x0],ah
   140006fca:	imul   eax,DWORD PTR [rax],0x5c006e
   140006fd0:	jae    0x140006fd2
   140006fd2:	add    BYTE PTR gs:[rdx+0x0],dh
   140006fd6:	jbe    0x140006fd8
   140006fd8:	add    BYTE PTR gs:[rdx+0x0],dh
   140006fdc:	pop    rsp
   140006fdd:	add    BYTE PTR [rdx+0x0],ch
   140006fe0:	jbe    0x140006fe2
   140006fe2:	ins    DWORD PTR es:[rdi],dx
   140006fe3:	add    BYTE PTR [rsi],ch
   140006fe5:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140006fe9:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006fed:	add    BYTE PTR [rax],al
   140006fef:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c00e2f5
   140006ff5:	add    BYTE PTR [rip+0x7300],ah        # 0x14000e2fb
   140006ffb:	add    BYTE PTR [rax],al
   140006ffd:	add    BYTE PTR [rax],al
   140006fff:	add    BYTE PTR [rip+0x42004100],ch        # 0x18200b105
   140007005:	add    BYTE PTR [rbx+0x0],al
   140007008:	add    BYTE PTR [rbp+0x0],r8b
   14000700c:	rex.RX add BYTE PTR [rsi+0x0],r8b
   140007010:	add    BYTE PTR [r8+rax*1+0x43],r8b
   140007015:	add    BYTE PTR [rdx+0x0],al
   140007018:	add    BYTE PTR [r13+0x0],dil
   14000701c:	add    BYTE PTR [rax],al
   14000701e:	add    BYTE PTR [rax],al
   140007020:	jnp    0x140007022
   140007022:	rex.XB add BYTE PTR [r9+0x0],al
   140007026:	rex.RX add BYTE PTR [rbp+0x0],r8b
   14000702a:	add    BYTE PTR [r14+0x0],r8b
   14000702e:	add    BYTE PTR [r11+0x0],al
   140007032:	sub    eax,0x0
   140007037:	add    BYTE PTR [rip+0x25007300],ah        # 0x16500e33d
   14000703d:	add    BYTE PTR [rax],dh
   14000703f:	add    BYTE PTR [rbx],dh
   140007041:	add    BYTE PTR [rax+rax*1+0x25],ah
   140007045:	add    BYTE PTR [rcx],dh
   140007047:	add    BYTE PTR [rax+rax*1+0x2d],ah
   14000704b:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400a051
   140007051:	add    BYTE PTR [rax+rax*1+0x2d],ah
   140007055:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400a05b
   14000705b:	add    BYTE PTR [rax+rax*1+0x25],ah
   14000705f:	add    BYTE PTR [rbx+0x0],dh
   140007062:	add    BYTE PTR [rax],al
   140007064:	add    BYTE PTR [rax],al
   140007066:	add    BYTE PTR [rax],al
   140007068:	sub    eax,0x42004100
   14000706d:	add    BYTE PTR [rbx+0x0],al
   140007070:	add    BYTE PTR [rbp+0x0],r8b
   140007074:	rex.RX add BYTE PTR [rsi+0x0],r8b
   140007078:	add    BYTE PTR [r8+rax*1+0x43],r8b
   14000707d:	add    BYTE PTR [rdx+0x0],al
   140007080:	rex.X add BYTE PTR [rbp+0x0],dil
   140007084:	add    BYTE PTR [rax],al
   140007086:	add    BYTE PTR [rax],al
   140007088:	jnp    0x14000708a
   14000708a:	rex.XB add BYTE PTR [r9+0x0],al
   14000708e:	rex.RX add BYTE PTR [rbp+0x0],r8b
   140007092:	add    BYTE PTR [r14+0x0],r8b
   140007096:	add    BYTE PTR [r11+0x0],al
   14000709a:	sub    eax,0x0
   14000709f:	add    BYTE PTR [rip+0x25007300],ah        # 0x16500e3a5
   1400070a5:	add    BYTE PTR [rax],dh
   1400070a7:	add    BYTE PTR [rbx],dh
   1400070a9:	add    BYTE PTR [rax+rax*1+0x25],ah
   1400070ad:	add    BYTE PTR [rcx],dh
   1400070af:	add    BYTE PTR [rax+rax*1+0x2d],ah
   1400070b3:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400a0b9
   1400070b9:	add    BYTE PTR [rax+rax*1+0x2d],ah
   1400070bd:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400a0c3
   1400070c3:	add    BYTE PTR [rax+rax*1+0x25],ah
   1400070c7:	add    BYTE PTR [rbx+0x0],dh
   1400070ca:	add    BYTE PTR [rax],al
   1400070cc:	add    BYTE PTR [rax],al
   1400070ce:	add    BYTE PTR [rax],al
   1400070d0:	sub    eax,0x42004100
   1400070d5:	add    BYTE PTR [rbx+0x0],al
   1400070d8:	add    BYTE PTR [rbp+0x0],r8b
   1400070dc:	rex.RX add BYTE PTR [rsi+0x0],r8b
   1400070e0:	add    BYTE PTR [r8+rax*1+0x43],r8b
   1400070e5:	add    BYTE PTR [rdx+0x0],al
   1400070e8:	rex.XB add BYTE PTR [r13+0x0],dil
   1400070ec:	add    BYTE PTR [rax],al
   1400070ee:	add    BYTE PTR [rax],al
   1400070f0:	jnp    0x1400070f2
   1400070f2:	rex.XB add BYTE PTR [r9+0x0],al
   1400070f6:	rex.RX add BYTE PTR [rbp+0x0],r8b
   1400070fa:	add    BYTE PTR [r14+0x0],r8b
   1400070fe:	add    BYTE PTR [r11+0x0],al
   140007102:	sub    eax,0x0
   140007107:	add    BYTE PTR [rip+0x25007300],ah        # 0x16500e40d
   14000710d:	add    BYTE PTR [rax],dh
   14000710f:	add    BYTE PTR [rbx],dh
   140007111:	add    BYTE PTR [rax+rax*1+0x25],ah
   140007115:	add    BYTE PTR [rcx],dh
   140007117:	add    BYTE PTR [rax+rax*1+0x2d],ah
   14000711b:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400a121
   140007121:	add    BYTE PTR [rax+rax*1+0x2d],ah
   140007125:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400a12b
   14000712b:	add    BYTE PTR [rax+rax*1+0x25],ah
   14000712f:	add    BYTE PTR [rbx+0x0],dh
	...
   14000713e:	add    BYTE PTR [rax],al
   140007140:	jnp    0x140007142
   140007142:	add    BYTE PTR [r9],r14b
   140007145:	add    BYTE PTR [rcx],bh
   140007147:	add    BYTE PTR [rsi+0x0],al
   14000714a:	cmp    DWORD PTR [rax],eax
   14000714c:	xor    eax,DWORD PTR [rax]
   14000714e:	xor    eax,DWORD PTR [rax]
   140007150:	xor    DWORD PTR [rax],eax
   140007152:	sub    eax,0x31003300
   140007157:	add    BYTE PTR [rcx],dh
   140007159:	add    BYTE PTR [rax],dh
   14000715b:	add    BYTE PTR [rip+0x31003100],ch        # 0x17100a261
   140007161:	add    BYTE PTR [rax+rax*1+0x34],al
   140007165:	add    BYTE PTR [rip+0x39003900],ch        # 0x17900aa6b
   14000716b:	add    BYTE PTR [rcx],dh
   14000716d:	add    BYTE PTR [rbx+0x0],al
   140007170:	sub    eax,0x30003000
   140007175:	add    BYTE PTR [rip+0x30003000],dh        # 0x17000a17b
   14000717b:	add    BYTE PTR [rax+rax*1],dh
   14000717e:	add    BYTE PTR [rbx],r14b
   140007181:	add    BYTE PTR [rdx+0x0],al
   140007184:	xor    eax,DWORD PTR [rax]
   140007186:	add    BYTE PTR [rdx+0x0],r8b
   14000718a:	jge    0x14000718c
   14000718c:	add    BYTE PTR [rax],al
   14000718e:	add    BYTE PTR [rax],al
   140007190:	push   rbx
   140007191:	add    BYTE PTR [rdi+0x0],cl
   140007194:	add    BYTE PTR [rax+r8*1+0x57],r10b
   140007199:	add    BYTE PTR [rcx+0x0],al
   14000719c:	push   rdx
   14000719d:	add    BYTE PTR [rbp+0x0],al
   1400071a0:	pop    rsp
   1400071a1:	add    BYTE PTR [rbx+0x0],al
   1400071a4:	ins    BYTE PTR es:[rdi],dx
   1400071a5:	add    BYTE PTR [rcx+0x0],ah
   1400071a8:	jae    0x1400071aa
   1400071aa:	jae    0x1400071ac
   1400071ac:	add    BYTE PTR gs:[rbx+0x0],dh
   1400071b0:	pop    rsp
   1400071b1:	add    BYTE PTR [rbx+0x0],al
   1400071b4:	rex.WR add BYTE PTR [rbx+0x0],r10b
   1400071b8:	rex.WB add BYTE PTR [r8+rax*1+0x5c],al
   1400071bd:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c00e4c3
   1400071c3:	add    BYTE PTR [rcx+0x0],cl
   1400071c6:	outs   dx,BYTE PTR ds:[rsi]
   1400071c7:	add    BYTE PTR [rax+0x0],dh
   1400071ca:	jb     0x1400071cc
   1400071cc:	outs   dx,DWORD PTR ds:[rsi]
   1400071cd:	add    BYTE PTR [rbx+0x0],ah
   1400071d0:	push   rbx
   1400071d1:	add    BYTE PTR [rbp+0x0],ah
   1400071d4:	jb     0x1400071d6
   1400071d6:	jbe    0x1400071d8
   1400071d8:	add    BYTE PTR gs:[rdx+0x0],dh
   1400071dc:	xor    eax,DWORD PTR [rax]
   1400071de:	xor    al,BYTE PTR [rax]
	...
   1400071e8:	push   rbx
   1400071e9:	add    BYTE PTR [rdi+0x0],cl
   1400071ec:	add    BYTE PTR [rax+r8*1+0x57],r10b
   1400071f1:	add    BYTE PTR [rcx+0x0],al
   1400071f4:	push   rdx
   1400071f5:	add    BYTE PTR [rbp+0x0],al
	...
   140007200:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140007204:	jp     0x140007206
   140007206:	imul   eax,DWORD PTR [rax],0x6c006c
   14000720c:	(bad)  
   14000720d:	add    BYTE PTR [rax],al
   14000720f:	add    BYTE PTR [rbp+0x0],cl
   140007212:	outs   dx,DWORD PTR ds:[rsi]
   140007213:	add    BYTE PTR [rdx+0x0],bh
   140007216:	imul   eax,DWORD PTR [rax],0x6c006c
   14000721c:	(bad)  
   14000721d:	add    BYTE PTR [rax],ah
   14000721f:	add    BYTE PTR [rsi+0x0],al
   140007222:	imul   eax,DWORD PTR [rax],0x650072
   140007228:	data16 add BYTE PTR [rdi+0x0],ch
   14000722c:	js     0x14000722e
   14000722e:	add    BYTE PTR [rax],al
   140007230:	ins    DWORD PTR es:[rdi],dx
   140007231:	add    BYTE PTR [rdi+0x0],ch
   140007234:	jp     0x140007236
   140007236:	imul   eax,DWORD PTR [rax],0x6c006c
   14000723c:	(bad)  
   14000723d:	add    BYTE PTR [rsi],ch
   14000723f:	add    BYTE PTR [rdi+0x0],ch
   140007242:	jb     0x140007244
   140007244:	add    BYTE PTR [eax],al
   140007247:	add    BYTE PTR [rbp+0x0],cl
   14000724a:	outs   dx,DWORD PTR ds:[rsi]
   14000724b:	add    BYTE PTR [rdx+0x0],bh
   14000724e:	imul   eax,DWORD PTR [rax],0x6c006c
   140007254:	(bad)  
   140007255:	add    BYTE PTR [rax],al
   140007257:	add    BYTE PTR [rbx+0x0],al
   14000725a:	jne    0x14000725c
   14000725c:	jb     0x14000725e
   14000725e:	jb     0x140007260
   140007260:	add    BYTE PTR gs:[rsi+0x0],ch
   140007264:	je     0x140007266
   140007266:	push   rsi
   140007267:	add    BYTE PTR [rbp+0x0],ah
   14000726a:	jb     0x14000726c
   14000726c:	jae    0x14000726e
   14000726e:	imul   eax,DWORD PTR [rax],0x6e006f
   140007274:	add    BYTE PTR [rax],al
   140007276:	add    BYTE PTR [rax],al
   140007278:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000727c:	imul   eax,DWORD PTR [rax],0x6e
   140007282:	add    BYTE PTR [rax],al
   140007284:	add    BYTE PTR [rax],al
   140007286:	add    BYTE PTR [rax],al
   140007288:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000728c:	jae    0x14000728e
   14000728e:	je     0x140007290
   140007290:	(bad)  
   140007291:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140007295:	add    BYTE PTR [rax],ah
   140007297:	add    BYTE PTR [rax+rax*1+0x69],al
   14000729b:	add    BYTE PTR [rdx+0x0],dh
   14000729e:	add    BYTE PTR gs:[rbx+0x0],ah
   1400072a2:	je     0x1400072a4
   1400072a4:	outs   dx,DWORD PTR ds:[rsi]
   1400072a5:	add    BYTE PTR [rdx+0x0],dh
   1400072a8:	jns    0x1400072aa
   1400072aa:	add    BYTE PTR [rax],al
   1400072ac:	add    BYTE PTR [rax],al
   1400072ae:	add    BYTE PTR [rax],al
   1400072b0:	pop    rsp
   1400072b1:	add    BYTE PTR [rax+0x0],dh
   1400072b4:	ins    BYTE PTR es:[rdi],dx
   1400072b5:	add    BYTE PTR [rbp+0x0],dh
   1400072b8:	add    BYTE PTR [ecx+0x0],ch
   1400072bc:	outs   dx,BYTE PTR ds:[rsi]
   1400072bd:	add    BYTE PTR [rbx+0x0],dh
	...
   1400072c8:	push   rbx
   1400072c9:	add    BYTE PTR [rdi+0x0],ch
   1400072cc:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   1400072d1:	add    BYTE PTR [rcx+0x0],ah
   1400072d4:	jb     0x1400072d6
   1400072d6:	add    BYTE PTR gs:[rax+rax*1+0x43],bl
   1400072db:	add    BYTE PTR [rax+rax*1+0x61],ch
   1400072df:	add    BYTE PTR [rbx+0x0],dh
   1400072e2:	jae    0x1400072e4
   1400072e4:	add    BYTE PTR gs:[rbx+0x0],dh
   1400072e8:	pop    rsp
   1400072e9:	add    BYTE PTR [rbx+0x0],al
   1400072ec:	rex.WR add BYTE PTR [rbx+0x0],r10b
   1400072f0:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   1400072f5:	add    BYTE PTR [rax],al
   1400072f7:	add    BYTE PTR [rdx],ah
   1400072f9:	add    eax,0x61993
   1400072fe:	add    BYTE PTR [rax],al
   140007300:	movabs al,ds:0xc0000000300007a
   140007309:	jnp    0x14000730b
   14000730b:	add    BYTE PTR [rsi],cl
   14000730d:	add    BYTE PTR [rax],al
   14000730f:	add    BYTE PTR [rbx+rdi*2+0x300000],bl
   140007316:	add    BYTE PTR [rax],al
   140007318:	add    BYTE PTR [rax],al
   14000731a:	add    BYTE PTR [rax],al
   14000731c:	add    DWORD PTR [rax],eax
   14000731e:	add    BYTE PTR [rax],al
   140007320:	and    al,BYTE PTR [rip+0x21993]        # 0x140028cb9
   140007326:	add    BYTE PTR [rax],al
   140007328:	fdivr  DWORD PTR [rax+rax*1+0x0]
   14000732c:	add    DWORD PTR [rax],eax
   14000732e:	add    BYTE PTR [rax],al
   140007330:	cld    
   140007331:	jl     0x140007333
   140007333:	add    BYTE PTR [rsi],al
   140007335:	add    BYTE PTR [rax],al
   140007337:	add    BYTE PTR [rbp+rdi*2+0x0],al
   14000733b:	add    BYTE PTR [rax],dh
   14000733d:	add    BYTE PTR [rax],al
   14000733f:	add    BYTE PTR [rax],al
   140007341:	add    BYTE PTR [rax],al
   140007343:	add    BYTE PTR [rcx],al
   140007345:	add    BYTE PTR [rax],al
   140007347:	add    BYTE PTR [rdx],ah
   140007349:	add    eax,0x21993
   14000734e:	add    BYTE PTR [rax],al
   140007350:	je     0x1400073cf
   140007352:	add    BYTE PTR [rax],al
   140007354:	add    DWORD PTR [rax],eax
   140007356:	add    BYTE PTR [rax],al
   140007358:	cwde   
   140007359:	jge    0x14000735b
   14000735b:	add    BYTE PTR [rsi],al
   14000735d:	add    BYTE PTR [rax],al
   14000735f:	add    al,ah
   140007361:	jge    0x140007363
   140007363:	add    BYTE PTR [rax+0x0],al
   140007366:	add    BYTE PTR [rax],al
   140007368:	add    BYTE PTR [rax],al
   14000736a:	add    BYTE PTR [rax],al
   14000736c:	add    DWORD PTR [rax],eax
   14000736e:	add    BYTE PTR [rax],al
   140007370:	push   rdx
   140007371:	gs addr32 rex.WRXB jo 0x1400073db
   140007376:	outs   dx,BYTE PTR ds:[rsi]
   140007377:	rex.WXB
   140007378:	gs jns 0x1400073cf
   14000737b:	jb     0x1400073de
   14000737d:	outs   dx,BYTE PTR ds:[rsi]
   14000737e:	jae    0x1400073e1
   140007380:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140007384:	push   rdi
   140007385:	add    BYTE PTR [rax],al
   140007387:	add    BYTE PTR [rcx+0x0],al
   14000738a:	add    BYTE PTR fs:[rsi+0x0],dh
   14000738e:	(bad)  
   14000738f:	add    BYTE PTR [rax+0x0],dh
   140007392:	imul   eax,DWORD PTR [rax],0x320033
   140007398:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000739d:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400073a1:	add    BYTE PTR [rax],al
   1400073a3:	add    BYTE PTR [rax],al
   1400073a5:	add    BYTE PTR [rax],al
   1400073a7:	add    BYTE PTR [rdx+0x65],dl
   1400073aa:	addr32 rex.R
   1400073ac:	gs ins BYTE PTR es:[rdi],dx
   1400073ae:	gs je  0x140007416
   1400073b1:	rex.WXB
   1400073b2:	gs jns 0x140007409
   1400073b5:	jb     0x140007418
   1400073b7:	outs   dx,BYTE PTR ds:[rsi]
   1400073b8:	jae    0x14000741b
   1400073ba:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   1400073be:	push   rdi
   1400073bf:	add    BYTE PTR [rdx+0x65],dl
   1400073c2:	addr32 rex.R
   1400073c4:	gs ins BYTE PTR es:[rdi],dx
   1400073c6:	gs je  0x14000742e
   1400073c9:	rex.WXB
   1400073ca:	gs jns 0x140007412
   1400073cd:	js     0x140007426
   1400073cf:	add    BYTE PTR [rbp+0x0],dl
   1400073d2:	outs   dx,BYTE PTR ds:[rsi]
   1400073d3:	add    BYTE PTR [rbx+0x0],ch
   1400073d6:	outs   dx,BYTE PTR ds:[rsi]
   1400073d7:	add    BYTE PTR [rdi+0x0],ch
   1400073da:	ja     0x1400073dc
   1400073dc:	outs   dx,BYTE PTR ds:[rsi]
   1400073dd:	add    BYTE PTR [rax],ah
   1400073df:	add    BYTE PTR [rbp+0x0],ah
   1400073e2:	jb     0x1400073e4
   1400073e4:	jb     0x1400073e6
   1400073e6:	outs   dx,DWORD PTR ds:[rsi]
   1400073e7:	add    BYTE PTR [rdx+0x0],dh
   1400073ea:	and    BYTE PTR [rax],al
   1400073ec:	xor    BYTE PTR [rax],al
   1400073ee:	js     0x1400073f0
   1400073f0:	and    eax,0x6c003000
   1400073f5:	add    BYTE PTR [rax+0x0],bl
	...
   140007400:	rex.WB add BYTE PTR [r8+rax*1+0x69],al
   140007405:	add    BYTE PTR [rbx+0x0],dh
   140007408:	jo     0x14000740a
   14000740a:	(bad)  
   14000740b:	add    BYTE PTR [rax+rax*1+0x63],dh
   14000740f:	add    BYTE PTR [rax+0x0],ch
   140007412:	and    BYTE PTR [rax],al
   140007414:	add    BYTE PTR gs:[rdx+0x0],dh
   140007418:	jb     0x14000741a
   14000741a:	outs   dx,DWORD PTR ds:[rsi]
   14000741b:	add    BYTE PTR [rdx+0x0],dh
   14000741e:	and    BYTE PTR [rax],al
   140007420:	and    eax,DWORD PTR [rax]
   140007422:	and    eax,0x6400
	...
   14000742f:	add    BYTE PTR [rdx],ah
   140007431:	add    eax,0x11993
   140007436:	add    BYTE PTR [rax],al
   140007438:	nop
   140007439:	jle    0x14000743b
	...
   140007443:	add    BYTE PTR [rbx],al
   140007445:	add    BYTE PTR [rax],al
   140007447:	add    BYTE PTR [rax+0x2000007e],bl
   14000744d:	add    BYTE PTR [rax],al
   14000744f:	add    BYTE PTR [rax],al
   140007451:	add    BYTE PTR [rax],al
   140007453:	add    BYTE PTR [rcx],al
   140007455:	add    BYTE PTR [rax],al
   140007457:	add    BYTE PTR [rbx+0x0],dl
   14000745a:	add    BYTE PTR [rax],al
   14000745c:	rex.WRB add BYTE PTR [r8],r8b
   14000745f:	add    BYTE PTR [rax+0x74],bl
   140007462:	add    BYTE PTR [rax+0x1],al
   140007465:	add    BYTE PTR [rax],al
   140007467:	add    BYTE PTR [rsp+rsi*2+0x0],bl
   14000746b:	rex add DWORD PTR [rax],eax
   14000746e:	add    BYTE PTR [rax],al
   140007470:	add    BYTE PTR [rax],r8b
   140007473:	add    BYTE PTR [rdx+0x0],al
   140007476:	add    BYTE PTR [rax],al
   140007478:	jo     0x1400074ee
   14000747a:	add    BYTE PTR [rax+0x1],al
   14000747d:	add    BYTE PTR [rax],al
   14000747f:	add    BYTE PTR [rsp+rsi*2+0x0],dh
   140007483:	rex add DWORD PTR [rax],eax
   140007486:	add    BYTE PTR [rax],al
   140007488:	push   rsi
   140007489:	add    BYTE PTR [rcx+0x0],ah
   14000748c:	ins    BYTE PTR es:[rdi],dx
   14000748d:	add    BYTE PTR [rax],al
   14000748f:	add    BYTE PTR [rax+0x1400074],cl
   140007495:	add    BYTE PTR [rax],al
   140007497:	add    BYTE PTR [rsi+0x0],al
   14000749a:	outs   dx,DWORD PTR ds:[rsi]
   14000749b:	add    BYTE PTR [rdx+0x0],dh
   14000749e:	movsxd eax,DWORD PTR [rax]
   1400074a0:	add    BYTE PTR gs:[rdx+0x0],dl
   1400074a4:	add    BYTE PTR gs:[rbp+0x0],ch
   1400074a8:	outs   dx,DWORD PTR ds:[rsi]
   1400074a9:	add    BYTE PTR [rsi+0x0],dh
   1400074ac:	add    BYTE PTR gs:[rax],al
   1400074af:	add    BYTE PTR [rax+0x1400074],bl
   1400074b5:	add    BYTE PTR [rax],al
   1400074b7:	add    BYTE PTR [rsi+0x0],cl
   1400074ba:	outs   dx,DWORD PTR ds:[rsi]
   1400074bb:	add    BYTE PTR [rdx+0x0],dl
   1400074be:	add    BYTE PTR gs:[rbp+0x0],ch
   1400074c2:	outs   dx,DWORD PTR ds:[rsi]
   1400074c3:	add    BYTE PTR [rsi+0x0],dh
   1400074c6:	add    BYTE PTR gs:[rax],al
   1400074c9:	add    BYTE PTR [rax],al
   1400074cb:	add    BYTE PTR [rax],al
   1400074cd:	add    BYTE PTR [rax],al
   1400074cf:	add    BYTE PTR [rax+0x1400074],bh
   1400074d5:	add    BYTE PTR [rax],al
   1400074d7:	add    BYTE PTR [rax+rax*1+0x65],al
   1400074db:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400074df:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400074e3:	add    BYTE PTR [rax],al
   1400074e5:	add    BYTE PTR [rax],al
   1400074e7:	add    al,bl
   1400074e9:	je     0x1400074eb
   1400074eb:	rex add DWORD PTR [rax],eax
   1400074ee:	add    BYTE PTR [rax],al
   1400074f0:	add    BYTE PTR [r8+0x0],sil
   1400074f4:	jo     0x1400074f6
   1400074f6:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   1400074fb:	add    BYTE PTR [rax],ah
   1400074fd:	add    BYTE PTR [rax],al
   1400074ff:	add    BYTE PTR [rbx+0x0],al
   140007502:	rex.WR add BYTE PTR [rbx+0x0],r10b
   140007506:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000750b:	add    BYTE PTR [rax],al
   14000750d:	add    BYTE PTR [rax],al
   14000750f:	add    BYTE PTR [rbx+0x0],al
   140007512:	outs   dx,DWORD PTR ds:[rsi]
   140007513:	add    BYTE PTR [rbp+0x0],ch
   140007516:	jo     0x140007518
   140007518:	outs   dx,DWORD PTR ds:[rsi]
   140007519:	add    BYTE PTR [rsi+0x0],ch
   14000751c:	add    BYTE PTR gs:[rsi+0x0],ch
   140007520:	je     0x140007522
   140007522:	and    BYTE PTR [rax],al
   140007524:	rex.XB add BYTE PTR [r9+0x0],spl
   140007528:	je     0x14000752a
   14000752a:	add    BYTE PTR gs:[rdi+0x0],ah
   14000752e:	outs   dx,DWORD PTR ds:[rsi]
   14000752f:	add    BYTE PTR [rdx+0x0],dh
   140007532:	imul   eax,DWORD PTR [rax],0x730065
   140007538:	add    BYTE PTR [rax],al
   14000753a:	add    BYTE PTR [rax],al
   14000753c:	or     al,BYTE PTR [rax]
   14000753e:	add    BYTE PTR [rax],al
   140007540:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140007544:	ins    BYTE PTR es:[rdi],dx
   140007545:	add    BYTE PTR [rbp+0x0],ah
   140007548:	push   rsp
   140007549:	add    BYTE PTR [rcx+0x0],bh
   14000754c:	jo     0x14000754e
   14000754e:	add    BYTE PTR gs:[rax],al
   140007551:	add    BYTE PTR [rax],al
   140007553:	add    BYTE PTR [rax],al
   140007555:	add    BYTE PTR [rax],al
   140007557:	add    BYTE PTR [rcx+0x0],cl
   14000755a:	outs   dx,BYTE PTR ds:[rsi]
   14000755b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000755f:	add    BYTE PTR [rdx+0x0],dh
   140007562:	data16 add BYTE PTR [rcx+0x0],ah
   140007566:	movsxd eax,DWORD PTR [rax]
   140007568:	add    BYTE PTR gs:[rax],al
   14000756b:	add    BYTE PTR [rax],al
   14000756d:	add    BYTE PTR [rax],al
   14000756f:	add    BYTE PTR [rax+0x0],cl
   140007572:	(bad)  
   140007573:	add    BYTE PTR [rdx+0x0],dh
   140007576:	add    BYTE PTR fs:[rdi+0x0],dh
   14000757a:	(bad)  
   14000757b:	add    BYTE PTR [rdx+0x0],dh
   14000757e:	add    BYTE PTR gs:[rax],al
   140007581:	add    BYTE PTR [rax],al
   140007583:	add    BYTE PTR [rax],al
   140007585:	add    BYTE PTR [rax],al
   140007587:	add    BYTE PTR [rbp+0x0],cl
   14000758a:	imul   eax,DWORD PTR [rax],0x65006d
	...
   140007598:	push   rbx
   140007599:	add    BYTE PTR [rcx+0x0],al
   14000759c:	rex.WRB add BYTE PTR [r8],r8b
   14000759f:	add    BYTE PTR [rbx+0x0],dl
   1400075a2:	add    BYTE PTR [r11+0x0],r8b
   1400075a6:	push   rbp
   1400075a7:	add    BYTE PTR [rdx+0x0],dl
   1400075aa:	rex.WB add BYTE PTR [r8+rax*1+0x59],dl
	...
   1400075b7:	add    BYTE PTR [rbx+0x0],dl
   1400075ba:	pop    rcx
   1400075bb:	add    BYTE PTR [rbx+0x0],dl
   1400075be:	push   rsp
   1400075bf:	add    BYTE PTR [rbp+0x0],al
   1400075c2:	rex.WRB add BYTE PTR [r8],r8b
   1400075c5:	add    BYTE PTR [rax],al
   1400075c7:	add    BYTE PTR [rbx+0x0],dl
   1400075ca:	outs   dx,DWORD PTR ds:[rsi]
   1400075cb:	add    BYTE PTR [rsi+0x0],ah
   1400075ce:	je     0x1400075d0
   1400075d0:	ja     0x1400075d2
   1400075d2:	(bad)  
   1400075d3:	add    BYTE PTR [rdx+0x0],dh
   1400075d6:	add    BYTE PTR gs:[rax],al
   1400075d9:	add    BYTE PTR [rax],al
   1400075db:	add    BYTE PTR [rax],al
   1400075dd:	add    BYTE PTR [rax],al
   1400075df:	add    BYTE PTR [rax+rax*1+0x79],dl
   1400075e3:	add    BYTE PTR [rax+0x0],dh
   1400075e6:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
   1400075eb:	add    BYTE PTR [rdx+0x0],ah
   1400075ee:	add    BYTE PTR [rax],al
   1400075f0:	and    eax,0x20006200
   1400075f5:	add    BYTE PTR [rip+0x20006400],ah        # 0x16000d9fb
   1400075fb:	add    BYTE PTR [rip+0x3a004800],ah        # 0x17a00be01
   140007601:	add    BYTE PTR [rip+0x3a004d00],ah        # 0x17a00c307
   140007607:	add    BYTE PTR [rip+0x5300],ah        # 0x14000c90d
   14000760d:	add    BYTE PTR [rax],al
   14000760f:	add    BYTE PTR [rsi],ch
   140007611:	add    BYTE PTR [rip+0x33003000],ah        # 0x17300a617
   140007617:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000761b:	add    BYTE PTR [rax],al
   14000761d:	add    BYTE PTR [rax],al
   14000761f:	add    BYTE PTR [rbx+0x0],bl
   140007622:	and    eax,0x38003000
   140007627:	add    BYTE PTR [rax+0x0],bh
   14000762a:	pop    rbp
   14000762b:	add    BYTE PTR [rax],al
   14000762d:	add    BYTE PTR [rax],al
   14000762f:	add    BYTE PTR [rbp+0x0],al
   140007632:	jb     0x140007634
   140007634:	jb     0x140007636
   140007636:	outs   dx,DWORD PTR ds:[rsi]
   140007637:	add    BYTE PTR [rdx+0x0],dh
   14000763a:	cmp    al,BYTE PTR [rax]
   14000763c:	add    BYTE PTR [rax],al
   14000763e:	add    BYTE PTR [rax],al
   140007640:	push   rax
   140007641:	add    BYTE PTR [rdx],bh
   140007643:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400a649
   140007649:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000764d:	add    BYTE PTR [rax+rax*1+0x3a],dl
   140007651:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400a657
   140007657:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000765b:	add    BYTE PTR [rip+0x25007300],ah        # 0x16500e961
   140007661:	add    BYTE PTR [rbx+0x0],dh
   140007664:	add    BYTE PTR [rax],al
   140007666:	add    BYTE PTR [rax],al
   140007668:	add    BYTE PTR cs:[rsi],ch
   14000766b:	add    BYTE PTR [rsi],ch
   14000766d:	add    BYTE PTR [rax],al
   14000766f:	add    BYTE PTR [rcx+0x44],al
   140007672:	push   rsi
   140007673:	push   r8
   140007675:	xor    rsi,QWORD PTR [r10]
   140007678:	cs fs ins BYTE PTR es:[rdi],dx
   14000767b:	ins    BYTE PTR es:[rdi],dx
   14000767c:	add    BYTE PTR [rax],al
   14000767e:	add    BYTE PTR [rax],al
   140007680:	pop    rax
   140007681:	ja     0x140007683
   140007683:	rex add DWORD PTR [rax],eax
   140007686:	add    BYTE PTR [rax],al
   140007688:	clc    
   140007689:	rex.WX add BYTE PTR [rax+0x1],al
   14000768d:	add    BYTE PTR [rax],al
   14000768f:	add    BYTE PTR [rax+0x1400091],dl
   140007695:	add    BYTE PTR [rax],al
   140007697:	add    BYTE PTR [rax],dh
   140007699:	xchg   edx,eax
   14000769a:	add    BYTE PTR [rax+0x1],al
   14000769d:	add    BYTE PTR [rax],al
   14000769f:	add    BYTE PTR [rbx+0x48],dl
   1400076a2:	rex.RB
   1400076a3:	rex.WR
   1400076a4:	xor    r14,QWORD PTR [rdx]
   1400076a7:	cs fs ins BYTE PTR es:[rdi],dx
   1400076aa:	ins    BYTE PTR es:[rdi],dx
   1400076ab:	add    BYTE PTR [rax],al
   1400076ad:	add    BYTE PTR [rax],al
   1400076af:	add    BYTE PTR [rbx+0x48],dl
   1400076b2:	rex.WR push rdi
   1400076b4:	push   r8
   1400076b6:	rex.WB
   1400076b7:	cs fs ins BYTE PTR es:[rdi],dx
   1400076ba:	ins    BYTE PTR es:[rdi],dx
   1400076bb:	add    BYTE PTR [rax],al
   1400076bd:	add    BYTE PTR [rax],al
   1400076bf:	add    BYTE PTR [rdx],ah
   1400076c1:	add    eax,0x21993
   1400076c6:	add    BYTE PTR [rax],al
   1400076c8:	movabs al,ds:0x7800000001000080
   1400076d1:	add    BYTE PTR [rax],0x0
   1400076d4:	add    al,0x0
   1400076d6:	add    BYTE PTR [rax],al
   1400076d8:	mov    al,0x80
   1400076da:	add    BYTE PTR [rax],al
   1400076dc:	add    BYTE PTR [rax],al
   1400076df:	add    BYTE PTR [rax],al
   1400076e1:	add    BYTE PTR [rax],al
   1400076e3:	add    BYTE PTR [rcx],al
   1400076e5:	add    BYTE PTR [rax],al
   1400076e7:	add    BYTE PTR [rax+0x1400058],dh
   1400076ed:	add    BYTE PTR [rax],al
   1400076ef:	add    BYTE PTR [rdx+0x53],dl
   1400076f2:	rex.R push rbx
   1400076f4:	and    al,0xa
   1400076f6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400076f7:	push   rbx
   1400076f8:	and    DWORD PTR [rsi-0x15],edx
   1400076fb:	rex.WRB xchg r8,rax
   1400076fd:	xchg   DWORD PTR [rsp+rax*1-0x64],esp
   140007701:	push   rcx
   140007702:	test   DWORD PTR [rcx+rax*1+0x43000000],edi
   140007709:	cmp    bl,BYTE PTR [rdx+rsi*2+0x65]
   14000770d:	pop    rsp
   14000770e:	push   0x64
   140007710:	imul   esi,DWORD PTR [rdi],0x75
   140007713:	xor    BYTE PTR ss:[rcx+rsi*1+0x30],bl
   140007718:	cmp    BYTE PTR [rcx],dh
   14000771a:	pop    rsp
   14000771b:	(bad)  
   14000771c:	jne    0x140007787
   14000771e:	ins    BYTE PTR es:[rdi],dx
   14000771f:	fs pop rsp
   140007721:	ja     0x14000778c
   140007723:	outs   dx,BYTE PTR ds:[rsi]
   140007724:	outs   dx,DWORD PTR fs:[rsi]
   140007726:	ja     0x14000779b
   140007728:	sub    eax,0x36646d61
   14000772d:	xor    al,0x5c
   14000772f:	je     0x14000779e
   140007731:	jo     0x14000778f
   140007733:	push   0x61
   140007735:	jbe    0x140007798
   140007737:	movsxd esi,DWORD PTR [rax+0x6c]
   14000773a:	gs js  0x1400077a2
   14000773d:	movsxd ebx,DWORD PTR [rdi+rbp*2+0x62]
   140007741:	push   0x36
   140007743:	xor    al,0x5c
   140007745:	push   0x61
   140007747:	jbe    0x1400077aa
   140007749:	movsxd esi,DWORD PTR [rax+0x6c]
   14000774c:	cs jo  0x1400077b3
   14000774f:	(bad)  
	...
   140007758:	add    DWORD PTR [rax],eax
	...
   140007762:	add    BYTE PTR [rax],al
   140007764:	rex xchg eax,eax
   140007766:	add    BYTE PTR [rax],al
   140007768:	xor    BYTE PTR [rdi+0x0],0x0
   14000776c:	pop    rax
   14000776d:	ja     0x14000776f
	...
   140007787:	add    BYTE PTR [rcx],al
   140007789:	add    BYTE PTR [rax],al
   14000778b:	add    BYTE PTR [rax+0x77],bl
   140007791:	add    BYTE PTR [rax],al
   140007793:	add    BYTE PTR [rax],al
   140007795:	add    BYTE PTR [rax],al
   140007797:	add    BYTE PTR [rax+0x77],ch
	...
   1400077a5:	add    BYTE PTR [rax],al
   1400077a7:	add    BYTE PTR [rax-0x70],al
	...
   1400077b2:	add    BYTE PTR [rax],al
   1400077b4:	(bad)  
   1400077b5:	(bad)  
   1400077b6:	(bad)  
   1400077b7:	inc    DWORD PTR [rax]
   1400077b9:	add    BYTE PTR [rax],al
   1400077bb:	add    BYTE PTR [rax+0x0],al
   1400077be:	add    BYTE PTR [rax],al
   1400077c0:	xor    BYTE PTR [rdi+0x0],0x0
	...
   1400077f0:	add    DWORD PTR [rdx],ecx
   1400077f2:	add    al,0x0
   1400077f4:	or     dh,BYTE PTR [rsi+rax*1]
   1400077f7:	add    BYTE PTR [rdx],cl
   1400077f9:	xor    al,BYTE PTR [rsi]
   1400077fb:	jo     0x1400077fe
   1400077fd:	(bad)  
   1400077fe:	add    al,BYTE PTR [rax]
   140007800:	(bad)  
   140007801:	xor    al,BYTE PTR [rdx]
   140007803:	xor    BYTE PTR [rcx],bl
   140007805:	sbb    eax,DWORD PTR [rbx]
   140007807:	add    BYTE PTR [rcx],cl
   140007809:	add    DWORD PTR [rsi],eax
   14000780b:	add    DWORD PTR [rdx],eax
   14000780d:	xor    BYTE PTR [rax],al
   14000780f:	add    BYTE PTR [rcx+rcx*2+0x8200000],al
   140007816:	add    BYTE PTR [rax],al
   140007818:	add    DWORD PTR [rsi],eax
   14000781a:	add    al,BYTE PTR [rax]
   14000781c:	(bad)  
   14000781d:	xor    al,BYTE PTR [rdx]
   14000781f:	xor    BYTE PTR [rcx],al
   140007821:	add    eax,0x74050002
   140007826:	add    DWORD PTR [rax],eax
   140007828:	sbb    DWORD PTR [rbx],esp
   14000782a:	add    eax,0xa011100
   14000782f:	add    al,BYTE PTR [rax+rsi*2]
   140007832:	add    edx,DWORD PTR [rax+0x2]
   140007835:	xor    BYTE PTR [rax],al
   140007837:	add    BYTE PTR [rcx+rcx*2+0x10400000],al
   14000783e:	add    BYTE PTR [rax],al
   140007840:	(bad)  
   140007841:	(bad)  
   140007842:	(bad)  
   140007843:	(bad)  
   140007844:	jl     0x1400078a2
   140007846:	add    BYTE PTR [rax],al
   140007848:	sbb    DWORD PTR [rbx+0xb],eax
   14000784b:	add    BYTE PTR [rdx],dh
   14000784d:	xor    al,0x7a
   14000784f:	add    esp,DWORD PTR [rcx]
   140007851:	add    DWORD PTR [rax+0x3],esi
   140007854:	or     al,0xf0
   140007856:	or     ah,al
   140007858:	or     al,dl
   14000785a:	(bad)  
   14000785b:	rol    BYTE PTR [rax+rsi*2],0x3
   14000785f:	(bad)  
   140007860:	add    dl,BYTE PTR [rax+0x0]
   140007863:	add    BYTE PTR [rdx+rcx*2+0x0],bl
   140007867:	add    BYTE PTR [rax+0x66],bl
   14000786a:	add    BYTE PTR [rax],al
   14000786c:	jb     0x140007889
   14000786e:	add    BYTE PTR [rax],al
   140007870:	in     al,0x12
   140007872:	add    BYTE PTR [rax],al
   140007874:	(bad)  
   140007875:	(bad)  
   140007876:	(bad)  
   140007877:	(bad)  
   140007878:	mov    edi,0x13
   14000787d:	add    BYTE PTR [rax],al
   14000787f:	add    dl,dh
   140007881:	adc    eax,DWORD PTR [rax]
   140007883:	add    bh,bh
   140007885:	(bad)  
   140007886:	(bad)  
   140007887:	call   FWORD PTR [rcx]
   140007889:	xor    eax,0x74240009
   14000788e:	or     eax,0xb642403
   140007893:	add    esp,DWORD PTR [rsp+rsi*1]
   140007896:	or     al,BYTE PTR [rbx]
   140007898:	and    al,0x1
   14000789a:	or     BYTE PTR [rbx],al
   14000789c:	adc    BYTE PTR [rax+0x0],dl
   14000789f:	add    BYTE PTR [rcx+rcx*2+0x18300000],al
   1400078a6:	add    BYTE PTR [rax],al
   1400078a8:	adc    DWORD PTR [rcx],ebx
   1400078aa:	(bad)  
   1400078ab:	add    BYTE PTR [rcx],bl
   1400078ad:	or     al,BYTE PTR fs:[rax]
   1400078b0:	adc    al,0x34
   1400078b2:	or     DWORD PTR [rax],eax
   1400078b4:	(bad)  
   1400078b5:	push   rdx
   1400078b6:	add    dh,BYTE PTR [rax+0x4e]
   1400078b9:	rex.WX add BYTE PTR [rax],al
   1400078bc:	and    BYTE PTR [rsi+0x0],0x0
   1400078c0:	(bad)  
   1400078c1:	(bad)  
   1400078c2:	(bad)  
   1400078c3:	push   QWORD PTR [rax+0x5c]
   1400078c6:	add    BYTE PTR [rax],al
   1400078c8:	(bad)  
   1400078c9:	(bad)  
   1400078ca:	add    BYTE PTR [rax],al
   1400078cc:	(bad)  
   1400078cd:	(bad)  
   1400078ce:	(bad)  
   1400078cf:	call   QWORD PTR [rcx+0x17]
   1400078d5:	add    BYTE PTR [rax],al
   1400078d7:	add    BYTE PTR [rcx-0xffffe9],dh
   1400078dd:	(bad)  
   1400078de:	(bad)  
   1400078df:	call   QWORD PTR [rcx]
   1400078e1:	sbb    DWORD PTR [rsi],eax
   1400078e3:	add    BYTE PTR [rcx],bl
   1400078e5:	or     DWORD PTR fs:[rax],eax
   1400078e8:	adc    al,0x34
   1400078ea:	or     BYTE PTR [rax],al
   1400078ec:	(bad)  
   1400078ed:	push   rdx
   1400078ee:	add    dh,BYTE PTR [rax+0x4e]
   1400078f1:	rex.WX add BYTE PTR [rax],al
   1400078f4:	mov    al,0x66
   1400078f6:	add    BYTE PTR [rax],al
   1400078f8:	fcom   DWORD PTR [rdi]
   1400078fa:	add    BYTE PTR [rax],al
   1400078fc:	(bad)  
   1400078fd:	(bad)  
   1400078fe:	(bad)  
   1400078ff:	dec    DWORD PTR [rcx]
   140007901:	sbb    BYTE PTR [rax],al
   140007903:	add    BYTE PTR [rax],al
   140007905:	add    BYTE PTR [rax],al
   140007907:	add    BYTE PTR [rip+0xffffffffff000018],bh        # 0x13f007925
   14000790d:	(bad)  
   14000790e:	(bad)  
   14000790f:	inc    DWORD PTR [rcx]
   140007911:	or     al,BYTE PTR [rax+rax*1]
   140007914:	or     dh,BYTE PTR [rdi+rax*1]
   140007917:	add    BYTE PTR [rdx],cl
   140007919:	xor    al,BYTE PTR [rsi]
   14000791b:	jo     0x14000791e
   14000791d:	adc    al,0x8
   14000791f:	add    BYTE PTR [rsp+riz*2],dl
   140007922:	or     al,0x0
   140007924:	adc    al,0x54
   140007926:	or     eax,DWORD PTR [rax]
   140007928:	adc    al,0x34
   14000792a:	or     al,BYTE PTR [rax]
   14000792c:	adc    al,0x72
   14000792e:	adc    BYTE PTR [rax+0x1],dh
   140007931:	clts   
   140007933:	add    BYTE PTR [rdi],cl
   140007935:	or     DWORD PTR fs:[rax],eax
   140007938:	sysenter 
   14000793a:	or     BYTE PTR [rax],al
   14000793c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000793f:	jo     0x140007942
   140007941:	or     al,BYTE PTR [rax+rax*1]
   140007944:	or     dh,BYTE PTR [rsi+rax*1]
   140007947:	add    BYTE PTR [rdx],cl
   140007949:	xor    al,BYTE PTR [rsi]
   14000794b:	jo     0x14000794e
   14000794d:	or     al,0x4
   14000794f:	add    BYTE PTR [rsp+rsi*1],cl
   140007952:	or     DWORD PTR [rax],eax
   140007954:	or     al,0x52
   140007956:	or     BYTE PTR [rax+0x1],dh
   140007959:	(bad)  
   14000795a:	add    al,BYTE PTR [rax]
   14000795c:	(bad)  
   14000795d:	xor    al,BYTE PTR [rdx]
   14000795f:	xor    BYTE PTR [rcx],al
   140007961:	or     eax,DWORD PTR [rax+rax*1]
   140007964:	or     esi,DWORD PTR [rdx+rax*1+0x0]
   140007968:	(bad)  
   140007969:	add    DWORD PTR fs:[rax],eax
   14000796c:	add    DWORD PTR [rsi],eax
   14000796e:	add    al,BYTE PTR [rax]
   140007970:	(bad)  
   140007971:	xor    al,BYTE PTR [rdx]
   140007973:	xor    BYTE PTR [rcx],bl
   140007975:	sbb    DWORD PTR [rdx],eax
   140007977:	add    BYTE PTR [rdi],al
   140007979:	add    DWORD PTR [rbx],ebp
   14000797b:	add    BYTE PTR [rcx+rcx*2+0x1400000],al
   140007982:	add    BYTE PTR [rax],al
   140007984:	sbb    DWORD PTR [rcx],ebx
   140007986:	add    al,BYTE PTR [rax]
   140007988:	(bad)  
   140007989:	add    DWORD PTR [rbx],ebp
   14000798b:	add    BYTE PTR [rcx+rcx*2+0x1400000],al
   140007992:	add    BYTE PTR [rax],al
   140007994:	sbb    DWORD PTR [rbx],ebx
   140007996:	add    eax,DWORD PTR [rax]
   140007998:	or     DWORD PTR [rcx],eax
   14000799a:	sub    al,BYTE PTR [rax]
   14000799c:	add    dh,BYTE PTR [rax]
   14000799e:	add    BYTE PTR [rax],al
   1400079a0:	test   BYTE PTR [rcx+0x0],cl
   1400079a3:	add    BYTE PTR [rax+0x1],al
   1400079a6:	add    BYTE PTR [rax],al
   1400079a8:	sbb    DWORD PTR [rbx],ebx
   1400079aa:	add    eax,DWORD PTR [rax]
   1400079ac:	or     DWORD PTR [rcx],eax
   1400079ae:	sub    al,BYTE PTR [rax]
   1400079b0:	add    dh,BYTE PTR [rax]
   1400079b2:	add    BYTE PTR [rax],al
   1400079b4:	test   BYTE PTR [rcx+0x0],cl
   1400079b7:	add    BYTE PTR [rax+0x1],al
   1400079ba:	add    BYTE PTR [rax],al
   1400079bc:	sbb    DWORD PTR [rbx],ebx
   1400079be:	add    eax,DWORD PTR [rax]
   1400079c0:	or     DWORD PTR [rcx],eax
   1400079c2:	sub    al,BYTE PTR [rax]
   1400079c4:	add    dh,BYTE PTR [rax]
   1400079c6:	add    BYTE PTR [rax],al
   1400079c8:	test   BYTE PTR [rcx+0x0],cl
   1400079cb:	add    BYTE PTR [rax+0x1],al
   1400079ce:	add    BYTE PTR [rax],al
   1400079d0:	add    DWORD PTR [rsi],eax
   1400079d2:	add    al,BYTE PTR [rax]
   1400079d4:	(bad)  
   1400079d5:	xor    al,BYTE PTR [rdx]
   1400079d7:	xor    BYTE PTR [rcx],al
   1400079d9:	add    al,0x1
   1400079db:	add    BYTE PTR [rdx+riz*4],al
   1400079de:	add    BYTE PTR [rax],al
   1400079e0:	add    DWORD PTR [rsi],eax
   1400079e2:	add    al,BYTE PTR [rax]
   1400079e4:	(bad)  
   1400079e5:	jb     0x1400079e9
   1400079e7:	xor    BYTE PTR [rcx],bl
   1400079e9:	(bad)  
   1400079ea:	add    eax,0x8d340d00
   1400079ef:	add    BYTE PTR [rip+0x6008a01],cl        # 0x1460103f6
   1400079f5:	(bad)  
   1400079f6:	add    BYTE PTR [rax],al
   1400079f8:	test   BYTE PTR [rcx+0x0],cl
   1400079fb:	add    BYTE PTR [rax+0x4],al
   1400079fe:	add    BYTE PTR [rax],al
   140007a00:	add    DWORD PTR [rcx+rax*1],eax
   140007a03:	add    BYTE PTR [rdx+riz*4],al
   140007a06:	add    BYTE PTR [rax],al
   140007a08:	add    DWORD PTR [rcx+rax*1],eax
   140007a0b:	add    BYTE PTR [rdx+rax*8],al
   140007a0e:	add    BYTE PTR [rax],al
   140007a10:	add    DWORD PTR [rdx],ebx
   140007a12:	or     DWORD PTR [rax],eax
   140007a14:	sbb    ah,BYTE PTR [rbx+riz*1+0x0]
   140007a18:	sbb    dh,BYTE PTR [rdx+riz*1]
   140007a1b:	add    BYTE PTR [rdx],bl
   140007a1d:	add    DWORD PTR [rsi],ebx
   140007a1f:	add    BYTE PTR [rsi],cl
   140007a21:	ror    BYTE PTR [rax+rsi*2],0xb
   140007a25:	push   rax
   140007a26:	add    BYTE PTR [rax],al
   140007a28:	sbb    DWORD PTR [rip+0x74240009],esi        # 0x1b4247a37
   140007a2e:	syscall 
   140007a30:	and    al,0x64
   140007a32:	(bad)  
   140007a33:	add    eax,0x50d3424
   140007a38:	and    al,0x1
   140007a3a:	or     al,BYTE PTR [rip+0x5010]        # 0x14000ca50
   140007a40:	test   BYTE PTR [rcx+0x0],cl
   140007a43:	add    BYTE PTR [rax+0x28],al
   140007a46:	add    BYTE PTR [rax],al
   140007a48:	add    DWORD PTR [rcx+rax*1],eax
   140007a4b:	add    BYTE PTR [rdx+riz*4],al
   140007a4e:	add    BYTE PTR [rax],al
   140007a50:	add    DWORD PTR [rcx+rax*1],eax
   140007a53:	add    BYTE PTR [rdx+riz*4],al
   140007a56:	add    BYTE PTR [rax],al
   140007a58:	add    DWORD PTR [rcx+rax*1],eax
   140007a5b:	add    BYTE PTR [rdx+riz*4],al
   140007a5e:	add    BYTE PTR [rax],al
   140007a60:	sbb    DWORD PTR [rcx+rcx*1],esi
   140007a63:	add    BYTE PTR [rbx],ah
   140007a65:	adc    DWORD PTR fs:[rdx],eax
   140007a68:	and    esi,DWORD PTR [rdi+rcx*1]
   140007a6b:	add    ah,BYTE PTR [rbx]
   140007a6d:	add    DWORD PTR [rdx],ecx
   140007a6f:	add    cl,BYTE PTR [rsi]
   140007a71:	ror    BYTE PTR [rax+rsi*2],0xb
   140007a75:	push   rax
   140007a76:	add    BYTE PTR [rax],al
   140007a78:	test   BYTE PTR [rcx+0x0],cl
   140007a7b:	add    BYTE PTR [rax+0x10],al
   140007a7e:	add    BYTE PTR [rax],al
   140007a80:	sbb    DWORD PTR [rdi],esp
   140007a82:	or     al,BYTE PTR [rax]
   140007a84:	sbb    DWORD PTR [rcx],eax
   140007a86:	(bad)  
   140007a87:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e0867d
   140007a8d:	rol    BYTE PTR [rdi],1
   140007a8f:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143607f06
   140007a96:	add    dl,BYTE PTR [rax-0x7c]
   140007a99:	rex.WB add BYTE PTR [r8],al
   140007a9c:	test   al,0x0
   140007a9e:	add    BYTE PTR [rax],al
   140007aa0:	(bad)  
   140007aa1:	(bad)  
   140007aa2:	(bad)  
   140007aa3:	inc    DWORD PTR [rax]
   140007aa5:	add    BYTE PTR [rax],al
   140007aa7:	add    bh,bh
   140007aa9:	(bad)  
   140007aaa:	(bad)  
   140007aab:	inc    DWORD PTR [rax]
   140007aad:	add    BYTE PTR [rax],al
   140007aaf:	add    bh,bh
   140007ab1:	(bad)  
   140007ab2:	(bad)  
   140007ab3:	inc    DWORD PTR [rax]
   140007ab5:	add    BYTE PTR [rax],al
   140007ab7:	add    bh,bh
   140007ab9:	(bad)  
   140007aba:	(bad)  
   140007abb:	inc    DWORD PTR [rax]
   140007abd:	add    BYTE PTR [rax],al
   140007abf:	add    bh,bh
   140007ac1:	(bad)  
   140007ac2:	(bad)  
   140007ac3:	inc    DWORD PTR [rax]
   140007ac5:	add    BYTE PTR [rax],al
   140007ac7:	add    bh,bh
   140007ac9:	(bad)  
   140007aca:	(bad)  
   140007acb:	inc    DWORD PTR [rax]
   140007acd:	add    BYTE PTR [rax],al
   140007acf:	add    BYTE PTR [rax],cl
   140007ad1:	add    BYTE PTR [rax],al
   140007ad3:	add    BYTE PTR [rax],al
   140007ad5:	nop
   140007ad6:	add    BYTE PTR [rax],al
   140007ad8:	cmp    BYTE PTR [rax],al
   140007ada:	add    BYTE PTR [rax],al
   140007adc:	mov    BYTE PTR [rax+rax*1+0x0],bl
   140007ae0:	pop    rax
   140007ae1:	add    BYTE PTR [rax],al
   140007ae3:	add    BYTE PTR [rax],cl
   140007ae5:	add    BYTE PTR [rax],al
   140007ae7:	add    BYTE PTR [rax],al
   140007ae9:	nop
   140007aea:	add    BYTE PTR [rax],al
   140007aec:	add    BYTE PTR [rax],al
   140007aef:	add    al,cl
   140007af1:	pop    rsp
   140007af2:	add    BYTE PTR [rax],al
   140007af4:	pop    rax
   140007af5:	add    BYTE PTR [rax],al
   140007af7:	add    BYTE PTR [rax],cl
   140007af9:	add    BYTE PTR [rax],al
   140007afb:	add    BYTE PTR [rax],al
   140007afd:	nop
   140007afe:	add    BYTE PTR [rax],al
   140007b00:	rex.W add BYTE PTR [rax],al
   140007b03:	add    BYTE PTR [rax],cl
   140007b05:	pop    rbp
   140007b06:	add    BYTE PTR [rax],al
   140007b08:	pop    rax
	...
   140007b11:	add    BYTE PTR [rax],al
   140007b13:	add    BYTE PTR [rcx],al
   140007b15:	add    BYTE PTR [rax],al
   140007b17:	add    BYTE PTR [rcx],al
   140007b19:	add    BYTE PTR [rax],al
   140007b1b:	add    al,dl
   140007b1d:	jp     0x140007b1f
   140007b1f:	add    BYTE PTR [rdx],al
   140007b21:	add    BYTE PTR [rax],al
   140007b23:	add    BYTE PTR [rdx],al
   140007b25:	add    BYTE PTR [rax],al
   140007b27:	add    BYTE PTR [rbx],al
   140007b29:	add    BYTE PTR [rax],al
   140007b2b:	add    BYTE PTR [rcx],al
   140007b2d:	add    BYTE PTR [rax],al
   140007b2f:	add    ah,ah
   140007b31:	jp     0x140007b33
   140007b33:	add    BYTE PTR [rax+rax*1],al
   140007b36:	add    BYTE PTR [rax],al
   140007b38:	add    al,0x0
   140007b3a:	add    BYTE PTR [rax],al
   140007b3c:	add    eax,0x1000000
   140007b41:	add    BYTE PTR [rax],al
   140007b43:	add    al,bh
   140007b45:	jp     0x140007b47
   140007b47:	add    BYTE PTR [rcx],bl
   140007b49:	sbb    eax,0x641d0006
   140007b4e:	ltr    WORD PTR [rcx]
   140007b51:	xor    al,0xe
   140007b53:	add    BYTE PTR [rdx+rdx*4],cl
   140007b56:	or     BYTE PTR [rax+0x4e],dh
   140007b59:	rex.WX add BYTE PTR [rax],al
   140007b5c:	clc    
   140007b5d:	jb     0x140007b5f
   140007b5f:	add    BYTE PTR [rcx],bl
   140007b61:	or     eax,DWORD PTR [rbx]
   140007b63:	add    BYTE PTR [rbx],cl
   140007b65:	(bad)  
   140007b66:	(bad)  
   140007b67:	push   rax
   140007b68:	(bad)  
   140007b69:	xor    BYTE PTR [rax],al
   140007b6b:	add    BYTE PTR [rsi+0x4a],cl
   140007b6e:	add    BYTE PTR [rax],al
   140007b70:	clc    
   140007b71:	jb     0x140007b73
   140007b73:	add    BYTE PTR [rcx],bl
   140007b75:	or     eax,DWORD PTR [rbx]
   140007b77:	add    BYTE PTR [rbx],cl
   140007b79:	(bad)  
   140007b7a:	(bad)  
   140007b7b:	push   rax
   140007b7c:	(bad)  
   140007b7d:	xor    BYTE PTR [rax],al
   140007b7f:	add    BYTE PTR [rsi+0x4a],cl
   140007b82:	add    BYTE PTR [rax],al
   140007b84:	clc    
   140007b85:	jb     0x140007b87
   140007b87:	add    BYTE PTR [rcx],bl
   140007b89:	or     eax,DWORD PTR [rbx]
   140007b8b:	add    BYTE PTR [rbx],cl
   140007b8d:	(bad)  
   140007b8e:	(bad)  
   140007b8f:	push   rax
   140007b90:	(bad)  
   140007b91:	xor    BYTE PTR [rax],al
   140007b93:	add    BYTE PTR [rsi+0x4a],cl
   140007b96:	add    BYTE PTR [rax],al
   140007b98:	clc    
   140007b99:	jb     0x140007b9b
   140007b9b:	add    BYTE PTR [rbx+rbp*1],al
   140007b9e:	add    BYTE PTR [rax],al
   140007ba0:	(bad)  
   140007ba1:	(bad)  
   140007ba2:	(bad)  
   140007ba3:	jmp    FWORD PTR [rcx]
   140007ba5:	sub    eax,DWORD PTR [rax]
   140007ba7:	add    BYTE PTR [rax],al
   140007ba9:	add    BYTE PTR [rax],al
   140007bab:	add    BYTE PTR [rbx+0x2b],ah
   140007bae:	add    BYTE PTR [rax],al
   140007bb0:	(bad)  
   140007bb1:	(bad)  
   140007bb2:	(bad)  
   140007bb3:	push   QWORD PTR [rdx+0x2b]
   140007bb6:	add    BYTE PTR [rax],al
   140007bb8:	add    al,BYTE PTR [rax]
   140007bba:	add    BYTE PTR [rax],al
   140007bbc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140007bbd:	sub    eax,DWORD PTR [rax]
   140007bbf:	add    bh,bh
   140007bc1:	(bad)  
   140007bc2:	(bad)  
   140007bc3:	push   QWORD PTR [rsi+0x400002b]
   140007bc9:	add    BYTE PTR [rax],al
   140007bcb:	add    cl,ch
   140007bcd:	sub    eax,DWORD PTR [rax]
   140007bcf:	add    bh,bh
   140007bd1:	(bad)  
   140007bd2:	(bad)  
   140007bd3:	dec    DWORD PTR [rax+0x5c]
   140007bd9:	add    BYTE PTR [rax],al
   140007bdb:	add    BYTE PTR [rsi+0x100005c],dl
   140007be1:	add    BYTE PTR [rax],al
   140007be3:	add    BYTE PTR [rdi+0x5c],dh
   140007be9:	add    BYTE PTR [rax],al
   140007beb:	add    dh,dl
   140007bed:	pop    rsp
   140007bee:	add    BYTE PTR [rax],al
   140007bf0:	add    eax,DWORD PTR [rax]
   140007bf2:	add    BYTE PTR [rax],al
   140007bf4:	neg    DWORD PTR [rax+rax*1+0x0]
   140007bf8:	add    BYTE PTR [rax],al
   140007bfa:	add    BYTE PTR [rax],al
   140007bfc:	(bad)  
   140007bfd:	pop    rbp
   140007bfe:	add    BYTE PTR [rax],al
   140007c00:	add    eax,0x37000000
   140007c05:	pop    rbp
   140007c06:	add    BYTE PTR [rax],al
   140007c08:	add    BYTE PTR [rax],al
   140007c0a:	add    BYTE PTR [rax],al
   140007c0c:	sbb    DWORD PTR [rsi],esi
   140007c0e:	or     eax,DWORD PTR [rax]
   140007c10:	and    eax,0x25041534
   140007c15:	add    DWORD PTR [rsp+rax*1],ecx
   140007c18:	adc    al,dh
   140007c1a:	(bad)  
   140007c1b:	loopne 0x140007c29
   140007c1d:	ror    BYTE PTR [rdx],1
   140007c1f:	ror    BYTE PTR [rax],0x70
   140007c22:	(bad)  
   140007c23:	(bad)  
   140007c24:	(bad)  
   140007c25:	push   rax
   140007c26:	add    BYTE PTR [rax],al
   140007c28:	test   BYTE PTR [rcx+0x0],cl
   140007c2b:	add    BYTE PTR [rax+0x20],dl
   140007c2e:	add    BYTE PTR [rax],al
   140007c30:	sbb    DWORD PTR [rdi],esi
   140007c32:	or     eax,0x1dd42600
   140007c37:	add    DWORD PTR [rsi],esp
   140007c39:	je     0x140007c57
   140007c3b:	add    DWORD PTR [rsi],esp
   140007c3d:	sbb    eax,DWORD PTR fs:[rcx]
   140007c40:	es xor al,0x1a
   140007c43:	add    DWORD PTR [rsi],esp
   140007c45:	add    DWORD PTR [rsi],edx
   140007c47:	add    DWORD PTR [rax],ebx
   140007c49:	lock (bad) 
   140007c4b:	loopne 0x140007c61
   140007c4d:	push   rax
   140007c4e:	add    BYTE PTR [rax],al
   140007c50:	test   BYTE PTR [rcx+0x0],cl
   140007c53:	add    BYTE PTR [rax+0x1000008],ah
   140007c59:	and    cl,BYTE PTR [rax+rax*1]
   140007c5c:	and    dh,BYTE PTR [rax+rbx*1+0x0]
   140007c60:	and    ah,BYTE PTR [rdi+rdx*1+0x0]
   140007c64:	and    dh,BYTE PTR [rsi+rdx*1]
   140007c67:	add    BYTE PTR [rdx],ah
   140007c69:	repnz sbb al,dh
   140007c6c:	(bad)  
   140007c6d:	loopne 0x140007c83
   140007c6f:	rcl    BYTE PTR [rdx],1
   140007c71:	rcl    BYTE PTR [rax],0x50
   140007c74:	sbb    DWORD PTR [rdx],esp
   140007c76:	or     BYTE PTR [rax],al
   140007c78:	adc    BYTE PTR [rcx],al
   140007c7a:	or     DWORD PTR [rcx],eax
   140007c7c:	or     eax,esi
   140007c7e:	(bad)  
   140007c7f:	loopne 0x140007c86
   140007c81:	jo     0x140007c87
   140007c83:	(bad)  
   140007c84:	add    edx,DWORD PTR [rax+0x2]
   140007c87:	xor    BYTE PTR [rcx+rcx*2+0x8300000],al
   140007c8e:	add    BYTE PTR [rax],al
   140007c90:	sbb    DWORD PTR [rsi],esi
   140007c92:	or     eax,DWORD PTR [rax]
   140007c94:	and    eax,0x25021e34
   140007c99:	add    DWORD PTR [rsi],edx
   140007c9b:	add    dl,BYTE PTR [rax]
   140007c9d:	lock (bad) 
   140007c9f:	loopne 0x140007cad
   140007ca1:	ror    BYTE PTR [rdx],1
   140007ca3:	ror    BYTE PTR [rax],0x70
   140007ca6:	(bad)  
   140007ca7:	(bad)  
   140007ca8:	(bad)  
   140007ca9:	push   rax
   140007caa:	add    BYTE PTR [rax],al
   140007cac:	test   BYTE PTR [rcx+0x0],cl
   140007caf:	add    BYTE PTR [rax+0x19000010],ah
   140007cb5:	cmp    DWORD PTR [rbx],ecx
   140007cb7:	add    BYTE PTR [rax],ch
   140007cb9:	je     0x140007cd3
   140007cbb:	add    ch,BYTE PTR [rax]
   140007cbd:	fs (bad) 
   140007cbf:	add    ch,BYTE PTR [rax]
   140007cc1:	xor    al,0x16
   140007cc3:	add    ch,BYTE PTR [rax]
   140007cc5:	add    DWORD PTR [rdx],edx
   140007cc7:	add    dl,BYTE PTR [rax+rdx*8]
   140007cca:	adc    al,al
   140007ccc:	adc    BYTE PTR [rax+0x0],dl
   140007ccf:	add    BYTE PTR [rcx+rcx*2+0x10800000],al
   140007cd6:	add    BYTE PTR [rax],al
   140007cd8:	(bad)  
   140007cd9:	(bad)  
   140007cda:	(bad)  
   140007cdb:	inc    DWORD PTR [rax]
   140007cdd:	add    BYTE PTR [rax],al
   140007cdf:	add    bh,bh
   140007ce1:	(bad)  
   140007ce2:	(bad)  
   140007ce3:	inc    DWORD PTR [rax]
   140007ce5:	add    BYTE PTR [rax],al
   140007ce7:	add    BYTE PTR [rax],cl
   140007ce9:	add    BYTE PTR [rax],al
   140007ceb:	add    BYTE PTR [rax],al
   140007ced:	nop
   140007cee:	add    BYTE PTR [rax],al
   140007cf0:	cmp    BYTE PTR [rax],al
   140007cf2:	add    BYTE PTR [rax],al
   140007cf4:	pop    rax
   140007cf5:	pop    rbp
   140007cf6:	add    BYTE PTR [rax],al
   140007cf8:	rex.W add BYTE PTR [rax],al
	...
   140007d03:	add    BYTE PTR [rcx],al
   140007d05:	add    BYTE PTR [rax],al
   140007d07:	add    BYTE PTR [rcx],al
   140007d09:	add    BYTE PTR [rax],al
   140007d0b:	add    al,ch
   140007d0d:	jl     0x140007d0f
   140007d0f:	add    BYTE PTR [rcx],bl
   140007d11:	sub    eax,0x341b0007
   140007d16:	push   rdx
   140007d17:	add    BYTE PTR [rsi],cl
   140007d19:	add    DWORD PTR [rax+rax*1+0x7],ecx
   140007d1d:	rol    BYTE PTR [rip+0x600470],0x0        # 0x140608194
   140007d24:	pop    rsp
   140007d25:	rex.WX add BYTE PTR [rax],al
   140007d28:	and    BYTE PTR [rbx+0x0],dh
   140007d2b:	add    BYTE PTR [rbx+0x2],dl
   140007d2e:	add    BYTE PTR [rax],al
   140007d30:	sbb    DWORD PTR [rbx],ecx
   140007d32:	add    eax,DWORD PTR [rax]
   140007d34:	or     eax,DWORD PTR [rdx+0x7]
   140007d37:	push   rax
   140007d38:	(bad)  
   140007d39:	xor    BYTE PTR [rax],al
   140007d3b:	add    BYTE PTR [rsi+0x4a],cl
   140007d3e:	add    BYTE PTR [rax],al
   140007d40:	and    BYTE PTR [rbx+0x0],dh
   140007d43:	add    BYTE PTR [rcx+rdi*1-0x10000],dh
   140007d4a:	(bad)  
   140007d4b:	(bad)  
   140007d4c:	in     al,dx
   140007d4d:	cmp    DWORD PTR [rax],eax
   140007d4f:	add    BYTE PTR [rax],al
   140007d51:	add    BYTE PTR [rax],al
   140007d53:	add    BYTE PTR [rdx+rdi*1-0x10000],al
   140007d5a:	(bad)  
   140007d5b:	call   FWORD PTR [rax+0x5d]
   140007d5e:	add    BYTE PTR [rax],al
   140007d60:	add    BYTE PTR [rax],al
   140007d62:	add    BYTE PTR [rax],al
   140007d64:	pop    bp
   140007d66:	add    BYTE PTR [rax],al
   140007d68:	add    DWORD PTR [rax],eax
   140007d6a:	add    BYTE PTR [rax],al
   140007d6c:	xchg   DWORD PTR [rbp+0x0],ebx
   140007d6f:	add    BYTE PTR [rax],al
   140007d71:	add    BYTE PTR [rax],al
   140007d73:	add    bh,bh
   140007d75:	(bad)  
   140007d76:	(bad)  
   140007d77:	inc    DWORD PTR [rax]
   140007d79:	add    BYTE PTR [rax],al
   140007d7b:	add    bh,bh
   140007d7d:	(bad)  
   140007d7e:	(bad)  
   140007d7f:	inc    DWORD PTR [rax]
   140007d81:	add    BYTE PTR [rax],al
   140007d83:	add    BYTE PTR [rax],cl
   140007d85:	add    BYTE PTR [rax],al
   140007d87:	add    BYTE PTR [rax],al
   140007d89:	nop
   140007d8a:	add    BYTE PTR [rax],al
   140007d8c:	rex.W add BYTE PTR [rax],al
   140007d8f:	add    BYTE PTR [rax+0x5800005d],ch
	...
   140007d9d:	add    BYTE PTR [rax],al
   140007d9f:	add    BYTE PTR [rcx],al
   140007da1:	add    BYTE PTR [rax],al
   140007da3:	add    BYTE PTR [rcx],al
   140007da5:	add    BYTE PTR [rax],al
   140007da7:	add    BYTE PTR [rbp+rdi*2+0x2d190000],al
   140007dae:	(bad)  
   140007daf:	add    BYTE PTR [rbx],bl
   140007db1:	xor    al,0x54
   140007db3:	add    BYTE PTR [rsi],cl
   140007db5:	add    DWORD PTR [rsi+0x0],ecx
   140007db8:	(bad)  
   140007db9:	rol    BYTE PTR [rip+0x600470],0x0        # 0x140608230
   140007dc0:	pop    rsp
   140007dc1:	rex.WX add BYTE PTR [rax],al
   140007dc4:	rex.W jae 0x140007dc7
   140007dc7:	add    BYTE PTR [rbx+0x2],ah
   140007dca:	add    BYTE PTR [rax],al
   140007dcc:	sbb    DWORD PTR [rbx],ecx
   140007dce:	add    eax,DWORD PTR [rax]
   140007dd0:	or     esp,DWORD PTR [rdx+0x7]
   140007dd3:	push   rax
   140007dd4:	(bad)  
   140007dd5:	xor    BYTE PTR [rax],al
   140007dd7:	add    BYTE PTR [rsi+0x4a],cl
   140007dda:	add    BYTE PTR [rax],al
   140007ddc:	rex.W jae 0x140007ddf
   140007ddf:	add    ah,al
   140007de1:	cmp    al,BYTE PTR [rax]
   140007de3:	add    bh,bh
   140007de5:	(bad)  
   140007de6:	(bad)  
   140007de7:	(bad)  
   140007de8:	cld    
   140007de9:	cmp    al,BYTE PTR [rax]
   140007deb:	add    BYTE PTR [rax],al
   140007ded:	add    BYTE PTR [rax],al
   140007def:	add    BYTE PTR [rcx-0xffffc5],ch
   140007df5:	(bad)  
   140007df6:	(bad)  
   140007df7:	jmp    FWORD PTR [rax+0x5d]
   140007dfd:	add    BYTE PTR [rax],al
   140007dff:	add    BYTE PTR [rsi+0x100005d],dh
   140007e05:	add    BYTE PTR [rax],al
   140007e07:	add    bh,dl
   140007e09:	pop    rbp
   140007e0a:	add    BYTE PTR [rax],al
   140007e0c:	add    BYTE PTR [rax],al
   140007e0e:	add    BYTE PTR [rax],al
   140007e10:	add    DWORD PTR [rcx],edx
   140007e12:	(bad)  
   140007e13:	add    BYTE PTR [rcx],dl
   140007e15:	ror    BYTE PTR [rdx],cl
   140007e17:	ror    BYTE PTR [rax],0x70
   140007e1a:	(bad)  
   140007e1b:	(bad)  
   140007e1c:	(bad)  
   140007e1d:	xor    BYTE PTR [rip+0x8130150],al        # 0x148137f73
   140007e23:	add    BYTE PTR [rbx],dl
   140007e25:	xor    al,0x12
   140007e27:	add    BYTE PTR [rbx],dl
   140007e29:	mov    dl,0xc
   140007e2b:	ror    BYTE PTR [rdx],1
   140007e2d:	ror    BYTE PTR [rax],0x70
   140007e30:	(bad)  
   140007e31:	(bad)  
   140007e32:	(bad)  
   140007e33:	push   rax
   140007e34:	sbb    DWORD PTR [rax],ebp
   140007e36:	(bad)  
   140007e37:	add    BYTE PTR [rdi],dl
   140007e39:	xor    al,0x56
   140007e3b:	add    BYTE PTR [rdi],dl
   140007e3d:	add    DWORD PTR [rax+0x0],edx
   140007e40:	or     BYTE PTR [rax+0x7],dh
   140007e43:	(bad)  
   140007e44:	(bad)  
   140007e45:	push   rax
   140007e46:	add    BYTE PTR [rax],al
   140007e48:	test   BYTE PTR [rcx+0x0],cl
   140007e4b:	add    BYTE PTR [rax+0x2],dh
   140007e4e:	add    BYTE PTR [rax],al
   140007e50:	add    DWORD PTR [rax],ebx
   140007e52:	or     al,BYTE PTR [rax]
   140007e54:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   140007e58:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140007e5c:	sbb    BYTE PTR [rax+rcx*1],dh
   140007e5f:	add    BYTE PTR [rax],bl
   140007e61:	xor    dl,BYTE PTR [rax+rdx*8]
   140007e64:	adc    al,al
   140007e66:	adc    BYTE PTR [rax+0x1],dh
   140007e69:	adc    BYTE PTR [rsi],al
   140007e6b:	add    BYTE PTR [rax],dl
   140007e6d:	or     eax,DWORD PTR fs:[rax]
   140007e70:	adc    BYTE PTR [rdx+rcx*1],dh
   140007e73:	add    BYTE PTR [rax],dl
   140007e75:	jb     0x140007e83
   140007e77:	jo     0x140007e8a
   140007e79:	sbb    DWORD PTR [rsi],eax
   140007e7b:	add    BYTE PTR [rcx],bl
   140007e7d:	or     DWORD PTR fs:[rax],eax
   140007e80:	adc    al,0x34
   140007e82:	or     BYTE PTR [rax],al
   140007e84:	(bad)  
   140007e85:	push   rdx
   140007e86:	add    dh,BYTE PTR [rax+0x4e]
   140007e89:	rex.WX add BYTE PTR [rax],al
   140007e8c:	xor    BYTE PTR [rax+rax*1+0x0],dh
   140007e90:	(bad)  
   140007e91:	(bad)  
   140007e92:	(bad)  
   140007e93:	jmp    rsi
   140007e95:	pop    rbp
   140007e96:	add    BYTE PTR [rax],al
   140007e98:	xchg   esp,eax
   140007e99:	add    BYTE PTR [rax],r8b
   140007e9c:	(bad)  
   140007e9d:	(bad)  
   140007e9e:	(bad)  
   140007e9f:	inc    edx
   140007ea1:	add    BYTE PTR [rax],r8b
   140007ea4:	add    BYTE PTR [rax],al
   140007ea6:	add    BYTE PTR [rax],al
   140007ea8:	fadd   QWORD PTR [rax+rax*1+0x0]
   140007eac:	(bad)  
   140007ead:	(bad)  
   140007eae:	(bad)  
   140007eaf:	call   FWORD PTR [rcx]
   140007eb1:	(bad)  
   140007eb2:	(bad)  
   140007eb3:	add    BYTE PTR [rdi],cl
   140007eb5:	str    WORD PTR fs:[rdi]
   140007eb9:	xor    al,0xe
   140007ebb:	add    BYTE PTR [rdi],cl
   140007ebd:	xchg   edx,eax
   140007ebe:	or     esi,DWORD PTR [rax-0x7c]
   140007ec1:	rex.WB add BYTE PTR [r8],al
   140007ec4:	add    BYTE PTR [rax],al
   140007ec7:	add    BYTE PTR [rcx],bl
   140007ec9:	cmp    BYTE PTR [rbx],cl
   140007ecb:	add    BYTE PTR [rdi],ah
   140007ecd:	sbb    eax,DWORD PTR fs:[rdx]
   140007ed0:	(bad)  
   140007ed1:	xor    al,0x1a
   140007ed3:	add    ah,BYTE PTR [rdi]
   140007ed5:	add    DWORD PTR [rdx],edx
   140007ed7:	add    dl,BYTE PTR [rdx]
   140007ed9:	loopne 0x140007eeb
   140007edb:	ror    BYTE PTR [rsi],1
   140007edd:	ror    BYTE PTR [rax+rsi*2],0xb
   140007ee1:	push   rax
   140007ee2:	add    BYTE PTR [rax],al
   140007ee4:	test   BYTE PTR [rcx+0x0],cl
   140007ee7:	add    BYTE PTR [rax+0x1000010],al
   140007eed:	(bad)  
   140007eee:	add    DWORD PTR [rax],eax
   140007ef0:	(bad)  
   140007ef1:	rex.X add BYTE PTR [rax],al
   140007ef4:	add    DWORD PTR [rax],ebx
   140007ef6:	add    DWORD PTR [rax],eax
   140007ef8:	sbb    dl,al
   140007efa:	add    BYTE PTR [rax],al
   140007efc:	add    DWORD PTR [rcx+rax*1],eax
   140007eff:	add    BYTE PTR [rdx+rax*2],al
   140007f02:	add    BYTE PTR [rax],al
   140007f04:	add    BYTE PTR [rax],al
   140007f06:	add    BYTE PTR [rax],al
   140007f08:	add    DWORD PTR [rax],eax
   140007f0a:	add    BYTE PTR [rax],al
   140007f0c:	add    BYTE PTR [rax],al
   140007f0e:	add    BYTE PTR [rax],al
   140007f10:	add    DWORD PTR [rcx+rax*1],eax
   140007f13:	add    BYTE PTR [rdx+rdx*1],al
   140007f16:	add    BYTE PTR [rax],al
   140007f18:	add    DWORD PTR [rdi],ecx
   140007f1a:	(bad)  
   140007f1b:	add    BYTE PTR [rdi],cl
   140007f1d:	fs (bad) 
   140007f1f:	add    BYTE PTR [rdi],cl
   140007f21:	xor    al,0x6
   140007f23:	add    BYTE PTR [rdi],cl
   140007f25:	xor    cl,BYTE PTR [rbx]
   140007f27:	jo     0x140007f32
   140007f29:	(bad)  
   140007f2a:	(bad)  
   140007f2b:	add    BYTE PTR [rdi],dl
   140007f2d:	xor    al,0xd
   140007f2f:	add    BYTE PTR [rdi],dl
   140007f31:	jb     0x140007f46
   140007f33:	rcl    BYTE PTR [rcx],0x70
   140007f36:	adc    BYTE PTR [rax-0x50],ah
   140007f39:	push   rax
   140007f3a:	add    BYTE PTR [rax],al
   140007f3c:	add    DWORD PTR [rax],eax
   140007f3e:	add    BYTE PTR [rax],al
   140007f40:	xchg   DWORD PTR [rbx+0x0],ecx
   140007f43:	add    BYTE PTR [rax-0xdffffb5],ah
   140007f49:	pop    rbp
   140007f4a:	add    BYTE PTR [rax],al
   140007f4c:	movabs al,ds:0x180005181100004b
   140007f55:	(bad)  
   140007f56:	adc    al,0xc0
   140007f58:	adc    dh,BYTE PTR [rax+0x11]
   140007f5b:	(bad)  
   140007f5c:	adc    BYTE PTR [rax],dh
   140007f5e:	add    BYTE PTR [rax],al
   140007f60:	mov    al,0x50
   140007f62:	add    BYTE PTR [rax],al
   140007f64:	add    DWORD PTR [rax],eax
   140007f66:	add    BYTE PTR [rax],al
   140007f68:	jrcxz  0x140007fb5
   140007f6a:	add    BYTE PTR [rax],al
   140007f6c:	add    ecx,DWORD PTR [rax+rax*1+0x0]
   140007f70:	xor    ebx,DWORD PTR [rsi+0x0]
   140007f73:	add    BYTE PTR [rax],al
   140007f75:	add    BYTE PTR [rax],al
   140007f77:	add    BYTE PTR [rcx],al
   140007f79:	add    al,0x1
   140007f7b:	add    BYTE PTR [rdx+riz*2],al
   140007f7e:	add    BYTE PTR [rax],al
   140007f80:	or     DWORD PTR [rip+0x340d0005],ecx        # 0x1740d7f8b
   140007f86:	(bad)  
   140007f87:	add    BYTE PTR [rip+0x6001401],cl        # 0x14600938e
   140007f8d:	jo     0x140007f8f
   140007f8f:	add    BYTE PTR [rax+0x1000050],dh
   140007f95:	add    BYTE PTR [rax],al
   140007f97:	add    BYTE PTR [rdx+0x3d00004c],bl
   140007f9d:	rex.WRX add BYTE PTR [rax],r8b
   140007fa0:	pop    rdi
   140007fa1:	pop    rsi
   140007fa2:	add    BYTE PTR [rax],al
   140007fa4:	cmp    eax,0x100004e
   140007fa9:	or     al,0x2
   140007fab:	add    BYTE PTR [rcx+rax*1],cl
   140007fae:	adc    DWORD PTR [rax],eax
   140007fb0:	adc    DWORD PTR [rsi],eax
   140007fb2:	add    al,BYTE PTR [rax]
   140007fb4:	(bad)  
   140007fb5:	xor    al,BYTE PTR [rdx]
   140007fb7:	xor    BYTE PTR [rax+0x1000050],dh
   140007fbd:	add    BYTE PTR [rax],al
   140007fbf:	add    BYTE PTR [rbx+0x51],dl
   140007fc2:	add    BYTE PTR [rax],al
   140007fc4:	mov    ecx,0x7d000051
   140007fc9:	pop    rsi
   140007fca:	add    BYTE PTR [rax],al
   140007fcc:	add    BYTE PTR [rax],al
   140007fce:	add    BYTE PTR [rax],al
   140007fd0:	add    DWORD PTR [rsi],eax
   140007fd2:	add    al,BYTE PTR [rax]
   140007fd4:	(bad)  
   140007fd5:	xor    al,BYTE PTR [rdx]
   140007fd7:	push   rax
   140007fd8:	or     DWORD PTR [rcx+rax*1],eax
   140007fdb:	add    BYTE PTR [rdx+rax*2],al
   140007fde:	add    BYTE PTR [rax],al
   140007fe0:	mov    al,0x50
   140007fe2:	add    BYTE PTR [rax],al
   140007fe4:	add    DWORD PTR [rax],eax
   140007fe6:	add    BYTE PTR [rax],al
   140007fe8:	out    0x52,eax
   140007fea:	add    BYTE PTR [rax],al
   140007fec:	sbb    dl,BYTE PTR [rbx+0x0]
   140007fef:	add    BYTE PTR [rax+0x1a00005e],ah
   140007ff5:	push   rbx
   140007ff6:	add    BYTE PTR [rax],al
   140007ff8:	add    DWORD PTR [rdx],ecx
   140007ffa:	add    al,0x0
   140007ffc:	or     dh,BYTE PTR [rax+rcx*1]
   140007fff:	add    BYTE PTR [rdx],cl
   140008001:	xor    al,BYTE PTR [rsi]
   140008003:	jo     0x140008006
   140008005:	sbb    BYTE PTR [rcx],al
   140008007:	add    BYTE PTR [rax],bl
   140008009:	ret    0x0
   14000800c:	add    DWORD PTR [rax],ebx
   14000800e:	add    DWORD PTR [rax],eax
   140008010:	sbb    dl,al
   140008012:	add    BYTE PTR [rax],al
   140008014:	sbb    DWORD PTR [rax],ebp
   140008016:	or     DWORD PTR [rip+0x10641a],esi        # 0x14010e436
   14000801c:	(bad)  
   14000801d:	xor    al,0xf
   14000801f:	add    BYTE PTR [rdx],dl
   140008021:	xor    ecx,DWORD PTR [rip+0x7c00992]        # 0x147c089b9
   140008027:	jo     0x14000802f
   140008029:	push   rax
   14000802a:	add    BYTE PTR [rax],al
   14000802c:	enter  0x5b,0x0
   140008030:	add    DWORD PTR [rax],eax
   140008032:	add    BYTE PTR [rax],al
   140008034:	(bad)  
   140008035:	push   rbp
   140008036:	add    BYTE PTR [rax],al
   140008038:	orps   xmm0,XMMWORD PTR [rax]
   14000803b:	add    BYTE PTR [rcx],al
   14000803d:	add    BYTE PTR [rax],al
   14000803f:	add    BYTE PTR [rdi],cl
   140008041:	push   rsi
   140008042:	add    BYTE PTR [rax],al
   140008044:	add    BYTE PTR [r8],al
   140008047:	add    BYTE PTR [rcx],bl
   140008049:	or     al,BYTE PTR [rdx]
   14000804b:	add    BYTE PTR [rdx],cl
   14000804d:	jb     0x140008055
   14000804f:	push   rax
   140008050:	rex.WRX
   140008051:	rex.WX add BYTE PTR [rax],al
   140008054:	shl    BYTE PTR [rsi+0x0],0x0
   140008058:	sbb    DWORD PTR [rdx],esp
   14000805a:	or     al,BYTE PTR [rax]
   14000805c:	and    al,ah
   14000805e:	ltr    WORD PTR [rsi]
   140008061:	je     0x140008071
   140008063:	add    BYTE PTR [rdx],bl
   140008065:	fs or  eax,0xc341600
   14000806b:	add    BYTE PTR [rcx],cl
   14000806d:	xchg   edx,eax
   14000806e:	add    eax,0x4a4ed0
   140008073:	add    al,al
   140008075:	jbe    0x140008077
	...
   14000807f:	add    BYTE PTR [rcx],al
   140008081:	add    BYTE PTR [rax],al
   140008083:	add    BYTE PTR [rcx],al
   140008085:	add    BYTE PTR [rax],al
   140008087:	add    BYTE PTR [rax+rax*4+0x400000],cl
	...
   140008096:	add    BYTE PTR [rax],al
   140008098:	rcr    BYTE PTR [rsi+0x0],1
   14000809b:	add    BYTE PTR [rax+0x0],bl
   14000809e:	add    BYTE PTR [rax],al
   1400080a0:	(bad)  
   1400080a1:	(bad)  
   1400080a2:	(bad)  
   1400080a3:	inc    DWORD PTR [rax]
   1400080a5:	add    BYTE PTR [rax],al
   1400080a7:	add    bh,bh
   1400080a9:	(bad)  
   1400080aa:	(bad)  
   1400080ab:	inc    DWORD PTR [rax]
   1400080ad:	add    BYTE PTR [rax],al
   1400080af:	add    al,dl
   1400080b1:	push   rsi
   1400080b2:	add    BYTE PTR [rax],al
   1400080b4:	(bad)  
   1400080b5:	(bad)  
   1400080b6:	(bad)  
   1400080b7:	call   QWORD PTR [rbp+0x57]
   1400080ba:	add    BYTE PTR [rax],al
   1400080bc:	add    BYTE PTR [rax],al
   1400080be:	add    BYTE PTR [rax],al
   1400080c0:	(bad)  
   1400080c1:	push   rdi
   1400080c2:	add    BYTE PTR [rax],al
   1400080c4:	(bad)  
   1400080c5:	(bad)  
   1400080c6:	(bad)  
   1400080c7:	call   rax
   1400080c9:	pop    rsi
   1400080ca:	add    BYTE PTR [rax],al
   1400080cc:	add    BYTE PTR [rax],al
   1400080ce:	add    BYTE PTR [rax],al
   1400080d0:	add    DWORD PTR [rcx+rax*1],eax
   1400080d3:	add    BYTE PTR [rdx+rax*4],al
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	add    DWORD PTR [rsi],eax
   1400080da:	add    al,BYTE PTR [rax]
   1400080dc:	(bad)  
   1400080dd:	xor    al,BYTE PTR [rdx]
   1400080df:	xor    BYTE PTR [rcx],al
   1400080e1:	adc    al,0x9
   1400080e3:	add    BYTE PTR [rdx+riz*8],dl
   1400080e6:	or     eax,0x9e00bf0
   1400080eb:	rol    BYTE PTR [rdi],1
   1400080ed:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143608564
   1400080f4:	add    dl,BYTE PTR [rax+0x0]
   1400080f7:	add    BYTE PTR [rcx],al
   1400080f9:	sbb    DWORD PTR [rdx],ecx
   1400080fb:	add    BYTE PTR [rcx],bl
   1400080fd:	je     0x140008108
   1400080ff:	add    BYTE PTR [rcx],bl
   140008101:	or     BYTE PTR fs:[rax],al
   140008104:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140008108:	sbb    DWORD PTR [rsi+rax*1],esi
   14000810b:	add    BYTE PTR [rcx],bl
   14000810d:	xor    dl,BYTE PTR [rip+0xc0]        # 0x1400081d3
   140008113:	add    al,dh
   140008115:	push   rdi
   140008116:	add    BYTE PTR [rax],al
   140008118:	add    BYTE PTR [rax],al
   14000811a:	add    BYTE PTR [rax],al
   14000811c:	xor    BYTE PTR [rcx+0x0],al
	...
   14000812e:	add    BYTE PTR [rax],al
   140008130:	add    DWORD PTR [rax],eax
   140008132:	add    BYTE PTR [rax],al
   140008134:	rex add DWORD PTR [rax],0x0
	...
   140008143:	add    BYTE PTR [rax],al
   140008145:	nop
   140008146:	add    BYTE PTR [rax],al
   140008148:	add    BYTE PTR [rax],al
   14000814a:	add    BYTE PTR [rax],al
   14000814c:	(bad)  
   14000814d:	(bad)  
   14000814e:	(bad)  
   14000814f:	inc    DWORD PTR [rax]
   140008151:	add    BYTE PTR [rax],al
   140008153:	add    BYTE PTR [rax],ah
   140008155:	add    BYTE PTR [rax],al
   140008157:	add    BYTE PTR [rax+0x58],dh
	...
   140008166:	add    BYTE PTR [rax],al
   140008168:	add    DWORD PTR [rax],eax
   14000816a:	add    BYTE PTR [rax],al
   14000816c:	jo     0x1400081e4
   14000816e:	add    BYTE PTR [rax],al
   140008170:	(bad)  
   140008171:	xchg   ecx,eax
   140008172:	add    BYTE PTR [rax],al
   140008174:	cwde   
   140008175:	nop
   140008176:	add    BYTE PTR [rax],al
   140008178:	call   0x1a00081fe
   14000817d:	add    DWORD PTR [rax],0x0
	...
   140008188:	add    DWORD PTR [rax],eax
   14000818a:	add    BYTE PTR [rax],al
   14000818c:	movabs al,ds:0xe800009710000076
   140008195:	nop
   140008196:	add    BYTE PTR [rax],al
   140008198:	cmp    BYTE PTR [rdx-0x7c500000],al
	...
   1400081a6:	add    BYTE PTR [rax],al
   1400081a8:	add    DWORD PTR [rax],eax
   1400081aa:	add    BYTE PTR [rax],al
   1400081ac:	mov    al,0x76
   1400081ae:	add    BYTE PTR [rax],al
   1400081b0:	sbb    BYTE PTR [rdi-0x6ef80000],dl
   1400081b6:	add    BYTE PTR [rax],al
   1400081b8:	pop    rax
   1400081b9:	(bad)  
   1400081ba:	add    BYTE PTR [rax],al
   1400081bc:	rol    BYTE PTR [rbx+0x0],1
	...
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	push   0x82
   1400081ed:	add    BYTE PTR [rax],al
   1400081ef:	add    BYTE PTR [rax-0x7e],bh
   1400081f2:	add    BYTE PTR [rax],al
   1400081f4:	add    BYTE PTR [rax],al
   1400081f6:	add    BYTE PTR [rax],al
   1400081f8:	mov    BYTE PTR [rdx+0x0],al
   1400081fe:	add    BYTE PTR [rax],al
   140008200:	xchg   esi,eax
   140008201:	(bad)  
   140008202:	add    BYTE PTR [rax],al
   140008204:	add    BYTE PTR [rax],al
   140008206:	add    BYTE PTR [rax],al
   140008208:	stos   BYTE PTR es:[rdi],al
   140008209:	(bad)  
   14000820a:	add    BYTE PTR [rax],al
   14000820c:	add    BYTE PTR [rax],al
   14000820e:	add    BYTE PTR [rax],al
   140008210:	ret    0x82
   140008213:	add    BYTE PTR [rax],al
   140008215:	add    BYTE PTR [rax],al
   140008217:	add    dh,dl
   140008219:	(bad)  
   14000821a:	add    BYTE PTR [rax],al
   14000821c:	add    BYTE PTR [rax],al
   14000821e:	add    BYTE PTR [rax],al
   140008220:	call   0x1400082a7
   140008225:	add    BYTE PTR [rax],al
   140008227:	add    al,bh
   140008229:	(bad)  
	...
   140008236:	add    BYTE PTR [rax],al
   140008238:	and    BYTE PTR [rbx+0x0],al
   14000823e:	add    BYTE PTR [rax],al
   140008240:	xor    al,0x83
   140008242:	add    BYTE PTR [rax],al
   140008244:	add    BYTE PTR [rax],al
   140008246:	add    BYTE PTR [rax],al
   140008248:	(bad)  
   140008249:	add    DWORD PTR [rax],0x0
	...
   140008258:	add    QWORD PTR [rax],0x0
	...
   140008268:	add    BYTE PTR [rax],al
   14000826a:	push   rdx
   14000826b:	gs addr32 rex.WRXB jo 0x1400082d5
   140008270:	outs   dx,BYTE PTR ds:[rsi]
   140008271:	rex.WXB
   140008272:	gs jns 0x1400082ba
   140008275:	js     0x1400082ce
   140008277:	add    BYTE PTR [rax],al
   140008279:	add    BYTE PTR [rdx+0x65],dl
   14000827c:	addr32 rex.R
   14000827e:	gs ins BYTE PTR es:[rdi],dx
   140008280:	gs je  0x1400082e8
   140008283:	rex.WXB
   140008284:	gs jns 0x1400082de
   140008287:	add    BYTE PTR [rax],al
   140008289:	add    BYTE PTR [rdx+0x65],dl
   14000828c:	rex.XB ins BYTE PTR es:[edi],dx
   14000828f:	outs   dx,DWORD PTR ds:[rsi]
   140008290:	jae    0x1400082f7
   140008292:	rex.WXB
   140008293:	gs jns 0x140008296
   140008296:	add    BYTE PTR [rax],al
   140008298:	push   rdx
   140008299:	gs addr32 push rcx
   14000829c:	jne    0x140008303
   14000829e:	jb     0x140008319
   1400082a0:	push   rsi
   1400082a1:	(bad)  
   1400082a2:	ins    BYTE PTR es:[rdi],dx
   1400082a3:	jne    0x14000830a
   1400082a5:	rex.RB js 0x1400082ff
   1400082a8:	add    BYTE PTR [rax],al
   1400082aa:	add    BYTE PTR [rax],al
   1400082ac:	rex.XB jb 0x140008314
   1400082af:	(bad)  
   1400082b0:	je     0x140008317
   1400082b2:	push   rax
   1400082b3:	jb     0x140008324
   1400082b5:	movsxd esp,DWORD PTR [rbp+0x73]
   1400082b8:	jae    0x1400082fb
   1400082ba:	jae    0x140008311
   1400082bc:	jae    0x140008323
   1400082be:	jb     0x140008317
   1400082c0:	add    BYTE PTR [rcx+0x0],al
   1400082c3:	add    BYTE PTR [rdi+0x70],cl
   1400082c6:	outs   dx,BYTE PTR gs:[rsi]
   1400082c8:	push   rax
   1400082c9:	jb     0x14000833a
   1400082cb:	movsxd esp,DWORD PTR [rbp+0x73]
   1400082ce:	jae    0x140008324
   1400082d0:	outs   dx,DWORD PTR ds:[rsi]
   1400082d1:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   1400082d5:	add    BYTE PTR [rax],al
   1400082d7:	add    BYTE PTR [rdx+0x65],dl
   1400082da:	addr32 push rcx
   1400082dc:	jne    0x140008343
   1400082de:	jb     0x140008359
   1400082e0:	push   rsi
   1400082e1:	(bad)  
   1400082e2:	ins    BYTE PTR es:[rdi],dx
   1400082e3:	jne    0x14000834a
   1400082e5:	push   rdi
   1400082e6:	add    BYTE PTR [rax],al
   1400082e8:	add    BYTE PTR [rax],al
   1400082ea:	push   rdx
   1400082eb:	rex.RB outs dx,BYTE PTR gs:[esi]
   1400082ef:	jne    0x14000835e
   1400082f1:	rex.WXB
   1400082f2:	gs jns 0x14000833a
   1400082f5:	js     0x14000834e
   1400082f7:	add    BYTE PTR [rax],al
   1400082f9:	add    BYTE PTR [rdx+0x65],dl
   1400082fc:	rex.RB outs dx,BYTE PTR ds:[esi]
   1400082ff:	jne    0x14000836e
   140008301:	rex.WXB
   140008302:	gs jns 0x14000835c
   140008305:	add    BYTE PTR [rax],al
   140008307:	add    BYTE PTR [rbx+0x48],dl
   14000830a:	rex.RXB
   14000830b:	gs je  0x140008361
   14000830e:	jo     0x140008375
   140008310:	movsxd ebp,DWORD PTR [rcx+0x61]
   140008313:	ins    BYTE PTR es:[rdi],dx
   140008314:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140008316:	ins    BYTE PTR es:[rdi],dx
   140008317:	fs gs jb 0x14000836b
   14000831b:	(bad)  
   14000831c:	je     0x140008386
   14000831e:	push   rdi
   14000831f:	add    BYTE PTR [rax],al
   140008321:	add    BYTE PTR [rbx+0x48],dl
   140008324:	rex.RXB
   140008325:	gs je  0x14000836e
   140008328:	outs   dx,DWORD PTR ds:[rsi]
   140008329:	ins    BYTE PTR es:[rdi],dx
   14000832a:	fs gs jb 0x14000837e
   14000832e:	(bad)  
   14000832f:	je     0x140008399
   140008331:	push   rdi
   140008332:	add    BYTE PTR [rax],al
   140008334:	add    BYTE PTR [rax],al
   140008336:	push   rbx
   140008337:	rex.W
   140008338:	rex.RXB
   140008339:	gs je  0x140008382
   14000833c:	outs   dx,DWORD PTR ds:[rsi]
   14000833d:	ins    BYTE PTR es:[rdi],dx
   14000833e:	fs gs jb 0x140008392
   140008342:	(bad)  
   140008343:	je     0x1400083ad
   140008345:	rex.RB js 0x140008348
   140008348:	add    BYTE PTR [rax],al
   14000834a:	push   rax
   14000834b:	(bad)  
   14000834c:	je     0x1400083b6
   14000834e:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0x74736978
   140008357:	jae    0x1400083b0
	...
   1400083dd:	add    BYTE PTR [rax],al
   1400083df:	add    BYTE PTR [rax+0x87],cl
   1400083e5:	add    BYTE PTR [rax],al
   1400083e7:	add    BYTE PTR [rax],al
   1400083e9:	add    BYTE PTR [rax],al
   1400083eb:	add    al,ch
   1400083ed:	xchg   DWORD PTR [rax],eax
   1400083ef:	add    BYTE PTR [rax],dh
   1400083f1:	movsxd eax,DWORD PTR [rax]
   1400083f3:	add    al,bl
   1400083f5:	test   DWORD PTR [rax],eax
	...
   1400083ff:	add    BYTE PTR [rax],ah
   140008401:	mov    DWORD PTR [rax],eax
   140008403:	add    BYTE PTR [rax+0x58000061],al
   140008409:	test   BYTE PTR [rax],al
	...
   140008413:	add    dh,al
   140008415:	lea    eax,[rax]
   140008417:	add    BYTE PTR [rax],al
   140008419:	(bad)  
   14000841a:	add    BYTE PTR [rax],al
   14000841c:	test   al,0x87
	...
   140008426:	add    BYTE PTR [rax],al
   140008428:	test   BYTE PTR [rbp+0x63500000],0x0
   14000842f:	add    BYTE PTR [rax-0x79],bl
	...
   14000843a:	add    BYTE PTR [rax],al
   14000843c:	add    BYTE PTR [rsi+0x63000000],cl
	...
   140008456:	add    BYTE PTR [rax],al
   140008458:	sub    al,0x8b
   14000845a:	add    BYTE PTR [rax],al
   14000845c:	add    BYTE PTR [rax],al
   14000845e:	add    BYTE PTR [rax],al
   140008460:	outs   dx,BYTE PTR ds:[rsi]
   140008461:	mov    es,WORD PTR [rax]
   140008463:	add    BYTE PTR [rax],al
   140008465:	add    BYTE PTR [rax],al
   140008467:	add    BYTE PTR [rax-0x72],bl
   14000846a:	add    BYTE PTR [rax],al
   14000846c:	add    BYTE PTR [rax],al
   14000846e:	add    BYTE PTR [rax],al
   140008470:	rex.WR mov es,WORD PTR [rax]
   140008473:	add    BYTE PTR [rax],al
   140008475:	add    BYTE PTR [rax],al
   140008477:	add    BYTE PTR [rsi],dh
   140008479:	mov    es,WORD PTR [rax]
   14000847b:	add    BYTE PTR [rax],al
   14000847d:	add    BYTE PTR [rax],al
   14000847f:	add    BYTE PTR [rdx+0x8e],cl
   140008485:	add    BYTE PTR [rax],al
   140008487:	add    BYTE PTR [rbp+rcx*4+0x0],ch
   14000848e:	add    BYTE PTR [rax],al
   140008490:	pushf  
   140008491:	lea    eax,[rax]
   140008493:	add    BYTE PTR [rax],al
   140008495:	add    BYTE PTR [rax],al
   140008497:	add    BYTE PTR [rdx+0x8d],al
   14000849d:	add    BYTE PTR [rax],al
   14000849f:	add    BYTE PTR [rdx-0x73],dh
   1400084a2:	add    BYTE PTR [rax],al
   1400084a4:	add    BYTE PTR [rax],al
   1400084a6:	add    BYTE PTR [rax],al
   1400084a8:	pop    rsi
   1400084a9:	lea    eax,[rax]
   1400084ab:	add    BYTE PTR [rax],al
   1400084ad:	add    BYTE PTR [rax],al
   1400084af:	add    BYTE PTR [rbp+rcx*4+0x0],al
   1400084b3:	add    BYTE PTR [rax],al
   1400084b5:	add    BYTE PTR [rax],al
   1400084b7:	add    BYTE PTR [rax],dh
   1400084b9:	lea    eax,[rax]
   1400084bb:	add    BYTE PTR [rax],al
   1400084bd:	add    BYTE PTR [rax],al
   1400084bf:	add    BYTE PTR [rcx*4+0x0],bl
   1400084c6:	add    BYTE PTR [rax],al
   1400084c8:	dec    BYTE PTR [rax+rax*1+0x0]
   1400084cf:	add    dl,ah
   1400084d1:	mov    WORD PTR [rax],es
   1400084d3:	add    BYTE PTR [rax],al
   1400084d5:	add    BYTE PTR [rax],al
   1400084d7:	add    dh,cl
   1400084d9:	mov    WORD PTR [rax],es
   1400084db:	add    BYTE PTR [rax],al
   1400084dd:	add    BYTE PTR [rax],al
   1400084df:	add    BYTE PTR [rsi+0x8c],bh
   1400084e5:	add    BYTE PTR [rax],al
   1400084e7:	add    BYTE PTR [rsp+rcx*4+0x0],ch
   1400084ee:	add    BYTE PTR [rax],al
   1400084f0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400084f1:	mov    WORD PTR [rax],es
   1400084f3:	add    BYTE PTR [rax],al
   1400084f5:	add    BYTE PTR [rax],al
   1400084f7:	add    BYTE PTR [rsi+0x8c],cl
   1400084fd:	add    BYTE PTR [rax],al
   1400084ff:	add    BYTE PTR [rax-0x74],bh
   140008502:	add    BYTE PTR [rax],al
   140008504:	add    BYTE PTR [rax],al
   140008506:	add    BYTE PTR [rax],al
   140008508:	(bad)  
   140008509:	mov    WORD PTR [rax],es
   14000850b:	add    BYTE PTR [rax],al
   14000850d:	add    BYTE PTR [rax],al
   14000850f:	add    BYTE PTR [rsi-0x74],cl
   140008512:	add    BYTE PTR [rax],al
   140008514:	add    BYTE PTR [rax],al
   140008516:	add    BYTE PTR [rax],al
   140008518:	rex mov WORD PTR [rax],es
   14000851b:	add    BYTE PTR [rax],al
   14000851d:	add    BYTE PTR [rax],al
   14000851f:	add    BYTE PTR [rsp+rcx*4],dh
   140008522:	add    BYTE PTR [rax],al
   140008524:	add    BYTE PTR [rax],al
   140008526:	add    BYTE PTR [rax],al
   140008528:	(bad)  
   140008529:	mov    WORD PTR [rax],es
   14000852b:	add    BYTE PTR [rax],al
   14000852d:	add    BYTE PTR [rax],al
   14000852f:	add    BYTE PTR [rsp+rcx*4],cl
   140008532:	add    BYTE PTR [rax],al
   140008534:	add    BYTE PTR [rax],al
   140008536:	add    BYTE PTR [rax],al
   140008538:	test   BYTE PTR [rbx+0x0],0x0
   14000853f:	add    al,ch
   140008541:	mov    eax,DWORD PTR [rax]
   140008543:	add    BYTE PTR [rax],al
   140008545:	add    BYTE PTR [rax],al
   140008547:	add    dl,dl
   140008549:	mov    eax,DWORD PTR [rax]
   14000854b:	add    BYTE PTR [rax],al
   14000854d:	add    BYTE PTR [rax],al
   14000854f:	add    BYTE PTR [rsi+0x8b],bh
   140008555:	add    BYTE PTR [rax],al
   140008557:	add    BYTE PTR [rax+0x8b],ch
   14000855d:	add    BYTE PTR [rax],al
   14000855f:	add    BYTE PTR [rdx+0x8b],dl
   140008565:	add    BYTE PTR [rax],al
   140008567:	add    BYTE PTR [rdx+0x8b],al
   14000856d:	add    BYTE PTR [rax],al
   14000856f:	add    BYTE PTR [rdx-0x75],ch
   140008572:	add    BYTE PTR [rax],al
   140008574:	add    BYTE PTR [rax],al
   140008576:	add    BYTE PTR [rax],al
   140008578:	push   rsi
   140008579:	mov    eax,DWORD PTR [rax]
   14000857b:	add    BYTE PTR [rax],al
   14000857d:	add    BYTE PTR [rax],al
   14000857f:	add    BYTE PTR [rax-0x75],al
   140008582:	add    BYTE PTR [rax],al
   140008584:	add    BYTE PTR [rax],al
   140008586:	add    BYTE PTR [rax],al
   140008588:	sbb    al,0x8b
   14000858a:	add    BYTE PTR [rax],al
   14000858c:	add    BYTE PTR [rax],al
   14000858e:	add    BYTE PTR [rax],al
   140008590:	or     al,0x8b
   140008592:	add    BYTE PTR [rax],al
   140008594:	add    BYTE PTR [rax],al
   140008596:	add    BYTE PTR [rax],al
   140008598:	cli    
   140008599:	mov    al,BYTE PTR [rax]
   14000859b:	add    BYTE PTR [rax],al
   14000859d:	add    BYTE PTR [rax],al
   14000859f:	add    ah,ch
   1400085a1:	mov    al,BYTE PTR [rax]
   1400085a3:	add    BYTE PTR [rax],al
   1400085a5:	add    BYTE PTR [rax],al
   1400085a7:	add    dh,bl
   1400085a9:	mov    al,BYTE PTR [rax]
   1400085ab:	add    BYTE PTR [rax],al
   1400085ad:	add    BYTE PTR [rax],al
   1400085af:	add    ah,cl
   1400085b1:	mov    al,BYTE PTR [rax]
   1400085b3:	add    BYTE PTR [rax],al
   1400085b5:	add    BYTE PTR [rax],al
   1400085b7:	add    BYTE PTR [rdx+0x8a],dh
   1400085bd:	add    BYTE PTR [rax],al
   1400085bf:	add    BYTE PTR [rdx+0x8a],bl
   1400085c5:	add    BYTE PTR [rax],al
   1400085c7:	add    BYTE PTR [rdx-0x72],bh
	...
   1400085d6:	add    BYTE PTR [rax],al
   1400085d8:	nop
   1400085d9:	mov    al,BYTE PTR [rax]
   1400085db:	add    BYTE PTR [rax],al
   1400085dd:	add    BYTE PTR [rax],al
   1400085df:	add    BYTE PTR [rdx-0x76],bh
   1400085e2:	add    BYTE PTR [rax],al
   1400085e4:	add    BYTE PTR [rax],al
   1400085e6:	add    BYTE PTR [rax],al
   1400085e8:	jo     0x140008574
   1400085ea:	add    BYTE PTR [rax],al
   1400085ec:	add    BYTE PTR [rax],al
   1400085ee:	add    BYTE PTR [rax],al
   1400085f0:	cmp    cl,BYTE PTR [rdx+0x0]
   1400085f6:	add    BYTE PTR [rax],al
   1400085f8:	and    al,0x8a
   1400085fa:	add    BYTE PTR [rax],al
   1400085fc:	add    BYTE PTR [rax],al
   1400085fe:	add    BYTE PTR [rax],al
   140008600:	adc    cl,BYTE PTR [rdx+0x0]
   140008606:	add    BYTE PTR [rax],al
   140008608:	or     BYTE PTR [rdx+0x0],cl
   14000860e:	add    BYTE PTR [rax],al
   140008610:	cld    
   140008611:	mov    DWORD PTR [rax],eax
   140008613:	add    BYTE PTR [rax],al
   140008615:	add    BYTE PTR [rax],al
   140008617:	add    ah,dh
   140008619:	xchg   DWORD PTR [rax],eax
   14000861b:	add    BYTE PTR [rax],al
   14000861d:	add    BYTE PTR [rax],al
   14000861f:	add    al,ch
   140008621:	mov    DWORD PTR [rax],eax
   140008623:	add    BYTE PTR [rax],al
   140008625:	add    BYTE PTR [rax],al
   140008627:	add    dl,dl
   140008629:	mov    DWORD PTR [rax],eax
   14000862b:	add    BYTE PTR [rax],al
   14000862d:	add    BYTE PTR [rax],al
   14000862f:	add    ah,al
   140008631:	mov    DWORD PTR [rax],eax
   140008633:	add    BYTE PTR [rax],al
   140008635:	add    BYTE PTR [rax],al
   140008637:	add    BYTE PTR [rax+0x89],bh
   14000863d:	add    BYTE PTR [rax],al
   14000863f:	add    BYTE PTR [rsi+0x89],ch
   140008645:	add    BYTE PTR [rax],al
   140008647:	add    BYTE PTR [rsi+0x89],ah
   14000864d:	add    BYTE PTR [rax],al
   14000864f:	add    BYTE PTR [rcx+rcx*4+0x0],bl
   140008656:	add    BYTE PTR [rax],al
   140008658:	mov    cs,WORD PTR [rcx+0x0]
   14000865e:	add    BYTE PTR [rax],al
   140008660:	xchg   BYTE PTR [rcx+0x0],cl
   140008666:	add    BYTE PTR [rax],al
   140008668:	js     0x1400085f3
   14000866a:	add    BYTE PTR [rax],al
   14000866c:	add    BYTE PTR [rax],al
   14000866e:	add    BYTE PTR [rax],al
   140008670:	push   0x89
   140008675:	add    BYTE PTR [rax],al
   140008677:	add    BYTE PTR [rdx-0x77],bl
   14000867a:	add    BYTE PTR [rax],al
   14000867c:	add    BYTE PTR [rax],al
   14000867e:	add    BYTE PTR [rax],al
   140008680:	rex.X mov DWORD PTR [rax],eax
   140008683:	add    BYTE PTR [rax],al
   140008685:	add    BYTE PTR [rax],al
   140008687:	add    BYTE PTR [rsi],ch
   140008689:	mov    DWORD PTR [rax],eax
   14000868b:	add    BYTE PTR [rax],al
   14000868d:	add    BYTE PTR [rax],al
   14000868f:	add    BYTE PTR [rsi],dl
   140008691:	mov    DWORD PTR [rax],eax
   140008693:	add    BYTE PTR [rax],al
   140008695:	add    BYTE PTR [rax],al
   140008697:	add    BYTE PTR [rsi],al
   140008699:	mov    DWORD PTR [rax],eax
   14000869b:	add    BYTE PTR [rax],al
   14000869d:	add    BYTE PTR [rax],al
   14000869f:	add    al,bh
   1400086a1:	mov    BYTE PTR [rax],al
   1400086a3:	add    BYTE PTR [rax],al
   1400086a5:	add    BYTE PTR [rax],al
   1400086a7:	add    ah,ch
   1400086a9:	mov    BYTE PTR [rax],al
   1400086ab:	add    BYTE PTR [rax],al
   1400086ad:	add    BYTE PTR [rax],al
   1400086af:	add    ah,bl
   1400086b1:	mov    BYTE PTR [rax],al
   1400086b3:	add    BYTE PTR [rax],al
   1400086b5:	add    BYTE PTR [rax],al
   1400086b7:	add    ah,cl
   1400086b9:	mov    BYTE PTR [rax],al
   1400086bb:	add    BYTE PTR [rax],al
   1400086bd:	add    BYTE PTR [rax],al
   1400086bf:	add    al,al
   1400086c1:	mov    BYTE PTR [rax],al
   1400086c3:	add    BYTE PTR [rax],al
   1400086c5:	add    BYTE PTR [rax],al
   1400086c7:	add    BYTE PTR [rdx+0x88],dh
   1400086cd:	add    BYTE PTR [rax],al
   1400086cf:	add    BYTE PTR [rsi+0x88],ah
   1400086d5:	add    BYTE PTR [rax],al
   1400086d7:	add    BYTE PTR [rdx+0x88],bl
   1400086dd:	add    BYTE PTR [rax],al
   1400086df:	add    BYTE PTR [rdx+0x88],cl
   1400086e5:	add    BYTE PTR [rax],al
   1400086e7:	add    BYTE PTR [rsi-0x78],bh
   1400086ea:	add    BYTE PTR [rax],al
   1400086ec:	add    BYTE PTR [rax],al
   1400086ee:	add    BYTE PTR [rax],al
   1400086f0:	jbe    0x14000867a
   1400086f2:	add    BYTE PTR [rax],al
   1400086f4:	add    BYTE PTR [rax],al
   1400086f6:	add    BYTE PTR [rax],al
   1400086f8:	ins    BYTE PTR es:[rdi],dx
   1400086f9:	mov    BYTE PTR [rax],al
   1400086fb:	add    BYTE PTR [rax],al
   1400086fd:	add    BYTE PTR [rax],al
   1400086ff:	add    BYTE PTR [rsi-0x78],bl
   140008702:	add    BYTE PTR [rax],al
   140008704:	add    BYTE PTR [rax],al
   140008706:	add    BYTE PTR [rax],al
   140008708:	rex.WR mov BYTE PTR [rax],r8b
   14000870b:	add    BYTE PTR [rax],al
   14000870d:	add    BYTE PTR [rax],al
   14000870f:	add    BYTE PTR [rax+rcx*4],bh
   140008712:	add    BYTE PTR [rax],al
   140008714:	add    BYTE PTR [rax],al
   140008716:	add    BYTE PTR [rax],al
   140008718:	mov    BYTE PTR es:[rax],al
   14000871b:	add    BYTE PTR [rax],al
   14000871d:	add    BYTE PTR [rax],al
   14000871f:	add    BYTE PTR [rax],bl
   140008721:	mov    BYTE PTR [rax],al
   140008723:	add    BYTE PTR [rax],al
   140008725:	add    BYTE PTR [rax],al
   140008727:	add    BYTE PTR [rax],ah
   140008729:	mov    es,WORD PTR [rax]
   14000872b:	add    BYTE PTR [rax],al
   14000872d:	add    BYTE PTR [rax],al
   14000872f:	add    BYTE PTR [rsi],dl
   140008731:	mov    es,WORD PTR [rax]
   140008733:	add    BYTE PTR [rax],al
   140008735:	add    BYTE PTR [rax],al
   140008737:	add    BYTE PTR [rsi],al
   140008739:	mov    BYTE PTR [rax],al
   14000873b:	add    BYTE PTR [rax],al
   14000873d:	add    BYTE PTR [rax],al
   14000873f:	add    BYTE PTR [rsi],cl
   140008741:	mov    es,WORD PTR [rax]
   140008743:	add    BYTE PTR [rax],al
   140008745:	add    BYTE PTR [rax],al
   140008747:	add    BYTE PTR [rax+0x8a],cl
	...
   140008755:	add    BYTE PTR [rax],al
   140008757:	add    BYTE PTR [rdi],al
   140008759:	add    BYTE PTR [rax],al
   14000875b:	add    BYTE PTR [rax],al
   14000875d:	add    BYTE PTR [rax],al
   14000875f:	adc    BYTE PTR [rsi+0x0],0x0
   140008766:	add    BYTE PTR [rax+0x2],al
   14000876c:	add    BYTE PTR [rax],al
   14000876e:	add    BYTE PTR [rax+0x9],al
   140008774:	add    BYTE PTR [rax],al
   140008776:	add    BYTE PTR [rax+0x6],al
   14000877c:	add    BYTE PTR [rax],al
   14000877e:	add    BYTE PTR [rax+0x0],al
   140008784:	add    BYTE PTR [rax],al
   140008786:	add    BYTE PTR [rax],al
   140008788:	int3   
   140008789:	xchg   DWORD PTR [rax],eax
   14000878b:	add    BYTE PTR [rax],al
   14000878d:	add    BYTE PTR [rax],al
   14000878f:	add    dl,bl
   140008791:	xchg   DWORD PTR [rax],eax
   140008793:	add    BYTE PTR [rax],al
   140008795:	add    BYTE PTR [rax],al
   140008797:	add    al,al
   140008799:	xchg   DWORD PTR [rax],eax
	...
   1400087a7:	add    ah,dl
   1400087a9:	lea    eax,[rax]
   1400087ab:	add    BYTE PTR [rax],al
   1400087ad:	add    BYTE PTR [rax],al
   1400087af:	add    ah,ah
   1400087b1:	lea    eax,[rax]
	...
   1400087bf:	add    BYTE PTR [rbx],bh
   1400087c1:	add    esi,DWORD PTR [rdi+0x73]
   1400087c4:	jo     0x140008838
   1400087c6:	imul   ebp,DWORD PTR [rsi+0x74],0x19005766
   1400087cd:	add    cl,BYTE PTR [rbp+0x65]
   1400087d0:	jae    0x140008845
   1400087d2:	(bad)  
   1400087d3:	rex.X outs dx,DWORD PTR gs:[esi]
   1400087d7:	js     0x140008830
   1400087d9:	add    dh,bh
   1400087db:	add    DWORD PTR [rdi+rbp*2+0x61],ecx
   1400087df:	fs push rbx
   1400087e1:	je     0x140008855
   1400087e3:	imul   ebp,DWORD PTR [rsi+0x67],0x53550057
   1400087ea:	rex.RB push r10
   1400087ec:	xor    esi,DWORD PTR [rdx]
   1400087ee:	cs fs ins BYTE PTR es:[rdi],dx
   1400087f1:	ins    BYTE PTR es:[rdi],dx
   1400087f2:	add    BYTE PTR [rax],al
   1400087f4:	movsxd eax,DWORD PTR [rax]
   1400087f6:	(bad)  
   1400087f7:	(bad)  
   1400087f8:	xor    al,BYTE PTR [rax+0x59]
   1400087fb:	push   r8
   1400087fd:	rex.RB
   1400087fe:	pop    r8
   140008800:	pop    rdi
   140008801:	rex.WXB
   140008802:	rex pop rdx
   140008804:	add    BYTE PTR [rax],al
   140008806:	jp     0x140008808
   140008808:	(bad)  
   140008809:	(bad)  
   14000880a:	pop    rdi
   14000880b:	push   rsi
   14000880c:	rex pop rcx
   14000880e:	pop    r8
   140008810:	push   rax
   140008811:	rex.RB
   140008812:	pop    r8
   140008814:	rex pop rdx
   140008816:	add    BYTE PTR [rax],al
   140008818:	(bad)  
   140008819:	add    al,0x5f
   14000881b:	jae    0x140008891
   14000881d:	(bad)  
   14000881e:	je     0x140008856
   140008820:	xor    al,0x69
   140008822:	xor    esi,DWORD PTR [rdx]
   140008824:	add    BYTE PTR [rax],al
   140008826:	sub    BYTE PTR [rcx],al
   140008828:	pop    rdi
   140008829:	pop    rdi
   14000882a:	rex.XB js 0x1400088a5
   14000882d:	rex.RX jb 0x140008891
   140008830:	ins    DWORD PTR es:[rdi],dx
   140008831:	gs rex.W (bad) 
   140008834:	outs   dx,BYTE PTR ds:[rsi]
   140008835:	fs ins BYTE PTR es:[rdi],dx
   140008837:	gs jb  0x14000886d
   14000883a:	add    BYTE PTR [rax],al
   14000883c:	add    BYTE PTR gs:[rdi],bh
   14000883f:	(bad)  
   140008840:	xor    eax,DWORD PTR [rax+0x59]
   140008843:	pop    r8
   140008845:	push   rax
   140008846:	rex.RB
   140008847:	pop    r8
   140008849:	rex pop rdx
   14000884b:	add    BYTE PTR [rax+0x0],bh
   14000884e:	(bad)  
   14000884f:	(bad)  
   140008850:	pop    rdi
   140008851:	push   rbp
   140008852:	rex pop rcx
   140008854:	push   r8
   140008856:	rex.RB
   140008857:	pop    r8
   140008859:	pop    rdi
   14000885a:	rex.WXB
   14000885b:	rex pop rdx
   14000885d:	add    cl,dh
   14000885f:	add    eax,0x72707773
   140008864:	imul   ebp,DWORD PTR [rsi+0x74],0x735f66
   14000886b:	add    BYTE PTR [rbp+0x6d656d05],ch
   140008871:	jae    0x1400088d8
   140008873:	je     0x140008875
   140008875:	add    BYTE PTR [rsi],bl
   140008877:	add    eax,0x6f74775f
   14000887c:	imul   eax,DWORD PTR [rax],0x63770616
   140008882:	jae    0x1400088e7
   140008884:	jo     0x1400088ff
   140008886:	pop    rdi
   140008887:	jae    0x140008889
   140008889:	add    BYTE PTR [rdi],cl
   14000888b:	add    eax,0x7073775f
   140008890:	ins    BYTE PTR es:[rdi],dx
   140008891:	imul   esi,DWORD PTR [rax+rsi*2+0x61],0x735f6874
   140008899:	add    BYTE PTR [rdx+0x6d656d05],ch
   14000889f:	movsxd esi,DWORD PTR [rax+0x79]
   1400088a2:	pop    rdi
   1400088a3:	jae    0x1400088a5
   1400088a5:	add    BYTE PTR [rcx],dl
   1400088a7:	(bad)  
   1400088a8:	ja     0x14000890d
   1400088aa:	jae    0x14000890f
   1400088ac:	(bad)  
   1400088ad:	je     0x14000890e
   1400088af:	jae    0x1400088b1
   1400088b1:	add    BYTE PTR [rbx],dl
   1400088b3:	add    eax,0x7473775f
   1400088b8:	(bad)  
   1400088b9:	je     0x1400088f1
   1400088bb:	xor    al,0x69
   1400088bd:	xor    esi,DWORD PTR [rdx]
   1400088bf:	add    BYTE PTR [rsi],bl
   1400088c1:	(bad)  
   1400088c2:	ja     0x140008927
   1400088c4:	jae    0x140008934
   1400088c6:	movsxd esi,DWORD PTR [rax+0x79]
   1400088c9:	pop    rdi
   1400088ca:	jae    0x1400088cc
   1400088cc:	hlt    
   1400088cd:	add    bl,BYTE PTR [rdi+0x6c]
   1400088d0:	outs   dx,DWORD PTR ds:[rsi]
   1400088d1:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400088d4:	je     0x14000893f
   1400088d6:	ins    DWORD PTR es:[rdi],dx
   1400088d7:	gs ss xor al,0x0
   1400088db:	add    bl,ch
   1400088dd:	add    ebx,DWORD PTR [rdi+0x73]
   1400088e0:	outs   dx,BYTE PTR ds:[rsi]
   1400088e1:	ja     0x140008953
   1400088e3:	jb     0x14000894e
   1400088e5:	outs   dx,BYTE PTR ds:[rsi]
   1400088e6:	je     0x14000894e
   1400088e8:	pop    rdi
   1400088e9:	jae    0x1400088eb
   1400088eb:	add    BYTE PTR [rax],bl
   1400088ed:	(bad)  
   1400088ee:	ja     0x140008953
   1400088f0:	jae    0x140008958
   1400088f2:	je     0x14000895d
   1400088f4:	ins    DWORD PTR es:[rdi],dx
   1400088f5:	add    BYTE PTR gs:[rax],al
   1400088f8:	add    bl,BYTE PTR ds:[rdi+0x66]
   1400088fc:	je     0x140008967
   1400088fe:	ins    DWORD PTR es:[rdi],dx
   1400088ff:	gs ss xor al,0x5f
   140008903:	jae    0x140008905
   140008905:	add    BYTE PTR [rdi+0x73765f04],al
   14000890b:	outs   dx,BYTE PTR ds:[rsi]
   14000890c:	ja     0x14000897e
   14000890e:	jb     0x140008979
   140008910:	outs   dx,BYTE PTR ds:[rsi]
   140008911:	je     0x140008979
   140008913:	pop    rdi
   140008914:	jae    0x140008916
   140008916:	test   eax,0x6d656d05
   14000891b:	movsxd esi,DWORD PTR [rax+0x79]
   14000891e:	add    BYTE PTR [rax],al
   140008920:	rex.WRB push r11
   140008922:	push   rsi
   140008923:	rex.XB push r10
   140008925:	xor    DWORD PTR [rax],esi
   140008927:	xor    BYTE PTR [rsi],ch
   140008929:	fs ins BYTE PTR es:[rdi],dx
   14000892b:	ins    BYTE PTR es:[rdi],dx
   14000892c:	add    BYTE PTR [rax],al
   14000892e:	add    BYTE PTR [rcx],al
   140008930:	(bad)  
   140008931:	je     0x140008998
   140008933:	jb     0x1400089a2
   140008935:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000893c:	pop    rcx
   14000893d:	pop    r8
   14000893f:	pop    rax
   140008940:	pop    rdx
   140008941:	add    BYTE PTR [rsi],bl
   140008943:	add    DWORD PTR [rdi+0x5f],ebx
   140008946:	rex.XB pop r15
   140008948:	jae    0x1400089ba
   14000894a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000894e:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140008955:	ins    BYTE PTR es:[rdi],dx
   140008956:	gs jb  0x140008959
   140008959:	add    BYTE PTR [rsi+0x6d615f01],bl
   14000895f:	jae    0x1400089c8
   140008961:	pop    rdi
   140008962:	gs js  0x1400089ce
   140008965:	je     0x140008967
   140008967:	add    BYTE PTR [rdx+0x1],dl
   14000896a:	pop    rdi
   14000896b:	pop    rdi
   14000896c:	addr32 gs je 0x1400089dd
   140008970:	(bad)  
   140008971:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140008978:	sbb    al,BYTE PTR [rcx]
   14000897a:	pop    rdi
   14000897b:	pop    rax
   14000897c:	movsxd esi,DWORD PTR [rax+0x74]
   14000897f:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x2000072
   140008988:	pop    rdi
   140008989:	gs js  0x1400089f5
   14000898c:	je     0x14000898e
   14000898e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000898f:	add    bl,BYTE PTR [rdi+0x69]
   140008992:	jae    0x140008a01
   140008994:	(bad)
   140008999:	add    BYTE PTR fs:[rax],al
   14000899c:	mov    ch,0x1
   14000899e:	pop    rdi
   14000899f:	movsxd esp,DWORD PTR [rbp+0x78]
   1400089a2:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x78650548
   1400089aa:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x615f0195
   1400089b2:	movsxd ebp,DWORD PTR [rbp+0x64]
   1400089b5:	ins    BYTE PTR es:[rdi],dx
   1400089b6:	outs   dx,BYTE PTR ds:[rsi]
   1400089b7:	add    BYTE PTR [rsi+0x6e695f02],al
   1400089bd:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x87006d72
   1400089c5:	add    bl,BYTE PTR [rdi+0x69]
   1400089c8:	outs   dx,BYTE PTR ds:[rsi]
   1400089c9:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x655f6d72
   1400089d1:	add    ch,al
   1400089d3:	add    DWORD PTR [rdi+0x63],ebx
   1400089d6:	outs   dx,DWORD PTR ds:[rsi]
   1400089d7:	outs   dx,BYTE PTR ds:[rsi]
   1400089d8:	imul   sp,WORD PTR [rdi+0x74],0x7268
   1400089de:	gs (bad) 
   1400089e0:	fs ins BYTE PTR es:[rdi],dx
   1400089e2:	outs   dx,DWORD PTR ds:[rsi]
   1400089e3:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400089e6:	add    BYTE PTR gs:[rcx+rax*1+0x5f],bh
   1400089eb:	pop    rdi
   1400089ec:	jae    0x140008a53
   1400089ee:	je     0x140008a65
   1400089f0:	jae    0x140008a57
   1400089f2:	jb     0x140008a61
   1400089f4:	(bad)  
   1400089f5:	je     0x140008a5f
   1400089f7:	gs jb  0x140008a6c
   1400089fa:	add    BYTE PTR [rax],al
   1400089fc:	(bad)
   140008a00:	outs   dx,DWORD PTR ds:[rsi]
   140008a01:	ins    DWORD PTR es:[rdi],dx
   140008a02:	ins    DWORD PTR es:[rdi],dx
   140008a03:	outs   dx,DWORD PTR ds:[rsi]
   140008a04:	fs add BYTE PTR gs:[rax],al
   140008a08:	sbb    al,0x2
   140008a0a:	pop    rdi
   140008a0b:	ins    WORD PTR es:[rdi],dx
   140008a0d:	outs   dx,DWORD PTR ds:[rsi]
   140008a0e:	fs add BYTE PTR gs:[rax],al
   140008a12:	jns    0x140008a15
   140008a14:	pop    rdi
   140008a15:	pop    rdi
   140008a16:	jae    0x140008a7d
   140008a18:	je     0x140008a79
   140008a1a:	(bad)  
   140008a1b:	jo     0x140008a8d
   140008a1d:	pop    rdi
   140008a1e:	je     0x140008a99
   140008a20:	jo     0x140008a87
   140008a22:	add    BYTE PTR [rax],al
   140008a24:	rex.RX add DWORD PTR [rdi+0x5f],r11d
   140008a28:	movsxd esi,DWORD PTR [rdx+0x74]
   140008a2b:	pop    rdi
   140008a2c:	fs gs (bad) 
   140008a2f:	jne    0x140008a98
   140008a31:	addr32 gs jb 0x140008a94
   140008a35:	push   0x6b6f6f
   140008a3a:	out    dx,al
   140008a3b:	add    BYTE PTR [rdi],bh
   140008a3d:	pop    rdi
   140008a3e:	je     0x140008ab9
   140008a40:	jo     0x140008aa7
   140008a42:	pop    rdi
   140008a43:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   140008a4a:	outs   dx,DWORD PTR ds:[rsi]
   140008a4b:	jb     0x140008aac
   140008a4d:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   140008a54:	ins    BYTE PTR es:[rdi],dx
   140008a55:	pop    rdi
   140008a56:	ins    DWORD PTR es:[rdi],dx
   140008a57:	gs je  0x140008ac2
   140008a5a:	outs   dx,DWORD PTR ds:[rsi]
   140008a5b:	fs rex je 0x140008ad8
   140008a5f:	jo     0x140008ac6
   140008a61:	pop    rdi
   140008a62:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   140008a69:	rex.RB
   140008a6a:	rex.B
   140008a6b:	pop    r8
   140008a6d:	pop    rax
   140008a6e:	pop    rdx
   140008a6f:	add    BYTE PTR [rbx+0x4],bl
   140008a72:	pop    rdi
   140008a73:	jne    0x140008ae3
   140008a75:	ins    BYTE PTR es:[rdi],dx
   140008a76:	outs   dx,DWORD PTR ds:[rsi]
   140008a77:	movsxd ebp,DWORD PTR [rbx+0x0]
   140008a7a:	add    QWORD PTR [rdi+0x5f],rbx
   140008a7e:	fs ins BYTE PTR es:[rdi],dx
   140008a80:	ins    BYTE PTR es:[rdi],dx
   140008a81:	outs   dx,DWORD PTR ds:[rsi]
   140008a82:	outs   dx,BYTE PTR ds:[rsi]
   140008a83:	gs js  0x140008aef
   140008a86:	je     0x140008a88
   140008a88:	test   BYTE PTR [rdx],0x5f
   140008a8b:	ins    BYTE PTR es:[rdi],dx
   140008a8c:	outs   dx,DWORD PTR ds:[rsi]
   140008a8d:	movsxd ebp,DWORD PTR [rbx+0x0]
   140008a90:	popf   
   140008a91:	add    ebx,DWORD PTR [rdi+0x6f]
   140008a94:	outs   dx,BYTE PTR ds:[rsi]
   140008a95:	gs js  0x140008b01
   140008a98:	je     0x140008a9a
   140008a9a:	mov    bh,0x2
   140008a9c:	rex.RXB
   140008a9d:	gs je  0x140008af7
   140008aa0:	imul   ebp,DWORD PTR [rsi+0x64],0x4473776f
   140008aa7:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   140008aae:	jns    0x140008b07
   140008ab0:	add    BYTE PTR [rax],al
   140008ab2:	jrcxz  0x140008ab5
   140008ab4:	rex.RXB
   140008ab5:	gs je  0x140008afd
   140008ab8:	outs   dx,BYTE PTR ds:[rsi]
   140008ab9:	jbe    0x140008b24
   140008abb:	jb     0x140008b2c
   140008abd:	outs   dx,BYTE PTR ds:[rsi]
   140008abe:	ins    DWORD PTR es:[rdi],dx
   140008abf:	outs   dx,BYTE PTR gs:[rsi]
   140008ac1:	je     0x140008b19
   140008ac3:	(bad)  
   140008ac4:	jb     0x140008b2f
   140008ac6:	(bad)  
   140008ac7:	(bad)  
   140008ac8:	ins    BYTE PTR es:[rdi],dx
   140008ac9:	gs push rdi
   140008acb:	add    BYTE PTR [rcx+rax*1+0x46],ah
   140008acf:	outs   dx,DWORD PTR ds:[rsi]
   140008ad0:	jb     0x140008b3f
   140008ad2:	(bad)  
   140008ad3:	je     0x140008b22
   140008ad5:	gs jae 0x140008b4b
   140008ad8:	(bad)  
   140008ad9:	addr32 gs push rdi
   140008adc:	add    BYTE PTR [rax],al
   140008ade:	push   rdx
   140008adf:	add    BYTE PTR [rbx+0x6c],al
   140008ae2:	outs   dx,DWORD PTR ds:[rsi]
   140008ae3:	jae    0x140008b4a
   140008ae5:	rex.W (bad) 
   140008ae7:	outs   dx,BYTE PTR ds:[rsi]
   140008ae8:	fs ins BYTE PTR es:[rdi],dx
   140008aea:	add    BYTE PTR gs:[rax+0x1],ch
   140008aee:	rex.RX jb 0x140008b56
   140008af1:	imul   r12,QWORD PTR gs:[rdx+0x72],0x797261
   140008afa:	rex.WR add r8b,BYTE PTR [rdi+0x65]
   140008afe:	je     0x140008b50
   140008b00:	jb     0x140008b71
   140008b02:	movsxd eax,DWORD PTR [rcx+0x64]
   140008b05:	fs jb  0x140008b6d
   140008b08:	jae    0x140008b7d
   140008b0a:	add    BYTE PTR [rax],al
   140008b0c:	or     BYTE PTR [rdx],al
   140008b0e:	rex.RXB
   140008b0f:	gs je  0x140008b5e
   140008b12:	(bad)  
   140008b13:	jae    0x140008b89
   140008b15:	rex.RB jb 0x140008b8a
   140008b18:	outs   dx,DWORD PTR ds:[rsi]
   140008b19:	jb     0x140008b1b
   140008b1b:	add    BYTE PTR [rcx+0x3],al
   140008b1e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008b20:	(bad)  
   140008b21:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   140008b2a:	add    BYTE PTR [rax],al
   140008b2c:	adc    eax,0x74654702
   140008b31:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008b33:	outs   dx,BYTE PTR ds:[rsi]
   140008b34:	addr32 push rax
   140008b36:	(bad)  
   140008b37:	je     0x140008ba1
   140008b39:	rex.WRX (bad) 
   140008b3b:	ins    DWORD PTR es:[rdi],dx
   140008b3c:	gs push rdi
   140008b3e:	add    BYTE PTR [rax],al
   140008b40:	sbb    al,BYTE PTR [rdx]
   140008b42:	rex.RXB
   140008b43:	gs je  0x140008b93
   140008b46:	outs   dx,DWORD PTR ds:[rsi]
   140008b47:	fs jne 0x140008bb6
   140008b4a:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   140008b54:	add    BYTE PTR [rax],al
   140008b56:	(bad)  
   140008b57:	add    al,BYTE PTR [rdi+0x65]
   140008b5a:	je     0x140008ba9
   140008b5c:	outs   dx,DWORD PTR ds:[rsi]
   140008b5d:	fs jne 0x140008bcc
   140008b60:	gs rex.W (bad) 
   140008b63:	outs   dx,BYTE PTR ds:[rsi]
   140008b64:	fs ins BYTE PTR es:[rdi],dx
   140008b66:	gs push rdi
   140008b68:	add    BYTE PTR [rax],al
   140008b6a:	enter  0x4702,0x6c
   140008b6e:	outs   dx,DWORD PTR ds:[rsi]
   140008b6f:	(bad)
   140008b74:	ins    DWORD PTR es:[rdi],dx
   140008b75:	outs   dx,DWORD PTR ds:[rsi]
   140008b76:	jb     0x140008bf1
   140008b78:	push   rbx
   140008b79:	je     0x140008bdc
   140008b7b:	je     0x140008bf2
   140008b7d:	jae    0x140008bc4
   140008b7f:	js     0x140008b81
   140008b81:	add    BYTE PTR [rdx+rax*1+0x56746547],ch
   140008b88:	gs jb  0x140008bfe
   140008b8b:	imul   ebp,DWORD PTR [rdi+0x6e],0x577845
   140008b92:	test   DWORD PTR [rsi+rdx*2],0x66697265
   140008b99:	jns    0x140008bf1
   140008b9b:	gs jb  0x140008c11
   140008b9e:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f666e49
   140008ba5:	push   rdi
   140008ba6:	add    BYTE PTR [rax],al
   140008ba8:	repz add al,0x56
   140008bab:	gs jb  0x140008c01
   140008bae:	gs je  0x140008bf4
   140008bb1:	outs   dx,DWORD PTR ds:[rsi]
   140008bb2:	outs   dx,BYTE PTR ds:[rsi]
   140008bb3:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x73614d6e
   140008bbc:	imul   eax,DWORD PTR [rax],0xffffffc6
   140008bbf:	add    DWORD PTR [rdi+0x65],eax
   140008bc2:	je     0x140008c07
   140008bc4:	jne    0x140008c38
   140008bc6:	jb     0x140008c2d
   140008bc8:	outs   dx,BYTE PTR ds:[rsi]
   140008bc9:	je     0x140008c1b
   140008bcb:	jb     0x140008c3c
   140008bcd:	movsxd esp,DWORD PTR [rbp+0x73]
   140008bd0:	jae    0x140008bd2
   140008bd2:	sub    eax,DWORD PTR [rdx]
   140008bd4:	rex.RXB
   140008bd5:	gs je  0x140008c26
   140008bd8:	(bad)  
   140008bd9:	je     0x140008c44
   140008bdb:	jbe    0x140008c42
   140008bdd:	push   rbx
   140008bde:	jns    0x140008c53
   140008be0:	je     0x140008c47
   140008be2:	ins    DWORD PTR es:[rdi],dx
   140008be3:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008be5:	outs   dx,WORD PTR ds:[rsi]
   140008be7:	add    BYTE PTR [rdi+0x65724300],cl
   140008bed:	(bad)  
   140008bee:	je     0x140008c55
   140008bf0:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x47027700
   140008bf9:	gs je  0x140008c4f
   140008bfc:	jns    0x140008c71
   140008bfe:	je     0x140008c65
   140008c00:	ins    DWORD PTR es:[rdi],dx
   140008c01:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   140008c09:	jns    0x140008c62
   140008c0b:	add    BYTE PTR [rax+0x65724300],ch
   140008c11:	(bad)  
   140008c12:	je     0x140008c79
   140008c14:	push   rax
   140008c15:	jb     0x140008c86
   140008c17:	movsxd esp,DWORD PTR [rbp+0x73]
   140008c1a:	jae    0x140008c73
   140008c1c:	add    BYTE PTR [rax],al
   140008c1e:	or     BYTE PTR [rip+0x74696157],al        # 0x1b469ed7b
   140008c24:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140008c26:	jb     0x140008c7b
   140008c28:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   140008c2f:	push   0x65
   140008c31:	movsxd esi,DWORD PTR [rax+rax*1+0x61]
   140008c35:	add    eax,0x7274736c
   140008c3a:	ins    BYTE PTR es:[rdi],dx
   140008c3b:	outs   dx,BYTE PTR gs:[rsi]
   140008c3d:	push   rdi
   140008c3e:	add    BYTE PTR [rax],al
   140008c40:	add    r9d,DWORD PTR [rdi+r13*2+0x63]
   140008c45:	(bad)  
   140008c46:	ins    BYTE PTR es:[rdi],dx
   140008c47:	rex.B ins BYTE PTR es:[rdi],dx
   140008c49:	ins    BYTE PTR es:[rdi],dx
   140008c4a:	outs   dx,DWORD PTR ds:[rsi]
   140008c4b:	movsxd eax,DWORD PTR [rax]
   140008c4d:	add    BYTE PTR [rax+0x2],ch
   140008c50:	rex.RXB
   140008c51:	gs je  0x140008ca7
   140008c54:	push   0x5074726f
   140008c59:	(bad)  
   140008c5a:	je     0x140008cc4
   140008c5c:	rex.WRX (bad) 
   140008c5e:	ins    DWORD PTR es:[rdi],dx
   140008c5f:	gs push rdi
   140008c61:	add    BYTE PTR [rbx+rax*1+0x7074754f],cl
   140008c68:	jne    0x140008cde
   140008c6a:	rex.R
   140008c6b:	gs (bad) 
   140008c6d:	jne    0x140008cd6
   140008c6f:	push   rbx
   140008c70:	je     0x140008ce4
   140008c72:	imul   ebp,DWORD PTR [rsi+0x67],0xc7000057
   140008c79:	add    DWORD PTR [rdi+0x65],eax
   140008c7c:	je     0x140008cc1
   140008c7e:	jne    0x140008cf2
   140008c80:	jb     0x140008ce7
   140008c82:	outs   dx,BYTE PTR ds:[rsi]
   140008c83:	je     0x140008cd5
   140008c85:	jb     0x140008cf6
   140008c87:	movsxd esp,DWORD PTR [rbp+0x73]
   140008c8a:	jae    0x140008cd5
   140008c8c:	fs add bl,cl
   140008c8f:	add    DWORD PTR [rdi+0x65],eax
   140008c92:	je     0x140008cd7
   140008c94:	jne    0x140008d08
   140008c96:	jb     0x140008cfd
   140008c98:	outs   dx,BYTE PTR ds:[rsi]
   140008c99:	je     0x140008cef
   140008c9b:	push   0x64616572
   140008ca0:	rex.WB
   140008ca1:	add    BYTE PTR fs:[rax],al
   140008ca4:	rol    BYTE PTR [rbx+rdx*2],0x6c
   140008ca8:	gs gs jo 0x140008cac
   140008cac:	push   0x2
   140008cae:	rex.RXB
   140008caf:	gs je  0x140008d05
   140008cb2:	je     0x140008d15
   140008cb4:	jb     0x140008d2a
   140008cb6:	jne    0x140008d28
   140008cb8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008cba:	outs   dx,WORD PTR ds:[rsi]
   140008cbc:	push   rdi
   140008cbd:	add    dh,ch
   140008cbf:	add    BYTE PTR [rbp+0x6e],al
   140008cc2:	movsxd ebp,DWORD PTR [rdi+0x64]
   140008cc5:	gs push rax
   140008cc7:	outs   dx,DWORD PTR ds:[rsi]
   140008cc8:	imul   ebp,DWORD PTR [rsi+0x74],0xce007265
   140008ccf:	add    al,0x54
   140008cd1:	gs jb  0x140008d41
   140008cd4:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140008cdb:	outs   dx,DWORD PTR ds:[rsi]
   140008cdc:	movsxd esp,DWORD PTR [rbp+0x73]
   140008cdf:	jae    0x140008ce1
   140008ce1:	add    dl,ah
   140008ce3:	add    al,0x55
   140008ce5:	outs   dx,BYTE PTR ds:[rsi]
   140008ce6:	push   0x6c646e61
   140008ceb:	gs fs rex.RB js 0x140008d53
   140008cf0:	gs jo  0x140008d67
   140008cf3:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140008cfa:	gs jb  0x140008cfd
   140008cfd:	add    BYTE PTR [rbx+0x74655304],dh
   140008d03:	push   rbp
   140008d04:	outs   dx,BYTE PTR ds:[rsi]
   140008d05:	push   0x6c646e61
   140008d0a:	gs fs rex.RB js 0x140008d72
   140008d0f:	gs jo  0x140008d86
   140008d12:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140008d19:	gs jb  0x140008d1c
   140008d1c:	add    al,BYTE PTR [rbx]
   140008d1e:	rex.WB jae 0x140008d65
   140008d21:	gs (bad) 
   140008d23:	jne    0x140008d8c
   140008d25:	addr32 gs jb 0x140008d79
   140008d29:	jb     0x140008d90
   140008d2b:	jae    0x140008d92
   140008d2d:	outs   dx,BYTE PTR ds:[rsi]
   140008d2e:	je     0x140008d30
   140008d30:	es add al,0x52
   140008d33:	je     0x140008da1
   140008d35:	push   rsi
   140008d36:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140008d3d:	outs   dx,BYTE PTR ds:[rsi]
   140008d3e:	ja     0x140008da9
   140008d40:	outs   dx,BYTE PTR ds:[rsi]
   140008d41:	add    BYTE PTR fs:[rax],al
   140008d44:	(bad)  
   140008d45:	add    al,0x52
   140008d47:	je     0x140008db5
   140008d49:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008d4b:	outs   dx,DWORD PTR ds:[rsi]
   140008d4c:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140008d50:	jne    0x140008dc0
   140008d52:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140008d56:	outs   dx,BYTE PTR ds:[rsi]
   140008d57:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140008d59:	je     0x140008dcd
   140008d5b:	jns    0x140008d5d
   140008d5d:	add    BYTE PTR [rax],bl
   140008d5f:	add    al,0x52
   140008d61:	je     0x140008dcf
   140008d63:	rex.XB (bad) 
   140008d65:	jo     0x140008ddb
   140008d67:	jne    0x140008ddb
   140008d69:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140008d6c:	outs   dx,BYTE PTR ds:[rsi]
   140008d6d:	je     0x140008dd4
   140008d6f:	js     0x140008de5
   140008d71:	add    bl,cl
   140008d73:	add    BYTE PTR [rbp+riz*2+0x63],al
   140008d77:	outs   dx,DWORD PTR ds:[rsi]
   140008d78:	fs gs push rax
   140008d7b:	outs   dx,DWORD PTR ds:[rsi]
   140008d7c:	imul   ebp,DWORD PTR [rsi+0x74],0xa9007265
   140008d83:	add    edx,DWORD PTR [rcx+0x75]
   140008d86:	gs jb  0x140008e02
   140008d89:	push   rax
   140008d8a:	gs jb  0x140008df3
   140008d8d:	outs   dx,DWORD PTR ds:[rsi]
   140008d8e:	jb     0x140008dfd
   140008d90:	(bad)  
   140008d91:	outs   dx,BYTE PTR ds:[rsi]
   140008d92:	movsxd esp,DWORD PTR [rbp+0x43]
   140008d95:	outs   dx,DWORD PTR ds:[rsi]
   140008d96:	jne    0x140008e06
   140008d98:	je     0x140008dff
   140008d9a:	jb     0x140008d9c
   140008d9c:	(bad)  
   140008d9d:	add    al,BYTE PTR [rdi+0x65]
   140008da0:	je     0x140008df6
   140008da2:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140008da9:	je     0x140008dab
   140008dab:	add    BYTE PTR [rax+0x74654702],al
   140008db1:	push   rbx
   140008db2:	jns    0x140008e27
   140008db4:	je     0x140008e1b
   140008db6:	ins    DWORD PTR es:[rdi],dx
   140008db7:	push   rsp
   140008db8:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140008dbf:	ins    BYTE PTR es:[rdi],dx
   140008dc0:	gs push rsp
   140008dc2:	imul   ebp,DWORD PTR [rbp+0x65],0x52454b00
   140008dc9:	rex.WRX
   140008dca:	rex.RB
   140008dcb:	xor    r14,QWORD PTR [rdx]
   140008dce:	cs fs ins BYTE PTR es:[rdi],dx
   140008dd1:	ins    BYTE PTR es:[rdi],dx
   140008dd2:	add    BYTE PTR [rax],al
   140008dd4:	ins    BYTE PTR es:[rdi],dx
   140008dd5:	add    BYTE PTR [rbx+0x6f],al
   140008dd8:	push   rsp
   140008dd9:	(bad)  
   140008dda:	jae    0x140008e47
   140008ddc:	rex.WRB
   140008ddd:	gs ins DWORD PTR es:[rdi],dx
   140008ddf:	rex.RX jb 0x140008e47
   140008de2:	add    BYTE PTR gs:[rcx+rax*1+0x69727453],dh
   140008dea:	outs   dx,BYTE PTR ds:[rsi]
   140008deb:	addr32 rex.RX jb 0x140008e5e
   140008def:	ins    DWORD PTR es:[rdi],dx
   140008df0:	rex.XB
   140008df1:	rex.WR push rbx
   140008df3:	rex.WB
   140008df4:	add    BYTE PTR [rdi+0x6c],r13b
   140008df8:	xor    esi,DWORD PTR gs:[rdx]
   140008dfb:	cs fs ins BYTE PTR es:[rdi],dx
   140008dfe:	ins    BYTE PTR es:[rdi],dx
   140008dff:	add    BYTE PTR [rdi+0x4c],cl
   140008e02:	rex.RB
   140008e03:	push   r13
   140008e05:	push   rsp
   140008e06:	xor    esi,DWORD PTR [rdx]
   140008e08:	cs fs ins BYTE PTR es:[rdi],dx
   140008e0b:	ins    BYTE PTR es:[rdi],dx
   140008e0c:	add    BYTE PTR [rax],al
   140008e0e:	movsxd eax,DWORD PTR [rip+0x65657266]        # 0x1a566007a
   140008e14:	add    BYTE PTR [rax],al
   140008e16:	sahf   
   140008e17:	add    eax,0x6c6c616d
   140008e1c:	outs   dx,DWORD PTR ds:[rsi]
   140008e1d:	movsxd eax,DWORD PTR [rax]
   140008e1f:	add    BYTE PTR [rsi],cl
   140008e21:	add    DWORD PTR [rdi+0x43],ebx
   140008e24:	js     0x140008e9e
   140008e26:	push   rsp
   140008e27:	push   0x45776f72
   140008e2c:	js     0x140008e91
   140008e2e:	gs jo  0x140008ea5
   140008e31:	imul   ebp,DWORD PTR [rdi+0x6e],0x3690000
   140008e38:	rex.WRB jne 0x140008ea7
   140008e3b:	je     0x140008ea6
   140008e3d:	rex.X jns 0x140008eb4
   140008e40:	gs push rsp
   140008e42:	outs   dx,DWORD PTR ds:[rsi]
   140008e43:	push   rdi
   140008e44:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   140008e4c:	(bad)  
   140008e4d:	add    eax,0x7274736c
   140008e52:	ins    BYTE PTR es:[rdi],dx
   140008e53:	outs   dx,BYTE PTR gs:[rsi]
   140008e55:	add    BYTE PTR [r8],al
   140008e58:	and    BYTE PTR [rip+0x65646957],al        # 0x1a564f7b5
   140008e5e:	rex.XB push 0x6f547261
   140008e64:	rex.WRB jne 0x140008ed3
   140008e67:	je     0x140008ed2
   140008e69:	rex.X jns 0x140008ee0
   140008e6c:	add    BYTE PTR gs:[rdx+0x3],cl
   140008e70:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008e72:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008e75:	rex.RX jb 0x140008edd
   140008e78:	add    BYTE PTR gs:[rsi],bh
   140008e7b:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   140008e7f:	imul   r12,QWORD PTR fs:[rdx+0x72],0x41797261
   140008e88:	add    BYTE PTR [rax],al
   140008e8a:	mov    ah,0x3
   140008e8c:	push   rdx
   140008e8d:	(bad)  
   140008e8e:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   140008e95:	jo     0x140008f0b
   140008e97:	.byte 0x69
   140008e98:	outs   dx,DWORD PTR ds:[rsi]
   140008e99:	outs   dx,BYTE PTR ds:[rsi]
	...

Disassembly of section .data:

0000000140009000 <.data>:
   140009000:	mov    BYTE PTR [rsi+0x0],dh
   140009003:	rex add DWORD PTR [rax],eax
	...
   14000900e:	add    BYTE PTR [rax],al
   140009010:	cs (bad) 
   140009012:	push   r14
   140009014:	pop    rdi
   140009015:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140009018:	pop    rdi
   140009019:	gs jb  0x14000908e
   14000901c:	outs   dx,DWORD PTR ds:[rsi]
   14000901d:	jb     0x14000905f
   14000901f:	add    BYTE PTR [rax],al
   140009022:	add    BYTE PTR [rax],al
   140009024:	add    DWORD PTR [rax],eax
   140009026:	add    BYTE PTR [rax],al
   140009028:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000902e:	add    BYTE PTR [rax],al
   140009030:	int    0x5d
   140009032:	and    dl,dl
   140009034:	data16 (bad) 
   140009036:	(bad)  
   140009037:	inc    DWORD PTR [rax]
   140009039:	add    BYTE PTR [rax],al
   14000903b:	add    BYTE PTR [rax],al
   14000903d:	add    BYTE PTR [rax],al
   14000903f:	add    BYTE PTR [rax+0x1400076],cl
	...
   14000904d:	add    BYTE PTR [rax],al
   14000904f:	add    BYTE PTR [rsi],ch
   140009051:	(bad)  
   140009052:	push   r14
   140009054:	je     0x1400090cf
   140009056:	jo     0x1400090bd
   140009058:	pop    rdi
   140009059:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   140009060:	(bad)  
   140009061:	(bad)  
   140009062:	(bad)  
   140009063:	(bad)  
   140009064:	(bad)  
   140009065:	(bad)  
   140009066:	(bad)  
   140009067:	(bad)  
   140009068:	(bad)  
   140009069:	(bad)  
   14000906a:	(bad)  
   14000906b:	inc    DWORD PTR [rcx]
   14000906d:	add    BYTE PTR [rax],al
   14000906f:	add    BYTE PTR [rdx],cl
   140009071:	add    BYTE PTR [rax],al
   140009073:	add    BYTE PTR [rax],al
   140009075:	add    BYTE PTR [rax],al
   140009077:	add    BYTE PTR [rax+rax*1],al
   14000907a:	add    al,BYTE PTR [rax+0x0]
	...
   140009088:	xor    BYTE PTR [rax+0x0],bl
   14000908b:	rex add DWORD PTR [rax],eax
   14000908e:	add    BYTE PTR [rax],al
   140009090:	jne    0x14000902a
   140009092:	add    BYTE PTR [rax],al
   140009094:	add    BYTE PTR [rax],al
   140009096:	add    BYTE PTR [rax],al
   140009098:	cmp    DWORD PTR [rax+0x0],ecx
   14000909b:	rex add DWORD PTR [rax],eax
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	mov    esi,0x1400048
   1400090a5:	add    BYTE PTR [rax],al
   1400090a7:	add    dl,cl
   1400090a9:	rex.W add BYTE PTR [rax+0x1],al
   1400090ad:	add    BYTE PTR [rax],al
   1400090af:	add    dh,dl
   1400090b1:	rex.W add BYTE PTR [rax+0x1],al
   1400090b5:	add    BYTE PTR [rax],al
   1400090b7:	add    dl,ah
   1400090b9:	rex.W add BYTE PTR [rax+0x1],al
   1400090bd:	add    BYTE PTR [rax],al
   1400090bf:	add    dh,ch
   1400090c1:	rex.W add BYTE PTR [rax+0x1],al
   1400090c5:	add    BYTE PTR [rax],al
   1400090c7:	add    dl,bh
   1400090c9:	rex.W add BYTE PTR [rax+0x1],al
   1400090cd:	add    BYTE PTR [rax],al
   1400090cf:	add    BYTE PTR [rsi],al
   1400090d1:	rex.WB add BYTE PTR [r8+0x1],al
   1400090d5:	add    BYTE PTR [rax],al
   1400090d7:	add    BYTE PTR [rdx],dl
   1400090d9:	rex.WB add BYTE PTR [r8+0x1],al
	...
   1400090e5:	add    BYTE PTR [rax],al
   1400090e7:	add    BYTE PTR [rdi+0x1400054],dl
   1400090ed:	add    BYTE PTR [rax],al
   1400090ef:	add    BYTE PTR [rbx+0x1400054],ah
   1400090f5:	add    BYTE PTR [rax],al
   1400090f7:	add    BYTE PTR [rdx],dl
   1400090f9:	push   rsp
   1400090fa:	add    BYTE PTR [rax+0x1],al
	...
   140009105:	add    BYTE PTR [rax],al
   140009107:	add    BYTE PTR [rdi+0x1400054],ch
	...

Disassembly of section .pdata:

000000014000a000 <.pdata>:
   14000a000:	add    BYTE PTR [rax],dl
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	rex.WXB adc BYTE PTR [r8],al
   14000a007:	add    al,dh
   14000a009:	ja     0x14000a00b
   14000a00b:	add    BYTE PTR [rax+0x10],ah
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	cwde   
   14000a011:	adc    BYTE PTR [rax],al
   14000a013:	add    ah,bh
   14000a015:	ja     0x14000a017
   14000a017:	add    BYTE PTR [rax+0x14000010],ah
   14000a01d:	adc    DWORD PTR [rax],eax
   14000a01f:	add    BYTE PTR [rax+rdi*2],al
   14000a022:	add    BYTE PTR [rax],al
   14000a024:	and    al,0x11
   14000a026:	add    BYTE PTR [rax],al
   14000a028:	(bad)  
   14000a02a:	add    BYTE PTR [rax],al
   14000a02c:	sbb    BYTE PTR [rax+0x0],bh
   14000a02f:	add    BYTE PTR [rcx+rdx*1+0x0],dh
   14000a033:	add    bl,dl
   14000a035:	adc    DWORD PTR [rax],eax
   14000a037:	add    BYTE PTR [rax],ah
   14000a039:	js     0x14000a03b
   14000a03b:	add    ah,ah
   14000a03d:	adc    DWORD PTR [rax],eax
   14000a03f:	add    al,dl
   14000a041:	adc    al,BYTE PTR [rax]
   14000a043:	add    BYTE PTR [rax],ch
   14000a045:	js     0x14000a047
   14000a047:	add    ah,ah
   14000a049:	adc    al,BYTE PTR [rax]
   14000a04b:	add    cl,dh
   14000a04d:	adc    eax,0x78480000
   14000a052:	add    BYTE PTR [rax],al
   14000a054:	add    al,0x16
   14000a056:	add    BYTE PTR [rax],al
   14000a058:	pop    rbp
   14000a059:	(bad)  
   14000a05a:	add    BYTE PTR [rax],al
   14000a05c:	mov    BYTE PTR [rax+0x0],bh
   14000a05f:	add    BYTE PTR [rax+0x17],ah
   14000a062:	add    BYTE PTR [rax],al
   14000a064:	xlat   BYTE PTR ds:[rbx]
   14000a065:	(bad)  
   14000a066:	add    BYTE PTR [rax],al
   14000a068:	test   al,0x78
   14000a06a:	add    BYTE PTR [rax],al
   14000a06c:	fcom   DWORD PTR [rdi]
   14000a06e:	add    BYTE PTR [rax],al
   14000a070:	movsxd ebx,DWORD PTR [rax]
   14000a072:	add    BYTE PTR [rax],al
   14000a074:	loopne 0x14000a0ee
   14000a076:	add    BYTE PTR [rax],al
   14000a078:	sbb    BYTE PTR fs:[rax],al
   14000a07b:	add    BYTE PTR [rbp+0x10000018],bh
   14000a081:	jns    0x14000a083
   14000a083:	add    al,al
   14000a085:	sbb    BYTE PTR [rax],al
   14000a087:	add    BYTE PTR [rdi+0x19],dh
   14000a08a:	add    BYTE PTR [rax],al
   14000a08c:	sbb    al,0x79
   14000a08e:	add    BYTE PTR [rax],al
   14000a090:	js     0x14000a0ab
   14000a092:	add    BYTE PTR [rax],al
   14000a094:	add    al,0x1a
   14000a096:	add    BYTE PTR [rax],al
   14000a098:	xor    BYTE PTR [rcx+0x0],bh
   14000a09b:	add    BYTE PTR [rdx+rbx*1],al
   14000a09e:	add    BYTE PTR [rax],al
   14000a0a0:	pushf  
   14000a0a1:	sbb    al,BYTE PTR [rax]
   14000a0a3:	add    BYTE PTR [rax+0x79],al
   14000a0a6:	add    BYTE PTR [rax],al
   14000a0a8:	pushf  
   14000a0a9:	sbb    al,BYTE PTR [rax]
   14000a0ab:	add    BYTE PTR [rdi],ch
   14000a0ad:	sbb    eax,DWORD PTR [rax]
   14000a0af:	add    BYTE PTR [rcx+rdi*2+0x0],cl
   14000a0b3:	add    BYTE PTR [rax],dh
   14000a0b5:	sbb    eax,DWORD PTR [rax]
   14000a0b7:	add    dl,al
   14000a0b9:	sbb    eax,DWORD PTR [rax]
   14000a0bb:	add    BYTE PTR [rax+0x7e],ch
   14000a0be:	add    BYTE PTR [rax],al
   14000a0c0:	adc    al,0x1c
   14000a0c2:	add    BYTE PTR [rax],al
   14000a0c4:	push   rcx
   14000a0c5:	sbb    al,0x0
   14000a0c7:	add    BYTE PTR [rax+0x79],bl
   14000a0ca:	add    BYTE PTR [rax],al
   14000a0cc:	test   BYTE PTR [rax+rax*1],bl
   14000a0cf:	add    BYTE PTR [rsi+0x6000001c],dh
   14000a0d5:	jns    0x14000a0d7
   14000a0d7:	add    ah,al
   14000a0d9:	sbb    al,0x0
   14000a0db:	add    al,dh
   14000a0dd:	sbb    al,0x0
   14000a0df:	add    BYTE PTR [rcx+rdi*2+0x0],ch
   14000a0e3:	add    BYTE PTR [rbx*1+0x1d9b0000],dh
   14000a0ea:	add    BYTE PTR [rax],al
   14000a0ec:	je     0x14000a167
   14000a0ee:	add    BYTE PTR [rax],al
   14000a0f0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a0f1:	sbb    eax,0x1e4c0000
   14000a0f6:	add    BYTE PTR [rax],al
   14000a0f8:	test   BYTE PTR [rcx+0x0],bh
   14000a0fb:	add    BYTE PTR [rsi+rbx*1+0x0],dl
   14000a0ff:	add    BYTE PTR [rbx],cl
   14000a101:	(bad)  
   14000a102:	add    BYTE PTR [rax],al
   14000a104:	xchg   esp,eax
   14000a105:	jns    0x14000a107
   14000a107:	add    BYTE PTR [rdi+rbx*1],dl
   14000a10a:	add    BYTE PTR [rax],al
   14000a10c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a10d:	(bad)  
   14000a10e:	add    BYTE PTR [rax],al
   14000a110:	test   al,0x79
   14000a112:	add    BYTE PTR [rax],al
   14000a114:	mov    ah,0x1f
   14000a116:	add    BYTE PTR [rax],al
   14000a118:	pop    rdi
   14000a119:	and    BYTE PTR [rax],al
   14000a11b:	add    BYTE PTR [rcx+rdi*2+0x20740000],bh
   14000a122:	add    BYTE PTR [rax],al
   14000a124:	mov    esi,0xd0000020
   14000a129:	jns    0x14000a12b
   14000a12b:	add    ah,al
   14000a12d:	and    BYTE PTR [rax],al
   14000a12f:	add    bl,dh
   14000a131:	and    BYTE PTR [rax],al
   14000a133:	add    al,bl
   14000a135:	jns    0x14000a137
   14000a137:	add    BYTE PTR [rcx+riz*1],al
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	pop    rcx
   14000a13d:	and    DWORD PTR [rax],eax
   14000a13f:	add    al,ah
   14000a141:	jns    0x14000a143
   14000a143:	add    BYTE PTR [rcx+riz*1+0x0],ah
   14000a147:	add    BYTE PTR [rdi],ah
   14000a149:	and    al,BYTE PTR [rax]
   14000a14b:	add    al,ch
   14000a14d:	jns    0x14000a14f
   14000a14f:	add    BYTE PTR [rdx+riz*1],dh
   14000a152:	add    BYTE PTR [rax],al
   14000a154:	xchg   esi,eax
   14000a155:	and    al,BYTE PTR [rax]
   14000a157:	add    BYTE PTR [rax],al
   14000a159:	jp     0x14000a15b
   14000a15b:	add    BYTE PTR [rdx+riz*1+0x23130000],ah
   14000a162:	add    BYTE PTR [rax],al
   14000a164:	or     BYTE PTR [rdx+0x0],bh
   14000a167:	add    BYTE PTR [rbx+riz*1],ah
   14000a16a:	add    BYTE PTR [rax],al
   14000a16c:	(bad)  
   14000a16d:	and    al,0x0
   14000a16f:	add    BYTE PTR [rax],dl
   14000a171:	jp     0x14000a173
   14000a173:	add    BYTE PTR [rsp],ah
   14000a176:	add    BYTE PTR [rax],al
   14000a178:	or     BYTE PTR [rsi],ah
   14000a17a:	add    BYTE PTR [rax],al
   14000a17c:	sub    BYTE PTR [rdx+0x0],bh
   14000a17f:	add    BYTE PTR [rsi+riz*1],dl
   14000a182:	add    BYTE PTR [rax],al
   14000a184:	pop    rdi
   14000a185:	add    BYTE PTR es:[rax],al
   14000a188:	rex.W jp 0x14000a18b
   14000a18b:	add    BYTE PTR [rsi+riz*1+0x0],dh
   14000a18f:	add    BYTE PTR [rdi+0x50000026],bh
   14000a195:	jp     0x14000a197
   14000a197:	add    ah,dl
   14000a199:	add    BYTE PTR es:[rax],al
   14000a19c:	(bad)  
   14000a19d:	(bad)  
   14000a19e:	add    BYTE PTR [rax],al
   14000a1a0:	pop    rax
   14000a1a1:	jp     0x14000a1a3
   14000a1a3:	add    BYTE PTR [rdi+riz*1],dh
   14000a1a6:	add    BYTE PTR [rax],al
   14000a1a8:	imul   ebp,DWORD PTR [rax],0x7a600000
   14000a1ae:	add    BYTE PTR [rax],al
   14000a1b0:	je     0x14000a1da
   14000a1b2:	add    BYTE PTR [rax],al
   14000a1b4:	lock sub al,BYTE PTR [rax]
   14000a1b7:	add    BYTE PTR [rax+0x400007a],al
   14000a1bd:	sub    eax,DWORD PTR [rax]
   14000a1bf:	add    BYTE PTR [rcx],al
   14000a1c1:	sub    al,0x0
   14000a1c3:	add    BYTE PTR [rax+0x7b],cl
   14000a1c6:	add    BYTE PTR [rax],al
   14000a1c8:	adc    al,0x2c
   14000a1ca:	add    BYTE PTR [rax],al
   14000a1cc:	loopne 0x14000a1fb
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	or     al,0x7c
   14000a1d2:	add    BYTE PTR [rax],al
   14000a1d4:	hlt    
   14000a1d5:	sub    eax,0x306b0000
   14000a1da:	add    BYTE PTR [rax],al
   14000a1dc:	xor    BYTE PTR [rax+rax*1+0x0],bh
   14000a1e0:	je     0x14000a212
   14000a1e2:	add    BYTE PTR [rax],al
   14000a1e4:	push   rax
   14000a1e5:	xor    al,BYTE PTR [rax]
   14000a1e7:	add    BYTE PTR [rax+0x7c],bl
   14000a1ea:	add    BYTE PTR [rax],al
   14000a1ec:	test   BYTE PTR [rdx],dh
   14000a1ee:	add    BYTE PTR [rax],al
   14000a1f0:	clc    
   14000a1f1:	xor    eax,DWORD PTR [rax]
   14000a1f3:	add    BYTE PTR [rsp+rdi*2+0x0],dh
   14000a1f7:	add    BYTE PTR [rsp+rsi*1],al
   14000a1fa:	add    BYTE PTR [rax],al
   14000a1fc:	mov    ecx,0x90000036
   14000a201:	jl     0x14000a203
   14000a203:	add    ah,al
   14000a205:	add    BYTE PTR ss:[rax],al
   14000a208:	lods   eax,DWORD PTR ds:[rsi]
   14000a209:	cmp    DWORD PTR [rax],eax
   14000a20b:	add    BYTE PTR [rsp+rdi*2+0x39b40000],dh
   14000a212:	add    BYTE PTR [rax],al
   14000a214:	mov    bh,0x3a
   14000a216:	add    BYTE PTR [rax],al
   14000a218:	adc    BYTE PTR [rbp+0x0],bh
   14000a21b:	add    ah,al
   14000a21d:	cmp    al,BYTE PTR [rax]
   14000a21f:	add    ah,bl
   14000a221:	cmp    eax,DWORD PTR [rax]
   14000a223:	add    BYTE PTR [rbp+rdi*2+0x3be40000],ch
   14000a22a:	add    BYTE PTR [rax],al
   14000a22c:	and    bh,BYTE PTR [rsi]
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	adc    BYTE PTR [rsi+0x0],bh
   14000a233:	add    BYTE PTR [rsi+rdi*1],dh
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	jnp    0x14000a27b
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	and    BYTE PTR [rsi+0x0],bh
   14000a23f:	add    BYTE PTR [rcx+rax*2+0x0],bh
   14000a243:	add    BYTE PTR [rdx+rax*2+0x7e340000],al
   14000a24a:	add    BYTE PTR [rax],al
   14000a24c:	test   BYTE PTR [rdx+0x0],al
   14000a24f:	add    BYTE PTR [rcx+0x50000043],ah
   14000a255:	jle    0x14000a257
   14000a257:	add    BYTE PTR [rbx+rax*2+0x44940000],ah
   14000a25e:	add    BYTE PTR [rax],al
   14000a260:	push   0xffffffff9400007e
   14000a265:	add    BYTE PTR [rax],r8b
   14000a268:	rex.XB
   14000a269:	add    BYTE PTR [r8],r8b
   14000a26c:	js     0x14000a2ec
   14000a26e:	add    BYTE PTR [rax],al
   14000a270:	push   rsp
   14000a271:	add    BYTE PTR [r8],r8b
   14000a274:	add    al,0x46
   14000a276:	add    BYTE PTR [rax],al
   14000a278:	mov    al,0x7e
   14000a27a:	add    BYTE PTR [rax],al
   14000a27c:	adc    al,0x46
   14000a27e:	add    BYTE PTR [rax],al
   14000a280:	or     al,0x48
   14000a282:	add    BYTE PTR [rax],al
   14000a284:	enter  0x7e,0x0
   14000a288:	adc    al,0x48
   14000a28a:	add    BYTE PTR [rax],al
   14000a28c:	cmp    DWORD PTR [rax+0x0],ecx
   14000a28f:	add    ah,ch
   14000a291:	jle    0x14000a293
   14000a293:	add    BYTE PTR [rbp+0x48],al
   14000a296:	add    BYTE PTR [rax],al
   14000a298:	mov    esp,0xf4000048
   14000a29d:	jle    0x14000a29f
   14000a29f:	add    BYTE PTR [rax],ah
   14000a2a1:	rex.WB add BYTE PTR [r8],al
   14000a2a4:	or     DWORD PTR [rcx+0x0],0x0
   14000a2a8:	fadd   DWORD PTR [rax+0x49840000]
   14000a2ae:	add    BYTE PTR [rax],al
   14000a2b0:	movabs eax,ds:0xc000007efc000049
   14000a2b9:	rex.WB add BYTE PTR [r8],al
   14000a2bc:	fisttp WORD PTR [rcx+0x0]
   14000a2bf:	add    BYTE PTR [rax],cl
   14000a2c1:	jg     0x14000a2c3
   14000a2c3:	add    BYTE PTR [rax],al
   14000a2c5:	rex.WX add BYTE PTR [rax],al
   14000a2c8:	rex.WRX
   14000a2c9:	rex.WX add BYTE PTR [rax],al
   14000a2cc:	adc    BYTE PTR [rdi+0x0],bh
   14000a2cf:	add    BYTE PTR [rdx+rcx*2+0x0],bl
   14000a2d3:	add    bl,ch
   14000a2d5:	rex.WX add BYTE PTR [rax],al
   14000a2d8:	clc    
   14000a2d9:	add    BYTE PTR [rax],0x0
   14000a2dc:	clc    
   14000a2dd:	rex.WX add BYTE PTR [rax],al
   14000a2e0:	(bad)  
   14000a2e1:	rex.WXB add BYTE PTR [r8],al
   14000a2e4:	sbb    BYTE PTR [rdi+0x0],bh
   14000a2e7:	add    BYTE PTR [rbx+rcx*2+0x0],ah
   14000a2eb:	add    BYTE PTR [rsi+0x2800004b],ch
   14000a2f1:	jg     0x14000a2f3
   14000a2f3:	add    BYTE PTR [rax+0xd00004b],dh
   14000a2f9:	rex.WR add BYTE PTR [rax],r8b
   14000a2fc:	push   rax
   14000a2fd:	jg     0x14000a2ff
   14000a2ff:	add    BYTE PTR [rsp+rcx*2],dl
   14000a302:	add    BYTE PTR [rax],al
   14000a304:	jns    0x14000a352
   14000a306:	add    BYTE PTR [rax],al
   14000a308:	js     0x14000a389
   14000a30a:	add    BYTE PTR [rax],al
   14000a30c:	jl     0x14000a35a
   14000a30e:	add    BYTE PTR [rax],al
   14000a310:	jnp    0x14000a360
   14000a312:	add    BYTE PTR [rax],al
   14000a314:	cmp    BYTE PTR [rdi+0x0],0x0
   14000a318:	jl     0x14000a368
   14000a31a:	add    BYTE PTR [rax],al
   14000a31c:	rex.WX
   14000a31d:	rex.WRXB add BYTE PTR [r8],r8b
   14000a320:	cld    
   14000a321:	jle    0x14000a323
   14000a323:	add    BYTE PTR [rdi+rcx*2+0x0],cl
   14000a327:	add    BYTE PTR [rsi+0x4f],bl
   14000a32a:	add    BYTE PTR [rax],al
   14000a32c:	cld    
   14000a32d:	jle    0x14000a32f
   14000a32f:	add    BYTE PTR [rax+0x4f],ah
   14000a332:	add    BYTE PTR [rax],al
   14000a334:	stos   BYTE PTR es:[rdi],al
   14000a335:	push   rax
   14000a336:	add    BYTE PTR [rax],al
   14000a338:	test   al,0x7f
   14000a33a:	add    BYTE PTR [rax],al
   14000a33c:	mov    eax,0xf9000050
   14000a341:	push   rax
   14000a342:	add    BYTE PTR [rax],al
   14000a344:	cld    
   14000a345:	jle    0x14000a347
   14000a347:	add    ah,bh
   14000a349:	push   rax
   14000a34a:	add    BYTE PTR [rax],al
   14000a34c:	adc    al,0x51
   14000a34e:	add    BYTE PTR [rax],al
   14000a350:	cld    
   14000a351:	jle    0x14000a353
   14000a353:	add    BYTE PTR [rcx+rdx*2],bl
   14000a356:	add    BYTE PTR [rax],al
   14000a358:	int3   
   14000a359:	push   rcx
   14000a35a:	add    BYTE PTR [rax],al
   14000a35c:	mov    al,0x7f
   14000a35e:	add    BYTE PTR [rax],al
   14000a360:	int3   
   14000a361:	push   rcx
   14000a362:	add    BYTE PTR [rax],al
   14000a364:	jrcxz  0x14000a3b7
   14000a366:	add    BYTE PTR [rax],al
   14000a368:	cld    
   14000a369:	jle    0x14000a36b
   14000a36b:	add    ah,ah
   14000a36d:	push   rcx
   14000a36e:	add    BYTE PTR [rax],al
   14000a370:	sbb    al,0x52
   14000a372:	add    BYTE PTR [rax],al
   14000a374:	rex jns 0x14000a377
   14000a377:	add    BYTE PTR [rdx+rdx*2],bl
   14000a37a:	add    BYTE PTR [rax],al
   14000a37c:	push   rsp
   14000a37d:	push   rdx
   14000a37e:	add    BYTE PTR [rax],al
   14000a380:	rex jns 0x14000a383
   14000a383:	add    al,ah
   14000a385:	push   rdx
   14000a386:	add    BYTE PTR [rax],al
   14000a388:	and    DWORD PTR [rbx+0x0],edx
   14000a38b:	add    al,bl
   14000a38d:	jg     0x14000a38f
   14000a38f:	add    BYTE PTR [rbx+rdx*2],dh
   14000a392:	add    BYTE PTR [rax],al
   14000a394:	out    0x53,eax
   14000a396:	add    BYTE PTR [rax],al
   14000a398:	clc    
   14000a399:	jg     0x14000a39b
   14000a39b:	add    BYTE PTR [rsi],bl
   14000a39d:	push   rsp
   14000a39e:	add    BYTE PTR [rax],al
   14000a3a0:	xchg   ebp,eax
   14000a3a1:	push   rsp
   14000a3a2:	add    BYTE PTR [rax],al
   14000a3a4:	add    al,0x80
   14000a3a6:	add    BYTE PTR [rax],al
   14000a3a8:	mov    ebx,0x32000054
   14000a3ad:	push   rbp
   14000a3ae:	add    BYTE PTR [rax],al
   14000a3b0:	or     al,0x80
   14000a3b2:	add    BYTE PTR [rax],al
   14000a3b4:	rex push rbp
   14000a3b6:	add    BYTE PTR [rax],al
   14000a3b8:	ret    
   14000a3b9:	push   rsi
   14000a3ba:	add    BYTE PTR [rax],al
   14000a3bc:	adc    al,0x80
   14000a3be:	add    BYTE PTR [rax],al
   14000a3c0:	rcl    BYTE PTR [rsi+0x0],1
   14000a3c3:	add    bl,bl
   14000a3c5:	push   rdi
   14000a3c6:	add    BYTE PTR [rax],al
   14000a3c8:	pop    rax
   14000a3c9:	add    BYTE PTR [rax],0x0
   14000a3cc:	lock push rdi
   14000a3ce:	add    BYTE PTR [rax],al
   14000a3d0:	(bad)  
   14000a3d1:	pop    rax
   14000a3d2:	add    BYTE PTR [rax],al
   14000a3d4:	fadd   DWORD PTR [rax+0x58300000]
   14000a3da:	add    BYTE PTR [rax],al
   14000a3dc:	fs pop rax
   14000a3de:	add    BYTE PTR [rax],al
   14000a3e0:	rol    BYTE PTR [rax+0x58700000],1
   14000a3e6:	add    BYTE PTR [rax],al
   14000a3e8:	mov    al,0x58
   14000a3ea:	add    BYTE PTR [rax],al
   14000a3ec:	fadd   DWORD PTR [rax+0x58b00000]
   14000a3f2:	add    BYTE PTR [rax],al
   14000a3f4:	add    ebx,DWORD PTR [rcx+0x0]
   14000a3f7:	add    BYTE PTR [rax+0x79],al
   14000a3fa:	add    BYTE PTR [rax],al
   14000a3fc:	add    al,0x59
   14000a3fe:	add    BYTE PTR [rax],al
   14000a400:	(bad)  
   14000a401:	pop    rbx
   14000a402:	add    BYTE PTR [rax],al
   14000a404:	loopne 0x14000a386
   14000a406:	add    BYTE PTR [rax],al
   14000a408:	enter  0x5b,0x0
   14000a40c:	pop    rsp
   14000a40d:	pop    rsp
   14000a40e:	add    BYTE PTR [rax],al
   14000a410:	clc    
   14000a411:	add    BYTE PTR [rax],0x0
   14000a414:	mov    BYTE PTR [rax+rax*1+0x0],bl
   14000a418:	(bad)  
   14000a419:	pop    rsp
   14000a41a:	add    BYTE PTR [rax],al
   14000a41c:	(bad)  
   14000a41d:	jnp    0x14000a41f
   14000a41f:	add    al,cl
   14000a421:	pop    rsp
   14000a422:	add    BYTE PTR [rax],al
   14000a424:	(bad)  
   14000a425:	pop    rbp
   14000a426:	add    BYTE PTR [rax],al
   14000a428:	je     0x14000a4a5
   14000a42a:	add    BYTE PTR [rax],al
   14000a42c:	or     BYTE PTR [rbp+0x0],bl
   14000a42f:	add    BYTE PTR [rsi+0x5d],al
   14000a432:	add    BYTE PTR [rax],al
   14000a434:	mov    BYTE PTR [rbx+0x0],bh
   14000a437:	add    BYTE PTR [rax+0x5d],bl
   14000a43a:	add    BYTE PTR [rax],al
   14000a43c:	xchg   esi,eax
   14000a43d:	pop    rbp
   14000a43e:	add    BYTE PTR [rax],al
   14000a440:	xor    BYTE PTR [rbp+0x0],bh
   14000a443:	add    BYTE PTR [rax-0x19ffffa3],ch
   14000a449:	pop    rbp
   14000a44a:	add    BYTE PTR [rax],al
   14000a44c:	int3   
   14000a44d:	jge    0x14000a44f
   14000a44f:	add    dl,dh
   14000a451:	pop    rbp
   14000a452:	add    BYTE PTR [rax],al
   14000a454:	xor    ebx,DWORD PTR [rsi+0x0]
   14000a457:	add    al,dl
   14000a459:	jg     0x14000a45b
   14000a45b:	add    BYTE PTR [rbx],dh
   14000a45d:	pop    rsi
   14000a45e:	add    BYTE PTR [rax],al
   14000a460:	pop    rdi
   14000a461:	pop    rsi
   14000a462:	add    BYTE PTR [rax],al
   14000a464:	sar    BYTE PTR [rdi+0x0],1
   14000a467:	add    BYTE PTR [rdi+0x5e],bl
   14000a46a:	add    BYTE PTR [rax],al
   14000a46c:	jge    0x14000a4cc
   14000a46e:	add    BYTE PTR [rax],al
   14000a470:	sar    BYTE PTR [rdi+0x0],1
   14000a473:	add    BYTE PTR [rbp+0x5e],bh
   14000a476:	add    BYTE PTR [rax],al
   14000a478:	cwde   
   14000a479:	pop    rsi
   14000a47a:	add    BYTE PTR [rax],al
   14000a47c:	sar    BYTE PTR [rdi+0x0],1
   14000a47f:	add    BYTE PTR [rax-0x3dffffa2],ah
   14000a485:	pop    rsi
   14000a486:	add    BYTE PTR [rax],al
   14000a488:	sar    BYTE PTR [rdi+0x0],1
   14000a48b:	add    al,dl
   14000a48d:	pop    rsi
   14000a48e:	add    BYTE PTR [rax],al
   14000a490:	jmp    0x14000a4f0
   14000a492:	add    BYTE PTR [rax],al
   14000a494:	rex.W add BYTE PTR [rax],0x0

Disassembly of section .rsrc:

000000014000b000 <.rsrc>:
	...
   14000b00c:	add    BYTE PTR [rax],al
   14000b00e:	add    eax,0x300
   14000b013:	add    BYTE PTR [rax],bh
   14000b015:	add    BYTE PTR [rax],al
   14000b017:	add    BYTE PTR [rsi],0x0
   14000b01a:	add    BYTE PTR [rax],al
   14000b01c:	test   al,0x0
   14000b01e:	add    BYTE PTR [rax+0xe],al
   14000b024:	rol    BYTE PTR [rax],0x0
   14000b027:	adc    BYTE PTR [rax],0x0
   14000b02a:	add    BYTE PTR [rax],al
   14000b02c:	fadd   DWORD PTR [rax]
   14000b02e:	add    BYTE PTR [rax+0x18],al
   14000b034:	lock add BYTE PTR [rax],al
   14000b037:	add    BYTE PTR [rax],0x0
	...
   14000b046:	or     al,0x0
   14000b048:	add    DWORD PTR [rax],eax
   14000b04a:	add    BYTE PTR [rax],al
   14000b04c:	or     BYTE PTR [rcx],al
   14000b04e:	add    BYTE PTR [rax+0x2],al
   14000b054:	and    BYTE PTR [rcx],al
   14000b056:	add    BYTE PTR [rax+0x3],al
   14000b05c:	cmp    BYTE PTR [rcx],al
   14000b05e:	add    BYTE PTR [rax+0x4],al
   14000b064:	push   rax
   14000b065:	add    DWORD PTR [rax],eax
   14000b067:	add    BYTE PTR [rip+0x68000000],0x1        # 0x1a800b06e
   14000b06e:	add    BYTE PTR [rax+0x6],al
   14000b074:	add    BYTE PTR [rcx],0x0
   14000b077:	add    BYTE PTR [rdi],0x0
   14000b07a:	add    BYTE PTR [rax],al
   14000b07c:	cwde   
   14000b07d:	add    DWORD PTR [rax],eax
   14000b07f:	or     BYTE PTR [rax],0x0
   14000b082:	add    BYTE PTR [rax],al
   14000b084:	mov    al,0x1
   14000b086:	add    BYTE PTR [rax+0x9],al
   14000b08c:	enter  0x1,0x80
   14000b090:	or     al,BYTE PTR [rax]
   14000b092:	add    BYTE PTR [rax],al
   14000b094:	loopne 0x14000b097
   14000b096:	add    BYTE PTR [rax+0xb],al
   14000b09c:	clc    
   14000b09d:	add    DWORD PTR [rax],eax
   14000b09f:	or     BYTE PTR [rax+rax*1],0x0
   14000b0a3:	add    BYTE PTR [rax],dl
   14000b0a5:	add    al,BYTE PTR [rax]
   14000b0a7:	add    BYTE PTR [rax],0x0
	...
   14000b0b6:	add    DWORD PTR [rax],eax
   14000b0b8:	add    DWORD PTR [rax],eax
   14000b0ba:	add    BYTE PTR [rax],al
   14000b0bc:	sub    BYTE PTR [rdx],al
   14000b0be:	add    BYTE PTR [rax+0x0],al
	...
   14000b0cc:	add    BYTE PTR [rax],al
   14000b0ce:	add    DWORD PTR [rax],eax
   14000b0d0:	(bad)  
   14000b0d1:	add    BYTE PTR [rax],al
   14000b0d3:	add    BYTE PTR [rax+0x2],al
   14000b0d6:	add    BYTE PTR [rax+0x0],al
	...
   14000b0e4:	add    BYTE PTR [rax],al
   14000b0e6:	add    DWORD PTR [rax],eax
   14000b0e8:	add    DWORD PTR [rax],eax
   14000b0ea:	add    BYTE PTR [rax],al
   14000b0ec:	pop    rax
   14000b0ed:	add    al,BYTE PTR [rax]
   14000b0ef:	add    BYTE PTR [rax],0x0
	...
   14000b0fe:	add    DWORD PTR [rax],eax
   14000b100:	add    DWORD PTR [rax],eax
   14000b102:	add    BYTE PTR [rax],al
   14000b104:	jo     0x14000b108
   14000b106:	add    BYTE PTR [rax+0x0],al
	...
   14000b114:	add    BYTE PTR [rax],al
   14000b116:	add    DWORD PTR [rax],eax
   14000b118:	or     DWORD PTR [rax+rax*1],eax
   14000b11b:	add    BYTE PTR [rax+0x2],cl
	...
   14000b12d:	add    BYTE PTR [rcx],al
   14000b12f:	add    BYTE PTR [rcx],cl
   14000b131:	add    al,0x0
   14000b133:	add    BYTE PTR [rax+0x2],bl
	...
   14000b145:	add    BYTE PTR [rcx],al
   14000b147:	add    BYTE PTR [rcx],cl
   14000b149:	add    al,0x0
   14000b14b:	add    BYTE PTR [rax+0x2],ch
	...
   14000b15d:	add    BYTE PTR [rcx],al
   14000b15f:	add    BYTE PTR [rcx],cl
   14000b161:	add    al,0x0
   14000b163:	add    BYTE PTR [rax+0x2],bh
	...
   14000b175:	add    BYTE PTR [rcx],al
   14000b177:	add    BYTE PTR [rcx],cl
   14000b179:	add    al,0x0
   14000b17b:	add    al,cl
   14000b17d:	add    al,BYTE PTR [rax]
	...
   14000b18b:	add    BYTE PTR [rax],al
   14000b18d:	add    BYTE PTR [rcx],al
   14000b18f:	add    BYTE PTR [rcx],cl
   14000b191:	add    al,0x0
   14000b193:	add    al,bl
   14000b195:	add    al,BYTE PTR [rax]
	...
   14000b1a3:	add    BYTE PTR [rax],al
   14000b1a5:	add    BYTE PTR [rcx],al
   14000b1a7:	add    BYTE PTR [rcx],cl
   14000b1a9:	add    al,0x0
   14000b1ab:	add    al,ch
   14000b1ad:	add    al,BYTE PTR [rax]
	...
   14000b1bb:	add    BYTE PTR [rax],al
   14000b1bd:	add    BYTE PTR [rcx],al
   14000b1bf:	add    BYTE PTR [rcx],cl
   14000b1c1:	add    al,0x0
   14000b1c3:	add    al,bh
   14000b1c5:	add    al,BYTE PTR [rax]
	...
   14000b1d3:	add    BYTE PTR [rax],al
   14000b1d5:	add    BYTE PTR [rcx],al
   14000b1d7:	add    BYTE PTR [rcx],cl
   14000b1d9:	add    al,0x0
   14000b1db:	add    BYTE PTR [rax],cl
   14000b1dd:	add    eax,DWORD PTR [rax]
	...
   14000b1eb:	add    BYTE PTR [rax],al
   14000b1ed:	add    BYTE PTR [rcx],al
   14000b1ef:	add    BYTE PTR [rcx],cl
   14000b1f1:	add    al,0x0
   14000b1f3:	add    BYTE PTR [rax],bl
   14000b1f5:	add    eax,DWORD PTR [rax]
	...
   14000b203:	add    BYTE PTR [rax],al
   14000b205:	add    BYTE PTR [rcx],al
   14000b207:	add    BYTE PTR [rcx],cl
   14000b209:	add    al,0x0
   14000b20b:	add    BYTE PTR [rax],ch
   14000b20d:	add    eax,DWORD PTR [rax]
	...
   14000b21b:	add    BYTE PTR [rax],al
   14000b21d:	add    BYTE PTR [rcx],al
   14000b21f:	add    BYTE PTR [rcx],cl
   14000b221:	add    al,0x0
   14000b223:	add    BYTE PTR [rax],bh
   14000b225:	add    eax,DWORD PTR [rax]
	...
   14000b233:	add    BYTE PTR [rax],al
   14000b235:	add    BYTE PTR [rcx],al
   14000b237:	add    BYTE PTR [rcx],cl
   14000b239:	add    al,0x0
   14000b23b:	add    BYTE PTR [rax+0x3],cl
	...
   14000b24e:	add    DWORD PTR [rax],eax
   14000b250:	or     DWORD PTR [rax+rax*1],eax
   14000b253:	add    BYTE PTR [rax+0x3],bl
	...
   14000b266:	add    DWORD PTR [rax],eax
   14000b268:	or     DWORD PTR [rax+rax*1],eax
   14000b26b:	add    BYTE PTR [rax+0x3],ch
	...
   14000b27e:	add    DWORD PTR [rax],eax
   14000b280:	or     DWORD PTR [rax+rax*1],eax
   14000b283:	add    BYTE PTR [rax+0x3],bh
   14000b286:	add    BYTE PTR [rax],al
   14000b288:	mov    al,0xb8
   14000b28a:	add    BYTE PTR [rax],al
   14000b28c:	push   0x6
   14000b291:	add    BYTE PTR [rax],al
   14000b293:	add    BYTE PTR [rax],al
   14000b295:	add    BYTE PTR [rax],al
   14000b297:	add    BYTE PTR [rax],bl
   14000b299:	mov    edi,0x2e80000
	...
   14000b2a6:	add    BYTE PTR [rax],al
   14000b2a8:	add    dl,al
   14000b2aa:	add    BYTE PTR [rax],al
   14000b2ac:	call   0x14000b2b2
   14000b2b1:	add    BYTE PTR [rax],al
   14000b2b3:	add    BYTE PTR [rax],al
   14000b2b5:	add    BYTE PTR [rax],al
   14000b2b7:	add    al,ch
   14000b2b9:	ret    
   14000b2ba:	add    BYTE PTR [rax],al
   14000b2bc:	sub    BYTE PTR [rcx],al
	...
   14000b2c6:	add    BYTE PTR [rax],al
   14000b2c8:	adc    ch,al
   14000b2ca:	add    BYTE PTR [rax],al
   14000b2cc:	test   al,0xe
	...
   14000b2d6:	add    BYTE PTR [rax],al
   14000b2d8:	mov    eax,0xa80000d3
   14000b2dd:	or     BYTE PTR [rax],al
	...
   14000b2e7:	add    BYTE PTR [rax-0x24],ah
   14000b2ea:	add    BYTE PTR [rax],al
   14000b2ec:	enter  0x6,0x0
	...
   14000b2f8:	sub    bl,ah
   14000b2fa:	add    BYTE PTR [rax],al
   14000b2fc:	push   0x5
   14000b301:	add    BYTE PTR [rax],al
   14000b303:	add    BYTE PTR [rax],al
   14000b305:	add    BYTE PTR [rax],al
   14000b307:	add    BYTE PTR [rax-0x57ffff18],dl
   14000b30d:	and    eax,0x0
   14000b312:	add    BYTE PTR [rax],al
   14000b314:	add    BYTE PTR [rax],al
   14000b316:	add    BYTE PTR [rax],al
   14000b318:	cmp    BYTE PTR [rsi],cl
   14000b31a:	add    DWORD PTR [rax],eax
   14000b31c:	test   al,0x10
	...
   14000b326:	add    BYTE PTR [rax],al
   14000b328:	loopne 0x14000b348
   14000b32a:	add    DWORD PTR [rax],eax
   14000b32c:	mov    BYTE PTR [rcx],cl
	...
   14000b336:	add    BYTE PTR [rax],al
   14000b338:	push   0x68000128
   14000b33d:	add    al,0x0
	...
   14000b347:	add    al,cl
   14000b349:	xor    BYTE PTR [rcx],al
   14000b34b:	add    BYTE PTR [rax+rax*1+0x0],cl
	...
   14000b357:	add    al,dl
   14000b359:	sub    al,0x1
   14000b35b:	add    BYTE PTR [rsi+0x0],ch
   14000b361:	add    BYTE PTR [rax],al
   14000b363:	add    BYTE PTR [rax],al
   14000b365:	add    BYTE PTR [rax],al
   14000b367:	add    BYTE PTR [rax+0x4800012d],al
   14000b36d:	add    eax,DWORD PTR [rax]
	...
   14000b377:	add    BYTE PTR [rax+0x1f0000b3],dl
   14000b37d:	add    eax,0x0
	...
   14000b38e:	add    BYTE PTR [rax],al
   14000b390:	cmp    al,0x3f
   14000b392:	js     0x14000b401
   14000b394:	ins    BYTE PTR es:[rdi],dx
   14000b395:	and    BYTE PTR [rsi+0x65],dh
   14000b398:	jb     0x14000b40d
   14000b39a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000b3a1:	xor    BYTE PTR [rdx],ah
   14000b3a3:	and    BYTE PTR [rbp+0x6e],ah
   14000b3a6:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000b3a9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000b3b0:	rex.RX sub eax,0x73202238
   14000b3b6:	je     0x14000b419
   14000b3b8:	outs   dx,BYTE PTR ds:[rsi]
   14000b3b9:	fs (bad) 
   14000b3bb:	ins    BYTE PTR es:[rdi],dx
   14000b3bc:	outs   dx,DWORD PTR ds:[rsi]
   14000b3bd:	outs   dx,BYTE PTR ds:[rsi]
   14000b3be:	gs cmp eax,0x73657922
   14000b3c4:	and    bh,BYTE PTR [rdi]
   14000b3c6:	ds or  eax,0x73613c0a
   14000b3cc:	jae    0x14000b433
   14000b3ce:	ins    DWORD PTR es:[rdi],dx
   14000b3cf:	(bad)  
   14000b3d0:	ins    BYTE PTR es:[rdi],dx
   14000b3d1:	jns    0x14000b3f3
   14000b3d3:	js     0x14000b442
   14000b3d5:	ins    BYTE PTR es:[rdi],dx
   14000b3d6:	outs   dx,BYTE PTR ds:[rsi]
   14000b3d7:	jae    0x14000b416
   14000b3d9:	and    dh,BYTE PTR [rbp+0x72]
   14000b3dc:	outs   dx,BYTE PTR ds:[rsi]
   14000b3dd:	cmp    dh,BYTE PTR [rbx+0x63]
   14000b3e0:	push   0x73616d65
   14000b3e5:	sub    eax,0x7263696d
   14000b3ea:	outs   dx,DWORD PTR ds:[rsi]
   14000b3eb:	jae    0x14000b45c
   14000b3ed:	data16 je 0x14000b41d
   14000b3f0:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b3f3:	cmp    ah,BYTE PTR [rcx+0x73]
   14000b3f6:	ins    DWORD PTR es:[rdi],dx
   14000b3f7:	cs jbe 0x14000b42b
   14000b3fa:	and    ah,BYTE PTR [rax]
   14000b3fc:	ins    DWORD PTR es:[rdi],dx
   14000b3fd:	(bad)  
   14000b3fe:	outs   dx,BYTE PTR ds:[rsi]
   14000b3ff:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000b406:	jb     0x14000b47b
   14000b408:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000b40f:	xor    BYTE PTR [rdx],ah
   14000b411:	or     eax,0x2020200a
   14000b416:	and    BYTE PTR [rax],ah
   14000b418:	and    BYTE PTR [rax],ah
   14000b41a:	and    BYTE PTR [rax],ah
   14000b41c:	and    BYTE PTR [rax+0x6d],bh
   14000b41f:	ins    BYTE PTR es:[rdi],dx
   14000b420:	outs   dx,BYTE PTR ds:[rsi]
   14000b421:	jae    0x14000b45d
   14000b423:	(bad)  
   14000b424:	jae    0x14000b493
   14000b426:	jbe    0x14000b45b
   14000b428:	cmp    eax,0x6e727522
   14000b42d:	cmp    dh,BYTE PTR [rbx+0x63]
   14000b430:	push   0x73616d65
   14000b435:	sub    eax,0x7263696d
   14000b43a:	outs   dx,DWORD PTR ds:[rsi]
   14000b43b:	jae    0x14000b4ac
   14000b43d:	data16 je 0x14000b46d
   14000b440:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b443:	cmp    ah,BYTE PTR [rcx+0x73]
   14000b446:	ins    DWORD PTR es:[rdi],dx
   14000b447:	cs jbe 0x14000b47d
   14000b44a:	and    bh,BYTE PTR [rsi]
   14000b44c:	and    BYTE PTR [rip+0x3c20200a],cl        # 0x17c20d45c
   14000b452:	(bad)  
   14000b453:	jae    0x14000b4c8
   14000b455:	gs ins DWORD PTR es:[rdi],dx
   14000b457:	(bad)  
   14000b458:	ins    BYTE PTR es:[rdi],dx
   14000b459:	jns    0x14000b4a4
   14000b45b:	fs outs dx,BYTE PTR gs:[rsi]
   14000b45e:	je     0x14000b4c9
   14000b460:	je     0x14000b4db
   14000b462:	and    BYTE PTR [rsi+0x65],dh
   14000b465:	jb     0x14000b4da
   14000b467:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e37223d
   14000b46e:	xor    BYTE PTR [rsi],ch
   14000b470:	xor    BYTE PTR ss:[rax],dh
   14000b473:	xor    DWORD PTR cs:[rcx],edi
   14000b476:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020d486
   14000b47c:	and    BYTE PTR [rax],ah
   14000b47e:	jo     0x14000b4f2
   14000b480:	outs   dx,DWORD PTR ds:[rsi]
   14000b481:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b484:	jae    0x14000b4f5
   14000b486:	jb     0x14000b4c9
   14000b488:	jb     0x14000b4ed
   14000b48a:	push   0x63657469
   14000b48f:	je     0x14000b506
   14000b491:	jb     0x14000b4f8
   14000b493:	cmp    eax,0x36385822
   14000b498:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020d4a8
   14000b49e:	and    BYTE PTR [rax],ah
   14000b4a0:	outs   dx,BYTE PTR ds:[rsi]
   14000b4a1:	(bad)  
   14000b4a2:	ins    DWORD PTR es:[rdi],dx
   14000b4a3:	gs cmp eax,0x76616a22
   14000b4a9:	(bad)  
   14000b4aa:	movsxd esi,DWORD PTR [rax+0x6c]
   14000b4ad:	cs gs js 0x14000b516
   14000b4b1:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020d4c1
   14000b4b7:	and    BYTE PTR [rax],ah
   14000b4b9:	je     0x14000b534
   14000b4bb:	jo     0x14000b522
   14000b4bd:	cmp    eax,0x6e697722
   14000b4c2:	xor    esi,DWORD PTR [rdx]
   14000b4c4:	and    ch,BYTE PTR [rdi]
   14000b4c6:	and    BYTE PTR ds:[rip+0x200a0d0a],cl        # 0x1600ac1d7
   14000b4cd:	and    BYTE PTR [rsp+riz*2],bh
   14000b4d0:	gs jae 0x14000b536
   14000b4d3:	jb     0x14000b53e
   14000b4d5:	jo     0x14000b54b
   14000b4d7:	imul   ebp,DWORD PTR [rdi+0x6e],0x76614a3e
   14000b4de:	(bad)  
   14000b4df:	and    BYTE PTR [rbx+0x45],dl
   14000b4e2:	and    BYTE PTR [rdx+0x75],dl
   14000b4e5:	outs   dx,BYTE PTR ds:[rsi]
   14000b4e6:	je     0x14000b551
   14000b4e8:	ins    DWORD PTR es:[rdi],dx
   14000b4e9:	and    BYTE PTR gs:[rbp+0x6e],al
   14000b4ed:	jbe    0x14000b558
   14000b4ef:	jb     0x14000b560
   14000b4f1:	outs   dx,BYTE PTR ds:[rsi]
   14000b4f2:	ins    DWORD PTR es:[rdi],dx
   14000b4f3:	outs   dx,BYTE PTR gs:[rsi]
   14000b4f5:	je     0x14000b517
   14000b4f7:	rex.WX (bad) 
   14000b4f9:	jbe    0x14000b55c
   14000b4fb:	and    BYTE PTR [rbx+0x6f],al
   14000b4fe:	outs   dx,BYTE PTR ds:[rsi]
   14000b4ff:	je     0x14000b573
   14000b501:	outs   dx,DWORD PTR ds:[rsi]
   14000b502:	ins    BYTE PTR es:[rdi],dx
   14000b503:	and    BYTE PTR [rax+0x61],dl
   14000b506:	outs   dx,BYTE PTR ds:[rsi]
   14000b507:	gs ins BYTE PTR es:[rdi],dx
   14000b509:	cmp    al,0x2f
   14000b50b:	fs gs jae 0x14000b572
   14000b50f:	jb     0x14000b57a
   14000b511:	jo     0x14000b587
   14000b513:	imul   ebp,DWORD PTR [rdi+0x6e],0xa0d203e
   14000b51a:	and    BYTE PTR [rax],ah
   14000b51c:	cmp    al,0x21
   14000b51e:	sub    eax,0x6449202d
   14000b523:	outs   dx,BYTE PTR gs:[rsi]
   14000b525:	je     0x14000b590
   14000b527:	data16 jns 0x14000b54a
   14000b52a:	je     0x14000b594
   14000b52c:	and    BYTE PTR gs:[rcx+0x70],ah
   14000b530:	jo     0x14000b59e
   14000b532:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000b539:	and    BYTE PTR [rbx+0x65],dh
   14000b53c:	movsxd esi,DWORD PTR [rbp+0x72]
   14000b53f:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x75716572
   14000b547:	imul   esi,DWORD PTR [rdx+0x65],0x746e656d
   14000b54e:	jae    0x14000b57e
   14000b550:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0df383
   14000b556:	and    BYTE PTR [rax],ah
   14000b558:	cmp    al,0x74
   14000b55a:	jb     0x14000b5d1
   14000b55c:	jae    0x14000b5d2
   14000b55e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b560:	outs   dx,WORD PTR ds:[rsi]
   14000b562:	and    BYTE PTR [rax+0x6d],bh
   14000b565:	ins    BYTE PTR es:[rdi],dx
   14000b566:	outs   dx,BYTE PTR ds:[rsi]
   14000b567:	jae    0x14000b5a6
   14000b569:	and    dh,BYTE PTR [rbp+0x72]
   14000b56c:	outs   dx,BYTE PTR ds:[rsi]
   14000b56d:	cmp    dh,BYTE PTR [rbx+0x63]
   14000b570:	push   0x73616d65
   14000b575:	sub    eax,0x7263696d
   14000b57a:	outs   dx,DWORD PTR ds:[rsi]
   14000b57b:	jae    0x14000b5ec
   14000b57d:	data16 je 0x14000b5ad
   14000b580:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b583:	cmp    ah,BYTE PTR [rcx+0x73]
   14000b586:	ins    DWORD PTR es:[rdi],dx
   14000b587:	cs jbe 0x14000b5bd
   14000b58a:	and    bh,BYTE PTR [rsi]
   14000b58c:	or     eax,0x2020200a
   14000b591:	and    BYTE PTR [rbx+rsi*2],bh
   14000b594:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000b598:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000b5a0:	and    BYTE PTR [rax],ah
   14000b5a2:	and    BYTE PTR [rax],ah
   14000b5a4:	cmp    al,0x72
   14000b5a6:	gs jno 0x14000b61e
   14000b5a9:	gs jae 0x14000b620
   14000b5ac:	gs fs push rax
   14000b5af:	jb     0x14000b61a
   14000b5b1:	jbe    0x14000b61c
   14000b5b3:	ins    BYTE PTR es:[rdi],dx
   14000b5b4:	gs addr32 gs jae 0x14000b5f7
   14000b5b9:	or     eax,0x2020200a
   14000b5be:	and    BYTE PTR [rax],ah
   14000b5c0:	and    BYTE PTR [rax],ah
   14000b5c2:	and    BYTE PTR [rdx+rsi*2],bh
   14000b5c5:	gs jno 0x14000b63d
   14000b5c8:	gs jae 0x14000b63f
   14000b5cb:	gs fs rex.RB js 0x14000b635
   14000b5d0:	movsxd esi,DWORD PTR [rbp+0x74]
   14000b5d3:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000b5da:	ins    BYTE PTR es:[rdi],dx
   14000b5db:	or     eax,0x2020200a
   14000b5e0:	and    BYTE PTR [rax],ah
   14000b5e2:	and    BYTE PTR [rax],ah
   14000b5e4:	and    BYTE PTR [rax],ah
   14000b5e6:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000b5ea:	gs ins BYTE PTR es:[rdi],dx
   14000b5ec:	cmp    eax,0x49736122
   14000b5f1:	outs   dx,BYTE PTR ds:[rsi]
   14000b5f2:	jbe    0x14000b663
   14000b5f4:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000b5f8:	or     eax,0x2020200a
   14000b5fd:	and    BYTE PTR [rax],ah
   14000b5ff:	and    BYTE PTR [rax],ah
   14000b601:	and    BYTE PTR [rax],ah
   14000b603:	and    BYTE PTR [rbp+0x69],dh
   14000b606:	movsxd esp,DWORD PTR [r11+0x65]
   14000b60a:	jae    0x14000b67f
   14000b60c:	cmp    eax,0x6c616622
   14000b611:	jae    0x14000b678
   14000b613:	and    ch,BYTE PTR [rdi]
   14000b615:	ds or  eax,0x2020200a
   14000b61b:	and    BYTE PTR [rax],ah
   14000b61d:	and    BYTE PTR [rax],ah
   14000b61f:	and    BYTE PTR [rdi+rbp*1],bh
   14000b622:	jb     0x14000b689
   14000b624:	jno    0x14000b69b
   14000b626:	gs jae 0x14000b69d
   14000b629:	gs fs push rax
   14000b62c:	jb     0x14000b697
   14000b62e:	jbe    0x14000b699
   14000b630:	ins    BYTE PTR es:[rdi],dx
   14000b631:	gs addr32 gs jae 0x14000b674
   14000b636:	or     eax,0x2020200a
   14000b63b:	and    BYTE PTR [rax],ah
   14000b63d:	and    BYTE PTR [rax],ah
   14000b63f:	cmp    al,0x2f
   14000b641:	jae    0x14000b6a8
   14000b643:	movsxd esi,DWORD PTR [rbp+0x72]
   14000b646:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000b64e:	cmp    al,0x2f
   14000b650:	je     0x14000b6c4
   14000b652:	jne    0x14000b6c7
   14000b654:	je     0x14000b69f
   14000b656:	outs   dx,BYTE PTR ds:[rsi]
   14000b657:	outs   dx,WORD PTR ds:[rsi]
   14000b659:	ds or  eax,0x200a0d0a
   14000b65f:	and    BYTE PTR [rcx+riz*1],bh
   14000b662:	sub    eax,0x6e49202d
   14000b667:	imul   esp,DWORD PTR fs:[rbx+0x61],0x77206574
   14000b66f:	and    BYTE PTR gs:[rcx+0x72],ah
   14000b673:	and    BYTE PTR gs:[rax+0x69],ch
   14000b677:	addr32 push 0x69706420
   14000b67d:	and    BYTE PTR [rcx+0x77],ah
   14000b680:	(bad)  
   14000b681:	jb     0x14000b6e8
   14000b683:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0df4b6
   14000b689:	and    BYTE PTR [rax],ah
   14000b68b:	cmp    al,0x61
   14000b68d:	jae    0x14000b6fc
   14000b68f:	jbe    0x14000b6c4
   14000b691:	cmp    ah,BYTE PTR [rcx+0x70]
   14000b694:	jo     0x14000b702
   14000b696:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000b69d:	ds or  eax,0x2020200a
   14000b6a3:	and    BYTE PTR [rcx+riz*2],bh
   14000b6a6:	jae    0x14000b715
   14000b6a8:	jbe    0x14000b6dd
   14000b6aa:	cmp    dh,BYTE PTR [rdi+0x69]
   14000b6ad:	outs   dx,BYTE PTR ds:[rsi]
   14000b6ae:	outs   dx,DWORD PTR fs:[rsi]
   14000b6b0:	ja     0x14000b725
   14000b6b2:	push   rbx
   14000b6b3:	gs je  0x14000b72a
   14000b6b6:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
   14000b6bd:	ins    BYTE PTR es:[rdi],dx
   14000b6be:	outs   dx,BYTE PTR ds:[rsi]
   14000b6bf:	jae    0x14000b6fe
   14000b6c1:	and    ch,BYTE PTR [rax+0x74]
   14000b6c4:	je     0x14000b736
   14000b6c6:	cmp    ch,BYTE PTR [rdi]
   14000b6c8:	(bad)  
   14000b6c9:	jae    0x14000b72e
   14000b6cb:	push   0x73616d65
   14000b6d0:	cs ins DWORD PTR es:[rdi],dx
   14000b6d2:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14000b6d9:	je     0x14000b709
   14000b6db:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b6de:	(bad)  
   14000b6df:	push   rbx
   14000b6e0:	rex.WRB
   14000b6e1:	rex.WB (bad) 
   14000b6e3:	xor    dh,BYTE PTR [rax]
   14000b6e5:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6a0e1a
   14000b6eb:	outs   dx,DWORD PTR fs:[rsi]
   14000b6ed:	ja     0x14000b762
   14000b6ef:	push   rbx
   14000b6f0:	gs je  0x14000b767
   14000b6f3:	imul   ebp,DWORD PTR [rsi+0x67],0xd3e2273
   14000b6fa:	or     ah,BYTE PTR [rax]
   14000b6fc:	and    BYTE PTR [rax],ah
   14000b6fe:	and    BYTE PTR [rax],ah
   14000b700:	and    BYTE PTR [rsp+riz*2],bh
   14000b703:	jo     0x14000b76e
   14000b705:	rex.B ja 0x14000b769
   14000b708:	jb     0x14000b76f
   14000b70a:	ds je  0x14000b77f
   14000b70d:	jne    0x14000b774
   14000b70f:	cmp    al,0x2f
   14000b711:	fs jo  0x14000b77d
   14000b714:	rex.B ja 0x14000b778
   14000b717:	jb     0x14000b77e
   14000b719:	ds or  eax,0x2020200a
   14000b71f:	and    BYTE PTR [rdi+rbp*1],bh
   14000b722:	(bad)  
   14000b723:	jae    0x14000b792
   14000b725:	jbe    0x14000b75a
   14000b727:	cmp    dh,BYTE PTR [rdi+0x69]
   14000b72a:	outs   dx,BYTE PTR ds:[rsi]
   14000b72b:	outs   dx,DWORD PTR fs:[rsi]
   14000b72d:	ja     0x14000b7a2
   14000b72f:	push   rbx
   14000b730:	gs je  0x14000b7a7
   14000b733:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14000b73a:	and    BYTE PTR [rax],ah
   14000b73c:	cmp    al,0x2f
   14000b73e:	(bad)  
   14000b73f:	jae    0x14000b7ae
   14000b741:	jbe    0x14000b776
   14000b743:	cmp    ah,BYTE PTR [rcx+0x70]
   14000b746:	jo     0x14000b7b4
   14000b748:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000b74f:	ds or  eax,0x200a0d0a
   14000b755:	and    BYTE PTR [rcx+riz*1],bh
   14000b758:	sub    eax,0x6e49202d
   14000b75d:	imul   esp,DWORD PTR fs:[rbx+0x61],0x74206574
   14000b765:	push   0x4a207369
   14000b76a:	rex.R
   14000b76b:	rex.WXB and BYTE PTR [r14+0x65],sil
   14000b76f:	jb     0x14000b7e4
   14000b771:	imul   ebp,DWORD PTR [rdi+0x6e],0x20736920
   14000b778:	push   rdi
   14000b779:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
   14000b780:	(bad)  
   14000b781:	and    BYTE PTR [rbx+0x6f],ah
   14000b784:	ins    DWORD PTR es:[rdi],dx
   14000b785:	jo     0x14000b7e8
   14000b787:	je     0x14000b7f2
   14000b789:	(bad)  
   14000b78a:	ins    BYTE PTR es:[rdi],dx
   14000b78b:	and    BYTE PTR gs:[rip+0xa0d3e2d],ch        # 0x14a0df5bf
   14000b792:	and    BYTE PTR [rax],ah
   14000b794:	and    BYTE PTR [rbx+riz*2],bh
   14000b797:	outs   dx,DWORD PTR ds:[rsi]
   14000b798:	ins    DWORD PTR es:[rdi],dx
   14000b799:	jo     0x14000b7fc
   14000b79b:	je     0x14000b806
   14000b79d:	(bad)  
   14000b79e:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6d782079
   14000b7a6:	ins    BYTE PTR es:[rdi],dx
   14000b7a7:	outs   dx,BYTE PTR ds:[rsi]
   14000b7a8:	jae    0x14000b7e7
   14000b7aa:	and    dh,BYTE PTR [rbp+0x72]
   14000b7ad:	outs   dx,BYTE PTR ds:[rsi]
   14000b7ae:	cmp    dh,BYTE PTR [rbx+0x63]
   14000b7b1:	push   0x73616d65
   14000b7b6:	sub    eax,0x7263696d
   14000b7bb:	outs   dx,DWORD PTR ds:[rsi]
   14000b7bc:	jae    0x14000b82d
   14000b7be:	data16 je 0x14000b7ee
   14000b7c1:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b7c4:	cmp    ah,BYTE PTR [rbx+0x6f]
   14000b7c7:	ins    DWORD PTR es:[rdi],dx
   14000b7c8:	jo     0x14000b82b
   14000b7ca:	je     0x14000b835
   14000b7cc:	(bad)  
   14000b7cd:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x31762e79
   14000b7d5:	and    bh,BYTE PTR [rsi]
   14000b7d7:	or     eax,0x2020200a
   14000b7dc:	and    BYTE PTR [rax],ah
   14000b7de:	and    BYTE PTR [rcx+riz*2],bh
   14000b7e1:	jo     0x14000b853
   14000b7e3:	ins    BYTE PTR es:[rdi],dx
   14000b7e4:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000b7eb:	ds or  eax,0x2020200a
   14000b7f1:	and    BYTE PTR [rax],ah
   14000b7f3:	and    BYTE PTR [rax],ah
   14000b7f5:	and    BYTE PTR [rbx+rsi*2],bh
   14000b7f8:	jne    0x14000b86a
   14000b7fa:	jo     0x14000b86b
   14000b7fc:	jb     0x14000b872
   14000b7fe:	gs fs rex.WRXB push r11
   14000b802:	and    BYTE PTR [rcx+0x64],cl
   14000b805:	cmp    eax,0x35337b22
   14000b80a:	xor    DWORD PTR [rbx],esi
   14000b80c:	cmp    BYTE PTR [rdx+0x39],ah
   14000b80f:	(bad)  
   14000b810:	sub    eax,0x36396435
   14000b815:	sub    eax,0x64626634
   14000b81a:	sub    eax,0x64326538
   14000b81f:	sub    eax,0x34343261
   14000b824:	xor    BYTE PTR [rdx],dh
   14000b826:	xor    dh,BYTE PTR [rip+0x61333966]        # 0x1a133f192
   14000b82c:	jge    0x14000b850
   14000b82e:	(bad)  
   14000b82f:	ds or  eax,0x2020200a
   14000b835:	and    BYTE PTR [rax],ah
   14000b837:	and    BYTE PTR [rax],ah
   14000b839:	and    BYTE PTR [rbx+rsi*2],bh
   14000b83c:	jne    0x14000b8ae
   14000b83e:	jo     0x14000b8af
   14000b840:	jb     0x14000b8b6
   14000b842:	gs fs rex.WRXB push r11
   14000b846:	and    BYTE PTR [rcx+0x64],cl
   14000b849:	cmp    eax,0x32657b22
   14000b84e:	xor    BYTE PTR [rcx],dh
   14000b850:	xor    DWORD PTR [rsi*1+0x35312d37],esi
   14000b857:	xor    al,0x36
   14000b859:	sub    eax,0x35633334
   14000b85e:	sub    eax,0x65663561
   14000b863:	sub    eax,0x64383030
   14000b868:	gs gs xor esp,DWORD PTR gs:[rbx+rsi*1+0x66]
   14000b86f:	xor    BYTE PTR [rbp+0x22],bh
   14000b872:	(bad)  
   14000b873:	ds or  eax,0x2020200a
   14000b879:	and    BYTE PTR [rax],ah
   14000b87b:	and    BYTE PTR [rdi+rbp*1],bh
   14000b87e:	(bad)  
   14000b87f:	jo     0x14000b8f1
   14000b881:	ins    BYTE PTR es:[rdi],dx
   14000b882:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000b889:	ds or  eax,0x2020200a
   14000b88f:	and    BYTE PTR [rdi+rbp*1],bh
   14000b892:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b895:	jo     0x14000b8f8
   14000b897:	je     0x14000b902
   14000b899:	(bad)  
   14000b89a:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0xa0d3e79
   14000b8a2:	cmp    al,0x2f
   14000b8a4:	(bad)  
   14000b8a5:	jae    0x14000b91a
   14000b8a7:	gs ins DWORD PTR es:[rdi],dx
   14000b8a9:	(bad)  
   14000b8aa:	ins    BYTE PTR es:[rdi],dx
   14000b8ab:	jns    0x14000b8eb
   14000b8ad:	or     eax,0x28000a
   14000b8b2:	add    BYTE PTR [rax],al
   14000b8b4:	xor    BYTE PTR [rax],al
   14000b8b6:	add    BYTE PTR [rax],al
   14000b8b8:	(bad)  
   14000b8b9:	add    BYTE PTR [rax],al
   14000b8bb:	add    BYTE PTR [rcx],al
   14000b8bd:	add    BYTE PTR [rax+rax*1],al
	...
   14000b8d0:	adc    BYTE PTR [rax],al
	...
   14000b8da:	add    BYTE PTR [rax],al
   14000b8dc:	add    BYTE PTR [rax],0x0
   14000b8df:	add    BYTE PTR [rax],al
   14000b8e1:	add    BYTE PTR [rax],0x0
   14000b8e4:	add    BYTE PTR [rax+0x0],0x80
   14000b8eb:	add    BYTE PTR [rax+0x8000],al
   14000b8f1:	add    BYTE PTR [rax-0x7f7f8000],0x0
   14000b8f8:	rol    al,0xc0
   14000b8fb:	add    bh,bh
   14000b8fd:	add    BYTE PTR [rax],al
   14000b8ff:	add    BYTE PTR [rax],al
   14000b901:	inc    DWORD PTR [rax]
   14000b903:	add    bh,bh
   14000b905:	inc    DWORD PTR [rax]
   14000b907:	add    BYTE PTR [rax],al
   14000b909:	add    bh,bh
   14000b90b:	add    bh,bh
   14000b90d:	add    bh,bh
   14000b90f:	add    BYTE PTR [rax],al
   14000b911:	(bad)  
   14000b912:	inc    DWORD PTR [rax]
   14000b914:	(bad)  
   14000b915:	(bad)  
   14000b916:	inc    DWORD PTR [rax]
   14000b918:	add    BYTE PTR [rbx],al
   14000b91a:	xor    esi,DWORD PTR [rbx]
   14000b91c:	xor    esi,DWORD PTR [rbx]
   14000b91e:	xor    esi,DWORD PTR [rbx]
   14000b920:	xor    esi,DWORD PTR [rbx]
   14000b922:	xor    esi,DWORD PTR [rbx]
   14000b924:	xor    esi,DWORD PTR [rbx]
   14000b926:	xor    esi,DWORD PTR [rbx]
   14000b928:	xor    esi,DWORD PTR [rbx]
   14000b92a:	xor    esi,DWORD PTR [rbx]
   14000b92c:	xor    esi,DWORD PTR [rbx]
   14000b92e:	xor    BYTE PTR [rax],al
   14000b930:	add    BYTE PTR [rdi],dh
   14000b932:	(bad)  
   14000b933:	(bad)  
   14000b934:	(bad)  
   14000b935:	(bad)  
   14000b936:	(bad)  
   14000b937:	(bad)  
   14000b938:	(bad)  
   14000b939:	(bad)  
   14000b93a:	(bad)  
   14000b93b:	(bad)  
   14000b93c:	(bad)  
   14000b93d:	(bad)  
   14000b93e:	(bad)  
   14000b93f:	(bad)  
   14000b940:	(bad)  
   14000b941:	(bad)  
   14000b942:	(bad)  
   14000b943:	(bad)  
   14000b944:	(bad)  
   14000b945:	push   QWORD PTR [rbx+0x0]
   14000b948:	add    ecx,DWORD PTR [rdi-0x1]
   14000b94e:	(bad)  
   14000b94f:	(bad)  
   14000b950:	(bad)  
   14000b951:	(bad)  
   14000b952:	(bad)  
   14000b953:	(bad)  
   14000b954:	(bad)  
   14000b955:	(bad)  
   14000b956:	(bad)  
   14000b957:	(bad)  
   14000b958:	(bad)  
   14000b959:	(bad)  
   14000b95a:	(bad)  
   14000b95b:	(bad)  
   14000b95c:	(bad)  
   14000b95d:	(bad)  
   14000b95e:	clc    
   14000b95f:	xor    BYTE PTR [rdi],al
   14000b961:	(bad)  
   14000b962:	(bad)  
   14000b963:	(bad)  
   14000b964:	(bad)  
   14000b965:	(bad)  
   14000b966:	(bad)  
   14000b967:	(bad)  
   14000b968:	(bad)  
   14000b969:	(bad)  
   14000b96a:	(bad)  
   14000b96b:	(bad)  
   14000b96c:	(bad)  
   14000b96d:	(bad)  
   14000b96e:	(bad)  
   14000b96f:	(bad)  
   14000b970:	(bad)  
   14000b971:	(bad)  
   14000b972:	(bad)  
   14000b973:	(bad)  
   14000b974:	(bad)  
   14000b975:	(bad)  
   14000b976:	push   QWORD PTR [rax+0x38]
   14000b979:	(bad)  
   14000b97a:	(bad)  
   14000b97b:	(bad)  
   14000b97c:	(bad)  
   14000b97d:	(bad)  
   14000b97e:	(bad)  
   14000b97f:	(bad)  
   14000b980:	(bad)  
   14000b981:	(bad)  
   14000b982:	(bad)  
   14000b983:	(bad)  
   14000b984:	(bad)  
   14000b985:	(bad)  
   14000b986:	(bad)  
   14000b987:	(bad)  
   14000b988:	(bad)  
   14000b989:	(bad)  
   14000b98a:	(bad)  
   14000b98b:	(bad)  
   14000b98c:	(bad)  
   14000b98d:	(bad)  
   14000b98e:	inc    DWORD PTR [rbx-0xc8]
   14000b994:	(bad)  
   14000b995:	dec    DWORD PTR [rax+0x77777787]
   14000b99b:	ja     0x14000ba14
   14000b99d:	ja     0x14000ba16
   14000b99f:	mov    BYTE PTR [rdi-0x1],cl
   14000b9a5:	(bad)  
   14000b9a6:	inc    DWORD PTR [rbx-0x88]
   14000b9ac:	clc    
   14000b9ad:	xchg   DWORD PTR [rdi+0x77],esi
   14000b9b0:	ja     0x14000ba29
   14000b9b2:	ja     0x14000ba2b
   14000b9b4:	ja     0x14000ba2d
   14000b9b6:	ja     0x14000ba2f
   14000b9b8:	ja     0x14000b942
   14000b9ba:	(bad)  
   14000b9bb:	(bad)  
   14000b9bc:	(bad)  
   14000b9bd:	(bad)  
   14000b9be:	inc    DWORD PTR [rdi-0x88]
   14000b9c4:	ja     0x14000ba3d
   14000b9c6:	ja     0x14000ba40
   14000b9c8:	mov    BYTE PTR [rax-0x77777778],cl
   14000b9ce:	mov    BYTE PTR [rdi+0x77],dh
   14000b9d1:	ja     0x14000b962
   14000b9d3:	(bad)  
   14000b9d4:	(bad)  
   14000b9d5:	(bad)  
   14000b9d6:	inc    DWORD PTR [rdi-0x88]
   14000b9dc:	ja     0x14000ba55
   14000b9de:	(bad)  
   14000b9df:	(bad)  
   14000b9e0:	(bad)  
   14000b9e1:	(bad)  
   14000b9e2:	(bad)  
   14000b9e3:	(bad)  
   14000b9e4:	(bad)  
   14000b9e5:	(bad)  
   14000b9e6:	(bad)  
   14000b9e7:	(bad)  
   14000b9e8:	clc    
   14000b9e9:	xchg   DWORD PTR [rax-0x1],edi
   14000b9ec:	(bad)  
   14000b9ed:	(bad)  
   14000b9ee:	inc    DWORD PTR [rdi-0x88]
   14000b9f4:	mov    BYTE PTR [rdi-0x78],dh
   14000b9f7:	(bad)  
   14000b9f8:	dec    DWORD PTR [rax-0x77777778]
   14000b9fe:	(bad)  
   14000b9ff:	(bad)  
   14000ba00:	(bad)  
   14000ba01:	dec    DWORD PTR [rax-0x1]
   14000ba07:	xchg   DWORD PTR [rax-0x1],edi
   14000ba0a:	(bad)  
   14000ba0b:	(bad)  
   14000ba0c:	(bad)  
   14000ba0d:	clc    
   14000ba0e:	xchg   DWORD PTR [rax+0x77777788],ecx
   14000ba14:	ja     0x14000ba8d
   14000ba16:	mov    bh,bh
   14000ba18:	(bad)  
   14000ba19:	dec    DWORD PTR [rdi-0x1]
   14000ba1f:	xchg   DWORD PTR [rax-0x1],edi
   14000ba22:	(bad)  
   14000ba23:	(bad)  
   14000ba24:	(bad)  
   14000ba25:	(bad)  
   14000ba26:	(bad)  
   14000ba27:	clc    
   14000ba28:	ja     0x14000baa1
   14000ba2a:	ja     0x14000baa3
   14000ba2c:	ja     0x14000baa5
   14000ba2e:	js     0x14000ba2f
   14000ba30:	(bad)  
   14000ba31:	(bad)  
   14000ba32:	(bad)  
   14000ba33:	(bad)  
   14000ba34:	(bad)  
   14000ba35:	(bad)  
   14000ba36:	inc    DWORD PTR [rdi-0x88]
   14000ba3c:	(bad)  
   14000ba3d:	(bad)  
   14000ba3e:	(bad)  
   14000ba3f:	clc    
   14000ba40:	ja     0x14000b9ca
   14000ba42:	mov    BYTE PTR [rax-0x707778],cl
   14000ba48:	(bad)  
   14000ba49:	(bad)  
   14000ba4a:	(bad)  
   14000ba4b:	(bad)  
   14000ba4c:	(bad)  
   14000ba4d:	(bad)  
   14000ba4e:	inc    DWORD PTR [rdi-0x88]
   14000ba54:	(bad)  
   14000ba55:	(bad)  
   14000ba56:	(bad)  
   14000ba57:	dec    DWORD PTR [rax-0x1]
   14000ba5d:	(bad)  
   14000ba5e:	(bad)  
   14000ba5f:	clc    
   14000ba60:	(bad)  
   14000ba61:	(bad)  
   14000ba62:	(bad)  
   14000ba63:	(bad)  
   14000ba64:	(bad)  
   14000ba65:	(bad)  
   14000ba66:	inc    DWORD PTR [rdi-0x88]
   14000ba6c:	(bad)  
   14000ba6d:	(bad)  
   14000ba6e:	(bad)  
   14000ba6f:	dec    DWORD PTR [rax+0x78777787]
   14000ba75:	mov    BYTE PTR [rax-0x707778],cl
   14000ba7b:	(bad)  
   14000ba7c:	(bad)  
   14000ba7d:	(bad)  
   14000ba7e:	inc    DWORD PTR [rdi-0x88]
   14000ba84:	(bad)  
   14000ba85:	(bad)  
   14000ba86:	inc    DWORD PTR [rdi+0x77777777]
   14000ba8c:	ja     0x14000bb05
   14000ba8e:	ja     0x14000ba1f
   14000ba90:	xchg   DWORD PTR [rax-0x1],edi
   14000ba93:	(bad)  
   14000ba94:	(bad)  
   14000ba95:	(bad)  
   14000ba96:	inc    DWORD PTR [rdi-0x88]
   14000ba9c:	(bad)  
   14000ba9d:	(bad)  
   14000ba9e:	inc    DWORD PTR [rdi-0x77777789]
   14000baa4:	mov    BYTE PTR [rdi+0x77f88f78],al
   14000baaa:	js     0x14000baab
   14000baac:	(bad)  
   14000baad:	(bad)  
   14000baae:	inc    DWORD PTR [rdi-0x88]
   14000bab4:	(bad)  
   14000bab5:	(bad)  
   14000bab6:	dec    DWORD PTR [rax-0x71]
   14000babc:	(bad)  
   14000babd:	(bad)  
   14000babe:	(bad)  
   14000babf:	(bad)  
   14000bac0:	(bad)  
   14000bac1:	clc    
   14000bac2:	ja     0x14000ba53
   14000bac4:	(bad)  
   14000bac5:	(bad)  
   14000bac6:	inc    DWORD PTR [rdi-0x88]
   14000bacc:	(bad)  
   14000bacd:	(bad)  
   14000bace:	(bad)  
   14000bacf:	dec    DWORD PTR [rax-0x70777778]
   14000bad5:	(bad)  
   14000bad6:	(bad)  
   14000bad7:	(bad)  
   14000bad8:	(bad)  
   14000bad9:	push   QWORD PTR [rdi+0x7f]
   14000badc:	(bad)  
   14000badd:	(bad)  
   14000bade:	inc    DWORD PTR [rdi-0x88]
   14000bae4:	(bad)  
   14000bae5:	clc    
   14000bae6:	mov    BYTE PTR [rdi+0x77],dh
   14000bae9:	ja     0x14000bb62
   14000baeb:	ja     0x14000bb64
   14000baed:	ja     0x14000bb67
   14000baef:	(bad)  
   14000baf0:	(bad)  
   14000baf1:	inc    DWORD PTR [rdi-0x81]
   14000baf7:	xchg   DWORD PTR [rax-0x1],edi
   14000bafa:	(bad)  
   14000bafb:	(bad)  
   14000bafc:	(bad)  
   14000bafd:	clc    
   14000bafe:	ja     0x14000bb78
   14000bb00:	mov    BYTE PTR [rax-0x77777778],cl
   14000bb06:	ja     0x14000bb80
   14000bb08:	(bad)  
   14000bb09:	inc    DWORD PTR [rdi-0x81]
   14000bb0f:	xchg   DWORD PTR [rax-0x1],edi
   14000bb12:	(bad)  
   14000bb13:	(bad)  
   14000bb14:	(bad)  
   14000bb15:	clc    
   14000bb16:	ja     0x14000bb90
   14000bb18:	(bad)  
   14000bb19:	(bad)  
   14000bb1a:	(bad)  
   14000bb1b:	dec    DWORD PTR [rax-0x77770701]
   14000bb21:	mov    BYTE PTR [rdi+0x7f],dh
   14000bb24:	(bad)  
   14000bb25:	(bad)  
   14000bb26:	inc    DWORD PTR [rdi-0x88]
   14000bb2c:	(bad)  
   14000bb2d:	(bad)  
   14000bb2e:	clc    
   14000bb2f:	mov    BYTE PTR [rax-0x7000071],cl
   14000bb35:	jg     0x14000bb36
   14000bb37:	(bad)  
   14000bb38:	clc    
   14000bb39:	xchg   DWORD PTR [rax-0x1],edi
   14000bb3c:	(bad)  
   14000bb3d:	(bad)  
   14000bb3e:	inc    DWORD PTR [rdi-0x88]
   14000bb44:	(bad)  
   14000bb45:	(bad)  
   14000bb46:	(bad)  
   14000bb47:	(bad)  
   14000bb48:	clc    
   14000bb49:	(bad)  
   14000bb4a:	dec    DWORD PTR [rax-0x9708]
   14000bb50:	dec    DWORD PTR [rax-0x1]
   14000bb56:	inc    DWORD PTR [rdi-0x81]
   14000bb5c:	(bad)  
   14000bb5d:	(bad)  
   14000bb5e:	(bad)  
   14000bb5f:	(bad)  
   14000bb60:	(bad)  
   14000bb61:	push   rdi
   14000bb63:	(bad)  
   14000bb64:	clc    
   14000bb65:	data16 (bad) 
   14000bb67:	(bad)  
   14000bb68:	(bad)  
   14000bb69:	(bad)  
   14000bb6a:	(bad)  
   14000bb6b:	(bad)  
   14000bb6c:	(bad)  
   14000bb6d:	(bad)  
   14000bb6e:	push   rdi
   14000bb70:	jg     0x14000bb71
   14000bb72:	(bad)  
   14000bb73:	(bad)  
   14000bb74:	(bad)  
   14000bb75:	(bad)  
   14000bb76:	(bad)  
   14000bb77:	(bad)  
   14000bb78:	(bad)  
   14000bb79:	push   QWORD PTR [rdi-0x1]
   14000bb7c:	xchg   BYTE PTR [rsi-0x71],ah
   14000bb7f:	(bad)  
   14000bb80:	(bad)  
   14000bb81:	(bad)  
   14000bb82:	(bad)  
   14000bb83:	(bad)  
   14000bb84:	(bad)  
   14000bb85:	(bad)  
   14000bb86:	push   rdi
   14000bb88:	jg     0x14000bb89
   14000bb8a:	(bad)  
   14000bb8b:	(bad)  
   14000bb8c:	(bad)  
   14000bb8d:	(bad)  
   14000bb8e:	(bad)  
   14000bb8f:	(bad)  
   14000bb90:	(bad)  
   14000bb91:	clc    
   14000bb92:	push   0xffffffff8f6686ff
   14000bb97:	(bad)  
   14000bb98:	(bad)  
   14000bb99:	(bad)  
   14000bb9a:	(bad)  
   14000bb9b:	(bad)  
   14000bb9c:	(bad)  
   14000bb9d:	(bad)  
   14000bb9e:	push   rdi
   14000bba0:	jg     0x14000bba1
   14000bba2:	(bad)  
   14000bba3:	(bad)  
   14000bba4:	(bad)  
   14000bba5:	(bad)  
   14000bba6:	(bad)  
   14000bba7:	(bad)  
   14000bba8:	inc    DWORD PTR [rsi+0x6866f88f]
   14000bbae:	(bad)  
   14000bbaf:	(bad)  
   14000bbb0:	(bad)  
   14000bbb1:	(bad)  
   14000bbb2:	(bad)  
   14000bbb3:	(bad)  
   14000bbb4:	(bad)  
   14000bbb5:	(bad)  
   14000bbb6:	push   rdi
   14000bbb8:	jg     0x14000bbb9
   14000bbba:	(bad)  
   14000bbbb:	(bad)  
   14000bbbc:	(bad)  
   14000bbbd:	(bad)  
   14000bbbe:	(bad)  
   14000bbbf:	(bad)  
   14000bbc0:	jmp    QWORD PTR [rsi-0x71]
   14000bbc3:	clc    
   14000bbc4:	data16 jg 0x14000bbc6
   14000bbc7:	(bad)  
   14000bbc8:	(bad)  
   14000bbc9:	(bad)  
   14000bbca:	(bad)  
   14000bbcb:	(bad)  
   14000bbcc:	(bad)  
   14000bbcd:	(bad)  
   14000bbce:	push   rdi
   14000bbd0:	jg     0x14000bbd1
   14000bbd2:	(bad)  
   14000bbd3:	(bad)  
   14000bbd4:	(bad)  
   14000bbd5:	(bad)  
   14000bbd6:	(bad)  
   14000bbd7:	(bad)  
   14000bbd8:	clc    
   14000bbd9:	data16 (bad) 
   14000bbdb:	mul    DWORD PTR [rsi-0x71]
   14000bbde:	(bad)  
   14000bbdf:	(bad)  
   14000bbe0:	(bad)  
   14000bbe1:	(bad)  
   14000bbe2:	(bad)  
   14000bbe3:	(bad)  
   14000bbe4:	(bad)  
   14000bbe5:	(bad)  
   14000bbe6:	push   rdi
   14000bbe8:	jg     0x14000bbe9
   14000bbea:	(bad)  
   14000bbeb:	(bad)  
   14000bbec:	(bad)  
   14000bbed:	(bad)  
   14000bbee:	(bad)  
   14000bbef:	(bad)  
   14000bbf0:	clc    
   14000bbf1:	data16 (bad) 
   14000bbf3:	mul    DWORD PTR [rdi-0x1]
   14000bbf6:	(bad)  
   14000bbf7:	(bad)  
   14000bbf8:	(bad)  
   14000bbf9:	(bad)  
   14000bbfa:	(bad)  
   14000bbfb:	(bad)  
   14000bbfc:	(bad)  
   14000bbfd:	(bad)  
   14000bbfe:	push   rdi
   14000bc00:	jg     0x14000bc01
   14000bc02:	(bad)  
   14000bc03:	(bad)  
   14000bc04:	(bad)  
   14000bc05:	(bad)  
   14000bc06:	(bad)  
   14000bc07:	(bad)  
   14000bc08:	clc    
   14000bc09:	data16 (bad) 
   14000bc0b:	clc    
   14000bc0c:	data16 (bad) 
   14000bc0e:	(bad)  
   14000bc0f:	(bad)  
   14000bc10:	(bad)  
   14000bc11:	(bad)  
   14000bc12:	(bad)  
   14000bc13:	(bad)  
   14000bc14:	(bad)  
   14000bc15:	(bad)  
   14000bc16:	push   rdi
   14000bc18:	jg     0x14000bc19
   14000bc1a:	(bad)  
   14000bc1b:	(bad)  
   14000bc1c:	(bad)  
   14000bc1d:	(bad)  
   14000bc1e:	(bad)  
   14000bc1f:	(bad)  
   14000bc20:	inc    DWORD PTR [rsi-0x70990098]
   14000bc26:	(bad)  
   14000bc27:	(bad)  
   14000bc28:	(bad)  
   14000bc29:	(bad)  
   14000bc2a:	(bad)  
   14000bc2b:	(bad)  
   14000bc2c:	(bad)  
   14000bc2d:	(bad)  
   14000bc2e:	push   rdi
   14000bc30:	jg     0x14000bc31
   14000bc32:	(bad)  
   14000bc33:	(bad)  
   14000bc34:	(bad)  
   14000bc35:	(bad)  
   14000bc36:	(bad)  
   14000bc37:	(bad)  
   14000bc38:	push   rdi
   14000bc3a:	pop    WORD PTR [rsi-0x98]
   14000bc41:	(bad)  
   14000bc42:	(bad)  
   14000bc43:	(bad)  
   14000bc44:	(bad)  
   14000bc45:	(bad)  
   14000bc46:	push   rdi
   14000bc48:	jg     0x14000bc49
   14000bc4a:	(bad)  
   14000bc4b:	(bad)  
   14000bc4c:	(bad)  
   14000bc4d:	(bad)  
   14000bc4e:	(bad)  
   14000bc4f:	(bad)  
   14000bc50:	(bad)  
   14000bc51:	push   QWORD PTR [rsi+0x68]
   14000bc54:	push   QWORD PTR [rsi-0x71]
   14000bc57:	(bad)  
   14000bc58:	(bad)  
   14000bc59:	(bad)  
   14000bc5a:	(bad)  
   14000bc5b:	(bad)  
   14000bc5c:	(bad)  
   14000bc5d:	(bad)  
   14000bc5e:	push   rdi
   14000bc60:	(bad)  
   14000bc61:	(bad)  
   14000bc62:	(bad)  
   14000bc63:	(bad)  
   14000bc64:	(bad)  
   14000bc65:	(bad)  
   14000bc66:	(bad)  
   14000bc67:	(bad)  
   14000bc68:	(bad)  
   14000bc69:	(bad)  
   14000bc6a:	clc    
   14000bc6b:	data16 (bad) 
   14000bc6d:	clc    
   14000bc6e:	ja     0x14000bbff
   14000bc70:	(bad)  
   14000bc71:	(bad)  
   14000bc72:	(bad)  
   14000bc73:	(bad)  
   14000bc74:	(bad)  
   14000bc75:	(bad)  
   14000bc76:	(bad)  
   14000bc77:	clc    
   14000bc78:	(bad)  
   14000bc79:	(bad)  
   14000bc7a:	(bad)  
   14000bc7b:	(bad)  
   14000bc7c:	(bad)  
   14000bc7d:	(bad)  
   14000bc7e:	(bad)  
   14000bc7f:	(bad)  
   14000bc80:	(bad)  
   14000bc81:	(bad)  
   14000bc82:	inc    DWORD PTR [rsi-0x77070098]
   14000bc88:	(bad)  
   14000bc89:	(bad)  
   14000bc8a:	(bad)  
   14000bc8b:	(bad)  
   14000bc8c:	(bad)  
   14000bc8d:	(bad)  
   14000bc8e:	(bad)  
   14000bc8f:	clc    
   14000bc90:	(bad)  
   14000bc91:	(bad)  
   14000bc92:	(bad)  
   14000bc93:	(bad)  
   14000bc94:	(bad)  
   14000bc95:	(bad)  
   14000bc96:	(bad)  
   14000bc97:	(bad)  
   14000bc98:	(bad)  
   14000bc99:	(bad)  
   14000bc9a:	(bad)  
   14000bc9b:	clc    
   14000bc9c:	data16 (bad) 
   14000bc9e:	(bad)  
   14000bc9f:	clc    
   14000bca0:	(bad)  
   14000bca1:	(bad)  
   14000bca2:	(bad)  
   14000bca3:	(bad)  
   14000bca4:	(bad)  
   14000bca5:	(bad)  
   14000bca6:	(bad)  
   14000bca7:	clc    
   14000bca8:	(bad)  
   14000bca9:	(bad)  
   14000bcaa:	(bad)  
   14000bcab:	(bad)  
   14000bcac:	(bad)  
   14000bcad:	(bad)  
   14000bcae:	(bad)  
   14000bcaf:	(bad)  
   14000bcb0:	(bad)  
   14000bcb1:	(bad)  
   14000bcb2:	(bad)  
   14000bcb3:	inc    DWORD PTR [rsi-0x98]
   14000bcb9:	(bad)  
   14000bcba:	(bad)  
   14000bcbb:	(bad)  
   14000bcbc:	(bad)  
   14000bcbd:	(bad)  
   14000bcbe:	(bad)  
   14000bcbf:	clc    
   14000bcc0:	(bad)  
   14000bcc1:	(bad)  
   14000bcc2:	(bad)  
   14000bcc3:	(bad)  
   14000bcc4:	(bad)  
   14000bcc5:	(bad)  
   14000bcc6:	(bad)  
   14000bcc7:	(bad)  
   14000bcc8:	(bad)  
   14000bcc9:	(bad)  
   14000bcca:	(bad)  
   14000bccb:	(bad)  
   14000bccc:	clc    
   14000bccd:	push   0xffffffffffffffff
   14000bcd2:	(bad)  
   14000bcd3:	(bad)  
   14000bcd4:	(bad)  
   14000bcd5:	(bad)  
   14000bcd6:	(bad)  
   14000bcd7:	clc    
   14000bcd8:	(bad)  
   14000bcd9:	(bad)  
   14000bcda:	(bad)  
   14000bcdb:	(bad)  
   14000bcdc:	(bad)  
   14000bcdd:	(bad)  
   14000bcde:	(bad)  
   14000bcdf:	(bad)  
   14000bce0:	(bad)  
   14000bce1:	(bad)  
   14000bce2:	(bad)  
   14000bce3:	(bad)  
   14000bce4:	inc    DWORD PTR [rsi-0x71]
   14000bcea:	(bad)  
   14000bceb:	(bad)  
   14000bcec:	(bad)  
   14000bced:	(bad)  
   14000bcee:	(bad)  
   14000bcef:	clc    
   14000bcf0:	(bad)  
   14000bcf1:	(bad)  
   14000bcf2:	(bad)  
   14000bcf3:	(bad)  
   14000bcf4:	(bad)  
   14000bcf5:	(bad)  
   14000bcf6:	(bad)  
   14000bcf7:	(bad)  
   14000bcf8:	(bad)  
   14000bcf9:	(bad)  
   14000bcfa:	(bad)  
   14000bcfb:	(bad)  
   14000bcfc:	inc    DWORD PTR [rdi-0x71]
   14000bd02:	(bad)  
   14000bd03:	(bad)  
   14000bd04:	(bad)  
   14000bd05:	(bad)  
   14000bd06:	(bad)  
   14000bd07:	clc    
   14000bd08:	(bad)  
   14000bd09:	(bad)  
   14000bd0a:	(bad)  
   14000bd0b:	(bad)  
   14000bd0c:	(bad)  
   14000bd0d:	(bad)  
   14000bd0e:	(bad)  
   14000bd0f:	(bad)  
   14000bd10:	(bad)  
   14000bd11:	(bad)  
   14000bd12:	(bad)  
   14000bd13:	(bad)  
   14000bd14:	(bad)  
   14000bd15:	clc    
   14000bd16:	(bad)  
   14000bd17:	(bad)  
   14000bd18:	(bad)  
   14000bd19:	(bad)  
   14000bd1a:	(bad)  
   14000bd1b:	(bad)  
   14000bd1c:	(bad)  
   14000bd1d:	(bad)  
   14000bd1e:	(bad)  
   14000bd1f:	clc    
   14000bd20:	(bad)  
   14000bd21:	(bad)  
   14000bd22:	(bad)  
   14000bd23:	(bad)  
   14000bd24:	(bad)  
   14000bd25:	(bad)  
   14000bd26:	(bad)  
   14000bd27:	(bad)  
   14000bd28:	(bad)  
   14000bd29:	(bad)  
   14000bd2a:	(bad)  
   14000bd2b:	(bad)  
   14000bd2c:	(bad)  
   14000bd2d:	clc    
   14000bd2e:	(bad)  
   14000bd2f:	(bad)  
   14000bd30:	(bad)  
   14000bd31:	(bad)  
   14000bd32:	(bad)  
   14000bd33:	(bad)  
   14000bd34:	(bad)  
   14000bd35:	(bad)  
   14000bd36:	(bad)  
   14000bd37:	clc    
   14000bd38:	or     bh,bh
   14000bd3a:	(bad)  
   14000bd3b:	(bad)  
   14000bd3c:	(bad)  
   14000bd3d:	(bad)  
   14000bd3e:	(bad)  
   14000bd3f:	(bad)  
   14000bd40:	(bad)  
   14000bd41:	(bad)  
   14000bd42:	(bad)  
   14000bd43:	(bad)  
   14000bd44:	(bad)  
   14000bd45:	(bad)  
   14000bd46:	(bad)  
   14000bd47:	(bad)  
   14000bd48:	(bad)  
   14000bd49:	(bad)  
   14000bd4a:	(bad)  
   14000bd4b:	(bad)  
   14000bd4c:	(bad)  
   14000bd4d:	(bad)  
   14000bd4e:	dec    DWORD PTR [rax-0x70f8]
   14000bd54:	(bad)  
   14000bd55:	(bad)  
   14000bd56:	(bad)  
   14000bd57:	(bad)  
   14000bd58:	(bad)  
   14000bd59:	(bad)  
   14000bd5a:	(bad)  
   14000bd5b:	(bad)  
   14000bd5c:	(bad)  
   14000bd5d:	(bad)  
   14000bd5e:	(bad)  
   14000bd5f:	(bad)  
   14000bd60:	(bad)  
   14000bd61:	(bad)  
   14000bd62:	(bad)  
   14000bd63:	(bad)  
   14000bd64:	(bad)  
   14000bd65:	(bad)  
   14000bd66:	inc    DWORD PTR [rax-0x7800]
   14000bd6c:	(bad)  
   14000bd6d:	(bad)  
   14000bd6e:	(bad)  
   14000bd6f:	(bad)  
   14000bd70:	(bad)  
   14000bd71:	(bad)  
   14000bd72:	(bad)  
   14000bd73:	(bad)  
   14000bd74:	(bad)  
   14000bd75:	(bad)  
   14000bd76:	(bad)  
   14000bd77:	(bad)  
   14000bd78:	(bad)  
   14000bd79:	(bad)  
   14000bd7a:	(bad)  
   14000bd7b:	(bad)  
   14000bd7c:	(bad)  
   14000bd7d:	dec    DWORD PTR [rax-0x77f7ff80]
   14000bd83:	mov    BYTE PTR [rax-0x77777778],cl
   14000bd89:	mov    BYTE PTR [rax-0x77777778],cl
   14000bd8f:	mov    BYTE PTR [rax-0x77777778],cl
   14000bd95:	mov    BYTE PTR [rax+0xe000],al
   14000bd9b:	add    BYTE PTR [rax],al
   14000bd9d:	(bad)  
   14000bd9e:	pushf  
   14000bd9f:	xchg   ecx,eax
   14000bda0:	rol    BYTE PTR [rax],0x0
   14000bda3:	add    BYTE PTR [rax],al
   14000bda5:	add    esp,eax
   14000bda7:	add    BYTE PTR [rax+0x0],al
   14000bdad:	add    eax,eax
   14000bdaf:	add    BYTE PTR [rax+0x0],al
   14000bdb5:	add    DWORD PTR [rax+0x0],eax
   14000bdbb:	add    BYTE PTR [rax],al
   14000bdbd:	add    BYTE PTR [rax+0x0],al
	...
   14000bef7:	add    BYTE PTR [rax+0x0],al
   14000befd:	add    BYTE PTR [rax],al
   14000beff:	add    BYTE PTR [rax+0x0],al
   14000bf05:	add    DWORD PTR [rax+0xc000],eax
   14000bf0b:	add    BYTE PTR [rax],al
   14000bf0d:	add    DWORD PTR [rax+0xe000],eax
   14000bf13:	add    BYTE PTR [rax],al
   14000bf15:	(bad)  
   14000bf16:	rol    BYTE PTR [rax],0x28
   14000bf19:	add    BYTE PTR [rax],al
   14000bf1b:	add    BYTE PTR [rax],ah
   14000bf1d:	add    BYTE PTR [rax],al
   14000bf1f:	add    BYTE PTR [rax+0x0],al
   14000bf22:	add    BYTE PTR [rax],al
   14000bf24:	add    DWORD PTR [rax],eax
   14000bf26:	add    al,0x0
	...
   14000bf38:	adc    BYTE PTR [rax],al
	...
   14000bf42:	add    BYTE PTR [rax],al
   14000bf44:	add    BYTE PTR [rax],0x0
   14000bf47:	add    BYTE PTR [rax],al
   14000bf49:	add    BYTE PTR [rax],0x0
   14000bf4c:	add    BYTE PTR [rax+0x0],0x80
   14000bf53:	add    BYTE PTR [rax+0x8000],al
   14000bf59:	add    BYTE PTR [rax-0x7f7f8000],0x0
   14000bf60:	rol    al,0xc0
   14000bf63:	add    bh,bh
   14000bf65:	add    BYTE PTR [rax],al
   14000bf67:	add    BYTE PTR [rax],al
   14000bf69:	inc    DWORD PTR [rax]
   14000bf6b:	add    bh,bh
   14000bf6d:	inc    DWORD PTR [rax]
   14000bf6f:	add    BYTE PTR [rax],al
   14000bf71:	add    bh,bh
   14000bf73:	add    bh,bh
   14000bf75:	add    bh,bh
   14000bf77:	add    BYTE PTR [rax],al
   14000bf79:	(bad)  
   14000bf7a:	inc    DWORD PTR [rax]
   14000bf7c:	(bad)  
   14000bf7d:	(bad)  
   14000bf7e:	inc    DWORD PTR [rax]
   14000bf80:	add    BYTE PTR [rbx],al
   14000bf82:	xor    esi,DWORD PTR [rbx]
   14000bf84:	xor    esi,DWORD PTR [rbx]
   14000bf86:	xor    esi,DWORD PTR [rbx]
   14000bf88:	xor    esi,DWORD PTR [rbx]
   14000bf8a:	xor    esi,DWORD PTR [rbx]
   14000bf8c:	xor    esi,DWORD PTR [rbx]
   14000bf8e:	xor    BYTE PTR [rax],al
   14000bf90:	add    BYTE PTR [rdi-0x71],dh
   14000bf93:	(bad)  
   14000bf94:	(bad)  
   14000bf95:	(bad)  
   14000bf96:	(bad)  
   14000bf97:	(bad)  
   14000bf98:	(bad)  
   14000bf99:	(bad)  
   14000bf9a:	(bad)  
   14000bf9b:	(bad)  
   14000bf9c:	(bad)  
   14000bf9d:	clc    
   14000bf9e:	ja     0x14000bfa0
   14000bfa0:	(bad)  
   14000bfa1:	(bad)  
   14000bfa2:	(bad)  
   14000bfa3:	(bad)  
   14000bfa4:	(bad)  
   14000bfa5:	(bad)  
   14000bfa6:	(bad)  
   14000bfa7:	(bad)  
   14000bfa8:	(bad)  
   14000bfa9:	(bad)  
   14000bfaa:	(bad)  
   14000bfab:	(bad)  
   14000bfac:	(bad)  
   14000bfad:	(bad)  
   14000bfae:	clc    
   14000bfaf:	jo     0x14000bfe8
   14000bfb1:	(bad)  
   14000bfb2:	(bad)  
   14000bfb3:	(bad)  
   14000bfb4:	(bad)  
   14000bfb5:	(bad)  
   14000bfb6:	(bad)  
   14000bfb7:	(bad)  
   14000bfb8:	(bad)  
   14000bfb9:	(bad)  
   14000bfba:	(bad)  
   14000bfbb:	(bad)  
   14000bfbc:	(bad)  
   14000bfbd:	(bad)  
   14000bfbe:	push   QWORD PTR [rbx+0x78]
   14000bfc1:	(bad)  
   14000bfc2:	dec    DWORD PTR [rax+0x77777787]
   14000bfc8:	ja     0x14000c041
   14000bfca:	js     0x14000bf54
   14000bfcc:	(bad)  
   14000bfcd:	(bad)  
   14000bfce:	inc    DWORD PTR [rdi+0x77ffff78]
   14000bfd4:	ja     0x14000bf5e
   14000bfd6:	mov    BYTE PTR [rax+0x77878888],cl
   14000bfdc:	(bad)  
   14000bfdd:	(bad)  
   14000bfde:	inc    DWORD PTR [rdi-0x78000088]
   14000bfe4:	js     0x14000bfe5
   14000bfe6:	mov    BYTE PTR [rax-0x7007078],cl
   14000bfec:	jg     0x14000bfed
   14000bfee:	inc    DWORD PTR [rdi-0x7000088]
   14000bff4:	mov    BYTE PTR [rdi+0x78777777],al
   14000bffa:	(bad)  
   14000bffb:	dec    DWORD PTR [rdi+0x7887ffff]
   14000c001:	(bad)  
   14000c002:	(bad)  
   14000c003:	(bad)  
   14000c004:	inc    DWORD PTR [rdi+0x78888878]
   14000c00a:	(bad)  
   14000c00b:	(bad)  
   14000c00c:	(bad)  
   14000c00d:	(bad)  
   14000c00e:	inc    DWORD PTR [rdi-0x88]
   14000c014:	(bad)  
   14000c015:	clc    
   14000c016:	mov    BYTE PTR [rax-0x70077078],cl
   14000c01c:	(bad)  
   14000c01d:	(bad)  
   14000c01e:	inc    DWORD PTR [rdi-0x88]
   14000c024:	clc    
   14000c025:	xchg   DWORD PTR [rdi+0x77],esi
   14000c028:	ja     0x14000c0a1
   14000c02a:	mov    BYTE PTR [rax-0x78000071],cl
   14000c030:	js     0x14000c031
   14000c032:	(bad)  
   14000c033:	(bad)  
   14000c034:	clc    
   14000c035:	ja     0x14000bfbf
   14000c037:	mov    BYTE PTR [rax+0x7f878f88],cl
   14000c03d:	(bad)  
   14000c03e:	inc    DWORD PTR [rdi-0x88]
   14000c044:	clc    
   14000c045:	mov    BYTE PTR [rax-0x777778],cl
   14000c04b:	clc    
   14000c04c:	jg     0x14000c04d
   14000c04e:	inc    DWORD PTR [rdi-0x7000088]
   14000c054:	ja     0x14000c0ce
   14000c056:	xchg   DWORD PTR [rax+0x77],edi
   14000c059:	ja     0x14000bfe3
   14000c05b:	(bad)  
   14000c05c:	jg     0x14000c05d
   14000c05e:	inc    DWORD PTR [rdi-0x88]
   14000c064:	xchg   DWORD PTR [rax-0x71],edi
   14000c067:	dec    DWORD PTR [rax+0x7f878888]
   14000c06d:	(bad)  
   14000c06e:	inc    DWORD PTR [rdi-0x88]
   14000c074:	dec    DWORD PTR [rax-0x70787701]
   14000c07a:	dec    DWORD PTR [rax-0x78000071]
   14000c080:	jg     0x14000c081
   14000c082:	(bad)  
   14000c083:	(bad)  
   14000c084:	(bad)  
   14000c085:	(bad)  
   14000c086:	clc    
   14000c087:	js     0x14000c07f
   14000c089:	outs   dx,DWORD PTR ds:[rsi]
   14000c08a:	(bad)  
   14000c08b:	(bad)  
   14000c08c:	(bad)  
   14000c08d:	(bad)  
   14000c08e:	push   rdi
   14000c090:	jg     0x14000c091
   14000c092:	(bad)  
   14000c093:	(bad)  
   14000c094:	(bad)  
   14000c095:	push   rsi
   14000c097:	pop    QWORD PTR [rsi-0x81]
   14000c09d:	(bad)  
   14000c09e:	push   rdi
   14000c0a0:	jg     0x14000c0a1
   14000c0a2:	(bad)  
   14000c0a3:	(bad)  
   14000c0a4:	(bad)  
   14000c0a5:	inc    DWORD PTR [rsi-0x709908]
   14000c0ab:	(bad)  
   14000c0ac:	(bad)  
   14000c0ad:	(bad)  
   14000c0ae:	push   rdi
   14000c0b0:	jg     0x14000c0b1
   14000c0b2:	(bad)  
   14000c0b3:	(bad)  
   14000c0b4:	(bad)  
   14000c0b5:	clc    
   14000c0b6:	push   0xffffffffffff68f8
   14000c0bb:	(bad)  
   14000c0bc:	(bad)  
   14000c0bd:	(bad)  
   14000c0be:	push   rdi
   14000c0c0:	jg     0x14000c0c1
   14000c0c2:	(bad)  
   14000c0c3:	(bad)  
   14000c0c4:	(bad)  
   14000c0c5:	clc    
   14000c0c6:	addr32 clc 
   14000c0c8:	push   0xffffffffffffffff
   14000c0cd:	(bad)  
   14000c0ce:	push   rdi
   14000c0d0:	jg     0x14000c0d1
   14000c0d2:	(bad)  
   14000c0d3:	(bad)  
   14000c0d4:	(bad)  
   14000c0d5:	inc    DWORD PTR [rsi-0x8971]
   14000c0db:	(bad)  
   14000c0dc:	(bad)  
   14000c0dd:	(bad)  
   14000c0de:	push   rdi
   14000c0e0:	jg     0x14000c0e1
   14000c0e2:	(bad)  
   14000c0e3:	(bad)  
   14000c0e4:	(bad)  
   14000c0e5:	push   rdi
   14000c0e7:	push   0xffffffffffff78f7
   14000c0ec:	(bad)  
   14000c0ed:	(bad)  
   14000c0ee:	push   rdi
   14000c0f0:	(bad)  
   14000c0f1:	(bad)  
   14000c0f2:	(bad)  
   14000c0f3:	(bad)  
   14000c0f4:	(bad)  
   14000c0f5:	(bad)  
   14000c0f6:	inc    DWORD PTR [rsi-0x707771]
   14000c0fc:	(bad)  
   14000c0fd:	(bad)  
   14000c0fe:	(bad)  
   14000c0ff:	clc    
   14000c100:	(bad)  
   14000c101:	(bad)  
   14000c102:	(bad)  
   14000c103:	(bad)  
   14000c104:	(bad)  
   14000c105:	(bad)  
   14000c106:	(bad)  
   14000c107:	clc    
   14000c108:	push   0xffffffffffff8fff
   14000c10d:	(bad)  
   14000c10e:	(bad)  
   14000c10f:	clc    
   14000c110:	(bad)  
   14000c111:	(bad)  
   14000c112:	(bad)  
   14000c113:	(bad)  
   14000c114:	(bad)  
   14000c115:	(bad)  
   14000c116:	(bad)  
   14000c117:	inc    DWORD PTR [rsi-0x71]
   14000c11d:	(bad)  
   14000c11e:	(bad)  
   14000c11f:	clc    
   14000c120:	(bad)  
   14000c121:	(bad)  
   14000c122:	(bad)  
   14000c123:	(bad)  
   14000c124:	(bad)  
   14000c125:	(bad)  
   14000c126:	(bad)  
   14000c127:	(bad)  
   14000c128:	clc    
   14000c129:	(bad)  
   14000c12a:	(bad)  
   14000c12b:	(bad)  
   14000c12c:	(bad)  
   14000c12d:	(bad)  
   14000c12e:	(bad)  
   14000c12f:	clc    
   14000c130:	mov    bh,bh
   14000c132:	(bad)  
   14000c133:	(bad)  
   14000c134:	(bad)  
   14000c135:	(bad)  
   14000c136:	(bad)  
   14000c137:	(bad)  
   14000c138:	dec    DWORD PTR [rdi-0x1]
   14000c13e:	dec    DWORD PTR [rax-0x78]
   14000c144:	(bad)  
   14000c145:	(bad)  
   14000c146:	(bad)  
   14000c147:	(bad)  
   14000c148:	(bad)  
   14000c149:	(bad)  
   14000c14a:	(bad)  
   14000c14b:	(bad)  
   14000c14c:	(bad)  
   14000c14d:	(bad)  
   14000c14e:	dec    DWORD PTR [rax-0x70f8]
   14000c154:	(bad)  
   14000c155:	(bad)  
   14000c156:	(bad)  
   14000c157:	(bad)  
   14000c158:	(bad)  
   14000c159:	(bad)  
   14000c15a:	(bad)  
   14000c15b:	(bad)  
   14000c15c:	(bad)  
   14000c15d:	(bad)  
   14000c15e:	clc    
   14000c15f:	add    BYTE PTR [rax],0x88
   14000c162:	(bad)  
   14000c163:	(bad)  
   14000c164:	(bad)  
   14000c165:	(bad)  
   14000c166:	(bad)  
   14000c167:	(bad)  
   14000c168:	(bad)  
   14000c169:	(bad)  
   14000c16a:	(bad)  
   14000c16b:	(bad)  
   14000c16c:	(bad)  
   14000c16d:	clc    
   14000c16e:	mov    BYTE PTR [rax],al
   14000c170:	add    BYTE PTR [rax],cl
   14000c172:	mov    BYTE PTR [rax-0x77777778],cl
   14000c178:	mov    BYTE PTR [rax-0x77777778],cl
   14000c17e:	add    BYTE PTR [rax],0xe0
   14000c181:	add    BYTE PTR [rax],al
   14000c183:	(bad)  
   14000c184:	rol    BYTE PTR [rax],0x0
   14000c187:	add    eax,DWORD PTR [rax+0x10000]
	...
   14000c1f1:	add    BYTE PTR [rax],al
   14000c1f3:	add    BYTE PTR [rax-0x3fff0000],al
   14000c1f9:	add    BYTE PTR [rax],al
   14000c1fb:	add    esp,eax
   14000c1fd:	add    BYTE PTR [rax],al
   14000c1ff:	(bad)  
   14000c200:	sub    BYTE PTR [rax],al
   14000c202:	add    BYTE PTR [rax],al
   14000c204:	sbb    BYTE PTR [rax],al
   14000c206:	add    BYTE PTR [rax],al
   14000c208:	xor    BYTE PTR [rax],al
   14000c20a:	add    BYTE PTR [rax],al
   14000c20c:	add    DWORD PTR [rax],eax
   14000c20e:	add    al,0x0
	...
   14000c220:	adc    BYTE PTR [rax],al
	...
   14000c22a:	add    BYTE PTR [rax],al
   14000c22c:	add    BYTE PTR [rax],0x0
   14000c22f:	add    BYTE PTR [rax],al
   14000c231:	add    BYTE PTR [rax],0x0
   14000c234:	add    BYTE PTR [rax+0x0],0x80
   14000c23b:	add    BYTE PTR [rax+0x8000],al
   14000c241:	add    BYTE PTR [rax-0x7f7f8000],0x0
   14000c248:	rol    al,0xc0
   14000c24b:	add    bh,bh
   14000c24d:	add    BYTE PTR [rax],al
   14000c24f:	add    BYTE PTR [rax],al
   14000c251:	inc    DWORD PTR [rax]
   14000c253:	add    bh,bh
   14000c255:	inc    DWORD PTR [rax]
   14000c257:	add    BYTE PTR [rax],al
   14000c259:	add    bh,bh
   14000c25b:	add    bh,bh
   14000c25d:	add    bh,bh
   14000c25f:	add    BYTE PTR [rax],al
   14000c261:	(bad)  
   14000c262:	inc    DWORD PTR [rax]
   14000c264:	(bad)  
   14000c265:	(bad)  
   14000c266:	inc    DWORD PTR [rax]
	...
   14000c274:	add    esi,DWORD PTR [rbx]
   14000c276:	xor    esi,DWORD PTR [rbx]
   14000c278:	xor    esi,DWORD PTR [rbx]
   14000c27a:	xor    esi,DWORD PTR [rbx]
   14000c27c:	xor    esi,DWORD PTR [rbx]
   14000c27e:	xor    esi,DWORD PTR [rax]
   14000c280:	(bad)  
   14000c281:	(bad)  
   14000c282:	(bad)  
   14000c283:	(bad)  
   14000c284:	(bad)  
   14000c285:	(bad)  
   14000c286:	(bad)  
   14000c287:	(bad)  
   14000c288:	(bad)  
   14000c289:	(bad)  
   14000c28a:	clc    
   14000c28b:	jae    0x14000c305
   14000c28d:	(bad)  
   14000c28e:	(bad)  
   14000c28f:	(bad)  
   14000c290:	(bad)  
   14000c291:	(bad)  
   14000c292:	(bad)  
   14000c293:	(bad)  
   14000c294:	(bad)  
   14000c295:	(bad)  
   14000c296:	inc    DWORD PTR [rdi-0x88]
   14000c29c:	(bad)  
   14000c29d:	(bad)  
   14000c29e:	(bad)  
   14000c29f:	(bad)  
   14000c2a0:	(bad)  
   14000c2a1:	(bad)  
   14000c2a2:	inc    DWORD PTR [rdi+0x77f8ff78]
   14000c2a8:	ja     0x14000c321
   14000c2aa:	ja     0x14000c323
   14000c2ac:	(bad)  
   14000c2ad:	(bad)  
   14000c2ae:	inc    DWORD PTR [rdi+0x7887f878]
   14000c2b4:	mov    BYTE PTR [rax-0x70877878],cl
   14000c2ba:	inc    DWORD PTR [rdi-0x77770088]
   14000c2c0:	ja     0x14000c339
   14000c2c2:	js     0x14000c24c
   14000c2c4:	mov    bh,bh
   14000c2c6:	inc    DWORD PTR [rdi-0x77000088]
   14000c2cc:	mov    BYTE PTR [rax-0x708778],cl
   14000c2d2:	inc    DWORD PTR [rdi-0x78000088]
   14000c2d8:	ja     0x14000c351
   14000c2da:	ja     0x14000c263
   14000c2dc:	jg     0x14000c2dd
   14000c2de:	inc    DWORD PTR [rdi-0x7000088]
   14000c2e4:	mov    BYTE PTR [rax-0x887778],cl
   14000c2ea:	inc    DWORD PTR [rdi+0x77ffff78]
   14000c2f0:	ja     0x14000c369
   14000c2f2:	ja     0x14000c27c
   14000c2f4:	ja     0x14000c2f5
   14000c2f6:	inc    DWORD PTR [rdi-0x7000081]
   14000c2fc:	mov    BYTE PTR [rax-0x800871],cl
   14000c302:	push   rdi
   14000c304:	jg     0x14000c305
   14000c306:	(bad)  
   14000c307:	(bad)  
   14000c308:	clc    
   14000c309:	data16 (bad) 
   14000c30b:	(bad)  
   14000c30c:	(bad)  
   14000c30d:	(bad)  
   14000c30e:	push   rdi
   14000c310:	jg     0x14000c311
   14000c312:	(bad)  
   14000c313:	push   rsi
   14000c315:	xchg   bh,bh
   14000c317:	(bad)  
   14000c318:	(bad)  
   14000c319:	(bad)  
   14000c31a:	push   rdi
   14000c31c:	jg     0x14000c31d
   14000c31e:	(bad)  
   14000c31f:	push   rsi
   14000c321:	js     0x14000c392
   14000c323:	(bad)  
   14000c324:	(bad)  
   14000c325:	(bad)  
   14000c326:	push   rdi
   14000c328:	jg     0x14000c329
   14000c32a:	(bad)  
   14000c32b:	(bad)  
   14000c32c:	clc    
   14000c32d:	outs   dx,DWORD PTR ds:[rsi]
   14000c32e:	xchg   BYTE PTR [rdi-0x8000001],cl
   14000c334:	jg     0x14000c335
   14000c336:	(bad)  
   14000c337:	(bad)  
   14000c338:	inc    DWORD PTR [rsi-0x8]
   14000c33e:	push   rdi
   14000c340:	(bad)  
   14000c341:	(bad)  
   14000c342:	(bad)  
   14000c343:	(bad)  
   14000c344:	(bad)  
   14000c345:	clc    
   14000c346:	outs   dx,DWORD PTR ds:[rsi]
   14000c347:	(bad)  
   14000c348:	(bad)  
   14000c349:	(bad)  
   14000c34a:	(bad)  
   14000c34b:	clc    
   14000c34c:	(bad)  
   14000c34d:	(bad)  
   14000c34e:	(bad)  
   14000c34f:	(bad)  
   14000c350:	(bad)  
   14000c351:	clc    
   14000c352:	(bad)  
   14000c353:	(bad)  
   14000c354:	(bad)  
   14000c355:	(bad)  
   14000c356:	(bad)  
   14000c357:	clc    
   14000c358:	(bad)  
   14000c359:	(bad)  
   14000c35a:	(bad)  
   14000c35b:	(bad)  
   14000c35c:	(bad)  
   14000c35d:	(bad)  
   14000c35e:	(bad)  
   14000c35f:	(bad)  
   14000c360:	(bad)  
   14000c361:	(bad)  
   14000c362:	(bad)  
   14000c363:	clc    
   14000c364:	(bad)  
   14000c365:	(bad)  
   14000c366:	(bad)  
   14000c367:	(bad)  
   14000c368:	(bad)  
   14000c369:	(bad)  
   14000c36a:	(bad)  
   14000c36b:	(bad)  
   14000c36c:	(bad)  
   14000c36d:	(bad)  
   14000c36e:	(bad)  
   14000c36f:	clc    
   14000c370:	mov    bh,bh
   14000c372:	(bad)  
   14000c373:	(bad)  
   14000c374:	(bad)  
   14000c375:	(bad)  
   14000c376:	(bad)  
   14000c377:	(bad)  
   14000c378:	(bad)  
   14000c379:	(bad)  
   14000c37a:	dec    DWORD PTR [rax-0x777777f8]
   14000c380:	mov    BYTE PTR [rax-0x77777778],cl
   14000c386:	mov    BYTE PTR [rax-0x1],al
   14000c38c:	add    BYTE PTR [rax],0x1
   14000c38f:	inc    DWORD PTR [rax]
   14000c391:	add    BYTE PTR [rax],al
   14000c393:	add    BYTE PTR [rax],0x0
	...
   14000c3e2:	add    BYTE PTR [rax],al
   14000c3e4:	add    BYTE PTR [rax],0x1
   14000c3e7:	add    BYTE PTR [rax],ch
   14000c3e9:	add    BYTE PTR [rax],al
   14000c3eb:	add    BYTE PTR [rax],dl
   14000c3ed:	add    BYTE PTR [rax],al
   14000c3ef:	add    BYTE PTR [rax],ah
   14000c3f1:	add    BYTE PTR [rax],al
   14000c3f3:	add    BYTE PTR [rcx],al
   14000c3f5:	add    BYTE PTR [rax+rax*1],al
	...
   14000c408:	adc    BYTE PTR [rax],al
	...
   14000c412:	add    BYTE PTR [rax],al
   14000c414:	add    BYTE PTR [rax],0x0
   14000c417:	add    BYTE PTR [rax],al
   14000c419:	add    BYTE PTR [rax],0x0
   14000c41c:	add    BYTE PTR [rax+0x0],0x80
   14000c423:	add    BYTE PTR [rax+0x8000],al
   14000c429:	add    BYTE PTR [rax-0x7f7f8000],0x0
   14000c430:	rol    al,0xc0
   14000c433:	add    bh,bh
   14000c435:	add    BYTE PTR [rax],al
   14000c437:	add    BYTE PTR [rax],al
   14000c439:	inc    DWORD PTR [rax]
   14000c43b:	add    bh,bh
   14000c43d:	inc    DWORD PTR [rax]
   14000c43f:	add    BYTE PTR [rax],al
   14000c441:	add    bh,bh
   14000c443:	add    bh,bh
   14000c445:	add    bh,bh
   14000c447:	add    BYTE PTR [rax],al
   14000c449:	(bad)  
   14000c44a:	inc    DWORD PTR [rax]
   14000c44c:	(bad)  
   14000c44d:	(bad)  
   14000c44e:	inc    DWORD PTR [rax]
   14000c450:	add    esi,DWORD PTR [rbx]
   14000c452:	xor    esi,DWORD PTR [rbx]
   14000c454:	xor    esi,DWORD PTR [rbx]
   14000c456:	xor    esi,DWORD PTR [rax]
   14000c458:	js     0x14000c459
   14000c45a:	(bad)  
   14000c45b:	(bad)  
   14000c45c:	(bad)  
   14000c45d:	(bad)  
   14000c45e:	inc    DWORD PTR [rdi+0x7777f878]
   14000c464:	ja     0x14000c4dd
   14000c466:	inc    DWORD PTR [rdi-0x77770788]
   14000c46c:	mov    BYTE PTR [rax-0x877801],cl
   14000c472:	div    DWORD PTR [rdi+0x77]
   14000c475:	idiv   DWORD PTR [rdi-0x79]
   14000c478:	js     0x14000c479
   14000c47a:	clc    
   14000c47b:	mov    BYTE PTR [rax+0x78877788],cl
   14000c481:	push   QWORD PTR [rdi+0x77]
   14000c484:	ja     0x14000c415
   14000c486:	ja     0x14000c40f
   14000c488:	js     0x14000c489
   14000c48a:	mov    BYTE PTR [rsi-0x78800878],al
   14000c490:	jg     0x14000c491
   14000c492:	jmp    FWORD PTR [rdi+0x6f]
   14000c495:	(bad)  
   14000c496:	push   rdi
   14000c498:	jg     0x14000c499
   14000c49a:	jmp    FWORD PTR [rdi+0x66]
   14000c49d:	(bad)  
   14000c49e:	push   rdi
   14000c4a0:	jg     0x14000c4a1
   14000c4a2:	inc    DWORD PTR [rsi-0x8009008]
   14000c4a8:	jg     0x14000c4a9
   14000c4aa:	(bad)  
   14000c4ab:	clc    
   14000c4ac:	outs   dx,DWORD PTR ds:[rsi]
   14000c4ad:	(bad)  
   14000c4ae:	push   rdi
   14000c4b0:	(bad)  
   14000c4b1:	(bad)  
   14000c4b2:	(bad)  
   14000c4b3:	inc    DWORD PTR [rsi-0x70070001]
   14000c4b9:	(bad)  
   14000c4ba:	(bad)  
   14000c4bb:	(bad)  
   14000c4bc:	clc    
   14000c4bd:	(bad)  
   14000c4be:	(bad)  
   14000c4bf:	clc    
   14000c4c0:	mov    bh,bh
   14000c4c2:	(bad)  
   14000c4c3:	(bad)  
   14000c4c4:	(bad)  
   14000c4c5:	(bad)  
   14000c4c6:	dec    DWORD PTR [rax-0x777777f8]
   14000c4cc:	mov    BYTE PTR [rax+0x1808088],cl
   14000c4d2:	(bad)  
   14000c4d3:	inc    DWORD PTR [rax]
   14000c4d5:	add    BYTE PTR [rax+0x1],al
	...
   14000c50b:	add    BYTE PTR [rax+0x28000001],al
   14000c511:	add    BYTE PTR [rax],al
   14000c513:	add    BYTE PTR [rax],dh
   14000c515:	add    BYTE PTR [rax],al
   14000c517:	add    BYTE PTR [rax+0x0],ah
   14000c51a:	add    BYTE PTR [rax],al
   14000c51c:	add    DWORD PTR [rax],eax
   14000c51e:	or     BYTE PTR [rax],al
	...
   14000c530:	add    BYTE PTR [rcx],al
   14000c532:	add    BYTE PTR [rax],al
   14000c534:	add    BYTE PTR [rax],al
   14000c536:	add    BYTE PTR [rax],al
   14000c538:	outs   dx,BYTE PTR ds:[rsi]
   14000c539:	push   rsi
   14000c53a:	ss add dl,al
   14000c53d:	scas   al,BYTE PTR es:[rdi]
   14000c53e:	xchg   edx,eax
   14000c53f:	add    dl,bl
   14000c541:	fcmovbe st,st(2)
   14000c543:	add    BYTE PTR [rdx],cl
   14000c545:	data16 out 0x0,al
   14000c548:	jp     0x14000c4f8
   14000c54a:	out    dx,al
   14000c54b:	add    BYTE PTR [rsi-0x11ff9d7e],dl
   14000c551:	out    dx,al
   14000c552:	(bad)  
   14000c553:	add    BYTE PTR [rsi-0x35ff695a],dh
   14000c559:	mov    dh,0x0
   14000c55c:	stos   BYTE PTR es:[rdi],al
   14000c55d:	(bad)  
   14000c55e:	(bad)  
   14000c55f:	add    dl,cl
   14000c561:	(bad)  
   14000c563:	add    dl,cl
   14000c565:	ret    0xb2
   14000c568:	(bad)  
   14000c569:	outs   dx,BYTE PTR ds:[rsi]
   14000c56a:	rex.WRX add BYTE PTR [rdx-0x61ff113a],r12b
   14000c571:	mov    dh,BYTE PTR [rdx+0x0]
   14000c574:	xchg   edx,eax
   14000c575:	jp     0x14000c5d1
   14000c577:	add    BYTE PTR [rdx],bh
   14000c579:	mov    ah,dh
   14000c57b:	add    dl,ah
   14000c57d:	out    0xee,al
   14000c57f:	add    dl,al
   14000c581:	mov    dh,0xaa
   14000c583:	add    BYTE PTR [rdx],ah
   14000c585:	jp     0x14000c56d
   14000c587:	add    dh,ah
   14000c589:	out    0xe2,al
   14000c58b:	add    dl,bh
   14000c58d:	cli    
   14000c58e:	cli    
   14000c58f:	add    BYTE PTR [rsi-0x62],bl
   14000c592:	(bad)  
   14000c593:	add    BYTE PTR [rdx-0x15ff715a],bh
   14000c599:	out    dx,al
   14000c59a:	test   BYTE PTR [rax],0xb2
   14000c59d:	shl    dl,cl
   14000c59f:	add    BYTE PTR [rsi-0x29ff1d42],ah
   14000c5a5:	ror    dl,cl
   14000c5a7:	add    BYTE PTR [rsi-0x21ffa98a],cl
   14000c5ad:	(bad)  
   14000c5af:	add    BYTE PTR [rsi-0x45ff957e],dl
   14000c5b5:	scas   al,BYTE PTR es:[rdi]
   14000c5b6:	sahf   
   14000c5b7:	add    dl,al
   14000c5b9:	(bad)  
   14000c5bb:	add    dh,cl
   14000c5bd:	retf   0xbe
   14000c5c0:	movabs ds:0xd6008aa2b2007a92,al
   14000c5c9:	out    0xf2,al
   14000c5cb:	add    BYTE PTR [rdx],dh
   14000c5cd:	(bad)  
   14000c5ce:	out    0x0,al
   14000c5d0:	xchg   edx,eax
   14000c5d1:	jle    0x14000c635
   14000c5d3:	add    BYTE PTR [rsi-0x9ff4542],bh
   14000c5d9:	div    dh
   14000c5db:	add    BYTE PTR [rsi+0x62],dh
   14000c5de:	rex.X add BYTE PTR [rsi+0x52005672],al
   14000c5e5:	xchg   esi,eax
   14000c5e6:	(bad)  
   14000c5e7:	add    dh,al
   14000c5e9:	mov    esi,0xd6da00ae
   14000c5ee:	rol    BYTE PTR [rax],cl
   14000c5f0:	(bad)  
   14000c5f1:	jb     0x14000c5d9
   14000c5f3:	add    dh,dl
   14000c5f5:	fsubp  st(6),st
   14000c5f7:	add    BYTE PTR [rdx+0x6a00eece],ch
   14000c5fd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c5fe:	(bad)  
   14000c5ff:	add    dl,ah
   14000c601:	out    0xf2,al
   14000c603:	add    dl,bl
   14000c605:	fcmovu st,st(2)
   14000c607:	add    dh,al
   14000c609:	ret    0xba
   14000c60c:	xchg   BYTE PTR [rdx+0x52],dh
   14000c60f:	add    BYTE PTR [rdx-0x71ffa182],dl
   14000c615:	mov    edx,0x8a9e00ee
   14000c61a:	outs   dx,BYTE PTR ds:[rsi]
   14000c61b:	add    dl,cl
   14000c61d:	mov    dh,0x9e
   14000c61f:	add    BYTE PTR [rsi-0x51ff0d4a],al
   14000c625:	sahf   
   14000c626:	mov    al,BYTE PTR [rax]
   14000c628:	rex.WRX xchg rdx,rax
   14000c62a:	out    0x0,al
   14000c62c:	out    dx,al
   14000c62d:	repnz test BYTE PTR [rax],0xc2
   14000c631:	(bad)  
   14000c632:	repnz add dh,dl
   14000c635:	(bad)  
   14000c636:	(bad)  
   14000c637:	add    BYTE PTR [rsi+0x72007a92],ah
   14000c63d:	pop    rsi
   14000c63e:	add    BYTE PTR ds:[rdx-0x4e],bh
   14000c642:	out    dx,al
   14000c643:	add    BYTE PTR [rsi-0x49ff997e],dl
   14000c649:	stos   BYTE PTR es:[rdi],al
   14000c64a:	xchg   esi,eax
   14000c64b:	add    BYTE PTR [rsi-0x59ff7962],ch
   14000c651:	retf   0xf6
   14000c654:	xchg   esi,eax
   14000c655:	mov    es,WORD PTR [rdx-0x55453e00]
   14000c65b:	add    BYTE PTR [rdx],ch
   14000c65d:	jle    0x14000c645
   14000c65f:	add    BYTE PTR [rdx-0x45ff6d56],bh
   14000c665:	(bad)  
   14000c666:	repnz add dl,ah
   14000c669:	loop   0x14000c649
   14000c66b:	add    BYTE PTR [rdx-0x21ff957a],bl
   14000c671:	(bad)  
   14000c672:	repnz add BYTE PTR [rsi],dh
   14000c675:	xchg   dh,ah
   14000c677:	add    BYTE PTR [rdx-0x45ff0d3e],bl
   14000c67d:	scas   al,BYTE PTR es:[rdi]
   14000c67e:	(bad)  
   14000c67f:	add    BYTE PTR [rdx],dl
   14000c681:	outs   dx,BYTE PTR ds:[rsi]
   14000c682:	out    0x0,al
   14000c684:	out    0xee,al
   14000c686:	repnz add dl,dl
   14000c689:	(bad)  
   14000c68a:	mov    BYTE PTR [rax],0x82
   14000c68d:	outs   dx,BYTE PTR ds:[rsi]
   14000c68e:	push   rdx
   14000c68f:	add    BYTE PTR [rsi-0x5dff1136],ah
   14000c695:	mov    ?,WORD PTR [rdx+0x0]
   14000c698:	mov    ?,WORD PTR [rdx+0x5e]
   14000c69b:	add    dl,ch
   14000c69d:	(bad)  
   14000c69e:	out    0x0,al
   14000c6a0:	(bad)  
   14000c6a2:	(bad)  
   14000c6a3:	add    BYTE PTR [rdx-0x41ffa58a],cl
   14000c6a9:	mov    dl,0xa6
   14000c6ab:	add    dl,dl
   14000c6ad:	(bad)  
   14000c6ae:	ret    0xae00
   14000c6b1:	movabs ds:0xc6ce00f2e2d6008e,al
   14000c6ba:	mov    edx,0xf6be9200
   14000c6bf:	add    BYTE PTR [rdx-0x49ff856a],ch
   14000c6c5:	stos   BYTE PTR es:[rdi],al
   14000c6c6:	(bad)  
   14000c6c7:	add    BYTE PTR [rdx+0x5a],dh
   14000c6ca:	ds add dl,bl
   14000c6cd:	fcmovbe st,st(6)
   14000c6cf:	add    BYTE PTR [rdx-0x3dff7966],ch
   14000c6d5:	(bad)  
   14000c6d7:	add    BYTE PTR [rdx-0x72],al
   14000c6da:	out    0x0,al
   14000c6dc:	out    0xe6,al
   14000c6de:	out    0x0,al
   14000c6e0:	mov    dl,0xa6
   14000c6e2:	xchg   edx,eax
   14000c6e3:	add    dl,ch
   14000c6e5:	repnz cli 
   14000c6e7:	add    BYTE PTR [rdx-0x29ff092e],dh
   14000c6ed:	ror    dh,cl
   14000c6ef:	add    dh,al
   14000c6f1:	mov    dl,0x9e
   14000c6f3:	add    dh,cl
   14000c6f5:	loop   0x14000c6ed
   14000c6f7:	add    dh,cl
   14000c6f9:	retf   0xc2
   14000c6fc:	(bad)  
   14000c6fd:	out    0xf6,al
   14000c6ff:	add    dl,dh
   14000c701:	idiv   dh
   14000c703:	add    BYTE PTR [rsi+0x6a],bh
   14000c706:	rex.WX add sil,al
   14000c709:	mov    esi,0x761e00b2
   14000c70e:	out    0x0,al
   14000c710:	jb     0x14000c6bc
   14000c712:	(bad)  
   14000c713:	add    al,ah
   14000c715:	(bad)  
   14000c717:	add    BYTE PTR [rsi-0x65ff1142],dl
   14000c71d:	xchg   BYTE PTR [rsi+0x0],ah
   14000c720:	jrcxz  0x14000c704
   14000c722:	loop   0x14000c724
   14000c724:	pushf  
   14000c725:	xchg   BYTE PTR [rsi+0x0],ch
   14000c728:	jo     0x14000c784
   14000c72a:	cmp    al,BYTE PTR [rax]
   14000c72c:	or     eax,0x7800e66a
   14000c731:	scas   al,BYTE PTR es:[rdi]
   14000c732:	repnz add dh,ch
   14000c735:	out    dx,al
   14000c736:	out    dx,al
   14000c737:	add    bh,al
   14000c739:	(bad)  
   14000c73b:	add    BYTE PTR [rsi+0x6200eabe],dl
   14000c741:	(bad)  
   14000c742:	out    0x0,al
   14000c744:	ret    0xa6b6
   14000c747:	add    dh,al
   14000c749:	mov    dl,0x9a
   14000c74b:	add    dl,dh
   14000c74d:	repnz repnz add dl,ch
   14000c751:	(bad)  
   14000c752:	(bad)  
   14000c753:	add    dl,cl
   14000c755:	fdivp  st(2),st
   14000c757:	add    dh,bl
   14000c759:	loop   0x14000c745
   14000c75b:	add    dh,bh
   14000c75d:	(bad)  
   14000c75e:	inc    BYTE PTR [rax]
   14000c760:	jp     0x14000c7c8
   14000c762:	rex.RX add BYTE PTR [rdx-0x2dffa17e],r12b
   14000c769:	retf   0xc6
   14000c76c:	push   rsi
   14000c76d:	(bad)  
   14000c76e:	(bad)  
   14000c76f:	add    bl,ah
   14000c771:	(bad)  
   14000c772:	repnz add BYTE PTR [rbx-0x41ff1132],dh
   14000c779:	mov    dh,0xae
   14000c77b:	add    BYTE PTR [rdx-0x62],bl
   14000c77e:	out    dx,al
   14000c77f:	add    ah,ah
   14000c781:	out    dx,al
   14000c782:	cli    
   14000c783:	add    BYTE PTR [rdx-0x11ff816e],bl
   14000c789:	idiv   dl
   14000c78b:	add    dh,dl
   14000c78d:	(bad)  
   14000c78e:	(bad)  
   14000c78f:	add    BYTE PTR [rsi-0x4e],bh
   14000c792:	repnz add BYTE PTR [rdi-0x35ff5d4e],bh
   14000c799:	ret    0xb6
   14000c79c:	sahf   
   14000c79d:	(bad)  
   14000c79e:	repnz add BYTE PTR [rsi],bh
   14000c7a1:	mov    ch,dl
   14000c7a3:	add    BYTE PTR [rbx],dh
   14000c7a5:	(bad)  
   14000c7a6:	(bad)  
   14000c7a7:	add    BYTE PTR [rsi+0x6a00667e],dl
   14000c7ad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c7ae:	out    dx,al
   14000c7af:	add    BYTE PTR [rdx+0x4b00f2ba],cl
   14000c7b5:	xchg   edx,eax
   14000c7b6:	(bad)  
   14000c7b7:	add    dh,ch
   14000c7b9:	repnz cli 
   14000c7bb:	add    ch,al
   14000c7bd:	mov    edx,0x7e2a00ae
   14000c7c2:	(bad)  
   14000c7c3:	add    BYTE PTR [rdi],dh
   14000c7c5:	xchg   dl,ch
   14000c7c7:	add    dh,dl
   14000c7c9:	(bad)  
   14000c7ca:	retf   0xaa00
   14000c7cd:	retf   0xf2
   14000c7d0:	movabs ds:0xa900eea26600768e,al
   14000c7d9:	xchg   esi,eax
   14000c7da:	jle    0x14000c7dc
   14000c7dc:	rex.RX mov gs,edx
   14000c7df:	add    dh,ah
   14000c7e1:	(bad)  
   14000c7e2:	out    dx,al
   14000c7e3:	add    dl,bl
   14000c7e5:	loop   0x14000c7d5
   14000c7e7:	add    dl,al
   14000c7e9:	scas   al,BYTE PTR es:[rdi]
   14000c7ea:	xchg   esi,eax
   14000c7eb:	add    BYTE PTR [rdx+0x2a004e6e],cl
   14000c7f1:	jp     0x14000c7d9
   14000c7f3:	add    dl,bh
   14000c7f5:	cli    
   14000c7f6:	inc    BYTE PTR [rax]
   14000c7f8:	fsubrp st(6),st
   14000c7fa:	repnz add BYTE PTR [rsi],bl
   14000c7fd:	jb     0x14000c7e5
   14000c7ff:	add    dh,cl
   14000c801:	ret    0xba
   14000c804:	mov    ?,WORD PTR [rdx+0x52]
   14000c807:	add    BYTE PTR [rdx-0x35ffa182],bl
   14000c80d:	mov    dh,0xa2
   14000c80f:	add    dh,bl
   14000c811:	(bad)  
   14000c812:	(bad)  
   14000c813:	add    BYTE PTR [rsi-0x7dff816e],ah
   14000c819:	mov    dl,0xee
   14000c81b:	add    BYTE PTR [rsi-0x45ff6956],bh
   14000c821:	(bad)  
   14000c822:	test   BYTE PTR [rax],0xde
   14000c825:	(bad)  
   14000c826:	test   BYTE PTR [rax],0xc2
   14000c829:	scas   al,BYTE PTR es:[rdi]
   14000c82a:	(bad)  
   14000c82b:	add    BYTE PTR [rdx-0x69ffad92],cl
   14000c831:	jp     0x14000c891
   14000c833:	add    BYTE PTR [rdx-0x49ffa58a],dl
   14000c839:	movabs ds:0xa6ba00bec6ce008e,al
   14000c842:	xchg   edx,eax
   14000c843:	add    BYTE PTR [rsi+0x6a],bh
   14000c846:	rex.WRX add sil,r9b
   14000c849:	mov    esi,0xbe9600b2
   14000c84e:	repnz add BYTE PTR [rdx-0x9ff997a],ah
   14000c855:	idiv   dl
   14000c857:	add    dh,bl
   14000c859:	fcmovbe st,st(2)
   14000c85b:	add    BYTE PTR [rsi-0x31ff7d66],ch
   14000c861:	ret    0xb2
   14000c864:	xchg   BYTE PTR [rsi+0x4e],ch
   14000c867:	add    BYTE PTR [rdx-0x69ff8d76],ah
   14000c86d:	jp     0x14000c8c9
   14000c86f:	add    dh,al
   14000c871:	mov    dh,0xaa
   14000c873:	add    BYTE PTR [rsi],ah
   14000c875:	jp     0x14000c85d
   14000c877:	add    dl,ch
   14000c879:	out    0xe2,al
   14000c87b:	add    BYTE PTR [rdx-0x62],ah
   14000c87e:	(bad)  
   14000c87f:	add    BYTE PTR [rsi-0x25ff0d2e],dh
   14000c885:	ror    dl,cl
   14000c887:	add    BYTE PTR [rdx-0x1dffa98a],dl
   14000c88d:	(bad)  
   14000c88f:	add    BYTE PTR [rdx-0x2dff957e],bl
   14000c895:	retf   0xbe
   14000c898:	mov    dh,0xa2
   14000c89a:	mov    al,BYTE PTR [rax]
   14000c89c:	xchg   esi,eax
   14000c89d:	jle    0x14000c901
   14000c89f:	add    BYTE PTR [rdx-0x21ffa98e],cl
   14000c8a5:	(bad)  
   14000c8a6:	rol    BYTE PTR [rax],cl
   14000c8a8:	sbb    dh,BYTE PTR [rdx-0x1a]
   14000c8ab:	add    BYTE PTR [rsi-0x5a],ch
   14000c8ae:	(bad)  
   14000c8af:	add    dh,bl
   14000c8b1:	fcmovu st,st(2)
   14000c8b3:	add    dl,cl
   14000c8b5:	ret    0xba
   14000c8b8:	mov    dh,BYTE PTR [rdx+0x52]
   14000c8bb:	add    BYTE PTR [rsi-0x5dffa182],dl
   14000c8c1:	mov    ch,BYTE PTR [rsi+0x0]
   14000c8c4:	repnz repnz test BYTE PTR [rax],0xda
   14000c8c9:	(bad)  
   14000c8ca:	(bad)  
   14000c8cb:	add    BYTE PTR [rsi+0x5e],dh
   14000c8ce:	add    BYTE PTR ds:[rdx-0x45ff997e],bl
   14000c8d5:	stos   BYTE PTR es:[rdi],al
   14000c8d6:	xchg   esi,eax
   14000c8d7:	add    BYTE PTR [rdx+0x2e00869e],dh
   14000c8dd:	jle    0x14000c8c5
   14000c8df:	add    BYTE PTR [rsi-0x19ff6d56],bh
   14000c8e5:	loop   0x14000c8c5
   14000c8e7:	add    BYTE PTR [rsi+0x16006a86],bl
   14000c8ed:	outs   dx,BYTE PTR ds:[rsi]
   14000c8ee:	out    0x0,al
   14000c8f0:	(bad)  
   14000c8f1:	(bad)  
   14000c8f2:	mov    BYTE PTR [rax],0xaa
   14000c8f5:	retf   0xee
   14000c8f8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c8f9:	mov    ?,WORD PTR [rdx+0x0]
   14000c8fc:	xchg   edx,eax
   14000c8fd:	jp     0x14000c95d
   14000c8ff:	add    BYTE PTR [rsi-0x4dffa58a],cl
   14000c905:	movabs ds:0xaaba00f2e2da008e,al
   14000c90e:	(bad)  
   14000c90f:	add    dh,bl
   14000c911:	fcmovbe st,st(6)
   14000c913:	add    BYTE PTR [rsi-0x15ff7966],ch
   14000c919:	out    0xe6,al
   14000c91b:	add    BYTE PTR [rsi-0x49ff6d5a],dh
   14000c921:	shl    dh,cl
   14000c923:	add    dl,bl
   14000c925:	ror    dh,cl
   14000c927:	add    dl,dl
   14000c929:	loop   0x14000c921
   14000c92b:	add    dl,dl
   14000c92d:	retf   0xc2
   14000c930:	(bad)  
   14000c932:	test   BYTE PTR [rax],0x0
   14000c935:	add    BYTE PTR [rax],al
   14000c937:	add    bh,bh
   14000c939:	(bad)  
   14000c93a:	inc    DWORD PTR [rax]
	...
   14000c964:	add    bh,bh
   14000c966:	(bad)  
   14000c967:	(bad)  
   14000c968:	(bad)  
   14000c969:	(bad)  
   14000c96a:	jl     0x14000c9b3
   14000c96c:	imul   eax,DWORD PTR [rsi-0x7979797a],0x86868686
   14000c976:	xchg   BYTE PTR [rsi-0x7979797a],al
   14000c97c:	xchg   BYTE PTR [rsi-0x7979797a],al
   14000c982:	xchg   BYTE PTR [rsi-0x7979797a],al
   14000c988:	xchg   BYTE PTR [rsi-0x7979797a],al
   14000c98e:	xchg   BYTE PTR [rsi+0x69868686],al
   14000c994:	rex.RXB jl 0x14000c996
   14000c997:	(bad)  
   14000c998:	(bad)  
   14000c999:	jl     0x14000c9cf
   14000c99b:	jg     0x14000ca1c
   14000c99d:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000c9a3:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000c9a9:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000c9af:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000c9b5:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000c9bb:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000c9c1:	test   DWORD PTR [rbp+0x7c347f7f],eax
   14000c9c7:	(bad)  
   14000c9c8:	call   QWORD PTR [rbx-0x7a7a807a]
   14000c9ce:	jg     0x14000ca4f
   14000c9d0:	jg     0x14000ca51
   14000c9d2:	jg     0x14000ca53
   14000c9d4:	jg     0x14000ca55
   14000c9d6:	jg     0x14000ca57
   14000c9d8:	jg     0x14000ca59
   14000c9da:	jg     0x14000ca5b
   14000c9dc:	jg     0x14000ca5d
   14000c9de:	jg     0x14000ca5f
   14000c9e0:	jg     0x14000ca61
   14000c9e2:	jg     0x14000ca63
   14000c9e4:	jg     0x14000ca65
   14000c9e6:	jg     0x14000ca67
   14000c9e8:	jg     0x14000ca69
   14000c9ea:	jg     0x14000ca6b
   14000c9ec:	jg     0x14000ca6d
   14000c9ee:	jg     0x14000ca6f
   14000c9f0:	jg     0x14000ca71
   14000c9f2:	jg     0x14000c979
   14000c9f4:	jg     0x14000c97c
   14000c9f6:	xchg   ebx,eax
   14000c9f7:	inc    DWORD PTR [rcx+0x8]
   14000c9fa:	jg     0x14000ca7b
   14000c9fc:	jg     0x14000ca7d
   14000c9fe:	jg     0x14000ca7f
   14000ca00:	jg     0x14000ca81
   14000ca02:	jg     0x14000ca83
   14000ca04:	jg     0x14000ca85
   14000ca06:	jg     0x14000ca87
   14000ca08:	jg     0x14000ca89
   14000ca0a:	jg     0x14000ca8b
   14000ca0c:	jg     0x14000ca8d
   14000ca0e:	jg     0x14000ca8f
   14000ca10:	jg     0x14000ca91
   14000ca12:	jg     0x14000ca93
   14000ca14:	jg     0x14000ca95
   14000ca16:	jg     0x14000ca97
   14000ca18:	jg     0x14000ca99
   14000ca1a:	jg     0x14000ca9b
   14000ca1c:	jg     0x14000ca9d
   14000ca1e:	jg     0x14000ca9f
   14000ca20:	jg     0x14000caa1
   14000ca22:	jg     0x14000caa3
   14000ca24:	jg     0x14000caa5
   14000ca26:	or     BYTE PTR [rcx+0x41],al
   14000ca29:	sbb    eax,0x7f7f7f7f
   14000ca2e:	xchg   BYTE PTR [rsi+0x4c698686],al
   14000ca34:	in     al,0xb
   14000ca36:	xchg   edi,eax
   14000ca37:	rex.RB (bad) 
   14000ca39:	cmp    BYTE PTR [rcx+riz*8-0x1e1e1e1f],dh
   14000ca40:	loope  0x14000ca23
   14000ca42:	loope  0x14000ca2a
   14000ca44:	push   rdi
   14000ca45:	leave  
   14000ca46:	out    0x12,eax
   14000ca48:	rcl    DWORD PTR [rcx+rbx*2],cl
   14000ca4b:	xchg   BYTE PTR [rsi-0x7979797a],al
   14000ca51:	xchg   BYTE PTR [rsi+0x1d7f7f7f],al
   14000ca57:	sub    DWORD PTR [rip+0xffffffff86868686],ebx        # 0xc68750e4
   14000ca5e:	xchg   BYTE PTR [rsi+0x997e44c],al
   14000ca64:	push   rdi
   14000ca65:	in     al,dx
   14000ca66:	out    0xbe,al
   14000ca68:	mov    esi,0xe1e1e1be
   14000ca6d:	loope  0x14000ca50
   14000ca6f:	loope  0x14000ca52
   14000ca71:	loope  0x14000ca31
   14000ca73:	mov    esi,0x79e10fbe
   14000ca78:	push   rdi
   14000ca79:	and    ecx,DWORD PTR [rbx]
   14000ca7b:	(bad)  
   14000ca7c:	pop    rcx
   14000ca7d:	xchg   BYTE PTR [rsi-0x7979797a],al
   14000ca83:	xchg   BYTE PTR [rsi+0x29291d86],al
   14000ca89:	xor    eax,DWORD PTR [rsi+0x59868686]
   14000ca8f:	pop    rcx
   14000ca90:	(bad)  
   14000ca91:	nop    DWORD PTR [rcx+rbx*8]
   14000ca95:	in     al,dx
   14000ca96:	or     DWORD PTR [rdi+0x2d1b742c],edx
   14000ca9c:	sub    eax,0x2d2d2d2d
   14000caa1:	sbb    esp,DWORD PTR [rax+0x74]
   14000caa4:	movabs eax,ds:0x6057e1d94d0923f5
   14000caad:	adc    al,0x59
   14000caaf:	pop    rcx
   14000cab0:	pop    rcx
   14000cab1:	pop    rcx
   14000cab2:	pop    rcx
   14000cab3:	xchg   BYTE PTR [rsi-0x75d6cc7a],al
   14000cab9:	xor    ebx,DWORD PTR [rcx+0x59]
   14000cabc:	pop    rcx
   14000cabd:	pop    rcx
   14000cabe:	imul   ebp,DWORD PTR [rcx+0x40],0x6005b3be
   14000cac5:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14000cacc:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14000cad3:	imul   ebp,DWORD PTR [rcx+0x69],0xde146969
   14000cada:	cwde   
   14000cadb:	test   al,0x4d
   14000cadd:	push   rsp
   14000cade:	imul   ebp,DWORD PTR [rcx+0x69],0x59596969
   14000cae5:	pop    rcx
   14000cae6:	xor    ecx,DWORD PTR [rdx+0x6969338a]
   14000caec:	imul   ebp,DWORD PTR [rcx+0x69],0x40984c69
   14000caf3:	rex.WRB stc 
   14000caf5:	rcr    DWORD PTR [rbx],0x7a
   14000caf8:	imul   edi,DWORD PTR [rdx+0x2d],0xb26021a4
   14000caff:	(bad)  
   14000cb00:	rcl    DWORD PTR [rbp+rbp*2+0x77],0x14
   14000cb05:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14000cb0c:	xchg   edi,eax
   14000cb0d:	cwde   
   14000cb0e:	jp     0x14000cb79
   14000cb10:	imul   ebp,DWORD PTR [rcx+0x69],0x33696969
   14000cb17:	mov    dh,BYTE PTR [rbx+0x33]
   14000cb1a:	imul   ebp,DWORD PTR [rcx+0x69],0x7a7a7a69
   14000cb21:	jp     0x14000cb9d
   14000cb23:	sbb    eax,DWORD PTR [rsi+riz*2+0x1f]
   14000cb27:	faddp  st(1),st
   14000cb29:	rex.R (bad) 
   14000cb2b:	mov    edi,0xadadadad
   14000cb30:	lods   eax,DWORD PTR ds:[rsi]
   14000cb31:	sbb    al,0x43
   14000cb33:	test   al,0x1f
   14000cb35:	push   rsp
   14000cb36:	jp     0x14000cbb2
   14000cb38:	jp     0x14000cbb4
   14000cb3a:	jp     0x14000cbb6
   14000cb3c:	add    bh,BYTE PTR [rdx+0x7a]
   14000cb3f:	jp     0x14000cbbb
   14000cb41:	jp     0x14000cbbd
   14000cb43:	imul   ebp,DWORD PTR [rcx+0x69],0x95737333
   14000cb4a:	jp     0x14000cbc6
   14000cb4c:	jp     0x14000cbc8
   14000cb4e:	jp     0x14000cbca
   14000cb50:	jp     0x14000cbcc
   14000cb52:	jp     0x14000cbce
   14000cb54:	jp     0x14000cbd0
   14000cb56:	jp     0x14000cbac
   14000cb58:	shrd   DWORD PTR [rbp-0x59c72641],edi,cl
   14000cb5f:	(bad)  
   14000cb60:	es mov edi,0xa1d9adad
   14000cb66:	jp     0x14000cbe2
   14000cb68:	jp     0x14000cbe4
   14000cb6a:	jp     0x14000cbe6
   14000cb6c:	jp     0x14000cbe8
   14000cb6e:	jp     0x14000cbea
   14000cb70:	jp     0x14000cbec
   14000cb72:	jp     0x14000cbee
   14000cb74:	jp     0x14000cbf0
   14000cb76:	xchg   ebp,eax
   14000cb77:	jae    0x14000cb85
   14000cb79:	xchg   ebp,eax
   14000cb7a:	jp     0x14000cbf6
   14000cb7c:	jp     0x14000cbf8
   14000cb7e:	jp     0x14000cbfa
   14000cb80:	jp     0x14000cbfc
   14000cb82:	jp     0x14000cbfe
   14000cb84:	jp     0x14000cc00
   14000cb86:	jp     0x14000cbe8
   14000cb88:	pushf  
   14000cb89:	(bad)  
   14000cb8a:	sbb    DWORD PTR [rax+0x2df66dfd],0x70
   14000cb91:	cwde   
   14000cb92:	xchg   edi,eax
   14000cb93:	pop    rsp
   14000cb94:	sbb    edi,DWORD PTR [rdx+0x7a]
   14000cb97:	jp     0x14000cc13
   14000cb99:	jp     0x14000cc15
   14000cb9b:	jp     0x14000cc17
   14000cb9d:	jp     0x14000cc19
   14000cb9f:	jp     0x14000cc1b
   14000cba1:	jp     0x14000cc1d
   14000cba3:	jp     0x14000cc1f
   14000cba5:	jp     0x14000cb3c
   14000cba7:	or     al,0x55
   14000cba9:	xchg   ebp,eax
   14000cbaa:	jp     0x14000cc26
   14000cbac:	jp     0x14000cc28
   14000cbae:	jp     0x14000cc2a
   14000cbb0:	jp     0x14000cc2c
   14000cbb2:	jp     0x14000cc2e
   14000cbb4:	jp     0x14000cc30
   14000cbb6:	jp     0x14000cc32
   14000cbb8:	push   rsp
   14000cbb9:	sbb    edi,DWORD PTR [rdx+0x7a]
   14000cbbc:	jp     0x14000cc38
   14000cbbe:	jp     0x14000cc3a
   14000cbc0:	jp     0x14000cc3c
   14000cbc2:	jp     0x14000cc3e
   14000cbc4:	jp     0x14000cc40
   14000cbc6:	jp     0x14000cbe5
   14000cbc8:	jp     0x14000cc44
   14000cbca:	jp     0x14000cc46
   14000cbcc:	jp     0x14000cc48
   14000cbce:	jp     0x14000cc4a
   14000cbd0:	jp     0x14000cc4c
   14000cbd2:	jp     0x14000cc4e
   14000cbd4:	jp     0x14000cc50
   14000cbd6:	xchg   ebp,eax
   14000cbd7:	push   rbp
   14000cbd8:	xor    eax,0x7a7a7a95
   14000cbdd:	jp     0x14000cc48
   14000cbdf:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14000cbe6:	imul   ecx,DWORD PTR [rbx+rbx*1-0x68],0x66093b1f
   14000cbee:	or     WORD PTR [rbx],di
   14000cbf1:	movsxd edx,DWORD PTR [rdx]
   14000cbf3:	cwde   
   14000cbf4:	jo     0x14000cc35
   14000cbf6:	ja     0x14000cbee
   14000cbf8:	cwde   
   14000cbf9:	cwde   
   14000cbfa:	fisubr WORD PTR [rcx+0x69]
   14000cbfd:	imul   ebp,DWORD PTR [rcx+0x69],0x7a696969
   14000cc04:	jp     0x14000cc80
   14000cc06:	xchg   ebp,eax
   14000cc07:	xor    eax,0x6969952a
   14000cc0c:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14000cc13:	imul   ebp,DWORD PTR [rcx+0x69],0xcb363b70
   14000cc1a:	retf   
   14000cc1b:	retf   
   14000cc1c:	sbb    al,0x1c
   14000cc1e:	sbb    al,0x1c
   14000cc20:	lods   eax,DWORD PTR ds:[rsi]
   14000cc21:	retf   
   14000cc22:	retf   
   14000cc23:	retf   
   14000cc24:	repnz mov bh,0x1b
   14000cc27:	jp     0x14000cc9d
   14000cc29:	cmp    esi,DWORD PTR [rdi+0x69696912]
   14000cc2f:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14000cc36:	xchg   ebp,eax
   14000cc37:	sub    bl,BYTE PTR [rbx+0x33]
   14000cc3a:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14000cc41:	imul   ebp,DWORD PTR [rcx+0x69],0xcb636969
   14000cc48:	fnstcw WORD PTR [rbx]
   14000cc4a:	cmc    
   14000cc4b:	pop    rsp
   14000cc4c:	cwde   
   14000cc4d:	cwde   
   14000cc4e:	cwde   
   14000cc4f:	cwde   
   14000cc50:	rex.W (bad) 
   14000cc52:	(bad)  
   14000cc53:	cmp    esp,DWORD PTR [rdx]
   14000cc55:	movsxd esi,DWORD PTR [rdi+0x69]
   14000cc58:	adc    al,0x1b
   14000cc5a:	cmp    esp,eax
   14000cc5c:	cmp    esi,DWORD PTR [rdi+0x69]
   14000cc5f:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14000cc66:	xor    ebx,DWORD PTR [rbx+0x5b]
   14000cc69:	xor    ebp,DWORD PTR [rcx+0x69]
   14000cc6c:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14000cc73:	imul   ebp,DWORD PTR [rcx+0x69],0x6951f32d
   14000cc7a:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14000cc81:	imul   ebp,DWORD PTR [rcx+0x69],0x6969144c
   14000cc88:	imul   ebp,DWORD PTR [rcx+0x7a],0x1b66cb6a
   14000cc8f:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14000cc96:	xor    ebx,DWORD PTR [rbx+0x58]
   14000cc99:	xor    ebp,DWORD PTR [rcx+0x69]
   14000cc9c:	imul   ebp,DWORD PTR [rcx+0x59],0x59595959
   14000cca3:	pop    rcx
   14000cca4:	pop    rcx
   14000cca5:	pop    rcx
   14000cca6:	pop    rcx
   14000cca7:	jp     0x14000ccca
   14000cca9:	push   rsp
   14000ccaa:	push   rsp
   14000ccab:	push   rsp
   14000ccac:	push   rsp
   14000ccad:	push   rsp
   14000ccae:	push   rsp
   14000ccaf:	mov    WORD PTR [rbx],ds
   14000ccb1:	adc    al,0x59
   14000ccb3:	pop    rcx
   14000ccb4:	pop    rcx
   14000ccb5:	pop    rcx
   14000ccb6:	pop    rcx
   14000ccb7:	pop    rcx
   14000ccb8:	pop    rcx
   14000ccb9:	pop    rcx
   14000ccba:	pop    rcx
   14000ccbb:	adc    al,0x22
   14000ccbd:	lods   eax,DWORD PTR ds:[rsi]
   14000ccbe:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ccbf:	pop    rcx
   14000ccc0:	pop    rcx
   14000ccc1:	pop    rcx
   14000ccc2:	pop    rcx
   14000ccc3:	imul   ebp,DWORD PTR [rcx+0x69],0x33265833
   14000ccca:	pop    rcx
   14000cccb:	pop    rcx
   14000cccc:	pop    rcx
   14000cccd:	pop    rcx
   14000ccce:	xchg   BYTE PTR [rsi+0x2868686],al
   14000ccd4:	adc    dh,bl
   14000ccd6:	(bad)  
   14000ccd7:	rex.WRB (bad) 
   14000ccd9:	(bad)  
   14000ccdb:	(bad)  
   14000ccdd:	fstp   DWORD PTR [rcx+rbx*8-0x48843975]
   14000cce4:	repz pop rsp
   14000cce6:	std    
   14000cce7:	rex.WR xchg BYTE PTR [rsi-0x1f67797a],r8b
   14000ccee:	lods   eax,DWORD PTR ds:[rsi]
   14000ccef:	xchg   BYTE PTR [rsi+0x59598686],al
   14000ccf5:	pop    rcx
   14000ccf6:	xor    esp,DWORD PTR [rsi]
   14000ccf8:	xor    eax,DWORD PTR es:[rsi-0x7979797a]
   14000ccff:	xchg   BYTE PTR [rsi-0x1f95797a],al
   14000cd05:	lods   eax,DWORD PTR ds:[rsi]
   14000cd06:	(bad)  
   14000cd08:	cwde   
   14000cd09:	(bad)  
   14000cd0a:	cwde   
   14000cd0b:	or     ecx,DWORD PTR [rbx]
   14000cd0d:	or     ecx,edx
   14000cd0f:	(bad)  
   14000cd10:	(bad)  
   14000cd11:	nop
   14000cd12:	add    DWORD PTR [rdx+0x3b],ecx
   14000cd15:	and    ah,BYTE PTR [rsi-0x7979eb7d]
   14000cd1b:	xchg   BYTE PTR [rcx-0x79795243],ah
   14000cd21:	xchg   BYTE PTR [rsi+0x33868686],al
   14000cd27:	es rex.XB sbb eax,0x86868686
   14000cd2e:	xchg   BYTE PTR [rsi+0x1b868686],al
   14000cd34:	and    ecx,DWORD PTR [rbp+0x4d]
   14000cd37:	rex.R pop rbp
   14000cd39:	rex.WR xchg BYTE PTR [rsi-0x7979797a],r8b
   14000cd40:	or     bl,BYTE PTR [rdx]
   14000cd42:	imul   edx,DWORD PTR [rbx+rbp*8],0xf6c80277
   14000cd49:	in     al,0x2d
   14000cd4b:	cwde   
   14000cd4c:	icebp  
   14000cd4d:	sbb    al,0xf3
   14000cd4f:	xchg   BYTE PTR [rsi-0x7979797a],al
   14000cd55:	xchg   BYTE PTR [rip+0xffffffff861d1e43],bl        # 0xc61deb9e
   14000cd5b:	xchg   BYTE PTR [rsi+0x7f7f7f86],al
   14000cd61:	jg     0x14000cde2
   14000cd63:	jg     0x14000cdce
   14000cd65:	ja     0x14000ccff
   14000cd67:	(bad)  
   14000cd68:	push   rcx
   14000cd69:	je     0x14000cd4f
   14000cd6b:	jg     0x14000cdec
   14000cd6d:	jg     0x14000ccf7
   14000cd6f:	(bad)  
   14000cd70:	adc    DWORD PTR [rbp+0x7f7f1182],ebx
   14000cd76:	jg     0x14000cdf7
   14000cd78:	jp     0x14000cd12
   14000cd7a:	stc    
   14000cd7b:	(bad)  
   14000cd7c:	rex cwde 
   14000cd7e:	adc    al,0x7f
   14000cd80:	jg     0x14000ce01
   14000cd82:	jg     0x14000cd0a
   14000cd84:	xchg   BYTE PTR [rsi+0x1d4d1e1d],al
   14000cd8a:	(bad)  
   14000cd8b:	jg     0x14000ce0c
   14000cd8d:	jg     0x14000ce0e
   14000cd8f:	jg     0x14000ce10
   14000cd91:	jg     0x14000ce12
   14000cd93:	jg     0x14000ce14
   14000cd95:	jg     0x14000cd9d
   14000cd97:	pop    rcx
   14000cd98:	adc    al,0x77
   14000cd9a:	rex.WR jg 0x14000ce1c
   14000cd9d:	(bad)  
   14000cd9e:	xor    DWORD PTR [rdi+0x7e03817f],ecx
   14000cda4:	jg     0x14000ce25
   14000cda6:	jg     0x14000ce27
   14000cda8:	jg     0x14000cdbe
   14000cdaa:	sbb    ebx,DWORD PTR [rbx]
   14000cdac:	adc    al,0x7f
   14000cdae:	jg     0x14000ce2f
   14000cdb0:	jg     0x14000ce31
   14000cdb2:	jg     0x14000ce33
   14000cdb4:	jg     0x14000cdbc
   14000cdb6:	sbb    eax,0x7f1d0e4d
   14000cdbb:	jg     0x14000ce3c
   14000cdbd:	jg     0x14000ce3e
   14000cdbf:	jg     0x14000ce40
   14000cdc1:	jg     0x14000ce42
   14000cdc3:	jg     0x14000ce44
   14000cdc5:	jg     0x14000ce46
   14000cdc7:	jg     0x14000ce48
   14000cdc9:	jg     0x14000ce4a
   14000cdcb:	jg     0x14000cd78
   14000cdcd:	sub    esi,DWORD PTR [rsi+0x7f]
   14000cdd0:	jg     0x14000ce4a
   14000cdd2:	add    esp,DWORD PTR [rip+0x7f7f7f80]        # 0x1bf804d58
   14000cdd8:	jg     0x14000ce59
   14000cdda:	jg     0x14000ce5b
   14000cddc:	jg     0x14000ce5d
   14000cdde:	jg     0x14000ce5f
   14000cde0:	jg     0x14000ce61
   14000cde2:	jg     0x14000ce63
   14000cde4:	jg     0x14000ce65
   14000cde6:	sbb    eax,0x7f7a570e
   14000cdeb:	jg     0x14000ce6c
   14000cded:	jg     0x14000ce6e
   14000cdef:	jg     0x14000ce70
   14000cdf1:	jg     0x14000ce72
   14000cdf3:	jg     0x14000ce74
   14000cdf5:	jg     0x14000ce76
   14000cdf7:	jg     0x14000ce78
   14000cdf9:	jg     0x14000ce7a
   14000cdfb:	stos   DWORD PTR es:[rdi],eax
   14000cdfc:	cmp    al,0x68
   14000cdfe:	mov    al,0x7f
   14000ce00:	or     BYTE PTR [rdi+0x3],0xcf
   14000ce04:	(bad)  
   14000ce05:	jg     0x14000ce86
   14000ce07:	jg     0x14000ce88
   14000ce09:	jg     0x14000ce8a
   14000ce0b:	jg     0x14000ce8c
   14000ce0d:	jg     0x14000ce8e
   14000ce0f:	jg     0x14000ce90
   14000ce11:	jg     0x14000ce92
   14000ce13:	jg     0x14000ce94
   14000ce15:	jg     0x14000ce91
   14000ce17:	push   rdi
   14000ce18:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ce19:	jp     0x14000ce9a
   14000ce1b:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000ce21:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000ce27:	test   DWORD PTR [rbp-0x23e9ac7b],eax
   14000ce2d:	pop    QWORD PTR [rbp+0x7d7d1611]
   14000ce33:	adc    BYTE PTR [rax-0x7a7a7a7b],al
   14000ce39:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000ce3f:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000ce45:	jg     0x14000cec1
   14000ce47:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ce48:	rex jp 0x14000cdd0
   14000ce4b:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000ce51:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000ce57:	test   DWORD PTR [rbp+0x317d0d85],eax
   14000ce5d:	test   DWORD PTR [rbp+0x2e7d52ef],eax
   14000ce63:	(bad)  
   14000ce64:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000ce6a:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000ce70:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000ce76:	jp     0x14000ceb8
   14000ce78:	rex jp 0x14000ce00
   14000ce7b:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000ce81:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000ce87:	test   DWORD PTR [rbp+0x3075e98e],eax
   14000ce8d:	test   DWORD PTR [rsi-0x72adada6],ecx
   14000ce93:	push   rbx
   14000ce94:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000ce9a:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000cea0:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14000cea6:	jp     0x14000cee8
   14000cea8:	test   al,0x69
   14000ceaa:	test   DWORD PTR [rax],ebp
   14000ceac:	sub    BYTE PTR [rax],ch
   14000ceae:	sub    BYTE PTR [rax],ch
   14000ceb0:	sub    BYTE PTR [rax],ch
   14000ceb2:	sub    BYTE PTR [rax],ch
   14000ceb4:	sub    BYTE PTR [rax],ch
   14000ceb6:	sub    BYTE PTR [rax],ch
   14000ceb8:	sub    BYTE PTR [rbx-0x13],cl
   14000cebb:	jmp    0x16b4ef6fe
   14000cec0:	push   rdx
   14000cec1:	rex.WB shr BYTE PTR [r8],cl
   14000cec4:	sub    BYTE PTR [rax],ch
   14000cec6:	sub    BYTE PTR [rax],ch
   14000cec8:	sub    BYTE PTR [rax],ch
   14000ceca:	sub    BYTE PTR [rax],ch
   14000cecc:	sub    BYTE PTR [rax],ch
   14000cece:	sub    BYTE PTR [rax],ch
   14000ced0:	sub    BYTE PTR [rax],ch
   14000ced2:	sub    BYTE PTR [rax],ch
   14000ced4:	sub    BYTE PTR [rbp+0x6909a869],al
   14000ceda:	test   DWORD PTR [rax],ebp
   14000cedc:	sub    BYTE PTR [rax],ch
   14000cede:	sub    BYTE PTR [rax],ch
   14000cee0:	sub    BYTE PTR [rax],ch
   14000cee2:	sub    BYTE PTR [rax],ch
   14000cee4:	sub    BYTE PTR [rax],ch
   14000cee6:	sub    BYTE PTR [rax],ch
   14000cee8:	sub    BYTE PTR [rsi+0x2e],dl
   14000ceeb:	iret   
   14000ceec:	out    dx,eax
   14000ceed:	sub    BYTE PTR [rsi+0x289fed8d],cl
   14000cef3:	sub    BYTE PTR [rax],ch
   14000cef5:	sub    BYTE PTR [rax],ch
   14000cef7:	sub    BYTE PTR [rax],ch
   14000cef9:	sub    BYTE PTR [rax],ch
   14000cefb:	sub    BYTE PTR [rax],ch
   14000cefd:	sub    BYTE PTR [rax],ch
   14000ceff:	sub    BYTE PTR [rax],ch
   14000cf01:	sub    BYTE PTR [rax],ch
   14000cf03:	sub    BYTE PTR [rax],ch
   14000cf05:	test   DWORD PTR [rcx+0x9],ebp
   14000cf08:	leave  
   14000cf09:	imul   ebp,DWORD PTR [rax],0x28282828
   14000cf0f:	sub    BYTE PTR [rax],ch
   14000cf11:	sub    BYTE PTR [rax],ch
   14000cf13:	sub    BYTE PTR [rax],ch
   14000cf15:	sub    BYTE PTR [rax],ch
   14000cf17:	sub    BYTE PTR [rax],ch
   14000cf19:	addr32 jne 0x14000cef8
   14000cf1c:	pop    rdx
   14000cf1d:	cmp    eax,0x102eb818
   14000cf22:	(bad)  
   14000cf23:	sub    BYTE PTR [rax],ch
   14000cf25:	sub    BYTE PTR [rax],ch
   14000cf27:	sub    BYTE PTR [rax],ch
   14000cf29:	sub    BYTE PTR [rax],ch
   14000cf2b:	sub    BYTE PTR [rax],ch
   14000cf2d:	sub    BYTE PTR [rax],ch
   14000cf2f:	sub    BYTE PTR [rax],ch
   14000cf31:	sub    BYTE PTR [rax],ch
   14000cf33:	sub    BYTE PTR [rax],ch
   14000cf35:	sub    BYTE PTR [rcx-0x37],ch
   14000cf38:	call   0x16828f7a6
   14000cf3d:	sub    BYTE PTR [rax],ch
   14000cf3f:	sub    BYTE PTR [rax],ch
   14000cf41:	sub    BYTE PTR [rax],ch
   14000cf43:	sub    BYTE PTR [rax],ch
   14000cf45:	sub    BYTE PTR [rax],ch
   14000cf47:	sub    BYTE PTR [rax],ch
   14000cf49:	cmp    eax,0x9913dc16
   14000cf4e:	sub    BYTE PTR [rdx+rbx*4],ah
   14000cf51:	fdiv   QWORD PTR [rcx]
   14000cf53:	cmp    eax,0x28282828
   14000cf58:	sub    BYTE PTR [rax],ch
   14000cf5a:	sub    BYTE PTR [rax],ch
   14000cf5c:	sub    BYTE PTR [rax],ch
   14000cf5e:	sub    BYTE PTR [rax],ch
   14000cf60:	sub    BYTE PTR [rax],ch
   14000cf62:	sub    BYTE PTR [rax],ch
   14000cf64:	sub    BYTE PTR [rax],ch
   14000cf66:	imul   ebp,eax,0x282859e8
   14000cf6c:	sub    BYTE PTR [rax],ch
   14000cf6e:	sub    BYTE PTR [rax],ch
   14000cf70:	sub    BYTE PTR [rax],ch
   14000cf72:	sub    BYTE PTR [rax],ch
   14000cf74:	sub    BYTE PTR [rax],ch
   14000cf76:	sub    BYTE PTR [rax],ch
   14000cf78:	sub    BYTE PTR [rax],ch
   14000cf7a:	and    al,0xa9
   14000cf7c:	mov    cl,0x4f
   14000cf7e:	sbb    DWORD PTR [rax],ebp
   14000cf80:	addr32 (bad) 
   14000cf82:	mov    cl,0x4
   14000cf84:	sbb    BYTE PTR [rax],ch
   14000cf86:	sub    BYTE PTR [rax],ch
   14000cf88:	sub    BYTE PTR [rax],ch
   14000cf8a:	sub    BYTE PTR [rax],ch
   14000cf8c:	sub    BYTE PTR [rax],ch
   14000cf8e:	sub    BYTE PTR [rax],ch
   14000cf90:	sub    BYTE PTR [rax],ch
   14000cf92:	sub    BYTE PTR [rax],ch
   14000cf94:	sub    BYTE PTR [rax],ch
   14000cf96:	pop    rcx
   14000cf97:	call   0x155295674
   14000cf9c:	adc    eax,0x15151515
   14000cfa1:	adc    eax,0x15151515
   14000cfa6:	adc    eax,0x15151515
   14000cfab:	outs   dx,DWORD PTR ds:[rsi]
   14000cfac:	test   eax,0x15992575
   14000cfb1:	cld    
   14000cfb2:	lea    esi,[rbp+0x16]
   14000cfb5:	outs   dx,DWORD PTR ds:[rsi]
   14000cfb6:	adc    eax,0x15151515
   14000cfbb:	adc    eax,0x15151515
   14000cfc0:	adc    eax,0x15151515
   14000cfc5:	sub    BYTE PTR [rsi+0x1586c0d8],al
   14000cfcb:	adc    eax,0x15151515
   14000cfd0:	adc    eax,0x15151515
   14000cfd5:	adc    eax,0x15151515
   14000cfda:	adc    eax,0x13916f15
   14000cfdf:	rex.WB cmp dl,BYTE PTR [rip+0xffffffff9f9fc53d]        # 0xdfa09523
   14000cfe6:	push   rax
   14000cfe7:	cmp    eax,0x15151515
   14000cfec:	adc    eax,0x15151515
   14000cff1:	adc    eax,0x15151515
   14000cff6:	xchg   al,al
   14000cff8:	(bad)  
   14000cff9:	xchg   BYTE PTR [rip+0x15151515],dl        # 0x15515e514
   14000cfff:	adc    eax,0x15151515
   14000d004:	adc    eax,0x15151515
   14000d009:	adc    eax,0x92151515
   14000d00e:	xchg   esi,eax
   14000d00f:	scas   al,BYTE PTR es:[rdi]
   14000d010:	iret   
   14000d011:	cmp    dl,BYTE PTR [rip+0x4c5bb15]        # 0x144c68b2c
   14000d017:	sahf   
   14000d018:	outs   dx,DWORD PTR ds:[rsi]
   14000d019:	adc    eax,0x15151515
   14000d01e:	adc    eax,0x15151515
   14000d023:	adc    eax,0x17861515
   14000d028:	ret    0x1586
   14000d02b:	adc    eax,0x15151515
   14000d030:	adc    eax,0x15151515
   14000d035:	adc    eax,0x15151515
   14000d03a:	adc    eax,0xc7151515
   14000d03f:	cdq    
   14000d040:	fwait
   14000d041:	rex.WB push r8
   14000d043:	adc    eax,0xba921515
   14000d048:	mov    ebx,0x15151515
   14000d04d:	adc    eax,0x15151515
   14000d052:	adc    eax,0x86151515
   14000d057:	ret    0x6ea
   14000d05a:	adc    eax,0x15151515
   14000d05f:	adc    eax,0x15151515
   14000d064:	adc    eax,0x15151515
   14000d069:	adc    eax,0x15151515
   14000d06e:	adc    eax,0xa3a3a515
   14000d073:	and    BYTE PTR [rip+0x15151515],dl        # 0x15515e58e
   14000d079:	adc    eax,0x15151515
   14000d07e:	adc    eax,0x15151515
   14000d083:	adc    eax,0xea061515
   14000d088:	mov    ecx,0x1515157f
   14000d08d:	adc    eax,0x15151515
   14000d092:	adc    eax,0x15151515
   14000d097:	adc    eax,0x15151515
   14000d09c:	adc    eax,0x15151515
   14000d0a1:	rex.RX and eax,0x15156ba7
   14000d0a7:	adc    eax,0x15151515
   14000d0ac:	adc    eax,0x15151515
   14000d0b1:	adc    eax,0x15151515
   14000d0b6:	jg     0x14000d071
   14000d0b8:	lods   al,BYTE PTR ds:[rsi]
   14000d0b9:	jg     0x14000d0d0
   14000d0bb:	adc    eax,0x15151515
   14000d0c0:	adc    eax,0x15151515
   14000d0c5:	adc    eax,0x15151515
   14000d0ca:	adc    eax,0x15151515
   14000d0cf:	adc    eax,0xa3961515
   14000d0d4:	ins    BYTE PTR es:[rdi],dx
   14000d0d5:	adc    eax,0x15151515
   14000d0da:	adc    eax,0x15151515
   14000d0df:	adc    eax,0x15151515
   14000d0e4:	adc    eax,0xbcac7f15
   14000d0e9:	jg     0x14000d100
   14000d0eb:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d0f1:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d0f7:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d0fd:	mov    DWORD PTR [rcx-0x78767677],ecx
   14000d103:	lahf   
   14000d104:	(bad)  
   14000d105:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d10b:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d111:	mov    DWORD PTR [rcx+0x7f158989],ecx
   14000d117:	mov    esp,0x89897f84
   14000d11c:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d122:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d128:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d12e:	mov    DWORD PTR [rcx+0x7e728989],ecx
   14000d134:	xchg   esi,eax
   14000d135:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d13b:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d141:	mov    DWORD PTR [rcx+0x7f898989],ecx
   14000d147:	test   BYTE PTR [rsi+0x14],ch
   14000d14a:	adc    eax,0x89898989
   14000d14f:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d155:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d15b:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d161:	mov    DWORD PTR [rcx-0x76769306],ecx
   14000d167:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d16d:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d173:	mov    DWORD PTR [rcx-0x9180eb],ecx
   14000d179:	xlat   BYTE PTR ds:[rbx]
   14000d17a:	sub    BYTE PTR [rcx-0x76767677],cl
   14000d180:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d186:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d18c:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d192:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d198:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d19e:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d1a4:	mov    DWORD PTR [rip+0x39ff6ed3],edx        # 0x17a00407d
   14000d1aa:	ja     0x14000d1d4
   14000d1ac:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d1b2:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d1b8:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d1be:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d1c4:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d1ca:	mov    DWORD PTR [rcx-0x76767677],ecx
   14000d1d0:	mov    DWORD PTR [rcx+0x7f158989],ecx
   14000d1d6:	retf   0xffff
   14000d1d9:	push   QWORD PTR [rbp+0x28857fd3]
   14000d1df:	adc    eax,0x15151515
   14000d1e4:	adc    eax,0x15151515
   14000d1e9:	adc    eax,0x15151515
   14000d1ee:	adc    eax,0x15151515
   14000d1f3:	adc    eax,0x15151515
   14000d1f8:	adc    eax,0x15151515
   14000d1fd:	adc    eax,0x28151515
   14000d202:	sub    BYTE PTR [rdi-0x4a],bh
   14000d205:	retf   0xffb5
   14000d208:	(bad)  
   14000d209:	(bad)  
   14000d20a:	push   QWORD PTR [rbp-0x4a4a4a4b]
   14000d210:	mov    ch,0xb5
   14000d212:	mov    ch,0xb5
   14000d214:	mov    ch,0xb5
   14000d216:	mov    ch,0xb5
   14000d218:	mov    ch,0xb5
   14000d21a:	mov    ch,0xb5
   14000d21c:	mov    ch,0xb5
   14000d21e:	mov    ch,0xb5
   14000d220:	mov    ch,0xb5
   14000d222:	mov    ch,0xb5
   14000d224:	mov    ch,0xb5
   14000d226:	mov    ch,0xb5
   14000d228:	mov    ch,0xb5
   14000d22a:	mov    ch,0xb5
   14000d22c:	mov    ch,0xb5
   14000d22e:	mov    ch,0xb5
   14000d230:	mov    ch,0xb5
   14000d232:	mov    ch,0xb5
   14000d234:	mov    ch,0xff
   14000d236:	(bad)  
   14000d237:	jmp    rax
   14000d239:	add    BYTE PTR [rax],al
   14000d23b:	add    BYTE PTR [rax],al
   14000d23d:	(bad)  
   14000d23e:	pop    rsi
   14000d23f:	rex.WRX rol BYTE PTR [rax],0x0
   14000d243:	add    BYTE PTR [rax],al
   14000d245:	add    esp,eax
   14000d247:	add    BYTE PTR [rax+0x0],al
   14000d24d:	add    eax,eax
   14000d24f:	add    BYTE PTR [rax+0x0],al
   14000d255:	add    DWORD PTR [rax+0x0],eax
   14000d25b:	add    BYTE PTR [rax],al
   14000d25d:	add    BYTE PTR [rax+0x0],al
	...
   14000d397:	add    BYTE PTR [rax+0x0],al
   14000d39d:	add    BYTE PTR [rax],al
   14000d39f:	add    BYTE PTR [rax+0x0],al
   14000d3a5:	add    DWORD PTR [rax+0xc000],eax
   14000d3ab:	add    BYTE PTR [rax],al
   14000d3ad:	add    DWORD PTR [rax+0xe000],eax
   14000d3b3:	add    BYTE PTR [rax],al
   14000d3b5:	(bad)  
   14000d3b6:	rol    BYTE PTR [rax],0x28
   14000d3b9:	add    BYTE PTR [rax],al
   14000d3bb:	add    BYTE PTR [rax],ah
   14000d3bd:	add    BYTE PTR [rax],al
   14000d3bf:	add    BYTE PTR [rax+0x0],al
   14000d3c2:	add    BYTE PTR [rax],al
   14000d3c4:	add    DWORD PTR [rax],eax
   14000d3c6:	or     BYTE PTR [rax],al
	...
   14000d3d8:	add    BYTE PTR [rcx],al
   14000d3da:	add    BYTE PTR [rax],al
   14000d3dc:	add    BYTE PTR [rax],al
   14000d3de:	add    BYTE PTR [rax],al
   14000d3e0:	outs   dx,BYTE PTR ds:[rsi]
   14000d3e1:	pop    rdx
   14000d3e2:	cmp    al,BYTE PTR [rax]
   14000d3e4:	ret    0x9aae
   14000d3e7:	add    dh,bl
   14000d3e9:	fcmovbe st,st(2)
   14000d3eb:	add    BYTE PTR [rsi],cl
   14000d3ed:	push   0xffffffffffffffe2
   14000d3ef:	add    BYTE PTR [rdx-0x52],bh
   14000d3f2:	(bad)  
   14000d3f3:	add    BYTE PTR [rdx-0x11ff997a],bl
   14000d3f9:	out    dx,al
   14000d3fa:	(bad)  
   14000d3fb:	add    BYTE PTR [rdx-0x35ff7d66],ch
   14000d401:	ret    0xb6
   14000d404:	ror    dh,cl
   14000d406:	retf   0xce00
   14000d409:	fsubp  st(6),st
   14000d40b:	add    BYTE PTR [rdx-0x71ff6166],bl
   14000d411:	jb     0x14000d465
   14000d413:	add    dl,al
   14000d415:	mov    dh,0xaa
   14000d417:	add    BYTE PTR [rsi-0x59ff193a],ch
   14000d41d:	xchg   edx,eax
   14000d41e:	jp     0x14000d420
   14000d420:	mov    edx,0xf6008ea6
   14000d425:	cli    
   14000d426:	cli    
   14000d427:	add    dh,bl
   14000d429:	(bad)  
   14000d42b:	add    BYTE PTR [rdx],dh
   14000d42d:	(bad)  
   14000d42e:	out    0x0,al
   14000d430:	ror    dl,cl
   14000d432:	mov    esi,0xeee6de00
   14000d437:	add    BYTE PTR [rsi-0x6dff2542],ah
   14000d43d:	jle    0x14000d4a1
   14000d43f:	add    dl,al
   14000d441:	shl    dl,cl
   14000d443:	add    BYTE PTR [rsi-0x19ff916e],ch
   14000d449:	out    dx,al
   14000d44a:	test   BYTE PTR [rax],0xae
   14000d44d:	movabs ds:0x8e4600aebec6008e,al
   14000d456:	(bad)  
   14000d457:	add    BYTE PTR [rdx+0x66],bh
   14000d45a:	rex.RX add dl,r9b
   14000d45d:	mov    dh,0x9e
   14000d45f:	add    BYTE PTR [rsi],bl
   14000d461:	jbe    0x14000d449
   14000d463:	add    BYTE PTR [rsi-0x45ff1146],cl
   14000d469:	movabs ds:0x869200ea9e5e0086,al
   14000d472:	jbe    0x14000d474
   14000d474:	(bad)  
   14000d475:	(bad)  
   14000d476:	mov    esi,0xced6da00
   14000d47b:	add    dl,dl
   14000d47d:	loop   0x14000d471
   14000d47f:	add    BYTE PTR [rdx-0x5dffa586],dl
   14000d485:	(bad)  
   14000d486:	repnz add BYTE PTR [rdx-0x19ff7d6a],ah
   14000d48d:	out    0xe2,al
   14000d48f:	add    dh,dh
   14000d491:	div    dh
   14000d493:	add    BYTE PTR [rdx-0x49ff153e],ah
   14000d499:	scas   al,BYTE PTR es:[rdi]
   14000d49a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d49b:	add    dh,ah
   14000d49d:	loop   0x14000d479
   14000d49f:	add    BYTE PTR [rsi-0x2dff7562],ch
   14000d4a5:	(bad)  
   14000d4a6:	mov    dh,0x0
   14000d4a8:	ror    dl,cl
   14000d4aa:	mov    BYTE PTR [rax],0xd6
   14000d4ad:	out    0xf6,al
   14000d4af:	add    dh,al
   14000d4b1:	mov    esi,0xdada00b6
   14000d4b6:	fiadd  DWORD PTR [rax]
   14000d4b8:	mov    dh,0xa6
   14000d4ba:	xchg   esi,eax
   14000d4bb:	add    BYTE PTR [rsi+0x76006a82],dl
   14000d4c1:	(bad)  
   14000d4c3:	add    dh,al
   14000d4c5:	mov    dl,0x9a
   14000d4c7:	add    BYTE PTR [rdx],bl
   14000d4c9:	jb     0x14000d4b1
   14000d4cb:	add    BYTE PTR [rdx-0x51ff917a],bl
   14000d4d1:	sahf   
   14000d4d2:	xchg   BYTE PTR [rax],al
   14000d4d4:	mov    dh,BYTE PTR [rsi+0x5a]
   14000d4d7:	add    dl,al
   14000d4d9:	mov    edx,0xceba00aa
   14000d4de:	out    dx,al
   14000d4df:	add    dl,ah
   14000d4e1:	loop   0x14000d4c1
   14000d4e3:	add    BYTE PTR [rdx-0x76],al
   14000d4e6:	out    0x0,al
   14000d4e8:	xchg   esi,eax
   14000d4e9:	(bad)  
   14000d4ea:	data16 add BYTE PTR [rsi-0x39ff112e],dh
   14000d4f1:	mov    esi,0x6e8200b2
   14000d4f6:	push   rdx
   14000d4f7:	add    BYTE PTR [rsi],ah
   14000d4f9:	jp     0x14000d4e1
   14000d4fb:	add    BYTE PTR [rsi+0x6e00f2be],cl
   14000d501:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d502:	(bad)  
   14000d503:	add    dh,cl
   14000d505:	loop   0x14000d4fd
   14000d507:	add    BYTE PTR [rsi+0x5e],dh
   14000d50a:	rex.X add dl,bl
   14000d50d:	fcmovbe st,st(6)
   14000d50f:	add    BYTE PTR [rsi],dl
   14000d511:	outs   dx,BYTE PTR ds:[rsi]
   14000d512:	loop   0x14000d514
   14000d514:	xchg   BYTE PTR [rsi-0x1111ff12],dh
   14000d51a:	repnz add dl,cl
   14000d51d:	ret    0xba
   14000d520:	(bad)  
   14000d521:	ror    dl,cl
   14000d523:	add    BYTE PTR [rdx-0x59ff113a],ah
   14000d529:	xchg   esi,eax
   14000d52a:	jle    0x14000d52c
   14000d52c:	mov    esi,0xfe0092aa
   14000d531:	(bad)  
   14000d532:	inc    BYTE PTR [rax]
   14000d534:	(bad)  
   14000d535:	retf   0xc2
   14000d538:	loop   0x14000d520
   14000d53a:	repnz add BYTE PTR [rsi-0x11ff8972],bl
   14000d541:	repnz test BYTE PTR [rax],0x4a
   14000d545:	mov    ?,esi
   14000d547:	add    BYTE PTR [rsi+0x66],dh
   14000d54a:	rex.WRX add BYTE PTR [rsi-0x5e],r12b
   14000d54e:	(bad)  
   14000d54f:	add    dh,dl
   14000d551:	(bad)  
   14000d552:	(bad)  
   14000d553:	add    BYTE PTR [rdx-0x11ff796a],ah
   14000d559:	idiv   dh
   14000d55b:	add    dl,al
   14000d55d:	(bad)  
   14000d55e:	repnz add BYTE PTR [rdx+0x5e],dh
   14000d562:	add    BYTE PTR ds:[rdx+0x7a009eae],bh
   14000d569:	mov    dl,0xee
   14000d56b:	add    BYTE PTR [rdx-0x55ff957a],bl
   14000d571:	(bad)  
   14000d572:	xchg   BYTE PTR [rax],al
   14000d574:	ret    0xf6da
   14000d577:	add    BYTE PTR [rsi-0x45ffa98e],al
   14000d57d:	mov    dh,0xae
   14000d57f:	add    BYTE PTR [rdx-0x9ff6d5a],dh
   14000d585:	cli    
   14000d586:	inc    BYTE PTR [rax]
   14000d588:	(bad)  
   14000d589:	(bad)  
   14000d58a:	(bad)  
   14000d58b:	add    BYTE PTR [rsi-0x4dff9982],dl
   14000d591:	movabs ds:0x924a00aebece0092,al
   14000d59a:	(bad)  
   14000d59b:	add    dl,al
   14000d59d:	mov    dh,0xa6
   14000d59f:	add    BYTE PTR [rsi],ah
   14000d5a1:	jbe    0x14000d589
   14000d5a3:	add    BYTE PTR [rdx-0x61ff0d46],cl
   14000d5a9:	mov    dh,BYTE PTR [rdx+0x0]
   14000d5ac:	fcmovbe st,st(6)
   14000d5ae:	rol    BYTE PTR [rax],cl
   14000d5b0:	mov    ?,WORD PTR [rdx+0x5e]
   14000d5b3:	add    BYTE PTR [rsi-0x55ff0d36],ah
   14000d5b9:	xchg   esi,eax
   14000d5ba:	(bad)  
   14000d5bb:	add    dh,ah
   14000d5bd:	out    0xe6,al
   14000d5bf:	add    BYTE PTR [rdx-0x35ff0d3e],bl
   14000d5c5:	(bad)  
   14000d5c6:	mov    edx,0xc6ced200
   14000d5cb:	add    dh,bl
   14000d5cd:	(bad)  
   14000d5ce:	cli    
   14000d5cf:	add    dl,ah
   14000d5d1:	loop   0x14000d5b5
   14000d5d3:	add    BYTE PTR [rsi],bh
   14000d5d5:	mov    ch,dl
   14000d5d7:	add    BYTE PTR [rdx-0x29ff0d2e],dh
   14000d5dd:	loop   0x14000d5d5
   14000d5df:	add    BYTE PTR [rsi],dl
   14000d5e1:	outs   dx,BYTE PTR ds:[rsi]
   14000d5e2:	out    0x0,al
   14000d5e4:	mov    edx,0xa6009aaa
   14000d5e9:	ret    0xe6
   14000d5ec:	scas   al,BYTE PTR es:[rdi]
   14000d5ed:	retf   0xee
   14000d5f0:	(bad)  
   14000d5f1:	push   0x4e
   14000d5f3:	add    BYTE PTR [rsi+0x7e00a2b2],bh
   14000d5f9:	push   0x4a
   14000d5fb:	add    BYTE PTR [rdx],bh
   14000d5fd:	xchg   dh,ah
   14000d5ff:	add    dl,ah
   14000d601:	(bad)  
   14000d603:	add    BYTE PTR [rsi-0x59ff6956],bh
   14000d609:	xchg   edx,eax
   14000d60a:	jbe    0x14000d60c
   14000d60c:	retf   0xf6de
   14000d60f:	add    dl,dh
   14000d611:	repnz repnz add dl,ch
   14000d615:	repnz cli 
   14000d617:	add    BYTE PTR [rsi-0xdff755e],dh
   14000d61d:	idiv   dl
   14000d61f:	add    BYTE PTR [rsi+0x6600eec2],bl
   14000d625:	movabs ds:0x92a600eeeeee00ee,al
   14000d62e:	jle    0x14000d630
   14000d630:	retf   0xa2b6
   14000d633:	add    dh,al
   14000d635:	mov    dl,0x9e
   14000d637:	add    dl,al
   14000d639:	mov    edx,0xbe9600ae
   14000d63e:	repnz add dh,dl
   14000d641:	ror    dh,cl
   14000d643:	add    dh,dl
   14000d645:	retf   0xc2
   14000d648:	mov    ?,WORD PTR [rdx+0x56]
   14000d64b:	add    BYTE PTR [rsi-0x45ff0936],ah
   14000d651:	shl    dl,cl
   14000d653:	add    BYTE PTR [rdx+0x5a],dh
   14000d656:	cmp    al,BYTE PTR [rax]
   14000d658:	loop   0x14000d634
   14000d65a:	rol    BYTE PTR [rax],cl
   14000d65c:	scas   al,BYTE PTR es:[rdi]
   14000d65d:	(bad)  
   14000d65e:	(bad)  
   14000d65f:	add    dh,cl
   14000d661:	ret    0xb6
   14000d664:	(bad)  
   14000d665:	(bad)  
   14000d666:	retf   0xfa00
   14000d669:	cli    
   14000d66a:	cli    
   14000d66b:	add    dl,ah
   14000d66d:	(bad)  
   14000d66f:	add    dl,ah
   14000d671:	out    0xee,al
   14000d673:	add    BYTE PTR [rsi-0x4dff9d82],dl
   14000d679:	movabs ds:0x8e4a00aebeca008e,al
   14000d682:	(bad)  
   14000d683:	add    BYTE PTR [rdx],ah
   14000d685:	jbe    0x14000d66d
   14000d687:	add    BYTE PTR [rdx-0x21ff1146],dl
   14000d68d:	(bad)  
   14000d68e:	(bad)  
   14000d68f:	add    dh,dl
   14000d691:	loop   0x14000d685
   14000d693:	add    BYTE PTR [rsi-0x4dff7d6a],ah
   14000d699:	sahf   
   14000d69a:	mov    al,BYTE PTR [rax]
   14000d69c:	(bad)  
   14000d69e:	test   BYTE PTR [rax],0xca
   14000d6a1:	mov    esi,0x869e00b6
   14000d6a6:	outs   dx,BYTE PTR ds:[rsi]
   14000d6a7:	add    BYTE PTR [rdx-0x71ff7962],dh
   14000d6ad:	jbe    0x14000d709
   14000d6af:	add    dh,ah
   14000d6b1:	loop   0x14000d691
   14000d6b3:	add    BYTE PTR [rdx-0x35ff997e],bl
   14000d6b9:	mov    esi,0x7a2a00b2
   14000d6be:	out    0x0,al
   14000d6c0:	shl    dl,cl
   14000d6c2:	test   BYTE PTR [rax],0xde
   14000d6c5:	fcmovbe st,st(6)
   14000d6c7:	add    dh,cl
   14000d6c9:	ret    0xba
   14000d6cc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d6cd:	(bad)  
   14000d6ce:	out    dx,al
   14000d6cf:	add    BYTE PTR [rdx-0x2dff816a],ch
   14000d6d5:	retf   0xc2
   14000d6d8:	movabs ds:0x6a00f6f2f200768e,al
   14000d6e1:	movabs ds:0xaebe00fef6f200ea,al
   14000d6ea:	sahf   
   14000d6eb:	add    BYTE PTR [rsi-0x4e],bh
   14000d6ee:	out    dx,al
   14000d6ef:	add    BYTE PTR [rsi-0x41ff957a],bl
   14000d6f5:	mov    dh,0xae
   14000d6f7:	add    BYTE PTR [rsi-0x5dff6d5a],dh
   14000d6fd:	mov    dh,BYTE PTR [rdx+0x0]
   14000d700:	xchg   edx,eax
   14000d701:	jp     0x14000d761
   14000d703:	add    dl,ch
   14000d705:	out    0xe6,al
   14000d707:	add    dh,cl
   14000d709:	(bad)  
   14000d70a:	mov    edx,0xc6ced600
   14000d70f:	add    BYTE PTR [rdx-0x76],al
   14000d712:	(bad)  
   14000d713:	add    BYTE PTR [rdx],bl
   14000d715:	outs   dx,BYTE PTR ds:[rsi]
   14000d716:	out    0x0,al
	...
   14000d7e0:	(bad)  
   14000d7e1:	(bad)  
   14000d7e2:	(bad)  
	...
   14000d7fb:	add    BYTE PTR [rax],al
   14000d7fd:	(bad)  
   14000d7fe:	(bad)  
   14000d7ff:	(bad)  
   14000d800:	(bad)  
   14000d801:	(bad)  
   14000d802:	pop    rdx
   14000d803:	and    al,0x67
   14000d805:	ja     0x14000d871
   14000d807:	push   0x6a
   14000d809:	push   0x6a
   14000d80b:	push   0x6a
   14000d80d:	push   0x6a
   14000d80f:	push   0x6a
   14000d811:	push   0x6a
   14000d813:	push   0x6a
   14000d815:	push   0x6a
   14000d817:	push   0x6a
   14000d819:	push   0x77
   14000d81b:	addr32 and al,0x5a
   14000d81e:	(bad)  
   14000d81f:	(bad)  
   14000d820:	(bad)  
   14000d821:	pop    rdx
   14000d822:	cs push 0xffffffffffffff92
   14000d825:	rex.WRX mov WORD PTR [rsp+r9*4-0x73737374],cs
   14000d82d:	mov    WORD PTR [rsp+rcx*4-0x73737374],cs
   14000d834:	mov    WORD PTR [rsp+rcx*4+0x4e8c8c8c],cs
   14000d83b:	xchg   edx,eax
   14000d83c:	push   0x2e
   14000d83e:	pop    rdx
   14000d83f:	(bad)  
   14000d840:	rex.WX pop rbp
   14000d842:	sub    eax,DWORD PTR [rsi]
   14000d844:	xchg   edx,eax
   14000d845:	xchg   edx,eax
   14000d846:	xchg   edx,eax
   14000d847:	xchg   edx,eax
   14000d848:	xchg   edx,eax
   14000d849:	xchg   edx,eax
   14000d84a:	xchg   edx,eax
   14000d84b:	xchg   edx,eax
   14000d84c:	xchg   edx,eax
   14000d84d:	xchg   edx,eax
   14000d84e:	xchg   edx,eax
   14000d84f:	xchg   edx,eax
   14000d850:	xchg   edx,eax
   14000d851:	xchg   edx,eax
   14000d852:	xchg   edx,eax
   14000d853:	xchg   edx,eax
   14000d854:	xchg   edx,eax
   14000d855:	xchg   edx,eax
   14000d856:	xchg   edx,eax
   14000d857:	xchg   edx,eax
   14000d858:	xchg   edx,eax
   14000d859:	xchg   edx,eax
   14000d85a:	xchg   edx,eax
   14000d85b:	xchg   edx,eax
   14000d85c:	(bad)  
   14000d85d:	sub    ebx,DWORD PTR [rbp+0x4a]
   14000d860:	cmp    BYTE PTR [rdi+0x77],ah
   14000d863:	push   0x6a
   14000d865:	push   0x2
   14000d867:	or     BYTE PTR [rcx-0x4a3b758a],al
   14000d86d:	mov    ch,0xb5
   14000d86f:	add    eax,0xb1b5b5b5
   14000d874:	push   rdx
   14000d875:	(bad)  
   14000d876:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d877:	add    ch,BYTE PTR [rdx+0x6a]
   14000d87a:	push   0x6a
   14000d87c:	push   0x77
   14000d87e:	cmp    BYTE PTR [esi],bl
   14000d881:	pop    rsp
   14000d882:	ja     0x14000d8ee
   14000d884:	push   0x6a
   14000d886:	add    eax,0x6130b50c
   14000d88b:	or     dl,cl
   14000d88d:	retf   0xcaca
   14000d890:	retf   0xcaca
   14000d893:	(bad)  
   14000d894:	mov    BYTE PTR [rdi],0x72
   14000d897:	mov    esi,0x6a6a6ab6
   14000d89c:	push   0x77
   14000d89e:	pop    rsp
   14000d89f:	(bad)  
   14000d8a0:	xchg   BYTE PTR [rip+0x77777777],dh        # 0x1b778501d
   14000d8a6:	(bad)  
   14000d8a7:	jb     0x14000d8e5
   14000d8a9:	push   rax
   14000d8aa:	rex sub eax,DWORD PTR [rdx]
   14000d8ad:	mov    ebp,0xa12508b0
   14000d8b2:	mov    ecx,0x77777740
   14000d8b7:	outs   dx,DWORD PTR ds:[rsi]
   14000d8b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d8b9:	ja     0x14000d932
   14000d8bb:	ja     0x14000d934
   14000d8bd:	ja     0x14000d8f4
   14000d8bf:	xchg   BYTE PTR [rbp+rsi*1+0x77777777],al
   14000d8c6:	ja     0x14000d93b
   14000d8c8:	sbb    al,0x8
   14000d8ca:	and    eax,0xc28a507
   14000d8cf:	(bad)  
   14000d8d0:	mov    bl,0x28
   14000d8d2:	cmp    eax,DWORD PTR [rbp+0x77777777]
   14000d8d8:	mov    BYTE PTR [rdi+0x77],dh
   14000d8db:	ja     0x14000d954
   14000d8dd:	ja     0x14000d914
   14000d8df:	test   BYTE PTR [rbp+0x5c],al
   14000d8e2:	sub    ebp,DWORD PTR [rbx]
   14000d8e4:	sub    ebp,DWORD PTR [rbx]
   14000d8e6:	sub    ebp,DWORD PTR [rbx]
   14000d8e8:	sub    ebp,DWORD PTR [rbx]
   14000d8ea:	and    eax,0x440d0f17
   14000d8ef:	rex.R or eax,0x2b551b36
   14000d8f5:	sub    ebp,DWORD PTR [rbx]
   14000d8f7:	sub    ebp,DWORD PTR [rbx]
   14000d8f9:	sub    ebp,DWORD PTR [rbx]
   14000d8fb:	sub    ebp,DWORD PTR [rbx]
   14000d8fd:	sub    ebx,DWORD PTR [rbp+rax*2+0x66]
   14000d901:	pop    rsp
   14000d902:	sub    ebp,DWORD PTR [rbx]
   14000d904:	sub    ebp,DWORD PTR [rbx]
   14000d906:	sub    ebp,DWORD PTR [rbx]
   14000d908:	sub    ebp,DWORD PTR [rbx]
   14000d90a:	jl     0x14000d940
   14000d90c:	or     BYTE PTR [rip+0x73554f3e],r9b        # 0x1b3562851
   14000d913:	rex
   14000d914:	rex jp 0x14000d920
   14000d917:	sub    ebp,DWORD PTR [rbx]
   14000d919:	sub    ebp,DWORD PTR [rbx]
   14000d91b:	sub    ebp,DWORD PTR [rbx]
   14000d91d:	sub    ebx,DWORD PTR [rsi+riz*2+0x3d]
   14000d921:	pop    rsp
   14000d922:	ja     0x14000d99b
   14000d924:	ja     0x14000d99d
   14000d926:	ja     0x14000d99f
   14000d928:	ja     0x14000d975
   14000d92a:	ins    BYTE PTR es:[rdi],dx
   14000d92b:	jb     0x14000d96f
   14000d92d:	imul   ebp,DWORD PTR [rbx+0x42],0x37
   14000d931:	(bad)  
   14000d932:	(bad)  
   14000d933:	lods   eax,DWORD PTR ds:[rsi]
   14000d934:	cwde   
   14000d935:	push   rbp
   14000d936:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d937:	ss rex.WXB ja 0x14000d9b2
   14000d93b:	ja     0x14000d9b4
   14000d93d:	ja     0x14000d99b
   14000d93f:	cmp    eax,0x77773574
   14000d944:	ja     0x14000d9bd
   14000d946:	ja     0x14000d9bf
   14000d948:	ja     0x14000d995
   14000d94a:	push   rdi
   14000d94b:	push   rdx
   14000d94c:	and    eax,0x32262632
   14000d951:	rex.WRXB or rax,0xffffffffbd77121c
   14000d957:	cmp    esi,DWORD PTR [rdx+0x77]
   14000d95a:	ja     0x14000d9d3
   14000d95c:	ja     0x14000d9d5
   14000d95e:	xor    eax,0x6a351774
   14000d963:	push   0x6a
   14000d965:	push   0x6a
   14000d967:	ja     0x14000d9a9
   14000d969:	jae    0x14000d978
   14000d96b:	test   DWORD PTR [rip+0x31084f79],esp        # 0x1710928ea
   14000d971:	cdq    
   14000d972:	jae    0x14000d8fc
   14000d974:	sub    ebp,DWORD PTR [rdx+0x6a]
   14000d977:	jp     0x14000d92c
   14000d979:	push   0x6a
   14000d97b:	push   0x6a
   14000d97d:	push   0x35
   14000d97f:	(bad)  
   14000d980:	(bad)  
   14000d981:	adc    ch,BYTE PTR [rdx+0x6a]
   14000d984:	push   0x6a
   14000d986:	push   0x73
   14000d988:	mov    esi,0x68683bc8
   14000d98d:	sbb    esp,DWORD PTR [rdx]
   14000d98f:	sbb    ecx,DWORD PTR [rbx]
   14000d991:	sub    bl,BYTE PTR [rcx]
   14000d993:	cmp    al,0xd
   14000d995:	mov    BYTE PTR [rdx+0x6a],ch
   14000d998:	cmp    ebp,DWORD PTR [rdx+0x6a]
   14000d99b:	push   0x6a
   14000d99d:	push   0x12
   14000d99f:	(bad)  
   14000d9a0:	(bad)  
   14000d9a1:	adc    ch,BYTE PTR [rdx+0x6a]
   14000d9a4:	push   0x6a
   14000d9a6:	push   0x40
   14000d9a8:	ss jb  0x14000d9db
   14000d9ab:	or     BYTE PTR [rdx],al
   14000d9ad:	rex (bad) 
   14000d9af:	mov    ah,0xe
   14000d9b1:	(bad)  
   14000d9b2:	sahf   
   14000d9b3:	add    dl,BYTE PTR [rax+0x50]
   14000d9b6:	and    eax,0x6a6a2864
   14000d9bb:	push   0x6a
   14000d9bd:	push   0x12
   14000d9bf:	(bad)  
   14000d9c0:	cmp    edx,DWORD PTR [rdx]
   14000d9c2:	(bad)  
   14000d9c3:	xchg   edx,eax
   14000d9c4:	xchg   edx,eax
   14000d9c5:	xchg   edx,eax
   14000d9c6:	xchg   edx,eax
   14000d9c7:	(bad)  
   14000d9c8:	push   0x40
   14000d9ca:	mov    ebp,0x3f922f14
   14000d9cf:	sub    eax,0x92821d0a
   14000d9d4:	(bad)  
   14000d9d5:	sub    esp,DWORD PTR [rip+0xffffffff92924f61]        # 0xd293293c
   14000d9db:	xchg   edx,eax
   14000d9dc:	xchg   edx,eax
   14000d9dd:	(bad)  
   14000d9de:	adc    bh,BYTE PTR [rbx]
   14000d9e0:	jb     0x14000d9f4
   14000d9e2:	xchg   edx,eax
   14000d9e3:	xchg   edx,eax
   14000d9e4:	xchg   edx,eax
   14000d9e5:	xchg   edx,eax
   14000d9e6:	xchg   edx,eax
   14000d9e7:	xchg   edx,eax
   14000d9e8:	xchg   edx,eax
   14000d9e9:	xchg   edx,eax
   14000d9ea:	xchg   edx,eax
   14000d9eb:	(bad)  
   14000d9ec:	xchg   edx,eax
   14000d9ed:	sbb    BYTE PTR [rcx-0x7d],bl
   14000d9f0:	adc    eax,0x92a487b7
   14000d9f5:	xchg   edx,eax
   14000d9f6:	xchg   edx,eax
   14000d9f7:	(bad)  
   14000d9f8:	xchg   edx,eax
   14000d9f9:	xchg   edx,eax
   14000d9fa:	xchg   edx,eax
   14000d9fb:	xchg   edx,eax
   14000d9fc:	xchg   edx,eax
   14000d9fd:	xchg   edx,eax
   14000d9fe:	adc    dh,BYTE PTR [rdx-0x42]
   14000da01:	jl     0x14000d995
   14000da03:	rex.WRX
   14000da04:	rex.WRX
   14000da05:	rex.WRX
   14000da06:	rex.WRX
   14000da07:	rex.WRX
   14000da08:	rex.WRX
   14000da09:	rex.WRX
   14000da0a:	rex.WRX
   14000da0b:	rex.WRX lods al,BYTE PTR ds:[rsi]
   14000da0d:	jge    0x14000da13
   14000da0f:	rex.WRX pop rbx
   14000da11:	add    eax,DWORD PTR [rcx+0x56]
   14000da14:	rex.WRX
   14000da15:	rex.WRX
   14000da16:	rex.WRX
   14000da17:	rex.WRX
   14000da18:	rex.WRX
   14000da19:	rex.WRX
   14000da1a:	rex.WRX
   14000da1b:	rex.WRX
   14000da1c:	rex.WRX xchg rdx,rax
   14000da1e:	jl     0x14000d9de
   14000da20:	(bad)  
   14000da22:	mov    WORD PTR [rsp+rcx*4-0x73737374],cs
   14000da29:	mov    WORD PTR [rsi+rcx*2+0x4327135b],cs
   14000da30:	cmp    cl,BYTE PTR [rcx+rdx*2-0x74]
   14000da34:	mov    WORD PTR [rsp+rcx*4-0x73737374],cs
   14000da3b:	mov    WORD PTR [rsp+rcx*4+0x2bbc0f7c],cs
   14000da42:	mov    WORD PTR [rsp+rcx*4-0x73737374],cs
   14000da49:	mov    WORD PTR [rdi+rbx*2+0x4d8c5b70],cs
   14000da50:	rex.WR
   14000da51:	rex.W
   14000da52:	rex.WRX mov WORD PTR [rsp+r9*4-0x73737374],cs
   14000da5a:	mov    WORD PTR [rsp+rcx*4+0x7bc2b8c],cs
   14000da61:	ja     0x14000da8f
   14000da63:	sub    al,0x2c
   14000da65:	sub    al,0x2c
   14000da67:	sub    al,0x2c
   14000da69:	sub    al,0x2c
   14000da6b:	pushf  
   14000da6c:	and    BYTE PTR [rip+0xffffffff904c51bf],bl        # 0xd04d2c31
   14000da72:	sub    al,0x2c
   14000da74:	sub    al,0x2c
   14000da76:	sub    al,0x2c
   14000da78:	sub    al,0x2c
   14000da7a:	sub    al,0x2c
   14000da7c:	sub    al,0x2c
   14000da7e:	ja     0x14000da87
   14000da80:	cmp    al,0x77
   14000da82:	sub    al,0x2c
   14000da84:	sub    al,0x2c
   14000da86:	sub    al,0x2c
   14000da88:	sub    al,0x2c
   14000da8a:	sub    al,0x1a
   14000da8c:	and    ecx,ebp
   14000da8e:	and    DWORD PTR [rax+0x1d],ebx
   14000da91:	jge    0x14000daba
   14000da93:	sub    al,0x2c
   14000da95:	sub    al,0x2c
   14000da97:	sub    al,0x2c
   14000da99:	sub    al,0x2c
   14000da9b:	sub    al,0x2c
   14000da9d:	sub    al,0x77
   14000da9f:	cmp    al,0xb2
   14000daa1:	push   0x2c
   14000daa3:	sub    al,0x2c
   14000daa5:	sub    al,0x2c
   14000daa7:	sub    al,0x2c
   14000daa9:	sub    al,0x2c
   14000daab:	sub    al,0x27
   14000daad:	outs   dx,BYTE PTR ds:[rsi]
   14000daae:	test   eax,0x6e6e3329
   14000dab3:	jle    0x14000dae1
   14000dab5:	sub    al,0x2c
   14000dab7:	sub    al,0x2c
   14000dab9:	sub    al,0x2c
   14000dabb:	sub    al,0x2c
   14000dabd:	sub    al,0x6a
   14000dabf:	mov    dl,0x8e
   14000dac1:	push   0x2c
   14000dac3:	adc    DWORD PTR [rcx],edx
   14000dac5:	adc    DWORD PTR [rcx],edx
   14000dac7:	adc    DWORD PTR [rcx],edx
   14000dac9:	adc    DWORD PTR [rcx],edx
   14000dacb:	adc    DWORD PTR [rcx],edx
   14000dacd:	scas   eax,DWORD PTR es:[rdi]
   14000dace:	and    eax,DWORD PTR [rsi+0x21]
   14000dad1:	jg     0x14000db35
   14000dad3:	xchg   ecx,eax
   14000dad4:	xchg   edi,eax
   14000dad5:	scas   eax,DWORD PTR es:[rdi]
   14000dad6:	adc    DWORD PTR [rcx],edx
   14000dad8:	adc    DWORD PTR [rcx],edx
   14000dada:	adc    DWORD PTR [rcx],edx
   14000dadc:	adc    DWORD PTR [rdx+rbp*2],ebp
   14000dadf:	mov    ss,WORD PTR [rax]
   14000dae1:	push   0xffffffffffffffa2
   14000dae3:	movabs ds:0xa2a2a2a2a2a2a2a2,al
   14000daec:	movabs ds:0x758ba271b7c38da2,al
   14000daf5:	adc    QWORD PTR [r10-0x5d5d5d5e],rsp
   14000dafc:	movabs ds:0xa2a2a20653106aa2,al
   14000db05:	movabs ds:0xa2a2a2a2a2a2a2a2,al
   14000db0e:	movabs ds:0xa28fa2a2657d4711,al
   14000db17:	movabs ds:0x5306a2a2a2a2a2a2,al
   14000db20:	mov    DWORD PTR [rsi],eax
   14000db22:	movabs ds:0x5454545454545454,al
   14000db2b:	push   rsp
   14000db2c:	push   rsp
   14000db2d:	push   rsp
   14000db2e:	push   rsp
   14000db2f:	push   rsp
   14000db30:	adc    DWORD PTR [rax+0x71],edi
   14000db33:	(bad)  
   14000db34:	push   rsp
   14000db35:	push   rsp
   14000db36:	push   rsp
   14000db37:	push   rsp
   14000db38:	push   rsp
   14000db39:	push   rsp
   14000db3a:	push   rsp
   14000db3b:	push   rsp
   14000db3c:	push   rsp
   14000db3d:	movabs ds:0x5454541102018906,al
   14000db46:	push   rsp
   14000db47:	push   rsp
   14000db48:	push   rsp
   14000db49:	push   rsp
   14000db4a:	push   rsp
   14000db4b:	push   rsp
   14000db4c:	push   rsp
   14000db4d:	push   rsp
   14000db4e:	push   rsp
   14000db4f:	push   rsp
   14000db50:	push   rsp
   14000db51:	(bad)  
   14000db52:	fwait
   14000db53:	pop    rsi
   14000db54:	push   rsp
   14000db55:	push   rsp
   14000db56:	push   rsp
   14000db57:	push   rsp
   14000db58:	push   rsp
   14000db59:	push   rsp
   14000db5a:	push   rsp
   14000db5b:	push   rsp
   14000db5c:	push   rsp
   14000db5d:	adc    DWORD PTR [rdx],eax
   14000db5f:	add    DWORD PTR [rcx],eax
   14000db61:	adc    al,0x8c
   14000db63:	push   rsp
   14000db64:	push   rsp
   14000db65:	push   rsp
   14000db66:	push   rsp
   14000db67:	push   rsp
   14000db68:	push   rsp
   14000db69:	push   rsp
   14000db6a:	push   rsp
   14000db6b:	push   rsp
   14000db6c:	push   rsp
   14000db6d:	push   rsp
   14000db6e:	push   rsp
   14000db6f:	push   rsp
   14000db70:	push   rsp
   14000db71:	push   rsp
   14000db72:	jnp    0x14000dbdd
   14000db74:	push   rsp
   14000db75:	push   rsp
   14000db76:	push   rsp
   14000db77:	push   rsp
   14000db78:	push   rsp
   14000db79:	push   rsp
   14000db7a:	push   rsp
   14000db7b:	push   rsp
   14000db7c:	push   rsp
   14000db7d:	mov    WORD PTR [rcx+rax*1],ss
   14000db80:	(bad)  
   14000db81:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000db82:	stos   DWORD PTR es:[rdi],eax
   14000db83:	sub    al,0xa2
   14000db85:	push   rsp
   14000db86:	push   rsp
   14000db87:	push   rsp
   14000db88:	push   rsp
   14000db89:	push   rsp
   14000db8a:	push   rsp
   14000db8b:	push   rsp
   14000db8c:	push   rsp
   14000db8d:	push   rsp
   14000db8e:	push   rsp
   14000db8f:	push   rsp
   14000db90:	push   rsp
   14000db91:	push   rsp
   14000db92:	push   rsp
   14000db93:	push   rsp
   14000db94:	push   rsp
   14000db95:	push   rsp
   14000db96:	push   rsp
   14000db97:	push   rsp
   14000db98:	push   rsp
   14000db99:	push   rsp
   14000db9a:	push   rsp
   14000db9b:	movabs ds:0x996dcececea7ab2c,al
   14000dba4:	mov    BYTE PTR [rsp+rbp*1+0x2c2c2c2c],cl
   14000dbab:	sub    al,0x2c
   14000dbad:	sub    al,0x2c
   14000dbaf:	sub    al,0x2c
   14000dbb1:	sub    al,0x2c
   14000dbb3:	sub    al,0x2c
   14000dbb5:	sub    al,0x2c
   14000dbb7:	sub    al,0x2c
   14000dbb9:	sub    al,0x8c
   14000dbbb:	mov    BYTE PTR [rcx-0x31313193],bl
   14000dbc1:	(bad)  
   14000dbc2:	(bad)  
   14000dbc3:	xchg   esp,eax
   14000dbc4:	xchg   esp,eax
   14000dbc5:	xchg   esp,eax
   14000dbc6:	xchg   esp,eax
   14000dbc7:	xchg   esp,eax
   14000dbc8:	xchg   esp,eax
   14000dbc9:	xchg   esp,eax
   14000dbca:	xchg   esp,eax
   14000dbcb:	xchg   esp,eax
   14000dbcc:	xchg   esp,eax
   14000dbcd:	xchg   esp,eax
   14000dbce:	xchg   esp,eax
   14000dbcf:	xchg   esp,eax
   14000dbd0:	xchg   esp,eax
   14000dbd1:	xchg   esp,eax
   14000dbd2:	xchg   esp,eax
   14000dbd3:	xchg   esp,eax
   14000dbd4:	xchg   esp,eax
   14000dbd5:	xchg   esp,eax
   14000dbd6:	xchg   esp,eax
   14000dbd7:	xchg   esp,eax
   14000dbd8:	xchg   esp,eax
   14000dbd9:	xchg   esp,eax
   14000dbda:	xchg   esp,eax
   14000dbdb:	xchg   esp,eax
   14000dbdc:	xchg   esp,eax
   14000dbdd:	(bad)  
   14000dbde:	(bad)  
   14000dbdf:	(bad)  
   14000dbe0:	loopne 0x14000dbe2
   14000dbe2:	add    BYTE PTR [rdi],al
   14000dbe4:	rol    BYTE PTR [rax],0x0
   14000dbe7:	add    eax,DWORD PTR [rax+0x10000]
	...
   14000dc51:	add    BYTE PTR [rax],al
   14000dc53:	add    BYTE PTR [rax-0x3fff0000],al
   14000dc59:	add    BYTE PTR [rax],al
   14000dc5b:	add    esp,eax
   14000dc5d:	add    BYTE PTR [rax],al
   14000dc5f:	(bad)  
   14000dc60:	sub    BYTE PTR [rax],al
   14000dc62:	add    BYTE PTR [rax],al
   14000dc64:	sbb    BYTE PTR [rax],al
   14000dc66:	add    BYTE PTR [rax],al
   14000dc68:	xor    BYTE PTR [rax],al
   14000dc6a:	add    BYTE PTR [rax],al
   14000dc6c:	add    DWORD PTR [rax],eax
   14000dc6e:	or     BYTE PTR [rax],al
	...
   14000dc80:	add    BYTE PTR [rcx],al
   14000dc82:	add    BYTE PTR [rax],al
   14000dc84:	add    BYTE PTR [rax],al
   14000dc86:	add    BYTE PTR [rax],al
   14000dc88:	jb     0x14000dce4
   14000dc8a:	cmp    al,BYTE PTR [rax]
   14000dc8c:	ret    0x96ae
   14000dc8f:	add    BYTE PTR [rdx-0x25ff6556],bh
   14000dc95:	fcmovu st,st(2)
   14000dc97:	add    BYTE PTR [rdx-0x7dff997a],bl
   14000dc9d:	scas   al,BYTE PTR es:[rdi]
   14000dc9e:	loop   0x14000dca0
   14000dca0:	scas   al,BYTE PTR es:[rdi]
   14000dca1:	(bad)  
   14000dca2:	jle    0x14000dca4
   14000dca4:	xchg   BYTE PTR [rdx+0x56],dh
   14000dca7:	add    dl,al
   14000dca9:	mov    edx,0x7e1600ae
   14000dcae:	(bad)  
   14000dcaf:	add    dh,ch
   14000dcb1:	out    dx,al
   14000dcb2:	out    dx,al
   14000dcb3:	add    dh,cl
   14000dcb5:	retf   0xc6
   14000dcb8:	pop    rdx
   14000dcb9:	sahf   
   14000dcba:	(bad)  
   14000dcbb:	add    BYTE PTR [rsi-0x45ff896e],ah
   14000dcc1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000dcc2:	mov    es,WORD PTR [rax]
   14000dcc4:	xchg   esi,eax
   14000dcc5:	jle    0x14000dd25
   14000dcc7:	add    BYTE PTR [rsi-0x69ff594e],bh
   14000dccd:	mov    edx,0xe6e600e2
   14000dcd2:	out    0x0,al
   14000dcd4:	scas   al,BYTE PTR es:[rdi]
   14000dcd5:	sahf   
   14000dcd6:	mov    al,BYTE PTR [rax]
   14000dcd8:	cs mov ch,dl
   14000dcdb:	add    BYTE PTR [rdx-0x69ff897a],dl
   14000dce1:	jle    0x14000dd49
   14000dce3:	add    BYTE PTR [rdx+0x7a00eebe],dl
   14000dce9:	data16 rex.RX add dl,r8b
   14000dced:	mov    edx,0xdac600aa
   14000dcf2:	repnz add BYTE PTR [rsi-0x35ff9176],bl
   14000dcf9:	mov    dl,0x0
   14000dcfc:	cli    
   14000dcfd:	cli    
   14000dcfe:	cli    
   14000dcff:	add    BYTE PTR [rdx-0x41ffa17e],bl
   14000dd05:	mov    dh,0xaa
   14000dd07:	add    BYTE PTR [rsi],bh
   14000dd09:	xchg   edx,eax
   14000dd0a:	out    dx,al
   14000dd0b:	add    BYTE PTR [rdx-0x1dff6152],bh
   14000dd11:	loop   0x14000dcf1
   14000dd13:	add    BYTE PTR [rsi-0x6dff7966],ch
   14000dd19:	jp     0x14000dd75
   14000dd1b:	add    BYTE PTR [rsi-0x5a],ch
   14000dd1e:	loop   0x14000dd20
   14000dd20:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000dd21:	xchg   esi,eax
   14000dd22:	jle    0x14000dd24
   14000dd24:	mov    ?,WORD PTR [rdx-0x5d49ff16]
   14000dd2a:	mov    al,BYTE PTR [rax]
   14000dd2c:	ds mov fs,esi
   14000dd2f:	add    BYTE PTR [rsi+0x62],dh
   14000dd32:	rex.X add BYTE PTR [rdx-0x79ff957a],bl
   14000dd39:	mov    dh,0xea
   14000dd3b:	add    BYTE PTR [rdx],ah
   14000dd3d:	(bad)  
   14000dd3e:	(bad)  
   14000dd3f:	add    dh,dh
   14000dd41:	div    dh
   14000dd43:	add    dh,dl
   14000dd45:	(bad)  
   14000dd46:	(bad)  
   14000dd47:	add    BYTE PTR [rsi-0x41ff856e],ah
   14000dd4d:	stos   BYTE PTR es:[rdi],al
   14000dd4e:	xchg   edx,eax
   14000dd4f:	add    BYTE PTR [rsi-0x15ff594a],bh
   14000dd55:	(bad)  
   14000dd56:	(bad)  
   14000dd57:	add    BYTE PTR [rsi-0x7dff113e],dl
   14000dd5d:	outs   dx,BYTE PTR ds:[rsi]
   14000dd5e:	rex.WRX add dl,r10b
   14000dd61:	retf   0xbe
   14000dd64:	(bad)  
   14000dd65:	(bad)  
   14000dd66:	(bad)  
   14000dd67:	add    BYTE PTR [rsi+0x7200869e],ch
   14000dd6d:	stos   BYTE PTR es:[rdi],al
   14000dd6e:	out    0x0,al
   14000dd70:	jb     0x14000ddd0
   14000dd72:	ds add dl,al
   14000dd75:	mov    dl,0x9a
   14000dd77:	add    dh,bl
   14000dd79:	(bad)  
   14000dd7b:	add    BYTE PTR [rdx-0x39ffa58a],cl
   14000dd81:	ret    0xba
   14000dd84:	(bad)  
   14000dd85:	jle    0x14000dd71
   14000dd87:	add    dl,dh
   14000dd89:	repnz repnz add dl,dl
   14000dd8d:	(bad)  
   14000dd8e:	mov    BYTE PTR [rax],0xb2
   14000dd91:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000dd92:	xchg   edx,eax
   14000dd93:	add    BYTE PTR [rdx-0x69ff9d82],bl
   14000dd99:	mov    esi,0x9eb200e6
   14000dd9e:	mov    al,BYTE PTR [rax]
   14000dda0:	ss mov ch,dl
   14000dda3:	add    BYTE PTR [rdx-0x65ff8972],ah
   14000dda9:	(bad)  
   14000ddaa:	data16 add BYTE PTR [rdx+0x7e00f2be],dl
   14000ddb1:	push   0x4a
   14000ddb3:	add    BYTE PTR [rdx-0x1ff9176],ah
   14000ddb9:	(bad)  
   14000ddba:	inc    BYTE PTR [rax]
   14000ddbc:	ret    0xaab6
   14000ddbf:	add    dh,al
   14000ddc1:	mov    dl,0x9e
   14000ddc3:	add    dl,ah
   14000ddc5:	loop   0x14000dda9
   14000ddc7:	add    BYTE PTR [rsi-0x65ffa186],cl
   14000ddcd:	mov    esi,0xa2b200ea
   14000ddd2:	mov    es,WORD PTR [rax]
   14000ddd4:	cmp    cl,BYTE PTR [rsi-0x7961ff16]
   14000ddda:	push   0x0
   14000dddc:	xchg   BYTE PTR [rsi-0x6d55ff12],dh
   14000dde2:	jp     0x14000dde4
   14000dde4:	retf   0xa2b6
   14000dde7:	add    dh,ch
   14000dde9:	(bad)  
   14000ddea:	(bad)  
   14000ddeb:	add    dh,cl
   14000dded:	retf   0xc2
   14000ddf0:	sahf   
   14000ddf1:	(bad)  
   14000ddf2:	(bad)  
   14000ddf3:	add    BYTE PTR [rdx+0x7600869e],dh
   14000ddf9:	stos   BYTE PTR es:[rdi],al
   14000ddfa:	out    0x0,al
	...
   14000e088:	pop    rbp
   14000e089:	pop    rbp
   14000e08a:	pop    rbp
   14000e08b:	pop    rbp
   14000e08c:	pop    rbp
   14000e08d:	pop    rbp
   14000e08e:	pop    rbp
   14000e08f:	pop    rbp
   14000e090:	pop    rbp
   14000e091:	pop    rbp
   14000e092:	pop    rbp
   14000e093:	pop    rbp
   14000e094:	pop    rbp
   14000e095:	pop    rbp
   14000e096:	pop    rbp
   14000e097:	pop    rbp
   14000e098:	pop    rbp
   14000e099:	pop    rbp
   14000e09a:	pop    rbp
   14000e09b:	pop    rbp
   14000e09c:	pop    rbp
   14000e09d:	pop    rbp
   14000e09e:	pop    rbp
   14000e09f:	pop    rbp
   14000e0a0:	pop    rbp
	...
   14000e0b5:	add    BYTE PTR [rax],al
   14000e0b7:	pop    rbp
   14000e0b8:	cmp    dl,BYTE PTR [rip+0x1212123e]        # 0x15212f2fc
   14000e0be:	adc    dl,BYTE PTR [rdx]
   14000e0c0:	adc    dl,BYTE PTR [rdx]
   14000e0c2:	adc    dl,BYTE PTR [rdx]
   14000e0c4:	adc    dl,BYTE PTR [rdx]
   14000e0c6:	adc    dl,BYTE PTR [rdx]
   14000e0c8:	adc    dl,BYTE PTR [rdx]
   14000e0ca:	adc    dl,BYTE PTR [rdx]
   14000e0cc:	adc    bh,BYTE PTR [rsi]
   14000e0ce:	adc    eax,0x331c2a3a
   14000e0d3:	or     cl,BYTE PTR [rdx]
   14000e0d5:	or     cl,BYTE PTR [rdx]
   14000e0d7:	or     cl,BYTE PTR [rdx]
   14000e0d9:	or     cl,BYTE PTR [rdx]
   14000e0db:	or     cl,BYTE PTR [rdx]
   14000e0dd:	or     cl,BYTE PTR [rdx]
   14000e0df:	or     cl,BYTE PTR [rdx]
   14000e0e1:	or     cl,BYTE PTR [rdx]
   14000e0e3:	or     cl,BYTE PTR [rdx]
   14000e0e5:	xor    ebx,DWORD PTR [rdx+rbp*1]
   14000e0e8:	sbb    BYTE PTR [rbx],al
   14000e0ea:	xor    esi,DWORD PTR [rbx]
   14000e0ec:	xor    edx,DWORD PTR [rdx]
   14000e0ee:	adc    dl,BYTE PTR [rdx]
   14000e0f0:	adc    dl,BYTE PTR [rdx]
   14000e0f2:	adc    dl,BYTE PTR [rdx]
   14000e0f4:	adc    dl,BYTE PTR [rdx]
   14000e0f6:	adc    dl,BYTE PTR [rdx]
   14000e0f8:	adc    dh,BYTE PTR [rbx]
   14000e0fa:	xor    esi,DWORD PTR [rbx]
   14000e0fc:	xor    esi,DWORD PTR [rbx]
   14000e0fe:	add    ebx,DWORD PTR [rax]
   14000e100:	rex.WX add rdx,QWORD PTR [rdx]
   14000e103:	adc    cl,BYTE PTR [rdi+0x4d]
   14000e106:	xor    BYTE PTR [rdi],dh
   14000e108:	(bad)  
   14000e109:	(bad)  
   14000e10a:	(bad)  
   14000e10b:	(bad)  
   14000e10c:	(bad)  
   14000e10d:	(bad)  
   14000e10e:	(bad)  
   14000e10f:	xor    BYTE PTR [rbp+0x4f],cl
   14000e112:	adc    dl,BYTE PTR [rdx]
   14000e114:	adc    dl,BYTE PTR [rdx]
   14000e116:	add    ecx,DWORD PTR [rdx+0x35]
   14000e119:	(bad)  
   14000e11a:	adc    bh,BYTE PTR [rax+rdx*1]
   14000e11d:	push   rsp
   14000e11e:	and    ebx,DWORD PTR [rdi]
   14000e120:	(bad)  
   14000e121:	(bad)  
   14000e122:	(bad)  
   14000e123:	(bad)  
   14000e124:	(bad)  
   14000e125:	add    ebx,DWORD PTR [rdi]
   14000e127:	and    edx,DWORD PTR [rax+rdx*1+0x3c]
   14000e12b:	adc    dl,BYTE PTR [rdx]
   14000e12d:	adc    ch,BYTE PTR [rdi]
   14000e12f:	xor    eax,0x4f122f07
   14000e134:	add    eax,DWORD PTR [rbx]
   14000e136:	add    ebp,DWORD PTR [rdi]
   14000e138:	es (bad) 
   14000e13a:	and    al,0x24
   14000e13c:	rex.W (bad) 
   14000e13e:	(bad)  
   14000e13f:	(bad)  
   14000e140:	add    eax,DWORD PTR [rbx]
   14000e142:	rex.WRXB adc r10b,BYTE PTR [r10]
   14000e145:	adc    ch,BYTE PTR [rdi]
   14000e147:	(bad)  
   14000e148:	cmp    eax,0x4f121203
   14000e14d:	rex.WRXB cmp al,0x3
   14000e150:	push   rdx
   14000e151:	(bad)  
   14000e152:	(bad)  
   14000e153:	(bad)  
   14000e154:	sbb    al,0xb
   14000e156:	and    edx,DWORD PTR [rax]
   14000e158:	add    esp,DWORD PTR [rdx]
   14000e15a:	adc    dl,BYTE PTR [rdx]
   14000e15c:	adc    dl,BYTE PTR [rdx]
   14000e15e:	add    edi,DWORD PTR [rip+0x12120350]        # 0x15212e4b4
   14000e164:	adc    dl,BYTE PTR [rdx]
   14000e166:	cmp    al,0xd
   14000e168:	add    al,0x24
   14000e16a:	(bad)  
   14000e16b:	(bad)  
   14000e16c:	and    al,0x4
   14000e16e:	add    ecx,DWORD PTR [rdi]
   14000e170:	and    esp,DWORD PTR [rdx]
   14000e172:	adc    dl,BYTE PTR [rdx]
   14000e174:	adc    dl,BYTE PTR [rdx]
   14000e176:	add    edx,DWORD PTR [rax+0x16]
   14000e179:	add    esi,DWORD PTR [rbx]
   14000e17b:	xor    esi,DWORD PTR [rbx]
   14000e17d:	rex.WRXB and r8b,BYTE PTR [r10+0x8]
   14000e181:	(bad)  
   14000e182:	(bad)  
   14000e183:	add    eax,DWORD PTR [rbx]
   14000e185:	or     eax,DWORD PTR [rcx+0x3]
   14000e188:	movlps QWORD PTR [rdi+0x12],xmm1
   14000e18c:	xor    esi,DWORD PTR [rbx]
   14000e18e:	add    edx,DWORD PTR [rsi]
   14000e190:	sub    edi,DWORD PTR [rdx+rcx*1]
   14000e193:	or     dh,BYTE PTR [rbx]
   14000e195:	adc    cl,BYTE PTR [rbx+0xf]
   14000e198:	andps  xmm2,XMMWORD PTR [rsp+rdx*2+0xf]
   14000e19d:	push   rsp
   14000e19e:	add    bh,BYTE PTR [rdi+rcx*1]
   14000e1a1:	adc    edx,DWORD PTR [rdx]
   14000e1a3:	xor    ecx,DWORD PTR [rdx]
   14000e1a5:	or     bh,BYTE PTR [rbx+rbp*1]
   14000e1a8:	sbb    esp,DWORD PTR [rdx]
   14000e1aa:	or     cl,BYTE PTR [rdx]
   14000e1ac:	or     dl,BYTE PTR [rdx]
   14000e1ae:	adc    ah,BYTE PTR [rcx]
   14000e1b0:	sbb    DWORD PTR [rcx+rdx*1],edi
   14000e1b3:	add    eax,0xd4f4f25
   14000e1b8:	push   rdx
   14000e1b9:	adc    dh,BYTE PTR [rbx]
   14000e1bb:	or     cl,BYTE PTR [rdx]
   14000e1bd:	or     ah,BYTE PTR [rdx]
   14000e1bf:	sbb    eax,DWORD PTR [rdi+0x4f]
   14000e1c2:	rex
   14000e1c3:	or     cl,BYTE PTR [rdx]
   14000e1c6:	xor    edx,DWORD PTR [rdx]
   14000e1c8:	adc    bh,BYTE PTR [rcx]
   14000e1ca:	rex.RX sub DWORD PTR [rcx],r15d
   14000e1cd:	adc    dl,BYTE PTR [rdx]
   14000e1cf:	adc    dl,BYTE PTR [rdx]
   14000e1d1:	xor    ecx,DWORD PTR [rdx]
   14000e1d3:	or     al,BYTE PTR [rax+0x40]
   14000e1d6:	rex.WRXB
   14000e1d7:	rex.RXB xor BYTE PTR [r15+0x40],r9b
   14000e1db:	rex
   14000e1dc:	rex
   14000e1dd:	or     cl,BYTE PTR [rdx]
   14000e1e0:	adc    dl,BYTE PTR [rbx+0x5c]
   14000e1e3:	or     DWORD PTR [rdx],edx
   14000e1e5:	adc    cl,BYTE PTR [rdx]
   14000e1e7:	or     cl,BYTE PTR [rdx]
   14000e1e9:	or     al,BYTE PTR [rax+0x40]
   14000e1ec:	rex
   14000e1ed:	rex
   14000e1ee:	rex.WRXB xor BYTE PTR [r14],r8b
   14000e1f1:	adc    ch,BYTE PTR [rsi]
   14000e1f3:	cs cs cs rex xor edi,DWORD PTR cs:[rdi]
   14000e1fa:	or     al,0x44
   14000e1fc:	(bad)  
   14000e1fd:	xor    ecx,DWORD PTR [rdx]
   14000e1ff:	rex
   14000e200:	cs cs cs cs cs adc al,BYTE PTR cs:[rsi]
   14000e208:	and    edx,DWORD PTR [rdx]
   14000e20a:	cs cs cs cs cs or dl,BYTE PTR cs:[rcx+0x2d]
   14000e213:	adc    ch,BYTE PTR [rsp+rdx*1]
   14000e216:	xor    al,0x40
   14000e218:	cs cs cs cs cs adc ah,BYTE PTR cs:[rbx]
   14000e220:	sub    BYTE PTR [rbx],dh
   14000e222:	sbb    eax,0x1d1d1d1d
   14000e227:	sbb    eax,0x14270a2e
   14000e22c:	xor    ebp,DWORD PTR [rax+rax*2]
   14000e22f:	cs sbb eax,0x1d1d1d1d
   14000e235:	sbb    eax,0x330e2833
   14000e23a:	sbb    eax,0x1d1d1d1d
   14000e23f:	sbb    eax,0x170a2e1d
   14000e244:	and    BYTE PTR [rax+0x2e],al
   14000e247:	sbb    eax,0x1d1d1d1d
   14000e24c:	sbb    eax,0x310e331d
   14000e251:	or     bl,BYTE PTR [rip+0x1d1d1d1d]        # 0x15d1dff74
   14000e257:	sbb    eax,0x1a2e1d1d
   14000e25c:	(bad)  
   14000e25d:	cs sbb eax,0x1d1d1d1d
   14000e263:	sbb    eax,0x310a1d1d
   14000e268:	add    DWORD PTR [rdx],ecx
   14000e26a:	sbb    eax,0x4c4c4c4c
   14000e26f:	rex.WR
   14000e270:	rex.WR
   14000e271:	rex.WR sbb rax,0x1d1d2e2e
   14000e277:	rex.WR
   14000e278:	rex.WR
   14000e279:	rex.WR
   14000e27a:	rex.WR
   14000e27b:	rex.WR
   14000e27c:	rex.WR sbb rax,0x223b010a
   14000e282:	sbb    eax,0x4c4c4c4c
   14000e287:	rex.WR
   14000e288:	rex.WR
   14000e289:	rex.WR
   14000e28a:	rex.WR
   14000e28b:	rex.WR sbb rax,0x4c4c4c4c
   14000e291:	rex.WR
   14000e292:	rex.WR
   14000e293:	rex.WR
   14000e294:	rex.WR sbb rax,0x364e3b22
   14000e29a:	pop    rax
   14000e29b:	sbb    eax,0x1d1d1d1d
   14000e2a0:	sbb    eax,0x1d1d1d1d
   14000e2a5:	sbb    eax,0x1d1d1d1d
   14000e2aa:	sbb    eax,0x36581d1d
   14000e2af:	rex.WRX pop rbp
   14000e2b1:	push   rdi
   14000e2b2:	push   rdi
   14000e2b3:	push   rdi
   14000e2b4:	push   rdi
   14000e2b5:	push   rdi
   14000e2b6:	push   rdi
   14000e2b7:	push   rdi
   14000e2b8:	push   rdi
   14000e2b9:	push   rdi
   14000e2ba:	push   rdi
   14000e2bb:	push   rdi
   14000e2bc:	push   rdi
   14000e2bd:	push   rdi
   14000e2be:	push   rdi
   14000e2bf:	push   rdi
   14000e2c0:	push   rdi
   14000e2c1:	push   rdi
   14000e2c2:	push   rdi
   14000e2c3:	push   rdi
   14000e2c4:	push   rdi
   14000e2c5:	push   rdi
   14000e2c6:	push   rdi
   14000e2c7:	pop    rbp
   14000e2c8:	(bad)  
   14000e2c9:	(bad)  
   14000e2ca:	(bad)  
   14000e2cb:	inc    DWORD PTR [rax+0xff0100]
   14000e2d1:	add    BYTE PTR [rax],al
   14000e2d3:	add    BYTE PTR [rax],0x0
	...
   14000e322:	add    BYTE PTR [rax],al
   14000e324:	add    BYTE PTR [rax],0x1
   14000e327:	add    BYTE PTR [rax],ch
   14000e329:	add    BYTE PTR [rax],al
   14000e32b:	add    BYTE PTR [rax],dl
   14000e32d:	add    BYTE PTR [rax],al
   14000e32f:	add    BYTE PTR [rax],ah
   14000e331:	add    BYTE PTR [rax],al
   14000e333:	add    BYTE PTR [rcx],al
   14000e335:	add    BYTE PTR [rax],cl
	...
   14000e347:	add    BYTE PTR [rax],al
   14000e349:	add    DWORD PTR [rax],eax
   14000e34b:	add    BYTE PTR [rax],al
   14000e34d:	add    BYTE PTR [rax],al
   14000e34f:	add    BYTE PTR [rdx+0x5e],dh
   14000e352:	ds add dh,al
   14000e355:	mov    dl,0x9a
   14000e357:	add    BYTE PTR [rsi],cl
   14000e359:	jbe    0x14000e345
   14000e35b:	add    dh,bl
   14000e35d:	fcmovbe st,st(6)
   14000e35f:	add    BYTE PTR [rsi-0x6dff9172],ah
   14000e365:	jp     0x14000e3c1
   14000e367:	add    BYTE PTR [rdx-0x11ff1d4e],al
   14000e36d:	out    dx,al
   14000e36e:	out    dx,al
   14000e36f:	add    BYTE PTR [rsi-0x45ff795e],dh
   14000e375:	scas   al,BYTE PTR es:[rdi]
   14000e376:	(bad)  
   14000e377:	add    dh,al
   14000e379:	(bad)  
   14000e37b:	add    BYTE PTR [rsi+0x26006682],dl
   14000e381:	xchg   dl,ch
   14000e383:	add    BYTE PTR [rsi-0x29ff7d66],ch
   14000e389:	(bad)  
   14000e38a:	(bad)  
   14000e38b:	add    BYTE PTR [rsi-0x7dff554e],dh
   14000e391:	outs   dx,BYTE PTR ds:[rsi]
   14000e392:	rex.WRX add dl,r12b
   14000e395:	loop   0x14000e379
   14000e397:	add    BYTE PTR [rdx-0x5ff1546],cl
   14000e39d:	cli    
   14000e39e:	cli    
   14000e39f:	add    BYTE PTR [rdx],bl
   14000e3a1:	jle    0x14000e38d
   14000e3a3:	add    dh,bl
   14000e3a5:	(bad)  
   14000e3a7:	add    BYTE PTR [rdx-0x69ff856a],ch
   14000e3ad:	jle    0x14000e40d
   14000e3af:	add    BYTE PTR [rsi-0x65ff6952],bh
   14000e3b5:	xchg   BYTE PTR [rsi+0x0],ch
   14000e3b8:	(bad)  
   14000e3b9:	mov    esi,0x667e00b2
   14000e3be:	rex.WX add dl,bl
   14000e3c1:	fcmovu st,st(2)
   14000e3c3:	add    BYTE PTR [rdx-0x71ff8972],ah
   14000e3c9:	jp     0x14000e429
   14000e3cb:	add    dh,dh
   14000e3cd:	div    dh
   14000e3cf:	add    BYTE PTR [rdx-0x19ff6d5a],bh
   14000e3d5:	out    0xe6,al
   14000e3d7:	add    BYTE PTR [rdx+0x3a006686],bl
   14000e3dd:	mov    gs,esi
   14000e3df:	add    BYTE PTR [rsi-0x69ff7562],ch
   14000e3e5:	mov    esi,0x627600ea
   14000e3ea:	rex.X add dl,cl
   14000e3ed:	mov    dh,0x9e
   14000e3ef:	add    BYTE PTR [rdx],dl
   14000e3f1:	jp     0x14000e3dd
   14000e3f3:	add    BYTE PTR [rsi-0x7dffa586],dl
   14000e3f9:	mov    dh,0xea
   14000e3fb:	add    dl,dh
   14000e3fd:	repnz repnz add BYTE PTR [rsi+0x32008aa2],dh
   14000e405:	mov    ch,dl
   14000e407:	add    BYTE PTR [rsi-0x45ff7962],ch
   14000e40d:	shr    dl,cl
   14000e40f:	add    dh,al
   14000e411:	mov    edx,0x728600aa
   14000e416:	push   rsi
   14000e417:	add    BYTE PTR [rsi-0x1ff1146],cl
   14000e41d:	(bad)  
   14000e41e:	inc    BYTE PTR [rax]
   14000e420:	es (bad) 
   14000e422:	out    0x0,al
   14000e424:	retf   0xb6c2
   14000e427:	add    dh,bl
   14000e429:	fcmovu st,st(2)
   14000e42b:	add    BYTE PTR [rsi-0x15ff896e],ah
   14000e431:	(bad)  
   14000e432:	(bad)  
   14000e433:	add    BYTE PTR [rsi+0x6a86],bl
	...
   14000e74d:	add    BYTE PTR [rax],al
   14000e74f:	add    BYTE PTR [rdx],bh
	...
   14000e75d:	add    BYTE PTR [rax],al
   14000e75f:	cmp    ah,BYTE PTR [rsi]
   14000e761:	mov    rcx,db4
   14000e764:	and    DWORD PTR [rcx],esp
   14000e766:	and    DWORD PTR [rcx],esp
   14000e768:	and    DWORD PTR [rcx],esp
   14000e76a:	and    DWORD PTR [rcx],esp
   14000e76c:	and    DWORD PTR [rax],edi
   14000e76e:	(bad)  
   14000e770:	sbb    edx,DWORD PTR [rip+0x4083021]        # 0x144091797
   14000e776:	add    al,0x4
   14000e778:	add    al,0x4
   14000e77a:	add    al,0x4
   14000e77c:	cmp    BYTE PTR [rdi],al
   14000e77e:	adc    eax,0x211c101b
   14000e783:	adc    eax,0x1c1c1c15
   14000e788:	sbb    al,0x1c
   14000e78a:	sbb    al,0x1c
   14000e78c:	and    DWORD PTR [rcx],esp
   14000e78e:	sbb    al,0x10
   14000e790:	xor    DWORD PTR [rsi],ecx
   14000e792:	adc    DWORD PTR [rcx],edx
   14000e794:	adc    DWORD PTR [rdx],esp
   14000e796:	add    eax,0x11220505
   14000e79b:	(bad)  
   14000e79c:	adc    DWORD PTR cs:[rsi],ecx
   14000e79f:	xor    DWORD PTR [rsi],ebx
   14000e7a1:	sbb    al,0x21
   14000e7a3:	adc    DWORD PTR [rcx],edx
   14000e7a5:	xor    eax,0x1a1a3535
   14000e7aa:	add    ecx,DWORD PTR [rsi]
   14000e7ac:	(bad)  
   14000e7ad:	and    al,0xe
   14000e7af:	(bad)  
   14000e7b0:	or     edx,DWORD PTR [rip+0x17052138]        # 0x1570608ee
   14000e7b6:	cmp    DWORD PTR [rcx],ebp
   14000e7b8:	add    eax,0x5210939
   14000e7bd:	and    al,0xe
   14000e7bf:	or     ebx,DWORD PTR [rcx]
   14000e7c1:	adc    eax,0x15153807
   14000e7c6:	adc    eax,0x11150634
   14000e7cb:	(bad)  
   14000e7cc:	and    al,0x11
   14000e7ce:	adc    eax,0x7111d19
   14000e7d3:	(bad)  
   14000e7d4:	(bad)  
   14000e7d5:	(bad)  
   14000e7d6:	sub    eax,0x7070211
   14000e7db:	adc    DWORD PTR [rcx],esp
   14000e7dd:	(bad)  
   14000e7de:	adc    DWORD PTR [rip+0x2b2b1116],ebx        # 0x16b2bf8fa
   14000e7e4:	sub    eax,DWORD PTR [rdi]
   14000e7e6:	sub    BYTE PTR [rdi],al
   14000e7e8:	sub    BYTE PTR [rax],ch
   14000e7ea:	(bad)  
   14000e7eb:	(bad)  
   14000e7ec:	sub    ebp,DWORD PTR [rbx]
   14000e7ee:	adc    DWORD PTR [rsi],edx
   14000e7f0:	or     eax,0x1f1f1f21
   14000e7f5:	sub    esp,DWORD PTR [rip+0xc2a2114]        # 0x14c2b090f
   14000e7fb:	sub    ebx,DWORD PTR [rdi]
   14000e7fd:	(bad)  
   14000e7fe:	and    DWORD PTR [rip+0x1313382c],ecx        # 0x153142030
   14000e804:	adc    edx,DWORD PTR [rbx]
   14000e806:	(bad)  
   14000e807:	adc    cl,BYTE PTR [rdi+rax*1]
   14000e80a:	(bad)  
   14000e80b:	(bad)  
   14000e80c:	adc    edx,DWORD PTR [rbx]
   14000e80e:	cmp    BYTE PTR [rax+riz*1],ch
   14000e811:	(bad)  
   14000e812:	adc    edx,DWORD PTR [rbx]
   14000e814:	adc    edx,DWORD PTR [rbx]
   14000e816:	adc    ebp,DWORD PTR [rbx]
   14000e818:	xor    ah,BYTE PTR [rbx]
   14000e81a:	(bad)  
   14000e81b:	adc    edx,DWORD PTR [rbx]
   14000e81d:	adc    eax,DWORD PTR [rdi]
   14000e81f:	and    BYTE PTR [rax],bl
   14000e821:	(bad)  
   14000e822:	adc    esi,DWORD PTR [rbx]
   14000e824:	xor    esi,DWORD PTR [rbx]
   14000e826:	xor    edx,DWORD PTR [rbx]
   14000e828:	(bad)  
   14000e829:	or     dl,BYTE PTR [rbx]
   14000e82b:	xor    esi,DWORD PTR [rbx]
   14000e82d:	adc    eax,DWORD PTR [rdi]
   14000e82f:	sbb    BYTE PTR [rcx],al
   14000e831:	add    ebx,DWORD PTR [rdi]
   14000e833:	(bad)  
   14000e834:	(bad)  
   14000e835:	(bad)  
   14000e836:	(bad)  
   14000e837:	(bad)  
   14000e838:	(bad)  
   14000e839:	(bad)  
   14000e83a:	(bad)  
   14000e83b:	(bad)  
   14000e83c:	(bad)  
   14000e83d:	(bad)  
   14000e83e:	add    eax,DWORD PTR [rcx]
   14000e840:	cmp    ah,BYTE PTR [rdi]
   14000e842:	(bad)  
   14000e843:	(bad)  
   14000e844:	(bad)  
   14000e845:	(bad)  
   14000e846:	(bad)  
   14000e847:	(bad)  
   14000e848:	(bad)  
   14000e849:	(bad)  
   14000e84a:	(bad)  
   14000e84b:	(bad)  
   14000e84c:	(bad)  
   14000e84d:	(bad)  
   14000e84e:	(bad)  
   14000e84f:	cmp    al,BYTE PTR [rax+0xb6aa01]
   14000e855:	add    BYTE PTR [rax+0x1],al
	...
   14000e88b:	add    BYTE PTR [rax+0x28000001],al
   14000e891:	add    BYTE PTR [rax],al
   14000e893:	add    BYTE PTR [rax],dh
   14000e895:	add    BYTE PTR [rax],al
   14000e897:	add    BYTE PTR [rax+0x0],ah
   14000e89a:	add    BYTE PTR [rax],al
   14000e89c:	add    DWORD PTR [rax],eax
   14000e89e:	and    BYTE PTR [rax],al
	...
   14000e8c0:	ins    DWORD PTR es:[rdi],dx
   14000e8c1:	push   rdi
   14000e8c2:	(bad)  
   14000e8c3:	xor    ebp,DWORD PTR [rbp+0x57]
   14000e8c6:	(bad)  
   14000e8c7:	xchg   esi,eax
   14000e8c8:	ins    DWORD PTR es:[rdi],dx
   14000e8c9:	push   rdi
   14000e8ca:	(bad)  
   14000e8cb:	jmp    FWORD PTR [rbp+0x57]
   14000e8ce:	(bad)  
   14000e8cf:	jmp    FWORD PTR [rbp+0x57]
   14000e8d2:	(bad)  
   14000e8d3:	jmp    FWORD PTR [rbp+0x57]
   14000e8d6:	(bad)  
   14000e8d7:	jmp    FWORD PTR [rbp+0x57]
   14000e8da:	(bad)  
   14000e8db:	jmp    FWORD PTR [rbp+0x57]
   14000e8de:	(bad)  
   14000e8df:	jmp    FWORD PTR [rbp+0x57]
   14000e8e2:	(bad)  
   14000e8e3:	jmp    FWORD PTR [rbp+0x57]
   14000e8e6:	(bad)  
   14000e8e7:	jmp    FWORD PTR [rbp+0x57]
   14000e8ea:	(bad)  
   14000e8eb:	jmp    FWORD PTR [rbp+0x57]
   14000e8ee:	(bad)  
   14000e8ef:	jmp    FWORD PTR [rbp+0x57]
   14000e8f2:	(bad)  
   14000e8f3:	jmp    FWORD PTR [rbp+0x57]
   14000e8f6:	(bad)  
   14000e8f7:	jmp    FWORD PTR [rbp+0x57]
   14000e8fa:	(bad)  
   14000e8fb:	jmp    FWORD PTR [rbp+0x57]
   14000e8fe:	(bad)  
   14000e8ff:	jmp    FWORD PTR [rbp+0x57]
   14000e902:	(bad)  
   14000e903:	jmp    FWORD PTR [rbp+0x57]
   14000e906:	(bad)  
   14000e907:	jmp    FWORD PTR [rbp+0x57]
   14000e90a:	(bad)  
   14000e90b:	jmp    FWORD PTR [rbp+0x57]
   14000e90e:	(bad)  
   14000e90f:	jmp    FWORD PTR [rbp+0x57]
   14000e912:	(bad)  
   14000e913:	jmp    FWORD PTR [rbp+0x57]
   14000e916:	(bad)  
   14000e917:	jmp    FWORD PTR [rbp+0x57]
   14000e91a:	(bad)  
   14000e91b:	jmp    FWORD PTR [rbp+0x57]
   14000e91e:	(bad)  
   14000e91f:	jmp    FWORD PTR [rbp+0x57]
   14000e922:	(bad)  
   14000e923:	jmp    FWORD PTR [rbp+0x57]
   14000e926:	(bad)  
   14000e927:	jmp    FWORD PTR [rbp+0x57]
   14000e92a:	(bad)  
   14000e92b:	jmp    FWORD PTR [rbp+0x57]
   14000e92e:	(bad)  
   14000e92f:	jmp    FWORD PTR [rbp+0x57]
   14000e932:	(bad)  
   14000e933:	jmp    FWORD PTR [rbp+0x57]
   14000e936:	(bad)  
   14000e937:	jmp    FWORD PTR [rbp+0x57]
   14000e93a:	(bad)  
   14000e93b:	jmp    FWORD PTR [rbp+0x57]
   14000e93e:	(bad)  
   14000e93f:	jmp    FWORD PTR [rbp+0x57]
   14000e942:	(bad)  
   14000e943:	jmp    FWORD PTR [rbp+0x57]
   14000e946:	(bad)  
   14000e947:	jmp    FWORD PTR [rbp+0x57]
   14000e94a:	(bad)  
   14000e94b:	jmp    FWORD PTR [rbp+0x57]
   14000e94e:	(bad)  
   14000e94f:	jmp    FWORD PTR [rbp+0x57]
   14000e952:	(bad)  
   14000e953:	jmp    FWORD PTR [rbp+0x57]
   14000e956:	(bad)  
   14000e957:	jmp    FWORD PTR [rbp+0x57]
   14000e95a:	(bad)  
   14000e95b:	jmp    FWORD PTR [rbp+0x57]
   14000e95e:	(bad)  
   14000e95f:	jmp    FWORD PTR [rbp+0x57]
   14000e962:	(bad)  
   14000e963:	jmp    FWORD PTR [rbp+0x57]
   14000e966:	(bad)  
   14000e967:	jmp    FWORD PTR [rbp+0x57]
   14000e96a:	(bad)  
   14000e96b:	xchg   esi,eax
   14000e96c:	ins    DWORD PTR es:[rdi],dx
   14000e96d:	push   rdi
   14000e96e:	(bad)  
   14000e96f:	xor    eax,DWORD PTR [rax]
	...
   14000e979:	add    BYTE PTR [rax],al
   14000e97b:	add    BYTE PTR [rsi+0x58],ch
   14000e97e:	cmp    DWORD PTR [rsi+0x6f],esp
   14000e981:	pop    rcx
   14000e982:	cmp    bh,ah
   14000e984:	xchg   edi,eax
   14000e985:	mov    es,WORD PTR [rcx-0x1a1a1a01]
   14000e98b:	(bad)  
   14000e98c:	jmp    0x12a00d37a
   14000e991:	jmp    0x129eae97f
   14000e996:	jmp    0x129ead39a
   14000e99b:	(bad)  
   14000e99c:	jmp    0x12a00d38a
   14000e9a1:	jmp    0x129eae98f
   14000e9a6:	jmp    0x129ead3aa
   14000e9ab:	(bad)  
   14000e9ac:	jmp    0x12a00d39a
   14000e9b1:	jmp    0x129eae99f
   14000e9b6:	jmp    0x129ead3ba
   14000e9bb:	(bad)  
   14000e9bc:	jmp    0x12a00d3aa
   14000e9c1:	jmp    0x129eae9af
   14000e9c6:	jmp    0x129ead3ca
   14000e9cb:	(bad)  
   14000e9cc:	jmp    0x12a00d3ba
   14000e9d1:	jmp    0x129eae9bf
   14000e9d6:	jmp    0x129ead3da
   14000e9db:	(bad)  
   14000e9dc:	jmp    0x12a00d3ca
   14000e9e1:	jmp    0x129eae9cf
   14000e9e6:	jmp    0x129ead3ea
   14000e9eb:	(bad)  
   14000e9ec:	jmp    0x12a00d3da
   14000e9f1:	jmp    0x129eae9df
   14000e9f6:	jmp    0x129ead3fa
   14000e9fb:	(bad)  
   14000e9fc:	jmp    0x12a00d3ea
   14000ea01:	jmp    0x129eae9ef
   14000ea06:	jmp    0x129ead40a
   14000ea0b:	(bad)  
   14000ea0c:	jmp    0x12a00d3fa
   14000ea11:	jmp    0x129eae9ff
   14000ea16:	jmp    0x129ead41a
   14000ea1b:	(bad)  
   14000ea1c:	jmp    0x12a00d40a
   14000ea21:	jmp    0x126e7ea0f
   14000ea26:	out    0xff,al
   14000ea28:	xchg   edi,eax
   14000ea29:	mov    es,WORD PTR [rcx+0x3a596fff]
   14000ea2f:	cld    
   14000ea30:	outs   dx,BYTE PTR ds:[rsi]
   14000ea31:	pop    rax
   14000ea32:	cmp    DWORD PTR [rsi+0x0],esp
   14000ea35:	add    BYTE PTR [rax],al
   14000ea37:	add    BYTE PTR [rax+0x5a],dh
   14000ea3a:	cmp    ah,BYTE PTR [rcx]
   14000ea3c:	jno    0x14000ea99
   14000ea3e:	cmp    edi,ecx
   14000ea40:	(bad)  
   14000ea41:	sar    BYTE PTR [rdx-0x12121201],0xff
   14000ea48:	lock lock lock push rcx
   14000ea4d:	icebp  
   14000ea4e:	icebp  
   14000ea4f:	push   rcx
   14000ea51:	icebp  
   14000ea52:	icebp  
   14000ea53:	push   rcx
   14000ea55:	icebp  
   14000ea56:	icebp  
   14000ea57:	push   rcx
   14000ea59:	icebp  
   14000ea5a:	icebp  
   14000ea5b:	push   rcx
   14000ea5d:	icebp  
   14000ea5e:	icebp  
   14000ea5f:	push   rcx
   14000ea61:	icebp  
   14000ea62:	icebp  
   14000ea63:	push   rcx
   14000ea65:	icebp  
   14000ea66:	icebp  
   14000ea67:	push   rcx
   14000ea69:	icebp  
   14000ea6a:	icebp  
   14000ea6b:	push   rcx
   14000ea6d:	icebp  
   14000ea6e:	icebp  
   14000ea6f:	push   rcx
   14000ea71:	icebp  
   14000ea72:	icebp  
   14000ea73:	push   rcx
   14000ea75:	icebp  
   14000ea76:	icebp  
   14000ea77:	push   rcx
   14000ea79:	icebp  
   14000ea7a:	icebp  
   14000ea7b:	push   rcx
   14000ea7d:	icebp  
   14000ea7e:	icebp  
   14000ea7f:	push   rcx
   14000ea81:	icebp  
   14000ea82:	icebp  
   14000ea83:	push   rcx
   14000ea85:	icebp  
   14000ea86:	icebp  
   14000ea87:	push   rcx
   14000ea89:	icebp  
   14000ea8a:	icebp  
   14000ea8b:	push   rcx
   14000ea8d:	icebp  
   14000ea8e:	icebp  
   14000ea8f:	push   rcx
   14000ea91:	icebp  
   14000ea92:	icebp  
   14000ea93:	push   rcx
   14000ea95:	icebp  
   14000ea96:	icebp  
   14000ea97:	push   rcx
   14000ea99:	icebp  
   14000ea9a:	icebp  
   14000ea9b:	push   rcx
   14000ea9d:	icebp  
   14000ea9e:	icebp  
   14000ea9f:	push   rcx
   14000eaa1:	icebp  
   14000eaa2:	icebp  
   14000eaa3:	push   rcx
   14000eaa5:	icebp  
   14000eaa6:	icebp  
   14000eaa7:	push   rcx
   14000eaa9:	icebp  
   14000eaaa:	icebp  
   14000eaab:	push   rcx
   14000eaad:	icebp  
   14000eaae:	icebp  
   14000eaaf:	push   rcx
   14000eab1:	icebp  
   14000eab2:	icebp  
   14000eab3:	push   rcx
   14000eab5:	icebp  
   14000eab6:	icebp  
   14000eab7:	push   rcx
   14000eab9:	icebp  
   14000eaba:	icebp  
   14000eabb:	push   rcx
   14000eabd:	icebp  
   14000eabe:	icebp  
   14000eabf:	push   rcx
   14000eac1:	icebp  
   14000eac2:	icebp  
   14000eac3:	push   rcx
   14000eac5:	icebp  
   14000eac6:	icebp  
   14000eac7:	push   rcx
   14000eac9:	icebp  
   14000eaca:	icebp  
   14000eacb:	push   rcx
   14000eacd:	icebp  
   14000eace:	icebp  
   14000eacf:	push   rcx
   14000ead1:	icebp  
   14000ead2:	icebp  
   14000ead3:	push   rcx
   14000ead5:	icebp  
   14000ead6:	icebp  
   14000ead7:	push   rcx
   14000ead9:	icebp  
   14000eada:	icebp  
   14000eadb:	push   rcx
   14000eadd:	icebp  
   14000eade:	icebp  
   14000eadf:	push   rcx
   14000eae1:	icebp  
   14000eae2:	icebp  
   14000eae3:	push   rax
   14000eae5:	lock lock (bad) 
   14000eae8:	in     eax,dx
   14000eae9:	in     eax,dx
   14000eaea:	in     eax,dx
   14000eaeb:	inc    esp
   14000eaed:	sar    BYTE PTR [rdx+0x3b5b71ff],0xf9
   14000eaf4:	jo     0x14000eb50
   14000eaf6:	cmp    ah,BYTE PTR [rcx]
   14000eaf8:	jno    0x14000eb55
   14000eafa:	cmp    al,0x78
   14000eafc:	fwait
   14000eafd:	nop
   14000eafe:	jg     0x14000eaff
   14000eb00:	(bad)  
   14000eb01:	(bad)  
   14000eb02:	(bad)  
   14000eb03:	push   rax
   14000eb05:	lock lock push rcx
   14000eb09:	icebp  
   14000eb0a:	icebp  
   14000eb0b:	push   rcx
   14000eb0d:	icebp  
   14000eb0e:	icebp  
   14000eb0f:	push   rax
   14000eb11:	lock lock push rax
   14000eb15:	lock lock push rax
   14000eb19:	lock lock push rax
   14000eb1d:	lock lock push rax
   14000eb21:	lock lock push rax
   14000eb25:	lock lock push rax
   14000eb29:	lock lock push rax
   14000eb2d:	lock lock push rax
   14000eb31:	lock lock push rax
   14000eb35:	lock lock push rax
   14000eb39:	lock lock push rax
   14000eb3d:	lock lock push rax
   14000eb41:	lock lock push rax
   14000eb45:	lock lock push rax
   14000eb49:	lock lock push rax
   14000eb4d:	lock lock push rax
   14000eb51:	lock lock push rax
   14000eb55:	lock lock push rax
   14000eb59:	lock lock push rax
   14000eb5d:	lock lock push rax
   14000eb61:	lock lock push rax
   14000eb65:	lock lock push rax
   14000eb69:	lock lock push rax
   14000eb6d:	lock lock push rax
   14000eb71:	lock lock push rax
   14000eb75:	lock lock push rax
   14000eb79:	lock lock push rax
   14000eb7d:	lock lock push rax
   14000eb81:	lock lock push rax
   14000eb85:	lock lock push rax
   14000eb89:	lock lock push rax
   14000eb8d:	lock lock push rax
   14000eb91:	lock lock push rax
   14000eb95:	lock lock push rax
   14000eb99:	lock lock push rax
   14000eb9d:	lock lock push rax
   14000eba1:	lock lock push rcx
   14000eba5:	icebp  
   14000eba6:	icebp  
   14000eba7:	push   rax
   14000eba9:	lock lock (bad) 
   14000ebac:	(bad)  
   14000ebad:	(bad)  
   14000ebae:	(bad)  
   14000ebaf:	call   FWORD PTR [rbx+0x71ff7f90]
   14000ebb5:	pop    rbx
   14000ebb6:	cmp    al,0x78
   14000ebb8:	jb     0x14000ec17
   14000ebba:	ds dec edx
   14000ebbd:	mov    esp,0xedededff
   14000ebc3:	push   rax
   14000ebc5:	lock lock push rax
   14000ebc9:	lock lock push rax
   14000ebcd:	lock lock (bad) 
   14000ebd0:	in     eax,dx
   14000ebd1:	in     eax,dx
   14000ebd2:	in     eax,dx
   14000ebd3:	(bad)  
   14000ebd4:	in     eax,dx
   14000ebd5:	in     eax,dx
   14000ebd6:	in     eax,dx
   14000ebd7:	(bad)  
   14000ebd8:	in     eax,dx
   14000ebd9:	in     eax,dx
   14000ebda:	in     eax,dx
   14000ebdb:	(bad)  
   14000ebdc:	in     eax,dx
   14000ebdd:	in     eax,dx
   14000ebde:	in     eax,dx
   14000ebdf:	(bad)  
   14000ebe0:	in     eax,dx
   14000ebe1:	in     eax,dx
   14000ebe2:	in     eax,dx
   14000ebe3:	(bad)  
   14000ebe4:	in     eax,dx
   14000ebe5:	in     eax,dx
   14000ebe6:	in     eax,dx
   14000ebe7:	(bad)  
   14000ebe8:	in     eax,dx
   14000ebe9:	in     eax,dx
   14000ebea:	in     eax,dx
   14000ebeb:	(bad)  
   14000ebec:	in     eax,dx
   14000ebed:	in     eax,dx
   14000ebee:	in     eax,dx
   14000ebef:	(bad)  
   14000ebf0:	in     eax,dx
   14000ebf1:	in     eax,dx
   14000ebf2:	in     eax,dx
   14000ebf3:	(bad)  
   14000ebf4:	in     eax,dx
   14000ebf5:	in     eax,dx
   14000ebf6:	in     eax,dx
   14000ebf7:	(bad)  
   14000ebf8:	in     eax,dx
   14000ebf9:	in     eax,dx
   14000ebfa:	in     eax,dx
   14000ebfb:	(bad)  
   14000ebfc:	in     eax,dx
   14000ebfd:	in     eax,dx
   14000ebfe:	in     eax,dx
   14000ebff:	(bad)  
   14000ec00:	in     eax,dx
   14000ec01:	in     eax,dx
   14000ec02:	in     eax,dx
   14000ec03:	(bad)  
   14000ec04:	in     eax,dx
   14000ec05:	in     eax,dx
   14000ec06:	in     eax,dx
   14000ec07:	(bad)  
   14000ec08:	in     eax,dx
   14000ec09:	in     eax,dx
   14000ec0a:	in     eax,dx
   14000ec0b:	(bad)  
   14000ec0c:	in     eax,dx
   14000ec0d:	in     eax,dx
   14000ec0e:	in     eax,dx
   14000ec0f:	(bad)  
   14000ec10:	in     eax,dx
   14000ec11:	in     eax,dx
   14000ec12:	in     eax,dx
   14000ec13:	(bad)  
   14000ec14:	in     eax,dx
   14000ec15:	in     eax,dx
   14000ec16:	in     eax,dx
   14000ec17:	(bad)  
   14000ec18:	in     eax,dx
   14000ec19:	in     eax,dx
   14000ec1a:	in     eax,dx
   14000ec1b:	(bad)  
   14000ec1c:	in     eax,dx
   14000ec1d:	in     eax,dx
   14000ec1e:	in     eax,dx
   14000ec1f:	(bad)  
   14000ec20:	in     eax,dx
   14000ec21:	in     eax,dx
   14000ec22:	in     eax,dx
   14000ec23:	(bad)  
   14000ec24:	in     eax,dx
   14000ec25:	in     eax,dx
   14000ec26:	in     eax,dx
   14000ec27:	(bad)  
   14000ec28:	in     eax,dx
   14000ec29:	in     eax,dx
   14000ec2a:	in     eax,dx
   14000ec2b:	(bad)  
   14000ec2c:	in     eax,dx
   14000ec2d:	in     eax,dx
   14000ec2e:	in     eax,dx
   14000ec2f:	(bad)  
   14000ec30:	in     eax,dx
   14000ec31:	in     eax,dx
   14000ec32:	in     eax,dx
   14000ec33:	(bad)  
   14000ec34:	in     eax,dx
   14000ec35:	in     eax,dx
   14000ec36:	in     eax,dx
   14000ec37:	(bad)  
   14000ec38:	in     eax,dx
   14000ec39:	in     eax,dx
   14000ec3a:	in     eax,dx
   14000ec3b:	(bad)  
   14000ec3c:	in     eax,dx
   14000ec3d:	in     eax,dx
   14000ec3e:	in     eax,dx
   14000ec3f:	(bad)  
   14000ec40:	in     eax,dx
   14000ec41:	in     eax,dx
   14000ec42:	in     eax,dx
   14000ec43:	(bad)  
   14000ec44:	in     eax,dx
   14000ec45:	in     eax,dx
   14000ec46:	in     eax,dx
   14000ec47:	(bad)  
   14000ec48:	in     eax,dx
   14000ec49:	in     eax,dx
   14000ec4a:	in     eax,dx
   14000ec4b:	(bad)  
   14000ec4c:	in     eax,dx
   14000ec4d:	in     eax,dx
   14000ec4e:	in     eax,dx
   14000ec4f:	(bad)  
   14000ec50:	in     eax,dx
   14000ec51:	in     eax,dx
   14000ec52:	in     eax,dx
   14000ec53:	(bad)  
   14000ec54:	in     eax,dx
   14000ec55:	in     eax,dx
   14000ec56:	in     eax,dx
   14000ec57:	(bad)  
   14000ec58:	in     eax,dx
   14000ec59:	in     eax,dx
   14000ec5a:	in     eax,dx
   14000ec5b:	(bad)  
   14000ec5c:	in     eax,dx
   14000ec5d:	in     eax,dx
   14000ec5e:	in     eax,dx
   14000ec5f:	(bad)  
   14000ec60:	in     eax,dx
   14000ec61:	in     eax,dx
   14000ec62:	in     eax,dx
   14000ec63:	push   rax
   14000ec65:	lock lock push rax
   14000ec69:	lock lock (bad) 
   14000ec6c:	in     eax,dx
   14000ec6d:	in     eax,dx
   14000ec6e:	in     eax,dx
   14000ec6f:	dec    edx
   14000ec71:	mov    esp,0x3e5d72ff
   14000ec77:	push   QWORD PTR [rsi+rbx*2+0x3f]
   14000ec7b:	(bad)  
   14000ec7c:	(bad)  
   14000ec7e:	fdivp  st(7),st
   14000ec80:	in     eax,dx
   14000ec81:	in     eax,dx
   14000ec82:	in     eax,dx
   14000ec83:	(bad)  
   14000ec84:	in     eax,dx
   14000ec85:	in     eax,dx
   14000ec86:	in     eax,dx
   14000ec87:	(bad)  
   14000ec88:	in     eax,dx
   14000ec89:	in     eax,dx
   14000ec8a:	in     eax,dx
   14000ec8b:	(bad)  
   14000ec8c:	in     eax,dx
   14000ec8d:	in     eax,dx
   14000ec8e:	in     eax,dx
   14000ec8f:	(bad)  
   14000ec90:	jmp    0x14000ec7d
   14000ec92:	jmp    0x14000ec93
   14000ec94:	jmp    0x14000ec81
   14000ec96:	jmp    0x14000ec97
   14000ec98:	jmp    0x14000ec85
   14000ec9a:	jmp    0x14000ec9b
   14000ec9c:	jmp    0x14000ec89
   14000ec9e:	(bad)  
   14000ec9f:	jmp    rdi
   14000eca1:	out    0xe5,al
   14000eca3:	jmp    rsp
   14000eca5:	loope  0x14000ec85
   14000eca7:	(bad)  
   14000eca8:	fcmovbe st,st(4)
   14000ecaa:	int    0xff
   14000ecac:	retf   0xb3c0
   14000ecaf:	inc    eax
   14000ecb1:	mov    dl,0xa1
   14000ecb3:	jmp    FWORD PTR [rsi-0x56007964]
   14000ecb9:	xchg   ebp,eax
   14000ecba:	jnp    0x14000ecbb
   14000ecbc:	movabs al,ds:0x97ff5f7e98ff6d89
   14000ecc5:	jge    0x14000ed26
   14000ecc7:	call   QWORD PTR [rdi-0x6800a083]
   14000eccd:	jge    0x14000ed2e
   14000eccf:	call   QWORD PTR [rdi-0x6800a083]
   14000ecd5:	jge    0x14000ed36
   14000ecd7:	call   QWORD PTR [rdi-0x6800a083]
   14000ecdd:	jge    0x14000ed3e
   14000ecdf:	call   QWORD PTR [rdi-0x6500a183]
   14000ece5:	and    DWORD PTR [rdi+rdi*8-0x5c],0xadff738e
   14000eced:	(bad)  
   14000ecee:	(bad)  
   14000ecef:	(bad)  
   14000ecf0:	mov    edx,0xc4ff96a9
   14000ecf5:	mov    bh,0xa8
   14000ecf7:	(bad)  
   14000ecf8:	(bad)  
   14000ecfa:	int3   
   14000ecfb:	jmp    rsi
   14000ecfd:	in     al,0xe1
   14000ecff:	(bad)  
   14000ed00:	(bad)  
   14000ed01:	jmp    0x12bececed
   14000ed06:	jmp    0x14000ed07
   14000ed08:	jmp    0x14000ecf5
   14000ed0a:	jmp    0x14000ed0b
   14000ed0c:	jmp    0x14000ecf9
   14000ed0e:	jmp    0x14000ed0f
   14000ed10:	jmp    0x14000ecfd
   14000ed12:	jmp    0x14000ed13
   14000ed14:	jmp    0x14000ed01
   14000ed16:	jmp    0x14000ed17
   14000ed18:	jmp    0x14000ed05
   14000ed1a:	jmp    0x14000ed1b
   14000ed1c:	jmp    0x14000ed09
   14000ed1e:	jmp    0x14000ed1f
   14000ed20:	jmp    0x14000ed0d
   14000ed22:	jmp    0x14000ed23
   14000ed24:	in     eax,dx
   14000ed25:	in     eax,dx
   14000ed26:	in     eax,dx
   14000ed27:	(bad)  
   14000ed28:	in     eax,dx
   14000ed29:	in     eax,dx
   14000ed2a:	in     eax,dx
   14000ed2b:	(bad)  
   14000ed2c:	in     eax,dx
   14000ed2d:	in     eax,dx
   14000ed2e:	in     eax,dx
   14000ed2f:	(bad)  
   14000ed30:	(bad)  
   14000ed32:	fdivp  st(7),st
   14000ed34:	je     0x14000ed94
   14000ed36:	(bad)  
   14000ed37:	push   QWORD PTR [rsi+0x60]
   14000ed3a:	rex.B (bad) 
   14000ed3c:	fstp   st(5)
   14000ed3e:	(bad)  
   14000ed40:	jmp    0x14000ed2d
   14000ed42:	jmp    0x14000ed43
   14000ed44:	jmp    0x14000ed31
   14000ed46:	jmp    0x14000ed47
   14000ed48:	jmp    0x14000ed35
   14000ed4a:	jmp    0x14000ed4b
   14000ed4c:	jmp    0x14000ed39
   14000ed4e:	jmp    0x14000ed4f
   14000ed50:	jmp    0x12a00d73e
   14000ed55:	jmp    0x121e4ed43
   14000ed5a:	fdivp  st(7),st
   14000ed5c:	(bad)  
   14000ed5e:	int    0xff
   14000ed60:	mov    edi,0xacffa1b1
   14000ed65:	cdq    
   14000ed66:	(bad)  
   14000ed67:	jmp    QWORD PTR [rbx-0x62008b72]
   14000ed6d:	xchg   DWORD PTR [rdx-0x1],ebp
   14000ed70:	cdq    
   14000ed71:	(bad)  
   14000ed72:	call   QWORD PTR fs:[rbp-0x6a00a385]
   14000ed79:	jnp    0x14000edd7
   14000ed7b:	call   QWORD PTR [rbp-0x6900a385]
   14000ed81:	jge    0x14000ede1
   14000ed83:	call   QWORD PTR [rsi-0x6900a083]
   14000ed89:	jge    0x14000edea
   14000ed8b:	call   QWORD PTR [rsi-0x6900a083]
   14000ed91:	jge    0x14000edf2
   14000ed93:	call   QWORD PTR [rsi-0x6800a083]
   14000ed99:	jge    0x14000edfa
   14000ed9b:	call   QWORD PTR [rsi-0x6a00a083]
   14000eda1:	jnp    0x14000ee00
   14000eda3:	call   QWORD PTR [rbp-0x6a00a385]
   14000eda9:	jnp    0x14000ee07
   14000edab:	call   QWORD PTR [rcx+rdi*2+0x7d97ff5a]
   14000edb2:	pop    rdi
   14000edb3:	call   FWORD PTR [rbx-0x5d00987c]
   14000edb9:	mov    WORD PTR [rcx-0x1],?
   14000edbc:	mov    dl,0xa1
   14000edbe:	mov    edi,edi
   14000edc0:	retf   0xb4c0
   14000edc3:	jmp    rdx
   14000edc5:	(bad)  
   14000edc7:	(bad)  
   14000edc8:	call   0x12a00d6b5
   14000edcd:	jmp    0x129eaedbb
   14000edd2:	jmp    0x129ead7d6
   14000edd7:	(bad)  
   14000edd8:	jmp    0x12a00d7c6
   14000eddd:	jmp    0x129eaedcb
   14000ede2:	jmp    0x12becd9e6
   14000ede7:	(bad)  
   14000ede8:	jmp    0x14000edd5
   14000edea:	jmp    0x14000edeb
   14000edec:	jmp    0x14000edd9
   14000edee:	jmp    0x14000edef
   14000edf0:	fstp   st(5)
   14000edf2:	(bad)  
   14000edf4:	jbe    0x14000ee56
   14000edf6:	push   QWORD PTR [r15+0x62]
   14000edfa:	rex.XB (bad) 
   14000edfc:	fcmovnu st,st(3)
   14000edfe:	(bad)  
   14000ee00:	jmp    0x12a00d7ee
   14000ee05:	jmp    0x129eaedf3
   14000ee0a:	jmp    0x129ead80e
   14000ee0f:	(bad)  
   14000ee10:	call   0x12900d6fd
   14000ee15:	call   0xcba1ee02
   14000ee1a:	jno    0x14000ee1b
   14000ee1c:	xchg   ebx,eax
   14000ee1d:	jns    0x14000ee79
   14000ee1f:	call   QWORD PTR [rax-0x6f00aa8b]
   14000ee25:	jne    0x14000ee7d
   14000ee27:	call   QWORD PTR [rsi-0x61009f83]
   14000ee2d:	xchg   DWORD PTR [rdi+rdi*8-0x54],ebp
   14000ee31:	(bad)  
   14000ee32:	cmp    edi,0xffffffbe
   14000ee35:	mov    dl,0xa1
   14000ee37:	inc    esi
   14000ee39:	mov    esp,0xbfc8ffaf
   14000ee3e:	mov    dl,0xff
   14000ee40:	xlat   BYTE PTR ds:[rbx]
   14000ee41:	ror    edx,1
   14000ee43:	(bad)  
   14000ee44:	fcmovbe st,st(6)
   14000ee46:	sar    bh,1
   14000ee48:	fcmovbe st,st(6)
   14000ee4a:	sar    bh,1
   14000ee4c:	fcmovbe st,st(6)
   14000ee4e:	sar    bh,1
   14000ee50:	fcmovbe st,st(6)
   14000ee52:	sar    bh,1
   14000ee54:	fcmovbe st,st(6)
   14000ee56:	sar    bh,1
   14000ee58:	fcmovnbe st,st(7)
   14000ee5a:	sar    edi,1
   14000ee5c:	fcom   st(2)
   14000ee5e:	int3   
   14000ee5f:	dec    ebp
   14000ee61:	(bad)  
   14000ee62:	mov    ecx,0xb1bec8ff
   14000ee67:	inc    esi
   14000ee69:	mov    ebx,0xabb9ffae
   14000ee6e:	cdq    
   14000ee6f:	push   QWORD PTR [rcx-0x5400735f]
   14000ee75:	cwde   
   14000ee76:	(bad)  
   14000ee77:	call   FWORD PTR [rbx-0x6900967b]
   14000ee7d:	jge    0x14000eedf
   14000ee7f:	call   QWORD PTR [rsi-0x5d00a083]
   14000ee85:	lea    esi,[rdi+rdi*8-0x34]
   14000ee89:	(bad)  
   14000ee8a:	mov    ecx,0xe4e6e7ff
   14000ee8f:	(bad)  
   14000ee90:	call   0x12900d77d
   14000ee95:	call   0x128e9ee82
   14000ee9a:	call   0x128e9d79e
   14000ee9f:	(bad)  
   14000eea0:	call   0x12a00d78d
   14000eea5:	jmp    0x129eaee93
   14000eeaa:	jmp    0x129ead8ae
   14000eeaf:	(bad)  
   14000eeb0:	fcmovnu st,st(3)
   14000eeb2:	(bad)  
   14000eeb4:	ja     0x14000ef18
   14000eeb6:	rex.XB (bad) 
   14000eeb8:	jns    0x14000ef1e
   14000eeba:	rex.RB (bad) 
   14000eebc:	fcmovu st,st(2)
   14000eebe:	(bad)  
   14000eec0:	call   0x12900d7ad
   14000eec5:	call   0x128e9eeb2
   14000eeca:	call   0x128e9d7ce
   14000eecf:	jmp    rdi
   14000eed1:	out    0xe7,eax
   14000eed3:	jmp    rdi
   14000eed5:	out    0xe7,eax
   14000eed7:	jmp    QWORD PTR [rbp-0x6b00876f]
   14000eedd:	jnp    0x14000ef3c
   14000eedf:	dec    DWORD PTR [rsi-0x6800ac8d]
   14000eee5:	and    BYTE PTR [rbx-0x1],0xcd
   14000eee9:	(bad)  
   14000eeea:	mov    edx,0xe7e7e7ff
   14000eeef:	jmp    rdi
   14000eef1:	out    0xe7,eax
   14000eef3:	jmp    rdi
   14000eef5:	out    0xe7,eax
   14000eef7:	jmp    rdi
   14000eef9:	out    0xe7,eax
   14000eefb:	jmp    rdi
   14000eefd:	out    0xe7,eax
   14000eeff:	jmp    rdi
   14000ef01:	out    0xe7,eax
   14000ef03:	jmp    rdi
   14000ef05:	out    0xe7,eax
   14000ef07:	jmp    rdi
   14000ef09:	out    0xe7,eax
   14000ef0b:	jmp    rdi
   14000ef0d:	out    0xe7,eax
   14000ef0f:	jmp    rdi
   14000ef11:	out    0xe7,eax
   14000ef13:	jmp    rdi
   14000ef15:	out    0xe7,eax
   14000ef17:	jmp    rdi
   14000ef19:	out    0xe7,eax
   14000ef1b:	jmp    rdi
   14000ef1d:	out    0xe7,eax
   14000ef1f:	jmp    rdi
   14000ef21:	out    0xe7,eax
   14000ef23:	jmp    rdi
   14000ef25:	out    0xe7,eax
   14000ef27:	jmp    rdi
   14000ef29:	out    0xe7,eax
   14000ef2b:	jmp    rdi
   14000ef2d:	out    0xe7,eax
   14000ef2f:	jmp    rdi
   14000ef31:	out    0xe7,eax
   14000ef33:	jmp    rdi
   14000ef35:	out    0xe6,eax
   14000ef37:	jmp    rbp
   14000ef39:	in     eax,0xe3
   14000ef3b:	(bad)  
   14000ef3c:	(bad)  
   14000ef3e:	fdivr  st,st(7)
   14000ef40:	retf   
   14000ef41:	ret    0xffb7
   14000ef44:	test   eax,0x9bff7f96
   14000ef49:	test   DWORD PTR [rcx-0x1],ebp
   14000ef4c:	(bad)  
   14000ef4d:	(bad)  
   14000ef4e:	(bad)  
   14000ef4f:	jmp    rsi
   14000ef51:	out    0xe6,al
   14000ef53:	jmp    rdi
   14000ef55:	out    0xe7,eax
   14000ef57:	jmp    rdi
   14000ef59:	out    0xe7,eax
   14000ef5b:	jmp    rdi
   14000ef5d:	out    0xe7,eax
   14000ef5f:	jmp    rdi
   14000ef61:	out    0xe7,eax
   14000ef63:	(bad)  
   14000ef64:	call   0x12900d851
   14000ef69:	call   0x128e9ef56
   14000ef6e:	call   0x11adbca72
   14000ef73:	(bad)  
   14000ef74:	jns    0x14000efda
   14000ef76:	rex.RB (bad) 
   14000ef78:	jnp    0x14000efe0
   14000ef7a:	rex.RXB (bad) 
   14000ef7c:	(bad)  
   14000ef7e:	fcos   
   14000ef80:	out    0xe7,eax
   14000ef82:	out    0xff,eax
   14000ef84:	out    0xe7,eax
   14000ef86:	out    0xff,eax
   14000ef88:	out    0xe7,eax
   14000ef8a:	out    0xff,eax
   14000ef8c:	out    0xe7,eax
   14000ef8e:	out    0xff,eax
   14000ef90:	out    0xe6,al
   14000ef92:	out    0xff,al
   14000ef94:	out    0xe6,al
   14000ef96:	out    0xff,al
   14000ef98:	loope  0x14000ef7a
   14000ef9a:	(bad)  
   14000ef9c:	retf   
   14000ef9d:	ret    
   14000ef9e:	mov    eax,0x7992a5ff
   14000efa3:	call   FWORD PTR [rdx-0x4a00977c]
   14000efa9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000efaa:	xchg   ebx,eax
   14000efab:	dec    esi
   14000efad:	(bad)  
   14000efae:	mov    ebp,0xccd2d6ff
   14000efb3:	jmp    rsp
   14000efb5:	in     al,0xe2
   14000efb7:	jmp    rsi
   14000efb9:	out    0xe6,al
   14000efbb:	jmp    rsp
   14000efbd:	in     al,0xe2
   14000efbf:	(bad)  
   14000efc0:	fcmovnbe st,st(7)
   14000efc2:	sar    edi,cl
   14000efc4:	(bad)  
   14000efc5:	iret   
   14000efc6:	enter  0xd0ff,0xc9
   14000efca:	sar    bh,0xcc
   14000efcd:	(bad)  
   14000efce:	mov    edx,0xb9c3ccff
   14000efd3:	dec    esp
   14000efd5:	(bad)  
   14000efd6:	mov    edx,0xbdc6ceff
   14000efdb:	call   rsp
   14000efdd:	(bad)  
   14000efde:	(bad)  
   14000efdf:	call   rdi
   14000efe1:	ror    ebp,cl
   14000efe3:	(bad)  
   14000efe4:	(bad)  
   14000efe6:	(bad)  
   14000efe8:	in     eax,0xe5
   14000efea:	jrcxz  0x14000efeb
   14000efec:	out    0xe6,al
   14000efee:	out    0xff,al
   14000eff0:	out    0xe6,al
   14000eff2:	out    0xff,al
   14000eff4:	out    0xe6,al
   14000eff6:	out    0xff,al
   14000eff8:	out    0xe6,al
   14000effa:	out    0xff,al
   14000effc:	out    0xe6,al
   14000effe:	out    0xff,al
   14000f000:	out    0xe6,al
   14000f002:	out    0xff,al
   14000f004:	out    0xe6,al
   14000f006:	out    0xff,al
   14000f008:	mov    ebp,0xcaffa1b1
   14000f00d:	shl    DWORD PTR [rdi-0x1e1d1c01],0xff
   14000f014:	out    0xe6,al
   14000f016:	out    0xff,al
   14000f018:	out    0xe6,al
   14000f01a:	out    0xff,al
   14000f01c:	out    0xe6,al
   14000f01e:	out    0xff,al
   14000f020:	out    0xe6,al
   14000f022:	out    0xff,al
   14000f024:	out    0xe7,eax
   14000f026:	out    0xff,eax
   14000f028:	out    0xe7,eax
   14000f02a:	out    0xff,eax
   14000f02c:	out    0xe7,eax
   14000f02e:	out    0xff,eax
   14000f030:	(bad)  
   14000f032:	fcos   
   14000f034:	jnp    0x14000f09c
   14000f036:	rex.RXB (bad) 
   14000f038:	jge    0x14000f0a2
   14000f03a:	rex.WX (bad) 
   14000f03c:	fcomp  st(0)
   14000f03e:	fdivr  st,st(7)
   14000f040:	out    0xe6,al
   14000f042:	out    0xff,al
   14000f044:	out    0xe6,al
   14000f046:	out    0xff,al
   14000f048:	out    0xe6,al
   14000f04a:	out    0xff,al
   14000f04c:	out    0xe6,al
   14000f04e:	out    0xff,al
   14000f050:	in     al,0xe4
   14000f052:	in     al,0xff
   14000f054:	in     al,0xe4
   14000f056:	in     al,0xff
   14000f058:	in     al,0xe4
   14000f05a:	in     al,0xff
   14000f05c:	in     al,0xe4
   14000f05e:	in     al,0xff
   14000f060:	in     al,0xe4
   14000f062:	in     al,0xff
   14000f064:	(bad)  
   14000f065:	ror    dl,1
   14000f067:	push   QWORD PTR [rdi-0x53006757]
   14000f06d:	fwait
   14000f06e:	xchg   bh,bh
   14000f070:	mov    ebx,0xddff9faf
   14000f075:	fcmovu st,st(0)
   14000f077:	dec    esi
   14000f079:	(bad)  
   14000f07a:	mov    esi,0x98a9b7ff
   14000f07f:	call   FWORD PTR [rdi-0x6f008e75]
   14000f085:	ja     0x14000f0e0
   14000f087:	dec    DWORD PTR [rdx-0x7500b091]
   14000f08d:	outs   dx,DWORD PTR ds:[rsi]
   14000f08e:	rex.WRXB dec QWORD PTR [r10-0x7500b091]
   14000f095:	outs   dx,DWORD PTR ds:[rsi]
   14000f096:	rex.WRXB dec QWORD PTR [r10-0x7100b091]
   14000f09d:	jne    0x14000f0f5
   14000f09f:	call   FWORD PTR [rax-0x57009a7f]
   14000f0a5:	xchg   esi,eax
   14000f0a6:	jg     0x14000f0a7
   14000f0a8:	mov    edx,0xd2ff9cad
   14000f0ad:	int3   
   14000f0ae:	(bad)  
   14000f0b1:	jrcxz  0x14000f096
   14000f0b3:	jmp    rsp
   14000f0b5:	in     al,0xe4
   14000f0b7:	jmp    rsp
   14000f0b9:	in     al,0xe4
   14000f0bb:	jmp    rsp
   14000f0bd:	in     al,0xe4
   14000f0bf:	jmp    rsp
   14000f0c1:	in     al,0xe4
   14000f0c3:	jmp    rbx
   14000f0c5:	jrcxz  0x14000f0aa
   14000f0c7:	(bad)  
   14000f0c8:	fcmovu st,st(0)
   14000f0ca:	(bad)  
   14000f0cb:	jmp    rsp
   14000f0cd:	in     al,0xe4
   14000f0cf:	jmp    rsp
   14000f0d1:	in     al,0xe4
   14000f0d3:	jmp    rsp
   14000f0d5:	in     al,0xe4
   14000f0d7:	jmp    rsp
   14000f0d9:	in     al,0xe4
   14000f0db:	jmp    rsp
   14000f0dd:	in     al,0xe4
   14000f0df:	jmp    rsp
   14000f0e1:	in     al,0xe4
   14000f0e3:	jmp    rsi
   14000f0e5:	out    0xe6,al
   14000f0e7:	jmp    rsi
   14000f0e9:	out    0xe6,al
   14000f0eb:	jmp    rsi
   14000f0ed:	out    0xe6,al
   14000f0ef:	(bad)  
   14000f0f0:	fcomp  st(0)
   14000f0f2:	fdivr  st,st(7)
   14000f0f4:	jge    0x14000f15e
   14000f0f6:	rex.WX (bad) 
   14000f0f8:	jg     0x14000f164
   14000f0fa:	rex.WR call rsi
   14000f0fd:	(bad)  
   14000f0fe:	(bad)  
   14000f0ff:	jmp    rsp
   14000f101:	in     al,0xe4
   14000f103:	jmp    rsp
   14000f105:	in     al,0xe4
   14000f107:	jmp    rsp
   14000f109:	in     al,0xe4
   14000f10b:	jmp    rsp
   14000f10d:	in     al,0xe4
   14000f10f:	jmp    rsp
   14000f111:	in     al,0xe4
   14000f113:	jmp    rsp
   14000f115:	in     al,0xe4
   14000f117:	jmp    rsp
   14000f119:	in     al,0xe4
   14000f11b:	jmp    rsp
   14000f11d:	in     al,0xe4
   14000f11f:	jmp    rsp
   14000f121:	in     al,0xe4
   14000f123:	jmp    rsp
   14000f125:	in     al,0xe4
   14000f127:	jmp    rsp
   14000f129:	in     al,0xe4
   14000f12b:	jmp    rsp
   14000f12d:	in     al,0xe4
   14000f12f:	jmp    rsp
   14000f131:	in     al,0xe4
   14000f133:	call   rdx
   14000f135:	int3   
   14000f136:	(bad)  
   14000f139:	jns    0x14000f197
   14000f13b:	dec    DWORD PTR [rcx-0x7400b192]
   14000f141:	jo     0x14000f194
   14000f143:	call   QWORD PTR [rax-0x6900a589]
   14000f149:	jg     0x14000f1ae
   14000f14b:	call   FWORD PTR [rbp-0x5d009178]
   14000f151:	mov    ?,WORD PTR [rsi-0x1]
   14000f154:	sahf   
   14000f155:	mov    dh,BYTE PTR [rcx-0x1]
   14000f158:	xchg   esp,eax
   14000f159:	jle    0x14000f1bd
   14000f15b:	call   QWORD PTR [rax-0x7500a589]
   14000f161:	jo     0x14000f1b3
   14000f163:	dec    DWORD PTR [rcx-0x6900b192]
   14000f169:	jg     0x14000f1ce
   14000f16b:	inc    esp
   14000f16d:	mov    edx,0xe3e3ffaf
   14000f172:	jrcxz  0x14000f173
   14000f174:	in     al,0xe4
   14000f176:	in     al,0xff
   14000f178:	in     al,0xe4
   14000f17a:	in     al,0xff
   14000f17c:	in     al,0xe4
   14000f17e:	in     al,0xff
   14000f180:	in     al,0xe4
   14000f182:	in     al,0xff
   14000f184:	in     al,0xe4
   14000f186:	in     al,0xff
   14000f188:	in     al,0xe4
   14000f18a:	in     al,0xff
   14000f18c:	in     al,0xe4
   14000f18e:	in     al,0xff
   14000f190:	in     al,0xe4
   14000f192:	in     al,0xff
   14000f194:	in     al,0xe4
   14000f196:	in     al,0xff
   14000f198:	in     al,0xe4
   14000f19a:	in     al,0xff
   14000f19c:	in     al,0xe4
   14000f19e:	in     al,0xff
   14000f1a0:	in     al,0xe4
   14000f1a2:	in     al,0xff
   14000f1a4:	in     al,0xe4
   14000f1a6:	in     al,0xff
   14000f1a8:	in     al,0xe4
   14000f1aa:	in     al,0xff
   14000f1ac:	in     al,0xe4
   14000f1ae:	in     al,0xff
   14000f1b0:	(bad)  
   14000f1b1:	(bad)  
   14000f1b2:	(bad)  
   14000f1b3:	(bad)  
   14000f1b4:	jg     0x14000f220
   14000f1b6:	rex.WR inc QWORD PTR [rcx-0x2900b194]
   14000f1bd:	(bad)  
   14000f1be:	(bad)  
   14000f1bf:	jmp    rsp
   14000f1c1:	in     al,0xe4
   14000f1c3:	jmp    rsp
   14000f1c5:	in     al,0xe4
   14000f1c7:	jmp    rsp
   14000f1c9:	in     al,0xe4
   14000f1cb:	jmp    rsp
   14000f1cd:	in     al,0xe4
   14000f1cf:	jmp    rsp
   14000f1d1:	in     al,0xe4
   14000f1d3:	jmp    rsp
   14000f1d5:	in     al,0xe4
   14000f1d7:	jmp    rsp
   14000f1d9:	in     al,0xe4
   14000f1db:	jmp    rsp
   14000f1dd:	in     al,0xe4
   14000f1df:	jmp    rsp
   14000f1e1:	in     al,0xe4
   14000f1e3:	jmp    rsp
   14000f1e5:	in     al,0xe4
   14000f1e7:	jmp    rsp
   14000f1e9:	in     al,0xe4
   14000f1eb:	jmp    rsp
   14000f1ed:	in     al,0xe4
   14000f1ef:	jmp    rsp
   14000f1f1:	in     al,0xe4
   14000f1f3:	dec    esp
   14000f1f5:	(bad)  
   14000f1f6:	mov    ebx,0x647f96ff
   14000f1fb:	call   FWORD PTR [rbp-0x3f008f77]
   14000f201:	mov    ch,0xa7
   14000f203:	dec    ecx
   14000f205:	shl    DWORD PTR [rdi-0x3c352e01],0xff
   14000f20c:	xlat   BYTE PTR ds:[rbx]
   14000f20d:	ror    ebp,cl
   14000f20f:	(bad)  
   14000f210:	fstp   st(2)
   14000f212:	xlat   BYTE PTR ds:[rbx]
   14000f213:	(bad)  
   14000f214:	(bad)  
   14000f216:	sar    edi,1
   14000f218:	iret   
   14000f219:	leave  
   14000f21a:	sar    edi,0xc8
   14000f21d:	shl    BYTE PTR [rbp-0x5d4f4301],0xff
   14000f224:	mov    ebp,0xd4ffa4b2
   14000f229:	ror    dl,1
   14000f22b:	jmp    rsp
   14000f22d:	in     al,0xe4
   14000f22f:	jmp    rsp
   14000f231:	in     al,0xe4
   14000f233:	jmp    rsp
   14000f235:	in     al,0xe4
   14000f237:	jmp    rsp
   14000f239:	in     al,0xe4
   14000f23b:	jmp    rsp
   14000f23d:	in     al,0xe4
   14000f23f:	jmp    rsp
   14000f241:	in     al,0xe4
   14000f243:	jmp    rsp
   14000f245:	in     al,0xe4
   14000f247:	jmp    rsp
   14000f249:	in     al,0xe4
   14000f24b:	jmp    rsp
   14000f24d:	in     al,0xe4
   14000f24f:	jmp    rsp
   14000f251:	in     al,0xe4
   14000f253:	jmp    rsp
   14000f255:	in     al,0xe4
   14000f257:	jmp    rsp
   14000f259:	in     al,0xe4
   14000f25b:	jmp    rsp
   14000f25d:	in     al,0xe4
   14000f25f:	jmp    rsp
   14000f261:	in     al,0xe4
   14000f263:	jmp    rsp
   14000f265:	in     al,0xe4
   14000f267:	jmp    rsp
   14000f269:	in     al,0xe4
   14000f26b:	jmp    rsp
   14000f26d:	in     al,0xe4
   14000f26f:	call   rsi
   14000f271:	(bad)  
   14000f272:	(bad)  
   14000f273:	inc    DWORD PTR [rcx-0x7c00b194]
   14000f279:	outs   dx,BYTE PTR ds:[rsi]
   14000f27a:	push   rcx
   14000f27b:	call   rsi
   14000f27d:	(bad)  
   14000f27e:	(bad)  
   14000f27f:	jmp    rsp
   14000f281:	in     al,0xe4
   14000f283:	jmp    rsp
   14000f285:	in     al,0xe4
   14000f287:	jmp    rsp
   14000f289:	in     al,0xe4
   14000f28b:	jmp    rsp
   14000f28d:	in     al,0xe4
   14000f28f:	jmp    rsp
   14000f291:	in     al,0xe4
   14000f293:	jmp    rsp
   14000f295:	in     al,0xe4
   14000f297:	jmp    rsp
   14000f299:	in     al,0xe4
   14000f29b:	jmp    rsp
   14000f29d:	in     al,0xe4
   14000f29f:	jmp    rsp
   14000f2a1:	in     al,0xe4
   14000f2a3:	jmp    rsp
   14000f2a5:	in     al,0xe4
   14000f2a7:	jmp    rsp
   14000f2a9:	in     al,0xe4
   14000f2ab:	jmp    rsp
   14000f2ad:	in     al,0xe4
   14000f2af:	jmp    rsp
   14000f2b1:	in     al,0xe4
   14000f2b3:	jmp    rsp
   14000f2b5:	in     al,0xe4
   14000f2b7:	call   rbx
   14000f2b9:	(bad)  
   14000f2ba:	(bad)  
   14000f2bb:	call   rsi
   14000f2bd:	ror    esp,1
   14000f2bf:	jmp    rsp
   14000f2c1:	in     al,0xe4
   14000f2c3:	jmp    rsp
   14000f2c5:	in     al,0xe4
   14000f2c7:	jmp    rsp
   14000f2c9:	in     al,0xe4
   14000f2cb:	jmp    rsp
   14000f2cd:	in     al,0xe4
   14000f2cf:	jmp    rbx
   14000f2d1:	jrcxz  0x14000f2b6
   14000f2d3:	jmp    rsp
   14000f2d5:	in     al,0xe3
   14000f2d7:	jmp    rsp
   14000f2d9:	in     al,0xe4
   14000f2db:	jmp    rsp
   14000f2dd:	in     al,0xe4
   14000f2df:	jmp    rsp
   14000f2e1:	in     al,0xe4
   14000f2e3:	jmp    rsp
   14000f2e5:	in     al,0xe4
   14000f2e7:	jmp    rsp
   14000f2e9:	in     al,0xe4
   14000f2eb:	jmp    rsp
   14000f2ed:	in     al,0xe4
   14000f2ef:	jmp    rsp
   14000f2f1:	in     al,0xe4
   14000f2f3:	jmp    rax
   14000f2f5:	(bad)  
   14000f2f7:	jmp    rsp
   14000f2f9:	in     al,0xe4
   14000f2fb:	jmp    rsp
   14000f2fd:	in     al,0xe4
   14000f2ff:	jmp    rsp
   14000f301:	in     al,0xe4
   14000f303:	jmp    rsp
   14000f305:	in     al,0xe4
   14000f307:	jmp    rsp
   14000f309:	in     al,0xe4
   14000f30b:	jmp    rsp
   14000f30d:	in     al,0xe4
   14000f30f:	jmp    rsp
   14000f311:	in     al,0xe4
   14000f313:	jmp    rsp
   14000f315:	in     al,0xe4
   14000f317:	jmp    rsp
   14000f319:	in     al,0xe4
   14000f31b:	jmp    rsp
   14000f31d:	in     al,0xe4
   14000f31f:	jmp    rsp
   14000f321:	in     al,0xe4
   14000f323:	jmp    rsp
   14000f325:	in     al,0xe4
   14000f327:	jmp    rsp
   14000f329:	in     al,0xe4
   14000f32b:	jmp    rsp
   14000f32d:	in     al,0xe4
   14000f32f:	call   rsi
   14000f331:	(bad)  
   14000f332:	(bad)  
   14000f333:	inc    DWORD PTR [rbx-0x7a00ae92]
   14000f339:	jo     0x14000f38e
   14000f33b:	call   rsi
   14000f33d:	(bad)  
   14000f33e:	(bad)  
   14000f33f:	jmp    rsp
   14000f341:	in     al,0xe4
   14000f343:	jmp    rsp
   14000f345:	in     al,0xe4
   14000f347:	jmp    rsp
   14000f349:	in     al,0xe4
   14000f34b:	jmp    rsp
   14000f34d:	in     al,0xe4
   14000f34f:	jmp    rbp
   14000f351:	in     eax,0xe5
   14000f353:	jmp    rbp
   14000f355:	in     eax,0xe5
   14000f357:	jmp    rbp
   14000f359:	in     eax,0xe5
   14000f35b:	jmp    rbp
   14000f35d:	in     eax,0xe5
   14000f35f:	jmp    rbp
   14000f361:	in     eax,0xe5
   14000f363:	jmp    rbp
   14000f365:	in     eax,0xe5
   14000f367:	jmp    rbp
   14000f369:	in     eax,0xe5
   14000f36b:	jmp    rbp
   14000f36d:	in     eax,0xe5
   14000f36f:	jmp    rbp
   14000f371:	in     eax,0xe5
   14000f373:	jmp    rcx
   14000f375:	loopne 0x14000f356
   14000f377:	call   rbp
   14000f379:	ror    ebx,1
   14000f37b:	dec    ecx
   14000f37d:	shl    DWORD PTR [rsi-0x60504401],0xff
   14000f384:	scas   al,BYTE PTR es:[rdi]
   14000f385:	sahf   
   14000f386:	mov    edi,edi
   14000f388:	stos   BYTE PTR es:[rdi],al
   14000f389:	cdq    
   14000f38a:	test   bh,bh
   14000f38c:	stos   DWORD PTR es:[rdi],eax
   14000f38d:	(bad)  
   14000f38e:	test   edi,edi
   14000f390:	stos   BYTE PTR es:[rdi],al
   14000f391:	(bad)  
   14000f392:	test   edi,edi
   14000f394:	stos   BYTE PTR es:[rdi],al
   14000f395:	cdq    
   14000f396:	test   bh,bh
   14000f398:	lods   al,BYTE PTR ds:[rsi]
   14000f399:	pushf  
   14000f39a:	mov    bh,bh
   14000f39c:	mov    bh,0xaa
   14000f39e:	(bad)  
   14000f39f:	inc    edx
   14000f3a1:	mov    eax,0xc0c8ffab
   14000f3a6:	mov    ch,0xff
   14000f3a8:	ror    cl,1
   14000f3aa:	sar    edi,0xd7
   14000f3ad:	(bad)  
   14000f3ae:	(bad)  
   14000f3af:	jmp    rax
   14000f3b1:	(bad)  
   14000f3b3:	(bad)  
   14000f3b4:	fstp   st(2)
   14000f3b6:	xlat   BYTE PTR ds:[rbx]
   14000f3b7:	dec    ecx
   14000f3b9:	shl    DWORD PTR [rdi-0x493f3601],0xff
   14000f3c0:	(bad)  
   14000f3c2:	fdivr  st,st(7)
   14000f3c4:	in     eax,0xe5
   14000f3c6:	in     eax,0xff
   14000f3c8:	in     eax,0xe5
   14000f3ca:	in     eax,0xff
   14000f3cc:	in     eax,0xe5
   14000f3ce:	in     eax,0xff
   14000f3d0:	in     eax,0xe5
   14000f3d2:	in     eax,0xff
   14000f3d4:	in     eax,0xe5
   14000f3d6:	in     eax,0xff
   14000f3d8:	in     eax,0xe5
   14000f3da:	in     eax,0xff
   14000f3dc:	in     eax,0xe5
   14000f3de:	in     eax,0xff
   14000f3e0:	in     eax,0xe5
   14000f3e2:	in     eax,0xff
   14000f3e4:	in     al,0xe4
   14000f3e6:	in     al,0xff
   14000f3e8:	in     al,0xe4
   14000f3ea:	in     al,0xff
   14000f3ec:	in     al,0xe4
   14000f3ee:	in     al,0xff
   14000f3f0:	(bad)  
   14000f3f1:	(bad)  
   14000f3f2:	(bad)  
   14000f3f3:	inc    DWORD PTR [rbp-0x7800ac90]
   14000f3f9:	jb     0x14000f451
   14000f3fb:	call   rdi
   14000f3fd:	xlat   BYTE PTR ds:[rbx]
   14000f3fe:	xlat   BYTE PTR ds:[rbx]
   14000f3ff:	jmp    rbp
   14000f401:	in     eax,0xe5
   14000f403:	jmp    rbp
   14000f405:	in     eax,0xe5
   14000f407:	jmp    rbp
   14000f409:	in     eax,0xe5
   14000f40b:	jmp    rbp
   14000f40d:	in     eax,0xe5
   14000f40f:	jmp    rsi
   14000f411:	out    0xe6,al
   14000f413:	jmp    rsi
   14000f415:	out    0xe6,al
   14000f417:	jmp    rsi
   14000f419:	out    0xe6,al
   14000f41b:	jmp    rsi
   14000f41d:	out    0xe6,al
   14000f41f:	jmp    rsi
   14000f421:	out    0xe6,al
   14000f423:	jmp    rsi
   14000f425:	out    0xe6,al
   14000f427:	jmp    rsi
   14000f429:	out    0xe6,al
   14000f42b:	jmp    rsi
   14000f42d:	out    0xe6,al
   14000f42f:	call   rax
   14000f431:	retf   0xffc2
   14000f434:	scas   al,BYTE PTR es:[rdi]
   14000f435:	sahf   
   14000f436:	mov    edi,edi
   14000f438:	xchg   edx,eax
   14000f439:	jl     0x14000f49a
   14000f43b:	inc    DWORD PTR [rdi-0x7800b394]
   14000f441:	ins    BYTE PTR es:[rdi],dx
   14000f442:	rex.WR inc QWORD PTR [rdi-0x7100b294]
   14000f449:	jne    0x14000f4a3
   14000f44b:	dec    DWORD PTR [rsi-0x7100a88b]
   14000f451:	jne    0x14000f4aa
   14000f453:	dec    DWORD PTR [rbp-0x7500a88c]
   14000f459:	jo     0x14000f4ab
   14000f45b:	inc    DWORD PTR [rdi-0x7800b394]
   14000f461:	ins    BYTE PTR es:[rdi],dx
   14000f462:	rex.WR inc QWORD PTR [rdi-0x7000b394]
   14000f469:	ja     0x14000f4c4
   14000f46b:	jmp    QWORD PTR [rsi-0x2900816c]
   14000f471:	ror    ebx,1
   14000f473:	jmp    rsp
   14000f475:	jrcxz  0x14000f459
   14000f477:	inc    edi
   14000f479:	mov    esi,0x9cadffb2
   14000f47e:	mov    bh,bh
   14000f480:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f481:	xchg   esp,eax
   14000f482:	jge    0x14000f483
   14000f484:	ret    0xabb8
   14000f487:	jmp    rsi
   14000f489:	out    0xe5,al
   14000f48b:	jmp    rsi
   14000f48d:	out    0xe6,al
   14000f48f:	jmp    rsi
   14000f491:	out    0xe6,al
   14000f493:	jmp    rsi
   14000f495:	out    0xe6,al
   14000f497:	jmp    rsi
   14000f499:	out    0xe6,al
   14000f49b:	jmp    rsi
   14000f49d:	out    0xe6,al
   14000f49f:	jmp    rsi
   14000f4a1:	out    0xe6,al
   14000f4a3:	jmp    rbp
   14000f4a5:	in     eax,0xe5
   14000f4a7:	jmp    rbp
   14000f4a9:	in     eax,0xe5
   14000f4ab:	jmp    rbp
   14000f4ad:	in     eax,0xe5
   14000f4af:	call   rdi
   14000f4b1:	xlat   BYTE PTR ds:[rbx]
   14000f4b2:	xlat   BYTE PTR ds:[rbx]
   14000f4b3:	inc    DWORD PTR [rdi-0x7500a98e]
   14000f4b9:	jne    0x14000f513
   14000f4bb:	(bad)  
   14000f4bc:	fcomp  st(0)
   14000f4be:	fdivr  st,st(7)
   14000f4c0:	out    0xe6,al
   14000f4c2:	out    0xff,al
   14000f4c4:	out    0xe6,al
   14000f4c6:	out    0xff,al
   14000f4c8:	out    0xe6,al
   14000f4ca:	out    0xff,al
   14000f4cc:	out    0xe6,al
   14000f4ce:	out    0xff,al
   14000f4d0:	out    0xe6,al
   14000f4d2:	out    0xff,al
   14000f4d4:	out    0xe6,al
   14000f4d6:	out    0xff,al
   14000f4d8:	out    0xe6,al
   14000f4da:	out    0xff,al
   14000f4dc:	out    0xe6,al
   14000f4de:	out    0xff,al
   14000f4e0:	out    0xe6,al
   14000f4e2:	out    0xff,al
   14000f4e4:	out    0xe6,al
   14000f4e6:	out    0xff,al
   14000f4e8:	out    0xe6,al
   14000f4ea:	out    0xff,al
   14000f4ec:	out    0xe6,al
   14000f4ee:	out    0xff,al
   14000f4f0:	mov    bh,0xaa
   14000f4f2:	cdq    
   14000f4f3:	inc    DWORD PTR [rdi-0x6a00b394]
   14000f4f9:	jg     0x14000f55e
   14000f4fb:	jmp    FWORD PTR [rdi-0x46007360]
   14000f501:	stos   DWORD PTR es:[rdi],eax
   14000f502:	fwait
   14000f503:	(bad)  
   14000f504:	mov    esi,0xcaffa5b3
   14000f509:	shl    DWORD PTR [rdi-0x4a3f3701],0xff
   14000f510:	leave  
   14000f511:	shl    BYTE PTR [rbp-0x4a3f3601],0xff
   14000f518:	ret    
   14000f519:	mov    ecx,0xacbaffac
   14000f51e:	pushf  
   14000f51f:	push   QWORD PTR [rbp-0x52006a59]
   14000f525:	pushf  
   14000f526:	mov    bh,bh
   14000f528:	movabs ds:0xdfff99aab7ff7991,eax
   14000f531:	(bad)  
   14000f533:	jmp    rsi
   14000f535:	out    0xe6,al
   14000f537:	jmp    rbp
   14000f539:	in     eax,0xe3
   14000f53b:	call   rsi
   14000f53d:	ror    ebx,1
   14000f53f:	jmp    FWORD PTR [rsi-0x74007461]
   14000f545:	jno    0x14000f59a
   14000f547:	jmp    FWORD PTR [rsi-0x1f007462]
   14000f54d:	(bad)  
   14000f54f:	jmp    rsi
   14000f551:	out    0xe6,al
   14000f553:	jmp    rsi
   14000f555:	out    0xe6,al
   14000f557:	jmp    rsi
   14000f559:	out    0xe6,al
   14000f55b:	jmp    rsi
   14000f55d:	out    0xe6,al
   14000f55f:	jmp    rsi
   14000f561:	out    0xe6,al
   14000f563:	jmp    rsi
   14000f565:	out    0xe6,al
   14000f567:	jmp    rsi
   14000f569:	out    0xe6,al
   14000f56b:	jmp    rsi
   14000f56d:	out    0xe6,al
   14000f56f:	(bad)  
   14000f570:	fcomp  st(0)
   14000f572:	fdivr  st,st(7)
   14000f574:	mov    dh,BYTE PTR [rbp+0x58]
   14000f577:	dec    DWORD PTR [rdi+rsi*2-0x272700a5]
   14000f57e:	fdivr  st,st(7)
   14000f580:	out    0xe6,al
   14000f582:	out    0xff,al
   14000f584:	out    0xe6,al
   14000f586:	out    0xff,al
   14000f588:	out    0xe6,al
   14000f58a:	out    0xff,al
   14000f58c:	out    0xe6,al
   14000f58e:	out    0xff,al
   14000f590:	out    0xe7,eax
   14000f592:	out    0xff,eax
   14000f594:	out    0xe7,eax
   14000f596:	out    0xff,eax
   14000f598:	out    0xe7,eax
   14000f59a:	out    0xff,eax
   14000f59c:	out    0xe7,eax
   14000f59e:	out    0xff,eax
   14000f5a0:	out    0xe7,eax
   14000f5a2:	out    0xff,eax
   14000f5a4:	out    0xe7,eax
   14000f5a6:	out    0xff,eax
   14000f5a8:	out    0xe7,eax
   14000f5aa:	out    0xff,eax
   14000f5ac:	out    0xe7,eax
   14000f5ae:	out    0xff,eax
   14000f5b0:	(bad)  
   14000f5b2:	sar    bh,1
   14000f5b4:	mov    cl,0xa1
   14000f5b6:	(bad)  
   14000f5b7:	(bad)  
   14000f5b8:	mov    ecx,0xe7ff9bac
   14000f5bd:	out    0xe7,eax
   14000f5bf:	jmp    rdi
   14000f5c1:	out    0xe7,eax
   14000f5c3:	jmp    rdi
   14000f5c5:	out    0xe7,eax
   14000f5c7:	jmp    rdi
   14000f5c9:	out    0xe7,eax
   14000f5cb:	jmp    rdi
   14000f5cd:	out    0xe7,eax
   14000f5cf:	jmp    rdi
   14000f5d1:	out    0xe7,eax
   14000f5d3:	jmp    rdi
   14000f5d5:	out    0xe7,eax
   14000f5d7:	jmp    rdi
   14000f5d9:	out    0xe7,eax
   14000f5db:	jmp    rdi
   14000f5dd:	out    0xe7,eax
   14000f5df:	jmp    rdi
   14000f5e1:	out    0xe7,eax
   14000f5e3:	jmp    rdi
   14000f5e5:	out    0xe7,eax
   14000f5e7:	jmp    rdx
   14000f5e9:	loopne 0x14000f5c9
   14000f5eb:	jmp    rsi
   14000f5ed:	in     eax,0xe4
   14000f5ef:	jmp    rdi
   14000f5f1:	out    0xe7,eax
   14000f5f3:	jmp    rdi
   14000f5f5:	out    0xe7,eax
   14000f5f7:	jmp    rdi
   14000f5f9:	out    0xe7,eax
   14000f5fb:	jmp    rdi
   14000f5fd:	out    0xe7,eax
   14000f5ff:	jmp    rbx
   14000f601:	loop   0x14000f5e4
   14000f603:	push   QWORD PTR [rbp+riz*4+0x6c87ff92]
   14000f60a:	rex.WR jmp FWORD PTR [rdx+rbx*4-0x2f2a007b]
   14000f612:	leave  
   14000f613:	jmp    rdi
   14000f615:	out    0xe7,eax
   14000f617:	jmp    rdi
   14000f619:	out    0xe7,eax
   14000f61b:	jmp    rdi
   14000f61d:	out    0xe7,eax
   14000f61f:	jmp    rdi
   14000f621:	out    0xe7,eax
   14000f623:	jmp    rsi
   14000f625:	out    0xe6,al
   14000f627:	jmp    rsi
   14000f629:	out    0xe6,al
   14000f62b:	jmp    rsi
   14000f62d:	out    0xe6,al
   14000f62f:	(bad)  
   14000f630:	fcomp  st(0)
   14000f632:	fdivr  st,st(7)
   14000f634:	mov    WORD PTR [rdi+0x5b],?
   14000f637:	dec    DWORD PTR [rsi-0x2600a287]
   14000f63d:	(bad)  
   14000f63f:	jmp    rdi
   14000f641:	out    0xe7,eax
   14000f643:	jmp    rdi
   14000f645:	out    0xe7,eax
   14000f647:	jmp    rdi
   14000f649:	out    0xe7,eax
   14000f64b:	jmp    rdi
   14000f64d:	out    0xe7,eax
   14000f64f:	(bad)  
   14000f650:	call   0x12900df3d
   14000f655:	call   0x128e9f642
   14000f65a:	call   0x128e9df5e
   14000f65f:	(bad)  
   14000f660:	call   0x12900df4d
   14000f665:	call   0x128e9f652
   14000f66a:	call   0x128e9df6e
   14000f66f:	(bad)  
   14000f670:	call   0x12500df5d
   14000f675:	in     al,0xe2
   14000f677:	dec    edi
   14000f679:	enter  0xffbf,0xd3
   14000f67d:	int    0xc6
   14000f67f:	call   rbx
   14000f681:	(bad)  
   14000f682:	(bad)  
   14000f683:	call   rbx
   14000f685:	(bad)  
   14000f686:	(bad)  
   14000f687:	call   rbx
   14000f689:	int    0xc6
   14000f68b:	call   rbx
   14000f68d:	int    0xc6
   14000f68f:	call   rbx
   14000f691:	int    0xc6
   14000f693:	call   rdx
   14000f695:	retf   
   14000f696:	(bad)  
   14000f697:	call   rdi
   14000f699:	ror    ah,cl
   14000f69b:	jmp    rsi
   14000f69d:	out    0xe4,al
   14000f69f:	(bad)  
   14000f6a0:	call   0x12900de8d
   14000f6a5:	call   0x128e9f692
   14000f6aa:	call   0x128e9dfae
   14000f6af:	(bad)  
   14000f6b0:	call   0x12900df9d
   14000f6b5:	call   0x128e9f6a2
   14000f6ba:	call   0x128e9dfbe
   14000f6bf:	(bad)  
   14000f6c0:	call   0x12700dfad
   14000f6c5:	in     eax,0xe4
   14000f6c7:	jmp    QWORD PTR [rdx+rdx*4+0x6f89ff7a]
   14000f6ce:	rex.WRXB jmp QWORD PTR [r10-0x17008971]
   14000f6d5:	call   0x128e9f6c2
   14000f6da:	call   0x128e9dfde
   14000f6df:	(bad)  
   14000f6e0:	call   0x12800dfcd
   14000f6e5:	out    0xe7,eax
   14000f6e7:	jmp    rdi
   14000f6e9:	out    0xe7,eax
   14000f6eb:	jmp    rdi
   14000f6ed:	out    0xe7,eax
   14000f6ef:	(bad)  
   14000f6f0:	(bad)  
   14000f6f2:	fcos   
   14000f6f4:	mov    ?,WORD PTR [rcx+0x5d]
   14000f6f7:	call   QWORD PTR [rax-0x25009f84]
   14000f6fd:	fcmovu st,st(2)
   14000f6ff:	(bad)  
   14000f700:	call   0x12900dfed
   14000f705:	call   0x128e9f6f2
   14000f70a:	call   0x128e9e00e
   14000f70f:	(bad)  
   14000f710:	jmp    0x12a00e0fe
   14000f715:	jmp    0x129eaf703
   14000f71a:	jmp    0x129eae11e
   14000f71f:	(bad)  
   14000f720:	jmp    0x11c00e10e
   14000f725:	fcom   st(2)
   14000f727:	inc    ecx
   14000f729:	mov    bh,0xa9
   14000f72b:	push   QWORD PTR [rcx-0x6000715e]
   14000f731:	mov    esi,DWORD PTR [rbx-0x1]
   14000f734:	(bad)  
   14000f735:	test   BYTE PTR [rcx-0x1],ch
   14000f738:	cdq    
   14000f739:	sub    DWORD PTR [rax-0x1],0xffffff96
   14000f73d:	jg     0x14000f7a2
   14000f73f:	call   QWORD PTR [rsi-0x69009c81]
   14000f745:	jg     0x14000f7aa
   14000f747:	call   QWORD PTR [rsi-0x69009c81]
   14000f74d:	jg     0x14000f7b2
   14000f74f:	call   QWORD PTR [rbp-0x69009b81]
   14000f755:	jg     0x14000f7ba
   14000f757:	jmp    QWORD PTR [rdx-0x5d00a27d]
   14000f75d:	xchg   DWORD PTR [rsi-0x1],esp
   14000f760:	cwde   
   14000f761:	test   DWORD PTR [rsi-0x1],ebp
   14000f764:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f765:	xchg   ebx,eax
   14000f766:	jge    0x14000f767
   14000f768:	mov    cl,0xa1
   14000f76a:	mov    ?,edi
   14000f76c:	shl    BYTE PTR [rsi+riz*4-0x3c342d01],0xff
   14000f774:	jrcxz  0x14000f757
   14000f776:	fdivp  st(7),st
   14000f778:	jmp    0x12a00e166
   14000f77d:	jmp    0x129eaf76b
   14000f782:	jmp    0x129eae186
   14000f787:	dec    edx
   14000f789:	ret    0xffb8
   14000f78c:	mov    esi,DWORD PTR [rcx+0x52]
   14000f78f:	dec    DWORD PTR [rdx-0x1600af90]
   14000f795:	jmp    0x129eaf783
   14000f79a:	jmp    0x129eae19e
   14000f79f:	(bad)  
   14000f7a0:	jmp    0x12900e18e
   14000f7a5:	call   0x128e9f792
   14000f7aa:	call   0x128e9e0ae
   14000f7af:	(bad)  
   14000f7b0:	fcmovu st,st(2)
   14000f7b2:	(bad)  
   14000f7b4:	nop
   14000f7b5:	jl     0x14000f817
   14000f7b7:	call   QWORD PTR [rbx-0x24009c82]
   14000f7bd:	fcmovnu st,st(3)
   14000f7bf:	(bad)  
   14000f7c0:	jmp    0x12a00e1ae
   14000f7c5:	jmp    0x129eaf7b3
   14000f7ca:	jmp    0x129eae1ce
   14000f7cf:	(bad)  
   14000f7d0:	(bad)  
   14000f7d1:	(bad)  
   14000f7d2:	(bad)  
   14000f7d3:	(bad)  
   14000f7d4:	(bad)  
   14000f7d5:	(bad)  
   14000f7d6:	(bad)  
   14000f7d7:	(bad)  
   14000f7d8:	(bad)  
   14000f7d9:	(bad)  
   14000f7da:	(bad)  
   14000f7db:	(bad)  
   14000f7dc:	(bad)  
   14000f7dd:	(bad)  
   14000f7de:	(bad)  
   14000f7df:	(bad)  
   14000f7e0:	jmp    0xf400e1ce
   14000f7e5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f7e6:	xchg   ecx,eax
   14000f7e7:	dec    DWORD PTR [rbx-0x7700ac8f]
   14000f7ed:	ins    DWORD PTR es:[rdi],dx
   14000f7ee:	rex.WRX dec QWORD PTR [rbx-0x4e00ab8f]
   14000f7f5:	movabs ds:0xc5cdffb5c0caff8e,al
   14000f7fe:	mov    ebx,0xb6c1caff
   14000f803:	dec    edx
   14000f805:	shl    BYTE PTR [rdi+rdi*8-0x4b3f36],0xca
   14000f80d:	shl    BYTE PTR [rdi+rdi*8-0x4e3e33],0xcc
   14000f815:	mov    edi,0xbcbdffb1
   14000f81a:	mov    eax,0xadb6bcff
   14000f81f:	inc    ebx
   14000f821:	lods   al,BYTE PTR ds:[rsi]
   14000f822:	xchg   ecx,eax
   14000f823:	(bad)  
   14000f824:	mov    eax,0xadff92a8
   14000f829:	sahf   
   14000f82a:	mov    edi,edi
   14000f82c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f82d:	nop
   14000f82e:	js     0x14000f82f
   14000f830:	movabs ds:0xe6ffa7b5c1ff768d,al
   14000f839:	in     eax,0xe3
   14000f83b:	(bad)  
   14000f83c:	(bad)  
   14000f83d:	(bad)  
   14000f83e:	(bad)  
   14000f83f:	(bad)  
   14000f840:	(bad)  
   14000f841:	(bad)  
   14000f842:	(bad)  
   14000f843:	(bad)  
   14000f844:	(bad)  
   14000f845:	(bad)  
   14000f846:	(bad)  
   14000f847:	inc    ebp
   14000f849:	mov    ecx,0x6f8affac
   14000f84e:	push   rcx
   14000f84f:	dec    DWORD PTR [rcx-0x1500af91]
   14000f855:	(bad)  
   14000f856:	(bad)  
   14000f857:	(bad)  
   14000f858:	(bad)  
   14000f859:	(bad)  
   14000f85a:	(bad)  
   14000f85b:	(bad)  
   14000f85c:	(bad)  
   14000f85d:	(bad)  
   14000f85e:	(bad)  
   14000f85f:	(bad)  
   14000f860:	(bad)  
   14000f861:	(bad)  
   14000f862:	(bad)  
   14000f863:	(bad)  
   14000f864:	jmp    0x12a00e252
   14000f869:	jmp    0x129eaf857
   14000f86e:	jmp    0x11bdcd472
   14000f873:	call   QWORD PTR [rbx-0x6a009c82]
   14000f879:	and    BYTE PTR [rbp-0x1],0xdc
   14000f87d:	(bad)  
   14000f87f:	(bad)  
   14000f880:	(bad)  
   14000f881:	(bad)  
   14000f882:	(bad)  
   14000f883:	(bad)  
   14000f884:	(bad)  
   14000f885:	(bad)  
   14000f886:	(bad)  
   14000f887:	(bad)  
   14000f888:	(bad)  
   14000f889:	(bad)  
   14000f88a:	(bad)  
   14000f88b:	(bad)  
   14000f88c:	(bad)  
   14000f88d:	(bad)  
   14000f88e:	(bad)  
   14000f88f:	(bad)  
   14000f890:	jmp    0x14000f87d
   14000f892:	jmp    0x14000f893
   14000f894:	jmp    0x14000f881
   14000f896:	jmp    0x14000f897
   14000f898:	jmp    0x14000f885
   14000f89a:	jmp    0x14000f89b
   14000f89c:	jmp    0x14000f889
   14000f89e:	jmp    0x14000f89f
   14000f8a0:	jmp    0x14000f88d
   14000f8a2:	jmp    0x14000f8a3
   14000f8a4:	xlat   BYTE PTR ds:[rbx]
   14000f8a5:	ror    ebx,cl
   14000f8a7:	push   QWORD PTR [rax-0x66007360]
   14000f8ad:	test   BYTE PTR [rcx-0x1],ch
   14000f8b0:	(bad)  
   14000f8b1:	test   DWORD PTR [rbx-0x1],ebp
   14000f8b4:	mov    bh,0xa9
   14000f8b6:	xchg   esi,eax
   14000f8b7:	call   rbx
   14000f8b9:	int3   
   14000f8ba:	ret    
   14000f8bb:	jmp    rdx
   14000f8bd:	loopne 0x14000f89c
   14000f8bf:	(bad)  
   14000f8c0:	jmp    0x14000f8ad
   14000f8c2:	jmp    0x14000f8c3
   14000f8c4:	jmp    0x14000f8b1
   14000f8c6:	jmp    0x14000f8c7
   14000f8c8:	jmp    0x14000f8b5
   14000f8ca:	jmp    0x14000f8cb
   14000f8cc:	jmp    0x14000f8b9
   14000f8ce:	jmp    0x14000f8cf
   14000f8d0:	jmp    0x14000f8bd
   14000f8d2:	jmp    0x14000f8d3
   14000f8d4:	jmp    0x14000f8c1
   14000f8d6:	jmp    0x14000f8d7
   14000f8d8:	retf   0xebd8
   14000f8db:	jmp    QWORD PTR [rsi-0x19001f41]
   14000f8e1:	out    0xe5,al
   14000f8e3:	(bad)  
   14000f8e4:	call   0x12600ddd0
   14000f8e9:	loop   0x14000f8ca
   14000f8eb:	jmp    rax
   14000f8ed:	(bad)  
   14000f8ef:	(bad)  
   14000f8f0:	(bad)  
   14000f8f2:	sar    edi,cl
   14000f8f4:	fstp   st(2)
   14000f8f6:	(bad)  
   14000f8f7:	(bad)  
   14000f8f8:	(bad)  
   14000f8fa:	xlat   BYTE PTR ds:[rbx]
   14000f8fb:	(bad)  
   14000f8fc:	fcmovbe st,st(5)
   14000f8fe:	(bad)  
   14000f8ff:	(bad)  
   14000f900:	(bad)  
   14000f902:	sar    bh,cl
   14000f904:	retf   
   14000f905:	ret    0xffb6
   14000f908:	xchg   edx,eax
   14000f909:	jp     0x14000f969
   14000f90b:	dec    DWORD PTR [rdi-0x4e00a78a]
   14000f911:	movabs eax,ds:0xebebffebebebff8e
   14000f91a:	jmp    0x14000f91b
   14000f91c:	jmp    0x14000f909
   14000f91e:	jmp    0x14000f91f
   14000f920:	jmp    0x14000f90d
   14000f922:	jmp    0x14000f923
   14000f924:	(bad)  
   14000f925:	(bad)  
   14000f926:	(bad)  
   14000f927:	(bad)  
   14000f928:	(bad)  
   14000f929:	(bad)  
   14000f92a:	(bad)  
   14000f92b:	(bad)  
   14000f92c:	(bad)  
   14000f92d:	(bad)  
   14000f92e:	(bad)  
   14000f92f:	(bad)  
   14000f930:	(bad)  
   14000f932:	fdiv   st(7),st
   14000f934:	xchg   ebp,eax
   14000f935:	and    BYTE PTR [rbp-0x1],0x97
   14000f939:	sub    DWORD PTR [rax-0x1],0xffffffdd
   14000f93d:	fstp   st(5)
   14000f93f:	(bad)  
   14000f940:	jmp    0x14000f92d
   14000f942:	jmp    0x14000f943
   14000f944:	jmp    0x14000f931
   14000f946:	jmp    0x14000f947
   14000f948:	jmp    0x14000f935
   14000f94a:	jmp    0x14000f94b
   14000f94c:	jmp    0x14000f939
   14000f94e:	jmp    0x14000f94f
   14000f950:	in     eax,dx
   14000f951:	in     eax,dx
   14000f952:	in     eax,dx
   14000f953:	(bad)  
   14000f954:	in     eax,dx
   14000f955:	in     eax,dx
   14000f956:	in     eax,dx
   14000f957:	(bad)  
   14000f958:	in     eax,dx
   14000f959:	in     eax,dx
   14000f95a:	in     eax,dx
   14000f95b:	(bad)  
   14000f95c:	in     eax,dx
   14000f95d:	in     eax,dx
   14000f95e:	in     eax,dx
   14000f95f:	(bad)  
   14000f960:	in     eax,dx
   14000f961:	in     eax,dx
   14000f962:	in     eax,dx
   14000f963:	(bad)  
   14000f964:	in     eax,dx
   14000f965:	in     eax,dx
   14000f966:	in     eax,dx
   14000f967:	(bad)  
   14000f968:	call   0x12200e054
   14000f96d:	fstp   st(1)
   14000f96f:	dec    edx
   14000f971:	shl    DWORD PTR [rsi-0x6a574801],0xff
   14000f978:	mov    edx,0xc7ff9aac
   14000f97d:	mov    ebp,0xd6dbffb1
   14000f982:	iret   
   14000f983:	(bad)  
   14000f984:	in     eax,dx
   14000f985:	in     eax,dx
   14000f986:	in     eax,dx
   14000f987:	(bad)  
   14000f988:	in     eax,dx
   14000f989:	in     eax,dx
   14000f98a:	in     eax,dx
   14000f98b:	(bad)  
   14000f98c:	in     eax,dx
   14000f98d:	in     eax,dx
   14000f98e:	in     eax,dx
   14000f98f:	(bad)  
   14000f990:	fsubr  st(2),st
   14000f992:	jmp    0x12de0ce96
   14000f997:	jmp    rax
   14000f999:	out    0xed,al
   14000f99b:	jmp    FWORD PTR [rdx-0x5c]
   14000f99e:	in     eax,dx
   14000f99f:	jmp    QWORD PTR [rax-0x68]
   14000f9a2:	in     al,0xff
   14000f9a4:	in     al,0xe8
   14000f9a6:	in     eax,dx
   14000f9a7:	(bad)  
   14000f9a8:	in     eax,dx
   14000f9a9:	in     eax,dx
   14000f9aa:	in     eax,dx
   14000f9ab:	(bad)  
   14000f9ac:	in     eax,dx
   14000f9ad:	in     eax,dx
   14000f9ae:	in     eax,dx
   14000f9af:	(bad)  
   14000f9b0:	in     eax,dx
   14000f9b1:	in     eax,dx
   14000f9b2:	in     eax,dx
   14000f9b3:	(bad)  
   14000f9b4:	in     eax,dx
   14000f9b5:	in     eax,dx
   14000f9b6:	in     eax,dx
   14000f9b7:	jmp    rsp
   14000f9b9:	loop   0x14000f99b
   14000f9bb:	dec    edx
   14000f9bd:	shl    BYTE PTR [rbp-0x6c594a01],0xff
   14000f9c4:	sahf   
   14000f9c5:	mov    BYTE PTR [rax-0x1],dh
   14000f9c8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f9c9:	xchg   ebx,eax
   14000f9ca:	jl     0x14000f9cb
   14000f9cc:	retf   
   14000f9cd:	ret    0xffb8
   14000f9d0:	out    0xe6,eax
   14000f9d2:	jrcxz  0x14000f9d3
   14000f9d4:	in     eax,dx
   14000f9d5:	in     eax,dx
   14000f9d6:	in     eax,dx
   14000f9d7:	(bad)  
   14000f9d8:	in     eax,dx
   14000f9d9:	in     eax,dx
   14000f9da:	in     eax,dx
   14000f9db:	(bad)  
   14000f9dc:	in     eax,dx
   14000f9dd:	in     eax,dx
   14000f9de:	in     eax,dx
   14000f9df:	(bad)  
   14000f9e0:	in     eax,dx
   14000f9e1:	in     eax,dx
   14000f9e2:	in     eax,dx
   14000f9e3:	(bad)  
   14000f9e4:	jmp    0x14000f9d1
   14000f9e6:	jmp    0x14000f9e7
   14000f9e8:	jmp    0x14000f9d5
   14000f9ea:	jmp    0x14000f9eb
   14000f9ec:	jmp    0x14000f9d9
   14000f9ee:	jmp    0x14000f9ef
   14000f9f0:	fstp   st(5)
   14000f9f2:	(bad)  
   14000f9f4:	xchg   edi,eax
   14000f9f5:	sub    DWORD PTR [rax-0x1],0xffffff9a
   14000f9f9:	test   DWORD PTR [rbx-0x1],ebp
   14000f9fc:	(bad)  
   14000f9fe:	fdivp  st(7),st
   14000fa00:	in     al,dx
   14000fa01:	in     al,dx
   14000fa02:	in     al,dx
   14000fa03:	(bad)  
   14000fa04:	in     eax,dx
   14000fa05:	in     eax,dx
   14000fa06:	in     eax,dx
   14000fa07:	(bad)  
   14000fa08:	in     eax,dx
   14000fa09:	in     eax,dx
   14000fa0a:	in     eax,dx
   14000fa0b:	(bad)  
   14000fa0c:	in     eax,dx
   14000fa0d:	in     eax,dx
   14000fa0e:	in     eax,dx
   14000fa0f:	(bad)  
   14000fa10:	out    dx,al
   14000fa11:	out    dx,al
   14000fa12:	out    dx,al
   14000fa13:	(bad)  
   14000fa14:	out    dx,al
   14000fa15:	out    dx,al
   14000fa16:	out    dx,al
   14000fa17:	(bad)  
   14000fa18:	out    dx,al
   14000fa19:	out    dx,al
   14000fa1a:	out    dx,al
   14000fa1b:	(bad)  
   14000fa1c:	out    dx,al
   14000fa1d:	out    dx,al
   14000fa1e:	out    dx,al
   14000fa1f:	(bad)  
   14000fa20:	out    dx,al
   14000fa21:	out    dx,al
   14000fa22:	out    dx,al
   14000fa23:	(bad)  
   14000fa24:	out    dx,al
   14000fa25:	out    dx,al
   14000fa26:	out    dx,al
   14000fa27:	(bad)  
   14000fa28:	out    dx,al
   14000fa29:	out    dx,al
   14000fa2a:	out    dx,al
   14000fa2b:	(bad)  
   14000fa2c:	out    dx,al
   14000fa2d:	out    dx,al
   14000fa2e:	out    dx,al
   14000fa2f:	(bad)  
   14000fa30:	in     eax,dx
   14000fa31:	in     al,dx
   14000fa32:	jmp    0x14000fa33
   14000fa34:	jmp    0x12800e121
   14000fa39:	out    0xe3,al
   14000fa3b:	jmp    rdx
   14000fa3d:	(bad)  
   14000fa3f:	jmp    rsp
   14000fa41:	loope  0x14000fa1f
   14000fa43:	(bad)  
   14000fa44:	out    dx,al
   14000fa45:	out    dx,al
   14000fa46:	out    dx,al
   14000fa47:	(bad)  
   14000fa48:	out    dx,al
   14000fa49:	out    dx,al
   14000fa4a:	out    dx,al
   14000fa4b:	call   rbp
   14000fa4d:	loopne 0x14000fa3f
   14000fa4f:	jmp    FWORD PTR [rbp+riz*4-0x15]
   14000fa53:	push   QWORD PTR [rbp-0x11001232]
   14000fa59:	out    dx,al
   14000fa5a:	out    dx,al
   14000fa5b:	call   QWORD PTR [rdi+0xbffebbe]
   14000fa61:	push   0xffffffffad7affe7
   14000fa66:	icebp  
   14000fa67:	(bad)  
   14000fa68:	out    dx,al
   14000fa69:	out    dx,al
   14000fa6a:	out    dx,al
   14000fa6b:	(bad)  
   14000fa6c:	out    dx,al
   14000fa6d:	out    dx,al
   14000fa6e:	out    dx,al
   14000fa6f:	(bad)  
   14000fa70:	out    dx,al
   14000fa71:	out    dx,al
   14000fa72:	out    dx,al
   14000fa73:	(bad)  
   14000fa74:	out    dx,al
   14000fa75:	out    dx,al
   14000fa76:	out    dx,al
   14000fa77:	(bad)  
   14000fa78:	out    dx,al
   14000fa79:	out    dx,al
   14000fa7a:	in     eax,dx
   14000fa7b:	(bad)  
   14000fa7c:	call   0x11900de67
   14000fa81:	ror    ebx,cl
   14000fa83:	call   rsi
   14000fa85:	ror    al,1
   14000fa87:	jmp    rdi
   14000fa89:	in     eax,0xe2
   14000fa8b:	(bad)  
   14000fa8c:	in     eax,dx
   14000fa8d:	in     eax,dx
   14000fa8e:	in     eax,dx
   14000fa8f:	(bad)  
   14000fa90:	out    dx,al
   14000fa91:	out    dx,al
   14000fa92:	out    dx,al
   14000fa93:	(bad)  
   14000fa94:	out    dx,al
   14000fa95:	out    dx,al
   14000fa96:	out    dx,al
   14000fa97:	(bad)  
   14000fa98:	out    dx,al
   14000fa99:	out    dx,al
   14000fa9a:	out    dx,al
   14000fa9b:	(bad)  
   14000fa9c:	out    dx,al
   14000fa9d:	out    dx,al
   14000fa9e:	out    dx,al
   14000fa9f:	(bad)  
   14000faa0:	out    dx,al
   14000faa1:	out    dx,al
   14000faa2:	out    dx,al
   14000faa3:	(bad)  
   14000faa4:	in     eax,dx
   14000faa5:	in     eax,dx
   14000faa6:	in     eax,dx
   14000faa7:	(bad)  
   14000faa8:	in     eax,dx
   14000faa9:	in     eax,dx
   14000faaa:	in     eax,dx
   14000faab:	(bad)  
   14000faac:	in     al,dx
   14000faad:	in     al,dx
   14000faae:	in     al,dx
   14000faaf:	(bad)  
   14000fab0:	(bad)  
   14000fab2:	fdivp  st(7),st
   14000fab4:	(bad)  
   14000fab5:	test   DWORD PTR [rbx-0x1],ebp
   14000fab8:	lahf   
   14000fab9:	mov    dh,BYTE PTR [rax-0x1]
   14000fabc:	loopne 0x14000fa9e
   14000fabe:	loopne 0x14000fabf
   14000fac0:	out    dx,al
   14000fac1:	out    dx,al
   14000fac2:	out    dx,al
   14000fac3:	(bad)  
   14000fac4:	out    dx,eax
   14000fac5:	out    dx,eax
   14000fac6:	out    dx,eax
   14000fac7:	(bad)  
   14000fac8:	out    dx,eax
   14000fac9:	out    dx,eax
   14000faca:	out    dx,eax
   14000facb:	(bad)  
   14000facc:	out    dx,eax
   14000facd:	out    dx,eax
   14000face:	out    dx,eax
   14000facf:	(bad)  
   14000fad0:	out    dx,eax
   14000fad1:	out    dx,eax
   14000fad2:	out    dx,eax
   14000fad3:	(bad)  
   14000fad4:	out    dx,eax
   14000fad5:	out    dx,eax
   14000fad6:	out    dx,eax
   14000fad7:	(bad)  
   14000fad8:	out    dx,eax
   14000fad9:	out    dx,eax
   14000fada:	out    dx,eax
   14000fadb:	(bad)  
   14000fadc:	out    dx,eax
   14000fadd:	out    dx,eax
   14000fade:	out    dx,eax
   14000fadf:	(bad)  
   14000fae0:	out    dx,eax
   14000fae1:	out    dx,eax
   14000fae2:	out    dx,eax
   14000fae3:	(bad)  
   14000fae4:	out    dx,eax
   14000fae5:	out    dx,eax
   14000fae6:	out    dx,eax
   14000fae7:	(bad)  
   14000fae8:	out    dx,eax
   14000fae9:	out    dx,eax
   14000faea:	out    dx,eax
   14000faeb:	(bad)  
   14000faec:	out    dx,eax
   14000faed:	out    dx,eax
   14000faee:	out    dx,eax
   14000faef:	(bad)  
   14000faf0:	out    dx,eax
   14000faf1:	out    dx,eax
   14000faf2:	out    dx,eax
   14000faf3:	(bad)  
   14000faf4:	out    dx,eax
   14000faf5:	out    dx,eax
   14000faf6:	out    dx,eax
   14000faf7:	(bad)  
   14000faf8:	out    dx,eax
   14000faf9:	out    dx,eax
   14000fafa:	out    dx,eax
   14000fafb:	(bad)  
   14000fafc:	out    dx,eax
   14000fafd:	out    dx,eax
   14000fafe:	out    dx,eax
   14000faff:	(bad)  
   14000fb00:	out    dx,eax
   14000fb01:	out    dx,eax
   14000fb02:	out    dx,al
   14000fb03:	(bad)  
   14000fb04:	out    dx,eax
   14000fb05:	out    dx,eax
   14000fb06:	out    dx,eax
   14000fb07:	(bad)  
   14000fb08:	fsub   st,st(2)
   14000fb0a:	out    dx,eax
   14000fb0b:	call   QWORD PTR [rdx-0x6a]
   14000fb0e:	call   0x12aaa6e12
   14000fb13:	(bad)  
   14000fb14:	(bad)  
   14000fb15:	in     al,dx
   14000fb16:	out    dx,eax
   14000fb17:	(bad)  
   14000fb18:	out    dx,eax
   14000fb19:	out    dx,eax
   14000fb1a:	out    dx,eax
   14000fb1b:	call   QWORD PTR [rdi+0x8ffecbe]
   14000fb21:	addr32 in al,0xff
   14000fb24:	xor    eax,DWORD PTR [rbx-0x27390019]
   14000fb2a:	in     eax,dx
   14000fb2b:	(bad)  
   14000fb2c:	out    dx,eax
   14000fb2d:	out    dx,eax
   14000fb2e:	out    dx,eax
   14000fb2f:	(bad)  
   14000fb30:	out    dx,eax
   14000fb31:	out    dx,eax
   14000fb32:	out    dx,eax
   14000fb33:	(bad)  
   14000fb34:	out    dx,eax
   14000fb35:	out    dx,eax
   14000fb36:	out    dx,eax
   14000fb37:	(bad)  
   14000fb38:	out    dx,eax
   14000fb39:	out    dx,eax
   14000fb3a:	out    dx,eax
   14000fb3b:	(bad)  
   14000fb3c:	out    dx,eax
   14000fb3d:	out    dx,eax
   14000fb3e:	out    dx,eax
   14000fb3f:	(bad)  
   14000fb40:	out    dx,eax
   14000fb41:	out    dx,eax
   14000fb42:	out    dx,al
   14000fb43:	(bad)  
   14000fb44:	out    dx,eax
   14000fb45:	out    dx,eax
   14000fb46:	out    dx,eax
   14000fb47:	(bad)  
   14000fb48:	out    dx,eax
   14000fb49:	out    dx,eax
   14000fb4a:	out    dx,eax
   14000fb4b:	(bad)  
   14000fb4c:	out    dx,eax
   14000fb4d:	out    dx,eax
   14000fb4e:	out    dx,eax
   14000fb4f:	(bad)  
   14000fb50:	out    dx,eax
   14000fb51:	out    dx,eax
   14000fb52:	out    dx,eax
   14000fb53:	(bad)  
   14000fb54:	out    dx,eax
   14000fb55:	out    dx,eax
   14000fb56:	out    dx,eax
   14000fb57:	(bad)  
   14000fb58:	out    dx,eax
   14000fb59:	out    dx,eax
   14000fb5a:	out    dx,eax
   14000fb5b:	(bad)  
   14000fb5c:	out    dx,eax
   14000fb5d:	out    dx,eax
   14000fb5e:	out    dx,eax
   14000fb5f:	(bad)  
   14000fb60:	out    dx,eax
   14000fb61:	out    dx,eax
   14000fb62:	out    dx,eax
   14000fb63:	(bad)  
   14000fb64:	out    dx,eax
   14000fb65:	out    dx,eax
   14000fb66:	out    dx,eax
   14000fb67:	(bad)  
   14000fb68:	out    dx,eax
   14000fb69:	out    dx,eax
   14000fb6a:	out    dx,eax
   14000fb6b:	(bad)  
   14000fb6c:	out    dx,al
   14000fb6d:	out    dx,al
   14000fb6e:	out    dx,al
   14000fb6f:	jmp    rax
   14000fb71:	loopne 0x14000fb53
   14000fb73:	call   FWORD PTR [rdi-0x5e008f76]
   14000fb79:	lea    esi,[rbx-0x1]
   14000fb7c:	loope  0x14000fb5f
   14000fb7e:	loope  0x14000fb7f
   14000fb80:	out    dx,eax
   14000fb81:	out    dx,eax
   14000fb82:	out    dx,eax
   14000fb83:	push   rax
   14000fb85:	lock lock push rax
   14000fb89:	lock lock push rax
   14000fb8d:	lock lock push rax
   14000fb91:	lock lock push rax
   14000fb95:	lock lock push rax
   14000fb99:	lock lock push rax
   14000fb9d:	lock lock push rax
   14000fba1:	lock lock push rax
   14000fba5:	lock lock push rax
   14000fba9:	lock lock push rax
   14000fbad:	lock lock push rax
   14000fbb1:	lock lock push rax
   14000fbb5:	lock lock push rax
   14000fbb9:	lock lock push rax
   14000fbbd:	lock lock push rax
   14000fbc1:	lock lock (bad) 
   14000fbc4:	(bad)  
   14000fbc6:	lock dec DWORD PTR [rsi-0x6d]
   14000fbca:	out    0xff,eax
   14000fbcc:	rex.XB (bad) 
   14000fbce:	out    0xff,eax
   14000fbd0:	(bad)  
   14000fbd2:	lock push rax
   14000fbd5:	lock lock dec eax
   14000fbd9:	fucomi st,st(6)
   14000fbdb:	push   QWORD PTR [rsi]
   14000fbdd:	test   edi,esp
   14000fbdf:	dec    DWORD PTR [rdx]
   14000fbe1:	push   0x7925ffe4
   14000fbe6:	in     eax,0xff
   14000fbe8:	mov    al,0xcc
   14000fbea:	in     eax,dx
   14000fbeb:	push   rax
   14000fbed:	lock lock push rax
   14000fbf1:	lock lock push rax
   14000fbf5:	lock lock push rax
   14000fbf9:	lock lock push rax
   14000fbfd:	lock lock push rax
   14000fc01:	lock lock push rax
   14000fc05:	lock lock push rax
   14000fc09:	lock lock push rax
   14000fc0d:	lock lock push rax
   14000fc11:	lock lock push rax
   14000fc15:	lock lock push rax
   14000fc19:	lock lock push rax
   14000fc1d:	lock lock push rax
   14000fc21:	lock lock push rax
   14000fc25:	lock lock push rax
   14000fc29:	lock lock (bad) 
   14000fc2c:	out    dx,eax
   14000fc2d:	out    dx,eax
   14000fc2e:	out    dx,eax
   14000fc2f:	jmp    rcx
   14000fc31:	loope  0x14000fc14
   14000fc33:	jmp    QWORD PTR [rcx-0x5c008c73]
   14000fc39:	(bad)  
   14000fc3a:	jne    0x14000fc3b
   14000fc3c:	loop   0x14000fc20
   14000fc3e:	loop   0x14000fc3f
   14000fc40:	lock lock lock push rcx
   14000fc45:	icebp  
   14000fc46:	icebp  
   14000fc47:	push   rcx
   14000fc49:	icebp  
   14000fc4a:	icebp  
   14000fc4b:	push   rcx
   14000fc4d:	icebp  
   14000fc4e:	icebp  
   14000fc4f:	push   rcx
   14000fc51:	icebp  
   14000fc52:	icebp  
   14000fc53:	push   rcx
   14000fc55:	icebp  
   14000fc56:	icebp  
   14000fc57:	push   rcx
   14000fc59:	icebp  
   14000fc5a:	icebp  
   14000fc5b:	push   rcx
   14000fc5d:	icebp  
   14000fc5e:	icebp  
   14000fc5f:	push   rcx
   14000fc61:	icebp  
   14000fc62:	icebp  
   14000fc63:	push   rcx
   14000fc65:	icebp  
   14000fc66:	icebp  
   14000fc67:	push   rcx
   14000fc69:	icebp  
   14000fc6a:	icebp  
   14000fc6b:	push   rcx
   14000fc6d:	icebp  
   14000fc6e:	icebp  
   14000fc6f:	push   rcx
   14000fc71:	icebp  
   14000fc72:	icebp  
   14000fc73:	push   rcx
   14000fc75:	icebp  
   14000fc76:	icebp  
   14000fc77:	push   rcx
   14000fc79:	icebp  
   14000fc7a:	icebp  
   14000fc7b:	push   rcx
   14000fc7d:	icebp  
   14000fc7e:	icebp  
   14000fc7f:	jmp    rsi
   14000fc81:	jmp    0x14000fc74
   14000fc83:	call   FWORD PTR [rdi-0x62]
   14000fc86:	jmp    0x12574188a
   14000fc8b:	push   QWORD PTR [rcx-0xe001133]
   14000fc91:	icebp  
   14000fc92:	icebp  
   14000fc93:	jmp    rax
   14000fc95:	out    0xf0,eax
   14000fc97:	call   FWORD PTR [rsi-0x62]
   14000fc9a:	jmp    0x1246b0a9e
   14000fc9f:	dec    DWORD PTR [rip+0x3affe46a]        # 0x17b00e10f
   14000fca5:	mov    bh,ah
   14000fca7:	inc    esi
   14000fca9:	(bad)  
   14000fcab:	push   rcx
   14000fcad:	icebp  
   14000fcae:	icebp  
   14000fcaf:	push   rcx
   14000fcb1:	icebp  
   14000fcb2:	icebp  
   14000fcb3:	push   rcx
   14000fcb5:	icebp  
   14000fcb6:	icebp  
   14000fcb7:	push   rcx
   14000fcb9:	icebp  
   14000fcba:	icebp  
   14000fcbb:	push   rcx
   14000fcbd:	icebp  
   14000fcbe:	icebp  
   14000fcbf:	push   rcx
   14000fcc1:	icebp  
   14000fcc2:	icebp  
   14000fcc3:	push   rcx
   14000fcc5:	icebp  
   14000fcc6:	icebp  
   14000fcc7:	push   rcx
   14000fcc9:	icebp  
   14000fcca:	icebp  
   14000fccb:	push   rcx
   14000fccd:	icebp  
   14000fcce:	icebp  
   14000fccf:	push   rcx
   14000fcd1:	icebp  
   14000fcd2:	icebp  
   14000fcd3:	push   rcx
   14000fcd5:	icebp  
   14000fcd6:	icebp  
   14000fcd7:	push   rcx
   14000fcd9:	icebp  
   14000fcda:	icebp  
   14000fcdb:	push   rcx
   14000fcdd:	icebp  
   14000fcde:	icebp  
   14000fcdf:	push   rcx
   14000fce1:	icebp  
   14000fce2:	icebp  
   14000fce3:	push   rcx
   14000fce5:	icebp  
   14000fce6:	icebp  
   14000fce7:	push   rcx
   14000fce9:	icebp  
   14000fcea:	icebp  
   14000fceb:	push   rax
   14000fced:	lock lock jmp rdx
   14000fcf1:	loop   0x14000fcd5
   14000fcf3:	jmp    QWORD PTR [rbx-0x59008a71]
   14000fcf9:	xchg   ecx,eax
   14000fcfa:	js     0x14000fcfb
   14000fcfc:	jrcxz  0x14000fce1
   14000fcfe:	jrcxz  0x14000fcff
   14000fd00:	icebp  
   14000fd01:	icebp  
   14000fd02:	icebp  
   14000fd03:	push   rdx
   14000fd05:	repnz repnz push rdx
   14000fd09:	repnz repnz push rdx
   14000fd0d:	repnz repnz push rdx
   14000fd11:	repnz repnz push rdx
   14000fd15:	repnz repnz push rdx
   14000fd19:	repnz repnz push rdx
   14000fd1d:	repnz repnz push rdx
   14000fd21:	repnz repnz push rdx
   14000fd25:	repnz repnz push rdx
   14000fd29:	repnz repnz push rdx
   14000fd2d:	repnz repnz push rdx
   14000fd31:	repnz repnz push rdx
   14000fd35:	repnz repnz push rdx
   14000fd39:	repnz repnz push rdx
   14000fd3d:	repnz bnd jmp QWORD PTR [rax+0xeffeec4]
   14000fd45:	imul   esp,ebp,0xffffffff
   14000fd48:	push   0xfffffffff2ffeaa4
   14000fd4d:	repnz repnz push rcx
   14000fd51:	icebp  
   14000fd52:	repnz jmp FWORD PTR [rbx+0x13ffeecb]
   14000fd59:	ins    DWORD PTR es:[rdi],dx
   14000fd5a:	in     eax,0xff
   14000fd5c:	(bad)  
   14000fd5d:	imul   esp,ebp,0xffffffff
   14000fd60:	(bad)  
   14000fd61:	jo     0x14000fd48
   14000fd63:	dec    DWORD PTR [rsi-0xd001346]
   14000fd69:	repnz repnz push rdx
   14000fd6d:	repnz repnz push rdx
   14000fd71:	repnz repnz push rdx
   14000fd75:	repnz repnz push rdx
   14000fd79:	repnz repnz push rdx
   14000fd7d:	repnz repnz push rdx
   14000fd81:	repnz repnz push rdx
   14000fd85:	repnz repnz push rdx
   14000fd89:	repnz repnz push rdx
   14000fd8d:	repnz repnz push rdx
   14000fd91:	repnz repnz push rdx
   14000fd95:	repnz repnz push rdx
   14000fd99:	repnz repnz push rdx
   14000fd9d:	repnz repnz push rdx
   14000fda1:	repnz repnz push rdx
   14000fda5:	repnz repnz push rdx
   14000fda9:	repnz repnz push rcx
   14000fdad:	icebp  
   14000fdae:	icebp  
   14000fdaf:	jmp    rbx
   14000fdb1:	jrcxz  0x14000fd96
   14000fdb3:	jmp    QWORD PTR [rsi-0x5700876f]
   14000fdb9:	xchg   esp,eax
   14000fdba:	jnp    0x14000fdbb
   14000fdbc:	in     al,0xe4
   14000fdbe:	in     al,0xff
   14000fdc0:	repnz repnz repnz push rbx
   14000fdc5:	repz repz push rbx
   14000fdc9:	repz repz push rbx
   14000fdcd:	repz repz push rbx
   14000fdd1:	repz repz push rbx
   14000fdd5:	repz repz push rbx
   14000fdd9:	repz repz push rbx
   14000fddd:	repz repz push rbx
   14000fde1:	repz repz push rbx
   14000fde5:	repz repz push rbx
   14000fde9:	repz repz push rbx
   14000fded:	repz repz push rbx
   14000fdf1:	repz repz push rbx
   14000fdf5:	repz repz push rbx
   14000fdf9:	repz repz jmp rdx
   14000fdfd:	jmp    0x1bf2ffdf4
   14000fe02:	out    0xff,eax
   14000fe04:	(bad)  
   14000fe05:	jbe    0x14000fded
   14000fe07:	jmp    FWORD PTR [rbx-0xc001034]
   14000fe0d:	repz repz jmp rbx
   14000fe11:	jmp    0xe062fe08
   14000fe16:	jmp    0x1256d0f1a
   14000fe1b:	call   QWORD PTR [rdx]
   14000fe1d:	ins    DWORD PTR es:[rdi],dx
   14000fe1e:	in     eax,0xff
   14000fe20:	push   rdi
   14000fe21:	cdq    
   14000fe22:	jmp    0x132ede626
   14000fe27:	push   rbx
   14000fe29:	repz repz push rbx
   14000fe2d:	repz repz push rbx
   14000fe31:	repz repz push rbx
   14000fe35:	repz repz push rbx
   14000fe39:	repz repz push rbx
   14000fe3d:	repz repz push rbx
   14000fe41:	repz repz push rbx
   14000fe45:	repz repz push rbx
   14000fe49:	repz repz push rbx
   14000fe4d:	repz repz push rbx
   14000fe51:	repz repz push rbx
   14000fe55:	repz repz push rbx
   14000fe59:	repz repz push rbx
   14000fe5d:	repz repz push rbx
   14000fe61:	repz repz push rbx
   14000fe65:	repz repz push rbx
   14000fe69:	repz repz push rdx
   14000fe6d:	repnz bnd jmp rsp
   14000fe71:	in     al,0xe4
   14000fe73:	jmp    FWORD PTR [rax-0x5500846c]
   14000fe79:	xchg   esi,eax
   14000fe7a:	jge    0x14000fe7b
   14000fe7c:	in     eax,0xe5
   14000fe7e:	in     eax,0xff
   14000fe80:	repz repz repz push rsp
   14000fe85:	hlt    
   14000fe86:	hlt    
   14000fe87:	push   rsp
   14000fe89:	hlt    
   14000fe8a:	hlt    
   14000fe8b:	push   rsp
   14000fe8d:	hlt    
   14000fe8e:	hlt    
   14000fe8f:	push   rsp
   14000fe91:	hlt    
   14000fe92:	hlt    
   14000fe93:	push   rsp
   14000fe95:	hlt    
   14000fe96:	hlt    
   14000fe97:	push   rsp
   14000fe99:	hlt    
   14000fe9a:	hlt    
   14000fe9b:	push   rsp
   14000fe9d:	hlt    
   14000fe9e:	hlt    
   14000fe9f:	push   rsp
   14000fea1:	hlt    
   14000fea2:	hlt    
   14000fea3:	push   rsp
   14000fea5:	hlt    
   14000fea6:	hlt    
   14000fea7:	push   rsp
   14000fea9:	hlt    
   14000feaa:	hlt    
   14000feab:	push   rsp
   14000fead:	hlt    
   14000feae:	hlt    
   14000feaf:	push   rsp
   14000feb1:	hlt    
   14000feb2:	hlt    
   14000feb3:	push   rsp
   14000feb5:	hlt    
   14000feb6:	hlt    
   14000feb7:	push   rsp
   14000feb9:	hlt    
   14000feba:	hlt    
   14000febb:	(bad)  
   14000febc:	mov    ebx,0x15fff0d5
   14000fec1:	outs   dx,DWORD PTR ds:[rsi]
   14000fec2:	in     eax,0xff
   14000fec4:	sub    eax,0xc0ffe77f
   14000fec9:	xlat   BYTE PTR ds:[rbx]
   14000feca:	icebp  
   14000fecb:	push   rsp
   14000fecd:	hlt    
   14000fece:	hlt    
   14000fecf:	(bad)  
   14000fed0:	fsubp  st(1),st
   14000fed2:	repz call QWORD PTR [rax-0x6b]
   14000fed6:	(bad)  
   14000fed7:	call   QWORD PTR [rbx]
   14000fed9:	ins    DWORD PTR es:[rdi],dx
   14000feda:	in     eax,0xff
   14000fedc:	sub    edi,DWORD PTR [rsi-0x19]
   14000fedf:	push   QWORD PTR [rdi-0xb000f2e]
   14000fee5:	hlt    
   14000fee6:	hlt    
   14000fee7:	push   rsp
   14000fee9:	hlt    
   14000feea:	hlt    
   14000feeb:	push   rsp
   14000feed:	hlt    
   14000feee:	hlt    
   14000feef:	push   rsp
   14000fef1:	hlt    
   14000fef2:	hlt    
   14000fef3:	push   rsp
   14000fef5:	hlt    
   14000fef6:	hlt    
   14000fef7:	push   rsp
   14000fef9:	hlt    
   14000fefa:	hlt    
   14000fefb:	push   rsp
   14000fefd:	hlt    
   14000fefe:	hlt    
   14000feff:	push   rsp
   14000ff01:	hlt    
   14000ff02:	hlt    
   14000ff03:	push   rsp
   14000ff05:	hlt    
   14000ff06:	hlt    
   14000ff07:	push   rsp
   14000ff09:	hlt    
   14000ff0a:	hlt    
   14000ff0b:	push   rsp
   14000ff0d:	hlt    
   14000ff0e:	hlt    
   14000ff0f:	push   rsp
   14000ff11:	hlt    
   14000ff12:	hlt    
   14000ff13:	push   rsp
   14000ff15:	hlt    
   14000ff16:	hlt    
   14000ff17:	push   rsp
   14000ff19:	hlt    
   14000ff1a:	hlt    
   14000ff1b:	push   rsp
   14000ff1d:	hlt    
   14000ff1e:	hlt    
   14000ff1f:	push   rsp
   14000ff21:	hlt    
   14000ff22:	hlt    
   14000ff23:	push   rsp
   14000ff25:	hlt    
   14000ff26:	hlt    
   14000ff27:	push   rsp
   14000ff29:	hlt    
   14000ff2a:	hlt    
   14000ff2b:	push   rbx
   14000ff2d:	repz repz jmp rbp
   14000ff31:	in     eax,0xe5
   14000ff33:	jmp    FWORD PTR [rdx-0x5300826a]
   14000ff39:	cwde   
   14000ff3a:	cmp    bh,0xe5
   14000ff3d:	in     eax,0xe5
   14000ff3f:	push   rbx
   14000ff41:	repz repz push rsp
   14000ff45:	hlt    
   14000ff46:	hlt    
   14000ff47:	push   rsp
   14000ff49:	hlt    
   14000ff4a:	hlt    
   14000ff4b:	push   rsp
   14000ff4d:	hlt    
   14000ff4e:	hlt    
   14000ff4f:	push   rsp
   14000ff51:	hlt    
   14000ff52:	hlt    
   14000ff53:	push   rsp
   14000ff55:	hlt    
   14000ff56:	hlt    
   14000ff57:	push   rsp
   14000ff59:	hlt    
   14000ff5a:	hlt    
   14000ff5b:	push   rsp
   14000ff5d:	hlt    
   14000ff5e:	hlt    
   14000ff5f:	push   rsp
   14000ff61:	hlt    
   14000ff62:	hlt    
   14000ff63:	push   rsp
   14000ff65:	hlt    
   14000ff66:	hlt    
   14000ff67:	push   rsp
   14000ff69:	hlt    
   14000ff6a:	hlt    
   14000ff6b:	push   rsp
   14000ff6d:	hlt    
   14000ff6e:	hlt    
   14000ff6f:	push   rsp
   14000ff71:	hlt    
   14000ff72:	hlt    
   14000ff73:	push   rsp
   14000ff75:	hlt    
   14000ff76:	hlt    
   14000ff77:	push   rsp
   14000ff79:	hlt    
   14000ff7a:	hlt    
   14000ff7b:	jmp    QWORD PTR [rbp+0x17ffefc8]
   14000ff81:	jno    0x14000ff68
   14000ff83:	jmp    QWORD PTR [rsi]
   14000ff85:	jnp    0x14000ff6d
   14000ff87:	jmp    FWORD PTR [rdx-0xb001036]
   14000ff8d:	hlt    
   14000ff8e:	hlt    
   14000ff8f:	jmp    rcx
   14000ff91:	(bad)  
   14000ff92:	repz call QWORD PTR [rbp-0x68]
   14000ff96:	(bad)  
   14000ff97:	call   QWORD PTR [rip+0x4cffe56f]        # 0x18d00e50c
   14000ff9d:	xchg   ebx,eax
   14000ff9e:	jmp    0x134f5f4a2
   14000ffa3:	push   rsp
   14000ffa5:	hlt    
   14000ffa6:	hlt    
   14000ffa7:	push   rsp
   14000ffa9:	hlt    
   14000ffaa:	hlt    
   14000ffab:	push   rsp
   14000ffad:	hlt    
   14000ffae:	hlt    
   14000ffaf:	push   rsp
   14000ffb1:	hlt    
   14000ffb2:	hlt    
   14000ffb3:	push   rsp
   14000ffb5:	hlt    
   14000ffb6:	hlt    
   14000ffb7:	push   rsp
   14000ffb9:	hlt    
   14000ffba:	hlt    
   14000ffbb:	push   rsp
   14000ffbd:	hlt    
   14000ffbe:	hlt    
   14000ffbf:	push   rsp
   14000ffc1:	hlt    
   14000ffc2:	hlt    
   14000ffc3:	push   rsp
   14000ffc5:	hlt    
   14000ffc6:	hlt    
   14000ffc7:	push   rsp
   14000ffc9:	hlt    
   14000ffca:	hlt    
   14000ffcb:	push   rsp
   14000ffcd:	hlt    
   14000ffce:	hlt    
   14000ffcf:	push   rsp
   14000ffd1:	hlt    
   14000ffd2:	hlt    
   14000ffd3:	push   rsp
   14000ffd5:	hlt    
   14000ffd6:	hlt    
   14000ffd7:	push   rsp
   14000ffd9:	hlt    
   14000ffda:	hlt    
   14000ffdb:	push   rsp
   14000ffdd:	hlt    
   14000ffde:	hlt    
   14000ffdf:	push   rsp
   14000ffe1:	hlt    
   14000ffe2:	hlt    
   14000ffe3:	push   rsp
   14000ffe5:	hlt    
   14000ffe6:	hlt    
   14000ffe7:	push   rsp
   14000ffe9:	hlt    
   14000ffea:	hlt    
   14000ffeb:	push   rbx
   14000ffed:	repz repz jmp rbp
   14000fff1:	in     eax,0xe5
   14000fff3:	jmp    FWORD PTR [rax+rbx*4-0x64500080]
   14000fffa:	(bad)  
   14000fffb:	jmp    rsi
   14000fffd:	out    0xe6,al
   14000ffff:	push   rsp
   140010001:	hlt    
   140010002:	hlt    
   140010003:	push   rbp
   140010005:	cmc    
   140010006:	cmc    
   140010007:	push   rbp
   140010009:	cmc    
   14001000a:	cmc    
   14001000b:	push   rbp
   14001000d:	cmc    
   14001000e:	cmc    
   14001000f:	push   rbp
   140010011:	cmc    
   140010012:	cmc    
   140010013:	push   rbp
   140010015:	cmc    
   140010016:	cmc    
   140010017:	push   rbp
   140010019:	cmc    
   14001001a:	cmc    
   14001001b:	push   rbp
   14001001d:	cmc    
   14001001e:	cmc    
   14001001f:	push   rbp
   140010021:	cmc    
   140010022:	cmc    
   140010023:	push   rbp
   140010025:	cmc    
   140010026:	cmc    
   140010027:	push   rbp
   140010029:	cmc    
   14001002a:	cmc    
   14001002b:	push   rbp
   14001002d:	cmc    
   14001002e:	cmc    
   14001002f:	push   rbp
   140010031:	cmc    
   140010032:	cmc    
   140010033:	push   rbp
   140010035:	cmc    
   140010036:	cmc    
   140010037:	push   rbp
   140010039:	cmc    
   14001003a:	cmc    
   14001003b:	inc    ebx
   14001003d:	fptan  
   14001003f:	call   FWORD PTR [rdi]
   140010041:	jbe    0x140010029
   140010043:	call   FWORD PTR [rcx]
   140010045:	jb     0x14001002c
   140010047:	jmp    QWORD PTR [rbx-0x5f]
   14001004a:	jmp    0x14001004b
   14001004c:	lock icebp 
   14001004e:	cmc    
   14001004f:	(bad)  
   140010050:	in     al,dx
   140010051:	lock cmc 
   140010053:	inc    DWORD PTR [rcx+0x17ffeeb3]
   140010059:	jo     0x140010040
   14001005b:	(bad)  
   14001005c:	cmp    cl,BYTE PTR [rax-0x1a240019]
   140010062:	hlt    
   140010063:	push   rbp
   140010065:	cmc    
   140010066:	cmc    
   140010067:	push   rbp
   140010069:	cmc    
   14001006a:	cmc    
   14001006b:	push   rbp
   14001006d:	cmc    
   14001006e:	cmc    
   14001006f:	push   rbp
   140010071:	cmc    
   140010072:	cmc    
   140010073:	push   rbp
   140010075:	cmc    
   140010076:	cmc    
   140010077:	push   rbp
   140010079:	cmc    
   14001007a:	cmc    
   14001007b:	push   rbp
   14001007d:	cmc    
   14001007e:	cmc    
   14001007f:	push   rbp
   140010081:	cmc    
   140010082:	cmc    
   140010083:	push   rbp
   140010085:	cmc    
   140010086:	cmc    
   140010087:	push   rbp
   140010089:	cmc    
   14001008a:	cmc    
   14001008b:	push   rbp
   14001008d:	cmc    
   14001008e:	cmc    
   14001008f:	push   rbp
   140010091:	cmc    
   140010092:	cmc    
   140010093:	push   rbp
   140010095:	cmc    
   140010096:	cmc    
   140010097:	push   rbp
   140010099:	cmc    
   14001009a:	cmc    
   14001009b:	push   rbp
   14001009d:	cmc    
   14001009e:	cmc    
   14001009f:	push   rbp
   1400100a1:	cmc    
   1400100a2:	cmc    
   1400100a3:	push   rbp
   1400100a5:	cmc    
   1400100a6:	cmc    
   1400100a7:	push   rbp
   1400100a9:	cmc    
   1400100aa:	cmc    
   1400100ab:	push   rsp
   1400100ad:	hlt    
   1400100ae:	hlt    
   1400100af:	jmp    rsi
   1400100b1:	out    0xe6,al
   1400100b3:	jmp    FWORD PTR [rdi-0x4e007d65]
   1400100b9:	popf   
   1400100ba:	test   edi,edi
   1400100bc:	out    0xe7,eax
   1400100be:	out    0xff,eax
   1400100c0:	cmc    
   1400100c1:	cmc    
   1400100c2:	cmc    
   1400100c3:	push   rsi
   1400100c5:	div    dh
   1400100c7:	push   rsi
   1400100c9:	div    dh
   1400100cb:	push   rsi
   1400100cd:	div    dh
   1400100cf:	push   rsi
   1400100d1:	div    dh
   1400100d3:	push   rsi
   1400100d5:	div    dh
   1400100d7:	push   rsi
   1400100d9:	div    dh
   1400100db:	push   rsi
   1400100dd:	div    dh
   1400100df:	push   rsi
   1400100e1:	div    dh
   1400100e3:	push   rsi
   1400100e5:	div    dh
   1400100e7:	push   rsi
   1400100e9:	div    dh
   1400100eb:	push   rsi
   1400100ed:	div    dh
   1400100ef:	push   rsi
   1400100f1:	div    dh
   1400100f3:	push   rsi
   1400100f5:	div    dh
   1400100f7:	push   rsi
   1400100f9:	div    dh
   1400100fb:	(bad)  
   1400100fc:	in     al,dx
   1400100fd:	icebp  
   1400100fe:	idiv   bh
   140010100:	(bad)  
   140010101:	lahf   
   140010102:	jmp    0x140010103
   140010104:	sbb    DWORD PTR [rdx-0x1a],esi
   140010107:	jmp    QWORD PTR [rbx]
   140010109:	jns    0x1400100f1
   14001010b:	call   FWORD PTR [rdi-0x9000f3b]
   140010111:	div    dh
   140010113:	call   rdi
   140010115:	in     eax,0xf3
   140010117:	(bad)  
   140010118:	(bad)  
   140010119:	mov    ch,al
   14001011b:	call   FWORD PTR [rcx]
   14001011d:	jb     0x140010105
   14001011f:	jmp    FWORD PTR [rax-0x5c]
   140010122:	in     al,dx
   140010123:	(bad)  
   140010124:	in     eax,dx
   140010125:	icebp  
   140010126:	idiv   bh
   140010128:	div    dh
   14001012a:	idiv   bh
   14001012c:	div    dh
   14001012e:	idiv   bh
   140010130:	div    dh
   140010132:	idiv   bh
   140010134:	div    dh
   140010136:	idiv   bh
   140010138:	div    dh
   14001013a:	idiv   bh
   14001013c:	div    dh
   14001013e:	idiv   bh
   140010140:	div    dh
   140010142:	idiv   bh
   140010144:	div    dh
   140010146:	idiv   bh
   140010148:	div    dh
   14001014a:	idiv   bh
   14001014c:	div    dh
   14001014e:	idiv   bh
   140010150:	div    dh
   140010152:	idiv   bh
   140010154:	div    dh
   140010156:	idiv   bh
   140010158:	div    dh
   14001015a:	idiv   bh
   14001015c:	div    dh
   14001015e:	idiv   bh
   140010160:	div    dh
   140010162:	idiv   bh
   140010164:	div    dh
   140010166:	idiv   bh
   140010168:	div    dh
   14001016a:	idiv   bh
   14001016c:	cmc    
   14001016d:	cmc    
   14001016e:	cmc    
   14001016f:	jmp    rdi
   140010171:	out    0xe7,eax
   140010173:	push   QWORD PTR [rcx-0x4c007a63]
   140010179:	lahf   
   14001017a:	xchg   edi,edi
   14001017c:	call   0x13700ea69
   140010181:	div    dh
   140010183:	push   rdi
   140010185:	div    edi
   140010187:	push   rdi
   140010189:	div    edi
   14001018b:	push   rdi
   14001018d:	div    edi
   14001018f:	push   rdi
   140010191:	div    edi
   140010193:	push   rdi
   140010195:	div    edi
   140010197:	push   rdi
   140010199:	div    edi
   14001019b:	push   rdi
   14001019d:	div    edi
   14001019f:	push   rdi
   1400101a1:	div    edi
   1400101a3:	push   rdi
   1400101a5:	div    edi
   1400101a7:	push   rdi
   1400101a9:	div    edi
   1400101ab:	push   rdi
   1400101ad:	div    edi
   1400101af:	push   rdi
   1400101b1:	div    edi
   1400101b3:	push   rdi
   1400101b5:	div    edi
   1400101b7:	push   rdi
   1400101b9:	div    edi
   1400101bb:	push   rdi
   1400101bd:	div    edi
   1400101bf:	call   rbp
   1400101c1:	in     al,0xf4
   1400101c3:	inc    DWORD PTR [rbp-0x72]
   1400101c6:	jmp    0x126741eca
   1400101cb:	push   QWORD PTR [rip+0xffffffffb3ffe884]        # 0xf400ea55
   1400101d1:	shl    bl,1
   1400101d3:	push   rdi
   1400101d5:	div    edi
   1400101d7:	inc    ecx
   1400101d9:	fpatan 
   1400101db:	(bad)  
   1400101dc:	(bad)  
   1400101dd:	mov    ebp,ecx
   1400101df:	call   FWORD PTR [rbx+rsi*2]
   1400101e2:	out    0xff,al
   1400101e4:	jnp    0x140010196
   1400101e6:	out    dx,al
   1400101e7:	(bad)  
   1400101e8:	jmp    0x13800f8dc
   1400101ed:	div    edi
   1400101ef:	push   rdi
   1400101f1:	div    edi
   1400101f3:	push   rdi
   1400101f5:	div    edi
   1400101f7:	push   rdi
   1400101f9:	div    edi
   1400101fb:	push   rdi
   1400101fd:	div    edi
   1400101ff:	push   rdi
   140010201:	div    edi
   140010203:	push   rdi
   140010205:	div    edi
   140010207:	push   rdi
   140010209:	div    edi
   14001020b:	push   rdi
   14001020d:	div    edi
   14001020f:	push   rdi
   140010211:	div    edi
   140010213:	push   rdi
   140010215:	div    edi
   140010217:	push   rdi
   140010219:	div    edi
   14001021b:	push   rdi
   14001021d:	div    edi
   14001021f:	push   rdi
   140010221:	div    edi
   140010223:	push   rdi
   140010225:	div    edi
   140010227:	push   rdi
   140010229:	div    edi
   14001022b:	push   rsi
   14001022d:	div    dh
   14001022f:	(bad)  
   140010230:	call   0xf400eb1d
   140010235:	lahf   
   140010236:	xchg   edi,edi
   140010238:	mov    ch,0xa1
   14001023a:	mov    bh,bh
   14001023c:	jmp    0x13800ec2a
   140010241:	div    edi
   140010243:	(bad)  
   140010244:	clc    
   140010245:	clc    
   140010246:	clc    
   140010247:	(bad)  
   140010248:	clc    
   140010249:	clc    
   14001024a:	clc    
   14001024b:	(bad)  
   14001024c:	clc    
   14001024d:	clc    
   14001024e:	clc    
   14001024f:	(bad)  
   140010250:	clc    
   140010251:	clc    
   140010252:	clc    
   140010253:	(bad)  
   140010254:	clc    
   140010255:	clc    
   140010256:	clc    
   140010257:	(bad)  
   140010258:	clc    
   140010259:	clc    
   14001025a:	clc    
   14001025b:	(bad)  
   14001025c:	clc    
   14001025d:	clc    
   14001025e:	clc    
   14001025f:	(bad)  
   140010260:	clc    
   140010261:	clc    
   140010262:	clc    
   140010263:	(bad)  
   140010264:	clc    
   140010265:	clc    
   140010266:	clc    
   140010267:	(bad)  
   140010268:	clc    
   140010269:	clc    
   14001026a:	clc    
   14001026b:	(bad)  
   14001026c:	clc    
   14001026d:	clc    
   14001026e:	clc    
   14001026f:	(bad)  
   140010270:	clc    
   140010271:	clc    
   140010272:	clc    
   140010273:	(bad)  
   140010274:	clc    
   140010275:	clc    
   140010276:	clc    
   140010277:	(bad)  
   140010278:	clc    
   140010279:	clc    
   14001027a:	clc    
   14001027b:	(bad)  
   14001027c:	clc    
   14001027d:	clc    
   14001027e:	clc    
   14001027f:	(bad)  
   140010280:	clc    
   140010281:	clc    
   140010282:	clc    
   140010283:	dec    ebp
   140010285:	loopne 0x14001027b
   140010287:	inc    DWORD PTR [rbp-0x71]
   14001028a:	(bad)  
   14001028b:	call   FWORD PTR [rdi]
   14001028d:	jne    0x140010276
   14001028f:	push   QWORD PTR [rax]
   140010291:	sub    al,0xff
   140010294:	sahf   
   140010295:	(bad)
   140010298:	clc    
   140010299:	clc    
   14001029a:	clc    
   14001029b:	call   rdx
   14001029d:	jrcxz  0x140010294
   14001029f:	call   QWORD PTR [rsi-0x67]
   1400102a2:	jmp    0x1400102a3
   1400102a4:	(bad)  
   1400102a5:	jne    0x14001028e
   1400102a7:	call   FWORD PTR [rdi-0x62]
   1400102aa:	jmp    0x1400102ab
   1400102ac:	iret   
   1400102ad:	loope  0x1400102a3
   1400102af:	(bad)  
   1400102b0:	clc    
   1400102b1:	clc    
   1400102b2:	clc    
   1400102b3:	(bad)  
   1400102b4:	clc    
   1400102b5:	clc    
   1400102b6:	clc    
   1400102b7:	(bad)  
   1400102b8:	clc    
   1400102b9:	clc    
   1400102ba:	clc    
   1400102bb:	(bad)  
   1400102bc:	clc    
   1400102bd:	clc    
   1400102be:	clc    
   1400102bf:	(bad)  
   1400102c0:	clc    
   1400102c1:	clc    
   1400102c2:	clc    
   1400102c3:	(bad)  
   1400102c4:	clc    
   1400102c5:	clc    
   1400102c6:	clc    
   1400102c7:	(bad)  
   1400102c8:	clc    
   1400102c9:	clc    
   1400102ca:	clc    
   1400102cb:	(bad)  
   1400102cc:	clc    
   1400102cd:	clc    
   1400102ce:	clc    
   1400102cf:	(bad)  
   1400102d0:	clc    
   1400102d1:	clc    
   1400102d2:	clc    
   1400102d3:	(bad)  
   1400102d4:	clc    
   1400102d5:	clc    
   1400102d6:	clc    
   1400102d7:	(bad)  
   1400102d8:	clc    
   1400102d9:	clc    
   1400102da:	clc    
   1400102db:	(bad)  
   1400102dc:	clc    
   1400102dd:	clc    
   1400102de:	clc    
   1400102df:	(bad)  
   1400102e0:	clc    
   1400102e1:	clc    
   1400102e2:	clc    
   1400102e3:	(bad)  
   1400102e4:	clc    
   1400102e5:	clc    
   1400102e6:	clc    
   1400102e7:	(bad)  
   1400102e8:	clc    
   1400102e9:	clc    
   1400102ea:	clc    
   1400102eb:	push   rdi
   1400102ed:	div    edi
   1400102ef:	(bad)  
   1400102f0:	jmp    0xf600ecde
   1400102f5:	movabs eax,ds:0xeaeaff8ca3b7ff8a
   1400102fe:	(bad)  
   1400102ff:	(bad)  
   140010300:	clc    
   140010301:	clc    
   140010302:	clc    
   140010303:	(bad)  
   140010304:	stc    
   140010305:	stc    
   140010306:	stc    
   140010307:	(bad)  
   140010308:	stc    
   140010309:	stc    
   14001030a:	stc    
   14001030b:	(bad)  
   14001030c:	stc    
   14001030d:	stc    
   14001030e:	stc    
   14001030f:	(bad)  
   140010310:	stc    
   140010311:	stc    
   140010312:	stc    
   140010313:	(bad)  
   140010314:	stc    
   140010315:	stc    
   140010316:	stc    
   140010317:	(bad)  
   140010318:	stc    
   140010319:	stc    
   14001031a:	stc    
   14001031b:	(bad)  
   14001031c:	stc    
   14001031d:	stc    
   14001031e:	stc    
   14001031f:	(bad)  
   140010320:	stc    
   140010321:	stc    
   140010322:	stc    
   140010323:	(bad)  
   140010324:	stc    
   140010325:	stc    
   140010326:	stc    
   140010327:	(bad)  
   140010328:	stc    
   140010329:	stc    
   14001032a:	stc    
   14001032b:	(bad)  
   14001032c:	stc    
   14001032d:	stc    
   14001032e:	stc    
   14001032f:	(bad)  
   140010330:	stc    
   140010331:	stc    
   140010332:	stc    
   140010333:	(bad)  
   140010334:	stc    
   140010335:	stc    
   140010336:	stc    
   140010337:	(bad)  
   140010338:	stc    
   140010339:	stc    
   14001033a:	stc    
   14001033b:	(bad)  
   14001033c:	stc    
   14001033d:	stc    
   14001033e:	stc    
   14001033f:	(bad)  
   140010340:	stc    
   140010341:	stc    
   140010342:	stc    
   140010343:	(bad)  
   140010344:	stc    
   140010345:	stc    
   140010346:	stc    
   140010347:	dec    edi
   140010349:	loop   0x140010341
   14001034b:	call   FWORD PTR [rdx-0x64]
   14001034e:	in     al,dx
   14001034f:	jmp    QWORD PTR [rbx]
   140010351:	js     0x14001033a
   140010353:	jmp    FWORD PTR [rdx]
   140010355:	jl     0x14001033f
   140010357:	inc    DWORD PTR [rbp-0x6000f4a]
   14001035d:	stc    
   14001035e:	stc    
   14001035f:	(bad)  
   140010360:	out    dx,eax
   140010361:	hlt    
   140010362:	clc    
   140010363:	call   QWORD PTR [rdi+rdi*4-0x6cb4000f]
   14001036a:	jmp    0x14001036b
   14001036c:	xchg   r8,rax
   14001036e:	jmp    0x14001036f
   140010370:	fwait
   140010371:	ret    
   140010372:	icebp  
   140010373:	(bad)  
   140010374:	in     eax,dx
   140010375:	repz clc 
   140010377:	(bad)  
   140010378:	stc    
   140010379:	stc    
   14001037a:	stc    
   14001037b:	(bad)  
   14001037c:	stc    
   14001037d:	stc    
   14001037e:	stc    
   14001037f:	(bad)  
   140010380:	stc    
   140010381:	stc    
   140010382:	stc    
   140010383:	(bad)  
   140010384:	stc    
   140010385:	stc    
   140010386:	stc    
   140010387:	(bad)  
   140010388:	stc    
   140010389:	stc    
   14001038a:	stc    
   14001038b:	(bad)  
   14001038c:	stc    
   14001038d:	stc    
   14001038e:	stc    
   14001038f:	(bad)  
   140010390:	stc    
   140010391:	stc    
   140010392:	stc    
   140010393:	(bad)  
   140010394:	stc    
   140010395:	stc    
   140010396:	stc    
   140010397:	(bad)  
   140010398:	stc    
   140010399:	stc    
   14001039a:	stc    
   14001039b:	(bad)  
   14001039c:	stc    
   14001039d:	stc    
   14001039e:	stc    
   14001039f:	(bad)  
   1400103a0:	stc    
   1400103a1:	stc    
   1400103a2:	stc    
   1400103a3:	(bad)  
   1400103a4:	stc    
   1400103a5:	stc    
   1400103a6:	stc    
   1400103a7:	(bad)  
   1400103a8:	stc    
   1400103a9:	stc    
   1400103aa:	stc    
   1400103ab:	(bad)  
   1400103ac:	clc    
   1400103ad:	clc    
   1400103ae:	clc    
   1400103af:	(bad)  
   1400103b0:	(bad)  
   1400103b1:	(bad)  
   1400103b2:	(bad)  
   1400103b3:	push   QWORD PTR [rdi-0x4600735d]
   1400103b9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400103ba:	mov    ?,edi
   1400103bc:	(bad)  
   1400103bd:	(bad)  
   1400103be:	(bad)  
   1400103bf:	(bad)  
   1400103c0:	clc    
   1400103c1:	clc    
   1400103c2:	clc    
   1400103c3:	(bad)  
   1400103c4:	stc    
   1400103c5:	stc    
   1400103c6:	stc    
   1400103c7:	(bad)  
   1400103c8:	stc    
   1400103c9:	stc    
   1400103ca:	stc    
   1400103cb:	(bad)  
   1400103cc:	stc    
   1400103cd:	stc    
   1400103ce:	stc    
   1400103cf:	(bad)  
   1400103d0:	stc    
   1400103d1:	stc    
   1400103d2:	stc    
   1400103d3:	(bad)  
   1400103d4:	stc    
   1400103d5:	stc    
   1400103d6:	stc    
   1400103d7:	(bad)  
   1400103d8:	stc    
   1400103d9:	stc    
   1400103da:	stc    
   1400103db:	(bad)  
   1400103dc:	stc    
   1400103dd:	stc    
   1400103de:	stc    
   1400103df:	(bad)  
   1400103e0:	stc    
   1400103e1:	stc    
   1400103e2:	stc    
   1400103e3:	(bad)  
   1400103e4:	stc    
   1400103e5:	stc    
   1400103e6:	stc    
   1400103e7:	(bad)  
   1400103e8:	stc    
   1400103e9:	stc    
   1400103ea:	stc    
   1400103eb:	(bad)  
   1400103ec:	stc    
   1400103ed:	stc    
   1400103ee:	stc    
   1400103ef:	(bad)  
   1400103f0:	stc    
   1400103f1:	stc    
   1400103f2:	stc    
   1400103f3:	(bad)  
   1400103f4:	stc    
   1400103f5:	stc    
   1400103f6:	stc    
   1400103f7:	(bad)  
   1400103f8:	stc    
   1400103f9:	stc    
   1400103fa:	stc    
   1400103fb:	(bad)  
   1400103fc:	stc    
   1400103fd:	stc    
   1400103fe:	stc    
   1400103ff:	(bad)  
   140010400:	stc    
   140010401:	stc    
   140010402:	stc    
   140010403:	(bad)  
   140010404:	stc    
   140010405:	stc    
   140010406:	stc    
   140010407:	(bad)  
   140010408:	stc    
   140010409:	stc    
   14001040a:	stc    
   14001040b:	jmp    rsp
   14001040d:	in     eax,dx
   14001040e:	clc    
   14001040f:	(bad)  
   140010410:	jg     0x1400103c5
   140010412:	lock jmp FWORD PTR [rax]
   140010415:	jp     0x1400103fe
   140010417:	jmp    QWORD PTR [rsi]
   140010419:	jns    0x140010402
   14001041b:	inc    DWORD PTR [rsi-0x6000f49]
   140010421:	stc    
   140010422:	stc    
   140010423:	(bad)  
   140010424:	stc    
   140010425:	stc    
   140010426:	stc    
   140010427:	(bad)  
   140010428:	fucomp st(1)
   14001042a:	idiv   edi
   14001042c:	xchg   ebp,eax
   14001042d:	mov    edi,0xae79fff1
   140010432:	out    dx,al
   140010433:	dec    DWORD PTR [rdx-0x30000f46]
   140010439:	loop   0x140010431
   14001043b:	(bad)  
   14001043c:	stc    
   14001043d:	stc    
   14001043e:	stc    
   14001043f:	(bad)  
   140010440:	stc    
   140010441:	stc    
   140010442:	stc    
   140010443:	(bad)  
   140010444:	stc    
   140010445:	stc    
   140010446:	stc    
   140010447:	(bad)  
   140010448:	stc    
   140010449:	stc    
   14001044a:	stc    
   14001044b:	(bad)  
   14001044c:	stc    
   14001044d:	stc    
   14001044e:	stc    
   14001044f:	(bad)  
   140010450:	stc    
   140010451:	stc    
   140010452:	stc    
   140010453:	(bad)  
   140010454:	stc    
   140010455:	stc    
   140010456:	stc    
   140010457:	(bad)  
   140010458:	stc    
   140010459:	stc    
   14001045a:	stc    
   14001045b:	(bad)  
   14001045c:	stc    
   14001045d:	stc    
   14001045e:	stc    
   14001045f:	(bad)  
   140010460:	stc    
   140010461:	stc    
   140010462:	stc    
   140010463:	(bad)  
   140010464:	stc    
   140010465:	stc    
   140010466:	stc    
   140010467:	(bad)  
   140010468:	stc    
   140010469:	stc    
   14001046a:	stc    
   14001046b:	(bad)  
   14001046c:	clc    
   14001046d:	clc    
   14001046e:	clc    
   14001046f:	(bad)  
   140010470:	(bad)  
   140010471:	(bad)  
   140010472:	(bad)  
   140010473:	(bad)  
   140010474:	mov    ecx,0xbbff8ea5
   140010479:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001047a:	xchg   ecx,eax
   14001047b:	(bad)  
   14001047c:	jmp    0x140010469
   14001047e:	jmp    0x14001047f
   140010480:	stc    
   140010481:	stc    
   140010482:	stc    
   140010483:	(bad)  
   140010484:	cli    
   140010485:	cli    
   140010486:	cli    
   140010487:	(bad)  
   140010488:	cli    
   140010489:	cli    
   14001048a:	cli    
   14001048b:	(bad)  
   14001048c:	cli    
   14001048d:	cli    
   14001048e:	cli    
   14001048f:	(bad)  
   140010490:	cli    
   140010491:	cli    
   140010492:	cli    
   140010493:	(bad)  
   140010494:	cli    
   140010495:	cli    
   140010496:	cli    
   140010497:	(bad)  
   140010498:	cli    
   140010499:	cli    
   14001049a:	cli    
   14001049b:	(bad)  
   14001049c:	cli    
   14001049d:	cli    
   14001049e:	cli    
   14001049f:	(bad)  
   1400104a0:	cli    
   1400104a1:	cli    
   1400104a2:	cli    
   1400104a3:	(bad)  
   1400104a4:	cli    
   1400104a5:	cli    
   1400104a6:	cli    
   1400104a7:	(bad)  
   1400104a8:	cli    
   1400104a9:	cli    
   1400104aa:	cli    
   1400104ab:	(bad)  
   1400104ac:	cli    
   1400104ad:	cli    
   1400104ae:	cli    
   1400104af:	(bad)  
   1400104b0:	cli    
   1400104b1:	cli    
   1400104b2:	cli    
   1400104b3:	(bad)  
   1400104b4:	cli    
   1400104b5:	cli    
   1400104b6:	cli    
   1400104b7:	(bad)  
   1400104b8:	cli    
   1400104b9:	cli    
   1400104ba:	cli    
   1400104bb:	(bad)  
   1400104bc:	cli    
   1400104bd:	cli    
   1400104be:	cli    
   1400104bf:	(bad)  
   1400104c0:	cli    
   1400104c1:	cli    
   1400104c2:	cli    
   1400104c3:	(bad)  
   1400104c4:	cli    
   1400104c5:	cli    
   1400104c6:	cli    
   1400104c7:	(bad)  
   1400104c8:	cli    
   1400104c9:	cli    
   1400104ca:	cli    
   1400104cb:	(bad)  
   1400104cc:	cli    
   1400104cd:	cli    
   1400104ce:	cli    
   1400104cf:	push   rbp
   1400104d1:	idiv   edx
   1400104d3:	call   FWORD PTR [rsi+0x34fff2c5]
   1400104d9:	sub    eax,0xffffffff
   1400104dc:	sub    edi,DWORD PTR [rbp-0x18]
   1400104df:	call   FWORD PTR [rcx-0x5000d3d]
   1400104e5:	cli    
   1400104e6:	cli    
   1400104e7:	(bad)  
   1400104e8:	cli    
   1400104e9:	cli    
   1400104ea:	cli    
   1400104eb:	(bad)  
   1400104ec:	cli    
   1400104ed:	cli    
   1400104ee:	cli    
   1400104ef:	jmp    rbx
   1400104f1:	in     eax,dx
   1400104f2:	clc    
   1400104f3:	(bad)  
   1400104f4:	mov    ebx,0xddfff5d5
   1400104f9:	jmp    0x139fb04f5
   1400104fe:	cli    
   1400104ff:	(bad)  
   140010500:	cli    
   140010501:	cli    
   140010502:	cli    
   140010503:	(bad)  
   140010504:	cli    
   140010505:	cli    
   140010506:	cli    
   140010507:	(bad)  
   140010508:	cli    
   140010509:	cli    
   14001050a:	cli    
   14001050b:	(bad)  
   14001050c:	cli    
   14001050d:	cli    
   14001050e:	cli    
   14001050f:	(bad)  
   140010510:	cli    
   140010511:	cli    
   140010512:	cli    
   140010513:	(bad)  
   140010514:	cli    
   140010515:	cli    
   140010516:	cli    
   140010517:	(bad)  
   140010518:	cli    
   140010519:	cli    
   14001051a:	cli    
   14001051b:	(bad)  
   14001051c:	cli    
   14001051d:	cli    
   14001051e:	cli    
   14001051f:	(bad)  
   140010520:	cli    
   140010521:	cli    
   140010522:	cli    
   140010523:	(bad)  
   140010524:	cli    
   140010525:	cli    
   140010526:	cli    
   140010527:	(bad)  
   140010528:	cli    
   140010529:	cli    
   14001052a:	cli    
   14001052b:	(bad)  
   14001052c:	stc    
   14001052d:	stc    
   14001052e:	stc    
   14001052f:	(bad)  
   140010530:	jmp    0x14001051d
   140010532:	jmp    0x140010533
   140010534:	mov    ebx,0xbdff91a7
   140010539:	test   eax,0xececff93
   14001053e:	in     al,dx
   14001053f:	(bad)  
   140010540:	cli    
   140010541:	cli    
   140010542:	cli    
   140010543:	(bad)  
   140010544:	sti    
   140010545:	sti    
   140010546:	sti    
   140010547:	(bad)  
   140010548:	sti    
   140010549:	sti    
   14001054a:	sti    
   14001054b:	(bad)  
   14001054c:	sti    
   14001054d:	sti    
   14001054e:	sti    
   14001054f:	(bad)  
   140010550:	sti    
   140010551:	sti    
   140010552:	sti    
   140010553:	(bad)  
   140010554:	sti    
   140010555:	sti    
   140010556:	sti    
   140010557:	(bad)  
   140010558:	sti    
   140010559:	sti    
   14001055a:	sti    
   14001055b:	(bad)  
   14001055c:	sti    
   14001055d:	sti    
   14001055e:	sti    
   14001055f:	(bad)  
   140010560:	sti    
   140010561:	sti    
   140010562:	sti    
   140010563:	(bad)  
   140010564:	sti    
   140010565:	sti    
   140010566:	sti    
   140010567:	(bad)  
   140010568:	sti    
   140010569:	sti    
   14001056a:	sti    
   14001056b:	(bad)  
   14001056c:	sti    
   14001056d:	sti    
   14001056e:	sti    
   14001056f:	(bad)  
   140010570:	sti    
   140010571:	sti    
   140010572:	sti    
   140010573:	(bad)  
   140010574:	sti    
   140010575:	sti    
   140010576:	sti    
   140010577:	(bad)  
   140010578:	sti    
   140010579:	sti    
   14001057a:	sti    
   14001057b:	(bad)  
   14001057c:	sti    
   14001057d:	sti    
   14001057e:	sti    
   14001057f:	(bad)  
   140010580:	sti    
   140010581:	sti    
   140010582:	sti    
   140010583:	(bad)  
   140010584:	sti    
   140010585:	sti    
   140010586:	sti    
   140010587:	(bad)  
   140010588:	sti    
   140010589:	sti    
   14001058a:	sti    
   14001058b:	(bad)  
   14001058c:	sti    
   14001058d:	sti    
   14001058e:	sti    
   14001058f:	(bad)  
   140010590:	sti    
   140010591:	sti    
   140010592:	sti    
   140010593:	(bad)  
   140010594:	sti    
   140010595:	sti    
   140010596:	sti    
   140010597:	jmp    FWORD PTR [rcx+0x37fff3cb]
   14001059d:	test   cl,ch
   14001059f:	(bad)  
   1400105a0:	cmp    al,BYTE PTR [rsi-0x243d0017]
   1400105a6:	idiv   bh
   1400105a8:	sti    
   1400105a9:	sti    
   1400105aa:	sti    
   1400105ab:	(bad)  
   1400105ac:	sti    
   1400105ad:	sti    
   1400105ae:	sti    
   1400105af:	(bad)  
   1400105b0:	sti    
   1400105b1:	sti    
   1400105b2:	sti    
   1400105b3:	(bad)  
   1400105b4:	sti    
   1400105b5:	sti    
   1400105b6:	sti    
   1400105b7:	(bad)  
   1400105b8:	sti    
   1400105b9:	sti    
   1400105ba:	sti    
   1400105bb:	(bad)  
   1400105bc:	sti    
   1400105bd:	sti    
   1400105be:	sti    
   1400105bf:	(bad)  
   1400105c0:	sti    
   1400105c1:	sti    
   1400105c2:	sti    
   1400105c3:	(bad)  
   1400105c4:	sti    
   1400105c5:	sti    
   1400105c6:	sti    
   1400105c7:	(bad)  
   1400105c8:	sti    
   1400105c9:	sti    
   1400105ca:	sti    
   1400105cb:	(bad)  
   1400105cc:	sti    
   1400105cd:	sti    
   1400105ce:	sti    
   1400105cf:	(bad)  
   1400105d0:	sti    
   1400105d1:	sti    
   1400105d2:	sti    
   1400105d3:	(bad)  
   1400105d4:	sti    
   1400105d5:	sti    
   1400105d6:	sti    
   1400105d7:	(bad)  
   1400105d8:	sti    
   1400105d9:	sti    
   1400105da:	sti    
   1400105db:	(bad)  
   1400105dc:	sti    
   1400105dd:	sti    
   1400105de:	sti    
   1400105df:	(bad)  
   1400105e0:	sti    
   1400105e1:	sti    
   1400105e2:	sti    
   1400105e3:	(bad)  
   1400105e4:	sti    
   1400105e5:	sti    
   1400105e6:	sti    
   1400105e7:	(bad)  
   1400105e8:	sti    
   1400105e9:	sti    
   1400105ea:	sti    
   1400105eb:	(bad)  
   1400105ec:	cli    
   1400105ed:	cli    
   1400105ee:	cli    
   1400105ef:	(bad)  
   1400105f0:	in     al,dx
   1400105f1:	in     al,dx
   1400105f2:	in     al,dx
   1400105f3:	(bad)  
   1400105f4:	mov    ebp,0xbfff93a9
   1400105f9:	stos   DWORD PTR es:[rdi],eax
   1400105fa:	xchg   ebp,eax
   1400105fb:	(bad)  
   1400105fc:	in     eax,dx
   1400105fd:	in     eax,dx
   1400105fe:	in     eax,dx
   1400105ff:	(bad)  
   140010600:	sti    
   140010601:	sti    
   140010602:	sti    
   140010603:	(bad)  
   140010604:	cld    
   140010605:	cld    
   140010606:	cld    
   140010607:	(bad)  
   140010608:	cld    
   140010609:	cld    
   14001060a:	cld    
   14001060b:	(bad)  
   14001060c:	cld    
   14001060d:	cld    
   14001060e:	cld    
   14001060f:	(bad)  
   140010610:	cld    
   140010611:	cld    
   140010612:	cld    
   140010613:	(bad)  
   140010614:	cld    
   140010615:	cld    
   140010616:	cld    
   140010617:	(bad)  
   140010618:	cld    
   140010619:	cld    
   14001061a:	cld    
   14001061b:	(bad)  
   14001061c:	cld    
   14001061d:	cld    
   14001061e:	cld    
   14001061f:	(bad)  
   140010620:	cld    
   140010621:	cld    
   140010622:	cld    
   140010623:	(bad)  
   140010624:	cld    
   140010625:	cld    
   140010626:	cld    
   140010627:	(bad)  
   140010628:	cld    
   140010629:	cld    
   14001062a:	cld    
   14001062b:	(bad)  
   14001062c:	cld    
   14001062d:	cld    
   14001062e:	cld    
   14001062f:	(bad)  
   140010630:	cld    
   140010631:	cld    
   140010632:	cld    
   140010633:	(bad)  
   140010634:	cld    
   140010635:	cld    
   140010636:	cld    
   140010637:	(bad)  
   140010638:	cld    
   140010639:	cld    
   14001063a:	cld    
   14001063b:	(bad)  
   14001063c:	cld    
   14001063d:	cld    
   14001063e:	cld    
   14001063f:	(bad)  
   140010640:	cld    
   140010641:	cld    
   140010642:	cld    
   140010643:	(bad)  
   140010644:	cld    
   140010645:	cld    
   140010646:	cld    
   140010647:	(bad)  
   140010648:	cld    
   140010649:	cld    
   14001064a:	cld    
   14001064b:	(bad)  
   14001064c:	cld    
   14001064d:	cld    
   14001064e:	cld    
   14001064f:	(bad)  
   140010650:	cld    
   140010651:	cld    
   140010652:	cld    
   140010653:	(bad)  
   140010654:	cld    
   140010655:	cld    
   140010656:	cld    
   140010657:	(bad)  
   140010658:	cld    
   140010659:	cld    
   14001065a:	cld    
   14001065b:	jmp    QWORD PTR [rbp+0x31fff4c9]
   140010661:	sub    al,0xff
   140010664:	movabs gs:0xfcfcfffbf2e9ffee,eax
   14001066e:	cld    
   14001066f:	(bad)  
   140010670:	cld    
   140010671:	cld    
   140010672:	cld    
   140010673:	(bad)  
   140010674:	cld    
   140010675:	cld    
   140010676:	cld    
   140010677:	(bad)  
   140010678:	cld    
   140010679:	cld    
   14001067a:	cld    
   14001067b:	(bad)  
   14001067c:	cld    
   14001067d:	cld    
   14001067e:	cld    
   14001067f:	(bad)  
   140010680:	cld    
   140010681:	cld    
   140010682:	cld    
   140010683:	(bad)  
   140010684:	cld    
   140010685:	cld    
   140010686:	cld    
   140010687:	(bad)  
   140010688:	cld    
   140010689:	cld    
   14001068a:	cld    
   14001068b:	(bad)  
   14001068c:	cld    
   14001068d:	cld    
   14001068e:	cld    
   14001068f:	(bad)  
   140010690:	cld    
   140010691:	cld    
   140010692:	cld    
   140010693:	(bad)  
   140010694:	cld    
   140010695:	cld    
   140010696:	cld    
   140010697:	(bad)  
   140010698:	cld    
   140010699:	cld    
   14001069a:	cld    
   14001069b:	(bad)  
   14001069c:	cld    
   14001069d:	cld    
   14001069e:	cld    
   14001069f:	(bad)  
   1400106a0:	cld    
   1400106a1:	cld    
   1400106a2:	cld    
   1400106a3:	(bad)  
   1400106a4:	cld    
   1400106a5:	cld    
   1400106a6:	cld    
   1400106a7:	(bad)  
   1400106a8:	cld    
   1400106a9:	cld    
   1400106aa:	cld    
   1400106ab:	(bad)  
   1400106ac:	sti    
   1400106ad:	sti    
   1400106ae:	sti    
   1400106af:	(bad)  
   1400106b0:	in     eax,dx
   1400106b1:	in     eax,dx
   1400106b2:	in     eax,dx
   1400106b3:	(bad)  
   1400106b4:	mov    edi,0xc0ff95ab
   1400106b9:	lods   eax,DWORD PTR ds:[rsi]
   1400106ba:	xchg   edi,eax
   1400106bb:	(bad)  
   1400106bc:	in     eax,dx
   1400106bd:	in     eax,dx
   1400106be:	in     eax,dx
   1400106bf:	(bad)  
   1400106c0:	sti    
   1400106c1:	sti    
   1400106c2:	sti    
   1400106c3:	(bad)  
   1400106c4:	cld    
   1400106c5:	cld    
   1400106c6:	cld    
   1400106c7:	(bad)  
   1400106c8:	cld    
   1400106c9:	cld    
   1400106ca:	cld    
   1400106cb:	(bad)  
   1400106cc:	cld    
   1400106cd:	cld    
   1400106ce:	cld    
   1400106cf:	(bad)  
   1400106d0:	cld    
   1400106d1:	cld    
   1400106d2:	cld    
   1400106d3:	(bad)  
   1400106d4:	cld    
   1400106d5:	cld    
   1400106d6:	cld    
   1400106d7:	(bad)  
   1400106d8:	cld    
   1400106d9:	cld    
   1400106da:	cld    
   1400106db:	(bad)  
   1400106dc:	cld    
   1400106dd:	cld    
   1400106de:	cld    
   1400106df:	(bad)  
   1400106e0:	cld    
   1400106e1:	cld    
   1400106e2:	cld    
   1400106e3:	(bad)  
   1400106e4:	cld    
   1400106e5:	cld    
   1400106e6:	cld    
   1400106e7:	(bad)  
   1400106e8:	cld    
   1400106e9:	cld    
   1400106ea:	cld    
   1400106eb:	(bad)  
   1400106ec:	cld    
   1400106ed:	cld    
   1400106ee:	cld    
   1400106ef:	(bad)  
   1400106f0:	cld    
   1400106f1:	cld    
   1400106f2:	cld    
   1400106f3:	(bad)  
   1400106f4:	cld    
   1400106f5:	cld    
   1400106f6:	cld    
   1400106f7:	(bad)  
   1400106f8:	cld    
   1400106f9:	cld    
   1400106fa:	cld    
   1400106fb:	(bad)  
   1400106fc:	cld    
   1400106fd:	cld    
   1400106fe:	cld    
   1400106ff:	(bad)  
   140010700:	cld    
   140010701:	cld    
   140010702:	cld    
   140010703:	(bad)  
   140010704:	cld    
   140010705:	cld    
   140010706:	cld    
   140010707:	(bad)  
   140010708:	cld    
   140010709:	cld    
   14001070a:	cld    
   14001070b:	(bad)  
   14001070c:	cld    
   14001070d:	cld    
   14001070e:	cld    
   14001070f:	(bad)  
   140010710:	cld    
   140010711:	cld    
   140010712:	cld    
   140010713:	(bad)  
   140010714:	cld    
   140010715:	cld    
   140010716:	cld    
   140010717:	(bad)  
   140010718:	cld    
   140010719:	cld    
   14001071a:	cld    
   14001071b:	(bad)  
   14001071c:	clc    
   14001071d:	stc    
   14001071e:	cld    
   14001071f:	(bad)  
   140010720:	jle    0x1400106d4
   140010722:	lock push QWORD PTR [rsi]
   140010725:	test   cl,ch
   140010727:	push   QWORD PTR [rbx+rdx*8-0x303000a]
   14001072e:	cld    
   14001072f:	(bad)  
   140010730:	cld    
   140010731:	cld    
   140010732:	cld    
   140010733:	(bad)  
   140010734:	cld    
   140010735:	cld    
   140010736:	cld    
   140010737:	(bad)  
   140010738:	cld    
   140010739:	cld    
   14001073a:	cld    
   14001073b:	(bad)  
   14001073c:	cld    
   14001073d:	cld    
   14001073e:	cld    
   14001073f:	(bad)  
   140010740:	cld    
   140010741:	cld    
   140010742:	cld    
   140010743:	(bad)  
   140010744:	cld    
   140010745:	cld    
   140010746:	cld    
   140010747:	(bad)  
   140010748:	cld    
   140010749:	cld    
   14001074a:	cld    
   14001074b:	(bad)  
   14001074c:	cld    
   14001074d:	cld    
   14001074e:	cld    
   14001074f:	(bad)  
   140010750:	cld    
   140010751:	cld    
   140010752:	cld    
   140010753:	(bad)  
   140010754:	cld    
   140010755:	cld    
   140010756:	cld    
   140010757:	(bad)  
   140010758:	cld    
   140010759:	cld    
   14001075a:	cld    
   14001075b:	(bad)  
   14001075c:	cld    
   14001075d:	cld    
   14001075e:	cld    
   14001075f:	(bad)  
   140010760:	cld    
   140010761:	cld    
   140010762:	cld    
   140010763:	(bad)  
   140010764:	cld    
   140010765:	cld    
   140010766:	cld    
   140010767:	(bad)  
   140010768:	cld    
   140010769:	cld    
   14001076a:	cld    
   14001076b:	(bad)  
   14001076c:	sti    
   14001076d:	sti    
   14001076e:	sti    
   14001076f:	(bad)  
   140010770:	in     eax,dx
   140010771:	in     eax,dx
   140010772:	in     eax,dx
   140010773:	inc    eax
   140010775:	lods   eax,DWORD PTR ds:[rsi]
   140010776:	xchg   edi,eax
   140010777:	inc    edx
   140010779:	scas   eax,DWORD PTR es:[rdi]
   14001077a:	cdq    
   14001077b:	(bad)  
   14001077c:	out    dx,al
   14001077d:	out    dx,al
   14001077e:	out    dx,al
   14001077f:	(bad)  
   140010780:	cld    
   140010781:	cld    
   140010782:	cld    
   140010783:	(bad)  
   140010784:	std    
   140010785:	std    
   140010786:	std    
   140010787:	(bad)  
   140010788:	std    
   140010789:	std    
   14001078a:	std    
   14001078b:	(bad)  
   14001078c:	std    
   14001078d:	std    
   14001078e:	std    
   14001078f:	(bad)  
   140010790:	std    
   140010791:	std    
   140010792:	std    
   140010793:	(bad)  
   140010794:	std    
   140010795:	std    
   140010796:	std    
   140010797:	(bad)  
   140010798:	std    
   140010799:	std    
   14001079a:	std    
   14001079b:	(bad)  
   14001079c:	std    
   14001079d:	std    
   14001079e:	std    
   14001079f:	(bad)  
   1400107a0:	std    
   1400107a1:	std    
   1400107a2:	std    
   1400107a3:	(bad)  
   1400107a4:	std    
   1400107a5:	std    
   1400107a6:	std    
   1400107a7:	(bad)  
   1400107a8:	std    
   1400107a9:	std    
   1400107aa:	std    
   1400107ab:	(bad)  
   1400107ac:	std    
   1400107ad:	std    
   1400107ae:	std    
   1400107af:	(bad)  
   1400107b0:	std    
   1400107b1:	std    
   1400107b2:	std    
   1400107b3:	(bad)  
   1400107b4:	std    
   1400107b5:	std    
   1400107b6:	std    
   1400107b7:	(bad)  
   1400107b8:	std    
   1400107b9:	std    
   1400107ba:	std    
   1400107bb:	(bad)  
   1400107bc:	std    
   1400107bd:	std    
   1400107be:	std    
   1400107bf:	(bad)  
   1400107c0:	std    
   1400107c1:	std    
   1400107c2:	std    
   1400107c3:	(bad)  
   1400107c4:	std    
   1400107c5:	std    
   1400107c6:	std    
   1400107c7:	(bad)  
   1400107c8:	std    
   1400107c9:	std    
   1400107ca:	std    
   1400107cb:	(bad)  
   1400107cc:	std    
   1400107cd:	std    
   1400107ce:	std    
   1400107cf:	(bad)  
   1400107d0:	std    
   1400107d1:	std    
   1400107d2:	std    
   1400107d3:	(bad)  
   1400107d4:	std    
   1400107d5:	std    
   1400107d6:	std    
   1400107d7:	(bad)  
   1400107d8:	std    
   1400107d9:	std    
   1400107da:	std    
   1400107db:	(bad)  
   1400107dc:	std    
   1400107dd:	std    
   1400107de:	std    
   1400107df:	dec    eax
   1400107e1:	fdivp  st(0),st
   1400107e3:	dec    DWORD PTR [rdx-0x70]
   1400107e6:	jmp    0x1400107e7
   1400107e8:	xchg   ecx,eax
   1400107e9:	mov    edi,0xfdfdfff4
   1400107ee:	std    
   1400107ef:	(bad)  
   1400107f0:	std    
   1400107f1:	std    
   1400107f2:	std    
   1400107f3:	(bad)  
   1400107f4:	std    
   1400107f5:	std    
   1400107f6:	std    
   1400107f7:	(bad)  
   1400107f8:	std    
   1400107f9:	std    
   1400107fa:	std    
   1400107fb:	(bad)  
   1400107fc:	std    
   1400107fd:	std    
   1400107fe:	std    
   1400107ff:	(bad)  
   140010800:	std    
   140010801:	std    
   140010802:	std    
   140010803:	(bad)  
   140010804:	std    
   140010805:	std    
   140010806:	std    
   140010807:	(bad)  
   140010808:	std    
   140010809:	std    
   14001080a:	std    
   14001080b:	(bad)  
   14001080c:	std    
   14001080d:	std    
   14001080e:	std    
   14001080f:	(bad)  
   140010810:	std    
   140010811:	std    
   140010812:	std    
   140010813:	(bad)  
   140010814:	std    
   140010815:	std    
   140010816:	std    
   140010817:	(bad)  
   140010818:	std    
   140010819:	std    
   14001081a:	std    
   14001081b:	(bad)  
   14001081c:	std    
   14001081d:	std    
   14001081e:	std    
   14001081f:	(bad)  
   140010820:	std    
   140010821:	std    
   140010822:	std    
   140010823:	(bad)  
   140010824:	std    
   140010825:	std    
   140010826:	std    
   140010827:	(bad)  
   140010828:	std    
   140010829:	std    
   14001082a:	std    
   14001082b:	(bad)  
   14001082c:	cld    
   14001082d:	cld    
   14001082e:	cld    
   14001082f:	(bad)  
   140010830:	out    dx,al
   140010831:	out    dx,al
   140010832:	out    dx,al
   140010833:	inc    edx
   140010835:	scas   eax,DWORD PTR es:[rdi]
   140010836:	cdq    
   140010837:	inc    esp
   140010839:	mov    al,0x9a
   14001083b:	(bad)  
   14001083c:	out    dx,al
   14001083d:	out    dx,al
   14001083e:	out    dx,al
   14001083f:	(bad)  
   140010840:	std    
   140010841:	std    
   140010842:	std    
   140010843:	(bad)  
   140010844:	(bad)  
   140010845:	(bad)  
   140010846:	(bad)  
   140010847:	(bad)  
   140010848:	(bad)  
   140010849:	(bad)  
   14001084a:	(bad)  
   14001084b:	(bad)  
   14001084c:	(bad)  
   14001084d:	(bad)  
   14001084e:	(bad)  
   14001084f:	(bad)  
   140010850:	(bad)  
   140010851:	(bad)  
   140010852:	(bad)  
   140010853:	(bad)  
   140010854:	(bad)  
   140010855:	(bad)  
   140010856:	(bad)  
   140010857:	(bad)  
   140010858:	(bad)  
   140010859:	(bad)  
   14001085a:	(bad)  
   14001085b:	(bad)  
   14001085c:	(bad)  
   14001085d:	(bad)  
   14001085e:	(bad)  
   14001085f:	(bad)  
   140010860:	(bad)  
   140010861:	(bad)  
   140010862:	(bad)  
   140010863:	(bad)  
   140010864:	(bad)  
   140010865:	(bad)  
   140010866:	(bad)  
   140010867:	(bad)  
   140010868:	(bad)  
   140010869:	(bad)  
   14001086a:	(bad)  
   14001086b:	(bad)  
   14001086c:	(bad)  
   14001086d:	(bad)  
   14001086e:	(bad)  
   14001086f:	(bad)  
   140010870:	(bad)  
   140010871:	(bad)  
   140010872:	(bad)  
   140010873:	(bad)  
   140010874:	(bad)  
   140010875:	(bad)  
   140010876:	(bad)  
   140010877:	(bad)  
   140010878:	(bad)  
   140010879:	(bad)  
   14001087a:	(bad)  
   14001087b:	(bad)  
   14001087c:	(bad)  
   14001087d:	(bad)  
   14001087e:	(bad)  
   14001087f:	(bad)  
   140010880:	(bad)  
   140010881:	(bad)  
   140010882:	(bad)  
   140010883:	(bad)  
   140010884:	(bad)  
   140010885:	(bad)  
   140010886:	(bad)  
   140010887:	(bad)  
   140010888:	(bad)  
   140010889:	(bad)  
   14001088a:	(bad)  
   14001088b:	(bad)  
   14001088c:	(bad)  
   14001088d:	(bad)  
   14001088e:	(bad)  
   14001088f:	(bad)  
   140010890:	(bad)  
   140010891:	(bad)  
   140010892:	(bad)  
   140010893:	(bad)  
   140010894:	(bad)  
   140010895:	(bad)  
   140010896:	(bad)  
   140010897:	(bad)  
   140010898:	(bad)  
   140010899:	(bad)  
   14001089a:	(bad)  
   14001089b:	(bad)  
   14001089c:	(bad)  
   14001089d:	(bad)  
   14001089e:	(bad)  
   14001089f:	push   rbx
   1400108a1:	idiv   ebp
   1400108a3:	push   QWORD PTR [rsp+rbp*4-0x10]
   1400108a7:	(bad)  
   1400108a8:	jle    0x14001085d
   1400108aa:	icebp  
   1400108ab:	(bad)  
   1400108ac:	(bad)  
   1400108ad:	(bad)  
   1400108ae:	(bad)  
   1400108af:	(bad)  
   1400108b0:	(bad)  
   1400108b1:	(bad)  
   1400108b2:	(bad)  
   1400108b3:	(bad)  
   1400108b4:	(bad)  
   1400108b5:	(bad)  
   1400108b6:	(bad)  
   1400108b7:	(bad)  
   1400108b8:	(bad)  
   1400108b9:	(bad)  
   1400108ba:	(bad)  
   1400108bb:	(bad)  
   1400108bc:	(bad)  
   1400108bd:	(bad)  
   1400108be:	(bad)  
   1400108bf:	(bad)  
   1400108c0:	(bad)  
   1400108c1:	(bad)  
   1400108c2:	(bad)  
   1400108c3:	(bad)  
   1400108c4:	(bad)  
   1400108c5:	(bad)  
   1400108c6:	(bad)  
   1400108c7:	(bad)  
   1400108c8:	(bad)  
   1400108c9:	(bad)  
   1400108ca:	(bad)  
   1400108cb:	(bad)  
   1400108cc:	(bad)  
   1400108cd:	(bad)  
   1400108ce:	(bad)  
   1400108cf:	(bad)  
   1400108d0:	(bad)  
   1400108d1:	(bad)  
   1400108d2:	(bad)  
   1400108d3:	(bad)  
   1400108d4:	(bad)  
   1400108d5:	(bad)  
   1400108d6:	(bad)  
   1400108d7:	(bad)  
   1400108d8:	(bad)  
   1400108d9:	(bad)  
   1400108da:	(bad)  
   1400108db:	(bad)  
   1400108dc:	(bad)  
   1400108dd:	(bad)  
   1400108de:	(bad)  
   1400108df:	(bad)  
   1400108e0:	(bad)  
   1400108e1:	(bad)  
   1400108e2:	(bad)  
   1400108e3:	(bad)  
   1400108e4:	(bad)  
   1400108e5:	(bad)  
   1400108e6:	(bad)  
   1400108e7:	(bad)  
   1400108e8:	(bad)  
   1400108e9:	(bad)  
   1400108ea:	(bad)  
   1400108eb:	(bad)  
   1400108ec:	std    
   1400108ed:	std    
   1400108ee:	std    
   1400108ef:	(bad)  
   1400108f0:	out    dx,eax
   1400108f1:	out    dx,eax
   1400108f2:	out    dx,eax
   1400108f3:	inc    esp
   1400108f5:	mov    al,0x9a
   1400108f7:	inc    ebp
   1400108f9:	mov    dl,0x9c
   1400108fb:	jmp    rsi
   1400108fd:	jrcxz  0x1400108e0
   1400108ff:	(bad)  
   140010900:	cli    
   140010901:	cli    
   140010902:	cli    
   140010903:	(bad)  
   140010904:	(bad)  
   140010905:	(bad)  
   140010906:	(bad)  
   140010907:	(bad)  
   140010908:	(bad)  
   140010909:	(bad)  
   14001090a:	(bad)  
   14001090b:	(bad)  
   14001090c:	(bad)  
   14001090d:	(bad)  
   14001090e:	(bad)  
   14001090f:	(bad)  
   140010910:	(bad)  
   140010911:	(bad)  
   140010912:	(bad)  
   140010913:	(bad)  
   140010914:	(bad)  
   140010915:	(bad)  
   140010916:	(bad)  
   140010917:	(bad)  
   140010918:	(bad)  
   140010919:	(bad)  
   14001091a:	(bad)  
   14001091b:	(bad)  
   14001091c:	(bad)  
   14001091d:	(bad)  
   14001091e:	(bad)  
   14001091f:	(bad)  
   140010920:	(bad)  
   140010921:	(bad)  
   140010922:	(bad)  
   140010923:	(bad)  
   140010924:	(bad)  
   140010925:	(bad)  
   140010926:	(bad)  
   140010927:	(bad)  
   140010928:	(bad)  
   140010929:	(bad)  
   14001092a:	(bad)  
   14001092b:	(bad)  
   14001092c:	(bad)  
   14001092d:	(bad)  
   14001092e:	(bad)  
   14001092f:	(bad)  
   140010930:	(bad)  
   140010931:	(bad)  
   140010932:	(bad)  
   140010933:	(bad)  
   140010934:	(bad)  
   140010935:	(bad)  
   140010936:	(bad)  
   140010937:	(bad)  
   140010938:	(bad)  
   140010939:	(bad)  
   14001093a:	(bad)  
   14001093b:	(bad)  
   14001093c:	(bad)  
   14001093d:	(bad)  
   14001093e:	(bad)  
   14001093f:	(bad)  
   140010940:	(bad)  
   140010941:	(bad)  
   140010942:	(bad)  
   140010943:	(bad)  
   140010944:	(bad)  
   140010945:	(bad)  
   140010946:	(bad)  
   140010947:	(bad)  
   140010948:	(bad)  
   140010949:	(bad)  
   14001094a:	(bad)  
   14001094b:	(bad)  
   14001094c:	(bad)  
   14001094d:	(bad)  
   14001094e:	(bad)  
   14001094f:	(bad)  
   140010950:	(bad)  
   140010951:	(bad)  
   140010952:	(bad)  
   140010953:	(bad)  
   140010954:	(bad)  
   140010955:	(bad)  
   140010956:	(bad)  
   140010957:	(bad)  
   140010958:	(bad)  
   140010959:	(bad)  
   14001095a:	(bad)  
   14001095b:	(bad)  
   14001095c:	(bad)  
   14001095d:	(bad)  
   14001095e:	(bad)  
   14001095f:	(bad)  
   140010960:	std    
   140010961:	std    
   140010962:	(bad)  
   140010963:	push   QWORD PTR [rbp-0x4d00092d]
   140010969:	shl    dh,cl
   14001096b:	(bad)  
   14001096c:	(bad)  
   14001096d:	(bad)  
   14001096e:	(bad)  
   14001096f:	(bad)  
   140010970:	(bad)  
   140010971:	(bad)  
   140010972:	(bad)  
   140010973:	(bad)  
   140010974:	(bad)  
   140010975:	(bad)  
   140010976:	(bad)  
   140010977:	(bad)  
   140010978:	(bad)  
   140010979:	(bad)  
   14001097a:	(bad)  
   14001097b:	(bad)  
   14001097c:	(bad)  
   14001097d:	(bad)  
   14001097e:	(bad)  
   14001097f:	(bad)  
   140010980:	(bad)  
   140010981:	(bad)  
   140010982:	(bad)  
   140010983:	(bad)  
   140010984:	(bad)  
   140010985:	(bad)  
   140010986:	(bad)  
   140010987:	(bad)  
   140010988:	(bad)  
   140010989:	(bad)  
   14001098a:	(bad)  
   14001098b:	(bad)  
   14001098c:	(bad)  
   14001098d:	(bad)  
   14001098e:	(bad)  
   14001098f:	(bad)  
   140010990:	(bad)  
   140010991:	(bad)  
   140010992:	(bad)  
   140010993:	(bad)  
   140010994:	(bad)  
   140010995:	(bad)  
   140010996:	(bad)  
   140010997:	(bad)  
   140010998:	(bad)  
   140010999:	(bad)  
   14001099a:	(bad)  
   14001099b:	(bad)  
   14001099c:	(bad)  
   14001099d:	(bad)  
   14001099e:	(bad)  
   14001099f:	(bad)  
   1400109a0:	(bad)  
   1400109a1:	(bad)  
   1400109a2:	(bad)  
   1400109a3:	(bad)  
   1400109a4:	(bad)  
   1400109a5:	(bad)  
   1400109a6:	(bad)  
   1400109a7:	(bad)  
   1400109a8:	(bad)  
   1400109a9:	(bad)  
   1400109aa:	(bad)  
   1400109ab:	(bad)  
   1400109ac:	sti    
   1400109ad:	sti    
   1400109ae:	sti    
   1400109af:	(bad)  
   1400109b0:	in     eax,dx
   1400109b1:	in     eax,dx
   1400109b2:	in     eax,dx
   1400109b3:	inc    ebp
   1400109b5:	mov    dl,0x9c
   1400109b7:	inc    esi
   1400109b9:	mov    bl,0x9e
   1400109bb:	js     0x140010990
   1400109bd:	leave  
   1400109be:	mov    esi,0xf5f5f5ff
   1400109c3:	(bad)  
   1400109c4:	std    
   1400109c5:	std    
   1400109c6:	std    
   1400109c7:	(bad)  
   1400109c8:	(bad)  
   1400109c9:	(bad)  
   1400109ca:	(bad)  
   1400109cb:	(bad)  
   1400109cc:	(bad)  
   1400109cd:	(bad)  
   1400109ce:	(bad)  
   1400109cf:	(bad)  
   1400109d0:	(bad)  
   1400109d1:	(bad)  
   1400109d2:	(bad)  
   1400109d3:	(bad)  
   1400109d4:	(bad)  
   1400109d5:	(bad)  
   1400109d6:	(bad)  
   1400109d7:	(bad)  
   1400109d8:	(bad)  
   1400109d9:	(bad)  
   1400109da:	(bad)  
   1400109db:	(bad)  
   1400109dc:	(bad)  
   1400109dd:	(bad)  
   1400109de:	(bad)  
   1400109df:	(bad)  
   1400109e0:	(bad)  
   1400109e1:	(bad)  
   1400109e2:	(bad)  
   1400109e3:	(bad)  
   1400109e4:	(bad)  
   1400109e5:	(bad)  
   1400109e6:	(bad)  
   1400109e7:	(bad)  
   1400109e8:	(bad)  
   1400109e9:	(bad)  
   1400109ea:	(bad)  
   1400109eb:	(bad)  
   1400109ec:	(bad)  
   1400109ed:	(bad)  
   1400109ee:	(bad)  
   1400109ef:	(bad)  
   1400109f0:	(bad)  
   1400109f1:	(bad)  
   1400109f2:	(bad)  
   1400109f3:	(bad)  
   1400109f4:	(bad)  
   1400109f5:	(bad)  
   1400109f6:	(bad)  
   1400109f7:	(bad)  
   1400109f8:	(bad)  
   1400109f9:	(bad)  
   1400109fa:	(bad)  
   1400109fb:	(bad)  
   1400109fc:	(bad)  
   1400109fd:	(bad)  
   1400109fe:	(bad)  
   1400109ff:	(bad)  
   140010a00:	(bad)  
   140010a01:	(bad)  
   140010a02:	(bad)  
   140010a03:	(bad)  
   140010a04:	(bad)  
   140010a05:	(bad)  
   140010a06:	(bad)  
   140010a07:	(bad)  
   140010a08:	(bad)  
   140010a09:	(bad)  
   140010a0a:	(bad)  
   140010a0b:	(bad)  
   140010a0c:	(bad)  
   140010a0d:	(bad)  
   140010a0e:	(bad)  
   140010a0f:	(bad)  
   140010a10:	(bad)  
   140010a11:	(bad)  
   140010a12:	(bad)  
   140010a13:	(bad)  
   140010a14:	(bad)  
   140010a15:	(bad)  
   140010a16:	(bad)  
   140010a17:	(bad)  
   140010a18:	(bad)  
   140010a19:	(bad)  
   140010a1a:	(bad)  
   140010a1b:	(bad)  
   140010a1c:	(bad)  
   140010a1d:	(bad)  
   140010a1e:	(bad)  
   140010a1f:	(bad)  
   140010a20:	(bad)  
   140010a21:	(bad)  
   140010a22:	(bad)  
   140010a23:	(bad)  
   140010a24:	(bad)  
   140010a25:	(bad)  
   140010a26:	(bad)  
   140010a27:	(bad)  
   140010a28:	(bad)  
   140010a29:	(bad)  
   140010a2a:	(bad)  
   140010a2b:	(bad)  
   140010a2c:	(bad)  
   140010a2d:	(bad)  
   140010a2e:	(bad)  
   140010a2f:	(bad)  
   140010a30:	(bad)  
   140010a31:	(bad)  
   140010a32:	(bad)  
   140010a33:	(bad)  
   140010a34:	(bad)  
   140010a35:	(bad)  
   140010a36:	(bad)  
   140010a37:	(bad)  
   140010a38:	(bad)  
   140010a39:	(bad)  
   140010a3a:	(bad)  
   140010a3b:	(bad)  
   140010a3c:	(bad)  
   140010a3d:	(bad)  
   140010a3e:	(bad)  
   140010a3f:	(bad)  
   140010a40:	(bad)  
   140010a41:	(bad)  
   140010a42:	(bad)  
   140010a43:	(bad)  
   140010a44:	(bad)  
   140010a45:	(bad)  
   140010a46:	(bad)  
   140010a47:	(bad)  
   140010a48:	(bad)  
   140010a49:	(bad)  
   140010a4a:	(bad)  
   140010a4b:	(bad)  
   140010a4c:	(bad)  
   140010a4d:	(bad)  
   140010a4e:	(bad)  
   140010a4f:	(bad)  
   140010a50:	(bad)  
   140010a51:	(bad)  
   140010a52:	(bad)  
   140010a53:	(bad)  
   140010a54:	(bad)  
   140010a55:	(bad)  
   140010a56:	(bad)  
   140010a57:	(bad)  
   140010a58:	(bad)  
   140010a59:	(bad)  
   140010a5a:	(bad)  
   140010a5b:	(bad)  
   140010a5c:	(bad)  
   140010a5d:	(bad)  
   140010a5e:	(bad)  
   140010a5f:	(bad)  
   140010a60:	(bad)  
   140010a61:	(bad)  
   140010a62:	(bad)  
   140010a63:	(bad)  
   140010a64:	(bad)  
   140010a65:	(bad)  
   140010a66:	(bad)  
   140010a67:	(bad)  
   140010a68:	(bad)  
   140010a69:	(bad)  
   140010a6a:	(bad)  
   140010a6b:	(bad)  
   140010a6c:	clc    
   140010a6d:	clc    
   140010a6e:	clc    
   140010a6f:	(bad)  
   140010a70:	fcmovnbe st,st(3)
   140010a72:	int3   
   140010a73:	inc    esi
   140010a75:	mov    bl,0x9e
   140010a77:	lahf   
   140010a78:	enter  0x9fb5,0x21
   140010a7c:	enter  0x9fb5,0xf9
   140010a80:	loop   0x140010a60
   140010a82:	(bad)  
   140010a84:	div    dh
   140010a86:	idiv   bh
   140010a88:	std    
   140010a89:	std    
   140010a8a:	std    
   140010a8b:	(bad)  
   140010a8c:	(bad)  
   140010a8d:	(bad)  
   140010a8e:	(bad)  
   140010a8f:	(bad)  
   140010a90:	(bad)  
   140010a91:	(bad)  
   140010a92:	(bad)  
   140010a93:	(bad)  
   140010a94:	(bad)  
   140010a95:	(bad)  
   140010a96:	(bad)  
   140010a97:	(bad)  
   140010a98:	(bad)  
   140010a99:	(bad)  
   140010a9a:	(bad)  
   140010a9b:	(bad)  
   140010a9c:	(bad)  
   140010a9d:	(bad)  
   140010a9e:	(bad)  
   140010a9f:	(bad)  
   140010aa0:	(bad)  
   140010aa1:	(bad)  
   140010aa2:	(bad)  
   140010aa3:	(bad)  
   140010aa4:	(bad)  
   140010aa5:	(bad)  
   140010aa6:	(bad)  
   140010aa7:	(bad)  
   140010aa8:	(bad)  
   140010aa9:	(bad)  
   140010aaa:	(bad)  
   140010aab:	(bad)  
   140010aac:	(bad)  
   140010aad:	(bad)  
   140010aae:	(bad)  
   140010aaf:	(bad)  
   140010ab0:	(bad)  
   140010ab1:	(bad)  
   140010ab2:	(bad)  
   140010ab3:	(bad)  
   140010ab4:	(bad)  
   140010ab5:	(bad)  
   140010ab6:	(bad)  
   140010ab7:	(bad)  
   140010ab8:	(bad)  
   140010ab9:	(bad)  
   140010aba:	(bad)  
   140010abb:	(bad)  
   140010abc:	(bad)  
   140010abd:	(bad)  
   140010abe:	(bad)  
   140010abf:	(bad)  
   140010ac0:	(bad)  
   140010ac1:	(bad)  
   140010ac2:	(bad)  
   140010ac3:	(bad)  
   140010ac4:	(bad)  
   140010ac5:	(bad)  
   140010ac6:	(bad)  
   140010ac7:	(bad)  
   140010ac8:	(bad)  
   140010ac9:	(bad)  
   140010aca:	(bad)  
   140010acb:	(bad)  
   140010acc:	(bad)  
   140010acd:	(bad)  
   140010ace:	(bad)  
   140010acf:	(bad)  
   140010ad0:	(bad)  
   140010ad1:	(bad)  
   140010ad2:	(bad)  
   140010ad3:	(bad)  
   140010ad4:	(bad)  
   140010ad5:	(bad)  
   140010ad6:	(bad)  
   140010ad7:	(bad)  
   140010ad8:	(bad)  
   140010ad9:	(bad)  
   140010ada:	(bad)  
   140010adb:	(bad)  
   140010adc:	(bad)  
   140010add:	(bad)  
   140010ade:	(bad)  
   140010adf:	(bad)  
   140010ae0:	(bad)  
   140010ae1:	(bad)  
   140010ae2:	(bad)  
   140010ae3:	(bad)  
   140010ae4:	(bad)  
   140010ae5:	(bad)  
   140010ae6:	(bad)  
   140010ae7:	(bad)  
   140010ae8:	(bad)  
   140010ae9:	(bad)  
   140010aea:	(bad)  
   140010aeb:	(bad)  
   140010aec:	(bad)  
   140010aed:	(bad)  
   140010aee:	(bad)  
   140010aef:	(bad)  
   140010af0:	(bad)  
   140010af1:	(bad)  
   140010af2:	(bad)  
   140010af3:	(bad)  
   140010af4:	(bad)  
   140010af5:	(bad)  
   140010af6:	(bad)  
   140010af7:	(bad)  
   140010af8:	(bad)  
   140010af9:	(bad)  
   140010afa:	(bad)  
   140010afb:	(bad)  
   140010afc:	(bad)  
   140010afd:	(bad)  
   140010afe:	(bad)  
   140010aff:	(bad)  
   140010b00:	(bad)  
   140010b01:	(bad)  
   140010b02:	(bad)  
   140010b03:	(bad)  
   140010b04:	(bad)  
   140010b05:	(bad)  
   140010b06:	(bad)  
   140010b07:	(bad)  
   140010b08:	(bad)  
   140010b09:	(bad)  
   140010b0a:	(bad)  
   140010b0b:	(bad)  
   140010b0c:	(bad)  
   140010b0d:	(bad)  
   140010b0e:	(bad)  
   140010b0f:	(bad)  
   140010b10:	(bad)  
   140010b11:	(bad)  
   140010b12:	(bad)  
   140010b13:	(bad)  
   140010b14:	(bad)  
   140010b15:	(bad)  
   140010b16:	(bad)  
   140010b17:	(bad)  
   140010b18:	(bad)  
   140010b19:	(bad)  
   140010b1a:	(bad)  
   140010b1b:	(bad)  
   140010b1c:	(bad)  
   140010b1d:	(bad)  
   140010b1e:	(bad)  
   140010b1f:	(bad)  
   140010b20:	(bad)  
   140010b21:	(bad)  
   140010b22:	(bad)  
   140010b23:	(bad)  
   140010b24:	std    
   140010b25:	std    
   140010b26:	std    
   140010b27:	(bad)  
   140010b28:	clc    
   140010b29:	clc    
   140010b2a:	clc    
   140010b2b:	(bad)  
   140010b2c:	out    dx,al
   140010b2d:	out    dx,al
   140010b2e:	out    dx,al
   140010b2f:	dec    esi
   140010b31:	shl    DWORD PTR [rdx-0x604a3701],0x4e
   140010b38:	add    BYTE PTR [rax],al
   140010b3a:	add    BYTE PTR [rax],al
   140010b3c:	leave  
   140010b3d:	mov    dh,0xa1
   140010b3f:	leavew 
   140010b41:	mov    dh,0xa1
   140010b43:	cld    
   140010b44:	(bad)  
   140010b46:	leave  
   140010b47:	(bad)  
   140010b48:	out    dx,eax
   140010b49:	out    dx,eax
   140010b4a:	out    dx,eax
   140010b4b:	push   rbx
   140010b4d:	repz repz push rdi
   140010b51:	div    edi
   140010b53:	(bad)  
   140010b54:	clc    
   140010b55:	clc    
   140010b56:	clc    
   140010b57:	(bad)  
   140010b58:	clc    
   140010b59:	clc    
   140010b5a:	clc    
   140010b5b:	(bad)  
   140010b5c:	clc    
   140010b5d:	clc    
   140010b5e:	clc    
   140010b5f:	(bad)  
   140010b60:	clc    
   140010b61:	clc    
   140010b62:	clc    
   140010b63:	(bad)  
   140010b64:	clc    
   140010b65:	clc    
   140010b66:	clc    
   140010b67:	(bad)  
   140010b68:	clc    
   140010b69:	clc    
   140010b6a:	clc    
   140010b6b:	(bad)  
   140010b6c:	clc    
   140010b6d:	clc    
   140010b6e:	clc    
   140010b6f:	(bad)  
   140010b70:	clc    
   140010b71:	clc    
   140010b72:	clc    
   140010b73:	(bad)  
   140010b74:	clc    
   140010b75:	clc    
   140010b76:	clc    
   140010b77:	(bad)  
   140010b78:	clc    
   140010b79:	clc    
   140010b7a:	clc    
   140010b7b:	(bad)  
   140010b7c:	clc    
   140010b7d:	clc    
   140010b7e:	clc    
   140010b7f:	(bad)  
   140010b80:	clc    
   140010b81:	clc    
   140010b82:	clc    
   140010b83:	(bad)  
   140010b84:	clc    
   140010b85:	clc    
   140010b86:	clc    
   140010b87:	(bad)  
   140010b88:	clc    
   140010b89:	clc    
   140010b8a:	clc    
   140010b8b:	(bad)  
   140010b8c:	clc    
   140010b8d:	clc    
   140010b8e:	clc    
   140010b8f:	(bad)  
   140010b90:	clc    
   140010b91:	clc    
   140010b92:	clc    
   140010b93:	(bad)  
   140010b94:	clc    
   140010b95:	clc    
   140010b96:	clc    
   140010b97:	(bad)  
   140010b98:	clc    
   140010b99:	clc    
   140010b9a:	clc    
   140010b9b:	(bad)  
   140010b9c:	clc    
   140010b9d:	clc    
   140010b9e:	clc    
   140010b9f:	(bad)  
   140010ba0:	clc    
   140010ba1:	clc    
   140010ba2:	clc    
   140010ba3:	(bad)  
   140010ba4:	clc    
   140010ba5:	clc    
   140010ba6:	clc    
   140010ba7:	(bad)  
   140010ba8:	clc    
   140010ba9:	clc    
   140010baa:	clc    
   140010bab:	(bad)  
   140010bac:	clc    
   140010bad:	clc    
   140010bae:	clc    
   140010baf:	(bad)  
   140010bb0:	clc    
   140010bb1:	clc    
   140010bb2:	clc    
   140010bb3:	(bad)  
   140010bb4:	clc    
   140010bb5:	clc    
   140010bb6:	clc    
   140010bb7:	(bad)  
   140010bb8:	clc    
   140010bb9:	clc    
   140010bba:	clc    
   140010bbb:	(bad)  
   140010bbc:	clc    
   140010bbd:	clc    
   140010bbe:	clc    
   140010bbf:	(bad)  
   140010bc0:	clc    
   140010bc1:	clc    
   140010bc2:	clc    
   140010bc3:	(bad)  
   140010bc4:	clc    
   140010bc5:	clc    
   140010bc6:	clc    
   140010bc7:	(bad)  
   140010bc8:	clc    
   140010bc9:	clc    
   140010bca:	clc    
   140010bcb:	(bad)  
   140010bcc:	clc    
   140010bcd:	clc    
   140010bce:	clc    
   140010bcf:	(bad)  
   140010bd0:	clc    
   140010bd1:	clc    
   140010bd2:	clc    
   140010bd3:	(bad)  
   140010bd4:	clc    
   140010bd5:	clc    
   140010bd6:	clc    
   140010bd7:	(bad)  
   140010bd8:	clc    
   140010bd9:	clc    
   140010bda:	clc    
   140010bdb:	push   rdi
   140010bdd:	div    edi
   140010bdf:	push   rsp
   140010be1:	hlt    
   140010be2:	hlt    
   140010be3:	push   rax
   140010be5:	lock lock (bad) 
   140010be8:	(bad)  
   140010bea:	int    0xff
   140010bec:	iret   
   140010bed:	shl    DWORD PTR [rbx-0x5e493601],0x99
	...
   140010c00:	retf   0xa2b7
   140010c03:	xor    ecx,edx
   140010c05:	mov    bh,0xa2
   140010c07:	xchg   esi,eax
   140010c08:	retf   0xa2b7
   140010c0b:	dec    edx
   140010c0d:	mov    bh,0xa2
   140010c0f:	dec    edx
   140010c11:	mov    bh,0xa2
   140010c13:	dec    edx
   140010c15:	mov    bh,0xa2
   140010c17:	dec    edx
   140010c19:	mov    bh,0xa2
   140010c1b:	dec    edx
   140010c1d:	mov    bh,0xa2
   140010c1f:	dec    edx
   140010c21:	mov    bh,0xa2
   140010c23:	dec    edx
   140010c25:	mov    bh,0xa2
   140010c27:	dec    edx
   140010c29:	mov    bh,0xa2
   140010c2b:	dec    edx
   140010c2d:	mov    bh,0xa2
   140010c2f:	dec    edx
   140010c31:	mov    bh,0xa2
   140010c33:	dec    edx
   140010c35:	mov    bh,0xa2
   140010c37:	dec    edx
   140010c39:	mov    bh,0xa2
   140010c3b:	dec    edx
   140010c3d:	mov    bh,0xa2
   140010c3f:	dec    edx
   140010c41:	mov    bh,0xa2
   140010c43:	dec    edx
   140010c45:	mov    bh,0xa2
   140010c47:	dec    edx
   140010c49:	mov    bh,0xa2
   140010c4b:	dec    edx
   140010c4d:	mov    bh,0xa2
   140010c4f:	dec    edx
   140010c51:	mov    bh,0xa2
   140010c53:	dec    edx
   140010c55:	mov    bh,0xa2
   140010c57:	dec    edx
   140010c59:	mov    bh,0xa2
   140010c5b:	dec    edx
   140010c5d:	mov    bh,0xa2
   140010c5f:	dec    edx
   140010c61:	mov    bh,0xa2
   140010c63:	dec    edx
   140010c65:	mov    bh,0xa2
   140010c67:	dec    edx
   140010c69:	mov    bh,0xa2
   140010c6b:	dec    edx
   140010c6d:	mov    bh,0xa2
   140010c6f:	dec    edx
   140010c71:	mov    bh,0xa2
   140010c73:	dec    edx
   140010c75:	mov    bh,0xa2
   140010c77:	dec    edx
   140010c79:	mov    bh,0xa2
   140010c7b:	dec    edx
   140010c7d:	mov    bh,0xa2
   140010c7f:	dec    edx
   140010c81:	mov    bh,0xa2
   140010c83:	dec    edx
   140010c85:	mov    bh,0xa2
   140010c87:	dec    edx
   140010c89:	mov    bh,0xa2
   140010c8b:	dec    edx
   140010c8d:	mov    bh,0xa2
   140010c8f:	dec    edx
   140010c91:	mov    bh,0xa2
   140010c93:	dec    edx
   140010c95:	mov    bh,0xa2
   140010c97:	dec    edx
   140010c99:	mov    bh,0xa2
   140010c9b:	dec    edx
   140010c9d:	mov    bh,0xa2
   140010c9f:	dec    edx
   140010ca1:	mov    bh,0xa2
   140010ca3:	dec    edx
   140010ca5:	mov    bh,0xa2
   140010ca7:	dec    edx
   140010ca9:	mov    bh,0xa2
   140010cab:	lahf   
   140010cac:	retf   0xa2b7
   140010caf:	rex.WXB add BYTE PTR [r8],al
   140010cb2:	add    BYTE PTR [rax],al
   140010cb4:	add    BYTE PTR [rax],al
   140010cb6:	add    BYTE PTR [rax],al
   140010cb8:	rol    BYTE PTR [rax],0x0
   140010cbb:	add    BYTE PTR [rax],al
   140010cbd:	add    eax,DWORD PTR [rax]
   140010cbf:	add    BYTE PTR [rax+0x0],al
   140010cc5:	add    eax,esp
   140010cc7:	add    BYTE PTR [rax],al
   140010cc9:	add    BYTE PTR [rax],al
   140010ccb:	add    BYTE PTR [rax],al
   140010ccd:	add    al,al
   140010ccf:	add    BYTE PTR [rax],al
   140010cd1:	add    BYTE PTR [rax],al
   140010cd3:	add    BYTE PTR [rax],al
   140010cd5:	add    BYTE PTR [rax+0x0],al
   140010cdb:	add    BYTE PTR [rax],al
   140010cdd:	add    BYTE PTR [rax+0x0],al
	...
   140010e23:	add    BYTE PTR [rax],al
   140010e25:	add    BYTE PTR [rax+0x8000],al
   140010e2b:	add    BYTE PTR [rax],al
   140010e2d:	add    DWORD PTR [rax+0xc000],eax
   140010e33:	add    BYTE PTR [rax],al
   140010e35:	add    eax,eax
   140010e37:	add    BYTE PTR [rax],ch
   140010e39:	add    BYTE PTR [rax],al
   140010e3b:	add    BYTE PTR [rax],ah
   140010e3d:	add    BYTE PTR [rax],al
   140010e3f:	add    BYTE PTR [rax+0x0],al
   140010e42:	add    BYTE PTR [rax],al
   140010e44:	add    DWORD PTR [rax],eax
   140010e46:	and    BYTE PTR [rax],al
	...
   140010e68:	outs   dx,BYTE PTR ds:[rsi]
   140010e69:	pop    rax
   140010e6a:	cmp    DWORD PTR [rax+0x6e],eax
   140010e6d:	pop    rax
   140010e6e:	cmp    DWORD PTR [rdi+0x6e],edi
   140010e71:	pop    rax
   140010e72:	cmp    DWORD PTR [rdi-0xc6a792],edi
   140010e78:	outs   dx,BYTE PTR ds:[rsi]
   140010e79:	pop    rax
   140010e7a:	cmp    edi,edi
   140010e7c:	outs   dx,BYTE PTR ds:[rsi]
   140010e7d:	pop    rax
   140010e7e:	cmp    edi,edi
   140010e80:	outs   dx,BYTE PTR ds:[rsi]
   140010e81:	pop    rax
   140010e82:	cmp    edi,edi
   140010e84:	outs   dx,BYTE PTR ds:[rsi]
   140010e85:	pop    rax
   140010e86:	cmp    edi,edi
   140010e88:	outs   dx,BYTE PTR ds:[rsi]
   140010e89:	pop    rax
   140010e8a:	cmp    edi,edi
   140010e8c:	outs   dx,BYTE PTR ds:[rsi]
   140010e8d:	pop    rax
   140010e8e:	cmp    edi,edi
   140010e90:	outs   dx,BYTE PTR ds:[rsi]
   140010e91:	pop    rax
   140010e92:	cmp    edi,edi
   140010e94:	outs   dx,BYTE PTR ds:[rsi]
   140010e95:	pop    rax
   140010e96:	cmp    edi,edi
   140010e98:	outs   dx,BYTE PTR ds:[rsi]
   140010e99:	pop    rax
   140010e9a:	cmp    edi,edi
   140010e9c:	outs   dx,BYTE PTR ds:[rsi]
   140010e9d:	pop    rax
   140010e9e:	cmp    edi,edi
   140010ea0:	outs   dx,BYTE PTR ds:[rsi]
   140010ea1:	pop    rax
   140010ea2:	cmp    edi,edi
   140010ea4:	outs   dx,BYTE PTR ds:[rsi]
   140010ea5:	pop    rax
   140010ea6:	cmp    edi,edi
   140010ea8:	outs   dx,BYTE PTR ds:[rsi]
   140010ea9:	pop    rax
   140010eaa:	cmp    edi,edi
   140010eac:	outs   dx,BYTE PTR ds:[rsi]
   140010ead:	pop    rax
   140010eae:	cmp    edi,edi
   140010eb0:	outs   dx,BYTE PTR ds:[rsi]
   140010eb1:	pop    rax
   140010eb2:	cmp    edi,edi
   140010eb4:	outs   dx,BYTE PTR ds:[rsi]
   140010eb5:	pop    rax
   140010eb6:	cmp    edi,edi
   140010eb8:	outs   dx,BYTE PTR ds:[rsi]
   140010eb9:	pop    rax
   140010eba:	cmp    edi,edi
   140010ebc:	outs   dx,BYTE PTR ds:[rsi]
   140010ebd:	pop    rax
   140010ebe:	cmp    edi,edi
   140010ec0:	outs   dx,BYTE PTR ds:[rsi]
   140010ec1:	pop    rax
   140010ec2:	cmp    edi,edi
   140010ec4:	outs   dx,BYTE PTR ds:[rsi]
   140010ec5:	pop    rax
   140010ec6:	cmp    edi,edi
   140010ec8:	outs   dx,BYTE PTR ds:[rsi]
   140010ec9:	pop    rax
   140010eca:	cmp    edi,edi
   140010ecc:	outs   dx,BYTE PTR ds:[rsi]
   140010ecd:	pop    rax
   140010ece:	cmp    DWORD PTR [rdi+0x7f39586e],edi
   140010ed4:	outs   dx,BYTE PTR ds:[rsi]
   140010ed5:	pop    rax
   140010ed6:	cmp    DWORD PTR [rax+0x0],eax
	...
   140010ee1:	add    BYTE PTR [rax],al
   140010ee3:	add    BYTE PTR [rax+0x5a],dh
   140010ee6:	cmp    eax,DWORD PTR [rax+0x76]
   140010ee9:	data16 rex.WRX call QWORD PTR [rax-0x4600897b]
   140010ef1:	mov    ah,0xac
   140010ef3:	jmp    rdi
   140010ef5:	out    0xe7,eax
   140010ef7:	(bad)  
   140010ef8:	call   0x12900f7e5
   140010efd:	call   0x128ea0eea
   140010f02:	call   0x128e9f806
   140010f07:	(bad)  
   140010f08:	call   0x12900f7f5
   140010f0d:	call   0x128ea0efa
   140010f12:	call   0x128e9f816
   140010f17:	(bad)  
   140010f18:	call   0x12900f805
   140010f1d:	call   0x128ea0f0a
   140010f22:	call   0x128e9f826
   140010f27:	(bad)  
   140010f28:	call   0x12900f815
   140010f2d:	call   0x128ea0f1a
   140010f32:	call   0x128e9f836
   140010f37:	(bad)  
   140010f38:	call   0x12900f825
   140010f3d:	call   0x128ea0f2a
   140010f42:	call   0x128e9f846
   140010f47:	jmp    rdi
   140010f49:	out    0xe7,eax
   140010f4b:	(bad)  
   140010f4c:	mov    ecx,0x90ffacb4
   140010f51:	test   DWORD PTR [rsi-0x1],esi
   140010f54:	jbe    0x140010fbc
   140010f56:	rex.WRX push QWORD PTR [rax+0x5a]
   140010f5a:	cmp    eax,DWORD PTR [rax+0x0]
   140010f5d:	add    BYTE PTR [rax],al
   140010f5f:	add    BYTE PTR [rdx+0x5d],dh
   140010f62:	ds rex jbe 0x140010fcc
   140010f66:	rex.WRXB push QWORD PTR [r14-0x16005a51]
   140010f6d:	jmp    0x12ff10f5b
   140010f72:	out    dx,eax
   140010f73:	push   rax
   140010f75:	lock lock push rcx
   140010f79:	icebp  
   140010f7a:	icebp  
   140010f7b:	push   rcx
   140010f7d:	icebp  
   140010f7e:	icebp  
   140010f7f:	push   rcx
   140010f81:	icebp  
   140010f82:	icebp  
   140010f83:	push   rcx
   140010f85:	icebp  
   140010f86:	icebp  
   140010f87:	push   rcx
   140010f89:	icebp  
   140010f8a:	icebp  
   140010f8b:	push   rcx
   140010f8d:	icebp  
   140010f8e:	icebp  
   140010f8f:	push   rcx
   140010f91:	icebp  
   140010f92:	icebp  
   140010f93:	push   rcx
   140010f95:	icebp  
   140010f96:	icebp  
   140010f97:	push   rcx
   140010f99:	icebp  
   140010f9a:	icebp  
   140010f9b:	push   rcx
   140010f9d:	icebp  
   140010f9e:	icebp  
   140010f9f:	push   rcx
   140010fa1:	icebp  
   140010fa2:	icebp  
   140010fa3:	push   rcx
   140010fa5:	icebp  
   140010fa6:	icebp  
   140010fa7:	push   rcx
   140010fa9:	icebp  
   140010faa:	icebp  
   140010fab:	push   rcx
   140010fad:	icebp  
   140010fae:	icebp  
   140010faf:	push   rcx
   140010fb1:	icebp  
   140010fb2:	icebp  
   140010fb3:	push   rcx
   140010fb5:	icebp  
   140010fb6:	icebp  
   140010fb7:	push   rcx
   140010fb9:	icebp  
   140010fba:	icebp  
   140010fbb:	push   rcx
   140010fbd:	icebp  
   140010fbe:	icebp  
   140010fbf:	push   rcx
   140010fc1:	icebp  
   140010fc2:	icebp  
   140010fc3:	push   rcx
   140010fc5:	icebp  
   140010fc6:	icebp  
   140010fc7:	push   rax
   140010fc9:	lock lock (bad) 
   140010fcc:	out    dx,eax
   140010fcd:	out    dx,eax
   140010fce:	out    dx,eax
   140010fcf:	(bad)  
   140010fd0:	jmp    0xf700f9be
   140010fd5:	scas   eax,DWORD PTR es:[rdi]
   140010fd6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010fd7:	push   QWORD PTR [rsi+0x66]
   140010fda:	rex.WRXB push QWORD PTR [r10+0x5d]
   140010fde:	ds rex jne 0x140011041
   140010fe2:	rex jg 0x140010f87
   140010fe5:	xchg   edi,eax
   140010fe6:	xchg   edi,edi
   140010fe8:	in     al,0xe4
   140010fea:	in     al,0xff
   140010fec:	in     al,dx
   140010fed:	in     al,dx
   140010fee:	in     al,dx
   140010fef:	(bad)  
   140010ff0:	out    dx,al
   140010ff1:	out    dx,al
   140010ff2:	out    dx,al
   140010ff3:	(bad)  
   140010ff4:	out    dx,al
   140010ff5:	out    dx,al
   140010ff6:	out    dx,al
   140010ff7:	(bad)  
   140010ff8:	out    dx,al
   140010ff9:	out    dx,al
   140010ffa:	out    dx,al
   140010ffb:	(bad)  
   140010ffc:	out    dx,al
   140010ffd:	out    dx,al
   140010ffe:	out    dx,al
   140010fff:	(bad)  
   140011000:	out    dx,al
   140011001:	out    dx,al
   140011002:	out    dx,al
   140011003:	(bad)  
   140011004:	out    dx,al
   140011005:	out    dx,al
   140011006:	out    dx,al
   140011007:	(bad)  
   140011008:	out    dx,al
   140011009:	out    dx,al
   14001100a:	out    dx,al
   14001100b:	(bad)  
   14001100c:	out    dx,al
   14001100d:	out    dx,al
   14001100e:	out    dx,al
   14001100f:	(bad)  
   140011010:	out    dx,al
   140011011:	out    dx,al
   140011012:	out    dx,al
   140011013:	(bad)  
   140011014:	out    dx,al
   140011015:	out    dx,al
   140011016:	out    dx,al
   140011017:	(bad)  
   140011018:	out    dx,al
   140011019:	out    dx,al
   14001101a:	out    dx,al
   14001101b:	(bad)  
   14001101c:	out    dx,al
   14001101d:	out    dx,al
   14001101e:	out    dx,al
   14001101f:	(bad)  
   140011020:	out    dx,al
   140011021:	out    dx,al
   140011022:	out    dx,al
   140011023:	(bad)  
   140011024:	out    dx,al
   140011025:	out    dx,al
   140011026:	out    dx,al
   140011027:	(bad)  
   140011028:	out    dx,al
   140011029:	out    dx,al
   14001102a:	out    dx,al
   14001102b:	(bad)  
   14001102c:	out    dx,al
   14001102d:	out    dx,al
   14001102e:	out    dx,al
   14001102f:	(bad)  
   140011030:	out    dx,al
   140011031:	out    dx,al
   140011032:	out    dx,al
   140011033:	(bad)  
   140011034:	out    dx,al
   140011035:	out    dx,al
   140011036:	out    dx,al
   140011037:	(bad)  
   140011038:	out    dx,al
   140011039:	out    dx,al
   14001103a:	out    dx,al
   14001103b:	(bad)  
   14001103c:	out    dx,al
   14001103d:	out    dx,al
   14001103e:	out    dx,al
   14001103f:	(bad)  
   140011040:	out    dx,al
   140011041:	out    dx,al
   140011042:	out    dx,al
   140011043:	(bad)  
   140011044:	out    dx,al
   140011045:	out    dx,al
   140011046:	out    dx,al
   140011047:	(bad)  
   140011048:	out    dx,al
   140011049:	out    dx,al
   14001104a:	out    dx,al
   14001104b:	(bad)  
   14001104c:	out    dx,al
   14001104d:	out    dx,al
   14001104e:	out    dx,al
   14001104f:	(bad)  
   140011050:	in     al,dx
   140011051:	in     al,dx
   140011052:	in     al,dx
   140011053:	jmp    rsp
   140011055:	in     al,0xe4
   140011057:	jmp    QWORD PTR [rdx+0x75ff8797]
   14001105d:	pop    rdi
   14001105e:	rex jg 0x1400110d8
   140011061:	(bad)
   140011066:	scas   eax,DWORD PTR es:[rdi]
   140011067:	jmp    rdi
   140011069:	out    0xe7,eax
   14001106b:	(bad)  
   14001106c:	jmp    0x140011059
   14001106e:	jmp    0x14001106f
   140011070:	jmp    0x14001105d
   140011072:	jmp    0x140011073
   140011074:	jmp    0x140011061
   140011076:	jmp    0x140011077
   140011078:	fstp   st(0)
   14001107a:	sar    bh,cl
   14001107c:	int3   
   14001107d:	ret    
   14001107e:	mov    bh,0xff
   140011080:	mov    edx,0xabff98aa
   140011085:	xchg   edi,eax
   140011086:	cmp    bh,0xa5
   140011089:	xchg   ecx,eax
   14001108a:	ja     0x14001108b
   14001108c:	popf   
   14001108d:	xchg   BYTE PTR [rdx-0x1],ch
   140011090:	cdq    
   140011091:	(bad)  
   140011092:	call   FWORD PTR gs:[rbx-0x6400997d]
   140011099:	and    DWORD PTR [rsi-0x1],0xffffff9b
   14001109d:	test   BYTE PTR [rdi-0x1],ah
   1400110a0:	fwait
   1400110a1:	and    DWORD PTR [rsi-0x1],0xffffff9b
   1400110a5:	and    DWORD PTR [rsi-0x1],0xffffff9b
   1400110a9:	and    DWORD PTR [rsi-0x1],0xffffff9e
   1400110ad:	xchg   DWORD PTR [rdi+rdi*8-0x58],ebp
   1400110b1:	xchg   ebp,eax
   1400110b2:	jl     0x1400110b3
   1400110b4:	mov    ch,0xa5
   1400110b6:	nop
   1400110b7:	dec    ecx
   1400110b9:	mov    ebp,0xdadeffb0
   1400110be:	(bad)  
   1400110bf:	(bad)  
   1400110c0:	(bad)  
   1400110c1:	(bad)  
   1400110c2:	call   0x12becfcc6
   1400110c7:	(bad)  
   1400110c8:	jmp    0x1400110b5
   1400110ca:	jmp    0x1400110cb
   1400110cc:	jmp    0x1400110b9
   1400110ce:	jmp    0x1400110cf
   1400110d0:	jmp    0x1400110bd
   1400110d2:	jmp    0x1400110d3
   1400110d4:	out    0xe7,eax
   1400110d6:	out    0xff,eax
   1400110d8:	mov    esp,0x77ffafb7
   1400110dd:	(bad)
   1400110e2:	rex.RX call rdi
   1400110e5:	xlat   BYTE PTR ds:[rbx]
   1400110e6:	xlat   BYTE PTR ds:[rbx]
   1400110e7:	jmp    rdi
   1400110e9:	out    0xe7,eax
   1400110eb:	(bad)  
   1400110ec:	jmp    0x12a00fada
   1400110f1:	jmp    0x129eb10df
   1400110f6:	jmp    0x1a885acfa
   1400110fb:	dec    DWORD PTR [rbp-0x6600ac8d]
   140011101:	and    DWORD PTR [rdi+rdi*8-0x50],0xbcff889e
   140011109:	scas   al,BYTE PTR es:[rdi]
   14001110a:	popf   
   14001110b:	dec    edx
   14001110d:	shl    DWORD PTR [rsi-0x44393101],0xff
   140011114:	(bad)  
   140011115:	(bad)  
   140011116:	mov    ebx,0xbbc6ceff
   14001111b:	dec    esi
   14001111d:	(bad)  
   14001111e:	mov    edx,0xbbc6ceff
   140011123:	dec    esi
   140011125:	(bad)  
   140011126:	mov    edx,0xbac5ceff
   14001112b:	(bad)  
   14001112c:	mov    esp,0xb5ff9dae
   140011131:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011132:	xchg   ebx,eax
   140011133:	jmp    FWORD PTR [rbx-0x5f007d68]
   140011139:	mov    dh,BYTE PTR [rcx-0x1]
   14001113c:	movabs ds:0xe9ffb2bfc9ff748e,eax
   140011145:	jmp    0x129eb1133
   14001114a:	jmp    0x129eafb4e
   14001114f:	(bad)  
   140011150:	jmp    0x12800fb3e
   140011155:	out    0xe7,eax
   140011157:	call   rdi
   140011159:	xlat   BYTE PTR ds:[rbx]
   14001115a:	xlat   BYTE PTR ds:[rbx]
   14001115b:	(bad)  
   14001115c:	jp     0x1400111c3
   14001115e:	rex.RX (bad) 
   140011160:	jge    0x1400111ca
   140011162:	rex.WX (bad) 
   140011164:	fcomp  st(0)
   140011166:	fdivr  st,st(7)
   140011168:	out    0xe6,al
   14001116a:	out    0xff,al
   14001116c:	out    0xe6,al
   14001116e:	out    0xff,al
   140011170:	out    0xe6,al
   140011172:	out    0xff,al
   140011174:	out    0xe6,al
   140011176:	out    0xff,al
   140011178:	mov    ebx,0xa0ff9eaf
   14001117d:	mov    esi,DWORD PTR [rdx-0x1]
   140011180:	lods   eax,DWORD PTR ds:[rsi]
   140011181:	pushf  
   140011182:	xchg   edi,edi
   140011184:	(bad)  
   140011185:	ror    ebx,1
   140011187:	jmp    rdx
   140011189:	loope  0x14001116b
   14001118b:	jmp    rbp
   14001118d:	in     al,0xe3
   14001118f:	(bad)  
   140011190:	(bad)  
   140011192:	sar    edi,cl
   140011194:	ror    edx,1
   140011196:	ret    0xc9ff
   140011199:	mov    edi,0xc0c9ffb4
   14001119e:	mov    ch,0xff
   1400111a0:	(bad)  
   1400111a1:	(bad)  
   1400111a2:	mov    esp,0xc9cfd5ff
   1400111a7:	(bad)  
   1400111a8:	fstp   st(1)
   1400111aa:	(bad)  
   1400111ab:	jmp    rdx
   1400111ad:	loope  0x14001118e
   1400111af:	jmp    rsi
   1400111b1:	out    0xe6,al
   1400111b3:	jmp    rsi
   1400111b5:	out    0xe6,al
   1400111b7:	jmp    rsi
   1400111b9:	out    0xe6,al
   1400111bb:	inc    eax
   1400111bd:	mov    ah,0xa6
   1400111bf:	push   QWORD PTR [rcx-0x1900715f]
   1400111c5:	out    0xe6,al
   1400111c7:	jmp    rsi
   1400111c9:	out    0xe6,al
   1400111cb:	jmp    rsi
   1400111cd:	out    0xe6,al
   1400111cf:	jmp    rsi
   1400111d1:	out    0xe6,al
   1400111d3:	jmp    rsi
   1400111d5:	out    0xe6,al
   1400111d7:	(bad)  
   1400111d8:	fcomp  st(0)
   1400111da:	fdivr  st,st(7)
   1400111dc:	jge    0x140011246
   1400111de:	rex.WX inc QWORD PTR [rax-0x2700b295]
   1400111e5:	fcomp  st(0)
   1400111e7:	jmp    rsi
   1400111e9:	out    0xe6,al
   1400111eb:	jmp    rsi
   1400111ed:	out    0xe6,al
   1400111ef:	jmp    rsi
   1400111f1:	out    0xe6,al
   1400111f3:	jmp    rsi
   1400111f5:	out    0xe6,al
   1400111f7:	jmp    rsi
   1400111f9:	out    0xe6,al
   1400111fb:	(bad)  
   1400111fc:	fcmovbe st,st(6)
   1400111fe:	sar    bh,cl
   140011200:	(bad)
   140011203:	dec    edx
   140011205:	shl    DWORD PTR [rsi-0x40383101],0xff
   14001120c:	stos   DWORD PTR es:[rdi],eax
   14001120d:	cdq    
   14001120e:	test   bh,bh
   140011210:	xchg   esi,eax
   140011211:	jg     0x140011276
   140011213:	call   QWORD PTR [rax-0x7300a487]
   140011219:	jb     0x14001126e
   14001121b:	dec    DWORD PTR [rbx+rsi*2+0x778fff55]
   140011222:	pop    rcx
   140011223:	call   QWORD PTR [rcx-0x6300a387]
   140011229:	xchg   BYTE PTR [rdi+rdi*8-0x42],ch
   14001122d:	mov    cl,0xa3
   14001122f:	jmp    rsi
   140011231:	out    0xe6,al
   140011233:	jmp    rsi
   140011235:	out    0xe6,al
   140011237:	jmp    rsi
   140011239:	out    0xe6,al
   14001123b:	jmp    rsi
   14001123d:	out    0xe6,al
   14001123f:	jmp    rcx
   140011241:	(bad)  
   140011243:	jmp    rsi
   140011245:	out    0xe6,al
   140011247:	jmp    rsi
   140011249:	out    0xe6,al
   14001124b:	jmp    rsi
   14001124d:	out    0xe6,al
   14001124f:	jmp    rsi
   140011251:	out    0xe6,al
   140011253:	jmp    rsi
   140011255:	out    0xe6,al
   140011257:	(bad)  
   140011258:	fcomp  st(0)
   14001125a:	fdivr  st,st(7)
   14001125c:	sub    BYTE PTR [rbx+0x4d],0xff
   140011260:	sub    DWORD PTR [rsi+0x51],0xffffffff
   140011264:	(bad)  
   140011265:	(bad)  
   140011266:	(bad)  
   140011267:	jmp    rsp
   140011269:	in     al,0xe4
   14001126b:	jmp    rsp
   14001126d:	in     al,0xe4
   14001126f:	jmp    rsp
   140011271:	in     al,0xe4
   140011273:	jmp    rsp
   140011275:	in     al,0xe4
   140011277:	jmp    rsp
   140011279:	in     al,0xe4
   14001127b:	jmp    rsp
   14001127d:	in     al,0xe4
   14001127f:	jmp    rsp
   140011281:	in     al,0xe4
   140011283:	jmp    rsp
   140011285:	in     al,0xe4
   140011287:	dec    ebp
   140011289:	(bad)  
   14001128a:	mov    esi,0x607c93ff
   14001128f:	jmp    QWORD PTR [rdx+rdx*4-0x493e0084]
   140011296:	test   eax,0xb3bfc7ff
   14001129b:	inc    edi
   14001129d:	mov    ebp,0xb7c2ffb3
   1400112a2:	stos   DWORD PTR es:[rdi],eax
   1400112a3:	push   QWORD PTR [rbp-0x4f006859]
   1400112a9:	movabs al,ds:0xe4e4ffc1c8cfff8e
   1400112b2:	in     al,0xff
   1400112b4:	in     al,0xe4
   1400112b6:	in     al,0xff
   1400112b8:	in     al,0xe4
   1400112ba:	in     al,0xff
   1400112bc:	in     al,0xe4
   1400112be:	in     al,0xff
   1400112c0:	in     al,0xe4
   1400112c2:	in     al,0xff
   1400112c4:	in     al,0xe4
   1400112c6:	in     al,0xff
   1400112c8:	in     al,0xe4
   1400112ca:	in     al,0xff
   1400112cc:	in     al,0xe4
   1400112ce:	in     al,0xff
   1400112d0:	in     al,0xe4
   1400112d2:	in     al,0xff
   1400112d4:	in     al,0xe4
   1400112d6:	in     al,0xff
   1400112d8:	(bad)  
   1400112d9:	(bad)  
   1400112da:	(bad)  
   1400112db:	inc    DWORD PTR [rbx-0x7900ae92]
   1400112e1:	jno    0x140011337
   1400112e3:	call   rsi
   1400112e5:	(bad)  
   1400112e6:	(bad)  
   1400112e7:	jmp    rsp
   1400112e9:	in     al,0xe4
   1400112eb:	jmp    rsp
   1400112ed:	in     al,0xe4
   1400112ef:	jmp    rsp
   1400112f1:	in     al,0xe4
   1400112f3:	jmp    rsp
   1400112f5:	in     al,0xe4
   1400112f7:	jmp    rsp
   1400112f9:	in     al,0xe4
   1400112fb:	jmp    rsp
   1400112fd:	in     al,0xe4
   1400112ff:	jmp    rsp
   140011301:	in     al,0xe4
   140011303:	jmp    rsp
   140011305:	in     al,0xe4
   140011307:	jmp    rbx
   140011309:	jrcxz  0x1400112ed
   14001130b:	inc    edi
   14001130d:	mov    edi,0xbdc6ffb4
   140011312:	mov    dl,0xff
   140011314:	leave  
   140011315:	sar    DWORD PTR [rax-0x54473d01],0xff
   14001131c:	ret    0xacb9
   14001131f:	dec    esp
   140011321:	(bad)  
   140011322:	mov    ebx,0xc1c9cfff
   140011327:	(bad)  
   140011328:	fcom   st(5)
   14001132a:	sar    edi,1
   14001132c:	loop   0x140011310
   14001132e:	loopne 0x14001132f
   140011330:	loop   0x140011314
   140011332:	loopne 0x140011333
   140011334:	ror    ch,cl
   140011336:	(bad)  
   140011337:	call   rbx
   140011339:	iret   
   14001133a:	leave  
   14001133b:	jmp    rsp
   14001133d:	in     al,0xe4
   14001133f:	jmp    rsp
   140011341:	in     al,0xe4
   140011343:	jmp    rsp
   140011345:	in     al,0xe4
   140011347:	jmp    rsp
   140011349:	in     al,0xe4
   14001134b:	jmp    rsp
   14001134d:	in     al,0xe4
   14001134f:	jmp    rsp
   140011351:	in     al,0xe4
   140011353:	jmp    rsp
   140011355:	in     al,0xe4
   140011357:	call   rsi
   140011359:	(bad)  
   14001135a:	(bad)  
   14001135b:	inc    DWORD PTR [rsi-0x7500ab8f]
   140011361:	jne    0x1400113bb
   140011363:	call   rdi
   140011365:	xlat   BYTE PTR ds:[rbx]
   140011366:	xlat   BYTE PTR ds:[rbx]
   140011367:	jmp    rbp
   140011369:	in     eax,0xe5
   14001136b:	jmp    rbp
   14001136d:	in     eax,0xe5
   14001136f:	jmp    rbp
   140011371:	in     eax,0xe5
   140011373:	jmp    rbp
   140011375:	in     eax,0xe5
   140011377:	jmp    rbp
   140011379:	in     eax,0xe5
   14001137b:	jmp    rbp
   14001137d:	in     eax,0xe5
   14001137f:	jmp    rbp
   140011381:	in     eax,0xe5
   140011383:	(bad)  
   140011384:	fcmovnu st,st(0)
   140011386:	(bad)  
   140011387:	push   QWORD PTR [rcx-0x62006f5e]
   14001138d:	mov    DWORD PTR [rax-0x1],esi
   140011390:	xchg   edi,eax
   140011391:	and    DWORD PTR [rdi-0x1],0xff657f95
   140011398:	xchg   ebp,eax
   140011399:	jg     0x1400113ff
   14001139b:	call   QWORD PTR [rsi-0x68009980]
   1400113a1:	(bad)  
   1400113a2:	push   0x627d94ff
   1400113a7:	call   QWORD PTR [rbp+rdi*2-0x6958009e]
   1400113ae:	cmp    edi,0xffcdd3d7
   1400113b4:	iret   
   1400113b5:	leave  
   1400113b6:	sar    edi,0xb1
   1400113b9:	movabs eax,ds:0xd9dcff95a6b4ff8f
   1400113c2:	(bad)  
   1400113c3:	jmp    rbp
   1400113c5:	in     eax,0xe5
   1400113c7:	jmp    rbp
   1400113c9:	in     eax,0xe5
   1400113cb:	jmp    rbp
   1400113cd:	in     eax,0xe5
   1400113cf:	jmp    rbp
   1400113d1:	in     eax,0xe5
   1400113d3:	jmp    rbp
   1400113d5:	in     eax,0xe5
   1400113d7:	call   rdi
   1400113d9:	xlat   BYTE PTR ds:[rbx]
   1400113da:	xlat   BYTE PTR ds:[rbx]
   1400113db:	dec    DWORD PTR [rdx-0x7200a78b]
   1400113e1:	js     0x14001143f
   1400113e3:	(bad)  
   1400113e4:	(bad)  
   1400113e6:	fcos   
   1400113e8:	out    0xe7,eax
   1400113ea:	out    0xff,eax
   1400113ec:	out    0xe7,eax
   1400113ee:	out    0xff,eax
   1400113f0:	out    0xe7,eax
   1400113f2:	out    0xff,eax
   1400113f4:	out    0xe7,eax
   1400113f6:	out    0xff,eax
   1400113f8:	out    0xe7,eax
   1400113fa:	out    0xff,eax
   1400113fc:	out    0xe7,eax
   1400113fe:	out    0xff,eax
   140011400:	out    0xe7,eax
   140011402:	out    0xff,eax
   140011404:	fcmovnu st,st(1)
   140011406:	(bad)  
   140011407:	call   FWORD PTR [rdi-0x59008b74]
   14001140d:	xchg   ebp,eax
   14001140e:	jg     0x14001140f
   140011410:	int3   
   140011411:	(bad)
   140011414:	ror    bl,cl
   140011416:	(bad)  
   140011417:	(bad)  
   140011418:	fcom   st(4)
   14001141a:	(bad)  
   14001141b:	(bad)  
   14001141c:	fcom   st(4)
   14001141e:	(bad)  
   14001141f:	call   rcx
   140011421:	retf   
   140011422:	(bad)  
   140011423:	dec    edx
   140011425:	ret    
   140011426:	mov    ecx,0xa8b6c1ff
   14001142b:	inc    ebp
   14001142d:	mov    esp,0xdfe0ffb0
   140011432:	(bad)  
   140011434:	out    0xe7,eax
   140011436:	out    0xff,eax
   140011438:	ror    edx,1
   14001143a:	ret    0x9aff
   14001143d:	test   DWORD PTR [rdi+rdi*8-0x62],ebp
   140011441:	mov    dh,BYTE PTR [rcx-0x1]
   140011444:	out    0xe7,eax
   140011446:	out    0xff,eax
   140011448:	out    0xe7,eax
   14001144a:	out    0xff,eax
   14001144c:	out    0xe7,eax
   14001144e:	out    0xff,eax
   140011450:	out    0xe7,eax
   140011452:	out    0xff,eax
   140011454:	out    0xe7,eax
   140011456:	out    0xff,eax
   140011458:	(bad)  
   14001145a:	fcos   
   14001145c:	lea    edi,[rax+0x5c]
   14001145f:	call   QWORD PTR [rax-0x25009f84]
   140011465:	fcmovu st,st(2)
   140011467:	(bad)  
   140011468:	call   0x12900fd55
   14001146d:	call   0x128ea145a
   140011472:	call   0x128e9fd76
   140011477:	(bad)  
   140011478:	call   0x12800fd65
   14001147d:	out    0xe5,eax
   14001147f:	jmp    rbx
   140011481:	loope  0x140011462
   140011483:	(bad)  
   140011484:	fcmovbe st,st(6)
   140011486:	sar    edi,1
   140011488:	shl    DWORD PTR [rdi-0x4e420057],0xa2
   14001148f:	dec    ebp
   140011491:	(bad)  
   140011492:	mov    esp,0xbbc5ccff
   140011497:	dec    ebx
   140011499:	(bad)  
   14001149a:	mov    ebx,0xb8c3ccff
   14001149f:	call   rax
   1400114a1:	(bad)
   1400114a4:	(bad)  
   1400114a5:	retf   
   1400114a6:	ret    
   1400114a7:	(bad)  
   1400114a8:	fcmovbe st,st(6)
   1400114aa:	sar    bh,cl
   1400114ac:	loopne 0x14001148c
   1400114ae:	(bad)  
   1400114b0:	in     al,0xe4
   1400114b2:	loop   0x1400114b3
   1400114b4:	call   0x12900fda1
   1400114b9:	call   0x10ed614a6
   1400114be:	(bad)  
   1400114bf:	dec    DWORD PTR [rdi-0x1700a489]
   1400114c5:	call   0x128ea14b2
   1400114ca:	call   0x128e9fdce
   1400114cf:	(bad)  
   1400114d0:	call   0x12900fdbd
   1400114d5:	call   0x11adc14c2
   1400114da:	(bad)  
   1400114dc:	nop
   1400114dd:	jl     0x14001153f
   1400114df:	call   QWORD PTR [rdi+rdi*2-0x2323009c]
   1400114e6:	fdiv   st(7),st
   1400114e8:	(bad)  
   1400114e9:	(bad)  
   1400114ea:	(bad)  
   1400114eb:	(bad)  
   1400114ec:	(bad)  
   1400114ed:	(bad)  
   1400114ee:	(bad)  
   1400114ef:	(bad)  
   1400114f0:	(bad)  
   1400114f1:	(bad)  
   1400114f2:	(bad)  
   1400114f3:	(bad)  
   1400114f4:	(bad)  
   1400114f5:	(bad)  
   1400114f6:	(bad)  
   1400114f7:	(bad)  
   1400114f8:	(bad)  
   1400114f9:	(bad)  
   1400114fa:	(bad)  
   1400114fb:	(bad)  
   1400114fc:	fcmovnbe st,st(7)
   1400114fe:	sar    edi,cl
   140011500:	movabs eax,ds:0x9cff5d7a92ff768e
   140011509:	xchg   DWORD PTR [rdi-0x1],ebp
   14001150c:	mov    ah,0xa5
   14001150e:	xchg   ebx,eax
   14001150f:	push   QWORD PTR [rdx-0x50006f5c]
   140011515:	movabs eax,ds:0xa2b0ff85a2b8ff8d
   14001151e:	(bad)  
   14001151f:	call   FWORD PTR [rcx-0x5c006166]
   140011525:	xchg   esp,eax
   140011526:	cmp    edi,0xff6f91ad
   14001152c:	lods   eax,DWORD PTR ds:[rsi]
   14001152d:	pushf  
   14001152e:	xchg   bh,bh
   140011530:	ret    
   140011531:	mov    bh,0xaa
   140011533:	jmp    rcx
   140011535:	(bad)  
   140011537:	(bad)  
   140011538:	(bad)  
   140011539:	(bad)  
   14001153a:	(bad)  
   14001153b:	(bad)  
   14001153c:	(bad)  
   14001153d:	(bad)  
   14001153e:	(bad)  
   14001153f:	call   FWORD PTR [rdi+rax*4-0x15150092]
   140011546:	(bad)  
   140011547:	(bad)  
   140011548:	(bad)  
   140011549:	(bad)  
   14001154a:	(bad)  
   14001154b:	(bad)  
   14001154c:	(bad)  
   14001154d:	(bad)  
   14001154e:	(bad)  
   14001154f:	(bad)  
   140011550:	(bad)  
   140011551:	(bad)  
   140011552:	(bad)  
   140011553:	(bad)  
   140011554:	(bad)  
   140011555:	(bad)  
   140011556:	(bad)  
   140011557:	(bad)  
   140011558:	(bad)  
   14001155a:	fdiv   st(7),st
   14001155c:	xchg   esp,eax
   14001155d:	jg     0x1400115c3
   14001155f:	call   QWORD PTR [rdi-0x2200977d]
   140011565:	fstp   st(5)
   140011567:	(bad)  
   140011568:	jmp    0x140011555
   14001156a:	jmp    0x14001156b
   14001156c:	jmp    0x140011559
   14001156e:	jmp    0x14001156f
   140011570:	jmp    0x14001155d
   140011572:	jmp    0x140011573
   140011574:	jmp    0x140011561
   140011576:	jmp    0x140011577
   140011578:	jmp    0x140011565
   14001157a:	jmp    0x14001157b
   14001157c:	jrcxz  0x14001155f
   14001157e:	(bad)  
   140011580:	mov    dh,0xa7
   140011582:	xchg   esi,eax
   140011583:	call   FWORD PTR [rsi-0x50008d76]
   140011589:	sahf   
   14001158a:	mov    edi,edi
   14001158c:	retf   
   14001158d:	ret    0xffb8
   140011590:	(bad)  
   140011592:	sar    bh,cl
   140011594:	jrcxz  0x140011577
   140011596:	(bad)  
   140011598:	out    0xe2,al
   14001159a:	fdiv   st(7),st
   14001159c:	out    0xe2,al
   14001159e:	(bad)  
   1400115a0:	scas   al,BYTE PTR es:[rdi]
   1400115a1:	(bad)
   1400115a4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400115a5:	mov    ebp,0xdae2ffd8
   1400115aa:	sar    bh,cl
   1400115ac:	fstp   st(0)
   1400115ae:	sar    bh,cl
   1400115b0:	(bad)  
   1400115b1:	ror    al,1
   1400115b3:	call   rdi
   1400115b5:	ror    edx,1
   1400115b7:	dec    edi
   1400115b9:	(bad)  
   1400115ba:	mov    esp,0x859aabff
   1400115bf:	call   QWORD PTR [rax-0x1400a488]
   1400115c5:	jmp    0x1400115b2
   1400115c7:	(bad)  
   1400115c8:	jmp    0x1400115b5
   1400115ca:	jmp    0x1400115cb
   1400115cc:	jmp    0x1400115b9
   1400115ce:	jmp    0x1400115cf
   1400115d0:	jmp    0x1400115bd
   1400115d2:	jmp    0x1400115d3
   1400115d4:	jmp    0x1400115c1
   1400115d6:	jmp    0x1400115d7
   1400115d8:	fstp   st(5)
   1400115da:	(bad)  
   1400115dc:	xchg   edi,eax
   1400115dd:	sub    DWORD PTR [rax-0x1],0xffffff9b
   1400115e1:	xchg   DWORD PTR [rdi+rdi*8-0x22],ebp
   1400115e5:	(bad)  
   1400115e7:	(bad)  
   1400115e8:	in     al,dx
   1400115e9:	in     al,dx
   1400115ea:	in     al,dx
   1400115eb:	(bad)  
   1400115ec:	in     eax,dx
   1400115ed:	in     eax,dx
   1400115ee:	in     eax,dx
   1400115ef:	(bad)  
   1400115f0:	in     eax,dx
   1400115f1:	in     eax,dx
   1400115f2:	in     eax,dx
   1400115f3:	(bad)  
   1400115f4:	in     eax,dx
   1400115f5:	in     eax,dx
   1400115f6:	in     eax,dx
   1400115f7:	(bad)  
   1400115f8:	in     eax,dx
   1400115f9:	in     eax,dx
   1400115fa:	in     eax,dx
   1400115fb:	(bad)  
   1400115fc:	in     eax,dx
   1400115fd:	in     eax,dx
   1400115fe:	in     al,dx
   1400115ff:	(bad)  
   140011600:	(bad)  
   140011601:	jmp    0x122e615ee
   140011606:	fdivp  st(7),st
   140011608:	ror    edx,1
   14001160a:	sar    edi,0xd0
   14001160d:	enter  0xffbf,0xe5
   140011611:	loopne 0x1400115ed
   140011613:	(bad)  
   140011614:	in     eax,dx
   140011615:	in     eax,dx
   140011616:	in     eax,dx
   140011617:	(bad)  
   140011618:	mov    ebx,0xa1ffeccf
   14001161d:	shr    eax,0xff
   140011620:	iret   
   140011621:	fucomp st(4)
   140011623:	dec    DWORD PTR [rax-0x72]
   140011626:	jmp    0x140011627
   140011628:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011629:	ret    0xffe7
   14001162c:	in     eax,dx
   14001162d:	in     eax,dx
   14001162e:	in     eax,dx
   14001162f:	(bad)  
   140011630:	in     al,dx
   140011631:	in     al,dx
   140011632:	jmp    0x140011633
   140011634:	call   0x11000fb20
   140011639:	(bad)  
   14001163a:	mov    ebp,0x9daebbff
   14001163f:	dec    esp
   140011641:	(bad)  
   140011642:	mov    edx,0xedededff
   140011647:	(bad)  
   140011648:	in     eax,dx
   140011649:	in     eax,dx
   14001164a:	in     eax,dx
   14001164b:	(bad)  
   14001164c:	in     eax,dx
   14001164d:	in     eax,dx
   14001164e:	in     eax,dx
   14001164f:	(bad)  
   140011650:	in     eax,dx
   140011651:	in     eax,dx
   140011652:	in     eax,dx
   140011653:	(bad)  
   140011654:	in     al,dx
   140011655:	in     al,dx
   140011656:	in     al,dx
   140011657:	(bad)  
   140011658:	(bad)  
   14001165a:	fdivp  st(7),st
   14001165c:	fwait
   14001165d:	xchg   DWORD PTR [rdi+rdi*8-0x61],ebp
   140011661:	mov    dh,BYTE PTR [rax-0x1]
   140011664:	loopne 0x140011646
   140011666:	loopne 0x140011667
   140011668:	out    dx,al
   140011669:	out    dx,al
   14001166a:	out    dx,al
   14001166b:	(bad)  
   14001166c:	out    dx,eax
   14001166d:	out    dx,eax
   14001166e:	out    dx,eax
   14001166f:	(bad)  
   140011670:	out    dx,eax
   140011671:	out    dx,eax
   140011672:	out    dx,eax
   140011673:	(bad)  
   140011674:	out    dx,eax
   140011675:	out    dx,eax
   140011676:	out    dx,eax
   140011677:	(bad)  
   140011678:	out    dx,eax
   140011679:	out    dx,eax
   14001167a:	out    dx,eax
   14001167b:	(bad)  
   14001167c:	out    dx,eax
   14001167d:	out    dx,eax
   14001167e:	out    dx,eax
   14001167f:	(bad)  
   140011680:	out    dx,eax
   140011681:	out    dx,eax
   140011682:	out    dx,eax
   140011683:	(bad)  
   140011684:	out    dx,eax
   140011685:	out    dx,eax
   140011686:	out    dx,eax
   140011687:	(bad)  
   140011688:	out    dx,eax
   140011689:	out    dx,eax
   14001168a:	out    dx,al
   14001168b:	(bad)  
   14001168c:	out    dx,al
   14001168d:	out    dx,al
   14001168e:	in     al,dx
   14001168f:	(bad)  
   140011690:	out    dx,eax
   140011691:	out    dx,eax
   140011692:	out    dx,eax
   140011693:	inc    edx
   140011695:	shl    al,1
   140011697:	dec    DWORD PTR [rdx-0x71]
   14001169a:	hlt    
   14001169b:	jmp    FWORD PTR [rdx+rcx*8-0x1a230013]
   1400116a2:	out    dx,eax
   1400116a3:	jmp    FWORD PTR [rcx]
   1400116a5:	jp     0x14001168d
   1400116a7:	(bad)  
   1400116a8:	cmp    DWORD PTR [rdi+riz*8-0x10181d01],eax
   1400116af:	(bad)  
   1400116b0:	out    dx,eax
   1400116b1:	out    dx,eax
   1400116b2:	out    dx,eax
   1400116b3:	(bad)  
   1400116b4:	out    dx,eax
   1400116b5:	out    dx,eax
   1400116b6:	out    dx,eax
   1400116b7:	(bad)  
   1400116b8:	out    dx,al
   1400116b9:	out    dx,al
   1400116ba:	in     eax,dx
   1400116bb:	(bad)  
   1400116bc:	out    dx,al
   1400116bd:	out    dx,al
   1400116be:	in     al,dx
   1400116bf:	(bad)  
   1400116c0:	out    dx,eax
   1400116c1:	out    dx,eax
   1400116c2:	out    dx,eax
   1400116c3:	(bad)  
   1400116c4:	out    dx,eax
   1400116c5:	out    dx,eax
   1400116c6:	out    dx,eax
   1400116c7:	(bad)  
   1400116c8:	out    dx,eax
   1400116c9:	out    dx,eax
   1400116ca:	out    dx,eax
   1400116cb:	(bad)  
   1400116cc:	out    dx,eax
   1400116cd:	out    dx,eax
   1400116ce:	out    dx,eax
   1400116cf:	(bad)  
   1400116d0:	out    dx,eax
   1400116d1:	out    dx,eax
   1400116d2:	out    dx,eax
   1400116d3:	(bad)  
   1400116d4:	out    dx,al
   1400116d5:	out    dx,al
   1400116d6:	out    dx,al
   1400116d7:	jmp    rax
   1400116d9:	loopne 0x1400116bb
   1400116db:	call   FWORD PTR [rdi-0x5d008f76]
   1400116e1:	mov    ?,WORD PTR [rdi+rdi*8-0x1f]
   1400116e5:	loope  0x1400116c8
   1400116e7:	(bad)  
   1400116e8:	out    dx,eax
   1400116e9:	out    dx,eax
   1400116ea:	out    dx,eax
   1400116eb:	push   rax
   1400116ed:	lock lock push rax
   1400116f1:	lock lock push rax
   1400116f5:	lock lock push rax
   1400116f9:	lock lock push rax
   1400116fd:	lock lock push rax
   140011701:	lock lock push rax
   140011705:	lock lock push rax
   140011709:	lock lock push rax
   14001170d:	lock lock call rsi
   140011711:	loope  0x140011704
   140011713:	(bad)  
   140011714:	ds mov al,ch
   140011717:	(bad)  
   140011718:	jns    0x1400116c7
   14001171a:	jmp    0x130f0051e
   14001171f:	jmp    FWORD PTR [rax-0x5e]
   140011722:	jmp    0x123692526
   140011727:	inc    DWORD PTR [rdx-0x76]
   14001172a:	out    0xff,al
   14001172c:	loope  0x140011715
   14001172e:	lock push rax
   140011731:	lock lock push rax
   140011735:	lock lock push rax
   140011739:	lock lock push rax
   14001173d:	lock lock push rax
   140011741:	lock lock push rax
   140011745:	lock lock push rax
   140011749:	lock lock push rax
   14001174d:	lock lock push rax
   140011751:	lock lock (bad) 
   140011754:	out    dx,eax
   140011755:	out    dx,eax
   140011756:	out    dx,eax
   140011757:	jmp    rcx
   140011759:	loope  0x14001173c
   14001175b:	jmp    QWORD PTR [rdx-0x59008b72]
   140011761:	xchg   ecx,eax
   140011762:	js     0x140011763
   140011764:	jrcxz  0x140011749
   140011766:	jrcxz  0x140011767
   140011768:	icebp  
   140011769:	icebp  
   14001176a:	icebp  
   14001176b:	push   rdx
   14001176d:	repnz repnz push rdx
   140011771:	repnz repnz push rdx
   140011775:	repnz repnz push rdx
   140011779:	repnz repnz push rdx
   14001177d:	repnz repnz push rdx
   140011781:	repnz repnz push rdx
   140011785:	repnz repnz push rdx
   140011789:	repnz repnz (bad) 
   14001178c:	in     al,dx
   14001178d:	out    dx,al
   14001178e:	bnd jmp QWORD PTR [rbp-0x5f]
   140011792:	jmp    0x127834b96
   140011797:	call   rbx
   140011799:	loopne 0x14001178b
   14001179b:	push   QWORD PTR [rdi+0x1affefd1]
   1400117a1:	jno    0x140011788
   1400117a3:	call   QWORD PTR [rsi]
   1400117a5:	outs   dx,BYTE PTR ds:[rsi]
   1400117a6:	in     al,0xff
   1400117a8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400117a9:	(bad)  
   1400117aa:	in     eax,dx
   1400117ab:	push   rdx
   1400117ad:	repnz repnz push rdx
   1400117b1:	repnz repnz push rdx
   1400117b5:	repnz repnz push rdx
   1400117b9:	repnz repnz push rdx
   1400117bd:	repnz repnz push rdx
   1400117c1:	repnz repnz push rdx
   1400117c5:	repnz repnz push rdx
   1400117c9:	repnz repnz push rdx
   1400117cd:	repnz repnz push rdx
   1400117d1:	repnz repnz push rcx
   1400117d5:	icebp  
   1400117d6:	icebp  
   1400117d7:	jmp    rbx
   1400117d9:	jrcxz  0x1400117be
   1400117db:	jmp    QWORD PTR [rsi-0x5600876f]
   1400117e1:	xchg   ebp,eax
   1400117e2:	jl     0x1400117e3
   1400117e4:	in     al,0xe4
   1400117e6:	in     al,0xff
   1400117e8:	repnz repnz repnz push rbx
   1400117ed:	repz repz push rbx
   1400117f1:	repz repz push rbx
   1400117f5:	repz repz push rbx
   1400117f9:	repz repz push rbx
   1400117fd:	repz repz push rbx
   140011801:	repz repz push rbx
   140011805:	repz repz push rbx
   140011809:	repz repz inc eax
   14001180d:	(bad)  
   14001180e:	lock jmp QWORD PTR [rsi]
   140011811:	ja     0x1400117f8
   140011813:	jmp    QWORD PTR [rsi-0x5d]
   140011816:	jmp    0x140011817
   140011818:	repz repz repz inc DWORD PTR [rsi+0x15ffecb5]
   140011821:	ins    BYTE PTR es:[rdi],dx
   140011822:	in     al,0xff
   140011824:	ins    BYTE PTR es:[rdi],dx
   140011825:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011826:	jmp    0x140011827
   140011828:	in     eax,dx
   140011829:	out    dx,eax
   14001182a:	repz push rbx
   14001182d:	repz repz push rbx
   140011831:	repz repz push rbx
   140011835:	repz repz push rbx
   140011839:	repz repz push rbx
   14001183d:	repz repz push rbx
   140011841:	repz repz push rbx
   140011845:	repz repz push rbx
   140011849:	repz repz push rbx
   14001184d:	repz repz push rbx
   140011851:	repz repz push rdx
   140011855:	repnz bnd jmp rsp
   140011859:	in     al,0xe4
   14001185b:	jmp    FWORD PTR [rcx-0x5300836b]
   140011861:	cwde   
   140011862:	cmp    bh,0xe6
   140011865:	out    0xe6,al
   140011867:	push   rsp
   140011869:	hlt    
   14001186a:	hlt    
   14001186b:	push   rbp
   14001186d:	cmc    
   14001186e:	cmc    
   14001186f:	push   rbp
   140011871:	cmc    
   140011872:	cmc    
   140011873:	push   rbp
   140011875:	cmc    
   140011876:	cmc    
   140011877:	push   rbp
   140011879:	cmc    
   14001187a:	cmc    
   14001187b:	push   rbp
   14001187d:	cmc    
   14001187e:	cmc    
   14001187f:	push   rbp
   140011881:	cmc    
   140011882:	cmc    
   140011883:	push   rbp
   140011885:	cmc    
   140011886:	cmc    
   140011887:	push   rbp
   140011889:	cmc    
   14001188a:	cmc    
   14001188b:	(bad)  
   14001188c:	mov    ecx,0x1ffff1d3
   140011891:	je     0x140011878
   140011893:	inc    DWORD PTR [rbp+rcx*4-0x18]
   140011897:	push   rcx
   140011899:	repnz cmc 
   14001189b:	jmp    QWORD PTR [rax+0x16ffefc5]
   1400118a1:	ins    DWORD PTR es:[rdi],dx
   1400118a2:	jrcxz  0x1400118a3
   1400118a4:	popf   
   1400118a5:	ret    0xffef
   1400118a8:	cmc    
   1400118a9:	cmc    
   1400118aa:	cmc    
   1400118ab:	push   rbp
   1400118ad:	cmc    
   1400118ae:	cmc    
   1400118af:	push   rbp
   1400118b1:	cmc    
   1400118b2:	cmc    
   1400118b3:	push   rbp
   1400118b5:	cmc    
   1400118b6:	cmc    
   1400118b7:	push   rbp
   1400118b9:	cmc    
   1400118ba:	cmc    
   1400118bb:	push   rbp
   1400118bd:	cmc    
   1400118be:	cmc    
   1400118bf:	push   rbp
   1400118c1:	cmc    
   1400118c2:	cmc    
   1400118c3:	push   rbp
   1400118c5:	cmc    
   1400118c6:	cmc    
   1400118c7:	push   rbp
   1400118c9:	cmc    
   1400118ca:	cmc    
   1400118cb:	push   rbp
   1400118cd:	cmc    
   1400118ce:	cmc    
   1400118cf:	push   rbp
   1400118d1:	cmc    
   1400118d2:	cmc    
   1400118d3:	push   rsp
   1400118d5:	hlt    
   1400118d6:	hlt    
   1400118d7:	jmp    rsi
   1400118d9:	out    0xe6,al
   1400118db:	jmp    FWORD PTR [rax+rbx*4-0x634f0080]
   1400118e2:	test   bh,bh
   1400118e4:	out    0xe7,eax
   1400118e6:	out    0xff,eax
   1400118e8:	cmc    
   1400118e9:	cmc    
   1400118ea:	cmc    
   1400118eb:	push   rsi
   1400118ed:	div    dh
   1400118ef:	push   rsi
   1400118f1:	div    dh
   1400118f3:	push   rsi
   1400118f5:	div    dh
   1400118f7:	push   rsi
   1400118f9:	div    dh
   1400118fb:	push   rsi
   1400118fd:	div    dh
   1400118ff:	push   rsi
   140011901:	div    dh
   140011903:	push   rsi
   140011905:	div    dh
   140011907:	push   rsi
   140011909:	div    dh
   14001190b:	jmp    rsi
   14001190d:	out    dx,al
   14001190e:	cmc    
   14001190f:	call   FWORD PTR [rdi-0x61]
   140011912:	jmp    0x140011913
   140011914:	sbb    DWORD PTR [rdi-0x1c],ebp
   140011917:	call   QWORD PTR [rax-0x13001045]
   14001191d:	icebp  
   14001191e:	idiv   bh
   140011920:	rex.RXB (bad) 
   140011925:	mov    al,ch
   140011927:	call   rdx
   140011929:	loope  0x14001191e
   14001192b:	push   rsi
   14001192d:	div    dh
   14001192f:	push   rsi
   140011931:	div    dh
   140011933:	push   rsi
   140011935:	div    dh
   140011937:	push   rsi
   140011939:	div    dh
   14001193b:	push   rsi
   14001193d:	div    dh
   14001193f:	push   rsi
   140011941:	div    dh
   140011943:	push   rsi
   140011945:	div    dh
   140011947:	push   rsi
   140011949:	div    dh
   14001194b:	push   rsi
   14001194d:	div    dh
   14001194f:	push   rsi
   140011951:	div    dh
   140011953:	push   rbp
   140011955:	cmc    
   140011956:	cmc    
   140011957:	jmp    rdi
   140011959:	out    0xe7,eax
   14001195b:	push   QWORD PTR [rax-0x4c007b64]
   140011961:	lahf   
   140011962:	xchg   edi,edi
   140011964:	call   0x137010251
   140011969:	div    dh
   14001196b:	push   rdi
   14001196d:	div    edi
   14001196f:	push   rdi
   140011971:	div    edi
   140011973:	push   rdi
   140011975:	div    edi
   140011977:	push   rdi
   140011979:	div    edi
   14001197b:	push   rdi
   14001197d:	div    edi
   14001197f:	push   rdi
   140011981:	div    edi
   140011983:	push   rdi
   140011985:	div    edi
   140011987:	push   rdi
   140011989:	div    edi
   14001198b:	push   rdi
   14001198d:	div    edi
   14001198f:	call   rbx
   140011991:	loop   0x140011987
   140011993:	dec    DWORD PTR [rbx-0x6f]
   140011996:	(bad)  
   140011997:	jmp    QWORD PTR [rcx]
   140011999:	je     0x140011981
   14001199b:	jmp    QWORD PTR [rax-0x28000e3b]
   1400119a1:	out    0xf4,al
   1400119a3:	dec    DWORD PTR [rbx-0x6f]
   1400119a6:	(bad)  
   1400119a7:	dec    DWORD PTR [rcx-0x70]
   1400119aa:	(bad)  
   1400119ab:	push   QWORD PTR [rbx-0x8000d2f]
   1400119b1:	div    edi
   1400119b3:	push   rdi
   1400119b5:	div    edi
   1400119b7:	push   rdi
   1400119b9:	div    edi
   1400119bb:	push   rdi
   1400119bd:	div    edi
   1400119bf:	push   rdi
   1400119c1:	div    edi
   1400119c3:	push   rdi
   1400119c5:	div    edi
   1400119c7:	push   rdi
   1400119c9:	div    edi
   1400119cb:	push   rdi
   1400119cd:	div    edi
   1400119cf:	push   rdi
   1400119d1:	div    edi
   1400119d3:	push   rsi
   1400119d5:	div    dh
   1400119d7:	(bad)  
   1400119d8:	call   0xf40102c5
   1400119dd:	lahf   
   1400119de:	xchg   edi,edi
   1400119e0:	mov    dh,0xa2
   1400119e2:	mov    edi,edi
   1400119e4:	jmp    0x1380103d2
   1400119e9:	div    edi
   1400119eb:	(bad)  
   1400119ec:	clc    
   1400119ed:	clc    
   1400119ee:	clc    
   1400119ef:	(bad)  
   1400119f0:	clc    
   1400119f1:	clc    
   1400119f2:	clc    
   1400119f3:	(bad)  
   1400119f4:	clc    
   1400119f5:	clc    
   1400119f6:	clc    
   1400119f7:	(bad)  
   1400119f8:	clc    
   1400119f9:	clc    
   1400119fa:	clc    
   1400119fb:	(bad)  
   1400119fc:	clc    
   1400119fd:	clc    
   1400119fe:	clc    
   1400119ff:	(bad)  
   140011a00:	clc    
   140011a01:	clc    
   140011a02:	clc    
   140011a03:	(bad)  
   140011a04:	clc    
   140011a05:	clc    
   140011a06:	clc    
   140011a07:	(bad)  
   140011a08:	clc    
   140011a09:	clc    
   140011a0a:	clc    
   140011a0b:	(bad)  
   140011a0c:	clc    
   140011a0d:	clc    
   140011a0e:	clc    
   140011a0f:	(bad)  
   140011a10:	clc    
   140011a11:	clc    
   140011a12:	clc    
   140011a13:	(bad)  
   140011a14:	(bad)  
   140011a16:	idiv   bh
   140011a18:	pop    rsi
   140011a19:	popf   
   140011a1a:	jmp    0x140011a1b
   140011a1c:	(bad)  
   140011a1d:	js     0x140011a05
   140011a1f:	dec    DWORD PTR [rcx+rdi*4-0x1c2b0011]
   140011a26:	idiv   bh
   140011a28:	jnp    0x1400119da
   140011a2a:	out    dx,al
   140011a2b:	jmp    QWORD PTR [rdi-0x5d]
   140011a2e:	in     eax,dx
   140011a2f:	call   QWORD PTR [rbp-0x26000e41]
   140011a35:	out    0xf6,eax
   140011a37:	(bad)  
   140011a38:	clc    
   140011a39:	clc    
   140011a3a:	clc    
   140011a3b:	(bad)  
   140011a3c:	clc    
   140011a3d:	clc    
   140011a3e:	clc    
   140011a3f:	(bad)  
   140011a40:	clc    
   140011a41:	clc    
   140011a42:	clc    
   140011a43:	(bad)  
   140011a44:	clc    
   140011a45:	clc    
   140011a46:	clc    
   140011a47:	(bad)  
   140011a48:	clc    
   140011a49:	clc    
   140011a4a:	clc    
   140011a4b:	(bad)  
   140011a4c:	clc    
   140011a4d:	clc    
   140011a4e:	clc    
   140011a4f:	(bad)  
   140011a50:	clc    
   140011a51:	clc    
   140011a52:	clc    
   140011a53:	push   rdi
   140011a55:	div    edi
   140011a57:	(bad)  
   140011a58:	jmp    0xf7010446
   140011a5d:	movabs ds:0xebebff8ea5b9ff8b,al
   140011a66:	jmp    0x140011a67
   140011a68:	stc    
   140011a69:	stc    
   140011a6a:	stc    
   140011a6b:	(bad)  
   140011a6c:	cli    
   140011a6d:	cli    
   140011a6e:	cli    
   140011a6f:	(bad)  
   140011a70:	cli    
   140011a71:	cli    
   140011a72:	cli    
   140011a73:	(bad)  
   140011a74:	cli    
   140011a75:	cli    
   140011a76:	cli    
   140011a77:	(bad)  
   140011a78:	cli    
   140011a79:	cli    
   140011a7a:	cli    
   140011a7b:	(bad)  
   140011a7c:	cli    
   140011a7d:	cli    
   140011a7e:	cli    
   140011a7f:	(bad)  
   140011a80:	cli    
   140011a81:	cli    
   140011a82:	cli    
   140011a83:	(bad)  
   140011a84:	cli    
   140011a85:	cli    
   140011a86:	cli    
   140011a87:	(bad)  
   140011a88:	cli    
   140011a89:	cli    
   140011a8a:	cli    
   140011a8b:	(bad)  
   140011a8c:	cli    
   140011a8d:	cli    
   140011a8e:	cli    
   140011a8f:	(bad)  
   140011a90:	cli    
   140011a91:	cli    
   140011a92:	cli    
   140011a93:	(bad)  
   140011a94:	cli    
   140011a95:	cli    
   140011a96:	cli    
   140011a97:	(bad)  
   140011a98:	jmp    0x1bf01148e
   140011a9d:	mov    cl,0xef
   140011a9f:	jmp    FWORD PTR [rcx]
   140011aa1:	jns    0x140011a89
   140011aa3:	dec    DWORD PTR [rdx-0x5000f47]
   140011aa9:	cli    
   140011aaa:	cli    
   140011aab:	dec    edx
   140011aad:	fcomip st,st(7)
   140011aaf:	jmp    QWORD PTR [rdi-0x31000c36]
   140011ab5:	loope  0x140011aae
   140011ab7:	push   rdi
   140011ab9:	clc    
   140011aba:	cli    
   140011abb:	(bad)  
   140011abc:	cli    
   140011abd:	cli    
   140011abe:	cli    
   140011abf:	(bad)  
   140011ac0:	cli    
   140011ac1:	cli    
   140011ac2:	cli    
   140011ac3:	(bad)  
   140011ac4:	cli    
   140011ac5:	cli    
   140011ac6:	cli    
   140011ac7:	(bad)  
   140011ac8:	cli    
   140011ac9:	cli    
   140011aca:	cli    
   140011acb:	(bad)  
   140011acc:	cli    
   140011acd:	cli    
   140011ace:	cli    
   140011acf:	(bad)  
   140011ad0:	cli    
   140011ad1:	cli    
   140011ad2:	cli    
   140011ad3:	(bad)  
   140011ad4:	stc    
   140011ad5:	stc    
   140011ad6:	stc    
   140011ad7:	(bad)  
   140011ad8:	jmp    0x140011ac5
   140011ada:	jmp    0x140011adb
   140011adc:	mov    ecx,0xbcff8ea5
   140011ae1:	test   al,0x92
   140011ae3:	(bad)  
   140011ae4:	in     al,dx
   140011ae5:	in     al,dx
   140011ae6:	in     al,dx
   140011ae7:	(bad)  
   140011ae8:	cli    
   140011ae9:	cli    
   140011aea:	cli    
   140011aeb:	(bad)  
   140011aec:	sti    
   140011aed:	sti    
   140011aee:	sti    
   140011aef:	(bad)  
   140011af0:	sti    
   140011af1:	sti    
   140011af2:	sti    
   140011af3:	(bad)  
   140011af4:	sti    
   140011af5:	sti    
   140011af6:	sti    
   140011af7:	(bad)  
   140011af8:	sti    
   140011af9:	sti    
   140011afa:	sti    
   140011afb:	(bad)  
   140011afc:	sti    
   140011afd:	sti    
   140011afe:	sti    
   140011aff:	(bad)  
   140011b00:	sti    
   140011b01:	sti    
   140011b02:	sti    
   140011b03:	(bad)  
   140011b04:	sti    
   140011b05:	sti    
   140011b06:	sti    
   140011b07:	(bad)  
   140011b08:	sti    
   140011b09:	sti    
   140011b0a:	sti    
   140011b0b:	(bad)  
   140011b0c:	sti    
   140011b0d:	sti    
   140011b0e:	sti    
   140011b0f:	(bad)  
   140011b10:	sti    
   140011b11:	sti    
   140011b12:	sti    
   140011b13:	(bad)  
   140011b14:	sti    
   140011b15:	sti    
   140011b16:	sti    
   140011b17:	(bad)  
   140011b18:	sti    
   140011b19:	sti    
   140011b1a:	sti    
   140011b1b:	push   rsp
   140011b1d:	clc    
   140011b1e:	sti    
   140011b1f:	dec    DWORD PTR [rbp+0x40fff1bc]
   140011b25:	mov    cl,ch
   140011b27:	inc    ecx
   140011b29:	(bad)  
   140011b2b:	(bad)  
   140011b2c:	sti    
   140011b2d:	sti    
   140011b2e:	sti    
   140011b2f:	(bad)  
   140011b30:	sti    
   140011b31:	sti    
   140011b32:	sti    
   140011b33:	push   rbx
   140011b35:	idiv   edx
   140011b37:	(bad)  
   140011b38:	cli    
   140011b39:	cli    
   140011b3a:	sti    
   140011b3b:	(bad)  
   140011b3c:	sti    
   140011b3d:	sti    
   140011b3e:	sti    
   140011b3f:	(bad)  
   140011b40:	sti    
   140011b41:	sti    
   140011b42:	sti    
   140011b43:	(bad)  
   140011b44:	sti    
   140011b45:	sti    
   140011b46:	sti    
   140011b47:	(bad)  
   140011b48:	sti    
   140011b49:	sti    
   140011b4a:	sti    
   140011b4b:	(bad)  
   140011b4c:	sti    
   140011b4d:	sti    
   140011b4e:	sti    
   140011b4f:	(bad)  
   140011b50:	sti    
   140011b51:	sti    
   140011b52:	sti    
   140011b53:	(bad)  
   140011b54:	cli    
   140011b55:	cli    
   140011b56:	cli    
   140011b57:	(bad)  
   140011b58:	in     al,dx
   140011b59:	in     al,dx
   140011b5a:	in     al,dx
   140011b5b:	(bad)  
   140011b5c:	mov    esp,0xbfff92a8
   140011b61:	stos   DWORD PTR es:[rdi],eax
   140011b62:	xchg   ebp,eax
   140011b63:	(bad)  
   140011b64:	in     al,dx
   140011b65:	in     al,dx
   140011b66:	in     al,dx
   140011b67:	(bad)  
   140011b68:	stc    
   140011b69:	stc    
   140011b6a:	stc    
   140011b6b:	(bad)  
   140011b6c:	cld    
   140011b6d:	cld    
   140011b6e:	cld    
   140011b6f:	(bad)  
   140011b70:	cld    
   140011b71:	cld    
   140011b72:	cld    
   140011b73:	(bad)  
   140011b74:	cld    
   140011b75:	cld    
   140011b76:	cld    
   140011b77:	(bad)  
   140011b78:	cld    
   140011b79:	cld    
   140011b7a:	cld    
   140011b7b:	(bad)  
   140011b7c:	cld    
   140011b7d:	cld    
   140011b7e:	cld    
   140011b7f:	(bad)  
   140011b80:	cld    
   140011b81:	cld    
   140011b82:	cld    
   140011b83:	(bad)  
   140011b84:	cld    
   140011b85:	cld    
   140011b86:	cld    
   140011b87:	(bad)  
   140011b88:	cld    
   140011b89:	cld    
   140011b8a:	cld    
   140011b8b:	(bad)  
   140011b8c:	cld    
   140011b8d:	cld    
   140011b8e:	cld    
   140011b8f:	(bad)  
   140011b90:	cld    
   140011b91:	cld    
   140011b92:	cld    
   140011b93:	(bad)  
   140011b94:	cld    
   140011b95:	cld    
   140011b96:	cld    
   140011b97:	(bad)  
   140011b98:	cld    
   140011b99:	cld    
   140011b9a:	cld    
   140011b9b:	(bad)  
   140011b9c:	cld    
   140011b9d:	cld    
   140011b9e:	cld    
   140011b9f:	push   rdi
   140011ba1:	stc    
   140011ba2:	cld    
   140011ba3:	call   FWORD PTR [rax-0x76000d3e]
   140011ba9:	mov    ecx,0xf6f2fff2
   140011bae:	sti    
   140011baf:	(bad)  
   140011bb0:	cld    
   140011bb1:	cld    
   140011bb2:	cld    
   140011bb3:	(bad)  
   140011bb4:	cld    
   140011bb5:	cld    
   140011bb6:	cld    
   140011bb7:	(bad)  
   140011bb8:	cld    
   140011bb9:	cld    
   140011bba:	cld    
   140011bbb:	(bad)  
   140011bbc:	cld    
   140011bbd:	cld    
   140011bbe:	cld    
   140011bbf:	(bad)  
   140011bc0:	cld    
   140011bc1:	cld    
   140011bc2:	cld    
   140011bc3:	(bad)  
   140011bc4:	cld    
   140011bc5:	cld    
   140011bc6:	cld    
   140011bc7:	(bad)  
   140011bc8:	cld    
   140011bc9:	cld    
   140011bca:	cld    
   140011bcb:	(bad)  
   140011bcc:	cld    
   140011bcd:	cld    
   140011bce:	cld    
   140011bcf:	(bad)  
   140011bd0:	cld    
   140011bd1:	cld    
   140011bd2:	cld    
   140011bd3:	(bad)  
   140011bd4:	stc    
   140011bd5:	stc    
   140011bd6:	stc    
   140011bd7:	(bad)  
   140011bd8:	in     al,dx
   140011bd9:	in     al,dx
   140011bda:	in     al,dx
   140011bdb:	(bad)  
   140011bdc:	mov    edi,0xc1ff95ab
   140011be1:	scas   al,BYTE PTR es:[rdi]
   140011be2:	cwde   
   140011be3:	mov    edi,0xffd4d9de
   140011be8:	clc    
   140011be9:	clc    
   140011bea:	clc    
   140011beb:	(bad)  
   140011bec:	std    
   140011bed:	std    
   140011bee:	std    
   140011bef:	(bad)  
   140011bf0:	std    
   140011bf1:	std    
   140011bf2:	std    
   140011bf3:	(bad)  
   140011bf4:	std    
   140011bf5:	std    
   140011bf6:	std    
   140011bf7:	(bad)  
   140011bf8:	std    
   140011bf9:	std    
   140011bfa:	std    
   140011bfb:	(bad)  
   140011bfc:	std    
   140011bfd:	std    
   140011bfe:	std    
   140011bff:	(bad)  
   140011c00:	std    
   140011c01:	std    
   140011c02:	std    
   140011c03:	(bad)  
   140011c04:	std    
   140011c05:	std    
   140011c06:	std    
   140011c07:	(bad)  
   140011c08:	std    
   140011c09:	std    
   140011c0a:	std    
   140011c0b:	(bad)  
   140011c0c:	std    
   140011c0d:	std    
   140011c0e:	std    
   140011c0f:	(bad)  
   140011c10:	std    
   140011c11:	std    
   140011c12:	std    
   140011c13:	(bad)  
   140011c14:	std    
   140011c15:	std    
   140011c16:	std    
   140011c17:	(bad)  
   140011c18:	std    
   140011c19:	std    
   140011c1a:	std    
   140011c1b:	(bad)  
   140011c1c:	std    
   140011c1d:	std    
   140011c1e:	std    
   140011c1f:	(bad)  
   140011c20:	std    
   140011c21:	std    
   140011c22:	std    
   140011c23:	push   rdx
   140011c25:	idiv   ah
   140011c27:	jmp    QWORD PTR [rdx+rcx*8-0xb12000b]
   140011c2e:	cld    
   140011c2f:	(bad)  
   140011c30:	std    
   140011c31:	std    
   140011c32:	std    
   140011c33:	(bad)  
   140011c34:	std    
   140011c35:	std    
   140011c36:	std    
   140011c37:	(bad)  
   140011c38:	std    
   140011c39:	std    
   140011c3a:	std    
   140011c3b:	(bad)  
   140011c3c:	std    
   140011c3d:	std    
   140011c3e:	std    
   140011c3f:	(bad)  
   140011c40:	std    
   140011c41:	std    
   140011c42:	std    
   140011c43:	(bad)  
   140011c44:	std    
   140011c45:	std    
   140011c46:	std    
   140011c47:	(bad)  
   140011c48:	std    
   140011c49:	std    
   140011c4a:	std    
   140011c4b:	(bad)  
   140011c4c:	std    
   140011c4d:	std    
   140011c4e:	std    
   140011c4f:	(bad)  
   140011c50:	std    
   140011c51:	std    
   140011c52:	std    
   140011c53:	(bad)  
   140011c54:	clc    
   140011c55:	clc    
   140011c56:	clc    
   140011c57:	(bad)  
   140011c58:	fcompp 
   140011c5a:	(bad)  
   140011c5b:	inc    ecx
   140011c5d:	scas   al,BYTE PTR es:[rdi]
   140011c5e:	cwde   
   140011c5f:	mov    edi,0x7f9ab0c4
   140011c64:	ror    al,cl
   140011c66:	mov    ebp,0xf3f3f3ff
   140011c6b:	(bad)  
   140011c6c:	cld    
   140011c6d:	cld    
   140011c6e:	cld    
   140011c6f:	(bad)  
   140011c70:	(bad)  
   140011c71:	(bad)  
   140011c72:	(bad)  
   140011c73:	(bad)  
   140011c74:	(bad)  
   140011c75:	(bad)  
   140011c76:	(bad)  
   140011c77:	(bad)  
   140011c78:	(bad)  
   140011c79:	(bad)  
   140011c7a:	(bad)  
   140011c7b:	(bad)  
   140011c7c:	(bad)  
   140011c7d:	(bad)  
   140011c7e:	(bad)  
   140011c7f:	(bad)  
   140011c80:	(bad)  
   140011c81:	(bad)  
   140011c82:	(bad)  
   140011c83:	(bad)  
   140011c84:	(bad)  
   140011c85:	(bad)  
   140011c86:	(bad)  
   140011c87:	(bad)  
   140011c88:	(bad)  
   140011c89:	(bad)  
   140011c8a:	(bad)  
   140011c8b:	(bad)  
   140011c8c:	(bad)  
   140011c8d:	(bad)  
   140011c8e:	(bad)  
   140011c8f:	(bad)  
   140011c90:	(bad)  
   140011c91:	(bad)  
   140011c92:	(bad)  
   140011c93:	(bad)  
   140011c94:	(bad)  
   140011c95:	(bad)  
   140011c96:	(bad)  
   140011c97:	(bad)  
   140011c98:	(bad)  
   140011c99:	(bad)  
   140011c9a:	(bad)  
   140011c9b:	(bad)  
   140011c9c:	(bad)  
   140011c9d:	(bad)  
   140011c9e:	(bad)  
   140011c9f:	(bad)  
   140011ca0:	(bad)  
   140011ca1:	(bad)  
   140011ca2:	(bad)  
   140011ca3:	(bad)  
   140011ca4:	(bad)  
   140011ca5:	(bad)  
   140011ca6:	(bad)  
   140011ca7:	(bad)  
   140011ca8:	fucomp st(2)
   140011caa:	sti    
   140011cab:	push   rdi
   140011cad:	cli    
   140011cae:	std    
   140011caf:	(bad)  
   140011cb0:	(bad)  
   140011cb1:	(bad)  
   140011cb2:	(bad)  
   140011cb3:	(bad)  
   140011cb4:	(bad)  
   140011cb5:	(bad)  
   140011cb6:	(bad)  
   140011cb7:	(bad)  
   140011cb8:	(bad)  
   140011cb9:	(bad)  
   140011cba:	(bad)  
   140011cbb:	(bad)  
   140011cbc:	(bad)  
   140011cbd:	(bad)  
   140011cbe:	(bad)  
   140011cbf:	(bad)  
   140011cc0:	(bad)  
   140011cc1:	(bad)  
   140011cc2:	(bad)  
   140011cc3:	(bad)  
   140011cc4:	(bad)  
   140011cc5:	(bad)  
   140011cc6:	(bad)  
   140011cc7:	(bad)  
   140011cc8:	(bad)  
   140011cc9:	(bad)  
   140011cca:	(bad)  
   140011ccb:	(bad)  
   140011ccc:	(bad)  
   140011ccd:	(bad)  
   140011cce:	(bad)  
   140011ccf:	(bad)  
   140011cd0:	cld    
   140011cd1:	cld    
   140011cd2:	cld    
   140011cd3:	push   rbx
   140011cd5:	repz repz call rdx
   140011cd9:	enter  0xffbd,0xc4
   140011cdd:	mov    al,0x9a
   140011cdf:	jg     0x140011ca7
   140011ce1:	mov    bl,0x9d
   140011ce3:	rex retf 
   140011ce5:	mov    ebp,0xd7ddffac
   140011cea:	iret   
   140011ceb:	push   rsp
   140011ced:	hlt    
   140011cee:	hlt    
   140011cef:	(bad)  
   140011cf0:	sti    
   140011cf1:	sti    
   140011cf2:	sti    
   140011cf3:	(bad)  
   140011cf4:	std    
   140011cf5:	std    
   140011cf6:	std    
   140011cf7:	(bad)  
   140011cf8:	(bad)  
   140011cf9:	(bad)  
   140011cfa:	(bad)  
   140011cfb:	(bad)  
   140011cfc:	(bad)  
   140011cfd:	(bad)  
   140011cfe:	(bad)  
   140011cff:	(bad)  
   140011d00:	(bad)  
   140011d01:	(bad)  
   140011d02:	(bad)  
   140011d03:	(bad)  
   140011d04:	(bad)  
   140011d05:	(bad)  
   140011d06:	(bad)  
   140011d07:	(bad)  
   140011d08:	(bad)  
   140011d09:	(bad)  
   140011d0a:	(bad)  
   140011d0b:	(bad)  
   140011d0c:	(bad)  
   140011d0d:	(bad)  
   140011d0e:	(bad)  
   140011d0f:	(bad)  
   140011d10:	(bad)  
   140011d11:	(bad)  
   140011d12:	(bad)  
   140011d13:	(bad)  
   140011d14:	(bad)  
   140011d15:	(bad)  
   140011d16:	(bad)  
   140011d17:	(bad)  
   140011d18:	(bad)  
   140011d19:	(bad)  
   140011d1a:	(bad)  
   140011d1b:	(bad)  
   140011d1c:	(bad)  
   140011d1d:	(bad)  
   140011d1e:	(bad)  
   140011d1f:	(bad)  
   140011d20:	(bad)  
   140011d21:	(bad)  
   140011d22:	(bad)  
   140011d23:	(bad)  
   140011d24:	(bad)  
   140011d25:	(bad)  
   140011d26:	(bad)  
   140011d27:	(bad)  
   140011d28:	(bad)  
   140011d29:	(bad)  
   140011d2a:	(bad)  
   140011d2b:	(bad)  
   140011d2c:	(bad)  
   140011d2d:	(bad)  
   140011d2e:	(bad)  
   140011d2f:	(bad)  
   140011d30:	(bad)  
   140011d31:	(bad)  
   140011d32:	(bad)  
   140011d33:	(bad)  
   140011d34:	(bad)  
   140011d35:	(bad)  
   140011d36:	(bad)  
   140011d37:	(bad)  
   140011d38:	(bad)  
   140011d39:	(bad)  
   140011d3a:	(bad)  
   140011d3b:	(bad)  
   140011d3c:	(bad)  
   140011d3d:	(bad)  
   140011d3e:	(bad)  
   140011d3f:	(bad)  
   140011d40:	(bad)  
   140011d41:	(bad)  
   140011d42:	(bad)  
   140011d43:	(bad)  
   140011d44:	(bad)  
   140011d45:	(bad)  
   140011d46:	(bad)  
   140011d47:	(bad)  
   140011d48:	std    
   140011d49:	std    
   140011d4a:	std    
   140011d4b:	(bad)  
   140011d4c:	sti    
   140011d4d:	sti    
   140011d4e:	sti    
   140011d4f:	push   rsp
   140011d51:	hlt    
   140011d52:	hlt    
   140011d53:	(bad)  
   140011d54:	fst    st(7)
   140011d56:	iret   
   140011d57:	dec    ebx
   140011d59:	mov    ebp,0xb3c6ffac
   140011d5e:	popf   
   140011d5f:	add    BYTE PTR [rax],al
   140011d62:	add    BYTE PTR [rax],al
   140011d64:	enter  0x9fb5,0x40
   140011d68:	int3   
   140011d69:	mov    esi,0xcbd5ffae
   140011d6e:	sar    bh,0xe2
   140011d71:	(bad)  
   140011d73:	push   rdx
   140011d75:	repnz repnz push rbp
   140011d79:	cmc    
   140011d7a:	cmc    
   140011d7b:	push   rdi
   140011d7d:	div    edi
   140011d7f:	push   rdi
   140011d81:	div    edi
   140011d83:	push   rdi
   140011d85:	div    edi
   140011d87:	push   rdi
   140011d89:	div    edi
   140011d8b:	push   rdi
   140011d8d:	div    edi
   140011d8f:	push   rdi
   140011d91:	div    edi
   140011d93:	push   rdi
   140011d95:	div    edi
   140011d97:	push   rdi
   140011d99:	div    edi
   140011d9b:	push   rdi
   140011d9d:	div    edi
   140011d9f:	push   rdi
   140011da1:	div    edi
   140011da3:	push   rdi
   140011da5:	div    edi
   140011da7:	push   rdi
   140011da9:	div    edi
   140011dab:	push   rdi
   140011dad:	div    edi
   140011daf:	push   rdi
   140011db1:	div    edi
   140011db3:	push   rdi
   140011db5:	div    edi
   140011db7:	push   rdi
   140011db9:	div    edi
   140011dbb:	push   rdi
   140011dbd:	div    edi
   140011dbf:	push   rdi
   140011dc1:	div    edi
   140011dc3:	push   rbp
   140011dc5:	cmc    
   140011dc6:	cmc    
   140011dc7:	push   rdx
   140011dc9:	repnz bnd jmp rdx
   140011dcd:	(bad)  
   140011dcf:	call   rbp
   140011dd1:	retf   
   140011dd2:	sar    bh,0xcc
   140011dd5:	mov    esi,0xb5c8ffae
   140011dda:	lahf   
   140011ddb:	add    BYTE PTR [rax],al
	...
   140011de6:	add    BYTE PTR [rax],al
   140011de8:	leave  
   140011de9:	mov    dh,0xa1
   140011deb:	rex leave 
   140011ded:	mov    dh,0xa1
   140011def:	jg     0x140011dba
   140011df1:	mov    dh,0xa1
   140011df3:	mov    edi,0xffa1b6c9
   140011df8:	leave  
   140011df9:	mov    dh,0xa1
   140011dfb:	dec    ecx
   140011dfd:	mov    dh,0xa1
   140011dff:	dec    ecx
   140011e01:	mov    dh,0xa1
   140011e03:	dec    ecx
   140011e05:	mov    dh,0xa1
   140011e07:	dec    ecx
   140011e09:	mov    dh,0xa1
   140011e0b:	dec    ecx
   140011e0d:	mov    dh,0xa1
   140011e0f:	dec    ecx
   140011e11:	mov    dh,0xa1
   140011e13:	dec    ecx
   140011e15:	mov    dh,0xa1
   140011e17:	dec    ecx
   140011e19:	mov    dh,0xa1
   140011e1b:	dec    ecx
   140011e1d:	mov    dh,0xa1
   140011e1f:	dec    ecx
   140011e21:	mov    dh,0xa1
   140011e23:	dec    ecx
   140011e25:	mov    dh,0xa1
   140011e27:	dec    ecx
   140011e29:	mov    dh,0xa1
   140011e2b:	dec    ecx
   140011e2d:	mov    dh,0xa1
   140011e2f:	dec    ecx
   140011e31:	mov    dh,0xa1
   140011e33:	dec    ecx
   140011e35:	mov    dh,0xa1
   140011e37:	dec    ecx
   140011e39:	mov    dh,0xa1
   140011e3b:	dec    ecx
   140011e3d:	mov    dh,0xa1
   140011e3f:	dec    ecx
   140011e41:	mov    dh,0xa1
   140011e43:	dec    ecx
   140011e45:	mov    dh,0xa1
   140011e47:	dec    ecx
   140011e49:	mov    dh,0xa1
   140011e4b:	dec    ecx
   140011e4d:	mov    dh,0xa1
   140011e4f:	mov    edi,0x7fa1b6c9
   140011e54:	leave  
   140011e55:	mov    dh,0xa1
   140011e57:	add    BYTE PTR [rax],al
   140011e5a:	add    BYTE PTR [rax],al
   140011e5c:	add    BYTE PTR [rax],al
   140011e5e:	add    BYTE PTR [rax],al
   140011e60:	rol    BYTE PTR [rax],0x0
   140011e63:	add    eax,DWORD PTR [rax+0x10000]
	...
   140011ed5:	add    BYTE PTR [rax],al
   140011ed7:	add    BYTE PTR [rax-0x3fff0000],al
   140011edd:	add    BYTE PTR [rax],al
   140011edf:	add    ebp,DWORD PTR [rax]
   140011ee1:	add    BYTE PTR [rax],al
   140011ee3:	add    BYTE PTR [rax],bl
   140011ee5:	add    BYTE PTR [rax],al
   140011ee7:	add    BYTE PTR [rax],dh
   140011ee9:	add    BYTE PTR [rax],al
   140011eeb:	add    BYTE PTR [rcx],al
   140011eed:	add    BYTE PTR [rax],ah
	...
   140011f67:	add    BYTE PTR [rax+0x5a],dh
   140011f6a:	cmp    bl,BYTE PTR [rdx]
   140011f6c:	jo     0x140011fc8
   140011f6e:	cmp    al,BYTE PTR [rax-0x2ac5a590]
   140011f74:	jo     0x140011fd0
   140011f76:	cmp    bh,bh
   140011f78:	jo     0x140011fd4
   140011f7a:	cmp    bh,bh
   140011f7c:	jo     0x140011fd8
   140011f7e:	cmp    bh,bh
   140011f80:	jo     0x140011fdc
   140011f82:	cmp    bh,bh
   140011f84:	jo     0x140011fe0
   140011f86:	cmp    bh,bh
   140011f88:	jo     0x140011fe4
   140011f8a:	cmp    bh,bh
   140011f8c:	jo     0x140011fe8
   140011f8e:	cmp    bh,bh
   140011f90:	jo     0x140011fec
   140011f92:	cmp    bh,bh
   140011f94:	jo     0x140011ff0
   140011f96:	cmp    bh,bh
   140011f98:	jo     0x140011ff4
   140011f9a:	cmp    bh,bh
   140011f9c:	jo     0x140011ff8
   140011f9e:	cmp    bh,bh
   140011fa0:	jo     0x140011ffc
   140011fa2:	cmp    bh,bh
   140011fa4:	jo     0x140012000
   140011fa6:	cmp    bh,bh
   140011fa8:	jo     0x140012004
   140011faa:	cmp    bh,bh
   140011fac:	jo     0x140012008
   140011fae:	cmp    bh,bh
   140011fb0:	jo     0x14001200c
   140011fb2:	cmp    bh,bh
   140011fb4:	jo     0x140012010
   140011fb6:	cmp    bh,bh
   140011fb8:	jo     0x140012014
   140011fba:	cmp    bh,bh
   140011fbc:	jo     0x140012018
   140011fbe:	cmp    dl,ch
   140011fc0:	jo     0x14001201c
   140011fc2:	cmp    al,BYTE PTR [rax+0x1a3a5a70]
   140011fc8:	jae    0x140012027
   140011fca:	adc    BYTE PTR ds:[rdx-0x3b008879],0xc1
   140011fd2:	mov    ebx,0xe6e6e6ff
   140011fd7:	jmp    rdi
   140011fd9:	out    0xe7,eax
   140011fdb:	jmp    rdi
   140011fdd:	out    0xe7,eax
   140011fdf:	jmp    rdi
   140011fe1:	out    0xe7,eax
   140011fe3:	jmp    rdi
   140011fe5:	out    0xe7,eax
   140011fe7:	jmp    rdi
   140011fe9:	out    0xe7,eax
   140011feb:	jmp    rdi
   140011fed:	out    0xe7,eax
   140011fef:	jmp    rdi
   140011ff1:	out    0xe7,eax
   140011ff3:	jmp    rdi
   140011ff5:	out    0xe7,eax
   140011ff7:	jmp    rdi
   140011ff9:	out    0xe7,eax
   140011ffb:	jmp    rdi
   140011ffd:	out    0xe7,eax
   140011fff:	jmp    rdi
   140012001:	out    0xe7,eax
   140012003:	jmp    rdi
   140012005:	out    0xe7,eax
   140012007:	jmp    rdi
   140012009:	out    0xe7,eax
   14001200b:	jmp    rdi
   14001200d:	out    0xe7,eax
   14001200f:	jmp    rdi
   140012011:	out    0xe7,eax
   140012013:	jmp    rdi
   140012015:	out    0xe7,eax
   140012017:	jmp    rsi
   140012019:	out    0xe6,al
   14001201b:	inc    esp
   14001201d:	sar    DWORD PTR [rbx+0x778792ff],0xff
   140012024:	jae    0x140012083
   140012026:	xor    BYTE PTR ds:[rsi+0x60],0x42
   14001202b:	(bad)  
   14001202c:	retf   0xc2c7
   14001202f:	(bad)  
   140012030:	(bad)  
   140012031:	(bad)  
   140012032:	(bad)  
   140012033:	(bad)  
   140012034:	in     eax,dx
   140012035:	in     eax,dx
   140012036:	in     eax,dx
   140012037:	(bad)  
   140012038:	out    dx,eax
   140012039:	out    dx,eax
   14001203a:	out    dx,eax
   14001203b:	(bad)  
   14001203c:	out    dx,eax
   14001203d:	out    dx,eax
   14001203e:	out    dx,eax
   14001203f:	(bad)  
   140012040:	out    dx,eax
   140012041:	out    dx,eax
   140012042:	out    dx,eax
   140012043:	(bad)  
   140012044:	out    dx,eax
   140012045:	out    dx,eax
   140012046:	out    dx,eax
   140012047:	(bad)  
   140012048:	out    dx,eax
   140012049:	out    dx,eax
   14001204a:	out    dx,eax
   14001204b:	(bad)  
   14001204c:	out    dx,eax
   14001204d:	out    dx,eax
   14001204e:	out    dx,eax
   14001204f:	(bad)  
   140012050:	out    dx,eax
   140012051:	out    dx,eax
   140012052:	out    dx,eax
   140012053:	(bad)  
   140012054:	out    dx,eax
   140012055:	out    dx,eax
   140012056:	out    dx,eax
   140012057:	(bad)  
   140012058:	out    dx,eax
   140012059:	out    dx,eax
   14001205a:	out    dx,eax
   14001205b:	(bad)  
   14001205c:	out    dx,eax
   14001205d:	out    dx,eax
   14001205e:	out    dx,eax
   14001205f:	(bad)  
   140012060:	out    dx,eax
   140012061:	out    dx,eax
   140012062:	out    dx,eax
   140012063:	(bad)  
   140012064:	out    dx,eax
   140012065:	out    dx,eax
   140012066:	out    dx,eax
   140012067:	(bad)  
   140012068:	out    dx,eax
   140012069:	out    dx,eax
   14001206a:	out    dx,eax
   14001206b:	(bad)  
   14001206c:	out    dx,eax
   14001206d:	out    dx,eax
   14001206e:	out    dx,eax
   14001206f:	(bad)  
   140012070:	out    dx,eax
   140012071:	out    dx,eax
   140012072:	out    dx,eax
   140012073:	(bad)  
   140012074:	out    dx,eax
   140012075:	out    dx,eax
   140012076:	out    dx,eax
   140012077:	(bad)  
   140012078:	in     eax,dx
   140012079:	in     eax,dx
   14001207a:	in     eax,dx
   14001207b:	(bad)  
   14001207c:	(bad)  
   14001207d:	(bad)  
   14001207e:	(bad)  
   14001207f:	dec    edx
   140012081:	mov    edx,0x426076ff
   140012087:	(bad)  
   140012088:	jp     0x1400120ee
   14001208a:	rex.RX (bad) 
   14001208c:	(bad)  
   14001208e:	fdiv   st(7),st
   140012090:	jmp    0x12c010a7e
   140012095:	jmp    0x140012082
   140012097:	(bad)  
   140012098:	(bad)  
   140012099:	(bad)  
   14001209a:	(bad)  
   14001209b:	jmp    rsi
   14001209d:	out    0xe6,al
   14001209f:	jmp    rbp
   1400120a1:	in     eax,0xe5
   1400120a3:	jmp    rsp
   1400120a5:	in     al,0xe4
   1400120a7:	jmp    rsp
   1400120a9:	in     al,0xe4
   1400120ab:	jmp    rsp
   1400120ad:	in     al,0xe4
   1400120af:	jmp    rsp
   1400120b1:	in     al,0xe4
   1400120b3:	jmp    rsp
   1400120b5:	in     al,0xe4
   1400120b7:	jmp    rsp
   1400120b9:	in     al,0xe4
   1400120bb:	jmp    rsp
   1400120bd:	in     al,0xe4
   1400120bf:	jmp    rsp
   1400120c1:	in     al,0xe4
   1400120c3:	jmp    rbp
   1400120c5:	in     eax,0xe5
   1400120c7:	jmp    rsi
   1400120c9:	out    0xe6,al
   1400120cb:	(bad)  
   1400120cc:	(bad)  
   1400120cd:	(bad)  
   1400120ce:	(bad)  
   1400120cf:	(bad)  
   1400120d0:	jmp    0x1400120bd
   1400120d2:	jmp    0x1400120d3
   1400120d4:	jmp    0x1400120c1
   1400120d6:	jmp    0x1400120d7
   1400120d8:	jmp    0x1400120c5
   1400120da:	jmp    0x1400120db
   1400120dc:	jmp    0x11d010aca
   1400120e1:	(bad)  
   1400120e3:	(bad)  
   1400120e4:	jp     0x14001214a
   1400120e6:	rex.RX (bad) 
   1400120e8:	jge    0x140012152
   1400120ea:	rex.WX (bad) 
   1400120ec:	(bad)  
   1400120ee:	fcos   
   1400120f0:	out    0xe7,eax
   1400120f2:	out    0xff,eax
   1400120f4:	out    0xe6,al
   1400120f6:	out    0xff,al
   1400120f8:	loope  0x1400120db
   1400120fa:	loope  0x1400120fb
   1400120fc:	ret    0xa8b6
   1400120ff:	jmp    FWORD PTR [rax-0x6300866d]
   140012105:	and    DWORD PTR [rbx-0x1],0xffffff9a
   140012109:	sbb    BYTE PTR [rdi-0x1],0x9a
   14001210d:	sbb    BYTE PTR [rdi-0x1],0x9a
   140012111:	sbb    BYTE PTR [rdi-0x1],0x9a
   140012115:	sbb    BYTE PTR [rdi-0x1],0x9a
   140012119:	sbb    BYTE PTR [rdi-0x1],0x9a
   14001211d:	sbb    BYTE PTR [rdi-0x1],0x9c
   140012121:	and    DWORD PTR [rbx-0x1],0xffffffa8
   140012125:	xchg   ebx,eax
   140012126:	jns    0x140012127
   140012128:	ret    0xa8b6
   14001212b:	jmp    rcx
   14001212d:	loope  0x140012110
   14001212f:	jmp    rsi
   140012131:	out    0xe6,al
   140012133:	jmp    rdi
   140012135:	out    0xe7,eax
   140012137:	jmp    rdi
   140012139:	out    0xe7,eax
   14001213b:	jmp    rdi
   14001213d:	out    0xe7,eax
   14001213f:	(bad)  
   140012140:	(bad)  
   140012142:	fcos   
   140012144:	jge    0x1400121ae
   140012146:	rex.WX inc QWORD PTR [rdx-0x2800b094]
   14001214d:	xlat   BYTE PTR ds:[rbx]
   14001214e:	xlat   BYTE PTR ds:[rbx]
   14001214f:	jmp    rbp
   140012151:	in     eax,0xe5
   140012153:	(bad)  
   140012154:	(bad)  
   140012156:	(bad)  
   140012158:	mov    edi,0x9effa5b4
   14001215d:	xchg   DWORD PTR [rdx-0x1],ebp
   140012160:	lods   eax,DWORD PTR ds:[rsi]
   140012161:	fwait
   140012162:	test   edi,edi
   140012164:	mov    edi,0xd7ffaab6
   140012169:	xlat   BYTE PTR ds:[rbx]
   14001216a:	xlat   BYTE PTR ds:[rbx]
   14001216b:	call   rdi
   14001216d:	xlat   BYTE PTR ds:[rbx]
   14001216e:	xlat   BYTE PTR ds:[rbx]
   14001216f:	call   rdi
   140012171:	xlat   BYTE PTR ds:[rbx]
   140012172:	xlat   BYTE PTR ds:[rbx]
   140012173:	call   rdi
   140012175:	xlat   BYTE PTR ds:[rbx]
   140012176:	xlat   BYTE PTR ds:[rbx]
   140012177:	call   rdi
   140012179:	xlat   BYTE PTR ds:[rbx]
   14001217a:	xlat   BYTE PTR ds:[rbx]
   14001217b:	(bad)  
   14001217c:	fcomp  st(0)
   14001217e:	fdivr  st,st(7)
   140012180:	shl    BYTE PTR [rsi-0x64520056],0x85
   140012187:	call   FWORD PTR [rsi-0x40009579]
   14001218d:	mov    ah,0xa5
   14001218f:	(bad)  
   140012190:	(bad)  
   140012192:	(bad)  
   140012194:	in     eax,0xe5
   140012196:	in     eax,0xff
   140012198:	in     eax,0xe5
   14001219a:	in     eax,0xff
   14001219c:	in     eax,0xe5
   14001219e:	in     eax,0xff
   1400121a0:	xlat   BYTE PTR ds:[rbx]
   1400121a1:	xlat   BYTE PTR ds:[rbx]
   1400121a2:	xlat   BYTE PTR ds:[rbx]
   1400121a3:	inc    DWORD PTR [rdx-0x7900b094]
   1400121a9:	jno    0x1400121ff
   1400121ab:	call   rsi
   1400121ad:	(bad)  
   1400121ae:	(bad)  
   1400121af:	jmp    rsp
   1400121b1:	in     al,0xe4
   1400121b3:	jmp    rdx
   1400121b5:	loop   0x140012199
   1400121b7:	(bad)  
   1400121b8:	(bad)  
   1400121ba:	fdiv   st(7),st
   1400121bc:	fcmovu st,st(2)
   1400121be:	(bad)  
   1400121c0:	fcomp  st(0)
   1400121c2:	fdivr  st,st(7)
   1400121c4:	xlat   BYTE PTR ds:[rbx]
   1400121c5:	xlat   BYTE PTR ds:[rbx]
   1400121c6:	xlat   BYTE PTR ds:[rbx]
   1400121c7:	jmp    QWORD PTR [rdi-0x6700826c]
   1400121cd:	and    BYTE PTR [rcx-0x1],0x93
   1400121d1:	jns    0x14001222b
   1400121d3:	call   QWORD PTR [rbx-0x6500a787]
   1400121d9:	and    DWORD PTR [rsi-0x1],0xffffffd7
   1400121dd:	xlat   BYTE PTR ds:[rbx]
   1400121de:	xlat   BYTE PTR ds:[rbx]
   1400121df:	call   rdi
   1400121e1:	xlat   BYTE PTR ds:[rbx]
   1400121e2:	xlat   BYTE PTR ds:[rbx]
   1400121e3:	call   rdi
   1400121e5:	xlat   BYTE PTR ds:[rbx]
   1400121e6:	xlat   BYTE PTR ds:[rbx]
   1400121e7:	(bad)  
   1400121e8:	(bad)  
   1400121ea:	fcos   
   1400121ec:	(bad)  
   1400121ee:	fdiv   st(7),st
   1400121f0:	loop   0x1400121d4
   1400121f2:	loop   0x1400121f3
   1400121f4:	in     al,0xe4
   1400121f6:	in     al,0xff
   1400121f8:	in     al,0xe4
   1400121fa:	in     al,0xff
   1400121fc:	in     al,0xe4
   1400121fe:	in     al,0xff
   140012200:	(bad)  
   140012201:	(bad)  
   140012202:	(bad)  
   140012203:	inc    DWORD PTR [rsi-0x7500ab8f]
   140012209:	jne    0x140012264
   14001220b:	(bad)  
   14001220c:	fcomp  st(0)
   14001220e:	fdivr  st,st(7)
   140012210:	out    0xe6,al
   140012212:	out    0xff,al
   140012214:	in     eax,0xe5
   140012216:	in     eax,0xff
   140012218:	jrcxz  0x1400121fd
   14001221a:	jrcxz  0x14001221b
   14001221c:	loope  0x1400121ff
   14001221e:	loope  0x14001221f
   140012220:	fstp   st(5)
   140012222:	(bad)  
   140012224:	fcmovu st,st(2)
   140012226:	(bad)  
   140012228:	mov    al,0xa2
   14001222a:	(bad)  
   14001222b:	(bad)  
   14001222c:	mov    esi,0xd4ffaab6
   140012231:	(bad)  
   140012232:	(bad)  
   140012233:	call   rbp
   140012235:	(bad)  
   140012236:	(bad)  
   140012237:	dec    esp
   140012239:	enter  0xffc3,0xce
   14001223d:	retf   0xffc5
   140012240:	lods   al,BYTE PTR ds:[rsi]
   140012241:	fwait
   140012242:	test   edi,edi
   140012244:	mov    ebp,0xdcffa4b2
   140012249:	(bad)  
   14001224b:	jmp    rax
   14001224d:	loopne 0x14001222f
   14001224f:	jmp    rbp
   140012251:	in     eax,0xe5
   140012253:	jmp    rsi
   140012255:	out    0xe6,al
   140012257:	jmp    rsi
   140012259:	out    0xe6,al
   14001225b:	jmp    rsi
   14001225d:	out    0xe6,al
   14001225f:	(bad)  
   140012260:	fcomp  st(0)
   140012262:	fdivr  st,st(7)
   140012264:	mov    dh,BYTE PTR [rbp+0x59]
   140012267:	dec    DWORD PTR [rdi-0x2500a186]
   14001226d:	fcmovu st,st(2)
   14001226f:	(bad)  
   140012270:	call   0x128010b5d
   140012275:	out    0xe7,eax
   140012277:	jmp    rdi
   140012279:	out    0xe7,eax
   14001227b:	jmp    rsi
   14001227d:	out    0xe6,al
   14001227f:	(bad)  
   140012280:	(bad)  
   140012282:	(bad)  
   140012284:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012285:	xchg   ecx,eax
   140012286:	js     0x140012287
   140012288:	fwait
   140012289:	test   BYTE PTR [rsi-0x1],ah
   14001228c:	xchg   ebx,eax
   14001228d:	jns    0x1400122e7
   14001228f:	call   FWORD PTR [rax-0x67009e80]
   140012295:	and    BYTE PTR [rcx-0x1],0x93
   140012299:	jns    0x1400122f3
   14001229b:	call   FWORD PTR [rbx-0x2300997c]
   1400122a1:	(bad)  
   1400122a3:	call   QWORD PTR [rsi-0x5200a183]
   1400122a9:	pushf  
   1400122aa:	xchg   edi,edi
   1400122ac:	loopne 0x14001228e
   1400122ae:	loopne 0x1400122af
   1400122b0:	in     al,0xe4
   1400122b2:	in     al,0xff
   1400122b4:	call   0x129010ba1
   1400122b9:	call   0x128ea22a6
   1400122be:	call   0x11adbfdc2
   1400122c3:	dec    DWORD PTR [rdi-0x6b00a186]
   1400122c9:	jg     0x14001232f
   1400122cb:	(bad)  
   1400122cc:	fcmovnu st,st(3)
   1400122ce:	(bad)  
   1400122d0:	jmp    0x12a010cbe
   1400122d5:	jmp    0x129eb22c3
   1400122da:	jmp    0x123e506de
   1400122df:	jmp    rax
   1400122e1:	loopne 0x1400122c3
   1400122e3:	push   QWORD PTR [rbx-0x3f006d5c]
   1400122e9:	mov    ecx,0xd7d7ffad
   1400122ee:	xlat   BYTE PTR ds:[rbx]
   1400122ef:	call   rdi
   1400122f1:	xlat   BYTE PTR ds:[rbx]
   1400122f2:	xlat   BYTE PTR ds:[rbx]
   1400122f3:	(bad)  
   1400122f4:	fcomp  st(0)
   1400122f6:	fdivr  st,st(7)
   1400122f8:	(bad)  
   1400122fa:	fcos   
   1400122fc:	ror    ah,1
   1400122fe:	(bad)  
   1400122ff:	call   rcx
   140012301:	int3   
   140012302:	(bad)  
   140012303:	(bad)  
   140012304:	(bad)  
   140012306:	fdiv   st(7),st
   140012308:	cwde   
   140012309:	jg     0x14001236b
   14001230b:	jmp    FWORD PTR [rdi-0x1d007762]
   140012311:	loop   0x1400122f5
   140012313:	(bad)  
   140012314:	call   0x12a010c01
   140012319:	jmp    0x129eb2307
   14001231e:	jmp    0x11bdcff22
   140012323:	call   QWORD PTR [rdi+rdi*2-0x7b66009c]
   14001232a:	imul   edi,edi,0xffdddddd
   140012330:	in     al,dx
   140012331:	in     al,dx
   140012332:	in     al,dx
   140012333:	(bad)  
   140012334:	in     al,dx
   140012335:	in     al,dx
   140012336:	in     al,dx
   140012337:	(bad)  
   140012338:	jmp    0x140012325
   14001233a:	jmp    0x14001233b
   14001233c:	in     eax,0xe5
   14001233e:	in     eax,0xff
   140012340:	movabs eax,ds:0x97ff5c7c95ff6f8a
   140012349:	jg     0x1400123aa
   14001234b:	call   FWORD PTR [rbp-0x6200967a]
   140012351:	xchg   BYTE PTR [rcx-0x1],ch
   140012354:	popf   
   140012355:	xchg   BYTE PTR [rcx-0x1],ch
   140012358:	xchg   ebp,eax
   140012359:	jl     0x1400123b7
   14001235b:	call   FWORD PTR [rbp-0x4700957a]
   140012361:	stos   BYTE PTR es:[rdi],al
   140012362:	cwde   
   140012363:	(bad)  
   140012364:	(bad)  
   140012366:	fdivp  st(7),st
   140012368:	xchg   ebp,eax
   140012369:	jl     0x1400123c7
   14001236b:	push   QWORD PTR [rax-0x1b007661]
   140012371:	in     al,0xe4
   140012373:	(bad)  
   140012374:	jmp    0x140012361
   140012376:	jmp    0x140012377
   140012378:	in     al,dx
   140012379:	in     al,dx
   14001237a:	in     al,dx
   14001237b:	(bad)  
   14001237c:	in     al,dx
   14001237d:	in     al,dx
   14001237e:	in     al,dx
   14001237f:	(bad)  
   140012380:	fstp   st(5)
   140012382:	(bad)  
   140012384:	cdq    
   140012385:	test   BYTE PTR [rcx-0x1],ch
   140012388:	popf   
   140012389:	mov    DWORD PTR [rdi-0x1],ebp
   14001238c:	loopne 0x14001236e
   14001238e:	loopne 0x14001238f
   140012390:	out    dx,eax
   140012391:	out    dx,eax
   140012392:	out    dx,eax
   140012393:	(bad)  
   140012394:	out    dx,eax
   140012395:	out    dx,eax
   140012396:	out    dx,eax
   140012397:	(bad)  
   140012398:	out    dx,al
   140012399:	out    dx,al
   14001239a:	out    dx,al
   14001239b:	jmp    rdi
   14001239d:	out    0xe7,eax
   14001239f:	jmp    rsp
   1400123a1:	in     al,0xe4
   1400123a3:	(bad)  
   1400123a4:	mov    ebx,0xc1ff9eae
   1400123a9:	mov    eax,0xdfdfffab
   1400123ae:	(bad)  
   1400123b0:	xchg   esp,eax
   1400123b1:	mov    ecx,0xae80ffe3
   1400123b6:	jrcxz  0x1400123b7
   1400123b8:	ins    DWORD PTR es:[rdi],dx
   1400123b9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400123ba:	jrcxz  0x1400123bb
   1400123bc:	loop   0x1400123a0
   1400123be:	loop   0x1400123bf
   1400123c0:	jrcxz  0x1400123a5
   1400123c2:	jrcxz  0x1400123c3
   1400123c4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400123c5:	xchg   ecx,eax
   1400123c6:	ja     0x1400123c7
   1400123c8:	mov    cl,0xa1
   1400123ca:	mov    edi,?
   1400123cc:	in     al,0xe4
   1400123ce:	in     al,0xff
   1400123d0:	jmp    0x12f010dbe
   1400123d5:	out    dx,al
   1400123d6:	out    dx,al
   1400123d7:	(bad)  
   1400123d8:	out    dx,eax
   1400123d9:	out    dx,eax
   1400123da:	out    dx,eax
   1400123db:	(bad)  
   1400123dc:	out    dx,eax
   1400123dd:	out    dx,eax
   1400123de:	out    dx,eax
   1400123df:	jmp    rax
   1400123e1:	loopne 0x1400123c3
   1400123e3:	call   FWORD PTR [rbp-0x5d009077]
   1400123e9:	mov    ?,WORD PTR [rdi+rdi*8-0x1e]
   1400123ed:	loop   0x1400123d1
   1400123ef:	push   rcx
   1400123f1:	icebp  
   1400123f2:	icebp  
   1400123f3:	push   rcx
   1400123f5:	icebp  
   1400123f6:	icebp  
   1400123f7:	push   rax
   1400123f9:	lock lock (bad) 
   1400123fc:	out    dx,eax
   1400123fd:	out    dx,eax
   1400123fe:	out    dx,eax
   1400123ff:	(bad)  
   140012400:	jmp    0x1400123ed
   140012402:	jmp    0x140012403
   140012404:	out    0xe6,al
   140012406:	out    0xff,al
   140012408:	in     al,0xe4
   14001240a:	in     al,0xff
   14001240c:	jb     0x1400123b8
   14001240e:	out    0xff,al
   140012410:	xor    eax,0x3fffe88a
   140012415:	(bad)  
   140012416:	out    0xff,eax
   140012418:	jae    0x1400123c5
   14001241a:	out    0xff,eax
   14001241c:	out    0xe6,al
   14001241e:	out    0xff,al
   140012420:	call   0x127010d0d
   140012425:	out    0xe6,al
   140012427:	jmp    rsi
   140012429:	out    0xe6,al
   14001242b:	(bad)  
   14001242c:	(bad)  
   14001242d:	(bad)  
   14001242e:	(bad)  
   14001242f:	(bad)  
   140012430:	out    dx,al
   140012431:	out    dx,al
   140012432:	out    dx,al
   140012433:	push   rax
   140012435:	lock lock push rcx
   140012439:	icebp  
   14001243a:	icebp  
   14001243b:	push   rcx
   14001243d:	icebp  
   14001243e:	icebp  
   14001243f:	jmp    rdx
   140012441:	loop   0x140012425
   140012443:	jmp    QWORD PTR [rdx-0x58008b72]
   140012449:	xchg   ebx,eax
   14001244a:	jp     0x14001244b
   14001244c:	jrcxz  0x140012431
   14001244e:	jrcxz  0x14001244f
   140012450:	repz repz repz push rbx
   140012455:	repz repz push rbx
   140012459:	repz repz push rdx
   14001245d:	repnz repnz push rax
   140012461:	lock lock (bad) 
   140012464:	out    dx,al
   140012465:	out    dx,al
   140012466:	out    dx,al
   140012467:	jmp    rdi
   140012469:	out    0xe7,eax
   14001246b:	(bad)  
   14001246c:	cmp    cl,BYTE PTR [rsi-0x548a0018]
   140012472:	in     eax,0xff
   140012474:	(bad)  
   140012475:	jl     0x140012460
   140012477:	jmp    rbp
   140012479:	in     eax,0xe5
   14001247b:	(bad)  
   14001247c:	call   0x130010d69
   140012481:	out    dx,eax
   140012482:	out    dx,eax
   140012483:	(bad)  
   140012484:	out    dx,eax
   140012485:	out    dx,eax
   140012486:	out    dx,eax
   140012487:	(bad)  
   140012488:	out    dx,eax
   140012489:	out    dx,eax
   14001248a:	out    dx,eax
   14001248b:	push   rax
   14001248d:	lock lock push rdx
   140012491:	repnz repnz push rbx
   140012495:	repz repz push rbx
   140012499:	repz repz push rbx
   14001249d:	repz repz jmp rbx
   1400124a1:	jrcxz  0x140012486
   1400124a3:	jmp    QWORD PTR [rdi-0x5300856d]
   1400124a9:	cwde   
   1400124aa:	jg     0x1400124ab
   1400124ac:	in     eax,0xe5
   1400124ae:	in     eax,0xff
   1400124b0:	cmc    
   1400124b1:	cmc    
   1400124b2:	cmc    
   1400124b3:	push   rbp
   1400124b5:	cmc    
   1400124b6:	cmc    
   1400124b7:	push   rbp
   1400124b9:	cmc    
   1400124ba:	cmc    
   1400124bb:	push   rbp
   1400124bd:	cmc    
   1400124be:	cmc    
   1400124bf:	push   rbp
   1400124c1:	cmc    
   1400124c2:	cmc    
   1400124c3:	push   rdx
   1400124c5:	repnz repnz (bad) 
   1400124c8:	(bad)  
   1400124c9:	(bad)  
   1400124ca:	(bad)  
   1400124cb:	call   FWORD PTR [rip+0x58ffe97f]        # 0x199010e50
   1400124d1:	sahf   
   1400124d2:	call   0x127bdb9d6
   1400124d7:	call   FWORD PTR [rip+0xffffffffebffe97f]        # 0x12c010e5c
   1400124dd:	jmp    0x1400124ca
   1400124df:	(bad)  
   1400124e0:	out    dx,al
   1400124e1:	out    dx,al
   1400124e2:	out    dx,al
   1400124e3:	push   rbx
   1400124e5:	repz repz push rsp
   1400124e9:	hlt    
   1400124ea:	hlt    
   1400124eb:	push   rsp
   1400124ed:	hlt    
   1400124ee:	hlt    
   1400124ef:	push   rbp
   1400124f1:	cmc    
   1400124f2:	cmc    
   1400124f3:	push   rbp
   1400124f5:	cmc    
   1400124f6:	cmc    
   1400124f7:	push   rbp
   1400124f9:	cmc    
   1400124fa:	cmc    
   1400124fb:	push   rbp
   1400124fd:	cmc    
   1400124fe:	cmc    
   1400124ff:	jmp    rbp
   140012501:	in     eax,0xe5
   140012503:	jmp    FWORD PTR [rax+rbx*4-0x634f0081]
   14001250a:	test   bh,bh
   14001250c:	out    0xe7,eax
   14001250e:	out    0xff,eax
   140012510:	div    edi
   140012512:	idiv   edi
   140012514:	div    edi
   140012516:	idiv   edi
   140012518:	div    edi
   14001251a:	idiv   edi
   14001251c:	div    edi
   14001251e:	idiv   edi
   140012520:	div    edi
   140012522:	idiv   edi
   140012524:	cmc    
   140012525:	cmc    
   140012526:	cmc    
   140012527:	(bad)  
   140012528:	in     eax,dx
   140012529:	in     eax,dx
   14001252a:	in     eax,dx
   14001252b:	call   FWORD PTR [rcx+0x23ffe9bf]
   140012531:	sub    edx,0xffffffff
   140012534:	out    0xe7,eax
   140012536:	out    0xff,eax
   140012538:	xchg   DWORD PTR [rsi-0x76d00017],esi
   14001253e:	(bad)  
   14001253f:	call   QWORD PTR [rsi-0xd001240]
   140012545:	repnz repnz push rdi
   140012549:	div    edi
   14001254b:	push   rdi
   14001254d:	div    edi
   14001254f:	push   rdi
   140012551:	div    edi
   140012553:	push   rdi
   140012555:	div    edi
   140012557:	push   rdi
   140012559:	div    edi
   14001255b:	push   rdi
   14001255d:	div    edi
   14001255f:	jmp    rdi
   140012561:	out    0xe7,eax
   140012563:	push   QWORD PTR [rax-0x4b007b64]
   140012569:	movabs eax,ds:0xf9f9ffe9e9e9ff89
   140012572:	stc    
   140012573:	(bad)  
   140012574:	stc    
   140012575:	stc    
   140012576:	stc    
   140012577:	(bad)  
   140012578:	stc    
   140012579:	stc    
   14001257a:	stc    
   14001257b:	(bad)  
   14001257c:	stc    
   14001257d:	stc    
   14001257e:	stc    
   14001257f:	(bad)  
   140012580:	stc    
   140012581:	stc    
   140012582:	stc    
   140012583:	(bad)  
   140012584:	clc    
   140012585:	clc    
   140012586:	clc    
   140012587:	push   rbp
   140012589:	cmc    
   14001258a:	cmc    
   14001258b:	(bad)  
   14001258c:	out    dx,al
   14001258d:	out    dx,al
   14001258e:	out    dx,al
   14001258f:	dec    DWORD PTR [rbp+0x2effebba]
   140012595:	mov    ebx,ebp
   140012597:	(bad)  
   140012598:	jmp    0x140012585
   14001259a:	jmp    0x14001259b
   14001259c:	xchg   DWORD PTR [rdi-0xe0e0014],esi
   1400125a2:	icebp  
   1400125a3:	push   rdi
   1400125a5:	div    edi
   1400125a7:	(bad)  
   1400125a8:	stc    
   1400125a9:	stc    
   1400125aa:	stc    
   1400125ab:	(bad)  
   1400125ac:	stc    
   1400125ad:	stc    
   1400125ae:	stc    
   1400125af:	(bad)  
   1400125b0:	stc    
   1400125b1:	stc    
   1400125b2:	stc    
   1400125b3:	(bad)  
   1400125b4:	stc    
   1400125b5:	stc    
   1400125b6:	stc    
   1400125b7:	(bad)  
   1400125b8:	stc    
   1400125b9:	stc    
   1400125ba:	stc    
   1400125bb:	(bad)  
   1400125bc:	stc    
   1400125bd:	stc    
   1400125be:	stc    
   1400125bf:	(bad)  
   1400125c0:	jmp    0xf5010fae
   1400125c5:	movabs eax,ds:0xebebff8ea5b9ff89
   1400125ce:	jmp    0x1400125cf
   1400125d0:	sti    
   1400125d1:	sti    
   1400125d2:	sti    
   1400125d3:	(bad)  
   1400125d4:	sti    
   1400125d5:	sti    
   1400125d6:	sti    
   1400125d7:	(bad)  
   1400125d8:	sti    
   1400125d9:	sti    
   1400125da:	sti    
   1400125db:	(bad)  
   1400125dc:	sti    
   1400125dd:	sti    
   1400125de:	sti    
   1400125df:	(bad)  
   1400125e0:	sti    
   1400125e1:	sti    
   1400125e2:	sti    
   1400125e3:	(bad)  
   1400125e4:	cli    
   1400125e5:	cli    
   1400125e6:	cli    
   1400125e7:	(bad)  
   1400125e8:	clc    
   1400125e9:	clc    
   1400125ea:	clc    
   1400125eb:	push   rsp
   1400125ed:	hlt    
   1400125ee:	hlt    
   1400125ef:	push   rax
   1400125f1:	lock lock call QWORD PTR [rax+0x3dffedbd]
   1400125f9:	xchg   ecx,eax
   1400125fa:	in     eax,dx
   1400125fb:	push   rcx
   1400125fd:	icebp  
   1400125fe:	icebp  
   1400125ff:	push   rbp
   140012601:	cmc    
   140012602:	cmc    
   140012603:	(bad)  
   140012604:	stc    
   140012605:	stc    
   140012606:	stc    
   140012607:	(bad)  
   140012608:	sti    
   140012609:	sti    
   14001260a:	sti    
   14001260b:	(bad)  
   14001260c:	sti    
   14001260d:	sti    
   14001260e:	sti    
   14001260f:	(bad)  
   140012610:	sti    
   140012611:	sti    
   140012612:	sti    
   140012613:	(bad)  
   140012614:	sti    
   140012615:	sti    
   140012616:	sti    
   140012617:	(bad)  
   140012618:	sti    
   140012619:	sti    
   14001261a:	sti    
   14001261b:	(bad)  
   14001261c:	sti    
   14001261d:	sti    
   14001261e:	sti    
   14001261f:	(bad)  
   140012620:	jmp    0x14001260d
   140012622:	jmp    0x140012623
   140012624:	mov    ecx,0xbcff8ea5
   140012629:	test   eax,0xececff92
   14001262e:	in     al,dx
   14001262f:	(bad)  
   140012630:	cld    
   140012631:	cld    
   140012632:	cld    
   140012633:	(bad)  
   140012634:	cld    
   140012635:	cld    
   140012636:	cld    
   140012637:	(bad)  
   140012638:	cld    
   140012639:	cld    
   14001263a:	cld    
   14001263b:	(bad)  
   14001263c:	cld    
   14001263d:	cld    
   14001263e:	cld    
   14001263f:	(bad)  
   140012640:	cld    
   140012641:	cld    
   140012642:	cld    
   140012643:	(bad)  
   140012644:	cld    
   140012645:	cld    
   140012646:	cld    
   140012647:	(bad)  
   140012648:	sti    
   140012649:	sti    
   14001264a:	sti    
   14001264b:	(bad)  
   14001264c:	stc    
   14001264d:	stc    
   14001264e:	stc    
   14001264f:	push   rbp
   140012651:	cmc    
   140012652:	cmc    
   140012653:	inc    esp
   140012655:	(bad)  
   140012657:	call   QWORD PTR [rax-0xb000f43]
   14001265d:	hlt    
   14001265e:	hlt    
   14001265f:	(bad)  
   140012660:	stc    
   140012661:	stc    
   140012662:	stc    
   140012663:	(bad)  
   140012664:	sti    
   140012665:	sti    
   140012666:	sti    
   140012667:	(bad)  
   140012668:	cld    
   140012669:	cld    
   14001266a:	cld    
   14001266b:	(bad)  
   14001266c:	cld    
   14001266d:	cld    
   14001266e:	cld    
   14001266f:	(bad)  
   140012670:	cld    
   140012671:	cld    
   140012672:	cld    
   140012673:	(bad)  
   140012674:	cld    
   140012675:	cld    
   140012676:	cld    
   140012677:	(bad)  
   140012678:	cld    
   140012679:	cld    
   14001267a:	cld    
   14001267b:	(bad)  
   14001267c:	cld    
   14001267d:	cld    
   14001267e:	cld    
   14001267f:	(bad)  
   140012680:	in     al,dx
   140012681:	in     al,dx
   140012682:	in     al,dx
   140012683:	(bad)  
   140012684:	mov    esp,0xc0ff92a9
   140012689:	lods   eax,DWORD PTR ds:[rsi]
   14001268a:	xchg   esi,eax
   14001268b:	(bad)  
   14001268c:	in     eax,dx
   14001268d:	in     eax,dx
   14001268e:	in     eax,dx
   14001268f:	(bad)  
   140012690:	cld    
   140012691:	cld    
   140012692:	cld    
   140012693:	(bad)  
   140012694:	std    
   140012695:	std    
   140012696:	std    
   140012697:	(bad)  
   140012698:	std    
   140012699:	std    
   14001269a:	std    
   14001269b:	(bad)  
   14001269c:	std    
   14001269d:	std    
   14001269e:	std    
   14001269f:	(bad)  
   1400126a0:	std    
   1400126a1:	std    
   1400126a2:	std    
   1400126a3:	(bad)  
   1400126a4:	std    
   1400126a5:	std    
   1400126a6:	std    
   1400126a7:	(bad)  
   1400126a8:	std    
   1400126a9:	std    
   1400126aa:	std    
   1400126ab:	(bad)  
   1400126ac:	std    
   1400126ad:	std    
   1400126ae:	std    
   1400126af:	(bad)  
   1400126b0:	sti    
   1400126b1:	sti    
   1400126b2:	sti    
   1400126b3:	push   rdi
   1400126b5:	div    edi
   1400126b7:	push   rsi
   1400126b9:	div    dh
   1400126bb:	(bad)  
   1400126bc:	clc    
   1400126bd:	clc    
   1400126be:	clc    
   1400126bf:	(bad)  
   1400126c0:	cld    
   1400126c1:	cld    
   1400126c2:	cld    
   1400126c3:	(bad)  
   1400126c4:	std    
   1400126c5:	std    
   1400126c6:	std    
   1400126c7:	(bad)  
   1400126c8:	std    
   1400126c9:	std    
   1400126ca:	std    
   1400126cb:	(bad)  
   1400126cc:	std    
   1400126cd:	std    
   1400126ce:	std    
   1400126cf:	(bad)  
   1400126d0:	std    
   1400126d1:	std    
   1400126d2:	std    
   1400126d3:	(bad)  
   1400126d4:	std    
   1400126d5:	std    
   1400126d6:	std    
   1400126d7:	(bad)  
   1400126d8:	std    
   1400126d9:	std    
   1400126da:	std    
   1400126db:	(bad)  
   1400126dc:	cld    
   1400126dd:	cld    
   1400126de:	cld    
   1400126df:	(bad)  
   1400126e0:	in     eax,dx
   1400126e1:	in     eax,dx
   1400126e2:	in     eax,dx
   1400126e3:	inc    eax
   1400126e5:	lods   eax,DWORD PTR ds:[rsi]
   1400126e6:	xchg   esi,eax
   1400126e7:	inc    ebx
   1400126e9:	mov    al,0x9a
   1400126eb:	(bad)  
   1400126ec:	jrcxz  0x1400126ce
   1400126ee:	fdiv   st(7),st
   1400126f0:	cli    
   1400126f1:	cli    
   1400126f2:	cli    
   1400126f3:	(bad)  
   1400126f4:	std    
   1400126f5:	std    
   1400126f6:	std    
   1400126f7:	(bad)  
   1400126f8:	(bad)  
   1400126f9:	(bad)  
   1400126fa:	(bad)  
   1400126fb:	(bad)  
   1400126fc:	(bad)  
   1400126fd:	(bad)  
   1400126fe:	(bad)  
   1400126ff:	(bad)  
   140012700:	(bad)  
   140012701:	(bad)  
   140012702:	(bad)  
   140012703:	(bad)  
   140012704:	(bad)  
   140012705:	(bad)  
   140012706:	(bad)  
   140012707:	(bad)  
   140012708:	(bad)  
   140012709:	(bad)  
   14001270a:	(bad)  
   14001270b:	(bad)  
   14001270c:	(bad)  
   14001270d:	(bad)  
   14001270e:	(bad)  
   14001270f:	(bad)  
   140012710:	(bad)  
   140012711:	(bad)  
   140012712:	(bad)  
   140012713:	(bad)  
   140012714:	std    
   140012715:	std    
   140012716:	std    
   140012717:	(bad)  
   140012718:	cld    
   140012719:	cld    
   14001271a:	cld    
   14001271b:	(bad)  
   14001271c:	std    
   14001271d:	std    
   14001271e:	std    
   14001271f:	(bad)  
   140012720:	(bad)  
   140012721:	(bad)  
   140012722:	(bad)  
   140012723:	(bad)  
   140012724:	(bad)  
   140012725:	(bad)  
   140012726:	(bad)  
   140012727:	(bad)  
   140012728:	(bad)  
   140012729:	(bad)  
   14001272a:	(bad)  
   14001272b:	(bad)  
   14001272c:	(bad)  
   14001272d:	(bad)  
   14001272e:	(bad)  
   14001272f:	(bad)  
   140012730:	(bad)  
   140012731:	(bad)  
   140012732:	(bad)  
   140012733:	(bad)  
   140012734:	(bad)  
   140012735:	(bad)  
   140012736:	(bad)  
   140012737:	(bad)  
   140012738:	std    
   140012739:	std    
   14001273a:	std    
   14001273b:	(bad)  
   14001273c:	cli    
   14001273d:	cli    
   14001273e:	cli    
   14001273f:	jmp    rbx
   140012741:	loopne 0x14001271f
   140012743:	inc    ebx
   140012745:	mov    al,0x9a
   140012747:	(bad)  
   140012748:	(bad)  
   140012749:	mov    bl,0x9e
   14001274b:	adc    dl,0xc9
   14001274e:	mov    esi,0xe8ebedff
   140012753:	(bad)  
   140012754:	clc    
   140012755:	clc    
   140012756:	clc    
   140012757:	(bad)  
   140012758:	cli    
   140012759:	cli    
   14001275a:	cli    
   14001275b:	(bad)  
   14001275c:	cli    
   14001275d:	cli    
   14001275e:	cli    
   14001275f:	(bad)  
   140012760:	cli    
   140012761:	cli    
   140012762:	cli    
   140012763:	(bad)  
   140012764:	cli    
   140012765:	cli    
   140012766:	cli    
   140012767:	(bad)  
   140012768:	cli    
   140012769:	cli    
   14001276a:	cli    
   14001276b:	(bad)  
   14001276c:	cli    
   14001276d:	cli    
   14001276e:	cli    
   14001276f:	(bad)  
   140012770:	cli    
   140012771:	cli    
   140012772:	cli    
   140012773:	(bad)  
   140012774:	stc    
   140012775:	stc    
   140012776:	stc    
   140012777:	(bad)  
   140012778:	stc    
   140012779:	stc    
   14001277a:	stc    
   14001277b:	(bad)  
   14001277c:	cli    
   14001277d:	cli    
   14001277e:	cli    
   14001277f:	(bad)  
   140012780:	cli    
   140012781:	cli    
   140012782:	cli    
   140012783:	(bad)  
   140012784:	cli    
   140012785:	cli    
   140012786:	cli    
   140012787:	(bad)  
   140012788:	cli    
   140012789:	cli    
   14001278a:	cli    
   14001278b:	(bad)  
   14001278c:	cli    
   14001278d:	cli    
   14001278e:	cli    
   14001278f:	(bad)  
   140012790:	cli    
   140012791:	cli    
   140012792:	cli    
   140012793:	(bad)  
   140012794:	cli    
   140012795:	cli    
   140012796:	cli    
   140012797:	(bad)  
   140012798:	clc    
   140012799:	clc    
   14001279a:	clc    
   14001279b:	(bad)  
   14001279c:	in     eax,dx
   14001279d:	jmp    0x140012787
   14001279f:	call   rdx
   1400127a1:	leave  
   1400127a2:	mov    esi,0x9eb3c6ff
   1400127a7:	or     cl,0xb6
   1400127aa:	movabs eax,ds:0xa1b6c980a1b6c91a
   1400127b3:	(bad)  
   1400127b4:	leave  
   1400127b5:	mov    dh,0xa1
   1400127b7:	dec    ecx
   1400127b9:	mov    dh,0xa1
   1400127bb:	dec    ecx
   1400127bd:	mov    dh,0xa1
   1400127bf:	dec    ecx
   1400127c1:	mov    dh,0xa1
   1400127c3:	dec    ecx
   1400127c5:	mov    dh,0xa1
   1400127c7:	dec    ecx
   1400127c9:	mov    dh,0xa1
   1400127cb:	dec    ecx
   1400127cd:	mov    dh,0xa1
   1400127cf:	dec    ecx
   1400127d1:	mov    dh,0xa1
   1400127d3:	dec    ecx
   1400127d5:	mov    dh,0xa1
   1400127d7:	dec    ecx
   1400127d9:	mov    dh,0xa1
   1400127db:	dec    ecx
   1400127dd:	mov    dh,0xa1
   1400127df:	dec    ecx
   1400127e1:	mov    dh,0xa1
   1400127e3:	dec    ecx
   1400127e5:	mov    dh,0xa1
   1400127e7:	dec    ecx
   1400127e9:	mov    dh,0xa1
   1400127eb:	dec    ecx
   1400127ed:	mov    dh,0xa1
   1400127ef:	dec    ecx
   1400127f1:	mov    dh,0xa1
   1400127f3:	dec    ecx
   1400127f5:	mov    dh,0xa1
   1400127f7:	dec    ecx
   1400127f9:	mov    dh,0xa1
   1400127fb:	dec    ecx
   1400127fd:	mov    dh,0xa1
   1400127ff:	(bad)  
   140012800:	leave  
   140012801:	mov    dh,0xa1
   140012803:	or     cl,0xb6
   140012806:	movabs eax,ds:0x6bffffff1a
   14001280f:	add    BYTE PTR [rax],al
   140012811:	add    BYTE PTR [rax],al
   140012813:	adc    BYTE PTR [rax],al
	...
   140012865:	add    BYTE PTR [rax],al
   140012867:	(bad)  
   140012868:	sub    BYTE PTR [rax],al
   14001286a:	add    BYTE PTR [rax],al
   14001286c:	adc    BYTE PTR [rax],al
   14001286e:	add    BYTE PTR [rax],al
   140012870:	and    BYTE PTR [rax],al
   140012872:	add    BYTE PTR [rax],al
   140012874:	add    DWORD PTR [rax],eax
   140012876:	and    BYTE PTR [rax],al
	...
   140012890:	jb     0x1400128ee
   140012892:	cmp    eax,0x3d5c7268
   140012897:	int3   
   140012898:	jb     0x1400128f6
   14001289a:	cmp    eax,0x3d5c72ff
   14001289f:	push   QWORD PTR [rdx+0x5c]
   1400128a2:	cmp    eax,0x3d5c72ff
   1400128a7:	push   QWORD PTR [rdx+0x5c]
   1400128aa:	cmp    eax,0x3d5c72ff
   1400128af:	push   QWORD PTR [rdx+0x5c]
   1400128b2:	cmp    eax,0x3d5c72ff
   1400128b7:	push   QWORD PTR [rdx+0x5c]
   1400128ba:	cmp    eax,0x3d5c72ff
   1400128bf:	push   QWORD PTR [rdx+0x5c]
   1400128c2:	cmp    eax,0x3d5c72ff
   1400128c7:	push   QWORD PTR [rdx+0x5c]
   1400128ca:	cmp    eax,0x3d5c72cc
   1400128cf:	push   0xffffffffe1426177
   1400128d4:	mov    ch,0xb0
   1400128d6:	stos   BYTE PTR es:[rdi],al
   1400128d7:	(bad)  
   1400128d8:	call   0x1280111c5
   1400128dd:	out    0xe7,eax
   1400128df:	jmp    rdi
   1400128e1:	out    0xe7,eax
   1400128e3:	jmp    rdi
   1400128e5:	out    0xe7,eax
   1400128e7:	jmp    rdi
   1400128e9:	out    0xe7,eax
   1400128eb:	jmp    rdi
   1400128ed:	out    0xe7,eax
   1400128ef:	jmp    rdi
   1400128f1:	out    0xe7,eax
   1400128f3:	jmp    rdi
   1400128f5:	out    0xe7,eax
   1400128f7:	jmp    rdi
   1400128f9:	out    0xe7,eax
   1400128fb:	jmp    rdi
   1400128fd:	out    0xe7,eax
   1400128ff:	jmp    rdi
   140012901:	out    0xe7,eax
   140012903:	(bad)  
   140012904:	(bad)  
   140012905:	(bad)  
   140012906:	(bad)  
   140012907:	push   QWORD PTR [rbp+0x77ffaab0]
   14001290d:	(bad)  
   14001290e:	rex.X loope 0x14001298d
   140012911:	data16 rex.W (bad) 
   140012914:	(bad)  
   140012916:	(bad)  
   140012918:	call   0x108011205
   14001291d:	mov    ebx,0xa0b4ffab
   140012922:	xchg   edi,edi
   140012924:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012925:	lea    ebp,[rsi-0x1]
   140012928:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012929:	lea    ebp,[rsi-0x1]
   14001292c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001292d:	lea    ebp,[rsi-0x1]
   140012930:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012931:	lea    ebp,[rsi-0x1]
   140012934:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012935:	lea    ebp,[rsi-0x1]
   140012938:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012939:	lea    ebp,[rsi-0x1]
   14001293c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001293d:	lea    ebp,[rsi-0x1]
   140012940:	(bad)  
   140012941:	(bad)  
   140012942:	(bad)  
   140012943:	(bad)  
   140012944:	in     al,dx
   140012945:	in     al,dx
   140012946:	in     al,dx
   140012947:	(bad)  
   140012948:	(bad)  
   14001294a:	(bad)  
   14001294c:	jl     0x1400129b4
   14001294e:	inc    QWORD PTR [rcx-0x2400b094]
   140012955:	fcmovnu st,st(3)
   140012957:	jmp    rdi
   140012959:	out    0xe7,eax
   14001295b:	(bad)  
   14001295c:	(bad)  
   14001295e:	(bad)  
   140012960:	(bad)  
   140012962:	fdiv   st(7),st
   140012964:	(bad)  
   140012966:	fcos   
   140012968:	(bad)  
   14001296a:	fcos   
   14001296c:	(bad)  
   14001296e:	fcos   
   140012970:	(bad)  
   140012972:	fcos   
   140012974:	(bad)  
   140012976:	fcos   
   140012978:	(bad)  
   14001297a:	fcos   
   14001297c:	(bad)  
   14001297e:	fcos   
   140012980:	in     eax,0xe5
   140012982:	in     eax,0xff
   140012984:	out    0xe7,eax
   140012986:	out    0xff,eax
   140012988:	fcmovnu st,st(3)
   14001298a:	(bad)  
   14001298c:	sub    DWORD PTR [rdi+rcx*2-0x1],0xff567287
   140012994:	(bad)  
   140012995:	(bad)  
   140012996:	(bad)  
   140012997:	jmp    rsp
   140012999:	in     al,0xe4
   14001299b:	jmp    rsp
   14001299d:	in     al,0xe4
   14001299f:	jmp    rax
   1400129a1:	loopne 0x140012983
   1400129a3:	call   FWORD PTR [rbx-0x6c00987c]
   1400129a9:	jns    0x140012a03
   1400129ab:	call   QWORD PTR [rbx-0x6c00a687]
   1400129b1:	jns    0x140012a0b
   1400129b3:	call   FWORD PTR [rbx-0x1f00987c]
   1400129b9:	loopne 0x14001299b
   1400129bb:	call   QWORD PTR [rsi-0x5100a183]
   1400129c1:	popf   
   1400129c2:	xchg   edi,edi
   1400129c4:	loopne 0x1400129a6
   1400129c6:	loopne 0x1400129c7
   1400129c8:	(bad)  
   1400129c9:	(bad)  
   1400129ca:	(bad)  
   1400129cb:	inc    DWORD PTR [rdi-0x7100a98e]
   1400129d1:	jns    0x140012a30
   1400129d3:	(bad)  
   1400129d4:	(bad)  
   1400129d6:	fcos   
   1400129d8:	out    0xe7,eax
   1400129da:	out    0xff,eax
   1400129dc:	jrcxz  0x1400129c1
   1400129de:	jrcxz  0x1400129df
   1400129e0:	jrcxz  0x1400129c5
   1400129e2:	jrcxz  0x1400129e3
   1400129e4:	retf   0xb7c2
   1400129e7:	dec    ecx
   1400129e9:	ret    0xffb6
   1400129ec:	leave  
   1400129ed:	ret    0xffb6
   1400129f0:	(bad)  
   1400129f1:	mov    ebp,0xbdc7ffb0
   1400129f6:	mov    al,0xff
   1400129f8:	fstp   st(3)
   1400129fa:	fdivr  st,st(7)
   1400129fc:	fcomp  st(0)
   1400129fe:	fdivr  st,st(7)
   140012a00:	xchg   edi,eax
   140012a01:	jle    0x140012a62
   140012a03:	jmp    FWORD PTR [rdi-0x2a007662]
   140012a09:	(bad)  
   140012a0a:	(bad)  
   140012a0b:	dec    DWORD PTR [rsi-0x6b00a287]
   140012a11:	and    BYTE PTR [rdi+rdi*8-0x24],0xdc
   140012a16:	fdiv   st(7),st
   140012a18:	(bad)  
   140012a19:	(bad)  
   140012a1a:	(bad)  
   140012a1b:	jmp    rsi
   140012a1d:	out    0xe6,al
   140012a1f:	call   QWORD PTR [rdx+rdi*2+0x7d97ff59]
   140012a26:	pop    rbp
   140012a27:	call   FWORD PTR [rbp-0x6a00977a]
   140012a2d:	jnp    0x140012a8a
   140012a2f:	call   QWORD PTR [rdx+rdi*2-0x796200a7]
   140012a36:	push   0xffffffff9bacbaff
   140012a3b:	jmp    rsi
   140012a3d:	out    0xe6,al
   140012a3f:	call   QWORD PTR [rdx+rdi*2-0x615000a7]
   140012a46:	mov    bh,bh
   140012a48:	fcomp  st(0)
   140012a4a:	fdivr  st,st(7)
   140012a4c:	xchg   esp,eax
   140012a4d:	and    BYTE PTR [rdi+rdi*8-0x65],0x87
   140012a52:	ins    BYTE PTR es:[rdi],dx
   140012a53:	(bad)  
   140012a54:	(bad)  
   140012a56:	fdivp  st(7),st
   140012a58:	in     eax,dx
   140012a59:	in     eax,dx
   140012a5a:	in     eax,dx
   140012a5b:	(bad)  
   140012a5c:	jmp    0x11e01144a
   140012a61:	fstp   st(5)
   140012a63:	(bad)  
   140012a64:	fstp   st(5)
   140012a66:	(bad)  
   140012a68:	(bad)  
   140012a6a:	fdivp  st(7),st
   140012a6c:	and    al,0x82
   140012a6e:	in     al,0xff
   140012a70:	xor    BYTE PTR [rax-0x21210020],0xde
   140012a77:	jmp    rbx
   140012a79:	jrcxz  0x140012a5e
   140012a7b:	jmp    QWORD PTR [rbp-0x51008970]
   140012a81:	sahf   
   140012a82:	mov    edi,edi
   140012a84:	loop   0x140012a68
   140012a86:	loop   0x140012a87
   140012a88:	(bad)  
   140012a8a:	fdiv   st(7),st
   140012a8c:	fwait
   140012a8d:	xchg   DWORD PTR [rdi+rdi*8-0x5e],ebp
   140012a91:	lea    esi,[rdi+rdi*8-0x1f]
   140012a95:	loope  0x140012a78
   140012a97:	push   rax
   140012a99:	lock lock push rax
   140012a9d:	lock lock push rax
   140012aa1:	lock lock (bad) 
   140012aa4:	in     al,dx
   140012aa5:	in     al,dx
   140012aa6:	in     al,dx
   140012aa7:	push   QWORD PTR [rbx]
   140012aa9:	mov    ch,cl
   140012aab:	jmp    rcx
   140012aad:	loope  0x140012a90
   140012aaf:	dec    DWORD PTR [rsi*2-0x13130018]
   140012ab6:	in     al,dx
   140012ab7:	(bad)  
   140012ab8:	in     al,dx
   140012ab9:	in     al,dx
   140012aba:	in     al,dx
   140012abb:	jmp    rbx
   140012abd:	jrcxz  0x140012aa2
   140012abf:	jmp    rsi
   140012ac1:	out    0xe6,al
   140012ac3:	(bad)  
   140012ac4:	out    dx,al
   140012ac5:	out    dx,al
   140012ac6:	out    dx,al
   140012ac7:	jmp    rcx
   140012ac9:	loope  0x140012aac
   140012acb:	jmp    QWORD PTR [rdx-0x57008b73]
   140012ad1:	xchg   esp,eax
   140012ad2:	jnp    0x140012ad3
   140012ad4:	in     al,0xe4
   140012ad6:	in     al,0xff
   140012ad8:	repz repz repz push rbx
   140012add:	repz repz push rbx
   140012ae1:	repz repz push rax
   140012ae5:	lock lock call QWORD PTR [rbx]
   140012ae9:	jp     0x140012ad4
   140012aeb:	push   rax
   140012aed:	lock lock call QWORD PTR [rbx]
   140012af1:	jp     0x140012adc
   140012af3:	call   QWORD PTR [rbx]
   140012af5:	jp     0x140012ae0
   140012af7:	push   rax
   140012af9:	lock lock push rax
   140012afd:	lock lock push rbx
   140012b01:	repz repz push rbx
   140012b05:	repz repz jmp rsp
   140012b09:	in     al,0xe4
   140012b0b:	jmp    FWORD PTR [rax-0x5000846c]
   140012b11:	fwait
   140012b12:	(bad)  
   140012b13:	jmp    rdi
   140012b15:	out    0xe7,eax
   140012b17:	push   rsi
   140012b19:	div    dh
   140012b1b:	push   rsi
   140012b1d:	div    dh
   140012b1f:	push   rsi
   140012b21:	div    dh
   140012b23:	push   rbx
   140012b25:	repz repz call QWORD PTR [rbp+rdi*4+0x7e1affe8]
   140012b2e:	jmp    0x127e91332
   140012b33:	inc    DWORD PTR [rdx+0x26ffe8b4]
   140012b39:	test   dl,ch
   140012b3b:	push   rbx
   140012b3d:	repz repz push rsi
   140012b41:	div    dh
   140012b43:	push   rsi
   140012b45:	div    dh
   140012b47:	jmp    rdi
   140012b49:	out    0xe7,eax
   140012b4b:	jmp    FWORD PTR [rdi-0x4a007d65]
   140012b51:	movabs eax,ds:0xf9f9ffe9e9e9ff89
   140012b5a:	stc    
   140012b5b:	(bad)  
   140012b5c:	stc    
   140012b5d:	stc    
   140012b5e:	stc    
   140012b5f:	(bad)  
   140012b60:	stc    
   140012b61:	stc    
   140012b62:	stc    
   140012b63:	(bad)  
   140012b64:	stc    
   140012b65:	stc    
   140012b66:	stc    
   140012b67:	push   rax
   140012b69:	lock lock dec DWORD PTR [rcx+0x26ffeab8]
   140012b71:	test   ebx,ebp
   140012b73:	(bad)  
   140012b74:	out    dx,eax
   140012b75:	out    dx,eax
   140012b76:	out    dx,eax
   140012b77:	(bad)  
   140012b78:	mov    edx,0xf5ffebd1
   140012b7d:	cmc    
   140012b7e:	cmc    
   140012b7f:	(bad)  
   140012b80:	stc    
   140012b81:	stc    
   140012b82:	stc    
   140012b83:	(bad)  
   140012b84:	stc    
   140012b85:	stc    
   140012b86:	stc    
   140012b87:	(bad)  
   140012b88:	jmp    0xf6011576
   140012b8d:	movabs eax,ds:0xececff90a7baff89
   140012b96:	in     al,dx
   140012b97:	(bad)  
   140012b98:	sti    
   140012b99:	sti    
   140012b9a:	sti    
   140012b9b:	(bad)  
   140012b9c:	sti    
   140012b9d:	sti    
   140012b9e:	sti    
   140012b9f:	(bad)  
   140012ba0:	sti    
   140012ba1:	sti    
   140012ba2:	sti    
   140012ba3:	(bad)  
   140012ba4:	sti    
   140012ba5:	sti    
   140012ba6:	sti    
   140012ba7:	(bad)  
   140012ba8:	cli    
   140012ba9:	cli    
   140012baa:	cli    
   140012bab:	push   rbx
   140012bad:	repz repz dec DWORD PTR [rbx+rdi*4-0x71c70013]
   140012bb6:	in     al,dx
   140012bb7:	push   rbp
   140012bb9:	cmc    
   140012bba:	cmc    
   140012bbb:	(bad)  
   140012bbc:	sti    
   140012bbd:	sti    
   140012bbe:	sti    
   140012bbf:	(bad)  
   140012bc0:	sti    
   140012bc1:	sti    
   140012bc2:	sti    
   140012bc3:	(bad)  
   140012bc4:	sti    
   140012bc5:	sti    
   140012bc6:	sti    
   140012bc7:	(bad)  
   140012bc8:	in     al,dx
   140012bc9:	in     al,dx
   140012bca:	in     al,dx
   140012bcb:	(bad)  
   140012bcc:	mov    edx,0xbfff90a7
   140012bd1:	lods   al,BYTE PTR ds:[rsi]
   140012bd2:	xchg   esi,eax
   140012bd3:	(bad)  
   140012bd4:	in     eax,dx
   140012bd5:	in     eax,dx
   140012bd6:	in     eax,dx
   140012bd7:	(bad)  
   140012bd8:	cld    
   140012bd9:	cld    
   140012bda:	cld    
   140012bdb:	(bad)  
   140012bdc:	std    
   140012bdd:	std    
   140012bde:	std    
   140012bdf:	(bad)  
   140012be0:	std    
   140012be1:	std    
   140012be2:	std    
   140012be3:	(bad)  
   140012be4:	std    
   140012be5:	std    
   140012be6:	std    
   140012be7:	(bad)  
   140012be8:	std    
   140012be9:	std    
   140012bea:	std    
   140012beb:	(bad)  
   140012bec:	cld    
   140012bed:	cld    
   140012bee:	cld    
   140012bef:	push   rsp
   140012bf1:	hlt    
   140012bf2:	hlt    
   140012bf3:	inc    esp
   140012bf5:	f2xm1  
   140012bf7:	(bad)  
   140012bf8:	cli    
   140012bf9:	cli    
   140012bfa:	cli    
   140012bfb:	(bad)  
   140012bfc:	std    
   140012bfd:	std    
   140012bfe:	std    
   140012bff:	(bad)  
   140012c00:	std    
   140012c01:	std    
   140012c02:	std    
   140012c03:	(bad)  
   140012c04:	cld    
   140012c05:	cld    
   140012c06:	cld    
   140012c07:	(bad)  
   140012c08:	in     eax,dx
   140012c09:	in     eax,dx
   140012c0a:	in     eax,dx
   140012c0b:	(bad)  
   140012c0c:	mov    edi,0xc4ff96ac
   140012c11:	mov    cl,0x9b
   140012c13:	int3   
   140012c14:	(bad)  
   140012c16:	(bad)  
   140012c17:	push   rbp
   140012c19:	cmc    
   140012c1a:	cmc    
   140012c1b:	push   rdi
   140012c1d:	div    edi
   140012c1f:	push   rdi
   140012c21:	div    edi
   140012c23:	push   rdi
   140012c25:	div    edi
   140012c27:	push   rdi
   140012c29:	div    edi
   140012c2b:	push   rdi
   140012c2d:	div    edi
   140012c2f:	push   rdi
   140012c31:	div    edi
   140012c33:	push   rsp
   140012c35:	hlt    
   140012c36:	hlt    
   140012c37:	push   rdi
   140012c39:	div    edi
   140012c3b:	push   rdi
   140012c3d:	div    edi
   140012c3f:	push   rdi
   140012c41:	div    edi
   140012c43:	push   rbp
   140012c45:	cmc    
   140012c46:	cmc    
   140012c47:	(bad)  
   140012c48:	(bad)  
   140012c4a:	(bad)  
   140012c4b:	inc    esp
   140012c4d:	mov    cl,0x9b
   140012c4f:	int3   
   140012c50:	enter  0x9fb5,0x68
   140012c54:	enter  0x9fb5,0xcc
   140012c58:	enter  0x9fb5,0xff
   140012c5c:	enter  0x9fb5,0xff
   140012c60:	enter  0x9fb5,0xff
   140012c64:	enter  0x9fb5,0xff
   140012c68:	enter  0x9fb5,0xff
   140012c6c:	enter  0x9fb5,0xff
   140012c70:	enter  0x9fb5,0xff
   140012c74:	enter  0x9fb5,0xff
   140012c78:	enter  0x9fb5,0xff
   140012c7c:	enter  0x9fb5,0xff
   140012c80:	enter  0x9fb5,0xff
   140012c84:	enter  0x9fb5,0xff
   140012c88:	enter  0x9fb5,0xcc
   140012c8c:	enter  0x9fb5,0x68
   140012c90:	add    BYTE PTR [rax],al
   140012c92:	(bad)  
   140012c93:	jnp    0x140012c95
   140012c95:	add    BYTE PTR [rax],al
   140012c97:	add    BYTE PTR [rax],al
   140012c99:	add    BYTE PTR [rdx],ch
	...
   140012ccf:	add    al,0x0
   140012cd1:	add    BYTE PTR [rcx],al
   140012cd3:	add    BYTE PTR [rax+rax*1],cl
   140012cd6:	xor    BYTE PTR [rax],dh
   140012cd8:	adc    BYTE PTR [rax],al
   140012cda:	add    DWORD PTR [rax],eax
   140012cdc:	add    al,0x0
   140012cde:	push   0x1000006
   140012ce3:	add    BYTE PTR [rax],ah
   140012ce5:	and    BYTE PTR [rax],dl
   140012ce7:	add    BYTE PTR [rcx],al
   140012ce9:	add    BYTE PTR [rax+rax*1],al
   140012cec:	call   0x142012cf3
   140012cf1:	add    BYTE PTR [rax],bl
   140012cf3:	sbb    BYTE PTR [rax],dl
   140012cf5:	add    BYTE PTR [rcx],al
   140012cf7:	add    BYTE PTR [rax+rax*1],al
   140012cfa:	call   0x143012d00
   140012cff:	add    BYTE PTR [rax],dl
   140012d01:	adc    BYTE PTR [rax],dl
   140012d03:	add    BYTE PTR [rcx],al
   140012d05:	add    BYTE PTR [rax+rax*1],al
   140012d08:	sub    BYTE PTR [rcx],al
   140012d0a:	add    BYTE PTR [rax],al
   140012d0c:	add    al,0x0
   140012d0e:	xor    BYTE PTR [rax],dh
   140012d10:	add    BYTE PTR [rax],al
   140012d12:	add    DWORD PTR [rax],eax
   140012d14:	or     BYTE PTR [rax],al
   140012d16:	test   al,0xe
   140012d18:	add    BYTE PTR [rax],al
   140012d1a:	add    eax,0x202000
   140012d1f:	add    BYTE PTR [rcx],al
   140012d21:	add    BYTE PTR [rax],cl
   140012d23:	add    BYTE PTR [rax+0x6000008],ch
   140012d29:	add    BYTE PTR [rax],bl
   140012d2b:	sbb    BYTE PTR [rax],al
   140012d2d:	add    BYTE PTR [rcx],al
   140012d2f:	add    BYTE PTR [rax],cl
   140012d31:	add    al,cl
   140012d33:	(bad)  
   140012d34:	add    BYTE PTR [rax],al
   140012d36:	(bad)  
   140012d37:	add    BYTE PTR [rax],dl
   140012d39:	adc    BYTE PTR [rax],al
   140012d3b:	add    BYTE PTR [rcx],al
   140012d3d:	add    BYTE PTR [rax],cl
   140012d3f:	add    BYTE PTR [rax+0x5],ch
   140012d42:	add    BYTE PTR [rax],al
   140012d44:	or     BYTE PTR [rax],al
   140012d46:	xor    BYTE PTR [rax],dh
   140012d48:	add    BYTE PTR [rax],al
   140012d4a:	add    DWORD PTR [rax],eax
   140012d4c:	and    BYTE PTR [rax],al
   140012d4e:	test   al,0x25
   140012d50:	add    BYTE PTR [rax],al
   140012d52:	or     DWORD PTR [rax],eax
   140012d54:	and    BYTE PTR [rax],ah
   140012d56:	add    BYTE PTR [rax],al
   140012d58:	add    DWORD PTR [rax],eax
   140012d5a:	and    BYTE PTR [rax],al
   140012d5c:	test   al,0x10
   140012d5e:	add    BYTE PTR [rax],al
   140012d60:	or     al,BYTE PTR [rax]
   140012d62:	sbb    BYTE PTR [rax],bl
   140012d64:	add    BYTE PTR [rax],al
   140012d66:	add    DWORD PTR [rax],eax
   140012d68:	and    BYTE PTR [rax],al
   140012d6a:	mov    BYTE PTR [rcx],cl
   140012d6c:	add    BYTE PTR [rax],al
   140012d6e:	or     eax,DWORD PTR [rax]
   140012d70:	adc    BYTE PTR [rax],dl
   140012d72:	add    BYTE PTR [rax],al
   140012d74:	add    DWORD PTR [rax],eax
   140012d76:	and    BYTE PTR [rax],al
   140012d78:	push   0xc000004
   140012d7d:	add    BYTE PTR [rax],al
   140012d7f:	add    BYTE PTR [rax+0x3],cl
   140012d82:	xor    al,0x0
   140012d84:	add    BYTE PTR [rax],al
   140012d86:	push   rsi
   140012d87:	add    BYTE PTR [rbx+0x0],dl
   140012d8a:	pop    rdi
   140012d8b:	add    BYTE PTR [rsi+0x0],dl
   140012d8e:	add    BYTE PTR [r10+0x0],r10b
   140012d92:	push   rbx
   140012d93:	add    BYTE PTR [rcx+0x0],cl
   140012d96:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140012d9a:	pop    rdi
   140012d9b:	add    BYTE PTR [rcx+0x0],cl
   140012d9e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   140012da2:	rex.WRXB add BYTE PTR [r8],r8b
   140012da5:	add    BYTE PTR [rax],al
   140012da7:	add    BYTE PTR [rbp+0xfeef04],bh
   140012dad:	add    BYTE PTR [rcx],al
   140012daf:	add    BYTE PTR [rax+rax*1],bh
   140012db2:	or     al,BYTE PTR [rax]
   140012db4:	adc    eax,DWORD PTR [rax]
   140012db6:	add    al,BYTE PTR [rax]
   140012db8:	add    BYTE PTR [rax],al
   140012dba:	(bad)  
   140012dbb:	add    BYTE PTR [rbx],dl
   140012dbd:	add    BYTE PTR [rax+0x2],bl
   140012dc0:	(bad)  
   140012dc1:	add    BYTE PTR [rax],al
   140012dc3:	add    BYTE PTR [rax],al
   140012dc5:	add    BYTE PTR [rax],al
   140012dc7:	add    BYTE PTR [rax+rax*1],al
   140012dca:	add    al,0x0
   140012dcc:	add    al,BYTE PTR [rax]
	...
   140012dda:	add    BYTE PTR [rax],al
   140012ddc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012ddd:	add    al,BYTE PTR [rax]
   140012ddf:	add    BYTE PTR [rcx],al
   140012de1:	add    BYTE PTR [rbx+0x0],dl
   140012de4:	je     0x140012de6
   140012de6:	jb     0x140012de8
   140012de8:	imul   eax,DWORD PTR [rax],0x67006e
   140012dee:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140012df2:	ins    BYTE PTR es:[rdi],dx
   140012df3:	add    BYTE PTR [rbp+0x0],ah
   140012df6:	rex.WB add BYTE PTR [r14+0x0],bpl
   140012dfa:	data16 add BYTE PTR [rdi+0x0],ch
   140012dfe:	add    BYTE PTR [rax],al
   140012e00:	(bad)  
   140012e01:	add    al,BYTE PTR [rax]
   140012e03:	add    BYTE PTR [rcx],al
   140012e05:	add    BYTE PTR [rax],dh
   140012e07:	add    BYTE PTR [rax+rax*1],dh
   140012e0a:	xor    BYTE PTR [rax],al
   140012e0c:	cmp    DWORD PTR [rax],eax
   140012e0e:	xor    BYTE PTR [rax],al
   140012e10:	xor    al,0x0
   140012e12:	(bad)  
   140012e13:	add    BYTE PTR [rax],dh
   140012e15:	add    BYTE PTR [rax],al
   140012e17:	add    BYTE PTR [rsi+0x0],al
   140012e1a:	adc    eax,DWORD PTR [rax]
   140012e1c:	add    DWORD PTR [rax],eax
   140012e1e:	rex.XB add BYTE PTR [r15+0x0],bpl
   140012e22:	ins    DWORD PTR es:[rdi],dx
   140012e23:	add    BYTE PTR [rax+0x0],dh
   140012e26:	(bad)  
   140012e27:	add    BYTE PTR [rsi+0x0],ch
   140012e2a:	jns    0x140012e2c
   140012e2c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140012e30:	ins    DWORD PTR es:[rdi],dx
   140012e31:	add    BYTE PTR [rbp+0x0],ah
   140012e34:	add    BYTE PTR [rax],al
   140012e36:	add    BYTE PTR [rax],al
   140012e38:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   140012e3c:	(bad)  
   140012e3d:	add    BYTE PTR [rbx+0x0],ah
   140012e40:	ins    BYTE PTR es:[rdi],dx
   140012e41:	add    BYTE PTR [rbp+0x0],ah
   140012e44:	and    BYTE PTR [rax],al
   140012e46:	rex.XB add BYTE PTR [r15+0x0],bpl
   140012e4a:	jb     0x140012e4c
   140012e4c:	jo     0x140012e4e
   140012e4e:	outs   dx,DWORD PTR ds:[rsi]
   140012e4f:	add    BYTE PTR [rdx+0x0],dh
   140012e52:	(bad)  
   140012e53:	add    BYTE PTR [rax+rax*1+0x69],dh
   140012e57:	add    BYTE PTR [rdi+0x0],ch
   140012e5a:	outs   dx,BYTE PTR ds:[rsi]
   140012e5b:	add    BYTE PTR [rax],al
   140012e5d:	add    BYTE PTR [rax],al
   140012e5f:	add    BYTE PTR [rsi+0x0],cl
   140012e62:	adc    eax,DWORD PTR [rax]
   140012e64:	add    DWORD PTR [rax],eax
   140012e66:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140012e6a:	ins    BYTE PTR es:[rdi],dx
   140012e6b:	add    BYTE PTR [rbp+0x0],ah
   140012e6e:	add    BYTE PTR [rbp+0x0],r12b
   140012e72:	jae    0x140012e74
   140012e74:	movsxd eax,DWORD PTR [rax]
   140012e76:	jb     0x140012e78
   140012e78:	imul   eax,DWORD PTR [rax],0x740070
   140012e7e:	imul   eax,DWORD PTR [rax],0x6e006f
   140012e84:	add    BYTE PTR [rax],al
   140012e86:	add    BYTE PTR [rax],al
   140012e88:	rex.WX add BYTE PTR [rcx+0x0],spl
   140012e8c:	jbe    0x140012e8e
   140012e8e:	(bad)  
   140012e8f:	add    BYTE PTR [rax],ah
   140012e91:	add    BYTE PTR [rbx+0x0],al
   140012e94:	outs   dx,DWORD PTR ds:[rsi]
   140012e95:	add    BYTE PTR [rsi+0x0],ch
   140012e98:	je     0x140012e9a
   140012e9a:	jb     0x140012e9c
   140012e9c:	outs   dx,DWORD PTR ds:[rsi]
   140012e9d:	add    BYTE PTR [rax+rax*1+0x20],ch
   140012ea1:	add    BYTE PTR [rax+0x0],dl
   140012ea4:	(bad)  
   140012ea5:	add    BYTE PTR [rsi+0x0],ch
   140012ea8:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   140012ead:	add    BYTE PTR [rax],al
   140012eaf:	add    BYTE PTR [rsi],dh
   140012eb1:	add    BYTE PTR [rbx],cl
   140012eb3:	add    BYTE PTR [rcx],al
   140012eb5:	add    BYTE PTR [rsi+0x0],al
   140012eb8:	imul   eax,DWORD PTR [rax],0x65006c
   140012ebe:	push   rsi
   140012ebf:	add    BYTE PTR [rbp+0x0],ah
   140012ec2:	jb     0x140012ec4
   140012ec4:	jae    0x140012ec6
   140012ec6:	imul   eax,DWORD PTR [rax],0x6e006f
   140012ecc:	add    BYTE PTR [rax],al
   140012ece:	add    BYTE PTR [rax],al
   140012ed0:	xor    DWORD PTR [rax],eax
   140012ed2:	xor    BYTE PTR [rax],al
   140012ed4:	add    BYTE PTR cs:[rsi],dh
   140012ed7:	add    BYTE PTR [rax],dh
   140012ed9:	add    BYTE PTR [rsi],ch
   140012edb:	add    BYTE PTR [rdx],dh
   140012edd:	add    BYTE PTR [rsi],ch
   140012edf:	add    BYTE PTR [rcx],dh
   140012ee1:	add    BYTE PTR [rcx],bh
   140012ee3:	add    BYTE PTR [rax],al
   140012ee5:	add    BYTE PTR [rax],al
   140012ee7:	add    BYTE PTR [rsi],dh
   140012ee9:	add    BYTE PTR [rbx],cl
   140012eeb:	add    BYTE PTR [rcx],al
   140012eed:	add    BYTE PTR [rsi+0x0],al
   140012ef0:	jne    0x140012ef2
   140012ef2:	ins    BYTE PTR es:[rdi],dx
   140012ef3:	add    BYTE PTR [rax+rax*1+0x20],ch
   140012ef7:	add    BYTE PTR [rsi+0x0],dl
   140012efa:	add    BYTE PTR gs:[rdx+0x0],dh
   140012efe:	jae    0x140012f00
   140012f00:	imul   eax,DWORD PTR [rax],0x6e006f
   140012f06:	add    BYTE PTR [rax],al
   140012f08:	xor    DWORD PTR [rax],eax
   140012f0a:	xor    BYTE PTR [rax],al
   140012f0c:	add    BYTE PTR cs:[rsi],dh
   140012f0f:	add    BYTE PTR [rax],dh
   140012f11:	add    BYTE PTR [rsi],ch
   140012f13:	add    BYTE PTR [rdx],dh
   140012f15:	add    BYTE PTR [rsi],ch
   140012f17:	add    BYTE PTR [rcx],dh
   140012f19:	add    BYTE PTR [rcx],bh
   140012f1b:	add    BYTE PTR [rax],al
   140012f1d:	add    BYTE PTR [rax],al
   140012f1f:	add    BYTE PTR [rsi+0x0],al
   140012f22:	adc    eax,DWORD PTR [rax]
   140012f24:	add    DWORD PTR [rax],eax
   140012f26:	rex.WB add BYTE PTR [r14+0x0],bpl
   140012f2a:	je     0x140012f2c
   140012f2c:	add    BYTE PTR gs:[rdx+0x0],dh
   140012f30:	outs   dx,BYTE PTR ds:[rsi]
   140012f31:	add    BYTE PTR [rcx+0x0],ah
   140012f34:	ins    BYTE PTR es:[rdi],dx
   140012f35:	add    BYTE PTR [rsi+0x0],cl
   140012f38:	(bad)  
   140012f39:	add    BYTE PTR [rbp+0x0],ch
   140012f3c:	add    BYTE PTR gs:[rax],al
   140012f3f:	add    BYTE PTR [rdx+0x0],cl
   140012f42:	(bad)  
   140012f43:	add    BYTE PTR [rsi+0x0],dh
   140012f46:	(bad)  
   140012f47:	add    BYTE PTR [rax],ah
   140012f49:	add    BYTE PTR [rbx+0x0],al
   140012f4c:	outs   dx,DWORD PTR ds:[rsi]
   140012f4d:	add    BYTE PTR [rsi+0x0],ch
   140012f50:	je     0x140012f52
   140012f52:	jb     0x140012f54
   140012f54:	outs   dx,DWORD PTR ds:[rsi]
   140012f55:	add    BYTE PTR [rax+rax*1+0x20],ch
   140012f59:	add    BYTE PTR [rax+0x0],dl
   140012f5c:	(bad)  
   140012f5d:	add    BYTE PTR [rsi+0x0],ch
   140012f60:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   140012f65:	add    BYTE PTR [rax],al
   140012f67:	add    BYTE PTR [rsi+0x0],al
   140012f6a:	adc    DWORD PTR [rax],eax
   140012f6c:	add    DWORD PTR [rax],eax
   140012f6e:	rex.WR add BYTE PTR [rbp+0x0],r12b
   140012f72:	add    BYTE PTR [ecx+0x0],ah
   140012f76:	ins    BYTE PTR es:[rdi],dx
   140012f77:	add    BYTE PTR [rbx+0x0],al
   140012f7a:	outs   dx,DWORD PTR ds:[rsi]
   140012f7b:	add    BYTE PTR [rax+0x0],dh
   140012f7e:	jns    0x140012f80
   140012f80:	jb     0x140012f82
   140012f82:	imul   eax,DWORD PTR [rax],0x680067
   140012f88:	je     0x140012f8a
   140012f8a:	add    BYTE PTR [rax],al
   140012f8c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140012f90:	jo     0x140012f92
   140012f92:	jns    0x140012f94
   140012f94:	jb     0x140012f96
   140012f96:	imul   eax,DWORD PTR [rax],0x680067
   140012f9c:	je     0x140012f9e
   140012f9e:	and    BYTE PTR [rax],al
   140012fa0:	test   eax,0x32002000
   140012fa5:	add    BYTE PTR [rax],dh
   140012fa7:	add    BYTE PTR [rcx],dh
   140012fa9:	add    BYTE PTR [rax+rax*1],dh
   140012fac:	add    BYTE PTR [rax],al
   140012fae:	add    BYTE PTR [rax],al
   140012fb0:	add    BYTE PTR [rax+rax*1],cl
   140012fb4:	add    DWORD PTR [rax],eax
   140012fb6:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   140012fba:	imul   eax,DWORD PTR [rax],0x690067
   140012fc0:	outs   dx,BYTE PTR ds:[rsi]
   140012fc1:	add    BYTE PTR [rcx+0x0],ah
   140012fc4:	ins    BYTE PTR es:[rdi],dx
   140012fc5:	add    BYTE PTR [rsi+0x0],al
   140012fc8:	imul   eax,DWORD PTR [rax],0x65006c
   140012fce:	outs   dx,BYTE PTR ds:[rsi]
   140012fcf:	add    BYTE PTR [rcx+0x0],ah
   140012fd2:	ins    DWORD PTR es:[rdi],dx
   140012fd3:	add    BYTE PTR [rbp+0x0],ah
   140012fd6:	add    BYTE PTR [rax],al
   140012fd8:	push   0x0
   140012fda:	(bad)  
   140012fdb:	add    BYTE PTR [rsi+0x0],dh
   140012fde:	(bad)  
   140012fdf:	add    BYTE PTR [rbx+0x0],ah
   140012fe2:	jo     0x140012fe4
   140012fe4:	ins    BYTE PTR es:[rdi],dx
   140012fe5:	add    BYTE PTR [rsi],ch
   140012fe7:	add    BYTE PTR [rbp+0x0],ah
   140012fea:	js     0x140012fec
   140012fec:	add    BYTE PTR gs:[rax],al
   140012fef:	add    BYTE PTR [rsi+0x0],dl
   140012ff2:	sbb    eax,DWORD PTR [rax]
   140012ff4:	add    DWORD PTR [rax],eax
   140012ff6:	push   rax
   140012ff7:	add    BYTE PTR [rdx+0x0],dh
   140012ffa:	outs   dx,DWORD PTR ds:[rsi]
   140012ffb:	add    BYTE PTR [rax+rax*1+0x75],ah
   140012fff:	add    BYTE PTR [rbx+0x0],ah
   140013002:	je     0x140013004
   140013004:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140013008:	ins    DWORD PTR es:[rdi],dx
   140013009:	add    BYTE PTR [rbp+0x0],ah
   14001300c:	add    BYTE PTR [rax],al
   14001300e:	add    BYTE PTR [rax],al
   140013010:	rex.WX add BYTE PTR [rcx+0x0],spl
   140013014:	jbe    0x140013016
   140013016:	(bad)  
   140013017:	add    BYTE PTR [rax],ch
   140013019:	add    BYTE PTR [rax+rax*1+0x4d],dl
   14001301d:	add    BYTE PTR [rcx],ch
   14001301f:	add    BYTE PTR [rax],ah
   140013021:	add    BYTE PTR [rax+0x0],dl
   140013024:	ins    BYTE PTR es:[rdi],dx
   140013025:	add    BYTE PTR [rcx+0x0],ah
   140013028:	je     0x14001302a
   14001302a:	data16 add BYTE PTR [rdi+0x0],ch
   14001302e:	jb     0x140013030
   140013030:	ins    DWORD PTR es:[rdi],dx
   140013031:	add    BYTE PTR [rax],ah
   140013033:	add    BYTE PTR [rbx+0x0],dl
   140013036:	add    BYTE PTR [r8],r12b
   140013039:	add    BYTE PTR [rdi],dh
   14001303b:	add    BYTE PTR [rax],ah
   14001303d:	add    BYTE PTR [rbp+0x0],dl
   140013040:	add    BYTE PTR ss:[rax],dh
   140013043:	add    BYTE PTR [rax],al
   140013045:	add    BYTE PTR [rax],al
   140013047:	add    BYTE PTR [rdx],bh
   140013049:	add    BYTE PTR [rbx],cl
   14001304b:	add    BYTE PTR [rcx],al
   14001304d:	add    BYTE PTR [rax+0x0],dl
   140013050:	jb     0x140013052
   140013052:	outs   dx,DWORD PTR ds:[rsi]
   140013053:	add    BYTE PTR [rax+rax*1+0x75],ah
   140013057:	add    BYTE PTR [rbx+0x0],ah
   14001305a:	je     0x14001305c
   14001305c:	push   rsi
   14001305d:	add    BYTE PTR [rbp+0x0],ah
   140013060:	jb     0x140013062
   140013062:	jae    0x140013064
   140013064:	imul   eax,DWORD PTR [rax],0x6e006f
   14001306a:	add    BYTE PTR [rax],al
   14001306c:	(bad)  
   14001306d:	add    BYTE PTR [rsi],ch
   14001306f:	add    BYTE PTR [rax],dh
   140013071:	add    BYTE PTR [rsi],ch
   140013073:	add    BYTE PTR [rsi],dh
   140013075:	add    BYTE PTR [rax],dh
   140013077:	add    BYTE PTR [rax],dh
   140013079:	add    BYTE PTR [rsi],ch
   14001307b:	add    BYTE PTR [rcx],dh
   14001307d:	add    BYTE PTR [rcx],bh
   14001307f:	add    BYTE PTR [rax],al
   140013081:	add    BYTE PTR [rax],al
   140013083:	add    BYTE PTR [rax+rax*1+0x0],al
   140013087:	add    BYTE PTR [rcx],al
   140013089:	add    BYTE PTR [rsi+0x0],dl
   14001308c:	(bad)  
   14001308d:	add    BYTE PTR [rdx+0x0],dh
   140013090:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140013094:	ins    BYTE PTR es:[rdi],dx
   140013095:	add    BYTE PTR [rbp+0x0],ah
   140013098:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001309c:	data16 add BYTE PTR [rdi+0x0],ch
   1400130a0:	add    BYTE PTR [rax],al
   1400130a2:	add    BYTE PTR [rax],al
   1400130a4:	and    al,0x0
   1400130a6:	add    al,0x0
   1400130a8:	add    BYTE PTR [rax],al
   1400130aa:	push   rsp
   1400130ab:	add    BYTE PTR [rdx+0x0],dh
   1400130ae:	(bad)  
   1400130af:	add    BYTE PTR [rsi+0x0],ch
   1400130b2:	jae    0x1400130b4
   1400130b4:	ins    BYTE PTR es:[rdi],dx
   1400130b5:	add    BYTE PTR [rcx+0x0],ah
   1400130b8:	je     0x1400130ba
   1400130ba:	imul   eax,DWORD PTR [rax],0x6e006f
   1400130c0:	add    BYTE PTR [rax],al
   1400130c2:	add    BYTE PTR [rax],al
   1400130c4:	or     DWORD PTR [rax+rsi*4],eax
   1400130c7:	add    al,0x0
   1400130c9:	add    BYTE PTR [rax+rax*1],al
   1400130cc:	rex.WX add BYTE PTR [rcx+0x0],spl
   1400130d0:	jbe    0x1400130d2
   1400130d2:	(bad)  
   1400130d3:	add    BYTE PTR [rdx],dl
   1400130d5:	add    BYTE PTR [rdx+0x0],cl
   1400130d8:	(bad)  
   1400130d9:	add    BYTE PTR [rsi+0x0],dh
   1400130dc:	(bad)  
   1400130dd:	add    BYTE PTR [rax],ah
   1400130df:	add    BYTE PTR [rbx+0x0],al
   1400130e2:	outs   dx,DWORD PTR ds:[rsi]
   1400130e3:	add    BYTE PTR [rsi+0x0],ch
   1400130e6:	je     0x1400130e8
   1400130e8:	jb     0x1400130ea
   1400130ea:	outs   dx,DWORD PTR ds:[rsi]
   1400130eb:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400130ef:	add    BYTE PTR [rax+0x0],dl
   1400130f2:	(bad)  
   1400130f3:	add    BYTE PTR [rsi+0x0],ch
   1400130f6:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
	...

Disassembly of section .reloc:

0000000140014000 <.reloc>:
   140014000:	add    BYTE PTR [rax+0x0],ah
   140014003:	add    BYTE PTR [rax+rax*1],ah
   140014006:	add    BYTE PTR [rax],al
   140014008:	jo     0x140013fad
   14001400a:	js     0x140013faf
   14001400c:	and    BYTE PTR [rbx-0x5c5f5c68],0xe8
   140014013:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014014:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014016:	add    BYTE PTR [rdi-0x58e758f8],ah
   14001401c:	cmp    BYTE PTR [rdi-0x588f58a8],ah
   140014022:	add    BYTE PTR [rax],al
   140014024:	add    BYTE PTR [rax+0x0],dh
   140014027:	add    BYTE PTR [rax+rax*1],ah
   14001402a:	add    BYTE PTR [rax],al
   14001402c:	(bad)  
   14001402d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001402e:	push   0xffffffff80a478a4
   140014033:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014034:	nop
   140014035:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014036:	mov    al,0xa4
   140014038:	shl    BYTE PTR [rax+rbp*8-0x77597f5c],1
   14001403f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014040:	nop
   140014041:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014042:	cwde   
   140014043:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014044:	call   0x1400140ef
   140014049:	nop
   14001404a:	add    BYTE PTR [rax],al
   14001404c:	sub    BYTE PTR [rax],al
   14001404e:	add    BYTE PTR [rax],al
   140014050:	add    BYTE PTR [rax-0x5f775fc0],ah
   140014056:	cwde   
   140014057:	movabs al,ds:0xa0b8a0b0a0a8a0a0
   140014060:	shl    BYTE PTR [rax-0x5f2f5f38],0xd8
   140014067:	movabs al,ds:0xa108a0f8a0f0a0e8
	...
