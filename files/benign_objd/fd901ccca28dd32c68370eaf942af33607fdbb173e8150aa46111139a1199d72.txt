
fd901ccca28dd32c68370eaf942af33607fdbb173e8150aa46111139a1199d72.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x8139]        # 0x140009140
   140001007:	jmp    0x140008d88
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	sub    rsp,0x28
   140001014:	call   0x140008458
   140001019:	lea    rcx,[rip+0x8160]        # 0x140009180
   140001020:	add    rsp,0x28
   140001024:	jmp    0x140008d88
   140001029:	int3   
   14000102a:	int3   
   14000102b:	int3   
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	sub    rsp,0x28
   140001034:	lea    r9,[rip+0xbfed]        # 0x14000d028
   14000103b:	xor    r8d,r8d
   14000103e:	xor    edx,edx
   140001040:	lea    rcx,[rip+0xa0d9]        # 0x14000b120
   140001047:	call   QWORD PTR [rip+0x937b]        # 0x14000a3c8
   14000104d:	lea    rcx,[rip+0x815c]        # 0x1400091b0
   140001054:	add    rsp,0x28
   140001058:	jmp    0x140008d88
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	int3   
   140001061:	int3   
   140001062:	int3   
   140001063:	int3   
   140001064:	int3   
   140001065:	int3   
   140001066:	int3   
   140001067:	int3   
   140001068:	mov    QWORD PTR [rsp+0x8],rbx
   14000106d:	xor    ebx,ebx
   14000106f:	lea    rax,[rdx-0x1]
   140001073:	mov    r10d,0x7ffffffe
   140001079:	mov    r9d,ebx
   14000107c:	cmp    rax,r10
   14000107f:	mov    r11d,0x80070057
   140001085:	cmova  r9d,r11d
   140001089:	test   r9d,r9d
   14000108c:	js     0x1400010cd
   14000108e:	mov    r9d,ebx
   140001091:	test   rdx,rdx
   140001094:	je     0x1400010c1
   140001096:	sub    r10,rdx
   140001099:	sub    r8,rcx
   14000109c:	lea    rax,[r10+rdx*1]
   1400010a0:	test   rax,rax
   1400010a3:	je     0x1400010bc
   1400010a5:	movzx  eax,WORD PTR [r8+rcx*1]
   1400010aa:	test   ax,ax
   1400010ad:	je     0x1400010bc
   1400010af:	mov    WORD PTR [rcx],ax
   1400010b2:	add    rcx,0x2
   1400010b6:	sub    rdx,0x1
   1400010ba:	jne    0x14000109c
   1400010bc:	test   rdx,rdx
   1400010bf:	jne    0x1400010d2
   1400010c1:	sub    rcx,0x2
   1400010c5:	mov    r9d,0x8007007a
   1400010cb:	jmp    0x1400010d2
   1400010cd:	test   rdx,rdx
   1400010d0:	je     0x1400010d5
   1400010d2:	mov    WORD PTR [rcx],bx
   1400010d5:	mov    rbx,QWORD PTR [rsp+0x8]
   1400010da:	mov    eax,r9d
   1400010dd:	ret    
   1400010de:	int3   
   1400010df:	int3   
   1400010e0:	int3   
   1400010e1:	int3   
   1400010e2:	int3   
   1400010e3:	int3   
   1400010e4:	rex push rbx
   1400010e6:	sub    rsp,0x30
   1400010ea:	lea    rax,[rip+0xc4ff]        # 0x14000d5f0
   1400010f1:	mov    DWORD PTR [rsp+0x20],0x67727473
   1400010f9:	mov    QWORD PTR [rsp+0x28],rax
   1400010fe:	mov    rbx,rcx
   140001101:	call   QWORD PTR [rip+0x8fe9]        # 0x14000a0f0
   140001107:	xor    r9d,r9d
   14000110a:	xor    r8d,r8d
   14000110d:	xor    ecx,ecx
   14000110f:	lea    edx,[r9+0x1]
   140001113:	call   QWORD PTR [rip+0x8fe7]        # 0x14000a100
   140001119:	mov    rcx,rbx
   14000111c:	call   0x14000113c
   140001121:	lea    rcx,[rsp+0x20]
   140001126:	call   0x140007628
   14000112b:	xor    eax,eax
   14000112d:	add    rsp,0x30
   140001131:	pop    rbx
   140001132:	ret    
   140001133:	int3   
   140001134:	int3   
   140001135:	int3   
   140001136:	int3   
   140001137:	int3   
   140001138:	int3   
   140001139:	int3   
   14000113a:	int3   
   14000113b:	int3   
   14000113c:	mov    rax,rsp
   14000113f:	mov    QWORD PTR [rax+0x10],rbx
   140001143:	mov    QWORD PTR [rax+0x18],rsi
   140001147:	mov    QWORD PTR [rax+0x20],rdi
   14000114b:	push   rbp
   14000114c:	push   r12
   14000114e:	push   r13
   140001150:	push   r14
   140001152:	push   r15
   140001154:	lea    rbp,[rax-0x358]
   14000115b:	sub    rsp,0x430
   140001162:	mov    rax,QWORD PTR [rip+0xbe9f]        # 0x14000d008
   140001169:	xor    rax,rsp
   14000116c:	mov    QWORD PTR [rbp+0x320],rax
   140001173:	xor    r13d,r13d
   140001176:	mov    rdi,rcx
   140001179:	xor    edx,edx
   14000117b:	mov    DWORD PTR [rbp+0x60],r13d
   14000117f:	lea    rcx,[rbp+0x64]
   140001183:	lea    r8d,[r13+0x64]
   140001187:	call   0x14000906a
   14000118c:	lea    esi,[r13+0x28]
   140001190:	mov    QWORD PTR [rbp+0x2f0],r13
   140001197:	mov    r8d,esi
   14000119a:	lea    rcx,[rbp+0x2f8]
   1400011a1:	xor    edx,edx
   1400011a3:	call   0x14000906a
   1400011a8:	mov    r8d,esi
   1400011ab:	mov    QWORD PTR [rbp+0x2c0],r13
   1400011b2:	xor    edx,edx
   1400011b4:	lea    rcx,[rbp+0x2c8]
   1400011bb:	call   0x14000906a
   1400011c0:	xor    edx,edx
   1400011c2:	mov    DWORD PTR [rbp+0x0],r13d
   1400011c6:	lea    r8d,[r13+0x5c]
   1400011ca:	lea    rcx,[rbp+0x4]
   1400011ce:	call   0x14000906a
   1400011d3:	lea    r14d,[r13+0x1]
   1400011d7:	mov    DWORD PTR [rbp+0x270],r13d
   1400011de:	lea    r12d,[r13+0x2]
   1400011e2:	mov    DWORD PTR [rbp+0x27c],r14d
   1400011e9:	lea    rcx,[rbp+0x120]
   1400011f0:	mov    DWORD PTR [rbp+0x288],r12d
   1400011f7:	mov    DWORD PTR [rbp+0x274],0x3e8
   140001201:	mov    DWORD PTR [rbp+0x278],0x7d0
   14000120b:	mov    DWORD PTR [rbp+0x280],0x3ea
   140001215:	mov    DWORD PTR [rbp+0x284],0x7d1
   14000121f:	mov    DWORD PTR [rbp+0x28c],0x3e9
   140001229:	mov    DWORD PTR [rbp+0x290],0x7d2
   140001233:	mov    DWORD PTR [rbp+0x294],0x3
   14000123d:	mov    DWORD PTR [rbp+0x298],0x3eb
   140001247:	mov    DWORD PTR [rbp+0x29c],0x7d3
   140001251:	mov    DWORD PTR [rbp+0x2a0],0x4
   14000125b:	mov    DWORD PTR [rbp+0x2a4],0x3ed
   140001265:	mov    DWORD PTR [rbp+0x2a8],0x7d5
   14000126f:	mov    DWORD PTR [rbp+0x2ac],0x5
   140001279:	mov    DWORD PTR [rbp+0x2b0],0x3ec
   140001283:	mov    DWORD PTR [rbp+0x2b4],0x7d4
   14000128d:	call   0x140001c4c
   140001292:	lea    rax,[rbp+0x120]
   140001299:	mov    QWORD PTR [rbp-0x18],r13
   14000129d:	mov    QWORD PTR [rbp-0x10],rax
   1400012a1:	xor    r9d,r9d
   1400012a4:	lea    rax,[rip+0x9395]        # 0x14000a640
   1400012ab:	mov    QWORD PTR [rbp-0x8],rdi
   1400012af:	mov    QWORD PTR [rbp-0x20],rax
   1400012b3:	mov    r8d,r14d
   1400012b6:	lea    rax,[rbp+0x120]
   1400012bd:	mov    QWORD PTR [rsp+0x60],r13
   1400012c2:	mov    QWORD PTR [rsp+0x68],rax
   1400012c7:	xor    edx,edx
   1400012c9:	lea    rax,[rip+0x93e0]        # 0x14000a6b0
   1400012d0:	mov    QWORD PTR [rsp+0x70],rdi
   1400012d5:	xor    ecx,ecx
   1400012d7:	mov    QWORD PTR [rsp+0x58],rax
   1400012dc:	mov    DWORD PTR [rsp+0x78],r13d
   1400012e1:	mov    QWORD PTR [rbp-0x80],r13
   1400012e5:	call   QWORD PTR [rip+0x8e65]        # 0x14000a150
   1400012eb:	mov    QWORD PTR [rbp-0x80],rax
   1400012ef:	test   rax,rax
   1400012f2:	jne    0x1400012fa
   1400012f4:	call   QWORD PTR [rip+0x8dfe]        # 0x14000a0f8
   1400012fa:	lea    rax,[rbp+0x120]
   140001301:	mov    QWORD PTR [rbp-0x70],r13
   140001305:	mov    QWORD PTR [rbp-0x68],rax
   140001309:	xor    r9d,r9d
   14000130c:	lea    rax,[rip+0x940d]        # 0x14000a720
   140001313:	mov    QWORD PTR [rbp-0x60],rdi
   140001317:	mov    r8d,r14d
   14000131a:	mov    QWORD PTR [rbp-0x78],rax
   14000131e:	xor    edx,edx
   140001320:	mov    DWORD PTR [rbp-0x58],r14d
   140001324:	xor    ecx,ecx
   140001326:	mov    QWORD PTR [rbp-0x50],r13
   14000132a:	call   QWORD PTR [rip+0x8e20]        # 0x14000a150
   140001330:	mov    QWORD PTR [rbp-0x50],rax
   140001334:	test   rax,rax
   140001337:	jne    0x14000133f
   140001339:	call   QWORD PTR [rip+0x8db9]        # 0x14000a0f8
   14000133f:	mov    ecx,0x67727473
   140001344:	mov    QWORD PTR [rbp-0x38],r13
   140001348:	lea    rax,[rbp+0x120]
   14000134f:	mov    DWORD PTR [rbp+0xf0],ecx
   140001355:	mov    QWORD PTR [rbp-0x30],rax
   140001359:	lea    r15,[rip+0x9560]        # 0x14000a8c0
   140001360:	lea    rax,[rip+0x9429]        # 0x14000a790
   140001367:	mov    DWORD PTR [rbp+0x108],ecx
   14000136d:	mov    QWORD PTR [rbp-0x40],rax
   140001371:	xor    r9d,r9d
   140001374:	lea    rax,[rbp+0x120]
   14000137b:	mov    QWORD PTR [rbp-0x28],rdi
   14000137f:	mov    QWORD PTR [rbp+0xe0],rax
   140001386:	mov    r8d,r14d
   140001389:	lea    rax,[rip+0xc260]        # 0x14000d5f0
   140001390:	mov    QWORD PTR [rbp+0xd8],r13
   140001397:	xor    edx,edx
   140001399:	mov    QWORD PTR [rbp+0xf8],rax
   1400013a0:	xor    ecx,ecx
   1400013a2:	mov    QWORD PTR [rbp+0x110],rax
   1400013a9:	mov    QWORD PTR [rbp+0xe8],rdi
   1400013b0:	mov    QWORD PTR [rbp+0xd0],r15
   1400013b7:	mov    QWORD PTR [rbp+0x100],r13
   1400013be:	call   QWORD PTR [rip+0x8d8c]        # 0x14000a150
   1400013c4:	mov    QWORD PTR [rbp+0x100],rax
   1400013cb:	test   rax,rax
   1400013ce:	jne    0x1400013d6
   1400013d0:	call   QWORD PTR [rip+0x8d22]        # 0x14000a0f8
   1400013d6:	xor    edx,edx
   1400013d8:	mov    QWORD PTR [rbp+0x188],r13
   1400013df:	lea    rax,[rbp+0x120]
   1400013e6:	mov    QWORD PTR [rbp+0x198],rdi
   1400013ed:	mov    QWORD PTR [rbp+0x190],rax
   1400013f4:	lea    rcx,[rbp+0x1b0]
   1400013fb:	lea    rax,[rip+0x93fe]        # 0x14000a800
   140001402:	mov    QWORD PTR [rbp+0x218],r13
   140001409:	xorps  xmm0,xmm0
   14000140c:	mov    QWORD PTR [rbp+0x180],rax
   140001413:	xorps  xmm1,xmm1
   140001416:	movdqa XMMWORD PTR [rbp+0x1a0],xmm0
   14000141e:	lea    r8d,[rdx+0x40]
   140001422:	movdqa XMMWORD PTR [rbp+0x220],xmm1
   14000142a:	mov    QWORD PTR [rbp+0x230],r13
   140001431:	mov    ebx,r13d
   140001434:	mov    DWORD PTR [rbp+0x238],r13d
   14000143b:	mov    QWORD PTR [rbp+0x25c],r13
   140001442:	call   0x14000906a
   140001447:	mov    r8,rsi
   14000144a:	lea    rcx,[rbp+0x1f0]
   140001451:	xor    edx,edx
   140001453:	call   0x14000906a
   140001458:	lea    rcx,[rbp+0x23c]
   14000145f:	call   QWORD PTR [rip+0x8ccb]        # 0x14000a130
   140001465:	lea    rcx,[rbp+0x24c]
   14000146c:	call   QWORD PTR [rip+0x8cbe]        # 0x14000a130
   140001472:	xor    r9d,r9d
   140001475:	mov    r8d,r14d
   140001478:	mov    edx,r14d
   14000147b:	xor    ecx,ecx
   14000147d:	call   QWORD PTR [rip+0x8ccd]        # 0x14000a150
   140001483:	mov    QWORD PTR [rbp+0x220],rax
   14000148a:	test   rax,rax
   14000148d:	jne    0x1400014a7
   14000148f:	call   QWORD PTR [rip+0x8c63]        # 0x14000a0f8
   140001495:	movzx  ebx,ax
   140001498:	or     ebx,0x80070000
   14000149e:	test   eax,eax
   1400014a0:	cmovle ebx,eax
   1400014a3:	test   ebx,ebx
   1400014a5:	js     0x1400014f9
   1400014a7:	xor    r9d,r9d
   1400014aa:	mov    r8d,r14d
   1400014ad:	mov    edx,r14d
   1400014b0:	xor    ecx,ecx
   1400014b2:	call   QWORD PTR [rip+0x8c98]        # 0x14000a150
   1400014b8:	mov    QWORD PTR [rbp+0x228],rax
   1400014bf:	test   rax,rax
   1400014c2:	jne    0x1400014d8
   1400014c4:	call   QWORD PTR [rip+0x8c2e]        # 0x14000a0f8
   1400014ca:	movzx  ebx,ax
   1400014cd:	or     ebx,0x80070000
   1400014d3:	test   eax,eax
   1400014d5:	cmovle ebx,eax
   1400014d8:	test   ebx,ebx
   1400014da:	js     0x1400014f9
   1400014dc:	mov    edx,r12d
   1400014df:	xor    ecx,ecx
   1400014e1:	call   QWORD PTR [rip+0x8f29]        # 0x14000a410
   1400014e7:	mov    ecx,DWORD PTR [rbp+0x25c]
   1400014ed:	test   eax,eax
   1400014ef:	cmovns ecx,r14d
   1400014f3:	mov    DWORD PTR [rbp+0x25c],ecx
   1400014f9:	lea    rdx,[rbp+0x120]
   140001500:	mov    rcx,rdi
   140001503:	call   0x14000184c
   140001508:	mov    esi,eax
   14000150a:	mov    ebx,0x6
   14000150f:	test   eax,eax
   140001511:	js     0x1400015fb
   140001517:	lea    rax,[rbp-0x20]
   14000151b:	mov    r14d,r13d
   14000151e:	mov    QWORD PTR [rbp+0x2c0],rax
   140001525:	lea    r15,[rbp+0x2f0]
   14000152c:	lea    rax,[rsp+0x58]
   140001531:	mov    QWORD PTR [rbp+0x2c8],rax
   140001538:	lea    r12,[rbp+0x270]
   14000153f:	lea    rax,[rbp-0x78]
   140001543:	mov    QWORD PTR [rbp+0x2d0],rax
   14000154a:	lea    rax,[rbp-0x40]
   14000154e:	mov    QWORD PTR [rbp+0x2d8],rax
   140001555:	lea    rax,[rbp+0xd0]
   14000155c:	mov    QWORD PTR [rbp+0x2e0],rax
   140001563:	lea    rax,[rbp+0x180]
   14000156a:	mov    QWORD PTR [rbp+0x2e8],rax
   140001571:	mov    ecx,DWORD PTR [r12]
   140001575:	mov    DWORD PTR [rbp+0x60],0x68
   14000157c:	mov    DWORD PTR [rbp+0x64],0x1000
   140001583:	mov    QWORD PTR [rbp+0x68],rdi
   140001587:	lea    rdx,[rcx+rcx*2]
   14000158b:	movzx  eax,WORD PTR [rbp+rdx*4+0x278]
   140001593:	mov    QWORD PTR [rbp+0xa8],rax
   14000159a:	mov    rax,QWORD PTR [rbp+rcx*8+0x2c0]
   1400015a2:	lea    rcx,[rbp+0x60]
   1400015a6:	mov    QWORD PTR [rbp+0x90],rax
   1400015ad:	lea    rax,[rip+0x91c]        # 0x140001ed0
   1400015b4:	mov    QWORD PTR [rbp+0x88],rax
   1400015bb:	movzx  eax,WORD PTR [rbp+rdx*4+0x274]
   1400015c3:	mov    QWORD PTR [rbp+0x70],rax
   1400015c7:	call   QWORD PTR [rip+0x8a73]        # 0x14000a040
   1400015cd:	mov    QWORD PTR [r15],rax
   1400015d0:	test   rax,rax
   1400015d3:	je     0x1400015e7
   1400015d5:	inc    r14d
   1400015d8:	add    r12,0xc
   1400015dc:	add    r15,0x8
   1400015e0:	cmp    r14d,ebx
   1400015e3:	jb     0x140001571
   1400015e5:	jmp    0x1400015ec
   1400015e7:	mov    esi,0x80004005
   1400015ec:	mov    r14d,0x1
   1400015f2:	lea    r15,[rip+0x92c7]        # 0x14000a8c0
   1400015f9:	jmp    0x14000160b
   1400015fb:	mov    r8d,0x4e2b
   140001601:	mov    rdx,rdi
   140001604:	xor    ecx,ecx
   140001606:	call   0x140006130
   14000160b:	test   esi,esi
   14000160d:	js     0x14000165f
   14000160f:	lea    rax,[rbp+0x2f0]
   140001616:	mov    DWORD PTR [rbp+0x0],0x60
   14000161d:	lea    rcx,[rbp+0x0]
   140001621:	mov    QWORD PTR [rbp+0x38],rax
   140001625:	mov    QWORD PTR [rbp+0x10],rdi
   140001629:	mov    QWORD PTR [rbp+0x8],r13
   14000162d:	mov    DWORD PTR [rbp+0x4],0x1000005
   140001634:	mov    DWORD PTR [rbp+0x30],r13d
   140001638:	mov    DWORD PTR [rbp+0x28],ebx
   14000163b:	mov    QWORD PTR [rbp+0x20],0x65
   140001643:	mov    QWORD PTR [rbp+0x18],0x66
   14000164b:	call   QWORD PTR [rip+0x89e7]        # 0x14000a038
   140001651:	cmp    rax,0xffffffffffffffff
   140001655:	jne    0x14000167d
   140001657:	call   QWORD PTR [rip+0x8a9b]        # 0x14000a0f8
   14000165d:	jmp    0x14000167d
   14000165f:	lea    rdi,[rbp+0x2f0]
   140001666:	mov    rcx,QWORD PTR [rdi]
   140001669:	test   rcx,rcx
   14000166c:	je     0x140001674
   14000166e:	call   QWORD PTR [rip+0x89bc]        # 0x14000a030
   140001674:	add    rdi,0x8
   140001678:	sub    rbx,r14
   14000167b:	jne    0x140001666
   14000167d:	lea    rcx,[rbp+0x180]
   140001684:	call   0x140004c1c
   140001689:	mov    rcx,QWORD PTR [rbp+0x100]
   140001690:	mov    ebx,0x2710
   140001695:	mov    QWORD PTR [rbp+0xd0],r15
   14000169c:	test   rcx,rcx
   14000169f:	je     0x1400016b6
   1400016a1:	mov    edx,ebx
   1400016a3:	call   QWORD PTR [rip+0x8a6f]        # 0x14000a118
   1400016a9:	mov    rcx,QWORD PTR [rbp+0x100]
   1400016b0:	call   QWORD PTR [rip+0x8aaa]        # 0x14000a160
   1400016b6:	lea    rcx,[rbp+0x108]
   1400016bd:	call   0x140007628
   1400016c2:	lea    rcx,[rbp+0xf0]
   1400016c9:	call   0x140007628
   1400016ce:	mov    rcx,QWORD PTR [rbp-0x50]
   1400016d2:	lea    rax,[rip+0x9047]        # 0x14000a720
   1400016d9:	mov    edx,ebx
   1400016db:	mov    QWORD PTR [rbp-0x78],rax
   1400016df:	call   QWORD PTR [rip+0x8a33]        # 0x14000a118
   1400016e5:	mov    rcx,QWORD PTR [rbp-0x50]
   1400016e9:	call   QWORD PTR [rip+0x8a71]        # 0x14000a160
   1400016ef:	mov    rcx,QWORD PTR [rbp-0x80]
   1400016f3:	lea    rax,[rip+0x8fb6]        # 0x14000a6b0
   1400016fa:	mov    edx,ebx
   1400016fc:	mov    QWORD PTR [rsp+0x58],rax
   140001701:	call   QWORD PTR [rip+0x8a11]        # 0x14000a118
   140001707:	mov    rcx,QWORD PTR [rbp-0x80]
   14000170b:	call   QWORD PTR [rip+0x8a4f]        # 0x14000a160
   140001711:	mov    QWORD PTR [rsp+0x40],r13
   140001716:	lea    rax,[rsp+0x50]
   14000171b:	mov    QWORD PTR [rsp+0x38],rax
   140001720:	lea    rdx,[rip+0x92d1]        # 0x14000a9f8
   140001727:	mov    QWORD PTR [rsp+0x30],r13
   14000172c:	xor    r9d,r9d
   14000172f:	mov    DWORD PTR [rsp+0x28],0x2001f
   140001737:	xor    r8d,r8d
   14000173a:	mov    rcx,0xffffffff80000001
   140001741:	mov    DWORD PTR [rsp+0x20],r13d
   140001746:	mov    QWORD PTR [rsp+0x50],r13
   14000174b:	call   QWORD PTR [rip+0x88af]        # 0x14000a000
   140001751:	movzx  ecx,ax
   140001754:	or     ecx,0x80070000
   14000175a:	test   eax,eax
   14000175c:	cmovle ecx,eax
   14000175f:	test   ecx,ecx
   140001761:	js     0x1400017db
   140001763:	mov    r8d,DWORD PTR [rbp+0x120]
   14000176a:	lea    rdx,[rip+0x92c7]        # 0x14000aa38
   140001771:	mov    rcx,QWORD PTR [rsp+0x50]
   140001776:	call   0x140001e84
   14000177b:	mov    r8d,DWORD PTR [rbp+0x124]
   140001782:	lea    rdx,[rip+0x92bf]        # 0x14000aa48
   140001789:	mov    rcx,QWORD PTR [rsp+0x50]
   14000178e:	call   0x140001e84
   140001793:	mov    r8d,DWORD PTR [rbp+0x160]
   14000179a:	lea    rdx,[rip+0x92b7]        # 0x14000aa58
   1400017a1:	mov    rcx,QWORD PTR [rsp+0x50]
   1400017a6:	call   0x140001e84
   1400017ab:	mov    r8d,DWORD PTR [rbp+0x164]
   1400017b2:	lea    rdx,[rip+0x92b7]        # 0x14000aa70
   1400017b9:	mov    rcx,QWORD PTR [rsp+0x50]
   1400017be:	call   0x140001e84
   1400017c3:	mov    r8d,DWORD PTR [rbp+0x168]
   1400017ca:	lea    rdx,[rip+0x92af]        # 0x14000aa80
   1400017d1:	mov    rcx,QWORD PTR [rsp+0x50]
   1400017d6:	call   0x140001e84
   1400017db:	mov    rcx,QWORD PTR [rsp+0x50]
   1400017e0:	test   rcx,rcx
   1400017e3:	je     0x1400017eb
   1400017e5:	call   QWORD PTR [rip+0x8825]        # 0x14000a010
   1400017eb:	lea    rcx,[rbp+0x150]
   1400017f2:	call   0x140007628
   1400017f7:	lea    rcx,[rbp+0x140]
   1400017fe:	call   0x140007628
   140001803:	mov    rcx,QWORD PTR [rbp+0x130]
   14000180a:	test   rcx,rcx
   14000180d:	je     0x140001814
   14000180f:	call   0x140008558
   140001814:	mov    rcx,QWORD PTR [rbp+0x320]
   14000181b:	xor    rcx,rsp
   14000181e:	call   0x140008990
   140001823:	lea    r11,[rsp+0x430]
   14000182b:	mov    rbx,QWORD PTR [r11+0x38]
   14000182f:	mov    rsi,QWORD PTR [r11+0x40]
   140001833:	mov    rdi,QWORD PTR [r11+0x48]
   140001837:	mov    rsp,r11
   14000183a:	pop    r15
   14000183c:	pop    r14
   14000183e:	pop    r13
   140001840:	pop    r12
   140001842:	pop    rbp
   140001843:	ret    
   140001844:	int3   
   140001845:	int3   
   140001846:	int3   
   140001847:	int3   
   140001848:	int3   
   140001849:	int3   
   14000184a:	int3   
   14000184b:	int3   
   14000184c:	mov    QWORD PTR [rsp+0x18],rbx
   140001851:	push   rbp
   140001852:	push   rsi
   140001853:	push   rdi
   140001854:	push   r12
   140001856:	push   r13
   140001858:	push   r14
   14000185a:	push   r15
   14000185c:	lea    rbp,[rsp-0x380]
   140001864:	sub    rsp,0x480
   14000186b:	mov    rax,QWORD PTR [rip+0xb796]        # 0x14000d008
   140001872:	xor    rax,rsp
   140001875:	mov    QWORD PTR [rbp+0x370],rax
   14000187c:	mov    rdi,rdx
   14000187f:	mov    r13,rcx
   140001882:	xor    r14d,r14d
   140001885:	lea    rcx,[rsp+0x52]
   14000188a:	mov    esi,0x206
   14000188f:	mov    WORD PTR [rsp+0x50],r14w
   140001895:	mov    r8d,esi
   140001898:	xor    edx,edx
   14000189a:	mov    ebx,r14d
   14000189d:	call   0x14000906a
   1400018a2:	mov    r8d,esi
   1400018a5:	mov    WORD PTR [rbp+0x160],r14w
   1400018ad:	xor    edx,edx
   1400018af:	lea    rcx,[rbp+0x162]
   1400018b6:	call   0x14000906a
   1400018bb:	mov    ecx,0x67727473
   1400018c0:	mov    DWORD PTR [rsp+0x20],r14d
   1400018c5:	lea    rax,[rip+0xbd24]        # 0x14000d5f0
   1400018cc:	mov    DWORD PTR [rsp+0x28],ecx
   1400018d0:	mov    QWORD PTR [rsp+0x30],rax
   1400018d5:	mov    DWORD PTR [rsp+0x38],ecx
   1400018d9:	mov    QWORD PTR [rsp+0x40],rax
   1400018de:	call   QWORD PTR [rip+0x880c]        # 0x14000a0f0
   1400018e4:	mov    rcx,rax
   1400018e7:	lea    rdx,[rsp+0x20]
   1400018ec:	call   QWORD PTR [rip+0x88fe]        # 0x14000a1f0
   1400018f2:	mov    r12,rax
   1400018f5:	test   rax,rax
   1400018f8:	jne    0x140001916
   1400018fa:	call   QWORD PTR [rip+0x87f8]        # 0x14000a0f8
   140001900:	movzx  ebx,ax
   140001903:	or     ebx,0x80070000
   140001909:	test   eax,eax
   14000190b:	cmovle ebx,eax
   14000190e:	test   ebx,ebx
   140001910:	js     0x140001ab6
   140001916:	mov    eax,DWORD PTR [rsp+0x20]
   14000191a:	mov    r15d,r14d
   14000191d:	test   eax,eax
   14000191f:	cmovs  eax,r14d
   140001923:	mov    DWORD PTR [rsp+0x20],eax
   140001927:	test   eax,eax
   140001929:	jle    0x140001ab6
   14000192f:	mov    r14,r12
   140001932:	mov    rsi,QWORD PTR [r14]
   140001935:	movzx  eax,WORD PTR [rsi]
   140001938:	add    eax,0xffffffd3
   14000193b:	test   eax,0xfffffffd
   140001940:	jne    0x140001a9b
   140001946:	add    rsi,0x2
   14000194a:	lea    rdx,[rip+0x8ca7]        # 0x14000a5f8
   140001951:	mov    rcx,rsi
   140001954:	mov    r8d,0x7
   14000195a:	call   QWORD PTR [rip+0x89b0]        # 0x14000a310
   140001960:	mov    rcx,rsi
   140001963:	test   eax,eax
   140001965:	jne    0x140001a20
   14000196b:	lea    rdx,[rsp+0x50]
   140001970:	call   0x140001b2c
   140001975:	mov    ebx,eax
   140001977:	test   eax,eax
   140001979:	js     0x140001a9b
   14000197f:	mov    esi,0x2
   140001984:	lea    rdx,[rip+0x8c7d]        # 0x14000a608
   14000198b:	mov    r8d,esi
   14000198e:	mov    DWORD PTR [rdi+0x4],esi
   140001991:	lea    rcx,[rsp+0x50]
   140001996:	call   QWORD PTR [rip+0x8974]        # 0x14000a310
   14000199c:	test   eax,eax
   14000199e:	jne    0x1400019b0
   1400019a0:	lea    rcx,[rdi+0x20]
   1400019a4:	lea    rdx,[rsp+0x50]
   1400019a9:	call   0x140007780
   1400019ae:	jmp    0x1400019e0
   1400019b0:	mov    r8d,0x2906
   1400019b6:	lea    rcx,[rsp+0x28]
   1400019bb:	mov    rdx,r13
   1400019be:	call   0x140007894
   1400019c3:	mov    ebx,eax
   1400019c5:	test   eax,eax
   1400019c7:	js     0x140001a9b
   1400019cd:	mov    rdx,QWORD PTR [rsp+0x30]
   1400019d2:	lea    rcx,[rdi+0x20]
   1400019d6:	lea    r8,[rsp+0x50]
   1400019db:	call   0x1400079a8
   1400019e0:	mov    ebx,eax
   1400019e2:	test   eax,eax
   1400019e4:	js     0x140001a9b
   1400019ea:	lea    rdx,[rsp+0x38]
   1400019ef:	mov    DWORD PTR [rdi+0x4c],esi
   1400019f2:	mov    rcx,r13
   1400019f5:	call   0x14000414c
   1400019fa:	mov    ebx,eax
   1400019fc:	test   eax,eax
   1400019fe:	js     0x140001a9b
   140001a04:	mov    rdx,QWORD PTR [rdi+0x28]
   140001a08:	mov    rcx,QWORD PTR [rsp+0x40]
   140001a0d:	call   QWORD PTR [rip+0x8905]        # 0x14000a318
   140001a13:	test   eax,eax
   140001a15:	jne    0x140001a9b
   140001a1b:	and    DWORD PTR [rdi+0x4],eax
   140001a1e:	jmp    0x140001a9b
   140001a20:	mov    r8d,0x4
   140001a26:	lea    rdx,[rip+0x8be3]        # 0x14000a610
   140001a2d:	call   QWORD PTR [rip+0x88dd]        # 0x14000a310
   140001a33:	test   eax,eax
   140001a35:	jne    0x140001a6b
   140001a37:	lea    rdx,[rbp+0x160]
   140001a3e:	mov    rcx,rsi
   140001a41:	call   0x140001b2c
   140001a46:	mov    ebx,eax
   140001a48:	test   eax,eax
   140001a4a:	js     0x140001a9b
   140001a4c:	lea    rcx,[rdi+0x30]
   140001a50:	lea    rdx,[rbp+0x160]
   140001a57:	call   0x140007780
   140001a5c:	mov    ebx,eax
   140001a5e:	test   eax,eax
   140001a60:	js     0x140001a9b
   140001a62:	mov    DWORD PTR [rdi+0x4c],0x1
   140001a69:	jmp    0x140001a9b
   140001a6b:	mov    rdx,rsi
   140001a6e:	lea    rcx,[rip+0x8bab]        # 0x14000a620
   140001a75:	call   0x140009076
   140001a7a:	test   eax,eax
   140001a7c:	jne    0x140001a82
   140001a7e:	and    DWORD PTR [rdi],eax
   140001a80:	jmp    0x140001a9b
   140001a82:	mov    rdx,rsi
   140001a85:	lea    rcx,[rip+0x8ba4]        # 0x14000a630
   140001a8c:	call   0x140009076
   140001a91:	test   eax,eax
   140001a93:	jne    0x140001aae
   140001a95:	mov    DWORD PTR [rdi],0x1
   140001a9b:	inc    r15d
   140001a9e:	add    r14,0x8
   140001aa2:	cmp    r15d,DWORD PTR [rsp+0x20]
   140001aa7:	jge    0x140001ab3
   140001aa9:	jmp    0x140001932
   140001aae:	mov    ebx,0x80070057
   140001ab3:	xor    r14d,r14d
   140001ab6:	cmp    DWORD PTR [rdi+0x4c],r14d
   140001aba:	je     0x140001ad6
   140001abc:	mov    rax,QWORD PTR [rdi+0x28]
   140001ac0:	cmp    WORD PTR [rax],r14w
   140001ac4:	jne    0x140001ad6
   140001ac6:	mov    rax,QWORD PTR [rdi+0x38]
   140001aca:	mov    ecx,0x80004005
   140001acf:	cmp    WORD PTR [rax],r14w
   140001ad3:	cmove  ebx,ecx
   140001ad6:	test   r12,r12
   140001ad9:	je     0x140001ae4
   140001adb:	mov    rcx,r12
   140001ade:	call   QWORD PTR [rip+0x8624]        # 0x14000a108
   140001ae4:	lea    rcx,[rsp+0x38]
   140001ae9:	call   0x140007628
   140001aee:	lea    rcx,[rsp+0x28]
   140001af3:	call   0x140007628
   140001af8:	mov    eax,ebx
   140001afa:	mov    rcx,QWORD PTR [rbp+0x370]
   140001b01:	xor    rcx,rsp
   140001b04:	call   0x140008990
   140001b09:	mov    rbx,QWORD PTR [rsp+0x4d0]
   140001b11:	add    rsp,0x480
   140001b18:	pop    r15
   140001b1a:	pop    r14
   140001b1c:	pop    r13
   140001b1e:	pop    r12
   140001b20:	pop    rdi
   140001b21:	pop    rsi
   140001b22:	pop    rbp
   140001b23:	ret    
   140001b24:	int3   
   140001b25:	int3   
   140001b26:	int3   
   140001b27:	int3   
   140001b28:	int3   
   140001b29:	int3   
   140001b2a:	int3   
   140001b2b:	int3   
   140001b2c:	mov    QWORD PTR [rsp+0x18],rbx
   140001b31:	mov    QWORD PTR [rsp+0x20],rbp
   140001b36:	push   rsi
   140001b37:	push   rdi
   140001b38:	push   r14
   140001b3a:	sub    rsp,0x30
   140001b3e:	mov    rax,QWORD PTR [rip+0xb4c3]        # 0x14000d008
   140001b45:	xor    rax,rsp
   140001b48:	mov    QWORD PTR [rsp+0x28],rax
   140001b4d:	xor    ebp,ebp
   140001b4f:	mov    DWORD PTR [rsp+0x20],0x90020
   140001b57:	mov    r14,rdx
   140001b5a:	mov    DWORD PTR [rsp+0x24],0xa000d
   140001b62:	mov    edi,ebp
   140001b64:	lea    edx,[rbp+0x3a]
   140001b67:	call   QWORD PTR [rip+0x87b3]        # 0x14000a320
   140001b6d:	mov    rbx,rax
   140001b70:	test   rax,rax
   140001b73:	je     0x140001c21
   140001b79:	add    rbx,0x2
   140001b7d:	lea    rsi,[rsp+0x20]
   140001b82:	movzx  edx,WORD PTR [rsi]
   140001b85:	mov    rcx,rbx
   140001b88:	call   QWORD PTR [rip+0x8792]        # 0x14000a320
   140001b8e:	mov    rdx,rax
   140001b91:	test   rax,rax
   140001b94:	jne    0x140001bb5
   140001b96:	inc    edi
   140001b98:	add    rsi,0x2
   140001b9c:	cmp    edi,0x4
   140001b9f:	jb     0x140001b82
   140001ba1:	mov    r8,rbx
   140001ba4:	mov    edx,0x104
   140001ba9:	mov    rcx,r14
   140001bac:	call   0x140001068
   140001bb1:	mov    edi,eax
   140001bb3:	jmp    0x140001c21
   140001bb5:	sub    rdx,rbx
   140001bb8:	mov    eax,0x103
   140001bbd:	sar    rdx,1
   140001bc0:	cmp    rdx,rax
   140001bc3:	cmova  rdx,rax
   140001bc7:	cmp    rdx,0x7ffffffe
   140001bce:	jbe    0x140001bdb
   140001bd0:	mov    edi,0x80070057
   140001bd5:	mov    WORD PTR [r14],bp
   140001bd9:	jmp    0x140001c1c
   140001bdb:	mov    r9d,0x104
   140001be1:	mov    rcx,r14
   140001be4:	mov    edi,ebp
   140001be6:	sub    rbx,r14
   140001be9:	lea    rax,[rdx-0x104]
   140001bf0:	add    rax,r9
   140001bf3:	je     0x140001c0b
   140001bf5:	movzx  eax,WORD PTR [rbx+rcx*1]
   140001bf9:	test   ax,ax
   140001bfc:	je     0x140001c0b
   140001bfe:	mov    WORD PTR [rcx],ax
   140001c01:	add    rcx,0x2
   140001c05:	sub    r9,0x1
   140001c09:	jne    0x140001be9
   140001c0b:	test   r9,r9
   140001c0e:	jne    0x140001c19
   140001c10:	sub    rcx,0x2
   140001c14:	mov    edi,0x8007007a
   140001c19:	mov    WORD PTR [rcx],bp
   140001c1c:	mov    WORD PTR [r14+rdx*2],bp
   140001c21:	mov    eax,edi
   140001c23:	mov    rcx,QWORD PTR [rsp+0x28]
   140001c28:	xor    rcx,rsp
   140001c2b:	call   0x140008990
   140001c30:	mov    rbx,QWORD PTR [rsp+0x60]
   140001c35:	mov    rbp,QWORD PTR [rsp+0x68]
   140001c3a:	add    rsp,0x30
   140001c3e:	pop    r14
   140001c40:	pop    rdi
   140001c41:	pop    rsi
   140001c42:	ret    
   140001c43:	int3   
   140001c44:	int3   
   140001c45:	int3   
   140001c46:	int3   
   140001c47:	int3   
   140001c48:	int3   
   140001c49:	int3   
   140001c4a:	int3   
   140001c4b:	int3   
   140001c4c:	mov    QWORD PTR [rsp+0x18],rbx
   140001c51:	mov    QWORD PTR [rsp+0x20],rsi
   140001c56:	push   rbp
   140001c57:	push   rdi
   140001c58:	push   r14
   140001c5a:	mov    rbp,rsp
   140001c5d:	sub    rsp,0x50
   140001c61:	xor    edi,edi
   140001c63:	mov    rbx,rcx
   140001c66:	mov    DWORD PTR [rcx+0x8],edi
   140001c69:	mov    esi,0x1
   140001c6e:	mov    QWORD PTR [rcx],rsi
   140001c71:	mov    eax,0x67727473
   140001c76:	mov    QWORD PTR [rcx+0x10],rdi
   140001c7a:	mov    QWORD PTR [rcx+0x18],rdi
   140001c7e:	mov    DWORD PTR [rcx+0x20],eax
   140001c81:	lea    rcx,[rip+0xb968]        # 0x14000d5f0
   140001c88:	mov    QWORD PTR [rbx+0x28],rcx
   140001c8c:	mov    DWORD PTR [rbx+0x30],eax
   140001c8f:	mov    QWORD PTR [rbx+0x38],rcx
   140001c93:	mov    QWORD PTR [rbx+0x40],rsi
   140001c97:	mov    QWORD PTR [rbx+0x48],rdi
   140001c9b:	mov    DWORD PTR [rbx+0x50],edi
   140001c9e:	mov    rcx,QWORD PTR [rbx+0x10]
   140001ca2:	mov    QWORD PTR [rbp+0x28],rdi
   140001ca6:	mov    DWORD PTR [rbp+0x20],edi
   140001ca9:	test   rcx,rcx
   140001cac:	je     0x140001cb7
   140001cae:	call   0x140008558
   140001cb3:	mov    QWORD PTR [rbx+0x10],rdi
   140001cb7:	mov    eax,0x4
   140001cbc:	lea    r14d,[rax+0x2]
   140001cc0:	mul    r14
   140001cc3:	lea    rcx,[r14-0x7]
   140001cc7:	cmovo  rax,rcx
   140001ccb:	mov    rcx,rax
   140001cce:	call   0x140008564
   140001cd3:	mov    QWORD PTR [rbx+0x10],rax
   140001cd7:	test   rax,rax
   140001cda:	je     0x140001e1d
   140001ce0:	mov    rcx,rdi
   140001ce3:	mov    edx,r14d
   140001ce6:	mov    rax,QWORD PTR [rbx+0x10]
   140001cea:	mov    DWORD PTR [rcx+rax*1],edi
   140001ced:	lea    rcx,[rcx+0x4]
   140001cf1:	sub    rdx,rsi
   140001cf4:	jne    0x140001ce6
   140001cf6:	mov    QWORD PTR [rsp+0x40],rdi
   140001cfb:	lea    rax,[rbp+0x28]
   140001cff:	mov    QWORD PTR [rsp+0x38],rax
   140001d04:	lea    rdx,[rip+0x8ced]        # 0x14000a9f8
   140001d0b:	mov    QWORD PTR [rsp+0x30],rdi
   140001d10:	xor    r9d,r9d
   140001d13:	mov    DWORD PTR [rsp+0x28],0xf003f
   140001d1b:	xor    r8d,r8d
   140001d1e:	mov    rcx,0xffffffff80000001
   140001d25:	mov    DWORD PTR [rsp+0x20],edi
   140001d29:	mov    DWORD PTR [rbx+0x1c],r14d
   140001d2d:	call   QWORD PTR [rip+0x82cd]        # 0x14000a000
   140001d33:	movzx  edx,ax
   140001d36:	or     edx,0x80070000
   140001d3c:	test   eax,eax
   140001d3e:	cmovle edx,eax
   140001d41:	test   edx,edx
   140001d43:	js     0x140001e1d
   140001d49:	mov    rcx,QWORD PTR [rbp+0x28]
   140001d4d:	mov    eax,0x80004005
   140001d52:	test   rcx,rcx
   140001d55:	cmove  edx,eax
   140001d58:	test   edx,edx
   140001d5a:	js     0x140001e1d
   140001d60:	lea    r8,[rbp+0x20]
   140001d64:	lea    rdx,[rip+0x8ccd]        # 0x14000aa38
   140001d6b:	call   0x140001e3c
   140001d70:	test   eax,eax
   140001d72:	js     0x140001d7e
   140001d74:	mov    eax,DWORD PTR [rbp+0x20]
   140001d77:	cmp    eax,esi
   140001d79:	cmovg  eax,esi
   140001d7c:	mov    DWORD PTR [rbx],eax
   140001d7e:	mov    rcx,QWORD PTR [rbp+0x28]
   140001d82:	lea    r8,[rbp+0x20]
   140001d86:	lea    rdx,[rip+0x8cbb]        # 0x14000aa48
   140001d8d:	call   0x140001e3c
   140001d92:	mov    r14d,0x2
   140001d98:	test   eax,eax
   140001d9a:	js     0x140001da9
   140001d9c:	mov    eax,DWORD PTR [rbp+0x20]
   140001d9f:	cmp    eax,r14d
   140001da2:	cmovg  eax,r14d
   140001da6:	mov    DWORD PTR [rbx+0x4],eax
   140001da9:	mov    rcx,QWORD PTR [rbp+0x28]
   140001dad:	lea    r8,[rbp+0x20]
   140001db1:	lea    rdx,[rip+0x8ca0]        # 0x14000aa58
   140001db8:	call   0x140001e3c
   140001dbd:	test   eax,eax
   140001dbf:	js     0x140001dcc
   140001dc1:	mov    eax,DWORD PTR [rbp+0x20]
   140001dc4:	cmp    eax,esi
   140001dc6:	cmovg  eax,esi
   140001dc9:	mov    DWORD PTR [rbx+0x40],eax
   140001dcc:	mov    rcx,QWORD PTR [rbp+0x28]
   140001dd0:	lea    r8,[rbp+0x20]
   140001dd4:	lea    rdx,[rip+0x8c95]        # 0x14000aa70
   140001ddb:	call   0x140001e3c
   140001de0:	test   eax,eax
   140001de2:	js     0x140001df1
   140001de4:	mov    eax,DWORD PTR [rbp+0x20]
   140001de7:	cmp    eax,r14d
   140001dea:	cmovg  eax,r14d
   140001dee:	mov    DWORD PTR [rbx+0x44],eax
   140001df1:	mov    rcx,QWORD PTR [rbp+0x28]
   140001df5:	lea    r8,[rbp+0x20]
   140001df9:	lea    rdx,[rip+0x8c80]        # 0x14000aa80
   140001e00:	call   0x140001e3c
   140001e05:	test   eax,eax
   140001e07:	js     0x140001e13
   140001e09:	cmp    DWORD PTR [rbp+0x20],edi
   140001e0c:	setne  dil
   140001e10:	mov    DWORD PTR [rbx+0x48],edi
   140001e13:	mov    rcx,QWORD PTR [rbp+0x28]
   140001e17:	call   QWORD PTR [rip+0x81f3]        # 0x14000a010
   140001e1d:	lea    r11,[rsp+0x50]
   140001e22:	mov    rax,rbx
   140001e25:	mov    rbx,QWORD PTR [r11+0x30]
   140001e29:	mov    rsi,QWORD PTR [r11+0x38]
   140001e2d:	mov    rsp,r11
   140001e30:	pop    r14
   140001e32:	pop    rdi
   140001e33:	pop    rbp
   140001e34:	ret    
   140001e35:	int3   
   140001e36:	int3   
   140001e37:	int3   
   140001e38:	int3   
   140001e39:	int3   
   140001e3a:	int3   
   140001e3b:	int3   
   140001e3c:	mov    r11,rsp
   140001e3f:	sub    rsp,0x48
   140001e43:	and    DWORD PTR [rsp+0x30],0x0
   140001e48:	lea    rax,[r11+0x20]
   140001e4c:	mov    QWORD PTR [r11-0x20],rax
   140001e50:	lea    r9,[r11-0x18]
   140001e54:	mov    QWORD PTR [r11-0x28],r8
   140001e58:	xor    r8d,r8d
   140001e5b:	mov    DWORD PTR [rsp+0x68],0x4
   140001e63:	call   QWORD PTR [rip+0x819f]        # 0x14000a008
   140001e69:	mov    ecx,eax
   140001e6b:	movzx  eax,ax
   140001e6e:	or     eax,0x80070000
   140001e73:	test   ecx,ecx
   140001e75:	cmovle eax,ecx
   140001e78:	add    rsp,0x48
   140001e7c:	ret    
   140001e7d:	int3   
   140001e7e:	int3   
   140001e7f:	int3   
   140001e80:	int3   
   140001e81:	int3   
   140001e82:	int3   
   140001e83:	int3   
   140001e84:	mov    r11,rsp
   140001e87:	mov    DWORD PTR [r11+0x18],r8d
   140001e8b:	sub    rsp,0x38
   140001e8f:	mov    r9d,0x4
   140001e95:	lea    rax,[r11+0x18]
   140001e99:	mov    DWORD PTR [r11-0x10],r9d
   140001e9d:	xor    r8d,r8d
   140001ea0:	mov    QWORD PTR [r11-0x18],rax
   140001ea4:	call   QWORD PTR [rip+0x816e]        # 0x14000a018
   140001eaa:	mov    ecx,eax
   140001eac:	movzx  eax,ax
   140001eaf:	or     eax,0x80070000
   140001eb4:	test   ecx,ecx
   140001eb6:	cmovle eax,ecx
   140001eb9:	add    rsp,0x38
   140001ebd:	ret    
   140001ebe:	int3   
   140001ebf:	int3   
   140001ec0:	int3   
   140001ec1:	int3   
   140001ec2:	int3   
   140001ec3:	int3   
   140001ec4:	int3   
   140001ec5:	int3   
   140001ec6:	int3   
   140001ec7:	int3   
   140001ec8:	int3   
   140001ec9:	int3   
   140001eca:	int3   
   140001ecb:	int3   
   140001ecc:	int3   
   140001ecd:	int3   
   140001ece:	int3   
   140001ecf:	int3   
   140001ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ed5:	mov    QWORD PTR [rsp+0x10],rbp
   140001eda:	mov    QWORD PTR [rsp+0x18],rsi
   140001edf:	push   rdi
   140001ee0:	push   r14
   140001ee2:	push   r15
   140001ee4:	sub    rsp,0x20
   140001ee8:	xor    ebx,ebx
   140001eea:	mov    rbp,r9
   140001eed:	mov    r15,r8
   140001ef0:	mov    r14d,edx
   140001ef3:	mov    rsi,rcx
   140001ef6:	cmp    edx,0x110
   140001efc:	jne    0x140001f38
   140001efe:	mov    rdi,QWORD PTR [r9+0x30]
   140001f02:	test   rdi,rdi
   140001f05:	je     0x140001f80
   140001f07:	mov    r8,rdi
   140001f0a:	mov    QWORD PTR [rdi+0x8],rcx
   140001f0e:	lea    edx,[rbx+0x10]
   140001f11:	call   QWORD PTR [rip+0x8329]        # 0x14000a240
   140001f17:	mov    rax,QWORD PTR [rdi]
   140001f1a:	mov    rbx,QWORD PTR [rax]
   140001f1d:	mov    rcx,rbx
   140001f20:	call   QWORD PTR [rip+0x84fa]        # 0x14000a420
   140001f26:	mov    r9,rbp
   140001f29:	mov    r8,r15
   140001f2c:	mov    edx,r14d
   140001f2f:	mov    rcx,rdi
   140001f32:	call   rbx
   140001f34:	mov    ebx,eax
   140001f36:	jmp    0x140001f80
   140001f38:	mov    edx,0x10
   140001f3d:	call   QWORD PTR [rip+0x82ed]        # 0x14000a230
   140001f43:	mov    rdi,rax
   140001f46:	test   rax,rax
   140001f49:	je     0x140001f80
   140001f4b:	mov    rcx,QWORD PTR [rax]
   140001f4e:	mov    rbx,QWORD PTR [rcx]
   140001f51:	mov    rcx,rbx
   140001f54:	call   QWORD PTR [rip+0x84c6]        # 0x14000a420
   140001f5a:	mov    r9,rbp
   140001f5d:	mov    r8,r15
   140001f60:	mov    edx,r14d
   140001f63:	mov    rcx,rdi
   140001f66:	call   rbx
   140001f68:	mov    ebx,eax
   140001f6a:	cmp    r14d,0x2
   140001f6e:	jne    0x140001f80
   140001f70:	xor    r8d,r8d
   140001f73:	lea    edx,[r14+0xe]
   140001f77:	mov    rcx,rsi
   140001f7a:	call   QWORD PTR [rip+0x82c0]        # 0x14000a240
   140001f80:	mov    rbp,QWORD PTR [rsp+0x48]
   140001f85:	mov    rsi,QWORD PTR [rsp+0x50]
   140001f8a:	movsxd rax,ebx
   140001f8d:	mov    rbx,QWORD PTR [rsp+0x40]
   140001f92:	add    rsp,0x20
   140001f96:	pop    r15
   140001f98:	pop    r14
   140001f9a:	pop    rdi
   140001f9b:	ret    
   140001f9c:	int3   
   140001f9d:	int3   
   140001f9e:	int3   
   140001f9f:	int3   
   140001fa0:	int3   
   140001fa1:	int3   
   140001fa2:	int3   
   140001fa3:	int3   
   140001fa4:	int3   
   140001fa5:	int3   
   140001fa6:	int3   
   140001fa7:	int3   
   140001fa8:	int3   
   140001fa9:	int3   
   140001faa:	int3   
   140001fab:	int3   
   140001fac:	int3   
   140001fad:	int3   
   140001fae:	int3   
   140001faf:	int3   
   140001fb0:	mov    rax,rsp
   140001fb3:	mov    QWORD PTR [rax+0x8],rbx
   140001fb7:	mov    QWORD PTR [rax+0x10],rbp
   140001fbb:	mov    QWORD PTR [rax+0x18],rsi
   140001fbf:	mov    QWORD PTR [rax+0x20],rdi
   140001fc3:	push   r14
   140001fc5:	sub    rsp,0x20
   140001fc9:	xor    ebx,ebx
   140001fcb:	mov    rbp,r9
   140001fce:	mov    r14,r8
   140001fd1:	mov    rsi,rcx
   140001fd4:	sub    edx,0x18
   140001fd7:	je     0x14000214a
   140001fdd:	sub    edx,0x36
   140001fe0:	je     0x14000203e
   140001fe2:	sub    edx,0xc2
   140001fe8:	je     0x14000201c
   140001fea:	cmp    edx,0x1
   140001fed:	jne    0x14000216b
   140001ff3:	mov    rax,QWORD PTR [rcx]
   140001ff6:	mov    rbx,r8
   140001ff9:	shr    rbx,0x10
   140001ffd:	mov    rdi,QWORD PTR [rax+0x60]
   140002001:	mov    rcx,rdi
   140002004:	call   QWORD PTR [rip+0x8416]        # 0x14000a420
   14000200a:	mov    r9,rbp
   14000200d:	movzx  r8d,bx
   140002011:	movzx  edx,r14w
   140002015:	mov    rcx,rsi
   140002018:	call   rdi
   14000201a:	jmp    0x140002037
   14000201c:	mov    rax,QWORD PTR [rcx]
   14000201f:	mov    rbx,QWORD PTR [rax+0x8]
   140002023:	mov    rcx,rbx
   140002026:	call   QWORD PTR [rip+0x83f4]        # 0x14000a420
   14000202c:	mov    r8,rbp
   14000202f:	mov    rdx,r14
   140002032:	mov    rcx,rsi
   140002035:	call   rbx
   140002037:	mov    ebx,eax
   140002039:	jmp    0x14000216b
   14000203e:	mov    eax,DWORD PTR [r9+0x10]
   140002042:	cmp    eax,0xffffff2c
   140002047:	je     0x1400020d3
   14000204d:	cmp    eax,0xffffff2f
   140002052:	je     0x1400020ca
   140002054:	cmp    eax,0xffffff30
   140002059:	je     0x1400020c1
   14000205b:	cmp    eax,0xffffff31
   140002060:	je     0x1400020b8
   140002062:	cmp    eax,0xffffff32
   140002067:	je     0x1400020af
   140002069:	cmp    eax,0xffffff33
   14000206e:	je     0x1400020a6
   140002070:	cmp    eax,0xffffff35
   140002075:	je     0x14000209d
   140002077:	cmp    eax,0xffffff37
   14000207c:	je     0x140002094
   14000207e:	cmp    eax,0xffffff38
   140002083:	mov    rax,QWORD PTR [rcx]
   140002086:	je     0x14000208e
   140002088:	mov    rbx,QWORD PTR [rax+0x58]
   14000208c:	jmp    0x1400020da
   14000208e:	mov    rbx,QWORD PTR [rax+0x30]
   140002092:	jmp    0x1400020da
   140002094:	mov    rax,QWORD PTR [rcx]
   140002097:	mov    rbx,QWORD PTR [rax+0x10]
   14000209b:	jmp    0x1400020da
   14000209d:	mov    rax,QWORD PTR [rcx]
   1400020a0:	mov    rbx,QWORD PTR [rax+0x28]
   1400020a4:	jmp    0x1400020da
   1400020a6:	mov    rax,QWORD PTR [rcx]
   1400020a9:	mov    rbx,QWORD PTR [rax+0x20]
   1400020ad:	jmp    0x1400020da
   1400020af:	mov    rax,QWORD PTR [rcx]
   1400020b2:	mov    rbx,QWORD PTR [rax+0x40]
   1400020b6:	jmp    0x1400020da
   1400020b8:	mov    rax,QWORD PTR [rcx]
   1400020bb:	mov    rbx,QWORD PTR [rax+0x48]
   1400020bf:	jmp    0x1400020da
   1400020c1:	mov    rax,QWORD PTR [rcx]
   1400020c4:	mov    rbx,QWORD PTR [rax+0x50]
   1400020c8:	jmp    0x1400020da
   1400020ca:	mov    rax,QWORD PTR [rcx]
   1400020cd:	mov    rbx,QWORD PTR [rax+0x18]
   1400020d1:	jmp    0x1400020da
   1400020d3:	mov    rax,QWORD PTR [rcx]
   1400020d6:	mov    rbx,QWORD PTR [rax+0x38]
   1400020da:	mov    rcx,rbx
   1400020dd:	call   QWORD PTR [rip+0x833d]        # 0x14000a420
   1400020e3:	mov    r8,rbp
   1400020e6:	mov    rdx,r14
   1400020e9:	mov    rcx,rsi
   1400020ec:	call   rbx
   1400020ee:	mov    edx,DWORD PTR [rbp+0x10]
   1400020f1:	mov    ebx,eax
   1400020f3:	lea    eax,[rdx+0xcf]
   1400020f9:	cmp    eax,0x1
   1400020fc:	jbe    0x140002109
   1400020fe:	lea    eax,[rdx+0xc9]
   140002104:	cmp    eax,0x1
   140002107:	ja     0x140002145
   140002109:	mov    rax,QWORD PTR [rsi+0x10]
   14000210d:	cmp    DWORD PTR [rax+0x8],0x0
   140002111:	je     0x140002139
   140002113:	mov    rax,QWORD PTR [rsi]
   140002116:	mov    rbx,QWORD PTR [rax+0x68]
   14000211a:	mov    rcx,rbx
   14000211d:	call   QWORD PTR [rip+0x82fd]        # 0x14000a420
   140002123:	mov    rcx,rsi
   140002126:	call   rbx
   140002128:	mov    rcx,QWORD PTR [rsi+0x8]
   14000212c:	mov    r8d,eax
   14000212f:	xor    edx,edx
   140002131:	call   QWORD PTR [rip+0x8101]        # 0x14000a238
   140002137:	jmp    0x140002145
   140002139:	mov    rcx,rsi
   14000213c:	call   0x1400021ac
   140002141:	test   eax,eax
   140002143:	jne    0x14000216b
   140002145:	or     ebx,0xffffffff
   140002148:	jmp    0x14000216b
   14000214a:	mov    rcx,QWORD PTR [rcx+0x8]
   14000214e:	call   QWORD PTR [rip+0x8104]        # 0x14000a258
   140002154:	mov    r9d,0x65
   14000215a:	xor    r8d,r8d
   14000215d:	mov    rcx,rax
   140002160:	mov    edx,0x478
   140002165:	call   QWORD PTR [rip+0x80dd]        # 0x14000a248
   14000216b:	mov    rbp,QWORD PTR [rsp+0x38]
   140002170:	mov    eax,ebx
   140002172:	mov    rbx,QWORD PTR [rsp+0x30]
   140002177:	mov    rsi,QWORD PTR [rsp+0x40]
   14000217c:	mov    rdi,QWORD PTR [rsp+0x48]
   140002181:	add    rsp,0x20
   140002185:	pop    r14
   140002187:	ret    
   140002188:	int3   
   140002189:	int3   
   14000218a:	int3   
   14000218b:	int3   
   14000218c:	int3   
   14000218d:	int3   
   14000218e:	int3   
   14000218f:	int3   
   140002190:	xor    eax,eax
   140002192:	ret    
   140002193:	int3   
   140002194:	int3   
   140002195:	int3   
   140002196:	int3   
   140002197:	int3   
   140002198:	int3   
   140002199:	int3   
   14000219a:	int3   
   14000219b:	int3   
   14000219c:	int3   
   14000219d:	int3   
   14000219e:	int3   
   14000219f:	int3   
   1400021a0:	mov    eax,0x1
   1400021a5:	ret    
   1400021a6:	int3   
   1400021a7:	int3   
   1400021a8:	int3   
   1400021a9:	int3   
   1400021aa:	int3   
   1400021ab:	int3   
   1400021ac:	mov    rax,rsp
   1400021af:	mov    QWORD PTR [rax+0x10],rbx
   1400021b3:	mov    QWORD PTR [rax+0x18],rsi
   1400021b7:	mov    QWORD PTR [rax+0x20],rdi
   1400021bb:	push   rbp
   1400021bc:	push   r12
   1400021be:	push   r13
   1400021c0:	push   r14
   1400021c2:	push   r15
   1400021c4:	lea    rbp,[rax-0x5d8]
   1400021cb:	sub    rsp,0x6b0
   1400021d2:	mov    rax,QWORD PTR [rip+0xae2f]        # 0x14000d008
   1400021d9:	xor    rax,rsp
   1400021dc:	mov    QWORD PTR [rbp+0x5a0],rax
   1400021e3:	movdqa xmm1,XMMWORD PTR [rip+0x8f75]        # 0x14000b160
   1400021eb:	xor    eax,eax
   1400021ed:	movdqa xmm0,XMMWORD PTR [rip+0x8ffb]        # 0x14000b1f0
   1400021f5:	mov    r15d,edx
   1400021f8:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400021fe:	mov    rdi,rcx
   140002201:	movdqa xmm0,XMMWORD PTR [rip+0x8f97]        # 0x14000b1a0
   140002209:	lea    rcx,[rbp+0x0]
   14000220d:	movdqa XMMWORD PTR [rsp+0x60],xmm0
   140002213:	xor    r14d,r14d
   140002216:	movdqa xmm0,XMMWORD PTR [rip+0x8fb2]        # 0x14000b1d0
   14000221e:	xor    edx,edx
   140002220:	movdqa XMMWORD PTR [rbp-0x60],xmm0
   140002225:	movdqa xmm0,XMMWORD PTR [rip+0x8f43]        # 0x14000b170
   14000222d:	lea    esi,[r14+0x5]
   140002231:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140002237:	movdqa XMMWORD PTR [rsp+0x70],xmm1
   14000223d:	lea    ebx,[rsi+0x1b]
   140002240:	movdqa XMMWORD PTR [rbp-0x50],xmm1
   140002245:	mov    r8d,ebx
   140002248:	movdqa xmm1,XMMWORD PTR [rip+0x9030]        # 0x14000b280
   140002250:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140002255:	mov    DWORD PTR [rsp+0x40],esi
   140002259:	mov    DWORD PTR [rsp+0x44],esi
   14000225d:	mov    QWORD PTR [rsp+0x48],rax
   140002262:	mov    QWORD PTR [rsp+0x50],rax
   140002267:	mov    QWORD PTR [rsp+0x58],rax
   14000226c:	mov    DWORD PTR [rbp-0x80],esi
   14000226f:	mov    DWORD PTR [rbp-0x7c],esi
   140002272:	mov    QWORD PTR [rbp-0x78],rax
   140002276:	mov    QWORD PTR [rbp-0x70],rax
   14000227a:	mov    QWORD PTR [rbp-0x68],rax
   14000227e:	mov    DWORD PTR [rbp-0x40],esi
   140002281:	mov    DWORD PTR [rbp-0x3c],esi
   140002284:	mov    QWORD PTR [rbp-0x38],rax
   140002288:	mov    QWORD PTR [rbp-0x30],rax
   14000228c:	mov    QWORD PTR [rbp-0x28],rax
   140002290:	movdqa XMMWORD PTR [rbp-0x10],xmm1
   140002295:	call   0x14000906a
   14000229a:	movdqa xmm0,XMMWORD PTR [rip+0x8f5e]        # 0x14000b200
   1400022a2:	lea    rcx,[rbp+0x40]
   1400022a6:	movdqa xmm1,XMMWORD PTR [rip+0x8fd2]        # 0x14000b280
   1400022ae:	mov    r8d,ebx
   1400022b1:	xor    edx,edx
   1400022b3:	movdqa XMMWORD PTR [rbp+0x20],xmm0
   1400022b8:	movdqa XMMWORD PTR [rbp+0x30],xmm1
   1400022bd:	call   0x14000906a
   1400022c2:	movdqa xmm0,XMMWORD PTR [rip+0x8ed6]        # 0x14000b1a0
   1400022ca:	lea    rcx,[rbp+0x80]
   1400022d1:	movdqa xmm1,XMMWORD PTR [rip+0x8fa7]        # 0x14000b280
   1400022d9:	mov    r8d,ebx
   1400022dc:	xor    edx,edx
   1400022de:	movdqa XMMWORD PTR [rbp+0x60],xmm0
   1400022e3:	movdqa XMMWORD PTR [rbp+0x70],xmm1
   1400022e8:	call   0x14000906a
   1400022ed:	movdqa xmm0,XMMWORD PTR [rip+0x8edb]        # 0x14000b1d0
   1400022f5:	lea    rcx,[rbp+0xc0]
   1400022fc:	movdqa xmm1,XMMWORD PTR [rip+0x8f7c]        # 0x14000b280
   140002304:	mov    r8d,ebx
   140002307:	xor    edx,edx
   140002309:	movdqa XMMWORD PTR [rbp+0xa0],xmm0
   140002311:	movdqa XMMWORD PTR [rbp+0xb0],xmm1
   140002319:	call   0x14000906a
   14000231e:	movdqa xmm0,XMMWORD PTR [rip+0x8e6a]        # 0x14000b190
   140002326:	xor    eax,eax
   140002328:	movdqa xmm1,XMMWORD PTR [rip+0x8e20]        # 0x14000b150
   140002330:	movdqa XMMWORD PTR [rbp+0xe0],xmm0
   140002338:	movdqa xmm0,XMMWORD PTR [rip+0x8ed0]        # 0x14000b210
   140002340:	movdqa XMMWORD PTR [rbp+0x120],xmm0
   140002348:	movdqa XMMWORD PTR [rbp+0xf0],xmm1
   140002350:	mov    DWORD PTR [rbp+0x100],esi
   140002356:	mov    DWORD PTR [rbp+0x104],esi
   14000235c:	mov    QWORD PTR [rbp+0x108],rax
   140002363:	mov    QWORD PTR [rbp+0x110],rax
   14000236a:	mov    QWORD PTR [rbp+0x118],rax
   140002371:	movdqa XMMWORD PTR [rbp+0x130],xmm1
   140002379:	mov    DWORD PTR [rbp+0x140],esi
   14000237f:	mov    DWORD PTR [rbp+0x144],esi
   140002385:	mov    QWORD PTR [rbp+0x148],rax
   14000238c:	mov    QWORD PTR [rbp+0x150],rax
   140002393:	mov    QWORD PTR [rbp+0x158],rax
   14000239a:	movdqa xmm0,XMMWORD PTR [rip+0x8e1e]        # 0x14000b1c0
   1400023a2:	lea    rcx,[rbp+0x300]
   1400023a9:	movdqa XMMWORD PTR [rbp+0x160],xmm0
   1400023b1:	mov    r8d,ebx
   1400023b4:	movdqa xmm0,XMMWORD PTR [rip+0x8e24]        # 0x14000b1e0
   1400023bc:	xor    edx,edx
   1400023be:	movdqa XMMWORD PTR [rbp+0x1a0],xmm0
   1400023c6:	movdqa xmm0,XMMWORD PTR [rip+0x8e22]        # 0x14000b1f0
   1400023ce:	movdqa XMMWORD PTR [rbp+0x1e0],xmm0
   1400023d6:	movdqa xmm0,XMMWORD PTR [rip+0x8da2]        # 0x14000b180
   1400023de:	movdqa XMMWORD PTR [rbp+0x220],xmm0
   1400023e6:	movdqa xmm0,XMMWORD PTR [rip+0x8dc2]        # 0x14000b1b0
   1400023ee:	movdqa XMMWORD PTR [rbp+0x260],xmm0
   1400023f6:	movdqa xmm0,XMMWORD PTR [rip+0x8de2]        # 0x14000b1e0
   1400023fe:	movdqa XMMWORD PTR [rbp+0x170],xmm1
   140002406:	movdqa XMMWORD PTR [rbp+0x1b0],xmm1
   14000240e:	movdqa xmm1,XMMWORD PTR [rip+0x8d1a]        # 0x14000b130
   140002416:	movdqa XMMWORD PTR [rbp+0x2a0],xmm0
   14000241e:	movdqa xmm0,XMMWORD PTR [rip+0x8d6a]        # 0x14000b190
   140002426:	movdqa XMMWORD PTR [rbp+0x1f0],xmm1
   14000242e:	movdqa XMMWORD PTR [rbp+0x230],xmm1
   140002436:	movdqa XMMWORD PTR [rbp+0x270],xmm1
   14000243e:	movdqa XMMWORD PTR [rbp+0x2b0],xmm1
   140002446:	movdqa xmm1,XMMWORD PTR [rip+0x8e22]        # 0x14000b270
   14000244e:	movdqa XMMWORD PTR [rbp+0x2e0],xmm0
   140002456:	mov    DWORD PTR [rbp+0x180],esi
   14000245c:	mov    DWORD PTR [rbp+0x184],esi
   140002462:	mov    QWORD PTR [rbp+0x188],rax
   140002469:	mov    QWORD PTR [rbp+0x190],rax
   140002470:	mov    QWORD PTR [rbp+0x198],rax
   140002477:	mov    DWORD PTR [rbp+0x1c0],esi
   14000247d:	mov    DWORD PTR [rbp+0x1c4],esi
   140002483:	mov    QWORD PTR [rbp+0x1c8],rax
   14000248a:	mov    QWORD PTR [rbp+0x1d0],rax
   140002491:	mov    QWORD PTR [rbp+0x1d8],rax
   140002498:	mov    DWORD PTR [rbp+0x200],esi
   14000249e:	mov    DWORD PTR [rbp+0x204],esi
   1400024a4:	mov    QWORD PTR [rbp+0x208],rax
   1400024ab:	mov    QWORD PTR [rbp+0x210],rax
   1400024b2:	mov    QWORD PTR [rbp+0x218],rax
   1400024b9:	mov    DWORD PTR [rbp+0x240],esi
   1400024bf:	mov    DWORD PTR [rbp+0x244],esi
   1400024c5:	mov    QWORD PTR [rbp+0x248],rax
   1400024cc:	mov    QWORD PTR [rbp+0x250],rax
   1400024d3:	mov    QWORD PTR [rbp+0x258],rax
   1400024da:	mov    DWORD PTR [rbp+0x280],esi
   1400024e0:	mov    DWORD PTR [rbp+0x284],esi
   1400024e6:	mov    QWORD PTR [rbp+0x288],rax
   1400024ed:	mov    QWORD PTR [rbp+0x290],rax
   1400024f4:	mov    QWORD PTR [rbp+0x298],rax
   1400024fb:	mov    DWORD PTR [rbp+0x2c0],esi
   140002501:	mov    DWORD PTR [rbp+0x2c4],esi
   140002507:	mov    QWORD PTR [rbp+0x2c8],rax
   14000250e:	mov    QWORD PTR [rbp+0x2d0],rax
   140002515:	mov    QWORD PTR [rbp+0x2d8],rax
   14000251c:	movdqa XMMWORD PTR [rbp+0x2f0],xmm1
   140002524:	call   0x14000906a
   140002529:	movdqa xmm0,XMMWORD PTR [rip+0x8cdf]        # 0x14000b210
   140002531:	lea    rcx,[rbp+0x340]
   140002538:	movdqa xmm1,XMMWORD PTR [rip+0x8d30]        # 0x14000b270
   140002540:	mov    r8d,ebx
   140002543:	xor    edx,edx
   140002545:	movdqa XMMWORD PTR [rbp+0x320],xmm0
   14000254d:	movdqa XMMWORD PTR [rbp+0x330],xmm1
   140002555:	call   0x14000906a
   14000255a:	movdqa xmm0,XMMWORD PTR [rip+0x8c1e]        # 0x14000b180
   140002562:	lea    rcx,[rbp+0x380]
   140002569:	movdqa xmm1,XMMWORD PTR [rip+0x8cff]        # 0x14000b270
   140002571:	mov    r8d,ebx
   140002574:	xor    edx,edx
   140002576:	movdqa XMMWORD PTR [rbp+0x360],xmm0
   14000257e:	movdqa XMMWORD PTR [rbp+0x370],xmm1
   140002586:	call   0x14000906a
   14000258b:	movdqa xmm0,XMMWORD PTR [rip+0x8c1d]        # 0x14000b1b0
   140002593:	lea    rcx,[rbp+0x3c0]
   14000259a:	movdqa xmm1,XMMWORD PTR [rip+0x8cce]        # 0x14000b270
   1400025a2:	mov    r8d,ebx
   1400025a5:	xor    edx,edx
   1400025a7:	movdqa XMMWORD PTR [rbp+0x3a0],xmm0
   1400025af:	movdqa XMMWORD PTR [rbp+0x3b0],xmm1
   1400025b7:	call   0x14000906a
   1400025bc:	movdqa xmm0,XMMWORD PTR [rip+0x8c1c]        # 0x14000b1e0
   1400025c4:	lea    rcx,[rbp+0x400]
   1400025cb:	movdqa xmm1,XMMWORD PTR [rip+0x8c9d]        # 0x14000b270
   1400025d3:	mov    r8d,ebx
   1400025d6:	xor    edx,edx
   1400025d8:	movdqa XMMWORD PTR [rbp+0x3e0],xmm0
   1400025e0:	movdqa XMMWORD PTR [rbp+0x3f0],xmm1
   1400025e8:	call   0x14000906a
   1400025ed:	movdqa xmm0,XMMWORD PTR [rip+0x8c4b]        # 0x14000b240
   1400025f5:	lea    ebx,[rsi+0x23]
   1400025f8:	mov    r8d,ebx
   1400025fb:	movdqa XMMWORD PTR [rbp+0x420],xmm0
   140002603:	xor    edx,edx
   140002605:	mov    DWORD PTR [rbp+0x430],esi
   14000260b:	lea    rcx,[rbp+0x438]
   140002612:	mov    DWORD PTR [rbp+0x434],esi
   140002618:	call   0x14000906a
   14000261d:	movdqa xmm0,XMMWORD PTR [rip+0x8bfb]        # 0x14000b220
   140002625:	lea    rcx,[rbp+0x478]
   14000262c:	mov    r8d,ebx
   14000262f:	movdqa XMMWORD PTR [rbp+0x460],xmm0
   140002637:	xor    edx,edx
   140002639:	mov    DWORD PTR [rbp+0x470],esi
   14000263f:	mov    DWORD PTR [rbp+0x474],esi
   140002645:	call   0x14000906a
   14000264a:	movdqa xmm0,XMMWORD PTR [rip+0x8bfe]        # 0x14000b250
   140002652:	lea    rcx,[rbp+0x538]
   140002659:	movdqa xmm1,XMMWORD PTR [rip+0x8adf]        # 0x14000b140
   140002661:	xor    eax,eax
   140002663:	movdqa XMMWORD PTR [rbp+0x4a0],xmm0
   14000266b:	mov    r8d,ebx
   14000266e:	movdqa xmm0,XMMWORD PTR [rip+0x8bea]        # 0x14000b260
   140002676:	xor    edx,edx
   140002678:	movdqa XMMWORD PTR [rbp+0x4e0],xmm0
   140002680:	movdqa xmm0,XMMWORD PTR [rip+0x8ba8]        # 0x14000b230
   140002688:	movdqa XMMWORD PTR [rbp+0x4b0],xmm1
   140002690:	movdqa xmm1,XMMWORD PTR [rip+0x8ab8]        # 0x14000b150
   140002698:	movdqa XMMWORD PTR [rbp+0x520],xmm0
   1400026a0:	mov    DWORD PTR [rbp+0x4c0],esi
   1400026a6:	mov    DWORD PTR [rbp+0x4c4],esi
   1400026ac:	mov    QWORD PTR [rbp+0x4c8],rax
   1400026b3:	mov    QWORD PTR [rbp+0x4d0],rax
   1400026ba:	mov    QWORD PTR [rbp+0x4d8],rax
   1400026c1:	movdqa XMMWORD PTR [rbp+0x4f0],xmm1
   1400026c9:	mov    DWORD PTR [rbp+0x500],esi
   1400026cf:	mov    DWORD PTR [rbp+0x504],esi
   1400026d5:	mov    QWORD PTR [rbp+0x508],rax
   1400026dc:	mov    QWORD PTR [rbp+0x510],rax
   1400026e3:	mov    QWORD PTR [rbp+0x518],rax
   1400026ea:	mov    DWORD PTR [rbp+0x530],esi
   1400026f0:	mov    DWORD PTR [rbp+0x534],esi
   1400026f6:	call   0x14000906a
   1400026fb:	xor    edx,edx
   1400026fd:	mov    DWORD PTR [rbp+0x560],esi
   140002703:	lea    r8d,[r14+0x3c]
   140002707:	lea    rcx,[rbp+0x564]
   14000270e:	call   0x14000906a
   140002713:	xor    r12d,r12d
   140002716:	lea    rsi,[rsp+0x20]
   14000271b:	lea    r13d,[r14+0x1]
   14000271f:	test   r14d,r14d
   140002722:	jne    0x140002891
   140002728:	cmp    r15d,DWORD PTR [rsi]
   14000272b:	jne    0x140002819
   140002731:	mov    rax,QWORD PTR [rdi]
   140002734:	mov    rbx,QWORD PTR [rax+0x68]
   140002738:	mov    rcx,rbx
   14000273b:	call   QWORD PTR [rip+0x7cdf]        # 0x14000a420
   140002741:	mov    rcx,rdi
   140002744:	call   rbx
   140002746:	cmp    eax,DWORD PTR [rsi+0x4]
   140002749:	jne    0x140002819
   14000274f:	mov    edx,r13d
   140002752:	lea    r8,[rsi+0x14]
   140002756:	xor    r9d,r9d
   140002759:	test   edx,edx
   14000275b:	je     0x140002819
   140002761:	mov    ecx,DWORD PTR [r8-0x4]
   140002765:	cmp    ecx,0x5
   140002768:	je     0x14000279c
   14000276a:	test   ecx,ecx
   14000276c:	je     0x140002781
   14000276e:	cmp    ecx,r13d
   140002771:	jne    0x14000278f
   140002773:	mov    rax,QWORD PTR [rdi+0x10]
   140002777:	xor    edx,edx
   140002779:	mov    eax,DWORD PTR [rax+0x4c]
   14000277c:	cmp    DWORD PTR [r8],eax
   14000277f:	jmp    0x14000278c
   140002781:	mov    rcx,QWORD PTR [rdi+0x10]
   140002785:	xor    edx,edx
   140002787:	mov    eax,DWORD PTR [r8]
   14000278a:	cmp    DWORD PTR [rcx],eax
   14000278c:	sete   dl
   14000278f:	add    r9d,r13d
   140002792:	add    r8,0x8
   140002796:	cmp    r9d,0x6
   14000279a:	jb     0x140002759
   14000279c:	test   edx,edx
   14000279e:	je     0x140002819
   1400027a0:	cmp    DWORD PTR [rsi+0xc],0x2
   1400027a4:	je     0x1400027d0
   1400027a6:	cmp    DWORD PTR [rsi+0xc],0x4
   1400027aa:	jne    0x140002819
   1400027ac:	mov    rcx,QWORD PTR [rdi+0x8]
   1400027b0:	movsxd rbx,DWORD PTR [rsi+0x8]
   1400027b4:	call   QWORD PTR [rip+0x7a9e]        # 0x14000a258
   1400027ba:	mov    r9,rbx
   1400027bd:	xor    r8d,r8d
   1400027c0:	mov    rcx,rax
   1400027c3:	mov    edx,0x470
   1400027c8:	call   QWORD PTR [rip+0x7a52]        # 0x14000a220
   1400027ce:	jmp    0x140002816
   1400027d0:	mov    rax,QWORD PTR [rdi]
   1400027d3:	mov    rbx,QWORD PTR [rax+0x68]
   1400027d7:	mov    rcx,rbx
   1400027da:	call   QWORD PTR [rip+0x7c40]        # 0x14000a420
   1400027e0:	mov    rcx,rdi
   1400027e3:	call   rbx
   1400027e5:	mov    r8,QWORD PTR [rdi+0x10]
   1400027e9:	mov    ecx,DWORD PTR [r8+0x1c]
   1400027ed:	test   ecx,ecx
   1400027ef:	je     0x140002806
   1400027f1:	cmp    DWORD PTR [r8+0x18],ecx
   1400027f5:	jae    0x140002806
   1400027f7:	mov    edx,DWORD PTR [r8+0x18]
   1400027fb:	mov    rcx,QWORD PTR [r8+0x10]
   1400027ff:	mov    DWORD PTR [rcx+rdx*4],eax
   140002802:	add    DWORD PTR [r8+0x18],r13d
   140002806:	mov    r8d,DWORD PTR [rsi+0x8]
   14000280a:	xor    edx,edx
   14000280c:	mov    rcx,QWORD PTR [rdi+0x8]
   140002810:	call   QWORD PTR [rip+0x7a22]        # 0x14000a238
   140002816:	mov    r14d,r13d
   140002819:	add    r12d,r13d
   14000281c:	add    rsi,0x40
   140002820:	cmp    r12d,0x1a
   140002824:	jb     0x14000271f
   14000282a:	test   r14d,r14d
   14000282d:	jne    0x140002891
   14000282f:	cmp    r15d,0xffffff32
   140002836:	je     0x140002862
   140002838:	cmp    r15d,0xffffff38
   14000283f:	jne    0x140002891
   140002841:	mov    rcx,QWORD PTR [rdi+0x8]
   140002845:	call   QWORD PTR [rip+0x7a0d]        # 0x14000a258
   14000284b:	lea    r9d,[r14+0x3]
   14000284f:	xor    r8d,r8d
   140002852:	mov    rcx,rax
   140002855:	mov    edx,0x470
   14000285a:	call   QWORD PTR [rip+0x79c0]        # 0x14000a220
   140002860:	jmp    0x14000288e
   140002862:	mov    rdx,QWORD PTR [rdi+0x10]
   140002866:	cmp    DWORD PTR [rdx+0x1c],0x0
   14000286a:	je     0x140002891
   14000286c:	mov    eax,DWORD PTR [rdx+0x18]
   14000286f:	test   eax,eax
   140002871:	je     0x140002891
   140002873:	dec    eax
   140002875:	mov    DWORD PTR [rdx+0x18],eax
   140002878:	mov    ecx,eax
   14000287a:	mov    rax,QWORD PTR [rdx+0x10]
   14000287e:	xor    edx,edx
   140002880:	mov    r8d,DWORD PTR [rax+rcx*4]
   140002884:	mov    rcx,QWORD PTR [rdi+0x8]
   140002888:	call   QWORD PTR [rip+0x79aa]        # 0x14000a238
   14000288e:	mov    r14d,r13d
   140002891:	mov    eax,r14d
   140002894:	mov    rcx,QWORD PTR [rbp+0x5a0]
   14000289b:	xor    rcx,rsp
   14000289e:	call   0x140008990
   1400028a3:	lea    r11,[rsp+0x6b0]
   1400028ab:	mov    rbx,QWORD PTR [r11+0x38]
   1400028af:	mov    rsi,QWORD PTR [r11+0x40]
   1400028b3:	mov    rdi,QWORD PTR [r11+0x48]
   1400028b7:	mov    rsp,r11
   1400028ba:	pop    r15
   1400028bc:	pop    r14
   1400028be:	pop    r13
   1400028c0:	pop    r12
   1400028c2:	pop    rbp
   1400028c3:	ret    
   1400028c4:	int3   
   1400028c5:	int3   
   1400028c6:	int3   
   1400028c7:	int3   
   1400028c8:	int3   
   1400028c9:	int3   
   1400028ca:	int3   
   1400028cb:	int3   
   1400028cc:	int3   
   1400028cd:	int3   
   1400028ce:	int3   
   1400028cf:	int3   
   1400028d0:	sub    rsp,0x28
   1400028d4:	mov    rax,QWORD PTR [rcx+0x10]
   1400028d8:	xor    r9d,r9d
   1400028db:	mov    rcx,QWORD PTR [rcx+0x8]
   1400028df:	mov    edx,0x2710
   1400028e4:	cmp    DWORD PTR [rax],0x1
   1400028e7:	lea    r8d,[rdx+0x1]
   1400028eb:	setne  r9b
   1400028ef:	add    r9d,edx
   1400028f2:	call   QWORD PTR [rip+0x7918]        # 0x14000a210
   1400028f8:	test   eax,eax
   1400028fa:	jne    0x140002902
   1400028fc:	call   QWORD PTR [rip+0x77f6]        # 0x14000a0f8
   140002902:	mov    eax,0x1
   140002907:	add    rsp,0x28
   14000290b:	ret    
   14000290c:	int3   
   14000290d:	int3   
   14000290e:	int3   
   14000290f:	int3   
   140002910:	int3   
   140002911:	int3   
   140002912:	int3   
   140002913:	int3   
   140002914:	int3   
   140002915:	int3   
   140002916:	int3   
   140002917:	int3   
   140002918:	int3   
   140002919:	int3   
   14000291a:	int3   
   14000291b:	int3   
   14000291c:	int3   
   14000291d:	int3   
   14000291e:	int3   
   14000291f:	int3   
   140002920:	sub    rsp,0x28
   140002924:	mov    rdx,QWORD PTR [rcx+0x10]
   140002928:	cmp    DWORD PTR [rdx+0x4c],0x0
   14000292c:	je     0x14000294d
   14000292e:	mov    rcx,QWORD PTR [rcx+0x8]
   140002932:	call   QWORD PTR [rip+0x7920]        # 0x14000a258
   140002938:	xor    r9d,r9d
   14000293b:	mov    edx,0x471
   140002940:	mov    rcx,rax
   140002943:	lea    r8d,[r9+0x1]
   140002947:	call   QWORD PTR [rip+0x78d3]        # 0x14000a220
   14000294d:	mov    eax,0x1
   140002952:	add    rsp,0x28
   140002956:	ret    
   140002957:	int3   
   140002958:	int3   
   140002959:	int3   
   14000295a:	int3   
   14000295b:	int3   
   14000295c:	int3   
   14000295d:	int3   
   14000295e:	int3   
   14000295f:	int3   
   140002960:	rex push rbx
   140002962:	sub    rsp,0x20
   140002966:	mov    rbx,rcx
   140002969:	mov    edx,0x2710
   14000296e:	mov    rcx,QWORD PTR [rcx+0x8]
   140002972:	call   QWORD PTR [rip+0x78f8]        # 0x14000a270
   140002978:	mov    rdx,QWORD PTR [rbx+0x10]
   14000297c:	xor    r8d,r8d
   14000297f:	cmp    eax,0x1
   140002982:	mov    eax,0x1
   140002987:	sete   r8b
   14000298b:	mov    DWORD PTR [rdx],r8d
   14000298e:	mov    rcx,QWORD PTR [rbx+0x10]
   140002992:	and    DWORD PTR [rcx+0x8],0x0
   140002996:	add    rsp,0x20
   14000299a:	pop    rbx
   14000299b:	ret    
   14000299c:	int3   
   14000299d:	int3   
   14000299e:	int3   
   14000299f:	int3   
   1400029a0:	int3   
   1400029a1:	int3   
   1400029a2:	int3   
   1400029a3:	int3   
   1400029a4:	int3   
   1400029a5:	int3   
   1400029a6:	int3   
   1400029a7:	int3   
   1400029a8:	int3   
   1400029a9:	int3   
   1400029aa:	int3   
   1400029ab:	int3   
   1400029ac:	int3   
   1400029ad:	int3   
   1400029ae:	int3   
   1400029af:	int3   
   1400029b0:	mov    eax,0x3e8
   1400029b5:	ret    
   1400029b6:	int3   
   1400029b7:	int3   
   1400029b8:	int3   
   1400029b9:	int3   
   1400029ba:	int3   
   1400029bb:	int3   
   1400029bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400029c1:	mov    QWORD PTR [rsp+0x10],rbp
   1400029c6:	mov    QWORD PTR [rsp+0x18],rsi
   1400029cb:	push   rdi
   1400029cc:	push   r12
   1400029ce:	push   r13
   1400029d0:	push   r14
   1400029d2:	push   r15
   1400029d4:	sub    rsp,0x20
   1400029d8:	mov    r12d,DWORD PTR [rsp+0x78]
   1400029dd:	mov    rsi,rcx
   1400029e0:	xor    ebx,ebx
   1400029e2:	mov    ecx,r12d
   1400029e5:	mov    r10,r8
   1400029e8:	mov    r13,r9
   1400029eb:	mov    edi,ebx
   1400029ed:	mov    r11d,0x7ffffffe
   1400029f3:	mov    r8d,0x80070057
   1400029f9:	and    ecx,0x100
   1400029ff:	je     0x140002a19
   140002a01:	test   rsi,rsi
   140002a04:	jne    0x140002a0b
   140002a06:	test   rdx,rdx
   140002a09:	jne    0x140002a14
   140002a0b:	cmp    rdx,0x7fffffff
   140002a12:	jbe    0x140002a24
   140002a14:	mov    edi,r8d
   140002a17:	jmp    0x140002a24
   140002a19:	lea    rax,[rdx-0x1]
   140002a1d:	cmp    rax,r11
   140002a20:	cmova  edi,r8d
   140002a24:	test   edi,edi
   140002a26:	js     0x140002bb0
   140002a2c:	mov    r15,rsi
   140002a2f:	mov    r14,rdx
   140002a32:	test   ecx,ecx
   140002a34:	je     0x140002a47
   140002a36:	test   r10,r10
   140002a39:	lea    rax,[rip+0x8050]        # 0x14000aa90
   140002a40:	cmovne rax,r10
   140002a44:	mov    r10,rax
   140002a47:	mov    edi,ebx
   140002a49:	test   r12d,0xffffe000
   140002a50:	je     0x140002aba
   140002a52:	mov    edi,r8d
   140002a55:	test   rdx,rdx
   140002a58:	je     0x140002a5d
   140002a5a:	mov    WORD PTR [rsi],bx
   140002a5d:	test   r12d,0x1c00
   140002a64:	je     0x140002b84
   140002a6a:	test   rdx,rdx
   140002a6d:	je     0x140002b84
   140002a73:	lea    r8,[rdx+rdx*1]
   140002a77:	mov    rbp,r8
   140002a7a:	shr    rbp,1
   140002a7d:	je     0x140002a8f
   140002a7f:	bt     r12d,0xc
   140002a84:	jae    0x140002a8f
   140002a86:	mov    r15,rsi
   140002a89:	mov    WORD PTR [rsi],bx
   140002a8c:	mov    r14,rbp
   140002a8f:	bt     r12d,0xa
   140002a94:	jae    0x140002b6f
   140002a9a:	movzx  edx,r12b
   140002a9e:	mov    rcx,rsi
   140002aa1:	call   0x14000906a
   140002aa6:	test   r12b,r12b
   140002aa9:	jne    0x140002b58
   140002aaf:	mov    r15,rsi
   140002ab2:	mov    r14,rbp
   140002ab5:	jmp    0x140002b6f
   140002aba:	test   rdx,rdx
   140002abd:	jne    0x140002ad9
   140002abf:	cmp    WORD PTR [r10],bx
   140002ac3:	je     0x140002b98
   140002ac9:	mov    rax,rsi
   140002acc:	neg    rax
   140002acf:	sbb    edi,edi
   140002ad1:	and    edi,0x23
   140002ad4:	add    edi,r8d
   140002ad7:	jmp    0x140002a5d
   140002ad9:	sub    r11,rdx
   140002adc:	mov    r9,rdx
   140002adf:	sub    r10,rsi
   140002ae2:	mov    rcx,rsi
   140002ae5:	mov    r8,rbx
   140002ae8:	lea    rax,[r11+r9*1]
   140002aec:	test   rax,rax
   140002aef:	je     0x140002b0b
   140002af1:	movzx  eax,WORD PTR [r10+rcx*1]
   140002af6:	test   ax,ax
   140002af9:	je     0x140002b0b
   140002afb:	mov    WORD PTR [rcx],ax
   140002afe:	inc    r8
   140002b01:	add    rcx,0x2
   140002b05:	sub    r9,0x1
   140002b09:	jne    0x140002ae8
   140002b0b:	test   r9,r9
   140002b0e:	jne    0x140002b1c
   140002b10:	sub    rcx,0x2
   140002b14:	mov    edi,0x8007007a
   140002b19:	dec    r8
   140002b1c:	sub    r14,r8
   140002b1f:	mov    WORD PTR [rcx],bx
   140002b22:	lea    r15,[rsi+r8*2]
   140002b26:	test   edi,edi
   140002b28:	js     0x140002a5d
   140002b2e:	bt     r12d,0x9
   140002b33:	jae    0x140002b98
   140002b35:	cmp    r14,0x1
   140002b39:	jbe    0x140002b98
   140002b3b:	lea    r8,[r14+r14*1]
   140002b3f:	cmp    r8,0x2
   140002b43:	jbe    0x140002b98
   140002b45:	add    r8,0xfffffffffffffffe
   140002b49:	movzx  edx,r12b
   140002b4d:	lea    rcx,[r15+0x2]
   140002b51:	call   0x14000906a
   140002b56:	jmp    0x140002b98
   140002b58:	test   rbp,rbp
   140002b5b:	je     0x140002b84
   140002b5d:	lea    r15,[rsi-0x2]
   140002b61:	mov    r14d,0x1
   140002b67:	lea    r15,[r15+rbp*2]
   140002b6b:	mov    WORD PTR [r15],bx
   140002b6f:	test   rbp,rbp
   140002b72:	je     0x140002b84
   140002b74:	bt     r12d,0xb
   140002b79:	jae    0x140002b84
   140002b7b:	mov    r15,rsi
   140002b7e:	mov    WORD PTR [rsi],bx
   140002b81:	mov    r14,rbp
   140002b84:	mov    ecx,0x80000000
   140002b89:	lea    eax,[rdi+rcx*1]
   140002b8c:	test   ecx,eax
   140002b8e:	jne    0x140002b98
   140002b90:	cmp    edi,0x8007007a
   140002b96:	jne    0x140002bb8
   140002b98:	test   r13,r13
   140002b9b:	je     0x140002ba1
   140002b9d:	mov    QWORD PTR [r13+0x0],r15
   140002ba1:	mov    rax,QWORD PTR [rsp+0x70]
   140002ba6:	test   rax,rax
   140002ba9:	je     0x140002bb8
   140002bab:	mov    QWORD PTR [rax],r14
   140002bae:	jmp    0x140002bb8
   140002bb0:	test   rdx,rdx
   140002bb3:	je     0x140002bb8
   140002bb5:	mov    WORD PTR [rsi],bx
   140002bb8:	mov    rbx,QWORD PTR [rsp+0x50]
   140002bbd:	mov    eax,edi
   140002bbf:	mov    rbp,QWORD PTR [rsp+0x58]
   140002bc4:	mov    rsi,QWORD PTR [rsp+0x60]
   140002bc9:	add    rsp,0x20
   140002bcd:	pop    r15
   140002bcf:	pop    r14
   140002bd1:	pop    r13
   140002bd3:	pop    r12
   140002bd5:	pop    rdi
   140002bd6:	ret    
   140002bd7:	int3   
   140002bd8:	int3   
   140002bd9:	int3   
   140002bda:	int3   
   140002bdb:	int3   
   140002bdc:	int3   
   140002bdd:	int3   
   140002bde:	int3   
   140002bdf:	int3   
   140002be0:	mov    QWORD PTR [rsp+0x18],r8
   140002be5:	mov    QWORD PTR [rsp+0x20],r9
   140002bea:	push   rbx
   140002beb:	push   rbp
   140002bec:	push   rsi
   140002bed:	push   rdi
   140002bee:	sub    rsp,0x28
   140002bf2:	xor    ebp,ebp
   140002bf4:	lea    rax,[rdx-0x1]
   140002bf8:	cmp    rax,0x7ffffffe
   140002bfe:	mov    rsi,rcx
   140002c01:	mov    edi,ebp
   140002c03:	mov    ecx,0x80070057
   140002c08:	cmova  edi,ecx
   140002c0b:	test   edi,edi
   140002c0d:	js     0x140002c44
   140002c0f:	lea    rbx,[rdx-0x1]
   140002c13:	mov    rcx,rsi
   140002c16:	mov    rdx,rbx
   140002c19:	lea    r9,[rsp+0x68]
   140002c1e:	mov    edi,ebp
   140002c20:	call   QWORD PTR [rip+0x770a]        # 0x14000a330
   140002c26:	test   eax,eax
   140002c28:	js     0x140002c39
   140002c2a:	cdqe   
   140002c2c:	cmp    rax,rbx
   140002c2f:	ja     0x140002c39
   140002c31:	jne    0x140002c4c
   140002c33:	mov    WORD PTR [rsi+rbx*2],bp
   140002c37:	jmp    0x140002c4c
   140002c39:	mov    WORD PTR [rsi+rbx*2],bp
   140002c3d:	mov    edi,0x8007007a
   140002c42:	jmp    0x140002c4c
   140002c44:	test   rdx,rdx
   140002c47:	je     0x140002c4c
   140002c49:	mov    WORD PTR [rsi],bp
   140002c4c:	mov    eax,edi
   140002c4e:	add    rsp,0x28
   140002c52:	pop    rdi
   140002c53:	pop    rsi
   140002c54:	pop    rbp
   140002c55:	pop    rbx
   140002c56:	ret    
   140002c57:	int3   
   140002c58:	int3   
   140002c59:	int3   
   140002c5a:	int3   
   140002c5b:	int3   
   140002c5c:	int3   
   140002c5d:	int3   
   140002c5e:	int3   
   140002c5f:	int3   
   140002c60:	sub    rsp,0x38
   140002c64:	and    QWORD PTR [rsp+0x20],0x0
   140002c6a:	mov    r9d,0x104
   140002c70:	mov    rcx,QWORD PTR [rcx+0x8]
   140002c74:	mov    edx,0x27d9
   140002c79:	lea    r8d,[r9-0x3f]
   140002c7d:	call   QWORD PTR [rip+0x760d]        # 0x14000a290
   140002c83:	mov    eax,0x1
   140002c88:	add    rsp,0x38
   140002c8c:	ret    
   140002c8d:	int3   
   140002c8e:	int3   
   140002c8f:	int3   
   140002c90:	int3   
   140002c91:	int3   
   140002c92:	int3   
   140002c93:	int3   
   140002c94:	int3   
   140002c95:	int3   
   140002c96:	int3   
   140002c97:	int3   
   140002c98:	int3   
   140002c99:	int3   
   140002c9a:	int3   
   140002c9b:	int3   
   140002c9c:	int3   
   140002c9d:	int3   
   140002c9e:	int3   
   140002c9f:	int3   
   140002ca0:	mov    r11,rsp
   140002ca3:	mov    QWORD PTR [r11+0x8],rbx
   140002ca7:	mov    QWORD PTR [r11+0x10],rbp
   140002cab:	push   rdi
   140002cac:	sub    rsp,0x30
   140002cb0:	mov    rdx,QWORD PTR [rcx+0x18]
   140002cb4:	lea    rax,[rip+0xa935]        # 0x14000d5f0
   140002cbb:	mov    DWORD PTR [rsp+0x20],0x67727473
   140002cc3:	mov    rbx,rcx
   140002cc6:	mov    QWORD PTR [r11-0x10],rax
   140002cca:	mov    r8d,0x283f
   140002cd0:	mov    rax,QWORD PTR [rcx+0x10]
   140002cd4:	lea    rcx,[r11-0x18]
   140002cd8:	cmp    DWORD PTR [rax],0x1
   140002cdb:	je     0x140002ce3
   140002cdd:	mov    r8d,0x283e
   140002ce3:	call   0x140007894
   140002ce8:	xor    ebp,ebp
   140002cea:	test   eax,eax
   140002cec:	js     0x140002d0b
   140002cee:	mov    rcx,QWORD PTR [rbx+0x8]
   140002cf2:	mov    edx,0x27d8
   140002cf7:	call   QWORD PTR [rip+0x759b]        # 0x14000a298
   140002cfd:	mov    rdx,QWORD PTR [rsp+0x28]
   140002d02:	mov    rcx,rax
   140002d05:	call   QWORD PTR [rip+0x756d]        # 0x14000a278
   140002d0b:	mov    rax,QWORD PTR [rbx+0x10]
   140002d0f:	mov    rdi,QWORD PTR [rax+0x38]
   140002d13:	cmp    WORD PTR [rdi],bp
   140002d16:	je     0x140002d4b
   140002d18:	mov    rcx,QWORD PTR [rbx+0x8]
   140002d1c:	mov    edx,0x27d9
   140002d21:	call   QWORD PTR [rip+0x7571]        # 0x14000a298
   140002d27:	mov    rcx,rax
   140002d2a:	mov    rdx,rdi
   140002d2d:	call   QWORD PTR [rip+0x7545]        # 0x14000a278
   140002d33:	mov    rcx,QWORD PTR [rbx+0x8]
   140002d37:	mov    edx,0x27d9
   140002d3c:	call   QWORD PTR [rip+0x7556]        # 0x14000a298
   140002d42:	mov    rcx,rax
   140002d45:	call   QWORD PTR [rip+0x755d]        # 0x14000a2a8
   140002d4b:	lea    rcx,[rsp+0x20]
   140002d50:	mov    DWORD PTR [rbx+0x20],ebp
   140002d53:	call   0x140007628
   140002d58:	mov    rbx,QWORD PTR [rsp+0x40]
   140002d5d:	mov    eax,0x1
   140002d62:	mov    rbp,QWORD PTR [rsp+0x48]
   140002d67:	add    rsp,0x30
   140002d6b:	pop    rdi
   140002d6c:	ret    
   140002d6d:	int3   
   140002d6e:	int3   
   140002d6f:	int3   
   140002d70:	int3   
   140002d71:	int3   
   140002d72:	int3   
   140002d73:	int3   
   140002d74:	int3   
   140002d75:	int3   
   140002d76:	int3   
   140002d77:	int3   
   140002d78:	int3   
   140002d79:	int3   
   140002d7a:	int3   
   140002d7b:	int3   
   140002d7c:	int3   
   140002d7d:	int3   
   140002d7e:	int3   
   140002d7f:	int3   
   140002d80:	mov    QWORD PTR [rsp+0x8],rbx
   140002d85:	mov    QWORD PTR [rsp+0x18],rdi
   140002d8a:	push   rbp
   140002d8b:	mov    rbp,rsp
   140002d8e:	sub    rsp,0x60
   140002d92:	and    DWORD PTR [rbp+0x18],0x0
   140002d96:	lea    rax,[rip+0xa853]        # 0x14000d5f0
   140002d9d:	mov    QWORD PTR [rbp-0x8],rax
   140002da1:	mov    rbx,rcx
   140002da4:	mov    QWORD PTR [rbp-0x18],rax
   140002da8:	mov    ecx,0x67727473
   140002dad:	mov    DWORD PTR [rbp-0x10],ecx
   140002db0:	mov    DWORD PTR [rbp-0x20],ecx
   140002db3:	cmp    edx,0x401
   140002db9:	je     0x140002dca
   140002dbb:	mov    rcx,rbx
   140002dbe:	call   0x140001fb0
   140002dc3:	mov    edi,eax
   140002dc5:	jmp    0x140002eed
   140002dca:	mov    edi,0x1
   140002dcf:	test   r8,r8
   140002dd2:	je     0x140002eb4
   140002dd8:	sub    r8,0x2
   140002ddc:	je     0x140002ea9
   140002de2:	sub    r8,rdi
   140002de5:	je     0x140002e8e
   140002deb:	sub    r8,rdi
   140002dee:	je     0x140002dfe
   140002df0:	sub    r8,rdi
   140002df3:	je     0x140002e16
   140002df5:	cmp    r8,rdi
   140002df8:	jne    0x140002ebf
   140002dfe:	mov    r8d,0x4e21
   140002e04:	mov    rdx,QWORD PTR [rbx+0x18]
   140002e08:	mov    rcx,QWORD PTR [rbx+0x8]
   140002e0c:	call   0x140006130
   140002e11:	jmp    0x140002ebf
   140002e16:	mov    rdx,QWORD PTR [rbx+0x18]
   140002e1a:	lea    rcx,[rbp-0x10]
   140002e1e:	mov    r8d,0x65
   140002e24:	call   0x140007894
   140002e29:	mov    rdx,QWORD PTR [rbx+0x18]
   140002e2d:	lea    rcx,[rbp-0x20]
   140002e31:	mov    r8d,0x4e20
   140002e37:	call   0x140007894
   140002e3c:	mov    r9,QWORD PTR [rbp-0x18]
   140002e40:	lea    rax,[rbp+0x18]
   140002e44:	mov    r8,QWORD PTR [rbp-0x8]
   140002e48:	xor    edx,edx
   140002e4a:	mov    rcx,QWORD PTR [rbx+0x8]
   140002e4e:	mov    QWORD PTR [rsp+0x38],rax
   140002e53:	mov    QWORD PTR [rsp+0x30],0xffff
   140002e5c:	mov    DWORD PTR [rsp+0x28],0x6
   140002e64:	and    QWORD PTR [rsp+0x20],0x0
   140002e6a:	call   QWORD PTR [rip+0x71d8]        # 0x14000a048
   140002e70:	test   eax,eax
   140002e72:	js     0x140002ebf
   140002e74:	cmp    DWORD PTR [rbp+0x18],0x6
   140002e78:	jne    0x140002ebf
   140002e7a:	mov    rax,QWORD PTR [rbx+0x10]
   140002e7e:	mov    DWORD PTR [rbx+0x20],edi
   140002e81:	and    DWORD PTR [rax+0x8],0x0
   140002e85:	mov    rax,QWORD PTR [rbx+0x10]
   140002e89:	mov    DWORD PTR [rax+0x50],edi
   140002e8c:	jmp    0x140002ebf
   140002e8e:	mov    rax,QWORD PTR [rbx+0x10]
   140002e92:	mov    ecx,DWORD PTR [rax]
   140002e94:	neg    ecx
   140002e96:	sbb    r8d,r8d
   140002e99:	and    r8d,0xfffffff3
   140002e9d:	add    r8d,0x4e2f
   140002ea4:	jmp    0x140002e04
   140002ea9:	mov    r8d,0x4e23
   140002eaf:	jmp    0x140002e04
   140002eb4:	mov    rax,QWORD PTR [rbx+0x10]
   140002eb8:	mov    DWORD PTR [rbx+0x20],edi
   140002ebb:	and    DWORD PTR [rax+0x8],0x0
   140002ebf:	mov    edx,edi
   140002ec1:	mov    rcx,rbx
   140002ec4:	call   0x1400036f4
   140002ec9:	cmp    DWORD PTR [rbx+0x20],0x0
   140002ecd:	je     0x140002eed
   140002ecf:	mov    rcx,QWORD PTR [rbx+0x8]
   140002ed3:	call   QWORD PTR [rip+0x737f]        # 0x14000a258
   140002ed9:	xor    r9d,r9d
   140002edc:	mov    r8,rdi
   140002edf:	mov    rcx,rax
   140002ee2:	mov    edx,0x471
   140002ee7:	call   QWORD PTR [rip+0x7333]        # 0x14000a220
   140002eed:	lea    rcx,[rbp-0x20]
   140002ef1:	call   0x140007628
   140002ef6:	lea    rcx,[rbp-0x10]
   140002efa:	call   0x140007628
   140002eff:	lea    r11,[rsp+0x60]
   140002f04:	mov    eax,edi
   140002f06:	mov    rbx,QWORD PTR [r11+0x10]
   140002f0a:	mov    rdi,QWORD PTR [r11+0x20]
   140002f0e:	mov    rsp,r11
   140002f11:	pop    rbp
   140002f12:	ret    
   140002f13:	int3   
   140002f14:	int3   
   140002f15:	int3   
   140002f16:	int3   
   140002f17:	int3   
   140002f18:	int3   
   140002f19:	int3   
   140002f1a:	int3   
   140002f1b:	int3   
   140002f1c:	int3   
   140002f1d:	int3   
   140002f1e:	int3   
   140002f1f:	int3   
   140002f20:	rex push rbx
   140002f22:	sub    rsp,0x20
   140002f26:	mov    eax,0x27da
   140002f2b:	cmp    dx,ax
   140002f2e:	je     0x140002f34
   140002f30:	xor    ebx,ebx
   140002f32:	jmp    0x140002f3e
   140002f34:	mov    ebx,0x1
   140002f39:	call   0x140002f4c
   140002f3e:	mov    eax,ebx
   140002f40:	add    rsp,0x20
   140002f44:	pop    rbx
   140002f45:	ret    
   140002f46:	int3   
   140002f47:	int3   
   140002f48:	int3   
   140002f49:	int3   
   140002f4a:	int3   
   140002f4b:	int3   
   140002f4c:	mov    rax,rsp
   140002f4f:	mov    QWORD PTR [rax+0x10],rbx
   140002f53:	mov    QWORD PTR [rax+0x18],rsi
   140002f57:	mov    QWORD PTR [rax+0x20],rdi
   140002f5b:	push   rbp
   140002f5c:	push   r14
   140002f5e:	push   r15
   140002f60:	lea    rbp,[rax-0x678]
   140002f67:	sub    rsp,0x760
   140002f6e:	mov    rax,QWORD PTR [rip+0xa093]        # 0x14000d008
   140002f75:	xor    rax,rsp
   140002f78:	mov    QWORD PTR [rbp+0x650],rax
   140002f7f:	mov    rbx,rcx
   140002f82:	xor    edx,edx
   140002f84:	lea    rcx,[rsp+0x78]
   140002f89:	mov    r8d,0x90
   140002f8f:	call   0x14000906a
   140002f94:	mov    ecx,0x67727473
   140002f99:	lea    rax,[rip+0xa650]        # 0x14000d5f0
   140002fa0:	mov    DWORD PTR [rsp+0x60],ecx
   140002fa4:	mov    edi,0x206
   140002fa9:	mov    DWORD PTR [rsp+0x40],ecx
   140002fad:	xor    r15d,r15d
   140002fb0:	mov    DWORD PTR [rsp+0x50],ecx
   140002fb4:	mov    r8d,edi
   140002fb7:	lea    rcx,[rbp+0x442]
   140002fbe:	mov    QWORD PTR [rsp+0x68],rax
   140002fc3:	xor    edx,edx
   140002fc5:	mov    QWORD PTR [rsp+0x48],rax
   140002fca:	mov    QWORD PTR [rsp+0x58],rax
   140002fcf:	mov    WORD PTR [rbp+0x440],r15w
   140002fd7:	call   0x14000906a
   140002fdc:	mov    r8d,edi
   140002fdf:	mov    WORD PTR [rbp+0x20],r15w
   140002fe4:	xor    edx,edx
   140002fe6:	lea    rcx,[rbp+0x22]
   140002fea:	call   0x14000906a
   140002fef:	mov    r8d,edi
   140002ff2:	mov    WORD PTR [rbp+0x230],r15w
   140002ffa:	xor    edx,edx
   140002ffc:	lea    rcx,[rbp+0x232]
   140003003:	call   0x14000906a
   140003008:	mov    rax,QWORD PTR [rbx+0x18]
   14000300c:	mov    edx,0x800
   140003011:	mov    rcx,QWORD PTR [rbx+0x8]
   140003015:	mov    edi,0x2841
   14000301a:	mov    DWORD PTR [rbp-0x30],edx
   14000301d:	mov    r8d,0x1800
   140003023:	mov    QWORD PTR [rbp-0x80],rax
   140003027:	mov    esi,0x104
   14000302c:	lea    rax,[rbp+0x230]
   140003033:	mov    DWORD PTR [rsp+0x70],0x98
   14000303b:	mov    QWORD PTR [rbp-0x60],rax
   14000303f:	mov    rax,QWORD PTR [rbx+0x10]
   140003043:	mov    QWORD PTR [rsp+0x78],rcx
   140003048:	mov    DWORD PTR [rbp-0x58],esi
   14000304b:	mov    DWORD PTR [rbp+0x10],0x27df
   140003052:	cmp    DWORD PTR [rax],r15d
   140003055:	mov    DWORD PTR [rbp+0x14],edi
   140003058:	cmove  edx,r8d
   14000305c:	mov    DWORD PTR [rbp+0x18],0x27e1
   140003063:	mov    DWORD PTR [rbp-0x30],edx
   140003066:	lea    edx,[rdi-0x68]
   140003069:	mov    DWORD PTR [rbp+0x1c],0x27e0
   140003070:	call   QWORD PTR [rip+0x7222]        # 0x14000a298
   140003076:	mov    r8d,esi
   140003079:	lea    rdx,[rbp+0x20]
   14000307d:	mov    rcx,rax
   140003080:	call   QWORD PTR [rip+0x721a]        # 0x14000a2a0
   140003086:	test   eax,eax
   140003088:	je     0x1400030c2
   14000308a:	lea    rcx,[rbp+0x20]
   14000308e:	call   0x140003230
   140003093:	test   eax,eax
   140003095:	jne    0x1400030ba
   140003097:	lea    edx,[rax+0x5c]
   14000309a:	lea    rcx,[rbp+0x20]
   14000309e:	call   QWORD PTR [rip+0x7284]        # 0x14000a328
   1400030a4:	test   rax,rax
   1400030a7:	je     0x1400030ad
   1400030a9:	mov    WORD PTR [rax],r15w
   1400030ad:	lea    rcx,[rbp+0x20]
   1400030b1:	call   0x140003230
   1400030b6:	test   eax,eax
   1400030b8:	je     0x1400030c2
   1400030ba:	lea    rax,[rbp+0x20]
   1400030be:	mov    QWORD PTR [rbp-0x40],rax
   1400030c2:	mov    rdx,QWORD PTR [rbx+0x18]
   1400030c6:	lea    rcx,[rsp+0x40]
   1400030cb:	mov    r8d,edi
   1400030ce:	call   0x140007894
   1400030d3:	mov    rcx,QWORD PTR [rbp-0x28]
   1400030d7:	lea    rdi,[rbp+0x440]
   1400030de:	test   eax,eax
   1400030e0:	mov    QWORD PTR [rsp+0x30],rdi
   1400030e5:	mov    edx,eax
   1400030e7:	mov    QWORD PTR [rsp+0x38],rsi
   1400030ec:	cmovns rcx,QWORD PTR [rsp+0x48]
   1400030f2:	mov    r14d,r15d
   1400030f5:	mov    QWORD PTR [rbp-0x28],rcx
   1400030f9:	js     0x14000317a
   1400030fb:	cmp    r14d,0x4
   1400030ff:	jae    0x140003168
   140003101:	mov    rdx,QWORD PTR [rbx+0x18]
   140003105:	lea    rcx,[rsp+0x60]
   14000310a:	mov    eax,r14d
   14000310d:	mov    r8d,DWORD PTR [rbp+rax*4+0x10]
   140003112:	call   0x140007894
   140003117:	mov    edx,eax
   140003119:	test   eax,eax
   14000311b:	js     0x140003161
   14000311d:	mov    r8,QWORD PTR [rsp+0x68]
   140003122:	lea    rax,[rsp+0x38]
   140003127:	mov    DWORD PTR [rsp+0x28],0x1000
   14000312f:	lea    r9,[rsp+0x30]
   140003134:	mov    rdx,rsi
   140003137:	mov    QWORD PTR [rsp+0x20],rax
   14000313c:	mov    rcx,rdi
   14000313f:	call   0x1400029bc
   140003144:	mov    rdi,QWORD PTR [rsp+0x30]
   140003149:	mov    edx,eax
   14000314b:	mov    rsi,QWORD PTR [rsp+0x38]
   140003150:	add    rdi,0x2
   140003154:	dec    rsi
   140003157:	mov    QWORD PTR [rsp+0x30],rdi
   14000315c:	mov    QWORD PTR [rsp+0x38],rsi
   140003161:	inc    r14d
   140003164:	test   edx,edx
   140003166:	jns    0x1400030fb
   140003168:	test   edx,edx
   14000316a:	lea    rax,[rbp+0x440]
   140003171:	cmovs  rax,QWORD PTR [rbp-0x78]
   140003176:	mov    QWORD PTR [rbp-0x78],rax
   14000317a:	mov    rdx,QWORD PTR [rbx+0x18]
   14000317e:	lea    rcx,[rsp+0x50]
   140003183:	mov    r8d,0x2840
   140003189:	call   0x140007894
   14000318e:	mov    rcx,QWORD PTR [rbp-0x38]
   140003192:	test   eax,eax
   140003194:	mov    rax,QWORD PTR [rbx+0x10]
   140003198:	cmovns rcx,QWORD PTR [rsp+0x58]
   14000319e:	mov    QWORD PTR [rbp-0x38],rcx
   1400031a2:	lea    rcx,[rsp+0x70]
   1400031a7:	cmp    DWORD PTR [rax],0x1
   1400031aa:	jne    0x1400031b4
   1400031ac:	call   QWORD PTR [rip+0x6eae]        # 0x14000a060
   1400031b2:	jmp    0x1400031ba
   1400031b4:	call   QWORD PTR [rip+0x6e9e]        # 0x14000a058
   1400031ba:	test   eax,eax
   1400031bc:	je     0x1400031dd
   1400031be:	mov    rcx,QWORD PTR [rbx+0x8]
   1400031c2:	mov    edx,0x27d9
   1400031c7:	call   QWORD PTR [rip+0x70cb]        # 0x14000a298
   1400031cd:	mov    rcx,rax
   1400031d0:	lea    rdx,[rbp+0x230]
   1400031d7:	call   QWORD PTR [rip+0x709b]        # 0x14000a278
   1400031dd:	lea    rcx,[rsp+0x50]
   1400031e2:	call   0x140007628
   1400031e7:	lea    rcx,[rsp+0x40]
   1400031ec:	call   0x140007628
   1400031f1:	lea    rcx,[rsp+0x60]
   1400031f6:	call   0x140007628
   1400031fb:	mov    rcx,QWORD PTR [rbp+0x650]
   140003202:	xor    rcx,rsp
   140003205:	call   0x140008990
   14000320a:	lea    r11,[rsp+0x760]
   140003212:	mov    rbx,QWORD PTR [r11+0x28]
   140003216:	mov    rsi,QWORD PTR [r11+0x30]
   14000321a:	mov    rdi,QWORD PTR [r11+0x38]
   14000321e:	mov    rsp,r11
   140003221:	pop    r15
   140003223:	pop    r14
   140003225:	pop    rbp
   140003226:	ret    
   140003227:	int3   
   140003228:	int3   
   140003229:	int3   
   14000322a:	int3   
   14000322b:	int3   
   14000322c:	int3   
   14000322d:	int3   
   14000322e:	int3   
   14000322f:	int3   
   140003230:	mov    QWORD PTR [rsp+0x10],rbx
   140003235:	push   rdi
   140003236:	sub    rsp,0x280
   14000323d:	mov    rax,QWORD PTR [rip+0x9dc4]        # 0x14000d008
   140003244:	xor    rax,rsp
   140003247:	mov    QWORD PTR [rsp+0x270],rax
   14000324f:	mov    rbx,rcx
   140003252:	xor    edi,edi
   140003254:	lea    rcx,[rsp+0x24]
   140003259:	mov    DWORD PTR [rsp+0x20],edi
   14000325d:	xor    edx,edx
   14000325f:	mov    r8d,0x24c
   140003265:	call   0x14000906a
   14000326a:	lea    rdx,[rsp+0x20]
   14000326f:	mov    rcx,rbx
   140003272:	call   QWORD PTR [rip+0x6e98]        # 0x14000a110
   140003278:	cmp    rax,0xffffffffffffffff
   14000327c:	je     0x140003294
   14000327e:	mov    cl,BYTE PTR [rsp+0x20]
   140003282:	lea    edx,[rdi+0x1]
   140003285:	and    cl,0x10
   140003288:	mov    rcx,rax
   14000328b:	cmovne edi,edx
   14000328e:	call   QWORD PTR [rip+0x6eac]        # 0x14000a140
   140003294:	mov    eax,edi
   140003296:	mov    rcx,QWORD PTR [rsp+0x270]
   14000329e:	xor    rcx,rsp
   1400032a1:	call   0x140008990
   1400032a6:	mov    rbx,QWORD PTR [rsp+0x298]
   1400032ae:	add    rsp,0x280
   1400032b5:	pop    rdi
   1400032b6:	ret    
   1400032b7:	int3   
   1400032b8:	int3   
   1400032b9:	int3   
   1400032ba:	int3   
   1400032bb:	int3   
   1400032bc:	int3   
   1400032bd:	int3   
   1400032be:	int3   
   1400032bf:	int3   
   1400032c0:	mov    rax,rsp
   1400032c3:	mov    QWORD PTR [rax+0x10],rbx
   1400032c7:	mov    QWORD PTR [rax+0x18],rsi
   1400032cb:	mov    QWORD PTR [rax+0x20],rdi
   1400032cf:	push   rbp
   1400032d0:	push   r12
   1400032d2:	push   r13
   1400032d4:	push   r14
   1400032d6:	push   r15
   1400032d8:	lea    rbp,[rax-0x5a8]
   1400032df:	sub    rsp,0x680
   1400032e6:	mov    rax,QWORD PTR [rip+0x9d1b]        # 0x14000d008
   1400032ed:	xor    rax,rsp
   1400032f0:	mov    QWORD PTR [rbp+0x570],rax
   1400032f7:	mov    rsi,rcx
   1400032fa:	mov    eax,0x67727473
   1400032ff:	lea    rcx,[rip+0xa2ea]        # 0x14000d5f0
   140003306:	mov    DWORD PTR [rsp+0x30],eax
   14000330a:	mov    QWORD PTR [rsp+0x38],rcx
   14000330f:	mov    ebx,0x206
   140003314:	mov    QWORD PTR [rsp+0x28],rcx
   140003319:	xor    r12d,r12d
   14000331c:	lea    rcx,[rbp+0x152]
   140003323:	mov    DWORD PTR [rsp+0x20],eax
   140003327:	mov    r8d,ebx
   14000332a:	mov    WORD PTR [rbp+0x150],r12w
   140003332:	xor    edx,edx
   140003334:	call   0x14000906a
   140003339:	mov    r8d,ebx
   14000333c:	mov    WORD PTR [rsp+0x40],r12w
   140003342:	xor    edx,edx
   140003344:	lea    rcx,[rsp+0x42]
   140003349:	call   0x14000906a
   14000334e:	mov    r14d,r12d
   140003351:	cmp    DWORD PTR [rsi+0x20],r12d
   140003355:	jne    0x140003687
   14000335b:	xor    edx,edx
   14000335d:	mov    rcx,rsi
   140003360:	call   0x1400036f4
   140003365:	mov    rcx,QWORD PTR [rsi+0x8]
   140003369:	mov    r13d,0x27d9
   14000336f:	mov    edx,r13d
   140003372:	or     r15d,0xffffffff
   140003376:	call   QWORD PTR [rip+0x6f1c]        # 0x14000a298
   14000337c:	mov    edi,0x104
   140003381:	lea    rdx,[rbp+0x150]
   140003388:	mov    rcx,rax
   14000338b:	mov    r8d,edi
   14000338e:	call   QWORD PTR [rip+0x6f0c]        # 0x14000a2a0
   140003394:	lea    edx,[r12+0x2]
   140003399:	lea    r8d,[r12+0x5c]
   14000339e:	test   eax,eax
   1400033a0:	jne    0x1400033c8
   1400033a2:	call   QWORD PTR [rip+0x6d50]        # 0x14000a0f8
   1400033a8:	movzx  ebx,ax
   1400033ab:	or     ebx,0x80070000
   1400033b1:	test   eax,eax
   1400033b3:	cmovle ebx,eax
   1400033b6:	test   ebx,ebx
   1400033b8:	js     0x1400034ea
   1400033be:	lea    edx,[r12+0x2]
   1400033c3:	lea    r8d,[r12+0x5c]
   1400033c8:	mov    rcx,rdi
   1400033cb:	lea    rax,[rbp+0x150]
   1400033d2:	mov    ebx,r12d
   1400033d5:	cmp    WORD PTR [rax],r12w
   1400033d9:	je     0x1400033e4
   1400033db:	add    rax,rdx
   1400033de:	sub    rcx,0x1
   1400033e2:	jne    0x1400033d5
   1400033e4:	mov    edx,0x80070057
   1400033e9:	test   rcx,rcx
   1400033ec:	jne    0x1400033f5
   1400033ee:	mov    ebx,edx
   1400033f0:	mov    rax,r12
   1400033f3:	jmp    0x1400033fb
   1400033f5:	mov    rax,rdi
   1400033f8:	sub    rax,rcx
   1400033fb:	mov    ecx,0x4
   140003400:	cmp    rax,0x1
   140003404:	jae    0x14000340b
   140003406:	mov    ebx,edx
   140003408:	mov    r14d,ecx
   14000340b:	test   ebx,ebx
   14000340d:	js     0x1400034ea
   140003413:	cmp    WORD PTR [rbp+rax*2+0x14e],r8w
   14000341c:	jne    0x140003423
   14000341e:	mov    ebx,edx
   140003420:	mov    r14d,ecx
   140003423:	test   ebx,ebx
   140003425:	js     0x1400034ea
   14000342b:	mov    edx,0x2e
   140003430:	lea    rcx,[rbp+0x150]
   140003437:	call   QWORD PTR [rip+0x6ee3]        # 0x14000a320
   14000343d:	test   rax,rax
   140003440:	jne    0x1400034d4
   140003446:	mov    rdx,QWORD PTR [rsi+0x18]
   14000344a:	lea    rcx,[rsp+0x20]
   14000344f:	mov    r8d,0x27de
   140003455:	call   0x140007894
   14000345a:	mov    ebx,eax
   14000345c:	test   eax,eax
   14000345e:	js     0x14000349c
   140003460:	mov    r8,QWORD PTR [rsp+0x28]
   140003465:	lea    r9,[rbp+0x150]
   14000346c:	mov    rdx,rdi
   14000346f:	lea    rcx,[rsp+0x40]
   140003474:	call   0x140002be0
   140003479:	mov    ebx,eax
   14000347b:	test   eax,eax
   14000347d:	js     0x14000349c
   14000347f:	mov    rcx,QWORD PTR [rsi+0x8]
   140003483:	mov    edx,r13d
   140003486:	call   QWORD PTR [rip+0x6e0c]        # 0x14000a298
   14000348c:	mov    rcx,rax
   14000348f:	lea    rdx,[rsp+0x40]
   140003494:	call   QWORD PTR [rip+0x6dde]        # 0x14000a278
   14000349a:	jmp    0x1400034ea
   14000349c:	mov    rcx,QWORD PTR [rsi+0x8]
   1400034a0:	mov    edx,r13d
   1400034a3:	call   QWORD PTR [rip+0x6def]        # 0x14000a298
   1400034a9:	mov    r8d,edi
   1400034ac:	lea    rdx,[rsp+0x40]
   1400034b1:	mov    rcx,rax
   1400034b4:	call   QWORD PTR [rip+0x6de6]        # 0x14000a2a0
   1400034ba:	test   eax,eax
   1400034bc:	jne    0x1400034ea
   1400034be:	call   QWORD PTR [rip+0x6c34]        # 0x14000a0f8
   1400034c4:	movzx  ebx,ax
   1400034c7:	or     ebx,0x80070000
   1400034cd:	test   eax,eax
   1400034cf:	cmovle ebx,eax
   1400034d2:	jmp    0x1400034ea
   1400034d4:	lea    r8,[rbp+0x150]
   1400034db:	mov    rdx,rdi
   1400034de:	lea    rcx,[rsp+0x40]
   1400034e3:	call   0x140001068
   1400034e8:	mov    ebx,eax
   1400034ea:	mov    edx,0x5c
   1400034ef:	lea    rcx,[rsp+0x40]
   1400034f4:	call   QWORD PTR [rip+0x6e26]        # 0x14000a320
   1400034fa:	mov    r13d,0x80004005
   140003500:	test   rax,rax
   140003503:	jne    0x140003567
   140003505:	xor    edx,edx
   140003507:	mov    WORD PTR [rbp+0x360],r12w
   14000350f:	mov    r8d,0x206
   140003515:	lea    rcx,[rbp+0x362]
   14000351c:	call   0x14000906a
   140003521:	mov    rcx,QWORD PTR [rsi+0x8]
   140003525:	lea    rdx,[rbp+0x360]
   14000352c:	mov    r9d,0x1
   140003532:	lea    r8d,[r9+0x4]
   140003536:	call   QWORD PTR [rip+0x6c84]        # 0x14000a1c0
   14000353c:	lea    rdx,[rsp+0x40]
   140003541:	mov    ebx,eax
   140003543:	lea    rcx,[rbp+0x360]
   14000354a:	call   QWORD PTR [rip+0x6cb0]        # 0x14000a200
   140003550:	test   eax,eax
   140003552:	cmove  ebx,r13d
   140003556:	test   ebx,ebx
   140003558:	js     0x14000365e
   14000355e:	lea    rdx,[rbp+0x360]
   140003565:	jmp    0x140003574
   140003567:	test   ebx,ebx
   140003569:	js     0x14000365e
   14000356f:	lea    rdx,[rsp+0x40]
   140003574:	mov    rcx,QWORD PTR [rsi+0x10]
   140003578:	add    rcx,0x30
   14000357c:	call   0x140007780
   140003581:	mov    edi,eax
   140003583:	test   eax,eax
   140003585:	js     0x14000365e
   14000358b:	mov    ecx,0x28
   140003590:	call   0x140008564
   140003595:	mov    rbx,rax
   140003598:	test   rax,rax
   14000359b:	je     0x1400035b1
   14000359d:	mov    DWORD PTR [rax+0x8],0x67727473
   1400035a4:	lea    rax,[rip+0xa045]        # 0x14000d5f0
   1400035ab:	mov    QWORD PTR [rbx+0x10],rax
   1400035af:	jmp    0x1400035b4
   1400035b1:	mov    rbx,r12
   1400035b4:	test   rbx,rbx
   1400035b7:	mov    eax,0x8007000e
   1400035bc:	cmove  edi,eax
   1400035bf:	test   edi,edi
   1400035c1:	js     0x140003648
   1400035c7:	mov    rcx,QWORD PTR [rsi+0x28]
   1400035cb:	test   rcx,rcx
   1400035ce:	cmove  edi,r13d
   1400035d2:	test   edi,edi
   1400035d4:	js     0x140003648
   1400035d6:	call   QWORD PTR [rip+0x6b6c]        # 0x14000a148
   1400035dc:	test   eax,eax
   1400035de:	jne    0x1400035f6
   1400035e0:	call   QWORD PTR [rip+0x6b12]        # 0x14000a0f8
   1400035e6:	movzx  edi,ax
   1400035e9:	or     edi,0x80070000
   1400035ef:	test   eax,eax
   1400035f1:	cmovle edi,eax
   1400035f4:	jmp    0x1400035fe
   1400035f6:	mov    rax,QWORD PTR [rsi+0x28]
   1400035fa:	mov    QWORD PTR [rbx+0x20],rax
   1400035fe:	test   edi,edi
   140003600:	js     0x140003648
   140003602:	mov    rax,QWORD PTR [rsi+0x8]
   140003606:	lea    rdx,[rsp+0x40]
   14000360b:	mov    QWORD PTR [rbx],rax
   14000360e:	mov    rax,QWORD PTR [rsi+0x10]
   140003612:	mov    ecx,DWORD PTR [rax]
   140003614:	mov    DWORD PTR [rbx+0x18],ecx
   140003617:	lea    rcx,[rbx+0x8]
   14000361b:	call   0x140007780
   140003620:	test   eax,eax
   140003622:	js     0x140003648
   140003624:	mov    r8d,0x1
   14000362a:	lea    rcx,[rip+0x1df]        # 0x140003810
   140003631:	mov    rdx,rbx
   140003634:	call   QWORD PTR [rip+0x6b1e]        # 0x14000a158
   14000363a:	test   eax,eax
   14000363c:	jne    0x14000367a
   14000363e:	mov    rcx,rbx
   140003641:	call   0x140003810
   140003646:	jmp    0x14000367a
   140003648:	test   rbx,rbx
   14000364b:	je     0x14000365e
   14000364d:	lea    rcx,[rbx+0x8]
   140003651:	call   0x140007628
   140003656:	mov    rcx,rbx
   140003659:	call   0x140008558
   14000365e:	mov    r8,QWORD PTR [rsi+0x28]
   140003662:	test   r14d,r14d
   140003665:	mov    rcx,QWORD PTR [rsi+0x8]
   140003669:	mov    eax,0x2
   14000366e:	cmove  r14d,eax
   140003672:	mov    edx,r14d
   140003675:	call   0x1400039a4
   14000367a:	mov    rax,QWORD PTR [rsi+0x10]
   14000367e:	mov    DWORD PTR [rax+0x8],0x1
   140003685:	jmp    0x14000368d
   140003687:	mov    r15d,0x1
   14000368d:	lea    rcx,[rsp+0x20]
   140003692:	call   0x140007628
   140003697:	lea    rcx,[rsp+0x30]
   14000369c:	call   0x140007628
   1400036a1:	mov    eax,r15d
   1400036a4:	mov    rcx,QWORD PTR [rbp+0x570]
   1400036ab:	xor    rcx,rsp
   1400036ae:	call   0x140008990
   1400036b3:	lea    r11,[rsp+0x680]
   1400036bb:	mov    rbx,QWORD PTR [r11+0x38]
   1400036bf:	mov    rsi,QWORD PTR [r11+0x40]
   1400036c3:	mov    rdi,QWORD PTR [r11+0x48]
   1400036c7:	mov    rsp,r11
   1400036ca:	pop    r15
   1400036cc:	pop    r14
   1400036ce:	pop    r13
   1400036d0:	pop    r12
   1400036d2:	pop    rbp
   1400036d3:	ret    
   1400036d4:	int3   
   1400036d5:	int3   
   1400036d6:	int3   
   1400036d7:	int3   
   1400036d8:	int3   
   1400036d9:	int3   
   1400036da:	int3   
   1400036db:	int3   
   1400036dc:	int3   
   1400036dd:	int3   
   1400036de:	int3   
   1400036df:	int3   
   1400036e0:	mov    rax,QWORD PTR [rcx+0x10]
   1400036e4:	and    DWORD PTR [rax+0x8],0x0
   1400036e8:	mov    eax,0x1
   1400036ed:	ret    
   1400036ee:	int3   
   1400036ef:	int3   
   1400036f0:	int3   
   1400036f1:	int3   
   1400036f2:	int3   
   1400036f3:	int3   
   1400036f4:	mov    QWORD PTR [rsp+0x18],rbx
   1400036f9:	push   rbp
   1400036fa:	push   rsi
   1400036fb:	push   rdi
   1400036fc:	sub    rsp,0x40
   140003700:	mov    rax,QWORD PTR [rip+0x9901]        # 0x14000d008
   140003707:	xor    rax,rsp
   14000370a:	mov    QWORD PTR [rsp+0x30],rax
   14000370f:	mov    esi,edx
   140003711:	mov    DWORD PTR [rsp+0x20],0x27d8
   140003719:	mov    rdi,rcx
   14000371c:	mov    DWORD PTR [rsp+0x24],0x27d9
   140003724:	mov    DWORD PTR [rsp+0x28],0x27da
   14000372c:	lea    rbx,[rsp+0x20]
   140003731:	mov    ebp,0x3
   140003736:	mov    edx,DWORD PTR [rbx]
   140003738:	mov    rcx,QWORD PTR [rdi+0x8]
   14000373c:	call   QWORD PTR [rip+0x6b56]        # 0x14000a298
   140003742:	mov    rcx,rax
   140003745:	mov    edx,esi
   140003747:	call   QWORD PTR [rip+0x6b33]        # 0x14000a280
   14000374d:	lea    rbx,[rbx+0x4]
   140003751:	sub    rbp,0x1
   140003755:	jne    0x140003736
   140003757:	mov    rax,QWORD PTR [rdi+0x10]
   14000375b:	xor    r8d,r8d
   14000375e:	cmp    DWORD PTR [rax+0x4c],0x2
   140003762:	mov    eax,esi
   140003764:	setne  r8b
   140003768:	or     r8d,0x2
   14000376c:	neg    eax
   14000376e:	sbb    ecx,ecx
   140003770:	and    ecx,r8d
   140003773:	mov    ebx,ecx
   140003775:	mov    rcx,QWORD PTR [rdi+0x8]
   140003779:	call   QWORD PTR [rip+0x6ad9]        # 0x14000a258
   14000377f:	mov    r9d,ebx
   140003782:	xor    r8d,r8d
   140003785:	mov    rcx,rax
   140003788:	mov    edx,0x470
   14000378d:	call   QWORD PTR [rip+0x6a8d]        # 0x14000a220
   140003793:	test   esi,esi
   140003795:	je     0x1400037af
   140003797:	mov    rcx,QWORD PTR [rdi+0x8]
   14000379b:	mov    edx,0x27d9
   1400037a0:	call   QWORD PTR [rip+0x6af2]        # 0x14000a298
   1400037a6:	mov    rcx,rax
   1400037a9:	call   QWORD PTR [rip+0x6af9]        # 0x14000a2a8
   1400037af:	mov    rcx,QWORD PTR [rdi+0x8]
   1400037b3:	neg    esi
   1400037b5:	mov    edx,0x27db
   1400037ba:	sbb    ebx,ebx
   1400037bc:	not    ebx
   1400037be:	and    ebx,0x5
   1400037c1:	call   QWORD PTR [rip+0x6ad1]        # 0x14000a298
   1400037c7:	mov    rcx,rax
   1400037ca:	mov    edx,ebx
   1400037cc:	call   QWORD PTR [rip+0x6ab6]        # 0x14000a288
   1400037d2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400037d7:	xor    rcx,rsp
   1400037da:	call   0x140008990
   1400037df:	mov    rbx,QWORD PTR [rsp+0x70]
   1400037e4:	add    rsp,0x40
   1400037e8:	pop    rdi
   1400037e9:	pop    rsi
   1400037ea:	pop    rbp
   1400037eb:	ret    
   1400037ec:	int3   
   1400037ed:	int3   
   1400037ee:	int3   
   1400037ef:	int3   
   1400037f0:	int3   
   1400037f1:	int3   
   1400037f2:	int3   
   1400037f3:	int3   
   1400037f4:	int3   
   1400037f5:	int3   
   1400037f6:	int3   
   1400037f7:	int3   
   1400037f8:	int3   
   1400037f9:	int3   
   1400037fa:	int3   
   1400037fb:	int3   
   1400037fc:	int3   
   1400037fd:	int3   
   1400037fe:	int3   
   1400037ff:	int3   
   140003800:	mov    eax,0x3ea
   140003805:	ret    
   140003806:	int3   
   140003807:	int3   
   140003808:	int3   
   140003809:	int3   
   14000380a:	int3   
   14000380b:	int3   
   14000380c:	int3   
   14000380d:	int3   
   14000380e:	int3   
   14000380f:	int3   
   140003810:	mov    QWORD PTR [rsp+0x8],rbx
   140003815:	push   rdi
   140003816:	sub    rsp,0x40
   14000381a:	xor    edi,edi
   14000381c:	mov    rbx,rcx
   14000381f:	test   rcx,rcx
   140003822:	jne    0x14000383c
   140003824:	mov    r8,QWORD PTR ds:0x20
   14000382c:	lea    edx,[rcx+0x2]
   14000382f:	mov    rcx,QWORD PTR [rcx]
   140003832:	call   0x1400039a4
   140003837:	jmp    0x1400038f1
   14000383c:	cmp    DWORD PTR [rcx+0x18],edi
   14000383f:	mov    rcx,QWORD PTR [rcx+0x10]
   140003843:	jne    0x140003857
   140003845:	call   0x140003904
   14000384a:	test   eax,eax
   14000384c:	jne    0x1400038d2
   140003852:	lea    edi,[rax+0x3]
   140003855:	jmp    0x1400038d2
   140003857:	call   0x140003904
   14000385c:	mov    rcx,QWORD PTR [rbx+0x10]
   140003860:	xor    r9d,r9d
   140003863:	xor    r8d,r8d
   140003866:	test   eax,eax
   140003868:	je     0x14000389e
   14000386a:	and    QWORD PTR [rsp+0x30],r8
   14000386f:	lea    edi,[r9+0x5]
   140003873:	and    DWORD PTR [rsp+0x28],r8d
   140003878:	mov    edx,0x10002
   14000387d:	mov    DWORD PTR [rsp+0x20],0x3
   140003885:	call   QWORD PTR [rip+0x68ad]        # 0x14000a138
   14000388b:	cmp    rax,0xffffffffffffffff
   14000388f:	jne    0x1400038c9
   140003891:	call   QWORD PTR [rip+0x6861]        # 0x14000a0f8
   140003897:	mov    edi,0x4
   14000389c:	jmp    0x1400038d2
   14000389e:	and    QWORD PTR [rsp+0x30],rdi
   1400038a3:	mov    edx,0x2
   1400038a8:	mov    DWORD PTR [rsp+0x28],0x4000000
   1400038b0:	mov    DWORD PTR [rsp+0x20],0x1
   1400038b8:	call   QWORD PTR [rip+0x687a]        # 0x14000a138
   1400038be:	cmp    rax,0xffffffffffffffff
   1400038c2:	jne    0x1400038c9
   1400038c4:	lea    edi,[rax+0x7]
   1400038c7:	jmp    0x1400038d2
   1400038c9:	mov    rcx,rax
   1400038cc:	call   QWORD PTR [rip+0x688e]        # 0x14000a160
   1400038d2:	mov    r8,QWORD PTR [rbx+0x20]
   1400038d6:	mov    edx,edi
   1400038d8:	mov    rcx,QWORD PTR [rbx]
   1400038db:	call   0x1400039a4
   1400038e0:	lea    rcx,[rbx+0x8]
   1400038e4:	call   0x140007628
   1400038e9:	mov    rcx,rbx
   1400038ec:	call   0x140008558
   1400038f1:	mov    rbx,QWORD PTR [rsp+0x50]
   1400038f6:	add    rsp,0x40
   1400038fa:	pop    rdi
   1400038fb:	ret    
   1400038fc:	int3   
   1400038fd:	int3   
   1400038fe:	int3   
   1400038ff:	int3   
   140003900:	int3   
   140003901:	int3   
   140003902:	int3   
   140003903:	int3   
   140003904:	mov    QWORD PTR [rsp+0x10],rbx
   140003909:	push   rdi
   14000390a:	sub    rsp,0x280
   140003911:	mov    rax,QWORD PTR [rip+0x96f0]        # 0x14000d008
   140003918:	xor    rax,rsp
   14000391b:	mov    QWORD PTR [rsp+0x270],rax
   140003923:	mov    rbx,rcx
   140003926:	xor    edi,edi
   140003928:	lea    rcx,[rsp+0x24]
   14000392d:	mov    DWORD PTR [rsp+0x20],edi
   140003931:	xor    edx,edx
   140003933:	mov    r8d,0x24c
   140003939:	call   0x14000906a
   14000393e:	lea    rdx,[rsp+0x20]
   140003943:	mov    rcx,rbx
   140003946:	call   QWORD PTR [rip+0x67c4]        # 0x14000a110
   14000394c:	cmp    rax,0xffffffffffffffff
   140003950:	jne    0x14000396a
   140003952:	call   QWORD PTR [rip+0x67a0]        # 0x14000a0f8
   140003958:	add    eax,0xfffffffe
   14000395b:	test   eax,0xffffffef
   140003960:	je     0x140003978
   140003962:	call   QWORD PTR [rip+0x6790]        # 0x14000a0f8
   140003968:	jmp    0x140003978
   14000396a:	mov    rcx,rax
   14000396d:	mov    edi,0x1
   140003972:	call   QWORD PTR [rip+0x67c8]        # 0x14000a140
   140003978:	mov    eax,edi
   14000397a:	mov    rcx,QWORD PTR [rsp+0x270]
   140003982:	xor    rcx,rsp
   140003985:	call   0x140008990
   14000398a:	mov    rbx,QWORD PTR [rsp+0x298]
   140003992:	add    rsp,0x280
   140003999:	pop    rdi
   14000399a:	ret    
   14000399b:	int3   
   14000399c:	int3   
   14000399d:	int3   
   14000399e:	int3   
   14000399f:	int3   
   1400039a0:	int3   
   1400039a1:	int3   
   1400039a2:	int3   
   1400039a3:	int3   
   1400039a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400039a9:	push   rdi
   1400039aa:	sub    rsp,0x20
   1400039ae:	mov    rdi,r8
   1400039b1:	xor    r9d,r9d
   1400039b4:	mov    r8d,edx
   1400039b7:	xor    ebx,ebx
   1400039b9:	mov    edx,0x401
   1400039be:	call   QWORD PTR [rip+0x685c]        # 0x14000a220
   1400039c4:	test   eax,eax
   1400039c6:	jne    0x1400039dc
   1400039c8:	call   QWORD PTR [rip+0x672a]        # 0x14000a0f8
   1400039ce:	movzx  ebx,ax
   1400039d1:	or     ebx,0x80070000
   1400039d7:	test   eax,eax
   1400039d9:	cmovle ebx,eax
   1400039dc:	mov    rcx,rdi
   1400039df:	call   QWORD PTR [rip+0x673b]        # 0x14000a120
   1400039e5:	test   eax,eax
   1400039e7:	jne    0x1400039fd
   1400039e9:	call   QWORD PTR [rip+0x6709]        # 0x14000a0f8
   1400039ef:	movzx  ebx,ax
   1400039f2:	or     ebx,0x80070000
   1400039f8:	test   eax,eax
   1400039fa:	cmovle ebx,eax
   1400039fd:	mov    eax,ebx
   1400039ff:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a04:	add    rsp,0x20
   140003a08:	pop    rdi
   140003a09:	ret    
   140003a0a:	int3   
   140003a0b:	int3   
   140003a0c:	int3   
   140003a0d:	int3   
   140003a0e:	int3   
   140003a0f:	int3   
   140003a10:	mov    QWORD PTR [rsp+0x8],rbx
   140003a15:	mov    QWORD PTR [rsp+0x10],rsi
   140003a1a:	mov    QWORD PTR [rsp+0x18],rdi
   140003a1f:	push   rbp
   140003a20:	mov    rbp,rsp
   140003a23:	sub    rsp,0x60
   140003a27:	lea    rax,[rip+0x9bc2]        # 0x14000d5f0
   140003a2e:	mov    rdi,rcx
   140003a31:	mov    ecx,0x67727473
   140003a36:	mov    QWORD PTR [rbp-0x8],rax
   140003a3a:	mov    DWORD PTR [rbp-0x10],ecx
   140003a3d:	lea    rdx,[rbp-0x10]
   140003a41:	mov    DWORD PTR [rbp-0x20],ecx
   140003a44:	mov    DWORD PTR [rbp-0x30],ecx
   140003a47:	mov    rcx,QWORD PTR [rdi+0x18]
   140003a4b:	mov    QWORD PTR [rbp-0x18],rax
   140003a4f:	mov    QWORD PTR [rbp-0x28],rax
   140003a53:	call   0x14000414c
   140003a58:	xor    esi,esi
   140003a5a:	test   eax,eax
   140003a5c:	js     0x140003ac0
   140003a5e:	mov    rbx,QWORD PTR [rbp-0x8]
   140003a62:	mov    ecx,0x80004005
   140003a67:	cmp    WORD PTR [rbx],si
   140003a6a:	cmove  eax,ecx
   140003a6d:	test   eax,eax
   140003a6f:	js     0x140003ac0
   140003a71:	mov    rdx,QWORD PTR [rdi+0x18]
   140003a75:	lea    rcx,[rbp-0x20]
   140003a79:	mov    r8d,0x2904
   140003a7f:	call   0x140007894
   140003a84:	test   eax,eax
   140003a86:	js     0x140003ac0
   140003a88:	mov    rdx,QWORD PTR [rbp-0x18]
   140003a8c:	lea    rcx,[rbp-0x30]
   140003a90:	mov    r8,rbx
   140003a93:	call   0x1400079a8
   140003a98:	test   eax,eax
   140003a9a:	js     0x140003ac0
   140003a9c:	mov    rbx,QWORD PTR [rbp-0x28]
   140003aa0:	cmp    WORD PTR [rbx],si
   140003aa3:	je     0x140003ac0
   140003aa5:	mov    rcx,QWORD PTR [rdi+0x8]
   140003aa9:	mov    edx,0x28a0
   140003aae:	call   QWORD PTR [rip+0x67e4]        # 0x14000a298
   140003ab4:	mov    rcx,rax
   140003ab7:	mov    rdx,rbx
   140003aba:	call   QWORD PTR [rip+0x67b8]        # 0x14000a278
   140003ac0:	mov    rcx,QWORD PTR [rdi+0x8]
   140003ac4:	mov    r9d,0x104
   140003aca:	mov    edx,0x28a4
   140003acf:	mov    QWORD PTR [rsp+0x20],rsi
   140003ad4:	lea    r8d,[r9-0x3f]
   140003ad8:	call   QWORD PTR [rip+0x67b2]        # 0x14000a290
   140003ade:	lea    rcx,[rbp-0x30]
   140003ae2:	call   0x140007628
   140003ae7:	lea    rcx,[rbp-0x20]
   140003aeb:	call   0x140007628
   140003af0:	lea    rcx,[rbp-0x10]
   140003af4:	call   0x140007628
   140003af9:	lea    r11,[rsp+0x60]
   140003afe:	mov    eax,0x1
   140003b03:	mov    rbx,QWORD PTR [r11+0x10]
   140003b07:	mov    rsi,QWORD PTR [r11+0x18]
   140003b0b:	mov    rdi,QWORD PTR [r11+0x20]
   140003b0f:	mov    rsp,r11
   140003b12:	pop    rbp
   140003b13:	ret    
   140003b14:	int3   
   140003b15:	int3   
   140003b16:	int3   
   140003b17:	int3   
   140003b18:	int3   
   140003b19:	int3   
   140003b1a:	int3   
   140003b1b:	int3   
   140003b1c:	int3   
   140003b1d:	int3   
   140003b1e:	int3   
   140003b1f:	int3   
   140003b20:	mov    QWORD PTR [rsp+0x8],rbx
   140003b25:	mov    QWORD PTR [rsp+0x10],rbp
   140003b2a:	mov    QWORD PTR [rsp+0x18],rsi
   140003b2f:	push   rdi
   140003b30:	sub    rsp,0x20
   140003b34:	mov    rax,QWORD PTR [rcx+0x10]
   140003b38:	xor    ebp,ebp
   140003b3a:	mov    rdi,rcx
   140003b3d:	cmp    DWORD PTR [rax],0x1
   140003b40:	mov    ebx,DWORD PTR [rax+0x4]
   140003b43:	jne    0x140003b4b
   140003b45:	cmp    ebx,0x1
   140003b48:	cmove  ebx,ebp
   140003b4b:	mov    rcx,QWORD PTR [rcx+0x8]
   140003b4f:	mov    r8d,0x28a2
   140003b55:	mov    esi,r8d
   140003b58:	cmp    ebx,0x2
   140003b5b:	lea    edx,[r8-0x2]
   140003b5f:	cmovne esi,edx
   140003b62:	mov    r9d,esi
   140003b65:	call   QWORD PTR [rip+0x66a5]        # 0x14000a210
   140003b6b:	test   eax,eax
   140003b6d:	jne    0x140003b75
   140003b6f:	call   QWORD PTR [rip+0x6583]        # 0x14000a0f8
   140003b75:	xor    r8d,r8d
   140003b78:	xor    r9d,r9d
   140003b7b:	movzx  edx,si
   140003b7e:	mov    rcx,rdi
   140003b81:	call   0x140003ce0
   140003b86:	cmp    ebx,0x2
   140003b89:	jne    0x140003bc5
   140003b8b:	mov    rax,QWORD PTR [rdi+0x10]
   140003b8f:	mov    esi,0x28a4
   140003b94:	mov    rcx,QWORD PTR [rdi+0x8]
   140003b98:	mov    edx,esi
   140003b9a:	mov    rbx,QWORD PTR [rax+0x28]
   140003b9e:	call   QWORD PTR [rip+0x66f4]        # 0x14000a298
   140003ba4:	mov    rcx,rax
   140003ba7:	mov    rdx,rbx
   140003baa:	call   QWORD PTR [rip+0x66c8]        # 0x14000a278
   140003bb0:	mov    rcx,QWORD PTR [rdi+0x8]
   140003bb4:	mov    edx,esi
   140003bb6:	call   QWORD PTR [rip+0x66dc]        # 0x14000a298
   140003bbc:	mov    rcx,rax
   140003bbf:	call   QWORD PTR [rip+0x66e3]        # 0x14000a2a8
   140003bc5:	mov    rbx,QWORD PTR [rsp+0x30]
   140003bca:	mov    eax,0x1
   140003bcf:	mov    rsi,QWORD PTR [rsp+0x40]
   140003bd4:	mov    DWORD PTR [rdi+0x30],ebp
   140003bd7:	mov    rbp,QWORD PTR [rsp+0x38]
   140003bdc:	add    rsp,0x20
   140003be0:	pop    rdi
   140003be1:	ret    
   140003be2:	int3   
   140003be3:	int3   
   140003be4:	int3   
   140003be5:	int3   
   140003be6:	int3   
   140003be7:	int3   
   140003be8:	int3   
   140003be9:	int3   
   140003bea:	int3   
   140003beb:	int3   
   140003bec:	int3   
   140003bed:	int3   
   140003bee:	int3   
   140003bef:	int3   
   140003bf0:	mov    QWORD PTR [rsp+0x8],rbx
   140003bf5:	push   rdi
   140003bf6:	sub    rsp,0x40
   140003bfa:	lea    rax,[rip+0x99ef]        # 0x14000d5f0
   140003c01:	mov    rbx,rcx
   140003c04:	mov    QWORD PTR [rsp+0x38],rax
   140003c09:	mov    ecx,0x67727473
   140003c0e:	mov    DWORD PTR [rsp+0x30],ecx
   140003c12:	mov    DWORD PTR [rsp+0x20],ecx
   140003c16:	mov    QWORD PTR [rsp+0x28],rax
   140003c1b:	cmp    edx,0x402
   140003c21:	je     0x140003c2f
   140003c23:	mov    rcx,rbx
   140003c26:	call   0x140001fb0
   140003c2b:	mov    edi,eax
   140003c2d:	jmp    0x140003cac
   140003c2f:	mov    edi,0x1
   140003c34:	test   r8,r8
   140003c37:	je     0x140003c6f
   140003c39:	sub    r8,0x2
   140003c3d:	je     0x140003c5a
   140003c3f:	sub    r8,rdi
   140003c42:	je     0x140003c52
   140003c44:	cmp    r8,0x3
   140003c48:	jne    0x140003c7a
   140003c4a:	mov    r8d,0x4e24
   140003c50:	jmp    0x140003c60
   140003c52:	mov    r8d,0x4e25
   140003c58:	jmp    0x140003c60
   140003c5a:	mov    r8d,0x4e23
   140003c60:	mov    rdx,QWORD PTR [rbx+0x18]
   140003c64:	mov    rcx,QWORD PTR [rbx+0x8]
   140003c68:	call   0x140006130
   140003c6d:	jmp    0x140003c7a
   140003c6f:	mov    rax,QWORD PTR [rbx+0x10]
   140003c73:	mov    DWORD PTR [rbx+0x30],edi
   140003c76:	and    DWORD PTR [rax+0x8],0x0
   140003c7a:	mov    edx,edi
   140003c7c:	mov    rcx,rbx
   140003c7f:	call   0x14000401c
   140003c84:	mov    rax,QWORD PTR [rbx+0x10]
   140003c88:	cmp    DWORD PTR [rax+0x8],0x0
   140003c8c:	jne    0x140003cac
   140003c8e:	mov    rcx,QWORD PTR [rbx+0x8]
   140003c92:	call   QWORD PTR [rip+0x65c0]        # 0x14000a258
   140003c98:	xor    r9d,r9d
   140003c9b:	mov    r8,rdi
   140003c9e:	mov    rcx,rax
   140003ca1:	mov    edx,0x471
   140003ca6:	call   QWORD PTR [rip+0x6574]        # 0x14000a220
   140003cac:	lea    rcx,[rsp+0x20]
   140003cb1:	call   0x140007628
   140003cb6:	lea    rcx,[rsp+0x30]
   140003cbb:	call   0x140007628
   140003cc0:	mov    rbx,QWORD PTR [rsp+0x50]
   140003cc5:	mov    eax,edi
   140003cc7:	add    rsp,0x40
   140003ccb:	pop    rdi
   140003ccc:	ret    
   140003ccd:	int3   
   140003cce:	int3   
   140003ccf:	int3   
   140003cd0:	int3   
   140003cd1:	int3   
   140003cd2:	int3   
   140003cd3:	int3   
   140003cd4:	int3   
   140003cd5:	int3   
   140003cd6:	int3   
   140003cd7:	int3   
   140003cd8:	int3   
   140003cd9:	int3   
   140003cda:	int3   
   140003cdb:	int3   
   140003cdc:	int3   
   140003cdd:	int3   
   140003cde:	int3   
   140003cdf:	int3   
   140003ce0:	rex push rbx
   140003ce2:	sub    rsp,0x20
   140003ce6:	movzx  r8d,dx
   140003cea:	sub    r8d,0x27da
   140003cf1:	je     0x140003d1d
   140003cf3:	sub    r8d,0xc6
   140003cfa:	je     0x140003d14
   140003cfc:	cmp    r8d,0x2
   140003d00:	je     0x140003d06
   140003d02:	xor    ebx,ebx
   140003d04:	jmp    0x140003d27
   140003d06:	mov    ebx,0x1
   140003d0b:	mov    edx,ebx
   140003d0d:	call   0x14000424c
   140003d12:	jmp    0x140003d27
   140003d14:	xor    edx,edx
   140003d16:	call   0x14000424c
   140003d1b:	jmp    0x140003d22
   140003d1d:	call   0x1400042ec
   140003d22:	mov    ebx,0x1
   140003d27:	mov    eax,ebx
   140003d29:	add    rsp,0x20
   140003d2d:	pop    rbx
   140003d2e:	ret    
   140003d2f:	int3   
   140003d30:	int3   
   140003d31:	int3   
   140003d32:	int3   
   140003d33:	int3   
   140003d34:	int3   
   140003d35:	int3   
   140003d36:	int3   
   140003d37:	int3   
   140003d38:	int3   
   140003d39:	int3   
   140003d3a:	int3   
   140003d3b:	int3   
   140003d3c:	int3   
   140003d3d:	int3   
   140003d3e:	int3   
   140003d3f:	int3   
   140003d40:	mov    rax,rsp
   140003d43:	mov    QWORD PTR [rax+0x10],rbx
   140003d47:	mov    QWORD PTR [rax+0x18],rsi
   140003d4b:	mov    QWORD PTR [rax+0x20],rdi
   140003d4f:	push   rbp
   140003d50:	push   r13
   140003d52:	push   r14
   140003d54:	lea    rbp,[rax-0x168]
   140003d5b:	sub    rsp,0x250
   140003d62:	mov    rax,QWORD PTR [rip+0x929f]        # 0x14000d008
   140003d69:	xor    rax,rsp
   140003d6c:	mov    QWORD PTR [rbp+0x140],rax
   140003d73:	mov    rbx,rcx
   140003d76:	xor    r14d,r14d
   140003d79:	lea    rcx,[rsp+0x32]
   140003d7e:	mov    WORD PTR [rsp+0x30],r14w
   140003d84:	xor    edx,edx
   140003d86:	mov    r8d,0x206
   140003d8c:	mov    esi,r14d
   140003d8f:	call   0x14000906a
   140003d94:	mov    rax,QWORD PTR [rbx+0x10]
   140003d98:	lea    r13,[rip+0x9851]        # 0x14000d5f0
   140003d9f:	mov    DWORD PTR [rsp+0x20],0x67727473
   140003da7:	lea    edi,[r14+0x1]
   140003dab:	mov    QWORD PTR [rsp+0x28],r13
   140003db0:	mov    DWORD PTR [rax+0x8],r14d
   140003db4:	cmp    DWORD PTR [rbx+0x30],r14d
   140003db8:	jne    0x140003fdd
   140003dbe:	mov    rcx,QWORD PTR [rbx+0x8]
   140003dc2:	mov    edx,0x28a0
   140003dc7:	call   QWORD PTR [rip+0x64a3]        # 0x14000a270
   140003dcd:	cmp    eax,edi
   140003dcf:	jne    0x140003df1
   140003dd1:	mov    rax,QWORD PTR [rbx+0x10]
   140003dd5:	mov    DWORD PTR [rax+0x4],r14d
   140003dd9:	mov    rdx,QWORD PTR [rbx+0x10]
   140003ddd:	mov    rcx,QWORD PTR [rbx+0x18]
   140003de1:	add    rdx,0x20
   140003de5:	call   0x14000414c
   140003dea:	mov    esi,eax
   140003dec:	jmp    0x140003edb
   140003df1:	mov    rcx,QWORD PTR [rbx+0x8]
   140003df5:	mov    edx,0x28a2
   140003dfa:	call   QWORD PTR [rip+0x6470]        # 0x14000a270
   140003e00:	cmp    eax,edi
   140003e02:	jne    0x140003edb
   140003e08:	mov    rax,QWORD PTR [rbx+0x10]
   140003e0c:	mov    r13d,0x28a4
   140003e12:	mov    edx,r13d
   140003e15:	mov    DWORD PTR [rax+0x4],0x2
   140003e1c:	mov    rcx,QWORD PTR [rbx+0x8]
   140003e20:	call   QWORD PTR [rip+0x6472]        # 0x14000a298
   140003e26:	mov    r8d,0x104
   140003e2c:	lea    rdx,[rsp+0x30]
   140003e31:	mov    rcx,rax
   140003e34:	call   QWORD PTR [rip+0x6466]        # 0x14000a2a0
   140003e3a:	test   eax,eax
   140003e3c:	jne    0x140003e56
   140003e3e:	call   QWORD PTR [rip+0x62b4]        # 0x14000a0f8
   140003e44:	movzx  esi,ax
   140003e47:	or     esi,0x80070000
   140003e4d:	test   eax,eax
   140003e4f:	cmovle esi,eax
   140003e52:	test   esi,esi
   140003e54:	js     0x140003ed4
   140003e56:	mov    r8d,0x2
   140003e5c:	lea    rdx,[rip+0x67a5]        # 0x14000a608
   140003e63:	lea    rcx,[rsp+0x30]
   140003e68:	call   QWORD PTR [rip+0x64a2]        # 0x14000a310
   140003e6e:	test   eax,eax
   140003e70:	je     0x140003ea5
   140003e72:	mov    rdx,QWORD PTR [rbx+0x18]
   140003e76:	lea    rcx,[rsp+0x20]
   140003e7b:	mov    r8d,0x2906
   140003e81:	call   0x140007894
   140003e86:	mov    esi,eax
   140003e88:	test   eax,eax
   140003e8a:	js     0x140003ed4
   140003e8c:	mov    rcx,QWORD PTR [rbx+0x10]
   140003e90:	lea    r8,[rsp+0x30]
   140003e95:	mov    rdx,QWORD PTR [rsp+0x28]
   140003e9a:	add    rcx,0x20
   140003e9e:	call   0x1400079a8
   140003ea3:	jmp    0x140003ed2
   140003ea5:	mov    rcx,QWORD PTR [rbx+0x8]
   140003ea9:	mov    edx,r13d
   140003eac:	call   QWORD PTR [rip+0x63e6]        # 0x14000a298
   140003eb2:	mov    rcx,rax
   140003eb5:	lea    rdx,[rsp+0x30]
   140003eba:	call   QWORD PTR [rip+0x63b8]        # 0x14000a278
   140003ec0:	mov    rcx,QWORD PTR [rbx+0x10]
   140003ec4:	lea    rdx,[rsp+0x30]
   140003ec9:	add    rcx,0x20
   140003ecd:	call   0x140007780
   140003ed2:	mov    esi,eax
   140003ed4:	lea    r13,[rip+0x9715]        # 0x14000d5f0
   140003edb:	mov    rax,QWORD PTR [rbx+0x10]
   140003edf:	test   DWORD PTR [rax+0x4],0xfffffffd
   140003ee6:	jne    0x140003fdd
   140003eec:	xor    edx,edx
   140003eee:	mov    rcx,rbx
   140003ef1:	call   0x14000401c
   140003ef6:	test   esi,esi
   140003ef8:	js     0x140003fbd
   140003efe:	cmp    QWORD PTR [rbx+0x28],r14
   140003f02:	mov    eax,0x80004005
   140003f07:	cmove  esi,eax
   140003f0a:	test   esi,esi
   140003f0c:	js     0x140003fbd
   140003f12:	mov    ecx,0x30
   140003f17:	call   0x140008564
   140003f1c:	mov    rdi,rax
   140003f1f:	test   rax,rax
   140003f22:	je     0x140003f31
   140003f24:	mov    DWORD PTR [rax+0x8],0x67727473
   140003f2b:	mov    QWORD PTR [rax+0x10],r13
   140003f2f:	jmp    0x140003f34
   140003f31:	mov    rdi,r14
   140003f34:	test   rdi,rdi
   140003f37:	mov    eax,0x8007000e
   140003f3c:	cmove  esi,eax
   140003f3f:	test   esi,esi
   140003f41:	js     0x140003fa7
   140003f43:	mov    rax,QWORD PTR [rbx+0x8]
   140003f47:	mov    QWORD PTR [rdi],rax
   140003f4a:	mov    rax,QWORD PTR [rbx+0x10]
   140003f4e:	mov    ecx,DWORD PTR [rax]
   140003f50:	mov    DWORD PTR [rdi+0x18],ecx
   140003f53:	lea    rcx,[rdi+0x8]
   140003f57:	mov    rax,QWORD PTR [rbx+0x28]
   140003f5b:	mov    QWORD PTR [rdi+0x20],rax
   140003f5f:	mov    rax,QWORD PTR [rbx+0x10]
   140003f63:	mov    rdx,QWORD PTR [rax+0x28]
   140003f67:	call   0x140007780
   140003f6c:	mov    rdx,QWORD PTR [rbx+0x10]
   140003f70:	mov    r8d,r14d
   140003f73:	cmp    DWORD PTR [rdx+0x4],r14d
   140003f77:	sete   r8b
   140003f7b:	mov    DWORD PTR [rdi+0x28],r8d
   140003f7f:	test   eax,eax
   140003f81:	js     0x140003fa7
   140003f83:	mov    r8d,0x1
   140003f89:	lea    rcx,[rip+0x780]        # 0x140004710
   140003f90:	mov    rdx,rdi
   140003f93:	call   QWORD PTR [rip+0x61bf]        # 0x14000a158
   140003f99:	test   eax,eax
   140003f9b:	jne    0x140003fcf
   140003f9d:	mov    rcx,rdi
   140003fa0:	call   0x140004710
   140003fa5:	jmp    0x140003fcf
   140003fa7:	test   rdi,rdi
   140003faa:	je     0x140003fbd
   140003fac:	lea    rcx,[rdi+0x8]
   140003fb0:	call   0x140007628
   140003fb5:	mov    rcx,rdi
   140003fb8:	call   0x140008558
   140003fbd:	mov    r8,QWORD PTR [rbx+0x28]
   140003fc1:	mov    edx,0x2
   140003fc6:	mov    rcx,QWORD PTR [rbx+0x8]
   140003fca:	call   0x1400047e8
   140003fcf:	mov    rcx,QWORD PTR [rbx+0x10]
   140003fd3:	mov    edi,r14d
   140003fd6:	mov    DWORD PTR [rcx+0x8],0x1
   140003fdd:	lea    rcx,[rsp+0x20]
   140003fe2:	call   0x140007628
   140003fe7:	mov    eax,edi
   140003fe9:	mov    rcx,QWORD PTR [rbp+0x140]
   140003ff0:	xor    rcx,rsp
   140003ff3:	call   0x140008990
   140003ff8:	lea    r11,[rsp+0x250]
   140004000:	mov    rbx,QWORD PTR [r11+0x28]
   140004004:	mov    rsi,QWORD PTR [r11+0x30]
   140004008:	mov    rdi,QWORD PTR [r11+0x38]
   14000400c:	mov    rsp,r11
   14000400f:	pop    r14
   140004011:	pop    r13
   140004013:	pop    rbp
   140004014:	ret    
   140004015:	int3   
   140004016:	int3   
   140004017:	int3   
   140004018:	int3   
   140004019:	int3   
   14000401a:	int3   
   14000401b:	int3   
   14000401c:	mov    QWORD PTR [rsp+0x18],rbx
   140004021:	push   rbp
   140004022:	push   rsi
   140004023:	push   rdi
   140004024:	sub    rsp,0x40
   140004028:	mov    rax,QWORD PTR [rip+0x8fd9]        # 0x14000d008
   14000402f:	xor    rax,rsp
   140004032:	mov    QWORD PTR [rsp+0x30],rax
   140004037:	mov    esi,edx
   140004039:	mov    DWORD PTR [rsp+0x20],0x28a0
   140004041:	mov    rdi,rcx
   140004044:	mov    DWORD PTR [rsp+0x24],0x28a2
   14000404c:	mov    DWORD PTR [rsp+0x28],0x28a4
   140004054:	lea    rbx,[rsp+0x20]
   140004059:	mov    DWORD PTR [rsp+0x2c],0x27da
   140004061:	mov    ebp,0x4
   140004066:	mov    edx,DWORD PTR [rbx]
   140004068:	mov    rcx,QWORD PTR [rdi+0x8]
   14000406c:	call   QWORD PTR [rip+0x6226]        # 0x14000a298
   140004072:	mov    rcx,rax
   140004075:	mov    edx,esi
   140004077:	call   QWORD PTR [rip+0x6203]        # 0x14000a280
   14000407d:	lea    rbx,[rbx+0x4]
   140004081:	sub    rbp,0x1
   140004085:	jne    0x140004066
   140004087:	test   esi,esi
   140004089:	je     0x1400040d4
   14000408b:	mov    rax,QWORD PTR [rdi+0x10]
   14000408f:	lea    ebx,[rbp+0x2]
   140004092:	cmp    DWORD PTR [rax+0x4],ebx
   140004095:	jne    0x1400040af
   140004097:	mov    rcx,QWORD PTR [rdi+0x8]
   14000409b:	mov    edx,0x28a4
   1400040a0:	call   QWORD PTR [rip+0x61f2]        # 0x14000a298
   1400040a6:	mov    rcx,rax
   1400040a9:	call   QWORD PTR [rip+0x61f9]        # 0x14000a2a8
   1400040af:	mov    rcx,QWORD PTR [rdi+0x10]
   1400040b3:	mov    eax,0x3
   1400040b8:	cmp    DWORD PTR [rcx],0x1
   1400040bb:	jne    0x1400040c3
   1400040bd:	cmp    DWORD PTR [rcx+0x4c],ebx
   1400040c0:	cmove  eax,ebx
   1400040c3:	mov    rcx,QWORD PTR [rdi+0x8]
   1400040c7:	mov    ebx,eax
   1400040c9:	call   QWORD PTR [rip+0x6189]        # 0x14000a258
   1400040cf:	mov    r9d,ebx
   1400040d2:	jmp    0x1400040e1
   1400040d4:	mov    rcx,QWORD PTR [rdi+0x8]
   1400040d8:	call   QWORD PTR [rip+0x617a]        # 0x14000a258
   1400040de:	xor    r9d,r9d
   1400040e1:	xor    r8d,r8d
   1400040e4:	mov    edx,0x470
   1400040e9:	mov    rcx,rax
   1400040ec:	call   QWORD PTR [rip+0x612e]        # 0x14000a220
   1400040f2:	mov    rcx,QWORD PTR [rdi+0x8]
   1400040f6:	neg    esi
   1400040f8:	mov    edx,0x27db
   1400040fd:	sbb    ebx,ebx
   1400040ff:	not    ebx
   140004101:	and    ebx,0x5
   140004104:	call   QWORD PTR [rip+0x618e]        # 0x14000a298
   14000410a:	mov    rcx,rax
   14000410d:	mov    edx,ebx
   14000410f:	call   QWORD PTR [rip+0x6173]        # 0x14000a288
   140004115:	mov    rcx,QWORD PTR [rsp+0x30]
   14000411a:	xor    rcx,rsp
   14000411d:	call   0x140008990
   140004122:	mov    rbx,QWORD PTR [rsp+0x70]
   140004127:	add    rsp,0x40
   14000412b:	pop    rdi
   14000412c:	pop    rsi
   14000412d:	pop    rbp
   14000412e:	ret    
   14000412f:	int3   
   140004130:	int3   
   140004131:	int3   
   140004132:	int3   
   140004133:	int3   
   140004134:	int3   
   140004135:	int3   
   140004136:	int3   
   140004137:	int3   
   140004138:	int3   
   140004139:	int3   
   14000413a:	int3   
   14000413b:	int3   
   14000413c:	int3   
   14000413d:	int3   
   14000413e:	int3   
   14000413f:	int3   
   140004140:	mov    eax,0x3e9
   140004145:	ret    
   140004146:	int3   
   140004147:	int3   
   140004148:	int3   
   140004149:	int3   
   14000414a:	int3   
   14000414b:	int3   
   14000414c:	mov    rax,rsp
   14000414f:	mov    QWORD PTR [rax+0x8],rbx
   140004153:	mov    QWORD PTR [rax+0x10],rbp
   140004157:	mov    QWORD PTR [rax+0x20],rsi
   14000415b:	push   rdi
   14000415c:	sub    rsp,0x30
   140004160:	mov    DWORD PTR [rax-0x18],0x67727473
   140004167:	lea    r8,[rsp+0x50]
   14000416c:	xor    edi,edi
   14000416e:	mov    rbp,rdx
   140004171:	and    DWORD PTR [rax+0x18],edi
   140004174:	mov    rsi,rcx
   140004177:	lea    rax,[rip+0x9472]        # 0x14000d5f0
   14000417e:	xor    edx,edx
   140004180:	mov    QWORD PTR [rsp+0x28],rax
   140004185:	lea    ecx,[rdi+0x5]
   140004188:	call   QWORD PTR [rip+0x5fda]        # 0x14000a168
   14000418e:	test   eax,eax
   140004190:	jne    0x1400041eb
   140004192:	mov    edx,DWORD PTR [rsp+0x50]
   140004196:	lea    eax,[rdi+0x2]
   140004199:	mul    rdx
   14000419c:	lea    rdx,[rdi-0x1]
   1400041a0:	cmovo  rax,rdx
   1400041a4:	mov    rcx,rax
   1400041a7:	call   0x140008564
   1400041ac:	mov    rdi,rax
   1400041af:	lea    r8,[rsp+0x50]
   1400041b4:	xor    ebx,ebx
   1400041b6:	mov    eax,0x8007000e
   1400041bb:	test   rdi,rdi
   1400041be:	mov    rdx,rdi
   1400041c1:	mov    ecx,0x5
   1400041c6:	cmove  ebx,eax
   1400041c9:	call   QWORD PTR [rip+0x5f99]        # 0x14000a168
   1400041cf:	test   eax,eax
   1400041d1:	jne    0x1400041e7
   1400041d3:	call   QWORD PTR [rip+0x5f1f]        # 0x14000a0f8
   1400041d9:	movzx  ebx,ax
   1400041dc:	or     ebx,0x80070000
   1400041e2:	test   eax,eax
   1400041e4:	cmovle ebx,eax
   1400041e7:	test   ebx,ebx
   1400041e9:	js     0x140004216
   1400041eb:	mov    r8d,0x2906
   1400041f1:	lea    rcx,[rsp+0x20]
   1400041f6:	mov    rdx,rsi
   1400041f9:	call   0x140007894
   1400041fe:	mov    ebx,eax
   140004200:	test   eax,eax
   140004202:	js     0x140004216
   140004204:	mov    rdx,QWORD PTR [rsp+0x28]
   140004209:	mov    r8,rdi
   14000420c:	mov    rcx,rbp
   14000420f:	call   0x1400079a8
   140004214:	mov    ebx,eax
   140004216:	test   rdi,rdi
   140004219:	je     0x140004223
   14000421b:	mov    rcx,rdi
   14000421e:	call   0x140008558
   140004223:	lea    rcx,[rsp+0x20]
   140004228:	call   0x140007628
   14000422d:	mov    rbp,QWORD PTR [rsp+0x48]
   140004232:	mov    eax,ebx
   140004234:	mov    rbx,QWORD PTR [rsp+0x40]
   140004239:	mov    rsi,QWORD PTR [rsp+0x58]
   14000423e:	add    rsp,0x30
   140004242:	pop    rdi
   140004243:	ret    
   140004244:	int3   
   140004245:	int3   
   140004246:	int3   
   140004247:	int3   
   140004248:	int3   
   140004249:	int3   
   14000424a:	int3   
   14000424b:	int3   
   14000424c:	mov    QWORD PTR [rsp+0x18],rbx
   140004251:	push   rbp
   140004252:	push   rsi
   140004253:	push   rdi
   140004254:	sub    rsp,0x40
   140004258:	mov    rax,QWORD PTR [rip+0x8da9]        # 0x14000d008
   14000425f:	xor    rax,rsp
   140004262:	mov    QWORD PTR [rsp+0x30],rax
   140004267:	mov    ebx,edx
   140004269:	mov    DWORD PTR [rsp+0x20],0x28a3
   140004271:	mov    rsi,rcx
   140004274:	mov    DWORD PTR [rsp+0x24],0x28a4
   14000427c:	mov    DWORD PTR [rsp+0x28],0x27da
   140004284:	lea    rdi,[rsp+0x20]
   140004289:	mov    ebp,0x3
   14000428e:	mov    edx,DWORD PTR [rdi]
   140004290:	mov    rcx,QWORD PTR [rsi+0x8]
   140004294:	call   QWORD PTR [rip+0x5ffe]        # 0x14000a298
   14000429a:	mov    rcx,rax
   14000429d:	mov    edx,ebx
   14000429f:	call   QWORD PTR [rip+0x5fdb]        # 0x14000a280
   1400042a5:	lea    rdi,[rdi+0x4]
   1400042a9:	sub    rbp,0x1
   1400042ad:	jne    0x14000428e
   1400042af:	test   ebx,ebx
   1400042b1:	je     0x1400042cb
   1400042b3:	mov    rcx,QWORD PTR [rsi+0x8]
   1400042b7:	mov    edx,0x28a4
   1400042bc:	call   QWORD PTR [rip+0x5fd6]        # 0x14000a298
   1400042c2:	mov    rcx,rax
   1400042c5:	call   QWORD PTR [rip+0x5fdd]        # 0x14000a2a8
   1400042cb:	mov    rcx,QWORD PTR [rsp+0x30]
   1400042d0:	xor    rcx,rsp
   1400042d3:	call   0x140008990
   1400042d8:	mov    rbx,QWORD PTR [rsp+0x70]
   1400042dd:	add    rsp,0x40
   1400042e1:	pop    rdi
   1400042e2:	pop    rsi
   1400042e3:	pop    rbp
   1400042e4:	ret    
   1400042e5:	int3   
   1400042e6:	int3   
   1400042e7:	int3   
   1400042e8:	int3   
   1400042e9:	int3   
   1400042ea:	int3   
   1400042eb:	int3   
   1400042ec:	rex push rbp
   1400042ee:	push   rbx
   1400042ef:	push   rsi
   1400042f0:	push   rdi
   1400042f1:	push   r12
   1400042f3:	push   r14
   1400042f5:	push   r15
   1400042f7:	lea    rbp,[rsp-0x27]
   1400042fc:	sub    rsp,0x90
   140004303:	and    QWORD PTR [rbp+0x7f],0x0
   140004308:	lea    rax,[rip+0x92e1]        # 0x14000d5f0
   14000430f:	xor    r14d,r14d
   140004312:	mov    QWORD PTR [rbp+0x17],rax
   140004316:	and    QWORD PTR [rbp-0x39],r14
   14000431a:	mov    r15,rcx
   14000431d:	and    QWORD PTR [rbp-0x31],r14
   140004321:	mov    ecx,0x67727473
   140004326:	and    DWORD PTR [rbp+0x6f],r14d
   14000432a:	mov    r8d,0x2905
   140004330:	and    QWORD PTR [rbp-0x19],r14
   140004334:	mov    rdx,QWORD PTR [r15+0x18]
   140004338:	and    DWORD PTR [rbp+0x77],r14d
   14000433c:	mov    DWORD PTR [rbp+0xf],ecx
   14000433f:	mov    DWORD PTR [rbp-0x1],ecx
   140004342:	mov    DWORD PTR [rbp-0x11],ecx
   140004345:	lea    rcx,[rbp+0xf]
   140004349:	mov    QWORD PTR [rbp+0x7],rax
   14000434d:	mov    QWORD PTR [rbp-0x9],rax
   140004351:	call   0x140007894
   140004356:	test   eax,eax
   140004358:	js     0x140004652
   14000435e:	mov    rdx,QWORD PTR [r15+0x18]
   140004362:	lea    rcx,[rbp-0x1]
   140004366:	mov    r8d,0x2908
   14000436c:	call   0x140007894
   140004371:	test   eax,eax
   140004373:	js     0x140004652
   140004379:	mov    rdx,QWORD PTR [r15+0x18]
   14000437d:	lea    rcx,[rbp-0x11]
   140004381:	mov    r8d,0x2907
   140004387:	call   0x140007894
   14000438c:	test   eax,eax
   14000438e:	js     0x140004652
   140004394:	lea    rax,[rbp+0x7f]
   140004398:	xor    r8d,r8d
   14000439b:	lea    r9,[rip+0x6c8e]        # 0x14000b030
   1400043a2:	mov    QWORD PTR [rsp+0x20],rax
   1400043a7:	lea    rdx,[rip+0x6c62]        # 0x14000b010
   1400043ae:	xor    ecx,ecx
   1400043b0:	call   QWORD PTR [rip+0x5e2a]        # 0x14000a1e0
   1400043b6:	mov    ebx,eax
   1400043b8:	test   eax,eax
   1400043ba:	js     0x140004652
   1400043c0:	lea    ecx,[r14+0x10]
   1400043c4:	call   0x140008564
   1400043c9:	mov    r14,rax
   1400043cc:	test   rax,rax
   1400043cf:	je     0x1400043ea
   1400043d1:	and    DWORD PTR [r14+0xc],0x0
   1400043d6:	lea    rax,[rip+0x6553]        # 0x14000a930
   1400043dd:	mov    QWORD PTR [r14],rax
   1400043e0:	mov    DWORD PTR [r14+0x8],0x1
   1400043e8:	jmp    0x1400043ed
   1400043ea:	xor    r14d,r14d
   1400043ed:	test   r14,r14
   1400043f0:	mov    eax,0x8007000e
   1400043f5:	cmove  ebx,eax
   1400043f8:	test   ebx,ebx
   1400043fa:	js     0x140004652
   140004400:	mov    rax,QWORD PTR [r14]
   140004403:	mov    rbx,QWORD PTR [rax]
   140004406:	mov    rcx,rbx
   140004409:	call   QWORD PTR [rip+0x6011]        # 0x14000a420
   14000440f:	lea    r8,[rbp-0x39]
   140004413:	mov    rcx,r14
   140004416:	lea    rdx,[rip+0x6c03]        # 0x14000b020
   14000441d:	call   rbx
   14000441f:	test   eax,eax
   140004421:	js     0x140004652
   140004427:	mov    rdi,QWORD PTR [rbp+0x7f]
   14000442b:	mov    rax,QWORD PTR [rdi]
   14000442e:	mov    rbx,QWORD PTR [rax+0x38]
   140004432:	mov    rcx,rbx
   140004435:	call   QWORD PTR [rip+0x5fe5]        # 0x14000a420
   14000443b:	mov    rdx,QWORD PTR [rbp-0x39]
   14000443f:	lea    r8,[rbp+0x77]
   140004443:	mov    rcx,rdi
   140004446:	call   rbx
   140004448:	xor    r12d,r12d
   14000444b:	test   eax,eax
   14000444d:	setns  r12b
   140004451:	test   eax,eax
   140004453:	js     0x14000462c
   140004459:	mov    rdi,QWORD PTR [rbp+0x7f]
   14000445d:	mov    rax,QWORD PTR [rdi]
   140004460:	mov    rbx,QWORD PTR [rax+0x50]
   140004464:	mov    rcx,rbx
   140004467:	call   QWORD PTR [rip+0x5fb3]        # 0x14000a420
   14000446d:	lea    rdx,[rbp+0x6f]
   140004471:	mov    rcx,rdi
   140004474:	call   rbx
   140004476:	test   eax,eax
   140004478:	js     0x14000462c
   14000447e:	mov    rsi,QWORD PTR [rbp+0x7f]
   140004482:	mov    ebx,DWORD PTR [rbp+0x6f]
   140004485:	or     ebx,0xa0
   14000448b:	mov    rax,QWORD PTR [rsi]
   14000448e:	mov    rdi,QWORD PTR [rax+0x48]
   140004492:	mov    rcx,rdi
   140004495:	call   QWORD PTR [rip+0x5f85]        # 0x14000a420
   14000449b:	mov    edx,ebx
   14000449d:	mov    rcx,rsi
   1400044a0:	call   rdi
   1400044a2:	test   eax,eax
   1400044a4:	js     0x14000462c
   1400044aa:	mov    rdi,QWORD PTR [rbp+0x7f]
   1400044ae:	mov    rax,QWORD PTR [rdi]
   1400044b1:	mov    rbx,QWORD PTR [rax+0x88]
   1400044b8:	mov    rcx,rbx
   1400044bb:	call   QWORD PTR [rip+0x5f5f]        # 0x14000a420
   1400044c1:	mov    rdx,QWORD PTR [rbp+0x17]
   1400044c5:	mov    rcx,rdi
   1400044c8:	call   rbx
   1400044ca:	test   eax,eax
   1400044cc:	js     0x14000462c
   1400044d2:	mov    rdi,QWORD PTR [rbp+0x7f]
   1400044d6:	mov    rax,QWORD PTR [rdi]
   1400044d9:	mov    rbx,QWORD PTR [rax+0x98]
   1400044e0:	mov    rcx,rbx
   1400044e3:	call   QWORD PTR [rip+0x5f37]        # 0x14000a420
   1400044e9:	mov    rdx,QWORD PTR [rbp-0x9]
   1400044ed:	mov    rcx,rdi
   1400044f0:	call   rbx
   1400044f2:	test   eax,eax
   1400044f4:	js     0x14000462c
   1400044fa:	mov    rdi,QWORD PTR [rbp+0x7f]
   1400044fe:	mov    rax,QWORD PTR [rdi]
   140004501:	mov    rbx,QWORD PTR [rax+0x90]
   140004508:	mov    rcx,rbx
   14000450b:	call   QWORD PTR [rip+0x5f0f]        # 0x14000a420
   140004511:	mov    rdx,QWORD PTR [rbp+0x7]
   140004515:	mov    rcx,rdi
   140004518:	call   rbx
   14000451a:	test   eax,eax
   14000451c:	js     0x14000462c
   140004522:	lea    r9,[rbp-0x21]
   140004526:	xor    r8d,r8d
   140004529:	mov    edx,0x8000
   14000452e:	lea    rcx,[rip+0x6b0b]        # 0x14000b040
   140004535:	call   QWORD PTR [rip+0x5c8d]        # 0x14000a1c8
   14000453b:	test   eax,eax
   14000453d:	js     0x14000462c
   140004543:	mov    rcx,QWORD PTR [rbp-0x21]
   140004547:	lea    r8,[rbp-0x29]
   14000454b:	lea    rdx,[rip+0x6546]        # 0x14000aa98
   140004552:	call   QWORD PTR [rip+0x5c78]        # 0x14000a1d0
   140004558:	mov    esi,eax
   14000455a:	test   eax,eax
   14000455c:	js     0x140004596
   14000455e:	mov    rdi,QWORD PTR [rbp+0x7f]
   140004562:	mov    rax,QWORD PTR [rdi]
   140004565:	mov    rbx,QWORD PTR [rax+0x60]
   140004569:	mov    rcx,rbx
   14000456c:	call   QWORD PTR [rip+0x5eae]        # 0x14000a420
   140004572:	mov    rdx,QWORD PTR [rbp-0x29]
   140004576:	mov    rcx,rdi
   140004579:	call   rbx
   14000457b:	mov    rdi,QWORD PTR [rbp-0x29]
   14000457f:	mov    esi,eax
   140004581:	mov    rax,QWORD PTR [rdi]
   140004584:	mov    rbx,QWORD PTR [rax+0x10]
   140004588:	mov    rcx,rbx
   14000458b:	call   QWORD PTR [rip+0x5e8f]        # 0x14000a420
   140004591:	mov    rcx,rdi
   140004594:	call   rbx
   140004596:	mov    rcx,QWORD PTR [rbp-0x21]
   14000459a:	call   QWORD PTR [rip+0x5c38]        # 0x14000a1d8
   1400045a0:	test   esi,esi
   1400045a2:	js     0x14000462c
   1400045a8:	mov    rdi,QWORD PTR [rbp+0x7f]
   1400045ac:	mov    rax,QWORD PTR [rdi]
   1400045af:	mov    rbx,QWORD PTR [rax+0x18]
   1400045b3:	mov    rcx,rbx
   1400045b6:	call   QWORD PTR [rip+0x5e64]        # 0x14000a420
   1400045bc:	mov    rdx,QWORD PTR [r15+0x8]
   1400045c0:	mov    rcx,rdi
   1400045c3:	call   rbx
   1400045c5:	test   eax,eax
   1400045c7:	js     0x14000462c
   1400045c9:	mov    rdi,QWORD PTR [rbp+0x7f]
   1400045cd:	mov    rax,QWORD PTR [rdi]
   1400045d0:	mov    rbx,QWORD PTR [rax+0xa0]
   1400045d7:	mov    rcx,rbx
   1400045da:	call   QWORD PTR [rip+0x5e40]        # 0x14000a420
   1400045e0:	lea    rdx,[rbp-0x31]
   1400045e4:	mov    rcx,rdi
   1400045e7:	call   rbx
   1400045e9:	test   eax,eax
   1400045eb:	js     0x14000462c
   1400045ed:	mov    rdi,QWORD PTR [rbp-0x31]
   1400045f1:	mov    rax,QWORD PTR [rdi]
   1400045f4:	mov    rbx,QWORD PTR [rax+0x28]
   1400045f8:	mov    rcx,rbx
   1400045fb:	call   QWORD PTR [rip+0x5e1f]        # 0x14000a420
   140004601:	lea    r8,[rbp-0x19]
   140004605:	xor    edx,edx
   140004607:	mov    rcx,rdi
   14000460a:	call   rbx
   14000460c:	test   eax,eax
   14000460e:	js     0x14000462c
   140004610:	mov    rcx,QWORD PTR [r15+0x8]
   140004614:	mov    edx,0x28a4
   140004619:	call   QWORD PTR [rip+0x5c79]        # 0x14000a298
   14000461f:	mov    rdx,QWORD PTR [rbp-0x19]
   140004623:	mov    rcx,rax
   140004626:	call   QWORD PTR [rip+0x5c4c]        # 0x14000a278
   14000462c:	test   r12d,r12d
   14000462f:	je     0x140004652
   140004631:	mov    rdi,QWORD PTR [rbp+0x7f]
   140004635:	test   rdi,rdi
   140004638:	je     0x140004656
   14000463a:	mov    rax,QWORD PTR [rdi]
   14000463d:	mov    rbx,QWORD PTR [rax+0x40]
   140004641:	mov    rcx,rbx
   140004644:	call   QWORD PTR [rip+0x5dd6]        # 0x14000a420
   14000464a:	mov    edx,DWORD PTR [rbp+0x77]
   14000464d:	mov    rcx,rdi
   140004650:	call   rbx
   140004652:	mov    rdi,QWORD PTR [rbp+0x7f]
   140004656:	mov    rsi,QWORD PTR [rbp-0x31]
   14000465a:	test   rsi,rsi
   14000465d:	je     0x140004678
   14000465f:	mov    rax,QWORD PTR [rsi]
   140004662:	mov    rbx,QWORD PTR [rax+0x10]
   140004666:	mov    rcx,rbx
   140004669:	call   QWORD PTR [rip+0x5db1]        # 0x14000a420
   14000466f:	mov    rcx,rsi
   140004672:	call   rbx
   140004674:	mov    rdi,QWORD PTR [rbp+0x7f]
   140004678:	test   r14,r14
   14000467b:	je     0x140004696
   14000467d:	mov    rax,QWORD PTR [r14]
   140004680:	mov    rbx,QWORD PTR [rax+0x10]
   140004684:	mov    rcx,rbx
   140004687:	call   QWORD PTR [rip+0x5d93]        # 0x14000a420
   14000468d:	mov    rcx,r14
   140004690:	call   rbx
   140004692:	mov    rdi,QWORD PTR [rbp+0x7f]
   140004696:	mov    rsi,QWORD PTR [rbp-0x39]
   14000469a:	test   rsi,rsi
   14000469d:	je     0x1400046bd
   14000469f:	mov    rax,QWORD PTR [rsi]
   1400046a2:	mov    rbx,QWORD PTR [rax+0x10]
   1400046a6:	mov    rcx,rbx
   1400046a9:	call   QWORD PTR [rip+0x5d71]        # 0x14000a420
   1400046af:	mov    rcx,rsi
   1400046b2:	call   rbx
   1400046b4:	and    QWORD PTR [rbp-0x39],0x0
   1400046b9:	mov    rdi,QWORD PTR [rbp+0x7f]
   1400046bd:	test   rdi,rdi
   1400046c0:	je     0x1400046d7
   1400046c2:	mov    rax,QWORD PTR [rdi]
   1400046c5:	mov    rbx,QWORD PTR [rax+0x10]
   1400046c9:	mov    rcx,rbx
   1400046cc:	call   QWORD PTR [rip+0x5d4e]        # 0x14000a420
   1400046d2:	mov    rcx,rdi
   1400046d5:	call   rbx
   1400046d7:	lea    rcx,[rbp-0x11]
   1400046db:	call   0x140007628
   1400046e0:	lea    rcx,[rbp-0x1]
   1400046e4:	call   0x140007628
   1400046e9:	lea    rcx,[rbp+0xf]
   1400046ed:	call   0x140007628
   1400046f2:	add    rsp,0x90
   1400046f9:	pop    r15
   1400046fb:	pop    r14
   1400046fd:	pop    r12
   1400046ff:	pop    rdi
   140004700:	pop    rsi
   140004701:	pop    rbx
   140004702:	pop    rbp
   140004703:	ret    
   140004704:	int3   
   140004705:	int3   
   140004706:	int3   
   140004707:	int3   
   140004708:	int3   
   140004709:	int3   
   14000470a:	int3   
   14000470b:	int3   
   14000470c:	int3   
   14000470d:	int3   
   14000470e:	int3   
   14000470f:	int3   
   140004710:	mov    r11,rsp
   140004713:	mov    QWORD PTR [r11+0x10],rbx
   140004717:	push   rdi
   140004718:	sub    rsp,0x40
   14000471c:	xor    edi,edi
   14000471e:	xor    eax,eax
   140004720:	mov    QWORD PTR [r11-0x28],rdi
   140004724:	mov    rbx,rcx
   140004727:	mov    QWORD PTR [r11-0x20],rax
   14000472b:	mov    QWORD PTR [r11-0x18],rax
   14000472f:	mov    QWORD PTR [r11+0x8],rdi
   140004733:	test   rcx,rcx
   140004736:	jne    0x140004750
   140004738:	mov    r8,QWORD PTR ds:0x20
   140004740:	lea    edx,[rcx+0x2]
   140004743:	mov    rcx,QWORD PTR [rcx]
   140004746:	call   0x1400047e8
   14000474b:	jmp    0x1400047d4
   140004750:	cmp    DWORD PTR [rcx+0x28],0x1
   140004754:	jne    0x140004764
   140004756:	cmp    DWORD PTR [rcx+0x18],0x1
   14000475a:	mov    DWORD PTR [rsp+0x30],0x20002
   140004762:	je     0x14000476c
   140004764:	mov    DWORD PTR [rsp+0x30],0xf0003
   14000476c:	mov    rcx,QWORD PTR [rcx+0x10]
   140004770:	lea    r8,[rsp+0x20]
   140004775:	lea    rdx,[rsp+0x50]
   14000477a:	call   QWORD PTR [rip+0x5b38]        # 0x14000a2b8
   140004780:	test   eax,eax
   140004782:	je     0x140004791
   140004784:	mov    rcx,QWORD PTR [rsp+0x50]
   140004789:	call   QWORD PTR [rip+0x5b31]        # 0x14000a2c0
   14000478f:	jmp    0x1400047b5
   140004791:	call   QWORD PTR [rip+0x5961]        # 0x14000a0f8
   140004797:	call   QWORD PTR [rip+0x595b]        # 0x14000a0f8
   14000479d:	cmp    eax,0x5
   1400047a0:	je     0x1400047b0
   1400047a2:	sub    eax,0x709
   1400047a7:	neg    eax
   1400047a9:	sbb    eax,eax
   1400047ab:	lea    edi,[rax+0x3]
   1400047ae:	jmp    0x1400047b5
   1400047b0:	mov    edi,0x6
   1400047b5:	mov    r8,QWORD PTR [rbx+0x20]
   1400047b9:	mov    edx,edi
   1400047bb:	mov    rcx,QWORD PTR [rbx]
   1400047be:	call   0x1400047e8
   1400047c3:	lea    rcx,[rbx+0x8]
   1400047c7:	call   0x140007628
   1400047cc:	mov    rcx,rbx
   1400047cf:	call   0x140008558
   1400047d4:	mov    rbx,QWORD PTR [rsp+0x58]
   1400047d9:	add    rsp,0x40
   1400047dd:	pop    rdi
   1400047de:	ret    
   1400047df:	int3   
   1400047e0:	int3   
   1400047e1:	int3   
   1400047e2:	int3   
   1400047e3:	int3   
   1400047e4:	int3   
   1400047e5:	int3   
   1400047e6:	int3   
   1400047e7:	int3   
   1400047e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400047ed:	push   rdi
   1400047ee:	sub    rsp,0x20
   1400047f2:	mov    rdi,r8
   1400047f5:	xor    r9d,r9d
   1400047f8:	mov    r8d,edx
   1400047fb:	xor    ebx,ebx
   1400047fd:	mov    edx,0x402
   140004802:	call   QWORD PTR [rip+0x5a18]        # 0x14000a220
   140004808:	test   eax,eax
   14000480a:	jne    0x140004820
   14000480c:	call   QWORD PTR [rip+0x58e6]        # 0x14000a0f8
   140004812:	movzx  ebx,ax
   140004815:	or     ebx,0x80070000
   14000481b:	test   eax,eax
   14000481d:	cmovle ebx,eax
   140004820:	test   rdi,rdi
   140004823:	je     0x140004846
   140004825:	mov    rcx,rdi
   140004828:	call   QWORD PTR [rip+0x58f2]        # 0x14000a120
   14000482e:	test   eax,eax
   140004830:	jne    0x140004846
   140004832:	call   QWORD PTR [rip+0x58c0]        # 0x14000a0f8
   140004838:	movzx  ebx,ax
   14000483b:	or     ebx,0x80070000
   140004841:	test   eax,eax
   140004843:	cmovle ebx,eax
   140004846:	mov    eax,ebx
   140004848:	mov    rbx,QWORD PTR [rsp+0x30]
   14000484d:	add    rsp,0x20
   140004851:	pop    rdi
   140004852:	ret    
   140004853:	int3   
   140004854:	int3   
   140004855:	int3   
   140004856:	int3   
   140004857:	int3   
   140004858:	int3   
   140004859:	int3   
   14000485a:	int3   
   14000485b:	int3   
   14000485c:	int3   
   14000485d:	int3   
   14000485e:	int3   
   14000485f:	int3   
   140004860:	mov    QWORD PTR [rsp+0x10],rbx
   140004865:	mov    QWORD PTR [rsp+0x18],rsi
   14000486a:	push   rbp
   14000486b:	push   rdi
   14000486c:	push   r12
   14000486e:	push   r14
   140004870:	push   r15
   140004872:	mov    rbp,rsp
   140004875:	sub    rsp,0x60
   140004879:	mov    rax,QWORD PTR [rip+0x8788]        # 0x14000d008
   140004880:	xor    rax,rsp
   140004883:	mov    QWORD PTR [rbp-0x10],rax
   140004887:	mov    rsi,rcx
   14000488a:	mov    DWORD PTR [rbp-0x40],0x67727473
   140004891:	mov    rcx,QWORD PTR [rcx+0x8]
   140004895:	lea    rax,[rip+0x8d54]        # 0x14000d5f0
   14000489c:	xor    ebx,ebx
   14000489e:	mov    QWORD PTR [rbp-0x38],rax
   1400048a2:	mov    edx,0x2969
   1400048a7:	mov    DWORD PTR [rbp-0x30],0x29cc
   1400048ae:	mov    edi,ebx
   1400048b0:	mov    DWORD PTR [rbp-0x2c],0x29cd
   1400048b7:	mov    DWORD PTR [rbp-0x20],0x29d1
   1400048be:	mov    DWORD PTR [rbp-0x1c],0x29d0
   1400048c5:	mov    DWORD PTR [rbp-0x18],0x29d2
   1400048cc:	call   QWORD PTR [rip+0x59c6]        # 0x14000a298
   1400048d2:	mov    rcx,QWORD PTR [rsi+0x8]
   1400048d6:	mov    edx,0x296c
   1400048db:	mov    r12,rax
   1400048de:	call   QWORD PTR [rip+0x59b4]        # 0x14000a298
   1400048e4:	xor    r9d,r9d
   1400048e7:	xor    r8d,r8d
   1400048ea:	mov    edx,0x14b
   1400048ef:	mov    QWORD PTR [rbp-0x28],rax
   1400048f3:	mov    rcx,r12
   1400048f6:	call   QWORD PTR [rip+0x594c]        # 0x14000a248
   1400048fc:	mov    r14d,ebx
   1400048ff:	mov    r15d,0x80004005
   140004905:	cmp    r14d,0x2
   140004909:	jae    0x14000494b
   14000490b:	mov    rdx,QWORD PTR [rsi+0x18]
   14000490f:	lea    rcx,[rbp-0x40]
   140004913:	mov    eax,r14d
   140004916:	mov    r8d,DWORD PTR [rbp+rax*4-0x30]
   14000491b:	call   0x140007894
   140004920:	mov    edi,eax
   140004922:	test   eax,eax
   140004924:	js     0x140004944
   140004926:	mov    r9,QWORD PTR [rbp-0x38]
   14000492a:	xor    r8d,r8d
   14000492d:	mov    edx,0x143
   140004932:	mov    rcx,r12
   140004935:	call   QWORD PTR [rip+0x590d]        # 0x14000a248
   14000493b:	cmp    eax,0xffffffff
   14000493e:	mov    edi,ebx
   140004940:	cmove  edi,r15d
   140004944:	inc    r14d
   140004947:	test   edi,edi
   140004949:	jns    0x140004905
   14000494b:	mov    r15,QWORD PTR [rbp-0x28]
   14000494f:	test   edi,edi
   140004951:	js     0x14000497d
   140004953:	mov    rcx,QWORD PTR [rsi+0x10]
   140004957:	mov    r8d,ebx
   14000495a:	mov    edx,DWORD PTR [rcx+0x40]
   14000495d:	test   edx,edx
   14000495f:	je     0x140004969
   140004961:	cmp    edx,0x1
   140004964:	jne    0x140004969
   140004966:	mov    r8d,edx
   140004969:	movsxd r8,r8d
   14000496c:	xor    r9d,r9d
   14000496f:	mov    edx,0x14e
   140004974:	mov    rcx,r12
   140004977:	call   QWORD PTR [rip+0x58cb]        # 0x14000a248
   14000497d:	xor    r9d,r9d
   140004980:	xor    r8d,r8d
   140004983:	mov    edx,0x14b
   140004988:	mov    rcx,r15
   14000498b:	call   QWORD PTR [rip+0x58b7]        # 0x14000a248
   140004991:	mov    r14d,ebx
   140004994:	test   edi,edi
   140004996:	js     0x140004a22
   14000499c:	cmp    r14d,0x3
   1400049a0:	jae    0x1400049e6
   1400049a2:	mov    rdx,QWORD PTR [rsi+0x18]
   1400049a6:	lea    rcx,[rbp-0x40]
   1400049aa:	mov    eax,r14d
   1400049ad:	mov    r8d,DWORD PTR [rbp+rax*4-0x20]
   1400049b2:	call   0x140007894
   1400049b7:	mov    edi,eax
   1400049b9:	test   eax,eax
   1400049bb:	js     0x1400049df
   1400049bd:	mov    r9,QWORD PTR [rbp-0x38]
   1400049c1:	xor    r8d,r8d
   1400049c4:	mov    edx,0x143
   1400049c9:	mov    rcx,r15
   1400049cc:	call   QWORD PTR [rip+0x5876]        # 0x14000a248
   1400049d2:	cmp    eax,0xffffffff
   1400049d5:	mov    edi,ebx
   1400049d7:	mov    eax,0x80004005
   1400049dc:	cmove  edi,eax
   1400049df:	inc    r14d
   1400049e2:	test   edi,edi
   1400049e4:	jns    0x14000499c
   1400049e6:	test   edi,edi
   1400049e8:	js     0x140004a22
   1400049ea:	mov    rcx,QWORD PTR [rsi+0x10]
   1400049ee:	mov    r8d,ebx
   1400049f1:	mov    edx,DWORD PTR [rcx+0x44]
   1400049f4:	test   edx,edx
   1400049f6:	je     0x140004a0e
   1400049f8:	sub    edx,0x1
   1400049fb:	je     0x140004a08
   1400049fd:	cmp    edx,0x1
   140004a00:	jne    0x140004a0e
   140004a02:	lea    r8d,[rdx+0x1]
   140004a06:	jmp    0x140004a0e
   140004a08:	mov    r8d,0x1
   140004a0e:	movsxd r8,r8d
   140004a11:	xor    r9d,r9d
   140004a14:	mov    edx,0x14e
   140004a19:	mov    rcx,r15
   140004a1c:	call   QWORD PTR [rip+0x5826]        # 0x14000a248
   140004a22:	mov    rcx,QWORD PTR [rsi+0x10]
   140004a26:	mov    edx,0x296d
   140004a2b:	cmp    DWORD PTR [rcx+0x48],ebx
   140004a2e:	mov    rcx,QWORD PTR [rsi+0x8]
   140004a32:	setne  bl
   140004a35:	mov    r8d,ebx
   140004a38:	call   QWORD PTR [rip+0x57ea]        # 0x14000a228
   140004a3e:	lea    rcx,[rbp-0x40]
   140004a42:	call   0x140007628
   140004a47:	mov    eax,0x1
   140004a4c:	mov    rcx,QWORD PTR [rbp-0x10]
   140004a50:	xor    rcx,rsp
   140004a53:	call   0x140008990
   140004a58:	lea    r11,[rsp+0x60]
   140004a5d:	mov    rbx,QWORD PTR [r11+0x38]
   140004a61:	mov    rsi,QWORD PTR [r11+0x40]
   140004a65:	mov    rsp,r11
   140004a68:	pop    r15
   140004a6a:	pop    r14
   140004a6c:	pop    r12
   140004a6e:	pop    rdi
   140004a6f:	pop    rbp
   140004a70:	ret    
   140004a71:	int3   
   140004a72:	int3   
   140004a73:	int3   
   140004a74:	int3   
   140004a75:	int3   
   140004a76:	int3   
   140004a77:	int3   
   140004a78:	int3   
   140004a79:	int3   
   140004a7a:	int3   
   140004a7b:	int3   
   140004a7c:	int3   
   140004a7d:	int3   
   140004a7e:	int3   
   140004a7f:	int3   
   140004a80:	rex push rbx
   140004a82:	sub    rsp,0x40
   140004a86:	mov    rbx,rcx
   140004a89:	mov    ecx,0x2969
   140004a8e:	cmp    dx,cx
   140004a91:	je     0x140004a9a
   140004a93:	xor    eax,eax
   140004a95:	jmp    0x140004b2d
   140004a9a:	lea    rax,[rip+0x8b4f]        # 0x14000d5f0
   140004aa1:	mov    DWORD PTR [rsp+0x28],0x67727473
   140004aa9:	mov    edx,ecx
   140004aab:	mov    QWORD PTR [rsp+0x30],rax
   140004ab0:	mov    rcx,QWORD PTR [rbx+0x8]
   140004ab4:	mov    DWORD PTR [rsp+0x20],0x29ce
   140004abc:	mov    DWORD PTR [rsp+0x24],0x29cf
   140004ac4:	call   QWORD PTR [rip+0x57ce]        # 0x14000a298
   140004aca:	xor    r9d,r9d
   140004acd:	xor    r8d,r8d
   140004ad0:	mov    rcx,rax
   140004ad3:	mov    edx,0x147
   140004ad8:	call   QWORD PTR [rip+0x576a]        # 0x14000a248
   140004ade:	lea    rcx,[rsp+0x28]
   140004ae3:	cmp    eax,0xffffffff
   140004ae6:	jne    0x140004af1
   140004ae8:	xor    edx,edx
   140004aea:	call   0x140007780
   140004aef:	jmp    0x140004b01
   140004af1:	mov    rdx,QWORD PTR [rbx+0x18]
   140004af5:	cdqe   
   140004af7:	mov    r8d,DWORD PTR [rsp+rax*4+0x20]
   140004afc:	call   0x140007894
   140004b01:	mov    rcx,QWORD PTR [rbx+0x8]
   140004b05:	mov    edx,0x296a
   140004b0a:	call   QWORD PTR [rip+0x5788]        # 0x14000a298
   140004b10:	mov    rdx,QWORD PTR [rsp+0x30]
   140004b15:	mov    rcx,rax
   140004b18:	call   QWORD PTR [rip+0x575a]        # 0x14000a278
   140004b1e:	lea    rcx,[rsp+0x28]
   140004b23:	call   0x140007628
   140004b28:	mov    eax,0x1
   140004b2d:	add    rsp,0x40
   140004b31:	pop    rbx
   140004b32:	ret    
   140004b33:	int3   
   140004b34:	int3   
   140004b35:	int3   
   140004b36:	int3   
   140004b37:	int3   
   140004b38:	int3   
   140004b39:	int3   
   140004b3a:	int3   
   140004b3b:	int3   
   140004b3c:	int3   
   140004b3d:	int3   
   140004b3e:	int3   
   140004b3f:	int3   
   140004b40:	mov    QWORD PTR [rsp+0x8],rbx
   140004b45:	push   rdi
   140004b46:	sub    rsp,0x20
   140004b4a:	mov    rax,QWORD PTR [rcx+0x10]
   140004b4e:	mov    rbx,rcx
   140004b51:	xor    edi,edi
   140004b53:	mov    edx,0x2969
   140004b58:	mov    DWORD PTR [rax+0x8],edi
   140004b5b:	mov    rcx,QWORD PTR [rcx+0x8]
   140004b5f:	call   QWORD PTR [rip+0x5733]        # 0x14000a298
   140004b65:	xor    r9d,r9d
   140004b68:	xor    r8d,r8d
   140004b6b:	mov    rcx,rax
   140004b6e:	mov    edx,0x147
   140004b73:	call   QWORD PTR [rip+0x56cf]        # 0x14000a248
   140004b79:	mov    ecx,edi
   140004b7b:	mov    edx,0x296c
   140004b80:	test   eax,eax
   140004b82:	mov    rax,QWORD PTR [rbx+0x10]
   140004b86:	setne  cl
   140004b89:	mov    DWORD PTR [rax+0x40],ecx
   140004b8c:	mov    rcx,QWORD PTR [rbx+0x8]
   140004b90:	call   QWORD PTR [rip+0x5702]        # 0x14000a298
   140004b96:	xor    r9d,r9d
   140004b99:	xor    r8d,r8d
   140004b9c:	mov    rcx,rax
   140004b9f:	mov    edx,0x147
   140004ba4:	call   QWORD PTR [rip+0x569e]        # 0x14000a248
   140004baa:	test   eax,eax
   140004bac:	je     0x140004bd2
   140004bae:	sub    eax,0x1
   140004bb1:	je     0x140004bc5
   140004bb3:	cmp    eax,0x1
   140004bb6:	jne    0x140004bd9
   140004bb8:	mov    rax,QWORD PTR [rbx+0x10]
   140004bbc:	mov    DWORD PTR [rax+0x44],0x2
   140004bc3:	jmp    0x140004bd9
   140004bc5:	mov    rax,QWORD PTR [rbx+0x10]
   140004bc9:	mov    DWORD PTR [rax+0x44],0x1
   140004bd0:	jmp    0x140004bd9
   140004bd2:	mov    rcx,QWORD PTR [rbx+0x10]
   140004bd6:	mov    DWORD PTR [rcx+0x44],edi
   140004bd9:	mov    rcx,QWORD PTR [rbx+0x8]
   140004bdd:	mov    edx,0x296d
   140004be2:	call   QWORD PTR [rip+0x5688]        # 0x14000a270
   140004be8:	mov    rcx,QWORD PTR [rbx+0x10]
   140004bec:	cmp    eax,0x1
   140004bef:	mov    rbx,QWORD PTR [rsp+0x30]
   140004bf4:	mov    eax,0x1
   140004bf9:	sete   dil
   140004bfd:	mov    DWORD PTR [rcx+0x48],edi
   140004c00:	add    rsp,0x20
   140004c04:	pop    rdi
   140004c05:	ret    
   140004c06:	int3   
   140004c07:	int3   
   140004c08:	int3   
   140004c09:	int3   
   140004c0a:	int3   
   140004c0b:	int3   
   140004c0c:	int3   
   140004c0d:	int3   
   140004c0e:	int3   
   140004c0f:	int3   
   140004c10:	mov    eax,0x3eb
   140004c15:	ret    
   140004c16:	int3   
   140004c17:	int3   
   140004c18:	int3   
   140004c19:	int3   
   140004c1a:	int3   
   140004c1b:	int3   
   140004c1c:	mov    r11,rsp
   140004c1f:	mov    QWORD PTR [r11+0x10],rbx
   140004c23:	mov    QWORD PTR [r11+0x18],rbp
   140004c27:	mov    QWORD PTR [r11+0x20],rsi
   140004c2b:	push   rdi
   140004c2c:	push   r14
   140004c2e:	push   r15
   140004c30:	sub    rsp,0x60
   140004c34:	xor    r15d,r15d
   140004c37:	lea    rax,[rip+0x5bc2]        # 0x14000a800
   140004c3e:	mov    rsi,rcx
   140004c41:	mov    QWORD PTR [rcx],rax
   140004c44:	xor    edx,edx
   140004c46:	mov    QWORD PTR [r11+0x8],r15
   140004c4a:	lea    rcx,[r11-0x40]
   140004c4e:	mov    QWORD PTR [r11-0x48],r15
   140004c52:	lea    r8d,[r15+0x28]
   140004c56:	mov    r14d,r15d
   140004c59:	lea    ebp,[r15+0x1]
   140004c5d:	call   0x14000906a
   140004c62:	mov    rdi,QWORD PTR [rsi+0x28]
   140004c66:	mov    DWORD PTR [rsi+0xe0],ebp
   140004c6c:	test   rdi,rdi
   140004c6f:	je     0x140004ce2
   140004c71:	mov    rax,QWORD PTR [rdi]
   140004c74:	mov    rbx,QWORD PTR [rax]
   140004c77:	mov    rcx,rbx
   140004c7a:	call   QWORD PTR [rip+0x57a0]        # 0x14000a420
   140004c80:	lea    r8,[rsp+0x80]
   140004c88:	mov    rcx,rdi
   140004c8b:	lea    rdx,[rip+0x63ee]        # 0x14000b080
   140004c92:	call   rbx
   140004c94:	mov    r14d,eax
   140004c97:	test   eax,eax
   140004c99:	js     0x140004ce2
   140004c9b:	mov    rdi,QWORD PTR [rsp+0x80]
   140004ca3:	mov    rax,QWORD PTR [rdi]
   140004ca6:	mov    rbx,QWORD PTR [rax+0x18]
   140004caa:	mov    rcx,rbx
   140004cad:	call   QWORD PTR [rip+0x576d]        # 0x14000a420
   140004cb3:	xor    edx,edx
   140004cb5:	mov    rcx,rdi
   140004cb8:	call   rbx
   140004cba:	mov    rdi,QWORD PTR [rsp+0x80]
   140004cc2:	mov    r14d,eax
   140004cc5:	mov    rax,QWORD PTR [rdi]
   140004cc8:	mov    rbx,QWORD PTR [rax+0x10]
   140004ccc:	mov    rcx,rbx
   140004ccf:	call   QWORD PTR [rip+0x574b]        # 0x14000a420
   140004cd5:	mov    rcx,rdi
   140004cd8:	call   rbx
   140004cda:	mov    QWORD PTR [rsp+0x80],r15
   140004ce2:	test   r14d,r14d
   140004ce5:	js     0x140004d5b
   140004ce7:	mov    edi,0x102
   140004cec:	mov    r14d,0x64
   140004cf2:	test   ebp,ebp
   140004cf4:	je     0x140004d5b
   140004cf6:	mov    rcx,QWORD PTR [rsi+0xa0]
   140004cfd:	mov    edx,r14d
   140004d00:	call   QWORD PTR [rip+0x5412]        # 0x14000a118
   140004d06:	mov    rcx,QWORD PTR [rsi+0xa8]
   140004d0d:	mov    edx,r14d
   140004d10:	mov    ebx,eax
   140004d12:	call   QWORD PTR [rip+0x5400]        # 0x14000a118
   140004d18:	cmp    ebx,edi
   140004d1a:	je     0x140004d3a
   140004d1c:	cmp    eax,edi
   140004d1e:	cmovne ebp,r15d
   140004d22:	jmp    0x140004d3a
   140004d24:	lea    rcx,[rsp+0x30]
   140004d29:	call   QWORD PTR [rip+0x5539]        # 0x14000a268
   140004d2f:	lea    rcx,[rsp+0x30]
   140004d34:	call   QWORD PTR [rip+0x5516]        # 0x14000a250
   140004d3a:	xor    r9d,r9d
   140004d3d:	mov    DWORD PTR [rsp+0x20],0x1
   140004d45:	xor    r8d,r8d
   140004d48:	lea    rcx,[rsp+0x30]
   140004d4d:	xor    edx,edx
   140004d4f:	call   QWORD PTR [rip+0x550b]        # 0x14000a260
   140004d55:	test   eax,eax
   140004d57:	jne    0x140004d24
   140004d59:	jmp    0x140004cf2
   140004d5b:	mov    rdi,QWORD PTR [rsi+0x28]
   140004d5f:	test   rdi,rdi
   140004d62:	je     0x140004d7d
   140004d64:	mov    rax,QWORD PTR [rdi]
   140004d67:	mov    rbx,QWORD PTR [rax+0x10]
   140004d6b:	mov    rcx,rbx
   140004d6e:	call   QWORD PTR [rip+0x56ac]        # 0x14000a420
   140004d74:	mov    rcx,rdi
   140004d77:	call   rbx
   140004d79:	mov    QWORD PTR [rsi+0x28],r15
   140004d7d:	mov    rdi,QWORD PTR [rsi+0x20]
   140004d81:	test   rdi,rdi
   140004d84:	je     0x140004d9f
   140004d86:	mov    rax,QWORD PTR [rdi]
   140004d89:	mov    rbx,QWORD PTR [rax+0x10]
   140004d8d:	mov    rcx,rbx
   140004d90:	call   QWORD PTR [rip+0x568a]        # 0x14000a420
   140004d96:	mov    rcx,rdi
   140004d99:	call   rbx
   140004d9b:	mov    QWORD PTR [rsi+0x20],r15
   140004d9f:	mov    rdi,QWORD PTR [rsi+0x98]
   140004da6:	test   rdi,rdi
   140004da9:	je     0x140004dc7
   140004dab:	mov    rax,QWORD PTR [rdi]
   140004dae:	mov    rbx,QWORD PTR [rax+0x10]
   140004db2:	mov    rcx,rbx
   140004db5:	call   QWORD PTR [rip+0x5665]        # 0x14000a420
   140004dbb:	mov    rcx,rdi
   140004dbe:	call   rbx
   140004dc0:	mov    QWORD PTR [rsi+0x98],r15
   140004dc7:	cmp    DWORD PTR [rsi+0xdc],r15d
   140004dce:	je     0x140004dd6
   140004dd0:	call   QWORD PTR [rip+0x562a]        # 0x14000a400
   140004dd6:	mov    rcx,QWORD PTR [rsi+0x30]
   140004dda:	test   rcx,rcx
   140004ddd:	je     0x140004de5
   140004ddf:	call   QWORD PTR [rip+0x53c3]        # 0x14000a1a8
   140004de5:	mov    rcx,QWORD PTR [rsi+0x38]
   140004de9:	test   rcx,rcx
   140004dec:	je     0x140004df4
   140004dee:	call   QWORD PTR [rip+0x53b4]        # 0x14000a1a8
   140004df4:	mov    rcx,QWORD PTR [rsi+0x40]
   140004df8:	test   rcx,rcx
   140004dfb:	je     0x140004e03
   140004dfd:	call   QWORD PTR [rip+0x53a5]        # 0x14000a1a8
   140004e03:	mov    rcx,QWORD PTR [rsi+0x48]
   140004e07:	test   rcx,rcx
   140004e0a:	je     0x140004e12
   140004e0c:	call   QWORD PTR [rip+0x5396]        # 0x14000a1a8
   140004e12:	mov    rcx,QWORD PTR [rsi+0x70]
   140004e16:	test   rcx,rcx
   140004e19:	je     0x140004e21
   140004e1b:	call   QWORD PTR [rip+0x5387]        # 0x14000a1a8
   140004e21:	mov    rcx,QWORD PTR [rsi+0x78]
   140004e25:	test   rcx,rcx
   140004e28:	je     0x140004e30
   140004e2a:	call   QWORD PTR [rip+0x5378]        # 0x14000a1a8
   140004e30:	mov    rcx,QWORD PTR [rsi+0x80]
   140004e37:	test   rcx,rcx
   140004e3a:	je     0x140004e42
   140004e3c:	call   QWORD PTR [rip+0x5366]        # 0x14000a1a8
   140004e42:	lea    rdx,[rsi+0xb0]
   140004e49:	cmp    QWORD PTR [rdx],r15
   140004e4c:	je     0x140004e5e
   140004e4e:	test   rdx,rdx
   140004e51:	je     0x140004e5e
   140004e53:	mov    ecx,DWORD PTR [rsi+0xb8]
   140004e59:	call   0x140007c6c
   140004e5e:	mov    rcx,QWORD PTR [rsi+0xa0]
   140004e65:	call   QWORD PTR [rip+0x52f5]        # 0x14000a160
   140004e6b:	mov    rcx,QWORD PTR [rsi+0xa8]
   140004e72:	call   QWORD PTR [rip+0x52e8]        # 0x14000a160
   140004e78:	lea    r11,[rsp+0x60]
   140004e7d:	mov    rbx,QWORD PTR [r11+0x28]
   140004e81:	mov    rbp,QWORD PTR [r11+0x30]
   140004e85:	mov    rsi,QWORD PTR [r11+0x38]
   140004e89:	mov    rsp,r11
   140004e8c:	pop    r15
   140004e8e:	pop    r14
   140004e90:	pop    rdi
   140004e91:	ret    
   140004e92:	int3   
   140004e93:	int3   
   140004e94:	int3   
   140004e95:	int3   
   140004e96:	int3   
   140004e97:	int3   
   140004e98:	int3   
   140004e99:	int3   
   140004e9a:	int3   
   140004e9b:	int3   
   140004e9c:	int3   
   140004e9d:	int3   
   140004e9e:	int3   
   140004e9f:	int3   
   140004ea0:	mov    QWORD PTR [rsp+0x10],rbx
   140004ea5:	mov    QWORD PTR [rsp+0x18],rsi
   140004eaa:	push   rdi
   140004eab:	sub    rsp,0x50
   140004eaf:	mov    rax,QWORD PTR [rip+0x8152]        # 0x14000d008
   140004eb6:	xor    rax,rsp
   140004eb9:	mov    QWORD PTR [rsp+0x40],rax
   140004ebe:	xor    edx,edx
   140004ec0:	mov    DWORD PTR [rsp+0x20],0x67727473
   140004ec8:	lea    rax,[rip+0x8721]        # 0x14000d5f0
   140004ecf:	mov    rdi,rcx
   140004ed2:	mov    QWORD PTR [rsp+0x28],rax
   140004ed7:	mov    rax,QWORD PTR [rcx+0x10]
   140004edb:	mov    ecx,0x2a95
   140004ee0:	cmp    DWORD PTR [rax],edx
   140004ee2:	setne  dl
   140004ee5:	xor    eax,eax
   140004ee7:	mov    DWORD PTR [rsp+rax*4+0x30],ecx
   140004eeb:	inc    ecx
   140004eed:	inc    rax
   140004ef0:	cmp    rax,0x4
   140004ef4:	jl     0x140004ee7
   140004ef6:	mov    esi,edx
   140004ef8:	lea    rcx,[rsp+0x20]
   140004efd:	mov    rdx,QWORD PTR [rdi+0x18]
   140004f01:	mov    r8d,DWORD PTR [rsp+rsi*4+0x30]
   140004f06:	call   0x140007894
   140004f0b:	test   eax,eax
   140004f0d:	js     0x140004f87
   140004f0f:	mov    rcx,QWORD PTR [rdi+0x8]
   140004f13:	call   QWORD PTR [rip+0x533f]        # 0x14000a258
   140004f19:	mov    r9d,0x3ec
   140004f1f:	xor    r8d,r8d
   140004f22:	mov    rcx,rax
   140004f25:	mov    edx,0x485
   140004f2a:	call   QWORD PTR [rip+0x5318]        # 0x14000a248
   140004f30:	mov    rcx,QWORD PTR [rdi+0x8]
   140004f34:	movsxd rbx,eax
   140004f37:	call   QWORD PTR [rip+0x531b]        # 0x14000a258
   140004f3d:	mov    r9,QWORD PTR [rsp+0x28]
   140004f42:	mov    r8,rbx
   140004f45:	mov    rcx,rax
   140004f48:	mov    edx,0x47e
   140004f4d:	call   QWORD PTR [rip+0x52f5]        # 0x14000a248
   140004f53:	mov    r8d,DWORD PTR [rsp+rsi*4+0x38]
   140004f58:	lea    rcx,[rsp+0x20]
   140004f5d:	mov    rdx,QWORD PTR [rdi+0x18]
   140004f61:	call   0x140007894
   140004f66:	test   eax,eax
   140004f68:	js     0x140004f87
   140004f6a:	mov    rcx,QWORD PTR [rdi+0x8]
   140004f6e:	mov    edx,0x2a30
   140004f73:	call   QWORD PTR [rip+0x531f]        # 0x14000a298
   140004f79:	mov    rdx,QWORD PTR [rsp+0x28]
   140004f7e:	mov    rcx,rax
   140004f81:	call   QWORD PTR [rip+0x52f1]        # 0x14000a278
   140004f87:	mov    rcx,QWORD PTR [rdi+0x8]
   140004f8b:	mov    edx,0x2a31
   140004f90:	call   QWORD PTR [rip+0x5302]        # 0x14000a298
   140004f96:	mov    r9d,0x640000
   140004f9c:	xor    r8d,r8d
   140004f9f:	mov    rcx,rax
   140004fa2:	mov    edx,0x401
   140004fa7:	call   QWORD PTR [rip+0x529b]        # 0x14000a248
   140004fad:	lea    rcx,[rsp+0x20]
   140004fb2:	call   0x140007628
   140004fb7:	mov    eax,0x1
   140004fbc:	mov    rcx,QWORD PTR [rsp+0x40]
   140004fc1:	xor    rcx,rsp
   140004fc4:	call   0x140008990
   140004fc9:	mov    rbx,QWORD PTR [rsp+0x68]
   140004fce:	mov    rsi,QWORD PTR [rsp+0x70]
   140004fd3:	add    rsp,0x50
   140004fd7:	pop    rdi
   140004fd8:	ret    
   140004fd9:	int3   
   140004fda:	int3   
   140004fdb:	int3   
   140004fdc:	int3   
   140004fdd:	int3   
   140004fde:	int3   
   140004fdf:	int3   
   140004fe0:	mov    eax,0x3ec
   140004fe5:	ret    
   140004fe6:	int3   
   140004fe7:	int3   
   140004fe8:	int3   
   140004fe9:	int3   
   140004fea:	int3   
   140004feb:	int3   
   140004fec:	int3   
   140004fed:	int3   
   140004fee:	int3   
   140004fef:	int3   
   140004ff0:	rex push rbx
   140004ff2:	sub    rsp,0x40
   140004ff6:	mov    rbx,rcx
   140004ff9:	lea    rax,[rip+0x85f0]        # 0x14000d5f0
   140005000:	mov    ecx,0x67727473
   140005005:	mov    QWORD PTR [rsp+0x38],rax
   14000500a:	mov    DWORD PTR [rsp+0x30],ecx
   14000500e:	mov    DWORD PTR [rsp+0x20],ecx
   140005012:	lea    rcx,[rbx+0xbc]
   140005019:	mov    QWORD PTR [rsp+0x28],rax
   14000501e:	call   QWORD PTR [rip+0x510c]        # 0x14000a130
   140005024:	mov    rax,QWORD PTR [rbx+0x10]
   140005028:	mov    rcx,rbx
   14000502b:	cmp    DWORD PTR [rax],0x0
   14000502e:	jne    0x140005037
   140005030:	call   0x140005524
   140005035:	jmp    0x14000503c
   140005037:	call   0x1400056f0
   14000503c:	test   eax,eax
   14000503e:	js     0x140005066
   140005040:	mov    rcx,QWORD PTR [rbx+0x8]
   140005044:	call   QWORD PTR [rip+0x520e]        # 0x14000a258
   14000504a:	mov    r9d,0x8
   140005050:	xor    r8d,r8d
   140005053:	mov    rcx,rax
   140005056:	mov    edx,0x470
   14000505b:	call   QWORD PTR [rip+0x51bf]        # 0x14000a220
   140005061:	jmp    0x140005119
   140005066:	mov    rdx,QWORD PTR [rbx+0x18]
   14000506a:	lea    rcx,[rsp+0x20]
   14000506f:	mov    r8d,0x2a3a
   140005075:	call   0x140007894
   14000507a:	test   eax,eax
   14000507c:	js     0x1400050b8
   14000507e:	mov    rcx,QWORD PTR [rbx+0x8]
   140005082:	mov    edx,0x2a33
   140005087:	call   QWORD PTR [rip+0x520b]        # 0x14000a298
   14000508d:	mov    rdx,QWORD PTR [rsp+0x28]
   140005092:	mov    rcx,rax
   140005095:	call   QWORD PTR [rip+0x51dd]        # 0x14000a278
   14000509b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000509f:	mov    edx,0x2a33
   1400050a4:	call   QWORD PTR [rip+0x51ee]        # 0x14000a298
   1400050aa:	mov    rcx,rax
   1400050ad:	mov    edx,0x5
   1400050b2:	call   QWORD PTR [rip+0x51d0]        # 0x14000a288
   1400050b8:	mov    rcx,QWORD PTR [rbx+0x8]
   1400050bc:	mov    edx,0x2a32
   1400050c1:	call   QWORD PTR [rip+0x51d1]        # 0x14000a298
   1400050c7:	mov    rcx,rax
   1400050ca:	mov    edx,0x5
   1400050cf:	call   QWORD PTR [rip+0x51b3]        # 0x14000a288
   1400050d5:	mov    rax,QWORD PTR [rbx+0x10]
   1400050d9:	mov    rdx,QWORD PTR [rbx+0x18]
   1400050dd:	mov    ecx,DWORD PTR [rax]
   1400050df:	neg    ecx
   1400050e1:	lea    rcx,[rsp+0x20]
   1400050e6:	sbb    r8d,r8d
   1400050e9:	neg    r8d
   1400050ec:	add    r8d,0x2a38
   1400050f3:	call   0x140007894
   1400050f8:	test   eax,eax
   1400050fa:	js     0x140005119
   1400050fc:	mov    rcx,QWORD PTR [rbx+0x8]
   140005100:	mov    edx,0x2a30
   140005105:	call   QWORD PTR [rip+0x518d]        # 0x14000a298
   14000510b:	mov    rdx,QWORD PTR [rsp+0x28]
   140005110:	mov    rcx,rax
   140005113:	call   QWORD PTR [rip+0x515f]        # 0x14000a278
   140005119:	lea    rcx,[rsp+0x20]
   14000511e:	call   0x140007628
   140005123:	lea    rcx,[rsp+0x30]
   140005128:	call   0x140007628
   14000512d:	mov    eax,0x1
   140005132:	add    rsp,0x40
   140005136:	pop    rbx
   140005137:	ret    
   140005138:	int3   
   140005139:	int3   
   14000513a:	int3   
   14000513b:	int3   
   14000513c:	int3   
   14000513d:	int3   
   14000513e:	int3   
   14000513f:	int3   
   140005140:	mov    rax,rsp
   140005143:	mov    QWORD PTR [rax+0x8],rbx
   140005147:	mov    QWORD PTR [rax+0x10],rbp
   14000514b:	mov    QWORD PTR [rax+0x18],rsi
   14000514f:	push   rdi
   140005150:	sub    rsp,0x30
   140005154:	mov    DWORD PTR [rax-0x18],0x67727473
   14000515b:	xor    ebp,ebp
   14000515d:	lea    rax,[rip+0x848c]        # 0x14000d5f0
   140005164:	mov    rdi,r9
   140005167:	mov    QWORD PTR [rsp+0x28],rax
   14000516c:	mov    rbx,r8
   14000516f:	mov    eax,edx
   140005171:	mov    rsi,rcx
   140005174:	sub    eax,0x403
   140005179:	je     0x140005357
   14000517f:	sub    eax,0x1
   140005182:	je     0x14000522d
   140005188:	cmp    eax,0x1
   14000518b:	je     0x140005199
   14000518d:	call   0x140001fb0
   140005192:	mov    ebp,eax
   140005194:	jmp    0x1400053a2
   140005199:	mov    rcx,QWORD PTR [rcx+0x8]
   14000519d:	mov    edx,0x2a31
   1400051a2:	call   QWORD PTR [rip+0x50f0]        # 0x14000a298
   1400051a8:	xor    r9d,r9d
   1400051ab:	mov    edx,0x402
   1400051b0:	mov    rcx,rax
   1400051b3:	lea    r8d,[r9+0x64]
   1400051b7:	call   QWORD PTR [rip+0x5063]        # 0x14000a220
   1400051bd:	sub    rbx,0x1
   1400051c1:	je     0x1400051d1
   1400051c3:	cmp    rbx,0x1
   1400051c7:	jne    0x140005223
   1400051c9:	mov    r8d,0x2a9a
   1400051cf:	jmp    0x1400051d7
   1400051d1:	mov    r8d,0x2a99
   1400051d7:	mov    rdx,QWORD PTR [rsi+0x18]
   1400051db:	lea    rcx,[rsp+0x20]
   1400051e0:	call   0x140007894
   1400051e5:	test   eax,eax
   1400051e7:	js     0x140005206
   1400051e9:	mov    rcx,QWORD PTR [rsi+0x8]
   1400051ed:	mov    edx,0x2a33
   1400051f2:	call   QWORD PTR [rip+0x50a0]        # 0x14000a298
   1400051f8:	mov    rdx,QWORD PTR [rsp+0x28]
   1400051fd:	mov    rcx,rax
   140005200:	call   QWORD PTR [rip+0x5072]        # 0x14000a278
   140005206:	mov    rcx,QWORD PTR [rsi+0x8]
   14000520a:	mov    edx,0x2a32
   14000520f:	call   QWORD PTR [rip+0x5083]        # 0x14000a298
   140005215:	mov    rcx,rax
   140005218:	mov    edx,0x5
   14000521d:	call   QWORD PTR [rip+0x5065]        # 0x14000a288
   140005223:	mov    ebp,0x1
   140005228:	jmp    0x14000534d
   14000522d:	cmp    DWORD PTR [rcx+0xe0],ebp
   140005233:	je     0x140005247
   140005235:	mov    rcx,QWORD PTR [rcx+0xa0]
   14000523c:	call   QWORD PTR [rip+0x4ede]        # 0x14000a120
   140005242:	jmp    0x1400053a2
   140005247:	add    rcx,0xcc
   14000524e:	call   QWORD PTR [rip+0x4edc]        # 0x14000a130
   140005254:	mov    rax,QWORD PTR [rsi+0x10]
   140005258:	mov    rdi,QWORD PTR [rsi+0x28]
   14000525c:	cmp    DWORD PTR [rax],ebp
   14000525e:	mov    rax,QWORD PTR [rdi]
   140005261:	jne    0x1400052a3
   140005263:	mov    rbx,QWORD PTR [rax+0x30]
   140005267:	mov    rcx,rbx
   14000526a:	call   QWORD PTR [rip+0x51b0]        # 0x14000a420
   140005270:	mov    rdx,QWORD PTR [rsi+0xb0]
   140005277:	mov    rcx,rdi
   14000527a:	call   rbx
   14000527c:	mov    edx,ebp
   14000527e:	test   eax,eax
   140005280:	js     0x1400052fb
   140005282:	cmp    edx,DWORD PTR [rsi+0xb8]
   140005288:	jae    0x1400052b5
   14000528a:	mov    eax,edx
   14000528c:	inc    edx
   14000528e:	imul   rcx,rax,0x38
   140005292:	mov    rax,QWORD PTR [rsi+0xb0]
   140005299:	mov    eax,DWORD PTR [rcx+rax*1+0x8]
   14000529d:	test   eax,eax
   14000529f:	jns    0x140005282
   1400052a1:	jmp    0x1400052b5
   1400052a3:	mov    rbx,QWORD PTR [rax+0x20]
   1400052a7:	mov    rcx,rbx
   1400052aa:	call   QWORD PTR [rip+0x5170]        # 0x14000a420
   1400052b0:	mov    rcx,rdi
   1400052b3:	call   rbx
   1400052b5:	test   eax,eax
   1400052b7:	js     0x1400052fb
   1400052b9:	mov    rdx,QWORD PTR [rsi+0x18]
   1400052bd:	lea    rcx,[rsp+0x20]
   1400052c2:	mov    r8d,0x2a37
   1400052c8:	call   0x140007894
   1400052cd:	test   eax,eax
   1400052cf:	js     0x1400052ee
   1400052d1:	mov    rcx,QWORD PTR [rsi+0x8]
   1400052d5:	mov    edx,0x2a35
   1400052da:	call   QWORD PTR [rip+0x4fb8]        # 0x14000a298
   1400052e0:	mov    rdx,QWORD PTR [rsp+0x28]
   1400052e5:	mov    rcx,rax
   1400052e8:	call   QWORD PTR [rip+0x4f8a]        # 0x14000a278
   1400052ee:	mov    rcx,rsi
   1400052f1:	call   0x140005a28
   1400052f6:	jmp    0x1400053a2
   1400052fb:	mov    rdx,QWORD PTR [rsi+0x18]
   1400052ff:	lea    rcx,[rsp+0x20]
   140005304:	mov    r8d,0x2a99
   14000530a:	call   0x140007894
   14000530f:	test   eax,eax
   140005311:	js     0x140005330
   140005313:	mov    rcx,QWORD PTR [rsi+0x8]
   140005317:	mov    edx,0x2a33
   14000531c:	call   QWORD PTR [rip+0x4f76]        # 0x14000a298
   140005322:	mov    rdx,QWORD PTR [rsp+0x28]
   140005327:	mov    rcx,rax
   14000532a:	call   QWORD PTR [rip+0x4f48]        # 0x14000a278
   140005330:	mov    rcx,QWORD PTR [rsi+0x8]
   140005334:	mov    edx,0x2a32
   140005339:	call   QWORD PTR [rip+0x4f59]        # 0x14000a298
   14000533f:	mov    rcx,rax
   140005342:	mov    edx,0x5
   140005347:	call   QWORD PTR [rip+0x4f3b]        # 0x14000a288
   14000534d:	mov    rcx,rsi
   140005350:	call   0x1400053cc
   140005355:	jmp    0x1400053a2
   140005357:	mov    rcx,QWORD PTR [rcx+0x8]
   14000535b:	mov    edx,0x2a31
   140005360:	mov    ebp,0x1
   140005365:	call   QWORD PTR [rip+0x4f2d]        # 0x14000a298
   14000536b:	xor    r9d,r9d
   14000536e:	mov    r8,rbx
   140005371:	mov    rcx,rax
   140005374:	mov    edx,0x402
   140005379:	call   QWORD PTR [rip+0x4ec9]        # 0x14000a248
   14000537f:	mov    rcx,QWORD PTR [rsi+0x8]
   140005383:	mov    edx,0x2a35
   140005388:	call   QWORD PTR [rip+0x4f0a]        # 0x14000a298
   14000538e:	mov    rcx,rax
   140005391:	mov    rdx,rdi
   140005394:	call   QWORD PTR [rip+0x4ede]        # 0x14000a278
   14000539a:	mov    rcx,rdi
   14000539d:	call   0x140008558
   1400053a2:	lea    rcx,[rsp+0x20]
   1400053a7:	call   0x140007628
   1400053ac:	mov    rbx,QWORD PTR [rsp+0x40]
   1400053b1:	mov    eax,ebp
   1400053b3:	mov    rbp,QWORD PTR [rsp+0x48]
   1400053b8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400053bd:	add    rsp,0x30
   1400053c1:	pop    rdi
   1400053c2:	ret    
   1400053c3:	int3   
   1400053c4:	int3   
   1400053c5:	int3   
   1400053c6:	int3   
   1400053c7:	int3   
   1400053c8:	int3   
   1400053c9:	int3   
   1400053ca:	int3   
   1400053cb:	int3   
   1400053cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400053d1:	push   rdi
   1400053d2:	sub    rsp,0x30
   1400053d6:	mov    rbx,rcx
   1400053d9:	mov    DWORD PTR [rsp+0x20],0x67727473
   1400053e1:	mov    rcx,QWORD PTR [rcx+0x8]
   1400053e5:	lea    rax,[rip+0x8204]        # 0x14000d5f0
   1400053ec:	mov    QWORD PTR [rsp+0x28],rax
   1400053f1:	call   QWORD PTR [rip+0x4e61]        # 0x14000a258
   1400053f7:	mov    r9d,0x4
   1400053fd:	xor    r8d,r8d
   140005400:	mov    rcx,rax
   140005403:	mov    edx,0x470
   140005408:	call   QWORD PTR [rip+0x4e12]        # 0x14000a220
   14000540e:	mov    rcx,QWORD PTR [rbx+0x8]
   140005412:	mov    edx,0x2a33
   140005417:	call   QWORD PTR [rip+0x4e7b]        # 0x14000a298
   14000541d:	mov    edi,0x5
   140005422:	mov    rcx,rax
   140005425:	mov    edx,edi
   140005427:	call   QWORD PTR [rip+0x4e5b]        # 0x14000a288
   14000542d:	mov    rcx,QWORD PTR [rbx+0x8]
   140005431:	mov    edx,0x2a35
   140005436:	call   QWORD PTR [rip+0x4e5c]        # 0x14000a298
   14000543c:	mov    rcx,rax
   14000543f:	xor    edx,edx
   140005441:	call   QWORD PTR [rip+0x4e31]        # 0x14000a278
   140005447:	mov    rcx,QWORD PTR [rbx+0x8]
   14000544b:	mov    edx,0x2a34
   140005450:	call   QWORD PTR [rip+0x4e42]        # 0x14000a298
   140005456:	mov    rcx,rax
   140005459:	mov    edx,edi
   14000545b:	call   QWORD PTR [rip+0x4e27]        # 0x14000a288
   140005461:	mov    rax,QWORD PTR [rbx+0x10]
   140005465:	mov    rdx,QWORD PTR [rbx+0x18]
   140005469:	mov    ecx,DWORD PTR [rax]
   14000546b:	neg    ecx
   14000546d:	lea    rcx,[rsp+0x20]
   140005472:	sbb    r8d,r8d
   140005475:	neg    r8d
   140005478:	add    r8d,0x2a38
   14000547f:	call   0x140007894
   140005484:	mov    edi,eax
   140005486:	test   eax,eax
   140005488:	js     0x1400054a7
   14000548a:	mov    rcx,QWORD PTR [rbx+0x8]
   14000548e:	mov    edx,0x2a30
   140005493:	call   QWORD PTR [rip+0x4dff]        # 0x14000a298
   140005499:	mov    rdx,QWORD PTR [rsp+0x28]
   14000549e:	mov    rcx,rax
   1400054a1:	call   QWORD PTR [rip+0x4dd1]        # 0x14000a278
   1400054a7:	lea    rcx,[rsp+0x20]
   1400054ac:	call   0x140007628
   1400054b1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400054b6:	mov    eax,edi
   1400054b8:	add    rsp,0x30
   1400054bc:	pop    rdi
   1400054bd:	ret    
   1400054be:	int3   
   1400054bf:	int3   
   1400054c0:	int3   
   1400054c1:	int3   
   1400054c2:	int3   
   1400054c3:	int3   
   1400054c4:	int3   
   1400054c5:	int3   
   1400054c6:	int3   
   1400054c7:	int3   
   1400054c8:	int3   
   1400054c9:	int3   
   1400054ca:	int3   
   1400054cb:	int3   
   1400054cc:	int3   
   1400054cd:	int3   
   1400054ce:	int3   
   1400054cf:	int3   
   1400054d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400054d5:	push   rdi
   1400054d6:	sub    rsp,0x20
   1400054da:	xor    ebx,ebx
   1400054dc:	mov    eax,0x2a34
   1400054e1:	mov    rdi,rcx
   1400054e4:	cmp    dx,ax
   1400054e7:	jne    0x14000550e
   1400054e9:	mov    rcx,QWORD PTR [rcx+0x18]
   1400054ed:	call   0x14000624c
   1400054f2:	test   eax,eax
   1400054f4:	jns    0x140005509
   1400054f6:	mov    rdx,QWORD PTR [rdi+0x18]
   1400054fa:	mov    r8d,0x4e2a
   140005500:	mov    rcx,QWORD PTR [rdi+0x8]
   140005504:	call   0x140006130
   140005509:	mov    ebx,0x1
   14000550e:	mov    eax,ebx
   140005510:	mov    rbx,QWORD PTR [rsp+0x30]
   140005515:	add    rsp,0x20
   140005519:	pop    rdi
   14000551a:	ret    
   14000551b:	int3   
   14000551c:	int3   
   14000551d:	int3   
   14000551e:	int3   
   14000551f:	int3   
   140005520:	int3   
   140005521:	int3   
   140005522:	int3   
   140005523:	int3   
   140005524:	mov    rax,rsp
   140005527:	mov    QWORD PTR [rax+0x8],rbx
   14000552b:	mov    QWORD PTR [rax+0x20],rsi
   14000552f:	push   rdi
   140005530:	push   r14
   140005532:	push   r15
   140005534:	sub    rsp,0x30
   140005538:	and    DWORD PTR [rax+0x10],0x0
   14000553c:	lea    rdi,[rcx+0x20]
   140005540:	and    QWORD PTR [rax+0x18],0x0
   140005545:	lea    r9,[rip+0x5ba4]        # 0x14000b0f0
   14000554c:	xor    edx,edx
   14000554e:	mov    QWORD PTR [rax-0x28],rdi
   140005552:	mov    rsi,rcx
   140005555:	lea    rcx,[rip+0x5b84]        # 0x14000b0e0
   14000555c:	lea    r8d,[rdx+0x15]
   140005560:	call   QWORD PTR [rip+0x4e92]        # 0x14000a3f8
   140005566:	mov    ebx,eax
   140005568:	test   eax,eax
   14000556a:	js     0x1400056bf
   140005570:	mov    ecx,0x30
   140005575:	call   0x140008564
   14000557a:	test   rax,rax
   14000557d:	je     0x140005592
   14000557f:	mov    r8,QWORD PTR [rsi+0xa8]
   140005586:	mov    rcx,rax
   140005589:	mov    rdx,QWORD PTR [rsi+0x8]
   14000558d:	call   0x140005d4c
   140005592:	mov    QWORD PTR [rsi+0x98],rax
   140005599:	test   rax,rax
   14000559c:	jne    0x1400055b6
   14000559e:	mov    rdx,QWORD PTR [rsi+0x18]
   1400055a2:	mov    r8d,0x4e28
   1400055a8:	mov    rcx,QWORD PTR [rsi+0x8]
   1400055ac:	call   0x140006130
   1400055b1:	mov    ebx,0x8007000e
   1400055b6:	test   ebx,ebx
   1400055b8:	js     0x1400056d2
   1400055be:	mov    rax,QWORD PTR [rsi+0x10]
   1400055c2:	lea    r9,[rsp+0x60]
   1400055c7:	lea    r8,[rsp+0x58]
   1400055cc:	xor    ecx,ecx
   1400055ce:	mov    rdx,QWORD PTR [rax+0x38]
   1400055d2:	call   0x1400058c8
   1400055d7:	mov    ebx,eax
   1400055d9:	test   eax,eax
   1400055db:	jns    0x1400055e8
   1400055dd:	mov    r8d,0x4e29
   1400055e3:	jmp    0x1400056c5
   1400055e8:	mov    rax,QWORD PTR [rsi+0x98]
   1400055ef:	test   rax,rax
   1400055f2:	je     0x1400055fa
   1400055f4:	lea    rcx,[rax+0x8]
   1400055f8:	jmp    0x1400055fc
   1400055fa:	xor    ecx,ecx
   1400055fc:	mov    rdx,QWORD PTR [rdi]
   1400055ff:	lea    r8,[rsi+0x28]
   140005603:	call   0x140008234
   140005608:	mov    ebx,eax
   14000560a:	test   eax,eax
   14000560c:	js     0x1400056bf
   140005612:	mov    rcx,QWORD PTR [rsi+0x10]
   140005616:	lea    r14,[rsi+0x30]
   14000561a:	cmp    DWORD PTR [rcx+0x4],0x0
   14000561e:	jne    0x140005626
   140005620:	and    QWORD PTR [r14],0x0
   140005624:	jmp    0x140005633
   140005626:	mov    rcx,QWORD PTR [rcx+0x28]
   14000562a:	call   QWORD PTR [rip+0x4b68]        # 0x14000a198
   140005630:	mov    QWORD PTR [r14],rax
   140005633:	mov    rax,QWORD PTR [rsi+0x10]
   140005637:	mov    rcx,QWORD PTR [rax+0x38]
   14000563b:	call   QWORD PTR [rip+0x4b57]        # 0x14000a198
   140005641:	mov    rdx,QWORD PTR [rsi+0x10]
   140005645:	mov    QWORD PTR [rsi+0x40],rax
   140005649:	xor    eax,eax
   14000564b:	lea    r8d,[rax+0x1]
   14000564f:	cmp    DWORD PTR [rdx+0x40],r8d
   140005653:	setne  al
   140005656:	mov    DWORD PTR [rsi+0x54],eax
   140005659:	mov    ecx,DWORD PTR [rdx+0x44]
   14000565c:	test   ecx,ecx
   14000565e:	je     0x140005679
   140005660:	sub    ecx,r8d
   140005663:	je     0x140005673
   140005665:	cmp    ecx,r8d
   140005668:	jne    0x14000567d
   14000566a:	mov    DWORD PTR [rsi+0x58],0x2
   140005671:	jmp    0x14000567d
   140005673:	and    DWORD PTR [rsi+0x58],0x0
   140005677:	jmp    0x14000567d
   140005679:	mov    DWORD PTR [rsi+0x58],r8d
   14000567d:	mov    eax,DWORD PTR [rdx+0x48]
   140005680:	mov    rdi,QWORD PTR [rsi+0x28]
   140005684:	mov    DWORD PTR [rsi+0x5c],eax
   140005687:	mov    DWORD PTR [rsi+0x68],r8d
   14000568b:	mov    rax,QWORD PTR [rdi]
   14000568e:	mov    rbx,QWORD PTR [rax+0x28]
   140005692:	mov    rcx,rbx
   140005695:	call   QWORD PTR [rip+0x4d85]        # 0x14000a420
   14000569b:	mov    rax,QWORD PTR [rsp+0x60]
   1400056a0:	mov    rdx,r14
   1400056a3:	mov    r9d,DWORD PTR [rsp+0x58]
   1400056a8:	mov    rcx,rdi
   1400056ab:	mov    r8,QWORD PTR [rsi+0x98]
   1400056b2:	mov    QWORD PTR [rsp+0x20],rax
   1400056b7:	call   rbx
   1400056b9:	mov    ebx,eax
   1400056bb:	test   eax,eax
   1400056bd:	jns    0x1400056d2
   1400056bf:	mov    r8d,0x4e27
   1400056c5:	mov    rdx,QWORD PTR [rsi+0x18]
   1400056c9:	mov    rcx,QWORD PTR [rsi+0x8]
   1400056cd:	call   0x140006130
   1400056d2:	mov    rsi,QWORD PTR [rsp+0x68]
   1400056d7:	mov    eax,ebx
   1400056d9:	mov    rbx,QWORD PTR [rsp+0x50]
   1400056de:	add    rsp,0x30
   1400056e2:	pop    r15
   1400056e4:	pop    r14
   1400056e6:	pop    rdi
   1400056e7:	ret    
   1400056e8:	int3   
   1400056e9:	int3   
   1400056ea:	int3   
   1400056eb:	int3   
   1400056ec:	int3   
   1400056ed:	int3   
   1400056ee:	int3   
   1400056ef:	int3   
   1400056f0:	mov    rax,rsp
   1400056f3:	mov    QWORD PTR [rax+0x8],rbx
   1400056f7:	mov    QWORD PTR [rax+0x10],rbp
   1400056fb:	mov    QWORD PTR [rax+0x18],rsi
   1400056ff:	mov    QWORD PTR [rax+0x20],rdi
   140005703:	push   r12
   140005705:	push   r14
   140005707:	push   r15
   140005709:	sub    rsp,0x30
   14000570d:	lea    rdi,[rcx+0x20]
   140005711:	xor    edx,edx
   140005713:	mov    rsi,rcx
   140005716:	mov    QWORD PTR [rax-0x28],rdi
   14000571a:	lea    r9,[rip+0x59cf]        # 0x14000b0f0
   140005721:	lea    rcx,[rip+0x59b8]        # 0x14000b0e0
   140005728:	lea    r8d,[rdx+0x15]
   14000572c:	call   QWORD PTR [rip+0x4cc6]        # 0x14000a3f8
   140005732:	mov    ebx,eax
   140005734:	test   eax,eax
   140005736:	js     0x14000588b
   14000573c:	mov    ecx,0x30
   140005741:	call   0x140008564
   140005746:	test   rax,rax
   140005749:	je     0x14000575e
   14000574b:	mov    r8,QWORD PTR [rsi+0xa8]
   140005752:	mov    rcx,rax
   140005755:	mov    rdx,QWORD PTR [rsi+0x8]
   140005759:	call   0x140005d4c
   14000575e:	mov    QWORD PTR [rsi+0x98],rax
   140005765:	test   rax,rax
   140005768:	jne    0x140005782
   14000576a:	mov    rdx,QWORD PTR [rsi+0x18]
   14000576e:	mov    r8d,0x4e28
   140005774:	mov    rcx,QWORD PTR [rsi+0x8]
   140005778:	call   0x140006130
   14000577d:	mov    ebx,0x8007000e
   140005782:	test   ebx,ebx
   140005784:	js     0x14000589e
   14000578a:	mov    rcx,QWORD PTR [rsi+0x10]
   14000578e:	cmp    DWORD PTR [rcx+0x50],0x0
   140005792:	je     0x1400057b6
   140005794:	mov    rcx,QWORD PTR [rcx+0x38]
   140005798:	call   QWORD PTR [rip+0x49e2]        # 0x14000a180
   14000579e:	test   eax,eax
   1400057a0:	jne    0x1400057b6
   1400057a2:	call   QWORD PTR [rip+0x4950]        # 0x14000a0f8
   1400057a8:	movzx  ebx,ax
   1400057ab:	or     ebx,0x80070000
   1400057b1:	test   eax,eax
   1400057b3:	cmovle ebx,eax
   1400057b6:	test   ebx,ebx
   1400057b8:	js     0x14000589e
   1400057be:	mov    rax,QWORD PTR [rsi+0x10]
   1400057c2:	lea    rbp,[rsi+0xb0]
   1400057c9:	lea    r12,[rsi+0xb8]
   1400057d0:	mov    r9,rbp
   1400057d3:	mov    r8,r12
   1400057d6:	xor    edx,edx
   1400057d8:	mov    rcx,QWORD PTR [rax+0x28]
   1400057dc:	call   0x1400058c8
   1400057e1:	mov    ebx,eax
   1400057e3:	test   eax,eax
   1400057e5:	jns    0x1400057f2
   1400057e7:	mov    r8d,0x4e29
   1400057ed:	jmp    0x140005891
   1400057f2:	mov    rax,QWORD PTR [rsi+0x98]
   1400057f9:	test   rax,rax
   1400057fc:	je     0x140005804
   1400057fe:	lea    rcx,[rax+0x8]
   140005802:	jmp    0x140005806
   140005804:	xor    ecx,ecx
   140005806:	mov    rdx,QWORD PTR [rdi]
   140005809:	lea    r8,[rsi+0x28]
   14000580d:	call   0x140008234
   140005812:	mov    ebx,eax
   140005814:	test   eax,eax
   140005816:	js     0x14000588b
   140005818:	mov    rcx,QWORD PTR [rsi+0x10]
   14000581c:	lea    r14,[rsi+0x70]
   140005820:	cmp    DWORD PTR [rcx+0x4],0x0
   140005824:	jne    0x14000582c
   140005826:	and    QWORD PTR [r14],0x0
   14000582a:	jmp    0x140005839
   14000582c:	mov    rcx,QWORD PTR [rcx+0x28]
   140005830:	call   QWORD PTR [rip+0x4962]        # 0x14000a198
   140005836:	mov    QWORD PTR [r14],rax
   140005839:	mov    rax,QWORD PTR [rsi+0x10]
   14000583d:	mov    rcx,QWORD PTR [rax+0x38]
   140005841:	call   QWORD PTR [rip+0x4951]        # 0x14000a198
   140005847:	mov    rdi,QWORD PTR [rsi+0x28]
   14000584b:	mov    QWORD PTR [rsi+0x78],rax
   14000584f:	mov    DWORD PTR [rsi+0x88],0x1
   140005859:	mov    rax,QWORD PTR [rdi]
   14000585c:	mov    rbx,QWORD PTR [rax+0x18]
   140005860:	mov    rcx,rbx
   140005863:	call   QWORD PTR [rip+0x4bb7]        # 0x14000a420
   140005869:	mov    rax,QWORD PTR [rbp+0x0]
   14000586d:	mov    rdx,r14
   140005870:	mov    r9d,DWORD PTR [r12]
   140005874:	mov    rcx,rdi
   140005877:	mov    r8,QWORD PTR [rsi+0x98]
   14000587e:	mov    QWORD PTR [rsp+0x20],rax
   140005883:	call   rbx
   140005885:	mov    ebx,eax
   140005887:	test   eax,eax
   140005889:	jns    0x14000589e
   14000588b:	mov    r8d,0x4e27
   140005891:	mov    rdx,QWORD PTR [rsi+0x18]
   140005895:	mov    rcx,QWORD PTR [rsi+0x8]
   140005899:	call   0x140006130
   14000589e:	mov    rbp,QWORD PTR [rsp+0x58]
   1400058a3:	mov    eax,ebx
   1400058a5:	mov    rbx,QWORD PTR [rsp+0x50]
   1400058aa:	mov    rsi,QWORD PTR [rsp+0x60]
   1400058af:	mov    rdi,QWORD PTR [rsp+0x68]
   1400058b4:	add    rsp,0x30
   1400058b8:	pop    r15
   1400058ba:	pop    r14
   1400058bc:	pop    r12
   1400058be:	ret    
   1400058bf:	int3   
   1400058c0:	int3   
   1400058c1:	int3   
   1400058c2:	int3   
   1400058c3:	int3   
   1400058c4:	int3   
   1400058c5:	int3   
   1400058c6:	int3   
   1400058c7:	int3   
   1400058c8:	mov    rax,rsp
   1400058cb:	mov    QWORD PTR [rax+0x8],rbx
   1400058cf:	mov    QWORD PTR [rax+0x10],rbp
   1400058d3:	mov    QWORD PTR [rax+0x18],rsi
   1400058d7:	push   rdi
   1400058d8:	push   r12
   1400058da:	push   r13
   1400058dc:	push   r14
   1400058de:	push   r15
   1400058e0:	sub    rsp,0x40
   1400058e4:	xor    r13d,r13d
   1400058e7:	mov    rbp,rdx
   1400058ea:	mov    rbx,rcx
   1400058ed:	mov    QWORD PTR [rax-0x38],r13
   1400058f1:	xor    ecx,ecx
   1400058f3:	mov    r15,r9
   1400058f6:	mov    r12,r8
   1400058f9:	mov    esi,r13d
   1400058fc:	lea    edx,[r13+0x2]
   140005900:	call   QWORD PTR [rip+0x4b0a]        # 0x14000a410
   140005906:	lea    ecx,[r13+0x1]
   14000590a:	mov    r14d,r13d
   14000590d:	test   eax,eax
   14000590f:	lea    r9,[rip+0x57aa]        # 0x14000b0c0
   140005916:	lea    rax,[rsp+0x30]
   14000591b:	cmove  r14d,ecx
   14000591f:	mov    QWORD PTR [rsp+0x20],rax
   140005924:	xor    edx,edx
   140005926:	lea    rcx,[rip+0x57b3]        # 0x14000b0e0
   14000592d:	lea    r8d,[r13+0x15]
   140005931:	call   QWORD PTR [rip+0x4ac1]        # 0x14000a3f8
   140005937:	mov    edi,eax
   140005939:	test   eax,eax
   14000593b:	js     0x1400059d6
   140005941:	test   rbx,rbx
   140005944:	je     0x140005975
   140005946:	cmp    r13w,WORD PTR [rbx]
   14000594a:	je     0x140005975
   14000594c:	mov    rcx,rbx
   14000594f:	call   QWORD PTR [rip+0x4843]        # 0x14000a198
   140005955:	mov    rsi,rax
   140005958:	mov    eax,0x8007000e
   14000595d:	test   rsi,rsi
   140005960:	cmove  edi,eax
   140005963:	test   edi,edi
   140005965:	js     0x1400059c8
   140005967:	mov    rdi,QWORD PTR [rsp+0x30]
   14000596c:	mov    rdx,QWORD PTR [rdi]
   14000596f:	mov    rbx,QWORD PTR [rdx+0x18]
   140005973:	jmp    0x1400059a8
   140005975:	test   rbp,rbp
   140005978:	je     0x1400059c3
   14000597a:	cmp    r13w,WORD PTR [rbp+0x0]
   14000597f:	je     0x1400059c3
   140005981:	mov    rcx,rbp
   140005984:	call   QWORD PTR [rip+0x480e]        # 0x14000a198
   14000598a:	mov    rsi,rax
   14000598d:	mov    eax,0x8007000e
   140005992:	test   rsi,rsi
   140005995:	cmove  edi,eax
   140005998:	test   edi,edi
   14000599a:	js     0x1400059c8
   14000599c:	mov    rdi,QWORD PTR [rsp+0x30]
   1400059a1:	mov    rax,QWORD PTR [rdi]
   1400059a4:	mov    rbx,QWORD PTR [rax+0x20]
   1400059a8:	mov    rcx,rbx
   1400059ab:	call   QWORD PTR [rip+0x4a6f]        # 0x14000a420
   1400059b1:	mov    r9,r15
   1400059b4:	mov    r8,r12
   1400059b7:	mov    rdx,rsi
   1400059ba:	mov    rcx,rdi
   1400059bd:	call   rbx
   1400059bf:	mov    edi,eax
   1400059c1:	jmp    0x1400059c8
   1400059c3:	mov    edi,0x80070057
   1400059c8:	test   rsi,rsi
   1400059cb:	je     0x1400059d6
   1400059cd:	mov    rcx,rsi
   1400059d0:	call   QWORD PTR [rip+0x47d2]        # 0x14000a1a8
   1400059d6:	mov    rsi,QWORD PTR [rsp+0x30]
   1400059db:	test   rsi,rsi
   1400059de:	je     0x1400059f5
   1400059e0:	mov    rax,QWORD PTR [rsi]
   1400059e3:	mov    rbx,QWORD PTR [rax+0x10]
   1400059e7:	mov    rcx,rbx
   1400059ea:	call   QWORD PTR [rip+0x4a30]        # 0x14000a420
   1400059f0:	mov    rcx,rsi
   1400059f3:	call   rbx
   1400059f5:	test   r14d,r14d
   1400059f8:	je     0x140005a00
   1400059fa:	call   QWORD PTR [rip+0x4a00]        # 0x14000a400
   140005a00:	lea    r11,[rsp+0x40]
   140005a05:	mov    eax,edi
   140005a07:	mov    rbx,QWORD PTR [r11+0x30]
   140005a0b:	mov    rbp,QWORD PTR [r11+0x38]
   140005a0f:	mov    rsi,QWORD PTR [r11+0x40]
   140005a13:	mov    rsp,r11
   140005a16:	pop    r15
   140005a18:	pop    r14
   140005a1a:	pop    r13
   140005a1c:	pop    r12
   140005a1e:	pop    rdi
   140005a1f:	ret    
   140005a20:	int3   
   140005a21:	int3   
   140005a22:	int3   
   140005a23:	int3   
   140005a24:	int3   
   140005a25:	int3   
   140005a26:	int3   
   140005a27:	int3   
   140005a28:	mov    QWORD PTR [rsp+0x8],rbx
   140005a2d:	mov    QWORD PTR [rsp+0x10],rsi
   140005a32:	push   rdi
   140005a33:	sub    rsp,0x20
   140005a37:	mov    rsi,rcx
   140005a3a:	xor    ebx,ebx
   140005a3c:	mov    rcx,QWORD PTR [rcx+0xa0]
   140005a43:	test   rcx,rcx
   140005a46:	jne    0x140005a52
   140005a48:	mov    ebx,0x80004005
   140005a4d:	jmp    0x140005b0e
   140005a52:	call   QWORD PTR [rip+0x46f0]        # 0x14000a148
   140005a58:	test   eax,eax
   140005a5a:	jne    0x140005a78
   140005a5c:	call   QWORD PTR [rip+0x4696]        # 0x14000a0f8
   140005a62:	movzx  ebx,ax
   140005a65:	or     ebx,0x80070000
   140005a6b:	test   eax,eax
   140005a6d:	cmovle ebx,eax
   140005a70:	test   ebx,ebx
   140005a72:	js     0x140005b0e
   140005a78:	mov    ecx,0x38
   140005a7d:	call   0x140008564
   140005a82:	mov    rdi,rax
   140005a85:	test   rax,rax
   140005a88:	je     0x140005a9a
   140005a8a:	xor    edx,edx
   140005a8c:	mov    rcx,rax
   140005a8f:	lea    r8d,[rdx+0x38]
   140005a93:	call   0x14000906a
   140005a98:	jmp    0x140005a9c
   140005a9a:	xor    edi,edi
   140005a9c:	test   rdi,rdi
   140005a9f:	mov    eax,0x8007000e
   140005aa4:	cmove  ebx,eax
   140005aa7:	test   ebx,ebx
   140005aa9:	js     0x140005b01
   140005aab:	mov    rax,QWORD PTR [rsi+0x8]
   140005aaf:	lea    rcx,[rip+0x8a]        # 0x140005b40
   140005ab6:	mov    QWORD PTR [rdi],rax
   140005ab9:	mov    r8d,0x1
   140005abf:	mov    rax,QWORD PTR [rsi+0xa0]
   140005ac6:	mov    rdx,rdi
   140005ac9:	mov    QWORD PTR [rdi+0x30],rax
   140005acd:	mov    rax,QWORD PTR [rsi+0x18]
   140005ad1:	mov    QWORD PTR [rdi+0x8],rax
   140005ad5:	movups xmm0,XMMWORD PTR [rsi+0xbc]
   140005adc:	movdqu XMMWORD PTR [rdi+0x10],xmm0
   140005ae1:	movups xmm1,XMMWORD PTR [rsi+0xcc]
   140005ae8:	movdqu XMMWORD PTR [rdi+0x20],xmm1
   140005aed:	call   QWORD PTR [rip+0x4665]        # 0x14000a158
   140005af3:	test   eax,eax
   140005af5:	jne    0x140005b23
   140005af7:	mov    rcx,rdi
   140005afa:	call   0x140005b40
   140005aff:	jmp    0x140005b23
   140005b01:	test   rdi,rdi
   140005b04:	je     0x140005b0e
   140005b06:	mov    rcx,rdi
   140005b09:	call   0x140008558
   140005b0e:	mov    r8,QWORD PTR [rsi+0xa0]
   140005b15:	mov    edx,0x2
   140005b1a:	mov    rcx,QWORD PTR [rsi+0x8]
   140005b1e:	call   0x140005cd8
   140005b23:	mov    rsi,QWORD PTR [rsp+0x38]
   140005b28:	mov    eax,ebx
   140005b2a:	mov    rbx,QWORD PTR [rsp+0x30]
   140005b2f:	add    rsp,0x20
   140005b33:	pop    rdi
   140005b34:	ret    
   140005b35:	int3   
   140005b36:	int3   
   140005b37:	int3   
   140005b38:	int3   
   140005b39:	int3   
   140005b3a:	int3   
   140005b3b:	int3   
   140005b3c:	int3   
   140005b3d:	int3   
   140005b3e:	int3   
   140005b3f:	int3   
   140005b40:	test   rcx,rcx
   140005b43:	je     0x140005cd1
   140005b49:	push   rbp
   140005b4a:	push   rbx
   140005b4b:	push   rsi
   140005b4c:	push   rdi
   140005b4d:	push   r13
   140005b4f:	push   r14
   140005b51:	push   r15
   140005b53:	mov    rbp,rsp
   140005b56:	sub    rsp,0x40
   140005b5a:	and    QWORD PTR [rbp+0x48],0x0
   140005b5f:	mov    rsi,rcx
   140005b62:	and    QWORD PTR [rbp+0x50],0x0
   140005b67:	mov    r14d,0x2
   140005b6d:	and    QWORD PTR [rbp+0x58],0x0
   140005b72:	mov    edx,r14d
   140005b75:	and    DWORD PTR [rbp+0x40],0x0
   140005b79:	xor    ecx,ecx
   140005b7b:	call   QWORD PTR [rip+0x488f]        # 0x14000a410
   140005b81:	movups xmm0,XMMWORD PTR [rsi+0x20]
   140005b85:	xor    r15d,r15d
   140005b88:	lea    ecx,[r14-0x1]
   140005b8c:	movups xmm1,XMMWORD PTR [rsi+0x10]
   140005b90:	test   eax,eax
   140005b92:	lea    r9,[rbp+0x48]
   140005b96:	lea    r8,[rbp-0x20]
   140005b9a:	cmove  r15d,ecx
   140005b9e:	lea    rdx,[rbp-0x10]
   140005ba2:	mov    rcx,QWORD PTR [rsi+0x8]
   140005ba6:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140005bab:	movdqu XMMWORD PTR [rbp-0x10],xmm1
   140005bb0:	call   0x14000616c
   140005bb5:	test   eax,eax
   140005bb7:	js     0x140005c47
   140005bbd:	mov    rdi,QWORD PTR [rbp+0x48]
   140005bc1:	mov    rax,QWORD PTR [rdi]
   140005bc4:	mov    rbx,QWORD PTR [rax+0x68]
   140005bc8:	mov    rcx,rbx
   140005bcb:	call   QWORD PTR [rip+0x484f]        # 0x14000a420
   140005bd1:	lea    rdx,[rbp+0x50]
   140005bd5:	mov    rcx,rdi
   140005bd8:	call   rbx
   140005bda:	test   eax,eax
   140005bdc:	js     0x140005c47
   140005bde:	mov    rdi,QWORD PTR [rbp+0x50]
   140005be2:	mov    r13d,0x80004005
   140005be8:	test   rdi,rdi
   140005beb:	cmove  eax,r13d
   140005bef:	test   eax,eax
   140005bf1:	js     0x140005c47
   140005bf3:	mov    rax,QWORD PTR [rdi]
   140005bf6:	mov    rbx,QWORD PTR [rax+0x60]
   140005bfa:	mov    rcx,rbx
   140005bfd:	call   QWORD PTR [rip+0x481d]        # 0x14000a420
   140005c03:	lea    rdx,[rbp+0x58]
   140005c07:	mov    rcx,rdi
   140005c0a:	call   rbx
   140005c0c:	test   eax,eax
   140005c0e:	js     0x140005c47
   140005c10:	mov    rdi,QWORD PTR [rbp+0x58]
   140005c14:	test   rdi,rdi
   140005c17:	cmove  eax,r13d
   140005c1b:	test   eax,eax
   140005c1d:	js     0x140005c47
   140005c1f:	mov    rax,QWORD PTR [rdi]
   140005c22:	mov    rbx,QWORD PTR [rax+0x40]
   140005c26:	mov    rcx,rbx
   140005c29:	call   QWORD PTR [rip+0x47f1]        # 0x14000a420
   140005c2f:	lea    rdx,[rbp+0x40]
   140005c33:	mov    rcx,rdi
   140005c36:	call   rbx
   140005c38:	test   eax,eax
   140005c3a:	js     0x140005c47
   140005c3c:	xor    r14d,r14d
   140005c3f:	cmp    DWORD PTR [rbp+0x40],r14d
   140005c43:	setne  r14b
   140005c47:	mov    rdi,QWORD PTR [rbp+0x48]
   140005c4b:	test   rdi,rdi
   140005c4e:	je     0x140005c65
   140005c50:	mov    rax,QWORD PTR [rdi]
   140005c53:	mov    rbx,QWORD PTR [rax+0x10]
   140005c57:	mov    rcx,rbx
   140005c5a:	call   QWORD PTR [rip+0x47c0]        # 0x14000a420
   140005c60:	mov    rcx,rdi
   140005c63:	call   rbx
   140005c65:	mov    rdi,QWORD PTR [rbp+0x50]
   140005c69:	test   rdi,rdi
   140005c6c:	je     0x140005c83
   140005c6e:	mov    rax,QWORD PTR [rdi]
   140005c71:	mov    rbx,QWORD PTR [rax+0x10]
   140005c75:	mov    rcx,rbx
   140005c78:	call   QWORD PTR [rip+0x47a2]        # 0x14000a420
   140005c7e:	mov    rcx,rdi
   140005c81:	call   rbx
   140005c83:	mov    rdi,QWORD PTR [rbp+0x58]
   140005c87:	test   rdi,rdi
   140005c8a:	je     0x140005ca1
   140005c8c:	mov    rax,QWORD PTR [rdi]
   140005c8f:	mov    rbx,QWORD PTR [rax+0x10]
   140005c93:	mov    rcx,rbx
   140005c96:	call   QWORD PTR [rip+0x4784]        # 0x14000a420
   140005c9c:	mov    rcx,rdi
   140005c9f:	call   rbx
   140005ca1:	test   r15d,r15d
   140005ca4:	je     0x140005cac
   140005ca6:	call   QWORD PTR [rip+0x4754]        # 0x14000a400
   140005cac:	mov    r8,QWORD PTR [rsi+0x30]
   140005cb0:	mov    edx,r14d
   140005cb3:	mov    rcx,QWORD PTR [rsi]
   140005cb6:	call   0x140005cd8
   140005cbb:	mov    rcx,rsi
   140005cbe:	call   0x140008558
   140005cc3:	add    rsp,0x40
   140005cc7:	pop    r15
   140005cc9:	pop    r14
   140005ccb:	pop    r13
   140005ccd:	pop    rdi
   140005cce:	pop    rsi
   140005ccf:	pop    rbx
   140005cd0:	pop    rbp
   140005cd1:	ret    
   140005cd2:	int3   
   140005cd3:	int3   
   140005cd4:	int3   
   140005cd5:	int3   
   140005cd6:	int3   
   140005cd7:	int3   
   140005cd8:	mov    QWORD PTR [rsp+0x8],rbx
   140005cdd:	push   rdi
   140005cde:	sub    rsp,0x20
   140005ce2:	mov    rdi,r8
   140005ce5:	xor    r9d,r9d
   140005ce8:	mov    r8d,edx
   140005ceb:	xor    ebx,ebx
   140005ced:	mov    edx,0x405
   140005cf2:	call   QWORD PTR [rip+0x4528]        # 0x14000a220
   140005cf8:	test   eax,eax
   140005cfa:	jne    0x140005d10
   140005cfc:	call   QWORD PTR [rip+0x43f6]        # 0x14000a0f8
   140005d02:	movzx  ebx,ax
   140005d05:	or     ebx,0x80070000
   140005d0b:	test   eax,eax
   140005d0d:	cmovle ebx,eax
   140005d10:	test   rdi,rdi
   140005d13:	je     0x140005d36
   140005d15:	mov    rcx,rdi
   140005d18:	call   QWORD PTR [rip+0x4402]        # 0x14000a120
   140005d1e:	test   eax,eax
   140005d20:	jne    0x140005d36
   140005d22:	call   QWORD PTR [rip+0x43d0]        # 0x14000a0f8
   140005d28:	movzx  ebx,ax
   140005d2b:	or     ebx,0x80070000
   140005d31:	test   eax,eax
   140005d33:	cmovle ebx,eax
   140005d36:	mov    eax,ebx
   140005d38:	mov    rbx,QWORD PTR [rsp+0x30]
   140005d3d:	add    rsp,0x20
   140005d41:	pop    rdi
   140005d42:	ret    
   140005d43:	int3   
   140005d44:	int3   
   140005d45:	int3   
   140005d46:	int3   
   140005d47:	int3   
   140005d48:	int3   
   140005d49:	int3   
   140005d4a:	int3   
   140005d4b:	int3   
   140005d4c:	mov    QWORD PTR [rsp+0x8],rbx
   140005d51:	mov    QWORD PTR [rsp+0x10],rsi
   140005d56:	push   rdi
   140005d57:	sub    rsp,0x40
   140005d5b:	lea    rax,[rip+0x4c1e]        # 0x14000a980
   140005d62:	mov    rsi,r8
   140005d65:	mov    QWORD PTR [rcx+0x10],rax
   140005d69:	mov    rbx,rcx
   140005d6c:	mov    DWORD PTR [rcx+0x18],0x6e6b6e75
   140005d73:	mov    DWORD PTR [rcx+0x1c],0x1
   140005d7a:	lock inc DWORD PTR [rip+0x7877]        # 0x14000d5f8
   140005d81:	lea    rax,[rip+0x4b18]        # 0x14000a8a0
   140005d88:	mov    QWORD PTR [rcx+0x20],rdx
   140005d8c:	mov    QWORD PTR [rcx],rax
   140005d8f:	lea    rdi,[rcx+0x28]
   140005d93:	lea    rax,[rip+0x4ae6]        # 0x14000a880
   140005d9a:	mov    QWORD PTR [rdi],r8
   140005d9d:	mov    QWORD PTR [rcx+0x8],rax
   140005da1:	lea    rax,[rip+0x4ac8]        # 0x14000a870
   140005da8:	mov    QWORD PTR [rcx+0x10],rax
   140005dac:	call   QWORD PTR [rip+0x43be]        # 0x14000a170
   140005db2:	test   rsi,rsi
   140005db5:	je     0x140005df7
   140005db7:	mov    DWORD PTR [rsp+0x30],0x2
   140005dbf:	mov    r9,rdi
   140005dc2:	and    DWORD PTR [rsp+0x28],0x0
   140005dc7:	mov    r8,rax
   140005dca:	and    DWORD PTR [rsp+0x20],0x0
   140005dcf:	mov    rdx,rsi
   140005dd2:	mov    rcx,rax
   140005dd5:	call   QWORD PTR [rip+0x439d]        # 0x14000a178
   140005ddb:	test   eax,eax
   140005ddd:	jne    0x140005df7
   140005ddf:	call   QWORD PTR [rip+0x4313]        # 0x14000a0f8
   140005de5:	movzx  ecx,ax
   140005de8:	or     ecx,0x80070000
   140005dee:	test   eax,eax
   140005df0:	cmovle ecx,eax
   140005df3:	test   ecx,ecx
   140005df5:	js     0x140005e0f
   140005df7:	mov    rcx,QWORD PTR [rdi]
   140005dfa:	test   rcx,rcx
   140005dfd:	je     0x140005e0f
   140005dff:	call   QWORD PTR [rip+0x4343]        # 0x14000a148
   140005e05:	test   eax,eax
   140005e07:	jne    0x140005e0f
   140005e09:	call   QWORD PTR [rip+0x42e9]        # 0x14000a0f8
   140005e0f:	mov    rsi,QWORD PTR [rsp+0x58]
   140005e14:	mov    rax,rbx
   140005e17:	mov    rbx,QWORD PTR [rsp+0x50]
   140005e1c:	add    rsp,0x40
   140005e20:	pop    rdi
   140005e21:	ret    
   140005e22:	int3   
   140005e23:	int3   
   140005e24:	int3   
   140005e25:	int3   
   140005e26:	int3   
   140005e27:	int3   
   140005e28:	mov    QWORD PTR [rsp+0x8],rbx
   140005e2d:	push   rdi
   140005e2e:	sub    rsp,0x20
   140005e32:	lea    rax,[rip+0x4a67]        # 0x14000a8a0
   140005e39:	mov    rbx,rcx
   140005e3c:	mov    QWORD PTR [rcx],rax
   140005e3f:	mov    edi,edx
   140005e41:	lea    rax,[rip+0x4a38]        # 0x14000a880
   140005e48:	mov    QWORD PTR [rcx+0x8],rax
   140005e4c:	lea    rax,[rip+0x4a1d]        # 0x14000a870
   140005e53:	mov    QWORD PTR [rcx+0x10],rax
   140005e57:	mov    rcx,QWORD PTR [rcx+0x28]
   140005e5b:	test   rcx,rcx
   140005e5e:	je     0x140005e66
   140005e60:	call   QWORD PTR [rip+0x42fa]        # 0x14000a160
   140005e66:	lea    rax,[rip+0x4b13]        # 0x14000a980
   140005e6d:	mov    QWORD PTR [rbx+0x10],rax
   140005e71:	lock dec DWORD PTR [rip+0x7780]        # 0x14000d5f8
   140005e78:	test   dil,0x1
   140005e7c:	je     0x140005e86
   140005e7e:	mov    rcx,rbx
   140005e81:	call   0x140008558
   140005e86:	mov    rax,rbx
   140005e89:	mov    rbx,QWORD PTR [rsp+0x30]
   140005e8e:	add    rsp,0x20
   140005e92:	pop    rdi
   140005e93:	ret    
   140005e94:	int3   
   140005e95:	int3   
   140005e96:	int3   
   140005e97:	int3   
   140005e98:	int3   
   140005e99:	int3   
   140005e9a:	int3   
   140005e9b:	int3   
   140005e9c:	int3   
   140005e9d:	int3   
   140005e9e:	int3   
   140005e9f:	int3   
   140005ea0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ea5:	mov    QWORD PTR [rsp+0x10],rbp
   140005eaa:	mov    QWORD PTR [rsp+0x18],rsi
   140005eaf:	push   rdi
   140005eb0:	push   r14
   140005eb2:	push   r15
   140005eb4:	sub    rsp,0x20
   140005eb8:	mov    r15,rcx
   140005ebb:	mov    r14d,edx
   140005ebe:	mov    rcx,r8
   140005ec1:	mov    rsi,r8
   140005ec4:	xor    ebx,ebx
   140005ec6:	call   QWORD PTR [rip+0x42d4]        # 0x14000a1a0
   140005ecc:	lea    rcx,[rbx-0x1]
   140005ed0:	lea    ebp,[rax+0x1]
   140005ed3:	lea    eax,[rbx+0x2]
   140005ed6:	mul    rbp
   140005ed9:	cmovo  rax,rcx
   140005edd:	mov    rcx,rax
   140005ee0:	call   0x140008564
   140005ee5:	mov    rdi,rax
   140005ee8:	test   rax,rax
   140005eeb:	je     0x140005efc
   140005eed:	mov    r8,rsi
   140005ef0:	mov    edx,ebp
   140005ef2:	mov    rcx,rax
   140005ef5:	call   0x140001068
   140005efa:	mov    ebx,eax
   140005efc:	mov    rcx,QWORD PTR [r15+0x20]
   140005f00:	mov    r8,r14
   140005f03:	mov    r9,rdi
   140005f06:	mov    edx,0x403
   140005f0b:	call   QWORD PTR [rip+0x430f]        # 0x14000a220
   140005f11:	test   eax,eax
   140005f13:	jne    0x140005f31
   140005f15:	call   QWORD PTR [rip+0x41dd]        # 0x14000a0f8
   140005f1b:	movzx  ebx,ax
   140005f1e:	mov    rcx,rdi
   140005f21:	or     ebx,0x80070000
   140005f27:	test   eax,eax
   140005f29:	cmovle ebx,eax
   140005f2c:	call   0x140008558
   140005f31:	mov    rbp,QWORD PTR [rsp+0x48]
   140005f36:	mov    eax,ebx
   140005f38:	mov    rbx,QWORD PTR [rsp+0x40]
   140005f3d:	mov    rsi,QWORD PTR [rsp+0x50]
   140005f42:	add    rsp,0x20
   140005f46:	pop    r15
   140005f48:	pop    r14
   140005f4a:	pop    rdi
   140005f4b:	ret    
   140005f4c:	int3   
   140005f4d:	int3   
   140005f4e:	int3   
   140005f4f:	int3   
   140005f50:	int3   
   140005f51:	int3   
   140005f52:	int3   
   140005f53:	int3   
   140005f54:	int3   
   140005f55:	int3   
   140005f56:	int3   
   140005f57:	int3   
   140005f58:	int3   
   140005f59:	int3   
   140005f5a:	int3   
   140005f5b:	int3   
   140005f5c:	int3   
   140005f5d:	int3   
   140005f5e:	int3   
   140005f5f:	int3   
   140005f60:	mov    QWORD PTR [rsp+0x8],rbx
   140005f65:	push   rdi
   140005f66:	sub    rsp,0x20
   140005f6a:	mov    rdi,rcx
   140005f6d:	xor    r9d,r9d
   140005f70:	mov    rcx,QWORD PTR [rcx+0x18]
   140005f74:	xor    r8d,r8d
   140005f77:	mov    edx,0x404
   140005f7c:	xor    ebx,ebx
   140005f7e:	call   QWORD PTR [rip+0x429c]        # 0x14000a220
   140005f84:	test   eax,eax
   140005f86:	jne    0x140005f9c
   140005f88:	call   QWORD PTR [rip+0x416a]        # 0x14000a0f8
   140005f8e:	movzx  ebx,ax
   140005f91:	or     ebx,0x80070000
   140005f97:	test   eax,eax
   140005f99:	cmovle ebx,eax
   140005f9c:	mov    rcx,QWORD PTR [rdi+0x20]
   140005fa0:	call   QWORD PTR [rip+0x417a]        # 0x14000a120
   140005fa6:	test   eax,eax
   140005fa8:	jne    0x140005fc2
   140005faa:	test   ebx,ebx
   140005fac:	js     0x140005fc2
   140005fae:	call   QWORD PTR [rip+0x4144]        # 0x14000a0f8
   140005fb4:	movzx  ebx,ax
   140005fb7:	or     ebx,0x80070000
   140005fbd:	test   eax,eax
   140005fbf:	cmovle ebx,eax
   140005fc2:	mov    eax,ebx
   140005fc4:	mov    rbx,QWORD PTR [rsp+0x30]
   140005fc9:	add    rsp,0x20
   140005fcd:	pop    rdi
   140005fce:	ret    
   140005fcf:	int3   
   140005fd0:	int3   
   140005fd1:	int3   
   140005fd2:	int3   
   140005fd3:	int3   
   140005fd4:	int3   
   140005fd5:	int3   
   140005fd6:	int3   
   140005fd7:	int3   
   140005fd8:	int3   
   140005fd9:	int3   
   140005fda:	int3   
   140005fdb:	int3   
   140005fdc:	int3   
   140005fdd:	int3   
   140005fde:	int3   
   140005fdf:	int3   
   140005fe0:	sub    rsp,0x68
   140005fe4:	mov    rax,QWORD PTR [rip+0x701d]        # 0x14000d008
   140005feb:	xor    rax,rsp
   140005fee:	mov    QWORD PTR [rsp+0x50],rax
   140005ff3:	mov    QWORD PTR [rsp+0x28],rcx
   140005ff8:	lea    rax,[rip+0x5051]        # 0x14000b050
   140005fff:	mov    QWORD PTR [rsp+0x20],rax
   140006004:	lea    rax,[rip+0x50c5]        # 0x14000b0d0
   14000600b:	mov    QWORD PTR [rsp+0x30],rax
   140006010:	lea    rax,[rip+0x50e9]        # 0x14000b100
   140006017:	mov    QWORD PTR [rsp+0x40],rax
   14000601c:	mov    r10,r8
   14000601f:	mov    QWORD PTR [rsp+0x38],rcx
   140006024:	mov    r11,rdx
   140006027:	test   rcx,rcx
   14000602a:	je     0x140006037
   14000602c:	lea    rax,[rcx+0x8]
   140006030:	mov    QWORD PTR [rsp+0x48],rax
   140006035:	jmp    0x14000603d
   140006037:	and    QWORD PTR [rsp+0x48],0x0
   14000603d:	test   r8,r8
   140006040:	je     0x14000605a
   140006042:	mov    r9d,0x3
   140006048:	lea    r8,[rsp+0x20]
   14000604d:	mov    rdx,r10
   140006050:	mov    rcx,r11
   140006053:	call   0x140007b44
   140006058:	jmp    0x14000605f
   14000605a:	mov    eax,0x80004003
   14000605f:	mov    rcx,QWORD PTR [rsp+0x50]
   140006064:	xor    rcx,rsp
   140006067:	call   0x140008990
   14000606c:	add    rsp,0x68
   140006070:	ret    
   140006071:	int3   
   140006072:	int3   
   140006073:	int3   
   140006074:	int3   
   140006075:	int3   
   140006076:	int3   
   140006077:	int3   
   140006078:	int3   
   140006079:	int3   
   14000607a:	int3   
   14000607b:	int3   
   14000607c:	int3   
   14000607d:	int3   
   14000607e:	int3   
   14000607f:	int3   
   140006080:	mov    eax,0x1
   140006085:	lock xadd DWORD PTR [rcx+0x1c],eax
   14000608a:	inc    eax
   14000608c:	ret    
   14000608d:	int3   
   14000608e:	int3   
   14000608f:	int3   
   140006090:	int3   
   140006091:	int3   
   140006092:	int3   
   140006093:	int3   
   140006094:	int3   
   140006095:	int3   
   140006096:	int3   
   140006097:	int3   
   140006098:	int3   
   140006099:	int3   
   14000609a:	int3   
   14000609b:	int3   
   14000609c:	int3   
   14000609d:	int3   
   14000609e:	int3   
   14000609f:	int3   
   1400060a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400060a5:	push   rdi
   1400060a6:	sub    rsp,0x20
   1400060aa:	lea    rdi,[rcx+0x10]
   1400060ae:	or     eax,0xffffffff
   1400060b1:	lock xadd DWORD PTR [rdi+0xc],eax
   1400060b6:	sub    eax,0x1
   1400060b9:	jne    0x1400060d2
   1400060bb:	mov    rax,QWORD PTR [rdi]
   1400060be:	mov    rbx,QWORD PTR [rax+0x8]
   1400060c2:	mov    rcx,rbx
   1400060c5:	call   QWORD PTR [rip+0x4355]        # 0x14000a420
   1400060cb:	mov    rcx,rdi
   1400060ce:	call   rbx
   1400060d0:	xor    eax,eax
   1400060d2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400060d7:	add    rsp,0x20
   1400060db:	pop    rdi
   1400060dc:	ret    
   1400060dd:	int3   
   1400060de:	int3   
   1400060df:	int3   
   1400060e0:	int3   
   1400060e1:	int3   
   1400060e2:	int3   
   1400060e3:	int3   
   1400060e4:	int3   
   1400060e5:	int3   
   1400060e6:	int3   
   1400060e7:	int3   
   1400060e8:	int3   
   1400060e9:	int3   
   1400060ea:	int3   
   1400060eb:	int3   
   1400060ec:	int3   
   1400060ed:	int3   
   1400060ee:	int3   
   1400060ef:	int3   
   1400060f0:	sub    rcx,0x10
   1400060f4:	jmp    0x140005e28
   1400060f9:	int3   
   1400060fa:	int3   
   1400060fb:	int3   
   1400060fc:	int3   
   1400060fd:	int3   
   1400060fe:	int3   
   1400060ff:	int3   
   140006100:	sub    rcx,0x8
   140006104:	jmp    0x140006080
   140006109:	int3   
   14000610a:	int3   
   14000610b:	int3   
   14000610c:	int3   
   14000610d:	int3   
   14000610e:	int3   
   14000610f:	int3   
   140006110:	sub    rcx,0x8
   140006114:	jmp    0x140005fe0
   140006119:	int3   
   14000611a:	int3   
   14000611b:	int3   
   14000611c:	int3   
   14000611d:	int3   
   14000611e:	int3   
   14000611f:	int3   
   140006120:	sub    rcx,0x8
   140006124:	jmp    0x1400060a0
   140006129:	int3   
   14000612a:	int3   
   14000612b:	int3   
   14000612c:	int3   
   14000612d:	int3   
   14000612e:	int3   
   14000612f:	int3   
   140006130:	mov    rax,rsp
   140006133:	sub    rsp,0x48
   140006137:	and    QWORD PTR [rax-0x10],0x0
   14000613c:	mov    QWORD PTR [rax-0x18],0xfffe
   140006144:	mov    DWORD PTR [rax-0x20],0x1
   14000614b:	and    QWORD PTR [rax-0x28],0x0
   140006150:	movzx  r9d,r8w
   140006154:	mov    r8d,0x65
   14000615a:	call   QWORD PTR [rip+0x3ee8]        # 0x14000a048
   140006160:	add    rsp,0x48
   140006164:	ret    
   140006165:	int3   
   140006166:	int3   
   140006167:	int3   
   140006168:	int3   
   140006169:	int3   
   14000616a:	int3   
   14000616b:	int3   
   14000616c:	rex push rbp
   14000616e:	push   rbx
   14000616f:	push   rdi
   140006170:	push   r14
   140006172:	lea    rbp,[rsp-0x388]
   14000617a:	sub    rsp,0x488
   140006181:	mov    rax,QWORD PTR [rip+0x6e80]        # 0x14000d008
   140006188:	xor    rax,rsp
   14000618b:	mov    QWORD PTR [rbp+0x370],rax
   140006192:	movups xmm0,XMMWORD PTR [rdx]
   140006195:	mov    rbx,rcx
   140006198:	xor    r14d,r14d
   14000619b:	movups xmm1,XMMWORD PTR [r8]
   14000619f:	xor    edx,edx
   1400061a1:	mov    WORD PTR [rsp+0x50],r14w
   1400061a7:	mov    r8d,0x206
   1400061ad:	lea    rcx,[rsp+0x52]
   1400061b2:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400061b8:	mov    rdi,r9
   1400061bb:	movdqu XMMWORD PTR [rsp+0x40],xmm1
   1400061c1:	call   0x14000906a
   1400061c6:	xor    edx,edx
   1400061c8:	mov    WORD PTR [rbp+0x160],r14w
   1400061d0:	mov    r8d,0x206
   1400061d6:	lea    rcx,[rbp+0x162]
   1400061dd:	call   0x14000906a
   1400061e2:	lea    r9,[rsp+0x50]
   1400061e7:	mov    DWORD PTR [rsp+0x28],0x1
   1400061ef:	lea    r8,[rsp+0x40]
   1400061f4:	mov    rcx,rbx
   1400061f7:	lea    rdx,[rsp+0x30]
   1400061fc:	call   0x1400063f0
   140006201:	test   eax,eax
   140006203:	js     0x140006229
   140006205:	lea    r8,[rbp+0x160]
   14000620c:	lea    rdx,[rsp+0x50]
   140006211:	call   0x1400067d0
   140006216:	test   eax,eax
   140006218:	js     0x140006229
   14000621a:	mov    rdx,rdi
   14000621d:	lea    rcx,[rbp+0x160]
   140006224:	call   0x140006a84
   140006229:	mov    rcx,QWORD PTR [rbp+0x370]
   140006230:	xor    rcx,rsp
   140006233:	call   0x140008990
   140006238:	add    rsp,0x488
   14000623f:	pop    r14
   140006241:	pop    rdi
   140006242:	pop    rbx
   140006243:	pop    rbp
   140006244:	ret    
   140006245:	int3   
   140006246:	int3   
   140006247:	int3   
   140006248:	int3   
   140006249:	int3   
   14000624a:	int3   
   14000624b:	int3   
   14000624c:	mov    QWORD PTR [rsp+0x10],rbx
   140006251:	mov    QWORD PTR [rsp+0x18],rsi
   140006256:	push   rbp
   140006257:	lea    rbp,[rsp-0x3f0]
   14000625f:	sub    rsp,0x4f0
   140006266:	mov    rax,QWORD PTR [rip+0x6d9b]        # 0x14000d008
   14000626d:	xor    rax,rsp
   140006270:	mov    QWORD PTR [rbp+0x3e0],rax
   140006277:	mov    rbx,rcx
   14000627a:	xor    esi,esi
   14000627c:	lea    rcx,[rbp-0x3e]
   140006280:	mov    WORD PTR [rbp-0x40],si
   140006284:	xor    edx,edx
   140006286:	mov    r8d,0x206
   14000628c:	call   0x14000906a
   140006291:	xor    edx,edx
   140006293:	mov    WORD PTR [rbp+0x1d0],si
   14000629a:	mov    r8d,0x206
   1400062a0:	lea    rcx,[rbp+0x1d2]
   1400062a7:	call   0x14000906a
   1400062ac:	mov    ecx,0x67727473
   1400062b1:	mov    DWORD PTR [rsp+0x50],esi
   1400062b5:	lea    rax,[rip+0x7334]        # 0x14000d5f0
   1400062bc:	mov    DWORD PTR [rsp+0x40],ecx
   1400062c0:	mov    DWORD PTR [rsp+0x30],ecx
   1400062c4:	lea    r8d,[rsi+0x6c]
   1400062c8:	lea    rcx,[rsp+0x54]
   1400062cd:	mov    QWORD PTR [rsp+0x48],rax
   1400062d2:	xor    edx,edx
   1400062d4:	mov    QWORD PTR [rsp+0x38],rax
   1400062d9:	call   0x14000906a
   1400062de:	lea    r9,[rbp-0x40]
   1400062e2:	mov    DWORD PTR [rsp+0x28],esi
   1400062e6:	xor    r8d,r8d
   1400062e9:	xor    edx,edx
   1400062eb:	mov    rcx,rbx
   1400062ee:	call   0x1400063f0
   1400062f3:	mov    ebx,eax
   1400062f5:	test   eax,eax
   1400062f7:	js     0x1400063b0
   1400062fd:	lea    r8,[rbp-0x40]
   140006301:	lea    rdx,[rip+0x47a0]        # 0x14000aaa8
   140006308:	lea    rcx,[rsp+0x40]
   14000630d:	call   0x1400079a8
   140006312:	mov    ebx,eax
   140006314:	test   eax,eax
   140006316:	js     0x1400063b0
   14000631c:	xor    r9d,r9d
   14000631f:	lea    r8d,[rsi+0x25]
   140006323:	lea    rdx,[rbp+0x1d0]
   14000632a:	xor    ecx,ecx
   14000632c:	call   QWORD PTR [rip+0x3e8e]        # 0x14000a1c0
   140006332:	test   eax,eax
   140006334:	mov    ecx,0x80004005
   140006339:	cmove  ebx,ecx
   14000633c:	test   ebx,ebx
   14000633e:	js     0x1400063b0
   140006340:	lea    r8,[rbp+0x1d0]
   140006347:	lea    rdx,[rip+0x476a]        # 0x14000aab8
   14000634e:	lea    rcx,[rsp+0x30]
   140006353:	call   0x1400079a8
   140006358:	mov    ebx,eax
   14000635a:	test   eax,eax
   14000635c:	js     0x1400063b0
   14000635e:	lea    rax,[rip+0x4773]        # 0x14000aad8
   140006365:	mov    DWORD PTR [rsp+0x50],0x70
   14000636d:	mov    QWORD PTR [rsp+0x60],rax
   140006372:	lea    rcx,[rsp+0x50]
   140006377:	mov    rax,QWORD PTR [rsp+0x38]
   14000637c:	mov    QWORD PTR [rsp+0x68],rax
   140006381:	mov    rax,QWORD PTR [rsp+0x48]
   140006386:	mov    QWORD PTR [rsp+0x70],rax
   14000638b:	mov    DWORD PTR [rbp-0x80],0x1
   140006392:	call   QWORD PTR [rip+0x3e50]        # 0x14000a1e8
   140006398:	test   eax,eax
   14000639a:	jne    0x1400063b0
   14000639c:	call   QWORD PTR [rip+0x3d56]        # 0x14000a0f8
   1400063a2:	movzx  ebx,ax
   1400063a5:	or     ebx,0x80070000
   1400063ab:	test   eax,eax
   1400063ad:	cmovle ebx,eax
   1400063b0:	lea    rcx,[rsp+0x30]
   1400063b5:	call   0x140007628
   1400063ba:	lea    rcx,[rsp+0x40]
   1400063bf:	call   0x140007628
   1400063c4:	mov    eax,ebx
   1400063c6:	mov    rcx,QWORD PTR [rbp+0x3e0]
   1400063cd:	xor    rcx,rsp
   1400063d0:	call   0x140008990
   1400063d5:	lea    r11,[rsp+0x4f0]
   1400063dd:	mov    rbx,QWORD PTR [r11+0x18]
   1400063e1:	mov    rsi,QWORD PTR [r11+0x20]
   1400063e5:	mov    rsp,r11
   1400063e8:	pop    rbp
   1400063e9:	ret    
   1400063ea:	int3   
   1400063eb:	int3   
   1400063ec:	int3   
   1400063ed:	int3   
   1400063ee:	int3   
   1400063ef:	int3   
   1400063f0:	rex push rbp
   1400063f2:	push   rbx
   1400063f3:	push   rsi
   1400063f4:	push   rdi
   1400063f5:	push   r12
   1400063f7:	push   r13
   1400063f9:	push   r14
   1400063fb:	push   r15
   1400063fd:	lea    rbp,[rsp-0x208]
   140006405:	sub    rsp,0x308
   14000640c:	mov    rax,QWORD PTR [rip+0x6bf5]        # 0x14000d008
   140006413:	xor    rax,rsp
   140006416:	mov    QWORD PTR [rbp+0x1f0],rax
   14000641d:	mov    eax,0x67727473
   140006422:	lea    rbx,[rip+0x71c7]        # 0x14000d5f0
   140006429:	mov    r12,r8
   14000642c:	mov    DWORD PTR [rsp+0x40],eax
   140006430:	mov    r15,rdx
   140006433:	mov    QWORD PTR [rsp+0x48],rbx
   140006438:	mov    rsi,rcx
   14000643b:	mov    DWORD PTR [rsp+0x60],eax
   14000643f:	xor    r14d,r14d
   140006442:	mov    QWORD PTR [rsp+0x68],rbx
   140006447:	xor    edx,edx
   140006449:	mov    DWORD PTR [rbp-0x80],eax
   14000644c:	mov    r8d,0x206
   140006452:	mov    QWORD PTR [rbp-0x78],rbx
   140006456:	lea    rcx,[rbp-0x1e]
   14000645a:	mov    DWORD PTR [rsp+0x50],eax
   14000645e:	mov    edi,r14d
   140006461:	mov    QWORD PTR [rsp+0x58],rbx
   140006466:	mov    DWORD PTR [rsp+0x70],eax
   14000646a:	mov    r13,r9
   14000646d:	mov    QWORD PTR [rsp+0x78],rbx
   140006472:	mov    DWORD PTR [rbp-0x70],eax
   140006475:	mov    QWORD PTR [rbp-0x68],rbx
   140006479:	mov    WORD PTR [rbp-0x20],r14w
   14000647e:	call   0x14000906a
   140006483:	or     eax,0xffffffff
   140006486:	mov    QWORD PTR [rsp+0x38],r14
   14000648b:	lea    rcx,[rbp-0x60]
   14000648f:	mov    WORD PTR [rsp+0x30],ax
   140006494:	call   QWORD PTR [rip+0x3cf6]        # 0x14000a190
   14000649a:	cmp    DWORD PTR [rbp+0x278],r14d
   1400064a1:	je     0x140006514
   1400064a3:	test   r15,r15
   1400064a6:	je     0x1400064ad
   1400064a8:	test   r12,r12
   1400064ab:	jne    0x140006514
   1400064ad:	mov    edi,0x80070057
   1400064b2:	xor    r13d,r13d
   1400064b5:	cmp    DWORD PTR [rbp+0x278],r13d
   1400064bc:	je     0x1400065c5
   1400064c2:	test   edi,edi
   1400064c4:	js     0x1400066c7
   1400064ca:	lea    rdx,[rsp+0x60]
   1400064cf:	mov    rcx,r15
   1400064d2:	call   0x140006764
   1400064d7:	mov    edi,eax
   1400064d9:	test   eax,eax
   1400064db:	js     0x1400066c7
   1400064e1:	lea    rdx,[rbp-0x80]
   1400064e5:	mov    rcx,r12
   1400064e8:	call   0x140006764
   1400064ed:	mov    edi,eax
   1400064ef:	test   eax,eax
   1400064f1:	js     0x1400066c7
   1400064f7:	mov    rax,QWORD PTR [rbp-0x78]
   1400064fb:	lea    rdx,[rip+0x45ee]        # 0x14000aaf0
   140006502:	mov    r9,QWORD PTR [rsp+0x68]
   140006507:	mov    r8,rbx
   14000650a:	mov    QWORD PTR [rsp+0x20],rax
   14000650f:	jmp    0x14000661b
   140006514:	lea    rdx,[rbp-0x20]
   140006518:	mov    ecx,0x104
   14000651d:	call   QWORD PTR [rip+0x3ba5]        # 0x14000a0c8
   140006523:	test   eax,eax
   140006525:	jne    0x140006543
   140006527:	call   QWORD PTR [rip+0x3bcb]        # 0x14000a0f8
   14000652d:	movzx  edi,ax
   140006530:	or     edi,0x80070000
   140006536:	test   eax,eax
   140006538:	cmovle edi,eax
   14000653b:	test   edi,edi
   14000653d:	js     0x1400064b2
   140006543:	mov    r9,r13
   140006546:	lea    rdx,[rip+0x459b]        # 0x14000aae8
   14000654d:	xor    r8d,r8d
   140006550:	lea    rcx,[rbp-0x20]
   140006554:	call   QWORD PTR [rip+0x3bce]        # 0x14000a128
   14000655a:	test   eax,eax
   14000655c:	jne    0x140006572
   14000655e:	call   QWORD PTR [rip+0x3b94]        # 0x14000a0f8
   140006564:	movzx  edi,ax
   140006567:	or     edi,0x80070000
   14000656d:	test   eax,eax
   14000656f:	cmovle edi,eax
   140006572:	test   edi,edi
   140006574:	js     0x1400064b2
   14000657a:	mov    eax,0x8
   14000657f:	mov    rcx,r13
   140006582:	mov    WORD PTR [rbp-0x60],ax
   140006586:	call   QWORD PTR [rip+0x3c0c]        # 0x14000a198
   14000658c:	xor    r13d,r13d
   14000658f:	mov    ecx,0x8007000e
   140006594:	test   rax,rax
   140006597:	mov    QWORD PTR [rbp-0x58],rax
   14000659b:	cmove  edi,ecx
   14000659e:	test   edi,edi
   1400065a0:	js     0x1400064b5
   1400065a6:	mov    r8d,0x2afa
   1400065ac:	lea    rcx,[rsp+0x70]
   1400065b1:	mov    rdx,rsi
   1400065b4:	call   0x140007894
   1400065b9:	mov    rbx,QWORD PTR [rsp+0x78]
   1400065be:	mov    edi,eax
   1400065c0:	jmp    0x1400064b5
   1400065c5:	test   edi,edi
   1400065c7:	js     0x1400066c7
   1400065cd:	mov    r8d,0x2af8
   1400065d3:	lea    rcx,[rsp+0x50]
   1400065d8:	mov    rdx,rsi
   1400065db:	call   0x140007894
   1400065e0:	mov    edi,eax
   1400065e2:	test   eax,eax
   1400065e4:	js     0x1400066c7
   1400065ea:	mov    r8d,0x2af9
   1400065f0:	lea    rcx,[rbp-0x70]
   1400065f4:	mov    rdx,rsi
   1400065f7:	call   0x140007894
   1400065fc:	mov    edi,eax
   1400065fe:	test   eax,eax
   140006600:	js     0x1400066c7
   140006606:	mov    r9,QWORD PTR [rbp-0x68]
   14000660a:	lea    rdx,[rip+0x46ff]        # 0x14000ad10
   140006611:	mov    r8,QWORD PTR [rsp+0x58]
   140006616:	mov    QWORD PTR [rsp+0x20],rbx
   14000661b:	lea    rcx,[rsp+0x40]
   140006620:	call   0x1400079a8
   140006625:	mov    edi,eax
   140006627:	test   eax,eax
   140006629:	js     0x1400066c7
   14000662f:	mov    rcx,QWORD PTR [rsp+0x48]
   140006634:	call   QWORD PTR [rip+0x3b5e]        # 0x14000a198
   14000663a:	xor    edx,edx
   14000663c:	lea    r9,[rip+0x4a4d]        # 0x14000b090
   140006643:	mov    r14,rax
   140006646:	lea    rcx,[rip+0x4a53]        # 0x14000b0a0
   14000664d:	lea    rax,[rsp+0x38]
   140006652:	mov    QWORD PTR [rsp+0x20],rax
   140006657:	lea    r8d,[rdx+0x1]
   14000665b:	call   QWORD PTR [rip+0x3d97]        # 0x14000a3f8
   140006661:	mov    edi,eax
   140006663:	test   eax,eax
   140006665:	js     0x1400066c7
   140006667:	mov    rdi,QWORD PTR [rsp+0x38]
   14000666c:	mov    rdx,QWORD PTR [rdi]
   14000666f:	mov    rbx,QWORD PTR [rdx+0x208]
   140006676:	mov    rcx,rbx
   140006679:	call   QWORD PTR [rip+0x3da1]        # 0x14000a420
   14000667f:	lea    r8,[rsp+0x30]
   140006684:	mov    rdx,r14
   140006687:	mov    rcx,rdi
   14000668a:	call   rbx
   14000668c:	mov    edi,eax
   14000668e:	test   eax,eax
   140006690:	js     0x1400066c7
   140006692:	movups xmm0,XMMWORD PTR [rbp-0x60]
   140006696:	mov    rdi,QWORD PTR [rsp+0x38]
   14000669b:	movsd  xmm1,QWORD PTR [rbp-0x50]
   1400066a0:	movaps XMMWORD PTR [rbp-0x40],xmm0
   1400066a4:	movsd  QWORD PTR [rbp-0x30],xmm1
   1400066a9:	mov    rax,QWORD PTR [rdi]
   1400066ac:	mov    rbx,QWORD PTR [rax+0x210]
   1400066b3:	mov    rcx,rbx
   1400066b6:	call   QWORD PTR [rip+0x3d64]        # 0x14000a420
   1400066bc:	lea    rdx,[rbp-0x40]
   1400066c0:	mov    rcx,rdi
   1400066c3:	call   rbx
   1400066c5:	mov    edi,eax
   1400066c7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400066cc:	test   rsi,rsi
   1400066cf:	je     0x1400066e6
   1400066d1:	mov    rax,QWORD PTR [rsi]
   1400066d4:	mov    rbx,QWORD PTR [rax+0x10]
   1400066d8:	mov    rcx,rbx
   1400066db:	call   QWORD PTR [rip+0x3d3f]        # 0x14000a420
   1400066e1:	mov    rcx,rsi
   1400066e4:	call   rbx
   1400066e6:	test   r14,r14
   1400066e9:	je     0x1400066f4
   1400066eb:	mov    rcx,r14
   1400066ee:	call   QWORD PTR [rip+0x3ab4]        # 0x14000a1a8
   1400066f4:	lea    rcx,[rbp-0x60]
   1400066f8:	call   QWORD PTR [rip+0x3ab2]        # 0x14000a1b0
   1400066fe:	lea    rcx,[rbp-0x70]
   140006702:	call   0x140007628
   140006707:	lea    rcx,[rsp+0x70]
   14000670c:	call   0x140007628
   140006711:	lea    rcx,[rsp+0x50]
   140006716:	call   0x140007628
   14000671b:	lea    rcx,[rbp-0x80]
   14000671f:	call   0x140007628
   140006724:	lea    rcx,[rsp+0x60]
   140006729:	call   0x140007628
   14000672e:	lea    rcx,[rsp+0x40]
   140006733:	call   0x140007628
   140006738:	mov    eax,edi
   14000673a:	mov    rcx,QWORD PTR [rbp+0x1f0]
   140006741:	xor    rcx,rsp
   140006744:	call   0x140008990
   140006749:	add    rsp,0x308
   140006750:	pop    r15
   140006752:	pop    r14
   140006754:	pop    r13
   140006756:	pop    r12
   140006758:	pop    rdi
   140006759:	pop    rsi
   14000675a:	pop    rbx
   14000675b:	pop    rbp
   14000675c:	ret    
   14000675d:	int3   
   14000675e:	int3   
   14000675f:	int3   
   140006760:	int3   
   140006761:	int3   
   140006762:	int3   
   140006763:	int3   
   140006764:	mov    QWORD PTR [rsp+0x8],rbx
   140006769:	mov    QWORD PTR [rsp+0x10],rsi
   14000676e:	push   rdi
   14000676f:	sub    rsp,0x50
   140006773:	movzx  eax,WORD PTR [rcx+0xe]
   140006777:	mov    rsi,rdx
   14000677a:	movzx  r10d,WORD PTR [rcx+0xc]
   14000677f:	lea    rdx,[rip+0x47ba]        # 0x14000af40
   140006786:	movzx  r11d,WORD PTR [rcx+0xa]
   14000678b:	movzx  ebx,WORD PTR [rcx+0x8]
   14000678f:	movzx  edi,WORD PTR [rcx+0x6]
   140006793:	movzx  r9d,WORD PTR [rcx+0x2]
   140006798:	movzx  r8d,WORD PTR [rcx]
   14000679c:	mov    rcx,rsi
   14000679f:	mov    DWORD PTR [rsp+0x40],eax
   1400067a3:	mov    DWORD PTR [rsp+0x38],r10d
   1400067a8:	mov    DWORD PTR [rsp+0x30],r11d
   1400067ad:	mov    DWORD PTR [rsp+0x28],ebx
   1400067b1:	mov    DWORD PTR [rsp+0x20],edi
   1400067b5:	call   0x1400079a8
   1400067ba:	mov    rbx,QWORD PTR [rsp+0x60]
   1400067bf:	mov    rsi,QWORD PTR [rsp+0x68]
   1400067c4:	add    rsp,0x50
   1400067c8:	pop    rdi
   1400067c9:	ret    
   1400067ca:	int3   
   1400067cb:	int3   
   1400067cc:	int3   
   1400067cd:	int3   
   1400067ce:	int3   
   1400067cf:	int3   
   1400067d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400067d5:	push   rbp
   1400067d6:	push   rsi
   1400067d7:	push   rdi
   1400067d8:	push   r14
   1400067da:	push   r15
   1400067dc:	lea    rbp,[rsp-0x430]
   1400067e4:	sub    rsp,0x530
   1400067eb:	mov    rax,QWORD PTR [rip+0x6816]        # 0x14000d008
   1400067f2:	xor    rax,rsp
   1400067f5:	mov    QWORD PTR [rbp+0x420],rax
   1400067fc:	xor    r15d,r15d
   1400067ff:	lea    rax,[rip+0x6dea]        # 0x14000d5f0
   140006806:	mov    ecx,0x67727473
   14000680b:	mov    QWORD PTR [rsp+0x68],rax
   140006810:	mov    QWORD PTR [rsp+0x58],rax
   140006815:	mov    rdi,r8
   140006818:	xor    eax,eax
   14000681a:	mov    DWORD PTR [rsp+0x60],ecx
   14000681e:	mov    rsi,rdx
   140006821:	mov    DWORD PTR [rsp+0x50],ecx
   140006825:	lea    r8d,[r15+0x60]
   140006829:	mov    QWORD PTR [rsp+0x70],r15
   14000682e:	xor    edx,edx
   140006830:	mov    QWORD PTR [rsp+0x78],rax
   140006835:	lea    rcx,[rbp-0x68]
   140006839:	mov    QWORD PTR [rbp-0x80],rax
   14000683d:	mov    ebx,r15d
   140006840:	mov    DWORD PTR [rbp-0x70],r15d
   140006844:	call   0x14000906a
   140006849:	mov    r14d,0x206
   14000684f:	mov    WORD PTR [rbp+0x210],r15w
   140006857:	mov    r8d,r14d
   14000685a:	lea    rcx,[rbp+0x212]
   140006861:	xor    edx,edx
   140006863:	call   0x14000906a
   140006868:	mov    r8d,r14d
   14000686b:	mov    WORD PTR [rbp+0x0],r15w
   140006870:	xor    edx,edx
   140006872:	lea    rcx,[rbp+0x2]
   140006876:	call   0x14000906a
   14000687b:	lea    rdx,[rbp+0x210]
   140006882:	mov    ecx,0x104
   140006887:	call   QWORD PTR [rip+0x383b]        # 0x14000a0c8
   14000688d:	mov    r14d,0x80070000
   140006893:	test   eax,eax
   140006895:	jne    0x1400068b0
   140006897:	call   QWORD PTR [rip+0x385b]        # 0x14000a0f8
   14000689d:	movzx  ebx,ax
   1400068a0:	or     ebx,r14d
   1400068a3:	test   eax,eax
   1400068a5:	cmovle ebx,eax
   1400068a8:	test   ebx,ebx
   1400068aa:	js     0x140006a0c
   1400068b0:	xor    r9d,r9d
   1400068b3:	lea    rdx,[rbp+0x0]
   1400068b7:	xor    ecx,ecx
   1400068b9:	lea    r8d,[r9+0x25]
   1400068bd:	call   QWORD PTR [rip+0x38fd]        # 0x14000a1c0
   1400068c3:	test   eax,eax
   1400068c5:	mov    ecx,0x80004005
   1400068ca:	cmove  ebx,ecx
   1400068cd:	test   ebx,ebx
   1400068cf:	js     0x140006a0c
   1400068d5:	mov    r9,rdi
   1400068d8:	lea    rdx,[rip+0x4209]        # 0x14000aae8
   1400068df:	xor    r8d,r8d
   1400068e2:	lea    rcx,[rbp+0x210]
   1400068e9:	call   QWORD PTR [rip+0x3839]        # 0x14000a128
   1400068ef:	test   eax,eax
   1400068f1:	jne    0x140006904
   1400068f3:	call   QWORD PTR [rip+0x37ff]        # 0x14000a0f8
   1400068f9:	movzx  ebx,ax
   1400068fc:	or     ebx,r14d
   1400068ff:	test   eax,eax
   140006901:	cmovle ebx,eax
   140006904:	test   ebx,ebx
   140006906:	js     0x140006a0c
   14000690c:	mov    r9,rsi
   14000690f:	mov    QWORD PTR [rsp+0x20],rdi
   140006914:	lea    r8,[rbp+0x0]
   140006918:	lea    rdx,[rip+0x4671]        # 0x14000af90
   14000691f:	lea    rcx,[rsp+0x60]
   140006924:	call   0x1400079a8
   140006929:	mov    ebx,eax
   14000692b:	test   eax,eax
   14000692d:	js     0x140006a0c
   140006933:	lea    rdx,[rbp+0x0]
   140006937:	lea    rcx,[rsp+0x50]
   14000693c:	call   0x140007780
   140006941:	mov    ebx,eax
   140006943:	test   eax,eax
   140006945:	js     0x140006a0c
   14000694b:	lea    rdx,[rip+0x469e]        # 0x14000aff0
   140006952:	lea    rcx,[rsp+0x50]
   140006957:	call   0x140007658
   14000695c:	mov    ebx,eax
   14000695e:	test   eax,eax
   140006960:	js     0x140006a0c
   140006966:	mov    rdx,QWORD PTR [rsp+0x68]
   14000696b:	lea    rax,[rsp+0x70]
   140006970:	mov    rcx,QWORD PTR [rsp+0x58]
   140006975:	xor    r9d,r9d
   140006978:	mov    QWORD PTR [rsp+0x48],rax
   14000697d:	xor    r8d,r8d
   140006980:	lea    rax,[rbp-0x70]
   140006984:	mov    DWORD PTR [rbp-0x70],0x68
   14000698b:	mov    QWORD PTR [rsp+0x40],rax
   140006990:	lea    rax,[rbp+0x0]
   140006994:	mov    QWORD PTR [rsp+0x38],rax
   140006999:	mov    QWORD PTR [rsp+0x30],r15
   14000699e:	mov    DWORD PTR [rsp+0x28],0x8000000
   1400069a6:	mov    DWORD PTR [rsp+0x20],r15d
   1400069ab:	call   QWORD PTR [rip+0x371f]        # 0x14000a0d0
   1400069b1:	test   eax,eax
   1400069b3:	jne    0x1400069c6
   1400069b5:	call   QWORD PTR [rip+0x373d]        # 0x14000a0f8
   1400069bb:	movzx  ebx,ax
   1400069be:	or     ebx,r14d
   1400069c1:	test   eax,eax
   1400069c3:	cmovle ebx,eax
   1400069c6:	test   ebx,ebx
   1400069c8:	js     0x140006a0c
   1400069ca:	mov    rcx,QWORD PTR [rsp+0x70]
   1400069cf:	mov    edx,0x927c0
   1400069d4:	call   QWORD PTR [rip+0x373e]        # 0x14000a118
   1400069da:	cmp    eax,0x80
   1400069df:	je     0x140006a07
   1400069e1:	cmp    eax,0x102
   1400069e6:	je     0x140006a00
   1400069e8:	cmp    eax,0xffffffff
   1400069eb:	jne    0x140006a0c
   1400069ed:	call   QWORD PTR [rip+0x3705]        # 0x14000a0f8
   1400069f3:	movzx  ebx,ax
   1400069f6:	or     ebx,r14d
   1400069f9:	test   eax,eax
   1400069fb:	cmovle ebx,eax
   1400069fe:	jmp    0x140006a0c
   140006a00:	mov    ebx,0x80070102
   140006a05:	jmp    0x140006a0c
   140006a07:	mov    ebx,0x800700cd
   140006a0c:	mov    rcx,rsi
   140006a0f:	call   QWORD PTR [rip+0x376b]        # 0x14000a180
   140006a15:	test   ebx,ebx
   140006a17:	jns    0x140006a22
   140006a19:	mov    rcx,rdi
   140006a1c:	call   QWORD PTR [rip+0x375e]        # 0x14000a180
   140006a22:	mov    rcx,QWORD PTR [rsp+0x70]
   140006a27:	test   rcx,rcx
   140006a2a:	je     0x140006a32
   140006a2c:	call   QWORD PTR [rip+0x372e]        # 0x14000a160
   140006a32:	mov    rcx,QWORD PTR [rsp+0x78]
   140006a37:	test   rcx,rcx
   140006a3a:	je     0x140006a42
   140006a3c:	call   QWORD PTR [rip+0x371e]        # 0x14000a160
   140006a42:	lea    rcx,[rsp+0x50]
   140006a47:	call   0x140007628
   140006a4c:	lea    rcx,[rsp+0x60]
   140006a51:	call   0x140007628
   140006a56:	mov    eax,ebx
   140006a58:	mov    rcx,QWORD PTR [rbp+0x420]
   140006a5f:	xor    rcx,rsp
   140006a62:	call   0x140008990
   140006a67:	mov    rbx,QWORD PTR [rsp+0x560]
   140006a6f:	add    rsp,0x530
   140006a76:	pop    r15
   140006a78:	pop    r14
   140006a7a:	pop    rdi
   140006a7b:	pop    rsi
   140006a7c:	pop    rbp
   140006a7d:	ret    
   140006a7e:	int3   
   140006a7f:	int3   
   140006a80:	int3   
   140006a81:	int3   
   140006a82:	int3   
   140006a83:	int3   
   140006a84:	mov    QWORD PTR [rsp+0x8],rbx
   140006a89:	mov    QWORD PTR [rsp+0x10],rdi
   140006a8e:	push   rbp
   140006a8f:	mov    rbp,rsp
   140006a92:	sub    rsp,0x70
   140006a96:	mov    rbx,rcx
   140006a99:	or     eax,0xffffffff
   140006a9c:	lea    rcx,[rbp-0x40]
   140006aa0:	mov    WORD PTR [rbp+0x20],ax
   140006aa4:	mov    rdi,rdx
   140006aa7:	call   QWORD PTR [rip+0x36e3]        # 0x14000a190
   140006aad:	mov    eax,0x8
   140006ab2:	mov    rcx,rbx
   140006ab5:	mov    WORD PTR [rbp-0x40],ax
   140006ab9:	call   QWORD PTR [rip+0x36d9]        # 0x14000a198
   140006abf:	mov    QWORD PTR [rbp-0x38],rax
   140006ac3:	test   rax,rax
   140006ac6:	jne    0x140006acf
   140006ac8:	mov    ebx,0x8007000e
   140006acd:	jmp    0x140006b2b
   140006acf:	xor    edx,edx
   140006ad1:	mov    QWORD PTR [rsp+0x20],rdi
   140006ad6:	lea    r9,[rip+0x45b3]        # 0x14000b090
   140006add:	lea    rcx,[rip+0x45bc]        # 0x14000b0a0
   140006ae4:	lea    r8d,[rdx+0x1]
   140006ae8:	call   QWORD PTR [rip+0x390a]        # 0x14000a3f8
   140006aee:	mov    ebx,eax
   140006af0:	test   eax,eax
   140006af2:	js     0x140006b2b
   140006af4:	mov    rdi,QWORD PTR [rdi]
   140006af7:	movups xmm0,XMMWORD PTR [rbp-0x40]
   140006afb:	movsd  xmm1,QWORD PTR [rbp-0x30]
   140006b00:	mov    rax,QWORD PTR [rdi]
   140006b03:	movaps XMMWORD PTR [rbp-0x20],xmm0
   140006b07:	movsd  QWORD PTR [rbp-0x10],xmm1
   140006b0c:	mov    rbx,QWORD PTR [rax+0x1d0]
   140006b13:	mov    rcx,rbx
   140006b16:	call   QWORD PTR [rip+0x3904]        # 0x14000a420
   140006b1c:	lea    r8,[rbp+0x20]
   140006b20:	mov    rcx,rdi
   140006b23:	lea    rdx,[rbp-0x20]
   140006b27:	call   rbx
   140006b29:	mov    ebx,eax
   140006b2b:	lea    rcx,[rbp-0x40]
   140006b2f:	call   QWORD PTR [rip+0x367b]        # 0x14000a1b0
   140006b35:	lea    r11,[rsp+0x70]
   140006b3a:	mov    eax,ebx
   140006b3c:	mov    rbx,QWORD PTR [r11+0x10]
   140006b40:	mov    rdi,QWORD PTR [r11+0x18]
   140006b44:	mov    rsp,r11
   140006b47:	pop    rbp
   140006b48:	ret    
   140006b49:	int3   
   140006b4a:	int3   
   140006b4b:	int3   
   140006b4c:	int3   
   140006b4d:	int3   
   140006b4e:	int3   
   140006b4f:	int3   
   140006b50:	mov    eax,0x3ed
   140006b55:	ret    
   140006b56:	int3   
   140006b57:	int3   
   140006b58:	int3   
   140006b59:	int3   
   140006b5a:	int3   
   140006b5b:	int3   
   140006b5c:	int3   
   140006b5d:	int3   
   140006b5e:	int3   
   140006b5f:	int3   
   140006b60:	mov    QWORD PTR [rsp+0x10],rbx
   140006b65:	mov    QWORD PTR [rsp+0x18],rsi
   140006b6a:	push   rbp
   140006b6b:	push   rdi
   140006b6c:	push   r12
   140006b6e:	mov    rbp,rsp
   140006b71:	sub    rsp,0x50
   140006b75:	mov    rax,QWORD PTR [rip+0x648c]        # 0x14000d008
   140006b7c:	xor    rax,rsp
   140006b7f:	mov    QWORD PTR [rbp-0x10],rax
   140006b83:	mov    rax,QWORD PTR [rcx+0x10]
   140006b87:	lea    r12,[rip+0x6a62]        # 0x14000d5f0
   140006b8e:	mov    rdi,rcx
   140006b91:	mov    DWORD PTR [rbp-0x20],0x2f44
   140006b98:	xor    ecx,ecx
   140006b9a:	mov    DWORD PTR [rbp-0x1c],0x2f4d
   140006ba1:	mov    DWORD PTR [rbp-0x18],0x2f45
   140006ba8:	cmp    DWORD PTR [rax],0x1
   140006bab:	mov    rdx,QWORD PTR [rdi+0x18]
   140006baf:	sete   cl
   140006bb2:	mov    DWORD PTR [rbp-0x14],0x2f4e
   140006bb9:	mov    esi,ecx
   140006bbb:	lea    rcx,[rbp-0x30]
   140006bbf:	mov    DWORD PTR [rbp-0x30],0x67727473
   140006bc6:	mov    QWORD PTR [rbp-0x28],r12
   140006bca:	mov    r8d,DWORD PTR [rbp+rsi*8-0x20]
   140006bcf:	call   0x140007894
   140006bd4:	test   eax,eax
   140006bd6:	js     0x140006c1b
   140006bd8:	mov    rcx,QWORD PTR [rdi+0x8]
   140006bdc:	call   QWORD PTR [rip+0x3676]        # 0x14000a258
   140006be2:	mov    r9d,0x3ed
   140006be8:	xor    r8d,r8d
   140006beb:	mov    rcx,rax
   140006bee:	mov    edx,0x485
   140006bf3:	call   QWORD PTR [rip+0x364f]        # 0x14000a248
   140006bf9:	mov    rcx,QWORD PTR [rdi+0x8]
   140006bfd:	movsxd rbx,eax
   140006c00:	call   QWORD PTR [rip+0x3652]        # 0x14000a258
   140006c06:	mov    r9,QWORD PTR [rbp-0x28]
   140006c0a:	mov    r8,rbx
   140006c0d:	mov    rcx,rax
   140006c10:	mov    edx,0x47e
   140006c15:	call   QWORD PTR [rip+0x362d]        # 0x14000a248
   140006c1b:	mov    rdx,QWORD PTR [rdi+0x10]
   140006c1f:	cmp    DWORD PTR [rdx],0x1
   140006c22:	jne    0x140006c2a
   140006c24:	mov    rdx,QWORD PTR [rdx+0x28]
   140006c28:	jmp    0x140006c37
   140006c2a:	cmp    DWORD PTR [rdx],0x0
   140006c2d:	jne    0x140006da2
   140006c33:	mov    rdx,QWORD PTR [rdx+0x38]
   140006c37:	mov    rcx,QWORD PTR [rdi+0x40]
   140006c3b:	call   QWORD PTR [rip+0x36d7]        # 0x14000a318
   140006c41:	test   eax,eax
   140006c43:	je     0x140006da2
   140006c49:	mov    r8d,DWORD PTR [rbp+rsi*8-0x1c]
   140006c4e:	lea    rcx,[rbp-0x30]
   140006c52:	mov    rdx,QWORD PTR [rdi+0x18]
   140006c56:	call   0x140007894
   140006c5b:	test   eax,eax
   140006c5d:	js     0x140006c7b
   140006c5f:	mov    rcx,QWORD PTR [rdi+0x8]
   140006c63:	mov    edx,0x2ee0
   140006c68:	call   QWORD PTR [rip+0x362a]        # 0x14000a298
   140006c6e:	mov    rdx,QWORD PTR [rbp-0x28]
   140006c72:	mov    rcx,rax
   140006c75:	call   QWORD PTR [rip+0x35fd]        # 0x14000a278
   140006c7b:	lea    rcx,[rdi+0x20]
   140006c7f:	xor    edx,edx
   140006c81:	call   0x140007780
   140006c86:	mov    esi,eax
   140006c88:	test   eax,eax
   140006c8a:	js     0x140006cab
   140006c8c:	mov    rcx,QWORD PTR [rdi+0x8]
   140006c90:	mov    edx,0x2ee1
   140006c95:	mov    rbx,QWORD PTR [rdi+0x28]
   140006c99:	call   QWORD PTR [rip+0x35f9]        # 0x14000a298
   140006c9f:	mov    rcx,rax
   140006ca2:	mov    rdx,rbx
   140006ca5:	call   QWORD PTR [rip+0x35cd]        # 0x14000a278
   140006cab:	mov    ecx,0x38
   140006cb0:	call   0x140008564
   140006cb5:	mov    rbx,rax
   140006cb8:	test   rax,rax
   140006cbb:	je     0x140006cd5
   140006cbd:	mov    DWORD PTR [rax+0x18],0x67727473
   140006cc4:	mov    QWORD PTR [rax+0x20],r12
   140006cc8:	mov    DWORD PTR [rax+0x28],0x67727473
   140006ccf:	mov    QWORD PTR [rax+0x30],r12
   140006cd3:	jmp    0x140006cd7
   140006cd5:	xor    ebx,ebx
   140006cd7:	test   rbx,rbx
   140006cda:	mov    eax,0x8007000e
   140006cdf:	cmove  esi,eax
   140006ce2:	test   esi,esi
   140006ce4:	js     0x140006d81
   140006cea:	mov    rax,QWORD PTR [rdi+0x8]
   140006cee:	mov    QWORD PTR [rbx],rax
   140006cf1:	mov    rax,QWORD PTR [rdi+0x18]
   140006cf5:	mov    QWORD PTR [rbx+0x8],rax
   140006cf9:	mov    rax,QWORD PTR [rdi+0x30]
   140006cfd:	mov    QWORD PTR [rbx+0x10],rax
   140006d01:	mov    rdx,QWORD PTR [rdi+0x10]
   140006d05:	cmp    DWORD PTR [rdx],0x1
   140006d08:	jne    0x140006d2b
   140006d0a:	mov    rdx,QWORD PTR [rdx+0x28]
   140006d0e:	lea    rcx,[rbx+0x18]
   140006d12:	call   0x140007780
   140006d17:	lea    rcx,[rdi+0x38]
   140006d1b:	mov    esi,eax
   140006d1d:	test   eax,eax
   140006d1f:	js     0x140006d4c
   140006d21:	mov    rdx,QWORD PTR [rdi+0x10]
   140006d25:	mov    rdx,QWORD PTR [rdx+0x28]
   140006d29:	jmp    0x140006d4e
   140006d2b:	mov    rdx,QWORD PTR [rdx+0x38]
   140006d2f:	lea    rcx,[rbx+0x28]
   140006d33:	call   0x140007780
   140006d38:	lea    rcx,[rdi+0x38]
   140006d3c:	mov    esi,eax
   140006d3e:	test   eax,eax
   140006d40:	js     0x140006d4c
   140006d42:	mov    rdx,QWORD PTR [rdi+0x10]
   140006d46:	mov    rdx,QWORD PTR [rdx+0x38]
   140006d4a:	jmp    0x140006d4e
   140006d4c:	xor    edx,edx
   140006d4e:	call   0x140007780
   140006d53:	test   esi,esi
   140006d55:	js     0x140006d81
   140006d57:	mov    r8d,0x1
   140006d5d:	lea    rcx,[rip+0x56c]        # 0x1400072d0
   140006d64:	mov    rdx,rbx
   140006d67:	call   QWORD PTR [rip+0x33eb]        # 0x14000a158
   140006d6d:	test   eax,eax
   140006d6f:	jne    0x140006d7d
   140006d71:	mov    rcx,rbx
   140006d74:	call   0x1400072d0
   140006d79:	mov    esi,eax
   140006d7b:	xor    ebx,ebx
   140006d7d:	test   esi,esi
   140006d7f:	jns    0x140006db7
   140006d81:	test   rbx,rbx
   140006d84:	je     0x140006db7
   140006d86:	lea    rcx,[rbx+0x28]
   140006d8a:	call   0x140007628
   140006d8f:	lea    rcx,[rbx+0x18]
   140006d93:	call   0x140007628
   140006d98:	mov    rcx,rbx
   140006d9b:	call   0x140008558
   140006da0:	jmp    0x140006db7
   140006da2:	mov    rcx,QWORD PTR [rdi+0x8]
   140006da6:	xor    r9d,r9d
   140006da9:	xor    r8d,r8d
   140006dac:	mov    edx,0x408
   140006db1:	call   QWORD PTR [rip+0x3469]        # 0x14000a220
   140006db7:	lea    rcx,[rbp-0x30]
   140006dbb:	call   0x140007628
   140006dc0:	mov    eax,0x1
   140006dc5:	mov    rcx,QWORD PTR [rbp-0x10]
   140006dc9:	xor    rcx,rsp
   140006dcc:	call   0x140008990
   140006dd1:	lea    r11,[rsp+0x50]
   140006dd6:	mov    rbx,QWORD PTR [r11+0x28]
   140006dda:	mov    rsi,QWORD PTR [r11+0x30]
   140006dde:	mov    rsp,r11
   140006de1:	pop    r12
   140006de3:	pop    rdi
   140006de4:	pop    rbp
   140006de5:	ret    
   140006de6:	int3   
   140006de7:	int3   
   140006de8:	int3   
   140006de9:	int3   
   140006dea:	int3   
   140006deb:	int3   
   140006dec:	int3   
   140006ded:	int3   
   140006dee:	int3   
   140006def:	int3   
   140006df0:	mov    QWORD PTR [rsp+0x10],rbx
   140006df5:	push   rbp
   140006df6:	push   rsi
   140006df7:	push   rdi
   140006df8:	push   r14
   140006dfa:	push   r15
   140006dfc:	lea    rbp,[rsp-0x37]
   140006e01:	sub    rsp,0x90
   140006e08:	mov    rax,QWORD PTR [rip+0x61f9]        # 0x14000d008
   140006e0f:	xor    rax,rsp
   140006e12:	mov    QWORD PTR [rbp+0x2f],rax
   140006e16:	xor    edi,edi
   140006e18:	mov    DWORD PTR [rbp+0xb],0x2f48
   140006e1f:	lea    rax,[rip+0x67ca]        # 0x14000d5f0
   140006e26:	mov    DWORD PTR [rbp+0x7],edi
   140006e29:	mov    QWORD PTR [rbp-0x1],rax
   140006e2d:	mov    rsi,rcx
   140006e30:	mov    QWORD PTR [rbp-0x11],rax
   140006e34:	mov    ecx,0x67727473
   140006e39:	mov    eax,edx
   140006e3b:	mov    DWORD PTR [rbp-0x9],ecx
   140006e3e:	mov    DWORD PTR [rbp-0x19],ecx
   140006e41:	lea    r15d,[rdi+0x1]
   140006e45:	mov    DWORD PTR [rbp+0xf],r15d
   140006e49:	mov    ebx,edi
   140006e4b:	mov    DWORD PTR [rbp+0x13],0x2f49
   140006e52:	mov    DWORD PTR [rbp+0x17],0x2
   140006e59:	mov    DWORD PTR [rbp+0x1b],0x2f4a
   140006e60:	mov    DWORD PTR [rbp+0x1f],0x3
   140006e67:	mov    DWORD PTR [rbp+0x23],0x2f4b
   140006e6e:	mov    DWORD PTR [rbp+0x27],0x4
   140006e75:	mov    DWORD PTR [rbp+0x2b],0x2f4c
   140006e7c:	sub    eax,0x406
   140006e81:	je     0x1400070f8
   140006e87:	sub    eax,r15d
   140006e8a:	je     0x140007036
   140006e90:	cmp    eax,r15d
   140006e93:	je     0x140006ea4
   140006e95:	mov    rcx,rsi
   140006e98:	call   0x140001fb0
   140006e9d:	mov    edi,eax
   140006e9f:	jmp    0x1400071dd
   140006ea4:	mov    rcx,QWORD PTR [rsi+0x10]
   140006ea8:	mov    r14d,edi
   140006eab:	cmp    DWORD PTR [rcx+0x4c],edi
   140006eae:	sete   r14b
   140006eb2:	test   r8,r8
   140006eb5:	je     0x140006f76
   140006ebb:	sub    r8,0x4
   140006ebf:	je     0x140006f46
   140006ec5:	sub    r8,0x2
   140006ec9:	je     0x140006ee7
   140006ecb:	cmp    r8,r15
   140006ece:	jne    0x140006fb7
   140006ed4:	lea    rcx,[rsi+0x38]
   140006ed8:	xor    edx,edx
   140006eda:	call   0x140007780
   140006edf:	mov    r8d,0x4e2e
   140006ee5:	jmp    0x140006ef8
   140006ee7:	lea    rcx,[rsi+0x38]
   140006eeb:	xor    edx,edx
   140006eed:	call   0x140007780
   140006ef2:	mov    r8d,0x4e2d
   140006ef8:	mov    rax,QWORD PTR [rsi+0x10]
   140006efc:	lea    rdx,[rbp-0x19]
   140006f00:	mov    rcx,rsi
   140006f03:	mov    r9,QWORD PTR [rax+0x28]
   140006f07:	call   0x14000721c
   140006f0c:	test   eax,eax
   140006f0e:	js     0x140006fb7
   140006f14:	mov    r9,QWORD PTR [rbp-0x11]
   140006f18:	mov    r8d,0x65
   140006f1e:	mov    rdx,QWORD PTR [rsi+0x18]
   140006f22:	mov    rcx,QWORD PTR [rsi+0x8]
   140006f26:	mov    QWORD PTR [rsp+0x38],rdi
   140006f2b:	mov    QWORD PTR [rsp+0x30],0xfffe
   140006f34:	mov    DWORD PTR [rsp+0x28],r15d
   140006f39:	mov    QWORD PTR [rsp+0x20],rdi
   140006f3e:	call   QWORD PTR [rip+0x3104]        # 0x14000a048
   140006f44:	jmp    0x140006fb7
   140006f46:	lea    rcx,[rsi+0x38]
   140006f4a:	xor    edx,edx
   140006f4c:	call   0x140007780
   140006f51:	mov    rax,QWORD PTR [rsi+0x10]
   140006f55:	mov    rdx,QWORD PTR [rsi+0x18]
   140006f59:	mov    ecx,DWORD PTR [rax]
   140006f5b:	neg    ecx
   140006f5d:	mov    rcx,QWORD PTR [rsi+0x8]
   140006f61:	sbb    r8d,r8d
   140006f64:	and    r8d,0xfffffff9
   140006f68:	add    r8d,0x4e2c
   140006f6f:	call   0x140006130
   140006f74:	jmp    0x140006fb7
   140006f76:	mov    eax,DWORD PTR [rcx]
   140006f78:	lea    rcx,[rbp-0x19]
   140006f7c:	mov    rdx,QWORD PTR [rsi+0x18]
   140006f80:	sub    eax,r15d
   140006f83:	neg    eax
   140006f85:	sbb    r8d,r8d
   140006f88:	add    r8d,0x2f47
   140006f8f:	call   0x140007894
   140006f94:	test   eax,eax
   140006f96:	js     0x140006fb4
   140006f98:	mov    rcx,QWORD PTR [rsi+0x8]
   140006f9c:	mov    edx,0x2ee0
   140006fa1:	call   QWORD PTR [rip+0x32f1]        # 0x14000a298
   140006fa7:	mov    rdx,QWORD PTR [rbp-0x11]
   140006fab:	mov    rcx,rax
   140006fae:	call   QWORD PTR [rip+0x32c4]        # 0x14000a278
   140006fb4:	mov    ebx,r15d
   140006fb7:	mov    rcx,QWORD PTR [rsi+0x8]
   140006fbb:	mov    edx,0x2ee1
   140006fc0:	call   QWORD PTR [rip+0x32d2]        # 0x14000a298
   140006fc6:	mov    r15d,0xb1
   140006fcc:	xor    r9d,r9d
   140006fcf:	mov    rcx,rax
   140006fd2:	mov    edx,r15d
   140006fd5:	xor    r8d,r8d
   140006fd8:	call   QWORD PTR [rip+0x326a]        # 0x14000a248
   140006fde:	mov    rcx,QWORD PTR [rsi+0x8]
   140006fe2:	mov    edx,0x2ee1
   140006fe7:	call   QWORD PTR [rip+0x32ab]        # 0x14000a298
   140006fed:	xor    r9d,r9d
   140006ff0:	xor    r8d,r8d
   140006ff3:	mov    rcx,rax
   140006ff6:	mov    edx,r15d
   140006ff9:	call   QWORD PTR [rip+0x3249]        # 0x14000a248
   140006fff:	mov    rcx,QWORD PTR [rsi+0x8]
   140007003:	neg    ebx
   140007005:	mov    rax,rdi
   140007008:	sbb    rbx,rbx
   14000700b:	and    ebx,0x2
   14000700e:	test   r14d,r14d
   140007011:	setne  al
   140007014:	or     rbx,rax
   140007017:	call   QWORD PTR [rip+0x323b]        # 0x14000a258
   14000701d:	mov    r9,rbx
   140007020:	xor    r8d,r8d
   140007023:	mov    rcx,rax
   140007026:	mov    edx,0x470
   14000702b:	call   QWORD PTR [rip+0x31ef]        # 0x14000a220
   140007031:	jmp    0x1400071dd
   140007036:	mov    ecx,edi
   140007038:	lea    rdx,[rbp+0x7]
   14000703c:	mov    eax,DWORD PTR [rdx]
   14000703e:	cmp    r8,rax
   140007041:	je     0x140007054
   140007043:	add    ecx,r15d
   140007046:	add    rdx,0x8
   14000704a:	cmp    ecx,0x5
   14000704d:	jb     0x14000703c
   14000704f:	jmp    0x1400071dd
   140007054:	mov    eax,ecx
   140007056:	mov    r8d,DWORD PTR [rbp+rax*8+0xb]
   14000705b:	test   r8d,r8d
   14000705e:	je     0x1400071dd
   140007064:	mov    rdx,QWORD PTR [rsi+0x18]
   140007068:	lea    rcx,[rbp-0x9]
   14000706c:	call   0x140007894
   140007071:	test   eax,eax
   140007073:	js     0x1400071dd
   140007079:	mov    rax,QWORD PTR [rsi+0x28]
   14000707d:	cmp    WORD PTR [rax],di
   140007080:	jne    0x140007098
   140007082:	mov    r8,QWORD PTR [rbp-0x1]
   140007086:	lea    rdx,[rip+0x3f77]        # 0x14000b004
   14000708d:	lea    rcx,[rbp-0x19]
   140007091:	call   0x1400079a8
   140007096:	jmp    0x1400070ae
   140007098:	mov    r9,QWORD PTR [rbp-0x1]
   14000709c:	lea    rdx,[rbp-0x19]
   1400070a0:	mov    r8d,0x2f52
   1400070a6:	mov    rcx,rsi
   1400070a9:	call   0x14000721c
   1400070ae:	test   eax,eax
   1400070b0:	js     0x1400071dd
   1400070b6:	mov    rdx,QWORD PTR [rbp-0x11]
   1400070ba:	test   rdx,rdx
   1400070bd:	je     0x1400070ca
   1400070bf:	lea    rcx,[rsi+0x20]
   1400070c3:	call   0x140007658
   1400070c8:	jmp    0x1400070cc
   1400070ca:	mov    eax,edi
   1400070cc:	test   eax,eax
   1400070ce:	js     0x1400071dd
   1400070d4:	mov    rcx,QWORD PTR [rsi+0x8]
   1400070d8:	mov    edx,0x2ee1
   1400070dd:	mov    rbx,QWORD PTR [rsi+0x28]
   1400070e1:	call   QWORD PTR [rip+0x31b1]        # 0x14000a298
   1400070e7:	mov    rcx,rax
   1400070ea:	mov    rdx,rbx
   1400070ed:	call   QWORD PTR [rip+0x3185]        # 0x14000a278
   1400070f3:	jmp    0x1400071dd
   1400070f8:	test   r8,r8
   1400070fb:	je     0x140007178
   1400070fd:	cmp    DWORD PTR [r8],edi
   140007100:	je     0x140007160
   140007102:	cmp    DWORD PTR [r8],r15d
   140007105:	je     0x14000713f
   140007107:	jbe    0x140007187
   140007109:	cmp    DWORD PTR [r8],0x3
   14000710d:	jbe    0x140007160
   14000710f:	cmp    DWORD PTR [r8],0x4
   140007113:	jne    0x140007187
   140007115:	mov    rax,QWORD PTR [r8+0x10]
   140007119:	lea    rdx,[rbp-0x19]
   14000711d:	mov    r9,QWORD PTR [r8+0x8]
   140007121:	mov    rcx,rsi
   140007124:	mov    QWORD PTR [rsp+0x28],rax
   140007129:	mov    rax,QWORD PTR [r8+0x18]
   14000712d:	mov    r8d,0x2f51
   140007133:	mov    QWORD PTR [rsp+0x20],rax
   140007138:	call   0x14000721c
   14000713d:	jmp    0x14000717d
   14000713f:	mov    rax,QWORD PTR [r8+0x18]
   140007143:	lea    rdx,[rbp-0x19]
   140007147:	mov    r9,QWORD PTR [r8+0x8]
   14000714b:	mov    rcx,rsi
   14000714e:	mov    r8d,0x2f50
   140007154:	mov    QWORD PTR [rsp+0x20],rax
   140007159:	call   0x14000721c
   14000715e:	jmp    0x14000717d
   140007160:	mov    r9,QWORD PTR [r8+0x8]
   140007164:	lea    rdx,[rbp-0x19]
   140007168:	mov    r8d,0x2f4f
   14000716e:	mov    rcx,rsi
   140007171:	call   0x14000721c
   140007176:	jmp    0x14000717d
   140007178:	mov    eax,0x8000ffff
   14000717d:	test   eax,eax
   14000717f:	js     0x1400071dd
   140007181:	cmp    QWORD PTR [rbp-0x11],rdi
   140007185:	je     0x140007196
   140007187:	mov    rdx,QWORD PTR [rbp-0x11]
   14000718b:	lea    rcx,[rsi+0x20]
   14000718f:	call   0x140007658
   140007194:	jmp    0x140007198
   140007196:	mov    eax,edi
   140007198:	test   eax,eax
   14000719a:	js     0x1400071dd
   14000719c:	mov    rcx,QWORD PTR [rsi+0x8]
   1400071a0:	mov    edx,0x2ee1
   1400071a5:	mov    rbx,QWORD PTR [rsi+0x28]
   1400071a9:	call   QWORD PTR [rip+0x30e9]        # 0x14000a298
   1400071af:	mov    rcx,rax
   1400071b2:	mov    rdx,rbx
   1400071b5:	call   QWORD PTR [rip+0x30bd]        # 0x14000a278
   1400071bb:	mov    rcx,QWORD PTR [rsi+0x8]
   1400071bf:	mov    edx,0x2ee1
   1400071c4:	call   QWORD PTR [rip+0x30ce]        # 0x14000a298
   1400071ca:	xor    r9d,r9d
   1400071cd:	mov    r8,r15
   1400071d0:	mov    rcx,rax
   1400071d3:	lea    edx,[r9+0xb]
   1400071d7:	call   QWORD PTR [rip+0x306b]        # 0x14000a248
   1400071dd:	lea    rcx,[rbp-0x19]
   1400071e1:	call   0x140007628
   1400071e6:	lea    rcx,[rbp-0x9]
   1400071ea:	call   0x140007628
   1400071ef:	mov    eax,edi
   1400071f1:	mov    rcx,QWORD PTR [rbp+0x2f]
   1400071f5:	xor    rcx,rsp
   1400071f8:	call   0x140008990
   1400071fd:	mov    rbx,QWORD PTR [rsp+0xc8]
   140007205:	add    rsp,0x90
   14000720c:	pop    r15
   14000720e:	pop    r14
   140007210:	pop    rdi
   140007211:	pop    rsi
   140007212:	pop    rbp
   140007213:	ret    
   140007214:	int3   
   140007215:	int3   
   140007216:	int3   
   140007217:	int3   
   140007218:	int3   
   140007219:	int3   
   14000721a:	int3   
   14000721b:	int3   
   14000721c:	mov    DWORD PTR [rsp+0x18],r8d
   140007221:	mov    QWORD PTR [rsp+0x20],r9
   140007226:	push   rbp
   140007227:	push   rbx
   140007228:	push   rdi
   140007229:	mov    rbp,rsp
   14000722c:	sub    rsp,0x60
   140007230:	and    QWORD PTR [rbp-0x20],0x0
   140007235:	lea    rax,[rip+0x63b4]        # 0x14000d5f0
   14000723c:	mov    rdi,rdx
   14000723f:	mov    DWORD PTR [rbp-0x10],0x67727473
   140007246:	mov    rdx,QWORD PTR [rcx+0x18]
   14000724a:	lea    rcx,[rbp-0x10]
   14000724e:	mov    QWORD PTR [rbp-0x8],rax
   140007252:	call   0x140007894
   140007257:	mov    ebx,eax
   140007259:	test   eax,eax
   14000725b:	js     0x1400072a4
   14000725d:	mov    rdx,QWORD PTR [rbp-0x8]
   140007261:	lea    rax,[rbp+0x38]
   140007265:	mov    QWORD PTR [rbp-0x18],rax
   140007269:	xor    r9d,r9d
   14000726c:	lea    rax,[rbp-0x18]
   140007270:	xor    r8d,r8d
   140007273:	mov    QWORD PTR [rsp+0x30],rax
   140007278:	mov    ecx,0x500
   14000727d:	and    DWORD PTR [rsp+0x28],0x0
   140007282:	lea    rax,[rbp-0x20]
   140007286:	mov    QWORD PTR [rsp+0x20],rax
   14000728b:	call   QWORD PTR [rip+0x2e2f]        # 0x14000a0c0
   140007291:	mov    rdx,QWORD PTR [rbp-0x20]
   140007295:	mov    rcx,rdi
   140007298:	and    QWORD PTR [rbp-0x18],0x0
   14000729d:	call   0x140007780
   1400072a2:	mov    ebx,eax
   1400072a4:	mov    rcx,QWORD PTR [rbp-0x20]
   1400072a8:	test   rcx,rcx
   1400072ab:	je     0x1400072b3
   1400072ad:	call   QWORD PTR [rip+0x2e55]        # 0x14000a108
   1400072b3:	lea    rcx,[rbp-0x10]
   1400072b7:	call   0x140007628
   1400072bc:	mov    eax,ebx
   1400072be:	add    rsp,0x60
   1400072c2:	pop    rdi
   1400072c3:	pop    rbx
   1400072c4:	pop    rbp
   1400072c5:	ret    
   1400072c6:	int3   
   1400072c7:	int3   
   1400072c8:	int3   
   1400072c9:	int3   
   1400072ca:	int3   
   1400072cb:	int3   
   1400072cc:	int3   
   1400072cd:	int3   
   1400072ce:	int3   
   1400072cf:	int3   
   1400072d0:	mov    QWORD PTR [rsp+0x18],rbx
   1400072d5:	mov    QWORD PTR [rsp+0x20],rsi
   1400072da:	push   rbp
   1400072db:	push   rdi
   1400072dc:	push   r12
   1400072de:	push   r14
   1400072e0:	push   r15
   1400072e2:	mov    rbp,rsp
   1400072e5:	sub    rsp,0x20
   1400072e9:	and    DWORD PTR [rbp+0x30],0x0
   1400072ed:	or     r15d,0xffffffff
   1400072f1:	and    QWORD PTR [rbp+0x38],0x0
   1400072f6:	mov    rbx,rcx
   1400072f9:	test   rcx,rcx
   1400072fc:	jne    0x14000731d
   1400072fe:	lea    r8d,[rcx+0x4]
   140007302:	mov    esi,0x80070057
   140007307:	mov    rcx,QWORD PTR [rcx]
   14000730a:	mov    edx,0x408
   14000730f:	xor    r9d,r9d
   140007312:	call   QWORD PTR [rip+0x2f08]        # 0x14000a220
   140007318:	jmp    0x1400074bf
   14000731d:	mov    rdx,QWORD PTR [rcx+0x30]
   140007321:	lea    r9,[rbp+0x38]
   140007325:	mov    rcx,QWORD PTR [rcx+0x20]
   140007329:	lea    r8,[rbp+0x30]
   14000732d:	call   0x1400058c8
   140007332:	mov    esi,eax
   140007334:	cmp    eax,0x80070005
   140007339:	jne    0x140007346
   14000733b:	mov    r8d,0x6
   140007341:	mov    rcx,QWORD PTR [rbx]
   140007344:	jmp    0x14000730a
   140007346:	cmp    eax,0x80070002
   14000734b:	jne    0x140007355
   14000734d:	mov    r8d,0x7
   140007353:	jmp    0x140007341
   140007355:	test   eax,eax
   140007357:	js     0x140007360
   140007359:	cmp    QWORD PTR [rbp+0x38],0x0
   14000735e:	jne    0x140007382
   140007360:	mov    rcx,QWORD PTR [rbx]
   140007363:	xor    r9d,r9d
   140007366:	mov    edx,0x408
   14000736b:	lea    r8d,[r9+0x4]
   14000736f:	call   QWORD PTR [rip+0x2eab]        # 0x14000a220
   140007375:	test   esi,esi
   140007377:	js     0x1400074bf
   14000737d:	mov    esi,0x80004005
   140007382:	test   esi,esi
   140007384:	js     0x1400074bf
   14000738a:	xor    r12d,r12d
   14000738d:	cmp    DWORD PTR [rbp+0x30],r12d
   140007391:	jbe    0x1400074ab
   140007397:	mov    eax,r12d
   14000739a:	imul   r14,rax,0x38
   14000739e:	mov    rax,QWORD PTR [rbp+0x38]
   1400073a2:	cmp    r15d,DWORD PTR [r14+rax*1]
   1400073a6:	je     0x1400073c0
   1400073a8:	movsxd r15,DWORD PTR [r14+rax*1]
   1400073ac:	xor    r9d,r9d
   1400073af:	mov    rcx,QWORD PTR [rbx]
   1400073b2:	mov    r8,r15
   1400073b5:	mov    edx,0x407
   1400073ba:	call   QWORD PTR [rip+0x2e88]        # 0x14000a248
   1400073c0:	mov    ecx,0x20
   1400073c5:	call   0x140008564
   1400073ca:	mov    rdi,rax
   1400073cd:	test   rax,rax
   1400073d0:	je     0x1400073e2
   1400073d2:	xor    edx,edx
   1400073d4:	mov    rcx,rax
   1400073d7:	lea    r8d,[rdx+0x20]
   1400073db:	call   0x14000906a
   1400073e0:	jmp    0x1400073e4
   1400073e2:	xor    edi,edi
   1400073e4:	test   rdi,rdi
   1400073e7:	je     0x1400074a6
   1400073ed:	xor    edx,edx
   1400073ef:	mov    rcx,rdi
   1400073f2:	lea    r8d,[rdx+0x20]
   1400073f6:	call   0x14000906a
   1400073fb:	mov    DWORD PTR [rdi],r15d
   1400073fe:	mov    ecx,r15d
   140007401:	test   r15d,r15d
   140007404:	je     0x14000746e
   140007406:	sub    ecx,0x1
   140007409:	je     0x140007452
   14000740b:	sub    ecx,0x1
   14000740e:	je     0x140007443
   140007410:	sub    ecx,0x1
   140007413:	je     0x140007443
   140007415:	cmp    ecx,0x1
   140007418:	jne    0x14000747b
   14000741a:	mov    rax,QWORD PTR [rbp+0x38]
   14000741e:	mov    rcx,QWORD PTR [r14+rax*1+0x10]
   140007423:	mov    QWORD PTR [rdi+0x8],rcx
   140007427:	mov    rax,QWORD PTR [rbp+0x38]
   14000742b:	mov    rcx,QWORD PTR [r14+rax*1+0x18]
   140007430:	mov    QWORD PTR [rdi+0x18],rcx
   140007434:	mov    rax,QWORD PTR [rbp+0x38]
   140007438:	mov    rcx,QWORD PTR [r14+rax*1+0x20]
   14000743d:	mov    QWORD PTR [rdi+0x10],rcx
   140007441:	jmp    0x14000747b
   140007443:	mov    rax,QWORD PTR [rbp+0x38]
   140007447:	mov    rcx,QWORD PTR [r14+rax*1+0x10]
   14000744c:	mov    QWORD PTR [rdi+0x8],rcx
   140007450:	jmp    0x14000747b
   140007452:	mov    rax,QWORD PTR [rbp+0x38]
   140007456:	mov    rcx,QWORD PTR [r14+rax*1+0x10]
   14000745b:	mov    QWORD PTR [rdi+0x8],rcx
   14000745f:	mov    rax,QWORD PTR [rbp+0x38]
   140007463:	mov    rcx,QWORD PTR [r14+rax*1+0x20]
   140007468:	mov    QWORD PTR [rdi+0x18],rcx
   14000746c:	jmp    0x14000747b
   14000746e:	mov    rax,QWORD PTR [rbp+0x38]
   140007472:	mov    rdx,QWORD PTR [r14+rax*1+0x10]
   140007477:	mov    QWORD PTR [rdi+0x8],rdx
   14000747b:	mov    rcx,QWORD PTR [rbx]
   14000747e:	xor    r9d,r9d
   140007481:	mov    r8,rdi
   140007484:	mov    edx,0x406
   140007489:	call   QWORD PTR [rip+0x2db9]        # 0x14000a248
   14000748f:	mov    rcx,rdi
   140007492:	call   0x140008558
   140007497:	inc    r12d
   14000749a:	cmp    r12d,DWORD PTR [rbp+0x30]
   14000749e:	jb     0x140007397
   1400074a4:	jmp    0x1400074ab
   1400074a6:	mov    esi,0x8007000e
   1400074ab:	mov    rcx,QWORD PTR [rbx]
   1400074ae:	xor    r9d,r9d
   1400074b1:	xor    r8d,r8d
   1400074b4:	mov    edx,0x408
   1400074b9:	call   QWORD PTR [rip+0x2d89]        # 0x14000a248
   1400074bf:	mov    rcx,QWORD PTR [rbx+0x10]
   1400074c3:	test   rcx,rcx
   1400074c6:	je     0x1400074d8
   1400074c8:	call   QWORD PTR [rip+0x2c52]        # 0x14000a120
   1400074ce:	test   eax,eax
   1400074d0:	jne    0x1400074d8
   1400074d2:	call   QWORD PTR [rip+0x2c20]        # 0x14000a0f8
   1400074d8:	lea    rcx,[rbx+0x28]
   1400074dc:	call   0x140007628
   1400074e1:	lea    rcx,[rbx+0x18]
   1400074e5:	call   0x140007628
   1400074ea:	mov    rcx,rbx
   1400074ed:	call   0x140008558
   1400074f2:	cmp    QWORD PTR [rbp+0x38],0x0
   1400074f7:	je     0x140007505
   1400074f9:	mov    ecx,DWORD PTR [rbp+0x30]
   1400074fc:	lea    rdx,[rbp+0x38]
   140007500:	call   0x140007c6c
   140007505:	mov    rbx,QWORD PTR [rsp+0x60]
   14000750a:	mov    eax,esi
   14000750c:	mov    rsi,QWORD PTR [rsp+0x68]
   140007511:	add    rsp,0x20
   140007515:	pop    r15
   140007517:	pop    r14
   140007519:	pop    r12
   14000751b:	pop    rdi
   14000751c:	pop    rbp
   14000751d:	ret    
   14000751e:	int3   
   14000751f:	int3   
   140007520:	int3   
   140007521:	int3   
   140007522:	int3   
   140007523:	int3   
   140007524:	int3   
   140007525:	int3   
   140007526:	int3   
   140007527:	int3   
   140007528:	int3   
   140007529:	int3   
   14000752a:	int3   
   14000752b:	int3   
   14000752c:	int3   
   14000752d:	int3   
   14000752e:	int3   
   14000752f:	int3   
   140007530:	xor    eax,eax
   140007532:	cmp    DWORD PTR [rcx+0xc],eax
   140007535:	setne  al
   140007538:	ret    
   140007539:	int3   
   14000753a:	int3   
   14000753b:	int3   
   14000753c:	int3   
   14000753d:	int3   
   14000753e:	int3   
   14000753f:	int3   
   140007540:	mov    DWORD PTR [rcx+0xc],0x1
   140007547:	xor    eax,eax
   140007549:	ret    
   14000754a:	int3   
   14000754b:	int3   
   14000754c:	int3   
   14000754d:	int3   
   14000754e:	int3   
   14000754f:	int3   
   140007550:	mov    QWORD PTR [rsp+0x8],rbx
   140007555:	mov    QWORD PTR [rsp+0x10],rsi
   14000755a:	push   rdi
   14000755b:	sub    rsp,0x20
   14000755f:	xor    edi,edi
   140007561:	mov    rsi,rcx
   140007564:	test   r8,r8
   140007567:	jne    0x140007570
   140007569:	mov    edi,0x80070057
   14000756e:	jmp    0x1400075c4
   140007570:	mov    rax,QWORD PTR [rdx]
   140007573:	cmp    rax,QWORD PTR [rip+0x3aa6]        # 0x14000b020
   14000757a:	jne    0x140007589
   14000757c:	mov    rax,QWORD PTR [rdx+0x8]
   140007580:	cmp    rax,QWORD PTR [rip+0x3aa1]        # 0x14000b028
   140007587:	je     0x1400075a2
   140007589:	mov    rax,QWORD PTR [rdx]
   14000758c:	cmp    rax,QWORD PTR [rip+0x3abd]        # 0x14000b050
   140007593:	jne    0x1400075bc
   140007595:	mov    rax,QWORD PTR [rdx+0x8]
   140007599:	cmp    rax,QWORD PTR [rip+0x3ab8]        # 0x14000b058
   1400075a0:	jne    0x1400075bc
   1400075a2:	mov    QWORD PTR [r8],rcx
   1400075a5:	mov    rax,QWORD PTR [rcx]
   1400075a8:	mov    rbx,QWORD PTR [rax+0x8]
   1400075ac:	mov    rcx,rbx
   1400075af:	call   QWORD PTR [rip+0x2e6b]        # 0x14000a420
   1400075b5:	mov    rcx,rsi
   1400075b8:	call   rbx
   1400075ba:	jmp    0x1400075c4
   1400075bc:	mov    QWORD PTR [r8],rdi
   1400075bf:	mov    edi,0x80004002
   1400075c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400075c9:	mov    eax,edi
   1400075cb:	mov    rsi,QWORD PTR [rsp+0x38]
   1400075d0:	add    rsp,0x20
   1400075d4:	pop    rdi
   1400075d5:	ret    
   1400075d6:	int3   
   1400075d7:	int3   
   1400075d8:	int3   
   1400075d9:	int3   
   1400075da:	int3   
   1400075db:	int3   
   1400075dc:	int3   
   1400075dd:	int3   
   1400075de:	int3   
   1400075df:	int3   
   1400075e0:	mov    eax,0x1
   1400075e5:	lock xadd DWORD PTR [rcx+0x8],eax
   1400075ea:	inc    eax
   1400075ec:	ret    
   1400075ed:	int3   
   1400075ee:	int3   
   1400075ef:	int3   
   1400075f0:	int3   
   1400075f1:	int3   
   1400075f2:	int3   
   1400075f3:	int3   
   1400075f4:	int3   
   1400075f5:	int3   
   1400075f6:	int3   
   1400075f7:	int3   
   1400075f8:	int3   
   1400075f9:	int3   
   1400075fa:	int3   
   1400075fb:	int3   
   1400075fc:	int3   
   1400075fd:	int3   
   1400075fe:	int3   
   1400075ff:	int3   
   140007600:	rex push rbx
   140007602:	sub    rsp,0x20
   140007606:	or     ebx,0xffffffff
   140007609:	lock xadd DWORD PTR [rcx+0x8],ebx
   14000760e:	sub    ebx,0x1
   140007611:	jne    0x140007618
   140007613:	call   0x140008558
   140007618:	mov    eax,ebx
   14000761a:	add    rsp,0x20
   14000761e:	pop    rbx
   14000761f:	ret    
   140007620:	int3   
   140007621:	int3   
   140007622:	int3   
   140007623:	int3   
   140007624:	int3   
   140007625:	int3   
   140007626:	int3   
   140007627:	int3   
   140007628:	sub    rsp,0x28
   14000762c:	mov    rcx,QWORD PTR [rcx+0x8]
   140007630:	lea    rax,[rip+0x5fb9]        # 0x14000d5f0
   140007637:	cmp    rcx,rax
   14000763a:	je     0x14000764d
   14000763c:	lea    rax,[rip+0x5faf]        # 0x14000d5f2
   140007643:	cmp    rcx,rax
   140007646:	je     0x14000764d
   140007648:	call   0x140008558
   14000764d:	add    rsp,0x28
   140007651:	ret    
   140007652:	int3   
   140007653:	int3   
   140007654:	int3   
   140007655:	int3   
   140007656:	int3   
   140007657:	int3   
   140007658:	mov    rax,rsp
   14000765b:	mov    QWORD PTR [rax+0x8],rbx
   14000765f:	push   rbp
   140007660:	push   rsi
   140007661:	push   rdi
   140007662:	push   r12
   140007664:	push   r13
   140007666:	push   r14
   140007668:	push   r15
   14000766a:	sub    rsp,0x30
   14000766e:	xor    r15d,r15d
   140007671:	mov    rbp,rdx
   140007674:	mov    rsi,rcx
   140007677:	mov    edi,r15d
   14000767a:	mov    QWORD PTR [rax+0x18],r15
   14000767e:	mov    QWORD PTR [rax+0x10],r15
   140007682:	cmp    WORD PTR [rdx],r15w
   140007686:	je     0x140007763
   14000768c:	or     r8,0xffffffffffffffff
   140007690:	mov    rax,r8
   140007693:	inc    rax
   140007696:	cmp    WORD PTR [rdx+rax*2],r15w
   14000769b:	jne    0x140007693
   14000769d:	mov    rdx,QWORD PTR [rcx+0x8]
   1400076a1:	mov    rcx,r8
   1400076a4:	inc    rcx
   1400076a7:	cmp    WORD PTR [rdx+rcx*2],r15w
   1400076ac:	jne    0x1400076a4
   1400076ae:	lea    r14,[rcx+0x1]
   1400076b2:	add    r14,rax
   1400076b5:	mov    eax,0x2
   1400076ba:	mul    r14
   1400076bd:	lea    rdx,[rip+0x5f4c]        # 0x14000d610
   1400076c4:	cmovo  rax,r8
   1400076c8:	mov    rcx,rax
   1400076cb:	call   0x140008fa8
   1400076d0:	mov    rbx,rax
   1400076d3:	lea    r13,[rip+0x5f16]        # 0x14000d5f0
   1400076da:	neg    rax
   1400076dd:	lea    r12,[rip+0x5f0e]        # 0x14000d5f2
   1400076e4:	sbb    edi,edi
   1400076e6:	not    edi
   1400076e8:	and    edi,0x8007000e
   1400076ee:	jl     0x140007751
   1400076f0:	mov    r8,QWORD PTR [rsi+0x8]
   1400076f4:	lea    rax,[rsp+0x78]
   1400076f9:	mov    DWORD PTR [rsp+0x28],r15d
   1400076fe:	lea    r9,[rsp+0x80]
   140007706:	mov    rdx,r14
   140007709:	mov    QWORD PTR [rsp+0x20],rax
   14000770e:	mov    rcx,rbx
   140007711:	call   0x1400029bc
   140007716:	mov    edi,eax
   140007718:	test   eax,eax
   14000771a:	js     0x140007751
   14000771c:	mov    rdx,QWORD PTR [rsp+0x78]
   140007721:	mov    r8,rbp
   140007724:	mov    rcx,QWORD PTR [rsp+0x80]
   14000772c:	call   0x140001068
   140007731:	mov    edi,eax
   140007733:	test   eax,eax
   140007735:	js     0x140007751
   140007737:	mov    rcx,QWORD PTR [rsi+0x8]
   14000773b:	cmp    rcx,r13
   14000773e:	je     0x14000774a
   140007740:	cmp    rcx,r12
   140007743:	je     0x14000774a
   140007745:	call   0x140008558
   14000774a:	mov    QWORD PTR [rsi+0x8],rbx
   14000774e:	mov    rbx,r15
   140007751:	cmp    rbx,r13
   140007754:	je     0x140007763
   140007756:	cmp    rbx,r12
   140007759:	je     0x140007763
   14000775b:	mov    rcx,rbx
   14000775e:	call   0x140008558
   140007763:	mov    eax,edi
   140007765:	mov    rbx,QWORD PTR [rsp+0x70]
   14000776a:	add    rsp,0x30
   14000776e:	pop    r15
   140007770:	pop    r14
   140007772:	pop    r13
   140007774:	pop    r12
   140007776:	pop    rdi
   140007777:	pop    rsi
   140007778:	pop    rbp
   140007779:	ret    
   14000777a:	int3   
   14000777b:	int3   
   14000777c:	int3   
   14000777d:	int3   
   14000777e:	int3   
   14000777f:	int3   
   140007780:	mov    QWORD PTR [rsp+0x8],rbx
   140007785:	mov    QWORD PTR [rsp+0x10],rbp
   14000778a:	mov    QWORD PTR [rsp+0x18],rsi
   14000778f:	push   rdi
   140007790:	push   r12
   140007792:	push   r13
   140007794:	push   r14
   140007796:	push   r15
   140007798:	sub    rsp,0x20
   14000779c:	xor    r13d,r13d
   14000779f:	mov    r12,rdx
   1400077a2:	mov    rbp,rcx
   1400077a5:	mov    r14d,r13d
   1400077a8:	test   rdx,rdx
   1400077ab:	je     0x140007846
   1400077b1:	or     rcx,0xffffffffffffffff
   1400077b5:	mov    rsi,rcx
   1400077b8:	inc    rsi
   1400077bb:	cmp    WORD PTR [rdx+rsi*2],r13w
   1400077c0:	jne    0x1400077b8
   1400077c2:	inc    rsi
   1400077c5:	mov    eax,0x2
   1400077ca:	mul    rsi
   1400077cd:	lea    rdx,[rip+0x5e3c]        # 0x14000d610
   1400077d4:	cmovo  rax,rcx
   1400077d8:	mov    rcx,rax
   1400077db:	call   0x140008fa8
   1400077e0:	mov    rbx,rax
   1400077e3:	lea    rdi,[rip+0x5e06]        # 0x14000d5f0
   1400077ea:	neg    rax
   1400077ed:	lea    r15,[rip+0x5dfe]        # 0x14000d5f2
   1400077f4:	sbb    r14d,r14d
   1400077f7:	not    r14d
   1400077fa:	and    r14d,0x8007000e
   140007801:	jl     0x140007832
   140007803:	mov    r8,r12
   140007806:	mov    rdx,rsi
   140007809:	mov    rcx,rbx
   14000780c:	call   0x140001068
   140007811:	mov    r14d,eax
   140007814:	test   eax,eax
   140007816:	js     0x140007832
   140007818:	mov    rcx,QWORD PTR [rbp+0x8]
   14000781c:	cmp    rcx,rdi
   14000781f:	je     0x14000782b
   140007821:	cmp    rcx,r15
   140007824:	je     0x14000782b
   140007826:	call   0x140008558
   14000782b:	mov    QWORD PTR [rbp+0x8],rbx
   14000782f:	mov    rbx,r13
   140007832:	cmp    rbx,rdi
   140007835:	je     0x14000786b
   140007837:	cmp    rbx,r15
   14000783a:	je     0x14000786b
   14000783c:	mov    rcx,rbx
   14000783f:	call   0x140008558
   140007844:	jmp    0x14000786b
   140007846:	mov    rcx,QWORD PTR [rcx+0x8]
   14000784a:	lea    rdi,[rip+0x5d9f]        # 0x14000d5f0
   140007851:	cmp    rcx,rdi
   140007854:	je     0x140007867
   140007856:	lea    r15,[rip+0x5d95]        # 0x14000d5f2
   14000785d:	cmp    rcx,r15
   140007860:	je     0x140007867
   140007862:	call   0x140008558
   140007867:	mov    QWORD PTR [rbp+0x8],rdi
   14000786b:	mov    rbx,QWORD PTR [rsp+0x50]
   140007870:	mov    eax,r14d
   140007873:	mov    rbp,QWORD PTR [rsp+0x58]
   140007878:	mov    rsi,QWORD PTR [rsp+0x60]
   14000787d:	add    rsp,0x20
   140007881:	pop    r15
   140007883:	pop    r14
   140007885:	pop    r13
   140007887:	pop    r12
   140007889:	pop    rdi
   14000788a:	ret    
   14000788b:	int3   
   14000788c:	int3   
   14000788d:	int3   
   14000788e:	int3   
   14000788f:	int3   
   140007890:	int3   
   140007891:	int3   
   140007892:	int3   
   140007893:	int3   
   140007894:	mov    rax,rsp
   140007897:	mov    QWORD PTR [rax+0x8],rbx
   14000789b:	mov    QWORD PTR [rax+0x10],rbp
   14000789f:	mov    QWORD PTR [rax+0x18],rsi
   1400078a3:	mov    QWORD PTR [rax+0x20],rdi
   1400078a7:	push   r12
   1400078a9:	push   r14
   1400078ab:	push   r15
   1400078ad:	sub    rsp,0x20
   1400078b1:	mov    r15,rdx
   1400078b4:	mov    rbp,rcx
   1400078b7:	mov    r12d,0x400
   1400078bd:	mov    rcx,0xffffffffffffffff
   1400078c4:	mov    eax,0x2
   1400078c9:	mov    r14d,r8d
   1400078cc:	mul    r12
   1400078cf:	lea    rdx,[rip+0x5d3a]        # 0x14000d610
   1400078d6:	mov    esi,r12d
   1400078d9:	cmovo  rax,rcx
   1400078dd:	mov    rcx,rax
   1400078e0:	call   0x140008fa8
   1400078e5:	xor    ebx,ebx
   1400078e7:	jmp    0x14000793c
   1400078e9:	mov    r9d,esi
   1400078ec:	mov    r8,rdi
   1400078ef:	mov    edx,r14d
   1400078f2:	mov    rcx,r15
   1400078f5:	call   QWORD PTR [rip+0x291d]        # 0x14000a218
   1400078fb:	test   eax,eax
   1400078fd:	je     0x140007991
   140007903:	mov    ecx,esi
   140007905:	sub    ecx,eax
   140007907:	cmp    ecx,0x1
   14000790a:	jg     0x14000796a
   14000790c:	mov    rcx,rdi
   14000790f:	call   0x140008558
   140007914:	add    esi,r12d
   140007917:	mov    eax,0x2
   14000791c:	movsxd rcx,esi
   14000791f:	mul    rcx
   140007922:	mov    rcx,0xffffffffffffffff
   140007929:	lea    rdx,[rip+0x5ce0]        # 0x14000d610
   140007930:	cmovo  rax,rcx
   140007934:	mov    rcx,rax
   140007937:	call   0x140008fa8
   14000793c:	mov    rdi,rax
   14000793f:	test   rax,rax
   140007942:	jne    0x1400078e9
   140007944:	mov    ebx,0x8007000e
   140007949:	mov    rbp,QWORD PTR [rsp+0x48]
   14000794e:	mov    eax,ebx
   140007950:	mov    rbx,QWORD PTR [rsp+0x40]
   140007955:	mov    rsi,QWORD PTR [rsp+0x50]
   14000795a:	mov    rdi,QWORD PTR [rsp+0x58]
   14000795f:	add    rsp,0x20
   140007963:	pop    r15
   140007965:	pop    r14
   140007967:	pop    r12
   140007969:	ret    
   14000796a:	mov    rcx,QWORD PTR [rbp+0x8]
   14000796e:	lea    rax,[rip+0x5c7b]        # 0x14000d5f0
   140007975:	cmp    rcx,rax
   140007978:	je     0x14000798b
   14000797a:	lea    rax,[rip+0x5c71]        # 0x14000d5f2
   140007981:	cmp    rcx,rax
   140007984:	je     0x14000798b
   140007986:	call   0x140008558
   14000798b:	mov    QWORD PTR [rbp+0x8],rdi
   14000798f:	jmp    0x140007949
   140007991:	mov    rcx,rdi
   140007994:	call   0x140008558
   140007999:	mov    ebx,0x80004005
   14000799e:	jmp    0x140007949
   1400079a0:	int3   
   1400079a1:	int3   
   1400079a2:	int3   
   1400079a3:	int3   
   1400079a4:	int3   
   1400079a5:	int3   
   1400079a6:	int3   
   1400079a7:	int3   
   1400079a8:	mov    QWORD PTR [rsp+0x10],rdx
   1400079ad:	mov    QWORD PTR [rsp+0x18],r8
   1400079b2:	mov    QWORD PTR [rsp+0x20],r9
   1400079b7:	push   rbx
   1400079b8:	push   rbp
   1400079b9:	push   rsi
   1400079ba:	push   rdi
   1400079bb:	push   r12
   1400079bd:	push   r13
   1400079bf:	push   r14
   1400079c1:	push   r15
   1400079c3:	sub    rsp,0x28
   1400079c7:	mov    r12,rdx
   1400079ca:	mov    r15,rcx
   1400079cd:	mov    ebp,0x100
   1400079d2:	mov    eax,0x2
   1400079d7:	mul    rbp
   1400079da:	mov    rdi,0xffffffffffffffff
   1400079e1:	lea    rdx,[rip+0x5c28]        # 0x14000d610
   1400079e8:	cmovo  rax,rdi
   1400079ec:	mov    rcx,rax
   1400079ef:	call   0x140008fa8
   1400079f4:	xor    r13d,r13d
   1400079f7:	mov    rbx,rax
   1400079fa:	test   rax,rax
   1400079fd:	je     0x140007ab8
   140007a03:	mov    r14d,ebp
   140007a06:	lea    rcx,[r14-0x1]
   140007a0a:	mov    esi,r13d
   140007a0d:	cmp    rcx,0x7ffffffe
   140007a14:	mov    eax,0x80070057
   140007a19:	cmova  esi,eax
   140007a1c:	test   esi,esi
   140007a1e:	js     0x140007a5d
   140007a20:	lea    rdi,[r14-0x1]
   140007a24:	mov    r8,r12
   140007a27:	mov    rdx,rdi
   140007a2a:	lea    r9,[rsp+0x80]
   140007a32:	mov    rcx,rbx
   140007a35:	mov    esi,r13d
   140007a38:	call   QWORD PTR [rip+0x28f2]        # 0x14000a330
   140007a3e:	test   eax,eax
   140007a40:	js     0x140007a4d
   140007a42:	cdqe   
   140007a44:	cmp    rax,rdi
   140007a47:	ja     0x140007a4d
   140007a49:	jne    0x140007a57
   140007a4b:	jmp    0x140007a52
   140007a4d:	mov    esi,0x8007007a
   140007a52:	mov    WORD PTR [rbx+rdi*2],r13w
   140007a57:	or     rdi,0xffffffffffffffff
   140007a5b:	jmp    0x140007a66
   140007a5d:	test   r14,r14
   140007a60:	je     0x140007a66
   140007a62:	mov    WORD PTR [rbx],r13w
   140007a66:	test   esi,esi
   140007a68:	jns    0x140007ab8
   140007a6a:	test   rbx,rbx
   140007a6d:	je     0x140007a77
   140007a6f:	mov    rcx,rbx
   140007a72:	call   0x140008558
   140007a77:	lea    eax,[rbp*2+0x0]
   140007a7e:	add    r14,r14
   140007a81:	movsxd rbp,eax
   140007a84:	cmp    ebp,0x19000
   140007a8a:	jg     0x140007ab5
   140007a8c:	mov    eax,0x2
   140007a91:	mul    rbp
   140007a94:	lea    rdx,[rip+0x5b75]        # 0x14000d610
   140007a9b:	cmovo  rax,rdi
   140007a9f:	mov    rcx,rax
   140007aa2:	call   0x140008fa8
   140007aa7:	mov    rbx,rax
   140007aaa:	test   rax,rax
   140007aad:	jne    0x140007a06
   140007ab3:	jmp    0x140007ab8
   140007ab5:	mov    rbx,r13
   140007ab8:	mov    rax,rbx
   140007abb:	neg    rax
   140007abe:	sbb    edi,edi
   140007ac0:	not    edi
   140007ac2:	and    edi,0x8007000e
   140007ac8:	jl     0x140007aef
   140007aca:	mov    rcx,QWORD PTR [r15+0x8]
   140007ace:	lea    rax,[rip+0x5b1b]        # 0x14000d5f0
   140007ad5:	cmp    rcx,rax
   140007ad8:	je     0x140007aeb
   140007ada:	lea    rax,[rip+0x5b11]        # 0x14000d5f2
   140007ae1:	cmp    rcx,rax
   140007ae4:	je     0x140007aeb
   140007ae6:	call   0x140008558
   140007aeb:	mov    QWORD PTR [r15+0x8],rbx
   140007aef:	mov    eax,edi
   140007af1:	add    rsp,0x28
   140007af5:	pop    r15
   140007af7:	pop    r14
   140007af9:	pop    r13
   140007afb:	pop    r12
   140007afd:	pop    rdi
   140007afe:	pop    rsi
   140007aff:	pop    rbp
   140007b00:	pop    rbx
   140007b01:	ret    
   140007b02:	int3   
   140007b03:	int3   
   140007b04:	int3   
   140007b05:	int3   
   140007b06:	int3   
   140007b07:	int3   
   140007b08:	int3   
   140007b09:	int3   
   140007b0a:	int3   
   140007b0b:	int3   
   140007b0c:	int3   
   140007b0d:	int3   
   140007b0e:	int3   
   140007b0f:	int3   
   140007b10:	rex push rbx
   140007b12:	sub    rsp,0x20
   140007b16:	lea    rax,[rip+0x2e63]        # 0x14000a980
   140007b1d:	mov    rbx,rcx
   140007b20:	mov    QWORD PTR [rcx],rax
   140007b23:	lock dec DWORD PTR [rip+0x5ace]        # 0x14000d5f8
   140007b2a:	test   dl,0x1
   140007b2d:	je     0x140007b34
   140007b2f:	call   0x140008558
   140007b34:	mov    rax,rbx
   140007b37:	add    rsp,0x20
   140007b3b:	pop    rbx
   140007b3c:	ret    
   140007b3d:	int3   
   140007b3e:	int3   
   140007b3f:	int3   
   140007b40:	int3   
   140007b41:	int3   
   140007b42:	int3   
   140007b43:	int3   
   140007b44:	mov    QWORD PTR [rsp+0x8],rbx
   140007b49:	mov    QWORD PTR [rsp+0x10],rbp
   140007b4e:	mov    QWORD PTR [rsp+0x18],rsi
   140007b53:	push   rdi
   140007b54:	sub    rsp,0x20
   140007b58:	mov    rdi,r8
   140007b5b:	mov    r11,rdx
   140007b5e:	mov    esi,0x80004003
   140007b63:	test   r8,r8
   140007b66:	je     0x140007be1
   140007b68:	and    QWORD PTR [rdx],0x0
   140007b6c:	xor    r10d,r10d
   140007b6f:	mov    esi,0x80004002
   140007b74:	test   r9d,r9d
   140007b77:	je     0x140007be1
   140007b79:	mov    rbx,QWORD PTR [rip+0x34d8]        # 0x14000b058
   140007b80:	mov    rbp,QWORD PTR [rip+0x34c9]        # 0x14000b050
   140007b87:	mov    rdx,QWORD PTR [r8]
   140007b8a:	mov    rax,QWORD PTR [rcx]
   140007b8d:	cmp    rax,QWORD PTR [rdx]
   140007b90:	jne    0x140007b9c
   140007b92:	mov    rax,QWORD PTR [rcx+0x8]
   140007b96:	cmp    rax,QWORD PTR [rdx+0x8]
   140007b9a:	je     0x140007ba7
   140007b9c:	cmp    QWORD PTR [rcx],rbp
   140007b9f:	jne    0x140007bae
   140007ba1:	cmp    QWORD PTR [rcx+0x8],rbx
   140007ba5:	jne    0x140007bae
   140007ba7:	cmp    QWORD PTR [r8+0x8],0x0
   140007bac:	jne    0x140007bbc
   140007bae:	inc    r10d
   140007bb1:	add    r8,0x10
   140007bb5:	cmp    r10d,r9d
   140007bb8:	jae    0x140007be1
   140007bba:	jmp    0x140007b87
   140007bbc:	mov    eax,r10d
   140007bbf:	xor    esi,esi
   140007bc1:	add    rax,rax
   140007bc4:	mov    rdi,QWORD PTR [rdi+rax*8+0x8]
   140007bc9:	mov    QWORD PTR [r11],rdi
   140007bcc:	mov    rdx,QWORD PTR [rdi]
   140007bcf:	mov    rbx,QWORD PTR [rdx+0x8]
   140007bd3:	mov    rcx,rbx
   140007bd6:	call   QWORD PTR [rip+0x2844]        # 0x14000a420
   140007bdc:	mov    rcx,rdi
   140007bdf:	call   rbx
   140007be1:	mov    rbx,QWORD PTR [rsp+0x30]
   140007be6:	mov    eax,esi
   140007be8:	mov    rsi,QWORD PTR [rsp+0x40]
   140007bed:	mov    rbp,QWORD PTR [rsp+0x38]
   140007bf2:	add    rsp,0x20
   140007bf6:	pop    rdi
   140007bf7:	ret    
   140007bf8:	int3   
   140007bf9:	int3   
   140007bfa:	int3   
   140007bfb:	int3   
   140007bfc:	int3   
   140007bfd:	int3   
   140007bfe:	int3   
   140007bff:	int3   
   140007c00:	test   rcx,rcx
   140007c03:	je     0x140007c35
   140007c05:	mov    QWORD PTR [rsp+0x8],rbx
   140007c0a:	push   rdi
   140007c0b:	sub    rsp,0x20
   140007c0f:	mov    rax,QWORD PTR [rcx]
   140007c12:	mov    rdi,rcx
   140007c15:	mov    rbx,QWORD PTR [rax]
   140007c18:	mov    rcx,rbx
   140007c1b:	call   QWORD PTR [rip+0x27ff]        # 0x14000a420
   140007c21:	mov    edx,0x1
   140007c26:	mov    rcx,rdi
   140007c29:	call   rbx
   140007c2b:	mov    rbx,QWORD PTR [rsp+0x30]
   140007c30:	add    rsp,0x20
   140007c34:	pop    rdi
   140007c35:	ret    
   140007c36:	int3   
   140007c37:	int3   
   140007c38:	int3   
   140007c39:	int3   
   140007c3a:	int3   
   140007c3b:	int3   
   140007c3c:	sub    rsp,0x38
   140007c40:	and    QWORD PTR [rsp+0x20],0x0
   140007c46:	lea    r8,[rip+0x34c3]        # 0x14000b110
   140007c4d:	mov    eax,0xa
   140007c52:	movzx  r9d,ax
   140007c56:	lea    edx,[rax+0x21]
   140007c59:	call   QWORD PTR [rip+0x23c1]        # 0x14000a020
   140007c5f:	add    rsp,0x38
   140007c63:	ret    
   140007c64:	int3   
   140007c65:	int3   
   140007c66:	int3   
   140007c67:	int3   
   140007c68:	int3   
   140007c69:	int3   
   140007c6a:	int3   
   140007c6b:	int3   
   140007c6c:	mov    QWORD PTR [rsp+0x8],rbx
   140007c71:	mov    QWORD PTR [rsp+0x10],rsi
   140007c76:	mov    QWORD PTR [rsp+0x18],rdi
   140007c7b:	push   r14
   140007c7d:	sub    rsp,0x20
   140007c81:	mov    rdi,QWORD PTR [rdx]
   140007c84:	mov    r14,rdx
   140007c87:	test   rdi,rdi
   140007c8a:	je     0x140007cdf
   140007c8c:	test   ecx,ecx
   140007c8e:	je     0x140007cdf
   140007c90:	lea    rbx,[rdi+0x10]
   140007c94:	mov    esi,ecx
   140007c96:	mov    ecx,DWORD PTR [rbx-0x10]
   140007c99:	test   ecx,ecx
   140007c9b:	je     0x140007cac
   140007c9d:	sub    ecx,0x1
   140007ca0:	je     0x140007cfa
   140007ca2:	sub    ecx,0x1
   140007ca5:	je     0x140007cf5
   140007ca7:	cmp    ecx,0x2
   140007caa:	jne    0x140007cc9
   140007cac:	mov    rcx,QWORD PTR [rbx]
   140007caf:	call   QWORD PTR [rip+0x24f3]        # 0x14000a1a8
   140007cb5:	mov    rcx,QWORD PTR [rbx+0x8]
   140007cb9:	call   QWORD PTR [rip+0x24e9]        # 0x14000a1a8
   140007cbf:	mov    rcx,QWORD PTR [rbx+0x10]
   140007cc3:	call   QWORD PTR [rip+0x24df]        # 0x14000a1a8
   140007cc9:	add    rbx,0x38
   140007ccd:	sub    rsi,0x1
   140007cd1:	jne    0x140007c96
   140007cd3:	mov    rcx,rdi
   140007cd6:	call   QWORD PTR [rip+0x272c]        # 0x14000a408
   140007cdc:	and    QWORD PTR [r14],rsi
   140007cdf:	mov    rbx,QWORD PTR [rsp+0x30]
   140007ce4:	mov    rsi,QWORD PTR [rsp+0x38]
   140007ce9:	mov    rdi,QWORD PTR [rsp+0x40]
   140007cee:	add    rsp,0x20
   140007cf2:	pop    r14
   140007cf4:	ret    
   140007cf5:	mov    rcx,QWORD PTR [rbx]
   140007cf8:	jmp    0x140007cc3
   140007cfa:	mov    rcx,QWORD PTR [rbx]
   140007cfd:	call   QWORD PTR [rip+0x24a5]        # 0x14000a1a8
   140007d03:	mov    rcx,QWORD PTR [rbx+0x10]
   140007d07:	call   QWORD PTR [rip+0x249b]        # 0x14000a1a8
   140007d0d:	mov    rcx,QWORD PTR [rbx+0x18]
   140007d11:	jmp    0x140007cc3
   140007d13:	int3   
   140007d14:	int3   
   140007d15:	int3   
   140007d16:	int3   
   140007d17:	int3   
   140007d18:	int3   
   140007d19:	int3   
   140007d1a:	int3   
   140007d1b:	int3   
   140007d1c:	mov    QWORD PTR [rsp+0x8],rbx
   140007d21:	mov    QWORD PTR [rsp+0x10],rsi
   140007d26:	mov    QWORD PTR [rsp+0x18],rdi
   140007d2b:	push   r14
   140007d2d:	sub    rsp,0x20
   140007d31:	lea    rax,[rip+0x2c48]        # 0x14000a980
   140007d38:	mov    rsi,rdx
   140007d3b:	mov    QWORD PTR [rcx],rax
   140007d3e:	mov    rdi,rcx
   140007d41:	mov    DWORD PTR [rcx+0x8],0x6e6b6e75
   140007d48:	mov    DWORD PTR [rcx+0xc],0x1
   140007d4f:	lock inc DWORD PTR [rip+0x58a2]        # 0x14000d5f8
   140007d56:	lea    rax,[rip+0x2c63]        # 0x14000a9c0
   140007d5d:	mov    QWORD PTR [rcx],rax
   140007d60:	lea    rax,[rip+0x2c29]        # 0x14000a990
   140007d67:	mov    QWORD PTR [rcx+0x10],rax
   140007d6b:	and    QWORD PTR [rcx+0x18],0x0
   140007d70:	and    QWORD PTR [rcx+0x20],0x0
   140007d75:	and    QWORD PTR [rcx+0x28],0x0
   140007d7a:	test   rdx,rdx
   140007d7d:	je     0x140007d94
   140007d7f:	mov    rax,QWORD PTR [rdx]
   140007d82:	mov    rbx,QWORD PTR [rax+0x8]
   140007d86:	mov    rcx,rbx
   140007d89:	call   QWORD PTR [rip+0x2691]        # 0x14000a420
   140007d8f:	mov    rcx,rsi
   140007d92:	call   rbx
   140007d94:	mov    r14,QWORD PTR [rdi+0x18]
   140007d98:	test   r14,r14
   140007d9b:	je     0x140007db7
   140007d9d:	mov    rax,QWORD PTR [r14]
   140007da0:	mov    rbx,QWORD PTR [rax+0x10]
   140007da4:	mov    rcx,rbx
   140007da7:	call   QWORD PTR [rip+0x2673]        # 0x14000a420
   140007dad:	mov    rcx,r14
   140007db0:	call   rbx
   140007db2:	and    QWORD PTR [rdi+0x18],0x0
   140007db7:	mov    rbx,QWORD PTR [rsp+0x30]
   140007dbc:	mov    rax,rdi
   140007dbf:	mov    QWORD PTR [rdi+0x18],rsi
   140007dc3:	mov    rsi,QWORD PTR [rsp+0x38]
   140007dc8:	mov    rdi,QWORD PTR [rsp+0x40]
   140007dcd:	add    rsp,0x20
   140007dd1:	pop    r14
   140007dd3:	ret    
   140007dd4:	int3   
   140007dd5:	int3   
   140007dd6:	int3   
   140007dd7:	int3   
   140007dd8:	int3   
   140007dd9:	int3   
   140007dda:	int3   
   140007ddb:	int3   
   140007ddc:	int3   
   140007ddd:	int3   
   140007dde:	int3   
   140007ddf:	int3   
   140007de0:	mov    QWORD PTR [rsp+0x8],rbx
   140007de5:	mov    QWORD PTR [rsp+0x10],rbp
   140007dea:	mov    QWORD PTR [rsp+0x18],rsi
   140007def:	push   rdi
   140007df0:	sub    rsp,0x20
   140007df4:	lea    rax,[rip+0x2bc5]        # 0x14000a9c0
   140007dfb:	mov    ebp,edx
   140007dfd:	mov    QWORD PTR [rcx],rax
   140007e00:	mov    rdi,rcx
   140007e03:	lea    rax,[rip+0x2b86]        # 0x14000a990
   140007e0a:	mov    QWORD PTR [rcx+0x10],rax
   140007e0e:	mov    rsi,QWORD PTR [rcx+0x28]
   140007e12:	test   rsi,rsi
   140007e15:	je     0x140007e31
   140007e17:	mov    rax,QWORD PTR [rsi]
   140007e1a:	mov    rbx,QWORD PTR [rax+0x10]
   140007e1e:	mov    rcx,rbx
   140007e21:	call   QWORD PTR [rip+0x25f9]        # 0x14000a420
   140007e27:	mov    rcx,rsi
   140007e2a:	call   rbx
   140007e2c:	and    QWORD PTR [rdi+0x28],0x0
   140007e31:	mov    rsi,QWORD PTR [rdi+0x20]
   140007e35:	test   rsi,rsi
   140007e38:	je     0x140007e54
   140007e3a:	mov    rax,QWORD PTR [rsi]
   140007e3d:	mov    rbx,QWORD PTR [rax+0x10]
   140007e41:	mov    rcx,rbx
   140007e44:	call   QWORD PTR [rip+0x25d6]        # 0x14000a420
   140007e4a:	mov    rcx,rsi
   140007e4d:	call   rbx
   140007e4f:	and    QWORD PTR [rdi+0x20],0x0
   140007e54:	mov    rsi,QWORD PTR [rdi+0x18]
   140007e58:	test   rsi,rsi
   140007e5b:	je     0x140007e77
   140007e5d:	mov    rax,QWORD PTR [rsi]
   140007e60:	mov    rbx,QWORD PTR [rax+0x10]
   140007e64:	mov    rcx,rbx
   140007e67:	call   QWORD PTR [rip+0x25b3]        # 0x14000a420
   140007e6d:	mov    rcx,rsi
   140007e70:	call   rbx
   140007e72:	and    QWORD PTR [rdi+0x18],0x0
   140007e77:	lea    rax,[rip+0x2b02]        # 0x14000a980
   140007e7e:	mov    QWORD PTR [rdi],rax
   140007e81:	lock dec DWORD PTR [rip+0x5770]        # 0x14000d5f8
   140007e88:	test   bpl,0x1
   140007e8c:	je     0x140007e96
   140007e8e:	mov    rcx,rdi
   140007e91:	call   0x140008558
   140007e96:	mov    rbx,QWORD PTR [rsp+0x30]
   140007e9b:	mov    rax,rdi
   140007e9e:	mov    rbp,QWORD PTR [rsp+0x38]
   140007ea3:	mov    rsi,QWORD PTR [rsp+0x40]
   140007ea8:	add    rsp,0x20
   140007eac:	pop    rdi
   140007ead:	ret    
   140007eae:	int3   
   140007eaf:	int3   
   140007eb0:	int3   
   140007eb1:	int3   
   140007eb2:	int3   
   140007eb3:	int3   
   140007eb4:	int3   
   140007eb5:	int3   
   140007eb6:	int3   
   140007eb7:	int3   
   140007eb8:	int3   
   140007eb9:	int3   
   140007eba:	int3   
   140007ebb:	int3   
   140007ebc:	int3   
   140007ebd:	int3   
   140007ebe:	int3   
   140007ebf:	int3   
   140007ec0:	mov    QWORD PTR [rsp+0x8],rbx
   140007ec5:	mov    QWORD PTR [rsp+0x10],rbp
   140007eca:	mov    QWORD PTR [rsp+0x18],rsi
   140007ecf:	push   rdi
   140007ed0:	push   r12
   140007ed2:	push   r13
   140007ed4:	push   r14
   140007ed6:	push   r15
   140007ed8:	sub    rsp,0x30
   140007edc:	mov    r12,r9
   140007edf:	mov    r13,r8
   140007ee2:	mov    r14,rdx
   140007ee5:	mov    rbp,rcx
   140007ee8:	mov    rcx,QWORD PTR [rip+0x5131]        # 0x14000d020
   140007eef:	lea    rax,[rip+0x512a]        # 0x14000d020
   140007ef6:	cmp    rcx,rax
   140007ef9:	je     0x140007f0a
   140007efb:	test   BYTE PTR [rcx+0x1c],0x4
   140007eff:	je     0x140007f0a
   140007f01:	mov    rcx,QWORD PTR [rcx+0x10]
   140007f05:	call   0x140007c3c
   140007f0a:	mov    eax,0x80070057
   140007f0f:	test   r14,r14
   140007f12:	je     0x140007fac
   140007f18:	mov    rsi,QWORD PTR [rsp+0x80]
   140007f20:	test   rsi,rsi
   140007f23:	je     0x140007fac
   140007f29:	and    QWORD PTR [rsi],0x0
   140007f2d:	test   rbp,rbp
   140007f30:	je     0x140007f38
   140007f32:	lea    rdi,[rbp+0x10]
   140007f36:	jmp    0x140007f3a
   140007f38:	xor    edi,edi
   140007f3a:	mov    rax,QWORD PTR [r14]
   140007f3d:	lea    r15,[rbp+0x28]
   140007f41:	mov    rbx,QWORD PTR [rax+0x18]
   140007f45:	mov    rcx,rbx
   140007f48:	call   QWORD PTR [rip+0x24d2]        # 0x14000a420
   140007f4e:	lea    r9,[rip+0x30fb]        # 0x14000b050
   140007f55:	mov    QWORD PTR [rsp+0x20],r15
   140007f5a:	mov    r8,rdi
   140007f5d:	mov    rdx,r13
   140007f60:	mov    rcx,r14
   140007f63:	call   rbx
   140007f65:	test   eax,eax
   140007f67:	js     0x140007fac
   140007f69:	mov    rdi,QWORD PTR [r15]
   140007f6c:	mov    rax,QWORD PTR [rdi]
   140007f6f:	mov    rbx,QWORD PTR [rax]
   140007f72:	mov    rcx,rbx
   140007f75:	call   QWORD PTR [rip+0x24a5]        # 0x14000a420
   140007f7b:	mov    r8,rsi
   140007f7e:	mov    rdx,r12
   140007f81:	mov    rcx,rdi
   140007f84:	call   rbx
   140007f86:	test   eax,eax
   140007f88:	js     0x140007fac
   140007f8a:	mov    rsi,QWORD PTR [r15]
   140007f8d:	mov    rax,QWORD PTR [rsi]
   140007f90:	mov    rdi,QWORD PTR [rax]
   140007f93:	mov    rcx,rdi
   140007f96:	call   QWORD PTR [rip+0x2484]        # 0x14000a420
   140007f9c:	lea    r8,[rbp+0x20]
   140007fa0:	mov    rcx,rsi
   140007fa3:	lea    rdx,[rip+0x30c6]        # 0x14000b070
   140007faa:	call   rdi
   140007fac:	mov    rbx,QWORD PTR [rsp+0x60]
   140007fb1:	mov    rbp,QWORD PTR [rsp+0x68]
   140007fb6:	mov    rsi,QWORD PTR [rsp+0x70]
   140007fbb:	add    rsp,0x30
   140007fbf:	pop    r15
   140007fc1:	pop    r14
   140007fc3:	pop    r13
   140007fc5:	pop    r12
   140007fc7:	pop    rdi
   140007fc8:	ret    
   140007fc9:	int3   
   140007fca:	int3   
   140007fcb:	int3   
   140007fcc:	int3   
   140007fcd:	int3   
   140007fce:	int3   
   140007fcf:	int3   
   140007fd0:	mov    QWORD PTR [rsp+0x8],rbx
   140007fd5:	mov    QWORD PTR [rsp+0x10],rbp
   140007fda:	mov    QWORD PTR [rsp+0x18],rsi
   140007fdf:	push   rdi
   140007fe0:	sub    rsp,0x20
   140007fe4:	cmp    QWORD PTR [rcx+0x10],0x0
   140007fe9:	mov    esi,r8d
   140007fec:	mov    ebp,edx
   140007fee:	mov    eax,0x80004005
   140007ff3:	je     0x140008013
   140007ff5:	mov    rdi,QWORD PTR [rcx+0x10]
   140007ff9:	mov    rax,QWORD PTR [rdi]
   140007ffc:	mov    rbx,QWORD PTR [rax+0x18]
   140008000:	mov    rcx,rbx
   140008003:	call   QWORD PTR [rip+0x2417]        # 0x14000a420
   140008009:	mov    r8d,esi
   14000800c:	mov    edx,ebp
   14000800e:	mov    rcx,rdi
   140008011:	call   rbx
   140008013:	mov    rbx,QWORD PTR [rsp+0x30]
   140008018:	mov    rbp,QWORD PTR [rsp+0x38]
   14000801d:	mov    rsi,QWORD PTR [rsp+0x40]
   140008022:	add    rsp,0x20
   140008026:	pop    rdi
   140008027:	ret    
   140008028:	int3   
   140008029:	int3   
   14000802a:	int3   
   14000802b:	int3   
   14000802c:	int3   
   14000802d:	int3   
   14000802e:	int3   
   14000802f:	int3   
   140008030:	mov    QWORD PTR [rsp+0x8],rbx
   140008035:	mov    QWORD PTR [rsp+0x10],rbp
   14000803a:	mov    QWORD PTR [rsp+0x18],rsi
   14000803f:	push   rdi
   140008040:	sub    rsp,0x20
   140008044:	cmp    QWORD PTR [rcx+0x10],0x0
   140008049:	mov    rsi,rcx
   14000804c:	mov    ebp,0x80004005
   140008051:	je     0x1400080aa
   140008053:	mov    rdi,QWORD PTR [rcx+0x10]
   140008057:	mov    rax,QWORD PTR [rdi]
   14000805a:	mov    rbx,QWORD PTR [rax+0x20]
   14000805e:	mov    rcx,rbx
   140008061:	call   QWORD PTR [rip+0x23b9]        # 0x14000a420
   140008067:	mov    rcx,rdi
   14000806a:	call   rbx
   14000806c:	mov    rdi,QWORD PTR [rsi+0x8]
   140008070:	mov    ebp,eax
   140008072:	mov    rdx,QWORD PTR [rdi]
   140008075:	mov    rbx,QWORD PTR [rdx+0x18]
   140008079:	mov    rcx,rbx
   14000807c:	call   QWORD PTR [rip+0x239e]        # 0x14000a420
   140008082:	mov    rcx,rdi
   140008085:	call   rbx
   140008087:	mov    rdi,QWORD PTR [rsi+0x10]
   14000808b:	test   rdi,rdi
   14000808e:	je     0x1400080aa
   140008090:	mov    rax,QWORD PTR [rdi]
   140008093:	mov    rbx,QWORD PTR [rax+0x10]
   140008097:	mov    rcx,rbx
   14000809a:	call   QWORD PTR [rip+0x2380]        # 0x14000a420
   1400080a0:	mov    rcx,rdi
   1400080a3:	call   rbx
   1400080a5:	and    QWORD PTR [rsi+0x10],0x0
   1400080aa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400080af:	mov    eax,ebp
   1400080b1:	mov    rbp,QWORD PTR [rsp+0x38]
   1400080b6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400080bb:	add    rsp,0x20
   1400080bf:	pop    rdi
   1400080c0:	ret    
   1400080c1:	int3   
   1400080c2:	int3   
   1400080c3:	int3   
   1400080c4:	int3   
   1400080c5:	int3   
   1400080c6:	int3   
   1400080c7:	int3   
   1400080c8:	int3   
   1400080c9:	int3   
   1400080ca:	int3   
   1400080cb:	int3   
   1400080cc:	int3   
   1400080cd:	int3   
   1400080ce:	int3   
   1400080cf:	int3   
   1400080d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400080d5:	push   rdi
   1400080d6:	sub    rsp,0x20
   1400080da:	cmp    QWORD PTR [rcx+0x10],0x0
   1400080df:	mov    eax,0x80004005
   1400080e4:	je     0x1400080ff
   1400080e6:	mov    rdi,QWORD PTR [rcx+0x10]
   1400080ea:	mov    rax,QWORD PTR [rdi]
   1400080ed:	mov    rbx,QWORD PTR [rax+0x28]
   1400080f1:	mov    rcx,rbx
   1400080f4:	call   QWORD PTR [rip+0x2326]        # 0x14000a420
   1400080fa:	mov    rcx,rdi
   1400080fd:	call   rbx
   1400080ff:	mov    rbx,QWORD PTR [rsp+0x30]
   140008104:	add    rsp,0x20
   140008108:	pop    rdi
   140008109:	ret    
   14000810a:	int3   
   14000810b:	int3   
   14000810c:	int3   
   14000810d:	int3   
   14000810e:	int3   
   14000810f:	int3   
   140008110:	mov    r11,rsp
   140008113:	mov    QWORD PTR [r11+0x8],rbx
   140008117:	mov    QWORD PTR [r11+0x10],rbp
   14000811b:	mov    QWORD PTR [r11+0x18],rsi
   14000811f:	push   rdi
   140008120:	sub    rsp,0x40
   140008124:	lea    rax,[rip+0x2f25]        # 0x14000b050
   14000812b:	mov    rsi,r8
   14000812e:	mov    QWORD PTR [r11-0x28],rax
   140008132:	lea    r10,[rcx-0x10]
   140008136:	mov    rax,r10
   140008139:	mov    rbp,rdx
   14000813c:	neg    rax
   14000813f:	mov    rdi,rcx
   140008142:	lea    rax,[rip+0x2f27]        # 0x14000b070
   140008149:	sbb    r9,r9
   14000814c:	mov    QWORD PTR [r11-0x18],rax
   140008150:	and    r9,rcx
   140008153:	neg    r10
   140008156:	mov    QWORD PTR [r11-0x20],r9
   14000815a:	sbb    rax,rax
   14000815d:	and    rax,rcx
   140008160:	mov    QWORD PTR [r11-0x10],rax
   140008164:	test   r8,r8
   140008167:	je     0x140008180
   140008169:	mov    r9d,0x2
   14000816f:	lea    r8,[r11-0x28]
   140008173:	mov    rdx,rsi
   140008176:	mov    rcx,rbp
   140008179:	call   0x140007b44
   14000817e:	jmp    0x140008185
   140008180:	mov    eax,0x80004003
   140008185:	test   eax,eax
   140008187:	jns    0x1400081a7
   140008189:	mov    rdi,QWORD PTR [rdi+0x18]
   14000818d:	mov    rax,QWORD PTR [rdi]
   140008190:	mov    rbx,QWORD PTR [rax]
   140008193:	mov    rcx,rbx
   140008196:	call   QWORD PTR [rip+0x2284]        # 0x14000a420
   14000819c:	mov    r8,rsi
   14000819f:	mov    rdx,rbp
   1400081a2:	mov    rcx,rdi
   1400081a5:	call   rbx
   1400081a7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400081ac:	mov    rbp,QWORD PTR [rsp+0x58]
   1400081b1:	mov    rsi,QWORD PTR [rsp+0x60]
   1400081b6:	add    rsp,0x40
   1400081ba:	pop    rdi
   1400081bb:	ret    
   1400081bc:	int3   
   1400081bd:	int3   
   1400081be:	int3   
   1400081bf:	int3   
   1400081c0:	int3   
   1400081c1:	int3   
   1400081c2:	int3   
   1400081c3:	int3   
   1400081c4:	int3   
   1400081c5:	int3   
   1400081c6:	int3   
   1400081c7:	int3   
   1400081c8:	int3   
   1400081c9:	int3   
   1400081ca:	int3   
   1400081cb:	int3   
   1400081cc:	int3   
   1400081cd:	int3   
   1400081ce:	int3   
   1400081cf:	int3   
   1400081d0:	mov    eax,0x1
   1400081d5:	lock xadd DWORD PTR [rcx-0x4],eax
   1400081da:	inc    eax
   1400081dc:	ret    
   1400081dd:	int3   
   1400081de:	int3   
   1400081df:	int3   
   1400081e0:	int3   
   1400081e1:	int3   
   1400081e2:	int3   
   1400081e3:	int3   
   1400081e4:	int3   
   1400081e5:	int3   
   1400081e6:	int3   
   1400081e7:	int3   
   1400081e8:	int3   
   1400081e9:	int3   
   1400081ea:	int3   
   1400081eb:	int3   
   1400081ec:	int3   
   1400081ed:	int3   
   1400081ee:	int3   
   1400081ef:	int3   
   1400081f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400081f5:	push   rdi
   1400081f6:	sub    rsp,0x20
   1400081fa:	lea    rdi,[rcx-0x10]
   1400081fe:	or     eax,0xffffffff
   140008201:	lock xadd DWORD PTR [rdi+0xc],eax
   140008206:	sub    eax,0x1
   140008209:	jne    0x140008222
   14000820b:	mov    rax,QWORD PTR [rdi]
   14000820e:	mov    rbx,QWORD PTR [rax+0x8]
   140008212:	mov    rcx,rbx
   140008215:	call   QWORD PTR [rip+0x2205]        # 0x14000a420
   14000821b:	mov    rcx,rdi
   14000821e:	call   rbx
   140008220:	xor    eax,eax
   140008222:	mov    rbx,QWORD PTR [rsp+0x30]
   140008227:	add    rsp,0x20
   14000822b:	pop    rdi
   14000822c:	ret    
   14000822d:	int3   
   14000822e:	int3   
   14000822f:	int3   
   140008230:	int3   
   140008231:	int3   
   140008232:	int3   
   140008233:	int3   
   140008234:	mov    QWORD PTR [rsp+0x8],rbx
   140008239:	mov    QWORD PTR [rsp+0x18],rbp
   14000823e:	push   rsi
   14000823f:	push   rdi
   140008240:	push   r14
   140008242:	sub    rsp,0x30
   140008246:	mov    rax,QWORD PTR [rdx]
   140008249:	mov    rbp,rcx
   14000824c:	and    QWORD PTR [rsp+0x58],0x0
   140008252:	mov    r14,r8
   140008255:	mov    rdi,rdx
   140008258:	mov    rbx,QWORD PTR [rax]
   14000825b:	mov    rcx,rbx
   14000825e:	call   QWORD PTR [rip+0x21bc]        # 0x14000a420
   140008264:	lea    r8,[rsp+0x58]
   140008269:	mov    rcx,rdi
   14000826c:	lea    rdx,[rip+0x2ded]        # 0x14000b060
   140008273:	call   rbx
   140008275:	mov    esi,eax
   140008277:	test   eax,eax
   140008279:	js     0x1400082f4
   14000827b:	mov    ecx,0x30
   140008280:	call   0x140008564
   140008285:	test   rax,rax
   140008288:	je     0x14000829d
   14000828a:	mov    rdx,rbp
   14000828d:	mov    rcx,rax
   140008290:	call   0x140007d1c
   140008295:	mov    rbx,rax
   140008298:	test   rax,rax
   14000829b:	jne    0x14000829f
   14000829d:	xor    ebx,ebx
   14000829f:	test   rbx,rbx
   1400082a2:	je     0x1400082d1
   1400082a4:	mov    rax,QWORD PTR [rbx]
   1400082a7:	mov    rdi,QWORD PTR [rax+0x10]
   1400082ab:	mov    rcx,rdi
   1400082ae:	call   QWORD PTR [rip+0x216c]        # 0x14000a420
   1400082b4:	mov    rdx,QWORD PTR [rsp+0x58]
   1400082b9:	lea    r8,[rip+0x2df0]        # 0x14000b0b0
   1400082c0:	mov    r9,r8
   1400082c3:	mov    QWORD PTR [rsp+0x20],r14
   1400082c8:	mov    rcx,rbx
   1400082cb:	call   rdi
   1400082cd:	mov    esi,eax
   1400082cf:	jmp    0x1400082d6
   1400082d1:	mov    esi,0x8007000e
   1400082d6:	test   rbx,rbx
   1400082d9:	je     0x1400082f4
   1400082db:	lea    rdi,[rbx+0x10]
   1400082df:	mov    rax,QWORD PTR [rdi]
   1400082e2:	mov    rbx,QWORD PTR [rax+0x10]
   1400082e6:	mov    rcx,rbx
   1400082e9:	call   QWORD PTR [rip+0x2131]        # 0x14000a420
   1400082ef:	mov    rcx,rdi
   1400082f2:	call   rbx
   1400082f4:	mov    rbx,QWORD PTR [rsp+0x58]
   1400082f9:	test   rbx,rbx
   1400082fc:	je     0x140008313
   1400082fe:	mov    rax,QWORD PTR [rbx]
   140008301:	mov    rdi,QWORD PTR [rax+0x10]
   140008305:	mov    rcx,rdi
   140008308:	call   QWORD PTR [rip+0x2112]        # 0x14000a420
   14000830e:	mov    rcx,rbx
   140008311:	call   rdi
   140008313:	mov    rbx,QWORD PTR [rsp+0x50]
   140008318:	mov    eax,esi
   14000831a:	mov    rbp,QWORD PTR [rsp+0x60]
   14000831f:	add    rsp,0x30
   140008323:	pop    r14
   140008325:	pop    rdi
   140008326:	pop    rsi
   140008327:	ret    
   140008328:	int3   
   140008329:	int3   
   14000832a:	int3   
   14000832b:	int3   
   14000832c:	int3   
   14000832d:	int3   
   14000832e:	int3   
   14000832f:	int3   
   140008330:	lea    rax,[rip+0x26a1]        # 0x14000a9d8
   140008337:	mov    QWORD PTR [rcx],rax
   14000833a:	mov    rax,rcx
   14000833d:	ret    
   14000833e:	int3   
   14000833f:	int3   
   140008340:	int3   
   140008341:	int3   
   140008342:	int3   
   140008343:	int3   
   140008344:	int3   
   140008345:	int3   
   140008346:	int3   
   140008347:	int3   
   140008348:	int3   
   140008349:	int3   
   14000834a:	int3   
   14000834b:	int3   
   14000834c:	int3   
   14000834d:	int3   
   14000834e:	int3   
   14000834f:	int3   
   140008350:	lea    rax,[rip+0x2681]        # 0x14000a9d8
   140008357:	mov    QWORD PTR [rcx],rax
   14000835a:	ret    
   14000835b:	int3   
   14000835c:	int3   
   14000835d:	int3   
   14000835e:	int3   
   14000835f:	int3   
   140008360:	int3   
   140008361:	int3   
   140008362:	int3   
   140008363:	int3   
   140008364:	int3   
   140008365:	int3   
   140008366:	int3   
   140008367:	int3   
   140008368:	int3   
   140008369:	int3   
   14000836a:	int3   
   14000836b:	int3   
   14000836c:	int3   
   14000836d:	int3   
   14000836e:	int3   
   14000836f:	int3   
   140008370:	mov    rax,rcx
   140008373:	ret    
   140008374:	int3   
   140008375:	int3   
   140008376:	int3   
   140008377:	int3   
   140008378:	int3   
   140008379:	int3   
   14000837a:	int3   
   14000837b:	int3   
   14000837c:	int3   
   14000837d:	int3   
   14000837e:	int3   
   14000837f:	int3   
   140008380:	mov    QWORD PTR [rsp+0x8],rbx
   140008385:	push   rdi
   140008386:	sub    rsp,0x20
   14000838a:	mov    rbx,rcx
   14000838d:	test   dl,0x2
   140008390:	je     0x1400083c7
   140008392:	lea    rdi,[rcx-0x8]
   140008396:	movsxd rcx,DWORD PTR [rdi]
   140008399:	lea    r8,[rbx+rcx*8]
   14000839d:	sub    ecx,0x1
   1400083a0:	js     0x1400083b5
   1400083a2:	lea    rax,[rip+0x262f]        # 0x14000a9d8
   1400083a9:	sub    ecx,0x1
   1400083ac:	lea    r8,[r8-0x8]
   1400083b0:	mov    QWORD PTR [r8],rax
   1400083b3:	jns    0x1400083a9
   1400083b5:	test   dl,0x1
   1400083b8:	je     0x1400083c2
   1400083ba:	mov    rcx,rdi
   1400083bd:	call   0x140008558
   1400083c2:	mov    rax,rdi
   1400083c5:	jmp    0x1400083de
   1400083c7:	lea    rax,[rip+0x260a]        # 0x14000a9d8
   1400083ce:	mov    QWORD PTR [rcx],rax
   1400083d1:	test   dl,0x1
   1400083d4:	je     0x1400083db
   1400083d6:	call   0x140008558
   1400083db:	mov    rax,rbx
   1400083de:	mov    rbx,QWORD PTR [rsp+0x30]
   1400083e3:	add    rsp,0x20
   1400083e7:	pop    rdi
   1400083e8:	ret    
   1400083e9:	int3   
   1400083ea:	int3   
   1400083eb:	int3   
   1400083ec:	int3   
   1400083ed:	int3   
   1400083ee:	int3   
   1400083ef:	int3   
   1400083f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400083f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400083fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400083ff:	push   rdi
   140008400:	sub    rsp,0x20
   140008404:	mov    rsi,QWORD PTR [rcx+0x18]
   140008408:	lea    rbp,[rcx+0x8]
   14000840c:	jmp    0x14000842e
   14000840e:	mov    rdi,rsi
   140008411:	mov    rsi,QWORD PTR [rsi+0x10]
   140008415:	mov    rax,QWORD PTR [rdi]
   140008418:	mov    rbx,QWORD PTR [rax]
   14000841b:	mov    rcx,rbx
   14000841e:	call   QWORD PTR [rip+0x1ffc]        # 0x14000a420
   140008424:	mov    edx,0x1
   140008429:	mov    rcx,rdi
   14000842c:	call   rbx
   14000842e:	cmp    rsi,rbp
   140008431:	jne    0x14000840e
   140008433:	mov    rcx,rbp
   140008436:	mov    rbx,QWORD PTR [rsp+0x30]
   14000843b:	mov    rbp,QWORD PTR [rsp+0x38]
   140008440:	mov    rsi,QWORD PTR [rsp+0x40]
   140008445:	add    rsp,0x20
   140008449:	pop    rdi
   14000844a:	jmp    0x140008518
   14000844f:	int3   
   140008450:	int3   
   140008451:	int3   
   140008452:	int3   
   140008453:	int3   
   140008454:	int3   
   140008455:	int3   
   140008456:	int3   
   140008457:	int3   
   140008458:	rex push rbx
   14000845a:	sub    rsp,0x20
   14000845e:	mov    DWORD PTR [rip+0x51b8],0x74697263        # 0x14000d620
   140008468:	lea    rcx,[rip+0x51b9]        # 0x14000d628
   14000846f:	xor    ebx,ebx
   140008471:	mov    DWORD PTR [rip+0x51dd],0x80004005        # 0x14000d658
   14000847b:	mov    DWORD PTR [rip+0x51cf],ebx        # 0x14000d650
   140008481:	mov    edx,0x80000000
   140008486:	mov    DWORD PTR [rip+0x51c8],ebx        # 0x14000d654
   14000848c:	mov    DWORD PTR [rip+0x51c2],ebx        # 0x14000d654
   140008492:	mov    DWORD PTR [rip+0x51b8],ebx        # 0x14000d650
   140008498:	call   QWORD PTR [rip+0x1bd2]        # 0x14000a070
   14000849e:	test   eax,eax
   1400084a0:	jne    0x1400084c1
   1400084a2:	call   QWORD PTR [rip+0x1c50]        # 0x14000a0f8
   1400084a8:	test   eax,eax
   1400084aa:	jne    0x1400084b3
   1400084ac:	mov    ebx,0x80004005
   1400084b1:	jmp    0x1400084c1
   1400084b3:	movzx  ebx,ax
   1400084b6:	or     ebx,0x80070000
   1400084bc:	test   eax,eax
   1400084be:	cmovle ebx,eax
   1400084c1:	mov    DWORD PTR [rip+0x5191],ebx        # 0x14000d658
   1400084c7:	lea    rax,[rip+0x5152]        # 0x14000d620
   1400084ce:	add    rsp,0x20
   1400084d2:	pop    rbx
   1400084d3:	ret    
   1400084d4:	int3   
   1400084d5:	int3   
   1400084d6:	int3   
   1400084d7:	int3   
   1400084d8:	int3   
   1400084d9:	int3   
   1400084da:	int3   
   1400084db:	int3   
   1400084dc:	int3   
   1400084dd:	int3   
   1400084de:	int3   
   1400084df:	int3   
   1400084e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400084e5:	push   rdi
   1400084e6:	sub    rsp,0x20
   1400084ea:	mov    ebx,edx
   1400084ec:	mov    rdi,rcx
   1400084ef:	call   0x140008518
   1400084f4:	test   bl,0x1
   1400084f7:	je     0x140008501
   1400084f9:	mov    rcx,rdi
   1400084fc:	call   0x140008558
   140008501:	mov    rax,rdi
   140008504:	mov    rbx,QWORD PTR [rsp+0x30]
   140008509:	add    rsp,0x20
   14000850d:	pop    rdi
   14000850e:	ret    
   14000850f:	int3   
   140008510:	int3   
   140008511:	int3   
   140008512:	int3   
   140008513:	int3   
   140008514:	int3   
   140008515:	int3   
   140008516:	int3   
   140008517:	int3   
   140008518:	mov    rdx,rcx
   14000851b:	lea    rax,[rip+0x24ce]        # 0x14000a9f0
   140008522:	mov    QWORD PTR [rcx],rax
   140008525:	mov    rcx,QWORD PTR [rcx+0x10]
   140008529:	cmp    rcx,rdx
   14000852c:	je     0x14000854f
   14000852e:	mov    rax,QWORD PTR [rdx+0x18]
   140008532:	cmp    rax,rdx
   140008535:	je     0x14000854f
   140008537:	mov    QWORD PTR [rcx+0x18],rax
   14000853b:	mov    rcx,QWORD PTR [rdx+0x18]
   14000853f:	mov    rax,QWORD PTR [rdx+0x10]
   140008543:	mov    QWORD PTR [rcx+0x10],rax
   140008547:	mov    QWORD PTR [rdx+0x10],rdx
   14000854b:	mov    QWORD PTR [rdx+0x18],rdx
   14000854f:	ret    
   140008550:	int3   
   140008551:	int3   
   140008552:	int3   
   140008553:	int3   
   140008554:	int3   
   140008555:	int3   
   140008556:	int3   
   140008557:	int3   
   140008558:	jmp    0x1400089cc
   14000855d:	int3   
   14000855e:	int3   
   14000855f:	int3   
   140008560:	int3   
   140008561:	int3   
   140008562:	int3   
   140008563:	int3   
   140008564:	mov    QWORD PTR [rsp+0x8],rbx
   140008569:	push   rdi
   14000856a:	sub    rsp,0x20
   14000856e:	mov    rdi,rcx
   140008571:	jmp    0x140008582
   140008573:	mov    rcx,rdi
   140008576:	call   0x1400089e4
   14000857b:	test   eax,eax
   14000857d:	je     0x14000858f
   14000857f:	mov    rcx,rdi
   140008582:	call   0x1400089d8
   140008587:	mov    rbx,rax
   14000858a:	test   rax,rax
   14000858d:	je     0x140008573
   14000858f:	mov    rax,rbx
   140008592:	mov    rbx,QWORD PTR [rsp+0x30]
   140008597:	add    rsp,0x20
   14000859b:	pop    rdi
   14000859c:	ret    
   14000859d:	int3   
   14000859e:	int3   
   14000859f:	int3   
   1400085a0:	int3   
   1400085a1:	int3   
   1400085a2:	int3   
   1400085a3:	int3   
   1400085a4:	int3   
   1400085a5:	int3   
   1400085a6:	int3   
   1400085a7:	int3   
   1400085a8:	int3   
   1400085a9:	int3   
   1400085aa:	int3   
   1400085ab:	int3   
   1400085ac:	int3   
   1400085ad:	int3   
   1400085ae:	int3   
   1400085af:	int3   
   1400085b0:	sub    rsp,0x28
   1400085b4:	mov    eax,0x5a4d
   1400085b9:	cmp    WORD PTR [rip+0xffffffffffff7a40],ax        # 0x140000000
   1400085c0:	je     0x1400085c6
   1400085c2:	xor    eax,eax
   1400085c4:	jmp    0x140008615
   1400085c6:	movsxd rcx,DWORD PTR [rip+0xffffffffffff7a6f]        # 0x14000003c
   1400085cd:	lea    rax,[rip+0xffffffffffff7a2c]        # 0x140000000
   1400085d4:	add    rcx,rax
   1400085d7:	cmp    DWORD PTR [rcx],0x4550
   1400085dd:	jne    0x1400085c2
   1400085df:	movzx  eax,WORD PTR [rcx+0x18]
   1400085e3:	cmp    eax,0x10b
   1400085e8:	je     0x140008604
   1400085ea:	cmp    eax,0x20b
   1400085ef:	jne    0x1400085c2
   1400085f1:	xor    eax,eax
   1400085f3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400085fa:	jbe    0x140008615
   1400085fc:	cmp    DWORD PTR [rcx+0xf8],eax
   140008602:	jmp    0x140008612
   140008604:	xor    eax,eax
   140008606:	cmp    DWORD PTR [rcx+0x74],0xe
   14000860a:	jbe    0x140008615
   14000860c:	cmp    DWORD PTR [rcx+0xe8],eax
   140008612:	setne  al
   140008615:	mov    ecx,0x2
   14000861a:	mov    DWORD PTR [rip+0x4a40],eax        # 0x14000d060
   140008620:	call   0x140008ab8
   140008625:	mov    ecx,eax
   140008627:	call   QWORD PTR [rip+0x1d3b]        # 0x14000a368
   14000862d:	mov    rcx,QWORD PTR [rip+0x1d74]        # 0x14000a3a8
   140008634:	or     rax,0xffffffffffffffff
   140008638:	mov    QWORD PTR [rip+0x5021],rax        # 0x14000d660
   14000863f:	mov    QWORD PTR [rip+0x5022],rax        # 0x14000d668
   140008646:	mov    eax,DWORD PTR [rip+0x4a28]        # 0x14000d074
   14000864c:	mov    DWORD PTR [rcx],eax
   14000864e:	mov    rcx,QWORD PTR [rip+0x1d5b]        # 0x14000a3b0
   140008655:	mov    eax,DWORD PTR [rip+0x4a0d]        # 0x14000d068
   14000865b:	mov    DWORD PTR [rcx],eax
   14000865d:	call   0x140002190
   140008662:	cmp    DWORD PTR [rip+0x4997],0x0        # 0x14000d000
   140008669:	jne    0x140008678
   14000866b:	lea    rcx,[rip+0xffffffffffff9b1e]        # 0x140002190
   140008672:	call   QWORD PTR [rip+0x1d10]        # 0x14000a388
   140008678:	xor    eax,eax
   14000867a:	add    rsp,0x28
   14000867e:	ret    
   14000867f:	int3   
   140008680:	int3   
   140008681:	int3   
   140008682:	int3   
   140008683:	int3   
   140008684:	int3   
   140008685:	int3   
   140008686:	int3   
   140008687:	int3   
   140008688:	int3   
   140008689:	int3   
   14000868a:	int3   
   14000868b:	int3   
   14000868c:	int3   
   14000868d:	int3   
   14000868e:	int3   
   14000868f:	int3   
   140008690:	sub    rsp,0x38
   140008694:	mov    eax,DWORD PTR [rip+0x49d6]        # 0x14000d070
   14000869a:	lea    r8,[rip+0x49b7]        # 0x14000d058
   1400086a1:	mov    r9d,DWORD PTR [rip+0x49c4]        # 0x14000d06c
   1400086a8:	lea    rdx,[rip+0x49a1]        # 0x14000d050
   1400086af:	mov    DWORD PTR [rip+0x49af],eax        # 0x14000d064
   1400086b5:	lea    rcx,[rip+0x498c]        # 0x14000d048
   1400086bc:	lea    rax,[rip+0x49a1]        # 0x14000d064
   1400086c3:	mov    QWORD PTR [rsp+0x20],rax
   1400086c8:	call   QWORD PTR [rip+0x1c92]        # 0x14000a360
   1400086ce:	mov    DWORD PTR [rip+0x4978],eax        # 0x14000d04c
   1400086d4:	add    rsp,0x38
   1400086d8:	ret    
   1400086d9:	int3   
   1400086da:	int3   
   1400086db:	int3   
   1400086dc:	int3   
   1400086dd:	int3   
   1400086de:	int3   
   1400086df:	int3   
   1400086e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400086e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400086ea:	mov    QWORD PTR [rsp+0x18],rdi
   1400086ef:	push   r12
   1400086f1:	push   r14
   1400086f3:	push   r15
   1400086f5:	sub    rsp,0xb0
   1400086fc:	xor    r15d,r15d
   1400086ff:	mov    DWORD PTR [rsp+0x20],r15d
   140008704:	lea    rcx,[rsp+0x40]
   140008709:	call   QWORD PTR [rip+0x19d1]        # 0x14000a0e0
   14000870f:	nop
   140008710:	mov    rax,QWORD PTR gs:0x30
   140008719:	mov    rbx,QWORD PTR [rax+0x8]
   14000871d:	mov    r14d,r15d
   140008720:	xor    eax,eax
   140008722:	lock cmpxchg QWORD PTR [rip+0x4f45],rbx        # 0x14000d670
   14000872b:	je     0x140008749
   14000872d:	cmp    rax,rbx
   140008730:	jne    0x14000873c
   140008732:	mov    edi,0x1
   140008737:	mov    r14d,edi
   14000873a:	jmp    0x14000874e
   14000873c:	mov    ecx,0x3e8
   140008741:	call   QWORD PTR [rip+0x19a1]        # 0x14000a0e8
   140008747:	jmp    0x140008720
   140008749:	mov    edi,0x1
   14000874e:	mov    eax,DWORD PTR [rip+0x4f24]        # 0x14000d678
   140008754:	cmp    eax,edi
   140008756:	jne    0x140008766
   140008758:	mov    esi,0x1f
   14000875d:	mov    ecx,esi
   14000875f:	call   0x140008b04
   140008764:	jmp    0x1400087d7
   140008766:	mov    eax,DWORD PTR [rip+0x4f0c]        # 0x14000d678
   14000876c:	test   eax,eax
   14000876e:	jne    0x1400087cc
   140008770:	mov    DWORD PTR [rip+0x4f02],edi        # 0x14000d678
   140008776:	lea    r12,[rip+0x1cfb]        # 0x14000a478
   14000877d:	lea    rbx,[rip+0x1cdc]        # 0x14000a460
   140008784:	mov    QWORD PTR [rsp+0x30],rbx
   140008789:	mov    eax,r15d
   14000878c:	mov    DWORD PTR [rsp+0x24],eax
   140008790:	cmp    rbx,r12
   140008793:	jae    0x1400087be
   140008795:	test   eax,eax
   140008797:	jne    0x1400087c2
   140008799:	mov    rsi,QWORD PTR [rbx]
   14000879c:	test   rsi,rsi
   14000879f:	je     0x1400087b3
   1400087a1:	mov    rcx,rsi
   1400087a4:	mov    rax,QWORD PTR [rip+0x1c75]        # 0x14000a420
   1400087ab:	call   rax
   1400087ad:	call   rsi
   1400087af:	mov    DWORD PTR [rsp+0x24],eax
   1400087b3:	add    rbx,0x8
   1400087b7:	mov    QWORD PTR [rsp+0x30],rbx
   1400087bc:	jmp    0x140008790
   1400087be:	test   eax,eax
   1400087c0:	je     0x1400087d2
   1400087c2:	mov    eax,0xff
   1400087c7:	jmp    0x140008933
   1400087cc:	mov    DWORD PTR [rip+0x4872],edi        # 0x14000d044
   1400087d2:	mov    esi,0x1f
   1400087d7:	mov    eax,DWORD PTR [rip+0x4e9b]        # 0x14000d678
   1400087dd:	cmp    eax,edi
   1400087df:	jne    0x1400087fe
   1400087e1:	lea    rdx,[rip+0x1c70]        # 0x14000a458
   1400087e8:	lea    rcx,[rip+0x1c41]        # 0x14000a430
   1400087ef:	call   0x140008cca
   1400087f4:	mov    DWORD PTR [rip+0x4e7a],0x2        # 0x14000d678
   1400087fe:	test   r14d,r14d
   140008801:	jne    0x14000880d
   140008803:	mov    rax,r15
   140008806:	xchg   QWORD PTR [rip+0x4e63],rax        # 0x14000d670
   14000880d:	cmp    QWORD PTR [rip+0x4e6c],r15        # 0x14000d680
   140008814:	je     0x140008844
   140008816:	lea    rcx,[rip+0x4e63]        # 0x14000d680
   14000881d:	call   0x140008b60
   140008822:	test   eax,eax
   140008824:	je     0x140008844
   140008826:	mov    rbx,QWORD PTR [rip+0x4e53]        # 0x14000d680
   14000882d:	mov    rcx,rbx
   140008830:	mov    rax,QWORD PTR [rip+0x1be9]        # 0x14000a420
   140008837:	call   rax
   140008839:	xor    r8d,r8d
   14000883c:	lea    edx,[r8+0x2]
   140008840:	xor    ecx,ecx
   140008842:	call   rbx
   140008844:	mov    rax,QWORD PTR [rip+0x1b55]        # 0x14000a3a0
   14000884b:	mov    rdx,QWORD PTR [rax]
   14000884e:	test   rdx,rdx
   140008851:	jne    0x14000885d
   140008853:	mov    eax,0xff
   140008858:	jmp    0x140008933
   14000885d:	mov    QWORD PTR [rsp+0x28],rdx
   140008862:	mov    ecx,DWORD PTR [rsp+0x20]
   140008866:	cmp    WORD PTR [rdx],0x20
   14000886a:	ja     0x1400088e4
   14000886c:	cmp    WORD PTR [rdx],r15w
   140008870:	je     0x140008876
   140008872:	test   ecx,ecx
   140008874:	jne    0x1400088e4
   140008876:	movzx  eax,WORD PTR [rdx]
   140008879:	sub    ax,di
   14000887c:	cmp    ax,si
   14000887f:	ja     0x14000888c
   140008881:	add    rdx,0x2
   140008885:	mov    QWORD PTR [rsp+0x28],rdx
   14000888a:	jmp    0x140008876
   14000888c:	mov    ecx,DWORD PTR [rsp+0x7c]
   140008890:	movzx  eax,WORD PTR [rsp+0x80]
   140008898:	mov    r9d,0xa
   14000889e:	and    cl,dil
   1400088a1:	cmovne r9d,eax
   1400088a5:	mov    r8,rdx
   1400088a8:	xor    edx,edx
   1400088aa:	lea    rcx,[rip+0xffffffffffff774f]        # 0x140000000
   1400088b1:	call   0x1400010e4
   1400088b6:	mov    DWORD PTR [rip+0x4784],eax        # 0x14000d040
   1400088bc:	cmp    DWORD PTR [rip+0x479d],r15d        # 0x14000d060
   1400088c3:	jne    0x1400088cd
   1400088c5:	mov    ecx,eax
   1400088c7:	call   QWORD PTR [rip+0x1aa3]        # 0x14000a370
   1400088cd:	cmp    DWORD PTR [rip+0x4770],r15d        # 0x14000d044
   1400088d4:	jne    0x1400088e2
   1400088d6:	call   QWORD PTR [rip+0x1aa4]        # 0x14000a380
   1400088dc:	mov    eax,DWORD PTR [rip+0x475e]        # 0x14000d040
   1400088e2:	jmp    0x140008933
   1400088e4:	cmp    WORD PTR [rdx],0x22
   1400088e8:	jne    0x1400088f8
   1400088ea:	mov    eax,r15d
   1400088ed:	test   ecx,ecx
   1400088ef:	sete   al
   1400088f2:	mov    ecx,eax
   1400088f4:	mov    DWORD PTR [rsp+0x20],eax
   1400088f8:	add    rdx,0x2
   1400088fc:	mov    QWORD PTR [rsp+0x28],rdx
   140008901:	jmp    0x140008866
   140008906:	mov    DWORD PTR [rip+0x4734],eax        # 0x14000d040
   14000890c:	cmp    DWORD PTR [rip+0x474d],0x0        # 0x14000d060
   140008913:	jne    0x14000891e
   140008915:	mov    ecx,eax
   140008917:	call   QWORD PTR [rip+0x1a5b]        # 0x14000a378
   14000891d:	int3   
   14000891e:	cmp    DWORD PTR [rip+0x471f],0x0        # 0x14000d044
   140008925:	jne    0x140008933
   140008927:	call   QWORD PTR [rip+0x1a53]        # 0x14000a380
   14000892d:	mov    eax,DWORD PTR [rip+0x470d]        # 0x14000d040
   140008933:	lea    r11,[rsp+0xb0]
   14000893b:	mov    rbx,QWORD PTR [r11+0x20]
   14000893f:	mov    rsi,QWORD PTR [r11+0x28]
   140008943:	mov    rdi,QWORD PTR [r11+0x30]
   140008947:	mov    rsp,r11
   14000894a:	pop    r15
   14000894c:	pop    r14
   14000894e:	pop    r12
   140008950:	ret    
   140008951:	int3   
   140008952:	int3   
   140008953:	int3   
   140008954:	int3   
   140008955:	int3   
   140008956:	int3   
   140008957:	int3   
   140008958:	int3   
   140008959:	int3   
   14000895a:	int3   
   14000895b:	int3   
   14000895c:	int3   
   14000895d:	int3   
   14000895e:	int3   
   14000895f:	int3   
   140008960:	sub    rsp,0x28
   140008964:	call   0x140008bf4
   140008969:	add    rsp,0x28
   14000896d:	jmp    0x1400086e0
   140008972:	int3   
   140008973:	int3   
   140008974:	int3   
   140008975:	int3   
   140008976:	int3   
   140008977:	int3   
   140008978:	int3   
   140008979:	int3   
   14000897a:	int3   
   14000897b:	int3   
   14000897c:	int3   
   14000897d:	int3   
   14000897e:	int3   
   14000897f:	int3   
   140008980:	int3   
   140008981:	int3   
   140008982:	int3   
   140008983:	int3   
   140008984:	int3   
   140008985:	int3   
   140008986:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008990:	cmp    rcx,QWORD PTR [rip+0x4671]        # 0x14000d008
   140008997:	jne    0x1400089a9
   140008999:	rol    rcx,0x10
   14000899d:	test   cx,0xffff
   1400089a2:	jne    0x1400089a5
   1400089a4:	ret    
   1400089a5:	ror    rcx,0x10
   1400089a9:	jmp    0x140008e00
   1400089ae:	int3   
   1400089af:	int3   
   1400089b0:	int3   
   1400089b1:	int3   
   1400089b2:	int3   
   1400089b3:	int3   
   1400089b4:	int3   
   1400089b5:	int3   
   1400089b6:	int3   
   1400089b7:	int3   
   1400089b8:	int3   
   1400089b9:	int3   
   1400089ba:	int3   
   1400089bb:	int3   
   1400089bc:	int3   
   1400089bd:	int3   
   1400089be:	int3   
   1400089bf:	int3   
   1400089c0:	jmp    QWORD PTR [rip+0x1942]        # 0x14000a308
   1400089c6:	int3   
   1400089c7:	int3   
   1400089c8:	int3   
   1400089c9:	int3   
   1400089ca:	int3   
   1400089cb:	int3   
   1400089cc:	jmp    QWORD PTR [rip+0x1966]        # 0x14000a338
   1400089d2:	int3   
   1400089d3:	int3   
   1400089d4:	int3   
   1400089d5:	int3   
   1400089d6:	int3   
   1400089d7:	int3   
   1400089d8:	jmp    QWORD PTR [rip+0x1962]        # 0x14000a340
   1400089de:	int3   
   1400089df:	int3   
   1400089e0:	int3   
   1400089e1:	int3   
   1400089e2:	int3   
   1400089e3:	int3   
   1400089e4:	jmp    QWORD PTR [rip+0x195e]        # 0x14000a348
   1400089ea:	int3   
   1400089eb:	int3   
   1400089ec:	int3   
   1400089ed:	int3   
   1400089ee:	int3   
   1400089ef:	int3   
   1400089f0:	sub    rsp,0x28
   1400089f4:	mov    rax,QWORD PTR [rcx]
   1400089f7:	cmp    DWORD PTR [rax],0xe06d7363
   1400089fd:	jne    0x140008a22
   1400089ff:	cmp    DWORD PTR [rax+0x18],0x4
   140008a03:	jne    0x140008a22
   140008a05:	mov    ecx,DWORD PTR [rax+0x20]
   140008a08:	lea    eax,[rcx-0x19930520]
   140008a0e:	cmp    eax,0x2
   140008a11:	jbe    0x140008a1b
   140008a13:	cmp    ecx,0x1994000
   140008a19:	jne    0x140008a22
   140008a1b:	call   QWORD PTR [rip+0x1997]        # 0x14000a3b8
   140008a21:	int3   
   140008a22:	xor    eax,eax
   140008a24:	add    rsp,0x28
   140008a28:	ret    
   140008a29:	int3   
   140008a2a:	int3   
   140008a2b:	int3   
   140008a2c:	int3   
   140008a2d:	int3   
   140008a2e:	int3   
   140008a2f:	int3   
   140008a30:	sub    rsp,0x28
   140008a34:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400089f0
   140008a3b:	call   QWORD PTR [rip+0x1697]        # 0x14000a0d8
   140008a41:	xor    eax,eax
   140008a43:	add    rsp,0x28
   140008a47:	ret    
   140008a48:	int3   
   140008a49:	int3   
   140008a4a:	int3   
   140008a4b:	int3   
   140008a4c:	int3   
   140008a4d:	int3   
   140008a4e:	jmp    QWORD PTR [rip+0x18ac]        # 0x14000a300
   140008a54:	int3   
   140008a55:	int3   
   140008a56:	int3   
   140008a57:	int3   
   140008a58:	int3   
   140008a59:	int3   
   140008a5a:	int3   
   140008a5b:	int3   
   140008a5c:	sub    rsp,0x18
   140008a60:	xor    edx,edx
   140008a62:	lea    rax,[rcx-0x1]
   140008a66:	cmp    rax,0xfffffffffffffffd
   140008a6a:	ja     0x140008aa8
   140008a6c:	mov    eax,0x5a4d
   140008a71:	cmp    WORD PTR [rcx],ax
   140008a74:	jne    0x140008aa0
   140008a76:	cmp    DWORD PTR [rcx+0x3c],edx
   140008a79:	jl     0x140008aa0
   140008a7b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140008a82:	jae    0x140008aa0
   140008a84:	movsxd rax,DWORD PTR [rcx+0x3c]
   140008a88:	add    rax,rcx
   140008a8b:	mov    QWORD PTR [rsp],rax
   140008a8f:	cmp    DWORD PTR [rax],0x4550
   140008a95:	cmovne rax,rdx
   140008a99:	mov    rdx,rax
   140008a9c:	mov    QWORD PTR [rsp],rax
   140008aa0:	jmp    0x140008aa8
   140008aa2:	xor    edx,edx
   140008aa4:	mov    QWORD PTR [rsp],rdx
   140008aa8:	mov    rax,rdx
   140008aab:	add    rsp,0x18
   140008aaf:	ret    
   140008ab0:	int3   
   140008ab1:	int3   
   140008ab2:	int3   
   140008ab3:	int3   
   140008ab4:	int3   
   140008ab5:	int3   
   140008ab6:	int3   
   140008ab7:	int3   
   140008ab8:	rex push rbx
   140008aba:	sub    rsp,0x20
   140008abe:	mov    ebx,ecx
   140008ac0:	xor    ecx,ecx
   140008ac2:	call   QWORD PTR [rip+0x15f0]        # 0x14000a0b8
   140008ac8:	test   rax,rax
   140008acb:	je     0x140008af5
   140008acd:	mov    rcx,rax
   140008ad0:	call   0x140008a5c
   140008ad5:	test   rax,rax
   140008ad8:	je     0x140008af5
   140008ada:	mov    ecx,0x2
   140008adf:	cmp    WORD PTR [rax+0x5c],cx
   140008ae3:	jne    0x140008ae9
   140008ae5:	mov    eax,ecx
   140008ae7:	jmp    0x140008af7
   140008ae9:	cmp    WORD PTR [rax+0x5c],0x3
   140008aee:	mov    eax,0x1
   140008af3:	je     0x140008af7
   140008af5:	mov    eax,ebx
   140008af7:	add    rsp,0x20
   140008afb:	pop    rbx
   140008afc:	ret    
   140008afd:	int3   
   140008afe:	int3   
   140008aff:	int3   
   140008b00:	int3   
   140008b01:	int3   
   140008b02:	int3   
   140008b03:	int3   
   140008b04:	jmp    QWORD PTR [rip+0x184e]        # 0x14000a358
   140008b0a:	int3   
   140008b0b:	int3   
   140008b0c:	int3   
   140008b0d:	int3   
   140008b0e:	int3   
   140008b0f:	int3   
   140008b10:	movsxd r8,DWORD PTR [rcx+0x3c]
   140008b14:	xor    r9d,r9d
   140008b17:	add    r8,rcx
   140008b1a:	mov    r10,rdx
   140008b1d:	movzx  eax,WORD PTR [r8+0x14]
   140008b22:	movzx  r11d,WORD PTR [r8+0x6]
   140008b27:	add    rax,0x18
   140008b2b:	add    rax,r8
   140008b2e:	test   r11d,r11d
   140008b31:	je     0x140008b51
   140008b33:	mov    edx,DWORD PTR [rax+0xc]
   140008b36:	cmp    r10,rdx
   140008b39:	jb     0x140008b45
   140008b3b:	mov    ecx,DWORD PTR [rax+0x8]
   140008b3e:	add    ecx,edx
   140008b40:	cmp    r10,rcx
   140008b43:	jb     0x140008b53
   140008b45:	inc    r9d
   140008b48:	add    rax,0x28
   140008b4c:	cmp    r9d,r11d
   140008b4f:	jb     0x140008b33
   140008b51:	xor    eax,eax
   140008b53:	ret    
   140008b54:	int3   
   140008b55:	int3   
   140008b56:	int3   
   140008b57:	int3   
   140008b58:	int3   
   140008b59:	int3   
   140008b5a:	int3   
   140008b5b:	int3   
   140008b5c:	int3   
   140008b5d:	int3   
   140008b5e:	int3   
   140008b5f:	int3   
   140008b60:	mov    QWORD PTR [rsp+0x8],rbx
   140008b65:	push   rdi
   140008b66:	sub    rsp,0x20
   140008b6a:	mov    rbx,rcx
   140008b6d:	lea    rdi,[rip+0xffffffffffff748c]        # 0x140000000
   140008b74:	mov    rcx,rdi
   140008b77:	call   0x140008bc0
   140008b7c:	test   eax,eax
   140008b7e:	je     0x140008ba2
   140008b80:	sub    rbx,rdi
   140008b83:	mov    rdx,rbx
   140008b86:	mov    rcx,rdi
   140008b89:	call   0x140008b10
   140008b8e:	test   rax,rax
   140008b91:	je     0x140008ba2
   140008b93:	mov    eax,DWORD PTR [rax+0x24]
   140008b96:	shr    eax,0x1f
   140008b99:	not    eax
   140008b9b:	and    eax,0x1
   140008b9e:	jmp    0x140008ba2
   140008ba0:	xor    eax,eax
   140008ba2:	mov    rbx,QWORD PTR [rsp+0x30]
   140008ba7:	add    rsp,0x20
   140008bab:	pop    rdi
   140008bac:	ret    
   140008bad:	int3   
   140008bae:	int3   
   140008baf:	int3   
   140008bb0:	int3   
   140008bb1:	int3   
   140008bb2:	int3   
   140008bb3:	int3   
   140008bb4:	int3   
   140008bb5:	int3   
   140008bb6:	int3   
   140008bb7:	int3   
   140008bb8:	int3   
   140008bb9:	int3   
   140008bba:	int3   
   140008bbb:	int3   
   140008bbc:	int3   
   140008bbd:	int3   
   140008bbe:	int3   
   140008bbf:	int3   
   140008bc0:	mov    rax,rcx
   140008bc3:	mov    ecx,0x5a4d
   140008bc8:	cmp    WORD PTR [rax],cx
   140008bcb:	je     0x140008bd0
   140008bcd:	xor    eax,eax
   140008bcf:	ret    
   140008bd0:	movsxd rcx,DWORD PTR [rax+0x3c]
   140008bd4:	add    rcx,rax
   140008bd7:	xor    eax,eax
   140008bd9:	cmp    DWORD PTR [rcx],0x4550
   140008bdf:	jne    0x140008bed
   140008be1:	mov    edx,0x20b
   140008be6:	cmp    WORD PTR [rcx+0x18],dx
   140008bea:	sete   al
   140008bed:	ret    
   140008bee:	int3   
   140008bef:	int3   
   140008bf0:	int3   
   140008bf1:	int3   
   140008bf2:	int3   
   140008bf3:	int3   
   140008bf4:	mov    QWORD PTR [rsp+0x20],rbx
   140008bf9:	push   rbp
   140008bfa:	mov    rbp,rsp
   140008bfd:	sub    rsp,0x20
   140008c01:	and    QWORD PTR [rbp+0x18],0x0
   140008c06:	movabs rbx,0x2b992ddfa232
   140008c10:	mov    rax,QWORD PTR [rip+0x43f1]        # 0x14000d008
   140008c17:	cmp    rax,rbx
   140008c1a:	jne    0x140008caf
   140008c20:	lea    rcx,[rbp+0x18]
   140008c24:	call   QWORD PTR [rip+0x146e]        # 0x14000a098
   140008c2a:	mov    rax,QWORD PTR [rbp+0x18]
   140008c2e:	mov    QWORD PTR [rbp+0x10],rax
   140008c32:	call   QWORD PTR [rip+0x1470]        # 0x14000a0a8
   140008c38:	mov    eax,eax
   140008c3a:	xor    QWORD PTR [rbp+0x10],rax
   140008c3e:	call   QWORD PTR [rip+0x145c]        # 0x14000a0a0
   140008c44:	mov    eax,eax
   140008c46:	xor    QWORD PTR [rbp+0x10],rax
   140008c4a:	call   QWORD PTR [rip+0x1440]        # 0x14000a090
   140008c50:	mov    eax,eax
   140008c52:	shl    rax,0x18
   140008c56:	xor    QWORD PTR [rbp+0x10],rax
   140008c5a:	call   QWORD PTR [rip+0x1430]        # 0x14000a090
   140008c60:	mov    eax,eax
   140008c62:	lea    rcx,[rbp+0x10]
   140008c66:	xor    rax,QWORD PTR [rbp+0x10]
   140008c6a:	xor    rax,rcx
   140008c6d:	lea    rcx,[rbp+0x20]
   140008c71:	mov    QWORD PTR [rbp+0x10],rax
   140008c75:	call   QWORD PTR [rip+0x1435]        # 0x14000a0b0
   140008c7b:	mov    eax,DWORD PTR [rbp+0x20]
   140008c7e:	movabs rcx,0xffffffffffff
   140008c88:	shl    rax,0x20
   140008c8c:	xor    rax,QWORD PTR [rbp+0x20]
   140008c90:	xor    rax,QWORD PTR [rbp+0x10]
   140008c94:	and    rax,rcx
   140008c97:	movabs rcx,0x2b992ddfa233
   140008ca1:	cmp    rax,rbx
   140008ca4:	cmove  rax,rcx
   140008ca8:	mov    QWORD PTR [rip+0x4359],rax        # 0x14000d008
   140008caf:	mov    rbx,QWORD PTR [rsp+0x48]
   140008cb4:	not    rax
   140008cb7:	mov    QWORD PTR [rip+0x4352],rax        # 0x14000d010
   140008cbe:	add    rsp,0x20
   140008cc2:	pop    rbp
   140008cc3:	ret    
   140008cc4:	int3   
   140008cc5:	int3   
   140008cc6:	int3   
   140008cc7:	int3   
   140008cc8:	int3   
   140008cc9:	int3   
   140008cca:	jmp    QWORD PTR [rip+0x16c0]        # 0x14000a390
   140008cd0:	int3   
   140008cd1:	int3   
   140008cd2:	int3   
   140008cd3:	int3   
   140008cd4:	int3   
   140008cd5:	int3   
   140008cd6:	jmp    QWORD PTR [rip+0x16bc]        # 0x14000a398
   140008cdc:	int3   
   140008cdd:	int3   
   140008cde:	int3   
   140008cdf:	int3   
   140008ce0:	int3   
   140008ce1:	int3   
   140008ce2:	int3   
   140008ce3:	int3   
   140008ce4:	mov    QWORD PTR [rsp+0x8],rbx
   140008ce9:	push   rdi
   140008cea:	sub    rsp,0x20
   140008cee:	mov    rdi,rcx
   140008cf1:	mov    rax,QWORD PTR [rip+0x4970]        # 0x14000d668
   140008cf8:	mov    QWORD PTR [rsp+0x38],rax
   140008cfd:	cmp    rax,0xffffffffffffffff
   140008d01:	jne    0x140008d1a
   140008d03:	mov    rbx,QWORD PTR [rip+0x15e6]        # 0x14000a2f0
   140008d0a:	mov    rcx,rbx
   140008d0d:	call   QWORD PTR [rip+0x170d]        # 0x14000a420
   140008d13:	mov    rcx,rdi
   140008d16:	call   rbx
   140008d18:	jmp    0x140008d77
   140008d1a:	mov    ecx,0x8
   140008d1f:	call   0x140008f78
   140008d24:	nop
   140008d25:	mov    rax,QWORD PTR [rip+0x493c]        # 0x14000d668
   140008d2c:	mov    QWORD PTR [rsp+0x38],rax
   140008d31:	mov    rax,QWORD PTR [rip+0x4928]        # 0x14000d660
   140008d38:	mov    QWORD PTR [rsp+0x40],rax
   140008d3d:	lea    r8,[rsp+0x40]
   140008d42:	lea    rdx,[rsp+0x38]
   140008d47:	mov    rcx,rdi
   140008d4a:	call   0x140008f90
   140008d4f:	mov    rbx,rax
   140008d52:	mov    rdx,QWORD PTR [rsp+0x38]
   140008d57:	mov    QWORD PTR [rip+0x490a],rdx        # 0x14000d668
   140008d5e:	mov    rdx,QWORD PTR [rsp+0x40]
   140008d63:	mov    QWORD PTR [rip+0x48f6],rdx        # 0x14000d660
   140008d6a:	mov    ecx,0x8
   140008d6f:	call   0x140008f84
   140008d74:	mov    rax,rbx
   140008d77:	mov    rbx,QWORD PTR [rsp+0x30]
   140008d7c:	add    rsp,0x20
   140008d80:	pop    rdi
   140008d81:	ret    
   140008d82:	int3   
   140008d83:	int3   
   140008d84:	int3   
   140008d85:	int3   
   140008d86:	int3   
   140008d87:	int3   
   140008d88:	sub    rsp,0x28
   140008d8c:	call   0x140008ce4
   140008d91:	neg    rax
   140008d94:	sbb    eax,eax
   140008d96:	neg    eax
   140008d98:	dec    eax
   140008d9a:	add    rsp,0x28
   140008d9e:	ret    
   140008d9f:	int3   
   140008da0:	int3   
   140008da1:	int3   
   140008da2:	int3   
   140008da3:	int3   
   140008da4:	int3   
   140008da5:	int3   
   140008da6:	int3   
   140008da7:	int3   
   140008da8:	int3   
   140008da9:	int3   
   140008daa:	int3   
   140008dab:	int3   
   140008dac:	int3   
   140008dad:	int3   
   140008dae:	int3   
   140008daf:	int3   
   140008db0:	ret    0x0
   140008db3:	int3   
   140008db4:	int3   
   140008db5:	int3   
   140008db6:	int3   
   140008db7:	int3   
   140008db8:	int3   
   140008db9:	int3   
   140008dba:	int3   
   140008dbb:	int3   
   140008dbc:	rex push rbx
   140008dbe:	sub    rsp,0x20
   140008dc2:	mov    rbx,rcx
   140008dc5:	xor    ecx,ecx
   140008dc7:	call   QWORD PTR [rip+0x130b]        # 0x14000a0d8
   140008dcd:	mov    rcx,rbx
   140008dd0:	call   QWORD PTR [rip+0x12b2]        # 0x14000a088
   140008dd6:	call   QWORD PTR [rip+0x1394]        # 0x14000a170
   140008ddc:	mov    rcx,rax
   140008ddf:	mov    edx,0xc0000409
   140008de4:	add    rsp,0x20
   140008de8:	pop    rbx
   140008de9:	rex.W jmp QWORD PTR [rip+0x1290]        # 0x14000a080
   140008df0:	int3   
   140008df1:	int3   
   140008df2:	int3   
   140008df3:	int3   
   140008df4:	int3   
   140008df5:	int3   
   140008df6:	int3   
   140008df7:	int3   
   140008df8:	int3   
   140008df9:	int3   
   140008dfa:	int3   
   140008dfb:	int3   
   140008dfc:	int3   
   140008dfd:	int3   
   140008dfe:	int3   
   140008dff:	int3   
   140008e00:	mov    QWORD PTR [rsp+0x8],rcx
   140008e05:	sub    rsp,0x88
   140008e0c:	lea    rcx,[rip+0x430d]        # 0x14000d120
   140008e13:	call   QWORD PTR [rip+0x15bf]        # 0x14000a3d8
   140008e19:	mov    rax,QWORD PTR [rip+0x43f8]        # 0x14000d218
   140008e20:	mov    QWORD PTR [rsp+0x48],rax
   140008e25:	xor    r8d,r8d
   140008e28:	lea    rdx,[rsp+0x50]
   140008e2d:	mov    rcx,QWORD PTR [rsp+0x48]
   140008e32:	call   QWORD PTR [rip+0x15a8]        # 0x14000a3e0
   140008e38:	mov    QWORD PTR [rsp+0x40],rax
   140008e3d:	cmp    QWORD PTR [rsp+0x40],0x0
   140008e43:	je     0x140008e87
   140008e45:	mov    QWORD PTR [rsp+0x38],0x0
   140008e4e:	lea    rax,[rsp+0x58]
   140008e53:	mov    QWORD PTR [rsp+0x30],rax
   140008e58:	lea    rax,[rsp+0x60]
   140008e5d:	mov    QWORD PTR [rsp+0x28],rax
   140008e62:	lea    rax,[rip+0x42b7]        # 0x14000d120
   140008e69:	mov    QWORD PTR [rsp+0x20],rax
   140008e6e:	mov    r9,QWORD PTR [rsp+0x40]
   140008e73:	mov    r8,QWORD PTR [rsp+0x48]
   140008e78:	mov    rdx,QWORD PTR [rsp+0x50]
   140008e7d:	xor    ecx,ecx
   140008e7f:	call   QWORD PTR [rip+0x1563]        # 0x14000a3e8
   140008e85:	jmp    0x140008eaa
   140008e87:	mov    rax,QWORD PTR [rip+0x432a]        # 0x14000d1b8
   140008e8e:	mov    rax,QWORD PTR [rax]
   140008e91:	mov    QWORD PTR [rip+0x4380],rax        # 0x14000d218
   140008e98:	mov    rax,QWORD PTR [rip+0x4319]        # 0x14000d1b8
   140008e9f:	add    rax,0x8
   140008ea3:	mov    QWORD PTR [rip+0x430e],rax        # 0x14000d1b8
   140008eaa:	mov    rax,QWORD PTR [rip+0x4367]        # 0x14000d218
   140008eb1:	mov    QWORD PTR [rip+0x41d8],rax        # 0x14000d090
   140008eb8:	mov    rax,QWORD PTR [rsp+0x90]
   140008ec0:	mov    QWORD PTR [rip+0x42d9],rax        # 0x14000d1a0
   140008ec7:	mov    DWORD PTR [rip+0x41af],0xc0000409        # 0x14000d080
   140008ed1:	mov    DWORD PTR [rip+0x41a9],0x1        # 0x14000d084
   140008edb:	mov    DWORD PTR [rip+0x41b3],0x3        # 0x14000d098
   140008ee5:	mov    eax,0x8
   140008eea:	imul   rax,rax,0x0
   140008eee:	lea    rcx,[rip+0x41ab]        # 0x14000d0a0
   140008ef5:	mov    QWORD PTR [rcx+rax*1],0x2
   140008efd:	mov    eax,0x8
   140008f02:	imul   rax,rax,0x1
   140008f06:	lea    rcx,[rip+0x4193]        # 0x14000d0a0
   140008f0d:	mov    rdx,QWORD PTR [rip+0x40f4]        # 0x14000d008
   140008f14:	mov    QWORD PTR [rcx+rax*1],rdx
   140008f18:	mov    eax,0x8
   140008f1d:	imul   rax,rax,0x2
   140008f21:	lea    rcx,[rip+0x4178]        # 0x14000d0a0
   140008f28:	mov    rdx,QWORD PTR [rip+0x40e1]        # 0x14000d010
   140008f2f:	mov    QWORD PTR [rcx+rax*1],rdx
   140008f33:	mov    eax,0x8
   140008f38:	imul   rax,rax,0x0
   140008f3c:	mov    rcx,QWORD PTR [rip+0x40c5]        # 0x14000d008
   140008f43:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140008f48:	mov    eax,0x8
   140008f4d:	imul   rax,rax,0x1
   140008f51:	mov    rcx,QWORD PTR [rip+0x40b8]        # 0x14000d010
   140008f58:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140008f5d:	lea    rcx,[rip+0x165c]        # 0x14000a5c0
   140008f64:	call   0x140008dbc
   140008f69:	add    rsp,0x88
   140008f70:	ret    
   140008f71:	int3   
   140008f72:	int3   
   140008f73:	int3   
   140008f74:	int3   
   140008f75:	int3   
   140008f76:	int3   
   140008f77:	int3   
   140008f78:	jmp    QWORD PTR [rip+0x135a]        # 0x14000a2d8
   140008f7e:	int3   
   140008f7f:	int3   
   140008f80:	int3   
   140008f81:	int3   
   140008f82:	int3   
   140008f83:	int3   
   140008f84:	jmp    QWORD PTR [rip+0x1356]        # 0x14000a2e0
   140008f8a:	int3   
   140008f8b:	int3   
   140008f8c:	int3   
   140008f8d:	int3   
   140008f8e:	int3   
   140008f8f:	int3   
   140008f90:	jmp    QWORD PTR [rip+0x1352]        # 0x14000a2e8
   140008f96:	int3   
   140008f97:	int3   
   140008f98:	int3   
   140008f99:	int3   
   140008f9a:	int3   
   140008f9b:	int3   
   140008f9c:	int3   
   140008f9d:	int3   
   140008f9e:	int3   
   140008f9f:	int3   
   140008fa0:	int3   
   140008fa1:	int3   
   140008fa2:	int3   
   140008fa3:	int3   
   140008fa4:	int3   
   140008fa5:	int3   
   140008fa6:	int3   
   140008fa7:	int3   
   140008fa8:	sub    rsp,0x38
   140008fac:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008fb5:	call   0x140008564
   140008fba:	nop
   140008fbb:	jmp    0x140008fc2
   140008fbd:	mov    rax,QWORD PTR [rsp+0x50]
   140008fc2:	add    rsp,0x38
   140008fc6:	ret    
   140008fc7:	int3   
   140008fc8:	int3   
   140008fc9:	int3   
   140008fca:	int3   
   140008fcb:	int3   
   140008fcc:	int3   
   140008fcd:	int3   
   140008fce:	jmp    QWORD PTR [rip+0x12fc]        # 0x14000a2d0
   140008fd4:	int3   
   140008fd5:	int3   
   140008fd6:	int3   
   140008fd7:	int3   
   140008fd8:	int3   
   140008fd9:	int3   
   140008fda:	int3   
   140008fdb:	int3   
   140008fdc:	sub    rsp,0x28
   140008fe0:	mov    r8,QWORD PTR [r9+0x38]
   140008fe4:	mov    rcx,rdx
   140008fe7:	mov    rdx,r9
   140008fea:	call   0x140009000
   140008fef:	mov    eax,0x1
   140008ff4:	add    rsp,0x28
   140008ff8:	ret    
   140008ff9:	int3   
   140008ffa:	int3   
   140008ffb:	int3   
   140008ffc:	int3   
   140008ffd:	int3   
   140008ffe:	int3   
   140008fff:	int3   
   140009000:	rex push rbx
   140009002:	sub    rsp,0x20
   140009006:	mov    r11d,DWORD PTR [r8]
   140009009:	mov    rbx,rdx
   14000900c:	and    r11d,0xfffffff8
   140009010:	mov    r9,rcx
   140009013:	test   BYTE PTR [r8],0x4
   140009017:	mov    r10,rcx
   14000901a:	je     0x14000902f
   14000901c:	mov    eax,DWORD PTR [r8+0x8]
   140009020:	movsxd r10,DWORD PTR [r8+0x4]
   140009024:	neg    eax
   140009026:	add    r10,rcx
   140009029:	movsxd rcx,eax
   14000902c:	and    r10,rcx
   14000902f:	movsxd rax,r11d
   140009032:	mov    rdx,QWORD PTR [rax+r10*1]
   140009036:	mov    rax,QWORD PTR [rbx+0x10]
   14000903a:	mov    ecx,DWORD PTR [rax+0x8]
   14000903d:	add    rcx,QWORD PTR [rbx+0x8]
   140009041:	test   BYTE PTR [rcx+0x3],0xf
   140009045:	je     0x140009053
   140009047:	movzx  eax,BYTE PTR [rcx+0x3]
   14000904b:	and    eax,0xfffffff0
   14000904e:	cdqe   
   140009050:	add    r9,rax
   140009053:	xor    r9,rdx
   140009056:	mov    rcx,r9
   140009059:	add    rsp,0x20
   14000905d:	pop    rbx
   14000905e:	jmp    0x140008990
   140009063:	int3   
   140009064:	int3   
   140009065:	int3   
   140009066:	int3   
   140009067:	int3   
   140009068:	int3   
   140009069:	int3   
   14000906a:	jmp    QWORD PTR [rip+0x1288]        # 0x14000a2f8
   140009070:	int3   
   140009071:	int3   
   140009072:	int3   
   140009073:	int3   
   140009074:	int3   
   140009075:	int3   
   140009076:	jmp    QWORD PTR [rip+0x12d4]        # 0x14000a350
   14000907c:	int3   
   14000907d:	int3   
   14000907e:	int3   
   14000907f:	int3   
   140009080:	int3   
   140009081:	int3   
   140009082:	int3   
   140009083:	int3   
   140009084:	int3   
   140009085:	int3   
   140009086:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009090:	jmp    rax
   140009092:	int3   
   140009093:	int3   
   140009094:	int3   
   140009095:	int3   
   140009096:	int3   
   140009097:	int3   
   140009098:	int3   
   140009099:	int3   
   14000909a:	int3   
   14000909b:	int3   
   14000909c:	int3   
   14000909d:	int3   
   14000909e:	int3   
   14000909f:	int3   
   1400090a0:	int3   
   1400090a1:	int3   
   1400090a2:	int3   
   1400090a3:	int3   
   1400090a4:	int3   
   1400090a5:	int3   
   1400090a6:	rex push rbp
   1400090a8:	sub    rsp,0x20
   1400090ac:	mov    rbp,rdx
   1400090af:	mov    rax,QWORD PTR [rcx]
   1400090b2:	mov    rdx,rcx
   1400090b5:	mov    ecx,DWORD PTR [rax]
   1400090b7:	call   0x140008a4e
   1400090bc:	nop
   1400090bd:	add    rsp,0x20
   1400090c1:	pop    rbp
   1400090c2:	ret    
   1400090c3:	int3   
   1400090c4:	int3   
   1400090c5:	int3   
   1400090c6:	int3   
   1400090c7:	int3   
   1400090c8:	int3   
   1400090c9:	int3   
   1400090ca:	int3   
   1400090cb:	int3   
   1400090cc:	int3   
   1400090cd:	int3   
   1400090ce:	int3   
   1400090cf:	int3   
   1400090d0:	rex push rbp
   1400090d2:	sub    rsp,0x20
   1400090d6:	mov    rbp,rdx
   1400090d9:	mov    rax,QWORD PTR [rcx]
   1400090dc:	xor    ecx,ecx
   1400090de:	cmp    DWORD PTR [rax],0xc0000005
   1400090e4:	sete   cl
   1400090e7:	mov    eax,ecx
   1400090e9:	add    rsp,0x20
   1400090ed:	pop    rbp
   1400090ee:	ret    
   1400090ef:	int3   
   1400090f0:	int3   
   1400090f1:	int3   
   1400090f2:	int3   
   1400090f3:	int3   
   1400090f4:	int3   
   1400090f5:	int3   
   1400090f6:	rex push rbp
   1400090f8:	sub    rsp,0x20
   1400090fc:	mov    rbp,rdx
   1400090ff:	mov    ecx,0x8
   140009104:	call   0x140008f84
   140009109:	nop
   14000910a:	add    rsp,0x20
   14000910e:	pop    rbp
   14000910f:	ret    
   140009110:	int3   
   140009111:	int3   
   140009112:	int3   
   140009113:	int3   
   140009114:	int3   
   140009115:	int3   
   140009116:	int3   
   140009117:	mov    QWORD PTR [rsp+0x10],rdx
   14000911c:	push   rbp
   14000911d:	sub    rsp,0x20
   140009121:	mov    rbp,rdx
   140009124:	and    QWORD PTR [rbp+0x50],0x0
   140009129:	lea    rax,[rip+0xfffffffffffffe8d]        # 0x140008fbd
   140009130:	add    rsp,0x20
   140009134:	pop    rbp
   140009135:	ret    
   140009136:	int3   
   140009137:	int3   
   140009138:	int3   
   140009139:	int3   
   14000913a:	int3   
   14000913b:	int3   
   14000913c:	int3   
   14000913d:	int3   
   14000913e:	int3   
   14000913f:	int3   
   140009140:	rex push rbx
   140009142:	sub    rsp,0x20
   140009146:	mov    rbx,QWORD PTR [rip+0x44cb]        # 0x14000d618
   14000914d:	test   rbx,rbx
   140009150:	je     0x14000916a
   140009152:	mov    rcx,rbx
   140009155:	call   0x1400083f0
   14000915a:	mov    rcx,rbx
   14000915d:	call   0x140008558
   140009162:	and    QWORD PTR [rip+0x44ae],0x0        # 0x14000d618
   14000916a:	add    rsp,0x20
   14000916e:	pop    rbx
   14000916f:	ret    
   140009170:	int3   
   140009171:	int3   
   140009172:	int3   
   140009173:	int3   
   140009174:	int3   
   140009175:	int3   
   140009176:	int3   
   140009177:	int3   
   140009178:	int3   
   140009179:	int3   
   14000917a:	int3   
   14000917b:	int3   
   14000917c:	int3   
   14000917d:	int3   
   14000917e:	int3   
   14000917f:	int3   
   140009180:	sub    rsp,0x28
   140009184:	cmp    DWORD PTR [rip+0x44cd],0x0        # 0x14000d658
   14000918b:	jl     0x1400091a4
   14000918d:	lea    rcx,[rip+0x4494]        # 0x14000d628
   140009194:	call   QWORD PTR [rip+0xede]        # 0x14000a078
   14000919a:	mov    DWORD PTR [rip+0x44b4],0x80004005        # 0x14000d658
   1400091a4:	add    rsp,0x28
   1400091a8:	ret    
   1400091a9:	int3   
   1400091aa:	int3   
   1400091ab:	int3   
   1400091ac:	int3   
   1400091ad:	int3   
   1400091ae:	int3   
   1400091af:	int3   
   1400091b0:	sub    rsp,0x28
   1400091b4:	mov    rcx,QWORD PTR [rip+0x3e6d]        # 0x14000d028
   1400091bb:	lea    rax,[rcx-0x1]
   1400091bf:	cmp    rax,0xfffffffffffffffd
   1400091c3:	ja     0x1400091d3
   1400091c5:	or     QWORD PTR [rip+0x3e5b],0xffffffffffffffff        # 0x14000d028
   1400091cd:	call   QWORD PTR [rip+0x11fd]        # 0x14000a3d0
   1400091d3:	add    rsp,0x28
   1400091d7:	ret    

Disassembly of section .rdata:

000000014000a000 <.rdata>:
   14000a000:	(bad)  
   14000a001:	ret    0x0
   14000a004:	add    BYTE PTR [rax],al
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	jb     0x140009fcc
   14000a00a:	add    BYTE PTR [rax],al
   14000a00c:	add    BYTE PTR [rax],al
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	xchg   dl,al
   14000a012:	add    BYTE PTR [rax],al
   14000a014:	add    BYTE PTR [rax],al
   14000a016:	add    BYTE PTR [rax],al
   14000a018:	xchg   esp,eax
   14000a019:	ret    0x0
   14000a01c:	add    BYTE PTR [rax],al
   14000a01e:	add    BYTE PTR [rax],al
   14000a020:	loopne 0x140009fea
	...
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	push   rdx
   14000a031:	mov    DWORD PTR [rax],0x0
   14000a037:	add    BYTE PTR [rsi-0x39],ch
   14000a03a:	add    BYTE PTR [rax],al
   14000a03c:	add    BYTE PTR [rax],al
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	add    bh,0x0
   14000a043:	add    BYTE PTR [rax],al
   14000a045:	add    BYTE PTR [rax],al
   14000a047:	add    BYTE PTR [rax+0x1],bl
   14000a04a:	add    BYTE PTR [rax],al
   14000a04c:	add    BYTE PTR [rax],al
   14000a04e:	add    BYTE PTR [rax+0x0],al
   14000a054:	add    BYTE PTR [rax],al
   14000a056:	add    BYTE PTR [rax],al
   14000a058:	cli    
   14000a059:	mov    DWORD PTR [rax],0x0
   14000a05f:	add    BYTE PTR [rsi],cl
   14000a061:	enter  0x0,0x0
	...
   14000a06d:	add    BYTE PTR [rax],al
   14000a06f:	add    BYTE PTR [rdx],bh
   14000a071:	retf   0x0
   14000a074:	add    BYTE PTR [rax],al
   14000a076:	add    BYTE PTR [rax],al
   14000a078:	(bad)  
   14000a079:	retf   0x0
   14000a07c:	add    BYTE PTR [rax],al
   14000a07e:	add    BYTE PTR [rax],al
   14000a080:	enter  0xc9,0x0
   14000a084:	add    BYTE PTR [rax],al
   14000a086:	add    BYTE PTR [rax],al
   14000a088:	lods   al,BYTE PTR ds:[rsi]
   14000a089:	leave  
   14000a08a:	add    BYTE PTR [rax],al
   14000a08c:	add    BYTE PTR [rax],al
   14000a08e:	add    BYTE PTR [rax],al
   14000a090:	pushf  
   14000a091:	leave  
   14000a092:	add    BYTE PTR [rax],al
   14000a094:	add    BYTE PTR [rax],al
   14000a096:	add    BYTE PTR [rax],al
   14000a098:	(bad)  
   14000a099:	leave  
   14000a09a:	add    BYTE PTR [rax],al
   14000a09c:	add    BYTE PTR [rax],al
   14000a09e:	add    BYTE PTR [rax],al
   14000a0a0:	ins    BYTE PTR es:[rdi],dx
   14000a0a1:	leave  
   14000a0a2:	add    BYTE PTR [rax],al
   14000a0a4:	add    BYTE PTR [rax],al
   14000a0a6:	add    BYTE PTR [rax],al
   14000a0a8:	push   rsi
   14000a0a9:	leave  
   14000a0aa:	add    BYTE PTR [rax],al
   14000a0ac:	add    BYTE PTR [rax],al
   14000a0ae:	add    BYTE PTR [rax],al
   14000a0b0:	cmp    al,0xc9
   14000a0b2:	add    BYTE PTR [rax],al
   14000a0b4:	add    BYTE PTR [rax],al
   14000a0b6:	add    BYTE PTR [rax],al
   14000a0b8:	sub    cl,cl
   14000a0ba:	add    BYTE PTR [rax],al
   14000a0bc:	add    BYTE PTR [rax],al
   14000a0be:	add    BYTE PTR [rax],al
   14000a0c0:	(bad)  
   14000a0c1:	(bad)  
   14000a0c2:	add    BYTE PTR [rax],al
   14000a0c4:	add    BYTE PTR [rax],al
   14000a0c6:	add    BYTE PTR [rax],al
   14000a0c8:	(bad)  
   14000a0c9:	(bad)  
   14000a0ca:	add    BYTE PTR [rax],al
   14000a0cc:	add    BYTE PTR [rax],al
   14000a0ce:	add    BYTE PTR [rax],al
   14000a0d0:	hlt    
   14000a0d1:	ret    
   14000a0d2:	add    BYTE PTR [rax],al
   14000a0d4:	add    BYTE PTR [rax],al
   14000a0d6:	add    BYTE PTR [rax],al
   14000a0d8:	or     cl,cl
   14000a0da:	add    BYTE PTR [rax],al
   14000a0dc:	add    BYTE PTR [rax],al
   14000a0de:	add    BYTE PTR [rax],al
   14000a0e0:	clc    
   14000a0e1:	enter  0x0,0x0
   14000a0e5:	add    BYTE PTR [rax],al
   14000a0e7:	add    al,dh
   14000a0e9:	enter  0x0,0x0
   14000a0ed:	add    BYTE PTR [rax],al
   14000a0ef:	add    BYTE PTR [rdx+rax*8+0x0],dh
   14000a0f6:	add    BYTE PTR [rax],al
   14000a0f8:	mov    dl,0x0
   14000a0fb:	add    BYTE PTR [rax],al
   14000a0fd:	add    BYTE PTR [rax],al
   14000a0ff:	add    dh,dl
   14000a101:	ret    0x0
   14000a104:	add    BYTE PTR [rax],al
   14000a106:	add    BYTE PTR [rax],al
   14000a108:	in     al,dx
   14000a109:	ret    0x0
   14000a10c:	add    BYTE PTR [rax],al
   14000a10e:	add    BYTE PTR [rax],al
   14000a110:	clc    
   14000a111:	ret    0x0
   14000a114:	add    BYTE PTR [rax],al
   14000a116:	add    BYTE PTR [rax],al
   14000a118:	or     al,bl
   14000a11a:	add    BYTE PTR [rax],al
   14000a11c:	add    BYTE PTR [rax],al
   14000a11e:	add    BYTE PTR [rax],al
   14000a120:	and    bl,al
   14000a122:	add    BYTE PTR [rax],al
   14000a124:	add    BYTE PTR [rax],al
   14000a126:	add    BYTE PTR [rax],al
   14000a128:	loopne 0x14000a0ed
   14000a12a:	add    BYTE PTR [rax],al
   14000a12c:	add    BYTE PTR [rax],al
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	rol    bl,1
   14000a132:	add    BYTE PTR [rax],al
   14000a134:	add    BYTE PTR [rax],al
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	sub    al,0xc3
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	add    BYTE PTR [rax],al
   14000a13e:	add    BYTE PTR [rax],al
   14000a140:	cmp    al,bl
   14000a142:	add    BYTE PTR [rax],al
   14000a144:	add    BYTE PTR [rax],al
   14000a146:	add    BYTE PTR [rax],al
   14000a148:	rex.RX ret 
   14000a14a:	add    BYTE PTR [rax],al
   14000a14c:	add    BYTE PTR [rax],al
   14000a14e:	add    BYTE PTR [rax],al
   14000a150:	push   rsp
   14000a151:	ret    
   14000a152:	add    BYTE PTR [rax],al
   14000a154:	add    BYTE PTR [rax],al
   14000a156:	add    BYTE PTR [rax],al
   14000a158:	fs ret 
   14000a15a:	add    BYTE PTR [rax],al
   14000a15c:	add    BYTE PTR [rax],al
   14000a15e:	add    BYTE PTR [rax],al
   14000a160:	js     0x14000a125
   14000a162:	add    BYTE PTR [rax],al
   14000a164:	add    BYTE PTR [rax],al
   14000a166:	add    BYTE PTR [rax],al
   14000a168:	xchg   bl,al
   14000a16a:	add    BYTE PTR [rax],al
   14000a16c:	add    BYTE PTR [rax],al
   14000a16e:	add    BYTE PTR [rax],al
   14000a170:	pushf  
   14000a171:	ret    
   14000a172:	add    BYTE PTR [rax],al
   14000a174:	add    BYTE PTR [rax],al
   14000a176:	add    BYTE PTR [rax],al
   14000a178:	mov    al,0xc3
   14000a17a:	add    BYTE PTR [rax],al
   14000a17c:	add    BYTE PTR [rax],al
   14000a17e:	add    BYTE PTR [rax],al
   14000a180:	ret    0xc3
	...
   14000a18f:	add    BYTE PTR [rax],cl
   14000a191:	add    BYTE PTR [rax],al
   14000a193:	add    BYTE PTR [rax],al
   14000a195:	add    BYTE PTR [rax],al
   14000a197:	add    BYTE PTR [rdx],0x0
   14000a19a:	add    BYTE PTR [rax],al
   14000a19c:	add    BYTE PTR [rax],al
   14000a19e:	add    BYTE PTR [rax+0x7],al
   14000a1a4:	add    BYTE PTR [rax],al
   14000a1a6:	add    BYTE PTR [rax+0x6],al
   14000a1ac:	add    BYTE PTR [rax],al
   14000a1ae:	add    BYTE PTR [rax+0x9],al
   14000a1b4:	add    BYTE PTR [rax],al
   14000a1b6:	add    BYTE PTR [rax+0x0],al
   14000a1bc:	add    BYTE PTR [rax],al
   14000a1be:	add    BYTE PTR [rax],al
   14000a1c0:	rex.RX enter 0x0,0x0
   14000a1c5:	add    BYTE PTR [rax],al
   14000a1c7:	add    BYTE PTR [rax-0x38],ah
   14000a1ca:	add    BYTE PTR [rax],al
   14000a1cc:	add    BYTE PTR [rax],al
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	jp     0x14000a19a
   14000a1d2:	add    BYTE PTR [rax],al
   14000a1d4:	add    BYTE PTR [rax],al
   14000a1d6:	add    BYTE PTR [rax],al
   14000a1d8:	fwait
   14000a1d9:	add    BYTE PTR [rax],al
   14000a1db:	add    BYTE PTR [rax],al
   14000a1dd:	add    BYTE PTR [rax],al
   14000a1df:	and    BYTE PTR [rsi+0x0],0x0
   14000a1e3:	add    BYTE PTR [rax],al
   14000a1e5:	add    BYTE PTR [rax],al
   14000a1e7:	adc    BYTE PTR [rax+rcx*8+0x0],0x0
   14000a1ef:	add    BYTE PTR [rax],dh
   14000a1f1:	enter  0x0,0x0
	...
   14000a1fd:	add    BYTE PTR [rax],al
   14000a1ff:	add    BYTE PTR [rax],bh
   14000a201:	mov    DWORD PTR [rax],0x0
	...
   14000a20f:	add    BYTE PTR [rsp+rax*8+0x0],bl
   14000a216:	add    BYTE PTR [rax],al
   14000a218:	fmul   st(1),st
   14000a21a:	add    BYTE PTR [rax],al
   14000a21c:	add    BYTE PTR [rax],al
   14000a21e:	add    BYTE PTR [rax],al
   14000a220:	mov    esp,es
   14000a222:	add    BYTE PTR [rax],al
   14000a224:	add    BYTE PTR [rax],al
   14000a226:	add    BYTE PTR [rax],al
   14000a228:	cmp    ch,al
   14000a22a:	add    BYTE PTR [rax],al
   14000a22c:	add    BYTE PTR [rax],al
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	ins    BYTE PTR es:[rdi],dx
   14000a231:	(bad)  
   14000a232:	add    BYTE PTR [rax],al
   14000a234:	add    BYTE PTR [rax],al
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	pop    rdx
   14000a239:	(bad)  
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	add    BYTE PTR [rax],al
   14000a23e:	add    BYTE PTR [rax],al
   14000a240:	rex.RX (bad) 
   14000a242:	add    BYTE PTR [rax],al
   14000a244:	add    BYTE PTR [rax],al
   14000a246:	add    BYTE PTR [rax],al
   14000a248:	ss (bad) 
   14000a24a:	add    BYTE PTR [rax],al
   14000a24c:	add    BYTE PTR [rax],al
   14000a24e:	add    BYTE PTR [rax],al
   14000a250:	(bad)
   14000a254:	add    BYTE PTR [rax],al
   14000a256:	add    BYTE PTR [rax],al
   14000a258:	add    ah,0x0
   14000a25b:	add    BYTE PTR [rax],al
   14000a25d:	add    BYTE PTR [rax],al
   14000a25f:	add    BYTE PTR [rsi-0x3b],bl
   14000a262:	add    BYTE PTR [rax],al
   14000a264:	add    BYTE PTR [rax],al
   14000a266:	add    BYTE PTR [rax],al
   14000a268:	outs   dx,BYTE PTR ds:[rsi]
   14000a269:	(bad)
   14000a26c:	add    BYTE PTR [rax],al
   14000a26e:	add    BYTE PTR [rax],al
   14000a270:	mov    al,0xc4
   14000a272:	add    BYTE PTR [rax],al
   14000a274:	add    BYTE PTR [rax],al
   14000a276:	add    BYTE PTR [rax],al
   14000a278:	mov    ah,0x0
   14000a27b:	add    BYTE PTR [rax],al
   14000a27d:	add    BYTE PTR [rax],al
   14000a27f:	add    al,bl
   14000a281:	(bad)  
   14000a282:	add    BYTE PTR [rax],al
   14000a284:	add    BYTE PTR [rax],al
   14000a286:	add    BYTE PTR [rax],al
   14000a288:	call   0x14000a351
   14000a28d:	add    BYTE PTR [rax],al
   14000a28f:	add    dh,dh
   14000a291:	(bad)  
   14000a292:	add    BYTE PTR [rax],al
   14000a294:	add    BYTE PTR [rax],al
   14000a296:	add    BYTE PTR [rax],al
   14000a298:	or     al,0xc5
   14000a29a:	add    BYTE PTR [rax],al
   14000a29c:	add    BYTE PTR [rax],al
   14000a29e:	add    BYTE PTR [rax],al
   14000a2a0:	sbb    al,ch
   14000a2a2:	add    BYTE PTR [rax],al
   14000a2a4:	add    BYTE PTR [rax],al
   14000a2a6:	add    BYTE PTR [rax],al
   14000a2a8:	sub    al,0xc5
	...
   14000a2b6:	add    BYTE PTR [rax],al
   14000a2b8:	ret    0xc8
   14000a2bb:	add    BYTE PTR [rax],al
   14000a2bd:	add    BYTE PTR [rax],al
   14000a2bf:	add    BYTE PTR [rdx+0xc8],dh
	...
   14000a2cd:	add    BYTE PTR [rax],al
   14000a2cf:	add    dl,ch
   14000a2d1:	leave  
   14000a2d2:	add    BYTE PTR [rax],al
   14000a2d4:	add    BYTE PTR [rax],al
   14000a2d6:	add    BYTE PTR [rax],al
   14000a2d8:	ret    0xc6
   14000a2db:	add    BYTE PTR [rax],al
   14000a2dd:	add    BYTE PTR [rax],al
   14000a2df:	add    dl,cl
   14000a2e1:	mov    BYTE PTR [rax],0x0
   14000a2e4:	add    BYTE PTR [rax],al
   14000a2e6:	add    BYTE PTR [rax],al
   14000a2e8:	(bad)  
   14000a2e9:	mov    BYTE PTR [rax],0x0
   14000a2ec:	add    BYTE PTR [rax],al
   14000a2ee:	add    BYTE PTR [rax],al
   14000a2f0:	loop   0x14000a2b8
   14000a2f2:	add    BYTE PTR [rax],al
   14000a2f4:	add    BYTE PTR [rax],al
   14000a2f6:	add    BYTE PTR [rax],al
   14000a2f8:	jp     0x14000a2c4
   14000a2fa:	add    BYTE PTR [rax],al
   14000a2fc:	add    BYTE PTR [rax],al
   14000a2fe:	add    BYTE PTR [rax],al
   14000a300:	(bad)
   14000a304:	add    BYTE PTR [rax],al
   14000a306:	add    BYTE PTR [rax],al
   14000a308:	scas   al,BYTE PTR es:[rdi]
   14000a309:	(bad)
   14000a30c:	add    BYTE PTR [rax],al
   14000a30e:	add    BYTE PTR [rax],al
   14000a310:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a311:	(bad)
   14000a314:	add    BYTE PTR [rax],al
   14000a316:	add    BYTE PTR [rax],al
   14000a318:	cwde   
   14000a319:	(bad)
   14000a31c:	add    BYTE PTR [rax],al
   14000a31e:	add    BYTE PTR [rax],al
   14000a320:	mov    es,ebp
   14000a322:	add    BYTE PTR [rax],al
   14000a324:	add    BYTE PTR [rax],al
   14000a326:	add    BYTE PTR [rax],al
   14000a328:	mov    edx,0xc5
   14000a32d:	add    BYTE PTR [rax],al
   14000a32f:	add    ah,al
   14000a331:	(bad)
   14000a334:	add    BYTE PTR [rax],al
   14000a336:	add    BYTE PTR [rax],al
   14000a338:	rol    ch,cl
   14000a33a:	add    BYTE PTR [rax],al
   14000a33c:	add    BYTE PTR [rax],al
   14000a33e:	add    BYTE PTR [rax],al
   14000a340:	fcmovb st,st(5)
   14000a342:	add    BYTE PTR [rax],al
   14000a344:	add    BYTE PTR [rax],al
   14000a346:	add    BYTE PTR [rax],al
   14000a348:	in     al,0xc5
   14000a34a:	add    BYTE PTR [rax],al
   14000a34c:	add    BYTE PTR [rax],al
   14000a34e:	add    BYTE PTR [rax],al
   14000a350:	test   dl,cl
   14000a352:	add    BYTE PTR [rax],al
   14000a354:	add    BYTE PTR [rax],al
   14000a356:	add    BYTE PTR [rax],al
   14000a358:	inc    ch
   14000a35a:	add    BYTE PTR [rax],al
   14000a35c:	add    BYTE PTR [rax],al
   14000a35e:	add    BYTE PTR [rax],al
   14000a360:	or     al,0xc6
   14000a362:	add    BYTE PTR [rax],al
   14000a364:	add    BYTE PTR [rax],al
   14000a366:	add    BYTE PTR [rax],al
   14000a368:	(bad)  
   14000a369:	mov    BYTE PTR [rax],0x0
   14000a36c:	add    BYTE PTR [rax],al
   14000a36e:	add    BYTE PTR [rax],al
   14000a370:	xor    dh,al
   14000a372:	add    BYTE PTR [rax],al
   14000a374:	add    BYTE PTR [rax],al
   14000a376:	add    BYTE PTR [rax],al
   14000a378:	cmp    dh,al
   14000a37a:	add    BYTE PTR [rax],al
   14000a37c:	add    BYTE PTR [rax],al
   14000a37e:	add    BYTE PTR [rax],al
   14000a380:	rex mov BYTE PTR [rax],0x0
   14000a384:	add    BYTE PTR [rax],al
   14000a386:	add    BYTE PTR [rax],al
   14000a388:	rex.WX mov BYTE PTR [rax],0x0
   14000a38c:	add    BYTE PTR [rax],al
   14000a38e:	add    BYTE PTR [rax],al
   14000a390:	pop    rsi
   14000a391:	mov    BYTE PTR [rax],0x0
   14000a394:	add    BYTE PTR [rax],al
   14000a396:	add    BYTE PTR [rax],al
   14000a398:	push   0xffffffffffffffc6
   14000a39a:	add    BYTE PTR [rax],al
   14000a39c:	add    BYTE PTR [rax],al
   14000a39e:	add    BYTE PTR [rax],al
   14000a3a0:	(bad)  
   14000a3a1:	mov    BYTE PTR [rax],0x0
   14000a3a4:	add    BYTE PTR [rax],al
   14000a3a6:	add    BYTE PTR [rax],al
   14000a3a8:	mov    esi,es
   14000a3aa:	add    BYTE PTR [rax],al
   14000a3ac:	add    BYTE PTR [rax],al
   14000a3ae:	add    BYTE PTR [rax],al
   14000a3b0:	xchg   esi,eax
   14000a3b1:	mov    BYTE PTR [rax],0x0
   14000a3b4:	add    BYTE PTR [rax],al
   14000a3b6:	add    BYTE PTR [rax],al
   14000a3b8:	scas   al,BYTE PTR es:[rdi]
   14000a3b9:	mov    BYTE PTR [rax],0x0
	...
   14000a3c8:	add    dl,cl
   14000a3ca:	add    BYTE PTR [rax],al
   14000a3cc:	add    BYTE PTR [rax],al
   14000a3ce:	add    BYTE PTR [rax],al
   14000a3d0:	adc    al,0xca
   14000a3d2:	add    BYTE PTR [rax],al
   14000a3d4:	add    BYTE PTR [rax],al
   14000a3d6:	add    BYTE PTR [rax],al
   14000a3d8:	in     al,dx
   14000a3d9:	mov    BYTE PTR [rax],0x0
   14000a3dc:	add    BYTE PTR [rax],al
   14000a3de:	add    BYTE PTR [rax],al
   14000a3e0:	add    bh,al
   14000a3e2:	add    BYTE PTR [rax],al
   14000a3e4:	add    BYTE PTR [rax],al
   14000a3e6:	add    BYTE PTR [rax],al
   14000a3e8:	sbb    al,bh
	...
   14000a3f6:	add    BYTE PTR [rax],al
   14000a3f8:	mov    eax,0xc7
   14000a3fd:	add    BYTE PTR [rax],al
   14000a3ff:	add    ah,cl
   14000a401:	mov    DWORD PTR [rax],0x0
   14000a407:	add    BYTE PTR [rdx],ch
   14000a409:	retf   0x0
   14000a40c:	add    BYTE PTR [rax],al
   14000a40e:	add    BYTE PTR [rax],al
   14000a410:	faddp  st(7),st
	...
   14000a41e:	add    BYTE PTR [rax],al
   14000a420:	mov    al,0x8d
   14000a422:	add    BYTE PTR [rax+0x1],al
   14000a425:	add    BYTE PTR [rax],al
   14000a427:	add    BYTE PTR [rax+0x1400090],dl
	...
   14000a435:	add    BYTE PTR [rax],al
   14000a437:	add    BYTE PTR [rax+0x1400086],dl
   14000a43d:	add    BYTE PTR [rax],al
   14000a43f:	add    BYTE PTR [rax],al
   14000a441:	adc    BYTE PTR [rax],al
   14000a443:	rex add DWORD PTR [rax],eax
   14000a446:	add    BYTE PTR [rax],al
   14000a448:	adc    BYTE PTR [rax],dl
   14000a44a:	add    BYTE PTR [rax+0x1],al
   14000a44d:	add    BYTE PTR [rax],al
   14000a44f:	add    BYTE PTR [rax],dh
   14000a451:	adc    BYTE PTR [rax],al
   14000a453:	rex add DWORD PTR [rax],eax
	...
   14000a466:	add    BYTE PTR [rax],al
   14000a468:	mov    al,0x85
   14000a46a:	add    BYTE PTR [rax+0x1],al
   14000a46d:	add    BYTE PTR [rax],al
   14000a46f:	add    BYTE PTR [rax],dh
   14000a471:	mov    al,BYTE PTR [rax]
   14000a473:	rex add DWORD PTR [rax],eax
	...
   14000a47e:	add    BYTE PTR [rax],al
   14000a480:	add    BYTE PTR [rax],dl
   14000a482:	add    BYTE PTR [rax],al
   14000a484:	adc    BYTE PTR [rax],dl
   14000a486:	add    BYTE PTR [rax],al
   14000a488:	xor    BYTE PTR [rax],dl
   14000a48a:	add    BYTE PTR [rax],al
   14000a48c:	rcr    BYTE PTR [rsi],1
   14000a48e:	add    BYTE PTR [rax],al
   14000a490:	mov    al,0x1f
   14000a492:	add    BYTE PTR [rax],al
   14000a494:	nop
   14000a495:	and    DWORD PTR [rax],eax
   14000a497:	add    BYTE PTR [rax-0x2fffffdf],ah
   14000a49d:	sub    BYTE PTR [rax],al
   14000a49f:	add    BYTE PTR [rax],ah
   14000a4a1:	sub    DWORD PTR [rax],eax
   14000a4a3:	add    BYTE PTR [rax+0x29],ah
   14000a4a6:	add    BYTE PTR [rax],al
   14000a4a8:	mov    al,0x29
   14000a4aa:	add    BYTE PTR [rax],al
   14000a4ac:	(bad)  
   14000a4ad:	sub    al,0x0
   14000a4af:	add    BYTE PTR [rax-0x7fffffd4],ah
   14000a4b5:	sub    eax,0x2f200000
   14000a4ba:	add    BYTE PTR [rax],al
   14000a4bc:	shl    BYTE PTR [rdx],0x0
   14000a4bf:	add    al,ah
   14000a4c1:	add    BYTE PTR ss:[rax],al
   14000a4c4:	add    BYTE PTR [rax],bh
   14000a4c6:	add    BYTE PTR [rax],al
   14000a4c8:	adc    BYTE PTR [rax],bh
   14000a4ca:	add    BYTE PTR [rax],al
   14000a4cc:	adc    BYTE PTR [rdx],bh
   14000a4ce:	add    BYTE PTR [rax],al
   14000a4d0:	and    BYTE PTR [rbx],bh
   14000a4d2:	add    BYTE PTR [rax],al
   14000a4d4:	lock cmp eax,DWORD PTR [rax]
   14000a4d7:	add    al,ah
   14000a4d9:	cmp    al,0x0
   14000a4db:	add    BYTE PTR [rax+0x3d],al
   14000a4de:	add    BYTE PTR [rax],al
   14000a4e0:	rex
   14000a4e1:	add    BYTE PTR [r8],al
   14000a4e4:	adc    BYTE PTR [rdi+0x0],al
   14000a4e7:	add    BYTE PTR [rax+0x48],ah
   14000a4ea:	add    BYTE PTR [rax],al
   14000a4ec:	or     BYTE PTR [rdx+0x0],0x0
   14000a4f0:	rex
   14000a4f1:	rex.WXB add BYTE PTR [r8],al
   14000a4f4:	adc    BYTE PTR [rax+rax*1+0x0],cl
   14000a4f8:	movabs al,ds:0xf000004fe000004e
   14000a501:	rex.WRXB add BYTE PTR [r8],r8b
   14000a504:	rex push rcx
   14000a506:	add    BYTE PTR [rax],al
   14000a508:	rcl    BYTE PTR [rax+rax*1+0x0],1
   14000a50c:	rex pop rbx
   14000a50e:	add    BYTE PTR [rax],al
   14000a510:	movabs al,ds:0xe000005f6000005e
   14000a519:	pop    rdi
   14000a51a:	add    BYTE PTR [rax],al
   14000a51c:	and    BYTE PTR [rax+0x0],0x0
   14000a520:	movabs al,ds:0x60f0000060
   14000a529:	(bad)  
   14000a52a:	add    BYTE PTR [rax],al
   14000a52c:	adc    BYTE PTR [rcx+0x0],ah
   14000a52f:	add    BYTE PTR [rax],ah
   14000a531:	(bad)  
   14000a532:	add    BYTE PTR [rax],al
   14000a534:	push   rax
   14000a535:	imul   eax,DWORD PTR [rax],0x0
   14000a538:	(bad)  
   14000a539:	imul   eax,DWORD PTR [rax],0x0
   14000a53c:	lock ins DWORD PTR es:[rdi],dx
   14000a53e:	add    BYTE PTR [rax],al
   14000a540:	shl    BYTE PTR [rdx+0x0],1
   14000a543:	add    BYTE PTR [rax],dh
   14000a545:	jne    0x14000a547
   14000a547:	add    BYTE PTR [rax+0x75],al
   14000a54a:	add    BYTE PTR [rax],al
   14000a54c:	push   rax
   14000a54d:	jne    0x14000a54f
   14000a54f:	add    al,ah
   14000a551:	jne    0x14000a553
   14000a553:	add    BYTE PTR [rax],al
   14000a555:	jbe    0x14000a557
   14000a557:	add    BYTE PTR [rax],dl
   14000a559:	jnp    0x14000a55b
   14000a55b:	add    BYTE PTR [rax],al
   14000a55d:	jl     0x14000a55f
   14000a55f:	add    al,ah
   14000a561:	jge    0x14000a563
   14000a563:	add    al,al
   14000a565:	jle    0x14000a567
   14000a567:	add    al,dl
   14000a569:	jg     0x14000a56b
   14000a56b:	add    BYTE PTR [rax],dh
   14000a56d:	add    BYTE PTR [rax],0x0
   14000a570:	rol    BYTE PTR [rax-0x7ef00000],1
   14000a576:	add    BYTE PTR [rax],al
   14000a578:	rol    BYTE PTR [rcx-0x7e100000],1
   14000a57e:	add    BYTE PTR [rax],al
   14000a580:	xor    BYTE PTR [rbx-0x7cb00000],al
   14000a586:	add    BYTE PTR [rax],al
   14000a588:	jo     0x14000a50d
   14000a58a:	add    BYTE PTR [rax],al
   14000a58c:	add    BYTE PTR [rbx-0x7b200000],0x0
   14000a593:	add    BYTE PTR [rax-0x6fffff7b],dh
   14000a599:	xchg   BYTE PTR [rax],al
   14000a59b:	add    BYTE PTR [rax-0x77],ah
   14000a59e:	add    BYTE PTR [rax],al
   14000a5a0:	ror    BYTE PTR [rcx-0x76100000],0x0
   14000a5a7:	add    BYTE PTR [rax],dh
   14000a5a9:	mov    al,BYTE PTR [rax]
   14000a5ab:	add    BYTE PTR [rax+0x8d],dh
   14000a5b1:	mov    es,WORD PTR [rax]
   14000a5b3:	add    BYTE PTR [rax-0x6f],al
   14000a5b6:	add    BYTE PTR [rax],al
   14000a5b8:	adc    BYTE PTR [rcx-0x6e500000],0x0
   14000a5bf:	add    BYTE PTR [rax+0x14000d0],al
   14000a5c5:	add    BYTE PTR [rax],al
   14000a5c7:	add    BYTE PTR [rax],ah
   14000a5c9:	rol    DWORD PTR [rax],1
   14000a5cb:	rex add DWORD PTR [rax],eax
   14000a5ce:	add    BYTE PTR [rax],al
   14000a5d0:	and    al,BYTE PTR [rip+0x21993]        # 0x14002bf69
   14000a5d6:	add    BYTE PTR [rax],al
   14000a5d8:	in     al,0xbb
   14000a5da:	add    BYTE PTR [rax],al
   14000a5dc:	add    DWORD PTR [rax],eax
   14000a5de:	add    BYTE PTR [rax],al
   14000a5e0:	hlt    
   14000a5e1:	mov    ebx,0x60000
   14000a5e6:	add    BYTE PTR [rax],al
   14000a5e8:	and    BYTE PTR [rax+rax*1+0x2000],bh
   14000a5ef:	add    BYTE PTR [rax],al
   14000a5f1:	add    BYTE PTR [rax],al
   14000a5f3:	add    BYTE PTR [rcx],al
   14000a5f5:	add    BYTE PTR [rax],al
   14000a5f7:	add    BYTE PTR [rbx+0x0],dh
   14000a5fa:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a5fe:	jbe    0x14000a600
   14000a600:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a604:	cmp    al,BYTE PTR [rax]
   14000a606:	add    BYTE PTR [rax],al
   14000a608:	pop    rsp
   14000a609:	add    BYTE PTR [rax+rax*1+0x0],bl
   14000a60d:	add    BYTE PTR [rax],al
   14000a60f:	add    BYTE PTR [rsi+0x0],ah
   14000a612:	imul   eax,DWORD PTR [rax],0x65006c
	...
   14000a620:	imul   eax,DWORD PTR [rax],0x70006d
   14000a626:	outs   dx,DWORD PTR ds:[rsi]
   14000a627:	add    BYTE PTR [rdx+0x0],dh
   14000a62a:	je     0x14000a62c
   14000a62c:	add    BYTE PTR [rax],al
   14000a62e:	add    BYTE PTR [rax],al
   14000a630:	add    BYTE PTR gs:[rax+0x0],bh
   14000a634:	jo     0x14000a636
   14000a636:	outs   dx,DWORD PTR ds:[rsi]
   14000a637:	add    BYTE PTR [rdx+0x0],dh
   14000a63a:	je     0x14000a63c
   14000a63c:	add    BYTE PTR [rax],al
   14000a63e:	add    BYTE PTR [rax],al
   14000a640:	mov    al,0x1f
   14000a642:	add    BYTE PTR [rax+0x1],al
   14000a645:	add    BYTE PTR [rax],al
   14000a647:	add    al,dl
   14000a649:	sub    BYTE PTR [rax],al
   14000a64b:	rex add DWORD PTR [rax],eax
   14000a64e:	add    BYTE PTR [rax],al
   14000a650:	nop
   14000a651:	and    DWORD PTR [rax],eax
   14000a653:	rex add DWORD PTR [rax],eax
   14000a656:	add    BYTE PTR [rax],al
   14000a658:	nop
   14000a659:	and    DWORD PTR [rax],eax
   14000a65b:	rex add DWORD PTR [rax],eax
   14000a65e:	add    BYTE PTR [rax],al
   14000a660:	nop
   14000a661:	and    DWORD PTR [rax],eax
   14000a663:	rex add DWORD PTR [rax],eax
   14000a666:	add    BYTE PTR [rax],al
   14000a668:	nop
   14000a669:	and    DWORD PTR [rax],eax
   14000a66b:	rex add DWORD PTR [rax],eax
   14000a66e:	add    BYTE PTR [rax],al
   14000a670:	and    BYTE PTR [rcx],ch
   14000a672:	add    BYTE PTR [rax+0x1],al
   14000a675:	add    BYTE PTR [rax],al
   14000a677:	add    BYTE PTR [rax+0x1400021],dl
   14000a67d:	add    BYTE PTR [rax],al
   14000a67f:	add    BYTE PTR [rax+0x1400021],ah
   14000a685:	add    BYTE PTR [rax],al
   14000a687:	add    BYTE PTR [rax+0x29],ah
   14000a68a:	add    BYTE PTR [rax+0x1],al
   14000a68d:	add    BYTE PTR [rax],al
   14000a68f:	add    BYTE PTR [rax+0x1400021],dl
   14000a695:	add    BYTE PTR [rax],al
   14000a697:	add    BYTE PTR [rax+0x1400021],dl
   14000a69d:	add    BYTE PTR [rax],al
   14000a69f:	add    BYTE PTR [rax+0x1400021],dl
   14000a6a5:	add    BYTE PTR [rax],al
   14000a6a7:	add    BYTE PTR [rax+0x1400029],dh
   14000a6ad:	add    BYTE PTR [rax],al
   14000a6af:	add    BYTE PTR [rax+0x140002d],al
   14000a6b5:	add    BYTE PTR [rax],al
   14000a6b7:	add    BYTE PTR [rax+0x2c],ah
   14000a6ba:	add    BYTE PTR [rax+0x1],al
   14000a6bd:	add    BYTE PTR [rax],al
   14000a6bf:	add    BYTE PTR [rax+0x1400021],dl
   14000a6c5:	add    BYTE PTR [rax],al
   14000a6c7:	add    BYTE PTR [rax+0x1400021],dl
   14000a6cd:	add    BYTE PTR [rax],al
   14000a6cf:	add    BYTE PTR [rax+0x1400021],dl
   14000a6d5:	add    BYTE PTR [rax],al
   14000a6d7:	add    BYTE PTR [rax+0x1400021],dl
   14000a6dd:	add    BYTE PTR [rax],al
   14000a6df:	add    BYTE PTR [rax+0x140002c],ah
   14000a6e5:	add    BYTE PTR [rax],al
   14000a6e7:	add    BYTE PTR [rax+0x1400021],dl
   14000a6ed:	add    BYTE PTR [rax],al
   14000a6ef:	add    al,ah
   14000a6f1:	add    BYTE PTR ss:[rax+0x1],al
   14000a6f5:	add    BYTE PTR [rax],al
   14000a6f7:	add    al,al
   14000a6f9:	xor    al,BYTE PTR [rax]
   14000a6fb:	rex add DWORD PTR [rax],eax
   14000a6fe:	add    BYTE PTR [rax],al
   14000a700:	nop
   14000a701:	and    DWORD PTR [rax],eax
   14000a703:	rex add DWORD PTR [rax],eax
   14000a706:	add    BYTE PTR [rax],al
   14000a708:	nop
   14000a709:	and    DWORD PTR [rax],eax
   14000a70b:	rex add DWORD PTR [rax],eax
   14000a70e:	add    BYTE PTR [rax],al
   14000a710:	and    BYTE PTR [rdi],ch
   14000a712:	add    BYTE PTR [rax+0x1],al
   14000a715:	add    BYTE PTR [rax],al
   14000a717:	add    BYTE PTR [rax],al
   14000a719:	cmp    BYTE PTR [rax],al
   14000a71b:	rex add DWORD PTR [rax],eax
   14000a71e:	add    BYTE PTR [rax],al
   14000a720:	lock cmp eax,DWORD PTR [rax]
   14000a723:	rex add DWORD PTR [rax],eax
   14000a726:	add    BYTE PTR [rax],al
   14000a728:	adc    BYTE PTR [rdx],bh
   14000a72a:	add    BYTE PTR [rax+0x1],al
   14000a72d:	add    BYTE PTR [rax],al
   14000a72f:	add    BYTE PTR [rax+0x1400021],dl
   14000a735:	add    BYTE PTR [rax],al
   14000a737:	add    BYTE PTR [rax+0x1400021],dl
   14000a73d:	add    BYTE PTR [rax],al
   14000a73f:	add    BYTE PTR [rax+0x1400021],dl
   14000a745:	add    BYTE PTR [rax],al
   14000a747:	add    BYTE PTR [rax+0x1400021],dl
   14000a74d:	add    BYTE PTR [rax],al
   14000a74f:	add    BYTE PTR [rax],ah
   14000a751:	cmp    eax,DWORD PTR [rax]
   14000a753:	rex add DWORD PTR [rax],eax
   14000a756:	add    BYTE PTR [rax],al
   14000a758:	nop
   14000a759:	and    DWORD PTR [rax],eax
   14000a75b:	rex add DWORD PTR [rax],eax
   14000a75e:	add    BYTE PTR [rax],al
   14000a760:	loopne 0x14000a798
   14000a762:	add    BYTE PTR [rax+0x1],al
   14000a765:	add    BYTE PTR [rax],al
   14000a767:	add    BYTE PTR [rax+0x3d],al
   14000a76a:	add    BYTE PTR [rax+0x1],al
   14000a76d:	add    BYTE PTR [rax],al
   14000a76f:	add    BYTE PTR [rax+0x1400021],dl
   14000a775:	add    BYTE PTR [rax],al
   14000a777:	add    BYTE PTR [rax+0x1400021],dl
   14000a77d:	add    BYTE PTR [rax],al
   14000a77f:	add    al,ah
   14000a781:	cmp    al,0x0
   14000a783:	rex add DWORD PTR [rax],eax
   14000a786:	add    BYTE PTR [rax],al
   14000a788:	rex
   14000a789:	add    BYTE PTR [r8+0x1],al
   14000a78d:	add    BYTE PTR [rax],al
   14000a78f:	add    BYTE PTR [rax+0x140001f],dh
   14000a795:	add    BYTE PTR [rax],al
   14000a797:	add    BYTE PTR [rax+0x48],ah
   14000a79a:	add    BYTE PTR [rax+0x1],al
   14000a79d:	add    BYTE PTR [rax],al
   14000a79f:	add    BYTE PTR [rax+0x1400021],dl
   14000a7a5:	add    BYTE PTR [rax],al
   14000a7a7:	add    BYTE PTR [rax+0x1400021],dl
   14000a7ad:	add    BYTE PTR [rax],al
   14000a7af:	add    BYTE PTR [rax+0x1400021],dl
   14000a7b5:	add    BYTE PTR [rax],al
   14000a7b7:	add    BYTE PTR [rax+0x1400021],dl
   14000a7bd:	add    BYTE PTR [rax],al
   14000a7bf:	add    BYTE PTR [rax+0x1400021],dl
   14000a7c5:	add    BYTE PTR [rax],al
   14000a7c7:	add    BYTE PTR [rax+0x1400021],dl
   14000a7cd:	add    BYTE PTR [rax],al
   14000a7cf:	add    BYTE PTR [rax+0x1400021],ah
   14000a7d5:	add    BYTE PTR [rax],al
   14000a7d7:	add    BYTE PTR [rax+0x4b],al
   14000a7da:	add    BYTE PTR [rax+0x1],al
   14000a7dd:	add    BYTE PTR [rax],al
   14000a7df:	add    BYTE PTR [rax+0x1400021],dl
   14000a7e5:	add    BYTE PTR [rax],al
   14000a7e7:	add    BYTE PTR [rax+0x1400021],dl
   14000a7ed:	add    BYTE PTR [rax],al
   14000a7ef:	add    BYTE PTR [rax+0x140004a],al
   14000a7f5:	add    BYTE PTR [rax],al
   14000a7f7:	add    BYTE PTR [rax],dl
   14000a7f9:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000a7fd:	add    BYTE PTR [rax],al
   14000a7ff:	add    BYTE PTR [rax+0x51],al
   14000a802:	add    BYTE PTR [rax+0x1],al
   14000a805:	add    BYTE PTR [rax],al
   14000a807:	add    BYTE PTR [rax+0x140004e],ah
   14000a80d:	add    BYTE PTR [rax],al
   14000a80f:	add    BYTE PTR [rax+0x1400021],dl
   14000a815:	add    BYTE PTR [rax],al
   14000a817:	add    BYTE PTR [rax+0x1400021],dl
   14000a81d:	add    BYTE PTR [rax],al
   14000a81f:	add    BYTE PTR [rax+0x1400021],dl
   14000a825:	add    BYTE PTR [rax],al
   14000a827:	add    BYTE PTR [rax+0x1400021],dl
   14000a82d:	add    BYTE PTR [rax],al
   14000a82f:	add    al,dh
   14000a831:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000a835:	add    BYTE PTR [rax],al
   14000a837:	add    BYTE PTR [rax+0x1400021],dl
   14000a83d:	add    BYTE PTR [rax],al
   14000a83f:	add    BYTE PTR [rax+0x1400021],ah
   14000a845:	add    BYTE PTR [rax],al
   14000a847:	add    BYTE PTR [rax+0x1400021],ah
   14000a84d:	add    BYTE PTR [rax],al
   14000a84f:	add    BYTE PTR [rax+0x1400021],dl
   14000a855:	add    BYTE PTR [rax],al
   14000a857:	add    BYTE PTR [rax+0x1400021],dl
   14000a85d:	add    BYTE PTR [rax],al
   14000a85f:	add    al,dl
   14000a861:	push   rsp
   14000a862:	add    BYTE PTR [rax+0x1],al
   14000a865:	add    BYTE PTR [rax],al
   14000a867:	add    al,ah
   14000a869:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000a86d:	add    BYTE PTR [rax],al
   14000a86f:	add    al,dh
   14000a871:	(bad)  
   14000a872:	add    BYTE PTR [rax+0x1],al
   14000a875:	add    BYTE PTR [rax],al
   14000a877:	add    BYTE PTR [rax],al
   14000a879:	jl     0x14000a87b
   14000a87b:	rex add DWORD PTR [rax],eax
   14000a87e:	add    BYTE PTR [rax],al
   14000a880:	adc    BYTE PTR [rcx+0x0],ah
   14000a883:	rex add DWORD PTR [rax],eax
   14000a886:	add    BYTE PTR [rax],al
   14000a888:	add    BYTE PTR [rcx+0x0],ah
   14000a88b:	rex add DWORD PTR [rax],eax
   14000a88e:	add    BYTE PTR [rax],al
   14000a890:	and    BYTE PTR [rcx+0x0],ah
   14000a893:	rex add DWORD PTR [rax],eax
   14000a896:	add    BYTE PTR [rax],al
   14000a898:	(bad)  
   14000a899:	pop    rdi
   14000a89a:	add    BYTE PTR [rax+0x1],al
   14000a89d:	add    BYTE PTR [rax],al
   14000a89f:	add    al,ah
   14000a8a1:	pop    rdi
   14000a8a2:	add    BYTE PTR [rax+0x1],al
   14000a8a5:	add    BYTE PTR [rax],al
   14000a8a7:	add    BYTE PTR [rax+0x1400060],al
   14000a8ad:	add    BYTE PTR [rax],al
   14000a8af:	add    BYTE PTR [rax+0x1400060],ah
   14000a8b5:	add    BYTE PTR [rax],al
   14000a8b7:	add    BYTE PTR [rax+0x140005e],ah
   14000a8bd:	add    BYTE PTR [rax],al
   14000a8bf:	add    al,dh
   14000a8c1:	ins    DWORD PTR es:[rdi],dx
   14000a8c2:	add    BYTE PTR [rax+0x1],al
   14000a8c5:	add    BYTE PTR [rax],al
   14000a8c7:	add    BYTE PTR [rax+0x1400021],dl
   14000a8cd:	add    BYTE PTR [rax],al
   14000a8cf:	add    BYTE PTR [rax+0x1400021],dl
   14000a8d5:	add    BYTE PTR [rax],al
   14000a8d7:	add    BYTE PTR [rax+0x1400021],dl
   14000a8dd:	add    BYTE PTR [rax],al
   14000a8df:	add    BYTE PTR [rax+0x1400021],dl
   14000a8e5:	add    BYTE PTR [rax],al
   14000a8e7:	add    BYTE PTR [rax+0x1400021],dl
   14000a8ed:	add    BYTE PTR [rax],al
   14000a8ef:	add    BYTE PTR [rax+0x6b],ah
   14000a8f2:	add    BYTE PTR [rax+0x1],al
   14000a8f5:	add    BYTE PTR [rax],al
   14000a8f7:	add    BYTE PTR [rax+0x1400021],dl
   14000a8fd:	add    BYTE PTR [rax],al
   14000a8ff:	add    BYTE PTR [rax+0x1400021],ah
   14000a905:	add    BYTE PTR [rax],al
   14000a907:	add    BYTE PTR [rax+0x1400021],ah
   14000a90d:	add    BYTE PTR [rax],al
   14000a90f:	add    BYTE PTR [rax+0x1400021],dl
   14000a915:	add    BYTE PTR [rax],al
   14000a917:	add    BYTE PTR [rax+0x1400021],dl
   14000a91d:	add    BYTE PTR [rax],al
   14000a91f:	add    BYTE PTR [rax+0x1400021],dl
   14000a925:	add    BYTE PTR [rax],al
   14000a927:	add    BYTE PTR [rax+0x6b],dl
   14000a92a:	add    BYTE PTR [rax+0x1],al
   14000a92d:	add    BYTE PTR [rax],al
   14000a92f:	add    BYTE PTR [rax+0x75],dl
   14000a932:	add    BYTE PTR [rax+0x1],al
   14000a935:	add    BYTE PTR [rax],al
   14000a937:	add    al,ah
   14000a939:	jne    0x14000a93b
   14000a93b:	rex add DWORD PTR [rax],eax
   14000a93e:	add    BYTE PTR [rax],al
   14000a940:	add    BYTE PTR [rsi+0x0],dh
   14000a943:	rex add DWORD PTR [rax],eax
   14000a946:	add    BYTE PTR [rax],al
   14000a948:	nop
   14000a949:	and    DWORD PTR [rax],eax
   14000a94b:	rex add DWORD PTR [rax],eax
   14000a94e:	add    BYTE PTR [rax],al
   14000a950:	xor    BYTE PTR [rbp+0x0],dh
   14000a953:	rex add DWORD PTR [rax],eax
   14000a956:	add    BYTE PTR [rax],al
   14000a958:	rex jne 0x14000a95b
   14000a95b:	rex add DWORD PTR [rax],eax
   14000a95e:	add    BYTE PTR [rax],al
   14000a960:	nop
   14000a961:	and    DWORD PTR [rax],eax
   14000a963:	rex add DWORD PTR [rax],eax
   14000a966:	add    BYTE PTR [rax],al
   14000a968:	nop
   14000a969:	and    DWORD PTR [rax],eax
   14000a96b:	rex add DWORD PTR [rax],eax
   14000a96e:	add    BYTE PTR [rax],al
   14000a970:	nop
   14000a971:	and    DWORD PTR [rax],eax
   14000a973:	rex add DWORD PTR [rax],eax
   14000a976:	add    BYTE PTR [rax],al
   14000a978:	nop
   14000a979:	and    DWORD PTR [rax],eax
   14000a97b:	rex add DWORD PTR [rax],eax
   14000a97e:	add    BYTE PTR [rax],al
   14000a980:	adc    BYTE PTR [rbx+0x0],bh
   14000a983:	rex add DWORD PTR [rax],eax
   14000a986:	add    BYTE PTR [rax],al
   14000a988:	add    BYTE PTR [rax+rax*1+0x40],bh
   14000a98c:	add    DWORD PTR [rax],eax
   14000a98e:	add    BYTE PTR [rax],al
   14000a990:	adc    BYTE PTR [rcx+0x14000],al
   14000a996:	add    BYTE PTR [rax],al
   14000a998:	rol    BYTE PTR [rcx+0x14000],1
   14000a99e:	add    BYTE PTR [rax],al
   14000a9a0:	lock add DWORD PTR [rax],0x140
   14000a9a7:	add    al,dl
   14000a9a9:	jg     0x14000a9ab
   14000a9ab:	rex add DWORD PTR [rax],eax
   14000a9ae:	add    BYTE PTR [rax],al
   14000a9b0:	xor    BYTE PTR [rax+0x14000],al
   14000a9b6:	add    BYTE PTR [rax],al
   14000a9b8:	rol    BYTE PTR [rax+0x14000],1
   14000a9be:	add    BYTE PTR [rax],al
   14000a9c0:	loopne 0x14000aa3f
   14000a9c2:	add    BYTE PTR [rax+0x1],al
   14000a9c5:	add    BYTE PTR [rax],al
   14000a9c7:	add    BYTE PTR [rax],al
   14000a9c9:	jl     0x14000a9cb
   14000a9cb:	rex add DWORD PTR [rax],eax
   14000a9ce:	add    BYTE PTR [rax],al
   14000a9d0:	sar    BYTE PTR [rsi+0x0],0x40
   14000a9d4:	add    DWORD PTR [rax],eax
   14000a9d6:	add    BYTE PTR [rax],al
   14000a9d8:	add    BYTE PTR [rbx+0x14000],0x0
   14000a9df:	add    al,al
   14000a9e1:	mov    DWORD PTR [rax],eax
   14000a9e3:	rex add DWORD PTR [rax],eax
   14000a9e6:	add    BYTE PTR [rax],al
   14000a9e8:	ror    BYTE PTR [rcx+0x14000],0x0
   14000a9ef:	add    al,ah
   14000a9f1:	test   BYTE PTR [rax],al
   14000a9f3:	rex add DWORD PTR [rax],eax
   14000a9f6:	add    BYTE PTR [rax],al
   14000a9f8:	push   rbx
   14000a9f9:	add    BYTE PTR [rdi+0x0],ch
   14000a9fc:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000aa01:	add    BYTE PTR [rcx+0x0],ah
   14000aa04:	jb     0x14000aa06
   14000aa06:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000aa0b:	add    BYTE PTR [rcx+0x0],ch
   14000aa0e:	movsxd eax,DWORD PTR [rax]
   14000aa10:	jb     0x14000aa12
   14000aa12:	outs   dx,DWORD PTR ds:[rsi]
   14000aa13:	add    BYTE PTR [rbx+0x0],dh
   14000aa16:	outs   dx,DWORD PTR ds:[rsi]
   14000aa17:	add    BYTE PTR [rsi+0x0],ah
   14000aa1a:	je     0x14000aa1c
   14000aa1c:	pop    rsp
   14000aa1d:	add    BYTE PTR [rax+0x0],dl
   14000aa20:	jb     0x14000aa22
   14000aa22:	imul   eax,DWORD PTR [rax],0x74006e
   14000aa28:	rex.X add BYTE PTR [rdx+0x0],sil
   14000aa2c:	ins    DWORD PTR es:[rdi],dx
   14000aa2d:	add    BYTE PTR [rbp+0x0],dl
   14000aa30:	rex.WB add BYTE PTR [r8],al
   14000aa33:	add    BYTE PTR [rax],al
   14000aa35:	add    BYTE PTR [rax],al
   14000aa37:	add    BYTE PTR [rax+0x0],dl
   14000aa3a:	(bad)  
   14000aa3b:	add    BYTE PTR [rax+rax*1+0x68],dh
	...
   14000aa47:	add    BYTE PTR [rbx+0x0],dl
   14000aa4a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000aa4e:	jbe    0x14000aa50
   14000aa50:	add    BYTE PTR gs:[rdx+0x0],dh
   14000aa54:	add    BYTE PTR [rax],al
   14000aa56:	add    BYTE PTR [rax],al
   14000aa58:	rex.WB add BYTE PTR [r13+0x0],bpl
   14000aa5c:	jo     0x14000aa5e
   14000aa5e:	outs   dx,DWORD PTR ds:[rsi]
   14000aa5f:	add    BYTE PTR [rdx+0x0],dh
   14000aa62:	je     0x14000aa64
   14000aa64:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14000aa68:	add    BYTE PTR fs:[rbp+0x0],ah
   14000aa6c:	add    BYTE PTR [rax],al
   14000aa6e:	add    BYTE PTR [rax],al
   14000aa70:	rex.WR add BYTE PTR [rcx+0x0],r13b
   14000aa74:	jae    0x14000aa76
   14000aa76:	je     0x14000aa78
	...
   14000aa80:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000aa84:	outs   dx,BYTE PTR ds:[rsi]
   14000aa85:	add    BYTE PTR [rsi+0x0],dh
   14000aa88:	add    BYTE PTR gs:[rdx+0x0],dh
   14000aa8c:	je     0x14000aa8e
	...
   14000aa96:	add    BYTE PTR [rax],al
   14000aa98:	(bad)  
   14000aa99:	ins    DWORD PTR es:[rdi],dx
   14000aa9a:	(bad)  
   14000aa9b:	rex.XB sbb r15b,spl
   14000aa9e:	out    dx,al
   14000aa9f:	rex.X mov esp,0x61e2a155
   14000aaa5:	ret    
   14000aaa6:	jnp    0x14000aaa6
   14000aaa8:	(bad)  
   14000aaa9:	add    BYTE PTR [rsi+0x0],dh
   14000aaac:	cmp    al,BYTE PTR [rax]
   14000aaae:	and    eax,0x7300
   14000aab3:	add    BYTE PTR [rax],al
   14000aab5:	add    BYTE PTR [rax],al
   14000aab7:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c011dbd
   14000aabd:	add    BYTE PTR [rbp+0x0],ah
   14000aac0:	jbe    0x14000aac2
   14000aac2:	add    BYTE PTR gs:[rsi+0x0],ch
   14000aac6:	je     0x14000aac8
   14000aac8:	jbe    0x14000aaca
   14000aaca:	ja     0x14000aacc
   14000aacc:	jb     0x14000aace
   14000aace:	add    BYTE PTR cs:[rbp+0x0],ah
   14000aad2:	js     0x14000aad4
   14000aad4:	add    BYTE PTR gs:[rax],al
   14000aad7:	add    BYTE PTR [rdi+0x0],ch
   14000aada:	jo     0x14000aadc
   14000aadc:	add    BYTE PTR gs:[rsi+0x0],ch
	...
   14000aae8:	(bad)  
   14000aae9:	add    BYTE PTR [rdx+0x0],dh
   14000aaec:	ins    DWORD PTR es:[rdi],dx
   14000aaed:	add    BYTE PTR [rax],al
   14000aaef:	add    BYTE PTR [rax+rax*1],bh
   14000aaf2:	push   rcx
   14000aaf3:	add    BYTE PTR [rbp+0x0],dh
   14000aaf6:	add    BYTE PTR gs:[rdx+0x0],dh
   14000aafa:	jns    0x14000aafc
   14000aafc:	rex.WR add BYTE PTR [rcx+0x0],r13b
   14000ab00:	jae    0x14000ab02
   14000ab02:	je     0x14000ab04
   14000ab04:	add    BYTE PTR ds:[rax+rax*1],bh
   14000ab08:	push   rcx
   14000ab09:	add    BYTE PTR [rbp+0x0],dh
   14000ab0c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000ab10:	jns    0x14000ab12
   14000ab12:	and    BYTE PTR [rax],al
   14000ab14:	rex.WB add BYTE PTR [r8+rax*1+0x3d],spl
   14000ab19:	add    BYTE PTR [rdx],ah
   14000ab1b:	add    BYTE PTR [rax],dh
   14000ab1d:	add    BYTE PTR [rdx],ah
   14000ab1f:	add    BYTE PTR [rax],ah
   14000ab21:	add    BYTE PTR [rax+0x0],dl
   14000ab24:	(bad)  
   14000ab25:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000ab29:	add    BYTE PTR [rip+0x41002200],bh        # 0x18100cd2f
   14000ab2f:	add    BYTE PTR [rax+0x0],dh
   14000ab32:	jo     0x14000ab34
   14000ab34:	ins    BYTE PTR es:[rdi],dx
   14000ab35:	add    BYTE PTR [rcx+0x0],ch
   14000ab38:	movsxd eax,DWORD PTR [rax]
   14000ab3a:	(bad)  
   14000ab3b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ab3f:	add    BYTE PTR [rdi+0x0],ch
   14000ab42:	outs   dx,BYTE PTR ds:[rsi]
   14000ab43:	add    BYTE PTR [rdx],ah
   14000ab45:	add    BYTE PTR [rsi],bh
   14000ab47:	add    BYTE PTR [rax+rax*1],bh
   14000ab4a:	push   rbx
   14000ab4b:	add    BYTE PTR [rbp+0x0],ah
   14000ab4e:	ins    BYTE PTR es:[rdi],dx
   14000ab4f:	add    BYTE PTR [rbp+0x0],ah
   14000ab52:	movsxd eax,DWORD PTR [rax]
   14000ab54:	je     0x14000ab56
   14000ab56:	and    BYTE PTR [rax],al
   14000ab58:	push   rax
   14000ab59:	add    BYTE PTR [rcx+0x0],ah
   14000ab5c:	je     0x14000ab5e
   14000ab5e:	push   0x22003d00
   14000ab63:	add    BYTE PTR [rbp+0x0],cl
   14000ab66:	imul   eax,DWORD PTR [rax],0x720063
   14000ab6c:	outs   dx,DWORD PTR ds:[rsi]
   14000ab6d:	add    BYTE PTR [rbx+0x0],dh
   14000ab70:	outs   dx,DWORD PTR ds:[rsi]
   14000ab71:	add    BYTE PTR [rsi+0x0],ah
   14000ab74:	je     0x14000ab76
   14000ab76:	sub    eax,0x69005700
   14000ab7b:	add    BYTE PTR [rsi+0x0],ch
   14000ab7e:	add    BYTE PTR fs:[rdi+0x0],ch
   14000ab82:	ja     0x14000ab84
   14000ab84:	jae    0x14000ab86
   14000ab86:	sub    eax,0x72005000
   14000ab8b:	add    BYTE PTR [rcx+0x0],ch
   14000ab8e:	outs   dx,BYTE PTR ds:[rsi]
   14000ab8f:	add    BYTE PTR [rax+rax*1+0x42],dh
   14000ab93:	add    BYTE PTR [rdx+0x0],dl
   14000ab96:	rex.WRB add BYTE PTR [r15],r13b
   14000ab99:	add    BYTE PTR [rcx+0x0],al
   14000ab9c:	add    BYTE PTR fs:[rbp+0x0],ch
   14000aba0:	imul   eax,DWORD PTR [rax],0x22006e
   14000aba6:	add    BYTE PTR ds:[rdx],ch
   14000aba9:	add    BYTE PTR [rbx+0x0],bl
   14000abac:	push   rbx
   14000abad:	add    BYTE PTR [rcx+0x0],bh
   14000abb0:	jae    0x14000abb2
   14000abb2:	je     0x14000abb4
   14000abb4:	add    BYTE PTR gs:[rbp+0x0],ch
   14000abb8:	pop    rbx
   14000abb9:	add    BYTE PTR [rax+0x0],dl
   14000abbc:	jb     0x14000abbe
   14000abbe:	outs   dx,DWORD PTR ds:[rsi]
   14000abbf:	add    BYTE PTR [rsi+0x0],dh
   14000abc2:	imul   eax,DWORD PTR [rax],0x650064
   14000abc8:	jb     0x14000abca
   14000abca:	pop    rbx
   14000abcb:	add    BYTE PTR [rax+0x0],al
   14000abce:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000abd2:	ins    DWORD PTR es:[rdi],dx
   14000abd3:	add    BYTE PTR [rbp+0x0],ah
   14000abd6:	cmp    eax,0x25002700
   14000abdb:	add    BYTE PTR [rbx+0x0],dh
   14000abde:	(bad)  
   14000abdf:	add    BYTE PTR [rbp+0x0],bl
   14000abe2:	and    BYTE PTR [rax],al
   14000abe4:	(bad)  
   14000abe5:	add    BYTE PTR [rsi+0x0],ch
   14000abe8:	add    BYTE PTR fs:[rax],ah
   14000abeb:	add    BYTE PTR [rax],ch
   14000abed:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000abf1:	add    BYTE PTR [rsi+0x0],dh
   14000abf4:	add    BYTE PTR gs:[rax+rax*1+0x3d],ch
   14000abf9:	add    BYTE PTR [rcx],dh
   14000abfb:	add    BYTE PTR [rax],ah
   14000abfd:	add    BYTE PTR [rdi+0x0],ch
   14000ac00:	jb     0x14000ac02
   14000ac02:	and    BYTE PTR [rax],al
   14000ac04:	rex.WR add BYTE PTR [rbp+0x0],r12b
   14000ac08:	jbe    0x14000ac0a
   14000ac0a:	add    BYTE PTR gs:[rax+rax*1+0x3d],ch
   14000ac0f:	add    BYTE PTR [rdx],dh
   14000ac11:	add    BYTE PTR [rax],ah
   14000ac13:	add    BYTE PTR [rdi+0x0],ch
   14000ac16:	jb     0x14000ac18
   14000ac18:	and    BYTE PTR [rax],al
   14000ac1a:	rex.WR add BYTE PTR [rbp+0x0],r12b
   14000ac1e:	jbe    0x14000ac20
   14000ac20:	add    BYTE PTR gs:[rax+rax*1+0x3d],ch
   14000ac25:	add    BYTE PTR [rbx],dh
   14000ac27:	add    BYTE PTR [rcx],ch
   14000ac29:	add    BYTE PTR [rax],ah
   14000ac2b:	add    BYTE PTR [rcx+0x0],ah
   14000ac2e:	outs   dx,BYTE PTR ds:[rsi]
   14000ac2f:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000ac33:	add    BYTE PTR [rax+rax*1+0x69],dl
   14000ac37:	add    BYTE PTR [rbp+0x0],ch
   14000ac3a:	add    BYTE PTR gs:[rbx+0x0],al
   14000ac3e:	jb     0x14000ac40
   14000ac40:	add    BYTE PTR gs:[rcx+0x0],ah
   14000ac44:	je     0x14000ac46
   14000ac46:	add    BYTE PTR gs:[rax+rax*1+0x5b],ah
   14000ac4b:	add    BYTE PTR [rax+0x0],al
   14000ac4e:	push   rbx
   14000ac4f:	add    BYTE PTR [rcx+0x0],bh
   14000ac52:	jae    0x14000ac54
   14000ac54:	je     0x14000ac56
   14000ac56:	add    BYTE PTR gs:[rbp+0x0],ch
   14000ac5a:	push   rsp
   14000ac5b:	add    BYTE PTR [rcx+0x0],ch
   14000ac5e:	ins    DWORD PTR es:[rdi],dx
   14000ac5f:	add    BYTE PTR [rbp+0x0],ah
   14000ac62:	add    BYTE PTR es:[rdi+0x0],ah
   14000ac66:	je     0x14000ac68
   14000ac68:	cmp    eax,DWORD PTR [rax]
   14000ac6a:	cmp    eax,0x25002700
   14000ac6f:	add    BYTE PTR [rbx+0x0],dh
   14000ac72:	(bad)  
   14000ac73:	add    BYTE PTR [rbp+0x0],bl
   14000ac76:	and    BYTE PTR [rax],al
   14000ac78:	(bad)  
   14000ac79:	add    BYTE PTR [rsi+0x0],ch
   14000ac7c:	add    BYTE PTR fs:[rax],ah
   14000ac7f:	add    BYTE PTR [rax+rax*1+0x69],dl
   14000ac83:	add    BYTE PTR [rbp+0x0],ch
   14000ac86:	add    BYTE PTR gs:[rbx+0x0],al
   14000ac8a:	jb     0x14000ac8c
   14000ac8c:	add    BYTE PTR gs:[rcx+0x0],ah
   14000ac90:	je     0x14000ac92
   14000ac92:	add    BYTE PTR gs:[rax+rax*1+0x5b],ah
   14000ac97:	add    BYTE PTR [rax+0x0],al
   14000ac9a:	push   rbx
   14000ac9b:	add    BYTE PTR [rcx+0x0],bh
   14000ac9e:	jae    0x14000aca0
   14000aca0:	je     0x14000aca2
   14000aca2:	add    BYTE PTR gs:[rbp+0x0],ch
   14000aca6:	push   rsp
   14000aca7:	add    BYTE PTR [rcx+0x0],ch
   14000acaa:	ins    DWORD PTR es:[rdi],dx
   14000acab:	add    BYTE PTR [rbp+0x0],ah
   14000acae:	add    BYTE PTR es:[rax+rax*1+0x74],ch
   14000acb3:	add    BYTE PTR [rbx],bh
   14000acb5:	add    BYTE PTR [rip+0x25002700],bh        # 0x16500d3bb
   14000acbb:	add    BYTE PTR [rbx+0x0],dh
   14000acbe:	(bad)  
   14000acbf:	add    BYTE PTR [rbp+0x0],bl
   14000acc2:	pop    rbp
   14000acc3:	add    BYTE PTR [rbp+0x0],bl
   14000acc6:	cmp    al,0x0
   14000acc8:	(bad)  
   14000acc9:	add    BYTE PTR [rbx+0x0],dl
   14000accc:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   14000acd1:	add    BYTE PTR [rbx+0x0],ah
   14000acd4:	je     0x14000acd6
   14000acd6:	add    BYTE PTR ds:[rax+rax*1],bh
   14000acda:	(bad)  
   14000acdb:	add    BYTE PTR [rcx+0x0],dl
   14000acde:	jne    0x14000ace0
   14000ace0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000ace4:	jns    0x14000ace6
   14000ace6:	add    BYTE PTR ds:[rax+rax*1],bh
   14000acea:	(bad)  
   14000aceb:	add    BYTE PTR [rcx+0x0],dl
   14000acee:	jne    0x14000acf0
   14000acf0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000acf4:	jns    0x14000acf6
   14000acf6:	rex.WR add BYTE PTR [rcx+0x0],r13b
   14000acfa:	jae    0x14000acfc
   14000acfc:	je     0x14000acfe
   14000acfe:	add    BYTE PTR ds:[rax],al
	...
   14000ad0d:	add    BYTE PTR [rax],al
   14000ad0f:	add    BYTE PTR [rax+rax*1],bh
   14000ad12:	push   rsi
   14000ad13:	add    BYTE PTR [rcx+0x0],ch
   14000ad16:	add    BYTE PTR gs:[rdi+0x0],dh
   14000ad1a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000ad1e:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000ad22:	outs   dx,BYTE PTR ds:[rsi]
   14000ad23:	add    BYTE PTR [rsi+0x0],ah
   14000ad26:	imul   eax,DWORD PTR [rax],0x3e0067
   14000ad2c:	cmp    al,0x0
   14000ad2e:	push   rcx
   14000ad2f:	add    BYTE PTR [rbp+0x0],dh
   14000ad32:	add    BYTE PTR gs:[rdx+0x0],dh
   14000ad36:	jns    0x14000ad38
   14000ad38:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000ad3c:	outs   dx,BYTE PTR ds:[rsi]
   14000ad3d:	add    BYTE PTR [rsi+0x0],ah
   14000ad40:	imul   eax,DWORD PTR [rax],0x3e0067
   14000ad46:	cmp    al,0x0
   14000ad48:	push   rcx
   14000ad49:	add    BYTE PTR [rbp+0x0],dh
   14000ad4c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000ad50:	jns    0x14000ad52
   14000ad52:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14000ad56:	add    BYTE PTR fs:[rbp+0x0],ah
   14000ad5a:	add    BYTE PTR ds:[rax+rax*1],bh
   14000ad5e:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000ad62:	ins    DWORD PTR es:[rdi],dx
   14000ad63:	add    BYTE PTR [rbp+0x0],ah
   14000ad66:	add    BYTE PTR ds:[rip+0x3c007300],ah        # 0x17c01206d
   14000ad6d:	add    BYTE PTR [rdi],ch
   14000ad6f:	add    BYTE PTR [rsi+0x0],cl
   14000ad72:	(bad)  
   14000ad73:	add    BYTE PTR [rbp+0x0],ch
   14000ad76:	add    BYTE PTR gs:[rsi],bh
   14000ad79:	add    BYTE PTR [rax+rax*1],bh
   14000ad7c:	add    BYTE PTR [rbp+0x0],r12b
   14000ad80:	jae    0x14000ad82
   14000ad82:	movsxd eax,DWORD PTR [rax]
   14000ad84:	jb     0x14000ad86
   14000ad86:	imul   eax,DWORD PTR [rax],0x740070
   14000ad8c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ad92:	add    BYTE PTR ds:[rip+0x3c007300],ah        # 0x17c012099
   14000ad99:	add    BYTE PTR [rdi],ch
   14000ad9b:	add    BYTE PTR [rax+rax*1+0x65],al
   14000ad9f:	add    BYTE PTR [rbx+0x0],dh
   14000ada2:	movsxd eax,DWORD PTR [rax]
   14000ada4:	jb     0x14000ada6
   14000ada6:	imul   eax,DWORD PTR [rax],0x740070
   14000adac:	imul   eax,DWORD PTR [rax],0x6e006f
   14000adb2:	add    BYTE PTR ds:[rax+rax*1],bh
   14000adb6:	push   rcx
   14000adb7:	add    BYTE PTR [rbp+0x0],dh
   14000adba:	add    BYTE PTR gs:[rdx+0x0],dh
   14000adbe:	jns    0x14000adc0
   14000adc0:	rex.WR add BYTE PTR [rcx+0x0],r13b
   14000adc4:	jae    0x14000adc6
   14000adc6:	je     0x14000adc8
   14000adc8:	add    BYTE PTR ds:[rax+rax*1],bh
   14000adcc:	push   rcx
   14000adcd:	add    BYTE PTR [rbp+0x0],dh
   14000add0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000add4:	jns    0x14000add6
   14000add6:	and    BYTE PTR [rax],al
   14000add8:	rex.WB add BYTE PTR [r8+rax*1+0x3d],spl
   14000addd:	add    BYTE PTR [rdx],ah
   14000addf:	add    BYTE PTR [rax],dh
   14000ade1:	add    BYTE PTR [rdx],ah
   14000ade3:	add    BYTE PTR [rax],ah
   14000ade5:	add    BYTE PTR [rax+0x0],dl
   14000ade8:	(bad)  
   14000ade9:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000aded:	add    BYTE PTR [rip+0x41002200],bh        # 0x18100cff3
   14000adf3:	add    BYTE PTR [rax+0x0],dh
   14000adf6:	jo     0x14000adf8
   14000adf8:	ins    BYTE PTR es:[rdi],dx
   14000adf9:	add    BYTE PTR [rcx+0x0],ch
   14000adfc:	movsxd eax,DWORD PTR [rax]
   14000adfe:	(bad)  
   14000adff:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ae03:	add    BYTE PTR [rdi+0x0],ch
   14000ae06:	outs   dx,BYTE PTR ds:[rsi]
   14000ae07:	add    BYTE PTR [rdx],ah
   14000ae09:	add    BYTE PTR [rsi],bh
   14000ae0b:	add    BYTE PTR [rax+rax*1],bh
   14000ae0e:	push   rbx
   14000ae0f:	add    BYTE PTR [rbp+0x0],ah
   14000ae12:	ins    BYTE PTR es:[rdi],dx
   14000ae13:	add    BYTE PTR [rbp+0x0],ah
   14000ae16:	movsxd eax,DWORD PTR [rax]
   14000ae18:	je     0x14000ae1a
   14000ae1a:	and    BYTE PTR [rax],al
   14000ae1c:	push   rax
   14000ae1d:	add    BYTE PTR [rcx+0x0],ah
   14000ae20:	je     0x14000ae22
   14000ae22:	push   0x22003d00
   14000ae27:	add    BYTE PTR [rbp+0x0],cl
   14000ae2a:	imul   eax,DWORD PTR [rax],0x720063
   14000ae30:	outs   dx,DWORD PTR ds:[rsi]
   14000ae31:	add    BYTE PTR [rbx+0x0],dh
   14000ae34:	outs   dx,DWORD PTR ds:[rsi]
   14000ae35:	add    BYTE PTR [rsi+0x0],ah
   14000ae38:	je     0x14000ae3a
   14000ae3a:	sub    eax,0x69005700
   14000ae3f:	add    BYTE PTR [rsi+0x0],ch
   14000ae42:	add    BYTE PTR fs:[rdi+0x0],ch
   14000ae46:	ja     0x14000ae48
   14000ae48:	jae    0x14000ae4a
   14000ae4a:	sub    eax,0x72005000
   14000ae4f:	add    BYTE PTR [rcx+0x0],ch
   14000ae52:	outs   dx,BYTE PTR ds:[rsi]
   14000ae53:	add    BYTE PTR [rax+rax*1+0x42],dh
   14000ae57:	add    BYTE PTR [rdx+0x0],dl
   14000ae5a:	rex.WRB add BYTE PTR [r15],r13b
   14000ae5d:	add    BYTE PTR [rcx+0x0],al
   14000ae60:	add    BYTE PTR fs:[rbp+0x0],ch
   14000ae64:	imul   eax,DWORD PTR [rax],0x22006e
   14000ae6a:	add    BYTE PTR ds:[rdx],ch
   14000ae6d:	add    BYTE PTR [rbx+0x0],bl
   14000ae70:	push   rbx
   14000ae71:	add    BYTE PTR [rcx+0x0],bh
   14000ae74:	jae    0x14000ae76
   14000ae76:	je     0x14000ae78
   14000ae78:	add    BYTE PTR gs:[rbp+0x0],ch
   14000ae7c:	pop    rbx
   14000ae7d:	add    BYTE PTR [rax+0x0],dl
   14000ae80:	jb     0x14000ae82
   14000ae82:	outs   dx,DWORD PTR ds:[rsi]
   14000ae83:	add    BYTE PTR [rsi+0x0],dh
   14000ae86:	imul   eax,DWORD PTR [rax],0x650064
   14000ae8c:	jb     0x14000ae8e
   14000ae8e:	pop    rbx
   14000ae8f:	add    BYTE PTR [rax+0x0],al
   14000ae92:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000ae96:	ins    DWORD PTR es:[rdi],dx
   14000ae97:	add    BYTE PTR [rbp+0x0],ah
   14000ae9a:	cmp    eax,0x25002700
   14000ae9f:	add    BYTE PTR [rbx+0x0],dh
   14000aea2:	(bad)  
   14000aea3:	add    BYTE PTR [rbp+0x0],bl
   14000aea6:	pop    rbp
   14000aea7:	add    BYTE PTR [rbp+0x0],bl
   14000aeaa:	cmp    al,0x0
   14000aeac:	(bad)  
   14000aead:	add    BYTE PTR [rbx+0x0],dl
   14000aeb0:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   14000aeb5:	add    BYTE PTR [rbx+0x0],ah
   14000aeb8:	je     0x14000aeba
   14000aeba:	add    BYTE PTR ds:[rax+rax*1],bh
   14000aebe:	(bad)  
   14000aebf:	add    BYTE PTR [rcx+0x0],dl
   14000aec2:	jne    0x14000aec4
   14000aec4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000aec8:	jns    0x14000aeca
   14000aeca:	add    BYTE PTR ds:[rax+rax*1],bh
   14000aece:	(bad)  
   14000aecf:	add    BYTE PTR [rcx+0x0],dl
   14000aed2:	jne    0x14000aed4
   14000aed4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000aed8:	jns    0x14000aeda
   14000aeda:	rex.WR add BYTE PTR [rcx+0x0],r13b
   14000aede:	jae    0x14000aee0
   14000aee0:	je     0x14000aee2
   14000aee2:	add    BYTE PTR ds:[rax+rax*1],bh
   14000aee6:	(bad)  
   14000aee7:	add    BYTE PTR [rcx+0x0],dl
   14000aeea:	jne    0x14000aeec
   14000aeec:	add    BYTE PTR gs:[rdx+0x0],dh
   14000aef0:	jns    0x14000aef2
   14000aef2:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14000aef6:	add    BYTE PTR fs:[rbp+0x0],ah
   14000aefa:	add    BYTE PTR ds:[rax+rax*1],bh
   14000aefe:	(bad)  
   14000aeff:	add    BYTE PTR [rcx+0x0],dl
   14000af02:	jne    0x14000af04
   14000af04:	add    BYTE PTR gs:[rdx+0x0],dh
   14000af08:	jns    0x14000af0a
   14000af0a:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000af0e:	outs   dx,BYTE PTR ds:[rsi]
   14000af0f:	add    BYTE PTR [rsi+0x0],ah
   14000af12:	imul   eax,DWORD PTR [rax],0x3e0067
   14000af18:	cmp    al,0x0
   14000af1a:	(bad)  
   14000af1b:	add    BYTE PTR [rsi+0x0],dl
   14000af1e:	imul   eax,DWORD PTR [rax],0x770065
   14000af24:	add    BYTE PTR gs:[rdx+0x0],dh
   14000af28:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000af2c:	outs   dx,BYTE PTR ds:[rsi]
   14000af2d:	add    BYTE PTR [rsi+0x0],ah
   14000af30:	imul   eax,DWORD PTR [rax],0x3e0067
	...
   14000af3e:	add    BYTE PTR [rax],al
   14000af40:	and    eax,0x2d006400
   14000af45:	add    BYTE PTR [rip+0x2e003200],ah        # 0x16e00e14b
   14000af4b:	add    BYTE PTR [rdx],dh
   14000af4d:	add    BYTE PTR [rax+rax*1+0x2d],ah
   14000af51:	add    BYTE PTR [rip+0x2e003200],ah        # 0x16e00e157
   14000af57:	add    BYTE PTR [rdx],dh
   14000af59:	add    BYTE PTR [rax+rax*1+0x54],ah
   14000af5d:	add    BYTE PTR [rip+0x2e003200],ah        # 0x16e00e163
   14000af63:	add    BYTE PTR [rdx],dh
   14000af65:	add    BYTE PTR [rax+rax*1+0x3a],ah
   14000af69:	add    BYTE PTR [rip+0x2e003200],ah        # 0x16e00e16f
   14000af6f:	add    BYTE PTR [rdx],dh
   14000af71:	add    BYTE PTR [rax+rax*1+0x3a],ah
   14000af75:	add    BYTE PTR [rip+0x2e003200],ah        # 0x16e00e17b
   14000af7b:	add    BYTE PTR [rdx],dh
   14000af7d:	add    BYTE PTR [rax+rax*1+0x2e],ah
   14000af81:	add    BYTE PTR [rip+0x2e003300],ah        # 0x16e00e287
   14000af87:	add    BYTE PTR [rbx],dh
   14000af89:	add    BYTE PTR [rax+rax*1+0x5a],ah
   14000af8d:	add    BYTE PTR [rax],al
   14000af8f:	add    BYTE PTR [rdi],ch
   14000af91:	add    BYTE PTR [rbx+0x0],al
   14000af94:	and    BYTE PTR [rax],al
   14000af96:	and    al,BYTE PTR [rax]
   14000af98:	and    eax,0x5c007300
   14000af9d:	add    BYTE PTR [rdi+0x0],dh
   14000afa0:	add    BYTE PTR gs:[rsi+0x0],dh
   14000afa4:	je     0x14000afa6
   14000afa6:	jne    0x14000afa8
   14000afa8:	je     0x14000afaa
   14000afaa:	imul   eax,DWORD PTR [rax],0x2e006c
   14000afb0:	add    BYTE PTR gs:[rax+0x0],bh
   14000afb4:	add    BYTE PTR gs:[rax],ah
   14000afb7:	add    BYTE PTR [rcx+0x0],dh
   14000afba:	add    BYTE PTR gs:[rax],ah
   14000afbd:	add    BYTE PTR [rip+0x20007300],ah        # 0x1600122c3
   14000afc3:	add    BYTE PTR [rdi],ch
   14000afc5:	add    BYTE PTR [rbx+0x0],dh
   14000afc8:	jno    0x14000afca
   14000afca:	cmp    al,BYTE PTR [rax]
   14000afcc:	je     0x14000afce
   14000afce:	jb     0x14000afd0
   14000afd0:	jne    0x14000afd2
   14000afd2:	add    BYTE PTR gs:[rax],ah
   14000afd5:	add    BYTE PTR [rdi],ch
   14000afd7:	add    BYTE PTR [rbp+0x0],ah
   14000afda:	cmp    al,BYTE PTR [rax]
   14000afdc:	ins    BYTE PTR es:[rdi],dx
   14000afdd:	add    BYTE PTR [rdi+0x0],ch
   14000afe0:	add    BYTE PTR [eax],ah
   14000afe3:	add    BYTE PTR [rsi],bh
   14000afe5:	add    BYTE PTR [rax],ah
   14000afe7:	add    BYTE PTR [rip+0x22007300],ah        # 0x1620122ed
   14000afed:	add    BYTE PTR [rax],al
   14000afef:	add    BYTE PTR [rax+rax*1+0x63],bl
   14000aff3:	add    BYTE PTR [rbp+0x0],ch
   14000aff6:	add    BYTE PTR fs:[rsi],ch
   14000aff9:	add    BYTE PTR [rbp+0x0],ah
   14000affc:	js     0x14000affe
   14000affe:	add    BYTE PTR gs:[rax],al
   14000b001:	add    BYTE PTR [rax],al
   14000b003:	add    BYTE PTR [rip+0x7300],ah        # 0x140012309
   14000b009:	add    BYTE PTR [rax],al
   14000b00b:	add    BYTE PTR [rax],al
   14000b00d:	add    BYTE PTR [rax],al
   14000b00f:	add    BYTE PTR [rdx+rbx*2-0x177523e4],bl
   14000b016:	fimul  WORD PTR [rbp-0x5b]
   14000b019:	movabs eax,ds:0x10dbf7ae202af860
   14000b022:	xor    eax,0x2b7d7f97
   14000b027:	mov    DWORD PTR [r13+0x74],r14d
   14000b02b:	test   al,0x58
   14000b02d:	sub    bl,dl
   14000b02f:	push   rsp
   14000b030:	ss push rcx
   14000b032:	clc    
   14000b033:	rex.X jle 0x14000b011
   14000b036:	pushf  
   14000b037:	rex.XB test r9d,esi
   14000b03a:	in     al,0x7
   14000b03c:	pop    rbp
   14000b03d:	adc    ebx,DWORD PTR [rdi-0x38]
   14000b040:	(bad)  
   14000b041:	out    dx,al
   14000b042:	or     edx,edx
   14000b044:	test   al,0x5c
   14000b046:	add    eax,0xbf3bae49
   14000b04b:	and    eax,0x539ba01e
	...
   14000b058:	rol    BYTE PTR [rax],0x0
   14000b05b:	add    BYTE PTR [rax],al
   14000b05d:	add    BYTE PTR [rax],al
   14000b05f:	rex.RX xor BYTE PTR [rdx],r15b
   14000b062:	jae    0x14000b080
   14000b064:	sbb    al,0x2a
   14000b066:	(bad)  
   14000b067:	adc    DWORD PTR [rbp+0xaa00e5],ebp
   14000b06d:	rex.R ja 0x14000b0ad
   14000b070:	xor    BYTE PTR [rax],al
   14000b072:	add    BYTE PTR [rax],al
   14000b074:	add    BYTE PTR [rax],al
   14000b076:	add    BYTE PTR [rax],al
   14000b078:	rol    BYTE PTR [rax],0x0
   14000b07b:	add    BYTE PTR [rax],al
   14000b07d:	add    BYTE PTR [rax],al
   14000b07f:	rex.RX sub DWORD PTR [rax],r8d
   14000b082:	add    BYTE PTR [rax],al
   14000b084:	add    BYTE PTR [rax],al
   14000b086:	add    BYTE PTR [rax],al
   14000b088:	rol    BYTE PTR [rax],0x0
   14000b08b:	add    BYTE PTR [rax],al
   14000b08d:	add    BYTE PTR [rax],al
   14000b08f:	rex.RX xchg ebp,eax
   14000b091:	mov    edi,0x7b362933
   14000b096:	rcl    BYTE PTR [rcx],cl
   14000b098:	mov    dl,0xe
   14000b09a:	add    al,al
   14000b09c:	rex.WRXB cdqe 
   14000b09e:	ds (bad) 
   14000b0a0:	adc    DWORD PTR [rdi],ecx
   14000b0a2:	fdecstp 
   14000b0a4:	jae    0x14000b042
   14000b0a6:	rcl    DWORD PTR [rcx],cl
   14000b0a8:	mov    bl,0x2e
   14000b0aa:	add    al,al
   14000b0ac:	rex.WRXB cqo 
   14000b0ae:	or     esi,DWORD PTR [rsp+rsi*4+0x2fb8f059]
   14000b0b5:	(bad)  
   14000b0b6:	xchg   esp,eax
   14000b0b7:	test   DWORD PTR [r13+rcx*1+0x2ce4eff8],ebp
   14000b0bf:	cmp    al,0x87
   14000b0c1:	sar    cl,1
   14000b0c3:	movabs al,ds:0xcd242580482ab725
   14000b0cc:	sbb    DWORD PTR [rdx-0x2e955a5c],0xffffffb7
   14000b0d3:	pop    rcx
   14000b0d4:	or     ebx,eax
   14000b0d6:	(bad)  
   14000b0d7:	rex.RXB xchg r14d,eax
   14000b0d9:	cmp    ebx,DWORD PTR ss:[ebx+0x3b55828d]
   14000b0e1:	(bad)  
   14000b0e2:	rex.WR
   14000b0e3:	rex.WB and al,0x10
   14000b0e6:	ror    DWORD PTR [rbp-0x77],1
   14000b0e9:	shl    DWORD PTR [rcx+0x37],cl
   14000b0ec:	test   al,ch
   14000b0ee:	and    BYTE PTR [rdx+rdi*8+0x75],al
   14000b0f2:	rex.WXB loope 0x14000b0e2
   14000b0f5:	(bad)  
   14000b0f6:	push   rax
   14000b0f7:	rex pushf 
   14000b0f9:	pop    rbp
   14000b0fa:	cld    
   14000b0fb:	ret    
   14000b0fc:	in     al,dx
   14000b0fd:	cmp    BYTE PTR [rcx+rsi*4-0x59],bl
   14000b101:	(bad)  
   14000b102:	or     ecx,DWORD PTR [rax+0x49046644]
   14000b108:	mov    esi,0xcace5f81
   14000b10d:	clc    
   14000b10e:	dec    BYTE PTR [rbx]
   14000b110:	in     eax,0xeb
   14000b112:	leave  
   14000b113:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b114:	cmc    
   14000b115:	and    eax,0x4f33494
   14000b11a:	rex.W nop
   14000b11c:	lods   al,BYTE PTR ds:[rsi]
   14000b11d:	movabs ds:0xb40dcf3f502e0f1d,eax
   14000b126:	jno    0x14000b168
   14000b128:	cdq    
   14000b129:	outs   dx,DWORD PTR ds:[rsi]
   14000b12a:	add    BYTE PTR [rax-0x716c20e2],bl
	...
   14000b138:	add    DWORD PTR [rax],eax
   14000b13a:	add    BYTE PTR [rax],al
   14000b13c:	add    DWORD PTR [rax],eax
   14000b13e:	add    BYTE PTR [rax],al
   14000b140:	add    BYTE PTR [rax],al
   14000b142:	add    BYTE PTR [rax],al
   14000b144:	add    DWORD PTR [rax],eax
   14000b146:	add    BYTE PTR [rax],al
   14000b148:	add    DWORD PTR [rax],eax
   14000b14a:	add    BYTE PTR [rax],al
   14000b14c:	add    DWORD PTR [rax],eax
	...
   14000b156:	add    BYTE PTR [rax],al
   14000b158:	add    DWORD PTR [rax],eax
   14000b15a:	add    BYTE PTR [rax],al
   14000b15c:	add    al,BYTE PTR [rax]
   14000b15e:	add    BYTE PTR [rax],al
   14000b160:	add    BYTE PTR [rax],al
   14000b162:	add    BYTE PTR [rax],al
   14000b164:	add    DWORD PTR [rax],eax
   14000b166:	add    BYTE PTR [rax],al
   14000b168:	add    DWORD PTR [rax],eax
   14000b16a:	add    BYTE PTR [rax],al
   14000b16c:	add    al,BYTE PTR [rax]
   14000b16e:	add    BYTE PTR [rax],al
   14000b170:	xor    edi,edi
   14000b172:	(bad)  
   14000b173:	(bad)  
   14000b174:	call   0x12900b17c
   14000b179:	add    eax,DWORD PTR [rax]
   14000b17b:	add    BYTE PTR [rdx],al
   14000b17d:	add    BYTE PTR [rax],al
   14000b17f:	add    BYTE PTR [rcx],dh
   14000b181:	(bad)  
   14000b182:	(bad)  
   14000b183:	(bad)  
   14000b184:	in     eax,dx
   14000b185:	add    eax,DWORD PTR [rax]
   14000b187:	add    cl,ch
   14000b189:	add    eax,DWORD PTR [rax]
   14000b18b:	add    BYTE PTR [rdx],al
   14000b18d:	add    BYTE PTR [rax],al
   14000b18f:	add    BYTE PTR [rcx],dh
   14000b191:	(bad)  
   14000b192:	(bad)  
   14000b193:	(bad)  
   14000b194:	call   0x12a00b19c
   14000b199:	add    eax,DWORD PTR [rax]
   14000b19b:	add    BYTE PTR [rdx],al
   14000b19d:	add    BYTE PTR [rax],al
   14000b19f:	add    BYTE PTR [rcx],dh
   14000b1a1:	(bad)  
   14000b1a2:	(bad)  
   14000b1a3:	(bad)  
   14000b1a4:	in     eax,dx
   14000b1a5:	add    eax,DWORD PTR [rax]
   14000b1a7:	add    dl,ch
   14000b1a9:	add    eax,DWORD PTR [rax]
   14000b1ab:	add    BYTE PTR [rdx],al
   14000b1ad:	add    BYTE PTR [rax],al
   14000b1af:	add    BYTE PTR [rcx],dh
   14000b1b1:	(bad)  
   14000b1b2:	(bad)  
   14000b1b3:	(bad)  
   14000b1b4:	jmp    0x12b00b1bc
   14000b1b9:	add    eax,DWORD PTR [rax]
   14000b1bb:	add    BYTE PTR [rdx],al
   14000b1bd:	add    BYTE PTR [rax],al
   14000b1bf:	add    BYTE PTR [rcx],dh
   14000b1c1:	(bad)  
   14000b1c2:	(bad)  
   14000b1c3:	(bad)  
   14000b1c4:	in     eax,dx
   14000b1c5:	add    eax,DWORD PTR [rax]
   14000b1c7:	add    bl,ch
   14000b1c9:	add    eax,DWORD PTR [rax]
   14000b1cb:	add    BYTE PTR [rdx],al
   14000b1cd:	add    BYTE PTR [rax],al
   14000b1cf:	add    BYTE PTR [rcx],dh
   14000b1d1:	(bad)  
   14000b1d2:	(bad)  
   14000b1d3:	(bad)  
   14000b1d4:	(bad)  
   14000b1d5:	add    eax,DWORD PTR [rax]
   14000b1d7:	add    ah,ch
   14000b1d9:	add    eax,DWORD PTR [rax]
   14000b1db:	add    BYTE PTR [rdx],al
   14000b1dd:	add    BYTE PTR [rax],al
   14000b1df:	add    BYTE PTR [rcx],dh
   14000b1e1:	(bad)  
   14000b1e2:	(bad)  
   14000b1e3:	(bad)  
   14000b1e4:	jmp    0x14000b1e9
   14000b1e6:	add    BYTE PTR [rax],al
   14000b1e8:	in     al,dx
   14000b1e9:	add    eax,DWORD PTR [rax]
   14000b1eb:	add    BYTE PTR [rdx],al
   14000b1ed:	add    BYTE PTR [rax],al
   14000b1ef:	add    BYTE PTR [rcx],dh
   14000b1f1:	(bad)  
   14000b1f2:	(bad)  
   14000b1f3:	(bad)  
   14000b1f4:	call   0x12d00b1fc
   14000b1f9:	add    eax,DWORD PTR [rax]
   14000b1fb:	add    BYTE PTR [rdx],al
   14000b1fd:	add    BYTE PTR [rax],al
   14000b1ff:	add    BYTE PTR [rcx],dh
   14000b201:	(bad)  
   14000b202:	(bad)  
   14000b203:	(bad)  
   14000b204:	jmp    0x12d00b20c
   14000b209:	add    eax,DWORD PTR [rax]
   14000b20b:	add    BYTE PTR [rdx],al
   14000b20d:	add    BYTE PTR [rax],al
   14000b20f:	add    BYTE PTR [rcx],dh
   14000b211:	(bad)  
   14000b212:	(bad)  
   14000b213:	(bad)  
   14000b214:	(bad)  
   14000b215:	add    eax,DWORD PTR [rax]
   14000b217:	add    ch,ch
   14000b219:	add    eax,DWORD PTR [rax]
   14000b21b:	add    BYTE PTR [rdx],al
   14000b21d:	add    BYTE PTR [rax],al
   14000b21f:	add    BYTE PTR [rax],bh
   14000b221:	(bad)  
   14000b222:	(bad)  
   14000b223:	(bad)  
   14000b224:	in     al,dx
   14000b225:	add    eax,DWORD PTR [rax]
   14000b227:	add    BYTE PTR [rax],al
   14000b229:	add    BYTE PTR [rax],al
   14000b22b:	add    BYTE PTR [rax+rax*1],al
   14000b22e:	add    BYTE PTR [rax],al
   14000b230:	cmp    bh,bh
   14000b232:	(bad)  
   14000b233:	(bad)  
   14000b234:	in     eax,dx
   14000b235:	add    eax,DWORD PTR [rax]
   14000b237:	add    BYTE PTR [rax],al
   14000b239:	add    BYTE PTR [rax],al
   14000b23b:	add    BYTE PTR [rax+rax*1],al
   14000b23e:	add    BYTE PTR [rax],al
   14000b240:	cmp    bh,bh
   14000b242:	(bad)  
   14000b243:	(bad)  
   14000b244:	call   0x14200b24c
   14000b249:	add    BYTE PTR [rax],al
   14000b24b:	add    BYTE PTR [rax+rax*1],al
   14000b24e:	add    BYTE PTR [rax],al
   14000b250:	cmp    bh,bh
   14000b252:	(bad)  
   14000b253:	(bad)  
   14000b254:	jmp    0x14200b25c
   14000b259:	add    BYTE PTR [rax],al
   14000b25b:	add    BYTE PTR [rax+rax*1],al
   14000b25e:	add    BYTE PTR [rax],al
   14000b260:	cmp    bh,bh
   14000b262:	(bad)  
   14000b263:	(bad)  
   14000b264:	(bad)  
   14000b265:	add    eax,DWORD PTR [rax]
   14000b267:	add    BYTE PTR [rdx],al
   14000b269:	add    BYTE PTR [rax],al
   14000b26b:	add    BYTE PTR [rax+rax*1],al
	...
   14000b276:	add    BYTE PTR [rax],al
   14000b278:	add    eax,0x5000000
   14000b27d:	add    BYTE PTR [rax],al
   14000b27f:	add    BYTE PTR [rax],al
   14000b281:	add    BYTE PTR [rax],al
   14000b283:	add    BYTE PTR [rcx],al
   14000b285:	add    BYTE PTR [rax],al
   14000b287:	add    BYTE PTR [rip+0x5000000],al        # 0x14500b28d
   14000b28d:	add    BYTE PTR [rax],al
   14000b28f:	add    BYTE PTR [rax],al
   14000b291:	add    BYTE PTR [rax],al
   14000b293:	add    BYTE PTR [rcx+rdi*1+0x559f],al
   14000b29a:	add    BYTE PTR [rax],al
   14000b29c:	add    al,BYTE PTR [rax]
   14000b29e:	add    BYTE PTR [rax],al
   14000b2a0:	(bad)  
   14000b2a1:	add    BYTE PTR [rax],al
   14000b2a3:	add    BYTE PTR [rax-0x6fffff4d],dl
   14000b2a9:	cdq    
   14000b2aa:	add    BYTE PTR [rax],al
   14000b2ac:	add    BYTE PTR [rax],al
   14000b2ae:	add    BYTE PTR [rax],al
   14000b2b0:	test   BYTE PTR [rcx],bh
   14000b2b2:	lahf   
   14000b2b3:	push   rbp
   14000b2b4:	add    BYTE PTR [rax],al
   14000b2b6:	add    BYTE PTR [rax],al
   14000b2b8:	or     eax,0x2c000000
   14000b2bd:	add    al,BYTE PTR [rax]
   14000b2bf:	add    ah,cl
   14000b2c1:	mov    bl,0x0
   14000b2c3:	add    ah,cl
   14000b2c5:	cdq    
	...
   14000b2ee:	add    BYTE PTR [rax],al
   14000b2f0:	movabs al,ds:0x0
	...
   14000b345:	add    BYTE PTR [rax],al
   14000b347:	add    BYTE PTR [rax],cl
   14000b349:	rol    BYTE PTR [rax],1
   14000b34b:	rex add DWORD PTR [rax],eax
	...
   14000b35e:	add    BYTE PTR [rax],al
   14000b360:	and    BYTE PTR [rax+rax*1+0x140],ah
   14000b367:	add    BYTE PTR [rax],ch
   14000b369:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b36a:	add    BYTE PTR [rax+0x1],al
   14000b36d:	add    BYTE PTR [rax],al
   14000b36f:	add    BYTE PTR [rax+0x14000a4],al
   14000b375:	add    BYTE PTR [rax],al
   14000b377:	add    BYTE PTR [rax+0x0],dl
   14000b37a:	add    BYTE PTR [rax],al
   14000b37c:	add    BYTE PTR [rax],al
   14000b37e:	add    BYTE PTR [rax],al
   14000b380:	add    BYTE PTR [rip+0x0],dh        # 0x14000b386
	...
   14000b38e:	add    BYTE PTR [rax],al
   14000b390:	push   rdx
   14000b391:	push   rbx
   14000b392:	rex.R push rbx
   14000b394:	sub    BYTE PTR es:[rax],cl
   14000b397:	(bad)  
   14000b398:	and    ebp,DWORD PTR [rbx+0x55]
   14000b39b:	rex.X stos BYTE PTR es:[rdi],al
   14000b39d:	out    0x24,al
   14000b39f:	(bad)  
   14000b3a0:	push   0xffffffffffffff94
   14000b3a2:	stos   DWORD PTR es:[rdi],eax
   14000b3a3:	rol    DWORD PTR [rcx],0x0
   14000b3a6:	add    BYTE PTR [rax],al
   14000b3a8:	push   rax
   14000b3a9:	jb     0x14000b414
   14000b3ab:	outs   dx,BYTE PTR ds:[rsi]
   14000b3ac:	je     0x14000b3f0
   14000b3ae:	jb     0x14000b41d
   14000b3b0:	push   rbp
   14000b3b1:	rex.WB
   14000b3b2:	cs jo  0x14000b419
   14000b3b5:	(bad)  
	...
   14000b3ca:	add    BYTE PTR [rax],al
   14000b3cc:	rex.RXB
   14000b3cd:	rex.XB push r12
   14000b3cf:	rex.WR add BYTE PTR [rax],r10b
   14000b3d2:	add    BYTE PTR [rax],al
   14000b3d4:	pop    rbp
   14000b3d5:	add    BYTE PTR [rax],al
   14000b3d7:	add    BYTE PTR [rsi],ch
   14000b3d9:	je     0x14000b440
   14000b3db:	js     0x14000b451
   14000b3dd:	and    al,0x64
   14000b3df:	imul   eax,DWORD PTR [rax],0x60000000
   14000b3e5:	adc    BYTE PTR [rax],al
   14000b3e7:	add    BYTE PTR [rax+rax*4],bl
   14000b3ea:	add    BYTE PTR [rax],al
   14000b3ec:	cs je  0x14000b454
   14000b3ef:	js     0x14000b465
   14000b3f1:	and    al,0x6d
   14000b3f3:	outs   dx,BYTE PTR ds:[rsi]
   14000b3f4:	add    BYTE PTR [rax],al
   14000b3f6:	add    BYTE PTR [rax],al
   14000b3f8:	adc    BYTE PTR [rax+0x120000],0x0
   14000b3ff:	add    BYTE PTR [rsi],ch
   14000b401:	je     0x14000b468
   14000b403:	js     0x14000b479
   14000b405:	and    al,0x6d
   14000b407:	outs   dx,BYTE PTR ds:[rsi]
   14000b408:	and    al,0x30
   14000b40a:	xor    BYTE PTR [rax],al
   14000b40c:	movabs al,ds:0x2e00000097000090
   14000b415:	je     0x14000b47c
   14000b417:	js     0x14000b48d
   14000b419:	and    al,0x78
   14000b41b:	add    BYTE PTR [rax],bh
   14000b41d:	xchg   ecx,eax
   14000b41e:	add    BYTE PTR [rax],al
   14000b420:	movabs al,ds:0x747865742e000000
   14000b429:	and    al,0x79
   14000b42b:	add    BYTE PTR fs:[rax],al
   14000b42e:	add    BYTE PTR [rax],al
   14000b430:	add    BYTE PTR [rax+0x4200000],ah
   14000b436:	add    BYTE PTR [rax],al
   14000b438:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   14000b441:	add    BYTE PTR [rax],al
   14000b443:	add    BYTE PTR [rax],ah
   14000b445:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b446:	add    BYTE PTR [rax],al
   14000b448:	adc    BYTE PTR [rax],al
   14000b44a:	add    BYTE PTR [rax],al
   14000b44c:	xor    BYTE PTR cs:[rax],dh
   14000b44f:	movsxd esp,DWORD PTR [rsi+0x67]
   14000b452:	add    BYTE PTR [rax],al
   14000b454:	xor    BYTE PTR [rax+rax*1+0x800],ah
   14000b45b:	add    BYTE PTR [rsi],ch
   14000b45d:	rex.XB push r10
   14000b45f:	push   rsp
   14000b460:	and    al,0x58
   14000b462:	rex.XB
   14000b463:	add    BYTE PTR [r8],al
   14000b466:	add    BYTE PTR [rax],al
   14000b468:	cmp    BYTE PTR [rax+rax*1+0x800],ah
   14000b46f:	add    BYTE PTR [rsi],ch
   14000b471:	rex.XB push r10
   14000b473:	push   rsp
   14000b474:	and    al,0x58
   14000b476:	rex.XB
   14000b477:	rex.B
   14000b478:	add    BYTE PTR [r8],al
   14000b47b:	add    BYTE PTR [rax-0x5c],al
   14000b47e:	add    BYTE PTR [rax],al
   14000b480:	sbb    BYTE PTR [rax],al
   14000b482:	add    BYTE PTR [rax],al
   14000b484:	cs rex.XB push r10
   14000b487:	push   rsp
   14000b488:	and    al,0x58
   14000b48a:	rex.XB push r13
   14000b48c:	add    BYTE PTR [rax],al
   14000b48e:	add    BYTE PTR [rax],al
   14000b490:	pop    rax
   14000b491:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b492:	add    BYTE PTR [rax],al
   14000b494:	or     BYTE PTR [rax],al
   14000b496:	add    BYTE PTR [rax],al
   14000b498:	cs rex.XB push r10
   14000b49b:	push   rsp
   14000b49c:	and    al,0x58
   14000b49e:	rex.XB pop r10
   14000b4a0:	add    BYTE PTR [rax],al
   14000b4a2:	add    BYTE PTR [rax],al
   14000b4a4:	(bad)  
   14000b4a5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b4a6:	add    BYTE PTR [rax],al
   14000b4a8:	or     BYTE PTR [rax],al
   14000b4aa:	add    BYTE PTR [rax],al
   14000b4ac:	cs rex.XB push r10
   14000b4af:	push   rsp
   14000b4b0:	and    al,0x58
   14000b4b2:	rex.WB
   14000b4b3:	add    BYTE PTR [r8],al
   14000b4b6:	add    BYTE PTR [rax],al
   14000b4b8:	push   0x80000a4
   14000b4bd:	add    BYTE PTR [rax],al
   14000b4bf:	add    BYTE PTR [rsi],ch
   14000b4c1:	rex.XB push r10
   14000b4c3:	push   rsp
   14000b4c4:	and    al,0x58
   14000b4c6:	rex.WB
   14000b4c7:	rex.B
   14000b4c8:	add    BYTE PTR [r8],al
   14000b4cb:	add    BYTE PTR [rax-0x5c],dh
   14000b4ce:	add    BYTE PTR [rax],al
   14000b4d0:	or     BYTE PTR [rax],al
   14000b4d2:	add    BYTE PTR [rax],al
   14000b4d4:	cs rex.XB push r10
   14000b4d7:	push   rsp
   14000b4d8:	and    al,0x58
   14000b4da:	rex.WB pop r9
   14000b4dc:	add    BYTE PTR [rax],al
   14000b4de:	add    BYTE PTR [rax],al
   14000b4e0:	js     0x14000b486
   14000b4e2:	add    BYTE PTR [rax],al
   14000b4e4:	or     BYTE PTR [rax],al
   14000b4e6:	add    BYTE PTR [rax],al
   14000b4e8:	cs rex.XB push r10
   14000b4eb:	push   rsp
   14000b4ec:	and    al,0x58
   14000b4ee:	rex.WB pop r10
   14000b4f0:	add    BYTE PTR [rax],al
   14000b4f2:	add    BYTE PTR [rax],al
   14000b4f4:	and    BYTE PTR [rax+rax*1+0x14000],0x0
   14000b4fc:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   14000b505:	add    BYTE PTR [rax],al
   14000b507:	add    al,al
   14000b509:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b50a:	add    BYTE PTR [rax],al
   14000b50c:	ror    BYTE PTR [rip+0x722e0000],1        # 0x1b22eb512
   14000b512:	fs (bad) 
   14000b514:	je     0x14000b577
   14000b516:	add    BYTE PTR [rax],al
   14000b518:	nop
   14000b519:	mov    bl,0x0
   14000b51b:	add    BYTE PTR [rax+0x2],ch
   14000b51e:	add    BYTE PTR [rax],al
   14000b520:	cs jb  0x14000b587
   14000b523:	(bad)  
   14000b524:	je     0x14000b587
   14000b526:	and    al,0x7a
   14000b528:	jp     0x14000b5a4
   14000b52a:	fs (bad) 
   14000b52c:	add    BYTE PTR [eax],al
   14000b52f:	add    al,bh
   14000b531:	mov    ch,0x0
   14000b533:	add    BYTE PTR [rax+0x6],ch
   14000b536:	add    BYTE PTR [rax],al
   14000b538:	cs js  0x14000b59f
   14000b53b:	(bad)  
   14000b53c:	je     0x14000b59f
   14000b53e:	add    BYTE PTR [rax],al
   14000b540:	(bad)  
   14000b541:	mov    esp,0xdb0000
   14000b546:	add    BYTE PTR [rax],al
   14000b548:	cs gs fs (bad) 
   14000b54c:	je     0x14000b5af
   14000b54e:	add    BYTE PTR [rax],al
   14000b550:	cmp    al,0xbd
   14000b552:	add    BYTE PTR [rax],al
   14000b554:	lock add BYTE PTR [rax],al
   14000b557:	add    BYTE PTR [rsi],ch
   14000b559:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   14000b561:	add    BYTE PTR [rax],al
   14000b563:	add    BYTE PTR [rsi+rdi*4],ch
   14000b566:	add    BYTE PTR [rax],al
   14000b568:	adc    al,0x0
   14000b56a:	add    BYTE PTR [rax],al
   14000b56c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000b575:	add    BYTE PTR [rax],al
   14000b577:	add    BYTE PTR [rax-0x42],al
   14000b57a:	add    BYTE PTR [rax],al
   14000b57c:	and    BYTE PTR [rax+rax*1],al
   14000b57f:	add    BYTE PTR [rsi],ch
   14000b581:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000b589:	add    BYTE PTR [rax],al
   14000b58b:	add    BYTE PTR [rax-0x3e],ah
   14000b58e:	add    BYTE PTR [rax],al
   14000b590:	or     BYTE PTR cs:[rax],al
   14000b593:	add    BYTE PTR [rsi],ch
   14000b595:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   14000b59d:	add    BYTE PTR [rax],al
   14000b59f:	add    BYTE PTR [rax],al
   14000b5a1:	rol    BYTE PTR [rax],1
   14000b5a3:	add    BYTE PTR [rax],bh
   14000b5a5:	add    BYTE PTR [rax],al
   14000b5a7:	add    BYTE PTR [rsi],ch
   14000b5a9:	fs (bad) 
   14000b5ab:	je     0x14000b60e
   14000b5ad:	add    BYTE PTR [rax],al
   14000b5af:	add    BYTE PTR [rax-0x30],al
   14000b5b2:	add    BYTE PTR [rax],al
   14000b5b4:	rex.W (bad) 
   14000b5b6:	add    BYTE PTR [rax],al
   14000b5b8:	cs (bad) 
   14000b5bb:	jae    0x14000b5bd
   14000b5bd:	add    BYTE PTR [rax],al
   14000b5bf:	add    BYTE PTR [rax],al
   14000b5c1:	loopne 0x14000b5c3
   14000b5c3:	add    al,dl
   14000b5c5:	add    eax,0x702e0000
   14000b5ca:	fs (bad) 
   14000b5cc:	je     0x14000b62f
   14000b5ce:	add    BYTE PTR [rax],al
   14000b5d0:	add    al,dh
   14000b5d2:	add    BYTE PTR [rax],al
   14000b5d4:	push   rax
   14000b5d5:	add    al,0x0
   14000b5d7:	add    BYTE PTR [rsi],ch
   14000b5d9:	jb     0x14000b64e
   14000b5db:	jb     0x14000b640
   14000b5dd:	and    al,0x30
   14000b5df:	xor    DWORD PTR [rax],eax
   14000b5e1:	add    BYTE PTR [rax],al
   14000b5e3:	add    BYTE PTR [rax-0xc],dl
   14000b5e6:	add    BYTE PTR [rax],al
   14000b5e8:	rcr    BYTE PTR [rax+rax*1+0x0],1
   14000b5ec:	cs jb  0x14000b662
   14000b5ef:	jb     0x14000b654
   14000b5f1:	and    al,0x30
   14000b5f3:	xor    al,BYTE PTR [rax]
   14000b5f5:	add    BYTE PTR [rax],al
   14000b5f7:	add    BYTE PTR [rcx],al
   14000b5f9:	add    eax,0x34050002
   14000b5fe:	add    DWORD PTR [rax],eax
   14000b600:	add    DWORD PTR [rsi],eax
   14000b602:	add    al,BYTE PTR [rax]
   14000b604:	(bad)  
   14000b605:	push   rdx
   14000b606:	add    dh,BYTE PTR [rax]
   14000b608:	sbb    DWORD PTR [rdi],esi
   14000b60a:	or     eax,0x8f742600
   14000b60f:	add    BYTE PTR [rsi],ah
   14000b611:	mov    es,WORD PTR fs:[rax]
   14000b614:	es xor al,0x8d
   14000b617:	add    BYTE PTR [rsi],ah
   14000b619:	add    DWORD PTR [rsi+0x16f01800],eax
   14000b61f:	loopne 0x14000b635
   14000b621:	rcl    BYTE PTR [rdx],1
   14000b623:	rcl    BYTE PTR [rax],0x50
   14000b626:	add    BYTE PTR [rax],al
   14000b628:	fmul   QWORD PTR [rdi+0x4200000]
   14000b62e:	add    BYTE PTR [rax],al
   14000b630:	sbb    DWORD PTR [rax],esi
   14000b632:	or     eax,DWORD PTR [rax]
   14000b634:	(bad)  
   14000b635:	xor    al,0x9a
   14000b637:	add    BYTE PTR [rdi],bl
   14000b639:	add    DWORD PTR [rax+0xef01000],edx
   14000b63f:	loopne 0x14000b64d
   14000b641:	ror    BYTE PTR [rdx],1
   14000b643:	ror    BYTE PTR [rax],0x70
   14000b646:	(bad)  
   14000b647:	(bad)  
   14000b648:	(bad)  
   14000b649:	push   rax
   14000b64a:	add    BYTE PTR [rax],al
   14000b64c:	fmul   QWORD PTR [rdi+0x4700000]
   14000b652:	add    BYTE PTR [rax],al
   14000b654:	sbb    DWORD PTR [rcx],esp
   14000b656:	or     BYTE PTR [rax],al
   14000b658:	adc    dl,BYTE PTR [rbp+rcx*1+0x0]
   14000b65c:	adc    dh,BYTE PTR [rsp+rcx*1]
   14000b65f:	add    BYTE PTR [rdx],dl
   14000b661:	push   rdx
   14000b662:	(bad)  
   14000b663:	loopne 0x14000b671
   14000b665:	jo     0x14000b672
   14000b667:	(bad)  
   14000b668:	fmul   QWORD PTR [rdi+0x280000]
   14000b66e:	add    BYTE PTR [rax],al
   14000b670:	add    DWORD PTR [rip+0x64150008],edx        # 0x1a415b67e
   14000b676:	adc    DWORD PTR [rax],eax
   14000b678:	adc    eax,0x15001034
   14000b67d:	xchg   edx,eax
   14000b67e:	(bad)  
   14000b67f:	loopne 0x14000b68d
   14000b681:	jo     0x14000b68e
   14000b683:	push   rax
   14000b684:	add    DWORD PTR [rdi],eax
   14000b686:	add    DWORD PTR [rax],eax
   14000b688:	(bad)  
   14000b689:	(bad)  
   14000b68a:	add    BYTE PTR [rax],al
   14000b68c:	add    DWORD PTR [rbx],ecx
   14000b68e:	add    DWORD PTR [rax],eax
   14000b690:	or     esp,DWORD PTR [rdx+0x0]
   14000b693:	add    BYTE PTR [rcx],al
   14000b695:	sbb    BYTE PTR [rdx],cl
   14000b697:	add    BYTE PTR [rax],bl
   14000b699:	or     al,BYTE PTR fs:[rax]
   14000b69c:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14000b6a0:	sbb    BYTE PTR [rax+rcx*1],dh
   14000b6a3:	add    BYTE PTR [rax],bl
   14000b6a5:	xor    dl,BYTE PTR [rax+rsi*8]
   14000b6a8:	adc    ah,al
   14000b6aa:	adc    BYTE PTR [rax+0x1],dh
   14000b6ad:	sbb    DWORD PTR [rdx],ecx
   14000b6af:	add    BYTE PTR [rcx],bl
   14000b6b1:	je     0x14000b6bc
   14000b6b3:	add    BYTE PTR [rcx],bl
   14000b6b5:	or     BYTE PTR fs:[rax],al
   14000b6b8:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000b6bc:	sbb    DWORD PTR [rsi+rax*1],esi
   14000b6bf:	add    BYTE PTR [rcx],bl
   14000b6c1:	xor    dl,BYTE PTR [rip+0xd3719e0]        # 0x14d37d0a7
   14000b6c7:	add    BYTE PTR [rsi],ah
   14000b6c9:	je     0x14000b6aa
   14000b6cb:	add    BYTE PTR [rsi],ah
   14000b6cd:	fiadd  WORD PTR fs:[rax]
   14000b6d0:	es xor al,0xdd
   14000b6d3:	add    BYTE PTR [rsi],ah
   14000b6d5:	add    esi,edx
   14000b6d7:	add    BYTE PTR [rax],bl
   14000b6d9:	lock (bad) 
   14000b6db:	loopne 0x14000b6f1
   14000b6dd:	rcl    BYTE PTR [rdx],1
   14000b6df:	rcl    BYTE PTR [rax],0x50
   14000b6e2:	add    BYTE PTR [rax],al
   14000b6e4:	fmul   QWORD PTR [rdi+0x6a00000]
   14000b6ea:	add    BYTE PTR [rax],al
   14000b6ec:	add    DWORD PTR [rcx+rax*1],eax
   14000b6ef:	add    BYTE PTR [rdx+rax*2],al
   14000b6f2:	add    BYTE PTR [rax],al
   14000b6f4:	add    DWORD PTR [rsi],eax
   14000b6f6:	add    al,BYTE PTR [rax]
   14000b6f8:	(bad)  
   14000b6f9:	xor    al,BYTE PTR [rdx]
   14000b6fb:	xor    BYTE PTR [rcx],al
   14000b6fd:	sbb    al,0xc
   14000b6ff:	add    BYTE PTR [rsp+riz*2],bl
   14000b702:	or     al,0x0
   14000b704:	sbb    al,0x54
   14000b706:	or     eax,DWORD PTR [rax]
   14000b708:	sbb    al,0x34
   14000b70a:	or     al,BYTE PTR [rax]
   14000b70c:	sbb    al,0x32
   14000b70e:	sbb    al,dh
   14000b710:	(bad)  
   14000b711:	loopne 0x14000b727
   14000b713:	rcl    BYTE PTR [rdx],1
   14000b715:	rcl    BYTE PTR [rax],0x70
   14000b718:	add    DWORD PTR [rdx],edx
   14000b71a:	add    eax,0xe421200
   14000b71f:	jo     0x14000b72e
   14000b721:	(bad)  
   14000b722:	or     al,0x50
   14000b724:	or     esi,DWORD PTR [rax]
   14000b726:	add    BYTE PTR [rax],al
   14000b728:	add    DWORD PTR [rcx+rax*1],eax
   14000b72b:	add    BYTE PTR [rdx+riz*2],al
   14000b72e:	add    BYTE PTR [rax],al
   14000b730:	add    DWORD PTR [rax],edx
   14000b732:	(bad)  
   14000b733:	add    BYTE PTR [rax],dl
   14000b735:	push   rsp
   14000b736:	or     DWORD PTR [rax],eax
   14000b738:	adc    BYTE PTR [rax+rcx*1],dh
   14000b73b:	add    BYTE PTR [rax],dl
   14000b73d:	push   rdx
   14000b73e:	or     al,0x70
   14000b740:	add    DWORD PTR [rdx],edx
   14000b742:	(bad)  
   14000b743:	add    BYTE PTR [rdx],dl
   14000b745:	je     0x14000b757
   14000b747:	add    BYTE PTR [rdx],dl
   14000b749:	xor    al,0xe
   14000b74b:	add    BYTE PTR [rdx],dl
   14000b74d:	mov    dl,0xb
   14000b74f:	push   rax
   14000b750:	sbb    DWORD PTR [rbx],esi
   14000b752:	or     eax,DWORD PTR [rax]
   14000b754:	and    dh,BYTE PTR [rbx+rsi*8+0x0]
   14000b758:	and    ah,BYTE PTR [rdx+rsi*8+0x0]
   14000b75c:	and    dh,BYTE PTR [rcx+rsi*8]
   14000b75f:	add    BYTE PTR [rdx],ah
   14000b761:	add    esp,ebp
   14000b763:	add    BYTE PTR [rax+rsi*8],dl
   14000b766:	adc    ah,al
   14000b768:	adc    BYTE PTR [rax+0x0],dl
   14000b76b:	add    ah,bl
   14000b76d:	pop    QWORD PTR [rax]
   14000b76f:	add    BYTE PTR [rax+0x7],dl
   14000b772:	add    BYTE PTR [rax],al
   14000b774:	sbb    DWORD PTR [rdi],ebx
   14000b776:	add    eax,0x53340d00
   14000b77b:	add    BYTE PTR [rip+0x6005001],cl        # 0x146010782
   14000b781:	jo     0x14000b783
   14000b783:	add    ah,bl
   14000b785:	pop    QWORD PTR [rax]
   14000b787:	add    BYTE PTR [rax+0x2],dh
   14000b78a:	add    BYTE PTR [rax],al
   14000b78c:	sbb    DWORD PTR [rdi],esi
   14000b78e:	or     eax,0xd9742600
   14000b793:	add    BYTE PTR [rsi],ah
   14000b795:	fadd   DWORD PTR fs:[rax]
   14000b798:	es xor al,0xd7
   14000b79b:	add    BYTE PTR [rsi],ah
   14000b79d:	add    eax,edx
   14000b79f:	add    BYTE PTR [rax],bl
   14000b7a1:	lock (bad) 
   14000b7a3:	loopne 0x14000b7b9
   14000b7a5:	rcl    BYTE PTR [rdx],1
   14000b7a7:	rcl    BYTE PTR [rax],0x50
   14000b7aa:	add    BYTE PTR [rax],al
   14000b7ac:	fmul   QWORD PTR [rdi+0x6700000]
   14000b7b2:	add    BYTE PTR [rax],al
   14000b7b4:	sbb    DWORD PTR [rbx],ebx
   14000b7b6:	(bad)  
   14000b7b7:	add    BYTE PTR [rsp+rsi*1],cl
   14000b7ba:	(bad)  
   14000b7bb:	add    BYTE PTR [rdx+rsi*2],cl
   14000b7be:	or     BYTE PTR [rax+0x7],dh
   14000b7c1:	(bad)  
   14000b7c2:	(bad)  
   14000b7c3:	push   rax
   14000b7c4:	fmul   QWORD PTR [rdi+0x300000]
   14000b7ca:	add    BYTE PTR [rax],al
   14000b7cc:	add    DWORD PTR [rdx],ecx
   14000b7ce:	add    al,0x0
   14000b7d0:	or     dh,BYTE PTR [rdx+rcx*1]
   14000b7d3:	add    BYTE PTR [rdx],cl
   14000b7d5:	jb     0x14000b7dd
   14000b7d7:	jo     0x14000b7da
   14000b7d9:	or     al,BYTE PTR [rax+rax*1]
   14000b7dc:	or     dh,BYTE PTR [rsi+rax*1]
   14000b7df:	add    BYTE PTR [rdx],cl
   14000b7e1:	xor    al,BYTE PTR [rsi]
   14000b7e3:	jo     0x14000b7e6
   14000b7e5:	(bad)  
   14000b7e6:	or     BYTE PTR [rax],al
   14000b7e8:	(bad)  
   14000b7e9:	je     0x14000b7fb
   14000b7eb:	add    BYTE PTR [rdi],dl
   14000b7ed:	lldt   WORD PTR fs:[rdi]
   14000b7f1:	xor    al,0xe
   14000b7f3:	add    BYTE PTR [rdi],dl
   14000b7f5:	mov    dl,0x10
   14000b7f7:	push   rax
   14000b7f8:	add    DWORD PTR [rax+rcx*1],edx
   14000b7fb:	add    BYTE PTR [rsp+riz*2],dl
   14000b7fe:	or     BYTE PTR [rax],al
   14000b800:	adc    al,0x54
   14000b802:	(bad)  
   14000b803:	add    BYTE PTR [rsp+rsi*1],dl
   14000b806:	(bad)  
   14000b807:	add    BYTE PTR [rdx+rsi*1],dl
   14000b80a:	adc    BYTE PTR [rax+0x19],dh
   14000b80d:	xor    ecx,DWORD PTR [rbx]
   14000b80f:	add    BYTE PTR [rdx],ah
   14000b811:	je     0x14000b864
   14000b813:	add    BYTE PTR [rdx],ah
   14000b815:	fs push rax
   14000b817:	add    BYTE PTR [rdx],ah
   14000b819:	xor    al,0x4f
   14000b81b:	add    BYTE PTR [rdx],ah
   14000b81d:	add    DWORD PTR [rdx+0x0],ecx
   14000b820:	adc    al,0xe0
   14000b822:	adc    dl,al
   14000b824:	adc    BYTE PTR [rax+0x0],dl
   14000b827:	add    ah,bl
   14000b829:	pop    QWORD PTR [rax]
   14000b82b:	add    BYTE PTR [rax+0x2],al
   14000b82e:	add    BYTE PTR [rax],al
   14000b830:	add    DWORD PTR [rax+rcx*1],edx
   14000b833:	add    BYTE PTR [rsp+riz*2],dl
   14000b836:	or     eax,DWORD PTR [rax]
   14000b838:	adc    al,0x54
   14000b83a:	or     DWORD PTR [rax],eax
   14000b83c:	adc    al,0x34
   14000b83e:	or     BYTE PTR [rax],al
   14000b840:	adc    al,0x52
   14000b842:	adc    BYTE PTR [rax+0x1],dh
   14000b845:	(bad)  
   14000b846:	or     DWORD PTR [rax],eax
   14000b848:	(bad)  
   14000b849:	add    DWORD PTR [rdx],edx
   14000b84b:	add    BYTE PTR [rbx],cl
   14000b84d:	lock or eax,esp
   14000b850:	(bad)  
   14000b851:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360bcc8
   14000b858:	add    dl,BYTE PTR [rax+0x0]
   14000b85b:	add    BYTE PTR [rcx],al
   14000b85d:	or     al,0x4
   14000b85f:	add    BYTE PTR [rsp+rsi*1],cl
   14000b862:	or     eax,DWORD PTR [rax]
   14000b864:	or     al,0x72
   14000b866:	or     BYTE PTR [rax+0x19],dh
   14000b869:	(bad)  
   14000b86a:	or     al,BYTE PTR [rax]
   14000b86c:	sbb    DWORD PTR [rsp+rdx*1+0x0],esp
   14000b870:	sbb    DWORD PTR [rbx+rdx*1],esi
   14000b873:	add    BYTE PTR [rcx],bl
   14000b875:	mov    dl,0x12
   14000b877:	lock adc al,ah
   14000b87a:	(bad)  
   14000b87b:	ror    BYTE PTR [rax+rsi*2],0xb
   14000b87f:	push   rax
   14000b880:	fmul   QWORD PTR [rdi+0x500000]
   14000b886:	add    BYTE PTR [rax],al
   14000b888:	add    DWORD PTR [rsi],eax
   14000b88a:	add    al,BYTE PTR [rax]
   14000b88c:	(bad)  
   14000b88d:	jb     0x14000b891
   14000b88f:	xor    BYTE PTR [rcx],al
   14000b891:	sbb    BYTE PTR [rdx],cl
   14000b893:	add    BYTE PTR [rax],bl
   14000b895:	adc    eax,DWORD PTR fs:[rax]
   14000b898:	sbb    BYTE PTR [rdx+rdx*1+0x0],dl
   14000b89c:	sbb    BYTE PTR [rcx+rdx*1],dh
   14000b89f:	add    BYTE PTR [rax],bl
   14000b8a1:	mov    dl,0x14
   14000b8a3:	lock adc ah,al
   14000b8a6:	adc    BYTE PTR [rax+0x19],dh
   14000b8a9:	(bad)  
   14000b8aa:	(bad)  
   14000b8ab:	add    BYTE PTR [rdi],cl
   14000b8ad:	fs (bad) 
   14000b8af:	add    BYTE PTR [rdi],cl
   14000b8b1:	xor    al,0xd
   14000b8b3:	add    BYTE PTR [rdi],cl
   14000b8b5:	xchg   edx,eax
   14000b8b6:	or     esi,DWORD PTR [rax-0x24]
   14000b8b9:	pop    QWORD PTR [rax]
   14000b8bb:	add    BYTE PTR [rax+0x0],al
   14000b8be:	add    BYTE PTR [rax],al
   14000b8c0:	add    DWORD PTR [rax+rcx*1],edx
   14000b8c3:	add    BYTE PTR [rsp+riz*2],dl
   14000b8c6:	or     al,BYTE PTR [rax]
   14000b8c8:	adc    al,0x54
   14000b8ca:	or     DWORD PTR [rax],eax
   14000b8cc:	adc    al,0x34
   14000b8ce:	or     BYTE PTR [rax],al
   14000b8d0:	adc    al,0x52
   14000b8d2:	adc    BYTE PTR [rax+0x1],dh
   14000b8d5:	or     al,BYTE PTR [rax+rax*1]
   14000b8d8:	or     dh,BYTE PTR [rax+rcx*1]
   14000b8db:	add    BYTE PTR [rdx],cl
   14000b8dd:	push   rdx
   14000b8de:	(bad)  
   14000b8df:	jo     0x14000b8e2
   14000b8e1:	adc    al,0x8
   14000b8e3:	add    BYTE PTR [rsp+riz*2],dl
   14000b8e6:	or     eax,0xa341400
   14000b8eb:	add    BYTE PTR [rdx+rdx*2],dl
   14000b8ee:	adc    al,dh
   14000b8f0:	(bad)  
   14000b8f1:	loopne 0x14000b8ff
   14000b8f3:	jo     0x14000b8f6
   14000b8f5:	sbb    eax,0x741d000c
   14000b8fa:	or     eax,0xc641d00
   14000b8ff:	add    BYTE PTR [rip+0x1d000b54],bl        # 0x15d00c459
   14000b905:	xor    al,0xa
   14000b907:	add    BYTE PTR [rip+0x17f01952],bl        # 0x157f0d25f
   14000b90d:	loopne 0x14000b924
   14000b90f:	rol    BYTE PTR [rcx],0x1c
   14000b912:	or     al,0x0
   14000b914:	sbb    al,0x64
   14000b916:	adc    BYTE PTR [rax],al
   14000b918:	sbb    al,0x54
   14000b91a:	ltr    WORD PTR [rsp+rsi*1]
   14000b91e:	(bad)  
   14000b91f:	add    BYTE PTR [rdx+rsi*2],bl
   14000b922:	sbb    al,dh
   14000b924:	(bad)  
   14000b925:	loopne 0x14000b93b
   14000b927:	rcl    BYTE PTR [rdx],1
   14000b929:	rcl    BYTE PTR [rax],0x70
   14000b92c:	add    DWORD PTR [rdi],ecx
   14000b92e:	(bad)  
   14000b92f:	add    BYTE PTR [rdi],cl
   14000b931:	fs (bad) 
   14000b933:	add    BYTE PTR [rdi],cl
   14000b935:	xor    al,0x6
   14000b937:	add    BYTE PTR [rdi],cl
   14000b939:	xor    cl,BYTE PTR [rbx]
   14000b93b:	jo     0x14000b93e
   14000b93d:	sbb    cl,BYTE PTR [rax]
   14000b93f:	add    BYTE PTR [rdx],bl
   14000b941:	jb     0x14000b956
   14000b943:	lock adc eax,esp
   14000b946:	(bad)  
   14000b948:	or     eax,0xb600c70
   14000b94d:	xor    BYTE PTR [rdx],cl
   14000b94f:	push   rax
   14000b950:	add    DWORD PTR [rdi],ecx
   14000b952:	(bad)  
   14000b953:	add    BYTE PTR [rdi],cl
   14000b955:	or     eax,DWORD PTR fs:[rax]
   14000b958:	sysenter 
   14000b95a:	or     al,BYTE PTR [rax]
   14000b95c:	(bad)  
   14000b95e:	or     esi,DWORD PTR [rax+0x19]
   14000b961:	adc    eax,DWORD PTR [rcx]
   14000b963:	add    BYTE PTR [rdx+rax*8],al
   14000b966:	add    BYTE PTR [rax],al
   14000b968:	fmul   QWORD PTR [rdi+0x500000]
   14000b96e:	add    BYTE PTR [rax],al
   14000b970:	sbb    DWORD PTR [rsi],esp
   14000b972:	(bad)  
   14000b973:	add    BYTE PTR [rip+0x6009101],dl        # 0x146014a7a
   14000b979:	loopne 0x14000b97f
   14000b97b:	jo     0x14000b980
   14000b97d:	xor    BYTE PTR [rdx],al
   14000b97f:	push   rax
   14000b980:	fmul   QWORD PTR [rdi+0x4700000]
   14000b986:	add    BYTE PTR [rax],al
   14000b988:	sbb    DWORD PTR [rbx],ebp
   14000b98a:	(bad)  
   14000b98b:	add    BYTE PTR [rdx],bl
   14000b98d:	movabs fs:0x9e011a00a1341a00,al
   14000b997:	add    BYTE PTR [rbx],cl
   14000b999:	push   rax
   14000b99a:	add    BYTE PTR [rax],al
   14000b99c:	fmul   QWORD PTR [rdi+0x4e00000]
   14000b9a2:	add    BYTE PTR [rax],al
   14000b9a4:	sbb    DWORD PTR [rip+0x11c000a],ebp        # 0x1411cb9b4
   14000b9aa:	(bad)  
   14000b9ab:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e0c5a1
   14000b9b1:	rol    BYTE PTR [rdi],1
   14000b9b3:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360be2a
   14000b9ba:	add    dl,BYTE PTR [rax-0x24]
   14000b9bd:	pop    QWORD PTR [rax]
   14000b9bf:	add    al,dh
   14000b9c1:	add    al,BYTE PTR [rax]
   14000b9c3:	add    BYTE PTR [rcx],al
   14000b9c5:	clts   
   14000b9c7:	add    BYTE PTR [rdi],cl
   14000b9c9:	fs or  eax,0xc340f00
   14000b9cf:	add    BYTE PTR [rdi],cl
   14000b9d1:	xchg   edx,eax
   14000b9d2:	or     esi,DWORD PTR [rax+0x19]
   14000b9d5:	sub    al,0x9
   14000b9d7:	add    BYTE PTR [rbx],bl
   14000b9d9:	xor    al,0xac
   14000b9db:	add    BYTE PTR [rbx],bl
   14000b9dd:	add    DWORD PTR [rsi+0xaf00c00],esp
   14000b9e3:	loopne 0x14000b9ed
   14000b9e5:	jo     0x14000b9ee
   14000b9e7:	(bad)  
   14000b9e8:	(bad)  
   14000b9e9:	push   rax
   14000b9ea:	add    BYTE PTR [rax],al
   14000b9ec:	fmul   QWORD PTR [rdi+0x5200000]
   14000b9f2:	add    BYTE PTR [rax],al
   14000b9f4:	add    DWORD PTR [rdx],edx
   14000b9f6:	(bad)  
   14000b9f7:	add    BYTE PTR [rdx],dl
   14000b9f9:	je     0x14000ba0c
   14000b9fb:	add    BYTE PTR [rdx],dl
   14000b9fd:	xor    al,0x10
   14000b9ff:	add    BYTE PTR [rdx],dl
   14000ba01:	ror    BYTE PTR [rbx],cl
   14000ba03:	push   rax
   14000ba04:	sbb    DWORD PTR [rbx],esp
   14000ba06:	or     BYTE PTR [rax],al
   14000ba08:	adc    eax,0x15001064
   14000ba0d:	xor    al,0xf
   14000ba0f:	add    BYTE PTR [rip+0xcc00e92],dl        # 0x14cc0c8a7
   14000ba15:	jo     0x14000ba22
   14000ba17:	push   rax
   14000ba18:	fmul   QWORD PTR [rdi+0x400000]
   14000ba1e:	add    BYTE PTR [rax],al
   14000ba20:	sbb    DWORD PTR [rsi],esp
   14000ba22:	or     DWORD PTR [rax],eax
   14000ba24:	sbb    BYTE PTR [rcx+rbx*1],dh
   14000ba27:	add    BYTE PTR [rax],bl
   14000ba29:	add    DWORD PTR [rdx],edx
   14000ba2b:	add    BYTE PTR [rax+rsi*8],cl
   14000ba2e:	or     ah,al
   14000ba30:	or     BYTE PTR [rax+0x7],dh
   14000ba33:	(bad)  
   14000ba34:	(bad)  
   14000ba35:	push   rax
   14000ba36:	add    BYTE PTR [rax],al
   14000ba38:	fmul   QWORD PTR [rdi+0x880000]
   14000ba3e:	add    BYTE PTR [rax],al
   14000ba40:	add    DWORD PTR [rsp+rax*1],edx
   14000ba43:	add    BYTE PTR [rdx+rsi*4],dl
   14000ba46:	or     eax,0xb300c70
   14000ba4b:	push   rax
   14000ba4c:	add    DWORD PTR [rcx],ebx
   14000ba4e:	or     al,BYTE PTR [rax]
   14000ba50:	sbb    DWORD PTR [rbp+rcx*1+0x0],esp
   14000ba54:	sbb    DWORD PTR [rsp+rcx*1],esi
   14000ba57:	add    BYTE PTR [rcx],bl
   14000ba59:	xor    dl,BYTE PTR [rdx]
   14000ba5b:	lock adc al,ah
   14000ba5e:	(bad)  
   14000ba5f:	ror    BYTE PTR [rax+rsi*2],0xb
   14000ba63:	push   rax
   14000ba64:	add    DWORD PTR [rsi],edx
   14000ba66:	or     al,BYTE PTR [rax]
   14000ba68:	(bad)  
   14000ba69:	xor    al,0xe
   14000ba6b:	add    BYTE PTR [rsi],dl
   14000ba6d:	push   rdx
   14000ba6e:	adc    dh,al
   14000ba70:	adc    al,ah
   14000ba72:	(bad)  
   14000ba73:	ror    BYTE PTR [rax+rax*8],1
   14000ba76:	or     dh,BYTE PTR [rax+0x9]
   14000ba79:	(bad)  
   14000ba7a:	or     BYTE PTR [rax+0x1],dl
   14000ba7d:	sbb    eax,0x741d000c
   14000ba82:	or     eax,DWORD PTR [rax]
   14000ba84:	sbb    eax,0x1d000a64
   14000ba89:	push   rsp
   14000ba8a:	or     DWORD PTR [rax],eax
   14000ba8c:	sbb    eax,0x1d000834
   14000ba91:	xor    bl,BYTE PTR [rcx]
   14000ba93:	lock (bad) 
   14000ba95:	loopne 0x14000baac
   14000ba97:	rol    BYTE PTR [rcx],0x1f
   14000ba9a:	or     DWORD PTR [rax],eax
   14000ba9c:	(bad)  
   14000ba9d:	rex.X sbb esi,eax
   14000baa0:	sbb    eax,esp
   14000baa2:	(bad)  
   14000baa3:	rcl    BYTE PTR [rip+0x127013c0],1        # 0x15270ce69
   14000baa9:	(bad)  
   14000baaa:	adc    DWORD PTR [rax+0x10],edx
   14000baad:	xor    BYTE PTR [rax],al
   14000baaf:	add    BYTE PTR [rcx],al
   14000bab1:	(bad)  
   14000bab3:	add    BYTE PTR [rdi],cl
   14000bab5:	xor    al,0x6
   14000bab7:	add    BYTE PTR [rdi],cl
   14000bab9:	xor    cl,BYTE PTR [rbx]
   14000babb:	jo     0x14000babe
   14000babd:	adc    eax,0x74150008
   14000bac2:	or     BYTE PTR [rax],al
   14000bac4:	adc    eax,0x15000764
   14000bac9:	xor    al,0x6
   14000bacb:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e0cc03
   14000bad1:	sbb    al,0xc
   14000bad3:	add    BYTE PTR [rsp+riz*2],bl
   14000bad6:	(bad)  
   14000bad7:	add    BYTE PTR [rsp+rdx*2],bl
   14000bada:	or     eax,0xc341c00
   14000badf:	add    BYTE PTR [rdx+rdx*2],bl
   14000bae2:	sbb    al,dh
   14000bae4:	(bad)  
   14000bae5:	loopne 0x14000bafb
   14000bae7:	rcl    BYTE PTR [rdx],1
   14000bae9:	rcl    BYTE PTR [rax],0x70
   14000baec:	add    DWORD PTR [rax+rcx*1],edx
   14000baef:	add    BYTE PTR [rsp+riz*2],dl
   14000baf2:	or     al,0x0
   14000baf4:	adc    al,0x54
   14000baf6:	or     eax,DWORD PTR [rax]
   14000baf8:	adc    al,0x34
   14000bafa:	or     al,BYTE PTR [rax]
   14000bafc:	adc    al,0x72
   14000bafe:	adc    BYTE PTR [rax+0x1],dh
   14000bb01:	adc    cl,BYTE PTR [rax]
   14000bb03:	add    BYTE PTR [rdx],dl
   14000bb05:	push   rsp
   14000bb06:	or     al,0x0
   14000bb08:	adc    dh,BYTE PTR [rdx+rcx*1]
   14000bb0b:	add    BYTE PTR [rdx],dl
   14000bb0d:	push   rdx
   14000bb0e:	(bad)  
   14000bb0f:	loopne 0x14000bb1d
   14000bb11:	jo     0x14000bb1e
   14000bb13:	(bad)  
   14000bb14:	or     DWORD PTR [rbx+rcx*1],ebx
   14000bb17:	add    BYTE PTR [rsp+rsi*2],bl
   14000bb1a:	sbb    al,0x0
   14000bb1c:	sbb    al,0x64
   14000bb1e:	sbb    eax,DWORD PTR [rax]
   14000bb20:	sbb    al,0x34
   14000bb22:	sbb    al,BYTE PTR [rax]
   14000bb24:	sbb    al,0x1
   14000bb26:	(bad)  
   14000bb27:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e0cf1d
   14000bb2d:	rol    BYTE PTR [rax],0x0
   14000bb30:	(bad)  
   14000bb31:	mov    WORD PTR [rax],es
   14000bb33:	add    BYTE PTR [rcx],al
   14000bb35:	add    BYTE PTR [rax],al
   14000bb37:	add    BYTE PTR [rax],dl
   14000bb39:	xchg   DWORD PTR [rax],eax
   14000bb3b:	add    BYTE PTR [rsi],al
   14000bb3d:	mov    DWORD PTR [rax],eax
   14000bb3f:	add    BYTE PTR [rsi+0x6000090],ah
   14000bb45:	mov    DWORD PTR [rax],eax
   14000bb47:	add    BYTE PTR [rcx],al
   14000bb49:	(bad)  
   14000bb4a:	add    al,BYTE PTR [rax]
   14000bb4c:	(bad)  
   14000bb4d:	xor    al,BYTE PTR [rdx]
   14000bb4f:	push   rax
   14000bb50:	add    DWORD PTR [rax],eax
   14000bb52:	add    BYTE PTR [rax],al
   14000bb54:	or     DWORD PTR [rcx+rax*1],eax
   14000bb57:	add    BYTE PTR [rdx+riz*1],al
   14000bb5a:	add    BYTE PTR [rax],al
   14000bb5c:	(bad)  
   14000bb5d:	mov    WORD PTR [rax],es
   14000bb5f:	add    BYTE PTR [rcx],al
   14000bb61:	add    BYTE PTR [rax],al
   14000bb63:	add    BYTE PTR [rdx+rcx*4+0x0],ch
   14000bb67:	add    BYTE PTR [rdx+0x100008a],ah
   14000bb6d:	add    BYTE PTR [rax],al
   14000bb6f:	add    BYTE PTR [rdx+0x900008a],ah
   14000bb75:	or     al,BYTE PTR [rax+rax*1]
   14000bb78:	or     dh,BYTE PTR [rsi+rax*1]
   14000bb7b:	add    BYTE PTR [rdx],cl
   14000bb7d:	xor    al,BYTE PTR [rsi]
   14000bb7f:	jo     0x14000bb57
   14000bb81:	mov    WORD PTR [rax],es
   14000bb83:	add    BYTE PTR [rcx],al
   14000bb85:	add    BYTE PTR [rax],al
   14000bb87:	add    BYTE PTR [rbp-0x75],ch
   14000bb8a:	add    BYTE PTR [rax],al
   14000bb8c:	movabs al,ds:0xa0000090d000008b
   14000bb95:	mov    eax,DWORD PTR [rax]
   14000bb97:	add    BYTE PTR [rcx],al
   14000bb99:	or     eax,0x340d0004
   14000bb9e:	or     DWORD PTR [rax],eax
   14000bba0:	or     eax,0x11500632
   14000bba5:	or     al,BYTE PTR [rax+rax*1]
   14000bba8:	or     dh,BYTE PTR [rsi+rax*1]
   14000bbab:	add    BYTE PTR [rdx],cl
   14000bbad:	xor    al,BYTE PTR [rsi]
   14000bbaf:	jo     0x14000bb87
   14000bbb1:	mov    WORD PTR [rax],es
   14000bbb3:	add    BYTE PTR [rcx],al
   14000bbb5:	add    BYTE PTR [rax],al
   14000bbb7:	add    BYTE PTR [rip+0x6a00008d],ah        # 0x1aa00bc4a
   14000bbbd:	lea    eax,[rax]
   14000bbbf:	add    dh,dh
   14000bbc1:	nop
   14000bbc2:	add    BYTE PTR [rax],al
   14000bbc4:	add    BYTE PTR [rax],al
   14000bbc6:	add    BYTE PTR [rax],al
   14000bbc8:	add    DWORD PTR [rdx+rax*1],ecx
   14000bbcb:	add    BYTE PTR [rcx+rax*1],cl
   14000bbce:	adc    DWORD PTR [rax],eax
   14000bbd0:	add    DWORD PTR [rax],eax
   14000bbd2:	add    BYTE PTR [rax],al
   14000bbd4:	sbb    DWORD PTR [rip+0x62040001],ecx        # 0x1a204bbdb
   14000bbda:	add    BYTE PTR [rax],al
   14000bbdc:	(bad)  
   14000bbdd:	pop    QWORD PTR [rax]
   14000bbdf:	add    al,dl
   14000bbe1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bbe2:	add    BYTE PTR [rax],al
   14000bbe4:	(bad)  
   14000bbe5:	(bad)  
   14000bbe6:	(bad)  
   14000bbe7:	inc    DWORD PTR [rax]
   14000bbe9:	add    BYTE PTR [rax],al
   14000bbeb:	add    bh,bh
   14000bbed:	(bad)  
   14000bbee:	(bad)  
   14000bbef:	inc    DWORD PTR [rax]
	...
   14000bbf9:	add    BYTE PTR [rax],al
   14000bbfb:	add    BYTE PTR [rcx],al
   14000bbfd:	add    BYTE PTR [rax],al
   14000bbff:	add    BYTE PTR [rcx],al
   14000bc01:	add    BYTE PTR [rax],al
   14000bc03:	add    BYTE PTR [rax],cl
   14000bc05:	mov    esp,0x400000
	...
   14000bc12:	add    BYTE PTR [rax],al
   14000bc14:	(bad)  
   14000bc15:	xchg   ecx,eax
   14000bc16:	add    BYTE PTR [rax],al
   14000bc18:	cmp    BYTE PTR [rax],al
   14000bc1a:	add    BYTE PTR [rax],al
   14000bc1c:	add    BYTE PTR [rax],al
   14000bc1e:	add    BYTE PTR [rax],al
   14000bc20:	test   al,0x8f
   14000bc22:	add    BYTE PTR [rax],al
   14000bc24:	(bad)  
   14000bc25:	(bad)  
   14000bc26:	(bad)  
   14000bc27:	push   QWORD PTR [rbp+0x8f]
   14000bc2d:	add    BYTE PTR [rax],al
   14000bc2f:	add    BYTE PTR [rbx-0xffff71],bh
   14000bc35:	(bad)  
   14000bc36:	(bad)  
   14000bc37:	call   QWORD PTR [rdi]
   14000bc39:	xchg   ecx,eax
   14000bc3a:	add    BYTE PTR [rax],al
   14000bc3c:	add    BYTE PTR [rax],al
   14000bc3e:	add    BYTE PTR [rax],al
   14000bc40:	and    al,0x91
   14000bc42:	add    BYTE PTR [rax],al
   14000bc44:	add    DWORD PTR [rax],eax
   14000bc46:	add    BYTE PTR [rax],al
   14000bc48:	sub    DWORD PTR [rcx+0x0],edx
   14000bc4e:	add    BYTE PTR [rax],al
   14000bc50:	sbb    DWORD PTR [rdx],ecx
   14000bc52:	add    al,BYTE PTR [rax]
   14000bc54:	or     dh,BYTE PTR [rdx]
   14000bc56:	(bad)  
   14000bc57:	push   rax
   14000bc58:	(bad)  
   14000bc59:	pop    QWORD PTR [rax]
   14000bc5b:	add    al,dl
   14000bc5d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bc5e:	add    BYTE PTR [rax],al
   14000bc60:	add    BYTE PTR [rax],al
   14000bc62:	add    BYTE PTR [rax],al
   14000bc64:	(bad)  
   14000bc65:	cmp    DWORD PTR [rdi+0x55],ebx
   14000bc6b:	add    BYTE PTR [rdx+0x10000bc],bh
   14000bc71:	add    BYTE PTR [rax],al
   14000bc73:	add    BYTE PTR [rip+0x5000000],al        # 0x14500bc79
   14000bc79:	add    BYTE PTR [rax],al
   14000bc7b:	add    BYTE PTR [rax-0x63ffff44],cl
   14000bc81:	mov    esp,0xbcb00000
   14000bc86:	add    BYTE PTR [rax],al
   14000bc88:	xor    BYTE PTR [rbx-0x7cd00000],al
   14000bc8e:	add    BYTE PTR [rax],al
   14000bc90:	push   rax
   14000bc91:	add    DWORD PTR [rax],0x0
   14000bc94:	jo     0x14000bc19
   14000bc96:	add    BYTE PTR [rax],al
   14000bc98:	fsubr  DWORD PTR [rcx-0x43370000]
   14000bc9e:	add    BYTE PTR [rax],al
   14000bca0:	jrcxz  0x14000bc5e
   14000bca2:	add    BYTE PTR [rax],al
   14000bca4:	idiv   DWORD PTR [rax+rax*1+0xbd0b00]
   14000bcab:	add    BYTE PTR [rdx],ch
   14000bcad:	mov    ebp,0x0
   14000bcb2:	add    DWORD PTR [rax],eax
   14000bcb4:	add    al,BYTE PTR [rax]
   14000bcb6:	add    eax,DWORD PTR [rax]
   14000bcb8:	add    al,0x0
   14000bcba:	push   rax
   14000bcbb:	jb     0x14000bd26
   14000bcbd:	outs   dx,BYTE PTR ds:[rsi]
   14000bcbe:	je     0x14000bd02
   14000bcc0:	jb     0x14000bd2f
   14000bcc2:	push   rbp
   14000bcc3:	rex.WB
   14000bcc4:	cs gs js 0x14000bd2d
   14000bcc8:	add    BYTE PTR [rdi],bh
   14000bcca:	(bad)  
   14000bccb:	xor    BYTE PTR [rbx+0x54],al
   14000bcce:	movsxd esi,DWORD PTR [rax+0x4d]
   14000bcd1:	imul   esp,DWORD PTR [rdx+0x40],0x41455140
   14000bcd8:	rex.B
   14000bcd9:	rex
   14000bcda:	rex.B
   14000bcdb:	rex.RB
   14000bcdc:	rex.X push rsi
   14000bcde:	xor    BYTE PTR [rax+0x40],al
   14000bce1:	pop    rdx
   14000bce2:	add    BYTE PTR [rdi],bh
   14000bce4:	(bad)  
   14000bce5:	xor    BYTE PTR [rbx+0x54],al
   14000bce8:	movsxd esi,DWORD PTR [rax+0x4d]
   14000bceb:	imul   esp,DWORD PTR [rdx+0x40],0x41455140
   14000bcf2:	rex.B
   14000bcf3:	rex pop rax
   14000bcf5:	pop    rdx
   14000bcf6:	add    BYTE PTR [rdi],bh
   14000bcf8:	(bad)  
   14000bcf9:	xor    DWORD PTR [rbx+0x54],eax
   14000bcfc:	movsxd esi,DWORD PTR [rax+0x4d]
   14000bcff:	imul   esp,DWORD PTR [rdx+0x40],0x41455540
   14000bd06:	rex.B
   14000bd07:	rex pop rax
   14000bd09:	pop    rdx
   14000bd0a:	add    BYTE PTR [rdi],bh
   14000bd0c:	(bad)  
   14000bd0d:	xor    al,0x43
   14000bd0f:	push   rsp
   14000bd10:	movsxd esi,DWORD PTR [rax+0x4d]
   14000bd13:	imul   esp,DWORD PTR [rdx+0x40],0x41455140
   14000bd1a:	rex.B
   14000bd1b:	rex.B
   14000bd1c:	rex.RB
   14000bd1d:	push   r14
   14000bd1f:	xor    BYTE PTR [rax+0x41],al
   14000bd22:	rex.RB
   14000bd23:	rex.X push rsi
   14000bd25:	xor    BYTE PTR [rax+0x40],al
   14000bd28:	pop    rdx
   14000bd29:	add    BYTE PTR [rdi],bh
   14000bd2b:	(bad)  
   14000bd2c:	pop    rdi
   14000bd2d:	(bad)  
   14000bd2e:	rex.XB push r12
   14000bd30:	movsxd esi,DWORD PTR [rax+0x4d]
   14000bd33:	imul   esp,DWORD PTR [rdx+0x40],0x40423640
   14000bd3a:	add    BYTE PTR [rax],al
   14000bd3c:	rex mov esi,0x0
   14000bd42:	add    BYTE PTR [rax],al
   14000bd44:	add    BYTE PTR [rax],al
   14000bd46:	add    BYTE PTR [rax],al
   14000bd48:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bd49:	ret    0x0
   14000bd4c:	add    BYTE PTR [rax-0x41500000],ah
	...
   14000bd5a:	add    BYTE PTR [rax],al
   14000bd5c:	sub    ah,al
   14000bd5e:	add    BYTE PTR [rax],al
   14000bd60:	jo     0x14000bd02
   14000bd62:	add    BYTE PTR [rax],al
   14000bd64:	push   rax
   14000bd65:	rol    BYTE PTR [rax],0x0
	...
   14000bd70:	(bad)  
   14000bd71:	(bad)
   14000bd74:	adc    BYTE PTR [rdx-0x3ef00000],ah
	...
   14000bd82:	add    BYTE PTR [rax],al
   14000bd84:	movabs ds:0x80000a2d00000c6,al
   14000bd8d:	ret    0x0
	...
   14000bd98:	mov    DWORD PTR cs:[rax],0xa3c800
   14000bd9f:	add    BYTE PTR [rax-0x40],al
	...
   14000bdaa:	add    BYTE PTR [rax],al
   14000bdac:	rex.RX mov DWORD PTR [rax],0xa20000
   14000bdb3:	add    BYTE PTR [rax-0x42],dh
	...
   14000bdbe:	add    BYTE PTR [rax],al
   14000bdc0:	pushf  
   14000bdc1:	mov    DWORD PTR [rax],0xa03000
   14000bdc7:	add    al,dl
   14000bdc9:	mov    edi,0x0
   14000bdce:	add    BYTE PTR [rax],al
   14000bdd0:	add    BYTE PTR [rax],al
   14000bdd2:	add    BYTE PTR [rax],al
   14000bdd4:	stos   BYTE PTR es:[rdi],al
   14000bdd5:	mov    DWORD PTR [rax],0xa19000
   14000bddb:	add    BYTE PTR [rax],bh
   14000bddd:	ret    0x0
	...
   14000bde8:	lock mov DWORD PTR [rax],0xa3f800
   14000bdef:	add    BYTE PTR [rax+0xbe],bl
   14000bdf5:	add    BYTE PTR [rax],al
   14000bdf7:	add    BYTE PTR [rax],al
   14000bdf9:	add    BYTE PTR [rax],al
   14000bdfb:	add    BYTE PTR [rdx],ah
   14000bdfd:	enter  0x0,0x58
   14000be01:	movabs al,ds:0xc0000000
   14000be0a:	add    BYTE PTR [rax],al
   14000be0c:	add    BYTE PTR [rax],al
   14000be0e:	add    BYTE PTR [rax],al
   14000be10:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000be11:	enter  0x0,0xc0
   14000be15:	movabs eax,ds:0xc0f80000
   14000be1e:	add    BYTE PTR [rax],al
   14000be20:	add    BYTE PTR [rax],al
   14000be22:	add    BYTE PTR [rax],al
   14000be24:	ror    al,cl
   14000be26:	add    BYTE PTR [rax],al
   14000be28:	mov    eax,0xa2
	...
   14000be3d:	add    BYTE PTR [rax],al
   14000be3f:	add    BYTE PTR [rax-0x3e],ah
   14000be42:	add    BYTE PTR [rax],al
   14000be44:	add    BYTE PTR [rax],al
   14000be46:	add    BYTE PTR [rax],al
   14000be48:	jb     0x14000be0c
   14000be4a:	add    BYTE PTR [rax],al
   14000be4c:	add    BYTE PTR [rax],al
   14000be4e:	add    BYTE PTR [rax],al
   14000be50:	xchg   dl,al
   14000be52:	add    BYTE PTR [rax],al
   14000be54:	add    BYTE PTR [rax],al
   14000be56:	add    BYTE PTR [rax],al
   14000be58:	xchg   esp,eax
   14000be59:	ret    0x0
   14000be5c:	add    BYTE PTR [rax],al
   14000be5e:	add    BYTE PTR [rax],al
   14000be60:	loopne 0x14000be2a
	...
   14000be6e:	add    BYTE PTR [rax],al
   14000be70:	push   rdx
   14000be71:	mov    DWORD PTR [rax],0x0
   14000be77:	add    BYTE PTR [rsi-0x39],ch
   14000be7a:	add    BYTE PTR [rax],al
   14000be7c:	add    BYTE PTR [rax],al
   14000be7e:	add    BYTE PTR [rax],al
   14000be80:	add    bh,0x0
   14000be83:	add    BYTE PTR [rax],al
   14000be85:	add    BYTE PTR [rax],al
   14000be87:	add    BYTE PTR [rax+0x1],bl
   14000be8a:	add    BYTE PTR [rax],al
   14000be8c:	add    BYTE PTR [rax],al
   14000be8e:	add    BYTE PTR [rax+0x0],al
   14000be94:	add    BYTE PTR [rax],al
   14000be96:	add    BYTE PTR [rax],al
   14000be98:	cli    
   14000be99:	mov    DWORD PTR [rax],0x0
   14000be9f:	add    BYTE PTR [rsi],cl
   14000bea1:	enter  0x0,0x0
	...
   14000bead:	add    BYTE PTR [rax],al
   14000beaf:	add    BYTE PTR [rdx],bh
   14000beb1:	retf   0x0
   14000beb4:	add    BYTE PTR [rax],al
   14000beb6:	add    BYTE PTR [rax],al
   14000beb8:	(bad)  
   14000beb9:	retf   0x0
   14000bebc:	add    BYTE PTR [rax],al
   14000bebe:	add    BYTE PTR [rax],al
   14000bec0:	enter  0xc9,0x0
   14000bec4:	add    BYTE PTR [rax],al
   14000bec6:	add    BYTE PTR [rax],al
   14000bec8:	lods   al,BYTE PTR ds:[rsi]
   14000bec9:	leave  
   14000beca:	add    BYTE PTR [rax],al
   14000becc:	add    BYTE PTR [rax],al
   14000bece:	add    BYTE PTR [rax],al
   14000bed0:	pushf  
   14000bed1:	leave  
   14000bed2:	add    BYTE PTR [rax],al
   14000bed4:	add    BYTE PTR [rax],al
   14000bed6:	add    BYTE PTR [rax],al
   14000bed8:	(bad)  
   14000bed9:	leave  
   14000beda:	add    BYTE PTR [rax],al
   14000bedc:	add    BYTE PTR [rax],al
   14000bede:	add    BYTE PTR [rax],al
   14000bee0:	ins    BYTE PTR es:[rdi],dx
   14000bee1:	leave  
   14000bee2:	add    BYTE PTR [rax],al
   14000bee4:	add    BYTE PTR [rax],al
   14000bee6:	add    BYTE PTR [rax],al
   14000bee8:	push   rsi
   14000bee9:	leave  
   14000beea:	add    BYTE PTR [rax],al
   14000beec:	add    BYTE PTR [rax],al
   14000beee:	add    BYTE PTR [rax],al
   14000bef0:	cmp    al,0xc9
   14000bef2:	add    BYTE PTR [rax],al
   14000bef4:	add    BYTE PTR [rax],al
   14000bef6:	add    BYTE PTR [rax],al
   14000bef8:	sub    cl,cl
   14000befa:	add    BYTE PTR [rax],al
   14000befc:	add    BYTE PTR [rax],al
   14000befe:	add    BYTE PTR [rax],al
   14000bf00:	(bad)  
   14000bf01:	(bad)  
   14000bf02:	add    BYTE PTR [rax],al
   14000bf04:	add    BYTE PTR [rax],al
   14000bf06:	add    BYTE PTR [rax],al
   14000bf08:	(bad)  
   14000bf09:	(bad)  
   14000bf0a:	add    BYTE PTR [rax],al
   14000bf0c:	add    BYTE PTR [rax],al
   14000bf0e:	add    BYTE PTR [rax],al
   14000bf10:	hlt    
   14000bf11:	ret    
   14000bf12:	add    BYTE PTR [rax],al
   14000bf14:	add    BYTE PTR [rax],al
   14000bf16:	add    BYTE PTR [rax],al
   14000bf18:	or     cl,cl
   14000bf1a:	add    BYTE PTR [rax],al
   14000bf1c:	add    BYTE PTR [rax],al
   14000bf1e:	add    BYTE PTR [rax],al
   14000bf20:	clc    
   14000bf21:	enter  0x0,0x0
   14000bf25:	add    BYTE PTR [rax],al
   14000bf27:	add    al,dh
   14000bf29:	enter  0x0,0x0
   14000bf2d:	add    BYTE PTR [rax],al
   14000bf2f:	add    BYTE PTR [rdx+rax*8+0x0],dh
   14000bf36:	add    BYTE PTR [rax],al
   14000bf38:	mov    dl,0x0
   14000bf3b:	add    BYTE PTR [rax],al
   14000bf3d:	add    BYTE PTR [rax],al
   14000bf3f:	add    dh,dl
   14000bf41:	ret    0x0
   14000bf44:	add    BYTE PTR [rax],al
   14000bf46:	add    BYTE PTR [rax],al
   14000bf48:	in     al,dx
   14000bf49:	ret    0x0
   14000bf4c:	add    BYTE PTR [rax],al
   14000bf4e:	add    BYTE PTR [rax],al
   14000bf50:	clc    
   14000bf51:	ret    0x0
   14000bf54:	add    BYTE PTR [rax],al
   14000bf56:	add    BYTE PTR [rax],al
   14000bf58:	or     al,bl
   14000bf5a:	add    BYTE PTR [rax],al
   14000bf5c:	add    BYTE PTR [rax],al
   14000bf5e:	add    BYTE PTR [rax],al
   14000bf60:	and    bl,al
   14000bf62:	add    BYTE PTR [rax],al
   14000bf64:	add    BYTE PTR [rax],al
   14000bf66:	add    BYTE PTR [rax],al
   14000bf68:	loopne 0x14000bf2d
   14000bf6a:	add    BYTE PTR [rax],al
   14000bf6c:	add    BYTE PTR [rax],al
   14000bf6e:	add    BYTE PTR [rax],al
   14000bf70:	rol    bl,1
   14000bf72:	add    BYTE PTR [rax],al
   14000bf74:	add    BYTE PTR [rax],al
   14000bf76:	add    BYTE PTR [rax],al
   14000bf78:	sub    al,0xc3
   14000bf7a:	add    BYTE PTR [rax],al
   14000bf7c:	add    BYTE PTR [rax],al
   14000bf7e:	add    BYTE PTR [rax],al
   14000bf80:	cmp    al,bl
   14000bf82:	add    BYTE PTR [rax],al
   14000bf84:	add    BYTE PTR [rax],al
   14000bf86:	add    BYTE PTR [rax],al
   14000bf88:	rex.RX ret 
   14000bf8a:	add    BYTE PTR [rax],al
   14000bf8c:	add    BYTE PTR [rax],al
   14000bf8e:	add    BYTE PTR [rax],al
   14000bf90:	push   rsp
   14000bf91:	ret    
   14000bf92:	add    BYTE PTR [rax],al
   14000bf94:	add    BYTE PTR [rax],al
   14000bf96:	add    BYTE PTR [rax],al
   14000bf98:	fs ret 
   14000bf9a:	add    BYTE PTR [rax],al
   14000bf9c:	add    BYTE PTR [rax],al
   14000bf9e:	add    BYTE PTR [rax],al
   14000bfa0:	js     0x14000bf65
   14000bfa2:	add    BYTE PTR [rax],al
   14000bfa4:	add    BYTE PTR [rax],al
   14000bfa6:	add    BYTE PTR [rax],al
   14000bfa8:	xchg   bl,al
   14000bfaa:	add    BYTE PTR [rax],al
   14000bfac:	add    BYTE PTR [rax],al
   14000bfae:	add    BYTE PTR [rax],al
   14000bfb0:	pushf  
   14000bfb1:	ret    
   14000bfb2:	add    BYTE PTR [rax],al
   14000bfb4:	add    BYTE PTR [rax],al
   14000bfb6:	add    BYTE PTR [rax],al
   14000bfb8:	mov    al,0xc3
   14000bfba:	add    BYTE PTR [rax],al
   14000bfbc:	add    BYTE PTR [rax],al
   14000bfbe:	add    BYTE PTR [rax],al
   14000bfc0:	ret    0xc3
	...
   14000bfcf:	add    BYTE PTR [rax],cl
   14000bfd1:	add    BYTE PTR [rax],al
   14000bfd3:	add    BYTE PTR [rax],al
   14000bfd5:	add    BYTE PTR [rax],al
   14000bfd7:	add    BYTE PTR [rdx],0x0
   14000bfda:	add    BYTE PTR [rax],al
   14000bfdc:	add    BYTE PTR [rax],al
   14000bfde:	add    BYTE PTR [rax+0x7],al
   14000bfe4:	add    BYTE PTR [rax],al
   14000bfe6:	add    BYTE PTR [rax+0x6],al
   14000bfec:	add    BYTE PTR [rax],al
   14000bfee:	add    BYTE PTR [rax+0x9],al
   14000bff4:	add    BYTE PTR [rax],al
   14000bff6:	add    BYTE PTR [rax+0x0],al
   14000bffc:	add    BYTE PTR [rax],al
   14000bffe:	add    BYTE PTR [rax],al
   14000c000:	rex.RX enter 0x0,0x0
   14000c005:	add    BYTE PTR [rax],al
   14000c007:	add    BYTE PTR [rax-0x38],ah
   14000c00a:	add    BYTE PTR [rax],al
   14000c00c:	add    BYTE PTR [rax],al
   14000c00e:	add    BYTE PTR [rax],al
   14000c010:	jp     0x14000bfda
   14000c012:	add    BYTE PTR [rax],al
   14000c014:	add    BYTE PTR [rax],al
   14000c016:	add    BYTE PTR [rax],al
   14000c018:	fwait
   14000c019:	add    BYTE PTR [rax],al
   14000c01b:	add    BYTE PTR [rax],al
   14000c01d:	add    BYTE PTR [rax],al
   14000c01f:	and    BYTE PTR [rsi+0x0],0x0
   14000c023:	add    BYTE PTR [rax],al
   14000c025:	add    BYTE PTR [rax],al
   14000c027:	adc    BYTE PTR [rax+rcx*8+0x0],0x0
   14000c02f:	add    BYTE PTR [rax],dh
   14000c031:	enter  0x0,0x0
	...
   14000c03d:	add    BYTE PTR [rax],al
   14000c03f:	add    BYTE PTR [rax],bh
   14000c041:	mov    DWORD PTR [rax],0x0
	...
   14000c04f:	add    BYTE PTR [rsp+rax*8+0x0],bl
   14000c056:	add    BYTE PTR [rax],al
   14000c058:	fmul   st(1),st
   14000c05a:	add    BYTE PTR [rax],al
   14000c05c:	add    BYTE PTR [rax],al
   14000c05e:	add    BYTE PTR [rax],al
   14000c060:	mov    esp,es
   14000c062:	add    BYTE PTR [rax],al
   14000c064:	add    BYTE PTR [rax],al
   14000c066:	add    BYTE PTR [rax],al
   14000c068:	cmp    ch,al
   14000c06a:	add    BYTE PTR [rax],al
   14000c06c:	add    BYTE PTR [rax],al
   14000c06e:	add    BYTE PTR [rax],al
   14000c070:	ins    BYTE PTR es:[rdi],dx
   14000c071:	(bad)  
   14000c072:	add    BYTE PTR [rax],al
   14000c074:	add    BYTE PTR [rax],al
   14000c076:	add    BYTE PTR [rax],al
   14000c078:	pop    rdx
   14000c079:	(bad)  
   14000c07a:	add    BYTE PTR [rax],al
   14000c07c:	add    BYTE PTR [rax],al
   14000c07e:	add    BYTE PTR [rax],al
   14000c080:	rex.RX (bad) 
   14000c082:	add    BYTE PTR [rax],al
   14000c084:	add    BYTE PTR [rax],al
   14000c086:	add    BYTE PTR [rax],al
   14000c088:	ss (bad) 
   14000c08a:	add    BYTE PTR [rax],al
   14000c08c:	add    BYTE PTR [rax],al
   14000c08e:	add    BYTE PTR [rax],al
   14000c090:	(bad)
   14000c094:	add    BYTE PTR [rax],al
   14000c096:	add    BYTE PTR [rax],al
   14000c098:	add    ah,0x0
   14000c09b:	add    BYTE PTR [rax],al
   14000c09d:	add    BYTE PTR [rax],al
   14000c09f:	add    BYTE PTR [rsi-0x3b],bl
   14000c0a2:	add    BYTE PTR [rax],al
   14000c0a4:	add    BYTE PTR [rax],al
   14000c0a6:	add    BYTE PTR [rax],al
   14000c0a8:	outs   dx,BYTE PTR ds:[rsi]
   14000c0a9:	(bad)
   14000c0ac:	add    BYTE PTR [rax],al
   14000c0ae:	add    BYTE PTR [rax],al
   14000c0b0:	mov    al,0xc4
   14000c0b2:	add    BYTE PTR [rax],al
   14000c0b4:	add    BYTE PTR [rax],al
   14000c0b6:	add    BYTE PTR [rax],al
   14000c0b8:	mov    ah,0x0
   14000c0bb:	add    BYTE PTR [rax],al
   14000c0bd:	add    BYTE PTR [rax],al
   14000c0bf:	add    al,bl
   14000c0c1:	(bad)  
   14000c0c2:	add    BYTE PTR [rax],al
   14000c0c4:	add    BYTE PTR [rax],al
   14000c0c6:	add    BYTE PTR [rax],al
   14000c0c8:	call   0x14000c191
   14000c0cd:	add    BYTE PTR [rax],al
   14000c0cf:	add    dh,dh
   14000c0d1:	(bad)  
   14000c0d2:	add    BYTE PTR [rax],al
   14000c0d4:	add    BYTE PTR [rax],al
   14000c0d6:	add    BYTE PTR [rax],al
   14000c0d8:	or     al,0xc5
   14000c0da:	add    BYTE PTR [rax],al
   14000c0dc:	add    BYTE PTR [rax],al
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	sbb    al,ch
   14000c0e2:	add    BYTE PTR [rax],al
   14000c0e4:	add    BYTE PTR [rax],al
   14000c0e6:	add    BYTE PTR [rax],al
   14000c0e8:	sub    al,0xc5
	...
   14000c0f6:	add    BYTE PTR [rax],al
   14000c0f8:	ret    0xc8
   14000c0fb:	add    BYTE PTR [rax],al
   14000c0fd:	add    BYTE PTR [rax],al
   14000c0ff:	add    BYTE PTR [rdx+0xc8],dh
	...
   14000c10d:	add    BYTE PTR [rax],al
   14000c10f:	add    dl,ch
   14000c111:	leave  
   14000c112:	add    BYTE PTR [rax],al
   14000c114:	add    BYTE PTR [rax],al
   14000c116:	add    BYTE PTR [rax],al
   14000c118:	ret    0xc6
   14000c11b:	add    BYTE PTR [rax],al
   14000c11d:	add    BYTE PTR [rax],al
   14000c11f:	add    dl,cl
   14000c121:	mov    BYTE PTR [rax],0x0
   14000c124:	add    BYTE PTR [rax],al
   14000c126:	add    BYTE PTR [rax],al
   14000c128:	(bad)  
   14000c129:	mov    BYTE PTR [rax],0x0
   14000c12c:	add    BYTE PTR [rax],al
   14000c12e:	add    BYTE PTR [rax],al
   14000c130:	loop   0x14000c0f8
   14000c132:	add    BYTE PTR [rax],al
   14000c134:	add    BYTE PTR [rax],al
   14000c136:	add    BYTE PTR [rax],al
   14000c138:	jp     0x14000c104
   14000c13a:	add    BYTE PTR [rax],al
   14000c13c:	add    BYTE PTR [rax],al
   14000c13e:	add    BYTE PTR [rax],al
   14000c140:	(bad)
   14000c144:	add    BYTE PTR [rax],al
   14000c146:	add    BYTE PTR [rax],al
   14000c148:	scas   al,BYTE PTR es:[rdi]
   14000c149:	(bad)
   14000c14c:	add    BYTE PTR [rax],al
   14000c14e:	add    BYTE PTR [rax],al
   14000c150:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c151:	(bad)
   14000c154:	add    BYTE PTR [rax],al
   14000c156:	add    BYTE PTR [rax],al
   14000c158:	cwde   
   14000c159:	(bad)
   14000c15c:	add    BYTE PTR [rax],al
   14000c15e:	add    BYTE PTR [rax],al
   14000c160:	mov    es,ebp
   14000c162:	add    BYTE PTR [rax],al
   14000c164:	add    BYTE PTR [rax],al
   14000c166:	add    BYTE PTR [rax],al
   14000c168:	mov    edx,0xc5
   14000c16d:	add    BYTE PTR [rax],al
   14000c16f:	add    ah,al
   14000c171:	(bad)
   14000c174:	add    BYTE PTR [rax],al
   14000c176:	add    BYTE PTR [rax],al
   14000c178:	rol    ch,cl
   14000c17a:	add    BYTE PTR [rax],al
   14000c17c:	add    BYTE PTR [rax],al
   14000c17e:	add    BYTE PTR [rax],al
   14000c180:	fcmovb st,st(5)
   14000c182:	add    BYTE PTR [rax],al
   14000c184:	add    BYTE PTR [rax],al
   14000c186:	add    BYTE PTR [rax],al
   14000c188:	in     al,0xc5
   14000c18a:	add    BYTE PTR [rax],al
   14000c18c:	add    BYTE PTR [rax],al
   14000c18e:	add    BYTE PTR [rax],al
   14000c190:	test   dl,cl
   14000c192:	add    BYTE PTR [rax],al
   14000c194:	add    BYTE PTR [rax],al
   14000c196:	add    BYTE PTR [rax],al
   14000c198:	inc    ch
   14000c19a:	add    BYTE PTR [rax],al
   14000c19c:	add    BYTE PTR [rax],al
   14000c19e:	add    BYTE PTR [rax],al
   14000c1a0:	or     al,0xc6
   14000c1a2:	add    BYTE PTR [rax],al
   14000c1a4:	add    BYTE PTR [rax],al
   14000c1a6:	add    BYTE PTR [rax],al
   14000c1a8:	(bad)  
   14000c1a9:	mov    BYTE PTR [rax],0x0
   14000c1ac:	add    BYTE PTR [rax],al
   14000c1ae:	add    BYTE PTR [rax],al
   14000c1b0:	xor    dh,al
   14000c1b2:	add    BYTE PTR [rax],al
   14000c1b4:	add    BYTE PTR [rax],al
   14000c1b6:	add    BYTE PTR [rax],al
   14000c1b8:	cmp    dh,al
   14000c1ba:	add    BYTE PTR [rax],al
   14000c1bc:	add    BYTE PTR [rax],al
   14000c1be:	add    BYTE PTR [rax],al
   14000c1c0:	rex mov BYTE PTR [rax],0x0
   14000c1c4:	add    BYTE PTR [rax],al
   14000c1c6:	add    BYTE PTR [rax],al
   14000c1c8:	rex.WX mov BYTE PTR [rax],0x0
   14000c1cc:	add    BYTE PTR [rax],al
   14000c1ce:	add    BYTE PTR [rax],al
   14000c1d0:	pop    rsi
   14000c1d1:	mov    BYTE PTR [rax],0x0
   14000c1d4:	add    BYTE PTR [rax],al
   14000c1d6:	add    BYTE PTR [rax],al
   14000c1d8:	push   0xffffffffffffffc6
   14000c1da:	add    BYTE PTR [rax],al
   14000c1dc:	add    BYTE PTR [rax],al
   14000c1de:	add    BYTE PTR [rax],al
   14000c1e0:	(bad)  
   14000c1e1:	mov    BYTE PTR [rax],0x0
   14000c1e4:	add    BYTE PTR [rax],al
   14000c1e6:	add    BYTE PTR [rax],al
   14000c1e8:	mov    esi,es
   14000c1ea:	add    BYTE PTR [rax],al
   14000c1ec:	add    BYTE PTR [rax],al
   14000c1ee:	add    BYTE PTR [rax],al
   14000c1f0:	xchg   esi,eax
   14000c1f1:	mov    BYTE PTR [rax],0x0
   14000c1f4:	add    BYTE PTR [rax],al
   14000c1f6:	add    BYTE PTR [rax],al
   14000c1f8:	scas   al,BYTE PTR es:[rdi]
   14000c1f9:	mov    BYTE PTR [rax],0x0
	...
   14000c208:	add    dl,cl
   14000c20a:	add    BYTE PTR [rax],al
   14000c20c:	add    BYTE PTR [rax],al
   14000c20e:	add    BYTE PTR [rax],al
   14000c210:	adc    al,0xca
   14000c212:	add    BYTE PTR [rax],al
   14000c214:	add    BYTE PTR [rax],al
   14000c216:	add    BYTE PTR [rax],al
   14000c218:	in     al,dx
   14000c219:	mov    BYTE PTR [rax],0x0
   14000c21c:	add    BYTE PTR [rax],al
   14000c21e:	add    BYTE PTR [rax],al
   14000c220:	add    bh,al
   14000c222:	add    BYTE PTR [rax],al
   14000c224:	add    BYTE PTR [rax],al
   14000c226:	add    BYTE PTR [rax],al
   14000c228:	sbb    al,bh
	...
   14000c236:	add    BYTE PTR [rax],al
   14000c238:	mov    eax,0xc7
   14000c23d:	add    BYTE PTR [rax],al
   14000c23f:	add    ah,cl
   14000c241:	mov    DWORD PTR [rax],0x0
   14000c247:	add    BYTE PTR [rdx],ch
   14000c249:	retf   0x0
   14000c24c:	add    BYTE PTR [rax],al
   14000c24e:	add    BYTE PTR [rax],al
   14000c250:	faddp  st(7),st
	...
   14000c25e:	add    BYTE PTR [rax],al
   14000c260:	pop    rsi
   14000c261:	add    dl,BYTE PTR [rdx+0x65]
   14000c264:	addr32 rex.XB jb 0x14000c2cd
   14000c268:	(bad)  
   14000c269:	je     0x14000c2d0
   14000c26b:	rex.WXB
   14000c26c:	gs jns 0x14000c2b4
   14000c26f:	js     0x14000c2c8
   14000c271:	add    BYTE PTR [rbx+0x67655202],dl
   14000c277:	push   rcx
   14000c278:	jne    0x14000c2df
   14000c27a:	jb     0x14000c2f5
   14000c27c:	push   rsi
   14000c27d:	(bad)  
   14000c27e:	ins    BYTE PTR es:[rdi],dx
   14000c27f:	jne    0x14000c2e6
   14000c281:	rex.RB js 0x14000c2db
   14000c284:	add    BYTE PTR [rax],al
   14000c286:	push   rbp
   14000c287:	add    dl,BYTE PTR [rdx+0x65]
   14000c28a:	rex.XB ins BYTE PTR es:[edi],dx
   14000c28d:	outs   dx,DWORD PTR ds:[rsi]
   14000c28e:	jae    0x14000c2f5
   14000c290:	rex.WXB
   14000c291:	gs jns 0x14000c294
   14000c294:	movabs ds:0x5674655367655202,eax
   14000c29d:	(bad)  
   14000c29e:	ins    BYTE PTR es:[rdi],dx
   14000c29f:	jne    0x14000c306
   14000c2a1:	rex.RB js 0x14000c2fb
   14000c2a4:	add    BYTE PTR [rax],al
   14000c2a6:	rex.B
   14000c2a7:	rex.R push rsi
   14000c2a9:	push   r8
   14000c2ab:	xor    rsi,QWORD PTR [r10]
   14000c2ae:	cs fs ins BYTE PTR es:[rdi],dx
   14000c2b1:	ins    BYTE PTR es:[rdi],dx
   14000c2b2:	add    BYTE PTR [rax],al
   14000c2b4:	rol    BYTE PTR [rcx],1
   14000c2b6:	rex.RXB
   14000c2b7:	gs je  0x14000c2fd
   14000c2ba:	outs   dx,DWORD PTR ds:[rsi]
   14000c2bb:	ins    DWORD PTR es:[rdi],dx
   14000c2bc:	ins    DWORD PTR es:[rdi],dx
   14000c2bd:	(bad)  
   14000c2be:	outs   dx,BYTE PTR ds:[rsi]
   14000c2bf:	imul   r13,QWORD PTR fs:[rsi+0x65],0x2570057
   14000c2c8:	rex.RXB
   14000c2c9:	gs je  0x14000c318
   14000c2cc:	(bad)  
   14000c2cd:	jae    0x14000c343
   14000c2cf:	rex.RB jb 0x14000c344
   14000c2d2:	outs   dx,DWORD PTR ds:[rsi]
   14000c2d3:	jb     0x14000c2d5
   14000c2d5:	add    BYTE PTR [rbx+rax*1+0x48],al
   14000c2d9:	gs (bad) 
   14000c2db:	jo     0x14000c330
   14000c2dd:	gs je  0x14000c329
   14000c2e0:	outs   dx,BYTE PTR ds:[rsi]
   14000c2e1:	outs   dx,WORD PTR ds:[rsi]
   14000c2e3:	jb     0x14000c352
   14000c2e5:	(bad)  
   14000c2e6:	je     0x14000c351
   14000c2e8:	outs   dx,DWORD PTR ds:[rsi]
   14000c2e9:	outs   dx,BYTE PTR ds:[rsi]
   14000c2ea:	add    BYTE PTR [rax],al
   14000c2ec:	mov    ecx,0x636f4c03
   14000c2f1:	(bad)  
   14000c2f2:	ins    BYTE PTR es:[rdi],dx
   14000c2f3:	rex.RX jb 0x14000c35b
   14000c2f6:	add    BYTE PTR gs:[rcx+0x1],bh
   14000c2fa:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x73726946
   14000c302:	je     0x14000c34a
   14000c304:	imul   ebp,DWORD PTR [rbp+riz*2+0x57],0x5c80000
   14000c30c:	push   rdi
   14000c30d:	(bad)  
   14000c30e:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14000c316:	ins    BYTE PTR es:[edi],dx
   14000c318:	gs rex.WRXB (bad) 
   14000c31b:	push   0x65
   14000c31d:	movsxd esi,DWORD PTR [rax+rax*1+0x8]
   14000c321:	add    eax,0x45746553
   14000c326:	jbe    0x14000c38d
   14000c328:	outs   dx,BYTE PTR ds:[rsi]
   14000c329:	je     0x14000c32b
   14000c32b:	add    al,al
   14000c32d:	add    BYTE PTR [rbx+0x72],al
   14000c330:	gs (bad) 
   14000c332:	je     0x14000c399
   14000c334:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x46016e00
   14000c33d:	imul   ebp,DWORD PTR [rsi+0x64],0x736f6c43
   14000c344:	add    BYTE PTR gs:[rdi+0x73655204],ch
   14000c34b:	gs je  0x14000c393
   14000c34e:	jbe    0x14000c3b5
   14000c350:	outs   dx,BYTE PTR ds:[rsi]
   14000c351:	je     0x14000c353
   14000c353:	add    BYTE PTR [rax+rax*1+0x61657243],dh
   14000c35a:	je     0x14000c3c1
   14000c35c:	rex.RB jbe 0x14000c3c4
   14000c35f:	outs   dx,BYTE PTR ds:[rsi]
   14000c360:	je     0x14000c3b9
   14000c362:	add    BYTE PTR [rax],al
   14000c364:	rex.B add al,0x51
   14000c367:	jne    0x14000c3ce
   14000c369:	jne    0x14000c3d0
   14000c36b:	push   rbp
   14000c36c:	jae    0x14000c3d3
   14000c36e:	jb     0x14000c3c7
   14000c370:	outs   dx,DWORD PTR ds:[rsi]
   14000c371:	jb     0x14000c3de
   14000c373:	rex.WB je 0x14000c3db
   14000c376:	ins    DWORD PTR es:[rdi],dx
   14000c377:	add    BYTE PTR [rbp+0x0],bh
   14000c37a:	rex.XB ins BYTE PTR es:[rdi],dx
   14000c37c:	outs   dx,DWORD PTR ds:[rsi]
   14000c37d:	jae    0x14000c3e4
   14000c37f:	rex.W (bad) 
   14000c381:	outs   dx,BYTE PTR ds:[rsi]
   14000c382:	fs ins BYTE PTR es:[rdi],dx
   14000c384:	gs add bh,dl
   14000c387:	add    DWORD PTR [rdi+0x65],eax
   14000c38a:	je     0x14000c3cf
   14000c38c:	outs   dx,DWORD PTR ds:[rsi]
   14000c38d:	ins    DWORD PTR es:[rdi],dx
   14000c38e:	jo     0x14000c405
   14000c390:	je     0x14000c3f7
   14000c392:	jb     0x14000c3e2
   14000c394:	(bad)  
   14000c395:	ins    DWORD PTR es:[rdi],dx
   14000c396:	gs rex.RB js 0x14000c3f1
   14000c39a:	add    BYTE PTR [rax],al
   14000c39c:	adc    BYTE PTR [rdx],al
   14000c39e:	rex.RXB
   14000c39f:	gs je  0x14000c3e5
   14000c3a2:	jne    0x14000c416
   14000c3a4:	jb     0x14000c40b
   14000c3a6:	outs   dx,BYTE PTR ds:[rsi]
   14000c3a7:	je     0x14000c3f9
   14000c3a9:	jb     0x14000c41a
   14000c3ab:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c3ae:	jae    0x14000c3b0
   14000c3b0:	and    eax,DWORD PTR [rcx]
   14000c3b2:	rex.R jne 0x14000c425
   14000c3b5:	ins    BYTE PTR es:[rdi],dx
   14000c3b6:	imul   esp,DWORD PTR [rbx+0x61],0x61486574
   14000c3bd:	outs   dx,BYTE PTR ds:[rsi]
   14000c3be:	fs ins BYTE PTR es:[rdi],dx
   14000c3c0:	add    BYTE PTR gs:[rdx],cl
   14000c3c3:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   14000c3c7:	gs je  0x14000c42f
   14000c3ca:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x4702de00
   14000c3d3:	gs je  0x14000c429
   14000c3d6:	jns    0x14000c44b
   14000c3d8:	je     0x14000c43f
   14000c3da:	ins    DWORD PTR es:[rdi],dx
   14000c3db:	push   rsp
   14000c3dc:	imul   ebp,DWORD PTR [rbp+0x65],0x4702eb00
   14000c3e3:	gs je  0x14000c43a
   14000c3e6:	gs ins DWORD PTR es:[rdi],dx
   14000c3e8:	jo     0x14000c430
   14000c3ea:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x57656d61
   14000c3f2:	add    BYTE PTR [rax],al
   14000c3f4:	fiadd  DWORD PTR [rax]
   14000c3f6:	rex.XB jb 0x14000c45e
   14000c3f9:	(bad)  
   14000c3fa:	je     0x14000c461
   14000c3fc:	push   rax
   14000c3fd:	jb     0x14000c46e
   14000c3ff:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c402:	jae    0x14000c45b
   14000c404:	add    BYTE PTR [rax],al
   14000c406:	in     eax,dx
   14000c407:	add    al,BYTE PTR [rdi+0x65]
   14000c40a:	je     0x14000c460
   14000c40c:	gs ins DWORD PTR es:[rdi],dx
   14000c40e:	jo     0x14000c460
   14000c410:	(bad)  
   14000c411:	je     0x14000c47b
   14000c413:	push   rdi
   14000c414:	add    BYTE PTR [rax],al
   14000c416:	movabs al,ds:0x4d74616d726f4601
   14000c41f:	gs jae 0x14000c495
   14000c422:	(bad)  
   14000c423:	addr32 gs push rdi
   14000c426:	add    BYTE PTR [rax],al
   14000c428:	rex.WXB
   14000c429:	rex.RB push r10
   14000c42b:	rex.WRX
   14000c42c:	rex.RB
   14000c42d:	xor    r14,QWORD PTR [rdx]
   14000c430:	cs fs ins BYTE PTR es:[rdi],dx
   14000c433:	ins    BYTE PTR es:[rdi],dx
   14000c434:	add    BYTE PTR [rax],al
   14000c436:	loop   0x14000c43a
   14000c438:	push   rbx
   14000c439:	outs   dx,BYTE PTR gs:[rsi]
   14000c43b:	fs rex.WRB
   14000c43d:	gs jae 0x14000c4b3
   14000c440:	(bad)  
   14000c441:	addr32 gs push rdi
   14000c444:	add    BYTE PTR [rax],al
   14000c446:	cmp    BYTE PTR [rbx],al
   14000c448:	push   rbx
   14000c449:	gs je  0x14000c4a3
   14000c44c:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   14000c453:	outs   dx,BYTE PTR ds:[rsi]
   14000c454:	addr32 push rax
   14000c456:	je     0x14000c4ca
   14000c458:	push   rdi
   14000c459:	add    BYTE PTR [rcx],bh
   14000c45b:	add    edx,DWORD PTR [rbx+0x65]
   14000c45e:	je     0x14000c4b7
   14000c460:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   14000c467:	outs   dx,BYTE PTR ds:[rsi]
   14000c468:	addr32 push rdi
   14000c46a:	add    BYTE PTR [rax],al
   14000c46c:	int    0x1
   14000c46e:	rex.RXB
   14000c46f:	gs je  0x14000c4c9
   14000c472:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   14000c479:	outs   dx,BYTE PTR ds:[rsi]
   14000c47a:	addr32 push rax
   14000c47c:	je     0x14000c4f0
   14000c47e:	push   rdi
   14000c47f:	add    BYTE PTR [rdi+0x1],bh
   14000c482:	rex.RXB
   14000c483:	gs je  0x14000c4d6
   14000c486:	(bad)  
   14000c487:	jb     0x14000c4ee
   14000c489:	outs   dx,BYTE PTR ds:[rsi]
   14000c48a:	je     0x14000c48c
   14000c48c:	add    DWORD PTR [rdx],0x50
   14000c48f:	outs   dx,DWORD PTR ds:[rsi]
   14000c490:	jae    0x14000c506
   14000c492:	rex.WRB
   14000c493:	gs jae 0x14000c509
   14000c496:	(bad)  
   14000c497:	addr32 gs push rdi
   14000c49a:	add    BYTE PTR [rax],al
   14000c49c:	rex.XB add BYTE PTR [r11+0x68],al
   14000c4a0:	movsxd ebp,DWORD PTR gs:[rbx+0x52]
   14000c4a4:	(bad)  
   14000c4a5:	imul   ebp,DWORD PTR fs:[rdi+0x42],0x6f747475
   14000c4ad:	outs   dx,BYTE PTR ds:[rsi]
   14000c4ae:	add    BYTE PTR [rax],al
   14000c4b0:	adc    BYTE PTR [rdx],al
   14000c4b2:	rex.WB jae 0x14000c4f9
   14000c4b5:	ins    BYTE PTR es:[rdi],dx
   14000c4b6:	addr32 rex.X jne 0x14000c52e
   14000c4ba:	je     0x14000c52b
   14000c4bc:	outs   dx,BYTE PTR ds:[rsi]
   14000c4bd:	rex.XB push 0x656b6365
   14000c4c3:	add    BYTE PTR fs:[rax],al
   14000c4c6:	rex add edx,DWORD PTR [rbx+0x65]
   14000c4ca:	je     0x14000c523
   14000c4cc:	imul   ebp,DWORD PTR [rsi+0x64],0x6554776f
   14000c4d3:	js     0x14000c549
   14000c4d5:	push   rdi
   14000c4d6:	add    BYTE PTR [rax],al
   14000c4d8:	out    0x0,al
   14000c4da:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000c4dc:	(bad)  
   14000c4dd:	(bad)  
   14000c4de:	ins    BYTE PTR es:[rdi],dx
   14000c4df:	gs push rdi
   14000c4e1:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14000c4e8:	add    r10,QWORD PTR [rbx+0x68]
   14000c4ec:	outs   dx,DWORD PTR ds:[rsi]
   14000c4ed:	ja     0x14000c546
   14000c4ef:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14000c4f6:	fld    DWORD PTR [rdx]
   14000c4f8:	push   rbx
   14000c4f9:	outs   dx,BYTE PTR gs:[rsi]
   14000c4fb:	fs rex.R ins BYTE PTR es:[rdi],dx
   14000c4fe:	addr32 rex.WB je 0x14000c567
   14000c502:	ins    DWORD PTR es:[rdi],dx
   14000c503:	rex.WRB
   14000c504:	gs jae 0x14000c57a
   14000c507:	(bad)  
   14000c508:	addr32 gs push rdi
   14000c50b:	add    BYTE PTR [rax+0x1],al
   14000c50e:	rex.RXB
   14000c50f:	gs je  0x14000c556
   14000c512:	ins    BYTE PTR es:[rdi],dx
   14000c513:	addr32 rex.WB je 0x14000c57c
   14000c517:	ins    DWORD PTR es:[rdi],dx
   14000c518:	add    BYTE PTR [rax],al
   14000c51a:	fild   DWORD PTR [rcx]
   14000c51c:	rex.RXB
   14000c51d:	gs je  0x14000c577
   14000c520:	imul   ebp,DWORD PTR [rsi+0x64],0x6554776f
   14000c527:	js     0x14000c59d
   14000c529:	push   rdi
   14000c52a:	add    BYTE PTR [rax],al
   14000c52c:	std    
   14000c52d:	add    dl,BYTE PTR [rbx+0x65]
   14000c530:	je     0x14000c578
   14000c532:	outs   dx,DWORD PTR ds:[rsi]
   14000c533:	movsxd esi,DWORD PTR [rbp+0x73]
   14000c536:	add    BYTE PTR [rax],al
   14000c538:	add    BYTE PTR ds:[rbx+0x68],al
   14000c53c:	movsxd ebp,DWORD PTR gs:[rbx+0x44]
   14000c540:	ins    BYTE PTR es:[rdi],dx
   14000c541:	addr32 rex.X jne 0x14000c5b9
   14000c545:	je     0x14000c5b6
   14000c547:	outs   dx,BYTE PTR ds:[rsi]
   14000c548:	add    BYTE PTR [rax],al
   14000c54a:	mov    dh,0x0
   14000c54c:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   14000c554:	rex.WRB
   14000c555:	gs jae 0x14000c5cb
   14000c558:	(bad)  
   14000c559:	addr32 gs push rdi
   14000c55c:	add    BYTE PTR [rax],al
   14000c55e:	jg     0x14000c562
   14000c560:	push   rax
   14000c561:	gs imul ecx,DWORD PTR gs:[rbp+0x65],0x73
   14000c567:	jae    0x14000c5ca
   14000c569:	addr32 gs push rdi
   14000c56c:	add    BYTE PTR [rax],al
   14000c56e:	imul   eax,DWORD PTR [rbx],0x54
   14000c571:	jb     0x14000c5d4
   14000c573:	outs   dx,BYTE PTR ds:[rsi]
   14000c574:	jae    0x14000c5e2
   14000c576:	(bad)  
   14000c577:	je     0x14000c5de
   14000c579:	rex.WRB
   14000c57a:	gs jae 0x14000c5f0
   14000c57d:	(bad)  
   14000c57e:	add    BYTE PTR gs:[eax],al
   14000c582:	push   rbp
   14000c583:	push   rbx
   14000c584:	rex.RB push r10
   14000c586:	xor    esi,DWORD PTR [rdx]
   14000c588:	cs fs ins BYTE PTR es:[rdi],dx
   14000c58b:	ins    BYTE PTR es:[rdi],dx
   14000c58c:	add    BYTE PTR [rax],al
   14000c58e:	add    DWORD PTR [rip+0x63736377],eax        # 0x1a374290b
   14000c594:	push   0xffffffff8a000072
   14000c599:	add    ebx,DWORD PTR [rdi+0x77]
   14000c59c:	movsxd esi,DWORD PTR [rbx+0x69]
   14000c59f:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000c5a2:	add    BYTE PTR [rax],al
   14000c5a4:	or     eax,DWORD PTR [rip+0x6e736377]        # 0x1ae742921
   14000c5aa:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000c5ad:	add    BYTE PTR [rsi+0x75705f02],bl
   14000c5b3:	jb     0x14000c61a
   14000c5b5:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000c5b8:	ins    BYTE PTR es:[rdi],dx
   14000c5b9:	add    BYTE PTR [rax],dl
   14000c5bb:	add    eax,0x72736377
   14000c5c0:	movsxd ebp,DWORD PTR [rax+0x72]
   14000c5c3:	add    BYTE PTR [rcx+0x3],ch
   14000c5c6:	pop    rdi
   14000c5c7:	jbe    0x14000c63c
   14000c5c9:	outs   dx,BYTE PTR ds:[rsi]
   14000c5ca:	ja     0x14000c63c
   14000c5cc:	jb     0x14000c637
   14000c5ce:	outs   dx,BYTE PTR ds:[rsi]
   14000c5cf:	je     0x14000c637
   14000c5d1:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14000c5d5:	jb     0x14000c63c
   14000c5d7:	add    BYTE PTR gs:[rax],al
   14000c5da:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14000c5e1:	movsxd eax,DWORD PTR [rax]
   14000c5e3:	add    BYTE PTR [rdi+0x61635f00],bh
   14000c5e9:	ins    BYTE PTR es:[rdi],dx
   14000c5ea:	ins    BYTE PTR es:[rdi],dx
   14000c5eb:	outs   dx,BYTE PTR ds:[rsi]
   14000c5ec:	gs ja  0x14000c657
   14000c5ef:	add    BYTE PTR [rbp+0x0],dl
   14000c5f2:	pop    rdi
   14000c5f3:	pop    rax
   14000c5f4:	movsxd esi,DWORD PTR [rax+0x74]
   14000c5f7:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000c600:	pop    rdi
   14000c601:	(bad)  
   14000c602:	ins    DWORD PTR es:[rdi],dx
   14000c603:	jae    0x14000c66c
   14000c605:	pop    rdi
   14000c606:	gs js  0x14000c672
   14000c609:	je     0x14000c60b
   14000c60b:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000c611:	addr32 gs je 0x14000c682
   14000c615:	(bad)  
   14000c616:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000c61d:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000c623:	gs je  0x14000c685
   14000c626:	(bad)  
   14000c627:	jo     0x14000c699
   14000c629:	pop    rdi
   14000c62a:	je     0x14000c6a5
   14000c62c:	jo     0x14000c693
   14000c62e:	add    BYTE PTR [rax],al
   14000c630:	xor    al,BYTE PTR [riz*2+0x746978]
   14000c637:	add    BYTE PTR [rsi],cl
   14000c639:	add    DWORD PTR [rdi+0x65],ebx
   14000c63c:	js     0x14000c6a7
   14000c63e:	je     0x14000c640
   14000c640:	rol    DWORD PTR [rax],0x5f
   14000c643:	movsxd esp,DWORD PTR [rbp+0x78]
   14000c646:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000c64e:	jae    0x14000c6b5
   14000c650:	je     0x14000c6c7
   14000c652:	jae    0x14000c6b9
   14000c654:	jb     0x14000c6c3
   14000c656:	(bad)  
   14000c657:	je     0x14000c6c1
   14000c659:	gs jb  0x14000c6ce
   14000c65c:	add    BYTE PTR [rax],al
   14000c65e:	jge    0x14000c661
   14000c660:	pop    rdi
   14000c661:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000c668:	ins    DWORD PTR es:[rdi],dx
   14000c669:	add    BYTE PTR [rdi+0x0],dl
   14000c66c:	pop    rdi
   14000c66d:	pop    rdi
   14000c66e:	rex.XB pop r15
   14000c670:	jae    0x14000c6e2
   14000c672:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000c676:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000c67d:	ins    BYTE PTR es:[rdi],dx
   14000c67e:	gs jb  0x14000c681
   14000c681:	add    BYTE PTR [rdx+0x63775f03],al
   14000c687:	ins    DWORD PTR es:[rdi],dx
   14000c688:	fs ins BYTE PTR es:[rdi],dx
   14000c68a:	outs   dx,BYTE PTR ds:[rsi]
   14000c68b:	add    BYTE PTR [rdi],ah
   14000c68d:	add    DWORD PTR [rdi+0x66],ebx
   14000c690:	ins    DWORD PTR es:[rdi],dx
   14000c691:	outs   dx,DWORD PTR ds:[rsi]
   14000c692:	fs add BYTE PTR gs:[rax],al
   14000c696:	rol    BYTE PTR [rax],cl
   14000c698:	pop    rdi
   14000c699:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c69c:	ins    DWORD PTR es:[rdi],dx
   14000c69d:	outs   dx,DWORD PTR ds:[rsi]
   14000c69e:	fs add BYTE PTR gs:[rax],al
   14000c6a2:	ins    DWORD PTR es:[rdi],dx
   14000c6a3:	jae    0x14000c71b
   14000c6a5:	movsxd esi,DWORD PTR [rdx+0x74]
   14000c6a8:	cs fs ins BYTE PTR es:[rdi],dx
   14000c6ab:	ins    BYTE PTR es:[rdi],dx
   14000c6ac:	add    BYTE PTR [rax],al
   14000c6ae:	(bad)  
   14000c6af:	add    BYTE PTR [rdi],bh
   14000c6b1:	je     0x14000c718
   14000c6b3:	jb     0x14000c722
   14000c6b5:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000c6bc:	pop    rcx
   14000c6bd:	pop    r8
   14000c6bf:	pop    rax
   14000c6c0:	pop    rdx
   14000c6c1:	add    dh,ah
   14000c6c3:	add    DWORD PTR [rdi+0x6c],ebx
   14000c6c6:	outs   dx,DWORD PTR ds:[rsi]
   14000c6c7:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000c6ca:	add    ebx,DWORD PTR [r15+0x75]
   14000c6ce:	outs   dx,BYTE PTR ds:[rsi]
   14000c6cf:	ins    BYTE PTR es:[rdi],dx
   14000c6d0:	outs   dx,DWORD PTR ds:[rsi]
   14000c6d1:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000c6d4:	jnp    0x14000c6d6
   14000c6d6:	pop    rdi
   14000c6d7:	pop    rdi
   14000c6d8:	fs ins BYTE PTR es:[rdi],dx
   14000c6da:	ins    BYTE PTR es:[rdi],dx
   14000c6db:	outs   dx,DWORD PTR ds:[rsi]
   14000c6dc:	outs   dx,BYTE PTR ds:[rsi]
   14000c6dd:	gs js  0x14000c749
   14000c6e0:	je     0x14000c6e2
   14000c6e2:	nop
   14000c6e3:	add    bl,BYTE PTR [rdi+0x6f]
   14000c6e6:	outs   dx,BYTE PTR ds:[rsi]
   14000c6e7:	gs js  0x14000c753
   14000c6ea:	je     0x14000c6ec
   14000c6ec:	mov    BYTE PTR [rdx],0x52
   14000c6ef:	je     0x14000c75d
   14000c6f1:	rex.XB (bad) 
   14000c6f3:	jo     0x14000c769
   14000c6f5:	jne    0x14000c769
   14000c6f7:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000c6fa:	outs   dx,BYTE PTR ds:[rsi]
   14000c6fb:	je     0x14000c762
   14000c6fd:	js     0x14000c773
   14000c6ff:	add    BYTE PTR [rdi+0x4],dh
   14000c702:	push   rdx
   14000c703:	je     0x14000c771
   14000c705:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000c707:	outs   dx,DWORD PTR ds:[rsi]
   14000c708:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000c70c:	jne    0x14000c77c
   14000c70e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000c712:	outs   dx,BYTE PTR ds:[rsi]
   14000c713:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000c715:	je     0x14000c789
   14000c717:	jns    0x14000c719
   14000c719:	add    BYTE PTR [rbx+0x6c745205],cl
   14000c71f:	push   rsi
   14000c720:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000c727:	outs   dx,BYTE PTR ds:[rsi]
   14000c728:	ja     0x14000c793
   14000c72a:	outs   dx,BYTE PTR ds:[rsi]
   14000c72b:	add    BYTE PTR fs:[rax],al
   14000c72e:	outs   dx,BYTE PTR ds:[rsi]
   14000c72f:	je     0x14000c795
   14000c731:	ins    BYTE PTR es:[rdi],dx
   14000c732:	ins    BYTE PTR es:[rdi],dx
   14000c733:	cs fs ins BYTE PTR es:[rdi],dx
   14000c736:	ins    BYTE PTR es:[rdi],dx
   14000c737:	add    BYTE PTR [rdi],dh
   14000c739:	add    BYTE PTR [rax+0x61],dl
   14000c73c:	je     0x14000c7a6
   14000c73e:	rex.B jo 0x14000c7b1
   14000c741:	outs   dx,BYTE PTR gs:[rsi]
   14000c743:	fs push rdi
   14000c745:	add    BYTE PTR [rbx+0x48],dl
   14000c748:	rex.WR push rdi
   14000c74a:	push   r8
   14000c74c:	rex.WB
   14000c74d:	cs fs ins BYTE PTR es:[rdi],dx
   14000c750:	ins    BYTE PTR es:[rdi],dx
   14000c751:	add    BYTE PTR [rcx],dh
   14000c753:	add    BYTE PTR [rbp+riz*2+0x73],al
   14000c757:	je     0x14000c7cb
   14000c759:	outs   dx,DWORD PTR ds:[rsi]
   14000c75a:	jns    0x14000c7ac
   14000c75c:	jb     0x14000c7cd
   14000c75e:	jo     0x14000c7c5
   14000c760:	jb     0x14000c7d6
   14000c762:	jns    0x14000c7b7
   14000c764:	push   0x50746565
   14000c769:	(bad)  
   14000c76a:	add    BYTE PTR gs:[eax],al
   14000c76e:	xchg   BYTE PTR [rax],al
   14000c770:	push   rax
   14000c771:	jb     0x14000c7e2
   14000c773:	jo     0x14000c7da
   14000c775:	jb     0x14000c7eb
   14000c777:	jns    0x14000c7cc
   14000c779:	push   0x57746565
   14000c77e:	add    BYTE PTR [rax],al
   14000c780:	or     DWORD PTR [rax],eax
   14000c782:	rex.XB jb 0x14000c7ea
   14000c785:	(bad)  
   14000c786:	je     0x14000c7ed
   14000c788:	push   rax
   14000c789:	jb     0x14000c7fa
   14000c78b:	jo     0x14000c7f2
   14000c78d:	jb     0x14000c803
   14000c78f:	jns    0x14000c7e4
   14000c791:	push   0x50746565
   14000c796:	(bad)  
   14000c797:	addr32 gs push rdi
   14000c79a:	add    BYTE PTR [rax],al
   14000c79c:	rex.XB
   14000c79d:	rex.WRXB
   14000c79e:	rex.WRB
   14000c79f:	rex.XB push r12
   14000c7a1:	xor    r14,QWORD PTR [rdx]
   14000c7a4:	cs fs ins BYTE PTR es:[rdi],dx
   14000c7a7:	ins    BYTE PTR es:[rdi],dx
   14000c7a8:	add    BYTE PTR [rax],al
   14000c7aa:	rex.WRXB
   14000c7ab:	rex.WR
   14000c7ac:	rex.RB
   14000c7ad:	push   r13
   14000c7af:	push   rsp
   14000c7b0:	xor    esi,DWORD PTR [rdx]
   14000c7b2:	cs fs ins BYTE PTR es:[rdi],dx
   14000c7b5:	ins    BYTE PTR es:[rdi],dx
   14000c7b6:	add    BYTE PTR [rax],al
   14000c7b8:	sub    eax,DWORD PTR [rax]
   14000c7ba:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c7bc:	rex.XB jb 0x14000c824
   14000c7bf:	(bad)  
   14000c7c0:	je     0x14000c827
   14000c7c2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c7c4:	jae    0x14000c83a
   14000c7c6:	(bad)  
   14000c7c7:	outs   dx,BYTE PTR ds:[rsi]
   14000c7c8:	movsxd esp,DWORD PTR [rbp+0x0]
   14000c7cb:	add    BYTE PTR [rax+0x556f4300],dl
   14000c7d1:	outs   dx,BYTE PTR ds:[rsi]
   14000c7d2:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000c7d9:	imul   edi,DWORD PTR [rdx+0x65],0x610000
   14000c7e0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c7e2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c7e4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000c7ec:	rex.RB js 0x14000c7ef
   14000c7ef:	add    BYTE PTR [rdi+0x6c],ch
   14000c7f2:	xor    esi,DWORD PTR gs:[rdx]
   14000c7f5:	cs fs ins BYTE PTR es:[rdi],dx
   14000c7f8:	ins    BYTE PTR es:[rdi],dx
   14000c7f9:	add    BYTE PTR [rax+rax*1],cl
   14000c7fc:	rex.RXB
   14000c7fd:	gs je  0x14000c84f
   14000c800:	jo     0x14000c867
   14000c802:	outs   dx,BYTE PTR ds:[rsi]
   14000c803:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x57656d61
   14000c80c:	add    BYTE PTR [rax],al
   14000c80e:	(bad)  
   14000c80f:	add    BYTE PTR [rdi+0x65],al
   14000c812:	je     0x14000c867
   14000c814:	(bad)  
   14000c815:	jbe    0x14000c87c
   14000c817:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x57656d61
   14000c820:	add    BYTE PTR [rax],al
   14000c822:	rex.XB
   14000c823:	rex.WRXB
   14000c824:	rex.WRB
   14000c825:	rex.R
   14000c826:	rex.WR
   14000c827:	rex.RXB xor r14d,DWORD PTR [r10]
   14000c82a:	cs fs ins BYTE PTR es:[rdi],dx
   14000c82d:	ins    BYTE PTR es:[rdi],dx
   14000c82e:	add    BYTE PTR [rax],al
   14000c830:	(bad)  
   14000c831:	add    BYTE PTR [rbx+0x6f],al
   14000c834:	ins    DWORD PTR es:[rdi],dx
   14000c835:	ins    DWORD PTR es:[rdi],dx
   14000c836:	(bad)  
   14000c837:	outs   dx,BYTE PTR ds:[rsi]
   14000c838:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
   14000c841:	addr32 jbe 0x14000c89b
   14000c844:	add    BYTE PTR [rax],al
   14000c846:	jne    0x14000c849
   14000c848:	push   rbx
   14000c849:	rex.W
   14000c84a:	rex.RXB
   14000c84b:	gs je  0x14000c8a1
   14000c84e:	jo     0x14000c8b5
   14000c850:	movsxd ebp,DWORD PTR [rcx+0x61]
   14000c853:	ins    BYTE PTR es:[rdi],dx
   14000c854:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000c856:	ins    BYTE PTR es:[rdi],dx
   14000c857:	fs gs jb 0x14000c8ab
   14000c85b:	(bad)  
   14000c85c:	je     0x14000c8c6
   14000c85e:	push   rdi
   14000c85f:	add    BYTE PTR [rdi+0x1],bl
   14000c862:	push   rbx
   14000c863:	rex.W
   14000c864:	rex.RXB
   14000c865:	gs je  0x14000c8b3
   14000c868:	outs   dx,BYTE PTR ds:[rsi]
   14000c869:	outs   dx,DWORD PTR ds:[rsi]
   14000c86a:	ja     0x14000c8da
   14000c86c:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000c86e:	ins    BYTE PTR es:[rdi],dx
   14000c86f:	fs gs jb 0x14000c8bc
   14000c873:	rex.R
   14000c874:	imul   r14,QWORD PTR [rbx+0x74],0x9e0000
   14000c87c:	push   rbx
   14000c87d:	rex.W
   14000c87e:	rex.XB jb 0x14000c8e6
   14000c881:	(bad)  
   14000c882:	je     0x14000c8e9
   14000c884:	rex.WB je 0x14000c8ec
   14000c887:	ins    DWORD PTR es:[rdi],dx
   14000c888:	rex.RX jb 0x14000c8fa
   14000c88b:	ins    DWORD PTR es:[rdi],dx
   14000c88c:	rex.WB
   14000c88d:	rex.R
   14000c88e:	imul   r14,QWORD PTR [rbx+0x74],0x1b50000
   14000c896:	push   rbx
   14000c897:	push   0x456c6c65
   14000c89c:	js     0x14000c903
   14000c89e:	movsxd esi,DWORD PTR [rbp+0x74]
   14000c8a1:	gs rex.RB js 0x14000c8fc
   14000c8a5:	add    BYTE PTR [rbx+0x48],dl
   14000c8a8:	rex.RB
   14000c8a9:	rex.WR
   14000c8aa:	xor    r14,QWORD PTR [rdx]
   14000c8ad:	cs fs ins BYTE PTR es:[rdi],dx
   14000c8b0:	ins    BYTE PTR es:[rdi],dx
   14000c8b1:	add    BYTE PTR [rip+0x6f6c4300],bl        # 0x1af6d0bb7
   14000c8b7:	jae    0x14000c91e
   14000c8b9:	push   rax
   14000c8ba:	jb     0x14000c925
   14000c8bc:	outs   dx,BYTE PTR ds:[rsi]
   14000c8bd:	je     0x14000c924
   14000c8bf:	jb     0x14000c8c1
   14000c8c1:	add    BYTE PTR [rsi+0x65704f00],dl
   14000c8c7:	outs   dx,BYTE PTR ds:[rsi]
   14000c8c8:	push   rax
   14000c8c9:	jb     0x14000c934
   14000c8cb:	outs   dx,BYTE PTR ds:[rsi]
   14000c8cc:	je     0x14000c933
   14000c8ce:	jb     0x14000c927
   14000c8d0:	add    BYTE PTR [rax],al
   14000c8d2:	push   rdi
   14000c8d3:	rex.WB
   14000c8d4:	rex.WRX push rbx
   14000c8d6:	push   rax
   14000c8d7:	rex.WRXB
   14000c8d8:	rex.WRXB
   14000c8d9:	rex.WR
   14000c8da:	cs rex.R push rdx
   14000c8dd:	push   rsi
   14000c8de:	add    BYTE PTR [rax],al
   14000c8e0:	and    BYTE PTR [rbx],al
   14000c8e2:	push   rsp
   14000c8e3:	jb     0x14000c946
   14000c8e5:	movsxd esp,DWORD PTR [rbp+0x4d]
   14000c8e8:	gs jae 0x14000c95e
   14000c8eb:	(bad)  
   14000c8ec:	add    BYTE PTR gs:[eax],al
   14000c8f0:	ins    DWORD PTR es:[rdi],dx
   14000c8f1:	add    eax,0x65656c53
   14000c8f6:	jo     0x14000c8f8
   14000c8f8:	mov    DWORD PTR [rdx],0x53746547
   14000c8fe:	je     0x14000c961
   14000c900:	jb     0x14000c976
   14000c902:	jne    0x14000c974
   14000c904:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c906:	outs   dx,WORD PTR ds:[rsi]
   14000c908:	push   rdi
   14000c909:	add    BYTE PTR [rsi+0x5],bl
   14000c90c:	push   rbx
   14000c90d:	gs je  0x14000c965
   14000c910:	outs   dx,BYTE PTR ds:[rsi]
   14000c911:	push   0x6c646e61
   14000c916:	gs fs rex.RB js 0x14000c97e
   14000c91b:	gs jo  0x14000c992
   14000c91e:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000c925:	gs jb  0x14000c928
   14000c928:	outs   dx,BYTE PTR ds:[rsi]
   14000c929:	add    al,BYTE PTR [rdi+0x65]
   14000c92c:	je     0x14000c97b
   14000c92e:	outs   dx,DWORD PTR ds:[rsi]
   14000c92f:	fs jne 0x14000c99e
   14000c932:	gs rex.W (bad) 
   14000c935:	outs   dx,BYTE PTR ds:[rsi]
   14000c936:	fs ins BYTE PTR es:[rdi],dx
   14000c938:	gs push rdi
   14000c93a:	add    BYTE PTR [rax],al
   14000c93c:	ss add al,0x51
   14000c93f:	jne    0x14000c9a6
   14000c941:	jb     0x14000c9bc
   14000c943:	push   rax
   14000c944:	gs jb  0x14000c9ad
   14000c947:	outs   dx,DWORD PTR ds:[rsi]
   14000c948:	jb     0x14000c9b7
   14000c94a:	(bad)  
   14000c94b:	outs   dx,BYTE PTR ds:[rsi]
   14000c94c:	movsxd esp,DWORD PTR [rbp+0x43]
   14000c94f:	outs   dx,DWORD PTR ds:[rsi]
   14000c950:	jne    0x14000c9c0
   14000c952:	je     0x14000c9b9
   14000c954:	jb     0x14000c956
   14000c956:	adc    DWORD PTR [rdx],eax
   14000c958:	rex.RXB
   14000c959:	gs je  0x14000c99f
   14000c95c:	jne    0x14000c9d0
   14000c95e:	jb     0x14000c9c5
   14000c960:	outs   dx,BYTE PTR ds:[rsi]
   14000c961:	je     0x14000c9b3
   14000c963:	jb     0x14000c9d4
   14000c965:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c968:	jae    0x14000c9b3
   14000c96a:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b4661073
   14000c971:	rex.XB jne 0x14000c9e6
   14000c974:	jb     0x14000c9db
   14000c976:	outs   dx,BYTE PTR ds:[rsi]
   14000c977:	je     0x14000c9cd
   14000c979:	push   0x64616572
   14000c97e:	rex.WB
   14000c97f:	add    BYTE PTR fs:[rax],al
   14000c982:	loopne 0x14000c986
   14000c984:	rex.RXB
   14000c985:	gs je  0x14000c9db
   14000c988:	jns    0x14000c9fd
   14000c98a:	je     0x14000c9f1
   14000c98c:	ins    DWORD PTR es:[rdi],dx
   14000c98d:	push   rsp
   14000c98e:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000c995:	ins    BYTE PTR es:[rdi],dx
   14000c996:	gs push rsp
   14000c998:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   14000c99f:	gs je  0x14000c9f6
   14000c9a2:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000c9a9:	je     0x14000c9ab
   14000c9ab:	add    BYTE PTR [rsi+0x686e5505],bl
   14000c9b1:	(bad)  
   14000c9b2:	outs   dx,BYTE PTR ds:[rsi]
   14000c9b3:	fs ins BYTE PTR es:[rdi],dx
   14000c9b5:	gs fs rex.RB js 0x14000ca1d
   14000c9ba:	gs jo  0x14000ca31
   14000c9bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000c9c4:	gs jb  0x14000c9c7
   14000c9c7:	add    BYTE PTR [rbp+rax*1+0x54],bh
   14000c9cb:	gs jb  0x14000ca3b
   14000c9ce:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000c9d5:	outs   dx,DWORD PTR ds:[rsi]
   14000c9d6:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c9d9:	jae    0x14000c9db
   14000c9db:	add    BYTE PTR [rbx+0x2],al
   14000c9de:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000c9e0:	(bad)  
   14000c9e1:	fs push rbx
   14000c9e3:	je     0x14000ca57
   14000c9e5:	imul   ebp,DWORD PTR [rsi+0x67],0x5b0057
   14000c9ec:	pop    rdi
   14000c9ed:	pop    rdi
   14000c9ee:	rex.XB js 0x14000ca69
   14000c9f1:	rex.RX jb 0x14000ca55
   14000c9f4:	ins    DWORD PTR es:[rdi],dx
   14000c9f5:	gs rex.W (bad) 
   14000c9f8:	outs   dx,BYTE PTR ds:[rsi]
   14000c9f9:	fs ins BYTE PTR es:[rdi],dx
   14000c9fb:	gs jb  0x14000ca31
   14000c9fe:	add    BYTE PTR [rax],al
   14000ca00:	cmp    DWORD PTR [rax],eax
   14000ca02:	rex.RB je 0x14000ca7c
   14000ca05:	rex.RB jbe 0x14000ca6d
   14000ca08:	outs   dx,BYTE PTR ds:[rsi]
   14000ca09:	je     0x14000ca5d
   14000ca0b:	imul   esi,DWORD PTR gs:[ebx+0x74],0x7265
   14000ca14:	cmp    eax,DWORD PTR [rax]
   14000ca16:	rex.RB je 0x14000ca90
   14000ca19:	rex.RB jbe 0x14000ca81
   14000ca1c:	outs   dx,BYTE PTR ds:[rsi]
   14000ca1d:	je     0x14000ca74
   14000ca1f:	outs   dx,BYTE PTR ds:[rsi]
   14000ca20:	jb     0x14000ca87
   14000ca22:	imul   esi,DWORD PTR [ebx+0x74],0x7265
   14000ca2a:	mov    WORD PTR [rax],es
   14000ca2c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ca2e:	push   rsp
   14000ca2f:	(bad)  
   14000ca30:	jae    0x14000ca9d
   14000ca32:	rex.WRB
   14000ca33:	gs ins DWORD PTR es:[rdi],dx
   14000ca35:	rex.RX jb 0x14000ca9d
   14000ca38:	add    BYTE PTR gs:[rbp+0x3],dl
   14000ca3c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000ca3e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000ca46:	rex.XB jb 0x14000cab2
   14000ca49:	je     0x14000cab4
   14000ca4b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000ca4e:	push   rbx
   14000ca4f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000ca54:	outs   dx,BYTE PTR ds:[rsi]
   14000ca55:	rex.B outs dx,BYTE PTR ds:[rsi]
   14000ca57:	fs push rbx
   14000ca59:	jo     0x14000cac4
   14000ca5b:	outs   dx,BYTE PTR ds:[rsi]
   14000ca5c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ca5e:	jne    0x14000cace
   14000ca60:	je     0x14000ca62
   14000ca62:	add    eax,0x6c654401
   14000ca67:	gs je  0x14000cacf
   14000ca6a:	rex.XB jb 0x14000cad6
   14000ca6d:	je     0x14000cad8
   14000ca6f:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000ca72:	push   rbx
   14000ca73:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000ca78:	outs   dx,BYTE PTR ds:[rsi]
   14000ca79:	add    BYTE PTR [rsi+0x6d656d04],dl
   14000ca7f:	jae    0x14000cae6
   14000ca81:	je     0x14000ca83
   14000ca83:	add    BYTE PTR [rdx],al
   14000ca85:	add    eax,0x63736377
   14000ca8a:	ins    DWORD PTR es:[rdi],dx
   14000ca8b:	jo     0x14000ca8d
	...

Disassembly of section .data:

000000014000d000 <.data>:
   14000d000:	add    DWORD PTR [rax],eax
   14000d002:	add    BYTE PTR [rax],al
   14000d004:	add    BYTE PTR [rax],al
   14000d006:	add    BYTE PTR [rax],al
   14000d008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000d00e:	add    BYTE PTR [rax],al
   14000d010:	int    0x5d
   14000d012:	and    dl,dl
   14000d014:	data16 (bad) 
   14000d016:	(bad)  
   14000d017:	inc    DWORD PTR [rax]
   14000d019:	add    BYTE PTR [rax],al
   14000d01b:	add    BYTE PTR [rax],al
   14000d01d:	add    BYTE PTR [rax],al
   14000d01f:	add    BYTE PTR [rax],ah
   14000d021:	rol    BYTE PTR [rax],1
   14000d023:	rex add DWORD PTR [rax],eax
   14000d026:	add    BYTE PTR [rax],al
   14000d028:	(bad)  
   14000d029:	(bad)  
   14000d02a:	(bad)  
   14000d02b:	(bad)  
   14000d02c:	(bad)  
   14000d02d:	(bad)  
   14000d02e:	(bad)  
   14000d02f:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

000000014000e000 <.pdata>:
   14000e000:	adc    BYTE PTR [rax],dl
   14000e002:	add    BYTE PTR [rax],al
   14000e004:	sub    DWORD PTR [rax],edx
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	in     al,dx
   14000e009:	mov    dh,0x0
   14000e00b:	add    BYTE PTR [rax],dh
   14000e00d:	adc    BYTE PTR [rax],al
   14000e00f:	add    BYTE PTR [rbp+0x10],bl
   14000e012:	add    BYTE PTR [rax],al
   14000e014:	in     al,dx
   14000e015:	mov    dh,0x0
   14000e017:	add    BYTE PTR [rax+0x10],ch
   14000e01a:	add    BYTE PTR [rax],al
   14000e01c:	ficom  WORD PTR [rax]
   14000e01e:	add    BYTE PTR [rax],al
   14000e020:	clc    
   14000e021:	mov    ch,0x0
   14000e023:	add    ah,ah
   14000e025:	adc    BYTE PTR [rax],al
   14000e027:	add    BYTE PTR [rbx],dh
   14000e029:	adc    DWORD PTR [rax],eax
   14000e02b:	add    BYTE PTR [rax],al
   14000e02d:	mov    dh,0x0
   14000e02f:	add    BYTE PTR [rcx+rdx*1],bh
   14000e032:	add    BYTE PTR [rax],al
   14000e034:	sbb    BYTE PTR [rax],r8b
   14000e037:	add    BYTE PTR [rax],cl
   14000e039:	mov    dh,0x0
   14000e03b:	add    BYTE PTR [rax+rbx*1+0x0],cl
   14000e03f:	add    BYTE PTR [rbx+rbx*1],ah
   14000e042:	add    BYTE PTR [rax],al
   14000e044:	xor    BYTE PTR [rsi+0x1b2c0000],dh
   14000e04a:	add    BYTE PTR [rax],al
   14000e04c:	rex.XB sbb al,0x0
   14000e04f:	add    BYTE PTR [rsi+rsi*4+0x0],dl
   14000e053:	add    BYTE PTR [rsp+rbx*1+0x0],cl
   14000e057:	add    BYTE PTR [rip+0x7000001e],dh        # 0x1b000e07b
   14000e05d:	mov    dh,0x0
   14000e05f:	add    BYTE PTR [rsi+rbx*1],bh
   14000e062:	add    BYTE PTR [rax],al
   14000e064:	jge    0x14000e084
   14000e066:	add    BYTE PTR [rax],al
   14000e068:	test   BYTE PTR [rsi+0x1e840000],dh
   14000e06e:	add    BYTE PTR [rax],al
   14000e070:	mov    esi,0x8c00001e
   14000e075:	mov    dh,0x0
   14000e077:	add    al,dl
   14000e079:	(bad)  
   14000e07a:	add    BYTE PTR [rax],al
   14000e07c:	pushf  
   14000e07d:	(bad)  
   14000e07e:	add    BYTE PTR [rax],al
   14000e080:	xchg   esp,eax
   14000e081:	mov    dh,0x0
   14000e083:	add    BYTE PTR [rax-0x77ffffe1],dh
   14000e089:	and    DWORD PTR [rax],eax
   14000e08b:	add    BYTE PTR [rsi+rsi*4+0x21ac0000],ch
   14000e092:	add    BYTE PTR [rax],al
   14000e094:	(bad)  
   14000e095:	sub    BYTE PTR [rax],al
   14000e097:	add    ah,al
   14000e099:	mov    dh,0x0
   14000e09b:	add    al,dl
   14000e09d:	sub    BYTE PTR [rax],al
   14000e09f:	add    BYTE PTR [rcx+rbp*1],cl
   14000e0a2:	add    BYTE PTR [rax],al
   14000e0a4:	in     al,dx
   14000e0a5:	mov    dh,0x0
   14000e0a7:	add    BYTE PTR [rax],ah
   14000e0a9:	sub    DWORD PTR [rax],eax
   14000e0ab:	add    BYTE PTR [rdi+0x29],dl
   14000e0ae:	add    BYTE PTR [rax],al
   14000e0b0:	in     al,dx
   14000e0b1:	mov    dh,0x0
   14000e0b3:	add    BYTE PTR [rax+0x29],ah
   14000e0b6:	add    BYTE PTR [rax],al
   14000e0b8:	pushf  
   14000e0b9:	sub    DWORD PTR [rax],eax
   14000e0bb:	add    ah,dh
   14000e0bd:	mov    dh,0x0
   14000e0bf:	add    BYTE PTR [rcx+rbp*1+0x2bd70000],bh
   14000e0c6:	add    BYTE PTR [rax],al
   14000e0c8:	cld    
   14000e0c9:	mov    dh,0x0
   14000e0cb:	add    al,ah
   14000e0cd:	sub    eax,DWORD PTR [rax]
   14000e0cf:	add    BYTE PTR [rdi+0x2c],dl
   14000e0d2:	add    BYTE PTR [rax],al
   14000e0d4:	sbb    BYTE PTR [rdi+0x2c600000],dh
   14000e0da:	add    BYTE PTR [rax],al
   14000e0dc:	lea    ebp,[rax+rax*1]
   14000e0df:	add    BYTE PTR [rax],ch
   14000e0e1:	mov    bh,0x0
   14000e0e3:	add    BYTE PTR [rax+0x6d00002c],ah
   14000e0e9:	sub    eax,0xb7300000
   14000e0ee:	add    BYTE PTR [rax],al
   14000e0f0:	sub    BYTE PTR [rip+0x2f130000],0x0        # 0x16f13e0f7
   14000e0f7:	add    BYTE PTR [rax-0x49],al
   14000e0fa:	add    BYTE PTR [rax],al
   14000e0fc:	and    BYTE PTR [rdi],ch
   14000e0fe:	add    BYTE PTR [rax],al
   14000e100:	rex.RX (bad) 
   14000e102:	add    BYTE PTR [rax],al
   14000e104:	hlt    
   14000e105:	mov    dh,0x0
   14000e107:	add    BYTE PTR [rdi+rbp*1+0x0],cl
   14000e10b:	add    BYTE PTR [rdi],ah
   14000e10d:	xor    al,BYTE PTR [rax]
   14000e10f:	add    BYTE PTR [rax-0x49],dl
   14000e112:	add    BYTE PTR [rax],al
   14000e114:	xor    BYTE PTR [rdx],dh
   14000e116:	add    BYTE PTR [rax],al
   14000e118:	mov    bh,0x32
   14000e11a:	add    BYTE PTR [rax],al
   14000e11c:	je     0x14000e0d5
   14000e11e:	add    BYTE PTR [rax],al
   14000e120:	shl    BYTE PTR [rdx],0x0
   14000e123:	add    ah,dl
   14000e125:	add    BYTE PTR ss:[rax],al
   14000e128:	mov    WORD PTR [rdi+0x36f40000],?
   14000e12e:	add    BYTE PTR [rax],al
   14000e130:	in     al,dx
   14000e131:	(bad)  
   14000e132:	add    BYTE PTR [rax],al
   14000e134:	mov    ah,0xb7
   14000e136:	add    BYTE PTR [rax],al
   14000e138:	adc    BYTE PTR [rax],bh
   14000e13a:	add    BYTE PTR [rax],al
   14000e13c:	cld    
   14000e13d:	cmp    BYTE PTR [rax],al
   14000e13f:	add    ah,cl
   14000e141:	mov    bh,0x0
   14000e143:	add    BYTE PTR [rcx+rdi*1],al
   14000e146:	add    BYTE PTR [rax],al
   14000e148:	fwait
   14000e149:	cmp    DWORD PTR [rax],eax
   14000e14b:	add    BYTE PTR [rdi+rsi*4+0x0],dh
   14000e14f:	add    BYTE PTR [rcx+rdi*1+0x3a0a0000],ah
   14000e156:	add    BYTE PTR [rax],al
   14000e158:	fdiv   DWORD PTR [rdi+0x3a100000]
   14000e15e:	add    BYTE PTR [rax],al
   14000e160:	adc    al,0x3b
   14000e162:	add    BYTE PTR [rax],al
   14000e164:	in     al,0xb7
   14000e166:	add    BYTE PTR [rax],al
   14000e168:	and    BYTE PTR [rbx],bh
   14000e16a:	add    BYTE PTR [rax],al
   14000e16c:	loop   0x14000e1a9
   14000e16e:	add    BYTE PTR [rax],al
   14000e170:	clc    
   14000e171:	mov    bh,0x0
   14000e173:	add    al,dh
   14000e175:	cmp    eax,DWORD PTR [rax]
   14000e177:	add    ch,cl
   14000e179:	cmp    al,0x0
   14000e17b:	add    ah,cl
   14000e17d:	mov    bh,0x0
   14000e17f:	add    al,ah
   14000e181:	cmp    al,0x0
   14000e183:	add    BYTE PTR [rdi],ch
   14000e185:	cmp    eax,0xb6f40000
   14000e18a:	add    BYTE PTR [rax],al
   14000e18c:	rex cmp eax,0x40150000
   14000e192:	add    BYTE PTR [rax],al
   14000e194:	or     al,0xb8
   14000e196:	add    BYTE PTR [rax],al
   14000e198:	sbb    al,0x40
   14000e19a:	add    BYTE PTR [rax],al
   14000e19c:	(bad)  
   14000e19d:	add    BYTE PTR [r8],al
   14000e1a0:	mov    ah,0xb7
   14000e1a2:	add    BYTE PTR [rax],al
   14000e1a4:	rex.WR
   14000e1a5:	add    BYTE PTR [r8],al
   14000e1a8:	rex.R
   14000e1a9:	rex.X add BYTE PTR [rax],al
   14000e1ac:	xor    BYTE PTR [rax+0x424c0000],bh
   14000e1b2:	add    BYTE PTR [rax],al
   14000e1b4:	in     eax,0x42
   14000e1b6:	add    BYTE PTR [rax],al
   14000e1b8:	mov    ah,0xb7
   14000e1ba:	add    BYTE PTR [rax],al
   14000e1bc:	in     al,dx
   14000e1bd:	rex.X add BYTE PTR [rax],al
   14000e1c0:	add    al,0x47
   14000e1c2:	add    BYTE PTR [rax],al
   14000e1c4:	rex.R mov eax,0x47100000
   14000e1ca:	add    BYTE PTR [rax],al
   14000e1cc:	fild   WORD PTR [rdi+0x0]
   14000e1cf:	add    BYTE PTR [rax+rdi*4+0x0],bl
   14000e1d3:	add    al,ch
   14000e1d5:	rex.RXB add BYTE PTR [r8],r8b
   14000e1d8:	push   rbx
   14000e1d9:	rex.W add BYTE PTR [rax],al
   14000e1dc:	fdiv   DWORD PTR [rdi+0x48600000]
   14000e1e2:	add    BYTE PTR [rax],al
   14000e1e4:	jno    0x14000e230
   14000e1e6:	add    BYTE PTR [rax],al
   14000e1e8:	push   0xffffffff800000b8
   14000e1ed:	rex.WX add BYTE PTR [rax],al
   14000e1f0:	xor    ecx,DWORD PTR [rbx+0x0]
   14000e1f3:	add    BYTE PTR [rax+0x400000b8],cl
   14000e1f9:	rex.WXB add BYTE PTR [r8],al
   14000e1fc:	(bad)  
   14000e1fd:	rex.WR add BYTE PTR [rax],r8b
   14000e200:	fdiv   DWORD PTR [rdi+0x4c1c0000]
   14000e206:	add    BYTE PTR [rax],al
   14000e208:	xchg   edx,eax
   14000e209:	rex.WRX add BYTE PTR [rax],r8b
   14000e20c:	nop
   14000e20d:	mov    eax,0x4ea00000
   14000e212:	add    BYTE PTR [rax],al
   14000e214:	(bad)  [rdi+0x0]
   14000e217:	add    BYTE PTR [rax-0xfffff48],ch
   14000e21d:	rex.WRXB add BYTE PTR [r8],r8b
   14000e220:	cmp    BYTE PTR [rcx+0x0],dl
   14000e223:	add    BYTE PTR [rax+0x400000b8],cl
   14000e229:	push   rcx
   14000e22a:	add    BYTE PTR [rax],al
   14000e22c:	ret    
   14000e22d:	push   rbx
   14000e22e:	add    BYTE PTR [rax],al
   14000e230:	sar    BYTE PTR [rax+0x53cc0000],0x0
   14000e237:	add    BYTE PTR [rsi-0x2bffffac],bh
   14000e23d:	mov    eax,0x54d00000
   14000e242:	add    BYTE PTR [rax],al
   14000e244:	sbb    edx,DWORD PTR [rbp+0x0]
   14000e247:	add    al,bl
   14000e249:	mov    bh,0x0
   14000e24b:	add    BYTE PTR [rdx*2+0x56e80000],ah
   14000e252:	add    BYTE PTR [rax],al
   14000e254:	loopne 0x14000e20e
   14000e256:	add    BYTE PTR [rax],al
   14000e258:	lock push rsi
   14000e25a:	add    BYTE PTR [rax],al
   14000e25c:	mov    edi,0xf4000058
   14000e261:	mov    eax,0x58c80000
   14000e266:	add    BYTE PTR [rax],al
   14000e268:	and    BYTE PTR [rdx+0x0],bl
   14000e26b:	add    BYTE PTR [rax],dl
   14000e26d:	mov    ecx,0x5a280000
   14000e272:	add    BYTE PTR [rax],al
   14000e274:	xor    eax,0x2c00005b
   14000e279:	mov    ecx,0x5b400000
   14000e27e:	add    BYTE PTR [rax],al
   14000e280:	rcr    BYTE PTR [rax+rax*1+0x0],cl
   14000e284:	cmp    al,0xb9
   14000e286:	add    BYTE PTR [rax],al
   14000e288:	fcomp  DWORD PTR [rax+rax*1+0x0]
   14000e28c:	rex.XB pop r13
   14000e28e:	add    BYTE PTR [rax],al
   14000e290:	fdiv   DWORD PTR [rdi+0x5d4c0000]
   14000e296:	add    BYTE PTR [rax],al
   14000e298:	and    bl,BYTE PTR [rsi+0x0]
   14000e29b:	add    BYTE PTR [rax-0x47],dl
   14000e29e:	add    BYTE PTR [rax],al
   14000e2a0:	sub    BYTE PTR [rsi+0x0],bl
   14000e2a3:	add    BYTE PTR [rsi+rbx*2-0x48280000],dl
   14000e2aa:	add    BYTE PTR [rax],al
   14000e2ac:	movabs al,ds:0x9400005f4c00005e
   14000e2b5:	mov    dh,0x0
   14000e2b7:	add    BYTE PTR [rax+0x5f],ah
   14000e2ba:	add    BYTE PTR [rax],al
   14000e2bc:	iret   
   14000e2bd:	pop    rdi
   14000e2be:	add    BYTE PTR [rax],al
   14000e2c0:	fdiv   DWORD PTR [rdi+0x5fe00000]
   14000e2c6:	add    BYTE PTR [rax],al
   14000e2c8:	jno    0x14000e32a
   14000e2ca:	add    BYTE PTR [rax],al
   14000e2cc:	(bad)  
   14000e2cd:	mov    ecx,0x60a00000
   14000e2d2:	add    BYTE PTR [rax],al
   14000e2d4:	frstor [rax+0x0]
   14000e2d7:	add    al,bl
   14000e2d9:	mov    bh,0x0
   14000e2db:	add    BYTE PTR [rax],dh
   14000e2dd:	(bad)  
   14000e2de:	add    BYTE PTR [rax],al
   14000e2e0:	gs (bad) 
   14000e2e2:	add    BYTE PTR [rax],al
   14000e2e4:	test   BYTE PTR [rsi+0x616c0000],dh
   14000e2ea:	add    BYTE PTR [rax],al
   14000e2ec:	rex.RB (bad) 
   14000e2ee:	add    BYTE PTR [rax],al
   14000e2f0:	jo     0x14000e2ab
   14000e2f2:	add    BYTE PTR [rax],al
   14000e2f4:	rex.WR (bad) 
   14000e2f6:	add    BYTE PTR [rax],al
   14000e2f8:	(bad)  
   14000e2f9:	movsxd eax,DWORD PTR [rax]
   14000e2fb:	add    BYTE PTR [rax-0xfffff47],cl
   14000e301:	movsxd eax,DWORD PTR [rax]
   14000e303:	add    BYTE PTR [rbp+0x67],bl
   14000e306:	add    BYTE PTR [rax],al
   14000e308:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e309:	mov    ecx,0x67640000
   14000e30e:	add    BYTE PTR [rax],al
   14000e310:	retf   0x67
   14000e313:	add    ah,al
   14000e315:	mov    ecx,0x67d00000
   14000e31a:	add    BYTE PTR [rax],al
   14000e31c:	jle    0x14000e388
   14000e31e:	add    BYTE PTR [rax],al
   14000e320:	(bad)  
   14000e321:	mov    ecx,0x6a840000
   14000e326:	add    BYTE PTR [rax],al
   14000e328:	imul   rax,QWORD PTR [r8],0x0
   14000e32c:	hlt    
   14000e32d:	mov    ecx,0x6b600000
   14000e332:	add    BYTE PTR [rax],al
   14000e334:	out    0x6d,al
   14000e336:	add    BYTE PTR [rax],al
   14000e338:	add    al,0xba
   14000e33a:	add    BYTE PTR [rax],al
   14000e33c:	lock ins DWORD PTR es:[rdi],dx
   14000e33e:	add    BYTE PTR [rax],al
   14000e340:	adc    al,0x72
   14000e342:	add    BYTE PTR [rax],al
   14000e344:	and    BYTE PTR [rdx+0x721c0000],bh
   14000e34a:	add    BYTE PTR [rax],al
   14000e34c:	(bad)  
   14000e34d:	jb     0x14000e34f
   14000e34f:	add    BYTE PTR [rax-0x46],al
   14000e352:	add    BYTE PTR [rax],al
   14000e354:	shl    BYTE PTR [rdx+0x0],1
   14000e357:	add    BYTE PTR [rsi],bl
   14000e359:	jne    0x14000e35b
   14000e35b:	add    BYTE PTR [rdx+rdi*4+0x0],cl
   14000e35f:	add    BYTE PTR [rax+0x75],dl
   14000e362:	add    BYTE PTR [rax],al
   14000e364:	(bad)  
   14000e365:	jne    0x14000e367
   14000e367:	add    BYTE PTR [rcx+rdi*4],ch
   14000e36a:	add    BYTE PTR [rax],al
   14000e36c:	add    BYTE PTR [rsi+0x0],dh
   14000e36f:	add    BYTE PTR [rax],ah
   14000e371:	jbe    0x14000e373
   14000e373:	add    ah,dh
   14000e375:	mov    dh,0x0
   14000e377:	add    BYTE PTR [rax],ch
   14000e379:	jbe    0x14000e37b
   14000e37b:	add    BYTE PTR [rdx+0x76],dl
   14000e37e:	add    BYTE PTR [rax],al
   14000e380:	in     al,dx
   14000e381:	mov    dh,0x0
   14000e383:	add    BYTE PTR [rax+0x76],bl
   14000e386:	add    BYTE PTR [rax],al
   14000e388:	jp     0x14000e401
   14000e38a:	add    BYTE PTR [rax],al
   14000e38c:	fs mov edx,0x77800000
   14000e392:	add    BYTE PTR [rax],al
   14000e394:	mov    edi,DWORD PTR [rax+0x0]
   14000e397:	add    ah,bh
   14000e399:	mov    dh,0x0
   14000e39b:	add    BYTE PTR [rax+rdi*2+0x79a00000],dl
   14000e3a2:	add    BYTE PTR [rax],al
   14000e3a4:	jl     0x14000e360
   14000e3a6:	add    BYTE PTR [rax],al
   14000e3a8:	test   al,0x79
   14000e3aa:	add    BYTE PTR [rax],al
   14000e3ac:	add    bh,BYTE PTR [rbx+0x0]
   14000e3af:	add    BYTE PTR [rax+0x100000ba],bl
   14000e3b5:	jnp    0x14000e3b7
   14000e3b7:	add    BYTE PTR [rip+0xfffffffff400007b],bh        # 0x13400e438
   14000e3bd:	mov    dh,0x0
   14000e3bf:	add    BYTE PTR [rbx+rdi*2+0x0],al
   14000e3c3:	add    al,bh
   14000e3c5:	jnp    0x14000e3c7
   14000e3c7:	add    al,bh
   14000e3c9:	mov    bh,0x0
   14000e3cb:	add    BYTE PTR [rax],al
   14000e3cd:	jl     0x14000e3cf
   14000e3cf:	add    BYTE PTR [rsi],dh
   14000e3d1:	jl     0x14000e3d3
   14000e3d3:	add    BYTE PTR [rax+0x3c0000ba],dh
   14000e3d9:	jl     0x14000e3db
   14000e3db:	add    BYTE PTR [rsp+rdi*2+0x0],ah
   14000e3df:	add    BYTE PTR [rax],ch
   14000e3e1:	mov    bh,0x0
   14000e3e3:	add    BYTE PTR [rsp+rdi*2+0x0],ch
   14000e3e7:	add    BYTE PTR [rbx],dl
   14000e3e9:	jge    0x14000e3eb
   14000e3eb:	add    BYTE PTR [rdx+rdi*4+0x7d1c0000],bh
   14000e3f2:	add    BYTE PTR [rax],al
   14000e3f4:	(bad)  
   14000e3f5:	jge    0x14000e3f7
   14000e3f7:	add    BYTE PTR [rdx+rdi*4+0x7de00000],bh
   14000e3fe:	add    BYTE PTR [rax],al
   14000e400:	scas   al,BYTE PTR es:[rdi]
   14000e401:	jle    0x14000e403
   14000e403:	add    al,bh
   14000e405:	mov    bh,0x0
   14000e407:	add    al,al
   14000e409:	jle    0x14000e40b
   14000e40b:	add    cl,cl
   14000e40d:	jg     0x14000e40f
   14000e40f:	add    al,dl
   14000e411:	mov    edx,0x7fd00000
   14000e416:	add    BYTE PTR [rax],al
   14000e418:	sub    BYTE PTR [rax-0x48080000],al
   14000e41e:	add    BYTE PTR [rax],al
   14000e420:	xor    BYTE PTR [rax-0x7f3f0000],al
   14000e426:	add    BYTE PTR [rax],al
   14000e428:	clc    
   14000e429:	mov    bh,0x0
   14000e42b:	add    al,dl
   14000e42d:	add    BYTE PTR [rax],0x0
   14000e430:	or     al,BYTE PTR [rcx-0x48280000]
   14000e436:	add    BYTE PTR [rax],al
   14000e438:	adc    BYTE PTR [rcx-0x7e440000],al
   14000e43e:	add    BYTE PTR [rax],al
   14000e440:	in     al,dx
   14000e441:	mov    edx,0x81f00000
   14000e446:	add    BYTE PTR [rax],al
   14000e448:	sub    eax,0xd8000082
   14000e44d:	mov    bh,0x0
   14000e44f:	add    BYTE PTR [rdx+rax*4],dh
   14000e452:	add    BYTE PTR [rax],al
   14000e454:	sub    BYTE PTR [rbx-0x45000000],al
   14000e45a:	add    BYTE PTR [rax],al
   14000e45c:	add    BYTE PTR [rbx-0x7c170000],0x0
   14000e463:	add    al,bl
   14000e465:	mov    bh,0x0
   14000e467:	add    al,dh
   14000e469:	add    DWORD PTR [rax],0x0
   14000e46c:	rex.WRXB test BYTE PTR [r8],r8b
   14000e46f:	add    al,bh
   14000e471:	mov    bh,0x0
   14000e473:	add    BYTE PTR [rax-0x7c],bl
   14000e476:	add    BYTE PTR [rax],al
   14000e478:	(bad)  
   14000e479:	test   BYTE PTR [rax],al
   14000e47b:	add    ah,dh
   14000e47d:	mov    dh,0x0
   14000e47f:	add    al,ah
   14000e481:	test   BYTE PTR [rax],al
   14000e483:	add    BYTE PTR [rdi],cl
   14000e485:	test   DWORD PTR [rax],eax
   14000e487:	add    al,bl
   14000e489:	mov    bh,0x0
   14000e48b:	add    BYTE PTR [rbp+rax*4+0x0],ah
   14000e48f:	add    BYTE PTR [rbp-0x27ffff7b],bl
   14000e495:	mov    bh,0x0
   14000e497:	add    BYTE PTR [rax+0x7f000085],dh
   14000e49d:	xchg   BYTE PTR [rax],al
   14000e49f:	add    ah,ch
   14000e4a1:	mov    dh,0x0
   14000e4a3:	add    BYTE PTR [rax-0x26ffff7a],dl
   14000e4a9:	xchg   BYTE PTR [rax],al
   14000e4ab:	add    BYTE PTR [rax],ch
   14000e4ad:	mov    bh,0x0
   14000e4af:	add    al,ah
   14000e4b1:	xchg   BYTE PTR [rax],al
   14000e4b3:	add    BYTE PTR [rcx-0x77],dl
   14000e4b6:	add    BYTE PTR [rax],al
   14000e4b8:	adc    al,0xbb
   14000e4ba:	add    BYTE PTR [rax],al
   14000e4bc:	(bad)  
   14000e4bd:	mov    DWORD PTR [rax],eax
   14000e4bf:	add    BYTE PTR [rdx-0x77],dh
   14000e4c2:	add    BYTE PTR [rax],al
   14000e4c4:	in     al,dx
   14000e4c5:	mov    dh,0x0
   14000e4c7:	add    BYTE PTR [rax-0x51ffff77],dl
   14000e4cd:	mov    DWORD PTR [rax],eax
   14000e4cf:	add    BYTE PTR [rax-0x45],dl
   14000e4d2:	add    BYTE PTR [rax],al
   14000e4d4:	lock mov DWORD PTR [rax],eax
   14000e4d7:	add    BYTE PTR [rcx],ch
   14000e4d9:	mov    al,BYTE PTR [rax]
   14000e4db:	add    ah,ch
   14000e4dd:	mov    dh,0x0
   14000e4df:	add    BYTE PTR [rax],dh
   14000e4e1:	mov    al,BYTE PTR [rax]
   14000e4e3:	add    BYTE PTR [rax-0x76],cl
   14000e4e6:	add    BYTE PTR [rax],al
   14000e4e8:	in     al,dx
   14000e4e9:	mov    dh,0x0
   14000e4eb:	add    BYTE PTR [rdx+rcx*4+0x0],bl
   14000e4ef:	add    BYTE PTR [rax+0x5400008a],dh
   14000e4f5:	mov    ebx,0x8ab80000
   14000e4fa:	add    BYTE PTR [rax],al
   14000e4fc:	std    
   14000e4fd:	mov    al,BYTE PTR [rax]
   14000e4ff:	add    ah,dh
   14000e501:	mov    dh,0x0
   14000e503:	add    BYTE PTR [rax-0x75],ah
   14000e506:	add    BYTE PTR [rax],al
   14000e508:	lods   eax,DWORD PTR ds:[rsi]
   14000e509:	mov    eax,DWORD PTR [rax]
   14000e50b:	add    BYTE PTR [rbx+rdi*4+0x0],dh
   14000e50f:	add    ah,dh
   14000e511:	mov    eax,DWORD PTR [rax]
   14000e513:	add    ah,al
   14000e515:	mov    WORD PTR [rax],es
   14000e517:	add    BYTE PTR [rax-0x1bffff45],bl
   14000e51d:	mov    WORD PTR [rax],es
   14000e51f:	add    BYTE PTR [rdx-0x5bffff73],al
   14000e525:	mov    ebx,0x8d880000
   14000e52a:	add    BYTE PTR [rax],al
   14000e52c:	lahf   
   14000e52d:	lea    eax,[rax]
   14000e52f:	add    ah,ch
   14000e531:	mov    dh,0x0
   14000e533:	add    BYTE PTR [rbp+rcx*4-0x72100000],bh
   14000e53a:	add    BYTE PTR [rax],al
   14000e53c:	hlt    
   14000e53d:	mov    dh,0x0
   14000e53f:	add    BYTE PTR [rax],al
   14000e541:	mov    es,WORD PTR [rax]
   14000e543:	add    BYTE PTR [rcx-0x71],dh
   14000e546:	add    BYTE PTR [rax],al
   14000e548:	enter  0xbb,0x0
   14000e54c:	test   al,0x8f
   14000e54e:	add    BYTE PTR [rax],al
   14000e550:	(bad)  
   14000e551:	pop    QWORD PTR [rax]
   14000e553:	add    ah,dl
   14000e555:	mov    ebx,0x8fdc0000
   14000e55a:	add    BYTE PTR [rax],al
   14000e55c:	stc    
   14000e55d:	pop    QWORD PTR [rax]
   14000e55f:	add    ah,ch
   14000e561:	mov    dh,0x0
   14000e563:	add    BYTE PTR [rax],al
   14000e565:	nop
   14000e566:	add    BYTE PTR [rax],al
   14000e568:	movsxd edx,DWORD PTR [rax-0x490c0000]
   14000e56e:	add    BYTE PTR [rax],al
   14000e570:	nop
   14000e571:	nop
   14000e572:	add    BYTE PTR [rax],al
   14000e574:	xchg   edx,eax
   14000e575:	nop
   14000e576:	add    BYTE PTR [rax],al
   14000e578:	sar    BYTE PTR [rbx-0x6f5a0000],1
   14000e57e:	add    BYTE PTR [rax],al
   14000e580:	(bad)  
   14000e581:	nop
   14000e582:	add    BYTE PTR [rax],al
   14000e584:	movabs rbx,0x90f0000090d00000
   14000e58e:	add    BYTE PTR [rax],al
   14000e590:	movabs rbx,0x9111000090f60000
   14000e59a:	add    BYTE PTR [rax],al
   14000e59c:	movabs rbx,0x9137000091170000
   14000e5a6:	add    BYTE PTR [rax],al
   14000e5a8:	push   rax
   14000e5a9:	mov    esp,0x91400000
   14000e5ae:	add    BYTE PTR [rax],al
   14000e5b0:	jo     0x14000e543
   14000e5b2:	add    BYTE PTR [rax],al
   14000e5b4:	hlt    
   14000e5b5:	mov    dh,0x0
   14000e5b7:	add    BYTE PTR [rax-0x56ffff6f],al
   14000e5bd:	xchg   ecx,eax
   14000e5be:	add    BYTE PTR [rax],al
   14000e5c0:	in     al,dx
   14000e5c1:	mov    dh,0x0
   14000e5c3:	add    BYTE PTR [rax-0x27ffff6f],dh
   14000e5c9:	xchg   ecx,eax
   14000e5ca:	add    BYTE PTR [rax],al
   14000e5cc:	in     al,dx
   14000e5cd:	mov    dh,0x0
	...

Disassembly of section .rsrc:

000000014000f000 <.rsrc>:
	...
   14000f00c:	add    DWORD PTR [rax],eax
   14000f00e:	add    al,0x0
   14000f010:	rex.W add al,0x0
   14000f013:	cmp    BYTE PTR [rax],0x0
   14000f016:	add    BYTE PTR [rax+0x3],al
   14000f01c:	push   rax
   14000f01d:	add    BYTE PTR [rax],al
   14000f01f:	or     BYTE PTR [rsi],0x0
   14000f022:	add    BYTE PTR [rax],al
   14000f024:	rol    BYTE PTR [rax],1
   14000f026:	add    BYTE PTR [rax+0x10],al
   14000f02c:	clc    
   14000f02d:	add    BYTE PTR [rax],al
   14000f02f:	sbb    BYTE PTR [rax],0x0
   14000f032:	add    BYTE PTR [rax],al
   14000f034:	adc    BYTE PTR [rcx],al
   14000f036:	add    BYTE PTR [rax+0x0],al
	...
   14000f044:	add    BYTE PTR [rax],al
   14000f046:	add    DWORD PTR [rax],eax
   14000f048:	add    DWORD PTR [rax],eax
   14000f04a:	add    BYTE PTR [rax],al
   14000f04c:	sub    BYTE PTR [rcx],al
   14000f04e:	add    BYTE PTR [rax+0x0],al
	...
   14000f05c:	add    BYTE PTR [rax],al
   14000f05e:	(bad)  
   14000f05f:	add    BYTE PTR [rcx],al
   14000f061:	add    BYTE PTR [rax],al
   14000f063:	add    BYTE PTR [rax+0x1],al
   14000f066:	add    BYTE PTR [rax+0x2],al
   14000f06c:	pop    rax
   14000f06d:	add    DWORD PTR [rax],eax
   14000f06f:	add    BYTE PTR [rbx],0x0
   14000f072:	add    BYTE PTR [rax],al
   14000f074:	jo     0x14000f077
   14000f076:	add    BYTE PTR [rax+0x4],al
   14000f07c:	mov    BYTE PTR [rcx],al
   14000f07e:	add    BYTE PTR [rax+0x5],al
   14000f084:	movabs al,ds:0xb800000006800001
   14000f08d:	add    DWORD PTR [rax],eax
   14000f08f:	add    BYTE PTR [rdi],0x0
   14000f092:	add    BYTE PTR [rax],al
   14000f094:	rol    BYTE PTR [rcx],1
   14000f096:	add    BYTE PTR [rax+0x8],al
   14000f09c:	call   0x14980f0a2
   14000f0a1:	add    BYTE PTR [rax],al
   14000f0a3:	add    BYTE PTR [rax],al
   14000f0a5:	add    al,BYTE PTR [rax]
   14000f0a7:	or     BYTE PTR [rdx],0x0
   14000f0aa:	add    BYTE PTR [rax],al
   14000f0ac:	sbb    BYTE PTR [rdx],al
   14000f0ae:	add    BYTE PTR [rax+0xb],al
   14000f0b4:	xor    BYTE PTR [rdx],al
   14000f0b6:	add    BYTE PTR [rax+0xc],al
   14000f0bc:	rex.W add al,BYTE PTR [rax]
   14000f0bf:	or     BYTE PTR [rip+0x60000000],0x2        # 0x1a000f0c6
   14000f0c6:	add    BYTE PTR [rax+0xe],al
   14000f0cc:	js     0x14000f0d0
   14000f0ce:	add    BYTE PTR [rax+0x0],al
	...
   14000f0dc:	add    BYTE PTR [rax],al
   14000f0de:	add    eax,DWORD PTR [rax]
   14000f0e0:	data16 add BYTE PTR [rax],al
   14000f0e3:	add    BYTE PTR [rax+0x67800002],dl
   14000f0e9:	add    BYTE PTR [rax],al
   14000f0eb:	add    BYTE PTR [rax+0x68800002],ch
   14000f0f1:	add    BYTE PTR [rax],al
   14000f0f3:	add    al,al
   14000f0f5:	add    al,BYTE PTR [rax]
   14000f0f7:	add    BYTE PTR [rax],0x0
	...
   14000f106:	add    DWORD PTR [rax],eax
   14000f108:	add    DWORD PTR [rax],eax
   14000f10a:	add    BYTE PTR [rax],al
   14000f10c:	fadd   DWORD PTR [rdx]
   14000f10e:	add    BYTE PTR [rax+0x0],al
	...
   14000f11c:	add    BYTE PTR [rax],al
   14000f11e:	add    DWORD PTR [rax],eax
   14000f120:	add    DWORD PTR [rax],eax
   14000f122:	add    BYTE PTR [rax],al
   14000f124:	lock add al,BYTE PTR [rax]
   14000f127:	add    BYTE PTR [rax],0x0
	...
   14000f136:	add    DWORD PTR [rax],eax
   14000f138:	or     DWORD PTR [rax+rax*1],eax
   14000f13b:	add    BYTE PTR [rax],cl
   14000f13d:	add    eax,DWORD PTR [rax]
	...
   14000f14b:	add    BYTE PTR [rax],al
   14000f14d:	add    BYTE PTR [rcx],al
   14000f14f:	add    BYTE PTR [rcx],cl
   14000f151:	add    al,0x0
   14000f153:	add    BYTE PTR [rax],bl
   14000f155:	add    eax,DWORD PTR [rax]
	...
   14000f163:	add    BYTE PTR [rax],al
   14000f165:	add    BYTE PTR [rcx],al
   14000f167:	add    BYTE PTR [rcx],cl
   14000f169:	add    al,0x0
   14000f16b:	add    BYTE PTR [rax],ch
   14000f16d:	add    eax,DWORD PTR [rax]
	...
   14000f17b:	add    BYTE PTR [rax],al
   14000f17d:	add    BYTE PTR [rcx],al
   14000f17f:	add    BYTE PTR [rcx],cl
   14000f181:	add    al,0x0
   14000f183:	add    BYTE PTR [rax],bh
   14000f185:	add    eax,DWORD PTR [rax]
	...
   14000f193:	add    BYTE PTR [rax],al
   14000f195:	add    BYTE PTR [rcx],al
   14000f197:	add    BYTE PTR [rcx],cl
   14000f199:	add    al,0x0
   14000f19b:	add    BYTE PTR [rax+0x3],cl
	...
   14000f1ae:	add    DWORD PTR [rax],eax
   14000f1b0:	or     DWORD PTR [rax+rax*1],eax
   14000f1b3:	add    BYTE PTR [rax+0x3],bl
	...
   14000f1c6:	add    DWORD PTR [rax],eax
   14000f1c8:	or     DWORD PTR [rax+rax*1],eax
   14000f1cb:	add    BYTE PTR [rax+0x3],ch
	...
   14000f1de:	add    DWORD PTR [rax],eax
   14000f1e0:	or     DWORD PTR [rax+rax*1],eax
   14000f1e3:	add    BYTE PTR [rax+0x3],bh
	...
   14000f1f6:	add    DWORD PTR [rax],eax
   14000f1f8:	or     DWORD PTR [rax+rax*1],eax
   14000f1fb:	add    BYTE PTR [rax+0x3],cl
	...
   14000f20d:	add    BYTE PTR [rcx],al
   14000f20f:	add    BYTE PTR [rcx],cl
   14000f211:	add    al,0x0
   14000f213:	add    BYTE PTR [rax+0x3],bl
	...
   14000f225:	add    BYTE PTR [rcx],al
   14000f227:	add    BYTE PTR [rcx],cl
   14000f229:	add    al,0x0
   14000f22b:	add    BYTE PTR [rax+0x3],ch
	...
   14000f23d:	add    BYTE PTR [rcx],al
   14000f23f:	add    BYTE PTR [rcx],cl
   14000f241:	add    al,0x0
   14000f243:	add    BYTE PTR [rax+0x3],bh
	...
   14000f255:	add    BYTE PTR [rcx],al
   14000f257:	add    BYTE PTR [rcx],cl
   14000f259:	add    al,0x0
   14000f25b:	add    al,cl
   14000f25d:	add    eax,DWORD PTR [rax]
	...
   14000f26b:	add    BYTE PTR [rax],al
   14000f26d:	add    BYTE PTR [rcx],al
   14000f26f:	add    BYTE PTR [rcx],cl
   14000f271:	add    al,0x0
   14000f273:	add    al,bl
   14000f275:	add    eax,DWORD PTR [rax]
	...
   14000f283:	add    BYTE PTR [rax],al
   14000f285:	add    BYTE PTR [rcx],al
   14000f287:	add    BYTE PTR [rcx],cl
   14000f289:	add    al,0x0
   14000f28b:	add    al,ch
   14000f28d:	add    eax,DWORD PTR [rax]
	...
   14000f29b:	add    BYTE PTR [rax],al
   14000f29d:	add    BYTE PTR [rcx],al
   14000f29f:	add    BYTE PTR [rcx],cl
   14000f2a1:	add    al,0x0
   14000f2a3:	add    al,bh
   14000f2a5:	add    eax,DWORD PTR [rax]
	...
   14000f2b3:	add    BYTE PTR [rax],al
   14000f2b5:	add    BYTE PTR [rcx],al
   14000f2b7:	add    BYTE PTR [rcx],cl
   14000f2b9:	add    al,0x0
   14000f2bb:	add    BYTE PTR [rax],cl
   14000f2bd:	add    al,0x0
	...
   14000f2cb:	add    BYTE PTR [rax],al
   14000f2cd:	add    BYTE PTR [rcx],al
   14000f2cf:	add    BYTE PTR [rcx],cl
   14000f2d1:	add    al,0x0
   14000f2d3:	add    BYTE PTR [rax],bl
   14000f2d5:	add    al,0x0
	...
   14000f2e3:	add    BYTE PTR [rax],al
   14000f2e5:	add    BYTE PTR [rcx],al
   14000f2e7:	add    BYTE PTR [rcx],cl
   14000f2e9:	add    al,0x0
   14000f2eb:	add    BYTE PTR [rax],ch
   14000f2ed:	add    al,0x0
	...
   14000f2fb:	add    BYTE PTR [rax],al
   14000f2fd:	add    BYTE PTR [rcx],al
   14000f2ff:	add    BYTE PTR [rcx],cl
   14000f301:	add    al,0x0
   14000f303:	add    BYTE PTR [rax],bh
   14000f305:	add    al,0x0
   14000f307:	add    BYTE PTR [rax+0x50],al
   14000f30a:	add    DWORD PTR [rax],eax
   14000f30c:	loopne 0x14000f30e
	...
   14000f316:	add    BYTE PTR [rax],al
   14000f318:	rex.W stc 
   14000f31a:	add    BYTE PTR [rax],al
   14000f31c:	call   0x14000f323
   14000f321:	add    BYTE PTR [rax],al
   14000f323:	add    BYTE PTR [rax],al
   14000f325:	add    BYTE PTR [rax],al
   14000f327:	add    BYTE PTR [rax],dh
   14000f329:	cld    
   14000f32a:	add    BYTE PTR [rax],al
   14000f32c:	sub    BYTE PTR [rcx],al
	...
   14000f336:	add    BYTE PTR [rax],al
   14000f338:	pop    rax
   14000f339:	std    
   14000f33a:	add    BYTE PTR [rax],al
   14000f33c:	test   al,0x8
	...
   14000f346:	add    BYTE PTR [rax],al
   14000f348:	add    BYTE PTR [rsi],al
   14000f34a:	add    DWORD PTR [rax],eax
   14000f34c:	push   0x5
   14000f351:	add    BYTE PTR [rax],al
   14000f353:	add    BYTE PTR [rax],al
   14000f355:	add    BYTE PTR [rax],al
   14000f357:	add    BYTE PTR [rax+0xb],ch
   14000f35a:	add    DWORD PTR [rax],eax
   14000f35c:	test   al,0x10
	...
   14000f366:	add    BYTE PTR [rax],al
   14000f368:	adc    BYTE PTR [rcx+rax*1],bl
   14000f36b:	add    BYTE PTR [rax+0x4],ch
	...
   14000f376:	add    BYTE PTR [rax],al
   14000f378:	fsub   DWORD PTR [rax]
   14000f37a:	add    DWORD PTR [rax],eax
   14000f37c:	call   0x14000f383
   14000f381:	add    BYTE PTR [rax],al
   14000f383:	add    BYTE PTR [rax],al
   14000f385:	add    BYTE PTR [rax],al
   14000f387:	add    al,al
   14000f389:	and    eax,DWORD PTR [rcx]
   14000f38b:	add    BYTE PTR [rax],dh
   14000f38d:	add    DWORD PTR [rax],eax
	...
   14000f397:	add    BYTE PTR [rax],bl
   14000f399:	and    eax,0x2e80001
	...
   14000f3a6:	add    BYTE PTR [rax],al
   14000f3a8:	add    BYTE PTR [rax],ch
   14000f3aa:	add    DWORD PTR [rax],eax
   14000f3ac:	sub    BYTE PTR [rcx],al
	...
   14000f3b6:	add    BYTE PTR [rax],al
   14000f3b8:	sub    BYTE PTR [rcx],ch
   14000f3ba:	add    DWORD PTR [rax],eax
   14000f3bc:	test   al,0x8
	...
   14000f3c6:	add    BYTE PTR [rax],al
   14000f3c8:	shl    BYTE PTR [rcx],1
   14000f3ca:	add    DWORD PTR [rax],eax
   14000f3cc:	push   0x5
   14000f3d1:	add    BYTE PTR [rax],al
   14000f3d3:	add    BYTE PTR [rax],al
   14000f3d5:	add    BYTE PTR [rax],al
   14000f3d7:	add    BYTE PTR [rax],bh
   14000f3d9:	(bad)  
   14000f3da:	add    DWORD PTR [rax],eax
   14000f3dc:	test   al,0x10
	...
   14000f3e6:	add    BYTE PTR [rax],al
   14000f3e8:	loopne 0x14000f431
   14000f3ea:	add    DWORD PTR [rax],eax
   14000f3ec:	push   0x4
   14000f3f1:	add    BYTE PTR [rax],al
   14000f3f3:	add    BYTE PTR [rax],al
   14000f3f5:	add    BYTE PTR [rax],al
   14000f3f7:	add    BYTE PTR [rax+0x20],bh
   14000f3fa:	add    DWORD PTR [rax],eax
   14000f3fc:	pop    rdx
	...
   14000f405:	add    BYTE PTR [rax],al
   14000f407:	add    al,dh
   14000f409:	and    al,0x1
   14000f40b:	add    BYTE PTR [rdx],ah
	...
   14000f415:	add    BYTE PTR [rax],al
   14000f417:	add    BYTE PTR [rax+0x4c],cl
   14000f41a:	add    DWORD PTR [rax],eax
   14000f41c:	pop    rdx
	...
   14000f425:	add    BYTE PTR [rax],al
   14000f427:	add    BYTE PTR [rax-0x67fffeb4],ch
   14000f42d:	add    eax,DWORD PTR [rax]
	...
   14000f437:	add    BYTE PTR [rax-0xc],dl
   14000f43a:	add    BYTE PTR [rax],al
   14000f43c:	repnz add al,0x0
	...
   14000f447:	add    BYTE PTR [rbx],al
   14000f449:	add    BYTE PTR [rbp+0x0],cl
   14000f44c:	push   rbp
   14000f44d:	add    BYTE PTR [rcx+0x0],cl
   14000f450:	cmp    al,0x3f
   14000f452:	js     0x14000f4c1
   14000f454:	ins    BYTE PTR es:[rdi],dx
   14000f455:	and    BYTE PTR [rsi+0x65],dh
   14000f458:	jb     0x14000f4cd
   14000f45a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000f461:	xor    BYTE PTR [rdx],ah
   14000f463:	and    BYTE PTR [rbp+0x6e],ah
   14000f466:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000f469:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000f470:	rex.RX sub eax,0x73202238
   14000f476:	je     0x14000f4d9
   14000f478:	outs   dx,BYTE PTR ds:[rsi]
   14000f479:	fs (bad) 
   14000f47b:	ins    BYTE PTR es:[rdi],dx
   14000f47c:	outs   dx,DWORD PTR ds:[rsi]
   14000f47d:	outs   dx,BYTE PTR ds:[rsi]
   14000f47e:	gs cmp eax,0x73657922
   14000f484:	and    bh,BYTE PTR [rdi]
   14000f486:	ds or  eax,0x2d213c0a
   14000f48c:	sub    eax,0x706f4320
   14000f491:	jns    0x14000f505
   14000f493:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000f49a:	sub    DWORD PTR [rax],esp
   14000f49c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000f4a4:	je     0x14000f4c6
   14000f4a6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000f4a8:	jb     0x14000f51a
   14000f4aa:	outs   dx,DWORD PTR ds:[rsi]
   14000f4ab:	jb     0x14000f50e
   14000f4ad:	je     0x14000f518
   14000f4af:	outs   dx,DWORD PTR ds:[rsi]
   14000f4b0:	outs   dx,BYTE PTR ds:[rsi]
   14000f4b1:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e32e4
   14000f4b7:	cmp    al,0x61
   14000f4b9:	jae    0x14000f52e
   14000f4bb:	gs ins DWORD PTR es:[rdi],dx
   14000f4bd:	(bad)  
   14000f4be:	ins    BYTE PTR es:[rdi],dx
   14000f4bf:	jns    0x14000f4e1
   14000f4c1:	js     0x14000f530
   14000f4c3:	ins    BYTE PTR es:[rdi],dx
   14000f4c4:	outs   dx,BYTE PTR ds:[rsi]
   14000f4c5:	jae    0x14000f504
   14000f4c7:	and    dh,BYTE PTR [rbp+0x72]
   14000f4ca:	outs   dx,BYTE PTR ds:[rsi]
   14000f4cb:	cmp    dh,BYTE PTR [rbx+0x63]
   14000f4ce:	push   0x73616d65
   14000f4d3:	sub    eax,0x7263696d
   14000f4d8:	outs   dx,DWORD PTR ds:[rsi]
   14000f4d9:	jae    0x14000f54a
   14000f4db:	data16 je 0x14000f50b
   14000f4de:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f4e1:	cmp    ah,BYTE PTR [rcx+0x73]
   14000f4e4:	ins    DWORD PTR es:[rdi],dx
   14000f4e5:	cs jbe 0x14000f519
   14000f4e8:	and    ah,BYTE PTR [rax]
   14000f4ea:	ins    DWORD PTR es:[rdi],dx
   14000f4eb:	(bad)  
   14000f4ec:	outs   dx,BYTE PTR ds:[rsi]
   14000f4ed:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000f4f4:	jb     0x14000f569
   14000f4f6:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000f4fd:	xor    BYTE PTR [rdx],ah
   14000f4ff:	ds or  eax,0x3c20200a
   14000f505:	(bad)  
   14000f506:	jae    0x14000f57b
   14000f508:	gs ins DWORD PTR es:[rdi],dx
   14000f50a:	(bad)  
   14000f50b:	ins    BYTE PTR es:[rdi],dx
   14000f50c:	jns    0x14000f557
   14000f50e:	fs outs dx,BYTE PTR gs:[rsi]
   14000f511:	je     0x14000f57c
   14000f513:	je     0x14000f58e
   14000f515:	or     eax,0x2020200a
   14000f51a:	and    BYTE PTR [rax],ah
   14000f51c:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14000f520:	addr32 jne 0x14000f584
   14000f523:	addr32 gs cmp eax,0x772d7822
   14000f52a:	ja     0x14000f54e
   14000f52c:	or     eax,0x2020200a
   14000f531:	and    BYTE PTR [rax],ah
   14000f533:	and    BYTE PTR [rsi+0x65],dh
   14000f536:	jb     0x14000f5ab
   14000f538:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000f53f:	xor    DWORD PTR [rsi],ebp
   14000f541:	xor    BYTE PTR [rsi],ch
   14000f543:	xor    BYTE PTR [rdx],ah
   14000f545:	or     eax,0x2020200a
   14000f54a:	and    BYTE PTR [rax],ah
   14000f54c:	and    BYTE PTR [rax+0x72],dh
   14000f54f:	outs   dx,DWORD PTR ds:[rsi]
   14000f550:	movsxd esp,DWORD PTR [rbp+0x73]
   14000f553:	jae    0x14000f5c4
   14000f555:	jb     0x14000f598
   14000f557:	jb     0x14000f5bc
   14000f559:	push   0x63657469
   14000f55e:	je     0x14000f5d5
   14000f560:	jb     0x14000f5c7
   14000f562:	cmp    eax,0x646d6122
   14000f567:	ss xor al,0x22
   14000f56a:	or     eax,0x2020200a
   14000f56f:	and    BYTE PTR [rax],ah
   14000f571:	and    BYTE PTR [rsi+0x61],ch
   14000f574:	ins    DWORD PTR es:[rdi],dx
   14000f575:	gs cmp eax,0x63694d22
   14000f57b:	jb     0x14000f5ec
   14000f57d:	jae    0x14000f5ee
   14000f57f:	data16 je 0x14000f5b0
   14000f582:	push   rdi
   14000f583:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000f58a:	push   rax
   14000f58b:	jb     0x14000f5f6
   14000f58d:	outs   dx,BYTE PTR ds:[rsi]
   14000f58e:	je     0x14000f5e3
   14000f590:	movsxd esp,DWORD PTR [rcx+0x6e]
   14000f593:	cs rex.X jb 0x14000f604
   14000f597:	push   rbp
   14000f598:	imul   esp,DWORD PTR [rdx],0x20200a0d
   14000f59e:	and    BYTE PTR [rax],ah
   14000f5a0:	and    BYTE PTR [rax],ah
   14000f5a2:	je     0x14000f61d
   14000f5a4:	jo     0x14000f60b
   14000f5a6:	cmp    eax,0x6e697722
   14000f5ab:	xor    esi,DWORD PTR [rdx]
   14000f5ad:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3f24bd
   14000f5b3:	or     ah,BYTE PTR [rax]
   14000f5b5:	and    BYTE PTR [rsp+riz*2],bh
   14000f5b8:	gs jae 0x14000f61e
   14000f5bb:	jb     0x14000f626
   14000f5bd:	jo     0x14000f633
   14000f5bf:	imul   ebp,DWORD PTR [rdi+0x6e],0x6972503e
   14000f5c6:	outs   dx,BYTE PTR ds:[rsi]
   14000f5c7:	je     0x14000f62e
   14000f5c9:	jb     0x14000f5eb
   14000f5cb:	imul   r12,QWORD PTR [r15+0x72],0x6f697461
   14000f5d3:	outs   dx,BYTE PTR ds:[rsi]
   14000f5d4:	cmp    al,0x2f
   14000f5d6:	fs gs jae 0x14000f63d
   14000f5da:	jb     0x14000f645
   14000f5dc:	jo     0x14000f652
   14000f5de:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a0d3e
   14000f5e5:	and    BYTE PTR [rsp+riz*2],bh
   14000f5e8:	gs jo  0x14000f650
   14000f5eb:	outs   dx,BYTE PTR ds:[rsi]
   14000f5ec:	fs outs dx,BYTE PTR gs:[rsi]
   14000f5ef:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000f5f2:	or     eax,0x2020200a
   14000f5f7:	and    BYTE PTR [rsp+riz*2],bh
   14000f5fa:	gs jo  0x14000f662
   14000f5fd:	outs   dx,BYTE PTR ds:[rsi]
   14000f5fe:	fs outs dx,BYTE PTR gs:[rsi]
   14000f601:	je     0x14000f644
   14000f603:	jae    0x14000f678
   14000f605:	gs ins DWORD PTR es:[rdi],dx
   14000f607:	(bad)  
   14000f608:	ins    BYTE PTR es:[rdi],dx
   14000f609:	jns    0x14000f649
   14000f60b:	or     eax,0x2020200a
   14000f610:	and    BYTE PTR [rax],ah
   14000f612:	and    BYTE PTR [rcx+riz*2],bh
   14000f615:	jae    0x14000f68a
   14000f617:	gs ins DWORD PTR es:[rdi],dx
   14000f619:	(bad)  
   14000f61a:	ins    BYTE PTR es:[rdi],dx
   14000f61b:	jns    0x14000f666
   14000f61d:	fs outs dx,BYTE PTR gs:[rsi]
   14000f620:	je     0x14000f68b
   14000f622:	je     0x14000f69d
   14000f624:	or     eax,0x2020200a
   14000f629:	and    BYTE PTR [rax],ah
   14000f62b:	and    BYTE PTR [rax],ah
   14000f62d:	and    BYTE PTR [rax],ah
   14000f62f:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000f633:	gs cmp eax,0x6e697722
   14000f639:	xor    esi,DWORD PTR [rdx]
   14000f63b:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021164b
   14000f641:	and    BYTE PTR [rax],ah
   14000f643:	and    BYTE PTR [rax],ah
   14000f645:	and    BYTE PTR [rax],ah
   14000f647:	and    BYTE PTR [rsi+0x61],ch
   14000f64a:	ins    DWORD PTR es:[rdi],dx
   14000f64b:	gs cmp eax,0x63694d22
   14000f651:	jb     0x14000f6c2
   14000f653:	jae    0x14000f6c4
   14000f655:	data16 je 0x14000f686
   14000f658:	push   rdi
   14000f659:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000f660:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000f662:	ins    DWORD PTR es:[rdi],dx
   14000f663:	ins    DWORD PTR es:[rdi],dx
   14000f664:	outs   dx,DWORD PTR ds:[rsi]
   14000f665:	outs   dx,BYTE PTR ds:[rsi]
   14000f666:	sub    eax,0x746e6f43
   14000f66b:	jb     0x14000f6dc
   14000f66d:	ins    BYTE PTR es:[rdi],dx
   14000f66e:	jae    0x14000f692
   14000f670:	or     eax,0x2020200a
   14000f675:	and    BYTE PTR [rax],ah
   14000f677:	and    BYTE PTR [rax],ah
   14000f679:	and    BYTE PTR [rax],ah
   14000f67b:	and    BYTE PTR [rsi+0x65],dh
   14000f67e:	jb     0x14000f6f3
   14000f680:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   14000f687:	xor    BYTE PTR [rsi],ch
   14000f689:	xor    BYTE PTR [rsi],ch
   14000f68b:	xor    BYTE PTR [rdx],ah
   14000f68d:	or     eax,0x2020200a
   14000f692:	and    BYTE PTR [rax],ah
   14000f694:	and    BYTE PTR [rax],ah
   14000f696:	and    BYTE PTR [rax],ah
   14000f698:	and    BYTE PTR [rax+0x72],dh
   14000f69b:	outs   dx,DWORD PTR ds:[rsi]
   14000f69c:	movsxd esp,DWORD PTR [rbp+0x73]
   14000f69f:	jae    0x14000f710
   14000f6a1:	jb     0x14000f6e4
   14000f6a3:	jb     0x14000f708
   14000f6a5:	push   0x63657469
   14000f6aa:	je     0x14000f721
   14000f6ac:	jb     0x14000f713
   14000f6ae:	cmp    eax,0x646d6122
   14000f6b3:	ss xor al,0x22
   14000f6b6:	or     eax,0x2020200a
   14000f6bb:	and    BYTE PTR [rax],ah
   14000f6bd:	and    BYTE PTR [rax],ah
   14000f6bf:	and    BYTE PTR [rax],ah
   14000f6c1:	and    BYTE PTR [rax+0x75],dh
   14000f6c4:	(bad)  
   14000f6c5:	ins    BYTE PTR es:[rdi],dx
   14000f6c6:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14000f6cd:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14000f6d1:	and    dh,BYTE PTR [rsi]
   14000f6d3:	xor    eax,0x36623539
   14000f6d8:	xor    al,0x31
   14000f6da:	xor    al,0x34
   14000f6dc:	movsxd esp,DWORD PTR [rbx+0x66]
   14000f6df:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14000f6e3:	or     eax,0x2020200a
   14000f6e8:	and    BYTE PTR [rax],ah
   14000f6ea:	and    BYTE PTR [rax],ah
   14000f6ec:	and    BYTE PTR [rax],ah
   14000f6ee:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14000f6f2:	addr32 jne 0x14000f756
   14000f6f5:	addr32 gs cmp eax,0xd222a22
   14000f6fc:	or     ah,BYTE PTR [rax]
   14000f6fe:	and    BYTE PTR [rax],ah
   14000f700:	and    BYTE PTR [rax],ah
   14000f702:	and    BYTE PTR [rax],ah
   14000f704:	and    BYTE PTR [rdi],ch
   14000f706:	ds or  eax,0x2020200a
   14000f70c:	and    BYTE PTR [rdi+rbp*1],bh
   14000f70f:	fs gs jo 0x14000f778
   14000f713:	outs   dx,BYTE PTR ds:[rsi]
   14000f714:	fs outs dx,BYTE PTR gs:[rsi]
   14000f717:	je     0x14000f75a
   14000f719:	jae    0x14000f78e
   14000f71b:	gs ins DWORD PTR es:[rdi],dx
   14000f71d:	(bad)  
   14000f71e:	ins    BYTE PTR es:[rdi],dx
   14000f71f:	jns    0x14000f75f
   14000f721:	or     eax,0x3c20200a
   14000f726:	(bad)  
   14000f727:	fs gs jo 0x14000f790
   14000f72b:	outs   dx,BYTE PTR ds:[rsi]
   14000f72c:	fs outs dx,BYTE PTR gs:[rsi]
   14000f72f:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000f732:	or     eax,0x3c20200a
   14000f737:	je     0x14000f7ab
   14000f739:	jne    0x14000f7ae
   14000f73b:	je     0x14000f786
   14000f73d:	outs   dx,BYTE PTR ds:[rsi]
   14000f73e:	outs   dx,WORD PTR ds:[rsi]
   14000f740:	and    BYTE PTR [rax+0x6d],bh
   14000f743:	ins    BYTE PTR es:[rdi],dx
   14000f744:	outs   dx,BYTE PTR ds:[rsi]
   14000f745:	jae    0x14000f784
   14000f747:	and    dh,BYTE PTR [rbp+0x72]
   14000f74a:	outs   dx,BYTE PTR ds:[rsi]
   14000f74b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000f74e:	push   0x73616d65
   14000f753:	sub    eax,0x7263696d
   14000f758:	outs   dx,DWORD PTR ds:[rsi]
   14000f759:	jae    0x14000f7ca
   14000f75b:	data16 je 0x14000f78b
   14000f75e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f761:	cmp    ah,BYTE PTR [rcx+0x73]
   14000f764:	ins    DWORD PTR es:[rdi],dx
   14000f765:	cs jbe 0x14000f79b
   14000f768:	and    bh,BYTE PTR [rsi]
   14000f76a:	or     eax,0x2020200a
   14000f76f:	and    BYTE PTR [rbx+rsi*2],bh
   14000f772:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000f776:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000f77e:	and    BYTE PTR [rax],ah
   14000f780:	and    BYTE PTR [rax],ah
   14000f782:	cmp    al,0x72
   14000f784:	gs jno 0x14000f7fc
   14000f787:	gs jae 0x14000f7fe
   14000f78a:	gs fs push rax
   14000f78d:	jb     0x14000f7f8
   14000f78f:	jbe    0x14000f7fa
   14000f791:	ins    BYTE PTR es:[rdi],dx
   14000f792:	gs addr32 gs jae 0x14000f7d5
   14000f797:	or     eax,0x2020200a
   14000f79c:	and    BYTE PTR [rax],ah
   14000f79e:	and    BYTE PTR [rax],ah
   14000f7a0:	and    BYTE PTR [rdx+rsi*2],bh
   14000f7a3:	gs jno 0x14000f81b
   14000f7a6:	gs jae 0x14000f81d
   14000f7a9:	gs fs rex.RB js 0x14000f813
   14000f7ae:	movsxd esi,DWORD PTR [rbp+0x74]
   14000f7b1:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000f7b8:	ins    BYTE PTR es:[rdi],dx
   14000f7b9:	or     eax,0x2020200a
   14000f7be:	and    BYTE PTR [rax],ah
   14000f7c0:	and    BYTE PTR [rax],ah
   14000f7c2:	and    BYTE PTR [rax],ah
   14000f7c4:	and    BYTE PTR [rax],ah
   14000f7c6:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000f7ca:	gs ins BYTE PTR es:[rdi],dx
   14000f7cc:	cmp    eax,0x49736122
   14000f7d1:	outs   dx,BYTE PTR ds:[rsi]
   14000f7d2:	jbe    0x14000f843
   14000f7d4:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000f7d8:	or     eax,0x2020200a
   14000f7dd:	and    BYTE PTR [rax],ah
   14000f7df:	and    BYTE PTR [rax],ah
   14000f7e1:	and    BYTE PTR [rax],ah
   14000f7e3:	and    BYTE PTR [rax],ah
   14000f7e5:	and    BYTE PTR [rbp+0x69],dh
   14000f7e8:	movsxd esp,DWORD PTR [r11+0x65]
   14000f7ec:	jae    0x14000f861
   14000f7ee:	cmp    eax,0x6c616622
   14000f7f3:	jae    0x14000f85a
   14000f7f5:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160211805
   14000f7fb:	and    BYTE PTR [rax],ah
   14000f7fd:	and    BYTE PTR [rax],ah
   14000f7ff:	and    BYTE PTR [rax],ah
   14000f801:	and    BYTE PTR [rdi],ch
   14000f803:	ds or  eax,0x2020200a
   14000f809:	and    BYTE PTR [rax],ah
   14000f80b:	and    BYTE PTR [rax],ah
   14000f80d:	and    BYTE PTR [rdi+rbp*1],bh
   14000f810:	jb     0x14000f877
   14000f812:	jno    0x14000f889
   14000f814:	gs jae 0x14000f88b
   14000f817:	gs fs push rax
   14000f81a:	jb     0x14000f885
   14000f81c:	jbe    0x14000f887
   14000f81e:	ins    BYTE PTR es:[rdi],dx
   14000f81f:	gs addr32 gs jae 0x14000f862
   14000f824:	or     eax,0x2020200a
   14000f829:	and    BYTE PTR [rdi+rbp*1],bh
   14000f82c:	jae    0x14000f893
   14000f82e:	movsxd esi,DWORD PTR [rbp+0x72]
   14000f831:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000f839:	cmp    al,0x2f
   14000f83b:	je     0x14000f8af
   14000f83d:	jne    0x14000f8b2
   14000f83f:	je     0x14000f88a
   14000f841:	outs   dx,BYTE PTR ds:[rsi]
   14000f842:	outs   dx,WORD PTR ds:[rsi]
   14000f844:	ds or  eax,0x2020200a
   14000f84a:	and    BYTE PTR [rcx+riz*2],bh
   14000f84d:	jo     0x14000f8bf
   14000f84f:	ins    BYTE PTR es:[rdi],dx
   14000f850:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000f857:	and    BYTE PTR [rax],ah
   14000f859:	js     0x14000f8c8
   14000f85b:	ins    BYTE PTR es:[rdi],dx
   14000f85c:	outs   dx,BYTE PTR ds:[rsi]
   14000f85d:	jae    0x14000f89c
   14000f85f:	and    dh,BYTE PTR [rbp+0x72]
   14000f862:	outs   dx,BYTE PTR ds:[rsi]
   14000f863:	cmp    dh,BYTE PTR [rbx+0x63]
   14000f866:	push   0x73616d65
   14000f86b:	sub    eax,0x7263696d
   14000f870:	outs   dx,DWORD PTR ds:[rsi]
   14000f871:	jae    0x14000f8e2
   14000f873:	data16 je 0x14000f8a3
   14000f876:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f879:	cmp    ah,BYTE PTR [rcx+0x73]
   14000f87c:	ins    DWORD PTR es:[rdi],dx
   14000f87d:	cs jbe 0x14000f8b3
   14000f880:	and    bh,BYTE PTR [rsi]
   14000f882:	or     eax,0x2020200a
   14000f887:	and    BYTE PTR [rax],ah
   14000f889:	and    BYTE PTR [rax],ah
   14000f88b:	and    BYTE PTR [rdi+rsi*2],bh
   14000f88e:	imul   ebp,DWORD PTR [rsi+0x64],0x5373776f
   14000f895:	gs je  0x14000f90c
   14000f898:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14000f89f:	and    BYTE PTR [rax],ah
   14000f8a1:	and    BYTE PTR [rax],ah
   14000f8a3:	and    BYTE PTR [rax],ah
   14000f8a5:	and    BYTE PTR [rax],ah
   14000f8a7:	and    BYTE PTR [rax],ah
   14000f8a9:	and    BYTE PTR [rax],ah
   14000f8ab:	cmp    al,0x64
   14000f8ad:	jo     0x14000f918
   14000f8af:	rex.B ja 0x14000f913
   14000f8b2:	jb     0x14000f919
   14000f8b4:	and    BYTE PTR [rax],ah
   14000f8b6:	js     0x14000f925
   14000f8b8:	ins    BYTE PTR es:[rdi],dx
   14000f8b9:	outs   dx,BYTE PTR ds:[rsi]
   14000f8ba:	jae    0x14000f8f9
   14000f8bc:	and    ch,BYTE PTR [rax+0x74]
   14000f8bf:	je     0x14000f931
   14000f8c1:	cmp    ch,BYTE PTR [rdi]
   14000f8c3:	(bad)  
   14000f8c4:	jae    0x14000f929
   14000f8c6:	push   0x73616d65
   14000f8cb:	cs ins DWORD PTR es:[rdi],dx
   14000f8cd:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14000f8d4:	je     0x14000f904
   14000f8d6:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f8d9:	(bad)  
   14000f8da:	push   rbx
   14000f8db:	rex.WRB
   14000f8dc:	rex.WB (bad) 
   14000f8de:	xor    dh,BYTE PTR [rax]
   14000f8e0:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6a5015
   14000f8e6:	outs   dx,DWORD PTR fs:[rsi]
   14000f8e8:	ja     0x14000f95d
   14000f8ea:	push   rbx
   14000f8eb:	gs je  0x14000f962
   14000f8ee:	imul   ebp,DWORD PTR [rsi+0x67],0x743e2273
   14000f8f5:	jb     0x14000f96c
   14000f8f7:	gs cmp al,0x2f
   14000f8fa:	fs jo  0x14000f966
   14000f8fd:	rex.B ja 0x14000f961
   14000f900:	jb     0x14000f967
   14000f902:	ds or  eax,0x2020200a
   14000f908:	and    BYTE PTR [rax],ah
   14000f90a:	and    BYTE PTR [rax],ah
   14000f90c:	and    BYTE PTR [rdi+rbp*1],bh
   14000f90f:	ja     0x14000f97a
   14000f911:	outs   dx,BYTE PTR ds:[rsi]
   14000f912:	outs   dx,DWORD PTR fs:[rsi]
   14000f914:	ja     0x14000f989
   14000f916:	push   rbx
   14000f917:	gs je  0x14000f98e
   14000f91a:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14000f921:	and    BYTE PTR [rax],ah
   14000f923:	and    BYTE PTR [rax],ah
   14000f925:	cmp    al,0x2f
   14000f927:	(bad)  
   14000f928:	jo     0x14000f99a
   14000f92a:	ins    BYTE PTR es:[rdi],dx
   14000f92b:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000f932:	ds or  eax,0x612f3c0a
   14000f938:	jae    0x14000f9ad
   14000f93a:	gs ins DWORD PTR es:[rdi],dx
   14000f93c:	(bad)  
   14000f93d:	ins    BYTE PTR es:[rdi],dx
   14000f93e:	jns    0x14000f97e
   14000f940:	or     eax,0xa
   14000f945:	add    BYTE PTR [rax],al
   14000f947:	add    BYTE PTR [rax],ch
   14000f949:	add    BYTE PTR [rax],al
   14000f94b:	add    BYTE PTR [rax],ah
   14000f94d:	add    BYTE PTR [rax],al
   14000f94f:	add    BYTE PTR [rax+0x0],al
   14000f952:	add    BYTE PTR [rax],al
   14000f954:	add    DWORD PTR [rax],eax
   14000f956:	add    al,0x0
   14000f958:	add    BYTE PTR [rax],al
   14000f95a:	add    BYTE PTR [rax],al
   14000f95c:	add    BYTE PTR [rdx],al
	...
   14000f976:	add    BYTE PTR [rax],0x0
   14000f979:	add    BYTE PTR [rax],0x0
   14000f97c:	add    BYTE PTR [rax+0x800080],al
   14000f982:	add    BYTE PTR [rax],al
   14000f984:	add    BYTE PTR [rax],0x80
   14000f987:	add    BYTE PTR [rax-0x7fffff80],al
   14000f98d:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000f994:	add    BYTE PTR [rax],al
   14000f996:	inc    DWORD PTR [rax]
   14000f998:	add    bh,bh
   14000f99a:	add    BYTE PTR [rax],al
   14000f99c:	add    bh,bh
   14000f99e:	inc    DWORD PTR [rax]
   14000f9a0:	inc    DWORD PTR [rax]
   14000f9a2:	add    BYTE PTR [rax],al
   14000f9a4:	inc    DWORD PTR [rax]
   14000f9a6:	inc    DWORD PTR [rax]
   14000f9a8:	(bad)  
   14000f9a9:	inc    DWORD PTR [rax]
   14000f9ab:	add    bh,bh
   14000f9ad:	(bad)  
   14000f9ae:	inc    DWORD PTR [rax]
	...
   14000f9d0:	add    BYTE PTR [rax],al
   14000f9d2:	add    BYTE PTR [rdi-0x1],cl
   14000f9d8:	(bad)  
   14000f9d9:	(bad)  
   14000f9da:	(bad)  
   14000f9db:	(bad)  
   14000f9dc:	(bad)  
   14000f9dd:	(bad)  
   14000f9de:	inc    DWORD PTR [rax]
   14000f9e0:	add    BYTE PTR [rax],al
   14000f9e2:	add    BYTE PTR [rdi-0x1],cl
   14000f9e8:	(bad)  
   14000f9e9:	(bad)  
   14000f9ea:	(bad)  
   14000f9eb:	(bad)  
   14000f9ec:	(bad)  
   14000f9ed:	(bad)  
   14000f9ee:	inc    DWORD PTR [rax]
   14000f9f0:	add    BYTE PTR [rax],al
   14000f9f2:	add    BYTE PTR [rdi-0x1],cl
   14000f9f8:	(bad)  
   14000f9f9:	(bad)  
   14000f9fa:	(bad)  
   14000f9fb:	(bad)  
   14000f9fc:	(bad)  
   14000f9fd:	(bad)  
   14000f9fe:	inc    DWORD PTR [rax]
   14000fa00:	add    BYTE PTR [rax],al
   14000fa02:	add    BYTE PTR [rdi-0x1],cl
   14000fa08:	(bad)  
   14000fa09:	(bad)  
   14000fa0a:	(bad)  
   14000fa0b:	(bad)  
   14000fa0c:	(bad)  
   14000fa0d:	(bad)  
   14000fa0e:	inc    DWORD PTR [rax]
   14000fa10:	add    BYTE PTR [rax],al
   14000fa12:	add    BYTE PTR [rdi-0x7000001],cl
   14000fa18:	ja     0x14000fa91
   14000fa1a:	ja     0x14000f9ab
   14000fa1c:	(bad)  
   14000fa1d:	(bad)  
   14000fa1e:	inc    DWORD PTR [rax]
   14000fa20:	add    BYTE PTR [rax],al
   14000fa22:	add    BYTE PTR [rdi-0x7000001],cl
   14000fa28:	(bad)  
   14000fa29:	(bad)  
   14000fa2a:	dec    DWORD PTR [rdi+0xffffff]
   14000fa30:	add    BYTE PTR [rax],al
   14000fa32:	add    BYTE PTR [rdi-0x7000001],cl
   14000fa38:	inc    BYTE PTR [rdx-0x7091]
   14000fa3e:	inc    DWORD PTR [rax]
   14000fa40:	add    BYTE PTR [rax],al
   14000fa42:	add    BYTE PTR [rdi+0x877f7ff],cl
   14000fa48:	(bad)  
   14000fa49:	imul   DWORD PTR [rdi-0x80]
   14000fa4c:	ja     0x14000facd
   14000fa4e:	inc    DWORD PTR [rax]
   14000fa50:	add    BYTE PTR [rax],al
   14000fa52:	add    BYTE PTR [rdi+0x68fff7ff],cl
   14000fa58:	ja     0x14000fad1
   14000fa5a:	ja     0x14000f9e2
   14000fa5c:	(bad)  
   14000fa5d:	jg     0x14000fa5e
   14000fa5f:	add    BYTE PTR [rax],al
   14000fa61:	add    BYTE PTR [rax],al
   14000fa63:	(bad)  
   14000fa64:	push   rdi
   14000fa66:	ja     0x14000f9f0
   14000fa68:	mov    BYTE PTR [rax+0x7f778888],cl
   14000fa6e:	inc    DWORD PTR [rax]
   14000fa70:	add    BYTE PTR [rax],al
   14000fa72:	add    BYTE PTR [rdi+0x7788f7ff],cl
   14000fa78:	ja     0x14000faf1
   14000fa7a:	ja     0x14000faf3
   14000fa7c:	mov    BYTE PTR [rdi-0x1],bh
   14000fa7f:	add    BYTE PTR [rax],al
   14000fa81:	add    BYTE PTR [rax],al
   14000fa83:	(bad)  
   14000fa84:	push   rdi
   14000fa86:	mov    BYTE PTR [rdi+0x77],dh
   14000fa89:	ja     0x14000fb02
   14000fa8b:	ja     0x14000fa15
   14000fa8d:	jg     0x14000fa8e
   14000fa8f:	add    BYTE PTR [rax],al
   14000fa91:	add    BYTE PTR [rax],al
   14000fa93:	(bad)  
   14000fa94:	push   rdi
   14000fa96:	mov    BYTE PTR [rdi+0x77],dh
   14000fa99:	ja     0x14000fb12
   14000fa9b:	ja     0x14000fa25
   14000fa9d:	jg     0x14000fa9e
   14000fa9f:	add    BYTE PTR [rax],al
   14000faa1:	add    BYTE PTR [rax],al
   14000faa3:	(bad)  
   14000faa4:	push   rdi
   14000faa6:	js     0x14000fb1f
   14000faa8:	ja     0x14000fb21
   14000faaa:	ja     0x14000fb23
   14000faac:	xchg   DWORD PTR [rdi-0x1],edi
   14000faaf:	add    BYTE PTR [rax],al
   14000fab1:	add    BYTE PTR [rax],al
   14000fab3:	(bad)  
   14000fab4:	(bad)  
   14000fab5:	push   QWORD PTR [rdi+0x77]
   14000fab8:	ja     0x14000fb31
   14000faba:	ja     0x14000fb33
   14000fabc:	ja     0x14000fabd
   14000fabe:	inc    DWORD PTR [rax]
   14000fac0:	add    BYTE PTR [rax],al
   14000fac2:	add    BYTE PTR [rdi-0x77007009],cl
   14000fac8:	(bad)  
   14000fac9:	(bad)  
   14000faca:	dec    DWORD PTR [rax+0xffffff]
   14000fad0:	add    BYTE PTR [rax],al
   14000fad2:	add    BYTE PTR [rdi-0x7700970a],cl
   14000fad8:	(bad)  
   14000fad9:	(bad)  
   14000fada:	dec    DWORD PTR [rax+0xffffff]
   14000fae0:	add    BYTE PTR [rax],al
   14000fae2:	add    BYTE PTR [rdi-0x7770790a],cl
   14000fae8:	(bad)  
   14000fae9:	(bad)  
   14000faea:	dec    DWORD PTR [rax+0xffffff]
   14000faf0:	add    BYTE PTR [rax],al
   14000faf2:	add    BYTE PTR [rdi-0x7797770a],cl
   14000faf8:	(bad)  
   14000faf9:	(bad)  
   14000fafa:	dec    DWORD PTR [rax+0xffffff]
   14000fb00:	(bad)  
   14000fb01:	data16 data16 data16 data16 xchg BYTE PTR [rsi+0x77778788],al
   14000fb0b:	mov    bh,bh
   14000fb0d:	(bad)  
   14000fb0e:	inc    DWORD PTR [rax]
   14000fb10:	push   0xffffffff88888888
   14000fb15:	out    0x68,al
   14000fb17:	push   0xffffffffffffffff
   14000fb1c:	(bad)  
   14000fb1d:	(bad)  
   14000fb1e:	inc    DWORD PTR [rax]
   14000fb20:	push   0xffffffffeeeeee6e
   14000fb25:	out    0x66,al
   14000fb27:	xchg   bh,bh
   14000fb29:	(bad)  
   14000fb2a:	(bad)  
   14000fb2b:	(bad)  
   14000fb2c:	(bad)  
   14000fb2d:	(bad)  
   14000fb2e:	clc    
   14000fb2f:	add    BYTE PTR [rdi+0x66],ah
   14000fb32:	out    dx,al
   14000fb33:	out    dx,al
   14000fb34:	out    dx,al
   14000fb35:	out    dx,al
   14000fb36:	push   0xffffffffffffff68
   14000fb3b:	(bad)  
   14000fb3c:	dec    DWORD PTR [rax+0x66060088]
   14000fb42:	data16 data16 data16 out dx,al
   14000fb46:	xchg   BYTE PTR [rdi-0x1],cl
   14000fb4c:	mov    BYTE PTR [rax+0x88],cl
   14000fb52:	add    BYTE PTR [rdi-0x97170a],cl
   14000fb58:	(bad)  
   14000fb59:	(bad)  
   14000fb5a:	(bad)  
   14000fb5b:	dec    DWORD PTR [rdi+0x88ff]
   14000fb61:	add    BYTE PTR [rax],al
   14000fb63:	(bad)  
   14000fb64:	test   BYTE PTR [rsi-0x71],0xff
   14000fb6b:	dec    DWORD PTR [rdi+0xf8]
   14000fb71:	add    BYTE PTR [rax],al
   14000fb73:	(bad)  
   14000fb74:	imul   BYTE PTR [rax-0x1]
   14000fb77:	(bad)  
   14000fb78:	(bad)  
   14000fb79:	(bad)  
   14000fb7a:	(bad)  
   14000fb7b:	dec    DWORD PTR [rdi+0x80]
   14000fb81:	add    BYTE PTR [rax],al
   14000fb83:	(bad)  
   14000fb84:	test   DWORD PTR [rdi-0x1],0x88ffff
   14000fb8e:	add    BYTE PTR [rax],al
   14000fb90:	add    BYTE PTR [rax],al
   14000fb92:	add    BYTE PTR [rdi-0x1],cl
   14000fb98:	(bad)  
   14000fb99:	(bad)  
   14000fb9a:	(bad)  
   14000fb9b:	clc    
   14000fb9c:	mov    BYTE PTR [rax],al
   14000fb9e:	add    BYTE PTR [rax],al
   14000fba0:	add    BYTE PTR [rax],al
   14000fba2:	add    BYTE PTR [rax-0x77777778],cl
   14000fba8:	mov    BYTE PTR [rax+0x8888],cl
   14000fbae:	add    BYTE PTR [rax],al
   14000fbb0:	(bad)  
   14000fbb1:	(bad)  
   14000fbb2:	(bad)  
   14000fbb3:	(bad)  
   14000fbb4:	(bad)  
   14000fbb5:	(bad)  
   14000fbb6:	(bad)  
   14000fbb7:	(bad)  
   14000fbb8:	cld    
   14000fbb9:	add    BYTE PTR [rax],al
   14000fbbb:	add    edi,esp
   14000fbbd:	add    BYTE PTR [rax],al
   14000fbbf:	add    edi,esp
   14000fbc1:	add    BYTE PTR [rax],al
   14000fbc3:	add    edi,esp
   14000fbc5:	add    BYTE PTR [rax],al
   14000fbc7:	add    edi,esp
   14000fbc9:	add    BYTE PTR [rax],al
   14000fbcb:	add    edi,esp
   14000fbcd:	add    BYTE PTR [rax],al
   14000fbcf:	add    edi,esp
   14000fbd1:	add    BYTE PTR [rax],al
   14000fbd3:	add    edi,esp
   14000fbd5:	add    BYTE PTR [rax],al
   14000fbd7:	add    edi,esp
   14000fbd9:	add    BYTE PTR [rax],al
   14000fbdb:	add    edi,esp
   14000fbdd:	add    BYTE PTR [rax],al
   14000fbdf:	add    edi,esp
   14000fbe1:	add    BYTE PTR [rax],al
   14000fbe3:	add    edi,esp
   14000fbe5:	add    BYTE PTR [rax],al
   14000fbe7:	add    edi,esp
   14000fbe9:	add    BYTE PTR [rax],al
   14000fbeb:	add    edi,esp
   14000fbed:	add    BYTE PTR [rax],al
   14000fbef:	add    edi,esp
   14000fbf1:	add    BYTE PTR [rax],al
   14000fbf3:	add    edi,esp
   14000fbf5:	add    BYTE PTR [rax],al
   14000fbf7:	add    edi,esp
   14000fbf9:	add    BYTE PTR [rax],al
   14000fbfb:	add    edi,esp
   14000fbfd:	add    BYTE PTR [rax],al
   14000fbff:	add    edi,esp
   14000fc01:	add    BYTE PTR [rax],al
   14000fc03:	add    eax,DWORD PTR [rax+0x30000]
   14000fc09:	add    BYTE PTR [rax],al
   14000fc0b:	add    eax,DWORD PTR [rax]
   14000fc0d:	add    BYTE PTR [rax],al
   14000fc0f:	add    eax,DWORD PTR [rax]
   14000fc11:	add    BYTE PTR [rax],al
   14000fc13:	add    eax,DWORD PTR [rax-0x3fd0000]
   14000fc19:	add    BYTE PTR [rax],al
   14000fc1b:	add    edi,esp
   14000fc1d:	add    BYTE PTR [rax],al
   14000fc1f:	paddb  mm0,QWORD PTR [rax]
   14000fc22:	add    BYTE PTR [rdi],bl
   14000fc24:	cld    
   14000fc25:	add    BYTE PTR [rax],al
   14000fc27:	(bad)  
   14000fc28:	cld    
   14000fc29:	add    BYTE PTR [rax],al
   14000fc2b:	(bad)  
   14000fc2c:	cld    
   14000fc2d:	add    BYTE PTR [rax],al
   14000fc2f:	jmp    FWORD PTR [rax]
   14000fc31:	add    BYTE PTR [rax],al
   14000fc33:	add    BYTE PTR [rax],dl
   14000fc35:	add    BYTE PTR [rax],al
   14000fc37:	add    BYTE PTR [rax],ah
   14000fc39:	add    BYTE PTR [rax],al
   14000fc3b:	add    BYTE PTR [rcx],al
   14000fc3d:	add    BYTE PTR [rax+rax*1],al
   14000fc40:	add    BYTE PTR [rax],al
   14000fc42:	add    BYTE PTR [rax],al
   14000fc44:	add    BYTE PTR [rax],0x0
	...
   14000fc5b:	add    BYTE PTR [rax],al
   14000fc5d:	add    BYTE PTR [rax+0x800000],al
   14000fc63:	add    BYTE PTR [rax],al
   14000fc65:	add    BYTE PTR [rax+0x8000],0x0
   14000fc6c:	add    BYTE PTR [rax],0x80
   14000fc6f:	add    BYTE PTR [rax-0x7fffff80],al
   14000fc75:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000fc7c:	add    BYTE PTR [rax],al
   14000fc7e:	inc    DWORD PTR [rax]
   14000fc80:	add    bh,bh
   14000fc82:	add    BYTE PTR [rax],al
   14000fc84:	add    bh,bh
   14000fc86:	inc    DWORD PTR [rax]
   14000fc88:	inc    DWORD PTR [rax]
   14000fc8a:	add    BYTE PTR [rax],al
   14000fc8c:	inc    DWORD PTR [rax]
   14000fc8e:	inc    DWORD PTR [rax]
   14000fc90:	(bad)  
   14000fc91:	inc    DWORD PTR [rax]
   14000fc93:	add    bh,bh
   14000fc95:	(bad)  
   14000fc96:	inc    DWORD PTR [rax]
   14000fc98:	add    BYTE PTR [rdi],al
   14000fc9a:	ja     0x14000fd13
   14000fc9c:	ja     0x14000fd15
   14000fc9e:	ja     0x14000fd10
   14000fca0:	add    BYTE PTR [rdi],al
   14000fca2:	(bad)  
   14000fca3:	(bad)  
   14000fca4:	(bad)  
   14000fca5:	(bad)  
   14000fca6:	push   QWORD PTR [rax+0x0]
   14000fca9:	(bad)  
   14000fcaa:	push   rdi
   14000fcac:	ja     0x14000fd2d
   14000fcae:	push   QWORD PTR [rax+0x0]
   14000fcb1:	(bad)  
   14000fcb2:	idiv   DWORD PTR [rax-0x19]
   14000fcb5:	xchg   DWORD PTR [rdi+0x70],edi
   14000fcb8:	add    BYTE PTR [rax],cl
   14000fcba:	div    edi
   14000fcbc:	ja     0x14000fd3d
   14000fcbe:	jg     0x14000fc40
   14000fcc0:	add    BYTE PTR [rax],cl
   14000fcc2:	clc    
   14000fcc3:	mov    BYTE PTR [rax+0x807f88],cl
   14000fcc9:	or     BYTE PTR [rax-0x79],ch
   14000fccc:	ja     0x14000fd45
   14000fcce:	jg     0x14000fc50
   14000fcd0:	add    BYTE PTR [rax],cl
   14000fcd2:	data16 (bad) 
   14000fcd4:	(bad)  
   14000fcd5:	clc    
   14000fcd6:	inc    DWORD PTR [rax+0x68686676]
   14000fcdc:	(bad)  
   14000fcdd:	clc    
   14000fcde:	inc    DWORD PTR [rax-0x79797798]
   14000fce4:	mov    BYTE PTR [rax+0x667680ff],cl
   14000fcea:	push   0xfffffffff8ffff68
   14000fcef:	add    BYTE PTR [rax],0x8
   14000fcf2:	data16 (bad) 
   14000fcf4:	(bad)  
   14000fcf5:	clc    
   14000fcf6:	mov    BYTE PTR [rax-0x97f800],al
   14000fcfc:	(bad)  
   14000fcfd:	clc    
   14000fcfe:	clc    
   14000fcff:	add    BYTE PTR [rax],al
   14000fd01:	or     bh,bh
   14000fd03:	(bad)  
   14000fd04:	(bad)  
   14000fd05:	clc    
   14000fd06:	add    BYTE PTR [rax],0x0
   14000fd09:	or     BYTE PTR [rax+0x888888],cl
	...
   14000fd17:	add    al,ah
   14000fd19:	add    DWORD PTR [rax],eax
   14000fd1b:	add    al,ah
   14000fd1d:	add    DWORD PTR [rax],eax
   14000fd1f:	add    al,ah
   14000fd21:	add    DWORD PTR [rax],eax
   14000fd23:	add    al,ah
   14000fd25:	add    DWORD PTR [rax],eax
   14000fd27:	add    al,ah
   14000fd29:	add    DWORD PTR [rax],eax
   14000fd2b:	add    al,ah
   14000fd2d:	add    DWORD PTR [rax],eax
   14000fd2f:	add    al,ah
   14000fd31:	add    DWORD PTR [rax],eax
   14000fd33:	add    al,ah
   14000fd35:	add    DWORD PTR [rax],eax
   14000fd37:	add    BYTE PTR [rax],al
   14000fd39:	add    DWORD PTR [rax],eax
   14000fd3b:	add    BYTE PTR [rax],al
   14000fd3d:	add    DWORD PTR [rax],eax
   14000fd3f:	add    BYTE PTR [rax],al
   14000fd41:	add    DWORD PTR [rax],eax
   14000fd43:	add    al,ah
   14000fd45:	add    DWORD PTR [rax],eax
   14000fd47:	add    al,ah
   14000fd49:	add    eax,DWORD PTR [rax]
   14000fd4b:	add    al,ah
   14000fd4d:	(bad)  
   14000fd4e:	add    BYTE PTR [rax],al
   14000fd50:	loopne 0x14000fd61
   14000fd52:	add    BYTE PTR [rax],al
   14000fd54:	(bad)  
   14000fd55:	inc    DWORD PTR [rax]
   14000fd57:	add    BYTE PTR [rax],ch
   14000fd59:	add    BYTE PTR [rax],al
   14000fd5b:	add    BYTE PTR [rax],ah
   14000fd5d:	add    BYTE PTR [rax],al
   14000fd5f:	add    BYTE PTR [rax+0x0],al
   14000fd62:	add    BYTE PTR [rax],al
   14000fd64:	add    DWORD PTR [rax],eax
   14000fd66:	or     BYTE PTR [rax],al
   14000fd68:	add    BYTE PTR [rax],al
   14000fd6a:	add    BYTE PTR [rax],al
   14000fd6c:	add    BYTE PTR [rax+rax*1],al
	...
   14000fd77:	add    BYTE PTR [rax],al
   14000fd79:	add    DWORD PTR [rax],eax
   14000fd7b:	add    BYTE PTR [rax],al
   14000fd7d:	add    DWORD PTR [rax],eax
   14000fd7f:	add    BYTE PTR [rax],al
   14000fd81:	add    BYTE PTR [rax],al
   14000fd83:	add    BYTE PTR [rbx+riz*1],dh
   14000fd86:	and    eax,DWORD PTR [rax]
   14000fd88:	cmp    BYTE PTR [rdi+0x23],bl
   14000fd8b:	add    BYTE PTR [rbp+0x40],al
   14000fd8e:	(bad)  
   14000fd8f:	add    BYTE PTR [rdx+0x5a],dl
   14000fd92:	rex.X add BYTE PTR [rbx+0x53],dl
   14000fd96:	push   rbx
   14000fd97:	add    BYTE PTR [rbx+0x57],ah
   14000fd9a:	rex.X add BYTE PTR [rdi+0x67],spl
   14000fd9e:	add    BYTE PTR [edi+0x77],dh
   14000fda2:	ja     0x14000fda4
   14000fda4:	jp     0x14000fe20
   14000fda6:	jp     0x14000fda8
   14000fda8:	test   BYTE PTR [rcx+0x18],bl
   14000fdab:	add    BYTE PTR [rbp-0x72ffe99a],ah
   14000fdb1:	imul   ebp,DWORD PTR [rbx],0x0
   14000fdb4:	mov    dl,0x76
   14000fdb6:	add    BYTE PTR es:[rbx-0x47ffd688],dh
   14000fdbd:	jle    0x14000fdee
   14000fdbf:	add    BYTE PTR [rdx+0x70004f6d],cl
   14000fdc5:	mov    BYTE PTR [rdi+0x0],cl
   14000fdc8:	retf   
   14000fdc9:	adc    DWORD PTR [rcx],0x0
   14000fdcc:	int    0x84
   14000fdce:	adc    al,BYTE PTR [rax]
   14000fdd0:	(bad)  
   14000fdd1:	lea    edx,[rdi]
   14000fdd3:	add    ah,bl
   14000fdd5:	xchg   edi,eax
   14000fdd6:	sbb    eax,DWORD PTR [rax]
   14000fdd8:	fstp   QWORD PTR [rcx-0x601cffe1]
   14000fdde:	(bad)  
   14000fddf:	add    cl,dl
   14000fde1:	cwde   
   14000fde2:	ss add al,bl
   14000fde5:	lahf   
   14000fde6:	cmp    al,BYTE PTR [rax]
   14000fde8:	fldenv [rcx-0x5d1bffc5]
   14000fdee:	(bad)  
   14000fdef:	add    al,ch
   14000fdf1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000fdf2:	and    eax,DWORD PTR [rax]
   14000fdf4:	in     eax,dx
   14000fdf5:	lods   al,BYTE PTR ds:[rsi]
   14000fdf6:	(bad)  
   14000fdf7:	add    al,dh
   14000fdf9:	mov    cl,0x2d
   14000fdfb:	add    al,ah
   14000fdfd:	movabs eax,ds:0xb3ef0030abea0034
   14000fe06:	cmp    DWORD PTR [rax],eax
   14000fe08:	out    dx,al
   14000fe09:	mov    ch,0x3f
   14000fe0b:	add    cl,dh
   14000fe0d:	mov    ah,0x36
   14000fe0f:	add    BYTE PTR [rax-0x29ff8b7f],cl
   14000fe15:	test   al,0x5d
   14000fe17:	add    al,ah
   14000fe19:	stos   BYTE PTR es:[rdi],al
   14000fe1a:	add    r11b,dil
   14000fe1d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fe1e:	rex.WR add al,r13b
   14000fe21:	mov    dl,0x44
   14000fe23:	add    ch,ch
   14000fe25:	mov    ch,0x46
   14000fe27:	add    dh,ch
   14000fe29:	mov    eax,0xb9f1004a
   14000fe2e:	rex.XB add r9b,sil
   14000fe31:	mov    edx,0xbcf20049
   14000fe36:	rex.WX add dl,spl
   14000fe39:	mov    al,0x5b
   14000fe3b:	add    bl,al
   14000fe3d:	cdq    
   14000fe3e:	movsxd eax,DWORD PTR [rax]
   14000fe40:	retf   0x6da1
   14000fe43:	add    ah,bl
   14000fe45:	scas   al,BYTE PTR es:[rdi]
   14000fe46:	(bad)  
   14000fe47:	add    dh,bl
   14000fe49:	mov    al,0x6b
   14000fe4b:	add    dl,ah
   14000fe4d:	mov    dh,0x66
   14000fe4f:	add    ah,ah
   14000fe51:	mov    eax,0xc4ed006f
   14000fe56:	jne    0x14000fe58
   14000fe58:	out    dx,eax
   14000fe59:	(bad)  
   14000fe5a:	js     0x14000fe5c
   14000fe5c:	icebp  
   14000fe5d:	(bad)  
   14000fe5e:	js     0x14000fe60
   14000fe60:	hlt    
   14000fe61:	retf   
   14000fe62:	jns    0x14000fe64
   14000fe64:	cmc    
   14000fe65:	int    0x7a
   14000fe67:	add    ah,dh
   14000fe69:	int    0x7e
   14000fe6b:	add    BYTE PTR [rax-0x75ff7778],cl
   14000fe71:	mov    ecx,DWORD PTR [rax+rax*1+0x989898]
   14000fe78:	sahf   
   14000fe79:	sahf   
   14000fe7a:	sahf   
   14000fe7b:	add    BYTE PTR [rax-0x55ff6b42],ch
   14000fe81:	stos   BYTE PTR es:[rdi],al
   14000fe82:	stos   BYTE PTR es:[rdi],al
   14000fe83:	add    BYTE PTR [rbp-0x4dff5253],ch
   14000fe89:	mov    dl,0xb2
   14000fe8b:	add    BYTE PTR [rax-0x47ff4d4b],bh
   14000fe91:	mov    eax,0xbdbd00b8
   14000fe96:	mov    ebp,0x8bbfe300
   14000fe9b:	add    dl,al
   14000fe9d:	mov    ebp,0xff9700b9
   14000fea2:	mov    ah,0x0
   14000fea4:	fadd   st(0),st
   14000fea6:	(bad)  
   14000fea7:	add    dh,bl
   14000fea9:	ret    
   14000feaa:	lahf   
   14000feab:	add    ch,ch
   14000fead:	retf   0x87
   14000feb0:	in     eax,0xc0
   14000feb2:	mov    WORD PTR [rax],es
   14000feb4:	call   0x131018d7c
   14000feb9:	int    0x83
   14000febb:	add    ah,dh
   14000febd:	iret   
   14000febe:	add    BYTE PTR [rax],0xe5
   14000fec1:	(bad)  
   14000fec2:	xchg   ebx,eax
   14000fec3:	add    cl,ah
   14000fec5:	retf   0xad
   14000fec8:	in     eax,0xcf
   14000feca:	mov    cl,0x0
   14000fecc:	in     eax,0xd0
   14000fece:	mov    ah,0x0
   14000fed0:	ret    
   14000fed1:	ret    
   14000fed2:	ret    
   14000fed3:	add    dh,al
   14000fed5:	mov    dh,0x0
   14000fed8:	int3   
   14000fed9:	mov    al,0x0
   14000fedc:	leave  
   14000fedd:	leave  
   14000fede:	leave  
   14000fedf:	add    ch,cl
   14000fee1:	int    0xcd
   14000fee3:	add    bl,dl
   14000fee5:	retf   
   14000fee6:	(bad)  
   14000fee7:	add    ch,dl
   14000fee9:	(bad)  
   14000feea:	(bad)  
   14000feeb:	add    ah,bl
   14000feed:	(bad)  
   14000feef:	add    dl,ah
   14000fef1:	fcmovbe st,st(3)
   14000fef3:	add    ch,ch
   14000fef5:	out    dx,al
   14000fef6:	fld    DWORD PTR [rax]
   14000fef8:	jrcxz  0x14000fedd
   14000fefa:	jrcxz  0x14000fefc
   14000fefc:	in     al,0xe4
   14000fefe:	in     al,0x0
   14000ff00:	(bad)  
   14000ff01:	(bad)  
   14000ff02:	(bad)  
   14000ff03:	add    ch,dh
   14000ff05:	repz hlt 
   14000ff07:	add    dh,dh
   14000ff09:	div    dh
   14000ff0b:	add    al,bh
   14000ff0d:	div    esi
   14000ff0f:	add    bh,dh
   14000ff11:	clc    
   14000ff12:	clc    
   14000ff13:	add    cl,bh
   14000ff15:	stc    
   14000ff16:	stc    
   14000ff17:	add    bl,bh
   14000ff19:	cld    
   14000ff1a:	cld    
   14000ff1b:	add    dh,bh
   14000ff1d:	(bad)  
   14000ff1e:	inc    BYTE PTR [rax]
	...
   14001017c:	(bad)  
   14001017d:	(bad)  
   14001017e:	inc    DWORD PTR [rax]
	...
   1400101c4:	add    BYTE PTR [rax],al
   1400101c6:	pop    rdx
   1400101c7:	gs gs gs gs gs gs fs fs fs fs fs fs fs fs
   1400101d5:	fs fs fs fs fs fs fs fs add BYTE PTR fs:[rax],al
   1400101e0:	add    BYTE PTR [rax],al
   1400101e2:	add    BYTE PTR [rax],al
   1400101e4:	add    BYTE PTR [rax],al
   1400101e6:	pop    rdx
   1400101e7:	gs gs gs gs gs gs gs fs fs fs fs fs fs fs
   1400101f5:	fs fs fs fs fs fs fs fs add BYTE PTR fs:[rax],al
   140010200:	add    BYTE PTR [rax],al
   140010202:	add    BYTE PTR [rax],al
   140010204:	add    BYTE PTR [rax],al
   140010206:	pop    rdx
   140010207:	gs gs gs gs gs gs gs gs fs fs fs fs fs fs
   140010215:	fs fs fs fs fs fs fs fs add BYTE PTR fs:[rax],al
   140010220:	add    BYTE PTR [rax],al
   140010222:	add    BYTE PTR [rax],al
   140010224:	add    BYTE PTR [rax],al
   140010226:	pop    rdx
   140010227:	gs gs gs gs gs gs gs gs gs gs fs fs fs fs
   140010235:	fs fs fs fs fs fs fs fs add BYTE PTR fs:[rax],al
   140010240:	add    BYTE PTR [rax],al
   140010242:	add    BYTE PTR [rax],al
   140010244:	add    BYTE PTR [rax],al
   140010246:	pop    rdx
   140010247:	gs gs gs gs gs gs gs gs rex cmp eax,0x3d3d3d3d
   140010255:	cmp    eax,0x64646440
   14001025a:	fs fs fs add BYTE PTR fs:[rax],al
   140010260:	add    BYTE PTR [rax],al
   140010262:	add    BYTE PTR [rax],al
   140010264:	add    BYTE PTR [rax],al
   140010266:	pop    rdx
   140010267:	gs gs gs gs gs gs gs gs rex
   140010270:	gs gs gs gs gs gs rex
   140010277:	fs fs fs fs fs fs add BYTE PTR fs:[rax],al
   140010280:	add    BYTE PTR [rax],al
   140010282:	add    BYTE PTR [rax],al
   140010284:	add    BYTE PTR [rax],al
   140010286:	pop    rdx
   140010287:	gs gs gs gs gs gs gs gs rex
   140010290:	gs (bad) 
   140010292:	(bad)  
   140010293:	add    cl,BYTE PTR [rdx]
   140010295:	gs rex
   140010297:	fs fs fs fs fs fs add BYTE PTR fs:[rax],al
   1400102a0:	add    BYTE PTR [rax],al
   1400102a2:	add    BYTE PTR [rax],al
   1400102a4:	add    BYTE PTR [rax],al
   1400102a6:	pop    rdx
   1400102a7:	gs gs gs gs cmp eax,0x40013d3d
   1400102b0:	gs (bad) 
   1400102b2:	pop    rbp
   1400102b3:	adc    DWORD PTR [riz*2+0x3d3d0140],ecx
   1400102ba:	cmp    eax,0x646464
   1400102bf:	add    BYTE PTR [rax],al
   1400102c1:	add    BYTE PTR [rax],al
   1400102c3:	add    BYTE PTR [rax],al
   1400102c5:	add    BYTE PTR [rdx+0x65],bl
   1400102c8:	gs gs or BYTE PTR gs:[rsp+riz*2+0x3],ah
   1400102cf:	cmp    al,0x10
   1400102d2:	and    al,0x4
   1400102d4:	(bad)  
   1400102d5:	cmp    al,0x40
   1400102d7:	add    esp,DWORD PTR [rsp+riz*2+0x8]
   1400102db:	fs fs add BYTE PTR fs:[rax],al
   1400102e0:	add    BYTE PTR [rax],al
   1400102e2:	add    BYTE PTR [rax],al
   1400102e4:	add    BYTE PTR [rax],al
   1400102e6:	pop    rdx
   1400102e7:	gs gs gs or BYTE PTR gs:[rip+0x5c5c5c3d],bh        # 0x19c5d5f2e
   1400102f1:	pop    rsp
   1400102f2:	pop    rsp
   1400102f3:	pop    rsp
   1400102f4:	pop    rsp
   1400102f5:	pop    rsp
   1400102f6:	pop    rsp
   1400102f7:	pop    rsp
   1400102f8:	cmp    eax,0x6464083d
   1400102fd:	add    BYTE PTR fs:[rax],al
   140010300:	add    BYTE PTR [rax],al
   140010302:	add    BYTE PTR [rax],al
   140010304:	add    BYTE PTR [rax],al
   140010306:	pop    rdx
   140010307:	gs gs gs or BYTE PTR gs:[rbx+0x43],al
   14001030e:	add    eax,0x5050505
   140010313:	add    eax,0x5050505
   140010318:	rex.XB
   140010319:	rex.W or BYTE PTR [rsp+riz*2+0x64],spl
	...
   140010326:	pop    rdx
   140010327:	gs gs gs or BYTE PTR gs:[rdi+0x47],al
   14001032e:	add    eax,0x5050505
   140010333:	add    eax,0x5050505
   140010338:	rex.RXB
   140010339:	or     BYTE PTR [r12+r12*2+0x64],r12b
	...
   140010346:	pop    rdx
   140010347:	gs gs gs or BYTE PTR gs:[rsi+0x56],dl
   14001034e:	(bad)  
   14001034f:	(bad)  
   140010350:	(bad)  
   140010351:	(bad)  
   140010352:	(bad)  
   140010353:	(bad)  
   140010354:	(bad)  
   140010355:	(bad)  
   140010356:	(bad)  
   140010357:	(bad)  
   140010358:	push   rsi
   140010359:	push   rsi
   14001035a:	or     BYTE PTR [rbp+0x64],ah
   14001035d:	add    BYTE PTR fs:[rax],al
   140010360:	add    BYTE PTR [rax],al
   140010362:	add    BYTE PTR [rax],al
   140010364:	add    BYTE PTR [rax],al
   140010366:	pop    rdx
   140010367:	gs gs gs gs cmp al,0x8
   14001036d:	pop    rcx
   14001036e:	or     DWORD PTR [rcx],ecx
   140010370:	or     DWORD PTR [rcx],ecx
   140010372:	or     DWORD PTR [rcx],ecx
   140010374:	or     DWORD PTR [rcx],ecx
   140010376:	or     DWORD PTR [rcx],ecx
   140010378:	pop    rcx
   140010379:	or     BYTE PTR [riz*2+0x6465],bh
   140010380:	add    BYTE PTR [rax],al
   140010382:	add    BYTE PTR [rax],al
   140010384:	add    BYTE PTR [rax],al
   140010386:	pop    rdx
   140010387:	gs gs gs gs gs cmp eax,0x3c3c3c08
   140010391:	cmp    al,0x3c
   140010393:	cmp    al,0x3c
   140010395:	cmp    al,0x3c
   140010397:	cmp    al,0x8
   140010399:	cmp    eax,0x65656565
	...
   1400103a6:	pop    rdx
   1400103a7:	gs xor BYTE PTR gs:[rbx+0x65],dl
   1400103ac:	gs gs pop rbx
   1400103af:	rex
   1400103b0:	gs gs gs gs gs gs rex pop rbx
   1400103b8:	gs gs gs gs gs add BYTE PTR gs:[rax],al
   1400103c0:	add    BYTE PTR [rax],al
   1400103c2:	add    BYTE PTR [rax],al
   1400103c4:	add    BYTE PTR [rax],al
   1400103c6:	pop    rdx
   1400103c7:	gs (bad) 
   1400103ca:	rcpps  xmm4,XMMWORD PTR [rbp+0x65]
   1400103ce:	pop    rbx
   1400103cf:	rex
   1400103d0:	gs gs gs gs gs gs rex pop rbx
   1400103d8:	gs gs gs gs gs add BYTE PTR gs:[rax],al
   1400103e0:	add    BYTE PTR [rax],al
   1400103e2:	add    BYTE PTR [rax],al
   1400103e4:	add    BYTE PTR [rax],al
   1400103e6:	pop    rdx
   1400103e7:	gs cmovge ecx,DWORD PTR gs:[rdi]
   1400103ec:	push   rbx
   1400103ed:	gs pop rbx
   1400103ef:	rex movsxd esp,DWORD PTR [rbx+0x63]
   1400103f3:	movsxd esp,DWORD PTR [rbx+0x63]
   1400103f6:	rex pop rbx
   1400103f8:	gs gs gs gs gs add BYTE PTR gs:[rax],al
   140010400:	add    BYTE PTR [rax],al
   140010402:	add    BYTE PTR [rax],al
   140010404:	add    BYTE PTR [rax],al
   140010406:	pop    rdx
   140010407:	gs gs rdmsr 
   14001040b:	rex.WR rsqrtps xmm11,XMMWORD PTR [rbx+0x45]
   140010410:	movsxd esp,DWORD PTR [rbx+0x63]
   140010413:	movsxd esp,DWORD PTR [rbx+0x63]
   140010416:	rex pop rbx
   140010418:	gs gs gs gs gs add BYTE PTR gs:[rax],al
   140010420:	add    BYTE PTR [rdi],cl
   140010422:	(bad)  
   140010423:	(bad)  
   140010424:	(bad)  
   140010425:	(bad)  
   140010426:	(bad)  
   140010427:	(bad)  
   140010428:	(bad)  
   140010429:	sysenter 
   14001042b:	adc    al,BYTE PTR [rsi+0xd]
   14001042e:	rex.WB pop r10
   140010430:	rex cmp eax,0x3d3d3d3d
   140010436:	rex pop rbx
   140010438:	gs gs gs gs gs add BYTE PTR gs:[rax],al
   140010440:	or     esi,DWORD PTR [rbx]
   140010442:	rex.WXB
   140010443:	rex.WRX cmp r15b,BYTE PTR [rdx]
   140010446:	cmp    bh,BYTE PTR [rdx]
   140010448:	(bad)  
   140010449:	xor    eax,0x4612141f
   14001044e:	or     eax,0x65656553
   140010453:	gs gs gs gs gs gs gs gs gs gs add BYTE PTR gs:[rax],al
   140010460:	or     esi,DWORD PTR [rcx]
   140010462:	sbb    ah,BYTE PTR [rsi]
   140010464:	sub    BYTE PTR [rdx],ah
   140010466:	and    ebx,DWORD PTR [rsi]
   140010468:	sbb    eax,0x1415171c
   14001046d:	adc    dl,BYTE PTR [rax+0xe]
   140010470:	gs gs gs gs gs gs gs gs gs gs gs gs gs pop rdx
   14001047e:	add    BYTE PTR [rax],al
   140010480:	or     esp,DWORD PTR [rip+0x28261918]        # 0x168271d9e
   140010486:	sub    ch,BYTE PTR [rbx+rbp*1]
   140010489:	and    ah,BYTE PTR [rax]
   14001048b:	sbb    edx,DWORD PTR [rsi]
   14001048d:	cs (bad) 
   14001048f:	push   rcx
   140010490:	gs gs gs gs gs gs gs gs gs gs pop rdx
   14001049b:	pop    rax
   14001049c:	rex.RB
   14001049d:	add    BYTE PTR [r8],r8b
   1400104a0:	add    BYTE PTR [rbx],cl
   1400104a2:	or     ecx,DWORD PTR [rbx]
   1400104a4:	or     ecx,DWORD PTR [rbx]
   1400104a6:	or     ecx,DWORD PTR [rbx]
   1400104a8:	or     ecx,DWORD PTR [rbx]
   1400104aa:	sub    al,0x28
   1400104ac:	ss (bad) 
   1400104ae:	rex.WB
   1400104af:	gs gs gs gs gs gs gs gs gs rex.X
   1400104b9:	rex
   1400104ba:	rex
   1400104bb:	rex
   1400104bc:	rex
   1400104bd:	add    BYTE PTR [r8],r8b
   1400104c0:	add    BYTE PTR [rax],al
   1400104c2:	add    BYTE PTR [rax],al
   1400104c4:	add    BYTE PTR [rax],al
   1400104c6:	pop    rdx
   1400104c7:	gs or  ebp,DWORD PTR gs:[rdx+rdi*1]
   1400104cc:	(bad)  
   1400104cd:	push   rcx
   1400104ce:	gs gs gs gs gs gs gs gs gs gs push rbp
   1400104d9:	fs fs pop rsi
   1400104dc:	rex.RB
   1400104dd:	add    BYTE PTR [rax],al
   1400104e0:	add    BYTE PTR [rax],al
   1400104e2:	add    BYTE PTR [rax],al
   1400104e4:	add    BYTE PTR [rax],al
   1400104e6:	pop    rdx
   1400104e7:	gs or  ecx,DWORD PTR gs:[rsi+0xe]
   1400104ec:	push   rcx
   1400104ed:	gs gs gs gs gs gs gs gs gs gs gs pop rax
   1400104f9:	gs (bad) 
   1400104fb:	pop    rax
	...
   140010504:	add    BYTE PTR [rax],al
   140010506:	pop    rdx
   140010507:	gs or  ecx,DWORD PTR gs:[rsi]
   14001050b:	push   rcx
   14001050c:	gs gs gs gs gs gs gs gs gs gs gs gs pop rax
   140010519:	pop    rsi
   14001051a:	pop    rax
	...
   140010523:	add    BYTE PTR [rax],al
   140010525:	add    BYTE PTR [rdx+0x65],bl
   140010528:	gs (bad) 
   14001052a:	push   rcx
   14001052b:	gs gs gs gs gs gs gs gs gs gs gs gs (bad) 
   140010538:	push   rbp
   140010539:	push   rbp
	...
   140010546:	pop    rdx
   140010547:	gs gs gs gs gs gs gs gs gs gs gs gs gs gs
   140010555:	gs gs pop rbx
   140010558:	rex.RB
   140010559:	rex.X add BYTE PTR [rax],al
	...
   140010564:	add    BYTE PTR [rax],al
   140010566:	pop    rdx
   140010567:	pop    rdx
   140010568:	pop    rdx
   140010569:	pop    rdx
   14001056a:	pop    rdx
   14001056b:	pop    rdx
   14001056c:	pop    rdx
   14001056d:	pop    rdx
   14001056e:	pop    rdx
   14001056f:	pop    rdx
   140010570:	pop    rdx
   140010571:	pop    rdx
   140010572:	pop    rdx
   140010573:	pop    rdx
   140010574:	pop    rdx
   140010575:	pop    rdx
   140010576:	pop    rdx
   140010577:	pop    rax
	...
   140010580:	(bad)  
   140010581:	(bad)  
   140010582:	(bad)  
   140010583:	(bad)  
   140010584:	(bad)  
   140010585:	(bad)  
   140010586:	(bad)  
   140010587:	(bad)  
   140010588:	cld    
   140010589:	add    BYTE PTR [rax],al
   14001058b:	add    edi,esp
   14001058d:	add    BYTE PTR [rax],al
   14001058f:	add    edi,esp
   140010591:	add    BYTE PTR [rax],al
   140010593:	add    edi,esp
   140010595:	add    BYTE PTR [rax],al
   140010597:	add    edi,esp
   140010599:	add    BYTE PTR [rax],al
   14001059b:	add    edi,esp
   14001059d:	add    BYTE PTR [rax],al
   14001059f:	add    edi,esp
   1400105a1:	add    BYTE PTR [rax],al
   1400105a3:	add    edi,esp
   1400105a5:	add    BYTE PTR [rax],al
   1400105a7:	add    edi,esp
   1400105a9:	add    BYTE PTR [rax],al
   1400105ab:	add    edi,esp
   1400105ad:	add    BYTE PTR [rax],al
   1400105af:	add    edi,esp
   1400105b1:	add    BYTE PTR [rax],al
   1400105b3:	add    edi,esp
   1400105b5:	add    BYTE PTR [rax],al
   1400105b7:	add    edi,esp
   1400105b9:	add    BYTE PTR [rax],al
   1400105bb:	add    edi,esp
   1400105bd:	add    BYTE PTR [rax],al
   1400105bf:	add    edi,esp
   1400105c1:	add    BYTE PTR [rax],al
   1400105c3:	add    edi,esp
   1400105c5:	add    BYTE PTR [rax],al
   1400105c7:	add    edi,esp
   1400105c9:	add    BYTE PTR [rax],al
   1400105cb:	add    edi,esp
   1400105cd:	add    BYTE PTR [rax],al
   1400105cf:	add    edi,esp
   1400105d1:	add    BYTE PTR [rax],al
   1400105d3:	add    eax,DWORD PTR [rax+0x30000]
   1400105d9:	add    BYTE PTR [rax],al
   1400105db:	add    eax,DWORD PTR [rax]
   1400105dd:	add    BYTE PTR [rax],al
   1400105df:	add    eax,DWORD PTR [rax]
   1400105e1:	add    BYTE PTR [rax],al
   1400105e3:	add    eax,DWORD PTR [rax-0x3fd0000]
   1400105e9:	add    BYTE PTR [rax],al
   1400105eb:	add    edi,esp
   1400105ed:	add    BYTE PTR [rax],al
   1400105ef:	paddb  mm0,QWORD PTR [rax]
   1400105f2:	add    BYTE PTR [rdi],bl
   1400105f4:	cld    
   1400105f5:	add    BYTE PTR [rax],al
   1400105f7:	(bad)  
   1400105f8:	cld    
   1400105f9:	add    BYTE PTR [rax],al
   1400105fb:	(bad)  
   1400105fc:	cld    
   1400105fd:	add    BYTE PTR [rax],al
   1400105ff:	jmp    FWORD PTR [rax]
   140010601:	add    BYTE PTR [rax],al
   140010603:	add    BYTE PTR [rax],dl
   140010605:	add    BYTE PTR [rax],al
   140010607:	add    BYTE PTR [rax],ah
   140010609:	add    BYTE PTR [rax],al
   14001060b:	add    BYTE PTR [rcx],al
   14001060d:	add    BYTE PTR [rax],cl
   14001060f:	add    BYTE PTR [rax],al
   140010611:	add    BYTE PTR [rax],al
   140010613:	add    BYTE PTR [rax],al
   140010615:	add    DWORD PTR [rax],eax
	...
   14001061f:	add    BYTE PTR [rax],al
   140010621:	add    DWORD PTR [rax],eax
   140010623:	add    BYTE PTR [rax],al
   140010625:	add    DWORD PTR [rax],eax
   140010627:	add    BYTE PTR [rax],al
   140010629:	add    BYTE PTR [rax],al
   14001062b:	add    BYTE PTR [rcx+0x49],cl
   14001062e:	rex.WB add BYTE PTR [r10+0x5a],dl
   140010632:	rex.X add BYTE PTR [rdi+0x77],sil
   140010636:	ja     0x140010638
   140010638:	jp     0x1400106b4
   14001063a:	jp     0x14001063c
   14001063c:	scas   eax,DWORD PTR es:[rdi]
   14001063d:	ins    BYTE PTR es:[rdi],dx
   14001063e:	adc    al,0x0
   140010640:	mov    edx,0xbc001874
   140010645:	js     0x140010665
   140010647:	add    BYTE PTR [rdi-0x75ffdf85],bh
   14001064d:	ins    DWORD PTR es:[rdi],dx
   14001064e:	rex.WRXB add BYTE PTR [r8-0x78],r14b
   140010652:	rex.WRXB add BYTE PTR [r11-0x41ffd080],r15b
   140010659:	(bad)  
   14001065a:	cs add ah,bl
   14001065d:	xchg   esi,eax
   14001065e:	sbb    eax,DWORD PTR [rax]
   140010660:	in     eax,dx
   140010661:	mov    ebx,0xa1cc005c
   140010666:	data16 add bl,ah
   140010669:	mov    dh,0x6e
   14001066b:	add    bh,ah
   14001066d:	(bad)
   140010670:	out    dx,al
   140010671:	shr    DWORD PTR [rbx+0x0],0xf4
   140010675:	int3   
   140010676:	jl     0x140010678
   140010678:	xchg   BYTE PTR [rsi-0x7777ff7a],al
   14001067e:	mov    BYTE PTR [rax],al
   140010680:	nop
   140010681:	nop
   140010682:	nop
   140010683:	add    BYTE PTR [rax-0x62ff6768],bl
   140010689:	popf   
   14001068a:	popf   
   14001068b:	add    BYTE PTR [rbx-0x53ff5958],ch
   140010691:	lods   al,BYTE PTR ds:[rsi]
   140010692:	lods   al,BYTE PTR ds:[rsi]
   140010693:	add    BYTE PTR [rdx-0x46ff4d4e],dh
   140010699:	mov    ecx,0xbebe00b9
   14001069e:	mov    esi,0x88aecc00
   1400106a3:	add    ch,dl
   1400106a5:	mov    eax,0xbeda0092
   1400106aa:	cwde   
   1400106ab:	add    ch,bl
   1400106ad:	rcr    BYTE PTR [rdx-0x7f300a00],0x0
   1400106b4:	not    ebp
   1400106b6:	lea    eax,[rax]
   1400106b8:	rol    al,0xc0
   1400106bb:	add    ch,al
   1400106bd:	(bad)
   1400106c0:	enter  0xc8c8,0x0
   1400106c4:	int    0xcd
   1400106c6:	int    0x0
   1400106c8:	(bad)  
   1400106ca:	fild   WORD PTR [rax]
   1400106cc:	loop   0x1400106a8
   1400106ce:	rol    BYTE PTR [rax],cl
   1400106d0:	(bad)  
   1400106d2:	loopne 0x1400106d4
   1400106d4:	in     eax,0xe5
   1400106d6:	out    0x0,al
   1400106d8:	(bad)  
   1400106d9:	jmp    0x12ef007c9
   1400106de:	out    dx,eax
   1400106df:	add    cl,dh
   1400106e1:	icebp  
   1400106e2:	repnz add dl,dh
   1400106e5:	repnz hlt 
   1400106e7:	add    ch,dh
   1400106e9:	repz hlt 
   1400106eb:	add    bl,dh
   1400106ed:	hlt    
   1400106ee:	cmc    
   1400106ef:	add    ch,dh
   1400106f1:	cmc    
   1400106f2:	test   BYTE PTR [rax],0xf7
   1400106f5:	idiv   eax
   1400106f7:	add    bh,dh
   1400106f9:	clc    
   1400106fa:	stc    
   1400106fb:	add    cl,bh
   1400106fd:	cli    
   1400106fe:	cli    
   1400106ff:	add    bl,bh
   140010701:	sti    
   140010702:	cld    
   140010703:	add    bl,bh
   140010705:	cld    
   140010706:	cld    
   140010707:	add    dh,bh
   140010709:	(bad)  
   14001070a:	inc    BYTE PTR [rax]
	...
   140010a24:	(bad)  
   140010a25:	(bad)  
   140010a26:	inc    DWORD PTR [rax]
   140010a28:	add    BYTE PTR [rax],al
   140010a2a:	add    BYTE PTR [rsp+rax*1],al
   140010a2d:	add    al,0x4
   140010a2f:	add    al,0x4
   140010a31:	add    al,0x4
   140010a33:	add    al,0x4
   140010a35:	add    al,0x4
   140010a37:	add    BYTE PTR [rax],al
   140010a39:	add    BYTE PTR [rax],al
   140010a3b:	adc    al,0x2e
   140010a3d:	cs cs cs cs cs cs xor esi,DWORD PTR cs:[rsp+rdx*1]
   140010a47:	add    BYTE PTR [rax],al
   140010a49:	add    BYTE PTR [rax],al
   140010a4b:	(bad)  
   140010a4c:	cs cs sub al,0x17
   140010a50:	(bad)  
   140010a51:	(bad)  
   140010a52:	(bad)  
   140010a53:	sub    al,0x34
   140010a55:	xor    eax,0x16
   140010a5a:	add    BYTE PTR [rdi],dl
   140010a5c:	cs (bad) 
   140010a5e:	(bad)  
   140010a5f:	sub    DWORD PTR [rcx],edx
   140010a61:	or     ch,BYTE PTR [rcx]
   140010a63:	(bad)  
   140010a64:	(bad)  
   140010a65:	xor    eax,0x17
   140010a6a:	add    BYTE PTR [rdx],bl
   140010a6c:	add    ebp,DWORD PTR cs:[rsi]
   140010a6f:	add    DWORD PTR [rcx],ecx
   140010a71:	add    al,BYTE PTR [rcx]
   140010a73:	add    esi,DWORD PTR cs:[rip+0x1a]        # 0x140010a94
   140010a7a:	add    BYTE PTR [rip+0x2919262e],bl        # 0x1691a30ae
   140010a80:	sub    DWORD PTR [rcx],ebp
   140010a82:	sub    DWORD PTR [rcx],ebx
   140010a84:	add    esi,DWORD PTR [rip+0x1a]        # 0x140010aa4
   140010a8a:	add    BYTE PTR [rsi],ah
   140010a8c:	or     al,0x1f
   140010a8e:	es adc eax,0x3151515
   140010a94:	add    esi,DWORD PTR [rip+0x1b]        # 0x140010ab5
   140010a9a:	add    BYTE PTR [rsi],ah
   140010a9c:	or     al,0x8
   140010a9e:	(bad)  
   140010a9f:	xor    eax,0x26353535
   140010aa4:	xor    eax,0xf001b35
   140010aa9:	or     al,0xc
   140010aab:	or     al,0xc
   140010aad:	(bad)  
   140010aae:	or     BYTE PTR [rcx],ah
   140010ab0:	xor    eax,0x35263535
   140010ab5:	xor    eax,0x230c001d
   140010aba:	and    dl,BYTE PTR [rbx]
   140010abc:	adc    cl,BYTE PTR [rip+0x26280610]        # 0x1662910d2
   140010ac2:	es es xor eax,0xf001d35
   140010ac9:	(bad)  
   140010aca:	(bad)  
   140010acb:	(bad)  
   140010acc:	(bad)  
   140010acd:	(bad)  
   140010ace:	add    eax,0x35353520
   140010ad3:	xor    eax,0x1d2a2b
   140010ad8:	add    BYTE PTR [rax],al
   140010ada:	add    BYTE PTR [rip+0x35200507],bl        # 0x175210fe7
   140010ae0:	xor    eax,0x1d1d3535
   140010ae5:	sbb    eax,0x1d
   140010aea:	add    BYTE PTR [rip+0x35352006],bl        # 0x175362af6
   140010af0:	xor    eax,0x2e253535
   140010af5:	sbb    eax,0x0
   140010afa:	add    BYTE PTR [rip+0x35353535],ah        # 0x175364035
   140010b00:	xor    eax,0x1d263535
   140010b05:	add    BYTE PTR [rax],al
   140010b07:	add    BYTE PTR [rax],al
   140010b09:	add    BYTE PTR [rax],al
   140010b0b:	and    eax,0x25252525
   140010b10:	and    eax,0x1d2525
	...
   140010b25:	add    BYTE PTR [rax],al
   140010b27:	add    al,ah
   140010b29:	add    DWORD PTR [rax],eax
   140010b2b:	add    al,ah
   140010b2d:	add    DWORD PTR [rax],eax
   140010b2f:	add    al,ah
   140010b31:	add    DWORD PTR [rax],eax
   140010b33:	add    al,ah
   140010b35:	add    DWORD PTR [rax],eax
   140010b37:	add    al,ah
   140010b39:	add    DWORD PTR [rax],eax
   140010b3b:	add    al,ah
   140010b3d:	add    DWORD PTR [rax],eax
   140010b3f:	add    al,ah
   140010b41:	add    DWORD PTR [rax],eax
   140010b43:	add    al,ah
   140010b45:	add    DWORD PTR [rax],eax
   140010b47:	add    BYTE PTR [rax],al
   140010b49:	add    DWORD PTR [rax],eax
   140010b4b:	add    BYTE PTR [rax],al
   140010b4d:	add    DWORD PTR [rax],eax
   140010b4f:	add    BYTE PTR [rax],al
   140010b51:	add    DWORD PTR [rax],eax
   140010b53:	add    al,ah
   140010b55:	add    DWORD PTR [rax],eax
   140010b57:	add    al,ah
   140010b59:	add    eax,DWORD PTR [rax]
   140010b5b:	add    al,ah
   140010b5d:	(bad)  
   140010b5e:	add    BYTE PTR [rax],al
   140010b60:	loopne 0x140010b71
   140010b62:	add    BYTE PTR [rax],al
   140010b64:	(bad)  
   140010b65:	inc    DWORD PTR [rax]
   140010b67:	add    BYTE PTR [rax],ch
   140010b69:	add    BYTE PTR [rax],al
   140010b6b:	add    BYTE PTR [rax],ah
   140010b6d:	add    BYTE PTR [rax],al
   140010b6f:	add    BYTE PTR [rax+0x0],al
   140010b72:	add    BYTE PTR [rax],al
   140010b74:	add    DWORD PTR [rax],eax
   140010b76:	and    BYTE PTR [rax],al
   140010b78:	add    BYTE PTR [rax],al
   140010b7a:	add    BYTE PTR [rax],al
   140010b7c:	adc    BYTE PTR [rax],0x0
	...
   140010bab:	or     BYTE PTR [rax],al
   140010bad:	add    BYTE PTR [rax],al
   140010baf:	sbb    BYTE PTR [rax],al
   140010bb1:	add    BYTE PTR [rax],al
   140010bb3:	and    BYTE PTR [rax],al
   140010bb5:	add    BYTE PTR [rax],al
   140010bb7:	and    BYTE PTR [rax],al
   140010bb9:	add    BYTE PTR [rax],al
   140010bbb:	and    BYTE PTR [rax],al
   140010bbd:	add    BYTE PTR [rax],al
   140010bbf:	and    BYTE PTR [rax],al
   140010bc1:	add    BYTE PTR [rax],al
   140010bc3:	and    BYTE PTR [rax],al
   140010bc5:	add    BYTE PTR [rax],al
   140010bc7:	and    BYTE PTR [rax],al
   140010bc9:	add    BYTE PTR [rax],al
   140010bcb:	and    BYTE PTR [rax],al
   140010bcd:	add    BYTE PTR [rax],al
   140010bcf:	and    BYTE PTR [rax],al
   140010bd1:	add    BYTE PTR [rax],al
   140010bd3:	and    BYTE PTR [rax],al
   140010bd5:	add    BYTE PTR [rax],al
   140010bd7:	and    BYTE PTR [rax],al
   140010bd9:	add    BYTE PTR [rax],al
   140010bdb:	and    BYTE PTR [rax],al
   140010bdd:	add    BYTE PTR [rax],al
   140010bdf:	and    BYTE PTR [rax],al
   140010be1:	add    BYTE PTR [rax],al
   140010be3:	and    BYTE PTR [rax],al
   140010be5:	add    BYTE PTR [rax],al
   140010be7:	and    BYTE PTR [rax],al
   140010be9:	add    BYTE PTR [rax],al
   140010beb:	and    BYTE PTR [rax],al
   140010bed:	add    BYTE PTR [rax],al
   140010bef:	and    BYTE PTR [rax],al
   140010bf1:	add    BYTE PTR [rax],al
   140010bf3:	and    BYTE PTR [rax],al
   140010bf5:	add    BYTE PTR [rax],al
   140010bf7:	and    BYTE PTR [rax],al
   140010bf9:	add    BYTE PTR [rax],al
   140010bfb:	and    BYTE PTR [rax],al
   140010bfd:	add    BYTE PTR [rax],al
   140010bff:	and    BYTE PTR [rax],al
   140010c01:	add    BYTE PTR [rax],al
   140010c03:	and    BYTE PTR [rax],al
   140010c05:	add    BYTE PTR [rax],al
   140010c07:	and    BYTE PTR [rax],al
   140010c09:	add    BYTE PTR [rax],al
   140010c0b:	sbb    BYTE PTR [rax],al
   140010c0d:	add    BYTE PTR [rax],al
   140010c0f:	or     BYTE PTR [rax],al
	...
   140010c29:	add    BYTE PTR [rax],al
   140010c2b:	sbb    BYTE PTR [rax],al
   140010c2d:	add    BYTE PTR [rax],al
   140010c2f:	rex.W add BYTE PTR [rax],al
   140010c32:	add    BYTE PTR [rax+0x0],ah
   140010c35:	add    BYTE PTR [rax],al
   140010c37:	(bad)  
   140010c38:	add    BYTE PTR [rax],al
   140010c3a:	add    BYTE PTR [rax+0x0],ah
   140010c3d:	add    BYTE PTR [rax],al
   140010c3f:	(bad)  
   140010c40:	add    BYTE PTR [rax],al
   140010c42:	add    BYTE PTR [rax+0x0],ah
   140010c45:	add    BYTE PTR [rax],al
   140010c47:	(bad)  
   140010c48:	add    BYTE PTR [rax],al
   140010c4a:	add    BYTE PTR [rax+0x0],ah
   140010c4d:	add    BYTE PTR [rax],al
   140010c4f:	(bad)  
   140010c50:	add    BYTE PTR [rax],al
   140010c52:	add    BYTE PTR [rax+0x0],ah
   140010c55:	add    BYTE PTR [rax],al
   140010c57:	(bad)  
   140010c58:	add    BYTE PTR [rax],al
   140010c5a:	add    BYTE PTR [rax+0x0],ah
   140010c5d:	add    BYTE PTR [rax],al
   140010c5f:	(bad)  
   140010c60:	add    BYTE PTR [rax],al
   140010c62:	add    BYTE PTR [rax+0x0],ah
   140010c65:	add    BYTE PTR [rax],al
   140010c67:	(bad)  
   140010c68:	add    BYTE PTR [rax],al
   140010c6a:	add    BYTE PTR [rax+0x0],ah
   140010c6d:	add    BYTE PTR [rax],al
   140010c6f:	(bad)  
   140010c70:	add    BYTE PTR [rax],al
   140010c72:	add    BYTE PTR [rax+0x0],ah
   140010c75:	add    BYTE PTR [rax],al
   140010c77:	(bad)  
   140010c78:	add    BYTE PTR [rax],al
   140010c7a:	add    BYTE PTR [rax+0x0],ah
   140010c7d:	add    BYTE PTR [rax],al
   140010c7f:	(bad)  
   140010c80:	add    BYTE PTR [rax],al
   140010c82:	add    BYTE PTR [rax+0x0],ah
   140010c85:	add    BYTE PTR [rax],al
   140010c87:	(bad)  
   140010c88:	add    BYTE PTR [rax],al
   140010c8a:	add    BYTE PTR [rax+0x0],cl
   140010c8d:	add    BYTE PTR [rax],al
   140010c8f:	sbb    BYTE PTR [rax],al
	...
   140010ca5:	add    BYTE PTR [rax],al
   140010ca7:	add    dh,dl
   140010ca9:	(bad)  
   140010caa:	(bad)  
   140010cab:	(bad)  
   140010cac:	clc    
   140010cad:	stc    
   140010cae:	stc    
   140010caf:	(bad)  
   140010cb0:	clc    
   140010cb1:	stc    
   140010cb2:	stc    
   140010cb3:	(bad)  
   140010cb4:	clc    
   140010cb5:	stc    
   140010cb6:	stc    
   140010cb7:	(bad)  
   140010cb8:	clc    
   140010cb9:	stc    
   140010cba:	stc    
   140010cbb:	(bad)  
   140010cbc:	clc    
   140010cbd:	clc    
   140010cbe:	clc    
   140010cbf:	(bad)  
   140010cc0:	clc    
   140010cc1:	clc    
   140010cc2:	clc    
   140010cc3:	push   rdi
   140010cc5:	clc    
   140010cc6:	clc    
   140010cc7:	push   rdi
   140010cc9:	clc    
   140010cca:	clc    
   140010ccb:	push   rdi
   140010ccd:	clc    
   140010cce:	clc    
   140010ccf:	push   rdi
   140010cd1:	clc    
   140010cd2:	clc    
   140010cd3:	push   rdi
   140010cd5:	clc    
   140010cd6:	clc    
   140010cd7:	push   rdi
   140010cd9:	div    edi
   140010cdb:	push   rsi
   140010cdd:	div    edi
   140010cdf:	push   rsi
   140010ce1:	div    edi
   140010ce3:	push   rsi
   140010ce5:	div    edi
   140010ce7:	push   rsi
   140010ce9:	div    edi
   140010ceb:	push   rsi
   140010ced:	div    edi
   140010cef:	push   rsi
   140010cf1:	div    edi
   140010cf3:	push   rsi
   140010cf5:	div    edi
   140010cf7:	push   rbp
   140010cf9:	div    dh
   140010cfb:	push   rbp
   140010cfd:	div    dh
   140010cff:	push   rbp
   140010d01:	div    dh
   140010d03:	push   rbp
   140010d05:	div    dh
   140010d07:	inc    DWORD PTR [rax]
   140010d09:	add    BYTE PTR [rax],al
   140010d0b:	(bad)  
   140010d0c:	add    BYTE PTR [rax],al
   140010d0e:	add    BYTE PTR [rax],ah
	...
   140010d28:	(bad)  
   140010d29:	(bad)  
   140010d2a:	(bad)  
   140010d2b:	(bad)  
   140010d2c:	stc    
   140010d2d:	stc    
   140010d2e:	stc    
   140010d2f:	(bad)  
   140010d30:	stc    
   140010d31:	stc    
   140010d32:	stc    
   140010d33:	(bad)  
   140010d34:	clc    
   140010d35:	stc    
   140010d36:	stc    
   140010d37:	(bad)  
   140010d38:	clc    
   140010d39:	stc    
   140010d3a:	stc    
   140010d3b:	(bad)  
   140010d3c:	clc    
   140010d3d:	stc    
   140010d3e:	stc    
   140010d3f:	(bad)  
   140010d40:	clc    
   140010d41:	clc    
   140010d42:	clc    
   140010d43:	(bad)  
   140010d44:	clc    
   140010d45:	clc    
   140010d46:	clc    
   140010d47:	push   rdi
   140010d49:	clc    
   140010d4a:	clc    
   140010d4b:	push   rdi
   140010d4d:	clc    
   140010d4e:	clc    
   140010d4f:	push   rdi
   140010d51:	clc    
   140010d52:	clc    
   140010d53:	push   rdi
   140010d55:	clc    
   140010d56:	clc    
   140010d57:	push   rdi
   140010d59:	clc    
   140010d5a:	clc    
   140010d5b:	push   rdi
   140010d5d:	div    edi
   140010d5f:	push   rsi
   140010d61:	div    edi
   140010d63:	push   rsi
   140010d65:	div    edi
   140010d67:	push   rsi
   140010d69:	div    edi
   140010d6b:	push   rsi
   140010d6d:	div    edi
   140010d6f:	push   rsi
   140010d71:	div    edi
   140010d73:	push   rsi
   140010d75:	div    edi
   140010d77:	push   rsi
   140010d79:	div    edi
   140010d7b:	push   rsi
   140010d7d:	div    dh
   140010d7f:	push   rbp
   140010d81:	div    dh
   140010d83:	push   rbp
   140010d85:	div    dh
   140010d87:	inc    DWORD PTR [rax]
   140010d89:	add    BYTE PTR [rax],al
   140010d8b:	(bad)  
   140010d8c:	add    BYTE PTR [rax],al
   140010d8e:	add    BYTE PTR [rax],ah
	...
   140010da8:	(bad)  
   140010da9:	(bad)  
   140010daa:	(bad)  
   140010dab:	(bad)  
   140010dac:	stc    
   140010dad:	stc    
   140010dae:	stc    
   140010daf:	(bad)  
   140010db0:	stc    
   140010db1:	stc    
   140010db2:	stc    
   140010db3:	(bad)  
   140010db4:	stc    
   140010db5:	stc    
   140010db6:	stc    
   140010db7:	(bad)  
   140010db8:	clc    
   140010db9:	stc    
   140010dba:	stc    
   140010dbb:	(bad)  
   140010dbc:	clc    
   140010dbd:	stc    
   140010dbe:	stc    
   140010dbf:	(bad)  
   140010dc0:	clc    
   140010dc1:	stc    
   140010dc2:	stc    
   140010dc3:	(bad)  
   140010dc4:	clc    
   140010dc5:	stc    
   140010dc6:	stc    
   140010dc7:	(bad)  
   140010dc8:	clc    
   140010dc9:	clc    
   140010dca:	clc    
   140010dcb:	push   rdi
   140010dcd:	clc    
   140010dce:	clc    
   140010dcf:	push   rdi
   140010dd1:	clc    
   140010dd2:	clc    
   140010dd3:	push   rdi
   140010dd5:	clc    
   140010dd6:	clc    
   140010dd7:	push   rdi
   140010dd9:	clc    
   140010dda:	clc    
   140010ddb:	push   rdi
   140010ddd:	clc    
   140010dde:	clc    
   140010ddf:	push   rdi
   140010de1:	div    edi
   140010de3:	push   rsi
   140010de5:	div    edi
   140010de7:	push   rsi
   140010de9:	div    edi
   140010deb:	push   rsi
   140010ded:	div    edi
   140010def:	push   rsi
   140010df1:	div    edi
   140010df3:	push   rsi
   140010df5:	div    edi
   140010df7:	push   rsi
   140010df9:	div    edi
   140010dfb:	push   rsi
   140010dfd:	div    edi
   140010dff:	push   rsi
   140010e01:	div    dh
   140010e03:	push   rbp
   140010e05:	div    dh
   140010e07:	inc    DWORD PTR [rax]
   140010e09:	add    BYTE PTR [rax],al
   140010e0b:	(bad)  
   140010e0c:	add    BYTE PTR [rax],al
   140010e0e:	add    BYTE PTR [rax],ah
	...
   140010e28:	(bad)  
   140010e29:	(bad)  
   140010e2a:	(bad)  
   140010e2b:	(bad)  
   140010e2c:	stc    
   140010e2d:	cli    
   140010e2e:	cli    
   140010e2f:	(bad)  
   140010e30:	stc    
   140010e31:	cli    
   140010e32:	cli    
   140010e33:	(bad)  
   140010e34:	stc    
   140010e35:	stc    
   140010e36:	stc    
   140010e37:	(bad)  
   140010e38:	stc    
   140010e39:	stc    
   140010e3a:	stc    
   140010e3b:	(bad)  
   140010e3c:	clc    
   140010e3d:	stc    
   140010e3e:	stc    
   140010e3f:	(bad)  
   140010e40:	clc    
   140010e41:	stc    
   140010e42:	stc    
   140010e43:	(bad)  
   140010e44:	clc    
   140010e45:	stc    
   140010e46:	stc    
   140010e47:	(bad)  
   140010e48:	clc    
   140010e49:	stc    
   140010e4a:	stc    
   140010e4b:	(bad)  
   140010e4c:	clc    
   140010e4d:	clc    
   140010e4e:	clc    
   140010e4f:	(bad)  
   140010e50:	clc    
   140010e51:	clc    
   140010e52:	clc    
   140010e53:	push   rdi
   140010e55:	clc    
   140010e56:	clc    
   140010e57:	push   rdi
   140010e59:	clc    
   140010e5a:	clc    
   140010e5b:	push   rdi
   140010e5d:	clc    
   140010e5e:	clc    
   140010e5f:	push   rdi
   140010e61:	clc    
   140010e62:	clc    
   140010e63:	push   rdi
   140010e65:	clc    
   140010e66:	clc    
   140010e67:	push   rdi
   140010e69:	div    edi
   140010e6b:	push   rsi
   140010e6d:	div    edi
   140010e6f:	push   rsi
   140010e71:	div    edi
   140010e73:	push   rsi
   140010e75:	div    edi
   140010e77:	push   rsi
   140010e79:	div    edi
   140010e7b:	push   rsi
   140010e7d:	div    edi
   140010e7f:	push   rsi
   140010e81:	div    edi
   140010e83:	push   rsi
   140010e85:	div    edi
   140010e87:	inc    DWORD PTR [rax]
   140010e89:	add    BYTE PTR [rax],al
   140010e8b:	(bad)  
   140010e8c:	add    BYTE PTR [rax],al
   140010e8e:	add    BYTE PTR [rax],ah
	...
   140010ea8:	(bad)  
   140010ea9:	(bad)  
   140010eaa:	(bad)  
   140010eab:	(bad)  
   140010eac:	stc    
   140010ead:	cli    
   140010eae:	cli    
   140010eaf:	(bad)  
   140010eb0:	stc    
   140010eb1:	cli    
   140010eb2:	cli    
   140010eb3:	(bad)  
   140010eb4:	stc    
   140010eb5:	cli    
   140010eb6:	cli    
   140010eb7:	(bad)  
   140010eb8:	stc    
   140010eb9:	stc    
   140010eba:	stc    
   140010ebb:	(bad)  
   140010ebc:	stc    
   140010ebd:	stc    
   140010ebe:	stc    
   140010ebf:	(bad)  
   140010ec0:	clc    
   140010ec1:	stc    
   140010ec2:	stc    
   140010ec3:	(bad)  
   140010ec4:	clc    
   140010ec5:	stc    
   140010ec6:	stc    
   140010ec7:	(bad)  
   140010ec8:	clc    
   140010ec9:	stc    
   140010eca:	stc    
   140010ecb:	jmp    FWORD PTR [rbx-0x66005455]
   140010ed1:	cdq    
   140010ed2:	cdq    
   140010ed3:	call   FWORD PTR [rdx-0x65006566]
   140010ed9:	(bad)  
   140010eda:	(bad)  
   140010edb:	call   FWORD PTR [rax-0x67006768]
   140010ee1:	cwde   
   140010ee2:	cwde   
   140010ee3:	call   FWORD PTR [rdx-0x54006566]
   140010ee9:	stos   DWORD PTR es:[rdi],eax
   140010eea:	stos   DWORD PTR es:[rdi],eax
   140010eeb:	push   rdi
   140010eed:	div    edi
   140010eef:	push   rsi
   140010ef1:	div    edi
   140010ef3:	push   rsi
   140010ef5:	div    edi
   140010ef7:	push   rsi
   140010ef9:	div    edi
   140010efb:	push   rsi
   140010efd:	div    edi
   140010eff:	push   rsi
   140010f01:	div    edi
   140010f03:	push   rsi
   140010f05:	div    edi
   140010f07:	inc    DWORD PTR [rax]
   140010f09:	add    BYTE PTR [rax],al
   140010f0b:	(bad)  
   140010f0c:	add    BYTE PTR [rax],al
   140010f0e:	add    BYTE PTR [rax],ah
	...
   140010f28:	(bad)  
   140010f29:	(bad)  
   140010f2a:	(bad)  
   140010f2b:	(bad)  
   140010f2c:	cli    
   140010f2d:	cli    
   140010f2e:	cli    
   140010f2f:	(bad)  
   140010f30:	stc    
   140010f31:	cli    
   140010f32:	cli    
   140010f33:	(bad)  
   140010f34:	stc    
   140010f35:	cli    
   140010f36:	cli    
   140010f37:	(bad)  
   140010f38:	stc    
   140010f39:	cli    
   140010f3a:	cli    
   140010f3b:	(bad)  
   140010f3c:	stc    
   140010f3d:	stc    
   140010f3e:	stc    
   140010f3f:	(bad)  
   140010f40:	stc    
   140010f41:	stc    
   140010f42:	stc    
   140010f43:	(bad)  
   140010f44:	stc    
   140010f45:	stc    
   140010f46:	stc    
   140010f47:	(bad)  
   140010f48:	clc    
   140010f49:	stc    
   140010f4a:	stc    
   140010f4b:	jmp    FWORD PTR [rdx-0x5556]
   140010f51:	(bad)  
   140010f52:	(bad)  
   140010f53:	(bad)  
   140010f54:	(bad)  
   140010f55:	(bad)  
   140010f56:	(bad)  
   140010f57:	(bad)  
   140010f58:	(bad)  
   140010f59:	(bad)  
   140010f5a:	(bad)  
   140010f5b:	(bad)  
   140010f5c:	(bad)  
   140010f5d:	(bad)  
   140010f5e:	(bad)  
   140010f5f:	(bad)  
   140010f60:	(bad)  
   140010f61:	(bad)  
   140010f62:	(bad)  
   140010f63:	(bad)  
   140010f64:	(bad)  
   140010f65:	(bad)  
   140010f66:	(bad)  
   140010f67:	jmp    FWORD PTR [rbx-0x8005455]
   140010f6d:	clc    
   140010f6e:	clc    
   140010f6f:	push   rdi
   140010f71:	div    edi
   140010f73:	push   rsi
   140010f75:	div    edi
   140010f77:	push   rsi
   140010f79:	div    edi
   140010f7b:	push   rsi
   140010f7d:	div    edi
   140010f7f:	push   rsi
   140010f81:	div    edi
   140010f83:	push   rsi
   140010f85:	div    edi
   140010f87:	inc    DWORD PTR [rax]
   140010f89:	add    BYTE PTR [rax],al
   140010f8b:	(bad)  
   140010f8c:	add    BYTE PTR [rax],al
   140010f8e:	add    BYTE PTR [rax],ah
	...
   140010fa8:	(bad)  
   140010fa9:	(bad)  
   140010faa:	(bad)  
   140010fab:	(bad)  
   140010fac:	cli    
   140010fad:	cli    
   140010fae:	cli    
   140010faf:	(bad)  
   140010fb0:	cli    
   140010fb1:	cli    
   140010fb2:	cli    
   140010fb3:	(bad)  
   140010fb4:	cli    
   140010fb5:	cli    
   140010fb6:	cli    
   140010fb7:	(bad)  
   140010fb8:	stc    
   140010fb9:	cli    
   140010fba:	cli    
   140010fbb:	(bad)  
   140010fbc:	stc    
   140010fbd:	cli    
   140010fbe:	cli    
   140010fbf:	(bad)  
   140010fc0:	stc    
   140010fc1:	cli    
   140010fc2:	cli    
   140010fc3:	(bad)  
   140010fc4:	stc    
   140010fc5:	stc    
   140010fc6:	stc    
   140010fc7:	(bad)  
   140010fc8:	stc    
   140010fc9:	stc    
   140010fca:	stc    
   140010fcb:	jmp    FWORD PTR [rbx-0x5455]
   140010fd1:	(bad)  
   140010fd2:	(bad)  
   140010fd3:	(bad)  
   140010fd4:	sti    
   140010fd5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010fd6:	rex.WR jmp FWORD PTR [rax+0x38ff94be]
   140010fdd:	pop    rdi
   140010fde:	and    edi,edi
   140010fe0:	test   BYTE PTR [rcx+0x18],bl
   140010fe3:	(bad)  
   140010fe4:	(bad)  
   140010fe5:	(bad)  
   140010fe6:	(bad)  
   140010fe7:	jmp    FWORD PTR [rbx-0x8005455]
   140010fed:	clc    
   140010fee:	clc    
   140010fef:	push   rdi
   140010ff1:	clc    
   140010ff2:	clc    
   140010ff3:	push   rdi
   140010ff5:	div    edi
   140010ff7:	push   rdi
   140010ff9:	div    edi
   140010ffb:	push   rsi
   140010ffd:	div    edi
   140010fff:	push   rsi
   140011001:	div    edi
   140011003:	push   rsi
   140011005:	div    edi
   140011007:	inc    DWORD PTR [rax]
   140011009:	add    BYTE PTR [rax],al
   14001100b:	(bad)  
   14001100c:	add    BYTE PTR [rax],al
   14001100e:	add    BYTE PTR [rax],ah
	...
   140011028:	(bad)  
   140011029:	(bad)  
   14001102a:	(bad)  
   14001102b:	(bad)  
   14001102c:	cli    
   14001102d:	sti    
   14001102e:	sti    
   14001102f:	(bad)  
   140011030:	cli    
   140011031:	cli    
   140011032:	cli    
   140011033:	(bad)  
   140011034:	cli    
   140011035:	cli    
   140011036:	cli    
   140011037:	(bad)  
   140011038:	cli    
   140011039:	cli    
   14001103a:	cli    
   14001103b:	call   FWORD PTR [rax-0x67006768]
   140011041:	cwde   
   140011042:	cwde   
   140011043:	call   FWORD PTR [rax+0x34ff9898]
   140011049:	and    esp,DWORD PTR [rbx]
   14001104b:	jmp    FWORD PTR [rdx-0x5556]
   140011051:	(bad)  
   140011052:	(bad)  
   140011053:	(bad)  
   140011054:	sti    
   140011055:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011056:	rex.WR (bad) 
   140011058:	in     eax,dx
   140011059:	out    dx,al
   14001105a:	fcos   
   14001105c:	jo     0x140010fe6
   14001105e:	rex.WRXB dec QWORD PTR [r13-0xd495]
   140011065:	(bad)  
   140011066:	(bad)  
   140011067:	jmp    FWORD PTR [rdx+0x34ffaaaa]
   14001106d:	and    esp,DWORD PTR [rbx]
   14001106f:	call   FWORD PTR [rax-0x67006768]
   140011075:	cwde   
   140011076:	cwde   
   140011077:	call   FWORD PTR [rax-0x8006768]
   14001107d:	div    edi
   14001107f:	push   rsi
   140011081:	div    edi
   140011083:	push   rsi
   140011085:	div    edi
   140011087:	inc    DWORD PTR [rax]
   140011089:	add    BYTE PTR [rax],al
   14001108b:	(bad)  
   14001108c:	add    BYTE PTR [rax],al
   14001108e:	add    BYTE PTR [rax],ah
	...
   1400110a8:	(bad)  
   1400110a9:	(bad)  
   1400110aa:	(bad)  
   1400110ab:	(bad)  
   1400110ac:	cli    
   1400110ad:	sti    
   1400110ae:	sti    
   1400110af:	(bad)  
   1400110b0:	cli    
   1400110b1:	sti    
   1400110b2:	sti    
   1400110b3:	(bad)  
   1400110b4:	cli    
   1400110b5:	cli    
   1400110b6:	cli    
   1400110b7:	(bad)  
   1400110b8:	cli    
   1400110b9:	cli    
   1400110ba:	cli    
   1400110bb:	push   QWORD PTR [rdi+0x77]
   1400110be:	ja     0x1400110bf
   1400110c0:	cmc    
   1400110c1:	repz hlt 
   1400110c3:	push   rbp
   1400110c5:	repz hlt 
   1400110c7:	inc    DWORD PTR [rbp+0x40]
   1400110ca:	(bad)  
   1400110cb:	jmp    FWORD PTR [rdx-0x75005556]
   1400110d1:	mov    ecx,DWORD PTR [rdi+rdi*8-0xb09276]
   1400110d8:	mov    BYTE PTR [rcx+0x5a52ff74],al
   1400110de:	rex.X jmp QWORD PTR [rbx+0x57]
   1400110e2:	rex.X dec DWORD PTR [rdx-0x53007475]
   1400110e9:	lods   al,BYTE PTR ds:[rsi]
   1400110ea:	lods   al,BYTE PTR ds:[rsi]
   1400110eb:	inc    DWORD PTR [rbp+0x40]
   1400110ee:	(bad)  
   1400110ef:	push   rbp
   1400110f1:	repz hlt 
   1400110f3:	push   rbp
   1400110f5:	repz hlt 
   1400110f7:	push   QWORD PTR [rdi+0x77]
   1400110fa:	ja     0x1400110fb
   1400110fc:	idiv   eax
   1400110fe:	clc    
   1400110ff:	push   rdi
   140011101:	div    edi
   140011103:	push   rsi
   140011105:	div    edi
   140011107:	inc    DWORD PTR [rax]
   140011109:	add    BYTE PTR [rax],al
   14001110b:	(bad)  
   14001110c:	add    BYTE PTR [rax],al
   14001110e:	add    BYTE PTR [rax],ah
	...
   140011128:	(bad)  
   140011129:	(bad)  
   14001112a:	(bad)  
   14001112b:	(bad)  
   14001112c:	sti    
   14001112d:	sti    
   14001112e:	sti    
   14001112f:	(bad)  
   140011130:	cli    
   140011131:	sti    
   140011132:	sti    
   140011133:	(bad)  
   140011134:	cli    
   140011135:	sti    
   140011136:	sti    
   140011137:	(bad)  
   140011138:	cli    
   140011139:	cli    
   14001113a:	cli    
   14001113b:	push   QWORD PTR [rdi+0x77]
   14001113e:	ja     0x14001113f
   140011140:	cwde   
   140011141:	cwde   
   140011142:	cwde   
   140011143:	call   FWORD PTR [rax-0x1d006768]
   140011149:	fcmovbe st,st(3)
   14001114b:	jmp    rdx
   14001114d:	fcmovbe st,st(3)
   14001114f:	jmp    rdx
   140011151:	fcmovbe st,st(3)
   140011153:	jmp    rdx
   140011155:	fcmovbe st,st(3)
   140011157:	jmp    rdx
   140011159:	fcmovbe st,st(3)
   14001115b:	jmp    rdx
   14001115d:	fcmovbe st,st(3)
   14001115f:	jmp    rdx
   140011161:	fcmovbe st,st(3)
   140011163:	jmp    rdx
   140011165:	fcmovbe st,st(3)
   140011167:	jmp    rdx
   140011169:	fcmovbe st,st(3)
   14001116b:	jmp    rdx
   14001116d:	fcmovbe st,st(3)
   14001116f:	call   FWORD PTR [rax-0x67006768]
   140011175:	cwde   
   140011176:	cwde   
   140011177:	push   QWORD PTR [rdi+0x77]
   14001117a:	ja     0x14001117b
   14001117c:	idiv   eax
   14001117e:	clc    
   14001117f:	push   rdi
   140011181:	clc    
   140011182:	clc    
   140011183:	push   rdi
   140011185:	div    edi
   140011187:	inc    DWORD PTR [rax]
   140011189:	add    BYTE PTR [rax],al
   14001118b:	(bad)  
   14001118c:	add    BYTE PTR [rax],al
   14001118e:	add    BYTE PTR [rax],ah
	...
   1400111a8:	(bad)  
   1400111a9:	(bad)  
   1400111aa:	(bad)  
   1400111ab:	(bad)  
   1400111ac:	sti    
   1400111ad:	sti    
   1400111ae:	sti    
   1400111af:	(bad)  
   1400111b0:	sti    
   1400111b1:	sti    
   1400111b2:	sti    
   1400111b3:	(bad)  
   1400111b4:	cli    
   1400111b5:	sti    
   1400111b6:	sti    
   1400111b7:	(bad)  
   1400111b8:	cli    
   1400111b9:	sti    
   1400111ba:	sti    
   1400111bb:	push   QWORD PTR [rdi+0x77]
   1400111be:	ja     0x1400111bf
   1400111c0:	mov    eax,0xb8ffb2b5
   1400111c5:	mov    ch,0xb2
   1400111c7:	call   QWORD PTR [rbx+0x53]
   1400111ca:	push   rbx
   1400111cb:	call   QWORD PTR [rbx+0x53]
   1400111ce:	push   rbx
   1400111cf:	call   QWORD PTR [rbx+0x53]
   1400111d2:	push   rbx
   1400111d3:	call   QWORD PTR [rbx+0x53]
   1400111d6:	push   rbx
   1400111d7:	call   QWORD PTR [rbx+0x53]
   1400111da:	push   rbx
   1400111db:	call   QWORD PTR [rbx+0x53]
   1400111de:	push   rbx
   1400111df:	call   QWORD PTR [rbx+0x53]
   1400111e2:	push   rbx
   1400111e3:	call   QWORD PTR [rbx+0x53]
   1400111e6:	push   rbx
   1400111e7:	call   QWORD PTR [rbx+0x53]
   1400111ea:	push   rbx
   1400111eb:	call   QWORD PTR [rbx+0x53]
   1400111ee:	push   rbx
   1400111ef:	(bad)  
   1400111f0:	mov    eax,0x97ffb2b5
   1400111f5:	push   QWORD PTR [rdi+rdi*8-0x888889]
   1400111fc:	idiv   eax
   1400111fe:	clc    
   1400111ff:	push   rdi
   140011201:	clc    
   140011202:	clc    
   140011203:	push   rdi
   140011205:	clc    
   140011206:	clc    
   140011207:	inc    DWORD PTR [rax]
   140011209:	add    BYTE PTR [rax],al
   14001120b:	(bad)  
   14001120c:	add    BYTE PTR [rax],al
   14001120e:	add    BYTE PTR [rax],ah
	...
   140011228:	(bad)  
   140011229:	(bad)  
   14001122a:	(bad)  
   14001122b:	(bad)  
   14001122c:	sti    
   14001122d:	sti    
   14001122e:	sti    
   14001122f:	(bad)  
   140011230:	sti    
   140011231:	sti    
   140011232:	sti    
   140011233:	(bad)  
   140011234:	sti    
   140011235:	sti    
   140011236:	sti    
   140011237:	(bad)  
   140011238:	sti    
   140011239:	sti    
   14001123a:	sti    
   14001123b:	push   QWORD PTR [rdi+0x77]
   14001123e:	ja     0x14001123f
   140011240:	ret    0xb9bd
   140011243:	inc    edx
   140011245:	mov    ebp,0x5353ffb9
   14001124a:	push   rbx
   14001124b:	call   QWORD PTR [rbx+0x53]
   14001124e:	push   rbx
   14001124f:	call   QWORD PTR [rbx+0x53]
   140011252:	push   rbx
   140011253:	call   QWORD PTR [rbx+0x53]
   140011256:	push   rbx
   140011257:	call   QWORD PTR [rbx+0x53]
   14001125a:	push   rbx
   14001125b:	call   QWORD PTR [rbx+0x53]
   14001125e:	push   rbx
   14001125f:	call   QWORD PTR [rbx+0x53]
   140011262:	push   rbx
   140011263:	call   QWORD PTR [rbx+0x53]
   140011266:	push   rbx
   140011267:	call   QWORD PTR [rbx+0x53]
   14001126a:	push   rbx
   14001126b:	call   QWORD PTR [rbx+0x53]
   14001126e:	push   rbx
   14001126f:	inc    edx
   140011271:	mov    ebp,0xbdc2ffb9
   140011276:	mov    ecx,0x777777ff
   14001127b:	push   rdi
   14001127d:	clc    
   14001127e:	clc    
   14001127f:	push   rdi
   140011281:	clc    
   140011282:	clc    
   140011283:	push   rdi
   140011285:	clc    
   140011286:	clc    
   140011287:	inc    DWORD PTR [rax]
   140011289:	add    BYTE PTR [rax],al
   14001128b:	(bad)  
   14001128c:	add    BYTE PTR [rax],al
   14001128e:	add    BYTE PTR [rax],ah
	...
   1400112a8:	(bad)  
   1400112a9:	(bad)  
   1400112aa:	(bad)  
   1400112ab:	(bad)  
   1400112ac:	sti    
   1400112ad:	cld    
   1400112ae:	cld    
   1400112af:	(bad)  
   1400112b0:	sti    
   1400112b1:	sti    
   1400112b2:	sti    
   1400112b3:	(bad)  
   1400112b4:	sti    
   1400112b5:	sti    
   1400112b6:	sti    
   1400112b7:	(bad)  
   1400112b8:	sti    
   1400112b9:	sti    
   1400112ba:	sti    
   1400112bb:	push   QWORD PTR [rdi+0x77]
   1400112be:	ja     0x1400112bf
   1400112c0:	int3   
   1400112c1:	mov    al,0xff
   1400112c4:	int3   
   1400112c5:	mov    al,0xff
   1400112c8:	addr32 addr32 jmp QWORD PTR [edi+0x67]
   1400112ce:	jmp    QWORD PTR [edi+0x67]
   1400112d2:	jmp    QWORD PTR [edi+0x67]
   1400112d6:	jmp    QWORD PTR [edi+0x67]
   1400112da:	jmp    QWORD PTR [edi+0x67]
   1400112de:	jmp    QWORD PTR [edi+0x67]
   1400112e2:	jmp    QWORD PTR [edi+0x67]
   1400112e6:	jmp    QWORD PTR [edi+0x67]
   1400112ea:	jmp    QWORD PTR [edi+0x67]
   1400112ee:	addr32 dec esp
   1400112f1:	mov    al,0xff
   1400112f4:	int3   
   1400112f5:	mov    al,0xff
   1400112f8:	ja     0x140011371
   1400112fa:	ja     0x1400112fb
   1400112fc:	clc    
   1400112fd:	clc    
   1400112fe:	clc    
   1400112ff:	push   rdi
   140011301:	clc    
   140011302:	clc    
   140011303:	push   rdi
   140011305:	clc    
   140011306:	clc    
   140011307:	inc    DWORD PTR [rax]
   140011309:	add    BYTE PTR [rax],al
   14001130b:	(bad)  
   14001130c:	add    BYTE PTR [rax],al
   14001130e:	add    BYTE PTR [rax],ah
	...
   140011328:	(bad)  
   140011329:	(bad)  
   14001132a:	(bad)  
   14001132b:	(bad)  
   14001132c:	sti    
   14001132d:	cld    
   14001132e:	cld    
   14001132f:	(bad)  
   140011330:	sti    
   140011331:	cld    
   140011332:	cld    
   140011333:	(bad)  
   140011334:	sti    
   140011335:	sti    
   140011336:	sti    
   140011337:	(bad)  
   140011338:	sti    
   140011339:	sti    
   14001133a:	sti    
   14001133b:	dec    DWORD PTR [rbx+0x77ff8b8b]
   140011341:	ja     0x1400113ba
   140011343:	call   rbx
   140011345:	retf   
   140011346:	(bad)  
   140011347:	(bad)  
   140011348:	jp     0x1400113c4
   14001134a:	jp     0x14001134b
   14001134c:	jp     0x1400113c8
   14001134e:	jp     0x14001134f
   140011350:	jp     0x1400113cc
   140011352:	jp     0x140011353
   140011354:	jp     0x1400113d0
   140011356:	jp     0x140011357
   140011358:	jp     0x1400113d4
   14001135a:	jp     0x14001135b
   14001135c:	jp     0x1400113d8
   14001135e:	jp     0x14001135f
   140011360:	jp     0x1400113dc
   140011362:	jp     0x140011363
   140011364:	jp     0x1400113e0
   140011366:	jp     0x140011367
   140011368:	jp     0x1400113e4
   14001136a:	jp     0x14001136b
   14001136c:	jp     0x1400113e8
   14001136e:	jp     0x14001136f
   140011370:	ror    ebx,cl
   140011372:	(bad)  
   140011373:	push   QWORD PTR [rdi+0x77]
   140011376:	ja     0x140011377
   140011378:	mov    BYTE PTR [rax-0x7070078],cl
   14001137e:	clc    
   14001137f:	(bad)  
   140011380:	clc    
   140011381:	clc    
   140011382:	clc    
   140011383:	push   rdi
   140011385:	clc    
   140011386:	clc    
   140011387:	inc    DWORD PTR [rax]
   140011389:	add    BYTE PTR [rax],al
   14001138b:	(bad)  
   14001138c:	add    BYTE PTR [rax],al
   14001138e:	add    BYTE PTR [rax],ah
	...
   1400113a8:	(bad)  
   1400113a9:	(bad)  
   1400113aa:	(bad)  
   1400113ab:	(bad)  
   1400113ac:	cld    
   1400113ad:	cld    
   1400113ae:	cld    
   1400113af:	(bad)  
   1400113b0:	cld    
   1400113b1:	cld    
   1400113b2:	cld    
   1400113b3:	(bad)  
   1400113b4:	sti    
   1400113b5:	cld    
   1400113b6:	cld    
   1400113b7:	(bad)  
   1400113b8:	sti    
   1400113b9:	cld    
   1400113ba:	cld    
   1400113bb:	(bad)  
   1400113bc:	sti    
   1400113bd:	sti    
   1400113be:	sti    
   1400113bf:	call   FWORD PTR [rsi+0x77ff9e9e]
   1400113c5:	ja     0x14001143e
   1400113c7:	dec    DWORD PTR [rax-0x77007778]
   1400113cd:	mov    BYTE PTR [rax-0x77777701],cl
   1400113d3:	dec    DWORD PTR [rax-0x77007778]
   1400113d9:	mov    BYTE PTR [rax-0x77777701],cl
   1400113df:	dec    DWORD PTR [rax-0x77007778]
   1400113e5:	mov    BYTE PTR [rax-0x77777701],cl
   1400113eb:	dec    DWORD PTR [rax+0x77ff8888]
   1400113f1:	ja     0x14001146a
   1400113f3:	call   FWORD PTR [rcx-0x7006566]
   1400113f9:	stc    
   1400113fa:	stc    
   1400113fb:	(bad)  
   1400113fc:	clc    
   1400113fd:	stc    
   1400113fe:	stc    
   1400113ff:	(bad)  
   140011400:	clc    
   140011401:	stc    
   140011402:	stc    
   140011403:	(bad)  
   140011404:	clc    
   140011405:	clc    
   140011406:	clc    
   140011407:	inc    DWORD PTR [rax]
   140011409:	add    BYTE PTR [rax],al
   14001140b:	(bad)  
   14001140c:	add    BYTE PTR [rax],al
   14001140e:	add    BYTE PTR [rax],ah
	...
   140011428:	(bad)  
   140011429:	(bad)  
   14001142a:	(bad)  
   14001142b:	(bad)  
   14001142c:	cld    
   14001142d:	cld    
   14001142e:	cld    
   14001142f:	(bad)  
   140011430:	cld    
   140011431:	cld    
   140011432:	cld    
   140011433:	dec    edx
   140011435:	movabs eax,ds:0xfcfbffb4d0e5ff6d
   14001143e:	cld    
   14001143f:	(bad)  
   140011440:	sti    
   140011441:	sti    
   140011442:	sti    
   140011443:	(bad)  
   140011444:	sti    
   140011445:	sti    
   140011446:	sti    
   140011447:	(bad)  
   140011448:	fstp   st(5)
   14001144a:	(bad)  
   14001144c:	lods   al,BYTE PTR ds:[rsi]
   14001144d:	lods   al,BYTE PTR ds:[rsi]
   14001144e:	lods   al,BYTE PTR ds:[rsi]
   14001144f:	(bad)  
   140011450:	(bad)  
   140011451:	(bad)  
   140011452:	(bad)  
   140011453:	(bad)  
   140011454:	(bad)  
   140011455:	(bad)  
   140011456:	(bad)  
   140011457:	(bad)  
   140011458:	(bad)  
   140011459:	(bad)  
   14001145a:	(bad)  
   14001145b:	(bad)  
   14001145c:	(bad)  
   14001145d:	(bad)  
   14001145e:	(bad)  
   14001145f:	(bad)  
   140011460:	(bad)  
   140011461:	(bad)  
   140011462:	(bad)  
   140011463:	(bad)  
   140011464:	(bad)  
   140011465:	(bad)  
   140011466:	(bad)  
   140011467:	jmp    FWORD PTR [rdx-0x23005556]
   14001146d:	(bad)  
   14001146f:	(bad)  
   140011470:	stc    
   140011471:	stc    
   140011472:	stc    
   140011473:	(bad)  
   140011474:	stc    
   140011475:	stc    
   140011476:	stc    
   140011477:	(bad)  
   140011478:	clc    
   140011479:	stc    
   14001147a:	stc    
   14001147b:	(bad)  
   14001147c:	clc    
   14001147d:	stc    
   14001147e:	stc    
   14001147f:	(bad)  
   140011480:	clc    
   140011481:	stc    
   140011482:	stc    
   140011483:	(bad)  
   140011484:	clc    
   140011485:	stc    
   140011486:	stc    
   140011487:	inc    DWORD PTR [rax]
   140011489:	add    BYTE PTR [rax],al
   14001148b:	(bad)  
   14001148c:	add    BYTE PTR [rax],al
   14001148e:	add    BYTE PTR [rax],ah
	...
   1400114a8:	(bad)  
   1400114a9:	(bad)  
   1400114aa:	(bad)  
   1400114ab:	(bad)  
   1400114ac:	cld    
   1400114ad:	cld    
   1400114ae:	cld    
   1400114af:	(bad)  
   1400114b0:	cld    
   1400114b1:	cld    
   1400114b2:	cld    
   1400114b3:	(bad)  
   1400114b4:	mov    eax,0xb8ff2f7e
   1400114b9:	jle    0x1400114ea
   1400114bb:	jmp    rbp
   1400114bd:	shl    BYTE PTR [rdi+rdi*8-0x30305],1
   1400114c4:	sti    
   1400114c5:	sti    
   1400114c6:	sti    
   1400114c7:	(bad)  
   1400114c8:	fstp   st(5)
   1400114ca:	(bad)  
   1400114cc:	stos   BYTE PTR es:[rdi],al
   1400114cd:	stos   BYTE PTR es:[rdi],al
   1400114ce:	stos   BYTE PTR es:[rdi],al
   1400114cf:	(bad)  
   1400114d0:	(bad)  
   1400114d1:	(bad)  
   1400114d2:	(bad)  
   1400114d3:	(bad)  
   1400114d4:	(bad)  
   1400114d5:	(bad)  
   1400114d6:	(bad)  
   1400114d7:	(bad)  
   1400114d8:	(bad)  
   1400114d9:	(bad)  
   1400114da:	(bad)  
   1400114db:	(bad)  
   1400114dc:	(bad)  
   1400114dd:	(bad)  
   1400114de:	(bad)  
   1400114df:	(bad)  
   1400114e0:	(bad)  
   1400114e1:	(bad)  
   1400114e2:	(bad)  
   1400114e3:	(bad)  
   1400114e4:	(bad)  
   1400114e5:	(bad)  
   1400114e6:	(bad)  
   1400114e7:	jmp    FWORD PTR [rdx-0x23005556]
   1400114ed:	(bad)  
   1400114ef:	(bad)  
   1400114f0:	stc    
   1400114f1:	cli    
   1400114f2:	cli    
   1400114f3:	(bad)  
   1400114f4:	stc    
   1400114f5:	stc    
   1400114f6:	stc    
   1400114f7:	(bad)  
   1400114f8:	stc    
   1400114f9:	stc    
   1400114fa:	stc    
   1400114fb:	(bad)  
   1400114fc:	clc    
   1400114fd:	stc    
   1400114fe:	stc    
   1400114ff:	(bad)  
   140011500:	clc    
   140011501:	stc    
   140011502:	stc    
   140011503:	(bad)  
   140011504:	clc    
   140011505:	stc    
   140011506:	stc    
   140011507:	inc    DWORD PTR [rax]
   140011509:	add    BYTE PTR [rax],al
   14001150b:	(bad)  
   14001150c:	add    BYTE PTR [rax],al
   14001150e:	add    BYTE PTR [rax],ah
	...
   140011528:	(bad)  
   140011529:	(bad)  
   14001152a:	(bad)  
   14001152b:	(bad)  
   14001152c:	cld    
   14001152d:	std    
   14001152e:	std    
   14001152f:	(bad)  
   140011530:	cld    
   140011531:	cld    
   140011532:	cld    
   140011533:	(bad)  
   140011534:	mov    eax,0xe8ff2f7e
   140011539:	ret    
   14001153a:	mov    ?,edi
   14001153c:	mov    eax,0xe6ff2f7e
   140011541:	shl    BYTE PTR [rdi+rdi*8-0x30305],1
   140011548:	fstp   st(5)
   14001154a:	(bad)  
   14001154c:	stos   DWORD PTR es:[rdi],eax
   14001154d:	stos   DWORD PTR es:[rdi],eax
   14001154e:	stos   DWORD PTR es:[rdi],eax
   14001154f:	(bad)  
   140011550:	clc    
   140011551:	div    esi
   140011553:	(bad)  
   140011554:	clc    
   140011555:	div    esi
   140011557:	(bad)  
   140011558:	clc    
   140011559:	div    esi
   14001155b:	(bad)  
   14001155c:	clc    
   14001155d:	div    esi
   14001155f:	(bad)  
   140011560:	clc    
   140011561:	div    esi
   140011563:	(bad)  
   140011564:	clc    
   140011565:	div    esi
   140011567:	jmp    FWORD PTR [rbx-0x23005455]
   14001156d:	(bad)  
   14001156f:	(bad)  
   140011570:	stc    
   140011571:	cli    
   140011572:	cli    
   140011573:	(bad)  
   140011574:	stc    
   140011575:	cli    
   140011576:	cli    
   140011577:	(bad)  
   140011578:	stc    
   140011579:	stc    
   14001157a:	stc    
   14001157b:	(bad)  
   14001157c:	stc    
   14001157d:	stc    
   14001157e:	stc    
   14001157f:	(bad)  
   140011580:	stc    
   140011581:	stc    
   140011582:	stc    
   140011583:	(bad)  
   140011584:	clc    
   140011585:	stc    
   140011586:	stc    
   140011587:	inc    DWORD PTR [rax]
   140011589:	add    BYTE PTR [rax],al
   14001158b:	(bad)  
   14001158c:	add    BYTE PTR [rax],al
   14001158e:	add    BYTE PTR [rax],ah
	...
   1400115a8:	(bad)  
   1400115a9:	(bad)  
   1400115aa:	(bad)  
   1400115ab:	(bad)  
   1400115ac:	std    
   1400115ad:	std    
   1400115ae:	std    
   1400115af:	(bad)  
   1400115b0:	cld    
   1400115b1:	std    
   1400115b2:	std    
   1400115b3:	(bad)  
   1400115b4:	mov    eax,0xdeff2f7e
   1400115b9:	mov    al,0x6b
   1400115bb:	jmp    rbp
   1400115bd:	ror    BYTE PTR [rdi+rdi*8-0xd08148],0xe5
   1400115c5:	iret   
   1400115c6:	mov    cl,0xff
   1400115c8:	fstp   st(6)
   1400115ca:	fdivp  st(7),st
   1400115cc:	mov    esp,0xf8ffbcbc
   1400115d1:	div    esi
   1400115d3:	(bad)  
   1400115d4:	clc    
   1400115d5:	div    esi
   1400115d7:	(bad)  
   1400115d8:	clc    
   1400115d9:	div    esi
   1400115db:	(bad)  
   1400115dc:	clc    
   1400115dd:	div    esi
   1400115df:	(bad)  
   1400115e0:	clc    
   1400115e1:	div    esi
   1400115e3:	(bad)  
   1400115e4:	clc    
   1400115e5:	div    esi
   1400115e7:	jmp    FWORD PTR [rdx-0x23005556]
   1400115ed:	(bad)  
   1400115ef:	(bad)  
   1400115f0:	cli    
   1400115f1:	cli    
   1400115f2:	cli    
   1400115f3:	(bad)  
   1400115f4:	stc    
   1400115f5:	cli    
   1400115f6:	cli    
   1400115f7:	(bad)  
   1400115f8:	stc    
   1400115f9:	cli    
   1400115fa:	cli    
   1400115fb:	(bad)  
   1400115fc:	stc    
   1400115fd:	cli    
   1400115fe:	cli    
   1400115ff:	(bad)  
   140011600:	stc    
   140011601:	stc    
   140011602:	stc    
   140011603:	(bad)  
   140011604:	stc    
   140011605:	stc    
   140011606:	stc    
   140011607:	inc    DWORD PTR [rax]
   140011609:	add    BYTE PTR [rax],al
   14001160b:	(bad)  
   14001160c:	add    BYTE PTR [rax],al
   14001160e:	add    BYTE PTR [rax],ah
   140011610:	rol    BYTE PTR [rdi+0x7eb87739],0x2f
   140011617:	(bad)  
   140011618:	mov    eax,0xb8ff2f7e
   14001161d:	jle    0x14001164e
   14001161f:	(bad)  
   140011620:	mov    eax,0xb8ff2f7e
   140011625:	jle    0x140011656
   140011627:	(bad)  
   140011628:	mov    eax,0xb8ff2f7e
   14001162d:	jle    0x14001165e
   14001162f:	(bad)  
   140011630:	mov    eax,0xb8ff2f7e
   140011635:	jle    0x140011666
   140011637:	jmp    rsp
   140011639:	mov    eax,0x83cbff6f
   14001163e:	adc    edi,edi
   140011640:	jrcxz  0x140011601
   140011642:	mov    edi,edi
   140011644:	mov    dl,0x76
   140011646:	es (bad) 
   140011648:	fadd   st(0),st
   14001164a:	(bad)  
   14001164b:	call   rbp
   14001164d:	(bad)  
   14001164e:	(bad)  
   14001164f:	jmp    FWORD PTR [rsi-0x67005152]
   140011655:	cwde   
   140011656:	cwde   
   140011657:	call   FWORD PTR [rax-0x65006768]
   14001165d:	(bad)  
   14001165e:	(bad)  
   14001165f:	call   FWORD PTR [rdx-0x66006566]
   140011665:	cdq    
   140011666:	cdq    
   140011667:	jmp    FWORD PTR [rbx-0x23005455]
   14001166d:	(bad)  
   14001166f:	(bad)  
   140011670:	cli    
   140011671:	cli    
   140011672:	cli    
   140011673:	(bad)  
   140011674:	cli    
   140011675:	cli    
   140011676:	cli    
   140011677:	(bad)  
   140011678:	stc    
   140011679:	cli    
   14001167a:	cli    
   14001167b:	(bad)  
   14001167c:	stc    
   14001167d:	cli    
   14001167e:	cli    
   14001167f:	(bad)  
   140011680:	stc    
   140011681:	cli    
   140011682:	cli    
   140011683:	(bad)  
   140011684:	stc    
   140011685:	stc    
   140011686:	stc    
   140011687:	inc    DWORD PTR [rax]
   140011689:	add    BYTE PTR [rax],al
   14001168b:	(bad)  
   14001168c:	add    BYTE PTR [rax],al
   14001168e:	add    BYTE PTR [rax],ah
   140011690:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011691:	data16 (bad) 
   140011693:	jmp    rdx
   140011695:	mov    dh,0x66
   140011697:	(bad)  
   140011698:	in     eax,dx
   140011699:	retf   0xff87
   14001169c:	icebp  
   14001169d:	int    0x83
   14001169f:	push   rsp
   1400116a1:	int    0x7e
   1400116a3:	push   rsi
   1400116a5:	(bad)  
   1400116a6:	jp     0x1400116a7
   1400116a8:	cmc    
   1400116a9:	int    0x7a
   1400116ab:	push   rsp
   1400116ad:	retf   
   1400116ae:	jns    0x1400116af
   1400116b0:	icebp  
   1400116b1:	(bad)  
   1400116b2:	js     0x1400116b3
   1400116b4:	in     eax,dx
   1400116b5:	(bad)  
   1400116b6:	jne    0x1400116b7
   1400116b8:	loopne 0x14001165b
   1400116ba:	xor    al,0xff
   1400116bc:	(bad)  
   1400116bd:	lea    edx,[rdi]
   1400116bf:	dec    ebp
   1400116c1:	test   BYTE PTR [rdx],dl
   1400116c3:	jmp    rbx
   1400116c5:	mov    edi,0x76b2ff8b
   1400116ca:	es jmp rsi
   1400116cd:	shl    BYTE PTR [rdi+rdi*8-0x30305],1
   1400116d4:	sti    
   1400116d5:	cld    
   1400116d6:	cld    
   1400116d7:	(bad)  
   1400116d8:	sti    
   1400116d9:	sti    
   1400116da:	sti    
   1400116db:	(bad)  
   1400116dc:	sti    
   1400116dd:	sti    
   1400116de:	sti    
   1400116df:	(bad)  
   1400116e0:	sti    
   1400116e1:	sti    
   1400116e2:	sti    
   1400116e3:	(bad)  
   1400116e4:	sti    
   1400116e5:	sti    
   1400116e6:	sti    
   1400116e7:	(bad)  
   1400116e8:	cli    
   1400116e9:	sti    
   1400116ea:	sti    
   1400116eb:	(bad)  
   1400116ec:	cli    
   1400116ed:	sti    
   1400116ee:	sti    
   1400116ef:	(bad)  
   1400116f0:	cli    
   1400116f1:	cli    
   1400116f2:	cli    
   1400116f3:	(bad)  
   1400116f4:	cli    
   1400116f5:	cli    
   1400116f6:	cli    
   1400116f7:	(bad)  
   1400116f8:	cli    
   1400116f9:	cli    
   1400116fa:	cli    
   1400116fb:	(bad)  
   1400116fc:	stc    
   1400116fd:	cli    
   1400116fe:	cli    
   1400116ff:	(bad)  
   140011700:	stc    
   140011701:	cli    
   140011702:	cli    
   140011703:	(bad)  
   140011704:	stc    
   140011705:	cli    
   140011706:	cli    
   140011707:	inc    DWORD PTR [rax]
   140011709:	add    BYTE PTR [rax],al
   14001170b:	(bad)  
   14001170c:	add    BYTE PTR [rax],al
   14001170e:	add    BYTE PTR [rax],ah
   140011710:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011711:	data16 (bad) 
   140011713:	(bad)  
   140011714:	fsubr  QWORD PTR [rsi-0x5e26009f]
   14001171a:	cmp    edi,edi
   14001171c:	loope  0x1400116c9
   14001171e:	rex.X (bad) 
   140011720:	jmp    0x12f005bd7
   140011725:	mov    ch,0x3f
   140011727:	push   rcx
   140011729:	mov    ah,0x36
   14001172b:	push   rax
   14001172d:	mov    cl,0x2d
   14001172f:	(bad)  
   140011730:	in     eax,dx
   140011731:	lods   al,BYTE PTR ds:[rsi]
   140011732:	(bad)  
   140011733:	(bad)  
   140011734:	call   0x124003ade
   140011739:	lahf   
   14001173a:	(bad)  
   14001173b:	(bad)  
   14001173c:	fcom   QWORD PTR [rdi-0x712a00e5]
   140011742:	(bad)  
   140011743:	dec    ebp
   140011745:	test   DWORD PTR [rdx],edx
   140011747:	jmp    rbp
   140011749:	(bad)  
   14001174a:	xchg   ebx,eax
   14001174b:	push   QWORD PTR [rbx-0x300d688]
   140011751:	cld    
   140011752:	cld    
   140011753:	(bad)  
   140011754:	cld    
   140011755:	cld    
   140011756:	cld    
   140011757:	(bad)  
   140011758:	sti    
   140011759:	cld    
   14001175a:	cld    
   14001175b:	(bad)  
   14001175c:	sti    
   14001175d:	sti    
   14001175e:	sti    
   14001175f:	(bad)  
   140011760:	sti    
   140011761:	sti    
   140011762:	sti    
   140011763:	(bad)  
   140011764:	sti    
   140011765:	sti    
   140011766:	sti    
   140011767:	(bad)  
   140011768:	sti    
   140011769:	sti    
   14001176a:	sti    
   14001176b:	(bad)  
   14001176c:	cli    
   14001176d:	sti    
   14001176e:	sti    
   14001176f:	(bad)  
   140011770:	cli    
   140011771:	sti    
   140011772:	sti    
   140011773:	(bad)  
   140011774:	cli    
   140011775:	cli    
   140011776:	cli    
   140011777:	(bad)  
   140011778:	cli    
   140011779:	cli    
   14001177a:	cli    
   14001177b:	(bad)  
   14001177c:	cli    
   14001177d:	cli    
   14001177e:	cli    
   14001177f:	(bad)  
   140011780:	stc    
   140011781:	cli    
   140011782:	cli    
   140011783:	call   rsp
   140011785:	(bad)  
   140011786:	(bad)  
   140011787:	inc    DWORD PTR [rax]
   140011789:	add    BYTE PTR [rax],al
   14001178b:	(bad)  
   14001178c:	add    BYTE PTR [rax],al
   14001178e:	add    BYTE PTR [rax],ah
   140011790:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011791:	data16 (bad) 
   140011793:	call   rsi
   140011795:	test   al,0x5d
   140011797:	call   rcx
   140011799:	cwde   
   14001179a:	ss (bad) 
   14001179c:	fcomp  DWORD PTR [rdi-0x561f00c6]
   1400117a2:	rex (bad) 
   1400117a4:	call   0x12f005d5b
   1400117a9:	mov    eax,0xbbf2ff4a
   1400117ae:	rex.WB push r9
   1400117b1:	mov    ecx,0xb3efff43
   1400117b6:	cmp    edi,edi
   1400117b8:	(bad)  
   1400117b9:	stos   DWORD PTR es:[rdi],eax
   1400117ba:	xor    bh,bh
   1400117bc:	in     al,0xa2
   1400117be:	(bad)  
   1400117bf:	(bad)  
   1400117c0:	fstp   QWORD PTR [rcx-0x4f1d00e1]
   1400117c6:	pop    rbx
   1400117c7:	push   QWORD PTR [rbx-0x1e00d688]
   1400117cd:	retf   0xffad
   1400117d0:	cld    
   1400117d1:	cld    
   1400117d2:	cld    
   1400117d3:	(bad)  
   1400117d4:	cld    
   1400117d5:	cld    
   1400117d6:	cld    
   1400117d7:	(bad)  
   1400117d8:	cld    
   1400117d9:	cld    
   1400117da:	cld    
   1400117db:	(bad)  
   1400117dc:	sti    
   1400117dd:	cld    
   1400117de:	cld    
   1400117df:	(bad)  
   1400117e0:	sti    
   1400117e1:	cld    
   1400117e2:	cld    
   1400117e3:	(bad)  
   1400117e4:	sti    
   1400117e5:	sti    
   1400117e6:	sti    
   1400117e7:	(bad)  
   1400117e8:	sti    
   1400117e9:	sti    
   1400117ea:	sti    
   1400117eb:	(bad)  
   1400117ec:	sti    
   1400117ed:	sti    
   1400117ee:	sti    
   1400117ef:	(bad)  
   1400117f0:	cli    
   1400117f1:	sti    
   1400117f2:	sti    
   1400117f3:	(bad)  
   1400117f4:	cli    
   1400117f5:	sti    
   1400117f6:	sti    
   1400117f7:	call   rsi
   1400117f9:	(bad)  
   1400117fa:	(bad)  
   1400117fb:	dec    esi
   1400117fd:	(bad)  
   1400117fe:	(bad)  
   1400117ff:	(bad)  
   140011800:	mov    edi,0xb8ffbfbf
   140011805:	mov    eax,0xffb8
   14001180a:	add    BYTE PTR [rbp+0x0],dl
   14001180d:	add    BYTE PTR [rax],al
   14001180f:	sbb    edi,DWORD PTR [rbx-0x5a88cd7f]
   140011815:	data16 (bad) 
   140011817:	jmp    QWORD PTR [rbp-0x5a00e99a]
   14001181d:	data16 (bad) 
   14001181f:	jmp    QWORD PTR [rbp-0x5a00e99a]
   140011825:	data16 (bad) 
   140011827:	jmp    QWORD PTR [rbp-0x5a00e99a]
   14001182d:	data16 (bad) 
   14001182f:	jmp    QWORD PTR [rbp-0x5a00e99a]
   140011835:	data16 (bad) 
   140011837:	push   rcx
   140011839:	mov    edx,0xb5edff4a
   14001183e:	rex.RX (bad) 
   140011840:	out    dx,eax
   140011841:	(bad)  
   140011842:	js     0x140011843
   140011844:	mov    bl,0x78
   140011846:	sub    edi,edi
   140011848:	faddp  st(3),st
   14001184a:	lahf   
   14001184b:	(bad)  
   14001184c:	cld    
   14001184d:	cld    
   14001184e:	cld    
   14001184f:	(bad)  
   140011850:	cld    
   140011851:	cld    
   140011852:	cld    
   140011853:	(bad)  
   140011854:	cld    
   140011855:	cld    
   140011856:	cld    
   140011857:	(bad)  
   140011858:	cld    
   140011859:	cld    
   14001185a:	cld    
   14001185b:	(bad)  
   14001185c:	cld    
   14001185d:	cld    
   14001185e:	cld    
   14001185f:	(bad)  
   140011860:	sti    
   140011861:	cld    
   140011862:	cld    
   140011863:	(bad)  
   140011864:	sti    
   140011865:	cld    
   140011866:	cld    
   140011867:	(bad)  
   140011868:	sti    
   140011869:	sti    
   14001186a:	sti    
   14001186b:	(bad)  
   14001186c:	sti    
   14001186d:	sti    
   14001186e:	sti    
   14001186f:	push   QWORD PTR [rdx-0x54004d4e]
   140011875:	stos   DWORD PTR es:[rdi],eax
   140011876:	stos   DWORD PTR es:[rdi],eax
   140011877:	jmp    FWORD PTR [rcx-0x56005657]
   14001187d:	test   eax,0xafafffa9
   140011882:	scas   eax,DWORD PTR es:[rdi]
   140011883:	(bad)  
   140011884:	mov    eax,0xfeb8b8
   140011889:	add    BYTE PTR [rax],al
   14001188b:	(bad)  
   14001188c:	add    BYTE PTR [rax],al
   14001188e:	add    BYTE PTR [rsi],cl
	...
   1400118a8:	(bad)  
   1400118a9:	(bad)  
   1400118aa:	(bad)  
   1400118ab:	(bad)  
   1400118ac:	(bad)  
   1400118ad:	(bad)  
   1400118ae:	(bad)  
   1400118af:	(bad)  
   1400118b0:	std    
   1400118b1:	std    
   1400118b2:	std    
   1400118b3:	jmp    QWORD PTR [rbp-0xd00e99a]
   1400118b9:	mov    esp,0xcef5ff4a
   1400118be:	jle    0x1400118bf
   1400118c0:	mov    bl,0x78
   1400118c2:	sub    edi,edi
   1400118c4:	loop   0x140011890
   1400118c6:	lods   eax,DWORD PTR ds:[rsi]
   1400118c7:	(bad)  
   1400118c8:	std    
   1400118c9:	std    
   1400118ca:	std    
   1400118cb:	(bad)  
   1400118cc:	cld    
   1400118cd:	std    
   1400118ce:	std    
   1400118cf:	(bad)  
   1400118d0:	cld    
   1400118d1:	cld    
   1400118d2:	cld    
   1400118d3:	(bad)  
   1400118d4:	cld    
   1400118d5:	cld    
   1400118d6:	cld    
   1400118d7:	(bad)  
   1400118d8:	cld    
   1400118d9:	cld    
   1400118da:	cld    
   1400118db:	(bad)  
   1400118dc:	cld    
   1400118dd:	cld    
   1400118de:	cld    
   1400118df:	(bad)  
   1400118e0:	cld    
   1400118e1:	cld    
   1400118e2:	cld    
   1400118e3:	(bad)  
   1400118e4:	sti    
   1400118e5:	cld    
   1400118e6:	cld    
   1400118e7:	(bad)  
   1400118e8:	sti    
   1400118e9:	cld    
   1400118ea:	cld    
   1400118eb:	(bad)  
   1400118ec:	sti    
   1400118ed:	sti    
   1400118ee:	sti    
   1400118ef:	inc    esi
   1400118f1:	mov    dh,0xff
   1400118f4:	cmc    
   1400118f5:	cmc    
   1400118f6:	cmc    
   1400118f7:	push   rsp
   1400118f9:	hlt    
   1400118fa:	hlt    
   1400118fb:	jmp    rbx
   1400118fd:	jrcxz  0x1400118e2
   1400118ff:	(bad)  
   140011900:	mov    esp,0x64febcbc
   140011905:	fs test BYTE PTR fs:[rax],al
   140011909:	add    BYTE PTR [rax],al
   14001190b:	adc    al,0x0
   14001190d:	add    BYTE PTR [rax],al
   14001190f:	add    eax,DWORD PTR [rax]
	...
   140011925:	add    BYTE PTR [rax],al
   140011927:	add    dh,dl
   140011929:	(bad)  
   14001192a:	(bad)  
   14001192b:	(bad)  
   14001192c:	(bad)  
   14001192d:	(bad)  
   14001192e:	(bad)  
   14001192f:	(bad)  
   140011930:	(bad)  
   140011931:	(bad)  
   140011932:	(bad)  
   140011933:	jmp    QWORD PTR [rbp-0xb00e99a]
   140011939:	iret   
   14001193a:	cmp    bh,0xb3
   14001193d:	js     0x140011968
   14001193f:	jmp    rdx
   140011941:	retf   0xffae
   140011944:	std    
   140011945:	std    
   140011946:	std    
   140011947:	(bad)  
   140011948:	std    
   140011949:	std    
   14001194a:	std    
   14001194b:	(bad)  
   14001194c:	std    
   14001194d:	std    
   14001194e:	std    
   14001194f:	(bad)  
   140011950:	cld    
   140011951:	std    
   140011952:	std    
   140011953:	(bad)  
   140011954:	cld    
   140011955:	std    
   140011956:	std    
   140011957:	(bad)  
   140011958:	cld    
   140011959:	cld    
   14001195a:	cld    
   14001195b:	(bad)  
   14001195c:	cld    
   14001195d:	cld    
   14001195e:	cld    
   14001195f:	(bad)  
   140011960:	cld    
   140011961:	cld    
   140011962:	cld    
   140011963:	(bad)  
   140011964:	cld    
   140011965:	cld    
   140011966:	cld    
   140011967:	(bad)  
   140011968:	cld    
   140011969:	cld    
   14001196a:	cld    
   14001196b:	(bad)  
   14001196c:	sti    
   14001196d:	cld    
   14001196e:	cld    
   14001196f:	dec    esi
   140011971:	(bad)  
   140011972:	(bad)  
   140011973:	(bad)  
   140011974:	cli    
   140011975:	cli    
   140011976:	cli    
   140011977:	(bad)  
   140011978:	jmp    0x140011965
   14001197a:	jmp    0x14001197b
   14001197c:	retf   0xcaca
   14001197f:	(bad)  
   140011980:	ins    DWORD PTR es:[rdi],dx
   140011981:	ins    DWORD PTR es:[rdi],dx
   140011982:	ins    DWORD PTR es:[rdi],dx
   140011983:	jg     0x140011985
   140011985:	add    BYTE PTR [rax],al
   140011987:	(bad)  
   140011988:	add    BYTE PTR [rax],al
   14001198a:	add    BYTE PTR [rbx],al
	...
   1400119a8:	(bad)  
   1400119a9:	(bad)  
   1400119aa:	(bad)  
   1400119ab:	(bad)  
   1400119ac:	(bad)  
   1400119ad:	(bad)  
   1400119ae:	(bad)  
   1400119af:	(bad)  
   1400119b0:	(bad)  
   1400119b1:	(bad)  
   1400119b2:	(bad)  
   1400119b3:	jmp    QWORD PTR [rbp-0x4c00e99a]
   1400119b9:	js     0x1400119e4
   1400119bb:	jmp    rdx
   1400119bd:	retf   0xffae
   1400119c0:	std    
   1400119c1:	std    
   1400119c2:	std    
   1400119c3:	(bad)  
   1400119c4:	std    
   1400119c5:	std    
   1400119c6:	std    
   1400119c7:	(bad)  
   1400119c8:	std    
   1400119c9:	std    
   1400119ca:	std    
   1400119cb:	(bad)  
   1400119cc:	std    
   1400119cd:	std    
   1400119ce:	std    
   1400119cf:	(bad)  
   1400119d0:	std    
   1400119d1:	std    
   1400119d2:	std    
   1400119d3:	(bad)  
   1400119d4:	std    
   1400119d5:	std    
   1400119d6:	std    
   1400119d7:	(bad)  
   1400119d8:	cld    
   1400119d9:	std    
   1400119da:	std    
   1400119db:	(bad)  
   1400119dc:	cld    
   1400119dd:	cld    
   1400119de:	cld    
   1400119df:	(bad)  
   1400119e0:	cld    
   1400119e1:	cld    
   1400119e2:	cld    
   1400119e3:	(bad)  
   1400119e4:	cld    
   1400119e5:	cld    
   1400119e6:	cld    
   1400119e7:	(bad)  
   1400119e8:	cld    
   1400119e9:	cld    
   1400119ea:	cld    
   1400119eb:	(bad)  
   1400119ec:	cld    
   1400119ed:	cld    
   1400119ee:	cld    
   1400119ef:	dec    ebp
   1400119f1:	int    0xcd
   1400119f3:	jmp    rsp
   1400119f5:	in     al,0xe4
   1400119f7:	dec    ecx
   1400119f9:	leave  
   1400119fa:	leave  
   1400119fb:	(bad)  
   1400119fc:	push   0x7f6868
   140011a01:	add    BYTE PTR [rax],al
   140011a03:	(bad)  
   140011a04:	add    BYTE PTR [rax],al
   140011a06:	add    BYTE PTR [rbx],al
	...
   140011a28:	(bad)  
   140011a29:	(bad)  
   140011a2a:	(bad)  
   140011a2b:	(bad)  
   140011a2c:	(bad)  
   140011a2d:	(bad)  
   140011a2e:	(bad)  
   140011a2f:	(bad)  
   140011a30:	(bad)  
   140011a31:	(bad)  
   140011a32:	(bad)  
   140011a33:	inc    ebx
   140011a35:	cdq    
   140011a36:	movsxd edi,edi
   140011a38:	loop   0x140011a05
   140011a3a:	scas   eax,DWORD PTR es:[rdi]
   140011a3b:	(bad)  
   140011a3c:	std    
   140011a3d:	(bad)  
   140011a3e:	(bad)  
   140011a3f:	(bad)  
   140011a40:	std    
   140011a41:	std    
   140011a42:	std    
   140011a43:	(bad)  
   140011a44:	std    
   140011a45:	std    
   140011a46:	std    
   140011a47:	(bad)  
   140011a48:	std    
   140011a49:	std    
   140011a4a:	std    
   140011a4b:	(bad)  
   140011a4c:	std    
   140011a4d:	std    
   140011a4e:	std    
   140011a4f:	(bad)  
   140011a50:	std    
   140011a51:	std    
   140011a52:	std    
   140011a53:	(bad)  
   140011a54:	std    
   140011a55:	std    
   140011a56:	std    
   140011a57:	(bad)  
   140011a58:	std    
   140011a59:	std    
   140011a5a:	std    
   140011a5b:	(bad)  
   140011a5c:	cld    
   140011a5d:	std    
   140011a5e:	std    
   140011a5f:	(bad)  
   140011a60:	cld    
   140011a61:	cld    
   140011a62:	cld    
   140011a63:	(bad)  
   140011a64:	cld    
   140011a65:	cld    
   140011a66:	cld    
   140011a67:	(bad)  
   140011a68:	cld    
   140011a69:	cld    
   140011a6a:	cld    
   140011a6b:	(bad)  
   140011a6c:	(bad)  
   140011a6d:	(bad)  
   140011a6e:	(bad)  
   140011a6f:	inc    ebx
   140011a71:	ret    
   140011a72:	ret    
   140011a73:	inc    edi
   140011a75:	mov    edi,0x656565fe
   140011a7b:	jle    0x140011a7d
   140011a7d:	add    BYTE PTR [rax],al
   140011a7f:	(bad)  
   140011a80:	add    BYTE PTR [rax],al
   140011a82:	add    BYTE PTR [rbx],al
	...
   140011aa8:	(bad)  
   140011aa9:	(bad)  
   140011aaa:	(bad)  
   140011aab:	(bad)  
   140011aac:	(bad)  
   140011aad:	(bad)  
   140011aae:	(bad)  
   140011aaf:	(bad)  
   140011ab0:	(bad)  
   140011ab1:	(bad)  
   140011ab2:	(bad)  
   140011ab3:	(bad)  
   140011ab4:	(bad)  
   140011ab5:	(bad)  
   140011ab6:	(bad)  
   140011ab7:	(bad)  
   140011ab8:	(bad)  
   140011ab9:	(bad)  
   140011aba:	(bad)  
   140011abb:	(bad)  
   140011abc:	(bad)  
   140011abd:	(bad)  
   140011abe:	(bad)  
   140011abf:	(bad)  
   140011ac0:	(bad)  
   140011ac1:	(bad)  
   140011ac2:	(bad)  
   140011ac3:	(bad)  
   140011ac4:	std    
   140011ac5:	std    
   140011ac6:	std    
   140011ac7:	(bad)  
   140011ac8:	std    
   140011ac9:	std    
   140011aca:	std    
   140011acb:	(bad)  
   140011acc:	std    
   140011acd:	std    
   140011ace:	std    
   140011acf:	(bad)  
   140011ad0:	std    
   140011ad1:	std    
   140011ad2:	std    
   140011ad3:	(bad)  
   140011ad4:	std    
   140011ad5:	std    
   140011ad6:	std    
   140011ad7:	(bad)  
   140011ad8:	std    
   140011ad9:	std    
   140011ada:	std    
   140011adb:	(bad)  
   140011adc:	std    
   140011add:	std    
   140011ade:	std    
   140011adf:	(bad)  
   140011ae0:	cld    
   140011ae1:	std    
   140011ae2:	std    
   140011ae3:	(bad)  
   140011ae4:	cld    
   140011ae5:	cld    
   140011ae6:	cld    
   140011ae7:	(bad)  
   140011ae8:	cld    
   140011ae9:	cld    
   140011aea:	cld    
   140011aeb:	(bad)  
   140011aec:	(bad)  
   140011aee:	fdiv   st(7),st
   140011af0:	mov    edi,0x6bfebfbf
   140011af5:	imul   ebp,DWORD PTR [rbx-0x7e],0x0
   140011af9:	add    BYTE PTR [rax],al
   140011afb:	sbb    DWORD PTR [rax],eax
   140011afd:	add    BYTE PTR [rax],al
   140011aff:	add    al,0x0
	...
   140011b25:	add    BYTE PTR [rax],al
   140011b27:	add    dh,dl
   140011b29:	(bad)  
   140011b2a:	(bad)  
   140011b2b:	call   rsi
   140011b2d:	(bad)  
   140011b2e:	(bad)  
   140011b2f:	call   rsi
   140011b31:	(bad)  
   140011b32:	(bad)  
   140011b33:	call   rsi
   140011b35:	(bad)  
   140011b36:	(bad)  
   140011b37:	call   rsi
   140011b39:	(bad)  
   140011b3a:	(bad)  
   140011b3b:	call   rsi
   140011b3d:	(bad)  
   140011b3e:	(bad)  
   140011b3f:	call   rsi
   140011b41:	(bad)  
   140011b42:	(bad)  
   140011b43:	call   rsi
   140011b45:	(bad)  
   140011b46:	(bad)  
   140011b47:	call   rsi
   140011b49:	(bad)  
   140011b4a:	(bad)  
   140011b4b:	call   rsi
   140011b4d:	(bad)  
   140011b4e:	(bad)  
   140011b4f:	call   rsi
   140011b51:	(bad)  
   140011b52:	(bad)  
   140011b53:	call   rsi
   140011b55:	(bad)  
   140011b56:	(bad)  
   140011b57:	call   rsi
   140011b59:	(bad)  
   140011b5a:	(bad)  
   140011b5b:	call   rsi
   140011b5d:	(bad)  
   140011b5e:	(bad)  
   140011b5f:	call   rsi
   140011b61:	(bad)  
   140011b62:	(bad)  
   140011b63:	call   rsi
   140011b65:	(bad)  
   140011b66:	(bad)  
   140011b67:	call   rsi
   140011b69:	(bad)  
   140011b6a:	(bad)  
   140011b6b:	dec    esp
   140011b6d:	int3   
   140011b6e:	int3   
   140011b6f:	clc    
   140011b70:	(bad)  
   140011b71:	(bad)  
   140011b72:	(bad)  
   140011b73:	outs   dx,DWORD PTR ds:[rsi]
   140011b74:	add    BYTE PTR [rax],al
   140011b76:	add    BYTE PTR [rdx],dl
   140011b78:	add    BYTE PTR [rax],al
   140011b7a:	add    BYTE PTR [rbx],al
	...
   140011b90:	cld    
   140011b91:	add    BYTE PTR [rax],al
   140011b93:	add    ah,bh
   140011b95:	add    BYTE PTR [rax],al
   140011b97:	add    ah,bh
   140011b99:	add    BYTE PTR [rax],al
   140011b9b:	add    ah,bh
   140011b9d:	add    BYTE PTR [rax],al
   140011b9f:	add    ah,bh
   140011ba1:	add    BYTE PTR [rax],al
   140011ba3:	add    ah,bh
   140011ba5:	add    BYTE PTR [rax],al
   140011ba7:	add    ah,bh
   140011ba9:	add    BYTE PTR [rax],al
   140011bab:	add    ah,bh
   140011bad:	add    BYTE PTR [rax],al
   140011baf:	add    ah,bh
   140011bb1:	add    BYTE PTR [rax],al
   140011bb3:	add    ah,bh
   140011bb5:	add    BYTE PTR [rax],al
   140011bb7:	add    ah,bh
   140011bb9:	add    BYTE PTR [rax],al
   140011bbb:	add    ah,bh
   140011bbd:	add    BYTE PTR [rax],al
   140011bbf:	add    ah,bh
   140011bc1:	add    BYTE PTR [rax],al
   140011bc3:	add    ah,bh
   140011bc5:	add    BYTE PTR [rax],al
   140011bc7:	add    ah,bh
   140011bc9:	add    BYTE PTR [rax],al
   140011bcb:	add    ah,bh
   140011bcd:	add    BYTE PTR [rax],al
   140011bcf:	add    ah,bh
   140011bd1:	add    BYTE PTR [rax],al
   140011bd3:	add    ah,bh
   140011bd5:	add    BYTE PTR [rax],al
   140011bd7:	add    ah,bh
   140011bd9:	add    BYTE PTR [rax],al
   140011bdb:	add    ah,bh
   140011bdd:	add    BYTE PTR [rax],al
   140011bdf:	add    ah,bh
	...
   140011bf5:	add    BYTE PTR [rax],al
   140011bf7:	add    ah,bh
   140011bf9:	add    BYTE PTR [rax],al
   140011bfb:	add    ah,bh
   140011bfd:	add    BYTE PTR [rax],al
   140011bff:	add    esp,edi
   140011c01:	add    BYTE PTR [rax],al
   140011c03:	add    edi,esp
   140011c05:	add    BYTE PTR [rax],al
   140011c07:	(bad)  
   140011c08:	cld    
   140011c09:	add    BYTE PTR [rax],al
   140011c0b:	paddb  mm0,QWORD PTR [rax]
   140011c0e:	add    BYTE PTR [rdi],bl
   140011c10:	sub    BYTE PTR [rax],al
   140011c12:	add    BYTE PTR [rax],al
   140011c14:	adc    BYTE PTR [rax],al
   140011c16:	add    BYTE PTR [rax],al
   140011c18:	and    BYTE PTR [rax],al
   140011c1a:	add    BYTE PTR [rax],al
   140011c1c:	add    DWORD PTR [rax],eax
   140011c1e:	and    BYTE PTR [rax],al
   140011c20:	add    BYTE PTR [rax],al
   140011c22:	add    BYTE PTR [rax],al
   140011c24:	add    al,0x0
	...
   140011c43:	add    BYTE PTR [rdx+0x7a],bh
   140011c46:	jp     0x140011c47
   140011c48:	jp     0x140011cc4
   140011c4a:	jp     0x140011c4b
   140011c4c:	jp     0x140011cc8
   140011c4e:	jp     0x140011c4f
   140011c50:	jp     0x140011ccc
   140011c52:	jp     0x140011c53
   140011c54:	jp     0x140011cd0
   140011c56:	jp     0x140011c57
   140011c58:	jp     0x140011cd4
   140011c5a:	jp     0x140011c5b
   140011c5c:	jp     0x140011cd8
   140011c5e:	jp     0x140011c5f
   140011c60:	jp     0x140011cdc
   140011c62:	jp     0x140011c63
   140011c64:	jp     0x140011ce0
   140011c66:	jp     0x140011c67
   140011c68:	jp     0x140011ce4
   140011c6a:	jp     0x140011c6b
   140011c6c:	jp     0x140011ce8
   140011c6e:	jp     0x140011c6f
   140011c70:	jp     0x140011cec
   140011c72:	jp     0x140011c73
	...
   140011c84:	xchg   BYTE PTR [rsi-0xf0f007a],al
   140011c8a:	repnz push rcx
   140011c8d:	icebp  
   140011c8e:	repz push rcx
   140011c91:	repnz repz push rdx
   140011c95:	repnz hlt 
   140011c97:	push   rbx
   140011c99:	hlt    
   140011c9a:	cmc    
   140011c9b:	push   rsp
   140011c9d:	cmc    
   140011c9e:	idiv   bh
   140011ca0:	cmc    
   140011ca1:	cmc    
   140011ca2:	idiv   edi
   140011ca4:	div    dh
   140011ca6:	idiv   edi
   140011ca8:	div    edi
   140011caa:	clc    
   140011cab:	push   rdi
   140011cad:	clc    
   140011cae:	stc    
   140011caf:	inc    DWORD PTR [rsi+0xff8686]
	...
   140011cc1:	add    BYTE PTR [rax],al
   140011cc3:	add    BYTE PTR [rax-0xe006f70],dl
   140011cc9:	icebp  
   140011cca:	repz push rcx
   140011ccd:	repnz repz (bad) 
   140011cd0:	(bad)  
   140011cd1:	jmp    0xd89a1cc1
   140011cd6:	cwde   
   140011cd7:	call   FWORD PTR [rax-0x67006768]
   140011cdd:	cwde   
   140011cde:	cwde   
   140011cdf:	call   FWORD PTR [rax-0x10006768]
   140011ce5:	out    dx,al
   140011ce6:	out    dx,eax
   140011ce7:	push   rdi
   140011ce9:	clc    
   140011cea:	stc    
   140011ceb:	(bad)  
   140011cec:	clc    
   140011ced:	stc    
   140011cee:	cli    
   140011cef:	call   QWORD PTR [rax+0xff9090]
	...
   140011d01:	add    BYTE PTR [rax],al
   140011d03:	add    BYTE PTR [rbp-0xd006263],bl
   140011d09:	repnz repz call FWORD PTR [rax-0x67006768]
   140011d11:	cwde   
   140011d12:	cwde   
   140011d13:	jmp    rbx
   140011d15:	fcmovbe st,st(1)
   140011d17:	jmp    rdi
   140011d19:	(bad)
   140011d1c:	jo     0x140011ca6
   140011d1e:	rex.WRXB jmp r11
   140011d21:	fcmovbe st,st(1)
   140011d23:	call   FWORD PTR [rax-0x67006768]
   140011d29:	cwde   
   140011d2a:	cwde   
   140011d2b:	(bad)  
   140011d2c:	stc    
   140011d2d:	cli    
   140011d2e:	cli    
   140011d2f:	call   FWORD PTR [rbp+0xff9d9d]
	...
   140011d41:	add    BYTE PTR [rax],al
   140011d43:	add    BYTE PTR [rsp+rbp*4-0xd0d0054],ch
   140011d4a:	hlt    
   140011d4b:	push   QWORD PTR [rdi+0x77]
   140011d4e:	ja     0x140011d4f
   140011d50:	cmc    
   140011d51:	repz hlt 
   140011d53:	dec    DWORD PTR [rcx+0x49]
   140011d56:	dec    QWORD PTR [r10+0x52ff4f6d]
   140011d5d:	pop    rdx
   140011d5e:	rex.X dec DWORD PTR [rcx+0x49]
   140011d62:	rex.WB push r13
   140011d65:	repz hlt 
   140011d67:	push   QWORD PTR [rdi+0x77]
   140011d6a:	ja     0x140011d6b
   140011d6c:	cli    
   140011d6d:	sti    
   140011d6e:	sti    
   140011d6f:	jmp    FWORD PTR [rsp+rbp*4+0xffac]
	...
   140011d82:	add    BYTE PTR [rax],al
   140011d84:	mov    ebp,0xf3ffbdbd
   140011d89:	repz cmc 
   140011d8b:	dec    eax
   140011d8d:	enter  0xffc8,0xab
   140011d91:	test   al,0xa6
   140011d93:	jmp    rdx
   140011d95:	fcmovbe st,st(3)
   140011d97:	jmp    rdx
   140011d99:	fcmovbe st,st(3)
   140011d9b:	jmp    rdx
   140011d9d:	fcmovbe st,st(3)
   140011d9f:	jmp    rdx
   140011da1:	fcmovbe st,st(3)
   140011da3:	jmp    FWORD PTR [rbx+0x77ffa6a8]
   140011da9:	ja     0x140011e22
   140011dab:	(bad)  
   140011dac:	sti    
   140011dad:	sti    
   140011dae:	cld    
   140011daf:	jmp    FWORD PTR [rbp+0xffadad]
	...
   140011dc1:	add    BYTE PTR [rax],al
   140011dc3:	add    ch,cl
   140011dc5:	int    0xcd
   140011dc7:	(bad)  
   140011dc8:	mov    esi,0xd5ff2e82
   140011dcd:	mov    eax,0xc8c8ff92
   140011dd2:	enter  0x88ff,0x88
   140011dd6:	mov    bh,bh
   140011dd8:	mov    BYTE PTR [rax-0x77770078],cl
   140011dde:	mov    bh,bh
   140011de0:	mov    BYTE PTR [rax+0x7777ff88],cl
   140011de6:	ja     0x140011de7
   140011de8:	ja     0x140011e61
   140011dea:	ja     0x140011deb
   140011dec:	sti    
   140011ded:	cld    
   140011dee:	cld    
   140011def:	push   QWORD PTR [rcx+0xffb1b1]
	...
   140011e01:	add    BYTE PTR [rax],al
   140011e03:	add    dh,cl
   140011e05:	(bad)  
   140011e06:	(bad)  
   140011e07:	(bad)  
   140011e08:	mov    esi,0xbfff2e82
   140011e0d:	jnp    0x140011e2f
   140011e0f:	dec    esp
   140011e11:	scas   al,BYTE PTR es:[rdi]
   140011e12:	mov    bh,bh
   140011e14:	(bad)  
   140011e15:	(bad)  
   140011e16:	(bad)  
   140011e17:	(bad)  
   140011e18:	(bad)  
   140011e19:	(bad)  
   140011e1a:	(bad)  
   140011e1b:	(bad)  
   140011e1c:	(bad)  
   140011e1d:	(bad)  
   140011e1e:	(bad)  
   140011e1f:	(bad)  
   140011e20:	(bad)  
   140011e21:	(bad)  
   140011e22:	(bad)  
   140011e23:	dec    ebp
   140011e25:	int    0xcd
   140011e27:	(bad)  
   140011e28:	sti    
   140011e29:	cld    
   140011e2a:	std    
   140011e2b:	(bad)  
   140011e2c:	cld    
   140011e2d:	std    
   140011e2e:	std    
   140011e2f:	push   QWORD PTR [rbx+0xffb3b3]
   140011e35:	add    BYTE PTR [rax],al
   140011e37:	add    BYTE PTR [rcx-0x4148d483],bh
   140011e3d:	(bad)  
   140011e3e:	cs (bad) 
   140011e40:	mov    esi,0xbeff2e82
   140011e45:	(bad)  
   140011e46:	cs (bad) 
   140011e48:	mov    esi,0xedff2e82
   140011e4d:	mov    ebx,0x7bbfff5c
   140011e52:	and    bh,bh
   140011e54:	ffree  st(0)
   140011e56:	(bad)  
   140011e57:	(bad)  
   140011e58:	(bad)  
   140011e59:	(bad)  
   140011e5a:	(bad)  
   140011e5b:	(bad)  
   140011e5c:	(bad)  
   140011e5d:	(bad)  
   140011e5e:	(bad)  
   140011e5f:	(bad)  
   140011e60:	(bad)  
   140011e61:	(bad)  
   140011e62:	(bad)  
   140011e63:	dec    ebp
   140011e65:	int    0xcd
   140011e67:	(bad)  
   140011e68:	std    
   140011e69:	(bad)  
   140011e6a:	(bad)  
   140011e6b:	(bad)  
   140011e6c:	std    
   140011e6d:	(bad)  
   140011e6e:	(bad)  
   140011e6f:	(bad)  
   140011e70:	mov    eax,0xffb8b8
   140011e75:	add    BYTE PTR [rax],al
   140011e77:	add    BYTE PTR [rbx-0x800d080],bh
   140011e7d:	(bad)  
   140011e7e:	(bad)  
   140011e7f:	push   rsi
   140011e81:	iret   
   140011e82:	cmp    bh,0xf4
   140011e85:	int3   
   140011e86:	jl     0x140011e87
   140011e88:	out    dx,al
   140011e89:	shr    DWORD PTR [rbx-0x1],0xdc
   140011e8d:	xchg   esi,eax
   140011e8e:	sbb    edi,edi
   140011e90:	jrcxz  0x140011e48
   140011e92:	outs   dx,BYTE PTR ds:[rsi]
   140011e93:	(bad)  
   140011e94:	mov    ebx,0xdfff1875
   140011e99:	(bad)  
   140011e9b:	dec    ebp
   140011e9d:	int    0xcd
   140011e9f:	dec    ebp
   140011ea1:	int    0xcd
   140011ea3:	dec    ebp
   140011ea5:	int    0xcd
   140011ea7:	(bad)  
   140011ea8:	std    
   140011ea9:	(bad)  
   140011eaa:	(bad)  
   140011eab:	(bad)  
   140011eac:	std    
   140011ead:	(bad)  
   140011eae:	(bad)  
   140011eaf:	(bad)  
   140011eb0:	mov    eax,0xffb8b8
   140011eb5:	add    BYTE PTR [rax],al
   140011eb7:	add    BYTE PTR [rcx-0x4348d483],bh
   140011ebd:	js     0x140011edd
   140011ebf:	(bad)  
   140011ec0:	mov    esp,0xbcff1e78
   140011ec5:	js     0x140011ee5
   140011ec7:	(bad)  
   140011ec8:	mov    esp,0xedff1e78
   140011ecd:	mov    ebx,0x6cafff5c
   140011ed2:	adc    al,0xff
   140011ed4:	fidivr DWORD PTR [rsi-0x2030068]
   140011eda:	std    
   140011edb:	(bad)  
   140011edc:	cld    
   140011edd:	std    
   140011ede:	std    
   140011edf:	(bad)  
   140011ee0:	std    
   140011ee1:	(bad)  
   140011ee2:	(bad)  
   140011ee3:	(bad)  
   140011ee4:	std    
   140011ee5:	(bad)  
   140011ee6:	(bad)  
   140011ee7:	jmp    rbp
   140011ee9:	in     eax,0xe6
   140011eeb:	(bad)  
   140011eec:	(bad)  
   140011eee:	loopne 0x140011eef
   140011ef0:	mov    edx,0xffbaba
	...
   140011f01:	add    BYTE PTR [rax],al
   140011f03:	add    BYTE PTR [rbp-0x43004243],bh
   140011f09:	js     0x140011f29
   140011f0b:	jmp    FWORD PTR [rdi-0x2400eb94]
   140011f11:	mov    esi,0xfcfbff98
   140011f16:	cld    
   140011f17:	(bad)  
   140011f18:	cld    
   140011f19:	std    
   140011f1a:	std    
   140011f1b:	(bad)  
   140011f1c:	std    
   140011f1d:	(bad)  
   140011f1e:	(bad)  
   140011f1f:	(bad)  
   140011f20:	std    
   140011f21:	(bad)  
   140011f22:	(bad)  
   140011f23:	(bad)  
   140011f24:	mov    edx,0xb8ffbaba
   140011f29:	mov    eax,0xb8b8ffb8
   140011f2e:	mov    eax,0xbababaff
   140011f33:	inc    DWORD PTR [rax]
	...
   140011f41:	add    BYTE PTR [rax],al
   140011f43:	add    BYTE PTR [rdi-0x46004041],bh
   140011f49:	je     0x140011f64
   140011f4b:	(bad)  
   140011f4c:	fstp   TBYTE PTR [rsi-0x3040068]
   140011f52:	cld    
   140011f53:	(bad)  
   140011f54:	cld    
   140011f55:	std    
   140011f56:	std    
   140011f57:	(bad)  
   140011f58:	std    
   140011f59:	(bad)  
   140011f5a:	(bad)  
   140011f5b:	(bad)  
   140011f5c:	std    
   140011f5d:	(bad)  
   140011f5e:	(bad)  
   140011f5f:	(bad)  
   140011f60:	std    
   140011f61:	(bad)  
   140011f62:	(bad)  
   140011f63:	inc    ebp
   140011f65:	(bad)
   140011f68:	div    dh
   140011f6a:	idiv   bh
   140011f6c:	mov    edx,0xddf9baba
   140011f71:	fstp   st(5)
   140011f73:	pop    rdi
	...
   140011f84:	rol    al,0xc0
   140011f87:	(bad)  
   140011f88:	sti    
   140011f89:	sti    
   140011f8a:	cld    
   140011f8b:	(bad)  
   140011f8c:	sti    
   140011f8d:	cld    
   140011f8e:	cld    
   140011f8f:	(bad)  
   140011f90:	cld    
   140011f91:	std    
   140011f92:	std    
   140011f93:	(bad)  
   140011f94:	cld    
   140011f95:	std    
   140011f96:	std    
   140011f97:	(bad)  
   140011f98:	std    
   140011f99:	(bad)  
   140011f9a:	(bad)  
   140011f9b:	(bad)  
   140011f9c:	sti    
   140011f9d:	cld    
   140011f9e:	cld    
   140011f9f:	(bad)  
   140011fa0:	std    
   140011fa1:	(bad)  
   140011fa2:	(bad)  
   140011fa3:	dec    edx
   140011fa5:	retf   0xffca
   140011fa8:	mov    edx,0xe3fdbaba
   140011fad:	in     eax,0xe2
   140011faf:	imul   eax,DWORD PTR [rax],0x0
	...
   140011fc1:	add    BYTE PTR [rax],al
   140011fc3:	add    al,al
   140011fc5:	rol    al,0xff
   140011fc8:	rol    al,0xc0
   140011fcb:	inc    eax
   140011fcd:	rol    al,0xff
   140011fd0:	rol    al,0xc0
   140011fd3:	inc    eax
   140011fd5:	rol    al,0xff
   140011fd8:	rol    al,0xc0
   140011fdb:	inc    eax
   140011fdd:	rol    al,0xff
   140011fe0:	rol    al,0xc0
   140011fe3:	(bad)  
   140011fe4:	mov    edi,0xf5fcbfbf
   140011fe9:	cmc    
   140011fea:	cmc    
   140011feb:	jns    0x140011fed
	...
   140012035:	add    BYTE PTR [rax],al
   140012037:	add    al,ah
   140012039:	add    DWORD PTR [rax],eax
   14001203b:	add    al,ah
   14001203d:	add    DWORD PTR [rax],eax
   14001203f:	add    al,ah
   140012041:	add    DWORD PTR [rax],eax
   140012043:	add    al,ah
   140012045:	add    DWORD PTR [rax],eax
   140012047:	add    al,ah
   140012049:	add    DWORD PTR [rax],eax
   14001204b:	add    al,ah
   14001204d:	add    DWORD PTR [rax],eax
   14001204f:	add    al,ah
   140012051:	add    DWORD PTR [rax],eax
   140012053:	add    al,ah
   140012055:	add    DWORD PTR [rax],eax
   140012057:	add    BYTE PTR [rax],al
   140012059:	add    DWORD PTR [rax],eax
   14001205b:	add    BYTE PTR [rax],al
   14001205d:	add    DWORD PTR [rax],eax
   14001205f:	add    BYTE PTR [rax],al
   140012061:	add    DWORD PTR [rax],eax
   140012063:	add    al,ah
   140012065:	add    DWORD PTR [rax],eax
   140012067:	add    al,ah
   140012069:	add    DWORD PTR [rax],eax
   14001206b:	add    al,ah
   14001206d:	add    eax,DWORD PTR [rax]
   14001206f:	add    al,ah
   140012071:	(bad)  
   140012072:	add    BYTE PTR [rax],al
   140012074:	(bad)  
   140012075:	inc    DWORD PTR [rax]
   140012077:	add    BYTE PTR [rax],al
   140012079:	add    BYTE PTR [rcx],al
   14001207b:	add    BYTE PTR [rsi],al
   14001207d:	add    BYTE PTR [rax],ah
   14001207f:	and    BYTE PTR [rax],dl
   140012081:	add    BYTE PTR [rcx],al
   140012083:	add    BYTE PTR [rax+rax*1],al
   140012086:	call   0x14101208d
   14001208b:	add    BYTE PTR [rax],dl
   14001208d:	adc    BYTE PTR [rax],dl
   14001208f:	add    BYTE PTR [rcx],al
   140012091:	add    BYTE PTR [rax+rax*1],al
   140012094:	sub    BYTE PTR [rcx],al
   140012096:	add    BYTE PTR [rax],al
   140012098:	add    al,BYTE PTR [rax]
   14001209a:	and    BYTE PTR [rax],ah
   14001209c:	add    BYTE PTR [rax],al
   14001209e:	add    DWORD PTR [rax],eax
   1400120a0:	or     BYTE PTR [rax],al
   1400120a2:	test   al,0x8
   1400120a4:	add    BYTE PTR [rax],al
   1400120a6:	add    eax,DWORD PTR [rax]
   1400120a8:	adc    BYTE PTR [rax],dl
   1400120aa:	add    BYTE PTR [rax],al
   1400120ac:	add    DWORD PTR [rax],eax
   1400120ae:	or     BYTE PTR [rax],al
   1400120b0:	push   0x4000005
   1400120b5:	add    BYTE PTR [rax],ah
   1400120b7:	and    BYTE PTR [rax],al
   1400120b9:	add    BYTE PTR [rcx],al
   1400120bb:	add    BYTE PTR [rax],ah
   1400120bd:	add    BYTE PTR [rax+0x5000010],ch
   1400120c3:	add    BYTE PTR [rax],dl
   1400120c5:	adc    BYTE PTR [rax],al
   1400120c7:	add    BYTE PTR [rcx],al
   1400120c9:	add    BYTE PTR [rax],ah
   1400120cb:	add    BYTE PTR [rax+0x4],ch
   1400120ce:	add    BYTE PTR [rax],al
   1400120d0:	(bad)  
   1400120d1:	add    BYTE PTR [rax],al
   1400120d3:	add    BYTE PTR [rax],al
   1400120d5:	add    BYTE PTR [rax],al
   1400120d7:	add    BYTE PTR [rax],ch
   1400120d9:	add    BYTE PTR [rax],al
   1400120db:	add    BYTE PTR [rax],ah
   1400120dd:	add    BYTE PTR [rax],al
   1400120df:	add    BYTE PTR [rax+0x0],al
   1400120e2:	add    BYTE PTR [rax],al
   1400120e4:	add    DWORD PTR [rax],eax
   1400120e6:	add    al,0x0
   1400120e8:	add    BYTE PTR [rax],al
   1400120ea:	add    BYTE PTR [rax],al
   1400120ec:	add    BYTE PTR [rdx],0x0
	...
   140012103:	add    BYTE PTR [rax],al
   140012105:	add    BYTE PTR [rax+0x800000],al
   14001210b:	add    BYTE PTR [rax],al
   14001210d:	add    BYTE PTR [rax+0x8000],0x0
   140012114:	add    BYTE PTR [rax],0x80
   140012117:	add    BYTE PTR [rax-0x3fffff80],al
   14001211d:	rol    al,0x0
   140012120:	add    BYTE PTR [rax+0x80],0xff
   140012127:	add    BYTE PTR [rax],al
   140012129:	inc    DWORD PTR [rax]
   14001212b:	add    BYTE PTR [rax],al
   14001212d:	(bad)  
   14001212e:	inc    DWORD PTR [rax]
   140012130:	inc    DWORD PTR [rax]
   140012132:	add    BYTE PTR [rax],al
   140012134:	inc    DWORD PTR [rax]
   140012136:	inc    DWORD PTR [rax]
   140012138:	(bad)  
   140012139:	inc    DWORD PTR [rax]
   14001213b:	add    bh,bh
   14001213d:	(bad)  
   14001213e:	inc    DWORD PTR [rax]
   140012140:	add    BYTE PTR [rax],al
   140012142:	or     BYTE PTR [rax-0x77777778],cl
   140012148:	mov    BYTE PTR [rax-0x77777778],cl
   14001214e:	mov    BYTE PTR [rax],al
   140012150:	add    BYTE PTR [rax],al
   140012152:	mov    BYTE PTR [rax-0x77777778],cl
   140012158:	mov    BYTE PTR [rax-0x77777778],cl
   14001215e:	mov    BYTE PTR [rax+0x3000],al
	...
   14001216c:	add    BYTE PTR [rax],cl
   14001216e:	mov    BYTE PTR [rax-0x444444fd],cl
   140012174:	mov    ebx,0xbbbbbbbb
   140012179:	mov    ebx,0x70bbbbbb
   14001217e:	mov    BYTE PTR [rax-0x444444c5],cl
   140012184:	mov    ebx,0xbbbbbbbb
   140012189:	mov    ebx,0xb7bbbbbb
   14001218e:	or     BYTE PTR [rax-0x444444c5],cl
   140012194:	mov    ebx,0xbbbbbbbb
   140012199:	mov    ebx,0xbbbbbbbb
   14001219e:	or     BYTE PTR [rax-0x444444c5],cl
   1400121a4:	mov    ebx,0x7b00b7bb
   1400121a9:	mov    ebx,0xbbbbbbbb
   1400121ae:	or     BYTE PTR [rax-0x444444c5],al
   1400121b4:	mov    ebx,0xb00b0bb
   1400121b9:	mov    ebx,0xb7bbbbbb
   1400121be:	or     BYTE PTR [rax-0x444444fd],al
   1400121c4:	mov    ebx,0xb00b0bb
   1400121c9:	mov    ebx,0xb0bbbbbb
   1400121ce:	mov    BYTE PTR [rax],al
   1400121d0:	add    edi,DWORD PTR [rbx-0x44444445]
   1400121d6:	mov    bh,0x0
   1400121d8:	jnp    0x140012195
   1400121da:	mov    ebx,0x8870bbbb
   1400121df:	add    BYTE PTR [rax],al
   1400121e1:	cmp    edi,DWORD PTR [rbx-0x44444445]
   1400121e7:	mov    ebx,0xbbbbbbbb
   1400121ec:	mov    ebx,0x8008
   1400121f1:	cmp    edi,DWORD PTR [rbx-0x44444445]
   1400121f7:	or     edi,DWORD PTR [rbx-0x48444445]
   1400121fd:	or     BYTE PTR [rax-0x44fd0000],al
   140012203:	mov    ebx,0x7b7bbbb
   140012208:	mov    ebx,0xb0bbbbbb
   14001220d:	mov    BYTE PTR [rax],al
   14001220f:	add    BYTE PTR [rax],al
   140012211:	add    edi,DWORD PTR [rbx-0x4c444445]
   140012217:	add    edi,DWORD PTR [rbx+0x70bbbbbb]
   14001221d:	mov    BYTE PTR [rax],al
   14001221f:	add    BYTE PTR [rax],al
   140012221:	add    BYTE PTR [rbx],bh
   140012223:	mov    ebx,0xb0bbbb
   140012228:	mov    ebx,0x8bbbbbb
   14001222d:	add    BYTE PTR [rax],0x0
   140012230:	add    BYTE PTR [rax],al
   140012232:	cmp    edi,DWORD PTR [rbx+0x70bbbb]
   140012238:	jnp    0x1400121f5
   14001223a:	mov    ebx,0x8008b7
   14001223f:	add    BYTE PTR [rax],al
   140012241:	add    BYTE PTR [rbx],al
   140012243:	mov    ebx,0x30bbbb
   140012248:	cmp    edi,DWORD PTR [rbx+0x88b0bb]
   14001224e:	add    BYTE PTR [rax],al
   140012250:	add    BYTE PTR [rax],al
   140012252:	add    edi,DWORD PTR [rbx+0xbbbb]
   140012258:	or     edi,DWORD PTR [rbx+0x8870bb]
   14001225e:	add    BYTE PTR [rax],al
   140012260:	add    BYTE PTR [rax],al
   140012262:	add    BYTE PTR [rbx],bh
   140012264:	mov    ebx,0xb0000bb
   140012269:	mov    ebx,0x8008bb
   14001226e:	add    BYTE PTR [rax],al
   140012270:	add    BYTE PTR [rax],al
   140012272:	add    BYTE PTR [rbx],bh
   140012274:	mov    ebx,0xb0000bb
   140012279:	mov    ebx,0x8008b7
   14001227e:	add    BYTE PTR [rax],al
   140012280:	add    BYTE PTR [rax],al
   140012282:	add    BYTE PTR [rbx],al
   140012284:	mov    ebx,0xb0000bb
   140012289:	mov    ebx,0x88b0
   14001228e:	add    BYTE PTR [rax],al
   140012290:	add    BYTE PTR [rax],al
   140012292:	add    BYTE PTR [rbx],al
   140012294:	mov    ebx,0xb0000bb
   140012299:	mov    ebx,0x8870
   14001229e:	add    BYTE PTR [rax],al
   1400122a0:	add    BYTE PTR [rax],al
   1400122a2:	add    BYTE PTR [rax],al
   1400122a4:	cmp    edi,DWORD PTR [rbx-0x4484ff90]
   1400122aa:	or     BYTE PTR [rax+0x0],al
   1400122b0:	add    BYTE PTR [rax],al
   1400122b2:	add    BYTE PTR [rax],al
   1400122b4:	cmp    edi,DWORD PTR [rbx-0x48444445]
   1400122ba:	or     BYTE PTR [rax+0x0],al
   1400122c0:	add    BYTE PTR [rax],al
   1400122c2:	add    BYTE PTR [rax],al
   1400122c4:	add    edi,DWORD PTR [rbx-0x4f444445]
   1400122ca:	mov    BYTE PTR [rax],al
	...
   1400122d4:	add    edi,DWORD PTR [rbx+0x70bbbbbb]
   1400122da:	mov    BYTE PTR [rax],al
	...
   1400122e4:	add    BYTE PTR [rbx],bh
   1400122e6:	mov    ebx,0x8008bbbb
	...
   1400122f3:	add    BYTE PTR [rax],al
   1400122f5:	cmp    edi,DWORD PTR [rbx-0x7ff74845]
	...
   140012303:	add    BYTE PTR [rax],al
   140012305:	add    edi,DWORD PTR [rbx+0x88b0bb]
	...
   140012313:	add    BYTE PTR [rax],al
   140012315:	add    edi,DWORD PTR [rbx+0x8070bb]
	...
   140012323:	add    BYTE PTR [rax],al
   140012325:	add    BYTE PTR [rbx],bh
   140012327:	mov    bh,0x0
	...
   140012335:	add    BYTE PTR [rbx],al
   140012337:	xor    eax,DWORD PTR [rax]
   140012339:	add    BYTE PTR [rax],al
   14001233b:	add    BYTE PTR [rax],al
   14001233d:	add    BYTE PTR [rax],al
   14001233f:	add    al,bh
   140012341:	add    BYTE PTR [rax],al
   140012343:	add    esi,eax
   140012345:	add    BYTE PTR [rax],al
   140012347:	add    eax,eax
   140012349:	add    BYTE PTR [rax],al
   14001234b:	add    BYTE PTR [rax+0x0],al
	...
   140012359:	add    BYTE PTR [rax],al
   14001235b:	add    DWORD PTR [rax],eax
   14001235d:	add    BYTE PTR [rax],al
   14001235f:	add    DWORD PTR [rax-0x7ffd0000],eax
   140012365:	add    BYTE PTR [rax],al
   140012367:	add    eax,eax
   140012369:	add    BYTE PTR [rax],al
   14001236b:	(bad)  
   14001236c:	rol    BYTE PTR [rax],0x0
   14001236f:	(bad)  
   140012370:	loopne 0x140012372
   140012372:	add    BYTE PTR [rdi],cl
   140012374:	loopne 0x140012376
   140012376:	add    BYTE PTR [rdi],cl
   140012378:	lock add BYTE PTR [rax],al
   14001237b:	(bad)  
   14001237c:	lock add BYTE PTR [rax],al
   14001237f:	(bad)  
   140012380:	clc    
   140012381:	add    BYTE PTR [rax],al
   140012383:	(bad)  
   140012384:	clc    
   140012385:	add    BYTE PTR [rax],al
   140012387:	(bad)  
   140012388:	cld    
   140012389:	add    BYTE PTR [rax],al
   14001238b:	jg     0x140012389
   14001238d:	add    BYTE PTR [rax],al
   14001238f:	jg     0x14001238f
   140012391:	add    BYTE PTR [rax],al
   140012393:	(bad)  
   140012394:	inc    BYTE PTR [rax]
   140012396:	add    bh,bh
   140012398:	inc    DWORD PTR [rax]
   14001239a:	add    edi,edi
   14001239c:	inc    DWORD PTR [rax]
   14001239e:	add    edi,edi
   1400123a0:	inc    DWORD PTR [rax-0x7f0000fd]
   1400123a6:	add    edi,edi
   1400123a8:	inc    eax
   1400123aa:	(bad)  
   1400123ab:	(bad)  
   1400123ac:	inc    eax
   1400123ae:	(bad)  
   1400123af:	(bad)  
   1400123b0:	jmp    rax
   1400123b2:	ud0    edi,edi
   1400123b5:	loopne 0x1400123d6
   1400123b7:	(bad)  
   1400123b8:	push   rax
   1400123ba:	jg     0x1400123bb
   1400123bc:	(bad)  
   1400123bd:	clc    
   1400123be:	(bad)  
   1400123bf:	jmp    FWORD PTR [rax]
   1400123c1:	add    BYTE PTR [rax],al
   1400123c3:	add    BYTE PTR [rax],ah
   1400123c5:	add    BYTE PTR [rax],al
   1400123c7:	add    BYTE PTR [rax+0x0],al
   1400123ca:	add    BYTE PTR [rax],al
   1400123cc:	add    DWORD PTR [rax],eax
   1400123ce:	add    DWORD PTR [rax],eax
   1400123d0:	add    BYTE PTR [rax],al
   1400123d2:	add    BYTE PTR [rax],al
   1400123d4:	add    BYTE PTR [rcx],al
	...
   1400123ea:	add    BYTE PTR [rax],al
   1400123ec:	(bad)  
   1400123ed:	(bad)  
   1400123ee:	inc    DWORD PTR [rax]
	...
   1400123fc:	(bad)  
   1400123fd:	(bad)  
   1400123fe:	inc    eax
   140012400:	jg     0x140012401
   140012402:	jmp    rax
   140012404:	jg     0x140012405
   140012406:	push   rax
   140012408:	jg     0x140012406
   14001240a:	push   rax
   14001240c:	jg     0x140012406
   14001240e:	jg     0x1400123f0
   140012410:	(bad)  
   140012411:	clc    
   140012412:	jg     0x1400123f4
   140012414:	(bad)  
   140012415:	cld    
   140012416:	inc    eax
   140012418:	(bad)  
   140012419:	(bad)  
   14001241a:	inc    eax
   14001241c:	(bad)  
   14001241d:	std    
   14001241e:	inc    DWORD PTR [rax-0x7f0002f1]
   140012424:	paddw  mm7,mm7
   140012427:	add    BYTE PTR [rdi],al
   140012429:	clc    
   14001242a:	inc    DWORD PTR [rax]
   14001242c:	(bad)  
   14001242d:	clc    
   14001242e:	inc    BYTE PTR [rax]
   140012430:	add    edi,eax
   140012432:	inc    BYTE PTR [rax]
   140012434:	add    esi,eax
   140012436:	jl     0x140012438
   140012438:	add    eax,esi
   14001243a:	jl     0x14001243c
   14001243c:	add    eax,esi
   14001243e:	js     0x140012440
   140012440:	add    al,dh
   140012442:	js     0x140012444
   140012444:	add    al,dh
   140012446:	jo     0x140012448
   140012448:	add    BYTE PTR [rax-0x10],bh
   14001244b:	add    BYTE PTR [rax],al
   14001244d:	jg     0x14001242f
   14001244f:	add    BYTE PTR [rax],al
   140012451:	(bad)  
   140012452:	loopne 0x140012454
   140012454:	add    BYTE PTR [rdi],bh
   140012456:	rol    BYTE PTR [rax],0x0
   140012459:	(bad)  
   14001245a:	rol    BYTE PTR [rax],0x0
   14001245d:	(bad)  
   14001245e:	add    BYTE PTR [rax],0x0
   140012461:	jo     0x140102467
   140012467:	add    BYTE PTR [rax],al
   140012469:	(bad)  
   14001246a:	add    BYTE PTR [rax],al
   14001246c:	add    BYTE PTR [rax],al
   14001246e:	add    BYTE PTR [rax],al
   140012470:	(bad)  
   140012471:	(bad)  
   140012472:	(bad)  
   140012473:	(bad)  
   140012474:	(bad)  
   140012475:	(bad)  
   140012476:	(bad)  
   140012477:	inc    eax
   140012479:	add    BYTE PTR [rax],al
   14001247b:	(bad)  
   14001247c:	add    BYTE PTR [rax],0x0
   14001247f:	sldt   WORD PTR [rax]
   140012482:	add    BYTE PTR [rdi],al
   140012484:	add    BYTE PTR [rax],al
   140012486:	add    BYTE PTR [rdi],al
   140012488:	add    BYTE PTR [rax],al
   14001248a:	add    BYTE PTR [rdi],al
   14001248c:	add    BYTE PTR [rax],al
   14001248e:	add    BYTE PTR [rdi],al
   140012490:	add    BYTE PTR [rax],0x0
   140012493:	jo     0x100102499
   140012499:	add    BYTE PTR [rax],al
   14001249b:	(bad)  
   14001249c:	rol    BYTE PTR [rax],0x0
   14001249f:	(bad)  
   1400124a0:	loopne 0x1400124a2
   1400124a2:	add    BYTE PTR [rdi],bh
   1400124a4:	loopne 0x1400124a6
   1400124a6:	add    BYTE PTR [rdi],bh
   1400124a8:	lock add BYTE PTR [rax],al
   1400124ab:	jg     0x14001249d
   1400124ad:	add    BYTE PTR [rax],al
   1400124af:	jg     0x1400124a9
   1400124b1:	add    BYTE PTR [rax],al
   1400124b3:	(bad)  
   1400124b4:	clc    
   1400124b5:	add    BYTE PTR [rax],al
   1400124b7:	(bad)  
   1400124b8:	cld    
   1400124b9:	add    BYTE PTR [rcx],al
   1400124bb:	(bad)  
   1400124bc:	cld    
   1400124bd:	add    BYTE PTR [rcx],al
   1400124bf:	(bad)  
   1400124c0:	inc    BYTE PTR [rax]
   1400124c2:	add    edi,edi
   1400124c4:	inc    BYTE PTR [rax]
   1400124c6:	add    edi,edi
   1400124c8:	inc    DWORD PTR [rax]
   1400124ca:	(bad)  
   1400124cb:	(bad)  
   1400124cc:	inc    DWORD PTR [rax]
   1400124ce:	(bad)  
   1400124cf:	(bad)  
   1400124d0:	inc    DWORD PTR [rax-0x7f0000f1]
   1400124d6:	ud0    edi,edi
   1400124d9:	rcr    BYTE PTR [rdi],0xff
   1400124dc:	inc    eax
   1400124de:	(bad)  
   1400124df:	(bad)  
   1400124e0:	jmp    rax
   1400124e2:	(bad)  
   1400124e3:	(bad)  
   1400124e4:	jmp    rax
   1400124e6:	(bad)  
   1400124e7:	(bad)  
   1400124e8:	push   rax
   1400124ea:	jg     0x1400124eb
   1400124ec:	(bad)  
   1400124ed:	clc    
   1400124ee:	(bad)  
   1400124ef:	inc    DWORD PTR [rax]
   1400124f1:	add    BYTE PTR [rcx],al
   1400124f3:	add    BYTE PTR [rdx],al
   1400124f5:	add    BYTE PTR [rax],ah
   1400124f7:	and    BYTE PTR [rax],dl
   1400124f9:	add    BYTE PTR [rcx],al
   1400124fb:	add    BYTE PTR [rax+rax*1],al
   1400124fe:	call   0x147012505
   140012503:	add    BYTE PTR [rax],ah
   140012505:	and    BYTE PTR [rdx],al
   140012507:	add    BYTE PTR [rcx],al
   140012509:	add    BYTE PTR [rcx],al
   14001250b:	add    BYTE PTR [rax],dh
   14001250d:	add    DWORD PTR [rax],eax
   14001250f:	add    BYTE PTR [rax],cl
   140012511:	add    BYTE PTR [rax],al
   140012513:	add    BYTE PTR [rax],al
   140012515:	add    BYTE PTR [rax],al
   140012517:	add    BYTE PTR [rax],ch
   140012519:	add    BYTE PTR [rax],al
   14001251b:	add    BYTE PTR [rax],ah
   14001251d:	add    BYTE PTR [rax],al
   14001251f:	add    BYTE PTR [rax+0x0],al
   140012522:	add    BYTE PTR [rax],al
   140012524:	add    DWORD PTR [rax],eax
   140012526:	add    al,0x0
   140012528:	add    BYTE PTR [rax],al
   14001252a:	add    BYTE PTR [rax],al
   14001252c:	add    BYTE PTR [rdx],al
	...
   140012546:	add    BYTE PTR [rax],0x0
   140012549:	add    BYTE PTR [rax],0x0
   14001254c:	add    BYTE PTR [rax+0x800080],al
   140012552:	add    BYTE PTR [rax],al
   140012554:	add    BYTE PTR [rax],0x80
   140012557:	add    BYTE PTR [rax-0x7fffff80],al
   14001255d:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140012564:	add    BYTE PTR [rax],al
   140012566:	inc    DWORD PTR [rax]
   140012568:	add    bh,bh
   14001256a:	add    BYTE PTR [rax],al
   14001256c:	add    bh,bh
   14001256e:	inc    DWORD PTR [rax]
   140012570:	inc    DWORD PTR [rax]
   140012572:	add    BYTE PTR [rax],al
   140012574:	inc    DWORD PTR [rax]
   140012576:	inc    DWORD PTR [rax]
   140012578:	(bad)  
   140012579:	inc    DWORD PTR [rax]
   14001257b:	add    bh,bh
   14001257d:	(bad)  
   14001257e:	inc    DWORD PTR [rax]
	...
   1400125a0:	add    BYTE PTR [rax],al
   1400125a2:	(bad)  
   1400125a3:	(bad)  
   1400125a4:	(bad)  
   1400125a5:	(bad)  
   1400125a6:	(bad)  
   1400125a7:	(bad)  
   1400125a8:	(bad)  
   1400125a9:	(bad)  
   1400125aa:	(bad)  
   1400125ab:	(bad)  
   1400125ac:	push   rax
   1400125ae:	add    BYTE PTR [rax],al
   1400125b0:	add    BYTE PTR [rax],al
   1400125b2:	(bad)  
   1400125b3:	(bad)  
   1400125b4:	(bad)  
   1400125b5:	(bad)  
   1400125b6:	(bad)  
   1400125b7:	(bad)  
   1400125b8:	(bad)  
   1400125b9:	(bad)  
   1400125ba:	(bad)  
   1400125bb:	(bad)  
   1400125bc:	push   rax
   1400125be:	add    BYTE PTR [rax],al
   1400125c0:	add    BYTE PTR [rax],al
   1400125c2:	(bad)  
   1400125c3:	(bad)  
   1400125c4:	(bad)  
   1400125c5:	(bad)  
   1400125c6:	(bad)  
   1400125c7:	(bad)  
   1400125c8:	(bad)  
   1400125c9:	(bad)  
   1400125ca:	(bad)  
   1400125cb:	(bad)  
   1400125cc:	push   rax
   1400125ce:	add    BYTE PTR [rax],al
   1400125d0:	add    BYTE PTR [rax],al
   1400125d2:	(bad)  
   1400125d3:	(bad)  
   1400125d4:	(bad)  
   1400125d5:	(bad)  
   1400125d6:	(bad)  
   1400125d7:	(bad)  
   1400125d8:	(bad)  
   1400125d9:	(bad)  
   1400125da:	(bad)  
   1400125db:	(bad)  
   1400125dc:	push   rax
   1400125de:	add    BYTE PTR [rax],al
   1400125e0:	add    BYTE PTR [rax],al
   1400125e2:	(bad)  
   1400125e3:	(bad)  
   1400125e4:	(bad)  
   1400125e5:	(bad)  
   1400125e6:	(bad)  
   1400125e7:	(bad)  
   1400125e8:	(bad)  
   1400125e9:	(bad)  
   1400125ea:	(bad)  
   1400125eb:	(bad)  
   1400125ec:	push   rax
   1400125ee:	add    BYTE PTR [rax],al
   1400125f0:	add    BYTE PTR [rax],al
   1400125f2:	(bad)  
   1400125f3:	(bad)  
   1400125f4:	(bad)  
   1400125f5:	inc    DWORD PTR [rdi-0x878889]
   1400125fb:	(bad)  
   1400125fc:	push   rax
   1400125fe:	add    BYTE PTR [rax],al
   140012600:	add    BYTE PTR [rax],al
   140012602:	(bad)  
   140012603:	(bad)  
   140012604:	(bad)  
   140012605:	dec    DWORD PTR [rdi-0x70001]
   14001260b:	(bad)  
   14001260c:	push   rax
   14001260e:	add    BYTE PTR [rax],al
   140012610:	add    BYTE PTR [rax],al
   140012612:	(bad)  
   140012613:	(bad)  
   140012614:	(bad)  
   140012615:	dec    DWORD PTR [rdi-0x7d918]
   14001261b:	(bad)  
   14001261c:	push   rax
   14001261e:	add    BYTE PTR [rax],al
   140012620:	add    BYTE PTR [rax],al
   140012622:	(bad)  
   140012623:	push   QWORD PTR [rdi+0x70]
   140012626:	(bad)  
   140012627:	out    dx,eax
   140012628:	jbe    0x140012622
   14001262a:	(bad)  
   14001262b:	ja     0x14001262c
   14001262d:	lock add BYTE PTR [rax],al
   140012630:	add    BYTE PTR [rax],al
   140012632:	(bad)  
   140012633:	(bad)  
   140012634:	jg     0x14001262c
   140012636:	xchg   DWORD PTR [rdi+0x77],esi
   140012639:	js     0x1400126aa
   14001263b:	idiv   edi
   14001263d:	lock add BYTE PTR [rax],al
   140012640:	add    BYTE PTR [rax],al
   140012642:	(bad)  
   140012643:	push   QWORD PTR [rdi+0x78]
   140012646:	mov    BYTE PTR [rax+0x77878888],cl
   14001264c:	push   rax
   14001264e:	add    BYTE PTR [rax],al
   140012650:	add    BYTE PTR [rax],al
   140012652:	(bad)  
   140012653:	(bad)  
   140012654:	js     0x1400125dd
   140012656:	ja     0x1400126cf
   140012658:	ja     0x1400126d1
   14001265a:	js     0x1400125e3
   14001265c:	push   rax
   14001265e:	add    BYTE PTR [rax],al
   140012660:	add    BYTE PTR [rax],al
   140012662:	(bad)  
   140012663:	(bad)  
   140012664:	js     0x1400125ed
   140012666:	ja     0x1400126df
   140012668:	ja     0x1400126e1
   14001266a:	js     0x1400125f3
   14001266c:	push   rax
   14001266e:	add    BYTE PTR [rax],al
   140012670:	add    BYTE PTR [rax],al
   140012672:	(bad)  
   140012673:	(bad)  
   140012674:	js     0x1400125fd
   140012676:	ja     0x1400126ef
   140012678:	ja     0x1400126f1
   14001267a:	js     0x140012603
   14001267c:	push   rax
   14001267e:	add    BYTE PTR [rax],al
   140012680:	add    BYTE PTR [rax],al
   140012682:	(bad)  
   140012683:	push   QWORD PTR [rdi-0x79]
   140012686:	ja     0x1400126ff
   140012688:	ja     0x140012701
   14001268a:	js     0x140012703
   14001268c:	push   rax
   14001268e:	add    BYTE PTR [rax],al
   140012690:	add    BYTE PTR [rax],al
   140012692:	(bad)  
   140012693:	push   rdi
   140012695:	ja     0x14001270e
   140012697:	ja     0x140012710
   140012699:	ja     0x140012712
   14001269b:	jg     0x14001269c
   14001269d:	lock add BYTE PTR [rax],al
   1400126a0:	add    BYTE PTR [rax],al
   1400126a2:	(bad)  
   1400126a3:	(bad)  
   1400126a4:	(bad)  
   1400126a5:	clc    
   1400126a6:	(bad)  
   1400126a7:	(bad)  
   1400126a8:	(bad)  
   1400126a9:	clc    
   1400126aa:	(bad)  
   1400126ab:	(bad)  
   1400126ac:	push   rax
   1400126ae:	add    BYTE PTR [rax],al
   1400126b0:	add    BYTE PTR [rax],al
   1400126b2:	(bad)  
   1400126b3:	(bad)  
   1400126b4:	(bad)  
   1400126b5:	clc    
   1400126b6:	(bad)  
   1400126b7:	(bad)  
   1400126b8:	(bad)  
   1400126b9:	clc    
   1400126ba:	(bad)  
   1400126bb:	(bad)  
   1400126bc:	push   rax
   1400126be:	add    BYTE PTR [rax],al
   1400126c0:	add    BYTE PTR [rax],al
   1400126c2:	(bad)  
   1400126c3:	(bad)  
   1400126c4:	(bad)  
   1400126c5:	clc    
   1400126c6:	(bad)  
   1400126c7:	(bad)  
   1400126c8:	(bad)  
   1400126c9:	clc    
   1400126ca:	(bad)  
   1400126cb:	(bad)  
   1400126cc:	push   rax
   1400126ce:	add    BYTE PTR [rax],al
   1400126d0:	add    BYTE PTR [rax],al
   1400126d2:	(bad)  
   1400126d3:	(bad)  
   1400126d4:	(bad)  
   1400126d5:	clc    
   1400126d6:	(bad)  
   1400126d7:	(bad)  
   1400126d8:	(bad)  
   1400126d9:	clc    
   1400126da:	(bad)  
   1400126db:	(bad)  
   1400126dc:	push   rax
   1400126de:	add    BYTE PTR [rax],al
   1400126e0:	add    BYTE PTR [rax],al
   1400126e2:	(bad)  
   1400126e3:	(bad)  
   1400126e4:	(bad)  
   1400126e5:	clc    
   1400126e6:	xchg   DWORD PTR [rdi+0x77],esi
   1400126e9:	js     0x14001267a
   1400126eb:	(bad)  
   1400126ec:	inc    DWORD PTR [rax+0x0]
   1400126f2:	(bad)  
   1400126f3:	(bad)  
   1400126f4:	(bad)  
   1400126f5:	(bad)  
   1400126f6:	(bad)  
   1400126f7:	(bad)  
   1400126f8:	(bad)  
   1400126f9:	(bad)  
   1400126fa:	(bad)  
   1400126fb:	clc    
   1400126fc:	mov    BYTE PTR [rax+0x0],al
   140012702:	(bad)  
   140012703:	(bad)  
   140012704:	(bad)  
   140012705:	(bad)  
   140012706:	(bad)  
   140012707:	(bad)  
   140012708:	(bad)  
   140012709:	(bad)  
   14001270a:	clc    
   14001270b:	mov    BYTE PTR [rax+0x80],cl
   140012711:	add    BYTE PTR [rdi-0x1],cl
   140012717:	(bad)  
   140012718:	(bad)  
   140012719:	(bad)  
   14001271a:	clc    
   14001271b:	(bad)  
   14001271c:	clc    
   14001271d:	add    BYTE PTR [rax],0x0
   140012720:	add    BYTE PTR [rax],al
   140012722:	(bad)  
   140012723:	(bad)  
   140012724:	(bad)  
   140012725:	(bad)  
   140012726:	(bad)  
   140012727:	(bad)  
   140012728:	(bad)  
   140012729:	(bad)  
   14001272a:	clc    
   14001272b:	inc    DWORD PTR [rax+0x0]
   140012731:	add    BYTE PTR [rdi-0x1],cl
   140012737:	(bad)  
   140012738:	(bad)  
   140012739:	(bad)  
   14001273a:	clc    
   14001273b:	clc    
   14001273c:	add    BYTE PTR [rax],al
   14001273e:	add    BYTE PTR [rax],al
   140012740:	add    BYTE PTR [rax],al
   140012742:	(bad)  
   140012743:	(bad)  
   140012744:	(bad)  
   140012745:	(bad)  
   140012746:	(bad)  
   140012747:	(bad)  
   140012748:	(bad)  
   140012749:	(bad)  
   14001274a:	clc    
   14001274b:	add    BYTE PTR [rax],0x0
   14001274e:	add    BYTE PTR [rax],al
   140012750:	add    BYTE PTR [rax],al
   140012752:	(bad)  
   140012753:	(bad)  
   140012754:	(bad)  
   140012755:	(bad)  
   140012756:	(bad)  
   140012757:	(bad)  
   140012758:	(bad)  
   140012759:	dec    DWORD PTR [rax+0x80]
   14001275f:	add    BYTE PTR [rax],al
   140012761:	add    BYTE PTR [rax-0x77777778],cl
   140012767:	mov    BYTE PTR [rax+0x8088],cl
	...
   14001277d:	add    BYTE PTR [rax],al
   14001277f:	add    bh,bh
   140012781:	(bad)  
   140012782:	(bad)  
   140012783:	(bad)  
   140012784:	(bad)  
   140012785:	(bad)  
   140012786:	(bad)  
   140012787:	push   rax
   140012789:	add    BYTE PTR [rax],al
   14001278b:	(bad)  
   14001278c:	lock add BYTE PTR [rax],al
   14001278f:	(bad)  
   140012790:	lock add BYTE PTR [rax],al
   140012793:	(bad)  
   140012794:	lock add BYTE PTR [rax],al
   140012797:	(bad)  
   140012798:	lock add BYTE PTR [rax],al
   14001279b:	(bad)  
   14001279c:	lock add BYTE PTR [rax],al
   14001279f:	(bad)  
   1400127a0:	lock add BYTE PTR [rax],al
   1400127a3:	(bad)  
   1400127a4:	lock add BYTE PTR [rax],al
   1400127a7:	(bad)  
   1400127a8:	lock add BYTE PTR [rax],al
   1400127ab:	(bad)  
   1400127ac:	lock add BYTE PTR [rax],al
   1400127af:	(bad)  
   1400127b0:	lock add BYTE PTR [rax],al
   1400127b3:	(bad)  
   1400127b4:	lock add BYTE PTR [rax],al
   1400127b7:	(bad)  
   1400127b8:	lock add BYTE PTR [rax],al
   1400127bb:	(bad)  
   1400127bc:	lock add BYTE PTR [rax],al
   1400127bf:	(bad)  
   1400127c0:	lock add BYTE PTR [rax],al
   1400127c3:	(bad)  
   1400127c4:	lock add BYTE PTR [rax],al
   1400127c7:	(bad)  
   1400127c8:	lock add BYTE PTR [rax],al
   1400127cb:	(bad)  
   1400127cc:	lock add BYTE PTR [rax],al
   1400127cf:	(bad)  
   1400127d0:	lock add BYTE PTR [rax],al
   1400127d3:	(bad)  
   1400127d4:	lock add BYTE PTR [rax],al
   1400127d7:	(bad)  
   1400127d8:	lock add BYTE PTR [rax],al
   1400127db:	(bad)  
   1400127dc:	lock add BYTE PTR [rax],al
   1400127df:	(bad)  
   1400127e0:	lock add BYTE PTR [rax],al
   1400127e3:	(bad)  
   1400127e4:	lock add BYTE PTR [rax],al
   1400127e7:	(bad)  
   1400127e8:	lock add BYTE PTR [rax],al
   1400127eb:	jg     0x1400127dd
   1400127ed:	add    BYTE PTR [rax],al
   1400127ef:	push   rax
   1400127f1:	add    BYTE PTR [rcx],al
   1400127f3:	push   rax
   1400127f5:	add    BYTE PTR [rcx],al
   1400127f7:	push   rax
   1400127f9:	add    BYTE PTR [rdi],al
   1400127fb:	(bad)  
   1400127fc:	(bad)  
   1400127fd:	(bad)  
   1400127fe:	(bad)  
   1400127ff:	jmp    FWORD PTR [rax]
   140012801:	add    BYTE PTR [rax],al
   140012803:	add    BYTE PTR [rax],dl
   140012805:	add    BYTE PTR [rax],al
   140012807:	add    BYTE PTR [rax],ah
   140012809:	add    BYTE PTR [rax],al
   14001280b:	add    BYTE PTR [rcx],al
   14001280d:	add    BYTE PTR [rax+rax*1],al
   140012810:	add    BYTE PTR [rax],al
   140012812:	add    BYTE PTR [rax],al
   140012814:	add    BYTE PTR [rax],0x0
	...
   14001282b:	add    BYTE PTR [rax],al
   14001282d:	add    BYTE PTR [rax+0x800000],al
   140012833:	add    BYTE PTR [rax],al
   140012835:	add    BYTE PTR [rax+0x8000],0x0
   14001283c:	add    BYTE PTR [rax],0x80
   14001283f:	add    BYTE PTR [rax-0x7fffff80],al
   140012845:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14001284c:	add    BYTE PTR [rax],al
   14001284e:	inc    DWORD PTR [rax]
   140012850:	add    bh,bh
   140012852:	add    BYTE PTR [rax],al
   140012854:	add    bh,bh
   140012856:	inc    DWORD PTR [rax]
   140012858:	inc    DWORD PTR [rax]
   14001285a:	add    BYTE PTR [rax],al
   14001285c:	inc    DWORD PTR [rax]
   14001285e:	inc    DWORD PTR [rax]
   140012860:	(bad)  
   140012861:	inc    DWORD PTR [rax]
   140012863:	add    bh,bh
   140012865:	(bad)  
   140012866:	inc    DWORD PTR [rax]
   140012868:	add    BYTE PTR [rdi+0x77],dh
   14001286b:	ja     0x1400128e4
   14001286d:	ja     0x1400128e6
   14001286f:	add    BYTE PTR [rax],al
   140012871:	jg     0x140012872
   140012873:	(bad)  
   140012874:	(bad)  
   140012875:	push   rdi
   140012877:	add    BYTE PTR [rax],al
   140012879:	jg     0x14001287a
   14001287b:	ja     0x1400128f4
   14001287d:	push   rdi
   14001287f:	add    BYTE PTR [rax],al
   140012881:	jg     0x1400128fa
   140012883:	mov    ?,WORD PTR [rax+0x77]
   140012886:	test   DWORD PTR [rax],0x777f8f00
   14001288c:	ja     0x140012885
   14001288e:	clc    
   14001288f:	add    BYTE PTR [rax],al
   140012891:	(bad)  
   140012892:	js     0x14001281c
   140012894:	mov    BYTE PTR [rdi-0x70ffff08],al
   14001289a:	ja     0x140012913
   14001289c:	ja     0x140012915
   14001289e:	clc    
   14001289f:	add    BYTE PTR [rax],al
   1400128a1:	(bad)  
   1400128a2:	clc    
   1400128a3:	(bad)  
   1400128a4:	dec    DWORD PTR [rdi-0x70ffff08]
   1400128aa:	clc    
   1400128ab:	(bad)  
   1400128ac:	dec    DWORD PTR [rdi-0x70ffff08]
   1400128b2:	clc    
   1400128b3:	mov    BYTE PTR [rax+0xf88f],cl
   1400128b9:	(bad)  
   1400128ba:	(bad)  
   1400128bb:	(bad)  
   1400128bc:	(bad)  
   1400128bd:	dec    DWORD PTR [rax-0x710000]
   1400128c3:	(bad)  
   1400128c4:	dec    DWORD PTR [rax-0x70ffff78]
   1400128ca:	(bad)  
   1400128cb:	(bad)  
   1400128cc:	dec    DWORD PTR [rdi-0x70ffff80]
   1400128d2:	(bad)  
   1400128d3:	(bad)  
   1400128d4:	dec    DWORD PTR [rax-0x78000000]
   1400128da:	mov    BYTE PTR [rax+0x8088],cl
	...
   1400128e8:	rol    BYTE PTR [rbx],0x0
   1400128eb:	add    al,al
   1400128ed:	add    eax,DWORD PTR [rax]
   1400128ef:	add    al,al
   1400128f1:	add    eax,DWORD PTR [rax]
   1400128f3:	add    al,al
   1400128f5:	add    eax,DWORD PTR [rax]
   1400128f7:	add    al,al
   1400128f9:	add    eax,DWORD PTR [rax]
   1400128fb:	add    al,al
   1400128fd:	add    eax,DWORD PTR [rax]
   1400128ff:	add    al,al
   140012901:	add    eax,DWORD PTR [rax]
   140012903:	add    al,al
   140012905:	add    eax,DWORD PTR [rax]
   140012907:	add    al,al
   140012909:	add    eax,DWORD PTR [rax]
   14001290b:	add    al,al
   14001290d:	add    eax,DWORD PTR [rax]
   14001290f:	add    al,al
   140012911:	add    eax,DWORD PTR [rax]
   140012913:	add    al,al
   140012915:	add    eax,DWORD PTR [rax]
   140012917:	add    al,al
   140012919:	(bad)  
   14001291a:	add    BYTE PTR [rax],al
   14001291c:	ror    BYTE PTR [rdi],0x0
   14001291f:	add    al,al
   140012921:	(bad)  
   140012922:	add    BYTE PTR [rax],al
   140012924:	(bad)  
   140012925:	inc    DWORD PTR [rax]
   140012927:	add    BYTE PTR [rax],ch
   140012929:	add    BYTE PTR [rax],al
   14001292b:	add    BYTE PTR [rax],ah
   14001292d:	add    BYTE PTR [rax],al
   14001292f:	add    BYTE PTR [rax+0x0],al
   140012932:	add    BYTE PTR [rax],al
   140012934:	add    DWORD PTR [rax],eax
   140012936:	or     BYTE PTR [rax],al
   140012938:	add    BYTE PTR [rax],al
   14001293a:	add    BYTE PTR [rax],al
   14001293c:	add    BYTE PTR [rax+rax*1],al
	...
   140012947:	add    BYTE PTR [rax],al
   140012949:	add    DWORD PTR [rax],eax
   14001294b:	add    BYTE PTR [rax],al
   14001294d:	add    DWORD PTR [rax],eax
   14001294f:	add    BYTE PTR [rax],al
   140012951:	add    BYTE PTR [rax],al
   140012953:	add    BYTE PTR [rbx+riz*1],dh
   140012956:	and    eax,DWORD PTR [rax]
   140012958:	cmp    BYTE PTR [rdi+0x23],bl
   14001295b:	add    BYTE PTR [rbp+0x40],al
   14001295e:	(bad)  
   14001295f:	add    BYTE PTR [rdx+0x5a],dl
   140012962:	rex.X add BYTE PTR [rbx+0x53],dl
   140012966:	push   rbx
   140012967:	add    BYTE PTR [rbx+0x57],ah
   14001296a:	rex.X add BYTE PTR [rdi+0x67],spl
   14001296e:	add    BYTE PTR [edi+0x77],dh
   140012972:	ja     0x140012974
   140012974:	jp     0x1400129f0
   140012976:	jp     0x140012978
   140012978:	test   BYTE PTR [rcx+0x18],bl
   14001297b:	add    BYTE PTR [rbp-0x75ffd495],cl
   140012981:	ins    DWORD PTR es:[rdi],dx
   140012982:	rex.WRXB add BYTE PTR [r8-0x78],r14b
   140012986:	rex.WRXB add BYTE PTR [r8-0x4ff8b7f],r9b
   14001298d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001298e:	rex.WR add BYTE PTR [rax-0x75ff7778],r9b
   140012995:	mov    ecx,DWORD PTR [rax+rax*1+0x989898]
   14001299c:	sahf   
   14001299d:	sahf   
   14001299e:	sahf   
   14001299f:	add    BYTE PTR [rax-0x55ff6b42],ch
   1400129a5:	stos   BYTE PTR es:[rdi],al
   1400129a6:	stos   BYTE PTR es:[rdi],al
   1400129a7:	add    BYTE PTR [rbp-0x4dff5253],ch
   1400129ad:	mov    dl,0xb2
   1400129af:	add    BYTE PTR [rax-0x47ff4d4b],bh
   1400129b5:	mov    eax,0xbebe00b8
   1400129ba:	mov    esi,0xb9bdc200
   1400129bf:	add    BYTE PTR [rdi-0x3cff4b01],dl
   1400129c5:	ret    
   1400129c6:	ret    
   1400129c7:	add    dh,al
   1400129c9:	mov    dh,0x0
   1400129cc:	int3   
   1400129cd:	mov    al,0x0
   1400129d0:	leave  
   1400129d1:	leave  
   1400129d2:	leave  
   1400129d3:	add    ch,cl
   1400129d5:	int    0xcd
   1400129d7:	add    bl,dl
   1400129d9:	retf   
   1400129da:	(bad)  
   1400129db:	add    ch,dl
   1400129dd:	(bad)  
   1400129de:	(bad)  
   1400129df:	add    ah,bl
   1400129e1:	fstp   st(5)
   1400129e3:	add    dl,ah
   1400129e5:	fcmovbe st,st(3)
   1400129e7:	add    ch,ch
   1400129e9:	out    dx,al
   1400129ea:	fld    DWORD PTR [rax]
   1400129ec:	jrcxz  0x1400129d1
   1400129ee:	jrcxz  0x1400129f0
   1400129f0:	in     al,0xe4
   1400129f2:	in     al,0x0
   1400129f4:	(bad)  
   1400129f5:	(bad)  
   1400129f6:	(bad)  
   1400129f7:	add    ch,dh
   1400129f9:	repz hlt 
   1400129fb:	add    dh,dh
   1400129fd:	div    dh
   1400129ff:	add    al,bh
   140012a01:	div    esi
   140012a03:	add    bh,dh
   140012a05:	clc    
   140012a06:	clc    
   140012a07:	add    cl,bh
   140012a09:	stc    
   140012a0a:	stc    
   140012a0b:	add    bl,bh
   140012a0d:	cld    
   140012a0e:	cld    
   140012a0f:	add    ch,bh
   140012a11:	std    
   140012a12:	std    
	...
   140012d4b:	add    bh,bh
   140012d4d:	(bad)  
   140012d4e:	inc    DWORD PTR [rax]
	...
   140012d94:	and    ebp,DWORD PTR [rsi]
   140012d96:	cs cs cs cs cs sub eax,0x2d2d2d2d
   140012da0:	sub    eax,0x2d2d2d2d
   140012da5:	sub    eax,0x2d2d2d2d
   140012daa:	sub    eax,0x0
   140012daf:	add    BYTE PTR [rax],al
   140012db1:	add    BYTE PTR [rax],al
   140012db3:	add    BYTE PTR [rbx],ah
   140012db5:	cs cs cs cs cs cs sub eax,0x2d2d2d2d
   140012dc0:	sub    eax,0x2d2d2d2d
   140012dc5:	sub    eax,0x2d2d2d2d
   140012dca:	sub    eax,0x0
   140012dcf:	add    BYTE PTR [rax],al
   140012dd1:	add    BYTE PTR [rax],al
   140012dd3:	add    BYTE PTR [rbx],ah
   140012dd5:	cs cs cs cs cs cs cs sub eax,0x2d2d2d2d
   140012de1:	sub    eax,0x2d2d2d2d
   140012de6:	sub    eax,0x2d2d2d2d
	...
   140012df3:	add    BYTE PTR [rbx],ah
   140012df5:	cs cs cs cs cs cs cs cs cs sub eax,0x2d2d2d2d
   140012e03:	sub    eax,0x2d2d2d2d
   140012e08:	sub    eax,0x2d2d
   140012e0d:	add    BYTE PTR [rax],al
   140012e0f:	add    BYTE PTR [rax],al
   140012e11:	add    BYTE PTR [rax],al
   140012e13:	add    BYTE PTR [rbx],ah
   140012e15:	cs cs cs cs cs cs cs cs cs cs cs (bad)
   140012e24:	sub    eax,0x2d2d2d2d
   140012e29:	sub    eax,0x2d
   140012e2e:	add    BYTE PTR [rax],al
   140012e30:	add    BYTE PTR [rax],al
   140012e32:	add    BYTE PTR [rax],al
   140012e34:	and    ebp,DWORD PTR [rsi]
   140012e36:	cs cs cs cs cs cs adc eax,0x12121212
   140012e41:	adc    dl,BYTE PTR [rdx]
   140012e43:	adc    eax,0x2d2d2d2d
   140012e48:	sub    eax,0x2d2d
   140012e4d:	add    BYTE PTR [rax],al
   140012e4f:	add    BYTE PTR [rax],al
   140012e51:	add    BYTE PTR [rax],al
   140012e53:	add    BYTE PTR [rbx],ah
   140012e55:	cs cs cs cs cs cs cs adc eax,0x2e2e2e2e
   140012e61:	cs cs adc eax,0x2d2d2d2d
   140012e68:	sub    eax,0x2d2d
   140012e6d:	add    BYTE PTR [rax],al
   140012e6f:	add    BYTE PTR [rax],al
   140012e71:	add    BYTE PTR [rax],al
   140012e73:	add    BYTE PTR [rbx],ah
   140012e75:	cs cs cs cs cs cs cs adc eax,0x2140f2e
   140012e81:	or     ch,BYTE PTR [rsi]
   140012e83:	adc    eax,0x2d2d2d2d
   140012e88:	sub    eax,0x2d2d
   140012e8d:	add    BYTE PTR [rax],al
   140012e8f:	add    BYTE PTR [rax],al
   140012e91:	add    BYTE PTR [rax],al
   140012e93:	add    BYTE PTR [rbx],ah
   140012e95:	cs cs adc dl,BYTE PTR cs:[rdx]
   140012e9a:	adc    al,BYTE PTR [rcx]
   140012e9c:	adc    eax,0xd260f2e
   140012ea1:	or     ebp,DWORD PTR [rsi]
   140012ea3:	adc    eax,0x12121201
   140012ea8:	sub    eax,0x2d2d
   140012ead:	add    BYTE PTR [rax],al
   140012eaf:	add    BYTE PTR [rax],al
   140012eb1:	add    BYTE PTR [rax],al
   140012eb3:	add    BYTE PTR [rbx],ah
   140012eb5:	cs cs or BYTE PTR cs:[rip+0x1115032d],ch        # 0x1511631eb
   140012ebe:	or     al,0xe
   140012ec0:	add    al,0x6
   140012ec2:	adc    DWORD PTR [rip+0x82d2d03],edx        # 0x1482e5bcb
   140012ec8:	sub    eax,0x2d2d
   140012ecd:	add    BYTE PTR [rax],al
   140012ecf:	add    BYTE PTR [rax],al
   140012ed1:	add    BYTE PTR [rax],al
   140012ed3:	add    BYTE PTR [rbx],ah
   140012ed5:	cs cs or BYTE PTR cs:[rdx],dl
   140012eda:	adc    ah,BYTE PTR [rip+0x25252525]        # 0x165265405
   140012ee0:	and    eax,0x25252525
   140012ee5:	adc    dl,BYTE PTR [rdx]
   140012ee7:	or     BYTE PTR [rip+0x2d2d],ch        # 0x140015c1a
   140012eed:	add    BYTE PTR [rax],al
   140012eef:	add    BYTE PTR [rax],al
   140012ef1:	add    BYTE PTR [rax],al
   140012ef3:	add    BYTE PTR [rbx],ah
   140012ef5:	cs cs or BYTE PTR cs:[rax],bl
   140012efa:	sbb    BYTE PTR [rip+0x5050505],al        # 0x145063405
   140012f00:	add    eax,0x5050505
   140012f05:	sbb    BYTE PTR [rax+rcx*1],bl
   140012f08:	cs sub eax,0x2d
   140012f0e:	add    BYTE PTR [rax],al
   140012f10:	add    BYTE PTR [rax],al
   140012f12:	add    BYTE PTR [rax],al
   140012f14:	and    ebp,DWORD PTR [rsi]
   140012f16:	cs or  BYTE PTR cs:[rbx],bl
   140012f1a:	sbb    eax,DWORD PTR [rip+0x5050505]        # 0x145063425
   140012f20:	add    eax,0x5050505
   140012f25:	sbb    ebx,DWORD PTR [rbx]
   140012f27:	or     BYTE PTR [rsi],ch
   140012f29:	cs sub eax,0x0
   140012f2f:	add    BYTE PTR [rax],al
   140012f31:	add    BYTE PTR [rax],al
   140012f33:	add    BYTE PTR [rbx],ah
   140012f35:	cs cs or BYTE PTR cs:[rdi],bl
   140012f3a:	(bad)  
   140012f3b:	(bad)  
   140012f3c:	(bad)  
   140012f3d:	(bad)  
   140012f3e:	(bad)  
   140012f3f:	(bad)  
   140012f40:	(bad)  
   140012f41:	(bad)  
   140012f42:	(bad)  
   140012f43:	(bad)  
   140012f44:	(bad)  
   140012f45:	(bad)  
   140012f46:	(bad)  
   140012f47:	or     BYTE PTR [rsi],ch
   140012f49:	cs add BYTE PTR cs:[rax],al
   140012f4d:	add    BYTE PTR [rax],al
   140012f4f:	add    BYTE PTR [rax],al
   140012f51:	add    BYTE PTR [rax],al
   140012f53:	add    BYTE PTR [rbx],ah
   140012f55:	cs cs adc DWORD PTR cs:[rax],ecx
   140012f5a:	and    cl,BYTE PTR [rcx]
   140012f5c:	or     DWORD PTR [rcx],ecx
   140012f5e:	or     DWORD PTR [rcx],ecx
   140012f60:	or     DWORD PTR [rcx],ecx
   140012f62:	or     DWORD PTR [rcx],ecx
   140012f64:	or     DWORD PTR [rdx],esp
   140012f66:	or     BYTE PTR [rcx],dl
   140012f68:	cs cs add BYTE PTR cs:[rax],al
   140012f6d:	add    BYTE PTR [rax],al
   140012f6f:	add    BYTE PTR [rax],al
   140012f71:	add    BYTE PTR [rax],al
   140012f73:	add    BYTE PTR [rbx],ah
   140012f75:	cs cs cs adc cl,BYTE PTR cs:[rax]
   140012f7b:	adc    DWORD PTR [rcx],edx
   140012f7d:	adc    DWORD PTR [rcx],edx
   140012f7f:	adc    DWORD PTR [rcx],edx
   140012f81:	adc    DWORD PTR [rcx],edx
   140012f83:	adc    DWORD PTR [rcx],edx
   140012f85:	or     BYTE PTR [rdx],dl
   140012f87:	cs cs cs add BYTE PTR cs:[rax],al
   140012f8d:	add    BYTE PTR [rax],al
   140012f8f:	add    BYTE PTR [rax],al
   140012f91:	add    BYTE PTR [rax],al
   140012f93:	add    BYTE PTR [rbx],ah
   140012f95:	cs cs cs cs cs cs and al,0x15
   140012f9d:	cs cs cs cs cs cs adc eax,0x2e2e2e24
   140012fa8:	cs cs add BYTE PTR cs:[rax],al
   140012fad:	add    BYTE PTR [rax],al
   140012faf:	add    BYTE PTR [rax],al
   140012fb1:	add    BYTE PTR [rax],al
   140012fb3:	add    BYTE PTR [rbx],ah
   140012fb5:	cs cs cs cs cs cs and al,0x15
   140012fbd:	cs cs cs cs cs cs adc eax,0x2e2e2e24
   140012fc8:	cs cs add BYTE PTR cs:[rax],al
   140012fcd:	add    BYTE PTR [rax],al
   140012fcf:	add    BYTE PTR [rax],al
   140012fd1:	add    BYTE PTR [rax],al
   140012fd3:	add    BYTE PTR [rbx],ah
   140012fd5:	cs cs cs cs cs cs and al,0x15
   140012fdd:	sub    al,0x2c
   140012fdf:	sub    al,0x2c
   140012fe1:	sub    al,0x2c
   140012fe3:	adc    eax,0x2e2e2e24
   140012fe8:	cs cs add BYTE PTR cs:[rax],al
   140012fed:	add    BYTE PTR [rax],al
   140012fef:	add    BYTE PTR [rax],al
   140012ff1:	add    BYTE PTR [rax],al
   140012ff3:	add    BYTE PTR [rbx],ah
   140012ff5:	cs cs cs cs cs cs and al,0x15
   140012ffd:	sub    al,0x2c
   140012fff:	sub    al,0x2c
   140013001:	sub    al,0x2c
   140013003:	adc    eax,0x2e2e2e24
   140013008:	cs cs add BYTE PTR cs:[rax],al
   14001300d:	add    BYTE PTR [rax],al
   14001300f:	add    BYTE PTR [rax],al
   140013011:	add    BYTE PTR [rax],al
   140013013:	add    BYTE PTR [rbx],ah
   140013015:	cs cs cs cs cs cs and al,0x15
   14001301d:	adc    dl,BYTE PTR [rdx]
   14001301f:	adc    dl,BYTE PTR [rdx]
   140013021:	adc    dl,BYTE PTR [rdx]
   140013023:	adc    eax,0x2e2e2e24
   140013028:	cs and eax,DWORD PTR cs:[rax]
	...
   140013034:	and    ebp,DWORD PTR [rsi]
   140013036:	cs cs cs cs cs cs cs cs cs cs cs cs cs cs
   140013044:	cs cs and esp,DWORD PTR cs:[rcx]
   140013049:	sbb    bl,BYTE PTR [rdx]
	...
   140013053:	add    BYTE PTR [rbx],ah
   140013055:	cs cs cs cs cs cs cs cs cs cs cs cs cs cs
   140013063:	cs cs (bad) 
   140013066:	adc    eax,0x1a151515
	...
   140013073:	add    BYTE PTR [rbx],ah
   140013075:	cs cs cs cs cs cs cs cs cs cs cs cs cs cs
   140013083:	cs cs (bad) 
   140013086:	sub    eax,0x151a272d
	...
   140013093:	add    BYTE PTR [rbx],ah
   140013095:	cs cs cs cs cs cs cs cs cs cs cs cs cs cs
   1400130a3:	cs and DWORD PTR cs:[rsi],ebp
   1400130a7:	sub    DWORD PTR [rcx],esp
	...
   1400130b1:	add    BYTE PTR [rax],al
   1400130b3:	add    BYTE PTR [rbx],ah
   1400130b5:	cs cs cs cs cs cs cs cs cs cs cs cs cs cs
   1400130c3:	cs and DWORD PTR cs:[rdi],esp
   1400130c7:	and    DWORD PTR [rax],eax
	...
   1400130d1:	add    BYTE PTR [rax],al
   1400130d3:	add    BYTE PTR [rbx],ah
   1400130d5:	cs cs cs cs cs cs cs cs cs cs cs cs cs cs
   1400130e3:	sub    DWORD PTR cs:[rsi],ebx
   1400130e6:	(bad)  
	...
   1400130f3:	add    BYTE PTR [rbx],ah
   1400130f5:	cs cs cs cs cs cs cs cs cs cs cs cs cs cs
   140013103:	cs and al,0x1a
   140013106:	(bad)  
	...
   140013113:	add    BYTE PTR [rbx],ah
   140013115:	and    esp,DWORD PTR [rbx]
   140013117:	and    esp,DWORD PTR [rbx]
   140013119:	and    esp,DWORD PTR [rbx]
   14001311b:	and    esp,DWORD PTR [rbx]
   14001311d:	and    esp,DWORD PTR [rbx]
   14001311f:	and    esp,DWORD PTR [rbx]
   140013121:	and    esp,DWORD PTR [rbx]
   140013123:	and    esp,DWORD PTR [rcx]
	...
   14001314d:	add    BYTE PTR [rax],al
   14001314f:	add    bh,bh
   140013151:	(bad)  
   140013152:	(bad)  
   140013153:	(bad)  
   140013154:	(bad)  
   140013155:	(bad)  
   140013156:	(bad)  
   140013157:	push   rax
   140013159:	add    BYTE PTR [rax],al
   14001315b:	(bad)  
   14001315c:	lock add BYTE PTR [rax],al
   14001315f:	(bad)  
   140013160:	lock add BYTE PTR [rax],al
   140013163:	(bad)  
   140013164:	lock add BYTE PTR [rax],al
   140013167:	(bad)  
   140013168:	lock add BYTE PTR [rax],al
   14001316b:	(bad)  
   14001316c:	lock add BYTE PTR [rax],al
   14001316f:	(bad)  
   140013170:	lock add BYTE PTR [rax],al
   140013173:	(bad)  
   140013174:	lock add BYTE PTR [rax],al
   140013177:	(bad)  
   140013178:	lock add BYTE PTR [rax],al
   14001317b:	(bad)  
   14001317c:	lock add BYTE PTR [rax],al
   14001317f:	(bad)  
   140013180:	lock add BYTE PTR [rax],al
   140013183:	(bad)  
   140013184:	lock add BYTE PTR [rax],al
   140013187:	(bad)  
   140013188:	lock add BYTE PTR [rax],al
   14001318b:	(bad)  
   14001318c:	lock add BYTE PTR [rax],al
   14001318f:	(bad)  
   140013190:	lock add BYTE PTR [rax],al
   140013193:	(bad)  
   140013194:	lock add BYTE PTR [rax],al
   140013197:	(bad)  
   140013198:	lock add BYTE PTR [rax],al
   14001319b:	(bad)  
   14001319c:	lock add BYTE PTR [rax],al
   14001319f:	(bad)  
   1400131a0:	lock add BYTE PTR [rax],al
   1400131a3:	(bad)  
   1400131a4:	lock add BYTE PTR [rax],al
   1400131a7:	(bad)  
   1400131a8:	lock add BYTE PTR [rax],al
   1400131ab:	(bad)  
   1400131ac:	lock add BYTE PTR [rax],al
   1400131af:	(bad)  
   1400131b0:	lock add BYTE PTR [rax],al
   1400131b3:	(bad)  
   1400131b4:	lock add BYTE PTR [rax],al
   1400131b7:	(bad)  
   1400131b8:	lock add BYTE PTR [rax],al
   1400131bb:	jg     0x1400131ad
   1400131bd:	add    BYTE PTR [rax],al
   1400131bf:	push   rax
   1400131c1:	add    BYTE PTR [rcx],al
   1400131c3:	push   rax
   1400131c5:	add    BYTE PTR [rcx],al
   1400131c7:	push   rax
   1400131c9:	add    BYTE PTR [rdi],al
   1400131cb:	(bad)  
   1400131cc:	(bad)  
   1400131cd:	(bad)  
   1400131ce:	(bad)  
   1400131cf:	jmp    FWORD PTR [rax]
   1400131d1:	add    BYTE PTR [rax],al
   1400131d3:	add    BYTE PTR [rax],dl
   1400131d5:	add    BYTE PTR [rax],al
   1400131d7:	add    BYTE PTR [rax],ah
   1400131d9:	add    BYTE PTR [rax],al
   1400131db:	add    BYTE PTR [rcx],al
   1400131dd:	add    BYTE PTR [rax],cl
   1400131df:	add    BYTE PTR [rax],al
   1400131e1:	add    BYTE PTR [rax],al
   1400131e3:	add    BYTE PTR [rax],al
   1400131e5:	add    DWORD PTR [rax],eax
	...
   1400131ef:	add    BYTE PTR [rax],al
   1400131f1:	add    DWORD PTR [rax],eax
   1400131f3:	add    BYTE PTR [rax],al
   1400131f5:	add    DWORD PTR [rax],eax
   1400131f7:	add    BYTE PTR [rax],al
   1400131f9:	add    BYTE PTR [rax],al
   1400131fb:	add    BYTE PTR [rcx+0x49],cl
   1400131fe:	rex.WB add BYTE PTR [r10+0x5a],dl
   140013202:	rex.X add BYTE PTR [rdi+0x77],sil
   140013206:	ja     0x140013208
   140013208:	jp     0x140013284
   14001320a:	jp     0x14001320c
   14001320c:	mov    ch,BYTE PTR [rbp+0x4f]
   14001320f:	add    BYTE PTR [rax-0x78],dh
   140013212:	rex.WRXB add r15b,r12b
   140013215:	(bad)
   140013218:	xchg   BYTE PTR [rsi-0x7777ff7a],al
   14001321e:	mov    BYTE PTR [rax],al
   140013220:	nop
   140013221:	nop
   140013222:	nop
   140013223:	add    BYTE PTR [rax-0x62ff6768],bl
   140013229:	popf   
   14001322a:	popf   
   14001322b:	add    BYTE PTR [rbx-0x53ff5958],ch
   140013231:	lods   al,BYTE PTR ds:[rsi]
   140013232:	lods   al,BYTE PTR ds:[rsi]
   140013233:	add    BYTE PTR [rdx-0x46ff4d4e],dh
   140013239:	mov    ecx,0xbdbd00b9
   14001323e:	mov    ebp,0xc0c0c000
   140013243:	add    ch,al
   140013245:	(bad)
   140013248:	retf   0xcaca
   14001324b:	add    ch,cl
   14001324d:	int    0xcd
   14001324f:	add    dl,ah
   140013251:	fcmovbe st,st(2)
   140013253:	add    bh,bl
   140013255:	fnstsw ax
   140013257:	add    ch,ah
   140013259:	in     eax,0xe6
   14001325b:	add    dl,ch
   14001325d:	jmp    0x12ef0334d
   140013262:	out    dx,eax
   140013263:	add    cl,dh
   140013265:	icebp  
   140013266:	repnz add dl,dh
   140013269:	repnz hlt 
   14001326b:	add    ch,dh
   14001326d:	repz hlt 
   14001326f:	add    bl,dh
   140013271:	hlt    
   140013272:	cmc    
   140013273:	add    ch,dh
   140013275:	cmc    
   140013276:	test   BYTE PTR [rax],0xf6
   140013279:	idiv   eax
   14001327b:	add    bh,dh
   14001327d:	clc    
   14001327e:	stc    
   14001327f:	add    cl,bh
   140013281:	cli    
   140013282:	cli    
   140013283:	add    dl,bh
   140013285:	sti    
   140013286:	cld    
   140013287:	add    bl,bh
   140013289:	cld    
   14001328a:	cld    
   14001328b:	add    dh,bh
   14001328d:	(bad)  
   14001328e:	inc    BYTE PTR [rax]
	...
   1400135f4:	(bad)  
   1400135f5:	(bad)  
   1400135f6:	inc    DWORD PTR [rax]
   1400135f8:	add    BYTE PTR [rax],al
   1400135fa:	add    al,0x4
   1400135fc:	add    al,0x4
   1400135fe:	add    al,0x4
   140013600:	add    al,0x4
   140013602:	add    al,0x4
   140013604:	add    al,0x4
   140013606:	add    BYTE PTR [rax],al
   140013608:	add    BYTE PTR [rax],al
   14001360a:	or     BYTE PTR [rbx],bl
   14001360c:	sbb    ebx,DWORD PTR [rbx]
   14001360e:	sbb    ebx,DWORD PTR [rbx]
   140013610:	sbb    ebx,DWORD PTR [rbx]
   140013612:	sbb    esp,DWORD PTR [rax]
   140013614:	and    DWORD PTR [rax],ecx
   140013616:	add    BYTE PTR [rax],al
   140013618:	add    BYTE PTR [rax],al
   14001361a:	or     bl,BYTE PTR [rbx]
   14001361c:	sbb    ebx,DWORD PTR [rcx]
   14001361e:	or     ecx,DWORD PTR [rbx]
   140013620:	or     ecx,DWORD PTR [rbx]
   140013622:	sbb    DWORD PTR [rcx],esp
   140013624:	and    cl,BYTE PTR [rdx]
   140013626:	add    BYTE PTR [rax],al
   140013628:	add    BYTE PTR [rax],al
   14001362a:	or     ebx,DWORD PTR [rbx]
   14001362c:	or     ecx,DWORD PTR [rbx]
   14001362e:	(bad)  
   14001362f:	(bad)  
   140013630:	(bad)  
   140013631:	(bad)  
   140013632:	or     ecx,DWORD PTR [rbx]
   140013634:	and    cl,BYTE PTR [rbx]
   140013636:	add    BYTE PTR [rax],al
   140013638:	add    BYTE PTR [rax],al
   14001363a:	(bad)  
   14001363b:	sbb    eax,DWORD PTR [rbx]
   14001363d:	sbb    eax,DWORD PTR [rcx]
   14001363f:	add    eax,0x31b0102
   140013644:	and    cl,BYTE PTR [rsi]
   140013646:	add    BYTE PTR [rax],al
   140013648:	add    BYTE PTR [rax],al
   14001364a:	(bad)  
   14001364b:	sbb    eax,DWORD PTR [rbx]
   14001364d:	or     eax,0x16161616
   140013652:	or     eax,0xe2203
   140013657:	add    BYTE PTR [rax],al
   140013659:	add    BYTE PTR [rdi],cl
   14001365b:	sbb    eax,DWORD PTR [rbx]
   14001365d:	add    ecx,DWORD PTR [rcx]
   14001365f:	or     DWORD PTR [rcx],ecx
   140013661:	or     DWORD PTR [rbx],eax
   140013663:	add    esp,DWORD PTR [rdx]
   140013665:	sldt   WORD PTR [rax]
   140013668:	add    BYTE PTR [rax],al
   14001366a:	bndstx [rbx],bnd3
   14001366d:	adc    eax,0x22222222
   140013672:	adc    eax,0xf2222
   140013677:	add    BYTE PTR [rax],al
   140013679:	add    BYTE PTR [rax],dl
   14001367b:	and    BYTE PTR [rcx],ah
   14001367d:	adc    eax,0x22222222
   140013682:	adc    eax,0x102222
   140013687:	add    BYTE PTR [rax],al
   140013689:	add    BYTE PTR [rax],dl
   14001368b:	and    DWORD PTR [rdx],esp
   14001368d:	adc    eax,0x15151515
   140013692:	adc    eax,0x102222
   140013697:	add    BYTE PTR [rax],al
   140013699:	add    BYTE PTR [rax],dl
   14001369b:	and    ah,BYTE PTR [rdx]
   14001369d:	and    ah,BYTE PTR [rdx]
   14001369f:	and    ah,BYTE PTR [rdx]
   1400136a1:	and    ah,BYTE PTR [rdx]
   1400136a3:	sbb    BYTE PTR [rdi],dl
   1400136a5:	adc    BYTE PTR [rax],al
   1400136a7:	add    BYTE PTR [rax],al
   1400136a9:	add    BYTE PTR [rax],dl
   1400136ab:	and    ah,BYTE PTR [rdx]
   1400136ad:	and    ah,BYTE PTR [rdx]
   1400136af:	and    ah,BYTE PTR [rdx]
   1400136b1:	and    dl,BYTE PTR [rax]
   1400136b3:	adc    BYTE PTR [rax],dl
   1400136b5:	adc    BYTE PTR [rax],al
   1400136b7:	add    BYTE PTR [rax],al
   1400136b9:	add    BYTE PTR [rax],dl
   1400136bb:	and    ah,BYTE PTR [rdx]
   1400136bd:	and    ah,BYTE PTR [rdx]
   1400136bf:	and    ah,BYTE PTR [rdx]
   1400136c1:	and    dl,BYTE PTR [rbx]
   1400136c3:	sbb    edx,DWORD PTR [rax]
   1400136c5:	add    BYTE PTR [rax],al
   1400136c7:	add    BYTE PTR [rax],al
   1400136c9:	add    BYTE PTR [rbx],dl
   1400136cb:	and    ah,BYTE PTR [rdx]
   1400136cd:	and    ah,BYTE PTR [rdx]
   1400136cf:	and    ah,BYTE PTR [rdx]
   1400136d1:	and    dl,BYTE PTR [rip+0x10]        # 0x1400136e7
   1400136d7:	add    BYTE PTR [rax],al
   1400136d9:	add    BYTE PTR [rbx],dl
   1400136db:	adc    edx,DWORD PTR [rbx]
   1400136dd:	adc    edx,DWORD PTR [rbx]
   1400136df:	adc    edx,DWORD PTR [rbx]
   1400136e1:	adc    edx,DWORD PTR [rax]
	...
   1400136f7:	add    al,al
   1400136f9:	add    eax,DWORD PTR [rax]
   1400136fb:	add    al,al
   1400136fd:	add    eax,DWORD PTR [rax]
   1400136ff:	add    al,al
   140013701:	add    eax,DWORD PTR [rax]
   140013703:	add    al,al
   140013705:	add    eax,DWORD PTR [rax]
   140013707:	add    al,al
   140013709:	add    eax,DWORD PTR [rax]
   14001370b:	add    al,al
   14001370d:	add    eax,DWORD PTR [rax]
   14001370f:	add    al,al
   140013711:	add    eax,DWORD PTR [rax]
   140013713:	add    al,al
   140013715:	add    eax,DWORD PTR [rax]
   140013717:	add    al,al
   140013719:	add    eax,DWORD PTR [rax]
   14001371b:	add    al,al
   14001371d:	add    eax,DWORD PTR [rax]
   14001371f:	add    al,al
   140013721:	add    eax,DWORD PTR [rax]
   140013723:	add    al,al
   140013725:	add    eax,DWORD PTR [rax]
   140013727:	add    al,al
   140013729:	(bad)  
   14001372a:	add    BYTE PTR [rax],al
   14001372c:	ror    BYTE PTR [rdi],0x0
   14001372f:	add    al,al
   140013731:	(bad)  
   140013732:	add    BYTE PTR [rax],al
   140013734:	(bad)  
   140013735:	inc    DWORD PTR [rax]
   140013737:	add    BYTE PTR [rax],ch
   140013739:	add    BYTE PTR [rax],al
   14001373b:	add    BYTE PTR [rax],ah
   14001373d:	add    BYTE PTR [rax],al
   14001373f:	add    BYTE PTR [rax+0x0],al
   140013742:	add    BYTE PTR [rax],al
   140013744:	add    DWORD PTR [rax],eax
   140013746:	and    BYTE PTR [rax],al
   140013748:	add    BYTE PTR [rax],al
   14001374a:	add    BYTE PTR [rax],al
   14001374c:	adc    BYTE PTR [rax],0x0
	...
   140013773:	or     BYTE PTR [rax],al
   140013775:	add    BYTE PTR [rax],al
   140013777:	sbb    BYTE PTR [rax],al
   140013779:	add    BYTE PTR [rax],al
   14001377b:	and    BYTE PTR [rax],al
   14001377d:	add    BYTE PTR [rax],al
   14001377f:	and    BYTE PTR [rax],al
   140013781:	add    BYTE PTR [rax],al
   140013783:	and    BYTE PTR [rax],al
   140013785:	add    BYTE PTR [rax],al
   140013787:	and    BYTE PTR [rax],al
   140013789:	add    BYTE PTR [rax],al
   14001378b:	and    BYTE PTR [rax],al
   14001378d:	add    BYTE PTR [rax],al
   14001378f:	and    BYTE PTR [rax],al
   140013791:	add    BYTE PTR [rax],al
   140013793:	and    BYTE PTR [rax],al
   140013795:	add    BYTE PTR [rax],al
   140013797:	and    BYTE PTR [rax],al
   140013799:	add    BYTE PTR [rax],al
   14001379b:	and    BYTE PTR [rax],al
   14001379d:	add    BYTE PTR [rax],al
   14001379f:	and    BYTE PTR [rax],al
   1400137a1:	add    BYTE PTR [rax],al
   1400137a3:	and    BYTE PTR [rax],al
   1400137a5:	add    BYTE PTR [rax],al
   1400137a7:	and    BYTE PTR [rax],al
   1400137a9:	add    BYTE PTR [rax],al
   1400137ab:	and    BYTE PTR [rax],al
   1400137ad:	add    BYTE PTR [rax],al
   1400137af:	and    BYTE PTR [rax],al
   1400137b1:	add    BYTE PTR [rax],al
   1400137b3:	and    BYTE PTR [rax],al
   1400137b5:	add    BYTE PTR [rax],al
   1400137b7:	and    BYTE PTR [rax],al
   1400137b9:	add    BYTE PTR [rax],al
   1400137bb:	and    BYTE PTR [rax],al
   1400137bd:	add    BYTE PTR [rax],al
   1400137bf:	and    BYTE PTR [rax],al
   1400137c1:	add    BYTE PTR [rax],al
   1400137c3:	and    BYTE PTR [rax],al
   1400137c5:	add    BYTE PTR [rax],al
   1400137c7:	and    BYTE PTR [rax],al
   1400137c9:	add    BYTE PTR [rax],al
   1400137cb:	and    BYTE PTR [rax],al
   1400137cd:	add    BYTE PTR [rax],al
   1400137cf:	sbb    BYTE PTR [rax],al
   1400137d1:	add    BYTE PTR [rax],al
   1400137d3:	or     BYTE PTR [rax],al
	...
   1400137f1:	add    BYTE PTR [rax],al
   1400137f3:	sbb    BYTE PTR [rax],al
   1400137f5:	add    BYTE PTR [rax],al
   1400137f7:	rex.W add BYTE PTR [rax],al
   1400137fa:	add    BYTE PTR [rax+0x0],ah
   1400137fd:	add    BYTE PTR [rax],al
   1400137ff:	(bad)  
   140013800:	add    BYTE PTR [rax],al
   140013802:	add    BYTE PTR [rax+0x0],ah
   140013805:	add    BYTE PTR [rax],al
   140013807:	(bad)  
   140013808:	add    BYTE PTR [rax],al
   14001380a:	add    BYTE PTR [rax+0x0],ah
   14001380d:	add    BYTE PTR [rax],al
   14001380f:	(bad)  
   140013810:	add    BYTE PTR [rax],al
   140013812:	add    BYTE PTR [rax+0x0],ah
   140013815:	add    BYTE PTR [rax],al
   140013817:	(bad)  
   140013818:	add    BYTE PTR [rax],al
   14001381a:	add    BYTE PTR [rax+0x0],ah
   14001381d:	add    BYTE PTR [rax],al
   14001381f:	(bad)  
   140013820:	add    BYTE PTR [rax],al
   140013822:	add    BYTE PTR [rax+0x0],ah
   140013825:	add    BYTE PTR [rax],al
   140013827:	(bad)  
   140013828:	add    BYTE PTR [rax],al
   14001382a:	add    BYTE PTR [rax+0x0],ah
   14001382d:	add    BYTE PTR [rax],al
   14001382f:	(bad)  
   140013830:	add    BYTE PTR [rax],al
   140013832:	add    BYTE PTR [rax+0x0],ah
   140013835:	add    BYTE PTR [rax],al
   140013837:	(bad)  
   140013838:	add    BYTE PTR [rax],al
   14001383a:	add    BYTE PTR [rax+0x0],ah
   14001383d:	add    BYTE PTR [rax],al
   14001383f:	(bad)  
   140013840:	add    BYTE PTR [rax],al
   140013842:	add    BYTE PTR [rax+0x0],ah
   140013845:	add    BYTE PTR [rax],al
   140013847:	(bad)  
   140013848:	add    BYTE PTR [rax],al
   14001384a:	add    BYTE PTR [rax+0x0],ah
   14001384d:	add    BYTE PTR [rax],al
   14001384f:	rex.W add BYTE PTR [rax],al
   140013852:	add    BYTE PTR [rax],bl
	...
   140013870:	(bad)  
   140013871:	(bad)  
   140013872:	(bad)  
   140013873:	(bad)  
   140013874:	clc    
   140013875:	stc    
   140013876:	stc    
   140013877:	(bad)  
   140013878:	clc    
   140013879:	stc    
   14001387a:	stc    
   14001387b:	(bad)  
   14001387c:	clc    
   14001387d:	stc    
   14001387e:	stc    
   14001387f:	(bad)  
   140013880:	clc    
   140013881:	stc    
   140013882:	stc    
   140013883:	(bad)  
   140013884:	clc    
   140013885:	clc    
   140013886:	clc    
   140013887:	(bad)  
   140013888:	clc    
   140013889:	clc    
   14001388a:	clc    
   14001388b:	push   rdi
   14001388d:	clc    
   14001388e:	clc    
   14001388f:	push   rdi
   140013891:	clc    
   140013892:	clc    
   140013893:	push   rdi
   140013895:	clc    
   140013896:	clc    
   140013897:	push   rdi
   140013899:	clc    
   14001389a:	clc    
   14001389b:	push   rdi
   14001389d:	div    edi
   14001389f:	push   rsi
   1400138a1:	div    edi
   1400138a3:	push   rsi
   1400138a5:	div    edi
   1400138a7:	push   rsi
   1400138a9:	div    edi
   1400138ab:	push   rsi
   1400138ad:	div    edi
   1400138af:	push   rsi
   1400138b1:	div    edi
   1400138b3:	push   rsi
   1400138b5:	div    edi
   1400138b7:	push   rsi
   1400138b9:	div    edi
   1400138bb:	push   rbp
   1400138bd:	div    dh
   1400138bf:	push   rbp
   1400138c1:	div    dh
   1400138c3:	push   rbp
   1400138c5:	div    dh
   1400138c7:	push   rbp
   1400138c9:	div    dh
   1400138cb:	inc    DWORD PTR [rax]
   1400138cd:	add    BYTE PTR [rax],al
   1400138cf:	(bad)  
   1400138d0:	add    BYTE PTR [rax],al
   1400138d2:	add    BYTE PTR [rax],ah
	...
   1400138f0:	(bad)  
   1400138f1:	(bad)  
   1400138f2:	(bad)  
   1400138f3:	(bad)  
   1400138f4:	stc    
   1400138f5:	stc    
   1400138f6:	stc    
   1400138f7:	(bad)  
   1400138f8:	stc    
   1400138f9:	stc    
   1400138fa:	stc    
   1400138fb:	(bad)  
   1400138fc:	clc    
   1400138fd:	stc    
   1400138fe:	stc    
   1400138ff:	(bad)  
   140013900:	clc    
   140013901:	stc    
   140013902:	stc    
   140013903:	(bad)  
   140013904:	clc    
   140013905:	stc    
   140013906:	stc    
   140013907:	(bad)  
   140013908:	clc    
   140013909:	clc    
   14001390a:	clc    
   14001390b:	push   rdi
   14001390d:	clc    
   14001390e:	clc    
   14001390f:	push   rdi
   140013911:	clc    
   140013912:	clc    
   140013913:	push   rdi
   140013915:	clc    
   140013916:	clc    
   140013917:	push   rdi
   140013919:	clc    
   14001391a:	clc    
   14001391b:	push   rdi
   14001391d:	clc    
   14001391e:	clc    
   14001391f:	push   rdi
   140013921:	div    edi
   140013923:	push   rsi
   140013925:	div    edi
   140013927:	push   rsi
   140013929:	div    edi
   14001392b:	push   rsi
   14001392d:	div    edi
   14001392f:	push   rsi
   140013931:	div    edi
   140013933:	push   rsi
   140013935:	div    edi
   140013937:	push   rsi
   140013939:	div    edi
   14001393b:	push   rsi
   14001393d:	div    edi
   14001393f:	push   rsi
   140013941:	div    dh
   140013943:	push   rbp
   140013945:	div    dh
   140013947:	push   rbp
   140013949:	div    dh
   14001394b:	inc    DWORD PTR [rax]
   14001394d:	add    BYTE PTR [rax],al
   14001394f:	(bad)  
   140013950:	add    BYTE PTR [rax],al
   140013952:	add    BYTE PTR [rax],ah
	...
   140013970:	(bad)  
   140013971:	(bad)  
   140013972:	(bad)  
   140013973:	(bad)  
   140013974:	stc    
   140013975:	stc    
   140013976:	stc    
   140013977:	(bad)  
   140013978:	stc    
   140013979:	stc    
   14001397a:	stc    
   14001397b:	(bad)  
   14001397c:	stc    
   14001397d:	stc    
   14001397e:	stc    
   14001397f:	(bad)  
   140013980:	clc    
   140013981:	stc    
   140013982:	stc    
   140013983:	(bad)  
   140013984:	clc    
   140013985:	stc    
   140013986:	stc    
   140013987:	(bad)  
   140013988:	clc    
   140013989:	stc    
   14001398a:	stc    
   14001398b:	(bad)  
   14001398c:	clc    
   14001398d:	clc    
   14001398e:	clc    
   14001398f:	push   rdi
   140013991:	clc    
   140013992:	clc    
   140013993:	push   rdi
   140013995:	clc    
   140013996:	clc    
   140013997:	push   rdi
   140013999:	clc    
   14001399a:	clc    
   14001399b:	push   rdi
   14001399d:	clc    
   14001399e:	clc    
   14001399f:	push   rdi
   1400139a1:	clc    
   1400139a2:	clc    
   1400139a3:	push   rdi
   1400139a5:	div    edi
   1400139a7:	push   rsi
   1400139a9:	div    edi
   1400139ab:	push   rsi
   1400139ad:	div    edi
   1400139af:	push   rsi
   1400139b1:	div    edi
   1400139b3:	push   rsi
   1400139b5:	div    edi
   1400139b7:	push   rsi
   1400139b9:	div    edi
   1400139bb:	push   rsi
   1400139bd:	div    edi
   1400139bf:	push   rsi
   1400139c1:	div    edi
   1400139c3:	push   rsi
   1400139c5:	div    dh
   1400139c7:	push   rbp
   1400139c9:	div    dh
   1400139cb:	inc    DWORD PTR [rax]
   1400139cd:	add    BYTE PTR [rax],al
   1400139cf:	(bad)  
   1400139d0:	add    BYTE PTR [rax],al
   1400139d2:	add    BYTE PTR [rax],ah
	...
   1400139f0:	(bad)  
   1400139f1:	(bad)  
   1400139f2:	(bad)  
   1400139f3:	(bad)  
   1400139f4:	stc    
   1400139f5:	cli    
   1400139f6:	cli    
   1400139f7:	(bad)  
   1400139f8:	stc    
   1400139f9:	cli    
   1400139fa:	cli    
   1400139fb:	(bad)  
   1400139fc:	stc    
   1400139fd:	stc    
   1400139fe:	stc    
   1400139ff:	(bad)  
   140013a00:	stc    
   140013a01:	stc    
   140013a02:	stc    
   140013a03:	(bad)  
   140013a04:	clc    
   140013a05:	stc    
   140013a06:	stc    
   140013a07:	(bad)  
   140013a08:	clc    
   140013a09:	stc    
   140013a0a:	stc    
   140013a0b:	(bad)  
   140013a0c:	clc    
   140013a0d:	stc    
   140013a0e:	stc    
   140013a0f:	(bad)  
   140013a10:	clc    
   140013a11:	clc    
   140013a12:	clc    
   140013a13:	(bad)  
   140013a14:	clc    
   140013a15:	clc    
   140013a16:	clc    
   140013a17:	push   rdi
   140013a19:	clc    
   140013a1a:	clc    
   140013a1b:	push   rdi
   140013a1d:	clc    
   140013a1e:	clc    
   140013a1f:	push   rdi
   140013a21:	clc    
   140013a22:	clc    
   140013a23:	push   rdi
   140013a25:	clc    
   140013a26:	clc    
   140013a27:	push   rdi
   140013a29:	clc    
   140013a2a:	clc    
   140013a2b:	push   rdi
   140013a2d:	div    edi
   140013a2f:	push   rsi
   140013a31:	div    edi
   140013a33:	push   rsi
   140013a35:	div    edi
   140013a37:	push   rsi
   140013a39:	div    edi
   140013a3b:	push   rsi
   140013a3d:	div    edi
   140013a3f:	push   rsi
   140013a41:	div    edi
   140013a43:	push   rsi
   140013a45:	div    edi
   140013a47:	push   rsi
   140013a49:	div    edi
   140013a4b:	inc    DWORD PTR [rax]
   140013a4d:	add    BYTE PTR [rax],al
   140013a4f:	(bad)  
   140013a50:	add    BYTE PTR [rax],al
   140013a52:	add    BYTE PTR [rax],ah
	...
   140013a70:	(bad)  
   140013a71:	(bad)  
   140013a72:	(bad)  
   140013a73:	(bad)  
   140013a74:	cli    
   140013a75:	cli    
   140013a76:	cli    
   140013a77:	(bad)  
   140013a78:	stc    
   140013a79:	cli    
   140013a7a:	cli    
   140013a7b:	(bad)  
   140013a7c:	stc    
   140013a7d:	cli    
   140013a7e:	cli    
   140013a7f:	(bad)  
   140013a80:	stc    
   140013a81:	cli    
   140013a82:	cli    
   140013a83:	(bad)  
   140013a84:	stc    
   140013a85:	stc    
   140013a86:	stc    
   140013a87:	(bad)  
   140013a88:	stc    
   140013a89:	stc    
   140013a8a:	stc    
   140013a8b:	(bad)  
   140013a8c:	clc    
   140013a8d:	stc    
   140013a8e:	stc    
   140013a8f:	(bad)  
   140013a90:	clc    
   140013a91:	stc    
   140013a92:	stc    
   140013a93:	(bad)  
   140013a94:	clc    
   140013a95:	stc    
   140013a96:	stc    
   140013a97:	(bad)  
   140013a98:	clc    
   140013a99:	clc    
   140013a9a:	clc    
   140013a9b:	(bad)  
   140013a9c:	clc    
   140013a9d:	clc    
   140013a9e:	clc    
   140013a9f:	push   rdi
   140013aa1:	clc    
   140013aa2:	clc    
   140013aa3:	push   rdi
   140013aa5:	clc    
   140013aa6:	clc    
   140013aa7:	push   rdi
   140013aa9:	clc    
   140013aaa:	clc    
   140013aab:	push   rdi
   140013aad:	clc    
   140013aae:	clc    
   140013aaf:	push   rdi
   140013ab1:	clc    
   140013ab2:	clc    
   140013ab3:	push   rdi
   140013ab5:	div    edi
   140013ab7:	push   rsi
   140013ab9:	div    edi
   140013abb:	push   rsi
   140013abd:	div    edi
   140013abf:	push   rsi
   140013ac1:	div    edi
   140013ac3:	push   rsi
   140013ac5:	div    edi
   140013ac7:	push   rsi
   140013ac9:	div    edi
   140013acb:	inc    DWORD PTR [rax]
   140013acd:	add    BYTE PTR [rax],al
   140013acf:	(bad)  
   140013ad0:	add    BYTE PTR [rax],al
   140013ad2:	add    BYTE PTR [rax],ah
	...
   140013af0:	(bad)  
   140013af1:	(bad)  
   140013af2:	(bad)  
   140013af3:	(bad)  
   140013af4:	cli    
   140013af5:	cli    
   140013af6:	cli    
   140013af7:	(bad)  
   140013af8:	cli    
   140013af9:	cli    
   140013afa:	cli    
   140013afb:	(bad)  
   140013afc:	cli    
   140013afd:	cli    
   140013afe:	cli    
   140013aff:	(bad)  
   140013b00:	stc    
   140013b01:	cli    
   140013b02:	cli    
   140013b03:	(bad)  
   140013b04:	stc    
   140013b05:	cli    
   140013b06:	cli    
   140013b07:	(bad)  
   140013b08:	stc    
   140013b09:	cli    
   140013b0a:	cli    
   140013b0b:	(bad)  
   140013b0c:	stc    
   140013b0d:	stc    
   140013b0e:	stc    
   140013b0f:	jmp    FWORD PTR [rbx-0x66005455]
   140013b15:	cdq    
   140013b16:	cdq    
   140013b17:	call   FWORD PTR [rdx-0x65006566]
   140013b1d:	(bad)  
   140013b1e:	(bad)  
   140013b1f:	call   FWORD PTR [rax-0x67006768]
   140013b25:	cwde   
   140013b26:	cwde   
   140013b27:	call   FWORD PTR [rdx-0x54006566]
   140013b2d:	stos   DWORD PTR es:[rdi],eax
   140013b2e:	stos   DWORD PTR es:[rdi],eax
   140013b2f:	push   rdi
   140013b31:	clc    
   140013b32:	clc    
   140013b33:	push   rdi
   140013b35:	clc    
   140013b36:	clc    
   140013b37:	push   rdi
   140013b39:	div    edi
   140013b3b:	push   rdi
   140013b3d:	div    edi
   140013b3f:	push   rsi
   140013b41:	div    edi
   140013b43:	push   rsi
   140013b45:	div    edi
   140013b47:	push   rsi
   140013b49:	div    edi
   140013b4b:	inc    DWORD PTR [rax]
   140013b4d:	add    BYTE PTR [rax],al
   140013b4f:	(bad)  
   140013b50:	add    BYTE PTR [rax],al
   140013b52:	add    BYTE PTR [rax],ah
	...
   140013b70:	(bad)  
   140013b71:	(bad)  
   140013b72:	(bad)  
   140013b73:	(bad)  
   140013b74:	cli    
   140013b75:	sti    
   140013b76:	sti    
   140013b77:	(bad)  
   140013b78:	cli    
   140013b79:	cli    
   140013b7a:	cli    
   140013b7b:	(bad)  
   140013b7c:	cli    
   140013b7d:	cli    
   140013b7e:	cli    
   140013b7f:	(bad)  
   140013b80:	cli    
   140013b81:	cli    
   140013b82:	cli    
   140013b83:	(bad)  
   140013b84:	stc    
   140013b85:	cli    
   140013b86:	cli    
   140013b87:	(bad)  
   140013b88:	stc    
   140013b89:	cli    
   140013b8a:	cli    
   140013b8b:	(bad)  
   140013b8c:	stc    
   140013b8d:	stc    
   140013b8e:	stc    
   140013b8f:	jmp    FWORD PTR [rdx-0x5556]
   140013b95:	(bad)  
   140013b96:	(bad)  
   140013b97:	(bad)  
   140013b98:	(bad)  
   140013b99:	(bad)  
   140013b9a:	(bad)  
   140013b9b:	(bad)  
   140013b9c:	(bad)  
   140013b9d:	(bad)  
   140013b9e:	(bad)  
   140013b9f:	(bad)  
   140013ba0:	(bad)  
   140013ba1:	(bad)  
   140013ba2:	(bad)  
   140013ba3:	(bad)  
   140013ba4:	(bad)  
   140013ba5:	(bad)  
   140013ba6:	(bad)  
   140013ba7:	(bad)  
   140013ba8:	(bad)  
   140013ba9:	(bad)  
   140013baa:	(bad)  
   140013bab:	jmp    FWORD PTR [rbx-0x8005455]
   140013bb1:	clc    
   140013bb2:	clc    
   140013bb3:	push   rdi
   140013bb5:	clc    
   140013bb6:	clc    
   140013bb7:	push   rdi
   140013bb9:	clc    
   140013bba:	clc    
   140013bbb:	push   rdi
   140013bbd:	clc    
   140013bbe:	clc    
   140013bbf:	push   rdi
   140013bc1:	div    edi
   140013bc3:	push   rsi
   140013bc5:	div    edi
   140013bc7:	push   rsi
   140013bc9:	div    edi
   140013bcb:	inc    DWORD PTR [rax]
   140013bcd:	add    BYTE PTR [rax],al
   140013bcf:	(bad)  
   140013bd0:	add    BYTE PTR [rax],al
   140013bd2:	add    BYTE PTR [rax],ah
	...
   140013bf0:	(bad)  
   140013bf1:	(bad)  
   140013bf2:	(bad)  
   140013bf3:	(bad)  
   140013bf4:	cli    
   140013bf5:	sti    
   140013bf6:	sti    
   140013bf7:	(bad)  
   140013bf8:	cli    
   140013bf9:	sti    
   140013bfa:	sti    
   140013bfb:	(bad)  
   140013bfc:	cli    
   140013bfd:	cli    
   140013bfe:	cli    
   140013bff:	(bad)  
   140013c00:	cli    
   140013c01:	cli    
   140013c02:	cli    
   140013c03:	(bad)  
   140013c04:	cli    
   140013c05:	cli    
   140013c06:	cli    
   140013c07:	(bad)  
   140013c08:	stc    
   140013c09:	cli    
   140013c0a:	cli    
   140013c0b:	(bad)  
   140013c0c:	stc    
   140013c0d:	cli    
   140013c0e:	cli    
   140013c0f:	jmp    FWORD PTR [rbx-0x5455]
   140013c15:	(bad)  
   140013c16:	(bad)  
   140013c17:	(bad)  
   140013c18:	sti    
   140013c19:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013c1a:	rex.WR jmp FWORD PTR [rax+0x38ff94be]
   140013c21:	pop    rdi
   140013c22:	and    edi,edi
   140013c24:	test   BYTE PTR [rcx+0x18],bl
   140013c27:	(bad)  
   140013c28:	(bad)  
   140013c29:	(bad)  
   140013c2a:	(bad)  
   140013c2b:	jmp    FWORD PTR [rbx-0x8005455]
   140013c31:	clc    
   140013c32:	clc    
   140013c33:	push   rdi
   140013c35:	clc    
   140013c36:	clc    
   140013c37:	push   rdi
   140013c39:	clc    
   140013c3a:	clc    
   140013c3b:	push   rdi
   140013c3d:	clc    
   140013c3e:	clc    
   140013c3f:	push   rdi
   140013c41:	clc    
   140013c42:	clc    
   140013c43:	push   rdi
   140013c45:	div    edi
   140013c47:	push   rsi
   140013c49:	div    edi
   140013c4b:	inc    DWORD PTR [rax]
   140013c4d:	add    BYTE PTR [rax],al
   140013c4f:	(bad)  
   140013c50:	add    BYTE PTR [rax],al
   140013c52:	add    BYTE PTR [rax],ah
	...
   140013c70:	(bad)  
   140013c71:	(bad)  
   140013c72:	(bad)  
   140013c73:	(bad)  
   140013c74:	sti    
   140013c75:	sti    
   140013c76:	sti    
   140013c77:	(bad)  
   140013c78:	cli    
   140013c79:	sti    
   140013c7a:	sti    
   140013c7b:	(bad)  
   140013c7c:	cli    
   140013c7d:	sti    
   140013c7e:	sti    
   140013c7f:	call   FWORD PTR [rax-0x67006768]
   140013c85:	cwde   
   140013c86:	cwde   
   140013c87:	call   FWORD PTR [rax+0x34ff9898]
   140013c8d:	and    esp,DWORD PTR [rbx]
   140013c8f:	jmp    FWORD PTR [rdx-0x5556]
   140013c95:	(bad)  
   140013c96:	(bad)  
   140013c97:	(bad)  
   140013c98:	sti    
   140013c99:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013c9a:	rex.WR (bad) 
   140013c9c:	in     eax,dx
   140013c9d:	out    dx,al
   140013c9e:	fcos   
   140013ca0:	jo     0x140013c2a
   140013ca2:	rex.WRXB dec QWORD PTR [r13-0xd495]
   140013ca9:	(bad)  
   140013caa:	(bad)  
   140013cab:	jmp    FWORD PTR [rdx+0x34ffaaaa]
   140013cb1:	and    esp,DWORD PTR [rbx]
   140013cb3:	call   FWORD PTR [rax-0x67006768]
   140013cb9:	cwde   
   140013cba:	cwde   
   140013cbb:	call   FWORD PTR [rax-0x8006768]
   140013cc1:	clc    
   140013cc2:	clc    
   140013cc3:	push   rdi
   140013cc5:	clc    
   140013cc6:	clc    
   140013cc7:	push   rdi
   140013cc9:	div    edi
   140013ccb:	inc    DWORD PTR [rax]
   140013ccd:	add    BYTE PTR [rax],al
   140013ccf:	(bad)  
   140013cd0:	add    BYTE PTR [rax],al
   140013cd2:	add    BYTE PTR [rax],ah
	...
   140013cf0:	(bad)  
   140013cf1:	(bad)  
   140013cf2:	(bad)  
   140013cf3:	(bad)  
   140013cf4:	sti    
   140013cf5:	sti    
   140013cf6:	sti    
   140013cf7:	(bad)  
   140013cf8:	sti    
   140013cf9:	sti    
   140013cfa:	sti    
   140013cfb:	(bad)  
   140013cfc:	cli    
   140013cfd:	sti    
   140013cfe:	sti    
   140013cff:	push   QWORD PTR [rdi+0x77]
   140013d02:	ja     0x140013d03
   140013d04:	cmc    
   140013d05:	repz hlt 
   140013d07:	push   rbp
   140013d09:	repz hlt 
   140013d0b:	inc    DWORD PTR [rbp+0x40]
   140013d0e:	(bad)  
   140013d0f:	jmp    FWORD PTR [rdx-0x75005556]
   140013d15:	mov    ecx,DWORD PTR [rdi+rdi*8-0xb09276]
   140013d1c:	mov    BYTE PTR [rcx+0x5a52ff74],al
   140013d22:	rex.X jmp QWORD PTR [rbx+0x57]
   140013d26:	rex.X dec DWORD PTR [rdx-0x53007475]
   140013d2d:	lods   al,BYTE PTR ds:[rsi]
   140013d2e:	lods   al,BYTE PTR ds:[rsi]
   140013d2f:	inc    DWORD PTR [rbp+0x40]
   140013d32:	(bad)  
   140013d33:	push   rbp
   140013d35:	repz hlt 
   140013d37:	push   rbp
   140013d39:	repz hlt 
   140013d3b:	push   QWORD PTR [rdi+0x77]
   140013d3e:	ja     0x140013d3f
   140013d40:	idiv   eax
   140013d42:	clc    
   140013d43:	push   rdi
   140013d45:	clc    
   140013d46:	clc    
   140013d47:	push   rdi
   140013d49:	clc    
   140013d4a:	clc    
   140013d4b:	inc    DWORD PTR [rax]
   140013d4d:	add    BYTE PTR [rax],al
   140013d4f:	(bad)  
   140013d50:	add    BYTE PTR [rax],al
   140013d52:	add    BYTE PTR [rax],ah
	...
   140013d70:	(bad)  
   140013d71:	(bad)  
   140013d72:	(bad)  
   140013d73:	(bad)  
   140013d74:	sti    
   140013d75:	sti    
   140013d76:	sti    
   140013d77:	(bad)  
   140013d78:	sti    
   140013d79:	sti    
   140013d7a:	sti    
   140013d7b:	(bad)  
   140013d7c:	sti    
   140013d7d:	sti    
   140013d7e:	sti    
   140013d7f:	push   QWORD PTR [rdi+0x77]
   140013d82:	ja     0x140013d83
   140013d84:	cwde   
   140013d85:	cwde   
   140013d86:	cwde   
   140013d87:	call   FWORD PTR [rax-0x1d006768]
   140013d8d:	fcmovbe st,st(3)
   140013d8f:	jmp    rdx
   140013d91:	fcmovbe st,st(3)
   140013d93:	jmp    rdx
   140013d95:	fcmovbe st,st(3)
   140013d97:	jmp    rdx
   140013d99:	fcmovbe st,st(3)
   140013d9b:	jmp    rdx
   140013d9d:	fcmovbe st,st(3)
   140013d9f:	jmp    rdx
   140013da1:	fcmovbe st,st(3)
   140013da3:	jmp    rdx
   140013da5:	fcmovbe st,st(3)
   140013da7:	jmp    rdx
   140013da9:	fcmovbe st,st(3)
   140013dab:	jmp    rdx
   140013dad:	fcmovbe st,st(3)
   140013daf:	jmp    rdx
   140013db1:	fcmovbe st,st(3)
   140013db3:	call   FWORD PTR [rax-0x67006768]
   140013db9:	cwde   
   140013dba:	cwde   
   140013dbb:	push   QWORD PTR [rdi+0x77]
   140013dbe:	ja     0x140013dbf
   140013dc0:	idiv   eax
   140013dc2:	clc    
   140013dc3:	push   rdi
   140013dc5:	clc    
   140013dc6:	clc    
   140013dc7:	push   rdi
   140013dc9:	clc    
   140013dca:	clc    
   140013dcb:	inc    DWORD PTR [rax]
   140013dcd:	add    BYTE PTR [rax],al
   140013dcf:	(bad)  
   140013dd0:	add    BYTE PTR [rax],al
   140013dd2:	add    BYTE PTR [rax],ah
	...
   140013df0:	(bad)  
   140013df1:	(bad)  
   140013df2:	(bad)  
   140013df3:	(bad)  
   140013df4:	sti    
   140013df5:	cld    
   140013df6:	cld    
   140013df7:	(bad)  
   140013df8:	sti    
   140013df9:	sti    
   140013dfa:	sti    
   140013dfb:	(bad)  
   140013dfc:	sti    
   140013dfd:	sti    
   140013dfe:	sti    
   140013dff:	push   QWORD PTR [rdi+0x77]
   140013e02:	ja     0x140013e03
   140013e04:	mov    eax,0xb8ffb2b5
   140013e09:	mov    ch,0xb2
   140013e0b:	call   QWORD PTR [rbx+0x53]
   140013e0e:	push   rbx
   140013e0f:	call   QWORD PTR [rbx+0x53]
   140013e12:	push   rbx
   140013e13:	call   QWORD PTR [rbx+0x53]
   140013e16:	push   rbx
   140013e17:	call   QWORD PTR [rbx+0x53]
   140013e1a:	push   rbx
   140013e1b:	call   QWORD PTR [rbx+0x53]
   140013e1e:	push   rbx
   140013e1f:	call   QWORD PTR [rbx+0x53]
   140013e22:	push   rbx
   140013e23:	call   QWORD PTR [rbx+0x53]
   140013e26:	push   rbx
   140013e27:	call   QWORD PTR [rbx+0x53]
   140013e2a:	push   rbx
   140013e2b:	call   QWORD PTR [rbx+0x53]
   140013e2e:	push   rbx
   140013e2f:	call   QWORD PTR [rbx+0x53]
   140013e32:	push   rbx
   140013e33:	(bad)  
   140013e34:	mov    eax,0x97ffb2b5
   140013e39:	push   QWORD PTR [rdi+rdi*8-0x888889]
   140013e40:	clc    
   140013e41:	clc    
   140013e42:	clc    
   140013e43:	push   rdi
   140013e45:	clc    
   140013e46:	clc    
   140013e47:	push   rdi
   140013e49:	clc    
   140013e4a:	clc    
   140013e4b:	inc    DWORD PTR [rax]
   140013e4d:	add    BYTE PTR [rax],al
   140013e4f:	(bad)  
   140013e50:	add    BYTE PTR [rax],al
   140013e52:	add    BYTE PTR [rax],ah
	...
   140013e70:	(bad)  
   140013e71:	(bad)  
   140013e72:	(bad)  
   140013e73:	(bad)  
   140013e74:	sti    
   140013e75:	cld    
   140013e76:	cld    
   140013e77:	(bad)  
   140013e78:	sti    
   140013e79:	cld    
   140013e7a:	cld    
   140013e7b:	(bad)  
   140013e7c:	sti    
   140013e7d:	sti    
   140013e7e:	sti    
   140013e7f:	push   QWORD PTR [rdi+0x77]
   140013e82:	ja     0x140013e83
   140013e84:	ret    0xb9bd
   140013e87:	inc    edx
   140013e89:	mov    ebp,0x5353ffb9
   140013e8e:	push   rbx
   140013e8f:	call   QWORD PTR [rbx+0x53]
   140013e92:	push   rbx
   140013e93:	call   QWORD PTR [rbx+0x53]
   140013e96:	push   rbx
   140013e97:	call   QWORD PTR [rbx+0x53]
   140013e9a:	push   rbx
   140013e9b:	call   QWORD PTR [rbx+0x53]
   140013e9e:	push   rbx
   140013e9f:	call   QWORD PTR [rbx+0x53]
   140013ea2:	push   rbx
   140013ea3:	call   QWORD PTR [rbx+0x53]
   140013ea6:	push   rbx
   140013ea7:	call   QWORD PTR [rbx+0x53]
   140013eaa:	push   rbx
   140013eab:	call   QWORD PTR [rbx+0x53]
   140013eae:	push   rbx
   140013eaf:	call   QWORD PTR [rbx+0x53]
   140013eb2:	push   rbx
   140013eb3:	inc    edx
   140013eb5:	mov    ebp,0xbdc2ffb9
   140013eba:	mov    ecx,0x777777ff
   140013ebf:	(bad)  
   140013ec0:	clc    
   140013ec1:	clc    
   140013ec2:	clc    
   140013ec3:	(bad)  
   140013ec4:	clc    
   140013ec5:	clc    
   140013ec6:	clc    
   140013ec7:	push   rdi
   140013ec9:	clc    
   140013eca:	clc    
   140013ecb:	inc    DWORD PTR [rax]
   140013ecd:	add    BYTE PTR [rax],al
   140013ecf:	(bad)  
   140013ed0:	add    BYTE PTR [rax],al
   140013ed2:	add    BYTE PTR [rax],ah
	...
   140013ef0:	(bad)  
   140013ef1:	(bad)  
   140013ef2:	(bad)  
   140013ef3:	(bad)  
   140013ef4:	cld    
   140013ef5:	cld    
   140013ef6:	cld    
   140013ef7:	(bad)  
   140013ef8:	cld    
   140013ef9:	cld    
   140013efa:	cld    
   140013efb:	(bad)  
   140013efc:	sti    
   140013efd:	cld    
   140013efe:	cld    
   140013eff:	push   QWORD PTR [rdi+0x77]
   140013f02:	ja     0x140013f03
   140013f04:	int3   
   140013f05:	mov    al,0xff
   140013f08:	int3   
   140013f09:	mov    al,0xff
   140013f0c:	addr32 addr32 jmp QWORD PTR [edi+0x67]
   140013f12:	jmp    QWORD PTR [edi+0x67]
   140013f16:	jmp    QWORD PTR [edi+0x67]
   140013f1a:	jmp    QWORD PTR [edi+0x67]
   140013f1e:	jmp    QWORD PTR [edi+0x67]
   140013f22:	jmp    QWORD PTR [edi+0x67]
   140013f26:	jmp    QWORD PTR [edi+0x67]
   140013f2a:	jmp    QWORD PTR [edi+0x67]
   140013f2e:	jmp    QWORD PTR [edi+0x67]
   140013f32:	addr32 dec esp
   140013f35:	mov    al,0xff
   140013f38:	int3   
   140013f39:	mov    al,0xff
   140013f3c:	ja     0x140013fb5
   140013f3e:	ja     0x140013f3f
   140013f40:	clc    
   140013f41:	stc    
   140013f42:	stc    
   140013f43:	(bad)  
   140013f44:	clc    
   140013f45:	stc    
   140013f46:	stc    
   140013f47:	(bad)  
   140013f48:	clc    
   140013f49:	clc    
   140013f4a:	clc    
   140013f4b:	inc    DWORD PTR [rax]
   140013f4d:	add    BYTE PTR [rax],al
   140013f4f:	(bad)  
   140013f50:	add    BYTE PTR [rax],al
   140013f52:	add    BYTE PTR [rax],ah
	...
   140013f70:	(bad)  
   140013f71:	(bad)  
   140013f72:	(bad)  
   140013f73:	(bad)  
   140013f74:	cld    
   140013f75:	cld    
   140013f76:	cld    
   140013f77:	(bad)  
   140013f78:	cld    
   140013f79:	cld    
   140013f7a:	cld    
   140013f7b:	(bad)  
   140013f7c:	cld    
   140013f7d:	cld    
   140013f7e:	cld    
   140013f7f:	dec    DWORD PTR [rbx+0x77ff8b8b]
   140013f85:	ja     0x140013ffe
   140013f87:	call   rbx
   140013f89:	retf   
   140013f8a:	(bad)  
   140013f8b:	(bad)  
   140013f8c:	jp     0x140014008
   140013f8e:	jp     0x140013f8f
   140013f90:	jp     0x14001400c
   140013f92:	jp     0x140013f93
   140013f94:	jp     0x140014010
   140013f96:	jp     0x140013f97
   140013f98:	jp     0x140014014
   140013f9a:	jp     0x140013f9b
   140013f9c:	jp     0x140014018
   140013f9e:	jp     0x140013f9f
   140013fa0:	jp     0x14001401c
   140013fa2:	jp     0x140013fa3
   140013fa4:	jp     0x140014020
   140013fa6:	jp     0x140013fa7
   140013fa8:	jp     0x140014024
   140013faa:	jp     0x140013fab
   140013fac:	jp     0x140014028
   140013fae:	jp     0x140013faf
   140013fb0:	jp     0x14001402c
   140013fb2:	jp     0x140013fb3
   140013fb4:	ror    ebx,cl
   140013fb6:	(bad)  
   140013fb7:	push   QWORD PTR [rdi+0x77]
   140013fba:	ja     0x140013fbb
   140013fbc:	mov    BYTE PTR [rax-0x6070078],cl
   140013fc2:	stc    
   140013fc3:	(bad)  
   140013fc4:	clc    
   140013fc5:	stc    
   140013fc6:	stc    
   140013fc7:	(bad)  
   140013fc8:	clc    
   140013fc9:	stc    
   140013fca:	stc    
   140013fcb:	inc    DWORD PTR [rax]
   140013fcd:	add    BYTE PTR [rax],al
   140013fcf:	(bad)  
   140013fd0:	add    BYTE PTR [rax],al
   140013fd2:	add    BYTE PTR [rax],ah
	...
   140013ff0:	(bad)  
   140013ff1:	(bad)  
   140013ff2:	(bad)  
   140013ff3:	(bad)  
   140013ff4:	cld    
   140013ff5:	cld    
   140013ff6:	cld    
   140013ff7:	(bad)  
   140013ff8:	cld    
   140013ff9:	cld    
   140013ffa:	cld    
   140013ffb:	(bad)  
   140013ffc:	cld    
   140013ffd:	cld    
   140013ffe:	cld    
   140013fff:	(bad)  
   140014000:	cld    
   140014001:	cld    
   140014002:	cld    
   140014003:	call   FWORD PTR [rsi+0x77ff9e9e]
   140014009:	ja     0x140014082
   14001400b:	dec    DWORD PTR [rax-0x77007778]
   140014011:	mov    BYTE PTR [rax-0x77777701],cl
   140014017:	dec    DWORD PTR [rax-0x77007778]
   14001401d:	mov    BYTE PTR [rax-0x77777701],cl
   140014023:	dec    DWORD PTR [rax-0x77007778]
   140014029:	mov    BYTE PTR [rax-0x77777701],cl
   14001402f:	dec    DWORD PTR [rax+0x77ff8888]
   140014035:	ja     0x1400140ae
   140014037:	call   FWORD PTR [rdx-0x6006566]
   14001403d:	stc    
   14001403e:	stc    
   14001403f:	(bad)  
   140014040:	clc    
   140014041:	stc    
   140014042:	stc    
   140014043:	(bad)  
   140014044:	clc    
   140014045:	stc    
   140014046:	stc    
   140014047:	(bad)  
   140014048:	clc    
   140014049:	stc    
   14001404a:	stc    
   14001404b:	inc    DWORD PTR [rax]
   14001404d:	add    BYTE PTR [rax],al
   14001404f:	(bad)  
   140014050:	add    BYTE PTR [rax],al
   140014052:	add    BYTE PTR [rax],ah
	...
   140014070:	(bad)  
   140014071:	(bad)  
   140014072:	(bad)  
   140014073:	(bad)  
   140014074:	cld    
   140014075:	std    
   140014076:	std    
   140014077:	(bad)  
   140014078:	cld    
   140014079:	cld    
   14001407a:	cld    
   14001407b:	(bad)  
   14001407c:	cld    
   14001407d:	cld    
   14001407e:	cld    
   14001407f:	(bad)  
   140014080:	cld    
   140014081:	cld    
   140014082:	cld    
   140014083:	(bad)  
   140014084:	cld    
   140014085:	cld    
   140014086:	cld    
   140014087:	(bad)  
   140014088:	cld    
   140014089:	cld    
   14001408a:	cld    
   14001408b:	(bad)  
   14001408c:	fstp   st(5)
   14001408e:	(bad)  
   140014090:	lods   al,BYTE PTR ds:[rsi]
   140014091:	lods   al,BYTE PTR ds:[rsi]
   140014092:	lods   al,BYTE PTR ds:[rsi]
   140014093:	(bad)  
   140014094:	(bad)  
   140014095:	(bad)  
   140014096:	(bad)  
   140014097:	(bad)  
   140014098:	(bad)  
   140014099:	(bad)  
   14001409a:	(bad)  
   14001409b:	(bad)  
   14001409c:	(bad)  
   14001409d:	(bad)  
   14001409e:	(bad)  
   14001409f:	(bad)  
   1400140a0:	(bad)  
   1400140a1:	(bad)  
   1400140a2:	(bad)  
   1400140a3:	(bad)  
   1400140a4:	(bad)  
   1400140a5:	(bad)  
   1400140a6:	(bad)  
   1400140a7:	(bad)  
   1400140a8:	(bad)  
   1400140a9:	(bad)  
   1400140aa:	(bad)  
   1400140ab:	jmp    FWORD PTR [rdx-0x23005556]
   1400140b1:	(bad)  
   1400140b3:	(bad)  
   1400140b4:	stc    
   1400140b5:	cli    
   1400140b6:	cli    
   1400140b7:	(bad)  
   1400140b8:	stc    
   1400140b9:	cli    
   1400140ba:	cli    
   1400140bb:	(bad)  
   1400140bc:	stc    
   1400140bd:	stc    
   1400140be:	stc    
   1400140bf:	(bad)  
   1400140c0:	stc    
   1400140c1:	stc    
   1400140c2:	stc    
   1400140c3:	(bad)  
   1400140c4:	stc    
   1400140c5:	stc    
   1400140c6:	stc    
   1400140c7:	(bad)  
   1400140c8:	clc    
   1400140c9:	stc    
   1400140ca:	stc    
   1400140cb:	inc    DWORD PTR [rax]
   1400140cd:	add    BYTE PTR [rax],al
   1400140cf:	(bad)  
   1400140d0:	add    BYTE PTR [rax],al
   1400140d2:	add    BYTE PTR [rax],ah
	...
   1400140f0:	(bad)  
   1400140f1:	(bad)  
   1400140f2:	(bad)  
   1400140f3:	(bad)  
   1400140f4:	std    
   1400140f5:	std    
   1400140f6:	std    
   1400140f7:	(bad)  
   1400140f8:	cld    
   1400140f9:	std    
   1400140fa:	std    
   1400140fb:	(bad)  
   1400140fc:	cld    
   1400140fd:	cld    
   1400140fe:	cld    
   1400140ff:	(bad)  
   140014100:	cld    
   140014101:	cld    
   140014102:	cld    
   140014103:	(bad)  
   140014104:	cld    
   140014105:	cld    
   140014106:	cld    
   140014107:	(bad)  
   140014108:	cld    
   140014109:	cld    
   14001410a:	cld    
   14001410b:	(bad)  
   14001410c:	fstp   st(6)
   14001410e:	fdivp  st(7),st
   140014110:	stos   BYTE PTR es:[rdi],al
   140014111:	stos   BYTE PTR es:[rdi],al
   140014112:	stos   BYTE PTR es:[rdi],al
   140014113:	(bad)  
   140014114:	(bad)  
   140014115:	(bad)  
   140014116:	(bad)  
   140014117:	(bad)  
   140014118:	(bad)  
   140014119:	(bad)  
   14001411a:	(bad)  
   14001411b:	(bad)  
   14001411c:	(bad)  
   14001411d:	(bad)  
   14001411e:	(bad)  
   14001411f:	(bad)  
   140014120:	(bad)  
   140014121:	(bad)  
   140014122:	(bad)  
   140014123:	(bad)  
   140014124:	(bad)  
   140014125:	(bad)  
   140014126:	(bad)  
   140014127:	(bad)  
   140014128:	(bad)  
   140014129:	(bad)  
   14001412a:	(bad)  
   14001412b:	jmp    FWORD PTR [rdx-0x23005556]
   140014131:	(bad)  
   140014133:	(bad)  
   140014134:	cli    
   140014135:	cli    
   140014136:	cli    
   140014137:	(bad)  
   140014138:	stc    
   140014139:	cli    
   14001413a:	cli    
   14001413b:	(bad)  
   14001413c:	stc    
   14001413d:	cli    
   14001413e:	cli    
   14001413f:	(bad)  
   140014140:	stc    
   140014141:	cli    
   140014142:	cli    
   140014143:	(bad)  
   140014144:	stc    
   140014145:	stc    
   140014146:	stc    
   140014147:	(bad)  
   140014148:	stc    
   140014149:	stc    
   14001414a:	stc    
   14001414b:	inc    DWORD PTR [rax]
   14001414d:	add    BYTE PTR [rax],al
   14001414f:	(bad)  
   140014150:	add    BYTE PTR [rax],al
   140014152:	add    BYTE PTR [rax],ah
	...
   140014170:	(bad)  
   140014171:	(bad)  
   140014172:	(bad)  
   140014173:	(bad)  
   140014174:	std    
   140014175:	std    
   140014176:	std    
   140014177:	(bad)  
   140014178:	std    
   140014179:	std    
   14001417a:	std    
   14001417b:	(bad)  
   14001417c:	cld    
   14001417d:	std    
   14001417e:	std    
   14001417f:	(bad)  
   140014180:	cld    
   140014181:	cld    
   140014182:	cld    
   140014183:	(bad)  
   140014184:	cld    
   140014185:	cld    
   140014186:	cld    
   140014187:	(bad)  
   140014188:	cld    
   140014189:	cld    
   14001418a:	cld    
   14001418b:	(bad)  
   14001418c:	(bad)  
   14001418e:	fdivp  st(7),st
   140014190:	stos   DWORD PTR es:[rdi],eax
   140014191:	stos   DWORD PTR es:[rdi],eax
   140014192:	stos   DWORD PTR es:[rdi],eax
   140014193:	(bad)  
   140014194:	clc    
   140014195:	div    esi
   140014197:	(bad)  
   140014198:	clc    
   140014199:	div    esi
   14001419b:	(bad)  
   14001419c:	clc    
   14001419d:	div    esi
   14001419f:	(bad)  
   1400141a0:	clc    
   1400141a1:	div    esi
   1400141a3:	(bad)  
   1400141a4:	clc    
   1400141a5:	div    esi
   1400141a7:	(bad)  
   1400141a8:	clc    
   1400141a9:	div    esi
   1400141ab:	jmp    FWORD PTR [rbx-0x23005455]
   1400141b1:	(bad)  
   1400141b3:	(bad)  
   1400141b4:	cli    
   1400141b5:	cli    
   1400141b6:	cli    
   1400141b7:	(bad)  
   1400141b8:	cli    
   1400141b9:	cli    
   1400141ba:	cli    
   1400141bb:	(bad)  
   1400141bc:	stc    
   1400141bd:	cli    
   1400141be:	cli    
   1400141bf:	(bad)  
   1400141c0:	stc    
   1400141c1:	cli    
   1400141c2:	cli    
   1400141c3:	(bad)  
   1400141c4:	stc    
   1400141c5:	cli    
   1400141c6:	cli    
   1400141c7:	(bad)  
   1400141c8:	stc    
   1400141c9:	stc    
   1400141ca:	stc    
   1400141cb:	inc    DWORD PTR [rax]
   1400141cd:	add    BYTE PTR [rax],al
   1400141cf:	(bad)  
   1400141d0:	add    BYTE PTR [rax],al
   1400141d2:	add    BYTE PTR [rax],ah
	...
   1400141f0:	(bad)  
   1400141f1:	(bad)  
   1400141f2:	(bad)  
   1400141f3:	(bad)  
   1400141f4:	std    
   1400141f5:	std    
   1400141f6:	std    
   1400141f7:	(bad)  
   1400141f8:	std    
   1400141f9:	std    
   1400141fa:	std    
   1400141fb:	(bad)  
   1400141fc:	std    
   1400141fd:	std    
   1400141fe:	std    
   1400141ff:	(bad)  
   140014200:	cld    
   140014201:	std    
   140014202:	std    
   140014203:	(bad)  
   140014204:	cld    
   140014205:	cld    
   140014206:	cld    
   140014207:	(bad)  
   140014208:	cld    
   140014209:	cld    
   14001420a:	cld    
   14001420b:	(bad)  
   14001420c:	(bad)  
   14001420e:	fdivp  st(7),st
   140014210:	stos   DWORD PTR es:[rdi],eax
   140014211:	stos   DWORD PTR es:[rdi],eax
   140014212:	stos   DWORD PTR es:[rdi],eax
   140014213:	(bad)  
   140014214:	clc    
   140014215:	div    esi
   140014217:	(bad)  
   140014218:	clc    
   140014219:	div    esi
   14001421b:	(bad)  
   14001421c:	clc    
   14001421d:	div    esi
   14001421f:	(bad)  
   140014220:	clc    
   140014221:	div    esi
   140014223:	(bad)  
   140014224:	clc    
   140014225:	div    esi
   140014227:	(bad)  
   140014228:	clc    
   140014229:	div    esi
   14001422b:	jmp    FWORD PTR [rdx-0x23005556]
   140014231:	fstp   st(5)
   140014233:	(bad)  
   140014234:	cli    
   140014235:	cli    
   140014236:	cli    
   140014237:	(bad)  
   140014238:	cli    
   140014239:	cli    
   14001423a:	cli    
   14001423b:	(bad)  
   14001423c:	cli    
   14001423d:	cli    
   14001423e:	cli    
   14001423f:	(bad)  
   140014240:	stc    
   140014241:	cli    
   140014242:	cli    
   140014243:	(bad)  
   140014244:	stc    
   140014245:	cli    
   140014246:	cli    
   140014247:	(bad)  
   140014248:	stc    
   140014249:	cli    
   14001424a:	cli    
   14001424b:	inc    DWORD PTR [rax]
   14001424d:	add    BYTE PTR [rax],al
   14001424f:	(bad)  
   140014250:	add    BYTE PTR [rax],al
   140014252:	add    BYTE PTR [rax],ah
	...
   140014270:	(bad)  
   140014271:	(bad)  
   140014272:	(bad)  
   140014273:	(bad)  
   140014274:	std    
   140014275:	std    
   140014276:	std    
   140014277:	(bad)  
   140014278:	std    
   140014279:	std    
   14001427a:	std    
   14001427b:	(bad)  
   14001427c:	std    
   14001427d:	std    
   14001427e:	std    
   14001427f:	(bad)  
   140014280:	std    
   140014281:	std    
   140014282:	std    
   140014283:	(bad)  
   140014284:	cld    
   140014285:	std    
   140014286:	std    
   140014287:	(bad)  
   140014288:	cld    
   140014289:	std    
   14001428a:	std    
   14001428b:	(bad)  
   14001428c:	(bad)  
   14001428e:	fdivp  st(7),st
   140014290:	stos   DWORD PTR es:[rdi],eax
   140014291:	stos   DWORD PTR es:[rdi],eax
   140014292:	stos   DWORD PTR es:[rdi],eax
   140014293:	call   FWORD PTR [rdx-0x67006566]
   140014299:	cwde   
   14001429a:	cwde   
   14001429b:	call   FWORD PTR [rax-0x65006768]
   1400142a1:	(bad)  
   1400142a2:	(bad)  
   1400142a3:	call   FWORD PTR [rdx-0x66006566]
   1400142a9:	cdq    
   1400142aa:	cdq    
   1400142ab:	jmp    FWORD PTR [rbx-0x23005455]
   1400142b1:	fstp   st(5)
   1400142b3:	(bad)  
   1400142b4:	cli    
   1400142b5:	sti    
   1400142b6:	sti    
   1400142b7:	(bad)  
   1400142b8:	cli    
   1400142b9:	cli    
   1400142ba:	cli    
   1400142bb:	(bad)  
   1400142bc:	cli    
   1400142bd:	cli    
   1400142be:	cli    
   1400142bf:	(bad)  
   1400142c0:	cli    
   1400142c1:	cli    
   1400142c2:	cli    
   1400142c3:	(bad)  
   1400142c4:	stc    
   1400142c5:	cli    
   1400142c6:	cli    
   1400142c7:	call   rsp
   1400142c9:	(bad)  
   1400142ca:	(bad)  
   1400142cb:	inc    DWORD PTR [rax]
   1400142cd:	add    BYTE PTR [rax],al
   1400142cf:	(bad)  
   1400142d0:	add    BYTE PTR [rax],al
   1400142d2:	add    BYTE PTR [rax],ah
	...
   1400142f0:	(bad)  
   1400142f1:	(bad)  
   1400142f2:	(bad)  
   1400142f3:	(bad)  
   1400142f4:	std    
   1400142f5:	std    
   1400142f6:	std    
   1400142f7:	(bad)  
   1400142f8:	std    
   1400142f9:	std    
   1400142fa:	std    
   1400142fb:	(bad)  
   1400142fc:	std    
   1400142fd:	std    
   1400142fe:	std    
   1400142ff:	(bad)  
   140014300:	std    
   140014301:	std    
   140014302:	std    
   140014303:	(bad)  
   140014304:	std    
   140014305:	std    
   140014306:	std    
   140014307:	(bad)  
   140014308:	std    
   140014309:	std    
   14001430a:	std    
   14001430b:	(bad)  
   14001430c:	cld    
   14001430d:	cld    
   14001430e:	cld    
   14001430f:	(bad)  
   140014310:	cld    
   140014311:	cld    
   140014312:	cld    
   140014313:	(bad)  
   140014314:	cld    
   140014315:	cld    
   140014316:	cld    
   140014317:	(bad)  
   140014318:	cld    
   140014319:	cld    
   14001431a:	cld    
   14001431b:	(bad)  
   14001431c:	cld    
   14001431d:	cld    
   14001431e:	cld    
   14001431f:	(bad)  
   140014320:	sti    
   140014321:	cld    
   140014322:	cld    
   140014323:	(bad)  
   140014324:	sti    
   140014325:	cld    
   140014326:	cld    
   140014327:	(bad)  
   140014328:	sti    
   140014329:	sti    
   14001432a:	sti    
   14001432b:	(bad)  
   14001432c:	sti    
   14001432d:	sti    
   14001432e:	sti    
   14001432f:	(bad)  
   140014330:	sti    
   140014331:	sti    
   140014332:	sti    
   140014333:	(bad)  
   140014334:	cli    
   140014335:	sti    
   140014336:	sti    
   140014337:	(bad)  
   140014338:	cli    
   140014339:	sti    
   14001433a:	sti    
   14001433b:	call   rsi
   14001433d:	(bad)  
   14001433e:	(bad)  
   14001433f:	dec    esi
   140014341:	(bad)  
   140014342:	(bad)  
   140014343:	(bad)  
   140014344:	mov    edi,0xb8ffbfbf
   140014349:	mov    eax,0xffb8
   14001434e:	add    BYTE PTR [rbp+0x0],dl
   140014351:	add    BYTE PTR [rax],al
   140014353:	sbb    eax,DWORD PTR [rax]
	...
   14001436d:	add    BYTE PTR [rax],al
   14001436f:	add    dh,dl
   140014371:	(bad)  
   140014372:	(bad)  
   140014373:	(bad)  
   140014374:	std    
   140014375:	std    
   140014376:	std    
   140014377:	(bad)  
   140014378:	std    
   140014379:	std    
   14001437a:	std    
   14001437b:	(bad)  
   14001437c:	std    
   14001437d:	std    
   14001437e:	std    
   14001437f:	(bad)  
   140014380:	std    
   140014381:	std    
   140014382:	std    
   140014383:	(bad)  
   140014384:	std    
   140014385:	std    
   140014386:	std    
   140014387:	(bad)  
   140014388:	std    
   140014389:	std    
   14001438a:	std    
   14001438b:	(bad)  
   14001438c:	cld    
   14001438d:	std    
   14001438e:	std    
   14001438f:	(bad)  
   140014390:	cld    
   140014391:	cld    
   140014392:	cld    
   140014393:	(bad)  
   140014394:	cld    
   140014395:	cld    
   140014396:	cld    
   140014397:	(bad)  
   140014398:	cld    
   140014399:	cld    
   14001439a:	cld    
   14001439b:	(bad)  
   14001439c:	cld    
   14001439d:	cld    
   14001439e:	cld    
   14001439f:	(bad)  
   1400143a0:	cld    
   1400143a1:	cld    
   1400143a2:	cld    
   1400143a3:	(bad)  
   1400143a4:	sti    
   1400143a5:	cld    
   1400143a6:	cld    
   1400143a7:	(bad)  
   1400143a8:	sti    
   1400143a9:	cld    
   1400143aa:	cld    
   1400143ab:	(bad)  
   1400143ac:	sti    
   1400143ad:	sti    
   1400143ae:	sti    
   1400143af:	(bad)  
   1400143b0:	sti    
   1400143b1:	sti    
   1400143b2:	sti    
   1400143b3:	push   QWORD PTR [rdx-0x54004d4e]
   1400143b9:	stos   DWORD PTR es:[rdi],eax
   1400143ba:	stos   DWORD PTR es:[rdi],eax
   1400143bb:	jmp    FWORD PTR [rcx-0x56005657]
   1400143c1:	test   eax,0xafafffa9
   1400143c6:	scas   eax,DWORD PTR es:[rdi]
   1400143c7:	(bad)  
   1400143c8:	mov    eax,0xfeb8b8
   1400143cd:	add    BYTE PTR [rax],al
   1400143cf:	(bad)  
   1400143d0:	add    BYTE PTR [rax],al
   1400143d2:	add    BYTE PTR [rsi],cl
	...
   1400143f0:	(bad)  
   1400143f1:	(bad)  
   1400143f2:	(bad)  
   1400143f3:	(bad)  
   1400143f4:	(bad)  
   1400143f5:	(bad)  
   1400143f6:	(bad)  
   1400143f7:	(bad)  
   1400143f8:	std    
   1400143f9:	std    
   1400143fa:	std    
   1400143fb:	(bad)  
   1400143fc:	std    
   1400143fd:	std    
   1400143fe:	std    
   1400143ff:	(bad)  
   140014400:	std    
   140014401:	std    
   140014402:	std    
   140014403:	(bad)  
   140014404:	std    
   140014405:	std    
   140014406:	std    
   140014407:	(bad)  
   140014408:	std    
   140014409:	std    
   14001440a:	std    
   14001440b:	(bad)  
   14001440c:	std    
   14001440d:	std    
   14001440e:	std    
   14001440f:	(bad)  
   140014410:	cld    
   140014411:	std    
   140014412:	std    
   140014413:	(bad)  
   140014414:	cld    
   140014415:	cld    
   140014416:	cld    
   140014417:	(bad)  
   140014418:	cld    
   140014419:	cld    
   14001441a:	cld    
   14001441b:	(bad)  
   14001441c:	cld    
   14001441d:	cld    
   14001441e:	cld    
   14001441f:	(bad)  
   140014420:	cld    
   140014421:	cld    
   140014422:	cld    
   140014423:	(bad)  
   140014424:	cld    
   140014425:	cld    
   140014426:	cld    
   140014427:	(bad)  
   140014428:	sti    
   140014429:	cld    
   14001442a:	cld    
   14001442b:	(bad)  
   14001442c:	sti    
   14001442d:	cld    
   14001442e:	cld    
   14001442f:	(bad)  
   140014430:	sti    
   140014431:	sti    
   140014432:	sti    
   140014433:	inc    esi
   140014435:	mov    dh,0xff
   140014438:	cmc    
   140014439:	cmc    
   14001443a:	cmc    
   14001443b:	push   rsp
   14001443d:	hlt    
   14001443e:	hlt    
   14001443f:	jmp    rbx
   140014441:	jrcxz  0x140014426
   140014443:	(bad)  
   140014444:	mov    esp,0x64febcbc
   140014449:	fs test BYTE PTR fs:[rax],al
   14001444d:	add    BYTE PTR [rax],al
   14001444f:	adc    al,0x0
   140014451:	add    BYTE PTR [rax],al
   140014453:	add    eax,DWORD PTR [rax]
	...
   14001446d:	add    BYTE PTR [rax],al
   14001446f:	add    dh,dl
   140014471:	(bad)  
   140014472:	(bad)  
   140014473:	(bad)  
   140014474:	(bad)  
   140014475:	(bad)  
   140014476:	(bad)  
   140014477:	(bad)  
   140014478:	(bad)  
   140014479:	(bad)  
   14001447a:	(bad)  
   14001447b:	(bad)  
   14001447c:	std    
   14001447d:	(bad)  
   14001447e:	(bad)  
   14001447f:	(bad)  
   140014480:	std    
   140014481:	std    
   140014482:	std    
   140014483:	(bad)  
   140014484:	std    
   140014485:	std    
   140014486:	std    
   140014487:	(bad)  
   140014488:	std    
   140014489:	std    
   14001448a:	std    
   14001448b:	(bad)  
   14001448c:	std    
   14001448d:	std    
   14001448e:	std    
   14001448f:	(bad)  
   140014490:	std    
   140014491:	std    
   140014492:	std    
   140014493:	(bad)  
   140014494:	cld    
   140014495:	std    
   140014496:	std    
   140014497:	(bad)  
   140014498:	cld    
   140014499:	std    
   14001449a:	std    
   14001449b:	(bad)  
   14001449c:	cld    
   14001449d:	cld    
   14001449e:	cld    
   14001449f:	(bad)  
   1400144a0:	cld    
   1400144a1:	cld    
   1400144a2:	cld    
   1400144a3:	(bad)  
   1400144a4:	cld    
   1400144a5:	cld    
   1400144a6:	cld    
   1400144a7:	(bad)  
   1400144a8:	cld    
   1400144a9:	cld    
   1400144aa:	cld    
   1400144ab:	(bad)  
   1400144ac:	cld    
   1400144ad:	cld    
   1400144ae:	cld    
   1400144af:	(bad)  
   1400144b0:	sti    
   1400144b1:	cld    
   1400144b2:	cld    
   1400144b3:	dec    esi
   1400144b5:	(bad)  
   1400144b6:	(bad)  
   1400144b7:	(bad)  
   1400144b8:	cli    
   1400144b9:	cli    
   1400144ba:	cli    
   1400144bb:	(bad)  
   1400144bc:	jmp    0x1400144a9
   1400144be:	jmp    0x1400144bf
   1400144c0:	retf   0xcaca
   1400144c3:	(bad)  
   1400144c4:	ins    DWORD PTR es:[rdi],dx
   1400144c5:	ins    DWORD PTR es:[rdi],dx
   1400144c6:	ins    DWORD PTR es:[rdi],dx
   1400144c7:	jg     0x1400144c9
   1400144c9:	add    BYTE PTR [rax],al
   1400144cb:	(bad)  
   1400144cc:	add    BYTE PTR [rax],al
   1400144ce:	add    BYTE PTR [rbx],al
	...
   1400144f0:	(bad)  
   1400144f1:	(bad)  
   1400144f2:	(bad)  
   1400144f3:	(bad)  
   1400144f4:	(bad)  
   1400144f5:	(bad)  
   1400144f6:	(bad)  
   1400144f7:	(bad)  
   1400144f8:	(bad)  
   1400144f9:	(bad)  
   1400144fa:	(bad)  
   1400144fb:	(bad)  
   1400144fc:	(bad)  
   1400144fd:	(bad)  
   1400144fe:	(bad)  
   1400144ff:	(bad)  
   140014500:	std    
   140014501:	(bad)  
   140014502:	(bad)  
   140014503:	(bad)  
   140014504:	std    
   140014505:	std    
   140014506:	std    
   140014507:	(bad)  
   140014508:	std    
   140014509:	std    
   14001450a:	std    
   14001450b:	(bad)  
   14001450c:	std    
   14001450d:	std    
   14001450e:	std    
   14001450f:	(bad)  
   140014510:	std    
   140014511:	std    
   140014512:	std    
   140014513:	(bad)  
   140014514:	std    
   140014515:	std    
   140014516:	std    
   140014517:	(bad)  
   140014518:	std    
   140014519:	std    
   14001451a:	std    
   14001451b:	(bad)  
   14001451c:	cld    
   14001451d:	std    
   14001451e:	std    
   14001451f:	(bad)  
   140014520:	cld    
   140014521:	cld    
   140014522:	cld    
   140014523:	(bad)  
   140014524:	cld    
   140014525:	cld    
   140014526:	cld    
   140014527:	(bad)  
   140014528:	cld    
   140014529:	cld    
   14001452a:	cld    
   14001452b:	(bad)  
   14001452c:	cld    
   14001452d:	cld    
   14001452e:	cld    
   14001452f:	(bad)  
   140014530:	cld    
   140014531:	cld    
   140014532:	cld    
   140014533:	dec    ebp
   140014535:	int    0xcd
   140014537:	jmp    rsp
   140014539:	in     al,0xe4
   14001453b:	dec    ecx
   14001453d:	leave  
   14001453e:	leave  
   14001453f:	(bad)  
   140014540:	push   0x7f6868
   140014545:	add    BYTE PTR [rax],al
   140014547:	(bad)  
   140014548:	add    BYTE PTR [rax],al
   14001454a:	add    BYTE PTR [rbx],al
	...
   140014570:	(bad)  
   140014571:	(bad)  
   140014572:	(bad)  
   140014573:	(bad)  
   140014574:	(bad)  
   140014575:	(bad)  
   140014576:	(bad)  
   140014577:	(bad)  
   140014578:	(bad)  
   140014579:	(bad)  
   14001457a:	(bad)  
   14001457b:	(bad)  
   14001457c:	(bad)  
   14001457d:	(bad)  
   14001457e:	(bad)  
   14001457f:	(bad)  
   140014580:	(bad)  
   140014581:	(bad)  
   140014582:	(bad)  
   140014583:	(bad)  
   140014584:	std    
   140014585:	(bad)  
   140014586:	(bad)  
   140014587:	(bad)  
   140014588:	std    
   140014589:	std    
   14001458a:	std    
   14001458b:	(bad)  
   14001458c:	std    
   14001458d:	std    
   14001458e:	std    
   14001458f:	(bad)  
   140014590:	std    
   140014591:	std    
   140014592:	std    
   140014593:	(bad)  
   140014594:	std    
   140014595:	std    
   140014596:	std    
   140014597:	(bad)  
   140014598:	std    
   140014599:	std    
   14001459a:	std    
   14001459b:	(bad)  
   14001459c:	std    
   14001459d:	std    
   14001459e:	std    
   14001459f:	(bad)  
   1400145a0:	cld    
   1400145a1:	std    
   1400145a2:	std    
   1400145a3:	(bad)  
   1400145a4:	cld    
   1400145a5:	cld    
   1400145a6:	cld    
   1400145a7:	(bad)  
   1400145a8:	cld    
   1400145a9:	cld    
   1400145aa:	cld    
   1400145ab:	(bad)  
   1400145ac:	cld    
   1400145ad:	cld    
   1400145ae:	cld    
   1400145af:	(bad)  
   1400145b0:	(bad)  
   1400145b1:	(bad)  
   1400145b2:	(bad)  
   1400145b3:	inc    ebx
   1400145b5:	ret    
   1400145b6:	ret    
   1400145b7:	inc    edi
   1400145b9:	mov    edi,0x656565fe
   1400145bf:	jle    0x1400145c1
   1400145c1:	add    BYTE PTR [rax],al
   1400145c3:	(bad)  
   1400145c4:	add    BYTE PTR [rax],al
   1400145c6:	add    BYTE PTR [rbx],al
	...
   1400145f0:	(bad)  
   1400145f1:	(bad)  
   1400145f2:	(bad)  
   1400145f3:	(bad)  
   1400145f4:	(bad)  
   1400145f5:	(bad)  
   1400145f6:	(bad)  
   1400145f7:	(bad)  
   1400145f8:	(bad)  
   1400145f9:	(bad)  
   1400145fa:	(bad)  
   1400145fb:	(bad)  
   1400145fc:	(bad)  
   1400145fd:	(bad)  
   1400145fe:	(bad)  
   1400145ff:	(bad)  
   140014600:	(bad)  
   140014601:	(bad)  
   140014602:	(bad)  
   140014603:	(bad)  
   140014604:	(bad)  
   140014605:	(bad)  
   140014606:	(bad)  
   140014607:	(bad)  
   140014608:	(bad)  
   140014609:	(bad)  
   14001460a:	(bad)  
   14001460b:	(bad)  
   14001460c:	std    
   14001460d:	std    
   14001460e:	std    
   14001460f:	(bad)  
   140014610:	std    
   140014611:	std    
   140014612:	std    
   140014613:	(bad)  
   140014614:	std    
   140014615:	std    
   140014616:	std    
   140014617:	(bad)  
   140014618:	std    
   140014619:	std    
   14001461a:	std    
   14001461b:	(bad)  
   14001461c:	std    
   14001461d:	std    
   14001461e:	std    
   14001461f:	(bad)  
   140014620:	std    
   140014621:	std    
   140014622:	std    
   140014623:	(bad)  
   140014624:	cld    
   140014625:	std    
   140014626:	std    
   140014627:	(bad)  
   140014628:	cld    
   140014629:	cld    
   14001462a:	cld    
   14001462b:	(bad)  
   14001462c:	cld    
   14001462d:	cld    
   14001462e:	cld    
   14001462f:	(bad)  
   140014630:	(bad)  
   140014632:	fdiv   st(7),st
   140014634:	mov    edi,0x6bfebfbf
   140014639:	imul   ebp,DWORD PTR [rbx-0x7e],0x0
   14001463d:	add    BYTE PTR [rax],al
   14001463f:	sbb    DWORD PTR [rax],eax
   140014641:	add    BYTE PTR [rax],al
   140014643:	add    al,0x0
	...
   14001466d:	add    BYTE PTR [rax],al
   14001466f:	add    dh,dl
   140014671:	(bad)  
   140014672:	(bad)  
   140014673:	call   rsi
   140014675:	(bad)  
   140014676:	(bad)  
   140014677:	call   rsi
   140014679:	(bad)  
   14001467a:	(bad)  
   14001467b:	call   rsi
   14001467d:	(bad)  
   14001467e:	(bad)  
   14001467f:	call   rsi
   140014681:	(bad)  
   140014682:	(bad)  
   140014683:	call   rsi
   140014685:	(bad)  
   140014686:	(bad)  
   140014687:	call   rsi
   140014689:	(bad)  
   14001468a:	(bad)  
   14001468b:	call   rsi
   14001468d:	(bad)  
   14001468e:	(bad)  
   14001468f:	call   rsi
   140014691:	(bad)  
   140014692:	(bad)  
   140014693:	call   rsi
   140014695:	(bad)  
   140014696:	(bad)  
   140014697:	call   rsi
   140014699:	(bad)  
   14001469a:	(bad)  
   14001469b:	call   rsi
   14001469d:	(bad)  
   14001469e:	(bad)  
   14001469f:	call   rsi
   1400146a1:	(bad)  
   1400146a2:	(bad)  
   1400146a3:	call   rsi
   1400146a5:	(bad)  
   1400146a6:	(bad)  
   1400146a7:	call   rsi
   1400146a9:	(bad)  
   1400146aa:	(bad)  
   1400146ab:	call   rsi
   1400146ad:	(bad)  
   1400146ae:	(bad)  
   1400146af:	dec    esp
   1400146b1:	int3   
   1400146b2:	int3   
   1400146b3:	clc    
   1400146b4:	(bad)  
   1400146b5:	(bad)  
   1400146b6:	(bad)  
   1400146b7:	outs   dx,DWORD PTR ds:[rsi]
   1400146b8:	add    BYTE PTR [rax],al
   1400146ba:	add    BYTE PTR [rdx],dl
   1400146bc:	add    BYTE PTR [rax],al
   1400146be:	add    BYTE PTR [rbx],al
	...
   140014760:	lock add BYTE PTR [rax],al
   140014763:	(bad)  
   140014764:	lock add BYTE PTR [rax],al
   140014767:	(bad)  
   140014768:	lock add BYTE PTR [rax],al
   14001476b:	(bad)  
   14001476c:	lock add BYTE PTR [rax],al
   14001476f:	(bad)  
   140014770:	lock add BYTE PTR [rax],al
   140014773:	(bad)  
   140014774:	lock add BYTE PTR [rax],al
   140014777:	(bad)  
   140014778:	lock add BYTE PTR [rax],al
   14001477b:	(bad)  
   14001477c:	lock add BYTE PTR [rax],al
   14001477f:	(bad)  
   140014780:	lock add BYTE PTR [rax],al
   140014783:	(bad)  
   140014784:	lock add BYTE PTR [rax],al
   140014787:	(bad)  
   140014788:	lock add BYTE PTR [rax],al
   14001478b:	(bad)  
   14001478c:	lock add BYTE PTR [rax],al
   14001478f:	(bad)  
   140014790:	lock add BYTE PTR [rax],al
   140014793:	(bad)  
   140014794:	lock add BYTE PTR [rax],al
   140014797:	(bad)  
   140014798:	lock add BYTE PTR [rax],al
   14001479b:	(bad)  
   14001479c:	lock add BYTE PTR [rax],al
   14001479f:	(bad)  
   1400147a0:	lock add BYTE PTR [rax],al
   1400147a3:	(bad)  
   1400147a4:	lock add BYTE PTR [rax],al
   1400147a7:	(bad)  
   1400147a8:	lock add BYTE PTR [rax],al
   1400147ab:	(bad)  
   1400147ac:	lock add BYTE PTR [rax],al
   1400147af:	(bad)  
   1400147b0:	lock add BYTE PTR [rax],al
   1400147b3:	(bad)  
   1400147b4:	lock add BYTE PTR [rax],al
   1400147b7:	(bad)  
   1400147b8:	lock add BYTE PTR [rax],al
   1400147bb:	(bad)  
   1400147bc:	lock add BYTE PTR [rax],al
   1400147bf:	(bad)  
   1400147c0:	lock add BYTE PTR [rax],al
   1400147c3:	(bad)  
   1400147c4:	lock add BYTE PTR [rax],al
   1400147c7:	(bad)  
   1400147c8:	lock add BYTE PTR [rax],al
   1400147cb:	(bad)  
   1400147cd:	add    BYTE PTR [rax],al
   1400147cf:	(bad)  
   1400147d0:	lock add BYTE PTR [rax],al
   1400147d3:	(bad)  
   1400147d4:	lock add BYTE PTR [rax],al
   1400147d7:	jg     0x1400147c9
   1400147d9:	add    BYTE PTR [rax],al
   1400147db:	(bad)  
   1400147dc:	(bad)  
   1400147dd:	(bad)  
   1400147de:	(bad)  
   1400147df:	jmp    FWORD PTR [rax]
   1400147e1:	add    BYTE PTR [rax],al
   1400147e3:	add    BYTE PTR [rax],dl
   1400147e5:	add    BYTE PTR [rax],al
   1400147e7:	add    BYTE PTR [rax],ah
   1400147e9:	add    BYTE PTR [rax],al
   1400147eb:	add    BYTE PTR [rcx],al
   1400147ed:	add    BYTE PTR [rax],ah
   1400147ef:	add    BYTE PTR [rax],al
   1400147f1:	add    BYTE PTR [rax],al
   1400147f3:	add    BYTE PTR [rax+0x4],al
	...
   14001480e:	add    BYTE PTR [rax],al
   140014810:	jp     0x14001488c
   140014812:	jp     0x140014813
   140014814:	jp     0x140014890
   140014816:	jp     0x140014817
   140014818:	jp     0x140014894
   14001481a:	jp     0x14001481b
   14001481c:	jp     0x140014898
   14001481e:	jp     0x14001481f
   140014820:	jp     0x14001489c
   140014822:	jp     0x140014823
   140014824:	jp     0x1400148a0
   140014826:	jp     0x140014827
   140014828:	jp     0x1400148a4
   14001482a:	jp     0x14001482b
   14001482c:	jp     0x1400148a8
   14001482e:	jp     0x14001482f
   140014830:	jp     0x1400148ac
   140014832:	jp     0x140014833
   140014834:	jp     0x1400148b0
   140014836:	jp     0x140014837
   140014838:	jp     0x1400148b4
   14001483a:	jp     0x14001483b
   14001483c:	jp     0x1400148b8
   14001483e:	jp     0x14001483f
	...
   140014850:	xchg   BYTE PTR [rsi-0xf0f007a],al
   140014856:	repnz push rcx
   140014859:	icebp  
   14001485a:	repz push rcx
   14001485d:	repnz repz push rdx
   140014861:	repnz hlt 
   140014863:	push   rbx
   140014865:	hlt    
   140014866:	cmc    
   140014867:	push   rsp
   140014869:	cmc    
   14001486a:	idiv   bh
   14001486c:	cmc    
   14001486d:	cmc    
   14001486e:	idiv   edi
   140014870:	div    dh
   140014872:	idiv   edi
   140014874:	div    edi
   140014876:	clc    
   140014877:	push   rdi
   140014879:	clc    
   14001487a:	stc    
   14001487b:	inc    DWORD PTR [rsi+0xff8686]
	...
   14001488d:	add    BYTE PTR [rax],al
   14001488f:	add    BYTE PTR [rax-0xe006f70],dl
   140014895:	icebp  
   140014896:	repz push rcx
   140014899:	repnz repz (bad) 
   14001489c:	(bad)  
   14001489d:	jmp    0xd89a488d
   1400148a2:	cwde   
   1400148a3:	call   FWORD PTR [rax-0x67006768]
   1400148a9:	cwde   
   1400148aa:	cwde   
   1400148ab:	call   FWORD PTR [rax-0x10006768]
   1400148b1:	out    dx,al
   1400148b2:	out    dx,eax
   1400148b3:	push   rdi
   1400148b5:	clc    
   1400148b6:	stc    
   1400148b7:	(bad)  
   1400148b8:	clc    
   1400148b9:	stc    
   1400148ba:	cli    
   1400148bb:	call   QWORD PTR [rax+0xff9090]
	...
   1400148cd:	add    BYTE PTR [rax],al
   1400148cf:	add    BYTE PTR [rbp-0xd006263],bl
   1400148d5:	repnz repz call FWORD PTR [rax-0x67006768]
   1400148dd:	cwde   
   1400148de:	cwde   
   1400148df:	jmp    rbx
   1400148e1:	fcmovbe st,st(1)
   1400148e3:	jmp    rdi
   1400148e5:	(bad)
   1400148e8:	jo     0x140014872
   1400148ea:	rex.WRXB jmp r11
   1400148ed:	fcmovbe st,st(1)
   1400148ef:	call   FWORD PTR [rax-0x67006768]
   1400148f5:	cwde   
   1400148f6:	cwde   
   1400148f7:	(bad)  
   1400148f8:	stc    
   1400148f9:	cli    
   1400148fa:	cli    
   1400148fb:	call   FWORD PTR [rbp+0xff9d9d]
	...
   14001490d:	add    BYTE PTR [rax],al
   14001490f:	add    BYTE PTR [rsp+rbp*4-0xd0d0054],ch
   140014916:	hlt    
   140014917:	push   QWORD PTR [rdi+0x77]
   14001491a:	ja     0x14001491b
   14001491c:	cmc    
   14001491d:	repz hlt 
   14001491f:	dec    DWORD PTR [rcx+0x49]
   140014922:	dec    QWORD PTR [r10+0x52ff4f6d]
   140014929:	pop    rdx
   14001492a:	rex.X dec DWORD PTR [rcx+0x49]
   14001492e:	rex.WB push r13
   140014931:	repz hlt 
   140014933:	push   QWORD PTR [rdi+0x77]
   140014936:	ja     0x140014937
   140014938:	cli    
   140014939:	sti    
   14001493a:	sti    
   14001493b:	jmp    FWORD PTR [rsp+rbp*4+0xffac]
	...
   14001494e:	add    BYTE PTR [rax],al
   140014950:	lods   eax,DWORD PTR ds:[rsi]
   140014951:	lods   eax,DWORD PTR ds:[rsi]
   140014952:	lods   eax,DWORD PTR ds:[rsi]
   140014953:	push   rbx
   140014955:	repz cmc 
   140014957:	push   QWORD PTR [rdi+0x77]
   14001495a:	ja     0x14001495b
   14001495c:	stos   DWORD PTR es:[rdi],eax
   14001495d:	test   al,0xa6
   14001495f:	jmp    rdx
   140014961:	fcmovbe st,st(3)
   140014963:	jmp    rdx
   140014965:	fcmovbe st,st(3)
   140014967:	jmp    rdx
   140014969:	fcmovbe st,st(3)
   14001496b:	jmp    rdx
   14001496d:	fcmovbe st,st(3)
   14001496f:	jmp    FWORD PTR [rbx+0x77ffa6a8]
   140014975:	ja     0x1400149ee
   140014977:	(bad)  
   140014978:	sti    
   140014979:	sti    
   14001497a:	cld    
   14001497b:	jmp    FWORD PTR [rbp+0xffadad]
	...
   14001498d:	add    BYTE PTR [rax],al
   14001498f:	add    BYTE PTR [rcx-0xb004e4f],dh
   140014995:	hlt    
   140014996:	idiv   bh
   140014998:	ja     0x140014a11
   14001499a:	ja     0x14001499b
   14001499c:	ja     0x140014a15
   14001499e:	ja     0x14001499f
   1400149a0:	mov    BYTE PTR [rax-0x77770078],cl
   1400149a6:	mov    bh,bh
   1400149a8:	mov    BYTE PTR [rax-0x77770078],cl
   1400149ae:	mov    bh,bh
   1400149b0:	ja     0x140014a29
   1400149b2:	ja     0x1400149b3
   1400149b4:	ja     0x140014a2d
   1400149b6:	ja     0x1400149b7
   1400149b8:	sti    
   1400149b9:	cld    
   1400149ba:	cld    
   1400149bb:	push   QWORD PTR [rcx+0xffb1b1]
	...
   1400149cd:	add    BYTE PTR [rax],al
   1400149cf:	add    BYTE PTR [rbx-0xa004c4d],dh
   1400149d5:	cmc    
   1400149d6:	idiv   bh
   1400149d8:	cmc    
   1400149d9:	div    bh
   1400149db:	dec    ebp
   1400149dd:	int    0xcd
   1400149df:	(bad)  
   1400149e0:	(bad)  
   1400149e1:	(bad)  
   1400149e2:	(bad)  
   1400149e3:	(bad)  
   1400149e4:	(bad)  
   1400149e5:	(bad)  
   1400149e6:	(bad)  
   1400149e7:	(bad)  
   1400149e8:	(bad)  
   1400149e9:	(bad)  
   1400149ea:	(bad)  
   1400149eb:	(bad)  
   1400149ec:	(bad)  
   1400149ed:	(bad)  
   1400149ee:	(bad)  
   1400149ef:	dec    ebp
   1400149f1:	int    0xcd
   1400149f3:	(bad)  
   1400149f4:	sti    
   1400149f5:	cld    
   1400149f6:	std    
   1400149f7:	(bad)  
   1400149f8:	cld    
   1400149f9:	std    
   1400149fa:	std    
   1400149fb:	push   QWORD PTR [rbx+0xffb3b3]
	...
   140014a0d:	add    BYTE PTR [rax],al
   140014a0f:	add    BYTE PTR [rax-0x9004748],bh
   140014a15:	idiv   eax
   140014a17:	push   rdi
   140014a19:	clc    
   140014a1a:	stc    
   140014a1b:	dec    ebp
   140014a1d:	int    0xcd
   140014a1f:	(bad)  
   140014a20:	(bad)  
   140014a21:	(bad)  
   140014a22:	(bad)  
   140014a23:	(bad)  
   140014a24:	(bad)  
   140014a25:	(bad)  
   140014a26:	(bad)  
   140014a27:	(bad)  
   140014a28:	(bad)  
   140014a29:	(bad)  
   140014a2a:	(bad)  
   140014a2b:	(bad)  
   140014a2c:	(bad)  
   140014a2d:	(bad)  
   140014a2e:	(bad)  
   140014a2f:	dec    ebp
   140014a31:	int    0xcd
   140014a33:	(bad)  
   140014a34:	std    
   140014a35:	(bad)  
   140014a36:	(bad)  
   140014a37:	(bad)  
   140014a38:	std    
   140014a39:	(bad)  
   140014a3a:	(bad)  
   140014a3b:	(bad)  
   140014a3c:	mov    eax,0xffb8b8
	...
   140014a4d:	add    BYTE PTR [rax],al
   140014a4f:	add    BYTE PTR [rdx-0x8004546],bh
   140014a55:	clc    
   140014a56:	stc    
   140014a57:	(bad)  
   140014a58:	clc    
   140014a59:	stc    
   140014a5a:	cli    
   140014a5b:	dec    ebp
   140014a5d:	int    0xcd
   140014a5f:	dec    ebp
   140014a61:	int    0xcd
   140014a63:	dec    ebp
   140014a65:	int    0xcd
   140014a67:	dec    ebp
   140014a69:	int    0xcd
   140014a6b:	dec    ebp
   140014a6d:	int    0xcd
   140014a6f:	dec    ebp
   140014a71:	int    0xcd
   140014a73:	(bad)  
   140014a74:	std    
   140014a75:	(bad)  
   140014a76:	(bad)  
   140014a77:	(bad)  
   140014a78:	std    
   140014a79:	(bad)  
   140014a7a:	(bad)  
   140014a7b:	(bad)  
   140014a7c:	mov    eax,0xffb8b8
	...
   140014a8d:	add    BYTE PTR [rax],al
   140014a8f:	add    BYTE PTR [rsp+rdi*4-0x6070044],bh
   140014a96:	cli    
   140014a97:	(bad)  
   140014a98:	stc    
   140014a99:	cli    
   140014a9a:	cli    
   140014a9b:	(bad)  
   140014a9c:	cli    
   140014a9d:	cli    
   140014a9e:	sti    
   140014a9f:	(bad)  
   140014aa0:	cli    
   140014aa1:	sti    
   140014aa2:	cld    
   140014aa3:	(bad)  
   140014aa4:	cld    
   140014aa5:	std    
   140014aa6:	std    
   140014aa7:	(bad)  
   140014aa8:	cld    
   140014aa9:	std    
   140014aaa:	std    
   140014aab:	(bad)  
   140014aac:	std    
   140014aad:	(bad)  
   140014aae:	(bad)  
   140014aaf:	(bad)  
   140014ab0:	std    
   140014ab1:	(bad)  
   140014ab2:	(bad)  
   140014ab3:	jmp    rbp
   140014ab5:	in     eax,0xe6
   140014ab7:	(bad)  
   140014ab8:	(bad)  
   140014aba:	loopne 0x140014abb
   140014abc:	mov    edx,0xffbaba
	...
   140014acd:	add    BYTE PTR [rax],al
   140014acf:	add    BYTE PTR [rbp-0x6004243],bh
   140014ad5:	cli    
   140014ad6:	cli    
   140014ad7:	(bad)  
   140014ad8:	cli    
   140014ad9:	sti    
   140014ada:	sti    
   140014adb:	(bad)  
   140014adc:	sti    
   140014add:	sti    
   140014ade:	cld    
   140014adf:	(bad)  
   140014ae0:	sti    
   140014ae1:	cld    
   140014ae2:	cld    
   140014ae3:	(bad)  
   140014ae4:	cld    
   140014ae5:	std    
   140014ae6:	std    
   140014ae7:	(bad)  
   140014ae8:	std    
   140014ae9:	(bad)  
   140014aea:	(bad)  
   140014aeb:	(bad)  
   140014aec:	std    
   140014aed:	(bad)  
   140014aee:	(bad)  
   140014aef:	(bad)  
   140014af0:	mov    edx,0xb8ffbaba
   140014af5:	mov    eax,0xb8b8ffb8
   140014afa:	mov    eax,0xbababaff
   140014aff:	inc    DWORD PTR [rax]
	...
   140014b0d:	add    BYTE PTR [rax],al
   140014b0f:	add    BYTE PTR [rdi-0x5004041],bh
   140014b15:	sti    
   140014b16:	sti    
   140014b17:	(bad)  
   140014b18:	sti    
   140014b19:	sti    
   140014b1a:	cld    
   140014b1b:	(bad)  
   140014b1c:	sti    
   140014b1d:	cld    
   140014b1e:	cld    
   140014b1f:	(bad)  
   140014b20:	cld    
   140014b21:	std    
   140014b22:	std    
   140014b23:	(bad)  
   140014b24:	std    
   140014b25:	(bad)  
   140014b26:	(bad)  
   140014b27:	(bad)  
   140014b28:	std    
   140014b29:	(bad)  
   140014b2a:	(bad)  
   140014b2b:	(bad)  
   140014b2c:	std    
   140014b2d:	(bad)  
   140014b2e:	(bad)  
   140014b2f:	inc    ebp
   140014b31:	(bad)
   140014b34:	div    dh
   140014b36:	idiv   bh
   140014b38:	mov    edx,0xddf9baba
   140014b3d:	fstp   st(5)
   140014b3f:	pop    rdi
	...
   140014b50:	rol    al,0xc0
   140014b53:	(bad)  
   140014b54:	sti    
   140014b55:	sti    
   140014b56:	cld    
   140014b57:	(bad)  
   140014b58:	sti    
   140014b59:	cld    
   140014b5a:	cld    
   140014b5b:	(bad)  
   140014b5c:	cld    
   140014b5d:	std    
   140014b5e:	std    
   140014b5f:	(bad)  
   140014b60:	cld    
   140014b61:	std    
   140014b62:	std    
   140014b63:	(bad)  
   140014b64:	std    
   140014b65:	(bad)  
   140014b66:	(bad)  
   140014b67:	(bad)  
   140014b68:	sti    
   140014b69:	cld    
   140014b6a:	cld    
   140014b6b:	(bad)  
   140014b6c:	std    
   140014b6d:	(bad)  
   140014b6e:	(bad)  
   140014b6f:	dec    edx
   140014b71:	retf   0xffca
   140014b74:	mov    edx,0xe3fdbaba
   140014b79:	in     eax,0xe2
   140014b7b:	imul   eax,DWORD PTR [rax],0x0
	...
   140014b8d:	add    BYTE PTR [rax],al
   140014b8f:	add    al,al
   140014b91:	rol    al,0xff
   140014b94:	rol    al,0xc0
   140014b97:	inc    eax
   140014b99:	rol    al,0xff
   140014b9c:	rol    al,0xc0
   140014b9f:	inc    eax
   140014ba1:	rol    al,0xff
   140014ba4:	rol    al,0xc0
   140014ba7:	inc    eax
   140014ba9:	rol    al,0xff
   140014bac:	rol    al,0xc0
   140014baf:	(bad)  
   140014bb0:	mov    edi,0xf5fcbfbf
   140014bb5:	cmc    
   140014bb6:	cmc    
   140014bb7:	jns    0x140014bb9
	...
   140014c05:	add    BYTE PTR [rax],al
   140014c07:	add    al,al
   140014c09:	add    eax,DWORD PTR [rax]
   140014c0b:	add    al,al
   140014c0d:	add    eax,DWORD PTR [rax]
   140014c0f:	add    al,al
   140014c11:	add    eax,DWORD PTR [rax]
   140014c13:	add    al,al
   140014c15:	add    eax,DWORD PTR [rax]
   140014c17:	add    al,al
   140014c19:	add    eax,DWORD PTR [rax]
   140014c1b:	add    al,al
   140014c1d:	add    eax,DWORD PTR [rax]
   140014c1f:	add    al,al
   140014c21:	add    eax,DWORD PTR [rax]
   140014c23:	add    al,al
   140014c25:	add    eax,DWORD PTR [rax]
   140014c27:	add    al,al
   140014c29:	add    eax,DWORD PTR [rax]
   140014c2b:	add    al,al
   140014c2d:	add    eax,DWORD PTR [rax]
   140014c2f:	add    al,al
   140014c31:	add    eax,DWORD PTR [rax]
   140014c33:	add    al,al
   140014c35:	add    eax,DWORD PTR [rax]
   140014c37:	add    al,al
   140014c39:	add    eax,DWORD PTR [rax]
   140014c3b:	add    al,al
   140014c3d:	(bad)  
   140014c3e:	add    BYTE PTR [rax],al
   140014c40:	ror    BYTE PTR [rdi],0x0
   140014c43:	add    bh,bh
   140014c45:	inc    DWORD PTR [rax]
   140014c47:	add    BYTE PTR [rax],al
   140014c49:	add    BYTE PTR [rcx],al
   140014c4b:	add    BYTE PTR [rsi],al
   140014c4d:	add    BYTE PTR [rax],ah
   140014c4f:	and    BYTE PTR [rax],dl
   140014c51:	add    BYTE PTR [rcx],al
   140014c53:	add    BYTE PTR [rax+rax*1],al
   140014c56:	call   0x149014c5d
   140014c5b:	add    BYTE PTR [rax],dl
   140014c5d:	adc    BYTE PTR [rax],dl
   140014c5f:	add    BYTE PTR [rcx],al
   140014c61:	add    BYTE PTR [rax+rax*1],al
   140014c64:	sub    BYTE PTR [rcx],al
   140014c66:	add    BYTE PTR [rax],al
   140014c68:	or     al,BYTE PTR [rax]
   140014c6a:	and    BYTE PTR [rax],ah
   140014c6c:	add    BYTE PTR [rax],al
   140014c6e:	add    DWORD PTR [rax],eax
   140014c70:	or     BYTE PTR [rax],al
   140014c72:	test   al,0x8
   140014c74:	add    BYTE PTR [rax],al
   140014c76:	or     eax,DWORD PTR [rax]
   140014c78:	adc    BYTE PTR [rax],dl
   140014c7a:	add    BYTE PTR [rax],al
   140014c7c:	add    DWORD PTR [rax],eax
   140014c7e:	or     BYTE PTR [rax],al
   140014c80:	push   0xc000005
   140014c85:	add    BYTE PTR [rax],ah
   140014c87:	and    BYTE PTR [rax],al
   140014c89:	add    BYTE PTR [rcx],al
   140014c8b:	add    BYTE PTR [rax],ah
   140014c8d:	add    BYTE PTR [rax+0xd000010],ch
   140014c93:	add    BYTE PTR [rax],dl
   140014c95:	adc    BYTE PTR [rax],al
   140014c97:	add    BYTE PTR [rcx],al
   140014c99:	add    BYTE PTR [rax],ah
   140014c9b:	add    BYTE PTR [rax+0x4],ch
   140014c9e:	add    BYTE PTR [rax],al
   140014ca0:	(bad)  
   140014ca1:	add    BYTE PTR [rax],al
   140014ca3:	add    BYTE PTR [rax],al
   140014ca5:	add    BYTE PTR [rax],al
   140014ca7:	add    BYTE PTR [rax+0x3403],bl
   140014cad:	add    BYTE PTR [rsi+0x0],dl
   140014cb0:	push   rbx
   140014cb1:	add    BYTE PTR [rdi+0x0],bl
   140014cb4:	push   rsi
   140014cb5:	add    BYTE PTR [rbp+0x0],al
   140014cb8:	push   rdx
   140014cb9:	add    BYTE PTR [rbx+0x0],dl
   140014cbc:	rex.WB add BYTE PTR [r15+0x0],cl
   140014cc0:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   140014cc4:	rex.WB add BYTE PTR [r14+0x0],cl
   140014cc8:	rex.RX add BYTE PTR [rdi+0x0],r9b
   140014ccc:	add    BYTE PTR [rax],al
   140014cce:	add    BYTE PTR [rax],al
   140014cd0:	mov    ebp,0xfeef04
   140014cd5:	add    BYTE PTR [rcx],al
   140014cd7:	add    BYTE PTR [rax],al
   140014cd9:	add    BYTE PTR [rdx],cl
   140014cdb:	add    BYTE PTR [rax],al
   140014cdd:	add    BYTE PTR [rax],bpl
   140014ce0:	add    BYTE PTR [rax],al
   140014ce2:	or     al,BYTE PTR [rax]
   140014ce4:	add    BYTE PTR [rax+0x0],al
   140014ce7:	sub    BYTE PTR [rdi],bh
   140014ce9:	add    BYTE PTR [rax],al
   140014ceb:	add    BYTE PTR [rax],al
   140014ced:	add    BYTE PTR [rax],al
   140014cef:	add    BYTE PTR [rax+rax*1],al
   140014cf2:	add    al,0x0
   140014cf4:	add    DWORD PTR [rax],eax
	...
   140014d02:	add    BYTE PTR [rax],al
   140014d04:	test   BYTE PTR [rdx],0x0
   140014d07:	add    BYTE PTR [rcx],al
   140014d09:	add    BYTE PTR [rbx+0x0],dl
   140014d0c:	je     0x140014d0e
   140014d0e:	jb     0x140014d10
   140014d10:	imul   eax,DWORD PTR [rax],0x67006e
   140014d16:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140014d1a:	ins    BYTE PTR es:[rdi],dx
   140014d1b:	add    BYTE PTR [rbp+0x0],ah
   140014d1e:	rex.WB add BYTE PTR [r14+0x0],bpl
   140014d22:	data16 add BYTE PTR [rdi+0x0],ch
   140014d26:	add    BYTE PTR [rax],al
   140014d28:	rol    BYTE PTR [rdx],cl
   140014d2a:	add    BYTE PTR [rax],al
   140014d2c:	add    DWORD PTR [rax],eax
   140014d2e:	xor    BYTE PTR [rax],al
   140014d30:	xor    al,0x0
   140014d32:	xor    BYTE PTR [rax],al
   140014d34:	cmp    DWORD PTR [rax],eax
   140014d36:	xor    BYTE PTR [rax],al
   140014d38:	xor    al,0x0
   140014d3a:	rex.X add BYTE PTR [rax],sil
   140014d3d:	add    BYTE PTR [rax],al
   140014d3f:	add    BYTE PTR [rax+rax*1+0x16],cl
   140014d43:	add    BYTE PTR [rcx],al
   140014d45:	add    BYTE PTR [rbx+0x0],al
   140014d48:	outs   dx,DWORD PTR ds:[rsi]
   140014d49:	add    BYTE PTR [rbp+0x0],ch
   140014d4c:	jo     0x140014d4e
   140014d4e:	(bad)  
   140014d4f:	add    BYTE PTR [rsi+0x0],ch
   140014d52:	jns    0x140014d54
   140014d54:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140014d58:	ins    DWORD PTR es:[rdi],dx
   140014d59:	add    BYTE PTR [rbp+0x0],ah
   140014d5c:	add    BYTE PTR [rax],al
   140014d5e:	add    BYTE PTR [rax],al
   140014d60:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140014d64:	movsxd eax,DWORD PTR [rax]
   140014d66:	jb     0x140014d68
   140014d68:	outs   dx,DWORD PTR ds:[rsi]
   140014d69:	add    BYTE PTR [rbx+0x0],dh
   140014d6c:	outs   dx,DWORD PTR ds:[rsi]
   140014d6d:	add    BYTE PTR [rsi+0x0],ah
   140014d70:	je     0x140014d72
   140014d72:	and    BYTE PTR [rax],al
   140014d74:	rex.XB add BYTE PTR [r15+0x0],bpl
   140014d78:	jb     0x140014d7a
   140014d7a:	jo     0x140014d7c
   140014d7c:	outs   dx,DWORD PTR ds:[rsi]
   140014d7d:	add    BYTE PTR [rdx+0x0],dh
   140014d80:	(bad)  
   140014d81:	add    BYTE PTR [rax+rax*1+0x69],dh
   140014d85:	add    BYTE PTR [rdi+0x0],ch
   140014d88:	outs   dx,BYTE PTR ds:[rsi]
   140014d89:	add    BYTE PTR [rax],al
   140014d8b:	add    BYTE PTR [rdx+0x0],dl
   140014d8e:	adc    eax,0x46000100
   140014d93:	add    BYTE PTR [rcx+0x0],ch
   140014d96:	ins    BYTE PTR es:[rdi],dx
   140014d97:	add    BYTE PTR [rbp+0x0],ah
   140014d9a:	add    BYTE PTR [rbp+0x0],r12b
   140014d9e:	jae    0x140014da0
   140014da0:	movsxd eax,DWORD PTR [rax]
   140014da2:	jb     0x140014da4
   140014da4:	imul   eax,DWORD PTR [rax],0x740070
   140014daa:	imul   eax,DWORD PTR [rax],0x6e006f
   140014db0:	add    BYTE PTR [rax],al
   140014db2:	add    BYTE PTR [rax],al
   140014db4:	push   rax
   140014db5:	add    BYTE PTR [rdx+0x0],dh
   140014db8:	imul   eax,DWORD PTR [rax],0x74006e
   140014dbe:	rex.X add BYTE PTR [rdx+0x0],sil
   140014dc2:	ins    DWORD PTR es:[rdi],dx
   140014dc3:	add    BYTE PTR [rax],ah
   140014dc5:	add    BYTE PTR [rcx+0x0],al
   140014dc8:	jo     0x140014dca
   140014dca:	jo     0x140014dcc
   140014dcc:	ins    BYTE PTR es:[rdi],dx
   140014dcd:	add    BYTE PTR [rcx+0x0],ch
   140014dd0:	movsxd eax,DWORD PTR [rax]
   140014dd2:	(bad)  
   140014dd3:	add    BYTE PTR [rax+rax*1+0x69],dh
   140014dd7:	add    BYTE PTR [rdi+0x0],ch
   140014dda:	outs   dx,BYTE PTR ds:[rsi]
   140014ddb:	add    BYTE PTR [rax],al
   140014ddd:	add    BYTE PTR [rax],al
   140014ddf:	add    BYTE PTR [rsi+0x0],ah
   140014de2:	and    eax,DWORD PTR [rax]
   140014de4:	add    DWORD PTR [rax],eax
   140014de6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140014dea:	ins    BYTE PTR es:[rdi],dx
   140014deb:	add    BYTE PTR [rbp+0x0],ah
   140014dee:	push   rsi
   140014def:	add    BYTE PTR [rbp+0x0],ah
   140014df2:	jb     0x140014df4
   140014df4:	jae    0x140014df6
   140014df6:	imul   eax,DWORD PTR [rax],0x6e006f
   140014dfc:	add    BYTE PTR [rax],al
   140014dfe:	add    BYTE PTR [rax],al
   140014e00:	xor    DWORD PTR [rax],eax
   140014e02:	xor    BYTE PTR [rax],al
   140014e04:	add    BYTE PTR cs:[rax],dh
   140014e07:	add    BYTE PTR [rsi],ch
   140014e09:	add    BYTE PTR [rcx],dh
   140014e0b:	add    BYTE PTR [rax],dh
   140014e0d:	add    BYTE PTR [rdx],dh
   140014e0f:	add    BYTE PTR [rax+rax*1],dh
   140014e12:	xor    BYTE PTR [rax],al
   140014e14:	add    BYTE PTR cs:[rcx],dh
   140014e17:	add    BYTE PTR [rsi],dh
   140014e19:	add    BYTE PTR [rbx],dh
   140014e1b:	add    BYTE PTR [rax],bh
   140014e1d:	add    BYTE PTR [rax+rax*1],dh
   140014e20:	and    BYTE PTR [rax],al
   140014e22:	sub    BYTE PTR [rax],al
   140014e24:	je     0x140014e26
   140014e26:	push   0x2e003100
   140014e2b:	add    BYTE PTR [rcx],dh
   140014e2d:	add    BYTE PTR [rip+0x37003000],dh        # 0x177017e33
   140014e33:	add    BYTE PTR [rax],dh
   140014e35:	add    BYTE PTR [rcx],bh
   140014e37:	add    BYTE PTR [rip+0x37003100],ch        # 0x177017f3d
   140014e3d:	add    BYTE PTR [rax],dh
   140014e3f:	add    BYTE PTR [rax],dh
   140014e41:	add    BYTE PTR [rcx],ch
   140014e43:	add    BYTE PTR [rax],al
   140014e45:	add    BYTE PTR [rax],al
   140014e47:	add    BYTE PTR [rsi],dh
   140014e49:	add    BYTE PTR [rbx],cl
   140014e4b:	add    BYTE PTR [rcx],al
   140014e4d:	add    BYTE PTR [rcx+0x0],cl
   140014e50:	outs   dx,BYTE PTR ds:[rsi]
   140014e51:	add    BYTE PTR [rax+rax*1+0x65],dh
   140014e55:	add    BYTE PTR [rdx+0x0],dh
   140014e58:	outs   dx,BYTE PTR ds:[rsi]
   140014e59:	add    BYTE PTR [rcx+0x0],ah
   140014e5c:	ins    BYTE PTR es:[rdi],dx
   140014e5d:	add    BYTE PTR [rsi+0x0],cl
   140014e60:	(bad)  
   140014e61:	add    BYTE PTR [rbp+0x0],ch
   140014e64:	add    BYTE PTR gs:[rax],al
   140014e67:	add    BYTE PTR [rax+0x0],dl
   140014e6a:	jb     0x140014e6c
   140014e6c:	imul   eax,DWORD PTR [rax],0x74006e
   140014e72:	rex.X add BYTE PTR [rdx+0x0],sil
   140014e76:	ins    DWORD PTR es:[rdi],dx
   140014e77:	add    BYTE PTR [rbp+0x0],dl
   140014e7a:	imul   eax,DWORD PTR [rax],0x0
   140014e80:	add    BYTE PTR [rax],0x2e
   140014e83:	add    BYTE PTR [rcx],al
   140014e85:	add    BYTE PTR [rax+rax*1+0x65],cl
   140014e89:	add    BYTE PTR [rdi+0x0],ah
   140014e8c:	(bad)  
   140014e8d:	add    BYTE PTR [rax+rax*1+0x43],ch
   140014e91:	add    BYTE PTR [rdi+0x0],ch
   140014e94:	jo     0x140014e96
   140014e96:	jns    0x140014e98
   140014e98:	jb     0x140014e9a
   140014e9a:	imul   eax,DWORD PTR [rax],0x680067
   140014ea0:	je     0x140014ea2
   140014ea2:	add    BYTE PTR [rax],al
   140014ea4:	test   eax,0x4d002000
   140014ea9:	add    BYTE PTR [rcx+0x0],ch
   140014eac:	movsxd eax,DWORD PTR [rax]
   140014eae:	jb     0x140014eb0
   140014eb0:	outs   dx,DWORD PTR ds:[rsi]
   140014eb1:	add    BYTE PTR [rbx+0x0],dh
   140014eb4:	outs   dx,DWORD PTR ds:[rsi]
   140014eb5:	add    BYTE PTR [rsi+0x0],ah
   140014eb8:	je     0x140014eba
   140014eba:	and    BYTE PTR [rax],al
   140014ebc:	rex.XB add BYTE PTR [r15+0x0],bpl
   140014ec0:	jb     0x140014ec2
   140014ec2:	jo     0x140014ec4
   140014ec4:	outs   dx,DWORD PTR ds:[rsi]
   140014ec5:	add    BYTE PTR [rdx+0x0],dh
   140014ec8:	(bad)  
   140014ec9:	add    BYTE PTR [rax+rax*1+0x69],dh
   140014ecd:	add    BYTE PTR [rdi+0x0],ch
   140014ed0:	outs   dx,BYTE PTR ds:[rsi]
   140014ed1:	add    BYTE PTR [rsi],ch
   140014ed3:	add    BYTE PTR [rax],ah
   140014ed5:	add    BYTE PTR [rcx+0x0],al
   140014ed8:	ins    BYTE PTR es:[rdi],dx
   140014ed9:	add    BYTE PTR [rax+rax*1+0x20],ch
   140014edd:	add    BYTE PTR [rdx+0x0],dh
   140014ee0:	imul   eax,DWORD PTR [rax],0x680067
   140014ee6:	je     0x140014ee8
   140014ee8:	jae    0x140014eea
   140014eea:	and    BYTE PTR [rax],al
   140014eec:	jb     0x140014eee
   140014eee:	add    BYTE PTR gs:[rbx+0x0],dh
   140014ef2:	add    BYTE PTR gs:[rdx+0x0],dh
   140014ef6:	jbe    0x140014ef8
   140014ef8:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140014efd:	add    BYTE PTR [rax],al
   140014eff:	add    BYTE PTR [rsi+0x0],al
   140014f02:	sldt   WORD PTR [rcx]
   140014f05:	add    BYTE PTR [rdi+0x0],cl
   140014f08:	jb     0x140014f0a
   140014f0a:	imul   eax,DWORD PTR [rax],0x690067
   140014f10:	outs   dx,BYTE PTR ds:[rsi]
   140014f11:	add    BYTE PTR [rcx+0x0],ah
   140014f14:	ins    BYTE PTR es:[rdi],dx
   140014f15:	add    BYTE PTR [rsi+0x0],al
   140014f18:	imul   eax,DWORD PTR [rax],0x65006c
   140014f1e:	outs   dx,BYTE PTR ds:[rsi]
   140014f1f:	add    BYTE PTR [rcx+0x0],ah
   140014f22:	ins    DWORD PTR es:[rdi],dx
   140014f23:	add    BYTE PTR [rbp+0x0],ah
   140014f26:	add    BYTE PTR [rax],al
   140014f28:	push   rax
   140014f29:	add    BYTE PTR [rdx+0x0],dh
   140014f2c:	imul   eax,DWORD PTR [rax],0x74006e
   140014f32:	rex.X add BYTE PTR [rdx+0x0],sil
   140014f36:	ins    DWORD PTR es:[rdi],dx
   140014f37:	add    BYTE PTR [rbp+0x0],dl
   140014f3a:	imul   eax,DWORD PTR [rax],0x65002e
   140014f40:	js     0x140014f42
   140014f42:	add    BYTE PTR gs:[rax],al
   140014f45:	add    BYTE PTR [rax],al
   140014f47:	add    BYTE PTR [rdx+0x0],ch
   140014f4a:	and    eax,0x50000100
   140014f4f:	add    BYTE PTR [rdx+0x0],dh
   140014f52:	outs   dx,DWORD PTR ds:[rsi]
   140014f53:	add    BYTE PTR [rax+rax*1+0x75],ah
   140014f57:	add    BYTE PTR [rbx+0x0],ah
   140014f5a:	je     0x140014f5c
   140014f5c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140014f60:	ins    DWORD PTR es:[rdi],dx
   140014f61:	add    BYTE PTR [rbp+0x0],ah
   140014f64:	add    BYTE PTR [rax],al
   140014f66:	add    BYTE PTR [rax],al
   140014f68:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140014f6c:	movsxd eax,DWORD PTR [rax]
   140014f6e:	jb     0x140014f70
   140014f70:	outs   dx,DWORD PTR ds:[rsi]
   140014f71:	add    BYTE PTR [rbx+0x0],dh
   140014f74:	outs   dx,DWORD PTR ds:[rsi]
   140014f75:	add    BYTE PTR [rsi+0x0],ah
   140014f78:	je     0x140014f7a
   140014f7a:	scas   al,BYTE PTR es:[rdi]
   140014f7b:	add    BYTE PTR [rax],ah
   140014f7d:	add    BYTE PTR [rdi+0x0],dl
   140014f80:	imul   eax,DWORD PTR [rax],0x64006e
   140014f86:	outs   dx,DWORD PTR ds:[rsi]
   140014f87:	add    BYTE PTR [rdi+0x0],dh
   140014f8a:	jae    0x140014f8c
   140014f8c:	scas   al,BYTE PTR es:[rdi]
   140014f8d:	add    BYTE PTR [rax],ah
   140014f8f:	add    BYTE PTR [rdi+0x0],cl
   140014f92:	jo     0x140014f94
   140014f94:	add    BYTE PTR gs:[rdx+0x0],dh
   140014f98:	(bad)  
   140014f99:	add    BYTE PTR [rax+rax*1+0x69],dh
   140014f9d:	add    BYTE PTR [rsi+0x0],ch
   140014fa0:	add    BYTE PTR [eax],ah
   140014fa3:	add    BYTE PTR [rbx+0x0],dl
   140014fa6:	jns    0x140014fa8
   140014fa8:	jae    0x140014faa
   140014faa:	je     0x140014fac
   140014fac:	add    BYTE PTR gs:[rbp+0x0],ch
   140014fb0:	add    BYTE PTR [rax],al
   140014fb2:	add    BYTE PTR [rax],al
   140014fb4:	rex.RX add BYTE PTR [rcx],r10b
   140014fb7:	add    BYTE PTR [rcx],al
   140014fb9:	add    BYTE PTR [rax+0x0],dl
   140014fbc:	jb     0x140014fbe
   140014fbe:	outs   dx,DWORD PTR ds:[rsi]
   140014fbf:	add    BYTE PTR [rax+rax*1+0x75],ah
   140014fc3:	add    BYTE PTR [rbx+0x0],ah
   140014fc6:	je     0x140014fc8
   140014fc8:	push   rsi
   140014fc9:	add    BYTE PTR [rbp+0x0],ah
   140014fcc:	jb     0x140014fce
   140014fce:	jae    0x140014fd0
   140014fd0:	imul   eax,DWORD PTR [rax],0x6e006f
   140014fd6:	add    BYTE PTR [rax],al
   140014fd8:	xor    DWORD PTR [rax],eax
   140014fda:	xor    BYTE PTR [rax],al
   140014fdc:	add    BYTE PTR cs:[rax],dh
   140014fdf:	add    BYTE PTR [rsi],ch
   140014fe1:	add    BYTE PTR [rcx],dh
   140014fe3:	add    BYTE PTR [rax],dh
   140014fe5:	add    BYTE PTR [rdx],dh
   140014fe7:	add    BYTE PTR [rax+rax*1],dh
   140014fea:	xor    BYTE PTR [rax],al
   140014fec:	add    BYTE PTR cs:[rcx],dh
   140014fef:	add    BYTE PTR [rsi],dh
   140014ff1:	add    BYTE PTR [rbx],dh
   140014ff3:	add    BYTE PTR [rax],bh
   140014ff5:	add    BYTE PTR [rax+rax*1],dh
   140014ff8:	add    BYTE PTR [rax],al
   140014ffa:	add    BYTE PTR [rax],al
   140014ffc:	add    BYTE PTR [rax],r8b
   140014fff:	add    BYTE PTR [rcx],al
   140015001:	add    BYTE PTR [rsi+0x0],dl
   140015004:	(bad)  
   140015005:	add    BYTE PTR [rdx+0x0],dh
   140015008:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001500c:	ins    BYTE PTR es:[rdi],dx
   14001500d:	add    BYTE PTR [rbp+0x0],ah
   140015010:	rex.WB add BYTE PTR [r14+0x0],bpl
   140015014:	data16 add BYTE PTR [rdi+0x0],ch
   140015018:	add    BYTE PTR [rax],al
   14001501a:	add    BYTE PTR [rax],al
   14001501c:	and    al,0x0
   14001501e:	add    al,0x0
   140015020:	add    BYTE PTR [rax],al
   140015022:	push   rsp
   140015023:	add    BYTE PTR [rdx+0x0],dh
   140015026:	(bad)  
   140015027:	add    BYTE PTR [rsi+0x0],ch
   14001502a:	jae    0x14001502c
   14001502c:	ins    BYTE PTR es:[rdi],dx
   14001502d:	add    BYTE PTR [rcx+0x0],ah
   140015030:	je     0x140015032
   140015032:	imul   eax,DWORD PTR [rax],0x6e006f
   140015038:	add    BYTE PTR [rax],al
   14001503a:	add    BYTE PTR [rax],al
   14001503c:	or     DWORD PTR [rax+rsi*4],eax
   14001503f:	add    al,0xcd
   140015041:	dec    ch
   140015043:	(bad)  
   140015044:	loopne 0x140015046
   140015046:	add    BYTE PTR [rax],al
   140015048:	add    BYTE PTR [rax],al
   14001504a:	add    DWORD PTR [rax],eax
   14001504c:	add    BYTE PTR [rax],al
   14001504e:	add    BYTE PTR [rax],al
   140015050:	adc    DWORD PTR [rax],eax
   140015052:	add    BYTE PTR [rax],al
   140015054:	add    BYTE PTR [rax],al
   140015056:	add    BYTE PTR [rax],al
   140015058:	add    al,BYTE PTR [rax]
   14001505a:	add    BYTE PTR [rax],al
   14001505c:	leave  
   14001505d:	js     0x140015030
   14001505f:	stos   BYTE PTR es:[rdi],al
   140015060:	(bad)  
   140015061:	lea    ebp,[rcx+0x311b8b77]
   140015067:	(bad)  
   140015068:	js     0x140015047
   14001506a:	or     DWORD PTR [rdx-0x74b4473b],0x18
   140015071:	sbb    dh,cl
   140015073:	es (bad) 
   140015075:	rex.WRX stos QWORD PTR es:[rdi],rax
   140015077:	clc    
   140015078:	or     esi,DWORD PTR [rcx+rsi*4+0x33]
	...
   140015094:	mov    BYTE PTR [rax],al
   140015096:	add    BYTE PTR [rax],al
   140015098:	(bad)  
   140015099:	add    BYTE PTR [rax],al
   14001509b:	add    BYTE PTR [rax+0x10000000],bl
   1400150a1:	add    BYTE PTR [rax],al
   1400150a3:	add    BYTE PTR [rax+0xe000000],ch
   1400150a9:	add    BYTE PTR [rax],al
   1400150ab:	add    BYTE PTR [rax+0x14000000],bh
	...
   1400150b9:	add    BYTE PTR [rax],al
   1400150bb:	add    al,dl
   1400150bd:	add    BYTE PTR [rax],al
   1400150bf:	add    BYTE PTR [rax+rax*1],cl
   1400150c2:	add    BYTE PTR [rax],al
   1400150c4:	add    BYTE PTR [rax],al
   1400150c6:	add    BYTE PTR [rax],al
   1400150c8:	rex.WRB add BYTE PTR [r13+0x0],r10b
   1400150cc:	rex.WB add BYTE PTR [r8],al
	...
   1400150d7:	add    BYTE PTR [rbx],al
   1400150d9:	add    BYTE PTR [rax],al
   1400150db:	add    BYTE PTR [rsi],cl
   1400150dd:	add    BYTE PTR [rax],al
   1400150df:	add    BYTE PTR [rax],dl
   1400150e1:	add    BYTE PTR [rax],al
   1400150e3:	add    BYTE PTR [rax],bl
   1400150e5:	add    BYTE PTR [rax],al
   1400150e7:	add    BYTE PTR [rbp+0x0],cl
   1400150ea:	push   rbp
   1400150eb:	add    BYTE PTR [rcx+0x0],cl
	...
   1400150f6:	add    BYTE PTR [rax],al
   1400150f8:	add    eax,DWORD PTR [rax]
   1400150fa:	add    BYTE PTR [rax],al
   1400150fc:	add    eax,0x6000000
   140015101:	add    BYTE PTR [rax],al
   140015103:	add    BYTE PTR [rsi],cl
   140015105:	add    BYTE PTR [rax],al
   140015107:	add    BYTE PTR [rax],dl
   140015109:	add    BYTE PTR [rax],al
   14001510b:	add    BYTE PTR [rax],al
   14001510d:	add    BYTE PTR [rax],al
   14001510f:	add    BYTE PTR [rbp+0x0],ah
   140015112:	outs   dx,BYTE PTR ds:[rsi]
   140015113:	add    BYTE PTR [rip+0x53005500],ch        # 0x19301a619
   140015119:	add    BYTE PTR [rax],al
   14001511b:	add    BYTE PTR [rax],al
   14001511d:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140016000 <.reloc>:
   140016000:	add    BYTE PTR [rax+0x10c0000],ah
   140016006:	add    BYTE PTR [rax],al
   140016008:	and    BYTE PTR [rax+rbp*1+0x40a438a4],ah
   14001600f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016010:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016012:	push   rax
   140016013:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016014:	push   0xffffffffc0a470a4
   140016019:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001601a:	enter  0x40a5,0xa6
   14001601e:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016020:	push   rax
   140016021:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016022:	pop    rax
   140016023:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016024:	(bad)  
   140016025:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016026:	push   0x78a670a6
   14001602b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001602c:	and    BYTE PTR [rsi-0x596f5978],0x98
   140016033:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016034:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   14001603d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001603e:	enter  0xd0a6,0xa6
   140016042:	fsub   DWORD PTR [rsi-0x59175920]
   140016048:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001604a:	clc    
   14001604b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001604c:	add    BYTE PTR [rdi-0x58ef58f8],ah
   140016052:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   140016058:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   14001605e:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140016060:	push   rax
   140016061:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016062:	pop    rax
   140016063:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016064:	(bad)  
   140016065:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016066:	push   0x78a770a7
   14001606b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001606c:	and    BYTE PTR [rdi-0x586f5878],0x98
   140016073:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016074:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   14001607d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001607e:	enter  0xd0a7,0xa7
   140016082:	fsub   DWORD PTR [rdi-0x58175820]
   140016088:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001608a:	clc    
   14001608b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001608c:	add    BYTE PTR [rax-0x57ef57f8],ch
   140016092:	sbb    BYTE PTR [rax-0x57d757e0],ch
   140016098:	xor    BYTE PTR [rax-0x57bf57c8],ch
   14001609e:	rex.W test al,0x50
   1400160a1:	test   al,0x58
   1400160a3:	test   al,0x60
   1400160a5:	test   al,0x68
   1400160a7:	test   al,0x70
   1400160a9:	test   al,0x78
   1400160ab:	test   al,0x80
   1400160ad:	test   al,0x88
   1400160af:	test   al,0x90
   1400160b1:	test   al,0x98
   1400160b3:	test   al,0xa0
   1400160b5:	test   al,0xa8
   1400160b7:	test   al,0xb0
   1400160b9:	test   al,0xb8
   1400160bb:	test   al,0xc0
   1400160bd:	test   al,0xc8
   1400160bf:	test   al,0xd0
   1400160c1:	test   al,0xd8
   1400160c3:	test   al,0xe0
   1400160c5:	test   al,0xe8
   1400160c7:	test   al,0xf0
   1400160c9:	test   al,0xf8
   1400160cb:	test   al,0x0
   1400160cd:	test   eax,0xa910a908
   1400160d2:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   1400160d8:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   1400160de:	test   rax,0xffffffffa958a950
   1400160e4:	(bad)  
   1400160e5:	test   eax,0xa970a968
   1400160ea:	js     0x140016095
   1400160ec:	sub    BYTE PTR [rcx-0x566f5678],0x98
   1400160f3:	test   eax,0xa9a8a9a0
   1400160f8:	mov    al,0xa9
   1400160fa:	mov    eax,0xc8a9c0a9
   1400160ff:	test   eax,0xa9d8a9d0
   140016104:	loopne 0x1400160af
   140016106:	call   0x140ab51b4
   14001610b:	add    BYTE PTR [rax],al
   14001610d:	mov    al,0x0
   14001610f:	add    BYTE PTR [rax],dl
   140016111:	add    BYTE PTR [rax],al
   140016113:	add    BYTE PTR [rax-0x5d],cl
   140016116:	(bad)  
   140016117:	movabs ds:0xd000a370a368,eax
   140016120:	or     al,0x0
   140016122:	add    BYTE PTR [rax],al
   140016124:	.byte 0x20
   140016125:	.byte 0xa0
	...
