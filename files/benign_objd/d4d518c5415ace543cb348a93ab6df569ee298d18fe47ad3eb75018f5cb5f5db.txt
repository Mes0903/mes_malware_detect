
d4d518c5415ace543cb348a93ab6df569ee298d18fe47ad3eb75018f5cb5f5db.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0xaf55]        # 0x40bf70
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0xaf56]        # 0x40bf80
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0xaf59]        # 0x40bf90
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0xaf1c]        # 0x40bf60
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0xad7f]        # 0x40bdd0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0xaef1]        # 0x40bf50
  40105f:	mov    DWORD PTR [rip+0xdfa3],edx        # 0x40f008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x408088
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x4024a0
  401081:	mov    rdx,QWORD PTR [rip+0xadd8]        # 0x40be60
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0xadbe]        # 0x40be50
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0xae54]        # 0x40bef0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0xad5b]        # 0x40be00
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x402080
  4010af:	mov    rax,QWORD PTR [rip+0xacaa]        # 0x40bd60
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x408088
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x1259]        # 0x402380
  401127:	call   0x402370
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0xadb5]        # 0x40bf20
  40116b:	lea    r8,[rip+0xdea6]        # 0x40f018
  401172:	lea    rdx,[rip+0xdea7]        # 0x40f020
  401179:	lea    rcx,[rip+0xdea8]        # 0x40f028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xde78],eax        # 0x40f000
  401188:	lea    rax,[rip+0xde71]        # 0x40f000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0xad45]        # 0x40bee0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x4080a0
  4011a3:	mov    DWORD PTR [rip+0xde67],eax        # 0x40f010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0xad8a]        # 0x40bf50
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0xac3b]        # 0x40be30
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x1029e]        # 0x4114a0
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0xac17]        # 0x40be40
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0xddba],0x1        # 0x40f004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0xab4c]        # 0x40bdb0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x402690
  40127d:	lea    rcx,[rip+0x19ac]        # 0x402c30
  401284:	call   QWORD PTR [rip+0x1020e]        # 0x411498
  40128a:	mov    rdx,QWORD PTR [rip+0xab8f]        # 0x40be20
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402b40
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x4080d0
  4012a5:	call   0x402480
  4012aa:	mov    rax,QWORD PTR [rip+0xab1f]        # 0x40bdd0
  4012b1:	mov    QWORD PTR [rip+0xf1e0],rax        # 0x410498
  4012b8:	mov    rax,QWORD PTR [rip+0xab31]        # 0x40bdf0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xf179],rax        # 0x410490
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x8cca],eax        # 0x40a000
  401336:	mov    r12d,DWORD PTR [rip+0xdceb]        # 0x40f028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x407fc8
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xdcc2]        # 0x40f020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x407f78
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x407fc8
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x407fc0
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xdc6a],rbp        # 0x40f020
  4013b6:	call   0x402050
  4013bb:	mov    rax,QWORD PTR [rip+0xaa1e]        # 0x40bde0
  4013c2:	mov    rdx,QWORD PTR [rip+0xdc4f]        # 0x40f018
  4013c9:	mov    ecx,DWORD PTR [rip+0xdc59]        # 0x40f028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xdc3c]        # 0x40f018
  4013dc:	mov    rdx,QWORD PTR [rip+0xdc3d]        # 0x40f020
  4013e3:	call   0x4081a0
  4013e8:	mov    ecx,DWORD PTR [rip+0xdc1a]        # 0x40f008
  4013ee:	mov    DWORD PTR [rip+0xdc18],eax        # 0x40f00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0xdc02]        # 0x40f004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x408070
  40140b:	mov    eax,DWORD PTR [rip+0xdbfb]        # 0x40f00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0xaa09]        # 0x40be40
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x408078
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0xaa4d]        # 0x40beb0
  401463:	mov    rcx,QWORD PTR [rip+0xaa36]        # 0x40bea0
  40146a:	call   0x408060
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xffaf]        # 0x411448
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0xaa29]        # 0x40bed0
  4014a7:	mov    rcx,QWORD PTR [rip+0xaa12]        # 0x40bec0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x408060
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x408028
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0xaa75]        # 0x40bf50
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x402090
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0xaa45]        # 0x40bf50
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x402090
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   r15
  401532:	push   r14
  401534:	push   r13
  401536:	push   r12
  401538:	push   rbp
  401539:	push   rdi
  40153a:	push   rsi
  40153b:	push   rbx
  40153c:	sub    rsp,0xe8
  401543:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  40154b:	movaps XMMWORD PTR [rsp+0xb0],xmm7
  401553:	movaps XMMWORD PTR [rsp+0xc0],xmm8
  40155c:	movaps XMMWORD PTR [rsp+0xd0],xmm9
  401565:	lea    rax,[rip+0x964]        # 0x401ed0
  40156c:	pxor   xmm6,xmm6
  401570:	test   ecx,ecx
  401572:	mov    ebp,ecx
  401574:	mov    r12,r9
  401577:	mov    QWORD PTR [rsp+0x138],rdx
  40157f:	lea    rdx,[rip+0x1eba]        # 0x403440
  401586:	mov    QWORD PTR [rsp+0x140],r8
  40158e:	mov    ebx,DWORD PTR [rsp+0x150]
  401595:	mov    r15,QWORD PTR [rsp+0x158]
  40159d:	cmovne rax,rdx
  4015a1:	cmp    BYTE PTR [r8],0x0
  4015a5:	mov    rsi,rax
  4015a8:	movapd xmm7,xmm6
  4015ac:	jne    0x401913
  4015b2:	movapd xmm8,xmm6
  4015b7:	movapd xmm9,xmm6
  4015bc:	lea    rdx,[rip+0xa00e]        # 0x40b5d1
  4015c3:	mov    ecx,0x10
  4015c8:	call   0x401ec8
  4015cd:	mov    rsi,QWORD PTR [rsp+0x140]
  4015d5:	cmp    BYTE PTR [rsi],0x2c
  4015d8:	je     0x4019a0
  4015de:	mov    BYTE PTR [rsp+0x5f],0x0
  4015e3:	mov    BYTE PTR [rsp+0x5e],0x0
  4015e8:	mov    r13d,0xffffffff
  4015ee:	mov    DWORD PTR [rsp+0x58],0xf
  4015f6:	mov    DWORD PTR [rsp+0x54],0xf
  4015fe:	xor    edi,edi
  401600:	cmp    BYTE PTR [rsi],0x0
  401603:	lea    rdx,[rip+0x9ebc]        # 0x40b4c6
  40160a:	jne    0x4018d0
  401610:	lea    rcx,[rip+0x9ebc]        # 0x40b4d3
  401617:	lea    rsi,[rsp+0x90]
  40161f:	call   0x407fb8
  401624:	test   ebx,ebx
  401626:	jle    0x4016ab
  40162c:	lea    eax,[rbx-0x1]
  40162f:	xor    r14d,r14d
  401632:	lea    rsi,[rsp+0x90]
  40163a:	lea    rbx,[r15+rax*8+0x8]
  40163f:	jmp    0x401663
  401641:	lea    rcx,[rip+0x9ea4]        # 0x40b4ec
  401648:	mov    r8,rsi
  40164b:	call   0x407fb8
  401650:	add    r14d,DWORD PTR [rsp+0x90]
  401658:	cmp    r14d,0x32
  40165c:	jg     0x401690
  40165e:	cmp    r15,rbx
  401661:	je     0x4016a2
  401663:	add    r15,0x8
  401667:	mov    rdx,QWORD PTR [r15-0x8]
  40166b:	cmp    BYTE PTR [rdx],0x2b
  40166e:	je     0x40165e
  401670:	test   r14d,r14d
  401673:	jne    0x401641
  401675:	mov    ecx,0x23
  40167a:	mov    QWORD PTR [rsp+0x48],rdx
  40167f:	mov    r14b,0x1
  401682:	call   0x407fb0
  401687:	mov    rdx,QWORD PTR [rsp+0x48]
  40168c:	jmp    0x401641
  40168e:	xchg   ax,ax
  401690:	mov    ecx,0xa
  401695:	xor    r14d,r14d
  401698:	call   0x407fb0
  40169d:	cmp    r15,rbx
  4016a0:	jne    0x401663
  4016a2:	test   r14d,r14d
  4016a5:	jne    0x401904
  4016ab:	lea    rcx,[rip+0x9e40]        # 0x40b4f2
  4016b2:	call   0x407fa8
  4016b7:	mov    rcx,r12
  4016ba:	call   0x401e50
  4016bf:	ucomisd xmm8,xmm7
  4016c4:	jp     0x4016cc
  4016c6:	je     0x401880
  4016cc:	ucomisd xmm9,xmm6
  4016d1:	jae    0x401880
  4016d7:	ucomisd xmm7,xmm8
  4016dc:	jbe    0x4016e6
  4016de:	subsd  xmm7,QWORD PTR [rip+0x9f0a]        # 0x40b5f0
  4016e6:	cmp    BYTE PTR [rsp+0x5e],0x0
  4016eb:	jne    0x401ac1
  4016f1:	cmp    BYTE PTR [rsp+0x5f],0x0
  4016f6:	jne    0x401ac1
  4016fc:	pxor   xmm1,xmm1
  401700:	movsd  xmm0,QWORD PTR [rip+0x9ef0]        # 0x40b5f8
  401708:	cvtsi2sd xmm1,r13d
  40170d:	call   0x4035c0
  401712:	mov    eax,DWORD PTR [rsp+0x54]
  401716:	movsd  xmm2,QWORD PTR [rip+0x9ee2]        # 0x40b600
  40171e:	lea    rdx,[rsp+0x60]
  401723:	lea    rcx,[rsp+0x70]
  401728:	mov    DWORD PTR [rsp+0x38],edi
  40172c:	mulsd  xmm2,xmm0
  401730:	mov    r9,rsi
  401733:	movq   QWORD PTR [rsp+0x70],xmm7
  401739:	mov    DWORD PTR [rsp+0x30],eax
  40173d:	mov    eax,DWORD PTR [rsp+0x58]
  401741:	movq   QWORD PTR [rsp+0x78],xmm9
  401748:	movq   QWORD PTR [rsp+0x60],xmm8
  40174f:	movq   QWORD PTR [rsp+0x68],xmm6
  401755:	mov    DWORD PTR [rsp+0x28],eax
  401759:	mov    rax,QWORD PTR [rsp+0x138]
  401761:	mov    QWORD PTR [rsp+0x20],rax
  401766:	call   0x401ec0
  40176b:	test   rax,rax
  40176e:	mov    rbx,rax
  401771:	je     0x401b42
  401777:	test   ebp,ebp
  401779:	je     0x4018a0
  40177f:	movsd  xmm1,QWORD PTR [rip+0x9e81]        # 0x40b608
  401787:	mov    edx,0x49
  40178c:	mulsd  xmm1,QWORD PTR [r12+0x98]
  401796:	movsd  QWORD PTR [rsp+0x30],xmm6
  40179c:	movapd xmm3,xmm7
  4017a0:	movsd  QWORD PTR [rsp+0x28],xmm9
  4017a7:	movq   r9,xmm7
  4017ac:	movq   r8,xmm1
  4017b1:	movsd  QWORD PTR [rsp+0x20],xmm8
  4017b8:	movapd xmm2,xmm1
  4017bc:	lea    rcx,[rip+0x9dbd]        # 0x40b580
  4017c3:	call   0x407fb8
  4017c8:	test   edi,edi
  4017ca:	jne    0x401a80
  4017d0:	test   r13d,r13d
  4017d3:	jle    0x401af0
  4017d9:	lea    rsi,[rsp+0x80]
  4017e1:	mov    DWORD PTR [rsp+0x80],0x66302e25
  4017ec:	mov    BYTE PTR [rsp+0x84],0x0
  4017f4:	call   QWORD PTR [rip+0xfcfe]        # 0x4114f8
  4017fa:	lea    rdx,[rax+0x30]
  4017fe:	mov    r8,rsi
  401801:	mov    rcx,rbx
  401804:	call   0x401ba0
  401809:	lea    r9,[rip+0x9cb6]        # 0x40b4c6
  401810:	movsd  xmm1,QWORD PTR [rsp+0x98]
  401819:	lea    rcx,[rip+0x9d90]        # 0x40b5b0
  401820:	movsd  xmm0,QWORD PTR [rsp+0x90]
  401829:	movapd xmm2,xmm1
  40182d:	movq   r8,xmm1
  401832:	movq   rdx,xmm0
  401837:	movapd xmm1,xmm0
  40183b:	call   0x407fb8
  401840:	nop
  401841:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  401849:	movaps xmm7,XMMWORD PTR [rsp+0xb0]
  401851:	movaps xmm8,XMMWORD PTR [rsp+0xc0]
  40185a:	movaps xmm9,XMMWORD PTR [rsp+0xd0]
  401863:	add    rsp,0xe8
  40186a:	pop    rbx
  40186b:	pop    rsi
  40186c:	pop    rdi
  40186d:	pop    rbp
  40186e:	pop    r12
  401870:	pop    r13
  401872:	pop    r14
  401874:	pop    r15
  401876:	ret    
  401877:	nop    WORD PTR [rax+rax*1+0x0]
  401880:	lea    rdx,[rip+0x9c83]        # 0x40b50a
  401887:	mov    ecx,0x10
  40188c:	call   0x401ec8
  401891:	jmp    0x4016d7
  401896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4018a0:	movsd  xmm1,QWORD PTR [rip+0x9d60]        # 0x40b608
  4018a8:	mov    edx,0x46
  4018ad:	mulsd  xmm6,xmm1
  4018b1:	mulsd  xmm9,xmm1
  4018b6:	mulsd  xmm8,xmm1
  4018bb:	mulsd  xmm7,xmm1
  4018bf:	mulsd  xmm1,QWORD PTR [r12+0x98]
  4018c9:	jmp    0x401796
  4018ce:	xchg   ax,ax
  4018d0:	lea    rdi,[rip+0x9bf9]        # 0x40b4d0
  4018d7:	mov    ecx,0x3
  4018dc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4018de:	seta   al
  4018e1:	setb   cl
  4018e4:	xor    edi,edi
  4018e6:	sub    eax,ecx
  4018e8:	movsx  eax,al
  4018eb:	cmp    eax,0x1
  4018ee:	setb   dil
  4018f2:	test   eax,eax
  4018f4:	lea    rax,[rip+0x9bc5]        # 0x40b4c0
  4018fb:	cmove  rdx,rax
  4018ff:	jmp    0x401610
  401904:	mov    ecx,0xa
  401909:	call   0x407fb0
  40190e:	jmp    0x4016ab
  401913:	lea    rdi,[rsp+0x140]
  40191b:	mov    rcx,r8
  40191e:	pxor   xmm6,xmm6
  401922:	mov    rdx,rdi
  401925:	call   rax
  401927:	mov    rcx,QWORD PTR [rsp+0x140]
  40192f:	movapd xmm7,xmm0
  401933:	cmp    BYTE PTR [rcx],0x2c
  401936:	jne    0x4015b2
  40193c:	add    rcx,0x1
  401940:	mov    rdx,rdi
  401943:	call   rsi
  401945:	mov    rcx,QWORD PTR [rsp+0x140]
  40194d:	movapd xmm8,xmm0
  401952:	cmp    BYTE PTR [rcx],0x2c
  401955:	jne    0x4015b7
  40195b:	add    rcx,0x1
  40195f:	mov    rdx,rdi
  401962:	call   rsi
  401964:	mov    rcx,QWORD PTR [rsp+0x140]
  40196c:	movapd xmm9,xmm0
  401971:	cmp    BYTE PTR [rcx],0x2c
  401974:	jne    0x4015bc
  40197a:	add    rcx,0x1
  40197e:	mov    rdx,rdi
  401981:	call   rsi
  401983:	mov    rsi,QWORD PTR [rsp+0x140]
  40198b:	movapd xmm6,xmm0
  40198f:	cmp    BYTE PTR [rsi],0x2c
  401992:	jne    0x4015de
  401998:	nop    DWORD PTR [rax+rax*1+0x0]
  4019a0:	lea    rcx,[rsi+0x1]
  4019a4:	mov    QWORD PTR [rsp+0x140],rcx
  4019ac:	cmp    BYTE PTR [rsi+0x1],0x2c
  4019b0:	je     0x401ae1
  4019b6:	lea    rdx,[rsp+0x140]
  4019be:	mov    r8d,0xa
  4019c4:	call   0x407f58
  4019c9:	mov    rcx,QWORD PTR [rsp+0x140]
  4019d1:	mov    r13d,eax
  4019d4:	cmp    BYTE PTR [rcx],0x2c
  4019d7:	jne    0x401b68
  4019dd:	lea    rax,[rcx+0x1]
  4019e1:	mov    QWORD PTR [rsp+0x140],rax
  4019e9:	cmp    BYTE PTR [rcx+0x1],0x2c
  4019ed:	je     0x401b30
  4019f3:	lea    rdx,[rsp+0x140]
  4019fb:	mov    r8d,0xa
  401a01:	mov    rcx,rax
  401a04:	call   0x407f58
  401a09:	mov    edi,eax
  401a0b:	mov    DWORD PTR [rsp+0x58],eax
  401a0f:	mov    rax,QWORD PTR [rsp+0x140]
  401a17:	cmp    edi,0x1
  401a1a:	setle  BYTE PTR [rsp+0x5f]
  401a1f:	cmp    BYTE PTR [rax],0x2c
  401a22:	jne    0x401b8a
  401a28:	lea    rsi,[rax+0x1]
  401a2c:	mov    QWORD PTR [rsp+0x140],rsi
  401a34:	cmp    BYTE PTR [rax+0x1],0x2c
  401a38:	je     0x401b15
  401a3e:	lea    rdx,[rsp+0x140]
  401a46:	mov    rcx,rsi
  401a49:	mov    r8d,0xa
  401a4f:	call   0x407f58
  401a54:	mov    rsi,QWORD PTR [rsp+0x140]
  401a5c:	cmp    eax,0x1
  401a5f:	mov    DWORD PTR [rsp+0x54],eax
  401a63:	setle  BYTE PTR [rsp+0x5e]
  401a68:	xor    edi,edi
  401a6a:	test   rsi,rsi
  401a6d:	lea    rdx,[rip+0x9a52]        # 0x40b4c6
  401a74:	je     0x401610
  401a7a:	jmp    0x4015fe
  401a7f:	nop
  401a80:	mov    eax,0x67
  401a85:	lea    rsi,[rsp+0x80]
  401a8d:	mov    DWORD PTR [rsp+0x80],0x35312e25
  401a98:	mov    WORD PTR [rsp+0x84],ax
  401aa0:	call   QWORD PTR [rip+0xfa52]        # 0x4114f8
  401aa6:	lea    rdx,[rax+0x30]
  401aaa:	mov    r8,rsi
  401aad:	mov    rcx,rbx
  401ab0:	call   0x401ba0
  401ab5:	lea    r9,[rip+0x9a04]        # 0x40b4c0
  401abc:	jmp    0x401810
  401ac1:	mov    r9d,DWORD PTR [rsp+0x54]
  401ac6:	mov    r8d,DWORD PTR [rsp+0x58]
  401acb:	lea    rdx,[rip+0x9a56]        # 0x40b528
  401ad2:	mov    ecx,0x10
  401ad7:	call   0x401ec8
  401adc:	jmp    0x4016fc
  401ae1:	mov    r13d,0xffffffff
  401ae7:	jmp    0x4019dd
  401aec:	nop    DWORD PTR [rax+0x0]
  401af0:	lea    rsi,[rsp+0x80]
  401af8:	mov    r8d,0x1
  401afe:	lea    rdx,[rip+0x9a9d]        # 0x40b5a2
  401b05:	sub    r8d,r13d
  401b08:	mov    rcx,rsi
  401b0b:	call   0x407f90
  401b10:	jmp    0x4017f4
  401b15:	mov    BYTE PTR [rsp+0x5e],0x0
  401b1a:	mov    DWORD PTR [rsp+0x54],0xf
  401b22:	jmp    0x401a68
  401b27:	nop    WORD PTR [rax+rax*1+0x0]
  401b30:	mov    BYTE PTR [rsp+0x5f],0x0
  401b35:	mov    DWORD PTR [rsp+0x58],0xf
  401b3d:	jmp    0x401a28
  401b42:	call   QWORD PTR [rip+0xf9e8]        # 0x411530
  401b48:	mov    ecx,DWORD PTR [rax]
  401b4a:	call   0x401e48
  401b4f:	lea    rdx,[rip+0x9a02]        # 0x40b558
  401b56:	mov    r8,rax
  401b59:	mov    ecx,0x10
  401b5e:	call   0x401ec8
  401b63:	jmp    0x401777
  401b68:	mov    rsi,rcx
  401b6b:	mov    BYTE PTR [rsp+0x5f],0x0
  401b70:	mov    BYTE PTR [rsp+0x5e],0x0
  401b75:	mov    DWORD PTR [rsp+0x58],0xf
  401b7d:	mov    DWORD PTR [rsp+0x54],0xf
  401b85:	jmp    0x4015fe
  401b8a:	mov    rsi,rax
  401b8d:	mov    BYTE PTR [rsp+0x5e],0x0
  401b92:	mov    DWORD PTR [rsp+0x54],0xf
  401b9a:	jmp    0x4015fe
  401b9f:	nop
  401ba0:	push   r15
  401ba2:	push   r14
  401ba4:	push   r13
  401ba6:	push   r12
  401ba8:	push   rbp
  401ba9:	push   rdi
  401baa:	push   rsi
  401bab:	push   rbx
  401bac:	sub    rsp,0x68
  401bb0:	lea    rbp,[rsp+0x40]
  401bb5:	mov    rbx,rcx
  401bb8:	mov    rdi,rdx
  401bbb:	mov    rdx,r8
  401bbe:	mov    r8d,0x11
  401bc4:	mov    BYTE PTR [rsp+0x40],0x20
  401bc9:	lea    rcx,[rbp+0x1]
  401bcd:	call   0x407f68
  401bd2:	mov    rdx,rbp
  401bd5:	mov    ecx,DWORD PTR [rdx]
  401bd7:	add    rdx,0x4
  401bdb:	lea    eax,[rcx-0x1010101]
  401be1:	not    ecx
  401be3:	and    eax,ecx
  401be5:	and    eax,0x80808080
  401bea:	je     0x401bd5
  401bec:	mov    ecx,eax
  401bee:	mov    r8d,DWORD PTR [rbx+0x30]
  401bf2:	mov    r10d,0x6e25
  401bf8:	shr    ecx,0x10
  401bfb:	test   eax,0x8080
  401c00:	lea    r14,[rsp+0x3c]
  401c05:	cmove  eax,ecx
  401c08:	lea    rcx,[rdx+0x2]
  401c0c:	lea    r13,[rsp+0x38]
  401c11:	cmove  rdx,rcx
  401c15:	add    al,al
  401c17:	mov    rcx,rdi
  401c1a:	sbb    rdx,0x3
  401c1e:	add    r8d,0x1
  401c22:	xor    esi,esi
  401c24:	mov    WORD PTR [rdx],r10w
  401c28:	mov    BYTE PTR [rdx+0x2],0x0
  401c2c:	lea    rdx,[rip+0x99dd]        # 0x40b610
  401c33:	xor    r12d,r12d
  401c36:	call   0x408000
  401c3b:	mov    r11d,DWORD PTR [rbx+0x30]
  401c3f:	test   r11d,r11d
  401c42:	jns    0x401d60
  401c48:	nop    DWORD PTR [rax+rax*1+0x0]
  401c50:	mov    r8d,DWORD PTR [rbx+0x34]
  401c54:	lea    rdx,[rip+0x99bc]        # 0x40b617
  401c5b:	mov    rcx,rdi
  401c5e:	xor    r15d,r15d
  401c61:	xor    esi,esi
  401c63:	lea    r13,[rsp+0x3c]
  401c68:	lea    r12,[rsp+0x38]
  401c6d:	add    r8d,0x1
  401c71:	call   0x408000
  401c76:	mov    r9d,DWORD PTR [rbx+0x34]
  401c7a:	test   r9d,r9d
  401c7d:	jns    0x401c94
  401c7f:	jmp    0x401e1d
  401c84:	add    esi,0x1
  401c87:	add    r15,0x10
  401c8b:	cmp    DWORD PTR [rbx+0x34],esi
  401c8e:	jl     0x401e1d
  401c94:	mov    rax,QWORD PTR [rbx+0x28]
  401c98:	mov    r9d,DWORD PTR [rax+r15*1]
  401c9c:	test   r9d,r9d
  401c9f:	je     0x401c84
  401ca1:	lea    rdx,[rip+0x9976]        # 0x40b61e
  401ca8:	mov    rcx,rdi
  401cab:	mov    QWORD PTR [rsp+0x20],r13
  401cb0:	mov    r8d,esi
  401cb3:	xor    r14d,r14d
  401cb6:	call   0x408000
  401cbb:	mov    rdx,QWORD PTR [rbx+0x28]
  401cbf:	xor    eax,eax
  401cc1:	mov    DWORD PTR [rsp+0x38],0x0
  401cc9:	mov    ecx,DWORD PTR [rdx+r15*1]
  401ccd:	test   ecx,ecx
  401ccf:	jg     0x401d1c
  401cd1:	jmp    0x401e00
  401cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ce0:	mov    rax,QWORD PTR [rdx+r15*1+0x8]
  401ce5:	mov    r9,r12
  401ce8:	mov    rdx,rbp
  401ceb:	mov    rcx,rdi
  401cee:	movsd  xmm0,QWORD PTR [rax+r14*8]
  401cf4:	movapd xmm2,xmm0
  401cf8:	movq   r8,xmm0
  401cfd:	call   0x408000
  401d02:	mov    rdx,QWORD PTR [rbx+0x28]
  401d06:	lea    eax,[r14+0x1]
  401d0a:	add    r14,0x1
  401d0e:	cmp    DWORD PTR [rdx+r15*1],eax
  401d12:	jle    0x401e00
  401d18:	mov    eax,DWORD PTR [rsp+0x38]
  401d1c:	add    eax,DWORD PTR [rsp+0x3c]
  401d20:	cmp    eax,0x3c
  401d23:	mov    DWORD PTR [rsp+0x3c],eax
  401d27:	jle    0x401ce0
  401d29:	lea    rdx,[rip+0x98f6]        # 0x40b626
  401d30:	mov    r8,r13
  401d33:	mov    rcx,rdi
  401d36:	call   0x408000
  401d3b:	mov    rdx,QWORD PTR [rbx+0x28]
  401d3f:	jmp    0x401ce0
  401d41:	mov    rdx,rdi
  401d44:	mov    ecx,0xa
  401d49:	call   0x407ff8
  401d4e:	add    r12d,0x1
  401d52:	add    rsi,0x10
  401d56:	cmp    DWORD PTR [rbx+0x30],r12d
  401d5a:	jl     0x401c50
  401d60:	mov    rax,QWORD PTR [rbx+0x20]
  401d64:	mov    r9d,DWORD PTR [rax+rsi*1]
  401d68:	test   r9d,r9d
  401d6b:	je     0x401d4e
  401d6d:	lea    rdx,[rip+0x98aa]        # 0x40b61e
  401d74:	mov    r8d,r12d
  401d77:	mov    QWORD PTR [rsp+0x20],r14
  401d7c:	mov    rcx,rdi
  401d7f:	xor    r15d,r15d
  401d82:	call   0x408000
  401d87:	mov    rdx,QWORD PTR [rbx+0x20]
  401d8b:	xor    eax,eax
  401d8d:	mov    DWORD PTR [rsp+0x38],0x0
  401d95:	mov    r8d,DWORD PTR [rdx+rsi*1]
  401d99:	test   r8d,r8d
  401d9c:	jg     0x401ddb
  401d9e:	jmp    0x401d41
  401da0:	mov    rax,QWORD PTR [rdx+rsi*1+0x8]
  401da5:	mov    r9,r13
  401da8:	mov    rdx,rbp
  401dab:	mov    rcx,rdi
  401dae:	movsd  xmm0,QWORD PTR [rax+r15*8]
  401db4:	movapd xmm2,xmm0
  401db8:	movq   r8,xmm0
  401dbd:	call   0x408000
  401dc2:	mov    rdx,QWORD PTR [rbx+0x20]
  401dc6:	lea    eax,[r15+0x1]
  401dca:	add    r15,0x1
  401dce:	cmp    DWORD PTR [rdx+rsi*1],eax
  401dd1:	jle    0x401d41
  401dd7:	mov    eax,DWORD PTR [rsp+0x38]
  401ddb:	add    eax,DWORD PTR [rsp+0x3c]
  401ddf:	cmp    eax,0x3c
  401de2:	mov    DWORD PTR [rsp+0x3c],eax
  401de6:	jle    0x401da0
  401de8:	lea    rdx,[rip+0x9837]        # 0x40b626
  401def:	mov    r8,r14
  401df2:	mov    rcx,rdi
  401df5:	call   0x408000
  401dfa:	mov    rdx,QWORD PTR [rbx+0x20]
  401dfe:	jmp    0x401da0
  401e00:	mov    rdx,rdi
  401e03:	mov    ecx,0xa
  401e08:	add    esi,0x1
  401e0b:	call   0x407ff8
  401e10:	add    r15,0x10
  401e14:	cmp    DWORD PTR [rbx+0x34],esi
  401e17:	jge    0x401c94
  401e1d:	add    rsp,0x68
  401e21:	pop    rbx
  401e22:	pop    rsi
  401e23:	pop    rdi
  401e24:	pop    rbp
  401e25:	pop    r12
  401e27:	pop    r13
  401e29:	pop    r14
  401e2b:	pop    r15
  401e2d:	ret    
  401e2e:	nop
  401e2f:	nop
  401e30:	jmp    QWORD PTR [rip+0xf5d2]        # 0x411408
  401e36:	nop
  401e37:	nop
  401e38:	jmp    QWORD PTR [rip+0xf5c2]        # 0x411400
  401e3e:	nop
  401e3f:	nop
  401e40:	jmp    QWORD PTR [rip+0xf5b2]        # 0x4113f8
  401e46:	nop
  401e47:	nop
  401e48:	jmp    QWORD PTR [rip+0xf5a2]        # 0x4113f0
  401e4e:	nop
  401e4f:	nop
  401e50:	jmp    QWORD PTR [rip+0xf592]        # 0x4113e8
  401e56:	nop
  401e57:	nop
  401e58:	jmp    QWORD PTR [rip+0xf582]        # 0x4113e0
  401e5e:	nop
  401e5f:	nop
  401e60:	jmp    QWORD PTR [rip+0xf572]        # 0x4113d8
  401e66:	nop
  401e67:	nop
  401e68:	jmp    QWORD PTR [rip+0xf562]        # 0x4113d0
  401e6e:	nop
  401e6f:	nop
  401e70:	jmp    QWORD PTR [rip+0xf552]        # 0x4113c8
  401e76:	nop
  401e77:	nop
  401e78:	jmp    QWORD PTR [rip+0xf542]        # 0x4113c0
  401e7e:	nop
  401e7f:	nop
  401e80:	jmp    QWORD PTR [rip+0xf532]        # 0x4113b8
  401e86:	nop
  401e87:	nop
  401e88:	jmp    QWORD PTR [rip+0xf522]        # 0x4113b0
  401e8e:	nop
  401e8f:	nop
  401e90:	jmp    QWORD PTR [rip+0xf512]        # 0x4113a8
  401e96:	nop
  401e97:	nop
  401e98:	jmp    QWORD PTR [rip+0xf502]        # 0x4113a0
  401e9e:	nop
  401e9f:	nop
  401ea0:	jmp    QWORD PTR [rip+0xf4f2]        # 0x411398
  401ea6:	nop
  401ea7:	nop
  401ea8:	jmp    QWORD PTR [rip+0xf4e2]        # 0x411390
  401eae:	nop
  401eaf:	nop
  401eb0:	jmp    QWORD PTR [rip+0xf4ca]        # 0x411380
  401eb6:	nop
  401eb7:	nop
  401eb8:	jmp    QWORD PTR [rip+0xf4ba]        # 0x411378
  401ebe:	nop
  401ebf:	nop
  401ec0:	jmp    QWORD PTR [rip+0xf4aa]        # 0x411370
  401ec6:	nop
  401ec7:	nop
  401ec8:	jmp    QWORD PTR [rip+0xf492]        # 0x411360
  401ece:	nop
  401ecf:	nop
  401ed0:	jmp    QWORD PTR [rip+0xf482]        # 0x411358
  401ed6:	nop
  401ed7:	nop
  401ed8:	nop    DWORD PTR [rax+rax*1+0x0]
  401ee0:	push   rbx
  401ee1:	sub    rsp,0x30
  401ee5:	mov    rbx,rcx
  401ee8:	mov    rcx,QWORD PTR [rip+0xe5b1]        # 0x4104a0
  401eef:	call   0x402490
  401ef4:	cmp    rax,0xffffffffffffffff
  401ef8:	mov    QWORD PTR [rsp+0x20],rax
  401efd:	je     0x401f75
  401eff:	mov    ecx,0x8
  401f04:	call   0x408058
  401f09:	mov    rcx,QWORD PTR [rip+0xe590]        # 0x4104a0
  401f10:	call   0x402490
  401f15:	mov    rcx,QWORD PTR [rip+0xe58c]        # 0x4104a8
  401f1c:	mov    QWORD PTR [rsp+0x20],rax
  401f21:	call   0x402490
  401f26:	lea    rdx,[rsp+0x20]
  401f2b:	lea    r8,[rsp+0x28]
  401f30:	mov    rcx,rbx
  401f33:	mov    QWORD PTR [rsp+0x28],rax
  401f38:	call   0x4080a8
  401f3d:	mov    rcx,QWORD PTR [rsp+0x20]
  401f42:	mov    rbx,rax
  401f45:	call   0x4024a0
  401f4a:	mov    rcx,QWORD PTR [rsp+0x28]
  401f4f:	mov    QWORD PTR [rip+0xe54a],rax        # 0x4104a0
  401f56:	call   0x4024a0
  401f5b:	mov    ecx,0x8
  401f60:	mov    QWORD PTR [rip+0xe541],rax        # 0x4104a8
  401f67:	call   0x408048
  401f6c:	mov    rax,rbx
  401f6f:	add    rsp,0x30
  401f73:	pop    rbx
  401f74:	ret    
  401f75:	mov    rax,QWORD PTR [rip+0x9e94]        # 0x40be10
  401f7c:	mov    rcx,rbx
  401f7f:	call   QWORD PTR [rax]
  401f81:	add    rsp,0x30
  401f85:	pop    rbx
  401f86:	ret    
  401f87:	nop    WORD PTR [rax+rax*1+0x0]
  401f90:	sub    rsp,0x28
  401f94:	call   0x401ee0
  401f99:	test   rax,rax
  401f9c:	sete   al
  401f9f:	movzx  eax,al
  401fa2:	neg    eax
  401fa4:	add    rsp,0x28
  401fa8:	ret    
  401fa9:	nop
  401faa:	nop
  401fab:	nop
  401fac:	nop
  401fad:	nop
  401fae:	nop
  401faf:	nop
  401fb0:	sub    rsp,0x28
  401fb4:	mov    rax,QWORD PTR [rip+0x8065]        # 0x40a020
  401fbb:	mov    rax,QWORD PTR [rax]
  401fbe:	test   rax,rax
  401fc1:	je     0x401fe0
  401fc3:	call   rax
  401fc5:	mov    rax,QWORD PTR [rip+0x8054]        # 0x40a020
  401fcc:	lea    rdx,[rax+0x8]
  401fd0:	mov    rax,QWORD PTR [rax+0x8]
  401fd4:	mov    QWORD PTR [rip+0x8045],rdx        # 0x40a020
  401fdb:	test   rax,rax
  401fde:	jne    0x401fc3
  401fe0:	add    rsp,0x28
  401fe4:	ret    
  401fe5:	nop
  401fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ff0:	push   rsi
  401ff1:	push   rbx
  401ff2:	sub    rsp,0x28
  401ff6:	mov    rsi,QWORD PTR [rip+0x9d73]        # 0x40bd70
  401ffd:	mov    rax,QWORD PTR [rsi]
  402000:	cmp    eax,0xffffffff
  402003:	mov    ebx,eax
  402005:	je     0x402030
  402007:	test   ebx,ebx
  402009:	je     0x40201a
  40200b:	nop    DWORD PTR [rax+rax*1+0x0]
  402010:	mov    eax,ebx
  402012:	call   QWORD PTR [rsi+rax*8]
  402015:	sub    ebx,0x1
  402018:	jne    0x402010
  40201a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401fb0
  402021:	add    rsp,0x28
  402025:	pop    rbx
  402026:	pop    rsi
  402027:	jmp    0x401f90
  40202c:	nop    DWORD PTR [rax+0x0]
  402030:	xor    ebx,ebx
  402032:	jmp    0x402036
  402034:	mov    ebx,eax
  402036:	lea    edx,[rbx+0x1]
  402039:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40203e:	mov    rax,rdx
  402041:	jne    0x402034
  402043:	jmp    0x402007
  402045:	nop
  402046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402050:	mov    eax,DWORD PTR [rip+0xd00a]        # 0x40f060
  402056:	test   eax,eax
  402058:	je     0x402060
  40205a:	repz ret 
  40205c:	nop    DWORD PTR [rax+0x0]
  402060:	mov    DWORD PTR [rip+0xcff6],0x1        # 0x40f060
  40206a:	jmp    0x401ff0
  40206c:	nop
  40206d:	nop
  40206e:	nop
  40206f:	nop
  402070:	mov    rax,QWORD PTR [rip+0xf489]        # 0x411500
  402077:	rex.W jmp rax
  40207a:	nop
  40207b:	nop
  40207c:	nop
  40207d:	nop
  40207e:	nop
  40207f:	nop
  402080:	xor    eax,eax
  402082:	ret    
  402083:	nop
  402084:	nop
  402085:	nop
  402086:	nop
  402087:	nop
  402088:	nop
  402089:	nop
  40208a:	nop
  40208b:	nop
  40208c:	nop
  40208d:	nop
  40208e:	nop
  40208f:	nop
  402090:	push   r12
  402092:	push   rbp
  402093:	push   rdi
  402094:	push   rsi
  402095:	push   rbx
  402096:	sub    rsp,0x40
  40209a:	mov    rbx,QWORD PTR [rip+0x800f]        # 0x40a0b0
  4020a1:	movabs rax,0x2b992ddfa232
  4020ab:	mov    QWORD PTR [rsp+0x20],0x0
  4020b4:	cmp    rbx,rax
  4020b7:	je     0x4020d0
  4020b9:	not    rbx
  4020bc:	mov    QWORD PTR [rip+0x7ffd],rbx        # 0x40a0c0
  4020c3:	add    rsp,0x40
  4020c7:	pop    rbx
  4020c8:	pop    rsi
  4020c9:	pop    rdi
  4020ca:	pop    rbp
  4020cb:	pop    r12
  4020cd:	ret    
  4020ce:	xchg   ax,ax
  4020d0:	lea    rcx,[rsp+0x20]
  4020d5:	call   QWORD PTR [rip+0xf375]        # 0x411450
  4020db:	mov    r12,QWORD PTR [rsp+0x20]
  4020e0:	call   QWORD PTR [rip+0xf34a]        # 0x411430
  4020e6:	mov    ebp,eax
  4020e8:	call   QWORD PTR [rip+0xf34a]        # 0x411438
  4020ee:	mov    edi,eax
  4020f0:	call   QWORD PTR [rip+0xf362]        # 0x411458
  4020f6:	lea    rcx,[rsp+0x30]
  4020fb:	mov    esi,eax
  4020fd:	call   QWORD PTR [rip+0xf36d]        # 0x411470
  402103:	xor    r12,QWORD PTR [rsp+0x30]
  402108:	mov    edx,edi
  40210a:	movabs rax,0xffffffffffff
  402114:	xor    rbp,r12
  402117:	mov    rdi,rbp
  40211a:	xor    rdi,rdx
  40211d:	mov    edx,esi
  40211f:	xor    rdi,rdx
  402122:	mov    rsi,rdi
  402125:	and    rsi,rax
  402128:	cmp    rsi,rbx
  40212b:	je     0x402150
  40212d:	mov    rax,rsi
  402130:	not    rax
  402133:	mov    QWORD PTR [rip+0x7f76],rsi        # 0x40a0b0
  40213a:	mov    QWORD PTR [rip+0x7f7f],rax        # 0x40a0c0
  402141:	add    rsp,0x40
  402145:	pop    rbx
  402146:	pop    rsi
  402147:	pop    rdi
  402148:	pop    rbp
  402149:	pop    r12
  40214b:	ret    
  40214c:	nop    DWORD PTR [rax+0x0]
  402150:	movabs rax,0xffffd466d2205dcc
  40215a:	movabs rsi,0x2b992ddfa233
  402164:	jmp    0x402133
  402166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402170:	push   rbp
  402171:	push   rsi
  402172:	push   rbx
  402173:	mov    rbp,rsp
  402176:	sub    rsp,0x70
  40217a:	mov    rsi,rcx
  40217d:	lea    rcx,[rip+0xcf3c]        # 0x40f0c0
  402184:	call   QWORD PTR [rip+0xf2f6]        # 0x411480
  40218a:	mov    rbx,QWORD PTR [rip+0xd027]        # 0x40f1b8
  402191:	xor    r8d,r8d
  402194:	lea    rdx,[rbp-0x28]
  402198:	mov    rcx,rbx
  40219b:	call   QWORD PTR [rip+0xf2e7]        # 0x411488
  4021a1:	test   rax,rax
  4021a4:	mov    r9,rax
  4021a7:	je     0x402250
  4021ad:	lea    rax,[rbp-0x20]
  4021b1:	mov    QWORD PTR [rsp+0x38],0x0
  4021ba:	mov    r8,rbx
  4021bd:	mov    rdx,QWORD PTR [rbp-0x28]
  4021c1:	xor    ecx,ecx
  4021c3:	mov    QWORD PTR [rsp+0x30],rax
  4021c8:	lea    rax,[rbp-0x18]
  4021cc:	mov    QWORD PTR [rsp+0x28],rax
  4021d1:	lea    rax,[rip+0xcee8]        # 0x40f0c0
  4021d8:	mov    QWORD PTR [rsp+0x20],rax
  4021dd:	call   QWORD PTR [rip+0xf2ad]        # 0x411490
  4021e3:	mov    rax,QWORD PTR [rip+0xcfce]        # 0x40f1b8
  4021ea:	xor    ecx,ecx
  4021ec:	mov    QWORD PTR [rip+0xcf4d],rsi        # 0x40f140
  4021f3:	mov    DWORD PTR [rip+0xd3c3],0xc0000409        # 0x40f5c0
  4021fd:	mov    DWORD PTR [rip+0xd3bd],0x1        # 0x40f5c4
  402207:	mov    QWORD PTR [rip+0xd3c2],rax        # 0x40f5d0
  40220e:	mov    rax,QWORD PTR [rip+0x7e9b]        # 0x40a0b0
  402215:	mov    QWORD PTR [rbp-0x10],rax
  402219:	mov    rax,QWORD PTR [rip+0x7ea0]        # 0x40a0c0
  402220:	mov    QWORD PTR [rbp-0x8],rax
  402224:	call   QWORD PTR [rip+0xf26e]        # 0x411498
  40222a:	lea    rcx,[rip+0x93ff]        # 0x40b630
  402231:	call   QWORD PTR [rip+0xf281]        # 0x4114b8
  402237:	call   QWORD PTR [rip+0xf1eb]        # 0x411428
  40223d:	mov    edx,0xc0000409
  402242:	mov    rcx,rax
  402245:	call   QWORD PTR [rip+0xf25d]        # 0x4114a8
  40224b:	call   0x408040
  402250:	mov    rax,QWORD PTR [rbp+0x18]
  402254:	mov    QWORD PTR [rip+0xcf5d],rax        # 0x40f1b8
  40225b:	lea    rax,[rbp+0x8]
  40225f:	mov    QWORD PTR [rip+0xcef2],rax        # 0x40f158
  402266:	jmp    0x4021e3
  40226b:	nop
  40226c:	nop
  40226d:	nop
  40226e:	nop
  40226f:	nop
  402270:	sub    rsp,0x28
  402274:	test   edx,edx
  402276:	je     0x402290
  402278:	cmp    edx,0x3
  40227b:	je     0x402290
  40227d:	mov    eax,0x1
  402282:	add    rsp,0x28
  402286:	ret    
  402287:	nop    WORD PTR [rax+rax*1+0x0]
  402290:	call   0x402f80
  402295:	mov    eax,0x1
  40229a:	add    rsp,0x28
  40229e:	ret    
  40229f:	nop
  4022a0:	push   rsi
  4022a1:	push   rbx
  4022a2:	sub    rsp,0x28
  4022a6:	mov    rax,QWORD PTR [rip+0x9aa3]        # 0x40bd50
  4022ad:	cmp    DWORD PTR [rax],0x2
  4022b0:	je     0x4022b8
  4022b2:	mov    DWORD PTR [rax],0x2
  4022b8:	cmp    edx,0x2
  4022bb:	je     0x4022d0
  4022bd:	cmp    edx,0x1
  4022c0:	je     0x402302
  4022c2:	mov    eax,0x1
  4022c7:	add    rsp,0x28
  4022cb:	pop    rbx
  4022cc:	pop    rsi
  4022cd:	ret    
  4022ce:	xchg   ax,ax
  4022d0:	lea    rbx,[rip+0xfd89]        # 0x412060
  4022d7:	lea    rsi,[rip+0xfd82]        # 0x412060
  4022de:	cmp    rbx,rsi
  4022e1:	je     0x4022c2
  4022e3:	mov    rax,QWORD PTR [rbx]
  4022e6:	test   rax,rax
  4022e9:	je     0x4022ed
  4022eb:	call   rax
  4022ed:	add    rbx,0x8
  4022f1:	cmp    rbx,rsi
  4022f4:	jne    0x4022e3
  4022f6:	mov    eax,0x1
  4022fb:	add    rsp,0x28
  4022ff:	pop    rbx
  402300:	pop    rsi
  402301:	ret    
  402302:	call   0x402f80
  402307:	jmp    0x4022c2
  402309:	nop    DWORD PTR [rax+0x0]
  402310:	xor    eax,eax
  402312:	ret    
  402313:	nop
  402314:	nop
  402315:	nop
  402316:	nop
  402317:	nop
  402318:	nop
  402319:	nop
  40231a:	nop
  40231b:	nop
  40231c:	nop
  40231d:	nop
  40231e:	nop
  40231f:	nop
  402320:	sub    rsp,0x58
  402324:	mov    rax,QWORD PTR [rip+0xd375]        # 0x40f6a0
  40232b:	test   rax,rax
  40232e:	je     0x40235c
  402330:	movsd  xmm0,QWORD PTR [rsp+0x80]
  402339:	mov    DWORD PTR [rsp+0x20],ecx
  40233d:	lea    rcx,[rsp+0x20]
  402342:	mov    QWORD PTR [rsp+0x28],rdx
  402347:	movsd  QWORD PTR [rsp+0x30],xmm2
  40234d:	movsd  QWORD PTR [rsp+0x38],xmm3
  402353:	movsd  QWORD PTR [rsp+0x40],xmm0
  402359:	call   rax
  40235b:	nop
  40235c:	add    rsp,0x58
  402360:	ret    
  402361:	nop    DWORD PTR [rax+rax*1+0x0]
  402366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402370:	mov    QWORD PTR [rip+0xd329],rcx        # 0x40f6a0
  402377:	jmp    0x408080
  40237c:	nop    DWORD PTR [rax+0x0]
  402380:	push   rsi
  402381:	push   rbx
  402382:	sub    rsp,0x78
  402386:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40238b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  402390:	movaps XMMWORD PTR [rsp+0x60],xmm8
  402396:	cmp    DWORD PTR [rcx],0x6
  402399:	ja     0x402470
  40239f:	mov    edx,DWORD PTR [rcx]
  4023a1:	lea    rax,[rip+0x93cc]        # 0x40b774
  4023a8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4023ac:	add    rax,rdx
  4023af:	jmp    rax
  4023b1:	lea    rbx,[rip+0x9298]        # 0x40b650
  4023b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4023c0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  4023c6:	mov    rsi,QWORD PTR [rcx+0x8]
  4023ca:	movsd  xmm7,QWORD PTR [rcx+0x18]
  4023cf:	movsd  xmm6,QWORD PTR [rcx+0x10]
  4023d4:	call   0x408098
  4023d9:	movsd  QWORD PTR [rsp+0x30],xmm8
  4023e0:	lea    rcx,[rax+0x60]
  4023e4:	lea    rdx,[rip+0x935d]        # 0x40b748
  4023eb:	movsd  QWORD PTR [rsp+0x28],xmm7
  4023f1:	mov    r9,rsi
  4023f4:	mov    r8,rbx
  4023f7:	movsd  QWORD PTR [rsp+0x20],xmm6
  4023fd:	call   0x408000
  402402:	nop
  402403:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  402408:	xor    eax,eax
  40240a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  40240f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  402415:	add    rsp,0x78
  402419:	pop    rbx
  40241a:	pop    rsi
  40241b:	ret    
  40241c:	nop    DWORD PTR [rax+0x0]
  402420:	lea    rbx,[rip+0x9248]        # 0x40b66f
  402427:	jmp    0x4023c0
  402429:	nop    DWORD PTR [rax+0x0]
  402430:	lea    rbx,[rip+0x9259]        # 0x40b690
  402437:	jmp    0x4023c0
  402439:	nop    DWORD PTR [rax+0x0]
  402440:	lea    rbx,[rip+0x92b9]        # 0x40b700
  402447:	jmp    0x4023c0
  40244c:	nop    DWORD PTR [rax+0x0]
  402450:	lea    rbx,[rip+0x9281]        # 0x40b6d8
  402457:	jmp    0x4023c0
  40245c:	nop    DWORD PTR [rax+0x0]
  402460:	lea    rbx,[rip+0x9249]        # 0x40b6b0
  402467:	jmp    0x4023c0
  40246c:	nop    DWORD PTR [rax+0x0]
  402470:	lea    rbx,[rip+0x92bf]        # 0x40b736
  402477:	jmp    0x4023c0
  40247c:	nop
  40247d:	nop
  40247e:	nop
  40247f:	nop
  402480:	fninit 
  402482:	ret    
  402483:	nop
  402484:	nop
  402485:	nop
  402486:	nop
  402487:	nop
  402488:	nop
  402489:	nop
  40248a:	nop
  40248b:	nop
  40248c:	nop
  40248d:	nop
  40248e:	nop
  40248f:	nop
  402490:	mov    rax,rcx
  402493:	ret    
  402494:	xchg   ax,ax
  402496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024a0:	mov    rax,rcx
  4024a3:	ret    
  4024a4:	nop
  4024a5:	nop
  4024a6:	nop
  4024a7:	nop
  4024a8:	nop
  4024a9:	nop
  4024aa:	nop
  4024ab:	nop
  4024ac:	nop
  4024ad:	nop
  4024ae:	nop
  4024af:	nop
  4024b0:	push   rsi
  4024b1:	push   rbx
  4024b2:	sub    rsp,0x38
  4024b6:	lea    rax,[rsp+0x58]
  4024bb:	mov    rbx,rcx
  4024be:	mov    QWORD PTR [rsp+0x58],rdx
  4024c3:	mov    QWORD PTR [rsp+0x60],r8
  4024c8:	mov    QWORD PTR [rsp+0x68],r9
  4024cd:	mov    QWORD PTR [rsp+0x28],rax
  4024d2:	call   0x408098
  4024d7:	lea    rcx,[rip+0x92b2]        # 0x40b790
  4024de:	lea    r9,[rax+0x60]
  4024e2:	mov    r8d,0x1b
  4024e8:	mov    edx,0x1
  4024ed:	call   0x407fe0
  4024f2:	mov    rsi,QWORD PTR [rsp+0x28]
  4024f7:	call   0x408098
  4024fc:	lea    rcx,[rax+0x60]
  402500:	mov    rdx,rbx
  402503:	mov    r8,rsi
  402506:	call   0x407f50
  40250b:	call   0x408040
  402510:	nop
  402511:	nop    DWORD PTR [rax+rax*1+0x0]
  402516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402520:	push   r13
  402522:	push   r12
  402524:	push   rbp
  402525:	push   rdi
  402526:	push   rsi
  402527:	push   rbx
  402528:	sub    rsp,0x58
  40252c:	movsxd rbp,DWORD PTR [rip+0xd191]        # 0x40f6c4
  402533:	mov    rbx,rcx
  402536:	mov    rsi,rdx
  402539:	mov    rdi,r8
  40253c:	test   ebp,ebp
  40253e:	jle    0x40263a
  402544:	mov    rax,QWORD PTR [rip+0xd17d]        # 0x40f6c8
  40254b:	xor    r9d,r9d
  40254e:	add    rax,0x8
  402552:	mov    r10,QWORD PTR [rax]
  402555:	cmp    rbx,r10
  402558:	jb     0x40256e
  40255a:	mov    rdx,QWORD PTR [rax+0x8]
  40255e:	mov    r11d,DWORD PTR [rdx+0x8]
  402562:	add    r10,r11
  402565:	cmp    rbx,r10
  402568:	jb     0x402620
  40256e:	add    r9d,0x1
  402572:	add    rax,0x18
  402576:	cmp    r9d,ebp
  402579:	jne    0x402552
  40257b:	mov    rcx,rbx
  40257e:	call   0x403190
  402583:	test   rax,rax
  402586:	mov    r12,rax
  402589:	je     0x402672
  40258f:	lea    rbp,[rbp+rbp*2+0x0]
  402594:	shl    rbp,0x3
  402598:	mov    r13,rbp
  40259b:	add    r13,QWORD PTR [rip+0xd126]        # 0x40f6c8
  4025a2:	mov    QWORD PTR [r13+0x10],rax
  4025a6:	mov    DWORD PTR [r13+0x0],0x0
  4025ae:	call   0x4032b0
  4025b3:	mov    edx,DWORD PTR [r12+0xc]
  4025b8:	mov    r8d,0x30
  4025be:	add    rax,rdx
  4025c1:	lea    rdx,[rsp+0x20]
  4025c6:	mov    QWORD PTR [r13+0x8],rax
  4025ca:	mov    rax,QWORD PTR [rip+0xd0f7]        # 0x40f6c8
  4025d1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  4025d6:	call   QWORD PTR [rip+0xeeec]        # 0x4114c8
  4025dc:	test   rax,rax
  4025df:	je     0x402655
  4025e1:	mov    eax,DWORD PTR [rsp+0x44]
  4025e5:	lea    edx,[rax-0x4]
  4025e8:	and    edx,0xfffffffb
  4025eb:	je     0x402619
  4025ed:	sub    eax,0x40
  4025f0:	and    eax,0xffffffbf
  4025f3:	je     0x402619
  4025f5:	mov    r9,rbp
  4025f8:	add    r9,QWORD PTR [rip+0xd0c9]        # 0x40f6c8
  4025ff:	mov    r8d,0x40
  402605:	mov    rdx,QWORD PTR [rsp+0x38]
  40260a:	mov    rcx,QWORD PTR [rsp+0x20]
  40260f:	call   QWORD PTR [rip+0xeeab]        # 0x4114c0
  402615:	test   eax,eax
  402617:	je     0x402641
  402619:	add    DWORD PTR [rip+0xd0a4],0x1        # 0x40f6c4
  402620:	mov    r8,rdi
  402623:	mov    rdx,rsi
  402626:	mov    rcx,rbx
  402629:	add    rsp,0x58
  40262d:	pop    rbx
  40262e:	pop    rsi
  40262f:	pop    rdi
  402630:	pop    rbp
  402631:	pop    r12
  402633:	pop    r13
  402635:	jmp    0x407fc0
  40263a:	xor    ebp,ebp
  40263c:	jmp    0x40257b
  402641:	call   QWORD PTR [rip+0xedf9]        # 0x411440
  402647:	lea    rcx,[rip+0x91ba]        # 0x40b808
  40264e:	mov    edx,eax
  402650:	call   0x4024b0
  402655:	mov    rax,QWORD PTR [rip+0xd06c]        # 0x40f6c8
  40265c:	mov    edx,DWORD PTR [r12+0x8]
  402661:	lea    rcx,[rip+0x9168]        # 0x40b7d0
  402668:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40266d:	call   0x4024b0
  402672:	lea    rcx,[rip+0x9137]        # 0x40b7b0
  402679:	mov    rdx,rbx
  40267c:	call   0x4024b0
  402681:	nop
  402682:	nop    DWORD PTR [rax+0x0]
  402686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402690:	push   rbp
  402691:	push   r14
  402693:	push   r13
  402695:	push   r12
  402697:	push   rdi
  402698:	push   rsi
  402699:	push   rbx
  40269a:	mov    rbp,rsp
  40269d:	sub    rsp,0x60
  4026a1:	mov    ebx,DWORD PTR [rip+0xd019]        # 0x40f6c0
  4026a7:	test   ebx,ebx
  4026a9:	je     0x4026c0
  4026ab:	mov    rsp,rbp
  4026ae:	pop    rbx
  4026af:	pop    rsi
  4026b0:	pop    rdi
  4026b1:	pop    r12
  4026b3:	pop    r13
  4026b5:	pop    r14
  4026b7:	pop    rbp
  4026b8:	ret    
  4026b9:	nop    DWORD PTR [rax+0x0]
  4026c0:	mov    DWORD PTR [rip+0xcff6],0x1        # 0x40f6c0
  4026ca:	call   0x4031e0
  4026cf:	cdqe   
  4026d1:	lea    rax,[rax+rax*2]
  4026d5:	lea    rax,[rax*8+0x1e]
  4026dd:	and    rax,0xfffffffffffffff0
  4026e1:	call   0x403400
  4026e6:	mov    rsi,QWORD PTR [rip+0x9693]        # 0x40bd80
  4026ed:	mov    rbx,QWORD PTR [rip+0x969c]        # 0x40bd90
  4026f4:	sub    rsp,rax
  4026f7:	mov    DWORD PTR [rip+0xcfc3],0x0        # 0x40f6c4
  402701:	lea    rax,[rsp+0x20]
  402706:	mov    QWORD PTR [rip+0xcfbb],rax        # 0x40f6c8
  40270d:	mov    rax,rsi
  402710:	sub    rax,rbx
  402713:	cmp    rax,0x7
  402717:	jle    0x4026ab
  402719:	cmp    rax,0xb
  40271d:	jle    0x402745
  40271f:	mov    r11d,DWORD PTR [rbx]
  402722:	test   r11d,r11d
  402725:	jne    0x402870
  40272b:	mov    r10d,DWORD PTR [rbx+0x4]
  40272f:	test   r10d,r10d
  402732:	jne    0x402870
  402738:	mov    r9d,DWORD PTR [rbx+0x8]
  40273c:	test   r9d,r9d
  40273f:	jne    0x40275c
  402741:	add    rbx,0xc
  402745:	mov    r8d,DWORD PTR [rbx]
  402748:	test   r8d,r8d
  40274b:	jne    0x402870
  402751:	mov    ecx,DWORD PTR [rbx+0x4]
  402754:	test   ecx,ecx
  402756:	jne    0x402870
  40275c:	mov    edx,DWORD PTR [rbx+0x8]
  40275f:	cmp    edx,0x1
  402762:	jne    0x40297c
  402768:	add    rbx,0xc
  40276c:	cmp    rbx,rsi
  40276f:	jae    0x4026ab
  402775:	mov    r12,QWORD PTR [rip+0x9654]        # 0x40bdd0
  40277c:	lea    r13,[rbp-0x30]
  402780:	movabs r14,0xffffffff00000000
  40278a:	mov    ecx,DWORD PTR [rbx+0x4]
  40278d:	mov    eax,DWORD PTR [rbx]
  40278f:	movzx  edx,BYTE PTR [rbx+0x8]
  402793:	add    rax,r12
  402796:	add    rcx,r12
  402799:	cmp    edx,0x10
  40279c:	mov    r8,QWORD PTR [rax]
  40279f:	je     0x4028e6
  4027a5:	jbe    0x4028ad
  4027ab:	cmp    edx,0x20
  4027ae:	je     0x40292f
  4027b4:	cmp    edx,0x40
  4027b7:	jne    0x40291b
  4027bd:	sub    r8,rax
  4027c0:	mov    rdx,r13
  4027c3:	mov    rdi,r13
  4027c6:	mov    rax,r8
  4027c9:	add    rax,QWORD PTR [rcx]
  4027cc:	mov    r8d,0x8
  4027d2:	mov    QWORD PTR [rbp-0x30],rax
  4027d6:	call   0x402520
  4027db:	add    rbx,0xc
  4027df:	cmp    rbx,rsi
  4027e2:	jb     0x40278a
  4027e4:	mov    eax,DWORD PTR [rip+0xceda]        # 0x40f6c4
  4027ea:	xor    ebx,ebx
  4027ec:	xor    esi,esi
  4027ee:	test   eax,eax
  4027f0:	jle    0x4026ab
  4027f6:	mov    r14,QWORD PTR [rip+0xeccb]        # 0x4114c8
  4027fd:	lea    r13,[rbp-0x34]
  402801:	mov    r12,QWORD PTR [rip+0xecb8]        # 0x4114c0
  402808:	jmp    0x402823
  40280a:	nop    WORD PTR [rax+rax*1+0x0]
  402810:	add    esi,0x1
  402813:	add    rbx,0x18
  402817:	cmp    esi,DWORD PTR [rip+0xcea7]        # 0x40f6c4
  40281d:	jge    0x4026ab
  402823:	mov    rax,rbx
  402826:	add    rax,QWORD PTR [rip+0xce9b]        # 0x40f6c8
  40282d:	mov    edx,DWORD PTR [rax]
  40282f:	test   edx,edx
  402831:	je     0x402810
  402833:	mov    rcx,QWORD PTR [rax+0x8]
  402837:	mov    r8d,0x30
  40283d:	mov    rdx,rdi
  402840:	call   r14
  402843:	test   rax,rax
  402846:	je     0x40295e
  40284c:	mov    rax,QWORD PTR [rip+0xce75]        # 0x40f6c8
  402853:	mov    r9,r13
  402856:	mov    rdx,QWORD PTR [rbp-0x18]
  40285a:	mov    rcx,QWORD PTR [rbp-0x30]
  40285e:	mov    r8d,DWORD PTR [rax+rbx*1]
  402862:	call   r12
  402865:	jmp    0x402810
  402867:	nop    WORD PTR [rax+rax*1+0x0]
  402870:	cmp    rbx,rsi
  402873:	jae    0x4026ab
  402879:	mov    r12,QWORD PTR [rip+0x9550]        # 0x40bdd0
  402880:	lea    rdi,[rbp-0x30]
  402884:	mov    ecx,DWORD PTR [rbx+0x4]
  402887:	mov    eax,DWORD PTR [rbx]
  402889:	mov    r8d,0x4
  40288f:	mov    rdx,rdi
  402892:	add    rbx,0x8
  402896:	add    rcx,r12
  402899:	add    eax,DWORD PTR [rcx]
  40289b:	mov    DWORD PTR [rbp-0x30],eax
  40289e:	call   0x402520
  4028a3:	cmp    rbx,rsi
  4028a6:	jb     0x402884
  4028a8:	jmp    0x4027e4
  4028ad:	cmp    edx,0x8
  4028b0:	jne    0x40291b
  4028b2:	movzx  edx,BYTE PTR [rcx]
  4028b5:	mov    rdi,r13
  4028b8:	mov    r10,rdx
  4028bb:	or     r10,0xffffffffffffff00
  4028c2:	test   dl,dl
  4028c4:	cmovs  rdx,r10
  4028c8:	sub    rdx,rax
  4028cb:	lea    rax,[r8+rdx*1]
  4028cf:	mov    r8d,0x1
  4028d5:	mov    rdx,r13
  4028d8:	mov    QWORD PTR [rbp-0x30],rax
  4028dc:	call   0x402520
  4028e1:	jmp    0x4027db
  4028e6:	movzx  edx,WORD PTR [rcx]
  4028e9:	mov    rdi,r13
  4028ec:	mov    r10,rdx
  4028ef:	or     r10,0xffffffffffff0000
  4028f6:	test   dx,dx
  4028f9:	cmovs  rdx,r10
  4028fd:	sub    rdx,rax
  402900:	lea    rax,[r8+rdx*1]
  402904:	mov    r8d,0x2
  40290a:	mov    rdx,r13
  40290d:	mov    QWORD PTR [rbp-0x30],rax
  402911:	call   0x402520
  402916:	jmp    0x4027db
  40291b:	lea    rcx,[rip+0x8f46]        # 0x40b868
  402922:	mov    QWORD PTR [rbp-0x30],0x0
  40292a:	call   0x4024b0
  40292f:	mov    edx,DWORD PTR [rcx]
  402931:	mov    rdi,r13
  402934:	mov    r10,rdx
  402937:	or     r10,r14
  40293a:	test   edx,edx
  40293c:	cmovs  rdx,r10
  402940:	sub    rdx,rax
  402943:	lea    rax,[r8+rdx*1]
  402947:	mov    r8d,0x4
  40294d:	mov    rdx,r13
  402950:	mov    QWORD PTR [rbp-0x30],rax
  402954:	call   0x402520
  402959:	jmp    0x4027db
  40295e:	add    rbx,QWORD PTR [rip+0xcd63]        # 0x40f6c8
  402965:	lea    rcx,[rip+0x8e64]        # 0x40b7d0
  40296c:	mov    rax,QWORD PTR [rbx+0x10]
  402970:	mov    r8,QWORD PTR [rbx+0x8]
  402974:	mov    edx,DWORD PTR [rax+0x8]
  402977:	call   0x4024b0
  40297c:	lea    rcx,[rip+0x8ead]        # 0x40b830
  402983:	call   0x4024b0
  402988:	nop
  402989:	nop
  40298a:	nop
  40298b:	nop
  40298c:	nop
  40298d:	nop
  40298e:	nop
  40298f:	nop
  402990:	sub    rsp,0x28
  402994:	mov    eax,DWORD PTR [rcx]
  402996:	cmp    eax,0xc0000091
  40299b:	ja     0x402a00
  40299d:	cmp    eax,0xc000008d
  4029a2:	jae    0x402a1f
  4029a4:	cmp    eax,0xc0000008
  4029a9:	je     0x402ac0
  4029af:	ja     0x402a90
  4029b5:	cmp    eax,0x80000002
  4029ba:	je     0x402ac0
  4029c0:	cmp    eax,0xc0000005
  4029c5:	jne    0x402a9e
  4029cb:	xor    edx,edx
  4029cd:	mov    ecx,0xb
  4029d2:	call   0x407f98
  4029d7:	cmp    rax,0x1
  4029db:	je     0x402b20
  4029e1:	test   rax,rax
  4029e4:	je     0x402b00
  4029ea:	mov    ecx,0xb
  4029ef:	call   rax
  4029f1:	xor    eax,eax
  4029f3:	add    rsp,0x28
  4029f7:	ret    
  4029f8:	nop    DWORD PTR [rax+rax*1+0x0]
  402a00:	cmp    eax,0xc0000094
  402a05:	je     0x402ad0
  402a0b:	ja     0x402a50
  402a0d:	cmp    eax,0xc0000092
  402a12:	je     0x402ac0
  402a18:	cmp    eax,0xc0000093
  402a1d:	jne    0x402a9e
  402a1f:	xor    edx,edx
  402a21:	mov    ecx,0x8
  402a26:	call   0x407f98
  402a2b:	cmp    rax,0x1
  402a2f:	mov    rdx,rax
  402a32:	je     0x402aa8
  402a34:	test   rdx,rdx
  402a37:	mov    eax,0x1
  402a3c:	je     0x4029f3
  402a3e:	mov    ecx,0x8
  402a43:	call   rdx
  402a45:	xor    eax,eax
  402a47:	add    rsp,0x28
  402a4b:	ret    
  402a4c:	nop    DWORD PTR [rax+0x0]
  402a50:	cmp    eax,0xc0000095
  402a55:	je     0x402ac0
  402a57:	cmp    eax,0xc0000096
  402a5c:	jne    0x402a9e
  402a5e:	xor    edx,edx
  402a60:	mov    ecx,0x4
  402a65:	call   0x407f98
  402a6a:	cmp    rax,0x1
  402a6e:	je     0x402b0a
  402a74:	test   rax,rax
  402a77:	je     0x402b00
  402a7d:	mov    ecx,0x4
  402a82:	call   rax
  402a84:	xor    eax,eax
  402a86:	jmp    0x4029f3
  402a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  402a90:	cmp    eax,0xc000001d
  402a95:	je     0x402a5e
  402a97:	cmp    eax,0xc000008c
  402a9c:	je     0x402ac0
  402a9e:	mov    eax,0x1
  402aa3:	add    rsp,0x28
  402aa7:	ret    
  402aa8:	mov    edx,0x1
  402aad:	mov    ecx,0x8
  402ab2:	call   0x407f98
  402ab7:	call   0x402480
  402abc:	nop    DWORD PTR [rax+0x0]
  402ac0:	xor    eax,eax
  402ac2:	add    rsp,0x28
  402ac6:	ret    
  402ac7:	nop    WORD PTR [rax+rax*1+0x0]
  402ad0:	xor    edx,edx
  402ad2:	mov    ecx,0x8
  402ad7:	call   0x407f98
  402adc:	cmp    rax,0x1
  402ae0:	mov    rdx,rax
  402ae3:	jne    0x402a34
  402ae9:	mov    edx,0x1
  402aee:	mov    ecx,0x8
  402af3:	call   0x407f98
  402af8:	xor    eax,eax
  402afa:	jmp    0x4029f3
  402aff:	nop
  402b00:	mov    eax,0x4
  402b05:	add    rsp,0x28
  402b09:	ret    
  402b0a:	mov    edx,0x1
  402b0f:	mov    ecx,0x4
  402b14:	call   0x407f98
  402b19:	xor    eax,eax
  402b1b:	jmp    0x4029f3
  402b20:	mov    edx,0x1
  402b25:	mov    ecx,0xb
  402b2a:	call   0x407f98
  402b2f:	xor    eax,eax
  402b31:	jmp    0x4029f3
  402b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b40:	push   r12
  402b42:	push   rbp
  402b43:	push   rdi
  402b44:	push   rsi
  402b45:	push   rbx
  402b46:	sub    rsp,0x20
  402b4a:	call   0x4032b0
  402b4f:	mov    rbp,rax
  402b52:	mov    eax,DWORD PTR [rip+0xcbb0]        # 0x40f708
  402b58:	test   eax,eax
  402b5a:	jne    0x402b81
  402b5c:	test   rbp,rbp
  402b5f:	je     0x402b81
  402b61:	lea    rcx,[rip+0x8d38]        # 0x40b8a0
  402b68:	mov    DWORD PTR [rip+0xcb96],0x1        # 0x40f708
  402b72:	call   0x4030f0
  402b77:	test   rax,rax
  402b7a:	je     0x402b90
  402b7c:	mov    eax,0x1
  402b81:	add    rsp,0x20
  402b85:	pop    rbx
  402b86:	pop    rsi
  402b87:	pop    rdi
  402b88:	pop    rbp
  402b89:	pop    r12
  402b8b:	ret    
  402b8c:	nop    DWORD PTR [rax+0x0]
  402b90:	lea    rbx,[rip+0xcca9]        # 0x40f840
  402b97:	mov    ecx,0x30
  402b9c:	lea    rdx,[rip+0xcb9d]        # 0x40f740
  402ba3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402990
  402baa:	xor    esi,esi
  402bac:	mov    rdi,rbx
  402baf:	rep stos QWORD PTR es:[rdi],rax
  402bb2:	mov    rdi,rdx
  402bb5:	sub    r12,rbp
  402bb8:	mov    cl,0x20
  402bba:	rep stos QWORD PTR es:[rdi],rax
  402bbd:	mov    rdi,rdx
  402bc0:	jmp    0x402bf0
  402bc2:	mov    BYTE PTR [rdi],0x9
  402bc5:	mov    DWORD PTR [rdi+0x4],r12d
  402bc9:	add    rsi,0x1
  402bcd:	mov    edx,DWORD PTR [rax+0xc]
  402bd0:	add    rbx,0xc
  402bd4:	mov    DWORD PTR [rbx-0xc],edx
  402bd7:	add    edx,DWORD PTR [rax+0x8]
  402bda:	mov    rax,rdi
  402bdd:	sub    rax,rbp
  402be0:	add    rdi,0x8
  402be4:	mov    DWORD PTR [rbx-0x4],eax
  402be7:	mov    DWORD PTR [rbx-0x8],edx
  402bea:	cmp    rsi,0x20
  402bee:	je     0x402c25
  402bf0:	mov    rcx,rsi
  402bf3:	call   0x403220
  402bf8:	test   rax,rax
  402bfb:	jne    0x402bc2
  402bfd:	test   rsi,rsi
  402c00:	je     0x402b7c
  402c06:	mov    edx,esi
  402c08:	nop    DWORD PTR [rax+rax*1+0x0]
  402c10:	mov    r8,rbp
  402c13:	lea    rcx,[rip+0xcc26]        # 0x40f840
  402c1a:	call   QWORD PTR [rip+0xe858]        # 0x411478
  402c20:	jmp    0x402b7c
  402c25:	mov    edx,0x20
  402c2a:	jmp    0x402c10
  402c2c:	nop    DWORD PTR [rax+0x0]
  402c30:	push   rbx
  402c31:	sub    rsp,0x20
  402c35:	mov    rdx,QWORD PTR [rcx]
  402c38:	mov    eax,DWORD PTR [rdx]
  402c3a:	mov    r8d,eax
  402c3d:	and    r8d,0x20ffffff
  402c44:	cmp    r8d,0x20474343
  402c4b:	je     0x402d50
  402c51:	cmp    eax,0xc0000091
  402c56:	mov    rbx,rcx
  402c59:	ja     0x402ce0
  402c5f:	cmp    eax,0xc000008d
  402c64:	jae    0x402cf7
  402c6a:	cmp    eax,0xc0000008
  402c6f:	je     0x402ca3
  402c71:	ja     0x402cb0
  402c73:	cmp    eax,0x80000002
  402c78:	je     0x402ca3
  402c7a:	cmp    eax,0xc0000005
  402c7f:	jne    0x402cc2
  402c81:	xor    edx,edx
  402c83:	mov    ecx,0xb
  402c88:	call   0x407f98
  402c8d:	cmp    rax,0x1
  402c91:	je     0x402dc0
  402c97:	test   rax,rax
  402c9a:	je     0x402cc2
  402c9c:	mov    ecx,0xb
  402ca1:	call   rax
  402ca3:	mov    eax,0xffffffff
  402ca8:	add    rsp,0x20
  402cac:	pop    rbx
  402cad:	ret    
  402cae:	xchg   ax,ax
  402cb0:	cmp    eax,0xc000001d
  402cb5:	je     0x402d76
  402cbb:	cmp    eax,0xc000008c
  402cc0:	je     0x402ca3
  402cc2:	mov    rax,QWORD PTR [rip+0xca37]        # 0x40f700
  402cc9:	test   rax,rax
  402ccc:	je     0x402ca8
  402cce:	mov    rcx,rbx
  402cd1:	add    rsp,0x20
  402cd5:	pop    rbx
  402cd6:	rex.W jmp rax
  402cd9:	nop    DWORD PTR [rax+0x0]
  402ce0:	cmp    eax,0xc0000094
  402ce5:	je     0x402d22
  402ce7:	ja     0x402d60
  402ce9:	cmp    eax,0xc0000092
  402cee:	je     0x402ca3
  402cf0:	cmp    eax,0xc0000093
  402cf5:	jne    0x402cc2
  402cf7:	xor    edx,edx
  402cf9:	mov    ecx,0x8
  402cfe:	call   0x407f98
  402d03:	cmp    rax,0x1
  402d07:	jne    0x402d34
  402d09:	mov    edx,0x1
  402d0e:	mov    ecx,0x8
  402d13:	call   0x407f98
  402d18:	call   0x402480
  402d1d:	jmp    0x402ca3
  402d22:	xor    edx,edx
  402d24:	mov    ecx,0x8
  402d29:	call   0x407f98
  402d2e:	cmp    rax,0x1
  402d32:	je     0x402da2
  402d34:	test   rax,rax
  402d37:	je     0x402cc2
  402d39:	mov    ecx,0x8
  402d3e:	call   rax
  402d40:	mov    eax,0xffffffff
  402d45:	jmp    0x402ca8
  402d4a:	nop    WORD PTR [rax+rax*1+0x0]
  402d50:	test   BYTE PTR [rdx+0x4],0x1
  402d54:	jne    0x402c51
  402d5a:	jmp    0x402ca3
  402d5f:	nop
  402d60:	cmp    eax,0xc0000095
  402d65:	je     0x402ca3
  402d6b:	cmp    eax,0xc0000096
  402d70:	jne    0x402cc2
  402d76:	xor    edx,edx
  402d78:	mov    ecx,0x4
  402d7d:	call   0x407f98
  402d82:	cmp    rax,0x1
  402d86:	je     0x402dd4
  402d88:	test   rax,rax
  402d8b:	je     0x402cc2
  402d91:	mov    ecx,0x4
  402d96:	call   rax
  402d98:	mov    eax,0xffffffff
  402d9d:	jmp    0x402ca8
  402da2:	mov    edx,0x1
  402da7:	mov    ecx,0x8
  402dac:	call   0x407f98
  402db1:	jmp    0x402ca3
  402db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402dc0:	mov    edx,0x1
  402dc5:	mov    ecx,0xb
  402dca:	call   0x407f98
  402dcf:	jmp    0x402ca3
  402dd4:	mov    edx,0x1
  402dd9:	mov    ecx,0x4
  402dde:	call   0x407f98
  402de3:	jmp    0x402ca3
  402de8:	nop
  402de9:	nop
  402dea:	nop
  402deb:	nop
  402dec:	nop
  402ded:	nop
  402dee:	nop
  402def:	nop
  402df0:	push   rbp
  402df1:	push   rdi
  402df2:	push   rsi
  402df3:	push   rbx
  402df4:	sub    rsp,0x28
  402df8:	lea    rcx,[rip+0xcbe1]        # 0x40f9e0
  402dff:	call   QWORD PTR [rip+0xe61b]        # 0x411420
  402e05:	mov    rbx,QWORD PTR [rip+0xcbb4]        # 0x40f9c0
  402e0c:	test   rbx,rbx
  402e0f:	je     0x402e44
  402e11:	mov    rbp,QWORD PTR [rip+0xe698]        # 0x4114b0
  402e18:	mov    rdi,QWORD PTR [rip+0xe621]        # 0x411440
  402e1f:	nop
  402e20:	mov    ecx,DWORD PTR [rbx]
  402e22:	call   rbp
  402e24:	mov    rsi,rax
  402e27:	call   rdi
  402e29:	test   eax,eax
  402e2b:	jne    0x402e3b
  402e2d:	test   rsi,rsi
  402e30:	je     0x402e3b
  402e32:	mov    rax,QWORD PTR [rbx+0x8]
  402e36:	mov    rcx,rsi
  402e39:	call   rax
  402e3b:	mov    rbx,QWORD PTR [rbx+0x10]
  402e3f:	test   rbx,rbx
  402e42:	jne    0x402e20
  402e44:	mov    rax,QWORD PTR [rip+0xe61d]        # 0x411468
  402e4b:	lea    rcx,[rip+0xcb8e]        # 0x40f9e0
  402e52:	add    rsp,0x28
  402e56:	pop    rbx
  402e57:	pop    rsi
  402e58:	pop    rdi
  402e59:	pop    rbp
  402e5a:	rex.W jmp rax
  402e5d:	nop    DWORD PTR [rax]
  402e60:	push   rdi
  402e61:	push   rsi
  402e62:	push   rbx
  402e63:	sub    rsp,0x20
  402e67:	mov    eax,DWORD PTR [rip+0xcb5b]        # 0x40f9c8
  402e6d:	test   eax,eax
  402e6f:	jne    0x402e80
  402e71:	add    rsp,0x20
  402e75:	pop    rbx
  402e76:	pop    rsi
  402e77:	pop    rdi
  402e78:	ret    
  402e79:	nop    DWORD PTR [rax+0x0]
  402e80:	mov    rsi,rdx
  402e83:	mov    edi,ecx
  402e85:	mov    edx,0x18
  402e8a:	mov    ecx,0x1
  402e8f:	call   0x408030
  402e94:	test   rax,rax
  402e97:	mov    rbx,rax
  402e9a:	je     0x402ed8
  402e9c:	mov    DWORD PTR [rax],edi
  402e9e:	mov    QWORD PTR [rax+0x8],rsi
  402ea2:	lea    rcx,[rip+0xcb37]        # 0x40f9e0
  402ea9:	call   QWORD PTR [rip+0xe571]        # 0x411420
  402eaf:	mov    rax,QWORD PTR [rip+0xcb0a]        # 0x40f9c0
  402eb6:	lea    rcx,[rip+0xcb23]        # 0x40f9e0
  402ebd:	mov    QWORD PTR [rip+0xcafc],rbx        # 0x40f9c0
  402ec4:	mov    QWORD PTR [rbx+0x10],rax
  402ec8:	call   QWORD PTR [rip+0xe59a]        # 0x411468
  402ece:	xor    eax,eax
  402ed0:	add    rsp,0x20
  402ed4:	pop    rbx
  402ed5:	pop    rsi
  402ed6:	pop    rdi
  402ed7:	ret    
  402ed8:	mov    eax,0xffffffff
  402edd:	jmp    0x402e71
  402edf:	nop
  402ee0:	push   rbx
  402ee1:	sub    rsp,0x20
  402ee5:	mov    eax,DWORD PTR [rip+0xcadd]        # 0x40f9c8
  402eeb:	test   eax,eax
  402eed:	jne    0x402f00
  402eef:	xor    eax,eax
  402ef1:	add    rsp,0x20
  402ef5:	pop    rbx
  402ef6:	ret    
  402ef7:	nop    WORD PTR [rax+rax*1+0x0]
  402f00:	mov    ebx,ecx
  402f02:	lea    rcx,[rip+0xcad7]        # 0x40f9e0
  402f09:	call   QWORD PTR [rip+0xe511]        # 0x411420
  402f0f:	mov    rdx,QWORD PTR [rip+0xcaaa]        # 0x40f9c0
  402f16:	test   rdx,rdx
  402f19:	je     0x402f37
  402f1b:	mov    eax,DWORD PTR [rdx]
  402f1d:	cmp    eax,ebx
  402f1f:	jne    0x402f2e
  402f21:	jmp    0x402f6f
  402f23:	mov    r8d,DWORD PTR [rax]
  402f26:	cmp    r8d,ebx
  402f29:	je     0x402f50
  402f2b:	mov    rdx,rax
  402f2e:	mov    rax,QWORD PTR [rdx+0x10]
  402f32:	test   rax,rax
  402f35:	jne    0x402f23
  402f37:	lea    rcx,[rip+0xcaa2]        # 0x40f9e0
  402f3e:	call   QWORD PTR [rip+0xe524]        # 0x411468
  402f44:	xor    eax,eax
  402f46:	add    rsp,0x20
  402f4a:	pop    rbx
  402f4b:	ret    
  402f4c:	nop    DWORD PTR [rax+0x0]
  402f50:	mov    rcx,rax
  402f53:	mov    rax,QWORD PTR [rax+0x10]
  402f57:	mov    QWORD PTR [rdx+0x10],rax
  402f5b:	call   0x407fe8
  402f60:	lea    rcx,[rip+0xca79]        # 0x40f9e0
  402f67:	call   QWORD PTR [rip+0xe4fb]        # 0x411468
  402f6d:	jmp    0x402f44
  402f6f:	mov    rax,QWORD PTR [rdx+0x10]
  402f73:	mov    rcx,rdx
  402f76:	mov    QWORD PTR [rip+0xca43],rax        # 0x40f9c0
  402f7d:	jmp    0x402f5b
  402f7f:	nop
  402f80:	push   rbx
  402f81:	sub    rsp,0x20
  402f85:	cmp    edx,0x1
  402f88:	je     0x403020
  402f8e:	jb     0x402fc0
  402f90:	cmp    edx,0x2
  402f93:	je     0x402fb0
  402f95:	cmp    edx,0x3
  402f98:	jne    0x402fb5
  402f9a:	mov    eax,DWORD PTR [rip+0xca28]        # 0x40f9c8
  402fa0:	test   eax,eax
  402fa2:	je     0x402fb5
  402fa4:	call   0x402df0
  402fa9:	jmp    0x402fb5
  402fab:	nop    DWORD PTR [rax+rax*1+0x0]
  402fb0:	call   0x402480
  402fb5:	mov    eax,0x1
  402fba:	add    rsp,0x20
  402fbe:	pop    rbx
  402fbf:	ret    
  402fc0:	mov    eax,DWORD PTR [rip+0xca02]        # 0x40f9c8
  402fc6:	test   eax,eax
  402fc8:	jne    0x403050
  402fce:	mov    eax,DWORD PTR [rip+0xc9f4]        # 0x40f9c8
  402fd4:	cmp    eax,0x1
  402fd7:	jne    0x402fb5
  402fd9:	mov    rcx,QWORD PTR [rip+0xc9e0]        # 0x40f9c0
  402fe0:	test   rcx,rcx
  402fe3:	je     0x402ff6
  402fe5:	mov    rbx,QWORD PTR [rcx+0x10]
  402fe9:	call   0x407fe8
  402fee:	test   rbx,rbx
  402ff1:	mov    rcx,rbx
  402ff4:	jne    0x402fe5
  402ff6:	lea    rcx,[rip+0xc9e3]        # 0x40f9e0
  402ffd:	mov    QWORD PTR [rip+0xc9b8],0x0        # 0x40f9c0
  403008:	mov    DWORD PTR [rip+0xc9b6],0x0        # 0x40f9c8
  403012:	call   QWORD PTR [rip+0xe400]        # 0x411418
  403018:	jmp    0x402fb5
  40301a:	nop    WORD PTR [rax+rax*1+0x0]
  403020:	mov    eax,DWORD PTR [rip+0xc9a2]        # 0x40f9c8
  403026:	test   eax,eax
  403028:	je     0x403040
  40302a:	mov    eax,0x1
  40302f:	mov    DWORD PTR [rip+0xc98f],0x1        # 0x40f9c8
  403039:	add    rsp,0x20
  40303d:	pop    rbx
  40303e:	ret    
  40303f:	nop
  403040:	lea    rcx,[rip+0xc999]        # 0x40f9e0
  403047:	call   QWORD PTR [rip+0xe413]        # 0x411460
  40304d:	jmp    0x40302a
  40304f:	nop
  403050:	call   0x402df0
  403055:	jmp    0x402fce
  40305a:	nop
  40305b:	nop
  40305c:	nop
  40305d:	nop
  40305e:	nop
  40305f:	nop
  403060:	movsxd rax,DWORD PTR [rcx+0x3c]
  403064:	add    rcx,rax
  403067:	xor    eax,eax
  403069:	cmp    DWORD PTR [rcx],0x4550
  40306f:	je     0x403073
  403071:	repz ret 
  403073:	xor    eax,eax
  403075:	cmp    WORD PTR [rcx+0x18],0x20b
  40307b:	sete   al
  40307e:	ret    
  40307f:	nop
  403080:	cmp    WORD PTR [rcx],0x5a4d
  403085:	je     0x403090
  403087:	xor    eax,eax
  403089:	ret    
  40308a:	nop    WORD PTR [rax+rax*1+0x0]
  403090:	jmp    0x403060
  403092:	nop    DWORD PTR [rax+0x0]
  403096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030a0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4030a4:	add    rcx,rax
  4030a7:	movzx  eax,WORD PTR [rcx+0x14]
  4030ab:	lea    rax,[rcx+rax*1+0x18]
  4030b0:	movzx  ecx,WORD PTR [rcx+0x6]
  4030b4:	test   ecx,ecx
  4030b6:	je     0x4030e1
  4030b8:	sub    ecx,0x1
  4030bb:	lea    rcx,[rcx+rcx*4]
  4030bf:	lea    r9,[rax+rcx*8+0x28]
  4030c4:	mov    r8d,DWORD PTR [rax+0xc]
  4030c8:	cmp    r8,rdx
  4030cb:	mov    rcx,r8
  4030ce:	ja     0x4030d8
  4030d0:	add    ecx,DWORD PTR [rax+0x8]
  4030d3:	cmp    rdx,rcx
  4030d6:	jb     0x4030e3
  4030d8:	add    rax,0x28
  4030dc:	cmp    rax,r9
  4030df:	jne    0x4030c4
  4030e1:	xor    eax,eax
  4030e3:	repz ret 
  4030e5:	nop
  4030e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030f0:	push   rdi
  4030f1:	push   rsi
  4030f2:	push   rbx
  4030f3:	sub    rsp,0x20
  4030f7:	mov    rsi,rcx
  4030fa:	call   0x407f78
  4030ff:	cmp    rax,0x8
  403103:	ja     0x403120
  403105:	mov    rbx,QWORD PTR [rip+0x8cc4]        # 0x40bdd0
  40310c:	xor    edi,edi
  40310e:	cmp    WORD PTR [rbx],0x5a4d
  403113:	je     0x403130
  403115:	mov    rax,rdi
  403118:	add    rsp,0x20
  40311c:	pop    rbx
  40311d:	pop    rsi
  40311e:	pop    rdi
  40311f:	ret    
  403120:	xor    edi,edi
  403122:	mov    rax,rdi
  403125:	add    rsp,0x20
  403129:	pop    rbx
  40312a:	pop    rsi
  40312b:	pop    rdi
  40312c:	ret    
  40312d:	nop    DWORD PTR [rax]
  403130:	mov    rcx,rbx
  403133:	call   0x403060
  403138:	test   eax,eax
  40313a:	je     0x403115
  40313c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  403140:	add    rdx,rbx
  403143:	movzx  eax,WORD PTR [rdx+0x14]
  403147:	lea    rbx,[rdx+rax*1+0x18]
  40314c:	movzx  eax,WORD PTR [rdx+0x6]
  403150:	test   eax,eax
  403152:	je     0x403115
  403154:	sub    eax,0x1
  403157:	lea    rax,[rax+rax*4]
  40315b:	lea    rdi,[rbx+rax*8+0x28]
  403160:	jmp    0x40316b
  403162:	add    rbx,0x28
  403166:	cmp    rbx,rdi
  403169:	je     0x403120
  40316b:	mov    r8d,0x8
  403171:	mov    rdx,rsi
  403174:	mov    rcx,rbx
  403177:	call   0x407f70
  40317c:	test   eax,eax
  40317e:	jne    0x403162
  403180:	mov    rdi,rbx
  403183:	mov    rax,rdi
  403186:	add    rsp,0x20
  40318a:	pop    rbx
  40318b:	pop    rsi
  40318c:	pop    rdi
  40318d:	ret    
  40318e:	xchg   ax,ax
  403190:	push   rsi
  403191:	push   rbx
  403192:	sub    rsp,0x28
  403196:	mov    rbx,QWORD PTR [rip+0x8c33]        # 0x40bdd0
  40319d:	cmp    WORD PTR [rbx],0x5a4d
  4031a2:	je     0x4031b0
  4031a4:	xor    eax,eax
  4031a6:	add    rsp,0x28
  4031aa:	pop    rbx
  4031ab:	pop    rsi
  4031ac:	ret    
  4031ad:	nop    DWORD PTR [rax]
  4031b0:	mov    rsi,rcx
  4031b3:	mov    rcx,rbx
  4031b6:	call   0x403060
  4031bb:	test   eax,eax
  4031bd:	je     0x4031a4
  4031bf:	sub    rsi,rbx
  4031c2:	mov    rcx,rbx
  4031c5:	mov    rdx,rsi
  4031c8:	add    rsp,0x28
  4031cc:	pop    rbx
  4031cd:	pop    rsi
  4031ce:	jmp    0x4030a0
  4031d3:	nop    DWORD PTR [rax]
  4031d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031e0:	push   rbx
  4031e1:	sub    rsp,0x20
  4031e5:	mov    rbx,QWORD PTR [rip+0x8be4]        # 0x40bdd0
  4031ec:	xor    eax,eax
  4031ee:	cmp    WORD PTR [rbx],0x5a4d
  4031f3:	je     0x403200
  4031f5:	add    rsp,0x20
  4031f9:	pop    rbx
  4031fa:	ret    
  4031fb:	nop    DWORD PTR [rax+rax*1+0x0]
  403200:	mov    rcx,rbx
  403203:	call   0x403060
  403208:	test   eax,eax
  40320a:	je     0x4031f5
  40320c:	movsxd rax,DWORD PTR [rbx+0x3c]
  403210:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  403215:	add    rsp,0x20
  403219:	pop    rbx
  40321a:	ret    
  40321b:	nop    DWORD PTR [rax+rax*1+0x0]
  403220:	push   rdi
  403221:	push   rsi
  403222:	push   rbx
  403223:	sub    rsp,0x20
  403227:	mov    rsi,QWORD PTR [rip+0x8ba2]        # 0x40bdd0
  40322e:	xor    edi,edi
  403230:	mov    rbx,rcx
  403233:	cmp    WORD PTR [rsi],0x5a4d
  403238:	je     0x403245
  40323a:	mov    rax,rdi
  40323d:	add    rsp,0x20
  403241:	pop    rbx
  403242:	pop    rsi
  403243:	pop    rdi
  403244:	ret    
  403245:	mov    rcx,rsi
  403248:	call   0x403060
  40324d:	test   eax,eax
  40324f:	je     0x40323a
  403251:	movsxd rax,DWORD PTR [rsi+0x3c]
  403255:	add    rsi,rax
  403258:	movzx  eax,WORD PTR [rsi+0x14]
  40325c:	lea    rdx,[rsi+rax*1+0x18]
  403261:	movzx  eax,WORD PTR [rsi+0x6]
  403265:	test   eax,eax
  403267:	je     0x40323a
  403269:	sub    eax,0x1
  40326c:	lea    rax,[rax+rax*4]
  403270:	lea    rax,[rdx+rax*8+0x28]
  403275:	test   BYTE PTR [rdx+0x27],0x20
  403279:	je     0x403284
  40327b:	test   rbx,rbx
  40327e:	je     0x4032a0
  403280:	sub    rbx,0x1
  403284:	add    rdx,0x28
  403288:	cmp    rdx,rax
  40328b:	jne    0x403275
  40328d:	xor    edi,edi
  40328f:	mov    rax,rdi
  403292:	add    rsp,0x20
  403296:	pop    rbx
  403297:	pop    rsi
  403298:	pop    rdi
  403299:	ret    
  40329a:	nop    WORD PTR [rax+rax*1+0x0]
  4032a0:	mov    rdi,rdx
  4032a3:	mov    rax,rdi
  4032a6:	add    rsp,0x20
  4032aa:	pop    rbx
  4032ab:	pop    rsi
  4032ac:	pop    rdi
  4032ad:	ret    
  4032ae:	xchg   ax,ax
  4032b0:	push   rsi
  4032b1:	push   rbx
  4032b2:	sub    rsp,0x28
  4032b6:	mov    rsi,QWORD PTR [rip+0x8b13]        # 0x40bdd0
  4032bd:	xor    ebx,ebx
  4032bf:	cmp    WORD PTR [rsi],0x5a4d
  4032c4:	je     0x4032d0
  4032c6:	mov    rax,rbx
  4032c9:	add    rsp,0x28
  4032cd:	pop    rbx
  4032ce:	pop    rsi
  4032cf:	ret    
  4032d0:	mov    rcx,rsi
  4032d3:	call   0x403060
  4032d8:	test   eax,eax
  4032da:	cmovne rbx,rsi
  4032de:	mov    rax,rbx
  4032e1:	add    rsp,0x28
  4032e5:	pop    rbx
  4032e6:	pop    rsi
  4032e7:	ret    
  4032e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4032f0:	push   rsi
  4032f1:	push   rbx
  4032f2:	sub    rsp,0x28
  4032f6:	mov    rbx,QWORD PTR [rip+0x8ad3]        # 0x40bdd0
  4032fd:	xor    eax,eax
  4032ff:	cmp    WORD PTR [rbx],0x5a4d
  403304:	je     0x403310
  403306:	add    rsp,0x28
  40330a:	pop    rbx
  40330b:	pop    rsi
  40330c:	ret    
  40330d:	nop    DWORD PTR [rax]
  403310:	mov    rsi,rcx
  403313:	mov    rcx,rbx
  403316:	call   0x403060
  40331b:	test   eax,eax
  40331d:	je     0x403306
  40331f:	sub    rsi,rbx
  403322:	mov    rcx,rbx
  403325:	mov    rdx,rsi
  403328:	call   0x4030a0
  40332d:	test   rax,rax
  403330:	je     0x403341
  403332:	mov    eax,DWORD PTR [rax+0x24]
  403335:	not    eax
  403337:	shr    eax,0x1f
  40333a:	add    rsp,0x28
  40333e:	pop    rbx
  40333f:	pop    rsi
  403340:	ret    
  403341:	xor    eax,eax
  403343:	jmp    0x403306
  403345:	nop
  403346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403350:	push   rbp
  403351:	push   rdi
  403352:	push   rsi
  403353:	push   rbx
  403354:	sub    rsp,0x28
  403358:	mov    rdi,QWORD PTR [rip+0x8a71]        # 0x40bdd0
  40335f:	xor    ebp,ebp
  403361:	mov    esi,ecx
  403363:	cmp    WORD PTR [rdi],0x5a4d
  403368:	je     0x403380
  40336a:	mov    rax,rbp
  40336d:	add    rsp,0x28
  403371:	pop    rbx
  403372:	pop    rsi
  403373:	pop    rdi
  403374:	pop    rbp
  403375:	ret    
  403376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403380:	mov    rcx,rdi
  403383:	call   0x403060
  403388:	test   eax,eax
  40338a:	je     0x40336a
  40338c:	movsxd rax,DWORD PTR [rdi+0x3c]
  403390:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  403397:	test   edx,edx
  403399:	je     0x40336a
  40339b:	mov    ebx,edx
  40339d:	mov    rcx,rdi
  4033a0:	mov    rdx,rbx
  4033a3:	call   0x4030a0
  4033a8:	test   rax,rax
  4033ab:	je     0x40336a
  4033ad:	add    rbx,rdi
  4033b0:	mov    rdx,rbx
  4033b3:	jne    0x4033c7
  4033b5:	jmp    0x40336a
  4033b7:	nop    WORD PTR [rax+rax*1+0x0]
  4033c0:	sub    esi,0x1
  4033c3:	add    rdx,0x14
  4033c7:	mov    ecx,DWORD PTR [rdx+0x4]
  4033ca:	test   ecx,ecx
  4033cc:	jne    0x4033d5
  4033ce:	mov    eax,DWORD PTR [rdx+0xc]
  4033d1:	test   eax,eax
  4033d3:	je     0x4033f0
  4033d5:	test   esi,esi
  4033d7:	jg     0x4033c0
  4033d9:	mov    ebp,DWORD PTR [rdx+0xc]
  4033dc:	add    rbp,rdi
  4033df:	mov    rax,rbp
  4033e2:	add    rsp,0x28
  4033e6:	pop    rbx
  4033e7:	pop    rsi
  4033e8:	pop    rdi
  4033e9:	pop    rbp
  4033ea:	ret    
  4033eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4033f0:	xor    ebp,ebp
  4033f2:	mov    rax,rbp
  4033f5:	add    rsp,0x28
  4033f9:	pop    rbx
  4033fa:	pop    rsi
  4033fb:	pop    rdi
  4033fc:	pop    rbp
  4033fd:	ret    
  4033fe:	nop
  4033ff:	nop
  403400:	push   rcx
  403401:	push   rax
  403402:	cmp    rax,0x1000
  403408:	lea    rcx,[rsp+0x18]
  40340d:	jb     0x403428
  40340f:	sub    rcx,0x1000
  403416:	or     QWORD PTR [rcx],0x0
  40341a:	sub    rax,0x1000
  403420:	cmp    rax,0x1000
  403426:	ja     0x40340f
  403428:	sub    rcx,rax
  40342b:	or     QWORD PTR [rcx],0x0
  40342f:	pop    rax
  403430:	pop    rcx
  403431:	ret    
  403432:	nop
  403433:	nop
  403434:	nop
  403435:	nop
  403436:	nop
  403437:	nop
  403438:	nop
  403439:	nop
  40343a:	nop
  40343b:	nop
  40343c:	nop
  40343d:	nop
  40343e:	nop
  40343f:	nop
  403440:	push   rbx
  403441:	sub    rsp,0x60
  403445:	lea    r8,[rip+0x6c14]        # 0x40a060
  40344c:	lea    rax,[rsp+0x50]
  403451:	lea    r9,[rsp+0x4c]
  403456:	mov    QWORD PTR [rsp+0x20],rax
  40345b:	call   0x404110
  403460:	mov    edx,eax
  403462:	and    edx,0x7
  403465:	cmp    edx,0x6
  403468:	ja     0x403495
  40346a:	lea    rcx,[rip+0x843f]        # 0x40b8b0
  403471:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  403475:	add    rcx,rdx
  403478:	jmp    rcx
  40347a:	nop    WORD PTR [rax+rax*1+0x0]
  403480:	mov    ebx,DWORD PTR [rsp+0x54]
  403484:	mov    edx,DWORD PTR [rsp+0x50]
  403488:	or     ebx,0x7ff00000
  40348e:	shl    rbx,0x20
  403492:	or     rbx,rdx
  403495:	test   al,0x8
  403497:	je     0x4034ae
  403499:	mov    rax,rbx
  40349c:	mov    ebx,ebx
  40349e:	shr    rax,0x20
  4034a2:	or     eax,0x80000000
  4034a7:	shl    rax,0x20
  4034ab:	or     rbx,rax
  4034ae:	mov    QWORD PTR [rsp+0x38],rbx
  4034b3:	movsd  xmm0,QWORD PTR [rsp+0x38]
  4034b9:	add    rsp,0x60
  4034bd:	pop    rbx
  4034be:	ret    
  4034bf:	nop
  4034c0:	movabs rbx,0x7ff8000000000000
  4034ca:	jmp    0x403495
  4034cc:	nop    DWORD PTR [rax+0x0]
  4034d0:	xor    ebx,ebx
  4034d2:	jmp    0x403495
  4034d4:	mov    ebx,DWORD PTR [rsp+0x4c]
  4034d8:	mov    edx,DWORD PTR [rsp+0x54]
  4034dc:	add    ebx,0x433
  4034e2:	and    edx,0xffefffff
  4034e8:	shl    ebx,0x14
  4034eb:	or     ebx,edx
  4034ed:	mov    edx,DWORD PTR [rsp+0x50]
  4034f1:	shl    rbx,0x20
  4034f5:	or     rbx,rdx
  4034f8:	jmp    0x403495
  4034fa:	nop    WORD PTR [rax+rax*1+0x0]
  403500:	mov    ebx,DWORD PTR [rsp+0x54]
  403504:	mov    edx,DWORD PTR [rsp+0x50]
  403508:	shl    rbx,0x20
  40350c:	or     rbx,rdx
  40350f:	jmp    0x403495
  403511:	movabs rbx,0x7ff0000000000000
  40351b:	jmp    0x403495
  403520:	sub    rsp,0x28
  403524:	movsd  QWORD PTR [rsp+0x8],xmm0
  40352a:	fld    QWORD PTR [rsp+0x8]
  40352e:	push   rax
  40352f:	sub    rsp,0x8
  403533:	fnstcw WORD PTR [rsp+0x4]
  403537:	movzx  eax,WORD PTR [rsp+0x4]
  40353c:	or     ah,0xc
  40353f:	mov    WORD PTR [rsp],ax
  403543:	fldcw  WORD PTR [rsp]
  403546:	frndint 
  403548:	fldcw  WORD PTR [rsp+0x4]
  40354c:	add    rsp,0x8
  403550:	pop    rax
  403551:	test   rdx,rdx
  403554:	fstp   QWORD PTR [rsp+0x8]
  403558:	je     0x403564
  40355a:	movsd  xmm2,QWORD PTR [rsp+0x8]
  403560:	movsd  QWORD PTR [rdx],xmm2
  403564:	movsd  QWORD PTR [rsp+0x18],xmm0
  40356a:	mov    eax,DWORD PTR [rsp+0x1c]
  40356e:	mov    ecx,eax
  403570:	and    eax,0x7ff00000
  403575:	and    ecx,0xfffff
  40357b:	or     ecx,DWORD PTR [rsp+0x18]
  40357f:	mov    edx,ecx
  403581:	or     edx,eax
  403583:	sete   r8b
  403587:	test   eax,eax
  403589:	sete   dl
  40358c:	or     edx,r8d
  40358f:	xor    edx,0x1
  403592:	cmp    eax,0x7ff00000
  403597:	sete   al
  40359a:	and    edx,eax
  40359c:	test   ecx,ecx
  40359e:	setne  al
  4035a1:	cmp    dl,al
  4035a3:	jbe    0x4035b0
  4035a5:	pxor   xmm0,xmm0
  4035a9:	add    rsp,0x28
  4035ad:	ret    
  4035ae:	xchg   ax,ax
  4035b0:	subsd  xmm0,QWORD PTR [rsp+0x8]
  4035b6:	add    rsp,0x28
  4035ba:	ret    
  4035bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4035c0:	push   rdi
  4035c1:	push   rsi
  4035c2:	push   rbx
  4035c3:	sub    rsp,0xc0
  4035ca:	movaps XMMWORD PTR [rsp+0x80],xmm6
  4035d2:	movaps XMMWORD PTR [rsp+0x90],xmm7
  4035da:	movaps XMMWORD PTR [rsp+0xa0],xmm8
  4035e3:	movaps XMMWORD PTR [rsp+0xb0],xmm9
  4035ec:	mov    ecx,0x4000
  4035f1:	movsd  QWORD PTR [rsp+0x70],xmm0
  4035f7:	movapd xmm8,xmm0
  4035fc:	mov    eax,DWORD PTR [rsp+0x74]
  403600:	movapd xmm7,xmm1
  403604:	mov    edx,eax
  403606:	and    eax,0x7ff00000
  40360b:	and    edx,0xfffff
  403611:	or     edx,DWORD PTR [rsp+0x70]
  403615:	mov    edi,edx
  403617:	or     edi,eax
  403619:	je     0x403627
  40361b:	test   eax,eax
  40361d:	mov    cx,0x4400
  403621:	jne    0x403721
  403627:	movsd  QWORD PTR [rsp+0x78],xmm7
  40362d:	mov    eax,DWORD PTR [rsp+0x7c]
  403631:	movsd  xmm0,QWORD PTR [rip+0x82c7]        # 0x40b900
  403639:	mov    edx,eax
  40363b:	and    eax,0x7ff00000
  403640:	and    edx,0xfffff
  403646:	or     edx,DWORD PTR [rsp+0x78]
  40364a:	mov    esi,edx
  40364c:	or     esi,eax
  40364e:	je     0x4036c3
  403650:	test   eax,eax
  403652:	jne    0x4036f0
  403658:	mov    r8d,0x4400
  40365e:	movsd  xmm6,QWORD PTR [rip+0x829a]        # 0x40b900
  403666:	ucomisd xmm8,xmm6
  40366b:	jp     0x40366f
  40366d:	je     0x4036bf
  40366f:	cmp    ecx,0x100
  403675:	jne    0x403750
  40367b:	movq   rax,xmm8
  403680:	shr    rax,0x20
  403684:	test   eax,eax
  403686:	js     0x403930
  40368c:	movsd  xmm6,QWORD PTR [rip+0x824c]        # 0x40b8e0
  403694:	call   0x408068
  403699:	mov    DWORD PTR [rax],0x21
  40369f:	movsd  QWORD PTR [rsp+0x20],xmm6
  4036a5:	movapd xmm3,xmm7
  4036a9:	movapd xmm2,xmm8
  4036ae:	lea    rdx,[rip+0x821b]        # 0x40b8d0
  4036b5:	mov    ecx,0x1
  4036ba:	call   0x402320
  4036bf:	movapd xmm0,xmm6
  4036c3:	movaps xmm6,XMMWORD PTR [rsp+0x80]
  4036cb:	movaps xmm7,XMMWORD PTR [rsp+0x90]
  4036d3:	movaps xmm8,XMMWORD PTR [rsp+0xa0]
  4036dc:	movaps xmm9,XMMWORD PTR [rsp+0xb0]
  4036e5:	add    rsp,0xc0
  4036ec:	pop    rbx
  4036ed:	pop    rsi
  4036ee:	pop    rdi
  4036ef:	ret    
  4036f0:	cmp    eax,0x7ff00000
  4036f5:	mov    r8d,0x400
  4036fb:	jne    0x40365e
  403701:	test   edx,edx
  403703:	mov    r8w,0x500
  403708:	je     0x40365e
  40370e:	ucomisd xmm8,xmm0
  403713:	jp     0x40367b
  403719:	jne    0x40367b
  40371f:	jmp    0x4036c3
  403721:	cmp    eax,0x7ff00000
  403726:	mov    cx,0x400
  40372a:	jne    0x403627
  403730:	cmp    edx,0x1
  403733:	sbb    ecx,ecx
  403735:	and    ecx,0x400
  40373b:	add    ecx,0x100
  403741:	jmp    0x403627
  403746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403750:	cmp    ecx,0x4000
  403756:	je     0x4037f0
  40375c:	cmp    r8d,0x500
  403763:	je     0x4037c0
  403765:	cmp    ecx,0x500
  40376b:	jne    0x403842
  403771:	movq   rax,xmm8
  403776:	shr    rax,0x20
  40377a:	test   eax,eax
  40377c:	js     0x403a60
  403782:	movapd xmm0,xmm7
  403786:	mov    edx,0xffffffff
  40378b:	call   0x406130
  403790:	lea    rdx,[rsp+0x68]
  403795:	call   0x403520
  40379a:	movq   rax,xmm7
  40379f:	shr    rax,0x20
  4037a3:	test   eax,eax
  4037a5:	pxor   xmm9,xmm9
  4037aa:	js     0x403838
  4037b0:	movsd  xmm0,QWORD PTR [rip+0x8140]        # 0x40b8f8
  4037b8:	jmp    0x4036c3
  4037bd:	nop    DWORD PTR [rax]
  4037c0:	cmp    ecx,0x500
  4037c6:	je     0x40379a
  4037c8:	movq   rax,xmm8
  4037cd:	shr    rax,0x20
  4037d1:	test   eax,eax
  4037d3:	js     0x403ad0
  4037d9:	movq   rax,xmm7
  4037de:	shr    rax,0x20
  4037e2:	ucomisd xmm8,xmm6
  4037e7:	ja     0x4037a3
  4037e9:	jmp    0x40382b
  4037eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4037f0:	cmp    r8d,0x500
  4037f7:	je     0x403822
  4037f9:	movq   rax,xmm8
  4037fe:	shr    rax,0x20
  403802:	test   eax,eax
  403804:	js     0x4039c4
  40380a:	movapd xmm0,xmm7
  40380e:	mov    edx,0xffffffff
  403813:	call   0x406130
  403818:	lea    rdx,[rsp+0x68]
  40381d:	call   0x403520
  403822:	movq   rax,xmm7
  403827:	shr    rax,0x20
  40382b:	test   eax,eax
  40382d:	pxor   xmm9,xmm9
  403832:	js     0x4037b0
  403838:	movapd xmm0,xmm9
  40383d:	jmp    0x4036c3
  403842:	lea    rbx,[rsp+0x68]
  403847:	pxor   xmm9,xmm9
  40384c:	movapd xmm0,xmm7
  403850:	mov    rdx,rbx
  403853:	call   0x403520
  403858:	ucomisd xmm0,xmm9
  40385d:	jp     0x403940
  403863:	jne    0x403940
  403869:	movsd  xmm0,QWORD PTR [rsp+0x68]
  40386f:	movsd  xmm1,QWORD PTR [rip+0x80b1]        # 0x40b928
  403877:	ucomisd xmm1,xmm0
  40387b:	jb     0x40388b
  40387d:	ucomisd xmm0,QWORD PTR [rip+0x80bb]        # 0x40b940
  403885:	jae    0x403b70
  40388b:	movsd  xmm0,QWORD PTR [rip+0x809d]        # 0x40b930
  403893:	lea    rsi,[rsp+0x50]
  403898:	lea    rdi,[rsp+0x40]
  40389d:	andpd  xmm0,xmm8
  4038a2:	mov    rdx,rdi
  4038a5:	mov    rcx,rsi
  4038a8:	movsd  QWORD PTR [rsp+0x30],xmm0
  4038ae:	fld    QWORD PTR [rsp+0x30]
  4038b2:	fstp   TBYTE PTR [rsp+0x40]
  4038b6:	call   0x406240
  4038bb:	mov    rdx,rdi
  4038be:	mov    rcx,rsi
  4038c1:	movsd  QWORD PTR [rsp+0x30],xmm7
  4038c7:	fld    TBYTE PTR [rsp+0x50]
  4038cb:	fld    QWORD PTR [rsp+0x30]
  4038cf:	fmulp  st(1),st
  4038d1:	fstp   TBYTE PTR [rsp+0x40]
  4038d5:	call   0x4060c0
  4038da:	movq   rax,xmm8
  4038df:	fld    TBYTE PTR [rsp+0x50]
  4038e3:	shr    rax,0x20
  4038e7:	test   eax,eax
  4038e9:	fstp   QWORD PTR [rsp+0x38]
  4038ed:	movsd  xmm6,QWORD PTR [rsp+0x38]
  4038f3:	jns    0x4036bf
  4038f9:	movapd xmm0,xmm7
  4038fd:	mov    edx,0xffffffff
  403902:	call   0x406130
  403907:	mov    rdx,rbx
  40390a:	call   0x403520
  40390f:	ucomisd xmm0,xmm9
  403914:	jp     0x40391c
  403916:	je     0x4036bf
  40391c:	movsd  xmm4,QWORD PTR [rip+0x7fec]        # 0x40b910
  403924:	xorpd  xmm6,xmm4
  403928:	jmp    0x4036bf
  40392d:	nop    DWORD PTR [rax]
  403930:	movsd  xmm6,QWORD PTR [rip+0x7fa0]        # 0x40b8d8
  403938:	jmp    0x403694
  40393d:	nop    DWORD PTR [rax]
  403940:	movq   rax,xmm8
  403945:	shr    rax,0x20
  403949:	test   eax,eax
  40394b:	js     0x403b83
  403951:	ucomisd xmm7,QWORD PTR [rip+0x7fc7]        # 0x40b920
  403959:	jp     0x403961
  40395b:	je     0x403ab0
  403961:	movsd  xmm0,QWORD PTR [rip+0x7fc7]        # 0x40b930
  403969:	lea    rbx,[rsp+0x50]
  40396e:	lea    rsi,[rsp+0x40]
  403973:	andpd  xmm8,xmm0
  403978:	mov    rdx,rsi
  40397b:	mov    rcx,rbx
  40397e:	movsd  QWORD PTR [rsp+0x30],xmm8
  403985:	fld    QWORD PTR [rsp+0x30]
  403989:	fstp   TBYTE PTR [rsp+0x40]
  40398d:	call   0x406240
  403992:	mov    rdx,rsi
  403995:	mov    rcx,rbx
  403998:	movsd  QWORD PTR [rsp+0x30],xmm7
  40399e:	fld    TBYTE PTR [rsp+0x50]
  4039a2:	fld    QWORD PTR [rsp+0x30]
  4039a6:	fmulp  st(1),st
  4039a8:	fstp   TBYTE PTR [rsp+0x40]
  4039ac:	call   0x4060c0
  4039b1:	fld    TBYTE PTR [rsp+0x50]
  4039b5:	fstp   QWORD PTR [rsp+0x38]
  4039b9:	movsd  xmm0,QWORD PTR [rsp+0x38]
  4039bf:	jmp    0x4036c3
  4039c4:	lea    rbx,[rsp+0x68]
  4039c9:	pxor   xmm9,xmm9
  4039ce:	movapd xmm0,xmm7
  4039d2:	mov    rdx,rbx
  4039d5:	call   0x403520
  4039da:	ucomisd xmm0,xmm9
  4039df:	jp     0x4039e3
  4039e1:	je     0x403a0f
  4039e3:	movq   rax,xmm7
  4039e8:	shr    rax,0x20
  4039ec:	test   eax,eax
  4039ee:	jns    0x403838
  4039f4:	movsd  xmm0,QWORD PTR [rip+0x7f14]        # 0x40b910
  4039fc:	xorpd  xmm8,xmm0
  403a01:	divsd  xmm6,xmm8
  403a06:	movapd xmm0,xmm6
  403a0a:	jmp    0x4036c3
  403a0f:	movapd xmm0,xmm7
  403a13:	mov    edx,0xffffffff
  403a18:	call   0x406130
  403a1d:	mov    rdx,rbx
  403a20:	call   0x403520
  403a25:	ucomisd xmm0,xmm9
  403a2a:	mov    edx,0x1
  403a2f:	setp   al
  403a32:	cmove  edx,eax
  403a35:	movq   rax,xmm7
  403a3a:	shr    rax,0x20
  403a3e:	test   eax,eax
  403a40:	js     0x403b9b
  403a46:	test   dl,dl
  403a48:	je     0x403838
  403a4e:	movsd  xmm0,QWORD PTR [rip+0x7e92]        # 0x40b8e8
  403a56:	jmp    0x4036c3
  403a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  403a60:	lea    rbx,[rsp+0x68]
  403a65:	pxor   xmm9,xmm9
  403a6a:	movapd xmm0,xmm7
  403a6e:	mov    rdx,rbx
  403a71:	call   0x403520
  403a76:	ucomisd xmm0,xmm9
  403a7b:	jp     0x403a7f
  403a7d:	je     0x403af3
  403a7f:	movq   rax,xmm7
  403a84:	shr    rax,0x20
  403a88:	test   eax,eax
  403a8a:	js     0x4039f4
  403a90:	movsd  xmm4,QWORD PTR [rip+0x7e78]        # 0x40b910
  403a98:	movapd xmm0,xmm8
  403a9d:	xorpd  xmm0,xmm4
  403aa1:	jmp    0x4036c3
  403aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ab0:	movsd  QWORD PTR [rsp+0x30],xmm8
  403ab7:	fld    QWORD PTR [rsp+0x30]
  403abb:	fsqrt  
  403abd:	fstp   QWORD PTR [rsp+0x30]
  403ac1:	movsd  xmm0,QWORD PTR [rsp+0x30]
  403ac7:	jmp    0x4036c3
  403acc:	nop    DWORD PTR [rax+0x0]
  403ad0:	movsd  xmm0,QWORD PTR [rip+0x7e38]        # 0x40b910
  403ad8:	xorpd  xmm8,xmm0
  403add:	ucomisd xmm8,xmm6
  403ae2:	jp     0x4037d9
  403ae8:	je     0x4036bf
  403aee:	jmp    0x4037d9
  403af3:	movapd xmm0,xmm7
  403af7:	mov    edx,0xffffffff
  403afc:	call   0x406130
  403b01:	mov    rdx,rbx
  403b04:	call   0x403520
  403b09:	ucomisd xmm0,xmm9
  403b0e:	mov    edx,0x1
  403b13:	setp   al
  403b16:	cmove  edx,eax
  403b19:	movq   rax,xmm7
  403b1e:	shr    rax,0x20
  403b22:	mov    ecx,eax
  403b24:	shr    ecx,0x1f
  403b27:	cmp    cl,dl
  403b29:	ja     0x403838
  403b2f:	not    eax
  403b31:	shr    eax,0x1f
  403b34:	test   dl,dl
  403b36:	je     0x403b48
  403b38:	test   al,al
  403b3a:	movsd  xmm0,QWORD PTR [rip+0x7dae]        # 0x40b8f0
  403b42:	jne    0x4036c3
  403b48:	cmp    al,dl
  403b4a:	ja     0x4037b0
  403b50:	test   cl,cl
  403b52:	jne    0x403a46
  403b58:	test   dl,dl
  403b5a:	movsd  xmm0,QWORD PTR [rip+0x7d8e]        # 0x40b8f0
  403b62:	jne    0x4036c3
  403b68:	jmp    0x4037b0
  403b6d:	nop    DWORD PTR [rax]
  403b70:	cvttsd2si edx,xmm7
  403b74:	movapd xmm0,xmm8
  403b79:	call   0x405dc0
  403b7e:	jmp    0x4036c3
  403b83:	call   0x408068
  403b88:	movsd  xmm6,QWORD PTR [rip+0x7d48]        # 0x40b8d8
  403b90:	mov    DWORD PTR [rax],0x21
  403b96:	jmp    0x40369f
  403b9b:	test   dl,dl
  403b9d:	je     0x4037b0
  403ba3:	movsd  xmm0,QWORD PTR [rip+0x7d45]        # 0x40b8f0
  403bab:	jmp    0x4036c3
  403bb0:	push   rsi
  403bb1:	push   rbx
  403bb2:	sub    rsp,0x28
  403bb6:	movsxd rax,DWORD PTR [rcx+0x14]
  403bba:	lea    rdx,[rcx+0x18]
  403bbe:	mov    rbx,rcx
  403bc1:	lea    r9,[rdx+rax*4]
  403bc5:	mov    rcx,rax
  403bc8:	jmp    0x403be0
  403bca:	nop    WORD PTR [rax+rax*1+0x0]
  403bd0:	add    rdx,0x4
  403bd4:	mov    DWORD PTR [rdx-0x4],0x0
  403bdb:	cmp    r9,rdx
  403bde:	jbe    0x403c00
  403be0:	mov    r8d,DWORD PTR [rdx]
  403be3:	cmp    r8d,0xffffffff
  403be7:	je     0x403bd0
  403be9:	add    r8d,0x1
  403bed:	mov    rax,rbx
  403bf0:	mov    DWORD PTR [rdx],r8d
  403bf3:	add    rsp,0x28
  403bf7:	pop    rbx
  403bf8:	pop    rsi
  403bf9:	ret    
  403bfa:	nop    WORD PTR [rax+rax*1+0x0]
  403c00:	cmp    ecx,DWORD PTR [rbx+0xc]
  403c03:	jge    0x403c20
  403c05:	add    ecx,0x1
  403c08:	mov    DWORD PTR [rbx+0x14],ecx
  403c0b:	mov    DWORD PTR [rbx+rax*4+0x18],0x1
  403c13:	mov    rax,rbx
  403c16:	add    rsp,0x28
  403c1a:	pop    rbx
  403c1b:	pop    rsi
  403c1c:	ret    
  403c1d:	nop    DWORD PTR [rax]
  403c20:	mov    eax,DWORD PTR [rbx+0x8]
  403c23:	lea    ecx,[rax+0x1]
  403c26:	call   0x407220
  403c2b:	mov    rsi,rax
  403c2e:	lea    rcx,[rax+0x10]
  403c32:	movsxd rax,DWORD PTR [rbx+0x14]
  403c36:	lea    rdx,[rbx+0x10]
  403c3a:	lea    r8,[rax*4+0x8]
  403c42:	call   0x407fc0
  403c47:	mov    rcx,rbx
  403c4a:	mov    rbx,rsi
  403c4d:	call   0x407330
  403c52:	movsxd rax,DWORD PTR [rsi+0x14]
  403c56:	mov    rcx,rax
  403c59:	jmp    0x403c05
  403c5b:	nop    DWORD PTR [rax+rax*1+0x0]
  403c60:	push   r15
  403c62:	push   r14
  403c64:	push   r13
  403c66:	push   r12
  403c68:	push   rbp
  403c69:	push   rdi
  403c6a:	push   rsi
  403c6b:	push   rbx
  403c6c:	sub    rsp,0x48
  403c70:	mov    rdi,rdx
  403c73:	mov    r12,r8
  403c76:	lea    rdx,[rsp+0x3c]
  403c7b:	lea    r8,[rsp+0x38]
  403c80:	movsd  xmm0,QWORD PTR [rcx]
  403c84:	mov    r13,r9
  403c87:	call   0x407b00
  403c8c:	mov    r10d,DWORD PTR [rsp+0x38]
  403c91:	mov    esi,DWORD PTR [rdi]
  403c93:	mov    rbx,rax
  403c96:	mov    edx,DWORD PTR [rsp+0x3c]
  403c9a:	sub    r10d,esi
  403c9d:	add    edx,r10d
  403ca0:	test   r10d,r10d
  403ca3:	mov    DWORD PTR [rsp+0x38],r10d
  403ca8:	mov    DWORD PTR [rsp+0x3c],edx
  403cac:	jle    0x403e70
  403cb2:	cmp    esi,0x35
  403cb5:	je     0x403ea0
  403cbb:	cmp    DWORD PTR [rsp+0xb8],0x1
  403cc3:	je     0x403d74
  403cc9:	cmp    DWORD PTR [rsp+0xb8],0x2
  403cd1:	je     0x403d00
  403cd3:	mov    eax,r10d
  403cd6:	sub    eax,0x1
  403cd9:	jne    0x403f70
  403cdf:	mov    ecx,DWORD PTR [rsp+0xb0]
  403ce6:	xor    r15d,r15d
  403ce9:	test   ecx,ecx
  403ceb:	je     0x403df7
  403cf1:	test   BYTE PTR [rbx+0x18],0x2
  403cf5:	je     0x403ebe
  403cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  403d00:	mov    edx,r10d
  403d03:	mov    rcx,rbx
  403d06:	call   0x407ec0
  403d0b:	mov    edx,DWORD PTR [rsp+0x38]
  403d0f:	mov    rcx,rbx
  403d12:	mov    r14d,eax
  403d15:	call   0x406b70
  403d1a:	mov    rcx,rbx
  403d1d:	call   0x403bb0
  403d22:	mov    edx,esi
  403d24:	mov    rbx,rax
  403d27:	and    edx,0x1f
  403d2a:	jne    0x403f60
  403d30:	mov    eax,DWORD PTR [rbx+0x14]
  403d33:	sub    eax,0x1
  403d36:	cdqe   
  403d38:	bsr    eax,DWORD PTR [rbx+rax*4+0x18]
  403d3d:	xor    eax,0x1f
  403d40:	cmp    edx,eax
  403d42:	je     0x403ff0
  403d48:	test   r14d,r14d
  403d4b:	jne    0x403d55
  403d4d:	mov    r14d,DWORD PTR [rbx+0x18]
  403d51:	and    r14d,0x1
  403d55:	mov    edx,0x1
  403d5a:	mov    rcx,rbx
  403d5d:	mov    ebp,0x20
  403d62:	call   0x406b70
  403d67:	mov    eax,DWORD PTR [rsp+0x3c]
  403d6b:	lea    edx,[rax+0x1]
  403d6e:	mov    DWORD PTR [rsp+0x3c],edx
  403d72:	jmp    0x403d9f
  403d74:	mov    edx,r10d
  403d77:	mov    rcx,rax
  403d7a:	call   0x407ec0
  403d7f:	test   eax,eax
  403d81:	mov    r14d,eax
  403d84:	jne    0x403e13
  403d8a:	mov    edx,DWORD PTR [rsp+0x38]
  403d8e:	mov    rcx,rbx
  403d91:	xor    r14d,r14d
  403d94:	xor    ebp,ebp
  403d96:	call   0x406b70
  403d9b:	mov    edx,DWORD PTR [rsp+0x3c]
  403d9f:	mov    eax,DWORD PTR [rdi+0x4]
  403da2:	cmp    eax,edx
  403da4:	jle    0x403e30
  403daa:	mov    r8d,eax
  403dad:	mov    DWORD PTR [rsp+0x3c],eax
  403db1:	sub    r8d,edx
  403db4:	cmp    esi,r8d
  403db7:	jge    0x403ef0
  403dbd:	mov    rdi,QWORD PTR [rsp+0xc0]
  403dc5:	mov    DWORD PTR [rbx+0x14],0x0
  403dcc:	mov    edx,eax
  403dce:	xor    ebp,ebp
  403dd0:	mov    DWORD PTR [rdi],0x50
  403dd6:	mov    DWORD PTR [r12],edx
  403dda:	mov    r8,rbx
  403ddd:	mov    edx,esi
  403ddf:	mov    rcx,r13
  403de2:	mov    r15d,0x1
  403de8:	call   0x407e50
  403ded:	mov    rax,QWORD PTR [rsp+0xc0]
  403df5:	or     DWORD PTR [rax],ebp
  403df7:	mov    rcx,rbx
  403dfa:	call   0x407330
  403dff:	mov    eax,r15d
  403e02:	add    rsp,0x48
  403e06:	pop    rbx
  403e07:	pop    rsi
  403e08:	pop    rdi
  403e09:	pop    rbp
  403e0a:	pop    r12
  403e0c:	pop    r13
  403e0e:	pop    r14
  403e10:	pop    r15
  403e12:	ret    
  403e13:	mov    edx,DWORD PTR [rsp+0x38]
  403e17:	mov    rcx,rbx
  403e1a:	mov    ebp,0x10
  403e1f:	call   0x406b70
  403e24:	jmp    0x403d9b
  403e29:	nop    DWORD PTR [rax+0x0]
  403e30:	mov    eax,DWORD PTR [rdi+0x8]
  403e33:	cmp    eax,edx
  403e35:	jge    0x403dd6
  403e37:	add    eax,0x1
  403e3a:	xor    ebp,ebp
  403e3c:	mov    DWORD PTR [rsp+0x3c],eax
  403e40:	mov    rax,QWORD PTR [rsp+0xc0]
  403e48:	mov    DWORD PTR [rax],0xa3
  403e4e:	call   0x408068
  403e53:	mov    DWORD PTR [rax],0x22
  403e59:	mov    DWORD PTR [rbx+0x14],0x0
  403e60:	mov    edx,DWORD PTR [rsp+0x3c]
  403e64:	jmp    0x403dd6
  403e69:	nop    DWORD PTR [rax+0x0]
  403e70:	mov    r9d,DWORD PTR [rsp+0xb0]
  403e78:	xor    r15d,r15d
  403e7b:	test   r9d,r9d
  403e7e:	je     0x403df7
  403e84:	test   r10d,r10d
  403e87:	jne    0x403fd0
  403e8d:	xor    r14d,r14d
  403e90:	xor    ebp,ebp
  403e92:	jmp    0x403d9f
  403e97:	nop    WORD PTR [rax+rax*1+0x0]
  403ea0:	mov    r8d,DWORD PTR [rsp+0xb0]
  403ea8:	xor    r15d,r15d
  403eab:	test   r8d,r8d
  403eae:	je     0x403df7
  403eb4:	cmp    DWORD PTR [rdi+0xc],0x1
  403eb8:	jne    0x403df7
  403ebe:	mov    edx,r10d
  403ec1:	mov    rcx,rbx
  403ec4:	call   0x407ec0
  403ec9:	test   eax,eax
  403ecb:	mov    r14d,eax
  403ece:	je     0x403d8a
  403ed4:	mov    edx,DWORD PTR [rsp+0x38]
  403ed8:	mov    rcx,rbx
  403edb:	mov    ebp,0x10
  403ee0:	call   0x406b70
  403ee5:	mov    edx,DWORD PTR [rsp+0x3c]
  403ee9:	jmp    0x403d9f
  403eee:	xchg   ax,ax
  403ef0:	mov    edx,DWORD PTR [rdi+0x10]
  403ef3:	test   edx,edx
  403ef5:	jne    0x403dbd
  403efb:	lea    edi,[r8-0x1]
  403eff:	test   r14d,r14d
  403f02:	sete   al
  403f05:	test   edi,edi
  403f07:	jle    0x403fac
  403f0d:	test   al,al
  403f0f:	jne    0x403f90
  403f11:	mov    ecx,edi
  403f13:	sar    edi,0x5
  403f16:	mov    eax,0x1
  403f1b:	movsxd rdi,edi
  403f1e:	shl    eax,cl
  403f20:	mov    edx,r8d
  403f23:	and    eax,DWORD PTR [rbx+rdi*4+0x18]
  403f27:	mov    rcx,rbx
  403f2a:	mov    edi,eax
  403f2c:	call   0x406b70
  403f31:	mov    rax,QWORD PTR [rsp+0xc0]
  403f39:	test   edi,edi
  403f3b:	mov    DWORD PTR [rax],0x2
  403f41:	jne    0x404000
  403f47:	test   r14d,r14d
  403f4a:	mov    edx,DWORD PTR [rsp+0x3c]
  403f4e:	je     0x403dd6
  403f54:	mov    ebp,0x50
  403f59:	jmp    0x403dd6
  403f5e:	xchg   ax,ax
  403f60:	mov    eax,0x20
  403f65:	sub    eax,edx
  403f67:	mov    edx,eax
  403f69:	jmp    0x403d30
  403f6e:	xchg   ax,ax
  403f70:	mov    edx,eax
  403f72:	sar    edx,0x5
  403f75:	movsxd rdx,edx
  403f78:	mov    edx,DWORD PTR [rbx+rdx*4+0x18]
  403f7c:	bt     edx,eax
  403f7f:	jb     0x403d00
  403f85:	jmp    0x403ebe
  403f8a:	nop    WORD PTR [rax+rax*1+0x0]
  403f90:	mov    edx,edi
  403f92:	mov    rcx,rbx
  403f95:	mov    DWORD PTR [rsp+0x2c],r8d
  403f9a:	call   0x407ec0
  403f9f:	mov    r8d,DWORD PTR [rsp+0x2c]
  403fa4:	test   eax,eax
  403fa6:	mov    r14d,eax
  403fa9:	sete   al
  403fac:	test   al,al
  403fae:	je     0x403f11
  403fb4:	mov    eax,DWORD PTR [rsp+0xb0]
  403fbb:	xor    r15d,r15d
  403fbe:	test   eax,eax
  403fc0:	je     0x403df7
  403fc6:	jmp    0x403f11
  403fcb:	nop    DWORD PTR [rax+rax*1+0x0]
  403fd0:	mov    edx,r10d
  403fd3:	mov    rcx,rbx
  403fd6:	neg    edx
  403fd8:	call   0x407730
  403fdd:	mov    edx,DWORD PTR [rsp+0x3c]
  403fe1:	mov    rbx,rax
  403fe4:	jmp    0x403e8d
  403fe9:	nop    DWORD PTR [rax+0x0]
  403ff0:	mov    edx,DWORD PTR [rsp+0x3c]
  403ff4:	mov    ebp,0x20
  403ff9:	jmp    0x403d9f
  403ffe:	xchg   ax,ax
  404000:	mov    rcx,rbx
  404003:	mov    ebp,0x60
  404008:	call   0x403bb0
  40400d:	mov    edx,DWORD PTR [rsp+0x3c]
  404011:	mov    rbx,rax
  404014:	jmp    0x403dd6
  404019:	nop    DWORD PTR [rax+0x0]
  404020:	movsxd rdx,DWORD PTR [rcx+0x14]
  404024:	lea    rax,[rcx+0x18]
  404028:	lea    rcx,[rax+rdx*4]
  40402c:	jmp    0x404040
  40402e:	xchg   ax,ax
  404030:	add    rax,0x4
  404034:	mov    DWORD PTR [rax-0x4],0xffffffff
  40403b:	cmp    rcx,rax
  40403e:	jbe    0x404050
  404040:	mov    edx,DWORD PTR [rax]
  404042:	test   edx,edx
  404044:	je     0x404030
  404046:	sub    edx,0x1
  404049:	mov    DWORD PTR [rax],edx
  40404b:	ret    
  40404c:	nop    DWORD PTR [rax+0x0]
  404050:	repz ret 
  404052:	nop    DWORD PTR [rax+0x0]
  404056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404060:	push   rbx
  404061:	sub    rsp,0x30
  404065:	lea    ebx,[rdx+0x1f]
  404068:	mov    rax,rcx
  40406b:	sar    ebx,0x5
  40406e:	cmp    ebx,DWORD PTR [rcx+0x8]
  404071:	jg     0x4040f0
  404073:	mov    r9d,edx
  404076:	sar    r9d,0x5
  40407a:	and    edx,0x1f
  40407d:	je     0x4040d0
  40407f:	add    r9d,0x1
  404083:	lea    r8,[rax+0x18]
  404087:	mov    DWORD PTR [rax+0x14],r9d
  40408b:	movsxd r9,r9d
  40408e:	lea    r9,[r8+r9*4]
  404092:	cmp    r8,r9
  404095:	jae    0x4040b5
  404097:	nop    WORD PTR [rax+rax*1+0x0]
  4040a0:	add    r8,0x4
  4040a4:	mov    DWORD PTR [r8-0x4],0xffffffff
  4040ac:	cmp    r8,r9
  4040af:	jb     0x4040a0
  4040b1:	test   edx,edx
  4040b3:	je     0x4040c0
  4040b5:	mov    ecx,0x20
  4040ba:	sub    ecx,edx
  4040bc:	shr    DWORD PTR [r8-0x4],cl
  4040c0:	add    rsp,0x30
  4040c4:	pop    rbx
  4040c5:	ret    
  4040c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4040d0:	lea    r8,[rax+0x18]
  4040d4:	mov    DWORD PTR [rax+0x14],r9d
  4040d8:	movsxd r9,r9d
  4040db:	lea    r9,[r8+r9*4]
  4040df:	cmp    r8,r9
  4040e2:	jb     0x4040a0
  4040e4:	jmp    0x4040c0
  4040e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4040f0:	mov    DWORD PTR [rsp+0x2c],edx
  4040f4:	call   0x407330
  4040f9:	mov    ecx,ebx
  4040fb:	call   0x407220
  404100:	mov    edx,DWORD PTR [rsp+0x2c]
  404104:	jmp    0x404073
  404109:	nop    DWORD PTR [rax+0x0]
  404110:	push   r15
  404112:	push   r14
  404114:	push   r13
  404116:	push   r12
  404118:	push   rbp
  404119:	push   rdi
  40411a:	push   rsi
  40411b:	push   rbx
  40411c:	sub    rsp,0x138
  404123:	movaps XMMWORD PTR [rsp+0xd0],xmm6
  40412b:	movaps XMMWORD PTR [rsp+0xe0],xmm7
  404133:	movaps XMMWORD PTR [rsp+0xf0],xmm8
  40413c:	movaps XMMWORD PTR [rsp+0x100],xmm9
  404145:	movaps XMMWORD PTR [rsp+0x110],xmm10
  40414e:	movaps XMMWORD PTR [rsp+0x120],xmm11
  404157:	mov    rdi,rcx
  40415a:	mov    QWORD PTR [rsp+0x190],r8
  404162:	mov    QWORD PTR [rsp+0x188],rdx
  40416a:	mov    QWORD PTR [rsp+0x198],r9
  404172:	call   0x407fd0
  404177:	mov    rbp,QWORD PTR [rax]
  40417a:	mov    rcx,rbp
  40417d:	call   0x407f78
  404182:	mov    r14,rax
  404185:	mov    rax,QWORD PTR [rsp+0x190]
  40418d:	mov    DWORD PTR [rsp+0xa4],0x0
  404198:	mov    QWORD PTR [rsp+0xb0],0x0
  4041a4:	mov    QWORD PTR [rsp+0xc8],0x0
  4041b0:	lea    rcx,[rip+0x77d5]        # 0x40b98c
  4041b7:	mov    QWORD PTR [rsp+0xc0],rdi
  4041bf:	mov    eax,DWORD PTR [rax]
  4041c1:	mov    DWORD PTR [rsp+0x40],eax
  4041c5:	mov    rax,rdi
  4041c8:	movzx  r8d,BYTE PTR [rax]
  4041cc:	cmp    r8b,0x2d
  4041d0:	ja     0x404380
  4041d6:	movzx  edx,r8b
  4041da:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  4041de:	add    rdx,rcx
  4041e1:	jmp    rdx
  4041e3:	mov    DWORD PTR [rsp+0xa4],0x6
  4041ee:	mov    QWORD PTR [rsp+0xc0],rdi
  4041f6:	xor    r8d,r8d
  4041f9:	mov    DWORD PTR [rsp+0x58],0x0
  404201:	cmp    QWORD PTR [rsp+0x188],0x0
  40420a:	je     0x40421f
  40420c:	mov    rax,QWORD PTR [rsp+0xc0]
  404214:	mov    rsi,QWORD PTR [rsp+0x188]
  40421c:	mov    QWORD PTR [rsi],rax
  40421f:	mov    eax,DWORD PTR [rsp+0x58]
  404223:	test   eax,eax
  404225:	jne    0x4042a0
  404227:	test   r8,r8
  40422a:	je     0x40424a
  40422c:	mov    rcx,QWORD PTR [rsp+0x1a0]
  404234:	mov    edx,DWORD PTR [rsp+0x40]
  404238:	call   0x407e50
  40423d:	mov    rcx,QWORD PTR [rsp+0xc8]
  404245:	call   0x407330
  40424a:	mov    eax,DWORD PTR [rsp+0xa4]
  404251:	movaps xmm6,XMMWORD PTR [rsp+0xd0]
  404259:	movaps xmm7,XMMWORD PTR [rsp+0xe0]
  404261:	movaps xmm8,XMMWORD PTR [rsp+0xf0]
  40426a:	movaps xmm9,XMMWORD PTR [rsp+0x100]
  404273:	movaps xmm10,XMMWORD PTR [rsp+0x110]
  40427c:	movaps xmm11,XMMWORD PTR [rsp+0x120]
  404285:	add    rsp,0x138
  40428c:	pop    rbx
  40428d:	pop    rsi
  40428e:	pop    rdi
  40428f:	pop    rbp
  404290:	pop    r12
  404292:	pop    r13
  404294:	pop    r14
  404296:	pop    r15
  404298:	ret    
  404299:	nop    DWORD PTR [rax+0x0]
  4042a0:	or     DWORD PTR [rsp+0xa4],0x8
  4042a8:	jmp    0x404227
  4042ad:	nop    DWORD PTR [rax]
  4042b0:	mov    rdx,rax
  4042b3:	mov    DWORD PTR [rsp+0x58],0x0
  4042bb:	add    rax,0x1
  4042bf:	mov    QWORD PTR [rsp+0xc0],rax
  4042c7:	movzx  r8d,BYTE PTR [rdx+0x1]
  4042cc:	test   r8b,r8b
  4042cf:	je     0x4041e3
  4042d5:	xor    r12d,r12d
  4042d8:	cmp    r8b,0x30
  4042dc:	mov    r15,rax
  4042df:	je     0x404398
  4042e5:	mov    rax,QWORD PTR [rsp+0x190]
  4042ed:	mov    eax,DWORD PTR [rax+0x10]
  4042f0:	mov    DWORD PTR [rsp+0x84],eax
  4042f7:	movsx  eax,r8b
  4042fb:	lea    edx,[rax-0x30]
  4042fe:	cmp    edx,0x9
  404301:	ja     0x4043f3
  404307:	lea    rcx,[r15+0x1]
  40430b:	xor    edx,edx
  40430d:	xor    esi,esi
  40430f:	xor    ebx,ebx
  404311:	jmp    0x404345
  404313:	lea    eax,[rsi+rsi*4]
  404316:	movsx  r8d,r8b
  40431a:	lea    esi,[r8+rax*2-0x30]
  40431f:	mov    QWORD PTR [rsp+0xc0],rcx
  404327:	movsx  eax,BYTE PTR [rcx]
  40432a:	add    ebx,0x1
  40432d:	mov    r9,rcx
  404330:	lea    rcx,[rcx+0x1]
  404334:	lea    r10d,[rax-0x30]
  404338:	mov    r8d,eax
  40433b:	cmp    r10d,0x9
  40433f:	ja     0x404400
  404345:	cmp    ebx,0x8
  404348:	jle    0x404313
  40434a:	cmp    ebx,0xf
  40434d:	jg     0x40431f
  40434f:	lea    eax,[rdx+rdx*4]
  404352:	movsx  r8d,r8b
  404356:	lea    edx,[r8+rax*2-0x30]
  40435b:	jmp    0x40431f
  40435d:	nop    DWORD PTR [rax]
  404360:	add    rax,0x1
  404364:	mov    QWORD PTR [rsp+0xc0],rax
  40436c:	movzx  r8d,BYTE PTR [rax]
  404370:	cmp    r8b,0x2d
  404374:	jbe    0x4041d6
  40437a:	nop    WORD PTR [rax+rax*1+0x0]
  404380:	xor    r12d,r12d
  404383:	cmp    r8b,0x30
  404387:	mov    DWORD PTR [rsp+0x58],0x0
  40438f:	mov    r15,rax
  404392:	jne    0x4042e5
  404398:	movzx  edx,BYTE PTR [rax+0x1]
  40439c:	cmp    dl,0x58
  40439f:	je     0x40555f
  4043a5:	add    rax,0x1
  4043a9:	cmp    dl,0x78
  4043ac:	je     0x40555f
  4043b2:	mov    r15,rax
  4043b5:	mov    QWORD PTR [rsp+0xc0],rax
  4043bd:	add    rax,0x1
  4043c1:	movzx  edx,BYTE PTR [rax-0x1]
  4043c5:	cmp    dl,0x30
  4043c8:	je     0x4043b2
  4043ca:	xor    r8d,r8d
  4043cd:	test   dl,dl
  4043cf:	je     0x404201
  4043d5:	mov    r8d,edx
  4043d8:	mov    r12d,0x1
  4043de:	jmp    0x4042e5
  4043e3:	mov    rdx,rax
  4043e6:	mov    DWORD PTR [rsp+0x58],0x1
  4043ee:	jmp    0x4042bb
  4043f3:	mov    r9,r15
  4043f6:	xor    edx,edx
  4043f8:	xor    esi,esi
  4043fa:	xor    ebx,ebx
  4043fc:	nop    DWORD PTR [rax+0x0]
  404400:	movsx  ecx,BYTE PTR [rbp+0x0]
  404404:	cmp    ecx,eax
  404406:	je     0x404804
  40440c:	mov    ebp,ebx
  40440e:	xor    ecx,ecx
  404410:	xor    r13d,r13d
  404413:	xor    r11d,r11d
  404416:	mov    r8d,eax
  404419:	and    r8d,0xffffffdf
  40441d:	cmp    r8d,0x45
  404421:	je     0x404520
  404427:	xor    r8d,r8d
  40442a:	test   ebp,ebp
  40442c:	jne    0x404695
  404432:	or     ecx,r12d
  404435:	jne    0x404688
  40443b:	test   r11d,r11d
  40443e:	jne    0x404653
  404444:	cmp    eax,0x4e
  404447:	je     0x404461
  404449:	jle    0x40464a
  40444f:	cmp    eax,0x69
  404452:	je     0x4057ea
  404458:	cmp    eax,0x6e
  40445b:	jne    0x404653
  404461:	lea    rbx,[rsp+0xc0]
  404469:	lea    rdx,[rip+0x7519]        # 0x40b989
  404470:	mov    rcx,rbx
  404473:	call   0x407e00
  404478:	test   eax,eax
  40447a:	je     0x404653
  404480:	mov    rax,QWORD PTR [rsp+0x190]
  404488:	mov    rsi,QWORD PTR [rsp+0x198]
  404490:	xor    ebp,ebp
  404492:	mov    rdx,QWORD PTR [rsp+0xc0]
  40449a:	mov    DWORD PTR [rsp+0xa4],0x4
  4044a5:	mov    eax,DWORD PTR [rax+0x8]
  4044a8:	mov    DWORD PTR [rsp+0x44],eax
  4044ac:	add    eax,0x1
  4044af:	mov    DWORD PTR [rsi],eax
  4044b1:	cmp    BYTE PTR [rdx],0x28
  4044b4:	je     0x405bc6
  4044ba:	nop    WORD PTR [rax+rax*1+0x0]
  4044c0:	mov    rsi,QWORD PTR [rsp+0x198]
  4044c8:	mov    DWORD PTR [rsi],eax
  4044ca:	mov    r8,QWORD PTR [rsp+0xc8]
  4044d2:	test   ebp,ebp
  4044d4:	je     0x404201
  4044da:	mov    r9d,DWORD PTR [rsp+0x84]
  4044e2:	test   r9d,r9d
  4044e5:	jne    0x404c14
  4044eb:	mov    eax,DWORD PTR [rsp+0xa4]
  4044f2:	mov    ecx,DWORD PTR [r8+0x14]
  4044f6:	xor    edx,edx
  4044f8:	and    eax,0xfffffff8
  4044fb:	test   ecx,ecx
  4044fd:	setg   dl
  404500:	add    edx,edx
  404502:	or     eax,edx
  404504:	test   al,0x30
  404506:	jne    0x404673
  40450c:	mov    DWORD PTR [rsp+0xa4],eax
  404513:	jmp    0x404201
  404518:	nop    DWORD PTR [rax+rax*1+0x0]
  404520:	mov    eax,ebp
  404522:	or     eax,ecx
  404524:	or     eax,r12d
  404527:	je     0x404653
  40452d:	mov    rdi,QWORD PTR [rsp+0xc0]
  404535:	lea    rax,[rdi+0x1]
  404539:	mov    QWORD PTR [rsp+0xc0],rax
  404541:	movsx  eax,BYTE PTR [rdi+0x1]
  404545:	cmp    al,0x2b
  404547:	je     0x405708
  40454d:	cmp    al,0x2d
  40454f:	je     0x404b11
  404555:	mov    DWORD PTR [rsp+0x44],0x0
  40455d:	lea    r8d,[rax-0x30]
  404561:	cmp    r8d,0x9
  404565:	ja     0x404c40
  40456b:	cmp    eax,0x30
  40456e:	jne    0x404595
  404570:	mov    rax,QWORD PTR [rsp+0xc0]
  404578:	lea    r8,[rax+0x1]
  40457c:	nop    DWORD PTR [rax+0x0]
  404580:	mov    QWORD PTR [rsp+0xc0],r8
  404588:	movsx  eax,BYTE PTR [r8]
  40458c:	add    r8,0x1
  404590:	cmp    eax,0x30
  404593:	je     0x404580
  404595:	lea    r9d,[rax-0x31]
  404599:	xor    r8d,r8d
  40459c:	cmp    r9d,0x8
  4045a0:	ja     0x40442a
  4045a6:	lea    r9d,[rax-0x30]
  4045aa:	mov    rax,QWORD PTR [rsp+0xc0]
  4045b2:	lea    r10,[rax+0x1]
  4045b6:	mov    QWORD PTR [rsp+0x50],rax
  4045bb:	mov    QWORD PTR [rsp+0xc0],r10
  4045c3:	mov    QWORD PTR [rsp+0x48],r10
  4045c8:	mov    r10,rax
  4045cb:	movsx  eax,BYTE PTR [rax+0x1]
  4045cf:	lea    r8d,[rax-0x30]
  4045d3:	cmp    r8d,0x9
  4045d7:	ja     0x404613
  4045d9:	lea    r8,[r10+0x2]
  4045dd:	mov    DWORD PTR [rsp+0x5c],r11d
  4045e2:	lea    r9d,[r9+r9*4]
  4045e6:	mov    QWORD PTR [rsp+0xc0],r8
  4045ee:	mov    r11,r8
  4045f1:	add    r8,0x1
  4045f5:	lea    r9d,[rax+r9*2-0x30]
  4045fa:	movsx  eax,BYTE PTR [r8-0x1]
  4045ff:	lea    r10d,[rax-0x30]
  404603:	cmp    r10d,0x9
  404607:	jbe    0x4045e2
  404609:	mov    QWORD PTR [rsp+0x48],r11
  40460e:	mov    r11d,DWORD PTR [rsp+0x5c]
  404613:	mov    r8,QWORD PTR [rsp+0x48]
  404618:	sub    r8,QWORD PTR [rsp+0x50]
  40461d:	cmp    r8,0x8
  404621:	jg     0x4057df
  404627:	cmp    r9d,0x4e1f
  40462e:	jg     0x4057df
  404634:	mov    r10d,DWORD PTR [rsp+0x44]
  404639:	mov    r8d,r10d
  40463c:	neg    r8d
  40463f:	xor    r8d,r9d
  404642:	add    r8d,r10d
  404645:	jmp    0x40442a
  40464a:	cmp    eax,0x49
  40464d:	je     0x4057ea
  404653:	mov    DWORD PTR [rsp+0xa4],0x6
  40465e:	mov    QWORD PTR [rsp+0xc0],rdi
  404666:	mov    r8,QWORD PTR [rsp+0xc8]
  40466e:	jmp    0x404201
  404673:	or     eax,0x40
  404676:	mov    DWORD PTR [rsp+0xa4],eax
  40467d:	call   0x408068
  404682:	mov    DWORD PTR [rax],0x22
  404688:	mov    r8,QWORD PTR [rsp+0xc8]
  404690:	jmp    0x404201
  404695:	mov    rax,QWORD PTR [rsp+0x190]
  40469d:	mov    ecx,DWORD PTR [rsp+0x58]
  4046a1:	sub    r8d,r13d
  4046a4:	mov    DWORD PTR [rsp+0xa4],0x1
  4046af:	mov    DWORD PTR [rsp+0x68],r8d
  4046b4:	mov    eax,DWORD PTR [rax+0xc]
  4046b7:	mov    DWORD PTR [rsp+0x44],eax
  4046bb:	and    eax,0x3
  4046be:	mov    edi,eax
  4046c0:	sub    edi,ecx
  4046c2:	cmp    eax,0x2
  4046c5:	mov    DWORD PTR [rsp+0x6c],edi
  4046c9:	je     0x4046e3
  4046cb:	lea    edi,[rcx+0x1]
  4046ce:	cmp    eax,0x3
  4046d1:	mov    DWORD PTR [rsp+0x6c],edi
  4046d5:	je     0x4046e3
  4046d7:	test   eax,eax
  4046d9:	sete   al
  4046dc:	movzx  eax,al
  4046df:	mov    DWORD PTR [rsp+0x6c],eax
  4046e3:	pxor   xmm0,xmm0
  4046e7:	mov    eax,esi
  4046e9:	test   ebx,ebx
  4046eb:	cmove  ebx,ebp
  4046ee:	mov    edi,0x10
  4046f3:	cmp    ebp,0x10
  4046f6:	cmovle edi,ebp
  4046f9:	cvtsi2sd xmm0,rax
  4046fe:	cmp    edi,0x9
  404701:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40470a:	jle    0x404733
  40470c:	pxor   xmm1,xmm1
  404710:	lea    eax,[rdi-0x9]
  404713:	mov    rcx,QWORD PTR [rip+0x7766]        # 0x40be80
  40471a:	cdqe   
  40471c:	cvtsi2sd xmm1,rdx
  404721:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  404726:	addsd  xmm0,xmm1
  40472a:	movsd  QWORD PTR [rsp+0xb0],xmm0
  404733:	cmp    ebp,0xf
  404736:	jg     0x4048a5
  40473c:	cmp    DWORD PTR [rsp+0x40],0x35
  404741:	jg     0x4048a5
  404747:	cmp    DWORD PTR [rsp+0x68],0x0
  40474c:	je     0x405730
  404752:	jle    0x404bb9
  404758:	cmp    DWORD PTR [rsp+0x68],0x16
  40475d:	jg     0x40575a
  404763:	movsxd rcx,DWORD PTR [rsp+0x68]
  404768:	mov    edx,DWORD PTR [rsp+0xb0]
  40476f:	lea    rax,[rip+0x730a]        # 0x40ba80
  404776:	test   edx,edx
  404778:	mov    r8d,DWORD PTR [rax+rcx*4]
  40477c:	je     0x40584e
  404782:	tzcnt  edx,edx
  404786:	mov    eax,0x35
  40478b:	sub    eax,edx
  40478d:	mov    rdx,QWORD PTR [rip+0x76ec]        # 0x40be80
  404794:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40479d:	add    eax,r8d
  4047a0:	cmp    eax,0x35
  4047a3:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  4047a8:	lea    rdx,[rsp+0xa4]
  4047b0:	setle  al
  4047b3:	movzx  eax,al
  4047b6:	lea    rcx,[rsp+0xb0]
  4047be:	mov    QWORD PTR [rsp+0x30],rdx
  4047c3:	mov    edx,DWORD PTR [rsp+0x6c]
  4047c7:	mov    DWORD PTR [rsp+0x20],eax
  4047cb:	mov    DWORD PTR [rsp+0x28],edx
  4047cf:	movsd  QWORD PTR [rsp+0xb0],xmm0
  4047d8:	mov    r9,QWORD PTR [rsp+0x1a0]
  4047e0:	mov    r8,QWORD PTR [rsp+0x198]
  4047e8:	mov    rdx,QWORD PTR [rsp+0x190]
  4047f0:	call   0x403c60
  4047f5:	test   eax,eax
  4047f7:	jne    0x404688
  4047fd:	xor    eax,eax
  4047ff:	jmp    0x4048a9
  404804:	movzx  r8d,BYTE PTR [rbp+0x1]
  404809:	test   r8b,r8b
  40480c:	je     0x405a8d
  404812:	cmp    r8b,BYTE PTR [r9+0x1]
  404816:	jne    0x40440c
  40481c:	mov    eax,0x2
  404821:	jmp    0x404832
  404823:	add    rax,0x1
  404827:	cmp    r8b,BYTE PTR [r9+rax*1-0x1]
  40482c:	jne    0x404a30
  404832:	movzx  r8d,BYTE PTR [rbp+rax*1+0x0]
  404838:	test   r8b,r8b
  40483b:	jne    0x404823
  40483d:	lea    r8,[r9+rax*1]
  404841:	test   ebx,ebx
  404843:	mov    QWORD PTR [rsp+0xc0],r8
  40484b:	movsx  eax,BYTE PTR [r8]
  40484f:	je     0x404b2e
  404855:	lea    r8d,[rax-0x30]
  404859:	xor    ecx,ecx
  40485b:	xor    r13d,r13d
  40485e:	mov    ebp,ebx
  404860:	cmp    r8d,0x9
  404864:	ja     0x40489a
  404866:	test   r8d,r8d
  404869:	lea    eax,[rcx+0x1]
  40486c:	mov    r9d,r8d
  40486f:	jne    0x405a0d
  404875:	mov    r8,QWORD PTR [rsp+0xc0]
  40487d:	mov    ecx,eax
  40487f:	lea    rax,[r8+0x1]
  404883:	mov    QWORD PTR [rsp+0xc0],rax
  40488b:	movsx  eax,BYTE PTR [r8+0x1]
  404890:	lea    r8d,[rax-0x30]
  404894:	cmp    r8d,0x9
  404898:	jbe    0x404866
  40489a:	mov    r11d,0x1
  4048a0:	jmp    0x404416
  4048a5:	mov    eax,DWORD PTR [rsp+0x68]
  4048a9:	mov    edx,ebp
  4048ab:	sub    edx,edi
  4048ad:	add    edx,eax
  4048af:	cmp    edx,0x0
  4048b2:	jle    0x4055ea
  4048b8:	mov    eax,edx
  4048ba:	and    eax,0xf
  4048bd:	je     0x4048df
  4048bf:	mov    rcx,QWORD PTR [rip+0x75ba]        # 0x40be80
  4048c6:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  4048cf:	cdqe   
  4048d1:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  4048d6:	movsd  QWORD PTR [rsp+0xb0],xmm0
  4048df:	and    edx,0xfffffff0
  4048e2:	jne    0x404a41
  4048e8:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  4048f1:	xor    edi,edi
  4048f3:	lea    rdx,[rsp+0xac]
  4048fb:	lea    r8,[rsp+0xa8]
  404903:	call   0x407b00
  404908:	mov    edx,DWORD PTR [rsp+0xa8]
  40490f:	mov    r13d,DWORD PTR [rsp+0x40]
  404914:	add    edi,DWORD PTR [rsp+0xac]
  40491b:	mov    QWORD PTR [rsp+0xc8],rax
  404923:	mov    r12d,edx
  404926:	sub    r12d,r13d
  404929:	test   r12d,r12d
  40492c:	mov    DWORD PTR [rsp+0xac],edi
  404933:	jle    0x40495c
  404935:	mov    edx,r12d
  404938:	mov    rcx,rax
  40493b:	call   0x406b70
  404940:	mov    edi,DWORD PTR [rsp+0xac]
  404947:	mov    DWORD PTR [rsp+0xa8],r13d
  40494f:	mov    edx,r13d
  404952:	add    edi,r12d
  404955:	mov    DWORD PTR [rsp+0xac],edi
  40495c:	lea    eax,[rdi+rdx*1]
  40495f:	sub    eax,DWORD PTR [rsp+0x40]
  404963:	mov    ecx,eax
  404965:	mov    DWORD PTR [rsp+0x8c],eax
  40496c:	mov    rax,QWORD PTR [rsp+0x190]
  404974:	mov    eax,DWORD PTR [rax+0x8]
  404977:	mov    DWORD PTR [rsp+0x44],eax
  40497b:	add    eax,0x1
  40497e:	cmp    ecx,eax
  404980:	jg     0x405525
  404986:	mov    rax,QWORD PTR [rsp+0x190]
  40498e:	mov    eax,DWORD PTR [rax+0x4]
  404991:	cmp    ecx,eax
  404993:	mov    DWORD PTR [rsp+0x50],eax
  404997:	jge    0x405723
  40499d:	sub    edi,eax
  40499f:	cmp    edi,0x0
  4049a2:	jle    0x404b8c
  4049a8:	mov    rcx,QWORD PTR [rsp+0xc8]
  4049b0:	mov    edx,edi
  4049b2:	call   0x407730
  4049b7:	add    DWORD PTR [rsp+0xa8],edi
  4049be:	mov    QWORD PTR [rsp+0xc8],rax
  4049c6:	mov    eax,DWORD PTR [rsp+0x50]
  4049ca:	mov    DWORD PTR [rsp+0xac],eax
  4049d1:	mov    eax,DWORD PTR [rsp+0x84]
  4049d8:	test   eax,eax
  4049da:	je     0x404c50
  4049e0:	mov    eax,DWORD PTR [rsp+0x8c]
  4049e7:	add    eax,0x1
  4049ea:	cmp    DWORD PTR [rsp+0x50],eax
  4049ee:	jle    0x404c50
  4049f4:	mov    r8,QWORD PTR [rsp+0xc8]
  4049fc:	mov    rax,QWORD PTR [rsp+0x198]
  404a04:	mov    esi,DWORD PTR [rsp+0x50]
  404a08:	mov    DWORD PTR [rsp+0xa4],0x50
  404a13:	mov    DWORD PTR [r8+0x14],0x0
  404a1b:	mov    DWORD PTR [r8+0x18],0x0
  404a23:	mov    DWORD PTR [rax],esi
  404a25:	jmp    0x4044da
  404a2a:	nop    WORD PTR [rax+rax*1+0x0]
  404a30:	mov    eax,ecx
  404a32:	mov    ebp,ebx
  404a34:	xor    ecx,ecx
  404a36:	xor    r13d,r13d
  404a39:	xor    r11d,r11d
  404a3c:	jmp    0x404416
  404a41:	sar    edx,0x4
  404a44:	cmp    edx,0xf
  404a47:	jle    0x405b13
  404a4d:	mov    rax,QWORD PTR [rip+0x734c]        # 0x40bda0
  404a54:	mov    ecx,edx
  404a56:	xor    r8d,r8d
  404a59:	movsd  xmm1,QWORD PTR [rax+0x20]
  404a5e:	xchg   ax,ax
  404a60:	mov    eax,DWORD PTR [rsp+0xb4]
  404a67:	sub    ecx,0x10
  404a6a:	mov    r9d,eax
  404a6d:	and    eax,0x800fffff
  404a72:	or     eax,0x3ff00000
  404a77:	and    r9d,0x7ff00000
  404a7e:	mov    DWORD PTR [rsp+0xb4],eax
  404a85:	shr    r9d,0x14
  404a89:	cmp    ecx,0xf
  404a8c:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  404a95:	lea    r8d,[r8+r9*1-0x3ff]
  404a9d:	mulsd  xmm0,xmm1
  404aa1:	movsd  QWORD PTR [rsp+0xb0],xmm0
  404aaa:	jg     0x404a60
  404aac:	and    edx,0xf
  404aaf:	mov    eax,DWORD PTR [rsp+0xb4]
  404ab6:	mov    ecx,eax
  404ab8:	and    eax,0x800fffff
  404abd:	or     eax,0x3ff00000
  404ac2:	and    ecx,0x7ff00000
  404ac8:	shr    ecx,0x14
  404acb:	mov    DWORD PTR [rsp+0xb4],eax
  404ad2:	test   edx,edx
  404ad4:	lea    edi,[r8+rcx*1-0x3ff]
  404adc:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  404ae5:	mov    rax,QWORD PTR [rip+0x72b4]        # 0x40bda0
  404aec:	je     0x4048f3
  404af2:	test   dl,0x1
  404af5:	je     0x404afb
  404af7:	mulsd  xmm0,QWORD PTR [rax]
  404afb:	add    rax,0x8
  404aff:	sar    edx,1
  404b01:	jne    0x404af2
  404b03:	movsd  QWORD PTR [rsp+0xb0],xmm0
  404b0c:	jmp    0x4048f3
  404b11:	mov    DWORD PTR [rsp+0x44],0x1
  404b19:	lea    rax,[rdi+0x2]
  404b1d:	mov    QWORD PTR [rsp+0xc0],rax
  404b25:	movsx  eax,BYTE PTR [rdi+0x2]
  404b29:	jmp    0x40455d
  404b2e:	cmp    eax,0x30
  404b31:	jne    0x405b75
  404b37:	add    r8,0x1
  404b3b:	xor    ecx,ecx
  404b3d:	nop    DWORD PTR [rax]
  404b40:	mov    QWORD PTR [rsp+0xc0],r8
  404b48:	movsx  eax,BYTE PTR [r8]
  404b4c:	add    ecx,0x1
  404b4f:	add    r8,0x1
  404b53:	cmp    eax,0x30
  404b56:	je     0x404b40
  404b58:	lea    r8d,[rax-0x31]
  404b5c:	cmp    r8d,0x8
  404b60:	ja     0x4057d5
  404b66:	mov    r15,QWORD PTR [rsp+0xc0]
  404b6e:	lea    r9d,[rax-0x30]
  404b72:	lea    r13d,[rcx+0x1]
  404b76:	mov    ebp,0x1
  404b7b:	mov    r8,r15
  404b7e:	lea    eax,[rsi+rsi*4]
  404b81:	xor    ecx,ecx
  404b83:	lea    esi,[r9+rax*2]
  404b87:	jmp    0x40487f
  404b8c:	je     0x4049c6
  404b92:	add    edx,edi
  404b94:	test   edx,edx
  404b96:	mov    DWORD PTR [rsp+0xa8],edx
  404b9d:	jle    0x405b36
  404ba3:	mov    rcx,QWORD PTR [rsp+0xc8]
  404bab:	neg    edi
  404bad:	mov    edx,edi
  404baf:	call   0x406b70
  404bb4:	jmp    0x4049c6
  404bb9:	mov    edx,DWORD PTR [rsp+0x68]
  404bbd:	cmp    edx,0xffffffea
  404bc0:	mov    eax,edx
  404bc2:	jl     0x4048a9
  404bc8:	mov    rdx,QWORD PTR [rip+0x72b1]        # 0x40be80
  404bcf:	neg    eax
  404bd1:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  404bda:	cdqe   
  404bdc:	divsd  xmm0,QWORD PTR [rdx+rax*8]
  404be1:	lea    rax,[rsp+0xa4]
  404be9:	movsd  QWORD PTR [rsp+0xb0],xmm0
  404bf2:	lea    rcx,[rsp+0xb0]
  404bfa:	mov    DWORD PTR [rsp+0x20],0x0
  404c02:	mov    QWORD PTR [rsp+0x30],rax
  404c07:	mov    eax,DWORD PTR [rsp+0x6c]
  404c0b:	mov    DWORD PTR [rsp+0x28],eax
  404c0f:	jmp    0x4047d8
  404c14:	mov    DWORD PTR [r8+0x14],0x0
  404c1c:	mov    DWORD PTR [rsp+0xa4],0x50
  404c27:	call   0x408068
  404c2c:	mov    r8,QWORD PTR [rsp+0xc8]
  404c34:	mov    DWORD PTR [rax],0x22
  404c3a:	jmp    0x404201
  404c3f:	nop
  404c40:	mov    QWORD PTR [rsp+0xc0],rdi
  404c48:	xor    r8d,r8d
  404c4b:	jmp    0x40442a
  404c50:	mov    eax,DWORD PTR [rsp+0x50]
  404c54:	mov    DWORD PTR [rsp+0x44],0x1
  404c5c:	mov    DWORD PTR [rsp+0x8c],eax
  404c63:	mov    r8d,ebp
  404c66:	mov    edx,ebx
  404c68:	mov    DWORD PTR [rsp+0x20],r14d
  404c6d:	mov    r9d,esi
  404c70:	mov    rcx,r15
  404c73:	call   0x407c40
  404c78:	mov    QWORD PTR [rsp+0x70],rax
  404c7d:	add    rax,0x10
  404c81:	mov    QWORD PTR [rsp+0x78],rax
  404c86:	mov    eax,DWORD PTR [rsp+0x40]
  404c8a:	movsd  xmm8,QWORD PTR [rip+0x6e4d]        # 0x40bae0
  404c93:	movsd  xmm9,QWORD PTR [rip+0x6e54]        # 0x40baf0
  404c9c:	add    eax,0x1
  404c9f:	movapd xmm11,xmm8
  404ca4:	mov    DWORD PTR [rsp+0x80],eax
  404cab:	mov    eax,DWORD PTR [rsp+0x68]
  404caf:	movsd  xmm10,QWORD PTR [rip+0x6e58]        # 0x40bb10
  404cb8:	mov    edx,eax
  404cba:	neg    edx
  404cbc:	test   eax,eax
  404cbe:	mov    eax,0x0
  404cc3:	cmovs  eax,edx
  404cc6:	xor    ebp,ebp
  404cc8:	mov    DWORD PTR [rsp+0x5c],eax
  404ccc:	jmp    0x404f10
  404cd1:	mov    rcx,rsi
  404cd4:	call   0x407730
  404cd9:	mov    rsi,rax
  404cdc:	test   r15d,r15d
  404cdf:	je     0x404cef
  404ce1:	mov    rcx,rdi
  404ce4:	mov    edx,r15d
  404ce7:	call   0x4075c0
  404cec:	mov    rdi,rax
  404cef:	test   r12d,r12d
  404cf2:	jle    0x404d02
  404cf4:	mov    rcx,rdi
  404cf7:	mov    edx,r12d
  404cfa:	call   0x407730
  404cff:	mov    rdi,rax
  404d02:	test   r14d,r14d
  404d05:	jle    0x404d15
  404d07:	mov    rcx,r13
  404d0a:	mov    edx,r14d
  404d0d:	call   0x407730
  404d12:	mov    r13,rax
  404d15:	mov    rdx,rdi
  404d18:	mov    rcx,rsi
  404d1b:	call   0x4078a0
  404d20:	cmp    DWORD PTR [rax+0x14],0x1
  404d24:	mov    rbx,rax
  404d27:	jle    0x4050c0
  404d2d:	mov    ebp,DWORD PTR [rbx+0x10]
  404d30:	mov    rdx,r13
  404d33:	mov    DWORD PTR [rbx+0x10],0x0
  404d3a:	mov    rcx,rbx
  404d3d:	call   0x407850
  404d42:	test   eax,eax
  404d44:	jg     0x405050
  404d4a:	mov    ecx,DWORD PTR [rsp+0x6c]
  404d4e:	test   ecx,ecx
  404d50:	je     0x405050
  404d56:	mov    eax,ecx
  404d58:	and    eax,0x1
  404d5b:	xor    eax,ebp
  404d5d:	mov    DWORD PTR [rsp+0x60],eax
  404d61:	je     0x40586b
  404d67:	test   ebp,ebp
  404d69:	je     0x4052c1
  404d6f:	movsd  xmm6,QWORD PTR [rip+0x6d69]        # 0x40bae0
  404d77:	mov    DWORD PTR [rsp+0xa4],0x21
  404d82:	xor    r12d,r12d
  404d85:	mov    DWORD PTR [rsp+0x88],0x20
  404d90:	xor    r14d,r14d
  404d93:	movapd xmm7,xmm6
  404d97:	mov    eax,DWORD PTR [rsp+0xa8]
  404d9e:	mov    edx,DWORD PTR [rsp+0xac]
  404da5:	mov    r8d,DWORD PTR [rsp+0x44]
  404daa:	add    edx,eax
  404dac:	test   r8d,r8d
  404daf:	mov    DWORD PTR [rsp+0x48],edx
  404db3:	jne    0x404dbf
  404db5:	cmp    DWORD PTR [rsp+0x40],eax
  404db9:	jg     0x405475
  404dbf:	lea    rdx,[rsp+0x9c]
  404dc7:	lea    r8,[rsp+0xa0]
  404dcf:	movapd xmm0,xmm6
  404dd3:	call   0x407b00
  404dd8:	mov    edx,DWORD PTR [rsp+0x9c]
  404ddf:	mov    r15,rax
  404de2:	test   edx,edx
  404de4:	js     0x4054b0
  404dea:	je     0x404df7
  404dec:	mov    rcx,rax
  404def:	call   0x407730
  404df4:	mov    r15,rax
  404df7:	mov    rbp,QWORD PTR [rsp+0xc8]
  404dff:	test   r14d,r14d
  404e02:	mov    rdx,r15
  404e05:	mov    rcx,rbp
  404e08:	je     0x4051f0
  404e0e:	call   0x4078a0
  404e13:	mov    ecx,DWORD PTR [rsp+0x44]
  404e17:	mov    QWORD PTR [rsp+0xc8],rax
  404e1f:	mov    edx,DWORD PTR [rbp+0x14]
  404e22:	test   ecx,ecx
  404e24:	jne    0x405390
  404e2a:	sub    edx,0x1
  404e2d:	cmp    edx,DWORD PTR [rax+0x14]
  404e30:	jge    0x404e4d
  404e32:	movsxd rdx,edx
  404e35:	add    rdx,0x4
  404e39:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  404e3e:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  404e43:	xor    ecx,0x1f
  404e46:	xor    edx,0x1f
  404e49:	cmp    ecx,edx
  404e4b:	jle    0x404e70
  404e4d:	mov    ecx,DWORD PTR [rsp+0x50]
  404e51:	cmp    DWORD PTR [rsp+0x8c],ecx
  404e58:	jne    0x405270
  404e5e:	sub    DWORD PTR [rsp+0xa8],0x1
  404e66:	mov    DWORD PTR [rsp+0x44],0x1
  404e6e:	xchg   ax,ax
  404e70:	mov    rcx,r15
  404e73:	call   0x407330
  404e78:	mov    rcx,rbp
  404e7b:	call   0x407330
  404e80:	mov    r14d,DWORD PTR [rsp+0x60]
  404e85:	test   r14d,r14d
  404e88:	jne    0x4050d0
  404e8e:	test   r12d,r12d
  404e91:	je     0x404ed8
  404e93:	mov    eax,DWORD PTR [rsp+0xa8]
  404e9a:	add    eax,DWORD PTR [rsp+0xac]
  404ea1:	cmp    DWORD PTR [rsp+0x48],eax
  404ea5:	jne    0x404ed8
  404ea7:	mulsd  xmm6,QWORD PTR [rip+0x6c59]        # 0x40bb08
  404eaf:	movapd xmm0,xmm7
  404eb3:	subsd  xmm0,QWORD PTR [rip+0x6c3d]        # 0x40baf8
  404ebb:	movapd xmm1,xmm6
  404ebf:	xorpd  xmm1,xmm10
  404ec4:	ucomisd xmm1,xmm0
  404ec8:	jbe    0x405442
  404ece:	ucomisd xmm7,xmm6
  404ed2:	ja     0x405462
  404ed8:	mov    r12d,DWORD PTR [rsp+0x44]
  404edd:	test   r12d,r12d
  404ee0:	je     0x4052a5
  404ee6:	mov    DWORD PTR [rsp+0x44],0x1
  404eee:	xor    ebp,ebp
  404ef0:	mov    rcx,rsi
  404ef3:	call   0x407330
  404ef8:	mov    rcx,rdi
  404efb:	call   0x407330
  404f00:	mov    rcx,r13
  404f03:	call   0x407330
  404f08:	mov    rcx,rbx
  404f0b:	call   0x407330
  404f10:	mov    rsi,QWORD PTR [rsp+0x70]
  404f15:	mov    r15d,0x0
  404f1b:	mov    ecx,DWORD PTR [rsi+0x8]
  404f1e:	call   0x407220
  404f23:	lea    rcx,[rax+0x10]
  404f27:	mov    rdi,rax
  404f2a:	movsxd rax,DWORD PTR [rsi+0x14]
  404f2e:	mov    rdx,QWORD PTR [rsp+0x78]
  404f33:	lea    r8,[rax*4+0x8]
  404f3b:	call   0x407fc0
  404f40:	mov    rax,QWORD PTR [rsp+0xc8]
  404f48:	mov    ecx,DWORD PTR [rax+0x8]
  404f4b:	call   0x407220
  404f50:	mov    rdx,QWORD PTR [rsp+0xc8]
  404f58:	lea    rcx,[rax+0x10]
  404f5c:	mov    rsi,rax
  404f5f:	movsxd rax,DWORD PTR [rdx+0x14]
  404f63:	add    rdx,0x10
  404f67:	lea    r8,[rax*4+0x8]
  404f6f:	call   0x407fc0
  404f74:	mov    eax,DWORD PTR [rsp+0xa8]
  404f7b:	mov    ecx,0x1
  404f80:	mov    ebx,DWORD PTR [rsp+0xac]
  404f87:	sub    eax,ebp
  404f89:	add    ebx,ebp
  404f8b:	mov    DWORD PTR [rsp+0x48],eax
  404f8f:	call   0x407460
  404f94:	mov    r13,rax
  404f97:	mov    eax,DWORD PTR [rsp+0x68]
  404f9b:	test   eax,eax
  404f9d:	cmovg  r15d,eax
  404fa1:	test   ebx,ebx
  404fa3:	js     0x405260
  404fa9:	mov    eax,DWORD PTR [rsp+0x5c]
  404fad:	mov    edx,r15d
  404fb0:	lea    r14d,[rax+rbx*1]
  404fb4:	mov    ecx,DWORD PTR [rsp+0x48]
  404fb8:	mov    eax,DWORD PTR [rsp+0x80]
  404fbf:	add    ebx,ecx
  404fc1:	sub    ebx,DWORD PTR [rsp+0x40]
  404fc5:	sub    eax,ecx
  404fc7:	cmp    DWORD PTR [rsp+0x50],ebx
  404fcb:	jle    0x404fd3
  404fcd:	sub    ebx,DWORD PTR [rsp+0x50]
  404fd1:	add    eax,ebx
  404fd3:	lea    ebx,[r14+rax*1]
  404fd7:	lea    r12d,[rdx+rax*1]
  404fdb:	cmp    ebx,r12d
  404fde:	mov    eax,r12d
  404fe1:	cmovle eax,ebx
  404fe4:	cmp    eax,r14d
  404fe7:	cmovg  eax,r14d
  404feb:	test   eax,eax
  404fed:	jle    0x404ff7
  404fef:	sub    ebx,eax
  404ff1:	sub    r12d,eax
  404ff4:	sub    r14d,eax
  404ff7:	mov    eax,DWORD PTR [rsp+0x5c]
  404ffb:	test   eax,eax
  404ffd:	je     0x40502c
  404fff:	mov    rcx,r13
  405002:	mov    edx,eax
  405004:	call   0x4075c0
  405009:	mov    rdx,rsi
  40500c:	mov    rcx,rax
  40500f:	mov    r13,rax
  405012:	call   0x407490
  405017:	mov    rcx,rsi
  40501a:	mov    QWORD PTR [rsp+0x60],rax
  40501f:	call   0x407330
  405024:	mov    rax,QWORD PTR [rsp+0x60]
  405029:	mov    rsi,rax
  40502c:	sub    ebx,ebp
  40502e:	cmp    ebx,0x0
  405031:	mov    edx,ebx
  405033:	jg     0x404cd1
  405039:	je     0x404cdc
  40503f:	neg    edx
  405041:	mov    rcx,rsi
  405044:	call   0x406b70
  405049:	jmp    0x404cdc
  40504e:	xchg   ax,ax
  405050:	test   eax,eax
  405052:	js     0x405882
  405058:	je     0x40594e
  40505e:	mov    rdx,r13
  405061:	mov    rcx,rbx
  405064:	call   0x407d40
  405069:	ucomisd xmm9,xmm0
  40506e:	jb     0x4053a0
  405074:	test   ebp,ebp
  405076:	jne    0x4054d0
  40507c:	mov    DWORD PTR [rsp+0x60],0x0
  405084:	cmp    DWORD PTR [rsp+0x48],0x1
  405089:	jg     0x405099
  40508b:	mov    r9d,DWORD PTR [rsp+0x44]
  405090:	test   r9d,r9d
  405093:	jne    0x405a5a
  405099:	movapd xmm6,xmm8
  40509e:	xor    r12d,r12d
  4050a1:	mov    DWORD PTR [rsp+0x88],0x10
  4050ac:	movapd xmm7,xmm8
  4050b1:	mov    r14d,0x1
  4050b7:	jmp    0x404d97
  4050bc:	nop    DWORD PTR [rax+0x0]
  4050c0:	mov    r15d,DWORD PTR [rax+0x18]
  4050c4:	test   r15d,r15d
  4050c7:	jne    0x404d2d
  4050cd:	nop    DWORD PTR [rax]
  4050d0:	mov    ebp,DWORD PTR [rsp+0x44]
  4050d4:	test   ebp,ebp
  4050d6:	je     0x4055c8
  4050dc:	mov    eax,DWORD PTR [rsp+0xac]
  4050e3:	mov    ebp,0x1
  4050e8:	mov    rdx,QWORD PTR [rsp+0x198]
  4050f0:	mov    rcx,rsi
  4050f3:	mov    DWORD PTR [rdx],eax
  4050f5:	call   0x407330
  4050fa:	mov    rcx,rdi
  4050fd:	call   0x407330
  405102:	mov    rcx,r13
  405105:	call   0x407330
  40510a:	mov    rcx,QWORD PTR [rsp+0x70]
  40510f:	call   0x407330
  405114:	mov    rcx,rbx
  405117:	call   0x407330
  40511c:	mov    rax,QWORD PTR [rsp+0x190]
  405124:	mov    esi,DWORD PTR [rsp+0xac]
  40512b:	cmp    DWORD PTR [rax+0x8],esi
  40512e:	jge    0x4044ca
  405134:	mov    rax,QWORD PTR [rsp+0x190]
  40513c:	mov    eax,DWORD PTR [rax+0xc]
  40513f:	mov    DWORD PTR [rsp+0x44],eax
  405143:	and    eax,0x3
  405146:	cmp    eax,0x2
  405149:	je     0x40593b
  40514f:	cmp    eax,0x3
  405152:	je     0x405928
  405158:	cmp    eax,0x1
  40515b:	je     0x405527
  405161:	mov    rcx,QWORD PTR [rsp+0xc8]
  405169:	call   0x407330
  40516e:	mov    rax,QWORD PTR [rsp+0x190]
  405176:	mov    rsi,QWORD PTR [rsp+0x198]
  40517e:	mov    QWORD PTR [rsp+0xc8],0x0
  40518a:	mov    DWORD PTR [rsp+0xa4],0x11
  405195:	mov    eax,DWORD PTR [rax+0x8]
  405198:	mov    DWORD PTR [rsi],eax
  40519a:	mov    rax,QWORD PTR [rsp+0x190]
  4051a2:	mov    rsi,QWORD PTR [rsp+0x1a0]
  4051aa:	mov    ecx,DWORD PTR [rax]
  4051ac:	lea    eax,[rcx+0x1f]
  4051af:	sar    eax,0x5
  4051b2:	cdqe   
  4051b4:	lea    rdx,[rsi+rax*4]
  4051b8:	mov    rax,rsi
  4051bb:	cmp    rsi,rdx
  4051be:	jae    0x4051d0
  4051c0:	add    rax,0x4
  4051c4:	mov    DWORD PTR [rax-0x4],0xffffffff
  4051cb:	cmp    rdx,rax
  4051ce:	ja     0x4051c0
  4051d0:	and    ecx,0x1f
  4051d3:	je     0x4051e1
  4051d5:	mov    eax,0x20
  4051da:	sub    eax,ecx
  4051dc:	mov    ecx,eax
  4051de:	shr    DWORD PTR [rdx-0x4],cl
  4051e1:	xor    r8d,r8d
  4051e4:	jmp    0x4044d2
  4051e9:	nop    DWORD PTR [rax+0x0]
  4051f0:	call   0x405c60
  4051f5:	mov    edx,DWORD PTR [rax+0x14]
  4051f8:	mov    QWORD PTR [rsp+0xc8],rax
  405200:	sub    edx,0x1
  405203:	cmp    edx,DWORD PTR [rbp+0x14]
  405206:	jge    0x405227
  405208:	movsxd rdx,edx
  40520b:	add    rdx,0x4
  40520f:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  405214:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  405219:	xor    ecx,0x1f
  40521c:	xor    edx,0x1f
  40521f:	cmp    ecx,edx
  405221:	jge    0x404e70
  405227:	mov    edx,DWORD PTR [rsp+0x44]
  40522b:	test   edx,edx
  40522d:	je     0x405500
  405233:	mov    eax,DWORD PTR [rsp+0xa8]
  40523a:	add    eax,0x1
  40523d:	cmp    DWORD PTR [rsp+0x40],eax
  405241:	mov    DWORD PTR [rsp+0xa8],eax
  405248:	setne  al
  40524b:	movzx  eax,al
  40524e:	mov    DWORD PTR [rsp+0x44],eax
  405252:	jmp    0x404e70
  405257:	nop    WORD PTR [rax+rax*1+0x0]
  405260:	mov    edx,r15d
  405263:	mov    r14d,DWORD PTR [rsp+0x5c]
  405268:	sub    edx,ebx
  40526a:	jmp    0x404fb4
  40526f:	nop
  405270:	mov    edx,0x1
  405275:	mov    rcx,rax
  405278:	call   0x407730
  40527d:	mov    rcx,r15
  405280:	mov    QWORD PTR [rsp+0xc8],rax
  405288:	sub    DWORD PTR [rsp+0xac],0x1
  405290:	sub    DWORD PTR [rsp+0x8c],0x1
  405298:	call   0x407330
  40529d:	mov    rcx,rbp
  4052a0:	call   0x407330
  4052a5:	mov    rcx,QWORD PTR [rsp+0xc8]
  4052ad:	call   0x406c70
  4052b2:	mov    DWORD PTR [rsp+0x44],0x0
  4052ba:	mov    ebp,eax
  4052bc:	jmp    0x404ef0
  4052c1:	mov    edx,DWORD PTR [rsp+0x50]
  4052c5:	cmp    DWORD PTR [rsp+0x8c],edx
  4052cc:	mov    DWORD PTR [rsp+0xa4],0x11
  4052d7:	je     0x405084
  4052dd:	xor    ecx,ecx
  4052df:	cmp    DWORD PTR [rsp+0x40],0x1f
  4052e4:	mov    r9,QWORD PTR [rsp+0xc8]
  4052ec:	mov    eax,DWORD PTR [rsp+0x40]
  4052f0:	jle    0x40532c
  4052f2:	mov    r14d,DWORD PTR [r9+0x18]
  4052f6:	test   r14d,r14d
  4052f9:	jne    0x405084
  4052ff:	lea    rdx,[r9+0x1c]
  405303:	mov    eax,DWORD PTR [rsp+0x40]
  405307:	xor    ecx,ecx
  405309:	jmp    0x405321
  40530b:	nop    DWORD PTR [rax+rax*1+0x0]
  405310:	add    rdx,0x4
  405314:	mov    r12d,DWORD PTR [rdx-0x4]
  405318:	test   r12d,r12d
  40531b:	jne    0x405084
  405321:	sub    eax,0x20
  405324:	add    ecx,0x1
  405327:	cmp    eax,0x1f
  40532a:	jg     0x405310
  40532c:	cmp    eax,0x1
  40532f:	jle    0x405353
  405331:	movsxd rcx,ecx
  405334:	sub    eax,0x1
  405337:	lea    r8,[r9+rcx*4]
  40533b:	xor    ecx,ecx
  40533d:	mov    edx,DWORD PTR [r8+0x18]
  405341:	tzcnt  ecx,edx
  405345:	shr    edx,cl
  405347:	cmp    eax,ecx
  405349:	mov    DWORD PTR [r8+0x18],edx
  40534d:	jg     0x405084
  405353:	mov    eax,DWORD PTR [rsp+0x8c]
  40535a:	mov    rcx,r9
  40535d:	sub    eax,0x1
  405360:	mov    DWORD PTR [rsp+0xac],eax
  405367:	mov    eax,DWORD PTR [rsp+0x40]
  40536b:	mov    edx,eax
  40536d:	mov    DWORD PTR [rsp+0xa8],eax
  405374:	call   0x404060
  405379:	mov    QWORD PTR [rsp+0xc8],rax
  405381:	jmp    0x4050d0
  405386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405390:	mov    DWORD PTR [rsp+0x44],0x1
  405398:	jmp    0x404e70
  40539d:	nop    DWORD PTR [rax]
  4053a0:	movapd xmm7,xmm0
  4053a4:	cmp    ebp,0x1
  4053a7:	movsd  xmm1,QWORD PTR [rip+0x6749]        # 0x40baf8
  4053af:	sbb    eax,eax
  4053b1:	and    eax,0x10
  4053b4:	movsd  xmm0,QWORD PTR [rip+0x6744]        # 0x40bb00
  4053bc:	mulsd  xmm7,xmm1
  4053c0:	add    eax,0x10
  4053c3:	xor    r14d,r14d
  4053c6:	cmp    ebp,0x1
  4053c9:	mov    DWORD PTR [rsp+0x88],eax
  4053d0:	setb   r14b
  4053d4:	ucomisd xmm0,xmm7
  4053d8:	jbe    0x4054c0
  4053de:	cvttsd2si r12d,xmm7
  4053e3:	pxor   xmm6,xmm6
  4053e7:	mov    eax,DWORD PTR [rsp+0x6c]
  4053eb:	cmp    eax,0x1
  4053ee:	cvtsi2sd xmm6,r12d
  4053f3:	subsd  xmm7,xmm6
  4053f7:	je     0x405715
  4053fd:	cmp    eax,0x2
  405400:	jne    0x4055b9
  405406:	test   r14d,r14d
  405409:	jne    0x405435
  40540b:	ucomisd xmm7,QWORD PTR [rip+0x66d5]        # 0x40bae8
  405413:	jbe    0x405435
  405415:	pxor   xmm6,xmm6
  405419:	add    r12d,0x1
  40541d:	mov    eax,0x30
  405422:	sub    eax,DWORD PTR [rsp+0x88]
  405429:	cvtsi2sd xmm6,r12d
  40542e:	mov    DWORD PTR [rsp+0x88],eax
  405435:	mov    DWORD PTR [rsp+0x60],0x0
  40543d:	jmp    0x404d97
  405442:	ucomisd xmm0,xmm6
  405446:	jbe    0x404ed8
  40544c:	movsd  xmm0,QWORD PTR [rip+0x668c]        # 0x40bae0
  405454:	subsd  xmm0,xmm6
  405458:	ucomisd xmm0,xmm7
  40545c:	jbe    0x404ed8
  405462:	mov    eax,DWORD PTR [rsp+0x88]
  405469:	or     DWORD PTR [rsp+0xa4],eax
  405470:	jmp    0x4050d0
  405475:	mov    r15d,DWORD PTR [rsp+0x40]
  40547a:	mov    rcx,QWORD PTR [rsp+0xc8]
  405482:	mov    ebp,r15d
  405485:	sub    ebp,eax
  405487:	mov    edx,ebp
  405489:	call   0x407730
  40548e:	sub    DWORD PTR [rsp+0xac],ebp
  405495:	mov    QWORD PTR [rsp+0xc8],rax
  40549d:	mov    DWORD PTR [rsp+0xa8],r15d
  4054a5:	jmp    0x404dbf
  4054aa:	nop    WORD PTR [rax+rax*1+0x0]
  4054b0:	neg    edx
  4054b2:	mov    rcx,rax
  4054b5:	call   0x406b70
  4054ba:	jmp    0x404df7
  4054bf:	nop
  4054c0:	movapd xmm6,xmm7
  4054c4:	xor    r12d,r12d
  4054c7:	jmp    0x405435
  4054cc:	nop    DWORD PTR [rax+0x0]
  4054d0:	movapd xmm6,xmm11
  4054d5:	xor    r12d,r12d
  4054d8:	movapd xmm7,xmm11
  4054dd:	mov    DWORD PTR [rsp+0x88],0x20
  4054e8:	mov    DWORD PTR [rsp+0x60],0x0
  4054f0:	xor    r14d,r14d
  4054f3:	jmp    0x404d97
  4054f8:	nop    DWORD PTR [rax+rax*1+0x0]
  405500:	mov    edx,0x1
  405505:	mov    rcx,rax
  405508:	xor    r12d,r12d
  40550b:	call   0x406b70
  405510:	add    DWORD PTR [rsp+0xac],0x1
  405518:	add    DWORD PTR [rsp+0x8c],0x1
  405520:	jmp    0x404e70
  405525:	xor    ebp,ebp
  405527:	mov    rax,QWORD PTR [rsp+0xc8]
  40552f:	mov    DWORD PTR [rsp+0xa4],0xa3
  40553a:	mov    DWORD PTR [rax+0x14],0x0
  405541:	call   0x408068
  405546:	mov    DWORD PTR [rax],0x22
  40554c:	mov    rax,QWORD PTR [rsp+0x190]
  405554:	mov    eax,DWORD PTR [rax+0x8]
  405557:	add    eax,0x1
  40555a:	jmp    0x4044c0
  40555f:	mov    eax,DWORD PTR [rsp+0x58]
  405563:	mov    r8,QWORD PTR [rsp+0x198]
  40556b:	lea    rcx,[rsp+0xc0]
  405573:	mov    rdx,QWORD PTR [rsp+0x190]
  40557b:	lea    r9,[rsp+0xc8]
  405583:	mov    DWORD PTR [rsp+0x20],eax
  405587:	call   0x4062a0
  40558c:	cmp    eax,0x6
  40558f:	mov    DWORD PTR [rsp+0xa4],eax
  405596:	mov    r8,QWORD PTR [rsp+0xc8]
  40559e:	jne    0x404201
  4055a4:	mov    QWORD PTR [rsp+0xc0],rdi
  4055ac:	mov    DWORD PTR [rsp+0x58],0x0
  4055b4:	jmp    0x404201
  4055b9:	ucomisd xmm7,xmm1
  4055bd:	jae    0x405415
  4055c3:	jmp    0x405435
  4055c8:	mov    eax,DWORD PTR [rsp+0xa8]
  4055cf:	mov    ebp,DWORD PTR [rsp+0x40]
  4055d3:	sub    ebp,eax
  4055d5:	cmp    ebp,0x0
  4055d8:	jne    0x4057a1
  4055de:	mov    eax,DWORD PTR [rsp+0xac]
  4055e5:	jmp    0x4050e8
  4055ea:	je     0x4048e8
  4055f0:	neg    edx
  4055f2:	mov    eax,edx
  4055f4:	and    eax,0xf
  4055f7:	je     0x405619
  4055f9:	mov    rcx,QWORD PTR [rip+0x6880]        # 0x40be80
  405600:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  405609:	cdqe   
  40560b:	divsd  xmm0,QWORD PTR [rcx+rax*8]
  405610:	movsd  QWORD PTR [rsp+0xb0],xmm0
  405619:	and    edx,0xfffffff0
  40561c:	je     0x4048e8
  405622:	mov    eax,edx
  405624:	sar    eax,0x4
  405627:	cmp    eax,0xf
  40562a:	jle    0x405bf8
  405630:	mov    rdx,QWORD PTR [rip+0x6859]        # 0x40be90
  405637:	mov    ecx,eax
  405639:	xor    r8d,r8d
  40563c:	movsd  xmm1,QWORD PTR [rdx+0x20]
  405641:	mov    edx,DWORD PTR [rsp+0xb4]
  405648:	sub    ecx,0x10
  40564b:	mov    r9d,edx
  40564e:	and    edx,0x800fffff
  405654:	or     edx,0x3ff00000
  40565a:	and    r9d,0x7ff00000
  405661:	mov    DWORD PTR [rsp+0xb4],edx
  405668:	shr    r9d,0x14
  40566c:	cmp    ecx,0xf
  40566f:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  405678:	lea    r8d,[r8+r9*1-0x3ff]
  405680:	mulsd  xmm0,xmm1
  405684:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40568d:	jg     0x405641
  40568f:	and    eax,0xf
  405692:	mov    edx,DWORD PTR [rsp+0xb4]
  405699:	mov    ecx,edx
  40569b:	and    edx,0x800fffff
  4056a1:	and    ecx,0x7ff00000
  4056a7:	or     edx,0x3ff00000
  4056ad:	shr    ecx,0x14
  4056b0:	mov    DWORD PTR [rsp+0xb4],edx
  4056b7:	test   eax,eax
  4056b9:	lea    edi,[r8+rcx*1-0x3ff]
  4056c1:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  4056ca:	jle    0x4048f3
  4056d0:	movsd  xmm1,QWORD PTR [rsp+0xb0]
  4056d9:	mov    rdx,QWORD PTR [rip+0x67b0]        # 0x40be90
  4056e0:	movapd xmm0,xmm1
  4056e4:	test   al,0x1
  4056e6:	je     0x4056f0
  4056e8:	mulsd  xmm1,QWORD PTR [rdx]
  4056ec:	movapd xmm0,xmm1
  4056f0:	sar    eax,1
  4056f2:	add    rdx,0x8
  4056f6:	test   eax,eax
  4056f8:	jg     0x4056e4
  4056fa:	movsd  QWORD PTR [rsp+0xb0],xmm1
  405703:	jmp    0x4048f3
  405708:	mov    DWORD PTR [rsp+0x44],0x0
  405710:	jmp    0x404b19
  405715:	test   r14d,r14d
  405718:	je     0x405435
  40571e:	jmp    0x40540b
  405723:	mov    DWORD PTR [rsp+0x44],0x0
  40572b:	jmp    0x404c63
  405730:	lea    rax,[rsp+0xa4]
  405738:	lea    rcx,[rsp+0xb0]
  405740:	mov    DWORD PTR [rsp+0x20],0x1
  405748:	mov    QWORD PTR [rsp+0x30],rax
  40574d:	mov    eax,DWORD PTR [rsp+0x6c]
  405751:	mov    DWORD PTR [rsp+0x28],eax
  405755:	jmp    0x4047d8
  40575a:	mov    ecx,DWORD PTR [rsp+0x68]
  40575e:	mov    edx,0x25
  405763:	sub    edx,ebp
  405765:	cmp    ecx,edx
  405767:	mov    eax,ecx
  405769:	jg     0x4048a9
  40576f:	mov    rdx,QWORD PTR [rip+0x670a]        # 0x40be80
  405776:	mov    eax,0xf
  40577b:	sub    eax,ebp
  40577d:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  405786:	movsxd rcx,eax
  405789:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  40578e:	mov    ecx,DWORD PTR [rsp+0x68]
  405792:	sub    ecx,eax
  405794:	movsxd rax,ecx
  405797:	mulsd  xmm0,QWORD PTR [rdx+rax*8]
  40579c:	jmp    0x404be1
  4057a1:	mov    edx,ebp
  4057a3:	jle    0x405aff
  4057a9:	mov    rcx,QWORD PTR [rsp+0xc8]
  4057b1:	call   0x407730
  4057b6:	mov    QWORD PTR [rsp+0xc8],rax
  4057be:	mov    eax,DWORD PTR [rsp+0xac]
  4057c5:	sub    eax,ebp
  4057c7:	xor    ebp,ebp
  4057c9:	mov    DWORD PTR [rsp+0xac],eax
  4057d0:	jmp    0x4050e8
  4057d5:	xor    ebp,ebp
  4057d7:	xor    r13d,r13d
  4057da:	jmp    0x40489a
  4057df:	mov    r9d,0x4e1f
  4057e5:	jmp    0x404634
  4057ea:	lea    rbx,[rsp+0xc0]
  4057f2:	lea    rdx,[rip+0x6187]        # 0x40b980
  4057f9:	mov    rcx,rbx
  4057fc:	call   0x407e00
  405801:	test   eax,eax
  405803:	je     0x404653
  405809:	lea    rdx,[rip+0x6173]        # 0x40b983
  405810:	mov    rcx,rbx
  405813:	sub    QWORD PTR [rsp+0xc0],0x1
  40581c:	call   0x407e00
  405821:	test   eax,eax
  405823:	jne    0x40582e
  405825:	add    QWORD PTR [rsp+0xc0],0x1
  40582e:	mov    rax,QWORD PTR [rsp+0x190]
  405836:	mov    DWORD PTR [rsp+0xa4],0x3
  405841:	xor    ebp,ebp
  405843:	mov    eax,DWORD PTR [rax+0x8]
  405846:	add    eax,0x1
  405849:	jmp    0x4044c0
  40584e:	mov    edx,DWORD PTR [rsp+0xb4]
  405855:	mov    eax,0x15
  40585a:	or     edx,0x100000
  405860:	tzcnt  edx,edx
  405864:	sub    eax,edx
  405866:	jmp    0x40478d
  40586b:	cmp    ebp,0x1
  40586e:	sbb    eax,eax
  405870:	and    eax,0x10
  405873:	add    eax,0x11
  405876:	mov    DWORD PTR [rsp+0xa4],eax
  40587d:	jmp    0x4050d0
  405882:	cmp    ebp,0x1
  405885:	sbb    eax,eax
  405887:	and    eax,0x10
  40588a:	add    eax,0x11
  40588d:	test   ebp,ebp
  40588f:	mov    DWORD PTR [rsp+0xa4],eax
  405896:	jne    0x4050d0
  40589c:	cmp    DWORD PTR [rsp+0x48],0x1
  4058a1:	jg     0x4050d0
  4058a7:	mov    ebp,DWORD PTR [rsp+0x44]
  4058ab:	test   ebp,ebp
  4058ad:	jne    0x4050d0
  4058b3:	mov    edx,DWORD PTR [rsp+0x8c]
  4058ba:	cmp    DWORD PTR [rsp+0x50],edx
  4058be:	je     0x4050d0
  4058c4:	mov    rcx,rbx
  4058c7:	mov    edx,0x1
  4058cc:	call   0x407730
  4058d1:	mov    rdx,r13
  4058d4:	mov    rcx,rax
  4058d7:	mov    rbx,rax
  4058da:	call   0x407850
  4058df:	test   eax,eax
  4058e1:	jle    0x4055c8
  4058e7:	mov    DWORD PTR [rsp+0xa4],0x11
  4058f2:	mov    DWORD PTR [rsp+0x44],0x0
  4058fa:	mov    eax,DWORD PTR [rsp+0x40]
  4058fe:	mov    rcx,QWORD PTR [rsp+0xc8]
  405906:	sub    DWORD PTR [rsp+0xac],eax
  40590d:	mov    edx,eax
  40590f:	mov    DWORD PTR [rsp+0xa8],eax
  405916:	call   0x404060
  40591b:	mov    QWORD PTR [rsp+0xc8],rax
  405923:	jmp    0x4050d0
  405928:	mov    r10d,DWORD PTR [rsp+0x58]
  40592d:	test   r10d,r10d
  405930:	jne    0x405527
  405936:	jmp    0x405161
  40593b:	mov    r11d,DWORD PTR [rsp+0x58]
  405940:	test   r11d,r11d
  405943:	je     0x405527
  405949:	jmp    0x405161
  40594e:	test   ebp,ebp
  405950:	je     0x405a97
  405956:	mov    r11d,DWORD PTR [rsp+0x44]
  40595b:	test   r11d,r11d
  40595e:	je     0x405b65
  405964:	mov    ecx,DWORD PTR [rsp+0xa8]
  40596b:	mov    r8,QWORD PTR [rsp+0xc8]
  405973:	mov    edx,ecx
  405975:	lea    rax,[r8+0x18]
  405979:	sar    edx,0x5
  40597c:	movsxd rdx,edx
  40597f:	lea    rdx,[rax+rdx*4]
  405983:	cmp    rax,rdx
  405986:	jae    0x4059b3
  405988:	cmp    DWORD PTR [r8+0x18],0xffffffff
  40598d:	lea    rax,[r8+0x1c]
  405991:	je     0x4059ae
  405993:	jmp    0x405b65
  405998:	nop    DWORD PTR [rax+rax*1+0x0]
  4059a0:	add    rax,0x4
  4059a4:	cmp    DWORD PTR [rax-0x4],0xffffffff
  4059a8:	jne    0x405b65
  4059ae:	cmp    rdx,rax
  4059b1:	ja     0x4059a0
  4059b3:	and    ecx,0x1f
  4059b6:	je     0x4059ca
  4059b8:	or     edx,0xffffffff
  4059bb:	shl    edx,cl
  4059bd:	or     edx,DWORD PTR [rax]
  4059bf:	mov    eax,edx
  4059c1:	add    eax,0x1
  4059c4:	jne    0x405b65
  4059ca:	mov    eax,DWORD PTR [rsp+0x40]
  4059ce:	mov    edx,DWORD PTR [rsp+0x50]
  4059d2:	mov    DWORD PTR [r8+0x14],0x1
  4059da:	mov    DWORD PTR [r8+0x18],0x1
  4059e2:	mov    DWORD PTR [rsp+0xa8],0x1
  4059ed:	mov    DWORD PTR [rsp+0xa4],0x21
  4059f8:	lea    eax,[rax+rdx*1-0x1]
  4059fc:	mov    DWORD PTR [rsp+0xac],eax
  405a03:	mov    eax,0x1
  405a08:	jmp    0x4055cf
  405a0d:	add    r13d,eax
  405a10:	cmp    eax,0x1
  405a13:	je     0x405a3c
  405a15:	add    ecx,ebp
  405a17:	mov    r10d,ecx
  405a1a:	jmp    0x405a25
  405a1c:	lea    esi,[rsi+rsi*4]
  405a1f:	add    esi,esi
  405a21:	cmp    ebp,ecx
  405a23:	je     0x405a3f
  405a25:	add    ebp,0x1
  405a28:	lea    eax,[rbp-0x1]
  405a2b:	cmp    eax,0x8
  405a2e:	jle    0x405a1c
  405a30:	cmp    ebp,0x10
  405a33:	jg     0x405a21
  405a35:	lea    edx,[rdx+rdx*4]
  405a38:	add    edx,edx
  405a3a:	jmp    0x405a21
  405a3c:	mov    r10d,ebp
  405a3f:	cmp    r10d,0x8
  405a43:	lea    ebp,[r10+0x1]
  405a47:	jg     0x405b1b
  405a4d:	mov    r8,QWORD PTR [rsp+0xc0]
  405a55:	jmp    0x404b7e
  405a5a:	mov    r9,QWORD PTR [rsp+0xc8]
  405a62:	mov    DWORD PTR [rsp+0x44],0x1
  405a6a:	mov    eax,DWORD PTR [rsp+0x50]
  405a6e:	mov    DWORD PTR [r9+0x14],0x0
  405a76:	mov    DWORD PTR [rsp+0xa4],0x50
  405a81:	mov    DWORD PTR [rsp+0xac],eax
  405a88:	jmp    0x4050d0
  405a8d:	mov    eax,0x1
  405a92:	jmp    0x40483d
  405a97:	cmp    DWORD PTR [rsp+0x48],0x1
  405a9c:	je     0x405b7c
  405aa2:	mov    DWORD PTR [rsp+0xa4],0x21
  405aad:	mov    r10d,DWORD PTR [rsp+0x44]
  405ab2:	test   r10d,r10d
  405ab5:	jne    0x405ac5
  405ab7:	mov    edx,DWORD PTR [rsp+0x40]
  405abb:	cmp    DWORD PTR [rsp+0x48],edx
  405abf:	jl     0x4055c8
  405ac5:	mov    r9,QWORD PTR [rsp+0xc8]
  405acd:	mov    eax,DWORD PTR [r9+0x18]
  405ad1:	test   al,0x1
  405ad3:	je     0x4050d0
  405ad9:	test   ebp,ebp
  405adb:	jne    0x405c00
  405ae1:	cmp    DWORD PTR [rsp+0x48],0x1
  405ae6:	je     0x405a6a
  405ae8:	sub    eax,0x1
  405aeb:	mov    DWORD PTR [rsp+0xa4],0x11
  405af6:	mov    DWORD PTR [r9+0x18],eax
  405afa:	jmp    0x4050d0
  405aff:	mov    rcx,QWORD PTR [rsp+0xc8]
  405b07:	neg    edx
  405b09:	call   0x406b70
  405b0e:	jmp    0x4057be
  405b13:	xor    r8d,r8d
  405b16:	jmp    0x404aaf
  405b1b:	cmp    ebp,0x10
  405b1e:	jg     0x405b27
  405b20:	lea    eax,[rdx+rdx*4]
  405b23:	lea    edx,[r8+rax*2]
  405b27:	mov    r8,QWORD PTR [rsp+0xc0]
  405b2f:	xor    ecx,ecx
  405b31:	jmp    0x40487f
  405b36:	cmp    edx,0xffffffff
  405b39:	jl     0x4049f4
  405b3f:	mov    rax,QWORD PTR [rsp+0xc8]
  405b47:	mov    DWORD PTR [rsp+0xa8],0x1
  405b52:	mov    DWORD PTR [rax+0x14],0x1
  405b59:	mov    DWORD PTR [rax+0x18],0x1
  405b60:	jmp    0x4049c6
  405b65:	mov    DWORD PTR [rsp+0xa4],0x11
  405b70:	jmp    0x405aad
  405b75:	xor    ecx,ecx
  405b77:	jmp    0x404b58
  405b7c:	mov    edx,DWORD PTR [rsp+0x8c]
  405b83:	cmp    DWORD PTR [rsp+0x50],edx
  405b87:	jne    0x405c4d
  405b8d:	mov    rax,QWORD PTR [rsp+0xc8]
  405b95:	mov    DWORD PTR [rsp+0xa4],0x21
  405ba0:	cmp    DWORD PTR [rax+0x14],0x1
  405ba4:	jne    0x4050d0
  405baa:	cmp    DWORD PTR [rax+0x18],0x1
  405bae:	mov    eax,DWORD PTR [rsp+0x48]
  405bb2:	cmovne eax,DWORD PTR [rsp+0x84]
  405bba:	mov    DWORD PTR [rsp+0x84],eax
  405bc1:	jmp    0x4050d0
  405bc6:	mov    r8,QWORD PTR [rsp+0x1a0]
  405bce:	mov    rdx,QWORD PTR [rsp+0x190]
  405bd6:	mov    rcx,rbx
  405bd9:	call   0x406d40
  405bde:	mov    DWORD PTR [rsp+0xa4],eax
  405be5:	mov    rax,QWORD PTR [rsp+0x190]
  405bed:	mov    eax,DWORD PTR [rax+0x8]
  405bf0:	add    eax,0x1
  405bf3:	jmp    0x4044c0
  405bf8:	xor    r8d,r8d
  405bfb:	jmp    0x405692
  405c00:	mov    rcx,r9
  405c03:	call   0x403bb0
  405c08:	mov    edx,DWORD PTR [rax+0x14]
  405c0b:	mov    ecx,DWORD PTR [rsp+0xa8]
  405c12:	mov    QWORD PTR [rsp+0xc8],rax
  405c1a:	sub    edx,0x1
  405c1d:	movsxd rdx,edx
  405c20:	bsr    edx,DWORD PTR [rax+rdx*4+0x18]
  405c25:	mov    eax,ecx
  405c27:	neg    eax
  405c29:	and    eax,0x1f
  405c2c:	xor    edx,0x1f
  405c2f:	cmp    edx,eax
  405c31:	je     0x405c3d
  405c33:	add    ecx,0x1
  405c36:	mov    DWORD PTR [rsp+0xa8],ecx
  405c3d:	mov    DWORD PTR [rsp+0xa4],0x21
  405c48:	jmp    0x4050d0
  405c4d:	mov    DWORD PTR [rsp+0xa4],0x1
  405c58:	jmp    0x4058fa
  405c5d:	nop
  405c5e:	nop
  405c5f:	nop
  405c60:	push   r13
  405c62:	push   r12
  405c64:	push   rbp
  405c65:	push   rdi
  405c66:	push   rsi
  405c67:	push   rbx
  405c68:	sub    rsp,0x28
  405c6c:	mov    eax,DWORD PTR [rdx+0x14]
  405c6f:	cmp    DWORD PTR [rcx+0x14],eax
  405c72:	mov    rsi,rcx
  405c75:	mov    rdi,rdx
  405c78:	jge    0x405c80
  405c7a:	mov    rsi,rdx
  405c7d:	mov    rdi,rcx
  405c80:	mov    ecx,DWORD PTR [rsi+0x8]
  405c83:	xor    r12d,r12d
  405c86:	call   0x407220
  405c8b:	movsxd rcx,DWORD PTR [rsi+0x14]
  405c8f:	mov    rbx,rax
  405c92:	lea    r11,[rdi+0x18]
  405c96:	lea    r8,[rbx+0x18]
  405c9a:	mov    DWORD PTR [rax+0x14],ecx
  405c9d:	movsxd rdx,DWORD PTR [rdi+0x14]
  405ca1:	lea    rax,[rsi+0x18]
  405ca5:	lea    rdi,[r8+rdx*4]
  405ca9:	mov    rbp,rdx
  405cac:	nop    DWORD PTR [rax+0x0]
  405cb0:	mov    r10d,DWORD PTR [rax]
  405cb3:	mov    r9d,DWORD PTR [r11]
  405cb6:	add    r8,0x4
  405cba:	add    rax,0x4
  405cbe:	add    r11,0x4
  405cc2:	movzx  r13d,r9w
  405cc6:	movzx  edx,r10w
  405cca:	shr    r9d,0x10
  405cce:	add    edx,r13d
  405cd1:	shr    r10d,0x10
  405cd5:	add    edx,r12d
  405cd8:	add    r10d,r9d
  405cdb:	mov    r9d,edx
  405cde:	mov    WORD PTR [r8-0x4],dx
  405ce3:	and    r9d,0x10000
  405cea:	shr    r9d,0x10
  405cee:	add    r9d,r10d
  405cf1:	mov    r12d,r9d
  405cf4:	mov    WORD PTR [r8-0x2],r9w
  405cf9:	and    r12d,0x10000
  405d00:	shr    r12d,0x10
  405d04:	cmp    rdi,r8
  405d07:	ja     0x405cb0
  405d09:	mov    edx,DWORD PTR [rsi+0x14]
  405d0c:	sub    edx,ebp
  405d0e:	movsxd rdx,edx
  405d11:	lea    r11,[rdi+rdx*4]
  405d15:	cmp    r11,r8
  405d18:	jbe    0x405d5b
  405d1a:	nop    WORD PTR [rax+rax*1+0x0]
  405d20:	mov    r9d,DWORD PTR [rax]
  405d23:	add    r8,0x4
  405d27:	add    rax,0x4
  405d2b:	movzx  r10d,r9w
  405d2f:	shr    r9d,0x10
  405d33:	add    r10d,r12d
  405d36:	mov    edx,r10d
  405d39:	mov    WORD PTR [r8-0x4],r10w
  405d3e:	and    edx,0x10000
  405d44:	shr    edx,0x10
  405d47:	add    edx,r9d
  405d4a:	mov    WORD PTR [r8-0x2],dx
  405d4f:	mov    r12d,edx
  405d52:	shr    r12d,0x10
  405d56:	cmp    r11,r8
  405d59:	ja     0x405d20
  405d5b:	test   r12d,r12d
  405d5e:	je     0x405d73
  405d60:	cmp    ecx,DWORD PTR [rbx+0xc]
  405d63:	je     0x405d83
  405d65:	lea    eax,[rcx+0x1]
  405d68:	mov    DWORD PTR [rbx+0x14],eax
  405d6b:	mov    DWORD PTR [rbx+rcx*4+0x18],0x1
  405d73:	mov    rax,rbx
  405d76:	add    rsp,0x28
  405d7a:	pop    rbx
  405d7b:	pop    rsi
  405d7c:	pop    rdi
  405d7d:	pop    rbp
  405d7e:	pop    r12
  405d80:	pop    r13
  405d82:	ret    
  405d83:	mov    eax,DWORD PTR [rbx+0x8]
  405d86:	lea    ecx,[rax+0x1]
  405d89:	call   0x407220
  405d8e:	mov    rsi,rax
  405d91:	lea    rcx,[rax+0x10]
  405d95:	movsxd rax,DWORD PTR [rbx+0x14]
  405d99:	lea    rdx,[rbx+0x10]
  405d9d:	lea    r8,[rax*4+0x8]
  405da5:	call   0x407fc0
  405daa:	mov    rcx,rbx
  405dad:	mov    rbx,rsi
  405db0:	call   0x407330
  405db5:	movsxd rcx,DWORD PTR [rsi+0x14]
  405db9:	jmp    0x405d65
  405dbb:	nop
  405dbc:	nop
  405dbd:	nop
  405dbe:	nop
  405dbf:	nop
  405dc0:	sub    rsp,0x78
  405dc4:	movaps XMMWORD PTR [rsp+0x50],xmm6
  405dc9:	movaps XMMWORD PTR [rsp+0x60],xmm7
  405dce:	movsd  QWORD PTR [rsp+0x48],xmm0
  405dd4:	movapd xmm7,xmm0
  405dd8:	mov    eax,DWORD PTR [rsp+0x4c]
  405ddc:	mov    ecx,eax
  405dde:	and    eax,0x7ff00000
  405de3:	and    ecx,0xfffff
  405de9:	or     ecx,DWORD PTR [rsp+0x48]
  405ded:	mov    r9d,ecx
  405df0:	or     r9d,eax
  405df3:	je     0x405e90
  405df9:	cmp    eax,0x7ff00000
  405dfe:	je     0x405ef3
  405e04:	movsd  xmm1,QWORD PTR [rip+0x5d4c]        # 0x40bb58
  405e0c:	mov    ecx,0x0
  405e11:	ucomisd xmm0,xmm1
  405e15:	setnp  al
  405e18:	cmovne eax,ecx
  405e1b:	test   al,al
  405e1d:	jne    0x405ee0
  405e23:	test   edx,edx
  405e25:	je     0x405ee0
  405e2b:	movsd  xmm0,QWORD PTR [rip+0x5d4d]        # 0x40bb80
  405e33:	test   edx,edx
  405e35:	mov    eax,edx
  405e37:	andpd  xmm0,xmm7
  405e3b:	js     0x405f80
  405e41:	cmp    eax,0x1
  405e44:	je     0x405e70
  405e46:	test   al,0x1
  405e48:	movapd xmm3,xmm1
  405e4c:	jne    0x405f93
  405e52:	movapd xmm2,xmm0
  405e56:	movapd xmm0,xmm3
  405e5a:	shr    eax,1
  405e5c:	nop    DWORD PTR [rax+0x0]
  405e60:	test   al,0x1
  405e62:	mulsd  xmm2,xmm2
  405e66:	je     0x405e6c
  405e68:	mulsd  xmm0,xmm2
  405e6c:	shr    eax,1
  405e6e:	jne    0x405e60
  405e70:	and    edx,0x1
  405e73:	je     0x405ee4
  405e75:	movq   rax,xmm7
  405e7a:	test   rax,rax
  405e7d:	jns    0x405ee4
  405e7f:	movsd  xmm2,QWORD PTR [rip+0x5d09]        # 0x40bb90
  405e87:	xorpd  xmm0,xmm2
  405e8b:	jmp    0x405ee4
  405e8d:	nop    DWORD PTR [rax]
  405e90:	movsd  xmm1,QWORD PTR [rip+0x5cc0]        # 0x40bb58
  405e98:	mov    ecx,0x0
  405e9d:	ucomisd xmm0,xmm1
  405ea1:	setnp  al
  405ea4:	cmovne eax,ecx
  405ea7:	test   al,al
  405ea9:	jne    0x405ee0
  405eab:	test   edx,edx
  405ead:	je     0x405ee0
  405eaf:	mov    eax,edx
  405eb1:	and    eax,0x1
  405eb4:	test   edx,edx
  405eb6:	js     0x405ff0
  405ebc:	test   eax,eax
  405ebe:	je     0x405ed1
  405ec0:	movq   rax,xmm7
  405ec5:	shr    rax,0x20
  405ec9:	test   eax,eax
  405ecb:	js     0x406030
  405ed1:	pxor   xmm0,xmm0
  405ed5:	jmp    0x405ee4
  405ed7:	nop    WORD PTR [rax+rax*1+0x0]
  405ee0:	movapd xmm0,xmm1
  405ee4:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  405ee9:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  405eee:	add    rsp,0x78
  405ef2:	ret    
  405ef3:	test   ecx,ecx
  405ef5:	je     0x405fa0
  405efb:	movsd  xmm1,QWORD PTR [rip+0x5c55]        # 0x40bb58
  405f03:	mov    ecx,0x0
  405f08:	ucomisd xmm0,xmm1
  405f0c:	setnp  al
  405f0f:	cmovne eax,ecx
  405f12:	test   al,al
  405f14:	jne    0x405ee0
  405f16:	test   edx,edx
  405f18:	je     0x405ee0
  405f1a:	movq   rax,xmm7
  405f1f:	shr    rax,0x20
  405f23:	test   eax,eax
  405f25:	js     0x406040
  405f2b:	movsd  xmm6,QWORD PTR [rip+0x5c1d]        # 0x40bb50
  405f33:	mov    DWORD PTR [rsp+0x3c],edx
  405f37:	call   0x408068
  405f3c:	mov    edx,DWORD PTR [rsp+0x3c]
  405f40:	pxor   xmm3,xmm3
  405f44:	mov    DWORD PTR [rax],0x21
  405f4a:	movapd xmm2,xmm7
  405f4e:	movsd  QWORD PTR [rsp+0x20],xmm6
  405f54:	mov    ecx,0x1
  405f59:	cvtsi2sd xmm3,edx
  405f5d:	lea    rdx,[rip+0x5bdc]        # 0x40bb40
  405f64:	call   0x402320
  405f69:	movapd xmm0,xmm6
  405f6d:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  405f72:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  405f77:	add    rsp,0x78
  405f7b:	ret    
  405f7c:	nop    DWORD PTR [rax+0x0]
  405f80:	movapd xmm4,xmm1
  405f84:	neg    eax
  405f86:	divsd  xmm4,xmm0
  405f8a:	movapd xmm0,xmm4
  405f8e:	jmp    0x405e41
  405f93:	movapd xmm3,xmm0
  405f97:	jmp    0x405e52
  405f9c:	nop    DWORD PTR [rax+0x0]
  405fa0:	movsd  xmm1,QWORD PTR [rip+0x5bb0]        # 0x40bb58
  405fa8:	mov    r8d,edx
  405fab:	and    r8d,0x1
  405faf:	mov    ecx,0x0
  405fb4:	ucomisd xmm0,xmm1
  405fb8:	setnp  al
  405fbb:	cmovne eax,ecx
  405fbe:	test   al,al
  405fc0:	jne    0x405ee0
  405fc6:	test   edx,edx
  405fc8:	je     0x405ee0
  405fce:	movq   rax,xmm7
  405fd3:	shr    rax,0x20
  405fd7:	test   eax,eax
  405fd9:	js     0x406050
  405fdb:	test   edx,edx
  405fdd:	movsd  xmm0,QWORD PTR [rip+0x5b8b]        # 0x40bb70
  405fe5:	jns    0x405ee4
  405feb:	jmp    0x405ed1
  405ff0:	test   eax,eax
  405ff2:	je     0x4060b0
  405ff8:	movq   rax,xmm7
  405ffd:	movsd  xmm0,QWORD PTR [rip+0x5b6b]        # 0x40bb70
  406005:	shr    rax,0x20
  406009:	test   eax,eax
  40600b:	jns    0x405ee4
  406011:	movsd  xmm0,QWORD PTR [rip+0x5b4f]        # 0x40bb68
  406019:	jmp    0x405ee4
  40601e:	xchg   ax,ax
  406020:	test   r8d,r8d
  406023:	pxor   xmm0,xmm0
  406027:	je     0x405ee4
  40602d:	nop    DWORD PTR [rax]
  406030:	movsd  xmm0,QWORD PTR [rip+0x5b28]        # 0x40bb60
  406038:	jmp    0x405ee4
  40603d:	nop    DWORD PTR [rax]
  406040:	movsd  xmm6,QWORD PTR [rip+0x5b00]        # 0x40bb48
  406048:	jmp    0x405f33
  40604d:	nop    DWORD PTR [rax]
  406050:	mov    eax,r8d
  406053:	mov    ecx,edx
  406055:	xor    eax,0x1
  406058:	shr    ecx,0x1f
  40605b:	and    eax,0x1
  40605e:	je     0x40606c
  406060:	test   cl,cl
  406062:	pxor   xmm0,xmm0
  406066:	jne    0x405ee4
  40606c:	not    edx
  40606e:	shr    edx,0x1f
  406071:	test   r8d,r8d
  406074:	je     0x406086
  406076:	test   dl,dl
  406078:	movsd  xmm0,QWORD PTR [rip+0x5ae8]        # 0x40bb68
  406080:	jne    0x405ee4
  406086:	test   al,al
  406088:	je     0x40609a
  40608a:	test   dl,dl
  40608c:	movsd  xmm0,QWORD PTR [rip+0x5adc]        # 0x40bb70
  406094:	jne    0x405ee4
  40609a:	test   cl,cl
  40609c:	jne    0x406020
  40609e:	test   r8d,r8d
  4060a1:	movsd  xmm0,QWORD PTR [rip+0x5abf]        # 0x40bb68
  4060a9:	jne    0x405ee4
  4060af:	nop
  4060b0:	movsd  xmm0,QWORD PTR [rip+0x5ab8]        # 0x40bb70
  4060b8:	jmp    0x405ee4
  4060bd:	nop
  4060be:	nop
  4060bf:	nop
  4060c0:	fld    TBYTE PTR [rdx]
  4060c2:	fxam   
  4060c4:	fstsw  ax
  4060c7:	mov    dh,0x45
  4060c9:	and    dh,ah
  4060cb:	cmp    dh,0x5
  4060ce:	je     0x40610f
  4060d0:	fld    st(0)
  4060d2:	sub    rsp,0x8
  4060d6:	fnstcw WORD PTR [rsp+0x4]
  4060da:	movzx  eax,WORD PTR [rsp+0x4]
  4060df:	or     ah,0xc
  4060e2:	mov    WORD PTR [rsp],ax
  4060e6:	fldcw  WORD PTR [rsp]
  4060e9:	frndint 
  4060eb:	fldcw  WORD PTR [rsp+0x4]
  4060ef:	add    rsp,0x8
  4060f3:	fsub   st(1),st
  4060f5:	fxch   st(1)
  4060f7:	f2xm1  
  4060f9:	fld1   
  4060fb:	faddp  st(1),st
  4060fd:	fscale 
  4060ff:	fstp   st(1)
  406101:	mov    rax,rcx
  406104:	mov    QWORD PTR [rcx+0x8],0x0
  40610c:	fstp   TBYTE PTR [rcx]
  40610e:	ret    
  40610f:	test   eax,0x200
  406114:	je     0x40611a
  406116:	fstp   st(0)
  406118:	fldz   
  40611a:	mov    rax,rcx
  40611d:	mov    QWORD PTR [rcx+0x8],0x0
  406125:	fstp   TBYTE PTR [rcx]
  406127:	ret    
  406128:	nop
  406129:	nop
  40612a:	nop
  40612b:	nop
  40612c:	nop
  40612d:	nop
  40612e:	nop
  40612f:	nop
  406130:	sub    rsp,0x48
  406134:	movsd  QWORD PTR [rsp+0x30],xmm0
  40613a:	mov    eax,DWORD PTR [rsp+0x34]
  40613e:	movapd xmm1,xmm0
  406142:	mov    ecx,eax
  406144:	and    ecx,0x7ff00000
  40614a:	cmp    ecx,0x7ff00000
  406150:	sete   r8b
  406154:	and    eax,0xfffff
  406159:	or     eax,ecx
  40615b:	or     eax,DWORD PTR [rsp+0x30]
  40615f:	sete   r9b
  406163:	test   ecx,ecx
  406165:	sete   al
  406168:	or     eax,r9d
  40616b:	cmp    r8b,al
  40616e:	ja     0x406209
  406174:	pxor   xmm2,xmm2
  406178:	ucomisd xmm0,xmm2
  40617c:	jp     0x406188
  40617e:	movapd xmm1,xmm0
  406182:	je     0x406209
  406188:	pxor   xmm3,xmm3
  40618c:	movsd  QWORD PTR [rsp+0x20],xmm0
  406192:	fld    QWORD PTR [rsp+0x20]
  406196:	cvtsi2sd xmm3,edx
  40619a:	movsd  QWORD PTR [rsp+0x28],xmm3
  4061a0:	fld    QWORD PTR [rsp+0x28]
  4061a4:	fxch   st(1)
  4061a6:	fscale 
  4061a8:	fstp   st(1)
  4061aa:	fstp   QWORD PTR [rsp+0x20]
  4061ae:	movsd  xmm4,QWORD PTR [rsp+0x20]
  4061b4:	movsd  QWORD PTR [rsp+0x38],xmm4
  4061ba:	mov    eax,DWORD PTR [rsp+0x3c]
  4061be:	mov    edx,eax
  4061c0:	and    edx,0x7ff00000
  4061c6:	cmp    edx,0x7ff00000
  4061cc:	sete   cl
  4061cf:	and    eax,0xfffff
  4061d4:	or     eax,edx
  4061d6:	or     eax,DWORD PTR [rsp+0x38]
  4061da:	sete   r8b
  4061de:	test   edx,edx
  4061e0:	sete   al
  4061e3:	or     eax,r8d
  4061e6:	cmp    cl,al
  4061e8:	ja     0x4061f8
  4061ea:	movsd  xmm5,QWORD PTR [rsp+0x20]
  4061f0:	ucomisd xmm5,xmm2
  4061f4:	jp     0x406212
  4061f6:	jne    0x406212
  4061f8:	call   0x408068
  4061fd:	movsd  xmm1,QWORD PTR [rsp+0x20]
  406203:	mov    DWORD PTR [rax],0x22
  406209:	movapd xmm0,xmm1
  40620d:	add    rsp,0x48
  406211:	ret    
  406212:	movsd  xmm1,QWORD PTR [rsp+0x20]
  406218:	movapd xmm0,xmm1
  40621c:	add    rsp,0x48
  406220:	ret    
  406221:	nop
  406222:	nop
  406223:	nop
  406224:	nop
  406225:	nop
  406226:	nop
  406227:	nop
  406228:	nop
  406229:	nop
  40622a:	nop
  40622b:	nop
  40622c:	nop
  40622d:	nop
  40622e:	nop
  40622f:	nop
  406230:	add    BYTE PTR [rax],al
  406232:	add    BYTE PTR [rax],al
  406234:	add    BYTE PTR [rax],al
  406236:	lock (bad) 
  406238:	pop    rdx
  40623a:	cmc    
  40623b:	sub    BYTE PTR [rdi+rcx*4-0x2e],bl
  40623f:	(bad)  
  406240:	fld    QWORD PTR [rip+0xffffffffffffffea]        # 0x406230
  406246:	fld    TBYTE PTR [rdx]
  406248:	fxam   
  40624a:	fnstsw ax
  40624c:	fld    st(0)
  40624e:	sahf   
  40624f:	jb     0x406288
  406251:	fsub   st,st(2)
  406253:	fld    st(0)
  406255:	fabs   
  406257:	fcomp  QWORD PTR [rip+0xffffffffffffffdb]        # 0x406238
  40625d:	fnstsw ax
  40625f:	and    ah,0x45
  406262:	je     0x406276
  406264:	fstp   st(1)
  406266:	fyl2xp1 
  406268:	mov    rax,rcx
  40626b:	mov    QWORD PTR [rcx+0x8],0x0
  406273:	fstp   TBYTE PTR [rcx]
  406275:	ret    
  406276:	fstp   st(0)
  406278:	fyl2x  
  40627a:	mov    rax,rcx
  40627d:	mov    QWORD PTR [rcx+0x8],0x0
  406285:	fstp   TBYTE PTR [rcx]
  406287:	ret    
  406288:	jp     0x406251
  40628a:	fstp   st(1)
  40628c:	fstp   st(1)
  40628e:	mov    rax,rcx
  406291:	mov    QWORD PTR [rcx+0x8],0x0
  406299:	fstp   TBYTE PTR [rcx]
  40629b:	ret    
  40629c:	nop
  40629d:	nop
  40629e:	nop
  40629f:	nop
  4062a0:	push   r15
  4062a2:	push   r14
  4062a4:	push   r13
  4062a6:	push   r12
  4062a8:	push   rbp
  4062a9:	push   rdi
  4062aa:	push   rsi
  4062ab:	push   rbx
  4062ac:	sub    rsp,0x28
  4062b0:	mov    r14,rcx
  4062b3:	mov    r13,rdx
  4062b6:	mov    QWORD PTR [rsp+0x80],r8
  4062be:	mov    QWORD PTR [rsp+0x88],r9
  4062c6:	call   0x407fd0
  4062cb:	mov    rdi,QWORD PTR [rip+0x5aee]        # 0x40bdc0
  4062d2:	mov    rsi,QWORD PTR [rax]
  4062d5:	cmp    BYTE PTR [rdi+0x30],0x0
  4062d9:	je     0x406700
  4062df:	mov    rax,QWORD PTR [rsp+0x88]
  4062e7:	xor    r8d,r8d
  4062ea:	mov    QWORD PTR [rax],0x0
  4062f1:	mov    rbx,QWORD PTR [r14]
  4062f4:	movzx  edx,BYTE PTR [rbx+0x2]
  4062f8:	lea    rax,[rbx+0x3]
  4062fc:	add    rbx,0x2
  406300:	cmp    dl,0x30
  406303:	jne    0x406319
  406305:	mov    rbx,rax
  406308:	add    rax,0x1
  40630c:	movzx  edx,BYTE PTR [rax-0x1]
  406310:	add    r8d,0x1
  406314:	cmp    dl,0x30
  406317:	je     0x406305
  406319:	cmp    BYTE PTR [rdi+rdx*1],0x0
  40631d:	jne    0x406470
  406323:	movzx  r9d,BYTE PTR [rsi]
  406327:	test   r9b,r9b
  40632a:	je     0x40696a
  406330:	movzx  edx,BYTE PTR [rbx]
  406333:	cmp    r9b,dl
  406336:	jne    0x406713
  40633c:	mov    eax,0x1
  406341:	jmp    0x406351
  406343:	add    rax,0x1
  406347:	cmp    dl,BYTE PTR [rbx+rax*1-0x1]
  40634b:	jne    0x406710
  406351:	movzx  edx,BYTE PTR [rsi+rax*1]
  406355:	test   dl,dl
  406357:	jne    0x406343
  406359:	add    rax,rbx
  40635c:	movzx  ecx,BYTE PTR [rax]
  40635f:	movzx  r10d,BYTE PTR [rdi+rcx*1]
  406364:	mov    rdx,rcx
  406367:	test   r10b,r10b
  40636a:	jne    0x4067f0
  406370:	cmp    dl,0x50
  406373:	je     0x406620
  406379:	cmp    dl,0x70
  40637c:	je     0x406620
  406382:	mov    rbp,rax
  406385:	mov    r11d,0x1
  40638b:	xor    r12d,r12d
  40638e:	xor    r15d,r15d
  406391:	xor    r10d,r10d
  406394:	test   r8d,r8d
  406397:	jne    0x40639d
  406399:	lea    rax,[rbx-0x1]
  40639d:	test   r11d,r11d
  4063a0:	mov    QWORD PTR [r14],rax
  4063a3:	jne    0x4066d0
  4063a9:	test   r10d,r10d
  4063ac:	je     0x4064e0
  4063b2:	test   r15d,r15d
  4063b5:	mov    eax,DWORD PTR [r13+0xc]
  4063b9:	jne    0x406760
  4063bf:	cmp    eax,0x2
  4063c2:	je     0x406a08
  4063c8:	cmp    eax,0x3
  4063cb:	je     0x4069f2
  4063d1:	cmp    eax,0x1
  4063d4:	je     0x4067d8
  4063da:	mov    esi,DWORD PTR [r13+0x0]
  4063de:	mov    ebx,esi
  4063e0:	and    esi,0x1f
  4063e3:	sar    ebx,0x5
  4063e6:	cmp    esi,0x1
  4063e9:	mov    edi,ebx
  4063eb:	sbb    edi,0xffffffff
  4063ee:	xor    ecx,ecx
  4063f0:	mov    eax,edi
  4063f2:	sar    eax,1
  4063f4:	je     0x406407
  4063f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406400:	add    ecx,0x1
  406403:	sar    eax,1
  406405:	jne    0x406400
  406407:	call   0x407220
  40640c:	mov    rcx,QWORD PTR [rsp+0x88]
  406414:	test   ebx,ebx
  406416:	mov    QWORD PTR [rcx],rax
  406419:	mov    DWORD PTR [rax+0x14],edi
  40641c:	jle    0x406b28
  406422:	lea    ecx,[rbx-0x1]
  406425:	lea    rdx,[rax+0x18]
  406429:	lea    rcx,[rax+rcx*4+0x1c]
  40642e:	xchg   ax,ax
  406430:	mov    DWORD PTR [rdx],0xffffffff
  406436:	add    rdx,0x4
  40643a:	cmp    rdx,rcx
  40643d:	jne    0x406430
  40643f:	mov    edx,ebx
  406441:	cmp    edi,ebx
  406443:	jle    0x406458
  406445:	movsxd r8,edx
  406448:	mov    edx,0x20
  40644d:	mov    ecx,edx
  40644f:	sub    ecx,esi
  406451:	sar    edx,cl
  406453:	mov    DWORD PTR [rax+r8*4+0x18],edx
  406458:	mov    eax,DWORD PTR [r13+0x4]
  40645c:	mov    rdi,QWORD PTR [rsp+0x80]
  406464:	mov    DWORD PTR [rdi],eax
  406466:	mov    eax,0x11
  40646b:	jmp    0x4066d2
  406470:	movzx  eax,BYTE PTR [rbx]
  406473:	movzx  r9d,BYTE PTR [rsi]
  406477:	add    r8d,0x1
  40647b:	xor    r11d,r11d
  40647e:	xor    r12d,r12d
  406481:	movzx  r10d,BYTE PTR [rdi+rax*1]
  406486:	mov    rdx,rax
  406489:	test   r10b,r10b
  40648c:	mov    rax,rbx
  40648f:	je     0x4064a1
  406491:	add    rax,0x1
  406495:	movzx  ecx,BYTE PTR [rax]
  406498:	cmp    BYTE PTR [rdi+rcx*1],0x0
  40649c:	mov    rdx,rcx
  40649f:	jne    0x406491
  4064a1:	cmp    dl,r9b
  4064a4:	je     0x406720
  4064aa:	test   r12,r12
  4064ad:	movzx  edx,BYTE PTR [rax]
  4064b0:	je     0x4064b9
  4064b2:	sub    r12d,eax
  4064b5:	shl    r12d,0x2
  4064b9:	cmp    dl,0x50
  4064bc:	je     0x406629
  4064c2:	cmp    dl,0x70
  4064c5:	je     0x406629
  4064cb:	test   r11d,r11d
  4064ce:	mov    QWORD PTR [r14],rax
  4064d1:	mov    rbp,rax
  4064d4:	jne    0x4066d0
  4064da:	nop    WORD PTR [rax+rax*1+0x0]
  4064e0:	mov    rax,rbp
  4064e3:	xor    ecx,ecx
  4064e5:	sub    rax,rbx
  4064e8:	sub    eax,0x1
  4064eb:	cmp    eax,0x7
  4064ee:	jle    0x4064fa
  4064f0:	sar    eax,1
  4064f2:	add    ecx,0x1
  4064f5:	cmp    eax,0x7
  4064f8:	jg     0x4064f0
  4064fa:	call   0x407220
  4064ff:	cmp    BYTE PTR [rsi+0x1],0x0
  406503:	mov    r14,rax
  406506:	lea    r15,[rax+0x18]
  40650a:	je     0x406a1e
  406510:	mov    edx,0x1
  406515:	jmp    0x406523
  406517:	nop    WORD PTR [rax+rax*1+0x0]
  406520:	mov    rdx,rax
  406523:	cmp    BYTE PTR [rsi+rdx*1+0x1],0x0
  406528:	lea    rax,[rdx+0x1]
  40652c:	jne    0x406520
  40652e:	cmp    rbx,rbp
  406531:	jae    0x406a25
  406537:	add    rsi,rdx
  40653a:	mov    rax,r15
  40653d:	xor    r9d,r9d
  406540:	xor    r8d,r8d
  406543:	jmp    0x406571
  406545:	cmp    r8d,0x20
  406549:	je     0x4066e3
  40654f:	movzx  r10d,cl
  406553:	mov    ecx,r8d
  406556:	add    r8d,0x4
  40655a:	movzx  r10d,BYTE PTR [rdi+r10*1]
  40655f:	mov    rbp,r11
  406562:	and    r10d,0xf
  406566:	shl    r10d,cl
  406569:	or     r9d,r10d
  40656c:	cmp    rbx,rbp
  40656f:	jae    0x406588
  406571:	movzx  ecx,BYTE PTR [rbp-0x1]
  406575:	lea    r11,[rbp-0x1]
  406579:	cmp    cl,BYTE PTR [rsi]
  40657b:	jne    0x406545
  40657d:	sub    r11,rdx
  406580:	mov    rbp,r11
  406583:	cmp    rbx,rbp
  406586:	jb     0x406571
  406588:	bsr    edx,r9d
  40658c:	xor    edx,0x1f
  40658f:	mov    DWORD PTR [rax],r9d
  406592:	add    rax,0x4
  406596:	mov    esi,DWORD PTR [r13+0x0]
  40659a:	sub    rax,r15
  40659d:	sar    rax,0x2
  4065a1:	mov    DWORD PTR [r14+0x14],eax
  4065a5:	shl    eax,0x5
  4065a8:	sub    eax,edx
  4065aa:	cmp    eax,esi
  4065ac:	jg     0x406858
  4065b2:	mov    edi,0x0
  4065b7:	jl     0x40682e
  4065bd:	cmp    r12d,DWORD PTR [r13+0x8]
  4065c1:	jg     0x4067d0
  4065c7:	mov    eax,DWORD PTR [r13+0x4]
  4065cb:	cmp    r12d,eax
  4065ce:	jge    0x4068b9
  4065d4:	mov    ebx,eax
  4065d6:	sub    ebx,r12d
  4065d9:	cmp    esi,ebx
  4065db:	jg     0x406917
  4065e1:	mov    edx,DWORD PTR [r13+0xc]
  4065e5:	cmp    edx,0x2
  4065e8:	je     0x406af2
  4065ee:	cmp    edx,0x3
  4065f1:	je     0x406acf
  4065f7:	cmp    edx,0x1
  4065fa:	je     0x406b02
  406600:	mov    rcx,r14
  406603:	call   0x407330
  406608:	call   0x408068
  40660d:	mov    DWORD PTR [rax],0x22
  406613:	mov    eax,0x50
  406618:	jmp    0x4066d2
  40661d:	nop    DWORD PTR [rax]
  406620:	xor    r12d,r12d
  406623:	mov    r11d,0x1
  406629:	movzx  edx,BYTE PTR [rax+0x1]
  40662d:	cmp    dl,0x2b
  406630:	je     0x406850
  406636:	cmp    dl,0x2d
  406639:	je     0x406731
  40663f:	movzx  edx,BYTE PTR [rdi+rdx*1]
  406643:	xor    r15d,r15d
  406646:	lea    r9,[rax+0x1]
  40664a:	lea    ecx,[rdx-0x1]
  40664d:	cmp    cl,0x18
  406650:	ja     0x40674f
  406656:	lea    rcx,[r9+0x1]
  40665a:	movzx  r9d,BYTE PTR [r9+0x1]
  40665f:	sub    edx,0x10
  406662:	xor    r10d,r10d
  406665:	movzx  ebp,BYTE PTR [rdi+r9*1]
  40666a:	mov    r9d,ebp
  40666d:	sub    r9d,0x1
  406671:	cmp    r9b,0x18
  406675:	ja     0x4066b1
  406677:	nop    WORD PTR [rax+rax*1+0x0]
  406680:	test   edx,0xf8000000
  406686:	mov    r9d,0x1
  40668c:	lea    edx,[rdx+rdx*4]
  40668f:	cmovne r10d,r9d
  406693:	add    rcx,0x1
  406697:	movzx  r9d,BYTE PTR [rcx]
  40669b:	lea    edx,[rbp+rdx*2-0x10]
  40669f:	movzx  ebp,BYTE PTR [rdi+r9*1]
  4066a4:	mov    r9d,ebp
  4066a7:	sub    r9d,0x1
  4066ab:	cmp    r9b,0x18
  4066af:	jbe    0x406680
  4066b1:	mov    r9d,r15d
  4066b4:	mov    rbp,rax
  4066b7:	mov    rax,rcx
  4066ba:	neg    r9d
  4066bd:	xor    edx,r9d
  4066c0:	add    edx,r15d
  4066c3:	add    r12d,edx
  4066c6:	jmp    0x406394
  4066cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4066d0:	xor    eax,eax
  4066d2:	add    rsp,0x28
  4066d6:	pop    rbx
  4066d7:	pop    rsi
  4066d8:	pop    rdi
  4066d9:	pop    rbp
  4066da:	pop    r12
  4066dc:	pop    r13
  4066de:	pop    r14
  4066e0:	pop    r15
  4066e2:	ret    
  4066e3:	mov    DWORD PTR [rax],r9d
  4066e6:	mov    r8d,0x4
  4066ec:	movzx  r10d,BYTE PTR [rbp-0x1]
  4066f1:	add    rax,0x4
  4066f5:	xor    r9d,r9d
  4066f8:	xor    ecx,ecx
  4066fa:	jmp    0x40655a
  4066ff:	nop
  406700:	call   0x406cb0
  406705:	jmp    0x4062df
  40670a:	nop    WORD PTR [rax+rax*1+0x0]
  406710:	mov    edx,r9d
  406713:	mov    rax,rbx
  406716:	jmp    0x406370
  40671b:	nop    DWORD PTR [rax+rax*1+0x0]
  406720:	test   r12,r12
  406723:	je     0x406a35
  406729:	movzx  edx,BYTE PTR [rax]
  40672c:	jmp    0x4064b2
  406731:	mov    r15d,0x1
  406737:	movzx  edx,BYTE PTR [rax+0x2]
  40673b:	lea    r9,[rax+0x2]
  40673f:	movzx  edx,BYTE PTR [rdi+rdx*1]
  406743:	lea    ecx,[rdx-0x1]
  406746:	cmp    cl,0x18
  406749:	jbe    0x406656
  40674f:	mov    rbp,rax
  406752:	xor    r10d,r10d
  406755:	jmp    0x406394
  40675a:	nop    WORD PTR [rax+rax*1+0x0]
  406760:	cmp    eax,0x2
  406763:	je     0x406901
  406769:	cmp    eax,0x3
  40676c:	jne    0x406608
  406772:	mov    r10d,DWORD PTR [rsp+0x90]
  40677a:	test   r10d,r10d
  40677d:	je     0x406608
  406783:	xor    ecx,ecx
  406785:	call   0x407220
  40678a:	mov    r14,rax
  40678d:	mov    DWORD PTR [rax+0x14],0x1
  406794:	mov    DWORD PTR [rax+0x18],0x1
  40679b:	mov    eax,DWORD PTR [r13+0x4]
  40679f:	mov    rdi,QWORD PTR [rsp+0x88]
  4067a7:	mov    QWORD PTR [rdi],r14
  4067aa:	mov    rdi,QWORD PTR [rsp+0x80]
  4067b2:	mov    DWORD PTR [rdi],eax
  4067b4:	call   0x408068
  4067b9:	mov    DWORD PTR [rax],0x22
  4067bf:	mov    eax,0x62
  4067c4:	jmp    0x4066d2
  4067c9:	nop    DWORD PTR [rax+0x0]
  4067d0:	mov    rcx,r14
  4067d3:	call   0x407330
  4067d8:	call   0x408068
  4067dd:	mov    DWORD PTR [rax],0x22
  4067e3:	mov    eax,0xa3
  4067e8:	jmp    0x4066d2
  4067ed:	nop    DWORD PTR [rax]
  4067f0:	cmp    cl,0x30
  4067f3:	mov    rbx,rax
  4067f6:	jne    0x406816
  4067f8:	nop    DWORD PTR [rax+rax*1+0x0]
  406800:	add    rbx,0x1
  406804:	movzx  ecx,BYTE PTR [rbx]
  406807:	cmp    cl,0x30
  40680a:	je     0x406800
  40680c:	movzx  edx,cl
  40680f:	movzx  r10d,BYTE PTR [rdi+rdx*1]
  406814:	mov    edx,ecx
  406816:	xor    r11d,r11d
  406819:	test   r10b,r10b
  40681c:	mov    r12,rax
  40681f:	sete   r11b
  406823:	mov    r8d,0x1
  406829:	jmp    0x406489
  40682e:	mov    ebx,esi
  406830:	mov    rcx,r14
  406833:	sub    ebx,eax
  406835:	mov    edx,ebx
  406837:	sub    r12d,ebx
  40683a:	call   0x407730
  40683f:	mov    r14,rax
  406842:	lea    r15,[rax+0x18]
  406846:	jmp    0x4065bd
  40684b:	nop    DWORD PTR [rax+rax*1+0x0]
  406850:	xor    r15d,r15d
  406853:	jmp    0x406737
  406858:	mov    ebx,eax
  40685a:	mov    rcx,r14
  40685d:	xor    edi,edi
  40685f:	sub    ebx,esi
  406861:	mov    edx,ebx
  406863:	call   0x407ec0
  406868:	test   eax,eax
  40686a:	je     0x4068a7
  40686c:	lea    ecx,[rbx-0x1]
  40686f:	mov    r8d,0x1
  406875:	mov    dil,0x1
  406878:	mov    eax,ecx
  40687a:	shl    r8d,cl
  40687d:	sar    eax,0x5
  406880:	cdqe   
  406882:	test   DWORD PTR [r15+rax*4],r8d
  406886:	je     0x4068a7
  406888:	test   ecx,ecx
  40688a:	jle    0x406a9f
  406890:	mov    edx,ecx
  406892:	mov    rcx,r14
  406895:	call   0x407ec0
  40689a:	test   eax,eax
  40689c:	je     0x406a9f
  4068a2:	mov    edi,0x3
  4068a7:	mov    edx,ebx
  4068a9:	mov    rcx,r14
  4068ac:	add    r12d,ebx
  4068af:	call   0x406b70
  4068b4:	jmp    0x4065bd
  4068b9:	mov    ebx,0x1
  4068be:	test   edi,edi
  4068c0:	je     0x4068e4
  4068c2:	mov    eax,DWORD PTR [r13+0xc]
  4068c6:	cmp    eax,0x2
  4068c9:	je     0x406971
  4068cf:	cmp    eax,0x3
  4068d2:	je     0x406984
  4068d8:	cmp    eax,0x1
  4068db:	je     0x406aa9
  4068e1:	or     ebx,0x10
  4068e4:	mov    rax,QWORD PTR [rsp+0x88]
  4068ec:	mov    QWORD PTR [rax],r14
  4068ef:	mov    rax,QWORD PTR [rsp+0x80]
  4068f7:	mov    DWORD PTR [rax],r12d
  4068fa:	mov    eax,ebx
  4068fc:	jmp    0x4066d2
  406901:	mov    r11d,DWORD PTR [rsp+0x90]
  406909:	test   r11d,r11d
  40690c:	jne    0x406608
  406912:	jmp    0x406783
  406917:	test   edi,edi
  406919:	lea    ebp,[rbx-0x1]
  40691c:	jne    0x406a95
  406922:	test   ebp,ebp
  406924:	jle    0x406932
  406926:	mov    edx,ebp
  406928:	mov    rcx,r14
  40692b:	call   0x407ec0
  406930:	mov    edi,eax
  406932:	mov    eax,ebp
  406934:	mov    ecx,ebp
  406936:	mov    edx,edi
  406938:	sar    eax,0x5
  40693b:	mov    r8d,0x1
  406941:	or     edx,0x2
  406944:	cdqe   
  406946:	shl    r8d,cl
  406949:	mov    rcx,r14
  40694c:	test   DWORD PTR [r15+rax*4],r8d
  406950:	cmovne edi,edx
  406953:	mov    edx,ebx
  406955:	sub    esi,ebx
  406957:	call   0x406b70
  40695c:	mov    ebx,0x2
  406961:	mov    r12d,DWORD PTR [r13+0x4]
  406965:	jmp    0x4068be
  40696a:	xor    eax,eax
  40696c:	jmp    0x406359
  406971:	mov    eax,0x1
  406976:	sub    eax,DWORD PTR [rsp+0x90]
  40697d:	mov    DWORD PTR [rsp+0x90],eax
  406984:	mov    eax,DWORD PTR [rsp+0x90]
  40698b:	test   eax,eax
  40698d:	je     0x4068e1
  406993:	mov    rcx,r14
  406996:	movsxd rdi,DWORD PTR [r14+0x14]
  40699a:	call   0x403bb0
  40699f:	cmp    ebx,0x2
  4069a2:	mov    r14,rax
  4069a5:	lea    r8,[rax+0x18]
  4069a9:	je     0x406b2f
  4069af:	cmp    edi,DWORD PTR [rax+0x14]
  4069b2:	jl     0x4069cd
  4069b4:	and    esi,0x1f
  4069b7:	je     0x4069e8
  4069b9:	bsr    eax,DWORD PTR [r8+rdi*4-0x4]
  4069bf:	mov    edx,0x20
  4069c4:	sub    edx,esi
  4069c6:	xor    eax,0x1f
  4069c9:	cmp    edx,eax
  4069cb:	jle    0x4069e8
  4069cd:	mov    edx,0x1
  4069d2:	mov    rcx,r14
  4069d5:	add    r12d,0x1
  4069d9:	call   0x406b70
  4069de:	cmp    r12d,DWORD PTR [r13+0x8]
  4069e2:	jg     0x4067d0
  4069e8:	mov    ebx,0x21
  4069ed:	jmp    0x4068e4
  4069f2:	mov    r8d,DWORD PTR [rsp+0x90]
  4069fa:	test   r8d,r8d
  4069fd:	jne    0x4067d8
  406a03:	jmp    0x4063da
  406a08:	mov    r9d,DWORD PTR [rsp+0x90]
  406a10:	test   r9d,r9d
  406a13:	je     0x4067d8
  406a19:	jmp    0x4063da
  406a1e:	xor    edx,edx
  406a20:	jmp    0x40652e
  406a25:	mov    rax,r15
  406a28:	mov    edx,0x20
  406a2d:	xor    r9d,r9d
  406a30:	jmp    0x40658f
  406a35:	movzx  edx,BYTE PTR [rsi+0x1]
  406a39:	test   dl,dl
  406a3b:	je     0x406b64
  406a41:	cmp    dl,BYTE PTR [rax+0x1]
  406a44:	jne    0x406ac4
  406a46:	mov    r12d,0x2
  406a4c:	jmp    0x406a5b
  406a4e:	xchg   ax,ax
  406a50:	add    r12,0x1
  406a54:	cmp    dl,BYTE PTR [rax+r12*1-0x1]
  406a59:	jne    0x406ac4
  406a5b:	movzx  edx,BYTE PTR [rsi+r12*1]
  406a60:	test   dl,dl
  406a62:	jne    0x406a50
  406a64:	add    r12,rax
  406a67:	movzx  eax,BYTE PTR [r12]
  406a6c:	cmp    BYTE PTR [rdi+rax*1],0x0
  406a70:	mov    rdx,rax
  406a73:	mov    rax,r12
  406a76:	je     0x4064b2
  406a7c:	nop    DWORD PTR [rax+0x0]
  406a80:	add    rax,0x1
  406a84:	movzx  ecx,BYTE PTR [rax]
  406a87:	cmp    BYTE PTR [rdi+rcx*1],0x0
  406a8b:	mov    rdx,rcx
  406a8e:	jne    0x406a80
  406a90:	jmp    0x4064b2
  406a95:	mov    edi,0x1
  406a9a:	jmp    0x406932
  406a9f:	mov    edi,0x2
  406aa4:	jmp    0x4068a7
  406aa9:	test   dil,0x2
  406aad:	je     0x4068e1
  406ab3:	or     edi,DWORD PTR [r15]
  406ab6:	and    edi,0x1
  406ab9:	jne    0x406993
  406abf:	jmp    0x4068e1
  406ac4:	movzx  edx,BYTE PTR [rax]
  406ac7:	xor    r12d,r12d
  406aca:	jmp    0x4064b9
  406acf:	mov    edx,DWORD PTR [rsp+0x90]
  406ad6:	test   edx,edx
  406ad8:	je     0x406600
  406ade:	mov    DWORD PTR [r14+0x14],0x1
  406ae6:	mov    DWORD PTR [r15],0x1
  406aed:	jmp    0x40679f
  406af2:	mov    ecx,DWORD PTR [rsp+0x90]
  406af9:	test   ecx,ecx
  406afb:	je     0x406ade
  406afd:	jmp    0x406600
  406b02:	cmp    ebx,esi
  406b04:	jne    0x406600
  406b0a:	cmp    esi,0x1
  406b0d:	jle    0x406ade
  406b0f:	lea    edx,[rsi-0x1]
  406b12:	mov    rcx,r14
  406b15:	call   0x407ec0
  406b1a:	test   eax,eax
  406b1c:	je     0x406600
  406b22:	mov    eax,DWORD PTR [r13+0x4]
  406b26:	jmp    0x406ade
  406b28:	xor    edx,edx
  406b2a:	jmp    0x406441
  406b2f:	mov    eax,DWORD PTR [r13+0x0]
  406b33:	mov    bl,0x22
  406b35:	sub    eax,0x1
  406b38:	cmp    eax,esi
  406b3a:	jne    0x4068e4
  406b40:	mov    edx,esi
  406b42:	mov    eax,0x1
  406b47:	mov    ecx,esi
  406b49:	sar    edx,0x5
  406b4c:	shl    eax,cl
  406b4e:	movsxd rdx,edx
  406b51:	and    eax,DWORD PTR [r8+rdx*4]
  406b55:	cmp    eax,0x1
  406b58:	sbb    ebx,ebx
  406b5a:	not    ebx
  406b5c:	add    ebx,0x22
  406b5f:	jmp    0x4068e4
  406b64:	mov    r12d,0x1
  406b6a:	jmp    0x406a64
  406b6f:	nop
  406b70:	push   rbp
  406b71:	push   rdi
  406b72:	push   rsi
  406b73:	push   rbx
  406b74:	mov    rsi,rcx
  406b77:	lea    r10,[rcx+0x18]
  406b7b:	movsxd rcx,DWORD PTR [rcx+0x14]
  406b7f:	mov    eax,edx
  406b81:	sar    eax,0x5
  406b84:	cmp    eax,ecx
  406b86:	jge    0x406c10
  406b8c:	cdqe   
  406b8e:	and    edx,0x1f
  406b91:	lea    rbx,[r10+rcx*4]
  406b95:	lea    rdi,[r10+rax*4]
  406b99:	je     0x406c23
  406b9f:	mov    r9d,DWORD PTR [rdi]
  406ba2:	lea    r8,[rdi+0x4]
  406ba6:	mov    ebp,0x20
  406bab:	mov    ecx,edx
  406bad:	sub    ebp,edx
  406baf:	shr    r9d,cl
  406bb2:	cmp    rbx,r8
  406bb5:	jbe    0x406c68
  406bbb:	mov    r11,r10
  406bbe:	xchg   ax,ax
  406bc0:	mov    eax,DWORD PTR [r8]
  406bc3:	mov    ecx,ebp
  406bc5:	add    r11,0x4
  406bc9:	add    r8,0x4
  406bcd:	shl    eax,cl
  406bcf:	mov    ecx,edx
  406bd1:	or     eax,r9d
  406bd4:	mov    DWORD PTR [r11-0x4],eax
  406bd8:	mov    r9d,DWORD PTR [r8-0x4]
  406bdc:	shr    r9d,cl
  406bdf:	cmp    rbx,r8
  406be2:	ja     0x406bc0
  406be4:	sub    rbx,rdi
  406be7:	lea    rax,[rbx-0x5]
  406beb:	shr    rax,0x2
  406bef:	lea    rax,[r10+rax*4+0x4]
  406bf4:	test   r9d,r9d
  406bf7:	mov    DWORD PTR [rax],r9d
  406bfa:	je     0x406c00
  406bfc:	add    rax,0x4
  406c00:	sub    rax,r10
  406c03:	shr    rax,0x2
  406c07:	jmp    0x406c5c
  406c09:	nop    DWORD PTR [rax+0x0]
  406c10:	mov    DWORD PTR [rsi+0x14],0x0
  406c17:	mov    DWORD PTR [rsi+0x18],0x0
  406c1e:	pop    rbx
  406c1f:	pop    rsi
  406c20:	pop    rdi
  406c21:	pop    rbp
  406c22:	ret    
  406c23:	cmp    rbx,rdi
  406c26:	mov    rdx,r10
  406c29:	mov    rax,rdi
  406c2c:	jbe    0x406c10
  406c2e:	xchg   ax,ax
  406c30:	add    rax,0x4
  406c34:	mov    r8d,DWORD PTR [rax-0x4]
  406c38:	add    rdx,0x4
  406c3c:	cmp    rbx,rax
  406c3f:	mov    DWORD PTR [rdx-0x4],r8d
  406c43:	ja     0x406c30
  406c45:	not    rdi
  406c48:	lea    rax,[rdi+rbx*1]
  406c4c:	shr    rax,0x2
  406c50:	lea    rax,[rax*4+0x4]
  406c58:	shr    rax,0x2
  406c5c:	test   eax,eax
  406c5e:	mov    DWORD PTR [rsi+0x14],eax
  406c61:	je     0x406c17
  406c63:	pop    rbx
  406c64:	pop    rsi
  406c65:	pop    rdi
  406c66:	pop    rbp
  406c67:	ret    
  406c68:	mov    rax,r10
  406c6b:	jmp    0x406bf4
  406c6d:	nop    DWORD PTR [rax]
  406c70:	movsxd rax,DWORD PTR [rcx+0x14]
  406c74:	lea    rdx,[rcx+0x18]
  406c78:	lea    r8,[rdx+rax*4]
  406c7c:	cmp    rdx,r8
  406c7f:	jae    0x406cab
  406c81:	mov    ecx,DWORD PTR [rcx+0x18]
  406c84:	xor    eax,eax
  406c86:	test   ecx,ecx
  406c88:	je     0x406c96
  406c8a:	jmp    0x406ca4
  406c8c:	nop    DWORD PTR [rax+0x0]
  406c90:	mov    ecx,DWORD PTR [rdx]
  406c92:	test   ecx,ecx
  406c94:	jne    0x406ca4
  406c96:	add    rdx,0x4
  406c9a:	add    eax,0x20
  406c9d:	cmp    r8,rdx
  406ca0:	ja     0x406c90
  406ca2:	repz ret 
  406ca4:	tzcnt  ecx,ecx
  406ca8:	add    eax,ecx
  406caa:	ret    
  406cab:	xor    eax,eax
  406cad:	ret    
  406cae:	nop
  406caf:	nop
  406cb0:	lea    r8,[rip+0x4ef7]        # 0x40bbae
  406cb7:	lea    rdx,[rip+0x9842]        # 0x410500
  406cbe:	mov    ecx,0x10
  406cc3:	mov    eax,0x30
  406cc8:	nop    DWORD PTR [rax+rax*1+0x0]
  406cd0:	mov    BYTE PTR [rdx+rax*1],cl
  406cd3:	movzx  eax,BYTE PTR [r8+0x1]
  406cd8:	add    ecx,0x1
  406cdb:	add    r8,0x1
  406cdf:	test   al,al
  406ce1:	jne    0x406cd0
  406ce3:	lea    r8,[rip+0x4ebd]        # 0x40bba7
  406cea:	mov    ecx,0x1a
  406cef:	mov    eax,0x61
  406cf4:	mov    BYTE PTR [rdx+rax*1],cl
  406cf7:	movzx  eax,BYTE PTR [r8+0x1]
  406cfc:	add    ecx,0x1
  406cff:	add    r8,0x1
  406d03:	test   al,al
  406d05:	jne    0x406cf4
  406d07:	lea    r8,[rip+0x4e92]        # 0x40bba0
  406d0e:	mov    ecx,0x1a
  406d13:	mov    eax,0x41
  406d18:	nop    DWORD PTR [rax+rax*1+0x0]
  406d20:	mov    BYTE PTR [rdx+rax*1],cl
  406d23:	movzx  eax,BYTE PTR [r8+0x1]
  406d28:	add    ecx,0x1
  406d2b:	add    r8,0x1
  406d2f:	test   al,al
  406d31:	jne    0x406d20
  406d33:	ret    
  406d34:	nop
  406d35:	nop
  406d36:	nop
  406d37:	nop
  406d38:	nop
  406d39:	nop
  406d3a:	nop
  406d3b:	nop
  406d3c:	nop
  406d3d:	nop
  406d3e:	nop
  406d3f:	nop
  406d40:	push   r15
  406d42:	push   r14
  406d44:	push   r13
  406d46:	push   r12
  406d48:	push   rbp
  406d49:	push   rdi
  406d4a:	push   rsi
  406d4b:	push   rbx
  406d4c:	sub    rsp,0x48
  406d50:	mov    r14,QWORD PTR [rip+0x5069]        # 0x40bdc0
  406d57:	mov    QWORD PTR [rsp+0x90],rcx
  406d5f:	cmp    BYTE PTR [r14+0x30],0x0
  406d64:	je     0x407036
  406d6a:	mov    eax,DWORD PTR [rdx]
  406d6c:	mov    edx,eax
  406d6e:	sar    edx,0x5
  406d71:	and    eax,0x1f
  406d74:	movsxd rdx,edx
  406d77:	mov    DWORD PTR [rsp+0x3c],eax
  406d7b:	mov    rax,QWORD PTR [rsp+0x90]
  406d83:	lea    rdi,[r8+rdx*4]
  406d87:	lea    rdx,[rdi+0x4]
  406d8b:	mov    rax,QWORD PTR [rax]
  406d8e:	cmove  rdx,rdi
  406d92:	mov    QWORD PTR [rsp+0x30],rdx
  406d97:	lea    rsi,[rdx-0x4]
  406d9b:	mov    DWORD PTR [rdx-0x4],0x0
  406da2:	jmp    0x406da8
  406da4:	add    rax,0x1
  406da8:	movzx  edx,BYTE PTR [rax+0x1]
  406dac:	mov    ecx,edx
  406dae:	sub    edx,0x1
  406db1:	cmp    edx,0x1f
  406db4:	jbe    0x406da4
  406db6:	cmp    cl,0x30
  406db9:	je     0x407054
  406dbf:	movzx  edx,BYTE PTR [rax+0x1]
  406dc3:	xor    r9d,r9d
  406dc6:	xor    r15d,r15d
  406dc9:	xor    r12d,r12d
  406dcc:	test   edx,edx
  406dce:	mov    rbp,rsi
  406dd1:	mov    r11,rsi
  406dd4:	lea    rbx,[rax+0x1]
  406dd8:	je     0x406e80
  406dde:	xchg   ax,ax
  406de0:	mov    ecx,edx
  406de2:	movzx  ecx,BYTE PTR [r14+rcx*1]
  406de7:	test   cl,cl
  406de9:	jne    0x406f54
  406def:	cmp    edx,0x20
  406df2:	ja     0x407005
  406df8:	cmp    r12d,r15d
  406dfb:	jle    0x406f95
  406e01:	cmp    r9d,0x7
  406e05:	jg     0x406e5a
  406e07:	cmp    r11,rbp
  406e0a:	jae    0x406e5a
  406e0c:	mov    edi,0x8
  406e11:	mov    edx,DWORD PTR [r11]
  406e14:	mov    r13d,0x20
  406e1a:	sub    edi,r9d
  406e1d:	mov    QWORD PTR [rsp+0x28],rax
  406e22:	mov    r9,r11
  406e25:	shl    edi,0x2
  406e28:	sub    r13d,edi
  406e2b:	nop    DWORD PTR [rax+rax*1+0x0]
  406e30:	mov    r10d,DWORD PTR [r9+0x4]
  406e34:	mov    ecx,r13d
  406e37:	add    r9,0x4
  406e3b:	mov    eax,r10d
  406e3e:	shl    eax,cl
  406e40:	mov    ecx,edi
  406e42:	or     edx,eax
  406e44:	mov    DWORD PTR [r9-0x4],edx
  406e48:	mov    edx,r10d
  406e4b:	shr    edx,cl
  406e4d:	mov    DWORD PTR [r9],edx
  406e50:	cmp    rbp,r9
  406e53:	ja     0x406e30
  406e55:	mov    rax,QWORD PTR [rsp+0x28]
  406e5a:	cmp    r11,r8
  406e5d:	ja     0x406f80
  406e63:	mov    rax,rbx
  406e66:	mov    r9d,0x8
  406e6c:	nop    DWORD PTR [rax+0x0]
  406e70:	movzx  edx,BYTE PTR [rax+0x1]
  406e74:	lea    rbx,[rax+0x1]
  406e78:	test   edx,edx
  406e7a:	jne    0x406de0
  406e80:	test   r12d,r12d
  406e83:	mov    eax,0x4
  406e88:	je     0x406f43
  406e8e:	mov    r10,r11
  406e91:	cmp    r9d,0x7
  406e95:	jg     0x406ee3
  406e97:	cmp    rbp,r11
  406e9a:	jbe    0x406ee3
  406e9c:	mov    edi,0x8
  406ea1:	mov    eax,DWORD PTR [r11]
  406ea4:	mov    r12d,0x20
  406eaa:	sub    edi,r9d
  406ead:	mov    r9,r11
  406eb0:	shl    edi,0x2
  406eb3:	sub    r12d,edi
  406eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ec0:	mov    ebx,DWORD PTR [r9+0x4]
  406ec4:	mov    ecx,r12d
  406ec7:	add    r9,0x4
  406ecb:	mov    edx,ebx
  406ecd:	shl    edx,cl
  406ecf:	mov    ecx,edi
  406ed1:	or     eax,edx
  406ed3:	mov    DWORD PTR [r9-0x4],eax
  406ed7:	mov    eax,ebx
  406ed9:	shr    eax,cl
  406edb:	mov    DWORD PTR [r9],eax
  406ede:	cmp    rbp,r9
  406ee1:	ja     0x406ec0
  406ee3:	cmp    r8,r11
  406ee6:	jae    0x407084
  406eec:	mov    rax,r8
  406eef:	nop
  406ef0:	add    r10,0x4
  406ef4:	mov    edx,DWORD PTR [r10-0x4]
  406ef8:	add    rax,0x4
  406efc:	cmp    rsi,r10
  406eff:	mov    DWORD PTR [rax-0x4],edx
  406f02:	jae    0x406ef0
  406f04:	add    rax,0x4
  406f08:	mov    DWORD PTR [rax-0x4],0x0
  406f0f:	cmp    rsi,rax
  406f12:	jae    0x406f04
  406f14:	mov    rax,QWORD PTR [rsp+0x30]
  406f19:	mov    eax,DWORD PTR [rax-0x4]
  406f1c:	test   eax,eax
  406f1e:	je     0x406f33
  406f20:	jmp    0x40707a
  406f25:	sub    rsi,0x4
  406f29:	mov    eax,DWORD PTR [rsi]
  406f2b:	test   eax,eax
  406f2d:	jne    0x40707a
  406f33:	cmp    r8,rsi
  406f36:	jne    0x406f25
  406f38:	mov    DWORD PTR [rsi],0x1
  406f3e:	mov    eax,0x5
  406f43:	add    rsp,0x48
  406f47:	pop    rbx
  406f48:	pop    rsi
  406f49:	pop    rdi
  406f4a:	pop    rbp
  406f4b:	pop    r12
  406f4d:	pop    r13
  406f4f:	pop    r14
  406f51:	pop    r15
  406f53:	ret    
  406f54:	add    r9d,0x1
  406f58:	add    r12d,0x1
  406f5c:	cmp    r9d,0x8
  406f60:	jg     0x406fe0
  406f62:	mov    eax,DWORD PTR [r11]
  406f65:	shl    eax,0x4
  406f68:	and    ecx,0xf
  406f6b:	or     ecx,eax
  406f6d:	mov    rax,rbx
  406f70:	mov    DWORD PTR [r11],ecx
  406f73:	jmp    0x406e70
  406f78:	nop    DWORD PTR [rax+rax*1+0x0]
  406f80:	lea    rbp,[r11-0x4]
  406f84:	mov    DWORD PTR [r11-0x4],0x0
  406f8c:	mov    r15d,r12d
  406f8f:	xor    r9d,r9d
  406f92:	mov    r11,rbp
  406f95:	movzx  edx,BYTE PTR [rax+0x2]
  406f99:	mov    rax,rbx
  406f9c:	cmp    dl,0x20
  406f9f:	ja     0x406fae
  406fa1:	add    rax,0x1
  406fa5:	movzx  edx,BYTE PTR [rax+0x1]
  406fa9:	cmp    dl,0x20
  406fac:	jbe    0x406fa1
  406fae:	cmp    dl,0x30
  406fb1:	jne    0x406e70
  406fb7:	movzx  edx,BYTE PTR [rax+0x2]
  406fbb:	and    edx,0xffffffdf
  406fbe:	cmp    dl,0x58
  406fc1:	jne    0x406e70
  406fc7:	cmp    BYTE PTR [rax+0x3],0x21
  406fcb:	lea    rdx,[rax+0x2]
  406fcf:	cmovae rax,rdx
  406fd3:	jmp    0x406e70
  406fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  406fe0:	cmp    r11,r8
  406fe3:	mov    rax,rbx
  406fe6:	jbe    0x406e70
  406fec:	mov    DWORD PTR [r11-0x4],0x0
  406ff4:	xor    eax,eax
  406ff6:	sub    r11,0x4
  406ffa:	mov    r9d,0x1
  407000:	jmp    0x406f68
  407005:	cmp    edx,0x29
  407008:	mov    rcx,rbx
  40700b:	sete   dl
  40700e:	test   r12d,r12d
  407011:	je     0x4070b0
  407017:	test   dl,dl
  407019:	je     0x4070b4
  40701f:	mov    rbx,QWORD PTR [rsp+0x90]
  407027:	add    rax,0x2
  40702b:	mov    r10,r11
  40702e:	mov    QWORD PTR [rbx],rax
  407031:	jmp    0x406e91
  407036:	mov    QWORD PTR [rsp+0x30],r8
  40703b:	mov    QWORD PTR [rsp+0x28],rdx
  407040:	call   0x406cb0
  407045:	mov    r8,QWORD PTR [rsp+0x30]
  40704a:	mov    rdx,QWORD PTR [rsp+0x28]
  40704f:	jmp    0x406d6a
  407054:	movzx  edx,BYTE PTR [rax+0x2]
  407058:	and    edx,0xffffffdf
  40705b:	cmp    dl,0x58
  40705e:	jne    0x406dbf
  407064:	movzx  edx,BYTE PTR [rax+0x3]
  407068:	cmp    dl,0x20
  40706b:	jbe    0x406dbf
  407071:	add    rax,0x2
  407075:	jmp    0x406dc3
  40707a:	mov    eax,0x5
  40707f:	jmp    0x406f43
  407084:	mov    edx,DWORD PTR [rsp+0x3c]
  407088:	test   edx,edx
  40708a:	je     0x406f14
  407090:	mov    ecx,0x20
  407095:	sub    ecx,DWORD PTR [rsp+0x3c]
  407099:	mov    rbx,QWORD PTR [rsp+0x30]
  40709e:	mov    eax,0xffffffff
  4070a3:	shr    eax,cl
  4070a5:	and    eax,DWORD PTR [rbx-0x4]
  4070a8:	mov    DWORD PTR [rbx-0x4],eax
  4070ab:	jmp    0x406f1c
  4070b0:	test   dl,dl
  4070b2:	jne    0x4070d2
  4070b4:	movsx  eax,BYTE PTR [rbx+0x1]
  4070b8:	lea    rcx,[rbx+0x1]
  4070bc:	test   eax,eax
  4070be:	jne    0x4070cd
  4070c0:	jmp    0x4070eb
  4070c2:	add    rcx,0x1
  4070c6:	movsx  eax,BYTE PTR [rcx]
  4070c9:	test   eax,eax
  4070cb:	je     0x4070eb
  4070cd:	cmp    eax,0x29
  4070d0:	jne    0x4070c2
  4070d2:	mov    rax,QWORD PTR [rsp+0x90]
  4070da:	add    rcx,0x1
  4070de:	mov    QWORD PTR [rax],rcx
  4070e1:	mov    eax,0x4
  4070e6:	jmp    0x406f43
  4070eb:	mov    al,0x4
  4070ed:	jmp    0x406f43
  4070f2:	nop
  4070f3:	nop
  4070f4:	nop
  4070f5:	nop
  4070f6:	nop
  4070f7:	nop
  4070f8:	nop
  4070f9:	nop
  4070fa:	nop
  4070fb:	nop
  4070fc:	nop
  4070fd:	nop
  4070fe:	nop
  4070ff:	nop
  407100:	push   rsi
  407101:	push   rbx
  407102:	sub    rsp,0x28
  407106:	mov    eax,DWORD PTR [rip+0x92c4]        # 0x4103d0
  40710c:	movsxd rsi,ecx
  40710f:	cmp    eax,0x2
  407112:	je     0x40717d
  407114:	test   eax,eax
  407116:	je     0x407142
  407118:	cmp    eax,0x1
  40711b:	jne    0x40713b
  40711d:	mov    rbx,QWORD PTR [rip+0xa37c]        # 0x4114a0
  407124:	mov    ecx,0x1
  407129:	call   rbx
  40712b:	mov    eax,DWORD PTR [rip+0x929f]        # 0x4103d0
  407131:	cmp    eax,0x1
  407134:	je     0x407124
  407136:	cmp    eax,0x2
  407139:	je     0x40717d
  40713b:	add    rsp,0x28
  40713f:	pop    rbx
  407140:	pop    rsi
  407141:	ret    
  407142:	mov    al,0x1
  407144:	xchg   DWORD PTR [rip+0x9286],eax        # 0x4103d0
  40714a:	test   eax,eax
  40714c:	jne    0x4071a0
  40714e:	lea    rcx,[rip+0x92ab]        # 0x410400
  407155:	mov    rbx,QWORD PTR [rip+0xa304]        # 0x411460
  40715c:	call   rbx
  40715e:	lea    rcx,[rip+0x92c3]        # 0x410428
  407165:	call   rbx
  407167:	lea    rcx,[rip+0x62]        # 0x4071d0
  40716e:	call   0x401f90
  407173:	mov    DWORD PTR [rip+0x9253],0x2        # 0x4103d0
  40717d:	lea    rdx,[rsi+rsi*4]
  407181:	lea    rax,[rip+0x9278]        # 0x410400
  407188:	lea    rcx,[rax+rdx*8]
  40718c:	mov    rax,QWORD PTR [rip+0xa28d]        # 0x411420
  407193:	add    rsp,0x28
  407197:	pop    rbx
  407198:	pop    rsi
  407199:	rex.W jmp rax
  40719c:	nop    DWORD PTR [rax+0x0]
  4071a0:	cmp    eax,0x2
  4071a3:	je     0x4071c0
  4071a5:	mov    eax,DWORD PTR [rip+0x9225]        # 0x4103d0
  4071ab:	cmp    eax,0x1
  4071ae:	je     0x40711d
  4071b4:	jmp    0x407136
  4071b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4071c0:	mov    DWORD PTR [rip+0x9206],0x2        # 0x4103d0
  4071ca:	jmp    0x40717d
  4071cc:	nop    DWORD PTR [rax+0x0]
  4071d0:	push   rbx
  4071d1:	sub    rsp,0x20
  4071d5:	mov    eax,0x3
  4071da:	xchg   DWORD PTR [rip+0x91f0],eax        # 0x4103d0
  4071e0:	cmp    eax,0x2
  4071e3:	je     0x4071f0
  4071e5:	add    rsp,0x20
  4071e9:	pop    rbx
  4071ea:	ret    
  4071eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4071f0:	mov    rbx,QWORD PTR [rip+0xa221]        # 0x411418
  4071f7:	lea    rcx,[rip+0x9202]        # 0x410400
  4071fe:	call   rbx
  407200:	lea    rcx,[rip+0x9221]        # 0x410428
  407207:	mov    rax,rbx
  40720a:	add    rsp,0x20
  40720e:	pop    rbx
  40720f:	rex.W jmp rax
  407212:	nop    DWORD PTR [rax+0x0]
  407216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407220:	push   rdi
  407221:	push   rsi
  407222:	push   rbx
  407223:	sub    rsp,0x20
  407227:	mov    ebx,ecx
  407229:	xor    ecx,ecx
  40722b:	call   0x407100
  407230:	cmp    ebx,0x9
  407233:	jg     0x407270
  407235:	lea    rdx,[rip+0x9144]        # 0x410380
  40723c:	movsxd rcx,ebx
  40723f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  407243:	test   rdi,rdi
  407246:	je     0x4072d0
  40724c:	cmp    DWORD PTR [rip+0x917d],0x2        # 0x4103d0
  407253:	mov    r8,QWORD PTR [rdi]
  407256:	mov    QWORD PTR [rdx+rcx*8],r8
  40725a:	jne    0x4072b6
  40725c:	lea    rcx,[rip+0x919d]        # 0x410400
  407263:	call   QWORD PTR [rip+0xa1ff]        # 0x411468
  407269:	jmp    0x4072b6
  40726b:	nop    DWORD PTR [rax+rax*1+0x0]
  407270:	mov    eax,0x1
  407275:	mov    ecx,ebx
  407277:	shl    eax,cl
  407279:	mov    esi,eax
  40727b:	lea    eax,[rax-0x1]
  40727e:	cdqe   
  407280:	lea    rdx,[rax*4+0x27]
  407288:	shr    rdx,0x3
  40728c:	mov    edx,edx
  40728e:	lea    rcx,[rdx*8+0x0]
  407296:	call   0x407fc8
  40729b:	test   rax,rax
  40729e:	mov    rdi,rax
  4072a1:	je     0x40732a
  4072a7:	cmp    DWORD PTR [rip+0x9122],0x2        # 0x4103d0
  4072ae:	mov    DWORD PTR [rdi+0x8],ebx
  4072b1:	mov    DWORD PTR [rdi+0xc],esi
  4072b4:	je     0x40725c
  4072b6:	mov    DWORD PTR [rdi+0x14],0x0
  4072bd:	mov    DWORD PTR [rdi+0x10],0x0
  4072c4:	mov    rax,rdi
  4072c7:	add    rsp,0x20
  4072cb:	pop    rbx
  4072cc:	pop    rsi
  4072cd:	pop    rdi
  4072ce:	ret    
  4072cf:	nop
  4072d0:	mov    ecx,ebx
  4072d2:	mov    eax,0x1
  4072d7:	mov    rdi,QWORD PTR [rip+0x2db2]        # 0x40a090
  4072de:	shl    eax,cl
  4072e0:	lea    rcx,[rip+0x8799]        # 0x40fa80
  4072e7:	lea    edx,[rax-0x1]
  4072ea:	mov    esi,eax
  4072ec:	mov    rax,rdi
  4072ef:	movsxd rdx,edx
  4072f2:	sub    rax,rcx
  4072f5:	lea    rdx,[rdx*4+0x27]
  4072fd:	mov    rcx,rax
  407300:	sar    rcx,0x3
  407304:	shr    rdx,0x3
  407308:	mov    edx,edx
  40730a:	add    rcx,rdx
  40730d:	cmp    rcx,0x120
  407314:	ja     0x40728e
  40731a:	lea    rdx,[rdi+rdx*8]
  40731e:	mov    QWORD PTR [rip+0x2d6b],rdx        # 0x40a090
  407325:	jmp    0x4072a7
  40732a:	xor    eax,eax
  40732c:	jmp    0x4072c7
  40732e:	xchg   ax,ax
  407330:	push   rbx
  407331:	sub    rsp,0x20
  407335:	test   rcx,rcx
  407338:	je     0x407369
  40733a:	cmp    DWORD PTR [rcx+0x8],0x9
  40733e:	jg     0x407370
  407340:	mov    rbx,rcx
  407343:	xor    ecx,ecx
  407345:	call   0x407100
  40734a:	movsxd rdx,DWORD PTR [rbx+0x8]
  40734e:	lea    rax,[rip+0x902b]        # 0x410380
  407355:	cmp    DWORD PTR [rip+0x9074],0x2        # 0x4103d0
  40735c:	mov    rcx,QWORD PTR [rax+rdx*8]
  407360:	mov    QWORD PTR [rax+rdx*8],rbx
  407364:	mov    QWORD PTR [rbx],rcx
  407367:	je     0x407380
  407369:	add    rsp,0x20
  40736d:	pop    rbx
  40736e:	ret    
  40736f:	nop
  407370:	add    rsp,0x20
  407374:	pop    rbx
  407375:	jmp    0x407fe8
  40737a:	nop    WORD PTR [rax+rax*1+0x0]
  407380:	mov    rax,QWORD PTR [rip+0xa0e1]        # 0x411468
  407387:	lea    rcx,[rip+0x9072]        # 0x410400
  40738e:	add    rsp,0x20
  407392:	pop    rbx
  407393:	rex.W jmp rax
  407396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073a0:	push   rbp
  4073a1:	push   rdi
  4073a2:	push   rsi
  4073a3:	push   rbx
  4073a4:	sub    rsp,0x28
  4073a8:	mov    esi,DWORD PTR [rcx+0x14]
  4073ab:	xor    r9d,r9d
  4073ae:	lea    r10,[rcx+0x18]
  4073b2:	mov    rdi,rcx
  4073b5:	movsxd rbx,r8d
  4073b8:	movsxd rdx,edx
  4073bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4073c0:	mov    eax,DWORD PTR [r10+r9*4]
  4073c4:	imul   rax,rdx
  4073c8:	add    rax,rbx
  4073cb:	mov    rbx,rax
  4073ce:	mov    DWORD PTR [r10+r9*4],eax
  4073d2:	add    r9,0x1
  4073d6:	shr    rbx,0x20
  4073da:	cmp    esi,r9d
  4073dd:	jg     0x4073c0
  4073df:	test   rbx,rbx
  4073e2:	mov    rax,rdi
  4073e5:	je     0x4073fc
  4073e7:	cmp    esi,DWORD PTR [rdi+0xc]
  4073ea:	jge    0x407405
  4073ec:	movsxd rax,esi
  4073ef:	add    esi,0x1
  4073f2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  4073f6:	mov    DWORD PTR [rdi+0x14],esi
  4073f9:	mov    rax,rdi
  4073fc:	add    rsp,0x28
  407400:	pop    rbx
  407401:	pop    rsi
  407402:	pop    rdi
  407403:	pop    rbp
  407404:	ret    
  407405:	mov    eax,DWORD PTR [rdi+0x8]
  407408:	lea    ecx,[rax+0x1]
  40740b:	call   0x407220
  407410:	test   rax,rax
  407413:	mov    rbp,rax
  407416:	je     0x40744e
  407418:	lea    rcx,[rax+0x10]
  40741c:	movsxd rax,DWORD PTR [rdi+0x14]
  407420:	lea    rdx,[rdi+0x10]
  407424:	lea    r8,[rax*4+0x8]
  40742c:	call   0x407fc0
  407431:	mov    rcx,rdi
  407434:	mov    rdi,rbp
  407437:	call   0x407330
  40743c:	movsxd rax,esi
  40743f:	add    esi,0x1
  407442:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  407446:	mov    DWORD PTR [rdi+0x14],esi
  407449:	mov    rax,rdi
  40744c:	jmp    0x4073fc
  40744e:	xor    eax,eax
  407450:	jmp    0x4073fc
  407452:	nop    DWORD PTR [rax+0x0]
  407456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407460:	push   rbx
  407461:	sub    rsp,0x20
  407465:	mov    ebx,ecx
  407467:	mov    ecx,0x1
  40746c:	call   0x407220
  407471:	test   rax,rax
  407474:	je     0x407480
  407476:	mov    DWORD PTR [rax+0x18],ebx
  407479:	mov    DWORD PTR [rax+0x14],0x1
  407480:	add    rsp,0x20
  407484:	pop    rbx
  407485:	ret    
  407486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407490:	push   r14
  407492:	push   r13
  407494:	push   r12
  407496:	push   rbp
  407497:	push   rdi
  407498:	push   rsi
  407499:	push   rbx
  40749a:	sub    rsp,0x20
  40749e:	movsxd r13,DWORD PTR [rcx+0x14]
  4074a2:	movsxd rbx,DWORD PTR [rdx+0x14]
  4074a6:	mov    r12,rcx
  4074a9:	mov    r14,rdx
  4074ac:	cmp    r13d,ebx
  4074af:	jl     0x4075b1
  4074b5:	mov    eax,ebx
  4074b7:	movsxd rbx,r13d
  4074ba:	movsxd r13,eax
  4074bd:	xor    eax,eax
  4074bf:	lea    esi,[rbx+r13*1]
  4074c3:	cmp    esi,DWORD PTR [r12+0xc]
  4074c8:	setg   al
  4074cb:	add    eax,DWORD PTR [r12+0x8]
  4074d0:	mov    ecx,eax
  4074d2:	call   0x407220
  4074d7:	test   rax,rax
  4074da:	je     0x4075bc
  4074e0:	lea    rdi,[rax+0x18]
  4074e4:	movsxd rdx,esi
  4074e7:	lea    rbp,[rdi+rdx*4]
  4074eb:	mov    r8,rdi
  4074ee:	cmp    rdi,rbp
  4074f1:	jae    0x407503
  4074f3:	mov    DWORD PTR [r8],0x0
  4074fa:	add    r8,0x4
  4074fe:	cmp    rbp,r8
  407501:	ja     0x4074f3
  407503:	lea    rdx,[r14+0x18]
  407507:	add    r12,0x18
  40750b:	lea    rbx,[r12+rbx*4]
  40750f:	lea    r13,[rdx+r13*4]
  407513:	cmp    rdx,r13
  407516:	jae    0x407579
  407518:	nop    DWORD PTR [rax+rax*1+0x0]
  407520:	add    rdx,0x4
  407524:	mov    r11d,DWORD PTR [rdx-0x4]
  407528:	test   r11d,r11d
  40752b:	je     0x407570
  40752d:	mov    r9,rdi
  407530:	mov    r8,r12
  407533:	xor    r10d,r10d
  407536:	jmp    0x407543
  407538:	nop    DWORD PTR [rax+rax*1+0x0]
  407540:	mov    r9,r14
  407543:	add    r8,0x4
  407547:	mov    ecx,DWORD PTR [r8-0x4]
  40754b:	mov    r14d,DWORD PTR [r9]
  40754e:	imul   rcx,r11
  407552:	add    rcx,r14
  407555:	lea    r14,[r9+0x4]
  407559:	add    rcx,r10
  40755c:	mov    r10,rcx
  40755f:	mov    DWORD PTR [r14-0x4],ecx
  407563:	shr    r10,0x20
  407567:	cmp    rbx,r8
  40756a:	ja     0x407540
  40756c:	mov    DWORD PTR [r9+0x4],r10d
  407570:	add    rdi,0x4
  407574:	cmp    r13,rdx
  407577:	ja     0x407520
  407579:	test   esi,esi
  40757b:	jle    0x40759f
  40757d:	mov    r8d,DWORD PTR [rbp-0x4]
  407581:	lea    rdx,[rbp-0x4]
  407585:	test   r8d,r8d
  407588:	je     0x40759a
  40758a:	jmp    0x40759f
  40758c:	nop    DWORD PTR [rax+0x0]
  407590:	sub    rdx,0x4
  407594:	mov    ecx,DWORD PTR [rdx]
  407596:	test   ecx,ecx
  407598:	jne    0x40759f
  40759a:	sub    esi,0x1
  40759d:	jne    0x407590
  40759f:	mov    DWORD PTR [rax+0x14],esi
  4075a2:	add    rsp,0x20
  4075a6:	pop    rbx
  4075a7:	pop    rsi
  4075a8:	pop    rdi
  4075a9:	pop    rbp
  4075aa:	pop    r12
  4075ac:	pop    r13
  4075ae:	pop    r14
  4075b0:	ret    
  4075b1:	mov    r12,rdx
  4075b4:	mov    r14,rcx
  4075b7:	jmp    0x4074bd
  4075bc:	xor    eax,eax
  4075be:	jmp    0x4075a2
  4075c0:	push   rbp
  4075c1:	push   rdi
  4075c2:	push   rsi
  4075c3:	push   rbx
  4075c4:	sub    rsp,0x28
  4075c8:	mov    eax,edx
  4075ca:	mov    rbp,rcx
  4075cd:	mov    ebx,edx
  4075cf:	and    eax,0x3
  4075d2:	jne    0x407660
  4075d8:	sar    ebx,0x2
  4075db:	mov    rax,rbp
  4075de:	test   ebx,ebx
  4075e0:	je     0x40762c
  4075e2:	mov    rdi,QWORD PTR [rip+0x8457]        # 0x40fa40
  4075e9:	test   rdi,rdi
  4075ec:	jne    0x407602
  4075ee:	jmp    0x4076ad
  4075f3:	sar    ebx,1
  4075f5:	je     0x407629
  4075f7:	mov    rsi,QWORD PTR [rdi]
  4075fa:	test   rsi,rsi
  4075fd:	je     0x407635
  4075ff:	mov    rdi,rsi
  407602:	test   bl,0x1
  407605:	je     0x4075f3
  407607:	mov    rdx,rdi
  40760a:	mov    rcx,rbp
  40760d:	call   0x407490
  407612:	test   rax,rax
  407615:	mov    rsi,rax
  407618:	je     0x407683
  40761a:	mov    rcx,rbp
  40761d:	mov    rbp,rsi
  407620:	call   0x407330
  407625:	sar    ebx,1
  407627:	jne    0x4075f7
  407629:	mov    rax,rbp
  40762c:	add    rsp,0x28
  407630:	pop    rbx
  407631:	pop    rsi
  407632:	pop    rdi
  407633:	pop    rbp
  407634:	ret    
  407635:	mov    ecx,0x1
  40763a:	call   0x407100
  40763f:	mov    rsi,QWORD PTR [rdi]
  407642:	test   rsi,rsi
  407645:	je     0x40768e
  407647:	cmp    DWORD PTR [rip+0x8d82],0x2        # 0x4103d0
  40764e:	jne    0x4075ff
  407650:	lea    rcx,[rip+0x8dd1]        # 0x410428
  407657:	call   QWORD PTR [rip+0x9e0b]        # 0x411468
  40765d:	jmp    0x4075ff
  40765f:	nop
  407660:	sub    eax,0x1
  407663:	lea    rdx,[rip+0x4556]        # 0x40bbc0
  40766a:	xor    r8d,r8d
  40766d:	cdqe   
  40766f:	mov    edx,DWORD PTR [rdx+rax*4]
  407672:	call   0x4073a0
  407677:	test   rax,rax
  40767a:	mov    rbp,rax
  40767d:	jne    0x4075d8
  407683:	xor    eax,eax
  407685:	add    rsp,0x28
  407689:	pop    rbx
  40768a:	pop    rsi
  40768b:	pop    rdi
  40768c:	pop    rbp
  40768d:	ret    
  40768e:	mov    rdx,rdi
  407691:	mov    rcx,rdi
  407694:	call   0x407490
  407699:	test   rax,rax
  40769c:	mov    rsi,rax
  40769f:	mov    QWORD PTR [rdi],rax
  4076a2:	je     0x407683
  4076a4:	mov    QWORD PTR [rax],0x0
  4076ab:	jmp    0x407647
  4076ad:	mov    ecx,0x1
  4076b2:	call   0x407100
  4076b7:	mov    rdi,QWORD PTR [rip+0x8382]        # 0x40fa40
  4076be:	test   rdi,rdi
  4076c1:	je     0x4076e2
  4076c3:	cmp    DWORD PTR [rip+0x8d06],0x2        # 0x4103d0
  4076ca:	jne    0x407602
  4076d0:	lea    rcx,[rip+0x8d51]        # 0x410428
  4076d7:	call   QWORD PTR [rip+0x9d8b]        # 0x411468
  4076dd:	jmp    0x407602
  4076e2:	mov    ecx,0x1
  4076e7:	call   0x407220
  4076ec:	test   rax,rax
  4076ef:	mov    rdi,rax
  4076f2:	je     0x407712
  4076f4:	mov    DWORD PTR [rax+0x18],0x271
  4076fb:	mov    DWORD PTR [rax+0x14],0x1
  407702:	mov    QWORD PTR [rip+0x8337],rax        # 0x40fa40
  407709:	mov    QWORD PTR [rax],0x0
  407710:	jmp    0x4076c3
  407712:	mov    QWORD PTR [rip+0x8323],0x0        # 0x40fa40
  40771d:	xor    eax,eax
  40771f:	jmp    0x407685
  407724:	xchg   ax,ax
  407726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407730:	push   r13
  407732:	push   r12
  407734:	push   rbp
  407735:	push   rdi
  407736:	push   rsi
  407737:	push   rbx
  407738:	sub    rsp,0x28
  40773c:	mov    rdi,rcx
  40773f:	mov    ebp,edx
  407741:	mov    esi,edx
  407743:	mov    r12d,DWORD PTR [rdi+0x14]
  407747:	sar    ebp,0x5
  40774a:	mov    eax,DWORD PTR [rdi+0xc]
  40774d:	mov    ecx,DWORD PTR [rcx+0x8]
  407750:	add    r12d,ebp
  407753:	lea    ebx,[r12+0x1]
  407758:	cmp    ebx,eax
  40775a:	jle    0x407769
  40775c:	nop    DWORD PTR [rax+0x0]
  407760:	add    eax,eax
  407762:	add    ecx,0x1
  407765:	cmp    ebx,eax
  407767:	jg     0x407760
  407769:	call   0x407220
  40776e:	test   rax,rax
  407771:	mov    r13,rax
  407774:	je     0x40783f
  40777a:	test   ebp,ebp
  40777c:	lea    r8,[rax+0x18]
  407780:	jle    0x407837
  407786:	lea    eax,[rbp-0x1]
  407789:	lea    r9,[r8+rax*4+0x4]
  40778e:	xchg   ax,ax
  407790:	add    r8,0x4
  407794:	mov    DWORD PTR [r8-0x4],0x0
  40779c:	cmp    r8,r9
  40779f:	jne    0x407790
  4077a1:	movsxd rax,DWORD PTR [rdi+0x14]
  4077a5:	lea    r8,[rdi+0x18]
  4077a9:	mov    edx,esi
  4077ab:	and    edx,0x1f
  4077ae:	lea    rbp,[r8+rax*4]
  4077b2:	je     0x407820
  4077b4:	mov    eax,0x20
  4077b9:	xor    r11d,r11d
  4077bc:	sub    eax,edx
  4077be:	jmp    0x4077c3
  4077c0:	mov    r9,rsi
  4077c3:	mov    r10d,DWORD PTR [r8]
  4077c6:	mov    ecx,edx
  4077c8:	lea    rsi,[r9+0x4]
  4077cc:	add    r8,0x4
  4077d0:	shl    r10d,cl
  4077d3:	mov    ecx,eax
  4077d5:	or     r10d,r11d
  4077d8:	mov    DWORD PTR [rsi-0x4],r10d
  4077dc:	mov    r11d,DWORD PTR [r8-0x4]
  4077e0:	shr    r11d,cl
  4077e3:	cmp    rbp,r8
  4077e6:	ja     0x4077c0
  4077e8:	add    r12d,0x2
  4077ec:	test   r11d,r11d
  4077ef:	mov    DWORD PTR [r9+0x4],r11d
  4077f3:	cmovne ebx,r12d
  4077f7:	sub    ebx,0x1
  4077fa:	mov    rcx,rdi
  4077fd:	mov    DWORD PTR [r13+0x14],ebx
  407801:	call   0x407330
  407806:	mov    rax,r13
  407809:	add    rsp,0x28
  40780d:	pop    rbx
  40780e:	pop    rsi
  40780f:	pop    rdi
  407810:	pop    rbp
  407811:	pop    r12
  407813:	pop    r13
  407815:	ret    
  407816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407820:	add    r8,0x4
  407824:	mov    edx,DWORD PTR [r8-0x4]
  407828:	add    r9,0x4
  40782c:	cmp    rbp,r8
  40782f:	mov    DWORD PTR [r9-0x4],edx
  407833:	ja     0x407820
  407835:	jmp    0x4077f7
  407837:	mov    r9,r8
  40783a:	jmp    0x4077a1
  40783f:	xor    eax,eax
  407841:	jmp    0x407809
  407843:	nop    DWORD PTR [rax]
  407846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407850:	movsxd r8,DWORD PTR [rdx+0x14]
  407854:	mov    eax,DWORD PTR [rcx+0x14]
  407857:	sub    eax,r8d
  40785a:	test   eax,eax
  40785c:	jne    0x407892
  40785e:	shl    r8,0x2
  407862:	add    rcx,0x18
  407866:	lea    rax,[rcx+r8*1]
  40786a:	lea    rdx,[rdx+r8*1+0x18]
  40786f:	jmp    0x407876
  407871:	cmp    rcx,rax
  407874:	jae    0x407890
  407876:	sub    rdx,0x4
  40787a:	sub    rax,0x4
  40787e:	mov    r9d,DWORD PTR [rdx]
  407881:	cmp    DWORD PTR [rax],r9d
  407884:	je     0x407871
  407886:	sbb    eax,eax
  407888:	or     eax,0x1
  40788b:	ret    
  40788c:	nop    DWORD PTR [rax+0x0]
  407890:	xor    eax,eax
  407892:	repz ret 
  407894:	xchg   ax,ax
  407896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4078a0:	push   rdi
  4078a1:	push   rsi
  4078a2:	push   rbx
  4078a3:	sub    rsp,0x20
  4078a7:	mov    rsi,rcx
  4078aa:	mov    rdi,rdx
  4078ad:	call   0x407850
  4078b2:	test   eax,eax
  4078b4:	je     0x4079a0
  4078ba:	mov    ebx,0x0
  4078bf:	js     0x4079c2
  4078c5:	mov    ecx,DWORD PTR [rsi+0x8]
  4078c8:	call   0x407220
  4078cd:	test   rax,rax
  4078d0:	je     0x4079d2
  4078d6:	movsxd rdx,DWORD PTR [rsi+0x14]
  4078da:	lea    rcx,[rsi+0x18]
  4078de:	mov    DWORD PTR [rax+0x10],ebx
  4078e1:	lea    r10,[rdi+0x18]
  4078e5:	xor    r9d,r9d
  4078e8:	mov    rbx,rdx
  4078eb:	lea    rsi,[rcx+rdx*4]
  4078ef:	movsxd rdx,DWORD PTR [rdi+0x14]
  4078f3:	lea    rdi,[r10+rdx*4]
  4078f7:	lea    rdx,[rax+0x18]
  4078fb:	nop    DWORD PTR [rax+rax*1+0x0]
  407900:	add    rcx,0x4
  407904:	add    r10,0x4
  407908:	mov    r11d,DWORD PTR [r10-0x4]
  40790c:	mov    r8d,DWORD PTR [rcx-0x4]
  407910:	add    rdx,0x4
  407914:	sub    r8,r11
  407917:	sub    r8,r9
  40791a:	mov    r9,r8
  40791d:	mov    r11d,r8d
  407920:	mov    DWORD PTR [rdx-0x4],r8d
  407924:	shr    r9,0x20
  407928:	and    r9d,0x1
  40792c:	cmp    rdi,r10
  40792f:	ja     0x407900
  407931:	cmp    rsi,rcx
  407934:	mov    rdi,rdx
  407937:	mov    r10,rcx
  40793a:	jbe    0x407976
  40793c:	nop    DWORD PTR [rax+0x0]
  407940:	add    rcx,0x4
  407944:	mov    r8d,DWORD PTR [rcx-0x4]
  407948:	add    rdx,0x4
  40794c:	sub    r8,r9
  40794f:	mov    r9,r8
  407952:	mov    r11d,r8d
  407955:	mov    DWORD PTR [rdx-0x4],r8d
  407959:	shr    r9,0x20
  40795d:	and    r9d,0x1
  407961:	cmp    rsi,rcx
  407964:	ja     0x407940
  407966:	not    r10
  407969:	lea    rdx,[r10+rsi*1]
  40796d:	shr    rdx,0x2
  407971:	lea    rdx,[rdi+rdx*4+0x4]
  407976:	sub    rdx,0x4
  40797a:	test   r11d,r11d
  40797d:	jne    0x40798d
  40797f:	nop
  407980:	sub    rdx,0x4
  407984:	mov    ecx,DWORD PTR [rdx]
  407986:	sub    ebx,0x1
  407989:	test   ecx,ecx
  40798b:	je     0x407980
  40798d:	mov    DWORD PTR [rax+0x14],ebx
  407990:	add    rsp,0x20
  407994:	pop    rbx
  407995:	pop    rsi
  407996:	pop    rdi
  407997:	ret    
  407998:	nop    DWORD PTR [rax+rax*1+0x0]
  4079a0:	xor    ecx,ecx
  4079a2:	call   0x407220
  4079a7:	test   rax,rax
  4079aa:	je     0x4079d2
  4079ac:	mov    DWORD PTR [rax+0x14],0x1
  4079b3:	mov    DWORD PTR [rax+0x18],0x0
  4079ba:	add    rsp,0x20
  4079be:	pop    rbx
  4079bf:	pop    rsi
  4079c0:	pop    rdi
  4079c1:	ret    
  4079c2:	mov    rax,rsi
  4079c5:	mov    bl,0x1
  4079c7:	mov    rsi,rdi
  4079ca:	mov    rdi,rax
  4079cd:	jmp    0x4078c5
  4079d2:	xor    eax,eax
  4079d4:	jmp    0x407990
  4079d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4079e0:	push   rsi
  4079e1:	push   rbx
  4079e2:	sub    rsp,0x18
  4079e6:	movsxd rax,DWORD PTR [rcx+0x14]
  4079ea:	lea    r10,[rcx+0x18]
  4079ee:	mov    ecx,0x20
  4079f3:	lea    r9,[r10+rax*4]
  4079f7:	mov    eax,DWORD PTR [r9-0x4]
  4079fb:	lea    rbx,[r9-0x4]
  4079ff:	bsr    r8d,eax
  407a03:	xor    r8d,0x1f
  407a07:	sub    ecx,r8d
  407a0a:	cmp    r8d,0xa
  407a0e:	mov    DWORD PTR [rdx],ecx
  407a10:	jg     0x407a60
  407a12:	mov    ecx,0xb
  407a17:	mov    r11d,eax
  407a1a:	xor    esi,esi
  407a1c:	sub    ecx,r8d
  407a1f:	shr    r11d,cl
  407a22:	or     r11d,0x3ff00000
  407a29:	shl    r11,0x20
  407a2d:	cmp    r10,rbx
  407a30:	jae    0x407a38
  407a32:	mov    esi,DWORD PTR [r9-0x8]
  407a36:	shr    esi,cl
  407a38:	lea    ecx,[r8+0x15]
  407a3c:	shl    eax,cl
  407a3e:	mov    edx,eax
  407a40:	mov    eax,esi
  407a42:	or     eax,edx
  407a44:	or     rax,r11
  407a47:	mov    QWORD PTR [rsp+0x8],rax
  407a4c:	movsd  xmm0,QWORD PTR [rsp+0x8]
  407a52:	add    rsp,0x18
  407a56:	pop    rbx
  407a57:	pop    rsi
  407a58:	ret    
  407a59:	nop    DWORD PTR [rax+0x0]
  407a60:	cmp    r10,rbx
  407a63:	jae    0x407ac0
  407a65:	mov    r11d,r8d
  407a68:	lea    rsi,[r9-0x8]
  407a6c:	mov    edx,DWORD PTR [r9-0x8]
  407a70:	sub    r11d,0xb
  407a74:	je     0x407ae2
  407a76:	mov    ebx,0x2b
  407a7b:	mov    ecx,r11d
  407a7e:	sub    ebx,r8d
  407a81:	shl    eax,cl
  407a83:	mov    r8d,edx
  407a86:	mov    ecx,ebx
  407a88:	shr    r8d,cl
  407a8b:	or     eax,r8d
  407a8e:	xor    r8d,r8d
  407a91:	or     eax,0x3ff00000
  407a96:	shl    rax,0x20
  407a9a:	cmp    r10,rsi
  407a9d:	jae    0x407aa6
  407a9f:	mov    r8d,DWORD PTR [r9-0xc]
  407aa3:	shr    r8d,cl
  407aa6:	mov    ecx,r11d
  407aa9:	shl    edx,cl
  407aab:	or     r8d,edx
  407aae:	movabs rdx,0xffffffff00000000
  407ab8:	and    rax,rdx
  407abb:	or     rax,r8
  407abe:	jmp    0x407a47
  407ac0:	mov    r11d,r8d
  407ac3:	sub    r11d,0xb
  407ac7:	je     0x407ae0
  407ac9:	mov    ecx,r11d
  407acc:	xor    r8d,r8d
  407acf:	xor    edx,edx
  407ad1:	shl    eax,cl
  407ad3:	or     eax,0x3ff00000
  407ad8:	shl    rax,0x20
  407adc:	jmp    0x407aa6
  407ade:	xchg   ax,ax
  407ae0:	xor    edx,edx
  407ae2:	or     eax,0x3ff00000
  407ae7:	shl    rax,0x20
  407aeb:	or     rax,rdx
  407aee:	jmp    0x407a47
  407af3:	nop    DWORD PTR [rax]
  407af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b00:	push   rdi
  407b01:	push   rsi
  407b02:	push   rbx
  407b03:	sub    rsp,0x20
  407b07:	mov    ecx,0x1
  407b0c:	movq   rbx,xmm0
  407b11:	mov    rdi,rdx
  407b14:	mov    rsi,r8
  407b17:	call   0x407220
  407b1c:	test   rax,rax
  407b1f:	je     0x407c05
  407b25:	mov    r9,rbx
  407b28:	shr    r9,0x20
  407b2c:	mov    r10d,r9d
  407b2f:	and    r9d,0x7fffffff
  407b36:	and    r10d,0xfffff
  407b3d:	shr    r9d,0x14
  407b41:	mov    edx,r10d
  407b44:	or     edx,0x100000
  407b4a:	test   r9d,r9d
  407b4d:	cmovne r10d,edx
  407b51:	test   ebx,ebx
  407b53:	jne    0x407b94
  407b55:	xor    ecx,ecx
  407b57:	mov    DWORD PTR [rax+0x14],0x1
  407b5e:	mov    edx,0x1
  407b63:	tzcnt  ecx,r10d
  407b68:	shr    r10d,cl
  407b6b:	test   r9d,r9d
  407b6e:	lea    r11d,[rcx+0x20]
  407b72:	mov    DWORD PTR [rax+0x18],r10d
  407b76:	je     0x407bd3
  407b78:	lea    edx,[r11+r9*1-0x433]
  407b80:	mov    DWORD PTR [rdi],edx
  407b82:	mov    edx,0x35
  407b87:	sub    edx,r11d
  407b8a:	mov    DWORD PTR [rsi],edx
  407b8c:	add    rsp,0x20
  407b90:	pop    rbx
  407b91:	pop    rsi
  407b92:	pop    rdi
  407b93:	ret    
  407b94:	xor    r11d,r11d
  407b97:	tzcnt  r11d,ebx
  407b9c:	mov    ecx,r11d
  407b9f:	shr    ebx,cl
  407ba1:	test   r11d,r11d
  407ba4:	je     0x407c00
  407ba6:	mov    ecx,0x20
  407bab:	mov    edx,r10d
  407bae:	sub    ecx,r11d
  407bb1:	shl    edx,cl
  407bb3:	mov    ecx,r11d
  407bb6:	or     ebx,edx
  407bb8:	shr    r10d,cl
  407bbb:	mov    DWORD PTR [rax+0x18],ebx
  407bbe:	cmp    r10d,0x1
  407bc2:	mov    DWORD PTR [rax+0x1c],r10d
  407bc6:	sbb    edx,edx
  407bc8:	add    edx,0x2
  407bcb:	test   r9d,r9d
  407bce:	mov    DWORD PTR [rax+0x14],edx
  407bd1:	jne    0x407b78
  407bd3:	movsxd rcx,edx
  407bd6:	shl    edx,0x5
  407bd9:	sub    r11d,0x432
  407be0:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  407be5:	mov    DWORD PTR [rdi],r11d
  407be8:	xor    ecx,0x1f
  407beb:	sub    edx,ecx
  407bed:	mov    DWORD PTR [rsi],edx
  407bef:	add    rsp,0x20
  407bf3:	pop    rbx
  407bf4:	pop    rsi
  407bf5:	pop    rdi
  407bf6:	ret    
  407bf7:	nop    WORD PTR [rax+rax*1+0x0]
  407c00:	mov    DWORD PTR [rax+0x18],ebx
  407c03:	jmp    0x407bbe
  407c05:	xor    eax,eax
  407c07:	jmp    0x407b8c
  407c09:	nop    DWORD PTR [rax+0x0]
  407c10:	mov    rax,rcx
  407c13:	lea    rcx,[rdx+0x1]
  407c17:	movzx  edx,BYTE PTR [rdx]
  407c1a:	test   dl,dl
  407c1c:	mov    BYTE PTR [rax],dl
  407c1e:	je     0x407c32
  407c20:	add    rcx,0x1
  407c24:	movzx  edx,BYTE PTR [rcx-0x1]
  407c28:	add    rax,0x1
  407c2c:	test   dl,dl
  407c2e:	mov    BYTE PTR [rax],dl
  407c30:	jne    0x407c20
  407c32:	repz ret 
  407c34:	nop
  407c35:	nop
  407c36:	nop
  407c37:	nop
  407c38:	nop
  407c39:	nop
  407c3a:	nop
  407c3b:	nop
  407c3c:	nop
  407c3d:	nop
  407c3e:	nop
  407c3f:	nop
  407c40:	push   r13
  407c42:	push   r12
  407c44:	push   rbp
  407c45:	push   rdi
  407c46:	push   rsi
  407c47:	push   rbx
  407c48:	sub    rsp,0x28
  407c4c:	mov    rsi,rcx
  407c4f:	lea    ecx,[r8+0x8]
  407c53:	mov    ebp,edx
  407c55:	mov    edx,0x38e38e39
  407c5a:	mov    edi,r8d
  407c5d:	mov    ebx,r9d
  407c60:	mov    eax,ecx
  407c62:	sar    ecx,0x1f
  407c65:	imul   edx
  407c67:	sar    edx,1
  407c69:	sub    edx,ecx
  407c6b:	cmp    edx,0x1
  407c6e:	jle    0x407d34
  407c74:	mov    eax,0x1
  407c79:	xor    ecx,ecx
  407c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  407c80:	add    eax,eax
  407c82:	add    ecx,0x1
  407c85:	cmp    edx,eax
  407c87:	jg     0x407c80
  407c89:	call   0x407220
  407c8e:	cmp    ebp,0x9
  407c91:	mov    DWORD PTR [rax+0x18],ebx
  407c94:	mov    DWORD PTR [rax+0x14],0x1
  407c9b:	jle    0x407d20
  407ca1:	lea    rbx,[rsi+0x9]
  407ca5:	lea    r12d,[rbp-0xa]
  407ca9:	lea    r13,[rsi+r12*1+0xa]
  407cae:	mov    rsi,rbx
  407cb1:	add    rsi,0x1
  407cb5:	movsx  r8d,BYTE PTR [rsi-0x1]
  407cba:	mov    edx,0xa
  407cbf:	mov    rcx,rax
  407cc2:	sub    r8d,0x30
  407cc6:	call   0x4073a0
  407ccb:	cmp    rsi,r13
  407cce:	jne    0x407cb1
  407cd0:	movsxd rdx,DWORD PTR [rsp+0x80]
  407cd8:	lea    r9,[r12+rdx*1+0x1]
  407cdd:	add    rbx,r9
  407ce0:	cmp    edi,ebp
  407ce2:	jle    0x407d0f
  407ce4:	sub    edi,0x1
  407ce7:	sub    edi,ebp
  407ce9:	lea    rsi,[rbx+rdi*1+0x1]
  407cee:	xchg   ax,ax
  407cf0:	add    rbx,0x1
  407cf4:	movsx  r8d,BYTE PTR [rbx-0x1]
  407cf9:	mov    edx,0xa
  407cfe:	mov    rcx,rax
  407d01:	sub    r8d,0x30
  407d05:	call   0x4073a0
  407d0a:	cmp    rbx,rsi
  407d0d:	jne    0x407cf0
  407d0f:	add    rsp,0x28
  407d13:	pop    rbx
  407d14:	pop    rsi
  407d15:	pop    rdi
  407d16:	pop    rbp
  407d17:	pop    r12
  407d19:	pop    r13
  407d1b:	ret    
  407d1c:	nop    DWORD PTR [rax+0x0]
  407d20:	movsxd rdx,DWORD PTR [rsp+0x80]
  407d28:	mov    ebp,0x9
  407d2d:	lea    rbx,[rsi+rdx*1+0x9]
  407d32:	jmp    0x407ce0
  407d34:	xor    ecx,ecx
  407d36:	jmp    0x407c89
  407d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  407d40:	push   rdi
  407d41:	push   rsi
  407d42:	push   rbx
  407d43:	sub    rsp,0x50
  407d47:	movaps XMMWORD PTR [rsp+0x40],xmm6
  407d4c:	mov    rsi,rdx
  407d4f:	lea    rdx,[rsp+0x38]
  407d54:	mov    rdi,rcx
  407d57:	call   0x4079e0
  407d5c:	lea    rdx,[rsp+0x3c]
  407d61:	mov    rcx,rsi
  407d64:	movq   rbx,xmm0
  407d69:	movapd xmm6,xmm0
  407d6d:	call   0x4079e0
  407d72:	mov    eax,DWORD PTR [rsp+0x38]
  407d76:	sub    eax,DWORD PTR [rsp+0x3c]
  407d7a:	movq   rcx,xmm0
  407d7f:	mov    r8d,eax
  407d82:	mov    eax,DWORD PTR [rdi+0x14]
  407d85:	sub    eax,DWORD PTR [rsi+0x14]
  407d88:	shl    eax,0x5
  407d8b:	add    eax,r8d
  407d8e:	test   eax,eax
  407d90:	jle    0x407dd0
  407d92:	movq   rdx,xmm6
  407d97:	shl    eax,0x14
  407d9a:	shr    rdx,0x20
  407d9e:	add    eax,edx
  407da0:	shl    rax,0x20
  407da4:	mov    rdx,rax
  407da7:	mov    eax,ebx
  407da9:	or     rax,rdx
  407dac:	mov    QWORD PTR [rsp+0x28],rax
  407db1:	movsd  xmm6,QWORD PTR [rsp+0x28]
  407db7:	divsd  xmm6,xmm0
  407dbb:	movapd xmm0,xmm6
  407dbf:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  407dc4:	add    rsp,0x50
  407dc8:	pop    rbx
  407dc9:	pop    rsi
  407dca:	pop    rdi
  407dcb:	ret    
  407dcc:	nop    DWORD PTR [rax+0x0]
  407dd0:	movq   rdx,xmm0
  407dd5:	shl    eax,0x14
  407dd8:	shr    rdx,0x20
  407ddc:	mov    ebx,edx
  407dde:	sub    ebx,eax
  407de0:	mov    rax,rbx
  407de3:	shl    rax,0x20
  407de7:	mov    rdx,rax
  407dea:	mov    eax,ecx
  407dec:	or     rax,rdx
  407def:	mov    QWORD PTR [rsp+0x28],rax
  407df4:	movsd  xmm0,QWORD PTR [rsp+0x28]
  407dfa:	jmp    0x407db7
  407dfc:	nop    DWORD PTR [rax+0x0]
  407e00:	mov    r8,QWORD PTR [rcx]
  407e03:	jmp    0x407e1e
  407e05:	movsx  eax,BYTE PTR [r8]
  407e09:	lea    r11d,[rax-0x41]
  407e0d:	lea    r10d,[rax+0x20]
  407e11:	cmp    r11d,0x19
  407e15:	cmovbe eax,r10d
  407e19:	cmp    eax,r9d
  407e1c:	jne    0x407e40
  407e1e:	add    rdx,0x1
  407e22:	movsx  r9d,BYTE PTR [rdx-0x1]
  407e27:	add    r8,0x1
  407e2b:	test   r9d,r9d
  407e2e:	jne    0x407e05
  407e30:	mov    QWORD PTR [rcx],r8
  407e33:	mov    eax,0x1
  407e38:	ret    
  407e39:	nop    DWORD PTR [rax+0x0]
  407e40:	xor    eax,eax
  407e42:	ret    
  407e43:	nop    DWORD PTR [rax]
  407e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e50:	sub    edx,0x1
  407e53:	lea    rax,[r8+0x18]
  407e57:	sar    edx,0x5
  407e5a:	movsxd rdx,edx
  407e5d:	lea    r11,[rcx+rdx*4+0x4]
  407e62:	movsxd rdx,DWORD PTR [r8+0x14]
  407e66:	lea    r10,[rax+rdx*4]
  407e6a:	cmp    rax,r10
  407e6d:	jae    0x407eab
  407e6f:	mov    rdx,rcx
  407e72:	add    rax,0x4
  407e76:	mov    r9d,DWORD PTR [rax-0x4]
  407e7a:	add    rdx,0x4
  407e7e:	cmp    r10,rax
  407e81:	mov    DWORD PTR [rdx-0x4],r9d
  407e85:	ja     0x407e72
  407e87:	sub    r10,r8
  407e8a:	lea    rax,[r10-0x19]
  407e8e:	shr    rax,0x2
  407e92:	lea    rcx,[rcx+rax*4+0x4]
  407e97:	cmp    r11,rcx
  407e9a:	jbe    0x407eb0
  407e9c:	nop    DWORD PTR [rax+0x0]
  407ea0:	add    rcx,0x4
  407ea4:	mov    DWORD PTR [rcx-0x4],0x0
  407eab:	cmp    r11,rcx
  407eae:	ja     0x407ea0
  407eb0:	repz ret 
  407eb2:	nop    DWORD PTR [rax+0x0]
  407eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ec0:	movsxd rax,DWORD PTR [rcx+0x14]
  407ec4:	mov    r9d,edx
  407ec7:	lea    r8,[rcx+0x18]
  407ecb:	sar    r9d,0x5
  407ecf:	cmp    eax,r9d
  407ed2:	jge    0x407f01
  407ed4:	lea    r9,[r8+rax*4]
  407ed8:	cmp    r8,r9
  407edb:	jae    0x407f46
  407edd:	mov    eax,DWORD PTR [r9-0x4]
  407ee1:	lea    rdx,[r9-0x4]
  407ee5:	test   eax,eax
  407ee7:	je     0x407efa
  407ee9:	jmp    0x407f40
  407eeb:	nop    DWORD PTR [rax+rax*1+0x0]
  407ef0:	sub    rdx,0x4
  407ef4:	mov    ecx,DWORD PTR [rdx]
  407ef6:	test   ecx,ecx
  407ef8:	jne    0x407f40
  407efa:	cmp    r8,rdx
  407efd:	jb     0x407ef0
  407eff:	repz ret 
  407f01:	jle    0x407f30
  407f03:	mov    ecx,edx
  407f05:	movsxd r9,r9d
  407f08:	and    ecx,0x1f
  407f0b:	lea    r9,[r8+r9*4]
  407f0f:	je     0x407ed8
  407f11:	mov    r10d,DWORD PTR [r9]
  407f14:	mov    eax,r10d
  407f17:	shr    eax,cl
  407f19:	shl    eax,cl
  407f1b:	mov    edx,eax
  407f1d:	mov    eax,0x1
  407f22:	cmp    edx,r10d
  407f25:	je     0x407ed8
  407f27:	repz ret 
  407f29:	nop    DWORD PTR [rax+0x0]
  407f30:	movsxd r9,r9d
  407f33:	lea    r9,[r8+r9*4]
  407f37:	jmp    0x407ed8
  407f39:	nop    DWORD PTR [rax+0x0]
  407f40:	mov    eax,0x1
  407f45:	ret    
  407f46:	xor    eax,eax
  407f48:	ret    
  407f49:	nop
  407f4a:	nop
  407f4b:	nop
  407f4c:	nop
  407f4d:	nop
  407f4e:	nop
  407f4f:	nop
  407f50:	jmp    QWORD PTR [rip+0x96fa]        # 0x411650
  407f56:	nop
  407f57:	nop
  407f58:	jmp    QWORD PTR [rip+0x96ea]        # 0x411648
  407f5e:	nop
  407f5f:	nop
  407f60:	jmp    QWORD PTR [rip+0x96da]        # 0x411640
  407f66:	nop
  407f67:	nop
  407f68:	jmp    QWORD PTR [rip+0x96ca]        # 0x411638
  407f6e:	nop
  407f6f:	nop
  407f70:	jmp    QWORD PTR [rip+0x96ba]        # 0x411630
  407f76:	nop
  407f77:	nop
  407f78:	jmp    QWORD PTR [rip+0x96aa]        # 0x411628
  407f7e:	nop
  407f7f:	nop
  407f80:	jmp    QWORD PTR [rip+0x969a]        # 0x411620
  407f86:	nop
  407f87:	nop
  407f88:	jmp    QWORD PTR [rip+0x968a]        # 0x411618
  407f8e:	nop
  407f8f:	nop
  407f90:	jmp    QWORD PTR [rip+0x967a]        # 0x411610
  407f96:	nop
  407f97:	nop
  407f98:	jmp    QWORD PTR [rip+0x966a]        # 0x411608
  407f9e:	nop
  407f9f:	nop
  407fa0:	jmp    QWORD PTR [rip+0x965a]        # 0x411600
  407fa6:	nop
  407fa7:	nop
  407fa8:	jmp    QWORD PTR [rip+0x964a]        # 0x4115f8
  407fae:	nop
  407faf:	nop
  407fb0:	jmp    QWORD PTR [rip+0x963a]        # 0x4115f0
  407fb6:	nop
  407fb7:	nop
  407fb8:	jmp    QWORD PTR [rip+0x962a]        # 0x4115e8
  407fbe:	nop
  407fbf:	nop
  407fc0:	jmp    QWORD PTR [rip+0x961a]        # 0x4115e0
  407fc6:	nop
  407fc7:	nop
  407fc8:	jmp    QWORD PTR [rip+0x960a]        # 0x4115d8
  407fce:	nop
  407fcf:	nop
  407fd0:	jmp    QWORD PTR [rip+0x95fa]        # 0x4115d0
  407fd6:	nop
  407fd7:	nop
  407fd8:	jmp    QWORD PTR [rip+0x95ea]        # 0x4115c8
  407fde:	nop
  407fdf:	nop
  407fe0:	jmp    QWORD PTR [rip+0x95da]        # 0x4115c0
  407fe6:	nop
  407fe7:	nop
  407fe8:	jmp    QWORD PTR [rip+0x95ca]        # 0x4115b8
  407fee:	nop
  407fef:	nop
  407ff0:	jmp    QWORD PTR [rip+0x95ba]        # 0x4115b0
  407ff6:	nop
  407ff7:	nop
  407ff8:	jmp    QWORD PTR [rip+0x95aa]        # 0x4115a8
  407ffe:	nop
  407fff:	nop
  408000:	jmp    QWORD PTR [rip+0x959a]        # 0x4115a0
  408006:	nop
  408007:	nop
  408008:	jmp    QWORD PTR [rip+0x958a]        # 0x411598
  40800e:	nop
  40800f:	nop
  408010:	jmp    QWORD PTR [rip+0x957a]        # 0x411590
  408016:	nop
  408017:	nop
  408018:	jmp    QWORD PTR [rip+0x956a]        # 0x411588
  40801e:	nop
  40801f:	nop
  408020:	jmp    QWORD PTR [rip+0x955a]        # 0x411580
  408026:	nop
  408027:	nop
  408028:	jmp    QWORD PTR [rip+0x954a]        # 0x411578
  40802e:	nop
  40802f:	nop
  408030:	jmp    QWORD PTR [rip+0x953a]        # 0x411570
  408036:	nop
  408037:	nop
  408038:	jmp    QWORD PTR [rip+0x952a]        # 0x411568
  40803e:	nop
  40803f:	nop
  408040:	jmp    QWORD PTR [rip+0x951a]        # 0x411560
  408046:	nop
  408047:	nop
  408048:	jmp    QWORD PTR [rip+0x950a]        # 0x411558
  40804e:	nop
  40804f:	nop
  408050:	jmp    QWORD PTR [rip+0x94fa]        # 0x411550
  408056:	nop
  408057:	nop
  408058:	jmp    QWORD PTR [rip+0x94ea]        # 0x411548
  40805e:	nop
  40805f:	nop
  408060:	jmp    QWORD PTR [rip+0x94da]        # 0x411540
  408066:	nop
  408067:	nop
  408068:	jmp    QWORD PTR [rip+0x94c2]        # 0x411530
  40806e:	nop
  40806f:	nop
  408070:	jmp    QWORD PTR [rip+0x94b2]        # 0x411528
  408076:	nop
  408077:	nop
  408078:	jmp    QWORD PTR [rip+0x94a2]        # 0x411520
  40807e:	nop
  40807f:	nop
  408080:	jmp    QWORD PTR [rip+0x948a]        # 0x411510
  408086:	nop
  408087:	nop
  408088:	jmp    QWORD PTR [rip+0x947a]        # 0x411508
  40808e:	nop
  40808f:	nop
  408090:	jmp    QWORD PTR [rip+0x946a]        # 0x411500
  408096:	nop
  408097:	nop
  408098:	jmp    QWORD PTR [rip+0x945a]        # 0x4114f8
  40809e:	nop
  40809f:	nop
  4080a0:	jmp    QWORD PTR [rip+0x9442]        # 0x4114e8
  4080a6:	nop
  4080a7:	nop
  4080a8:	jmp    QWORD PTR [rip+0x9432]        # 0x4114e0
  4080ae:	nop
  4080af:	nop
  4080b0:	jmp    QWORD PTR [rip+0x9422]        # 0x4114d8
  4080b6:	nop
  4080b7:	nop
  4080b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4080c0:	mov    rax,QWORD PTR [rip+0x83b9]        # 0x410480
  4080c7:	ret    
  4080c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4080d0:	mov    rax,rcx
  4080d3:	xchg   QWORD PTR [rip+0x83a6],rax        # 0x410480
  4080da:	ret    
  4080db:	nop
  4080dc:	nop
  4080dd:	nop
  4080de:	nop
  4080df:	nop
  4080e0:	jmp    QWORD PTR [rip+0x93e2]        # 0x4114c8
  4080e6:	nop
  4080e7:	nop
  4080e8:	jmp    QWORD PTR [rip+0x93d2]        # 0x4114c0
  4080ee:	nop
  4080ef:	nop
  4080f0:	jmp    QWORD PTR [rip+0x93c2]        # 0x4114b8
  4080f6:	nop
  4080f7:	nop
  4080f8:	jmp    QWORD PTR [rip+0x93b2]        # 0x4114b0
  4080fe:	nop
  4080ff:	nop
  408100:	jmp    QWORD PTR [rip+0x93a2]        # 0x4114a8
  408106:	nop
  408107:	nop
  408108:	jmp    QWORD PTR [rip+0x9392]        # 0x4114a0
  40810e:	nop
  40810f:	nop
  408110:	jmp    QWORD PTR [rip+0x9382]        # 0x411498
  408116:	nop
  408117:	nop
  408118:	jmp    QWORD PTR [rip+0x9372]        # 0x411490
  40811e:	nop
  40811f:	nop
  408120:	jmp    QWORD PTR [rip+0x9362]        # 0x411488
  408126:	nop
  408127:	nop
  408128:	jmp    QWORD PTR [rip+0x9352]        # 0x411480
  40812e:	nop
  40812f:	nop
  408130:	jmp    QWORD PTR [rip+0x9342]        # 0x411478
  408136:	nop
  408137:	nop
  408138:	jmp    QWORD PTR [rip+0x9332]        # 0x411470
  40813e:	nop
  40813f:	nop
  408140:	jmp    QWORD PTR [rip+0x9322]        # 0x411468
  408146:	nop
  408147:	nop
  408148:	jmp    QWORD PTR [rip+0x9312]        # 0x411460
  40814e:	nop
  40814f:	nop
  408150:	jmp    QWORD PTR [rip+0x9302]        # 0x411458
  408156:	nop
  408157:	nop
  408158:	jmp    QWORD PTR [rip+0x92f2]        # 0x411450
  40815e:	nop
  40815f:	nop
  408160:	jmp    QWORD PTR [rip+0x92e2]        # 0x411448
  408166:	nop
  408167:	nop
  408168:	jmp    QWORD PTR [rip+0x92d2]        # 0x411440
  40816e:	nop
  40816f:	nop
  408170:	jmp    QWORD PTR [rip+0x92c2]        # 0x411438
  408176:	nop
  408177:	nop
  408178:	jmp    QWORD PTR [rip+0x92b2]        # 0x411430
  40817e:	nop
  40817f:	nop
  408180:	jmp    QWORD PTR [rip+0x92a2]        # 0x411428
  408186:	nop
  408187:	nop
  408188:	jmp    QWORD PTR [rip+0x9292]        # 0x411420
  40818e:	nop
  40818f:	nop
  408190:	jmp    QWORD PTR [rip+0x9282]        # 0x411418
  408196:	nop
  408197:	nop
  408198:	nop    DWORD PTR [rax+rax*1+0x0]
  4081a0:	push   r15
  4081a2:	push   r14
  4081a4:	push   r13
  4081a6:	push   r12
  4081a8:	push   rbp
  4081a9:	push   rdi
  4081aa:	push   rsi
  4081ab:	push   rbx
  4081ac:	sub    rsp,0xb18
  4081b3:	movaps XMMWORD PTR [rsp+0xaf0],xmm6
  4081bb:	movaps XMMWORD PTR [rsp+0xb00],xmm7
  4081c3:	mov    r14,rdx
  4081c6:	mov    r12d,ecx
  4081c9:	call   0x402050
  4081ce:	lea    rcx,[rip+0x2e2b]        # 0x40b000
  4081d5:	call   0x407fd8
  4081da:	mov    rcx,QWORD PTR [r14]
  4081dd:	mov    edx,0x5c
  4081e2:	mov    QWORD PTR [rsp+0x68],rax
  4081e7:	call   0x407f60
  4081ec:	mov    rbp,QWORD PTR [rip+0x3d4d]        # 0x40bf40
  4081f3:	test   rax,rax
  4081f6:	mov    QWORD PTR [rbp+0x8],rax
  4081fa:	je     0x408d48
  408200:	lea    rbx,[rax+0x1]
  408204:	mov    QWORD PTR [rbp+0x8],rbx
  408208:	lea    rdi,[rip+0x2e05]        # 0x40b014
  40820f:	mov    ecx,0x3
  408214:	mov    rsi,rbx
  408217:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408219:	sete   al
  40821c:	cmp    r12d,0x1
  408220:	movzx  eax,al
  408223:	mov    DWORD PTR [rsp+0x60],eax
  408227:	jle    0x408d6d
  40822d:	xor    r13d,r13d
  408230:	mov    DWORD PTR [rsp+0xb60],r12d
  408238:	mov    rdx,r14
  40823b:	mov    r12d,r13d
  40823e:	mov    DWORD PTR [rsp+0x48],0x0
  408246:	mov    DWORD PTR [rsp+0x64],0x0
  40824e:	mov    DWORD PTR [rsp+0x50],0x0
  408256:	mov    DWORD PTR [rsp+0x5c],0x0
  40825e:	lea    r15,[rip+0x3057]        # 0x40b2bc
  408265:	mov    QWORD PTR [rsp+0xb68],r14
  40826d:	mov    r13d,DWORD PTR [rsp+0xb60]
  408275:	jmp    0x40829e
  408277:	nop    WORD PTR [rax+rax*1+0x0]
  408280:	cmp    al,0x2b
  408282:	je     0x4084d7
  408288:	mov    rdi,QWORD PTR [rsp+0xb68]
  408290:	movsxd rax,r12d
  408293:	add    r12d,0x1
  408297:	mov    QWORD PTR [rdi+rax*8],rbx
  40829b:	mov    rdx,r14
  40829e:	sub    r13d,0x1
  4082a2:	test   r13d,r13d
  4082a5:	jle    0x4085db
  4082ab:	mov    rbx,QWORD PTR [rdx+0x8]
  4082af:	lea    r14,[rdx+0x8]
  4082b3:	movzx  eax,BYTE PTR [rbx]
  4082b6:	cmp    al,0x2d
  4082b8:	je     0x408300
  4082ba:	lea    rdi,[rip+0x2eec]        # 0x40b1ad
  4082c1:	mov    ecx,0x4
  4082c6:	mov    rsi,rbx
  4082c9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4082cb:	jne    0x408280
  4082cd:	mov    DWORD PTR [rsp+0x48],0x1
  4082d5:	jmp    0x40829b
  4082d7:	sub    r13d,0x1
  4082db:	test   r13d,r13d
  4082de:	jle    0x4084bd
  4082e4:	mov    rax,QWORD PTR [r14+0x8]
  4082e8:	mov    rbx,rsi
  4082eb:	add    r14,0x8
  4082ef:	mov    QWORD PTR [rip+0x6d42],rax        # 0x40f038
  4082f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408300:	movzx  r8d,BYTE PTR [rbx+0x1]
  408305:	lea    rsi,[rbx+0x1]
  408309:	cmp    r8b,0x77
  40830d:	ja     0x4083fd
  408313:	movzx  eax,r8b
  408317:	movsxd rax,DWORD PTR [r15+rax*4]
  40831b:	add    rax,r15
  40831e:	jmp    rax
  408320:	mov    rbx,rsi
  408323:	mov    DWORD PTR [rsp+0x64],0x1
  40832b:	jmp    0x408300
  40832d:	movsx  eax,BYTE PTR [rbx+0x2]
  408331:	test   al,al
  408333:	je     0x408926
  408339:	add    rbx,0x2
  40833d:	mov    DWORD PTR [rip+0x1cd5],eax        # 0x40a018
  408343:	jmp    0x408300
  408345:	mov    DWORD PTR [rip+0x6cf5],0x1        # 0x40f044
  40834f:	mov    rbx,rsi
  408352:	jmp    0x408300
  408354:	mov    DWORD PTR [rip+0x6cea],0x1        # 0x40f048
  40835e:	mov    rbx,rsi
  408361:	jmp    0x408300
  408363:	movzx  edi,BYTE PTR [rbx+0x2]
  408367:	mov    eax,edi
  408369:	and    eax,0xffffffdf
  40836c:	cmp    al,0x50
  40836e:	je     0x408553
  408374:	test   dil,dil
  408377:	je     0x408553
  40837d:	cmp    dil,0x3d
  408381:	je     0x408f69
  408387:	cmp    dil,0x65
  40838b:	je     0x408f9b
  408391:	cmp    dil,0x75
  408395:	je     0x408ed4
  40839b:	cmp    dil,0x64
  40839f:	je     0x408fd3
  4083a5:	cmp    dil,0x6d
  4083a9:	je     0x408f3e
  4083af:	lea    rdx,[rip+0x2d89]        # 0x40b13f
  4083b6:	movsx  r8d,dil
  4083ba:	mov    ecx,0x1
  4083bf:	call   0x401ec8
  4083c4:	xor    ecx,ecx
  4083c6:	call   0x408028
  4083cb:	sub    r13d,0x1
  4083cf:	test   r13d,r13d
  4083d2:	jle    0x4084bd
  4083d8:	mov    rbx,rsi
  4083db:	mov    rax,QWORD PTR [r14+0x8]
  4083df:	add    r14,0x8
  4083e3:	movzx  r8d,BYTE PTR [rbx+0x1]
  4083e8:	lea    rsi,[rbx+0x1]
  4083ec:	mov    QWORD PTR [rip+0x1c1d],rax        # 0x40a010
  4083f3:	cmp    r8b,0x77
  4083f7:	jbe    0x408313
  4083fd:	lea    rdx,[rip+0x2d95]        # 0x40b199
  408404:	movsx  r8d,r8b
  408408:	mov    ecx,0x1
  40840d:	call   0x401ec8
  408412:	jmp    0x40829b
  408417:	mov    DWORD PTR [rip+0x6c1f],0x1        # 0x40f040
  408421:	mov    rbx,rsi
  408424:	jmp    0x408300
  408429:	movsx  eax,BYTE PTR [rbx+0x2]
  40842d:	lea    edx,[rax-0x30]
  408430:	cmp    dl,0x9
  408433:	ja     0x40853a
  408439:	xor    edx,edx
  40843b:	lea    ecx,[rax-0x30]
  40843e:	cmp    r8b,0x57
  408442:	sete   dl
  408445:	add    rbx,0x2
  408449:	call   0x401e30
  40844e:	jmp    0x408300
  408453:	mov    rbx,rsi
  408456:	mov    DWORD PTR [rsp+0x60],0x1
  40845e:	jmp    0x408300
  408463:	sub    r13d,0x1
  408467:	test   r13d,r13d
  40846a:	jle    0x4084bd
  40846c:	mov    rcx,QWORD PTR [r14+0x8]
  408470:	lea    rdi,[r14+0x8]
  408474:	mov    r14,rdi
  408477:	call   0x408038
  40847c:	mov    ebx,eax
  40847e:	call   0x401e98
  408483:	mov    edx,ebx
  408485:	mov    rcx,rax
  408488:	mov    rbx,rsi
  40848b:	call   0x401eb8
  408490:	jmp    0x408300
  408495:	cmp    BYTE PTR [rbx],0x2d
  408498:	jne    0x40829b
  40849e:	mov    rdi,QWORD PTR [rsp+0xb68]
  4084a6:	lea    rsi,[rip+0x2bd0]        # 0x40b07d
  4084ad:	movsxd rax,r12d
  4084b0:	add    r12d,0x1
  4084b4:	mov    QWORD PTR [rdi+rax*8],rsi
  4084b8:	jmp    0x40829b
  4084bd:	lea    rdx,[rip+0x2c94]        # 0x40b158
  4084c4:	movsx  r8d,r8b
  4084c8:	mov    ecx,0x1
  4084cd:	call   0x401ec8
  4084d2:	jmp    0x4083d8
  4084d7:	cmp    DWORD PTR [rsp+0x48],0x0
  4084dc:	je     0x408510
  4084de:	mov    edi,DWORD PTR [rsp+0x50]
  4084e2:	movsxd rax,edi
  4084e5:	cmp    eax,0x63
  4084e8:	jg     0x408d98
  4084ee:	add    rbx,0x1
  4084f2:	mov    DWORD PTR [rsp+0x48],0x1
  4084fa:	mov    QWORD PTR [rsp+rax*8+0x3e0],rbx
  408502:	mov    eax,edi
  408504:	add    eax,0x1
  408507:	mov    DWORD PTR [rsp+0x50],eax
  40850b:	jmp    0x40829b
  408510:	mov    edi,DWORD PTR [rsp+0x5c]
  408514:	movsxd rax,edi
  408517:	cmp    eax,0x63
  40851a:	jg     0x408db6
  408520:	add    rbx,0x1
  408524:	mov    QWORD PTR [rsp+rax*8+0xc0],rbx
  40852c:	mov    eax,edi
  40852e:	add    eax,0x1
  408531:	mov    DWORD PTR [rsp+0x5c],eax
  408535:	jmp    0x40829b
  40853a:	lea    rdx,[rip+0x2c37]        # 0x40b178
  408541:	mov    ecx,0x1
  408546:	mov    rbx,rsi
  408549:	call   0x401ec8
  40854e:	jmp    0x408300
  408553:	call   0x401e88
  408558:	mov    rdx,QWORD PTR [rax]
  40855b:	mov    rsi,rax
  40855e:	test   rdx,rdx
  408561:	je     0x4083c4
  408567:	nop    WORD PTR [rax+rax*1+0x0]
  408570:	lea    rcx,[rip+0x2b1e]        # 0x40b095
  408577:	call   0x407fb8
  40857c:	cmp    dil,0x50
  408580:	mov    rax,QWORD PTR [rsi+0x10]
  408584:	je     0x4085d1
  408586:	mov    rax,QWORD PTR [rax]
  408589:	movsx  ecx,BYTE PTR [rax]
  40858c:	lea    rbx,[rax+0x1]
  408590:	test   ecx,ecx
  408592:	jne    0x4085b1
  408594:	jmp    0x4085b6
  408596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4085a0:	add    rbx,0x1
  4085a4:	call   0x407fb0
  4085a9:	movsx  ecx,BYTE PTR [rbx-0x1]
  4085ad:	test   ecx,ecx
  4085af:	je     0x4085b6
  4085b1:	cmp    ecx,0xa
  4085b4:	jne    0x4085a0
  4085b6:	mov    ecx,0xa
  4085bb:	call   0x407fb0
  4085c0:	add    rsi,0x18
  4085c4:	mov    rdx,QWORD PTR [rsi]
  4085c7:	test   rdx,rdx
  4085ca:	jne    0x408570
  4085cc:	jmp    0x4083c4
  4085d1:	mov    rcx,QWORD PTR [rax]
  4085d4:	call   0x407fa8
  4085d9:	jmp    0x4085c0
  4085db:	test   r12d,r12d
  4085de:	mov    r14,QWORD PTR [rsp+0xb68]
  4085e6:	mov    ebx,r12d
  4085e9:	jne    0x4085f7
  4085eb:	lea    rax,[rip+0x2a8b]        # 0x40b07d
  4085f2:	mov    bl,0x1
  4085f4:	mov    QWORD PTR [r14],rax
  4085f7:	cmp    DWORD PTR [rsp+0x60],0x0
  4085fc:	jne    0x40893f
  408602:	cmp    QWORD PTR [rsp+0x68],0x0
  408608:	setne  dil
  40860c:	jne    0x408e6d
  408612:	cmp    DWORD PTR [rsp+0x5c],0x0
  408617:	sete   sil
  40861b:	cmp    DWORD PTR [rsp+0x50],0x0
  408620:	je     0x408dcc
  408626:	test   sil,sil
  408629:	je     0x408dcc
  40862f:	lea    r12,[rsp+0x3e0]
  408637:	mov    ecx,DWORD PTR [rsp+0x50]
  40863b:	mov    rdx,r12
  40863e:	call   0x401e68
  408643:	test   rax,rax
  408646:	mov    QWORD PTR [rip+0x6a03],rax        # 0x40f050
  40864d:	je     0x408f03
  408653:	test   sil,sil
  408656:	je     0x4086e4
  40865c:	mov    rcx,QWORD PTR [rip+0x69ed]        # 0x40f050
  408663:	call   0x401e58
  408668:	test   rax,rax
  40866b:	mov    QWORD PTR [rip+0x69e6],rax        # 0x40f058
  408672:	jne    0x4086e4
  408674:	lea    rcx,[rip+0x2ba1]        # 0x40b21c
  40867b:	call   0x407fb8
  408680:	cmp    DWORD PTR [rsp+0x50],0x0
  408685:	je     0x4086b8
  408687:	mov    eax,DWORD PTR [rsp+0x50]
  40868b:	lea    rsi,[rsp+0x3e0]
  408693:	sub    eax,0x1
  408696:	lea    r12,[rsi+rax*8+0x8]
  40869b:	nop    DWORD PTR [rax+rax*1+0x0]
  4086a0:	mov    rdx,QWORD PTR [rsi]
  4086a3:	lea    rcx,[rip+0x2b3c]        # 0x40b1e6
  4086aa:	add    rsi,0x8
  4086ae:	call   0x407fb8
  4086b3:	cmp    rsi,r12
  4086b6:	jne    0x4086a0
  4086b8:	mov    ecx,0xa
  4086bd:	call   0x407fb0
  4086c2:	mov    rax,QWORD PTR [rip+0x38d7]        # 0x40bfa0
  4086c9:	mov    ecx,DWORD PTR [rax]
  4086cb:	call   0x401e48
  4086d0:	lea    rdx,[rip+0x2b19]        # 0x40b1f0
  4086d7:	mov    r8,rax
  4086da:	mov    ecx,0x3
  4086df:	call   0x401ec8
  4086e4:	test   dil,dil
  4086e7:	jne    0x408ec1
  4086ed:	cmp    DWORD PTR [rsp+0x64],0x0
  4086f2:	jne    0x408e80
  4086f8:	mov    rcx,QWORD PTR [rip+0x6959]        # 0x40f058
  4086ff:	cmp    DWORD PTR [rcx+0x50],0x0
  408703:	je     0x408984
  408709:	mov    rax,QWORD PTR [rip+0x3820]        # 0x40bf30
  408710:	mov    QWORD PTR [rip+0x6919],rax        # 0x40f030
  408717:	mov    rax,QWORD PTR [rip+0x6932]        # 0x40f050
  40871e:	cmp    DWORD PTR [rax+0x50],0x0
  408722:	jne    0x408732
  408724:	cmp    QWORD PTR [rip+0x690c],0x0        # 0x40f038
  40872c:	je     0x409031
  408732:	test   ebx,ebx
  408734:	je     0x408b86
  40873a:	lea    eax,[rbx-0x1]
  40873d:	lea    r12,[rsp+0x80]
  408745:	movsd  xmm6,QWORD PTR [rip+0x2d53]        # 0x40b4a0
  40874d:	lea    rax,[r14+rax*8+0x8]
  408752:	lea    r13,[r12+0x8]
  408757:	movsd  xmm7,QWORD PTR [rip+0x2d51]        # 0x40b4b0
  40875f:	mov    QWORD PTR [rsp+0x48],rax
  408764:	mov    rcx,QWORD PTR [r14]
  408767:	cmp    BYTE PTR [rcx],0x2d
  40876a:	je     0x408cc3
  408770:	lea    rdx,[rip+0x2b19]        # 0x40b290
  408777:	call   0x408008
  40877c:	test   rax,rax
  40877f:	mov    rdi,rax
  408782:	je     0x408d54
  408788:	mov    rax,QWORD PTR [r14]
  40878b:	mov    QWORD PTR [rbp+0x0],rax
  40878f:	xor    eax,eax
  408791:	lea    rsi,[rsp+0x700]
  408799:	jmp    0x408893
  40879e:	xchg   ax,ax
  4087a0:	call   QWORD PTR [rip+0x688a]        # 0x40f030
  4087a6:	mov    rdx,rbx
  4087a9:	movsd  QWORD PTR [rsp+0x88],xmm0
  4087b2:	mov    rcx,QWORD PTR [rsp+0x70]
  4087b7:	call   QWORD PTR [rip+0x6873]        # 0x40f030
  4087bd:	movsd  QWORD PTR [rsp+0x80],xmm0
  4087c6:	mov    rcx,QWORD PTR [rsp+0x70]
  4087cb:	mov    rdx,rbx
  4087ce:	call   0x403440
  4087d3:	movsd  QWORD PTR [rsp+0x78],xmm0
  4087d9:	movsd  xmm0,QWORD PTR [rsp+0x88]
  4087e2:	ucomisd xmm0,xmm6
  4087e6:	jbe    0x4087f9
  4087e8:	movsd  xmm2,QWORD PTR [rip+0x2cb8]        # 0x40b4a8
  4087f0:	movsd  QWORD PTR [rsp+0x80],xmm2
  4087f9:	mov    rax,QWORD PTR [rsp+0x70]
  4087fe:	cmp    BYTE PTR [rax],0x0
  408801:	jne    0x408811
  408803:	cmp    rax,rsi
  408806:	jbe    0x408811
  408808:	sub    rax,0x1
  40880c:	mov    QWORD PTR [rsp+0x70],rax
  408811:	mov    ecx,DWORD PTR [rip+0x6829]        # 0x40f040
  408817:	test   ecx,ecx
  408819:	jne    0x408aa0
  40881f:	movsd  xmm0,QWORD PTR [rsp+0x80]
  408828:	ucomisd xmm0,xmm6
  40882c:	jbe    0x4089a0
  408832:	call   QWORD PTR [rip+0x8cc0]        # 0x4114f8
  408838:	mov    rcx,QWORD PTR [rip+0x17d1]        # 0x40a010
  40883f:	lea    rdx,[rax+0x30]
  408843:	call   0x407ff0
  408848:	mov    ecx,0x20
  40884d:	call   0x407fb0
  408852:	mov    rcx,QWORD PTR [rip+0x67df]        # 0x40f038
  408859:	movsd  xmm0,QWORD PTR [rsp+0x78]
  40885f:	movapd xmm1,xmm0
  408863:	movq   rdx,xmm0
  408868:	test   rcx,rcx
  40886b:	je     0x408b50
  408871:	call   0x407fb8
  408876:	mov    rdx,QWORD PTR [rsp+0x70]
  40887b:	test   rdx,rdx
  40887e:	je     0x408b40
  408884:	lea    rcx,[rip+0x2a2b]        # 0x40b2b6
  40888b:	call   0x407fb8
  408890:	mov    eax,DWORD PTR [rbp+0x10]
  408893:	add    eax,0x1
  408896:	mov    r8,rdi
  408899:	mov    edx,0x3e8
  40889e:	mov    rcx,rsi
  4088a1:	mov    DWORD PTR [rbp+0x10],eax
  4088a4:	call   0x408010
  4088a9:	test   rax,rax
  4088ac:	mov    r15,rax
  4088af:	mov    QWORD PTR [rsp+0x70],rax
  4088b4:	je     0x408b60
  4088ba:	mov    edx,0xa
  4088bf:	mov    rcx,rax
  4088c2:	call   0x407f88
  4088c7:	test   rax,rax
  4088ca:	je     0x408bf1
  4088d0:	movsx  eax,BYTE PTR [r15]
  4088d4:	cmp    eax,DWORD PTR [rip+0x173e]        # 0x40a018
  4088da:	je     0x408b20
  4088e0:	mov    r8d,DWORD PTR [rip+0x6761]        # 0x40f048
  4088e7:	lea    rbx,[rsp+0x70]
  4088ec:	mov    rcx,r15
  4088ef:	mov    rdx,rbx
  4088f2:	test   r8d,r8d
  4088f5:	jne    0x4087a0
  4088fb:	call   QWORD PTR [rip+0x672f]        # 0x40f030
  408901:	mov    rdx,rbx
  408904:	movsd  QWORD PTR [rsp+0x80],xmm0
  40890d:	mov    rcx,QWORD PTR [rsp+0x70]
  408912:	call   QWORD PTR [rip+0x6718]        # 0x40f030
  408918:	movsd  QWORD PTR [rsp+0x88],xmm0
  408921:	jmp    0x4087c6
  408926:	lea    rdx,[rip+0x2752]        # 0x40b07f
  40892d:	mov    ecx,0x1
  408932:	mov    rbx,rsi
  408935:	call   0x401ec8
  40893a:	jmp    0x408300
  40893f:	lea    r13,[rsp+0xc0]
  408947:	lea    r12,[rsp+0x3e0]
  40894f:	xor    eax,eax
  408951:	mov    rdx,QWORD PTR [r13+rax*1+0x0]
  408956:	mov    rcx,QWORD PTR [r12+rax*1]
  40895a:	mov    QWORD PTR [r12+rax*1],rdx
  40895e:	mov    QWORD PTR [r13+rax*1+0x0],rcx
  408963:	add    rax,0x8
  408967:	cmp    rax,0x320
  40896d:	jne    0x408951
  40896f:	mov    eax,DWORD PTR [rsp+0x5c]
  408973:	mov    edi,DWORD PTR [rsp+0x50]
  408977:	mov    DWORD PTR [rsp+0x50],eax
  40897b:	mov    DWORD PTR [rsp+0x5c],edi
  40897f:	jmp    0x408602
  408984:	mov    rax,QWORD PTR [rip+0x34e5]        # 0x40be70
  40898b:	mov    QWORD PTR [rip+0x669e],rax        # 0x40f030
  408992:	jmp    0x408717
  408997:	nop    WORD PTR [rax+rax*1+0x0]
  4089a0:	lea    rax,[rsp+0x78]
  4089a5:	mov    rdx,QWORD PTR [rip+0x66a4]        # 0x40f050
  4089ac:	mov    rcx,QWORD PTR [rip+0x66a5]        # 0x40f058
  4089b3:	xor    r9d,r9d
  4089b6:	mov    QWORD PTR [rsp+0x28],r13
  4089bb:	mov    QWORD PTR [rsp+0x20],r12
  4089c0:	mov    QWORD PTR [rsp+0x30],rax
  4089c5:	mov    r8d,0x1
  4089cb:	call   0x401e40
  4089d0:	test   eax,eax
  4089d2:	jne    0x408bb0
  4089d8:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4089e1:	ucomisd xmm0,xmm6
  4089e5:	ja     0x408832
  4089eb:	mov    rcx,QWORD PTR [rip+0x665e]        # 0x40f050
  4089f2:	call   0x401e60
  4089f7:	test   eax,eax
  4089f9:	je     0x408a09
  4089fb:	cmp    QWORD PTR [rip+0x6635],0x0        # 0x40f038
  408a03:	je     0x408c30
  408a09:	mov    rcx,QWORD PTR [rip+0x6640]        # 0x40f050
  408a10:	call   0x401e60
  408a15:	test   eax,eax
  408a17:	je     0x408a45
  408a19:	movsd  xmm0,QWORD PTR [rsp+0x88]
  408a22:	mulsd  xmm0,xmm7
  408a26:	movsd  QWORD PTR [rsp+0x88],xmm0
  408a2f:	movsd  xmm0,QWORD PTR [rsp+0x80]
  408a38:	mulsd  xmm0,xmm7
  408a3c:	movsd  QWORD PTR [rsp+0x80],xmm0
  408a45:	mov    eax,DWORD PTR [rip+0x65f9]        # 0x40f044
  408a4b:	test   eax,eax
  408a4d:	je     0x408ad3
  408a53:	movsd  xmm0,QWORD PTR [rsp+0x88]
  408a5c:	mov    rcx,QWORD PTR [rip+0x65d5]        # 0x40f038
  408a63:	movapd xmm1,xmm0
  408a67:	movq   rdx,xmm0
  408a6c:	call   0x407fb8
  408a71:	mov    ecx,0x9
  408a76:	call   0x407fb0
  408a7b:	movsd  xmm0,QWORD PTR [rsp+0x80]
  408a84:	mov    rcx,QWORD PTR [rip+0x65ad]        # 0x40f038
  408a8b:	movapd xmm1,xmm0
  408a8f:	movq   rdx,xmm0
  408a94:	call   0x407fb8
  408a99:	jmp    0x408848
  408a9e:	xchg   ax,ax
  408aa0:	mov    rax,QWORD PTR [rsp+0x70]
  408aa5:	movzx  ebx,BYTE PTR [rax]
  408aa8:	mov    BYTE PTR [rax],0x0
  408aab:	call   QWORD PTR [rip+0x8a47]        # 0x4114f8
  408ab1:	lea    rdx,[rax+0x30]
  408ab5:	mov    rcx,rsi
  408ab8:	call   0x407ff0
  408abd:	mov    rax,QWORD PTR [rsp+0x70]
  408ac2:	mov    ecx,0x9
  408ac7:	mov    BYTE PTR [rax],bl
  408ac9:	call   0x407fb0
  408ace:	jmp    0x40881f
  408ad3:	movsd  xmm0,QWORD PTR [rsp+0x80]
  408adc:	mov    rcx,QWORD PTR [rip+0x6555]        # 0x40f038
  408ae3:	movapd xmm1,xmm0
  408ae7:	movq   rdx,xmm0
  408aec:	call   0x407fb8
  408af1:	mov    ecx,0x9
  408af6:	call   0x407fb0
  408afb:	movsd  xmm0,QWORD PTR [rsp+0x88]
  408b04:	mov    rcx,QWORD PTR [rip+0x652d]        # 0x40f038
  408b0b:	movapd xmm1,xmm0
  408b0f:	movq   rdx,xmm0
  408b14:	call   0x407fb8
  408b19:	jmp    0x408848
  408b1e:	xchg   ax,ax
  408b20:	call   QWORD PTR [rip+0x89d2]        # 0x4114f8
  408b26:	lea    rdx,[rax+0x30]
  408b2a:	mov    rcx,rsi
  408b2d:	call   0x407ff0
  408b32:	jmp    0x408890
  408b37:	nop    WORD PTR [rax+rax*1+0x0]
  408b40:	mov    ecx,0xa
  408b45:	call   0x407fb0
  408b4a:	jmp    0x408890
  408b4f:	nop
  408b50:	lea    rcx,[rip+0x275a]        # 0x40b2b1
  408b57:	jmp    0x408871
  408b5c:	nop    DWORD PTR [rax+0x0]
  408b60:	mov    rcx,rdi
  408b63:	call   0x408020
  408b68:	mov    QWORD PTR [rbp+0x0],0x0
  408b70:	add    r14,0x8
  408b74:	cmp    r14,QWORD PTR [rsp+0x48]
  408b79:	jne    0x408764
  408b7f:	mov    rcx,QWORD PTR [rip+0x64d2]        # 0x40f058
  408b86:	test   rcx,rcx
  408b89:	je     0x408b90
  408b8b:	call   0x401ea8
  408b90:	mov    rcx,QWORD PTR [rip+0x64b9]        # 0x40f050
  408b97:	test   rcx,rcx
  408b9a:	je     0x408ba1
  408b9c:	call   0x401ea8
  408ba1:	call   0x401eb0
  408ba6:	jmp    0x4083c4
  408bab:	nop    DWORD PTR [rax+rax*1+0x0]
  408bb0:	mov    rax,QWORD PTR [rip+0x33e9]        # 0x40bfa0
  408bb7:	movsd  xmm3,QWORD PTR [rip+0x28e9]        # 0x40b4a8
  408bbf:	movsd  QWORD PTR [rsp+0x80],xmm3
  408bc8:	mov    ecx,DWORD PTR [rax]
  408bca:	movsd  QWORD PTR [rsp+0x88],xmm3
  408bd3:	call   0x401e48
  408bd8:	lea    rdx,[rip+0x26bf]        # 0x40b29e
  408bdf:	mov    r8,rax
  408be2:	mov    ecx,0xfffffffd
  408be7:	call   0x401ec8
  408bec:	jmp    0x4089d8
  408bf1:	mov    rcx,r15
  408bf4:	call   0x407f78
  408bf9:	mov    r9d,0xa
  408bff:	mov    WORD PTR [r15+rax*1],r9w
  408c04:	jmp    0x408c15
  408c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c10:	cmp    eax,0xa
  408c13:	je     0x408c22
  408c15:	mov    rcx,rdi
  408c18:	call   0x408018
  408c1d:	cmp    eax,0xffffffff
  408c20:	jne    0x408c10
  408c22:	mov    r15,QWORD PTR [rsp+0x70]
  408c27:	jmp    0x4088d0
  408c2c:	nop    DWORD PTR [rax+0x0]
  408c30:	mov    edx,DWORD PTR [rip+0x640e]        # 0x40f044
  408c36:	test   edx,edx
  408c38:	je     0x408cdc
  408c3e:	call   QWORD PTR [rip+0x88b4]        # 0x4114f8
  408c44:	lea    r10,[rsp+0x90]
  408c4c:	movsd  xmm1,QWORD PTR [rsp+0x88]
  408c55:	mov    r9d,0x53
  408c5b:	mov    r8d,0x4e
  408c61:	mov    rbx,rax
  408c64:	mov    rcx,r10
  408c67:	mov    QWORD PTR [rsp+0x50],r10
  408c6c:	call   0x401e38
  408c71:	lea    rdx,[rbx+0x30]
  408c75:	mov    rcx,rax
  408c78:	call   0x407ff0
  408c7d:	mov    ecx,0x9
  408c82:	call   0x407fb0
  408c87:	call   QWORD PTR [rip+0x886b]        # 0x4114f8
  408c8d:	movsd  xmm1,QWORD PTR [rsp+0x80]
  408c96:	mov    rbx,rax
  408c99:	mov    r9d,0x57
  408c9f:	mov    r8d,0x45
  408ca5:	mov    r10,QWORD PTR [rsp+0x50]
  408caa:	mov    rcx,r10
  408cad:	call   0x401e38
  408cb2:	lea    rdx,[rbx+0x30]
  408cb6:	mov    rcx,rax
  408cb9:	call   0x407ff0
  408cbe:	jmp    0x408848
  408cc3:	call   QWORD PTR [rip+0x882f]        # 0x4114f8
  408cc9:	mov    rdi,rax
  408ccc:	lea    rax,[rip+0x25b5]        # 0x40b288
  408cd3:	mov    QWORD PTR [rbp+0x0],rax
  408cd7:	jmp    0x40878f
  408cdc:	call   QWORD PTR [rip+0x8816]        # 0x4114f8
  408ce2:	lea    r10,[rsp+0x90]
  408cea:	movsd  xmm1,QWORD PTR [rsp+0x80]
  408cf3:	mov    r9d,0x57
  408cf9:	mov    r8d,0x45
  408cff:	mov    rbx,rax
  408d02:	mov    rcx,r10
  408d05:	mov    QWORD PTR [rsp+0x50],r10
  408d0a:	call   0x401e38
  408d0f:	lea    rdx,[rbx+0x30]
  408d13:	mov    rcx,rax
  408d16:	call   0x407ff0
  408d1b:	mov    ecx,0x9
  408d20:	call   0x407fb0
  408d25:	call   QWORD PTR [rip+0x87cd]        # 0x4114f8
  408d2b:	mov    r9d,0x53
  408d31:	mov    rbx,rax
  408d34:	mov    r8d,0x4e
  408d3a:	movsd  xmm1,QWORD PTR [rsp+0x88]
  408d43:	jmp    0x408ca5
  408d48:	mov    rbx,QWORD PTR [r14]
  408d4b:	mov    QWORD PTR [rbp+0x8],rbx
  408d4f:	jmp    0x408208
  408d54:	mov    rdx,QWORD PTR [r14]
  408d57:	lea    r8,[rip+0x2535]        # 0x40b293
  408d5e:	mov    ecx,0xfffffffe
  408d63:	call   0x401ec8
  408d68:	jmp    0x408b70
  408d6d:	call   0x401e78
  408d72:	mov    rsi,rax
  408d75:	call   QWORD PTR [rip+0x877d]        # 0x4114f8
  408d7b:	lea    rdx,[rip+0x2296]        # 0x40b018
  408d82:	lea    rcx,[rax+0x60]
  408d86:	mov    r9,rbx
  408d89:	mov    r8,rsi
  408d8c:	call   0x408000
  408d91:	xor    ecx,ecx
  408d93:	call   0x408028
  408d98:	lea    rdx,[rip+0x2412]        # 0x40b1b1
  408d9f:	mov    ecx,0x1
  408da4:	call   0x401ec8
  408da9:	mov    DWORD PTR [rsp+0x48],0x1
  408db1:	jmp    0x40829b
  408db6:	lea    rdx,[rip+0x23f4]        # 0x40b1b1
  408dbd:	mov    ecx,0x1
  408dc2:	call   0x401ec8
  408dc7:	jmp    0x40829b
  408dcc:	lea    r13,[rsp+0xc0]
  408dd4:	mov    ecx,DWORD PTR [rsp+0x5c]
  408dd8:	mov    rdx,r13
  408ddb:	call   0x401e68
  408de0:	test   rax,rax
  408de3:	mov    QWORD PTR [rip+0x626e],rax        # 0x40f058
  408dea:	je     0x40905f
  408df0:	cmp    DWORD PTR [rsp+0x50],0x0
  408df5:	jne    0x40862f
  408dfb:	mov    rcx,QWORD PTR [rip+0x6256]        # 0x40f058
  408e02:	call   0x401e58
  408e07:	test   rax,rax
  408e0a:	mov    QWORD PTR [rip+0x623f],rax        # 0x40f050
  408e11:	jne    0x408653
  408e17:	lea    rcx,[rip+0x23fe]        # 0x40b21c
  408e1e:	call   0x407fb8
  408e23:	mov    ecx,0xa
  408e28:	call   0x407fb0
  408e2d:	mov    rax,QWORD PTR [rip+0x316c]        # 0x40bfa0
  408e34:	mov    ecx,DWORD PTR [rax]
  408e36:	call   0x401e48
  408e3b:	lea    rdx,[rip+0x23ae]        # 0x40b1f0
  408e42:	mov    r8,rax
  408e45:	mov    ecx,0x3
  408e4a:	call   0x401ec8
  408e4f:	test   sil,sil
  408e52:	je     0x4086e4
  408e58:	mov    rcx,QWORD PTR [rip+0x61f1]        # 0x40f050
  408e5f:	test   rcx,rcx
  408e62:	jne    0x408663
  408e68:	jmp    0x4086e4
  408e6d:	lea    rdx,[rip+0x2359]        # 0x40b1cd
  408e74:	xor    ecx,ecx
  408e76:	call   0x407fa0
  408e7b:	jmp    0x408612
  408e80:	mov    edx,DWORD PTR [rip+0x1192]        # 0x40a018
  408e86:	lea    rcx,[rip+0x23ab]        # 0x40b238
  408e8d:	call   0x407fb8
  408e92:	mov    rcx,QWORD PTR [rip+0x61bf]        # 0x40f058
  408e99:	call   0x401e50
  408e9e:	mov    edx,DWORD PTR [rip+0x1174]        # 0x40a018
  408ea4:	lea    rcx,[rip+0x23b5]        # 0x40b260
  408eab:	call   0x407fb8
  408eb0:	mov    rcx,QWORD PTR [rip+0x6199]        # 0x40f050
  408eb7:	call   0x401e50
  408ebc:	jmp    0x4086f8
  408ec1:	lea    rdx,[rip+0x236a]        # 0x40b232
  408ec8:	xor    ecx,ecx
  408eca:	call   0x407fa0
  408ecf:	jmp    0x4086ed
  408ed4:	call   0x401e70
  408ed9:	mov    rbx,rax
  408edc:	jmp    0x408ef6
  408ede:	mov    r9,QWORD PTR [rbx+0x10]
  408ee2:	mov    r8,QWORD PTR [rbx+0x8]
  408ee6:	lea    rcx,[rip+0x21cc]        # 0x40b0b9
  408eed:	add    rbx,0x18
  408ef1:	call   0x407fb8
  408ef6:	mov    rdx,QWORD PTR [rbx]
  408ef9:	test   rdx,rdx
  408efc:	jne    0x408ede
  408efe:	jmp    0x4083c4
  408f03:	lea    rcx,[rip+0x2312]        # 0x40b21c
  408f0a:	xor    r13d,r13d
  408f0d:	call   0x407fb8
  408f12:	mov    r15d,DWORD PTR [rsp+0x50]
  408f17:	nop    WORD PTR [rax+rax*1+0x0]
  408f20:	mov    rdx,QWORD PTR [r12+r13*8]
  408f24:	lea    rcx,[rip+0x22bb]        # 0x40b1e6
  408f2b:	add    r13,0x1
  408f2f:	call   0x407fb8
  408f34:	cmp    r15d,r13d
  408f37:	jg     0x408f20
  408f39:	jmp    0x408e23
  408f3e:	call   0x401e80
  408f43:	mov    rbx,rax
  408f46:	jmp    0x408f5c
  408f48:	mov    r8,QWORD PTR [rbx+0x8]
  408f4c:	lea    rcx,[rip+0x21e0]        # 0x40b133
  408f53:	add    rbx,0x10
  408f57:	call   0x407fb8
  408f5c:	mov    rdx,QWORD PTR [rbx]
  408f5f:	test   rdx,rdx
  408f62:	jne    0x408f48
  408f64:	jmp    0x4083c4
  408f69:	call   0x401e88
  408f6e:	add    rbx,0x3
  408f72:	mov    rdi,rax
  408f75:	jmp    0x408f8e
  408f77:	mov    rdx,rbx
  408f7a:	mov    rcx,rsi
  408f7d:	call   0x407f80
  408f82:	test   eax,eax
  408f84:	je     0x409044
  408f8a:	add    rdi,0x18
  408f8e:	mov    rsi,QWORD PTR [rdi]
  408f91:	test   rsi,rsi
  408f94:	jne    0x408f77
  408f96:	jmp    0x4083c4
  408f9b:	call   0x401e90
  408fa0:	mov    rbx,rax
  408fa3:	jmp    0x408fc6
  408fa5:	mov    rax,QWORD PTR [rbx+0x18]
  408fa9:	mov    r9,QWORD PTR [rbx+0x10]
  408fad:	lea    rcx,[rip+0x20f1]        # 0x40b0a5
  408fb4:	mov    r8,QWORD PTR [rbx+0x8]
  408fb8:	add    rbx,0x20
  408fbc:	mov    QWORD PTR [rsp+0x20],rax
  408fc1:	call   0x407fb8
  408fc6:	mov    rdx,QWORD PTR [rbx]
  408fc9:	test   rdx,rdx
  408fcc:	jne    0x408fa5
  408fce:	jmp    0x4083c4
  408fd3:	lea    rcx,[rip+0x20ee]        # 0x40b0c8
  408fda:	call   0x407fa8
  408fdf:	call   0x401ea0
  408fe4:	mov    rbx,rax
  408fe7:	jmp    0x408fed
  408fe9:	add    rbx,0x20
  408fed:	mov    rdx,QWORD PTR [rbx]
  408ff0:	test   rdx,rdx
  408ff3:	je     0x4083c4
  408ff9:	mov    r8,QWORD PTR [rbx+0x10]
  408ffd:	mov    r9,QWORD PTR [rbx+0x8]
  409001:	lea    rcx,[rip+0x210e]        # 0x40b116
  409008:	call   0x407fb8
  40900d:	mov    r8,QWORD PTR [rbx+0x18]
  409011:	test   r8,r8
  409014:	je     0x408fe9
  409016:	cmp    BYTE PTR [r8],0x0
  40901a:	je     0x408fe9
  40901c:	lea    rdx,[rip+0x2105]        # 0x40b128
  409023:	lea    rcx,[rip+0x2100]        # 0x40b12a
  40902a:	call   0x407fb8
  40902f:	jmp    0x408fe9
  409031:	lea    rax,[rip+0x224b]        # 0x40b283
  409038:	mov    QWORD PTR [rip+0x5ff9],rax        # 0x40f038
  40903f:	jmp    0x408732
  409044:	mov    rax,QWORD PTR [rdi+0x10]
  409048:	lea    rcx,[rip+0x204c]        # 0x40b09b
  40904f:	mov    rdx,rsi
  409052:	mov    r8,QWORD PTR [rax]
  409055:	call   0x407fb8
  40905a:	jmp    0x4083c4
  40905f:	lea    rcx,[rip+0x2168]        # 0x40b1ce
  409066:	xor    r12d,r12d
  409069:	call   0x407fb8
  40906e:	mov    r15d,DWORD PTR [rsp+0x5c]
  409073:	jmp    0x40908a
  409075:	mov    rdx,QWORD PTR [r13+r12*8+0x0]
  40907a:	lea    rcx,[rip+0x2165]        # 0x40b1e6
  409081:	add    r12,0x1
  409085:	call   0x407fb8
  40908a:	cmp    r15d,r12d
  40908d:	jg     0x409075
  40908f:	mov    ecx,0xa
  409094:	call   0x407fb0
  409099:	mov    rax,QWORD PTR [rip+0x2f00]        # 0x40bfa0
  4090a0:	mov    ecx,DWORD PTR [rax]
  4090a2:	call   0x401e48
  4090a7:	lea    rdx,[rip+0x2142]        # 0x40b1f0
  4090ae:	mov    r8,rax
  4090b1:	mov    ecx,0x3
  4090b6:	call   0x401ec8
  4090bb:	jmp    0x408df0
  4090c0:	(bad)  
  4090c1:	(bad)  
  4090c2:	(bad)  
  4090c3:	(bad)  
  4090c4:	(bad)  
  4090c5:	(bad)  
  4090c6:	(bad)  
  4090c7:	inc    DWORD PTR [rax]
  4090c9:	add    BYTE PTR [rax],al
  4090cb:	add    BYTE PTR [rax],al
  4090cd:	add    BYTE PTR [rax],al
  4090cf:	add    bh,bh
  4090d1:	(bad)  
  4090d2:	(bad)  
  4090d3:	(bad)  
  4090d4:	(bad)  
  4090d5:	(bad)  
  4090d6:	(bad)  
  4090d7:	inc    DWORD PTR [rax]
  4090d9:	add    BYTE PTR [rax],al
  4090db:	add    BYTE PTR [rax],al
  4090dd:	add    BYTE PTR [rax],al
	...
