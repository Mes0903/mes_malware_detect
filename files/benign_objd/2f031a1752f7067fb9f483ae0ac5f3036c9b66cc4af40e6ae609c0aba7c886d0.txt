
2f031a1752f7067fb9f483ae0ac5f3036c9b66cc4af40e6ae609c0aba7c886d0.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	rex push rbx
   14000100a:	sub    rsp,0x40
   14000100e:	lea    rax,[rip+0x6b3b]        # 0x140007b50
   140001015:	mov    r10d,edx
   140001018:	sub    r10d,eax
   14000101b:	mov    r11,r8
   14000101e:	mov    al,BYTE PTR [rip+0x6c87]        # 0x140007cab
   140001024:	lea    r8,[rdx+0x1]
   140001028:	movzx  eax,BYTE PTR [rdx]
   14000102b:	mov    rbx,rcx
   14000102e:	mov    rdx,QWORD PTR [rsp+0x78]
   140001033:	shl    eax,0x18
   140001036:	or     eax,r10d
   140001039:	mov    QWORD PTR [rsp+0x28],rdx
   14000103e:	mov    DWORD PTR [rsp+0x30],eax
   140001042:	movzx  eax,WORD PTR [r8]
   140001046:	mov    DWORD PTR [rsp+0x34],eax
   14000104a:	mov    eax,DWORD PTR [r8+0x2]
   14000104e:	mov    DWORD PTR [rsp+0x38],eax
   140001052:	mov    eax,DWORD PTR [r8+0x6]
   140001056:	add    r8,0xa
   14000105a:	mov    DWORD PTR [rsp+0x3c],eax
   14000105e:	mov    rax,QWORD PTR [rcx+0x8]
   140001062:	mov    QWORD PTR [rdx],rax
   140001065:	mov    rax,QWORD PTR [rcx+0x8]
   140001069:	movzx  ecx,WORD PTR [rax]
   14000106c:	mov    QWORD PTR [rdx+0x10],r8
   140001070:	mov    DWORD PTR [rdx+0x8],ecx
   140001073:	mov    DWORD PTR [rdx+0xc],0x2
   14000107a:	movzx  eax,WORD PTR [r8]
   14000107e:	mov    r8,r11
   140001081:	mov    DWORD PTR [rdx+0x18],eax
   140001084:	mov    eax,DWORD PTR [rsp+0x70]
   140001088:	mov    DWORD PTR [rdx+0x1c],0x1
   14000108f:	lea    rdx,[rsp+0x30]
   140001094:	mov    rcx,QWORD PTR [rbx+0x20]
   140001098:	mov    DWORD PTR [rsp+0x20],eax
   14000109c:	call   QWORD PTR [rip+0x5f5e]        # 0x140007000
   1400010a2:	add    rsp,0x40
   1400010a6:	pop    rbx
   1400010a7:	ret    
   1400010a8:	int3   
   1400010a9:	int3   
   1400010aa:	int3   
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	mov    rax,rsp
   1400010b3:	mov    QWORD PTR [rax+0x8],rbx
   1400010b7:	mov    QWORD PTR [rax+0x10],rbp
   1400010bb:	mov    QWORD PTR [rax+0x18],rsi
   1400010bf:	mov    QWORD PTR [rax+0x20],rdi
   1400010c3:	push   r12
   1400010c5:	push   r14
   1400010c7:	push   r15
   1400010c9:	sub    rsp,0x40
   1400010cd:	mov    rbx,QWORD PTR [rsp+0x90]
   1400010d5:	mov    r15,r9
   1400010d8:	mov    sil,r8b
   1400010db:	mov    r14d,edx
   1400010de:	mov    r12,rcx
   1400010e1:	test   rbx,rbx
   1400010e4:	je     0x140001154
   1400010e6:	mov    rbp,QWORD PTR [rsp+0x80]
   1400010ee:	mov    eax,edx
   1400010f0:	test   edx,edx
   1400010f2:	je     0x140001116
   1400010f4:	cmp    eax,0x1
   1400010f7:	jne    0x140001119
   1400010f9:	movzx  ecx,r8b
   1400010fd:	mov    eax,0x100
   140001102:	inc    ecx
   140001104:	mov    QWORD PTR [rbx+0x10],r9
   140001108:	test   r8b,r8b
   14000110b:	mov    QWORD PTR [rbx+0x18],rbp
   14000110f:	cmovne eax,ecx
   140001112:	mov    DWORD PTR [rbx],eax
   140001114:	jmp    0x140001119
   140001116:	and    DWORD PTR [rbx],0x0
   140001119:	mov    rdi,QWORD PTR [rbx+0x28]
   14000111d:	test   rdi,rdi
   140001120:	je     0x140001154
   140001122:	mov    rcx,rdi
   140001125:	call   QWORD PTR [rip+0x61bd]        # 0x1400072e8
   14000112b:	mov    rax,QWORD PTR [rbx+0x30]
   14000112f:	mov    r9,r15
   140001132:	mov    QWORD PTR [rsp+0x30],rax
   140001137:	mov    r8b,sil
   14000113a:	mov    rax,QWORD PTR [rsp+0x88]
   140001142:	mov    edx,r14d
   140001145:	mov    QWORD PTR [rsp+0x28],rax
   14000114a:	mov    rcx,r12
   14000114d:	mov    QWORD PTR [rsp+0x20],rbp
   140001152:	call   rdi
   140001154:	mov    rbx,QWORD PTR [rsp+0x60]
   140001159:	mov    rbp,QWORD PTR [rsp+0x68]
   14000115e:	mov    rsi,QWORD PTR [rsp+0x70]
   140001163:	mov    rdi,QWORD PTR [rsp+0x78]
   140001168:	add    rsp,0x40
   14000116c:	pop    r15
   14000116e:	pop    r14
   140001170:	pop    r12
   140001172:	ret    
   140001173:	int3   
   140001174:	int3   
   140001175:	int3   
   140001176:	int3   
   140001177:	int3   
   140001178:	int3   
   140001179:	int3   
   14000117a:	int3   
   14000117b:	int3   
   14000117c:	int3   
   14000117d:	int3   
   14000117e:	int3   
   14000117f:	int3   
   140001180:	sub    rsp,0x28
   140001184:	and    QWORD PTR [rsp+0x30],0x0
   14000118a:	lea    r8,[rsp+0x30]
   14000118f:	lea    rdx,[rip+0x62c2]        # 0x140007458
   140001196:	mov    ecx,0x1
   14000119b:	call   QWORD PTR [rip+0x5fbf]        # 0x140007160
   1400011a1:	test   eax,eax
   1400011a3:	je     0x140001259
   1400011a9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400011ae:	test   rcx,rcx
   1400011b1:	je     0x140001259
   1400011b7:	lea    rdx,[rip+0x62b2]        # 0x140007470
   1400011be:	call   QWORD PTR [rip+0x5f8c]        # 0x140007150
   1400011c4:	mov    rcx,QWORD PTR [rsp+0x30]
   1400011c9:	lea    rdx,[rip+0x62b8]        # 0x140007488
   1400011d0:	mov    QWORD PTR [rip+0x8549],rax        # 0x140009720
   1400011d7:	call   QWORD PTR [rip+0x5f73]        # 0x140007150
   1400011dd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400011e2:	lea    rdx,[rip+0x62b7]        # 0x1400074a0
   1400011e9:	mov    QWORD PTR [rip+0x8538],rax        # 0x140009728
   1400011f0:	call   QWORD PTR [rip+0x5f5a]        # 0x140007150
   1400011f6:	mov    rcx,QWORD PTR [rsp+0x30]
   1400011fb:	lea    rdx,[rip+0x62ae]        # 0x1400074b0
   140001202:	mov    QWORD PTR [rip+0x8527],rax        # 0x140009730
   140001209:	call   QWORD PTR [rip+0x5f41]        # 0x140007150
   14000120f:	cmp    QWORD PTR [rip+0x8509],0x0        # 0x140009720
   140001217:	mov    QWORD PTR [rip+0x851a],rax        # 0x140009738
   14000121e:	je     0x140001239
   140001220:	cmp    QWORD PTR [rip+0x8500],0x0        # 0x140009728
   140001228:	je     0x140001239
   14000122a:	cmp    QWORD PTR [rip+0x84fe],0x0        # 0x140009730
   140001232:	je     0x140001239
   140001234:	test   rax,rax
   140001237:	jne    0x140001259
   140001239:	and    QWORD PTR [rip+0x84df],0x0        # 0x140009720
   140001241:	and    QWORD PTR [rip+0x84df],0x0        # 0x140009728
   140001249:	and    QWORD PTR [rip+0x84df],0x0        # 0x140009730
   140001251:	and    QWORD PTR [rip+0x84df],0x0        # 0x140009738
   140001259:	lea    rcx,[rip+0x44a0]        # 0x140005700
   140001260:	add    rsp,0x28
   140001264:	jmp    0x140004f98
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	rex push rdi
   140001272:	sub    rsp,0x20
   140001276:	mov    rdi,QWORD PTR [rip+0x84a3]        # 0x140009720
   14000127d:	test   rdi,rdi
   140001280:	je     0x1400012d2
   140001282:	cmp    QWORD PTR [rip+0x848e],0x0        # 0x140009718
   14000128a:	je     0x1400012b4
   14000128c:	mov    rdi,QWORD PTR [rip+0x8495]        # 0x140009728
   140001293:	mov    rcx,rdi
   140001296:	call   QWORD PTR [rip+0x604c]        # 0x1400072e8
   14000129c:	mov    rcx,QWORD PTR [rip+0x8475]        # 0x140009718
   1400012a3:	call   rdi
   1400012a5:	and    QWORD PTR [rip+0x846b],0x0        # 0x140009718
   1400012ad:	mov    rdi,QWORD PTR [rip+0x846c]        # 0x140009720
   1400012b4:	mov    rcx,rdi
   1400012b7:	call   QWORD PTR [rip+0x602b]        # 0x1400072e8
   1400012bd:	lea    r9,[rip+0x8454]        # 0x140009718
   1400012c4:	xor    r8d,r8d
   1400012c7:	xor    edx,edx
   1400012c9:	lea    rcx,[rip+0x6200]        # 0x1400074d0
   1400012d0:	call   rdi
   1400012d2:	lea    rcx,[rip+0x43d7]        # 0x1400056b0
   1400012d9:	add    rsp,0x20
   1400012dd:	pop    rdi
   1400012de:	jmp    0x140004f98
   1400012e3:	int3   
   1400012e4:	int3   
   1400012e5:	int3   
   1400012e6:	int3   
   1400012e7:	int3   
   1400012e8:	int3   
   1400012e9:	int3   
   1400012ea:	int3   
   1400012eb:	int3   
   1400012ec:	int3   
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	sub    rsp,0x28
   1400012f4:	xor    edx,edx
   1400012f6:	lea    rcx,[rip+0x83bb]        # 0x1400096b8
   1400012fd:	lea    r8d,[rdx+0x30]
   140001301:	call   0x140005592
   140001306:	lea    rcx,[rip+0x4423]        # 0x140005730
   14000130d:	add    rsp,0x28
   140001311:	jmp    0x140004f98
   140001316:	int3   
   140001317:	int3   
   140001318:	int3   
   140001319:	int3   
   14000131a:	int3   
   14000131b:	int3   
   14000131c:	int3   
   14000131d:	int3   
   14000131e:	int3   
   14000131f:	int3   
   140001320:	lea    rcx,[rip+0x4439]        # 0x140005760
   140001327:	jmp    0x140004f98
   14000132c:	int3   
   14000132d:	int3   
   14000132e:	int3   
   14000132f:	int3   
   140001330:	int3   
   140001331:	int3   
   140001332:	int3   
   140001333:	int3   
   140001334:	int3   
   140001335:	int3   
   140001336:	int3   
   140001337:	int3   
   140001338:	rex push rbx
   14000133a:	sub    rsp,0x20
   14000133e:	mov    rbx,rcx
   140001341:	call   QWORD PTR [rip+0x5e11]        # 0x140007158
   140001347:	mov    r8,rbx
   14000134a:	xor    edx,edx
   14000134c:	mov    rcx,rax
   14000134f:	add    rsp,0x20
   140001353:	pop    rbx
   140001354:	rex.W jmp QWORD PTR [rip+0x5e15]        # 0x140007170
   14000135b:	int3   
   14000135c:	int3   
   14000135d:	int3   
   14000135e:	int3   
   14000135f:	int3   
   140001360:	int3   
   140001361:	int3   
   140001362:	int3   
   140001363:	int3   
   140001364:	int3   
   140001365:	int3   
   140001366:	int3   
   140001367:	int3   
   140001368:	int3   
   140001369:	int3   
   14000136a:	int3   
   14000136b:	int3   
   14000136c:	int3   
   14000136d:	int3   
   14000136e:	int3   
   14000136f:	int3   
   140001370:	mov    r11,rsp
   140001373:	mov    QWORD PTR [r11+0x8],rbx
   140001377:	mov    QWORD PTR [r11+0x18],rbp
   14000137b:	mov    QWORD PTR [r11+0x20],rsi
   14000137f:	push   rdi
   140001380:	sub    rsp,0x30
   140001384:	and    QWORD PTR [r11+0x10],0x0
   140001389:	lea    rax,[r11+0x10]
   14000138d:	xor    edx,edx
   14000138f:	mov    QWORD PTR [r11-0x18],rax
   140001393:	mov    rbp,rcx
   140001396:	lea    r9,[rip+0x63db]        # 0x140007778
   14000139d:	lea    rcx,[rip+0x666c]        # 0x140007a10
   1400013a4:	lea    r8d,[rdx+0x1]
   1400013a8:	call   QWORD PTR [rip+0x5f2a]        # 0x1400072d8
   1400013ae:	mov    edi,eax
   1400013b0:	test   eax,eax
   1400013b2:	js     0x140001408
   1400013b4:	cmp    QWORD PTR [rbp+0x8],0x0
   1400013b9:	jne    0x1400013e0
   1400013bb:	mov    rbx,QWORD PTR [rsp+0x48]
   1400013c0:	mov    rax,QWORD PTR [rbx]
   1400013c3:	mov    rdi,QWORD PTR [rax+0x18]
   1400013c7:	mov    rcx,rdi
   1400013ca:	call   QWORD PTR [rip+0x5f18]        # 0x1400072e8
   1400013d0:	mov    edx,0x8
   1400013d5:	mov    rcx,rbx
   1400013d8:	call   rdi
   1400013da:	mov    edi,eax
   1400013dc:	test   eax,eax
   1400013de:	js     0x140001408
   1400013e0:	mov    rbx,QWORD PTR [rsp+0x48]
   1400013e5:	mov    rax,QWORD PTR [rbx]
   1400013e8:	mov    rsi,QWORD PTR [rax+0x48]
   1400013ec:	mov    rcx,rsi
   1400013ef:	call   QWORD PTR [rip+0x5ef3]        # 0x1400072e8
   1400013f5:	mov    rdx,QWORD PTR [rbp+0x8]
   1400013f9:	lea    r8,[rbp+0x10]
   1400013fd:	mov    rcx,rbx
   140001400:	call   rsi
   140001402:	mov    edi,eax
   140001404:	test   eax,eax
   140001406:	jns    0x14000140f
   140001408:	mov    ecx,eax
   14000140a:	call   0x140002590
   14000140f:	mov    ecx,edi
   140001411:	call   0x1400024a8
   140001416:	mov    rsi,QWORD PTR [rsp+0x48]
   14000141b:	test   rsi,rsi
   14000141e:	je     0x14000143b
   140001420:	and    QWORD PTR [rsp+0x48],0x0
   140001426:	mov    rax,QWORD PTR [rsi]
   140001429:	mov    rbx,QWORD PTR [rax+0x10]
   14000142d:	mov    rcx,rbx
   140001430:	call   QWORD PTR [rip+0x5eb2]        # 0x1400072e8
   140001436:	mov    rcx,rsi
   140001439:	call   rbx
   14000143b:	mov    rbx,QWORD PTR [rsp+0x40]
   140001440:	mov    eax,edi
   140001442:	mov    rbp,QWORD PTR [rsp+0x50]
   140001447:	mov    rsi,QWORD PTR [rsp+0x58]
   14000144c:	add    rsp,0x30
   140001450:	pop    rdi
   140001451:	ret    
   140001452:	int3   
   140001453:	int3   
   140001454:	int3   
   140001455:	int3   
   140001456:	int3   
   140001457:	int3   
   140001458:	int3   
   140001459:	int3   
   14000145a:	int3   
   14000145b:	int3   
   14000145c:	int3   
   14000145d:	int3   
   14000145e:	int3   
   14000145f:	int3   
   140001460:	mov    QWORD PTR [rsp+0x10],rbx
   140001465:	mov    QWORD PTR [rsp+0x18],rbp
   14000146a:	mov    QWORD PTR [rsp+0x20],rsi
   14000146f:	push   rdi
   140001470:	sub    rsp,0x30
   140001474:	mov    rax,QWORD PTR [rcx]
   140001477:	mov    rsi,rcx
   14000147a:	mov    QWORD PTR [rcx+0x8],rdx
   14000147e:	mov    rbx,QWORD PTR [rax+0x10]
   140001482:	mov    rcx,rbx
   140001485:	call   QWORD PTR [rip+0x5e5d]        # 0x1400072e8
   14000148b:	mov    rcx,rsi
   14000148e:	call   rbx
   140001490:	mov    ebp,eax
   140001492:	test   eax,eax
   140001494:	jns    0x14000149f
   140001496:	mov    ecx,eax
   140001498:	call   0x140002590
   14000149d:	jmp    0x140001514
   14000149f:	and    DWORD PTR [rsp+0x28],0x0
   1400014a4:	lea    rax,[rip+0xe45]        # 0x1400022f0
   1400014ab:	mov    QWORD PTR [rsp+0x20],rax
   1400014b0:	lea    r8,[rsp+0x20]
   1400014b5:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400014ba:	lea    rcx,[rsp+0x40]
   1400014bf:	mov    rdx,rsi
   1400014c2:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400014c8:	call   0x140001f5c
   1400014cd:	mov    rsi,QWORD PTR [rsi+0x10]
   1400014d1:	mov    rdi,rax
   1400014d4:	mov    rdx,QWORD PTR [rsi]
   1400014d7:	mov    rbx,QWORD PTR [rdx+0xa8]
   1400014de:	mov    rcx,rbx
   1400014e1:	call   QWORD PTR [rip+0x5e01]        # 0x1400072e8
   1400014e7:	mov    rdx,QWORD PTR [rdi]
   1400014ea:	mov    rcx,rsi
   1400014ed:	call   rbx
   1400014ef:	mov    rdi,QWORD PTR [rsp+0x40]
   1400014f4:	test   rdi,rdi
   1400014f7:	je     0x140001514
   1400014f9:	and    QWORD PTR [rsp+0x40],0x0
   1400014ff:	mov    rax,QWORD PTR [rdi]
   140001502:	mov    rbx,QWORD PTR [rax+0x10]
   140001506:	mov    rcx,rbx
   140001509:	call   QWORD PTR [rip+0x5dd9]        # 0x1400072e8
   14000150f:	mov    rcx,rdi
   140001512:	call   rbx
   140001514:	mov    ecx,ebp
   140001516:	call   0x1400024a8
   14000151b:	mov    rbx,QWORD PTR [rsp+0x48]
   140001520:	mov    eax,ebp
   140001522:	mov    rbp,QWORD PTR [rsp+0x50]
   140001527:	mov    rsi,QWORD PTR [rsp+0x58]
   14000152c:	add    rsp,0x30
   140001530:	pop    rdi
   140001531:	ret    
   140001532:	int3   
   140001533:	int3   
   140001534:	int3   
   140001535:	int3   
   140001536:	int3   
   140001537:	int3   
   140001538:	int3   
   140001539:	int3   
   14000153a:	int3   
   14000153b:	int3   
   14000153c:	int3   
   14000153d:	int3   
   14000153e:	int3   
   14000153f:	int3   
   140001540:	mov    QWORD PTR [rsp+0x8],rbx
   140001545:	mov    DWORD PTR [rsp+0x20],r9d
   14000154a:	push   rbp
   14000154b:	push   rsi
   14000154c:	push   rdi
   14000154d:	push   r12
   14000154f:	push   r13
   140001551:	push   r14
   140001553:	push   r15
   140001555:	mov    rbp,rsp
   140001558:	sub    rsp,0x30
   14000155c:	xor    eax,eax
   14000155e:	mov    r15d,r8d
   140001561:	mov    QWORD PTR [rbp-0x10],rax
   140001565:	mov    r13,rdx
   140001568:	mov    QWORD PTR [rbp-0x8],rax
   14000156c:	mov    r12,rcx
   14000156f:	mov    QWORD PTR [rbp+0x48],rax
   140001573:	mov    r14d,eax
   140001576:	mov    ebx,eax
   140001578:	test   rdx,rdx
   14000157b:	jne    0x140001589
   14000157d:	mov    esi,0x80070057
   140001582:	mov    ecx,esi
   140001584:	jmp    0x1400017fe
   140001589:	bt     r8d,0x1c
   14000158e:	jae    0x1400015d7
   140001590:	mov    rax,QWORD PTR [rcx]
   140001593:	mov    rdi,QWORD PTR [rax+0x18]
   140001597:	mov    rcx,rdi
   14000159a:	call   QWORD PTR [rip+0x5d48]        # 0x1400072e8
   1400015a0:	mov    edx,0x6a
   1400015a5:	lea    r9,[rbp+0x48]
   1400015a9:	mov    rcx,r12
   1400015ac:	lea    r8d,[rdx-0x3b]
   1400015b0:	call   rdi
   1400015b2:	mov    esi,eax
   1400015b4:	test   eax,eax
   1400015b6:	js     0x1400017fc
   1400015bc:	lea    rdx,[rbp+0x48]
   1400015c0:	lea    rcx,[rbp-0x10]
   1400015c4:	call   0x140001c4c
   1400015c9:	mov    esi,eax
   1400015cb:	test   eax,eax
   1400015cd:	js     0x1400017fc
   1400015d3:	mov    r14d,DWORD PTR [rbp-0xc]
   1400015d7:	bt     r15d,0x10
   1400015dc:	jae    0x140001626
   1400015de:	mov    rax,QWORD PTR [r12]
   1400015e2:	mov    rdi,QWORD PTR [rax+0x18]
   1400015e6:	mov    rcx,rdi
   1400015e9:	call   QWORD PTR [rip+0x5cf9]        # 0x1400072e8
   1400015ef:	mov    edx,0x67
   1400015f4:	lea    r9,[rbp+0x48]
   1400015f8:	mov    rcx,r12
   1400015fb:	lea    r8d,[rdx-0x41]
   1400015ff:	call   rdi
   140001601:	mov    esi,eax
   140001603:	test   eax,eax
   140001605:	js     0x1400017fc
   14000160b:	lea    rdx,[rbp+0x48]
   14000160f:	lea    rcx,[rbp-0x10]
   140001613:	call   0x140001c4c
   140001618:	mov    esi,eax
   14000161a:	test   eax,eax
   14000161c:	js     0x1400017fc
   140001622:	mov    r14d,DWORD PTR [rbp-0xc]
   140001626:	bt     r15d,0x14
   14000162b:	jae    0x140001675
   14000162d:	mov    rax,QWORD PTR [r12]
   140001631:	mov    rdi,QWORD PTR [rax+0x18]
   140001635:	mov    rcx,rdi
   140001638:	call   QWORD PTR [rip+0x5caa]        # 0x1400072e8
   14000163e:	mov    edx,0x6b
   140001643:	lea    r9,[rbp+0x48]
   140001647:	mov    rcx,r12
   14000164a:	lea    r8d,[rdx-0x2c]
   14000164e:	call   rdi
   140001650:	mov    esi,eax
   140001652:	test   eax,eax
   140001654:	js     0x1400017fc
   14000165a:	lea    rdx,[rbp+0x48]
   14000165e:	lea    rcx,[rbp-0x10]
   140001662:	call   0x140001c4c
   140001667:	mov    esi,eax
   140001669:	test   eax,eax
   14000166b:	js     0x1400017fc
   140001671:	mov    r14d,DWORD PTR [rbp-0xc]
   140001675:	bt     r15d,0x8
   14000167a:	jae    0x1400016c4
   14000167c:	mov    rax,QWORD PTR [r12]
   140001680:	mov    rdi,QWORD PTR [rax+0x18]
   140001684:	mov    rcx,rdi
   140001687:	call   QWORD PTR [rip+0x5c5b]        # 0x1400072e8
   14000168d:	mov    edx,0x65
   140001692:	lea    r9,[rbp+0x48]
   140001696:	mov    rcx,r12
   140001699:	lea    r8d,[rdx-0x61]
   14000169d:	call   rdi
   14000169f:	mov    esi,eax
   1400016a1:	test   eax,eax
   1400016a3:	js     0x1400017fc
   1400016a9:	lea    rdx,[rbp+0x48]
   1400016ad:	lea    rcx,[rbp-0x10]
   1400016b1:	call   0x140001c4c
   1400016b6:	mov    esi,eax
   1400016b8:	test   eax,eax
   1400016ba:	js     0x1400017fc
   1400016c0:	mov    r14d,DWORD PTR [rbp-0xc]
   1400016c4:	bt     r15d,0xc
   1400016c9:	jae    0x140001713
   1400016cb:	mov    rax,QWORD PTR [r12]
   1400016cf:	mov    rdi,QWORD PTR [rax+0x18]
   1400016d3:	mov    rcx,rdi
   1400016d6:	call   QWORD PTR [rip+0x5c0c]        # 0x1400072e8
   1400016dc:	mov    edx,0x66
   1400016e1:	lea    r9,[rbp+0x48]
   1400016e5:	mov    rcx,r12
   1400016e8:	lea    r8d,[rdx-0x65]
   1400016ec:	call   rdi
   1400016ee:	mov    esi,eax
   1400016f0:	test   eax,eax
   1400016f2:	js     0x1400017fc
   1400016f8:	lea    rdx,[rbp+0x48]
   1400016fc:	lea    rcx,[rbp-0x10]
   140001700:	call   0x140001c4c
   140001705:	mov    esi,eax
   140001707:	test   eax,eax
   140001709:	js     0x1400017fc
   14000170f:	mov    r14d,DWORD PTR [rbp-0xc]
   140001713:	movsxd rcx,r14d
   140001716:	mov    eax,0x8
   14000171b:	mul    rcx
   14000171e:	mov    rbx,rax
   140001721:	mov    rax,0xffffffffffffffff
   140001728:	cmovo  rbx,rax
   14000172c:	call   QWORD PTR [rip+0x5a26]        # 0x140007158
   140001732:	mov    r8,rbx
   140001735:	xor    edx,edx
   140001737:	mov    rcx,rax
   14000173a:	call   QWORD PTR [rip+0x5a30]        # 0x140007170
   140001740:	mov    rbx,rax
   140001743:	test   rax,rax
   140001746:	jne    0x140001752
   140001748:	mov    esi,0x8007000e
   14000174d:	jmp    0x140001582
   140001752:	test   r14d,r14d
   140001755:	jle    0x140001772
   140001757:	xor    edx,edx
   140001759:	mov    r8d,r14d
   14000175c:	mov    rax,QWORD PTR [rbp-0x8]
   140001760:	mov    rcx,QWORD PTR [rdx+rax*1]
   140001764:	mov    QWORD PTR [rdx+rbx*1],rcx
   140001768:	lea    rdx,[rdx+0x8]
   14000176c:	sub    r8,0x1
   140001770:	jne    0x14000175c
   140001772:	mov    rax,QWORD PTR [r13+0x0]
   140001776:	mov    rdi,QWORD PTR [rax+0x40]
   14000177a:	mov    rcx,rdi
   14000177d:	call   QWORD PTR [rip+0x5b65]        # 0x1400072e8
   140001783:	mov    r8,rbx
   140001786:	mov    edx,r14d
   140001789:	mov    rcx,r13
   14000178c:	call   rdi
   14000178e:	mov    esi,eax
   140001790:	test   eax,eax
   140001792:	js     0x1400017fc
   140001794:	mov    rax,QWORD PTR [r13+0x0]
   140001798:	mov    rdi,QWORD PTR [rax+0x58]
   14000179c:	mov    rcx,rdi
   14000179f:	call   QWORD PTR [rip+0x5b43]        # 0x1400072e8
   1400017a5:	xor    edx,edx
   1400017a7:	mov    rcx,r13
   1400017aa:	call   rdi
   1400017ac:	mov    esi,eax
   1400017ae:	test   eax,eax
   1400017b0:	js     0x1400017fc
   1400017b2:	mov    rax,QWORD PTR [r13+0x0]
   1400017b6:	mov    rdi,QWORD PTR [rax+0x68]
   1400017ba:	mov    rcx,rdi
   1400017bd:	call   QWORD PTR [rip+0x5b25]        # 0x1400072e8
   1400017c3:	xor    edx,edx
   1400017c5:	mov    rcx,r13
   1400017c8:	call   rdi
   1400017ca:	mov    esi,eax
   1400017cc:	test   eax,eax
   1400017ce:	js     0x1400017fc
   1400017d0:	cmp    DWORD PTR [rbp+0x58],0x0
   1400017d4:	je     0x1400017d9
   1400017d6:	dec    r14d
   1400017d9:	mov    rsi,QWORD PTR [r12+0x10]
   1400017de:	mov    rax,QWORD PTR [rsi]
   1400017e1:	mov    rdi,QWORD PTR [rax+0x78]
   1400017e5:	mov    rcx,rdi
   1400017e8:	call   QWORD PTR [rip+0x5afa]        # 0x1400072e8
   1400017ee:	mov    edx,r14d
   1400017f1:	mov    rcx,rsi
   1400017f4:	call   rdi
   1400017f6:	mov    esi,eax
   1400017f8:	test   eax,eax
   1400017fa:	jns    0x140001803
   1400017fc:	mov    ecx,eax
   1400017fe:	call   0x140002590
   140001803:	mov    ecx,esi
   140001805:	call   0x1400024a8
   14000180a:	test   rbx,rbx
   14000180d:	je     0x140001823
   14000180f:	call   QWORD PTR [rip+0x5943]        # 0x140007158
   140001815:	mov    r8,rbx
   140001818:	xor    edx,edx
   14000181a:	mov    rcx,rax
   14000181d:	call   QWORD PTR [rip+0x5945]        # 0x140007168
   140001823:	mov    rbx,QWORD PTR [rbp+0x48]
   140001827:	test   rbx,rbx
   14000182a:	je     0x140001846
   14000182c:	mov    rax,QWORD PTR [rbx]
   14000182f:	mov    rdi,QWORD PTR [rax+0x10]
   140001833:	mov    rcx,rdi
   140001836:	call   QWORD PTR [rip+0x5aac]        # 0x1400072e8
   14000183c:	mov    rcx,rbx
   14000183f:	call   rdi
   140001841:	and    QWORD PTR [rbp+0x48],0x0
   140001846:	xor    edx,edx
   140001848:	lea    rcx,[rbp-0x10]
   14000184c:	call   0x140001df8
   140001851:	mov    rbx,QWORD PTR [rbp-0x8]
   140001855:	test   rbx,rbx
   140001858:	je     0x14000186e
   14000185a:	call   QWORD PTR [rip+0x58f8]        # 0x140007158
   140001860:	mov    r8,rbx
   140001863:	xor    edx,edx
   140001865:	mov    rcx,rax
   140001868:	call   QWORD PTR [rip+0x58fa]        # 0x140007168
   14000186e:	mov    eax,esi
   140001870:	mov    rbx,QWORD PTR [rsp+0x70]
   140001875:	add    rsp,0x30
   140001879:	pop    r15
   14000187b:	pop    r14
   14000187d:	pop    r13
   14000187f:	pop    r12
   140001881:	pop    rdi
   140001882:	pop    rsi
   140001883:	pop    rbp
   140001884:	ret    
   140001885:	int3   
   140001886:	int3   
   140001887:	int3   
   140001888:	int3   
   140001889:	int3   
   14000188a:	int3   
   14000188b:	int3   
   14000188c:	int3   
   14000188d:	int3   
   14000188e:	int3   
   14000188f:	int3   
   140001890:	mov    DWORD PTR [rsp+0x18],r8d
   140001895:	mov    DWORD PTR [rsp+0x10],edx
   140001899:	push   rbx
   14000189a:	push   rsi
   14000189b:	push   rdi
   14000189c:	push   r14
   14000189e:	push   r15
   1400018a0:	sub    rsp,0x40
   1400018a4:	xor    esi,esi
   1400018a6:	mov    r14,r9
   1400018a9:	test   r9,r9
   1400018ac:	jne    0x1400018bf
   1400018ae:	mov    ecx,0x80070057
   1400018b3:	mov    esi,ecx
   1400018b5:	call   0x140002590
   1400018ba:	jmp    0x140001944
   1400018bf:	lea    rax,[rip+0x22a]        # 0x140001af0
   1400018c6:	mov    QWORD PTR [rsp+0x30],rcx
   1400018cb:	mov    QWORD PTR [rsp+0x38],rax
   1400018d0:	lea    rdx,[rcx+0x38]
   1400018d4:	lea    rax,[rsp+0x80]
   1400018dc:	mov    QWORD PTR [rsp+0x28],rax
   1400018e1:	lea    r9,[rsp+0x30]
   1400018e6:	lea    rax,[rsp+0x78]
   1400018eb:	lea    r8,[rsp+0x38]
   1400018f0:	mov    QWORD PTR [rsp+0x20],rax
   1400018f5:	lea    rcx,[rsp+0x88]
   1400018fd:	call   0x140002014
   140001902:	mov    rbx,QWORD PTR [rax]
   140001905:	mov    QWORD PTR [rax],rsi
   140001908:	mov    r15,QWORD PTR [rsp+0x88]
   140001910:	test   r15,r15
   140001913:	je     0x140001932
   140001915:	mov    QWORD PTR [rsp+0x88],rsi
   14000191d:	mov    rax,QWORD PTR [r15]
   140001920:	mov    rdi,QWORD PTR [rax+0x10]
   140001924:	mov    rcx,rdi
   140001927:	call   QWORD PTR [rip+0x59bb]        # 0x1400072e8
   14000192d:	mov    rcx,r15
   140001930:	call   rdi
   140001932:	test   rbx,rbx
   140001935:	jne    0x140001941
   140001937:	mov    ecx,0x8007000e
   14000193c:	jmp    0x1400018b3
   140001941:	mov    QWORD PTR [r14],rbx
   140001944:	mov    ecx,esi
   140001946:	call   0x1400024a8
   14000194b:	mov    eax,esi
   14000194d:	add    rsp,0x40
   140001951:	pop    r15
   140001953:	pop    r14
   140001955:	pop    rdi
   140001956:	pop    rsi
   140001957:	pop    rbx
   140001958:	ret    
   140001959:	int3   
   14000195a:	int3   
   14000195b:	int3   
   14000195c:	int3   
   14000195d:	int3   
   14000195e:	int3   
   14000195f:	int3   
   140001960:	mov    QWORD PTR [rsp+0x10],rbx
   140001965:	mov    QWORD PTR [rsp+0x18],rbp
   14000196a:	push   rsi
   14000196b:	push   rdi
   14000196c:	push   r14
   14000196e:	sub    rsp,0x30
   140001972:	mov    rbx,QWORD PTR [rcx+0x10]
   140001976:	xor    esi,esi
   140001978:	mov    rbp,rcx
   14000197b:	test   rbx,rbx
   14000197e:	je     0x140001a56
   140001984:	mov    rax,QWORD PTR [rbx]
   140001987:	mov    rdi,QWORD PTR [rax+0x8]
   14000198b:	mov    rcx,rdi
   14000198e:	call   QWORD PTR [rip+0x5954]        # 0x1400072e8
   140001994:	mov    rcx,rbx
   140001997:	call   rdi
   140001999:	and    DWORD PTR [rsp+0x28],esi
   14000199d:	lea    rax,[rip+0x94c]        # 0x1400022f0
   1400019a4:	mov    QWORD PTR [rsp+0x20],rax
   1400019a9:	lea    r8,[rsp+0x20]
   1400019ae:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400019b3:	lea    rcx,[rsp+0x50]
   1400019b8:	mov    rdx,rbp
   1400019bb:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400019c1:	call   0x140001f5c
   1400019c6:	mov    rdi,QWORD PTR [rax]
   1400019c9:	mov    rax,QWORD PTR [rbx]
   1400019cc:	mov    rsi,QWORD PTR [rax+0x140]
   1400019d3:	mov    rcx,rsi
   1400019d6:	call   QWORD PTR [rip+0x590c]        # 0x1400072e8
   1400019dc:	mov    rdx,rdi
   1400019df:	mov    rcx,rbx
   1400019e2:	call   rsi
   1400019e4:	mov    r14,QWORD PTR [rsp+0x50]
   1400019e9:	mov    esi,eax
   1400019eb:	test   r14,r14
   1400019ee:	je     0x140001a0b
   1400019f0:	and    QWORD PTR [rsp+0x50],0x0
   1400019f6:	mov    rdx,QWORD PTR [r14]
   1400019f9:	mov    rdi,QWORD PTR [rdx+0x10]
   1400019fd:	mov    rcx,rdi
   140001a00:	call   QWORD PTR [rip+0x58e2]        # 0x1400072e8
   140001a06:	mov    rcx,r14
   140001a09:	call   rdi
   140001a0b:	test   esi,esi
   140001a0d:	jns    0x140001a1f
   140001a0f:	mov    ecx,esi
   140001a11:	call   0x140002590
   140001a16:	mov    rcx,QWORD PTR [rbx]
   140001a19:	mov    rdi,QWORD PTR [rcx+0x10]
   140001a1d:	jmp    0x140001a48
   140001a1f:	mov    rax,QWORD PTR [rbx]
   140001a22:	mov    rdi,QWORD PTR [rax+0x128]
   140001a29:	mov    rcx,rdi
   140001a2c:	call   QWORD PTR [rip+0x58b6]        # 0x1400072e8
   140001a32:	mov    rcx,rbx
   140001a35:	call   rdi
   140001a37:	mov    esi,eax
   140001a39:	test   eax,eax
   140001a3b:	jns    0x140001a41
   140001a3d:	mov    ecx,eax
   140001a3f:	jmp    0x140001a11
   140001a41:	mov    rax,QWORD PTR [rbx]
   140001a44:	mov    rdi,QWORD PTR [rax+0x10]
   140001a48:	mov    rcx,rdi
   140001a4b:	call   QWORD PTR [rip+0x5897]        # 0x1400072e8
   140001a51:	mov    rcx,rbx
   140001a54:	call   rdi
   140001a56:	mov    ecx,esi
   140001a58:	call   0x1400024a8
   140001a5d:	mov    rbx,QWORD PTR [rsp+0x58]
   140001a62:	mov    eax,esi
   140001a64:	mov    rbp,QWORD PTR [rsp+0x60]
   140001a69:	add    rsp,0x30
   140001a6d:	pop    r14
   140001a6f:	pop    rdi
   140001a70:	pop    rsi
   140001a71:	ret    
   140001a72:	int3   
   140001a73:	int3   
   140001a74:	int3   
   140001a75:	int3   
   140001a76:	int3   
   140001a77:	int3   
   140001a78:	int3   
   140001a79:	int3   
   140001a7a:	int3   
   140001a7b:	int3   
   140001a7c:	int3   
   140001a7d:	int3   
   140001a7e:	int3   
   140001a7f:	int3   
   140001a80:	mov    QWORD PTR [rsp+0x8],rbx
   140001a85:	push   rdi
   140001a86:	sub    rsp,0x20
   140001a8a:	mov    rcx,QWORD PTR [rip+0x7bdf]        # 0x140009670
   140001a91:	xor    ebx,ebx
   140001a93:	mov    rdi,rdx
   140001a96:	test   rcx,rcx
   140001a99:	je     0x140001aa8
   140001a9b:	call   QWORD PTR [rip+0x5677]        # 0x140007118
   140001aa1:	mov    QWORD PTR [rip+0x7bc8],rbx        # 0x140009670
   140001aa8:	xor    ecx,ecx
   140001aaa:	call   0x1400024a8
   140001aaf:	test   rdi,rdi
   140001ab2:	jne    0x140001ac2
   140001ab4:	mov    ecx,0x80070057
   140001ab9:	mov    ebx,ecx
   140001abb:	call   0x140002590
   140001ac0:	jmp    0x140001aca
   140001ac2:	xor    ecx,ecx
   140001ac4:	call   QWORD PTR [rip+0x56de]        # 0x1400071a8
   140001aca:	mov    ecx,ebx
   140001acc:	call   0x1400024a8
   140001ad1:	mov    eax,ebx
   140001ad3:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ad8:	add    rsp,0x20
   140001adc:	pop    rdi
   140001add:	ret    
   140001ade:	int3   
   140001adf:	int3   
   140001ae0:	int3   
   140001ae1:	int3   
   140001ae2:	int3   
   140001ae3:	int3   
   140001ae4:	int3   
   140001ae5:	int3   
   140001ae6:	int3   
   140001ae7:	int3   
   140001ae8:	int3   
   140001ae9:	int3   
   140001aea:	int3   
   140001aeb:	int3   
   140001aec:	int3   
   140001aed:	int3   
   140001aee:	int3   
   140001aef:	int3   
   140001af0:	mov    QWORD PTR [rsp+0x8],rbx
   140001af5:	mov    QWORD PTR [rsp+0x20],rsi
   140001afa:	push   rdi
   140001afb:	sub    rsp,0x70
   140001aff:	mov    rax,QWORD PTR [rip+0x7502]        # 0x140009008
   140001b06:	xor    rax,rsp
   140001b09:	mov    QWORD PTR [rsp+0x68],rax
   140001b0e:	mov    rsi,r8
   140001b11:	mov    rdi,rdx
   140001b14:	test   rcx,rcx
   140001b17:	je     0x140001b23
   140001b19:	test   rdx,rdx
   140001b1c:	je     0x140001b23
   140001b1e:	test   r8,r8
   140001b21:	jne    0x140001b2c
   140001b23:	mov    ecx,0x80070057
   140001b28:	mov    ebx,ecx
   140001b2a:	jmp    0x140001b9a
   140001b2c:	mov    rax,QWORD PTR [rdx]
   140001b2f:	mov    rbx,QWORD PTR [rax+0x20]
   140001b33:	mov    rcx,rbx
   140001b36:	call   QWORD PTR [rip+0x57ac]        # 0x1400072e8
   140001b3c:	lea    rdx,[rsp+0x30]
   140001b41:	mov    rcx,rdi
   140001b44:	call   rbx
   140001b46:	mov    ebx,eax
   140001b48:	test   eax,eax
   140001b4a:	js     0x140001b98
   140001b4c:	mov    edi,DWORD PTR [rsp+0x30]
   140001b50:	cmp    edi,0x65
   140001b53:	jb     0x140001ba5
   140001b55:	cmp    edi,0x66
   140001b58:	jbe    0x140001b7d
   140001b5a:	lea    eax,[rdi-0x67]
   140001b5d:	test   eax,0xfffffffb
   140001b62:	jne    0x140001ba5
   140001b64:	mov    rax,QWORD PTR [rsi]
   140001b67:	mov    rbx,QWORD PTR [rax+0x40]
   140001b6b:	mov    rcx,rbx
   140001b6e:	call   QWORD PTR [rip+0x5774]        # 0x1400072e8
   140001b74:	mov    edx,edi
   140001b76:	mov    rcx,rsi
   140001b79:	call   rbx
   140001b7b:	jmp    0x140001b92
   140001b7d:	mov    rax,QWORD PTR [rsi]
   140001b80:	mov    rbx,QWORD PTR [rax+0x28]
   140001b84:	mov    rcx,rbx
   140001b87:	call   QWORD PTR [rip+0x575b]        # 0x1400072e8
   140001b8d:	mov    rcx,rsi
   140001b90:	call   rbx
   140001b92:	mov    ebx,eax
   140001b94:	test   eax,eax
   140001b96:	jns    0x140001ba1
   140001b98:	mov    ecx,eax
   140001b9a:	call   0x140002590
   140001b9f:	jmp    0x140001c1e
   140001ba1:	mov    edi,DWORD PTR [rsp+0x30]
   140001ba5:	cmp    DWORD PTR [rip+0x7474],0x5        # 0x140009020
   140001bac:	jbe    0x140001c1e
   140001bae:	movabs rdx,0x400000000000
   140001bb8:	test   QWORD PTR [rip+0x7471],rdx        # 0x140009030
   140001bbf:	je     0x140001c1e
   140001bc1:	mov    rax,QWORD PTR [rip+0x7470]        # 0x140009038
   140001bc8:	and    rax,rdx
   140001bcb:	cmp    rax,QWORD PTR [rip+0x7466]        # 0x140009038
   140001bd2:	jne    0x140001c1e
   140001bd4:	and    DWORD PTR [rsp+0x64],0x0
   140001bd9:	lea    rax,[rsp+0x34]
   140001bde:	mov    QWORD PTR [rsp+0x58],rax
   140001be3:	mov    DWORD PTR [rsp+0x34],edi
   140001be7:	mov    DWORD PTR [rsp+0x60],0x4
   140001bef:	lea    rax,[rsp+0x38]
   140001bf4:	xor    r9d,r9d
   140001bf7:	mov    QWORD PTR [rsp+0x28],rax
   140001bfc:	lea    r8,[rip+0x7aed]        # 0x1400096f0
   140001c03:	lea    rdx,[rip+0x5f57]        # 0x140007b61
   140001c0a:	mov    DWORD PTR [rsp+0x20],0x3
   140001c12:	lea    rcx,[rip+0x7407]        # 0x140009020
   140001c19:	call   0x140001008
   140001c1e:	mov    ecx,ebx
   140001c20:	call   0x1400024a8
   140001c25:	mov    eax,ebx
   140001c27:	mov    rcx,QWORD PTR [rsp+0x68]
   140001c2c:	xor    rcx,rsp
   140001c2f:	call   0x140004ed0
   140001c34:	lea    r11,[rsp+0x70]
   140001c39:	mov    rbx,QWORD PTR [r11+0x10]
   140001c3d:	mov    rsi,QWORD PTR [r11+0x28]
   140001c41:	mov    rsp,r11
   140001c44:	pop    rdi
   140001c45:	ret    
   140001c46:	int3   
   140001c47:	int3   
   140001c48:	int3   
   140001c49:	int3   
   140001c4a:	int3   
   140001c4b:	int3   
   140001c4c:	mov    QWORD PTR [rsp+0x10],rbx
   140001c51:	mov    QWORD PTR [rsp+0x18],rbp
   140001c56:	mov    QWORD PTR [rsp+0x20],rsi
   140001c5b:	push   rdi
   140001c5c:	push   r14
   140001c5e:	push   r15
   140001c60:	sub    rsp,0x20
   140001c64:	movsxd rbp,DWORD PTR [rcx+0x4]
   140001c68:	mov    r15,rdx
   140001c6b:	mov    r14,rcx
   140001c6e:	test   ebp,ebp
   140001c70:	jns    0x140001c79
   140001c72:	mov    ebx,0x8000ffff
   140001c77:	jmp    0x140001cc1
   140001c79:	lea    esi,[rbp+0x1]
   140001c7c:	mov    edi,0x80070216
   140001c81:	cmp    esi,ebp
   140001c83:	jb     0x140001c89
   140001c85:	xor    ebx,ebx
   140001c87:	jmp    0x140001c96
   140001c89:	mov    ecx,edi
   140001c8b:	mov    ebx,edi
   140001c8d:	call   0x140002590
   140001c92:	mov    esi,DWORD PTR [rsp+0x40]
   140001c96:	mov    ecx,ebx
   140001c98:	call   0x1400024a8
   140001c9d:	test   ebx,ebx
   140001c9f:	jns    0x140001ca5
   140001ca1:	mov    ecx,ebx
   140001ca3:	jmp    0x140001cad
   140001ca5:	test   esi,esi
   140001ca7:	jns    0x140001cb6
   140001ca9:	mov    ebx,edi
   140001cab:	mov    ecx,edi
   140001cad:	call   0x140002590
   140001cb2:	mov    esi,DWORD PTR [rsp+0x40]
   140001cb6:	mov    ecx,ebx
   140001cb8:	call   0x1400024a8
   140001cbd:	test   ebx,ebx
   140001cbf:	jns    0x140001cc8
   140001cc1:	mov    ecx,ebx
   140001cc3:	jmp    0x140001d4b
   140001cc8:	mov    ebx,DWORD PTR [r14]
   140001ccb:	test   ebx,ebx
   140001ccd:	jns    0x140001cda
   140001ccf:	mov    ebx,0x8000ffff
   140001cd4:	mov    edi,ebx
   140001cd6:	mov    ecx,ebx
   140001cd8:	jmp    0x140001d37
   140001cda:	cmp    esi,ebx
   140001cdc:	jg     0x140001ce2
   140001cde:	xor    edi,edi
   140001ce0:	jmp    0x140001d3c
   140001ce2:	mov    DWORD PTR [rsp+0x40],ebx
   140001ce6:	jmp    0x140001d21
   140001ce8:	test   ebx,ebx
   140001cea:	jne    0x140001cf9
   140001cec:	mov    ebx,0x20
   140001cf1:	xor    edi,edi
   140001cf3:	mov    DWORD PTR [rsp+0x40],ebx
   140001cf7:	jmp    0x140001d16
   140001cf9:	lea    r8,[rsp+0x40]
   140001cfe:	mov    ecx,ebx
   140001d00:	call   0x1400023ac
   140001d05:	mov    edi,eax
   140001d07:	test   eax,eax
   140001d09:	jns    0x140001d12
   140001d0b:	mov    ecx,eax
   140001d0d:	call   0x140002590
   140001d12:	mov    ebx,DWORD PTR [rsp+0x40]
   140001d16:	mov    ecx,edi
   140001d18:	call   0x1400024a8
   140001d1d:	test   edi,edi
   140001d1f:	js     0x140001d52
   140001d21:	cmp    ebx,esi
   140001d23:	jl     0x140001ce8
   140001d25:	mov    edx,ebx
   140001d27:	mov    rcx,r14
   140001d2a:	call   0x140001df8
   140001d2f:	mov    edi,eax
   140001d31:	test   eax,eax
   140001d33:	jns    0x140001d3c
   140001d35:	mov    ecx,eax
   140001d37:	call   0x140002590
   140001d3c:	mov    ecx,edi
   140001d3e:	call   0x1400024a8
   140001d43:	mov    ebx,edi
   140001d45:	test   edi,edi
   140001d47:	jns    0x140001d56
   140001d49:	mov    ecx,edi
   140001d4b:	call   0x140002590
   140001d50:	jmp    0x140001dce
   140001d52:	mov    ecx,edi
   140001d54:	jmp    0x140001d37
   140001d56:	mov    r8d,DWORD PTR [r14+0x4]
   140001d5a:	cmp    ebp,r8d
   140001d5d:	jge    0x140001d7f
   140001d5f:	mov    rdx,QWORD PTR [r14+0x8]
   140001d63:	sub    r8d,ebp
   140001d66:	movsxd r8,r8d
   140001d69:	shl    r8,0x3
   140001d6d:	lea    rcx,[rdx+rbp*8]
   140001d71:	add    rcx,0x8
   140001d75:	lea    rdx,[rdx+rbp*8]
   140001d79:	call   QWORD PTR [rip+0x54f9]        # 0x140007278
   140001d7f:	mov    rax,QWORD PTR [r14+0x8]
   140001d83:	mov    rdi,rbp
   140001d86:	lea    rcx,[rax+rbp*8]
   140001d8a:	xor    eax,eax
   140001d8c:	mov    QWORD PTR [rcx],rax
   140001d8f:	test   rcx,rcx
   140001d92:	je     0x140001d97
   140001d94:	and    QWORD PTR [rcx],rax
   140001d97:	mov    rsi,QWORD PTR [r14+0x8]
   140001d9b:	mov    rbp,QWORD PTR [r15]
   140001d9e:	and    QWORD PTR [r15],rax
   140001da1:	mov    r15,QWORD PTR [rsi+rdi*8]
   140001da5:	test   r15,r15
   140001da8:	je     0x140001dc4
   140001daa:	mov    rax,QWORD PTR [r15]
   140001dad:	mov    rbx,QWORD PTR [rax+0x10]
   140001db1:	mov    rcx,rbx
   140001db4:	call   QWORD PTR [rip+0x552e]        # 0x1400072e8
   140001dba:	mov    rcx,r15
   140001dbd:	call   rbx
   140001dbf:	and    QWORD PTR [rsi+rdi*8],0x0
   140001dc4:	mov    QWORD PTR [rsi+rdi*8],rbp
   140001dc8:	inc    DWORD PTR [r14+0x4]
   140001dcc:	xor    ebx,ebx
   140001dce:	mov    ecx,ebx
   140001dd0:	call   0x1400024a8
   140001dd5:	mov    rbp,QWORD PTR [rsp+0x50]
   140001dda:	mov    eax,ebx
   140001ddc:	mov    rbx,QWORD PTR [rsp+0x48]
   140001de1:	mov    rsi,QWORD PTR [rsp+0x58]
   140001de6:	add    rsp,0x20
   140001dea:	pop    r15
   140001dec:	pop    r14
   140001dee:	pop    rdi
   140001def:	ret    
   140001df0:	int3   
   140001df1:	int3   
   140001df2:	int3   
   140001df3:	int3   
   140001df4:	int3   
   140001df5:	int3   
   140001df6:	int3   
   140001df7:	int3   
   140001df8:	mov    QWORD PTR [rsp+0x10],rbx
   140001dfd:	mov    QWORD PTR [rsp+0x18],rbp
   140001e02:	mov    QWORD PTR [rsp+0x20],rsi
   140001e07:	push   rdi
   140001e08:	push   r12
   140001e0a:	push   r13
   140001e0c:	push   r14
   140001e0e:	push   r15
   140001e10:	sub    rsp,0x20
   140001e14:	movsxd rbp,edx
   140001e17:	xor    ebx,ebx
   140001e19:	mov    rsi,rcx
   140001e1c:	cmp    DWORD PTR [rcx],ebp
   140001e1e:	je     0x140001f26
   140001e24:	mov    r14d,DWORD PTR [rcx+0x4]
   140001e28:	cmp    ebp,r14d
   140001e2b:	cmovl  r14d,ebp
   140001e2f:	test   edx,edx
   140001e31:	jle    0x140001ea9
   140001e33:	mov    rcx,rbp
   140001e36:	mov    rdi,rcx
   140001e39:	shl    rdi,0x3
   140001e3d:	mov    rax,rdi
   140001e40:	shr    rax,0x3
   140001e44:	cmp    rax,rcx
   140001e47:	je     0x140001e5a
   140001e49:	mov    ebx,0x80070216
   140001e4e:	mov    ecx,ebx
   140001e50:	call   0x140002590
   140001e55:	mov    rdi,QWORD PTR [rsp+0x50]
   140001e5a:	mov    ecx,ebx
   140001e5c:	call   0x1400024a8
   140001e61:	test   ebx,ebx
   140001e63:	jns    0x140001e71
   140001e65:	mov    ecx,ebx
   140001e67:	call   0x140002590
   140001e6c:	jmp    0x140001f26
   140001e71:	call   QWORD PTR [rip+0x52e1]        # 0x140007158
   140001e77:	mov    r8,rdi
   140001e7a:	xor    edx,edx
   140001e7c:	mov    rcx,rax
   140001e7f:	call   QWORD PTR [rip+0x52eb]        # 0x140007170
   140001e85:	mov    rbx,rax
   140001e88:	test   rax,rax
   140001e8b:	je     0x140001f4c
   140001e91:	test   r14d,r14d
   140001e94:	je     0x140001ea9
   140001e96:	mov    rdx,QWORD PTR [rsi+0x8]
   140001e9a:	mov    rcx,rax
   140001e9d:	movsxd r8,r14d
   140001ea0:	shl    r8,0x3
   140001ea4:	call   0x140005586
   140001ea9:	cmp    ebp,DWORD PTR [rsi+0x4]
   140001eac:	jge    0x140001ef8
   140001eae:	mov    r12,rbp
   140001eb1:	mov    r15d,ebp
   140001eb4:	shl    r12,0x3
   140001eb8:	mov    r13,QWORD PTR [rsi+0x8]
   140001ebc:	add    r13,r12
   140001ebf:	je     0x140001eeb
   140001ec1:	mov    rax,QWORD PTR [r13+0x0]
   140001ec5:	mov    QWORD PTR [rsp+0x50],rax
   140001eca:	test   rax,rax
   140001ecd:	je     0x140001eeb
   140001ecf:	mov    rax,QWORD PTR [rax]
   140001ed2:	mov    rdi,QWORD PTR [rax+0x10]
   140001ed6:	mov    rcx,rdi
   140001ed9:	call   QWORD PTR [rip+0x5409]        # 0x1400072e8
   140001edf:	mov    rcx,QWORD PTR [rsp+0x50]
   140001ee4:	call   rdi
   140001ee6:	and    QWORD PTR [r13+0x0],0x0
   140001eeb:	inc    r15d
   140001eee:	add    r12,0x8
   140001ef2:	cmp    r15d,DWORD PTR [rsi+0x4]
   140001ef6:	jl     0x140001eb8
   140001ef8:	mov    rdi,QWORD PTR [rsi+0x8]
   140001efc:	test   rdi,rdi
   140001eff:	je     0x140001f1a
   140001f01:	call   QWORD PTR [rip+0x5251]        # 0x140007158
   140001f07:	mov    r8,rdi
   140001f0a:	xor    edx,edx
   140001f0c:	mov    rcx,rax
   140001f0f:	call   QWORD PTR [rip+0x5253]        # 0x140007168
   140001f15:	and    QWORD PTR [rsi+0x8],0x0
   140001f1a:	mov    QWORD PTR [rsi+0x8],rbx
   140001f1e:	xor    ebx,ebx
   140001f20:	mov    DWORD PTR [rsi+0x4],r14d
   140001f24:	mov    DWORD PTR [rsi],ebp
   140001f26:	mov    ecx,ebx
   140001f28:	call   0x1400024a8
   140001f2d:	mov    rbp,QWORD PTR [rsp+0x60]
   140001f32:	mov    eax,ebx
   140001f34:	mov    rbx,QWORD PTR [rsp+0x58]
   140001f39:	mov    rsi,QWORD PTR [rsp+0x68]
   140001f3e:	add    rsp,0x20
   140001f42:	pop    r15
   140001f44:	pop    r14
   140001f46:	pop    r13
   140001f48:	pop    r12
   140001f4a:	pop    rdi
   140001f4b:	ret    
   140001f4c:	mov    ebx,0x8007000e
   140001f51:	jmp    0x140001e65
   140001f56:	int3   
   140001f57:	int3   
   140001f58:	int3   
   140001f59:	int3   
   140001f5a:	int3   
   140001f5b:	int3   
   140001f5c:	mov    rax,rsp
   140001f5f:	mov    QWORD PTR [rax+0x10],rbx
   140001f63:	mov    QWORD PTR [rax+0x18],rbp
   140001f67:	mov    QWORD PTR [rax+0x20],rsi
   140001f6b:	push   rdi
   140001f6c:	push   r14
   140001f6e:	push   r15
   140001f70:	sub    rsp,0x30
   140001f74:	xor    edi,edi
   140001f76:	movaps XMMWORD PTR [rax-0x28],xmm6
   140001f7a:	mov    r15,rdx
   140001f7d:	mov    QWORD PTR [rax+0x8],rdi
   140001f81:	mov    rsi,rcx
   140001f84:	lea    rdx,[rip+0x5555]        # 0x1400074e0
   140001f8b:	mov    rbp,r8
   140001f8e:	lea    ecx,[rdi+0x28]
   140001f91:	call   0x140004fcc
   140001f96:	mov    rbx,rax
   140001f99:	test   rax,rax
   140001f9c:	je     0x140001fea
   140001f9e:	movups xmm6,XMMWORD PTR [rbp+0x0]
   140001fa2:	mov    r14,QWORD PTR [rip+0x769f]        # 0x140009648
   140001fa9:	mov    DWORD PTR [rax+0xc],0x1
   140001fb0:	lea    rax,[rip+0x5531]        # 0x1400074e8
   140001fb7:	mov    QWORD PTR [rbx],rax
   140001fba:	test   r14,r14
   140001fbd:	je     0x140001fd4
   140001fbf:	mov    rax,QWORD PTR [r14]
   140001fc2:	mov    rdi,QWORD PTR [rax+0x8]
   140001fc6:	mov    rcx,rdi
   140001fc9:	call   QWORD PTR [rip+0x5319]        # 0x1400072e8
   140001fcf:	mov    rcx,r14
   140001fd2:	call   rdi
   140001fd4:	lea    rax,[rip+0x5535]        # 0x140007510
   140001fdb:	mov    QWORD PTR [rbx+0x10],r15
   140001fdf:	mov    QWORD PTR [rbx],rax
   140001fe2:	mov    rdi,rbx
   140001fe5:	movdqu XMMWORD PTR [rbx+0x18],xmm6
   140001fea:	mov    rbx,QWORD PTR [rsp+0x58]
   140001fef:	mov    rax,rsi
   140001ff2:	mov    rbp,QWORD PTR [rsp+0x60]
   140001ff7:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140001ffc:	mov    QWORD PTR [rsi],rdi
   140001fff:	mov    rsi,QWORD PTR [rsp+0x68]
   140002004:	add    rsp,0x30
   140002008:	pop    r15
   14000200a:	pop    r14
   14000200c:	pop    rdi
   14000200d:	ret    
   14000200e:	int3   
   14000200f:	int3   
   140002010:	int3   
   140002011:	int3   
   140002012:	int3   
   140002013:	int3   
   140002014:	mov    QWORD PTR [rsp+0x10],rbx
   140002019:	mov    QWORD PTR [rsp+0x18],rbp
   14000201e:	mov    QWORD PTR [rsp+0x20],rsi
   140002023:	push   rdi
   140002024:	push   r12
   140002026:	push   r13
   140002028:	push   r14
   14000202a:	push   r15
   14000202c:	sub    rsp,0x20
   140002030:	and    QWORD PTR [rcx],0x0
   140002034:	mov    rdi,rdx
   140002037:	mov    rsi,rcx
   14000203a:	lea    rdx,[rip+0x549f]        # 0x1400074e0
   140002041:	mov    ecx,0x30
   140002046:	mov    r12,r9
   140002049:	mov    r13,r8
   14000204c:	call   0x140004fcc
   140002051:	mov    rbx,rax
   140002054:	test   rax,rax
   140002057:	je     0x1400020f0
   14000205d:	mov    rax,QWORD PTR [rsp+0x78]
   140002062:	lea    rcx,[rip+0x54cf]        # 0x140007538
   140002069:	mov    r12,QWORD PTR [r12]
   14000206d:	mov    r13,QWORD PTR [r13+0x0]
   140002071:	mov    r14,QWORD PTR [rip+0x75d0]        # 0x140009648
   140002078:	mov    ebp,DWORD PTR [rax]
   14000207a:	mov    rax,QWORD PTR [rsp+0x70]
   14000207f:	mov    r15d,DWORD PTR [rax]
   140002082:	mov    rax,QWORD PTR [rdi]
   140002085:	mov    QWORD PTR [rsp+0x50],rax
   14000208a:	mov    DWORD PTR [rbx+0xc],0x1
   140002091:	mov    QWORD PTR [rbx],rcx
   140002094:	test   r14,r14
   140002097:	je     0x1400020b3
   140002099:	mov    rax,QWORD PTR [r14]
   14000209c:	mov    rdi,QWORD PTR [rax+0x8]
   1400020a0:	mov    rcx,rdi
   1400020a3:	call   QWORD PTR [rip+0x523f]        # 0x1400072e8
   1400020a9:	mov    rcx,r14
   1400020ac:	call   rdi
   1400020ae:	mov    rax,QWORD PTR [rsp+0x50]
   1400020b3:	lea    rcx,[rip+0x54b6]        # 0x140007570
   1400020ba:	mov    QWORD PTR [rbx+0x10],rax
   1400020be:	mov    QWORD PTR [rbx],rcx
   1400020c1:	mov    QWORD PTR [rbx+0x18],r13
   1400020c5:	mov    QWORD PTR [rbx+0x20],r12
   1400020c9:	mov    DWORD PTR [rbx+0x28],r15d
   1400020cd:	mov    DWORD PTR [rbx+0x2c],ebp
   1400020d0:	mov    r14,QWORD PTR [rsi]
   1400020d3:	test   r14,r14
   1400020d6:	je     0x1400020ed
   1400020d8:	mov    rax,QWORD PTR [r14]
   1400020db:	mov    rdi,QWORD PTR [rax+0x10]
   1400020df:	mov    rcx,rdi
   1400020e2:	call   QWORD PTR [rip+0x5200]        # 0x1400072e8
   1400020e8:	mov    rcx,r14
   1400020eb:	call   rdi
   1400020ed:	mov    QWORD PTR [rsi],rbx
   1400020f0:	mov    rbx,QWORD PTR [rsp+0x58]
   1400020f5:	mov    rax,rsi
   1400020f8:	mov    rsi,QWORD PTR [rsp+0x68]
   1400020fd:	mov    rbp,QWORD PTR [rsp+0x60]
   140002102:	add    rsp,0x20
   140002106:	pop    r15
   140002108:	pop    r14
   14000210a:	pop    r13
   14000210c:	pop    r12
   14000210e:	pop    rdi
   14000210f:	ret    
   140002110:	int3   
   140002111:	int3   
   140002112:	int3   
   140002113:	int3   
   140002114:	int3   
   140002115:	int3   
   140002116:	int3   
   140002117:	int3   
   140002118:	int3   
   140002119:	int3   
   14000211a:	int3   
   14000211b:	int3   
   14000211c:	int3   
   14000211d:	int3   
   14000211e:	int3   
   14000211f:	int3   
   140002120:	mov    QWORD PTR [rsp+0x8],rbx
   140002125:	mov    QWORD PTR [rsp+0x10],rsi
   14000212a:	push   rdi
   14000212b:	sub    rsp,0x20
   14000212f:	movsxd rdi,DWORD PTR [rcx+0x20]
   140002133:	mov    rsi,rdx
   140002136:	mov    rbx,QWORD PTR [rcx+0x18]
   14000213a:	add    rdi,QWORD PTR [rcx+0x10]
   14000213e:	mov    rcx,rbx
   140002141:	call   QWORD PTR [rip+0x51a1]        # 0x1400072e8
   140002147:	mov    rdx,rsi
   14000214a:	mov    rcx,rdi
   14000214d:	mov    rax,rbx
   140002150:	mov    rbx,QWORD PTR [rsp+0x30]
   140002155:	mov    rsi,QWORD PTR [rsp+0x38]
   14000215a:	add    rsp,0x20
   14000215e:	pop    rdi
   14000215f:	rex.W jmp rax
   140002162:	int3   
   140002163:	int3   
   140002164:	int3   
   140002165:	int3   
   140002166:	int3   
   140002167:	int3   
   140002168:	int3   
   140002169:	int3   
   14000216a:	int3   
   14000216b:	int3   
   14000216c:	int3   
   14000216d:	int3   
   14000216e:	int3   
   14000216f:	int3   
   140002170:	rex push rbx
   140002172:	sub    rsp,0x20
   140002176:	mov    DWORD PTR [rcx+0xc],0xc0000001
   14000217d:	mov    rbx,rcx
   140002180:	test   dl,0x1
   140002183:	je     0x140002199
   140002185:	call   QWORD PTR [rip+0x4fcd]        # 0x140007158
   14000218b:	mov    r8,rbx
   14000218e:	xor    edx,edx
   140002190:	mov    rcx,rax
   140002193:	call   QWORD PTR [rip+0x4fcf]        # 0x140007168
   140002199:	mov    rax,rbx
   14000219c:	add    rsp,0x20
   1400021a0:	pop    rbx
   1400021a1:	ret    
   1400021a2:	int3   
   1400021a3:	int3   
   1400021a4:	int3   
   1400021a5:	int3   
   1400021a6:	int3   
   1400021a7:	int3   
   1400021a8:	int3   
   1400021a9:	int3   
   1400021aa:	int3   
   1400021ab:	int3   
   1400021ac:	int3   
   1400021ad:	int3   
   1400021ae:	int3   
   1400021af:	int3   
   1400021b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400021b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400021ba:	push   rdi
   1400021bb:	sub    rsp,0x20
   1400021bf:	xor    edi,edi
   1400021c1:	mov    rsi,rcx
   1400021c4:	mov    QWORD PTR [r8],rdi
   1400021c7:	cmp    DWORD PTR [rdx],edi
   1400021c9:	jne    0x1400021ec
   1400021cb:	mov    eax,DWORD PTR [rip+0x558b]        # 0x14000775c
   1400021d1:	cmp    DWORD PTR [rdx+0x4],eax
   1400021d4:	jne    0x1400021ec
   1400021d6:	mov    eax,DWORD PTR [rip+0x5584]        # 0x140007760
   1400021dc:	cmp    DWORD PTR [rdx+0x8],eax
   1400021df:	jne    0x1400021ec
   1400021e1:	mov    eax,DWORD PTR [rip+0x557d]        # 0x140007764
   1400021e7:	cmp    DWORD PTR [rdx+0xc],eax
   1400021ea:	je     0x140002215
   1400021ec:	cmp    DWORD PTR [rdx],0x9e6d89ee
   1400021f2:	jne    0x14000222f
   1400021f4:	mov    eax,DWORD PTR [rip+0x5552]        # 0x14000774c
   1400021fa:	cmp    DWORD PTR [rdx+0x4],eax
   1400021fd:	jne    0x14000222f
   1400021ff:	mov    eax,DWORD PTR [rip+0x554b]        # 0x140007750
   140002205:	cmp    DWORD PTR [rdx+0x8],eax
   140002208:	jne    0x14000222f
   14000220a:	mov    eax,DWORD PTR [rip+0x5544]        # 0x140007754
   140002210:	cmp    DWORD PTR [rdx+0xc],eax
   140002213:	jne    0x14000222f
   140002215:	mov    QWORD PTR [r8],rcx
   140002218:	mov    rax,QWORD PTR [rcx]
   14000221b:	mov    rbx,QWORD PTR [rax+0x8]
   14000221f:	mov    rcx,rbx
   140002222:	call   QWORD PTR [rip+0x50c0]        # 0x1400072e8
   140002228:	mov    rcx,rsi
   14000222b:	call   rbx
   14000222d:	jmp    0x140002234
   14000222f:	mov    edi,0x80004002
   140002234:	mov    rbx,QWORD PTR [rsp+0x30]
   140002239:	mov    eax,edi
   14000223b:	mov    rsi,QWORD PTR [rsp+0x38]
   140002240:	add    rsp,0x20
   140002244:	pop    rdi
   140002245:	ret    
   140002246:	int3   
   140002247:	int3   
   140002248:	int3   
   140002249:	int3   
   14000224a:	int3   
   14000224b:	int3   
   14000224c:	int3   
   14000224d:	int3   
   14000224e:	int3   
   14000224f:	int3   
   140002250:	mov    eax,0x1
   140002255:	lock xadd DWORD PTR [rcx+0xc],eax
   14000225a:	inc    eax
   14000225c:	ret    
   14000225d:	int3   
   14000225e:	int3   
   14000225f:	int3   
   140002260:	int3   
   140002261:	int3   
   140002262:	int3   
   140002263:	int3   
   140002264:	int3   
   140002265:	int3   
   140002266:	int3   
   140002267:	int3   
   140002268:	int3   
   140002269:	int3   
   14000226a:	int3   
   14000226b:	int3   
   14000226c:	int3   
   14000226d:	int3   
   14000226e:	int3   
   14000226f:	int3   
   140002270:	mov    QWORD PTR [rsp+0x8],rbx
   140002275:	mov    QWORD PTR [rsp+0x10],rsi
   14000227a:	push   rdi
   14000227b:	sub    rsp,0x20
   14000227f:	mov    rsi,rcx
   140002282:	or     edi,0xffffffff
   140002285:	lock xadd DWORD PTR [rcx+0xc],edi
   14000228a:	sub    edi,0x1
   14000228d:	jne    0x1400022cd
   14000228f:	test   rcx,rcx
   140002292:	je     0x1400022ac
   140002294:	mov    rax,QWORD PTR [rcx]
   140002297:	mov    rbx,QWORD PTR [rax+0x20]
   14000229b:	mov    rcx,rbx
   14000229e:	call   QWORD PTR [rip+0x5044]        # 0x1400072e8
   1400022a4:	lea    edx,[rdi+0x1]
   1400022a7:	mov    rcx,rsi
   1400022aa:	call   rbx
   1400022ac:	mov    rsi,QWORD PTR [rip+0x7395]        # 0x140009648
   1400022b3:	test   rsi,rsi
   1400022b6:	je     0x1400022cd
   1400022b8:	mov    rdx,QWORD PTR [rsi]
   1400022bb:	mov    rbx,QWORD PTR [rdx+0x10]
   1400022bf:	mov    rcx,rbx
   1400022c2:	call   QWORD PTR [rip+0x5020]        # 0x1400072e8
   1400022c8:	mov    rcx,rsi
   1400022cb:	call   rbx
   1400022cd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400022d2:	mov    eax,edi
   1400022d4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400022d9:	add    rsp,0x20
   1400022dd:	pop    rdi
   1400022de:	ret    
   1400022df:	int3   
   1400022e0:	int3   
   1400022e1:	int3   
   1400022e2:	int3   
   1400022e3:	int3   
   1400022e4:	int3   
   1400022e5:	int3   
   1400022e6:	int3   
   1400022e7:	int3   
   1400022e8:	int3   
   1400022e9:	int3   
   1400022ea:	int3   
   1400022eb:	int3   
   1400022ec:	int3   
   1400022ed:	int3   
   1400022ee:	int3   
   1400022ef:	int3   
   1400022f0:	mov    rax,QWORD PTR [rcx]
   1400022f3:	mov    rax,QWORD PTR [rax+0x30]
   1400022f7:	call   0x1400055d0
   1400022fc:	jmp    rax
   1400022fe:	int3   
   1400022ff:	int3   
   140002300:	int3   
   140002301:	int3   
   140002302:	int3   
   140002303:	int3   
   140002304:	int3   
   140002305:	int3   
   140002306:	int3   
   140002307:	int3   
   140002308:	int3   
   140002309:	int3   
   14000230a:	int3   
   14000230b:	int3   
   14000230c:	int3   
   14000230d:	int3   
   14000230e:	int3   
   14000230f:	int3   
   140002310:	mov    QWORD PTR [rsp+0x8],rbx
   140002315:	mov    QWORD PTR [rsp+0x10],rsi
   14000231a:	push   rdi
   14000231b:	sub    rsp,0x20
   14000231f:	xor    edi,edi
   140002321:	mov    rsi,rcx
   140002324:	mov    QWORD PTR [r8],rdi
   140002327:	cmp    DWORD PTR [rdx],edi
   140002329:	jne    0x14000234c
   14000232b:	mov    eax,DWORD PTR [rip+0x542b]        # 0x14000775c
   140002331:	cmp    DWORD PTR [rdx+0x4],eax
   140002334:	jne    0x14000234c
   140002336:	mov    eax,DWORD PTR [rip+0x5424]        # 0x140007760
   14000233c:	cmp    DWORD PTR [rdx+0x8],eax
   14000233f:	jne    0x14000234c
   140002341:	mov    eax,DWORD PTR [rip+0x541d]        # 0x140007764
   140002347:	cmp    DWORD PTR [rdx+0xc],eax
   14000234a:	je     0x140002375
   14000234c:	cmp    DWORD PTR [rdx],0x4452ce09
   140002352:	jne    0x14000238f
   140002354:	mov    eax,DWORD PTR [rip+0x5412]        # 0x14000776c
   14000235a:	cmp    DWORD PTR [rdx+0x4],eax
   14000235d:	jne    0x14000238f
   14000235f:	mov    eax,DWORD PTR [rip+0x540b]        # 0x140007770
   140002365:	cmp    DWORD PTR [rdx+0x8],eax
   140002368:	jne    0x14000238f
   14000236a:	mov    eax,DWORD PTR [rip+0x5404]        # 0x140007774
   140002370:	cmp    DWORD PTR [rdx+0xc],eax
   140002373:	jne    0x14000238f
   140002375:	mov    QWORD PTR [r8],rcx
   140002378:	mov    rax,QWORD PTR [rcx]
   14000237b:	mov    rbx,QWORD PTR [rax+0x8]
   14000237f:	mov    rcx,rbx
   140002382:	call   QWORD PTR [rip+0x4f60]        # 0x1400072e8
   140002388:	mov    rcx,rsi
   14000238b:	call   rbx
   14000238d:	jmp    0x140002394
   14000238f:	mov    edi,0x80004002
   140002394:	mov    rbx,QWORD PTR [rsp+0x30]
   140002399:	mov    eax,edi
   14000239b:	mov    rsi,QWORD PTR [rsp+0x38]
   1400023a0:	add    rsp,0x20
   1400023a4:	pop    rdi
   1400023a5:	ret    
   1400023a6:	int3   
   1400023a7:	int3   
   1400023a8:	int3   
   1400023a9:	int3   
   1400023aa:	int3   
   1400023ab:	int3   
   1400023ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400023b1:	mov    QWORD PTR [rsp+0x18],rsi
   1400023b6:	mov    DWORD PTR [rsp+0x10],edx
   1400023ba:	push   rdi
   1400023bb:	sub    rsp,0x20
   1400023bf:	mov    rsi,r8
   1400023c2:	test   ecx,ecx
   1400023c4:	js     0x140002405
   1400023c6:	xor    ebx,ebx
   1400023c8:	test   ecx,ecx
   1400023ca:	je     0x1400023e9
   1400023cc:	lea    edi,[rcx+rcx*1]
   1400023cf:	mov    eax,edi
   1400023d1:	shr    eax,1
   1400023d3:	cmp    eax,ecx
   1400023d5:	je     0x1400023eb
   1400023d7:	mov    ebx,0x80070216
   1400023dc:	mov    ecx,ebx
   1400023de:	call   0x140002590
   1400023e3:	mov    edi,DWORD PTR [rsp+0x38]
   1400023e7:	jmp    0x1400023eb
   1400023e9:	xor    edi,edi
   1400023eb:	mov    ecx,ebx
   1400023ed:	call   0x1400024a8
   1400023f2:	test   ebx,ebx
   1400023f4:	js     0x14000240a
   1400023f6:	test   edi,edi
   1400023f8:	jns    0x140002401
   1400023fa:	mov    ebx,0x80070216
   1400023ff:	jmp    0x14000240a
   140002401:	mov    DWORD PTR [rsi],edi
   140002403:	jmp    0x140002411
   140002405:	mov    ebx,0x80070057
   14000240a:	mov    ecx,ebx
   14000240c:	call   0x140002590
   140002411:	mov    ecx,ebx
   140002413:	call   0x1400024a8
   140002418:	mov    rsi,QWORD PTR [rsp+0x40]
   14000241d:	mov    eax,ebx
   14000241f:	mov    rbx,QWORD PTR [rsp+0x30]
   140002424:	add    rsp,0x20
   140002428:	pop    rdi
   140002429:	ret    
   14000242a:	int3   
   14000242b:	int3   
   14000242c:	int3   
   14000242d:	int3   
   14000242e:	int3   
   14000242f:	int3   
   140002430:	mov    QWORD PTR [rsp+0x8],rbx
   140002435:	mov    QWORD PTR [rsp+0x10],rsi
   14000243a:	push   rdi
   14000243b:	sub    rsp,0x20
   14000243f:	mov    rsi,rcx
   140002442:	or     edi,0xffffffff
   140002445:	lock xadd DWORD PTR [rcx+0xc],edi
   14000244a:	sub    edi,0x1
   14000244d:	jne    0x14000248d
   14000244f:	test   rcx,rcx
   140002452:	je     0x14000246c
   140002454:	mov    rax,QWORD PTR [rcx]
   140002457:	mov    rbx,QWORD PTR [rax+0x30]
   14000245b:	mov    rcx,rbx
   14000245e:	call   QWORD PTR [rip+0x4e84]        # 0x1400072e8
   140002464:	lea    edx,[rdi+0x1]
   140002467:	mov    rcx,rsi
   14000246a:	call   rbx
   14000246c:	mov    rsi,QWORD PTR [rip+0x71d5]        # 0x140009648
   140002473:	test   rsi,rsi
   140002476:	je     0x14000248d
   140002478:	mov    rdx,QWORD PTR [rsi]
   14000247b:	mov    rbx,QWORD PTR [rdx+0x10]
   14000247f:	mov    rcx,rbx
   140002482:	call   QWORD PTR [rip+0x4e60]        # 0x1400072e8
   140002488:	mov    rcx,rsi
   14000248b:	call   rbx
   14000248d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002492:	mov    eax,edi
   140002494:	mov    rsi,QWORD PTR [rsp+0x38]
   140002499:	add    rsp,0x20
   14000249d:	pop    rdi
   14000249e:	ret    
   14000249f:	int3   
   1400024a0:	int3   
   1400024a1:	int3   
   1400024a2:	int3   
   1400024a3:	int3   
   1400024a4:	int3   
   1400024a5:	int3   
   1400024a6:	int3   
   1400024a7:	int3   
   1400024a8:	mov    QWORD PTR [rsp+0x10],rbx
   1400024ad:	mov    QWORD PTR [rsp+0x18],rsi
   1400024b2:	push   rdi
   1400024b3:	sub    rsp,0x40
   1400024b7:	mov    rax,QWORD PTR [rip+0x6b4a]        # 0x140009008
   1400024be:	xor    rax,rsp
   1400024c1:	mov    QWORD PTR [rsp+0x30],rax
   1400024c6:	mov    eax,ecx
   1400024c8:	xor    esi,esi
   1400024ca:	xor    ecx,ecx
   1400024cc:	mov    QWORD PTR [rsp+0x22],rcx
   1400024d1:	mov    DWORD PTR [rsp+0x2a],ecx
   1400024d5:	mov    WORD PTR [rsp+0x2e],cx
   1400024da:	mov    ecx,0x1
   1400024df:	mov    BYTE PTR [rsp+0x22],cl
   1400024e3:	mov    BYTE PTR [rsp+0x24],cl
   1400024e7:	test   eax,eax
   1400024e9:	js     0x1400024fc
   1400024eb:	mov    WORD PTR [rsp+0x20],si
   1400024f0:	movabs rcx,0x8000000000000000
   1400024fa:	jmp    0x14000250b
   1400024fc:	mov    WORD PTR [rsp+0x20],cx
   140002501:	movabs rcx,0x4000000000000000
   14000250b:	or     rcx,rax
   14000250e:	cmp    QWORD PTR [rip+0x720b],rsi        # 0x140009720
   140002515:	mov    QWORD PTR [rsp+0x28],rcx
   14000251a:	je     0x14000256a
   14000251c:	mov    rbx,QWORD PTR [rip+0x71f5]        # 0x140009718
   140002523:	test   rbx,rbx
   140002526:	je     0x14000256a
   140002528:	mov    rdi,QWORD PTR [rip+0x7201]        # 0x140009730
   14000252f:	mov    rcx,rdi
   140002532:	call   QWORD PTR [rip+0x4db0]        # 0x1400072e8
   140002538:	lea    rdx,[rsp+0x20]
   14000253d:	mov    rcx,rbx
   140002540:	call   rdi
   140002542:	test   al,al
   140002544:	je     0x14000256a
   140002546:	mov    rbx,QWORD PTR [rip+0x71eb]        # 0x140009738
   14000254d:	mov    rcx,rbx
   140002550:	call   QWORD PTR [rip+0x4d92]        # 0x1400072e8
   140002556:	mov    rcx,QWORD PTR [rip+0x71bb]        # 0x140009718
   14000255d:	lea    rdx,[rsp+0x20]
   140002562:	xor    r9d,r9d
   140002565:	xor    r8d,r8d
   140002568:	call   rbx
   14000256a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000256f:	xor    rcx,rsp
   140002572:	call   0x140004ed0
   140002577:	mov    rbx,QWORD PTR [rsp+0x58]
   14000257c:	mov    rsi,QWORD PTR [rsp+0x60]
   140002581:	add    rsp,0x40
   140002585:	pop    rdi
   140002586:	ret    
   140002587:	int3   
   140002588:	int3   
   140002589:	int3   
   14000258a:	int3   
   14000258b:	int3   
   14000258c:	int3   
   14000258d:	int3   
   14000258e:	int3   
   14000258f:	int3   
   140002590:	mov    eax,DWORD PTR [rip+0x70ba]        # 0x140009650
   140002596:	test   eax,eax
   140002598:	je     0x1400025a8
   14000259a:	test   ecx,ecx
   14000259c:	jns    0x1400025a8
   14000259e:	cmp    eax,ecx
   1400025a0:	je     0x1400025a7
   1400025a2:	cmp    eax,0xffffffff
   1400025a5:	jne    0x1400025a8
   1400025a7:	int3   
   1400025a8:	ret    
   1400025a9:	int3   
   1400025aa:	int3   
   1400025ab:	int3   
   1400025ac:	int3   
   1400025ad:	int3   
   1400025ae:	int3   
   1400025af:	int3   
   1400025b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400025b5:	push   rbp
   1400025b6:	push   rsi
   1400025b7:	push   rdi
   1400025b8:	push   r14
   1400025ba:	push   r15
   1400025bc:	lea    rbp,[rsp-0x37]
   1400025c1:	sub    rsp,0x90
   1400025c8:	mov    rax,QWORD PTR [rip+0x6a39]        # 0x140009008
   1400025cf:	xor    rax,rsp
   1400025d2:	mov    QWORD PTR [rbp+0x2f],rax
   1400025d6:	and    QWORD PTR [rbp-0x11],0x0
   1400025db:	mov    eax,edx
   1400025dd:	mov    r15,rcx
   1400025e0:	lea    rdx,[rbp-0x11]
   1400025e4:	xor    ebx,ebx
   1400025e6:	xor    edi,edi
   1400025e8:	and    QWORD PTR [rbp-0x21],rbx
   1400025ec:	mov    ecx,eax
   1400025ee:	mov    QWORD PTR [rbp-0x29],rbx
   1400025f2:	mov    QWORD PTR [rbp-0x19],rdi
   1400025f6:	call   0x140002d80
   1400025fb:	mov    rsi,QWORD PTR [rbp-0x11]
   1400025ff:	mov    r14d,eax
   140002602:	test   eax,eax
   140002604:	jns    0x140002612
   140002606:	mov    ecx,eax
   140002608:	call   0x140002590
   14000260d:	jmp    0x140002711
   140002612:	cmp    DWORD PTR [rip+0x7048],ebx        # 0x140009660
   140002618:	jge    0x1400026ac
   14000261e:	lea    rdx,[rbp-0x21]
   140002622:	mov    ecx,0x32
   140002627:	call   0x140002d80
   14000262c:	mov    r14d,eax
   14000262f:	test   eax,eax
   140002631:	js     0x140002606
   140002633:	mov    r9d,DWORD PTR [rip+0x7026]        # 0x140009660
   14000263a:	lea    r8,[rip+0x5147]        # 0x140007788
   140002641:	mov    edx,0x19
   140002646:	lea    rcx,[rbp-0x9]
   14000264a:	call   0x140002b48
   14000264f:	mov    r14d,eax
   140002652:	test   eax,eax
   140002654:	js     0x140002606
   140002656:	lea    rdx,[rbp-0x19]
   14000265a:	lea    rcx,[rbp-0x9]
   14000265e:	call   0x140002a78
   140002663:	mov    r14d,eax
   140002666:	test   eax,eax
   140002668:	jns    0x14000267a
   14000266a:	mov    ecx,eax
   14000266c:	call   0x140002590
   140002671:	mov    rdi,QWORD PTR [rbp-0x19]
   140002675:	jmp    0x140002711
   14000267a:	mov    rdi,QWORD PTR [rbp-0x19]
   14000267e:	lea    rcx,[rbp-0x29]
   140002682:	mov    r9,QWORD PTR [rbp-0x21]
   140002686:	mov    r8,rsi
   140002689:	mov    edx,0x3
   14000268e:	mov    QWORD PTR [rsp+0x20],rdi
   140002693:	call   0x140002a38
   140002698:	mov    r14d,eax
   14000269b:	test   eax,eax
   14000269d:	jns    0x1400026bf
   14000269f:	mov    ecx,eax
   1400026a1:	call   0x140002590
   1400026a6:	mov    rbx,QWORD PTR [rbp-0x29]
   1400026aa:	jmp    0x140002711
   1400026ac:	mov    r8,rsi
   1400026af:	lea    rcx,[rbp-0x29]
   1400026b3:	mov    edx,0x1
   1400026b8:	call   0x140002a38
   1400026bd:	jmp    0x140002698
   1400026bf:	mov    rbx,QWORD PTR [r15+0x20]
   1400026c3:	lea    rcx,[rip+0x50ce]        # 0x140007798
   1400026ca:	call   QWORD PTR [rip+0x49c8]        # 0x140007098
   1400026d0:	movzx  edx,ax
   1400026d3:	mov    rcx,rbx
   1400026d6:	call   QWORD PTR [rip+0x49c4]        # 0x1400070a0
   1400026dc:	mov    rbx,QWORD PTR [rbp-0x29]
   1400026e0:	mov    r15,rax
   1400026e3:	test   rax,rax
   1400026e6:	je     0x14000270a
   1400026e8:	xor    edx,edx
   1400026ea:	mov    rcx,rax
   1400026ed:	call   QWORD PTR [rip+0x496d]        # 0x140007060
   1400026f3:	mov    rdx,rbx
   1400026f6:	mov    rcx,r15
   1400026f9:	call   QWORD PTR [rip+0x4969]        # 0x140007068
   1400026ff:	mov    r14d,eax
   140002702:	test   eax,eax
   140002704:	js     0x140002606
   14000270a:	and    DWORD PTR [rip+0x6f4f],0x0        # 0x140009660
   140002711:	mov    ecx,r14d
   140002714:	call   0x1400024a8
   140002719:	test   rdi,rdi
   14000271c:	je     0x14000273a
   14000271e:	call   QWORD PTR [rip+0x4a34]        # 0x140007158
   140002724:	lea    r8,[rdi-0x4]
   140002728:	xor    edx,edx
   14000272a:	mov    rcx,rax
   14000272d:	call   QWORD PTR [rip+0x4a35]        # 0x140007168
   140002733:	xor    ecx,ecx
   140002735:	call   0x1400024a8
   14000273a:	mov    rax,QWORD PTR [rbp-0x21]
   14000273e:	test   rax,rax
   140002741:	je     0x140002762
   140002743:	lea    rdi,[rax-0x4]
   140002747:	call   QWORD PTR [rip+0x4a0b]        # 0x140007158
   14000274d:	mov    r8,rdi
   140002750:	xor    edx,edx
   140002752:	mov    rcx,rax
   140002755:	call   QWORD PTR [rip+0x4a0d]        # 0x140007168
   14000275b:	xor    ecx,ecx
   14000275d:	call   0x1400024a8
   140002762:	test   rbx,rbx
   140002765:	je     0x140002783
   140002767:	call   QWORD PTR [rip+0x49eb]        # 0x140007158
   14000276d:	lea    r8,[rbx-0x4]
   140002771:	xor    edx,edx
   140002773:	mov    rcx,rax
   140002776:	call   QWORD PTR [rip+0x49ec]        # 0x140007168
   14000277c:	xor    ecx,ecx
   14000277e:	call   0x1400024a8
   140002783:	test   rsi,rsi
   140002786:	je     0x1400027a4
   140002788:	call   QWORD PTR [rip+0x49ca]        # 0x140007158
   14000278e:	lea    r8,[rsi-0x4]
   140002792:	xor    edx,edx
   140002794:	mov    rcx,rax
   140002797:	call   QWORD PTR [rip+0x49cb]        # 0x140007168
   14000279d:	xor    ecx,ecx
   14000279f:	call   0x1400024a8
   1400027a4:	mov    eax,r14d
   1400027a7:	mov    rcx,QWORD PTR [rbp+0x2f]
   1400027ab:	xor    rcx,rsp
   1400027ae:	call   0x140004ed0
   1400027b3:	mov    rbx,QWORD PTR [rsp+0xd0]
   1400027bb:	add    rsp,0x90
   1400027c2:	pop    r15
   1400027c4:	pop    r14
   1400027c6:	pop    rdi
   1400027c7:	pop    rsi
   1400027c8:	pop    rbp
   1400027c9:	ret    
   1400027ca:	int3   
   1400027cb:	int3   
   1400027cc:	int3   
   1400027cd:	int3   
   1400027ce:	int3   
   1400027cf:	int3   
   1400027d0:	sub    rsp,0x28
   1400027d4:	mov    ecx,0x80004001
   1400027d9:	call   0x140002590
   1400027de:	call   0x1400024a8
   1400027e3:	mov    eax,0x80004001
   1400027e8:	add    rsp,0x28
   1400027ec:	ret    
   1400027ed:	int3   
   1400027ee:	int3   
   1400027ef:	int3   
   1400027f0:	int3   
   1400027f1:	int3   
   1400027f2:	int3   
   1400027f3:	int3   
   1400027f4:	mov    QWORD PTR [rsp+0x18],rbx
   1400027f9:	mov    QWORD PTR [rsp+0x8],rcx
   1400027fe:	push   rbp
   1400027ff:	push   rsi
   140002800:	push   rdi
   140002801:	push   r12
   140002803:	push   r13
   140002805:	push   r14
   140002807:	push   r15
   140002809:	sub    rsp,0x20
   14000280d:	xor    r15d,r15d
   140002810:	mov    r12d,edx
   140002813:	mov    r13,r8
   140002816:	mov    edi,r15d
   140002819:	mov    r14d,r15d
   14000281c:	mov    ebp,r15d
   14000281f:	test   edx,edx
   140002821:	je     0x140002873
   140002823:	lea    rbx,[r8-0x8]
   140002827:	lea    rbx,[rbx+0x8]
   14000282b:	mov    rax,QWORD PTR [rbx]
   14000282e:	test   rax,rax
   140002831:	je     0x140002838
   140002833:	mov    esi,DWORD PTR [rax-0x4]
   140002836:	jmp    0x14000283b
   140002838:	mov    esi,r15d
   14000283b:	xor    ecx,ecx
   14000283d:	call   0x1400024a8
   140002842:	lea    eax,[rsi+r14*1]
   140002846:	cmp    eax,r14d
   140002849:	jb     0x140002853
   14000284b:	mov    r14d,eax
   14000284e:	mov    esi,r15d
   140002851:	jmp    0x140002861
   140002853:	mov    eax,0x80070216
   140002858:	mov    ecx,eax
   14000285a:	mov    esi,eax
   14000285c:	call   0x140002590
   140002861:	mov    ecx,esi
   140002863:	call   0x1400024a8
   140002868:	test   esi,esi
   14000286a:	js     0x140002884
   14000286c:	inc    ebp
   14000286e:	cmp    ebp,r12d
   140002871:	jb     0x140002827
   140002873:	lea    eax,[r14+0x1]
   140002877:	cmp    eax,r14d
   14000287a:	jb     0x140002890
   14000287c:	mov    r14d,eax
   14000287f:	mov    esi,r15d
   140002882:	jmp    0x14000289c
   140002884:	mov    ecx,esi
   140002886:	call   0x140002590
   14000288b:	jmp    0x1400029f2
   140002890:	mov    esi,0x80070216
   140002895:	mov    ecx,esi
   140002897:	call   0x140002590
   14000289c:	mov    ecx,esi
   14000289e:	call   0x1400024a8
   1400028a3:	test   esi,esi
   1400028a5:	js     0x140002884
   1400028a7:	mov    rbx,r15
   1400028aa:	mov    esi,r15d
   1400028ad:	test   r14d,r14d
   1400028b0:	je     0x140002977
   1400028b6:	lea    ebp,[r14+r14*1]
   1400028ba:	mov    eax,ebp
   1400028bc:	shr    eax,1
   1400028be:	cmp    eax,r14d
   1400028c1:	je     0x1400028d5
   1400028c3:	mov    eax,0x80070216
   1400028c8:	mov    ecx,eax
   1400028ca:	mov    esi,eax
   1400028cc:	call   0x140002590
   1400028d1:	mov    ebp,DWORD PTR [rsp+0x68]
   1400028d5:	mov    ecx,esi
   1400028d7:	call   0x1400024a8
   1400028dc:	test   esi,esi
   1400028de:	jns    0x1400028ec
   1400028e0:	mov    ecx,esi
   1400028e2:	call   0x140002590
   1400028e7:	jmp    0x140002977
   1400028ec:	lea    eax,[rbp+0x4]
   1400028ef:	cmp    eax,ebp
   1400028f1:	jb     0x1400028fa
   1400028f3:	mov    ebp,eax
   1400028f5:	mov    esi,r15d
   1400028f8:	jmp    0x140002908
   1400028fa:	mov    eax,0x80070216
   1400028ff:	mov    ecx,eax
   140002901:	mov    esi,eax
   140002903:	call   0x140002590
   140002908:	mov    ecx,esi
   14000290a:	call   0x1400024a8
   14000290f:	test   esi,esi
   140002911:	js     0x1400028e0
   140002913:	call   QWORD PTR [rip+0x483f]        # 0x140007158
   140002919:	mov    r8d,ebp
   14000291c:	xor    edx,edx
   14000291e:	mov    rcx,rax
   140002921:	call   QWORD PTR [rip+0x4849]        # 0x140007170
   140002927:	mov    rbx,rax
   14000292a:	test   rax,rax
   14000292d:	jne    0x140002939
   14000292f:	mov    rbx,r15
   140002932:	mov    esi,0x8007000e
   140002937:	jmp    0x1400028e0
   140002939:	lea    eax,[r14-0x1]
   14000293d:	cmp    eax,r14d
   140002940:	ja     0x140002949
   140002942:	mov    DWORD PTR [rbx],eax
   140002944:	mov    esi,r15d
   140002947:	jmp    0x140002957
   140002949:	mov    eax,0x80070216
   14000294e:	mov    ecx,eax
   140002950:	mov    esi,eax
   140002952:	call   0x140002590
   140002957:	mov    ecx,esi
   140002959:	call   0x1400024a8
   14000295e:	test   esi,esi
   140002960:	js     0x1400028e0
   140002966:	mov    eax,DWORD PTR [rbx]
   140002968:	lea    rdi,[rbx+0x4]
   14000296c:	mov    rbx,r15
   14000296f:	mov    esi,r15d
   140002972:	mov    WORD PTR [rdi+rax*2],r15w
   140002977:	mov    ecx,esi
   140002979:	call   0x1400024a8
   14000297e:	test   rbx,rbx
   140002981:	je     0x140002997
   140002983:	call   QWORD PTR [rip+0x47cf]        # 0x140007158
   140002989:	mov    r8,rbx
   14000298c:	xor    edx,edx
   14000298e:	mov    rcx,rax
   140002991:	call   QWORD PTR [rip+0x47d1]        # 0x140007168
   140002997:	test   esi,esi
   140002999:	js     0x140002884
   14000299f:	mov    r15,rdi
   1400029a2:	test   r12d,r12d
   1400029a5:	je     0x1400029e1
   1400029a7:	xor    esi,esi
   1400029a9:	lea    r14,[r13-0x8]
   1400029ad:	lea    r14,[r14+0x8]
   1400029b1:	mov    rbp,QWORD PTR [r14]
   1400029b4:	test   rbp,rbp
   1400029b7:	je     0x1400029be
   1400029b9:	mov    ebx,DWORD PTR [rbp-0x4]
   1400029bc:	jmp    0x1400029c0
   1400029be:	xor    ebx,ebx
   1400029c0:	xor    ecx,ecx
   1400029c2:	call   0x1400024a8
   1400029c7:	add    rbx,rbx
   1400029ca:	mov    rdx,rbp
   1400029cd:	mov    r8,rbx
   1400029d0:	mov    rcx,r15
   1400029d3:	call   0x140005586
   1400029d8:	add    r15,rbx
   1400029db:	sub    r12,0x1
   1400029df:	jne    0x1400029ad
   1400029e1:	mov    rcx,QWORD PTR [rsp+0x60]
   1400029e6:	mov    rax,rdi
   1400029e9:	xor    r15d,r15d
   1400029ec:	mov    edi,r15d
   1400029ef:	mov    QWORD PTR [rcx],rax
   1400029f2:	mov    ecx,esi
   1400029f4:	call   0x1400024a8
   1400029f9:	test   rdi,rdi
   1400029fc:	je     0x140002a1a
   1400029fe:	call   QWORD PTR [rip+0x4754]        # 0x140007158
   140002a04:	lea    r8,[rdi-0x4]
   140002a08:	xor    edx,edx
   140002a0a:	mov    rcx,rax
   140002a0d:	call   QWORD PTR [rip+0x4755]        # 0x140007168
   140002a13:	xor    ecx,ecx
   140002a15:	call   0x1400024a8
   140002a1a:	mov    eax,esi
   140002a1c:	mov    rbx,QWORD PTR [rsp+0x70]
   140002a21:	add    rsp,0x20
   140002a25:	pop    r15
   140002a27:	pop    r14
   140002a29:	pop    r13
   140002a2b:	pop    r12
   140002a2d:	pop    rdi
   140002a2e:	pop    rsi
   140002a2f:	pop    rbp
   140002a30:	ret    
   140002a31:	int3   
   140002a32:	int3   
   140002a33:	int3   
   140002a34:	int3   
   140002a35:	int3   
   140002a36:	int3   
   140002a37:	int3   
   140002a38:	mov    rax,rsp
   140002a3b:	mov    DWORD PTR [rax+0x10],edx
   140002a3e:	mov    QWORD PTR [rax+0x18],r8
   140002a42:	mov    QWORD PTR [rax+0x20],r9
   140002a46:	push   rbx
   140002a47:	sub    rsp,0x20
   140002a4b:	lea    r8,[rax+0x18]
   140002a4f:	call   0x1400027f4
   140002a54:	mov    ebx,eax
   140002a56:	test   eax,eax
   140002a58:	jns    0x140002a61
   140002a5a:	mov    ecx,eax
   140002a5c:	call   0x140002590
   140002a61:	mov    ecx,ebx
   140002a63:	call   0x1400024a8
   140002a68:	mov    eax,ebx
   140002a6a:	add    rsp,0x20
   140002a6e:	pop    rbx
   140002a6f:	ret    
   140002a70:	int3   
   140002a71:	int3   
   140002a72:	int3   
   140002a73:	int3   
   140002a74:	int3   
   140002a75:	int3   
   140002a76:	int3   
   140002a77:	int3   
   140002a78:	mov    QWORD PTR [rsp+0x10],rbx
   140002a7d:	mov    QWORD PTR [rsp+0x18],rbp
   140002a82:	push   rsi
   140002a83:	push   rdi
   140002a84:	push   r14
   140002a86:	sub    rsp,0x20
   140002a8a:	xor    r14d,r14d
   140002a8d:	mov    rbp,rdx
   140002a90:	mov    rsi,rcx
   140002a93:	test   rcx,rcx
   140002a96:	je     0x140002b09
   140002a98:	mov    edi,0x7fffffff
   140002a9d:	mov    r8,rcx
   140002aa0:	mov    eax,edi
   140002aa2:	cmp    WORD PTR [r8],r14w
   140002aa6:	je     0x140002ab2
   140002aa8:	add    r8,0x2
   140002aac:	sub    rax,0x1
   140002ab0:	jne    0x140002aa2
   140002ab2:	test   rax,rax
   140002ab5:	je     0x140002aea
   140002ab7:	sub    rdi,rax
   140002aba:	mov    eax,edi
   140002abc:	cmp    rdi,rax
   140002abf:	je     0x140002ad3
   140002ac1:	mov    ebx,0x80070216
   140002ac6:	mov    ecx,ebx
   140002ac8:	call   0x140002590
   140002acd:	mov    edi,DWORD PTR [rsp+0x40]
   140002ad1:	jmp    0x140002add
   140002ad3:	xor    ecx,ecx
   140002ad5:	call   0x1400024a8
   140002ada:	mov    ebx,r14d
   140002add:	mov    ecx,ebx
   140002adf:	call   0x1400024a8
   140002ae4:	test   ebx,ebx
   140002ae6:	jns    0x140002afa
   140002ae8:	jmp    0x140002aef
   140002aea:	mov    ebx,0x80070057
   140002aef:	mov    ecx,ebx
   140002af1:	call   0x140002590
   140002af6:	mov    edi,DWORD PTR [rsp+0x40]
   140002afa:	mov    ecx,ebx
   140002afc:	call   0x1400024a8
   140002b01:	test   ebx,ebx
   140002b03:	jns    0x140002b0c
   140002b05:	mov    ecx,ebx
   140002b07:	jmp    0x140002b21
   140002b09:	mov    edi,r14d
   140002b0c:	mov    r8,rbp
   140002b0f:	mov    edx,edi
   140002b11:	mov    rcx,rsi
   140002b14:	call   0x140002c58
   140002b19:	mov    ebx,eax
   140002b1b:	test   eax,eax
   140002b1d:	jns    0x140002b26
   140002b1f:	mov    ecx,eax
   140002b21:	call   0x140002590
   140002b26:	mov    ecx,ebx
   140002b28:	call   0x1400024a8
   140002b2d:	mov    rbp,QWORD PTR [rsp+0x50]
   140002b32:	mov    eax,ebx
   140002b34:	mov    rbx,QWORD PTR [rsp+0x48]
   140002b39:	add    rsp,0x20
   140002b3d:	pop    r14
   140002b3f:	pop    rdi
   140002b40:	pop    rsi
   140002b41:	ret    
   140002b42:	int3   
   140002b43:	int3   
   140002b44:	int3   
   140002b45:	int3   
   140002b46:	int3   
   140002b47:	int3   
   140002b48:	mov    QWORD PTR [rsp+0x18],r8
   140002b4d:	mov    QWORD PTR [rsp+0x20],r9
   140002b52:	push   rbx
   140002b53:	push   rbp
   140002b54:	push   rsi
   140002b55:	push   rdi
   140002b56:	sub    rsp,0x28
   140002b5a:	xor    ebp,ebp
   140002b5c:	lea    rax,[rdx-0x1]
   140002b60:	cmp    rax,0x7ffffffe
   140002b66:	mov    rsi,rcx
   140002b69:	mov    edi,ebp
   140002b6b:	mov    ecx,0x80070057
   140002b70:	cmova  edi,ecx
   140002b73:	test   edi,edi
   140002b75:	js     0x140002bac
   140002b77:	lea    rbx,[rdx-0x1]
   140002b7b:	mov    rcx,rsi
   140002b7e:	mov    rdx,rbx
   140002b81:	lea    r9,[rsp+0x68]
   140002b86:	mov    edi,ebp
   140002b88:	call   QWORD PTR [rip+0x46da]        # 0x140007268
   140002b8e:	test   eax,eax
   140002b90:	js     0x140002ba1
   140002b92:	cdqe   
   140002b94:	cmp    rax,rbx
   140002b97:	ja     0x140002ba1
   140002b99:	jne    0x140002bb4
   140002b9b:	mov    WORD PTR [rsi+rbx*2],bp
   140002b9f:	jmp    0x140002bb4
   140002ba1:	mov    WORD PTR [rsi+rbx*2],bp
   140002ba5:	mov    edi,0x8007007a
   140002baa:	jmp    0x140002bb4
   140002bac:	test   rdx,rdx
   140002baf:	je     0x140002bb4
   140002bb1:	mov    WORD PTR [rsi],bp
   140002bb4:	mov    eax,edi
   140002bb6:	add    rsp,0x28
   140002bba:	pop    rdi
   140002bbb:	pop    rsi
   140002bbc:	pop    rbp
   140002bbd:	pop    rbx
   140002bbe:	ret    
   140002bbf:	int3   
   140002bc0:	int3   
   140002bc1:	int3   
   140002bc2:	int3   
   140002bc3:	int3   
   140002bc4:	int3   
   140002bc5:	int3   
   140002bc6:	int3   
   140002bc7:	int3   
   140002bc8:	int3   
   140002bc9:	int3   
   140002bca:	int3   
   140002bcb:	int3   
   140002bcc:	int3   
   140002bcd:	int3   
   140002bce:	int3   
   140002bcf:	int3   
   140002bd0:	mov    QWORD PTR [rsp+0x8],rbx
   140002bd5:	push   rdi
   140002bd6:	sub    rsp,0x50
   140002bda:	mov    rax,QWORD PTR [rip+0x6a77]        # 0x140009658
   140002be1:	xor    ebx,ebx
   140002be3:	mov    rdi,rcx
   140002be6:	test   rax,rax
   140002be9:	jne    0x140002c3a
   140002beb:	lea    r8d,[rbx+0x30]
   140002bef:	lea    rdx,[rsp+0x20]
   140002bf4:	lea    rcx,[rip+0xffffffffffffffd5]        # 0x140002bd0
   140002bfb:	call   QWORD PTR [rip+0x451f]        # 0x140007120
   140002c01:	test   rax,rax
   140002c04:	jne    0x140002c2e
   140002c06:	call   QWORD PTR [rip+0x453c]        # 0x140007148
   140002c0c:	test   eax,eax
   140002c0e:	jne    0x140002c17
   140002c10:	mov    ebx,0x80004005
   140002c15:	jmp    0x140002c25
   140002c17:	movzx  ebx,ax
   140002c1a:	or     ebx,0x80070000
   140002c20:	test   eax,eax
   140002c22:	cmovle ebx,eax
   140002c25:	mov    ecx,ebx
   140002c27:	call   0x140002590
   140002c2c:	jmp    0x140002c3d
   140002c2e:	mov    rax,QWORD PTR [rsp+0x28]
   140002c33:	mov    QWORD PTR [rip+0x6a1e],rax        # 0x140009658
   140002c3a:	mov    QWORD PTR [rdi],rax
   140002c3d:	mov    ecx,ebx
   140002c3f:	call   0x1400024a8
   140002c44:	mov    eax,ebx
   140002c46:	mov    rbx,QWORD PTR [rsp+0x60]
   140002c4b:	add    rsp,0x50
   140002c4f:	pop    rdi
   140002c50:	ret    
   140002c51:	int3   
   140002c52:	int3   
   140002c53:	int3   
   140002c54:	int3   
   140002c55:	int3   
   140002c56:	int3   
   140002c57:	int3   
   140002c58:	mov    QWORD PTR [rsp+0x10],rbx
   140002c5d:	mov    QWORD PTR [rsp+0x18],rbp
   140002c62:	push   rsi
   140002c63:	push   rdi
   140002c64:	push   r12
   140002c66:	push   r14
   140002c68:	push   r15
   140002c6a:	sub    rsp,0x20
   140002c6e:	xor    r15d,r15d
   140002c71:	mov    esi,edx
   140002c73:	mov    r14,r8
   140002c76:	mov    rbp,rcx
   140002c79:	mov    ebx,r15d
   140002c7c:	test   rcx,rcx
   140002c7f:	je     0x140002d55
   140002c85:	lea    edi,[rsi+0x1]
   140002c88:	mov    r12d,0x80070216
   140002c8e:	cmp    edi,esi
   140002c90:	jae    0x140002ca1
   140002c92:	mov    ecx,r12d
   140002c95:	mov    ebx,r12d
   140002c98:	call   0x140002590
   140002c9d:	mov    edi,DWORD PTR [rsp+0x50]
   140002ca1:	mov    ecx,ebx
   140002ca3:	call   0x1400024a8
   140002ca8:	test   ebx,ebx
   140002caa:	jns    0x140002cb8
   140002cac:	mov    ecx,ebx
   140002cae:	call   0x140002590
   140002cb3:	jmp    0x140002d58
   140002cb8:	mov    ebx,r15d
   140002cbb:	test   edi,edi
   140002cbd:	je     0x140002cdb
   140002cbf:	lea    ecx,[rdi+rdi*1]
   140002cc2:	mov    eax,ecx
   140002cc4:	shr    eax,1
   140002cc6:	cmp    eax,edi
   140002cc8:	je     0x140002cd7
   140002cca:	mov    ecx,r12d
   140002ccd:	mov    ebx,r12d
   140002cd0:	call   0x140002590
   140002cd5:	jmp    0x140002cde
   140002cd7:	mov    edi,ecx
   140002cd9:	jmp    0x140002cde
   140002cdb:	mov    edi,r15d
   140002cde:	mov    ecx,ebx
   140002ce0:	call   0x1400024a8
   140002ce5:	test   ebx,ebx
   140002ce7:	js     0x140002cac
   140002ce9:	lea    eax,[rdi+0x4]
   140002cec:	cmp    eax,edi
   140002cee:	jb     0x140002cf7
   140002cf0:	mov    edi,eax
   140002cf2:	mov    ebx,r15d
   140002cf5:	jmp    0x140002d02
   140002cf7:	mov    ecx,r12d
   140002cfa:	mov    ebx,r12d
   140002cfd:	call   0x140002590
   140002d02:	mov    ecx,ebx
   140002d04:	call   0x1400024a8
   140002d09:	test   ebx,ebx
   140002d0b:	js     0x140002cac
   140002d0d:	call   QWORD PTR [rip+0x4445]        # 0x140007158
   140002d13:	mov    r8d,edi
   140002d16:	xor    edx,edx
   140002d18:	mov    rcx,rax
   140002d1b:	call   QWORD PTR [rip+0x444f]        # 0x140007170
   140002d21:	test   rax,rax
   140002d24:	jne    0x140002d30
   140002d26:	mov    ebx,0x8007000e
   140002d2b:	jmp    0x140002cac
   140002d30:	lea    rdi,[rax+0x4]
   140002d34:	mov    DWORD PTR [rax],esi
   140002d36:	lea    rbx,[rsi+rsi*1]
   140002d3a:	mov    rcx,rdi
   140002d3d:	mov    r8,rbx
   140002d40:	mov    rdx,rbp
   140002d43:	call   0x140005586
   140002d48:	mov    WORD PTR [rbx+rdi*1],r15w
   140002d4d:	mov    ebx,r15d
   140002d50:	mov    QWORD PTR [r14],rdi
   140002d53:	jmp    0x140002d58
   140002d55:	mov    QWORD PTR [r8],r15
   140002d58:	mov    ecx,ebx
   140002d5a:	call   0x1400024a8
   140002d5f:	mov    rbp,QWORD PTR [rsp+0x60]
   140002d64:	mov    eax,ebx
   140002d66:	mov    rbx,QWORD PTR [rsp+0x58]
   140002d6b:	add    rsp,0x20
   140002d6f:	pop    r15
   140002d71:	pop    r14
   140002d73:	pop    r12
   140002d75:	pop    rdi
   140002d76:	pop    rsi
   140002d77:	ret    
   140002d78:	int3   
   140002d79:	int3   
   140002d7a:	int3   
   140002d7b:	int3   
   140002d7c:	int3   
   140002d7d:	int3   
   140002d7e:	int3   
   140002d7f:	int3   
   140002d80:	mov    QWORD PTR [rsp+0x8],rbx
   140002d85:	mov    QWORD PTR [rsp+0x10],rsi
   140002d8a:	push   rdi
   140002d8b:	sub    rsp,0x20
   140002d8f:	mov    edi,ecx
   140002d91:	mov    rsi,rdx
   140002d94:	lea    rcx,[rsp+0x40]
   140002d99:	call   0x140002bd0
   140002d9e:	mov    ebx,eax
   140002da0:	test   eax,eax
   140002da2:	jns    0x140002dab
   140002da4:	mov    ecx,eax
   140002da6:	jmp    0x140002e55
   140002dab:	mov    rcx,QWORD PTR [rsp+0x40]
   140002db0:	xor    r9d,r9d
   140002db3:	movzx  r8d,di
   140002db7:	shr    r8d,0x4
   140002dbb:	inc    r8d
   140002dbe:	lea    edx,[r9+0x6]
   140002dc2:	call   QWORD PTR [rip+0x4360]        # 0x140007128
   140002dc8:	test   rax,rax
   140002dcb:	jne    0x140002df0
   140002dcd:	call   QWORD PTR [rip+0x4375]        # 0x140007148
   140002dd3:	test   eax,eax
   140002dd5:	jne    0x140002dde
   140002dd7:	mov    ebx,0x80004005
   140002ddc:	jmp    0x140002dec
   140002dde:	movzx  ebx,ax
   140002de1:	or     ebx,0x80070000
   140002de7:	test   eax,eax
   140002de9:	cmovle ebx,eax
   140002dec:	mov    ecx,ebx
   140002dee:	jmp    0x140002e43
   140002df0:	mov    rcx,QWORD PTR [rsp+0x40]
   140002df5:	mov    rdx,rax
   140002df8:	call   QWORD PTR [rip+0x4332]        # 0x140007130
   140002dfe:	test   rax,rax
   140002e01:	je     0x140002dcd
   140002e03:	mov    rcx,rax
   140002e06:	call   QWORD PTR [rip+0x4334]        # 0x140007140
   140002e0c:	mov    rcx,rax
   140002e0f:	test   rax,rax
   140002e12:	je     0x140002dcd
   140002e14:	movzx  edx,WORD PTR [rax]
   140002e17:	add    rcx,0x2
   140002e1b:	and    edi,0xf
   140002e1e:	je     0x140002e33
   140002e20:	movsxd rax,edx
   140002e23:	lea    rcx,[rcx+rax*2]
   140002e27:	movzx  edx,WORD PTR [rcx]
   140002e2a:	add    rcx,0x2
   140002e2e:	add    edi,0xffffffff
   140002e31:	jne    0x140002e20
   140002e33:	mov    r8,rsi
   140002e36:	call   0x140002c58
   140002e3b:	mov    ebx,eax
   140002e3d:	test   eax,eax
   140002e3f:	jns    0x140002e48
   140002e41:	mov    ecx,eax
   140002e43:	call   0x140002590
   140002e48:	mov    ecx,ebx
   140002e4a:	call   0x1400024a8
   140002e4f:	test   ebx,ebx
   140002e51:	jns    0x140002e5a
   140002e53:	mov    ecx,ebx
   140002e55:	call   0x140002590
   140002e5a:	mov    ecx,ebx
   140002e5c:	call   0x1400024a8
   140002e61:	mov    rsi,QWORD PTR [rsp+0x38]
   140002e66:	mov    eax,ebx
   140002e68:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e6d:	add    rsp,0x20
   140002e71:	pop    rdi
   140002e72:	ret    
   140002e73:	int3   
   140002e74:	int3   
   140002e75:	int3   
   140002e76:	int3   
   140002e77:	int3   
   140002e78:	int3   
   140002e79:	int3   
   140002e7a:	int3   
   140002e7b:	int3   
   140002e7c:	int3   
   140002e7d:	int3   
   140002e7e:	int3   
   140002e7f:	int3   
   140002e80:	mov    QWORD PTR [rsp+0x8],rbx
   140002e85:	mov    QWORD PTR [rsp+0x10],rbp
   140002e8a:	mov    QWORD PTR [rsp+0x18],rsi
   140002e8f:	push   rdi
   140002e90:	sub    rsp,0x20
   140002e94:	mov    rdi,r8
   140002e97:	mov    rbp,rdx
   140002e9a:	mov    rsi,rcx
   140002e9d:	test   rdx,rdx
   140002ea0:	jne    0x140002eab
   140002ea2:	mov    ecx,0x80070057
   140002ea7:	mov    ebx,ecx
   140002ea9:	jmp    0x140002edf
   140002eab:	test   r8,r8
   140002eae:	je     0x140002ea2
   140002eb0:	mov    rbx,QWORD PTR [rcx+0x10]
   140002eb4:	test   rbx,rbx
   140002eb7:	jne    0x140002ec2
   140002eb9:	mov    ebx,0x8000ffff
   140002ebe:	mov    ecx,ebx
   140002ec0:	jmp    0x140002edf
   140002ec2:	mov    rcx,rbx
   140002ec5:	call   QWORD PTR [rip+0x441d]        # 0x1400072e8
   140002ecb:	mov    r8,QWORD PTR [rsi+0x18]
   140002ecf:	mov    rdx,rdi
   140002ed2:	mov    rcx,rbp
   140002ed5:	call   rbx
   140002ed7:	mov    ebx,eax
   140002ed9:	test   eax,eax
   140002edb:	jns    0x140002ee4
   140002edd:	mov    ecx,eax
   140002edf:	call   0x140002590
   140002ee4:	mov    ecx,ebx
   140002ee6:	call   0x1400024a8
   140002eeb:	mov    rbp,QWORD PTR [rsp+0x38]
   140002ef0:	mov    eax,ebx
   140002ef2:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ef7:	mov    rsi,QWORD PTR [rsp+0x40]
   140002efc:	add    rsp,0x20
   140002f00:	pop    rdi
   140002f01:	ret    
   140002f02:	int3   
   140002f03:	int3   
   140002f04:	int3   
   140002f05:	int3   
   140002f06:	int3   
   140002f07:	int3   
   140002f08:	int3   
   140002f09:	int3   
   140002f0a:	int3   
   140002f0b:	int3   
   140002f0c:	int3   
   140002f0d:	int3   
   140002f0e:	int3   
   140002f0f:	int3   
   140002f10:	rex push rbx
   140002f12:	sub    rsp,0x30
   140002f16:	test   rdx,rdx
   140002f19:	jne    0x140002f24
   140002f1b:	mov    ebx,0x80070057
   140002f20:	mov    ecx,ebx
   140002f22:	jmp    0x140002f3d
   140002f24:	mov    QWORD PTR [rsp+0x28],rdx
   140002f29:	mov    edx,DWORD PTR [rcx+0x2c]
   140002f2c:	mov    rcx,QWORD PTR [rcx+0x10]
   140002f30:	call   0x140004708
   140002f35:	mov    ebx,eax
   140002f37:	test   eax,eax
   140002f39:	jns    0x140002f42
   140002f3b:	mov    ecx,eax
   140002f3d:	call   0x140002590
   140002f42:	mov    ecx,ebx
   140002f44:	call   0x1400024a8
   140002f49:	mov    eax,ebx
   140002f4b:	add    rsp,0x30
   140002f4f:	pop    rbx
   140002f50:	ret    
   140002f51:	int3   
   140002f52:	int3   
   140002f53:	int3   
   140002f54:	int3   
   140002f55:	int3   
   140002f56:	int3   
   140002f57:	int3   
   140002f58:	int3   
   140002f59:	int3   
   140002f5a:	int3   
   140002f5b:	int3   
   140002f5c:	int3   
   140002f5d:	int3   
   140002f5e:	int3   
   140002f5f:	int3   
   140002f60:	rex push rbx
   140002f62:	sub    rsp,0x20
   140002f66:	xor    ebx,ebx
   140002f68:	test   rdx,rdx
   140002f6b:	jne    0x140002f7b
   140002f6d:	mov    ecx,0x80070057
   140002f72:	mov    ebx,ecx
   140002f74:	call   0x140002590
   140002f79:	jmp    0x140002f80
   140002f7b:	mov    ecx,DWORD PTR [rcx+0x28]
   140002f7e:	mov    DWORD PTR [rdx],ecx
   140002f80:	mov    ecx,ebx
   140002f82:	call   0x1400024a8
   140002f87:	mov    eax,ebx
   140002f89:	add    rsp,0x20
   140002f8d:	pop    rbx
   140002f8e:	ret    
   140002f8f:	int3   
   140002f90:	int3   
   140002f91:	int3   
   140002f92:	int3   
   140002f93:	int3   
   140002f94:	int3   
   140002f95:	int3   
   140002f96:	int3   
   140002f97:	int3   
   140002f98:	int3   
   140002f99:	int3   
   140002f9a:	int3   
   140002f9b:	int3   
   140002f9c:	int3   
   140002f9d:	int3   
   140002f9e:	int3   
   140002f9f:	int3   
   140002fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140002fa5:	mov    QWORD PTR [rsp+0x18],rsi
   140002faa:	push   rdi
   140002fab:	push   r14
   140002fad:	push   r15
   140002faf:	sub    rsp,0x20
   140002fb3:	xor    esi,esi
   140002fb5:	mov    r14,rdx
   140002fb8:	test   rdx,rdx
   140002fbb:	jne    0x140002fcb
   140002fbd:	mov    ecx,0x80070057
   140002fc2:	mov    esi,ecx
   140002fc4:	call   0x140002590
   140002fc9:	jmp    0x140003019
   140002fcb:	mov    QWORD PTR [rdx],rsi
   140002fce:	lea    r8,[rcx+0x20]
   140002fd2:	lea    rdx,[rcx+0x18]
   140002fd6:	lea    rcx,[rsp+0x48]
   140002fdb:	call   0x14000303c
   140002fe0:	mov    rbx,QWORD PTR [rax]
   140002fe3:	mov    QWORD PTR [rax],rsi
   140002fe6:	mov    r15,QWORD PTR [rsp+0x48]
   140002feb:	test   r15,r15
   140002fee:	je     0x14000300a
   140002ff0:	mov    QWORD PTR [rsp+0x48],rsi
   140002ff5:	mov    rax,QWORD PTR [r15]
   140002ff8:	mov    rdi,QWORD PTR [rax+0x10]
   140002ffc:	mov    rcx,rdi
   140002fff:	call   QWORD PTR [rip+0x42e3]        # 0x1400072e8
   140003005:	mov    rcx,r15
   140003008:	call   rdi
   14000300a:	test   rbx,rbx
   14000300d:	jne    0x140003016
   14000300f:	mov    ecx,0x8007000e
   140003014:	jmp    0x140002fc2
   140003016:	mov    QWORD PTR [r14],rbx
   140003019:	mov    ecx,esi
   14000301b:	call   0x1400024a8
   140003020:	mov    rbx,QWORD PTR [rsp+0x40]
   140003025:	mov    eax,esi
   140003027:	mov    rsi,QWORD PTR [rsp+0x50]
   14000302c:	add    rsp,0x20
   140003030:	pop    r15
   140003032:	pop    r14
   140003034:	pop    rdi
   140003035:	ret    
   140003036:	int3   
   140003037:	int3   
   140003038:	int3   
   140003039:	int3   
   14000303a:	int3   
   14000303b:	int3   
   14000303c:	mov    QWORD PTR [rsp+0x8],rbx
   140003041:	mov    QWORD PTR [rsp+0x10],rbp
   140003046:	mov    QWORD PTR [rsp+0x18],rsi
   14000304b:	push   rdi
   14000304c:	push   r14
   14000304e:	push   r15
   140003050:	sub    rsp,0x20
   140003054:	and    QWORD PTR [rcx],0x0
   140003058:	mov    r15,rdx
   14000305b:	mov    rsi,rcx
   14000305e:	lea    rdx,[rip+0x447b]        # 0x1400074e0
   140003065:	mov    ecx,0x20
   14000306a:	mov    rbp,r8
   14000306d:	call   0x140004fcc
   140003072:	mov    rbx,rax
   140003075:	test   rax,rax
   140003078:	je     0x1400030e5
   14000307a:	mov    rbp,QWORD PTR [rbp+0x0]
   14000307e:	mov    r15,QWORD PTR [r15]
   140003081:	mov    r14,QWORD PTR [rip+0x65c0]        # 0x140009648
   140003088:	mov    DWORD PTR [rax+0xc],0x1
   14000308f:	lea    rax,[rip+0x4512]        # 0x1400075a8
   140003096:	mov    QWORD PTR [rbx],rax
   140003099:	test   r14,r14
   14000309c:	je     0x1400030b3
   14000309e:	mov    rax,QWORD PTR [r14]
   1400030a1:	mov    rdi,QWORD PTR [rax+0x8]
   1400030a5:	mov    rcx,rdi
   1400030a8:	call   QWORD PTR [rip+0x423a]        # 0x1400072e8
   1400030ae:	mov    rcx,r14
   1400030b1:	call   rdi
   1400030b3:	lea    rax,[rip+0x4516]        # 0x1400075d0
   1400030ba:	mov    QWORD PTR [rbx+0x10],r15
   1400030be:	mov    QWORD PTR [rbx],rax
   1400030c1:	mov    QWORD PTR [rbx+0x18],rbp
   1400030c5:	mov    r14,QWORD PTR [rsi]
   1400030c8:	test   r14,r14
   1400030cb:	je     0x1400030e2
   1400030cd:	mov    rax,QWORD PTR [r14]
   1400030d0:	mov    rdi,QWORD PTR [rax+0x10]
   1400030d4:	mov    rcx,rdi
   1400030d7:	call   QWORD PTR [rip+0x420b]        # 0x1400072e8
   1400030dd:	mov    rcx,r14
   1400030e0:	call   rdi
   1400030e2:	mov    QWORD PTR [rsi],rbx
   1400030e5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400030ea:	mov    rax,rsi
   1400030ed:	mov    rsi,QWORD PTR [rsp+0x50]
   1400030f2:	mov    rbp,QWORD PTR [rsp+0x48]
   1400030f7:	add    rsp,0x20
   1400030fb:	pop    r15
   1400030fd:	pop    r14
   1400030ff:	pop    rdi
   140003100:	ret    
   140003101:	int3   
   140003102:	int3   
   140003103:	int3   
   140003104:	int3   
   140003105:	int3   
   140003106:	int3   
   140003107:	int3   
   140003108:	int3   
   140003109:	int3   
   14000310a:	int3   
   14000310b:	int3   
   14000310c:	int3   
   14000310d:	int3   
   14000310e:	int3   
   14000310f:	int3   
   140003110:	mov    QWORD PTR [rsp+0x8],rbx
   140003115:	mov    QWORD PTR [rsp+0x10],rsi
   14000311a:	push   rdi
   14000311b:	sub    rsp,0x20
   14000311f:	xor    edi,edi
   140003121:	mov    rsi,rcx
   140003124:	mov    QWORD PTR [r8],rdi
   140003127:	cmp    DWORD PTR [rdx],edi
   140003129:	jne    0x14000314c
   14000312b:	mov    eax,DWORD PTR [rip+0x462b]        # 0x14000775c
   140003131:	cmp    DWORD PTR [rdx+0x4],eax
   140003134:	jne    0x14000314c
   140003136:	mov    eax,DWORD PTR [rip+0x4624]        # 0x140007760
   14000313c:	cmp    DWORD PTR [rdx+0x8],eax
   14000313f:	jne    0x14000314c
   140003141:	mov    eax,DWORD PTR [rip+0x461d]        # 0x140007764
   140003147:	cmp    DWORD PTR [rdx+0xc],eax
   14000314a:	je     0x140003175
   14000314c:	cmp    DWORD PTR [rdx],0x4da31a12
   140003152:	jne    0x14000318f
   140003154:	mov    eax,DWORD PTR [rip+0x4662]        # 0x1400077bc
   14000315a:	cmp    DWORD PTR [rdx+0x4],eax
   14000315d:	jne    0x14000318f
   14000315f:	mov    eax,DWORD PTR [rip+0x465b]        # 0x1400077c0
   140003165:	cmp    DWORD PTR [rdx+0x8],eax
   140003168:	jne    0x14000318f
   14000316a:	mov    eax,DWORD PTR [rip+0x4654]        # 0x1400077c4
   140003170:	cmp    DWORD PTR [rdx+0xc],eax
   140003173:	jne    0x14000318f
   140003175:	mov    QWORD PTR [r8],rcx
   140003178:	mov    rax,QWORD PTR [rcx]
   14000317b:	mov    rbx,QWORD PTR [rax+0x8]
   14000317f:	mov    rcx,rbx
   140003182:	call   QWORD PTR [rip+0x4160]        # 0x1400072e8
   140003188:	mov    rcx,rsi
   14000318b:	call   rbx
   14000318d:	jmp    0x140003194
   14000318f:	mov    edi,0x80004002
   140003194:	mov    rbx,QWORD PTR [rsp+0x30]
   140003199:	mov    eax,edi
   14000319b:	mov    rsi,QWORD PTR [rsp+0x38]
   1400031a0:	add    rsp,0x20
   1400031a4:	pop    rdi
   1400031a5:	ret    
   1400031a6:	int3   
   1400031a7:	int3   
   1400031a8:	int3   
   1400031a9:	int3   
   1400031aa:	int3   
   1400031ab:	int3   
   1400031ac:	mov    QWORD PTR [rsp+0x10],rbx
   1400031b1:	mov    QWORD PTR [rsp+0x18],rsi
   1400031b6:	push   rdi
   1400031b7:	sub    rsp,0x30
   1400031bb:	xor    ebx,ebx
   1400031bd:	mov    rsi,rcx
   1400031c0:	mov    QWORD PTR [rsp+0x40],rbx
   1400031c5:	test   rcx,rcx
   1400031c8:	jne    0x1400031d3
   1400031ca:	mov    edi,0x80070057
   1400031cf:	mov    ecx,edi
   1400031d1:	jmp    0x140003246
   1400031d3:	mov    rcx,QWORD PTR [rip+0x648e]        # 0x140009668
   1400031da:	lea    rax,[rsp+0x40]
   1400031df:	mov    QWORD PTR [rsp+0x28],rax
   1400031e4:	call   0x140004708
   1400031e9:	mov    edi,eax
   1400031eb:	test   eax,eax
   1400031ed:	jns    0x1400031fd
   1400031ef:	mov    ecx,eax
   1400031f1:	call   0x140002590
   1400031f6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400031fb:	jmp    0x14000324b
   1400031fd:	mov    rax,QWORD PTR [rsi]
   140003200:	mov    rbx,QWORD PTR [rsp+0x40]
   140003205:	mov    rdi,QWORD PTR [rax+0x20]
   140003209:	mov    rcx,rdi
   14000320c:	call   QWORD PTR [rip+0x40d6]        # 0x1400072e8
   140003212:	mov    rdx,rbx
   140003215:	mov    rcx,rsi
   140003218:	call   rdi
   14000321a:	mov    edi,eax
   14000321c:	test   eax,eax
   14000321e:	js     0x140003244
   140003220:	mov    rax,QWORD PTR [rsi]
   140003223:	mov    rdi,QWORD PTR [rax+0x100]
   14000322a:	mov    rcx,rdi
   14000322d:	call   QWORD PTR [rip+0x40b5]        # 0x1400072e8
   140003233:	xor    r8d,r8d
   140003236:	mov    rdx,rbx
   140003239:	mov    rcx,rsi
   14000323c:	call   rdi
   14000323e:	mov    edi,eax
   140003240:	test   eax,eax
   140003242:	jns    0x14000324b
   140003244:	mov    ecx,eax
   140003246:	call   0x140002590
   14000324b:	mov    ecx,edi
   14000324d:	call   0x1400024a8
   140003252:	test   rbx,rbx
   140003255:	je     0x140003260
   140003257:	mov    rcx,rbx
   14000325a:	call   QWORD PTR [rip+0x4068]        # 0x1400072c8
   140003260:	mov    rbx,QWORD PTR [rsp+0x48]
   140003265:	mov    eax,edi
   140003267:	mov    rsi,QWORD PTR [rsp+0x50]
   14000326c:	add    rsp,0x30
   140003270:	pop    rdi
   140003271:	ret    
   140003272:	int3   
   140003273:	int3   
   140003274:	int3   
   140003275:	int3   
   140003276:	int3   
   140003277:	int3   
   140003278:	mov    rax,rsp
   14000327b:	mov    QWORD PTR [rax+0x10],rbx
   14000327f:	mov    QWORD PTR [rax+0x18],rbp
   140003283:	mov    QWORD PTR [rax+0x20],rsi
   140003287:	push   rdi
   140003288:	sub    rsp,0x30
   14000328c:	xor    ebx,ebx
   14000328e:	mov    rsi,rdx
   140003291:	mov    QWORD PTR [rax+0x8],rbx
   140003295:	mov    rbp,rcx
   140003298:	test   rcx,rcx
   14000329b:	jne    0x1400032a9
   14000329d:	mov    ecx,0x80070057
   1400032a2:	mov    edi,ecx
   1400032a4:	jmp    0x140003343
   1400032a9:	test   rdx,rdx
   1400032ac:	je     0x14000329d
   1400032ae:	mov    rcx,QWORD PTR [rip+0x63b3]        # 0x140009668
   1400032b5:	lea    rax,[rsp+0x40]
   1400032ba:	mov    edx,r8d
   1400032bd:	mov    QWORD PTR [rsp+0x28],rax
   1400032c2:	call   0x140004708
   1400032c7:	mov    edi,eax
   1400032c9:	test   eax,eax
   1400032cb:	jns    0x1400032db
   1400032cd:	mov    ecx,eax
   1400032cf:	call   0x140002590
   1400032d4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400032d9:	jmp    0x140003348
   1400032db:	mov    rbx,QWORD PTR [rsp+0x40]
   1400032e0:	test   rbx,rbx
   1400032e3:	jne    0x1400032ee
   1400032e5:	mov    ecx,0x80070057
   1400032ea:	mov    edi,ecx
   1400032ec:	jmp    0x140003325
   1400032ee:	mov    rcx,rsi
   1400032f1:	call   QWORD PTR [rip+0x3da1]        # 0x140007098
   1400032f7:	movzx  edx,ax
   1400032fa:	mov    rcx,rbp
   1400032fd:	call   QWORD PTR [rip+0x3d9d]        # 0x1400070a0
   140003303:	test   rax,rax
   140003306:	jne    0x140003311
   140003308:	mov    edi,0x80070490
   14000330d:	mov    ecx,edi
   14000330f:	jmp    0x140003325
   140003311:	mov    rdx,rbx
   140003314:	mov    rcx,rax
   140003317:	call   QWORD PTR [rip+0x3d4b]        # 0x140007068
   14000331d:	mov    edi,eax
   14000331f:	test   eax,eax
   140003321:	jns    0x14000332a
   140003323:	mov    ecx,eax
   140003325:	call   0x140002590
   14000332a:	mov    edx,0x1f
   14000332f:	mov    ecx,edi
   140003331:	call   0x140003404
   140003336:	mov    ecx,edi
   140003338:	call   0x1400024a8
   14000333d:	test   edi,edi
   14000333f:	jns    0x140003348
   140003341:	mov    ecx,edi
   140003343:	call   0x140002590
   140003348:	mov    edx,0x1f
   14000334d:	mov    ecx,edi
   14000334f:	call   0x140003404
   140003354:	mov    ecx,edi
   140003356:	call   0x1400024a8
   14000335b:	test   rbx,rbx
   14000335e:	je     0x140003369
   140003360:	mov    rcx,rbx
   140003363:	call   QWORD PTR [rip+0x3f5f]        # 0x1400072c8
   140003369:	mov    rbx,QWORD PTR [rsp+0x48]
   14000336e:	mov    eax,edi
   140003370:	mov    rbp,QWORD PTR [rsp+0x50]
   140003375:	mov    rsi,QWORD PTR [rsp+0x58]
   14000337a:	add    rsp,0x30
   14000337e:	pop    rdi
   14000337f:	ret    
   140003380:	int3   
   140003381:	int3   
   140003382:	int3   
   140003383:	int3   
   140003384:	int3   
   140003385:	int3   
   140003386:	int3   
   140003387:	int3   
   140003388:	rex push rbx
   14000338a:	sub    rsp,0x20
   14000338e:	mov    rbx,rcx
   140003391:	test   rcx,rcx
   140003394:	jne    0x14000339f
   140003396:	mov    ecx,0x80070057
   14000339b:	mov    ebx,ecx
   14000339d:	jmp    0x1400033dd
   14000339f:	test   rdx,rdx
   1400033a2:	je     0x140003396
   1400033a4:	mov    rcx,rdx
   1400033a7:	call   QWORD PTR [rip+0x3ceb]        # 0x140007098
   1400033ad:	movzx  edx,ax
   1400033b0:	mov    rcx,rbx
   1400033b3:	call   QWORD PTR [rip+0x3ce7]        # 0x1400070a0
   1400033b9:	test   rax,rax
   1400033bc:	jne    0x1400033c7
   1400033be:	mov    ebx,0x80070490
   1400033c3:	mov    ecx,ebx
   1400033c5:	jmp    0x1400033dd
   1400033c7:	mov    edx,0xfffffffd
   1400033cc:	mov    rcx,rax
   1400033cf:	call   QWORD PTR [rip+0x3c8b]        # 0x140007060
   1400033d5:	mov    ebx,eax
   1400033d7:	test   eax,eax
   1400033d9:	jns    0x1400033e2
   1400033db:	mov    ecx,eax
   1400033dd:	call   0x140002590
   1400033e2:	mov    edx,0x1c
   1400033e7:	mov    ecx,ebx
   1400033e9:	call   0x140003404
   1400033ee:	mov    ecx,ebx
   1400033f0:	call   0x1400024a8
   1400033f5:	mov    eax,ebx
   1400033f7:	add    rsp,0x20
   1400033fb:	pop    rbx
   1400033fc:	ret    
   1400033fd:	int3   
   1400033fe:	int3   
   1400033ff:	int3   
   140003400:	int3   
   140003401:	int3   
   140003402:	int3   
   140003403:	int3   
   140003404:	test   ecx,ecx
   140003406:	jns    0x140003482
   140003408:	mov    QWORD PTR [rsp+0x8],rbx
   14000340d:	push   rdi
   14000340e:	sub    rsp,0x20
   140003412:	and    QWORD PTR [rsp+0x40],0x0
   140003418:	mov    eax,edx
   14000341a:	mov    edi,ecx
   14000341c:	lea    rdx,[rsp+0x40]
   140003421:	mov    ecx,eax
   140003423:	call   0x140002d80
   140003428:	mov    rbx,QWORD PTR [rsp+0x40]
   14000342d:	lea    rdx,[rip+0x45fc]        # 0x140007a30
   140003434:	mov    r8,rbx
   140003437:	lea    rcx,[rsp+0x40]
   14000343c:	mov    r9d,edi
   14000343f:	call   0x14000479c
   140003444:	test   BYTE PTR [rip+0x61f5],0x2        # 0x140009640
   14000344b:	je     0x140003457
   14000344d:	mov    r8,QWORD PTR [rsp+0x40]
   140003452:	call   0x1400047dc
   140003457:	test   rbx,rbx
   14000345a:	je     0x140003478
   14000345c:	call   QWORD PTR [rip+0x3cf6]        # 0x140007158
   140003462:	lea    r8,[rbx-0x4]
   140003466:	xor    edx,edx
   140003468:	mov    rcx,rax
   14000346b:	call   QWORD PTR [rip+0x3cf7]        # 0x140007168
   140003471:	xor    ecx,ecx
   140003473:	call   0x1400024a8
   140003478:	mov    rbx,QWORD PTR [rsp+0x30]
   14000347d:	add    rsp,0x20
   140003481:	pop    rdi
   140003482:	ret    
   140003483:	int3   
   140003484:	int3   
   140003485:	int3   
   140003486:	int3   
   140003487:	int3   
   140003488:	int3   
   140003489:	int3   
   14000348a:	int3   
   14000348b:	int3   
   14000348c:	mov    rax,rsp
   14000348f:	mov    QWORD PTR [rax+0x10],rbx
   140003493:	mov    QWORD PTR [rax+0x8],rcx
   140003497:	push   rdi
   140003498:	sub    rsp,0x90
   14000349f:	xor    edx,edx
   1400034a1:	mov    DWORD PTR [rax-0x78],0x70
   1400034a8:	lea    rcx,[rax-0x74]
   1400034ac:	lea    r8d,[rdx+0x6c]
   1400034b0:	call   0x140005592
   1400034b5:	and    QWORD PTR [rsp+0xa0],0x0
   1400034be:	lea    rdx,[rsp+0xa0]
   1400034c6:	lea    rcx,[rip+0x44e3]        # 0x1400079b0
   1400034cd:	call   0x140002a78
   1400034d2:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400034da:	mov    edi,eax
   1400034dc:	test   eax,eax
   1400034de:	jns    0x1400034e4
   1400034e0:	mov    ecx,eax
   1400034e2:	jmp    0x140003529
   1400034e4:	lea    rcx,[rsp+0x20]
   1400034e9:	mov    QWORD PTR [rsp+0x38],rbx
   1400034ee:	mov    DWORD PTR [rsp+0x50],0x1
   1400034f6:	mov    DWORD PTR [rsp+0x24],0x4000000
   1400034fe:	call   QWORD PTR [rip+0x3c7c]        # 0x140007180
   140003504:	test   eax,eax
   140003506:	jne    0x14000352e
   140003508:	call   QWORD PTR [rip+0x3c3a]        # 0x140007148
   14000350e:	test   eax,eax
   140003510:	jne    0x140003519
   140003512:	mov    edi,0x80004005
   140003517:	jmp    0x140003527
   140003519:	movzx  edi,ax
   14000351c:	or     edi,0x80070000
   140003522:	test   eax,eax
   140003524:	cmovle edi,eax
   140003527:	mov    ecx,edi
   140003529:	call   0x140002590
   14000352e:	mov    edx,0x1d
   140003533:	mov    ecx,edi
   140003535:	call   0x140003404
   14000353a:	mov    ecx,edi
   14000353c:	call   0x1400024a8
   140003541:	test   rbx,rbx
   140003544:	je     0x140003562
   140003546:	call   QWORD PTR [rip+0x3c0c]        # 0x140007158
   14000354c:	lea    r8,[rbx-0x4]
   140003550:	xor    edx,edx
   140003552:	mov    rcx,rax
   140003555:	call   QWORD PTR [rip+0x3c0d]        # 0x140007168
   14000355b:	xor    ecx,ecx
   14000355d:	call   0x1400024a8
   140003562:	mov    eax,edi
   140003564:	mov    rbx,QWORD PTR [rsp+0xa8]
   14000356c:	add    rsp,0x90
   140003573:	pop    rdi
   140003574:	ret    
   140003575:	int3   
   140003576:	int3   
   140003577:	int3   
   140003578:	int3   
   140003579:	int3   
   14000357a:	int3   
   14000357b:	int3   
   14000357c:	rex push rbx
   14000357e:	sub    rsp,0x30
   140003582:	mov    ebx,ecx
   140003584:	xor    ecx,ecx
   140003586:	call   0x1400024a8
   14000358b:	mov    r9d,ebx
   14000358e:	mov    DWORD PTR [rsp+0x20],0x4
   140003596:	call   0x14000378c
   14000359b:	mov    ebx,eax
   14000359d:	test   eax,eax
   14000359f:	jns    0x1400035a8
   1400035a1:	mov    ecx,eax
   1400035a3:	call   0x140002590
   1400035a8:	mov    ecx,ebx
   1400035aa:	call   0x1400024a8
   1400035af:	test   ebx,ebx
   1400035b1:	jns    0x1400035ba
   1400035b3:	mov    ecx,ebx
   1400035b5:	call   0x140002590
   1400035ba:	mov    ecx,ebx
   1400035bc:	call   0x1400024a8
   1400035c1:	mov    eax,ebx
   1400035c3:	add    rsp,0x30
   1400035c7:	pop    rbx
   1400035c8:	ret    
   1400035c9:	int3   
   1400035ca:	int3   
   1400035cb:	int3   
   1400035cc:	int3   
   1400035cd:	int3   
   1400035ce:	int3   
   1400035cf:	int3   
   1400035d0:	mov    rax,rsp
   1400035d3:	mov    QWORD PTR [rax+0x18],rbp
   1400035d7:	mov    QWORD PTR [rax+0x10],rdx
   1400035db:	mov    QWORD PTR [rax+0x8],rcx
   1400035df:	push   rsi
   1400035e0:	push   rdi
   1400035e1:	push   r13
   1400035e3:	sub    rsp,0x30
   1400035e7:	and    QWORD PTR [rax+0x10],0x0
   1400035ec:	lea    r9,[rax+0x10]
   1400035f0:	mov    rbp,r8
   1400035f3:	xor    edi,edi
   1400035f5:	mov    r13,0xffffffff80000002
   1400035fc:	mov    rcx,r13
   1400035ff:	lea    r8d,[rdi+0x1]
   140003603:	call   0x140003894
   140003608:	movzx  ecx,ax
   14000360b:	test   ecx,ecx
   14000360d:	je     0x140003635
   14000360f:	cmp    ecx,0x2
   140003612:	je     0x140003631
   140003614:	test   eax,eax
   140003616:	mov    edi,eax
   140003618:	mov    ecx,0x80004005
   14000361d:	cmovns edi,ecx
   140003620:	test   edi,edi
   140003622:	jns    0x14000362b
   140003624:	mov    ecx,edi
   140003626:	call   0x140002590
   14000362b:	mov    esi,DWORD PTR [rsp+0x58]
   14000362f:	jmp    0x14000363a
   140003631:	xor    esi,esi
   140003633:	jmp    0x14000363a
   140003635:	mov    esi,0x1
   14000363a:	mov    ecx,edi
   14000363c:	call   0x1400024a8
   140003641:	mov    rcx,QWORD PTR [rsp+0x58]
   140003646:	test   rcx,rcx
   140003649:	je     0x140003651
   14000364b:	call   QWORD PTR [rip+0x39b7]        # 0x140007008
   140003651:	test   edi,edi
   140003653:	js     0x140003766
   140003659:	cmp    esi,0x1
   14000365c:	jne    0x14000376d
   140003662:	and    QWORD PTR [rsp+0x68],0x0
   140003668:	lea    r9,[rsp+0x68]
   14000366d:	mov    r8d,esi
   140003670:	mov    rcx,r13
   140003673:	call   0x140003894
   140003678:	mov    edi,eax
   14000367a:	test   eax,eax
   14000367c:	jns    0x140003687
   14000367e:	mov    ecx,eax
   140003680:	call   0x140002590
   140003685:	jmp    0x1400036d5
   140003687:	mov    rcx,QWORD PTR [rsp+0x68]
   14000368c:	lea    rax,[rsp+0x58]
   140003691:	mov    QWORD PTR [rsp+0x28],rax
   140003696:	lea    r9,[rsp+0x50]
   14000369b:	and    QWORD PTR [rsp+0x20],0x0
   1400036a1:	xor    r8d,r8d
   1400036a4:	mov    rdx,rbp
   1400036a7:	call   QWORD PTR [rip+0x397b]        # 0x140007028
   1400036ad:	xor    ecx,ecx
   1400036af:	test   eax,eax
   1400036b1:	je     0x1400036ce
   1400036b3:	cmp    eax,0x2
   1400036b6:	je     0x1400036d3
   1400036b8:	movzx  edi,ax
   1400036bb:	or     edi,0x80070000
   1400036c1:	test   eax,eax
   1400036c3:	cmovle edi,eax
   1400036c6:	test   edi,edi
   1400036c8:	je     0x1400036d3
   1400036ca:	mov    ecx,edi
   1400036cc:	jmp    0x140003680
   1400036ce:	mov    ecx,0x1
   1400036d3:	mov    esi,ecx
   1400036d5:	mov    ecx,edi
   1400036d7:	call   0x1400024a8
   1400036dc:	cmp    QWORD PTR [rsp+0x68],0x0
   1400036e2:	je     0x1400036ef
   1400036e4:	mov    rcx,QWORD PTR [rsp+0x68]
   1400036e9:	call   QWORD PTR [rip+0x3919]        # 0x140007008
   1400036ef:	test   edi,edi
   1400036f1:	js     0x140003766
   1400036f3:	cmp    esi,0x1
   1400036f6:	jne    0x14000376d
   1400036f8:	and    QWORD PTR [rsp+0x58],0x0
   1400036fe:	lea    r9,[rsp+0x58]
   140003703:	lea    r8d,[rsi+0x1]
   140003707:	mov    rcx,r13
   14000370a:	call   0x140003894
   14000370f:	mov    edi,eax
   140003711:	test   eax,eax
   140003713:	jns    0x140003719
   140003715:	mov    ecx,eax
   140003717:	jmp    0x140003743
   140003719:	mov    rcx,QWORD PTR [rsp+0x58]
   14000371e:	mov    rdx,rbp
   140003721:	call   QWORD PTR [rip+0x38f1]        # 0x140007018
   140003727:	test   eax,eax
   140003729:	jne    0x14000372f
   14000372b:	xor    edi,edi
   14000372d:	jmp    0x140003748
   14000372f:	movzx  edi,ax
   140003732:	or     edi,0x80070000
   140003738:	test   eax,eax
   14000373a:	cmovle edi,eax
   14000373d:	test   edi,edi
   14000373f:	je     0x140003748
   140003741:	mov    ecx,edi
   140003743:	call   0x140002590
   140003748:	mov    ecx,edi
   14000374a:	call   0x1400024a8
   14000374f:	cmp    QWORD PTR [rsp+0x58],0x0
   140003755:	je     0x140003762
   140003757:	mov    rcx,QWORD PTR [rsp+0x58]
   14000375c:	call   QWORD PTR [rip+0x38a6]        # 0x140007008
   140003762:	test   edi,edi
   140003764:	jns    0x14000376d
   140003766:	mov    ecx,edi
   140003768:	call   0x140002590
   14000376d:	mov    ecx,edi
   14000376f:	call   0x1400024a8
   140003774:	mov    rbp,QWORD PTR [rsp+0x60]
   140003779:	mov    eax,edi
   14000377b:	add    rsp,0x30
   14000377f:	pop    r13
   140003781:	pop    rdi
   140003782:	pop    rsi
   140003783:	ret    
   140003784:	int3   
   140003785:	int3   
   140003786:	int3   
   140003787:	int3   
   140003788:	int3   
   140003789:	int3   
   14000378a:	int3   
   14000378b:	int3   
   14000378c:	mov    r11,rsp
   14000378f:	mov    QWORD PTR [r11+0x8],rbx
   140003793:	mov    DWORD PTR [r11+0x20],r9d
   140003797:	mov    QWORD PTR [r11+0x18],r8
   14000379b:	push   rdi
   14000379c:	sub    rsp,0x30
   1400037a0:	xor    ebx,ebx
   1400037a2:	lea    rax,[r11+0x18]
   1400037a6:	and    QWORD PTR [r11+0x18],rbx
   1400037aa:	lea    rdx,[rip+0x403f]        # 0x1400077f0
   1400037b1:	xor    r8d,r8d
   1400037b4:	mov    QWORD PTR [r11-0x18],rax
   1400037b8:	mov    rcx,0xffffffff80000002
   1400037bf:	lea    r9d,[rbx+0x2]
   1400037c3:	call   QWORD PTR [rip+0x3857]        # 0x140007020
   1400037c9:	test   eax,eax
   1400037cb:	jne    0x140003835
   1400037cd:	xor    edi,edi
   1400037cf:	mov    rbx,QWORD PTR [rsp+0x50]
   1400037d4:	and    QWORD PTR [rsp+0x50],0x0
   1400037da:	mov    ecx,edi
   1400037dc:	call   0x1400024a8
   1400037e1:	mov    rcx,QWORD PTR [rsp+0x50]
   1400037e6:	test   rcx,rcx
   1400037e9:	je     0x1400037f7
   1400037eb:	call   QWORD PTR [rip+0x3817]        # 0x140007008
   1400037f1:	and    QWORD PTR [rsp+0x50],0x0
   1400037f7:	test   edi,edi
   1400037f9:	js     0x140003862
   1400037fb:	xor    ecx,ecx
   1400037fd:	call   0x1400024a8
   140003802:	mov    eax,DWORD PTR [rsp+0x60]
   140003806:	lea    rdx,[rip+0x40db]        # 0x1400078e8
   14000380d:	mov    DWORD PTR [rsp+0x28],eax
   140003811:	mov    r9d,0x4
   140003817:	lea    rax,[rsp+0x58]
   14000381c:	xor    r8d,r8d
   14000381f:	mov    rcx,rbx
   140003822:	mov    QWORD PTR [rsp+0x20],rax
   140003827:	call   QWORD PTR [rip+0x37e3]        # 0x140007010
   14000382d:	test   eax,eax
   14000382f:	jne    0x140003850
   140003831:	xor    edi,edi
   140003833:	jmp    0x140003869
   140003835:	movzx  edi,ax
   140003838:	or     edi,0x80070000
   14000383e:	test   eax,eax
   140003840:	cmovle edi,eax
   140003843:	test   edi,edi
   140003845:	je     0x1400037cf
   140003847:	mov    ecx,edi
   140003849:	call   0x140002590
   14000384e:	jmp    0x1400037da
   140003850:	movzx  edi,ax
   140003853:	or     edi,0x80070000
   140003859:	test   eax,eax
   14000385b:	cmovle edi,eax
   14000385e:	test   edi,edi
   140003860:	je     0x140003869
   140003862:	mov    ecx,edi
   140003864:	call   0x140002590
   140003869:	mov    ecx,edi
   14000386b:	call   0x1400024a8
   140003870:	test   rbx,rbx
   140003873:	je     0x14000387e
   140003875:	mov    rcx,rbx
   140003878:	call   QWORD PTR [rip+0x378a]        # 0x140007008
   14000387e:	mov    eax,edi
   140003880:	mov    rbx,QWORD PTR [rsp+0x40]
   140003885:	add    rsp,0x30
   140003889:	pop    rdi
   14000388a:	ret    
   14000388b:	int3   
   14000388c:	int3   
   14000388d:	int3   
   14000388e:	int3   
   14000388f:	int3   
   140003890:	int3   
   140003891:	int3   
   140003892:	int3   
   140003893:	int3   
   140003894:	mov    r11,rsp
   140003897:	mov    QWORD PTR [r11+0x8],rbx
   14000389b:	mov    QWORD PTR [r11+0x10],rdx
   14000389f:	push   rdi
   1400038a0:	sub    rsp,0x30
   1400038a4:	and    QWORD PTR [r11+0x10],0x0
   1400038a9:	lea    rax,[r11+0x10]
   1400038ad:	mov    rdi,r9
   1400038b0:	mov    QWORD PTR [r11-0x18],rax
   1400038b4:	mov    r9d,r8d
   1400038b7:	lea    rdx,[rip+0x3f32]        # 0x1400077f0
   1400038be:	xor    r8d,r8d
   1400038c1:	call   QWORD PTR [rip+0x3759]        # 0x140007020
   1400038c7:	test   eax,eax
   1400038c9:	jne    0x1400038ff
   1400038cb:	xor    ebx,ebx
   1400038cd:	mov    rcx,QWORD PTR [rsp+0x48]
   1400038d2:	and    QWORD PTR [rsp+0x48],0x0
   1400038d8:	mov    QWORD PTR [rdi],rcx
   1400038db:	mov    ecx,ebx
   1400038dd:	call   0x1400024a8
   1400038e2:	mov    rcx,QWORD PTR [rsp+0x48]
   1400038e7:	test   rcx,rcx
   1400038ea:	je     0x1400038f2
   1400038ec:	call   QWORD PTR [rip+0x3716]        # 0x140007008
   1400038f2:	mov    eax,ebx
   1400038f4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400038f9:	add    rsp,0x30
   1400038fd:	pop    rdi
   1400038fe:	ret    
   1400038ff:	movzx  ebx,ax
   140003902:	or     ebx,0x80070000
   140003908:	test   eax,eax
   14000390a:	cmovle ebx,eax
   14000390d:	test   ebx,ebx
   14000390f:	je     0x1400038cd
   140003911:	mov    ecx,ebx
   140003913:	call   0x140002590
   140003918:	jmp    0x1400038db
   14000391a:	int3   
   14000391b:	int3   
   14000391c:	int3   
   14000391d:	int3   
   14000391e:	int3   
   14000391f:	int3   
   140003920:	xchg   ax,ax
   140003922:	ret    
   140003923:	int3   
   140003924:	int3   
   140003925:	int3   
   140003926:	int3   
   140003927:	int3   
   140003928:	int3   
   140003929:	int3   
   14000392a:	int3   
   14000392b:	int3   
   14000392c:	mov    QWORD PTR [rsp+0x8],rbx
   140003931:	push   rdi
   140003932:	sub    rsp,0x60
   140003936:	mov    rax,QWORD PTR [rip+0x56cb]        # 0x140009008
   14000393d:	xor    rax,rsp
   140003940:	mov    QWORD PTR [rsp+0x50],rax
   140003945:	mov    rax,QWORD PTR [rip+0x56dc]        # 0x140009028
   14000394c:	lea    r9,[rip+0x56ed]        # 0x140009040
   140003953:	xor    ebx,ebx
   140003955:	lea    r8,[rip+0x56c4]        # 0x140009020
   14000395c:	lea    rdx,[rip+0xffffffffffffd74d]        # 0x1400010b0
   140003963:	lea    rcx,[rsp+0x30]
   140003968:	movups xmm0,XMMWORD PTR [rax-0x10]
   14000396c:	mov    QWORD PTR [rip+0x56d5],rbx        # 0x140009048
   140003973:	mov    QWORD PTR [rip+0x56d6],rbx        # 0x140009050
   14000397a:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140003980:	call   QWORD PTR [rip+0x36b2]        # 0x140007038
   140003986:	test   eax,eax
   140003988:	jne    0x1400039a5
   14000398a:	mov    r8,QWORD PTR [rip+0x5697]        # 0x140009028
   140003991:	lea    edx,[rbx+0x2]
   140003994:	mov    rcx,QWORD PTR [rip+0x56a5]        # 0x140009040
   14000399b:	movzx  r9d,WORD PTR [r8]
   14000399f:	call   QWORD PTR [rip+0x368b]        # 0x140007030
   1400039a5:	mov    edx,DWORD PTR [rip+0x5675]        # 0x140009020
   1400039ab:	movabs rdi,0x400000000000
   1400039b5:	mov    rcx,QWORD PTR [rip+0x567c]        # 0x140009038
   1400039bc:	mov    r8,QWORD PTR [rip+0x566d]        # 0x140009030
   1400039c3:	cmp    edx,0x5
   1400039c6:	jbe    0x140003a00
   1400039c8:	test   rdi,r8
   1400039cb:	je     0x140003a00
   1400039cd:	mov    rax,rcx
   1400039d0:	and    rax,rdi
   1400039d3:	cmp    rax,rcx
   1400039d6:	jne    0x140003a00
   1400039d8:	lea    rdx,[rip+0x5d11]        # 0x1400096f0
   1400039df:	mov    ecx,0x3
   1400039e4:	call   QWORD PTR [rip+0x365e]        # 0x140007048
   1400039ea:	mov    rcx,QWORD PTR [rip+0x5647]        # 0x140009038
   1400039f1:	mov    r8,QWORD PTR [rip+0x5638]        # 0x140009030
   1400039f8:	mov    edx,DWORD PTR [rip+0x5622]        # 0x140009020
   1400039fe:	jmp    0x140003a09
   140003a00:	xor    eax,eax
   140003a02:	mov    QWORD PTR [rip+0x5ce7],rax        # 0x1400096f0
   140003a09:	mov    DWORD PTR [rip+0x5cd5],0x1        # 0x1400096e8
   140003a13:	cmp    edx,0x5
   140003a16:	jbe    0x140003a86
   140003a18:	test   rdi,r8
   140003a1b:	je     0x140003a86
   140003a1d:	mov    rax,rcx
   140003a20:	and    rax,rdi
   140003a23:	cmp    rax,rcx
   140003a26:	jne    0x140003a86
   140003a28:	cmp    BYTE PTR [rip+0x5cbe],bl        # 0x1400096ec
   140003a2e:	je     0x140003a57
   140003a30:	cmp    DWORD PTR [rip+0x5cca],ebx        # 0x140009700
   140003a36:	jne    0x140003a50
   140003a38:	cmp    DWORD PTR [rip+0x5cc6],ebx        # 0x140009704
   140003a3e:	jne    0x140003a50
   140003a40:	cmp    DWORD PTR [rip+0x5cc2],ebx        # 0x140009708
   140003a46:	jne    0x140003a50
   140003a48:	cmp    DWORD PTR [rip+0x5cbe],ebx        # 0x14000970c
   140003a4e:	je     0x140003a57
   140003a50:	lea    rbx,[rip+0x5ca9]        # 0x140009700
   140003a57:	lea    rax,[rsp+0x30]
   140003a5c:	mov    r9,rbx
   140003a5f:	mov    QWORD PTR [rsp+0x28],rax
   140003a64:	lea    r8,[rip+0x5c85]        # 0x1400096f0
   140003a6b:	lea    rdx,[rip+0x416b]        # 0x140007bdd
   140003a72:	mov    DWORD PTR [rsp+0x20],0x2
   140003a7a:	lea    rcx,[rip+0x559f]        # 0x140009020
   140003a81:	call   0x140001008
   140003a86:	mov    rcx,QWORD PTR [rsp+0x50]
   140003a8b:	xor    rcx,rsp
   140003a8e:	call   0x140004ed0
   140003a93:	mov    rbx,QWORD PTR [rsp+0x70]
   140003a98:	add    rsp,0x60
   140003a9c:	pop    rdi
   140003a9d:	ret    
   140003a9e:	int3   
   140003a9f:	int3   
   140003aa0:	int3   
   140003aa1:	int3   
   140003aa2:	int3   
   140003aa3:	int3   
   140003aa4:	sub    rsp,0x68
   140003aa8:	mov    rax,QWORD PTR [rip+0x5559]        # 0x140009008
   140003aaf:	xor    rax,rsp
   140003ab2:	mov    QWORD PTR [rsp+0x50],rax
   140003ab7:	cmp    DWORD PTR [rip+0x5562],0x5        # 0x140009020
   140003abe:	mov    edx,0x2
   140003ac3:	mov    DWORD PTR [rip+0x5c1f],edx        # 0x1400096e8
   140003ac9:	jbe    0x140003b1c
   140003acb:	movabs r8,0x400000000000
   140003ad5:	test   QWORD PTR [rip+0x5554],r8        # 0x140009030
   140003adc:	je     0x140003b1c
   140003ade:	mov    rax,QWORD PTR [rip+0x5553]        # 0x140009038
   140003ae5:	and    rax,r8
   140003ae8:	cmp    rax,QWORD PTR [rip+0x5549]        # 0x140009038
   140003aef:	jne    0x140003b1c
   140003af1:	lea    rax,[rsp+0x30]
   140003af6:	xor    r9d,r9d
   140003af9:	mov    QWORD PTR [rsp+0x28],rax
   140003afe:	lea    r8,[rip+0x5beb]        # 0x1400096f0
   140003b05:	mov    DWORD PTR [rsp+0x20],edx
   140003b09:	lea    rcx,[rip+0x5510]        # 0x140009020
   140003b10:	lea    rdx,[rip+0x40a1]        # 0x140007bb8
   140003b17:	call   0x140001008
   140003b1c:	mov    rcx,QWORD PTR [rip+0x551d]        # 0x140009040
   140003b23:	call   QWORD PTR [rip+0x3517]        # 0x140007040
   140003b29:	and    QWORD PTR [rip+0x550f],0x0        # 0x140009040
   140003b31:	and    DWORD PTR [rip+0x54e8],0x0        # 0x140009020
   140003b38:	mov    rcx,QWORD PTR [rsp+0x50]
   140003b3d:	xor    rcx,rsp
   140003b40:	call   0x140004ed0
   140003b45:	add    rsp,0x68
   140003b49:	ret    
   140003b4a:	int3   
   140003b4b:	int3   
   140003b4c:	int3   
   140003b4d:	int3   
   140003b4e:	int3   
   140003b4f:	int3   
   140003b50:	mov    QWORD PTR [rsp+0x8],rbx
   140003b55:	mov    QWORD PTR [rsp+0x10],rsi
   140003b5a:	push   rdi
   140003b5b:	sub    rsp,0x20
   140003b5f:	call   QWORD PTR [rip+0x35f3]        # 0x140007158
   140003b65:	mov    edi,0x48
   140003b6a:	xor    edx,edx
   140003b6c:	mov    rcx,rax
   140003b6f:	mov    r8d,edi
   140003b72:	call   QWORD PTR [rip+0x35f8]        # 0x140007170
   140003b78:	mov    rbx,rax
   140003b7b:	test   rax,rax
   140003b7e:	je     0x140003bc1
   140003b80:	add    rax,0x41
   140003b84:	je     0x140003b8c
   140003b86:	lea    rcx,[rax-0x41]
   140003b8a:	jmp    0x140003b8e
   140003b8c:	xor    ecx,ecx
   140003b8e:	mov    r8,rdi
   140003b91:	xor    edx,edx
   140003b93:	call   0x140005592
   140003b98:	lea    rcx,[rbx+0x8]
   140003b9c:	test   rcx,rcx
   140003b9f:	je     0x140003ba5
   140003ba1:	add    rcx,0xfffffffffffffff8
   140003ba5:	xor    edx,edx
   140003ba7:	lea    r8d,[rdx+0x40]
   140003bab:	call   0x140005592
   140003bb0:	and    QWORD PTR [rbx+0x38],0x0
   140003bb5:	lea    rax,[rip+0x3a3c]        # 0x1400075f8
   140003bbc:	mov    QWORD PTR [rbx],rax
   140003bbf:	jmp    0x140003bc3
   140003bc1:	xor    ebx,ebx
   140003bc3:	call   0x14000392c
   140003bc8:	xor    ecx,ecx
   140003bca:	call   QWORD PTR [rip+0x3600]        # 0x1400071d0
   140003bd0:	mov    esi,eax
   140003bd2:	test   eax,eax
   140003bd4:	jns    0x140003bdf
   140003bd6:	mov    ecx,eax
   140003bd8:	call   0x140002590
   140003bdd:	jmp    0x140003c24
   140003bdf:	mov    rax,QWORD PTR [rbx]
   140003be2:	mov    rdi,QWORD PTR [rax+0x8]
   140003be6:	mov    rcx,rdi
   140003be9:	call   QWORD PTR [rip+0x36f9]        # 0x1400072e8
   140003bef:	xor    edx,edx
   140003bf1:	mov    rcx,rbx
   140003bf4:	call   rdi
   140003bf6:	mov    esi,eax
   140003bf8:	test   eax,eax
   140003bfa:	js     0x140003c17
   140003bfc:	mov    rax,QWORD PTR [rbx]
   140003bff:	mov    rdi,QWORD PTR [rax+0x38]
   140003c03:	mov    rcx,rdi
   140003c06:	call   QWORD PTR [rip+0x36dc]        # 0x1400072e8
   140003c0c:	mov    rcx,rbx
   140003c0f:	call   rdi
   140003c11:	mov    esi,eax
   140003c13:	test   eax,eax
   140003c15:	jns    0x140003c1e
   140003c17:	mov    ecx,eax
   140003c19:	call   0x140002590
   140003c1e:	call   QWORD PTR [rip+0x35a4]        # 0x1400071c8
   140003c24:	call   0x140003aa4
   140003c29:	mov    ecx,esi
   140003c2b:	call   0x1400024a8
   140003c30:	test   rbx,rbx
   140003c33:	je     0x140003c4e
   140003c35:	mov    rax,QWORD PTR [rbx]
   140003c38:	mov    rdi,QWORD PTR [rax]
   140003c3b:	mov    rcx,rdi
   140003c3e:	call   QWORD PTR [rip+0x36a4]        # 0x1400072e8
   140003c44:	mov    edx,0x1
   140003c49:	mov    rcx,rbx
   140003c4c:	call   rdi
   140003c4e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003c53:	mov    eax,esi
   140003c55:	mov    rsi,QWORD PTR [rsp+0x38]
   140003c5a:	add    rsp,0x20
   140003c5e:	pop    rdi
   140003c5f:	ret    
   140003c60:	int3   
   140003c61:	int3   
   140003c62:	int3   
   140003c63:	int3   
   140003c64:	int3   
   140003c65:	int3   
   140003c66:	int3   
   140003c67:	int3   
   140003c68:	int3   
   140003c69:	int3   
   140003c6a:	int3   
   140003c6b:	int3   
   140003c6c:	int3   
   140003c6d:	int3   
   140003c6e:	int3   
   140003c6f:	int3   
   140003c70:	mov    QWORD PTR [rsp+0x8],rbx
   140003c75:	push   rdi
   140003c76:	sub    rsp,0x20
   140003c7a:	mov    ebx,edx
   140003c7c:	mov    rdi,rcx
   140003c7f:	call   0x140003d28
   140003c84:	test   bl,0x1
   140003c87:	je     0x140003c9d
   140003c89:	call   QWORD PTR [rip+0x34c9]        # 0x140007158
   140003c8f:	mov    r8,rdi
   140003c92:	xor    edx,edx
   140003c94:	mov    rcx,rax
   140003c97:	call   QWORD PTR [rip+0x34cb]        # 0x140007168
   140003c9d:	mov    rax,rdi
   140003ca0:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ca5:	add    rsp,0x20
   140003ca9:	pop    rdi
   140003caa:	ret    
   140003cab:	int3   
   140003cac:	int3   
   140003cad:	int3   
   140003cae:	int3   
   140003caf:	int3   
   140003cb0:	int3   
   140003cb1:	int3   
   140003cb2:	int3   
   140003cb3:	int3   
   140003cb4:	sub    rsp,0x68
   140003cb8:	mov    rax,QWORD PTR [rip+0x5349]        # 0x140009008
   140003cbf:	xor    rax,rsp
   140003cc2:	mov    QWORD PTR [rsp+0x50],rax
   140003cc7:	cmp    DWORD PTR [rcx],0x5
   140003cca:	jbe    0x140003d0d
   140003ccc:	movabs r8,0x400000000000
   140003cd6:	test   QWORD PTR [rcx+0x10],r8
   140003cda:	je     0x140003d0d
   140003cdc:	mov    rax,QWORD PTR [rcx+0x18]
   140003ce0:	and    rax,r8
   140003ce3:	cmp    rax,QWORD PTR [rcx+0x18]
   140003ce7:	jne    0x140003d0d
   140003ce9:	lea    rax,[rsp+0x30]
   140003cee:	mov    r8,rdx
   140003cf1:	mov    QWORD PTR [rsp+0x28],rax
   140003cf6:	lea    rdx,[rip+0x3e8f]        # 0x140007b8c
   140003cfd:	xor    r9d,r9d
   140003d00:	mov    DWORD PTR [rsp+0x20],0x2
   140003d08:	call   0x140001008
   140003d0d:	mov    rcx,QWORD PTR [rsp+0x50]
   140003d12:	xor    rcx,rsp
   140003d15:	call   0x140004ed0
   140003d1a:	add    rsp,0x68
   140003d1e:	ret    
   140003d1f:	int3   
   140003d20:	int3   
   140003d21:	int3   
   140003d22:	int3   
   140003d23:	int3   
   140003d24:	int3   
   140003d25:	int3   
   140003d26:	int3   
   140003d27:	int3   
   140003d28:	mov    QWORD PTR [rsp+0x8],rbx
   140003d2d:	mov    QWORD PTR [rsp+0x10],rsi
   140003d32:	mov    QWORD PTR [rsp+0x18],rdi
   140003d37:	push   r14
   140003d39:	sub    rsp,0x20
   140003d3d:	lea    rax,[rip+0x390c]        # 0x140007650
   140003d44:	mov    esi,0x3
   140003d49:	mov    QWORD PTR [rcx],rax
   140003d4c:	lea    rdi,[rcx+0x18]
   140003d50:	mov    r14,QWORD PTR [rdi]
   140003d53:	test   r14,r14
   140003d56:	je     0x140003d76
   140003d58:	mov    rax,QWORD PTR [r14]
   140003d5b:	mov    rbx,QWORD PTR [rax+0x30]
   140003d5f:	mov    rcx,rbx
   140003d62:	call   QWORD PTR [rip+0x3580]        # 0x1400072e8
   140003d68:	mov    edx,0x1
   140003d6d:	mov    rcx,r14
   140003d70:	call   rbx
   140003d72:	and    QWORD PTR [rdi],0x0
   140003d76:	add    rdi,0x8
   140003d7a:	sub    rsi,0x1
   140003d7e:	jne    0x140003d50
   140003d80:	mov    rbx,QWORD PTR [rsp+0x30]
   140003d85:	mov    rsi,QWORD PTR [rsp+0x38]
   140003d8a:	mov    rdi,QWORD PTR [rsp+0x40]
   140003d8f:	add    rsp,0x20
   140003d93:	pop    r14
   140003d95:	ret    
   140003d96:	int3   
   140003d97:	int3   
   140003d98:	int3   
   140003d99:	int3   
   140003d9a:	int3   
   140003d9b:	int3   
   140003d9c:	int3   
   140003d9d:	int3   
   140003d9e:	int3   
   140003d9f:	int3   
   140003da0:	mov    QWORD PTR [rsp+0x8],rbx
   140003da5:	mov    QWORD PTR [rsp+0x10],rsi
   140003daa:	push   rdi
   140003dab:	sub    rsp,0x20
   140003daf:	mov    rsi,rcx
   140003db2:	call   0x140001460
   140003db7:	mov    ebx,eax
   140003db9:	test   eax,eax
   140003dbb:	js     0x140003ed5
   140003dc1:	call   QWORD PTR [rip+0x3391]        # 0x140007158
   140003dc7:	mov    ebx,0x38
   140003dcc:	xor    edx,edx
   140003dce:	mov    rcx,rax
   140003dd1:	mov    r8d,ebx
   140003dd4:	call   QWORD PTR [rip+0x3396]        # 0x140007170
   140003dda:	mov    rdi,rax
   140003ddd:	test   rax,rax
   140003de0:	je     0x140003e2d
   140003de2:	add    rax,rbx
   140003de5:	je     0x140003ded
   140003de7:	lea    rcx,[rax-0x38]
   140003deb:	jmp    0x140003def
   140003ded:	xor    ecx,ecx
   140003def:	mov    r8,rbx
   140003df2:	xor    edx,edx
   140003df4:	call   0x140005592
   140003df9:	lea    rcx,[rdi+0x8]
   140003dfd:	test   rcx,rcx
   140003e00:	je     0x140003e06
   140003e02:	add    rcx,0xfffffffffffffff8
   140003e06:	xor    edx,edx
   140003e08:	lea    r8d,[rdx+0x30]
   140003e0c:	call   0x140005592
   140003e11:	and    QWORD PTR [rdi+0x20],0x0
   140003e16:	lea    rax,[rip+0x38bb]        # 0x1400076d8
   140003e1d:	mov    QWORD PTR [rdi],rax
   140003e20:	lea    rax,[rip+0x3881]        # 0x1400076a8
   140003e27:	mov    QWORD PTR [rdi+0x30],rax
   140003e2b:	jmp    0x140003e2f
   140003e2d:	xor    edi,edi
   140003e2f:	mov    QWORD PTR [rsi+0x18],rdi
   140003e33:	test   rdi,rdi
   140003e36:	jne    0x140003e44
   140003e38:	mov    ebx,0x8007000e
   140003e3d:	mov    ecx,ebx
   140003e3f:	jmp    0x140003ed7
   140003e44:	mov    rax,QWORD PTR [rdi]
   140003e47:	mov    rbx,QWORD PTR [rax]
   140003e4a:	mov    rcx,rbx
   140003e4d:	call   QWORD PTR [rip+0x3495]        # 0x1400072e8
   140003e53:	mov    r8,QWORD PTR [rsi+0x8]
   140003e57:	xor    r9d,r9d
   140003e5a:	mov    rdx,QWORD PTR [rsi+0x10]
   140003e5e:	mov    rcx,rdi
   140003e61:	call   rbx
   140003e63:	mov    ebx,eax
   140003e65:	test   eax,eax
   140003e67:	js     0x140003ed5
   140003e69:	mov    rdi,QWORD PTR [rsi+0x18]
   140003e6d:	mov    rax,QWORD PTR [rdi]
   140003e70:	mov    rbx,QWORD PTR [rax+0x8]
   140003e74:	mov    rcx,rbx
   140003e77:	call   QWORD PTR [rip+0x346b]        # 0x1400072e8
   140003e7d:	mov    rcx,rdi
   140003e80:	call   rbx
   140003e82:	mov    ebx,eax
   140003e84:	test   eax,eax
   140003e86:	js     0x140003ed5
   140003e88:	mov    rax,QWORD PTR [rsi]
   140003e8b:	mov    rbx,QWORD PTR [rax+0x20]
   140003e8f:	mov    rcx,rbx
   140003e92:	call   QWORD PTR [rip+0x3450]        # 0x1400072e8
   140003e98:	mov    rdx,QWORD PTR [rsi+0x10]
   140003e9c:	mov    r9d,0x1
   140003ea2:	mov    r8d,0x1000
   140003ea8:	mov    rcx,rsi
   140003eab:	call   rbx
   140003ead:	mov    ebx,eax
   140003eaf:	test   eax,eax
   140003eb1:	js     0x140003ed5
   140003eb3:	mov    rdi,QWORD PTR [rsi+0x10]
   140003eb7:	mov    rax,QWORD PTR [rdi]
   140003eba:	mov    rbx,QWORD PTR [rax+0x110]
   140003ec1:	mov    rcx,rbx
   140003ec4:	call   QWORD PTR [rip+0x341e]        # 0x1400072e8
   140003eca:	mov    rcx,rdi
   140003ecd:	call   rbx
   140003ecf:	mov    ebx,eax
   140003ed1:	test   eax,eax
   140003ed3:	jns    0x140003edc
   140003ed5:	mov    ecx,eax
   140003ed7:	call   0x140002590
   140003edc:	mov    ecx,ebx
   140003ede:	call   0x1400024a8
   140003ee3:	mov    rsi,QWORD PTR [rsp+0x38]
   140003ee8:	mov    eax,ebx
   140003eea:	mov    rbx,QWORD PTR [rsp+0x30]
   140003eef:	add    rsp,0x20
   140003ef3:	pop    rdi
   140003ef4:	ret    
   140003ef5:	int3   
   140003ef6:	int3   
   140003ef7:	int3   
   140003ef8:	int3   
   140003ef9:	int3   
   140003efa:	int3   
   140003efb:	int3   
   140003efc:	int3   
   140003efd:	int3   
   140003efe:	int3   
   140003eff:	int3   
   140003f00:	rex push rbx
   140003f02:	sub    rsp,0x20
   140003f06:	lea    rax,[rip+0x3803]        # 0x140007710
   140003f0d:	mov    rbx,rcx
   140003f10:	mov    QWORD PTR [rcx],rax
   140003f13:	xor    eax,eax
   140003f15:	cmp    QWORD PTR [rcx+0x20],rax
   140003f19:	je     0x140003f28
   140003f1b:	mov    QWORD PTR [rcx+0x20],rax
   140003f1f:	cmp    rax,rax
   140003f22:	je     0x140003f28
   140003f24:	mov    QWORD PTR [rcx+0x20],rax
   140003f28:	test   dl,0x1
   140003f2b:	je     0x140003f41
   140003f2d:	call   QWORD PTR [rip+0x3225]        # 0x140007158
   140003f33:	mov    r8,rbx
   140003f36:	xor    edx,edx
   140003f38:	mov    rcx,rax
   140003f3b:	call   QWORD PTR [rip+0x3227]        # 0x140007168
   140003f41:	mov    rax,rbx
   140003f44:	add    rsp,0x20
   140003f48:	pop    rbx
   140003f49:	ret    
   140003f4a:	int3   
   140003f4b:	int3   
   140003f4c:	int3   
   140003f4d:	int3   
   140003f4e:	int3   
   140003f4f:	int3   
   140003f50:	sub    rsp,0x58
   140003f54:	jmp    0x140003f6c
   140003f56:	lea    rcx,[rsp+0x20]
   140003f5b:	call   QWORD PTR [rip+0x3237]        # 0x140007198
   140003f61:	lea    rcx,[rsp+0x20]
   140003f66:	call   QWORD PTR [rip+0x3224]        # 0x140007190
   140003f6c:	xor    r9d,r9d
   140003f6f:	lea    rcx,[rsp+0x20]
   140003f74:	xor    r8d,r8d
   140003f77:	xor    edx,edx
   140003f79:	call   QWORD PTR [rip+0x3221]        # 0x1400071a0
   140003f7f:	test   eax,eax
   140003f81:	jg     0x140003f56
   140003f83:	xor    ecx,ecx
   140003f85:	call   0x1400024a8
   140003f8a:	xor    eax,eax
   140003f8c:	add    rsp,0x58
   140003f90:	ret    
   140003f91:	int3   
   140003f92:	int3   
   140003f93:	int3   
   140003f94:	int3   
   140003f95:	int3   
   140003f96:	int3   
   140003f97:	int3   
   140003f98:	int3   
   140003f99:	int3   
   140003f9a:	int3   
   140003f9b:	int3   
   140003f9c:	int3   
   140003f9d:	int3   
   140003f9e:	int3   
   140003f9f:	int3   
   140003fa0:	ret    0x0
   140003fa3:	int3   
   140003fa4:	int3   
   140003fa5:	int3   
   140003fa6:	int3   
   140003fa7:	int3   
   140003fa8:	int3   
   140003fa9:	int3   
   140003faa:	int3   
   140003fab:	int3   
   140003fac:	int3   
   140003fad:	int3   
   140003fae:	int3   
   140003faf:	int3   
   140003fb0:	mov    al,0x1
   140003fb2:	ret    
   140003fb3:	int3   
   140003fb4:	int3   
   140003fb5:	int3   
   140003fb6:	int3   
   140003fb7:	int3   
   140003fb8:	int3   
   140003fb9:	int3   
   140003fba:	int3   
   140003fbb:	int3   
   140003fbc:	int3   
   140003fbd:	int3   
   140003fbe:	int3   
   140003fbf:	int3   
   140003fc0:	rex push rbx
   140003fc2:	sub    rsp,0x20
   140003fc6:	xor    ebx,ebx
   140003fc8:	test   rdx,rdx
   140003fcb:	jne    0x140003fdb
   140003fcd:	mov    ecx,0x80070057
   140003fd2:	mov    ebx,ecx
   140003fd4:	call   0x140002590
   140003fd9:	jmp    0x140003fdd
   140003fdb:	mov    DWORD PTR [rdx],ebx
   140003fdd:	mov    ecx,ebx
   140003fdf:	call   0x1400024a8
   140003fe4:	mov    eax,ebx
   140003fe6:	add    rsp,0x20
   140003fea:	pop    rbx
   140003feb:	ret    
   140003fec:	int3   
   140003fed:	int3   
   140003fee:	int3   
   140003fef:	int3   
   140003ff0:	int3   
   140003ff1:	int3   
   140003ff2:	int3   
   140003ff3:	int3   
   140003ff4:	int3   
   140003ff5:	int3   
   140003ff6:	int3   
   140003ff7:	int3   
   140003ff8:	int3   
   140003ff9:	int3   
   140003ffa:	int3   
   140003ffb:	int3   
   140003ffc:	int3   
   140003ffd:	int3   
   140003ffe:	int3   
   140003fff:	int3   
   140004000:	rex push rbx
   140004002:	sub    rsp,0x20
   140004006:	xor    ebx,ebx
   140004008:	test   rdx,rdx
   14000400b:	jne    0x14000401b
   14000400d:	mov    ecx,0x80070057
   140004012:	mov    ebx,ecx
   140004014:	call   0x140002590
   140004019:	jmp    0x140004027
   14000401b:	mov    QWORD PTR [rcx+0x10],rdx
   14000401f:	mov    QWORD PTR [rcx+0x28],r8
   140004023:	mov    QWORD PTR [rcx+0x18],r9
   140004027:	mov    ecx,ebx
   140004029:	call   0x1400024a8
   14000402e:	mov    eax,ebx
   140004030:	add    rsp,0x20
   140004034:	pop    rbx
   140004035:	ret    
   140004036:	int3   
   140004037:	int3   
   140004038:	int3   
   140004039:	int3   
   14000403a:	int3   
   14000403b:	int3   
   14000403c:	int3   
   14000403d:	int3   
   14000403e:	int3   
   14000403f:	int3   
   140004040:	mov    rax,rsp
   140004043:	mov    QWORD PTR [rax+0x8],rbx
   140004047:	mov    QWORD PTR [rax+0x20],rbp
   14000404b:	push   rsi
   14000404c:	push   rdi
   14000404d:	push   r14
   14000404f:	sub    rsp,0x30
   140004053:	and    DWORD PTR [rax+0x10],0x0
   140004057:	mov    rbp,rcx
   14000405a:	and    QWORD PTR [rax+0x18],0x0
   14000405f:	call   QWORD PTR [rip+0x3153]        # 0x1400071b8
   140004065:	mov    ebx,eax
   140004067:	test   eax,eax
   140004069:	js     0x1400041ce
   14000406f:	and    QWORD PTR [rsp+0x20],0x0
   140004075:	lea    rcx,[rsp+0x60]
   14000407a:	xor    r9d,r9d
   14000407d:	xor    r8d,r8d
   140004080:	xor    edx,edx
   140004082:	call   QWORD PTR [rip+0x2fe8]        # 0x140007070
   140004088:	mov    ebx,eax
   14000408a:	test   eax,eax
   14000408c:	js     0x1400041ce
   140004092:	mov    r8,QWORD PTR [rbp+0x18]
   140004096:	lea    r9,[rip+0xffffffffffffbf63]        # 0x140000000
   14000409d:	mov    rcx,QWORD PTR [rsp+0x60]
   1400040a2:	mov    edx,0x1b5d
   1400040a7:	call   QWORD PTR [rip+0x2fcb]        # 0x140007078
   1400040ad:	mov    ebx,eax
   1400040af:	test   eax,eax
   1400040b1:	js     0x1400041ce
   1400040b7:	mov    rcx,QWORD PTR [rsp+0x60]
   1400040bc:	lea    r14,[rbp+0x20]
   1400040c0:	mov    QWORD PTR [rsp+0x28],r14
   1400040c5:	lea    rdx,[rip+0x382c]        # 0x1400078f8
   1400040cc:	and    QWORD PTR [rsp+0x20],0x0
   1400040d2:	xor    r9d,r9d
   1400040d5:	xor    r8d,r8d
   1400040d8:	call   QWORD PTR [rip+0x2fa2]        # 0x140007080
   1400040de:	mov    ebx,eax
   1400040e0:	test   eax,eax
   1400040e2:	js     0x1400041ce
   1400040e8:	mov    rdi,QWORD PTR [rbp+0x10]
   1400040ec:	mov    rsi,QWORD PTR [r14]
   1400040ef:	mov    rax,QWORD PTR [rdi]
   1400040f2:	mov    rbx,QWORD PTR [rax+0x158]
   1400040f9:	mov    rcx,rbx
   1400040fc:	call   QWORD PTR [rip+0x31e6]        # 0x1400072e8
   140004102:	mov    rdx,rsi
   140004105:	mov    rcx,rdi
   140004108:	call   rbx
   14000410a:	mov    ebx,eax
   14000410c:	test   eax,eax
   14000410e:	js     0x1400041ce
   140004114:	mov    rbx,QWORD PTR [r14]
   140004117:	lea    rcx,[rip+0x37f2]        # 0x140007910
   14000411e:	call   QWORD PTR [rip+0x2f74]        # 0x140007098
   140004124:	movzx  edx,ax
   140004127:	mov    rcx,rbx
   14000412a:	call   QWORD PTR [rip+0x2f70]        # 0x1400070a0
   140004130:	mov    rcx,rax
   140004133:	lea    rdx,[rbp+0x30]
   140004137:	call   QWORD PTR [rip+0x2f4b]        # 0x140007088
   14000413d:	lea    rdx,[rsp+0x58]
   140004142:	call   0x1400041f8
   140004147:	test   eax,eax
   140004149:	js     0x14000418a
   14000414b:	cmp    DWORD PTR [rsp+0x58],0x0
   140004150:	je     0x14000418a
   140004152:	mov    rcx,QWORD PTR [rbp+0x10]
   140004156:	mov    edx,0x34
   14000415b:	call   0x1400031ac
   140004160:	mov    ebx,eax
   140004162:	test   eax,eax
   140004164:	js     0x1400041ce
   140004166:	mov    rcx,QWORD PTR [r14]
   140004169:	lea    rdx,[rip+0x37e8]        # 0x140007958
   140004170:	call   0x140003388
   140004175:	mov    ebx,eax
   140004177:	test   eax,eax
   140004179:	js     0x1400041ce
   14000417b:	mov    r8d,0x36
   140004181:	lea    rdx,[rip+0x37f0]        # 0x140007978
   140004188:	jmp    0x1400041c0
   14000418a:	mov    rcx,QWORD PTR [rbp+0x10]
   14000418e:	mov    edx,0x35
   140004193:	call   0x1400031ac
   140004198:	mov    ebx,eax
   14000419a:	test   eax,eax
   14000419c:	js     0x1400041ce
   14000419e:	mov    rcx,QWORD PTR [r14]
   1400041a1:	lea    rdx,[rip+0x3788]        # 0x140007930
   1400041a8:	call   0x140003388
   1400041ad:	mov    ebx,eax
   1400041af:	test   eax,eax
   1400041b1:	js     0x1400041ce
   1400041b3:	mov    r8d,0x37
   1400041b9:	lea    rdx,[rip+0x3750]        # 0x140007910
   1400041c0:	mov    rcx,QWORD PTR [r14]
   1400041c3:	call   0x140003278
   1400041c8:	mov    ebx,eax
   1400041ca:	test   eax,eax
   1400041cc:	jns    0x1400041d5
   1400041ce:	mov    ecx,eax
   1400041d0:	call   0x140002590
   1400041d5:	mov    ecx,ebx
   1400041d7:	call   0x1400024a8
   1400041dc:	mov    rbp,QWORD PTR [rsp+0x68]
   1400041e1:	mov    eax,ebx
   1400041e3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400041e8:	add    rsp,0x30
   1400041ec:	pop    r14
   1400041ee:	pop    rdi
   1400041ef:	pop    rsi
   1400041f0:	ret    
   1400041f1:	int3   
   1400041f2:	int3   
   1400041f3:	int3   
   1400041f4:	int3   
   1400041f5:	int3   
   1400041f6:	int3   
   1400041f7:	int3   
   1400041f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400041fd:	mov    QWORD PTR [rsp+0x18],rsi
   140004202:	push   rbp
   140004203:	push   rdi
   140004204:	push   r12
   140004206:	push   r14
   140004208:	push   r15
   14000420a:	lea    rbp,[rsp-0x37]
   14000420f:	sub    rsp,0xb0
   140004216:	mov    rax,QWORD PTR [rip+0x4deb]        # 0x140009008
   14000421d:	xor    rax,rsp
   140004220:	mov    QWORD PTR [rbp+0x27],rax
   140004224:	and    DWORD PTR [rdx],0x0
   140004227:	lea    rax,[rbp-0x39]
   14000422b:	and    DWORD PTR [rbp-0x45],0x0
   14000422f:	mov    r12,rdx
   140004232:	xor    edi,edi
   140004234:	mov    DWORD PTR [rbp-0x49],0x1
   14000423b:	xor    ebx,ebx
   14000423d:	mov    QWORD PTR [rsp+0x20],rax
   140004242:	and    QWORD PTR [rbp-0x39],rbx
   140004246:	lea    rdx,[rip+0x35a3]        # 0x1400077f0
   14000424d:	xor    r8d,r8d
   140004250:	mov    rcx,0xffffffff80000002
   140004257:	lea    r9d,[rdi+0x1]
   14000425b:	call   QWORD PTR [rip+0x2dbf]        # 0x140007020
   140004261:	test   eax,eax
   140004263:	jne    0x140004299
   140004265:	xor    esi,esi
   140004267:	mov    rdi,QWORD PTR [rbp-0x39]
   14000426b:	and    QWORD PTR [rbp-0x39],rbx
   14000426f:	mov    ecx,esi
   140004271:	call   0x1400024a8
   140004276:	mov    rcx,QWORD PTR [rbp-0x39]
   14000427a:	test   rcx,rcx
   14000427d:	je     0x140004289
   14000427f:	call   QWORD PTR [rip+0x2d83]        # 0x140007008
   140004285:	and    QWORD PTR [rbp-0x39],rbx
   140004289:	test   esi,esi
   14000428b:	jns    0x1400042b4
   14000428d:	mov    ecx,esi
   14000428f:	call   0x140002590
   140004294:	jmp    0x140004385
   140004299:	movzx  esi,ax
   14000429c:	or     esi,0x80070000
   1400042a2:	test   eax,eax
   1400042a4:	cmovle esi,eax
   1400042a7:	test   esi,esi
   1400042a9:	je     0x140004267
   1400042ab:	mov    ecx,esi
   1400042ad:	call   0x140002590
   1400042b2:	jmp    0x14000426f
   1400042b4:	and    DWORD PTR [rbp-0x41],ebx
   1400042b7:	lea    rax,[rbp-0x41]
   1400042bb:	xor    r8d,r8d
   1400042be:	mov    QWORD PTR [rsp+0x28],rax
   1400042c3:	lea    r9,[rbp-0x3d]
   1400042c7:	lea    rdx,[rip+0x36ca]        # 0x140007998
   1400042ce:	mov    QWORD PTR [rsp+0x20],rbx
   1400042d3:	mov    rcx,rdi
   1400042d6:	call   QWORD PTR [rip+0x2d4c]        # 0x140007028
   1400042dc:	test   eax,eax
   1400042de:	je     0x1400042f2
   1400042e0:	movzx  esi,ax
   1400042e3:	or     esi,0x80070000
   1400042e9:	test   eax,eax
   1400042eb:	cmovle esi,eax
   1400042ee:	test   esi,esi
   1400042f0:	jne    0x14000428d
   1400042f2:	test   rbx,rbx
   1400042f5:	jne    0x140004330
   1400042f7:	mov    eax,DWORD PTR [rbp-0x41]
   1400042fa:	test   eax,eax
   1400042fc:	je     0x140004326
   1400042fe:	mov    ebx,eax
   140004300:	call   QWORD PTR [rip+0x2e52]        # 0x140007158
   140004306:	mov    r8d,ebx
   140004309:	xor    edx,edx
   14000430b:	mov    rcx,rax
   14000430e:	call   QWORD PTR [rip+0x2e5c]        # 0x140007170
   140004314:	mov    rbx,rax
   140004317:	test   rax,rax
   14000431a:	jne    0x1400042b7
   14000431c:	mov    esi,0x8007000e
   140004321:	jmp    0x14000428d
   140004326:	mov    esi,0x8000ffff
   14000432b:	jmp    0x14000428d
   140004330:	cmp    DWORD PTR [rbp-0x3d],0x4
   140004334:	je     0x140004340
   140004336:	mov    esi,0x8007000d
   14000433b:	jmp    0x14000428d
   140004340:	xor    r14d,r14d
   140004343:	cmp    DWORD PTR [rbp-0x41],0x4
   140004347:	je     0x14000435e
   140004349:	mov    esi,0x8007000d
   14000434e:	mov    ecx,esi
   140004350:	mov    r14d,esi
   140004353:	call   0x140002590
   140004358:	mov    r15d,DWORD PTR [rbp-0x3d]
   14000435c:	jmp    0x140004366
   14000435e:	mov    eax,DWORD PTR [rbx]
   140004360:	xor    r15d,r15d
   140004363:	mov    DWORD PTR [rbp-0x45],eax
   140004366:	mov    ecx,r14d
   140004369:	call   0x1400024a8
   14000436e:	mov    esi,r14d
   140004371:	test   r14d,r14d
   140004374:	jns    0x14000437e
   140004376:	mov    ecx,r14d
   140004379:	jmp    0x14000428f
   14000437e:	test   r15d,r15d
   140004381:	je     0x140004385
   140004383:	xor    ebx,ebx
   140004385:	mov    ecx,esi
   140004387:	call   0x1400024a8
   14000438c:	test   rbx,rbx
   14000438f:	je     0x1400043a5
   140004391:	call   QWORD PTR [rip+0x2dc1]        # 0x140007158
   140004397:	mov    r8,rbx
   14000439a:	xor    edx,edx
   14000439c:	mov    rcx,rax
   14000439f:	call   QWORD PTR [rip+0x2dc3]        # 0x140007168
   1400043a5:	test   rdi,rdi
   1400043a8:	je     0x1400043b3
   1400043aa:	mov    rcx,rdi
   1400043ad:	call   QWORD PTR [rip+0x2c55]        # 0x140007008
   1400043b3:	mov    edi,0x2
   1400043b8:	test   esi,esi
   1400043ba:	jns    0x1400043c8
   1400043bc:	mov    ecx,esi
   1400043be:	call   0x140002590
   1400043c3:	jmp    0x140004531
   1400043c8:	or     ecx,0xffffffff
   1400043cb:	lea    rax,[rbp-0x49]
   1400043cf:	mov    r9d,ecx
   1400043d2:	mov    QWORD PTR [rsp+0x20],rax
   1400043d7:	mov    r8d,ecx
   1400043da:	mov    edx,ecx
   1400043dc:	call   QWORD PTR [rip+0x2cd6]        # 0x1400070b8
   1400043e2:	test   eax,eax
   1400043e4:	jne    0x140004407
   1400043e6:	call   QWORD PTR [rip+0x2d5c]        # 0x140007148
   1400043ec:	test   eax,eax
   1400043ee:	jne    0x1400043f7
   1400043f0:	mov    esi,0x80004005
   1400043f5:	jmp    0x1400043bc
   1400043f7:	movzx  esi,ax
   1400043fa:	or     esi,0x80070000
   140004400:	test   eax,eax
   140004402:	cmovle esi,eax
   140004405:	jmp    0x1400043bc
   140004407:	mov    eax,DWORD PTR [rbp-0x45]
   14000440a:	cmp    DWORD PTR [rbp-0x49],eax
   14000440d:	jne    0x14000441d
   14000440f:	mov    ecx,edi
   140004411:	call   0x14000357c
   140004416:	and    DWORD PTR [r12],0x0
   14000441b:	jmp    0x14000449b
   14000441d:	lea    r8,[rip+0x344c]        # 0x140007870
   140004424:	call   0x1400035d0
   140004429:	mov    ebx,eax
   14000442b:	test   eax,eax
   14000442d:	js     0x140004441
   14000442f:	lea    r8,[rip+0x3452]        # 0x140007888
   140004436:	call   0x1400035d0
   14000443b:	mov    ebx,eax
   14000443d:	test   eax,eax
   14000443f:	jns    0x140004448
   140004441:	mov    ecx,eax
   140004443:	call   0x140002590
   140004448:	mov    ecx,ebx
   14000444a:	call   0x1400024a8
   14000444f:	test   ebx,ebx
   140004451:	jns    0x140004457
   140004453:	mov    ecx,ebx
   140004455:	jmp    0x14000447d
   140004457:	lea    r8,[rip+0x336a]        # 0x1400077c8
   14000445e:	call   0x1400035d0
   140004463:	mov    ebx,eax
   140004465:	test   eax,eax
   140004467:	js     0x14000447b
   140004469:	lea    r8,[rip+0x3450]        # 0x1400078c0
   140004470:	call   0x1400035d0
   140004475:	mov    ebx,eax
   140004477:	test   eax,eax
   140004479:	jns    0x140004482
   14000447b:	mov    ecx,eax
   14000447d:	call   0x140002590
   140004482:	mov    ecx,ebx
   140004484:	call   0x1400024a8
   140004489:	mov    ecx,0x1
   14000448e:	call   0x14000357c
   140004493:	mov    DWORD PTR [r12],0x1
   14000449b:	cmp    DWORD PTR [rip+0x4b7e],0x5        # 0x140009020
   1400044a2:	jbe    0x140004531
   1400044a8:	movabs rdx,0x400000000000
   1400044b2:	test   QWORD PTR [rip+0x4b77],rdx        # 0x140009030
   1400044b9:	je     0x140004531
   1400044bb:	mov    rax,QWORD PTR [rip+0x4b76]        # 0x140009038
   1400044c2:	and    rax,rdx
   1400044c5:	cmp    rax,QWORD PTR [rip+0x4b6c]        # 0x140009038
   1400044cc:	jne    0x140004531
   1400044ce:	and    DWORD PTR [rbp+0x3],0x0
   1400044d2:	lea    rax,[rbp-0x45]
   1400044d6:	and    DWORD PTR [rbp+0x13],0x0
   1400044da:	and    DWORD PTR [rbp+0x23],0x0
   1400044de:	mov    QWORD PTR [rbp+0x7],rax
   1400044e2:	lea    rax,[rbp-0x49]
   1400044e6:	mov    QWORD PTR [rbp+0x17],rax
   1400044ea:	mov    QWORD PTR [rbp-0x9],r12
   1400044ee:	mov    DWORD PTR [rbp-0x1],0x4
   1400044f5:	mov    DWORD PTR [rbp+0xf],0x4
   1400044fc:	mov    DWORD PTR [rbp+0x1f],0x4
   140004503:	lea    rax,[rbp-0x29]
   140004507:	xor    r9d,r9d
   14000450a:	mov    QWORD PTR [rsp+0x28],rax
   14000450f:	lea    r8,[rip+0x51da]        # 0x1400096f0
   140004516:	lea    rdx,[rip+0x36e6]        # 0x140007c03
   14000451d:	mov    DWORD PTR [rsp+0x20],0x5
   140004525:	lea    rcx,[rip+0x4af4]        # 0x140009020
   14000452c:	call   0x140001008
   140004531:	test   esi,esi
   140004533:	jns    0x14000453c
   140004535:	mov    ecx,edi
   140004537:	call   0x14000357c
   14000453c:	mov    ecx,esi
   14000453e:	call   0x1400024a8
   140004543:	mov    eax,esi
   140004545:	mov    rcx,QWORD PTR [rbp+0x27]
   140004549:	xor    rcx,rsp
   14000454c:	call   0x140004ed0
   140004551:	lea    r11,[rsp+0xb0]
   140004559:	mov    rbx,QWORD PTR [r11+0x30]
   14000455d:	mov    rsi,QWORD PTR [r11+0x40]
   140004561:	mov    rsp,r11
   140004564:	pop    r15
   140004566:	pop    r14
   140004568:	pop    r12
   14000456a:	pop    rdi
   14000456b:	pop    rbp
   14000456c:	ret    
   14000456d:	int3   
   14000456e:	int3   
   14000456f:	int3   
   140004570:	int3   
   140004571:	int3   
   140004572:	int3   
   140004573:	int3   
   140004574:	int3   
   140004575:	int3   
   140004576:	int3   
   140004577:	int3   
   140004578:	int3   
   140004579:	int3   
   14000457a:	int3   
   14000457b:	int3   
   14000457c:	int3   
   14000457d:	int3   
   14000457e:	int3   
   14000457f:	int3   
   140004580:	mov    QWORD PTR [rsp+0x8],rbx
   140004585:	mov    QWORD PTR [rsp+0x10],rsi
   14000458a:	push   rdi
   14000458b:	sub    rsp,0x20
   14000458f:	mov    rbx,rcx
   140004592:	mov    rsi,r8
   140004595:	lea    rcx,[rsp+0x40]
   14000459a:	xor    edi,edi
   14000459c:	call   QWORD PTR [rip+0x2aee]        # 0x140007090
   1400045a2:	mov    rdx,QWORD PTR [rax]
   1400045a5:	cmp    QWORD PTR [rsi+0x8],rdx
   1400045a9:	jne    0x1400045e9
   1400045ab:	mov    rbx,QWORD PTR [rbx-0x10]
   1400045af:	lea    rcx,[rip+0x335a]        # 0x140007910
   1400045b6:	call   QWORD PTR [rip+0x2adc]        # 0x140007098
   1400045bc:	movzx  edx,ax
   1400045bf:	mov    rcx,rbx
   1400045c2:	call   QWORD PTR [rip+0x2ad8]        # 0x1400070a0
   1400045c8:	cmp    QWORD PTR [rsi],rax
   1400045cb:	jne    0x1400045e9
   1400045cd:	call   0x14000348c
   1400045d2:	mov    edi,eax
   1400045d4:	test   eax,eax
   1400045d6:	jns    0x1400045e9
   1400045d8:	mov    ecx,eax
   1400045da:	call   0x140002590
   1400045df:	mov    edx,0x1f
   1400045e4:	call   0x140003404
   1400045e9:	mov    ecx,edi
   1400045eb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400045f0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400045f5:	add    rsp,0x20
   1400045f9:	pop    rdi
   1400045fa:	jmp    0x1400024a8
   1400045ff:	int3   
   140004600:	int3   
   140004601:	int3   
   140004602:	int3   
   140004603:	int3   
   140004604:	int3   
   140004605:	int3   
   140004606:	int3   
   140004607:	int3   
   140004608:	mov    rax,rsp
   14000460b:	mov    QWORD PTR [rax+0x8],rbx
   14000460f:	mov    QWORD PTR [rax+0x10],rbp
   140004613:	mov    QWORD PTR [rax+0x18],rsi
   140004617:	mov    QWORD PTR [rax+0x20],rdi
   14000461b:	push   r14
   14000461d:	sub    rsp,0x20
   140004621:	mov    eax,edx
   140004623:	mov    rsi,r9
   140004626:	xor    r9d,r9d
   140004629:	shr    eax,0x4
   14000462c:	mov    edi,edx
   14000462e:	mov    rbp,rcx
   140004631:	lea    r14d,[r9+0x1]
   140004635:	add    ax,r14w
   140004639:	lea    edx,[r9+0x6]
   14000463d:	movzx  r8d,ax
   140004641:	call   QWORD PTR [rip+0x2ae1]        # 0x140007128
   140004647:	xor    ebx,ebx
   140004649:	test   rax,rax
   14000464c:	je     0x1400046ca
   14000464e:	mov    rdx,rax
   140004651:	mov    rcx,rbp
   140004654:	call   QWORD PTR [rip+0x2ad6]        # 0x140007130
   14000465a:	test   rax,rax
   14000465d:	je     0x1400046ca
   14000465f:	mov    rcx,rax
   140004662:	call   QWORD PTR [rip+0x2ad8]        # 0x140007140
   140004668:	mov    rdx,rax
   14000466b:	test   rax,rax
   14000466e:	je     0x1400046c3
   140004670:	and    edi,0xf
   140004673:	jbe    0x140004689
   140004675:	mov    eax,edi
   140004677:	movzx  ecx,WORD PTR [rdx]
   14000467a:	add    ecx,r14d
   14000467d:	movsxd rcx,ecx
   140004680:	lea    rdx,[rdx+rcx*2]
   140004684:	sub    rax,r14
   140004687:	jne    0x140004677
   140004689:	test   rsi,rsi
   14000468c:	je     0x1400046b1
   14000468e:	movzx  r8d,WORD PTR [rdx]
   140004692:	add    rdx,0x2
   140004696:	movzx  eax,r8w
   14000469a:	neg    ax
   14000469d:	mov    rax,QWORD PTR [rsp+0x50]
   1400046a2:	sbb    rcx,rcx
   1400046a5:	and    rcx,rdx
   1400046a8:	mov    QWORD PTR [rsi],rcx
   1400046ab:	mov    WORD PTR [rax],r8w
   1400046af:	jmp    0x1400046e4
   1400046b1:	mov    rcx,QWORD PTR [rsp+0x50]
   1400046b6:	test   rcx,rcx
   1400046b9:	je     0x1400046e4
   1400046bb:	movzx  eax,WORD PTR [rdx]
   1400046be:	mov    WORD PTR [rcx],ax
   1400046c1:	jmp    0x1400046e4
   1400046c3:	mov    ebx,0x80004005
   1400046c8:	jmp    0x1400046e4
   1400046ca:	call   QWORD PTR [rip+0x2a78]        # 0x140007148
   1400046d0:	test   eax,eax
   1400046d2:	cmove  eax,r14d
   1400046d6:	movzx  ebx,ax
   1400046d9:	or     ebx,0x80070000
   1400046df:	test   eax,eax
   1400046e1:	cmovle ebx,eax
   1400046e4:	mov    rbp,QWORD PTR [rsp+0x38]
   1400046e9:	mov    eax,ebx
   1400046eb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400046f0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400046f5:	mov    rdi,QWORD PTR [rsp+0x48]
   1400046fa:	add    rsp,0x20
   1400046fe:	pop    r14
   140004700:	ret    
   140004701:	int3   
   140004702:	int3   
   140004703:	int3   
   140004704:	int3   
   140004705:	int3   
   140004706:	int3   
   140004707:	int3   
   140004708:	mov    r11,rsp
   14000470b:	mov    QWORD PTR [r11+0x8],rbx
   14000470f:	mov    QWORD PTR [r11+0x10],rbp
   140004713:	mov    QWORD PTR [r11+0x20],r9
   140004717:	mov    WORD PTR [r11+0x18],r8w
   14000471c:	push   rsi
   14000471d:	push   rdi
   14000471e:	push   r14
   140004720:	sub    rsp,0x30
   140004724:	mov    r14,QWORD PTR [rsp+0x78]
   140004729:	lea    rax,[r11+0x18]
   14000472d:	xor    ebp,ebp
   14000472f:	mov    QWORD PTR [r11-0x28],rax
   140004733:	lea    r9,[r11+0x20]
   140004737:	mov    QWORD PTR [r14],rbp
   14000473a:	call   0x140004608
   14000473f:	mov    ebx,eax
   140004741:	test   eax,eax
   140004743:	js     0x140004780
   140004745:	movzx  eax,WORD PTR [rsp+0x60]
   14000474a:	lea    rsi,[rax+rax*1]
   14000474e:	lea    rcx,[rsi+0x2]
   140004752:	call   QWORD PTR [rip+0x2b78]        # 0x1400072d0
   140004758:	mov    rdi,rax
   14000475b:	test   rax,rax
   14000475e:	je     0x14000477b
   140004760:	mov    rdx,QWORD PTR [rsp+0x68]
   140004765:	mov    r8,rsi
   140004768:	mov    rcx,rax
   14000476b:	mov    ebx,ebp
   14000476d:	call   0x140005586
   140004772:	mov    WORD PTR [rsi+rdi*1],bp
   140004776:	mov    QWORD PTR [r14],rdi
   140004779:	jmp    0x140004780
   14000477b:	mov    ebx,0x8007000e
   140004780:	mov    rbp,QWORD PTR [rsp+0x58]
   140004785:	mov    eax,ebx
   140004787:	mov    rbx,QWORD PTR [rsp+0x50]
   14000478c:	add    rsp,0x30
   140004790:	pop    r14
   140004792:	pop    rdi
   140004793:	pop    rsi
   140004794:	ret    
   140004795:	int3   
   140004796:	int3   
   140004797:	int3   
   140004798:	int3   
   140004799:	int3   
   14000479a:	int3   
   14000479b:	int3   
   14000479c:	mov    rax,rsp
   14000479f:	mov    QWORD PTR [rax+0x10],rdx
   1400047a3:	mov    QWORD PTR [rax+0x18],r8
   1400047a7:	mov    QWORD PTR [rax+0x20],r9
   1400047ab:	push   rbx
   1400047ac:	sub    rsp,0x20
   1400047b0:	lea    r8,[rax+0x18]
   1400047b4:	call   0x140004860
   1400047b9:	mov    ebx,eax
   1400047bb:	test   eax,eax
   1400047bd:	jns    0x1400047c6
   1400047bf:	mov    ecx,eax
   1400047c1:	call   0x140002590
   1400047c6:	mov    ecx,ebx
   1400047c8:	call   0x1400024a8
   1400047cd:	mov    eax,ebx
   1400047cf:	add    rsp,0x20
   1400047d3:	pop    rbx
   1400047d4:	ret    
   1400047d5:	int3   
   1400047d6:	int3   
   1400047d7:	int3   
   1400047d8:	int3   
   1400047d9:	int3   
   1400047da:	int3   
   1400047db:	int3   
   1400047dc:	sub    rsp,0x48
   1400047e0:	mov    rax,QWORD PTR [rip+0x4821]        # 0x140009008
   1400047e7:	xor    rax,rsp
   1400047ea:	mov    QWORD PTR [rsp+0x30],rax
   1400047ef:	xor    edx,edx
   1400047f1:	test   r8,r8
   1400047f4:	je     0x14000480d
   1400047f6:	or     rax,0xffffffffffffffff
   1400047fa:	inc    rax
   1400047fd:	cmp    WORD PTR [r8+rax*2],dx
   140004802:	jne    0x1400047fa
   140004804:	lea    ecx,[rax*2+0x2]
   14000480b:	jmp    0x140004812
   14000480d:	mov    ecx,0xa
   140004812:	test   r8,r8
   140004815:	mov    DWORD PTR [rsp+0x28],ecx
   140004819:	mov    DWORD PTR [rsp+0x2c],edx
   14000481d:	lea    rax,[rip+0x31fc]        # 0x140007a20
   140004824:	cmovne rax,r8
   140004828:	lea    r9,[rsp+0x20]
   14000482d:	mov    r8d,0x1
   140004833:	mov    QWORD PTR [rsp+0x20],rax
   140004838:	xor    ecx,ecx
   14000483a:	lea    rdx,[rip+0x2c7f]        # 0x1400074c0
   140004841:	call   QWORD PTR [rip+0x2809]        # 0x140007050
   140004847:	mov    rcx,QWORD PTR [rsp+0x30]
   14000484c:	xor    rcx,rsp
   14000484f:	call   0x140004ed0
   140004854:	add    rsp,0x48
   140004858:	ret    
   140004859:	int3   
   14000485a:	int3   
   14000485b:	int3   
   14000485c:	int3   
   14000485d:	int3   
   14000485e:	int3   
   14000485f:	int3   
   140004860:	mov    QWORD PTR [rsp+0x20],rbx
   140004865:	push   rbp
   140004866:	push   rsi
   140004867:	push   rdi
   140004868:	push   r12
   14000486a:	push   r13
   14000486c:	push   r14
   14000486e:	push   r15
   140004870:	sub    rsp,0x260
   140004877:	mov    rax,QWORD PTR [rip+0x478a]        # 0x140009008
   14000487e:	xor    rax,rsp
   140004881:	mov    QWORD PTR [rsp+0x250],rax
   140004889:	xor    ebp,ebp
   14000488b:	mov    QWORD PTR [rsp+0x28],r8
   140004890:	mov    r9,r8
   140004893:	mov    QWORD PTR [rsp+0x30],rdx
   140004898:	mov    r8,rdx
   14000489b:	mov    QWORD PTR [rsp+0x20],rbp
   1400048a0:	mov    r13,rcx
   1400048a3:	mov    esi,0x103
   1400048a8:	mov    edx,esi
   1400048aa:	lea    rcx,[rsp+0x40]
   1400048af:	mov    ebx,ebp
   1400048b1:	mov    edi,ebp
   1400048b3:	call   QWORD PTR [rip+0x29af]        # 0x140007268
   1400048b9:	test   eax,eax
   1400048bb:	js     0x1400048ec
   1400048bd:	cdqe   
   1400048bf:	cmp    rax,rsi
   1400048c2:	ja     0x1400048ec
   1400048c4:	jne    0x1400048ce
   1400048c6:	mov    WORD PTR [rsp+0x246],bp
   1400048ce:	mov    rdx,r13
   1400048d1:	lea    rcx,[rsp+0x40]
   1400048d6:	call   0x140002a78
   1400048db:	mov    esi,eax
   1400048dd:	test   eax,eax
   1400048df:	jns    0x140004a7c
   1400048e5:	mov    ecx,eax
   1400048e7:	jmp    0x140004a77
   1400048ec:	mov    r12d,DWORD PTR [rsp+0x20]
   1400048f1:	mov    r14d,0x104
   1400048f7:	mov    WORD PTR [rsp+0x246],bp
   1400048ff:	mov    r15d,0x80070216
   140004905:	mov    esi,ebp
   140004907:	test   r14d,r14d
   14000490a:	je     0x14000492b
   14000490c:	lea    ecx,[r14+r14*1]
   140004910:	mov    eax,ecx
   140004912:	shr    eax,1
   140004914:	cmp    eax,r14d
   140004917:	je     0x140004926
   140004919:	mov    ecx,r15d
   14000491c:	mov    esi,r15d
   14000491f:	call   0x140002590
   140004924:	jmp    0x14000492e
   140004926:	mov    r14d,ecx
   140004929:	jmp    0x14000492e
   14000492b:	mov    r14d,ebp
   14000492e:	mov    ecx,esi
   140004930:	call   0x1400024a8
   140004935:	test   esi,esi
   140004937:	js     0x140004a75
   14000493d:	mov    esi,ebp
   14000493f:	test   r14d,r14d
   140004942:	je     0x140004963
   140004944:	lea    ecx,[r14+r14*1]
   140004948:	mov    eax,ecx
   14000494a:	shr    eax,1
   14000494c:	cmp    eax,r14d
   14000494f:	je     0x14000495e
   140004951:	mov    ecx,r15d
   140004954:	mov    esi,r15d
   140004957:	call   0x140002590
   14000495c:	jmp    0x140004966
   14000495e:	mov    r12d,ecx
   140004961:	jmp    0x140004966
   140004963:	mov    r12d,ebp
   140004966:	mov    ecx,esi
   140004968:	call   0x1400024a8
   14000496d:	test   esi,esi
   14000496f:	js     0x140004a75
   140004975:	test   rbx,rbx
   140004978:	je     0x140004991
   14000497a:	call   QWORD PTR [rip+0x27d8]        # 0x140007158
   140004980:	mov    r8,rbx
   140004983:	xor    edx,edx
   140004985:	mov    rcx,rax
   140004988:	call   QWORD PTR [rip+0x27da]        # 0x140007168
   14000498e:	mov    rbx,rbp
   140004991:	call   QWORD PTR [rip+0x27c1]        # 0x140007158
   140004997:	mov    r8d,r12d
   14000499a:	xor    edx,edx
   14000499c:	mov    rcx,rax
   14000499f:	call   QWORD PTR [rip+0x27cb]        # 0x140007170
   1400049a5:	mov    r15,rax
   1400049a8:	test   rbx,rbx
   1400049ab:	je     0x1400049c1
   1400049ad:	call   QWORD PTR [rip+0x27a5]        # 0x140007158
   1400049b3:	mov    r8,rbx
   1400049b6:	xor    edx,edx
   1400049b8:	mov    rcx,rax
   1400049bb:	call   QWORD PTR [rip+0x27a7]        # 0x140007168
   1400049c1:	test   r15,r15
   1400049c4:	je     0x140004a6d
   1400049ca:	mov    ecx,r14d
   1400049cd:	mov    esi,ebp
   1400049cf:	mov    edx,0x80070057
   1400049d4:	mov    rbx,r15
   1400049d7:	lea    rax,[rcx-0x1]
   1400049db:	cmp    rax,0x7ffffffe
   1400049e1:	cmova  esi,edx
   1400049e4:	test   esi,esi
   1400049e6:	js     0x140004a23
   1400049e8:	mov    r9,QWORD PTR [rsp+0x28]
   1400049ed:	mov    esi,ebp
   1400049ef:	mov    r8,QWORD PTR [rsp+0x30]
   1400049f4:	lea    rbp,[rcx-0x1]
   1400049f8:	mov    rdx,rbp
   1400049fb:	mov    rcx,r15
   1400049fe:	call   QWORD PTR [rip+0x2864]        # 0x140007268
   140004a04:	xor    ecx,ecx
   140004a06:	test   eax,eax
   140004a08:	js     0x140004a15
   140004a0a:	cdqe   
   140004a0c:	cmp    rax,rbp
   140004a0f:	ja     0x140004a15
   140004a11:	jne    0x140004a1f
   140004a13:	jmp    0x140004a1a
   140004a15:	mov    esi,0x8007007a
   140004a1a:	mov    WORD PTR [r15+rbp*2],cx
   140004a1f:	xor    ebp,ebp
   140004a21:	jmp    0x140004a2c
   140004a23:	test   r14d,r14d
   140004a26:	je     0x140004a2c
   140004a28:	mov    WORD PTR [r15],bp
   140004a2c:	cmp    esi,0x8007007a
   140004a32:	je     0x1400048ff
   140004a38:	test   esi,esi
   140004a3a:	js     0x140004a75
   140004a3c:	lea    rdx,[rsp+0x20]
   140004a41:	mov    rcx,r15
   140004a44:	call   0x140002a78
   140004a49:	mov    esi,eax
   140004a4b:	test   eax,eax
   140004a4d:	jns    0x140004a5d
   140004a4f:	mov    ecx,eax
   140004a51:	call   0x140002590
   140004a56:	mov    rdi,QWORD PTR [rsp+0x20]
   140004a5b:	jmp    0x140004a7c
   140004a5d:	mov    rax,QWORD PTR [rsp+0x20]
   140004a62:	mov    rdi,rbp
   140004a65:	mov    QWORD PTR [r13+0x0],rax
   140004a69:	mov    esi,ebp
   140004a6b:	jmp    0x140004a7c
   140004a6d:	mov    rbx,rbp
   140004a70:	mov    esi,0x8007000e
   140004a75:	mov    ecx,esi
   140004a77:	call   0x140002590
   140004a7c:	mov    ecx,esi
   140004a7e:	call   0x1400024a8
   140004a83:	test   rdi,rdi
   140004a86:	je     0x140004aa4
   140004a88:	call   QWORD PTR [rip+0x26ca]        # 0x140007158
   140004a8e:	lea    r8,[rdi-0x4]
   140004a92:	xor    edx,edx
   140004a94:	mov    rcx,rax
   140004a97:	call   QWORD PTR [rip+0x26cb]        # 0x140007168
   140004a9d:	xor    ecx,ecx
   140004a9f:	call   0x1400024a8
   140004aa4:	test   rbx,rbx
   140004aa7:	je     0x140004abd
   140004aa9:	call   QWORD PTR [rip+0x26a9]        # 0x140007158
   140004aaf:	mov    r8,rbx
   140004ab2:	xor    edx,edx
   140004ab4:	mov    rcx,rax
   140004ab7:	call   QWORD PTR [rip+0x26ab]        # 0x140007168
   140004abd:	mov    eax,esi
   140004abf:	mov    rcx,QWORD PTR [rsp+0x250]
   140004ac7:	xor    rcx,rsp
   140004aca:	call   0x140004ed0
   140004acf:	mov    rbx,QWORD PTR [rsp+0x2b8]
   140004ad7:	add    rsp,0x260
   140004ade:	pop    r15
   140004ae0:	pop    r14
   140004ae2:	pop    r13
   140004ae4:	pop    r12
   140004ae6:	pop    rdi
   140004ae7:	pop    rsi
   140004ae8:	pop    rbp
   140004ae9:	ret    
   140004aea:	int3   
   140004aeb:	int3   
   140004aec:	int3   
   140004aed:	int3   
   140004aee:	int3   
   140004aef:	int3   
   140004af0:	sub    rsp,0x28
   140004af4:	mov    eax,0x5a4d
   140004af9:	cmp    WORD PTR [rip+0xffffffffffffb500],ax        # 0x140000000
   140004b00:	je     0x140004b06
   140004b02:	xor    eax,eax
   140004b04:	jmp    0x140004b55
   140004b06:	movsxd rcx,DWORD PTR [rip+0xffffffffffffb52f]        # 0x14000003c
   140004b0d:	lea    rax,[rip+0xffffffffffffb4ec]        # 0x140000000
   140004b14:	add    rcx,rax
   140004b17:	cmp    DWORD PTR [rcx],0x4550
   140004b1d:	jne    0x140004b02
   140004b1f:	movzx  eax,WORD PTR [rcx+0x18]
   140004b23:	cmp    eax,0x10b
   140004b28:	je     0x140004b44
   140004b2a:	cmp    eax,0x20b
   140004b2f:	jne    0x140004b02
   140004b31:	xor    eax,eax
   140004b33:	cmp    DWORD PTR [rcx+0x84],0xe
   140004b3a:	jbe    0x140004b55
   140004b3c:	cmp    DWORD PTR [rcx+0xf8],eax
   140004b42:	jmp    0x140004b52
   140004b44:	xor    eax,eax
   140004b46:	cmp    DWORD PTR [rcx+0x74],0xe
   140004b4a:	jbe    0x140004b55
   140004b4c:	cmp    DWORD PTR [rcx+0xe8],eax
   140004b52:	setne  al
   140004b55:	mov    ecx,0x2
   140004b5a:	mov    DWORD PTR [rip+0x4540],eax        # 0x1400090a0
   140004b60:	call   0x1400050c8
   140004b65:	mov    ecx,eax
   140004b67:	call   QWORD PTR [rip+0x26bb]        # 0x140007228
   140004b6d:	mov    rcx,QWORD PTR [rip+0x267c]        # 0x1400071f0
   140004b74:	or     rax,0xffffffffffffffff
   140004b78:	mov    QWORD PTR [rip+0x4bd1],rax        # 0x140009750
   140004b7f:	mov    QWORD PTR [rip+0x4bd2],rax        # 0x140009758
   140004b86:	mov    eax,DWORD PTR [rip+0x4528]        # 0x1400090b4
   140004b8c:	mov    DWORD PTR [rcx],eax
   140004b8e:	mov    rcx,QWORD PTR [rip+0x2653]        # 0x1400071e8
   140004b95:	mov    eax,DWORD PTR [rip+0x450d]        # 0x1400090a8
   140004b9b:	mov    DWORD PTR [rcx],eax
   140004b9d:	call   0x1400052e0
   140004ba2:	cmp    DWORD PTR [rip+0x4457],0x0        # 0x140009000
   140004ba9:	jne    0x140004bb8
   140004bab:	lea    rcx,[rip+0x72e]        # 0x1400052e0
   140004bb2:	call   QWORD PTR [rip+0x26d8]        # 0x140007290
   140004bb8:	xor    eax,eax
   140004bba:	add    rsp,0x28
   140004bbe:	ret    
   140004bbf:	int3   
   140004bc0:	int3   
   140004bc1:	int3   
   140004bc2:	int3   
   140004bc3:	int3   
   140004bc4:	int3   
   140004bc5:	int3   
   140004bc6:	int3   
   140004bc7:	int3   
   140004bc8:	int3   
   140004bc9:	int3   
   140004bca:	int3   
   140004bcb:	int3   
   140004bcc:	int3   
   140004bcd:	int3   
   140004bce:	int3   
   140004bcf:	int3   
   140004bd0:	sub    rsp,0x38
   140004bd4:	mov    eax,DWORD PTR [rip+0x44d6]        # 0x1400090b0
   140004bda:	lea    r8,[rip+0x44b7]        # 0x140009098
   140004be1:	mov    r9d,DWORD PTR [rip+0x44c4]        # 0x1400090ac
   140004be8:	lea    rdx,[rip+0x44a1]        # 0x140009090
   140004bef:	mov    DWORD PTR [rip+0x44af],eax        # 0x1400090a4
   140004bf5:	lea    rcx,[rip+0x448c]        # 0x140009088
   140004bfc:	lea    rax,[rip+0x44a1]        # 0x1400090a4
   140004c03:	mov    QWORD PTR [rsp+0x20],rax
   140004c08:	call   QWORD PTR [rip+0x2642]        # 0x140007250
   140004c0e:	mov    DWORD PTR [rip+0x4478],eax        # 0x14000908c
   140004c14:	add    rsp,0x38
   140004c18:	ret    
   140004c19:	int3   
   140004c1a:	int3   
   140004c1b:	int3   
   140004c1c:	int3   
   140004c1d:	int3   
   140004c1e:	int3   
   140004c1f:	int3   
   140004c20:	mov    QWORD PTR [rsp+0x8],rbx
   140004c25:	mov    QWORD PTR [rsp+0x10],rsi
   140004c2a:	mov    QWORD PTR [rsp+0x18],rdi
   140004c2f:	push   r12
   140004c31:	push   r14
   140004c33:	push   r15
   140004c35:	sub    rsp,0xb0
   140004c3c:	xor    r15d,r15d
   140004c3f:	mov    DWORD PTR [rsp+0x20],r15d
   140004c44:	lea    rcx,[rsp+0x40]
   140004c49:	call   QWORD PTR [rip+0x24b9]        # 0x140007108
   140004c4f:	nop
   140004c50:	mov    rax,QWORD PTR gs:0x30
   140004c59:	mov    rbx,QWORD PTR [rax+0x8]
   140004c5d:	mov    r14d,r15d
   140004c60:	xor    eax,eax
   140004c62:	lock cmpxchg QWORD PTR [rip+0x4ad5],rbx        # 0x140009740
   140004c6b:	je     0x140004c89
   140004c6d:	cmp    rax,rbx
   140004c70:	jne    0x140004c7c
   140004c72:	mov    edi,0x1
   140004c77:	mov    r14d,edi
   140004c7a:	jmp    0x140004c8e
   140004c7c:	mov    ecx,0x3e8
   140004c81:	call   QWORD PTR [rip+0x2489]        # 0x140007110
   140004c87:	jmp    0x140004c60
   140004c89:	mov    edi,0x1
   140004c8e:	mov    eax,DWORD PTR [rip+0x4ab4]        # 0x140009748
   140004c94:	cmp    eax,edi
   140004c96:	jne    0x140004ca6
   140004c98:	mov    esi,0x1f
   140004c9d:	mov    ecx,esi
   140004c9f:	call   0x140005114
   140004ca4:	jmp    0x140004d17
   140004ca6:	mov    eax,DWORD PTR [rip+0x4a9c]        # 0x140009748
   140004cac:	test   eax,eax
   140004cae:	jne    0x140004d0c
   140004cb0:	mov    DWORD PTR [rip+0x4a92],edi        # 0x140009748
   140004cb6:	lea    r12,[rip+0x268b]        # 0x140007348
   140004cbd:	lea    rbx,[rip+0x266c]        # 0x140007330
   140004cc4:	mov    QWORD PTR [rsp+0x30],rbx
   140004cc9:	mov    eax,r15d
   140004ccc:	mov    DWORD PTR [rsp+0x24],eax
   140004cd0:	cmp    rbx,r12
   140004cd3:	jae    0x140004cfe
   140004cd5:	test   eax,eax
   140004cd7:	jne    0x140004d02
   140004cd9:	mov    rsi,QWORD PTR [rbx]
   140004cdc:	test   rsi,rsi
   140004cdf:	je     0x140004cf3
   140004ce1:	mov    rcx,rsi
   140004ce4:	mov    rax,QWORD PTR [rip+0x25fd]        # 0x1400072e8
   140004ceb:	call   rax
   140004ced:	call   rsi
   140004cef:	mov    DWORD PTR [rsp+0x24],eax
   140004cf3:	add    rbx,0x8
   140004cf7:	mov    QWORD PTR [rsp+0x30],rbx
   140004cfc:	jmp    0x140004cd0
   140004cfe:	test   eax,eax
   140004d00:	je     0x140004d12
   140004d02:	mov    eax,0xff
   140004d07:	jmp    0x140004e73
   140004d0c:	mov    DWORD PTR [rip+0x4372],edi        # 0x140009084
   140004d12:	mov    esi,0x1f
   140004d17:	mov    eax,DWORD PTR [rip+0x4a2b]        # 0x140009748
   140004d1d:	cmp    eax,edi
   140004d1f:	jne    0x140004d3e
   140004d21:	lea    rdx,[rip+0x2600]        # 0x140007328
   140004d28:	lea    rcx,[rip+0x25c9]        # 0x1400072f8
   140004d2f:	call   0x1400052ea
   140004d34:	mov    DWORD PTR [rip+0x4a0a],0x2        # 0x140009748
   140004d3e:	test   r14d,r14d
   140004d41:	jne    0x140004d4d
   140004d43:	mov    rax,r15
   140004d46:	xchg   QWORD PTR [rip+0x49f3],rax        # 0x140009740
   140004d4d:	cmp    QWORD PTR [rip+0x4a0c],r15        # 0x140009760
   140004d54:	je     0x140004d84
   140004d56:	lea    rcx,[rip+0x4a03]        # 0x140009760
   140004d5d:	call   0x140005170
   140004d62:	test   eax,eax
   140004d64:	je     0x140004d84
   140004d66:	mov    rbx,QWORD PTR [rip+0x49f3]        # 0x140009760
   140004d6d:	mov    rcx,rbx
   140004d70:	mov    rax,QWORD PTR [rip+0x2571]        # 0x1400072e8
   140004d77:	call   rax
   140004d79:	xor    r8d,r8d
   140004d7c:	lea    edx,[r8+0x2]
   140004d80:	xor    ecx,ecx
   140004d82:	call   rbx
   140004d84:	mov    rax,QWORD PTR [rip+0x246d]        # 0x1400071f8
   140004d8b:	mov    rdx,QWORD PTR [rax]
   140004d8e:	test   rdx,rdx
   140004d91:	jne    0x140004d9d
   140004d93:	mov    eax,0xff
   140004d98:	jmp    0x140004e73
   140004d9d:	mov    QWORD PTR [rsp+0x28],rdx
   140004da2:	mov    ecx,DWORD PTR [rsp+0x20]
   140004da6:	cmp    WORD PTR [rdx],0x20
   140004daa:	ja     0x140004e24
   140004dac:	cmp    WORD PTR [rdx],r15w
   140004db0:	je     0x140004db6
   140004db2:	test   ecx,ecx
   140004db4:	jne    0x140004e24
   140004db6:	movzx  eax,WORD PTR [rdx]
   140004db9:	sub    ax,di
   140004dbc:	cmp    ax,si
   140004dbf:	ja     0x140004dcc
   140004dc1:	add    rdx,0x2
   140004dc5:	mov    QWORD PTR [rsp+0x28],rdx
   140004dca:	jmp    0x140004db6
   140004dcc:	mov    ecx,DWORD PTR [rsp+0x7c]
   140004dd0:	movzx  eax,WORD PTR [rsp+0x80]
   140004dd8:	mov    r9d,0xa
   140004dde:	and    cl,dil
   140004de1:	cmovne r9d,eax
   140004de5:	mov    r8,rdx
   140004de8:	xor    edx,edx
   140004dea:	lea    rcx,[rip+0xffffffffffffb20f]        # 0x140000000
   140004df1:	call   0x140003b50
   140004df6:	mov    DWORD PTR [rip+0x4284],eax        # 0x140009080
   140004dfc:	cmp    DWORD PTR [rip+0x429d],r15d        # 0x1400090a0
   140004e03:	jne    0x140004e0d
   140004e05:	mov    ecx,eax
   140004e07:	call   QWORD PTR [rip+0x2413]        # 0x140007220
   140004e0d:	cmp    DWORD PTR [rip+0x4270],r15d        # 0x140009084
   140004e14:	jne    0x140004e22
   140004e16:	call   QWORD PTR [rip+0x23f4]        # 0x140007210
   140004e1c:	mov    eax,DWORD PTR [rip+0x425e]        # 0x140009080
   140004e22:	jmp    0x140004e73
   140004e24:	cmp    WORD PTR [rdx],0x22
   140004e28:	jne    0x140004e38
   140004e2a:	mov    eax,r15d
   140004e2d:	test   ecx,ecx
   140004e2f:	sete   al
   140004e32:	mov    ecx,eax
   140004e34:	mov    DWORD PTR [rsp+0x20],eax
   140004e38:	add    rdx,0x2
   140004e3c:	mov    QWORD PTR [rsp+0x28],rdx
   140004e41:	jmp    0x140004da6
   140004e46:	mov    DWORD PTR [rip+0x4234],eax        # 0x140009080
   140004e4c:	cmp    DWORD PTR [rip+0x424d],0x0        # 0x1400090a0
   140004e53:	jne    0x140004e5e
   140004e55:	mov    ecx,eax
   140004e57:	call   QWORD PTR [rip+0x23bb]        # 0x140007218
   140004e5d:	int3   
   140004e5e:	cmp    DWORD PTR [rip+0x421f],0x0        # 0x140009084
   140004e65:	jne    0x140004e73
   140004e67:	call   QWORD PTR [rip+0x23a3]        # 0x140007210
   140004e6d:	mov    eax,DWORD PTR [rip+0x420d]        # 0x140009080
   140004e73:	lea    r11,[rsp+0xb0]
   140004e7b:	mov    rbx,QWORD PTR [r11+0x20]
   140004e7f:	mov    rsi,QWORD PTR [r11+0x28]
   140004e83:	mov    rdi,QWORD PTR [r11+0x30]
   140004e87:	mov    rsp,r11
   140004e8a:	pop    r15
   140004e8c:	pop    r14
   140004e8e:	pop    r12
   140004e90:	ret    
   140004e91:	int3   
   140004e92:	int3   
   140004e93:	int3   
   140004e94:	int3   
   140004e95:	int3   
   140004e96:	int3   
   140004e97:	int3   
   140004e98:	int3   
   140004e99:	int3   
   140004e9a:	int3   
   140004e9b:	int3   
   140004e9c:	int3   
   140004e9d:	int3   
   140004e9e:	int3   
   140004e9f:	int3   
   140004ea0:	sub    rsp,0x28
   140004ea4:	call   0x140005204
   140004ea9:	add    rsp,0x28
   140004ead:	jmp    0x140004c20
   140004eb2:	int3   
   140004eb3:	int3   
   140004eb4:	int3   
   140004eb5:	int3   
   140004eb6:	int3   
   140004eb7:	int3   
   140004eb8:	int3   
   140004eb9:	int3   
   140004eba:	int3   
   140004ebb:	int3   
   140004ebc:	int3   
   140004ebd:	int3   
   140004ebe:	int3   
   140004ebf:	int3   
   140004ec0:	int3   
   140004ec1:	int3   
   140004ec2:	int3   
   140004ec3:	int3   
   140004ec4:	int3   
   140004ec5:	int3   
   140004ec6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004ed0:	cmp    rcx,QWORD PTR [rip+0x4131]        # 0x140009008
   140004ed7:	jne    0x140004ee9
   140004ed9:	rol    rcx,0x10
   140004edd:	test   cx,0xffff
   140004ee2:	jne    0x140004ee5
   140004ee4:	ret    
   140004ee5:	ror    rcx,0x10
   140004ee9:	jmp    0x140005340
   140004eee:	int3   
   140004eef:	int3   
   140004ef0:	int3   
   140004ef1:	int3   
   140004ef2:	int3   
   140004ef3:	int3   
   140004ef4:	mov    QWORD PTR [rsp+0x8],rbx
   140004ef9:	push   rdi
   140004efa:	sub    rsp,0x20
   140004efe:	mov    rdi,rcx
   140004f01:	mov    rax,QWORD PTR [rip+0x4850]        # 0x140009758
   140004f08:	mov    QWORD PTR [rsp+0x38],rax
   140004f0d:	cmp    rax,0xffffffffffffffff
   140004f11:	jne    0x140004f2a
   140004f13:	mov    rbx,QWORD PTR [rip+0x22ee]        # 0x140007208
   140004f1a:	mov    rcx,rbx
   140004f1d:	call   QWORD PTR [rip+0x23c5]        # 0x1400072e8
   140004f23:	mov    rcx,rdi
   140004f26:	call   rbx
   140004f28:	jmp    0x140004f87
   140004f2a:	mov    ecx,0x8
   140004f2f:	call   0x1400054b8
   140004f34:	nop
   140004f35:	mov    rax,QWORD PTR [rip+0x481c]        # 0x140009758
   140004f3c:	mov    QWORD PTR [rsp+0x38],rax
   140004f41:	mov    rax,QWORD PTR [rip+0x4808]        # 0x140009750
   140004f48:	mov    QWORD PTR [rsp+0x40],rax
   140004f4d:	lea    r8,[rsp+0x40]
   140004f52:	lea    rdx,[rsp+0x38]
   140004f57:	mov    rcx,rdi
   140004f5a:	call   0x1400054d0
   140004f5f:	mov    rbx,rax
   140004f62:	mov    rdx,QWORD PTR [rsp+0x38]
   140004f67:	mov    QWORD PTR [rip+0x47ea],rdx        # 0x140009758
   140004f6e:	mov    rdx,QWORD PTR [rsp+0x40]
   140004f73:	mov    QWORD PTR [rip+0x47d6],rdx        # 0x140009750
   140004f7a:	mov    ecx,0x8
   140004f7f:	call   0x1400054c4
   140004f84:	mov    rax,rbx
   140004f87:	mov    rbx,QWORD PTR [rsp+0x30]
   140004f8c:	add    rsp,0x20
   140004f90:	pop    rdi
   140004f91:	ret    
   140004f92:	int3   
   140004f93:	int3   
   140004f94:	int3   
   140004f95:	int3   
   140004f96:	int3   
   140004f97:	int3   
   140004f98:	sub    rsp,0x28
   140004f9c:	call   0x140004ef4
   140004fa1:	neg    rax
   140004fa4:	sbb    eax,eax
   140004fa6:	neg    eax
   140004fa8:	dec    eax
   140004faa:	add    rsp,0x28
   140004fae:	ret    
   140004faf:	int3   
   140004fb0:	int3   
   140004fb1:	int3   
   140004fb2:	int3   
   140004fb3:	int3   
   140004fb4:	int3   
   140004fb5:	int3   
   140004fb6:	int3   
   140004fb7:	int3   
   140004fb8:	int3   
   140004fb9:	int3   
   140004fba:	int3   
   140004fbb:	int3   
   140004fbc:	int3   
   140004fbd:	int3   
   140004fbe:	int3   
   140004fbf:	int3   
   140004fc0:	jmp    QWORD PTR [rip+0x22aa]        # 0x140007270
   140004fc6:	int3   
   140004fc7:	int3   
   140004fc8:	int3   
   140004fc9:	int3   
   140004fca:	int3   
   140004fcb:	int3   
   140004fcc:	sub    rsp,0x38
   140004fd0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004fd9:	call   0x140001338
   140004fde:	nop
   140004fdf:	jmp    0x140004fe6
   140004fe1:	mov    rax,QWORD PTR [rsp+0x50]
   140004fe6:	add    rsp,0x38
   140004fea:	ret    
   140004feb:	int3   
   140004fec:	int3   
   140004fed:	int3   
   140004fee:	int3   
   140004fef:	int3   
   140004ff0:	int3   
   140004ff1:	int3   
   140004ff2:	int3   
   140004ff3:	int3   
   140004ff4:	int3   
   140004ff5:	int3   
   140004ff6:	int3   
   140004ff7:	int3   
   140004ff8:	int3   
   140004ff9:	int3   
   140004ffa:	int3   
   140004ffb:	int3   
   140004ffc:	int3   
   140004ffd:	int3   
   140004ffe:	int3   
   140004fff:	int3   
   140005000:	sub    rsp,0x28
   140005004:	mov    rax,QWORD PTR [rcx]
   140005007:	cmp    DWORD PTR [rax],0xe06d7363
   14000500d:	jne    0x140005032
   14000500f:	cmp    DWORD PTR [rax+0x18],0x4
   140005013:	jne    0x140005032
   140005015:	mov    ecx,DWORD PTR [rax+0x20]
   140005018:	lea    eax,[rcx-0x19930520]
   14000501e:	cmp    eax,0x2
   140005021:	jbe    0x14000502b
   140005023:	cmp    ecx,0x1994000
   140005029:	jne    0x140005032
   14000502b:	call   QWORD PTR [rip+0x2207]        # 0x140007238
   140005031:	int3   
   140005032:	xor    eax,eax
   140005034:	add    rsp,0x28
   140005038:	ret    
   140005039:	int3   
   14000503a:	int3   
   14000503b:	int3   
   14000503c:	int3   
   14000503d:	int3   
   14000503e:	int3   
   14000503f:	int3   
   140005040:	sub    rsp,0x28
   140005044:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140005000
   14000504b:	call   QWORD PTR [rip+0x20af]        # 0x140007100
   140005051:	xor    eax,eax
   140005053:	add    rsp,0x28
   140005057:	ret    
   140005058:	int3   
   140005059:	int3   
   14000505a:	int3   
   14000505b:	int3   
   14000505c:	int3   
   14000505d:	int3   
   14000505e:	jmp    QWORD PTR [rip+0x21fc]        # 0x140007260
   140005064:	int3   
   140005065:	int3   
   140005066:	int3   
   140005067:	int3   
   140005068:	int3   
   140005069:	int3   
   14000506a:	int3   
   14000506b:	int3   
   14000506c:	sub    rsp,0x18
   140005070:	xor    edx,edx
   140005072:	lea    rax,[rcx-0x1]
   140005076:	cmp    rax,0xfffffffffffffffd
   14000507a:	ja     0x1400050b8
   14000507c:	mov    eax,0x5a4d
   140005081:	cmp    WORD PTR [rcx],ax
   140005084:	jne    0x1400050b0
   140005086:	cmp    DWORD PTR [rcx+0x3c],edx
   140005089:	jl     0x1400050b0
   14000508b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140005092:	jae    0x1400050b0
   140005094:	movsxd rax,DWORD PTR [rcx+0x3c]
   140005098:	add    rax,rcx
   14000509b:	mov    QWORD PTR [rsp],rax
   14000509f:	cmp    DWORD PTR [rax],0x4550
   1400050a5:	cmovne rax,rdx
   1400050a9:	mov    rdx,rax
   1400050ac:	mov    QWORD PTR [rsp],rax
   1400050b0:	jmp    0x1400050b8
   1400050b2:	xor    edx,edx
   1400050b4:	mov    QWORD PTR [rsp],rdx
   1400050b8:	mov    rax,rdx
   1400050bb:	add    rsp,0x18
   1400050bf:	ret    
   1400050c0:	int3   
   1400050c1:	int3   
   1400050c2:	int3   
   1400050c3:	int3   
   1400050c4:	int3   
   1400050c5:	int3   
   1400050c6:	int3   
   1400050c7:	int3   
   1400050c8:	rex push rbx
   1400050ca:	sub    rsp,0x20
   1400050ce:	mov    ebx,ecx
   1400050d0:	xor    ecx,ecx
   1400050d2:	call   QWORD PTR [rip+0x2020]        # 0x1400070f8
   1400050d8:	test   rax,rax
   1400050db:	je     0x140005105
   1400050dd:	mov    rcx,rax
   1400050e0:	call   0x14000506c
   1400050e5:	test   rax,rax
   1400050e8:	je     0x140005105
   1400050ea:	mov    ecx,0x2
   1400050ef:	cmp    WORD PTR [rax+0x5c],cx
   1400050f3:	jne    0x1400050f9
   1400050f5:	mov    eax,ecx
   1400050f7:	jmp    0x140005107
   1400050f9:	cmp    WORD PTR [rax+0x5c],0x3
   1400050fe:	mov    eax,0x1
   140005103:	je     0x140005107
   140005105:	mov    eax,ebx
   140005107:	add    rsp,0x20
   14000510b:	pop    rbx
   14000510c:	ret    
   14000510d:	int3   
   14000510e:	int3   
   14000510f:	int3   
   140005110:	int3   
   140005111:	int3   
   140005112:	int3   
   140005113:	int3   
   140005114:	jmp    QWORD PTR [rip+0x213e]        # 0x140007258
   14000511a:	int3   
   14000511b:	int3   
   14000511c:	int3   
   14000511d:	int3   
   14000511e:	int3   
   14000511f:	int3   
   140005120:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005124:	xor    r9d,r9d
   140005127:	add    r8,rcx
   14000512a:	mov    r10,rdx
   14000512d:	movzx  eax,WORD PTR [r8+0x14]
   140005132:	movzx  r11d,WORD PTR [r8+0x6]
   140005137:	add    rax,0x18
   14000513b:	add    rax,r8
   14000513e:	test   r11d,r11d
   140005141:	je     0x140005161
   140005143:	mov    edx,DWORD PTR [rax+0xc]
   140005146:	cmp    r10,rdx
   140005149:	jb     0x140005155
   14000514b:	mov    ecx,DWORD PTR [rax+0x8]
   14000514e:	add    ecx,edx
   140005150:	cmp    r10,rcx
   140005153:	jb     0x140005163
   140005155:	inc    r9d
   140005158:	add    rax,0x28
   14000515c:	cmp    r9d,r11d
   14000515f:	jb     0x140005143
   140005161:	xor    eax,eax
   140005163:	ret    
   140005164:	int3   
   140005165:	int3   
   140005166:	int3   
   140005167:	int3   
   140005168:	int3   
   140005169:	int3   
   14000516a:	int3   
   14000516b:	int3   
   14000516c:	int3   
   14000516d:	int3   
   14000516e:	int3   
   14000516f:	int3   
   140005170:	mov    QWORD PTR [rsp+0x8],rbx
   140005175:	push   rdi
   140005176:	sub    rsp,0x20
   14000517a:	mov    rbx,rcx
   14000517d:	lea    rdi,[rip+0xffffffffffffae7c]        # 0x140000000
   140005184:	mov    rcx,rdi
   140005187:	call   0x1400051d0
   14000518c:	test   eax,eax
   14000518e:	je     0x1400051b2
   140005190:	sub    rbx,rdi
   140005193:	mov    rdx,rbx
   140005196:	mov    rcx,rdi
   140005199:	call   0x140005120
   14000519e:	test   rax,rax
   1400051a1:	je     0x1400051b2
   1400051a3:	mov    eax,DWORD PTR [rax+0x24]
   1400051a6:	shr    eax,0x1f
   1400051a9:	not    eax
   1400051ab:	and    eax,0x1
   1400051ae:	jmp    0x1400051b2
   1400051b0:	xor    eax,eax
   1400051b2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400051b7:	add    rsp,0x20
   1400051bb:	pop    rdi
   1400051bc:	ret    
   1400051bd:	int3   
   1400051be:	int3   
   1400051bf:	int3   
   1400051c0:	int3   
   1400051c1:	int3   
   1400051c2:	int3   
   1400051c3:	int3   
   1400051c4:	int3   
   1400051c5:	int3   
   1400051c6:	int3   
   1400051c7:	int3   
   1400051c8:	int3   
   1400051c9:	int3   
   1400051ca:	int3   
   1400051cb:	int3   
   1400051cc:	int3   
   1400051cd:	int3   
   1400051ce:	int3   
   1400051cf:	int3   
   1400051d0:	mov    rax,rcx
   1400051d3:	mov    ecx,0x5a4d
   1400051d8:	cmp    WORD PTR [rax],cx
   1400051db:	je     0x1400051e0
   1400051dd:	xor    eax,eax
   1400051df:	ret    
   1400051e0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400051e4:	add    rcx,rax
   1400051e7:	xor    eax,eax
   1400051e9:	cmp    DWORD PTR [rcx],0x4550
   1400051ef:	jne    0x1400051fd
   1400051f1:	mov    edx,0x20b
   1400051f6:	cmp    WORD PTR [rcx+0x18],dx
   1400051fa:	sete   al
   1400051fd:	ret    
   1400051fe:	int3   
   1400051ff:	int3   
   140005200:	int3   
   140005201:	int3   
   140005202:	int3   
   140005203:	int3   
   140005204:	mov    QWORD PTR [rsp+0x20],rbx
   140005209:	push   rbp
   14000520a:	mov    rbp,rsp
   14000520d:	sub    rsp,0x20
   140005211:	and    QWORD PTR [rbp+0x18],0x0
   140005216:	movabs rbx,0x2b992ddfa232
   140005220:	mov    rax,QWORD PTR [rip+0x3de1]        # 0x140009008
   140005227:	cmp    rax,rbx
   14000522a:	jne    0x1400052bf
   140005230:	lea    rcx,[rbp+0x18]
   140005234:	call   QWORD PTR [rip+0x1e9e]        # 0x1400070d8
   14000523a:	mov    rax,QWORD PTR [rbp+0x18]
   14000523e:	mov    QWORD PTR [rbp+0x10],rax
   140005242:	call   QWORD PTR [rip+0x1ea0]        # 0x1400070e8
   140005248:	mov    eax,eax
   14000524a:	xor    QWORD PTR [rbp+0x10],rax
   14000524e:	call   QWORD PTR [rip+0x1e8c]        # 0x1400070e0
   140005254:	mov    eax,eax
   140005256:	xor    QWORD PTR [rbp+0x10],rax
   14000525a:	call   QWORD PTR [rip+0x1e70]        # 0x1400070d0
   140005260:	mov    eax,eax
   140005262:	shl    rax,0x18
   140005266:	xor    QWORD PTR [rbp+0x10],rax
   14000526a:	call   QWORD PTR [rip+0x1e60]        # 0x1400070d0
   140005270:	mov    eax,eax
   140005272:	lea    rcx,[rbp+0x10]
   140005276:	xor    rax,QWORD PTR [rbp+0x10]
   14000527a:	xor    rax,rcx
   14000527d:	lea    rcx,[rbp+0x20]
   140005281:	mov    QWORD PTR [rbp+0x10],rax
   140005285:	call   QWORD PTR [rip+0x1e65]        # 0x1400070f0
   14000528b:	mov    eax,DWORD PTR [rbp+0x20]
   14000528e:	movabs rcx,0xffffffffffff
   140005298:	shl    rax,0x20
   14000529c:	xor    rax,QWORD PTR [rbp+0x20]
   1400052a0:	xor    rax,QWORD PTR [rbp+0x10]
   1400052a4:	and    rax,rcx
   1400052a7:	movabs rcx,0x2b992ddfa233
   1400052b1:	cmp    rax,rbx
   1400052b4:	cmove  rax,rcx
   1400052b8:	mov    QWORD PTR [rip+0x3d49],rax        # 0x140009008
   1400052bf:	mov    rbx,QWORD PTR [rsp+0x48]
   1400052c4:	not    rax
   1400052c7:	mov    QWORD PTR [rip+0x3d42],rax        # 0x140009010
   1400052ce:	add    rsp,0x20
   1400052d2:	pop    rbp
   1400052d3:	ret    
   1400052d4:	int3   
   1400052d5:	int3   
   1400052d6:	int3   
   1400052d7:	int3   
   1400052d8:	int3   
   1400052d9:	int3   
   1400052da:	int3   
   1400052db:	int3   
   1400052dc:	int3   
   1400052dd:	int3   
   1400052de:	int3   
   1400052df:	int3   
   1400052e0:	xor    eax,eax
   1400052e2:	ret    
   1400052e3:	int3   
   1400052e4:	int3   
   1400052e5:	int3   
   1400052e6:	int3   
   1400052e7:	int3   
   1400052e8:	int3   
   1400052e9:	int3   
   1400052ea:	jmp    QWORD PTR [rip+0x1f98]        # 0x140007288
   1400052f0:	int3   
   1400052f1:	int3   
   1400052f2:	int3   
   1400052f3:	int3   
   1400052f4:	int3   
   1400052f5:	int3   
   1400052f6:	jmp    QWORD PTR [rip+0x1f4c]        # 0x140007248
   1400052fc:	int3   
   1400052fd:	int3   
   1400052fe:	int3   
   1400052ff:	int3   
   140005300:	int3   
   140005301:	int3   
   140005302:	int3   
   140005303:	int3   
   140005304:	rex push rbx
   140005306:	sub    rsp,0x20
   14000530a:	mov    rbx,rcx
   14000530d:	xor    ecx,ecx
   14000530f:	call   QWORD PTR [rip+0x1deb]        # 0x140007100
   140005315:	mov    rcx,rbx
   140005318:	call   QWORD PTR [rip+0x1daa]        # 0x1400070c8
   14000531e:	call   QWORD PTR [rip+0x1d9c]        # 0x1400070c0
   140005324:	mov    rcx,rax
   140005327:	mov    edx,0xc0000409
   14000532c:	add    rsp,0x20
   140005330:	pop    rbx
   140005331:	rex.W jmp QWORD PTR [rip+0x1e00]        # 0x140007138
   140005338:	int3   
   140005339:	int3   
   14000533a:	int3   
   14000533b:	int3   
   14000533c:	int3   
   14000533d:	int3   
   14000533e:	int3   
   14000533f:	int3   
   140005340:	mov    QWORD PTR [rsp+0x8],rcx
   140005345:	sub    rsp,0x88
   14000534c:	lea    rcx,[rip+0x3e0d]        # 0x140009160
   140005353:	call   QWORD PTR [rip+0x1f4f]        # 0x1400072a8
   140005359:	mov    rax,QWORD PTR [rip+0x3ef8]        # 0x140009258
   140005360:	mov    QWORD PTR [rsp+0x48],rax
   140005365:	xor    r8d,r8d
   140005368:	lea    rdx,[rsp+0x50]
   14000536d:	mov    rcx,QWORD PTR [rsp+0x48]
   140005372:	call   QWORD PTR [rip+0x1f38]        # 0x1400072b0
   140005378:	mov    QWORD PTR [rsp+0x40],rax
   14000537d:	cmp    QWORD PTR [rsp+0x40],0x0
   140005383:	je     0x1400053c7
   140005385:	mov    QWORD PTR [rsp+0x38],0x0
   14000538e:	lea    rax,[rsp+0x58]
   140005393:	mov    QWORD PTR [rsp+0x30],rax
   140005398:	lea    rax,[rsp+0x60]
   14000539d:	mov    QWORD PTR [rsp+0x28],rax
   1400053a2:	lea    rax,[rip+0x3db7]        # 0x140009160
   1400053a9:	mov    QWORD PTR [rsp+0x20],rax
   1400053ae:	mov    r9,QWORD PTR [rsp+0x40]
   1400053b3:	mov    r8,QWORD PTR [rsp+0x48]
   1400053b8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400053bd:	xor    ecx,ecx
   1400053bf:	call   QWORD PTR [rip+0x1ef3]        # 0x1400072b8
   1400053c5:	jmp    0x1400053ea
   1400053c7:	mov    rax,QWORD PTR [rip+0x3e2a]        # 0x1400091f8
   1400053ce:	mov    rax,QWORD PTR [rax]
   1400053d1:	mov    QWORD PTR [rip+0x3e80],rax        # 0x140009258
   1400053d8:	mov    rax,QWORD PTR [rip+0x3e19]        # 0x1400091f8
   1400053df:	add    rax,0x8
   1400053e3:	mov    QWORD PTR [rip+0x3e0e],rax        # 0x1400091f8
   1400053ea:	mov    rax,QWORD PTR [rip+0x3e67]        # 0x140009258
   1400053f1:	mov    QWORD PTR [rip+0x3cd8],rax        # 0x1400090d0
   1400053f8:	mov    rax,QWORD PTR [rsp+0x90]
   140005400:	mov    QWORD PTR [rip+0x3dd9],rax        # 0x1400091e0
   140005407:	mov    DWORD PTR [rip+0x3caf],0xc0000409        # 0x1400090c0
   140005411:	mov    DWORD PTR [rip+0x3ca9],0x1        # 0x1400090c4
   14000541b:	mov    DWORD PTR [rip+0x3cb3],0x3        # 0x1400090d8
   140005425:	mov    eax,0x8
   14000542a:	imul   rax,rax,0x0
   14000542e:	lea    rcx,[rip+0x3cab]        # 0x1400090e0
   140005435:	mov    QWORD PTR [rcx+rax*1],0x2
   14000543d:	mov    eax,0x8
   140005442:	imul   rax,rax,0x1
   140005446:	lea    rcx,[rip+0x3c93]        # 0x1400090e0
   14000544d:	mov    rdx,QWORD PTR [rip+0x3bb4]        # 0x140009008
   140005454:	mov    QWORD PTR [rcx+rax*1],rdx
   140005458:	mov    eax,0x8
   14000545d:	imul   rax,rax,0x2
   140005461:	lea    rcx,[rip+0x3c78]        # 0x1400090e0
   140005468:	mov    rdx,QWORD PTR [rip+0x3ba1]        # 0x140009010
   14000546f:	mov    QWORD PTR [rcx+rax*1],rdx
   140005473:	mov    eax,0x8
   140005478:	imul   rax,rax,0x0
   14000547c:	mov    rcx,QWORD PTR [rip+0x3b85]        # 0x140009008
   140005483:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005488:	mov    eax,0x8
   14000548d:	imul   rax,rax,0x1
   140005491:	mov    rcx,QWORD PTR [rip+0x3b78]        # 0x140009010
   140005498:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000549d:	lea    rcx,[rip+0x1fa4]        # 0x140007448
   1400054a4:	call   0x140005304
   1400054a9:	add    rsp,0x88
   1400054b0:	ret    
   1400054b1:	int3   
   1400054b2:	int3   
   1400054b3:	int3   
   1400054b4:	int3   
   1400054b5:	int3   
   1400054b6:	int3   
   1400054b7:	int3   
   1400054b8:	jmp    QWORD PTR [rip+0x1d22]        # 0x1400071e0
   1400054be:	int3   
   1400054bf:	int3   
   1400054c0:	int3   
   1400054c1:	int3   
   1400054c2:	int3   
   1400054c3:	int3   
   1400054c4:	jmp    QWORD PTR [rip+0x1d36]        # 0x140007200
   1400054ca:	int3   
   1400054cb:	int3   
   1400054cc:	int3   
   1400054cd:	int3   
   1400054ce:	int3   
   1400054cf:	int3   
   1400054d0:	jmp    QWORD PTR [rip+0x1d6a]        # 0x140007240
   1400054d6:	int3   
   1400054d7:	int3   
   1400054d8:	int3   
   1400054d9:	int3   
   1400054da:	int3   
   1400054db:	int3   
   1400054dc:	jmp    QWORD PTR [rip+0x1d4e]        # 0x140007230
   1400054e2:	int3   
   1400054e3:	int3   
   1400054e4:	int3   
   1400054e5:	int3   
   1400054e6:	int3   
   1400054e7:	int3   
   1400054e8:	int3   
   1400054e9:	int3   
   1400054ea:	int3   
   1400054eb:	int3   
   1400054ec:	int3   
   1400054ed:	int3   
   1400054ee:	int3   
   1400054ef:	int3   
   1400054f0:	int3   
   1400054f1:	int3   
   1400054f2:	int3   
   1400054f3:	int3   
   1400054f4:	int3   
   1400054f5:	int3   
   1400054f6:	int3   
   1400054f7:	int3   
   1400054f8:	sub    rsp,0x28
   1400054fc:	mov    r8,QWORD PTR [r9+0x38]
   140005500:	mov    rcx,rdx
   140005503:	mov    rdx,r9
   140005506:	call   0x14000551c
   14000550b:	mov    eax,0x1
   140005510:	add    rsp,0x28
   140005514:	ret    
   140005515:	int3   
   140005516:	int3   
   140005517:	int3   
   140005518:	int3   
   140005519:	int3   
   14000551a:	int3   
   14000551b:	int3   
   14000551c:	rex push rbx
   14000551e:	sub    rsp,0x20
   140005522:	mov    r11d,DWORD PTR [r8]
   140005525:	mov    rbx,rdx
   140005528:	and    r11d,0xfffffff8
   14000552c:	mov    r9,rcx
   14000552f:	test   BYTE PTR [r8],0x4
   140005533:	mov    r10,rcx
   140005536:	je     0x14000554b
   140005538:	mov    eax,DWORD PTR [r8+0x8]
   14000553c:	movsxd r10,DWORD PTR [r8+0x4]
   140005540:	neg    eax
   140005542:	add    r10,rcx
   140005545:	movsxd rcx,eax
   140005548:	and    r10,rcx
   14000554b:	movsxd rax,r11d
   14000554e:	mov    rdx,QWORD PTR [rax+r10*1]
   140005552:	mov    rax,QWORD PTR [rbx+0x10]
   140005556:	mov    ecx,DWORD PTR [rax+0x8]
   140005559:	add    rcx,QWORD PTR [rbx+0x8]
   14000555d:	test   BYTE PTR [rcx+0x3],0xf
   140005561:	je     0x14000556f
   140005563:	movzx  eax,BYTE PTR [rcx+0x3]
   140005567:	and    eax,0xfffffff0
   14000556a:	cdqe   
   14000556c:	add    r9,rax
   14000556f:	xor    r9,rdx
   140005572:	mov    rcx,r9
   140005575:	add    rsp,0x20
   140005579:	pop    rbx
   14000557a:	jmp    0x140004ed0
   14000557f:	int3   
   140005580:	int3   
   140005581:	int3   
   140005582:	int3   
   140005583:	int3   
   140005584:	int3   
   140005585:	int3   
   140005586:	jmp    QWORD PTR [rip+0x1cf4]        # 0x140007280
   14000558c:	int3   
   14000558d:	int3   
   14000558e:	int3   
   14000558f:	int3   
   140005590:	int3   
   140005591:	int3   
   140005592:	jmp    QWORD PTR [rip+0x1d00]        # 0x140007298
   140005598:	int3   
   140005599:	int3   
   14000559a:	int3   
   14000559b:	int3   
   14000559c:	int3   
   14000559d:	int3   
   14000559e:	int3   
   14000559f:	int3   
   1400055a0:	int3   
   1400055a1:	int3   
   1400055a2:	int3   
   1400055a3:	int3   
   1400055a4:	int3   
   1400055a5:	int3   
   1400055a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400055b0:	jmp    rax
   1400055b2:	int3   
   1400055b3:	int3   
   1400055b4:	int3   
   1400055b5:	int3   
   1400055b6:	int3   
   1400055b7:	int3   
   1400055b8:	int3   
   1400055b9:	int3   
   1400055ba:	int3   
   1400055bb:	int3   
   1400055bc:	int3   
   1400055bd:	int3   
   1400055be:	int3   
   1400055bf:	int3   
   1400055c0:	int3   
   1400055c1:	int3   
   1400055c2:	int3   
   1400055c3:	int3   
   1400055c4:	int3   
   1400055c5:	int3   
   1400055c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400055d0:	rex.W push rax
   1400055d2:	push   rcx
   1400055d3:	push   rdx
   1400055d4:	push   r8
   1400055d6:	push   r9
   1400055d8:	sub    rsp,0x20
   1400055dc:	mov    rcx,rax
   1400055df:	call   QWORD PTR [rip+0x1d03]        # 0x1400072e8
   1400055e5:	add    rsp,0x20
   1400055e9:	pop    r9
   1400055eb:	pop    r8
   1400055ed:	pop    rdx
   1400055ee:	pop    rcx
   1400055ef:	pop    rax
   1400055f0:	ret    
   1400055f1:	int3   
   1400055f2:	int3   
   1400055f3:	int3   
   1400055f4:	int3   
   1400055f5:	int3   
   1400055f6:	int3   
   1400055f7:	int3   
   1400055f8:	int3   
   1400055f9:	int3   
   1400055fa:	int3   
   1400055fb:	int3   
   1400055fc:	int3   
   1400055fd:	int3   
   1400055fe:	int3   
   1400055ff:	int3   
   140005600:	int3   
   140005601:	int3   
   140005602:	int3   
   140005603:	int3   
   140005604:	int3   
   140005605:	int3   
   140005606:	rex push rbp
   140005608:	sub    rsp,0x20
   14000560c:	mov    rbp,rdx
   14000560f:	mov    rax,QWORD PTR [rcx]
   140005612:	mov    rdx,rcx
   140005615:	mov    ecx,DWORD PTR [rax]
   140005617:	call   0x14000505e
   14000561c:	nop
   14000561d:	add    rsp,0x20
   140005621:	pop    rbp
   140005622:	ret    
   140005623:	int3   
   140005624:	int3   
   140005625:	int3   
   140005626:	int3   
   140005627:	int3   
   140005628:	int3   
   140005629:	int3   
   14000562a:	rex push rbp
   14000562c:	sub    rsp,0x20
   140005630:	mov    rbp,rdx
   140005633:	mov    ecx,0x8
   140005638:	call   0x1400054c4
   14000563d:	nop
   14000563e:	add    rsp,0x20
   140005642:	pop    rbp
   140005643:	ret    
   140005644:	int3   
   140005645:	int3   
   140005646:	int3   
   140005647:	int3   
   140005648:	int3   
   140005649:	int3   
   14000564a:	int3   
   14000564b:	mov    QWORD PTR [rsp+0x10],rdx
   140005650:	push   rbp
   140005651:	sub    rsp,0x20
   140005655:	mov    rbp,rdx
   140005658:	and    QWORD PTR [rbp+0x50],0x0
   14000565d:	lea    rax,[rip+0xfffffffffffff97d]        # 0x140004fe1
   140005664:	add    rsp,0x20
   140005668:	pop    rbp
   140005669:	ret    
   14000566a:	int3   
   14000566b:	int3   
   14000566c:	int3   
   14000566d:	int3   
   14000566e:	int3   
   14000566f:	int3   
   140005670:	int3   
   140005671:	int3   
   140005672:	int3   
   140005673:	int3   
   140005674:	int3   
   140005675:	int3   
   140005676:	int3   
   140005677:	int3   
   140005678:	int3   
   140005679:	int3   
   14000567a:	int3   
   14000567b:	int3   
   14000567c:	int3   
   14000567d:	int3   
   14000567e:	int3   
   14000567f:	int3   
   140005680:	rex push rbp
   140005682:	sub    rsp,0x20
   140005686:	mov    rbp,rdx
   140005689:	mov    rax,QWORD PTR [rcx]
   14000568c:	xor    ecx,ecx
   14000568e:	cmp    DWORD PTR [rax],0xc0000005
   140005694:	sete   cl
   140005697:	mov    eax,ecx
   140005699:	add    rsp,0x20
   14000569d:	pop    rbp
   14000569e:	ret    
   14000569f:	int3   
   1400056a0:	int3   
   1400056a1:	int3   
   1400056a2:	int3   
   1400056a3:	int3   
   1400056a4:	int3   
   1400056a5:	int3   
   1400056a6:	int3   
   1400056a7:	int3   
   1400056a8:	int3   
   1400056a9:	int3   
   1400056aa:	int3   
   1400056ab:	int3   
   1400056ac:	int3   
   1400056ad:	int3   
   1400056ae:	int3   
   1400056af:	int3   
   1400056b0:	rex push rdi
   1400056b2:	sub    rsp,0x20
   1400056b6:	cmp    QWORD PTR [rip+0x4062],0x0        # 0x140009720
   1400056be:	je     0x1400056eb
   1400056c0:	cmp    QWORD PTR [rip+0x4050],0x0        # 0x140009718
   1400056c8:	je     0x1400056eb
   1400056ca:	mov    rdi,QWORD PTR [rip+0x4057]        # 0x140009728
   1400056d1:	mov    rcx,rdi
   1400056d4:	call   QWORD PTR [rip+0x1c0e]        # 0x1400072e8
   1400056da:	mov    rcx,QWORD PTR [rip+0x4037]        # 0x140009718
   1400056e1:	call   rdi
   1400056e3:	and    QWORD PTR [rip+0x402d],0x0        # 0x140009718
   1400056eb:	add    rsp,0x20
   1400056ef:	pop    rdi
   1400056f0:	ret    
   1400056f1:	int3   
   1400056f2:	int3   
   1400056f3:	int3   
   1400056f4:	int3   
   1400056f5:	int3   
   1400056f6:	int3   
   1400056f7:	int3   
   1400056f8:	int3   
   1400056f9:	int3   
   1400056fa:	int3   
   1400056fb:	int3   
   1400056fc:	int3   
   1400056fd:	int3   
   1400056fe:	int3   
   1400056ff:	int3   
   140005700:	xor    eax,eax
   140005702:	mov    QWORD PTR [rip+0x4017],rax        # 0x140009720
   140005709:	mov    QWORD PTR [rip+0x4018],rax        # 0x140009728
   140005710:	mov    QWORD PTR [rip+0x4019],rax        # 0x140009730
   140005717:	mov    QWORD PTR [rip+0x401a],rax        # 0x140009738
   14000571e:	ret    
   14000571f:	int3   
   140005720:	int3   
   140005721:	int3   
   140005722:	int3   
   140005723:	int3   
   140005724:	int3   
   140005725:	int3   
   140005726:	int3   
   140005727:	int3   
   140005728:	int3   
   140005729:	int3   
   14000572a:	int3   
   14000572b:	int3   
   14000572c:	int3   
   14000572d:	int3   
   14000572e:	int3   
   14000572f:	int3   
   140005730:	sub    rsp,0x28
   140005734:	cmp    DWORD PTR [rip+0x3fa5],0x0        # 0x1400096e0
   14000573b:	je     0x140005751
   14000573d:	lea    rcx,[rip+0x3f74]        # 0x1400096b8
   140005744:	call   QWORD PTR [rip+0x1966]        # 0x1400070b0
   14000574a:	and    DWORD PTR [rip+0x3f8f],0x0        # 0x1400096e0
   140005751:	add    rsp,0x28
   140005755:	ret    
   140005756:	int3   
   140005757:	int3   
   140005758:	int3   
   140005759:	int3   
   14000575a:	int3   
   14000575b:	int3   
   14000575c:	int3   
   14000575d:	int3   
   14000575e:	int3   
   14000575f:	int3   
   140005760:	sub    rsp,0x28
   140005764:	cmp    DWORD PTR [rip+0x3f7d],0x1        # 0x1400096e8
   14000576b:	jne    0x14000578a
   14000576d:	lea    rdx,[rip+0x3f7c]        # 0x1400096f0
   140005774:	mov    DWORD PTR [rip+0x3f6a],0x2        # 0x1400096e8
   14000577e:	lea    rcx,[rip+0x389b]        # 0x140009020
   140005785:	call   0x140003cb4
   14000578a:	mov    DWORD PTR [rip+0x3f54],0x3        # 0x1400096e8
   140005794:	add    rsp,0x28
   140005798:	ret    

Disassembly of section .imrsiv:

0000000140006000 <.imrsiv>:
   140006000:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000140007000 <.rdata>:
   140007000:	sbb    BYTE PTR [rax+0x0],cl
   140007006:	add    BYTE PTR [rax],al
   140007008:	mov    BYTE PTR cs:[rax],al
   14000700b:	add    BYTE PTR [rax],al
   14000700d:	add    BYTE PTR [rax],al
   14000700f:	add    BYTE PTR [rax+rcx*4],bh
   140007012:	add    BYTE PTR [rax],al
   140007014:	add    BYTE PTR [rax],al
   140007016:	add    BYTE PTR [rax],al
   140007018:	rex.WRX mov BYTE PTR [rax],r8b
   14000701b:	add    BYTE PTR [rax],al
   14000701d:	add    BYTE PTR [rax],al
   14000701f:	add    BYTE PTR [rax-0x78],ah
   140007022:	add    BYTE PTR [rax],al
   140007024:	add    BYTE PTR [rax],al
   140007026:	add    BYTE PTR [rax],al
   140007028:	jo     0x140006fb2
   14000702a:	add    BYTE PTR [rax],al
   14000702c:	add    BYTE PTR [rax],al
   14000702e:	add    BYTE PTR [rax],al
   140007030:	test   BYTE PTR [rax+0x0],cl
   140007036:	add    BYTE PTR [rax],al
   140007038:	(bad)  
   140007039:	mov    BYTE PTR [rax],al
   14000703b:	add    BYTE PTR [rax],al
   14000703d:	add    BYTE PTR [rax],al
   14000703f:	add    BYTE PTR [rdx+0x88],ch
   140007045:	add    BYTE PTR [rax],al
   140007047:	add    BYTE PTR [rax+rcx*4+0x0],bh
   14000704e:	add    BYTE PTR [rax],al
   140007050:	(bad)  
   140007051:	mov    es,WORD PTR [rax]
	...
   14000705f:	add    BYTE PTR [rsp+rcx*4+0x0],al
   140007066:	add    BYTE PTR [rax],al
   140007068:	mov    al,0x8c
   14000706a:	add    BYTE PTR [rax],al
   14000706c:	add    BYTE PTR [rax],al
   14000706e:	add    BYTE PTR [rax],al
   140007070:	loop   0x140006ffe
   140007072:	add    BYTE PTR [rax],al
   140007074:	add    BYTE PTR [rax],al
   140007076:	add    BYTE PTR [rax],al
   140007078:	cmp    BYTE PTR [rbp+0x0],cl
   14000707e:	add    BYTE PTR [rax],al
   140007080:	or     BYTE PTR [rbp+0x0],0x0
   140007087:	add    dl,dl
   140007089:	lea    eax,[rax]
   14000708b:	add    BYTE PTR [rax],al
   14000708d:	add    BYTE PTR [rax],al
   14000708f:	add    BYTE PTR [rdx],dl
   140007091:	mov    es,WORD PTR [rax]
   140007093:	add    BYTE PTR [rax],al
   140007095:	add    BYTE PTR [rax],al
   140007097:	add    BYTE PTR [rdx-0x74],bh
   14000709a:	add    BYTE PTR [rax],al
   14000709c:	add    BYTE PTR [rax],al
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	rex.RX mov WORD PTR [rax],es
	...
   1400070af:	add    BYTE PTR [rsi+0x89],dl
   1400070b5:	add    BYTE PTR [rax],al
   1400070b7:	add    BYTE PTR [rsi+0x89],ch
   1400070bd:	add    BYTE PTR [rax],al
   1400070bf:	add    BYTE PTR [rax-0x71],cl
   1400070c2:	add    BYTE PTR [rax],al
   1400070c4:	add    BYTE PTR [rax],al
   1400070c6:	add    BYTE PTR [rax],al
   1400070c8:	sub    al,0x8f
   1400070ca:	add    BYTE PTR [rax],al
   1400070cc:	add    BYTE PTR [rax],al
   1400070ce:	add    BYTE PTR [rax],al
   1400070d0:	sbb    al,0x8f
   1400070d2:	add    BYTE PTR [rax],al
   1400070d4:	add    BYTE PTR [rax],al
   1400070d6:	add    BYTE PTR [rax],al
   1400070d8:	add    cl,BYTE PTR [rdi+0x0]
   1400070de:	add    BYTE PTR [rax],al
   1400070e0:	in     al,dx
   1400070e1:	mov    es,WORD PTR [rax]
   1400070e3:	add    BYTE PTR [rax],al
   1400070e5:	add    BYTE PTR [rax],al
   1400070e7:	add    dh,dl
   1400070e9:	mov    es,WORD PTR [rax]
   1400070eb:	add    BYTE PTR [rax],al
   1400070ed:	add    BYTE PTR [rax],al
   1400070ef:	add    BYTE PTR [rsi+rcx*4+0x0],bh
   1400070f6:	add    BYTE PTR [rax],al
   1400070f8:	test   al,0x8e
   1400070fa:	add    BYTE PTR [rax],al
   1400070fc:	add    BYTE PTR [rax],al
   1400070fe:	add    BYTE PTR [rax],al
   140007100:	mov    cl,BYTE PTR [rsi+0x0]
   140007106:	add    BYTE PTR [rax],al
   140007108:	js     0x140007098
   14000710a:	add    BYTE PTR [rax],al
   14000710c:	add    BYTE PTR [rax],al
   14000710e:	add    BYTE PTR [rax],al
   140007110:	jo     0x1400070a0
   140007112:	add    BYTE PTR [rax],al
   140007114:	add    BYTE PTR [rax],al
   140007116:	add    BYTE PTR [rax],al
   140007118:	mov    BYTE PTR [rcx+0x0],cl
   14000711e:	add    BYTE PTR [rax],al
   140007120:	js     0x1400070ab
   140007122:	add    BYTE PTR [rax],al
   140007124:	add    BYTE PTR [rax],al
   140007126:	add    BYTE PTR [rax],al
   140007128:	mov    WORD PTR [rax],ax
   14000712b:	add    BYTE PTR [rax],al
   14000712d:	add    BYTE PTR [rax],al
   14000712f:	add    BYTE PTR [rsi-0x77],dl
   140007132:	add    BYTE PTR [rax],al
   140007134:	add    BYTE PTR [rax],al
   140007136:	add    BYTE PTR [rax],al
   140007138:	pop    rsp
   140007139:	pop    QWORD PTR [rax]
   14000713b:	add    BYTE PTR [rax],al
   14000713d:	add    BYTE PTR [rax],al
   14000713f:	add    BYTE PTR [rsi-0x77],al
   140007142:	add    BYTE PTR [rax],al
   140007144:	add    BYTE PTR [rax],al
   140007146:	add    BYTE PTR [rax],al
   140007148:	mov    DWORD PTR ss:[rax],eax
   14000714b:	add    BYTE PTR [rax],al
   14000714d:	add    BYTE PTR [rax],al
   14000714f:	add    BYTE PTR [rcx+rcx*4],ah
   140007152:	add    BYTE PTR [rax],al
   140007154:	add    BYTE PTR [rax],al
   140007156:	add    BYTE PTR [rax],al
   140007158:	adc    cl,BYTE PTR [rcx+0x0]
   14000715e:	add    BYTE PTR [rax],al
   140007160:	cld    
   140007161:	mov    BYTE PTR [rax],al
   140007163:	add    BYTE PTR [rax],al
   140007165:	add    BYTE PTR [rax],al
   140007167:	add    al,dh
   140007169:	mov    BYTE PTR [rax],al
   14000716b:	add    BYTE PTR [rax],al
   14000716d:	add    BYTE PTR [rax],al
   14000716f:	add    ah,ah
   140007171:	mov    BYTE PTR [rax],al
	...
   14000717f:	add    BYTE PTR [rax-0x75],bl
	...
   14000718e:	add    BYTE PTR [rax],al
   140007190:	add    cl,BYTE PTR [rdx+0x0]
   140007196:	add    BYTE PTR [rax],al
   140007198:	out    dx,al
   140007199:	mov    DWORD PTR [rax],eax
   14000719b:	add    BYTE PTR [rax],al
   14000719d:	add    BYTE PTR [rax],al
   14000719f:	add    al,ah
   1400071a1:	mov    DWORD PTR [rax],eax
   1400071a3:	add    BYTE PTR [rax],al
   1400071a5:	add    BYTE PTR [rax],al
   1400071a7:	add    dh,cl
   1400071a9:	mov    DWORD PTR [rax],eax
	...
   1400071b7:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400071bb:	add    BYTE PTR [rax],al
   1400071bd:	add    BYTE PTR [rax],al
   1400071bf:	add    BYTE PTR [rax],0x0
   1400071c2:	add    BYTE PTR [rax],al
   1400071c4:	add    BYTE PTR [rax],al
   1400071c6:	add    BYTE PTR [rax],al
   1400071c8:	adc    cl,BYTE PTR [rax+rax*1+0x0]
   1400071cf:	add    BYTE PTR [rdx],al
   1400071d1:	mov    WORD PTR [rax],es
	...
   1400071df:	add    al,bh
   1400071e1:	mov    al,BYTE PTR [rax]
   1400071e3:	add    BYTE PTR [rax],al
   1400071e5:	add    BYTE PTR [rax],al
   1400071e7:	add    ah,ch
   1400071e9:	mov    al,BYTE PTR [rax]
   1400071eb:	add    BYTE PTR [rax],al
   1400071ed:	add    BYTE PTR [rax],al
   1400071ef:	add    dl,ah
   1400071f1:	mov    al,BYTE PTR [rax]
   1400071f3:	add    BYTE PTR [rax],al
   1400071f5:	add    BYTE PTR [rax],al
   1400071f7:	add    al,bl
   1400071f9:	mov    al,BYTE PTR [rax]
   1400071fb:	add    BYTE PTR [rax],al
   1400071fd:	add    BYTE PTR [rax],al
   1400071ff:	add    BYTE PTR [rax],al
   140007201:	mov    eax,DWORD PTR [rax]
   140007203:	add    BYTE PTR [rax],al
   140007205:	add    BYTE PTR [rax],al
   140007207:	add    BYTE PTR [rax],bl
   140007209:	mov    eax,DWORD PTR [rax]
   14000720b:	add    BYTE PTR [rax],al
   14000720d:	add    BYTE PTR [rax],al
   14000720f:	add    BYTE PTR [rsi+0x8a],dl
   140007215:	add    BYTE PTR [rax],al
   140007217:	add    BYTE PTR [rsi+0x8a],cl
   14000721d:	add    BYTE PTR [rax],al
   14000721f:	add    BYTE PTR [rsi+0x8a],al
   140007225:	add    BYTE PTR [rax],al
   140007227:	add    BYTE PTR [rdx+rcx*4+0x0],dh
   14000722b:	add    BYTE PTR [rax],al
   14000722d:	add    BYTE PTR [rax],al
   14000722f:	add    BYTE PTR [rsi],ch
   140007231:	mov    eax,DWORD PTR [rax]
   140007233:	add    BYTE PTR [rax],al
   140007235:	add    BYTE PTR [rax],al
   140007237:	add    BYTE PTR [rbx+rcx*4+0x0],al
   14000723b:	add    BYTE PTR [rax],al
   14000723d:	add    BYTE PTR [rax],al
   14000723f:	add    BYTE PTR [rdx],cl
   140007241:	mov    eax,DWORD PTR [rax]
   140007243:	add    BYTE PTR [rax],al
   140007245:	add    BYTE PTR [rax],al
   140007247:	add    al,al
   140007249:	mov    al,BYTE PTR [rax]
   14000724b:	add    BYTE PTR [rax],al
   14000724d:	add    BYTE PTR [rax],al
   14000724f:	add    BYTE PTR [rdx-0x76],ah
   140007252:	add    BYTE PTR [rax],al
   140007254:	add    BYTE PTR [rax],al
   140007256:	add    BYTE PTR [rax],al
   140007258:	push   rsp
   140007259:	mov    al,BYTE PTR [rax]
   14000725b:	add    BYTE PTR [rax],al
   14000725d:	add    BYTE PTR [rax],al
   14000725f:	add    BYTE PTR [rsi-0x76],al
   140007262:	add    BYTE PTR [rax],al
   140007264:	add    BYTE PTR [rax],al
   140007266:	add    BYTE PTR [rax],al
   140007268:	cmp    BYTE PTR [rdx+0x0],cl
   14000726e:	add    BYTE PTR [rax],al
   140007270:	sub    al,0x8a
   140007272:	add    BYTE PTR [rax],al
   140007274:	add    BYTE PTR [rax],al
   140007276:	add    BYTE PTR [rax],al
   140007278:	and    cl,BYTE PTR [rdx+0x0]
   14000727e:	add    BYTE PTR [rax],al
   140007280:	jo     0x140007211
   140007282:	add    BYTE PTR [rax],al
   140007284:	add    BYTE PTR [rax],al
   140007286:	add    BYTE PTR [rax],al
   140007288:	mov    ah,0x8a
   14000728a:	add    BYTE PTR [rax],al
   14000728c:	add    BYTE PTR [rax],al
   14000728e:	add    BYTE PTR [rax],al
   140007290:	movabs al,ds:0x7a0000000000008a
   140007299:	pop    QWORD PTR [rax]
	...
   1400072a7:	add    BYTE PTR [rsi-0x75],dh
   1400072aa:	add    BYTE PTR [rax],al
   1400072ac:	add    BYTE PTR [rax],al
   1400072ae:	add    BYTE PTR [rax],al
   1400072b0:	mov    cl,BYTE PTR [rbx+0x0]
   1400072b6:	add    BYTE PTR [rax],al
   1400072b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400072b9:	mov    eax,DWORD PTR [rax]
	...
   1400072c7:	add    dh,dl
   1400072c9:	mov    eax,DWORD PTR [rax]
   1400072cb:	add    BYTE PTR [rax],al
   1400072cd:	add    BYTE PTR [rax],al
   1400072cf:	add    dh,ah
   1400072d1:	mov    eax,DWORD PTR [rax]
   1400072d3:	add    BYTE PTR [rax],al
   1400072d5:	add    BYTE PTR [rax],al
   1400072d7:	add    dl,al
   1400072d9:	mov    eax,DWORD PTR [rax]
	...
   1400072e7:	add    BYTE PTR [rax+0x140003f],ah
   1400072ed:	add    BYTE PTR [rax],al
   1400072ef:	add    BYTE PTR [rax+0x1400055],dh
	...
   1400072fd:	add    BYTE PTR [rax],al
   1400072ff:	add    al,dl
   140007301:	rex.WXB add BYTE PTR [r8+0x1],al
   140007305:	add    BYTE PTR [rax],al
   140007307:	add    BYTE PTR [rax+0x1400011],al
   14000730d:	add    BYTE PTR [rax],al
   14000730f:	add    BYTE PTR [rax+0x12],dh
   140007312:	add    BYTE PTR [rax+0x1],al
   140007315:	add    BYTE PTR [rax],al
   140007317:	add    al,dh
   140007319:	adc    al,BYTE PTR [rax]
   14000731b:	rex add DWORD PTR [rax],eax
   14000731e:	add    BYTE PTR [rax],al
   140007320:	and    BYTE PTR [rbx],dl
   140007322:	add    BYTE PTR [rax+0x1],al
	...
   140007335:	add    BYTE PTR [rax],al
   140007337:	add    al,dh
   140007339:	rex.WX add BYTE PTR [rax+0x1],al
   14000733d:	add    BYTE PTR [rax],al
   14000733f:	add    BYTE PTR [rax+0x50],al
   140007342:	add    BYTE PTR [rax+0x1],al
	...
   14000734d:	add    BYTE PTR [rax],al
   14000734f:	add    BYTE PTR [rax-0x7ffffff0],dh
   140007355:	adc    DWORD PTR [rax],eax
   140007357:	add    BYTE PTR [rax+0x12],dh
   14000735a:	add    BYTE PTR [rax],al
   14000735c:	lock adc al,BYTE PTR [rax]
   14000735f:	add    BYTE PTR [rax],ah
   140007361:	adc    eax,DWORD PTR [rax]
   140007363:	add    BYTE PTR [rax+0x13],dh
   140007366:	add    BYTE PTR [rax],al
   140007368:	(bad)  
   140007369:	adc    al,0x0
   14000736b:	add    BYTE PTR [rax+0x15],al
   14000736e:	add    BYTE PTR [rax],al
   140007370:	nop
   140007371:	sbb    BYTE PTR [rax],al
   140007373:	add    BYTE PTR [rax+0x19],ah
   140007376:	add    BYTE PTR [rax],al
   140007378:	sbb    BYTE PTR [rdx],0x0
   14000737b:	add    al,dh
   14000737d:	sbb    al,BYTE PTR [rax]
   14000737f:	add    BYTE PTR [rax],ah
   140007381:	and    DWORD PTR [rax],eax
   140007383:	add    BYTE PTR [rax+0x21],dh
   140007386:	add    BYTE PTR [rax],al
   140007388:	mov    al,0x21
   14000738a:	add    BYTE PTR [rax],al
   14000738c:	push   rax
   14000738d:	and    al,BYTE PTR [rax]
   14000738f:	add    BYTE PTR [rax+0x22],dh
   140007392:	add    BYTE PTR [rax],al
   140007394:	lock and al,BYTE PTR [rax]
   140007397:	add    BYTE PTR [rax],dl
   140007399:	and    eax,DWORD PTR [rax]
   14000739b:	add    BYTE PTR [rax],dh
   14000739d:	and    al,0x0
   14000739f:	add    BYTE PTR [rax-0x2fffffdb],dh
   1400073a5:	(bad)  
   1400073a6:	add    BYTE PTR [rax],al
   1400073a8:	shr    BYTE PTR [rbx],1
   1400073aa:	add    BYTE PTR [rax],al
   1400073ac:	sub    BYTE PTR [rsi],0x0
   1400073af:	add    BYTE PTR [rax],dl
   1400073b1:	(bad)  
   1400073b2:	add    BYTE PTR [rax],al
   1400073b4:	(bad)  
   1400073b5:	(bad)  
   1400073b6:	add    BYTE PTR [rax],al
   1400073b8:	movabs al,ds:0x200000311000002f
   1400073c1:	cmp    DWORD PTR [rax],eax
   1400073c3:	add    BYTE PTR [rax+0x3c],dh
   1400073c6:	add    BYTE PTR [rax],al
   1400073c8:	movabs al,ds:0x5000003f0000003d
   1400073d1:	(bad)  
   1400073d2:	add    BYTE PTR [rax],al
   1400073d4:	movabs al,ds:0xc000003fb000003f
   1400073dd:	(bad)  
   1400073de:	add    BYTE PTR [rax],al
   1400073e0:	add    BYTE PTR [rax+0x0],al
   1400073e3:	add    BYTE PTR [rax+0x40],al
   1400073e6:	add    BYTE PTR [rax],al
   1400073e8:	add    BYTE PTR [rbp+0x0],0x0
   1400073ec:	lock rex.WX add BYTE PTR [rax],al
   1400073f0:	ror    BYTE PTR [rbx+0x0],1
   1400073f3:	add    BYTE PTR [rax-0x3fffffb2],ah
   1400073f9:	rex.WRXB add BYTE PTR [r8],r8b
   1400073fc:	add    BYTE PTR [rax+0x0],dl
   1400073ff:	add    BYTE PTR [rax+0x50],al
   140007402:	add    BYTE PTR [rax],al
   140007404:	loopne 0x140007458
   140007406:	add    BYTE PTR [rax],al
   140007408:	rex push rbx
   14000740a:	add    BYTE PTR [rax],al
   14000740c:	mov    al,0x56
   14000740e:	add    BYTE PTR [rax],al
   140007410:	add    BYTE PTR [rdi+0x0],dl
   140007413:	add    BYTE PTR [rax],dh
   140007415:	push   rdi
   140007416:	add    BYTE PTR [rax],al
   140007418:	(bad)  
   140007419:	push   rdi
   14000741a:	add    BYTE PTR [rax],al
   14000741c:	add    BYTE PTR [rax],al
   14000741e:	add    BYTE PTR [rax],al
   140007420:	and    al,BYTE PTR [rip+0x21993]        # 0x140028db9
   140007426:	add    BYTE PTR [rax],al
   140007428:	pop    rax
   140007429:	add    DWORD PTR [rax],0x0
   14000742c:	add    DWORD PTR [rax],eax
   14000742e:	add    BYTE PTR [rax],al
   140007430:	push   0x6000083
   140007435:	add    BYTE PTR [rax],al
   140007437:	add    BYTE PTR [rax+0x20000083],dl
   14000743d:	add    BYTE PTR [rax],al
   14000743f:	add    BYTE PTR [rax],al
   140007441:	add    BYTE PTR [rax],al
   140007443:	add    BYTE PTR [rcx],al
   140007445:	add    BYTE PTR [rax],al
   140007447:	add    al,al
   140007449:	nop
   14000744a:	add    BYTE PTR [rax+0x1],al
   14000744d:	add    BYTE PTR [rax],al
   14000744f:	add    BYTE PTR [rax-0x6f],ah
   140007452:	add    BYTE PTR [rax+0x1],al
   140007455:	add    BYTE PTR [rax],al
   140007457:	add    BYTE PTR [rsi+0x0],ch
   14000745a:	je     0x14000745c
   14000745c:	add    BYTE PTR fs:[rax+rax*1+0x6c],ch
   140007461:	add    BYTE PTR [rsi],ch
   140007463:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140007467:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000746b:	add    BYTE PTR [rax],al
   14000746d:	add    BYTE PTR [rax],al
   14000746f:	add    BYTE PTR [rbp+0x74],al
   140007472:	ja     0x1400074b9
   140007474:	jbe    0x1400074db
   140007476:	outs   dx,BYTE PTR ds:[rsi]
   140007477:	je     0x1400074cb
   140007479:	imul   esi,DWORD PTR gs:[ebx+0x74],0x7265
   140007482:	add    BYTE PTR [rax],al
   140007484:	add    BYTE PTR [rax],al
   140007486:	add    BYTE PTR [rax],al
   140007488:	rex.RB je 0x140007502
   14000748b:	rex.RB jbe 0x1400074f3
   14000748e:	outs   dx,BYTE PTR ds:[rsi]
   14000748f:	je     0x1400074e6
   140007491:	outs   dx,BYTE PTR ds:[rsi]
   140007492:	jb     0x1400074f9
   140007494:	imul   esi,DWORD PTR [ebx+0x74],0x7265
   14000749c:	add    BYTE PTR [rax],al
   14000749e:	add    BYTE PTR [rax],al
   1400074a0:	rex.RB je 0x14000751a
   1400074a3:	rex.RB jbe 0x14000750b
   1400074a6:	outs   dx,BYTE PTR ds:[rsi]
   1400074a7:	je     0x1400074ee
   1400074a9:	outs   dx,BYTE PTR ds:[rsi]
   1400074aa:	(bad)  
   1400074ab:	(bad)  
   1400074ac:	ins    BYTE PTR es:[rdi],dx
   1400074ad:	gs add BYTE PTR fs:[rbp+0x74],al
   1400074b2:	ja     0x1400074f9
   1400074b4:	jbe    0x14000751b
   1400074b6:	outs   dx,BYTE PTR ds:[rsi]
   1400074b7:	je     0x140007510
   1400074b9:	jb     0x140007524
   1400074bb:	je     0x140007522
   1400074bd:	add    BYTE PTR [rax],al
   1400074bf:	add    cl,cl
   1400074c1:	add    BYTE PTR [rax],al
   1400074c3:	adc    BYTE PTR [rdx],al
	...
   1400074cd:	add    BYTE PTR [rax],al
   1400074cf:	cmp    BYTE PTR [rcx],0xe9
   1400074d2:	stc    
   1400074d3:	push   0xffffffffffffff95
   1400074d5:	sbb    eax,0xa3af430a
   1400074da:	jne    0x140007502
   1400074dc:	cli    
   1400074dd:	fsubrp st(3),st
   1400074df:	jge    0x1400074e1
   1400074e1:	add    BYTE PTR [rax],al
   1400074e3:	add    BYTE PTR [rax],al
   1400074e5:	add    BYTE PTR [rax],al
   1400074e7:	add    BYTE PTR [rax+0x1400021],dh
   1400074ed:	add    BYTE PTR [rax],al
   1400074ef:	add    BYTE PTR [rax+0x22],dl
   1400074f2:	add    BYTE PTR [rax+0x1],al
   1400074f5:	add    BYTE PTR [rax],al
   1400074f7:	add    BYTE PTR [rax+0x22],dh
   1400074fa:	add    BYTE PTR [rax+0x1],al
   1400074fd:	add    BYTE PTR [rax],al
   1400074ff:	add    al,al
   140007501:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140007505:	add    BYTE PTR [rax],al
   140007507:	add    BYTE PTR [rax+0x21],dh
   14000750a:	add    BYTE PTR [rax+0x1],al
   14000750d:	add    BYTE PTR [rax],al
   14000750f:	add    BYTE PTR [rax+0x1400021],dh
   140007515:	add    BYTE PTR [rax],al
   140007517:	add    BYTE PTR [rax+0x22],dl
   14000751a:	add    BYTE PTR [rax+0x1],al
   14000751d:	add    BYTE PTR [rax],al
   14000751f:	add    BYTE PTR [rax+0x22],dh
   140007522:	add    BYTE PTR [rax+0x1],al
   140007525:	add    BYTE PTR [rax],al
   140007527:	add    BYTE PTR [rax],ah
   140007529:	and    DWORD PTR [rax],eax
   14000752b:	rex add DWORD PTR [rax],eax
   14000752e:	add    BYTE PTR [rax],al
   140007530:	jo     0x140007553
   140007532:	add    BYTE PTR [rax+0x1],al
   140007535:	add    BYTE PTR [rax],al
   140007537:	add    BYTE PTR [rax],dl
   140007539:	and    eax,DWORD PTR [rax]
   14000753b:	rex add DWORD PTR [rax],eax
   14000753e:	add    BYTE PTR [rax],al
   140007540:	push   rax
   140007541:	and    al,BYTE PTR [rax]
   140007543:	rex add DWORD PTR [rax],eax
   140007546:	add    BYTE PTR [rax],al
   140007548:	xor    BYTE PTR [rax+rax*1],ah
   14000754b:	rex add DWORD PTR [rax],eax
   14000754e:	add    BYTE PTR [rax],al
   140007550:	ror    BYTE PTR [rdi+0x0],0x40
   140007554:	add    DWORD PTR [rax],eax
   140007556:	add    BYTE PTR [rax],al
   140007558:	ror    BYTE PTR [rdi+0x0],0x40
   14000755c:	add    DWORD PTR [rax],eax
   14000755e:	add    BYTE PTR [rax],al
   140007560:	ror    BYTE PTR [rdi+0x0],0x40
   140007564:	add    DWORD PTR [rax],eax
   140007566:	add    BYTE PTR [rax],al
   140007568:	jo     0x14000758b
   14000756a:	add    BYTE PTR [rax+0x1],al
   14000756d:	add    BYTE PTR [rax],al
   14000756f:	add    BYTE PTR [rax],dl
   140007571:	and    eax,DWORD PTR [rax]
   140007573:	rex add DWORD PTR [rax],eax
   140007576:	add    BYTE PTR [rax],al
   140007578:	push   rax
   140007579:	and    al,BYTE PTR [rax]
   14000757b:	rex add DWORD PTR [rax],eax
   14000757e:	add    BYTE PTR [rax],al
   140007580:	xor    BYTE PTR [rax+rax*1],ah
   140007583:	rex add DWORD PTR [rax],eax
   140007586:	add    BYTE PTR [rax],al
   140007588:	adc    BYTE PTR [rdi],ch
   14000758a:	add    BYTE PTR [rax+0x1],al
   14000758d:	add    BYTE PTR [rax],al
   14000758f:	add    BYTE PTR [rax+0x2f],ah
   140007592:	add    BYTE PTR [rax+0x1],al
   140007595:	add    BYTE PTR [rax],al
   140007597:	add    BYTE PTR [rax+0x140002f],ah
   14000759d:	add    BYTE PTR [rax],al
   14000759f:	add    BYTE PTR [rax+0x21],dh
   1400075a2:	add    BYTE PTR [rax+0x1],al
   1400075a5:	add    BYTE PTR [rax],al
   1400075a7:	add    BYTE PTR [rax],dl
   1400075a9:	xor    DWORD PTR [rax],eax
   1400075ab:	rex add DWORD PTR [rax],eax
   1400075ae:	add    BYTE PTR [rax],al
   1400075b0:	push   rax
   1400075b1:	and    al,BYTE PTR [rax]
   1400075b3:	rex add DWORD PTR [rax],eax
   1400075b6:	add    BYTE PTR [rax],al
   1400075b8:	jo     0x1400075dc
   1400075ba:	add    BYTE PTR [rax+0x1],al
   1400075bd:	add    BYTE PTR [rax],al
   1400075bf:	add    al,al
   1400075c1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400075c5:	add    BYTE PTR [rax],al
   1400075c7:	add    BYTE PTR [rax+0x21],dh
   1400075ca:	add    BYTE PTR [rax+0x1],al
   1400075cd:	add    BYTE PTR [rax],al
   1400075cf:	add    BYTE PTR [rax],dl
   1400075d1:	xor    DWORD PTR [rax],eax
   1400075d3:	rex add DWORD PTR [rax],eax
   1400075d6:	add    BYTE PTR [rax],al
   1400075d8:	push   rax
   1400075d9:	and    al,BYTE PTR [rax]
   1400075db:	rex add DWORD PTR [rax],eax
   1400075de:	add    BYTE PTR [rax],al
   1400075e0:	jo     0x140007604
   1400075e2:	add    BYTE PTR [rax+0x1],al
   1400075e5:	add    BYTE PTR [rax],al
   1400075e7:	add    BYTE PTR [rax+0x140002e],al
   1400075ed:	add    BYTE PTR [rax],al
   1400075ef:	add    BYTE PTR [rax+0x21],dh
   1400075f2:	add    BYTE PTR [rax+0x1],al
   1400075f5:	add    BYTE PTR [rax],al
   1400075f7:	add    BYTE PTR [rax+0x3c],dh
   1400075fa:	add    BYTE PTR [rax+0x1],al
   1400075fd:	add    BYTE PTR [rax],al
   1400075ff:	add    BYTE PTR [rax+0x140003d],ah
   140007605:	add    BYTE PTR [rax],al
   140007607:	add    BYTE PTR [rax+0x13],dh
   14000760a:	add    BYTE PTR [rax+0x1],al
   14000760d:	add    BYTE PTR [rax],al
   14000760f:	add    BYTE PTR [rax+0x1400018],dl
   140007615:	add    BYTE PTR [rax],al
   140007617:	add    BYTE PTR [rax+0x15],al
   14000761a:	add    BYTE PTR [rax+0x1],al
   14000761d:	add    BYTE PTR [rax],al
   14000761f:	add    BYTE PTR [rax+0x19],ah
   140007622:	add    BYTE PTR [rax+0x1],al
   140007625:	add    BYTE PTR [rax],al
   140007627:	add    BYTE PTR [rax+0x140001a],al
   14000762d:	add    BYTE PTR [rax],al
   14000762f:	add    BYTE PTR [rax+0x3f],dl
   140007632:	add    BYTE PTR [rax+0x1],al
   140007635:	add    BYTE PTR [rax],al
   140007637:	add    al,dl
   140007639:	(bad)  
   14000763a:	add    BYTE PTR [rax+0x1],al
   14000763d:	add    BYTE PTR [rax],al
   14000763f:	add    al,dl
   140007641:	(bad)  
   140007642:	add    BYTE PTR [rax+0x1],al
   140007645:	add    BYTE PTR [rax],al
   140007647:	add    al,dl
   140007649:	(bad)  
   14000764a:	add    BYTE PTR [rax+0x1],al
   14000764d:	add    BYTE PTR [rax],al
   14000764f:	add    BYTE PTR [rax+0x3c],dh
   140007652:	add    BYTE PTR [rax+0x1],al
   140007655:	add    BYTE PTR [rax],al
   140007657:	add    BYTE PTR [rax+0x14],ah
   14000765a:	add    BYTE PTR [rax+0x1],al
   14000765d:	add    BYTE PTR [rax],al
   14000765f:	add    BYTE PTR [rax+0x13],dh
   140007662:	add    BYTE PTR [rax+0x1],al
   140007665:	add    BYTE PTR [rax],al
   140007667:	add    BYTE PTR [rax+0x1400018],dl
   14000766d:	add    BYTE PTR [rax],al
   14000766f:	add    BYTE PTR [rax+0x15],al
   140007672:	add    BYTE PTR [rax+0x1],al
   140007675:	add    BYTE PTR [rax],al
   140007677:	add    BYTE PTR [rax+0x19],ah
   14000767a:	add    BYTE PTR [rax+0x1],al
   14000767d:	add    BYTE PTR [rax],al
   14000767f:	add    BYTE PTR [rax+0x140001a],al
   140007685:	add    BYTE PTR [rax],al
   140007687:	add    al,al
   140007689:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000768d:	add    BYTE PTR [rax],al
   14000768f:	add    al,al
   140007691:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140007695:	add    BYTE PTR [rax],al
   140007697:	add    al,al
   140007699:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000769d:	add    BYTE PTR [rax],al
   14000769f:	add    al,al
   1400076a1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400076a5:	add    BYTE PTR [rax],al
   1400076a7:	add    BYTE PTR [rax+0x140003f],ah
   1400076ad:	add    BYTE PTR [rax],al
   1400076af:	add    BYTE PTR [rax+0x140003f],ah
   1400076b5:	add    BYTE PTR [rax],al
   1400076b7:	add    BYTE PTR [rax+0x140003f],dh
   1400076bd:	add    BYTE PTR [rax],al
   1400076bf:	add    BYTE PTR [rax+0x140003f],ah
   1400076c5:	add    BYTE PTR [rax],al
   1400076c7:	add    BYTE PTR [rax+0x140003f],ah
   1400076cd:	add    BYTE PTR [rax],al
   1400076cf:	add    BYTE PTR [rax+0x1400045],al
   1400076d5:	add    BYTE PTR [rax],al
   1400076d7:	add    BYTE PTR [rax],al
   1400076d9:	add    BYTE PTR [rax+0x1],al
   1400076dd:	add    BYTE PTR [rax],al
   1400076df:	add    BYTE PTR [rax+0x40],al
   1400076e2:	add    BYTE PTR [rax+0x1],al
   1400076e5:	add    BYTE PTR [rax],al
   1400076e7:	add    BYTE PTR [rax+0x140003f],ah
   1400076ed:	add    BYTE PTR [rax],al
   1400076ef:	add    al,al
   1400076f1:	(bad)  
   1400076f2:	add    BYTE PTR [rax+0x1],al
   1400076f5:	add    BYTE PTR [rax],al
   1400076f7:	add    BYTE PTR [rax+0x1400025],dh
   1400076fd:	add    BYTE PTR [rax],al
   1400076ff:	add    al,dl
   140007701:	(bad)  
   140007702:	add    BYTE PTR [rax+0x1],al
   140007705:	add    BYTE PTR [rax],al
   140007707:	add    BYTE PTR [rax],al
   140007709:	(bad)  
   14000770a:	add    BYTE PTR [rax+0x1],al
   14000770d:	add    BYTE PTR [rax],al
   14000770f:	add    BYTE PTR [rax],al
   140007711:	add    BYTE PTR [rax+0x1],al
   140007715:	add    BYTE PTR [rax],al
   140007717:	add    al,al
   140007719:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000771d:	add    BYTE PTR [rax],al
   14000771f:	add    al,al
   140007721:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140007725:	add    BYTE PTR [rax],al
   140007727:	add    al,al
   140007729:	(bad)  
   14000772a:	add    BYTE PTR [rax+0x1],al
   14000772d:	add    BYTE PTR [rax],al
   14000772f:	add    BYTE PTR [rax+0x1400025],dh
   140007735:	add    BYTE PTR [rax],al
   140007737:	add    al,dl
   140007739:	(bad)  
   14000773a:	add    BYTE PTR [rax+0x1],al
   14000773d:	add    BYTE PTR [rax],al
   14000773f:	add    BYTE PTR [rax],al
   140007741:	(bad)  
   140007742:	add    BYTE PTR [rax+0x1],al
   140007745:	add    BYTE PTR [rax],al
   140007747:	add    dh,ch
   140007749:	mov    DWORD PTR [rbp-0x62],ebp
   14000774c:	push   rdx
   14000774d:	rex.RXB pop r15
   14000774f:	rex.RX add BYTE PTR [rcx],0x9c
   140007753:	jno    0x1400076e8
   140007755:	out    dx,al
   140007756:	(bad)  
   140007757:	movabs al,ds:0x0
   140007760:	rol    BYTE PTR [rax],0x0
   140007763:	add    BYTE PTR [rax],al
   140007765:	add    BYTE PTR [rax],al
   140007767:	rex.RX or esi,r9d
   14000776a:	push   rdx
   14000776b:	mov    BYTE PTR [rdi+riz*4],r8b
   14000776f:	rex.WR test al,0x96
   140007772:	(bad)  
   140007773:	icebp  
   140007774:	rex xchg eax,eax
   140007776:	jne    0x1400077c1
   140007778:	(bad)  
   140007779:	(bad)  
   14000777a:	add    BYTE PTR [rdx+0x25],ch
   14000777d:	fucomip st,st(3)
   14000777f:	rex.RX mov r10b,BYTE PTR [rsi-0x637720c8]
   140007786:	mov    ch,0xb1
   140007788:	xor    BYTE PTR [rax],al
   14000778a:	js     0x14000778c
   14000778c:	and    eax,0x7800
   140007791:	add    BYTE PTR [rax],al
   140007793:	add    BYTE PTR [rax],al
   140007795:	add    BYTE PTR [rax],al
   140007797:	add    BYTE PTR [rax+0x0],dl
   14000779a:	imul   eax,DWORD PTR [rax],0x65
   14000779d:	add    BYTE PTR [rcx+0x0],bh
   1400077a0:	add    BYTE PTR [r10+0x0],r14b
   1400077a4:	jb     0x1400077a6
   1400077a6:	outs   dx,DWORD PTR ds:[rsi]
   1400077a7:	add    BYTE PTR [rdx+0x0],dh
   1400077aa:	rex.WRB add BYTE PTR [r11+0x0],r14b
   1400077ae:	add    BYTE PTR [eax],al
   1400077b1:	add    BYTE PTR [rax],al
   1400077b3:	add    BYTE PTR [rax],al
   1400077b5:	add    BYTE PTR [rax],al
   1400077b7:	add    BYTE PTR [rdx],dl
   1400077b9:	sbb    ah,BYTE PTR [rbx-0x4333cdb3]
   1400077bf:	rex.WB mov r10b,0xcc
   1400077c2:	(bad)  
   1400077c3:	or     eax,0xfcbaf2bc
   1400077c8:	push   rsp
   1400077c9:	add    BYTE PTR [rcx+0x0],ah
   1400077cc:	jb     0x1400077ce
   1400077ce:	add    BYTE PTR [ebp+0x0],ah
   1400077d2:	je     0x1400077d4
   1400077d4:	add    BYTE PTR [r8+rax*1+0x69],r12b
   1400077d9:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400077dd:	add    BYTE PTR [rdi+0x0],ch
   1400077e0:	outs   dx,BYTE PTR ds:[rsi]
	...
   1400077ed:	add    BYTE PTR [rax],al
   1400077ef:	add    BYTE PTR [rbx+0x0],dl
   1400077f2:	outs   dx,DWORD PTR ds:[rsi]
   1400077f3:	add    BYTE PTR [rsi+0x0],ah
   1400077f6:	je     0x1400077f8
   1400077f8:	ja     0x1400077fa
   1400077fa:	(bad)  
   1400077fb:	add    BYTE PTR [rdx+0x0],dh
   1400077fe:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   140007803:	add    BYTE PTR [rcx+0x0],ch
   140007806:	movsxd eax,DWORD PTR [rax]
   140007808:	jb     0x14000780a
   14000780a:	outs   dx,DWORD PTR ds:[rsi]
   14000780b:	add    BYTE PTR [rbx+0x0],dh
   14000780e:	outs   dx,DWORD PTR ds:[rsi]
   14000780f:	add    BYTE PTR [rsi+0x0],ah
   140007812:	je     0x140007814
   140007814:	pop    rsp
   140007815:	add    BYTE PTR [rdi+0x0],dl
   140007818:	imul   eax,DWORD PTR [rax],0x64006e
   14000781e:	outs   dx,DWORD PTR ds:[rsi]
   14000781f:	add    BYTE PTR [rdi+0x0],dh
   140007822:	jae    0x140007824
   140007824:	pop    rsp
   140007825:	add    BYTE PTR [rbx+0x0],al
   140007828:	jne    0x14000782a
   14000782a:	jb     0x14000782c
   14000782c:	jb     0x14000782e
   14000782e:	add    BYTE PTR gs:[rsi+0x0],ch
   140007832:	je     0x140007834
   140007834:	push   rsi
   140007835:	add    BYTE PTR [rbp+0x0],ah
   140007838:	jb     0x14000783a
   14000783a:	jae    0x14000783c
   14000783c:	imul   eax,DWORD PTR [rax],0x6e006f
   140007842:	pop    rsp
   140007843:	add    BYTE PTR [rdi+0x0],dl
   140007846:	imul   eax,DWORD PTR [rax],0x64006e
   14000784c:	outs   dx,DWORD PTR ds:[rsi]
   14000784d:	add    BYTE PTR [rdi+0x0],dh
   140007850:	jae    0x140007852
   140007852:	add    BYTE PTR [r14+0x0],bpl
   140007856:	jns    0x140007858
   140007858:	je     0x14000785a
   14000785a:	imul   eax,DWORD PTR [rax],0x65006d
   140007860:	push   rbp
   140007861:	add    BYTE PTR [rax+0x0],dh
   140007864:	add    BYTE PTR [edx+0x0],dh
   140007868:	(bad)  
   140007869:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000786d:	add    BYTE PTR [rax],al
   14000786f:	add    BYTE PTR [rax+0x0],dl
   140007872:	jb     0x140007874
   140007874:	outs   dx,DWORD PTR ds:[rsi]
   140007875:	add    BYTE PTR [rax+rax*1+0x75],ah
   140007879:	add    BYTE PTR [rbx+0x0],ah
   14000787c:	je     0x14000787e
   14000787e:	rex.WXB add BYTE PTR [r13+0x0],spl
   140007882:	jns    0x140007884
   140007884:	add    BYTE PTR [rax],al
   140007886:	add    BYTE PTR [rax],al
   140007888:	push   rax
   140007889:	add    BYTE PTR [rdx+0x0],dh
   14000788c:	outs   dx,DWORD PTR ds:[rsi]
   14000788d:	add    BYTE PTR [rax+rax*1+0x75],ah
   140007891:	add    BYTE PTR [rbx+0x0],ah
   140007894:	je     0x140007896
   140007896:	rex.WXB add BYTE PTR [r13+0x0],spl
   14000789a:	jns    0x14000789c
   14000789c:	push   rax
   14000789d:	add    BYTE PTR [rbp+0x0],dh
   1400078a0:	jb     0x1400078a2
   1400078a2:	movsxd eax,DWORD PTR [rax]
   1400078a4:	push   0x73006100
   1400078a9:	add    BYTE PTR [rbp+0x0],ah
   1400078ac:	add    BYTE PTR fs:[rdi+0x0],cl
   1400078b0:	outs   dx,BYTE PTR ds:[rsi]
   1400078b1:	add    BYTE PTR [rax+rax*1+0x69],ch
   1400078b5:	add    BYTE PTR [rsi+0x0],ch
   1400078b8:	add    BYTE PTR gs:[rax],al
   1400078bb:	add    BYTE PTR [rax],al
   1400078bd:	add    BYTE PTR [rax],al
   1400078bf:	add    BYTE PTR [rbp+0x0],dl
   1400078c2:	jo     0x1400078c4
   1400078c4:	add    BYTE PTR [edx+0x0],dh
   1400078c8:	(bad)  
   1400078c9:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400078cd:	add    BYTE PTR [rbx+0x0],dl
   1400078d0:	je     0x1400078d2
   1400078d2:	(bad)  
   1400078d3:	add    BYTE PTR [rdx+0x0],dh
   1400078d6:	je     0x1400078d8
   1400078d8:	push   rsp
   1400078d9:	add    BYTE PTR [rcx+0x0],ch
   1400078dc:	ins    DWORD PTR es:[rdi],dx
   1400078dd:	add    BYTE PTR [rbp+0x0],ah
	...
   1400078e8:	push   rbx
   1400078e9:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400078ed:	add    BYTE PTR [rax+rax*1+0x75],dh
   1400078f1:	add    BYTE PTR [rbx+0x0],dh
   1400078f4:	add    BYTE PTR [rax],al
   1400078f6:	add    BYTE PTR [rax],al
   1400078f8:	push   rdx
   1400078f9:	add    BYTE PTR [rbp+0x0],ah
   1400078fc:	jae    0x1400078fe
   1400078fe:	jne    0x140007900
   140007900:	ins    BYTE PTR es:[rdi],dx
   140007901:	add    BYTE PTR [rax+rax*1+0x73],dh
   140007905:	add    BYTE PTR [rax+0x0],dl
   140007908:	(bad)  
   140007909:	add    BYTE PTR [rdi+0x0],ah
   14000790c:	add    BYTE PTR gs:[rax],al
   14000790f:	add    BYTE PTR [rbp+0x0],al
   140007912:	jb     0x140007914
   140007914:	jb     0x140007916
   140007916:	outs   dx,DWORD PTR ds:[rsi]
   140007917:	add    BYTE PTR [rdx+0x0],dh
   14000791a:	rex.WRB add BYTE PTR [r13+0x0],r12b
   14000791e:	jae    0x140007920
   140007920:	jae    0x140007922
   140007922:	(bad)  
   140007923:	add    BYTE PTR [rdi+0x0],ah
   140007926:	add    BYTE PTR gs:[rax],al
   140007929:	add    BYTE PTR [rax],al
   14000792b:	add    BYTE PTR [rax],al
   14000792d:	add    BYTE PTR [rax],al
   14000792f:	add    BYTE PTR [rax+rax*1+0x65],al
   140007933:	add    BYTE PTR [rbx+0x0],dh
   140007936:	movsxd eax,DWORD PTR [rax]
   140007938:	jb     0x14000793a
   14000793a:	imul   eax,DWORD PTR [rax],0x740070
   140007940:	imul   eax,DWORD PTR [rax],0x6e006f
   140007946:	push   rdi
   140007947:	add    BYTE PTR [rdx+0x0],dh
   14000794a:	(bad)  
   14000794b:	add    BYTE PTR [rax+0x0],dh
   14000794e:	jo     0x140007950
   140007950:	add    BYTE PTR gs:[rdx+0x0],dh
   140007954:	add    BYTE PTR [rax],al
   140007956:	add    BYTE PTR [rax],al
   140007958:	add    BYTE PTR [r10+0x0],r14b
   14000795c:	jb     0x14000795e
   14000795e:	outs   dx,DWORD PTR ds:[rsi]
   14000795f:	add    BYTE PTR [rdx+0x0],dh
   140007962:	push   rdi
   140007963:	add    BYTE PTR [rdx+0x0],dh
   140007966:	(bad)  
   140007967:	add    BYTE PTR [rax+0x0],dh
   14000796a:	jo     0x14000796c
   14000796c:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   140007978:	push   rdx
   140007979:	add    BYTE PTR [rbp+0x0],ah
   14000797c:	jae    0x14000797e
   14000797e:	jne    0x140007980
   140007980:	ins    BYTE PTR es:[rdi],dx
   140007981:	add    BYTE PTR [rax+rax*1+0x73],dh
   140007985:	add    BYTE PTR [rbp+0x0],cl
   140007988:	add    BYTE PTR gs:[rbx+0x0],dh
   14000798c:	jae    0x14000798e
   14000798e:	(bad)  
   14000798f:	add    BYTE PTR [rdi+0x0],ah
   140007992:	add    BYTE PTR gs:[rax],al
   140007995:	add    BYTE PTR [rax],al
   140007997:	add    BYTE PTR [rbp+0x0],al
   14000799a:	add    BYTE PTR fs:[rcx+0x0],ch
   14000799e:	je     0x1400079a0
   1400079a0:	imul   eax,DWORD PTR [rax],0x6e006f
   1400079a6:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   1400079ab:	add    BYTE PTR [rax],al
   1400079ad:	add    BYTE PTR [rax],al
   1400079af:	add    BYTE PTR [rax+0x0],ch
   1400079b2:	je     0x1400079b4
   1400079b4:	je     0x1400079b6
   1400079b6:	jo     0x1400079b8
   1400079b8:	cmp    al,BYTE PTR [rax]
   1400079ba:	(bad)  
   1400079bb:	add    BYTE PTR [rdi],ch
   1400079bd:	add    BYTE PTR [rdi+0x0],ah
   1400079c0:	outs   dx,DWORD PTR ds:[rsi]
   1400079c1:	add    BYTE PTR [rsi],ch
   1400079c3:	add    BYTE PTR [rbp+0x0],ch
   1400079c6:	imul   eax,DWORD PTR [rax],0x720063
   1400079cc:	outs   dx,DWORD PTR ds:[rsi]
   1400079cd:	add    BYTE PTR [rbx+0x0],dh
   1400079d0:	outs   dx,DWORD PTR ds:[rsi]
   1400079d1:	add    BYTE PTR [rsi+0x0],ah
   1400079d4:	je     0x1400079d6
   1400079d6:	add    BYTE PTR cs:[rbx+0x0],ah
   1400079da:	outs   dx,DWORD PTR ds:[rsi]
   1400079db:	add    BYTE PTR [rbp+0x0],ch
   1400079de:	(bad)  
   1400079df:	add    BYTE PTR [rsi+0x0],ah
   1400079e2:	ja     0x1400079e4
   1400079e4:	ins    BYTE PTR es:[rdi],dx
   1400079e5:	add    BYTE PTR [rcx+0x0],ch
   1400079e8:	outs   dx,BYTE PTR ds:[rsi]
   1400079e9:	add    BYTE PTR [rbx+0x0],ch
   1400079ec:	(bad)  
   1400079ed:	add    BYTE PTR [rdi],bh
   1400079ef:	add    BYTE PTR [rax+rax*1+0x69],cl
   1400079f3:	add    BYTE PTR [rsi+0x0],ch
   1400079f6:	imul   eax,DWORD PTR [rax],0x49
   1400079f9:	add    BYTE PTR [rax+rax*1+0x3d],al
   1400079fd:	add    BYTE PTR [rsi],dh
   1400079ff:	add    BYTE PTR [rcx],dh
   140007a01:	add    BYTE PTR [rip+0x32003400],dh        # 0x17200ae07
   140007a07:	add    BYTE PTR [rax],dh
   140007a09:	add    BYTE PTR [rax],al
   140007a0b:	add    BYTE PTR [rax],al
   140007a0d:	add    BYTE PTR [rax],al
   140007a0f:	add    BYTE PTR [rdi*2-0x429cf214],cl
   140007a16:	pop    rcx
   140007a17:	rex.RXB stos BYTE PTR es:[rdi],al
   140007a19:	lods   eax,DWORD PTR fs:[rsi]
   140007a1b:	out    dx,eax
   140007a1c:	xlat   BYTE PTR ds:[rbx]
   140007a1d:	or     eax,0x4e9acf
   140007a22:	push   rbp
   140007a23:	add    BYTE PTR [rax+rax*1+0x4c],cl
	...
   140007a2f:	add    BYTE PTR [rip+0x3a007300],ah        # 0x17a00ed35
   140007a35:	add    BYTE PTR [rax],ah
   140007a37:	add    BYTE PTR [rax+0x0],ch
   140007a3a:	jb     0x140007a3c
   140007a3c:	cmp    eax,0x78003000
   140007a41:	add    BYTE PTR [rip+0x5800],ah        # 0x14000d247
	...
   140007a53:	add    BYTE PTR [rax+0x3d],cl
   140007a56:	lahf   
   140007a57:	push   rbp
   140007a58:	add    BYTE PTR [rax],al
   140007a5a:	add    BYTE PTR [rax],al
   140007a5c:	add    al,BYTE PTR [rax]
   140007a5e:	add    BYTE PTR [rax],al
   140007a60:	sub    eax,0xac000000
   140007a65:	jl     0x140007a67
   140007a67:	add    BYTE PTR [rax+rbx*2+0x0],ch
   140007a6e:	add    BYTE PTR [rax],al
   140007a70:	cmp    rax,0x559f
   140007a76:	add    BYTE PTR [rax],al
   140007a78:	or     eax,0x9c000000
   140007a7d:	add    al,BYTE PTR [rax]
   140007a7f:	add    al,dh
   140007a81:	jl     0x140007a83
   140007a83:	add    al,dh
   140007a85:	pop    rax
	...
   140007aae:	add    BYTE PTR [rax],al
   140007ab0:	movabs al,ds:0x0
	...
   140007b05:	add    BYTE PTR [rax],al
   140007b07:	add    BYTE PTR [rax],cl
   140007b09:	nop
   140007b0a:	add    BYTE PTR [rax+0x1],al
	...
   140007b1d:	add    BYTE PTR [rax],al
   140007b1f:	add    al,ch
   140007b21:	jb     0x140007b23
   140007b23:	rex add DWORD PTR [rax],eax
   140007b26:	add    BYTE PTR [rax],al
   140007b28:	lock jb 0x140007b2b
   140007b2b:	rex add DWORD PTR [rax],eax
   140007b2e:	add    BYTE PTR [rax],al
   140007b30:	push   rax
   140007b31:	jae    0x140007b33
   140007b33:	rex add DWORD PTR [rax],eax
   140007b36:	add    BYTE PTR [rax],al
   140007b38:	xor    eax,DWORD PTR [rax]
   140007b3a:	add    BYTE PTR [rax],al
   140007b3c:	add    BYTE PTR [rax],al
   140007b3e:	add    BYTE PTR [rax],al
   140007b40:	add    BYTE PTR [rip+0x0],dh        # 0x140007b46
	...
   140007b4e:	add    BYTE PTR [rax],al
   140007b50:	rex.RB push r12
   140007b52:	push   rdi
   140007b53:	xor    BYTE PTR [rax],dl
   140007b55:	add    BYTE PTR [rax],al
   140007b57:	add    DWORD PTR [rsi+0x2b88040e],eax
   140007b5d:	add    eax,0xb03bb8a
   140007b62:	add    eax,0x0
   140007b67:	add    BYTE PTR [rax],al
   140007b69:	add    BYTE PTR [rax],al
   140007b6c:	(bad)  
   140007b6d:	add    BYTE PTR [rax],al
   140007b6f:	rex.XB push 0x65676e61
   140007b75:	push   rax
   140007b76:	rex.WXB pop r15
   140007b78:	rex.X jne 0x140007bef
   140007b7b:	je     0x140007bec
   140007b7d:	outs   dx,BYTE PTR ds:[rsi]
   140007b7e:	rex.WB
   140007b7f:	add    BYTE PTR [rdx+0x75],r8b
   140007b83:	je     0x140007bf9
   140007b85:	outs   dx,DWORD PTR ds:[rsi]
   140007b86:	outs   dx,BYTE PTR ds:[rsi]
   140007b87:	rex.WB
   140007b88:	add    BYTE PTR [rax],r9b
   140007b8b:	add    ecx,DWORD PTR [rbx]
   140007b8d:	add    eax,0x2
   140007b92:	add    BYTE PTR [rax],al
   140007b94:	add    BYTE PTR [rax],al
   140007b97:	and    BYTE PTR [rax],al
   140007b99:	add    BYTE PTR [rcx+0x63],al
   140007b9c:	je     0x140007c07
   140007b9e:	jbe    0x140007c09
   140007ba0:	je     0x140007c1b
   140007ba2:	push   rbx
   140007ba3:	je     0x140007c14
   140007ba5:	jo     0x140007c17
   140007ba7:	gs fs rex.B jne 0x140007c20
   140007bac:	outs   dx,DWORD PTR ds:[rsi]
   140007bad:	ins    DWORD PTR es:[rdi],dx
   140007bae:	(bad)  
   140007baf:	je     0x140007c1a
   140007bb1:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007bb4:	ins    BYTE PTR es:[rdi],dx
   140007bb5:	jns    0x140007bb7
   140007bb7:	add    ecx,DWORD PTR [rbx]
   140007bb9:	add    eax,0x2
   140007bbe:	add    BYTE PTR [rax],al
   140007bc0:	add    BYTE PTR [rax],al
   140007bc3:	sbb    DWORD PTR [rax],eax
   140007bc5:	add    BYTE PTR [rbp+0x70],dl
   140007bc8:	addr32 jb 0x140007c2c
   140007bcb:	fs gs push rdx
   140007bce:	gs jae 0x140007c46
   140007bd1:	ins    BYTE PTR es:[rdi],dx
   140007bd2:	je     0x140007c47
   140007bd4:	push   rbp
   140007bd5:	rex.WB pop r15
   140007bd7:	push   rbx
   140007bd8:	je     0x140007c49
   140007bda:	jo     0x140007bdc
   140007bdc:	add    ecx,DWORD PTR [rbx]
   140007bde:	add    eax,0x1
   140007be3:	add    BYTE PTR [rax],al
   140007be5:	add    BYTE PTR [rax],al
   140007be8:	sbb    al,BYTE PTR [rax]
   140007bea:	add    BYTE PTR [rbp+0x70],dl
   140007bed:	addr32 jb 0x140007c51
   140007bf0:	fs gs push rdx
   140007bf3:	gs jae 0x140007c6b
   140007bf6:	ins    BYTE PTR es:[rdi],dx
   140007bf7:	je     0x140007c6c
   140007bf9:	push   rbp
   140007bfa:	rex.WB pop r15
   140007bfc:	push   rbx
   140007bfd:	je     0x140007c60
   140007bff:	jb     0x140007c75
   140007c01:	add    BYTE PTR [rbx],al
   140007c03:	or     eax,DWORD PTR [rip+0x0]        # 0x140007c09
   140007c09:	add    BYTE PTR [rax],al
   140007c0b:	add    BYTE PTR [rax],al
   140007c0e:	push   rdx
   140007c0f:	add    BYTE PTR [rax],al
   140007c11:	push   rbp
   140007c12:	jo     0x140007c7b
   140007c14:	jb     0x140007c77
   140007c16:	fs gs push rdx
   140007c19:	gs jae 0x140007c91
   140007c1c:	ins    BYTE PTR es:[rdi],dx
   140007c1d:	je     0x140007c92
   140007c1f:	push   rbp
   140007c20:	rex.WB pop r15
   140007c22:	push   rbp
   140007c23:	jo     0x140007c8c
   140007c25:	jb     0x140007c88
   140007c27:	fs gs push rdx
   140007c2a:	gs jae 0x140007ca2
   140007c2d:	ins    BYTE PTR es:[rdi],dx
   140007c2e:	je     0x140007ca3
   140007c30:	add    BYTE PTR [rbx+0x75],dl
   140007c33:	movsxd esp,DWORD PTR [rbx+0x65]
   140007c36:	gs fs gs add BYTE PTR fs:[rdi],al
   140007c3c:	rex.WRXB jb 0x140007ca8
   140007c3f:	outs   dx,BYTE PTR ds:[esi]
   140007c41:	(bad)  
   140007c42:	ins    BYTE PTR es:[rdi],dx
   140007c43:	push   rax
   140007c44:	jb     0x140007cb5
   140007c46:	fs jne 0x140007cac
   140007c49:	je     0x140007c94
   140007c4b:	add    BYTE PTR fs:[rax],cl
   140007c4e:	rex.XB jne 0x140007cc3
   140007c51:	jb     0x140007cb8
   140007c53:	outs   dx,BYTE PTR ds:[rsi]
   140007c54:	je     0x140007ca6
   140007c56:	jb     0x140007cc7
   140007c58:	fs jne 0x140007cbe
   140007c5b:	je     0x140007ca6
   140007c5d:	add    BYTE PTR fs:[rax],cl
   140007c60:	add    al,0xb4
   140007c62:	add    BYTE PTR [rax],dh
   140007c64:	fwait
   140007c65:	movabs ds:0xc30389b49144ec3f,eax
   140007c6e:	xor    DWORD PTR [rsi+rdi*1+0x3a],edx
   140007c72:	add    BYTE PTR [rbp+0x69],cl
   140007c75:	movsxd esi,DWORD PTR [rdx+0x6f]
   140007c78:	jae    0x140007ce9
   140007c7a:	data16 je 0x140007cab
   140007c7d:	push   rdi
   140007c7e:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   140007c85:	imul   r12,QWORD PTR [rbx+0x65],0x6e69736e
   140007c8d:	addr32 cs rex.XB push 0x65676e61
   140007c95:	push   rax
   140007c96:	rex.WXB add BYTE PTR [r11],dl
   140007c99:	add    BYTE PTR [rcx],al
   140007c9b:	sbb    dh,BYTE PTR [rbx+0x50]
   140007c9e:	rex.WRXB iretq 
   140007ca0:	mov    DWORD PTR [rdx-0x231f4cb9],eax
   140007ca6:	call   0xfa768174
   140007cab:	add    DWORD PTR [rdx+0x53],edx
   140007cae:	rex.R push rbx
   140007cb0:	jno    0x140007ce5
   140007cb2:	(bad)  
   140007cb3:	(bad)  
   140007cb4:	xor    ebp,DWORD PTR [rdi+0x5c]
   140007cb7:	rex.RX mov cs,WORD PTR [rsi+0x759561ac]
   140007cbe:	add    al,ch
   140007cc0:	add    DWORD PTR [rax],eax
   140007cc2:	add    BYTE PTR [rax],al
   140007cc4:	push   rbp
   140007cc5:	jo     0x140007d2e
   140007cc7:	jb     0x140007d2a
   140007cc9:	fs gs push rdx
   140007ccc:	gs jae 0x140007d44
   140007ccf:	ins    BYTE PTR es:[rdi],dx
   140007cd0:	je     0x140007d45
   140007cd2:	push   rbp
   140007cd3:	rex.WB
   140007cd4:	cs jo  0x140007d3b
   140007cd7:	(bad)  
	...
   140007cf0:	rex.RXB
   140007cf1:	rex.XB push r12
   140007cf3:	rex.WR add BYTE PTR [rax],r10b
   140007cf6:	add    BYTE PTR [rax],al
   140007cf8:	jae    0x140007cfb
   140007cfa:	add    BYTE PTR [rax],al
   140007cfc:	cs je  0x140007d64
   140007cff:	js     0x140007d75
   140007d01:	add    BYTE PTR [rax],al
   140007d03:	add    BYTE PTR [rcx+rdx*1+0x0],dh
   140007d07:	add    BYTE PTR [rax+0x2e000001],bh
   140007d0d:	je     0x140007d74
   140007d0f:	js     0x140007d85
   140007d11:	and    al,0x64
   140007d13:	imul   eax,DWORD PTR [rax],0x30000000
   140007d19:	adc    eax,DWORD PTR [rax]
   140007d1b:	add    BYTE PTR [rax+0x42],ch
   140007d1e:	add    BYTE PTR [rax],al
   140007d20:	cs je  0x140007d88
   140007d23:	js     0x140007d99
   140007d25:	and    al,0x6d
   140007d27:	outs   dx,BYTE PTR ds:[rsi]
   140007d28:	add    BYTE PTR [rax],al
   140007d2a:	add    BYTE PTR [rax],al
   140007d2c:	movabs al,ds:0x2e00000051000055
   140007d35:	je     0x140007d9c
   140007d37:	js     0x140007dad
   140007d39:	and    al,0x6d
   140007d3b:	outs   dx,BYTE PTR ds:[rsi]
   140007d3c:	and    al,0x30
   140007d3e:	xor    BYTE PTR [rax],al
   140007d40:	add    BYTE PTR [rsi+0x0],dl
   140007d43:	add    BYTE PTR [rax+0x2e000000],ah
   140007d49:	je     0x140007db0
   140007d4b:	js     0x140007dc1
   140007d4d:	and    al,0x78
   140007d4f:	add    BYTE PTR [rax-0x6ffffaa],ah
   140007d55:	add    BYTE PTR [rax],al
   140007d57:	add    BYTE PTR [rsi],ch
   140007d59:	je     0x140007dc0
   140007d5b:	js     0x140007dd1
   140007d5d:	and    al,0x79
   140007d5f:	add    BYTE PTR fs:[rax],al
   140007d62:	add    BYTE PTR [rax],al
   140007d64:	add    BYTE PTR [rax+0x0],ah
   140007d67:	add    BYTE PTR [rax+rax*1],al
   140007d6a:	add    BYTE PTR [rax],al
   140007d6c:	imul   ebp,DWORD PTR cs:[rbp+0x72],0x766973
   140007d74:	add    BYTE PTR [rax+0x0],dh
   140007d77:	add    al,ch
   140007d79:	add    al,BYTE PTR [rax]
   140007d7b:	add    BYTE PTR [rsi],ch
   140007d7d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   140007d85:	add    BYTE PTR [rax],al
   140007d87:	add    al,ch
   140007d89:	jb     0x140007d8b
   140007d8b:	add    BYTE PTR [rax],dl
   140007d8d:	add    BYTE PTR [rax],al
   140007d8f:	add    BYTE PTR [rsi],ch
   140007d91:	xor    BYTE PTR [rax],dh
   140007d93:	movsxd esp,DWORD PTR [rsi+0x67]
   140007d96:	add    BYTE PTR [rax],al
   140007d98:	clc    
   140007d99:	jb     0x140007d9b
   140007d9b:	add    BYTE PTR [rax],cl
   140007d9d:	add    BYTE PTR [rax],al
   140007d9f:	add    BYTE PTR [rsi],ch
   140007da1:	rex.XB push r10
   140007da3:	push   rsp
   140007da4:	and    al,0x58
   140007da6:	rex.XB
   140007da7:	add    BYTE PTR [r8],al
   140007daa:	add    BYTE PTR [rax],al
   140007dac:	add    BYTE PTR [rbx+0x0],dh
   140007daf:	add    BYTE PTR [rax],cl
   140007db1:	add    BYTE PTR [rax],al
   140007db3:	add    BYTE PTR [rsi],ch
   140007db5:	rex.XB push r10
   140007db7:	push   rsp
   140007db8:	and    al,0x58
   140007dba:	rex.XB
   140007dbb:	rex.B
   140007dbc:	add    BYTE PTR [r8],al
   140007dbf:	add    BYTE PTR [rax],cl
   140007dc1:	jae    0x140007dc3
   140007dc3:	add    BYTE PTR [rax],ah
   140007dc5:	add    BYTE PTR [rax],al
   140007dc7:	add    BYTE PTR [rsi],ch
   140007dc9:	rex.XB push r10
   140007dcb:	push   rsp
   140007dcc:	and    al,0x58
   140007dce:	rex.XB push r13
   140007dd0:	add    BYTE PTR [rax],al
   140007dd2:	add    BYTE PTR [rax],al
   140007dd4:	sub    BYTE PTR [rbx+0x0],dh
   140007dd7:	add    BYTE PTR [rax],cl
   140007dd9:	add    BYTE PTR [rax],al
   140007ddb:	add    BYTE PTR [rsi],ch
   140007ddd:	rex.XB push r10
   140007ddf:	push   rsp
   140007de0:	and    al,0x58
   140007de2:	rex.XB pop r10
   140007de4:	add    BYTE PTR [rax],al
   140007de6:	add    BYTE PTR [rax],al
   140007de8:	xor    BYTE PTR [rbx+0x0],dh
   140007deb:	add    BYTE PTR [rax],cl
   140007ded:	add    BYTE PTR [rax],al
   140007def:	add    BYTE PTR [rsi],ch
   140007df1:	rex.XB push r10
   140007df3:	push   rsp
   140007df4:	and    al,0x58
   140007df6:	rex.WB
   140007df7:	add    BYTE PTR [r8],al
   140007dfa:	add    BYTE PTR [rax],al
   140007dfc:	cmp    BYTE PTR [rbx+0x0],dh
   140007dff:	add    BYTE PTR [rax],cl
   140007e01:	add    BYTE PTR [rax],al
   140007e03:	add    BYTE PTR [rsi],ch
   140007e05:	rex.XB push r10
   140007e07:	push   rsp
   140007e08:	and    al,0x58
   140007e0a:	rex.WB
   140007e0b:	rex.B
   140007e0c:	add    BYTE PTR [r8],al
   140007e0f:	add    BYTE PTR [rax+0x73],al
   140007e12:	add    BYTE PTR [rax],al
   140007e14:	or     BYTE PTR [rax],al
   140007e16:	add    BYTE PTR [rax],al
   140007e18:	cs rex.XB push r10
   140007e1b:	push   rsp
   140007e1c:	and    al,0x58
   140007e1e:	rex.WB pop r9
   140007e20:	add    BYTE PTR [rax],al
   140007e22:	add    BYTE PTR [rax],al
   140007e24:	rex.W jae 0x140007e27
   140007e27:	add    BYTE PTR [rax],cl
   140007e29:	add    BYTE PTR [rax],al
   140007e2b:	add    BYTE PTR [rsi],ch
   140007e2d:	rex.XB push r10
   140007e2f:	push   rsp
   140007e30:	and    al,0x58
   140007e32:	rex.WB pop r10
   140007e34:	add    BYTE PTR [rax],al
   140007e36:	add    BYTE PTR [rax],al
   140007e38:	push   rax
   140007e39:	jae    0x140007e3b
   140007e3b:	add    ah,cl
   140007e3d:	add    BYTE PTR [rax],al
   140007e3f:	add    BYTE PTR [rsi],ch
   140007e41:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   140007e49:	add    BYTE PTR [rax],al
   140007e4b:	add    BYTE PTR [rax],ah
   140007e4d:	je     0x140007e4f
   140007e4f:	add    BYTE PTR [rax],dh
   140007e51:	(bad)  
   140007e52:	add    BYTE PTR [rax],al
   140007e54:	cs jb  0x140007ebb
   140007e57:	(bad)  
   140007e58:	je     0x140007ebb
   140007e5a:	add    BYTE PTR [rax],al
   140007e5c:	push   rax
   140007e5d:	jnp    0x140007e5f
   140007e5f:	add    BYTE PTR [rax],dl
   140007e61:	add    BYTE PTR [rax],al
   140007e63:	add    BYTE PTR [rsi],ch
   140007e65:	jb     0x140007ecb
   140007e67:	(bad)  
   140007e68:	je     0x140007ecb
   140007e6a:	and    al,0x7a
   140007e6c:	rex.RB push r12
   140007e6e:	push   rdi
   140007e6f:	xor    BYTE PTR [rax],al
   140007e71:	add    BYTE PTR [rax],al
   140007e73:	add    BYTE PTR [rax+0x7b],ah
   140007e76:	add    BYTE PTR [rax],al
   140007e78:	add    BYTE PTR [rcx],al
   140007e7a:	add    BYTE PTR [rax],al
   140007e7c:	cs jb  0x140007ee3
   140007e7f:	(bad)  
   140007e80:	je     0x140007ee3
   140007e82:	and    al,0x7a
   140007e84:	rex.RB push r12
   140007e86:	push   rdi
   140007e87:	xor    DWORD PTR [rax],eax
   140007e89:	add    BYTE PTR [rax],al
   140007e8b:	add    BYTE PTR [rax+0x7c],ah
   140007e8e:	add    BYTE PTR [rax],al
   140007e90:	rex.WXB add BYTE PTR [r8],al
   140007e93:	add    BYTE PTR [rsi],ch
   140007e95:	jb     0x140007efb
   140007e97:	(bad)  
   140007e98:	je     0x140007efb
   140007e9a:	and    al,0x7a
   140007e9c:	rex.RB push r12
   140007e9e:	push   rdi
   140007e9f:	xor    al,BYTE PTR [rax]
   140007ea1:	add    BYTE PTR [rax],al
   140007ea3:	add    BYTE PTR [rbx+0x100007c],ch
   140007ea9:	add    BYTE PTR [rax],al
   140007eab:	add    BYTE PTR [rsi],ch
   140007ead:	jb     0x140007f13
   140007eaf:	(bad)  
   140007eb0:	je     0x140007f13
   140007eb2:	and    al,0x7a
   140007eb4:	rex.RB push r12
   140007eb6:	push   rdi
   140007eb7:	cmp    DWORD PTR [rax],eax
   140007eb9:	add    BYTE PTR [rax],al
   140007ebb:	add    BYTE PTR [rsp+rdi*2+0x2e00000],ch
   140007ec2:	add    BYTE PTR [rax],al
   140007ec4:	cs jb  0x140007f2b
   140007ec7:	(bad)  
   140007ec8:	je     0x140007f2b
   140007eca:	and    al,0x7a
   140007ecc:	jp     0x140007f48
   140007ece:	fs (bad) 
   140007ed0:	add    BYTE PTR [eax],al
   140007ed3:	add    BYTE PTR [rax-0x43ffff81],dl
   140007ed9:	add    al,0x0
   140007edb:	add    BYTE PTR [rsi],ch
   140007edd:	js     0x140007f43
   140007edf:	(bad)  
   140007ee0:	je     0x140007f43
   140007ee2:	add    BYTE PTR [rax],al
   140007ee4:	push   rax
   140007ee5:	test   BYTE PTR [rax],al
   140007ee7:	add    al,cl
   140007ee9:	add    BYTE PTR [rax],al
   140007eeb:	add    BYTE PTR [rsi],ch
   140007eed:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   140007ef5:	add    BYTE PTR [rax],al
   140007ef7:	add    BYTE PTR [rax],bl
   140007ef9:	test   DWORD PTR [rax],eax
   140007efb:	add    BYTE PTR [rax+rax*1],dl
   140007efe:	add    BYTE PTR [rax],al
   140007f00:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140007f09:	add    BYTE PTR [rax],al
   140007f0b:	add    BYTE PTR [rax],dh
   140007f0d:	test   DWORD PTR [rax],eax
   140007f0f:	add    al,ch
   140007f11:	add    al,BYTE PTR [rax]
   140007f13:	add    BYTE PTR [rsi],ch
   140007f15:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   140007f1d:	add    BYTE PTR [rax],al
   140007f1f:	add    BYTE PTR [rax],bl
   140007f21:	mov    BYTE PTR [rax],al
   140007f23:	add    BYTE PTR [rdi+rax*1+0x0],ch
   140007f27:	add    BYTE PTR [rsi],ch
   140007f29:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   140007f31:	add    BYTE PTR [rax],al
   140007f33:	add    BYTE PTR [rax],al
   140007f35:	nop
   140007f36:	add    BYTE PTR [rax],al
   140007f38:	(bad)  
   140007f39:	add    BYTE PTR [rax],al
   140007f3b:	add    BYTE PTR [rsi],ch
   140007f3d:	fs (bad) 
   140007f3f:	je     0x140007fa2
   140007f41:	add    BYTE PTR [rax],al
   140007f43:	add    BYTE PTR [rax-0x17ffff70],al
   140007f49:	(bad)  
   140007f4a:	add    BYTE PTR [rax],al
   140007f4c:	cs (bad) 
   140007f4f:	jae    0x140007f51
   140007f51:	add    BYTE PTR [rax],al
   140007f53:	add    BYTE PTR [rax],al
   140007f55:	movabs al,ds:0x702e000004740000
   140007f5e:	fs (bad) 
   140007f60:	je     0x140007fc3
   140007f62:	add    BYTE PTR [rax],al
   140007f64:	add    BYTE PTR [rax+0x1480000],dh
   140007f6a:	add    BYTE PTR [rax],al
   140007f6c:	cs jb  0x140007fe2
   140007f6f:	jb     0x140007fd4
   140007f71:	and    al,0x30
   140007f73:	xor    DWORD PTR [rax],eax
   140007f75:	add    BYTE PTR [rax],al
   140007f77:	add    BYTE PTR [rax-0x4f],dl
   140007f7a:	add    BYTE PTR [rax],al
   140007f7c:	call   0x16e007f92
   140007f81:	jb     0x140007ff6
   140007f83:	jb     0x140007fe8
   140007f85:	and    al,0x30
   140007f87:	xor    al,BYTE PTR [rax]
   140007f89:	add    BYTE PTR [rax],al
   140007f8b:	add    BYTE PTR [rax],al
   140007f8d:	add    BYTE PTR [rax],al
   140007f8f:	add    BYTE PTR [rcx],al
   140007f91:	(bad)  
   140007f92:	add    al,BYTE PTR [rax]
   140007f94:	(bad)  
   140007f95:	xor    al,BYTE PTR [rdx]
   140007f97:	xor    BYTE PTR [rcx],al
   140007f99:	add    al,0x1
   140007f9b:	add    BYTE PTR [rdx+rax*2],al
   140007f9e:	add    BYTE PTR [rax],al
   140007fa0:	add    DWORD PTR [rsi],eax
   140007fa2:	add    al,BYTE PTR [rax]
   140007fa4:	(bad)  
   140007fa5:	xor    al,BYTE PTR [rdx]
   140007fa7:	jo     0x140007faa
   140007fa9:	adc    al,0x8
   140007fab:	add    BYTE PTR [rsp+riz*2],dl
   140007fae:	or     eax,DWORD PTR [rax]
   140007fb0:	adc    al,0x54
   140007fb2:	or     al,BYTE PTR [rax]
   140007fb4:	adc    al,0x34
   140007fb6:	or     BYTE PTR [rax],al
   140007fb8:	adc    al,0x52
   140007fba:	adc    BYTE PTR [rax+0x1],dh
   140007fbd:	adc    al,0x8
   140007fbf:	add    BYTE PTR [rsp+riz*2],dl
   140007fc2:	or     eax,DWORD PTR [rax]
   140007fc4:	adc    al,0x54
   140007fc6:	or     al,BYTE PTR [rax]
   140007fc8:	adc    al,0x34
   140007fca:	or     DWORD PTR [rax],eax
   140007fcc:	adc    al,0x52
   140007fce:	adc    BYTE PTR [rax+0x1],dh
   140007fd1:	sbb    al,0xa
   140007fd3:	add    BYTE PTR [rsp+rsi*1],bl
   140007fd6:	(bad)  
   140007fd7:	add    BYTE PTR [rdx+rdx*2],bl
   140007fda:	adc    eax,0x11e013f0
   140007fdf:	ror    BYTE PTR [rdi],1
   140007fe1:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b608c58
   140007fe8:	add    DWORD PTR [rsi+rax*1],edx
   140007feb:	add    BYTE PTR [rdx+rsi*2],dl
   140007fee:	adc    al,dh
   140007ff0:	(bad)  
   140007ff1:	loopne 0x140007fff
   140007ff3:	jo     0x140008000
   140007ff5:	(bad)  
   140007ff6:	or     dh,BYTE PTR [rax]
   140007ff8:	add    DWORD PTR [rdx],edx
   140007ffa:	or     BYTE PTR [rax],al
   140007ffc:	adc    dl,BYTE PTR [rsp+rcx*1+0x0]
   140008000:	adc    dh,BYTE PTR [rbx+rcx*1]
   140008003:	add    BYTE PTR [rdx],dl
   140008005:	push   rdx
   140008006:	(bad)  
   140008007:	loopne 0x140008015
   140008009:	jo     0x140008016
   14000800b:	(bad)  
   14000800c:	add    DWORD PTR [rdx],ecx
   14000800e:	add    al,0x0
   140008010:	or     dh,BYTE PTR [rsi+rax*1]
   140008013:	add    BYTE PTR [rdx],cl
   140008015:	xor    al,BYTE PTR [rsi]
   140008017:	jo     0x140008032
   140008019:	(bad)  
   14000801a:	(bad)  
   14000801b:	add    BYTE PTR [rdi],cl
   14000801d:	adc    eax,DWORD PTR fs:[rax]
   140008020:	sysenter 
   140008022:	adc    BYTE PTR [rax],al
   140008024:	psrld  mm1,QWORD PTR [rbx]
   140008027:	jo     0x140008021
   140008029:	push   rsp
   14000802a:	add    BYTE PTR [rax],al
   14000802c:	push   0x1000000
   140008031:	sbb    BYTE PTR [rdx],cl
   140008033:	add    BYTE PTR [rax],bl
   140008035:	or     eax,DWORD PTR fs:[rax]
   140008038:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14000803c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000803f:	add    BYTE PTR [rax],bl
   140008041:	xor    dl,BYTE PTR [rax+rsi*8]
   140008044:	adc    ah,al
   140008046:	adc    BYTE PTR [rax+0x1],dh
   140008049:	sbb    al,0xc
   14000804b:	add    BYTE PTR [rsp+riz*2],bl
   14000804e:	or     eax,0xc541c00
   140008053:	add    BYTE PTR [rsp+rsi*1],bl
   140008056:	or     eax,DWORD PTR [rax]
   140008058:	sbb    al,0x32
   14000805a:	sbb    al,dh
   14000805c:	(bad)  
   14000805d:	loopne 0x140008073
   14000805f:	rcl    BYTE PTR [rdx],1
   140008061:	rcl    BYTE PTR [rax],0x70
   140008064:	add    DWORD PTR [rsi],ebx
   140008066:	or     al,0x0
   140008068:	(bad)  
   140008069:	push   0x64180002
   14000806e:	or     eax,0xc541800
   140008073:	add    BYTE PTR [rax],bl
   140008075:	xor    al,0xb
   140008077:	add    BYTE PTR [rax],bl
   140008079:	push   rdx
   14000807a:	adc    al,0xf0
   14000807c:	adc    ah,al
   14000807e:	adc    BYTE PTR [rax+0x1],dh
   140008081:	clts   
   140008083:	add    BYTE PTR [rdi],cl
   140008085:	fs (bad) 
   140008087:	add    BYTE PTR [rdi],cl
   140008089:	xor    al,0x6
   14000808b:	add    BYTE PTR [rdi],cl
   14000808d:	xor    cl,BYTE PTR [rbx]
   14000808f:	jo     0x140008092
   140008091:	adc    eax,DWORD PTR [rsi]
   140008093:	add    BYTE PTR [rbx],dl
   140008095:	or     BYTE PTR fs:[rax],al
   140008098:	adc    esi,DWORD PTR [rsi+rax*1]
   14000809b:	add    BYTE PTR [rbx],dl
   14000809d:	xor    cl,BYTE PTR [rdi]
   14000809f:	jo     0x1400080a2
   1400080a1:	(bad)  
   1400080a2:	add    al,BYTE PTR [rax]
   1400080a4:	(bad)  
   1400080a5:	jb     0x1400080a9
   1400080a7:	xor    BYTE PTR [rcx],bl
   1400080a9:	(bad)  
   1400080aa:	(bad)  
   1400080ab:	add    BYTE PTR [rdi],cl
   1400080ad:	fs or  al,0x0
   1400080b0:	sysenter 
   1400080b2:	or     eax,DWORD PTR [rax]
   1400080b4:	(bad)  
   1400080b6:	or     esi,DWORD PTR [rax-0x8]
   1400080b9:	push   rsp
   1400080ba:	add    BYTE PTR [rax],al
   1400080bc:	xor    BYTE PTR [rax],al
   1400080be:	add    BYTE PTR [rax],al
   1400080c0:	sbb    DWORD PTR [rsi],esp
   1400080c2:	or     DWORD PTR [rax],eax
   1400080c4:	sbb    BYTE PTR [rdx+rbx*1],dh
   1400080c7:	add    BYTE PTR [rax],bl
   1400080c9:	add    DWORD PTR [rdx],edx
   1400080cb:	add    BYTE PTR [rax+rsi*8],cl
   1400080ce:	or     ah,al
   1400080d0:	or     BYTE PTR [rax+0x7],dh
   1400080d3:	(bad)  
   1400080d4:	(bad)  
   1400080d5:	push   rax
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	clc    
   1400080d9:	push   rsp
   1400080da:	add    BYTE PTR [rax],al
   1400080dc:	mov    BYTE PTR [rax],al
   1400080de:	add    BYTE PTR [rax],al
   1400080e0:	add    DWORD PTR [rcx],ebx
   1400080e2:	or     al,BYTE PTR [rax]
   1400080e4:	sbb    DWORD PTR [rsi+rcx*1],esi
   1400080e7:	add    BYTE PTR [rcx],bl
   1400080e9:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e094df
   1400080ef:	ror    BYTE PTR [rdi],1
   1400080f1:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b608d68
   1400080f8:	add    DWORD PTR [rbx],edx
   1400080fa:	add    al,BYTE PTR [rax]
   1400080fc:	adc    esi,DWORD PTR [rdx]
   1400080fe:	wrmsr  
   140008100:	add    DWORD PTR [rdx],edx
   140008102:	or     BYTE PTR [rax],al
   140008104:	adc    dl,BYTE PTR [rdx+rcx*1+0x0]
   140008108:	adc    dh,BYTE PTR [rcx+rcx*1]
   14000810b:	add    BYTE PTR [rdx],dl
   14000810d:	xor    cl,BYTE PTR [rsi]
   14000810f:	loopne 0x14000811d
   140008111:	jo     0x14000811e
   140008113:	(bad)  
   140008114:	add    DWORD PTR [rdx],edx
   140008116:	add    eax,0xe421200
   14000811b:	jo     0x14000812a
   14000811d:	(bad)  
   14000811e:	or     al,0x50
   140008120:	or     esi,DWORD PTR [rax]
   140008122:	add    BYTE PTR [rax],al
   140008124:	add    DWORD PTR [rdx],ecx
   140008126:	add    al,0x0
   140008128:	or     dh,BYTE PTR [rsp+rcx*1]
   14000812b:	add    BYTE PTR [rdx],cl
   14000812d:	xchg   edx,eax
   14000812e:	(bad)  
   14000812f:	jo     0x140008132
   140008131:	(bad)  
   140008132:	or     al,BYTE PTR [rax]
   140008134:	(bad)  
   140008135:	push   rsp
   140008136:	or     al,0x0
   140008138:	(bad)  
   140008139:	xor    al,0xb
   14000813b:	add    BYTE PTR [rsi],dl
   14000813d:	xor    dl,BYTE PTR [rdx]
   14000813f:	lock adc al,ah
   140008142:	(bad)  
   140008143:	ror    BYTE PTR [rax+rsi*2],0xb
   140008147:	(bad)  
   140008148:	add    DWORD PTR [rax+rcx*1],edx
   14000814b:	add    BYTE PTR [rsp+riz*2],dl
   14000814e:	or     BYTE PTR [rax],al
   140008150:	adc    al,0x54
   140008152:	(bad)  
   140008153:	add    BYTE PTR [rsp+rsi*1],dl
   140008156:	(bad)  
   140008157:	add    BYTE PTR [rdx+rsi*1],dl
   14000815a:	adc    BYTE PTR [rax+0x1],dh
   14000815d:	(bad)  
   14000815e:	add    al,BYTE PTR [rax]
   140008160:	(bad)  
   140008161:	push   rdx
   140008162:	add    dh,BYTE PTR [rax]
   140008164:	add    DWORD PTR [rbx],edx
   140008166:	or     BYTE PTR [rax],al
   140008168:	adc    esp,DWORD PTR [rdx+rcx*1+0x0]
   14000816c:	adc    esi,DWORD PTR [rax+rcx*1]
   14000816f:	add    BYTE PTR [rbx],dl
   140008171:	xor    cl,BYTE PTR [rdi]
   140008173:	lock or eax,0x1700be0
   140008179:	sbb    BYTE PTR [rdx],cl
   14000817b:	add    BYTE PTR [rax],bl
   14000817d:	or     al,BYTE PTR fs:[rax]
   140008180:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140008184:	sbb    BYTE PTR [rax+rcx*1],dh
   140008187:	add    BYTE PTR [rax],bl
   140008189:	xor    dl,BYTE PTR [rax+rsi*8]
   14000818c:	adc    ah,al
   14000818e:	adc    BYTE PTR [rax+0x1],dh
   140008191:	clts   
   140008193:	add    BYTE PTR [rdi],cl
   140008195:	or     al,BYTE PTR fs:[rax]
   140008198:	sysenter 
   14000819a:	or     DWORD PTR [rax],eax
   14000819c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000819f:	jo     0x1400081a2
   1400081a1:	(bad)  
   1400081a2:	add    al,0x0
   1400081a4:	(bad)  
   1400081a5:	xor    al,0x6
   1400081a7:	add    BYTE PTR [rsi],cl
   1400081a9:	xor    cl,BYTE PTR [rdx]
   1400081ab:	jo     0x1400081ae
   1400081ad:	adc    eax,DWORD PTR [rip+0x15341300]        # 0x1553494b3
   1400081b3:	add    BYTE PTR [rbx],dl
   1400081b5:	add    DWORD PTR [rdx],edx
   1400081b7:	add    BYTE PTR [rax+rsi*2],cl
   1400081ba:	add    BYTE PTR [rax],al
   1400081bc:	add    DWORD PTR [rdi],edx
   1400081be:	(bad)  
   1400081bf:	add    BYTE PTR [rdi],dl
   1400081c1:	push   rsp
   1400081c2:	or     al,0x0
   1400081c4:	(bad)  
   1400081c5:	push   rdx
   1400081c6:	adc    edx,eax
   1400081c8:	adc    DWORD PTR [rax+0x10],esi
   1400081cb:	(bad)  
   1400081cc:	add    DWORD PTR [rsp+rax*1],edx
   1400081cf:	add    BYTE PTR [rsp+rsi*1],dl
   1400081d2:	or     BYTE PTR [rax],al
   1400081d4:	adc    al,0x52
   1400081d6:	adc    BYTE PTR [rax+0x1],dh
   1400081d9:	adc    BYTE PTR [rax+rax*1],al
   1400081dc:	adc    BYTE PTR [rax+rcx*1],dh
   1400081df:	add    BYTE PTR [rax],dl
   1400081e1:	push   rdx
   1400081e2:	or     al,0x70
   1400081e4:	sbb    DWORD PTR [rcx],ebx
   1400081e6:	add    al,0x0
   1400081e8:	or     dh,BYTE PTR [rsi+rcx*1]
   1400081eb:	add    BYTE PTR [rdx],cl
   1400081ed:	mov    dl,0x6
   1400081ef:	jo     0x1400081e9
   1400081f1:	push   rsp
   1400081f2:	add    BYTE PTR [rax],al
   1400081f4:	push   rax
   1400081f5:	add    BYTE PTR [rax],al
   1400081f7:	add    BYTE PTR [rcx],bl
   1400081f9:	adc    eax,DWORD PTR [rcx]
   1400081fb:	add    BYTE PTR [rdx+rax*8],al
   1400081fe:	add    BYTE PTR [rax],al
   140008200:	clc    
   140008201:	push   rsp
   140008202:	add    BYTE PTR [rax],al
   140008204:	push   rax
   140008205:	add    BYTE PTR [rax],al
   140008207:	add    BYTE PTR [rcx],al
   140008209:	adc    eax,0x74150008
   14000820e:	or     BYTE PTR [rax],al
   140008210:	adc    eax,0x15000764
   140008215:	xor    al,0x6
   140008217:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e0934f
   14000821d:	sbb    eax,0x741d000c
   140008222:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d00908d
   140008229:	push   rsp
   14000822a:	or     eax,0xc341d00
   14000822f:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f09ba7
   140008235:	loopne 0x14000824c
   140008237:	rol    BYTE PTR [rcx],0x4
   14000823a:	add    DWORD PTR [rax],eax
   14000823c:	add    al,0xa2
   14000823e:	add    BYTE PTR [rax],al
   140008240:	add    DWORD PTR [rbx],edx
   140008242:	or     BYTE PTR [rax],al
   140008244:	adc    edx,DWORD PTR [rbp+rcx*1+0x0]
   140008248:	adc    esi,DWORD PTR [rdx+rcx*1]
   14000824b:	add    BYTE PTR [rbx],dl
   14000824d:	push   rdx
   14000824e:	pavgb  mm1,QWORD PTR [rip+0x19600c70]        # 0x159608ec5
   140008255:	sub    al,0xb
   140008257:	add    BYTE PTR [rsi],bl
   140008259:	fs (bad) 
   14000825b:	add    BYTE PTR [rsi],bl
   14000825d:	xor    al,0x1c
   14000825f:	add    BYTE PTR [rsi],bl
   140008261:	add    DWORD PTR [rsi],edx
   140008263:	add    BYTE PTR [rdx],dl
   140008265:	lock adc al,ah
   140008268:	(bad)  
   140008269:	ror    BYTE PTR [rax+rsi*2],0xb
   14000826d:	push   rax
   14000826e:	add    BYTE PTR [rax],al
   140008270:	clc    
   140008271:	push   rsp
   140008272:	add    BYTE PTR [rax],al
   140008274:	movabs al,ds:0x19000a1901000000
   14000827d:	je     0x140008288
   14000827f:	add    BYTE PTR [rcx],bl
   140008281:	or     BYTE PTR fs:[rax],al
   140008284:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140008288:	sbb    DWORD PTR [rsi+rax*1],esi
   14000828b:	add    BYTE PTR [rcx],bl
   14000828d:	xor    dl,BYTE PTR [rip+0x81c01e0]        # 0x1481c8473
   140008293:	add    BYTE PTR [rsp+rdx*2],bl
   140008296:	or     eax,DWORD PTR [rax]
   140008298:	sbb    al,0x34
   14000829a:	or     al,BYTE PTR [rax]
   14000829c:	sbb    al,0x52
   14000829e:	sbb    al,ah
   1400082a0:	(bad)  
   1400082a1:	jo     0x1400082b8
   1400082a3:	(bad)  
   1400082a4:	add    DWORD PTR [rdx+rax*1],edx
   1400082a7:	add    BYTE PTR [rdx+rsi*1],dl
   1400082aa:	adc    BYTE PTR [rax],dh
   1400082ac:	sbb    DWORD PTR [rbx],edx
   1400082ae:	add    DWORD PTR [rax],eax
   1400082b0:	add    al,0x82
   1400082b2:	add    BYTE PTR [rax],al
   1400082b4:	clc    
   1400082b5:	push   rsp
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	xor    BYTE PTR [rax],al
   1400082ba:	add    BYTE PTR [rax],al
   1400082bc:	sbb    DWORD PTR [rcx],ebp
   1400082be:	or     eax,DWORD PTR [rax]
   1400082c0:	(bad)  
   1400082c1:	xor    al,0x57
   1400082c3:	add    BYTE PTR [rdi],dl
   1400082c5:	add    DWORD PTR [rax+rax*1+0x10],ecx
   1400082c9:	lock (bad) 
   1400082cb:	loopne 0x1400082d9
   1400082cd:	ror    BYTE PTR [rdx],1
   1400082cf:	ror    BYTE PTR [rax],0x70
   1400082d2:	(bad)  
   1400082d3:	(bad)  
   1400082d4:	(bad)  
   1400082d5:	push   rax
   1400082d6:	add    BYTE PTR [rax],al
   1400082d8:	clc    
   1400082d9:	push   rsp
   1400082da:	add    BYTE PTR [rax],al
   1400082dc:	push   rax
   1400082dd:	add    al,BYTE PTR [rax]
   1400082df:	add    BYTE PTR [rcx],al
   1400082e1:	add    al,0x1
   1400082e3:	add    BYTE PTR [rdx+riz*2],al
   1400082e6:	add    BYTE PTR [rax],al
   1400082e8:	or     DWORD PTR [rbx+rcx*1],ebx
   1400082eb:	add    BYTE PTR [rsp+rsi*2],bl
   1400082ee:	sbb    al,0x0
   1400082f0:	sbb    al,0x64
   1400082f2:	sbb    eax,DWORD PTR [rax]
   1400082f4:	sbb    al,0x34
   1400082f6:	sbb    al,BYTE PTR [rax]
   1400082f8:	sbb    al,0x1
   1400082fa:	(bad)  
   1400082fb:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e096f1
   140008301:	rol    BYTE PTR [rax],0x0
   140008304:	not    BYTE PTR [rdx+0x0]
   140008307:	add    BYTE PTR [rcx],al
   140008309:	add    BYTE PTR [rax],al
   14000830b:	add    BYTE PTR [rax+0x4c],dl
   14000830e:	add    BYTE PTR [rax],al
   140008310:	rex.RX
   140008311:	rex.WRX add BYTE PTR [rax],r8b
   140008314:	(bad)  
   140008315:	push   rsi
   140008316:	add    BYTE PTR [rax],al
   140008318:	rex.RX
   140008319:	rex.WRX add BYTE PTR [rax],r8b
   14000831c:	add    BYTE PTR [rax],al
   14000831e:	add    BYTE PTR [rax],al
   140008320:	add    DWORD PTR [rax],eax
   140008322:	add    BYTE PTR [rax],al
   140008324:	adc    DWORD PTR [rdx],ecx
   140008326:	add    al,0x0
   140008328:	or     dh,BYTE PTR [rsi+rax*1]
   14000832b:	add    BYTE PTR [rdx],cl
   14000832d:	xor    al,BYTE PTR [rsi]
   14000832f:	jo     0x140008327
   140008331:	push   rdx
   140008332:	add    BYTE PTR [rax],al
   140008334:	add    DWORD PTR [rax],eax
   140008336:	add    BYTE PTR [rax],al
   140008338:	xor    eax,0x7a00004f
   14000833d:	rex.WRXB add BYTE PTR [r8],r8b
   140008340:	sub    dl,BYTE PTR [rsi+0x0]
   140008343:	add    BYTE PTR [rax],al
   140008345:	add    BYTE PTR [rax],al
   140008347:	add    BYTE PTR [rcx],bl
   140008349:	or     eax,0x62040001
   14000834e:	add    BYTE PTR [rax],al
   140008350:	fcom   QWORD PTR [rax+rax*1+0x0]
   140008354:	and    BYTE PTR [rax+rax*1+0x0],dh
   140008358:	(bad)  
   140008359:	(bad)  
   14000835a:	(bad)  
   14000835b:	inc    DWORD PTR [rax]
   14000835d:	add    BYTE PTR [rax],al
   14000835f:	add    bh,bh
   140008361:	(bad)  
   140008362:	(bad)  
   140008363:	inc    DWORD PTR [rax]
	...
   14000836d:	add    BYTE PTR [rax],al
   14000836f:	add    BYTE PTR [rcx],al
   140008371:	add    BYTE PTR [rax],al
   140008373:	add    BYTE PTR [rcx],al
   140008375:	add    BYTE PTR [rax],al
   140008377:	add    BYTE PTR [rbx+rax*4+0x0],bh
   14000837b:	add    BYTE PTR [rax+0x0],al
	...
   140008386:	add    BYTE PTR [rax],al
   140008388:	rex.WXB push r14
   14000838a:	add    BYTE PTR [rax],al
   14000838c:	cmp    BYTE PTR [rax],al
   14000838e:	add    BYTE PTR [rax],al
   140008390:	int3   
   140008391:	rex.WRXB add BYTE PTR [r8],r8b
   140008394:	(bad)  
   140008395:	(bad)  
   140008396:	(bad)  
   140008397:	(bad)  
   140008398:	(bad)  [rdi+0x0]
   14000839b:	add    BYTE PTR [rax],al
   14000839d:	add    BYTE PTR [rax],al
   14000839f:	add    bh,bl
   1400083a1:	rex.WRXB add BYTE PTR [r8],r8b
   1400083a4:	(bad)  
   1400083a5:	(bad)  
   1400083a6:	(bad)  
   1400083a7:	dec    DWORD PTR [rbx+0x56]
   1400083aa:	add    BYTE PTR [rax],al
   1400083ac:	add    BYTE PTR [rax],al
   1400083ae:	add    BYTE PTR [rax],al
   1400083b0:	pop    rax
   1400083b1:	push   rsi
   1400083b2:	add    BYTE PTR [rax],al
   1400083b4:	add    DWORD PTR [rax],eax
   1400083b6:	add    BYTE PTR [rax],al
   1400083b8:	pop    rbp
   1400083b9:	push   rsi
   1400083ba:	add    BYTE PTR [rax],al
   1400083bc:	add    BYTE PTR [rax],al
   1400083be:	add    BYTE PTR [rax],al
   1400083c0:	sbb    DWORD PTR [rdx],ecx
   1400083c2:	add    al,BYTE PTR [rax]
   1400083c4:	or     dh,BYTE PTR [rdx]
   1400083c6:	(bad)  
   1400083c7:	push   rax
   1400083c8:	fcom   QWORD PTR [rax+rax*1+0x0]
   1400083cc:	and    BYTE PTR [rax+rax*1+0x0],dh
   1400083d0:	or     DWORD PTR [rcx+rax*1],eax
   1400083d3:	add    BYTE PTR [rdx+riz*1],al
   1400083d6:	add    BYTE PTR [rax],al
   1400083d8:	not    BYTE PTR [rdx+0x0]
   1400083db:	add    BYTE PTR [rcx],al
   1400083dd:	add    BYTE PTR [rax],al
   1400083df:	add    BYTE PTR [rax+rdx*2+0x0],bh
   1400083e3:	add    BYTE PTR [rdx+0x1000050],dh
   1400083e9:	add    BYTE PTR [rax],al
   1400083eb:	add    BYTE PTR [rdx+0x9000050],dh
   1400083f1:	or     al,BYTE PTR [rax+rax*1]
   1400083f4:	or     dh,BYTE PTR [rsi+rax*1]
   1400083f7:	add    BYTE PTR [rdx],cl
   1400083f9:	xor    al,BYTE PTR [rsi]
   1400083fb:	jo     0x1400083f3
   1400083fd:	push   rdx
   1400083fe:	add    BYTE PTR [rax],al
   140008400:	add    DWORD PTR [rax],eax
   140008402:	add    BYTE PTR [rax],al
   140008404:	jge    0x140008457
   140008406:	add    BYTE PTR [rax],al
   140008408:	mov    al,0x51
   14000840a:	add    BYTE PTR [rax],al
   14000840c:	adc    BYTE PTR [rsi+0x0],0x0
   140008410:	mov    al,0x51
   140008412:	add    BYTE PTR [rax],al
   140008414:	add    DWORD PTR [rsi],eax
   140008416:	add    al,BYTE PTR [rax]
   140008418:	(bad)  
   140008419:	xor    al,BYTE PTR [rdx]
   14000841b:	push   rax
   14000841c:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d8426
   140008422:	or     DWORD PTR [rax],eax
   140008424:	or     eax,0x1500632
   140008429:	or     al,0x2
   14000842b:	add    BYTE PTR [rcx+rax*1],cl
   14000842e:	adc    DWORD PTR [rax],eax
   140008430:	add    DWORD PTR [rax],eax
   140008432:	add    BYTE PTR [rax],al
   140008434:	add    BYTE PTR [rax],al
   140008436:	add    BYTE PTR [rax],al
   140008438:	add    cl,BYTE PTR [rax+rcx*1]
   14000843b:	add    BYTE PTR [rax],cl
   14000843d:	(bad)  
   14000843e:	add    BYTE PTR [rsi],al
   140008440:	or     al,0x32
   140008442:	or     BYTE PTR [rax+0x20048006],dl
   140008448:	add    edx,DWORD PTR [rax]
   14000844a:	add    al,BYTE PTR [rax]
   14000844c:	add    BYTE PTR [rax],al
   14000844e:	add    BYTE PTR [rax],al
   140008450:	xor    BYTE PTR [rbp+0x0],al
   140008456:	add    BYTE PTR [rax],al
   140008458:	add    BYTE PTR [rax],al
   14000845a:	add    BYTE PTR [rax],al
   14000845c:	(bad)  
   14000845d:	mov    BYTE PTR [rax],al
   14000845f:	add    BYTE PTR [rax],al
   140008461:	jo     0x140008463
   140008463:	add    al,ah
   140008465:	test   DWORD PTR [rax],eax
	...
   14000846f:	add    al,al
   140008471:	mov    DWORD PTR [rax],eax
   140008473:	add    BYTE PTR [rax-0x3fffff90],dh
   140008479:	xchg   BYTE PTR [rax],al
	...
   140008483:	add    BYTE PTR [rsi],dl
   140008485:	mov    al,BYTE PTR [rax]
   140008487:	add    BYTE PTR [rax+0x10000071],dl
   14000848d:	xchg   DWORD PTR [rax],eax
	...
   140008497:	add    BYTE PTR [rdx],ah
   140008499:	mov    eax,DWORD PTR [rax]
   14000849b:	add    al,ah
   14000849d:	jno    0x14000849f
   14000849f:	add    BYTE PTR [rax+0x86],dh
   1400084a5:	add    BYTE PTR [rax],al
   1400084a7:	add    BYTE PTR [rax],al
   1400084a9:	add    BYTE PTR [rax],al
   1400084ab:	add    BYTE PTR [rdx-0x75],ch
   1400084ae:	add    BYTE PTR [rax],al
   1400084b0:	xor    BYTE PTR [rcx+0x0],0x0
   1400084b4:	fadd   DWORD PTR [rdi+0x0]
   1400084ba:	add    BYTE PTR [rax],al
   1400084bc:	add    BYTE PTR [rax],al
   1400084be:	add    BYTE PTR [rax],al
   1400084c0:	mov    eax,0xa800008b
   1400084c5:	jb     0x1400084c7
   1400084c7:	add    al,bh
   1400084c9:	xchg   DWORD PTR [rax],eax
	...
   1400084d3:	add    al,bh
   1400084d5:	mov    eax,DWORD PTR [rax]
   1400084d7:	add    al,cl
   1400084d9:	jb     0x1400084db
   1400084db:	add    al,bh
   1400084dd:	xchg   BYTE PTR [rax],al
	...
   1400084e7:	add    BYTE PTR [rsp+rcx*4],ah
   1400084ea:	add    BYTE PTR [rax],al
   1400084ec:	enter  0x71,0x0
   1400084f0:	nop
   1400084f1:	test   DWORD PTR [rax],eax
	...
   1400084fb:	add    BYTE PTR [rsi],bh
   1400084fd:	mov    es,WORD PTR [rax]
   1400084ff:	add    BYTE PTR [rax+0x70],ah
   140008502:	add    BYTE PTR [rax],al
   140008504:	call   0x14000858f
   140008509:	add    BYTE PTR [rax],al
   14000850b:	add    BYTE PTR [rax],al
   14000850d:	add    BYTE PTR [rax],al
   14000850f:	add    BYTE PTR [rax-0x72],cl
   140008512:	add    BYTE PTR [rax],al
   140008514:	mov    eax,0x71
	...
   14000852d:	add    BYTE PTR [rax],al
   14000852f:	add    BYTE PTR [rax],bl
   140008531:	mov    BYTE PTR [rax],al
   140008533:	add    BYTE PTR [rax],al
   140008535:	add    BYTE PTR [rax],al
   140008537:	add    BYTE PTR [rsi],ch
   140008539:	mov    BYTE PTR [rax],al
   14000853b:	add    BYTE PTR [rax],al
   14000853d:	add    BYTE PTR [rax],al
   14000853f:	add    BYTE PTR [rax+rcx*4],bh
   140008542:	add    BYTE PTR [rax],al
   140008544:	add    BYTE PTR [rax],al
   140008546:	add    BYTE PTR [rax],al
   140008548:	rex.WRX mov BYTE PTR [rax],r8b
   14000854b:	add    BYTE PTR [rax],al
   14000854d:	add    BYTE PTR [rax],al
   14000854f:	add    BYTE PTR [rax-0x78],ah
   140008552:	add    BYTE PTR [rax],al
   140008554:	add    BYTE PTR [rax],al
   140008556:	add    BYTE PTR [rax],al
   140008558:	jo     0x1400084e2
   14000855a:	add    BYTE PTR [rax],al
   14000855c:	add    BYTE PTR [rax],al
   14000855e:	add    BYTE PTR [rax],al
   140008560:	test   BYTE PTR [rax+0x0],cl
   140008566:	add    BYTE PTR [rax],al
   140008568:	(bad)  
   140008569:	mov    BYTE PTR [rax],al
   14000856b:	add    BYTE PTR [rax],al
   14000856d:	add    BYTE PTR [rax],al
   14000856f:	add    BYTE PTR [rdx+0x88],ch
   140008575:	add    BYTE PTR [rax],al
   140008577:	add    BYTE PTR [rax+rcx*4+0x0],bh
   14000857e:	add    BYTE PTR [rax],al
   140008580:	(bad)  
   140008581:	mov    es,WORD PTR [rax]
	...
   14000858f:	add    BYTE PTR [rsp+rcx*4+0x0],al
   140008596:	add    BYTE PTR [rax],al
   140008598:	mov    al,0x8c
   14000859a:	add    BYTE PTR [rax],al
   14000859c:	add    BYTE PTR [rax],al
   14000859e:	add    BYTE PTR [rax],al
   1400085a0:	loop   0x14000852e
   1400085a2:	add    BYTE PTR [rax],al
   1400085a4:	add    BYTE PTR [rax],al
   1400085a6:	add    BYTE PTR [rax],al
   1400085a8:	cmp    BYTE PTR [rbp+0x0],cl
   1400085ae:	add    BYTE PTR [rax],al
   1400085b0:	or     BYTE PTR [rbp+0x0],0x0
   1400085b7:	add    dl,dl
   1400085b9:	lea    eax,[rax]
   1400085bb:	add    BYTE PTR [rax],al
   1400085bd:	add    BYTE PTR [rax],al
   1400085bf:	add    BYTE PTR [rdx],dl
   1400085c1:	mov    es,WORD PTR [rax]
   1400085c3:	add    BYTE PTR [rax],al
   1400085c5:	add    BYTE PTR [rax],al
   1400085c7:	add    BYTE PTR [rdx-0x74],bh
   1400085ca:	add    BYTE PTR [rax],al
   1400085cc:	add    BYTE PTR [rax],al
   1400085ce:	add    BYTE PTR [rax],al
   1400085d0:	rex.RX mov WORD PTR [rax],es
	...
   1400085df:	add    BYTE PTR [rsi+0x89],dl
   1400085e5:	add    BYTE PTR [rax],al
   1400085e7:	add    BYTE PTR [rsi+0x89],ch
   1400085ed:	add    BYTE PTR [rax],al
   1400085ef:	add    BYTE PTR [rax-0x71],cl
   1400085f2:	add    BYTE PTR [rax],al
   1400085f4:	add    BYTE PTR [rax],al
   1400085f6:	add    BYTE PTR [rax],al
   1400085f8:	sub    al,0x8f
   1400085fa:	add    BYTE PTR [rax],al
   1400085fc:	add    BYTE PTR [rax],al
   1400085fe:	add    BYTE PTR [rax],al
   140008600:	sbb    al,0x8f
   140008602:	add    BYTE PTR [rax],al
   140008604:	add    BYTE PTR [rax],al
   140008606:	add    BYTE PTR [rax],al
   140008608:	add    cl,BYTE PTR [rdi+0x0]
   14000860e:	add    BYTE PTR [rax],al
   140008610:	in     al,dx
   140008611:	mov    es,WORD PTR [rax]
   140008613:	add    BYTE PTR [rax],al
   140008615:	add    BYTE PTR [rax],al
   140008617:	add    dh,dl
   140008619:	mov    es,WORD PTR [rax]
   14000861b:	add    BYTE PTR [rax],al
   14000861d:	add    BYTE PTR [rax],al
   14000861f:	add    BYTE PTR [rsi+rcx*4+0x0],bh
   140008626:	add    BYTE PTR [rax],al
   140008628:	test   al,0x8e
   14000862a:	add    BYTE PTR [rax],al
   14000862c:	add    BYTE PTR [rax],al
   14000862e:	add    BYTE PTR [rax],al
   140008630:	mov    cl,BYTE PTR [rsi+0x0]
   140008636:	add    BYTE PTR [rax],al
   140008638:	js     0x1400085c8
   14000863a:	add    BYTE PTR [rax],al
   14000863c:	add    BYTE PTR [rax],al
   14000863e:	add    BYTE PTR [rax],al
   140008640:	jo     0x1400085d0
   140008642:	add    BYTE PTR [rax],al
   140008644:	add    BYTE PTR [rax],al
   140008646:	add    BYTE PTR [rax],al
   140008648:	mov    BYTE PTR [rcx+0x0],cl
   14000864e:	add    BYTE PTR [rax],al
   140008650:	js     0x1400085db
   140008652:	add    BYTE PTR [rax],al
   140008654:	add    BYTE PTR [rax],al
   140008656:	add    BYTE PTR [rax],al
   140008658:	mov    WORD PTR [rax],ax
   14000865b:	add    BYTE PTR [rax],al
   14000865d:	add    BYTE PTR [rax],al
   14000865f:	add    BYTE PTR [rsi-0x77],dl
   140008662:	add    BYTE PTR [rax],al
   140008664:	add    BYTE PTR [rax],al
   140008666:	add    BYTE PTR [rax],al
   140008668:	pop    rsp
   140008669:	pop    QWORD PTR [rax]
   14000866b:	add    BYTE PTR [rax],al
   14000866d:	add    BYTE PTR [rax],al
   14000866f:	add    BYTE PTR [rsi-0x77],al
   140008672:	add    BYTE PTR [rax],al
   140008674:	add    BYTE PTR [rax],al
   140008676:	add    BYTE PTR [rax],al
   140008678:	mov    DWORD PTR ss:[rax],eax
   14000867b:	add    BYTE PTR [rax],al
   14000867d:	add    BYTE PTR [rax],al
   14000867f:	add    BYTE PTR [rcx+rcx*4],ah
   140008682:	add    BYTE PTR [rax],al
   140008684:	add    BYTE PTR [rax],al
   140008686:	add    BYTE PTR [rax],al
   140008688:	adc    cl,BYTE PTR [rcx+0x0]
   14000868e:	add    BYTE PTR [rax],al
   140008690:	cld    
   140008691:	mov    BYTE PTR [rax],al
   140008693:	add    BYTE PTR [rax],al
   140008695:	add    BYTE PTR [rax],al
   140008697:	add    al,dh
   140008699:	mov    BYTE PTR [rax],al
   14000869b:	add    BYTE PTR [rax],al
   14000869d:	add    BYTE PTR [rax],al
   14000869f:	add    ah,ah
   1400086a1:	mov    BYTE PTR [rax],al
	...
   1400086af:	add    BYTE PTR [rax-0x75],bl
	...
   1400086be:	add    BYTE PTR [rax],al
   1400086c0:	add    cl,BYTE PTR [rdx+0x0]
   1400086c6:	add    BYTE PTR [rax],al
   1400086c8:	out    dx,al
   1400086c9:	mov    DWORD PTR [rax],eax
   1400086cb:	add    BYTE PTR [rax],al
   1400086cd:	add    BYTE PTR [rax],al
   1400086cf:	add    al,ah
   1400086d1:	mov    DWORD PTR [rax],eax
   1400086d3:	add    BYTE PTR [rax],al
   1400086d5:	add    BYTE PTR [rax],al
   1400086d7:	add    dh,cl
   1400086d9:	mov    DWORD PTR [rax],eax
	...
   1400086e7:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400086eb:	add    BYTE PTR [rax],al
   1400086ed:	add    BYTE PTR [rax],al
   1400086ef:	add    BYTE PTR [rax],0x0
   1400086f2:	add    BYTE PTR [rax],al
   1400086f4:	add    BYTE PTR [rax],al
   1400086f6:	add    BYTE PTR [rax],al
   1400086f8:	adc    cl,BYTE PTR [rax+rax*1+0x0]
   1400086ff:	add    BYTE PTR [rdx],al
   140008701:	mov    WORD PTR [rax],es
	...
   14000870f:	add    al,bh
   140008711:	mov    al,BYTE PTR [rax]
   140008713:	add    BYTE PTR [rax],al
   140008715:	add    BYTE PTR [rax],al
   140008717:	add    ah,ch
   140008719:	mov    al,BYTE PTR [rax]
   14000871b:	add    BYTE PTR [rax],al
   14000871d:	add    BYTE PTR [rax],al
   14000871f:	add    dl,ah
   140008721:	mov    al,BYTE PTR [rax]
   140008723:	add    BYTE PTR [rax],al
   140008725:	add    BYTE PTR [rax],al
   140008727:	add    al,bl
   140008729:	mov    al,BYTE PTR [rax]
   14000872b:	add    BYTE PTR [rax],al
   14000872d:	add    BYTE PTR [rax],al
   14000872f:	add    BYTE PTR [rax],al
   140008731:	mov    eax,DWORD PTR [rax]
   140008733:	add    BYTE PTR [rax],al
   140008735:	add    BYTE PTR [rax],al
   140008737:	add    BYTE PTR [rax],bl
   140008739:	mov    eax,DWORD PTR [rax]
   14000873b:	add    BYTE PTR [rax],al
   14000873d:	add    BYTE PTR [rax],al
   14000873f:	add    BYTE PTR [rsi+0x8a],dl
   140008745:	add    BYTE PTR [rax],al
   140008747:	add    BYTE PTR [rsi+0x8a],cl
   14000874d:	add    BYTE PTR [rax],al
   14000874f:	add    BYTE PTR [rsi+0x8a],al
   140008755:	add    BYTE PTR [rax],al
   140008757:	add    BYTE PTR [rdx+rcx*4+0x0],dh
   14000875b:	add    BYTE PTR [rax],al
   14000875d:	add    BYTE PTR [rax],al
   14000875f:	add    BYTE PTR [rsi],ch
   140008761:	mov    eax,DWORD PTR [rax]
   140008763:	add    BYTE PTR [rax],al
   140008765:	add    BYTE PTR [rax],al
   140008767:	add    BYTE PTR [rbx+rcx*4+0x0],al
   14000876b:	add    BYTE PTR [rax],al
   14000876d:	add    BYTE PTR [rax],al
   14000876f:	add    BYTE PTR [rdx],cl
   140008771:	mov    eax,DWORD PTR [rax]
   140008773:	add    BYTE PTR [rax],al
   140008775:	add    BYTE PTR [rax],al
   140008777:	add    al,al
   140008779:	mov    al,BYTE PTR [rax]
   14000877b:	add    BYTE PTR [rax],al
   14000877d:	add    BYTE PTR [rax],al
   14000877f:	add    BYTE PTR [rdx-0x76],ah
   140008782:	add    BYTE PTR [rax],al
   140008784:	add    BYTE PTR [rax],al
   140008786:	add    BYTE PTR [rax],al
   140008788:	push   rsp
   140008789:	mov    al,BYTE PTR [rax]
   14000878b:	add    BYTE PTR [rax],al
   14000878d:	add    BYTE PTR [rax],al
   14000878f:	add    BYTE PTR [rsi-0x76],al
   140008792:	add    BYTE PTR [rax],al
   140008794:	add    BYTE PTR [rax],al
   140008796:	add    BYTE PTR [rax],al
   140008798:	cmp    BYTE PTR [rdx+0x0],cl
   14000879e:	add    BYTE PTR [rax],al
   1400087a0:	sub    al,0x8a
   1400087a2:	add    BYTE PTR [rax],al
   1400087a4:	add    BYTE PTR [rax],al
   1400087a6:	add    BYTE PTR [rax],al
   1400087a8:	and    cl,BYTE PTR [rdx+0x0]
   1400087ae:	add    BYTE PTR [rax],al
   1400087b0:	jo     0x140008741
   1400087b2:	add    BYTE PTR [rax],al
   1400087b4:	add    BYTE PTR [rax],al
   1400087b6:	add    BYTE PTR [rax],al
   1400087b8:	mov    ah,0x8a
   1400087ba:	add    BYTE PTR [rax],al
   1400087bc:	add    BYTE PTR [rax],al
   1400087be:	add    BYTE PTR [rax],al
   1400087c0:	movabs al,ds:0x7a0000000000008a
   1400087c9:	pop    QWORD PTR [rax]
	...
   1400087d7:	add    BYTE PTR [rsi-0x75],dh
   1400087da:	add    BYTE PTR [rax],al
   1400087dc:	add    BYTE PTR [rax],al
   1400087de:	add    BYTE PTR [rax],al
   1400087e0:	mov    cl,BYTE PTR [rbx+0x0]
   1400087e6:	add    BYTE PTR [rax],al
   1400087e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400087e9:	mov    eax,DWORD PTR [rax]
	...
   1400087f7:	add    dh,dl
   1400087f9:	mov    eax,DWORD PTR [rax]
   1400087fb:	add    BYTE PTR [rax],al
   1400087fd:	add    BYTE PTR [rax],al
   1400087ff:	add    dh,ah
   140008801:	mov    eax,DWORD PTR [rax]
   140008803:	add    BYTE PTR [rax],al
   140008805:	add    BYTE PTR [rax],al
   140008807:	add    dl,al
   140008809:	mov    eax,DWORD PTR [rax]
	...
   140008817:	add    BYTE PTR [rax],ch
   140008819:	add    DWORD PTR [rbp+0x76],eax
   14000881c:	outs   dx,BYTE PTR gs:[rsi]
   14000881e:	je     0x140008877
   140008820:	jb     0x14000888b
   140008822:	je     0x140008889
   140008824:	push   rsp
   140008825:	jb     0x140008888
   140008827:	outs   dx,BYTE PTR ds:[rsi]
   140008828:	jae    0x140008890
   14000882a:	gs jb  0x14000882d
   14000882d:	add    BYTE PTR [rbp+0x2],dl
   140008830:	push   rdx
   140008831:	gs rex.XB ins BYTE PTR es:[edi],dx
   140008835:	outs   dx,DWORD PTR ds:[rsi]
   140008836:	jae    0x14000889d
   140008838:	rex.WXB
   140008839:	gs jns 0x14000883c
   14000883c:	movabs ds:0x5674655367655202,eax
   140008845:	(bad)  
   140008846:	ins    BYTE PTR es:[rdi],dx
   140008847:	jne    0x1400088ae
   140008849:	rex.RB js 0x1400088a3
   14000884c:	add    BYTE PTR [rax],al
   14000884e:	ins    DWORD PTR es:[rdi],dx
   14000884f:	add    dl,BYTE PTR [rdx+0x65]
   140008852:	addr32 rex.R
   140008854:	gs ins BYTE PTR es:[rdi],dx
   140008856:	gs je  0x1400088be
   140008859:	push   rsi
   14000885a:	(bad)  
   14000885b:	ins    BYTE PTR es:[rdi],dx
   14000885c:	jne    0x1400088c3
   14000885e:	push   rdi
   14000885f:	add    BYTE PTR [rsi+0x67655202],al
   140008865:	rex.WRXB jo 0x1400088cd
   140008868:	outs   dx,BYTE PTR ds:[rsi]
   140008869:	rex.WXB
   14000886a:	gs jns 0x1400088b2
   14000886d:	js     0x1400088c6
   14000886f:	add    BYTE PTR [rbx+0x67655202],dl
   140008875:	push   rcx
   140008876:	jne    0x1400088dd
   140008878:	jb     0x1400088f3
   14000887a:	push   rsi
   14000887b:	(bad)  
   14000887c:	ins    BYTE PTR es:[rdi],dx
   14000887d:	jne    0x1400088e4
   14000887f:	rex.RB js 0x1400088d9
   140008882:	add    BYTE PTR [rax],al
   140008884:	and    DWORD PTR [rcx],eax
   140008886:	rex.RB jbe 0x1400088ee
   140008889:	outs   dx,BYTE PTR ds:[rsi]
   14000888a:	je     0x1400088df
   14000888c:	gs je  0x1400088d8
   14000888f:	outs   dx,BYTE PTR ds:[rsi]
   140008890:	outs   dx,WORD PTR ds:[rsi]
   140008892:	jb     0x140008901
   140008894:	(bad)  
   140008895:	je     0x140008900
   140008897:	outs   dx,DWORD PTR ds:[rsi]
   140008898:	outs   dx,BYTE PTR ds:[rsi]
   140008899:	add    BYTE PTR [rax],ah
   14000889b:	add    DWORD PTR [rbp+0x76],eax
   14000889e:	outs   dx,BYTE PTR gs:[rsi]
   1400088a0:	je     0x1400088f4
   1400088a2:	imul   esi,DWORD PTR gs:[ebx+0x74],0x22007265
   1400088ab:	add    DWORD PTR [rbp+0x76],eax
   1400088ae:	outs   dx,BYTE PTR gs:[rsi]
   1400088b0:	je     0x140008907
   1400088b2:	outs   dx,BYTE PTR ds:[rsi]
   1400088b3:	jb     0x14000891a
   1400088b5:	imul   esi,DWORD PTR [ebx+0x74],0x1d007265
   1400088bd:	add    DWORD PTR [rbp+0x76],eax
   1400088c0:	outs   dx,BYTE PTR gs:[rsi]
   1400088c2:	je     0x140008905
   1400088c4:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   1400088c8:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x6e6f4364
   1400088d0:	je     0x140008944
   1400088d2:	outs   dx,DWORD PTR ds:[rsi]
   1400088d3:	ins    BYTE PTR es:[rdi],dx
   1400088d4:	add    BYTE PTR [rax],al
   1400088d6:	rex.B
   1400088d7:	rex.R push rsi
   1400088d9:	push   r8
   1400088db:	xor    rsi,QWORD PTR [r10]
   1400088de:	cs fs ins BYTE PTR es:[rdi],dx
   1400088e1:	ins    BYTE PTR es:[rdi],dx
   1400088e2:	add    BYTE PTR [rax],al
   1400088e4:	cmp    al,0x3
   1400088e6:	rex.W
   1400088e7:	gs (bad) 
   1400088e9:	jo     0x14000892c
   1400088eb:	ins    BYTE PTR es:[rdi],dx
   1400088ec:	ins    BYTE PTR es:[rdi],dx
   1400088ed:	outs   dx,DWORD PTR ds:[rsi]
   1400088ee:	movsxd eax,DWORD PTR [rax]
   1400088f0:	rex add ecx,DWORD PTR [rax+0x65]
   1400088f4:	(bad)  
   1400088f5:	jo     0x14000893d
   1400088f7:	jb     0x14000895e
   1400088f9:	add    BYTE PTR gs:[rax],al
   1400088fc:	ins    DWORD PTR es:[rdi],dx
   1400088fd:	add    al,BYTE PTR [rdi+0x65]
   140008900:	je     0x14000894f
   140008902:	outs   dx,DWORD PTR ds:[rsi]
   140008903:	fs jne 0x140008972
   140008906:	gs rex.W (bad) 
   140008909:	outs   dx,BYTE PTR ds:[rsi]
   14000890a:	fs ins BYTE PTR es:[rdi],dx
   14000890c:	gs rex.RB js 0x140008967
   140008910:	add    BYTE PTR [rax],al
   140008912:	stos   DWORD PTR es:[rdi],eax
   140008913:	add    al,BYTE PTR [rdi+0x65]
   140008916:	je     0x140008968
   140008918:	jb     0x140008989
   14000891a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000891d:	jae    0x140008967
   14000891f:	gs (bad) 
   140008921:	jo     0x140008923
   140008923:	add    BYTE PTR [rbp+0x74654702],ah
   140008929:	push   rax
   14000892a:	jb     0x14000899b
   14000892c:	movsxd eax,DWORD PTR [rcx+0x64]
   14000892f:	fs jb  0x140008997
   140008932:	jae    0x1400089a7
   140008934:	add    BYTE PTR [rax],al
   140008936:	push   rdi
   140008937:	add    al,BYTE PTR [rdi+0x65]
   14000893a:	je     0x140008988
   14000893c:	(bad)  
   14000893d:	jae    0x1400089b3
   14000893f:	rex.RB jb 0x1400089b4
   140008942:	outs   dx,DWORD PTR ds:[rsi]
   140008943:	jb     0x140008945
   140008945:	add    ah,al
   140008947:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
   14000894b:	imul   edx,DWORD PTR [rdx+0x65],0x73
   14000894f:	outs   dx,DWORD PTR ds:[rsi]
   140008950:	jne    0x1400089c4
   140008952:	movsxd esp,DWORD PTR [rbp+0x0]
   140008955:	add    BYTE PTR [rdx+0x616f4c03],dh
   14000895b:	fs push rdx
   14000895d:	gs jae 0x1400089cf
   140008960:	jne    0x1400089d4
   140008962:	movsxd esp,DWORD PTR [rbp+0x0]
   140008965:	add    BYTE PTR [rsi+0x6e694601],cl
   14000896b:	fs push rdx
   14000896d:	gs jae 0x1400089df
   140008970:	jne    0x1400089e4
   140008972:	movsxd esp,DWORD PTR [rbp+0x45]
   140008975:	js     0x1400089ce
   140008977:	add    BYTE PTR [rdi+0x72695605],bh
   14000897d:	je     0x1400089f4
   14000897f:	(bad)  
   140008980:	ins    BYTE PTR es:[rdi],dx
   140008981:	push   rcx
   140008982:	jne    0x1400089e9
   140008984:	jb     0x1400089ff
   140008986:	add    BYTE PTR [rax],al
   140008988:	jge    0x14000898a
   14000898a:	rex.XB ins BYTE PTR es:[rdi],dx
   14000898c:	outs   dx,DWORD PTR ds:[rsi]
   14000898d:	jae    0x1400089f4
   14000898f:	rex.W (bad) 
   140008991:	outs   dx,BYTE PTR ds:[rsi]
   140008992:	fs ins BYTE PTR es:[rdi],dx
   140008994:	add    BYTE PTR gs:[rip+0x6c654401],al        # 0x1ac65cd9c
   14000899b:	gs je  0x140008a03
   14000899e:	rex.XB jb 0x140008a0a
   1400089a1:	je     0x140008a0c
   1400089a3:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400089a6:	push   rbx
   1400089a7:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400089ac:	outs   dx,BYTE PTR ds:[rsi]
   1400089ad:	add    BYTE PTR [rdx+0x74654702],bh
   1400089b3:	push   rax
   1400089b4:	jb     0x140008a25
   1400089b6:	fs jne 0x140008a1c
   1400089b9:	je     0x140008a04
   1400089bb:	outs   dx,BYTE PTR ds:[rsi]
   1400089bc:	outs   dx,WORD PTR ds:[rsi]
   1400089be:	add    BYTE PTR [rax],al
   1400089c0:	rex.WXB
   1400089c1:	rex.RB push r10
   1400089c3:	rex.WRX
   1400089c4:	rex.RB
   1400089c5:	xor    r14,QWORD PTR [rdx]
   1400089c8:	cs fs ins BYTE PTR es:[rdi],dx
   1400089cb:	ins    BYTE PTR es:[rdi],dx
   1400089cc:	add    BYTE PTR [rax],al
   1400089ce:	test   BYTE PTR [rdx],al
   1400089d0:	push   rax
   1400089d1:	outs   dx,DWORD PTR ds:[rsi]
   1400089d2:	jae    0x140008a48
   1400089d4:	push   rcx
   1400089d5:	jne    0x140008a40
   1400089d7:	je     0x140008a26
   1400089d9:	gs jae 0x140008a4f
   1400089dc:	(bad)  
   1400089dd:	add    BYTE PTR gs:[eax+0x1],bh
   1400089e2:	rex.RXB
   1400089e3:	gs je  0x140008a33
   1400089e6:	gs jae 0x140008a5c
   1400089e9:	(bad)  
   1400089ea:	addr32 gs push rdi
   1400089ed:	add    BYTE PTR [rbx+0x3],ch
   1400089f0:	push   rsp
   1400089f1:	jb     0x140008a54
   1400089f3:	outs   dx,BYTE PTR ds:[rsi]
   1400089f4:	jae    0x140008a62
   1400089f6:	(bad)  
   1400089f7:	je     0x140008a5e
   1400089f9:	rex.WRB
   1400089fa:	gs jae 0x140008a70
   1400089fd:	(bad)  
   1400089fe:	add    BYTE PTR gs:[eax],al
   140008a02:	mov    dh,0x0
   140008a04:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   140008a0c:	rex.WRB
   140008a0d:	gs jae 0x140008a83
   140008a10:	(bad)  
   140008a11:	addr32 gs push rdi
   140008a14:	add    BYTE PTR [rax],al
   140008a16:	push   rbp
   140008a17:	push   rbx
   140008a18:	rex.RB push r10
   140008a1a:	xor    esi,DWORD PTR [rdx]
   140008a1c:	cs fs ins BYTE PTR es:[rdi],dx
   140008a1f:	ins    BYTE PTR es:[rdi],dx
   140008a20:	add    BYTE PTR [rax],al
   140008a22:	xchg   esp,eax
   140008a23:	add    al,0x6d
   140008a25:	gs ins DWORD PTR es:[rdi],dx
   140008a27:	ins    DWORD PTR es:[rdi],dx
   140008a28:	outs   dx,DWORD PTR ds:[rsi]
   140008a29:	jbe    0x140008a90
   140008a2b:	add    BYTE PTR [rsi+0x75705f02],bl
   140008a31:	jb     0x140008a98
   140008a33:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008a36:	ins    BYTE PTR es:[rdi],dx
   140008a37:	add    BYTE PTR [rcx+0x3],ch
   140008a3a:	pop    rdi
   140008a3b:	jbe    0x140008ab0
   140008a3d:	outs   dx,BYTE PTR ds:[rsi]
   140008a3e:	ja     0x140008ab0
   140008a40:	jb     0x140008aab
   140008a42:	outs   dx,BYTE PTR ds:[rsi]
   140008a43:	je     0x140008aab
   140008a45:	add    BYTE PTR [rbp+0x0],dl
   140008a48:	pop    rdi
   140008a49:	pop    rax
   140008a4a:	movsxd esi,DWORD PTR [rax+0x74]
   140008a4d:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140008a56:	pop    rdi
   140008a57:	(bad)  
   140008a58:	ins    DWORD PTR es:[rdi],dx
   140008a59:	jae    0x140008ac2
   140008a5b:	pop    rdi
   140008a5c:	gs js  0x140008ac8
   140008a5f:	je     0x140008a61
   140008a61:	add    BYTE PTR [rbp+0x775f5f00],bl
   140008a67:	addr32 gs je 0x140008ad8
   140008a6b:	(bad)  
   140008a6c:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140008a73:	add    BYTE PTR [rsi+0x735f5f00],cl
   140008a79:	gs je  0x140008adb
   140008a7c:	(bad)  
   140008a7d:	jo     0x140008aef
   140008a7f:	pop    rdi
   140008a80:	je     0x140008afb
   140008a82:	jo     0x140008ae9
   140008a84:	add    BYTE PTR [rax],al
   140008a86:	xor    al,BYTE PTR [riz*2+0x746978]
   140008a8d:	add    BYTE PTR [rsi],cl
   140008a8f:	add    DWORD PTR [rdi+0x65],ebx
   140008a92:	js     0x140008afd
   140008a94:	je     0x140008a96
   140008a96:	rol    DWORD PTR [rax],0x5f
   140008a99:	movsxd esp,DWORD PTR [rbp+0x78]
   140008a9c:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140008aa4:	jae    0x140008b0b
   140008aa6:	je     0x140008b1d
   140008aa8:	jae    0x140008b0f
   140008aaa:	jb     0x140008b19
   140008aac:	(bad)  
   140008aad:	je     0x140008b17
   140008aaf:	gs jb  0x140008b24
   140008ab2:	add    BYTE PTR [rax],al
   140008ab4:	jge    0x140008ab7
   140008ab6:	pop    rdi
   140008ab7:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140008abe:	ins    DWORD PTR es:[rdi],dx
   140008abf:	add    BYTE PTR [rdi+0x0],dl
   140008ac2:	pop    rdi
   140008ac3:	pop    rdi
   140008ac4:	rex.XB pop r15
   140008ac6:	jae    0x140008b38
   140008ac8:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140008acc:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140008ad3:	ins    BYTE PTR es:[rdi],dx
   140008ad4:	gs jb  0x140008ad7
   140008ad7:	add    BYTE PTR [rdx+0x63775f03],al
   140008add:	ins    DWORD PTR es:[rdi],dx
   140008ade:	fs ins BYTE PTR es:[rdi],dx
   140008ae0:	outs   dx,BYTE PTR ds:[rsi]
   140008ae1:	add    BYTE PTR [rdi],ah
   140008ae3:	add    DWORD PTR [rdi+0x66],ebx
   140008ae6:	ins    DWORD PTR es:[rdi],dx
   140008ae7:	outs   dx,DWORD PTR ds:[rsi]
   140008ae8:	fs add BYTE PTR gs:[rax],al
   140008aec:	rol    BYTE PTR [rax],cl
   140008aee:	pop    rdi
   140008aef:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140008af2:	ins    DWORD PTR es:[rdi],dx
   140008af3:	outs   dx,DWORD PTR ds:[rsi]
   140008af4:	fs add BYTE PTR gs:[rax],al
   140008af8:	out    0x1,al
   140008afa:	pop    rdi
   140008afb:	ins    BYTE PTR es:[rdi],dx
   140008afc:	outs   dx,DWORD PTR ds:[rsi]
   140008afd:	movsxd ebp,DWORD PTR [rbx+0x0]
   140008b00:	add    ebx,DWORD PTR [r15+0x75]
   140008b04:	outs   dx,BYTE PTR ds:[rsi]
   140008b05:	ins    BYTE PTR es:[rdi],dx
   140008b06:	outs   dx,DWORD PTR ds:[rsi]
   140008b07:	movsxd ebp,DWORD PTR [rbx+0x0]
   140008b0a:	jnp    0x140008b0c
   140008b0c:	pop    rdi
   140008b0d:	pop    rdi
   140008b0e:	fs ins BYTE PTR es:[rdi],dx
   140008b10:	ins    BYTE PTR es:[rdi],dx
   140008b11:	outs   dx,DWORD PTR ds:[rsi]
   140008b12:	outs   dx,BYTE PTR ds:[rsi]
   140008b13:	gs js  0x140008b7f
   140008b16:	je     0x140008b18
   140008b18:	nop
   140008b19:	add    bl,BYTE PTR [rdi+0x6f]
   140008b1c:	outs   dx,BYTE PTR ds:[rsi]
   140008b1d:	gs js  0x140008b89
   140008b20:	je     0x140008b22
   140008b22:	ins    DWORD PTR es:[rdi],dx
   140008b23:	jae    0x140008b9b
   140008b25:	movsxd esi,DWORD PTR [rdx+0x74]
   140008b28:	cs fs ins BYTE PTR es:[rdi],dx
   140008b2b:	ins    BYTE PTR es:[rdi],dx
   140008b2c:	add    BYTE PTR [rax],al
   140008b2e:	pop    rbx
   140008b2f:	add    BYTE PTR [rdi+0x5f],bl
   140008b32:	rex.XB js 0x140008bad
   140008b35:	rex.RX jb 0x140008b99
   140008b38:	ins    DWORD PTR es:[rdi],dx
   140008b39:	gs rex.W (bad) 
   140008b3c:	outs   dx,BYTE PTR ds:[rsi]
   140008b3d:	fs ins BYTE PTR es:[rdi],dx
   140008b3f:	gs jb  0x140008b75
   140008b42:	add    BYTE PTR [rax],al
   140008b44:	(bad)  
   140008b45:	add    BYTE PTR [rdi],bh
   140008b47:	je     0x140008bae
   140008b49:	jb     0x140008bb8
   140008b4b:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140008b52:	pop    rcx
   140008b53:	pop    r8
   140008b55:	pop    rax
   140008b56:	pop    rdx
   140008b57:	add    BYTE PTR [rbp+0x65685301],dh
   140008b5d:	ins    BYTE PTR es:[rdi],dx
   140008b5e:	ins    BYTE PTR es:[rdi],dx
   140008b5f:	rex.RB js 0x140008bc7
   140008b62:	movsxd esi,DWORD PTR [rbp+0x74]
   140008b65:	gs rex.RB js 0x140008bc0
   140008b69:	add    BYTE PTR [rbx+0x48],dl
   140008b6c:	rex.RB
   140008b6d:	rex.WR
   140008b6e:	xor    r14,QWORD PTR [rdx]
   140008b71:	cs fs ins BYTE PTR es:[rdi],dx
   140008b74:	ins    BYTE PTR es:[rdi],dx
   140008b75:	add    dh,al
   140008b77:	add    dl,BYTE PTR [rdx+0x74]
   140008b7a:	ins    BYTE PTR es:[rdi],dx
   140008b7b:	rex.XB (bad) 
   140008b7d:	jo     0x140008bf3
   140008b7f:	jne    0x140008bf3
   140008b81:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140008b84:	outs   dx,BYTE PTR ds:[rsi]
   140008b85:	je     0x140008bec
   140008b87:	js     0x140008bfd
   140008b89:	add    BYTE PTR [rdi+0x4],dh
   140008b8c:	push   rdx
   140008b8d:	je     0x140008bfb
   140008b8f:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008b91:	outs   dx,DWORD PTR ds:[rsi]
   140008b92:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140008b96:	jne    0x140008c06
   140008b98:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140008b9c:	outs   dx,BYTE PTR ds:[rsi]
   140008b9d:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140008b9f:	je     0x140008c13
   140008ba1:	jns    0x140008ba3
   140008ba3:	add    BYTE PTR [rbx+0x6c745205],cl
   140008ba9:	push   rsi
   140008baa:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140008bb1:	outs   dx,BYTE PTR ds:[rsi]
   140008bb2:	ja     0x140008c1d
   140008bb4:	outs   dx,BYTE PTR ds:[rsi]
   140008bb5:	add    BYTE PTR fs:[rax],al
   140008bb8:	outs   dx,BYTE PTR ds:[rsi]
   140008bb9:	je     0x140008c1f
   140008bbb:	ins    BYTE PTR es:[rdi],dx
   140008bbc:	ins    BYTE PTR es:[rdi],dx
   140008bbd:	cs fs ins BYTE PTR es:[rdi],dx
   140008bc0:	ins    BYTE PTR es:[rdi],dx
   140008bc1:	add    BYTE PTR [rbx],ch
   140008bc3:	add    BYTE PTR [rbx+0x6f],al
   140008bc6:	rex.XB jb 0x140008c2e
   140008bc9:	(bad)  
   140008bca:	je     0x140008c31
   140008bcc:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008bce:	jae    0x140008c44
   140008bd0:	(bad)  
   140008bd1:	outs   dx,BYTE PTR ds:[rsi]
   140008bd2:	movsxd esp,DWORD PTR [rbp+0x0]
   140008bd5:	add    BYTE PTR [rax+rax*1+0x61546f43],cl
   140008bdc:	jae    0x140008c49
   140008bde:	rex.WRB
   140008bdf:	gs ins DWORD PTR es:[rdi],dx
   140008be1:	rex.RX jb 0x140008c49
   140008be4:	add    BYTE PTR gs:[rbx+0x546f4300],cl
   140008beb:	(bad)  
   140008bec:	jae    0x140008c59
   140008bee:	rex.WRB
   140008bef:	gs ins DWORD PTR es:[rdi],dx
   140008bf1:	rex.B ins BYTE PTR es:[rdi],dx
   140008bf3:	ins    BYTE PTR es:[rdi],dx
   140008bf4:	outs   dx,DWORD PTR ds:[rsi]
   140008bf5:	movsxd eax,DWORD PTR [rax]
   140008bf7:	add    BYTE PTR [rdi+0x6c],ch
   140008bfa:	xor    esi,DWORD PTR gs:[rdx]
   140008bfd:	cs fs ins BYTE PTR es:[rdi],dx
   140008c00:	ins    BYTE PTR es:[rdi],dx
   140008c01:	add    BYTE PTR [rbx],al
   140008c03:	add    BYTE PTR [rdx+0x6f],dl
   140008c06:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008c08:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008c10:	add    BYTE PTR [rax],al
   140008c12:	(bad)  
   140008c13:	add    BYTE PTR [rdx+0x6f],dl
   140008c16:	push   rbp
   140008c17:	outs   dx,BYTE PTR ds:[rsi]
   140008c18:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140008c1f:	imul   edi,DWORD PTR [rdx+0x65],0x70610000
   140008c26:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dff9d
   140008c30:	outs   dx,DWORD PTR ds:[rsi]
   140008c31:	jb     0x140008c98
   140008c33:	sub    eax,0x726e6977
   140008c38:	je     0x140008c67
   140008c3a:	ins    BYTE PTR es:[rdi],dx
   140008c3b:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30b972
   140008c41:	fs ins BYTE PTR es:[rdi],dx
   140008c43:	ins    BYTE PTR es:[rdi],dx
   140008c44:	add    BYTE PTR [rax],al
   140008c46:	cmp    eax,DWORD PTR [rip+0x6e69463f]        # 0x1ae69d28b
   140008c4c:	fs rex.R
   140008c4e:	gs jae 0x140008cb4
   140008c51:	outs   dx,BYTE PTR gs:[rsi]
   140008c53:	fs outs dx,BYTE PTR gs:[rsi]
   140008c56:	je     0x140008c98
   140008c58:	rex.RB ins BYTE PTR es:[rdi],dx
   140008c5a:	gs ins DWORD PTR es:[rdi],dx
   140008c5c:	outs   dx,BYTE PTR gs:[rsi]
   140008c5e:	je     0x140008ca0
   140008c60:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140008c68:	rex
   140008c69:	rex push rcx
   140008c6b:	rex.RB
   140008c6c:	rex.B
   140008c6d:	push   r8
   140008c6f:	rex.RB
   140008c70:	push   r14
   140008c72:	xor    DWORD PTR [rdx],esi
   140008c74:	rex
   140008c75:	rex.RXB
   140008c76:	rex pop rdx
   140008c78:	add    BYTE PTR [rax],al
   140008c7a:	adc    BYTE PTR es:[rbx+0x74],dl
   140008c7e:	jb     0x140008cd4
   140008c80:	outs   dx,DWORD PTR ds:[rsi]
   140008c81:	rex.WB
   140008c82:	add    BYTE PTR [rcx],r11b
   140008c85:	or     eax,0x7465533f
   140008c8a:	rex.WR (bad) 
   140008c8c:	jns    0x140008cfd
   140008c8e:	jne    0x140008d04
   140008c90:	push   rax
   140008c91:	outs   dx,DWORD PTR ds:[rsi]
   140008c92:	jae    0x140008cd4
   140008c94:	rex.RB ins BYTE PTR es:[rdi],dx
   140008c96:	gs ins DWORD PTR es:[rdi],dx
   140008c98:	outs   dx,BYTE PTR gs:[rsi]
   140008c9a:	je     0x140008cdc
   140008c9c:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140008ca4:	rex
   140008ca5:	rex push rcx
   140008ca7:	rex.RB
   140008ca8:	rex.B
   140008ca9:	rex.B
   140008caa:	rex.WX
   140008cab:	rex.W
   140008cac:	rex pop rdx
   140008cae:	add    BYTE PTR [rax],al
   140008cb0:	mov    edi,0x65533f0c
   140008cb5:	je     0x140008cfa
   140008cb7:	outs   dx,DWORD PTR ds:[rsi]
   140008cb8:	outs   dx,BYTE PTR ds:[rsi]
   140008cb9:	je     0x140008d20
   140008cbb:	outs   dx,BYTE PTR ds:[rsi]
   140008cbc:	je     0x140008d11
   140008cbe:	je     0x140008d32
   140008cc0:	imul   ebp,DWORD PTR [rsi+0x67],0x656c4540
   140008cc7:	ins    DWORD PTR es:[rdi],dx
   140008cc8:	outs   dx,BYTE PTR gs:[rsi]
   140008cca:	je     0x140008d0c
   140008ccc:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140008cd4:	rex
   140008cd5:	rex push rcx
   140008cd7:	rex.RB
   140008cd8:	rex.B
   140008cd9:	rex.B
   140008cda:	rex.WX push rax
   140008cdc:	rex.RB
   140008cdd:	rex.X
   140008cde:	rex.RXB
   140008cdf:	rex pop rdx
   140008ce1:	add    bl,ah
   140008ce3:	add    edi,DWORD PTR [rdi]
   140008ce5:	rex.XB jb 0x140008d4d
   140008ce8:	(bad)  
   140008ce9:	je     0x140008d50
   140008ceb:	rex
   140008cec:	rex.R push rbp
   140008cee:	rex.WB pop r8
   140008cf0:	ins    DWORD PTR es:[rdi],dx
   140008cf1:	ins    BYTE PTR es:[rdi],dx
   140008cf2:	push   rax
   140008cf3:	(bad)  
   140008cf4:	jb     0x140008d69
   140008cf6:	gs jb  0x140008d39
   140008cf9:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140008d01:	rex
   140008d02:	rex push rbx
   140008d04:	rex.B
   140008d05:	rex.WX push rax
   140008d07:	rex.RB
   140008d08:	push   r8
   140008d0a:	rex.RB
   140008d0b:	push   r14
   140008d0d:	xor    DWORD PTR [rdx],esi
   140008d0f:	rex push rax
   140008d11:	ss push r8
   140008d14:	rex.RB
   140008d15:	push   r14
   140008d17:	push   rsi
   140008d18:	(bad)  
   140008d19:	ins    BYTE PTR es:[rdi],dx
   140008d1a:	jne    0x140008d81
   140008d1c:	xor    al,BYTE PTR [rax+0x50]
   140008d20:	rex.RB
   140008d21:	rex.X
   140008d22:	rex.RXB push r8
   140008d24:	rex.RB
   140008d25:	pop    r8
   140008d27:	rex pop rdx
   140008d29:	xor    dl,BYTE PTR [rax+0x36]
   140008d2c:	pop    r8
   140008d2e:	xor    DWORD PTR [rcx],esi
   140008d30:	rex.W xor al,BYTE PTR [rax+0x5a]
   140008d34:	xor    al,BYTE PTR [rax+0x5a]
   140008d37:	add    bh,cl
   140008d39:	or     eax,0x7465533f
   140008d3e:	pop    rax
   140008d3f:	rex.WRB
   140008d40:	rex.WR
   140008d41:	rex.RX jb 0x140008db3
   140008d44:	ins    DWORD PTR es:[rdi],dx
   140008d45:	push   rdx
   140008d46:	gs jae 0x140008db8
   140008d49:	jne    0x140008dbd
   140008d4b:	movsxd esp,DWORD PTR [rbp+0x40]
   140008d4e:	rex.R push rbp
   140008d50:	rex.WB pop r8
   140008d52:	ins    DWORD PTR es:[rdi],dx
   140008d53:	ins    BYTE PTR es:[rdi],dx
   140008d54:	push   rax
   140008d55:	(bad)  
   140008d56:	jb     0x140008dcb
   140008d58:	gs jb  0x140008d9b
   140008d5b:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140008d63:	rex
   140008d64:	rex push rcx
   140008d66:	rex.RB
   140008d67:	rex.B
   140008d68:	rex.B
   140008d69:	rex.WX
   140008d6a:	rex.WB push r8
   140008d6c:	rex.RB
   140008d6d:	push   r13
   140008d6f:	rex.W
   140008d70:	rex.WB
   140008d71:	rex.WRX push rbx
   140008d73:	push   rsp
   140008d74:	rex.B
   140008d75:	rex.WRX
   140008d76:	rex.XB
   140008d77:	rex.RB pop r15
   140008d79:	pop    rdi
   140008d7a:	rex
   140008d7b:	xor    BYTE PTR [rax+0x5a],al
   140008d7f:	add    BYTE PTR [rdx+0x4],ch
   140008d82:	(bad)  
   140008d83:	rex.XB jb 0x140008deb
   140008d86:	(bad)  
   140008d87:	je     0x140008dee
   140008d89:	rex.RB ins BYTE PTR es:[rdi],dx
   140008d8b:	gs ins DWORD PTR es:[rdi],dx
   140008d8d:	outs   dx,BYTE PTR gs:[rsi]
   140008d8f:	je     0x140008dd1
   140008d91:	rex.R push rbp
   140008d93:	rex.WB pop r8
   140008d95:	ins    DWORD PTR es:[rdi],dx
   140008d96:	ins    BYTE PTR es:[rdi],dx
   140008d97:	push   rax
   140008d98:	(bad)  
   140008d99:	jb     0x140008e0e
   140008d9b:	gs jb  0x140008dde
   140008d9e:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140008da6:	rex
   140008da7:	rex push rcx
   140008da9:	rex.RB
   140008daa:	rex.B
   140008dab:	rex.B
   140008dac:	rex.WX push rax
   140008dae:	rex.RB
   140008daf:	rex.X
   140008db0:	rex.RXB push r8
   140008db2:	rex.RB
   140008db3:	push   r14
   140008db5:	rex.RB ins BYTE PTR es:[rdi],dx
   140008db7:	gs ins DWORD PTR es:[rdi],dx
   140008db9:	outs   dx,BYTE PTR gs:[rsi]
   140008dbb:	je     0x140008dfd
   140008dbd:	xor    al,BYTE PTR [rax+0x31]
   140008dc0:	push   rax
   140008dc1:	rex.RB
   140008dc2:	rex.B
   140008dc3:	rex.WXB push r8
   140008dc5:	rex.RB
   140008dc6:	push   r8
   140008dc8:	rex.RB
   140008dc9:	push   r14
   140008dcb:	xor    esi,DWORD PTR [rdx]
   140008dcd:	rex
   140008dce:	rex pop rdx
   140008dd0:	add    BYTE PTR [rax],al
   140008dd2:	sub    al,BYTE PTR [rbx]
   140008dd4:	(bad)  
   140008dd5:	rex.B
   140008dd6:	fs imul r14,QWORD PTR fs:[rbx+0x74],0x72656e65
   140008de0:	rex
   140008de1:	rex.RB ins BYTE PTR es:[rdi],dx
   140008de3:	gs ins DWORD PTR es:[rdi],dx
   140008de5:	outs   dx,BYTE PTR gs:[rsi]
   140008de7:	je     0x140008e29
   140008de9:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140008df1:	rex
   140008df2:	rex push rcx
   140008df4:	rex.RB
   140008df5:	rex.B
   140008df6:	rex.B
   140008df7:	rex.WX push rax
   140008df9:	rex.RB
   140008dfa:	push   r13
   140008dfc:	rex.WB
   140008dfd:	rex.RB ins BYTE PTR es:[rdi],dx
   140008dff:	gs ins DWORD PTR es:[rdi],dx
   140008e01:	outs   dx,BYTE PTR gs:[rsi]
   140008e03:	je     0x140008e51
   140008e05:	imul   esi,DWORD PTR [rbx+0x74],0x72656e65
   140008e0c:	xor    al,BYTE PTR [rax+0x40]
   140008e10:	pop    rdx
   140008e11:	add    BYTE PTR [rcx+0x6c433f03],cl
   140008e17:	imul   esp,DWORD PTR [rbx+0x6b],0x756f5440
   140008e1e:	movsxd ebp,DWORD PTR [rax+0x42]
   140008e21:	jne    0x140008e97
   140008e23:	je     0x140008e94
   140008e25:	outs   dx,BYTE PTR ds:[rsi]
   140008e26:	rex
   140008e27:	imul   r14d,DWORD PTR [rdx+0x65],0x49557463
   140008e2f:	rex
   140008e30:	rex push rbx
   140008e32:	rex.B (bad) 
   140008e34:	push   r14
   140008e36:	push   rbp
   140008e37:	rex.WB
   140008e38:	rex.R
   140008e39:	rex
   140008e3a:	rex pop rax
   140008e3c:	pop    rdx
   140008e3d:	add    BYTE PTR [rbp+rdx*2+0x49],al
   140008e41:	(bad)  
   140008e42:	xor    BYTE PTR [rsi],ch
   140008e44:	fs ins BYTE PTR es:[rdi],dx
   140008e46:	ins    BYTE PTR es:[rdi],dx
   140008e47:	add    BYTE PTR [rdi+0x69],dl
   140008e4a:	outs   dx,BYTE PTR ds:[rsi]
   140008e4b:	outs   dx,DWORD PTR fs:[rsi]
   140008e4d:	ja     0x140008ec2
   140008e4f:	cs push rbp
   140008e51:	rex.WB
   140008e52:	cs rex.WB ins DWORD PTR es:[rdi],dx
   140008e55:	ins    DWORD PTR es:[rdi],dx
   140008e56:	gs jb  0x140008ecc
   140008e59:	imul   esi,DWORD PTR [rsi+0x65],0x6c6c642e
   140008e60:	add    BYTE PTR [rax],al
   140008e62:	and    eax,DWORD PTR [rcx]
   140008e64:	rex.RB jbe 0x140008ecc
   140008e67:	outs   dx,BYTE PTR ds:[rsi]
   140008e68:	je     0x140008ec1
   140008e6a:	jb     0x140008ed5
   140008e6c:	je     0x140008ed3
   140008e6e:	add    BYTE PTR [rax],al
   140008e70:	ins    DWORD PTR es:[rdi],dx
   140008e71:	add    eax,0x65656c53
   140008e76:	jo     0x140008e78
   140008e78:	mov    DWORD PTR [rdx],0x53746547
   140008e7e:	je     0x140008ee1
   140008e80:	jb     0x140008ef6
   140008e82:	jne    0x140008ef4
   140008e84:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008e86:	outs   dx,WORD PTR ds:[rsi]
   140008e88:	push   rdi
   140008e89:	add    BYTE PTR [rsi+0x5],bl
   140008e8c:	push   rbx
   140008e8d:	gs je  0x140008ee5
   140008e90:	outs   dx,BYTE PTR ds:[rsi]
   140008e91:	push   0x6c646e61
   140008e96:	gs fs rex.RB js 0x140008efe
   140008e9b:	gs jo  0x140008f12
   140008e9e:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140008ea5:	gs jb  0x140008ea8
   140008ea8:	outs   dx,BYTE PTR ds:[rsi]
   140008ea9:	add    al,BYTE PTR [rdi+0x65]
   140008eac:	je     0x140008efb
   140008eae:	outs   dx,DWORD PTR ds:[rsi]
   140008eaf:	fs jne 0x140008f1e
   140008eb2:	gs rex.W (bad) 
   140008eb5:	outs   dx,BYTE PTR ds:[rsi]
   140008eb6:	fs ins BYTE PTR es:[rdi],dx
   140008eb8:	gs push rdi
   140008eba:	add    BYTE PTR [rax],al
   140008ebc:	ss add al,0x51
   140008ebf:	jne    0x140008f26
   140008ec1:	jb     0x140008f3c
   140008ec3:	push   rax
   140008ec4:	gs jb  0x140008f2d
   140008ec7:	outs   dx,DWORD PTR ds:[rsi]
   140008ec8:	jb     0x140008f37
   140008eca:	(bad)  
   140008ecb:	outs   dx,BYTE PTR ds:[rsi]
   140008ecc:	movsxd esp,DWORD PTR [rbp+0x43]
   140008ecf:	outs   dx,DWORD PTR ds:[rsi]
   140008ed0:	jne    0x140008f40
   140008ed2:	je     0x140008f39
   140008ed4:	jb     0x140008ed6
   140008ed6:	adc    DWORD PTR [rdx],eax
   140008ed8:	rex.RXB
   140008ed9:	gs je  0x140008f1f
   140008edc:	jne    0x140008f50
   140008ede:	jb     0x140008f45
   140008ee0:	outs   dx,BYTE PTR ds:[rsi]
   140008ee1:	je     0x140008f33
   140008ee3:	jb     0x140008f54
   140008ee5:	movsxd esp,DWORD PTR [rbp+0x73]
   140008ee8:	jae    0x140008f33
   140008eea:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b465d5f3
   140008ef1:	rex.XB jne 0x140008f66
   140008ef4:	jb     0x140008f5b
   140008ef6:	outs   dx,BYTE PTR ds:[rsi]
   140008ef7:	je     0x140008f4d
   140008ef9:	push   0x64616572
   140008efe:	rex.WB
   140008eff:	add    BYTE PTR fs:[rax],al
   140008f02:	loopne 0x140008f06
   140008f04:	rex.RXB
   140008f05:	gs je  0x140008f5b
   140008f08:	jns    0x140008f7d
   140008f0a:	je     0x140008f71
   140008f0c:	ins    DWORD PTR es:[rdi],dx
   140008f0d:	push   rsp
   140008f0e:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140008f15:	ins    BYTE PTR es:[rdi],dx
   140008f16:	gs push rsp
   140008f18:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   140008f1f:	gs je  0x140008f76
   140008f22:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140008f29:	je     0x140008f2b
   140008f2b:	add    BYTE PTR [rsi+0x686e5505],bl
   140008f31:	(bad)  
   140008f32:	outs   dx,BYTE PTR ds:[rsi]
   140008f33:	fs ins BYTE PTR es:[rdi],dx
   140008f35:	gs fs rex.RB js 0x140008f9d
   140008f3a:	gs jo  0x140008fb1
   140008f3d:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140008f44:	gs jb  0x140008f47
   140008f47:	add    BYTE PTR [rax],dl
   140008f49:	add    al,BYTE PTR [rdi+0x65]
   140008f4c:	je     0x140008f91
   140008f4e:	jne    0x140008fc2
   140008f50:	jb     0x140008fb7
   140008f52:	outs   dx,BYTE PTR ds:[rsi]
   140008f53:	je     0x140008fa5
   140008f55:	jb     0x140008fc6
   140008f57:	movsxd esp,DWORD PTR [rbp+0x73]
   140008f5a:	jae    0x140008f5c
   140008f5c:	jl     0x140008f63
   140008f5e:	push   rsp
   140008f5f:	gs jb  0x140008fcf
   140008f62:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140008f69:	outs   dx,DWORD PTR ds:[rsi]
   140008f6a:	movsxd esp,DWORD PTR [rbp+0x73]
   140008f6d:	jae    0x140008f6f
   140008f6f:	add    BYTE PTR [rdx+0x6d656d04],dl
   140008f75:	movsxd esi,DWORD PTR [rax+0x79]
   140008f78:	add    BYTE PTR [rax],al
   140008f7a:	xchg   esi,eax
   140008f7b:	add    al,0x6d
   140008f7d:	gs ins DWORD PTR es:[rdi],dx
   140008f7f:	jae    0x140008fe6
   140008f81:	je     0x140008f83
	...

Disassembly of section .data:

0000000140009000 <.data>:
   140009000:	add    DWORD PTR [rax],eax
   140009002:	add    BYTE PTR [rax],al
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    BYTE PTR [rax],al
   140009008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000900e:	add    BYTE PTR [rax],al
   140009010:	int    0x5d
   140009012:	and    dl,dl
   140009014:	data16 (bad) 
   140009016:	(bad)  
   140009017:	inc    DWORD PTR [rax]
	...
   140009025:	add    BYTE PTR [rax],al
   140009027:	add    BYTE PTR [rcx+0x7c],dh
   14000902a:	add    BYTE PTR [rax+0x1],al
	...
   140009055:	add    BYTE PTR [rax],al
   140009057:	add    BYTE PTR [rax],ah
   140009059:	cmp    DWORD PTR [rax],eax
   14000905b:	rex add DWORD PTR [rax],eax
	...

Disassembly of section .pdata:

000000014000a000 <.pdata>:
   14000a000:	or     BYTE PTR [rax],dl
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	test   al,0x10
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	movabs al,ds:0x73000010b0000080
   14000a011:	adc    DWORD PTR [rax],eax
   14000a013:	add    BYTE PTR [rdx+rax*4],bl
   14000a016:	add    BYTE PTR [rax],al
   14000a018:	adc    BYTE PTR [rcx],0x0
   14000a01b:	add    BYTE PTR [rcx+0x12],ch
   14000a01e:	add    BYTE PTR [rax],al
   14000a020:	cwde   
   14000a021:	jg     0x14000a023
   14000a023:	add    BYTE PTR [rax+0x12],dh
   14000a026:	add    BYTE PTR [rax],al
   14000a028:	jrcxz  0x14000a03c
   14000a02a:	add    BYTE PTR [rax],al
   14000a02c:	movabs al,ds:0x16000012f000007f
   14000a035:	adc    eax,DWORD PTR [rax]
   14000a037:	add    BYTE PTR [rax+0x3800007f],bl
   14000a03d:	adc    eax,DWORD PTR [rax]
   14000a03f:	add    BYTE PTR [rbx+0x13],bl
   14000a042:	add    BYTE PTR [rax],al
   14000a044:	nop
   14000a045:	jg     0x14000a047
   14000a047:	add    BYTE PTR [rax+0x13],dh
   14000a04a:	add    BYTE PTR [rax],al
   14000a04c:	push   rdx
   14000a04d:	adc    al,0x0
   14000a04f:	add    BYTE PTR [rax+0x6000007f],ch
   14000a055:	adc    al,0x0
   14000a057:	add    BYTE PTR [rdx],dh
   14000a059:	adc    eax,0x7fbc0000
   14000a05e:	add    BYTE PTR [rax],al
   14000a060:	rex adc eax,0x18850000
   14000a066:	add    BYTE PTR [rax],al
   14000a068:	sar    BYTE PTR [rdi+0x0],1
   14000a06b:	add    BYTE PTR [rax+0x59000018],dl
   14000a071:	sbb    DWORD PTR [rax],eax
   14000a073:	add    al,ch
   14000a075:	jg     0x14000a077
   14000a077:	add    BYTE PTR [rax+0x19],ah
   14000a07a:	add    BYTE PTR [rax],al
   14000a07c:	jb     0x14000a098
   14000a07e:	add    BYTE PTR [rax],al
   14000a080:	clc    
   14000a081:	jg     0x14000a083
   14000a083:	add    BYTE PTR [rax-0x21ffffe6],al
   14000a089:	sbb    al,BYTE PTR [rax]
   14000a08b:	add    BYTE PTR [rax+rax*4],cl
   14000a08e:	add    BYTE PTR [rax],al
   14000a090:	lock sbb al,BYTE PTR [rax]
   14000a093:	add    BYTE PTR [rsi+0x1c],al
   14000a096:	add    BYTE PTR [rax],al
   14000a098:	sbb    BYTE PTR [rax+0x1c4c0000],al
   14000a09e:	add    BYTE PTR [rax],al
   14000a0a0:	lock sbb eax,0x80300000
   14000a0a6:	add    BYTE PTR [rax],al
   14000a0a8:	clc    
   14000a0a9:	sbb    eax,0x1f560000
   14000a0ae:	add    BYTE PTR [rax],al
   14000a0b0:	rex.W add BYTE PTR [rax],0x0
   14000a0b4:	pop    rsp
   14000a0b5:	(bad)  
   14000a0b6:	add    BYTE PTR [rax],al
   14000a0b8:	(bad)  
   14000a0b9:	and    BYTE PTR [rax],al
   14000a0bb:	add    BYTE PTR [rax+rax*4+0x0],ah
   14000a0bf:	add    BYTE PTR [rax+riz*1],dl
   14000a0c2:	add    BYTE PTR [rax],al
   14000a0c4:	adc    BYTE PTR [rcx],ah
   14000a0c6:	add    BYTE PTR [rax],al
   14000a0c8:	rex.W add BYTE PTR [rax],0x0
   14000a0cc:	and    BYTE PTR [rcx],ah
   14000a0ce:	add    BYTE PTR [rax],al
   14000a0d0:	(bad)  
   14000a0d2:	add    BYTE PTR [rax],al
   14000a0d4:	add    BYTE PTR [rax+0x21700000],0x0
   14000a0db:	add    BYTE PTR [rdx-0x6fffffdf],ah
   14000a0e1:	jg     0x14000a0e3
   14000a0e3:	add    BYTE PTR [rax+0x46000021],dh
   14000a0e9:	and    al,BYTE PTR [rax]
   14000a0eb:	add    BYTE PTR [rax+0x70000080],al
   14000a0f1:	and    al,BYTE PTR [rax]
   14000a0f3:	add    bh,bl
   14000a0f5:	and    al,BYTE PTR [rax]
   14000a0f7:	add    BYTE PTR [rax+0x10000080],al
   14000a0fd:	and    eax,DWORD PTR [rax]
   14000a0ff:	add    BYTE PTR [rsi-0x7fffffdd],ah
   14000a105:	add    BYTE PTR [rax],0x0
   14000a108:	lods   al,BYTE PTR ds:[rsi]
   14000a109:	and    eax,DWORD PTR [rax]
   14000a10b:	add    BYTE PTR [rdx],ch
   14000a10d:	and    al,0x0
   14000a10f:	add    BYTE PTR [rax+0x30000080],dl
   14000a115:	and    al,0x0
   14000a117:	add    BYTE PTR [rdi-0x7fffffdc],bl
   14000a11d:	add    BYTE PTR [rax],0x0
   14000a120:	test   al,0x24
   14000a122:	add    BYTE PTR [rax],al
   14000a124:	xchg   DWORD PTR [rip+0xffffffff80a80000],esp        # 0xc0a8a12a
   14000a12a:	add    BYTE PTR [rax],al
   14000a12c:	mov    al,0x25
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	retf   0x27
   14000a133:	add    al,al
   14000a135:	add    BYTE PTR [rax],0x0
   14000a138:	shl    BYTE PTR [rdi],1
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	in     eax,dx
   14000a13d:	(bad)  
   14000a13e:	add    BYTE PTR [rax],al
   14000a140:	cwde   
   14000a141:	jg     0x14000a143
   14000a143:	add    ah,dh
   14000a145:	(bad)  
   14000a146:	add    BYTE PTR [rax],al
   14000a148:	xor    DWORD PTR [rdx],ebp
   14000a14a:	add    BYTE PTR [rax],al
   14000a14c:	loopne 0x14000a0ce
   14000a14e:	add    BYTE PTR [rax],al
   14000a150:	cmp    BYTE PTR [rdx],ch
   14000a152:	add    BYTE PTR [rax],al
   14000a154:	jo     0x14000a180
   14000a156:	add    BYTE PTR [rax],al
   14000a158:	clc    
   14000a159:	add    BYTE PTR [rax],0x0
   14000a15c:	js     0x14000a188
   14000a15e:	add    BYTE PTR [rax],al
   14000a160:	rex.X sub eax,DWORD PTR [rax]
   14000a163:	add    BYTE PTR [rax],al
   14000a165:	add    DWORD PTR [rax],0x2b4800
   14000a16b:	add    BYTE PTR [rdi+0x1400002b],bh
   14000a171:	add    DWORD PTR [rax],0x2bd000
   14000a177:	add    BYTE PTR [rcx+0x2c],dl
   14000a17a:	add    BYTE PTR [rax],al
   14000a17c:	and    al,0x81
   14000a17e:	add    BYTE PTR [rax],al
   14000a180:	pop    rax
   14000a181:	sub    al,0x0
   14000a183:	add    BYTE PTR [rax+0x2d],bh
   14000a186:	add    BYTE PTR [rax],al
   14000a188:	xor    BYTE PTR [rcx+0x2d800000],al
   14000a18e:	add    BYTE PTR [rax],al
   14000a190:	jae    0x14000a1c0
   14000a192:	add    BYTE PTR [rax],al
   14000a194:	add    BYTE PTR [rax+0x2e800000],0x0
   14000a19b:	add    BYTE PTR [rdx],al
   14000a19d:	(bad)  
   14000a19e:	add    BYTE PTR [rax],al
   14000a1a0:	add    QWORD PTR [rax],0x2f1000
   14000a1a7:	add    BYTE PTR [rcx+0x2f],dl
   14000a1aa:	add    BYTE PTR [rax],al
   14000a1ac:	pop    rsp
   14000a1ad:	add    DWORD PTR [rax],0x2f6000
   14000a1b3:	add    BYTE PTR [rdi-0x6fffffd1],cl
   14000a1b9:	jg     0x14000a1bb
   14000a1bb:	add    BYTE PTR [rax+0x3600002f],ah
   14000a1c1:	xor    BYTE PTR [rax],al
   14000a1c3:	add    BYTE PTR [rcx+rax*4+0x0],ah
   14000a1c7:	add    BYTE PTR [rax+rsi*1],bh
   14000a1ca:	add    BYTE PTR [rax],al
   14000a1cc:	add    DWORD PTR [rcx],esi
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	js     0x14000a153
   14000a1d2:	add    BYTE PTR [rax],al
   14000a1d4:	adc    BYTE PTR [rcx],dh
   14000a1d6:	add    BYTE PTR [rax],al
   14000a1d8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a1d9:	xor    DWORD PTR [rax],eax
   14000a1db:	add    BYTE PTR [rax-0x53ffff80],al
   14000a1e1:	xor    DWORD PTR [rax],eax
   14000a1e3:	add    BYTE PTR [rdx+0x32],dh
   14000a1e6:	add    BYTE PTR [rax],al
   14000a1e8:	nop
   14000a1e9:	add    DWORD PTR [rax],0x327800
   14000a1ef:	add    BYTE PTR [rax-0x43ffffcd],al
   14000a1f5:	jg     0x14000a1f7
   14000a1f7:	add    BYTE PTR [rax-0x2ffffcd],cl
   14000a1fd:	xor    eax,DWORD PTR [rax]
   14000a1ff:	add    BYTE PTR [rax+0x400007f],dl
   14000a205:	xor    al,0x0
   14000a207:	add    BYTE PTR [rbx-0x5fffffcc],al
   14000a20d:	add    DWORD PTR [rax],0x348c00
   14000a213:	add    BYTE PTR [rbp+0x35],dh
   14000a216:	add    BYTE PTR [rax],al
   14000a218:	lods   al,BYTE PTR ds:[rsi]
   14000a219:	add    DWORD PTR [rax],0x357c00
   14000a21f:	add    cl,cl
   14000a221:	xor    eax,0x815c0000
   14000a226:	add    BYTE PTR [rax],al
   14000a228:	shl    BYTE PTR [rip+0x37840000],1        # 0x17784a22e
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	mov    esp,0x8c000081
   14000a235:	(bad)  
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	mov    edi,DWORD PTR [rax]
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	int3   
   14000a23d:	add    DWORD PTR [rax],0x389400
   14000a243:	add    BYTE PTR [rdx],bl
   14000a245:	cmp    DWORD PTR [rax],eax
   14000a247:	add    al,bl
   14000a249:	add    DWORD PTR [rax],0x392c00
   14000a24f:	add    BYTE PTR [rsi-0x1bffffc6],bl
   14000a255:	add    DWORD PTR [rax],0x3aa400
   14000a25b:	add    BYTE PTR [rdx+0x3b],cl
   14000a25e:	add    BYTE PTR [rax],al
   14000a260:	clc    
   14000a261:	add    DWORD PTR [rax],0x3b5000
   14000a267:	add    BYTE PTR [rax+0x3c],ah
   14000a26a:	add    BYTE PTR [rax],al
   14000a26c:	add    BYTE PTR [rax+0x3c700000],0x0
   14000a273:	add    BYTE PTR [rbx+0xc00003c],ch
   14000a279:	add    BYTE PTR [rax],0x0
   14000a27c:	mov    ah,0x3c
   14000a27e:	add    BYTE PTR [rax],al
   14000a280:	(bad)  
   14000a281:	cmp    eax,0x81f80000
   14000a286:	add    BYTE PTR [rax],al
   14000a288:	sub    BYTE PTR [rip+0x3d960000],bh        # 0x17d96a28e
   14000a28e:	add    BYTE PTR [rax],al
   14000a290:	or     BYTE PTR [rdx+0x3da00000],al
   14000a296:	add    BYTE PTR [rax],al
   14000a298:	cmc    
   14000a299:	add    BYTE PTR ds:[rax],al
   14000a29c:	add    BYTE PTR [rax+0x3f000000],0x0
   14000a2a3:	add    BYTE PTR [rdx+0x3f],cl
   14000a2a6:	add    BYTE PTR [rax],al
   14000a2a8:	nop
   14000a2a9:	jg     0x14000a2ab
   14000a2ab:	add    BYTE PTR [rax+0x3f],dl
   14000a2ae:	add    BYTE PTR [rax],al
   14000a2b0:	xchg   ecx,eax
   14000a2b1:	(bad)  
   14000a2b2:	add    BYTE PTR [rax],al
   14000a2b4:	cmp    BYTE PTR [rdx+0x3fc00000],al
   14000a2ba:	add    BYTE PTR [rax],al
   14000a2bc:	in     al,dx
   14000a2bd:	(bad)  
   14000a2be:	add    BYTE PTR [rax],al
   14000a2c0:	nop
   14000a2c1:	jg     0x14000a2c3
   14000a2c3:	add    BYTE PTR [rax],al
   14000a2c5:	add    BYTE PTR [rax],al
   14000a2c8:	add    BYTE PTR ss:[rax],al
   14000a2cc:	nop
   14000a2cd:	jg     0x14000a2cf
   14000a2cf:	add    BYTE PTR [rax+0x40],al
   14000a2d2:	add    BYTE PTR [rax],al
   14000a2d4:	icebp  
   14000a2d5:	add    BYTE PTR [r8],al
   14000a2d8:	rex (bad) 
   14000a2da:	add    BYTE PTR [rax],al
   14000a2dc:	clc    
   14000a2dd:	add    BYTE PTR [r8],al
   14000a2e0:	ins    DWORD PTR es:[rdi],dx
   14000a2e1:	add    BYTE PTR [r8],r8b
   14000a2e4:	push   rsp
   14000a2e5:	(bad)  
   14000a2e6:	add    BYTE PTR [rax],al
   14000a2e8:	add    BYTE PTR [rbp+0x0],0x0
   14000a2ec:	inc    DWORD PTR [rbp+0x0]
   14000a2ef:	add    BYTE PTR [rax+0x8000080],al
   14000a2f5:	rex.RX add BYTE PTR [rax],r8b
   14000a2f8:	add    DWORD PTR [rdi+0x0],eax
   14000a2fb:	add    BYTE PTR [rax-0x7e],bh
   14000a2fe:	add    BYTE PTR [rax],al
   14000a300:	or     BYTE PTR [rdi+0x0],al
   14000a303:	add    BYTE PTR [rbp-0x6fffffb9],dl
   14000a309:	(bad)  
   14000a30a:	add    BYTE PTR [rax],al
   14000a30c:	pushf  
   14000a30d:	rex.RXB add BYTE PTR [r8],r8b
   14000a310:	(bad)  
   14000a311:	rex.RXB add BYTE PTR [r8],r8b
   14000a314:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a315:	(bad)  
   14000a316:	add    BYTE PTR [rax],al
   14000a318:	fadd   QWORD PTR [rdi+0x0]
   14000a31b:	add    BYTE PTR [rcx+0x48],bl
   14000a31e:	add    BYTE PTR [rax],al
   14000a320:	lods   al,BYTE PTR ds:[rsi]
   14000a321:	(bad)  
   14000a322:	add    BYTE PTR [rax],al
   14000a324:	(bad)  
   14000a325:	rex.W add BYTE PTR [rax],al
   14000a328:	(bad)  
   14000a329:	rex.WX add BYTE PTR [rax],al
   14000a32c:	mov    esp,0xf0000082
   14000a331:	rex.WX add BYTE PTR [rax],al
   14000a334:	mov    edi,0x9800004b
   14000a339:	jg     0x14000a33b
   14000a33b:	add    al,dl
   14000a33d:	rex.WXB add BYTE PTR [r8],al
   14000a340:	sbb    DWORD PTR [rax+rax*1+0x0],ecx
   14000a344:	loopne 0x14000a2c8
   14000a346:	add    BYTE PTR [rax],al
   14000a348:	and    BYTE PTR [rax+rax*1+0x0],cl
   14000a34c:	xchg   ecx,eax
   14000a34d:	rex.WRX add BYTE PTR [rax],r8b
   14000a350:	call   0xe000a3d7
   14000a355:	rex.WRX add BYTE PTR [rax],r8b
   14000a358:	mov    dl,0x4e
   14000a35a:	add    BYTE PTR [rax],al
   14000a35c:	cwde   
   14000a35d:	jg     0x14000a35f
   14000a35f:	add    al,dl
   14000a361:	rex.WRX add BYTE PTR [rax],r8b
   14000a364:	out    dx,al
   14000a365:	rex.WRX add BYTE PTR [rax],r8b
   14000a368:	and    BYTE PTR [rbx+0x4ef40000],al
   14000a36e:	add    BYTE PTR [rax],al
   14000a370:	xchg   edx,eax
   14000a371:	rex.WRXB add BYTE PTR [r8],r8b
   14000a374:	and    al,0x83
   14000a376:	add    BYTE PTR [rax],al
   14000a378:	cwde   
   14000a379:	rex.WRXB add BYTE PTR [r8],r8b
   14000a37c:	scas   eax,DWORD PTR es:[rdi]
   14000a37d:	rex.WRXB add BYTE PTR [r8],r8b
   14000a380:	cwde   
   14000a381:	jg     0x14000a383
   14000a383:	add    ah,cl
   14000a385:	rex.WRXB add BYTE PTR [r8],r8b
   14000a388:	jmp    0x14000a3d9
   14000a38a:	add    BYTE PTR [rax],al
   14000a38c:	add    QWORD PTR [rax],0x0
   14000a390:	add    BYTE PTR [rax+0x0],dl
   14000a393:	add    BYTE PTR [rcx],bh
   14000a395:	push   rax
   14000a396:	add    BYTE PTR [rax],al
   14000a398:	cwde   
   14000a399:	jg     0x14000a39b
   14000a39b:	add    BYTE PTR [rax+0x50],al
   14000a39e:	add    BYTE PTR [rax],al
   14000a3a0:	pop    rax
   14000a3a1:	push   rax
   14000a3a2:	add    BYTE PTR [rax],al
   14000a3a4:	cwde   
   14000a3a5:	jg     0x14000a3a7
   14000a3a7:	add    BYTE PTR [rax+rdx*2+0x0],ch
   14000a3ab:	add    al,al
   14000a3ad:	push   rax
   14000a3ae:	add    BYTE PTR [rax],al
   14000a3b0:	rol    BYTE PTR [rbx+0x50c80000],1
   14000a3b6:	add    BYTE PTR [rax],al
   14000a3b8:	or     eax,0x90000051
   14000a3bd:	jg     0x14000a3bf
   14000a3bf:	add    BYTE PTR [rax+0x51],dh
   14000a3c2:	add    BYTE PTR [rax],al
   14000a3c4:	mov    ebp,0xf0000051
   14000a3c9:	add    DWORD PTR [rax],0x0
   14000a3cc:	add    al,0x52
   14000a3ce:	add    BYTE PTR [rax],al
   14000a3d0:	(bad)  
   14000a3d1:	push   rdx
   14000a3d2:	add    BYTE PTR [rax],al
   14000a3d4:	sbb    al,0x84
   14000a3d6:	add    BYTE PTR [rax],al
   14000a3d8:	add    al,0x53
   14000a3da:	add    BYTE PTR [rax],al
   14000a3dc:	cmp    BYTE PTR [rbx+0x0],dl
   14000a3df:	add    BYTE PTR [rax+0x4000007f],dl
   14000a3e5:	push   rbx
   14000a3e6:	add    BYTE PTR [rax],al
   14000a3e8:	mov    cl,0x54
   14000a3ea:	add    BYTE PTR [rax],al
   14000a3ec:	sub    BYTE PTR [rax+rax*1+0x54f800],al
   14000a3f3:	add    BYTE PTR [rip+0xffffffff98000055],dl        # 0xd800a44e
   14000a3f9:	jg     0x14000a3fb
   14000a3fb:	add    BYTE PTR [rdx*2+0x557f0000],bl
   14000a402:	add    BYTE PTR [rax],al
   14000a404:	nop
   14000a405:	jg     0x14000a407
   14000a407:	add    BYTE PTR [rax-0x4dffffab],dh
   14000a40d:	push   rbp
   14000a40e:	add    BYTE PTR [rax],al
   14000a410:	xor    BYTE PTR [rax+rax*1+0x55d000],al
   14000a417:	add    cl,dh
   14000a419:	push   rbp
   14000a41a:	add    BYTE PTR [rax],al
   14000a41c:	cmp    BYTE PTR [rax+rax*1+0x560600],al
   14000a423:	add    BYTE PTR [rsi+rdx*2],ah
   14000a426:	add    BYTE PTR [rax],al
   14000a428:	adc    al,0x84
   14000a42a:	add    BYTE PTR [rax],al
   14000a42c:	sub    dl,BYTE PTR [rsi+0x0]
   14000a42f:	add    BYTE PTR [rbp+0x56],al
   14000a432:	add    BYTE PTR [rax],al
   14000a434:	adc    al,0x84
   14000a436:	add    BYTE PTR [rax],al
   14000a438:	rex.WXB push r14
   14000a43a:	add    BYTE PTR [rax],al
   14000a43c:	imul   edx,DWORD PTR [rsi+0x0],0x0
   14000a440:	rol    BYTE PTR [rbx+0x56800000],0x0
   14000a447:	add    BYTE PTR [rax+0x14000056],ah
   14000a44d:	test   BYTE PTR [rax],al
   14000a44f:	add    BYTE PTR [rax-0xeffffaa],dh
   14000a455:	push   rsi
   14000a456:	add    BYTE PTR [rax],al
   14000a458:	movabs al,ds:0x560000573000007f
   14000a461:	push   rdi
   14000a462:	add    BYTE PTR [rax],al
   14000a464:	cwde   
   14000a465:	jg     0x14000a467
   14000a467:	add    BYTE PTR [rax+0x57],ah
   14000a46a:	add    BYTE PTR [rax],al
   14000a46c:	cdq    
   14000a46d:	push   rdi
   14000a46e:	add    BYTE PTR [rax],al
   14000a470:	cwde   
   14000a471:	jg     0x14000a473
	...

Disassembly of section .rsrc:

000000014000b000 <.rsrc>:
	...
   14000b00c:	add    al,BYTE PTR [rax]
   14000b00e:	add    al,BYTE PTR [rax]
   14000b010:	add    DWORD PTR ds:[rax],eax
   14000b013:	xor    BYTE PTR [rax],0x0
   14000b016:	add    BYTE PTR [rax-0x7ffffed0],al
   14000b01c:	rex.W add BYTE PTR [rax],al
   14000b01f:	adc    BYTE PTR [rax],0x0
   14000b022:	add    BYTE PTR [rax],al
   14000b024:	(bad)  
   14000b025:	add    BYTE PTR [rax],al
   14000b027:	sbb    BYTE PTR [rax],0x0
   14000b02a:	add    BYTE PTR [rax],al
   14000b02c:	js     0x14000b02e
   14000b02e:	add    BYTE PTR [rax+0x0],al
	...
   14000b03c:	add    BYTE PTR [rax],al
   14000b03e:	add    DWORD PTR [rax],eax
   14000b040:	add    DWORD PTR [rax],eax
   14000b042:	add    BYTE PTR [rax],al
   14000b044:	nop
   14000b045:	add    BYTE PTR [rax],al
   14000b047:	add    BYTE PTR [rax],0x0
	...
   14000b056:	add    DWORD PTR [rax],eax
   14000b058:	pop    rbp
   14000b059:	sbb    eax,DWORD PTR [rax]
   14000b05b:	add    BYTE PTR [rax+0x800000],ch
	...
   14000b06d:	add    BYTE PTR [rcx],al
   14000b06f:	add    BYTE PTR [rcx],al
   14000b071:	add    BYTE PTR [rax],al
   14000b073:	add    al,al
   14000b075:	add    BYTE PTR [rax],al
   14000b077:	add    BYTE PTR [rax],0x0
	...
   14000b086:	add    DWORD PTR [rax],eax
   14000b088:	add    DWORD PTR [rax],eax
   14000b08a:	add    BYTE PTR [rax],al
   14000b08c:	fadd   DWORD PTR [rax]
   14000b08e:	add    BYTE PTR [rax+0x0],al
	...
   14000b09c:	add    BYTE PTR [rax],al
   14000b09e:	add    DWORD PTR [rax],eax
   14000b0a0:	or     DWORD PTR [rax+rax*1],eax
   14000b0a3:	add    al,dh
	...
   14000b0b5:	add    BYTE PTR [rcx],al
   14000b0b7:	add    BYTE PTR [rcx],cl
   14000b0b9:	add    al,0x0
   14000b0bb:	add    BYTE PTR [rax],al
   14000b0bd:	add    DWORD PTR [rax],eax
	...
   14000b0cb:	add    BYTE PTR [rax],al
   14000b0cd:	add    BYTE PTR [rcx],al
   14000b0cf:	add    BYTE PTR [rcx],cl
   14000b0d1:	add    al,0x0
   14000b0d3:	add    BYTE PTR [rax],dl
   14000b0d5:	add    DWORD PTR [rax],eax
	...
   14000b0e3:	add    BYTE PTR [rax],al
   14000b0e5:	add    BYTE PTR [rcx],al
   14000b0e7:	add    BYTE PTR [rcx],cl
   14000b0e9:	add    al,0x0
   14000b0eb:	add    BYTE PTR [rax],ah
   14000b0ed:	add    DWORD PTR [rax],eax
   14000b0ef:	add    BYTE PTR [rax-0x3e],ah
   14000b0f2:	add    BYTE PTR [rax],al
   14000b0f4:	fadd   DWORD PTR [rax]
	...
   14000b0fe:	add    BYTE PTR [rax],al
   14000b100:	shl    BYTE PTR [rdi+0xa990000],0x0
	...
   14000b10f:	add    al,ah
   14000b111:	mov    bl,0x0
   14000b113:	add    al,ah
   14000b115:	add    eax,DWORD PTR [rax]
	...
   14000b11f:	add    BYTE PTR [rax-0x4f],dl
   14000b122:	add    BYTE PTR [rax],al
   14000b124:	pop    QWORD PTR [rdx]
	...
   14000b12e:	add    BYTE PTR [rax],al
   14000b130:	(bad)  
   14000b131:	add    BYTE PTR [rbp+0x0],dl
   14000b134:	rex.WB add BYTE PTR [r14+0x0],al
   14000b138:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   14000b13d:	add    BYTE PTR [rbx],al
   14000b13f:	add    BYTE PTR [rbp+0x0],cl
   14000b142:	push   rbp
   14000b143:	add    BYTE PTR [rcx+0x0],cl
	...
   14000b14e:	add    BYTE PTR [rax],al
   14000b150:	cmp    al,0x3f
   14000b152:	js     0x14000b1c1
   14000b154:	ins    BYTE PTR es:[rdi],dx
   14000b155:	and    BYTE PTR [rsi+0x65],dh
   14000b158:	jb     0x14000b1cd
   14000b15a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000b161:	xor    BYTE PTR [rdx],ah
   14000b163:	and    BYTE PTR [rbp+0x6e],ah
   14000b166:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000b169:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000b170:	rex.RX sub eax,0x73202238
   14000b176:	je     0x14000b1d9
   14000b178:	outs   dx,BYTE PTR ds:[rsi]
   14000b179:	fs (bad) 
   14000b17b:	ins    BYTE PTR es:[rdi],dx
   14000b17c:	outs   dx,DWORD PTR ds:[rsi]
   14000b17d:	outs   dx,BYTE PTR ds:[rsi]
   14000b17e:	gs cmp eax,0x73657922
   14000b184:	and    bh,BYTE PTR [rdi]
   14000b186:	ds or  eax,0x2d213c0a
   14000b18c:	sub    eax,0x706f4320
   14000b191:	jns    0x14000b205
   14000b193:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000b19a:	sub    DWORD PTR [rax],esp
   14000b19c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000b1a4:	je     0x14000b1c6
   14000b1a6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b1a8:	jb     0x14000b21a
   14000b1aa:	outs   dx,DWORD PTR ds:[rsi]
   14000b1ab:	jb     0x14000b20e
   14000b1ad:	je     0x14000b218
   14000b1af:	outs   dx,DWORD PTR ds:[rsi]
   14000b1b0:	outs   dx,BYTE PTR ds:[rsi]
   14000b1b1:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0defe4
   14000b1b7:	cmp    al,0x61
   14000b1b9:	jae    0x14000b22e
   14000b1bb:	gs ins DWORD PTR es:[rdi],dx
   14000b1bd:	(bad)  
   14000b1be:	ins    BYTE PTR es:[rdi],dx
   14000b1bf:	jns    0x14000b1e1
   14000b1c1:	js     0x14000b230
   14000b1c3:	ins    BYTE PTR es:[rdi],dx
   14000b1c4:	outs   dx,BYTE PTR ds:[rsi]
   14000b1c5:	jae    0x14000b204
   14000b1c7:	and    dh,BYTE PTR [rbp+0x72]
   14000b1ca:	outs   dx,BYTE PTR ds:[rsi]
   14000b1cb:	cmp    dh,BYTE PTR [rbx+0x63]
   14000b1ce:	push   0x73616d65
   14000b1d3:	sub    eax,0x7263696d
   14000b1d8:	outs   dx,DWORD PTR ds:[rsi]
   14000b1d9:	jae    0x14000b24a
   14000b1db:	data16 je 0x14000b20b
   14000b1de:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b1e1:	cmp    ah,BYTE PTR [rcx+0x73]
   14000b1e4:	ins    DWORD PTR es:[rdi],dx
   14000b1e5:	cs jbe 0x14000b219
   14000b1e8:	and    ah,BYTE PTR [rax]
   14000b1ea:	ins    DWORD PTR es:[rdi],dx
   14000b1eb:	(bad)  
   14000b1ec:	outs   dx,BYTE PTR ds:[rsi]
   14000b1ed:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000b1f4:	jb     0x14000b269
   14000b1f6:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000b1fd:	xor    BYTE PTR [rdx],ah
   14000b1ff:	ds or  eax,0x73613c0a
   14000b205:	jae    0x14000b26c
   14000b207:	ins    DWORD PTR es:[rdi],dx
   14000b208:	(bad)  
   14000b209:	ins    BYTE PTR es:[rdi],dx
   14000b20a:	jns    0x14000b255
   14000b20c:	fs outs dx,BYTE PTR gs:[rsi]
   14000b20f:	je     0x14000b27a
   14000b211:	je     0x14000b28c
   14000b213:	and    BYTE PTR [rip+0x7270090a],cl        # 0x1b270bb23
   14000b219:	outs   dx,DWORD PTR ds:[rsi]
   14000b21a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b21d:	jae    0x14000b28e
   14000b21f:	jb     0x14000b262
   14000b221:	jb     0x14000b286
   14000b223:	push   0x63657469
   14000b228:	je     0x14000b29f
   14000b22a:	jb     0x14000b291
   14000b22c:	cmp    eax,0x646d6122
   14000b231:	ss xor al,0x22
   14000b234:	or     eax,0x6576090a
   14000b239:	jb     0x14000b2ae
   14000b23b:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000b242:	xor    DWORD PTR [rsi],ebp
   14000b244:	xor    BYTE PTR [rsi],ch
   14000b246:	xor    BYTE PTR [rdx],ah
   14000b248:	and    BYTE PTR [rip+0x616e090a],cl        # 0x1a16ebb58
   14000b24e:	ins    DWORD PTR es:[rdi],dx
   14000b24f:	gs cmp eax,0x63694d22
   14000b255:	jb     0x14000b2c6
   14000b257:	jae    0x14000b2c8
   14000b259:	data16 je 0x14000b28a
   14000b25c:	push   rdi
   14000b25d:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000b264:	push   rbp
   14000b265:	jo     0x14000b2ce
   14000b267:	jb     0x14000b2ca
   14000b269:	fs gs push rdx
   14000b26c:	gs jae 0x14000b2e4
   14000b26f:	ins    BYTE PTR es:[rdi],dx
   14000b270:	je     0x14000b2e5
   14000b272:	push   rbp
   14000b273:	rex.WB and spl,BYTE PTR [r8]
   14000b276:	je     0x14000b2f1
   14000b278:	jo     0x14000b2df
   14000b27a:	cmp    eax,0x6e697722
   14000b27f:	xor    esi,DWORD PTR [rdx]
   14000b281:	and    ah,BYTE PTR [rax]
   14000b283:	(bad)  
   14000b284:	ds or  eax,0x65643c0a
   14000b28a:	jae    0x14000b2ef
   14000b28c:	jb     0x14000b2f7
   14000b28e:	jo     0x14000b304
   14000b290:	imul   ebp,DWORD PTR [rdi+0x6e],0x6770553e
   14000b297:	jb     0x14000b2fa
   14000b299:	fs and BYTE PTR gs:[rdx+0x65],dl
   14000b29e:	jae    0x14000b315
   14000b2a0:	ins    BYTE PTR es:[rdi],dx
   14000b2a1:	je     0x14000b316
   14000b2a3:	cmp    al,0x2f
   14000b2a5:	fs gs jae 0x14000b30c
   14000b2a9:	jb     0x14000b314
   14000b2ab:	jo     0x14000b321
   14000b2ad:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   14000b2b4:	je     0x14000b328
   14000b2b6:	jne    0x14000b32b
   14000b2b8:	je     0x14000b303
   14000b2ba:	outs   dx,BYTE PTR ds:[rsi]
   14000b2bb:	outs   dx,WORD PTR ds:[rsi]
   14000b2bd:	and    BYTE PTR [rax+0x6d],bh
   14000b2c0:	ins    BYTE PTR es:[rdi],dx
   14000b2c1:	outs   dx,BYTE PTR ds:[rsi]
   14000b2c2:	jae    0x14000b301
   14000b2c4:	and    dh,BYTE PTR [rbp+0x72]
   14000b2c7:	outs   dx,BYTE PTR ds:[rsi]
   14000b2c8:	cmp    dh,BYTE PTR [rbx+0x63]
   14000b2cb:	push   0x73616d65
   14000b2d0:	sub    eax,0x7263696d
   14000b2d5:	outs   dx,DWORD PTR ds:[rsi]
   14000b2d6:	jae    0x14000b347
   14000b2d8:	data16 je 0x14000b308
   14000b2db:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b2de:	cmp    ah,BYTE PTR [rcx+0x73]
   14000b2e1:	ins    DWORD PTR es:[rdi],dx
   14000b2e2:	cs jbe 0x14000b318
   14000b2e5:	and    bh,BYTE PTR [rsi]
   14000b2e7:	or     eax,0x2020200a
   14000b2ec:	and    BYTE PTR [rbx+rsi*2],bh
   14000b2ef:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000b2f3:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000b2fb:	and    BYTE PTR [rax],ah
   14000b2fd:	and    BYTE PTR [rax],ah
   14000b2ff:	and    BYTE PTR [rax],ah
   14000b301:	cmp    al,0x72
   14000b303:	gs jno 0x14000b37b
   14000b306:	gs jae 0x14000b37d
   14000b309:	gs fs push rax
   14000b30c:	jb     0x14000b377
   14000b30e:	jbe    0x14000b379
   14000b310:	ins    BYTE PTR es:[rdi],dx
   14000b311:	gs addr32 gs jae 0x14000b354
   14000b316:	or     eax,0x2020200a
   14000b31b:	and    BYTE PTR [rax],ah
   14000b31d:	and    BYTE PTR [rax],ah
   14000b31f:	and    BYTE PTR [rax],ah
   14000b321:	and    BYTE PTR [rax],ah
   14000b323:	and    BYTE PTR [rdx+rsi*2],bh
   14000b326:	gs jno 0x14000b39e
   14000b329:	gs jae 0x14000b3a0
   14000b32c:	gs fs rex.RB js 0x14000b396
   14000b331:	movsxd esi,DWORD PTR [rbp+0x74]
   14000b334:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000b33b:	ins    BYTE PTR es:[rdi],dx
   14000b33c:	or     eax,0x2020200a
   14000b341:	and    BYTE PTR [rax],ah
   14000b343:	and    BYTE PTR [rax],ah
   14000b345:	and    BYTE PTR [rax],ah
   14000b347:	and    BYTE PTR [rax],ah
   14000b349:	and    BYTE PTR [rax],ah
   14000b34b:	and    BYTE PTR [rax],ah
   14000b34d:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000b351:	gs ins BYTE PTR es:[rdi],dx
   14000b353:	cmp    eax,0x49736122
   14000b358:	outs   dx,BYTE PTR ds:[rsi]
   14000b359:	jbe    0x14000b3ca
   14000b35b:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000b35f:	or     eax,0x2020200a
   14000b364:	and    BYTE PTR [rax],ah
   14000b366:	and    BYTE PTR [rax],ah
   14000b368:	and    BYTE PTR [rax],ah
   14000b36a:	and    BYTE PTR [rax],ah
   14000b36c:	and    BYTE PTR [rax],ah
   14000b36e:	and    BYTE PTR [rax],ah
   14000b370:	and    BYTE PTR [rbp+0x69],dh
   14000b373:	movsxd esp,DWORD PTR [r11+0x65]
   14000b377:	jae    0x14000b3ec
   14000b379:	cmp    eax,0x6c616622
   14000b37e:	jae    0x14000b3e5
   14000b380:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020d390
   14000b386:	and    BYTE PTR [rax],ah
   14000b388:	and    BYTE PTR [rax],ah
   14000b38a:	and    BYTE PTR [rax],ah
   14000b38c:	and    BYTE PTR [rax],ah
   14000b38e:	and    BYTE PTR [rdi],ch
   14000b390:	ds or  eax,0x2020200a
   14000b396:	and    BYTE PTR [rax],ah
   14000b398:	and    BYTE PTR [rax],ah
   14000b39a:	and    BYTE PTR [rdi+rbp*1],bh
   14000b39d:	jb     0x14000b404
   14000b39f:	jno    0x14000b416
   14000b3a1:	gs jae 0x14000b418
   14000b3a4:	gs fs push rax
   14000b3a7:	jb     0x14000b412
   14000b3a9:	jbe    0x14000b414
   14000b3ab:	ins    BYTE PTR es:[rdi],dx
   14000b3ac:	gs addr32 gs jae 0x14000b3ef
   14000b3b1:	or     eax,0x2020200a
   14000b3b6:	and    BYTE PTR [rdi+rbp*1],bh
   14000b3b9:	jae    0x14000b420
   14000b3bb:	movsxd esi,DWORD PTR [rbp+0x72]
   14000b3be:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000b3c6:	je     0x14000b43a
   14000b3c8:	jne    0x14000b43d
   14000b3ca:	je     0x14000b415
   14000b3cc:	outs   dx,BYTE PTR ds:[rsi]
   14000b3cd:	outs   dx,WORD PTR ds:[rsi]
   14000b3cf:	ds or  eax,0x612f3c0a
   14000b3d5:	jae    0x14000b44a
   14000b3d7:	gs ins DWORD PTR es:[rdi],dx
   14000b3d9:	(bad)  
   14000b3da:	ins    BYTE PTR es:[rdi],dx
   14000b3db:	jns    0x14000b41b
   14000b3dd:	or     eax,0x3e0000a
   14000b3e2:	xor    al,0x0
   14000b3e4:	add    BYTE PTR [rax],al
   14000b3e6:	push   rsi
   14000b3e7:	add    BYTE PTR [rbx+0x0],dl
   14000b3ea:	pop    rdi
   14000b3eb:	add    BYTE PTR [rsi+0x0],dl
   14000b3ee:	add    BYTE PTR [r10+0x0],r10b
   14000b3f2:	push   rbx
   14000b3f3:	add    BYTE PTR [rcx+0x0],cl
   14000b3f6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000b3fa:	pop    rdi
   14000b3fb:	add    BYTE PTR [rcx+0x0],cl
   14000b3fe:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000b402:	rex.WRXB add BYTE PTR [r8],r8b
   14000b405:	add    BYTE PTR [rax],al
   14000b407:	add    BYTE PTR [rbp+0xfeef04],bh
   14000b40d:	add    BYTE PTR [rcx],al
   14000b40f:	add    BYTE PTR [rax],al
   14000b411:	add    BYTE PTR [rdx],cl
   14000b413:	add    BYTE PTR [rax],al
   14000b415:	add    BYTE PTR [rax],bpl
   14000b418:	add    BYTE PTR [rax],al
   14000b41a:	or     al,BYTE PTR [rax]
   14000b41c:	add    BYTE PTR [rax+0x0],al
   14000b41f:	sub    BYTE PTR [rdi],bh
   14000b421:	add    BYTE PTR [rax],al
   14000b423:	add    BYTE PTR [rax],al
   14000b425:	add    BYTE PTR [rax],al
   14000b427:	add    BYTE PTR [rax+rax*1],al
   14000b42a:	add    al,0x0
   14000b42c:	add    DWORD PTR [rax],eax
	...
   14000b43a:	add    BYTE PTR [rax],al
   14000b43c:	add    eax,DWORD PTR ds:[rax]
   14000b43f:	add    BYTE PTR [rcx],al
   14000b441:	add    BYTE PTR [rbx+0x0],dl
   14000b444:	je     0x14000b446
   14000b446:	jb     0x14000b448
   14000b448:	imul   eax,DWORD PTR [rax],0x67006e
   14000b44e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b452:	ins    BYTE PTR es:[rdi],dx
   14000b453:	add    BYTE PTR [rbp+0x0],ah
   14000b456:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b45a:	data16 add BYTE PTR [rdi+0x0],ch
   14000b45e:	add    BYTE PTR [rax],al
   14000b460:	sbb    al,BYTE PTR [rbx]
   14000b462:	add    BYTE PTR [rax],al
   14000b464:	add    DWORD PTR [rax],eax
   14000b466:	xor    BYTE PTR [rax],al
   14000b468:	xor    al,0x0
   14000b46a:	xor    BYTE PTR [rax],al
   14000b46c:	cmp    DWORD PTR [rax],eax
   14000b46e:	xor    BYTE PTR [rax],al
   14000b470:	xor    al,0x0
   14000b472:	rex.X add BYTE PTR [rax],sil
   14000b475:	add    BYTE PTR [rax],al
   14000b477:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000b47b:	add    BYTE PTR [rcx],al
   14000b47d:	add    BYTE PTR [rbx+0x0],al
   14000b480:	outs   dx,DWORD PTR ds:[rsi]
   14000b481:	add    BYTE PTR [rbp+0x0],ch
   14000b484:	jo     0x14000b486
   14000b486:	(bad)  
   14000b487:	add    BYTE PTR [rsi+0x0],ch
   14000b48a:	jns    0x14000b48c
   14000b48c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000b490:	ins    DWORD PTR es:[rdi],dx
   14000b491:	add    BYTE PTR [rbp+0x0],ah
   14000b494:	add    BYTE PTR [rax],al
   14000b496:	add    BYTE PTR [rax],al
   14000b498:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000b49c:	movsxd eax,DWORD PTR [rax]
   14000b49e:	jb     0x14000b4a0
   14000b4a0:	outs   dx,DWORD PTR ds:[rsi]
   14000b4a1:	add    BYTE PTR [rbx+0x0],dh
   14000b4a4:	outs   dx,DWORD PTR ds:[rsi]
   14000b4a5:	add    BYTE PTR [rsi+0x0],ah
   14000b4a8:	je     0x14000b4aa
   14000b4aa:	and    BYTE PTR [rax],al
   14000b4ac:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b4b0:	jb     0x14000b4b2
   14000b4b2:	jo     0x14000b4b4
   14000b4b4:	outs   dx,DWORD PTR ds:[rsi]
   14000b4b5:	add    BYTE PTR [rdx+0x0],dh
   14000b4b8:	(bad)  
   14000b4b9:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b4bd:	add    BYTE PTR [rdi+0x0],ch
   14000b4c0:	outs   dx,BYTE PTR ds:[rsi]
   14000b4c1:	add    BYTE PTR [rax],al
   14000b4c3:	add    BYTE PTR [rax+0x0],ch
   14000b4c6:	and    BYTE PTR [rax],al
   14000b4c8:	add    DWORD PTR [rax],eax
   14000b4ca:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b4ce:	ins    BYTE PTR es:[rdi],dx
   14000b4cf:	add    BYTE PTR [rbp+0x0],ah
   14000b4d2:	add    BYTE PTR [rbp+0x0],r12b
   14000b4d6:	jae    0x14000b4d8
   14000b4d8:	movsxd eax,DWORD PTR [rax]
   14000b4da:	jb     0x14000b4dc
   14000b4dc:	imul   eax,DWORD PTR [rax],0x740070
   14000b4e2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b4e8:	add    BYTE PTR [rax],al
   14000b4ea:	add    BYTE PTR [rax],al
   14000b4ec:	add    BYTE PTR [r8+rax*1+0x64],spl
   14000b4f1:	add    BYTE PTR [rax],ah
   14000b4f3:	add    BYTE PTR [rsi+0x0],ah
   14000b4f6:	add    BYTE PTR gs:[rcx+0x0],ah
   14000b4fa:	je     0x14000b4fc
   14000b4fc:	jne    0x14000b4fe
   14000b4fe:	jb     0x14000b500
   14000b500:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b504:	and    BYTE PTR [rax],al
   14000b506:	je     0x14000b508
   14000b508:	outs   dx,DWORD PTR ds:[rsi]
   14000b509:	add    BYTE PTR [rax],ah
   14000b50b:	add    BYTE PTR [rdi+0x0],dl
   14000b50e:	imul   eax,DWORD PTR [rax],0x64006e
   14000b514:	outs   dx,DWORD PTR ds:[rsi]
   14000b515:	add    BYTE PTR [rdi+0x0],dh
   14000b518:	jae    0x14000b51a
   14000b51a:	and    BYTE PTR [rax],al
   14000b51c:	push   rdx
   14000b51d:	add    BYTE PTR [rbp+0x0],ah
   14000b520:	jae    0x14000b522
   14000b522:	jne    0x14000b524
   14000b524:	ins    BYTE PTR es:[rdi],dx
   14000b525:	add    BYTE PTR [rax+rax*1+0x73],dh
   14000b529:	add    BYTE PTR [rax],al
   14000b52b:	add    BYTE PTR [rsi+0x0],ah
   14000b52e:	and    eax,DWORD PTR [rax]
   14000b530:	add    DWORD PTR [rax],eax
   14000b532:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b536:	ins    BYTE PTR es:[rdi],dx
   14000b537:	add    BYTE PTR [rbp+0x0],ah
   14000b53a:	push   rsi
   14000b53b:	add    BYTE PTR [rbp+0x0],ah
   14000b53e:	jb     0x14000b540
   14000b540:	jae    0x14000b542
   14000b542:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b548:	add    BYTE PTR [rax],al
   14000b54a:	add    BYTE PTR [rax],al
   14000b54c:	xor    DWORD PTR [rax],eax
   14000b54e:	xor    BYTE PTR [rax],al
   14000b550:	add    BYTE PTR cs:[rax],dh
   14000b553:	add    BYTE PTR [rsi],ch
   14000b555:	add    BYTE PTR [rcx],dh
   14000b557:	add    BYTE PTR [rax],dh
   14000b559:	add    BYTE PTR [rdx],dh
   14000b55b:	add    BYTE PTR [rax+rax*1],dh
   14000b55e:	xor    BYTE PTR [rax],al
   14000b560:	add    BYTE PTR cs:[rcx],dh
   14000b563:	add    BYTE PTR [rsi],dh
   14000b565:	add    BYTE PTR [rbx],dh
   14000b567:	add    BYTE PTR [rax],bh
   14000b569:	add    BYTE PTR [rax+rax*1],dh
   14000b56c:	and    BYTE PTR [rax],al
   14000b56e:	sub    BYTE PTR [rax],al
   14000b570:	je     0x14000b572
   14000b572:	push   0x2e003100
   14000b577:	add    BYTE PTR [rcx],dh
   14000b579:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700e57f
   14000b57f:	add    BYTE PTR [rax],dh
   14000b581:	add    BYTE PTR [rcx],bh
   14000b583:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700e689
   14000b589:	add    BYTE PTR [rax],dh
   14000b58b:	add    BYTE PTR [rax],dh
   14000b58d:	add    BYTE PTR [rcx],ch
   14000b58f:	add    BYTE PTR [rax],al
   14000b591:	add    BYTE PTR [rax],al
   14000b593:	add    BYTE PTR [rax+0x0],ah
   14000b596:	and    BYTE PTR [rax],al
   14000b598:	add    DWORD PTR [rax],eax
   14000b59a:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b59e:	je     0x14000b5a0
   14000b5a0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b5a4:	outs   dx,BYTE PTR ds:[rsi]
   14000b5a5:	add    BYTE PTR [rcx+0x0],ah
   14000b5a8:	ins    BYTE PTR es:[rdi],dx
   14000b5a9:	add    BYTE PTR [rsi+0x0],cl
   14000b5ac:	(bad)  
   14000b5ad:	add    BYTE PTR [rbp+0x0],ch
   14000b5b0:	add    BYTE PTR gs:[rax],al
   14000b5b3:	add    BYTE PTR [rcx+0x0],al
   14000b5b6:	add    BYTE PTR fs:[rax+rax*1+0x20],ah
   14000b5bb:	add    BYTE PTR [rsi+0x0],ah
   14000b5be:	add    BYTE PTR gs:[rcx+0x0],ah
   14000b5c2:	je     0x14000b5c4
   14000b5c4:	jne    0x14000b5c6
   14000b5c6:	jb     0x14000b5c8
   14000b5c8:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b5cc:	and    BYTE PTR [rax],al
   14000b5ce:	je     0x14000b5d0
   14000b5d0:	outs   dx,DWORD PTR ds:[rsi]
   14000b5d1:	add    BYTE PTR [rax],ah
   14000b5d3:	add    BYTE PTR [rdi+0x0],dl
   14000b5d6:	imul   eax,DWORD PTR [rax],0x64006e
   14000b5dc:	outs   dx,DWORD PTR ds:[rsi]
   14000b5dd:	add    BYTE PTR [rdi+0x0],dh
   14000b5e0:	jae    0x14000b5e2
   14000b5e2:	and    BYTE PTR [rax],al
   14000b5e4:	push   rdx
   14000b5e5:	add    BYTE PTR [rbp+0x0],ah
   14000b5e8:	jae    0x14000b5ea
   14000b5ea:	jne    0x14000b5ec
   14000b5ec:	ins    BYTE PTR es:[rdi],dx
   14000b5ed:	add    BYTE PTR [rax+rax*1+0x73],dh
   14000b5f1:	add    BYTE PTR [rax],al
   14000b5f3:	add    BYTE PTR [rax+0x1002e00],al
   14000b5f9:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000b5fd:	add    BYTE PTR [rdi+0x0],ah
   14000b600:	(bad)  
   14000b601:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000b605:	add    BYTE PTR [rdi+0x0],ch
   14000b608:	jo     0x14000b60a
   14000b60a:	jns    0x14000b60c
   14000b60c:	jb     0x14000b60e
   14000b60e:	imul   eax,DWORD PTR [rax],0x680067
   14000b614:	je     0x14000b616
   14000b616:	add    BYTE PTR [rax],al
   14000b618:	test   eax,0x4d002000
   14000b61d:	add    BYTE PTR [rcx+0x0],ch
   14000b620:	movsxd eax,DWORD PTR [rax]
   14000b622:	jb     0x14000b624
   14000b624:	outs   dx,DWORD PTR ds:[rsi]
   14000b625:	add    BYTE PTR [rbx+0x0],dh
   14000b628:	outs   dx,DWORD PTR ds:[rsi]
   14000b629:	add    BYTE PTR [rsi+0x0],ah
   14000b62c:	je     0x14000b62e
   14000b62e:	and    BYTE PTR [rax],al
   14000b630:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b634:	jb     0x14000b636
   14000b636:	jo     0x14000b638
   14000b638:	outs   dx,DWORD PTR ds:[rsi]
   14000b639:	add    BYTE PTR [rdx+0x0],dh
   14000b63c:	(bad)  
   14000b63d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b641:	add    BYTE PTR [rdi+0x0],ch
   14000b644:	outs   dx,BYTE PTR ds:[rsi]
   14000b645:	add    BYTE PTR [rsi],ch
   14000b647:	add    BYTE PTR [rax],ah
   14000b649:	add    BYTE PTR [rcx+0x0],al
   14000b64c:	ins    BYTE PTR es:[rdi],dx
   14000b64d:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000b651:	add    BYTE PTR [rdx+0x0],dh
   14000b654:	imul   eax,DWORD PTR [rax],0x680067
   14000b65a:	je     0x14000b65c
   14000b65c:	jae    0x14000b65e
   14000b65e:	and    BYTE PTR [rax],al
   14000b660:	jb     0x14000b662
   14000b662:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b666:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b66a:	jbe    0x14000b66c
   14000b66c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000b671:	add    BYTE PTR [rax],al
   14000b673:	add    BYTE PTR [rdx+0x0],dl
   14000b676:	adc    eax,0x4f000100
   14000b67b:	add    BYTE PTR [rdx+0x0],dh
   14000b67e:	imul   eax,DWORD PTR [rax],0x690067
   14000b684:	outs   dx,BYTE PTR ds:[rsi]
   14000b685:	add    BYTE PTR [rcx+0x0],ah
   14000b688:	ins    BYTE PTR es:[rdi],dx
   14000b689:	add    BYTE PTR [rsi+0x0],al
   14000b68c:	imul   eax,DWORD PTR [rax],0x65006c
   14000b692:	outs   dx,BYTE PTR ds:[rsi]
   14000b693:	add    BYTE PTR [rcx+0x0],ah
   14000b696:	ins    DWORD PTR es:[rdi],dx
   14000b697:	add    BYTE PTR [rbp+0x0],ah
   14000b69a:	add    BYTE PTR [rax],al
   14000b69c:	push   rbp
   14000b69d:	add    BYTE PTR [rax+0x0],dh
   14000b6a0:	add    BYTE PTR [edx+0x0],dh
   14000b6a4:	(bad)  
   14000b6a5:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000b6a9:	add    BYTE PTR [rdx+0x0],dl
   14000b6ac:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b6b0:	jne    0x14000b6b2
   14000b6b2:	ins    BYTE PTR es:[rdi],dx
   14000b6b3:	add    BYTE PTR [rax+rax*1+0x73],dh
   14000b6b7:	add    BYTE PTR [rbp+0x0],dl
   14000b6ba:	rex.WB add BYTE PTR [r14],bpl
   14000b6bd:	add    BYTE PTR [rbp+0x0],ah
   14000b6c0:	js     0x14000b6c2
   14000b6c2:	add    BYTE PTR gs:[rax],al
   14000b6c5:	add    BYTE PTR [rax],al
   14000b6c7:	add    BYTE PTR [rdx+0x0],ch
   14000b6ca:	and    eax,0x50000100
   14000b6cf:	add    BYTE PTR [rdx+0x0],dh
   14000b6d2:	outs   dx,DWORD PTR ds:[rsi]
   14000b6d3:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000b6d7:	add    BYTE PTR [rbx+0x0],ah
   14000b6da:	je     0x14000b6dc
   14000b6dc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000b6e0:	ins    DWORD PTR es:[rdi],dx
   14000b6e1:	add    BYTE PTR [rbp+0x0],ah
   14000b6e4:	add    BYTE PTR [rax],al
   14000b6e6:	add    BYTE PTR [rax],al
   14000b6e8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000b6ec:	movsxd eax,DWORD PTR [rax]
   14000b6ee:	jb     0x14000b6f0
   14000b6f0:	outs   dx,DWORD PTR ds:[rsi]
   14000b6f1:	add    BYTE PTR [rbx+0x0],dh
   14000b6f4:	outs   dx,DWORD PTR ds:[rsi]
   14000b6f5:	add    BYTE PTR [rsi+0x0],ah
   14000b6f8:	je     0x14000b6fa
   14000b6fa:	scas   al,BYTE PTR es:[rdi]
   14000b6fb:	add    BYTE PTR [rax],ah
   14000b6fd:	add    BYTE PTR [rdi+0x0],dl
   14000b700:	imul   eax,DWORD PTR [rax],0x64006e
   14000b706:	outs   dx,DWORD PTR ds:[rsi]
   14000b707:	add    BYTE PTR [rdi+0x0],dh
   14000b70a:	jae    0x14000b70c
   14000b70c:	scas   al,BYTE PTR es:[rdi]
   14000b70d:	add    BYTE PTR [rax],ah
   14000b70f:	add    BYTE PTR [rdi+0x0],cl
   14000b712:	jo     0x14000b714
   14000b714:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b718:	(bad)  
   14000b719:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b71d:	add    BYTE PTR [rsi+0x0],ch
   14000b720:	add    BYTE PTR [eax],ah
   14000b723:	add    BYTE PTR [rbx+0x0],dl
   14000b726:	jns    0x14000b728
   14000b728:	jae    0x14000b72a
   14000b72a:	je     0x14000b72c
   14000b72c:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b730:	add    BYTE PTR [rax],al
   14000b732:	add    BYTE PTR [rax],al
   14000b734:	rex.RX add BYTE PTR [rcx],r10b
   14000b737:	add    BYTE PTR [rcx],al
   14000b739:	add    BYTE PTR [rax+0x0],dl
   14000b73c:	jb     0x14000b73e
   14000b73e:	outs   dx,DWORD PTR ds:[rsi]
   14000b73f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000b743:	add    BYTE PTR [rbx+0x0],ah
   14000b746:	je     0x14000b748
   14000b748:	push   rsi
   14000b749:	add    BYTE PTR [rbp+0x0],ah
   14000b74c:	jb     0x14000b74e
   14000b74e:	jae    0x14000b750
   14000b750:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b756:	add    BYTE PTR [rax],al
   14000b758:	xor    DWORD PTR [rax],eax
   14000b75a:	xor    BYTE PTR [rax],al
   14000b75c:	add    BYTE PTR cs:[rax],dh
   14000b75f:	add    BYTE PTR [rsi],ch
   14000b761:	add    BYTE PTR [rcx],dh
   14000b763:	add    BYTE PTR [rax],dh
   14000b765:	add    BYTE PTR [rdx],dh
   14000b767:	add    BYTE PTR [rax+rax*1],dh
   14000b76a:	xor    BYTE PTR [rax],al
   14000b76c:	add    BYTE PTR cs:[rcx],dh
   14000b76f:	add    BYTE PTR [rsi],dh
   14000b771:	add    BYTE PTR [rbx],dh
   14000b773:	add    BYTE PTR [rax],bh
   14000b775:	add    BYTE PTR [rax+rax*1],dh
   14000b778:	add    BYTE PTR [rax],al
   14000b77a:	add    BYTE PTR [rax],al
   14000b77c:	add    BYTE PTR [rax],r8b
   14000b77f:	add    BYTE PTR [rcx],al
   14000b781:	add    BYTE PTR [rsi+0x0],dl
   14000b784:	(bad)  
   14000b785:	add    BYTE PTR [rdx+0x0],dh
   14000b788:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b78c:	ins    BYTE PTR es:[rdi],dx
   14000b78d:	add    BYTE PTR [rbp+0x0],ah
   14000b790:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b794:	data16 add BYTE PTR [rdi+0x0],ch
   14000b798:	add    BYTE PTR [rax],al
   14000b79a:	add    BYTE PTR [rax],al
   14000b79c:	and    al,0x0
   14000b79e:	add    al,0x0
   14000b7a0:	add    BYTE PTR [rax],al
   14000b7a2:	push   rsp
   14000b7a3:	add    BYTE PTR [rdx+0x0],dh
   14000b7a6:	(bad)  
   14000b7a7:	add    BYTE PTR [rsi+0x0],ch
   14000b7aa:	jae    0x14000b7ac
   14000b7ac:	ins    BYTE PTR es:[rdi],dx
   14000b7ad:	add    BYTE PTR [rcx+0x0],ah
   14000b7b0:	je     0x14000b7b2
   14000b7b2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b7b8:	add    BYTE PTR [rax],al
   14000b7ba:	add    BYTE PTR [rax],al
   14000b7bc:	or     DWORD PTR [rax+rsi*4],eax
   14000b7bf:	add    al,0x3c
   14000b7c1:	fs jne 0x14000b82d
   14000b7c4:	js     0x14000b833
   14000b7c6:	ins    BYTE PTR es:[rdi],dx
   14000b7c7:	ds or  eax,0x733c0a0d
   14000b7cd:	je     0x14000b848
   14000b7cf:	ins    BYTE PTR es:[rdi],dx
   14000b7d0:	gs jae 0x14000b83b
   14000b7d3:	gs gs je 0x14000b84a
   14000b7d7:	ds or  eax,0x733c0a0d
   14000b7dd:	je     0x14000b858
   14000b7df:	ins    BYTE PTR es:[rdi],dx
   14000b7e0:	and    BYTE PTR gs:[rdx+0x65],dh
   14000b7e4:	jae    0x14000b84f
   14000b7e6:	fs cmp eax,0x4c575022
   14000b7ec:	pop    rdi
   14000b7ed:	jae    0x14000b863
   14000b7ef:	jns    0x14000b85d
   14000b7f1:	and    ah,BYTE PTR gs:[rax]
   14000b7f4:	(bad)  
   14000b7f6:	jae    0x14000b85d
   14000b7f8:	cmp    eax,0x73657222
   14000b7fd:	jae    0x14000b867
   14000b7ff:	gs gs je 0x14000b82b
   14000b803:	rex.WB ins DWORD PTR es:[rdi],dx
   14000b805:	ins    DWORD PTR es:[rdi],dx
   14000b806:	gs jb  0x14000b87c
   14000b809:	imul   esi,DWORD PTR [rsi+0x65],0x6c797453
   14000b810:	gs jae 0x14000b83f
   14000b813:	and    BYTE PTR [rcx+rbp*2+0x62],ch
   14000b817:	jb     0x14000b87a
   14000b819:	jb     0x14000b894
   14000b81b:	sub    BYTE PTR [rbp+rsi*2+0x69],ah
   14000b81f:	(bad)  
   14000b820:	xor    BYTE PTR [rsi],ch
   14000b822:	fs ins BYTE PTR es:[rdi],dx
   14000b824:	ins    BYTE PTR es:[rdi],dx
   14000b825:	sub    DWORD PTR [rax+riz*1],ebp
   14000b828:	fs (bad) 
   14000b82a:	jb     0x14000b897
   14000b82c:	sub    DWORD PTR [rdx],esp
   14000b82e:	ds or  eax,0x693c0a0d
   14000b834:	data16 and BYTE PTR [rbx+0x6c],ah
   14000b838:	(bad)  
   14000b839:	jae    0x14000b8ae
   14000b83b:	cmp    eax,0x726f6e22
   14000b840:	ins    DWORD PTR es:[rdi],dx
   14000b841:	pop    rdi
   14000b842:	je     0x14000b8a9
   14000b844:	js     0x14000b8ba
   14000b846:	and    bh,BYTE PTR [rsi]
   14000b848:	or     eax,0x523c0a0d
   14000b84d:	imul   esp,DWORD PTR [rbx+0x68],0x74786554
   14000b854:	or     eax,0x6f630a0d
   14000b859:	outs   dx,BYTE PTR ds:[rsi]
   14000b85a:	je     0x14000b8c1
   14000b85c:	outs   dx,BYTE PTR ds:[rsi]
   14000b85d:	je     0x14000b8c0
   14000b85f:	ins    BYTE PTR es:[rdi],dx
   14000b860:	imul   esp,DWORD PTR [rdi+0x6e],0x6f74223d
   14000b867:	jo     0x14000b8d5
   14000b869:	gs data16 je 0x14000b88d
   14000b86d:	jl     0x14000b88f
   14000b86f:	ja     0x14000b8e3
   14000b871:	(bad)  
   14000b872:	jo     0x14000b8e0
   14000b874:	gs data16 je 0x14000b89a
   14000b878:	or     eax,0x63610a0d
   14000b87d:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b880:	jae    0x14000b8eb
   14000b882:	(bad)  
   14000b883:	ins    BYTE PTR es:[rdi],dx
   14000b884:	gs cmp eax,0x75727422
   14000b88a:	and    cl,BYTE PTR gs:[rip+0x63610a0d]        # 0x1a361c29e
   14000b891:	movsxd edx,DWORD PTR [rdx+0x6f]
   14000b894:	ins    BYTE PTR es:[rdi],dx
   14000b895:	gs cmp eax,0x61747322
   14000b89b:	je     0x14000b906
   14000b89d:	movsxd esi,DWORD PTR [rbp+riz*2+0x78]
   14000b8a1:	je     0x14000b8c5
   14000b8a3:	or     eax,0x3e2f0a0d
   14000b8a8:	or     eax,0x2f3c0a0d
   14000b8ad:	imul   esp,DWORD PTR [rsi+0x3e],0x3c0a0d0d
   14000b8b4:	imul   esp,DWORD PTR [rsi+0x20],0x73616c63
   14000b8bb:	jae    0x14000b8fa
   14000b8bd:	and    dh,BYTE PTR [rax+0x77]
   14000b8c0:	ins    BYTE PTR es:[rdi],dx
   14000b8c1:	pop    rdi
   14000b8c2:	jo     0x14000b936
   14000b8c4:	imul   esp,DWORD PTR [rbx+0x65],0xd0d3e22
   14000b8cb:	or     bh,BYTE PTR [rdx+rdx*2]
   14000b8ce:	imul   esp,DWORD PTR [rbx+0x68],0x74786554
   14000b8d5:	or     eax,0x6f630a0d
   14000b8da:	outs   dx,BYTE PTR ds:[rsi]
   14000b8db:	je     0x14000b942
   14000b8dd:	outs   dx,BYTE PTR ds:[rsi]
   14000b8de:	je     0x14000b941
   14000b8e0:	ins    BYTE PTR es:[rdi],dx
   14000b8e1:	imul   esp,DWORD PTR [rdi+0x6e],0x6f74223d
   14000b8e8:	jo     0x14000b956
   14000b8ea:	gs data16 je 0x14000b90e
   14000b8ee:	jl     0x14000b910
   14000b8f0:	ja     0x14000b964
   14000b8f2:	(bad)  
   14000b8f3:	jo     0x14000b961
   14000b8f5:	gs data16 je 0x14000b91b
   14000b8f9:	or     eax,0x63610a0d
   14000b8fe:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b901:	jae    0x14000b96c
   14000b903:	(bad)  
   14000b904:	ins    BYTE PTR es:[rdi],dx
   14000b905:	gs cmp eax,0x75727422
   14000b90b:	and    cl,BYTE PTR gs:[rip+0x63610a0d]        # 0x1a361c31f
   14000b912:	movsxd edx,DWORD PTR [rdx+0x6f]
   14000b915:	ins    BYTE PTR es:[rdi],dx
   14000b916:	gs cmp eax,0x61747322
   14000b91c:	je     0x14000b987
   14000b91e:	movsxd esi,DWORD PTR [rbp+riz*2+0x78]
   14000b922:	je     0x14000b946
   14000b924:	(bad)  
   14000b925:	ds or  eax,0x2f3c0a0d
   14000b92b:	imul   esp,DWORD PTR [rsi+0x3e],0x3c0a0d0d
   14000b932:	imul   esp,DWORD PTR [rsi+0x20],0x73616c63
   14000b939:	jae    0x14000b978
   14000b93b:	and    dh,BYTE PTR [rax+0x77]
   14000b93e:	ins    BYTE PTR es:[rdi],dx
   14000b93f:	pop    rdi
   14000b940:	rex.XB push 0x426b6365
   14000b946:	outs   dx,DWORD PTR ds:[rsi]
   14000b947:	js     0x14000b96b
   14000b949:	ds or  eax,0x743c0a0d
   14000b94f:	outs   dx,DWORD PTR ds:[rsi]
   14000b950:	jne    0x14000b9b5
   14000b952:	push   0x63656863
   14000b957:	imul   esp,DWORD PTR [rdx+0x6f],0x78
   14000b95b:	or     eax,0x6f630a0d
   14000b960:	outs   dx,BYTE PTR ds:[rsi]
   14000b961:	je     0x14000b9c8
   14000b963:	outs   dx,BYTE PTR ds:[rsi]
   14000b964:	je     0x14000b9c7
   14000b966:	ins    BYTE PTR es:[rdi],dx
   14000b967:	imul   esp,DWORD PTR [rdi+0x6e],0x6f74223d
   14000b96e:	jo     0x14000b9dc
   14000b970:	gs data16 je 0x14000b994
   14000b974:	jl     0x14000b996
   14000b976:	ja     0x14000b9ea
   14000b978:	(bad)  
   14000b979:	jo     0x14000b9e7
   14000b97b:	gs data16 je 0x14000b9a1
   14000b97f:	or     eax,0x6f540a0d
   14000b984:	addr32 ins BYTE PTR es:[edi],dx
   14000b987:	rex.WRXB outs dx,BYTE PTR gs:[rsi]
   14000b98a:	rex.XB ins BYTE PTR es:[rdi],dx
   14000b98c:	imul   esp,DWORD PTR [rbx+0x6b],0x7274223d
   14000b993:	jne    0x14000b9fa
   14000b995:	and    cl,BYTE PTR [rip+0x63610a0d]        # 0x1a361c3a8
   14000b99b:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b99e:	jae    0x14000ba09
   14000b9a0:	(bad)  
   14000b9a1:	ins    BYTE PTR es:[rdi],dx
   14000b9a2:	gs cmp eax,0x75727422
   14000b9a8:	and    cl,BYTE PTR gs:[rip+0x6f660a0d]        # 0x1af66c3bc
   14000b9af:	jb     0x14000ba16
   14000b9b1:	addr32 jb 0x14000ba23
   14000b9b4:	jne    0x14000ba24
   14000b9b6:	fs cmp eax,0x6d6d4922
   14000b9bc:	gs jb  0x14000ba32
   14000b9bf:	imul   esi,DWORD PTR [rsi+0x65],0x75746153
   14000b9c6:	jb     0x14000ba29
   14000b9c8:	je     0x14000ba2f
   14000b9ca:	fs push rax
   14000b9cc:	jb     0x14000ba37
   14000b9ce:	ins    DWORD PTR es:[rdi],dx
   14000b9cf:	(bad)  
   14000b9d0:	jb     0x14000ba4b
   14000b9d2:	push   rsp
   14000b9d3:	gs js  0x14000ba4a
   14000b9d6:	and    cl,BYTE PTR [rip+0x63610a0d]        # 0x1a361c3e9
   14000b9dc:	movsxd esi,DWORD PTR [rdx+0x6f]
   14000b9df:	ins    BYTE PTR es:[rdi],dx
   14000b9e0:	gs cmp eax,0x65686322
   14000b9e6:	movsxd ebp,DWORD PTR [rbx+0x62]
   14000b9e9:	jne    0x14000ba5f
   14000b9eb:	je     0x14000ba5c
   14000b9ed:	outs   dx,BYTE PTR ds:[rsi]
   14000b9ee:	and    ch,BYTE PTR [rdi]
   14000b9f0:	ds or  eax,0x2f3c0a0d
   14000b9f6:	imul   esp,DWORD PTR [rsi+0x3e],0x3c0a0d0d
   14000b9fd:	imul   esp,DWORD PTR [rsi+0x20],0x73616c63
   14000ba04:	jae    0x14000ba43
   14000ba06:	and    dh,BYTE PTR [rax+0x77]
   14000ba09:	ins    BYTE PTR es:[rdi],dx
   14000ba0a:	pop    rdi
   14000ba0b:	jo     0x14000ba7f
   14000ba0d:	outs   dx,DWORD PTR ds:[rsi]
   14000ba0e:	addr32 jb 0x14000ba76
   14000ba11:	jae    0x14000ba86
   14000ba13:	pop    rdi
   14000ba14:	jb     0x14000ba7f
   14000ba16:	outs   dx,BYTE PTR ds:[rsi]
   14000ba17:	and    ah,BYTE PTR [eax]
   14000ba1a:	ds or  eax,0x4d3c0a0d
   14000ba20:	outs   dx,DWORD PTR ds:[rsi]
   14000ba21:	fs gs jb 0x14000ba93
   14000ba25:	push   rax
   14000ba26:	jb     0x14000ba97
   14000ba28:	addr32 jb 0x14000ba90
   14000ba2b:	jae    0x14000baa0
   14000ba2d:	push   rdx
   14000ba2e:	imul   ebp,DWORD PTR [rsi+0x67],0x770a0d0d
   14000ba35:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x3032223d
   14000ba3d:	jb     0x14000baaf
   14000ba3f:	and    cl,BYTE PTR [rip+0x65680a0d]        # 0x1a568c452
   14000ba45:	imul   esp,DWORD PTR [rdi+0x68],0x32223d74
   14000ba4c:	xor    BYTE PTR [rdx+0x70],dh
   14000ba4f:	and    cl,BYTE PTR [rip+0x6f660a0d]        # 0x1af66c462
   14000ba55:	jb     0x14000babc
   14000ba57:	addr32 jb 0x14000bac9
   14000ba5a:	jne    0x14000baca
   14000ba5c:	fs cmp eax,0x6d6d4922
   14000ba62:	gs jb  0x14000bad8
   14000ba65:	imul   esi,DWORD PTR [rsi+0x65],0x75746153
   14000ba6c:	jb     0x14000bacf
   14000ba6e:	je     0x14000bad5
   14000ba70:	fs push rax
   14000ba72:	jb     0x14000badd
   14000ba74:	ins    DWORD PTR es:[rdi],dx
   14000ba75:	(bad)  
   14000ba76:	jb     0x14000baf1
   14000ba78:	push   rsp
   14000ba79:	gs js  0x14000baf0
   14000ba7c:	and    cl,BYTE PTR [rip+0x616d0a0d]        # 0x1a16dc48f
   14000ba82:	jb     0x14000baeb
   14000ba84:	imul   ebp,DWORD PTR [rsi+0x3d],0x63657222
   14000ba8b:	je     0x14000bab5
   14000ba8d:	xor    dh,BYTE PTR [rax]
   14000ba8f:	jb     0x14000bb01
   14000ba91:	sub    al,0x20
   14000ba93:	xor    BYTE PTR [rdx+0x70],dh
   14000ba96:	sub    al,0x20
   14000ba98:	xor    eax,0x202c7072
   14000ba9d:	xor    dh,BYTE PTR [rip+0x22297072]        # 0x1622a2b15
   14000baa3:	(bad)  
   14000baa4:	ds or  eax,0x2f3c0a0d
   14000baaa:	imul   esp,DWORD PTR [rsi+0x3e],0x3c0a0d0d
   14000bab1:	imul   esp,DWORD PTR [rsi+0x20],0x73616c63
   14000bab8:	jae    0x14000baf7
   14000baba:	and    dh,BYTE PTR [rax+0x77]
   14000babd:	ins    BYTE PTR es:[rdi],dx
   14000babe:	pop    rdi
   14000babf:	je     0x14000bb30
   14000bac1:	jne    0x14000bb26
   14000bac3:	push   0x7079685f
   14000bac8:	gs jb  0x14000bb2a
   14000bacb:	ins    BYTE PTR es:[rdi],dx
   14000bacc:	imul   ebp,DWORD PTR [rsi+0x6b],0xd0d3e22
   14000bad3:	or     bh,BYTE PTR [rsp+rdx*2]
   14000bad6:	outs   dx,DWORD PTR ds:[rsi]
   14000bad7:	jne    0x14000bb3c
   14000bad9:	push   0x65707948
   14000bade:	jb     0x14000bb2c
   14000bae0:	imul   ebp,DWORD PTR [rsi+0x6b],0x630a0d0d
   14000bae7:	outs   dx,DWORD PTR ds:[rsi]
   14000bae8:	outs   dx,BYTE PTR ds:[rsi]
   14000bae9:	je     0x14000bb50
   14000baeb:	outs   dx,BYTE PTR ds:[rsi]
   14000baec:	je     0x14000bb4f
   14000baee:	ins    BYTE PTR es:[rdi],dx
   14000baef:	imul   esp,DWORD PTR [rdi+0x6e],0x6f74223d
   14000baf6:	jo     0x14000bb64
   14000baf8:	gs data16 je 0x14000bb1c
   14000bafc:	jl     0x14000bb1e
   14000bafe:	ja     0x14000bb72
   14000bb00:	(bad)  
   14000bb01:	jo     0x14000bb6f
   14000bb03:	gs data16 je 0x14000bb27
   14000bb07:	jl     0x14000bb29
   14000bb09:	outs   dx,BYTE PTR gs:[rsi]
   14000bb0b:	fs gs ins BYTE PTR es:[rdi],dx
   14000bb0e:	ins    BYTE PTR es:[rdi],dx
   14000bb0f:	imul   esi,DWORD PTR [rax+0x73],0xd227369
   14000bb16:	or     eax,0x6363610a
   14000bb1b:	gs jae 0x14000bb91
   14000bb1e:	imul   esp,DWORD PTR [rdx+0x6c],0x74223d65
   14000bb25:	jb     0x14000bb9c
   14000bb27:	and    cl,BYTE PTR gs:[rip+0x75630a0d]        # 0x1b563c53b
   14000bb2e:	jb     0x14000bba3
   14000bb30:	outs   dx,DWORD PTR ds:[rsi]
   14000bb31:	jb     0x14000bb70
   14000bb33:	and    ch,BYTE PTR [rax+0x61]
   14000bb36:	outs   dx,BYTE PTR ds:[rsi]
   14000bb37:	and    cl,BYTE PTR fs:[rip+0x63610a0d]        # 0x1a361c54b
   14000bb3e:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   14000bb42:	(bad)  
   14000bb43:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000bb47:	outs   dx,BYTE PTR ds:[rsi]
   14000bb48:	cmp    eax,0x696c6322
   14000bb4d:	movsxd ebp,DWORD PTR [rbx+0x22]
   14000bb50:	(bad)  
   14000bb51:	ds or  eax,0x693c0a0d
   14000bb57:	data16 and BYTE PTR [rbx+0x65],ch
   14000bb5b:	jns    0x14000bbc3
   14000bb5d:	outs   dx,DWORD PTR ds:[rsi]
   14000bb5e:	movsxd esi,DWORD PTR [rbp+0x73]
   14000bb61:	gs fs cmp eax,0x75727422
   14000bb68:	and    bh,BYTE PTR gs:[rsi]
   14000bb6b:	or     eax,0x543c0a0d
   14000bb70:	outs   dx,DWORD PTR ds:[rsi]
   14000bb71:	jne    0x14000bbd6
   14000bb73:	push   0x65707948
   14000bb78:	jb     0x14000bbc6
   14000bb7a:	imul   ebp,DWORD PTR [rsi+0x6b],0x630a0d0d
   14000bb81:	outs   dx,DWORD PTR ds:[rsi]
   14000bb82:	outs   dx,BYTE PTR ds:[rsi]
   14000bb83:	je     0x14000bbea
   14000bb85:	outs   dx,BYTE PTR ds:[rsi]
   14000bb86:	je     0x14000bbe9
   14000bb88:	ins    BYTE PTR es:[rdi],dx
   14000bb89:	imul   esp,DWORD PTR [rdi+0x6e],0x6f74223d
   14000bb90:	jo     0x14000bbfe
   14000bb92:	gs data16 je 0x14000bbb6
   14000bb96:	jl     0x14000bbb8
   14000bb98:	ja     0x14000bc0c
   14000bb9a:	(bad)  
   14000bb9b:	jo     0x14000bc09
   14000bb9d:	gs data16 je 0x14000bbc1
   14000bba1:	jl     0x14000bbc3
   14000bba3:	outs   dx,BYTE PTR gs:[rsi]
   14000bba5:	fs gs ins BYTE PTR es:[rdi],dx
   14000bba8:	ins    BYTE PTR es:[rdi],dx
   14000bba9:	imul   esi,DWORD PTR [rax+0x73],0x7c207369
   14000bbb0:	and    BYTE PTR [rsi+0x6f],ah
   14000bbb3:	movsxd esi,DWORD PTR [rbp+0x73]
   14000bbb6:	jb     0x14000bc1d
   14000bbb8:	movsxd esi,DWORD PTR [rdx+riz*1+0x2f]
   14000bbbc:	ds or  eax,0x2f3c0a0d
   14000bbc2:	imul   esp,DWORD PTR [rsi+0x3e],0x3c0a0d0d
   14000bbc9:	(bad)  
   14000bbca:	imul   esp,DWORD PTR [rsi+0x3e],0x3c0a0d0d
   14000bbd1:	imul   esp,DWORD PTR [rsi+0x20],0x73616c63
   14000bbd8:	jae    0x14000bc17
   14000bbda:	and    dh,BYTE PTR [rdi+0x61]
   14000bbdd:	jne    0x14000bc3e
   14000bbdf:	gs jne 0x14000bc4e
   14000bbe2:	(bad)  
   14000bbe3:	pop    rdi
   14000bbe4:	ins    BYTE PTR es:[rdi],dx
   14000bbe5:	imul   ebp,DWORD PTR [rsi+0x6b],0xd0d3e22
   14000bbec:	or     bh,BYTE PTR [rsp+rdx*2]
   14000bbef:	outs   dx,DWORD PTR ds:[rsi]
   14000bbf0:	jne    0x14000bc55
   14000bbf2:	push   0x65707948
   14000bbf7:	jb     0x14000bc45
   14000bbf9:	imul   ebp,DWORD PTR [rsi+0x6b],0x630a0d0d
   14000bc00:	outs   dx,DWORD PTR ds:[rsi]
   14000bc01:	outs   dx,BYTE PTR ds:[rsi]
   14000bc02:	je     0x14000bc69
   14000bc04:	outs   dx,BYTE PTR ds:[rsi]
   14000bc05:	je     0x14000bc68
   14000bc07:	ins    BYTE PTR es:[rdi],dx
   14000bc08:	imul   esp,DWORD PTR [rdi+0x6e],0x20202020
   14000bc0f:	cmp    eax,0x6f742220
   14000bc14:	jo     0x14000bc82
   14000bc16:	gs data16 je 0x14000bc3a
   14000bc1a:	jl     0x14000bc3c
   14000bc1c:	ja     0x14000bc90
   14000bc1e:	(bad)  
   14000bc1f:	jo     0x14000bc8d
   14000bc21:	gs data16 je 0x14000bc47
   14000bc25:	or     eax,0x63610a0d
   14000bc2a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000bc2d:	jae    0x14000bc98
   14000bc2f:	(bad)  
   14000bc30:	ins    BYTE PTR es:[rdi],dx
   14000bc31:	and    BYTE PTR gs:[rax],ah
   14000bc34:	and    BYTE PTR [rax],ah
   14000bc36:	and    BYTE PTR [rax],ah
   14000bc38:	cmp    eax,0x72742720
   14000bc3d:	jne    0x14000bca4
   14000bc3f:	(bad)  
   14000bc40:	or     eax,0x63610a0d
   14000bc45:	movsxd esi,DWORD PTR [rdx+0x6f]
   14000bc48:	ins    BYTE PTR es:[rdi],dx
   14000bc49:	and    BYTE PTR gs:[rax],ah
   14000bc4c:	and    BYTE PTR [rax],ah
   14000bc4e:	and    BYTE PTR [rax],ah
   14000bc50:	and    BYTE PTR [rax],ah
   14000bc52:	and    BYTE PTR [rip+0x696c2720],bh        # 0x1a96ce378
   14000bc58:	outs   dx,BYTE PTR ds:[rsi]
   14000bc59:	imul   esp,DWORD PTR [rdi],0xd
   14000bc5c:	or     eax,0x7275630a
   14000bc61:	jae    0x14000bcd2
   14000bc63:	jb     0x14000bc85
   14000bc65:	cmp    eax,0x61682220
   14000bc6a:	outs   dx,BYTE PTR ds:[rsi]
   14000bc6b:	and    cl,BYTE PTR fs:[rip+0x3e2f0a0d]        # 0x17e2fc67f
   14000bc72:	or     eax,0x2f3c0a0d
   14000bc77:	imul   esp,DWORD PTR [rsi+0x3e],0x3c0a0d0d
   14000bc7e:	(bad)  
   14000bc7f:	jae    0x14000bcf5
   14000bc81:	jns    0x14000bcef
   14000bc83:	gs ds or eax,0x2f3c0a0d
   14000bc8a:	jae    0x14000bd00
   14000bc8c:	jns    0x14000bcfa
   14000bc8e:	gs jae 0x14000bcf9
   14000bc91:	gs gs je 0x14000bd08
   14000bc95:	ds or  eax,0x453c0a0d
   14000bc9b:	ins    BYTE PTR es:[rdi],dx
   14000bc9c:	gs ins DWORD PTR es:[rdi],dx
   14000bc9e:	outs   dx,BYTE PTR gs:[rsi]
   14000bca0:	je     0x14000bcc2
   14000bca2:	jb     0x14000bd09
   14000bca4:	jae    0x14000bd0f
   14000bca6:	fs cmp eax,0x73655222
   14000bcac:	jne    0x14000bd1a
   14000bcae:	je     0x14000bd23
   14000bcb0:	push   rax
   14000bcb1:	(bad)  
   14000bcb2:	and    ah,BYTE PTR gs:[eax]
   14000bcb6:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x6d6f7461
   14000bcbe:	sub    BYTE PTR [rdx+0x65],dl
   14000bcc1:	jae    0x14000bd38
   14000bcc3:	ins    BYTE PTR es:[rdi],dx
   14000bcc4:	je     0x14000bd39
   14000bcc6:	push   rax
   14000bcc7:	(bad)  
   14000bcc8:	sub    DWORD PTR gs:[edx],esp
   14000bccc:	and    BYTE PTR [rcx+riz*2+0x79],ch
   14000bcd0:	outs   dx,DWORD PTR ds:[rsi]
   14000bcd1:	jne    0x14000bd47
   14000bcd3:	cmp    eax,0x726f6222
   14000bcd8:	fs gs jb 0x14000bd48
   14000bcdc:	(bad)  
   14000bcdd:	jns    0x14000bd4e
   14000bcdf:	jne    0x14000bd55
   14000bce1:	sub    BYTE PTR [rcx],ch
   14000bce3:	and    ah,BYTE PTR [rax]
   14000bce5:	imul   r13,QWORD PTR [r14+0x53],0x20657a69
   14000bced:	cmp    eax,0x7a697322
   14000bcf2:	sub    BYTE PTR gs:[rax],bh
   14000bcf5:	xor    BYTE PTR [rdx+0x70],dh
   14000bcf8:	sub    al,0x20
   14000bcfa:	xor    dh,BYTE PTR [rcx+rdi*1]
   14000bcfd:	jb     0x14000bd6f
   14000bcff:	sub    DWORD PTR [rdx],esp
   14000bd01:	and    BYTE PTR [rbx+0x68],dh
   14000bd04:	gs gs je 0x14000bd45
   14000bd08:	and    dl,BYTE PTR [rax+0x57]
   14000bd0b:	rex.WR pop rdi
   14000bd0d:	jae    0x14000bd83
   14000bd0f:	jns    0x14000bd7d
   14000bd11:	and    ah,BYTE PTR gs:[rax]
   14000bd14:	(bad)  
   14000bd15:	movsxd esp,DWORD PTR [rbx+0x65]
   14000bd18:	jae    0x14000bd8d
   14000bd1a:	imul   esp,DWORD PTR [rdx+0x6c],0x74223d65
   14000bd21:	jb     0x14000bd98
   14000bd23:	and    bh,BYTE PTR gs:[rsi]
   14000bd26:	or     eax,0x453c0a0d
   14000bd2b:	ins    BYTE PTR es:[rdi],dx
   14000bd2c:	gs ins DWORD PTR es:[rdi],dx
   14000bd2e:	outs   dx,BYTE PTR gs:[rsi]
   14000bd30:	je     0x14000bd52
   14000bd32:	ins    BYTE PTR es:[rdi],dx
   14000bd33:	(bad)  
   14000bd34:	jns    0x14000bda5
   14000bd36:	jne    0x14000bdac
   14000bd38:	and    BYTE PTR [rip+0x6c662220],bh        # 0x1ac66df5e
   14000bd3e:	outs   dx,DWORD PTR ds:[rsi]
   14000bd3f:	ja     0x14000bdad
   14000bd41:	(bad)  
   14000bd42:	jns    0x14000bdb3
   14000bd44:	jne    0x14000bdba
   14000bd46:	sub    BYTE PTR [rcx],ch
   14000bd48:	and    ah,BYTE PTR [rax]
   14000bd4a:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x74612220
   14000bd52:	outs   dx,DWORD PTR ds:[rsi]
   14000bd53:	ins    DWORD PTR es:[rdi],dx
   14000bd54:	sub    BYTE PTR [rbp+riz*2+0x73],al
   14000bd58:	movsxd esi,DWORD PTR [rdx+0x69]
   14000bd5b:	jo     0x14000bdd1
   14000bd5d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e69614d
   14000bd64:	push   rdi
   14000bd65:	jb     0x14000bdc8
   14000bd67:	jo     0x14000bdd9
   14000bd69:	gs jb  0x14000bd95
   14000bd6c:	and    ah,BYTE PTR [rax]
   14000bd6e:	ins    BYTE PTR es:[rdi],dx
   14000bd6f:	(bad)  
   14000bd70:	jns    0x14000bde1
   14000bd72:	jne    0x14000bde8
   14000bd74:	jo     0x14000bde5
   14000bd76:	jae    0x14000bd98
   14000bd78:	cmp    eax,0x6f742220
   14000bd7d:	jo     0x14000bda1
   14000bd7f:	ds or  eax,0x523c0a0d
   14000bd85:	imul   esp,DWORD PTR [rbx+0x68],0x74786554
   14000bd8c:	and    BYTE PTR [rcx+0x64],ch
   14000bd8f:	and    BYTE PTR [rip+0x74612220],bh        # 0x1b461dfb5
   14000bd95:	outs   dx,DWORD PTR ds:[rsi]
   14000bd96:	ins    DWORD PTR es:[rdi],dx
   14000bd97:	sub    BYTE PTR [rbp+riz*2+0x73],al
   14000bd9b:	movsxd esi,DWORD PTR [rdx+0x69]
   14000bd9e:	jo     0x14000be14
   14000bda0:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e69614d
   14000bda7:	sub    DWORD PTR [rdx],esp
   14000bda9:	and    BYTE PTR [rbx+0x6c],ah
   14000bdac:	(bad)  
   14000bdad:	jae    0x14000be22
   14000bdaf:	and    BYTE PTR [rip+0x6f6e2220],bh        # 0x1af6edfd5
   14000bdb5:	jb     0x14000be24
   14000bdb7:	pop    rdi
   14000bdb8:	je     0x14000be1f
   14000bdba:	js     0x14000be30
   14000bdbc:	and    ah,BYTE PTR [rax]
   14000bdbe:	ins    BYTE PTR es:[rdi],dx
   14000bdbf:	(bad)  
   14000bdc0:	jns    0x14000be31
   14000bdc2:	jne    0x14000be38
   14000bdc4:	jo     0x14000be35
   14000bdc6:	jae    0x14000bde8
   14000bdc8:	cmp    eax,0x6f742220
   14000bdcd:	jo     0x14000bdf1
   14000bdcf:	and    BYTE PTR [rbx+0x6f],ah
   14000bdd2:	outs   dx,BYTE PTR ds:[rsi]
   14000bdd3:	je     0x14000be3a
   14000bdd5:	outs   dx,BYTE PTR ds:[rsi]
   14000bdd6:	je     0x14000be39
   14000bdd8:	ins    BYTE PTR es:[rdi],dx
   14000bdd9:	imul   esp,DWORD PTR [rdi+0x6e],0x7277223d
   14000bde0:	(bad)  
   14000bde1:	jo     0x14000be4f
   14000bde3:	gs data16 je 0x14000be09
   14000bde7:	and    BYTE PTR [rdi+0x76],ch
   14000bdea:	gs jb  0x14000be55
   14000bded:	(bad)  
   14000bdee:	outs   dx,BYTE PTR ds:[rsi]
   14000bdef:	and    BYTE PTR [eip+0x61662220],bh        # 0x1a166e016
   14000bdf6:	ins    BYTE PTR es:[rdi],dx
   14000bdf7:	jae    0x14000be5e
   14000bdf9:	and    ch,BYTE PTR [rdi]
   14000bdfb:	ds or  eax,0x2f3c0a0d
   14000be01:	rex.RB ins BYTE PTR es:[rdi],dx
   14000be03:	gs ins DWORD PTR es:[rdi],dx
   14000be05:	outs   dx,BYTE PTR gs:[rsi]
   14000be07:	je     0x14000be47
   14000be09:	or     eax,0x453c0a0d
   14000be0e:	ins    BYTE PTR es:[rdi],dx
   14000be0f:	gs ins DWORD PTR es:[rdi],dx
   14000be11:	outs   dx,BYTE PTR gs:[rsi]
   14000be13:	je     0x14000be35
   14000be15:	ins    BYTE PTR es:[rdi],dx
   14000be16:	(bad)  
   14000be17:	jns    0x14000be88
   14000be19:	jne    0x14000be8f
   14000be1b:	jo     0x14000be8c
   14000be1d:	jae    0x14000be5c
   14000be1f:	and    dh,BYTE PTR [rdi+rbp*2+0x70]
   14000be23:	and    ah,BYTE PTR [rax]
   14000be25:	push   0x68676965
   14000be2a:	je     0x14000be69
   14000be2c:	and    dh,BYTE PTR [rdx]
   14000be2e:	xor    BYTE PTR [rdx+0x70],dh
   14000be31:	and    ch,BYTE PTR [rdi]
   14000be33:	ds or  eax,0x453c0a0d
   14000be39:	ins    BYTE PTR es:[rdi],dx
   14000be3a:	gs ins DWORD PTR es:[rdi],dx
   14000be3c:	outs   dx,BYTE PTR gs:[rsi]
   14000be3e:	je     0x14000be60
   14000be40:	ins    BYTE PTR es:[rdi],dx
   14000be41:	(bad)  
   14000be42:	jns    0x14000beb3
   14000be44:	jne    0x14000beba
   14000be46:	and    BYTE PTR [rip+0x6c662220],bh        # 0x1ac66e06c
   14000be4c:	outs   dx,DWORD PTR ds:[rsi]
   14000be4d:	ja     0x14000bebb
   14000be4f:	(bad)  
   14000be50:	jns    0x14000bec1
   14000be52:	jne    0x14000bec8
   14000be54:	sub    BYTE PTR [rcx],ch
   14000be56:	and    ah,BYTE PTR [rax]
   14000be58:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x74612220
   14000be60:	outs   dx,DWORD PTR ds:[rsi]
   14000be61:	ins    DWORD PTR es:[rdi],dx
   14000be62:	sub    BYTE PTR [rbp+riz*2+0x73],al
   14000be66:	movsxd esi,DWORD PTR [rdx+0x69]
   14000be69:	jo     0x14000bedf
   14000be6b:	imul   ebp,DWORD PTR [rdi+0x6e],0x70617257
   14000be72:	jo     0x14000bed9
   14000be74:	jb     0x14000be9f
   14000be76:	and    ah,BYTE PTR [rax]
   14000be78:	ins    BYTE PTR es:[rdi],dx
   14000be79:	(bad)  
   14000be7a:	jns    0x14000beeb
   14000be7c:	jne    0x14000bef2
   14000be7e:	jo     0x14000beef
   14000be80:	jae    0x14000bea2
   14000be82:	cmp    eax,0x6f742220
   14000be87:	jo     0x14000beab
   14000be89:	ds or  eax,0x523c0a0d
   14000be8f:	imul   esp,DWORD PTR [rbx+0x68],0x74786554
   14000be96:	and    BYTE PTR [rcx+0x64],ch
   14000be99:	and    BYTE PTR [rip+0x74612220],bh        # 0x1b461e0bf
   14000be9f:	outs   dx,DWORD PTR ds:[rsi]
   14000bea0:	ins    DWORD PTR es:[rdi],dx
   14000bea1:	sub    BYTE PTR [rdx+0x65],dl
   14000bea4:	jae    0x14000bf1b
   14000bea6:	ins    BYTE PTR es:[rdi],dx
   14000bea7:	je     0x14000bf1c
   14000bea9:	rex.WRB
   14000beaa:	gs jae 0x14000bf20
   14000bead:	(bad)  
   14000beae:	sub    DWORD PTR gs:[edx],esp
   14000beb2:	and    BYTE PTR [rbx+0x6c],ah
   14000beb5:	(bad)  
   14000beb6:	jae    0x14000bf2b
   14000beb8:	and    BYTE PTR [rip+0x6f6e2220],bh        # 0x1af6ee0de
   14000bebe:	jb     0x14000bf2d
   14000bec0:	pop    rdi
   14000bec1:	je     0x14000bf28
   14000bec3:	js     0x14000bf39
   14000bec5:	and    ah,BYTE PTR [rax]
   14000bec7:	ins    BYTE PTR es:[rdi],dx
   14000bec8:	(bad)  
   14000bec9:	jns    0x14000bf3a
   14000becb:	jne    0x14000bf41
   14000becd:	jo     0x14000bf3e
   14000becf:	jae    0x14000bef1
   14000bed1:	cmp    eax,0x6f742220
   14000bed6:	jo     0x14000befa
   14000bed8:	and    BYTE PTR [rcx+0x63],ah
   14000bedb:	movsxd esp,DWORD PTR [rbp+0x73]
   14000bede:	jae    0x14000bf49
   14000bee0:	(bad)  
   14000bee1:	ins    BYTE PTR es:[rdi],dx
   14000bee2:	gs cmp eax,0x75727422
   14000bee8:	and    ah,BYTE PTR gs:[rax]
   14000beeb:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000beee:	je     0x14000bf55
   14000bef0:	outs   dx,BYTE PTR ds:[rsi]
   14000bef1:	je     0x14000bf54
   14000bef3:	ins    BYTE PTR es:[rdi],dx
   14000bef4:	imul   esp,DWORD PTR [rdi+0x6e],0x7277223d
   14000befb:	(bad)  
   14000befc:	jo     0x14000bf6a
   14000befe:	gs data16 je 0x14000bf24
   14000bf02:	and    BYTE PTR [rdi+0x76],ch
   14000bf05:	gs jb  0x14000bf70
   14000bf08:	(bad)  
   14000bf09:	outs   dx,BYTE PTR ds:[rsi]
   14000bf0a:	and    BYTE PTR [eip+0x61662220],bh        # 0x1a166e131
   14000bf11:	ins    BYTE PTR es:[rdi],dx
   14000bf12:	jae    0x14000bf79
   14000bf14:	and    ch,BYTE PTR [rdi]
   14000bf16:	ds or  eax,0x2f3c0a0d
   14000bf1c:	rex.RB ins BYTE PTR es:[rdi],dx
   14000bf1e:	gs ins DWORD PTR es:[rdi],dx
   14000bf20:	outs   dx,BYTE PTR gs:[rsi]
   14000bf22:	je     0x14000bf62
   14000bf24:	or     eax,0x453c0a0d
   14000bf29:	ins    BYTE PTR es:[rdi],dx
   14000bf2a:	gs ins DWORD PTR es:[rdi],dx
   14000bf2c:	outs   dx,BYTE PTR gs:[rsi]
   14000bf2e:	je     0x14000bf50
   14000bf30:	ins    BYTE PTR es:[rdi],dx
   14000bf31:	(bad)  
   14000bf32:	jns    0x14000bfa3
   14000bf34:	jne    0x14000bfaa
   14000bf36:	jo     0x14000bfa7
   14000bf38:	jae    0x14000bf77
   14000bf3a:	and    dh,BYTE PTR [rdi+rbp*2+0x70]
   14000bf3e:	and    ah,BYTE PTR [rax]
   14000bf40:	push   0x68676965
   14000bf45:	je     0x14000bf84
   14000bf47:	and    dh,BYTE PTR [rdx]
   14000bf49:	xor    BYTE PTR [rdx+0x70],dh
   14000bf4c:	and    ch,BYTE PTR [rdi]
   14000bf4e:	ds or  eax,0x453c0a0d
   14000bf54:	ins    BYTE PTR es:[rdi],dx
   14000bf55:	gs ins DWORD PTR es:[rdi],dx
   14000bf57:	outs   dx,BYTE PTR gs:[rsi]
   14000bf59:	je     0x14000bf7b
   14000bf5b:	ins    BYTE PTR es:[rdi],dx
   14000bf5c:	(bad)  
   14000bf5d:	jns    0x14000bfce
   14000bf5f:	jne    0x14000bfd5
   14000bf61:	and    BYTE PTR [rip+0x6c662220],bh        # 0x1ac66e187
   14000bf67:	outs   dx,DWORD PTR ds:[rsi]
   14000bf68:	ja     0x14000bfd6
   14000bf6a:	(bad)  
   14000bf6b:	jns    0x14000bfdc
   14000bf6d:	jne    0x14000bfe3
   14000bf6f:	sub    BYTE PTR [rcx],ch
   14000bf71:	and    ah,BYTE PTR [rax]
   14000bf73:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x74612220
   14000bf7b:	outs   dx,DWORD PTR ds:[rsi]
   14000bf7c:	ins    DWORD PTR es:[rdi],dx
   14000bf7d:	sub    BYTE PTR [rbp+0x72],al
   14000bf80:	jb     0x14000bff1
   14000bf82:	jb     0x14000bfdb
   14000bf84:	jb     0x14000bfe7
   14000bf86:	jo     0x14000bff8
   14000bf88:	gs jb  0x14000bfb4
   14000bf8b:	and    ah,BYTE PTR [rax]
   14000bf8d:	ins    BYTE PTR es:[rdi],dx
   14000bf8e:	(bad)  
   14000bf8f:	jns    0x14000c000
   14000bf91:	jne    0x14000c007
   14000bf93:	jo     0x14000c004
   14000bf95:	jae    0x14000bfb7
   14000bf97:	cmp    eax,0x6f742220
   14000bf9c:	jo     0x14000bfc0
   14000bf9e:	ds or  eax,0x543c0a0d
   14000bfa4:	outs   dx,DWORD PTR ds:[rsi]
   14000bfa5:	jne    0x14000c00a
   14000bfa7:	push   0x65707948
   14000bfac:	jb     0x14000bffa
   14000bfae:	imul   ebp,DWORD PTR [rsi+0x6b],0x20646920
   14000bfb5:	cmp    eax,0x74612220
   14000bfba:	outs   dx,DWORD PTR ds:[rsi]
   14000bfbb:	ins    DWORD PTR es:[rdi],dx
   14000bfbc:	sub    BYTE PTR [rbp+0x72],al
   14000bfbf:	jb     0x14000c030
   14000bfc1:	jb     0x14000c010
   14000bfc3:	gs jae 0x14000c039
   14000bfc6:	(bad)  
   14000bfc7:	sub    DWORD PTR gs:[edx],esp
   14000bfcb:	and    BYTE PTR [rbx+0x6c],ah
   14000bfce:	(bad)  
   14000bfcf:	jae    0x14000c044
   14000bfd1:	and    BYTE PTR [rip+0x77702220],bh        # 0x1b770e1f7
   14000bfd7:	ins    BYTE PTR es:[rdi],dx
   14000bfd8:	pop    rdi
   14000bfd9:	je     0x14000c04a
   14000bfdb:	jne    0x14000c040
   14000bfdd:	push   0x7079685f
   14000bfe2:	gs jb  0x14000c044
   14000bfe5:	ins    BYTE PTR es:[rdi],dx
   14000bfe6:	imul   ebp,DWORD PTR [rsi+0x6b],0x616c2022
   14000bfed:	jns    0x14000c05e
   14000bfef:	jne    0x14000c065
   14000bff1:	jo     0x14000c062
   14000bff3:	jae    0x14000c015
   14000bff5:	cmp    eax,0x6f622220
   14000bffa:	je     0x14000c070
   14000bffc:	outs   dx,DWORD PTR ds:[rsi]
   14000bffd:	ins    DWORD PTR es:[rdi],dx
   14000bffe:	and    ah,BYTE PTR [rax]
   14000c000:	(bad)  
   14000c001:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14000c005:	gs cmp eax,0x756f6d22
   14000c00b:	jae    0x14000c072
   14000c00d:	jl     0x14000c07a
   14000c00f:	gs jns 0x14000c074
   14000c012:	outs   dx,DWORD PTR ds:[rsi]
   14000c013:	(bad)  
   14000c014:	jb     0x14000c07a
   14000c016:	jl     0x14000c088
   14000c018:	outs   dx,DWORD PTR ds:[rsi]
   14000c019:	imul   ebp,DWORD PTR [rsi+0x74],0x2f227265
   14000c020:	ds or  eax,0x2f3c0a0d
   14000c026:	rex.RB ins BYTE PTR es:[rdi],dx
   14000c028:	gs ins DWORD PTR es:[rdi],dx
   14000c02a:	outs   dx,BYTE PTR gs:[rsi]
   14000c02c:	je     0x14000c06c
   14000c02e:	or     eax,0x453c0a0d
   14000c033:	ins    BYTE PTR es:[rdi],dx
   14000c034:	gs ins DWORD PTR es:[rdi],dx
   14000c036:	outs   dx,BYTE PTR gs:[rsi]
   14000c038:	je     0x14000c05a
   14000c03a:	ins    BYTE PTR es:[rdi],dx
   14000c03b:	(bad)  
   14000c03c:	jns    0x14000c0ad
   14000c03e:	jne    0x14000c0b4
   14000c040:	and    BYTE PTR [rip+0x6c662220],bh        # 0x1ac66e266
   14000c046:	outs   dx,DWORD PTR ds:[rsi]
   14000c047:	ja     0x14000c0b5
   14000c049:	(bad)  
   14000c04a:	jns    0x14000c0bb
   14000c04c:	jne    0x14000c0c2
   14000c04e:	sub    BYTE PTR [rcx],ch
   14000c050:	and    ah,BYTE PTR [rax]
   14000c052:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x74612220
   14000c05a:	outs   dx,DWORD PTR ds:[rsi]
   14000c05b:	ins    DWORD PTR es:[rdi],dx
   14000c05c:	sub    BYTE PTR [rbp+riz*2+0x73],al
   14000c060:	movsxd esi,DWORD PTR [rdx+0x69]
   14000c063:	jo     0x14000c0d9
   14000c065:	imul   ebp,DWORD PTR [rdi+0x6e],0x72574b50
   14000c06c:	(bad)  
   14000c06d:	jo     0x14000c0df
   14000c06f:	gs jb  0x14000c09b
   14000c072:	and    ah,BYTE PTR [rax]
   14000c074:	ins    BYTE PTR es:[rdi],dx
   14000c075:	(bad)  
   14000c076:	jns    0x14000c0e7
   14000c078:	jne    0x14000c0ee
   14000c07a:	jo     0x14000c0eb
   14000c07c:	jae    0x14000c09e
   14000c07e:	cmp    eax,0x6f742220
   14000c083:	jo     0x14000c0a7
   14000c085:	ds or  eax,0x523c0a0d
   14000c08b:	imul   esp,DWORD PTR [rbx+0x68],0x74786554
   14000c092:	and    BYTE PTR [rcx+0x64],ch
   14000c095:	and    BYTE PTR [rip+0x74612220],bh        # 0x1b461e2bb
   14000c09b:	outs   dx,DWORD PTR ds:[rsi]
   14000c09c:	ins    DWORD PTR es:[rdi],dx
   14000c09d:	sub    BYTE PTR [rbp+riz*2+0x73],al
   14000c0a1:	movsxd esi,DWORD PTR [rdx+0x69]
   14000c0a4:	jo     0x14000c11a
   14000c0a6:	imul   ebp,DWORD PTR [rdi+0x6e],0x582d4b50
   14000c0ad:	pop    rax
   14000c0ae:	pop    rax
   14000c0af:	pop    rax
   14000c0b0:	pop    rax
   14000c0b1:	sub    DWORD PTR [rdx],esp
   14000c0b3:	and    BYTE PTR [rbx+0x6c],ah
   14000c0b6:	(bad)  
   14000c0b7:	jae    0x14000c12c
   14000c0b9:	and    BYTE PTR [rip+0x6f6e2220],bh        # 0x1af6ee2df
   14000c0bf:	jb     0x14000c12e
   14000c0c1:	pop    rdi
   14000c0c2:	je     0x14000c129
   14000c0c4:	js     0x14000c13a
   14000c0c6:	and    ah,BYTE PTR [rax]
   14000c0c8:	ins    BYTE PTR es:[rdi],dx
   14000c0c9:	(bad)  
   14000c0ca:	jns    0x14000c13b
   14000c0cc:	jne    0x14000c142
   14000c0ce:	jo     0x14000c13f
   14000c0d0:	jae    0x14000c0f2
   14000c0d2:	cmp    eax,0x6f742220
   14000c0d7:	jo     0x14000c0fb
   14000c0d9:	and    BYTE PTR [rbx+0x6f],ah
   14000c0dc:	outs   dx,BYTE PTR ds:[rsi]
   14000c0dd:	je     0x14000c144
   14000c0df:	outs   dx,BYTE PTR ds:[rsi]
   14000c0e0:	je     0x14000c143
   14000c0e2:	ins    BYTE PTR es:[rdi],dx
   14000c0e3:	imul   esp,DWORD PTR [rdi+0x6e],0x7277223d
   14000c0ea:	(bad)  
   14000c0eb:	jo     0x14000c159
   14000c0ed:	gs data16 je 0x14000c113
   14000c0f1:	and    BYTE PTR [rdi+0x76],ch
   14000c0f4:	gs jb  0x14000c15f
   14000c0f7:	(bad)  
   14000c0f8:	outs   dx,BYTE PTR ds:[rsi]
   14000c0f9:	and    BYTE PTR [eip+0x61662220],bh        # 0x1a166e320
   14000c100:	ins    BYTE PTR es:[rdi],dx
   14000c101:	jae    0x14000c168
   14000c103:	and    ch,BYTE PTR [rdi]
   14000c105:	ds or  eax,0x2f3c0a0d
   14000c10b:	rex.RB ins BYTE PTR es:[rdi],dx
   14000c10d:	gs ins DWORD PTR es:[rdi],dx
   14000c10f:	outs   dx,BYTE PTR gs:[rsi]
   14000c111:	je     0x14000c151
   14000c113:	or     eax,0x453c0a0d
   14000c118:	ins    BYTE PTR es:[rdi],dx
   14000c119:	gs ins DWORD PTR es:[rdi],dx
   14000c11b:	outs   dx,BYTE PTR gs:[rsi]
   14000c11d:	je     0x14000c13f
   14000c11f:	ins    BYTE PTR es:[rdi],dx
   14000c120:	(bad)  
   14000c121:	jns    0x14000c192
   14000c123:	jne    0x14000c199
   14000c125:	and    BYTE PTR [rip+0x6c662220],bh        # 0x1ac66e34b
   14000c12b:	outs   dx,DWORD PTR ds:[rsi]
   14000c12c:	ja     0x14000c19a
   14000c12e:	(bad)  
   14000c12f:	jns    0x14000c1a0
   14000c131:	jne    0x14000c1a7
   14000c133:	sub    BYTE PTR [rcx],ch
   14000c135:	and    ah,BYTE PTR [rax]
   14000c137:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0x74612220
   14000c13f:	outs   dx,DWORD PTR ds:[rsi]
   14000c140:	ins    DWORD PTR es:[rdi],dx
   14000c141:	sub    BYTE PTR [rbp+0x72],al
   14000c144:	jb     0x14000c1b5
   14000c146:	jb     0x14000c1bf
   14000c148:	jb     0x14000c1ab
   14000c14a:	jo     0x14000c1bc
   14000c14c:	gs jb  0x14000c178
   14000c14f:	and    ah,BYTE PTR [rax]
   14000c151:	ins    BYTE PTR es:[rdi],dx
   14000c152:	(bad)  
   14000c153:	jns    0x14000c1c4
   14000c155:	jne    0x14000c1cb
   14000c157:	jo     0x14000c1c8
   14000c159:	jae    0x14000c17b
   14000c15b:	cmp    eax,0x6f622220
   14000c160:	je     0x14000c1d6
   14000c162:	outs   dx,DWORD PTR ds:[rsi]
   14000c163:	ins    DWORD PTR es:[rdi],dx
   14000c164:	and    bh,BYTE PTR [rsi]
   14000c166:	or     eax,0x523c0a0d
   14000c16b:	imul   esp,DWORD PTR [rbx+0x68],0x74786554
   14000c172:	and    BYTE PTR [rcx+0x64],ch
   14000c175:	and    BYTE PTR [rip+0x74612220],bh        # 0x1b461e39b
   14000c17b:	outs   dx,DWORD PTR ds:[rsi]
   14000c17c:	ins    DWORD PTR es:[rdi],dx
   14000c17d:	sub    BYTE PTR [rax+0x6b],dl
   14000c180:	gs jns 0x14000c1c8
   14000c183:	jb     0x14000c1f7
   14000c185:	outs   dx,DWORD PTR ds:[rsi]
   14000c186:	jb     0x14000c1d5
   14000c188:	jae    0x14000c1f1
   14000c18a:	sub    DWORD PTR [rdx],esp
   14000c18c:	and    BYTE PTR [rbp+0x61],ch
   14000c18f:	jb     0x14000c1f8
   14000c191:	imul   ebp,DWORD PTR [rsi+0x20],0x7222203d
   14000c198:	movsxd esi,DWORD PTR gs:[rax+rbp*1+0x30]
   14000c19d:	jb     0x14000c20f
   14000c19f:	sub    al,0x20
   14000c1a1:	xor    BYTE PTR [rdx+0x70],dh
   14000c1a4:	sub    al,0x20
   14000c1a6:	xor    DWORD PTR [rax],esi
   14000c1a8:	jb     0x14000c21a
   14000c1aa:	sub    al,0x20
   14000c1ac:	xor    dh,BYTE PTR [rip+0x22297072]        # 0x1622a3224
   14000c1b2:	and    BYTE PTR [rbx+0x6c],ah
   14000c1b5:	(bad)  
   14000c1b6:	jae    0x14000c22b
   14000c1b8:	and    BYTE PTR [rip+0x6f6e2220],bh        # 0x1af6ee3de
   14000c1be:	jb     0x14000c22d
   14000c1c0:	pop    rdi
   14000c1c1:	je     0x14000c228
   14000c1c3:	js     0x14000c239
   14000c1c5:	and    ah,BYTE PTR [rax]
   14000c1c7:	(bad)  
   14000c1c8:	movsxd esp,DWORD PTR [rbx+0x65]
   14000c1cb:	jae    0x14000c240
   14000c1cd:	imul   esp,DWORD PTR [rdx+0x6c],0x74223d65
   14000c1d4:	jb     0x14000c24b
   14000c1d6:	and    ah,BYTE PTR gs:[rax]
   14000c1d9:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000c1dc:	je     0x14000c243
   14000c1de:	outs   dx,BYTE PTR ds:[rsi]
   14000c1df:	je     0x14000c242
   14000c1e1:	ins    BYTE PTR es:[rdi],dx
   14000c1e2:	imul   esp,DWORD PTR [rdi+0x6e],0x7277223d
   14000c1e9:	(bad)  
   14000c1ea:	jo     0x14000c258
   14000c1ec:	gs data16 je 0x14000c212
   14000c1f0:	and    BYTE PTR [rsi+0x6f],ah
   14000c1f3:	jb     0x14000c25a
   14000c1f5:	addr32 jb 0x14000c267
   14000c1f8:	jne    0x14000c268
   14000c1fa:	fs cmp eax,0x6d6d4922
   14000c200:	gs jb  0x14000c276
   14000c203:	imul   esi,DWORD PTR [rsi+0x65],0x72617453
   14000c20a:	je     0x14000c255
   14000c20c:	outs   dx,BYTE PTR ds:[rsi]
   14000c20d:	ins    BYTE PTR es:[rdi],dx
   14000c20e:	imul   ebp,DWORD PTR [rsi+0x65],0x6f727245
   14000c215:	jb     0x14000c26b
   14000c217:	gs js  0x14000c28e
   14000c21a:	and    ah,BYTE PTR [rax]
   14000c21c:	outs   dx,DWORD PTR ds:[rsi]
   14000c21d:	jbe    0x14000c284
   14000c21f:	jb     0x14000c289
   14000c221:	(bad)  
   14000c222:	outs   dx,BYTE PTR ds:[rsi]
   14000c223:	and    BYTE PTR [eip+0x61662220],bh        # 0x1a166e44a
   14000c22a:	ins    BYTE PTR es:[rdi],dx
   14000c22b:	jae    0x14000c292
   14000c22d:	and    ch,BYTE PTR [rdi]
   14000c22f:	ds or  eax,0x2f3c0a0d
   14000c235:	rex.RB ins BYTE PTR es:[rdi],dx
   14000c237:	gs ins DWORD PTR es:[rdi],dx
   14000c239:	outs   dx,BYTE PTR gs:[rsi]
   14000c23b:	je     0x14000c27b
   14000c23d:	or     eax,0x2f3c0a0d
   14000c242:	rex.RB ins BYTE PTR es:[rdi],dx
   14000c244:	gs ins DWORD PTR es:[rdi],dx
   14000c246:	outs   dx,BYTE PTR gs:[rsi]
   14000c248:	je     0x14000c288
   14000c24a:	or     eax,0x2f3c0a0d
   14000c24f:	fs jne 0x14000c2bb
   14000c252:	js     0x14000c2c1
   14000c254:	ins    BYTE PTR es:[rdi],dx
   14000c255:	ds or  eax,0xa0d
   14000c25b:	add    BYTE PTR [rax],al
   14000c25d:	add    BYTE PTR [rax],al
   14000c25f:	add    ch,cl
   14000c261:	dec    ch
   14000c263:	(bad)  
   14000c264:	fadd   DWORD PTR [rax]
   14000c266:	add    BYTE PTR [rax],al
   14000c268:	add    BYTE PTR [rax],al
   14000c26a:	add    DWORD PTR [rax],eax
   14000c26c:	add    BYTE PTR [rax],al
   14000c26e:	add    BYTE PTR [rax],al
   14000c270:	adc    DWORD PTR [rax],eax
   14000c272:	add    BYTE PTR [rax],al
   14000c274:	add    BYTE PTR [rax],al
   14000c276:	add    BYTE PTR [rax],al
   14000c278:	add    al,BYTE PTR [rax]
   14000c27a:	add    BYTE PTR [rax],al
   14000c27c:	sar    BYTE PTR [rip+0xffffffffc7ac7e67],cl        # 0x107ad40e9
   14000c282:	imul   esp,esi,0x623b7ecf
   14000c288:	mov    bh,0xfd
   14000c28a:	sbb    esi,ebx
   14000c28c:	(bad)  
   14000c28d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c28e:	or     bl,BYTE PTR [rbx+0x22]
   14000c291:	add    eax,0x585f7abe
   14000c296:	test   DWORD PTR [rsi-0xa46b01a],esi
	...
   14000c2b4:	mov    BYTE PTR [rax],al
   14000c2b6:	add    BYTE PTR [rax],al
   14000c2b8:	sbb    al,0x0
   14000c2ba:	add    BYTE PTR [rax],al
   14000c2bc:	test   al,0x0
   14000c2be:	add    BYTE PTR [rax],al
   14000c2c0:	or     BYTE PTR [rax],al
   14000c2c2:	add    BYTE PTR [rax],al
   14000c2c4:	mov    al,0x0
   14000c2c6:	add    BYTE PTR [rax],al
   14000c2c8:	(bad)  
   14000c2c9:	add    BYTE PTR [rax],al
   14000c2cb:	add    al,al
   14000c2cd:	add    BYTE PTR [rax],al
   14000c2cf:	add    BYTE PTR [rax],cl
	...
   14000c2d9:	add    BYTE PTR [rax],al
   14000c2db:	add    al,cl
   14000c2dd:	add    BYTE PTR [rax],al
   14000c2df:	add    BYTE PTR [rax+rax*1],cl
   14000c2e2:	add    BYTE PTR [rax],al
   14000c2e4:	add    BYTE PTR [rax],al
   14000c2e6:	add    BYTE PTR [rax],al
   14000c2e8:	push   rbp
   14000c2e9:	add    BYTE PTR [rcx+0x0],cl
   14000c2ec:	rex.RX add BYTE PTR [rcx+0x0],r9b
   14000c2f0:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14000c2f4:	add    BYTE PTR [rax],al
   14000c2f6:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000c2fa:	rex.WB add BYTE PTR [r8],al
	...
   14000c305:	add    BYTE PTR [rax],al
   14000c307:	add    BYTE PTR [rax],dl
   14000c309:	add    BYTE PTR [rax],al
   14000c30b:	add    BYTE PTR [rax],bl
   14000c30d:	add    BYTE PTR [rax],al
   14000c30f:	add    BYTE PTR [rbp+0x0],cl
   14000c312:	push   rbp
   14000c313:	add    BYTE PTR [rcx+0x0],cl
	...
   14000c31e:	add    BYTE PTR [rax],al
   14000c320:	(bad)  
   14000c321:	add    BYTE PTR [rax],al
   14000c323:	add    BYTE PTR [rax],dl
   14000c325:	add    BYTE PTR [rax],al
   14000c327:	add    BYTE PTR [rbp+0x0],ah
   14000c32a:	outs   dx,BYTE PTR ds:[rsi]
   14000c32b:	add    BYTE PTR [rip+0x53005500],ch        # 0x193011831
   14000c331:	add    BYTE PTR [rax],al
   14000c333:	add    BYTE PTR [rax],al
   14000c335:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000d000 <.reloc>:
   14000d000:	add    BYTE PTR [rax+0x0],dh
   14000d003:	add    al,al
   14000d005:	add    BYTE PTR [rax],al
   14000d007:	add    al,ch
   14000d009:	movabs ds:0xa310a308a300a2f0,al
   14000d012:	sbb    BYTE PTR [rbx-0x5cc75ce0],ah
   14000d018:	rex movabs ds:0xa4f0a4e8a450a448,eax
   14000d022:	clc    
   14000d023:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d024:	add    BYTE PTR [rbp-0x5aef5af8],ah
   14000d02a:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   14000d030:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   14000d036:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000d038:	push   rax
   14000d039:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d03a:	pop    rax
   14000d03b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d03c:	(bad)  
   14000d03d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d03e:	push   0x78a570a5
   14000d043:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d044:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   14000d04b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d04c:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   14000d055:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d056:	enter  0xd0a5,0xa5
   14000d05a:	fsub   DWORD PTR [rbp-0x5a175a20]
   14000d060:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d062:	clc    
   14000d063:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d064:	add    BYTE PTR [rsi-0x59ef59f8],ah
   14000d06a:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   14000d070:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   14000d076:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d078:	push   rax
   14000d079:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d07a:	pop    rax
   14000d07b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d07c:	(bad)  
   14000d07d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d07e:	push   0x78a670a6
   14000d083:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d084:	and    BYTE PTR [rsi-0x596f5978],0x98
   14000d08b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d08c:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   14000d095:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d096:	enter  0xd0a6,0xa6
   14000d09a:	fsub   DWORD PTR [rsi-0x59175920]
   14000d0a0:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d0a2:	clc    
   14000d0a3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d0a4:	add    BYTE PTR [rdi-0x58ef58f8],ah
   14000d0aa:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   14000d0b0:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   14000d0b6:	or     BYTE PTR [rbx-0x54d754e0],ch
   14000d0bc:	xor    BYTE PTR [rbx-0x70000000],ch
   14000d0c2:	add    BYTE PTR [rax],al
   14000d0c4:	or     al,0x0
   14000d0c6:	add    BYTE PTR [rax],al
   14000d0c8:	.byte 0x28
   14000d0c9:	.byte 0xa0
   14000d0ca:	pop    rax
   14000d0cb:	.byte 0xa0
