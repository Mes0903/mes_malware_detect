
ff9ef3f71807789ab7387c00020b61f7c7ffdcbd7f55d5274bd9d5800b98cad6.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	push   0x1400098
   14000100d:	add    BYTE PTR [rax],al
   14000100f:	add    BYTE PTR [rdx+rbp*4],al
   140001012:	add    BYTE PTR [rax+0x1],al
   140001015:	add    BYTE PTR [rax],al
   140001017:	add    ah,bl
   140001019:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000101a:	add    BYTE PTR [rax+0x1],al
   14000101d:	add    BYTE PTR [rax],al
   14000101f:	add    BYTE PTR [rax],cl
   140001021:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140001022:	add    BYTE PTR [rax+0x1],al
   140001025:	add    BYTE PTR [rax],al
   140001027:	add    ah,al
   140001029:	test   eax,0x14000
	...
   14000103e:	add    BYTE PTR [rax],al
   140001040:	nop
   140001041:	xchg   edi,eax
   140001042:	add    BYTE PTR [rax+0x1],al
   140001045:	add    BYTE PTR [rax],al
   140001047:	add    BYTE PTR [rbp+rbx*4+0x0],dl
   14000104b:	rex add DWORD PTR [rax],eax
	...
   140001062:	add    BYTE PTR [rax],al
   140001064:	(bad)  
   140001065:	xchg   esi,eax
   140001066:	adc    BYTE PTR [rax+0x0],dl
   140001069:	add    BYTE PTR [rax],al
   14000106b:	add    BYTE PTR [rdx],al
   14000106d:	add    BYTE PTR [rax],al
   14000106f:	add    BYTE PTR [rip+0xffffffffd0000000],ah        # 0x110001075
   140001075:	add    BYTE PTR [r8],r8b
   140001078:	sar    BYTE PTR [rcx],1
   14000107a:	add    BYTE PTR [rax],al
   14000107c:	add    BYTE PTR [rax],al
   14000107e:	add    BYTE PTR [rax],al
   140001080:	movabs al,ds:0x2200000001400093
   140001089:	add    eax,0x11993
   14000108e:	add    BYTE PTR [rax],al
   140001090:	(bad)  
   140001091:	stos   BYTE PTR es:[rdi],al
	...
   14000109a:	add    BYTE PTR [rax],al
   14000109c:	add    eax,DWORD PTR [rax]
   14000109e:	add    BYTE PTR [rax],al
   1400010a0:	int3   
   1400010a1:	stos   BYTE PTR es:[rdi],al
   1400010a2:	add    BYTE PTR [rax],al
   1400010a4:	and    BYTE PTR [rax],al
   1400010a6:	add    BYTE PTR [rax],al
   1400010a8:	add    BYTE PTR [rax],al
   1400010aa:	add    BYTE PTR [rax],al
   1400010ac:	add    DWORD PTR [rax],eax
   1400010ae:	add    BYTE PTR [rax],al
   1400010b0:	and    al,BYTE PTR [rip+0x21993]        # 0x140022a49
   1400010b6:	add    BYTE PTR [rax],al
   1400010b8:	push   0x10000b3
   1400010bd:	add    BYTE PTR [rax],al
   1400010bf:	add    BYTE PTR [rax],al
   1400010c1:	stos   DWORD PTR es:[rdi],eax
   1400010c2:	add    BYTE PTR [rax],al
   1400010c4:	add    al,0x0
   1400010c6:	add    BYTE PTR [rax],al
   1400010c8:	sub    BYTE PTR [rbx+0x200000],ch
   1400010ce:	add    BYTE PTR [rax],al
   1400010d0:	add    BYTE PTR [rax],al
   1400010d2:	add    BYTE PTR [rax],al
   1400010d4:	add    DWORD PTR [rax],eax
   1400010d6:	add    BYTE PTR [rax],al
   1400010d8:	rex.W
   1400010d9:	rex.RX add BYTE PTR [rax+0x1],r8b
   1400010dd:	add    BYTE PTR [rax],al
   1400010df:	add    BYTE PTR [rsp+rdx*4+0x0],bh
   1400010e3:	rex add DWORD PTR [rax],eax
	...
   1400010ee:	add    BYTE PTR [rax],al
   1400010f0:	and    al,BYTE PTR [rip+0x21993]        # 0x140022a89
   1400010f6:	add    BYTE PTR [rax],al
   1400010f8:	ins    BYTE PTR es:[rdi],dx
   1400010f9:	stos   DWORD PTR es:[rdi],eax
	...
   140001102:	add    BYTE PTR [rax],al
   140001104:	add    al,0x0
   140001106:	add    BYTE PTR [rax],al
   140001108:	jl     0x1400010b5
   14000110a:	add    BYTE PTR [rax],al
   14000110c:	and    BYTE PTR [rax],al
   14000110e:	add    BYTE PTR [rax],al
   140001110:	add    BYTE PTR [rax],al
   140001112:	add    BYTE PTR [rax],al
   140001114:	add    DWORD PTR [rax],eax
   140001116:	add    BYTE PTR [rax],al
   140001118:	and    al,BYTE PTR [rip+0x21993]        # 0x140022ab1
   14000111e:	add    BYTE PTR [rax],al
   140001120:	mov    al,0xab
	...
   14000112a:	add    BYTE PTR [rax],al
   14000112c:	add    al,0x0
   14000112e:	add    BYTE PTR [rax],al
   140001130:	shr    BYTE PTR [rbx+0x200000],0x0
   140001137:	add    BYTE PTR [rax],al
   140001139:	add    BYTE PTR [rax],al
   14000113b:	add    BYTE PTR [rcx],al
   14000113d:	add    BYTE PTR [rax],al
   14000113f:	add    BYTE PTR [rdx],ah
   140001141:	add    eax,0x11993
   140001146:	add    BYTE PTR [rax],al
   140001148:	hlt    
   140001149:	stos   DWORD PTR es:[rdi],eax
	...
   140001152:	add    BYTE PTR [rax],al
   140001154:	add    eax,DWORD PTR [rax]
   140001156:	add    BYTE PTR [rax],al
   140001158:	cld    
   140001159:	stos   DWORD PTR es:[rdi],eax
   14000115a:	add    BYTE PTR [rax],al
   14000115c:	and    BYTE PTR [rax],al
   14000115e:	add    BYTE PTR [rax],al
   140001160:	add    BYTE PTR [rax],al
   140001162:	add    BYTE PTR [rax],al
   140001164:	add    DWORD PTR [rax],eax
   140001166:	add    BYTE PTR [rax],al
   140001168:	sub    al,0x97
   14000116a:	add    BYTE PTR [rax+0x1],al
   14000116d:	add    BYTE PTR [rax],al
   14000116f:	add    BYTE PTR [rcx+rcx*4],bh
   140001172:	add    BYTE PTR [rax+0x1],al
   140001175:	add    BYTE PTR [rax],al
   140001177:	add    BYTE PTR [rax+0x1400096],al
   14000117d:	add    BYTE PTR [rax],al
   14000117f:	add    BYTE PTR [rbx+0x74],dh
   140001182:	jb     0x1400011ed
   140001184:	outs   dx,BYTE PTR ds:[rsi]
   140001185:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   14000118a:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000118e:	add    BYTE PTR [ecx+0x6e],ch
   140001192:	jbe    0x1400011f5
   140001194:	ins    BYTE PTR es:[rdi],dx
   140001195:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   14000119d:	and    BYTE PTR [eax+0x6f],dh
   1400011a1:	jae    0x14000120c
   1400011a3:	je     0x14000120e
   1400011a5:	outs   dx,DWORD PTR ds:[rsi]
   1400011a6:	outs   dx,BYTE PTR ds:[rsi]
   1400011a7:	add    BYTE PTR [rax+0x140009b],cl
   1400011ad:	add    BYTE PTR [rax],al
   1400011af:	add    BYTE PTR [rax+0x14000ea],dl
   1400011b5:	add    BYTE PTR [rax],al
   1400011b7:	add    BYTE PTR [rax],dh
   1400011b9:	jmp    0x1400011bb
   1400011bb:	rex add DWORD PTR [rax],eax
   1400011be:	add    BYTE PTR [rax],al
   1400011c0:	push   rsi
   1400011c1:	add    BYTE PTR [rbx+0x0],dl
   1400011c4:	push   rbx
   1400011c5:	add    BYTE PTR [rdi+0x0],bl
   1400011c8:	push   rsp
   1400011c9:	add    BYTE PTR [rdx+0x0],dl
   1400011cc:	add    BYTE PTR [r11+0x0],al
   1400011d0:	add    BYTE PTR [r15+0x0],r11b
   1400011d4:	push   rbx
   1400011d5:	add    BYTE PTR [rbp+0x0],al
   1400011d8:	push   rbx
   1400011d9:	add    BYTE PTR [rbx+0x0],dl
   1400011dc:	rex.WB add BYTE PTR [r15+0x0],cl
   1400011e0:	rex.WRX add BYTE PTR [rax],r8b
	...
   1400011ef:	add    BYTE PTR [rbp+0x0],dl
   1400011f2:	jae    0x1400011f4
   1400011f4:	(bad)  
   1400011f5:	add    BYTE PTR [rdi+0x0],ah
   1400011f8:	add    BYTE PTR gs:[rdx],bh
   1400011fb:	add    BYTE PTR [rax],ah
   1400011fd:	add    BYTE PTR [rsi+0x0],dh
   140001200:	jae    0x140001202
   140001202:	jae    0x140001204
   140001204:	je     0x140001206
   140001206:	jb     0x140001208
   140001208:	(bad)  
   140001209:	add    BYTE PTR [rbx+0x0],ah
   14000120c:	add    BYTE PTR gs:[rax],ah
   14000120f:	add    BYTE PTR [rbx+0x0],bl
   140001212:	sub    eax,0x65006800
   140001217:	add    BYTE PTR [rax+rax*1+0x70],ch
   14000121b:	add    BYTE PTR [rax],ah
   14000121d:	add    BYTE PTR [rax+rax*1],bh
   140001220:	ins    DWORD PTR es:[rdi],dx
   140001221:	add    BYTE PTR [rdi+0x0],ch
   140001224:	add    BYTE PTR fs:[rbp+0x0],dh
   140001228:	ins    BYTE PTR es:[rdi],dx
   140001229:	add    BYTE PTR [rbp+0x0],ah
   14000122c:	jae    0x14000122e
   14000122e:	and    BYTE PTR [rax],al
   140001230:	jl     0x140001232
   140001232:	and    BYTE PTR [rax],al
   140001234:	ins    BYTE PTR es:[rdi],dx
   140001235:	add    BYTE PTR [rbp+0x0],ah
   140001238:	jbe    0x14000123a
   14000123a:	add    BYTE PTR gs:[rax+rax*1+0x73],ch
   14000123f:	add    BYTE PTR [rax],ah
   140001241:	add    BYTE PTR [rax+rax*1+0x20],bh
   140001245:	add    BYTE PTR [rcx+0x0],ah
   140001248:	ins    BYTE PTR es:[rdi],dx
   140001249:	add    BYTE PTR [rax+rax*1+0x3e],ch
   14000124d:	add    BYTE PTR [rbp+0x0],bl
   140001250:	and    BYTE PTR [rax],al
   140001252:	pop    rbx
   140001253:	add    BYTE PTR [rip+0x20006c00],ch        # 0x160007e59
   140001259:	add    BYTE PTR [rax+rax*1],bh
   14000125c:	ins    BYTE PTR es:[rdi],dx
   14000125d:	add    BYTE PTR [rbp+0x0],ah
   140001260:	jbe    0x140001262
   140001262:	add    BYTE PTR gs:[rax+rax*1+0x3e],ch
   140001267:	add    BYTE PTR [rbp+0x0],bl
   14000126a:	and    BYTE PTR [rax],al
   14000126c:	pop    rbx
   14000126d:	add    BYTE PTR [rip+0x20006600],ch        # 0x160007873
   140001273:	add    BYTE PTR [rax+rax*1],bh
   140001276:	data16 add BYTE PTR [rax+rax*1+0x61],ch
   14000127b:	add    BYTE PTR [rdi+0x0],ah
   14000127e:	jae    0x140001280
   140001280:	add    BYTE PTR ds:[rbp+0x0],bl
   140001284:	or     al,BYTE PTR [rax]
   140001286:	and    BYTE PTR [rax],al
   140001288:	and    BYTE PTR [rax],al
   14000128a:	and    BYTE PTR [rax],al
   14000128c:	and    BYTE PTR [rax],al
   14000128e:	and    BYTE PTR [rax],al
   140001290:	and    BYTE PTR [rax],al
   140001292:	and    BYTE PTR [rax],al
   140001294:	and    BYTE PTR [rax],al
   140001296:	and    BYTE PTR [rax],al
   140001298:	and    BYTE PTR [rax],al
   14000129a:	and    BYTE PTR [rax],al
   14000129c:	and    BYTE PTR [rax],al
   14000129e:	and    BYTE PTR [rax],al
   1400012a0:	and    BYTE PTR [rax],al
   1400012a2:	and    BYTE PTR [rax],al
   1400012a4:	and    BYTE PTR [rax],al
   1400012a6:	pop    rbx
   1400012a7:	add    BYTE PTR [rip+0x3c002b00],ch        # 0x17c003dad
   1400012ad:	add    BYTE PTR [rbp+0x0],ch
   1400012b0:	outs   dx,DWORD PTR ds:[rsi]
   1400012b1:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400012b5:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400012b9:	add    BYTE PTR [rsi],bh
   1400012bb:	add    BYTE PTR [rbp+0x0],bl
   1400012be:	and    BYTE PTR [rax],al
   1400012c0:	pop    rbx
   1400012c1:	add    BYTE PTR [rip+0x69002b00],ch        # 0x1a9003dc7
   1400012c7:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400012cb:	add    BYTE PTR [rsi+0x0],ch
   1400012ce:	je     0x1400012d0
   1400012d0:	pop    rbp
   1400012d1:	add    BYTE PTR [rax],ah
   1400012d3:	add    BYTE PTR [rbx+0x0],bl
   1400012d6:	sub    eax,0x70002b00
   1400012db:	add    BYTE PTR [rcx+0x0],ch
   1400012de:	add    BYTE PTR fs:[rax],ah
   1400012e1:	add    BYTE PTR [rax+rax*1],bh
   1400012e4:	jo     0x1400012e6
   1400012e6:	jb     0x1400012e8
   1400012e8:	outs   dx,DWORD PTR ds:[rsi]
   1400012e9:	add    BYTE PTR [rbx+0x0],ah
   1400012ec:	add    BYTE PTR gs:[rbx+0x0],dh
   1400012f0:	jae    0x1400012f2
   1400012f2:	and    BYTE PTR [rax],al
   1400012f4:	imul   eax,DWORD PTR [rax],0x3e0064
   1400012fa:	pop    rbp
   1400012fb:	add    BYTE PTR [rax],ah
   1400012fd:	add    BYTE PTR [rbx+0x0],bl
   140001300:	sub    eax,0x74002b00
   140001305:	add    BYTE PTR [rcx+0x0],ch
   140001308:	add    BYTE PTR fs:[rax],ah
   14000130b:	add    BYTE PTR [rax+rax*1],bh
   14000130e:	je     0x140001310
   140001310:	push   0x65007200
   140001315:	add    BYTE PTR [rcx+0x0],ah
   140001318:	add    BYTE PTR fs:[rax],ah
   14000131b:	add    BYTE PTR [rcx+0x0],ch
   14000131e:	add    BYTE PTR fs:[rsi],bh
   140001321:	add    BYTE PTR [rbp+0x0],bl
   140001324:	or     al,BYTE PTR [rax]
   140001326:	and    BYTE PTR [rax],al
   140001328:	and    BYTE PTR [rax],al
   14000132a:	and    BYTE PTR [rax],al
   14000132c:	and    BYTE PTR [rax],al
   14000132e:	and    BYTE PTR [rax],al
   140001330:	and    BYTE PTR [rax],al
   140001332:	and    BYTE PTR [rax],al
   140001334:	and    BYTE PTR [rax],al
   140001336:	and    BYTE PTR [rax],al
   140001338:	and    BYTE PTR [rax],al
   14000133a:	and    BYTE PTR [rax],al
   14000133c:	and    BYTE PTR [rax],al
   14000133e:	and    BYTE PTR [rax],al
   140001340:	and    BYTE PTR [rax],al
   140001342:	and    BYTE PTR [rax],al
   140001344:	and    BYTE PTR [rax],al
   140001346:	pop    rbx
   140001347:	add    BYTE PTR [rip+0x74006500],ch        # 0x1b400784d
   14000134d:	add    BYTE PTR [rax+rax*1+0x20],ch
   140001351:	add    BYTE PTR [rax+rax*1],bh
   140001354:	imul   eax,DWORD PTR [rax],0x70006e
   14000135a:	jne    0x14000135c
   14000135c:	je     0x14000135e
   14000135e:	and    BYTE PTR [rax],al
   140001360:	add    BYTE PTR [r8+rax*1+0x4c],r10b
   140001365:	add    BYTE PTR [rax],ah
   140001367:	add    BYTE PTR [rsi+0x0],ah
   14000136a:	imul   eax,DWORD PTR [rax],0x65006c
   140001370:	add    BYTE PTR ds:[rbp+0x0],bl
   140001374:	and    BYTE PTR [rax],al
   140001376:	pop    rbx
   140001377:	add    BYTE PTR [rip+0x20006f00],ch        # 0x16000827d
   14000137d:	add    BYTE PTR [rax+rax*1],bh
   140001380:	outs   dx,DWORD PTR ds:[rsi]
   140001381:	add    BYTE PTR [rbp+0x0],dh
   140001384:	je     0x140001386
   140001386:	jo     0x140001388
   140001388:	jne    0x14000138a
   14000138a:	je     0x14000138c
   14000138c:	and    BYTE PTR [rax],al
   14000138e:	push   rsp
   14000138f:	add    BYTE PTR [rax+0x0],bl
   140001392:	push   rsp
   140001393:	add    BYTE PTR [rax],ah
   140001395:	add    BYTE PTR [rsi+0x0],al
   140001398:	imul   eax,DWORD PTR [rax],0x65006c
   14000139e:	add    BYTE PTR ds:[rbp+0x0],bl
   1400013a2:	or     al,BYTE PTR [rax]
   1400013a4:	or     al,BYTE PTR [rax]
   1400013a6:	and    BYTE PTR [rax],al
   1400013a8:	and    BYTE PTR [rax],al
   1400013aa:	sub    eax,0x20006600
   1400013af:	add    BYTE PTR [rcx+0x0],ah
   1400013b2:	outs   dx,BYTE PTR ds:[rsi]
   1400013b3:	add    BYTE PTR [rax+rax*1+0x20],ah
   1400013b7:	add    BYTE PTR [rip+0x3c002b00],ch        # 0x17c003ebd
   1400013bd:	add    BYTE PTR [rbp+0x0],ch
   1400013c0:	outs   dx,DWORD PTR ds:[rsi]
   1400013c1:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400013c5:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400013c9:	add    BYTE PTR [rsi],bh
   1400013cb:	add    BYTE PTR [rdx],bh
   1400013cd:	add    BYTE PTR [rax],ah
   1400013cf:	add    BYTE PTR [rdx+0x0],ah
   1400013d2:	outs   dx,DWORD PTR ds:[rsi]
   1400013d3:	add    BYTE PTR [rax+rax*1+0x68],dh
   1400013d7:	add    BYTE PTR [rax],ah
   1400013d9:	add    BYTE PTR [rbp+0x0],ah
   1400013dc:	data16 add BYTE PTR [rsi+0x0],ah
   1400013e0:	add    BYTE PTR gs:[rbx+0x0],ah
   1400013e4:	je     0x1400013e6
   1400013e6:	and    BYTE PTR [rax],al
   1400013e8:	ja     0x1400013ea
   1400013ea:	push   0x63006900
   1400013ef:	add    BYTE PTR [rax+0x0],ch
   1400013f2:	and    BYTE PTR [rax],al
   1400013f4:	ins    DWORD PTR es:[rdi],dx
   1400013f5:	add    BYTE PTR [rdi+0x0],ch
   1400013f8:	add    BYTE PTR fs:[rbp+0x0],dh
   1400013fc:	ins    BYTE PTR es:[rdi],dx
   1400013fd:	add    BYTE PTR [rbp+0x0],ah
   140001400:	jae    0x140001402
   140001402:	and    BYTE PTR [rax],al
   140001404:	ja     0x140001406
   140001406:	imul   eax,DWORD PTR [rax],0x6c006c
   14000140c:	and    BYTE PTR [rax],al
   14000140e:	(bad)  
   14000140f:	add    BYTE PTR [rbp+0x0],ah
   140001412:	and    BYTE PTR [rax],al
   140001414:	je     0x140001416
   140001416:	jb     0x140001418
   140001418:	(bad)  
   140001419:	add    BYTE PTR [rbx+0x0],ah
   14000141c:	add    BYTE PTR gs:[rax+rax*1+0x3b],ah
   140001421:	add    BYTE PTR [rdx],cl
   140001423:	add    BYTE PTR [rax],ah
   140001425:	add    BYTE PTR [rax],ah
   140001427:	add    BYTE PTR [rax],ah
   140001429:	add    BYTE PTR [rax],ah
   14000142b:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000142f:	add    BYTE PTR [rbp+0x0],ah
   140001432:	and    BYTE PTR [rax],al
   140001434:	outs   dx,DWORD PTR ds:[rsi]
   140001435:	add    BYTE PTR [rdx+0x0],dh
   140001438:	add    BYTE PTR fs:[rbp+0x0],ah
   14000143c:	jb     0x14000143e
   14000143e:	and    BYTE PTR [rax],al
   140001440:	imul   eax,DWORD PTR [rax],0x20006e
   140001446:	ja     0x140001448
   140001448:	push   0x63006900
   14000144d:	add    BYTE PTR [rax+0x0],ch
   140001450:	and    BYTE PTR [rax],al
   140001452:	je     0x140001454
   140001454:	push   0x79006500
   140001459:	add    BYTE PTR [rax],ah
   14000145b:	add    BYTE PTR [rcx+0x0],ah
   14000145e:	jb     0x140001460
   140001460:	add    BYTE PTR gs:[rax],ah
   140001463:	add    BYTE PTR [rbx+0x0],dh
   140001466:	jo     0x140001468
   140001468:	add    BYTE PTR gs:[rbx+0x0],ah
   14000146c:	imul   eax,DWORD PTR [rax],0x690066
   140001472:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140001477:	add    BYTE PTR [rdi+0x0],dh
   14000147a:	imul   eax,DWORD PTR [rax],0x6c006c
   140001480:	and    BYTE PTR [rax],al
   140001482:	add    BYTE PTR gs:[rsi+0x0],ah
   140001486:	data16 add BYTE PTR [rbp+0x0],ah
   14000148a:	movsxd eax,DWORD PTR [rax]
   14000148c:	je     0x14000148e
   14000148e:	and    BYTE PTR [rax],al
   140001490:	ja     0x140001492
   140001492:	push   0x63006900
   140001497:	add    BYTE PTR [rax+0x0],ch
   14000149a:	and    BYTE PTR [rax],al
   14000149c:	ins    DWORD PTR es:[rdi],dx
   14000149d:	add    BYTE PTR [rdi+0x0],ch
   1400014a0:	add    BYTE PTR fs:[rbp+0x0],dh
   1400014a4:	ins    BYTE PTR es:[rdi],dx
   1400014a5:	add    BYTE PTR [rbp+0x0],ah
   1400014a8:	jae    0x1400014aa
   1400014aa:	and    BYTE PTR [rax],al
   1400014ac:	(bad)  
   1400014ad:	add    BYTE PTR [rdx+0x0],dh
   1400014b0:	add    BYTE PTR gs:[rax],ah
   1400014b3:	add    BYTE PTR [rbp+0x0],ch
   1400014b6:	(bad)  
   1400014b7:	add    BYTE PTR [rbx+0x0],dh
   1400014ba:	imul   eax,DWORD PTR [rax],0x65
   1400014bd:	add    BYTE PTR [rax+rax*1+0x3b],ah
   1400014c1:	add    BYTE PTR [rdx],cl
   1400014c3:	add    BYTE PTR [rax],ah
   1400014c5:	add    BYTE PTR [rax],ah
   1400014c7:	add    BYTE PTR [rax],ah
   1400014c9:	add    BYTE PTR [rax],ah
   1400014cb:	add    BYTE PTR [rcx+0x0],bh
   1400014ce:	outs   dx,DWORD PTR ds:[rsi]
   1400014cf:	add    BYTE PTR [rbp+0x0],dh
   1400014d2:	and    BYTE PTR [rax],al
   1400014d4:	movsxd eax,DWORD PTR [rax]
   1400014d6:	(bad)  
   1400014d7:	add    BYTE PTR [rsi+0x0],ch
   1400014da:	and    BYTE PTR [rax],al
   1400014dc:	ins    DWORD PTR es:[rdi],dx
   1400014dd:	add    BYTE PTR [rcx+0x0],ah
   1400014e0:	jae    0x1400014e2
   1400014e2:	imul   eax,DWORD PTR [rax],0x20
   1400014e5:	add    BYTE PTR [rcx+0x0],ah
   1400014e8:	ins    BYTE PTR es:[rdi],dx
   1400014e9:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400014ed:	add    BYTE PTR [rax],ch
   1400014ef:	add    BYTE PTR [rip+0x20006600],ch        # 0x160007af5
   1400014f5:	add    BYTE PTR [rax],dh
   1400014f7:	add    BYTE PTR [rcx],ch
   1400014f9:	add    BYTE PTR [rax],ah
   1400014fb:	add    BYTE PTR [rcx+0x0],ah
   1400014fe:	outs   dx,BYTE PTR ds:[rsi]
   1400014ff:	add    BYTE PTR [rax+rax*1+0x20],ah
   140001503:	add    BYTE PTR [rax+rax*1+0x68],dh
   140001507:	add    BYTE PTR [rbp+0x0],ah
   14000150a:	outs   dx,BYTE PTR ds:[rsi]
   14000150b:	add    BYTE PTR [rax],ah
   14000150d:	add    BYTE PTR [rcx+0x0],ah
   140001510:	add    BYTE PTR fs:[rax+rax*1+0x20],ah
   140001515:	add    BYTE PTR [rbx+0x0],dh
   140001518:	jo     0x14000151a
   14000151a:	add    BYTE PTR gs:[rbx+0x0],ah
   14000151e:	imul   eax,DWORD PTR [rax],0x690066
   140001524:	movsxd eax,DWORD PTR [rax]
   140001526:	and    BYTE PTR [rax],al
   140001528:	ins    DWORD PTR es:[rdi],dx
   140001529:	add    BYTE PTR [rdi+0x0],ch
   14000152c:	add    BYTE PTR fs:[rbp+0x0],dh
   140001530:	ins    BYTE PTR es:[rdi],dx
   140001531:	add    BYTE PTR [rbp+0x0],ah
   140001534:	jae    0x140001536
   140001536:	and    BYTE PTR [rax],al
   140001538:	(bad)  
   140001539:	add    BYTE PTR [rcx+0x0],bh
   14000153c:	and    BYTE PTR [rax],al
   14000153e:	outs   dx,BYTE PTR ds:[rsi]
   14000153f:	add    BYTE PTR [rcx+0x0],ah
   140001542:	ins    DWORD PTR es:[rdi],dx
   140001543:	add    BYTE PTR [rbp+0x0],ah
   140001546:	and    BYTE PTR [rax],al
   140001548:	sub    BYTE PTR [rax],al
   14000154a:	sub    eax,DWORD PTR [rax]
   14000154c:	movsxd eax,DWORD PTR [rax]
   14000154e:	outs   dx,DWORD PTR ds:[rsi]
   14000154f:	add    BYTE PTR [rdi+0x0],ch
   140001552:	jb     0x140001554
   140001554:	add    BYTE PTR fs:[rax],ah
   140001557:	add    BYTE PTR [rbx],ch
   140001559:	add    BYTE PTR [rax+0x0],bh
   14000155c:	ins    DWORD PTR es:[rdi],dx
   14000155d:	add    BYTE PTR [rax+rax*1+0x29],ch
   140001561:	add    BYTE PTR [rdx],cl
   140001563:	add    BYTE PTR [rdx],cl
   140001565:	add    BYTE PTR [rax],ah
   140001567:	add    BYTE PTR [rax],ah
   140001569:	add    BYTE PTR [rip+0x69007400],ch        # 0x1a900896f
   14000156f:	add    BYTE PTR [rax+rax*1+0x2f],ah
   140001573:	add    BYTE PTR [rip+0x69007000],ch        # 0x1a9008579
   140001579:	add    BYTE PTR [rax+rax*1+0x3a],ah
   14000157d:	add    BYTE PTR [rax],ah
   14000157f:	add    BYTE PTR [rdx+0x0],ah
   140001582:	jns    0x140001584
   140001584:	and    BYTE PTR [rax],al
   140001586:	add    BYTE PTR fs:[rbp+0x0],ah
   14000158a:	data16 add BYTE PTR [rcx+0x0],ah
   14000158e:	jne    0x140001590
   140001590:	ins    BYTE PTR es:[rdi],dx
   140001591:	add    BYTE PTR [rax+rax*1+0x20],dh
   140001595:	add    BYTE PTR [rcx+0x0],ah
   140001598:	ins    BYTE PTR es:[rdi],dx
   140001599:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000159d:	add    BYTE PTR [rax+0x0],dh
   1400015a0:	jb     0x1400015a2
   1400015a2:	outs   dx,DWORD PTR ds:[rsi]
   1400015a3:	add    BYTE PTR [rbx+0x0],ah
   1400015a6:	add    BYTE PTR gs:[rbx+0x0],dh
   1400015aa:	jae    0x1400015ac
   1400015ac:	and    BYTE PTR [rax],al
   1400015ae:	rex.WB add BYTE PTR [r8+rax*1+0x73],al
   1400015b3:	add    BYTE PTR [rax],ah
   1400015b5:	add    BYTE PTR [rax],ch
   1400015b7:	add    BYTE PTR [rax+0x0],dh
   1400015ba:	imul   eax,DWORD PTR [rax],0x290064
   1400015c0:	and    BYTE PTR [rax],al
   1400015c2:	(bad)  
   1400015c3:	add    BYTE PTR [rsi+0x0],ch
   1400015c6:	add    BYTE PTR fs:[rax],ah
   1400015c9:	add    BYTE PTR [rax+rax*1+0x68],dh
   1400015cd:	add    BYTE PTR [rdx+0x0],dh
   1400015d0:	add    BYTE PTR gs:[rcx+0x0],ah
   1400015d4:	add    BYTE PTR fs:[rax],ah
   1400015d7:	add    BYTE PTR [rcx+0x0],cl
   1400015da:	add    BYTE PTR [rbx+0x0],r14b
   1400015de:	and    BYTE PTR [rax],al
   1400015e0:	sub    BYTE PTR [rax],al
   1400015e2:	je     0x1400015e4
   1400015e4:	imul   eax,DWORD PTR [rax],0x290064
   1400015ea:	and    BYTE PTR [rax],al
   1400015ec:	(bad)  
   1400015ed:	add    BYTE PTR [rdx+0x0],dh
   1400015f0:	add    BYTE PTR gs:[rax],ah
   1400015f3:	add    BYTE PTR [rbp+0x0],ah
   1400015f6:	outs   dx,BYTE PTR ds:[rsi]
   1400015f7:	add    BYTE PTR [rcx+0x0],ah
   1400015fa:	(bad)  
   1400015fb:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400015ff:	add    BYTE PTR [rax+rax*1+0x3b],ah
   140001603:	add    BYTE PTR [rdx],cl
   140001605:	add    BYTE PTR [rax],ah
   140001607:	add    BYTE PTR [rax],ah
   140001609:	add    BYTE PTR [rax],ah
   14000160b:	add    BYTE PTR [rax],ah
   14000160d:	add    BYTE PTR [rcx+0x0],ah
   140001610:	jae    0x140001612
   140001612:	je     0x140001614
   140001614:	add    BYTE PTR gs:[rdx+0x0],dh
   140001618:	imul   eax,DWORD PTR [rax],0x6b0073
   14000161e:	and    BYTE PTR [rax],al
   140001620:	sub    BYTE PTR [rax],al
   140001622:	sub    al,BYTE PTR [rax]
   140001624:	sub    DWORD PTR [rax],eax
   140001626:	and    BYTE PTR [rax],al
   140001628:	movsxd eax,DWORD PTR [rax]
   14000162a:	(bad)  
   14000162b:	add    BYTE PTR [rsi+0x0],ch
   14000162e:	and    BYTE PTR [rax],al
   140001630:	(bad)  
   140001631:	add    BYTE PTR [rbp+0x0],ah
   140001634:	and    BYTE PTR [rax],al
   140001636:	jne    0x140001638
   140001638:	jae    0x14000163a
   14000163a:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000163f:	add    BYTE PTR [rcx+0x0],ah
   140001642:	jae    0x140001644
   140001644:	and    BYTE PTR [rax],al
   140001646:	(bad)  
   140001647:	add    BYTE PTR [rax],ah
   140001649:	add    BYTE PTR [rdi+0x0],dh
   14000164c:	imul   eax,DWORD PTR [rax],0x64006c
   140001652:	movsxd eax,DWORD PTR [rax]
   140001654:	(bad)  
   140001655:	add    BYTE PTR [rdx+0x0],dh
   140001658:	add    BYTE PTR fs:[rax],ah
   14000165b:	add    BYTE PTR [rsi+0x0],ah
   14000165e:	outs   dx,DWORD PTR ds:[rsi]
   14000165f:	add    BYTE PTR [rdx+0x0],dh
   140001662:	and    BYTE PTR [rax],al
   140001664:	and    al,BYTE PTR [rax]
   140001666:	(bad)  
   140001667:	add    BYTE PTR [rsi+0x0],ch
   14000166a:	jns    0x14000166c
   14000166c:	and    al,BYTE PTR [rax]
   14000166e:	and    BYTE PTR [rax],al
   140001670:	jo     0x140001672
   140001672:	jb     0x140001674
   140001674:	outs   dx,DWORD PTR ds:[rsi]
   140001675:	add    BYTE PTR [rbx+0x0],ah
   140001678:	add    BYTE PTR gs:[rbx+0x0],dh
   14000167c:	jae    0x14000167e
   14000167e:	and    BYTE PTR [rax],al
   140001680:	outs   dx,DWORD PTR ds:[rsi]
   140001681:	add    BYTE PTR [rdx+0x0],dh
   140001684:	and    BYTE PTR [rax],al
   140001686:	je     0x140001688
   140001688:	push   0x65007200
   14000168d:	add    BYTE PTR [rcx+0x0],ah
   140001690:	add    BYTE PTR fs:[rbx],bh
   140001693:	add    BYTE PTR [rdx],cl
   140001695:	add    BYTE PTR [rax],ah
   140001697:	add    BYTE PTR [rax],ah
   140001699:	add    BYTE PTR [rax],ah
   14000169b:	add    BYTE PTR [rax],ah
   14000169d:	add    BYTE PTR [rax+rax*1+0x68],dh
   1400016a1:	add    BYTE PTR [rbp+0x0],ah
   1400016a4:	and    BYTE PTR [rax],al
   1400016a6:	outs   dx,DWORD PTR ds:[rsi]
   1400016a7:	add    BYTE PTR [rdx+0x0],dh
   1400016aa:	add    BYTE PTR fs:[rbp+0x0],ah
   1400016ae:	jb     0x1400016b0
   1400016b0:	and    BYTE PTR [rax],al
   1400016b2:	imul   eax,DWORD PTR [rax],0x20006e
   1400016b8:	ja     0x1400016ba
   1400016ba:	push   0x63006900
   1400016bf:	add    BYTE PTR [rax+0x0],ch
   1400016c2:	and    BYTE PTR [rax],al
   1400016c4:	je     0x1400016c6
   1400016c6:	push   0x79006500
   1400016cb:	add    BYTE PTR [rax],ah
   1400016cd:	add    BYTE PTR [rcx+0x0],ah
   1400016d0:	jb     0x1400016d2
   1400016d2:	add    BYTE PTR gs:[rax],ah
   1400016d5:	add    BYTE PTR [rax+0x0],dh
   1400016d8:	jb     0x1400016da
   1400016da:	outs   dx,DWORD PTR ds:[rsi]
   1400016db:	add    BYTE PTR [rsi+0x0],dh
   1400016de:	imul   eax,DWORD PTR [rax],0x650064
   1400016e4:	add    BYTE PTR fs:[rax],ah
   1400016e7:	add    BYTE PTR [rdi+0x0],dh
   1400016ea:	imul   eax,DWORD PTR [rax],0x6c006c
   1400016f0:	and    BYTE PTR [rax],al
   1400016f2:	add    BYTE PTR gs:[rsi+0x0],ah
   1400016f6:	data16 add BYTE PTR [rbp+0x0],ah
   1400016fa:	movsxd eax,DWORD PTR [rax]
   1400016fc:	je     0x1400016fe
   1400016fe:	and    BYTE PTR [rax],al
   140001700:	ja     0x140001702
   140001702:	push   0x63006900
   140001707:	add    BYTE PTR [rax+0x0],ch
   14000170a:	and    BYTE PTR [rax],al
   14000170c:	je     0x14000170e
   14000170e:	jb     0x140001710
   140001710:	(bad)  
   140001711:	add    BYTE PTR [rbx+0x0],ah
   140001714:	add    BYTE PTR gs:[rbx+0x0],dh
   140001718:	and    BYTE PTR [rax],al
   14000171a:	(bad)  
   14000171b:	add    BYTE PTR [rdx+0x0],dh
   14000171e:	add    BYTE PTR gs:[rax],ah
   140001721:	add    BYTE PTR [rcx+0x0],ch
   140001724:	outs   dx,BYTE PTR ds:[rsi]
   140001725:	add    BYTE PTR [rbx+0x0],ah
   140001728:	ins    BYTE PTR es:[rdi],dx
   140001729:	add    BYTE PTR [rbp+0x0],dh
   14000172c:	add    BYTE PTR fs:[rbp+0x0],ah
   140001730:	add    BYTE PTR fs:[rbx],bh
   140001733:	add    BYTE PTR [rdx],cl
   140001735:	add    BYTE PTR [rax],ah
   140001737:	add    BYTE PTR [rax],ah
   140001739:	add    BYTE PTR [rax],ah
   14000173b:	add    BYTE PTR [rax],ah
   14000173d:	add    BYTE PTR [rcx+0x0],bh
   140001740:	outs   dx,DWORD PTR ds:[rsi]
   140001741:	add    BYTE PTR [rbp+0x0],dh
   140001744:	and    BYTE PTR [rax],al
   140001746:	movsxd eax,DWORD PTR [rax]
   140001748:	(bad)  
   140001749:	add    BYTE PTR [rsi+0x0],ch
   14000174c:	and    BYTE PTR [rax],al
   14000174e:	ins    DWORD PTR es:[rdi],dx
   14000174f:	add    BYTE PTR [rcx+0x0],ah
   140001752:	jae    0x140001754
   140001754:	imul   eax,DWORD PTR [rax],0x20
   140001757:	add    BYTE PTR [rcx+0x0],ah
   14000175a:	ins    BYTE PTR es:[rdi],dx
   14000175b:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000175f:	add    BYTE PTR [rax],ch
   140001761:	add    BYTE PTR [rip+0x69007000],ch        # 0x1a9008767
   140001767:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000176b:	add    BYTE PTR [rdx],ch
   14000176d:	add    BYTE PTR [rcx],ch
   14000176f:	add    BYTE PTR [rax],ah
   140001771:	add    BYTE PTR [rcx+0x0],ah
   140001774:	outs   dx,BYTE PTR ds:[rsi]
   140001775:	add    BYTE PTR [rax+rax*1+0x20],ah
   140001779:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000177d:	add    BYTE PTR [rbp+0x0],ah
   140001780:	outs   dx,BYTE PTR ds:[rsi]
   140001781:	add    BYTE PTR [rax],ah
   140001783:	add    BYTE PTR [rbp+0x0],ah
   140001786:	outs   dx,BYTE PTR ds:[rsi]
   140001787:	add    BYTE PTR [rcx+0x0],ah
   14000178a:	(bad)  
   14000178b:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000178f:	add    BYTE PTR [rax],ah
   140001791:	add    BYTE PTR [rbx+0x0],dh
   140001794:	jo     0x140001796
   140001796:	add    BYTE PTR gs:[rbx+0x0],ah
   14000179a:	imul   eax,DWORD PTR [rax],0x690066
   1400017a0:	movsxd eax,DWORD PTR [rax]
   1400017a2:	and    BYTE PTR [rax],al
   1400017a4:	outs   dx,DWORD PTR ds:[rsi]
   1400017a5:	add    BYTE PTR [rsi+0x0],ch
   1400017a8:	add    BYTE PTR gs:[rbx+0x0],dh
   1400017ac:	and    BYTE PTR [rax],al
   1400017ae:	sub    BYTE PTR [rax],al
   1400017b0:	sub    eax,DWORD PTR [rax]
   1400017b2:	jo     0x1400017b4
   1400017b4:	imul   eax,DWORD PTR [rax],0x200064
   1400017ba:	xor    BYTE PTR [rax],al
   1400017bc:	js     0x1400017be
   1400017be:	add    BYTE PTR gs:[rax],bh
   1400017c1:	add    BYTE PTR [rbx+0x0],ah
   1400017c4:	sub    DWORD PTR [rax],eax
   1400017c6:	or     al,BYTE PTR [rax]
   1400017c8:	or     al,BYTE PTR [rax]
   1400017ca:	and    BYTE PTR [rax],al
   1400017cc:	and    BYTE PTR [rax],al
   1400017ce:	sub    eax,0x3a006f00
   1400017d3:	add    BYTE PTR [rax],ah
   1400017d5:	add    BYTE PTR [rax+0x0],dh
   1400017d8:	jb     0x1400017da
   1400017da:	outs   dx,DWORD PTR ds:[rsi]
   1400017db:	add    BYTE PTR [rsi+0x0],dh
   1400017de:	imul   eax,DWORD PTR [rax],0x650064
   1400017e4:	jae    0x1400017e6
   1400017e6:	and    BYTE PTR [rax],al
   1400017e8:	(bad)  
   1400017e9:	add    BYTE PTR [rax+rax*1+0x74],ch
   1400017ed:	add    BYTE PTR [rbp+0x0],ah
   1400017f0:	jb     0x1400017f2
   1400017f2:	outs   dx,BYTE PTR ds:[rsi]
   1400017f3:	add    BYTE PTR [rcx+0x0],ah
   1400017f6:	je     0x1400017f8
   1400017f8:	add    BYTE PTR gs:[rax],ah
   1400017fb:	add    BYTE PTR [rdi+0x0],ch
   1400017fe:	jne    0x140001800
   140001800:	je     0x140001802
   140001802:	jo     0x140001804
   140001804:	jne    0x140001806
   140001806:	je     0x140001808
   140001808:	and    BYTE PTR [rax],al
   14000180a:	jae    0x14000180c
   14000180c:	je     0x14000180e
   14000180e:	jb     0x140001810
   140001810:	add    BYTE PTR gs:[rcx+0x0],ah
   140001814:	ins    DWORD PTR es:[rdi],dx
   140001815:	add    BYTE PTR [rsi],ch
   140001817:	add    BYTE PTR [rax],ah
   140001819:	add    BYTE PTR [rcx+0x0],cl
   14000181c:	data16 add BYTE PTR [rax],ah
   14000181f:	add    BYTE PTR [rcx+0x0],bh
   140001822:	outs   dx,DWORD PTR ds:[rsi]
   140001823:	add    BYTE PTR [rbp+0x0],dh
   140001826:	and    BYTE PTR [rax],al
   140001828:	ja     0x14000182a
   14000182a:	(bad)  
   14000182b:	add    BYTE PTR [rsi+0x0],ch
   14000182e:	je     0x140001830
   140001830:	and    BYTE PTR [rax],al
   140001832:	je     0x140001834
   140001834:	outs   dx,DWORD PTR ds:[rsi]
   140001835:	add    BYTE PTR [rax],ah
   140001837:	add    BYTE PTR [rbp+0x0],ah
   14000183a:	js     0x14000183c
   14000183c:	movsxd eax,DWORD PTR [rax]
   14000183e:	ins    BYTE PTR es:[rdi],dx
   14000183f:	add    BYTE PTR [rbp+0x0],dh
   140001842:	add    BYTE PTR fs:[rbp+0x0],ah
   140001846:	and    BYTE PTR [rax],al
   140001848:	movsxd eax,DWORD PTR [rax]
   14000184a:	outs   dx,DWORD PTR ds:[rsi]
   14000184b:	add    BYTE PTR [rsi+0x0],ch
   14000184e:	jae    0x140001850
   140001850:	outs   dx,DWORD PTR ds:[rsi]
   140001851:	add    BYTE PTR [rax+rax*1+0x65],ch
   140001855:	add    BYTE PTR [rdx],cl
   140001857:	add    BYTE PTR [rax],ah
   140001859:	add    BYTE PTR [rax],ah
   14000185b:	add    BYTE PTR [rax],ah
   14000185d:	add    BYTE PTR [rax],ah
   14000185f:	add    BYTE PTR [rdi+0x0],ch
   140001862:	jne    0x140001864
   140001864:	je     0x140001866
   140001866:	jo     0x140001868
   140001868:	jne    0x14000186a
   14000186a:	je     0x14000186c
   14000186c:	and    BYTE PTR [rax],al
   14000186e:	(bad)  
   14000186f:	add    BYTE PTR [rsi+0x0],ch
   140001872:	add    BYTE PTR fs:[rax],ah
   140001875:	add    BYTE PTR [rdx+0x0],ch
   140001878:	jne    0x14000187a
   14000187a:	jae    0x14000187c
   14000187c:	je     0x14000187e
   14000187e:	and    BYTE PTR [rax],al
   140001880:	ja     0x140001882
   140001882:	jb     0x140001884
   140001884:	imul   eax,DWORD PTR [rax],0x650074
   14000188a:	and    BYTE PTR [rax],al
   14000188c:	je     0x14000188e
   14000188e:	outs   dx,DWORD PTR ds:[rsi]
   14000188f:	add    BYTE PTR [rax],ah
   140001891:	add    BYTE PTR [rcx+0x0],ah
   140001894:	and    BYTE PTR [rax],al
   140001896:	data16 add BYTE PTR [rcx+0x0],ch
   14000189a:	ins    BYTE PTR es:[rdi],dx
   14000189b:	add    BYTE PTR [rbp+0x0],ah
   14000189e:	sub    al,0x0
   1400018a0:	and    BYTE PTR [rax],al
   1400018a2:	jb     0x1400018a4
   1400018a4:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
   1400018a9:	add    BYTE PTR [rdx+0x0],dh
   1400018ac:	add    BYTE PTR gs:[rbx+0x0],ah
   1400018b0:	je     0x1400018b2
   1400018b2:	and    BYTE PTR [rax],al
   1400018b4:	outs   dx,DWORD PTR ds:[rsi]
   1400018b5:	add    BYTE PTR [rbp+0x0],dh
   1400018b8:	je     0x1400018ba
   1400018ba:	jo     0x1400018bc
   1400018bc:	jne    0x1400018be
   1400018be:	je     0x1400018c0
   1400018c0:	and    BYTE PTR [rax],al
   1400018c2:	je     0x1400018c4
   1400018c4:	outs   dx,DWORD PTR ds:[rsi]
   1400018c5:	add    BYTE PTR [rax],ah
   1400018c7:	add    BYTE PTR [rcx+0x0],ah
   1400018ca:	and    BYTE PTR [rax],al
   1400018cc:	data16 add BYTE PTR [rcx+0x0],ch
   1400018d0:	ins    BYTE PTR es:[rdi],dx
   1400018d1:	add    BYTE PTR [rbp+0x0],ah
   1400018d4:	and    BYTE PTR [rax],al
   1400018d6:	jne    0x1400018d8
   1400018d8:	jae    0x1400018da
   1400018da:	imul   eax,DWORD PTR [rax],0x67006e
   1400018e0:	and    BYTE PTR [rax],al
   1400018e2:	add    BYTE PTR ds:[rax],ah
   1400018e5:	add    BYTE PTR [rbx+0x0],dh
   1400018e8:	imul   eax,DWORD PTR [rax],0x6e0067
   1400018ee:	or     al,BYTE PTR [rax]
	...
   140001900:	and    BYTE PTR [rax],al
   140001902:	and    BYTE PTR [rax],al
   140001904:	and    BYTE PTR [rax],al
   140001906:	and    BYTE PTR [rax],al
   140001908:	add    BYTE PTR [r8+0x0],r15b
   14000190c:	(bad)  
   14000190d:	add    BYTE PTR [rbp+0x0],ch
   140001910:	jo     0x140001912
   140001912:	ins    BYTE PTR es:[rdi],dx
   140001913:	add    BYTE PTR [rbp+0x0],ah
   140001916:	jae    0x140001918
   140001918:	cmp    al,BYTE PTR [rax]
   14000191a:	or     al,BYTE PTR [rax]
   14000191c:	and    BYTE PTR [rax],al
   14000191e:	and    BYTE PTR [rax],al
   140001920:	and    BYTE PTR [rax],al
   140001922:	and    BYTE PTR [rax],al
   140001924:	and    BYTE PTR [rax],al
   140001926:	and    BYTE PTR [rax],al
   140001928:	and    BYTE PTR [rax],al
   14000192a:	and    BYTE PTR [rax],al
   14000192c:	jbe    0x14000192e
   14000192e:	jae    0x140001930
   140001930:	jae    0x140001932
   140001932:	je     0x140001934
   140001934:	jb     0x140001936
   140001936:	(bad)  
   140001937:	add    BYTE PTR [rbx+0x0],ah
   14000193a:	add    BYTE PTR gs:[rax],ah
   14000193d:	add    BYTE PTR [rip+0x20006600],ch        # 0x160007f43
   140001943:	add    BYTE PTR [rax],dh
   140001945:	add    BYTE PTR [rax],ah
   140001947:	add    BYTE PTR [rbx],ch
   140001949:	add    BYTE PTR [rbx+0x0],ah
   14000194c:	outs   dx,DWORD PTR ds:[rsi]
   14000194d:	add    BYTE PTR [rdi+0x0],ch
   140001950:	jb     0x140001952
   140001952:	add    BYTE PTR fs:[rax],ah
   140001955:	add    BYTE PTR [rbx],ch
   140001957:	add    BYTE PTR [rbx+0x0],dh
   14000195a:	ja     0x14000195c
   14000195c:	jo     0x14000195e
   14000195e:	jb     0x140001960
   140001960:	jbe    0x140001962
   140001962:	or     al,BYTE PTR [rax]
   140001964:	and    BYTE PTR [rax],al
   140001966:	and    BYTE PTR [rax],al
   140001968:	and    BYTE PTR [rax],al
   14000196a:	and    BYTE PTR [rax],al
   14000196c:	and    BYTE PTR [rax],al
   14000196e:	and    BYTE PTR [rax],al
   140001970:	and    BYTE PTR [rax],al
   140001972:	and    BYTE PTR [rax],al
   140001974:	jbe    0x140001976
   140001976:	jae    0x140001978
   140001978:	jae    0x14000197a
   14000197a:	je     0x14000197c
   14000197c:	jb     0x14000197e
   14000197e:	(bad)  
   14000197f:	add    BYTE PTR [rbx+0x0],ah
   140001982:	add    BYTE PTR gs:[rax],ah
   140001985:	add    BYTE PTR [rip+0x20006600],ch        # 0x160007f8b
   14000198b:	add    BYTE PTR [rax],dh
   14000198d:	add    BYTE PTR [rax+0x0],bh
   140001990:	add    BYTE PTR ss:[rdx],cl
   140001993:	add    BYTE PTR [rax],ah
   140001995:	add    BYTE PTR [rax],ah
   140001997:	add    BYTE PTR [rax],ah
   140001999:	add    BYTE PTR [rax],ah
   14000199b:	add    BYTE PTR [rax],ah
   14000199d:	add    BYTE PTR [rax],ah
   14000199f:	add    BYTE PTR [rax],ah
   1400019a1:	add    BYTE PTR [rax],ah
   1400019a3:	add    BYTE PTR [rsi+0x0],dh
   1400019a6:	jae    0x1400019a8
   1400019a8:	jae    0x1400019aa
   1400019aa:	je     0x1400019ac
   1400019ac:	jb     0x1400019ae
   1400019ae:	(bad)  
   1400019af:	add    BYTE PTR [rbx+0x0],ah
   1400019b2:	add    BYTE PTR gs:[rax],ah
   1400019b5:	add    BYTE PTR [rip+0x45004700],ch        # 0x1850060bb
   1400019bb:	add    BYTE PTR [rsi+0x0],cl
   1400019be:	or     al,BYTE PTR [rax]
   1400019c0:	and    BYTE PTR [rax],al
   1400019c2:	and    BYTE PTR [rax],al
   1400019c4:	and    BYTE PTR [rax],al
   1400019c6:	and    BYTE PTR [rax],al
   1400019c8:	and    BYTE PTR [rax],al
   1400019ca:	and    BYTE PTR [rax],al
   1400019cc:	and    BYTE PTR [rax],al
   1400019ce:	and    BYTE PTR [rax],al
   1400019d0:	jbe    0x1400019d2
   1400019d2:	jae    0x1400019d4
   1400019d4:	jae    0x1400019d6
   1400019d6:	je     0x1400019d8
   1400019d8:	jb     0x1400019da
   1400019da:	(bad)  
   1400019db:	add    BYTE PTR [rbx+0x0],ah
   1400019de:	add    BYTE PTR gs:[rax],ah
   1400019e1:	add    BYTE PTR [rip+0x74006500],ch        # 0x1b4007ee7
   1400019e7:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400019eb:	add    BYTE PTR [rsi+0x0],dh
   1400019ee:	jae    0x1400019f0
   1400019f0:	jae    0x1400019f2
   1400019f2:	add    BYTE PTR cs:[rbp+0x0],ah
   1400019f6:	je     0x1400019f8
   1400019f8:	ins    BYTE PTR es:[rdi],dx
   1400019f9:	add    BYTE PTR [rax],ah
   1400019fb:	add    BYTE PTR [rip+0x20006f00],ch        # 0x160008901
   140001a01:	add    BYTE PTR [rsi+0x0],dh
   140001a04:	jae    0x140001a06
   140001a06:	jae    0x140001a08
   140001a08:	add    BYTE PTR cs:[rax+rax*1+0x6f],ch
   140001a0d:	add    BYTE PTR [rdi+0x0],ah
   140001a10:	or     al,BYTE PTR [rax]
   140001a12:	and    BYTE PTR [rax],al
   140001a14:	and    BYTE PTR [rax],al
   140001a16:	and    BYTE PTR [rax],al
   140001a18:	and    BYTE PTR [rax],al
   140001a1a:	and    BYTE PTR [rax],al
   140001a1c:	and    BYTE PTR [rax],al
   140001a1e:	and    BYTE PTR [rax],al
   140001a20:	and    BYTE PTR [rax],al
   140001a22:	jbe    0x140001a24
   140001a24:	jae    0x140001a26
   140001a26:	jae    0x140001a28
   140001a28:	je     0x140001a2a
   140001a2a:	jb     0x140001a2c
   140001a2c:	(bad)  
   140001a2d:	add    BYTE PTR [rbx+0x0],ah
   140001a30:	add    BYTE PTR gs:[rax],ah
   140001a33:	add    BYTE PTR [rip+0x20006600],ch        # 0x160008039
   140001a39:	add    BYTE PTR [rax],dh
   140001a3b:	add    BYTE PTR [rax+0x0],bh
   140001a3e:	data16 add BYTE PTR [rsi+0x0],ah
   140001a42:	data16 add BYTE PTR [rsi+0x0],ah
   140001a46:	and    BYTE PTR [rax],al
   140001a48:	sub    eax,0x69007000
   140001a4d:	add    BYTE PTR [rax+rax*1+0x20],ah
   140001a51:	add    BYTE PTR [rdx],ch
   140001a53:	add    BYTE PTR [rax],ah
   140001a55:	add    BYTE PTR [rbx],ch
   140001a57:	add    BYTE PTR [rax+0x0],dh
   140001a5a:	imul   eax,DWORD PTR [rax],0x200064
   140001a60:	xor    BYTE PTR [rax],al
   140001a62:	js     0x140001a64
   140001a64:	add    BYTE PTR gs:[rax],bh
   140001a67:	add    BYTE PTR [rbx+0x0],ah
   140001a6a:	and    BYTE PTR [rax],al
   140001a6c:	sub    eax,0x69007400
   140001a71:	add    BYTE PTR [rax+rax*1+0x20],ah
   140001a75:	add    BYTE PTR [rdx],ch
   140001a77:	add    BYTE PTR [rax],ah
   140001a79:	add    BYTE PTR [rbx],ch
   140001a7b:	add    BYTE PTR [rax+rax*1+0x69],dh
   140001a7f:	add    BYTE PTR [rax+rax*1+0x20],ah
   140001a83:	add    BYTE PTR [rax],dh
   140001a85:	add    BYTE PTR [rax+0x0],bh
   140001a88:	xor    eax,DWORD PTR [rax]
   140001a8a:	xor    DWORD PTR [rax],eax
   140001a8c:	(bad)  
   140001a8d:	add    BYTE PTR [rax],al
   140001a8f:	add    BYTE PTR [rbx+0x0],al
   140001a92:	sub    eax,DWORD PTR [rax]
   140001a94:	sub    eax,DWORD PTR [rax]
   140001a96:	and    BYTE PTR [rax],al
   140001a98:	add    BYTE PTR gs:[rax+0x0],bh
   140001a9c:	movsxd eax,DWORD PTR [rax]
   140001a9e:	add    BYTE PTR gs:[rax+0x0],dh
   140001aa2:	je     0x140001aa4
   140001aa4:	imul   eax,DWORD PTR [rax],0x6e006f
   140001aaa:	and    BYTE PTR [rax],al
   140001aac:	push   0x6e006100
   140001ab1:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140001ab5:	add    BYTE PTR [rcx+0x0],ch
   140001ab8:	outs   dx,BYTE PTR ds:[rsi]
   140001ab9:	add    BYTE PTR [rdi+0x0],ah
   140001abc:	add    BYTE PTR [rax],al
   140001abe:	add    BYTE PTR [rax],al
   140001ac0:	push   rsi
   140001ac1:	add    BYTE PTR [rbx+0x0],dl
   140001ac4:	push   rbx
   140001ac5:	add    BYTE PTR [rax],ah
   140001ac7:	add    BYTE PTR [rbx+0x0],al
   140001aca:	outs   dx,DWORD PTR ds:[rsi]
   140001acb:	add    BYTE PTR [rdi+0x0],ch
   140001ace:	jb     0x140001ad0
   140001ad0:	add    BYTE PTR fs:[rcx+0x0],ch
   140001ad4:	outs   dx,BYTE PTR ds:[rsi]
   140001ad5:	add    BYTE PTR [rcx+0x0],ah
   140001ad8:	je     0x140001ada
   140001ada:	outs   dx,DWORD PTR ds:[rsi]
   140001adb:	add    BYTE PTR [rdx+0x0],dh
   140001ade:	and    BYTE PTR [rax],al
   140001ae0:	jae    0x140001ae2
   140001ae2:	add    BYTE PTR gs:[rdx+0x0],dh
   140001ae6:	jbe    0x140001ae8
   140001ae8:	imul   eax,DWORD PTR [rax],0x650063
   140001aee:	add    BYTE PTR [rax],al
   140001af0:	push   rbx
   140001af1:	add    BYTE PTR [rcx+0x0],bh
   140001af4:	jae    0x140001af6
   140001af6:	je     0x140001af8
   140001af8:	add    BYTE PTR gs:[rbp+0x0],ch
   140001afc:	and    BYTE PTR [rax],al
   140001afe:	push   rax
   140001aff:	add    BYTE PTR [rdx+0x0],dh
   140001b02:	outs   dx,DWORD PTR ds:[rsi]
   140001b03:	add    BYTE PTR [rsi+0x0],dh
   140001b06:	imul   eax,DWORD PTR [rax],0x650064
   140001b0c:	jb     0x140001b0e
   140001b0e:	and    BYTE PTR [rax],al
   140001b10:	jae    0x140001b12
   140001b12:	add    BYTE PTR gs:[rdx+0x0],dh
   140001b16:	jbe    0x140001b18
   140001b18:	imul   eax,DWORD PTR [rax],0x650063
   140001b1e:	add    BYTE PTR [rax],al
   140001b20:	push   rdx
   140001b21:	add    BYTE PTR [rbp+0x0],ah
   140001b24:	jno    0x140001b26
   140001b26:	jne    0x140001b28
   140001b28:	add    BYTE PTR gs:[rbx+0x0],dh
   140001b2c:	je     0x140001b2e
   140001b2e:	add    BYTE PTR gs:[rdx+0x0],dh
   140001b32:	and    BYTE PTR [rax],al
   140001b34:	(bad)  
   140001b35:	add    BYTE PTR [rsi+0x0],ch
   140001b38:	add    BYTE PTR fs:[rax],ah
   140001b3b:	add    BYTE PTR [rdx+0x0],ah
   140001b3e:	(bad)  
   140001b3f:	add    BYTE PTR [rbx+0x0],ah
   140001b42:	imul   eax,DWORD PTR [rax],0x75
   140001b45:	add    BYTE PTR [rax+0x0],dh
   140001b48:	and    BYTE PTR [rax],al
   140001b4a:	ins    DWORD PTR es:[rdi],dx
   140001b4b:	add    BYTE PTR [rbp+0x0],ah
   140001b4e:	je     0x140001b50
   140001b50:	(bad)  
   140001b51:	add    BYTE PTR [rax+rax*1+0x61],ah
   140001b55:	add    BYTE PTR [rax+rax*1+0x61],dh
   140001b59:	add    BYTE PTR [rax],ah
   140001b5b:	add    BYTE PTR [rax+0x0],dh
   140001b5e:	jb     0x140001b60
   140001b60:	outs   dx,DWORD PTR ds:[rsi]
   140001b61:	add    BYTE PTR [rbx+0x0],ah
   140001b64:	add    BYTE PTR gs:[rbx+0x0],dh
   140001b68:	jae    0x140001b6a
   140001b6a:	imul   eax,DWORD PTR [rax],0x67006e
	...
   140001b80:	push   rdi
   140001b81:	add    BYTE PTR [rdx+0x0],dh
   140001b84:	imul   eax,DWORD PTR [rax],0x650074
   140001b8a:	jb     0x140001b8c
   140001b8c:	and    BYTE PTR [rax],al
   140001b8e:	imul   eax,DWORD PTR [rax],0x66006e
   140001b94:	jb     0x140001b96
   140001b96:	(bad)  
   140001b97:	add    BYTE PTR [rbx+0x0],dh
   140001b9a:	je     0x140001b9c
   140001b9c:	jb     0x140001b9e
   140001b9e:	jne    0x140001ba0
   140001ba0:	movsxd eax,DWORD PTR [rax]
   140001ba2:	je     0x140001ba4
   140001ba4:	jne    0x140001ba6
   140001ba6:	jb     0x140001ba8
   140001ba8:	add    BYTE PTR gs:[rax],ah
   140001bab:	add    BYTE PTR [rcx+0x0],ah
   140001bae:	outs   dx,BYTE PTR ds:[rsi]
   140001baf:	add    BYTE PTR [rax+rax*1+0x20],ah
   140001bb3:	add    BYTE PTR [rsi+0x0],dl
   140001bb6:	push   rbx
   140001bb7:	add    BYTE PTR [rbx+0x0],dl
   140001bba:	and    BYTE PTR [rax],al
   140001bbc:	push   0x73006f00
   140001bc1:	add    BYTE PTR [rax+rax*1+0x65],dh
   140001bc5:	add    BYTE PTR [rax+rax*1+0x20],ah
   140001bc9:	add    BYTE PTR [rdi+0x0],dh
   140001bcc:	jb     0x140001bce
   140001bce:	imul   eax,DWORD PTR [rax],0x650074
   140001bd4:	jb     0x140001bd6
   140001bd6:	jae    0x140001bd8
	...
   140001be0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140001be4:	jae    0x140001be6
   140001be6:	movsxd eax,DWORD PTR [rax]
   140001be8:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   140001bed:	add    BYTE PTR [rcx+0x0],ah
   140001bf0:	outs   dx,BYTE PTR ds:[rsi]
   140001bf1:	add    BYTE PTR [rbp+0x0],ah
   140001bf4:	outs   dx,DWORD PTR ds:[rsi]
   140001bf5:	add    BYTE PTR [rbp+0x0],dh
   140001bf8:	jae    0x140001bfa
   140001bfa:	and    BYTE PTR [rax],al
   140001bfc:	push   rsi
   140001bfd:	add    BYTE PTR [rbx+0x0],dl
   140001c00:	push   rbx
   140001c01:	add    BYTE PTR [rcx+0x0],al
   140001c04:	push   rax
   140001c05:	add    BYTE PTR [rcx+0x0],cl
   140001c08:	and    BYTE PTR [rax],al
   140001c0a:	add    BYTE PTR gs:[rax+0x0],bh
   140001c0e:	jo     0x140001c10
   140001c10:	outs   dx,DWORD PTR ds:[rsi]
   140001c11:	add    BYTE PTR [rdx+0x0],dh
   140001c14:	je     0x140001c16
   140001c16:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140001c1b:	add    BYTE PTR [rdx+0x0],dh
   140001c1e:	outs   dx,DWORD PTR ds:[rsi]
   140001c1f:	add    BYTE PTR [rbp+0x0],dh
   140001c22:	je     0x140001c24
   140001c24:	imul   eax,DWORD PTR [rax],0x65006e
   140001c2a:	jae    0x140001c2c
   140001c2c:	add    BYTE PTR [rax],al
   140001c2e:	add    BYTE PTR [rax],al
   140001c30:	rex.W add BYTE PTR [rcx+0x0],spl
   140001c34:	jb     0x140001c36
   140001c36:	add    BYTE PTR fs:[rdi+0x0],dh
   140001c3a:	(bad)  
   140001c3b:	add    BYTE PTR [rdx+0x0],dh
   140001c3e:	add    BYTE PTR gs:[rax],ah
   140001c41:	add    BYTE PTR [rax+0x0],dl
   140001c44:	jb     0x140001c46
   140001c46:	outs   dx,DWORD PTR ds:[rsi]
   140001c47:	add    BYTE PTR [rsi+0x0],dh
   140001c4a:	imul   eax,DWORD PTR [rax],0x650064
   140001c50:	jb     0x140001c52
   140001c52:	and    BYTE PTR [rax],al
   140001c54:	add    BYTE PTR fs:[rcx+0x0],ch
   140001c58:	(bad)  
   140001c59:	add    BYTE PTR [rdi+0x0],ah
   140001c5c:	outs   dx,BYTE PTR ds:[rsi]
   140001c5d:	add    BYTE PTR [rdi+0x0],ch
   140001c60:	jae    0x140001c62
   140001c62:	je     0x140001c64
   140001c64:	imul   eax,DWORD PTR [rax],0x730063
   140001c6a:	add    BYTE PTR [rax],al
   140001c6c:	add    BYTE PTR [rax],al
   140001c6e:	add    BYTE PTR [rax],al
   140001c70:	rex.XB add BYTE PTR [r15+0x0],bpl
   140001c74:	ins    DWORD PTR es:[rdi],dx
   140001c75:	add    BYTE PTR [rbp+0x0],ch
   140001c78:	(bad)  
   140001c79:	add    BYTE PTR [rsi+0x0],ch
   140001c7c:	add    BYTE PTR fs:[rax],ah
   140001c7f:	add    BYTE PTR [rax+rax*1+0x69],ch
   140001c83:	add    BYTE PTR [rsi+0x0],ch
   140001c86:	add    BYTE PTR gs:[rax],ah
   140001c89:	add    BYTE PTR [rbp+0x0],dh
   140001c8c:	je     0x140001c8e
   140001c8e:	imul   eax,DWORD PTR [rax],0x69006c
   140001c94:	je     0x140001c96
   140001c96:	imul   eax,DWORD PTR [rax],0x730065
   140001c9c:	add    BYTE PTR [rax],al
   140001c9e:	add    BYTE PTR [rax],al
   140001ca0:	push   rbx
   140001ca1:	add    BYTE PTR [rax+0x0],ch
   140001ca4:	(bad)  
   140001ca5:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140001ca9:	add    BYTE PTR [rdi+0x0],dh
   140001cac:	and    BYTE PTR [rax],al
   140001cae:	rex.XB add BYTE PTR [r15+0x0],bpl
   140001cb2:	jo     0x140001cb4
   140001cb4:	imul   eax,DWORD PTR [rax],0x730065
   140001cba:	and    BYTE PTR [rax],al
   140001cbc:	data16 add BYTE PTR [rdi+0x0],ch
   140001cc0:	jb     0x140001cc2
   140001cc2:	and    BYTE PTR [rax],al
   140001cc4:	push   rbx
   140001cc5:	add    BYTE PTR [rax+0x0],ch
   140001cc8:	(bad)  
   140001cc9:	add    BYTE PTR [rdx+0x0],dh
   140001ccc:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140001cd1:	add    BYTE PTR [rsi+0x0],al
   140001cd4:	outs   dx,DWORD PTR ds:[rsi]
   140001cd5:	add    BYTE PTR [rax+rax*1+0x64],ch
   140001cd9:	add    BYTE PTR [rbp+0x0],ah
   140001cdc:	jb     0x140001cde
   140001cde:	jae    0x140001ce0
   140001ce0:	and    BYTE PTR [rax],al
   140001ce2:	push   rbp
   140001ce3:	add    BYTE PTR [rcx+0x0],cl
	...
   140001cee:	add    BYTE PTR [rax],al
   140001cf0:	rex.WB add BYTE PTR [r14+0x0],bpl
   140001cf4:	je     0x140001cf6
   140001cf6:	add    BYTE PTR gs:[rdx+0x0],dh
   140001cfa:	outs   dx,BYTE PTR ds:[rsi]
   140001cfb:	add    BYTE PTR [rcx+0x0],ah
   140001cfe:	ins    BYTE PTR es:[rdi],dx
   140001cff:	add    BYTE PTR [rax],ah
   140001d01:	add    BYTE PTR [rax+rax*1+0x65],dh
   140001d05:	add    BYTE PTR [rbx+0x0],dh
   140001d08:	je     0x140001d0a
   140001d0a:	and    BYTE PTR [rax],al
   140001d0c:	imul   eax,DWORD PTR [rax],0x66006e
   140001d12:	jb     0x140001d14
   140001d14:	(bad)  
   140001d15:	add    BYTE PTR [rbx+0x0],dh
   140001d18:	je     0x140001d1a
   140001d1a:	jb     0x140001d1c
   140001d1c:	jne    0x140001d1e
   140001d1e:	movsxd eax,DWORD PTR [rax]
   140001d20:	je     0x140001d22
   140001d22:	jne    0x140001d24
   140001d24:	jb     0x140001d26
   140001d26:	add    BYTE PTR gs:[rax],ah
   140001d29:	add    BYTE PTR [rax],ch
   140001d2b:	add    BYTE PTR [rbp+0x0],dh
   140001d2e:	outs   dx,BYTE PTR ds:[rsi]
   140001d2f:	add    BYTE PTR [rbp+0x0],dh
   140001d32:	jae    0x140001d34
   140001d34:	add    BYTE PTR gs:[rax+rax*1+0x29],ah
   140001d39:	add    BYTE PTR [rax],al
   140001d3b:	add    BYTE PTR [rax],al
   140001d3d:	add    BYTE PTR [rax],al
   140001d3f:	add    BYTE PTR [rcx+0x0],cl
   140001d42:	rex.WRXB add BYTE PTR [r11+0x0],r8b
   140001d46:	push   rsp
   140001d47:	add    BYTE PTR [rax+rax*1+0x20],cl
   140001d4b:	add    BYTE PTR [rcx+0x0],ah
   140001d4e:	outs   dx,BYTE PTR ds:[rsi]
   140001d4f:	add    BYTE PTR [rax+rax*1+0x20],ah
   140001d53:	add    BYTE PTR [rsi+0x0],al
   140001d56:	push   rbx
   140001d57:	add    BYTE PTR [rbx+0x0],al
   140001d5a:	push   rsp
   140001d5b:	add    BYTE PTR [rax+rax*1+0x20],cl
   140001d5f:	add    BYTE PTR [rdi+0x0],ch
   140001d62:	jo     0x140001d64
   140001d64:	add    BYTE PTR gs:[rdx+0x0],dh
   140001d68:	(bad)  
   140001d69:	add    BYTE PTR [rax+rax*1+0x69],dh
   140001d6d:	add    BYTE PTR [rdi+0x0],ch
   140001d70:	outs   dx,BYTE PTR ds:[rsi]
   140001d71:	add    BYTE PTR [rbx+0x0],dh
	...
   140001d80:	rex.RXB add BYTE PTR [r13+0x0],r12b
   140001d84:	outs   dx,BYTE PTR ds:[rsi]
   140001d85:	add    BYTE PTR [rbp+0x0],ah
   140001d88:	jb     0x140001d8a
   140001d8a:	(bad)  
   140001d8b:	add    BYTE PTR [rax+rax*1+0x20],ch
   140001d8f:	add    BYTE PTR [rax+0x0],dh
   140001d92:	jne    0x140001d94
   140001d94:	jb     0x140001d96
   140001d96:	jo     0x140001d98
   140001d98:	outs   dx,DWORD PTR ds:[rsi]
   140001d99:	add    BYTE PTR [rbx+0x0],dh
   140001d9c:	add    BYTE PTR gs:[rax],ah
   140001d9f:	add    BYTE PTR [rbp+0x0],dh
   140001da2:	je     0x140001da4
   140001da4:	imul   eax,DWORD PTR [rax],0x69006c
   140001daa:	je     0x140001dac
   140001dac:	imul   eax,DWORD PTR [rax],0x730065
   140001db2:	and    BYTE PTR [rax],al
   140001db4:	sub    BYTE PTR [rax],al
   140001db6:	outs   dx,BYTE PTR ds:[rsi]
   140001db7:	add    BYTE PTR [rdi+0x0],ch
   140001dba:	imul   eax,DWORD PTR [rax],0x790073
   140001dc0:	sub    DWORD PTR [rax],eax
	...
   140001dce:	add    BYTE PTR [rax],al
   140001dd0:	push   rdi
   140001dd1:	add    BYTE PTR [rdx+0x0],dh
   140001dd4:	imul   eax,DWORD PTR [rax],0x650074
   140001dda:	jb     0x140001ddc
   140001ddc:	and    BYTE PTR [rax],al
   140001dde:	ins    DWORD PTR es:[rdi],dx
   140001ddf:	add    BYTE PTR [rbp+0x0],ah
   140001de2:	je     0x140001de4
   140001de4:	(bad)  
   140001de5:	add    BYTE PTR [rax+rax*1+0x61],ah
   140001de9:	add    BYTE PTR [rax+rax*1+0x61],dh
   140001ded:	add    BYTE PTR [rax],ah
   140001def:	add    BYTE PTR [rax+0x0],dh
   140001df2:	jb     0x140001df4
   140001df4:	outs   dx,DWORD PTR ds:[rsi]
   140001df5:	add    BYTE PTR [rbx+0x0],ah
   140001df8:	add    BYTE PTR gs:[rbx+0x0],dh
   140001dfc:	jae    0x140001dfe
   140001dfe:	imul   eax,DWORD PTR [rax],0x67006e
   140001e04:	and    BYTE PTR [rax],al
   140001e06:	sub    BYTE PTR [rax],al
   140001e08:	outs   dx,BYTE PTR ds:[rsi]
   140001e09:	add    BYTE PTR [rdi+0x0],ch
   140001e0c:	imul   eax,DWORD PTR [rax],0x790073
   140001e12:	sub    DWORD PTR [rax],eax
	...
   140001e20:	rex.WRB add BYTE PTR [r13+0x0],r12b
   140001e24:	je     0x140001e26
   140001e26:	(bad)  
   140001e27:	add    BYTE PTR [rax+rax*1+0x61],ah
   140001e2b:	add    BYTE PTR [rax+rax*1+0x61],dh
   140001e2f:	add    BYTE PTR [rax],ah
   140001e31:	add    BYTE PTR [rax+0x0],dh
   140001e34:	jb     0x140001e36
   140001e36:	outs   dx,DWORD PTR ds:[rsi]
   140001e37:	add    BYTE PTR [rbx+0x0],ah
   140001e3a:	add    BYTE PTR gs:[rbx+0x0],dh
   140001e3e:	jae    0x140001e40
   140001e40:	imul   eax,DWORD PTR [rax],0x67006e
   140001e46:	and    BYTE PTR [rax],al
   140001e48:	(bad)  
   140001e49:	add    BYTE PTR [rcx+0x0],ah
   140001e4c:	jae    0x140001e4e
   140001e4e:	add    BYTE PTR gs:[rax],ah
   140001e51:	add    BYTE PTR [rbx+0x0],ah
   140001e54:	ins    BYTE PTR es:[rdi],dx
   140001e55:	add    BYTE PTR [rcx+0x0],ah
   140001e58:	jae    0x140001e5a
   140001e5a:	jae    0x140001e5c
   140001e5c:	add    BYTE PTR gs:[rbx+0x0],dh
   140001e60:	and    BYTE PTR [rax],al
   140001e62:	sub    BYTE PTR [rax],al
   140001e64:	outs   dx,BYTE PTR ds:[rsi]
   140001e65:	add    BYTE PTR [rdi+0x0],ch
   140001e68:	imul   eax,DWORD PTR [rax],0x790073
   140001e6e:	sub    DWORD PTR [rax],eax
	...
   140001e80:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140001e84:	ins    BYTE PTR es:[rdi],dx
   140001e85:	add    BYTE PTR [rbp+0x0],ah
   140001e88:	and    BYTE PTR [rax],al
   140001e8a:	push   rbx
   140001e8b:	add    BYTE PTR [rbp+0x0],ah
   140001e8e:	jb     0x140001e90
   140001e90:	jbe    0x140001e92
   140001e92:	add    BYTE PTR gs:[rdx+0x0],dh
   140001e96:	and    BYTE PTR [rax],al
   140001e98:	push   rbx
   140001e99:	add    BYTE PTR [rax+0x0],ch
   140001e9c:	(bad)  
   140001e9d:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140001ea1:	add    BYTE PTR [rdi+0x0],dh
   140001ea4:	and    BYTE PTR [rax],al
   140001ea6:	rex.XB add BYTE PTR [r15+0x0],bpl
   140001eaa:	jo     0x140001eac
   140001eac:	jns    0x140001eae
   140001eae:	and    BYTE PTR [rax],al
   140001eb0:	push   rax
   140001eb1:	add    BYTE PTR [rdx+0x0],dh
   140001eb4:	outs   dx,DWORD PTR ds:[rsi]
   140001eb5:	add    BYTE PTR [rsi+0x0],dh
   140001eb8:	imul   eax,DWORD PTR [rax],0x650064
   140001ebe:	jb     0x140001ec0
	...
   140001ec8:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140001ecc:	ins    BYTE PTR es:[rdi],dx
   140001ecd:	add    BYTE PTR [rbp+0x0],ah
   140001ed0:	and    BYTE PTR [rax],al
   140001ed2:	push   rbx
   140001ed3:	add    BYTE PTR [rbp+0x0],ah
   140001ed6:	jb     0x140001ed8
   140001ed8:	jbe    0x140001eda
   140001eda:	add    BYTE PTR gs:[rdx+0x0],dh
   140001ede:	and    BYTE PTR [rax],al
   140001ee0:	push   rbx
   140001ee1:	add    BYTE PTR [rax+0x0],ch
   140001ee4:	(bad)  
   140001ee5:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140001ee9:	add    BYTE PTR [rdi+0x0],dh
   140001eec:	and    BYTE PTR [rax],al
   140001eee:	rex.XB add BYTE PTR [r15+0x0],bpl
   140001ef2:	jo     0x140001ef4
   140001ef4:	jns    0x140001ef6
   140001ef6:	and    BYTE PTR [rax],al
   140001ef8:	add    BYTE PTR [r15+0x0],spl
   140001efc:	add    BYTE PTR gs:[rsi+0x0],ch
   140001f00:	je     0x140001f02
	...
   140001f0e:	add    BYTE PTR [rax],al
   140001f10:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140001f14:	ins    BYTE PTR es:[rdi],dx
   140001f15:	add    BYTE PTR [rbp+0x0],ah
   140001f18:	and    BYTE PTR [rax],al
   140001f1a:	push   rbx
   140001f1b:	add    BYTE PTR [rbp+0x0],ah
   140001f1e:	jb     0x140001f20
   140001f20:	jbe    0x140001f22
   140001f22:	add    BYTE PTR gs:[rdx+0x0],dh
   140001f26:	and    BYTE PTR [rax],al
   140001f28:	push   rbx
   140001f29:	add    BYTE PTR [rax+0x0],ch
   140001f2c:	(bad)  
   140001f2d:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140001f31:	add    BYTE PTR [rdi+0x0],dh
   140001f34:	and    BYTE PTR [rax],al
   140001f36:	rex.XB add BYTE PTR [r15+0x0],bpl
   140001f3a:	jo     0x140001f3c
   140001f3c:	jns    0x140001f3e
   140001f3e:	and    BYTE PTR [rax],al
   140001f40:	rex.WRB add BYTE PTR [r13+0x0],r12b
   140001f44:	je     0x140001f46
   140001f46:	(bad)  
   140001f47:	add    BYTE PTR [rax+rax*1+0x61],ah
   140001f4b:	add    BYTE PTR [rax+rax*1+0x61],dh
   140001f4f:	add    BYTE PTR [rax],al
   140001f51:	add    BYTE PTR [rax],al
   140001f53:	add    BYTE PTR [rdi+0x0],dh
	...
   140001f5e:	add    BYTE PTR [rax],al
   140001f60:	push   rdi
   140001f61:	add    BYTE PTR [rcx+0x0],al
   140001f64:	push   rdx
   140001f65:	add    BYTE PTR [rsi+0x0],cl
   140001f68:	rex.WB add BYTE PTR [r14+0x0],cl
   140001f6c:	rex.RXB add BYTE PTR [r10],r15b
   140001f6f:	add    BYTE PTR [rax],ah
   140001f71:	add    BYTE PTR [rbx+0x0],al
   140001f74:	(bad)  
   140001f75:	add    BYTE PTR [rsi+0x0],ch
   140001f78:	outs   dx,BYTE PTR ds:[rsi]
   140001f79:	add    BYTE PTR [rdi+0x0],ch
   140001f7c:	je     0x140001f7e
   140001f7e:	and    BYTE PTR [rax],al
   140001f80:	ja     0x140001f82
   140001f82:	jb     0x140001f84
   140001f84:	imul   eax,DWORD PTR [rax],0x650074
   140001f8a:	and    BYTE PTR [rax],al
   140001f8c:	je     0x140001f8e
   140001f8e:	jb     0x140001f90
   140001f90:	(bad)  
   140001f91:	add    BYTE PTR [rbx+0x0],ah
   140001f94:	imul   eax,DWORD PTR [rax],0x67006e
   140001f9a:	and    BYTE PTR [rax],al
   140001f9c:	outs   dx,DWORD PTR ds:[rsi]
   140001f9d:	add    BYTE PTR [rbp+0x0],dh
   140001fa0:	je     0x140001fa2
   140001fa2:	jo     0x140001fa4
   140001fa4:	jne    0x140001fa6
   140001fa6:	je     0x140001fa8
   140001fa8:	and    BYTE PTR [rax],al
   140001faa:	je     0x140001fac
   140001fac:	outs   dx,DWORD PTR ds:[rsi]
   140001fad:	add    BYTE PTR [rax],ah
   140001faf:	add    BYTE PTR [rax+rax*1+0x68],dh
   140001fb3:	add    BYTE PTR [rbp+0x0],ah
   140001fb6:	and    BYTE PTR [rax],al
   140001fb8:	data16 add BYTE PTR [rcx+0x0],ch
   140001fbc:	ins    BYTE PTR es:[rdi],dx
   140001fbd:	add    BYTE PTR [rbp+0x0],ah
   140001fc0:	and    BYTE PTR [rax],al
   140001fc2:	(bad)  
   140001fc3:	add    BYTE PTR [rip+0x27007300],ah        # 0x1670092c9
   140001fc9:	add    BYTE PTR [rax],ah
   140001fcb:	add    BYTE PTR [rcx],ah
   140001fcd:	add    BYTE PTR [rax],al
   140001fcf:	add    BYTE PTR [rbp+0x0],al
   140001fd2:	push   rdx
   140001fd3:	add    BYTE PTR [rdx+0x0],dl
   140001fd6:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140001fda:	cmp    al,BYTE PTR [rax]
   140001fdc:	and    BYTE PTR [rax],al
   140001fde:	push   rbx
   140001fdf:	add    BYTE PTR [rax+rax*1+0x61],dh
   140001fe3:	add    BYTE PTR [rdx+0x0],dh
   140001fe6:	je     0x140001fe8
   140001fe8:	push   rsp
   140001fe9:	add    BYTE PTR [rdx+0x0],dh
   140001fec:	(bad)  
   140001fed:	add    BYTE PTR [rbx+0x0],ah
   140001ff0:	add    BYTE PTR gs:[rax],ch
   140001ff3:	add    BYTE PTR [rcx],ch
   140001ff5:	add    BYTE PTR [rax],ah
   140001ff7:	add    BYTE PTR [rdx+0x0],dh
   140001ffa:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   140001fff:	add    BYTE PTR [rdx+0x0],dh
   140002002:	outs   dx,BYTE PTR ds:[rsi]
   140002003:	add    BYTE PTR [rbp+0x0],ah
   140002006:	add    BYTE PTR fs:[rax],ah
   140002009:	add    BYTE PTR [rip+0x6400],ah        # 0x14000840f
   14000200f:	add    BYTE PTR [rbx+0x0],dl
   140002012:	add    BYTE PTR gs:[rbx+0x0],dh
   140002016:	jae    0x140002018
   140002018:	imul   eax,DWORD PTR [rax],0x6e006f
   14000201e:	and    BYTE PTR [rax],al
   140002020:	jae    0x140002022
   140002022:	je     0x140002024
   140002024:	(bad)  
   140002025:	add    BYTE PTR [rdx+0x0],dh
   140002028:	je     0x14000202a
   14000202a:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000202f:	add    BYTE PTR [rax],ah
   140002031:	add    BYTE PTR [rbp+0x0],al
   140002034:	outs   dx,BYTE PTR ds:[rsi]
   140002035:	add    BYTE PTR [rcx+0x0],ah
   140002038:	(bad)  
   140002039:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000203d:	add    BYTE PTR [rsi+0x0],ch
   140002040:	add    BYTE PTR [eax],ah
   140002043:	add    BYTE PTR [rax+0x0],dh
   140002046:	jb     0x140002048
   140002048:	outs   dx,DWORD PTR ds:[rsi]
   140002049:	add    BYTE PTR [rsi+0x0],dh
   14000204c:	imul   eax,DWORD PTR [rax],0x650064
   140002052:	jb     0x140002054
   140002054:	add    BYTE PTR cs:[rsi],ch
   140002057:	add    BYTE PTR [rsi],ch
   140002059:	add    BYTE PTR [rax],al
   14000205b:	add    BYTE PTR [rax],al
   14000205d:	add    BYTE PTR [rax],al
   14000205f:	add    BYTE PTR [rbp+0x0],al
   140002062:	outs   dx,BYTE PTR ds:[rsi]
   140002063:	add    BYTE PTR [rcx+0x0],ah
   140002066:	(bad)  
   140002067:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000206b:	add    BYTE PTR [rsi+0x0],ch
   14000206e:	add    BYTE PTR [eax],ah
   140002071:	add    BYTE PTR [rax+0x0],dh
   140002074:	jb     0x140002076
   140002076:	outs   dx,DWORD PTR ds:[rsi]
   140002077:	add    BYTE PTR [rsi+0x0],dh
   14000207a:	imul   eax,DWORD PTR [rax],0x650064
   140002080:	jb     0x140002082
   140002082:	and    BYTE PTR [rax],al
   140002084:	jnp    0x140002086
   140002086:	and    eax,0x38002e00
   14000208b:	add    BYTE PTR [rax+0x0],bh
   14000208e:	sub    eax,0x2e002500
   140002093:	add    BYTE PTR [rax+rax*1],dh
   140002096:	js     0x140002098
   140002098:	sub    eax,0x2e002500
   14000209d:	add    BYTE PTR [rax+rax*1],dh
   1400020a0:	js     0x1400020a2
   1400020a2:	sub    eax,0x2e002500
   1400020a7:	add    BYTE PTR [rdx],dh
   1400020a9:	add    BYTE PTR [rax+0x0],bh
   1400020ac:	and    eax,0x32002e00
   1400020b1:	add    BYTE PTR [rax+0x0],bh
   1400020b4:	sub    eax,0x2e002500
   1400020b9:	add    BYTE PTR [rdx],dh
   1400020bb:	add    BYTE PTR [rax+0x0],bh
   1400020be:	and    eax,0x32002e00
   1400020c3:	add    BYTE PTR [rax+0x0],bh
   1400020c6:	and    eax,0x32002e00
   1400020cb:	add    BYTE PTR [rax+0x0],bh
   1400020ce:	and    eax,0x32002e00
   1400020d3:	add    BYTE PTR [rax+0x0],bh
   1400020d6:	and    eax,0x32002e00
   1400020db:	add    BYTE PTR [rax+0x0],bh
   1400020de:	and    eax,0x32002e00
   1400020e3:	add    BYTE PTR [rax+0x0],bh
   1400020e6:	jge    0x1400020e8
   1400020e8:	outs   dx,DWORD PTR ds:[rsi]
   1400020e9:	add    BYTE PTR [rsi+0x0],ch
   1400020ec:	and    BYTE PTR [rax],al
   1400020ee:	ins    BYTE PTR es:[rdi],dx
   1400020ef:	add    BYTE PTR [rbp+0x0],ah
   1400020f2:	jbe    0x1400020f4
   1400020f4:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   1400020f9:	add    BYTE PTR [rip+0x20006400],ah        # 0x1600084ff
   1400020ff:	add    BYTE PTR [rcx+0x0],ah
   140002102:	outs   dx,BYTE PTR ds:[rsi]
   140002103:	add    BYTE PTR [rax+rax*1+0x20],ah
   140002107:	add    BYTE PTR [rsi+0x0],ah
   14000210a:	ins    BYTE PTR es:[rdi],dx
   14000210b:	add    BYTE PTR [rcx+0x0],ah
   14000210e:	add    BYTE PTR [ebx+0x0],dh
   140002112:	and    BYTE PTR [rax],al
   140002114:	and    eax,0x30002300
   140002119:	add    BYTE PTR [rcx],dh
   14000211b:	add    BYTE PTR [rax],dh
   14000211d:	add    BYTE PTR [rax+0x0],bh
   140002120:	and    BYTE PTR [rax],al
   140002122:	add    BYTE PTR cs:[rsi],ch
   140002125:	add    BYTE PTR [rsi],ch
	...
   14000212f:	add    BYTE PTR [rdi+0x0],dl
   140002132:	(bad)  
   140002133:	add    BYTE PTR [rdx+0x0],dh
   140002136:	outs   dx,BYTE PTR ds:[rsi]
   140002137:	add    BYTE PTR [rcx+0x0],ch
   14000213a:	outs   dx,BYTE PTR ds:[rsi]
   14000213b:	add    BYTE PTR [rdi+0x0],ah
   14000213e:	cmp    al,BYTE PTR [rax]
   140002140:	and    BYTE PTR [rax],al
   140002142:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   140002146:	ins    BYTE PTR es:[rdi],dx
   140002147:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000214b:	add    BYTE PTR [rbp+0x0],al
   14000214e:	jbe    0x140002150
   140002150:	add    BYTE PTR gs:[rsi+0x0],ch
   140002154:	je     0x140002156
   140002156:	or     al,BYTE PTR [rax]
	...
   140002160:	push   rdi
   140002161:	add    BYTE PTR [rcx+0x0],ah
   140002164:	jb     0x140002166
   140002166:	outs   dx,BYTE PTR ds:[rsi]
   140002167:	add    BYTE PTR [rcx+0x0],ch
   14000216a:	outs   dx,BYTE PTR ds:[rsi]
   14000216b:	add    BYTE PTR [rdi+0x0],ah
   14000216e:	cmp    al,BYTE PTR [rax]
   140002170:	and    BYTE PTR [rax],al
   140002172:	add    BYTE PTR gs:[rsi+0x0],dh
   140002176:	add    BYTE PTR gs:[rsi+0x0],ch
   14000217a:	je     0x14000217c
   14000217c:	and    BYTE PTR [rax],al
   14000217e:	ins    BYTE PTR es:[rdi],dx
   14000217f:	add    BYTE PTR [rcx+0x0],ah
   140002182:	jns    0x140002184
   140002184:	outs   dx,DWORD PTR ds:[rsi]
   140002185:	add    BYTE PTR [rbp+0x0],dh
   140002188:	je     0x14000218a
   14000218a:	and    BYTE PTR [rax],al
   14000218c:	outs   dx,BYTE PTR ds:[rsi]
   14000218d:	add    BYTE PTR [rdi+0x0],ch
   140002190:	je     0x140002192
   140002192:	and    BYTE PTR [rax],al
   140002194:	data16 add BYTE PTR [rdi+0x0],ch
   140002198:	jne    0x14000219a
   14000219a:	outs   dx,BYTE PTR ds:[rsi]
   14000219b:	add    BYTE PTR [rax+rax*1+0xa],ah
	...
   1400021a7:	add    BYTE PTR [rdi+0x0],dl
   1400021aa:	(bad)  
   1400021ab:	add    BYTE PTR [rdx+0x0],dh
   1400021ae:	outs   dx,BYTE PTR ds:[rsi]
   1400021af:	add    BYTE PTR [rcx+0x0],ch
   1400021b2:	outs   dx,BYTE PTR ds:[rsi]
   1400021b3:	add    BYTE PTR [rdi+0x0],ah
   1400021b6:	cmp    al,BYTE PTR [rax]
   1400021b8:	and    BYTE PTR [rax],al
   1400021ba:	jae    0x1400021bc
   1400021bc:	jne    0x1400021be
   1400021be:	ins    DWORD PTR es:[rdi],dx
   1400021bf:	add    BYTE PTR [rbp+0x0],ch
   1400021c2:	(bad)  
   1400021c3:	add    BYTE PTR [rdx+0x0],dh
   1400021c6:	jns    0x1400021c8
   1400021c8:	and    BYTE PTR [rax],al
   1400021ca:	outs   dx,DWORD PTR ds:[rsi]
   1400021cb:	add    BYTE PTR [rsi+0x0],ch
   1400021ce:	ins    BYTE PTR es:[rdi],dx
   1400021cf:	add    BYTE PTR [rcx+0x0],bh
   1400021d2:	or     al,BYTE PTR [rax]
   1400021d4:	add    BYTE PTR [rax],al
   1400021d6:	add    BYTE PTR [rax],al
   1400021d8:	imul   eax,DWORD PTR [rax],0x64006e
   1400021de:	add    BYTE PTR gs:[rsi+0x0],ch
   1400021e2:	je     0x1400021e4
   1400021e4:	add    BYTE PTR [rax],al
   1400021e6:	add    BYTE PTR [rax],al
   1400021e8:	sub    eax,0x6f00
   1400021ed:	add    BYTE PTR [rax],al
   1400021ef:	add    BYTE PTR [rdi],ch
   1400021f1:	add    BYTE PTR [rdi+0x0],ch
   1400021f4:	add    BYTE PTR [rax],al
   1400021f6:	add    BYTE PTR [rax],al
   1400021f8:	sub    eax,0x6600
   1400021fd:	add    BYTE PTR [rax],al
   1400021ff:	add    BYTE PTR [rdi],ch
   140002201:	add    BYTE PTR [rsi+0x0],ah
	...
   140002210:	add    BYTE PTR [r10+0x0],r10b
   140002214:	push   rdx
   140002215:	add    BYTE PTR [rdi+0x0],cl
   140002218:	push   rdx
   140002219:	add    BYTE PTR [rdx],bh
   14000221b:	add    BYTE PTR [rax],ah
   14000221d:	add    BYTE PTR [rcx+0x0],ch
   140002220:	outs   dx,BYTE PTR ds:[rsi]
   140002221:	add    BYTE PTR [rsi+0x0],dh
   140002224:	(bad)  
   140002225:	add    BYTE PTR [rax+rax*1+0x69],ch
   140002229:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000222d:	add    BYTE PTR [rip+0x20006600],ch        # 0x160008833
   140002233:	add    BYTE PTR [rax+rax*1],bh
   140002236:	data16 add BYTE PTR [rax+rax*1+0x61],ch
   14000223b:	add    BYTE PTR [rdi+0x0],ah
   14000223e:	jae    0x140002240
   140002240:	add    BYTE PTR ds:[rax],ah
   140002243:	add    BYTE PTR [rsi+0x0],dh
   140002246:	(bad)  
   140002247:	add    BYTE PTR [rax+rax*1+0x75],ch
   14000224b:	add    BYTE PTR [rbp+0x0],ah
   14000224e:	cmp    al,BYTE PTR [rax]
   140002250:	and    BYTE PTR [rax],al
   140002252:	and    eax,0x7300
   140002257:	add    BYTE PTR [rip+0x6c00],ch        # 0x140008e5d
   14000225d:	add    BYTE PTR [rax],al
   14000225f:	add    BYTE PTR [rdi],ch
   140002261:	add    BYTE PTR [rax+rax*1+0x0],ch
	...
   14000226d:	add    BYTE PTR [rax],al
   14000226f:	add    BYTE PTR [rbp+0x0],al
   140002272:	push   rdx
   140002273:	add    BYTE PTR [rdx+0x0],dl
   140002276:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   14000227a:	cmp    al,BYTE PTR [rax]
   14000227c:	and    BYTE PTR [rax],al
   14000227e:	ins    DWORD PTR es:[rdi],dx
   14000227f:	add    BYTE PTR [rcx+0x0],ch
   140002282:	jae    0x140002284
   140002284:	jae    0x140002286
   140002286:	imul   eax,DWORD PTR [rax],0x67006e
   14000228c:	and    BYTE PTR [rax],al
   14000228e:	(bad)  
   14000228f:	add    BYTE PTR [rdx+0x0],dh
   140002292:	add    BYTE PTR [ebp+0x0],dh
   140002296:	ins    DWORD PTR es:[rdi],dx
   140002297:	add    BYTE PTR [rbp+0x0],ah
   14000229a:	outs   dx,BYTE PTR ds:[rsi]
   14000229b:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000229f:	add    BYTE PTR [rsi+0x0],ah
   1400022a2:	outs   dx,DWORD PTR ds:[rsi]
   1400022a3:	add    BYTE PTR [rdx+0x0],dh
   1400022a6:	and    BYTE PTR [rax],al
   1400022a8:	outs   dx,DWORD PTR ds:[rsi]
   1400022a9:	add    BYTE PTR [rax+0x0],dh
   1400022ac:	je     0x1400022ae
   1400022ae:	imul   eax,DWORD PTR [rax],0x6e006f
   1400022b4:	and    BYTE PTR [rax],al
   1400022b6:	and    eax,0x7300
   1400022bb:	add    BYTE PTR [rax],al
   1400022bd:	add    BYTE PTR [rax],al
   1400022bf:	add    BYTE PTR [rbp+0x0],al
   1400022c2:	push   rdx
   1400022c3:	add    BYTE PTR [rdx+0x0],dl
   1400022c6:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   1400022ca:	cmp    al,BYTE PTR [rax]
   1400022cc:	and    BYTE PTR [rax],al
   1400022ce:	imul   eax,DWORD PTR [rax],0x76006e
   1400022d4:	(bad)  
   1400022d5:	add    BYTE PTR [rax+rax*1+0x69],ch
   1400022d9:	add    BYTE PTR [rax+rax*1+0x20],ah
   1400022dd:	add    BYTE PTR [rip+0x20006c00],ch        # 0x160008ee3
   1400022e3:	add    BYTE PTR [rax+rax*1],bh
   1400022e6:	ins    BYTE PTR es:[rdi],dx
   1400022e7:	add    BYTE PTR [rbp+0x0],ah
   1400022ea:	jbe    0x1400022ec
   1400022ec:	add    BYTE PTR gs:[rax+rax*1+0x3e],ch
   1400022f1:	add    BYTE PTR [rax],ah
   1400022f3:	add    BYTE PTR [rsi+0x0],dh
   1400022f6:	(bad)  
   1400022f7:	add    BYTE PTR [rax+rax*1+0x75],ch
   1400022fb:	add    BYTE PTR [rbp+0x0],ah
   1400022fe:	cmp    al,BYTE PTR [rax]
   140002300:	and    BYTE PTR [rax],al
   140002302:	and    eax,0x7300
   140002307:	add    BYTE PTR [rip+0x74006500],ch        # 0x1b400880d
   14000230d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140002311:	add    BYTE PTR [rax],al
   140002313:	add    BYTE PTR [rax],al
   140002315:	add    BYTE PTR [rax],al
   140002317:	add    BYTE PTR [rdi],ch
   140002319:	add    BYTE PTR [rbp+0x0],ah
   14000231c:	je     0x14000231e
   14000231e:	ins    BYTE PTR es:[rdi],dx
	...
   140002327:	add    BYTE PTR [rip+0x6c006300],ch        # 0x1ac00862d
   14000232d:	add    BYTE PTR [rbp+0x0],ah
   140002330:	(bad)  
   140002331:	add    BYTE PTR [rdx+0x0],dh
   140002334:	add    BYTE PTR [rax],al
   140002336:	add    BYTE PTR [rax],al
   140002338:	(bad)  
   140002339:	add    BYTE PTR [rbx+0x0],ah
   14000233c:	ins    BYTE PTR es:[rdi],dx
   14000233d:	add    BYTE PTR [rbp+0x0],ah
   140002340:	(bad)  
   140002341:	add    BYTE PTR [rdx+0x0],dh
   140002344:	add    BYTE PTR [rax],al
   140002346:	add    BYTE PTR [rax],al
   140002348:	jo     0x14000234a
   14000234a:	imul   eax,DWORD PTR [rax],0x64
   140002350:	je     0x140002352
   140002352:	imul   eax,DWORD PTR [rax],0x64
   140002358:	sub    al,BYTE PTR [rax]
   14000235a:	add    BYTE PTR [rax],al
   14000235c:	add    BYTE PTR [rax],al
   14000235e:	add    BYTE PTR [rax],al
   140002360:	push   rax
   140002361:	add    BYTE PTR [rcx+0x0],cl
   140002364:	add    BYTE PTR [rax],r8b
   140002367:	add    BYTE PTR [rax+rax*1+0x49],dl
   14000236b:	add    BYTE PTR [rax+rax*1+0x0],al
   14000236f:	add    BYTE PTR [rbp+0x0],al
   140002372:	push   rdx
   140002373:	add    BYTE PTR [rdx+0x0],dl
   140002376:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   14000237a:	cmp    al,BYTE PTR [rax]
   14000237c:	and    BYTE PTR [rax],al
   14000237e:	imul   eax,DWORD PTR [rax],0x76006e
   140002384:	(bad)  
   140002385:	add    BYTE PTR [rax+rax*1+0x69],ch
   140002389:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000238d:	add    BYTE PTR [rip+0x20007300],ah        # 0x160009693
   140002393:	add    BYTE PTR [rsi+0x0],dh
   140002396:	(bad)  
   140002397:	add    BYTE PTR [rax+rax*1+0x75],ch
   14000239b:	add    BYTE PTR [rbp+0x0],ah
   14000239e:	cmp    al,BYTE PTR [rax]
   1400023a0:	and    BYTE PTR [rax],al
   1400023a2:	and    eax,0x7300
   1400023a7:	add    BYTE PTR [rbp+0x0],al
   1400023aa:	push   rdx
   1400023ab:	add    BYTE PTR [rdx+0x0],dl
   1400023ae:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   1400023b2:	cmp    al,BYTE PTR [rax]
   1400023b4:	and    BYTE PTR [rax],al
   1400023b6:	(bad)  
   1400023b7:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400023bb:	add    BYTE PTR [rdi+0x0],ch
   1400023be:	movsxd eax,DWORD PTR [rax]
   1400023c0:	(bad)  
   1400023c1:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400023c5:	add    BYTE PTR [rdi+0x0],ch
   1400023c8:	outs   dx,BYTE PTR ds:[rsi]
   1400023c9:	add    BYTE PTR [rax],ah
   1400023cb:	add    BYTE PTR [rsi+0x0],ah
   1400023ce:	(bad)  
   1400023cf:	add    BYTE PTR [rcx+0x0],ch
   1400023d2:	ins    BYTE PTR es:[rdi],dx
   1400023d3:	add    BYTE PTR [rbp+0x0],ah
   1400023d6:	add    BYTE PTR fs:[rax],al
   1400023d9:	add    BYTE PTR [rax],al
   1400023db:	add    BYTE PTR [rax],al
   1400023dd:	add    BYTE PTR [rax],al
   1400023df:	add    BYTE PTR [rip+0x65006800],ch        # 0x1a5008be5
   1400023e5:	add    BYTE PTR [rax+rax*1+0x70],ch
   1400023e9:	add    BYTE PTR [rax],al
   1400023eb:	add    BYTE PTR [rax],al
   1400023ed:	add    BYTE PTR [rax],al
   1400023ef:	add    BYTE PTR [rdi],ch
   1400023f1:	add    BYTE PTR [rax+0x0],ch
   1400023f4:	add    BYTE PTR gs:[rax+rax*1+0x70],ch
   1400023f9:	add    BYTE PTR [rax],al
   1400023fb:	add    BYTE PTR [rip+0x3f00],ch        # 0x140006301
   140002401:	add    BYTE PTR [rax],al
   140002403:	add    BYTE PTR [rdi],ch
   140002405:	add    BYTE PTR [rdi],bh
	...
   14000240f:	add    BYTE PTR [rbp+0x0],ch
   140002412:	outs   dx,DWORD PTR ds:[rsi]
   140002413:	add    BYTE PTR [rax+rax*1+0x75],ah
   140002417:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000241b:	add    BYTE PTR [rbx+0x0],dh
   14000241e:	add    BYTE PTR [rax],al
   140002420:	ins    BYTE PTR es:[rdi],dx
   140002421:	add    BYTE PTR [rbp+0x0],ah
   140002424:	jbe    0x140002426
   140002426:	add    BYTE PTR gs:[rax+rax*1+0x73],ch
   14000242b:	add    BYTE PTR [rax],al
   14000242d:	add    BYTE PTR [rax],al
   14000242f:	add    BYTE PTR [rcx+0x0],ah
   140002432:	ins    BYTE PTR es:[rdi],dx
   140002433:	add    BYTE PTR [rax+rax*1+0x0],ch
   140002437:	add    BYTE PTR [rbp+0x0],al
   14000243a:	push   rdx
   14000243b:	add    BYTE PTR [rdx+0x0],dl
   14000243e:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140002442:	cmp    al,BYTE PTR [rax]
   140002444:	and    BYTE PTR [rax],al
   140002446:	rex.WRXB add BYTE PTR [r8+0x0],r14b
   14000244a:	add    BYTE PTR gs:[rsi+0x0],ch
   14000244e:	push   rsp
   14000244f:	add    BYTE PTR [rdx+0x0],dh
   140002452:	(bad)  
   140002453:	add    BYTE PTR [rbx+0x0],ah
   140002456:	add    BYTE PTR gs:[rax],ch
   140002459:	add    BYTE PTR [rcx],ch
   14000245b:	add    BYTE PTR [rax],ah
   14000245d:	add    BYTE PTR [rdx+0x0],dh
   140002460:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   140002465:	add    BYTE PTR [rdx+0x0],dh
   140002468:	outs   dx,BYTE PTR ds:[rsi]
   140002469:	add    BYTE PTR [rbp+0x0],ah
   14000246c:	add    BYTE PTR fs:[rax],ah
   14000246f:	add    BYTE PTR [rip+0x6400],ah        # 0x140008875
	...
   14000247d:	add    BYTE PTR [rax],al
   14000247f:	add    BYTE PTR [rbp+0x0],al
   140002482:	push   rdx
   140002483:	add    BYTE PTR [rdx+0x0],dl
   140002486:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   14000248a:	cmp    al,BYTE PTR [rax]
   14000248c:	and    BYTE PTR [rax],al
   14000248e:	push   rbx
   14000248f:	add    BYTE PTR [rbp+0x0],ah
   140002492:	je     0x140002494
   140002494:	push   rsp
   140002495:	add    BYTE PTR [rdx+0x0],dh
   140002498:	(bad)  
   140002499:	add    BYTE PTR [rbx+0x0],ah
   14000249c:	add    BYTE PTR gs:[rbx+0x0],al
   1400024a0:	(bad)  
   1400024a1:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400024a5:	add    BYTE PTR [rdx+0x0],ah
   1400024a8:	(bad)  
   1400024a9:	add    BYTE PTR [rbx+0x0],ah
   1400024ac:	imul   eax,DWORD PTR [rax],0x28
   1400024af:	add    BYTE PTR [rcx],ch
   1400024b1:	add    BYTE PTR [rax],ah
   1400024b3:	add    BYTE PTR [rdx+0x0],dh
   1400024b6:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   1400024bb:	add    BYTE PTR [rdx+0x0],dh
   1400024be:	outs   dx,BYTE PTR ds:[rsi]
   1400024bf:	add    BYTE PTR [rbp+0x0],ah
   1400024c2:	add    BYTE PTR fs:[rax],ah
   1400024c5:	add    BYTE PTR [rip+0x6400],ah        # 0x1400088cb
   1400024cb:	add    BYTE PTR [rax],al
   1400024cd:	add    BYTE PTR [rax],al
   1400024cf:	add    BYTE PTR [rdx+0x0],dl
   1400024d2:	add    BYTE PTR gs:[rcx+0x0],ah
   1400024d6:	ins    BYTE PTR es:[rdi],dx
   1400024d7:	add    BYTE PTR [rip+0x69007400],ch        # 0x1a90098dd
   1400024dd:	add    BYTE PTR [rbp+0x0],ch
   1400024e0:	add    BYTE PTR gs:[rax],ah
   1400024e3:	add    BYTE PTR [rax+rax*1+0x72],dh
   1400024e7:	add    BYTE PTR [rcx+0x0],ah
   1400024ea:	movsxd eax,DWORD PTR [rax]
   1400024ec:	imul   eax,DWORD PTR [rax],0x67006e
   1400024f2:	and    BYTE PTR [rax],al
   1400024f4:	outs   dx,BYTE PTR ds:[rsi]
   1400024f5:	add    BYTE PTR [rdi+0x0],ch
   1400024f8:	ja     0x1400024fa
   1400024fa:	and    BYTE PTR [rax],al
   1400024fc:	imul   eax,DWORD PTR [rax],0x20006e
   140002502:	jo     0x140002504
   140002504:	jb     0x140002506
   140002506:	outs   dx,DWORD PTR ds:[rsi]
   140002507:	add    BYTE PTR [rdi+0x0],ah
   14000250a:	jb     0x14000250c
   14000250c:	add    BYTE PTR gs:[rbx+0x0],dh
   140002510:	jae    0x140002512
   140002512:	add    BYTE PTR cs:[rax],ah
   140002515:	add    BYTE PTR [rax+0x0],dl
   140002518:	jb     0x14000251a
   14000251a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000251e:	jae    0x140002520
   140002520:	and    BYTE PTR [rax],al
   140002522:	add    BYTE PTR [r8+r8*1+0x72],sil
   140002527:	add    BYTE PTR [rax+rax*1+0x2d],ch
   14000252b:	add    BYTE PTR [rbx+0x0],al
   14000252e:	and    BYTE PTR [rax],al
   140002530:	je     0x140002532
   140002532:	outs   dx,DWORD PTR ds:[rsi]
   140002533:	add    BYTE PTR [rax],ah
   140002535:	add    BYTE PTR [rbx+0x0],dh
   140002538:	je     0x14000253a
   14000253a:	outs   dx,DWORD PTR ds:[rsi]
   14000253b:	add    BYTE PTR [rax+0x0],dh
   14000253e:	and    BYTE PTR [rax],al
   140002540:	je     0x140002542
   140002542:	jb     0x140002544
   140002544:	(bad)  
   140002545:	add    BYTE PTR [rbx+0x0],ah
   140002548:	imul   eax,DWORD PTR [rax],0x67006e
   14000254e:	add    BYTE PTR cs:[rsi],ch
   140002551:	add    BYTE PTR [rsi],ch
	...
   14000255f:	add    BYTE PTR [rbp+0x0],al
   140002562:	push   rdx
   140002563:	add    BYTE PTR [rdx+0x0],dl
   140002566:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   14000256a:	cmp    al,BYTE PTR [rax]
   14000256c:	and    BYTE PTR [rax],al
   14000256e:	push   rax
   14000256f:	add    BYTE PTR [rdx+0x0],dh
   140002572:	outs   dx,DWORD PTR ds:[rsi]
   140002573:	add    BYTE PTR [rbx+0x0],ah
   140002576:	add    BYTE PTR gs:[rbx+0x0],dh
   14000257a:	jae    0x14000257c
   14000257c:	push   rsp
   14000257d:	add    BYTE PTR [rdx+0x0],dh
   140002580:	(bad)  
   140002581:	add    BYTE PTR [rbx+0x0],ah
   140002584:	add    BYTE PTR gs:[rax],ch
   140002587:	add    BYTE PTR [rcx],ch
   140002589:	add    BYTE PTR [rax],ah
   14000258b:	add    BYTE PTR [rdx+0x0],dh
   14000258e:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   140002593:	add    BYTE PTR [rdx+0x0],dh
   140002596:	outs   dx,BYTE PTR ds:[rsi]
   140002597:	add    BYTE PTR [rbp+0x0],ah
   14000259a:	add    BYTE PTR fs:[rax],ah
   14000259d:	add    BYTE PTR [rip+0x6400],ah        # 0x1400089a3
   1400025a3:	add    BYTE PTR [rax],al
   1400025a5:	add    BYTE PTR [rax],al
   1400025a7:	add    BYTE PTR [rax+rax*1+0x72],dl
   1400025ab:	add    BYTE PTR [rcx+0x0],ah
   1400025ae:	movsxd eax,DWORD PTR [rax]
   1400025b0:	imul   eax,DWORD PTR [rax],0x67006e
   1400025b6:	and    BYTE PTR [rax],al
   1400025b8:	jae    0x1400025ba
   1400025ba:	je     0x1400025bc
   1400025bc:	outs   dx,DWORD PTR ds:[rsi]
   1400025bd:	add    BYTE PTR [rax+0x0],dh
   1400025c0:	jo     0x1400025c2
   1400025c2:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
	...
   1400025cf:	add    BYTE PTR [rbp+0x0],al
   1400025d2:	push   rdx
   1400025d3:	add    BYTE PTR [rdx+0x0],dl
   1400025d6:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   1400025da:	cmp    al,BYTE PTR [rax]
   1400025dc:	and    BYTE PTR [rax],al
   1400025de:	push   rbx
   1400025df:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400025e3:	add    BYTE PTR [rax+0x0],dh
   1400025e6:	push   rsp
   1400025e7:	add    BYTE PTR [rdx+0x0],dh
   1400025ea:	(bad)  
   1400025eb:	add    BYTE PTR [rbx+0x0],ah
   1400025ee:	add    BYTE PTR gs:[rax],ch
   1400025f1:	add    BYTE PTR [rcx],ch
   1400025f3:	add    BYTE PTR [rax],ah
   1400025f5:	add    BYTE PTR [rdx+0x0],dh
   1400025f8:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   1400025fd:	add    BYTE PTR [rdx+0x0],dh
   140002600:	outs   dx,BYTE PTR ds:[rsi]
   140002601:	add    BYTE PTR [rbp+0x0],ah
   140002604:	add    BYTE PTR fs:[rax],ah
   140002607:	add    BYTE PTR [rip+0x6400],ah        # 0x140008a0d
   14000260d:	add    BYTE PTR [rax],al
   14000260f:	add    BYTE PTR [rax],dh
	...
   14000261d:	add    BYTE PTR [rax],al
   14000261f:	add    BYTE PTR [rax+rax*1+0x6f],dl
   140002623:	add    BYTE PTR [rax+rax*1+0x61],dh
   140002627:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000262b:	add    BYTE PTR [rbp+0x0],al
   14000262e:	jbe    0x140002630
   140002630:	add    BYTE PTR gs:[rsi+0x0],ch
   140002634:	je     0x140002636
   140002636:	jae    0x140002638
   140002638:	and    BYTE PTR [rax],al
   14000263a:	push   rax
   14000263b:	add    BYTE PTR [rdx+0x0],dh
   14000263e:	outs   dx,DWORD PTR ds:[rsi]
   14000263f:	add    BYTE PTR [rbx+0x0],ah
   140002642:	add    BYTE PTR gs:[rbx+0x0],dh
   140002646:	jae    0x140002648
   140002648:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000264d:	add    BYTE PTR [rax],ah
   14000264f:	add    BYTE PTR [rip+0x36004900],ah        # 0x176006f55
   140002655:	add    BYTE PTR [rax+rax*1],dh
   140002658:	add    BYTE PTR fs:[rdx],cl
   14000265b:	add    BYTE PTR [rbx+0x0],dl
   14000265e:	je     0x140002660
   140002660:	(bad)  
   140002661:	add    BYTE PTR [rdx+0x0],dh
   140002664:	je     0x140002666
   140002666:	and    BYTE PTR [rax],al
   140002668:	push   rsp
   140002669:	add    BYTE PTR [rcx+0x0],ch
   14000266c:	ins    DWORD PTR es:[rdi],dx
   14000266d:	add    BYTE PTR [rbp+0x0],ah
   140002670:	and    BYTE PTR [rax],al
   140002672:	and    BYTE PTR [rax],al
   140002674:	and    BYTE PTR [rax],al
   140002676:	and    BYTE PTR [rax],al
   140002678:	and    BYTE PTR [rax],al
   14000267a:	and    BYTE PTR [rax],al
   14000267c:	and    BYTE PTR [rax],al
   14000267e:	and    BYTE PTR [rax],al
   140002680:	and    BYTE PTR [rax],al
   140002682:	and    BYTE PTR [rax],al
   140002684:	and    BYTE PTR [rax],al
   140002686:	and    BYTE PTR [rax],al
   140002688:	and    BYTE PTR [rax],al
   14000268a:	and    BYTE PTR [rax],al
   14000268c:	and    eax,0x20007300
   140002691:	add    BYTE PTR [rax],ch
   140002693:	add    BYTE PTR [rax],dh
   140002695:	add    BYTE PTR [rax+0x0],bh
   140002698:	and    eax,0x31003000
   14000269d:	add    BYTE PTR [rsi],dh
   14000269f:	add    BYTE PTR [rcx+0x0],cl
   1400026a2:	add    BYTE PTR ss:[rax+rax*1],dh
   1400026a6:	pop    rax
   1400026a7:	add    BYTE PTR [rcx],ch
   1400026a9:	add    BYTE PTR [rdx],cl
   1400026ab:	add    BYTE PTR [rbp+0x0],al
   1400026ae:	outs   dx,BYTE PTR ds:[rsi]
   1400026af:	add    BYTE PTR [rax+rax*1+0x20],ah
   1400026b3:	add    BYTE PTR [rax+rax*1+0x69],dl
   1400026b7:	add    BYTE PTR [rbp+0x0],ch
   1400026ba:	add    BYTE PTR gs:[rax],ah
   1400026bd:	add    BYTE PTR [rax],ah
   1400026bf:	add    BYTE PTR [rax],ah
   1400026c1:	add    BYTE PTR [rax],ah
   1400026c3:	add    BYTE PTR [rax],ah
   1400026c5:	add    BYTE PTR [rax],ah
   1400026c7:	add    BYTE PTR [rax],ah
   1400026c9:	add    BYTE PTR [rax],ah
   1400026cb:	add    BYTE PTR [rax],ah
   1400026cd:	add    BYTE PTR [rax],ah
   1400026cf:	add    BYTE PTR [rax],ah
   1400026d1:	add    BYTE PTR [rax],ah
   1400026d3:	add    BYTE PTR [rax],ah
   1400026d5:	add    BYTE PTR [rax],ah
   1400026d7:	add    BYTE PTR [rax],ah
   1400026d9:	add    BYTE PTR [rax],ah
   1400026db:	add    BYTE PTR [rip+0x20007300],ah        # 0x1600099e1
   1400026e1:	add    BYTE PTR [rax],ch
   1400026e3:	add    BYTE PTR [rax],dh
   1400026e5:	add    BYTE PTR [rax+0x0],bh
   1400026e8:	and    eax,0x31003000
   1400026ed:	add    BYTE PTR [rsi],dh
   1400026ef:	add    BYTE PTR [rcx+0x0],cl
   1400026f2:	add    BYTE PTR ss:[rax+rax*1],dh
   1400026f6:	pop    rax
   1400026f7:	add    BYTE PTR [rcx],ch
   1400026f9:	add    BYTE PTR [rdx],cl
   1400026fb:	add    BYTE PTR [rbp+0x0],al
   1400026fe:	ins    BYTE PTR es:[rdi],dx
   1400026ff:	add    BYTE PTR [rcx+0x0],ah
   140002702:	jo     0x140002704
   140002704:	jae    0x140002706
   140002706:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000270b:	add    BYTE PTR [rax+rax*1+0x69],dl
   14000270f:	add    BYTE PTR [rbp+0x0],ch
   140002712:	add    BYTE PTR gs:[rax],ah
   140002715:	add    BYTE PTR [rax],ah
   140002717:	add    BYTE PTR [rax],ah
   140002719:	add    BYTE PTR [rax],ah
   14000271b:	add    BYTE PTR [rax],ah
   14000271d:	add    BYTE PTR [rax],ah
   14000271f:	add    BYTE PTR [rax],ah
   140002721:	add    BYTE PTR [rax],ah
   140002723:	add    BYTE PTR [rax],ah
   140002725:	add    BYTE PTR [rax],ah
   140002727:	add    BYTE PTR [rax],ah
   140002729:	add    BYTE PTR [rax],ah
   14000272b:	add    BYTE PTR [rip+0x36004900],ah        # 0x176007031
   140002731:	add    BYTE PTR [rax+rax*1],dh
   140002734:	add    BYTE PTR fs:[rax],ah
   140002737:	add    BYTE PTR [rbx+0x0],dh
   14000273a:	add    BYTE PTR gs:[rbx+0x0],ah
   14000273e:	or     al,BYTE PTR [rax]
	...
   140002748:	rex.RXB add BYTE PTR [r13+0x0],r14b
   14000274c:	imul   eax,DWORD PTR [rax],0x64
   140002752:	add    BYTE PTR [rax],al
   140002754:	add    BYTE PTR [rax],al
   140002756:	add    BYTE PTR [rax],al
   140002758:	add    BYTE PTR [r14+0x0],r14b
   14000275c:	add    BYTE PTR gs:[rsi+0x0],ch
   140002760:	je     0x140002762
   140002762:	push   rsp
   140002763:	add    BYTE PTR [rcx+0x0],bh
   140002766:	jo     0x140002768
   140002768:	add    BYTE PTR gs:[rax],al
   14000276b:	add    BYTE PTR [rax],al
   14000276d:	add    BYTE PTR [rax],al
   14000276f:	add    BYTE PTR [rbp+0x0],al
   140002772:	jbe    0x140002774
   140002774:	add    BYTE PTR gs:[rsi+0x0],ch
   140002778:	je     0x14000277a
   14000277a:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000277e:	ins    DWORD PTR es:[rdi],dx
   14000277f:	add    BYTE PTR [rbp+0x0],ah
   140002782:	add    BYTE PTR [rax],al
   140002784:	add    BYTE PTR [rax],al
   140002786:	add    BYTE PTR [rax],al
   140002788:	add    BYTE PTR [r14+0x0],r14b
   14000278c:	add    BYTE PTR gs:[rsi+0x0],ch
   140002790:	je     0x140002792
   140002792:	rex.XB add BYTE PTR [r15+0x0],bpl
   140002796:	jne    0x140002798
   140002798:	outs   dx,BYTE PTR ds:[rsi]
   140002799:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000279d:	add    BYTE PTR [rax],al
   14000279f:	add    BYTE PTR [rbx],ch
   1400027a1:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0054a7
   1400027a7:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0054ad
   1400027ad:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0054b3
   1400027b3:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0054b9
   1400027b9:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0054bf
   1400027bf:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0054c5
   1400027c5:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0054cb
   1400027cb:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0054d1
   1400027d1:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0054d7
   1400027d7:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0054dd
   1400027dd:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0054e3
   1400027e3:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0054e9
   1400027e9:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0054ef
   1400027ef:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0054f5
   1400027f5:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0054fb
   1400027fb:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005501
   140002801:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005507
   140002807:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00550d
   14000280d:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005513
   140002813:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005519
   140002819:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00551f
   14000281f:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005525
   140002825:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00552b
   14000282b:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005531
   140002831:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005537
   140002837:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00553d
   14000283d:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005543
   140002843:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005549
   140002849:	add    BYTE PTR [rip+0xa002b00],ch        # 0x14a00534f
   14000284f:	add    BYTE PTR [rax+rax*1+0x25],bh
   140002853:	add    BYTE PTR [rcx],dh
   140002855:	add    BYTE PTR [rax],dh
   140002857:	add    BYTE PTR [rbx+0x0],dh
   14000285a:	and    BYTE PTR [rax],al
   14000285c:	and    BYTE PTR [rax],al
   14000285e:	and    BYTE PTR [rax],al
   140002860:	and    BYTE PTR [rax],al
   140002862:	and    eax,0x32002d00
   140002867:	add    BYTE PTR [rax],dh
   140002869:	add    BYTE PTR [rbx+0x0],dh
   14000286c:	and    BYTE PTR [rax],al
   14000286e:	and    eax,0x31002d00
   140002873:	add    BYTE PTR [rax],dh
   140002875:	add    BYTE PTR [rbx+0x0],dh
   140002878:	and    BYTE PTR [rax],al
   14000287a:	and    BYTE PTR [rax],al
   14000287c:	and    eax,0x33002d00
   140002881:	add    BYTE PTR [rsi],dh
   140002883:	add    BYTE PTR [rbx+0x0],dh
   140002886:	and    BYTE PTR [rax],al
   140002888:	and    BYTE PTR [rax],al
   14000288a:	jl     0x14000288c
   14000288c:	or     al,BYTE PTR [rax]
   14000288e:	sub    eax,DWORD PTR [rax]
   140002890:	sub    eax,0x2d002d00
   140002895:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00559b
   14000289b:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0055a1
   1400028a1:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0055a7
   1400028a7:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0055ad
   1400028ad:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0055b3
   1400028b3:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0055b9
   1400028b9:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0055bf
   1400028bf:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0055c5
   1400028c5:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0055cb
   1400028cb:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0055d1
   1400028d1:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0055d7
   1400028d7:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0055dd
   1400028dd:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0055e3
   1400028e3:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0055e9
   1400028e9:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0055ef
   1400028ef:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0055f5
   1400028f5:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0055fb
   1400028fb:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005601
   140002901:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005607
   140002907:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00560d
   14000290d:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005613
   140002913:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005619
   140002919:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00561f
   14000291f:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005625
   140002925:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00562b
   14000292b:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005631
   140002931:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005637
   140002937:	add    BYTE PTR [rip+0xa002b00],ch        # 0x14a00543d
   14000293d:	add    BYTE PTR [rax],al
   14000293f:	add    BYTE PTR [rbx],ch
   140002941:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005647
   140002947:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00564d
   14000294d:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005653
   140002953:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005659
   140002959:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00565f
   14000295f:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005665
   140002965:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00566b
   14000296b:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005671
   140002971:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005677
   140002977:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00567d
   14000297d:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005683
   140002983:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005689
   140002989:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00568f
   14000298f:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005695
   140002995:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00569b
   14000299b:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0056a1
   1400029a1:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0056a7
   1400029a7:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0056ad
   1400029ad:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0056b3
   1400029b3:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0056b9
   1400029b9:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0056bf
   1400029bf:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0056c5
   1400029c5:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0056cb
   1400029cb:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0056d1
   1400029d1:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0056d7
   1400029d7:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0056dd
   1400029dd:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0056e3
   1400029e3:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0056e9
   1400029e9:	add    BYTE PTR [rip+0xa002b00],ch        # 0x14a0054ef
	...
   1400029f7:	add    BYTE PTR [rax+rax*1+0x65],al
   1400029fb:	add    BYTE PTR [rsi+0x0],ah
   1400029fe:	(bad)  
   1400029ff:	add    BYTE PTR [rbp+0x0],dh
   140002a02:	ins    BYTE PTR es:[rdi],dx
   140002a03:	add    BYTE PTR [rax+rax*1+0x0],dh
   140002a07:	add    BYTE PTR [rax+rax*1+0x25],bh
   140002a0b:	add    BYTE PTR [rcx],dh
   140002a0d:	add    BYTE PTR [rax],dh
   140002a0f:	add    BYTE PTR [rax+rax*1+0x20],ah
   140002a13:	add    BYTE PTR [rax],ah
   140002a15:	add    BYTE PTR [rax],ah
   140002a17:	add    BYTE PTR [rax],ah
   140002a19:	add    BYTE PTR [rip+0x32002d00],ah        # 0x17200571f
   140002a1f:	add    BYTE PTR [rax],dh
   140002a21:	add    BYTE PTR [rbx+0x0],dh
   140002a24:	and    BYTE PTR [rax],al
   140002a26:	and    eax,0x31002d00
   140002a2b:	add    BYTE PTR [rax],dh
   140002a2d:	add    BYTE PTR [rbx+0x0],dh
   140002a30:	and    BYTE PTR [rax],al
   140002a32:	and    BYTE PTR [rax],al
   140002a34:	and    eax,0x36003300
   140002a39:	add    BYTE PTR [rbx+0x0],dh
   140002a3c:	jl     0x140002a3e
   140002a3e:	or     al,BYTE PTR [rax]
	...
   140002a48:	pop    rbx
   140002a49:	add    BYTE PTR [rip+0x32003100],ah        # 0x172005b4f
   140002a4f:	add    BYTE PTR [rbx+0x0],dh
   140002a52:	and    BYTE PTR [rax],al
   140002a54:	add    BYTE PTR [rax],al
   140002a56:	add    BYTE PTR [rax],al
   140002a58:	push   rax
   140002a59:	add    BYTE PTR [rdx],bh
   140002a5b:	add    BYTE PTR [rip+0x34003000],ah        # 0x174005a61
   140002a61:	add    BYTE PTR [rax+0x0],bl
   140002a64:	add    BYTE PTR [rax],al
   140002a66:	add    BYTE PTR [rax],al
   140002a68:	and    BYTE PTR [rax],al
   140002a6a:	add    BYTE PTR [rax],al
   140002a6c:	add    BYTE PTR [rax],al
   140002a6e:	add    BYTE PTR [rax],al
   140002a70:	push   rsp
   140002a71:	add    BYTE PTR [rdx],bh
   140002a73:	add    BYTE PTR [rip+0x34003000],ah        # 0x174005a79
   140002a79:	add    BYTE PTR [rax+0x0],bl
   140002a7c:	add    BYTE PTR [rax],al
   140002a7e:	add    BYTE PTR [rax],al
   140002a80:	and    BYTE PTR [rax],al
   140002a82:	and    eax,0x73003800
   140002a87:	add    BYTE PTR [rax],ch
   140002a89:	add    BYTE PTR [rip+0x34003000],ah        # 0x174005a8f
   140002a8f:	add    BYTE PTR [rax+rax*1+0x29],ah
   140002a93:	add    BYTE PTR [rax],al
   140002a95:	add    BYTE PTR [rax],al
   140002a97:	add    BYTE PTR [rax],ah
   140002a99:	add    BYTE PTR [rip+0x73003800],ah        # 0x1b300629f
   140002a9f:	add    BYTE PTR [rax],al
   140002aa1:	add    BYTE PTR [rax],al
   140002aa3:	add    BYTE PTR [rbp+0x0],bl
   140002aa6:	and    BYTE PTR [rax],al
	...
   140002ab0:	rex.WB add BYTE PTR [r14+0x0],bpl
   140002ab4:	movsxd eax,DWORD PTR [rax]
   140002ab6:	outs   dx,DWORD PTR ds:[rsi]
   140002ab7:	add    BYTE PTR [rdx+0x0],dh
   140002aba:	jb     0x140002abc
   140002abc:	add    BYTE PTR gs:[rbx+0x0],ah
   140002ac0:	je     0x140002ac2
   140002ac2:	and    BYTE PTR [rax],al
   140002ac4:	rex.WRB add BYTE PTR [r15+0x0],r9b
   140002ac8:	rex.RX add BYTE PTR [rax],r12b
   140002acb:	add    BYTE PTR [rbx+0x0],dh
   140002ace:	imul   eax,DWORD PTR [rax],0x65007a
   140002ad4:	or     al,BYTE PTR [rax]
   140002ad6:	add    BYTE PTR [rax],al
   140002ad8:	add    BYTE PTR [rcx+0x0],r12b
   140002adc:	je     0x140002ade
   140002ade:	(bad)  
   140002adf:	add    BYTE PTR [rbx+0x0],dl
   140002ae2:	imul   eax,DWORD PTR [rax],0x65007a
   140002ae8:	cmp    eax,0x64002500
   140002aed:	add    BYTE PTR [rax+rax*1],ch
   140002af0:	and    BYTE PTR [rax],al
	...
   140002afe:	add    BYTE PTR [rax],al
   140002b00:	pop    rbx
   140002b01:	add    BYTE PTR [rbp+0x0],al
   140002b04:	push   rdx
   140002b05:	add    BYTE PTR [rdx+0x0],dl
   140002b08:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140002b0c:	cmp    al,BYTE PTR [rax]
   140002b0e:	and    BYTE PTR [rax],al
   140002b10:	rex.WB add BYTE PTR [r14+0x0],cl
   140002b14:	push   rsp
   140002b15:	add    BYTE PTR [rdx],bh
   140002b17:	add    BYTE PTR [rax],ah
   140002b19:	add    BYTE PTR [rbp+0x0],dl
   140002b1c:	outs   dx,BYTE PTR ds:[rsi]
   140002b1d:	add    BYTE PTR [rbx+0x0],ch
   140002b20:	outs   dx,BYTE PTR ds:[rsi]
   140002b21:	add    BYTE PTR [rdi+0x0],ch
   140002b24:	ja     0x140002b26
   140002b26:	outs   dx,BYTE PTR ds:[rsi]
   140002b27:	add    BYTE PTR [rax],ah
   140002b29:	add    BYTE PTR [rcx+0x0],ch
   140002b2c:	outs   dx,BYTE PTR ds:[rsi]
   140002b2d:	add    BYTE PTR [rax+rax*1+0x65],ah
   140002b31:	add    BYTE PTR [rax+0x0],bh
   140002b34:	cmp    al,BYTE PTR [rax]
   140002b36:	and    BYTE PTR [rax],al
   140002b38:	and    eax,0x5d006400
   140002b3d:	add    BYTE PTR [rax],al
   140002b3f:	add    BYTE PTR [rax+rax*1+0x52],dl
   140002b43:	add    BYTE PTR [rcx+0x0],al
   140002b46:	rex.XB add BYTE PTR [r9+0x0],cl
   140002b4a:	rex.WRX add BYTE PTR [rdi+0x0],r8b
   140002b4e:	pop    rdi
   140002b4f:	add    BYTE PTR [rbx+0x0],dl
   140002b52:	push   rsp
   140002b53:	add    BYTE PTR [rcx+0x0],al
   140002b56:	push   rdx
   140002b57:	add    BYTE PTR [rax+rax*1+0x45],dl
   140002b5b:	add    BYTE PTR [rax+rax*1+0x0],al
   140002b5f:	add    BYTE PTR [rsi],ch
   140002b61:	add    BYTE PTR [rax],ah
   140002b63:	add    BYTE PTR [rax],ah
   140002b65:	add    BYTE PTR [rax],al
   140002b67:	add    BYTE PTR [rax+rax*1+0x52],dl
   140002b6b:	add    BYTE PTR [rcx+0x0],al
   140002b6e:	rex.XB add BYTE PTR [r13+0x0],al
   140002b72:	add    BYTE PTR [rax],al
   140002b74:	add    BYTE PTR [rax],al
   140002b76:	add    BYTE PTR [rax],al
   140002b78:	and    eax,0x5b007300
   140002b7d:	add    BYTE PTR [rip+0x5d007300],ah        # 0x19d009e83
   140002b83:	add    BYTE PTR [rax],ah
   140002b85:	add    BYTE PTR [rax],al
   140002b87:	add    BYTE PTR [rip+0xa007300],ah        # 0x14a009e8d
   140002b8d:	add    BYTE PTR [rax],al
   140002b8f:	add    BYTE PTR [rbx+0x0],bl
   140002b92:	add    BYTE PTR [r10+0x0],r10b
   140002b96:	push   rdx
   140002b97:	add    BYTE PTR [rdi+0x0],cl
   140002b9a:	push   rdx
   140002b9b:	add    BYTE PTR [rdx],bh
   140002b9d:	add    BYTE PTR [rax],ah
   140002b9f:	add    BYTE PTR [rbx+0x0],dl
   140002ba2:	je     0x140002ba4
   140002ba4:	jb     0x140002ba6
   140002ba6:	imul   eax,DWORD PTR [rax],0x67006e
   140002bac:	cmp    al,BYTE PTR [rax]
   140002bae:	and    BYTE PTR [rax],al
   140002bb0:	push   rbp
   140002bb1:	add    BYTE PTR [rsi+0x0],ch
   140002bb4:	imul   eax,DWORD PTR [rax],0x6e
   140002bb7:	add    BYTE PTR [rdi+0x0],ch
   140002bba:	ja     0x140002bbc
   140002bbc:	outs   dx,BYTE PTR ds:[rsi]
   140002bbd:	add    BYTE PTR [rax],ah
   140002bbf:	add    BYTE PTR [rcx+0x0],ch
   140002bc2:	outs   dx,BYTE PTR ds:[rsi]
   140002bc3:	add    BYTE PTR [rax+rax*1+0x65],ah
   140002bc7:	add    BYTE PTR [rax+0x0],bh
   140002bca:	cmp    al,BYTE PTR [rax]
   140002bcc:	and    BYTE PTR [rax],al
   140002bce:	and    eax,0x5d006400
   140002bd3:	add    BYTE PTR [rax],al
   140002bd5:	add    BYTE PTR [rax],al
   140002bd7:	add    BYTE PTR [rbp+0x0],dl
   140002bda:	outs   dx,BYTE PTR ds:[rsi]
   140002bdb:	add    BYTE PTR [rbx+0x0],ch
   140002bde:	outs   dx,BYTE PTR ds:[rsi]
   140002bdf:	add    BYTE PTR [rdi+0x0],ch
   140002be2:	ja     0x140002be4
   140002be4:	outs   dx,BYTE PTR ds:[rsi]
   140002be5:	add    BYTE PTR [rax+rax*1+0x79],dl
   140002be9:	add    BYTE PTR [rax+0x0],dh
   140002bec:	add    BYTE PTR gs:[rdx],bh
   140002bef:	add    BYTE PTR [rax],ah
   140002bf1:	add    BYTE PTR [rip+0x6400],ah        # 0x140008ff7
   140002bf7:	add    BYTE PTR [rcx+0x0],al
   140002bfa:	jbe    0x140002bfc
   140002bfc:	(bad)  
   140002bfd:	add    BYTE PTR [rcx+0x0],ch
   140002c00:	ins    BYTE PTR es:[rdi],dx
   140002c01:	add    BYTE PTR [rcx+0x0],ah
   140002c04:	(bad)  
   140002c05:	add    BYTE PTR [rax+rax*1+0x65],ch
   140002c09:	add    BYTE PTR [rax],ah
   140002c0b:	add    BYTE PTR [rbp+0x0],ch
   140002c0e:	outs   dx,DWORD PTR ds:[rsi]
   140002c0f:	add    BYTE PTR [rax+rax*1+0x75],ah
   140002c13:	add    BYTE PTR [rax+rax*1+0x65],ch
   140002c17:	add    BYTE PTR [rbx+0x0],dh
   140002c1a:	cmp    al,BYTE PTR [rax]
   140002c1c:	add    BYTE PTR [rax],al
   140002c1e:	add    BYTE PTR [rax],al
   140002c20:	and    BYTE PTR [rax],al
   140002c22:	and    BYTE PTR [rax],al
   140002c24:	and    BYTE PTR [rax],al
   140002c26:	and    BYTE PTR [rax],al
   140002c28:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140002c2c:	add    BYTE PTR fs:[rbp+0x0],dh
   140002c30:	ins    BYTE PTR es:[rdi],dx
   140002c31:	add    BYTE PTR [rbp+0x0],ah
   140002c34:	and    BYTE PTR [rax],al
   140002c36:	and    BYTE PTR [rax],al
   140002c38:	cmp    al,BYTE PTR [rax]
   140002c3a:	and    BYTE PTR [rax],al
   140002c3c:	and    BYTE PTR [rax],al
   140002c3e:	add    BYTE PTR [rax+r8*1+0x61],r13b
   140002c43:	add    BYTE PTR [rdi+0x0],ah
   140002c46:	and    BYTE PTR [rax],al
   140002c48:	and    BYTE PTR [rax],al
   140002c4a:	and    BYTE PTR [rax],al
   140002c4c:	and    BYTE PTR [rax],al
   140002c4e:	and    BYTE PTR [rax],al
   140002c50:	and    BYTE PTR [rax],al
   140002c52:	and    BYTE PTR [rax],al
   140002c54:	and    BYTE PTR [rax],al
   140002c56:	cmp    al,BYTE PTR [rax]
   140002c58:	and    BYTE PTR [rax],al
   140002c5a:	add    BYTE PTR [rbp+0x0],r12b
   140002c5e:	data16 add BYTE PTR [rcx+0x0],ah
   140002c62:	jne    0x140002c64
   140002c64:	ins    BYTE PTR es:[rdi],dx
   140002c65:	add    BYTE PTR [rax+rax*1+0x20],dh
   140002c69:	add    BYTE PTR [rdx],bh
   140002c6b:	add    BYTE PTR [rax],ah
   140002c6d:	add    BYTE PTR [rax],ah
   140002c6f:	add    BYTE PTR [rax+rax*1+0x65],al
   140002c73:	add    BYTE PTR [rbx+0x0],dh
   140002c76:	movsxd eax,DWORD PTR [rax]
   140002c78:	jb     0x140002c7a
   140002c7a:	imul   eax,DWORD PTR [rax],0x740070
   140002c80:	imul   eax,DWORD PTR [rax],0x6e006f
   140002c86:	or     al,BYTE PTR [rax]
	...
   140002c90:	sub    eax,0x2d002d00
   140002c95:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00599b
   140002c9b:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0059a1
   140002ca1:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0059a7
   140002ca7:	add    BYTE PTR [rdx],bh
   140002ca9:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0059af
   140002caf:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0059b5
   140002cb5:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0059bb
   140002cbb:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0059c1
   140002cc1:	add    BYTE PTR [rip+0x3a002d00],ch        # 0x17a0059c7
   140002cc7:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0059cd
   140002ccd:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0059d3
   140002cd3:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0059d9
   140002cd9:	add    BYTE PTR [rdx],bh
   140002cdb:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0059e1
   140002ce1:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0059e7
   140002ce7:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0059ed
   140002ced:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0059f3
   140002cf3:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0059f9
   140002cf9:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d0059ff
   140002cff:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005a05
   140002d05:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005a0b
   140002d0b:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005a11
   140002d11:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005a17
   140002d17:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005a1d
   140002d1d:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005a23
   140002d23:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005a29
   140002d29:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005a2f
   140002d2f:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d005a35
   140002d35:	add    BYTE PTR [rip+0x0],ch        # 0x140002d3b
   140002d3b:	add    BYTE PTR [rax],al
   140002d3d:	add    BYTE PTR [rax],al
   140002d3f:	add    BYTE PTR [rdi+0x0],cl
   140002d42:	rex.WRX add BYTE PTR [rax],r12b
   140002d45:	add    BYTE PTR [rax],al
   140002d47:	add    BYTE PTR [rdi+0x0],cl
   140002d4a:	rex.RX add BYTE PTR [rsi+0x0],r8b
   140002d4e:	add    BYTE PTR [rax],al
   140002d50:	and    eax,0x30003100
   140002d55:	add    BYTE PTR [rbx+0x0],dh
   140002d58:	and    BYTE PTR [rax],al
   140002d5a:	and    BYTE PTR [rax],al
   140002d5c:	cmp    al,BYTE PTR [rax]
   140002d5e:	and    BYTE PTR [rax],al
   140002d60:	and    BYTE PTR [rax],al
   140002d62:	and    eax,0x30002300
   140002d67:	add    BYTE PTR [rcx],dh
   140002d69:	add    BYTE PTR [rax],dh
   140002d6b:	add    BYTE PTR [rax+rax*1+0x78],ch
   140002d6f:	add    BYTE PTR [rax],ah
   140002d71:	add    BYTE PTR [rax],ah
   140002d73:	add    BYTE PTR [rdx],bh
   140002d75:	add    BYTE PTR [rax],ah
   140002d77:	add    BYTE PTR [rax],ah
   140002d79:	add    BYTE PTR [rax],ah
   140002d7b:	add    BYTE PTR [rip+0x20007300],ah        # 0x16000a081
   140002d81:	add    BYTE PTR [rax],ah
   140002d83:	add    BYTE PTR [rax],ah
   140002d85:	add    BYTE PTR [rdx],bh
   140002d87:	add    BYTE PTR [rax],ah
   140002d89:	add    BYTE PTR [rax],ah
   140002d8b:	add    BYTE PTR [rip+0xa007300],ah        # 0x14a00a091
   140002d91:	add    BYTE PTR [rax],al
   140002d93:	add    BYTE PTR [rax],al
   140002d95:	add    BYTE PTR [rax],al
   140002d97:	add    BYTE PTR [rcx+0x0],al
   140002d9a:	jbe    0x140002d9c
   140002d9c:	(bad)  
   140002d9d:	add    BYTE PTR [rcx+0x0],ch
   140002da0:	ins    BYTE PTR es:[rdi],dx
   140002da1:	add    BYTE PTR [rcx+0x0],ah
   140002da4:	(bad)  
   140002da5:	add    BYTE PTR [rax+rax*1+0x65],ch
   140002da9:	add    BYTE PTR [rax],ah
   140002dab:	add    BYTE PTR [rax+rax*1+0x65],ch
   140002daf:	add    BYTE PTR [rsi+0x0],dh
   140002db2:	add    BYTE PTR gs:[rax+rax*1+0x73],ch
   140002db7:	add    BYTE PTR [rdx],bh
   140002db9:	add    BYTE PTR [rax],al
   140002dbb:	add    BYTE PTR [rax],al
   140002dbd:	add    BYTE PTR [rax],al
   140002dbf:	add    BYTE PTR [rax],ah
   140002dc1:	add    BYTE PTR [rax],ah
   140002dc3:	add    BYTE PTR [rax],ah
   140002dc5:	add    BYTE PTR [rax],ah
   140002dc7:	add    BYTE PTR [rax],ah
   140002dc9:	add    BYTE PTR [rax],ah
   140002dcb:	add    BYTE PTR [rax],ah
   140002dcd:	add    BYTE PTR [rip+0x33003000],ah        # 0x173005dd3
   140002dd3:	add    BYTE PTR [rax+rax*1+0x20],ah
   140002dd7:	add    BYTE PTR [rax],ah
   140002dd9:	add    BYTE PTR [rdx],bh
   140002ddb:	add    BYTE PTR [rax],ah
   140002ddd:	add    BYTE PTR [rax],ah
   140002ddf:	add    BYTE PTR [rip+0x20007300],ah        # 0x16000a0e5
   140002de5:	add    BYTE PTR [rax],ch
   140002de7:	add    BYTE PTR [rax+rax*1+0x65],al
   140002deb:	add    BYTE PTR [rsi+0x0],ah
   140002dee:	(bad)  
   140002def:	add    BYTE PTR [rbp+0x0],dh
   140002df2:	ins    BYTE PTR es:[rdi],dx
   140002df3:	add    BYTE PTR [rax+rax*1+0x20],dh
   140002df7:	add    BYTE PTR [rax+rax*1+0x65],ch
   140002dfb:	add    BYTE PTR [rsi+0x0],dh
   140002dfe:	add    BYTE PTR gs:[rax+rax*1+0x29],ch
   140002e03:	add    BYTE PTR [rdx],cl
   140002e05:	add    BYTE PTR [rax],al
   140002e07:	add    BYTE PTR [rax],ah
   140002e09:	add    BYTE PTR [rax],ah
   140002e0b:	add    BYTE PTR [rax],ah
   140002e0d:	add    BYTE PTR [rax],ah
   140002e0f:	add    BYTE PTR [rax],ah
   140002e11:	add    BYTE PTR [rax],ah
   140002e13:	add    BYTE PTR [rax],ah
   140002e15:	add    BYTE PTR [rip+0x33003000],ah        # 0x173005e1b
   140002e1b:	add    BYTE PTR [rax+rax*1+0x20],ah
   140002e1f:	add    BYTE PTR [rax],ah
   140002e21:	add    BYTE PTR [rdx],bh
   140002e23:	add    BYTE PTR [rax],ah
   140002e25:	add    BYTE PTR [rax],ah
   140002e27:	add    BYTE PTR [rip+0xa007300],ah        # 0x14a00a12d
   140002e2d:	add    BYTE PTR [rax],al
   140002e2f:	add    BYTE PTR [rax+rax*1+0x72],dl
   140002e33:	add    BYTE PTR [rcx+0x0],ah
   140002e36:	movsxd eax,DWORD PTR [rax]
   140002e38:	add    BYTE PTR gs:[rax],ah
   140002e3b:	add    BYTE PTR [rsi+0x0],dh
   140002e3e:	add    BYTE PTR gs:[rdx+0x0],dh
   140002e42:	(bad)  
   140002e43:	add    BYTE PTR [rdi+0x0],ch
   140002e46:	jae    0x140002e48
   140002e48:	imul   eax,DWORD PTR [rax],0x790074
   140002e4e:	and    BYTE PTR [rax],al
   140002e50:	imul   eax,DWORD PTR [rax],0x63006e
   140002e56:	jb     0x140002e58
   140002e58:	add    BYTE PTR gs:[rcx+0x0],ah
   140002e5c:	jae    0x140002e5e
   140002e5e:	add    BYTE PTR gs:[rbx+0x0],dh
   140002e62:	and    BYTE PTR [rax],al
   140002e64:	ja     0x140002e66
   140002e66:	imul   eax,DWORD PTR [rax],0x680074
   140002e6c:	and    BYTE PTR [rax],al
   140002e6e:	ins    BYTE PTR es:[rdi],dx
   140002e6f:	add    BYTE PTR [rbp+0x0],ah
   140002e72:	jbe    0x140002e74
   140002e74:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   140002e79:	add    BYTE PTR [rsi+0x0],ch
   140002e7c:	jne    0x140002e7e
   140002e7e:	ins    DWORD PTR es:[rdi],dx
   140002e7f:	add    BYTE PTR [rdx+0x0],ah
   140002e82:	add    BYTE PTR gs:[rdx+0x0],dh
   140002e86:	add    BYTE PTR cs:[rdx],cl
   140002e89:	add    BYTE PTR [rbx+0x0],dl
   140002e8c:	jo     0x140002e8e
   140002e8e:	add    BYTE PTR gs:[rbx+0x0],ah
   140002e92:	imul   eax,DWORD PTR [rax],0x690066
   140002e98:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140002e9d:	add    BYTE PTR [rax+rax*1+0x72],dh
   140002ea1:	add    BYTE PTR [rcx+0x0],ah
   140002ea4:	movsxd eax,DWORD PTR [rax]
   140002ea6:	add    BYTE PTR gs:[rax],ah
   140002ea9:	add    BYTE PTR [rax+rax*1+0x65],ch
   140002ead:	add    BYTE PTR [rsi+0x0],dh
   140002eb0:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   140002eb5:	add    BYTE PTR [rcx+0x0],ch
   140002eb8:	ins    DWORD PTR es:[rdi],dx
   140002eb9:	add    BYTE PTR [rax+0x0],dh
   140002ebc:	ins    BYTE PTR es:[rdi],dx
   140002ebd:	add    BYTE PTR [rcx+0x0],ch
   140002ec0:	movsxd eax,DWORD PTR [rax]
   140002ec2:	imul   eax,DWORD PTR [rax],0x6c0074
   140002ec8:	jns    0x140002eca
   140002eca:	and    BYTE PTR [rax],al
   140002ecc:	imul   eax,DWORD PTR [rax],0x63006e
   140002ed2:	ins    BYTE PTR es:[rdi],dx
   140002ed3:	add    BYTE PTR [rbp+0x0],dh
   140002ed6:	add    BYTE PTR fs:[rbp+0x0],ah
   140002eda:	jae    0x140002edc
   140002edc:	and    BYTE PTR [rax],al
   140002ede:	(bad)  
   140002edf:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140002ee3:	add    BYTE PTR [rax],ah
   140002ee5:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140002ee9:	add    BYTE PTR [rdi+0x0],dh
   140002eec:	add    BYTE PTR gs:[rdx+0x0],dh
   140002ef0:	and    BYTE PTR [rax],al
   140002ef2:	ins    BYTE PTR es:[rdi],dx
   140002ef3:	add    BYTE PTR [rbp+0x0],ah
   140002ef6:	jbe    0x140002ef8
   140002ef8:	add    BYTE PTR gs:[rax+rax*1+0x73],ch
   140002efd:	add    BYTE PTR [rsi],ch
   140002eff:	add    BYTE PTR [rdx],cl
	...
   140002f0d:	add    BYTE PTR [rax],al
   140002f0f:	add    BYTE PTR [rbp+0x0],dl
   140002f12:	outs   dx,BYTE PTR ds:[rsi]
   140002f13:	add    BYTE PTR [rcx+0x0],ah
   140002f16:	(bad)  
   140002f17:	add    BYTE PTR [rax+rax*1+0x65],ch
   140002f1b:	add    BYTE PTR [rax],ah
   140002f1d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140002f21:	add    BYTE PTR [rax],ah
   140002f23:	add    BYTE PTR [rdi+0x0],ah
   140002f26:	add    BYTE PTR gs:[rax+rax*1+0x20],dh
   140002f2b:	add    BYTE PTR [rax+rax*1+0x72],dh
   140002f2f:	add    BYTE PTR [rcx+0x0],ah
   140002f32:	movsxd eax,DWORD PTR [rax]
   140002f34:	imul   eax,DWORD PTR [rax],0x67006e
   140002f3a:	and    BYTE PTR [rax],al
   140002f3c:	ins    DWORD PTR es:[rdi],dx
   140002f3d:	add    BYTE PTR [rdi+0x0],ch
   140002f40:	add    BYTE PTR fs:[rbp+0x0],dh
   140002f44:	ins    BYTE PTR es:[rdi],dx
   140002f45:	add    BYTE PTR [rbp+0x0],ah
   140002f48:	and    BYTE PTR [rax],al
   140002f4a:	imul   eax,DWORD PTR [rax],0x66006e
   140002f50:	outs   dx,DWORD PTR ds:[rsi]
   140002f51:	add    BYTE PTR [rdx+0x0],dh
   140002f54:	ins    DWORD PTR es:[rdi],dx
   140002f55:	add    BYTE PTR [rcx+0x0],ah
   140002f58:	je     0x140002f5a
   140002f5a:	imul   eax,DWORD PTR [rax],0x6e006f
   140002f60:	cmp    al,BYTE PTR [rax]
   140002f62:	and    BYTE PTR [rax],al
   140002f64:	and    eax,0x78002300
   140002f69:	add    BYTE PTR [rax],al
   140002f6b:	add    BYTE PTR [rax],al
   140002f6d:	add    BYTE PTR [rax],al
   140002f6f:	add    BYTE PTR [rbp+0x0],dl
   140002f72:	outs   dx,BYTE PTR ds:[rsi]
   140002f73:	add    BYTE PTR [rcx+0x0],ah
   140002f76:	(bad)  
   140002f77:	add    BYTE PTR [rax+rax*1+0x65],ch
   140002f7b:	add    BYTE PTR [rax],ah
   140002f7d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140002f81:	add    BYTE PTR [rax],ah
   140002f83:	add    BYTE PTR [rdi+0x0],ch
   140002f86:	jo     0x140002f88
   140002f88:	add    BYTE PTR gs:[rsi+0x0],ch
   140002f8c:	and    BYTE PTR [rax],al
   140002f8e:	je     0x140002f90
   140002f90:	jb     0x140002f92
   140002f92:	(bad)  
   140002f93:	add    BYTE PTR [rbx+0x0],ah
   140002f96:	imul   eax,DWORD PTR [rax],0x67006e
   140002f9c:	and    BYTE PTR [rax],al
   140002f9e:	jb     0x140002fa0
   140002fa0:	add    BYTE PTR gs:[rdi+0x0],ah
   140002fa4:	imul   eax,DWORD PTR [rax],0x740073
   140002faa:	jb     0x140002fac
   140002fac:	jns    0x140002fae
   140002fae:	and    BYTE PTR [rax],al
   140002fb0:	imul   eax,DWORD PTR [rax],0x65
   140002fb3:	add    BYTE PTR [rcx+0x0],bh
   140002fb6:	cmp    al,BYTE PTR [rax]
   140002fb8:	and    BYTE PTR [rax],al
   140002fba:	and    eax,0x20007300
   140002fbf:	add    BYTE PTR [rax],ch
   140002fc1:	add    BYTE PTR [rip+0x78002300],ah        # 0x1b80052c7
   140002fc7:	add    BYTE PTR [rcx],ch
   140002fc9:	add    BYTE PTR [rax],al
   140002fcb:	add    BYTE PTR [rax],al
   140002fcd:	add    BYTE PTR [rax],al
   140002fcf:	add    BYTE PTR [rbp+0x0],dl
   140002fd2:	outs   dx,BYTE PTR ds:[rsi]
   140002fd3:	add    BYTE PTR [rcx+0x0],ah
   140002fd6:	(bad)  
   140002fd7:	add    BYTE PTR [rax+rax*1+0x65],ch
   140002fdb:	add    BYTE PTR [rax],ah
   140002fdd:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140002fe1:	add    BYTE PTR [rax],ah
   140002fe3:	add    BYTE PTR [rbx+0x0],dh
   140002fe6:	add    BYTE PTR gs:[rax+rax*1+0x20],dh
   140002feb:	add    BYTE PTR [rsi+0x0],ah
   140002fee:	jne    0x140002ff0
   140002ff0:	outs   dx,BYTE PTR ds:[rsi]
   140002ff1:	add    BYTE PTR [rbx+0x0],ah
   140002ff4:	je     0x140002ff6
   140002ff6:	imul   eax,DWORD PTR [rax],0x6e006f
   140002ffc:	and    BYTE PTR [rax],al
   140002ffe:	je     0x140003000
   140003000:	jb     0x140003002
   140003002:	(bad)  
   140003003:	add    BYTE PTR [rbx+0x0],ah
   140003006:	add    BYTE PTR gs:[rax],ah
   140003009:	add    BYTE PTR [rdx+0x0],dh
   14000300c:	add    BYTE PTR gs:[rdi+0x0],ah
   140003010:	imul   eax,DWORD PTR [rax],0x740073
   140003016:	jb     0x140003018
   140003018:	jns    0x14000301a
   14000301a:	and    BYTE PTR [rax],al
   14000301c:	jbe    0x14000301e
   14000301e:	(bad)  
   14000301f:	add    BYTE PTR [rax+rax*1+0x75],ch
   140003023:	add    BYTE PTR [rbp+0x0],ah
   140003026:	cmp    al,BYTE PTR [rax]
   140003028:	and    BYTE PTR [rax],al
   14000302a:	and    eax,0x20007300
   14000302f:	add    BYTE PTR [rax],ch
   140003031:	add    BYTE PTR [rip+0x78002300],ah        # 0x1b8005337
   140003037:	add    BYTE PTR [rcx],ch
   140003039:	add    BYTE PTR [rax],al
   14000303b:	add    BYTE PTR [rax],al
   14000303d:	add    BYTE PTR [rax],al
   14000303f:	add    BYTE PTR [rbp+0x0],dl
   140003042:	outs   dx,BYTE PTR ds:[rsi]
   140003043:	add    BYTE PTR [rcx+0x0],ah
   140003046:	(bad)  
   140003047:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000304b:	add    BYTE PTR [rax],ah
   14000304d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140003051:	add    BYTE PTR [rax],ah
   140003053:	add    BYTE PTR [rdi+0x0],ch
   140003056:	jo     0x140003058
   140003058:	add    BYTE PTR gs:[rsi+0x0],ch
   14000305c:	and    BYTE PTR [rax],al
   14000305e:	je     0x140003060
   140003060:	jb     0x140003062
   140003062:	(bad)  
   140003063:	add    BYTE PTR [rbx+0x0],ah
   140003066:	add    BYTE PTR gs:[rax],ah
   140003069:	add    BYTE PTR [rbp+0x0],ch
   14000306c:	outs   dx,DWORD PTR ds:[rsi]
   14000306d:	add    BYTE PTR [rax+rax*1+0x75],ah
   140003071:	add    BYTE PTR [rax+rax*1+0x65],ch
   140003075:	add    BYTE PTR [rax],ah
   140003077:	add    BYTE PTR [rdx+0x0],dh
   14000307a:	add    BYTE PTR gs:[rdi+0x0],ah
   14000307e:	imul   eax,DWORD PTR [rax],0x740073
   140003084:	jb     0x140003086
   140003086:	jns    0x140003088
   140003088:	and    BYTE PTR [rax],al
   14000308a:	imul   eax,DWORD PTR [rax],0x65
   14000308d:	add    BYTE PTR [rcx+0x0],bh
   140003090:	cmp    al,BYTE PTR [rax]
   140003092:	and    BYTE PTR [rax],al
   140003094:	and    eax,0x20007300
   140003099:	add    BYTE PTR [rax],ch
   14000309b:	add    BYTE PTR [rip+0x78002300],ah        # 0x1b80053a1
   1400030a1:	add    BYTE PTR [rcx],ch
	...
   1400030af:	add    BYTE PTR [rbp+0x0],dl
   1400030b2:	outs   dx,BYTE PTR ds:[rsi]
   1400030b3:	add    BYTE PTR [rcx+0x0],ah
   1400030b6:	(bad)  
   1400030b7:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400030bb:	add    BYTE PTR [rax],ah
   1400030bd:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400030c1:	add    BYTE PTR [rax],ah
   1400030c3:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400030c7:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400030cb:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400030cf:	add    BYTE PTR [rax],ah
   1400030d1:	add    BYTE PTR [rax+rax*1+0x72],dh
   1400030d5:	add    BYTE PTR [rcx+0x0],ah
   1400030d8:	movsxd eax,DWORD PTR [rax]
   1400030da:	add    BYTE PTR gs:[rax],ah
   1400030dd:	add    BYTE PTR [rbp+0x0],ch
   1400030e0:	outs   dx,DWORD PTR ds:[rsi]
   1400030e1:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400030e5:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400030e9:	add    BYTE PTR [rax],ah
   1400030eb:	add    BYTE PTR [rdx+0x0],dh
   1400030ee:	add    BYTE PTR gs:[rdi+0x0],ah
   1400030f2:	imul   eax,DWORD PTR [rax],0x740073
   1400030f8:	jb     0x1400030fa
   1400030fa:	jns    0x1400030fc
   1400030fc:	and    BYTE PTR [rax],al
   1400030fe:	jbe    0x140003100
   140003100:	(bad)  
   140003101:	add    BYTE PTR [rax+rax*1+0x75],ch
   140003105:	add    BYTE PTR [rbp+0x0],ah
   140003108:	cmp    al,BYTE PTR [rax]
   14000310a:	and    BYTE PTR [rax],al
   14000310c:	and    eax,0x20007300
   140003111:	add    BYTE PTR [rax],ch
   140003113:	add    BYTE PTR [rip+0x78002300],ah        # 0x1b8005419
   140003119:	add    BYTE PTR [rcx],ch
   14000311b:	add    BYTE PTR [rax],al
   14000311d:	add    BYTE PTR [rax],al
   14000311f:	add    BYTE PTR [rbp+0x0],dl
   140003122:	outs   dx,BYTE PTR ds:[rsi]
   140003123:	add    BYTE PTR [rcx+0x0],ah
   140003126:	(bad)  
   140003127:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000312b:	add    BYTE PTR [rax],ah
   14000312d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140003131:	add    BYTE PTR [rax],ah
   140003133:	add    BYTE PTR [rax+rax*1+0x65],ah
   140003137:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000313b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000313f:	add    BYTE PTR [rax],ah
   140003141:	add    BYTE PTR [rax+rax*1+0x72],dh
   140003145:	add    BYTE PTR [rcx+0x0],ah
   140003148:	movsxd eax,DWORD PTR [rax]
   14000314a:	add    BYTE PTR gs:[rax],ah
   14000314d:	add    BYTE PTR [rbp+0x0],ch
   140003150:	outs   dx,DWORD PTR ds:[rsi]
   140003151:	add    BYTE PTR [rax+rax*1+0x75],ah
   140003155:	add    BYTE PTR [rax+rax*1+0x65],ch
   140003159:	add    BYTE PTR [rax],ah
   14000315b:	add    BYTE PTR [rdx+0x0],dh
   14000315e:	add    BYTE PTR gs:[rdi+0x0],ah
   140003162:	imul   eax,DWORD PTR [rax],0x740073
   140003168:	jb     0x14000316a
   14000316a:	jns    0x14000316c
   14000316c:	and    BYTE PTR [rax],al
   14000316e:	imul   eax,DWORD PTR [rax],0x65
   140003171:	add    BYTE PTR [rcx+0x0],bh
   140003174:	cmp    al,BYTE PTR [rax]
   140003176:	and    BYTE PTR [rax],al
   140003178:	and    eax,0x20007300
   14000317d:	add    BYTE PTR [rax],ch
   14000317f:	add    BYTE PTR [rip+0x78002300],ah        # 0x1b8005485
   140003185:	add    BYTE PTR [rcx],ch
   140003187:	add    BYTE PTR [rax],al
   140003189:	add    BYTE PTR [rax],al
   14000318b:	add    BYTE PTR [rip+0x7300],ah        # 0x14000a491
   140003191:	add    BYTE PTR [rax],al
   140003193:	add    BYTE PTR [rax],al
   140003195:	add    BYTE PTR [rax],al
   140003197:	add    BYTE PTR [rdx],cl
   140003199:	add    BYTE PTR [rip+0xa007300],ah        # 0x14a00a49f
	...
   1400031af:	add    BYTE PTR [rbx+0x0],al
   1400031b2:	(bad)  
   1400031b3:	add    BYTE PTR [rsi+0x0],ch
   1400031b6:	outs   dx,BYTE PTR ds:[rsi]
   1400031b7:	add    BYTE PTR [rdi+0x0],ch
   1400031ba:	je     0x1400031bc
   1400031bc:	and    BYTE PTR [rax],al
   1400031be:	movsxd eax,DWORD PTR [rax]
   1400031c0:	outs   dx,DWORD PTR ds:[rsi]
   1400031c1:	add    BYTE PTR [rsi+0x0],ch
   1400031c4:	jbe    0x1400031c6
   1400031c6:	add    BYTE PTR gs:[rdx+0x0],dh
   1400031ca:	je     0x1400031cc
   1400031cc:	and    BYTE PTR [rax],al
   1400031ce:	je     0x1400031d0
   1400031d0:	imul   eax,DWORD PTR [rax],0x65006d
   1400031d6:	jae    0x1400031d8
   1400031d8:	je     0x1400031da
   1400031da:	(bad)  
   1400031db:	add    BYTE PTR [rbp+0x0],ch
   1400031de:	jo     0x1400031e0
   1400031e0:	and    BYTE PTR [rax],al
   1400031e2:	xor    BYTE PTR [rax],al
   1400031e4:	js     0x1400031e6
   1400031e6:	and    eax,0x31003000
   1400031eb:	add    BYTE PTR [rsi],dh
   1400031ed:	add    BYTE PTR [rcx+0x0],cl
   1400031f0:	add    BYTE PTR ss:[rax+rax*1],dh
   1400031f4:	ins    BYTE PTR es:[rdi],dx
   1400031f5:	add    BYTE PTR [rax+0x0],bh
   1400031f8:	and    BYTE PTR [rax],al
   1400031fa:	je     0x1400031fc
   1400031fc:	outs   dx,DWORD PTR ds:[rsi]
   1400031fd:	add    BYTE PTR [rax],ah
   1400031ff:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140003203:	add    BYTE PTR [rbx+0x0],ah
   140003206:	(bad)  
   140003207:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000320b:	add    BYTE PTR [rsi+0x0],ah
   14000320e:	imul   eax,DWORD PTR [rax],0x65006c
   140003214:	and    BYTE PTR [rax],al
   140003216:	je     0x140003218
   140003218:	imul   eax,DWORD PTR [rax],0x65006d
   14000321e:	and    BYTE PTR [rax],al
   140003220:	pop    rbx
   140003221:	add    BYTE PTR [rip+0x5d006400],ah        # 0x19d009627
	...
   14000322f:	add    BYTE PTR [rbx+0x0],al
   140003232:	(bad)  
   140003233:	add    BYTE PTR [rsi+0x0],ch
   140003236:	outs   dx,BYTE PTR ds:[rsi]
   140003237:	add    BYTE PTR [rdi+0x0],ch
   14000323a:	je     0x14000323c
   14000323c:	and    BYTE PTR [rax],al
   14000323e:	movsxd eax,DWORD PTR [rax]
   140003240:	outs   dx,DWORD PTR ds:[rsi]
   140003241:	add    BYTE PTR [rsi+0x0],ch
   140003244:	jbe    0x140003246
   140003246:	add    BYTE PTR gs:[rdx+0x0],dh
   14000324a:	je     0x14000324c
   14000324c:	and    BYTE PTR [rax],al
   14000324e:	je     0x140003250
   140003250:	imul   eax,DWORD PTR [rax],0x65006d
   140003256:	jae    0x140003258
   140003258:	je     0x14000325a
   14000325a:	(bad)  
   14000325b:	add    BYTE PTR [rbp+0x0],ch
   14000325e:	jo     0x140003260
   140003260:	and    BYTE PTR [rax],al
   140003262:	xor    BYTE PTR [rax],al
   140003264:	js     0x140003266
   140003266:	and    eax,0x31003000
   14000326b:	add    BYTE PTR [rsi],dh
   14000326d:	add    BYTE PTR [rcx+0x0],cl
   140003270:	add    BYTE PTR ss:[rax+rax*1],dh
   140003274:	ins    BYTE PTR es:[rdi],dx
   140003275:	add    BYTE PTR [rax+0x0],bh
   140003278:	and    BYTE PTR [rax],al
   14000327a:	je     0x14000327c
   14000327c:	outs   dx,DWORD PTR ds:[rsi]
   14000327d:	add    BYTE PTR [rax],ah
   14000327f:	add    BYTE PTR [rbx+0x0],dh
   140003282:	jns    0x140003284
   140003284:	jae    0x140003286
   140003286:	je     0x140003288
   140003288:	add    BYTE PTR gs:[rbp+0x0],ch
   14000328c:	and    BYTE PTR [rax],al
   14000328e:	je     0x140003290
   140003290:	imul   eax,DWORD PTR [rax],0x65006d
   140003296:	and    BYTE PTR [rax],al
   140003298:	pop    rbx
   140003299:	add    BYTE PTR [rip+0x5d006400],ah        # 0x19d00969f
	...
   1400032af:	add    BYTE PTR [rbx+0x0],al
   1400032b2:	(bad)  
   1400032b3:	add    BYTE PTR [rsi+0x0],ch
   1400032b6:	outs   dx,BYTE PTR ds:[rsi]
   1400032b7:	add    BYTE PTR [rdi+0x0],ch
   1400032ba:	je     0x1400032bc
   1400032bc:	and    BYTE PTR [rax],al
   1400032be:	add    BYTE PTR [ebp+0x0],ah
   1400032c2:	je     0x1400032c4
   1400032c4:	and    BYTE PTR [rax],al
   1400032c6:	add    BYTE PTR fs:[rcx+0x0],ah
   1400032ca:	je     0x1400032cc
   1400032cc:	add    BYTE PTR gs:[rax],ah
   1400032cf:	add    BYTE PTR [rsi+0x0],ah
   1400032d2:	outs   dx,DWORD PTR ds:[rsi]
   1400032d3:	add    BYTE PTR [rdx+0x0],dh
   1400032d6:	ins    DWORD PTR es:[rdi],dx
   1400032d7:	add    BYTE PTR [rcx+0x0],ah
   1400032da:	je     0x1400032dc
   1400032dc:	and    BYTE PTR [rax],al
   1400032de:	data16 add BYTE PTR [rdi+0x0],ch
   1400032e2:	jb     0x1400032e4
   1400032e4:	and    BYTE PTR [rax],al
   1400032e6:	je     0x1400032e8
   1400032e8:	imul   eax,DWORD PTR [rax],0x65006d
   1400032ee:	jae    0x1400032f0
   1400032f0:	je     0x1400032f2
   1400032f2:	(bad)  
   1400032f3:	add    BYTE PTR [rbp+0x0],ch
   1400032f6:	jo     0x1400032f8
   1400032f8:	and    BYTE PTR [rax],al
   1400032fa:	xor    BYTE PTR [rax],al
   1400032fc:	js     0x1400032fe
   1400032fe:	and    eax,0x31003000
   140003303:	add    BYTE PTR [rsi],dh
   140003305:	add    BYTE PTR [rcx+0x0],cl
   140003308:	add    BYTE PTR ss:[rax+rax*1],dh
   14000330c:	ins    BYTE PTR es:[rdi],dx
   14000330d:	add    BYTE PTR [rax+0x0],bh
   140003310:	and    BYTE PTR [rax],al
   140003312:	pop    rbx
   140003313:	add    BYTE PTR [rip+0x5d006400],ah        # 0x19d009719
   140003319:	add    BYTE PTR [rax],al
   14000331b:	add    BYTE PTR [rax],al
   14000331d:	add    BYTE PTR [rax],al
   14000331f:	add    BYTE PTR [rbx+0x0],al
   140003322:	(bad)  
   140003323:	add    BYTE PTR [rsi+0x0],ch
   140003326:	outs   dx,BYTE PTR ds:[rsi]
   140003327:	add    BYTE PTR [rdi+0x0],ch
   14000332a:	je     0x14000332c
   14000332c:	and    BYTE PTR [rax],al
   14000332e:	add    BYTE PTR [ebp+0x0],ah
   140003332:	je     0x140003334
   140003334:	and    BYTE PTR [rax],al
   140003336:	je     0x140003338
   140003338:	imul   eax,DWORD PTR [rax],0x65006d
   14000333e:	and    BYTE PTR [rax],al
   140003340:	data16 add BYTE PTR [rdi+0x0],ch
   140003344:	jb     0x140003346
   140003346:	ins    DWORD PTR es:[rdi],dx
   140003347:	add    BYTE PTR [rcx+0x0],ah
   14000334a:	je     0x14000334c
   14000334c:	and    BYTE PTR [rax],al
   14000334e:	data16 add BYTE PTR [rdi+0x0],ch
   140003352:	jb     0x140003354
   140003354:	and    BYTE PTR [rax],al
   140003356:	je     0x140003358
   140003358:	imul   eax,DWORD PTR [rax],0x65006d
   14000335e:	jae    0x140003360
   140003360:	je     0x140003362
   140003362:	(bad)  
   140003363:	add    BYTE PTR [rbp+0x0],ch
   140003366:	jo     0x140003368
   140003368:	and    BYTE PTR [rax],al
   14000336a:	xor    BYTE PTR [rax],al
   14000336c:	js     0x14000336e
   14000336e:	and    eax,0x31003000
   140003373:	add    BYTE PTR [rsi],dh
   140003375:	add    BYTE PTR [rcx+0x0],cl
   140003378:	add    BYTE PTR ss:[rax+rax*1],dh
   14000337c:	ins    BYTE PTR es:[rdi],dx
   14000337d:	add    BYTE PTR [rax+0x0],bh
   140003380:	and    BYTE PTR [rax],al
   140003382:	pop    rbx
   140003383:	add    BYTE PTR [rip+0x5d006400],ah        # 0x19d009789
   140003389:	add    BYTE PTR [rax],al
   14000338b:	add    BYTE PTR [rax],al
   14000338d:	add    BYTE PTR [rax],al
   14000338f:	add    BYTE PTR [rsi],ch
   140003391:	add    BYTE PTR [rip+0x33003000],ah        # 0x173006397
   140003397:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000339b:	add    BYTE PTR [rax],al
   14000339d:	add    BYTE PTR [rax],al
   14000339f:	add    BYTE PTR [rbp+0x0],al
   1400033a2:	push   rdx
   1400033a3:	add    BYTE PTR [rdx+0x0],dl
   1400033a6:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   1400033aa:	cmp    al,BYTE PTR [rax]
   1400033ac:	and    BYTE PTR [rax],al
   1400033ae:	push   rbx
   1400033af:	add    BYTE PTR [rbp+0x0],ah
   1400033b2:	je     0x1400033b4
   1400033b4:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400033b8:	outs   dx,BYTE PTR ds:[rsi]
   1400033b9:	add    BYTE PTR [rbx+0x0],dh
   1400033bc:	outs   dx,DWORD PTR ds:[rsi]
   1400033bd:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400033c1:	add    BYTE PTR [rbx+0x0],al
   1400033c4:	je     0x1400033c6
   1400033c6:	jb     0x1400033c8
   1400033c8:	ins    BYTE PTR es:[rdi],dx
   1400033c9:	add    BYTE PTR [rax+0x0],cl
   1400033cc:	(bad)  
   1400033cd:	add    BYTE PTR [rsi+0x0],ch
   1400033d0:	add    BYTE PTR fs:[rax+rax*1+0x65],ch
   1400033d5:	add    BYTE PTR [rdx+0x0],dh
   1400033d8:	and    BYTE PTR [rax],al
   1400033da:	jb     0x1400033dc
   1400033dc:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   1400033e1:	add    BYTE PTR [rdx+0x0],dh
   1400033e4:	outs   dx,BYTE PTR ds:[rsi]
   1400033e5:	add    BYTE PTR [rbp+0x0],ah
   1400033e8:	add    BYTE PTR fs:[rax],ah
   1400033eb:	add    BYTE PTR [rip+0x6400],ah        # 0x1400097f1
	...
   1400033fd:	add    BYTE PTR [rax],al
   1400033ff:	add    BYTE PTR [rax+rax*1+0x0],bl
	...
   14000340f:	add    BYTE PTR [rbx+0x0],dl
   140003412:	pop    rcx
   140003413:	add    BYTE PTR [rbx+0x0],dl
   140003416:	push   rsp
   140003417:	add    BYTE PTR [rbp+0x0],al
   14000341a:	rex.WRB add BYTE PTR [r8+rax*1+0x43],r11b
   14000341f:	add    BYTE PTR [rbp+0x0],dh
   140003422:	jb     0x140003424
   140003424:	jb     0x140003426
   140003426:	add    BYTE PTR gs:[rsi+0x0],ch
   14000342a:	je     0x14000342c
   14000342c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140003430:	outs   dx,BYTE PTR ds:[rsi]
   140003431:	add    BYTE PTR [rax+rax*1+0x72],dh
   140003435:	add    BYTE PTR [rdi+0x0],ch
   140003438:	ins    BYTE PTR es:[rdi],dx
   140003439:	add    BYTE PTR [rbx+0x0],dl
   14000343c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   140003441:	add    BYTE PTR [rbx+0x0],dl
   140003444:	add    BYTE PTR gs:[rdx+0x0],dh
   140003448:	jbe    0x14000344a
   14000344a:	imul   eax,DWORD PTR [rax],0x650063
   140003450:	jae    0x140003452
   140003452:	pop    rsp
   140003453:	add    BYTE PTR [rsi+0x0],dl
   140003456:	push   rbx
   140003457:	add    BYTE PTR [rbx+0x0],dl
   14000345a:	pop    rsp
   14000345b:	add    BYTE PTR [rbx+0x0],dl
   14000345e:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   140003463:	add    BYTE PTR [rcx+0x0],ch
   140003466:	outs   dx,BYTE PTR ds:[rsi]
   140003467:	add    BYTE PTR [rdi+0x0],ah
   14000346a:	jae    0x14000346c
   14000346c:	add    BYTE PTR [rax],al
   14000346e:	add    BYTE PTR [rax],al
   140003470:	push   rbx
   140003471:	add    BYTE PTR [rcx+0x0],bh
   140003474:	jae    0x140003476
   140003476:	je     0x140003478
   140003478:	add    BYTE PTR gs:[rbp+0x0],ch
   14000347c:	pop    rsp
   14000347d:	add    BYTE PTR [rbx+0x0],al
   140003480:	jne    0x140003482
   140003482:	jb     0x140003484
   140003484:	jb     0x140003486
   140003486:	add    BYTE PTR gs:[rsi+0x0],ch
   14000348a:	je     0x14000348c
   14000348c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140003490:	outs   dx,BYTE PTR ds:[rsi]
   140003491:	add    BYTE PTR [rax+rax*1+0x72],dh
   140003495:	add    BYTE PTR [rdi+0x0],ch
   140003498:	ins    BYTE PTR es:[rdi],dx
   140003499:	add    BYTE PTR [rbx+0x0],dl
   14000349c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   1400034a1:	add    BYTE PTR [rbx+0x0],dl
   1400034a4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400034a8:	jbe    0x1400034aa
   1400034aa:	imul   eax,DWORD PTR [rax],0x650063
   1400034b0:	jae    0x1400034b2
   1400034b2:	pop    rsp
   1400034b3:	add    BYTE PTR [rsi+0x0],dl
   1400034b6:	jae    0x1400034b8
   1400034b8:	jae    0x1400034ba
   1400034ba:	pop    rsp
   1400034bb:	add    BYTE PTR [rax+rax*1+0x72],dl
   1400034bf:	add    BYTE PTR [rcx+0x0],ah
   1400034c2:	movsxd eax,DWORD PTR [rax]
   1400034c4:	imul   eax,DWORD PTR [rax],0x67006e
   1400034ca:	add    BYTE PTR [rax],al
   1400034cc:	pop    rsp
   1400034cd:	add    BYTE PTR [rax],al
   1400034cf:	add    BYTE PTR [rax+rax*1+0x5c],bl
   1400034d3:	add    BYTE PTR [rdi],bh
   1400034d5:	add    BYTE PTR [rax+rax*1+0x56],bl
   1400034d9:	add    BYTE PTR [rdi+0x0],ch
   1400034dc:	ins    BYTE PTR es:[rdi],dx
   1400034dd:	add    BYTE PTR [rbp+0x0],dh
   1400034e0:	ins    DWORD PTR es:[rdi],dx
   1400034e1:	add    BYTE PTR [rbp+0x0],ah
   1400034e4:	add    BYTE PTR [rax],al
   1400034e6:	add    BYTE PTR [rax],al
   1400034e8:	pop    rsp
   1400034e9:	add    BYTE PTR [rdi],bh
   1400034eb:	add    BYTE PTR [rdi],bh
   1400034ed:	add    BYTE PTR [rax+rax*1+0x56],bl
   1400034f1:	add    BYTE PTR [rdi+0x0],ch
   1400034f4:	ins    BYTE PTR es:[rdi],dx
   1400034f5:	add    BYTE PTR [rbp+0x0],dh
   1400034f8:	ins    DWORD PTR es:[rdi],dx
   1400034f9:	add    BYTE PTR [rbp+0x0],ah
   1400034fc:	add    BYTE PTR [rax],al
   1400034fe:	add    BYTE PTR [rax],al
   140003500:	add    BYTE PTR [r14+0x0],r13b
   140003504:	(bad)  
   140003505:	add    BYTE PTR [rdx+0x0],ah
   140003508:	ins    BYTE PTR es:[rdi],dx
   140003509:	add    BYTE PTR [rbp+0x0],ah
   14000350c:	push   rdx
   14000350d:	add    BYTE PTR [rbp+0x0],ah
   140003510:	ins    DWORD PTR es:[rdi],dx
   140003511:	add    BYTE PTR [rdi+0x0],ch
   140003514:	je     0x140003516
   140003516:	add    BYTE PTR gs:[rbx+0x0],dl
   14000351a:	outs   dx,BYTE PTR ds:[rsi]
   14000351b:	add    BYTE PTR [rcx+0x0],ah
   14000351e:	jo     0x140003520
   140003520:	jae    0x140003522
   140003522:	push   0x74006f00
   140003527:	add    BYTE PTR [rbx+0x0],dh
   14000352a:	add    BYTE PTR [rax],al
   14000352c:	add    BYTE PTR [rax],al
   14000352e:	add    BYTE PTR [rax],al
   140003530:	push   rbx
   140003531:	add    BYTE PTR [rcx+0x0],bh
   140003534:	jae    0x140003536
   140003536:	je     0x140003538
   140003538:	add    BYTE PTR gs:[rbp+0x0],ch
   14000353c:	pop    rsp
   14000353d:	add    BYTE PTR [rbx+0x0],al
   140003540:	jne    0x140003542
   140003542:	jb     0x140003544
   140003544:	jb     0x140003546
   140003546:	add    BYTE PTR gs:[rsi+0x0],ch
   14000354a:	je     0x14000354c
   14000354c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140003550:	outs   dx,BYTE PTR ds:[rsi]
   140003551:	add    BYTE PTR [rax+rax*1+0x72],dh
   140003555:	add    BYTE PTR [rdi+0x0],ch
   140003558:	ins    BYTE PTR es:[rdi],dx
   140003559:	add    BYTE PTR [rbx+0x0],dl
   14000355c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   140003561:	add    BYTE PTR [rbx+0x0],dl
   140003564:	add    BYTE PTR gs:[rdx+0x0],dh
   140003568:	jbe    0x14000356a
   14000356a:	imul   eax,DWORD PTR [rax],0x650063
   140003570:	jae    0x140003572
   140003572:	pop    rsp
   140003573:	add    BYTE PTR [rsi+0x0],dl
   140003576:	jae    0x140003578
   140003578:	jae    0x14000357a
   14000357a:	pop    rsp
   14000357b:	add    BYTE PTR [rax+rax*1+0x72],dl
   14000357f:	add    BYTE PTR [rcx+0x0],ah
   140003582:	movsxd eax,DWORD PTR [rax]
   140003584:	imul   eax,DWORD PTR [rax],0x67006e
   14000358a:	pop    rsp
   14000358b:	add    BYTE PTR [rax+rax*1+0x72],dl
   14000358f:	add    BYTE PTR [rcx+0x0],ah
   140003592:	movsxd eax,DWORD PTR [rax]
   140003594:	add    BYTE PTR gs:[rbp+0x0],cl
   140003598:	outs   dx,DWORD PTR ds:[rsi]
   140003599:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000359d:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400035a1:	add    BYTE PTR [rbx+0x0],dh
   1400035a4:	add    BYTE PTR [rax],al
   1400035a6:	add    BYTE PTR [rax],al
   1400035a8:	adc    eax,edi
   1400035aa:	nop
   1400035ab:	cmp    r11b,BYTE PTR [rip+0x1f8911d0]        # 0x15f894782
   1400035b2:	add    BYTE PTR [rdx+0x242e4b00],ch
   1400035b8:	xchg   DWORD PTR [rsi+0x737fdc12],esp
   1400035be:	iret   
   1400035bf:	adc    DWORD PTR [rax+0xaa004d],ecx
   1400035c5:	rex.WXB
   1400035c6:	cs and al,0x60
   1400035c9:	add    BYTE PTR [rax+0x1],al
   1400035cd:	add    BYTE PTR [rax],al
   1400035cf:	add    BYTE PTR [rax],bh
   1400035d1:	add    BYTE PTR [r8+0x1],al
   1400035d5:	add    BYTE PTR [rax],al
   1400035d7:	add    BYTE PTR [rax+0x41],bl
   1400035da:	add    BYTE PTR [rax+0x1],al
   1400035dd:	add    BYTE PTR [rax],al
   1400035df:	add    BYTE PTR [rax+0x3f],dl
   1400035e2:	add    BYTE PTR [rax+0x1],al
   1400035e5:	add    BYTE PTR [rax],al
   1400035e7:	add    BYTE PTR [rax+0x3f],ah
   1400035ea:	add    BYTE PTR [rax+0x1],al
   1400035ed:	add    BYTE PTR [rax],al
   1400035ef:	add    al,ch
   1400035f1:	(bad)  
   1400035f2:	add    BYTE PTR [rax+0x1],al
   1400035f5:	add    BYTE PTR [rax],al
   1400035f7:	add    al,bl
   1400035f9:	(bad)  
   1400035fa:	add    BYTE PTR [rax+0x1],al
   1400035fd:	add    BYTE PTR [rax],al
   1400035ff:	add    BYTE PTR [rbx+0x0],dl
   140003602:	pop    rcx
   140003603:	add    BYTE PTR [rbx+0x0],dl
   140003606:	push   rsp
   140003607:	add    BYTE PTR [rbp+0x0],al
   14000360a:	rex.WRB add BYTE PTR [r8+rax*1+0x43],r11b
   14000360f:	add    BYTE PTR [rbp+0x0],dh
   140003612:	jb     0x140003614
   140003614:	jb     0x140003616
   140003616:	add    BYTE PTR gs:[rsi+0x0],ch
   14000361a:	je     0x14000361c
   14000361c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140003620:	outs   dx,BYTE PTR ds:[rsi]
   140003621:	add    BYTE PTR [rax+rax*1+0x72],dh
   140003625:	add    BYTE PTR [rdi+0x0],ch
   140003628:	ins    BYTE PTR es:[rdi],dx
   140003629:	add    BYTE PTR [rbx+0x0],dl
   14000362c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   140003631:	add    BYTE PTR [rbx+0x0],dl
   140003634:	add    BYTE PTR gs:[rdx+0x0],dh
   140003638:	jbe    0x14000363a
   14000363a:	imul   eax,DWORD PTR [rax],0x650063
   140003640:	jae    0x140003642
   140003642:	pop    rsp
   140003643:	add    BYTE PTR [rsi+0x0],dl
   140003646:	push   rbx
   140003647:	add    BYTE PTR [rbx+0x0],dl
   14000364a:	pop    rsp
   14000364b:	add    BYTE PTR [rbx+0x0],dl
   14000364e:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   140003653:	add    BYTE PTR [rcx+0x0],ch
   140003656:	outs   dx,BYTE PTR ds:[rsi]
   140003657:	add    BYTE PTR [rdi+0x0],ah
   14000365a:	jae    0x14000365c
   14000365c:	add    BYTE PTR [rax],al
   14000365e:	add    BYTE PTR [rax],al
   140003660:	sbb    BYTE PTR [rax+0x0],al
   140003663:	rex add DWORD PTR [rax],eax
   140003666:	add    BYTE PTR [rax],al
   140003668:	mov    BYTE PTR [rdi],bh
   14000366a:	add    BYTE PTR [rax+0x1],al
   14000366d:	add    BYTE PTR [rax],al
   14000366f:	add    BYTE PTR [rbx+0x0],dl
   140003672:	pop    rcx
   140003673:	add    BYTE PTR [rbx+0x0],dl
   140003676:	push   rsp
   140003677:	add    BYTE PTR [rbp+0x0],al
   14000367a:	rex.WRB add BYTE PTR [r8+rax*1+0x43],r11b
   14000367f:	add    BYTE PTR [rbp+0x0],dh
   140003682:	jb     0x140003684
   140003684:	jb     0x140003686
   140003686:	add    BYTE PTR gs:[rsi+0x0],ch
   14000368a:	je     0x14000368c
   14000368c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140003690:	outs   dx,BYTE PTR ds:[rsi]
   140003691:	add    BYTE PTR [rax+rax*1+0x72],dh
   140003695:	add    BYTE PTR [rdi+0x0],ch
   140003698:	ins    BYTE PTR es:[rdi],dx
   140003699:	add    BYTE PTR [rbx+0x0],dl
   14000369c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   1400036a1:	add    BYTE PTR [rbx+0x0],dl
   1400036a4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400036a8:	jbe    0x1400036aa
   1400036aa:	imul   eax,DWORD PTR [rax],0x650063
   1400036b0:	jae    0x1400036b2
   1400036b2:	pop    rsp
   1400036b3:	add    BYTE PTR [rsi+0x0],dh
   1400036b6:	jae    0x1400036b8
   1400036b8:	jae    0x1400036ba
   1400036ba:	pop    rsp
   1400036bb:	add    BYTE PTR [rax+rax*1+0x72],dl
   1400036bf:	add    BYTE PTR [rcx+0x0],ah
   1400036c2:	movsxd eax,DWORD PTR [rax]
   1400036c4:	imul   eax,DWORD PTR [rax],0x67006e
   1400036ca:	pop    rsp
   1400036cb:	add    BYTE PTR [rax+rax*1+0x72],dl
   1400036cf:	add    BYTE PTR [rcx+0x0],ah
   1400036d2:	movsxd eax,DWORD PTR [rax]
   1400036d4:	add    BYTE PTR gs:[rbp+0x0],cl
   1400036d8:	outs   dx,DWORD PTR ds:[rsi]
   1400036d9:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400036dd:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400036e1:	add    BYTE PTR [rbx+0x0],dh
   1400036e4:	add    BYTE PTR [rax],al
   1400036e6:	add    BYTE PTR [rax],al
   1400036e8:	rex.W
   1400036e9:	add    BYTE PTR [rax+0x1],al
   1400036ed:	add    BYTE PTR [rax],al
   1400036ef:	add    BYTE PTR [rax+rax*1+0x5c],bl
   1400036f3:	add    BYTE PTR [rdi],bh
   1400036f5:	add    BYTE PTR [rax+rax*1+0x56],bl
   1400036f9:	add    BYTE PTR [rdi+0x0],ch
   1400036fc:	ins    BYTE PTR es:[rdi],dx
   1400036fd:	add    BYTE PTR [rbp+0x0],dh
   140003700:	ins    DWORD PTR es:[rdi],dx
   140003701:	add    BYTE PTR [rbp+0x0],ah
   140003704:	add    BYTE PTR [rax],al
   140003706:	add    BYTE PTR [rax],al
   140003708:	loopne 0x14000374a
   14000370a:	add    BYTE PTR [rax+0x1],al
   14000370d:	add    BYTE PTR [rax],al
   14000370f:	add    BYTE PTR [rax],cl
   140003711:	add    BYTE PTR [rax+0x1],al
   140003715:	add    BYTE PTR [rax],al
   140003717:	add    BYTE PTR [rax+0x1400040],dh
   14000371d:	add    BYTE PTR [rax],al
   14000371f:	add    BYTE PTR [rax+rax*1+0x3f],bl
   140003723:	add    BYTE PTR [rdi],bh
   140003725:	add    BYTE PTR [rax+rax*1+0x56],bl
   140003729:	add    BYTE PTR [rdi+0x0],ch
   14000372c:	ins    BYTE PTR es:[rdi],dx
   14000372d:	add    BYTE PTR [rbp+0x0],dh
   140003730:	ins    DWORD PTR es:[rdi],dx
   140003731:	add    BYTE PTR [rbp+0x0],ah
   140003734:	add    BYTE PTR [rax],al
   140003736:	add    BYTE PTR [rax],al
   140003738:	add    BYTE PTR [rcx+0x0],al
   14000373b:	rex add DWORD PTR [rax],eax
   14000373e:	add    BYTE PTR [rax],al
   140003740:	rol    BYTE PTR [rax+0x0],1
   140003743:	rex add DWORD PTR [rax],eax
   140003746:	add    BYTE PTR [rax],al
   140003748:	adc    BYTE PTR [rcx+0x0],al
   14000374b:	rex add DWORD PTR [rax],eax
   14000374e:	add    BYTE PTR [rax],al
   140003750:	mov    eax,0x140003f
   140003755:	add    BYTE PTR [rax],al
   140003757:	add    BYTE PTR [rax],ah
   140003759:	add    BYTE PTR [r8+0x1],al
   14000375d:	add    BYTE PTR [rax],al
   14000375f:	add    BYTE PTR [rax+rax*1+0x72],dl
   140003763:	add    BYTE PTR [rcx+0x0],ah
   140003766:	movsxd eax,DWORD PTR [rax]
   140003768:	imul   eax,DWORD PTR [rax],0x67006e
   14000376e:	add    BYTE PTR [rbp+0x0],r12b
   140003772:	data16 add BYTE PTR [rcx+0x0],ah
   140003776:	jne    0x140003778
   140003778:	ins    BYTE PTR es:[rdi],dx
   140003779:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000377d:	add    BYTE PTR [rax],al
   14000377f:	add    al,al
   140003781:	add    BYTE PTR [rax+0x1],al
   140003785:	add    BYTE PTR [rax],al
   140003787:	add    BYTE PTR [rax+0x140003f],bl
   14000378d:	add    BYTE PTR [rax],al
   14000378f:	add    BYTE PTR [rax+0x40],al
   140003792:	add    BYTE PTR [rax+0x1],al
   140003795:	add    BYTE PTR [rax],al
   140003797:	add    BYTE PTR [rbp+0x0],al
   14000379a:	outs   dx,BYTE PTR ds:[rsi]
   14000379b:	add    BYTE PTR [rcx+0x0],ah
   14000379e:	(bad)  
   14000379f:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400037a3:	add    BYTE PTR [rdx+0x0],dl
   1400037a6:	add    BYTE PTR gs:[rbp+0x0],ch
   1400037aa:	outs   dx,DWORD PTR ds:[rsi]
   1400037ab:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400037af:	add    BYTE PTR [rbx+0x0],dl
   1400037b2:	outs   dx,BYTE PTR ds:[rsi]
   1400037b3:	add    BYTE PTR [rcx+0x0],ah
   1400037b6:	jo     0x1400037b8
   1400037b8:	jae    0x1400037ba
   1400037ba:	push   0x74006f00
   1400037bf:	add    BYTE PTR [rbx+0x0],dh
   1400037c2:	add    BYTE PTR [rax],al
   1400037c4:	add    BYTE PTR [rax],al
   1400037c6:	add    BYTE PTR [rax],al
   1400037c8:	or     BYTE PTR [rax+0x0],al
   1400037cb:	rex add DWORD PTR [rax],eax
   1400037ce:	add    BYTE PTR [rax],al
   1400037d0:	nop
   1400037d1:	add    BYTE PTR [rax+0x1],al
   1400037d5:	add    BYTE PTR [rax],al
   1400037d7:	add    BYTE PTR [rsi+0x0],dl
   1400037da:	push   rbx
   1400037db:	add    BYTE PTR [rbx+0x0],dl
   1400037de:	add    BYTE PTR [rax],al
   1400037e0:	js     0x140003822
   1400037e2:	add    BYTE PTR [rax+0x1],al
   1400037e5:	add    BYTE PTR [rax],al
   1400037e7:	add    BYTE PTR [rax+0x41],ch
   1400037ea:	add    BYTE PTR [rax+0x1],al
   1400037ed:	add    BYTE PTR [rax],al
   1400037ef:	add    BYTE PTR [rax+0x1400041],al
   1400037f5:	add    BYTE PTR [rax],al
   1400037f7:	add    BYTE PTR [rax],bh
   1400037f9:	(bad)  
   1400037fa:	add    BYTE PTR [rax+0x1],al
   1400037fd:	add    BYTE PTR [rax],al
   1400037ff:	add    al,bh
   140003801:	(bad)  
   140003802:	add    BYTE PTR [rax+0x1],al
   140003805:	add    BYTE PTR [rax],al
   140003807:	add    al,dh
   140003809:	add    BYTE PTR [rax+0x1],al
   14000380d:	add    BYTE PTR [rax],al
   14000380f:	add    BYTE PTR [rax+0x1400040],ah
   140003815:	add    BYTE PTR [rax],al
   140003817:	add    BYTE PTR [rax],ch
   140003819:	add    BYTE PTR [rax+0x1],al
   14000381d:	add    BYTE PTR [rax],al
   14000381f:	add    BYTE PTR [rax],dh
   140003821:	add    BYTE PTR [r8+0x1],al
   140003825:	add    BYTE PTR [rax],al
   140003827:	add    BYTE PTR [rax+0x140003f],ch
   14000382d:	add    BYTE PTR [rax],al
   14000382f:	add    BYTE PTR [rbx+0x0],dl
   140003832:	pop    rcx
   140003833:	add    BYTE PTR [rbx+0x0],dl
   140003836:	push   rsp
   140003837:	add    BYTE PTR [rbp+0x0],al
   14000383a:	rex.WRB add BYTE PTR [r8+rax*1+0x43],r11b
   14000383f:	add    BYTE PTR [rbp+0x0],dh
   140003842:	jb     0x140003844
   140003844:	jb     0x140003846
   140003846:	add    BYTE PTR gs:[rsi+0x0],ch
   14000384a:	je     0x14000384c
   14000384c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140003850:	outs   dx,BYTE PTR ds:[rsi]
   140003851:	add    BYTE PTR [rax+rax*1+0x72],dh
   140003855:	add    BYTE PTR [rdi+0x0],ch
   140003858:	ins    BYTE PTR es:[rdi],dx
   140003859:	add    BYTE PTR [rbx+0x0],dl
   14000385c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   140003861:	add    BYTE PTR [rbx+0x0],dl
   140003864:	add    BYTE PTR gs:[rdx+0x0],dh
   140003868:	jbe    0x14000386a
   14000386a:	imul   eax,DWORD PTR [rax],0x650063
   140003870:	jae    0x140003872
   140003872:	pop    rsp
   140003873:	add    BYTE PTR [rsi+0x0],dh
   140003876:	jae    0x140003878
   140003878:	jae    0x14000387a
   14000387a:	pop    rsp
   14000387b:	add    BYTE PTR [rax+rax*1+0x72],dl
   14000387f:	add    BYTE PTR [rcx+0x0],ah
   140003882:	movsxd eax,DWORD PTR [rax]
   140003884:	imul   eax,DWORD PTR [rax],0x67006e
   14000388a:	add    BYTE PTR [rax],al
   14000388c:	pop    rsp
   14000388d:	add    BYTE PTR [rax],al
   14000388f:	add    BYTE PTR [rax+0x41],cl
   140003892:	add    BYTE PTR [rax+0x1],al
   140003895:	add    BYTE PTR [rax],al
   140003897:	add    BYTE PTR [rax+rax*1+0x61],cl
   14000389b:	add    BYTE PTR [rsi+0x0],ch
   14000389e:	rex.WRB add BYTE PTR [r9+0x0],r12b
   1400038a2:	outs   dx,BYTE PTR ds:[rsi]
   1400038a3:	add    BYTE PTR [rsi+0x0],cl
   1400038a6:	je     0x1400038a8
	...
   1400038b0:	push   rbx
   1400038b1:	add    BYTE PTR [rcx+0x0],bl
   1400038b4:	push   rbx
   1400038b5:	add    BYTE PTR [rax+rax*1+0x45],dl
   1400038b9:	add    BYTE PTR [rbp+0x0],cl
   1400038bc:	pop    rsp
   1400038bd:	add    BYTE PTR [rbx+0x0],al
   1400038c0:	outs   dx,DWORD PTR ds:[rsi]
   1400038c1:	add    BYTE PTR [rsi+0x0],ch
   1400038c4:	je     0x1400038c6
   1400038c6:	jb     0x1400038c8
   1400038c8:	outs   dx,DWORD PTR ds:[rsi]
   1400038c9:	add    BYTE PTR [rax+rax*1+0x53],ch
   1400038cd:	add    BYTE PTR [rbp+0x0],ah
   1400038d0:	je     0x1400038d2
   1400038d2:	xor    BYTE PTR [rax],al
   1400038d4:	xor    BYTE PTR [rax],al
   1400038d6:	xor    DWORD PTR [rax],eax
   1400038d8:	pop    rsp
   1400038d9:	add    BYTE PTR [rbx+0x0],al
   1400038dc:	outs   dx,DWORD PTR ds:[rsi]
   1400038dd:	add    BYTE PTR [rsi+0x0],ch
   1400038e0:	je     0x1400038e2
   1400038e2:	jb     0x1400038e4
   1400038e4:	outs   dx,DWORD PTR ds:[rsi]
   1400038e5:	add    BYTE PTR [rax+rax*1+0x5c],ch
   1400038e9:	add    BYTE PTR [rbp+0x0],cl
   1400038ec:	imul   eax,DWORD PTR [rax],0x69006e
   1400038f2:	rex.WRX add BYTE PTR [rax+r8*1+0x0],r10b
   1400038f7:	add    BYTE PTR [rbp+0x0],al
   1400038fa:	outs   dx,BYTE PTR ds:[rsi]
   1400038fb:	add    BYTE PTR [rcx+0x0],ah
   1400038fe:	(bad)  
   1400038ff:	add    BYTE PTR [rax+rax*1+0x65],ch
   140003903:	add    BYTE PTR [rdx+0x0],dl
   140003906:	add    BYTE PTR gs:[rbp+0x0],ch
   14000390a:	outs   dx,DWORD PTR ds:[rsi]
   14000390b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000390f:	add    BYTE PTR [rbx+0x0],dl
   140003912:	outs   dx,BYTE PTR ds:[rsi]
   140003913:	add    BYTE PTR [rcx+0x0],ah
   140003916:	jo     0x140003918
   140003918:	jae    0x14000391a
   14000391a:	push   0x74006f00
   14000391f:	add    BYTE PTR [rbx+0x0],dh
   140003922:	add    BYTE PTR [rax],al
   140003924:	add    BYTE PTR [rax],al
   140003926:	add    BYTE PTR [rax],al
   140003928:	push   rax
   140003929:	add    BYTE PTR [rdx+0x0],dh
   14000392c:	outs   dx,DWORD PTR ds:[rsi]
   14000392d:	add    BYTE PTR [rax+rax*1+0x75],ah
   140003931:	add    BYTE PTR [rbx+0x0],ah
   140003934:	je     0x140003936
   140003936:	push   rsp
   140003937:	add    BYTE PTR [rcx+0x0],bh
   14000393a:	jo     0x14000393c
   14000393c:	add    BYTE PTR gs:[rax],al
   14000393f:	add    BYTE PTR [rbx+0x0],dl
   140003942:	pop    rcx
   140003943:	add    BYTE PTR [rbx+0x0],dl
   140003946:	push   rsp
   140003947:	add    BYTE PTR [rbp+0x0],al
   14000394a:	rex.WRB add BYTE PTR [r8+rax*1+0x43],r11b
   14000394f:	add    BYTE PTR [rbp+0x0],dh
   140003952:	jb     0x140003954
   140003954:	jb     0x140003956
   140003956:	add    BYTE PTR gs:[rsi+0x0],ch
   14000395a:	je     0x14000395c
   14000395c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140003960:	outs   dx,BYTE PTR ds:[rsi]
   140003961:	add    BYTE PTR [rax+rax*1+0x72],dh
   140003965:	add    BYTE PTR [rdi+0x0],ch
   140003968:	ins    BYTE PTR es:[rdi],dx
   140003969:	add    BYTE PTR [rbx+0x0],dl
   14000396c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   140003971:	add    BYTE PTR [rbx+0x0],dl
   140003974:	add    BYTE PTR gs:[rdx+0x0],dh
   140003978:	jbe    0x14000397a
   14000397a:	imul   eax,DWORD PTR [rax],0x650063
   140003980:	jae    0x140003982
   140003982:	pop    rsp
   140003983:	add    BYTE PTR [rsi+0x0],dl
   140003986:	push   rbx
   140003987:	add    BYTE PTR [rbx+0x0],dl
   14000398a:	pop    rsp
   14000398b:	add    BYTE PTR [rbx+0x0],dl
   14000398e:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   140003993:	add    BYTE PTR [rcx+0x0],ch
   140003996:	outs   dx,BYTE PTR ds:[rsi]
   140003997:	add    BYTE PTR [rdi+0x0],ah
   14000399a:	jae    0x14000399c
   14000399c:	add    BYTE PTR [rax],al
   14000399e:	add    BYTE PTR [rax],al
   1400039a0:	push   rbx
   1400039a1:	add    BYTE PTR [rcx+0x0],bl
   1400039a4:	push   rbx
   1400039a5:	add    BYTE PTR [rax+rax*1+0x45],dl
   1400039a9:	add    BYTE PTR [rbp+0x0],cl
   1400039ac:	pop    rsp
   1400039ad:	add    BYTE PTR [rbx+0x0],al
   1400039b0:	jne    0x1400039b2
   1400039b2:	jb     0x1400039b4
   1400039b4:	jb     0x1400039b6
   1400039b6:	add    BYTE PTR gs:[rsi+0x0],ch
   1400039ba:	je     0x1400039bc
   1400039bc:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400039c0:	outs   dx,BYTE PTR ds:[rsi]
   1400039c1:	add    BYTE PTR [rax+rax*1+0x72],dh
   1400039c5:	add    BYTE PTR [rdi+0x0],ch
   1400039c8:	ins    BYTE PTR es:[rdi],dx
   1400039c9:	add    BYTE PTR [rbx+0x0],dl
   1400039cc:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   1400039d1:	add    BYTE PTR [rbx+0x0],al
   1400039d4:	outs   dx,DWORD PTR ds:[rsi]
   1400039d5:	add    BYTE PTR [rsi+0x0],ch
   1400039d8:	je     0x1400039da
   1400039da:	jb     0x1400039dc
   1400039dc:	outs   dx,DWORD PTR ds:[rsi]
   1400039dd:	add    BYTE PTR [rax+rax*1+0x5c],ch
   1400039e1:	add    BYTE PTR [rax+0x0],dl
   1400039e4:	jb     0x1400039e6
   1400039e6:	outs   dx,DWORD PTR ds:[rsi]
   1400039e7:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400039eb:	add    BYTE PTR [rbx+0x0],ah
   1400039ee:	je     0x1400039f0
   1400039f0:	rex.WRXB add BYTE PTR [r8+0x0],r14b
   1400039f4:	je     0x1400039f6
   1400039f6:	imul   eax,DWORD PTR [rax],0x6e006f
   1400039fc:	jae    0x1400039fe
   1400039fe:	add    BYTE PTR [rax],al
   140003a00:	rex.WRXB add BYTE PTR [r8+0x0],r14b
   140003a04:	je     0x140003a06
   140003a06:	imul   eax,DWORD PTR [rax],0x6e006f
   140003a0c:	push   rsi
   140003a0d:	add    BYTE PTR [rcx+0x0],ah
   140003a10:	ins    BYTE PTR es:[rdi],dx
   140003a11:	add    BYTE PTR [rbp+0x0],dh
   140003a14:	add    BYTE PTR gs:[rax],al
   140003a17:	add    BYTE PTR [rbp+0x0],dl
   140003a1a:	jo     0x140003a1c
   140003a1c:	add    BYTE PTR [edx+0x0],dh
   140003a20:	(bad)  
   140003a21:	add    BYTE PTR [rax+rax*1+0x65],ah
   140003a25:	add    BYTE PTR [rcx+0x0],cl
   140003a28:	outs   dx,BYTE PTR ds:[rsi]
   140003a29:	add    BYTE PTR [rax+0x0],dl
   140003a2c:	jb     0x140003a2e
   140003a2e:	outs   dx,DWORD PTR ds:[rsi]
   140003a2f:	add    BYTE PTR [rdi+0x0],ah
   140003a32:	jb     0x140003a34
   140003a34:	add    BYTE PTR gs:[rbx+0x0],dh
   140003a38:	jae    0x140003a3a
   140003a3a:	add    BYTE PTR [rax],al
   140003a3c:	add    BYTE PTR [rax],al
   140003a3e:	add    BYTE PTR [rax],al
   140003a40:	push   rbx
   140003a41:	add    BYTE PTR [rcx+0x0],bl
   140003a44:	push   rbx
   140003a45:	add    BYTE PTR [rax+rax*1+0x45],dl
   140003a49:	add    BYTE PTR [rbp+0x0],cl
   140003a4c:	pop    rsp
   140003a4d:	add    BYTE PTR [rbx+0x0],al
   140003a50:	jne    0x140003a52
   140003a52:	jb     0x140003a54
   140003a54:	jb     0x140003a56
   140003a56:	add    BYTE PTR gs:[rsi+0x0],ch
   140003a5a:	je     0x140003a5c
   140003a5c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140003a60:	outs   dx,BYTE PTR ds:[rsi]
   140003a61:	add    BYTE PTR [rax+rax*1+0x72],dh
   140003a65:	add    BYTE PTR [rdi+0x0],ch
   140003a68:	ins    BYTE PTR es:[rdi],dx
   140003a69:	add    BYTE PTR [rbx+0x0],dl
   140003a6c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   140003a71:	add    BYTE PTR [rbx+0x0],al
   140003a74:	outs   dx,DWORD PTR ds:[rsi]
   140003a75:	add    BYTE PTR [rsi+0x0],ch
   140003a78:	je     0x140003a7a
   140003a7a:	jb     0x140003a7c
   140003a7c:	outs   dx,DWORD PTR ds:[rsi]
   140003a7d:	add    BYTE PTR [rax+rax*1+0x5c],ch
   140003a81:	add    BYTE PTR [rbx+0x0],dl
   140003a84:	(bad)  
   140003a85:	add    BYTE PTR [rsi+0x0],ah
   140003a88:	add    BYTE PTR gs:[rdx+0x0],ah
   140003a8c:	outs   dx,DWORD PTR ds:[rsi]
   140003a8d:	add    BYTE PTR [rdi+0x0],ch
   140003a90:	je     0x140003a92
   140003a92:	pop    rsp
   140003a93:	add    BYTE PTR [rdi+0x0],cl
   140003a96:	jo     0x140003a98
   140003a98:	je     0x140003a9a
   140003a9a:	imul   eax,DWORD PTR [rax],0x6e006f
   140003aa0:	add    BYTE PTR [rax],al
   140003aa2:	add    BYTE PTR [rax],al
   140003aa4:	pop    rsp
   140003aa5:	add    BYTE PTR [rax],al
   140003aa7:	add    BYTE PTR [rbx+0x0],dl
   140003aaa:	jns    0x140003aac
   140003aac:	jae    0x140003aae
   140003aae:	je     0x140003ab0
   140003ab0:	add    BYTE PTR gs:[rbp+0x0],ch
   140003ab4:	push   rbx
   140003ab5:	add    BYTE PTR [rbp+0x0],ah
   140003ab8:	je     0x140003aba
   140003aba:	jne    0x140003abc
   140003abc:	jo     0x140003abe
   140003abe:	rex.WB add BYTE PTR [r14+0x0],bpl
   140003ac2:	push   rax
   140003ac3:	add    BYTE PTR [rdx+0x0],dh
   140003ac6:	outs   dx,DWORD PTR ds:[rsi]
   140003ac7:	add    BYTE PTR [rdi+0x0],ah
   140003aca:	jb     0x140003acc
   140003acc:	add    BYTE PTR gs:[rbx+0x0],dh
   140003ad0:	jae    0x140003ad2
   140003ad2:	add    BYTE PTR [rax],al
   140003ad4:	add    BYTE PTR [rax],al
   140003ad6:	add    BYTE PTR [rax],al
   140003ad8:	push   rbx
   140003ad9:	add    BYTE PTR [rcx+0x0],bl
   140003adc:	push   rbx
   140003add:	add    BYTE PTR [rax+rax*1+0x45],dl
   140003ae1:	add    BYTE PTR [rbp+0x0],cl
   140003ae4:	pop    rsp
   140003ae5:	add    BYTE PTR [rbx+0x0],dl
   140003ae8:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   140003aed:	add    BYTE PTR [rax+0x0],dh
	...
   140003af8:	add    BYTE PTR [rcx+0x0],r13b
   140003afc:	jae    0x140003afe
   140003afe:	(bad)  
   140003aff:	add    BYTE PTR [rdx+0x0],ah
   140003b02:	ins    BYTE PTR es:[rdi],dx
   140003b03:	add    BYTE PTR [rbp+0x0],ah
   140003b06:	add    BYTE PTR fs:[rax],al
   140003b09:	add    BYTE PTR [rax],al
   140003b0b:	add    BYTE PTR [rax],al
   140003b0d:	add    BYTE PTR [rax],al
   140003b0f:	add    BYTE PTR [rbx+0x0],dl
   140003b12:	pop    rcx
   140003b13:	add    BYTE PTR [rbx+0x0],dl
   140003b16:	push   rsp
   140003b17:	add    BYTE PTR [rbp+0x0],al
   140003b1a:	rex.WRB add BYTE PTR [r8+rax*1+0x43],r11b
   140003b1f:	add    BYTE PTR [rbp+0x0],dh
   140003b22:	jb     0x140003b24
   140003b24:	jb     0x140003b26
   140003b26:	add    BYTE PTR gs:[rsi+0x0],ch
   140003b2a:	je     0x140003b2c
   140003b2c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140003b30:	outs   dx,BYTE PTR ds:[rsi]
   140003b31:	add    BYTE PTR [rax+rax*1+0x72],dh
   140003b35:	add    BYTE PTR [rdi+0x0],ch
   140003b38:	ins    BYTE PTR es:[rdi],dx
   140003b39:	add    BYTE PTR [rbx+0x0],dl
   140003b3c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   140003b41:	add    BYTE PTR [rbx+0x0],dl
   140003b44:	add    BYTE PTR gs:[rdx+0x0],dh
   140003b48:	jbe    0x140003b4a
   140003b4a:	imul   eax,DWORD PTR [rax],0x650063
   140003b50:	jae    0x140003b52
   140003b52:	pop    rsp
   140003b53:	add    BYTE PTR [rsi+0x0],dl
   140003b56:	push   rbx
   140003b57:	add    BYTE PTR [rbx+0x0],dl
   140003b5a:	pop    rsp
   140003b5b:	add    BYTE PTR [rax+rax*1+0x69],al
   140003b5f:	add    BYTE PTR [rcx+0x0],ah
   140003b62:	add    BYTE PTR [eax],al
   140003b65:	add    BYTE PTR [rax],al
   140003b67:	add    BYTE PTR [rax+rax*1+0x5c],bl
   140003b6b:	add    BYTE PTR [rdi],bh
   140003b6d:	add    BYTE PTR [rax+rax*1+0x56],bl
   140003b71:	add    BYTE PTR [rdi+0x0],ch
   140003b74:	ins    BYTE PTR es:[rdi],dx
   140003b75:	add    BYTE PTR [rbp+0x0],dh
   140003b78:	ins    DWORD PTR es:[rdi],dx
   140003b79:	add    BYTE PTR [rbp+0x0],ah
   140003b7c:	add    BYTE PTR [rax],al
   140003b7e:	add    BYTE PTR [rax],al
   140003b80:	pop    rsp
   140003b81:	add    BYTE PTR [rdi],bh
   140003b83:	add    BYTE PTR [rdi],bh
   140003b85:	add    BYTE PTR [rax+rax*1+0x56],bl
   140003b89:	add    BYTE PTR [rdi+0x0],ch
   140003b8c:	ins    BYTE PTR es:[rdi],dx
   140003b8d:	add    BYTE PTR [rbp+0x0],dh
   140003b90:	ins    DWORD PTR es:[rdi],dx
   140003b91:	add    BYTE PTR [rbp+0x0],ah
   140003b94:	add    BYTE PTR [rax],al
   140003b96:	add    BYTE PTR [rax],al
   140003b98:	push   rsi
   140003b99:	add    BYTE PTR [rbx+0x0],dl
   140003b9c:	push   rbx
   140003b9d:	add    BYTE PTR [rcx+0x0],al
   140003ba0:	jne    0x140003ba2
   140003ba2:	add    BYTE PTR fs:[rcx+0x0],ch
   140003ba6:	je     0x140003ba8
	...
   140003bb0:	push   rbx
   140003bb1:	add    BYTE PTR [rcx+0x0],bl
   140003bb4:	push   rbx
   140003bb5:	add    BYTE PTR [rax+rax*1+0x45],dl
   140003bb9:	add    BYTE PTR [rbp+0x0],cl
   140003bbc:	pop    rsp
   140003bbd:	add    BYTE PTR [rbx+0x0],al
   140003bc0:	jne    0x140003bc2
   140003bc2:	jb     0x140003bc4
   140003bc4:	jb     0x140003bc6
   140003bc6:	add    BYTE PTR gs:[rsi+0x0],ch
   140003bca:	je     0x140003bcc
   140003bcc:	rex.XB add BYTE PTR [r15+0x0],bpl
   140003bd0:	outs   dx,BYTE PTR ds:[rsi]
   140003bd1:	add    BYTE PTR [rax+rax*1+0x72],dh
   140003bd5:	add    BYTE PTR [rdi+0x0],ch
   140003bd8:	ins    BYTE PTR es:[rdi],dx
   140003bd9:	add    BYTE PTR [rbx+0x0],dl
   140003bdc:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   140003be1:	add    BYTE PTR [rbx+0x0],dl
   140003be4:	add    BYTE PTR gs:[rdx+0x0],dh
   140003be8:	jbe    0x140003bea
   140003bea:	imul   eax,DWORD PTR [rax],0x650063
   140003bf0:	jae    0x140003bf2
   140003bf2:	pop    rsp
   140003bf3:	add    BYTE PTR [rsi+0x0],dl
   140003bf6:	push   rbx
   140003bf7:	add    BYTE PTR [rbx+0x0],dl
   140003bfa:	pop    rsp
   140003bfb:	add    BYTE PTR [rbx+0x0],dl
   140003bfe:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   140003c03:	add    BYTE PTR [rcx+0x0],ch
   140003c06:	outs   dx,BYTE PTR ds:[rsi]
   140003c07:	add    BYTE PTR [rdi+0x0],ah
   140003c0a:	jae    0x140003c0c
   140003c0c:	add    BYTE PTR [rax],al
   140003c0e:	add    BYTE PTR [rax],al
   140003c10:	pop    rsp
   140003c11:	add    BYTE PTR [rax+rax*1+0x3f],bl
   140003c15:	add    BYTE PTR [rax+rax*1+0x56],bl
   140003c19:	add    BYTE PTR [rdi+0x0],ch
   140003c1c:	ins    BYTE PTR es:[rdi],dx
   140003c1d:	add    BYTE PTR [rbp+0x0],dh
   140003c20:	ins    DWORD PTR es:[rdi],dx
   140003c21:	add    BYTE PTR [rbp+0x0],ah
   140003c24:	add    BYTE PTR [rax],al
   140003c26:	add    BYTE PTR [rax],al
   140003c28:	pop    rsp
   140003c29:	add    BYTE PTR [rdi],bh
   140003c2b:	add    BYTE PTR [rdi],bh
   140003c2d:	add    BYTE PTR [rax+rax*1+0x56],bl
   140003c31:	add    BYTE PTR [rdi+0x0],ch
   140003c34:	ins    BYTE PTR es:[rdi],dx
   140003c35:	add    BYTE PTR [rbp+0x0],dh
   140003c38:	ins    DWORD PTR es:[rdi],dx
   140003c39:	add    BYTE PTR [rbp+0x0],ah
   140003c3c:	add    BYTE PTR [rax],al
   140003c3e:	add    BYTE PTR [rax],al
   140003c40:	add    BYTE PTR [r14+0x0],r13b
   140003c44:	(bad)  
   140003c45:	add    BYTE PTR [rdx+0x0],ah
   140003c48:	ins    BYTE PTR es:[rdi],dx
   140003c49:	add    BYTE PTR [rbp+0x0],ah
   140003c4c:	push   rdx
   140003c4d:	add    BYTE PTR [rbp+0x0],ah
   140003c50:	ins    DWORD PTR es:[rdi],dx
   140003c51:	add    BYTE PTR [rdi+0x0],ch
   140003c54:	je     0x140003c56
   140003c56:	add    BYTE PTR gs:[rbx+0x0],dl
   140003c5a:	outs   dx,BYTE PTR ds:[rsi]
   140003c5b:	add    BYTE PTR [rcx+0x0],ah
   140003c5e:	jo     0x140003c60
   140003c60:	jae    0x140003c62
   140003c62:	push   0x74006f00
   140003c67:	add    BYTE PTR [rbx+0x0],dh
   140003c6a:	add    BYTE PTR [rax],al
   140003c6c:	add    BYTE PTR [rax],al
   140003c6e:	add    BYTE PTR [rax],al
   140003c70:	push   rsi
   140003c71:	add    BYTE PTR [rbx+0x0],dl
   140003c74:	push   rbx
   140003c75:	add    BYTE PTR [rax],al
   140003c77:	add    BYTE PTR [rsi+0x0],dh
   140003c7a:	jae    0x140003c7c
   140003c7c:	jae    0x140003c7e
   140003c7e:	je     0x140003c80
   140003c80:	jb     0x140003c82
   140003c82:	(bad)  
   140003c83:	add    BYTE PTR [rbx+0x0],ah
   140003c86:	add    BYTE PTR gs:[rsi],ch
   140003c89:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140003c8d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140003c91:	add    BYTE PTR [rax],al
   140003c93:	add    BYTE PTR [rax],al
   140003c95:	add    BYTE PTR [rax],al
   140003c97:	add    al,dl
   140003c99:	rex.RXB add BYTE PTR [r8+0x1],r8b
   140003c9d:	add    BYTE PTR [rax],al
   140003c9f:	add    BYTE PTR [rax+0x4a],bh
   140003ca2:	add    BYTE PTR [rax+0x1],al
   140003ca5:	add    BYTE PTR [rax],al
   140003ca7:	add    BYTE PTR [rbx+rbx*4+0x0],ah
   140003cab:	rex add DWORD PTR [rax],eax
   140003cae:	add    BYTE PTR [rax],al
   140003cb0:	cmp    BYTE PTR [rdx+0x0],cl
   140003cb3:	rex add DWORD PTR [rax],eax
   140003cb6:	add    BYTE PTR [rax],al
   140003cb8:	xchg   esi,esi
   140003cba:	fdiv   DWORD PTR [rdi+0x30]
   140003cbd:	adc    DWORD PTR [rdx+rcx*2],0x923ba6b8
   140003cc4:	cs add eax,0x500e9cb9
   140003cca:	cmp    BYTE PTR [rcx+0x4edb3648],dl
   140003cd0:	stos   BYTE PTR es:[rdi],al
   140003cd1:	test   QWORD PTR [rsi+0x387c7b9f],r11
   140003cd8:	add    cl,bl
   140003cda:	std    
   140003cdb:	push   0x11d14a3e
   140003ce0:	test   ah,dh
   140003ce2:	add    BYTE PTR [rax],al
   140003ce4:	clc    
   140003ce5:	add    al,0x64
   140003ce7:	jrcxz  0x140003ce9
   140003ce9:	add    BYTE PTR [rax],al
   140003ceb:	add    BYTE PTR [rax],al
   140003ced:	add    BYTE PTR [rax],al
   140003cef:	add    BYTE PTR [rbx+0x0],bh
   140003cf2:	and    eax,0x38003000
   140003cf7:	add    BYTE PTR [rax+0x0],bh
   140003cfa:	sub    eax,0x30002500
   140003cff:	add    BYTE PTR [rax+rax*1],dh
   140003d02:	js     0x140003d04
   140003d04:	sub    eax,0x30002500
   140003d09:	add    BYTE PTR [rax+rax*1],dh
   140003d0c:	js     0x140003d0e
   140003d0e:	sub    eax,0x30002500
   140003d13:	add    BYTE PTR [rdx],dh
   140003d15:	add    BYTE PTR [rax+0x0],bh
   140003d18:	and    eax,0x32003000
   140003d1d:	add    BYTE PTR [rax+0x0],bh
   140003d20:	sub    eax,0x30002500
   140003d25:	add    BYTE PTR [rdx],dh
   140003d27:	add    BYTE PTR [rax+0x0],bh
   140003d2a:	and    eax,0x32003000
   140003d2f:	add    BYTE PTR [rax+0x0],bh
   140003d32:	and    eax,0x32003000
   140003d37:	add    BYTE PTR [rax+0x0],bh
   140003d3a:	and    eax,0x32003000
   140003d3f:	add    BYTE PTR [rax+0x0],bh
   140003d42:	and    eax,0x32003000
   140003d47:	add    BYTE PTR [rax+0x0],bh
   140003d4a:	and    eax,0x32003000
   140003d4f:	add    BYTE PTR [rax+0x0],bh
   140003d52:	jge    0x140003d54
   140003d54:	add    BYTE PTR [rax],al
   140003d56:	add    BYTE PTR [rax],al
   140003d58:	add    BYTE PTR [r14+0x0],r14b
   140003d5c:	add    BYTE PTR gs:[rsi+0x0],ch
   140003d60:	je     0x140003d62
   140003d62:	push   rsp
   140003d63:	add    BYTE PTR [rdx+0x0],dh
   140003d66:	(bad)  
   140003d67:	add    BYTE PTR [rbx+0x0],ah
   140003d6a:	add    BYTE PTR gs:[rax],al
   140003d6d:	add    BYTE PTR [rax],al
   140003d6f:	add    BYTE PTR [rax+0x0],cl
   140003d72:	add    BYTE PTR gs:[rcx+0x0],ah
   140003d76:	add    BYTE PTR fs:[rbp+0x0],ah
   140003d7a:	jb     0x140003d7c
   140003d7c:	add    BYTE PTR [rax],al
   140003d7e:	add    BYTE PTR [rax],al
   140003d80:	push   rbp
   140003d81:	add    BYTE PTR [rsi+0x0],ch
   140003d84:	imul   eax,DWORD PTR [rax],0x6e
   140003d87:	add    BYTE PTR [rdi+0x0],ch
   140003d8a:	ja     0x140003d8c
   140003d8c:	outs   dx,BYTE PTR ds:[rsi]
   140003d8d:	add    BYTE PTR [rax],al
   140003d8f:	add    BYTE PTR [rdx+0x0],dh
   140003d92:	outs   dx,DWORD PTR ds:[rsi]
   140003d93:	add    BYTE PTR [rdi+0x0],ch
   140003d96:	je     0x140003d98
   140003d98:	pop    rsp
   140003d99:	add    BYTE PTR [rdi+0x0],dh
   140003d9c:	ins    DWORD PTR es:[rdi],dx
   140003d9d:	add    BYTE PTR [rcx+0x0],ch
	...
   140003da8:	rex.WRB add BYTE PTR [r9+0x0],r8b
   140003dac:	pop    rax
   140003dad:	add    BYTE PTR [rax],al
   140003daf:	add    BYTE PTR [rsi+0x0],ah
   140003db2:	outs   dx,DWORD PTR ds:[rsi]
   140003db3:	add    BYTE PTR [rdx+0x0],dh
   140003db6:	ins    DWORD PTR es:[rdi],dx
   140003db7:	add    BYTE PTR [rcx+0x0],ah
   140003dba:	je     0x140003dbc
   140003dbc:	add    BYTE PTR [rax],al
   140003dbe:	add    BYTE PTR [rax],al
   140003dc0:	push   rbx
   140003dc1:	add    BYTE PTR [rax+rax*1+0x72],dh
   140003dc5:	add    BYTE PTR [rcx+0x0],ch
   140003dc8:	outs   dx,BYTE PTR ds:[rsi]
   140003dc9:	add    BYTE PTR [rdi+0x0],ah
   140003dcc:	push   rsp
   140003dcd:	add    BYTE PTR [rbp+0x0],ah
   140003dd0:	jb     0x140003dd2
   140003dd2:	ins    DWORD PTR es:[rdi],dx
   140003dd3:	add    BYTE PTR [rcx+0x0],ch
   140003dd6:	outs   dx,BYTE PTR ds:[rsi]
   140003dd7:	add    BYTE PTR [rcx+0x0],ah
   140003dda:	je     0x140003ddc
   140003ddc:	imul   eax,DWORD PTR [rax],0x6e006f
   140003de2:	add    BYTE PTR [rax],al
   140003de4:	add    BYTE PTR [rax],al
   140003de6:	add    BYTE PTR [rax],al
   140003de8:	jo     0x140003dea
   140003dea:	outs   dx,DWORD PTR ds:[rsi]
   140003deb:	add    BYTE PTR [rcx+0x0],ch
   140003dee:	outs   dx,BYTE PTR ds:[rsi]
   140003def:	add    BYTE PTR [rax+rax*1+0x65],dh
   140003df3:	add    BYTE PTR [rdx+0x0],dh
   140003df6:	add    BYTE PTR [rax],al
   140003df8:	add    BYTE PTR gs:[rax+0x0],bh
   140003dfc:	je     0x140003dfe
   140003dfe:	add    BYTE PTR gs:[rsi+0x0],ch
   140003e02:	jae    0x140003e04
   140003e04:	imul   eax,DWORD PTR [rax],0x6e006f
   140003e0a:	add    BYTE PTR [rax],al
   140003e0c:	movsxd eax,DWORD PTR [rax]
   140003e0e:	add    BYTE PTR [rax],al
   140003e10:	js     0x140003e12
   140003e12:	add    BYTE PTR [rax],al
   140003e14:	add    BYTE PTR [rax],al
   140003e16:	add    BYTE PTR [rax],al
   140003e18:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   140003e1c:	ins    BYTE PTR es:[rdi],dx
   140003e1d:	add    BYTE PTR [rax+rax*1+0x54],ch
   140003e21:	add    BYTE PTR [rbp+0x0],ah
   140003e24:	jb     0x140003e26
   140003e26:	ins    DWORD PTR es:[rdi],dx
   140003e27:	add    BYTE PTR [rcx+0x0],ch
   140003e2a:	outs   dx,BYTE PTR ds:[rsi]
   140003e2b:	add    BYTE PTR [rcx+0x0],ah
   140003e2e:	je     0x140003e30
   140003e30:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   140003e35:	add    BYTE PTR [rax],al
   140003e37:	add    BYTE PTR [rbx+0x0],al
   140003e3a:	outs   dx,DWORD PTR ds:[rsi]
   140003e3b:	add    BYTE PTR [rbp+0x0],dh
   140003e3e:	outs   dx,BYTE PTR ds:[rsi]
   140003e3f:	add    BYTE PTR [rax+rax*1+0x65],dh
   140003e43:	add    BYTE PTR [rax+rax*1+0x0],ah
   140003e47:	add    BYTE PTR [rdx+0x0],dl
   140003e4a:	add    BYTE PTR gs:[rsi+0x0],dh
   140003e4e:	add    BYTE PTR gs:[rdx+0x0],dh
   140003e52:	jae    0x140003e54
   140003e54:	add    BYTE PTR gs:[rbx+0x0],al
   140003e58:	outs   dx,DWORD PTR ds:[rsi]
   140003e59:	add    BYTE PTR [rbp+0x0],dh
   140003e5c:	outs   dx,BYTE PTR ds:[rsi]
   140003e5d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140003e61:	add    BYTE PTR [rax+rax*1+0x0],ah
   140003e65:	add    BYTE PTR [rax],al
   140003e67:	add    BYTE PTR [rsi+0x0],cl
   140003e6a:	outs   dx,DWORD PTR ds:[rsi]
   140003e6b:	add    BYTE PTR [rax+rax*1+0x43],dh
   140003e6f:	add    BYTE PTR [rdi+0x0],ch
   140003e72:	jne    0x140003e74
   140003e74:	outs   dx,BYTE PTR ds:[rsi]
   140003e75:	add    BYTE PTR [rax+rax*1+0x65],dh
   140003e79:	add    BYTE PTR [rax+rax*1+0x0],ah
   140003e7d:	add    BYTE PTR [rax],al
   140003e7f:	add    BYTE PTR [rax+0x0],dl
   140003e82:	outs   dx,DWORD PTR ds:[rsi]
   140003e83:	add    BYTE PTR [rdx+0x0],dh
   140003e86:	je     0x140003e88
	...
   140003e90:	rex.WB add BYTE PTR [r8+0x0],dl
   140003e94:	add    BYTE PTR [r8+rax*1+0x64],spl
   140003e99:	add    BYTE PTR [rdx+0x0],dh
   140003e9c:	add    BYTE PTR [rax],al
   140003e9e:	add    BYTE PTR [rax],al
   140003ea0:	push   rbx
   140003ea1:	add    BYTE PTR [rcx+0x0],ch
   140003ea4:	add    BYTE PTR fs:[rax],al
   140003ea7:	add    BYTE PTR [rdi+0x0],bl
   140003eaa:	pop    rdi
   140003eab:	add    BYTE PTR [rbx+0x0],al
   140003eae:	rex.WR add BYTE PTR [rcx+0x0],r8b
   140003eb2:	push   rbx
   140003eb3:	add    BYTE PTR [rbx+0x0],dl
   140003eb6:	add    BYTE PTR [rax],al
   140003eb8:	push   rdi
   140003eb9:	add    BYTE PTR [rbp+0x0],ch
   140003ebc:	imul   eax,DWORD PTR [rax],0x610044
   140003ec2:	je     0x140003ec4
   140003ec4:	(bad)  
   140003ec5:	add    BYTE PTR [rcx+0x0],cl
   140003ec8:	add    BYTE PTR fs:[rax],al
   140003ecb:	add    BYTE PTR [rax],al
   140003ecd:	add    BYTE PTR [rax],al
   140003ecf:	add    BYTE PTR [rbp+0x0],al
   140003ed2:	jbe    0x140003ed4
   140003ed4:	add    BYTE PTR gs:[rsi+0x0],ch
   140003ed8:	je     0x140003eda
   140003eda:	push   rsp
   140003edb:	add    BYTE PTR [rcx+0x0],bh
   140003ede:	jo     0x140003ee0
   140003ee0:	add    BYTE PTR gs:[rsi+0x0],cl
   140003ee4:	(bad)  
   140003ee5:	add    BYTE PTR [rbp+0x0],ch
   140003ee8:	add    BYTE PTR gs:[rax],al
   140003eeb:	add    BYTE PTR [rax],al
   140003eed:	add    BYTE PTR [rax],al
   140003eef:	add    BYTE PTR [rax+rax*1+0x69],al
   140003ef3:	add    BYTE PTR [rbx+0x0],dh
   140003ef6:	jo     0x140003ef8
   140003ef8:	ins    BYTE PTR es:[rdi],dx
   140003ef9:	add    BYTE PTR [rcx+0x0],ah
   140003efc:	jns    0x140003efe
   140003efe:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140003f02:	ins    DWORD PTR es:[rdi],dx
   140003f03:	add    BYTE PTR [rbp+0x0],ah
   140003f06:	add    BYTE PTR [rax],al
   140003f08:	add    BYTE PTR [r14+0x0],r14b
   140003f0c:	add    BYTE PTR gs:[rsi+0x0],ch
   140003f10:	je     0x140003f12
   140003f12:	push   rsi
   140003f13:	add    BYTE PTR [rbp+0x0],ah
   140003f16:	jb     0x140003f18
   140003f18:	jae    0x140003f1a
   140003f1a:	imul   eax,DWORD PTR [rax],0x6e006f
   140003f20:	add    BYTE PTR [rax],al
   140003f22:	add    BYTE PTR [rax],al
   140003f24:	jnp    0x140003f26
   140003f26:	add    BYTE PTR [rax],al
   140003f28:	jnp    0x140003f2a
   140003f2a:	and    eax,0x7d007300
	...
   140003f37:	add    BYTE PTR [rbp+0x0],al
   140003f3a:	js     0x140003f3c
   140003f3c:	movsxd eax,DWORD PTR [rax]
   140003f3e:	add    BYTE PTR gs:[rax+0x0],dh
   140003f42:	je     0x140003f44
   140003f44:	imul   eax,DWORD PTR [rax],0x6e006f
   140003f4a:	jae    0x140003f4c
   140003f4c:	add    BYTE PTR [rax],al
   140003f4e:	add    BYTE PTR [rax],al
   140003f50:	rex.XB add BYTE PTR [r15+0x0],bpl
   140003f54:	outs   dx,DWORD PTR ds:[rsi]
   140003f55:	add    BYTE PTR [rdx+0x0],dh
   140003f58:	add    BYTE PTR fs:[rax],al
   140003f5b:	add    BYTE PTR [rax],al
   140003f5d:	add    BYTE PTR [rax],al
   140003f5f:	add    BYTE PTR [rbx+0x0],dl
   140003f62:	outs   dx,DWORD PTR ds:[rsi]
   140003f63:	add    BYTE PTR [rsi+0x0],ah
   140003f66:	je     0x140003f68
   140003f68:	ja     0x140003f6a
   140003f6a:	(bad)  
   140003f6b:	add    BYTE PTR [rdx+0x0],dh
   140003f6e:	add    BYTE PTR gs:[rax+0x0],dl
   140003f72:	jb     0x140003f74
   140003f74:	outs   dx,DWORD PTR ds:[rsi]
   140003f75:	add    BYTE PTR [rsi+0x0],dh
   140003f78:	imul   eax,DWORD PTR [rax],0x650064
   140003f7e:	jb     0x140003f80
	...
   140003f88:	rex.X add BYTE PTR [rbp+0x0],sil
   140003f8c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140003f90:	ins    DWORD PTR es:[rdi],dx
   140003f91:	add    BYTE PTR [rax+0x0],dh
   140003f94:	add    BYTE PTR [rax],al
   140003f96:	add    BYTE PTR [rax],al
   140003f98:	push   rdi
   140003f99:	add    BYTE PTR [rdx+0x0],dh
   140003f9c:	imul   eax,DWORD PTR [rax],0x650074
   140003fa2:	jb     0x140003fa4
   140003fa4:	add    BYTE PTR [rax],al
   140003fa6:	add    BYTE PTR [rax],al
   140003fa8:	push   rsi
   140003fa9:	add    BYTE PTR [rbx+0x0],dh
   140003fac:	jae    0x140003fae
   140003fae:	add    BYTE PTR [r8+0x0],sil
   140003fb2:	imul   eax,DWORD PTR [rax],0x0
   140003fb8:	rex.W add BYTE PTR [rcx+0x0],spl
   140003fbc:	jb     0x140003fbe
   140003fbe:	add    BYTE PTR fs:[rdi+0x0],dh
   140003fc2:	(bad)  
   140003fc3:	add    BYTE PTR [rdx+0x0],dh
   140003fc6:	add    BYTE PTR gs:[rax+rax*1+0x69],al
   140003fcb:	add    BYTE PTR [rcx+0x0],ah
   140003fce:	add    BYTE PTR [eax],al
   140003fd1:	add    BYTE PTR [rax],al
   140003fd3:	add    BYTE PTR [rax],al
   140003fd5:	add    BYTE PTR [rax],al
   140003fd7:	add    BYTE PTR [rcx+0x0],al
   140003fda:	add    BYTE PTR fs:[rbp+0x0],ch
   140003fde:	imul   eax,DWORD PTR [rax],0x6e
   140003fe4:	add    BYTE PTR [rax],al
   140003fe6:	add    BYTE PTR [rax],al
   140003fe8:	push   rsi
   140003fe9:	add    BYTE PTR [rbx+0x0],dh
   140003fec:	jae    0x140003fee
   140003fee:	push   rbp
   140003fef:	add    BYTE PTR [rcx+0x0],cl
   140003ff2:	add    BYTE PTR [rax],al
   140003ff4:	add    BYTE PTR [rax],al
   140003ff6:	add    BYTE PTR [rax],al
   140003ff8:	push   rsp
   140003ff9:	add    BYTE PTR [rbp+0x0],ah
   140003ffc:	jae    0x140003ffe
   140003ffe:	je     0x140004000
	...
   140004008:	rex.WB add BYTE PTR [r15+0x0],cl
   14000400c:	add    BYTE PTR [r8+r8*1+0x4c],dl
   140004011:	add    BYTE PTR [rax],al
   140004013:	add    BYTE PTR [rax],al
   140004015:	add    BYTE PTR [rax],al
   140004017:	add    BYTE PTR [rdi+0x0],al
   14000401a:	add    BYTE PTR gs:[rsi+0x0],ch
   14000401e:	add    BYTE PTR gs:[rdx+0x0],dh
   140004022:	imul   eax,DWORD PTR [rax],0x63
   140004028:	push   rdi
   140004029:	add    BYTE PTR [rdx+0x0],dh
   14000402c:	imul   eax,DWORD PTR [rax],0x650074
   140004032:	jb     0x140004034
   140004034:	pop    rax
   140004035:	add    BYTE PTR [rbp+0x0],cl
   140004038:	rex.WR add BYTE PTR [rax],r8b
   14000403b:	add    BYTE PTR [rax],al
   14000403d:	add    BYTE PTR [rax],al
   14000403f:	add    BYTE PTR [rax+0x0],bl
   140004042:	rex.WRB add BYTE PTR [r8+rax*1+0x0],r9b
   140004047:	add    BYTE PTR [rsi+0x0],al
   14000404a:	jae    0x14000404c
   14000404c:	jae    0x14000404e
   14000404e:	push   rax
   14000404f:	add    BYTE PTR [rdx+0x0],dh
   140004052:	outs   dx,DWORD PTR ds:[rsi]
   140004053:	add    BYTE PTR [rsi+0x0],dh
   140004056:	imul   eax,DWORD PTR [rax],0x650064
   14000405c:	jb     0x14000405e
   14000405e:	add    BYTE PTR [rax],al
   140004060:	rex.RX add BYTE PTR [rbx+0x0],r14b
   140004064:	jae    0x140004066
   140004066:	add    BYTE PTR [r15+0x0],spl
   14000406a:	add    BYTE PTR gs:[rsi+0x0],ch
   14000406e:	je     0x140004070
	...
   140004078:	rex.RX add BYTE PTR [rbx+0x0],r14b
   14000407c:	jae    0x14000407e
   14000407e:	rex.WRB add BYTE PTR [r13+0x0],r12b
   140004082:	je     0x140004084
   140004084:	(bad)  
   140004085:	add    BYTE PTR [rax+rax*1+0x61],ah
   140004089:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000408d:	add    BYTE PTR [rax],al
   14000408f:	add    BYTE PTR [rbp+0x0],al
   140004092:	pop    rax
   140004093:	add    BYTE PTR [rbx+0x0],al
   140004096:	add    BYTE PTR [r8+0x0],r10b
   14000409a:	push   rsp
   14000409b:	add    BYTE PTR [rax],al
   14000409d:	add    BYTE PTR [rax],al
   14000409f:	add    BYTE PTR [rbx+0x0],al
   1400040a2:	rex.WRXB add BYTE PTR [r15+0x0],r9b
   1400040a6:	push   rdx
   1400040a7:	add    BYTE PTR [rax+rax*1+0x0],al
   1400040ab:	add    BYTE PTR [rax],al
   1400040ad:	add    BYTE PTR [rax],al
   1400040af:	add    BYTE PTR [rbx+0x0],dl
   1400040b2:	push   rdi
   1400040b3:	add    BYTE PTR [rax+0x0],dl
   1400040b6:	push   rdx
   1400040b7:	add    BYTE PTR [rsi+0x0],dl
   1400040ba:	add    BYTE PTR [rax],al
   1400040bc:	add    BYTE PTR [rax],al
   1400040be:	add    BYTE PTR [rax],al
   1400040c0:	rex.X add BYTE PTR [rbp+0x0],dl
   1400040c4:	rex.XB add BYTE PTR [r15+0x0],cl
   1400040c8:	rex.WRB add BYTE PTR [r8+0x0],r10b
   1400040cc:	add    BYTE PTR [rax],al
   1400040ce:	add    BYTE PTR [rax],al
   1400040d0:	push   rdi
   1400040d1:	add    BYTE PTR [rdx+0x0],dl
   1400040d4:	rex.WB add BYTE PTR [r8+rax*1+0x45],dl
   1400040d9:	add    BYTE PTR [rdx+0x0],dl
   1400040dc:	add    BYTE PTR [rax],al
   1400040de:	add    BYTE PTR [rax],al
   1400040e0:	push   rsi
   1400040e1:	add    BYTE PTR [rbx+0x0],dl
   1400040e4:	push   rbx
   1400040e5:	add    BYTE PTR [rcx+0x0],al
   1400040e8:	push   rax
   1400040e9:	add    BYTE PTR [rcx+0x0],cl
   1400040ec:	add    BYTE PTR [rax],al
   1400040ee:	add    BYTE PTR [rax],al
   1400040f0:	rex.W add BYTE PTR [rdi+0x0],dl
   1400040f4:	add    BYTE PTR [rcx+0x0],r9b
   1400040f8:	add    BYTE PTR [r15+0x0],al
   1400040fc:	add    BYTE PTR [rax],al
   1400040fe:	add    BYTE PTR [rax],al
   140004100:	add    BYTE PTR [r8+rax*1+0x4d],al
   140004105:	add    BYTE PTR [rcx+0x0],cl
   140004108:	rex.WRX add BYTE PTR [rax],r8b
   14000410b:	add    BYTE PTR [rax],al
   14000410d:	add    BYTE PTR [rax],al
   14000410f:	add    BYTE PTR [rsi+0x0],dl
   140004112:	push   rbx
   140004113:	add    BYTE PTR [rbx+0x0],dl
   140004116:	push   rbp
   140004117:	add    BYTE PTR [rcx+0x0],cl
   14000411a:	add    BYTE PTR [rax],al
   14000411c:	add    BYTE PTR [rax],al
   14000411e:	add    BYTE PTR [rax],al
   140004120:	push   rsp
   140004121:	add    BYTE PTR [rbp+0x0],al
   140004124:	push   rbx
   140004125:	add    BYTE PTR [rax+rax*1+0x0],dl
   140004129:	add    BYTE PTR [rax],al
   14000412b:	add    BYTE PTR [rax],al
   14000412d:	add    BYTE PTR [rax],al
   14000412f:	add    BYTE PTR [rdi+0x0],al
   140004132:	add    BYTE PTR [r14+0x0],r9b
   140004136:	add    BYTE PTR [rax],al
   140004138:	push   rdi
   140004139:	add    BYTE PTR [rdx+0x0],dl
   14000413c:	pop    rax
   14000413d:	add    BYTE PTR [rbp+0x0],cl
   140004140:	rex.WR add BYTE PTR [rax],r8b
   140004143:	add    BYTE PTR [rax],al
   140004145:	add    BYTE PTR [rax],al
   140004147:	add    BYTE PTR [rsi+0x0],dl
   14000414a:	push   rbx
   14000414b:	add    BYTE PTR [rbx+0x0],dl
   14000414e:	pop    rax
   14000414f:	add    BYTE PTR [rbp+0x0],cl
   140004152:	rex.WR add BYTE PTR [rax],r8b
   140004155:	add    BYTE PTR [rax],al
   140004157:	add    BYTE PTR [rsi+0x0],al
   14000415a:	push   rbx
   14000415b:	add    BYTE PTR [rbx+0x0],dl
   14000415e:	push   rax
   14000415f:	add    BYTE PTR [rdx+0x0],dl
   140004162:	rex.WRXB add BYTE PTR [r14+0x0],r10b
   140004166:	add    BYTE PTR [rax],al
   140004168:	rex.RX add BYTE PTR [rbx+0x0],r10b
   14000416c:	push   rbx
   14000416d:	add    BYTE PTR [rcx+0x0],al
   140004170:	rex.RXB add BYTE PTR [r13+0x0],r8b
   140004174:	rex.WRX add BYTE PTR [rax+r8*1+0x0],r10b
   140004179:	add    BYTE PTR [rax],al
   14000417b:	add    BYTE PTR [rax],al
   14000417d:	add    BYTE PTR [rax],al
   14000417f:	add    BYTE PTR [rsi+0x0],al
   140004182:	push   rbx
   140004183:	add    BYTE PTR [rbx+0x0],dl
   140004186:	rex.WRB add BYTE PTR [r8+rax*1+0x0],r8b
   14000418b:	add    BYTE PTR [rax],al
   14000418d:	add    BYTE PTR [rax],al
   14000418f:	add    BYTE PTR [rax],ah
   140004191:	add    BYTE PTR [rax+rax*1+0x77],ah
   140004195:	add    BYTE PTR [rbp+0x0],cl
   140004198:	outs   dx,DWORD PTR ds:[rsi]
   140004199:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000419d:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400041a1:	add    BYTE PTR [rcx+0x0],cl
   1400041a4:	outs   dx,BYTE PTR ds:[rsi]
   1400041a5:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400041a9:	add    BYTE PTR [rax+0x0],bh
   1400041ac:	and    BYTE PTR [rax],al
   1400041ae:	cmp    eax,0x25002000
   1400041b3:	add    BYTE PTR [rax+rax*1+0x20],ah
   1400041b7:	add    BYTE PTR [rax],ah
   1400041b9:	add    BYTE PTR [rsi+0x0],dl
   1400041bc:	push   rbx
   1400041bd:	add    BYTE PTR [rbx+0x0],dl
   1400041c0:	pop    rdi
   1400041c1:	add    BYTE PTR [rax+rax*1+0x42],al
   1400041c5:	add    BYTE PTR [rdi+0x0],al
   1400041c8:	pop    rdi
   1400041c9:	add    BYTE PTR [rbp+0x0],cl
   1400041cc:	rex.WRXB add BYTE PTR [r8+r8*1+0x55],r8b
   1400041d1:	add    BYTE PTR [rax+rax*1+0x45],cl
   1400041d5:	add    BYTE PTR [rdi+0x0],bl
   1400041d8:	rex.XB add BYTE PTR [r15+0x0],cl
   1400041dc:	push   rbp
   1400041dd:	add    BYTE PTR [rsi+0x0],cl
   1400041e0:	push   rsp
   1400041e1:	add    BYTE PTR [rip+0x64002500],bh        # 0x1a40066e7
   1400041e7:	add    BYTE PTR [rax],ah
   1400041e9:	add    BYTE PTR [rdx],cl
   1400041eb:	add    BYTE PTR [rax],al
   1400041ed:	add    BYTE PTR [rax],al
   1400041ef:	add    BYTE PTR [rbx+rcx*4+0x14000],ah
   1400041f6:	add    BYTE PTR [rax],al
   1400041f8:	js     0x14000419c
   1400041fa:	add    BYTE PTR [rax+0x1],al
   1400041fd:	add    BYTE PTR [rax],al
   1400041ff:	add    BYTE PTR [rax-0x5e],bh
   140004202:	add    BYTE PTR [rax+0x1],al
   140004205:	add    BYTE PTR [rax],al
   140004207:	add    BYTE PTR [rax-0x5e],bh
   14000420a:	add    BYTE PTR [rax+0x1],al
   14000420d:	add    BYTE PTR [rax],al
   14000420f:	add    BYTE PTR [rax-0x5e],bh
   140004212:	add    BYTE PTR [rax+0x1],al
   140004215:	add    BYTE PTR [rax],al
   140004217:	add    BYTE PTR [rax-0x5e],bh
   14000421a:	add    BYTE PTR [rax+0x1],al
   14000421d:	add    BYTE PTR [rax],al
   14000421f:	add    BYTE PTR [rax-0x5e],bh
   140004222:	add    BYTE PTR [rax+0x1],al
   140004225:	add    BYTE PTR [rax],al
   140004227:	add    al,bl
   140004229:	mov    DWORD PTR [rax],eax
   14000422b:	rex add DWORD PTR [rax],eax
   14000422e:	add    BYTE PTR [rax],al
   140004230:	cmp    al,0x89
   140004232:	add    BYTE PTR [rax+0x1],al
   140004235:	add    BYTE PTR [rax],al
   140004237:	add    al,bh
   140004239:	mov    al,BYTE PTR [rax]
   14000423b:	rex add DWORD PTR [rax],eax
   14000423e:	add    BYTE PTR [rax],al
   140004240:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140004241:	mov    eax,DWORD PTR [rax]
   140004243:	rex add DWORD PTR [rax],eax
   140004246:	add    BYTE PTR [rax],al
   140004248:	adc    BYTE PTR [rbx+0x14000],dl
   14000424e:	add    BYTE PTR [rax],al
   140004250:	rex xchg ebx,eax
   140004252:	add    BYTE PTR [rax+0x1],al
   140004255:	add    BYTE PTR [rax],al
   140004257:	add    BYTE PTR [rax-0x6d],dl
   14000425a:	add    BYTE PTR [rax+0x1],al
   14000425d:	add    BYTE PTR [rax],al
   14000425f:	add    BYTE PTR [rbx+rdx*4+0x0],ah
   140004263:	rex add DWORD PTR [rax],eax
   140004266:	add    BYTE PTR [rax],al
   140004268:	js     0x1400041fd
   14000426a:	add    BYTE PTR [rax+0x1],al
   14000426d:	add    BYTE PTR [rax],al
   14000426f:	add    BYTE PTR [rbx+rdx*4+0x14000],cl
   140004276:	add    BYTE PTR [rax],al
   140004278:	fmul   DWORD PTR [rcx+0x14000]
   14000427e:	add    BYTE PTR [rax],al
   140004280:	cmp    al,0x89
   140004282:	add    BYTE PTR [rax+0x1],al
   140004285:	add    BYTE PTR [rax],al
   140004287:	add    BYTE PTR [rcx+rcx*4+0x0],dl
   14000428b:	rex add DWORD PTR [rax],eax
   14000428e:	add    BYTE PTR [rax],al
   140004290:	and    al,BYTE PTR [rip+0x61993]        # 0x140065c29
   140004296:	add    BYTE PTR [rax],al
   140004298:	xor    BYTE PTR [rbp+0x20000],ch
   14000429e:	add    BYTE PTR [rax],al
   1400042a0:	(bad)  
   1400042a1:	lods   eax,DWORD PTR ds:[rsi]
   1400042a2:	add    BYTE PTR [rax],al
   1400042a4:	or     al,0x0
   1400042a6:	add    BYTE PTR [rax],al
   1400042a8:	mov    al,0xad
   1400042aa:	add    BYTE PTR [rax],al
   1400042ac:	sub    BYTE PTR [rax],al
	...
   1400042be:	add    BYTE PTR [rax],al
   1400042c0:	and    al,BYTE PTR [rip+0x41993]        # 0x140045c59
   1400042c6:	add    BYTE PTR [rax],al
   1400042c8:	hlt    
   1400042c9:	scas   al,BYTE PTR es:[rdi]
	...
   1400042d2:	add    BYTE PTR [rax],al
   1400042d4:	or     eax,0x14000000
   1400042d9:	scas   eax,DWORD PTR es:[rdi]
   1400042da:	add    BYTE PTR [rax],al
   1400042dc:	add    BYTE PTR [rax],al
	...
   1400042ef:	add    BYTE PTR [rdx],ah
   1400042f1:	add    eax,0x21993
   1400042f6:	add    BYTE PTR [rax],al
   1400042f8:	movabs al,ds:0xaf
   140004301:	add    BYTE PTR [rax],al
   140004303:	add    BYTE PTR [rip+0xffffffffb0000000],al        # 0xf0004309
   140004309:	scas   eax,DWORD PTR es:[rdi]
   14000430a:	add    BYTE PTR [rax],al
   14000430c:	add    BYTE PTR [rax],al
	...
   14000431f:	add    BYTE PTR [rdx],ah
   140004321:	add    eax,0x11993
   140004326:	add    BYTE PTR [rax],al
   140004328:	sub    BYTE PTR [rcx+0x0],dh
   14000432e:	add    BYTE PTR [rax],al
   140004330:	add    BYTE PTR [rax],al
   140004332:	add    BYTE PTR [rax],al
   140004334:	add    eax,DWORD PTR [rax]
   140004336:	add    BYTE PTR [rax],al
   140004338:	mov    ah,0xb0
   14000433a:	add    BYTE PTR [rax],al
   14000433c:	and    BYTE PTR [rax],al
	...
   14000434e:	add    BYTE PTR [rax],al
   140004350:	and    al,BYTE PTR [rip+0x11993]        # 0x140015ce9
   140004356:	add    BYTE PTR [rax],al
   140004358:	sub    BYTE PTR [rcx+0x0],dh
   14000435e:	add    BYTE PTR [rax],al
   140004360:	add    BYTE PTR [rax],al
   140004362:	add    BYTE PTR [rax],al
   140004364:	add    DWORD PTR [rax],eax
   140004366:	add    BYTE PTR [rax],al
   140004368:	loopne 0x14000431a
   14000436a:	add    BYTE PTR [rax],al
   14000436c:	and    BYTE PTR [rax],al
	...
   14000437e:	add    BYTE PTR [rax],al
   140004380:	and    al,BYTE PTR [rip+0x11993]        # 0x140015d19
   140004386:	add    BYTE PTR [rax],al
   140004388:	clc    
   140004389:	mov    al,0x0
	...
   140004393:	add    BYTE PTR [rbx],al
   140004395:	add    BYTE PTR [rax],al
   140004397:	add    BYTE PTR [rax],al
   140004399:	mov    cl,0x0
   14000439b:	add    BYTE PTR [rax],ah
	...
   1400043ad:	add    BYTE PTR [rax],al
   1400043af:	add    BYTE PTR [rdx],ah
   1400043b1:	add    eax,0x11993
   1400043b6:	add    BYTE PTR [rax],al
   1400043b8:	sub    BYTE PTR [rcx+0x0],dh
   1400043be:	add    BYTE PTR [rax],al
   1400043c0:	add    BYTE PTR [rax],al
   1400043c2:	add    BYTE PTR [rax],al
   1400043c4:	add    DWORD PTR [rax],eax
   1400043c6:	add    BYTE PTR [rax],al
   1400043c8:	xor    BYTE PTR [rcx+0x200000],dh
	...
   1400043de:	add    BYTE PTR [rax],al
   1400043e0:	and    al,BYTE PTR [rip+0x11993]        # 0x140015d79
   1400043e6:	add    BYTE PTR [rax],al
   1400043e8:	sub    BYTE PTR [rcx+0x0],dh
   1400043ee:	add    BYTE PTR [rax],al
   1400043f0:	add    BYTE PTR [rax],al
   1400043f2:	add    BYTE PTR [rax],al
   1400043f4:	add    eax,DWORD PTR [rax]
   1400043f6:	add    BYTE PTR [rax],al
   1400043f8:	rex.W mov cl,0x0
   1400043fb:	add    BYTE PTR [rax],ah
	...
   14000440d:	add    BYTE PTR [rax],al
   14000440f:	add    BYTE PTR [rdx],ah
   140004411:	add    eax,0x41993
   140004416:	add    BYTE PTR [rax],al
   140004418:	jo     0x1400043cc
   14000441a:	add    BYTE PTR [rax],al
   14000441c:	add    al,BYTE PTR [rax]
   14000441e:	add    BYTE PTR [rax],al
   140004420:	nop
   140004421:	mov    dl,0x0
   140004423:	add    BYTE PTR [rax],cl
   140004425:	add    BYTE PTR [rax],al
   140004427:	add    al,ah
   140004429:	mov    dl,0x0
   14000442b:	add    BYTE PTR [rax],ah
   14000442d:	add    BYTE PTR [rax],al
   14000442f:	add    BYTE PTR [rax],al
   140004431:	add    BYTE PTR [rax],al
   140004433:	add    BYTE PTR [rcx],al
	...
   14000443d:	add    BYTE PTR [rax],al
   14000443f:	add    BYTE PTR [rdx],ah
   140004441:	add    eax,0x21993
   140004446:	add    BYTE PTR [rax],al
   140004448:	push   0x10000b3
   14000444d:	add    BYTE PTR [rax],al
   14000444f:	add    BYTE PTR [rax-0x4d],bh
   140004452:	add    BYTE PTR [rax],al
   140004454:	add    eax,0xa0000000
   140004459:	mov    bl,0x0
   14000445b:	add    BYTE PTR [rax],ah
   14000445d:	add    BYTE PTR [rax],al
   14000445f:	add    BYTE PTR [rax],al
   140004461:	add    BYTE PTR [rax],al
   140004463:	add    BYTE PTR [rcx],al
	...
   14000446d:	add    BYTE PTR [rax],al
   14000446f:	add    BYTE PTR [rdx],ah
   140004471:	add    eax,0x11993
   140004476:	add    BYTE PTR [rax],al
   140004478:	hlt    
   140004479:	mov    bl,0x0
	...
   140004483:	add    BYTE PTR [rcx],al
   140004485:	add    BYTE PTR [rax],al
   140004487:	add    ah,bh
   140004489:	mov    bl,0x0
   14000448b:	add    BYTE PTR [rax],ah
	...
   14000449d:	add    BYTE PTR [rax],al
   14000449f:	add    BYTE PTR [rdx],ah
   1400044a1:	add    eax,0x11993
   1400044a6:	add    BYTE PTR [rax],al
   1400044a8:	sbb    BYTE PTR [rax+rax*1+0x0],dh
   1400044af:	add    BYTE PTR [rax],al
   1400044b1:	add    BYTE PTR [rax],al
   1400044b3:	add    BYTE PTR [rbx],al
   1400044b5:	add    BYTE PTR [rax],al
   1400044b7:	add    BYTE PTR [rax],ah
   1400044b9:	mov    ah,0x0
   1400044bb:	add    BYTE PTR [rax],ah
   1400044bd:	add    BYTE PTR [rax],al
   1400044bf:	add    BYTE PTR [rax],al
   1400044c1:	add    BYTE PTR [rax],al
   1400044c3:	add    BYTE PTR [rcx],al
	...
   1400044cd:	add    BYTE PTR [rax],al
   1400044cf:	add    BYTE PTR [rdx],ah
   1400044d1:	add    eax,0x11993
   1400044d6:	add    BYTE PTR [rax],al
   1400044d8:	sub    BYTE PTR [rcx+0x0],dh
   1400044de:	add    BYTE PTR [rax],al
   1400044e0:	add    BYTE PTR [rax],al
   1400044e2:	add    BYTE PTR [rax],al
   1400044e4:	add    eax,DWORD PTR [rax]
   1400044e6:	add    BYTE PTR [rax],al
   1400044e8:	rex.WR mov spl,0x0
   1400044eb:	add    BYTE PTR [rax],ah
   1400044ed:	add    BYTE PTR [rax],al
   1400044ef:	add    BYTE PTR [rax],al
   1400044f1:	add    BYTE PTR [rax],al
   1400044f3:	add    BYTE PTR [rcx],al
	...
   1400044fd:	add    BYTE PTR [rax],al
   1400044ff:	add    BYTE PTR [rdx],ah
   140004501:	add    eax,0x11993
   140004506:	add    BYTE PTR [rax],al
   140004508:	sub    BYTE PTR [rcx+0x0],dh
   14000450e:	add    BYTE PTR [rax],al
   140004510:	add    BYTE PTR [rax],al
   140004512:	add    BYTE PTR [rax],al
   140004514:	add    eax,DWORD PTR [rax]
   140004516:	add    BYTE PTR [rax],al
   140004518:	mov    BYTE PTR [rax+rax*1+0x2000],dh
   14000451f:	add    BYTE PTR [rax],al
   140004521:	add    BYTE PTR [rax],al
   140004523:	add    BYTE PTR [rcx],al
	...
   14000452d:	add    BYTE PTR [rax],al
   14000452f:	add    BYTE PTR [rdx],ah
   140004531:	add    eax,0x11993
   140004536:	add    BYTE PTR [rax],al
   140004538:	mov    ah,0xb4
	...
   140004542:	add    BYTE PTR [rax],al
   140004544:	add    eax,DWORD PTR [rax]
   140004546:	add    BYTE PTR [rax],al
   140004548:	mov    esp,0x200000b4
   14000454d:	add    BYTE PTR [rax],al
   14000454f:	add    BYTE PTR [rax],al
   140004551:	add    BYTE PTR [rax],al
   140004553:	add    BYTE PTR [rcx],al
	...
   14000455d:	add    BYTE PTR [rax],al
   14000455f:	add    BYTE PTR [rax+0x0],dh
	...
   1400045b6:	add    BYTE PTR [rax],al
   1400045b8:	mov    al,0xc1
   1400045ba:	add    BYTE PTR [rax+0x1],al
	...
   1400045cd:	add    BYTE PTR [rax],al
   1400045cf:	add    BYTE PTR [rdx+0x53],dl
   1400045d2:	rex.R push rbx
   1400045d4:	jg     0x1400045f0
   1400045d6:	or     al,0x45
   1400045d8:	cdq    
   1400045d9:	(bad)  
   1400045da:	xchg   edi,eax
   1400045db:	rex.WRX add rcx,0x3a8dbab
   1400045e2:	xchg   esp,edi
   1400045e4:	add    DWORD PTR [rax],eax
   1400045e6:	add    BYTE PTR [rax],al
   1400045e8:	jbe    0x14000465d
   1400045ea:	jae    0x140004660
   1400045ec:	jb     0x14000464f
   1400045ee:	movsxd esp,DWORD PTR [rbp+0x2e]
   1400045f1:	jo     0x140004657
   1400045f3:	(bad)  
	...
   140004600:	add    DWORD PTR [rax],eax
   140004602:	add    BYTE PTR [rax],al
   140004604:	adc    BYTE PTR [rsi+0x0],al
	...
   14000460f:	add    BYTE PTR [rax],ah
   140004611:	rex.RX add BYTE PTR [rax],r8b
	...
   140004620:	add    cl,al
	...
   14000462a:	add    BYTE PTR [rax],al
   14000462c:	(bad)  
   14000462d:	(bad)  
   14000462e:	(bad)  
   14000462f:	inc    DWORD PTR [rax]
   140004631:	add    BYTE PTR [rax],al
   140004633:	add    BYTE PTR [rax+0x0],al
   140004636:	add    BYTE PTR [rax],al
   140004638:	clc    
   140004639:	add    BYTE PTR [r8],r8b
	...
   140004648:	add    DWORD PTR [rax],eax
	...
   140004652:	add    BYTE PTR [rax],al
   140004654:	sub    cl,al
   140004656:	add    BYTE PTR [rax],al
   140004658:	jo     0x1400046a0
   14000465a:	add    BYTE PTR [rax],al
   14000465c:	rex.W
   14000465d:	rex.RX add BYTE PTR [rax],r8b
	...
   140004678:	add    eax,DWORD PTR [rax]
   14000467a:	add    BYTE PTR [rax],al
   14000467c:	mov    BYTE PTR [rsi+0x0],al
	...
   140004687:	add    BYTE PTR [rax-0x2fffffba],ch
   14000468d:	rex.RX add BYTE PTR [rax],r8b
   140004690:	and    BYTE PTR [rsi+0x0],al
	...
   1400046a7:	add    BYTE PTR [rax],ch
   1400046a9:	rol    DWORD PTR [rax],0x0
   1400046ac:	add    al,BYTE PTR [rax]
   1400046ae:	add    BYTE PTR [rax],al
   1400046b0:	add    BYTE PTR [rax],al
   1400046b2:	add    BYTE PTR [rax],al
   1400046b4:	(bad)  
   1400046b5:	(bad)  
   1400046b6:	(bad)  
   1400046b7:	inc    DWORD PTR [rax]
   1400046b9:	add    BYTE PTR [rax],al
   1400046bb:	add    BYTE PTR [rax+0x0],al
   1400046be:	add    BYTE PTR [rax],al
   1400046c0:	jo     0x140004708
	...
   1400046ce:	add    BYTE PTR [rax],al
   1400046d0:	pop    rax
   1400046d1:	rol    DWORD PTR [rax],0x0
   1400046d4:	add    DWORD PTR [rax],eax
   1400046d6:	add    BYTE PTR [rax],al
   1400046d8:	add    BYTE PTR [rax],al
   1400046da:	add    BYTE PTR [rax],al
   1400046dc:	(bad)  
   1400046dd:	(bad)  
   1400046de:	(bad)  
   1400046df:	inc    DWORD PTR [rax]
   1400046e1:	add    BYTE PTR [rax],al
   1400046e3:	add    BYTE PTR [rax+0x0],al
   1400046e6:	add    BYTE PTR [rax],al
   1400046e8:	clc    
   1400046e9:	rex.RX add BYTE PTR [rax],r8b
	...
   140004700:	add    al,BYTE PTR [rax]
   140004702:	add    BYTE PTR [rax],al
   140004704:	adc    BYTE PTR [rdi+0x0],al
	...
   14000470f:	add    al,dl
   140004711:	rex.RX add BYTE PTR [rax],r8b
   140004714:	and    BYTE PTR [rsi+0x0],al
	...
   14000472f:	add    BYTE PTR [rcx],al
   140004731:	add    BYTE PTR [rax],al
   140004733:	add    BYTE PTR [rax+0x47],ch
   140004739:	add    BYTE PTR [rax],al
   14000473b:	add    BYTE PTR [rax],al
   14000473d:	add    BYTE PTR [rax],al
   14000473f:	add    BYTE PTR [rax+0x47],bl
   140004742:	add    BYTE PTR [rax],al
   140004744:	add    BYTE PTR [rdi+0x0],0x0
	...
   140004758:	or     al,0x0
   14000475b:	add    BYTE PTR [rcx],al
   14000475d:	add    BYTE PTR [rax],al
   14000475f:	add    BYTE PTR [rax],al
   140004761:	add    BYTE PTR [rax],al
   140004763:	add    bh,bh
   140004765:	(bad)  
   140004766:	(bad)  
   140004767:	inc    DWORD PTR [rax]
   140004769:	add    BYTE PTR [rax],al
   14000476b:	add    BYTE PTR [rax+0x0],al
   14000476e:	add    BYTE PTR [rax],al
   140004770:	mov    eax,0x47
	...
   14000477d:	add    BYTE PTR [rax],al
   14000477f:	add    BYTE PTR [rax-0x38],ah
	...
   14000478a:	add    BYTE PTR [rax],al
   14000478c:	(bad)  
   14000478d:	(bad)  
   14000478e:	(bad)  
   14000478f:	inc    DWORD PTR [rax]
   140004791:	add    BYTE PTR [rax],al
   140004793:	add    BYTE PTR [rax+0x0],al
   140004796:	add    BYTE PTR [rax],al
   140004798:	sub    BYTE PTR [rdi+0x0],al
	...
   1400047a7:	add    BYTE PTR [rax+0x47],al
	...
   1400047bd:	add    BYTE PTR [rax],al
   1400047bf:	add    BYTE PTR [rdx],al
   1400047c1:	add    BYTE PTR [rax],al
   1400047c3:	add    BYTE PTR [rax+0x47],al
	...
   1400047ce:	add    BYTE PTR [rax],al
   1400047d0:	add    DWORD PTR [rax],eax
	...
   1400047da:	add    BYTE PTR [rax],al
   1400047dc:	or     al,0x0
   1400047df:	add    BYTE PTR [rax-0x2fffffb9],bh
   1400047e5:	rex.RXB add BYTE PTR [r8],r8b
	...
   140004808:	xor    r11d,r11d
   14000480b:	mov    r9d,r11d
   14000480e:	test   rdx,rdx
   140004811:	je     0x14000481c
   140004813:	cmp    rdx,0x7fffffff
   14000481a:	jbe    0x140004822
   14000481c:	mov    r9d,0x80070057
   140004822:	test   r9d,r9d
   140004825:	js     0x14000486b
   140004827:	mov    r9d,r11d
   14000482a:	test   rdx,rdx
   14000482d:	je     0x14000485f
   14000482f:	mov    r10d,0x7ffffffe
   140004835:	sub    r10,rdx
   140004838:	sub    r8,rcx
   14000483b:	lea    rax,[r10+rdx*1]
   14000483f:	test   rax,rax
   140004842:	je     0x14000485a
   140004844:	movzx  eax,WORD PTR [r8+rcx*1]
   140004849:	test   ax,ax
   14000484c:	je     0x14000485a
   14000484e:	mov    WORD PTR [rcx],ax
   140004851:	add    rcx,0x2
   140004855:	dec    rdx
   140004858:	jne    0x14000483b
   14000485a:	test   rdx,rdx
   14000485d:	jne    0x140004870
   14000485f:	sub    rcx,0x2
   140004863:	mov    r9d,0x8007007a
   140004869:	jmp    0x140004870
   14000486b:	test   rdx,rdx
   14000486e:	je     0x140004874
   140004870:	mov    WORD PTR [rcx],r11w
   140004874:	mov    eax,r9d
   140004877:	ret    
   140004878:	int3   
   140004879:	int3   
   14000487a:	int3   
   14000487b:	int3   
   14000487c:	int3   
   14000487d:	int3   
   14000487e:	int3   
   14000487f:	int3   
   140004880:	mov    QWORD PTR [rsp+0x8],rbx
   140004885:	mov    QWORD PTR [rsp+0x10],rdi
   14000488a:	mov    r10,rdx
   14000488d:	xor    edi,edi
   14000488f:	mov    rbx,r8
   140004892:	mov    r11,rcx
   140004895:	mov    edx,0x80070057
   14000489a:	mov    r9d,edi
   14000489d:	test   r10,r10
   1400048a0:	je     0x1400048ab
   1400048a2:	cmp    r10,0x7fffffff
   1400048a9:	jbe    0x1400048ae
   1400048ab:	mov    r9d,edx
   1400048ae:	test   r9d,r9d
   1400048b1:	js     0x1400048dc
   1400048b3:	mov    rax,r10
   1400048b6:	mov    r9d,edi
   1400048b9:	test   r10,r10
   1400048bc:	je     0x1400048d9
   1400048be:	cmp    WORD PTR [rcx],di
   1400048c1:	je     0x1400048cc
   1400048c3:	add    rcx,0x2
   1400048c7:	dec    rax
   1400048ca:	jne    0x1400048be
   1400048cc:	test   rax,rax
   1400048cf:	je     0x1400048d9
   1400048d1:	mov    r8,r10
   1400048d4:	sub    r8,rax
   1400048d7:	jmp    0x1400048df
   1400048d9:	mov    r9d,edx
   1400048dc:	mov    r8,rdi
   1400048df:	test   r9d,r9d
   1400048e2:	js     0x140004935
   1400048e4:	mov    rdx,r10
   1400048e7:	lea    rcx,[r11+r8*2]
   1400048eb:	mov    r9d,edi
   1400048ee:	sub    rdx,r8
   1400048f1:	je     0x140004928
   1400048f3:	mov    rax,rdx
   1400048f6:	sub    rax,r10
   1400048f9:	lea    r10,[r8+0x7ffffffe]
   140004900:	add    r10,rax
   140004903:	sub    rbx,rcx
   140004906:	test   r10,r10
   140004909:	je     0x140004923
   14000490b:	movzx  eax,WORD PTR [rbx+rcx*1]
   14000490f:	test   ax,ax
   140004912:	je     0x140004923
   140004914:	mov    WORD PTR [rcx],ax
   140004917:	dec    r10
   14000491a:	add    rcx,0x2
   14000491e:	dec    rdx
   140004921:	jne    0x140004906
   140004923:	test   rdx,rdx
   140004926:	jne    0x140004932
   140004928:	sub    rcx,0x2
   14000492c:	mov    r9d,0x8007007a
   140004932:	mov    WORD PTR [rcx],di
   140004935:	mov    rbx,QWORD PTR [rsp+0x8]
   14000493a:	mov    rdi,QWORD PTR [rsp+0x10]
   14000493f:	mov    eax,r9d
   140004942:	ret    
   140004943:	int3   
   140004944:	int3   
   140004945:	int3   
   140004946:	int3   
   140004947:	int3   
   140004948:	int3   
   140004949:	int3   
   14000494a:	int3   
   14000494b:	int3   
   14000494c:	mov    QWORD PTR [rsp+0x18],r8
   140004951:	mov    QWORD PTR [rsp+0x20],r9
   140004956:	push   rbx
   140004957:	push   rbp
   140004958:	push   rsi
   140004959:	push   rdi
   14000495a:	sub    rsp,0x28
   14000495e:	xor    ebp,ebp
   140004960:	mov    rsi,rcx
   140004963:	mov    ebx,ebp
   140004965:	test   rdx,rdx
   140004968:	je     0x140004973
   14000496a:	cmp    rdx,0x7fffffff
   140004971:	jbe    0x140004978
   140004973:	mov    ebx,0x80070057
   140004978:	test   ebx,ebx
   14000497a:	js     0x1400049ae
   14000497c:	lea    rdi,[rdx-0x1]
   140004980:	lea    r9,[rsp+0x68]
   140004985:	mov    ebx,ebp
   140004987:	mov    rdx,rdi
   14000498a:	call   QWORD PTR [rip+0xddb0]        # 0x140012740
   140004990:	test   eax,eax
   140004992:	js     0x1400049a3
   140004994:	cdqe   
   140004996:	cmp    rax,rdi
   140004999:	ja     0x1400049a3
   14000499b:	jne    0x1400049b6
   14000499d:	mov    WORD PTR [rsi+rdi*2],bp
   1400049a1:	jmp    0x1400049b6
   1400049a3:	mov    WORD PTR [rsi+rdi*2],bp
   1400049a7:	mov    ebx,0x8007007a
   1400049ac:	jmp    0x1400049b6
   1400049ae:	test   rdx,rdx
   1400049b1:	je     0x1400049b6
   1400049b3:	mov    WORD PTR [rcx],bp
   1400049b6:	mov    eax,ebx
   1400049b8:	add    rsp,0x28
   1400049bc:	pop    rdi
   1400049bd:	pop    rsi
   1400049be:	pop    rbp
   1400049bf:	pop    rbx
   1400049c0:	ret    
   1400049c1:	int3   
   1400049c2:	int3   
   1400049c3:	int3   
   1400049c4:	int3   
   1400049c5:	int3   
   1400049c6:	int3   
   1400049c7:	int3   
   1400049c8:	mov    rax,rsp
   1400049cb:	mov    QWORD PTR [rax+0x10],rdx
   1400049cf:	mov    QWORD PTR [rax+0x8],rcx
   1400049d3:	push   rbx
   1400049d4:	sub    rsp,0x30
   1400049d8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400049e0:	mov    rbx,rcx
   1400049e3:	lea    rdx,[rax+0x10]
   1400049e7:	call   QWORD PTR [rip+0xdd3b]        # 0x140012728
   1400049ed:	nop
   1400049ee:	lea    rax,[rip+0xfffffffffffff2ab]        # 0x140003ca0
   1400049f5:	mov    QWORD PTR [rbx],rax
   1400049f8:	mov    rax,rbx
   1400049fb:	add    rsp,0x30
   1400049ff:	pop    rbx
   140004a00:	ret    
   140004a01:	int3   
   140004a02:	int3   
   140004a03:	int3   
   140004a04:	int3   
   140004a05:	int3   
   140004a06:	int3   
   140004a07:	int3   
   140004a08:	mov    QWORD PTR [rsp+0x8],rcx
   140004a0d:	sub    rsp,0x38
   140004a11:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004a1a:	lea    rax,[rip+0xfffffffffffff27f]        # 0x140003ca0
   140004a21:	mov    QWORD PTR [rcx],rax
   140004a24:	add    rsp,0x38
   140004a28:	rex.W jmp QWORD PTR [rip+0xdd01]        # 0x140012730
   140004a2f:	int3   
   140004a30:	int3   
   140004a31:	int3   
   140004a32:	int3   
   140004a33:	int3   
   140004a34:	int3   
   140004a35:	int3   
   140004a36:	int3   
   140004a37:	int3   
   140004a38:	sub    rsp,0x48
   140004a3c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004a45:	mov    rdx,rcx
   140004a48:	lea    rcx,[rsp+0x28]
   140004a4d:	call   QWORD PTR [rip+0xdccd]        # 0x140012720
   140004a53:	nop
   140004a54:	lea    rax,[rip+0xfffffffffffff245]        # 0x140003ca0
   140004a5b:	mov    QWORD PTR [rsp+0x28],rax
   140004a60:	lea    rdx,[rip+0x6b49]        # 0x14000b5b0
   140004a67:	lea    rcx,[rsp+0x28]
   140004a6c:	call   0x140009bd6
   140004a71:	int3   
   140004a72:	int3   
   140004a73:	int3   
   140004a74:	int3   
   140004a75:	int3   
   140004a76:	int3   
   140004a77:	int3   
   140004a78:	mov    QWORD PTR [rsp+0x8],rcx
   140004a7d:	push   rdi
   140004a7e:	sub    rsp,0x30
   140004a82:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004a8b:	mov    QWORD PTR [rsp+0x48],rbx
   140004a90:	mov    ebx,edx
   140004a92:	mov    rdi,rcx
   140004a95:	lea    rax,[rip+0xfffffffffffff204]        # 0x140003ca0
   140004a9c:	mov    QWORD PTR [rcx],rax
   140004a9f:	call   QWORD PTR [rip+0xdc8b]        # 0x140012730
   140004aa5:	test   bl,0x1
   140004aa8:	je     0x140004ab3
   140004aaa:	mov    rcx,rdi
   140004aad:	call   QWORD PTR [rip+0xdaad]        # 0x140012560
   140004ab3:	mov    rax,rdi
   140004ab6:	mov    rbx,QWORD PTR [rsp+0x48]
   140004abb:	add    rsp,0x30
   140004abf:	pop    rdi
   140004ac0:	ret    
   140004ac1:	int3   
   140004ac2:	int3   
   140004ac3:	int3   
   140004ac4:	int3   
   140004ac5:	int3   
   140004ac6:	int3   
   140004ac7:	int3   
   140004ac8:	mov    QWORD PTR [rsp+0x8],rcx
   140004acd:	push   rbx
   140004ace:	sub    rsp,0x30
   140004ad2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004adb:	mov    rbx,rcx
   140004ade:	call   QWORD PTR [rip+0xdc3c]        # 0x140012720
   140004ae4:	nop
   140004ae5:	lea    rax,[rip+0xfffffffffffff1b4]        # 0x140003ca0
   140004aec:	mov    QWORD PTR [rbx],rax
   140004aef:	mov    rax,rbx
   140004af2:	add    rsp,0x30
   140004af6:	pop    rbx
   140004af7:	ret    
   140004af8:	int3   
   140004af9:	int3   
   140004afa:	int3   
   140004afb:	int3   
   140004afc:	int3   
   140004afd:	int3   
   140004afe:	int3   
   140004aff:	int3   
   140004b00:	sub    rsp,0x28
   140004b04:	call   0x1400055a4
   140004b09:	xor    eax,eax
   140004b0b:	add    rsp,0x28
   140004b0f:	ret    
   140004b10:	int3   
   140004b11:	int3   
   140004b12:	int3   
   140004b13:	int3   
   140004b14:	int3   
   140004b15:	int3   
   140004b16:	int3   
   140004b17:	int3   
   140004b18:	mov    rax,rsp
   140004b1b:	mov    QWORD PTR [rax+0x8],rbx
   140004b1f:	mov    QWORD PTR [rax+0x10],rsi
   140004b23:	mov    QWORD PTR [rax+0x18],rdi
   140004b27:	push   rbp
   140004b28:	push   r12
   140004b2a:	push   r13
   140004b2c:	push   r14
   140004b2e:	push   r15
   140004b30:	lea    rbp,[rax-0x448]
   140004b37:	sub    rsp,0x520
   140004b3e:	mov    rax,QWORD PTR [rip+0x766b]        # 0x14000c1b0
   140004b45:	xor    rax,rsp
   140004b48:	mov    QWORD PTR [rbp+0x410],rax
   140004b4f:	xor    edi,edi
   140004b51:	cmp    WORD PTR [rip+0xa4e8],di        # 0x14000f040
   140004b58:	je     0x140004b8d
   140004b5a:	lea    rdx,[rip+0xffffffffffffd3f3]        # 0x140001f54
   140004b61:	lea    rcx,[rip+0xa4d8]        # 0x14000f040
   140004b68:	call   QWORD PTR [rip+0xdada]        # 0x140012648
   140004b6e:	mov    QWORD PTR [rip+0xa493],rax        # 0x14000f008
   140004b75:	test   rax,rax
   140004b78:	jne    0x140004b8d
   140004b7a:	lea    rdx,[rip+0xa4bf]        # 0x14000f040
   140004b81:	lea    rcx,[rip+0xffffffffffffd3d8]        # 0x140001f60
   140004b88:	call   0x1400068c4
   140004b8d:	call   0x140005868
   140004b92:	mov    ebx,0x478
   140004b97:	lea    rcx,[rbp-0x70]
   140004b9b:	mov    r8d,ebx
   140004b9e:	xor    edx,edx
   140004ba0:	call   0x14000a286
   140004ba5:	lea    rdx,[rip+0xffffffffffffc614]        # 0x1400011c0
   140004bac:	lea    rax,[rbp+0x8]
   140004bb0:	movups xmm5,XMMWORD PTR [rip+0xfffffffffffff111]        # 0x140003cc8
   140004bb7:	mov    DWORD PTR [rbp-0x70],ebx
   140004bba:	mov    DWORD PTR [rbp-0x44],0x120000
   140004bc1:	mov    DWORD PTR [rbp-0x48],0x1
   140004bc8:	movups XMMWORD PTR [rbp-0x58],xmm5
   140004bcc:	mov    DWORD PTR [rbp+0x4],0x78
   140004bd3:	lea    r8d,[rbx-0x78]
   140004bd7:	lea    rcx,[rbp+0x8]
   140004bdb:	sub    rdx,rax
   140004bde:	lea    rax,[r8+0x7ffffbfe]
   140004be5:	test   rax,rax
   140004be8:	je     0x140004bff
   140004bea:	movzx  eax,WORD PTR [rdx+rcx*1]
   140004bee:	test   ax,ax
   140004bf1:	je     0x140004bff
   140004bf3:	mov    WORD PTR [rcx],ax
   140004bf6:	add    rcx,0x2
   140004bfa:	dec    r8
   140004bfd:	jne    0x140004bde
   140004bff:	test   r8,r8
   140004c02:	jne    0x140004c08
   140004c04:	sub    rcx,0x2
   140004c08:	mov    WORD PTR [rcx],di
   140004c0b:	lea    r8,[rbp-0x70]
   140004c0f:	lea    rdx,[rip+0xffffffffffffc5aa]        # 0x1400011c0
   140004c16:	lea    rcx,[rsp+0x70]
   140004c1b:	mov    DWORD PTR [rbp-0x40],0x40
   140004c22:	mov    DWORD PTR [rbp-0x30],0x1000100
   140004c29:	mov    DWORD PTR [rbp-0x2c],0x5
   140004c30:	mov    DWORD PTR [rbp-0x24],0xf
   140004c37:	mov    QWORD PTR [rsp+0x70],rdi
   140004c3c:	call   QWORD PTR [rip+0xd80e]        # 0x140012450
   140004c42:	test   eax,eax
   140004c44:	je     0x140004c5b
   140004c46:	lea    rcx,[rip+0xffffffffffffd383]        # 0x140001fd0
   140004c4d:	mov    edx,eax
   140004c4f:	call   0x1400068c4
   140004c54:	xor    eax,eax
   140004c56:	jmp    0x140004d7c
   140004c5b:	lea    rcx,[rip+0xffffffffffffd3ae]        # 0x140002010
   140004c62:	call   0x1400068c4
   140004c67:	mov    r13d,DWORD PTR [rip+0xa3a6]        # 0x14000f014
   140004c6e:	mov    r12d,DWORD PTR [rip+0x75f3]        # 0x14000c268
   140004c75:	movups xmm5,XMMWORD PTR [rip+0xfffffffffffff04c]        # 0x140003cc8
   140004c7c:	mov    DWORD PTR [rsp+0x68],r13d
   140004c81:	mov    DWORD PTR [rsp+0x60],r12d
   140004c86:	movdqu XMMWORD PTR [rsp+0x78],xmm5
   140004c8c:	mov    rdx,QWORD PTR [rbp-0x80]
   140004c90:	mov    rax,rdx
   140004c93:	mov    r15,rdx
   140004c96:	movzx  r10d,dl
   140004c9a:	shr    rax,0x30
   140004c9e:	shr    r15,0x38
   140004ca2:	movzx  r14d,al
   140004ca6:	mov    DWORD PTR [rsp+0x58],r15d
   140004cab:	mov    rax,rdx
   140004cae:	shr    rax,0x28
   140004cb2:	mov    DWORD PTR [rsp+0x50],r14d
   140004cb7:	movzx  esi,al
   140004cba:	mov    rax,rdx
   140004cbd:	shr    rax,0x20
   140004cc1:	mov    DWORD PTR [rsp+0x48],esi
   140004cc5:	movzx  edi,al
   140004cc8:	mov    rax,rdx
   140004ccb:	shr    rax,0x18
   140004ccf:	mov    DWORD PTR [rsp+0x40],edi
   140004cd3:	movzx  ebx,al
   140004cd6:	mov    rax,rdx
   140004cd9:	shr    rax,0x10
   140004cdd:	mov    DWORD PTR [rsp+0x38],ebx
   140004ce1:	movzx  r11d,al
   140004ce5:	mov    rax,rdx
   140004ce8:	mov    rdx,QWORD PTR [rsp+0x78]
   140004ced:	shr    rax,0x8
   140004cf1:	mov    DWORD PTR [rsp+0x30],r11d
   140004cf6:	mov    r9,rdx
   140004cf9:	movzx  ecx,al
   140004cfc:	mov    rax,rdx
   140004cff:	shr    r9,0x30
   140004d03:	mov    DWORD PTR [rsp+0x28],ecx
   140004d07:	shr    rax,0x20
   140004d0b:	lea    rcx,[rip+0xffffffffffffd34e]        # 0x140002060
   140004d12:	movzx  r8d,ax
   140004d16:	mov    DWORD PTR [rsp+0x20],r10d
   140004d1b:	call   0x1400068c4
   140004d20:	mov    r11,QWORD PTR [rsp+0x70]
   140004d25:	lea    r9,[rsp+0x78]
   140004d2a:	mov    r8d,r12d
   140004d2d:	mov    edx,r13d
   140004d30:	mov    ecx,0x1
   140004d35:	mov    QWORD PTR [rsp+0x20],r11
   140004d3a:	call   QWORD PTR [rip+0xd6e0]        # 0x140012420
   140004d40:	test   eax,eax
   140004d42:	jne    0x140004c46
   140004d48:	lea    rcx,[rip+0x196d]        # 0x1400066bc
   140004d4f:	lea    edx,[rax+0x1]
   140004d52:	mov    QWORD PTR [rip+0xa717],rcx        # 0x14000f470
   140004d59:	call   QWORD PTR [rip+0xd789]        # 0x1400124e8
   140004d5f:	test   eax,eax
   140004d61:	jne    0x140004d77
   140004d63:	call   QWORD PTR [rip+0xd78f]        # 0x1400124f8
   140004d69:	lea    rcx,[rip+0xffffffffffffe630]        # 0x1400033a0
   140004d70:	mov    edx,eax
   140004d72:	call   0x1400068c4
   140004d77:	mov    eax,0x1
   140004d7c:	mov    rcx,QWORD PTR [rbp+0x410]
   140004d83:	xor    rcx,rsp
   140004d86:	call   0x140009a90
   140004d8b:	lea    r11,[rsp+0x520]
   140004d93:	mov    rbx,QWORD PTR [r11+0x30]
   140004d97:	mov    rsi,QWORD PTR [r11+0x38]
   140004d9b:	mov    rdi,QWORD PTR [r11+0x40]
   140004d9f:	mov    rsp,r11
   140004da2:	pop    r15
   140004da4:	pop    r14
   140004da6:	pop    r13
   140004da8:	pop    r12
   140004daa:	pop    rbp
   140004dab:	ret    
   140004dac:	int3   
   140004dad:	int3   
   140004dae:	int3   
   140004daf:	int3   
   140004db0:	int3   
   140004db1:	int3   
   140004db2:	int3   
   140004db3:	int3   
   140004db4:	mov    eax,0x1
   140004db9:	add    DWORD PTR [rip+0xb629],eax        # 0x1400103e8
   140004dbf:	ret    
   140004dc0:	int3   
   140004dc1:	int3   
   140004dc2:	int3   
   140004dc3:	int3   
   140004dc4:	int3   
   140004dc5:	int3   
   140004dc6:	int3   
   140004dc7:	int3   
   140004dc8:	ret    0x0
   140004dcb:	int3   
   140004dcc:	int3   
   140004dcd:	int3   
   140004dce:	int3   
   140004dcf:	int3   
   140004dd0:	int3   
   140004dd1:	int3   
   140004dd2:	int3   
   140004dd3:	int3   
   140004dd4:	rex push rbx
   140004dd6:	sub    rsp,0x30
   140004dda:	inc    QWORD PTR [rip+0xa237]        # 0x14000f018
   140004de1:	mov    rbx,rcx
   140004de4:	test   rcx,rcx
   140004de7:	jne    0x140004dfa
   140004de9:	lea    rcx,[rip+0xffffffffffffd340]        # 0x140002130
   140004df0:	add    rsp,0x30
   140004df4:	pop    rbx
   140004df5:	jmp    0x1400067f8
   140004dfa:	cmp    BYTE PTR [rip+0xa210],0x0        # 0x14000f011
   140004e01:	jne    0x140004e15
   140004e03:	mov    rax,QWORD PTR [rcx+0x10]
   140004e07:	mov    BYTE PTR [rip+0xa203],0x1        # 0x14000f011
   140004e0e:	mov    QWORD PTR [rip+0xa213],rax        # 0x14000f028
   140004e15:	movups xmm0,XMMWORD PTR [rcx+0x18]
   140004e19:	mov    rax,QWORD PTR [rcx+0x10]
   140004e1d:	movzx  edx,BYTE PTR [rcx+0x4]
   140004e21:	mov    r9b,BYTE PTR [rcx+0x5]
   140004e25:	movzx  r8d,WORD PTR [rcx+0x6]
   140004e2a:	lea    rcx,[rsp+0x20]
   140004e2f:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   140004e35:	mov    QWORD PTR [rip+0xa1e4],rax        # 0x14000f020
   140004e3c:	call   0x140007054
   140004e41:	test   rax,rax
   140004e44:	jne    0x140004e4f
   140004e46:	lea    rcx,[rip+0xffffffffffffd313]        # 0x140002160
   140004e4d:	jmp    0x140004df0
   140004e4f:	inc    DWORD PTR [rax+0x18]
   140004e52:	cmp    BYTE PTR [rip+0xa1b7],0x1        # 0x14000f010
   140004e59:	jne    0x140004e64
   140004e5b:	lea    rcx,[rip+0xffffffffffffd346]        # 0x1400021a8
   140004e62:	jmp    0x140004df0
   140004e64:	mov    rdx,rax
   140004e67:	mov    rcx,rbx
   140004e6a:	add    rsp,0x30
   140004e6e:	pop    rbx
   140004e6f:	jmp    0x140005f40
   140004e74:	int3   
   140004e75:	int3   
   140004e76:	int3   
   140004e77:	int3   
   140004e78:	int3   
   140004e79:	int3   
   140004e7a:	int3   
   140004e7b:	int3   
   140004e7c:	mov    QWORD PTR [rsp+0x10],rbx
   140004e81:	mov    DWORD PTR [rsp+0x8],ecx
   140004e85:	push   rbp
   140004e86:	push   rsi
   140004e87:	push   rdi
   140004e88:	push   r12
   140004e8a:	push   r13
   140004e8c:	push   r14
   140004e8e:	push   r15
   140004e90:	mov    rbp,rsp
   140004e93:	sub    rsp,0x80
   140004e9a:	movsxd rax,ecx
   140004e9d:	mov    ecx,0xfff
   140004ea2:	xor    ebx,ebx
   140004ea4:	mov    r12,rdx
   140004ea7:	mov    DWORD PTR [rip+0x73b7],0xaa        # 0x14000c268
   140004eb1:	mov    DWORD PTR [rip+0xa15d],ecx        # 0x14000f014
   140004eb7:	test   eax,eax
   140004eb9:	jne    0x140004ec2
   140004ebb:	mov    al,0x1
   140004ebd:	jmp    0x140005484
   140004ec2:	mov    esi,ebx
   140004ec4:	mov    r15,rbx
   140004ec7:	mov    QWORD PTR [rbp-0x20],rax
   140004ecb:	mov    edi,0x1
   140004ed0:	test   rax,rax
   140004ed3:	jle    0x140005481
   140004ed9:	mov    r14,QWORD PTR [r12+r15*8]
   140004edd:	lea    rcx,[rip+0xaf80]        # 0x14000fe64
   140004ee4:	mov    r8d,0x23
   140004eea:	mov    BYTE PTR [rbp+0x50],bl
   140004eed:	mov    eax,ebx
   140004eef:	mov    DWORD PTR [rbp+0x58],ebx
   140004ef2:	mov    QWORD PTR [rbp-0x18],rcx
   140004ef6:	cdqe   
   140004ef8:	lea    rdx,[rip+0xaf53]        # 0x14000fe52
   140004eff:	imul   rax,rax,0x58
   140004f03:	add    rax,rdx
   140004f06:	mov    edx,r8d
   140004f09:	mov    QWORD PTR [rbp-0x10],rax
   140004f0d:	mov    eax,DWORD PTR [rcx]
   140004f0f:	mov    rcx,r14
   140004f12:	mov    DWORD PTR [rbp-0x30],eax
   140004f15:	call   QWORD PTR [rip+0xd6fd]        # 0x140012618
   140004f1b:	mov    r13,rax
   140004f1e:	test   rax,rax
   140004f21:	je     0x140004f2a
   140004f23:	mov    WORD PTR [rax],bx
   140004f26:	add    r13,0x2
   140004f2a:	mov    rdx,QWORD PTR [rbp-0x10]
   140004f2e:	lea    r8,[rbp+0x50]
   140004f32:	mov    rcx,r14
   140004f35:	call   0x14000556c
   140004f3a:	test   al,al
   140004f3c:	jne    0x140005386
   140004f42:	mov    r8d,0x23
   140004f48:	test   r13,r13
   140004f4b:	je     0x140004f52
   140004f4d:	mov    WORD PTR [r13-0x2],r8w
   140004f52:	mov    eax,DWORD PTR [rbp+0x58]
   140004f55:	mov    rcx,QWORD PTR [rbp-0x18]
   140004f59:	add    eax,edi
   140004f5b:	add    rcx,0x58
   140004f5f:	mov    DWORD PTR [rbp+0x58],eax
   140004f62:	mov    QWORD PTR [rbp-0x18],rcx
   140004f66:	cmp    eax,0x11
   140004f69:	jl     0x140004ef6
   140004f6b:	lea    r8,[rbp+0x50]
   140004f6f:	lea    rdx,[rip+0xffffffffffffd262]        # 0x1400021d8
   140004f76:	mov    rcx,r14
   140004f79:	call   0x14000556c
   140004f7e:	test   al,al
   140004f80:	je     0x140004f90
   140004f82:	mov    al,BYTE PTR [rbp+0x50]
   140004f85:	mov    BYTE PTR [rip+0xa088],al        # 0x14000f013
   140004f8b:	jmp    0x14000545c
   140004f90:	lea    rdx,[rip+0xffffffffffffd251]        # 0x1400021e8
   140004f97:	mov    rcx,r14
   140004f9a:	call   QWORD PTR [rip+0xd668]        # 0x140012608
   140004fa0:	test   eax,eax
   140004fa2:	je     0x14000533b
   140004fa8:	lea    rdx,[rip+0xffffffffffffd241]        # 0x1400021f0
   140004faf:	mov    rcx,r14
   140004fb2:	call   QWORD PTR [rip+0xd650]        # 0x140012608
   140004fb8:	test   eax,eax
   140004fba:	je     0x14000533b
   140004fc0:	lea    rdx,[rip+0xffffffffffffd231]        # 0x1400021f8
   140004fc7:	mov    rcx,r14
   140004fca:	call   QWORD PTR [rip+0xd638]        # 0x140012608
   140004fd0:	test   eax,eax
   140004fd2:	je     0x1400052e4
   140004fd8:	lea    rdx,[rip+0xffffffffffffd221]        # 0x140002200
   140004fdf:	mov    rcx,r14
   140004fe2:	call   QWORD PTR [rip+0xd620]        # 0x140012608
   140004fe8:	test   eax,eax
   140004fea:	je     0x1400052e4
   140004ff0:	lea    rdx,[rip+0xffffffffffffd261]        # 0x140002258
   140004ff7:	mov    rcx,r14
   140004ffa:	call   QWORD PTR [rip+0xd608]        # 0x140012608
   140005000:	test   eax,eax
   140005002:	je     0x14000529b
   140005008:	lea    rdx,[rip+0xffffffffffffd251]        # 0x140002260
   14000500f:	mov    rcx,r14
   140005012:	call   QWORD PTR [rip+0xd5f0]        # 0x140012608
   140005018:	test   eax,eax
   14000501a:	je     0x14000529b
   140005020:	lea    rdx,[rip+0xffffffffffffd2e1]        # 0x140002308
   140005027:	mov    rcx,r14
   14000502a:	call   QWORD PTR [rip+0xd5d8]        # 0x140012608
   140005030:	test   eax,eax
   140005032:	je     0x140005249
   140005038:	lea    rdx,[rip+0xffffffffffffd2d9]        # 0x140002318
   14000503f:	mov    rcx,r14
   140005042:	call   QWORD PTR [rip+0xd5c0]        # 0x140012608
   140005048:	test   eax,eax
   14000504a:	je     0x140005249
   140005050:	lea    rdx,[rip+0xffffffffffffd2d1]        # 0x140002328
   140005057:	mov    rcx,r14
   14000505a:	call   QWORD PTR [rip+0xd5a8]        # 0x140012608
   140005060:	test   eax,eax
   140005062:	je     0x140005535
   140005068:	lea    rdx,[rip+0xffffffffffffd2c9]        # 0x140002338
   14000506f:	mov    rcx,r14
   140005072:	call   QWORD PTR [rip+0xd590]        # 0x140012608
   140005078:	test   eax,eax
   14000507a:	je     0x140005535
   140005080:	lea    r13,[rip+0xffffffffffffd2c1]        # 0x140002348
   140005087:	lea    r8,[rbp+0x50]
   14000508b:	mov    rcx,r14
   14000508e:	mov    rdx,r13
   140005091:	call   0x14000556c
   140005096:	test   al,al
   140005098:	jne    0x14000513b
   14000509e:	lea    r8,[rbp+0x50]
   1400050a2:	lea    rdx,[rip+0xffffffffffffd2a7]        # 0x140002350
   1400050a9:	mov    rcx,r14
   1400050ac:	call   0x14000556c
   1400050b1:	test   al,al
   1400050b3:	jne    0x14000513b
   1400050b9:	lea    rdx,[rip+0xffffffffffffd320]        # 0x1400023e0
   1400050c0:	mov    rcx,r14
   1400050c3:	call   QWORD PTR [rip+0xd53f]        # 0x140012608
   1400050c9:	test   eax,eax
   1400050cb:	je     0x14000510d
   1400050cd:	lea    rdx,[rip+0xffffffffffffd31c]        # 0x1400023f0
   1400050d4:	mov    rcx,r14
   1400050d7:	call   QWORD PTR [rip+0xd52b]        # 0x140012608
   1400050dd:	test   eax,eax
   1400050df:	je     0x14000510d
   1400050e1:	lea    rdx,[rip+0xffffffffffffd314]        # 0x1400023fc
   1400050e8:	mov    rcx,r14
   1400050eb:	call   QWORD PTR [rip+0xd517]        # 0x140012608
   1400050f1:	test   eax,eax
   1400050f3:	je     0x14000510d
   1400050f5:	lea    rdx,[rip+0xffffffffffffd308]        # 0x140002404
   1400050fc:	mov    rcx,r14
   1400050ff:	call   QWORD PTR [rip+0xd503]        # 0x140012608
   140005105:	test   eax,eax
   140005107:	jne    0x14000545c
   14000510d:	add    esi,edi
   14000510f:	cmp    esi,DWORD PTR [rbp+0x40]
   140005112:	jge    0x14000532d
   140005118:	movsxd rsi,esi
   14000511b:	lea    rdx,[rip+0xffffffffffffd2ee]        # 0x140002410
   140005122:	mov    rcx,QWORD PTR [r12+rsi*8]
   140005126:	call   QWORD PTR [rip+0xd4dc]        # 0x140012608
   14000512c:	test   eax,eax
   14000512e:	jne    0x14000549f
   140005134:	mov    ecx,edi
   140005136:	jmp    0x14000532f
   14000513b:	lea    r8,[rbp+0x50]
   14000513f:	mov    rdx,r13
   140005142:	mov    rcx,r14
   140005145:	mov    QWORD PTR [rbp-0x18],rbx
   140005149:	call   0x14000556c
   14000514e:	movzx  r13d,bl
   140005152:	test   al,al
   140005154:	cmovne r13d,edi
   140005158:	add    r15,rdi
   14000515b:	add    esi,edi
   14000515d:	cmp    r15,QWORD PTR [rbp-0x20]
   140005161:	jge    0x14000551b
   140005167:	mov    rcx,QWORD PTR [r12+r15*8]
   14000516b:	lea    rdx,[rip+0xffffffffffffd1e6]        # 0x140002358
   140005172:	call   QWORD PTR [rip+0xd490]        # 0x140012608
   140005178:	test   eax,eax
   14000517a:	jne    0x140005182
   14000517c:	or     DWORD PTR [rbp+0x58],0xffffffff
   140005180:	jmp    0x1400051a8
   140005182:	mov    rcx,QWORD PTR [r12+r15*8]
   140005186:	lea    rdx,[rbp-0x18]
   14000518a:	xor    r8d,r8d
   14000518d:	call   QWORD PTR [rip+0xd4c5]        # 0x140012658
   140005193:	mov    rcx,QWORD PTR [rbp-0x18]
   140005197:	mov    DWORD PTR [rbp+0x58],eax
   14000519a:	test   rcx,rcx
   14000519d:	je     0x1400051a8
   14000519f:	cmp    WORD PTR [rcx],bx
   1400051a2:	jne    0x1400054dd
   1400051a8:	mov    r14,QWORD PTR [rip+0x9e89]        # 0x14000f038
   1400051af:	test   r14,r14
   1400051b2:	jne    0x1400051e6
   1400051b4:	lea    ecx,[r14+0x20]
   1400051b8:	call   QWORD PTR [rip+0xd472]        # 0x140012630
   1400051be:	mov    r14,rax
   1400051c1:	test   rax,rax
   1400051c4:	je     0x14000550a
   1400051ca:	xor    edx,edx
   1400051cc:	mov    rcx,rax
   1400051cf:	lea    r8d,[rdx+0x20]
   1400051d3:	call   0x14000a286
   1400051d8:	mov    QWORD PTR [rip+0x9e59],r14        # 0x14000f038
   1400051df:	mov    QWORD PTR [r14+0x8],r14
   1400051e3:	mov    QWORD PTR [r14],r14
   1400051e6:	mov    ecx,0x20
   1400051eb:	call   QWORD PTR [rip+0xd43f]        # 0x140012630
   1400051f1:	mov    QWORD PTR [rbp-0x10],rax
   1400051f5:	test   rax,rax
   1400051f8:	je     0x14000550a
   1400051fe:	xor    edx,edx
   140005200:	mov    rcx,rax
   140005203:	lea    r8d,[rdx+0x20]
   140005207:	call   0x14000a286
   14000520c:	mov    r8,QWORD PTR [rbp-0x10]
   140005210:	mov    eax,DWORD PTR [rbp+0x58]
   140005213:	mov    r11b,BYTE PTR [rbp+0x50]
   140005217:	mov    cl,r13b
   14000521a:	mov    BYTE PTR [r8+0x10],r11b
   14000521e:	neg    cl
   140005220:	sbb    edx,edx
   140005222:	and    edx,eax
   140005224:	test   r13b,r13b
   140005227:	mov    DWORD PTR [r8+0x14],edx
   14000522b:	cmovne eax,ebx
   14000522e:	mov    DWORD PTR [r8+0x18],eax
   140005232:	mov    rax,QWORD PTR [r14+0x8]
   140005236:	mov    QWORD PTR [r8],r14
   140005239:	mov    QWORD PTR [r8+0x8],rax
   14000523d:	mov    QWORD PTR [rax],r8
   140005240:	mov    QWORD PTR [r14+0x8],r8
   140005244:	jmp    0x14000545c
   140005249:	add    esi,edi
   14000524b:	add    r15,rdi
   14000524e:	mov    edx,0x104
   140005253:	mov    r8,QWORD PTR [r12+r15*8]
   140005257:	lea    rcx,[rip+0x9ff2]        # 0x14000f250
   14000525e:	lea    rax,[rdx+0x7ffffefa]
   140005265:	test   rax,rax
   140005268:	je     0x140005283
   14000526a:	movzx  eax,WORD PTR [r8]
   14000526e:	test   ax,ax
   140005271:	je     0x140005283
   140005273:	mov    WORD PTR [rcx],ax
   140005276:	add    r8,0x2
   14000527a:	add    rcx,0x2
   14000527e:	sub    rdx,rdi
   140005281:	jne    0x14000525e
   140005283:	test   rdx,rdx
   140005286:	jne    0x14000528c
   140005288:	sub    rcx,0x2
   14000528c:	mov    WORD PTR [rcx],bx
   14000528f:	mov    BYTE PTR [rip+0x9d7c],dil        # 0x14000f012
   140005296:	jmp    0x14000545c
   14000529b:	add    r15,rdi
   14000529e:	add    esi,edi
   1400052a0:	mov    QWORD PTR [rbp+0x50],rbx
   1400052a4:	cmp    r15,QWORD PTR [rbp-0x20]
   1400052a8:	jge    0x140005550
   1400052ae:	mov    rcx,QWORD PTR [r12+r15*8]
   1400052b2:	lea    rdx,[rbp+0x50]
   1400052b6:	xor    r8d,r8d
   1400052b9:	call   QWORD PTR [rip+0xd399]        # 0x140012658
   1400052bf:	mov    DWORD PTR [rip+0x6fa3],eax        # 0x14000c268
   1400052c5:	mov    rax,QWORD PTR [rbp+0x50]
   1400052c9:	test   rax,rax
   1400052cc:	je     0x14000545c
   1400052d2:	cmp    WORD PTR [rax],bx
   1400052d5:	je     0x14000545c
   1400052db:	lea    rcx,[rip+0xffffffffffffcfde]        # 0x1400022c0
   1400052e2:	jmp    0x140005321
   1400052e4:	add    r15,rdi
   1400052e7:	lea    rdx,[rbp+0x50]
   1400052eb:	xor    r8d,r8d
   1400052ee:	mov    rcx,QWORD PTR [r12+r15*8]
   1400052f2:	mov    QWORD PTR [rbp+0x50],rbx
   1400052f6:	add    esi,edi
   1400052f8:	call   QWORD PTR [rip+0xd35a]        # 0x140012658
   1400052fe:	mov    DWORD PTR [rip+0x9d10],eax        # 0x14000f014
   140005304:	mov    rax,QWORD PTR [rbp+0x50]
   140005308:	test   rax,rax
   14000530b:	je     0x14000545c
   140005311:	cmp    WORD PTR [rax],bx
   140005314:	je     0x14000545c
   14000531a:	lea    rcx,[rip+0xffffffffffffceef]        # 0x140002210
   140005321:	movsxd rdx,esi
   140005324:	mov    rdx,QWORD PTR [r12+rdx*8]
   140005328:	call   0x1400068c4
   14000532d:	xor    ecx,ecx
   14000532f:	call   0x140006444
   140005334:	xor    al,al
   140005336:	jmp    0x140005484
   14000533b:	add    esi,edi
   14000533d:	add    r15,rdi
   140005340:	mov    edx,0x104
   140005345:	mov    r8,QWORD PTR [r12+r15*8]
   140005349:	lea    rcx,[rip+0x9cf0]        # 0x14000f040
   140005350:	lea    rax,[rdx+0x7ffffefa]
   140005357:	test   rax,rax
   14000535a:	je     0x140005375
   14000535c:	movzx  eax,WORD PTR [r8]
   140005360:	test   ax,ax
   140005363:	je     0x140005375
   140005365:	mov    WORD PTR [rcx],ax
   140005368:	add    r8,0x2
   14000536c:	add    rcx,0x2
   140005370:	sub    rdx,rdi
   140005373:	jne    0x140005350
   140005375:	test   rdx,rdx
   140005378:	jne    0x14000537e
   14000537a:	sub    rcx,0x2
   14000537e:	mov    WORD PTR [rcx],bx
   140005381:	jmp    0x14000545c
   140005386:	mov    eax,DWORD PTR [rbp-0x30]
   140005389:	cmp    BYTE PTR [rbp+0x50],dil
   14000538d:	jne    0x140005397
   14000538f:	or     DWORD PTR [rip+0x9c7f],eax        # 0x14000f014
   140005395:	jmp    0x14000539f
   140005397:	not    eax
   140005399:	and    DWORD PTR [rip+0x9c75],eax        # 0x14000f014
   14000539f:	test   r13,r13
   1400053a2:	je     0x14000545c
   1400053a8:	mov    eax,0x23
   1400053ad:	lea    rdx,[rip+0xffffffffffffe17c]        # 0x140003530
   1400053b4:	xor    r9d,r9d
   1400053b7:	mov    WORD PTR [r13-0x2],ax
   1400053bc:	lea    rax,[rbp+0x58]
   1400053c0:	xor    r8d,r8d
   1400053c3:	mov    QWORD PTR [rsp+0x40],rax
   1400053c8:	lea    rax,[rbp-0x30]
   1400053cc:	mov    rcx,0xffffffff80000002
   1400053d3:	mov    QWORD PTR [rsp+0x38],rax
   1400053d8:	mov    QWORD PTR [rsp+0x30],rbx
   1400053dd:	mov    DWORD PTR [rsp+0x28],0x20006
   1400053e5:	mov    DWORD PTR [rsp+0x20],ebx
   1400053e9:	mov    QWORD PTR [rbp-0x30],rbx
   1400053ed:	mov    DWORD PTR [rbp+0x58],ebx
   1400053f0:	call   QWORD PTR [rip+0xd032]        # 0x140012428
   1400053f6:	test   eax,eax
   1400053f8:	je     0x14000540a
   1400053fa:	lea    rdx,[rip+0xffffffffffffe12f]        # 0x140003530
   140005401:	lea    rcx,[rip+0xffffffffffffdb68]        # 0x140002f70
   140005408:	jmp    0x14000544a
   14000540a:	cmp    BYTE PTR [rbp+0x50],bl
   14000540d:	mov    eax,ebx
   14000540f:	mov    ecx,0x4
   140005414:	setne  al
   140005417:	mov    DWORD PTR [rsp+0x28],ecx
   14000541b:	mov    r9d,ecx
   14000541e:	mov    rcx,QWORD PTR [rbp-0x30]
   140005422:	mov    DWORD PTR [rbp-0x28],eax
   140005425:	lea    rax,[rbp-0x28]
   140005429:	lea    rdx,[r14+0x2]
   14000542d:	xor    r8d,r8d
   140005430:	mov    QWORD PTR [rsp+0x20],rax
   140005435:	call   QWORD PTR [rip+0xd035]        # 0x140012470
   14000543b:	test   eax,eax
   14000543d:	je     0x140005452
   14000543f:	lea    rdx,[r14+0x2]
   140005443:	lea    rcx,[rip+0xffffffffffffdb86]        # 0x140002fd0
   14000544a:	mov    r8d,eax
   14000544d:	call   0x1400068c4
   140005452:	mov    rcx,QWORD PTR [rbp-0x30]
   140005456:	call   QWORD PTR [rip+0xd00c]        # 0x140012468
   14000545c:	add    r15,rdi
   14000545f:	add    esi,edi
   140005461:	cmp    r15,QWORD PTR [rbp-0x20]
   140005465:	jl     0x140004ed9
   14000546b:	mov    eax,DWORD PTR [rip+0x9ba3]        # 0x14000f014
   140005471:	mov    ecx,0xfff
   140005476:	test   eax,eax
   140005478:	cmove  eax,ecx
   14000547b:	mov    DWORD PTR [rip+0x9b93],eax        # 0x14000f014
   140005481:	mov    al,dil
   140005484:	mov    rbx,QWORD PTR [rsp+0xc8]
   14000548c:	add    rsp,0x80
   140005493:	pop    r15
   140005495:	pop    r14
   140005497:	pop    r13
   140005499:	pop    r12
   14000549b:	pop    rdi
   14000549c:	pop    rsi
   14000549d:	pop    rbp
   14000549e:	ret    
   14000549f:	mov    rcx,QWORD PTR [r12+rsi*8]
   1400054a3:	lea    rdx,[rip+0xffffffffffffcf76]        # 0x140002420
   1400054aa:	call   QWORD PTR [rip+0xd158]        # 0x140012608
   1400054b0:	test   eax,eax
   1400054b2:	jne    0x1400054bc
   1400054b4:	lea    ecx,[rax+0x2]
   1400054b7:	jmp    0x14000532f
   1400054bc:	mov    rcx,QWORD PTR [r12+rsi*8]
   1400054c0:	lea    rdx,[rip+0xffffffffffffcf69]        # 0x140002430
   1400054c7:	call   QWORD PTR [rip+0xd13b]        # 0x140012608
   1400054cd:	test   eax,eax
   1400054cf:	jne    0x140005334
   1400054d5:	lea    ecx,[rax+0x3]
   1400054d8:	jmp    0x14000532f
   1400054dd:	lea    rax,[rip+0xffffffffffffce7c]        # 0x140002360
   1400054e4:	test   r13b,r13b
   1400054e7:	movsxd r8,esi
   1400054ea:	mov    r8,QWORD PTR [r12+r8*8]
   1400054ee:	lea    rdx,[rip+0xffffffffffffce73]        # 0x140002368
   1400054f5:	lea    rcx,[rip+0xffffffffffffce74]        # 0x140002370
   1400054fc:	cmovne rdx,rax
   140005500:	call   0x1400068c4
   140005505:	jmp    0x14000532d
   14000550a:	lea    rcx,[rip+0xffffffffffffce97]        # 0x1400023a8
   140005511:	call   0x1400068c4
   140005516:	jmp    0x140005334
   14000551b:	lea    rax,[rip+0xffffffffffffce2e]        # 0x140002350
   140005522:	lea    rcx,[rip+0xffffffffffffce1f]        # 0x140002348
   140005529:	test   r13b,r13b
   14000552c:	cmovne rax,rcx
   140005530:	mov    rdx,rax
   140005533:	jmp    0x140005557
   140005535:	movsxd rcx,esi
   140005538:	mov    rcx,QWORD PTR [r12+rcx*8+0x8]
   14000553d:	call   0x1400065a0
   140005542:	test   al,al
   140005544:	sete   bl
   140005547:	mov    ecx,ebx
   140005549:	call   QWORD PTR [rip+0xd1b9]        # 0x140012708
   14000554f:	int3   
   140005550:	lea    rdx,[rip+0xffffffffffffcd01]        # 0x140002258
   140005557:	lea    rcx,[rip+0xffffffffffffcd12]        # 0x140002270
   14000555e:	jmp    0x140005328
   140005563:	int3   
   140005564:	int3   
   140005565:	int3   
   140005566:	int3   
   140005567:	int3   
   140005568:	int3   
   140005569:	int3   
   14000556a:	int3   
   14000556b:	int3   
   14000556c:	sub    rsp,0x28
   140005570:	cmp    WORD PTR [rcx],0x2b
   140005574:	mov    BYTE PTR [r8],0x0
   140005578:	jne    0x140005580
   14000557a:	mov    BYTE PTR [r8],0x1
   14000557e:	jmp    0x14000558a
   140005580:	cmp    WORD PTR [rcx],0x2d
   140005584:	jne    0x14000558e
   140005586:	mov    BYTE PTR [r8],0x0
   14000558a:	add    rcx,0x2
   14000558e:	call   QWORD PTR [rip+0xd074]        # 0x140012608
   140005594:	test   eax,eax
   140005596:	sete   al
   140005599:	add    rsp,0x28
   14000559d:	ret    
   14000559e:	int3   
   14000559f:	int3   
   1400055a0:	int3   
   1400055a1:	int3   
   1400055a2:	int3   
   1400055a3:	int3   
   1400055a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400055a9:	mov    QWORD PTR [rsp+0x18],rsi
   1400055ae:	push   rbp
   1400055af:	push   rdi
   1400055b0:	push   r12
   1400055b2:	push   r14
   1400055b4:	push   r15
   1400055b6:	lea    rbp,[rsp-0x100]
   1400055be:	sub    rsp,0x200
   1400055c5:	mov    rax,QWORD PTR [rip+0x6be4]        # 0x14000c1b0
   1400055cc:	xor    rax,rsp
   1400055cf:	mov    QWORD PTR [rbp+0xf0],rax
   1400055d6:	xor    r12d,r12d
   1400055d9:	mov    r15,rdx
   1400055dc:	mov    r14d,ecx
   1400055df:	mov    ebx,r12d
   1400055e2:	lea    rsi,[rip+0xa827]        # 0x14000fe10
   1400055e9:	lea    rdi,[rip+0x9ee8]        # 0x14000f4d8
   1400055f0:	cmp    ebx,0x11
   1400055f3:	jae    0x14000580f
   1400055f9:	xor    edx,edx
   1400055fb:	mov    rcx,rsi
   1400055fe:	lea    r8d,[rdx+0x58]
   140005602:	call   0x14000a286
   140005607:	mov    eax,DWORD PTR [rdi]
   140005609:	lea    r11,[rsi+0x42]
   14000560d:	mov    r10,rdi
   140005610:	mov    DWORD PTR [r11+0x12],eax
   140005614:	mov    ecx,0x21
   140005619:	mov    rax,rsi
   14000561c:	mov    edx,r12d
   14000561f:	sub    r10,rsi
   140005622:	lea    r9,[rcx-0x1]
   140005626:	test   r9,r9
   140005629:	je     0x140005647
   14000562b:	movzx  r8d,WORD PTR [r10+rax*1-0x58]
   140005631:	test   r8w,r8w
   140005635:	je     0x140005647
   140005637:	mov    WORD PTR [rax],r8w
   14000563b:	add    rax,0x2
   14000563f:	mov    rcx,r9
   140005642:	test   r9,r9
   140005645:	jne    0x140005622
   140005647:	test   rcx,rcx
   14000564a:	jne    0x140005655
   14000564c:	sub    rax,0x2
   140005650:	mov    edx,0x8007007a
   140005655:	mov    WORD PTR [rax],r12w
   140005659:	test   edx,edx
   14000565b:	js     0x140005829
   140005661:	mov    rcx,rdi
   140005664:	mov    eax,0x9
   140005669:	mov    edx,r12d
   14000566c:	sub    rcx,r11
   14000566f:	lea    r9,[rax-0x1]
   140005673:	test   r9,r9
   140005676:	je     0x140005694
   140005678:	movzx  r8d,WORD PTR [rcx+r11*1-0x16]
   14000567e:	test   r8w,r8w
   140005682:	je     0x140005694
   140005684:	mov    WORD PTR [r11],r8w
   140005688:	add    r11,0x2
   14000568c:	mov    rax,r9
   14000568f:	test   r9,r9
   140005692:	jne    0x14000566f
   140005694:	test   rax,rax
   140005697:	jne    0x1400056a2
   140005699:	sub    r11,0x2
   14000569d:	mov    edx,0x8007007a
   1400056a2:	mov    WORD PTR [r11],r12w
   1400056a6:	test   edx,edx
   1400056a8:	js     0x140005829
   1400056ae:	inc    ebx
   1400056b0:	add    rsi,0x58
   1400056b4:	add    rdi,0x90
   1400056bb:	cmp    ebx,0x11
   1400056be:	jb     0x1400055f9
   1400056c4:	mov    rdx,r15
   1400056c7:	mov    ecx,r14d
   1400056ca:	call   0x140004e7c
   1400056cf:	test   al,al
   1400056d1:	je     0x140005835
   1400056d7:	call   0x140004b18
   1400056dc:	test   eax,eax
   1400056de:	je     0x140005835
   1400056e4:	lea    rcx,[rsp+0x30]
   1400056e9:	xor    edx,edx
   1400056eb:	mov    r8d,0x1c0
   1400056f1:	call   0x14000a286
   1400056f6:	cmp    BYTE PTR [rip+0x9915],r12b        # 0x14000f012
   1400056fd:	je     0x14000570d
   1400056ff:	lea    rax,[rip+0x9b4a]        # 0x14000f250
   140005706:	mov    QWORD PTR [rsp+0x30],rax
   14000570b:	jmp    0x140005721
   14000570d:	lea    rax,[rip+0xffffffffffffbaac]        # 0x1400011c0
   140005714:	mov    DWORD PTR [rsp+0x4c],0x100
   14000571c:	mov    QWORD PTR [rsp+0x38],rax
   140005721:	lea    rax,[rip+0xfffffffffffff68c]        # 0x140004db4
   140005728:	lea    rcx,[rsp+0x30]
   14000572d:	mov    QWORD PTR [rbp+0xc0],rax
   140005734:	lea    rax,[rip+0xfffffffffffff68d]        # 0x140004dc8
   14000573b:	mov    QWORD PTR [rbp+0xd8],rax
   140005742:	call   QWORD PTR [rip+0xcd18]        # 0x140012460
   140005748:	mov    QWORD PTR [rsp+0x20],rax
   14000574d:	cmp    rax,0xffffffffffffffff
   140005751:	jne    0x140005767
   140005753:	call   QWORD PTR [rip+0xcd9f]        # 0x1400124f8
   140005759:	lea    rcx,[rip+0xffffffffffffccd8]        # 0x140002438
   140005760:	mov    edx,eax
   140005762:	jmp    0x140005830
   140005767:	lea    rdx,[rip+0xfffffffffffff666]        # 0x140004dd4
   14000576e:	lea    rcx,[rip+0xffffffffffffe543]        # 0x140003cb8
   140005775:	call   QWORD PTR [rip+0xccbd]        # 0x140012438
   14000577b:	test   eax,eax
   14000577d:	je     0x14000579d
   14000577f:	lea    rcx,[rip+0xffffffffffffccfa]        # 0x140002480
   140005786:	mov    edx,eax
   140005788:	call   0x1400068c4
   14000578d:	mov    rcx,QWORD PTR [rsp+0x20]
   140005792:	call   QWORD PTR [rip+0xcc98]        # 0x140012430
   140005798:	jmp    0x140005835
   14000579d:	cmp    BYTE PTR [rip+0x986e],r12b        # 0x14000f012
   1400057a4:	jne    0x1400057b2
   1400057a6:	lea    rcx,[rip+0xffffffffffffcd23]        # 0x1400024d0
   1400057ad:	call   0x1400068c4
   1400057b2:	xor    r9d,r9d
   1400057b5:	lea    rcx,[rsp+0x20]
   1400057ba:	xor    r8d,r8d
   1400057bd:	lea    edx,[r9+0x1]
   1400057c1:	call   QWORD PTR [rip+0xcc51]        # 0x140012418
   1400057c7:	test   eax,eax
   1400057c9:	je     0x1400057d4
   1400057cb:	lea    rcx,[rip+0xffffffffffffcd8e]        # 0x140002560
   1400057d2:	jmp    0x140005786
   1400057d4:	cmp    BYTE PTR [rip+0x9837],r12b        # 0x14000f012
   1400057db:	jne    0x1400057e9
   1400057dd:	lea    rcx,[rip+0xffffffffffffcdc4]        # 0x1400025a8
   1400057e4:	call   0x1400068c4
   1400057e9:	mov    rcx,QWORD PTR [rsp+0x20]
   1400057ee:	call   QWORD PTR [rip+0xcc3c]        # 0x140012430
   1400057f4:	mov    rcx,QWORD PTR [rip+0x980d]        # 0x14000f008
   1400057fb:	test   rcx,rcx
   1400057fe:	je     0x140005806
   140005800:	call   QWORD PTR [rip+0xcf0a]        # 0x140012710
   140005806:	call   0x140005944
   14000580b:	mov    al,0x1
   14000580d:	jmp    0x140005837
   14000580f:	lea    rcx,[rip+0xffffffffffffe97a]        # 0x140004190
   140005816:	mov    r8d,0x11
   14000581c:	mov    edx,ebx
   14000581e:	call   QWORD PTR [rip+0xce2c]        # 0x140012650
   140005824:	mov    edx,0x80070057
   140005829:	lea    rcx,[rip+0xffffffffffffd6e0]        # 0x140002f10
   140005830:	call   0x1400068c4
   140005835:	xor    al,al
   140005837:	mov    rcx,QWORD PTR [rbp+0xf0]
   14000583e:	xor    rcx,rsp
   140005841:	call   0x140009a90
   140005846:	lea    r11,[rsp+0x200]
   14000584e:	mov    rbx,QWORD PTR [r11+0x30]
   140005852:	mov    rsi,QWORD PTR [r11+0x40]
   140005856:	mov    rsp,r11
   140005859:	pop    r15
   14000585b:	pop    r14
   14000585d:	pop    r12
   14000585f:	pop    rdi
   140005860:	pop    rbp
   140005861:	ret    
   140005862:	int3   
   140005863:	int3   
   140005864:	int3   
   140005865:	int3   
   140005866:	int3   
   140005867:	int3   
   140005868:	rex push rbx
   14000586a:	sub    rsp,0x4b0
   140005871:	mov    rax,QWORD PTR [rip+0x6938]        # 0x14000c1b0
   140005878:	xor    rax,rsp
   14000587b:	mov    QWORD PTR [rsp+0x4a0],rax
   140005883:	mov    ebx,0x478
   140005888:	lea    rcx,[rsp+0x20]
   14000588d:	xor    edx,edx
   14000588f:	mov    r8d,ebx
   140005892:	call   0x14000a286
   140005897:	lea    rdx,[rip+0xffffffffffffb922]        # 0x1400011c0
   14000589e:	lea    rax,[rsp+0x98]
   1400058a6:	mov    r9,rdx
   1400058a9:	mov    DWORD PTR [rsp+0x20],ebx
   1400058ad:	lea    r8d,[rbx-0x78]
   1400058b1:	sub    r9,rax
   1400058b4:	mov    DWORD PTR [rsp+0x60],0x500
   1400058bc:	mov    DWORD PTR [rsp+0x94],0x78
   1400058c7:	xor    ebx,ebx
   1400058c9:	lea    rcx,[rsp+0x98]
   1400058d1:	lea    rax,[r8+0x7ffffbfe]
   1400058d8:	test   rax,rax
   1400058db:	je     0x1400058f3
   1400058dd:	movzx  eax,WORD PTR [r9+rcx*1]
   1400058e2:	test   ax,ax
   1400058e5:	je     0x1400058f3
   1400058e7:	mov    WORD PTR [rcx],ax
   1400058ea:	add    rcx,0x2
   1400058ee:	dec    r8
   1400058f1:	jne    0x1400058d1
   1400058f3:	test   r8,r8
   1400058f6:	jne    0x1400058fc
   1400058f8:	sub    rcx,0x2
   1400058fc:	mov    WORD PTR [rcx],bx
   1400058ff:	lea    r8,[rsp+0x20]
   140005904:	xor    ecx,ecx
   140005906:	call   QWORD PTR [rip+0xcb3c]        # 0x140012448
   14000590c:	test   eax,eax
   14000590e:	je     0x140005925
   140005910:	cmp    eax,0x1069
   140005915:	je     0x140005925
   140005917:	lea    rcx,[rip+0xffffffffffffccb2]        # 0x1400025d0
   14000591e:	mov    edx,eax
   140005920:	call   0x1400068c4
   140005925:	mov    rcx,QWORD PTR [rsp+0x4a0]
   14000592d:	xor    rcx,rsp
   140005930:	call   0x140009a90
   140005935:	add    rsp,0x4b0
   14000593c:	pop    rbx
   14000593d:	ret    
   14000593e:	int3   
   14000593f:	int3   
   140005940:	int3   
   140005941:	int3   
   140005942:	int3   
   140005943:	int3   
   140005944:	mov    rax,rsp
   140005947:	mov    QWORD PTR [rax+0x8],rbx
   14000594b:	mov    QWORD PTR [rax+0x10],rsi
   14000594f:	mov    QWORD PTR [rax+0x18],rdi
   140005953:	push   rbp
   140005954:	lea    rbp,[rax-0x118]
   14000595b:	sub    rsp,0x210
   140005962:	mov    rax,QWORD PTR [rip+0x6847]        # 0x14000c1b0
   140005969:	xor    rax,rsp
   14000596c:	mov    QWORD PTR [rbp+0x100],rax
   140005973:	mov    ebx,0xc6
   140005978:	lea    rcx,[rsp+0x62]
   14000597d:	xor    esi,esi
   14000597f:	mov    r8d,ebx
   140005982:	xor    edx,edx
   140005984:	mov    WORD PTR [rsp+0x60],si
   140005989:	call   0x14000a286
   14000598e:	lea    rcx,[rbp+0x32]
   140005992:	mov    r8d,ebx
   140005995:	xor    edx,edx
   140005997:	mov    WORD PTR [rbp+0x30],si
   14000599b:	call   0x14000a286
   1400059a0:	mov    rbx,QWORD PTR [rip+0x9681]        # 0x14000f028
   1400059a7:	test   rbx,rbx
   1400059aa:	je     0x140005a11
   1400059ac:	mov    rax,rbx
   1400059af:	lea    rdx,[rsp+0x50]
   1400059b4:	lea    rcx,[rsp+0x40]
   1400059b9:	shr    rax,0x20
   1400059bd:	mov    QWORD PTR [rsp+0x48],rbx
   1400059c2:	mov    WORD PTR [rsp+0x60],si
   1400059c7:	mov    DWORD PTR [rsp+0x44],eax
   1400059cb:	mov    DWORD PTR [rsp+0x40],ebx
   1400059cf:	call   QWORD PTR [rip+0xcb0b]        # 0x1400124e0
   1400059d5:	test   eax,eax
   1400059d7:	jne    0x1400059f3
   1400059d9:	call   QWORD PTR [rip+0xcb19]        # 0x1400124f8
   1400059df:	lea    rcx,[rip+0xffffffffffffd7ca]        # 0x1400031b0
   1400059e6:	mov    rdx,rbx
   1400059e9:	mov    r8d,eax
   1400059ec:	call   0x1400068c4
   1400059f1:	jmp    0x140005a0a
   1400059f3:	lea    r9,[rsp+0x50]
   1400059f8:	lea    rdx,[rsp+0x60]
   1400059fd:	lea    rcx,[rsp+0x48]
   140005a02:	xor    r8d,r8d
   140005a05:	call   0x140006990
   140005a0a:	mov    rbx,QWORD PTR [rip+0x9617]        # 0x14000f028
   140005a11:	mov    rdi,QWORD PTR [rip+0x9608]        # 0x14000f020
   140005a18:	test   rdi,rdi
   140005a1b:	je     0x140005a87
   140005a1d:	mov    rax,rdi
   140005a20:	lea    rdx,[rsp+0x48]
   140005a25:	lea    rcx,[rsp+0x40]
   140005a2a:	shr    rax,0x20
   140005a2e:	mov    QWORD PTR [rsp+0x50],rdi
   140005a33:	mov    WORD PTR [rbp+0x30],si
   140005a37:	mov    DWORD PTR [rsp+0x44],eax
   140005a3b:	mov    DWORD PTR [rsp+0x40],edi
   140005a3f:	call   QWORD PTR [rip+0xca9b]        # 0x1400124e0
   140005a45:	test   eax,eax
   140005a47:	jne    0x140005a63
   140005a49:	call   QWORD PTR [rip+0xcaa9]        # 0x1400124f8
   140005a4f:	lea    rcx,[rip+0xffffffffffffd75a]        # 0x1400031b0
   140005a56:	mov    rdx,rdi
   140005a59:	mov    r8d,eax
   140005a5c:	call   0x1400068c4
   140005a61:	jmp    0x140005a79
   140005a63:	lea    r9,[rsp+0x48]
   140005a68:	lea    rdx,[rbp+0x30]
   140005a6c:	lea    rcx,[rsp+0x50]
   140005a71:	xor    r8d,r8d
   140005a74:	call   0x140006990
   140005a79:	mov    rdi,QWORD PTR [rip+0x95a0]        # 0x14000f020
   140005a80:	mov    rbx,QWORD PTR [rip+0x95a1]        # 0x14000f028
   140005a87:	mov    rcx,rdi
   140005a8a:	movabs rax,0xd6bf94d5e57a42bd
   140005a94:	lea    r8,[rsp+0x60]
   140005a99:	sub    rcx,rbx
   140005a9c:	mov    r9,rbx
   140005a9f:	mov    QWORD PTR [rip+0x955a],rcx        # 0x14000f000
   140005aa6:	imul   rcx
   140005aa9:	add    rdx,rcx
   140005aac:	lea    rcx,[rip+0xffffffffffffcb5d]        # 0x140002610
   140005ab3:	sar    rdx,0x17
   140005ab7:	mov    rax,rdx
   140005aba:	shr    rax,0x3f
   140005abe:	add    rdx,rax
   140005ac1:	cmp    WORD PTR [rbp+0x30],si
   140005ac5:	lea    rax,[rsp+0x60]
   140005aca:	cmove  rax,rcx
   140005ace:	cmp    WORD PTR [rsp+0x60],si
   140005ad3:	mov    QWORD PTR [rsp+0x30],rdx
   140005ad8:	mov    rdx,QWORD PTR [rip+0x9539]        # 0x14000f018
   140005adf:	cmove  r8,rcx
   140005ae3:	lea    rcx,[rip+0xffffffffffffcb36]        # 0x140002620
   140005aea:	mov    QWORD PTR [rsp+0x28],rdi
   140005aef:	mov    QWORD PTR [rsp+0x20],rax
   140005af4:	call   0x1400067f8
   140005af9:	lea    r11,[rip+0xffffffffffffcc48]        # 0x140002748
   140005b00:	lea    r9,[rip+0xffffffffffffcc51]        # 0x140002758
   140005b07:	lea    r8,[rip+0xffffffffffffcc62]        # 0x140002770
   140005b0e:	lea    rdx,[rip+0xffffffffffffcc73]        # 0x140002788
   140005b15:	lea    rcx,[rip+0xffffffffffffcc84]        # 0x1400027a0
   140005b1c:	mov    QWORD PTR [rsp+0x20],r11
   140005b21:	call   0x1400067f8
   140005b26:	call   0x140005ba0
   140005b2b:	mov    rdi,QWORD PTR [rip+0x9506]        # 0x14000f038
   140005b32:	test   rdi,rdi
   140005b35:	je     0x140005b64
   140005b37:	mov    rbx,QWORD PTR [rdi]
   140005b3a:	jmp    0x140005b56
   140005b3c:	mov    rax,QWORD PTR [rbx+0x8]
   140005b40:	mov    rdx,QWORD PTR [rbx]
   140005b43:	mov    rcx,rbx
   140005b46:	mov    QWORD PTR [rax],rdx
   140005b49:	mov    QWORD PTR [rdx+0x8],rax
   140005b4d:	mov    rbx,QWORD PTR [rbx]
   140005b50:	call   QWORD PTR [rip+0xcaca]        # 0x140012620
   140005b56:	cmp    rdi,rbx
   140005b59:	jne    0x140005b3c
   140005b5b:	mov    rcx,rdi
   140005b5e:	call   QWORD PTR [rip+0xcabc]        # 0x140012620
   140005b64:	lea    rcx,[rip+0xffffffffffffcdd5]        # 0x140002940
   140005b6b:	call   0x1400067f8
   140005b70:	mov    rcx,QWORD PTR [rbp+0x100]
   140005b77:	xor    rcx,rsp
   140005b7a:	call   0x140009a90
   140005b7f:	lea    r11,[rsp+0x210]
   140005b87:	mov    rbx,QWORD PTR [r11+0x10]
   140005b8b:	mov    rsi,QWORD PTR [r11+0x18]
   140005b8f:	mov    rdi,QWORD PTR [r11+0x20]
   140005b93:	mov    rsp,r11
   140005b96:	pop    rbp
   140005b97:	ret    
   140005b98:	int3   
   140005b99:	int3   
   140005b9a:	int3   
   140005b9b:	int3   
   140005b9c:	int3   
   140005b9d:	int3   
   140005b9e:	int3   
   140005b9f:	int3   
   140005ba0:	mov    r11,rsp
   140005ba3:	mov    QWORD PTR [r11+0x8],rbx
   140005ba7:	mov    QWORD PTR [r11+0x10],rbp
   140005bab:	mov    QWORD PTR [r11+0x18],rsi
   140005baf:	push   rdi
   140005bb0:	push   r14
   140005bb2:	push   r15
   140005bb4:	sub    rsp,0x440
   140005bbb:	mov    rax,QWORD PTR [rip+0x65ee]        # 0x14000c1b0
   140005bc2:	xor    rax,rsp
   140005bc5:	mov    QWORD PTR [rsp+0x430],rax
   140005bcd:	mov    ebx,0x1fe
   140005bd2:	lea    rcx,[r11-0x226]
   140005bd9:	xor    r15d,r15d
   140005bdc:	mov    r8d,ebx
   140005bdf:	xor    edx,edx
   140005be1:	mov    WORD PTR [r11-0x228],r15w
   140005be9:	call   0x14000a286
   140005bee:	lea    rcx,[rsp+0x32]
   140005bf3:	mov    r8d,ebx
   140005bf6:	xor    edx,edx
   140005bf8:	mov    WORD PTR [rsp+0x30],r15w
   140005bfe:	call   0x14000a286
   140005c03:	mov    rdi,QWORD PTR [rip+0x9426]        # 0x14000f030
   140005c0a:	test   rdi,rdi
   140005c0d:	je     0x140005d50
   140005c13:	mov    rbx,QWORD PTR [rdi]
   140005c16:	cmp    rdi,rbx
   140005c19:	je     0x140005d47
   140005c1f:	lea    rcx,[rsp+0x30]
   140005c24:	xor    edx,edx
   140005c26:	mov    r8d,0x100
   140005c2c:	call   0x14000a286
   140005c31:	mov    rbp,rbx
   140005c34:	cmp    DWORD PTR [rbx+0x18],r15d
   140005c38:	jbe    0x140005cca
   140005c3e:	lea    r8,[rbx+0x1c]
   140005c42:	lea    rcx,[rsp+0x230]
   140005c4a:	mov    edx,0x100
   140005c4f:	call   0x140006fa4
   140005c54:	mov    r11,QWORD PTR [rbx+0x10]
   140005c58:	test   r11,r11
   140005c5b:	je     0x140005c99
   140005c5d:	mov    edx,0x100
   140005c62:	lea    rcx,[rsp+0x30]
   140005c67:	lea    rax,[rdx+0x7ffffefe]
   140005c6e:	test   rax,rax
   140005c71:	je     0x140005c8c
   140005c73:	movzx  eax,WORD PTR [r11]
   140005c77:	test   ax,ax
   140005c7a:	je     0x140005c8c
   140005c7c:	mov    WORD PTR [rcx],ax
   140005c7f:	add    r11,0x2
   140005c83:	add    rcx,0x2
   140005c87:	dec    rdx
   140005c8a:	jne    0x140005c67
   140005c8c:	test   rdx,rdx
   140005c8f:	jne    0x140005c95
   140005c91:	sub    rcx,0x2
   140005c95:	mov    WORD PTR [rcx],r15w
   140005c99:	cmp    QWORD PTR [rbx+0x38],r15
   140005c9d:	mov    edx,DWORD PTR [rbx+0x18]
   140005ca0:	lea    rax,[rsp+0x230]
   140005ca8:	lea    r9,[rip+0xffffffffffffcd49]        # 0x1400029f8
   140005caf:	lea    r8,[rsp+0x30]
   140005cb4:	lea    rcx,[rip+0xffffffffffffcd4d]        # 0x140002a08
   140005cbb:	cmovne r9,QWORD PTR [rbx+0x38]
   140005cc0:	mov    QWORD PTR [rsp+0x20],rax
   140005cc5:	call   0x1400067f8
   140005cca:	mov    rax,QWORD PTR [rbx+0x8]
   140005cce:	mov    rcx,QWORD PTR [rbx]
   140005cd1:	mov    QWORD PTR [rax],rcx
   140005cd4:	mov    QWORD PTR [rcx+0x8],rax
   140005cd8:	mov    r14,QWORD PTR [rbx+0x30]
   140005cdc:	mov    rsi,QWORD PTR [r14]
   140005cdf:	jmp    0x140005cfe
   140005ce1:	mov    rdx,rsi
   140005ce4:	mov    rsi,QWORD PTR [rsi]
   140005ce7:	mov    rcx,QWORD PTR [rdx]
   140005cea:	mov    rax,QWORD PTR [rdx+0x8]
   140005cee:	mov    QWORD PTR [rax],rcx
   140005cf1:	mov    QWORD PTR [rcx+0x8],rax
   140005cf5:	mov    rcx,rdx
   140005cf8:	call   QWORD PTR [rip+0xc922]        # 0x140012620
   140005cfe:	cmp    r14,rsi
   140005d01:	jne    0x140005ce1
   140005d03:	mov    rcx,QWORD PTR [rbx+0x30]
   140005d07:	call   QWORD PTR [rip+0xc913]        # 0x140012620
   140005d0d:	mov    rcx,QWORD PTR [rbx+0x10]
   140005d11:	test   rcx,rcx
   140005d14:	je     0x140005d1c
   140005d16:	call   QWORD PTR [rip+0xc904]        # 0x140012620
   140005d1c:	mov    rcx,QWORD PTR [rbx+0x38]
   140005d20:	test   rcx,rcx
   140005d23:	je     0x140005d2b
   140005d25:	call   QWORD PTR [rip+0xc8f5]        # 0x140012620
   140005d2b:	mov    rbx,QWORD PTR [rbx]
   140005d2e:	mov    rcx,rbp
   140005d31:	call   QWORD PTR [rip+0xc8e9]        # 0x140012620
   140005d37:	cmp    rdi,rbx
   140005d3a:	jne    0x140005c1f
   140005d40:	mov    rdi,QWORD PTR [rip+0x92e9]        # 0x14000f030
   140005d47:	mov    rcx,rdi
   140005d4a:	call   QWORD PTR [rip+0xc8d0]        # 0x140012620
   140005d50:	mov    rcx,QWORD PTR [rsp+0x430]
   140005d58:	xor    rcx,rsp
   140005d5b:	call   0x140009a90
   140005d60:	lea    r11,[rsp+0x440]
   140005d68:	mov    rbx,QWORD PTR [r11+0x20]
   140005d6c:	mov    rbp,QWORD PTR [r11+0x28]
   140005d70:	mov    rsi,QWORD PTR [r11+0x30]
   140005d74:	mov    rsp,r11
   140005d77:	pop    r15
   140005d79:	pop    r14
   140005d7b:	pop    rdi
   140005d7c:	ret    
   140005d7d:	int3   
   140005d7e:	int3   
   140005d7f:	int3   
   140005d80:	int3   
   140005d81:	int3   
   140005d82:	int3   
   140005d83:	int3   
   140005d84:	rex push rbp
   140005d86:	push   rbx
   140005d87:	push   rsi
   140005d88:	push   rdi
   140005d89:	push   r12
   140005d8b:	push   r14
   140005d8d:	push   r15
   140005d8f:	lea    rbp,[rsp-0x30]
   140005d94:	sub    rsp,0x130
   140005d9b:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140005da4:	mov    rax,QWORD PTR [rip+0x6405]        # 0x14000c1b0
   140005dab:	xor    rax,rsp
   140005dae:	mov    QWORD PTR [rbp+0x20],rax
   140005db2:	movsxd r15,r9d
   140005db5:	mov    r14d,r8d
   140005db8:	mov    rsi,rdx
   140005dbb:	mov    rdi,rcx
   140005dbe:	xor    edx,edx
   140005dc0:	mov    r8d,0xc6
   140005dc6:	lea    rcx,[rsp+0x52]
   140005dcb:	call   0x14000a286
   140005dd0:	mov    rbx,QWORD PTR [rdi+0x10]
   140005dd4:	mov    QWORD PTR [rsp+0x20],rbx
   140005dd9:	xor    r12d,r12d
   140005ddc:	mov    WORD PTR [rsp+0x50],r12w
   140005de2:	mov    DWORD PTR [rsp+0x30],ebx
   140005de6:	mov    rax,rbx
   140005de9:	shr    rax,0x20
   140005ded:	mov    DWORD PTR [rsp+0x34],eax
   140005df1:	lea    rdx,[rsp+0x38]
   140005df6:	lea    rcx,[rsp+0x30]
   140005dfb:	call   QWORD PTR [rip+0xc6df]        # 0x1400124e0
   140005e01:	test   eax,eax
   140005e03:	jne    0x140005e1f
   140005e05:	call   QWORD PTR [rip+0xc6ed]        # 0x1400124f8
   140005e0b:	mov    r8d,eax
   140005e0e:	mov    rdx,rbx
   140005e11:	lea    rcx,[rip+0xffffffffffffd398]        # 0x1400031b0
   140005e18:	call   0x1400068c4
   140005e1d:	jmp    0x140005e3a
   140005e1f:	lea    r9,[rsp+0x38]
   140005e24:	mov    r8b,BYTE PTR [rbp+0x90]
   140005e2b:	lea    rdx,[rsp+0x50]
   140005e30:	lea    rcx,[rsp+0x20]
   140005e35:	call   0x140006990
   140005e3a:	lea    rdx,[rsp+0x50]
   140005e3f:	lea    rcx,[rip+0xffffffffffffcc02]        # 0x140002a48
   140005e46:	call   0x1400067f8
   140005e4b:	movzx  ebx,WORD PTR [rdi+0xc]
   140005e4f:	movzx  r8d,bx
   140005e53:	shr    r8w,0x3
   140005e58:	xor    r8w,bx
   140005e5c:	shr    r8w,0x3
   140005e61:	xor    r8w,bx
   140005e65:	and    r8w,0x7
   140005e6a:	mov    edx,0xf
   140005e6f:	lea    rcx,[rsp+0x20]
   140005e74:	call   0x1400066e0
   140005e79:	nop
   140005e7a:	mov    edx,ebx
   140005e7c:	lea    rcx,[rip+0xffffffffffffcbd5]        # 0x140002a58
   140005e83:	call   0x1400067f8
   140005e88:	nop
   140005e89:	lea    rcx,[rsp+0x20]
   140005e8e:	call   0x140006794
   140005e93:	lea    rcx,[rip+0xffffffffffffcbce]        # 0x140002a68
   140005e9a:	call   0x1400067f8
   140005e9f:	movzx  ebx,WORD PTR [rdi+0x8]
   140005ea3:	xor    r8d,r8d
   140005ea6:	movzx  edx,bx
   140005ea9:	shr    dx,0x3
   140005ead:	xor    dx,bx
   140005eb0:	shr    dx,0x3
   140005eb4:	xor    dx,bx
   140005eb7:	and    dx,0x7
   140005ebb:	lea    rcx,[rsp+0x20]
   140005ec0:	call   0x1400066e0
   140005ec5:	nop
   140005ec6:	mov    edx,ebx
   140005ec8:	lea    rcx,[rip+0xffffffffffffcba1]        # 0x140002a70
   140005ecf:	call   0x1400067f8
   140005ed4:	nop
   140005ed5:	lea    rcx,[rsp+0x20]
   140005eda:	call   0x140006794
   140005edf:	mov    r8d,r14d
   140005ee2:	mov    rdx,rsi
   140005ee5:	lea    rcx,[rip+0xffffffffffffcb94]        # 0x140002a80
   140005eec:	call   0x1400067f8
   140005ef1:	mov    rdx,r15
   140005ef4:	imul   rdx,rdx,0x58
   140005ef8:	lea    rax,[rip+0x9f53]        # 0x14000fe52
   140005eff:	add    rdx,rax
   140005f02:	lea    rcx,[rip+0xffffffffffffcb8f]        # 0x140002a98
   140005f09:	call   0x1400067f8
   140005f0e:	lea    rcx,[rip+0xffffffffffffcb8f]        # 0x140002aa4
   140005f15:	call   0x1400067f8
   140005f1a:	mov    rcx,QWORD PTR [rbp+0x20]
   140005f1e:	xor    rcx,rsp
   140005f21:	call   0x140009a90
   140005f26:	add    rsp,0x130
   140005f2d:	pop    r15
   140005f2f:	pop    r14
   140005f31:	pop    r12
   140005f33:	pop    rdi
   140005f34:	pop    rsi
   140005f35:	pop    rbx
   140005f36:	pop    rbp
   140005f37:	ret    
   140005f38:	int3   
   140005f39:	int3   
   140005f3a:	int3   
   140005f3b:	int3   
   140005f3c:	int3   
   140005f3d:	int3   
   140005f3e:	int3   
   140005f3f:	int3   
   140005f40:	mov    rax,rsp
   140005f43:	push   rbp
   140005f44:	push   rsi
   140005f45:	push   rdi
   140005f46:	push   r12
   140005f48:	push   r13
   140005f4a:	push   r14
   140005f4c:	push   r15
   140005f4e:	lea    rbp,[rax-0x5f]
   140005f52:	sub    rsp,0xf0
   140005f59:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140005f62:	mov    QWORD PTR [rax+0x18],rbx
   140005f66:	mov    rax,QWORD PTR [rip+0x6243]        # 0x14000c1b0
   140005f6d:	xor    rax,rsp
   140005f70:	mov    QWORD PTR [rbp+0x1f],rax
   140005f74:	mov    r14,rcx
   140005f77:	mov    rbx,QWORD PTR [rcx+0x48]
   140005f7b:	xor    r13d,r13d
   140005f7e:	test   rbx,rbx
   140005f81:	jne    0x140005f9a
   140005f83:	cmp    DWORD PTR [rcx+0x50],r13d
   140005f87:	je     0x140005f9a
   140005f89:	lea    rcx,[rip+0xffffffffffffcb20]        # 0x140002ab0
   140005f90:	call   0x1400067f8
   140005f95:	jmp    0x140006415
   140005f9a:	mov    r12,QWORD PTR [rdx+0x30]
   140005f9e:	mov    r15,QWORD PTR [r12]
   140005fa2:	cmp    r12,r15
   140005fa5:	jne    0x140005fba
   140005fa7:	mov    edx,DWORD PTR [rcx+0x50]
   140005faa:	test   edx,edx
   140005fac:	je     0x140005fba
   140005fae:	lea    rcx,[rip+0xffffffffffffcb23]        # 0x140002ad8
   140005fb5:	call   0x1400067f8
   140005fba:	mov    edi,r13d
   140005fbd:	mov    DWORD PTR [rsp+0x38],edi
   140005fc1:	mov    r11d,r13d
   140005fc4:	mov    DWORD PTR [rsp+0x34],r13d
   140005fc9:	mov    r10d,r13d
   140005fcc:	mov    DWORD PTR [rsp+0x30],r13d
   140005fd1:	mov    QWORD PTR [rbp+0x17],0x7
   140005fd9:	mov    QWORD PTR [rbp+0xf],r13
   140005fdd:	mov    WORD PTR [rbp-0x1],r13w
   140005fe2:	mov    QWORD PTR [rbp-0x39],0x7
   140005fea:	mov    QWORD PTR [rbp-0x41],r13
   140005fee:	mov    WORD PTR [rbp-0x51],r13w
   140005ff3:	mov    QWORD PTR [rbp-0x11],0x7
   140005ffb:	mov    QWORD PTR [rbp-0x19],r13
   140005fff:	mov    WORD PTR [rbp-0x29],r13w
   140006004:	mov    QWORD PTR [rbp-0x61],0x7
   14000600c:	mov    QWORD PTR [rbp-0x69],r13
   140006010:	mov    WORD PTR [rbp-0x79],r13w
   140006015:	mov    esi,r13d
   140006018:	cmp    r12,r15
   14000601b:	je     0x140006398
   140006021:	or     r8,0xffffffffffffffff
   140006025:	mov    rcx,r15
   140006028:	mov    r15,QWORD PTR [r15]
   14000602b:	mov    eax,ebx
   14000602d:	sub    eax,DWORD PTR [r14+0x48]
   140006031:	cmp    eax,DWORD PTR [r14+0x50]
   140006035:	jae    0x140006398
   14000603b:	cmp    DWORD PTR [rcx+0x1c],0x7
   14000603f:	je     0x1400062cf
   140006045:	cmp    DWORD PTR [rcx+0x1c],0xe
   140006049:	jne    0x140006327
   14000604f:	mov    rax,r8
   140006052:	inc    rax
   140006055:	cmp    WORD PTR [rbx+rax*2],r13w
   14000605a:	jne    0x140006052
   14000605c:	lea    r13,[rax*2+0x2]
   140006064:	xor    edx,edx
   140006066:	test   esi,esi
   140006068:	jne    0x14000607a
   14000606a:	inc    r8
   14000606d:	cmp    WORD PTR [rbx+r8*2],dx
   140006072:	jne    0x14000606a
   140006074:	lea    rcx,[rbp-0x9]
   140006078:	jmp    0x1400060b8
   14000607a:	cmp    esi,0x1
   14000607d:	jne    0x14000608f
   14000607f:	inc    r8
   140006082:	cmp    WORD PTR [rbx+r8*2],dx
   140006087:	jne    0x14000607f
   140006089:	lea    rcx,[rbp-0x59]
   14000608d:	jmp    0x1400060b8
   14000608f:	cmp    esi,0x5
   140006092:	jne    0x1400060a4
   140006094:	inc    r8
   140006097:	cmp    WORD PTR [rbx+r8*2],dx
   14000609c:	jne    0x140006094
   14000609e:	lea    rcx,[rbp-0x31]
   1400060a2:	jmp    0x1400060b8
   1400060a4:	cmp    esi,0x6
   1400060a7:	jne    0x1400060c5
   1400060a9:	inc    r8
   1400060ac:	cmp    WORD PTR [rbx+r8*2],dx
   1400060b1:	jne    0x1400060a9
   1400060b3:	lea    rcx,[rsp+0x48]
   1400060b8:	mov    rdx,rbx
   1400060bb:	call   0x140006b3c
   1400060c0:	jmp    0x1400062b9
   1400060c5:	cmp    esi,0x7
   1400060c8:	jne    0x1400062ab
   1400060ce:	mov    r9b,0x1
   1400060d1:	mov    eax,DWORD PTR [rip+0x8f3d]        # 0x14000f014
   1400060d7:	bt     eax,r10d
   1400060db:	jae    0x140006318
   1400060e1:	mov    rcx,QWORD PTR [rip+0x8f50]        # 0x14000f038
   1400060e8:	test   rcx,rcx
   1400060eb:	je     0x140006132
   1400060ed:	mov    rax,QWORD PTR [rcx]
   1400060f0:	cmp    rcx,rax
   1400060f3:	je     0x140006132
   1400060f5:	mov    r10d,DWORD PTR [r14+0xc]
   1400060f9:	mov    rdx,rax
   1400060fc:	mov    rax,QWORD PTR [rax]
   1400060ff:	cmp    DWORD PTR [rdx+0x14],r10d
   140006103:	je     0x14000611b
   140006105:	mov    r8d,DWORD PTR [rdx+0x18]
   140006109:	cmp    r8d,DWORD PTR [r14+0x8]
   14000610d:	je     0x14000611b
   14000610f:	cmp    DWORD PTR [rdx+0x14],0xffffffff
   140006113:	je     0x14000611b
   140006115:	cmp    r8d,0xffffffff
   140006119:	jne    0x14000611f
   14000611b:	mov    r9b,BYTE PTR [rdx+0x10]
   14000611f:	cmp    rcx,rax
   140006122:	jne    0x1400060f9
   140006124:	mov    r10d,DWORD PTR [rsp+0x30]
   140006129:	test   r9b,r9b
   14000612c:	je     0x1400062c6
   140006132:	lea    rcx,[rbp-0x79]
   140006136:	cmp    QWORD PTR [rbp-0x61],0x8
   14000613b:	cmovae rcx,QWORD PTR [rbp-0x79]
   140006140:	mov    r8d,0xf
   140006146:	mov    r9,QWORD PTR [rbp-0x69]
   14000614a:	cmp    r9,r8
   14000614d:	cmovb  r8,r9
   140006151:	lea    rdx,[rip+0xffffffffffffc9e8]        # 0x140002b40
   140006158:	test   r8,r8
   14000615b:	je     0x14000617d
   14000615d:	movzx  eax,WORD PTR [rdx]
   140006160:	cmp    WORD PTR [rcx],ax
   140006163:	jne    0x140006174
   140006165:	add    rcx,0x2
   140006169:	add    rdx,0x2
   14000616d:	dec    r8
   140006170:	jne    0x14000615d
   140006172:	jmp    0x14000617d
   140006174:	sbb    eax,eax
   140006176:	and    eax,0xfffffffe
   140006179:	inc    eax
   14000617b:	jmp    0x14000617f
   14000617d:	xor    eax,eax
   14000617f:	movsxd rcx,eax
   140006182:	xor    eax,eax
   140006184:	cmp    r9,0xf
   140006188:	setne  al
   14000618b:	cmp    r9,0xf
   14000618f:	mov    rdx,0xffffffffffffffff
   140006196:	cmovb  eax,edx
   140006199:	test   rcx,rcx
   14000619c:	cmovne eax,ecx
   14000619f:	lea    rdx,[rbp-0x51]
   1400061a3:	mov    r9d,r10d
   1400061a6:	mov    r8d,r11d
   1400061a9:	mov    rcx,r14
   1400061ac:	test   eax,eax
   1400061ae:	je     0x140006286
   1400061b4:	cmp    QWORD PTR [rbp-0x39],0x8
   1400061b9:	cmovae rdx,QWORD PTR [rbp-0x51]
   1400061be:	mov    BYTE PTR [rsp+0x20],0x1
   1400061c3:	call   0x140005d84
   1400061c8:	cmp    BYTE PTR [rip+0x8e44],0x0        # 0x14000f013
   1400061cf:	je     0x1400061ea
   1400061d1:	test   edi,edi
   1400061d3:	jle    0x1400061ea
   1400061d5:	lea    rcx,[rip+0xffffffffffffc984]        # 0x140002b60
   1400061dc:	call   0x1400067f8
   1400061e1:	dec    rdi
   1400061e4:	jne    0x1400061d5
   1400061e6:	mov    edi,DWORD PTR [rsp+0x38]
   1400061ea:	lea    rcx,[rbp-0x79]
   1400061ee:	cmp    QWORD PTR [rbp-0x61],0x8
   1400061f3:	cmovae rcx,QWORD PTR [rbp-0x79]
   1400061f8:	mov    r10d,0x5
   1400061fe:	mov    r8d,r10d
   140006201:	mov    r9,QWORD PTR [rbp-0x69]
   140006205:	cmp    r9,r10
   140006208:	cmovb  r8,r9
   14000620c:	lea    rdx,[rip+0xffffffffffffc955]        # 0x140002b68
   140006213:	test   r8,r8
   140006216:	je     0x140006238
   140006218:	movzx  eax,WORD PTR [rdx]
   14000621b:	cmp    WORD PTR [rcx],ax
   14000621e:	jne    0x14000622f
   140006220:	add    rcx,0x2
   140006224:	add    rdx,0x2
   140006228:	dec    r8
   14000622b:	jne    0x140006218
   14000622d:	jmp    0x140006238
   14000622f:	sbb    eax,eax
   140006231:	and    eax,0xfffffffe
   140006234:	inc    eax
   140006236:	jmp    0x14000623a
   140006238:	xor    eax,eax
   14000623a:	movsxd rcx,eax
   14000623d:	xor    eax,eax
   14000623f:	cmp    r9,r10
   140006242:	setne  al
   140006245:	cmp    r9,r10
   140006248:	mov    rdx,0xffffffffffffffff
   14000624f:	cmovb  eax,edx
   140006252:	test   rcx,rcx
   140006255:	cmovne eax,ecx
   140006258:	test   eax,eax
   14000625a:	je     0x14000629a
   14000625c:	lea    r8,[rbp-0x29]
   140006260:	cmp    QWORD PTR [rbp-0x11],0x8
   140006265:	cmovae r8,QWORD PTR [rbp-0x29]
   14000626a:	lea    rdx,[rbp-0x79]
   14000626e:	cmp    QWORD PTR [rbp-0x61],0x8
   140006273:	cmovae rdx,QWORD PTR [rbp-0x79]
   140006278:	lea    rcx,[rip+0xffffffffffffc8f9]        # 0x140002b78
   14000627f:	call   0x1400067f8
   140006284:	jmp    0x14000629a
   140006286:	cmp    QWORD PTR [rbp-0x39],0x8
   14000628b:	cmovae rdx,QWORD PTR [rbp-0x51]
   140006290:	mov    BYTE PTR [rsp+0x20],0x0
   140006295:	call   0x140005d84
   14000629a:	mov    rdx,rbx
   14000629d:	lea    rcx,[rip+0xffffffffffffc8e4]        # 0x140002b88
   1400062a4:	call   0x1400067f8
   1400062a9:	jmp    0x1400062b9
   1400062ab:	mov    edx,esi
   1400062ad:	lea    rcx,[rip+0xffffffffffffc8dc]        # 0x140002b90
   1400062b4:	call   0x1400068c4
   1400062b9:	add    rbx,r13
   1400062bc:	mov    r10d,DWORD PTR [rsp+0x30]
   1400062c1:	mov    r11d,DWORD PTR [rsp+0x34]
   1400062c6:	xor    r13d,r13d
   1400062c9:	or     r8,0xffffffffffffffff
   1400062cd:	jmp    0x14000631b
   1400062cf:	mov    eax,DWORD PTR [rbx]
   1400062d1:	add    rbx,0x4
   1400062d5:	cmp    esi,0x3
   1400062d8:	jne    0x1400062e2
   1400062da:	mov    edi,eax
   1400062dc:	mov    DWORD PTR [rsp+0x38],eax
   1400062e0:	jmp    0x14000631b
   1400062e2:	cmp    esi,0x2
   1400062e5:	jne    0x1400062f0
   1400062e7:	mov    r11d,eax
   1400062ea:	mov    DWORD PTR [rsp+0x34],eax
   1400062ee:	jmp    0x14000631b
   1400062f0:	cmp    esi,0x4
   1400062f3:	jne    0x1400062fe
   1400062f5:	mov    r10d,eax
   1400062f8:	mov    DWORD PTR [rsp+0x30],eax
   1400062fc:	jmp    0x14000631b
   1400062fe:	mov    edx,esi
   140006300:	lea    rcx,[rip+0xffffffffffffc7f9]        # 0x140002b00
   140006307:	call   0x1400068c4
   14000630c:	mov    r10d,DWORD PTR [rsp+0x30]
   140006311:	mov    r11d,DWORD PTR [rsp+0x34]
   140006316:	jmp    0x1400062c9
   140006318:	xor    r13d,r13d
   14000631b:	inc    esi
   14000631d:	cmp    r12,r15
   140006320:	je     0x140006398
   140006322:	jmp    0x140006025
   140006327:	mov    edx,DWORD PTR [rcx+0x1c]
   14000632a:	lea    rcx,[rip+0xffffffffffffc8a7]        # 0x140002bd8
   140006331:	call   0x1400068c4
   140006336:	nop
   140006337:	cmp    QWORD PTR [rbp-0x61],0x8
   14000633c:	jb     0x140006348
   14000633e:	mov    rcx,QWORD PTR [rbp-0x79]
   140006342:	call   QWORD PTR [rip+0xc218]        # 0x140012560
   140006348:	mov    ebx,0x7
   14000634d:	mov    QWORD PTR [rbp-0x61],rbx
   140006351:	mov    QWORD PTR [rbp-0x69],r13
   140006355:	mov    WORD PTR [rbp-0x79],r13w
   14000635a:	cmp    QWORD PTR [rbp-0x11],0x8
   14000635f:	jb     0x14000636b
   140006361:	mov    rcx,QWORD PTR [rbp-0x29]
   140006365:	call   QWORD PTR [rip+0xc1f5]        # 0x140012560
   14000636b:	mov    QWORD PTR [rbp-0x11],rbx
   14000636f:	mov    QWORD PTR [rbp-0x19],r13
   140006373:	mov    WORD PTR [rbp-0x29],r13w
   140006378:	cmp    QWORD PTR [rbp-0x39],0x8
   14000637d:	jb     0x140006389
   14000637f:	mov    rcx,QWORD PTR [rbp-0x51]
   140006383:	call   QWORD PTR [rip+0xc1d7]        # 0x140012560
   140006389:	mov    QWORD PTR [rbp-0x39],rbx
   14000638d:	mov    QWORD PTR [rbp-0x41],r13
   140006391:	mov    WORD PTR [rbp-0x51],r13w
   140006396:	jmp    0x1400063f7
   140006398:	cmp    QWORD PTR [rbp-0x61],0x8
   14000639d:	jb     0x1400063a9
   14000639f:	mov    rcx,QWORD PTR [rbp-0x79]
   1400063a3:	call   QWORD PTR [rip+0xc1b7]        # 0x140012560
   1400063a9:	mov    ebx,0x7
   1400063ae:	mov    QWORD PTR [rbp-0x61],rbx
   1400063b2:	mov    QWORD PTR [rbp-0x69],r13
   1400063b6:	mov    WORD PTR [rbp-0x79],r13w
   1400063bb:	cmp    QWORD PTR [rbp-0x11],0x8
   1400063c0:	jb     0x1400063cc
   1400063c2:	mov    rcx,QWORD PTR [rbp-0x29]
   1400063c6:	call   QWORD PTR [rip+0xc194]        # 0x140012560
   1400063cc:	mov    QWORD PTR [rbp-0x11],rbx
   1400063d0:	mov    QWORD PTR [rbp-0x19],r13
   1400063d4:	mov    WORD PTR [rbp-0x29],r13w
   1400063d9:	cmp    QWORD PTR [rbp-0x39],0x8
   1400063de:	jb     0x1400063ea
   1400063e0:	mov    rcx,QWORD PTR [rbp-0x51]
   1400063e4:	call   QWORD PTR [rip+0xc176]        # 0x140012560
   1400063ea:	mov    QWORD PTR [rbp-0x39],rbx
   1400063ee:	mov    QWORD PTR [rbp-0x41],r13
   1400063f2:	mov    WORD PTR [rbp-0x51],r13w
   1400063f7:	cmp    QWORD PTR [rbp+0x17],0x8
   1400063fc:	jb     0x140006408
   1400063fe:	mov    rcx,QWORD PTR [rbp-0x1]
   140006402:	call   QWORD PTR [rip+0xc158]        # 0x140012560
   140006408:	mov    WORD PTR [rbp-0x1],r13w
   14000640d:	mov    QWORD PTR [rbp+0xf],r13
   140006411:	mov    QWORD PTR [rbp+0x17],rbx
   140006415:	mov    rcx,QWORD PTR [rbp+0x1f]
   140006419:	xor    rcx,rsp
   14000641c:	call   0x140009a90
   140006421:	mov    rbx,QWORD PTR [rsp+0x140]
   140006429:	add    rsp,0xf0
   140006430:	pop    r15
   140006432:	pop    r14
   140006434:	pop    r13
   140006436:	pop    r12
   140006438:	pop    rdi
   140006439:	pop    rsi
   14000643a:	pop    rbp
   14000643b:	ret    
   14000643c:	int3   
   14000643d:	int3   
   14000643e:	int3   
   14000643f:	int3   
   140006440:	int3   
   140006441:	int3   
   140006442:	int3   
   140006443:	int3   
   140006444:	mov    QWORD PTR [rsp+0x8],rbx
   140006449:	mov    QWORD PTR [rsp+0x10],rsi
   14000644e:	push   rdi
   14000644f:	sub    rsp,0x20
   140006453:	mov    ebx,ecx
   140006455:	lea    rcx,[rip+0xffffffffffffad94]        # 0x1400011f0
   14000645c:	call   0x1400068c4
   140006461:	lea    rcx,[rip+0xffffffffffffb498]        # 0x140001900
   140006468:	call   0x1400068c4
   14000646d:	test   bl,0x1
   140006470:	je     0x140006477
   140006472:	call   0x1400064ec
   140006477:	test   bl,0x2
   14000647a:	je     0x1400064d6
   14000647c:	lea    rcx,[rip+0xffffffffffffc915]        # 0x140002d98
   140006483:	call   0x1400068c4
   140006488:	xor    ebx,ebx
   14000648a:	lea    rdi,[rip+0x5def]        # 0x14000c280
   140006491:	lea    rsi,[rip+0x5dec]        # 0x14000c284
   140006498:	mov    edx,DWORD PTR [rdi]
   14000649a:	movsxd r8,ebx
   14000649d:	lea    rcx,[rip+0xffffffffffffc91c]        # 0x140002dc0
   1400064a4:	imul   r8,r8,0x44
   1400064a8:	add    r8,rsi
   1400064ab:	cmp    edx,0xaa
   1400064b1:	je     0x1400064ba
   1400064b3:	lea    rcx,[rip+0xffffffffffffc94e]        # 0x140002e08
   1400064ba:	call   0x1400067f8
   1400064bf:	inc    ebx
   1400064c1:	add    rdi,0x44
   1400064c5:	cmp    ebx,0x15
   1400064c8:	jb     0x140006498
   1400064ca:	lea    rcx,[rip+0xffffffffffffc95f]        # 0x140002e30
   1400064d1:	call   0x1400068c4
   1400064d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400064db:	mov    rsi,QWORD PTR [rsp+0x38]
   1400064e0:	add    rsp,0x20
   1400064e4:	pop    rdi
   1400064e5:	ret    
   1400064e6:	int3   
   1400064e7:	int3   
   1400064e8:	int3   
   1400064e9:	int3   
   1400064ea:	int3   
   1400064eb:	int3   
   1400064ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400064f1:	mov    QWORD PTR [rsp+0x10],rbp
   1400064f6:	mov    QWORD PTR [rsp+0x18],rsi
   1400064fb:	push   rdi
   1400064fc:	sub    rsp,0x30
   140006500:	lea    rcx,[rip+0xffffffffffffc6f1]        # 0x140002bf8
   140006507:	call   0x1400068c4
   14000650c:	lea    rcx,[rip+0xffffffffffffc70d]        # 0x140002c20
   140006513:	call   0x1400067f8
   140006518:	lea    rcx,[rip+0xffffffffffffc771]        # 0x140002c90
   14000651f:	call   0x1400068c4
   140006524:	lea    rbx,[rip+0x9939]        # 0x14000fe64
   14000652b:	lea    rdi,[rip+0x5c9e]        # 0x14000c1d0
   140006532:	lea    rsi,[rip+0x9919]        # 0x14000fe52
   140006539:	mov    ebp,0x11
   14000653e:	mov    r8d,DWORD PTR [rbx]
   140006541:	lea    rax,[rip+0xffffffffffffc7f8]        # 0x140002d40
   140006548:	lea    r9,[rip+0xffffffffffffc7f9]        # 0x140002d48
   14000654f:	test   DWORD PTR [rip+0x8abe],r8d        # 0x14000f014
   140006556:	lea    rcx,[rip+0xffffffffffffc7f3]        # 0x140002d50
   14000655d:	mov    rdx,rsi
   140006560:	cmovne r9,rax
   140006564:	mov    rax,QWORD PTR [rdi]
   140006567:	mov    QWORD PTR [rsp+0x20],rax
   14000656c:	call   0x1400067f8
   140006571:	add    rsi,0x58
   140006575:	add    rdi,0x8
   140006579:	add    rbx,0x58
   14000657d:	dec    rbp
   140006580:	jne    0x14000653e
   140006582:	mov    rbx,QWORD PTR [rsp+0x40]
   140006587:	mov    rbp,QWORD PTR [rsp+0x48]
   14000658c:	mov    rsi,QWORD PTR [rsp+0x50]
   140006591:	add    rsp,0x30
   140006595:	pop    rdi
   140006596:	ret    
   140006597:	int3   
   140006598:	int3   
   140006599:	int3   
   14000659a:	int3   
   14000659b:	int3   
   14000659c:	int3   
   14000659d:	int3   
   14000659e:	int3   
   14000659f:	int3   
   1400065a0:	mov    r11,rsp
   1400065a3:	mov    QWORD PTR [r11+0x18],rbx
   1400065a7:	mov    QWORD PTR [r11+0x20],rsi
   1400065ab:	push   rdi
   1400065ac:	sub    rsp,0x50
   1400065b0:	mov    rbx,rcx
   1400065b3:	test   rcx,rcx
   1400065b6:	je     0x14000667e
   1400065bc:	mov    rsi,rcx
   1400065bf:	lea    rdi,[rip+0xffffffffffffbd92]        # 0x140002358
   1400065c6:	mov    ecx,0x2
   1400065cb:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   1400065ce:	je     0x14000667e
   1400065d4:	and    QWORD PTR [r11+0x10],0x0
   1400065d9:	and    DWORD PTR [rsp+0x60],0x0
   1400065de:	lea    rax,[r11+0x8]
   1400065e2:	mov    QWORD PTR [r11-0x18],rax
   1400065e6:	lea    rax,[r11+0x10]
   1400065ea:	lea    rdx,[rip+0xffffffffffffcf3f]        # 0x140003530
   1400065f1:	mov    QWORD PTR [r11-0x20],rax
   1400065f5:	and    QWORD PTR [r11-0x28],0x0
   1400065fa:	xor    r9d,r9d
   1400065fd:	xor    r8d,r8d
   140006600:	mov    rcx,0xffffffff80000002
   140006607:	mov    DWORD PTR [rsp+0x28],0x20006
   14000660f:	and    DWORD PTR [rsp+0x20],0x0
   140006614:	call   QWORD PTR [rip+0xbe0e]        # 0x140012428
   14000661a:	test   eax,eax
   14000661c:	je     0x140006643
   14000661e:	lea    rdx,[rip+0xffffffffffffcf0b]        # 0x140003530
   140006625:	lea    rcx,[rip+0xffffffffffffca14]        # 0x140003040
   14000662c:	mov    r8d,eax
   14000662f:	call   0x1400068c4
   140006634:	mov    rcx,QWORD PTR [rsp+0x68]
   140006639:	call   QWORD PTR [rip+0xbe29]        # 0x140012468
   14000663f:	xor    al,al
   140006641:	jmp    0x14000666e
   140006643:	mov    rcx,QWORD PTR [rsp+0x68]
   140006648:	mov    rdx,rbx
   14000664b:	call   QWORD PTR [rip+0xbe07]        # 0x140012458
   140006651:	test   eax,eax
   140006653:	je     0x140006661
   140006655:	mov    rdx,rbx
   140006658:	lea    rcx,[rip+0xffffffffffffca51]        # 0x1400030b0
   14000665f:	jmp    0x14000662c
   140006661:	mov    rcx,QWORD PTR [rsp+0x68]
   140006666:	call   QWORD PTR [rip+0xbdfc]        # 0x140012468
   14000666c:	mov    al,0x1
   14000666e:	mov    rbx,QWORD PTR [rsp+0x70]
   140006673:	mov    rsi,QWORD PTR [rsp+0x78]
   140006678:	add    rsp,0x50
   14000667c:	pop    rdi
   14000667d:	ret    
   14000667e:	lea    rdx,[rip+0xffffffffffffcdeb]        # 0x140003470
   140006685:	mov    rcx,0xffffffff80000002
   14000668c:	call   QWORD PTR [rip+0xbdae]        # 0x140012440
   140006692:	cmp    eax,0x2
   140006695:	je     0x14000666c
   140006697:	test   eax,eax
   140006699:	je     0x14000666c
   14000669b:	lea    rdx,[rip+0xffffffffffffcdce]        # 0x140003470
   1400066a2:	lea    rcx,[rip+0xffffffffffffca77]        # 0x140003120
   1400066a9:	mov    r8d,eax
   1400066ac:	call   0x1400068c4
   1400066b1:	jmp    0x14000663f
   1400066b3:	int3   
   1400066b4:	int3   
   1400066b5:	int3   
   1400066b6:	int3   
   1400066b7:	int3   
   1400066b8:	int3   
   1400066b9:	int3   
   1400066ba:	int3   
   1400066bb:	int3   
   1400066bc:	sub    rsp,0x28
   1400066c0:	cmp    ecx,0x2
   1400066c3:	ja     0x1400066d1
   1400066c5:	call   0x140005868
   1400066ca:	mov    eax,0x1
   1400066cf:	jmp    0x1400066d3
   1400066d1:	xor    eax,eax
   1400066d3:	add    rsp,0x28
   1400066d7:	ret    
   1400066d8:	int3   
   1400066d9:	int3   
   1400066da:	int3   
   1400066db:	int3   
   1400066dc:	int3   
   1400066dd:	int3   
   1400066de:	int3   
   1400066df:	int3   
   1400066e0:	rex push rbx
   1400066e2:	push   rbp
   1400066e3:	push   rdi
   1400066e4:	sub    rsp,0x40
   1400066e8:	mov    rax,QWORD PTR [rip+0x5ac1]        # 0x14000c1b0
   1400066ef:	xor    rax,rsp
   1400066f2:	mov    QWORD PTR [rsp+0x38],rax
   1400066f7:	xor    ebp,ebp
   1400066f9:	movzx  edi,r8w
   1400066fd:	mov    rbx,rcx
   140006700:	shl    di,0x4
   140006704:	mov    WORD PTR [rcx],bp
   140006707:	mov    QWORD PTR [rcx+0x8],rbp
   14000670b:	or     di,dx
   14000670e:	je     0x140006773
   140006710:	mov    ecx,0xfffffff5
   140006715:	call   QWORD PTR [rip+0xbde5]        # 0x140012500
   14000671b:	test   rax,rax
   14000671e:	je     0x140006773
   140006720:	xor    eax,eax
   140006722:	mov    ecx,0xfffffff5
   140006727:	mov    QWORD PTR [rsp+0x20],rax
   14000672c:	mov    QWORD PTR [rsp+0x28],rax
   140006731:	mov    DWORD PTR [rsp+0x30],eax
   140006735:	mov    WORD PTR [rsp+0x34],ax
   14000673a:	call   QWORD PTR [rip+0xbdc0]        # 0x140012500
   140006740:	lea    rdx,[rsp+0x20]
   140006745:	mov    rcx,rax
   140006748:	call   QWORD PTR [rip+0xbda2]        # 0x1400124f0
   14000674e:	test   eax,eax
   140006750:	je     0x14000675c
   140006752:	movzx  r8d,WORD PTR [rsp+0x28]
   140006758:	mov    WORD PTR [rbx],r8w
   14000675c:	mov    ecx,0xfffffff5
   140006761:	call   QWORD PTR [rip+0xbd99]        # 0x140012500
   140006767:	movzx  edx,di
   14000676a:	mov    rcx,rax
   14000676d:	call   QWORD PTR [rip+0xbda5]        # 0x140012518
   140006773:	mov    rax,rbx
   140006776:	mov    rcx,QWORD PTR [rsp+0x38]
   14000677b:	xor    rcx,rsp
   14000677e:	call   0x140009a90
   140006783:	add    rsp,0x40
   140006787:	pop    rdi
   140006788:	pop    rbp
   140006789:	pop    rbx
   14000678a:	ret    
   14000678b:	int3   
   14000678c:	int3   
   14000678d:	int3   
   14000678e:	int3   
   14000678f:	int3   
   140006790:	int3   
   140006791:	int3   
   140006792:	int3   
   140006793:	int3   
   140006794:	mov    QWORD PTR [rsp+0x8],rbx
   140006799:	push   rdi
   14000679a:	sub    rsp,0x20
   14000679e:	xor    edi,edi
   1400067a0:	mov    rbx,rcx
   1400067a3:	cmp    WORD PTR [rcx],di
   1400067a6:	je     0x1400067d2
   1400067a8:	mov    ecx,0xfffffff5
   1400067ad:	call   QWORD PTR [rip+0xbd4d]        # 0x140012500
   1400067b3:	test   rax,rax
   1400067b6:	je     0x1400067cf
   1400067b8:	mov    ecx,0xfffffff5
   1400067bd:	call   QWORD PTR [rip+0xbd3d]        # 0x140012500
   1400067c3:	movzx  edx,WORD PTR [rbx]
   1400067c6:	mov    rcx,rax
   1400067c9:	call   QWORD PTR [rip+0xbd49]        # 0x140012518
   1400067cf:	mov    WORD PTR [rbx],di
   1400067d2:	mov    rcx,QWORD PTR [rbx+0x8]
   1400067d6:	test   rcx,rcx
   1400067d9:	je     0x1400067e7
   1400067db:	xor    edx,edx
   1400067dd:	call   QWORD PTR [rip+0xbd05]        # 0x1400124e8
   1400067e3:	mov    QWORD PTR [rbx+0x8],rdi
   1400067e7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400067ec:	add    rsp,0x20
   1400067f0:	pop    rdi
   1400067f1:	ret    
   1400067f2:	int3   
   1400067f3:	int3   
   1400067f4:	int3   
   1400067f5:	int3   
   1400067f6:	int3   
   1400067f7:	int3   
   1400067f8:	mov    rax,rsp
   1400067fb:	mov    QWORD PTR [rax+0x8],rcx
   1400067ff:	mov    QWORD PTR [rax+0x10],rdx
   140006803:	mov    QWORD PTR [rax+0x18],r8
   140006807:	mov    QWORD PTR [rax+0x20],r9
   14000680b:	push   rbx
   14000680c:	push   rdi
   14000680d:	sub    rsp,0x838
   140006814:	mov    rax,QWORD PTR [rip+0x5995]        # 0x14000c1b0
   14000681b:	xor    rax,rsp
   14000681e:	mov    QWORD PTR [rsp+0x820],rax
   140006826:	mov    rbx,rcx
   140006829:	lea    rcx,[rsp+0x22]
   14000682e:	xor    edi,edi
   140006830:	xor    edx,edx
   140006832:	mov    r8d,0x7fe
   140006838:	mov    WORD PTR [rsp+0x20],di
   14000683d:	call   0x14000a286
   140006842:	mov    r8,rbx
   140006845:	mov    ebx,0x3fe
   14000684a:	lea    r9,[rsp+0x858]
   140006852:	lea    rcx,[rsp+0x20]
   140006857:	mov    edx,ebx
   140006859:	call   QWORD PTR [rip+0xbee1]        # 0x140012740
   14000685f:	test   eax,eax
   140006861:	js     0x14000686c
   140006863:	cdqe   
   140006865:	cmp    rax,rbx
   140006868:	ja     0x14000686c
   14000686a:	jne    0x140006874
   14000686c:	mov    WORD PTR [rsp+0x81c],di
   140006874:	lea    rdx,[rsp+0x20]
   140006879:	lea    rcx,[rip+0xffffffffffffc90c]        # 0x14000318c
   140006880:	call   QWORD PTR [rip+0xbdca]        # 0x140012650
   140006886:	mov    rcx,QWORD PTR [rip+0x877b]        # 0x14000f008
   14000688d:	test   rcx,rcx
   140006890:	je     0x1400068a4
   140006892:	lea    r8,[rsp+0x20]
   140006897:	lea    rdx,[rip+0xffffffffffffc8ee]        # 0x14000318c
   14000689e:	call   QWORD PTR [rip+0xbd94]        # 0x140012638
   1400068a4:	mov    rcx,QWORD PTR [rsp+0x820]
   1400068ac:	xor    rcx,rsp
   1400068af:	call   0x140009a90
   1400068b4:	add    rsp,0x838
   1400068bb:	pop    rdi
   1400068bc:	pop    rbx
   1400068bd:	ret    
   1400068be:	int3   
   1400068bf:	int3   
   1400068c0:	int3   
   1400068c1:	int3   
   1400068c2:	int3   
   1400068c3:	int3   
   1400068c4:	mov    rax,rsp
   1400068c7:	mov    QWORD PTR [rax+0x8],rcx
   1400068cb:	mov    QWORD PTR [rax+0x10],rdx
   1400068cf:	mov    QWORD PTR [rax+0x18],r8
   1400068d3:	mov    QWORD PTR [rax+0x20],r9
   1400068d7:	push   rbx
   1400068d8:	push   rdi
   1400068d9:	sub    rsp,0x838
   1400068e0:	mov    rax,QWORD PTR [rip+0x58c9]        # 0x14000c1b0
   1400068e7:	xor    rax,rsp
   1400068ea:	mov    QWORD PTR [rsp+0x820],rax
   1400068f2:	mov    rbx,rcx
   1400068f5:	lea    rcx,[rsp+0x22]
   1400068fa:	xor    edi,edi
   1400068fc:	xor    edx,edx
   1400068fe:	mov    r8d,0x7fe
   140006904:	mov    WORD PTR [rsp+0x20],di
   140006909:	call   0x14000a286
   14000690e:	mov    r8,rbx
   140006911:	mov    ebx,0x3fe
   140006916:	lea    r9,[rsp+0x858]
   14000691e:	lea    rcx,[rsp+0x20]
   140006923:	mov    edx,ebx
   140006925:	call   QWORD PTR [rip+0xbe15]        # 0x140012740
   14000692b:	test   eax,eax
   14000692d:	js     0x140006938
   14000692f:	cdqe   
   140006931:	cmp    rax,rbx
   140006934:	ja     0x140006938
   140006936:	jne    0x140006940
   140006938:	mov    WORD PTR [rsp+0x81c],di
   140006940:	lea    rdx,[rsp+0x20]
   140006945:	lea    rcx,[rip+0xffffffffffffc84c]        # 0x140003198
   14000694c:	call   QWORD PTR [rip+0xbcfe]        # 0x140012650
   140006952:	mov    rcx,QWORD PTR [rip+0x86af]        # 0x14000f008
   140006959:	test   rcx,rcx
   14000695c:	je     0x140006970
   14000695e:	lea    r8,[rsp+0x20]
   140006963:	lea    rdx,[rip+0xffffffffffffc82e]        # 0x140003198
   14000696a:	call   QWORD PTR [rip+0xbcc8]        # 0x140012638
   140006970:	mov    rcx,QWORD PTR [rsp+0x820]
   140006978:	xor    rcx,rsp
   14000697b:	call   0x140009a90
   140006980:	add    rsp,0x838
   140006987:	pop    rdi
   140006988:	pop    rbx
   140006989:	ret    
   14000698a:	int3   
   14000698b:	int3   
   14000698c:	int3   
   14000698d:	int3   
   14000698e:	int3   
   14000698f:	int3   
   140006990:	rex push rbx
   140006992:	push   rbp
   140006993:	push   rsi
   140006994:	push   rdi
   140006995:	push   r14
   140006997:	sub    rsp,0x220
   14000699e:	mov    rax,QWORD PTR [rip+0x580b]        # 0x14000c1b0
   1400069a5:	xor    rax,rsp
   1400069a8:	mov    QWORD PTR [rsp+0x210],rax
   1400069b0:	mov    rbx,rdx
   1400069b3:	mov    rdi,rcx
   1400069b6:	lea    rdx,[rsp+0x30]
   1400069bb:	mov    rcx,r9
   1400069be:	mov    sil,r8b
   1400069c1:	call   QWORD PTR [rip+0xbb41]        # 0x140012508
   1400069c7:	xor    r14d,r14d
   1400069ca:	test   eax,eax
   1400069cc:	jne    0x1400069ed
   1400069ce:	call   QWORD PTR [rip+0xbb24]        # 0x1400124f8
   1400069d4:	lea    rcx,[rip+0xffffffffffffc855]        # 0x140003230
   1400069db:	mov    rdx,QWORD PTR [rdi]
   1400069de:	mov    r8d,eax
   1400069e1:	call   0x1400068c4
   1400069e6:	xor    al,al
   1400069e8:	jmp    0x140006ade
   1400069ed:	mov    ebp,0x64
   1400069f2:	test   sil,sil
   1400069f5:	jne    0x140006a50
   1400069f7:	lea    rax,[rsp+0x70]
   1400069fc:	lea    r8,[rsp+0x30]
   140006a01:	lea    edx,[rbp-0x63]
   140006a04:	xor    r9d,r9d
   140006a07:	mov    ecx,0x400
   140006a0c:	mov    DWORD PTR [rsp+0x28],ebp
   140006a10:	mov    QWORD PTR [rsp+0x20],rax
   140006a15:	call   QWORD PTR [rip+0xbb05]        # 0x140012520
   140006a1b:	test   eax,eax
   140006a1d:	jne    0x140006a2e
   140006a1f:	call   QWORD PTR [rip+0xbad3]        # 0x1400124f8
   140006a25:	lea    rcx,[rip+0xffffffffffffc884]        # 0x1400032b0
   140006a2c:	jmp    0x1400069db
   140006a2e:	lea    r8,[rsp+0x70]
   140006a33:	mov    rdx,rbp
   140006a36:	mov    rcx,rbx
   140006a39:	call   0x140004880
   140006a3e:	lea    r8,[rip+0xffffffffffffc023]        # 0x140002a68
   140006a45:	mov    rdx,rbp
   140006a48:	mov    rcx,rbx
   140006a4b:	call   0x140004880
   140006a50:	xor    r9d,r9d
   140006a53:	lea    rax,[rsp+0x140]
   140006a5b:	lea    r8,[rsp+0x30]
   140006a60:	lea    edx,[r9+0xc]
   140006a64:	mov    ecx,0x400
   140006a69:	mov    DWORD PTR [rsp+0x28],ebp
   140006a6d:	mov    QWORD PTR [rsp+0x20],rax
   140006a72:	call   QWORD PTR [rip+0xba98]        # 0x140012510
   140006a78:	test   eax,eax
   140006a7a:	jne    0x140006a9d
   140006a7c:	call   QWORD PTR [rip+0xba76]        # 0x1400124f8
   140006a82:	mov    rdx,QWORD PTR [rdi]
   140006a85:	lea    rcx,[rip+0xffffffffffffc894]        # 0x140003320
   140006a8c:	mov    r8d,eax
   140006a8f:	call   0x1400068c4
   140006a94:	mov    WORD PTR [rbx],r14w
   140006a98:	jmp    0x1400069e6
   140006a9d:	lea    r8,[rsp+0x140]
   140006aa5:	mov    rdx,rbp
   140006aa8:	mov    rcx,rbx
   140006aab:	call   0x140004880
   140006ab0:	movzx  r9d,WORD PTR [rsp+0x3e]
   140006ab6:	lea    r8,[rip+0xffffffffffffc8d3]        # 0x140003390
   140006abd:	lea    rcx,[rsp+0x40]
   140006ac2:	mov    edx,0x14
   140006ac7:	call   0x14000494c
   140006acc:	lea    r8,[rsp+0x40]
   140006ad1:	mov    rdx,rbp
   140006ad4:	mov    rcx,rbx
   140006ad7:	call   0x140004880
   140006adc:	mov    al,0x1
   140006ade:	mov    rcx,QWORD PTR [rsp+0x210]
   140006ae6:	xor    rcx,rsp
   140006ae9:	call   0x140009a90
   140006aee:	add    rsp,0x220
   140006af5:	pop    r14
   140006af7:	pop    rdi
   140006af8:	pop    rsi
   140006af9:	pop    rbp
   140006afa:	pop    rbx
   140006afb:	ret    
   140006afc:	int3   
   140006afd:	int3   
   140006afe:	int3   
   140006aff:	int3   
   140006b00:	int3   
   140006b01:	int3   
   140006b02:	int3   
   140006b03:	int3   
   140006b04:	rex push rbx
   140006b06:	sub    rsp,0x20
   140006b0a:	cmp    QWORD PTR [rcx+0x20],0x8
   140006b0f:	mov    rbx,rcx
   140006b12:	jb     0x140006b1e
   140006b14:	mov    rcx,QWORD PTR [rcx+0x8]
   140006b18:	call   QWORD PTR [rip+0xba42]        # 0x140012560
   140006b1e:	xor    eax,eax
   140006b20:	mov    QWORD PTR [rbx+0x20],0x7
   140006b28:	mov    QWORD PTR [rbx+0x18],rax
   140006b2c:	mov    WORD PTR [rbx+0x8],ax
   140006b30:	add    rsp,0x20
   140006b34:	pop    rbx
   140006b35:	ret    
   140006b36:	int3   
   140006b37:	int3   
   140006b38:	int3   
   140006b39:	int3   
   140006b3a:	int3   
   140006b3b:	int3   
   140006b3c:	mov    QWORD PTR [rsp+0x8],rbx
   140006b41:	mov    QWORD PTR [rsp+0x10],rbp
   140006b46:	mov    QWORD PTR [rsp+0x18],rsi
   140006b4b:	push   rdi
   140006b4c:	push   r14
   140006b4e:	push   r15
   140006b50:	sub    rsp,0x20
   140006b54:	cmp    QWORD PTR [rcx+0x20],0x8
   140006b59:	mov    r15,r8
   140006b5c:	mov    rsi,rdx
   140006b5f:	mov    rdi,rcx
   140006b62:	lea    rbx,[rcx+0x8]
   140006b66:	jb     0x140006b6d
   140006b68:	mov    rax,QWORD PTR [rbx]
   140006b6b:	jmp    0x140006b70
   140006b6d:	mov    rax,rbx
   140006b70:	cmp    rdx,rax
   140006b73:	jb     0x140006bb4
   140006b75:	cmp    QWORD PTR [rcx+0x20],0x8
   140006b7a:	jb     0x140006b81
   140006b7c:	mov    rcx,QWORD PTR [rbx]
   140006b7f:	jmp    0x140006b84
   140006b81:	mov    rcx,rbx
   140006b84:	mov    rax,QWORD PTR [rdi+0x18]
   140006b88:	lea    rcx,[rcx+rax*2]
   140006b8c:	cmp    rcx,rdx
   140006b8f:	jbe    0x140006bb4
   140006b91:	cmp    QWORD PTR [rdi+0x20],0x8
   140006b96:	jb     0x140006b9b
   140006b98:	mov    rbx,QWORD PTR [rbx]
   140006b9b:	sub    rsi,rbx
   140006b9e:	mov    r9,r8
   140006ba1:	mov    rdx,rdi
   140006ba4:	sar    rsi,1
   140006ba7:	mov    rcx,rdi
   140006baa:	mov    r8,rsi
   140006bad:	call   0x140006c20
   140006bb2:	jmp    0x140006c00
   140006bb4:	mov    rdx,r8
   140006bb7:	mov    rcx,rdi
   140006bba:	call   0x140006d00
   140006bbf:	xor    ebp,ebp
   140006bc1:	test   al,al
   140006bc3:	je     0x140006bfd
   140006bc5:	mov    rdx,QWORD PTR [rdi+0x20]
   140006bc9:	cmp    rdx,0x8
   140006bcd:	jb     0x140006bd4
   140006bcf:	mov    rcx,QWORD PTR [rbx]
   140006bd2:	jmp    0x140006bd7
   140006bd4:	mov    rcx,rbx
   140006bd7:	lea    r14,[r15+r15*1]
   140006bdb:	add    rdx,rdx
   140006bde:	mov    r8,rsi
   140006be1:	mov    r9,r14
   140006be4:	call   QWORD PTR [rip+0xbb2e]        # 0x140012718
   140006bea:	cmp    QWORD PTR [rdi+0x20],0x8
   140006bef:	mov    QWORD PTR [rdi+0x18],r15
   140006bf3:	jb     0x140006bf8
   140006bf5:	mov    rbx,QWORD PTR [rbx]
   140006bf8:	mov    WORD PTR [r14+rbx*1],bp
   140006bfd:	mov    rax,rdi
   140006c00:	mov    rbx,QWORD PTR [rsp+0x40]
   140006c05:	mov    rbp,QWORD PTR [rsp+0x48]
   140006c0a:	mov    rsi,QWORD PTR [rsp+0x50]
   140006c0f:	add    rsp,0x20
   140006c13:	pop    r15
   140006c15:	pop    r14
   140006c17:	pop    rdi
   140006c18:	ret    
   140006c19:	int3   
   140006c1a:	int3   
   140006c1b:	int3   
   140006c1c:	int3   
   140006c1d:	int3   
   140006c1e:	int3   
   140006c1f:	int3   
   140006c20:	mov    QWORD PTR [rsp+0x8],rbx
   140006c25:	mov    QWORD PTR [rsp+0x10],rbp
   140006c2a:	mov    QWORD PTR [rsp+0x18],rsi
   140006c2f:	push   rdi
   140006c30:	push   r14
   140006c32:	push   r15
   140006c34:	sub    rsp,0x20
   140006c38:	mov    r14,r9
   140006c3b:	mov    rbp,r8
   140006c3e:	mov    rsi,rdx
   140006c41:	mov    rbx,rcx
   140006c44:	cmp    QWORD PTR [rdx+0x18],r8
   140006c48:	jae    0x140006c4f
   140006c4a:	call   0x14000959c
   140006c4f:	mov    rdi,QWORD PTR [rsi+0x18]
   140006c53:	mov    rcx,rbx
   140006c56:	sub    rdi,rbp
   140006c59:	cmp    r14,rdi
   140006c5c:	cmovb  rdi,r14
   140006c60:	cmp    rbx,rsi
   140006c63:	jne    0x140006c81
   140006c65:	lea    rdx,[rdi+rbp*1]
   140006c69:	or     r8,0xffffffffffffffff
   140006c6d:	call   0x140006d7c
   140006c72:	mov    r8,rbp
   140006c75:	xor    edx,edx
   140006c77:	mov    rcx,rbx
   140006c7a:	call   0x140006d7c
   140006c7f:	jmp    0x140006cde
   140006c81:	mov    rdx,rdi
   140006c84:	call   0x140006d00
   140006c89:	xor    r15d,r15d
   140006c8c:	test   al,al
   140006c8e:	je     0x140006cde
   140006c90:	cmp    QWORD PTR [rsi+0x20],0x8
   140006c95:	jb     0x140006c9d
   140006c97:	mov    rax,QWORD PTR [rsi+0x8]
   140006c9b:	jmp    0x140006ca1
   140006c9d:	lea    rax,[rsi+0x8]
   140006ca1:	mov    rdx,QWORD PTR [rbx+0x20]
   140006ca5:	lea    rsi,[rbx+0x8]
   140006ca9:	cmp    rdx,0x8
   140006cad:	jb     0x140006cb4
   140006caf:	mov    rcx,QWORD PTR [rsi]
   140006cb2:	jmp    0x140006cb7
   140006cb4:	mov    rcx,rsi
   140006cb7:	lea    r14,[rdi+rdi*1]
   140006cbb:	lea    r8,[rax+rbp*2]
   140006cbf:	add    rdx,rdx
   140006cc2:	mov    r9,r14
   140006cc5:	call   QWORD PTR [rip+0xba4d]        # 0x140012718
   140006ccb:	cmp    QWORD PTR [rbx+0x20],0x8
   140006cd0:	mov    QWORD PTR [rbx+0x18],rdi
   140006cd4:	jb     0x140006cd9
   140006cd6:	mov    rsi,QWORD PTR [rsi]
   140006cd9:	mov    WORD PTR [r14+rsi*1],r15w
   140006cde:	mov    rbp,QWORD PTR [rsp+0x48]
   140006ce3:	mov    rsi,QWORD PTR [rsp+0x50]
   140006ce8:	mov    rax,rbx
   140006ceb:	mov    rbx,QWORD PTR [rsp+0x40]
   140006cf0:	add    rsp,0x20
   140006cf4:	pop    r15
   140006cf6:	pop    r14
   140006cf8:	pop    rdi
   140006cf9:	ret    
   140006cfa:	int3   
   140006cfb:	int3   
   140006cfc:	int3   
   140006cfd:	int3   
   140006cfe:	int3   
   140006cff:	int3   
   140006d00:	mov    QWORD PTR [rsp+0x8],rbx
   140006d05:	mov    QWORD PTR [rsp+0x10],rsi
   140006d0a:	push   rdi
   140006d0b:	sub    rsp,0x20
   140006d0f:	movabs rax,0x7ffffffffffffffe
   140006d19:	mov    rsi,rdx
   140006d1c:	mov    rdi,rcx
   140006d1f:	cmp    rdx,rax
   140006d22:	jbe    0x140006d29
   140006d24:	call   0x14000951c
   140006d29:	xor    ebx,ebx
   140006d2b:	cmp    QWORD PTR [rdi+0x20],rsi
   140006d2f:	jae    0x140006d42
   140006d31:	mov    r8,QWORD PTR [rdi+0x18]
   140006d35:	mov    rdx,rsi
   140006d38:	mov    rcx,rdi
   140006d3b:	call   0x140006e40
   140006d40:	jmp    0x140006d5f
   140006d42:	test   rsi,rsi
   140006d45:	jne    0x140006d62
   140006d47:	cmp    QWORD PTR [rdi+0x20],0x8
   140006d4c:	mov    QWORD PTR [rdi+0x18],rbx
   140006d50:	jb     0x140006d58
   140006d52:	mov    rdi,QWORD PTR [rdi+0x8]
   140006d56:	jmp    0x140006d5c
   140006d58:	add    rdi,0x8
   140006d5c:	mov    WORD PTR [rdi],bx
   140006d5f:	test   rsi,rsi
   140006d62:	mov    rbx,QWORD PTR [rsp+0x30]
   140006d67:	mov    rsi,QWORD PTR [rsp+0x38]
   140006d6c:	setne  al
   140006d6f:	add    rsp,0x20
   140006d73:	pop    rdi
   140006d74:	ret    
   140006d75:	int3   
   140006d76:	int3   
   140006d77:	int3   
   140006d78:	int3   
   140006d79:	int3   
   140006d7a:	int3   
   140006d7b:	int3   
   140006d7c:	mov    rax,rsp
   140006d7f:	mov    QWORD PTR [rax+0x8],rbx
   140006d83:	mov    QWORD PTR [rax+0x10],rbp
   140006d87:	mov    QWORD PTR [rax+0x18],rsi
   140006d8b:	mov    QWORD PTR [rax+0x20],rdi
   140006d8f:	push   r14
   140006d91:	sub    rsp,0x20
   140006d95:	mov    rsi,r8
   140006d98:	mov    r14,rdx
   140006d9b:	mov    rdi,rcx
   140006d9e:	cmp    QWORD PTR [rcx+0x18],rdx
   140006da2:	jae    0x140006da9
   140006da4:	call   0x14000959c
   140006da9:	mov    r9,QWORD PTR [rdi+0x18]
   140006dad:	sub    r9,r14
   140006db0:	cmp    r9,rsi
   140006db3:	cmovb  rsi,r9
   140006db7:	xor    ebp,ebp
   140006db9:	test   rsi,rsi
   140006dbc:	je     0x140006e1a
   140006dbe:	mov    rdx,QWORD PTR [rdi+0x20]
   140006dc2:	lea    rbx,[rdi+0x8]
   140006dc6:	cmp    rdx,0x8
   140006dca:	jb     0x140006dd1
   140006dcc:	mov    r8,QWORD PTR [rbx]
   140006dcf:	jmp    0x140006dd4
   140006dd1:	mov    r8,rbx
   140006dd4:	cmp    rdx,0x8
   140006dd8:	jb     0x140006ddf
   140006dda:	mov    rcx,QWORD PTR [rbx]
   140006ddd:	jmp    0x140006de2
   140006ddf:	mov    rcx,rbx
   140006de2:	lea    rax,[r14+rsi*1]
   140006de6:	sub    r9,rsi
   140006de9:	sub    rdx,r14
   140006dec:	lea    r8,[r8+rax*2]
   140006df0:	lea    rcx,[rcx+r14*2]
   140006df4:	add    r9,r9
   140006df7:	add    rdx,rdx
   140006dfa:	call   QWORD PTR [rip+0xb810]        # 0x140012610
   140006e00:	mov    r11,QWORD PTR [rdi+0x18]
   140006e04:	sub    r11,rsi
   140006e07:	cmp    QWORD PTR [rdi+0x20],0x8
   140006e0c:	mov    QWORD PTR [rdi+0x18],r11
   140006e10:	jb     0x140006e15
   140006e12:	mov    rbx,QWORD PTR [rbx]
   140006e15:	mov    WORD PTR [rbx+r11*2],bp
   140006e1a:	mov    rbx,QWORD PTR [rsp+0x30]
   140006e1f:	mov    rbp,QWORD PTR [rsp+0x38]
   140006e24:	mov    rsi,QWORD PTR [rsp+0x40]
   140006e29:	mov    rax,rdi
   140006e2c:	mov    rdi,QWORD PTR [rsp+0x48]
   140006e31:	add    rsp,0x20
   140006e35:	pop    r14
   140006e37:	ret    
   140006e38:	int3   
   140006e39:	int3   
   140006e3a:	int3   
   140006e3b:	int3   
   140006e3c:	int3   
   140006e3d:	int3   
   140006e3e:	int3   
   140006e3f:	int3   
   140006e40:	mov    rax,rsp
   140006e43:	mov    QWORD PTR [rax+0x18],r8
   140006e47:	mov    QWORD PTR [rax+0x10],rdx
   140006e4b:	mov    QWORD PTR [rax+0x8],rcx
   140006e4f:	push   rbx
   140006e50:	push   rsi
   140006e51:	push   rdi
   140006e52:	push   r14
   140006e54:	push   r15
   140006e56:	sub    rsp,0x60
   140006e5a:	mov    QWORD PTR [rax-0x60],0xfffffffffffffffe
   140006e62:	mov    r14,r8
   140006e65:	mov    rdi,rcx
   140006e68:	mov    rbx,rdx
   140006e6b:	or     rbx,0x7
   140006e6f:	movabs r9,0x7ffffffffffffffe
   140006e79:	cmp    rbx,r9
   140006e7c:	jbe    0x140006e83
   140006e7e:	mov    rbx,rdx
   140006e81:	jmp    0x140006eae
   140006e83:	mov    r8,QWORD PTR [rcx+0x20]
   140006e87:	mov    rcx,r8
   140006e8a:	shr    rcx,1
   140006e8d:	movabs rax,0xaaaaaaaaaaaaaaab
   140006e97:	mul    rbx
   140006e9a:	shr    rdx,1
   140006e9d:	cmp    rdx,rcx
   140006ea0:	jae    0x140006eae
   140006ea2:	sub    r9,rcx
   140006ea5:	cmp    r8,r9
   140006ea8:	ja     0x140006eae
   140006eaa:	lea    rbx,[rcx+r8*1]
   140006eae:	lea    rcx,[rbx+0x1]
   140006eb2:	xor    esi,esi
   140006eb4:	test   rcx,rcx
   140006eb7:	jne    0x140006ebd
   140006eb9:	mov    ecx,esi
   140006ebb:	jmp    0x140006f05
   140006ebd:	xor    edx,edx
   140006ebf:	or     rax,0xffffffffffffffff
   140006ec3:	div    rcx
   140006ec6:	cmp    rax,0x2
   140006eca:	jae    0x140006f05
   140006ecc:	mov    QWORD PTR [rsp+0xa8],rsi
   140006ed4:	lea    rdx,[rsp+0xa8]
   140006edc:	lea    rcx,[rsp+0x30]
   140006ee1:	call   QWORD PTR [rip+0xb841]        # 0x140012728
   140006ee7:	nop
   140006ee8:	lea    rax,[rip+0xffffffffffffcdb1]        # 0x140003ca0
   140006eef:	mov    QWORD PTR [rsp+0x30],rax
   140006ef4:	lea    rdx,[rip+0x46b5]        # 0x14000b5b0
   140006efb:	lea    rcx,[rsp+0x30]
   140006f00:	call   0x140009bd6
   140006f05:	add    rcx,rcx
   140006f08:	call   QWORD PTR [rip+0xb65a]        # 0x140012568
   140006f0e:	mov    r15,rax
   140006f11:	mov    QWORD PTR [rsp+0x20],rax
   140006f16:	jmp    0x140006f37
   140006f18:	xor    esi,esi
   140006f1a:	mov    rdi,QWORD PTR [rsp+0x90]
   140006f22:	mov    r14,QWORD PTR [rsp+0xa0]
   140006f2a:	mov    rbx,QWORD PTR [rsp+0xa8]
   140006f32:	mov    r15,QWORD PTR [rsp+0x20]
   140006f37:	test   r14,r14
   140006f3a:	je     0x140006f62
   140006f3c:	cmp    QWORD PTR [rdi+0x20],0x8
   140006f41:	jb     0x140006f49
   140006f43:	mov    r8,QWORD PTR [rdi+0x8]
   140006f47:	jmp    0x140006f4d
   140006f49:	lea    r8,[rdi+0x8]
   140006f4d:	lea    r9,[r14+r14*1]
   140006f51:	lea    rdx,[rbx*2+0x2]
   140006f59:	mov    rcx,r15
   140006f5c:	call   QWORD PTR [rip+0xb7b6]        # 0x140012718
   140006f62:	cmp    QWORD PTR [rdi+0x20],0x8
   140006f67:	jb     0x140006f73
   140006f69:	mov    rcx,QWORD PTR [rdi+0x8]
   140006f6d:	call   QWORD PTR [rip+0xb5ed]        # 0x140012560
   140006f73:	lea    rax,[rdi+0x8]
   140006f77:	mov    QWORD PTR [rax],r15
   140006f7a:	mov    QWORD PTR [rdi+0x20],rbx
   140006f7e:	mov    QWORD PTR [rdi+0x18],r14
   140006f82:	cmp    rbx,0x8
   140006f86:	cmovae rax,r15
   140006f8a:	mov    WORD PTR [rax+r14*2],si
   140006f8f:	add    rsp,0x60
   140006f93:	pop    r15
   140006f95:	pop    r14
   140006f97:	pop    rdi
   140006f98:	pop    rsi
   140006f99:	pop    rbx
   140006f9a:	ret    
   140006f9b:	int3   
   140006f9c:	int3   
   140006f9d:	int3   
   140006f9e:	int3   
   140006f9f:	int3   
   140006fa0:	int3   
   140006fa1:	int3   
   140006fa2:	int3   
   140006fa3:	int3   
   140006fa4:	mov    QWORD PTR [rsp+0x8],rbx
   140006fa9:	mov    QWORD PTR [rsp+0x10],rbp
   140006fae:	mov    QWORD PTR [rsp+0x18],rsi
   140006fb3:	push   rdi
   140006fb4:	push   r14
   140006fb6:	push   r15
   140006fb8:	sub    rsp,0x70
   140006fbc:	movzx  r9d,BYTE PTR [r8+0xe]
   140006fc1:	movzx  eax,BYTE PTR [r8+0xf]
   140006fc6:	movzx  r10d,BYTE PTR [r8+0xd]
   140006fcb:	movzx  r11d,BYTE PTR [r8+0xc]
   140006fd0:	mov    DWORD PTR [rsp+0x68],eax
   140006fd4:	mov    DWORD PTR [rsp+0x60],r9d
   140006fd9:	mov    r14,r8
   140006fdc:	mov    DWORD PTR [rsp+0x58],r10d
   140006fe1:	mov    DWORD PTR [rsp+0x50],r11d
   140006fe6:	movzx  ebx,BYTE PTR [r14+0x9]
   140006feb:	movzx  edi,BYTE PTR [r14+0x8]
   140006ff0:	movzx  esi,WORD PTR [r14+0x6]
   140006ff5:	movzx  ebp,WORD PTR [r14+0x4]
   140006ffa:	mov    r9d,DWORD PTR [r14]
   140006ffd:	mov    r15,rcx
   140007000:	movzx  ecx,BYTE PTR [r8+0xb]
   140007005:	movzx  r8d,BYTE PTR [r8+0xa]
   14000700a:	mov    edx,edx
   14000700c:	mov    DWORD PTR [rsp+0x48],ecx
   140007010:	mov    DWORD PTR [rsp+0x40],r8d
   140007015:	mov    DWORD PTR [rsp+0x38],ebx
   140007019:	mov    DWORD PTR [rsp+0x30],edi
   14000701d:	lea    r8,[rip+0xffffffffffffcccc]        # 0x140003cf0
   140007024:	mov    rcx,r15
   140007027:	mov    DWORD PTR [rsp+0x28],esi
   14000702b:	mov    DWORD PTR [rsp+0x20],ebp
   14000702f:	call   0x14000494c
   140007034:	lea    r11,[rsp+0x70]
   140007039:	mov    rbx,QWORD PTR [r11+0x20]
   14000703d:	mov    rbp,QWORD PTR [r11+0x28]
   140007041:	mov    rsi,QWORD PTR [r11+0x30]
   140007045:	mov    rsp,r11
   140007048:	pop    r15
   14000704a:	pop    r14
   14000704c:	pop    rdi
   14000704d:	ret    
   14000704e:	int3   
   14000704f:	int3   
   140007050:	int3   
   140007051:	int3   
   140007052:	int3   
   140007053:	int3   
   140007054:	rex push rbx
   140007056:	push   rbp
   140007057:	push   rsi
   140007058:	push   rdi
   140007059:	push   r12
   14000705b:	push   r13
   14000705d:	push   r14
   14000705f:	push   r15
   140007061:	sub    rsp,0x48
   140007065:	mov    rbx,QWORD PTR [rip+0x7fc4]        # 0x14000f030
   14000706c:	xor    edi,edi
   14000706e:	mov    r13b,r9b
   140007071:	movzx  r14d,r8w
   140007075:	movzx  ebp,dx
   140007078:	mov    r15,rcx
   14000707b:	mov    esi,edi
   14000707d:	movzx  r12d,di
   140007081:	test   rbx,rbx
   140007084:	jne    0x14000715b
   14000708a:	lea    ecx,[rdi+0x10]
   14000708d:	call   QWORD PTR [rip+0xb59d]        # 0x140012630
   140007093:	mov    rbx,rax
   140007096:	mov    QWORD PTR [rip+0x7f93],rax        # 0x14000f030
   14000709d:	test   rax,rax
   1400070a0:	je     0x140007294
   1400070a6:	movups xmm0,XMMWORD PTR [rip+0xffffffffffffcc2b]        # 0x140003cd8
   1400070ad:	mov    ecx,0x48
   1400070b2:	mov    QWORD PTR [rax+0x8],rax
   1400070b6:	mov    QWORD PTR [rax],rax
   1400070b9:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400070bf:	call   QWORD PTR [rip+0xb56b]        # 0x140012630
   1400070c5:	test   rax,rax
   1400070c8:	je     0x14000715b
   1400070ce:	lea    rcx,[rsp+0x30]
   1400070d3:	xor    r8d,r8d
   1400070d6:	or     edx,0xffffffff
   1400070d9:	xor    r9d,r9d
   1400070dc:	mov    QWORD PTR [rsp+0x20],rax
   1400070e1:	call   0x14000738c
   1400070e6:	mov    rbx,QWORD PTR [rip+0x7f43]        # 0x14000f030
   1400070ed:	mov    rdi,rax
   1400070f0:	test   rax,rax
   1400070f3:	je     0x140007159
   1400070f5:	mov    rax,QWORD PTR [rbx+0x8]
   1400070f9:	mov    QWORD PTR [rdi],rbx
   1400070fc:	mov    ecx,0x16
   140007101:	mov    QWORD PTR [rdi+0x8],rax
   140007105:	mov    QWORD PTR [rax],rdi
   140007108:	mov    QWORD PTR [rbx+0x8],rdi
   14000710c:	call   QWORD PTR [rip+0xb51e]        # 0x140012630
   140007112:	mov    QWORD PTR [rdi+0x10],rax
   140007116:	test   rax,rax
   140007119:	je     0x14000712f
   14000711b:	lea    r8,[rip+0xffffffffffffcc36]        # 0x140003d58
   140007122:	mov    edx,0xb
   140007127:	mov    rcx,rax
   14000712a:	call   0x140004808
   14000712f:	mov    ecx,0xe
   140007134:	call   QWORD PTR [rip+0xb4f6]        # 0x140012630
   14000713a:	mov    QWORD PTR [rdi+0x38],rax
   14000713e:	xor    edi,edi
   140007140:	test   rax,rax
   140007143:	je     0x14000715b
   140007145:	lea    r8,[rip+0xffffffffffffcc24]        # 0x140003d70
   14000714c:	lea    edx,[rdi+0x7]
   14000714f:	mov    rcx,rax
   140007152:	call   0x140004808
   140007157:	jmp    0x14000715b
   140007159:	xor    edi,edi
   14000715b:	mov    r10,QWORD PTR [rbx]
   14000715e:	cmp    rbx,r10
   140007161:	je     0x1400071eb
   140007167:	mov    r11d,0x1
   14000716d:	mov    rax,r10
   140007170:	mov    r10,QWORD PTR [r10]
   140007173:	movzx  edx,di
   140007176:	mov    r9,QWORD PTR [rax+0x1c]
   14000717a:	cmp    r9,QWORD PTR [r15]
   14000717d:	jne    0x140007191
   14000717f:	mov    r9,QWORD PTR [rax+0x24]
   140007183:	cmp    r9,QWORD PTR [r15+0x8]
   140007187:	jne    0x140007191
   140007189:	mov    ecx,edi
   14000718b:	or     r8d,0xffffffff
   14000718f:	jmp    0x14000719c
   140007191:	sbb    ecx,ecx
   140007193:	mov    r8d,0xffffffff
   140007199:	sbb    ecx,r8d
   14000719c:	test   ecx,ecx
   14000719e:	jne    0x1400071d9
   1400071a0:	cmp    WORD PTR [rax+0x40],bp
   1400071a4:	jne    0x1400071a9
   1400071a6:	mov    edx,r11d
   1400071a9:	cmp    WORD PTR [rax+0x42],r14w
   1400071ae:	jne    0x1400071b4
   1400071b0:	add    dx,r11w
   1400071b4:	cmp    dx,0x2
   1400071b8:	je     0x140007294
   1400071be:	cmp    dx,r12w
   1400071c2:	jle    0x1400071cb
   1400071c4:	movzx  r12d,dx
   1400071c8:	mov    rsi,rax
   1400071cb:	cmp    WORD PTR [rax+0x40],r8w
   1400071d0:	jne    0x1400071d9
   1400071d2:	test   rsi,rsi
   1400071d5:	cmove  rsi,rax
   1400071d9:	cmp    rbx,r10
   1400071dc:	jne    0x14000716d
   1400071de:	test   rsi,rsi
   1400071e1:	je     0x1400071eb
   1400071e3:	mov    rax,rsi
   1400071e6:	jmp    0x140007294
   1400071eb:	movups xmm0,XMMWORD PTR [r15]
   1400071ef:	lea    rcx,[rsp+0x30]
   1400071f4:	movzx  r9d,bp
   1400071f8:	mov    r8b,r13b
   1400071fb:	movzx  edx,r14w
   1400071ff:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140007205:	call   0x140008494
   14000720a:	mov    rbx,rax
   14000720d:	test   rax,rax
   140007210:	jne    0x140007291
   140007212:	movups xmm0,XMMWORD PTR [r15]
   140007216:	lea    ecx,[rax+0x48]
   140007219:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14000721f:	call   QWORD PTR [rip+0xb40b]        # 0x140012630
   140007225:	test   rax,rax
   140007228:	jne    0x14000722f
   14000722a:	mov    rbx,rdi
   14000722d:	jmp    0x140007291
   14000722f:	lea    rcx,[rsp+0x30]
   140007234:	mov    r9b,r13b
   140007237:	movzx  r8d,r14w
   14000723b:	movzx  edx,bp
   14000723e:	mov    QWORD PTR [rsp+0x20],rax
   140007243:	call   0x14000738c
   140007248:	mov    rbx,rax
   14000724b:	test   rax,rax
   14000724e:	je     0x140007291
   140007250:	mov    ecx,0x10
   140007255:	call   QWORD PTR [rip+0xb3d5]        # 0x140012630
   14000725b:	mov    QWORD PTR [rbx+0x10],rax
   14000725f:	test   rax,rax
   140007262:	je     0x140007278
   140007264:	lea    r8,[rip+0xffffffffffffcb15]        # 0x140003d80
   14000726b:	mov    edx,0x8
   140007270:	mov    rcx,rax
   140007273:	call   0x140004808
   140007278:	mov    rcx,QWORD PTR [rip+0x7db1]        # 0x14000f030
   14000727f:	mov    rax,QWORD PTR [rcx+0x8]
   140007283:	mov    QWORD PTR [rbx],rcx
   140007286:	mov    QWORD PTR [rbx+0x8],rax
   14000728a:	mov    QWORD PTR [rax],rbx
   14000728d:	mov    QWORD PTR [rcx+0x8],rbx
   140007291:	mov    rax,rbx
   140007294:	add    rsp,0x48
   140007298:	pop    r15
   14000729a:	pop    r14
   14000729c:	pop    r13
   14000729e:	pop    r12
   1400072a0:	pop    rdi
   1400072a1:	pop    rsi
   1400072a2:	pop    rbp
   1400072a3:	pop    rbx
   1400072a4:	ret    
   1400072a5:	int3   
   1400072a6:	int3   
   1400072a7:	int3   
   1400072a8:	int3   
   1400072a9:	int3   
   1400072aa:	int3   
   1400072ab:	int3   
   1400072ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400072b1:	mov    QWORD PTR [rsp+0x10],rbp
   1400072b6:	mov    QWORD PTR [rsp+0x18],rsi
   1400072bb:	push   rdi
   1400072bc:	push   r12
   1400072be:	push   r13
   1400072c0:	push   r14
   1400072c2:	push   r15
   1400072c4:	sub    rsp,0x20
   1400072c8:	mov    rdi,QWORD PTR [rcx]
   1400072cb:	mov    r15d,r9d
   1400072ce:	mov    r12d,r8d
   1400072d1:	mov    rbp,rdx
   1400072d4:	mov    r14,rcx
   1400072d7:	cmp    rcx,rdi
   1400072da:	je     0x140007369
   1400072e0:	mov    ecx,0x28
   1400072e5:	mov    r13,rdi
   1400072e8:	mov    rdi,QWORD PTR [rdi]
   1400072eb:	call   QWORD PTR [rip+0xb33f]        # 0x140012630
   1400072f1:	mov    rbx,rax
   1400072f4:	test   rax,rax
   1400072f7:	je     0x140007369
   1400072f9:	xor    edx,edx
   1400072fb:	mov    rcx,rax
   1400072fe:	lea    r8d,[rdx+0x28]
   140007302:	call   0x14000a286
   140007307:	or     rsi,0xffffffffffffffff
   14000730b:	xor    eax,eax
   14000730d:	mov    DWORD PTR [rbx+0x1c],r12d
   140007311:	mov    DWORD PTR [rbx+0x20],r15d
   140007315:	inc    rsi
   140007318:	cmp    WORD PTR [rbp+rsi*2+0x0],ax
   14000731d:	jne    0x140007315
   14000731f:	inc    rsi
   140007322:	lea    rcx,[rsi+rsi*1]
   140007326:	call   QWORD PTR [rip+0xb304]        # 0x140012630
   14000732c:	mov    QWORD PTR [rbx+0x10],rax
   140007330:	test   rax,rax
   140007333:	je     0x140007360
   140007335:	mov    r8,rbp
   140007338:	mov    rdx,rsi
   14000733b:	mov    rcx,rax
   14000733e:	call   0x140004808
   140007343:	mov    r11,QWORD PTR [r13+0x30]
   140007347:	mov    rax,QWORD PTR [r11+0x8]
   14000734b:	mov    QWORD PTR [rbx],r11
   14000734e:	mov    QWORD PTR [rbx+0x8],rax
   140007352:	mov    QWORD PTR [rax],rbx
   140007355:	mov    QWORD PTR [r11+0x8],rbx
   140007359:	cmp    r14,rdi
   14000735c:	jne    0x1400072e0
   14000735e:	jmp    0x140007369
   140007360:	mov    rcx,rbx
   140007363:	call   QWORD PTR [rip+0xb2b7]        # 0x140012620
   140007369:	mov    rbx,QWORD PTR [rsp+0x50]
   14000736e:	mov    rbp,QWORD PTR [rsp+0x58]
   140007373:	mov    rsi,QWORD PTR [rsp+0x60]
   140007378:	add    rsp,0x20
   14000737c:	pop    r15
   14000737e:	pop    r14
   140007380:	pop    r13
   140007382:	pop    r12
   140007384:	pop    rdi
   140007385:	ret    
   140007386:	int3   
   140007387:	int3   
   140007388:	int3   
   140007389:	int3   
   14000738a:	int3   
   14000738b:	int3   
   14000738c:	mov    rax,rsp
   14000738f:	mov    QWORD PTR [rax+0x8],rbx
   140007393:	mov    QWORD PTR [rax+0x10],rbp
   140007397:	mov    QWORD PTR [rax+0x18],rsi
   14000739b:	mov    QWORD PTR [rax+0x20],rdi
   14000739f:	push   r14
   1400073a1:	sub    rsp,0x20
   1400073a5:	mov    rdi,QWORD PTR [rsp+0x50]
   1400073aa:	movzx  r14d,dx
   1400073ae:	xor    edx,edx
   1400073b0:	movzx  ebp,r8w
   1400073b4:	mov    rbx,rcx
   1400073b7:	lea    r8d,[rdx+0x48]
   1400073bb:	mov    rcx,rdi
   1400073be:	mov    sil,r9b
   1400073c1:	call   0x14000a286
   1400073c6:	mov    ecx,0x10
   1400073cb:	movups xmm5,XMMWORD PTR [rbx]
   1400073ce:	movdqu XMMWORD PTR [rdi+0x1c],xmm5
   1400073d3:	call   QWORD PTR [rip+0xb257]        # 0x140012630
   1400073d9:	mov    QWORD PTR [rdi+0x30],rax
   1400073dd:	test   rax,rax
   1400073e0:	jne    0x1400073ef
   1400073e2:	mov    rcx,rdi
   1400073e5:	call   QWORD PTR [rip+0xb235]        # 0x140012620
   1400073eb:	xor    eax,eax
   1400073ed:	jmp    0x14000740e
   1400073ef:	mov    QWORD PTR [rax+0x8],rax
   1400073f3:	mov    rcx,QWORD PTR [rdi+0x30]
   1400073f7:	mov    rax,QWORD PTR [rcx+0x8]
   1400073fb:	mov    QWORD PTR [rcx],rax
   1400073fe:	mov    WORD PTR [rdi+0x40],r14w
   140007403:	mov    BYTE PTR [rdi+0x44],sil
   140007407:	mov    WORD PTR [rdi+0x42],bp
   14000740b:	mov    rax,rdi
   14000740e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007413:	mov    rbp,QWORD PTR [rsp+0x38]
   140007418:	mov    rsi,QWORD PTR [rsp+0x40]
   14000741d:	mov    rdi,QWORD PTR [rsp+0x48]
   140007422:	add    rsp,0x20
   140007426:	pop    r14
   140007428:	ret    
   140007429:	int3   
   14000742a:	int3   
   14000742b:	int3   
   14000742c:	int3   
   14000742d:	int3   
   14000742e:	int3   
   14000742f:	int3   
   140007430:	mov    QWORD PTR [rsp+0x10],rbx
   140007435:	push   rdi
   140007436:	sub    rsp,0x50
   14000743a:	and    QWORD PTR [rsp+0x60],0x0
   140007440:	lea    rcx,[rip+0xffffffffffffc949]        # 0x140003d90
   140007447:	call   QWORD PTR [rip+0xb1ab]        # 0x1400125f8
   14000744d:	xor    ecx,ecx
   14000744f:	mov    rdi,rax
   140007452:	call   QWORD PTR [rip+0xb328]        # 0x140012780
   140007458:	xor    edx,edx
   14000745a:	lea    r11,[rsp+0x60]
   14000745f:	lea    r9,[rip+0xffffffffffffc152]        # 0x1400035b8
   140007466:	lea    rcx,[rip+0xffffffffffffc13b]        # 0x1400035a8
   14000746d:	lea    r8d,[rdx+0x1]
   140007471:	mov    QWORD PTR [rsp+0x20],r11
   140007476:	call   QWORD PTR [rip+0xb2f4]        # 0x140012770
   14000747c:	mov    ebx,eax
   14000747e:	test   eax,eax
   140007480:	jne    0x1400074f0
   140007482:	mov    rcx,QWORD PTR [rsp+0x60]
   140007487:	lea    rdx,[rip+0x7dba]        # 0x14000f248
   14000748e:	xor    r9d,r9d
   140007491:	mov    rax,QWORD PTR [rcx]
   140007494:	mov    QWORD PTR [rsp+0x40],rdx
   140007499:	and    QWORD PTR [rsp+0x38],0x0
   14000749f:	and    QWORD PTR [rsp+0x30],0x0
   1400074a5:	and    DWORD PTR [rsp+0x28],ebx
   1400074a9:	and    QWORD PTR [rsp+0x20],0x0
   1400074af:	xor    r8d,r8d
   1400074b2:	mov    rdx,rdi
   1400074b5:	call   QWORD PTR [rax+0x18]
   1400074b8:	mov    ebx,eax
   1400074ba:	test   eax,eax
   1400074bc:	jne    0x1400074f0
   1400074be:	and    DWORD PTR [rsp+0x38],eax
   1400074c2:	and    QWORD PTR [rsp+0x30],0x0
   1400074c8:	mov    rcx,QWORD PTR [rip+0x7d79]        # 0x14000f248
   1400074cf:	lea    edx,[rax+0xa]
   1400074d2:	xor    r9d,r9d
   1400074d5:	xor    r8d,r8d
   1400074d8:	mov    DWORD PTR [rsp+0x28],0x3
   1400074e0:	mov    DWORD PTR [rsp+0x20],0x4
   1400074e8:	call   QWORD PTR [rip+0xb28a]        # 0x140012778
   1400074ee:	mov    ebx,eax
   1400074f0:	mov    rcx,rdi
   1400074f3:	call   QWORD PTR [rip+0xb0b7]        # 0x1400125b0
   1400074f9:	mov    rcx,QWORD PTR [rsp+0x60]
   1400074fe:	test   rcx,rcx
   140007501:	je     0x140007509
   140007503:	mov    rax,QWORD PTR [rcx]
   140007506:	call   QWORD PTR [rax+0x10]
   140007509:	mov    eax,ebx
   14000750b:	mov    rbx,QWORD PTR [rsp+0x68]
   140007510:	add    rsp,0x50
   140007514:	pop    rdi
   140007515:	ret    
   140007516:	int3   
   140007517:	int3   
   140007518:	int3   
   140007519:	int3   
   14000751a:	int3   
   14000751b:	int3   
   14000751c:	mov    rax,rsp
   14000751f:	mov    QWORD PTR [rax+0x8],rbx
   140007523:	mov    QWORD PTR [rax+0x18],rsi
   140007527:	mov    QWORD PTR [rax+0x20],rdi
   14000752b:	push   rbp
   14000752c:	push   r12
   14000752e:	push   r13
   140007530:	push   r14
   140007532:	push   r15
   140007534:	lea    rbp,[rax-0x48]
   140007538:	sub    rsp,0x120
   14000753f:	mov    rax,QWORD PTR [rip+0x4c6a]        # 0x14000c1b0
   140007546:	xor    rax,rsp
   140007549:	mov    QWORD PTR [rbp+0x10],rax
   14000754d:	xor    r13d,r13d
   140007550:	mov    r12,rdx
   140007553:	mov    r14d,ecx
   140007556:	mov    esi,0x1b
   14000755b:	mov    WORD PTR [rsp+0x50],r13w
   140007561:	mov    WORD PTR [rbp-0x70],r13w
   140007566:	mov    WORD PTR [rbp-0x30],r13w
   14000756b:	test   rdx,rdx
   14000756e:	je     0x1400079d2
   140007574:	lea    rcx,[rip+0xffffffffffffc835]        # 0x140003db0
   14000757b:	call   QWORD PTR [rip+0xb077]        # 0x1400125f8
   140007581:	lea    rcx,[rsp+0x38]
   140007586:	mov    rdi,rax
   140007589:	call   QWORD PTR [rip+0xb041]        # 0x1400125d0
   14000758f:	mov    r11,QWORD PTR [r12]
   140007593:	lea    r9,[rsp+0x38]
   140007598:	xor    r8d,r8d
   14000759b:	mov    rdx,rdi
   14000759e:	mov    rcx,r12
   1400075a1:	mov    QWORD PTR [rsp+0x20],r13
   1400075a6:	call   QWORD PTR [r11+0x18]
   1400075aa:	mov    rcx,rdi
   1400075ad:	mov    ebx,eax
   1400075af:	call   QWORD PTR [rip+0xaffb]        # 0x1400125b0
   1400075b5:	lea    r15d,[rsi+0x5]
   1400075b9:	lea    r9d,[rsi-0x1a]
   1400075bd:	test   ebx,ebx
   1400075bf:	jne    0x140007609
   1400075c1:	mov    rdx,QWORD PTR [rsp+0x40]
   1400075c6:	test   rdx,rdx
   1400075c9:	je     0x140007609
   1400075cb:	lea    rax,[rsp+0x50]
   1400075d0:	mov    r8d,r15d
   1400075d3:	lea    rcx,[rsp+0x50]
   1400075d8:	sub    rdx,rax
   1400075db:	lea    rax,[r8+0x7fffffde]
   1400075e2:	test   rax,rax
   1400075e5:	je     0x1400075fc
   1400075e7:	movzx  eax,WORD PTR [rdx+rcx*1]
   1400075eb:	test   ax,ax
   1400075ee:	je     0x1400075fc
   1400075f0:	mov    WORD PTR [rcx],ax
   1400075f3:	add    rcx,0x2
   1400075f7:	sub    r8,r9
   1400075fa:	jne    0x1400075db
   1400075fc:	test   r8,r8
   1400075ff:	jne    0x140007605
   140007601:	sub    rcx,0x2
   140007605:	mov    WORD PTR [rcx],r13w
   140007609:	lea    rcx,[rip+0xffffffffffffc7b0]        # 0x140003dc0
   140007610:	call   QWORD PTR [rip+0xafe2]        # 0x1400125f8
   140007616:	lea    rcx,[rsp+0x38]
   14000761b:	mov    rdi,rax
   14000761e:	call   QWORD PTR [rip+0xafc4]        # 0x1400125e8
   140007624:	mov    r11,QWORD PTR [r12]
   140007628:	lea    r9,[rsp+0x38]
   14000762d:	xor    r8d,r8d
   140007630:	mov    rdx,rdi
   140007633:	mov    rcx,r12
   140007636:	mov    QWORD PTR [rsp+0x20],r13
   14000763b:	call   QWORD PTR [r11+0x18]
   14000763f:	mov    rcx,rdi
   140007642:	mov    ebx,eax
   140007644:	call   QWORD PTR [rip+0xaf66]        # 0x1400125b0
   14000764a:	test   ebx,ebx
   14000764c:	jne    0x140007694
   14000764e:	mov    rdx,QWORD PTR [rsp+0x40]
   140007653:	test   rdx,rdx
   140007656:	je     0x140007694
   140007658:	lea    rax,[rbp-0x70]
   14000765c:	mov    r8,r15
   14000765f:	lea    rcx,[rbp-0x70]
   140007663:	sub    rdx,rax
   140007666:	lea    rax,[r8+0x7fffffde]
   14000766d:	test   rax,rax
   140007670:	je     0x140007687
   140007672:	movzx  eax,WORD PTR [rdx+rcx*1]
   140007676:	test   ax,ax
   140007679:	je     0x140007687
   14000767b:	mov    WORD PTR [rcx],ax
   14000767e:	add    rcx,0x2
   140007682:	dec    r8
   140007685:	jne    0x140007666
   140007687:	test   r8,r8
   14000768a:	jne    0x140007690
   14000768c:	sub    rcx,0x2
   140007690:	mov    WORD PTR [rcx],r13w
   140007694:	lea    rcx,[rip+0xffffffffffffc74d]        # 0x140003de8
   14000769b:	call   QWORD PTR [rip+0xaf57]        # 0x1400125f8
   1400076a1:	lea    rcx,[rsp+0x38]
   1400076a6:	mov    rdi,rax
   1400076a9:	call   QWORD PTR [rip+0xaf39]        # 0x1400125e8
   1400076af:	mov    r11,QWORD PTR [r12]
   1400076b3:	lea    r9,[rsp+0x38]
   1400076b8:	xor    r8d,r8d
   1400076bb:	mov    rdx,rdi
   1400076be:	mov    rcx,r12
   1400076c1:	mov    QWORD PTR [rsp+0x20],r13
   1400076c6:	call   QWORD PTR [r11+0x18]
   1400076ca:	mov    rcx,rdi
   1400076cd:	mov    ebx,eax
   1400076cf:	call   QWORD PTR [rip+0xaedb]        # 0x1400125b0
   1400076d5:	mov    eax,0x1
   1400076da:	movzx  r13d,r13b
   1400076de:	test   ebx,ebx
   1400076e0:	lea    rcx,[rip+0xffffffffffffc711]        # 0x140003df8
   1400076e7:	cmove  r13d,eax
   1400076eb:	mov    DWORD PTR [rsp+0x30],r13d
   1400076f0:	call   QWORD PTR [rip+0xaf02]        # 0x1400125f8
   1400076f6:	lea    rcx,[rsp+0x38]
   1400076fb:	mov    rdi,rax
   1400076fe:	call   QWORD PTR [rip+0xaee4]        # 0x1400125e8
   140007704:	mov    r11,QWORD PTR [r12]
   140007708:	and    QWORD PTR [rsp+0x20],0x0
   14000770e:	lea    r9,[rsp+0x38]
   140007713:	xor    r8d,r8d
   140007716:	mov    rdx,rdi
   140007719:	mov    rcx,r12
   14000771c:	call   QWORD PTR [r11+0x18]
   140007720:	mov    rcx,rdi
   140007723:	mov    ebx,eax
   140007725:	call   QWORD PTR [rip+0xae85]        # 0x1400125b0
   14000772b:	xor    edi,edi
   14000772d:	test   ebx,ebx
   14000772f:	jne    0x14000777c
   140007731:	mov    rdx,QWORD PTR [rsp+0x40]
   140007736:	test   rdx,rdx
   140007739:	je     0x14000777c
   14000773b:	lea    rax,[rbp-0x30]
   14000773f:	lea    rcx,[rbp-0x30]
   140007743:	lea    r13d,[rdi+0x1]
   140007747:	sub    rdx,rax
   14000774a:	lea    rax,[r15+0x7fffffde]
   140007751:	test   rax,rax
   140007754:	je     0x14000776b
   140007756:	movzx  eax,WORD PTR [rdx+rcx*1]
   14000775a:	test   ax,ax
   14000775d:	je     0x14000776b
   14000775f:	mov    WORD PTR [rcx],ax
   140007762:	add    rcx,0x2
   140007766:	sub    r15,r13
   140007769:	jne    0x14000774a
   14000776b:	mov    r13d,DWORD PTR [rsp+0x30]
   140007770:	test   r15,r15
   140007773:	jne    0x140007779
   140007775:	sub    rcx,0x2
   140007779:	mov    WORD PTR [rcx],di
   14000777c:	lea    rcx,[rsp+0x38]
   140007781:	call   QWORD PTR [rip+0xae61]        # 0x1400125e8
   140007787:	btr    r14d,0xd
   14000778c:	cmp    r14d,0x67
   140007790:	jg     0x1400079c7
   140007796:	je     0x1400079c2
   14000779c:	cmp    r14d,0xd
   1400077a0:	jg     0x140007949
   1400077a6:	je     0x1400078d4
   1400077ac:	test   r14d,r14d
   1400077af:	je     0x1400079c7
   1400077b5:	sub    r14d,0x2
   1400077b9:	je     0x1400078ca
   1400077bf:	dec    r14d
   1400077c2:	je     0x1400078c0
   1400077c8:	dec    r14d
   1400077cb:	je     0x1400078b6
   1400077d1:	dec    r14d
   1400077d4:	je     0x1400078ac
   1400077da:	sub    r14d,0x3
   1400077de:	je     0x1400077f3
   1400077e0:	cmp    r14d,0x3
   1400077e4:	jne    0x1400079c7
   1400077ea:	lea    esi,[r14+0x17]
   1400077ee:	jmp    0x1400079c7
   1400077f3:	lea    rdx,[rip+0xffffffffffffc61e]        # 0x140003e18
   1400077fa:	lea    rcx,[rbp-0x70]
   1400077fe:	call   QWORD PTR [rip+0xae04]        # 0x140012608
   140007804:	test   eax,eax
   140007806:	jne    0x140007826
   140007808:	lea    rdx,[rip+0xffffffffffffa745]        # 0x140001f54
   14000780f:	lea    rcx,[rsp+0x50]
   140007814:	call   QWORD PTR [rip+0xadee]        # 0x140012608
   14000781a:	neg    eax
   14000781c:	sbb    esi,esi
   14000781e:	add    esi,0xe
   140007821:	jmp    0x1400079c7
   140007826:	lea    rdx,[rip+0xffffffffffffc60b]        # 0x140003e38
   14000782d:	lea    rcx,[rbp-0x70]
   140007831:	call   QWORD PTR [rip+0xadd1]        # 0x140012608
   140007837:	test   eax,eax
   140007839:	jne    0x140007859
   14000783b:	lea    rdx,[rip+0xffffffffffffa712]        # 0x140001f54
   140007842:	lea    rcx,[rsp+0x50]
   140007847:	call   QWORD PTR [rip+0xadbb]        # 0x140012608
   14000784d:	neg    eax
   14000784f:	sbb    esi,esi
   140007851:	add    esi,0x10
   140007854:	jmp    0x1400079c7
   140007859:	lea    rdx,[rip+0xffffffffffffc5e8]        # 0x140003e48
   140007860:	lea    rcx,[rbp-0x70]
   140007864:	call   QWORD PTR [rip+0xad9e]        # 0x140012608
   14000786a:	test   eax,eax
   14000786c:	jne    0x14000788c
   14000786e:	lea    rdx,[rip+0xffffffffffffa6df]        # 0x140001f54
   140007875:	lea    rcx,[rsp+0x50]
   14000787a:	call   QWORD PTR [rip+0xad88]        # 0x140012608
   140007880:	neg    eax
   140007882:	sbb    esi,esi
   140007884:	add    esi,0x12
   140007887:	jmp    0x1400079c7
   14000788c:	lea    rdx,[rip+0xffffffffffffc5d5]        # 0x140003e68
   140007893:	lea    rcx,[rbp-0x70]
   140007897:	call   QWORD PTR [rip+0xad6b]        # 0x140012608
   14000789d:	neg    eax
   14000789f:	sbb    esi,esi
   1400078a1:	and    esi,0xfffffff6
   1400078a4:	add    esi,0x17
   1400078a7:	jmp    0x1400079c7
   1400078ac:	mov    esi,0xc
   1400078b1:	jmp    0x1400079c7
   1400078b6:	mov    esi,0xb
   1400078bb:	jmp    0x1400079c7
   1400078c0:	mov    esi,0x6
   1400078c5:	jmp    0x1400079c7
   1400078ca:	mov    esi,0x4
   1400078cf:	jmp    0x1400079c7
   1400078d4:	lea    rdx,[rip+0xffffffffffffc5a5]        # 0x140003e80
   1400078db:	lea    rcx,[rbp-0x30]
   1400078df:	call   QWORD PTR [rip+0xad23]        # 0x140012608
   1400078e5:	test   eax,eax
   1400078e7:	jne    0x1400078f1
   1400078e9:	lea    esi,[rax+0x15]
   1400078ec:	jmp    0x1400079c7
   1400078f1:	lea    rdx,[rip+0xffffffffffffc598]        # 0x140003e90
   1400078f8:	lea    rcx,[rbp-0x30]
   1400078fc:	call   QWORD PTR [rip+0xad06]        # 0x140012608
   140007902:	test   eax,eax
   140007904:	jne    0x14000790e
   140007906:	lea    esi,[rax+0x14]
   140007909:	jmp    0x1400079c7
   14000790e:	lea    rdx,[rip+0xffffffffffffc58b]        # 0x140003ea0
   140007915:	lea    rcx,[rbp-0x30]
   140007919:	call   QWORD PTR [rip+0xace9]        # 0x140012608
   14000791f:	test   eax,eax
   140007921:	jne    0x14000792b
   140007923:	lea    esi,[rax+0x13]
   140007926:	jmp    0x1400079c7
   14000792b:	lea    rdx,[rip+0xffffffffffffae16]        # 0x140002748
   140007932:	lea    rcx,[rbp-0x30]
   140007936:	call   QWORD PTR [rip+0xaccc]        # 0x140012608
   14000793c:	test   eax,eax
   14000793e:	jne    0x1400079c7
   140007944:	lea    esi,[rax+0x19]
   140007947:	jmp    0x1400079c7
   140007949:	sub    r14d,0x10
   14000794d:	je     0x1400079a3
   14000794f:	dec    r14d
   140007952:	je     0x14000799c
   140007954:	dec    r14d
   140007957:	je     0x140007995
   140007959:	dec    r14d
   14000795c:	je     0x140007975
   14000795e:	dec    r14d
   140007961:	je     0x14000796e
   140007963:	dec    r14d
   140007966:	jne    0x1400079c7
   140007968:	lea    esi,[r14+0xa]
   14000796c:	jmp    0x1400079c7
   14000796e:	mov    esi,0x9
   140007973:	jmp    0x1400079c7
   140007975:	lea    rdx,[rip+0xffffffffffffc494]        # 0x140003e10
   14000797c:	lea    rcx,[rsp+0x50]
   140007981:	mov    esi,0x7
   140007986:	call   QWORD PTR [rip+0xac7c]        # 0x140012608
   14000798c:	test   eax,eax
   14000798e:	jne    0x1400079c7
   140007990:	lea    esi,[rax+0x8]
   140007993:	jmp    0x1400079c7
   140007995:	mov    esi,0x5
   14000799a:	jmp    0x1400079c7
   14000799c:	mov    esi,0x2
   1400079a1:	jmp    0x1400079c7
   1400079a3:	lea    rdx,[rip+0xffffffffffffc462]        # 0x140003e0c
   1400079aa:	lea    rcx,[rsp+0x50]
   1400079af:	mov    esi,0x3
   1400079b4:	call   QWORD PTR [rip+0xac4e]        # 0x140012608
   1400079ba:	test   eax,eax
   1400079bc:	jne    0x1400079c7
   1400079be:	mov    esi,edi
   1400079c0:	jmp    0x1400079c7
   1400079c2:	mov    esi,0x1
   1400079c7:	mov    eax,0x18
   1400079cc:	test   r13b,r13b
   1400079cf:	cmovne esi,eax
   1400079d2:	mov    eax,esi
   1400079d4:	mov    rcx,QWORD PTR [rbp+0x10]
   1400079d8:	xor    rcx,rsp
   1400079db:	call   0x140009a90
   1400079e0:	lea    r11,[rsp+0x120]
   1400079e8:	mov    rbx,QWORD PTR [r11+0x30]
   1400079ec:	mov    rsi,QWORD PTR [r11+0x40]
   1400079f0:	mov    rdi,QWORD PTR [r11+0x48]
   1400079f4:	mov    rsp,r11
   1400079f7:	pop    r15
   1400079f9:	pop    r14
   1400079fb:	pop    r13
   1400079fd:	pop    r12
   1400079ff:	pop    rbp
   140007a00:	ret    
   140007a01:	int3   
   140007a02:	int3   
   140007a03:	int3   
   140007a04:	int3   
   140007a05:	int3   
   140007a06:	int3   
   140007a07:	int3   
   140007a08:	rex push rbp
   140007a0a:	push   rbx
   140007a0b:	push   rsi
   140007a0c:	push   rdi
   140007a0d:	push   r12
   140007a0f:	push   r13
   140007a11:	push   r14
   140007a13:	push   r15
   140007a15:	lea    rbp,[rsp-0x8b8]
   140007a1d:	sub    rsp,0x9b8
   140007a24:	mov    rax,QWORD PTR [rip+0x4785]        # 0x14000c1b0
   140007a2b:	xor    rax,rsp
   140007a2e:	mov    QWORD PTR [rbp+0x8a0],rax
   140007a35:	xor    edi,edi
   140007a37:	lea    rax,[rsp+0x50]
   140007a3c:	mov    rbx,rcx
   140007a3f:	mov    QWORD PTR [rsp+0x58],rax
   140007a44:	lea    rax,[rsp+0x50]
   140007a49:	lea    rcx,[rbp-0x30]
   140007a4d:	mov    BYTE PTR [rsp+0x30],r9b
   140007a52:	mov    WORD PTR [rsp+0x40],r8w
   140007a58:	mov    rsi,rdx
   140007a5b:	mov    QWORD PTR [rsp+0x50],rax
   140007a60:	mov    QWORD PTR [rbp-0x80],rdx
   140007a64:	mov    QWORD PTR [rbp+0x18],rdi
   140007a68:	mov    QWORD PTR [rsp+0x70],rdi
   140007a6d:	mov    QWORD PTR [rsp+0x38],rdi
   140007a72:	mov    r13d,edi
   140007a75:	mov    QWORD PTR [rbp-0x68],rdi
   140007a79:	mov    QWORD PTR [rbp-0x58],rdi
   140007a7d:	mov    QWORD PTR [rsp+0x60],rdi
   140007a82:	mov    DWORD PTR [rbp-0x74],edi
   140007a85:	mov    DWORD PTR [rsp+0x6c],edi
   140007a89:	call   QWORD PTR [rip+0xab41]        # 0x1400125d0
   140007a8f:	lea    rcx,[rbp-0x48]
   140007a93:	call   QWORD PTR [rip+0xab37]        # 0x1400125d0
   140007a99:	lea    rcx,[rbp+0x0]
   140007a9d:	call   QWORD PTR [rip+0xab2d]        # 0x1400125d0
   140007aa3:	lea    rcx,[rbp+0x60]
   140007aa7:	call   QWORD PTR [rip+0xab23]        # 0x1400125d0
   140007aad:	lea    rcx,[rip+0xffffffffffffc3f4]        # 0x140003ea8
   140007ab4:	call   QWORD PTR [rip+0xab3e]        # 0x1400125f8
   140007aba:	lea    rcx,[rip+0xffffffffffffc3f7]        # 0x140003eb8
   140007ac1:	mov    QWORD PTR [rbp-0x18],rax
   140007ac5:	call   QWORD PTR [rip+0xab2d]        # 0x1400125f8
   140007acb:	lea    rcx,[rip+0xffffffffffffac86]        # 0x140002758
   140007ad2:	mov    r14,rax
   140007ad5:	mov    QWORD PTR [rsp+0x48],rax
   140007ada:	call   QWORD PTR [rip+0xab18]        # 0x1400125f8
   140007ae0:	lea    rcx,[rip+0xffffffffffffc3e9]        # 0x140003ed0
   140007ae7:	mov    QWORD PTR [rbp+0x20],rax
   140007aeb:	call   QWORD PTR [rip+0xab07]        # 0x1400125f8
   140007af1:	lea    rcx,[rip+0xffffffffffffc3f8]        # 0x140003ef0
   140007af8:	mov    r15,rax
   140007afb:	mov    QWORD PTR [rbp-0x10],rax
   140007aff:	call   QWORD PTR [rip+0xaaf3]        # 0x1400125f8
   140007b05:	mov    rdx,QWORD PTR [rbp-0x18]
   140007b09:	mov    QWORD PTR [rbp-0x8],rax
   140007b0d:	mov    rax,QWORD PTR [rbx]
   140007b10:	lea    r9,[rbp-0x30]
   140007b14:	xor    r8d,r8d
   140007b17:	mov    rcx,rbx
   140007b1a:	mov    QWORD PTR [rsp+0x28],rdi
   140007b1f:	mov    QWORD PTR [rsp+0x20],rdi
   140007b24:	call   QWORD PTR [rax+0x20]
   140007b27:	test   eax,eax
   140007b29:	jne    0x1400083d1
   140007b2f:	mov    rcx,QWORD PTR [rsp+0x38]
   140007b34:	test   rcx,rcx
   140007b37:	je     0x140007b44
   140007b39:	mov    rax,QWORD PTR [rcx]
   140007b3c:	call   QWORD PTR [rax+0x10]
   140007b3f:	mov    QWORD PTR [rsp+0x38],rdi
   140007b44:	mov    rax,QWORD PTR [rbx]
   140007b47:	lea    rdx,[rsp+0x38]
   140007b4c:	mov    rcx,rbx
   140007b4f:	call   QWORD PTR [rax+0x18]
   140007b52:	mov    rcx,QWORD PTR [rsp+0x38]
   140007b57:	mov    rdx,QWORD PTR [rbp-0x8]
   140007b5b:	mov    rax,QWORD PTR [rcx]
   140007b5e:	lea    r9,[rbp+0x60]
   140007b62:	xor    r8d,r8d
   140007b65:	mov    QWORD PTR [rsp+0x20],rdi
   140007b6a:	call   QWORD PTR [rax+0x18]
   140007b6d:	mov    r9d,0x2
   140007b73:	test   eax,eax
   140007b75:	jne    0x140007bc4
   140007b77:	mov    r8,QWORD PTR [rbp+0x68]
   140007b7b:	test   r8,r8
   140007b7e:	je     0x140007bc4
   140007b80:	lea    rax,[rbp+0xa0]
   140007b87:	mov    edx,0x400
   140007b8c:	lea    rcx,[rbp+0xa0]
   140007b93:	sub    r8,rax
   140007b96:	lea    rax,[rdx+0x7ffffbfe]
   140007b9d:	test   rax,rax
   140007ba0:	je     0x140007bb7
   140007ba2:	movzx  eax,WORD PTR [r8+rcx*1]
   140007ba7:	test   ax,ax
   140007baa:	je     0x140007bb7
   140007bac:	mov    WORD PTR [rcx],ax
   140007baf:	add    rcx,r9
   140007bb2:	dec    rdx
   140007bb5:	jne    0x140007b96
   140007bb7:	test   rdx,rdx
   140007bba:	jne    0x140007bbf
   140007bbc:	sub    rcx,r9
   140007bbf:	mov    WORD PTR [rcx],di
   140007bc2:	jmp    0x140007bcb
   140007bc4:	mov    WORD PTR [rbp+0xa0],di
   140007bcb:	movups xmm0,XMMWORD PTR [rsi]
   140007bce:	mov    ecx,0x48
   140007bd3:	movdqu XMMWORD PTR [rbp+0x30],xmm0
   140007bd8:	call   QWORD PTR [rip+0xaa52]        # 0x140012630
   140007bde:	test   rax,rax
   140007be1:	je     0x1400083d1
   140007be7:	or     rbx,0xffffffffffffffff
   140007beb:	lea    rcx,[rbp+0x30]
   140007bef:	mov    QWORD PTR [rsp+0x20],rax
   140007bf4:	mov    r8d,ebx
   140007bf7:	mov    edx,ebx
   140007bf9:	mov    r9b,bl
   140007bfc:	call   0x14000738c
   140007c01:	mov    r12,rax
   140007c04:	mov    QWORD PTR [rbp+0x30],rax
   140007c08:	test   rax,rax
   140007c0b:	je     0x1400083d1
   140007c11:	mov    r13,rax
   140007c14:	mov    rax,QWORD PTR [rsp+0x58]
   140007c19:	lea    rcx,[rsp+0x50]
   140007c1e:	mov    QWORD PTR [r13+0x8],rax
   140007c22:	mov    QWORD PTR [r13+0x0],rcx
   140007c26:	mov    QWORD PTR [rax],r13
   140007c29:	mov    QWORD PTR [rsp+0x58],r13
   140007c2e:	lea    rax,[rbp+0xa0]
   140007c35:	inc    rbx
   140007c38:	cmp    WORD PTR [rax+rbx*2],di
   140007c3c:	jne    0x140007c35
   140007c3e:	inc    rbx
   140007c41:	lea    rcx,[rbx+rbx*1]
   140007c45:	call   QWORD PTR [rip+0xa9e5]        # 0x140012630
   140007c4b:	mov    QWORD PTR [r12+0x10],rax
   140007c50:	test   rax,rax
   140007c53:	je     0x140007c67
   140007c55:	lea    r8,[rbp+0xa0]
   140007c5c:	mov    rdx,rbx
   140007c5f:	mov    rcx,rax
   140007c62:	call   0x140004808
   140007c67:	mov    rcx,QWORD PTR [rbp-0x28]
   140007c6b:	call   QWORD PTR [rip+0xa987]        # 0x1400125f8
   140007c71:	mov    rcx,QWORD PTR [rip+0x75d0]        # 0x14000f248
   140007c78:	lea    rdx,[rbp+0x18]
   140007c7c:	mov    rdi,rax
   140007c7f:	mov    rax,QWORD PTR [rcx]
   140007c82:	mov    QWORD PTR [rsp+0x20],rdx
   140007c87:	xor    r9d,r9d
   140007c8a:	mov    r8d,0x20001
   140007c90:	mov    rdx,rdi
   140007c93:	call   QWORD PTR [rax+0x60]
   140007c96:	mov    rcx,rdi
   140007c99:	mov    ebx,eax
   140007c9b:	call   QWORD PTR [rip+0xa90f]        # 0x1400125b0
   140007ca1:	test   ebx,ebx
   140007ca3:	jne    0x1400083d1
   140007ca9:	lea    edi,[rbx+0x1]
   140007cac:	xor    ebx,ebx
   140007cae:	mov    DWORD PTR [rsp+0x68],edi
   140007cb2:	mov    rcx,QWORD PTR [rbp+0x18]
   140007cb6:	lea    rdx,[rsp+0x68]
   140007cbb:	mov    QWORD PTR [rsp+0x70],rbx
   140007cc0:	mov    rax,QWORD PTR [rcx]
   140007cc3:	mov    QWORD PTR [rsp+0x20],rdx
   140007cc8:	lea    r9,[rsp+0x70]
   140007ccd:	mov    r8d,edi
   140007cd0:	mov    edx,0x1388
   140007cd5:	call   QWORD PTR [rax+0x20]
   140007cd8:	test   eax,eax
   140007cda:	jne    0x1400083c0
   140007ce0:	cmp    DWORD PTR [rsp+0x68],edi
   140007ce4:	jne    0x1400083d1
   140007cea:	mov    rcx,QWORD PTR [rsp+0x38]
   140007cef:	test   rcx,rcx
   140007cf2:	je     0x140007cff
   140007cf4:	mov    rax,QWORD PTR [rcx]
   140007cf7:	call   QWORD PTR [rax+0x10]
   140007cfa:	mov    QWORD PTR [rsp+0x38],rbx
   140007cff:	mov    rcx,QWORD PTR [rsp+0x70]
   140007d04:	lea    rdx,[rsp+0x38]
   140007d09:	mov    rax,QWORD PTR [rcx]
   140007d0c:	call   QWORD PTR [rax+0x18]
   140007d0f:	lea    rcx,[rbp-0x48]
   140007d13:	call   QWORD PTR [rip+0xa8cf]        # 0x1400125e8
   140007d19:	mov    rcx,QWORD PTR [rsp+0x38]
   140007d1e:	mov    rdx,QWORD PTR [rbp+0x20]
   140007d22:	mov    rax,QWORD PTR [rcx]
   140007d25:	lea    r9,[rbp-0x48]
   140007d29:	xor    r8d,r8d
   140007d2c:	mov    QWORD PTR [rsp+0x20],rbx
   140007d31:	call   QWORD PTR [rax+0x18]
   140007d34:	test   eax,eax
   140007d36:	jne    0x1400083c0
   140007d3c:	mov    eax,0x2000
   140007d41:	mov    rdi,rbx
   140007d44:	test   WORD PTR [rbp-0x48],ax
   140007d48:	je     0x140007fc9
   140007d4e:	mov    r14,QWORD PTR [rbp-0x40]
   140007d52:	lea    rcx,[rbp+0x0]
   140007d56:	mov    QWORD PTR [rbp-0x60],r14
   140007d5a:	call   QWORD PTR [rip+0xa888]        # 0x1400125e8
   140007d60:	mov    rcx,QWORD PTR [rsp+0x38]
   140007d65:	mov    rax,QWORD PTR [rcx]
   140007d68:	lea    r9,[rbp+0x0]
   140007d6c:	xor    r8d,r8d
   140007d6f:	mov    rdx,r15
   140007d72:	mov    QWORD PTR [rsp+0x20],rbx
   140007d77:	call   QWORD PTR [rax+0x18]
   140007d7a:	test   eax,eax
   140007d7c:	jne    0x140007d8c
   140007d7e:	mov    eax,0x2000
   140007d83:	test   WORD PTR [rbp+0x0],ax
   140007d87:	cmovne rdi,QWORD PTR [rbp+0x8]
   140007d8c:	test   r14,r14
   140007d8f:	je     0x1400083cc
   140007d95:	lea    r8,[rbp-0x50]
   140007d99:	mov    edx,0x1
   140007d9e:	mov    rcx,r14
   140007da1:	call   QWORD PTR [rip+0xa849]        # 0x1400125f0
   140007da7:	test   eax,eax
   140007da9:	jne    0x1400083cc
   140007daf:	lea    r8,[rsp+0x78]
   140007db4:	lea    edx,[rax+0x1]
   140007db7:	mov    rcx,r14
   140007dba:	call   QWORD PTR [rip+0xa7e8]        # 0x1400125a8
   140007dc0:	test   eax,eax
   140007dc2:	jne    0x1400083cc
   140007dc8:	cmp    DWORD PTR [rsp+0x78],ebx
   140007dcc:	jl     0x1400083cc
   140007dd2:	lea    rdx,[rbp+0x40]
   140007dd6:	mov    rcx,r14
   140007dd9:	call   QWORD PTR [rip+0xa801]        # 0x1400125e0
   140007ddf:	test   rdi,rdi
   140007de2:	je     0x140007e2e
   140007de4:	lea    r8,[rbp-0x74]
   140007de8:	mov    edx,0x1
   140007ded:	mov    rcx,rdi
   140007df0:	call   QWORD PTR [rip+0xa7fa]        # 0x1400125f0
   140007df6:	test   eax,eax
   140007df8:	jne    0x1400083cc
   140007dfe:	lea    r8,[rsp+0x6c]
   140007e03:	lea    edx,[rax+0x1]
   140007e06:	mov    rcx,rdi
   140007e09:	call   QWORD PTR [rip+0xa799]        # 0x1400125a8
   140007e0f:	test   eax,eax
   140007e11:	jne    0x1400083cc
   140007e17:	cmp    DWORD PTR [rsp+0x6c],ebx
   140007e1b:	jl     0x1400083cc
   140007e21:	lea    rdx,[rbp-0x58]
   140007e25:	mov    rcx,rdi
   140007e28:	call   QWORD PTR [rip+0xa7b2]        # 0x1400125e0
   140007e2e:	mov    ebx,DWORD PTR [rbp-0x50]
   140007e31:	mov    DWORD PTR [rsp+0x34],ebx
   140007e35:	cmp    ebx,DWORD PTR [rsp+0x78]
   140007e39:	jg     0x140007f80
   140007e3f:	movzx  r14d,WORD PTR [rsp+0x40]
   140007e45:	mov    rax,QWORD PTR [rbp+0x40]
   140007e49:	movups xmm0,XMMWORD PTR [rsi]
   140007e4c:	movsxd rcx,ebx
   140007e4f:	movzx  r15d,WORD PTR [rax+rcx*4]
   140007e54:	mov    ecx,0x48
   140007e59:	movdqu XMMWORD PTR [rbp+0x90],xmm0
   140007e61:	call   QWORD PTR [rip+0xa7c9]        # 0x140012630
   140007e67:	test   rax,rax
   140007e6a:	je     0x140007f6c
   140007e70:	mov    r9b,BYTE PTR [rsp+0x30]
   140007e75:	lea    rcx,[rbp+0x90]
   140007e7c:	movzx  r8d,r14w
   140007e80:	movzx  edx,r15w
   140007e84:	mov    QWORD PTR [rsp+0x20],rax
   140007e89:	call   0x14000738c
   140007e8e:	xor    r8d,r8d
   140007e91:	mov    rsi,rax
   140007e94:	test   rax,rax
   140007e97:	je     0x140007f64
   140007e9d:	mov    rax,QWORD PTR [rsp+0x58]
   140007ea2:	lea    rcx,[rsp+0x50]
   140007ea7:	mov    QWORD PTR [rsi+0x8],rax
   140007eab:	mov    QWORD PTR [rsi],rcx
   140007eae:	mov    QWORD PTR [rax],rsi
   140007eb1:	mov    QWORD PTR [rsp+0x58],rsi
   140007eb6:	test   r12,r12
   140007eb9:	je     0x140007eff
   140007ebb:	mov    rax,QWORD PTR [r12+0x10]
   140007ec0:	test   rax,rax
   140007ec3:	je     0x140007eff
   140007ec5:	or     rbx,0xffffffffffffffff
   140007ec9:	inc    rbx
   140007ecc:	cmp    WORD PTR [rax+rbx*2],r8w
   140007ed1:	jne    0x140007ec9
   140007ed3:	inc    rbx
   140007ed6:	lea    rcx,[rbx+rbx*1]
   140007eda:	call   QWORD PTR [rip+0xa750]        # 0x140012630
   140007ee0:	xor    r8d,r8d
   140007ee3:	mov    QWORD PTR [rsi+0x10],rax
   140007ee7:	test   rax,rax
   140007eea:	je     0x140007eff
   140007eec:	mov    r8,QWORD PTR [r12+0x10]
   140007ef1:	mov    rdx,rbx
   140007ef4:	mov    rcx,rax
   140007ef7:	call   0x140004808
   140007efc:	xor    r8d,r8d
   140007eff:	cmp    WORD PTR [rbp+0x920],r15w
   140007f07:	cmove  r13,rsi
   140007f0b:	test   rdi,rdi
   140007f0e:	je     0x140007f64
   140007f10:	movsxd rbx,DWORD PTR [rsp+0x34]
   140007f15:	cmp    ebx,DWORD PTR [rbp-0x74]
   140007f18:	jl     0x140007f68
   140007f1a:	cmp    ebx,DWORD PTR [rsp+0x6c]
   140007f1e:	jg     0x140007f68
   140007f20:	mov    rax,QWORD PTR [rbp-0x58]
   140007f24:	mov    rdx,QWORD PTR [rax+rbx*8]
   140007f28:	or     rbx,0xffffffffffffffff
   140007f2c:	inc    rbx
   140007f2f:	cmp    WORD PTR [rdx+rbx*2],r8w
   140007f34:	jne    0x140007f2c
   140007f36:	inc    rbx
   140007f39:	lea    rcx,[rbx+rbx*1]
   140007f3d:	call   QWORD PTR [rip+0xa6ed]        # 0x140012630
   140007f43:	mov    rcx,rax
   140007f46:	mov    QWORD PTR [rsi+0x38],rax
   140007f4a:	test   rax,rax
   140007f4d:	je     0x140007f64
   140007f4f:	movsxd rax,DWORD PTR [rsp+0x34]
   140007f54:	mov    r8,QWORD PTR [rbp-0x58]
   140007f58:	mov    rdx,rbx
   140007f5b:	mov    r8,QWORD PTR [r8+rax*8]
   140007f5f:	call   0x140004808
   140007f64:	mov    ebx,DWORD PTR [rsp+0x34]
   140007f68:	mov    rsi,QWORD PTR [rbp-0x80]
   140007f6c:	inc    ebx
   140007f6e:	mov    DWORD PTR [rsp+0x34],ebx
   140007f72:	cmp    ebx,DWORD PTR [rsp+0x78]
   140007f76:	jle    0x140007e45
   140007f7c:	mov    r14,QWORD PTR [rbp-0x60]
   140007f80:	mov    rcx,r14
   140007f83:	call   QWORD PTR [rip+0xa62f]        # 0x1400125b8
   140007f89:	mov    rcx,r14
   140007f8c:	call   QWORD PTR [rip+0xa646]        # 0x1400125d8
   140007f92:	lea    rcx,[rbp-0x48]
   140007f96:	call   QWORD PTR [rip+0xa634]        # 0x1400125d0
   140007f9c:	xor    ebx,ebx
   140007f9e:	test   rdi,rdi
   140007fa1:	je     0x140007fbf
   140007fa3:	mov    rcx,rdi
   140007fa6:	call   QWORD PTR [rip+0xa60c]        # 0x1400125b8
   140007fac:	mov    rcx,rdi
   140007faf:	call   QWORD PTR [rip+0xa623]        # 0x1400125d8
   140007fb5:	lea    rcx,[rbp+0x0]
   140007fb9:	call   QWORD PTR [rip+0xa611]        # 0x1400125d0
   140007fbf:	mov    r14,QWORD PTR [rsp+0x48]
   140007fc4:	jmp    0x14000815a
   140007fc9:	mov    edi,0x2
   140007fce:	lea    rdx,[rbp-0x48]
   140007fd2:	lea    rcx,[rbp-0x48]
   140007fd6:	movzx  r9d,di
   140007fda:	xor    r8d,r8d
   140007fdd:	call   QWORD PTR [rip+0xa5e5]        # 0x1400125c8
   140007fe3:	movzx  esi,WORD PTR [rbp-0x40]
   140007fe7:	lea    rcx,[rbp+0x0]
   140007feb:	call   QWORD PTR [rip+0xa5f7]        # 0x1400125e8
   140007ff1:	mov    rcx,QWORD PTR [rsp+0x38]
   140007ff6:	lea    r9,[rbp+0x0]
   140007ffa:	mov    rax,QWORD PTR [rcx]
   140007ffd:	xor    r8d,r8d
   140008000:	mov    rdx,r15
   140008003:	mov    QWORD PTR [rsp+0x20],rbx
   140008008:	call   QWORD PTR [rax+0x18]
   14000800b:	test   eax,eax
   14000800d:	jne    0x140008057
   14000800f:	mov    r8,QWORD PTR [rbp+0x8]
   140008013:	lea    rax,[rbp+0xa0]
   14000801a:	mov    edx,0x400
   14000801f:	sub    r8,rax
   140008022:	lea    rcx,[rbp+0xa0]
   140008029:	lea    rax,[rdx+0x7ffffbfe]
   140008030:	test   rax,rax
   140008033:	je     0x14000804a
   140008035:	movzx  eax,WORD PTR [rcx+r8*1]
   14000803a:	test   ax,ax
   14000803d:	je     0x14000804a
   14000803f:	mov    WORD PTR [rcx],ax
   140008042:	add    rcx,rdi
   140008045:	dec    rdx
   140008048:	jne    0x140008029
   14000804a:	test   rdx,rdx
   14000804d:	jne    0x140008052
   14000804f:	sub    rcx,rdi
   140008052:	mov    WORD PTR [rcx],bx
   140008055:	jmp    0x14000805e
   140008057:	mov    WORD PTR [rbp+0xa0],bx
   14000805e:	mov    rax,QWORD PTR [rbp-0x80]
   140008062:	mov    ecx,0x48
   140008067:	movups xmm0,XMMWORD PTR [rax]
   14000806a:	movdqu XMMWORD PTR [rbp+0x80],xmm0
   140008072:	call   QWORD PTR [rip+0xa5b8]        # 0x140012630
   140008078:	test   rax,rax
   14000807b:	je     0x14000815a
   140008081:	mov    r9b,BYTE PTR [rsp+0x30]
   140008086:	movzx  r8d,WORD PTR [rsp+0x40]
   14000808c:	lea    rcx,[rbp+0x80]
   140008093:	movzx  edx,si
   140008096:	mov    QWORD PTR [rsp+0x20],rax
   14000809b:	call   0x14000738c
   1400080a0:	mov    rdi,rax
   1400080a3:	test   rax,rax
   1400080a6:	je     0x14000815a
   1400080ac:	mov    rax,QWORD PTR [rsp+0x58]
   1400080b1:	lea    rcx,[rsp+0x50]
   1400080b6:	mov    QWORD PTR [rdi+0x8],rax
   1400080ba:	mov    QWORD PTR [rdi],rcx
   1400080bd:	mov    QWORD PTR [rax],rdi
   1400080c0:	mov    QWORD PTR [rsp+0x58],rdi
   1400080c5:	test   r12,r12
   1400080c8:	je     0x14000810d
   1400080ca:	mov    rax,QWORD PTR [r12+0x10]
   1400080cf:	test   rax,rax
   1400080d2:	je     0x14000810d
   1400080d4:	or     rbx,0xffffffffffffffff
   1400080d8:	xor    r15d,r15d
   1400080db:	inc    rbx
   1400080de:	cmp    WORD PTR [rax+rbx*2],r15w
   1400080e3:	jne    0x1400080db
   1400080e5:	inc    rbx
   1400080e8:	lea    rcx,[rbx+rbx*1]
   1400080ec:	call   QWORD PTR [rip+0xa53e]        # 0x140012630
   1400080f2:	mov    QWORD PTR [rdi+0x10],rax
   1400080f6:	test   rax,rax
   1400080f9:	je     0x140008110
   1400080fb:	mov    r8,QWORD PTR [r12+0x10]
   140008100:	mov    rdx,rbx
   140008103:	mov    rcx,rax
   140008106:	call   0x140004808
   14000810b:	jmp    0x140008110
   14000810d:	xor    r15d,r15d
   140008110:	cmp    WORD PTR [rbp+0x920],si
   140008117:	lea    rax,[rbp+0xa0]
   14000811e:	cmove  r13,rdi
   140008122:	or     rbx,0xffffffffffffffff
   140008126:	inc    rbx
   140008129:	cmp    WORD PTR [rax+rbx*2],r15w
   14000812e:	jne    0x140008126
   140008130:	inc    rbx
   140008133:	lea    rcx,[rbx+rbx*1]
   140008137:	call   QWORD PTR [rip+0xa4f3]        # 0x140012630
   14000813d:	mov    QWORD PTR [rdi+0x38],rax
   140008141:	test   rax,rax
   140008144:	je     0x140008158
   140008146:	lea    r8,[rbp+0xa0]
   14000814d:	mov    rdx,rbx
   140008150:	mov    rcx,rax
   140008153:	call   0x140004808
   140008158:	xor    ebx,ebx
   14000815a:	lea    rcx,[rbp-0x30]
   14000815e:	call   QWORD PTR [rip+0xa484]        # 0x1400125e8
   140008164:	mov    rcx,QWORD PTR [rsp+0x70]
   140008169:	mov    edi,0x1
   14000816e:	lea    esi,[rdi+0x2]
   140008171:	lea    rdx,[rsp+0x60]
   140008176:	mov    DWORD PTR [rbp-0x28],edi
   140008179:	mov    QWORD PTR [rsp+0x60],rbx
   14000817e:	mov    WORD PTR [rbp-0x30],si
   140008182:	mov    rax,QWORD PTR [rcx]
   140008185:	mov    QWORD PTR [rsp+0x20],rdx
   14000818a:	lea    r9,[rbp-0x30]
   14000818e:	mov    r8d,esi
   140008191:	mov    rdx,r14
   140008194:	mov    r15d,edi
   140008197:	mov    DWORD PTR [rbp-0x60],edi
   14000819a:	call   QWORD PTR [rax+0x38]
   14000819d:	test   eax,eax
   14000819f:	jne    0x140008372
   1400081a5:	mov    rcx,QWORD PTR [rsp+0x60]
   1400081aa:	lea    r8,[rbp-0x4c]
   1400081ae:	mov    edx,edi
   1400081b0:	call   QWORD PTR [rip+0xa43a]        # 0x1400125f0
   1400081b6:	test   eax,eax
   1400081b8:	jne    0x14000836e
   1400081be:	mov    rcx,QWORD PTR [rsp+0x60]
   1400081c3:	lea    r8,[rbp-0x70]
   1400081c7:	mov    edx,edi
   1400081c9:	call   QWORD PTR [rip+0xa3d9]        # 0x1400125a8
   1400081cf:	test   eax,eax
   1400081d1:	jne    0x14000836e
   1400081d7:	mov    ecx,DWORD PTR [rbp-0x70]
   1400081da:	test   ecx,ecx
   1400081dc:	js     0x14000836e
   1400081e2:	mov    eax,DWORD PTR [rbp-0x4c]
   1400081e5:	mov    DWORD PTR [rsp+0x34],eax
   1400081e9:	cmp    eax,ecx
   1400081eb:	jg     0x14000832c
   1400081f1:	mov    r12d,0x3
   1400081f7:	mov    r15d,0x2000
   1400081fd:	mov    rcx,QWORD PTR [rsp+0x60]
   140008202:	lea    r8,[rbp-0x68]
   140008206:	lea    rdx,[rsp+0x34]
   14000820b:	call   QWORD PTR [rip+0xa3af]        # 0x1400125c0
   140008211:	test   eax,eax
   140008213:	jne    0x140008320
   140008219:	mov    rcx,QWORD PTR [rsp+0x70]
   14000821e:	lea    rdx,[rbp-0x78]
   140008222:	mov    QWORD PTR [rsp+0x28],rbx
   140008227:	mov    rax,QWORD PTR [rcx]
   14000822a:	mov    QWORD PTR [rsp+0x20],rdx
   14000822f:	mov    rdx,QWORD PTR [rbp-0x68]
   140008233:	xor    r9d,r9d
   140008236:	xor    r8d,r8d
   140008239:	call   QWORD PTR [rax+0x20]
   14000823c:	test   eax,eax
   14000823e:	jne    0x140008320
   140008244:	mov    rcx,QWORD PTR [rsp+0x38]
   140008249:	test   rcx,rcx
   14000824c:	je     0x140008259
   14000824e:	mov    rax,QWORD PTR [rcx]
   140008251:	call   QWORD PTR [rax+0x10]
   140008254:	mov    QWORD PTR [rsp+0x38],rbx
   140008259:	mov    rcx,QWORD PTR [rsp+0x70]
   14000825e:	mov    rdx,QWORD PTR [rbp-0x68]
   140008262:	lea    r8,[rsp+0x38]
   140008267:	mov    rax,QWORD PTR [rcx]
   14000826a:	call   QWORD PTR [rax+0x58]
   14000826d:	test   eax,eax
   14000826f:	jne    0x140008320
   140008275:	mov    rdx,QWORD PTR [rsp+0x38]
   14000827a:	mov    ecx,DWORD PTR [rbp-0x78]
   14000827d:	call   0x14000751c
   140008282:	mov    esi,edi
   140008284:	mov    r14d,eax
   140008287:	test   DWORD PTR [rbp-0x78],r15d
   14000828b:	je     0x1400082f5
   14000828d:	mov    rbx,QWORD PTR [rsp+0x38]
   140008292:	test   rbx,rbx
   140008295:	je     0x1400082f3
   140008297:	lea    rcx,[rip+0xffffffffffffbb0a]        # 0x140003da8
   14000829e:	call   QWORD PTR [rip+0xa354]        # 0x1400125f8
   1400082a4:	lea    rcx,[rbp+0x48]
   1400082a8:	mov    rdi,rax
   1400082ab:	call   QWORD PTR [rip+0xa31f]        # 0x1400125d0
   1400082b1:	mov    r11,QWORD PTR [rbx]
   1400082b4:	xor    eax,eax
   1400082b6:	lea    r9,[rbp+0x48]
   1400082ba:	xor    r8d,r8d
   1400082bd:	mov    rdx,rdi
   1400082c0:	mov    rcx,rbx
   1400082c3:	mov    QWORD PTR [rsp+0x20],rax
   1400082c8:	call   QWORD PTR [r11+0x18]
   1400082cc:	mov    rcx,rdi
   1400082cf:	mov    ebx,eax
   1400082d1:	call   QWORD PTR [rip+0xa2d9]        # 0x1400125b0
   1400082d7:	test   ebx,ebx
   1400082d9:	jne    0x1400082e4
   1400082db:	cmp    WORD PTR [rbp+0x48],r12w
   1400082e0:	cmove  esi,DWORD PTR [rbp+0x50]
   1400082e4:	lea    rcx,[rbp+0x48]
   1400082e8:	call   QWORD PTR [rip+0xa2fa]        # 0x1400125e8
   1400082ee:	mov    edi,0x1
   1400082f3:	xor    ebx,ebx
   1400082f5:	mov    rdx,QWORD PTR [rbp-0x68]
   1400082f9:	lea    rcx,[rsp+0x50]
   1400082fe:	mov    r9d,esi
   140008301:	mov    r8d,r14d
   140008304:	call   0x1400072ac
   140008309:	mov    r11d,DWORD PTR [rsp+0x34]
   14000830e:	add    r11d,edi
   140008311:	mov    DWORD PTR [rsp+0x34],r11d
   140008316:	cmp    r11d,DWORD PTR [rbp-0x70]
   14000831a:	jle    0x1400081fd
   140008320:	mov    r15d,DWORD PTR [rbp-0x60]
   140008324:	mov    r14,QWORD PTR [rsp+0x48]
   140008329:	mov    esi,r12d
   14000832c:	mov    rcx,QWORD PTR [rsp+0x60]
   140008331:	call   QWORD PTR [rip+0xa2a1]        # 0x1400125d8
   140008337:	mov    rcx,QWORD PTR [rsp+0x70]
   14000833c:	add    r15d,edi
   14000833f:	lea    rdx,[rsp+0x60]
   140008344:	mov    QWORD PTR [rsp+0x60],rbx
   140008349:	mov    DWORD PTR [rbp-0x28],r15d
   14000834d:	mov    rax,QWORD PTR [rcx]
   140008350:	mov    QWORD PTR [rsp+0x20],rdx
   140008355:	lea    r9,[rbp-0x30]
   140008359:	mov    r8d,esi
   14000835c:	mov    rdx,r14
   14000835f:	mov    DWORD PTR [rbp-0x60],r15d
   140008363:	call   QWORD PTR [rax+0x38]
   140008366:	test   eax,eax
   140008368:	je     0x1400081a5
   14000836e:	mov    r12,QWORD PTR [rbp+0x30]
   140008372:	mov    r8,QWORD PTR [rsp+0x50]
   140008377:	lea    rax,[rsp+0x50]
   14000837c:	cmp    rax,r8
   14000837f:	je     0x1400083b8
   140008381:	mov    r9,QWORD PTR [rip+0x6ca8]        # 0x14000f030
   140008388:	mov    rdx,r8
   14000838b:	mov    r8,QWORD PTR [r8]
   14000838e:	mov    rax,QWORD PTR [rdx+0x8]
   140008392:	mov    rcx,QWORD PTR [rdx]
   140008395:	mov    QWORD PTR [rax],rcx
   140008398:	mov    QWORD PTR [rcx+0x8],rax
   14000839c:	mov    rax,QWORD PTR [r9+0x8]
   1400083a0:	mov    QWORD PTR [rdx+0x8],rax
   1400083a4:	mov    QWORD PTR [rdx],r9
   1400083a7:	mov    QWORD PTR [rax],rdx
   1400083aa:	lea    rax,[rsp+0x50]
   1400083af:	mov    QWORD PTR [r9+0x8],rdx
   1400083b3:	cmp    rax,r8
   1400083b6:	jne    0x140008388
   1400083b8:	mov    r15,QWORD PTR [rbp-0x10]
   1400083bc:	mov    rsi,QWORD PTR [rbp-0x80]
   1400083c0:	cmp    DWORD PTR [rsp+0x68],edi
   1400083c4:	je     0x140007cb2
   1400083ca:	jmp    0x1400083d1
   1400083cc:	mov    r14,QWORD PTR [rsp+0x48]
   1400083d1:	lea    rcx,[rbp-0x30]
   1400083d5:	call   QWORD PTR [rip+0xa20d]        # 0x1400125e8
   1400083db:	lea    rcx,[rbp-0x48]
   1400083df:	call   QWORD PTR [rip+0xa203]        # 0x1400125e8
   1400083e5:	lea    rcx,[rbp+0x60]
   1400083e9:	call   QWORD PTR [rip+0xa1f9]        # 0x1400125e8
   1400083ef:	mov    rcx,QWORD PTR [rbp-0x18]
   1400083f3:	call   QWORD PTR [rip+0xa1b7]        # 0x1400125b0
   1400083f9:	mov    rcx,r14
   1400083fc:	call   QWORD PTR [rip+0xa1ae]        # 0x1400125b0
   140008402:	mov    rcx,QWORD PTR [rbp+0x20]
   140008406:	call   QWORD PTR [rip+0xa1a4]        # 0x1400125b0
   14000840c:	mov    rcx,r15
   14000840f:	call   QWORD PTR [rip+0xa19b]        # 0x1400125b0
   140008415:	mov    rcx,QWORD PTR [rbp-0x8]
   140008419:	call   QWORD PTR [rip+0xa191]        # 0x1400125b0
   14000841f:	mov    r11,QWORD PTR [rsp+0x50]
   140008424:	lea    rax,[rsp+0x50]
   140008429:	cmp    rax,r11
   14000842c:	je     0x140008465
   14000842e:	mov    r9,QWORD PTR [rip+0x6bfb]        # 0x14000f030
   140008435:	mov    r8,r11
   140008438:	mov    r11,QWORD PTR [r11]
   14000843b:	lea    rax,[rsp+0x50]
   140008440:	mov    rcx,QWORD PTR [r8+0x8]
   140008444:	mov    rdx,QWORD PTR [r8]
   140008447:	mov    QWORD PTR [rcx],rdx
   14000844a:	mov    QWORD PTR [rdx+0x8],rcx
   14000844e:	mov    rcx,QWORD PTR [r9+0x8]
   140008452:	mov    QWORD PTR [r8],r9
   140008455:	mov    QWORD PTR [r8+0x8],rcx
   140008459:	mov    QWORD PTR [rcx],r8
   14000845c:	mov    QWORD PTR [r9+0x8],r8
   140008460:	cmp    rax,r11
   140008463:	jne    0x140008435
   140008465:	mov    rax,r13
   140008468:	mov    rcx,QWORD PTR [rbp+0x8a0]
   14000846f:	xor    rcx,rsp
   140008472:	call   0x140009a90
   140008477:	add    rsp,0x9b8
   14000847e:	pop    r15
   140008480:	pop    r14
   140008482:	pop    r13
   140008484:	pop    r12
   140008486:	pop    rdi
   140008487:	pop    rsi
   140008488:	pop    rbx
   140008489:	pop    rbp
   14000848a:	ret    
   14000848b:	int3   
   14000848c:	int3   
   14000848d:	int3   
   14000848e:	int3   
   14000848f:	int3   
   140008490:	int3   
   140008491:	int3   
   140008492:	int3   
   140008493:	int3   
   140008494:	mov    QWORD PTR [rsp+0x20],rbx
   140008499:	push   rbp
   14000849a:	push   rsi
   14000849b:	push   rdi
   14000849c:	push   r12
   14000849e:	push   r13
   1400084a0:	push   r14
   1400084a2:	push   r15
   1400084a4:	lea    rbp,[rsp-0xfe0]
   1400084ac:	mov    eax,0x10e0
   1400084b1:	call   0x14000a2a0
   1400084b6:	sub    rsp,rax
   1400084b9:	mov    rax,QWORD PTR [rip+0x3cf0]        # 0x14000c1b0
   1400084c0:	xor    rax,rsp
   1400084c3:	mov    QWORD PTR [rbp+0xfd0],rax
   1400084ca:	xor    edi,edi
   1400084cc:	mov    r15,rcx
   1400084cf:	lea    rcx,[rbp-0x60]
   1400084d3:	movzx  r13d,r9w
   1400084d7:	mov    BYTE PTR [rsp+0x30],r8b
   1400084dc:	mov    WORD PTR [rsp+0x48],dx
   1400084e1:	mov    QWORD PTR [rsp+0x40],rdi
   1400084e6:	mov    QWORD PTR [rsp+0x50],rdi
   1400084eb:	mov    QWORD PTR [rsp+0x68],rdi
   1400084f0:	mov    QWORD PTR [rsp+0x60],rdi
   1400084f5:	mov    QWORD PTR [rsp+0x58],rdi
   1400084fa:	mov    r14d,edi
   1400084fd:	mov    QWORD PTR [rsp+0x70],rdi
   140008502:	mov    r12d,edi
   140008505:	mov    esi,edi
   140008507:	call   QWORD PTR [rip+0xa0c3]        # 0x1400125d0
   14000850d:	lea    rcx,[rbp-0x48]
   140008511:	call   QWORD PTR [rip+0xa0b9]        # 0x1400125d0
   140008517:	lea    rcx,[rsp+0x78]
   14000851c:	call   QWORD PTR [rip+0xa0ae]        # 0x1400125d0
   140008522:	cmp    QWORD PTR [rip+0x6d1f],rdi        # 0x14000f248
   140008529:	jne    0x140008538
   14000852b:	call   0x140007430
   140008530:	test   eax,eax
   140008532:	jne    0x14000889b
   140008538:	lea    rcx,[rbp+0x7d0]
   14000853f:	mov    r8,r15
   140008542:	mov    edx,0x400
   140008547:	call   0x140006fa4
   14000854c:	lea    rcx,[rip+0xffffffffffffb805]        # 0x140003d58
   140008553:	call   QWORD PTR [rip+0xa09f]        # 0x1400125f8
   140008559:	lea    rcx,[rip+0xffffffffffffb948]        # 0x140003ea8
   140008560:	mov    rdi,rax
   140008563:	call   QWORD PTR [rip+0xa08f]        # 0x1400125f8
   140008569:	lea    rcx,[rip+0xffffffffffffa1d8]        # 0x140002748
   140008570:	mov    r14,rax
   140008573:	call   QWORD PTR [rip+0xa07f]        # 0x1400125f8
   140008579:	lea    rcx,[rip+0xffffffffffffb988]        # 0x140003f08
   140008580:	mov    QWORD PTR [rsp+0x70],rax
   140008585:	call   QWORD PTR [rip+0xa06d]        # 0x1400125f8
   14000858b:	mov    rcx,QWORD PTR [rip+0x6cb6]        # 0x14000f248
   140008592:	and    QWORD PTR [rsp+0x40],rsi
   140008597:	mov    r10,QWORD PTR [rcx]
   14000859a:	mov    r12,rax
   14000859d:	lea    rax,[rsp+0x40]
   1400085a2:	xor    r9d,r9d
   1400085a5:	mov    r8d,0x20001
   1400085ab:	mov    rdx,rdi
   1400085ae:	mov    QWORD PTR [rsp+0x20],rax
   1400085b3:	call   QWORD PTR [r10+0x60]
   1400085b7:	mov    rcx,rdi
   1400085ba:	mov    ebx,eax
   1400085bc:	call   QWORD PTR [rip+0x9fee]        # 0x1400125b0
   1400085c2:	xor    edi,edi
   1400085c4:	test   ebx,ebx
   1400085c6:	jne    0x14000889b
   1400085cc:	mov    DWORD PTR [rsp+0x38],0x1
   1400085d4:	mov    rcx,QWORD PTR [rsp+0x40]
   1400085d9:	lea    rdx,[rsp+0x38]
   1400085de:	mov    QWORD PTR [rsp+0x68],rdi
   1400085e3:	mov    rax,QWORD PTR [rcx]
   1400085e6:	mov    QWORD PTR [rsp+0x20],rdx
   1400085eb:	lea    r9,[rsp+0x68]
   1400085f0:	mov    edx,0x1388
   1400085f5:	mov    r8d,0x1
   1400085fb:	call   QWORD PTR [rax+0x20]
   1400085fe:	test   eax,eax
   140008600:	jne    0x14000884b
   140008606:	cmp    DWORD PTR [rsp+0x38],0x1
   14000860b:	jne    0x140008886
   140008611:	mov    rcx,QWORD PTR [rsp+0x68]
   140008616:	lea    r9,[rbp-0x60]
   14000861a:	xor    r8d,r8d
   14000861d:	mov    rax,QWORD PTR [rcx]
   140008620:	mov    rdx,r14
   140008623:	mov    QWORD PTR [rsp+0x28],rdi
   140008628:	mov    QWORD PTR [rsp+0x20],rdi
   14000862d:	call   QWORD PTR [rax+0x20]
   140008630:	test   eax,eax
   140008632:	jne    0x14000884b
   140008638:	mov    rcx,QWORD PTR [rbp-0x58]
   14000863c:	call   QWORD PTR [rip+0x9fb6]        # 0x1400125f8
   140008642:	mov    rcx,QWORD PTR [rip+0x6bff]        # 0x14000f248
   140008649:	xor    r9d,r9d
   14000864c:	mov    r10,QWORD PTR [rcx]
   14000864f:	mov    rdi,rax
   140008652:	lea    rax,[rsp+0x50]
   140008657:	mov    r8d,0x20001
   14000865d:	mov    rdx,rdi
   140008660:	mov    QWORD PTR [rsp+0x20],rax
   140008665:	call   QWORD PTR [r10+0x60]
   140008669:	mov    rcx,rdi
   14000866c:	mov    ebx,eax
   14000866e:	call   QWORD PTR [rip+0x9f3c]        # 0x1400125b0
   140008674:	lea    rcx,[rbp-0x60]
   140008678:	call   QWORD PTR [rip+0x9f6a]        # 0x1400125e8
   14000867e:	xor    edi,edi
   140008680:	test   ebx,ebx
   140008682:	jne    0x140008846
   140008688:	mov    DWORD PTR [rsp+0x34],0x1
   140008690:	mov    rcx,QWORD PTR [rsp+0x50]
   140008695:	lea    rdx,[rsp+0x34]
   14000869a:	mov    QWORD PTR [rsp+0x60],rdi
   14000869f:	mov    rax,QWORD PTR [rcx]
   1400086a2:	mov    QWORD PTR [rsp+0x20],rdx
   1400086a7:	lea    r9,[rsp+0x60]
   1400086ac:	mov    edx,0x1388
   1400086b1:	mov    r8d,0x1
   1400086b7:	call   QWORD PTR [rax+0x20]
   1400086ba:	test   eax,eax
   1400086bc:	jne    0x14000882b
   1400086c2:	cmp    DWORD PTR [rsp+0x34],0x1
   1400086c7:	jne    0x140008836
   1400086cd:	mov    rcx,QWORD PTR [rsp+0x60]
   1400086d2:	lea    r9,[rbp-0x60]
   1400086d6:	xor    r8d,r8d
   1400086d9:	mov    rax,QWORD PTR [rcx]
   1400086dc:	mov    rdx,r14
   1400086df:	mov    QWORD PTR [rsp+0x28],rdi
   1400086e4:	mov    QWORD PTR [rsp+0x20],rdi
   1400086e9:	call   QWORD PTR [rax+0x20]
   1400086ec:	lea    rcx,[rbp-0x60]
   1400086f0:	mov    ebx,eax
   1400086f2:	call   QWORD PTR [rip+0x9ef0]        # 0x1400125e8
   1400086f8:	test   ebx,ebx
   1400086fa:	jne    0x14000882b
   140008700:	mov    rcx,QWORD PTR [rsp+0x58]
   140008705:	test   rcx,rcx
   140008708:	je     0x140008715
   14000870a:	mov    rax,QWORD PTR [rcx]
   14000870d:	call   QWORD PTR [rax+0x10]
   140008710:	mov    QWORD PTR [rsp+0x58],rdi
   140008715:	mov    rcx,QWORD PTR [rsp+0x60]
   14000871a:	lea    rdx,[rsp+0x58]
   14000871f:	mov    rax,QWORD PTR [rcx]
   140008722:	call   QWORD PTR [rax+0x18]
   140008725:	mov    rcx,QWORD PTR [rsp+0x58]
   14000872a:	mov    rdx,QWORD PTR [rsp+0x70]
   14000872f:	mov    rax,QWORD PTR [rcx]
   140008732:	lea    r9,[rbp-0x48]
   140008736:	xor    r8d,r8d
   140008739:	mov    QWORD PTR [rsp+0x20],rdi
   14000873e:	call   QWORD PTR [rax+0x18]
   140008741:	test   eax,eax
   140008743:	jne    0x14000882b
   140008749:	mov    r8,QWORD PTR [rbp-0x40]
   14000874d:	lea    rax,[rbp-0x30]
   140008751:	mov    edx,0x400
   140008756:	lea    rcx,[rbp-0x30]
   14000875a:	mov    ebx,0x2
   14000875f:	sub    r8,rax
   140008762:	lea    rax,[rdx+0x7ffffbfe]
   140008769:	test   rax,rax
   14000876c:	je     0x140008783
   14000876e:	movzx  eax,WORD PTR [r8+rcx*1]
   140008773:	test   ax,ax
   140008776:	je     0x140008783
   140008778:	mov    WORD PTR [rcx],ax
   14000877b:	add    rcx,rbx
   14000877e:	dec    rdx
   140008781:	jne    0x140008762
   140008783:	test   rdx,rdx
   140008786:	jne    0x14000878b
   140008788:	sub    rcx,rbx
   14000878b:	mov    WORD PTR [rcx],di
   14000878e:	lea    rcx,[rbp-0x48]
   140008792:	call   QWORD PTR [rip+0x9e50]        # 0x1400125e8
   140008798:	lea    rdx,[rip+0xffffffffffffb785]        # 0x140003f24
   14000879f:	lea    rcx,[rbp-0x30]
   1400087a3:	call   QWORD PTR [rip+0x9f57]        # 0x140012700
   1400087a9:	test   rax,rax
   1400087ac:	jne    0x1400087c7
   1400087ae:	lea    r9,[rbp-0x30]
   1400087b2:	lea    r8,[rip+0xffffffffffffb76f]        # 0x140003f28
   1400087b9:	lea    rcx,[rbp-0x30]
   1400087bd:	mov    edx,0x400
   1400087c2:	call   0x14000494c
   1400087c7:	lea    rdx,[rbp-0x30]
   1400087cb:	lea    rcx,[rbp+0x7d0]
   1400087d2:	call   QWORD PTR [rip+0x9e30]        # 0x140012608
   1400087d8:	test   eax,eax
   1400087da:	jne    0x14000882b
   1400087dc:	mov    rcx,QWORD PTR [rsp+0x58]
   1400087e1:	lea    r9,[rsp+0x78]
   1400087e6:	xor    r8d,r8d
   1400087e9:	mov    rax,QWORD PTR [rcx]
   1400087ec:	mov    rdx,r12
   1400087ef:	mov    QWORD PTR [rsp+0x20],rdi
   1400087f4:	call   QWORD PTR [rax+0x18]
   1400087f7:	test   eax,eax
   1400087f9:	jne    0x14000885d
   1400087fb:	lea    rdx,[rsp+0x78]
   140008800:	lea    rcx,[rsp+0x78]
   140008805:	movzx  r9d,bx
   140008809:	xor    r8d,r8d
   14000880c:	call   QWORD PTR [rip+0x9db6]        # 0x1400125c8
   140008812:	movzx  ebx,WORD PTR [rbp-0x80]
   140008816:	lea    rcx,[rsp+0x78]
   14000881b:	call   QWORD PTR [rip+0x9dc7]        # 0x1400125e8
   140008821:	movzx  eax,WORD PTR [rsp+0x48]
   140008826:	cmp    ax,bx
   140008829:	je     0x140008857
   14000882b:	cmp    DWORD PTR [rsp+0x34],0x1
   140008830:	je     0x140008690
   140008836:	mov    rcx,QWORD PTR [rsp+0x50]
   14000883b:	test   rcx,rcx
   14000883e:	je     0x14000884b
   140008840:	mov    rax,QWORD PTR [rcx]
   140008843:	call   QWORD PTR [rax+0x10]
   140008846:	mov    QWORD PTR [rsp+0x50],rdi
   14000884b:	cmp    DWORD PTR [rsp+0x38],0x1
   140008850:	jne    0x140008886
   140008852:	jmp    0x1400085d4
   140008857:	movzx  r8d,ax
   14000885b:	jmp    0x140008861
   14000885d:	or     r8d,0xffffffff
   140008861:	movups xmm0,XMMWORD PTR [r15]
   140008865:	mov    r9b,BYTE PTR [rsp+0x30]
   14000886a:	mov    rcx,QWORD PTR [rsp+0x60]
   14000886f:	lea    rdx,[rbp-0x70]
   140008873:	mov    WORD PTR [rsp+0x20],r13w
   140008879:	movdqu XMMWORD PTR [rbp-0x70],xmm0
   14000887e:	call   0x140007a08
   140008883:	mov    rsi,rax
   140008886:	mov    rcx,QWORD PTR [rsp+0x40]
   14000888b:	test   rcx,rcx
   14000888e:	je     0x14000889b
   140008890:	mov    rax,QWORD PTR [rcx]
   140008893:	call   QWORD PTR [rax+0x10]
   140008896:	mov    QWORD PTR [rsp+0x40],rdi
   14000889b:	lea    rcx,[rbp-0x48]
   14000889f:	call   QWORD PTR [rip+0x9d43]        # 0x1400125e8
   1400088a5:	lea    rcx,[rsp+0x78]
   1400088aa:	call   QWORD PTR [rip+0x9d38]        # 0x1400125e8
   1400088b0:	mov    rcx,QWORD PTR [rsp+0x70]
   1400088b5:	call   QWORD PTR [rip+0x9cf5]        # 0x1400125b0
   1400088bb:	mov    rcx,r14
   1400088be:	call   QWORD PTR [rip+0x9cec]        # 0x1400125b0
   1400088c4:	mov    rcx,r12
   1400088c7:	call   QWORD PTR [rip+0x9ce3]        # 0x1400125b0
   1400088cd:	mov    rcx,QWORD PTR [rsp+0x40]
   1400088d2:	test   rcx,rcx
   1400088d5:	je     0x1400088e2
   1400088d7:	mov    rax,QWORD PTR [rcx]
   1400088da:	call   QWORD PTR [rax+0x10]
   1400088dd:	mov    QWORD PTR [rsp+0x40],rdi
   1400088e2:	mov    rcx,QWORD PTR [rsp+0x50]
   1400088e7:	test   rcx,rcx
   1400088ea:	je     0x1400088f7
   1400088ec:	mov    rax,QWORD PTR [rcx]
   1400088ef:	call   QWORD PTR [rax+0x10]
   1400088f2:	mov    QWORD PTR [rsp+0x50],rdi
   1400088f7:	mov    rcx,QWORD PTR [rsp+0x58]
   1400088fc:	test   rcx,rcx
   1400088ff:	je     0x140008907
   140008901:	mov    rax,QWORD PTR [rcx]
   140008904:	call   QWORD PTR [rax+0x10]
   140008907:	mov    rax,rsi
   14000890a:	mov    rcx,QWORD PTR [rbp+0xfd0]
   140008911:	xor    rcx,rsp
   140008914:	call   0x140009a90
   140008919:	mov    rbx,QWORD PTR [rsp+0x1138]
   140008921:	add    rsp,0x10e0
   140008928:	pop    r15
   14000892a:	pop    r14
   14000892c:	pop    r13
   14000892e:	pop    r12
   140008930:	pop    rdi
   140008931:	pop    rsi
   140008932:	pop    rbp
   140008933:	ret    
   140008934:	int3   
   140008935:	int3   
   140008936:	int3   
   140008937:	int3   
   140008938:	int3   
   140008939:	int3   
   14000893a:	int3   
   14000893b:	int3   
   14000893c:	cmp    QWORD PTR [rcx+0x38],0x10
   140008941:	jb     0x140008948
   140008943:	mov    rax,QWORD PTR [rcx+0x20]
   140008947:	ret    
   140008948:	lea    rax,[rcx+0x20]
   14000894c:	ret    
   14000894d:	int3   
   14000894e:	int3   
   14000894f:	int3   
   140008950:	int3   
   140008951:	int3   
   140008952:	int3   
   140008953:	int3   
   140008954:	rex push rbx
   140008956:	sub    rsp,0x80
   14000895d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008966:	mov    rax,QWORD PTR [rip+0x3843]        # 0x14000c1b0
   14000896d:	xor    rax,rsp
   140008970:	mov    QWORD PTR [rsp+0x70],rax
   140008975:	mov    rbx,rcx
   140008978:	mov    rdx,rcx
   14000897b:	lea    rcx,[rsp+0x30]
   140008980:	call   QWORD PTR [rip+0x9d9a]        # 0x140012720
   140008986:	nop
   140008987:	lea    rax,[rip+0xffffffffffffb8ea]        # 0x140004278
   14000898e:	mov    QWORD PTR [rsp+0x30],rax
   140008993:	mov    QWORD PTR [rsp+0x68],0xf
   14000899c:	and    QWORD PTR [rsp+0x60],0x0
   1400089a2:	mov    BYTE PTR [rsp+0x50],0x0
   1400089a7:	lea    rdx,[rbx+0x18]
   1400089ab:	or     r9,0xffffffffffffffff
   1400089af:	xor    r8d,r8d
   1400089b2:	lea    rcx,[rsp+0x48]
   1400089b7:	call   0x140008edc
   1400089bc:	nop
   1400089bd:	lea    rdx,[rip+0x2cb4]        # 0x14000b678
   1400089c4:	lea    rcx,[rsp+0x30]
   1400089c9:	call   0x140009bd6
   1400089ce:	int3   
   1400089cf:	int3   
   1400089d0:	int3   
   1400089d1:	int3   
   1400089d2:	int3   
   1400089d3:	int3   
   1400089d4:	int3   
   1400089d5:	int3   
   1400089d6:	int3   
   1400089d7:	int3   
   1400089d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400089dd:	push   rdi
   1400089de:	sub    rsp,0x20
   1400089e2:	lea    rax,[rip+0xffffffffffffb88f]        # 0x140004278
   1400089e9:	mov    edi,edx
   1400089eb:	mov    rbx,rcx
   1400089ee:	mov    QWORD PTR [rcx],rax
   1400089f1:	cmp    QWORD PTR [rcx+0x38],0x10
   1400089f6:	jb     0x140008a02
   1400089f8:	mov    rcx,QWORD PTR [rcx+0x20]
   1400089fc:	call   QWORD PTR [rip+0x9b5e]        # 0x140012560
   140008a02:	and    QWORD PTR [rbx+0x30],0x0
   140008a07:	mov    QWORD PTR [rbx+0x38],0xf
   140008a0f:	mov    rcx,rbx
   140008a12:	mov    BYTE PTR [rbx+0x20],0x0
   140008a16:	call   QWORD PTR [rip+0x9d14]        # 0x140012730
   140008a1c:	test   dil,0x1
   140008a20:	je     0x140008a2b
   140008a22:	mov    rcx,rbx
   140008a25:	call   QWORD PTR [rip+0x9b35]        # 0x140012560
   140008a2b:	mov    rax,rbx
   140008a2e:	mov    rbx,QWORD PTR [rsp+0x30]
   140008a33:	add    rsp,0x20
   140008a37:	pop    rdi
   140008a38:	ret    
   140008a39:	int3   
   140008a3a:	int3   
   140008a3b:	int3   
   140008a3c:	int3   
   140008a3d:	int3   
   140008a3e:	int3   
   140008a3f:	int3   
   140008a40:	mov    QWORD PTR [rsp+0x8],rcx
   140008a45:	push   rdi
   140008a46:	sub    rsp,0x30
   140008a4a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008a53:	mov    QWORD PTR [rsp+0x48],rbx
   140008a58:	mov    rbx,rdx
   140008a5b:	mov    rdi,rcx
   140008a5e:	call   QWORD PTR [rip+0x9cbc]        # 0x140012720
   140008a64:	nop
   140008a65:	lea    rax,[rip+0xffffffffffffb80c]        # 0x140004278
   140008a6c:	mov    QWORD PTR [rdi],rax
   140008a6f:	lea    rcx,[rdi+0x18]
   140008a73:	mov    QWORD PTR [rcx+0x20],0xf
   140008a7b:	and    QWORD PTR [rcx+0x18],0x0
   140008a80:	mov    BYTE PTR [rcx+0x8],0x0
   140008a84:	lea    rdx,[rbx+0x18]
   140008a88:	or     r9,0xffffffffffffffff
   140008a8c:	xor    r8d,r8d
   140008a8f:	call   0x140008edc
   140008a94:	nop
   140008a95:	mov    rax,rdi
   140008a98:	mov    rbx,QWORD PTR [rsp+0x48]
   140008a9d:	add    rsp,0x30
   140008aa1:	pop    rdi
   140008aa2:	ret    
   140008aa3:	int3   
   140008aa4:	int3   
   140008aa5:	int3   
   140008aa6:	int3   
   140008aa7:	int3   
   140008aa8:	int3   
   140008aa9:	int3   
   140008aaa:	int3   
   140008aab:	int3   
   140008aac:	rex push rbx
   140008aae:	sub    rsp,0x20
   140008ab2:	lea    rax,[rip+0xffffffffffffb7bf]        # 0x140004278
   140008ab9:	mov    rbx,rcx
   140008abc:	mov    QWORD PTR [rcx],rax
   140008abf:	cmp    QWORD PTR [rcx+0x38],0x10
   140008ac4:	jb     0x140008ad0
   140008ac6:	mov    rcx,QWORD PTR [rcx+0x20]
   140008aca:	call   QWORD PTR [rip+0x9a90]        # 0x140012560
   140008ad0:	and    QWORD PTR [rbx+0x30],0x0
   140008ad5:	mov    QWORD PTR [rbx+0x38],0xf
   140008add:	mov    rcx,rbx
   140008ae0:	mov    BYTE PTR [rbx+0x20],0x0
   140008ae4:	add    rsp,0x20
   140008ae8:	pop    rbx
   140008ae9:	rex.W jmp QWORD PTR [rip+0x9c40]        # 0x140012730
   140008af0:	int3   
   140008af1:	int3   
   140008af2:	int3   
   140008af3:	int3   
   140008af4:	int3   
   140008af5:	int3   
   140008af6:	int3   
   140008af7:	int3   
   140008af8:	sub    rsp,0x78
   140008afc:	mov    rax,QWORD PTR [rip+0x36ad]        # 0x14000c1b0
   140008b03:	xor    rax,rsp
   140008b06:	mov    QWORD PTR [rsp+0x60],rax
   140008b0b:	mov    rdx,rcx
   140008b0e:	lea    rcx,[rsp+0x20]
   140008b13:	call   0x140008b30
   140008b18:	lea    rdx,[rip+0x2ab1]        # 0x14000b5d0
   140008b1f:	lea    rcx,[rsp+0x20]
   140008b24:	call   0x140009bd6
   140008b29:	int3   
   140008b2a:	int3   
   140008b2b:	int3   
   140008b2c:	int3   
   140008b2d:	int3   
   140008b2e:	int3   
   140008b2f:	int3   
   140008b30:	mov    QWORD PTR [rsp+0x8],rcx
   140008b35:	push   rdi
   140008b36:	sub    rsp,0x30
   140008b3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008b43:	mov    QWORD PTR [rsp+0x48],rbx
   140008b48:	mov    rbx,rdx
   140008b4b:	mov    rdi,rcx
   140008b4e:	call   QWORD PTR [rip+0x9bcc]        # 0x140012720
   140008b54:	nop
   140008b55:	lea    rax,[rip+0xffffffffffffb71c]        # 0x140004278
   140008b5c:	mov    QWORD PTR [rdi],rax
   140008b5f:	lea    rcx,[rdi+0x18]
   140008b63:	mov    QWORD PTR [rcx+0x20],0xf
   140008b6b:	and    QWORD PTR [rcx+0x18],0x0
   140008b70:	mov    BYTE PTR [rcx+0x8],0x0
   140008b74:	lea    rdx,[rbx+0x18]
   140008b78:	or     r9,0xffffffffffffffff
   140008b7c:	xor    r8d,r8d
   140008b7f:	call   0x140008edc
   140008b84:	nop
   140008b85:	lea    rax,[rip+0xffffffffffffb69c]        # 0x140004228
   140008b8c:	mov    QWORD PTR [rdi],rax
   140008b8f:	mov    rax,rdi
   140008b92:	mov    rbx,QWORD PTR [rsp+0x48]
   140008b97:	add    rsp,0x30
   140008b9b:	pop    rdi
   140008b9c:	ret    
   140008b9d:	int3   
   140008b9e:	int3   
   140008b9f:	int3   
   140008ba0:	int3   
   140008ba1:	int3   
   140008ba2:	int3   
   140008ba3:	int3   
   140008ba4:	rex push rbx
   140008ba6:	sub    rsp,0x20
   140008baa:	lea    rax,[rip+0xffffffffffffb63f]        # 0x1400041f0
   140008bb1:	mov    rbx,rcx
   140008bb4:	mov    QWORD PTR [rcx],rax
   140008bb7:	test   dl,0x1
   140008bba:	je     0x140008bc2
   140008bbc:	call   QWORD PTR [rip+0x999e]        # 0x140012560
   140008bc2:	mov    rax,rbx
   140008bc5:	add    rsp,0x20
   140008bc9:	pop    rbx
   140008bca:	ret    
   140008bcb:	int3   
   140008bcc:	int3   
   140008bcd:	int3   
   140008bce:	int3   
   140008bcf:	int3   
   140008bd0:	int3   
   140008bd1:	int3   
   140008bd2:	int3   
   140008bd3:	int3   
   140008bd4:	mov    QWORD PTR [rsp+0x8],rcx
   140008bd9:	push   rdi
   140008bda:	sub    rsp,0x30
   140008bde:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008be7:	mov    QWORD PTR [rsp+0x48],rbx
   140008bec:	mov    rdi,rcx
   140008bef:	add    rcx,0x78
   140008bf3:	call   0x140008e48
   140008bf8:	mov    rcx,QWORD PTR [rdi+0x80]
   140008bff:	call   QWORD PTR [rip+0x995b]        # 0x140012560
   140008c05:	and    QWORD PTR [rdi+0x80],0x0
   140008c0d:	lea    rcx,[rdi+0x60]
   140008c11:	call   0x140008e48
   140008c16:	mov    rcx,QWORD PTR [rdi+0x68]
   140008c1a:	call   QWORD PTR [rip+0x9940]        # 0x140012560
   140008c20:	and    QWORD PTR [rdi+0x68],0x0
   140008c25:	mov    rbx,QWORD PTR [rsp+0x48]
   140008c2a:	add    rsp,0x30
   140008c2e:	pop    rdi
   140008c2f:	ret    
   140008c30:	int3   
   140008c31:	int3   
   140008c32:	int3   
   140008c33:	int3   
   140008c34:	int3   
   140008c35:	int3   
   140008c36:	int3   
   140008c37:	int3   
   140008c38:	mov    QWORD PTR [rsp+0x8],rbx
   140008c3d:	mov    QWORD PTR [rsp+0x10],rbp
   140008c42:	mov    QWORD PTR [rsp+0x18],rsi
   140008c47:	push   rdi
   140008c48:	push   r14
   140008c4a:	push   r15
   140008c4c:	sub    rsp,0x20
   140008c50:	mov    ebp,r9d
   140008c53:	mov    rdi,r8
   140008c56:	mov    r14,rdx
   140008c59:	mov    rbx,rcx
   140008c5c:	call   0x140008ff4
   140008c61:	xor    r15d,r15d
   140008c64:	mov    QWORD PTR [rbx+0x68],rax
   140008c68:	mov    QWORD PTR [rbx+0x70],r15
   140008c6c:	call   0x140008ff4
   140008c71:	lea    esi,[r15+0x21]
   140008c75:	xor    edx,edx
   140008c77:	mov    rcx,rbx
   140008c7a:	mov    r8d,esi
   140008c7d:	mov    QWORD PTR [rbx+0x80],rax
   140008c84:	mov    QWORD PTR [rbx+0x88],r15
   140008c8b:	call   0x14000a286
   140008c90:	xor    eax,eax
   140008c92:	lea    r11,[rbx+0x42]
   140008c96:	test   r14,r14
   140008c99:	lea    r8,[rip+0xffffffffffffb294]        # 0x140003f34
   140008ca0:	mov    QWORD PTR [r11],rax
   140008ca3:	cmove  r14,r8
   140008ca7:	mov    BYTE PTR [r11+0x8],al
   140008cab:	mov    rcx,rbx
   140008cae:	sub    r14,rbx
   140008cb1:	mov    edx,r15d
   140008cb4:	lea    rax,[rsi+0x7fffffdd]
   140008cbb:	test   rax,rax
   140008cbe:	je     0x140008cd6
   140008cc0:	movzx  eax,WORD PTR [r14+rcx*1]
   140008cc5:	test   ax,ax
   140008cc8:	je     0x140008cd6
   140008cca:	mov    WORD PTR [rcx],ax
   140008ccd:	add    rcx,0x2
   140008cd1:	dec    rsi
   140008cd4:	jne    0x140008cb4
   140008cd6:	mov    r9d,0x8007007a
   140008cdc:	test   rsi,rsi
   140008cdf:	jne    0x140008ce8
   140008ce1:	sub    rcx,0x2
   140008ce5:	mov    edx,r9d
   140008ce8:	mov    WORD PTR [rcx],r15w
   140008cec:	test   edx,edx
   140008cee:	jns    0x140008cf4
   140008cf0:	mov    WORD PTR [rbx],r15w
   140008cf4:	test   rdi,rdi
   140008cf7:	mov    edx,0x9
   140008cfc:	mov    rcx,r11
   140008cff:	cmove  rdi,r8
   140008d03:	mov    r8d,r15d
   140008d06:	sub    rdi,r11
   140008d09:	lea    rax,[rdx+0x7ffffff5]
   140008d10:	test   rax,rax
   140008d13:	je     0x140008d2a
   140008d15:	movzx  eax,WORD PTR [rdi+rcx*1]
   140008d19:	test   ax,ax
   140008d1c:	je     0x140008d2a
   140008d1e:	mov    WORD PTR [rcx],ax
   140008d21:	add    rcx,0x2
   140008d25:	dec    rdx
   140008d28:	jne    0x140008d09
   140008d2a:	test   rdx,rdx
   140008d2d:	jne    0x140008d36
   140008d2f:	sub    rcx,0x2
   140008d33:	mov    r8d,r9d
   140008d36:	mov    WORD PTR [rcx],r15w
   140008d3a:	test   r8d,r8d
   140008d3d:	jns    0x140008d43
   140008d3f:	mov    WORD PTR [r11],r15w
   140008d43:	mov    eax,DWORD PTR [rsp+0x60]
   140008d47:	mov    rsi,QWORD PTR [rsp+0x50]
   140008d4c:	mov    DWORD PTR [rbx+0x58],ebp
   140008d4f:	mov    rbp,QWORD PTR [rsp+0x48]
   140008d54:	mov    DWORD PTR [rbx+0x54],eax
   140008d57:	mov    rax,rbx
   140008d5a:	mov    rbx,QWORD PTR [rsp+0x40]
   140008d5f:	add    rsp,0x20
   140008d63:	pop    r15
   140008d65:	pop    r14
   140008d67:	pop    rdi
   140008d68:	ret    
   140008d69:	int3   
   140008d6a:	int3   
   140008d6b:	int3   
   140008d6c:	int3   
   140008d6d:	int3   
   140008d6e:	int3   
   140008d6f:	int3   
   140008d70:	rex push rbx
   140008d72:	sub    rsp,0x20
   140008d76:	and    QWORD PTR [rcx+0x18],0x0
   140008d7b:	mov    QWORD PTR [rcx+0x20],0xf
   140008d83:	or     r9,0xffffffffffffffff
   140008d87:	xor    r8d,r8d
   140008d8a:	mov    rbx,rcx
   140008d8d:	mov    BYTE PTR [rcx+0x8],0x0
   140008d91:	call   0x140008edc
   140008d96:	mov    rax,rbx
   140008d99:	add    rsp,0x20
   140008d9d:	pop    rbx
   140008d9e:	ret    
   140008d9f:	int3   
   140008da0:	int3   
   140008da1:	int3   
   140008da2:	int3   
   140008da3:	int3   
   140008da4:	int3   
   140008da5:	int3   
   140008da6:	int3   
   140008da7:	int3   
   140008da8:	rex push rbx
   140008daa:	sub    rsp,0x20
   140008dae:	xor    eax,eax
   140008db0:	mov    QWORD PTR [rcx+0x20],0xf
   140008db8:	mov    rbx,rcx
   140008dbb:	mov    QWORD PTR [rcx+0x18],rax
   140008dbf:	mov    BYTE PTR [rcx+0x8],al
   140008dc2:	or     r8,0xffffffffffffffff
   140008dc6:	inc    r8
   140008dc9:	cmp    BYTE PTR [rdx+r8*1],al
   140008dcd:	jne    0x140008dc6
   140008dcf:	call   0x140009030
   140008dd4:	mov    rax,rbx
   140008dd7:	add    rsp,0x20
   140008ddb:	pop    rbx
   140008ddc:	ret    
   140008ddd:	int3   
   140008dde:	int3   
   140008ddf:	int3   
   140008de0:	int3   
   140008de1:	int3   
   140008de2:	int3   
   140008de3:	int3   
   140008de4:	rex push rbx
   140008de6:	sub    rsp,0x20
   140008dea:	cmp    QWORD PTR [rcx+0x20],0x10
   140008def:	mov    rbx,rcx
   140008df2:	jb     0x140008dfe
   140008df4:	mov    rcx,QWORD PTR [rcx+0x8]
   140008df8:	call   QWORD PTR [rip+0x9762]        # 0x140012560
   140008dfe:	and    QWORD PTR [rbx+0x18],0x0
   140008e03:	mov    QWORD PTR [rbx+0x20],0xf
   140008e0b:	mov    BYTE PTR [rbx+0x8],0x0
   140008e0f:	add    rsp,0x20
   140008e13:	pop    rbx
   140008e14:	ret    
   140008e15:	int3   
   140008e16:	int3   
   140008e17:	int3   
   140008e18:	int3   
   140008e19:	int3   
   140008e1a:	int3   
   140008e1b:	int3   
   140008e1c:	rex push rbx
   140008e1e:	sub    rsp,0x20
   140008e22:	mov    rbx,rcx
   140008e25:	call   0x140008e48
   140008e2a:	mov    rcx,QWORD PTR [rbx+0x8]
   140008e2e:	call   QWORD PTR [rip+0x972c]        # 0x140012560
   140008e34:	and    QWORD PTR [rbx+0x8],0x0
   140008e39:	add    rsp,0x20
   140008e3d:	pop    rbx
   140008e3e:	ret    
   140008e3f:	int3   
   140008e40:	int3   
   140008e41:	int3   
   140008e42:	int3   
   140008e43:	int3   
   140008e44:	int3   
   140008e45:	int3   
   140008e46:	int3   
   140008e47:	int3   
   140008e48:	mov    rax,rsp
   140008e4b:	push   rdi
   140008e4c:	sub    rsp,0x30
   140008e50:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140008e58:	mov    QWORD PTR [rax+0x10],rbx
   140008e5c:	mov    QWORD PTR [rax+0x18],rbp
   140008e60:	mov    QWORD PTR [rax+0x20],rsi
   140008e64:	mov    rdi,rcx
   140008e67:	mov    rax,QWORD PTR [rcx+0x8]
   140008e6b:	mov    rbx,QWORD PTR [rax]
   140008e6e:	mov    QWORD PTR [rax],rax
   140008e71:	mov    rax,QWORD PTR [rcx+0x8]
   140008e75:	mov    QWORD PTR [rax+0x8],rax
   140008e79:	xor    ebp,ebp
   140008e7b:	mov    QWORD PTR [rcx+0x10],rbp
   140008e7f:	cmp    rbx,QWORD PTR [rcx+0x8]
   140008e83:	jmp    0x140008eb9
   140008e85:	mov    rsi,QWORD PTR [rbx]
   140008e88:	cmp    QWORD PTR [rbx+0x30],0x8
   140008e8d:	jb     0x140008e99
   140008e8f:	mov    rcx,QWORD PTR [rbx+0x18]
   140008e93:	call   QWORD PTR [rip+0x96c7]        # 0x140012560
   140008e99:	mov    QWORD PTR [rbx+0x30],0x7
   140008ea1:	mov    QWORD PTR [rbx+0x28],rbp
   140008ea5:	mov    WORD PTR [rbx+0x18],bp
   140008ea9:	mov    rcx,rbx
   140008eac:	call   QWORD PTR [rip+0x96ae]        # 0x140012560
   140008eb2:	mov    rbx,rsi
   140008eb5:	cmp    rsi,QWORD PTR [rdi+0x8]
   140008eb9:	mov    QWORD PTR [rsp+0x40],rbx
   140008ebe:	jne    0x140008e85
   140008ec0:	mov    rbx,QWORD PTR [rsp+0x48]
   140008ec5:	mov    rbp,QWORD PTR [rsp+0x50]
   140008eca:	mov    rsi,QWORD PTR [rsp+0x58]
   140008ecf:	add    rsp,0x30
   140008ed3:	pop    rdi
   140008ed4:	ret    
   140008ed5:	int3   
   140008ed6:	int3   
   140008ed7:	int3   
   140008ed8:	int3   
   140008ed9:	int3   
   140008eda:	int3   
   140008edb:	int3   
   140008edc:	mov    rax,rsp
   140008edf:	mov    QWORD PTR [rax+0x8],rbx
   140008ee3:	mov    QWORD PTR [rax+0x10],rbp
   140008ee7:	mov    QWORD PTR [rax+0x18],rsi
   140008eeb:	mov    QWORD PTR [rax+0x20],rdi
   140008eef:	push   r14
   140008ef1:	sub    rsp,0x20
   140008ef5:	mov    r14,r9
   140008ef8:	mov    rbp,r8
   140008efb:	mov    rsi,rdx
   140008efe:	mov    rbx,rcx
   140008f01:	cmp    QWORD PTR [rdx+0x18],r8
   140008f05:	jae    0x140008f0c
   140008f07:	call   0x14000959c
   140008f0c:	mov    rdi,QWORD PTR [rsi+0x18]
   140008f10:	sub    rdi,rbp
   140008f13:	cmp    r14,rdi
   140008f16:	cmovb  rdi,r14
   140008f1a:	cmp    rbx,rsi
   140008f1d:	jne    0x140008f41
   140008f1f:	lea    rdx,[rdi+rbp*1]
   140008f23:	or     r8,0xffffffffffffffff
   140008f27:	mov    rcx,rbx
   140008f2a:	call   0x140009130
   140008f2f:	mov    r8,rbp
   140008f32:	xor    edx,edx
   140008f34:	mov    rcx,rbx
   140008f37:	call   0x140009130
   140008f3c:	jmp    0x140008fce
   140008f41:	cmp    rdi,0xfffffffffffffffe
   140008f45:	jbe    0x140008f4c
   140008f47:	call   0x14000951c
   140008f4c:	xor    r14d,r14d
   140008f4f:	cmp    QWORD PTR [rbx+0x20],rdi
   140008f53:	jae    0x140008f66
   140008f55:	mov    r8,QWORD PTR [rbx+0x18]
   140008f59:	mov    rdx,rdi
   140008f5c:	mov    rcx,rbx
   140008f5f:	call   0x1400091e0
   140008f64:	jmp    0x140008f83
   140008f66:	test   rdi,rdi
   140008f69:	jne    0x140008f88
   140008f6b:	cmp    QWORD PTR [rbx+0x20],0x10
   140008f70:	mov    QWORD PTR [rbx+0x18],r14
   140008f74:	jb     0x140008f7c
   140008f76:	mov    rax,QWORD PTR [rbx+0x8]
   140008f7a:	jmp    0x140008f80
   140008f7c:	lea    rax,[rbx+0x8]
   140008f80:	mov    BYTE PTR [rax],r14b
   140008f83:	test   rdi,rdi
   140008f86:	je     0x140008fce
   140008f88:	cmp    QWORD PTR [rsi+0x20],0x10
   140008f8d:	jb     0x140008f95
   140008f8f:	mov    rax,QWORD PTR [rsi+0x8]
   140008f93:	jmp    0x140008f99
   140008f95:	lea    rax,[rsi+0x8]
   140008f99:	mov    rdx,QWORD PTR [rbx+0x20]
   140008f9d:	lea    rsi,[rbx+0x8]
   140008fa1:	cmp    rdx,0x10
   140008fa5:	jb     0x140008fac
   140008fa7:	mov    rcx,QWORD PTR [rsi]
   140008faa:	jmp    0x140008faf
   140008fac:	mov    rcx,rsi
   140008faf:	lea    r8,[rax+rbp*1]
   140008fb3:	mov    r9,rdi
   140008fb6:	call   QWORD PTR [rip+0x975c]        # 0x140012718
   140008fbc:	cmp    QWORD PTR [rbx+0x20],0x10
   140008fc1:	mov    QWORD PTR [rbx+0x18],rdi
   140008fc5:	jb     0x140008fca
   140008fc7:	mov    rsi,QWORD PTR [rsi]
   140008fca:	mov    BYTE PTR [rsi+rdi*1],r14b
   140008fce:	mov    rbp,QWORD PTR [rsp+0x38]
   140008fd3:	mov    rsi,QWORD PTR [rsp+0x40]
   140008fd8:	mov    rdi,QWORD PTR [rsp+0x48]
   140008fdd:	mov    rax,rbx
   140008fe0:	mov    rbx,QWORD PTR [rsp+0x30]
   140008fe5:	add    rsp,0x20
   140008fe9:	pop    r14
   140008feb:	ret    
   140008fec:	int3   
   140008fed:	int3   
   140008fee:	int3   
   140008fef:	int3   
   140008ff0:	int3   
   140008ff1:	int3   
   140008ff2:	int3   
   140008ff3:	int3   
   140008ff4:	sub    rsp,0x38
   140008ff8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140009001:	mov    ecx,0x38
   140009006:	call   QWORD PTR [rip+0x955c]        # 0x140012568
   14000900c:	mov    QWORD PTR [rsp+0x40],rax
   140009011:	test   rax,rax
   140009014:	je     0x140009019
   140009016:	mov    QWORD PTR [rax],rax
   140009019:	lea    rcx,[rax+0x8]
   14000901d:	test   rcx,rcx
   140009020:	je     0x140009025
   140009022:	mov    QWORD PTR [rcx],rax
   140009025:	add    rsp,0x38
   140009029:	ret    
   14000902a:	int3   
   14000902b:	int3   
   14000902c:	int3   
   14000902d:	int3   
   14000902e:	int3   
   14000902f:	int3   
   140009030:	mov    QWORD PTR [rsp+0x8],rbx
   140009035:	mov    QWORD PTR [rsp+0x10],rbp
   14000903a:	mov    QWORD PTR [rsp+0x18],rsi
   14000903f:	push   rdi
   140009040:	sub    rsp,0x20
   140009044:	cmp    QWORD PTR [rcx+0x20],0x10
   140009049:	mov    rsi,r8
   14000904c:	mov    rbp,rdx
   14000904f:	mov    rdi,rcx
   140009052:	lea    rbx,[rcx+0x8]
   140009056:	jb     0x14000905d
   140009058:	mov    rax,QWORD PTR [rbx]
   14000905b:	jmp    0x140009060
   14000905d:	mov    rax,rbx
   140009060:	cmp    rdx,rax
   140009063:	jb     0x14000909d
   140009065:	cmp    QWORD PTR [rcx+0x20],0x10
   14000906a:	jb     0x140009071
   14000906c:	mov    rcx,QWORD PTR [rbx]
   14000906f:	jmp    0x140009074
   140009071:	mov    rcx,rbx
   140009074:	add    rcx,QWORD PTR [rdi+0x18]
   140009078:	cmp    rcx,rdx
   14000907b:	jbe    0x14000909d
   14000907d:	cmp    QWORD PTR [rdi+0x20],0x10
   140009082:	jb     0x140009087
   140009084:	mov    rbx,QWORD PTR [rbx]
   140009087:	sub    rbp,rbx
   14000908a:	mov    r9,r8
   14000908d:	mov    rdx,rdi
   140009090:	mov    r8,rbp
   140009093:	mov    rcx,rdi
   140009096:	call   0x140008edc
   14000909b:	jmp    0x140009112
   14000909d:	cmp    r8,0xfffffffffffffffe
   1400090a1:	jbe    0x1400090a8
   1400090a3:	call   0x14000951c
   1400090a8:	cmp    QWORD PTR [rdi+0x20],rsi
   1400090ac:	jae    0x1400090bf
   1400090ae:	mov    r8,QWORD PTR [rdi+0x18]
   1400090b2:	mov    rdx,rsi
   1400090b5:	mov    rcx,rdi
   1400090b8:	call   0x1400091e0
   1400090bd:	jmp    0x1400090da
   1400090bf:	test   rsi,rsi
   1400090c2:	jne    0x1400090df
   1400090c4:	and    QWORD PTR [rdi+0x18],rsi
   1400090c8:	cmp    QWORD PTR [rdi+0x20],0x10
   1400090cd:	jb     0x1400090d4
   1400090cf:	mov    rax,QWORD PTR [rbx]
   1400090d2:	jmp    0x1400090d7
   1400090d4:	mov    rax,rbx
   1400090d7:	mov    BYTE PTR [rax],0x0
   1400090da:	test   rsi,rsi
   1400090dd:	je     0x14000910f
   1400090df:	mov    rdx,QWORD PTR [rdi+0x20]
   1400090e3:	cmp    rdx,0x10
   1400090e7:	jb     0x1400090ee
   1400090e9:	mov    rcx,QWORD PTR [rbx]
   1400090ec:	jmp    0x1400090f1
   1400090ee:	mov    rcx,rbx
   1400090f1:	mov    r9,rsi
   1400090f4:	mov    r8,rbp
   1400090f7:	call   QWORD PTR [rip+0x961b]        # 0x140012718
   1400090fd:	cmp    QWORD PTR [rdi+0x20],0x10
   140009102:	mov    QWORD PTR [rdi+0x18],rsi
   140009106:	jb     0x14000910b
   140009108:	mov    rbx,QWORD PTR [rbx]
   14000910b:	mov    BYTE PTR [rbx+rsi*1],0x0
   14000910f:	mov    rax,rdi
   140009112:	mov    rbx,QWORD PTR [rsp+0x30]
   140009117:	mov    rbp,QWORD PTR [rsp+0x38]
   14000911c:	mov    rsi,QWORD PTR [rsp+0x40]
   140009121:	add    rsp,0x20
   140009125:	pop    rdi
   140009126:	ret    
   140009127:	int3   
   140009128:	int3   
   140009129:	int3   
   14000912a:	int3   
   14000912b:	int3   
   14000912c:	int3   
   14000912d:	int3   
   14000912e:	int3   
   14000912f:	int3   
   140009130:	mov    QWORD PTR [rsp+0x8],rbx
   140009135:	mov    QWORD PTR [rsp+0x10],rbp
   14000913a:	mov    QWORD PTR [rsp+0x18],rsi
   14000913f:	push   rdi
   140009140:	sub    rsp,0x20
   140009144:	mov    rsi,r8
   140009147:	mov    rbp,rdx
   14000914a:	mov    rdi,rcx
   14000914d:	cmp    QWORD PTR [rcx+0x18],rdx
   140009151:	jae    0x140009158
   140009153:	call   0x14000959c
   140009158:	mov    r9,QWORD PTR [rdi+0x18]
   14000915c:	sub    r9,rbp
   14000915f:	cmp    r9,rsi
   140009162:	cmovb  rsi,r9
   140009166:	test   rsi,rsi
   140009169:	je     0x1400091c0
   14000916b:	mov    rdx,QWORD PTR [rdi+0x20]
   14000916f:	lea    rbx,[rdi+0x8]
   140009173:	cmp    rdx,0x10
   140009177:	jb     0x14000917e
   140009179:	mov    rcx,QWORD PTR [rbx]
   14000917c:	jmp    0x140009181
   14000917e:	mov    rcx,rbx
   140009181:	cmp    rdx,0x10
   140009185:	jb     0x14000918c
   140009187:	mov    rax,QWORD PTR [rbx]
   14000918a:	jmp    0x14000918f
   14000918c:	mov    rax,rbx
   14000918f:	lea    r8,[rcx+rbp*1]
   140009193:	lea    rcx,[rax+rbp*1]
   140009197:	sub    r9,rsi
   14000919a:	add    r8,rsi
   14000919d:	sub    rdx,rbp
   1400091a0:	call   QWORD PTR [rip+0x946a]        # 0x140012610
   1400091a6:	mov    r11,QWORD PTR [rdi+0x18]
   1400091aa:	sub    r11,rsi
   1400091ad:	cmp    QWORD PTR [rdi+0x20],0x10
   1400091b2:	mov    QWORD PTR [rdi+0x18],r11
   1400091b6:	jb     0x1400091bb
   1400091b8:	mov    rbx,QWORD PTR [rbx]
   1400091bb:	mov    BYTE PTR [rbx+r11*1],0x0
   1400091c0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400091c5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400091ca:	mov    rsi,QWORD PTR [rsp+0x40]
   1400091cf:	mov    rax,rdi
   1400091d2:	add    rsp,0x20
   1400091d6:	pop    rdi
   1400091d7:	ret    
   1400091d8:	int3   
   1400091d9:	int3   
   1400091da:	int3   
   1400091db:	int3   
   1400091dc:	int3   
   1400091dd:	int3   
   1400091de:	int3   
   1400091df:	int3   
   1400091e0:	mov    rax,rsp
   1400091e3:	mov    QWORD PTR [rax+0x18],r8
   1400091e7:	mov    QWORD PTR [rax+0x10],rdx
   1400091eb:	mov    QWORD PTR [rax+0x8],rcx
   1400091ef:	push   rbx
   1400091f0:	push   rsi
   1400091f1:	push   rdi
   1400091f2:	push   r14
   1400091f4:	sub    rsp,0x68
   1400091f8:	mov    QWORD PTR [rax-0x68],0xfffffffffffffffe
   140009200:	mov    rsi,r8
   140009203:	mov    rdi,rcx
   140009206:	mov    rbx,rdx
   140009209:	or     rbx,0xf
   14000920d:	mov    r9,0xfffffffffffffffe
   140009214:	cmp    rbx,r9
   140009217:	jbe    0x14000921e
   140009219:	mov    rbx,rdx
   14000921c:	jmp    0x140009249
   14000921e:	mov    r8,QWORD PTR [rcx+0x20]
   140009222:	mov    rcx,r8
   140009225:	shr    rcx,1
   140009228:	movabs rax,0xaaaaaaaaaaaaaaab
   140009232:	mul    rbx
   140009235:	shr    rdx,1
   140009238:	cmp    rdx,rcx
   14000923b:	jae    0x140009249
   14000923d:	sub    r9,rcx
   140009240:	cmp    r8,r9
   140009243:	ja     0x140009249
   140009245:	lea    rbx,[rcx+r8*1]
   140009249:	lea    rcx,[rbx+0x1]
   14000924d:	test   rcx,rcx
   140009250:	je     0x14000927e
   140009252:	xor    edx,edx
   140009254:	or     rax,0xffffffffffffffff
   140009258:	div    rcx
   14000925b:	cmp    rax,0x1
   14000925f:	jae    0x14000927e
   140009261:	xor    edx,edx
   140009263:	lea    rcx,[rsp+0x28]
   140009268:	call   0x1400049c8
   14000926d:	lea    rdx,[rip+0x233c]        # 0x14000b5b0
   140009274:	lea    rcx,[rsp+0x28]
   140009279:	call   0x140009bd6
   14000927e:	call   QWORD PTR [rip+0x92e4]        # 0x140012568
   140009284:	mov    r14,rax
   140009287:	jmp    0x1400092a9
   140009289:	mov    rdi,QWORD PTR [rsp+0x90]
   140009291:	mov    rsi,QWORD PTR [rsp+0xa0]
   140009299:	mov    rbx,QWORD PTR [rsp+0x98]
   1400092a1:	mov    r14,QWORD PTR [rsp+0xa8]
   1400092a9:	test   rsi,rsi
   1400092ac:	je     0x1400092cf
   1400092ae:	cmp    QWORD PTR [rdi+0x20],0x10
   1400092b3:	jb     0x1400092bb
   1400092b5:	mov    r8,QWORD PTR [rdi+0x8]
   1400092b9:	jmp    0x1400092bf
   1400092bb:	lea    r8,[rdi+0x8]
   1400092bf:	lea    rdx,[rbx+0x1]
   1400092c3:	mov    r9,rsi
   1400092c6:	mov    rcx,r14
   1400092c9:	call   QWORD PTR [rip+0x9449]        # 0x140012718
   1400092cf:	cmp    QWORD PTR [rdi+0x20],0x10
   1400092d4:	jb     0x1400092e0
   1400092d6:	mov    rcx,QWORD PTR [rdi+0x8]
   1400092da:	call   QWORD PTR [rip+0x9280]        # 0x140012560
   1400092e0:	lea    rax,[rdi+0x8]
   1400092e4:	mov    BYTE PTR [rax],0x0
   1400092e7:	mov    QWORD PTR [rax],r14
   1400092ea:	mov    QWORD PTR [rdi+0x20],rbx
   1400092ee:	mov    QWORD PTR [rdi+0x18],rsi
   1400092f2:	cmp    rbx,0x10
   1400092f6:	cmovae rax,r14
   1400092fa:	mov    BYTE PTR [rax+rsi*1],0x0
   1400092fe:	add    rsp,0x68
   140009302:	pop    r14
   140009304:	pop    rdi
   140009305:	pop    rsi
   140009306:	pop    rbx
   140009307:	ret    
   140009308:	int3   
   140009309:	int3   
   14000930a:	int3   
   14000930b:	int3   
   14000930c:	int3   
   14000930d:	int3   
   14000930e:	int3   
   14000930f:	int3   
   140009310:	rex push rbx
   140009312:	sub    rsp,0x20
   140009316:	cmp    BYTE PTR [rcx+0x8],0x0
   14000931a:	mov    rbx,rcx
   14000931d:	je     0x140009325
   14000931f:	mov    rax,QWORD PTR [rcx]
   140009322:	call   QWORD PTR [rax+0x10]
   140009325:	lea    rcx,[rbx+0x10]
   140009329:	call   QWORD PTR [rip+0x9209]        # 0x140012538
   14000932f:	mov    BYTE PTR [rbx+0x8],0x1
   140009333:	add    rsp,0x20
   140009337:	pop    rbx
   140009338:	ret    
   140009339:	int3   
   14000933a:	int3   
   14000933b:	int3   
   14000933c:	int3   
   14000933d:	int3   
   14000933e:	int3   
   14000933f:	int3   
   140009340:	xor    eax,eax
   140009342:	mov    QWORD PTR [rcx+0x10],rax
   140009346:	mov    BYTE PTR [rcx+0x8],al
   140009349:	ret    
   14000934a:	int3   
   14000934b:	int3   
   14000934c:	int3   
   14000934d:	int3   
   14000934e:	int3   
   14000934f:	int3   
   140009350:	add    rcx,0x10
   140009354:	rex.W jmp QWORD PTR [rip+0x91d5]        # 0x140012530
   14000935b:	int3   
   14000935c:	int3   
   14000935d:	int3   
   14000935e:	int3   
   14000935f:	int3   
   140009360:	int3   
   140009361:	int3   
   140009362:	int3   
   140009363:	int3   
   140009364:	add    rcx,0x10
   140009368:	rex.W jmp QWORD PTR [rip+0x91d9]        # 0x140012548
   14000936f:	int3   
   140009370:	int3   
   140009371:	int3   
   140009372:	int3   
   140009373:	int3   
   140009374:	int3   
   140009375:	int3   
   140009376:	int3   
   140009377:	int3   
   140009378:	add    rcx,0x10
   14000937c:	rex.W jmp QWORD PTR [rip+0x91bd]        # 0x140012540
   140009383:	int3   
   140009384:	int3   
   140009385:	int3   
   140009386:	int3   
   140009387:	int3   
   140009388:	int3   
   140009389:	int3   
   14000938a:	int3   
   14000938b:	int3   
   14000938c:	add    rcx,0x10
   140009390:	rex.W jmp QWORD PTR [rip+0x91b9]        # 0x140012550
   140009397:	int3   
   140009398:	int3   
   140009399:	int3   
   14000939a:	int3   
   14000939b:	int3   
   14000939c:	int3   
   14000939d:	int3   
   14000939e:	int3   
   14000939f:	int3   
   1400093a0:	sub    rsp,0x38
   1400093a4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400093ad:	cmp    edx,0x1
   1400093b0:	jne    0x1400093e6
   1400093b2:	mov    edx,0x2000
   1400093b7:	xor    ecx,ecx
   1400093b9:	call   QWORD PTR [rip+0x9101]        # 0x1400124c0
   1400093bf:	test   rax,rax
   1400093c2:	je     0x1400093fb
   1400093c4:	mov    rcx,rax
   1400093c7:	call   QWORD PTR [rip+0x90fb]        # 0x1400124c8
   1400093cd:	lea    rcx,[rip+0x354c]        # 0x14000c920
   1400093d4:	call   0x1400094f6
   1400093d9:	mov    QWORD PTR [rip+0x5668],rax        # 0x14000ea48
   1400093e0:	jmp    0x1400093f6
   1400093e2:	xor    eax,eax
   1400093e4:	jmp    0x1400093fb
   1400093e6:	test   edx,edx
   1400093e8:	jne    0x1400093f6
   1400093ea:	mov    rcx,QWORD PTR [rip+0x5657]        # 0x14000ea48
   1400093f1:	call   0x1400094f6
   1400093f6:	mov    eax,0x1
   1400093fb:	add    rsp,0x38
   1400093ff:	ret    
   140009400:	int3   
   140009401:	int3   
   140009402:	int3   
   140009403:	int3   
   140009404:	int3   
   140009405:	int3   
   140009406:	int3   
   140009407:	int3   
   140009408:	mov    rax,rsp
   14000940b:	push   rdi
   14000940c:	sub    rsp,0x40
   140009410:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140009418:	mov    QWORD PTR [rax+0x8],rbx
   14000941c:	mov    QWORD PTR [rax+0x10],rbp
   140009420:	mov    QWORD PTR [rax+0x18],rsi
   140009424:	mov    rbx,r9
   140009427:	mov    rdi,r8
   14000942a:	mov    esi,edx
   14000942c:	mov    rbp,rcx
   14000942f:	lea    rdx,[rip+0x34ea]        # 0x14000c920
   140009436:	lea    rcx,[rax-0x20]
   14000943a:	call   0x140009502
   14000943f:	nop
   140009440:	mov    r9,rbx
   140009443:	mov    r8,rdi
   140009446:	mov    edx,esi
   140009448:	mov    rcx,rbp
   14000944b:	call   0x14000950e
   140009450:	mov    rbx,rax
   140009453:	lea    rcx,[rsp+0x28]
   140009458:	call   0x1400094b4
   14000945d:	mov    rax,rbx
   140009460:	mov    rbx,QWORD PTR [rsp+0x50]
   140009465:	mov    rbp,QWORD PTR [rsp+0x58]
   14000946a:	mov    rsi,QWORD PTR [rsp+0x60]
   14000946f:	add    rsp,0x40
   140009473:	pop    rdi
   140009474:	ret    
   140009475:	int3   
   140009476:	int3   
   140009477:	int3   
   140009478:	int3   
   140009479:	int3   
   14000947a:	int3   
   14000947b:	int3   
   14000947c:	mov    QWORD PTR [rsp+0x8],rbx
   140009481:	push   rdi
   140009482:	sub    rsp,0x20
   140009486:	mov    ebx,edx
   140009488:	mov    rdi,rcx
   14000948b:	call   0x1400094ea
   140009490:	test   bl,0x1
   140009493:	je     0x14000949d
   140009495:	mov    rcx,rdi
   140009498:	call   0x1400094d2
   14000949d:	mov    rax,rdi
   1400094a0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400094a5:	add    rsp,0x20
   1400094a9:	pop    rdi
   1400094aa:	ret    
   1400094ab:	int3   
   1400094ac:	int3   
   1400094ad:	int3   
   1400094ae:	int3   
   1400094af:	int3   
   1400094b0:	int3   
   1400094b1:	int3   
   1400094b2:	int3   
   1400094b3:	int3   
   1400094b4:	mov    rdx,QWORD PTR [rcx+0x8]
   1400094b8:	mov    rax,QWORD PTR [rcx]
   1400094bb:	mov    QWORD PTR [rdx+0x8],rax
   1400094bf:	ret    
   1400094c0:	int3   
   1400094c1:	int3   
   1400094c2:	int3   
   1400094c3:	int3   
   1400094c4:	int3   
   1400094c5:	int3   
   1400094c6:	jmp    QWORD PTR [rip+0x9094]        # 0x140012560
   1400094cc:	int3   
   1400094cd:	int3   
   1400094ce:	int3   
   1400094cf:	int3   
   1400094d0:	int3   
   1400094d1:	int3   
   1400094d2:	jmp    QWORD PTR [rip+0x9098]        # 0x140012570
   1400094d8:	int3   
   1400094d9:	int3   
   1400094da:	int3   
   1400094db:	int3   
   1400094dc:	int3   
   1400094dd:	int3   
   1400094de:	jmp    QWORD PTR [rip+0x9094]        # 0x140012578
   1400094e4:	int3   
   1400094e5:	int3   
   1400094e6:	int3   
   1400094e7:	int3   
   1400094e8:	int3   
   1400094e9:	int3   
   1400094ea:	jmp    QWORD PTR [rip+0x9090]        # 0x140012580
   1400094f0:	int3   
   1400094f1:	int3   
   1400094f2:	int3   
   1400094f3:	int3   
   1400094f4:	int3   
   1400094f5:	int3   
   1400094f6:	jmp    QWORD PTR [rip+0x908c]        # 0x140012588
   1400094fc:	int3   
   1400094fd:	int3   
   1400094fe:	int3   
   1400094ff:	int3   
   140009500:	int3   
   140009501:	int3   
   140009502:	jmp    QWORD PTR [rip+0x9088]        # 0x140012590
   140009508:	int3   
   140009509:	int3   
   14000950a:	int3   
   14000950b:	int3   
   14000950c:	int3   
   14000950d:	int3   
   14000950e:	jmp    QWORD PTR [rip+0x9084]        # 0x140012598
   140009514:	int3   
   140009515:	int3   
   140009516:	int3   
   140009517:	int3   
   140009518:	int3   
   140009519:	int3   
   14000951a:	int3   
   14000951b:	int3   
   14000951c:	sub    rsp,0xa8
   140009523:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000952c:	mov    rax,QWORD PTR [rip+0x2c7d]        # 0x14000c1b0
   140009533:	xor    rax,rsp
   140009536:	mov    QWORD PTR [rsp+0x98],rax
   14000953e:	lea    rdx,[rip+0xffffffffffff7c3b]        # 0x140001180
   140009545:	lea    rcx,[rsp+0x70]
   14000954a:	call   0x140008da8
   14000954f:	nop
   140009550:	lea    rcx,[rsp+0x30]
   140009555:	call   0x140009bca
   14000955a:	nop
   14000955b:	lea    rax,[rip+0xffffffffffffad16]        # 0x140004278
   140009562:	mov    QWORD PTR [rsp+0x30],rax
   140009567:	lea    rdx,[rsp+0x70]
   14000956c:	lea    rcx,[rsp+0x48]
   140009571:	call   0x140008d70
   140009576:	nop
   140009577:	lea    rax,[rip+0xffffffffffffacaa]        # 0x140004228
   14000957e:	mov    QWORD PTR [rsp+0x30],rax
   140009583:	lea    rdx,[rip+0x2046]        # 0x14000b5d0
   14000958a:	lea    rcx,[rsp+0x30]
   14000958f:	call   0x140009bd6
   140009594:	int3   
   140009595:	int3   
   140009596:	int3   
   140009597:	int3   
   140009598:	int3   
   140009599:	int3   
   14000959a:	int3   
   14000959b:	int3   
   14000959c:	sub    rsp,0xa8
   1400095a3:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400095ac:	mov    rax,QWORD PTR [rip+0x2bfd]        # 0x14000c1b0
   1400095b3:	xor    rax,rsp
   1400095b6:	mov    QWORD PTR [rsp+0x90],rax
   1400095be:	mov    QWORD PTR [rsp+0x48],0xf
   1400095c7:	and    QWORD PTR [rsp+0x40],0x0
   1400095cd:	mov    BYTE PTR [rsp+0x30],0x0
   1400095d2:	mov    r8d,0x17
   1400095d8:	lea    rdx,[rip+0xffffffffffff7bb1]        # 0x140001190
   1400095df:	lea    rcx,[rsp+0x28]
   1400095e4:	call   0x140009030
   1400095e9:	nop
   1400095ea:	lea    rcx,[rsp+0x50]
   1400095ef:	call   0x140009bca
   1400095f4:	nop
   1400095f5:	lea    rax,[rip+0xffffffffffffac7c]        # 0x140004278
   1400095fc:	mov    QWORD PTR [rsp+0x50],rax
   140009601:	lea    rdx,[rsp+0x28]
   140009606:	lea    rcx,[rsp+0x68]
   14000960b:	call   0x140008d70
   140009610:	nop
   140009611:	lea    rax,[rip+0xffffffffffff7b50]        # 0x140001168
   140009618:	mov    QWORD PTR [rsp+0x50],rax
   14000961d:	lea    rdx,[rip+0x1ebc]        # 0x14000b4e0
   140009624:	lea    rcx,[rsp+0x50]
   140009629:	call   0x140009bd6
   14000962e:	int3   
   14000962f:	int3   
   140009630:	int3   
   140009631:	int3   
   140009632:	int3   
   140009633:	int3   
   140009634:	int3   
   140009635:	int3   
   140009636:	int3   
   140009637:	int3   
   140009638:	rex push rbx
   14000963a:	sub    rsp,0x20
   14000963e:	lea    rax,[rip+0xffffffffffffac33]        # 0x140004278
   140009645:	mov    rbx,rcx
   140009648:	mov    QWORD PTR [rcx],rax
   14000964b:	cmp    QWORD PTR [rcx+0x38],0x10
   140009650:	jb     0x14000965b
   140009652:	mov    rcx,QWORD PTR [rcx+0x20]
   140009656:	call   0x1400094c6
   14000965b:	and    QWORD PTR [rbx+0x30],0x0
   140009660:	mov    QWORD PTR [rbx+0x38],0xf
   140009668:	mov    rcx,rbx
   14000966b:	mov    BYTE PTR [rbx+0x20],0x0
   14000966f:	add    rsp,0x20
   140009673:	pop    rbx
   140009674:	jmp    0x140009b70
   140009679:	int3   
   14000967a:	int3   
   14000967b:	int3   
   14000967c:	int3   
   14000967d:	int3   
   14000967e:	int3   
   14000967f:	int3   
   140009680:	sub    rsp,0x78
   140009684:	mov    rax,QWORD PTR [rip+0x2b25]        # 0x14000c1b0
   14000968b:	xor    rax,rsp
   14000968e:	mov    QWORD PTR [rsp+0x60],rax
   140009693:	mov    rdx,rcx
   140009696:	lea    rcx,[rsp+0x20]
   14000969b:	call   0x1400096b8
   1400096a0:	lea    rdx,[rip+0x1e39]        # 0x14000b4e0
   1400096a7:	lea    rcx,[rsp+0x20]
   1400096ac:	call   0x140009bd6
   1400096b1:	int3   
   1400096b2:	int3   
   1400096b3:	int3   
   1400096b4:	int3   
   1400096b5:	int3   
   1400096b6:	int3   
   1400096b7:	int3   
   1400096b8:	mov    QWORD PTR [rsp+0x8],rcx
   1400096bd:	push   rdi
   1400096be:	sub    rsp,0x30
   1400096c2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400096cb:	mov    QWORD PTR [rsp+0x48],rbx
   1400096d0:	mov    rbx,rdx
   1400096d3:	mov    rdi,rcx
   1400096d6:	call   0x140009b7c
   1400096db:	nop
   1400096dc:	lea    rax,[rip+0xffffffffffffab95]        # 0x140004278
   1400096e3:	mov    QWORD PTR [rdi],rax
   1400096e6:	lea    rcx,[rdi+0x18]
   1400096ea:	mov    QWORD PTR [rcx+0x20],0xf
   1400096f2:	and    QWORD PTR [rcx+0x18],0x0
   1400096f7:	mov    BYTE PTR [rcx+0x8],0x0
   1400096fb:	lea    rdx,[rbx+0x18]
   1400096ff:	or     r9,0xffffffffffffffff
   140009703:	xor    r8d,r8d
   140009706:	call   0x140008edc
   14000970b:	nop
   14000970c:	lea    rax,[rip+0xffffffffffff7a55]        # 0x140001168
   140009713:	mov    QWORD PTR [rdi],rax
   140009716:	mov    rax,rdi
   140009719:	mov    rbx,QWORD PTR [rsp+0x48]
   14000971e:	add    rsp,0x30
   140009722:	pop    rdi
   140009723:	ret    
   140009724:	int3   
   140009725:	int3   
   140009726:	int3   
   140009727:	int3   
   140009728:	int3   
   140009729:	int3   
   14000972a:	int3   
   14000972b:	int3   
   14000972c:	mov    QWORD PTR [rsp+0x8],rbx
   140009731:	push   rdi
   140009732:	sub    rsp,0x20
   140009736:	lea    rax,[rip+0xffffffffffffab3b]        # 0x140004278
   14000973d:	mov    edi,edx
   14000973f:	mov    rbx,rcx
   140009742:	mov    QWORD PTR [rcx],rax
   140009745:	cmp    QWORD PTR [rcx+0x38],0x10
   14000974a:	jb     0x140009755
   14000974c:	mov    rcx,QWORD PTR [rcx+0x20]
   140009750:	call   0x1400094c6
   140009755:	and    QWORD PTR [rbx+0x30],0x0
   14000975a:	mov    QWORD PTR [rbx+0x38],0xf
   140009762:	mov    rcx,rbx
   140009765:	mov    BYTE PTR [rbx+0x20],0x0
   140009769:	call   0x140009b70
   14000976e:	test   dil,0x1
   140009772:	je     0x14000977c
   140009774:	mov    rcx,rbx
   140009777:	call   0x1400094c6
   14000977c:	mov    rax,rbx
   14000977f:	mov    rbx,QWORD PTR [rsp+0x30]
   140009784:	add    rsp,0x20
   140009788:	pop    rdi
   140009789:	ret    
   14000978a:	int3   
   14000978b:	int3   
   14000978c:	int3   
   14000978d:	int3   
   14000978e:	int3   
   14000978f:	int3   
   140009790:	sub    rsp,0x28
   140009794:	mov    eax,0x5a4d
   140009799:	cmp    WORD PTR [rip+0xffffffffffff6860],ax        # 0x140000000
   1400097a0:	je     0x1400097a6
   1400097a2:	xor    eax,eax
   1400097a4:	jmp    0x1400097f5
   1400097a6:	movsxd rcx,DWORD PTR [rip+0xffffffffffff688f]        # 0x14000003c
   1400097ad:	lea    rax,[rip+0xffffffffffff684c]        # 0x140000000
   1400097b4:	add    rcx,rax
   1400097b7:	cmp    DWORD PTR [rcx],0x4550
   1400097bd:	jne    0x1400097a2
   1400097bf:	movzx  eax,WORD PTR [rcx+0x18]
   1400097c3:	cmp    eax,0x10b
   1400097c8:	je     0x1400097e4
   1400097ca:	cmp    eax,0x20b
   1400097cf:	jne    0x1400097a2
   1400097d1:	xor    eax,eax
   1400097d3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400097da:	jbe    0x1400097f5
   1400097dc:	cmp    DWORD PTR [rcx+0xf8],eax
   1400097e2:	jmp    0x1400097f2
   1400097e4:	xor    eax,eax
   1400097e6:	cmp    DWORD PTR [rcx+0x74],0xe
   1400097ea:	jbe    0x1400097f5
   1400097ec:	cmp    DWORD PTR [rcx+0xe8],eax
   1400097f2:	setne  al
   1400097f5:	mov    ecx,0x1
   1400097fa:	mov    DWORD PTR [rip+0x5270],eax        # 0x14000ea70
   140009800:	call   0x140009ddc
   140009805:	mov    ecx,eax
   140009807:	call   QWORD PTR [rip+0x8ebb]        # 0x1400126c8
   14000980d:	mov    rcx,QWORD PTR [rip+0x8e84]        # 0x140012698
   140009814:	mov    eax,DWORD PTR [rip+0x526a]        # 0x14000ea84
   14000981a:	or     r11,0xffffffffffffffff
   14000981e:	mov    QWORD PTR [rip+0x6bdb],r11        # 0x140010400
   140009825:	mov    QWORD PTR [rip+0x6bdc],r11        # 0x140010408
   14000982c:	mov    DWORD PTR [rcx],eax
   14000982e:	mov    rcx,QWORD PTR [rip+0x8e5b]        # 0x140012690
   140009835:	mov    eax,DWORD PTR [rip+0x523d]        # 0x14000ea78
   14000983b:	mov    DWORD PTR [rcx],eax
   14000983d:	call   0x14000a000
   140009842:	cmp    DWORD PTR [rip+0x2977],0x0        # 0x14000c1c0
   140009849:	jne    0x140009858
   14000984b:	lea    rcx,[rip+0x7ae]        # 0x14000a000
   140009852:	call   QWORD PTR [rip+0x8e58]        # 0x1400126b0
   140009858:	xor    eax,eax
   14000985a:	add    rsp,0x28
   14000985e:	ret    
   14000985f:	int3   
   140009860:	int3   
   140009861:	int3   
   140009862:	int3   
   140009863:	int3   
   140009864:	int3   
   140009865:	int3   
   140009866:	int3   
   140009867:	int3   
   140009868:	sub    rsp,0x38
   14000986c:	mov    eax,DWORD PTR [rip+0x520e]        # 0x14000ea80
   140009872:	mov    r9d,DWORD PTR [rip+0x5203]        # 0x14000ea7c
   140009879:	lea    r8,[rip+0x51e8]        # 0x14000ea68
   140009880:	mov    DWORD PTR [rip+0x51ee],eax        # 0x14000ea74
   140009886:	lea    rax,[rip+0x51e7]        # 0x14000ea74
   14000988d:	lea    rdx,[rip+0x51cc]        # 0x14000ea60
   140009894:	lea    rcx,[rip+0x51bd]        # 0x14000ea58
   14000989b:	mov    QWORD PTR [rsp+0x20],rax
   1400098a0:	call   QWORD PTR [rip+0x8e2a]        # 0x1400126d0
   1400098a6:	mov    DWORD PTR [rip+0x51b0],eax        # 0x14000ea5c
   1400098ac:	add    rsp,0x38
   1400098b0:	ret    
   1400098b1:	int3   
   1400098b2:	int3   
   1400098b3:	int3   
   1400098b4:	int3   
   1400098b5:	int3   
   1400098b6:	int3   
   1400098b7:	int3   
   1400098b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400098bd:	mov    QWORD PTR [rsp+0x10],rsi
   1400098c2:	mov    QWORD PTR [rsp+0x18],rdi
   1400098c7:	push   r15
   1400098c9:	sub    rsp,0x30
   1400098cd:	mov    rax,QWORD PTR gs:0x30
   1400098d6:	mov    rbx,QWORD PTR [rax+0x8]
   1400098da:	xor    esi,esi
   1400098dc:	xor    eax,eax
   1400098de:	lock cmpxchg QWORD PTR [rip+0x6b09],rbx        # 0x1400103f0
   1400098e7:	je     0x140009904
   1400098e9:	cmp    rax,rbx
   1400098ec:	jne    0x1400098f7
   1400098ee:	mov    ebx,0x1
   1400098f3:	mov    esi,ebx
   1400098f5:	jmp    0x140009909
   1400098f7:	mov    ecx,0x3e8
   1400098fc:	call   QWORD PTR [rip+0x8bce]        # 0x1400124d0
   140009902:	jmp    0x1400098dc
   140009904:	mov    ebx,0x1
   140009909:	mov    eax,DWORD PTR [rip+0x6ae9]        # 0x1400103f8
   14000990f:	cmp    eax,ebx
   140009911:	jne    0x14000991f
   140009913:	mov    ecx,0x1f
   140009918:	call   0x140009e28
   14000991d:	jmp    0x14000997c
   14000991f:	mov    eax,DWORD PTR [rip+0x6ad3]        # 0x1400103f8
   140009925:	test   eax,eax
   140009927:	jne    0x140009976
   140009929:	mov    DWORD PTR [rip+0x6ac9],ebx        # 0x1400103f8
   14000992f:	lea    r15,[rip+0xffffffffffff771a]        # 0x140001050
   140009936:	lea    rdi,[rip+0xffffffffffff76fb]        # 0x140001038
   14000993d:	mov    QWORD PTR [rsp+0x28],rdi
   140009942:	mov    DWORD PTR [rsp+0x20],eax
   140009946:	cmp    rdi,r15
   140009949:	jae    0x140009968
   14000994b:	test   eax,eax
   14000994d:	jne    0x14000996c
   14000994f:	mov    rcx,QWORD PTR [rdi]
   140009952:	test   rcx,rcx
   140009955:	je     0x14000995d
   140009957:	call   rcx
   140009959:	mov    DWORD PTR [rsp+0x20],eax
   14000995d:	add    rdi,0x8
   140009961:	mov    QWORD PTR [rsp+0x28],rdi
   140009966:	jmp    0x140009946
   140009968:	test   eax,eax
   14000996a:	je     0x14000997c
   14000996c:	mov    eax,0xff
   140009971:	jmp    0x140009a50
   140009976:	mov    DWORD PTR [rip+0x50d8],ebx        # 0x14000ea54
   14000997c:	mov    eax,DWORD PTR [rip+0x6a76]        # 0x1400103f8
   140009982:	cmp    eax,ebx
   140009984:	jne    0x1400099a3
   140009986:	lea    rdx,[rip+0xffffffffffff76a3]        # 0x140001030
   14000998d:	lea    rcx,[rip+0xffffffffffff766c]        # 0x140001000
   140009994:	call   0x14000a00a
   140009999:	mov    DWORD PTR [rip+0x6a55],0x2        # 0x1400103f8
   1400099a3:	test   esi,esi
   1400099a5:	jne    0x1400099b0
   1400099a7:	xor    eax,eax
   1400099a9:	xchg   QWORD PTR [rip+0x6a40],rax        # 0x1400103f0
   1400099b0:	cmp    QWORD PTR [rip+0x6a58],0x0        # 0x140010410
   1400099b8:	je     0x1400099dc
   1400099ba:	lea    rcx,[rip+0x6a4f]        # 0x140010410
   1400099c1:	call   0x140009ed0
   1400099c6:	test   eax,eax
   1400099c8:	je     0x1400099dc
   1400099ca:	xor    r8d,r8d
   1400099cd:	lea    edx,[r8+0x2]
   1400099d1:	xor    ecx,ecx
   1400099d3:	mov    rax,QWORD PTR [rip+0x6a36]        # 0x140010410
   1400099da:	call   rax
   1400099dc:	mov    r8,QWORD PTR [rip+0x5085]        # 0x14000ea68
   1400099e3:	mov    rdx,QWORD PTR [rip+0x5076]        # 0x14000ea60
   1400099ea:	mov    ecx,DWORD PTR [rip+0x5068]        # 0x14000ea58
   1400099f0:	call   0x140004b00
   1400099f5:	mov    DWORD PTR [rip+0x5055],eax        # 0x14000ea50
   1400099fb:	cmp    DWORD PTR [rip+0x506e],0x0        # 0x14000ea70
   140009a02:	jne    0x140009a0c
   140009a04:	mov    ecx,eax
   140009a06:	call   QWORD PTR [rip+0x8cfc]        # 0x140012708
   140009a0c:	cmp    DWORD PTR [rip+0x5041],0x0        # 0x14000ea54
   140009a13:	jne    0x140009a21
   140009a15:	call   QWORD PTR [rip+0x8c9d]        # 0x1400126b8
   140009a1b:	mov    eax,DWORD PTR [rip+0x502f]        # 0x14000ea50
   140009a21:	jmp    0x140009a50
   140009a23:	mov    DWORD PTR [rip+0x5027],eax        # 0x14000ea50
   140009a29:	cmp    DWORD PTR [rip+0x5040],0x0        # 0x14000ea70
   140009a30:	jne    0x140009a3b
   140009a32:	mov    ecx,eax
   140009a34:	call   QWORD PTR [rip+0x8c86]        # 0x1400126c0
   140009a3a:	int3   
   140009a3b:	cmp    DWORD PTR [rip+0x5012],0x0        # 0x14000ea54
   140009a42:	jne    0x140009a50
   140009a44:	call   QWORD PTR [rip+0x8c6e]        # 0x1400126b8
   140009a4a:	mov    eax,DWORD PTR [rip+0x5000]        # 0x14000ea50
   140009a50:	mov    rbx,QWORD PTR [rsp+0x40]
   140009a55:	mov    rsi,QWORD PTR [rsp+0x48]
   140009a5a:	mov    rdi,QWORD PTR [rsp+0x50]
   140009a5f:	add    rsp,0x30
   140009a63:	pop    r15
   140009a65:	ret    
   140009a66:	int3   
   140009a67:	int3   
   140009a68:	int3   
   140009a69:	int3   
   140009a6a:	int3   
   140009a6b:	int3   
   140009a6c:	sub    rsp,0x28
   140009a70:	call   0x140009f24
   140009a75:	add    rsp,0x28
   140009a79:	jmp    0x1400098b8
   140009a7e:	int3   
   140009a7f:	int3   
   140009a80:	int3   
   140009a81:	int3   
   140009a82:	int3   
   140009a83:	int3   
   140009a84:	int3   
   140009a85:	int3   
   140009a86:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009a90:	cmp    rcx,QWORD PTR [rip+0x2719]        # 0x14000c1b0
   140009a97:	jne    0x140009aab
   140009a99:	rol    rcx,0x10
   140009a9d:	test   cx,0xffff
   140009aa2:	jne    0x140009aa7
   140009aa4:	ret    0x0
   140009aa7:	ror    rcx,0x10
   140009aab:	jmp    0x14000a024
   140009ab0:	int3   
   140009ab1:	int3   
   140009ab2:	int3   
   140009ab3:	int3   
   140009ab4:	int3   
   140009ab5:	int3   
   140009ab6:	int3   
   140009ab7:	int3   
   140009ab8:	sub    rsp,0x28
   140009abc:	call   0x140009ad8
   140009ac1:	neg    rax
   140009ac4:	sbb    eax,eax
   140009ac6:	neg    eax
   140009ac8:	dec    eax
   140009aca:	add    rsp,0x28
   140009ace:	ret    
   140009acf:	int3   
   140009ad0:	int3   
   140009ad1:	int3   
   140009ad2:	int3   
   140009ad3:	int3   
   140009ad4:	int3   
   140009ad5:	int3   
   140009ad6:	int3   
   140009ad7:	int3   
   140009ad8:	rex push rbx
   140009ada:	sub    rsp,0x20
   140009ade:	mov    rbx,rcx
   140009ae1:	mov    rax,QWORD PTR [rip+0x6920]        # 0x140010408
   140009ae8:	mov    QWORD PTR [rsp+0x38],rax
   140009aed:	cmp    rax,0xffffffffffffffff
   140009af1:	jne    0x140009afb
   140009af3:	call   QWORD PTR [rip+0x8b77]        # 0x140012670
   140009af9:	jmp    0x140009b58
   140009afb:	mov    ecx,0x8
   140009b00:	call   0x14000a19e
   140009b05:	nop
   140009b06:	mov    rax,QWORD PTR [rip+0x68fb]        # 0x140010408
   140009b0d:	mov    QWORD PTR [rsp+0x38],rax
   140009b12:	mov    rax,QWORD PTR [rip+0x68e7]        # 0x140010400
   140009b19:	mov    QWORD PTR [rsp+0x40],rax
   140009b1e:	lea    r8,[rsp+0x40]
   140009b23:	lea    rdx,[rsp+0x38]
   140009b28:	mov    rcx,rbx
   140009b2b:	call   0x14000a1b6
   140009b30:	mov    rbx,rax
   140009b33:	mov    rdx,QWORD PTR [rsp+0x38]
   140009b38:	mov    QWORD PTR [rip+0x68c9],rdx        # 0x140010408
   140009b3f:	mov    rdx,QWORD PTR [rsp+0x40]
   140009b44:	mov    QWORD PTR [rip+0x68b5],rdx        # 0x140010400
   140009b4b:	mov    ecx,0x8
   140009b50:	call   0x14000a1aa
   140009b55:	mov    rax,rbx
   140009b58:	add    rsp,0x20
   140009b5c:	pop    rbx
   140009b5d:	ret    
   140009b5e:	int3   
   140009b5f:	int3   
   140009b60:	int3   
   140009b61:	int3   
   140009b62:	int3   
   140009b63:	int3   
   140009b64:	jmp    QWORD PTR [rip+0x8bce]        # 0x140012738
   140009b6a:	int3   
   140009b6b:	int3   
   140009b6c:	int3   
   140009b6d:	int3   
   140009b6e:	int3   
   140009b6f:	int3   
   140009b70:	jmp    QWORD PTR [rip+0x8bba]        # 0x140012730
   140009b76:	int3   
   140009b77:	int3   
   140009b78:	int3   
   140009b79:	int3   
   140009b7a:	int3   
   140009b7b:	int3   
   140009b7c:	jmp    QWORD PTR [rip+0x8b9e]        # 0x140012720
   140009b82:	int3   
   140009b83:	int3   
   140009b84:	int3   
   140009b85:	int3   
   140009b86:	int3   
   140009b87:	int3   
   140009b88:	mov    QWORD PTR [rsp+0x8],rbx
   140009b8d:	push   rdi
   140009b8e:	sub    rsp,0x20
   140009b92:	mov    ebx,edx
   140009b94:	mov    rdi,rcx
   140009b97:	call   QWORD PTR [rip+0x8acb]        # 0x140012668
   140009b9d:	test   bl,0x1
   140009ba0:	je     0x140009baa
   140009ba2:	mov    rcx,rdi
   140009ba5:	call   0x1400094c6
   140009baa:	mov    rax,rdi
   140009bad:	mov    rbx,QWORD PTR [rsp+0x30]
   140009bb2:	add    rsp,0x20
   140009bb6:	pop    rdi
   140009bb7:	ret    
   140009bb8:	int3   
   140009bb9:	int3   
   140009bba:	int3   
   140009bbb:	int3   
   140009bbc:	int3   
   140009bbd:	int3   
   140009bbe:	jmp    QWORD PTR [rip+0x8b34]        # 0x1400126f8
   140009bc4:	int3   
   140009bc5:	int3   
   140009bc6:	int3   
   140009bc7:	int3   
   140009bc8:	int3   
   140009bc9:	int3   
   140009bca:	jmp    QWORD PTR [rip+0x8b20]        # 0x1400126f0
   140009bd0:	int3   
   140009bd1:	int3   
   140009bd2:	int3   
   140009bd3:	int3   
   140009bd4:	int3   
   140009bd5:	int3   
   140009bd6:	jmp    QWORD PTR [rip+0x8a64]        # 0x140012640
   140009bdc:	int3   
   140009bdd:	int3   
   140009bde:	int3   
   140009bdf:	int3   
   140009be0:	int3   
   140009be1:	int3   
   140009be2:	int3   
   140009be3:	int3   
   140009be4:	rex push rbx
   140009be6:	sub    rsp,0x20
   140009bea:	mov    r11d,DWORD PTR [r8]
   140009bed:	mov    rbx,rdx
   140009bf0:	mov    r9,rcx
   140009bf3:	and    r11d,0xfffffff8
   140009bf7:	test   BYTE PTR [r8],0x4
   140009bfb:	mov    r10,rcx
   140009bfe:	je     0x140009c13
   140009c00:	mov    eax,DWORD PTR [r8+0x8]
   140009c04:	movsxd r10,DWORD PTR [r8+0x4]
   140009c08:	neg    eax
   140009c0a:	add    r10,rcx
   140009c0d:	movsxd rcx,eax
   140009c10:	and    r10,rcx
   140009c13:	movsxd rax,r11d
   140009c16:	mov    rdx,QWORD PTR [rax+r10*1]
   140009c1a:	mov    rax,QWORD PTR [rbx+0x10]
   140009c1e:	mov    ecx,DWORD PTR [rax+0x8]
   140009c21:	add    rcx,QWORD PTR [rbx+0x8]
   140009c25:	test   BYTE PTR [rcx+0x3],0xf
   140009c29:	je     0x140009c37
   140009c2b:	movzx  eax,BYTE PTR [rcx+0x3]
   140009c2f:	and    eax,0xfffffff0
   140009c32:	cdqe   
   140009c34:	add    r9,rax
   140009c37:	xor    r9,rdx
   140009c3a:	mov    rcx,r9
   140009c3d:	add    rsp,0x20
   140009c41:	pop    rbx
   140009c42:	jmp    0x140009a90
   140009c47:	int3   
   140009c48:	int3   
   140009c49:	int3   
   140009c4a:	int3   
   140009c4b:	int3   
   140009c4c:	int3   
   140009c4d:	int3   
   140009c4e:	int3   
   140009c4f:	int3   
   140009c50:	sub    rsp,0x28
   140009c54:	mov    r8,QWORD PTR [r9+0x38]
   140009c58:	mov    rcx,rdx
   140009c5b:	mov    rdx,r9
   140009c5e:	call   0x140009be4
   140009c63:	mov    eax,0x1
   140009c68:	add    rsp,0x28
   140009c6c:	ret    
   140009c6d:	int3   
   140009c6e:	int3   
   140009c6f:	int3   
   140009c70:	int3   
   140009c71:	int3   
   140009c72:	int3   
   140009c73:	int3   
   140009c74:	mov    rax,rsp
   140009c77:	mov    QWORD PTR [rax+0x8],rbx
   140009c7b:	mov    QWORD PTR [rax+0x10],rbp
   140009c7f:	mov    QWORD PTR [rax+0x18],rsi
   140009c83:	mov    QWORD PTR [rax+0x20],rdi
   140009c87:	push   r14
   140009c89:	sub    rsp,0x20
   140009c8d:	mov    rbx,QWORD PTR [r9+0x38]
   140009c91:	mov    rsi,rdx
   140009c94:	mov    r14,r8
   140009c97:	mov    rbp,rcx
   140009c9a:	lea    r8,[rbx+0x4]
   140009c9e:	mov    rdx,r9
   140009ca1:	mov    rcx,rsi
   140009ca4:	mov    rdi,r9
   140009ca7:	call   0x140009be4
   140009cac:	mov    r11d,DWORD PTR [rbx+0x4]
   140009cb0:	mov    r10d,DWORD PTR [rbp+0x4]
   140009cb4:	mov    eax,r11d
   140009cb7:	and    r11d,0x2
   140009cbb:	mov    r8d,0x1
   140009cc1:	and    eax,r8d
   140009cc4:	and    r10b,0x66
   140009cc8:	cmove  r11d,eax
   140009ccc:	test   r11d,r11d
   140009ccf:	je     0x140009ce5
   140009cd1:	mov    r9,rdi
   140009cd4:	mov    r8,r14
   140009cd7:	mov    rdx,rsi
   140009cda:	mov    rcx,rbp
   140009cdd:	call   0x140009bbe
   140009ce2:	mov    r8d,eax
   140009ce5:	mov    rbx,QWORD PTR [rsp+0x30]
   140009cea:	mov    rbp,QWORD PTR [rsp+0x38]
   140009cef:	mov    rsi,QWORD PTR [rsp+0x40]
   140009cf4:	mov    rdi,QWORD PTR [rsp+0x48]
   140009cf9:	mov    eax,r8d
   140009cfc:	add    rsp,0x20
   140009d00:	pop    r14
   140009d02:	ret    
   140009d03:	int3   
   140009d04:	int3   
   140009d05:	int3   
   140009d06:	int3   
   140009d07:	int3   
   140009d08:	int3   
   140009d09:	int3   
   140009d0a:	int3   
   140009d0b:	int3   
   140009d0c:	sub    rsp,0x28
   140009d10:	mov    rax,QWORD PTR [rcx]
   140009d13:	cmp    DWORD PTR [rax],0xe06d7363
   140009d19:	jne    0x140009d47
   140009d1b:	cmp    DWORD PTR [rax+0x18],0x4
   140009d1f:	jne    0x140009d47
   140009d21:	mov    eax,DWORD PTR [rax+0x20]
   140009d24:	cmp    eax,0x19930520
   140009d29:	je     0x140009d40
   140009d2b:	cmp    eax,0x19930521
   140009d30:	je     0x140009d40
   140009d32:	cmp    eax,0x19930522
   140009d37:	je     0x140009d40
   140009d39:	cmp    eax,0x1994000
   140009d3e:	jne    0x140009d47
   140009d40:	call   QWORD PTR [rip+0x891a]        # 0x140012660
   140009d46:	int3   
   140009d47:	xor    eax,eax
   140009d49:	add    rsp,0x28
   140009d4d:	ret    
   140009d4e:	int3   
   140009d4f:	int3   
   140009d50:	int3   
   140009d51:	int3   
   140009d52:	int3   
   140009d53:	int3   
   140009d54:	sub    rsp,0x28
   140009d58:	lea    rcx,[rip+0xffffffffffffffad]        # 0x140009d0c
   140009d5f:	call   QWORD PTR [rip+0x87c3]        # 0x140012528
   140009d65:	xor    eax,eax
   140009d67:	add    rsp,0x28
   140009d6b:	ret    
   140009d6c:	int3   
   140009d6d:	int3   
   140009d6e:	int3   
   140009d6f:	int3   
   140009d70:	int3   
   140009d71:	int3   
   140009d72:	jmp    QWORD PTR [rip+0x8968]        # 0x1400126e0
   140009d78:	int3   
   140009d79:	int3   
   140009d7a:	int3   
   140009d7b:	int3   
   140009d7c:	int3   
   140009d7d:	int3   
   140009d7e:	int3   
   140009d7f:	int3   
   140009d80:	sub    rsp,0x18
   140009d84:	xor    edx,edx
   140009d86:	test   rcx,rcx
   140009d89:	je     0x140009dcd
   140009d8b:	cmp    rcx,0xffffffffffffffff
   140009d8f:	je     0x140009dcd
   140009d91:	mov    eax,0x5a4d
   140009d96:	cmp    WORD PTR [rcx],ax
   140009d99:	jne    0x140009dc5
   140009d9b:	cmp    DWORD PTR [rcx+0x3c],edx
   140009d9e:	jl     0x140009dc5
   140009da0:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140009da7:	jae    0x140009dc5
   140009da9:	movsxd rax,DWORD PTR [rcx+0x3c]
   140009dad:	add    rax,rcx
   140009db0:	mov    QWORD PTR [rsp],rax
   140009db4:	cmp    DWORD PTR [rax],0x4550
   140009dba:	cmovne rax,rdx
   140009dbe:	mov    rdx,rax
   140009dc1:	mov    QWORD PTR [rsp],rax
   140009dc5:	jmp    0x140009dcd
   140009dc7:	xor    edx,edx
   140009dc9:	mov    QWORD PTR [rsp],rdx
   140009dcd:	mov    rax,rdx
   140009dd0:	add    rsp,0x18
   140009dd4:	ret    
   140009dd5:	int3   
   140009dd6:	int3   
   140009dd7:	int3   
   140009dd8:	int3   
   140009dd9:	int3   
   140009dda:	int3   
   140009ddb:	int3   
   140009ddc:	rex push rbx
   140009dde:	sub    rsp,0x20
   140009de2:	mov    ebx,ecx
   140009de4:	xor    ecx,ecx
   140009de6:	call   QWORD PTR [rip+0x86bc]        # 0x1400124a8
   140009dec:	test   rax,rax
   140009def:	je     0x140009e19
   140009df1:	mov    rcx,rax
   140009df4:	call   0x140009d80
   140009df9:	test   rax,rax
   140009dfc:	je     0x140009e19
   140009dfe:	mov    ecx,0x2
   140009e03:	cmp    WORD PTR [rax+0x5c],cx
   140009e07:	jne    0x140009e0d
   140009e09:	mov    eax,ecx
   140009e0b:	jmp    0x140009e1b
   140009e0d:	cmp    WORD PTR [rax+0x5c],0x3
   140009e12:	mov    eax,0x1
   140009e17:	je     0x140009e1b
   140009e19:	mov    eax,ebx
   140009e1b:	add    rsp,0x20
   140009e1f:	pop    rbx
   140009e20:	ret    
   140009e21:	int3   
   140009e22:	int3   
   140009e23:	int3   
   140009e24:	int3   
   140009e25:	int3   
   140009e26:	int3   
   140009e27:	int3   
   140009e28:	jmp    QWORD PTR [rip+0x88aa]        # 0x1400126d8
   140009e2e:	int3   
   140009e2f:	int3   
   140009e30:	int3   
   140009e31:	int3   
   140009e32:	int3   
   140009e33:	int3   
   140009e34:	int3   
   140009e35:	int3   
   140009e36:	int3   
   140009e37:	int3   
   140009e38:	int3   
   140009e39:	int3   
   140009e3a:	int3   
   140009e3b:	int3   
   140009e3c:	int3   
   140009e3d:	int3   
   140009e3e:	int3   
   140009e3f:	int3   
   140009e40:	mov    rax,rcx
   140009e43:	mov    ecx,0x5a4d
   140009e48:	cmp    WORD PTR [rax],cx
   140009e4b:	je     0x140009e50
   140009e4d:	xor    eax,eax
   140009e4f:	ret    
   140009e50:	movsxd rcx,DWORD PTR [rax+0x3c]
   140009e54:	add    rcx,rax
   140009e57:	xor    eax,eax
   140009e59:	cmp    DWORD PTR [rcx],0x4550
   140009e5f:	jne    0x140009e6d
   140009e61:	mov    edx,0x20b
   140009e66:	cmp    WORD PTR [rcx+0x18],dx
   140009e6a:	sete   al
   140009e6d:	repz ret 
   140009e6f:	int3   
   140009e70:	int3   
   140009e71:	int3   
   140009e72:	int3   
   140009e73:	int3   
   140009e74:	int3   
   140009e75:	int3   
   140009e76:	int3   
   140009e77:	int3   
   140009e78:	int3   
   140009e79:	int3   
   140009e7a:	int3   
   140009e7b:	int3   
   140009e7c:	int3   
   140009e7d:	int3   
   140009e7e:	int3   
   140009e7f:	int3   
   140009e80:	movsxd r8,DWORD PTR [rcx+0x3c]
   140009e84:	xor    r9d,r9d
   140009e87:	mov    r10,rdx
   140009e8a:	add    r8,rcx
   140009e8d:	movzx  eax,WORD PTR [r8+0x14]
   140009e92:	movzx  r11d,WORD PTR [r8+0x6]
   140009e97:	add    rax,0x18
   140009e9b:	add    rax,r8
   140009e9e:	test   r11d,r11d
   140009ea1:	je     0x140009ec1
   140009ea3:	mov    edx,DWORD PTR [rax+0xc]
   140009ea6:	cmp    r10,rdx
   140009ea9:	jb     0x140009eb5
   140009eab:	mov    ecx,DWORD PTR [rax+0x8]
   140009eae:	add    ecx,edx
   140009eb0:	cmp    r10,rcx
   140009eb3:	jb     0x140009ec3
   140009eb5:	inc    r9d
   140009eb8:	add    rax,0x28
   140009ebc:	cmp    r9d,r11d
   140009ebf:	jb     0x140009ea3
   140009ec1:	xor    eax,eax
   140009ec3:	repz ret 
   140009ec5:	int3   
   140009ec6:	int3   
   140009ec7:	int3   
   140009ec8:	int3   
   140009ec9:	int3   
   140009eca:	int3   
   140009ecb:	int3   
   140009ecc:	int3   
   140009ecd:	int3   
   140009ece:	int3   
   140009ecf:	int3   
   140009ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140009ed5:	push   rdi
   140009ed6:	sub    rsp,0x20
   140009eda:	mov    rbx,rcx
   140009edd:	lea    rdi,[rip+0xffffffffffff611c]        # 0x140000000
   140009ee4:	mov    rcx,rdi
   140009ee7:	call   0x140009e40
   140009eec:	test   eax,eax
   140009eee:	je     0x140009f12
   140009ef0:	sub    rbx,rdi
   140009ef3:	mov    rdx,rbx
   140009ef6:	mov    rcx,rdi
   140009ef9:	call   0x140009e80
   140009efe:	test   rax,rax
   140009f01:	je     0x140009f12
   140009f03:	mov    eax,DWORD PTR [rax+0x24]
   140009f06:	shr    eax,0x1f
   140009f09:	not    eax
   140009f0b:	and    eax,0x1
   140009f0e:	jmp    0x140009f12
   140009f10:	xor    eax,eax
   140009f12:	mov    rbx,QWORD PTR [rsp+0x30]
   140009f17:	add    rsp,0x20
   140009f1b:	pop    rdi
   140009f1c:	ret    
   140009f1d:	int3   
   140009f1e:	int3   
   140009f1f:	int3   
   140009f20:	int3   
   140009f21:	int3   
   140009f22:	int3   
   140009f23:	int3   
   140009f24:	mov    QWORD PTR [rsp+0x20],rbx
   140009f29:	push   rbp
   140009f2a:	mov    rbp,rsp
   140009f2d:	sub    rsp,0x20
   140009f31:	mov    rax,QWORD PTR [rip+0x2278]        # 0x14000c1b0
   140009f38:	and    QWORD PTR [rbp+0x18],0x0
   140009f3d:	movabs rbx,0x2b992ddfa232
   140009f47:	cmp    rax,rbx
   140009f4a:	jne    0x140009fe3
   140009f50:	lea    rcx,[rbp+0x18]
   140009f54:	call   QWORD PTR [rip+0x853e]        # 0x140012498
   140009f5a:	mov    r11,QWORD PTR [rbp+0x18]
   140009f5e:	mov    QWORD PTR [rbp+0x10],r11
   140009f62:	call   QWORD PTR [rip+0x8520]        # 0x140012488
   140009f68:	mov    r11d,eax
   140009f6b:	xor    QWORD PTR [rbp+0x10],r11
   140009f6f:	call   QWORD PTR [rip+0x851b]        # 0x140012490
   140009f75:	mov    r11d,eax
   140009f78:	xor    QWORD PTR [rbp+0x10],r11
   140009f7c:	call   QWORD PTR [rip+0x851e]        # 0x1400124a0
   140009f82:	mov    r11d,eax
   140009f85:	shl    r11,0x18
   140009f89:	xor    QWORD PTR [rbp+0x10],r11
   140009f8d:	call   QWORD PTR [rip+0x850d]        # 0x1400124a0
   140009f93:	lea    rcx,[rbp+0x20]
   140009f97:	mov    r11d,eax
   140009f9a:	lea    rax,[rbp+0x10]
   140009f9e:	xor    r11,QWORD PTR [rbp+0x10]
   140009fa2:	xor    r11,rax
   140009fa5:	mov    QWORD PTR [rbp+0x10],r11
   140009fa9:	call   QWORD PTR [rip+0x84d1]        # 0x140012480
   140009faf:	mov    eax,DWORD PTR [rbp+0x20]
   140009fb2:	shl    rax,0x20
   140009fb6:	movabs rcx,0xffffffffffff
   140009fc0:	xor    rax,QWORD PTR [rbp+0x20]
   140009fc4:	xor    rax,QWORD PTR [rbp+0x10]
   140009fc8:	and    rax,rcx
   140009fcb:	movabs rcx,0x2b992ddfa233
   140009fd5:	cmp    rax,rbx
   140009fd8:	cmove  rax,rcx
   140009fdc:	mov    QWORD PTR [rip+0x21cd],rax        # 0x14000c1b0
   140009fe3:	mov    rbx,QWORD PTR [rsp+0x48]
   140009fe8:	not    rax
   140009feb:	mov    QWORD PTR [rip+0x21c6],rax        # 0x14000c1b8
   140009ff2:	add    rsp,0x20
   140009ff6:	pop    rbp
   140009ff7:	ret    
   140009ff8:	int3   
   140009ff9:	int3   
   140009ffa:	int3   
   140009ffb:	int3   
   140009ffc:	int3   
   140009ffd:	int3   
   140009ffe:	int3   
   140009fff:	int3   
   14000a000:	xor    eax,eax
   14000a002:	ret    
   14000a003:	int3   
   14000a004:	int3   
   14000a005:	int3   
   14000a006:	int3   
   14000a007:	int3   
   14000a008:	int3   
   14000a009:	int3   
   14000a00a:	jmp    QWORD PTR [rip+0x8698]        # 0x1400126a8
   14000a010:	int3   
   14000a011:	int3   
   14000a012:	int3   
   14000a013:	int3   
   14000a014:	int3   
   14000a015:	int3   
   14000a016:	jmp    QWORD PTR [rip+0x8684]        # 0x1400126a0
   14000a01c:	int3   
   14000a01d:	int3   
   14000a01e:	int3   
   14000a01f:	int3   
   14000a020:	int3   
   14000a021:	int3   
   14000a022:	int3   
   14000a023:	int3   
   14000a024:	mov    QWORD PTR [rsp+0x8],rcx
   14000a029:	push   rbp
   14000a02a:	mov    rbp,rsp
   14000a02d:	sub    rsp,0x80
   14000a034:	lea    rcx,[rip+0x4af5]        # 0x14000eb30
   14000a03b:	call   QWORD PTR [rip+0x871f]        # 0x140012760
   14000a041:	mov    rax,QWORD PTR [rip+0x4be0]        # 0x14000ec28
   14000a048:	mov    QWORD PTR [rsp+0x48],rax
   14000a04d:	xor    r8d,r8d
   14000a050:	lea    rdx,[rsp+0x50]
   14000a055:	mov    rcx,QWORD PTR [rsp+0x48]
   14000a05a:	call   QWORD PTR [rip+0x86f8]        # 0x140012758
   14000a060:	mov    QWORD PTR [rsp+0x40],rax
   14000a065:	cmp    QWORD PTR [rsp+0x40],0x0
   14000a06b:	je     0x14000a0af
   14000a06d:	mov    QWORD PTR [rsp+0x38],0x0
   14000a076:	lea    rax,[rsp+0x58]
   14000a07b:	mov    QWORD PTR [rsp+0x30],rax
   14000a080:	lea    rax,[rsp+0x60]
   14000a085:	mov    QWORD PTR [rsp+0x28],rax
   14000a08a:	lea    rax,[rip+0x4a9f]        # 0x14000eb30
   14000a091:	mov    QWORD PTR [rsp+0x20],rax
   14000a096:	mov    r9,QWORD PTR [rsp+0x40]
   14000a09b:	mov    r8,QWORD PTR [rsp+0x48]
   14000a0a0:	mov    rdx,QWORD PTR [rsp+0x50]
   14000a0a5:	xor    ecx,ecx
   14000a0a7:	call   QWORD PTR [rip+0x86a3]        # 0x140012750
   14000a0ad:	jmp    0x14000a0d2
   14000a0af:	mov    rax,QWORD PTR [rip+0x4b12]        # 0x14000ebc8
   14000a0b6:	mov    rax,QWORD PTR [rax]
   14000a0b9:	mov    QWORD PTR [rip+0x4b68],rax        # 0x14000ec28
   14000a0c0:	mov    rax,QWORD PTR [rip+0x4b01]        # 0x14000ebc8
   14000a0c7:	add    rax,0x8
   14000a0cb:	mov    QWORD PTR [rip+0x4af6],rax        # 0x14000ebc8
   14000a0d2:	mov    rax,QWORD PTR [rip+0x4b4f]        # 0x14000ec28
   14000a0d9:	mov    QWORD PTR [rip+0x49c0],rax        # 0x14000eaa0
   14000a0e0:	mov    rax,QWORD PTR [rbp+0x10]
   14000a0e4:	mov    QWORD PTR [rip+0x4ac5],rax        # 0x14000ebb0
   14000a0eb:	mov    DWORD PTR [rip+0x499b],0xc0000409        # 0x14000ea90
   14000a0f5:	mov    DWORD PTR [rip+0x4995],0x1        # 0x14000ea94
   14000a0ff:	mov    DWORD PTR [rip+0x499f],0x3        # 0x14000eaa8
   14000a109:	mov    QWORD PTR [rip+0x499c],0x2        # 0x14000eab0
   14000a114:	mov    rax,QWORD PTR [rip+0x2095]        # 0x14000c1b0
   14000a11b:	mov    QWORD PTR [rip+0x4996],rax        # 0x14000eab8
   14000a122:	mov    rax,QWORD PTR [rip+0x208f]        # 0x14000c1b8
   14000a129:	mov    QWORD PTR [rip+0x4990],rax        # 0x14000eac0
   14000a130:	mov    rax,QWORD PTR [rip+0x2079]        # 0x14000c1b0
   14000a137:	mov    QWORD PTR [rsp+0x68],rax
   14000a13c:	mov    rax,QWORD PTR [rip+0x2075]        # 0x14000c1b8
   14000a143:	mov    QWORD PTR [rsp+0x70],rax
   14000a148:	lea    rcx,[rip+0xffffffffffff7061]        # 0x1400011b0
   14000a14f:	call   0x14000a164
   14000a154:	add    rsp,0x80
   14000a15b:	pop    rbp
   14000a15c:	ret    
   14000a15d:	int3   
   14000a15e:	int3   
   14000a15f:	int3   
   14000a160:	int3   
   14000a161:	int3   
   14000a162:	int3   
   14000a163:	int3   
   14000a164:	rex push rbx
   14000a166:	sub    rsp,0x20
   14000a16a:	mov    rbx,rcx
   14000a16d:	xor    ecx,ecx
   14000a16f:	call   QWORD PTR [rip+0x83b3]        # 0x140012528
   14000a175:	mov    rcx,rbx
   14000a178:	call   QWORD PTR [rip+0x835a]        # 0x1400124d8
   14000a17e:	call   QWORD PTR [rip+0x832c]        # 0x1400124b0
   14000a184:	mov    edx,0xc0000409
   14000a189:	mov    rcx,rax
   14000a18c:	add    rsp,0x20
   14000a190:	pop    rbx
   14000a191:	rex.W jmp QWORD PTR [rip+0x8320]        # 0x1400124b8
   14000a198:	int3   
   14000a199:	int3   
   14000a19a:	int3   
   14000a19b:	int3   
   14000a19c:	int3   
   14000a19d:	int3   
   14000a19e:	jmp    QWORD PTR [rip+0x84e4]        # 0x140012688
   14000a1a4:	int3   
   14000a1a5:	int3   
   14000a1a6:	int3   
   14000a1a7:	int3   
   14000a1a8:	int3   
   14000a1a9:	int3   
   14000a1aa:	jmp    QWORD PTR [rip+0x84d0]        # 0x140012680
   14000a1b0:	int3   
   14000a1b1:	int3   
   14000a1b2:	int3   
   14000a1b3:	int3   
   14000a1b4:	int3   
   14000a1b5:	int3   
   14000a1b6:	jmp    QWORD PTR [rip+0x84bc]        # 0x140012678
   14000a1bc:	int3   
   14000a1bd:	int3   
   14000a1be:	int3   
   14000a1bf:	int3   
   14000a1c0:	int3   
   14000a1c1:	int3   
   14000a1c2:	int3   
   14000a1c3:	int3   
   14000a1c4:	mov    rax,rsp
   14000a1c7:	mov    QWORD PTR [rax+0x20],r9
   14000a1cb:	mov    DWORD PTR [rax+0x18],r8d
   14000a1cf:	mov    QWORD PTR [rax+0x10],rdx
   14000a1d3:	push   rbx
   14000a1d4:	push   rsi
   14000a1d5:	push   rdi
   14000a1d6:	push   r14
   14000a1d8:	sub    rsp,0x38
   14000a1dc:	mov    r14,r9
   14000a1df:	movsxd rdi,r8d
   14000a1e2:	mov    rsi,rdx
   14000a1e5:	and    DWORD PTR [rax-0x38],0x0
   14000a1e9:	mov    rbx,rdi
   14000a1ec:	imul   rbx,rdx
   14000a1f0:	add    rbx,rcx
   14000a1f3:	mov    QWORD PTR [rax+0x8],rbx
   14000a1f7:	dec    edi
   14000a1f9:	mov    DWORD PTR [rsp+0x70],edi
   14000a1fd:	js     0x14000a20f
   14000a1ff:	sub    rbx,rsi
   14000a202:	mov    QWORD PTR [rsp+0x60],rbx
   14000a207:	mov    rcx,rbx
   14000a20a:	call   r14
   14000a20d:	jmp    0x14000a1f7
   14000a20f:	mov    DWORD PTR [rsp+0x20],0x1
   14000a217:	add    rsp,0x38
   14000a21b:	pop    r14
   14000a21d:	pop    rdi
   14000a21e:	pop    rsi
   14000a21f:	pop    rbx
   14000a220:	ret    
   14000a221:	int3   
   14000a222:	int3   
   14000a223:	int3   
   14000a224:	int3   
   14000a225:	int3   
   14000a226:	int3   
   14000a227:	int3   
   14000a228:	mov    QWORD PTR [rsp+0x10],rbx
   14000a22d:	mov    DWORD PTR [rsp+0x18],r8d
   14000a232:	mov    QWORD PTR [rsp+0x8],rcx
   14000a237:	push   rsi
   14000a238:	push   rdi
   14000a239:	push   r14
   14000a23b:	sub    rsp,0x40
   14000a23f:	mov    rsi,r9
   14000a242:	mov    edi,r8d
   14000a245:	mov    r14,rdx
   14000a248:	mov    rbx,rcx
   14000a24b:	dec    edi
   14000a24d:	mov    DWORD PTR [rsp+0x70],edi
   14000a251:	js     0x14000a262
   14000a253:	sub    rbx,r14
   14000a256:	mov    QWORD PTR [rsp+0x60],rbx
   14000a25b:	mov    rcx,rbx
   14000a25e:	call   rsi
   14000a260:	jmp    0x14000a24b
   14000a262:	jmp    0x14000a264
   14000a264:	mov    rbx,QWORD PTR [rsp+0x68]
   14000a269:	add    rsp,0x40
   14000a26d:	pop    r14
   14000a26f:	pop    rdi
   14000a270:	pop    rsi
   14000a271:	ret    
   14000a272:	int3   
   14000a273:	int3   
   14000a274:	int3   
   14000a275:	int3   
   14000a276:	int3   
   14000a277:	int3   
   14000a278:	jmp    QWORD PTR [rip+0x83aa]        # 0x140012628
   14000a27e:	int3   
   14000a27f:	int3   
   14000a280:	int3   
   14000a281:	int3   
   14000a282:	int3   
   14000a283:	int3   
   14000a284:	int3   
   14000a285:	int3   
   14000a286:	jmp    QWORD PTR [rip+0x845c]        # 0x1400126e8
   14000a28c:	int3   
   14000a28d:	int3   
   14000a28e:	int3   
   14000a28f:	int3   
   14000a290:	int3   
   14000a291:	int3   
   14000a292:	int3   
   14000a293:	int3   
   14000a294:	int3   
   14000a295:	int3   
   14000a296:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a2a0:	sub    rsp,0x10
   14000a2a4:	mov    QWORD PTR [rsp],r10
   14000a2a8:	mov    QWORD PTR [rsp+0x8],r11
   14000a2ad:	xor    r11,r11
   14000a2b0:	lea    r10,[rsp+0x18]
   14000a2b5:	sub    r10,rax
   14000a2b8:	cmovb  r10,r11
   14000a2bc:	mov    r11,QWORD PTR gs:0x10
   14000a2c5:	cmp    r10,r11
   14000a2c8:	jae    0x14000a2df
   14000a2ca:	and    r10w,0xf000
   14000a2d0:	lea    r11,[r11-0x1000]
   14000a2d7:	test   BYTE PTR [r11],r11b
   14000a2da:	cmp    r10,r11
   14000a2dd:	jne    0x14000a2d0
   14000a2df:	mov    r10,QWORD PTR [rsp]
   14000a2e3:	mov    r11,QWORD PTR [rsp+0x8]
   14000a2e8:	add    rsp,0x10
   14000a2ec:	ret    
   14000a2ed:	int3   
   14000a2ee:	int3   
   14000a2ef:	int3   
   14000a2f0:	int3   
   14000a2f1:	int3   
   14000a2f2:	int3   
   14000a2f3:	int3   
   14000a2f4:	int3   
   14000a2f5:	int3   
   14000a2f6:	lea    rcx,[rdx+0x28]
   14000a2fd:	jmp    0x1400094b4
   14000a302:	int3   
   14000a303:	int3   
   14000a304:	int3   
   14000a305:	int3   
   14000a306:	int3   
   14000a307:	int3   
   14000a308:	mov    QWORD PTR [rsp+0x10],rdx
   14000a30d:	push   rbp
   14000a30e:	sub    rsp,0x20
   14000a312:	mov    rbp,rdx
   14000a315:	lea    rax,[rip+0xfffffffffffff0c6]        # 0x1400093e2
   14000a31c:	add    rsp,0x20
   14000a320:	pop    rbp
   14000a321:	ret    
   14000a322:	int3   
   14000a323:	int3   
   14000a324:	int3   
   14000a325:	int3   
   14000a326:	int3   
   14000a327:	int3   
   14000a328:	int3   
   14000a329:	lea    rcx,[rdx+0x70]
   14000a330:	jmp    0x140008de4
   14000a335:	lea    rcx,[rdx+0x30]
   14000a33c:	jmp    0x140009b70
   14000a341:	int3   
   14000a342:	int3   
   14000a343:	int3   
   14000a344:	int3   
   14000a345:	int3   
   14000a346:	int3   
   14000a347:	lea    rcx,[rdx+0x28]
   14000a34e:	jmp    0x140008de4
   14000a353:	lea    rcx,[rdx+0x50]
   14000a35a:	jmp    0x140009b70
   14000a35f:	int3   
   14000a360:	int3   
   14000a361:	int3   
   14000a362:	int3   
   14000a363:	int3   
   14000a364:	int3   
   14000a365:	mov    rcx,QWORD PTR [rdx+0x40]
   14000a36c:	jmp    0x140009b70
   14000a371:	int3   
   14000a372:	int3   
   14000a373:	int3   
   14000a374:	int3   
   14000a375:	int3   
   14000a376:	int3   
   14000a377:	rex push rbp
   14000a379:	sub    rsp,0x20
   14000a37d:	mov    rbp,rdx
   14000a380:	mov    rax,QWORD PTR [rcx]
   14000a383:	mov    rdx,rcx
   14000a386:	mov    ecx,DWORD PTR [rax]
   14000a388:	call   0x140009d72
   14000a38d:	nop
   14000a38e:	add    rsp,0x20
   14000a392:	pop    rbp
   14000a393:	ret    
   14000a394:	int3   
   14000a395:	int3   
   14000a396:	int3   
   14000a397:	int3   
   14000a398:	int3   
   14000a399:	int3   
   14000a39a:	int3   
   14000a39b:	rex push rbp
   14000a39d:	sub    rsp,0x20
   14000a3a1:	mov    rbp,rdx
   14000a3a4:	mov    ecx,0x8
   14000a3a9:	call   0x14000a1aa
   14000a3ae:	nop
   14000a3af:	add    rsp,0x20
   14000a3b3:	pop    rbp
   14000a3b4:	ret    
   14000a3b5:	int3   
   14000a3b6:	int3   
   14000a3b7:	int3   
   14000a3b8:	int3   
   14000a3b9:	int3   
   14000a3ba:	int3   
   14000a3bb:	int3   
   14000a3bc:	int3   
   14000a3bd:	int3   
   14000a3be:	int3   
   14000a3bf:	int3   
   14000a3c0:	rex push rbp
   14000a3c2:	sub    rsp,0x20
   14000a3c6:	mov    rbp,rdx
   14000a3c9:	mov    rax,QWORD PTR [rcx]
   14000a3cc:	xor    ecx,ecx
   14000a3ce:	cmp    DWORD PTR [rax],0xc0000005
   14000a3d4:	sete   cl
   14000a3d7:	mov    eax,ecx
   14000a3d9:	mov    eax,ecx
   14000a3db:	add    rsp,0x20
   14000a3df:	pop    rbp
   14000a3e0:	ret    
   14000a3e1:	int3   
   14000a3e2:	int3   
   14000a3e3:	int3   
   14000a3e4:	int3   
   14000a3e5:	int3   
   14000a3e6:	int3   
   14000a3e7:	int3   
   14000a3e8:	rex push rbp
   14000a3ea:	sub    rsp,0x20
   14000a3ee:	mov    rbp,rdx
   14000a3f1:	mov    QWORD PTR [rbp+0x38],rcx
   14000a3f5:	mov    QWORD PTR [rbp+0x28],rcx
   14000a3f9:	mov    rax,QWORD PTR [rbp+0x28]
   14000a3fd:	mov    rcx,QWORD PTR [rax]
   14000a400:	mov    QWORD PTR [rbp+0x30],rcx
   14000a404:	mov    rax,QWORD PTR [rbp+0x30]
   14000a408:	cmp    DWORD PTR [rax],0xe06d7363
   14000a40e:	je     0x14000a41c
   14000a410:	mov    DWORD PTR [rbp+0x20],0x0
   14000a417:	mov    eax,DWORD PTR [rbp+0x20]
   14000a41a:	jmp    0x14000a423
   14000a41c:	call   QWORD PTR [rip+0x823e]        # 0x140012660
   14000a422:	nop
   14000a423:	add    rsp,0x20
   14000a427:	pop    rbp
   14000a428:	ret    
   14000a429:	int3   
   14000a42a:	int3   
   14000a42b:	int3   
   14000a42c:	int3   
   14000a42d:	int3   
   14000a42e:	int3   
   14000a42f:	int3   
   14000a430:	rex push rbp
   14000a432:	sub    rsp,0x20
   14000a436:	mov    rbp,rdx
   14000a439:	cmp    DWORD PTR [rbp+0x20],0x0
   14000a43d:	jne    0x14000a455
   14000a43f:	mov    r9,QWORD PTR [rbp+0x78]
   14000a443:	mov    r8d,DWORD PTR [rbp+0x70]
   14000a447:	mov    rdx,QWORD PTR [rbp+0x68]
   14000a44b:	mov    rcx,QWORD PTR [rbp+0x60]
   14000a44f:	call   0x14000a228
   14000a454:	nop
   14000a455:	add    rsp,0x20
   14000a459:	pop    rbp
   14000a45a:	ret    
   14000a45b:	int3   
   14000a45c:	int3   
   14000a45d:	int3   
   14000a45e:	int3   
   14000a45f:	int3   
   14000a460:	int3   
   14000a461:	int3   
   14000a462:	lea    rcx,[rdx+0x30]
   14000a469:	rex.W jmp QWORD PTR [rip+0x82c0]        # 0x140012730
   14000a470:	mov    QWORD PTR [rsp+0x10],rdx
   14000a475:	push   rbp
   14000a476:	sub    rsp,0x20
   14000a47a:	mov    rbp,rdx
   14000a47d:	mov    rcx,QWORD PTR [rbp+0x98]
   14000a484:	mov    QWORD PTR [rbp+0xa8],rcx
   14000a48b:	inc    rcx
   14000a48e:	jne    0x14000a492
   14000a490:	jmp    0x14000a4d6
   14000a492:	xor    edx,edx
   14000a494:	or     rax,0xffffffffffffffff
   14000a498:	div    rcx
   14000a49b:	cmp    rax,0x2
   14000a49f:	jae    0x14000a4d6
   14000a4a1:	and    QWORD PTR [rbp+0x98],0x0
   14000a4a9:	lea    rdx,[rbp+0x98]
   14000a4b0:	lea    rcx,[rbp+0x48]
   14000a4b4:	call   QWORD PTR [rip+0x826e]        # 0x140012728
   14000a4ba:	nop
   14000a4bb:	lea    rax,[rip+0xffffffffffff97de]        # 0x140003ca0
   14000a4c2:	mov    QWORD PTR [rbp+0x48],rax
   14000a4c6:	lea    rdx,[rip+0x10e3]        # 0x14000b5b0
   14000a4cd:	lea    rcx,[rbp+0x48]
   14000a4d1:	call   0x140009bd6
   14000a4d6:	add    rcx,rcx
   14000a4d9:	call   QWORD PTR [rip+0x8089]        # 0x140012568
   14000a4df:	mov    QWORD PTR [rbp+0x20],rax
   14000a4e3:	lea    rax,[rip+0xffffffffffffca2e]        # 0x140006f18
   14000a4ea:	add    rsp,0x20
   14000a4ee:	pop    rbp
   14000a4ef:	ret    
   14000a4f0:	int3   
   14000a4f1:	lea    rcx,[rdx+0x48]
   14000a4f8:	rex.W jmp QWORD PTR [rip+0x8231]        # 0x140012730
   14000a4ff:	mov    QWORD PTR [rsp+0x10],rdx
   14000a504:	push   rbx
   14000a505:	push   rbp
   14000a506:	sub    rsp,0x28
   14000a50a:	mov    rbp,rdx
   14000a50d:	mov    rbx,QWORD PTR [rbp+0x90]
   14000a514:	cmp    QWORD PTR [rbx+0x20],0x8
   14000a519:	jb     0x14000a525
   14000a51b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a51f:	call   QWORD PTR [rip+0x803b]        # 0x140012560
   14000a525:	mov    QWORD PTR [rbx+0x20],0x7
   14000a52d:	and    QWORD PTR [rbx+0x18],0x0
   14000a532:	xor    eax,eax
   14000a534:	mov    WORD PTR [rbx+0x8],ax
   14000a538:	xor    edx,edx
   14000a53a:	xor    ecx,ecx
   14000a53c:	call   0x140009bd6
   14000a541:	nop
   14000a542:	int3   
   14000a543:	int3   
   14000a544:	int3   
   14000a545:	int3   
   14000a546:	int3   
   14000a547:	int3   
   14000a548:	lea    rcx,[rdx+0xc0]
   14000a54f:	jmp    0x140006b04
   14000a554:	lea    rcx,[rdx+0x70]
   14000a55b:	jmp    0x140006b04
   14000a560:	lea    rcx,[rdx+0x98]
   14000a567:	jmp    0x140006b04
   14000a56c:	lea    rcx,[rdx+0x48]
   14000a573:	jmp    0x140006b04
   14000a578:	int3   
   14000a579:	int3   
   14000a57a:	int3   
   14000a57b:	int3   
   14000a57c:	int3   
   14000a57d:	int3   
   14000a57e:	lea    rcx,[rdx+0x20]
   14000a585:	jmp    0x140006794
   14000a58a:	lea    rcx,[rdx+0x20]
   14000a591:	jmp    0x140006794
   14000a596:	int3   
   14000a597:	int3   
   14000a598:	int3   
   14000a599:	int3   
   14000a59a:	int3   
   14000a59b:	int3   
   14000a59c:	lea    rcx,[rdx+0x28]
   14000a5a3:	rex.W jmp QWORD PTR [rip+0x8186]        # 0x140012730
   14000a5aa:	int3   
   14000a5ab:	int3   
   14000a5ac:	int3   
   14000a5ad:	int3   
   14000a5ae:	int3   
   14000a5af:	int3   
   14000a5b0:	mov    QWORD PTR [rsp+0x10],rdx
   14000a5b5:	push   rbp
   14000a5b6:	sub    rsp,0x20
   14000a5ba:	mov    rbp,rdx
   14000a5bd:	mov    rcx,QWORD PTR [rbp+0x40]
   14000a5c1:	call   QWORD PTR [rip+0x7f99]        # 0x140012560
   14000a5c7:	xor    edx,edx
   14000a5c9:	xor    ecx,ecx
   14000a5cb:	call   0x140009bd6
   14000a5d0:	nop
   14000a5d1:	int3   
   14000a5d2:	int3   
   14000a5d3:	int3   
   14000a5d4:	int3   
   14000a5d5:	int3   
   14000a5d6:	int3   
   14000a5d7:	mov    QWORD PTR [rsp+0x10],rdx
   14000a5dc:	push   rbp
   14000a5dd:	sub    rsp,0x20
   14000a5e1:	mov    rbp,rdx
   14000a5e4:	mov    rcx,QWORD PTR [rbp+0x98]
   14000a5eb:	mov    QWORD PTR [rbp+0x98],rcx
   14000a5f2:	inc    rcx
   14000a5f5:	je     0x14000a621
   14000a5f7:	xor    edx,edx
   14000a5f9:	or     rax,0xffffffffffffffff
   14000a5fd:	div    rcx
   14000a600:	cmp    rax,0x1
   14000a604:	jae    0x14000a621
   14000a606:	xor    edx,edx
   14000a608:	lea    rcx,[rbp+0x40]
   14000a60c:	call   0x1400049c8
   14000a611:	lea    rdx,[rip+0xf98]        # 0x14000b5b0
   14000a618:	lea    rcx,[rbp+0x40]
   14000a61c:	call   0x140009bd6
   14000a621:	call   QWORD PTR [rip+0x7f41]        # 0x140012568
   14000a627:	mov    QWORD PTR [rbp+0xa8],rax
   14000a62e:	lea    rax,[rip+0xffffffffffffec54]        # 0x140009289
   14000a635:	add    rsp,0x20
   14000a639:	pop    rbp
   14000a63a:	ret    
   14000a63b:	int3   
   14000a63c:	mov    QWORD PTR [rsp+0x10],rdx
   14000a641:	push   rbx
   14000a642:	push   rbp
   14000a643:	sub    rsp,0x28
   14000a647:	mov    rbp,rdx
   14000a64a:	mov    rbx,QWORD PTR [rbp+0x90]
   14000a651:	cmp    QWORD PTR [rbx+0x20],0x10
   14000a656:	jb     0x14000a662
   14000a658:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a65c:	call   QWORD PTR [rip+0x7efe]        # 0x140012560
   14000a662:	mov    QWORD PTR [rbx+0x20],0xf
   14000a66a:	and    QWORD PTR [rbx+0x18],0x0
   14000a66f:	mov    BYTE PTR [rbx+0x8],0x0
   14000a673:	xor    edx,edx
   14000a675:	xor    ecx,ecx
   14000a677:	call   0x140009bd6
   14000a67c:	nop
   14000a67d:	int3   
   14000a67e:	int3   
   14000a67f:	int3   
   14000a680:	int3   
   14000a681:	int3   
   14000a682:	int3   
   14000a683:	mov    rcx,QWORD PTR [rdx+0x40]
   14000a68a:	rex.W jmp QWORD PTR [rip+0x809f]        # 0x140012730
   14000a691:	int3   
   14000a692:	int3   
   14000a693:	int3   
   14000a694:	int3   
   14000a695:	int3   
   14000a696:	int3   
   14000a697:	mov    rcx,QWORD PTR [rdx+0x40]
   14000a69e:	add    rcx,0x60
   14000a6a2:	jmp    0x140008e1c
   14000a6a7:	int3   
   14000a6a8:	int3   
   14000a6a9:	int3   
   14000a6aa:	int3   
   14000a6ab:	int3   
   14000a6ac:	int3   
   14000a6ad:	lea    rcx,[rdx+0x30]
   14000a6b4:	rex.W jmp QWORD PTR [rip+0x8075]        # 0x140012730
   14000a6bb:	int3   
   14000a6bc:	int3   
   14000a6bd:	int3   
   14000a6be:	int3   
   14000a6bf:	int3   
   14000a6c0:	int3   
   14000a6c1:	mov    rcx,QWORD PTR [rdx+0x40]
   14000a6c8:	add    rcx,0x10
   14000a6cc:	jmp    0x140006b04
   14000a6d1:	int3   
   14000a6d2:	int3   
   14000a6d3:	int3   
   14000a6d4:	int3   
   14000a6d5:	int3   
   14000a6d6:	int3   
   14000a6d7:	int3   
   14000a6d8:	int3   
   14000a6d9:	int3   
   14000a6da:	int3   
   14000a6db:	int3   
   14000a6dc:	sub    rsp,0x28
   14000a6e0:	lea    rcx,[rip+0x4d81]        # 0x14000f468
   14000a6e7:	xor    r8d,r8d
   14000a6ea:	xor    edx,edx
   14000a6ec:	call   0x1400066e0
   14000a6f1:	lea    rcx,[rip+0x354]        # 0x14000aa4c
   14000a6f8:	add    rsp,0x28
   14000a6fc:	jmp    0x140009ab8
   14000a701:	int3   
   14000a702:	int3   
   14000a703:	int3   
   14000a704:	int3   
   14000a705:	int3   
   14000a706:	int3   
   14000a707:	int3   
   14000a708:	sub    rsp,0x38
   14000a70c:	and    DWORD PTR [rsp+0x20],0x0
   14000a711:	lea    r8,[rip+0xffffffffffff9978]        # 0x140004090
   14000a718:	lea    rdx,[rip+0xffffffffffff9819]        # 0x140003f38
   14000a71f:	lea    rcx,[rip+0x4d5a]        # 0x14000f480
   14000a726:	mov    r9d,0x1
   14000a72c:	call   0x140008c38
   14000a731:	lea    r8,[rip+0xffffffffffff9968]        # 0x1400040a0
   14000a738:	lea    rdx,[rip+0xffffffffffff9811]        # 0x140003f50
   14000a73f:	lea    rcx,[rip+0x4dca]        # 0x14000f510
   14000a746:	mov    r9d,0x2
   14000a74c:	mov    DWORD PTR [rsp+0x20],0x1
   14000a754:	call   0x140008c38
   14000a759:	lea    r8,[rip+0xffffffffffff9950]        # 0x1400040b0
   14000a760:	lea    rdx,[rip+0xffffffffffff97f9]        # 0x140003f60
   14000a767:	lea    rcx,[rip+0x4e32]        # 0x14000f5a0
   14000a76e:	mov    r9d,0x4
   14000a774:	mov    DWORD PTR [rsp+0x20],0x2
   14000a77c:	call   0x140008c38
   14000a781:	lea    r8,[rip+0xffffffffffff9938]        # 0x1400040c0
   14000a788:	lea    rdx,[rip+0xffffffffffff97f9]        # 0x140003f88
   14000a78f:	lea    rcx,[rip+0x4e9a]        # 0x14000f630
   14000a796:	mov    r9d,0x8
   14000a79c:	mov    DWORD PTR [rsp+0x20],0x3
   14000a7a4:	call   0x140008c38
   14000a7a9:	lea    r8,[rip+0xffffffffffff9920]        # 0x1400040d0
   14000a7b0:	lea    rdx,[rip+0xffffffffffff97e1]        # 0x140003f98
   14000a7b7:	lea    rcx,[rip+0x4f02]        # 0x14000f6c0
   14000a7be:	mov    r9d,0x10
   14000a7c4:	mov    DWORD PTR [rsp+0x20],0x4
   14000a7cc:	call   0x140008c38
   14000a7d1:	lea    r8,[rip+0xffffffffffff9908]        # 0x1400040e0
   14000a7d8:	lea    rdx,[rip+0xffffffffffff97c9]        # 0x140003fa8
   14000a7df:	lea    rcx,[rip+0x4f6a]        # 0x14000f750
   14000a7e6:	mov    r9d,0x20
   14000a7ec:	mov    DWORD PTR [rsp+0x20],0x5
   14000a7f4:	call   0x140008c38
   14000a7f9:	lea    r8,[rip+0xffffffffffff98f0]        # 0x1400040f0
   14000a800:	lea    rdx,[rip+0xffffffffffff97b1]        # 0x140003fb8
   14000a807:	lea    rcx,[rip+0x4fd2]        # 0x14000f7e0
   14000a80e:	mov    r9d,0x40
   14000a814:	mov    DWORD PTR [rsp+0x20],0x6
   14000a81c:	call   0x140008c38
   14000a821:	lea    r8,[rip+0xffffffffffff98d8]        # 0x140004100
   14000a828:	lea    rdx,[rip+0xffffffffffff97a9]        # 0x140003fd8
   14000a82f:	lea    rcx,[rip+0x503a]        # 0x14000f870
   14000a836:	mov    r9d,0x80
   14000a83c:	mov    DWORD PTR [rsp+0x20],0x7
   14000a844:	call   0x140008c38
   14000a849:	lea    r8,[rip+0xffffffffffff98c0]        # 0x140004110
   14000a850:	lea    rdx,[rip+0xffffffffffff9791]        # 0x140003fe8
   14000a857:	lea    rcx,[rip+0x50a2]        # 0x14000f900
   14000a85e:	mov    r9d,0x100
   14000a864:	mov    DWORD PTR [rsp+0x20],0x8
   14000a86c:	call   0x140008c38
   14000a871:	lea    r8,[rip+0xffffffffffff98a8]        # 0x140004120
   14000a878:	lea    rdx,[rip+0xffffffffffff9779]        # 0x140003ff8
   14000a87f:	lea    rcx,[rip+0x510a]        # 0x14000f990
   14000a886:	mov    r9d,0x200
   14000a88c:	mov    DWORD PTR [rsp+0x20],0x9
   14000a894:	call   0x140008c38
   14000a899:	lea    rdx,[rip+0xffffffffffff9768]        # 0x140004008
   14000a8a0:	lea    rcx,[rip+0x5179]        # 0x14000fa20
   14000a8a7:	mov    r8,rdx
   14000a8aa:	mov    r9d,0x400
   14000a8b0:	mov    DWORD PTR [rsp+0x20],0xa
   14000a8b8:	call   0x140008c38
   14000a8bd:	lea    r8,[rip+0xffffffffffff986c]        # 0x140004130
   14000a8c4:	lea    rdx,[rip+0xffffffffffff974d]        # 0x140004018
   14000a8cb:	lea    rcx,[rip+0x51de]        # 0x14000fab0
   14000a8d2:	mov    r9d,0x800
   14000a8d8:	mov    DWORD PTR [rsp+0x20],0xb
   14000a8e0:	call   0x140008c38
   14000a8e5:	lea    r8,[rip+0xffffffffffff984c]        # 0x140004138
   14000a8ec:	lea    rdx,[rip+0xffffffffffff9735]        # 0x140004028
   14000a8f3:	lea    rcx,[rip+0x5246]        # 0x14000fb40
   14000a8fa:	mov    r9d,0x1000
   14000a900:	mov    DWORD PTR [rsp+0x20],0xc
   14000a908:	call   0x140008c38
   14000a90d:	mov    DWORD PTR [rsp+0x20],0xd
   14000a915:	mov    r9d,0x2000
   14000a91b:	lea    r8,[rip+0xffffffffffff9826]        # 0x140004148
   14000a922:	lea    rdx,[rip+0xffffffffffff9717]        # 0x140004040
   14000a929:	lea    rcx,[rip+0x52a0]        # 0x14000fbd0
   14000a930:	call   0x140008c38
   14000a935:	lea    r8,[rip+0xffffffffffff981c]        # 0x140004158
   14000a93c:	lea    rdx,[rip+0xffffffffffff9705]        # 0x140004048
   14000a943:	lea    rcx,[rip+0x5316]        # 0x14000fc60
   14000a94a:	mov    r9d,0x4000
   14000a950:	mov    DWORD PTR [rsp+0x20],0xe
   14000a958:	call   0x140008c38
   14000a95d:	lea    r8,[rip+0xffffffffffff9804]        # 0x140004168
   14000a964:	lea    rdx,[rip+0xffffffffffff96f5]        # 0x140004060
   14000a96b:	lea    rcx,[rip+0x537e]        # 0x14000fcf0
   14000a972:	mov    r9d,0x8000
   14000a978:	mov    DWORD PTR [rsp+0x20],0xf
   14000a980:	call   0x140008c38
   14000a985:	lea    r8,[rip+0xffffffffffff97f4]        # 0x140004180
   14000a98c:	lea    rdx,[rip+0xffffffffffff96e5]        # 0x140004078
   14000a993:	lea    rcx,[rip+0x53e6]        # 0x14000fd80
   14000a99a:	mov    r9d,0x10000
   14000a9a0:	mov    DWORD PTR [rsp+0x20],0x10
   14000a9a8:	call   0x140008c38
   14000a9ad:	lea    rcx,[rip+0xac]        # 0x14000aa60
   14000a9b4:	add    rsp,0x38
   14000a9b8:	jmp    0x140009ab8
   14000a9bd:	int3   
   14000a9be:	int3   
   14000a9bf:	int3   
   14000a9c0:	int3   
   14000a9c1:	int3   
   14000a9c2:	int3   
   14000a9c3:	int3   
   14000a9c4:	xor    eax,eax
   14000a9c6:	lea    rcx,[rip+0xb7]        # 0x14000aa84
   14000a9cd:	mov    QWORD PTR [rip+0x1e84],rax        # 0x14000c858
   14000a9d4:	mov    QWORD PTR [rip+0x1e45],rax        # 0x14000c820
   14000a9db:	mov    QWORD PTR [rip+0x1e46],rax        # 0x14000c828
   14000a9e2:	mov    DWORD PTR [rip+0x1e50],eax        # 0x14000c838
   14000a9e8:	mov    QWORD PTR [rip+0x1e41],rax        # 0x14000c830
   14000a9ef:	mov    QWORD PTR [rip+0x1e4a],rax        # 0x14000c840
   14000a9f6:	jmp    0x140009ab8
   14000a9fb:	int3   
   14000a9fc:	int3   
   14000a9fd:	int3   
   14000a9fe:	int3   
   14000a9ff:	int3   
   14000aa00:	int3   
   14000aa01:	int3   
   14000aa02:	int3   
   14000aa03:	int3   
   14000aa04:	sub    rsp,0x28
   14000aa08:	lea    r8,[rip+0xffffffffffffe9f9]        # 0x140009408
   14000aa0f:	lea    rcx,[rip+0x1f0a]        # 0x14000c920
   14000aa16:	mov    r9d,0x600
   14000aa1c:	mov    edx,0x1
   14000aa21:	call   0x1400094de
   14000aa26:	lea    r11,[rip+0xffffffffffff66b3]        # 0x1400010e0
   14000aa2d:	lea    rcx,[rip+0x68]        # 0x14000aa9c
   14000aa34:	mov    QWORD PTR [rip+0x1ee5],r11        # 0x14000c920
   14000aa3b:	add    rsp,0x28
   14000aa3f:	jmp    0x140009ab8
   14000aa44:	int3   
   14000aa45:	int3   
   14000aa46:	int3   
   14000aa47:	int3   
   14000aa48:	int3   
   14000aa49:	int3   
   14000aa4a:	int3   
   14000aa4b:	int3   
   14000aa4c:	lea    rcx,[rip+0x4a15]        # 0x14000f468
   14000aa53:	jmp    0x140006794
   14000aa58:	int3   
   14000aa59:	int3   
   14000aa5a:	int3   
   14000aa5b:	int3   
   14000aa5c:	int3   
   14000aa5d:	int3   
   14000aa5e:	int3   
   14000aa5f:	int3   
   14000aa60:	mov    edx,0x90
   14000aa65:	lea    r9,[rip+0xffffffffffffe168]        # 0x140008bd4
   14000aa6c:	lea    rcx,[rip+0x4a0d]        # 0x14000f480
   14000aa73:	lea    r8d,[rdx-0x7f]
   14000aa77:	jmp    0x14000a1c4
   14000aa7c:	int3   
   14000aa7d:	int3   
   14000aa7e:	int3   
   14000aa7f:	int3   
   14000aa80:	int3   
   14000aa81:	int3   
   14000aa82:	int3   
   14000aa83:	int3   
   14000aa84:	lea    rax,[rip+0xffffffffffff9765]        # 0x1400041f0
   14000aa8b:	mov    QWORD PTR [rip+0x1db6],rax        # 0x14000c848
   14000aa92:	ret    
   14000aa93:	int3   
   14000aa94:	int3   
   14000aa95:	int3   
   14000aa96:	int3   
   14000aa97:	int3   
   14000aa98:	int3   
   14000aa99:	int3   
   14000aa9a:	int3   
   14000aa9b:	int3   
   14000aa9c:	lea    rcx,[rip+0x1e7d]        # 0x14000c920
   14000aaa3:	jmp    0x1400094ea
   14000aaa8:	adc    DWORD PTR [rax+rcx*1],ebx
   14000aaab:	add    BYTE PTR [rsp+riz*2],bl
   14000aaae:	or     al,0x0
   14000aab0:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   14000aab4:	adc    al,0x34
   14000aab6:	or     al,BYTE PTR [rax]
   14000aab8:	or     BYTE PTR [rdx+0x4],dh
   14000aabb:	jo     0x14000aa7b
   14000aabd:	fwait
   14000aabe:	add    BYTE PTR [rax],al
   14000aac0:	mov    BYTE PTR [rax],dl
   14000aac2:	add    BYTE PTR [rax],al
   14000aac4:	(bad)  
   14000aac5:	(bad)  
   14000aac6:	(bad)  
   14000aac7:	push   rsi
   14000aac9:	movabs ds:0xffff000094080000,al
   14000aad2:	(bad)  
   14000aad3:	inc    DWORD PTR [rax-0x6c]
   14000aad6:	add    BYTE PTR [rax],al
   14000aad8:	add    BYTE PTR [rax],al
   14000aada:	add    BYTE PTR [rax],al
   14000aadc:	push   rbx
   14000aadd:	xchg   esp,eax
   14000aade:	add    BYTE PTR [rax],al
   14000aae0:	(bad)  
   14000aae1:	(bad)  
   14000aae2:	(bad)  
   14000aae3:	inc    DWORD PTR [rcx]
   14000aae5:	or     al,BYTE PTR [rax+rax*1]
   14000aae8:	or     dh,BYTE PTR [rsi+rax*1]
   14000aaeb:	add    BYTE PTR [rdx],cl
   14000aaed:	xor    al,BYTE PTR [rsi]
   14000aaef:	jo     0x14000ab0a
   14000aaf1:	or     eax,0x62040001
   14000aaf6:	add    BYTE PTR [rax],al
   14000aaf8:	mov    esi,0xb000009b
   14000aafd:	adc    BYTE PTR [rax],al
	...
   14000ab07:	add    BYTE PTR [rcx],al
   14000ab09:	add    BYTE PTR [rax],al
   14000ab0b:	add    BYTE PTR [rcx],al
   14000ab0d:	add    BYTE PTR [rax],al
   14000ab0f:	add    BYTE PTR [rbx+rbp*4],dl
   14000ab12:	add    BYTE PTR [rax],al
   14000ab14:	add    BYTE PTR [rax],al
	...
   14000ab1f:	add    BYTE PTR [rax],cl
   14000ab21:	movabs ds:0x93a0000000380000,eax
   14000ab2a:	add    BYTE PTR [rax],al
   14000ab2c:	(bad)  
   14000ab2d:	(bad)  
   14000ab2e:	(bad)  
   14000ab2f:	push   QWORD PTR [rdx+0x93]
   14000ab35:	add    BYTE PTR [rax],al
   14000ab37:	add    al,ah
   14000ab39:	xchg   ebx,eax
   14000ab3a:	add    BYTE PTR [rax],al
   14000ab3c:	(bad)  
   14000ab3d:	(bad)  
   14000ab3e:	(bad)  
   14000ab3f:	(bad)  
   14000ab40:	sti    
   14000ab41:	xchg   ebx,eax
   14000ab42:	add    BYTE PTR [rax],al
   14000ab44:	add    BYTE PTR [rax],al
   14000ab46:	add    BYTE PTR [rax],al
   14000ab48:	sbb    DWORD PTR [rdx],ecx
   14000ab4a:	add    al,BYTE PTR [rax]
   14000ab4c:	or     dh,BYTE PTR [rdx]
   14000ab4e:	(bad)  
   14000ab4f:	push   rax
   14000ab50:	mov    esi,0xb000009b
   14000ab55:	adc    BYTE PTR [rax],al
   14000ab57:	add    BYTE PTR [rcx],bl
   14000ab59:	and    al,BYTE PTR [rdx]
   14000ab5b:	add    BYTE PTR [rdi],al
   14000ab5d:	add    DWORD PTR [rip+0x9c7400],edx        # 0x1409d1f63
   14000ab63:	add    al,dh
   14000ab65:	adc    BYTE PTR [rax],al
   14000ab67:	add    BYTE PTR [rdx-0x1000000],bl
   14000ab6d:	(bad)  
   14000ab6e:	(bad)  
   14000ab6f:	jmp    FWORD PTR [rcx]
   14000ab71:	movabs ds:0xa335000000000000,eax
   14000ab7a:	add    BYTE PTR [rax],al
   14000ab7c:	sbb    al,0x95
   14000ab7e:	add    BYTE PTR [rax],al
   14000ab80:	(bad)  
   14000ab81:	(bad)  
   14000ab82:	(bad)  
   14000ab83:	call   QWORD PTR [rax-0x6b]
   14000ab86:	add    BYTE PTR [rax],al
   14000ab88:	add    BYTE PTR [rax],al
   14000ab8a:	add    BYTE PTR [rax],al
   14000ab8c:	pop    rbx
   14000ab8d:	xchg   ebp,eax
   14000ab8e:	add    BYTE PTR [rax],al
   14000ab90:	add    DWORD PTR [rax],eax
   14000ab92:	add    BYTE PTR [rax],al
   14000ab94:	ja     0x14000ab2b
   14000ab96:	add    BYTE PTR [rax],al
   14000ab98:	add    BYTE PTR [rax],al
   14000ab9a:	add    BYTE PTR [rax],al
   14000ab9c:	sbb    DWORD PTR [rdx],esp
   14000ab9e:	add    al,BYTE PTR [rax]
   14000aba0:	(bad)  
   14000aba1:	add    DWORD PTR [rip+0x9c7400],edx        # 0x1409d1fa7
   14000aba7:	add    BYTE PTR [rax],bl
   14000aba9:	adc    DWORD PTR [rax],eax
   14000abab:	add    BYTE PTR [rdx-0x1000000],dl
   14000abb1:	(bad)  
   14000abb2:	(bad)  
   14000abb3:	inc    DWORD PTR [rdi-0x5d]
   14000abb6:	add    BYTE PTR [rax],al
   14000abb8:	add    BYTE PTR [rax],al
   14000abba:	add    BYTE PTR [rax],al
   14000abbc:	push   rbx
   14000abbd:	movabs ds:0xffff0000959c0000,eax
   14000abc6:	(bad)  
   14000abc7:	(bad)  
   14000abc8:	(bad)  
   14000abc9:	xchg   ebp,eax
   14000abca:	add    BYTE PTR [rax],al
   14000abcc:	add    BYTE PTR [rax],al
   14000abce:	add    BYTE PTR [rax],al
   14000abd0:	cmc    
   14000abd1:	xchg   ebp,eax
   14000abd2:	add    BYTE PTR [rax],al
   14000abd4:	add    DWORD PTR [rax],eax
   14000abd6:	add    BYTE PTR [rax],al
   14000abd8:	adc    DWORD PTR [rsi+0x0],edx
   14000abde:	add    BYTE PTR [rax],al
   14000abe0:	adc    DWORD PTR [rax],ebx
   14000abe2:	add    al,0x0
   14000abe4:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000abe7:	add    BYTE PTR [rdx],cl
   14000abe9:	push   rdx
   14000abea:	(bad)  
   14000abeb:	jo     0x14000abab
   14000abed:	fwait
   14000abee:	add    BYTE PTR [rax],al
   14000abf0:	rex adc DWORD PTR [rax],eax
   14000abf3:	add    bh,bh
   14000abf5:	(bad)  
   14000abf6:	(bad)  
   14000abf7:	jmp    QWORD PTR [rbp-0x5d]
   14000abfa:	add    BYTE PTR [rax],al
   14000abfc:	mov    eax,0xff000096
   14000ac01:	(bad)  
   14000ac02:	(bad)  
   14000ac03:	(bad)  
   14000ac04:	fcom   QWORD PTR [rsi+0x0]
   14000ac0a:	add    BYTE PTR [rax],al
   14000ac0c:	or     al,0x97
   14000ac0e:	add    BYTE PTR [rax],al
   14000ac10:	(bad)  
   14000ac11:	(bad)  
   14000ac12:	(bad)  
   14000ac13:	inc    DWORD PTR [rcx]
   14000ac15:	add    al,0x1
   14000ac17:	add    BYTE PTR [rdx+riz*2],al
   14000ac1a:	add    BYTE PTR [rax],al
   14000ac1c:	or     DWORD PTR [rip+0x74150008],edx        # 0x1b415ac2a
   14000ac22:	or     al,BYTE PTR [rax]
   14000ac24:	adc    eax,0x15000964
   14000ac29:	xor    al,0x8
   14000ac2b:	add    BYTE PTR [rip+0x16f01152],dl        # 0x156f0bd83
   14000ac31:	movabs al,ds:0x98cd000000010000
   14000ac3a:	add    BYTE PTR [rax],al
   14000ac3c:	and    ebx,DWORD PTR [rdx-0x5c890000]
   14000ac42:	add    BYTE PTR [rax],al
   14000ac44:	and    ebx,DWORD PTR [rdx+0x6110000]
   14000ac4a:	add    al,BYTE PTR [rax]
   14000ac4c:	(bad)  
   14000ac4d:	xor    al,BYTE PTR [rdx]
   14000ac4f:	xor    BYTE PTR [rsi],dl
   14000ac51:	movabs al,ds:0x9b06000000010000
   14000ac5a:	add    BYTE PTR [rax],al
   14000ac5c:	rex.WXB
   14000ac5d:	fwait
   14000ac5e:	add    BYTE PTR [rax],al
   14000ac60:	fwait
   14000ac61:	movabs ds:0x409000000000000,eax
   14000ac6a:	add    DWORD PTR [rax],eax
   14000ac6c:	add    al,0x22
   14000ac6e:	add    BYTE PTR [rax],al
   14000ac70:	(bad)  
   14000ac71:	movabs al,ds:0x9d91000000010000
   14000ac7a:	add    BYTE PTR [rax],al
   14000ac7c:	(bad)  
   14000ac7d:	popf   
   14000ac7e:	add    BYTE PTR [rax],al
   14000ac80:	add    DWORD PTR [rax],eax
   14000ac82:	add    BYTE PTR [rax],al
   14000ac84:	(bad)  
   14000ac85:	popf   
   14000ac86:	add    BYTE PTR [rax],al
   14000ac88:	or     DWORD PTR [rdx],ecx
   14000ac8a:	add    al,0x0
   14000ac8c:	or     dh,BYTE PTR [rsi+rax*1]
   14000ac8f:	add    BYTE PTR [rdx],cl
   14000ac91:	xor    al,BYTE PTR [rsi]
   14000ac93:	jo     0x14000acab
   14000ac95:	movabs al,ds:0x9edd000000010000
   14000ac9e:	add    BYTE PTR [rax],al
   14000aca0:	adc    BYTE PTR [rdi-0x5c400000],bl
   14000aca6:	add    BYTE PTR [rax],al
   14000aca8:	adc    BYTE PTR [rdi+0x6010000],bl
   14000acae:	add    al,BYTE PTR [rax]
   14000acb0:	(bad)  
   14000acb1:	xor    al,BYTE PTR [rdx]
   14000acb3:	push   rax
   14000acb4:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740dacbe
   14000acba:	or     DWORD PTR [rax],eax
   14000acbc:	or     eax,0x1500632
   14000acc1:	adc    BYTE PTR [rdx],al
   14000acc3:	add    BYTE PTR [rax],dl
   14000acc5:	repnz (bad) 
   14000acc7:	push   rax
   14000acc8:	adc    DWORD PTR [rax],ebx
   14000acca:	add    eax,0x14621800
   14000accf:	loopne 0x14000ace3
   14000acd1:	jo     0x14000ace4
   14000acd3:	(bad)  
   14000acd4:	adc    BYTE PTR [rax],dh
   14000acd6:	add    BYTE PTR [rax],al
   14000acd8:	(bad)  
   14000acd9:	movabs al,ds:0xa1f7000000010000
   14000ace2:	add    BYTE PTR [rax],al
   14000ace4:	(bad)  
   14000ace5:	movabs ds:0xa4300000,al
   14000acee:	add    BYTE PTR [rax],al
   14000acf0:	or     DWORD PTR [rdi],edx
   14000acf2:	(bad)  
   14000acf3:	add    BYTE PTR [rdi],dl
   14000acf5:	xor    al,0xd
   14000acf7:	add    BYTE PTR [rdi],dl
   14000acf9:	jb     0x14000ad0e
   14000acfb:	loopne 0x14000ad0e
   14000acfd:	jo     0x14000ad0f
   14000acff:	(bad)  
   14000ad00:	(bad)  
   14000ad01:	movabs al,ds:0xa24b000000010000
   14000ad0a:	add    BYTE PTR [rax],al
   14000ad0c:	movabs fs:0xa2640000a3e80000,al
   14000ad16:	add    BYTE PTR [rax],al
   14000ad18:	sbb    DWORD PTR [rdx],esp
   14000ad1a:	(bad)  
   14000ad1b:	add    BYTE PTR [rdx],bl
   14000ad1d:	mov    dl,0x16
   14000ad1f:	lock adc al,0xe0
   14000ad22:	adc    dh,BYTE PTR [rax+0x11]
   14000ad25:	(bad)  
   14000ad26:	adc    BYTE PTR [rax],dh
   14000ad28:	mov    esi,0x9000009b
   14000ad2d:	rex.X add BYTE PTR [rax],al
   14000ad30:	(bad)  
   14000ad31:	(bad)  
   14000ad32:	(bad)  
   14000ad33:	inc    DWORD PTR [rax]
   14000ad35:	add    BYTE PTR [rax],al
   14000ad37:	add    BYTE PTR [rax],al
   14000ad39:	add    BYTE PTR [rax],al
   14000ad3b:	add    BYTE PTR [rdx-0x5c],ah
   14000ad3e:	add    BYTE PTR [rax],al
   14000ad40:	(bad)  
   14000ad41:	(bad)  
   14000ad42:	(bad)  
   14000ad43:	inc    DWORD PTR [rax]
   14000ad45:	add    BYTE PTR [rax],al
   14000ad47:	add    BYTE PTR [rdx],al
   14000ad49:	add    BYTE PTR [rax],al
   14000ad4b:	add    BYTE PTR [rax],al
   14000ad4d:	add    BYTE PTR [rax],al
   14000ad4f:	add    BYTE PTR [rbx],al
   14000ad51:	add    BYTE PTR [rax],al
   14000ad53:	add    cl,dh
   14000ad55:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ad56:	add    BYTE PTR [rax],al
   14000ad58:	add    al,BYTE PTR [rax]
	...
   14000ad62:	add    BYTE PTR [rax],al
   14000ad64:	add    DWORD PTR [rax],eax
   14000ad66:	add    BYTE PTR [rax],al
   14000ad68:	add    eax,0x1000000
   14000ad6d:	add    BYTE PTR [rax],al
   14000ad6f:	add    BYTE PTR [rax+0x30000ad],cl
   14000ad75:	add    BYTE PTR [rax],al
   14000ad77:	add    BYTE PTR [rax+rax*1],al
   14000ad7a:	add    BYTE PTR [rax],al
   14000ad7c:	add    eax,0x1000000
   14000ad81:	add    BYTE PTR [rax],al
   14000ad83:	add    BYTE PTR [rbp+rbp*4+0x0],bl
	...
   14000ad92:	add    BYTE PTR [rax],al
   14000ad94:	jo     0x14000ad3a
   14000ad96:	add    BYTE PTR [rax],al
   14000ad98:	cmp    BYTE PTR [rax],al
	...
   14000ada6:	add    BYTE PTR [rax],al
   14000ada8:	jmp    QWORD PTR [rax+rax*1+0x4800]
   14000adaf:	add    BYTE PTR [rax+0x6e],al
   14000adb2:	add    BYTE PTR [rax],al
   14000adb4:	(bad)  
   14000adb5:	(bad)  
   14000adb6:	(bad)  
   14000adb7:	jmp    FWORD PTR [rsi+0x6e]
   14000adbd:	add    BYTE PTR [rax],al
   14000adbf:	add    al,ch
   14000adc1:	outs   dx,BYTE PTR ds:[rsi]
   14000adc2:	add    BYTE PTR [rax],al
   14000adc4:	add    DWORD PTR [rax],eax
   14000adc6:	add    BYTE PTR [rax],al
   14000adc8:	hlt    
   14000adc9:	outs   dx,BYTE PTR ds:[rsi]
   14000adca:	add    BYTE PTR [rax],al
   14000adcc:	add    BYTE PTR [rax],al
   14000adce:	add    BYTE PTR [rax],al
   14000add0:	(bad)  
   14000add1:	outs   dx,DWORD PTR ds:[rsi]
   14000add2:	add    BYTE PTR [rax],al
   14000add4:	(bad)  
   14000add5:	(bad)  
   14000add6:	(bad)  
   14000add7:	push   QWORD PTR [rax-0x5c]
   14000adda:	add    BYTE PTR [rax],al
   14000addc:	add    BYTE PTR [rax],al
   14000adde:	add    BYTE PTR [rax],al
   14000ade0:	jge    0x14000ad86
   14000ade2:	add    BYTE PTR [rax],al
   14000ade4:	add    al,BYTE PTR [rax]
   14000ade6:	add    BYTE PTR [rax],al
   14000ade8:	mov    esp,DWORD PTR [rax+rax*1+0x300]
   14000adef:	add    BYTE PTR [rbx+0x40000a4],bh
   14000adf5:	add    BYTE PTR [rax],al
   14000adf7:	add    dh,al
   14000adf9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000adfa:	add    BYTE PTR [rax],al
   14000adfc:	add    eax,DWORD PTR [rax]
   14000adfe:	add    BYTE PTR [rax],al
   14000ae00:	jrcxz  0x14000ada6
   14000ae02:	add    BYTE PTR [rax],al
   14000ae04:	add    BYTE PTR [rax],al
   14000ae06:	add    BYTE PTR [rax],al
   14000ae08:	or     eax,0x50000a5
   14000ae0d:	add    BYTE PTR [rax],al
   14000ae0f:	add    BYTE PTR [rcx],bl
   14000ae11:	or     al,BYTE PTR [rdx]
   14000ae13:	add    BYTE PTR [rdx],cl
   14000ae15:	xor    al,BYTE PTR [rsi]
   14000ae17:	push   rax
   14000ae18:	mov    esi,0x9000009b
   14000ae1d:	rex.X add BYTE PTR [rax],al
   14000ae20:	sbb    DWORD PTR [rbx],ecx
   14000ae22:	add    eax,DWORD PTR [rax]
   14000ae24:	or     eax,DWORD PTR [rdx+0x7]
   14000ae27:	push   rax
   14000ae28:	(bad)  
   14000ae29:	xor    BYTE PTR [rax],al
   14000ae2b:	add    BYTE PTR [rsi-0x6fffff65],bh
   14000ae31:	rex.X add BYTE PTR [rax],al
   14000ae34:	add    DWORD PTR [rax],ebx
   14000ae36:	or     al,BYTE PTR [rax]
   14000ae38:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   14000ae3c:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14000ae40:	sbb    BYTE PTR [rax+rcx*1],dh
   14000ae43:	add    BYTE PTR [rax],bl
   14000ae45:	xor    dl,BYTE PTR [rax+rsi*8]
   14000ae48:	adc    ah,al
   14000ae4a:	adc    BYTE PTR [rax+0x1],dh
   14000ae4d:	(bad)  
   14000ae4e:	add    al,BYTE PTR [rax]
   14000ae50:	(bad)  
   14000ae51:	xor    al,BYTE PTR [rdx]
   14000ae53:	xor    BYTE PTR [rcx],bl
   14000ae55:	and    BYTE PTR [rdi],al
   14000ae57:	add    BYTE PTR [rsi],cl
   14000ae59:	add    DWORD PTR [rax+rax*1+0x7],eax
   14000ae5d:	loopne 0x14000ae64
   14000ae5f:	jo     0x14000ae65
   14000ae61:	(bad)  
   14000ae62:	add    edx,DWORD PTR [rax+0x2]
   14000ae65:	xor    BYTE PTR [rax],al
   14000ae67:	add    BYTE PTR [rax-0x64],dl
   14000ae6a:	add    BYTE PTR [rax],al
   14000ae6c:	adc    BYTE PTR [rdx],al
   14000ae6e:	add    BYTE PTR [rax],al
   14000ae70:	sbb    DWORD PTR [rsi],ebp
   14000ae72:	add    al,0x0
   14000ae74:	sbb    al,0x1
   14000ae76:	(bad)  
   14000ae77:	add    DWORD PTR [rip+0x50301470],edx        # 0x19030c2ed
   14000ae7d:	pushf  
   14000ae7e:	add    BYTE PTR [rax],al
   14000ae80:	and    BYTE PTR [rax],cl
   14000ae82:	add    BYTE PTR [rax],al
   14000ae84:	sbb    DWORD PTR [rdi],edx
   14000ae86:	add    al,0x0
   14000ae88:	or     BYTE PTR [rdx+0x4],dh
   14000ae8b:	jo     0x14000ae90
   14000ae8d:	push   rax
   14000ae8e:	add    dh,BYTE PTR [rax]
   14000ae90:	push   rax
   14000ae91:	pushf  
   14000ae92:	add    BYTE PTR [rax],al
   14000ae94:	cmp    BYTE PTR [rax],al
   14000ae96:	add    BYTE PTR [rax],al
   14000ae98:	add    DWORD PTR [rax],edx
   14000ae9a:	(bad)  
   14000ae9b:	add    BYTE PTR [rax],dl
   14000ae9d:	lldt   WORD PTR fs:[rax]
   14000aea1:	xor    al,0xe
   14000aea3:	add    BYTE PTR [rax],dl
   14000aea5:	xchg   edx,eax
   14000aea6:	or     al,0x70
   14000aea8:	add    DWORD PTR [rax+rcx*1],edx
   14000aeab:	add    BYTE PTR [rsp+riz*2],dl
   14000aeae:	or     al,BYTE PTR [rax]
   14000aeb0:	adc    al,0x54
   14000aeb2:	or     DWORD PTR [rax],eax
   14000aeb4:	adc    al,0x34
   14000aeb6:	or     BYTE PTR [rax],al
   14000aeb8:	adc    al,0x52
   14000aeba:	adc    BYTE PTR [rax+0x1],dh
   14000aebd:	clts   
   14000aebf:	add    BYTE PTR [rdi],cl
   14000aec1:	fs (bad) 
   14000aec3:	add    BYTE PTR [rdi],cl
   14000aec5:	xor    al,0x6
   14000aec7:	add    BYTE PTR [rdi],cl
   14000aec9:	xor    cl,BYTE PTR [rbx]
   14000aecb:	jo     0x14000aee6
   14000aecd:	xor    al,0xb
   14000aecf:	add    BYTE PTR [rsi],ah
   14000aed1:	xor    al,0x28
   14000aed3:	add    BYTE PTR [rcx],bl
   14000aed5:	add    DWORD PTR [rsi],ebx
   14000aed7:	add    BYTE PTR [rsi],cl
   14000aed9:	lock or al,0xe0
   14000aedc:	or     dl,al
   14000aede:	or     al,al
   14000aee0:	(bad)  
   14000aee1:	jo     0x14000aee8
   14000aee3:	(bad)  
   14000aee4:	add    al,0x50
   14000aee6:	add    BYTE PTR [rax],al
   14000aee8:	je     0x14000ae86
   14000aeea:	add    BYTE PTR [rax],al
   14000aeec:	rol    BYTE PTR [rdx+0x0],0x0
   14000aef0:	(bad)  
   14000aef1:	add    BYTE PTR [rax],al
   14000aef3:	add    bh,bh
   14000aef5:	(bad)  
   14000aef6:	(bad)  
   14000aef7:	dec    DWORD PTR [rax-0x5b]
   14000aefa:	add    BYTE PTR [rax],al
   14000aefc:	add    BYTE PTR [rax],al
   14000aefe:	add    BYTE PTR [rax],al
   14000af00:	push   rsp
   14000af01:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000af02:	add    BYTE PTR [rax],al
   14000af04:	add    DWORD PTR [rax],eax
   14000af06:	add    BYTE PTR [rax],al
   14000af08:	(bad)  
   14000af09:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000af0a:	add    BYTE PTR [rax],al
   14000af0c:	add    al,BYTE PTR [rax]
   14000af0e:	add    BYTE PTR [rax],al
   14000af10:	ins    BYTE PTR es:[rdi],dx
   14000af11:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000af12:	add    BYTE PTR [rax],al
   14000af14:	rex pop rdi
   14000af16:	add    BYTE PTR [rax],al
   14000af18:	(bad)  
   14000af19:	(bad)  
   14000af1a:	(bad)  
   14000af1b:	jmp    rdx
   14000af1d:	pop    rdi
   14000af1e:	add    BYTE PTR [rax],al
   14000af20:	add    BYTE PTR [rax],al
   14000af22:	add    BYTE PTR [rax],al
   14000af24:	repz pop rdi
   14000af26:	add    BYTE PTR [rax],al
   14000af28:	add    DWORD PTR [rax],eax
   14000af2a:	add    BYTE PTR [rax],al
   14000af2c:	add    al,0x60
   14000af2e:	add    BYTE PTR [rax],al
   14000af30:	add    al,BYTE PTR [rax]
   14000af32:	add    BYTE PTR [rax],al
   14000af34:	adc    eax,0x3000060
   14000af39:	add    BYTE PTR [rax],al
   14000af3b:	add    BYTE PTR [rdi],dh
   14000af3d:	movsxd eax,DWORD PTR [rax]
   14000af3f:	add    BYTE PTR [rdx],al
   14000af41:	add    BYTE PTR [rax],al
   14000af43:	add    BYTE PTR [rdx+0x63],bl
   14000af46:	add    BYTE PTR [rax],al
   14000af48:	add    DWORD PTR [rax],eax
   14000af4a:	add    BYTE PTR [rax],al
   14000af4c:	js     0x14000afb1
   14000af4e:	add    BYTE PTR [rax],al
   14000af50:	add    BYTE PTR [rax],al
   14000af52:	add    BYTE PTR [rax],al
   14000af54:	xchg   esi,eax
   14000af55:	movsxd eax,DWORD PTR [rax]
   14000af57:	add    bh,bh
   14000af59:	(bad)  
   14000af5a:	(bad)  
   14000af5b:	call   FWORD PTR [rax+0x2000063]
   14000af61:	add    BYTE PTR [rax],al
   14000af63:	add    BYTE PTR [rbx+0x1000063],bh
   14000af69:	add    BYTE PTR [rax],al
   14000af6b:	add    cl,bl
   14000af6d:	movsxd eax,DWORD PTR [rax]
   14000af6f:	add    BYTE PTR [rax],al
   14000af71:	add    BYTE PTR [rax],al
   14000af73:	add    bh,dh
   14000af75:	movsxd eax,DWORD PTR [rax]
   14000af77:	add    bh,bh
   14000af79:	(bad)  
   14000af7a:	(bad)  
   14000af7b:	call   FWORD PTR [rcx]
   14000af7d:	or     DWORD PTR cs:[rax],eax
   14000af80:	(bad)  
   14000af81:	add    DWORD PTR [rsi],esp
   14000af83:	add    BYTE PTR [rbx],cl
   14000af85:	lock or eax,esp
   14000af88:	(bad)  
   14000af89:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360b400
   14000af90:	add    dl,BYTE PTR [rax+0x0]
   14000af93:	add    BYTE PTR [rsp+rbx*4+0x0],dh
   14000af97:	add    al,dh
   14000af99:	rex.X add BYTE PTR [rax],al
   14000af9c:	and    al,BYTE PTR [rcx]
   14000af9e:	add    BYTE PTR [rax],al
   14000afa0:	(bad)  
   14000afa1:	(bad)  
   14000afa2:	(bad)  
   14000afa3:	(bad)  
   14000afa4:	jle    0x14000af4b
   14000afa6:	add    BYTE PTR [rax],al
   14000afa8:	(bad)  
   14000afa9:	(bad)  
   14000afaa:	(bad)  
   14000afab:	dec    DWORD PTR [rdx-0x7bffff5b]
   14000afb1:	pop    rbp
   14000afb2:	add    BYTE PTR [rax],al
   14000afb4:	(bad)  
   14000afb5:	(bad)  
   14000afb6:	(bad)  
   14000afb7:	(bad)  
   14000afb8:	jp     0x14000b018
   14000afba:	add    BYTE PTR [rax],al
   14000afbc:	add    BYTE PTR [rax],al
   14000afbe:	add    BYTE PTR [rax],al
   14000afc0:	mov    DWORD PTR [rsi+0x0],ebx
   14000afc3:	add    bh,bh
   14000afc5:	(bad)  
   14000afc6:	(bad)  
   14000afc7:	inc    esi
   14000afc9:	pop    rsi
   14000afca:	add    BYTE PTR [rax],al
   14000afcc:	add    DWORD PTR [rax],eax
   14000afce:	add    BYTE PTR [rax],al
   14000afd0:	(bad)  
   14000afd1:	pop    rsi
   14000afd2:	add    BYTE PTR [rax],al
   14000afd4:	(bad)  
   14000afd5:	(bad)  
   14000afd6:	(bad)  
   14000afd7:	call   FWORD PTR [rcx]
   14000afd9:	sub    eax,0x641b000b
   14000afde:	mov    es,WORD PTR [rax]
   14000afe0:	sbb    edx,DWORD PTR [rbp+rcx*4+0x0]
   14000afe4:	sbb    esi,DWORD PTR [rsp+rcx*4]
   14000afe7:	add    BYTE PTR [rbx],bl
   14000afe9:	add    DWORD PTR [rax+0x12f01400],ecx
   14000afef:	loopne 0x14000b001
   14000aff1:	jo     0x14000aff3
   14000aff3:	add    BYTE PTR [rax-0x64],dl
   14000aff6:	add    BYTE PTR [rax],al
   14000aff8:	xor    BYTE PTR [rax+rax*1],al
   14000affb:	add    BYTE PTR [rcx],bl
   14000affd:	(bad)  
   14000affe:	or     DWORD PTR [rax],eax
   14000b000:	(bad)  
   14000b001:	je     0x14000b049
   14000b003:	add    BYTE PTR [rsi],bl
   14000b005:	add    BYTE PTR fs:[r14],r11b
   14000b009:	xor    al,0x44
   14000b00b:	add    BYTE PTR [rsi],bl
   14000b00d:	add    DWORD PTR [rdx+0x0],eax
   14000b010:	adc    BYTE PTR [rax+0x0],dl
   14000b013:	add    BYTE PTR [rax-0x64],dl
   14000b016:	add    BYTE PTR [rax],al
   14000b018:	add    BYTE PTR [rdx],al
   14000b01a:	add    BYTE PTR [rax],al
   14000b01c:	sbb    DWORD PTR [rbx],ebx
   14000b01e:	add    eax,DWORD PTR [rax]
   14000b020:	or     DWORD PTR [rcx],eax
   14000b022:	xchg   esi,eax
   14000b023:	add    BYTE PTR [rdx],al
   14000b025:	xor    BYTE PTR [rax],al
   14000b027:	add    BYTE PTR [rax-0x64],dl
   14000b02a:	add    BYTE PTR [rax],al
   14000b02c:	movabs al,ds:0x21000b3219000004
   14000b035:	rex.W add BYTE PTR fs:[rcx],spl
   14000b039:	xor    al,0x46
   14000b03b:	add    BYTE PTR [rcx],ah
   14000b03d:	add    DWORD PTR [rax+0x0],eax
   14000b040:	adc    dh,al
   14000b042:	adc    al,ah
   14000b044:	(bad)  
   14000b045:	ror    BYTE PTR [rax+rsi*2],0xb
   14000b049:	push   rax
   14000b04a:	add    BYTE PTR [rax],al
   14000b04c:	push   rax
   14000b04d:	pushf  
   14000b04e:	add    BYTE PTR [rax],al
   14000b050:	lock add DWORD PTR [rax],eax
   14000b053:	add    BYTE PTR [rcx],al
   14000b055:	(bad)  
   14000b056:	or     al,BYTE PTR [rax]
   14000b058:	(bad)  
   14000b059:	xor    al,0x19
   14000b05b:	add    BYTE PTR [rsi],bl
   14000b05d:	repnz adc al,0xf0
   14000b060:	adc    ah,al
   14000b062:	adc    al,dl
   14000b064:	(bad)  
   14000b065:	ror    BYTE PTR [rax+rsi*2],0xb
   14000b069:	(bad)  
   14000b06a:	or     dl,BYTE PTR [rax+0x1]
   14000b06d:	(bad)  
   14000b06e:	add    al,BYTE PTR [rax]
   14000b070:	(bad)  
   14000b071:	push   rdx
   14000b072:	add    dh,BYTE PTR [rax]
   14000b074:	sbb    DWORD PTR [rdi],esi
   14000b076:	or     eax,0xac742600
   14000b07b:	add    BYTE PTR [rsi],ah
   14000b07d:	fs stos DWORD PTR es:[rdi],eax
   14000b07f:	add    BYTE PTR [rsi],ah
   14000b081:	xor    al,0xaa
   14000b083:	add    BYTE PTR [rsi],ah
   14000b085:	add    DWORD PTR [rax+rax*1-0x1fe90fe8],esp
   14000b08c:	adc    al,0xd0
   14000b08e:	adc    al,al
   14000b090:	adc    BYTE PTR [rax+0x0],dl
   14000b093:	add    BYTE PTR [rax-0x64],dl
   14000b096:	add    BYTE PTR [rax],al
   14000b098:	adc    BYTE PTR [rip+0x4010000],al        # 0x14401b09e
   14000b09e:	add    DWORD PTR [rax],eax
   14000b0a0:	add    al,0x42
   14000b0a2:	add    BYTE PTR [rax],al
   14000b0a4:	adc    DWORD PTR [rbx],edx
   14000b0a6:	add    al,BYTE PTR [rax]
   14000b0a8:	or     dl,BYTE PTR [rdx+0x6]
   14000b0ab:	xor    BYTE PTR [rsi+0x2000009b],bh
   14000b0b1:	rex.XB add BYTE PTR [r8],al
   14000b0b4:	enter  0x4a,0x0
   14000b0b8:	(bad)  
   14000b0b9:	(bad)  
   14000b0ba:	(bad)  
   14000b0bb:	jmp    rbp
   14000b0bd:	rex.WX add BYTE PTR [rax],al
   14000b0c0:	add    BYTE PTR [rax],al
   14000b0c2:	add    BYTE PTR [rax],al
   14000b0c4:	out    dx,eax
   14000b0c5:	rex.WX add BYTE PTR [rax],al
   14000b0c8:	(bad)  
   14000b0c9:	(bad)  
   14000b0ca:	(bad)  
   14000b0cb:	call   QWORD PTR [rcx]
   14000b0cd:	sbb    BYTE PTR [rax+rax*1],al
   14000b0d0:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000b0d3:	add    BYTE PTR [rdx],cl
   14000b0d5:	push   rdx
   14000b0d6:	(bad)  
   14000b0d7:	jo     0x14000b097
   14000b0d9:	fwait
   14000b0da:	add    BYTE PTR [rax],al
   14000b0dc:	push   rax
   14000b0dd:	rex.XB add BYTE PTR [r8],al
   14000b0e0:	js     0x14000b12c
   14000b0e2:	add    BYTE PTR [rax],al
   14000b0e4:	(bad)  
   14000b0e5:	(bad)  
   14000b0e6:	(bad)  
   14000b0e7:	call   QWORD PTR [rcx]
   14000b0e9:	or     eax,0x82040001
   14000b0ee:	add    BYTE PTR [rax],al
   14000b0f0:	mov    esi,0x8000009b
   14000b0f5:	rex.XB add BYTE PTR [r8],al
   14000b0f8:	(bad)  
   14000b0f9:	(bad)  
   14000b0fa:	(bad)  
   14000b0fb:	call   FWORD PTR [rbp+riz*4+0x4a380000]
   14000b102:	add    BYTE PTR [rax],al
   14000b104:	(bad)  
   14000b105:	(bad)  
   14000b106:	(bad)  
   14000b107:	call   QWORD PTR [rdx+rcx*2+0x0]
   14000b10b:	add    BYTE PTR [rax],al
   14000b10d:	add    BYTE PTR [rax],al
   14000b10f:	add    BYTE PTR [rax+0x4a],ah
   14000b112:	add    BYTE PTR [rax],al
   14000b114:	(bad)  
   14000b115:	(bad)  
   14000b116:	(bad)  
   14000b117:	call   QWORD PTR [rcx]
   14000b119:	adc    al,BYTE PTR [rcx]
   14000b11b:	add    BYTE PTR [rcx],cl
   14000b11d:	(bad)  
   14000b11e:	add    BYTE PTR [rax],al
   14000b120:	mov    esi,0xb000009b
   14000b125:	rex.XB add BYTE PTR [r8],al
   14000b128:	(bad)  
   14000b129:	(bad)  
   14000b12a:	(bad)  
   14000b12b:	inc    DWORD PTR [rbx+0x80000a6]
   14000b131:	rex.WX add BYTE PTR [rax],al
   14000b134:	(bad)  
   14000b135:	(bad)  
   14000b136:	(bad)  
   14000b137:	call   QWORD PTR [rcx]
   14000b139:	sbb    BYTE PTR [rdx],al
   14000b13b:	add    BYTE PTR [rax],dl
   14000b13d:	push   rdx
   14000b13e:	or     al,0x30
   14000b140:	mov    esi,0xe000009b
   14000b145:	rex.XB add BYTE PTR [r8],al
   14000b148:	enter  0x49,0x0
   14000b14c:	(bad)  
   14000b14d:	(bad)  
   14000b14e:	(bad)  
   14000b14f:	(bad)  
   14000b150:	out    dx,al
   14000b151:	rex.WB add BYTE PTR [r8],al
   14000b154:	add    BYTE PTR [rax],al
   14000b156:	add    BYTE PTR [rax],al
   14000b158:	clc    
   14000b159:	rex.WB add BYTE PTR [r8],al
   14000b15c:	(bad)  
   14000b15d:	(bad)  
   14000b15e:	(bad)  
   14000b15f:	inc    DWORD PTR [rcx]
   14000b161:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e42c367
   14000b167:	jo     0x14000b176
   14000b169:	(bad)  
   14000b16a:	or     al,0x50
   14000b16c:	or     esi,DWORD PTR [rax]
   14000b16e:	add    BYTE PTR [rax],al
   14000b170:	add    DWORD PTR [rdx],ecx
   14000b172:	add    al,0x0
   14000b174:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   14000b178:	add    eax,0x19000134
   14000b17d:	or     eax,DWORD PTR ss:[rax]
   14000b180:	and    eax,0x25022734
   14000b185:	add    DWORD PTR [rdx+rax*1],ebx
   14000b188:	adc    al,dh
   14000b18a:	(bad)  
   14000b18b:	loopne 0x14000b199
   14000b18d:	ror    BYTE PTR [rdx],1
   14000b18f:	ror    BYTE PTR [rax],0x70
   14000b192:	(bad)  
   14000b193:	(bad)  
   14000b194:	(bad)  
   14000b195:	push   rax
   14000b196:	add    BYTE PTR [rax],al
   14000b198:	push   rax
   14000b199:	pushf  
   14000b19a:	add    BYTE PTR [rax],al
   14000b19c:	rcl    BYTE PTR [rax],1
   14000b19e:	add    BYTE PTR [rax],al
   14000b1a0:	sbb    DWORD PTR [rip+0x11c000a],ebp        # 0x1411cb1b0
   14000b1a6:	(bad)  
   14000b1a7:	add    DWORD PTR [rip+0x9e00bf0],ecx        # 0x149e0bd9d
   14000b1ad:	rol    BYTE PTR [rdi],1
   14000b1af:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360b626
   14000b1b6:	add    dl,BYTE PTR [rax+0x50]
   14000b1b9:	pushf  
   14000b1ba:	add    BYTE PTR [rax],al
   14000b1bc:	movabs al,ds:0x23000d3119000009
   14000b1c5:	je     0x14000b1f4
   14000b1c7:	add    BYTE PTR [rbx],ah
   14000b1c9:	fs sub al,0x0
   14000b1cc:	and    esi,DWORD PTR [rdx+rbp*1]
   14000b1cf:	add    BYTE PTR [rbx],ah
   14000b1d1:	add    DWORD PTR [rax+rax*1],esp
   14000b1d4:	sbb    al,dh
   14000b1d6:	(bad)  
   14000b1d7:	loopne 0x14000b1ed
   14000b1d9:	rcl    BYTE PTR [rdx],1
   14000b1db:	rcl    BYTE PTR [rax],0x50
   14000b1de:	add    BYTE PTR [rax],al
   14000b1e0:	push   rax
   14000b1e1:	pushf  
   14000b1e2:	add    BYTE PTR [rax],al
   14000b1e4:	adc    BYTE PTR [rcx],al
   14000b1e6:	add    BYTE PTR [rax],al
   14000b1e8:	add    DWORD PTR [rdx],ecx
   14000b1ea:	add    al,0x0
   14000b1ec:	or     dh,BYTE PTR [rcx*1+0x6920a00]
   14000b1f3:	jo     0x14000b1f6
   14000b1f5:	sbb    DWORD PTR [rdx],ecx
   14000b1f7:	add    BYTE PTR [rcx],bl
   14000b1f9:	je     0x14000b204
   14000b1fb:	add    BYTE PTR [rcx],bl
   14000b1fd:	or     BYTE PTR fs:[rax],al
   14000b200:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000b204:	sbb    DWORD PTR [rsi+rax*1],esi
   14000b207:	add    BYTE PTR [rcx],bl
   14000b209:	xor    dl,BYTE PTR [rip+0xc1c01e0]        # 0x14c1cb3ef
   14000b20f:	add    BYTE PTR [rsp+riz*2],bl
   14000b212:	or     al,0x0
   14000b214:	sbb    al,0x54
   14000b216:	or     eax,DWORD PTR [rax]
   14000b218:	sbb    al,0x34
   14000b21a:	or     al,BYTE PTR [rax]
   14000b21c:	sbb    al,0x32
   14000b21e:	sbb    al,dh
   14000b220:	(bad)  
   14000b221:	loopne 0x14000b237
   14000b223:	rcl    BYTE PTR [rdx],1
   14000b225:	rcl    BYTE PTR [rax],0x70
   14000b228:	add    DWORD PTR [rcx],edx
   14000b22a:	or     DWORD PTR [rax],eax
   14000b22c:	adc    DWORD PTR [rdx-0x1ff40ff3],eax
   14000b232:	or     eax,edx
   14000b234:	(bad)  
   14000b235:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14360b6ac
   14000b23c:	add    dh,BYTE PTR [rax]
   14000b23e:	add    BYTE PTR [rax],al
   14000b240:	add    DWORD PTR [rax],ebx
   14000b242:	or     al,BYTE PTR [rax]
   14000b244:	sbb    BYTE PTR [rsp+rdx*1+0x0],ah
   14000b248:	sbb    BYTE PTR [rbx+rdx*1+0x0],dl
   14000b24c:	sbb    BYTE PTR [rdx+rdx*1],dh
   14000b24f:	add    BYTE PTR [rax],bl
   14000b251:	rcl    BYTE PTR [rax+rsi*8],cl
   14000b254:	adc    ah,al
   14000b256:	adc    BYTE PTR [rax+0x19],dh
   14000b259:	and    BYTE PTR [rip+0x14c21800],al        # 0x154c2ca5f
   14000b25f:	loopne 0x14000b273
   14000b261:	jo     0x14000b274
   14000b263:	(bad)  
   14000b264:	adc    BYTE PTR [rax],dh
   14000b266:	add    BYTE PTR [rax],al
   14000b268:	mov    esi,0x1000009b
   14000b26d:	add    BYTE PTR [rax],r8b
   14000b270:	(bad)  
   14000b271:	(bad)  
   14000b272:	(bad)  
   14000b273:	inc    DWORD PTR [rax]
   14000b275:	add    BYTE PTR [rax],al
   14000b277:	add    bh,bh
   14000b279:	(bad)  
   14000b27a:	(bad)  
   14000b27b:	inc    DWORD PTR [rax]
   14000b27d:	add    BYTE PTR [rax],al
   14000b27f:	add    BYTE PTR [rcx],al
   14000b281:	add    BYTE PTR [rax],al
   14000b283:	add    BYTE PTR [rax],al
   14000b285:	add    BYTE PTR [rax],al
   14000b287:	add    BYTE PTR [rcx],al
	...
   14000b295:	add    BYTE PTR [rax],al
   14000b297:	add    BYTE PTR [rbx],al
   14000b299:	add    BYTE PTR [rax],al
   14000b29b:	add    BYTE PTR [rcx],al
   14000b29d:	add    BYTE PTR [rax],al
   14000b29f:	add    BYTE PTR [rax+0x20000b2],bh
   14000b2a5:	add    BYTE PTR [rax],al
   14000b2a7:	add    BYTE PTR [rdx],al
   14000b2a9:	add    BYTE PTR [rax],al
   14000b2ab:	add    BYTE PTR [rbx],al
   14000b2ad:	add    BYTE PTR [rax],al
   14000b2af:	add    BYTE PTR [rcx],al
   14000b2b1:	add    BYTE PTR [rax],al
   14000b2b3:	add    ah,cl
   14000b2b5:	mov    dl,0x0
   14000b2b7:	add    BYTE PTR [rax+0x0],al
	...
   14000b2c2:	add    BYTE PTR [rax],al
   14000b2c4:	xlat   BYTE PTR ds:[rbx]
   14000b2c5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b2c6:	add    BYTE PTR [rax],al
   14000b2c8:	cmp    BYTE PTR [rax],al
   14000b2ca:	add    BYTE PTR [rax],al
   14000b2cc:	add    BYTE PTR [rax],al
	...
   14000b2d7:	add    BYTE PTR [rsi+riz*4],bh
   14000b2da:	add    BYTE PTR [rax],al
   14000b2dc:	rex.W add BYTE PTR [rax],al
   14000b2df:	add    al,ah
   14000b2e1:	xchg   ecx,eax
   14000b2e2:	add    BYTE PTR [rax],al
   14000b2e4:	(bad)  
   14000b2e5:	(bad)  
   14000b2e6:	(bad)  
   14000b2e7:	dec    DWORD PTR [rcx-0x6e]
   14000b2ea:	add    BYTE PTR [rax],al
   14000b2ec:	add    BYTE PTR [rax],al
   14000b2ee:	add    BYTE PTR [rax],al
   14000b2f0:	xchg   DWORD PTR [rdx-0x10000],edx
   14000b2f6:	(bad)  
   14000b2f7:	call   rdi
   14000b2f9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b2fa:	add    BYTE PTR [rax],al
   14000b2fc:	add    BYTE PTR [rax],al
   14000b2fe:	add    BYTE PTR [rax],al
   14000b300:	in     al,0xa5
   14000b302:	add    BYTE PTR [rax],al
   14000b304:	add    DWORD PTR [rax],eax
   14000b306:	add    BYTE PTR [rax],al
   14000b308:	repnz movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b30a:	add    BYTE PTR [rax],al
   14000b30c:	add    al,BYTE PTR [rax]
   14000b30e:	add    BYTE PTR [rax],al
   14000b310:	cmps   BYTE PTR cs:[rsi],BYTE PTR es:[rdi]
   14000b312:	add    BYTE PTR [rax],al
   14000b314:	add    BYTE PTR [rax],al
   14000b316:	add    BYTE PTR [rax],al
   14000b318:	rex.WX cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b31a:	add    BYTE PTR [rax],al
   14000b31c:	add    eax,DWORD PTR [rax]
   14000b31e:	add    BYTE PTR [rax],al
   14000b320:	sbb    DWORD PTR [rdx],ecx
   14000b322:	add    al,BYTE PTR [rax]
   14000b324:	or     dh,BYTE PTR [rdx]
   14000b326:	(bad)  
   14000b327:	push   rax
   14000b328:	mov    esi,0x1000009b
   14000b32d:	add    BYTE PTR [rax],r8b
   14000b330:	sbb    DWORD PTR [rbx],ecx
   14000b332:	add    eax,DWORD PTR [rax]
   14000b334:	or     eax,DWORD PTR [rdx+0x7]
   14000b337:	push   rax
   14000b338:	(bad)  
   14000b339:	xor    BYTE PTR [rax],al
   14000b33b:	add    BYTE PTR [rsi+0x1000009b],bh
   14000b341:	add    BYTE PTR [rax],r8b
   14000b344:	add    DWORD PTR [rax+rcx*1],edx
   14000b347:	add    BYTE PTR [rsp+riz*2],dl
   14000b34a:	or     BYTE PTR [rax],al
   14000b34c:	adc    al,0x54
   14000b34e:	(bad)  
   14000b34f:	add    BYTE PTR [rsp+rsi*1],dl
   14000b352:	(bad)  
   14000b353:	add    BYTE PTR [rdx+rsi*1],dl
   14000b356:	adc    BYTE PTR [rax+0x19],dh
   14000b359:	or     eax,0x62040001
   14000b35e:	add    BYTE PTR [rax],al
   14000b360:	mov    esi,0x4000009b
   14000b365:	add    BYTE PTR [rax],r8b
   14000b368:	(bad)  
   14000b369:	(bad)  
   14000b36a:	(bad)  
   14000b36b:	inc    DWORD PTR [rax]
   14000b36d:	add    BYTE PTR [rax],al
   14000b36f:	add    bh,bh
   14000b371:	(bad)  
   14000b372:	(bad)  
   14000b373:	inc    DWORD PTR [rax]
	...
   14000b37d:	add    BYTE PTR [rax],al
   14000b37f:	add    BYTE PTR [rcx],al
   14000b381:	add    BYTE PTR [rax],al
   14000b383:	add    BYTE PTR [rcx],al
   14000b385:	add    BYTE PTR [rax],al
   14000b387:	add    BYTE PTR [rbx+rsi*4+0x400000],cl
	...
   14000b396:	add    BYTE PTR [rax],al
   14000b398:	mov    al,0xa5
   14000b39a:	add    BYTE PTR [rax],al
   14000b39c:	cmp    BYTE PTR [rax],al
   14000b39e:	add    BYTE PTR [rax],al
   14000b3a0:	hlt    
   14000b3a1:	pop    QWORD PTR [rax]
   14000b3a3:	add    bh,bh
   14000b3a5:	(bad)  
   14000b3a6:	(bad)  
   14000b3a7:	call   QWORD PTR [rcx]
   14000b3a9:	nop
   14000b3aa:	add    BYTE PTR [rax],al
   14000b3ac:	add    BYTE PTR [rax],al
   14000b3ae:	add    BYTE PTR [rax],al
   14000b3b0:	and    eax,0xff000090
   14000b3b5:	(bad)  
   14000b3b6:	(bad)  
   14000b3b7:	push   QWORD PTR [rax+0xa5]
   14000b3bd:	add    BYTE PTR [rax],al
   14000b3bf:	add    BYTE PTR [rbp+0x10000a5],bh
   14000b3c5:	add    BYTE PTR [rax],al
   14000b3c7:	add    BYTE PTR [rcx],bl
   14000b3c9:	or     al,BYTE PTR [rdx]
   14000b3cb:	add    BYTE PTR [rdx],cl
   14000b3cd:	xor    al,BYTE PTR [rsi]
   14000b3cf:	push   rax
   14000b3d0:	mov    esi,0x4000009b
   14000b3d5:	add    BYTE PTR [rax],r8b
   14000b3d8:	adc    DWORD PTR [rax+rcx*1],ebx
   14000b3db:	add    BYTE PTR [rsp+riz*2],bl
   14000b3de:	or     eax,DWORD PTR [rax]
   14000b3e0:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14000b3e4:	adc    al,0x34
   14000b3e6:	or     DWORD PTR [rax],eax
   14000b3e8:	or     BYTE PTR [rdx+0x4],dl
   14000b3eb:	jo     0x14000b3ab
   14000b3ed:	fwait
   14000b3ee:	add    BYTE PTR [rax],al
   14000b3f0:	jo     0x14000b436
   14000b3f2:	add    BYTE PTR [rax],al
   14000b3f4:	(bad)  
   14000b3f5:	(bad)  
   14000b3f6:	(bad)  
   14000b3f7:	inc    ecx
   14000b3f9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b3fa:	add    BYTE PTR [rax],al
   14000b3fc:	rex.W mov es,WORD PTR [rax]
   14000b3ff:	add    bh,bh
   14000b401:	(bad)  
   14000b402:	(bad)  
   14000b403:	call   QWORD PTR [rcx]
   14000b405:	sbb    BYTE PTR [rax+rax*1],al
   14000b408:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000b40b:	add    BYTE PTR [rdx],cl
   14000b40d:	push   rdx
   14000b40e:	(bad)  
   14000b40f:	jo     0x14000b3cf
   14000b411:	fwait
   14000b412:	add    BYTE PTR [rax],al
   14000b414:	movabs al,ds:0x97ffffffff000044
   14000b41d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b41e:	add    BYTE PTR [rax],al
   14000b420:	(bad)  
   14000b421:	mov    eax,DWORD PTR [rax]
   14000b423:	add    bh,bh
   14000b425:	(bad)  
   14000b426:	(bad)  
   14000b427:	(bad)  
   14000b428:	out    dx,eax
   14000b429:	mov    eax,DWORD PTR [rax]
   14000b42b:	add    BYTE PTR [rax],al
   14000b42d:	add    BYTE PTR [rax],al
   14000b42f:	add    BYTE PTR [rip+0xffffffffff00008c],cl        # 0x13f00b4c1
   14000b435:	(bad)  
   14000b436:	(bad)  
   14000b437:	call   QWORD PTR [rcx]
   14000b439:	sbb    BYTE PTR [rax+rax*1],al
   14000b43c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000b43f:	add    BYTE PTR [rdx],cl
   14000b441:	push   rdx
   14000b442:	(bad)  
   14000b443:	jo     0x14000b403
   14000b445:	fwait
   14000b446:	add    BYTE PTR [rax],al
   14000b448:	rol    BYTE PTR [rax+rax*1+0x0],1
   14000b44c:	xor    BYTE PTR [rbx-0x10000],cl
   14000b452:	(bad)  
   14000b453:	call   QWORD PTR [rbp-0x75]
   14000b456:	add    BYTE PTR [rax],al
   14000b458:	add    BYTE PTR [rax],al
   14000b45a:	add    BYTE PTR [rax],al
   14000b45c:	test   DWORD PTR [rbx-0x10000],ecx
   14000b462:	(bad)  
   14000b463:	call   FWORD PTR [rcx]
   14000b465:	adc    eax,DWORD PTR [rcx]
   14000b467:	add    BYTE PTR [rdx+riz*8],al
   14000b46a:	add    BYTE PTR [rax],al
   14000b46c:	push   rax
   14000b46d:	pushf  
   14000b46e:	add    BYTE PTR [rax],al
   14000b470:	(bad)  
   14000b471:	add    BYTE PTR [rax],al
   14000b473:	add    BYTE PTR [rcx],dl
   14000b475:	sbb    BYTE PTR [rax+rax*1],al
   14000b478:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000b47b:	add    BYTE PTR [rdx],cl
   14000b47d:	push   rdx
   14000b47e:	(bad)  
   14000b47f:	jo     0x14000b43f
   14000b481:	fwait
   14000b482:	add    BYTE PTR [rax],al
   14000b484:	add    BYTE PTR [rbp+0x0],al
   14000b487:	add    BYTE PTR [rax-0x76],al
   14000b48a:	add    BYTE PTR [rax],al
   14000b48c:	(bad)  
   14000b48d:	(bad)  
   14000b48e:	(bad)  
   14000b48f:	jmp    QWORD PTR [rbp-0x76]
   14000b492:	add    BYTE PTR [rax],al
   14000b494:	add    BYTE PTR [rax],al
   14000b496:	add    BYTE PTR [rax],al
   14000b498:	xchg   ebp,eax
   14000b499:	mov    al,BYTE PTR [rax]
   14000b49b:	add    bh,bh
   14000b49d:	(bad)  
   14000b49e:	(bad)  
   14000b49f:	call   FWORD PTR [rcx]
   14000b4a1:	and    DWORD PTR [rdx],eax
   14000b4a3:	add    BYTE PTR [rcx],cl
   14000b4a5:	repnz add dh,BYTE PTR [rax]
   14000b4a8:	je     0x14000b446
   14000b4aa:	add    BYTE PTR [rax],al
   14000b4ac:	xor    BYTE PTR [rbp+0x0],al
   14000b4af:	add    BYTE PTR [rdx+0x0],dh
   14000b4b2:	add    BYTE PTR [rax],al
   14000b4b4:	(bad)  
   14000b4b5:	(bad)  
   14000b4b6:	(bad)  
   14000b4b7:	jmp    FWORD PTR [rbp+0x540000a6]
   14000b4bd:	mov    DWORD PTR [rax],eax
   14000b4bf:	add    bh,bh
   14000b4c1:	(bad)  
   14000b4c2:	(bad)  
   14000b4c3:	inc    DWORD PTR [rdi+0x89]
   14000b4c9:	add    BYTE PTR [rax],al
   14000b4cb:	add    BYTE PTR [rbp-0xffff77],bh
   14000b4d1:	(bad)  
   14000b4d2:	(bad)  
   14000b4d3:	inc    DWORD PTR [rax]
   14000b4d5:	add    BYTE PTR [rax],al
   14000b4d7:	add    BYTE PTR [rcx],al
   14000b4d9:	add    al,0x1
   14000b4db:	add    BYTE PTR [rdx+rdx*1],al
   14000b4de:	add    BYTE PTR [rax],al
   14000b4e0:	add    BYTE PTR [rax],al
   14000b4e2:	add    BYTE PTR [rax],al
   14000b4e4:	cmp    BYTE PTR [rsi+0x0],dl
   14000b4ea:	add    BYTE PTR [rax],al
   14000b4ec:	add    BYTE PTR [rbp+0x0],dh
	...
   14000b4fe:	add    BYTE PTR [rax],al
   14000b500:	add    eax,DWORD PTR [rax]
   14000b502:	add    BYTE PTR [rax],al
   14000b504:	and    BYTE PTR [rbp-0x49f80000],dh
   14000b50a:	add    BYTE PTR [rax],al
   14000b50c:	rex.W mov bpl,0x0
	...
   14000b523:	add    BYTE PTR [rax+0xc1],al
   14000b529:	add    BYTE PTR [rax],al
   14000b52b:	add    bh,bh
   14000b52d:	(bad)  
   14000b52e:	(bad)  
   14000b52f:	inc    DWORD PTR [rax]
   14000b531:	add    BYTE PTR [rax],al
   14000b533:	add    BYTE PTR [rax+0x0],al
   14000b536:	add    BYTE PTR [rax],al
   14000b538:	mov    eax,0x96
	...
   14000b549:	add    BYTE PTR [rax],al
   14000b54b:	add    BYTE PTR [rax-0x38],ah
   14000b54e:	add    BYTE PTR [rax],al
   14000b550:	add    BYTE PTR [rax],al
   14000b552:	add    BYTE PTR [rax],al
   14000b554:	(bad)  
   14000b555:	(bad)  
   14000b556:	(bad)  
   14000b557:	inc    DWORD PTR [rax]
   14000b559:	add    BYTE PTR [rax],al
   14000b55b:	add    BYTE PTR [rax],bl
   14000b55d:	add    BYTE PTR [rax],al
   14000b55f:	add    BYTE PTR [rbx+rbx*4+0x0],bh
	...
   14000b56f:	add    BYTE PTR [rdx],al
   14000b571:	add    BYTE PTR [rax],al
   14000b573:	add    BYTE PTR [rax+0x480000b5],cl
   14000b579:	mov    ch,0x0
	...
   14000b58b:	add    BYTE PTR [rax+0xc8],al
   14000b591:	add    BYTE PTR [rax],al
   14000b593:	add    bh,bh
   14000b595:	(bad)  
   14000b596:	(bad)  
   14000b597:	inc    DWORD PTR [rax]
   14000b599:	add    BYTE PTR [rax],al
   14000b59b:	add    BYTE PTR [rax],bl
   14000b59d:	add    BYTE PTR [rax],al
   14000b59f:	add    al,cl
   14000b5a1:	rex.WX add BYTE PTR [rax],al
	...
   14000b5b4:	or     BYTE PTR [rdx+0x0],cl
   14000b5b7:	add    BYTE PTR [rax],al
   14000b5b9:	add    BYTE PTR [rax],al
   14000b5bb:	add    BYTE PTR [rax-0x4b],dh
	...
   14000b5d2:	add    BYTE PTR [rax],al
   14000b5d4:	lods   al,BYTE PTR ds:[rsi]
   14000b5d5:	mov    al,BYTE PTR [rax]
   14000b5d7:	add    BYTE PTR [rax],al
   14000b5d9:	add    BYTE PTR [rax],al
   14000b5db:	add    BYTE PTR [rax-0x4a],bl
	...
   14000b5ee:	add    BYTE PTR [rax],al
   14000b5f0:	add    al,BYTE PTR [rax]
   14000b5f2:	add    BYTE PTR [rax],al
   14000b5f4:	or     BYTE PTR [rsi-0x4ab80000],dh
	...
   14000b60a:	add    BYTE PTR [rax],al
   14000b60c:	ror    al,1
   14000b60e:	add    BYTE PTR [rax],al
   14000b610:	add    BYTE PTR [rax],al
   14000b612:	add    BYTE PTR [rax],al
   14000b614:	(bad)  
   14000b615:	(bad)  
   14000b616:	(bad)  
   14000b617:	inc    DWORD PTR [rax]
   14000b619:	add    BYTE PTR [rax],al
   14000b61b:	add    BYTE PTR [rax+0x0],al
   14000b61e:	add    BYTE PTR [rax],al
   14000b620:	mov    al,BYTE PTR [rax]
	...
   14000b633:	add    BYTE PTR [rax+0xc8],ch
   14000b639:	add    BYTE PTR [rax],al
   14000b63b:	add    bh,bh
   14000b63d:	(bad)  
   14000b63e:	(bad)  
   14000b63f:	inc    DWORD PTR [rax]
   14000b641:	add    BYTE PTR [rax],al
   14000b643:	add    BYTE PTR [rax+0x0],al
   14000b646:	add    BYTE PTR [rax],al
   14000b648:	xor    BYTE PTR [rbx+0x0],cl
	...
   14000b656:	add    BYTE PTR [rax],al
   14000b658:	add    eax,DWORD PTR [rax]
   14000b65a:	add    BYTE PTR [rax],al
   14000b65c:	xor    BYTE PTR [rsi-0x49f80000],dh
   14000b662:	add    BYTE PTR [rax],al
   14000b664:	rex.W mov bpl,0x0
	...
   14000b67b:	add    BYTE PTR [rdx+rcx*4+0x0],ch
   14000b682:	add    BYTE PTR [rax],al
   14000b684:	lock mov ch,0x0
	...

Disassembly of section .data:

000000014000c000 <.data>:
   14000c000:	add    BYTE PTR [rax],al
   14000c002:	add    BYTE PTR [rax],al
   14000c004:	add    BYTE PTR [rcx],al
	...
   14000c0fe:	add    BYTE PTR [rax],al
   14000c100:	test   al,0x11
   14000c102:	add    BYTE PTR [rax+0x1],al
	...
   14000c10d:	add    BYTE PTR [rax],al
   14000c10f:	add    BYTE PTR [rsi],ch
   14000c111:	(bad)  
   14000c112:	push   r14
   14000c114:	rex.XB
   14000c115:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000c117:	push   rsp
   14000c118:	jb     0x14000c17b
   14000c11a:	movsxd ebp,DWORD PTR [rbx+0x4f]
   14000c11d:	(bad)  
   14000c11e:	push   0x65
   14000c120:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14000c124:	add    BYTE PTR [rax],al
   14000c126:	add    BYTE PTR [rax],al
   14000c128:	test   al,0x11
   14000c12a:	add    BYTE PTR [rax+0x1],al
	...
   14000c135:	add    BYTE PTR [rax],al
   14000c137:	add    BYTE PTR [rsi],ch
   14000c139:	(bad)  
   14000c13a:	push   r14
   14000c13c:	pop    rdi
   14000c13d:	rex.B
   14000c13e:	rex.RX pop rax
   14000c140:	pop    rdi
   14000c141:	rex.R
   14000c142:	rex.WR
   14000c143:	rex.WR pop rdi
   14000c145:	rex.WRB
   14000c146:	rex.WRXB
   14000c147:	rex.R push rbp
   14000c149:	rex.WR
   14000c14a:	rex.RB pop r15
   14000c14c:	push   rbx
   14000c14d:	push   rsp
   14000c14e:	push   r12
   14000c150:	rex.RB
   14000c151:	rex
   14000c152:	add    BYTE PTR [rax],al
   14000c155:	add    BYTE PTR [rax],al
   14000c157:	add    BYTE PTR [rax+0x1400011],ch
	...
   14000c165:	add    BYTE PTR [rax],al
   14000c167:	add    BYTE PTR [rsi],ch
   14000c169:	(bad)  
   14000c16a:	push   r14
   14000c16c:	rex.B
   14000c16d:	rex.RX pop rax
   14000c16f:	pop    rdi
   14000c170:	rex.WRB
   14000c171:	rex.WRXB
   14000c172:	rex.R push rbp
   14000c174:	rex.WR
   14000c175:	rex.RB pop r15
   14000c177:	push   rbx
   14000c178:	push   rsp
   14000c179:	push   r12
   14000c17b:	rex.RB
   14000c17c:	rex
   14000c17d:	add    BYTE PTR [rax],al
   14000c180:	test   al,0x11
   14000c182:	add    BYTE PTR [rax+0x1],al
	...
   14000c18d:	add    BYTE PTR [rax],al
   14000c18f:	add    BYTE PTR [rsi],ch
   14000c191:	(bad)  
   14000c192:	push   r14
   14000c194:	outs   dx,DWORD PTR ds:[rsi]
   14000c195:	jne    0x14000c20b
   14000c197:	pop    rdi
   14000c198:	outs   dx,DWORD PTR ds:[rsi]
   14000c199:	pop    di
   14000c19b:	jb     0x14000c1fe
   14000c19d:	outs   dx,BYTE PTR ds:[rsi]
   14000c19e:	addr32 gs rex jae 0x14000c217
   14000c1a3:	fs rex
   14000c1a5:	add    BYTE PTR [rax],al
	...
   14000c1b0:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000c1b6:	add    BYTE PTR [rax],al
   14000c1b8:	int    0x5d
   14000c1ba:	and    dl,dl
   14000c1bc:	data16 (bad) 
   14000c1be:	(bad)  
   14000c1bf:	inc    DWORD PTR [rcx]
   14000c1c1:	add    BYTE PTR [rax],al
   14000c1c3:	add    bh,bh
   14000c1c5:	(bad)  
   14000c1c6:	(bad)  
   14000c1c7:	(bad)  
   14000c1c8:	(bad)  
   14000c1c9:	(bad)  
   14000c1ca:	(bad)  
   14000c1cb:	inc    DWORD PTR [rax]
   14000c1cd:	add    BYTE PTR [rax],al
   14000c1cf:	add    BYTE PTR [rax+0x140001a],dl
   14000c1d5:	add    BYTE PTR [rax],al
   14000c1d7:	add    al,al
   14000c1d9:	sbb    al,BYTE PTR [rax]
   14000c1db:	rex add DWORD PTR [rax],eax
   14000c1de:	add    BYTE PTR [rax],al
   14000c1e0:	lock sbb al,BYTE PTR [rax]
   14000c1e3:	rex add DWORD PTR [rax],eax
   14000c1e6:	add    BYTE PTR [rax],al
   14000c1e8:	and    BYTE PTR [rbx],bl
   14000c1ea:	add    BYTE PTR [rax+0x1],al
   14000c1ed:	add    BYTE PTR [rax],al
   14000c1ef:	add    BYTE PTR [rax+0x140001b],al
   14000c1f5:	add    BYTE PTR [rax],al
   14000c1f7:	add    al,ah
   14000c1f9:	sbb    eax,DWORD PTR [rax]
   14000c1fb:	rex add DWORD PTR [rax],eax
   14000c1fe:	add    BYTE PTR [rax],al
   14000c200:	xor    BYTE PTR [rax+rax*1],bl
   14000c203:	rex add DWORD PTR [rax],eax
   14000c206:	add    BYTE PTR [rax],al
   14000c208:	jo     0x14000c226
   14000c20a:	add    BYTE PTR [rax+0x1],al
   14000c20d:	add    BYTE PTR [rax],al
   14000c20f:	add    BYTE PTR [rax+0x140001c],ah
   14000c215:	add    BYTE PTR [rax],al
   14000c217:	add    al,dh
   14000c219:	sbb    al,0x0
   14000c21b:	rex add DWORD PTR [rax],eax
   14000c21e:	add    BYTE PTR [rax],al
   14000c220:	rex sbb eax,0x14000
   14000c226:	add    BYTE PTR [rax],al
   14000c228:	sbb    BYTE PTR [rip+0x14000],0x0        # 0x14002022f
   14000c22f:	add    al,dl
   14000c231:	sbb    eax,0x14000
   14000c236:	add    BYTE PTR [rax],al
   14000c238:	and    BYTE PTR [rsi],bl
   14000c23a:	add    BYTE PTR [rax+0x1],al
   14000c23d:	add    BYTE PTR [rax],al
   14000c23f:	add    BYTE PTR [rax+0x140001e],al
   14000c245:	add    BYTE PTR [rax],al
   14000c247:	add    al,cl
   14000c249:	(bad)  
   14000c24a:	add    BYTE PTR [rax+0x1],al
   14000c24d:	add    BYTE PTR [rax],al
   14000c24f:	add    BYTE PTR [rax],dl
   14000c251:	(bad)  
   14000c252:	add    BYTE PTR [rax+0x1],al
   14000c255:	add    BYTE PTR [rax],al
   14000c257:	add    al,dh
   14000c259:	adc    DWORD PTR [rax],eax
   14000c25b:	rex add DWORD PTR [rax],eax
   14000c25e:	add    BYTE PTR [rax],al
   14000c260:	(bad)  
   14000c261:	(bad)  
   14000c262:	(bad)  
   14000c263:	(bad)  
   14000c264:	(bad)  
   14000c265:	(bad)  
   14000c266:	(bad)  
   14000c267:	jmp    FWORD PTR [rdx-0x1000000]
   14000c26d:	(bad)  
   14000c26e:	(bad)  
   14000c26f:	inc    DWORD PTR [rax]
   14000c271:	sbb    DWORD PTR [rax],eax
   14000c273:	rex add DWORD PTR [rax],eax
   14000c276:	add    BYTE PTR [rax],al
   14000c278:	add    DWORD PTR [rax],eax
   14000c27a:	add    BYTE PTR [rax],al
   14000c27c:	(bad)  
   14000c27d:	(bad)  
   14000c27e:	(bad)  
   14000c27f:	inc    DWORD PTR [rax]
   14000c281:	add    BYTE PTR [rax],al
   14000c283:	add    BYTE PTR [rsi+0x0],cl
   14000c286:	outs   dx,DWORD PTR ds:[rsi]
   14000c287:	add    BYTE PTR [rsi+0x0],ch
   14000c28a:	add    BYTE PTR gs:[rax],al
	...
   14000c2c1:	add    BYTE PTR [rax],al
   14000c2c3:	add    BYTE PTR [rax+rax*1],dl
   14000c2c6:	add    BYTE PTR [rax],al
   14000c2c8:	rex.RX add BYTE PTR [rcx+0x0],r12b
   14000c2cc:	je     0x14000c2ce
   14000c2ce:	(bad)  
   14000c2cf:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c2d3:	add    BYTE PTR [rbp+0x0],al
   14000c2d6:	jb     0x14000c2d8
   14000c2d8:	jb     0x14000c2da
   14000c2da:	outs   dx,DWORD PTR ds:[rsi]
   14000c2db:	add    BYTE PTR [rdx+0x0],dh
   14000c2de:	jae    0x14000c2e0
	...
   14000c308:	(bad)  
   14000c309:	add    BYTE PTR [rax],al
   14000c30b:	add    BYTE PTR [rbp+0x0],dl
   14000c30e:	outs   dx,BYTE PTR ds:[rsi]
   14000c30f:	add    BYTE PTR [rax+0x0],ch
   14000c312:	(bad)  
   14000c313:	add    BYTE PTR [rsi+0x0],ch
   14000c316:	add    BYTE PTR fs:[rax+rax*1+0x65],ch
   14000c31b:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000c31f:	add    BYTE PTR [rbp+0x0],al
   14000c322:	js     0x14000c324
   14000c324:	movsxd eax,DWORD PTR [rax]
   14000c326:	add    BYTE PTR gs:[rax+0x0],dh
   14000c32a:	je     0x14000c32c
   14000c32c:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14000c34a:	add    BYTE PTR [rax],al
   14000c34c:	sub    BYTE PTR [rax],al
   14000c34e:	add    BYTE PTR [rax],al
   14000c350:	add    BYTE PTR [r10+0x0],r14b
   14000c354:	jb     0x14000c356
   14000c356:	outs   dx,DWORD PTR ds:[rsi]
   14000c357:	add    BYTE PTR [rdx+0x0],dh
	...
   14000c38e:	add    BYTE PTR [rax],al
   14000c390:	xor    al,BYTE PTR [rax]
   14000c392:	add    BYTE PTR [rax],al
   14000c394:	add    BYTE PTR [r11+0x0],sil
   14000c398:	jae    0x14000c39a
   14000c39a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c39e:	je     0x14000c3a0
   14000c3a0:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14000c3d2:	add    BYTE PTR [rax],al
   14000c3d4:	cmp    al,0x0
   14000c3d6:	add    BYTE PTR [rax],al
   14000c3d8:	push   rdi
   14000c3d9:	add    BYTE PTR [rcx+0x0],ah
   14000c3dc:	jb     0x14000c3de
   14000c3de:	outs   dx,BYTE PTR ds:[rsi]
   14000c3df:	add    BYTE PTR [rcx+0x0],ch
   14000c3e2:	outs   dx,BYTE PTR ds:[rsi]
   14000c3e3:	add    BYTE PTR [rdi+0x0],ah
	...
   14000c416:	add    BYTE PTR [rax],al
   14000c418:	push   rax
   14000c419:	add    BYTE PTR [rax],al
   14000c41b:	add    BYTE PTR [rbp+0x0],al
   14000c41e:	js     0x14000c420
   14000c420:	movsxd eax,DWORD PTR [rax]
   14000c422:	add    BYTE PTR gs:[rax+0x0],dh
   14000c426:	je     0x14000c428
   14000c428:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c42e:	and    BYTE PTR [rax],al
   14000c430:	rex.W add BYTE PTR [rcx+0x0],spl
   14000c434:	outs   dx,BYTE PTR ds:[rsi]
   14000c435:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000c439:	add    BYTE PTR [rcx+0x0],ch
   14000c43c:	outs   dx,BYTE PTR ds:[rsi]
   14000c43d:	add    BYTE PTR [rdi+0x0],ah
	...
   14000c45c:	add    BYTE PTR fs:[rax],al
   14000c45f:	add    BYTE PTR [rbp+0x0],al
   14000c462:	jbe    0x14000c464
   14000c464:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c468:	je     0x14000c46a
   14000c46a:	and    BYTE PTR [rax],al
   14000c46c:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000c470:	add    BYTE PTR [eax],ah
   14000c473:	add    BYTE PTR [rcx+0x0],al
   14000c476:	movsxd eax,DWORD PTR [rax]
   14000c478:	je     0x14000c47a
   14000c47a:	imul   eax,DWORD PTR [rax],0x690076
   14000c480:	je     0x14000c482
   14000c482:	jns    0x14000c484
	...
   14000c4a0:	js     0x14000c4a2
   14000c4a2:	add    BYTE PTR [rax],al
   14000c4a4:	rex.RXB add BYTE PTR [r13+0x0],r12b
   14000c4a8:	outs   dx,BYTE PTR ds:[rsi]
   14000c4a9:	add    BYTE PTR [rbp+0x0],ah
   14000c4ac:	jb     0x14000c4ae
   14000c4ae:	(bad)  
   14000c4af:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c4b3:	add    BYTE PTR [rcx+0x0],cl
   14000c4b6:	outs   dx,BYTE PTR ds:[rsi]
   14000c4b7:	add    BYTE PTR [rsi+0x0],ah
   14000c4ba:	outs   dx,DWORD PTR ds:[rsi]
   14000c4bb:	add    BYTE PTR [rdx+0x0],dh
   14000c4be:	ins    DWORD PTR es:[rdi],dx
   14000c4bf:	add    BYTE PTR [rcx+0x0],ah
   14000c4c2:	je     0x14000c4c4
   14000c4c4:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14000c4e2:	add    BYTE PTR [rax],al
   14000c4e4:	mov    WORD PTR [rax],es
   14000c4e6:	add    BYTE PTR [rax],al
   14000c4e8:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c4ec:	add    BYTE PTR fs:[rbp+0x0],ah
   14000c4f0:	and    BYTE PTR [rax],al
   14000c4f2:	data16 add BYTE PTR [rax+rax*1+0x6f],ch
   14000c4f7:	add    BYTE PTR [rdi+0x0],dh
	...
   14000c526:	add    BYTE PTR [rax],al
   14000c528:	movabs al,ds:0x6e00750046000000
   14000c531:	add    BYTE PTR [rbx+0x0],ah
   14000c534:	je     0x14000c536
   14000c536:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c53c:	and    BYTE PTR [rax],al
   14000c53e:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c542:	je     0x14000c544
   14000c544:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c548:	(bad)  
   14000c549:	add    BYTE PTR [rbp+0x0],ah
   14000c54c:	js     0x14000c54e
   14000c54e:	imul   eax,DWORD PTR [rax],0x74
	...
   14000c56c:	stos   BYTE PTR es:[rdi],al
   14000c56d:	add    BYTE PTR [rax],al
   14000c56f:	add    BYTE PTR [rsi+0x0],al
   14000c572:	jne    0x14000c574
   14000c574:	outs   dx,BYTE PTR ds:[rsi]
   14000c575:	add    BYTE PTR [rbx+0x0],ah
   14000c578:	je     0x14000c57a
   14000c57a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c580:	and    BYTE PTR [rax],al
   14000c582:	jb     0x14000c584
   14000c584:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   14000c589:	add    BYTE PTR [rdx+0x0],dh
   14000c58c:	outs   dx,BYTE PTR ds:[rsi]
   14000c58d:	add    BYTE PTR [rax],ah
   14000c58f:	add    BYTE PTR [rsi+0x0],dh
   14000c592:	(bad)  
   14000c593:	add    BYTE PTR [rax+rax*1+0x75],ch
   14000c597:	add    BYTE PTR [rbp+0x0],ah
   14000c59a:	jae    0x14000c59c
	...
   14000c5b0:	mov    ah,0x0
   14000c5b2:	add    BYTE PTR [rax],al
   14000c5b4:	rex.RX add BYTE PTR [rbp+0x0],r14b
   14000c5b8:	outs   dx,BYTE PTR ds:[rsi]
   14000c5b9:	add    BYTE PTR [rbx+0x0],ah
   14000c5bc:	je     0x14000c5be
   14000c5be:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c5c4:	and    BYTE PTR [rax],al
   14000c5c6:	push   rax
   14000c5c7:	add    BYTE PTR [rcx+0x0],ah
   14000c5ca:	jb     0x14000c5cc
   14000c5cc:	(bad)  
   14000c5cd:	add    BYTE PTR [rbp+0x0],ch
   14000c5d0:	add    BYTE PTR gs:[rax+rax*1+0x65],dh
   14000c5d5:	add    BYTE PTR [rdx+0x0],dh
   14000c5d8:	jae    0x14000c5da
	...
   14000c5f2:	add    BYTE PTR [rax],al
   14000c5f4:	mov    esi,0x46000000
   14000c5f9:	add    BYTE PTR [rbp+0x0],dh
   14000c5fc:	outs   dx,BYTE PTR ds:[rsi]
   14000c5fd:	add    BYTE PTR [rbx+0x0],ah
   14000c600:	je     0x14000c602
   14000c602:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c608:	and    BYTE PTR [rax],al
   14000c60a:	push   rax
   14000c60b:	add    BYTE PTR [rcx+0x0],ah
   14000c60e:	jb     0x14000c610
   14000c610:	(bad)  
   14000c611:	add    BYTE PTR [rbp+0x0],ch
   14000c614:	add    BYTE PTR gs:[rax+rax*1+0x65],dh
   14000c619:	add    BYTE PTR [rdx+0x0],dh
   14000c61c:	jae    0x14000c61e
   14000c61e:	and    BYTE PTR [rax],al
   14000c620:	push   rsi
   14000c621:	add    BYTE PTR [rbp+0x0],ah
   14000c624:	jb     0x14000c626
   14000c626:	(bad)  
   14000c627:	add    BYTE PTR [rdi+0x0],ch
   14000c62a:	jae    0x14000c62c
   14000c62c:	add    BYTE PTR gs:[rax],al
	...
   14000c637:	add    al,cl
   14000c639:	add    BYTE PTR [rax],al
   14000c63b:	add    BYTE PTR [rsi+0x0],dl
   14000c63e:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c642:	(bad)  
   14000c643:	add    BYTE PTR [rdi+0x0],ch
   14000c646:	jae    0x14000c648
   14000c648:	add    BYTE PTR gs:[rax],ah
   14000c64b:	add    BYTE PTR [rcx+0x0],cl
   14000c64e:	outs   dx,BYTE PTR ds:[rsi]
   14000c64f:	add    BYTE PTR [rsi+0x0],ah
   14000c652:	outs   dx,DWORD PTR ds:[rsi]
   14000c653:	add    BYTE PTR [rax],ah
   14000c655:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c659:	add    BYTE PTR [rsi+0x0],dh
   14000c65c:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   14000c661:	add    BYTE PTR [rcx],dh
	...
   14000c67b:	add    dl,dl
   14000c67d:	add    BYTE PTR [rax],al
   14000c67f:	add    BYTE PTR [rsi+0x0],dl
   14000c682:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c686:	(bad)  
   14000c687:	add    BYTE PTR [rdi+0x0],ch
   14000c68a:	jae    0x14000c68c
   14000c68c:	add    BYTE PTR gs:[rax],ah
   14000c68f:	add    BYTE PTR [rcx+0x0],cl
   14000c692:	outs   dx,BYTE PTR ds:[rsi]
   14000c693:	add    BYTE PTR [rsi+0x0],ah
   14000c696:	outs   dx,DWORD PTR ds:[rsi]
   14000c697:	add    BYTE PTR [rax],ah
   14000c699:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c69d:	add    BYTE PTR [rsi+0x0],dh
   14000c6a0:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   14000c6a5:	add    BYTE PTR [rdx],dh
	...
   14000c6bf:	add    ah,bl
   14000c6c1:	add    BYTE PTR [rax],al
   14000c6c3:	add    BYTE PTR [rsi+0x0],dl
   14000c6c6:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c6ca:	(bad)  
   14000c6cb:	add    BYTE PTR [rdi+0x0],ch
   14000c6ce:	jae    0x14000c6d0
   14000c6d0:	add    BYTE PTR gs:[rax],ah
   14000c6d3:	add    BYTE PTR [rcx+0x0],cl
   14000c6d6:	outs   dx,BYTE PTR ds:[rsi]
   14000c6d7:	add    BYTE PTR [rsi+0x0],ah
   14000c6da:	outs   dx,DWORD PTR ds:[rsi]
   14000c6db:	add    BYTE PTR [rax],ah
   14000c6dd:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c6e1:	add    BYTE PTR [rsi+0x0],dh
   14000c6e4:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   14000c6e9:	add    BYTE PTR [rbx],dh
	...
   14000c703:	add    dh,ah
   14000c705:	add    BYTE PTR [rax],al
   14000c707:	add    BYTE PTR [rsi+0x0],al
   14000c70a:	(bad)  
   14000c70b:	add    BYTE PTR [rbx+0x0],dh
   14000c70e:	je     0x14000c710
   14000c710:	and    BYTE PTR [rax],al
   14000c712:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c716:	add    BYTE PTR fs:[rbp+0x0],ah
   14000c71a:	and    BYTE PTR [rax],al
   14000c71c:	rex.WR add BYTE PTR [rbp+0x0],r12b
   14000c720:	jbe    0x14000c722
   14000c722:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   14000c727:	add    BYTE PTR [rcx],dh
	...
   14000c745:	add    BYTE PTR [rax],al
   14000c747:	add    al,dh
   14000c749:	add    BYTE PTR [rax],al
   14000c74b:	add    BYTE PTR [rsi+0x0],al
   14000c74e:	(bad)  
   14000c74f:	add    BYTE PTR [rbx+0x0],dh
   14000c752:	je     0x14000c754
   14000c754:	and    BYTE PTR [rax],al
   14000c756:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c75a:	add    BYTE PTR fs:[rbp+0x0],ah
   14000c75e:	and    BYTE PTR [rax],al
   14000c760:	rex.WR add BYTE PTR [rbp+0x0],r12b
   14000c764:	jbe    0x14000c766
   14000c766:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   14000c76b:	add    BYTE PTR [rdx],dh
	...
   14000c789:	add    BYTE PTR [rax],al
   14000c78b:	add    dl,bh
   14000c78d:	add    BYTE PTR [rax],al
   14000c78f:	add    BYTE PTR [rsi+0x0],al
   14000c792:	(bad)  
   14000c793:	add    BYTE PTR [rbx+0x0],dh
   14000c796:	je     0x14000c798
   14000c798:	and    BYTE PTR [rax],al
   14000c79a:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c79e:	add    BYTE PTR fs:[rbp+0x0],ah
   14000c7a2:	and    BYTE PTR [rax],al
   14000c7a4:	rex.WR add BYTE PTR [rbp+0x0],r12b
   14000c7a8:	jbe    0x14000c7aa
   14000c7aa:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   14000c7af:	add    BYTE PTR [rbx],dh
	...
   14000c7cd:	add    BYTE PTR [rax],al
   14000c7cf:	add    bh,bh
   14000c7d1:	add    BYTE PTR [rax],al
   14000c7d3:	add    BYTE PTR [rcx+0x0],al
   14000c7d6:	ins    BYTE PTR es:[rdi],dx
   14000c7d7:	add    BYTE PTR [rax+rax*1+0x0],ch
	...
   14000c847:	add    BYTE PTR [rax+0x42],al
   14000c84a:	add    BYTE PTR [rax+0x1],al
	...
   14000c85d:	add    BYTE PTR [rax],al
   14000c85f:	add    BYTE PTR [rax+0x1400011],ch
	...
   14000c86d:	add    BYTE PTR [rax],al
   14000c86f:	add    BYTE PTR [rsi],ch
   14000c871:	(bad)  
   14000c872:	push   r14
   14000c874:	gs js  0x14000c8da
   14000c877:	gs jo  0x14000c8ee
   14000c87a:	imul   ebp,DWORD PTR [rdi+0x6e],0xa8004040
   14000c881:	adc    DWORD PTR [rax],eax
   14000c883:	rex add DWORD PTR [rax],eax
	...
   14000c88e:	add    BYTE PTR [rax],al
   14000c890:	cs (bad) 
   14000c892:	push   r14
   14000c894:	(bad)
   14000c899:	ins    BYTE PTR es:[rdi],dx
   14000c89a:	ins    BYTE PTR es:[rdi],dx
   14000c89b:	outs   dx,DWORD PTR ds:[rsi]
   14000c89c:	movsxd eax,DWORD PTR [rax+0x73]
   14000c89f:	je     0x14000c905
   14000c8a1:	rex
   14000c8a2:	add    BYTE PTR [rax],al
   14000c8a5:	add    BYTE PTR [rax],al
   14000c8a7:	add    BYTE PTR [rax+0x1400011],ch
	...
   14000c8b5:	add    BYTE PTR [rax],al
   14000c8b7:	add    BYTE PTR [rsi],ch
   14000c8b9:	(bad)  
   14000c8ba:	push   r14
   14000c8bc:	ins    BYTE PTR es:[rdi],dx
   14000c8bd:	outs   dx,BYTE PTR gs:[rsi]
   14000c8bf:	addr32 je 0x14000c92a
   14000c8c2:	pop    rdi
   14000c8c3:	gs jb  0x14000c938
   14000c8c6:	outs   dx,DWORD PTR ds:[rsi]
   14000c8c7:	jb     0x14000c909
   14000c8c9:	jae    0x14000c93f
   14000c8cb:	fs rex
   14000c8cd:	add    BYTE PTR [rax],al
   14000c8d0:	test   al,0x11
   14000c8d2:	add    BYTE PTR [rax+0x1],al
	...
   14000c8dd:	add    BYTE PTR [rax],al
   14000c8df:	add    BYTE PTR [rsi],ch
   14000c8e1:	(bad)  
   14000c8e2:	push   r14
   14000c8e4:	ins    BYTE PTR es:[rdi],dx
   14000c8e5:	outs   dx,DWORD PTR ds:[rsi]
   14000c8e6:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   14000c8ee:	jb     0x14000c930
   14000c8f0:	jae    0x14000c966
   14000c8f2:	fs rex
   14000c8f4:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000140011000 <.pdata>:
   140011000:	or     BYTE PTR [rax+0x0],0x0
   140011004:	rex.XB
   140011005:	rex.WB add BYTE PTR [r8],al
   140011008:	jo     0x140010fbb
   14001100a:	add    BYTE PTR [rax],al
   14001100c:	rex.WR
   14001100d:	rex.WB add BYTE PTR [r8],al
   140011010:	ror    DWORD PTR [rcx+0x0],0x0
   140011014:	(bad)  
   140011015:	mov    cl,0x0
   140011017:	add    al,cl
   140011019:	rex.WB add BYTE PTR [r8],al
   14001101c:	add    DWORD PTR [rdx+0x0],ecx
   14001101f:	add    BYTE PTR [rax],bh
   140011021:	mov    cl,0x0
   140011023:	add    BYTE PTR [rax],cl
   140011025:	rex.WX add BYTE PTR [rax],al
   140011028:	(bad)  
   140011029:	rex.WX add BYTE PTR [rax],al
   14001102c:	sbb    BYTE PTR [rcx+0x4a380000],dh
   140011032:	add    BYTE PTR [rax],al
   140011034:	jb     0x140011080
   140011036:	add    BYTE PTR [rax],al
   140011038:	call   0x1b80110ed
   14001103d:	rex.WX add BYTE PTR [rax],al
   140011040:	ror    DWORD PTR [rdx+0x0],0x0
   140011044:	int3   
   140011045:	mov    al,0x0
   140011047:	add    al,cl
   140011049:	rex.WX add BYTE PTR [rax],al
   14001104c:	clc    
   14001104d:	rex.WX add BYTE PTR [rax],al
   140011050:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011051:	mov    al,0x0
   140011053:	add    BYTE PTR [rax],al
   140011055:	rex.WXB add BYTE PTR [r8],al
   140011058:	adc    BYTE PTR [rbx+0x0],cl
   14001105b:	add    BYTE PTR [rax+rsi*4+0x4b180000],bl
   140011062:	add    BYTE PTR [rax],al
   140011064:	lods   al,BYTE PTR ds:[rsi]
   140011065:	rex.WRB add BYTE PTR [r8],r8b
   140011068:	je     0x14001101a
   14001106a:	add    BYTE PTR [rax],al
   14001106c:	(bad)  
   14001106d:	rex.WRB add BYTE PTR [r8],r8b
   140011070:	je     0x1400110c0
   140011072:	add    BYTE PTR [rax],al
   140011074:	ins    BYTE PTR es:[rdi],dx
   140011075:	mov    al,0x0
   140011077:	add    BYTE PTR [rsi+rcx*2+0x0],bh
   14001107b:	add    BYTE PTR [rbx+0x55],ah
   14001107e:	add    BYTE PTR [rax],al
   140011080:	push   rsp
   140011081:	mov    al,0x0
   140011083:	add    BYTE PTR [rbp+rdx*2+0x0],ch
   140011087:	add    BYTE PTR [rsi-0x63ffffab],bl
   14001108d:	mov    al,0x0
   14001108f:	add    BYTE PTR [rbp+rdx*2+0x58620000],ah
   140011096:	add    BYTE PTR [rax],al
   140011098:	xor    BYTE PTR [rax+0x58680000],dh
   14001109e:	add    BYTE PTR [rax],al
   1400110a0:	ds pop rcx
   1400110a2:	add    BYTE PTR [rax],al
   1400110a4:	sbb    al,0xb0
   1400110a6:	add    BYTE PTR [rax],al
   1400110a8:	rex.R pop rcx
   1400110aa:	add    BYTE PTR [rax],al
   1400110ac:	cwde   
   1400110ad:	pop    rbx
   1400110ae:	add    BYTE PTR [rax],al
   1400110b0:	cld    
   1400110b1:	scas   eax,DWORD PTR es:[rdi]
   1400110b2:	add    BYTE PTR [rax],al
   1400110b4:	movabs al,ds:0xd800005d7d00005b
   1400110bd:	scas   eax,DWORD PTR es:[rdi]
   1400110be:	add    BYTE PTR [rax],al
   1400110c0:	test   BYTE PTR [rbp+0x0],bl
   1400110c3:	add    BYTE PTR [rax],bh
   1400110c5:	pop    rdi
   1400110c6:	add    BYTE PTR [rax],al
   1400110c8:	jl     0x140011079
   1400110ca:	add    BYTE PTR [rax],al
   1400110cc:	rex pop rdi
   1400110ce:	add    BYTE PTR [rax],al
   1400110d0:	cmp    al,0x64
   1400110d2:	add    BYTE PTR [rax],al
   1400110d4:	int3   
   1400110d5:	scas   al,BYTE PTR es:[rdi]
   1400110d6:	add    BYTE PTR [rax],al
   1400110d8:	rex.R
   1400110d9:	add    BYTE PTR fs:[rax],al
   1400110dc:	out    0x64,al
   1400110de:	add    BYTE PTR [rax],al
   1400110e0:	mov    esp,0xec0000ae
   1400110e5:	add    BYTE PTR fs:[rax],al
   1400110e8:	xchg   edi,eax
   1400110e9:	add    BYTE PTR gs:[rax],al
   1400110ec:	test   al,0xae
   1400110ee:	add    BYTE PTR [rax],al
   1400110f0:	movabs al,ds:0x98000066b3000065
   1400110f9:	scas   al,BYTE PTR es:[rdi]
   1400110fa:	add    BYTE PTR [rax],al
   1400110fc:	mov    esp,0xd8000066
   140011101:	data16 add BYTE PTR [rax],al
   140011104:	pushf  
   140011105:	mov    al,0x0
   140011107:	add    al,ah
   140011109:	data16 add BYTE PTR [rax],al
   14001110c:	mov    esp,DWORD PTR [rdi+0x0]
   14001110f:	add    BYTE PTR [rsi+rbp*4+0x67940000],al
   140011116:	add    BYTE PTR [rax],al
   140011118:	repnz add BYTE PTR [eax],al
   14001111c:	in     al,0xaa
   14001111e:	add    BYTE PTR [rax],al
   140011120:	clc    
   140011121:	add    BYTE PTR [eax],al
   140011124:	mov    esi,0x70000068
   140011129:	scas   al,BYTE PTR es:[rdi]
   14001112a:	add    BYTE PTR [rax],al
   14001112c:	(bad)  
   14001112d:	push   0x698a0000
   140011132:	add    BYTE PTR [rax],al
   140011134:	jo     0x1400110e4
   140011136:	add    BYTE PTR [rax],al
   140011138:	nop
   140011139:	imul   eax,DWORD PTR [rax],0x6afc00
   14001113f:	add    BYTE PTR [rsi+rbp*4+0x0],dl
   140011143:	add    BYTE PTR [rbx+rbp*2],al
   140011146:	add    BYTE PTR [rax],al
   140011148:	imul   eax,DWORD PTR ss:[rax],0x0
   14001114c:	rex.WR scas al,BYTE PTR es:[rdi]
   14001114e:	add    BYTE PTR [rax],al
   140011150:	cmp    al,0x6b
   140011152:	add    BYTE PTR [rax],al
   140011154:	sbb    DWORD PTR [rax+rax*1+0x0],ebp
   140011158:	xor    al,0xae
   14001115a:	add    BYTE PTR [rax],al
   14001115c:	and    BYTE PTR [rax+rax*1+0x0],ch
   140011160:	cli    
   140011161:	ins    BYTE PTR es:[rdi],dx
   140011162:	add    BYTE PTR [rax],al
   140011164:	xor    al,0xae
   140011166:	add    BYTE PTR [rax],al
   140011168:	add    BYTE PTR [rbp+0x0],ch
   14001116b:	add    BYTE PTR [rbp+0x6d],dh
   14001116e:	add    BYTE PTR [rax],al
   140011170:	mov    esp,0x7c0000ae
   140011175:	ins    DWORD PTR es:[rdi],dx
   140011176:	add    BYTE PTR [rax],al
   140011178:	cmp    BYTE PTR [rsi+0x0],ch
   14001117b:	add    ah,dh
   14001117d:	mov    cl,0x0
   14001117f:	add    BYTE PTR [rax+0x6e],al
   140011182:	add    BYTE PTR [rax],al
   140011184:	fwait
   140011185:	outs   dx,DWORD PTR ds:[rsi]
   140011186:	add    BYTE PTR [rax],al
   140011188:	sbb    BYTE PTR [rbp+0x6fa40000],ch
   14001118e:	add    BYTE PTR [rax],al
   140011190:	rex.WRX jo 0x140011193
   140011193:	add    BYTE PTR [rax-0x4e],al
   140011196:	add    BYTE PTR [rax],al
   140011198:	push   rsp
   140011199:	jo     0x14001119b
   14001119b:	add    BYTE PTR [rbp+0x28000072],ah
   1400111a1:	mov    dl,0x0
   1400111a3:	add    BYTE PTR [rdx+rsi*2+0x73860000],ch
   1400111aa:	add    BYTE PTR [rax],al
   1400111ac:	or     al,0xb2
   1400111ae:	add    BYTE PTR [rax],al
   1400111b0:	mov    WORD PTR [rbx+0x0],?
   1400111b3:	add    BYTE PTR [rcx],ch
   1400111b5:	je     0x1400111b7
   1400111b7:	add    ah,dh
   1400111b9:	mov    cl,0x0
   1400111bb:	add    BYTE PTR [rax],dh
   1400111bd:	je     0x1400111bf
   1400111bf:	add    BYTE PTR [rsi],dl
   1400111c1:	jne    0x1400111c3
   1400111c3:	add    al,ch
   1400111c5:	mov    cl,0x0
   1400111c7:	add    BYTE PTR [rsi*2+0x7a010000],bl
   1400111ce:	add    BYTE PTR [rax],al
   1400111d0:	shl    BYTE PTR [rcx+0x7a080000],0x0
   1400111d7:	add    BYTE PTR [rbx-0x5fffff7c],cl
   1400111dd:	mov    cl,0x0
   1400111df:	add    BYTE PTR [rsp+rax*4-0x76cc0000],dl
   1400111e6:	add    BYTE PTR [rax],al
   1400111e8:	jl     0x14001119b
   1400111ea:	add    BYTE PTR [rax],al
   1400111ec:	push   rsp
   1400111ed:	mov    DWORD PTR [rax],eax
   1400111ef:	add    bh,cl
   1400111f1:	mov    DWORD PTR [rax],eax
   1400111f3:	add    BYTE PTR [rax-0x27ffff4c],ah
   1400111f9:	mov    DWORD PTR [rax],eax
   1400111fb:	add    BYTE PTR [rcx],bh
   1400111fd:	mov    al,BYTE PTR [rax]
   1400111ff:	add    ah,ah
   140011201:	stos   BYTE PTR es:[rdi],al
   140011202:	add    BYTE PTR [rax],al
   140011204:	mov    al,BYTE PTR [rax]
   140011207:	add    BYTE PTR [rbx+0x7400008a],ah
   14001120d:	mov    ah,0x0
   14001120f:	add    BYTE PTR [rdx+rcx*4-0x75100000],ch
   140011216:	add    BYTE PTR [rax],al
   140011218:	rex.WR scas al,BYTE PTR es:[rdi]
   14001121a:	add    BYTE PTR [rax],al
   14001121c:	clc    
   14001121d:	mov    al,BYTE PTR [rax]
   14001121f:	add    BYTE PTR [rdx],ch
   140011221:	mov    eax,DWORD PTR [rax]
   140011223:	add    BYTE PTR [rsp+rsi*4+0x0],ah
   140011227:	add    BYTE PTR [rax],dh
   140011229:	mov    eax,DWORD PTR [rax]
   14001122b:	add    BYTE PTR [rbp+0x3800008b],bl
   140011231:	mov    ah,0x0
   140011233:	add    BYTE PTR [rbx+rcx*4-0x74350000],ah
   14001123a:	add    BYTE PTR [rax],al
   14001123c:	rex.WR scas al,BYTE PTR es:[rdi]
   14001123e:	add    BYTE PTR [rax],al
   140011240:	(bad)  
   140011241:	mov    eax,DWORD PTR [rax]
   140011243:	add    BYTE PTR [rax],dh
   140011245:	mov    WORD PTR [rax],es
   140011247:	add    BYTE PTR [rsp+rsi*4],al
   14001124a:	add    BYTE PTR [rax],al
   14001124c:	cmp    BYTE PTR [rax+rax*1+0x8d6900],cl
   140011253:	add    BYTE PTR [rsi+rbp*4],dh
   140011256:	add    BYTE PTR [rax],al
   140011258:	jo     0x1400111e7
   14001125a:	add    BYTE PTR [rax],al
   14001125c:	lahf   
   14001125d:	lea    eax,[rax]
   14001125f:	add    BYTE PTR [rsi+rbp*4+0x0],cl
   140011263:	add    BYTE PTR [rax-0x22ffff73],ch
   140011269:	lea    eax,[rax]
   14001126b:	add    BYTE PTR [rsi+rbp*4+0x0],cl
   14001126f:	add    ah,ah
   140011271:	lea    eax,[rax]
   140011273:	add    BYTE PTR [rip+0x4c00008e],dl        # 0x18c011307
   140011279:	scas   al,BYTE PTR es:[rdi]
   14001127a:	add    BYTE PTR [rax],al
   14001127c:	sbb    al,0x8e
   14001127e:	add    BYTE PTR [rax],al
   140011280:	(bad)  
   140011281:	mov    es,WORD PTR [rax]
   140011283:	add    BYTE PTR [rsi+rbp*4+0x0],cl
   140011287:	add    BYTE PTR [rax-0x72],cl
   14001128a:	add    BYTE PTR [rax],al
   14001128c:	(bad)  
   14001128d:	mov    es,WORD PTR [rax]
   14001128f:	add    al,bl
   140011291:	mov    bl,0x0
   140011293:	add    ah,bl
   140011295:	mov    es,WORD PTR [rax]
   140011297:	add    ah,ch
   140011299:	pop    QWORD PTR [rax]
   14001129b:	add    ah,dh
   14001129d:	mov    cl,0x0
   14001129f:	add    ah,dh
   1400112a1:	pop    QWORD PTR [rax]
   1400112a3:	add    BYTE PTR [rdx],ch
   1400112a5:	nop
   1400112a6:	add    BYTE PTR [rax],al
   1400112a8:	pop    rax
   1400112a9:	mov    bl,0x0
   1400112ab:	add    BYTE PTR [rax],dh
   1400112ad:	nop
   1400112ae:	add    BYTE PTR [rax],al
   1400112b0:	(bad)  
   1400112b1:	xchg   ecx,eax
   1400112b2:	add    BYTE PTR [rax],al
   1400112b4:	rex.R mov bl,0x0
   1400112b7:	add    BYTE PTR [rax],dh
   1400112b9:	xchg   ecx,eax
   1400112ba:	add    BYTE PTR [rax],al
   1400112bc:	fcom   DWORD PTR [rcx-0x4cbc0000]
   1400112c2:	add    BYTE PTR [rax],al
   1400112c4:	loopne 0x140011257
   1400112c6:	add    BYTE PTR [rax],al
   1400112c8:	or     BYTE PTR [rbx-0x4da80000],dl
   1400112ce:	add    BYTE PTR [rax],al
   1400112d0:	adc    BYTE PTR [rbx-0x6cc70000],dl
   1400112d6:	add    BYTE PTR [rax],al
   1400112d8:	rex.WR scas al,BYTE PTR es:[rdi]
   1400112da:	add    BYTE PTR [rax],al
   1400112dc:	movabs al,ds:0xf000009401000093
   1400112e5:	stos   BYTE PTR es:[rdi],al
   1400112e6:	add    BYTE PTR [rax],al
   1400112e8:	or     BYTE PTR [rax+rax*1+0x947500],dl
   1400112ef:	add    BYTE PTR [rax+0x7c0000aa],ch
   1400112f5:	xchg   esp,eax
   1400112f6:	add    BYTE PTR [rax],al
   1400112f8:	stos   DWORD PTR es:[rdi],eax
   1400112f9:	xchg   esp,eax
   1400112fa:	add    BYTE PTR [rax],al
   1400112fc:	in     al,0xaa
   1400112fe:	add    BYTE PTR [rax],al
   140011300:	sbb    al,0x95
   140011302:	add    BYTE PTR [rax],al
   140011304:	xchg   ebp,eax
   140011305:	xchg   ebp,eax
   140011306:	add    BYTE PTR [rax],al
   140011308:	pop    rax
   140011309:	stos   DWORD PTR es:[rdi],eax
   14001130a:	add    BYTE PTR [rax],al
   14001130c:	pushf  
   14001130d:	xchg   ebp,eax
   14001130e:	add    BYTE PTR [rax],al
   140011310:	(bad)  
   140011311:	xchg   esi,eax
   140011312:	add    BYTE PTR [rax],al
   140011314:	pushf  
   140011315:	stos   DWORD PTR es:[rdi],eax
   140011316:	add    BYTE PTR [rax],al
   140011318:	cmp    BYTE PTR [rsi-0x69870000],dl
   14001131e:	add    BYTE PTR [rax],al
   140011320:	rex.WR scas al,BYTE PTR es:[rdi]
   140011322:	add    BYTE PTR [rax],al
   140011324:	adc    BYTE PTR [rsi-0x694e0000],0x0
   14001132b:	add    BYTE PTR [rsp+rsi*4+0x0],ah
   14001132f:	add    BYTE PTR [rax+0x24000096],bh
   140011335:	xchg   edi,eax
   140011336:	add    BYTE PTR [rax],al
   140011338:	loopne 0x1400112e5
   14001133a:	add    BYTE PTR [rax],al
   14001133c:	sub    al,0x97
   14001133e:	add    BYTE PTR [rax],al
   140011340:	mov    dl,BYTE PTR [rdi-0x551c0000]
   140011346:	add    BYTE PTR [rax],al
   140011348:	nop
   140011349:	xchg   edi,eax
   14001134a:	add    BYTE PTR [rax],al
   14001134c:	pop    rdi
   14001134d:	cwde   
   14001134e:	add    BYTE PTR [rax],al
   140011350:	pushf  
   140011351:	mov    al,0x0
   140011353:	add    BYTE PTR [rax-0x68],ch
   140011356:	add    BYTE PTR [rax],al
   140011358:	mov    cl,0x98
   14001135a:	add    BYTE PTR [rax],al
   14001135c:	adc    al,0xac
   14001135e:	add    BYTE PTR [rax],al
   140011360:	mov    eax,0x66000098
   140011365:	(bad)  
   140011366:	add    BYTE PTR [rax],al
   140011368:	sbb    al,0xac
   14001136a:	add    BYTE PTR [rax],al
   14001136c:	ins    BYTE PTR es:[rdi],dx
   14001136d:	(bad)  
   14001136e:	add    BYTE PTR [rax],al
   140011370:	jle    0x14001130c
   140011372:	add    BYTE PTR [rax],al
   140011374:	pushf  
   140011375:	mov    al,0x0
   140011377:	add    BYTE PTR [rax-0x30ffff66],bh
   14001137d:	(bad)  
   14001137e:	add    BYTE PTR [rax],al
   140011380:	pushf  
   140011381:	mov    al,0x0
   140011383:	add    al,bl
   140011385:	(bad)  
   140011386:	add    BYTE PTR [rax],al
   140011388:	pop    rsi
   140011389:	fwait
   14001138a:	add    BYTE PTR [rax],al
   14001138c:	rex.W lods al,BYTE PTR ds:[rsi]
   14001138e:	add    BYTE PTR [rax],al
   140011390:	mov    BYTE PTR [rbx-0x64480000],bl
   140011396:	add    BYTE PTR [rax],al
   140011398:	in     al,0xaa
   14001139a:	add    BYTE PTR [rax],al
   14001139c:	in     al,0x9b
   14001139e:	add    BYTE PTR [rax],al
   1400113a0:	rex.RXB pushf 
   1400113a2:	add    BYTE PTR [rax],al
   1400113a4:	rex.WR scas al,BYTE PTR es:[rdi]
   1400113a6:	add    BYTE PTR [rax],al
   1400113a8:	push   rax
   1400113a9:	pushf  
   1400113aa:	add    BYTE PTR [rax],al
   1400113ac:	ins    DWORD PTR es:[rdi],dx
   1400113ad:	pushf  
   1400113ae:	add    BYTE PTR [rax],al
   1400113b0:	pushf  
   1400113b1:	mov    al,0x0
   1400113b3:	add    BYTE PTR [rsp+rbx*4+0x0],dh
   1400113b7:	add    BYTE PTR [rbx],al
   1400113b9:	popf   
   1400113ba:	add    BYTE PTR [rax],al
   1400113bc:	hlt    
   1400113bd:	mov    cl,0x0
   1400113bf:	add    BYTE PTR [rbx*4-0x62b20000],cl
   1400113c6:	add    BYTE PTR [rax],al
   1400113c8:	pushf  
   1400113c9:	mov    al,0x0
   1400113cb:	add    BYTE PTR [rbp+rbx*4+0x0],dl
   1400113cf:	add    BYTE PTR [rbp+rbx*4+0x0],ch
   1400113d3:	add    BYTE PTR [rax+rsi*4-0x62800000],bl
   1400113da:	add    BYTE PTR [rax],al
   1400113dc:	(bad)  
   1400113dd:	popf   
   1400113de:	add    BYTE PTR [rax],al
   1400113e0:	push   0xffffffffdc0000ac
   1400113e5:	popf   
   1400113e6:	add    BYTE PTR [rax],al
   1400113e8:	and    DWORD PTR [rsi-0x51b40000],ebx
   1400113ee:	add    BYTE PTR [rax],al
   1400113f0:	rcr    BYTE PTR [rsi-0x60e30000],1
   1400113f6:	add    BYTE PTR [rax],al
   1400113f8:	mov    BYTE PTR [rax+rax*1+0x9f2400],ch
   1400113ff:	add    al,bh
   140011401:	lahf   
   140011402:	add    BYTE PTR [rax],al
   140011404:	mov    ah,0xac
   140011406:	add    BYTE PTR [rax],al
   140011408:	and    al,0xa0
   14001140a:	add    BYTE PTR [rax],al
   14001140c:	pop    rbp
   14001140d:	movabs eax,ds:0xa1640000acc00000
   140011416:	add    BYTE PTR [rax],al
   140011418:	cwde   
   140011419:	movabs eax,ds:0xa1c40000ae4c0000
   140011422:	add    BYTE PTR [rax],al
   140011424:	and    DWORD PTR [rdx-0x53380000],esp
   14001142a:	add    BYTE PTR [rax],al
   14001142c:	sub    BYTE PTR [rdx-0x5d8e0000],ah
   140011432:	add    BYTE PTR [rax],al
   140011434:	lock lods al,BYTE PTR ds:[rsi]
   140011436:	add    BYTE PTR [rax],al
   140011438:	movabs al,ds:0xd80000a2ed0000a2
   140011441:	mov    ah,0x0
   140011443:	add    BYTE PTR [rax],cl
   140011445:	movabs ds:0xab480000a3230000,eax
   14001144e:	add    BYTE PTR [rax],al
   140011450:	ja     0x1400113f5
   140011452:	add    BYTE PTR [rax],al
   140011454:	xchg   ebp,eax
   140011455:	movabs ds:0xa39b0000acac0000,eax
   14001145e:	add    BYTE PTR [rax],al
   140011460:	mov    dh,0xa3
   140011462:	add    BYTE PTR [rax],al
   140011464:	lods   al,BYTE PTR ds:[rsi]
   140011465:	lods   al,BYTE PTR ds:[rsi]
   140011466:	add    BYTE PTR [rax],al
   140011468:	shl    BYTE PTR [rbx-0x5c1e0000],0x0
   14001146f:	add    BYTE PTR [rsp+rbp*4-0x5c180000],ch
   140011476:	add    BYTE PTR [rax],al
   140011478:	sub    ah,BYTE PTR [rax+rax*1+0xacac00]
   14001147f:	add    BYTE PTR [rax],dh
   140011481:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011482:	add    BYTE PTR [rax],al
   140011484:	pop    rsp
   140011485:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011486:	add    BYTE PTR [rax],al
   140011488:	lods   al,BYTE PTR ds:[rsi]
   140011489:	lods   al,BYTE PTR ds:[rsi]
   14001148a:	add    BYTE PTR [rax],al
   14001148c:	jo     0x140011432
   14001148e:	add    BYTE PTR [rax],al
   140011490:	icebp  
   140011491:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011492:	add    BYTE PTR [rax],al
   140011494:	adc    BYTE PTR [rsi-0x5b010000],ch
   14001149a:	add    BYTE PTR [rax],al
   14001149c:	rex.X movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001149e:	add    BYTE PTR [rax],al
   1400114a0:	and    BYTE PTR [rsi-0x5a500000],ch
   1400114a6:	add    BYTE PTR [rax],al
   1400114a8:	shl    DWORD PTR [rbp-0x4c380000],1
   1400114ae:	add    BYTE PTR [rax],al
   1400114b0:	xlat   BYTE PTR ds:[rbx]
   1400114b1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400114b2:	add    BYTE PTR [rax],al
   1400114b4:	cmp    al,0xa6
   1400114b6:	add    BYTE PTR [rax],al
   1400114b8:	and    BYTE PTR [rbx-0x59c40000],dh
   1400114be:	add    BYTE PTR [rax],al
   1400114c0:	jge    0x140011468
   1400114c2:	add    BYTE PTR [rax],al
   1400114c4:	xor    BYTE PTR [rbx-0x59240000],dh
   1400114ca:	add    BYTE PTR [rax],al
   1400114cc:	add    DWORD PTR [rdi-0x4f640000],esp
   1400114d2:	add    BYTE PTR [rax],al
   1400114d4:	or     BYTE PTR [rdi-0x56430000],ah
   1400114da:	add    BYTE PTR [rax],al
   1400114dc:	adc    al,0xac
   1400114de:	add    BYTE PTR [rax],al
   1400114e0:	add    al,0xaa
   1400114e2:	add    BYTE PTR [rax],al
   1400114e4:	rex.R stos BYTE PTR es:[rdi],al
   1400114e6:	add    BYTE PTR [rax],al
   1400114e8:	pushf  
   1400114e9:	mov    al,0x0
	...

Disassembly of section .idata:

0000000140012000 <.idata>:
   140012000:	movabs al,ds:0x120
   140012009:	add    BYTE PTR [rax],al
   14001200b:	add    BYTE PTR [rsi+0x28],cl
   14001200e:	add    DWORD PTR [rax],eax
   140012010:	sbb    BYTE PTR [rcx+rax*1],ah
   140012013:	add    BYTE PTR [rax],cl
   140012015:	and    DWORD PTR [rcx],eax
	...
   14001201f:	add    BYTE PTR [rdx],ah
   140012021:	sub    DWORD PTR [rcx],eax
   140012023:	add    BYTE PTR [rax-0x17fffedc],al
   140012029:	and    DWORD PTR [rcx],eax
	...
   140012033:	add    BYTE PTR [rax],dh
   140012035:	sub    DWORD PTR [rcx],eax
   140012037:	add    BYTE PTR [rax+0x25],ah
   14001203a:	add    DWORD PTR [rax],eax
   14001203c:	nop
   14001203d:	and    al,BYTE PTR [rcx]
	...
   140012047:	add    BYTE PTR [rax],ch
   140012049:	sub    eax,DWORD PTR [rcx]
   14001204b:	add    BYTE PTR [rax],cl
   14001204d:	add    DWORD PTR es:[rax],eax
   140012050:	fsub   DWORD PTR [rbx]
   140012052:	add    DWORD PTR [rax],eax
	...
   14001205c:	int3   
   14001205d:	sub    eax,DWORD PTR [rcx]
   14001205f:	add    BYTE PTR [rax+0x27],dl
   140012062:	add    DWORD PTR [rax],eax
   140012064:	clc    
   140012065:	and    eax,DWORD PTR [rcx]
	...
   14001206f:	add    BYTE PTR [rsi],cl
   140012071:	sub    al,0x1
   140012073:	add    BYTE PTR [rax+0x27],dh
   140012076:	add    DWORD PTR [rax],eax
   140012078:	xor    BYTE PTR [rdx],ah
   14001207a:	add    DWORD PTR [rax],eax
	...
   140012084:	sbb    BYTE PTR [rcx+rax*1],ch
   140012087:	add    BYTE PTR [rax+0x125],ch
	...
   14001209d:	add    BYTE PTR [rax],al
   14001209f:	add    BYTE PTR [rax+0x127],dl
   1400120a5:	add    BYTE PTR [rax],al
   1400120a7:	add    BYTE PTR [rax+0x127],ah
   1400120ad:	add    BYTE PTR [rax],al
   1400120af:	add    BYTE PTR [rsi+0x127],ch
   1400120b5:	add    BYTE PTR [rax],al
   1400120b7:	add    al,al
   1400120b9:	(bad)  
   1400120ba:	add    DWORD PTR [rax],eax
   1400120bc:	add    BYTE PTR [rax],al
   1400120be:	add    BYTE PTR [rax],al
   1400120c0:	(bad)  
   1400120c1:	(bad)  
   1400120c2:	add    DWORD PTR [rax],eax
   1400120c4:	add    BYTE PTR [rax],al
   1400120c6:	add    BYTE PTR [rax],al
   1400120c8:	loop   0x1400120f1
   1400120ca:	add    DWORD PTR [rax],eax
   1400120cc:	add    BYTE PTR [rax],al
   1400120ce:	add    BYTE PTR [rax],al
   1400120d0:	repnz (bad) 
   1400120d2:	add    DWORD PTR [rax],eax
   1400120d4:	add    BYTE PTR [rax],al
   1400120d6:	add    BYTE PTR [rax],al
   1400120d8:	add    BYTE PTR [rax],ch
   1400120da:	add    DWORD PTR [rax],eax
   1400120dc:	add    BYTE PTR [rax],al
   1400120de:	add    BYTE PTR [rax],al
   1400120e0:	(bad)  
   1400120e1:	sub    BYTE PTR [rcx],al
   1400120e3:	add    BYTE PTR [rax],al
   1400120e5:	add    BYTE PTR [rax],al
   1400120e7:	add    BYTE PTR [rax],ah
   1400120e9:	sub    BYTE PTR [rcx],al
   1400120eb:	add    BYTE PTR [rax],al
   1400120ed:	add    BYTE PTR [rax],al
   1400120ef:	add    BYTE PTR [rsi],ch
   1400120f1:	sub    BYTE PTR [rcx],al
   1400120f3:	add    BYTE PTR [rax],al
   1400120f5:	add    BYTE PTR [rax],al
   1400120f7:	add    BYTE PTR [rax+rbp*1],bh
   1400120fa:	add    DWORD PTR [rax],eax
	...
   140012108:	jp     0x140012136
   14001210a:	add    DWORD PTR [rax],eax
   14001210c:	add    BYTE PTR [rax],al
   14001210e:	add    BYTE PTR [rax],al
   140012110:	xchg   esp,eax
   140012111:	sub    al,0x1
   140012113:	add    BYTE PTR [rax],al
   140012115:	add    BYTE PTR [rax],al
   140012117:	add    BYTE PTR [rdx+0x12c],ch
   14001211d:	add    BYTE PTR [rax],al
   14001211f:	add    al,al
   140012121:	sub    al,0x1
   140012123:	add    BYTE PTR [rax],al
   140012125:	add    BYTE PTR [rax],al
   140012127:	add    dl,bl
   140012129:	sub    al,0x1
   14001212b:	add    BYTE PTR [rax],al
   14001212d:	add    BYTE PTR [rax],al
   14001212f:	add    BYTE PTR [rsi+0x2c],ah
   140012132:	add    DWORD PTR [rax],eax
   140012134:	add    BYTE PTR [rax],al
   140012136:	add    BYTE PTR [rax],al
   140012138:	(bad)  
   140012139:	sub    eax,0x1
   14001213e:	add    BYTE PTR [rax],al
   140012140:	sbb    ch,BYTE PTR [rip+0x1]        # 0x140012147
   140012146:	add    BYTE PTR [rax],al
   140012148:	es sub al,0x1
   14001214b:	add    BYTE PTR [rax],al
   14001214d:	add    BYTE PTR [rax],al
   14001214f:	add    BYTE PTR [rsp+rbp*1],dh
   140012152:	add    DWORD PTR [rax],eax
   140012154:	add    BYTE PTR [rax],al
   140012156:	add    BYTE PTR [rax],al
   140012158:	sub    al,0x1
   14001215b:	add    BYTE PTR [rax],al
   14001215d:	add    BYTE PTR [rax],al
   14001215f:	add    dl,ch
   140012161:	sub    al,0x1
   140012163:	add    BYTE PTR [rax],al
   140012165:	add    BYTE PTR [rax],al
   140012167:	add    BYTE PTR [rax],cl
   140012169:	sub    DWORD PTR [rcx],eax
   14001216b:	add    BYTE PTR [rax],al
   14001216d:	add    BYTE PTR [rax],al
   14001216f:	add    al,dh
   140012171:	sub    BYTE PTR [rcx],al
   140012173:	add    BYTE PTR [rax],al
   140012175:	add    BYTE PTR [rax],al
   140012177:	add    dl,dl
   140012179:	sub    BYTE PTR [rcx],al
   14001217b:	add    BYTE PTR [rax],al
   14001217d:	add    BYTE PTR [rax],al
   14001217f:	add    dl,al
   140012181:	sub    BYTE PTR [rcx],al
   140012183:	add    BYTE PTR [rax],al
   140012185:	add    BYTE PTR [rax],al
   140012187:	add    BYTE PTR [rdx+0x128],dh
   14001218d:	add    BYTE PTR [rax],al
   14001218f:	add    BYTE PTR [rdx+0x128],bl
   140012195:	add    BYTE PTR [rax],al
   140012197:	add    BYTE PTR [rax+0x128],cl
   14001219d:	add    BYTE PTR [rax],al
   14001219f:	add    BYTE PTR [rsi+0x28],ch
   1400121a2:	add    DWORD PTR [rax],eax
   1400121a4:	add    BYTE PTR [rax],al
   1400121a6:	add    BYTE PTR [rax],al
   1400121a8:	pop    rsp
   1400121a9:	sub    BYTE PTR [rcx],al
   1400121ab:	add    BYTE PTR [rax],al
   1400121ad:	add    BYTE PTR [rax],al
   1400121af:	add    BYTE PTR [rax+0x2c],cl
   1400121b2:	add    DWORD PTR [rax],eax
   1400121b4:	add    BYTE PTR [rax],al
   1400121b6:	add    BYTE PTR [rax],al
   1400121b8:	mov    gs,WORD PTR [rip+0x1]        # 0x1400121bf
   1400121be:	add    BYTE PTR [rax],al
   1400121c0:	jp     0x1400121ef
   1400121c2:	add    DWORD PTR [rax],eax
   1400121c4:	add    BYTE PTR [rax],al
   1400121c6:	add    BYTE PTR [rax],al
   1400121c8:	(bad)  
   1400121c9:	sub    eax,0x1
   1400121ce:	add    BYTE PTR [rax],al
   1400121d0:	sub    rax,0x1
   1400121d6:	add    BYTE PTR [rax],al
   1400121d8:	cs sub eax,0x1
	...
   1400121e6:	add    BYTE PTR [rax],al
   1400121e8:	out    0x1a,eax
   1400121ea:	add    BYTE PTR [rax],al
   1400121ec:	add    BYTE PTR [rax],al
   1400121ee:	add    BYTE PTR [rax+0x1ae6],al
   1400121f4:	add    BYTE PTR [rax],al
   1400121f6:	add    BYTE PTR [rax+0x43a],al
   1400121fc:	add    BYTE PTR [rax],al
   1400121fe:	add    BYTE PTR [rax+0x120],al
   140012204:	add    BYTE PTR [rax],al
   140012206:	add    BYTE PTR [rax+0x32c],al
   14001220c:	add    BYTE PTR [rax],al
   14001220e:	add    BYTE PTR [rax+0x608],al
   140012214:	add    BYTE PTR [rax],al
   140012216:	add    BYTE PTR [rax+0x11f],al
   14001221c:	add    BYTE PTR [rax],al
   14001221e:	add    BYTE PTR [rax+0x632],al
   140012224:	add    BYTE PTR [rax],al
   140012226:	add    BYTE PTR [rax+0x0],al
   14001222c:	add    BYTE PTR [rax],al
   14001222e:	add    BYTE PTR [rax],al
   140012230:	adc    eax,DWORD PTR [rax]
   140012232:	add    BYTE PTR [rax],al
   140012234:	add    BYTE PTR [rax],al
   140012236:	add    BYTE PTR [rax+0x6],al
   14001223c:	add    BYTE PTR [rax],al
   14001223e:	add    BYTE PTR [rax+0x18],al
   140012244:	add    BYTE PTR [rax],al
   140012246:	add    BYTE PTR [rax+0x19],al
   14001224c:	add    BYTE PTR [rax],al
   14001224e:	add    BYTE PTR [rax+0xc],al
   140012254:	add    BYTE PTR [rax],al
   140012256:	add    BYTE PTR [rax+0x8],al
   14001225c:	add    BYTE PTR [rax],al
   14001225e:	add    BYTE PTR [rax+0x10],al
   140012264:	add    BYTE PTR [rax],al
   140012266:	add    BYTE PTR [rax+0x17],al
   14001226c:	add    BYTE PTR [rax],al
   14001226e:	add    BYTE PTR [rax+0x9],al
   140012274:	add    BYTE PTR [rax],al
   140012276:	add    BYTE PTR [rax+0x14],al
   14001227c:	add    BYTE PTR [rax],al
   14001227e:	add    BYTE PTR [rax+0x2],al
   140012284:	add    BYTE PTR [rax],al
   140012286:	add    BYTE PTR [rax+0x0],al
   14001228c:	add    BYTE PTR [rax],al
   14001228e:	add    BYTE PTR [rax],al
   140012290:	push   rdx
   140012291:	sub    DWORD PTR [rcx],eax
   140012293:	add    BYTE PTR [rax],al
   140012295:	add    BYTE PTR [rax],al
   140012297:	add    BYTE PTR [rsi+0x29],al
   14001229a:	add    DWORD PTR [rax],eax
   14001229c:	add    BYTE PTR [rax],al
   14001229e:	add    BYTE PTR [rax],al
   1400122a0:	cmp    al,0x29
   1400122a2:	add    DWORD PTR [rax],eax
   1400122a4:	add    BYTE PTR [rax],al
   1400122a6:	add    BYTE PTR [rax],al
   1400122a8:	push   0x29
   1400122aa:	add    DWORD PTR [rax],eax
   1400122ac:	add    BYTE PTR [rax],al
   1400122ae:	add    BYTE PTR [rax],al
   1400122b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400122b1:	sub    eax,0x1
   1400122b6:	add    BYTE PTR [rax],al
   1400122b8:	jb     0x1400122e3
   1400122ba:	add    DWORD PTR [rax],eax
   1400122bc:	add    BYTE PTR [rax],al
   1400122be:	add    BYTE PTR [rax],al
   1400122c0:	pop    rsi
   1400122c1:	sub    DWORD PTR [rcx],eax
   1400122c3:	add    BYTE PTR [rax],al
   1400122c5:	add    BYTE PTR [rax],al
   1400122c7:	add    BYTE PTR [rdx+0x2a],dh
   1400122ca:	add    DWORD PTR [rax],eax
   1400122cc:	add    BYTE PTR [rax],al
   1400122ce:	add    BYTE PTR [rax],al
   1400122d0:	jl     0x1400122fb
   1400122d2:	add    DWORD PTR [rax],eax
   1400122d4:	add    BYTE PTR [rax],al
   1400122d6:	add    BYTE PTR [rax],al
   1400122d8:	xchg   BYTE PTR [rcx],ch
   1400122da:	add    DWORD PTR [rax],eax
   1400122dc:	add    BYTE PTR [rax],al
   1400122de:	add    BYTE PTR [rax],al
   1400122e0:	nop
   1400122e1:	sub    DWORD PTR [rcx],eax
   1400122e3:	add    BYTE PTR [rax],al
   1400122e5:	add    BYTE PTR [rax],al
   1400122e7:	add    BYTE PTR [rsi+0x2b],dh
   1400122ea:	add    DWORD PTR [rax],eax
   1400122ec:	add    BYTE PTR [rax],al
   1400122ee:	add    BYTE PTR [rax],al
   1400122f0:	pop    rsi
   1400122f1:	sub    eax,DWORD PTR [rcx]
   1400122f3:	add    BYTE PTR [rax],al
   1400122f5:	add    BYTE PTR [rax],al
   1400122f7:	add    BYTE PTR [rbx+rbp*1+0x1],dl
   1400122fb:	add    BYTE PTR [rax],al
   1400122fd:	add    BYTE PTR [rax],al
   1400122ff:	add    BYTE PTR [rsi+0x2b],al
   140012302:	add    DWORD PTR [rax],eax
   140012304:	add    BYTE PTR [rax],al
   140012306:	add    BYTE PTR [rax],al
   140012308:	cmp    al,0x2b
   14001230a:	add    DWORD PTR [rax],eax
   14001230c:	add    BYTE PTR [rax],al
   14001230e:	add    BYTE PTR [rax],al
   140012310:	xor    al,0x2b
   140012312:	add    DWORD PTR [rax],eax
   140012314:	add    BYTE PTR [rax],al
   140012316:	add    BYTE PTR [rax],al
   140012318:	sbb    al,0x2b
   14001231a:	add    DWORD PTR [rax],eax
   14001231c:	add    BYTE PTR [rax],al
   14001231e:	add    BYTE PTR [rax],al
   140012320:	adc    ch,BYTE PTR [rbx]
   140012322:	add    DWORD PTR [rax],eax
   140012324:	add    BYTE PTR [rax],al
   140012326:	add    BYTE PTR [rax],al
   140012328:	cli    
   140012329:	sub    al,BYTE PTR [rcx]
   14001232b:	add    BYTE PTR [rax],al
   14001232d:	add    BYTE PTR [rax],al
   14001232f:	add    dh,ch
   140012331:	sub    al,BYTE PTR [rcx]
   140012333:	add    BYTE PTR [rax],al
   140012335:	add    BYTE PTR [rax],al
   140012337:	add    dl,bl
   140012339:	sub    al,BYTE PTR [rcx]
   14001233b:	add    BYTE PTR [rax],al
   14001233d:	add    BYTE PTR [rax],al
   14001233f:	add    al,dl
   140012341:	sub    al,BYTE PTR [rcx]
   140012343:	add    BYTE PTR [rax],al
   140012345:	add    BYTE PTR [rax],al
   140012347:	add    al,cl
   140012349:	sub    al,BYTE PTR [rcx]
   14001234b:	add    BYTE PTR [rax],al
   14001234d:	add    BYTE PTR [rax],al
   14001234f:	add    BYTE PTR [rsi+0x12a],dh
   140012355:	add    BYTE PTR [rax],al
   140012357:	add    BYTE PTR [rdx+rbp*1+0x1],ah
   14001235e:	add    BYTE PTR [rax],al
   140012360:	xchg   esi,eax
   140012361:	sub    al,BYTE PTR [rcx]
   140012363:	add    BYTE PTR [rax],al
   140012365:	add    BYTE PTR [rax],al
   140012367:	add    BYTE PTR [rax+0x12a],cl
   14001236d:	add    BYTE PTR [rax],al
   14001236f:	add    BYTE PTR [rdx+0x12d],dh
   140012375:	add    BYTE PTR [rax],al
   140012377:	add    BYTE PTR [rdx+0x2a],bl
   14001237a:	add    DWORD PTR [rax],eax
   14001237c:	add    BYTE PTR [rax],al
   14001237e:	add    BYTE PTR [rax],al
   140012380:	sub    r8b,BYTE PTR [rcx]
   140012383:	add    BYTE PTR [rax],al
   140012385:	add    BYTE PTR [rax],al
   140012387:	add    BYTE PTR [rdx],bh
   140012389:	sub    al,BYTE PTR [rcx]
   14001238b:	add    BYTE PTR [rax],al
   14001238d:	add    BYTE PTR [rax],al
   14001238f:	add    BYTE PTR [rdx],dh
   140012391:	sub    al,BYTE PTR [rcx]
   140012393:	add    BYTE PTR [rax],al
   140012395:	add    BYTE PTR [rax],al
   140012397:	add    BYTE PTR [rax],ch
   140012399:	sub    al,BYTE PTR [rcx]
   14001239b:	add    BYTE PTR [rax],al
   14001239d:	add    BYTE PTR [rax],al
   14001239f:	add    BYTE PTR [rdx+rbp*1],bl
   1400123a2:	add    DWORD PTR [rax],eax
   1400123a4:	add    BYTE PTR [rax],al
   1400123a6:	add    BYTE PTR [rax],al
   1400123a8:	(bad)  
   1400123a9:	sub    DWORD PTR [rcx],eax
   1400123ab:	add    BYTE PTR [rax],al
   1400123ad:	add    BYTE PTR [rax],al
   1400123af:	add    dh,bl
   1400123b1:	sub    DWORD PTR [rcx],eax
   1400123b3:	add    BYTE PTR [rax],al
   1400123b5:	add    BYTE PTR [rax],al
   1400123b7:	add    dh,al
   1400123b9:	sub    DWORD PTR [rcx],eax
   1400123bb:	add    BYTE PTR [rax],al
   1400123bd:	add    BYTE PTR [rax],al
   1400123bf:	add    BYTE PTR [rax+0x129],ch
   1400123c5:	add    BYTE PTR [rax],al
   1400123c7:	add    BYTE PTR [rdx+0x129],bl
	...
   1400123d5:	add    BYTE PTR [rax],al
   1400123d7:	add    BYTE PTR [rax+0x12b],bh
   1400123dd:	add    BYTE PTR [rax],al
   1400123df:	add    BYTE PTR [rsi+0x12b],bl
   1400123e5:	add    BYTE PTR [rax],al
   1400123e7:	add    BYTE PTR [rdx+0x12b],cl
	...
   1400123f5:	add    BYTE PTR [rax],al
   1400123f7:	add    dh,dl
   1400123f9:	sub    eax,DWORD PTR [rcx]
   1400123fb:	add    BYTE PTR [rax],al
   1400123fd:	add    BYTE PTR [rax],al
   1400123ff:	add    dl,ch
   140012401:	sub    eax,DWORD PTR [rcx]
   140012403:	add    BYTE PTR [rax],al
   140012405:	add    BYTE PTR [rax],al
   140012407:	add    dh,bh
   140012409:	sub    eax,DWORD PTR [rcx]
	...
   140012417:	add    BYTE PTR [rax+0x127],dl
   14001241d:	add    BYTE PTR [rax],al
   14001241f:	add    BYTE PTR [rax+0x127],ah
   140012425:	add    BYTE PTR [rax],al
   140012427:	add    BYTE PTR [rsi+0x127],ch
   14001242d:	add    BYTE PTR [rax],al
   14001242f:	add    al,al
   140012431:	(bad)  
   140012432:	add    DWORD PTR [rax],eax
   140012434:	add    BYTE PTR [rax],al
   140012436:	add    BYTE PTR [rax],al
   140012438:	(bad)  
   140012439:	(bad)  
   14001243a:	add    DWORD PTR [rax],eax
   14001243c:	add    BYTE PTR [rax],al
   14001243e:	add    BYTE PTR [rax],al
   140012440:	loop   0x140012469
   140012442:	add    DWORD PTR [rax],eax
   140012444:	add    BYTE PTR [rax],al
   140012446:	add    BYTE PTR [rax],al
   140012448:	repnz (bad) 
   14001244a:	add    DWORD PTR [rax],eax
   14001244c:	add    BYTE PTR [rax],al
   14001244e:	add    BYTE PTR [rax],al
   140012450:	add    BYTE PTR [rax],ch
   140012452:	add    DWORD PTR [rax],eax
   140012454:	add    BYTE PTR [rax],al
   140012456:	add    BYTE PTR [rax],al
   140012458:	(bad)  
   140012459:	sub    BYTE PTR [rcx],al
   14001245b:	add    BYTE PTR [rax],al
   14001245d:	add    BYTE PTR [rax],al
   14001245f:	add    BYTE PTR [rax],ah
   140012461:	sub    BYTE PTR [rcx],al
   140012463:	add    BYTE PTR [rax],al
   140012465:	add    BYTE PTR [rax],al
   140012467:	add    BYTE PTR [rsi],ch
   140012469:	sub    BYTE PTR [rcx],al
   14001246b:	add    BYTE PTR [rax],al
   14001246d:	add    BYTE PTR [rax],al
   14001246f:	add    BYTE PTR [rax+rbp*1],bh
   140012472:	add    DWORD PTR [rax],eax
	...
   140012480:	jp     0x1400124ae
   140012482:	add    DWORD PTR [rax],eax
   140012484:	add    BYTE PTR [rax],al
   140012486:	add    BYTE PTR [rax],al
   140012488:	xchg   esp,eax
   140012489:	sub    al,0x1
   14001248b:	add    BYTE PTR [rax],al
   14001248d:	add    BYTE PTR [rax],al
   14001248f:	add    BYTE PTR [rdx+0x12c],ch
   140012495:	add    BYTE PTR [rax],al
   140012497:	add    al,al
   140012499:	sub    al,0x1
   14001249b:	add    BYTE PTR [rax],al
   14001249d:	add    BYTE PTR [rax],al
   14001249f:	add    dl,bl
   1400124a1:	sub    al,0x1
   1400124a3:	add    BYTE PTR [rax],al
   1400124a5:	add    BYTE PTR [rax],al
   1400124a7:	add    BYTE PTR [rsi+0x2c],ah
   1400124aa:	add    DWORD PTR [rax],eax
   1400124ac:	add    BYTE PTR [rax],al
   1400124ae:	add    BYTE PTR [rax],al
   1400124b0:	(bad)  
   1400124b1:	sub    eax,0x1
   1400124b6:	add    BYTE PTR [rax],al
   1400124b8:	sbb    ch,BYTE PTR [rip+0x1]        # 0x1400124bf
   1400124be:	add    BYTE PTR [rax],al
   1400124c0:	es sub al,0x1
   1400124c3:	add    BYTE PTR [rax],al
   1400124c5:	add    BYTE PTR [rax],al
   1400124c7:	add    BYTE PTR [rsp+rbp*1],dh
   1400124ca:	add    DWORD PTR [rax],eax
   1400124cc:	add    BYTE PTR [rax],al
   1400124ce:	add    BYTE PTR [rax],al
   1400124d0:	sub    al,0x1
   1400124d3:	add    BYTE PTR [rax],al
   1400124d5:	add    BYTE PTR [rax],al
   1400124d7:	add    dl,ch
   1400124d9:	sub    al,0x1
   1400124db:	add    BYTE PTR [rax],al
   1400124dd:	add    BYTE PTR [rax],al
   1400124df:	add    BYTE PTR [rax],cl
   1400124e1:	sub    DWORD PTR [rcx],eax
   1400124e3:	add    BYTE PTR [rax],al
   1400124e5:	add    BYTE PTR [rax],al
   1400124e7:	add    al,dh
   1400124e9:	sub    BYTE PTR [rcx],al
   1400124eb:	add    BYTE PTR [rax],al
   1400124ed:	add    BYTE PTR [rax],al
   1400124ef:	add    dl,dl
   1400124f1:	sub    BYTE PTR [rcx],al
   1400124f3:	add    BYTE PTR [rax],al
   1400124f5:	add    BYTE PTR [rax],al
   1400124f7:	add    dl,al
   1400124f9:	sub    BYTE PTR [rcx],al
   1400124fb:	add    BYTE PTR [rax],al
   1400124fd:	add    BYTE PTR [rax],al
   1400124ff:	add    BYTE PTR [rdx+0x128],dh
   140012505:	add    BYTE PTR [rax],al
   140012507:	add    BYTE PTR [rdx+0x128],bl
   14001250d:	add    BYTE PTR [rax],al
   14001250f:	add    BYTE PTR [rax+0x128],cl
   140012515:	add    BYTE PTR [rax],al
   140012517:	add    BYTE PTR [rsi+0x28],ch
   14001251a:	add    DWORD PTR [rax],eax
   14001251c:	add    BYTE PTR [rax],al
   14001251e:	add    BYTE PTR [rax],al
   140012520:	pop    rsp
   140012521:	sub    BYTE PTR [rcx],al
   140012523:	add    BYTE PTR [rax],al
   140012525:	add    BYTE PTR [rax],al
   140012527:	add    BYTE PTR [rax+0x2c],cl
   14001252a:	add    DWORD PTR [rax],eax
   14001252c:	add    BYTE PTR [rax],al
   14001252e:	add    BYTE PTR [rax],al
   140012530:	mov    gs,WORD PTR [rip+0x1]        # 0x140012537
   140012536:	add    BYTE PTR [rax],al
   140012538:	jp     0x140012567
   14001253a:	add    DWORD PTR [rax],eax
   14001253c:	add    BYTE PTR [rax],al
   14001253e:	add    BYTE PTR [rax],al
   140012540:	(bad)  
   140012541:	sub    eax,0x1
   140012546:	add    BYTE PTR [rax],al
   140012548:	sub    rax,0x1
   14001254e:	add    BYTE PTR [rax],al
   140012550:	cs sub eax,0x1
	...
   14001255e:	add    BYTE PTR [rax],al
   140012560:	out    0x1a,eax
   140012562:	add    BYTE PTR [rax],al
   140012564:	add    BYTE PTR [rax],al
   140012566:	add    BYTE PTR [rax+0x1ae6],al
   14001256c:	add    BYTE PTR [rax],al
   14001256e:	add    BYTE PTR [rax+0x43a],al
   140012574:	add    BYTE PTR [rax],al
   140012576:	add    BYTE PTR [rax+0x120],al
   14001257c:	add    BYTE PTR [rax],al
   14001257e:	add    BYTE PTR [rax+0x32c],al
   140012584:	add    BYTE PTR [rax],al
   140012586:	add    BYTE PTR [rax+0x608],al
   14001258c:	add    BYTE PTR [rax],al
   14001258e:	add    BYTE PTR [rax+0x11f],al
   140012594:	add    BYTE PTR [rax],al
   140012596:	add    BYTE PTR [rax+0x632],al
   14001259c:	add    BYTE PTR [rax],al
   14001259e:	add    BYTE PTR [rax+0x0],al
   1400125a4:	add    BYTE PTR [rax],al
   1400125a6:	add    BYTE PTR [rax],al
   1400125a8:	adc    eax,DWORD PTR [rax]
   1400125aa:	add    BYTE PTR [rax],al
   1400125ac:	add    BYTE PTR [rax],al
   1400125ae:	add    BYTE PTR [rax+0x6],al
   1400125b4:	add    BYTE PTR [rax],al
   1400125b6:	add    BYTE PTR [rax+0x18],al
   1400125bc:	add    BYTE PTR [rax],al
   1400125be:	add    BYTE PTR [rax+0x19],al
   1400125c4:	add    BYTE PTR [rax],al
   1400125c6:	add    BYTE PTR [rax+0xc],al
   1400125cc:	add    BYTE PTR [rax],al
   1400125ce:	add    BYTE PTR [rax+0x8],al
   1400125d4:	add    BYTE PTR [rax],al
   1400125d6:	add    BYTE PTR [rax+0x10],al
   1400125dc:	add    BYTE PTR [rax],al
   1400125de:	add    BYTE PTR [rax+0x17],al
   1400125e4:	add    BYTE PTR [rax],al
   1400125e6:	add    BYTE PTR [rax+0x9],al
   1400125ec:	add    BYTE PTR [rax],al
   1400125ee:	add    BYTE PTR [rax+0x14],al
   1400125f4:	add    BYTE PTR [rax],al
   1400125f6:	add    BYTE PTR [rax+0x2],al
   1400125fc:	add    BYTE PTR [rax],al
   1400125fe:	add    BYTE PTR [rax+0x0],al
   140012604:	add    BYTE PTR [rax],al
   140012606:	add    BYTE PTR [rax],al
   140012608:	push   rdx
   140012609:	sub    DWORD PTR [rcx],eax
   14001260b:	add    BYTE PTR [rax],al
   14001260d:	add    BYTE PTR [rax],al
   14001260f:	add    BYTE PTR [rsi+0x29],al
   140012612:	add    DWORD PTR [rax],eax
   140012614:	add    BYTE PTR [rax],al
   140012616:	add    BYTE PTR [rax],al
   140012618:	cmp    al,0x29
   14001261a:	add    DWORD PTR [rax],eax
   14001261c:	add    BYTE PTR [rax],al
   14001261e:	add    BYTE PTR [rax],al
   140012620:	push   0x29
   140012622:	add    DWORD PTR [rax],eax
   140012624:	add    BYTE PTR [rax],al
   140012626:	add    BYTE PTR [rax],al
   140012628:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012629:	sub    eax,0x1
   14001262e:	add    BYTE PTR [rax],al
   140012630:	jb     0x14001265b
   140012632:	add    DWORD PTR [rax],eax
   140012634:	add    BYTE PTR [rax],al
   140012636:	add    BYTE PTR [rax],al
   140012638:	pop    rsi
   140012639:	sub    DWORD PTR [rcx],eax
   14001263b:	add    BYTE PTR [rax],al
   14001263d:	add    BYTE PTR [rax],al
   14001263f:	add    BYTE PTR [rdx+0x2a],dh
   140012642:	add    DWORD PTR [rax],eax
   140012644:	add    BYTE PTR [rax],al
   140012646:	add    BYTE PTR [rax],al
   140012648:	jl     0x140012673
   14001264a:	add    DWORD PTR [rax],eax
   14001264c:	add    BYTE PTR [rax],al
   14001264e:	add    BYTE PTR [rax],al
   140012650:	xchg   BYTE PTR [rcx],ch
   140012652:	add    DWORD PTR [rax],eax
   140012654:	add    BYTE PTR [rax],al
   140012656:	add    BYTE PTR [rax],al
   140012658:	nop
   140012659:	sub    DWORD PTR [rcx],eax
   14001265b:	add    BYTE PTR [rax],al
   14001265d:	add    BYTE PTR [rax],al
   14001265f:	add    BYTE PTR [rsi+0x2b],dh
   140012662:	add    DWORD PTR [rax],eax
   140012664:	add    BYTE PTR [rax],al
   140012666:	add    BYTE PTR [rax],al
   140012668:	pop    rsi
   140012669:	sub    eax,DWORD PTR [rcx]
   14001266b:	add    BYTE PTR [rax],al
   14001266d:	add    BYTE PTR [rax],al
   14001266f:	add    BYTE PTR [rbx+rbp*1+0x1],dl
   140012673:	add    BYTE PTR [rax],al
   140012675:	add    BYTE PTR [rax],al
   140012677:	add    BYTE PTR [rsi+0x2b],al
   14001267a:	add    DWORD PTR [rax],eax
   14001267c:	add    BYTE PTR [rax],al
   14001267e:	add    BYTE PTR [rax],al
   140012680:	cmp    al,0x2b
   140012682:	add    DWORD PTR [rax],eax
   140012684:	add    BYTE PTR [rax],al
   140012686:	add    BYTE PTR [rax],al
   140012688:	xor    al,0x2b
   14001268a:	add    DWORD PTR [rax],eax
   14001268c:	add    BYTE PTR [rax],al
   14001268e:	add    BYTE PTR [rax],al
   140012690:	sbb    al,0x2b
   140012692:	add    DWORD PTR [rax],eax
   140012694:	add    BYTE PTR [rax],al
   140012696:	add    BYTE PTR [rax],al
   140012698:	adc    ch,BYTE PTR [rbx]
   14001269a:	add    DWORD PTR [rax],eax
   14001269c:	add    BYTE PTR [rax],al
   14001269e:	add    BYTE PTR [rax],al
   1400126a0:	cli    
   1400126a1:	sub    al,BYTE PTR [rcx]
   1400126a3:	add    BYTE PTR [rax],al
   1400126a5:	add    BYTE PTR [rax],al
   1400126a7:	add    dh,ch
   1400126a9:	sub    al,BYTE PTR [rcx]
   1400126ab:	add    BYTE PTR [rax],al
   1400126ad:	add    BYTE PTR [rax],al
   1400126af:	add    dl,bl
   1400126b1:	sub    al,BYTE PTR [rcx]
   1400126b3:	add    BYTE PTR [rax],al
   1400126b5:	add    BYTE PTR [rax],al
   1400126b7:	add    al,dl
   1400126b9:	sub    al,BYTE PTR [rcx]
   1400126bb:	add    BYTE PTR [rax],al
   1400126bd:	add    BYTE PTR [rax],al
   1400126bf:	add    al,cl
   1400126c1:	sub    al,BYTE PTR [rcx]
   1400126c3:	add    BYTE PTR [rax],al
   1400126c5:	add    BYTE PTR [rax],al
   1400126c7:	add    BYTE PTR [rsi+0x12a],dh
   1400126cd:	add    BYTE PTR [rax],al
   1400126cf:	add    BYTE PTR [rdx+rbp*1+0x1],ah
   1400126d6:	add    BYTE PTR [rax],al
   1400126d8:	xchg   esi,eax
   1400126d9:	sub    al,BYTE PTR [rcx]
   1400126db:	add    BYTE PTR [rax],al
   1400126dd:	add    BYTE PTR [rax],al
   1400126df:	add    BYTE PTR [rax+0x12a],cl
   1400126e5:	add    BYTE PTR [rax],al
   1400126e7:	add    BYTE PTR [rdx+0x12d],dh
   1400126ed:	add    BYTE PTR [rax],al
   1400126ef:	add    BYTE PTR [rdx+0x2a],bl
   1400126f2:	add    DWORD PTR [rax],eax
   1400126f4:	add    BYTE PTR [rax],al
   1400126f6:	add    BYTE PTR [rax],al
   1400126f8:	sub    r8b,BYTE PTR [rcx]
   1400126fb:	add    BYTE PTR [rax],al
   1400126fd:	add    BYTE PTR [rax],al
   1400126ff:	add    BYTE PTR [rdx],bh
   140012701:	sub    al,BYTE PTR [rcx]
   140012703:	add    BYTE PTR [rax],al
   140012705:	add    BYTE PTR [rax],al
   140012707:	add    BYTE PTR [rdx],dh
   140012709:	sub    al,BYTE PTR [rcx]
   14001270b:	add    BYTE PTR [rax],al
   14001270d:	add    BYTE PTR [rax],al
   14001270f:	add    BYTE PTR [rax],ch
   140012711:	sub    al,BYTE PTR [rcx]
   140012713:	add    BYTE PTR [rax],al
   140012715:	add    BYTE PTR [rax],al
   140012717:	add    BYTE PTR [rdx+rbp*1],bl
   14001271a:	add    DWORD PTR [rax],eax
   14001271c:	add    BYTE PTR [rax],al
   14001271e:	add    BYTE PTR [rax],al
   140012720:	(bad)  
   140012721:	sub    DWORD PTR [rcx],eax
   140012723:	add    BYTE PTR [rax],al
   140012725:	add    BYTE PTR [rax],al
   140012727:	add    dh,bl
   140012729:	sub    DWORD PTR [rcx],eax
   14001272b:	add    BYTE PTR [rax],al
   14001272d:	add    BYTE PTR [rax],al
   14001272f:	add    dh,al
   140012731:	sub    DWORD PTR [rcx],eax
   140012733:	add    BYTE PTR [rax],al
   140012735:	add    BYTE PTR [rax],al
   140012737:	add    BYTE PTR [rax+0x129],ch
   14001273d:	add    BYTE PTR [rax],al
   14001273f:	add    BYTE PTR [rdx+0x129],bl
	...
   14001274d:	add    BYTE PTR [rax],al
   14001274f:	add    BYTE PTR [rax+0x12b],bh
   140012755:	add    BYTE PTR [rax],al
   140012757:	add    BYTE PTR [rsi+0x12b],bl
   14001275d:	add    BYTE PTR [rax],al
   14001275f:	add    BYTE PTR [rdx+0x12b],cl
	...
   14001276d:	add    BYTE PTR [rax],al
   14001276f:	add    dh,dl
   140012771:	sub    eax,DWORD PTR [rcx]
   140012773:	add    BYTE PTR [rax],al
   140012775:	add    BYTE PTR [rax],al
   140012777:	add    dl,ch
   140012779:	sub    eax,DWORD PTR [rcx]
   14001277b:	add    BYTE PTR [rax],al
   14001277d:	add    BYTE PTR [rax],al
   14001277f:	add    dh,bh
   140012781:	sub    eax,DWORD PTR [rcx]
	...
   14001278f:	add    BYTE PTR [rdi],bh
   140012791:	add    dl,BYTE PTR [rax+0x72]
   140012794:	outs   dx,DWORD PTR ds:[rsi]
   140012795:	movsxd esp,DWORD PTR [rbp+0x73]
   140012798:	jae    0x1400127ee
   14001279a:	jb     0x1400127fd
   14001279c:	movsxd esp,DWORD PTR [rbp+0x0]
   14001279f:	add    BYTE PTR [rip+0x616e4501],al        # 0x1a16f6ca6
   1400127a5:	(bad)  
   1400127a6:	ins    BYTE PTR es:[rdi],dx
   1400127a7:	gs push rsp
   1400127a9:	jb     0x14001280c
   1400127ab:	movsxd esp,DWORD PTR [rbp+0x0]
   1400127ae:	(bad)  
   1400127af:	add    dl,BYTE PTR [rdx+0x65]
   1400127b2:	addr32 rex.XB jb 0x14001281b
   1400127b6:	(bad)  
   1400127b7:	je     0x14001281e
   1400127b9:	rex.WXB
   1400127ba:	gs jns 0x140012802
   1400127bd:	js     0x140012816
   1400127bf:	add    BYTE PTR [rdi+0x0],ah
   1400127c2:	rex.XB ins BYTE PTR es:[rdi],dx
   1400127c4:	outs   dx,DWORD PTR ds:[rsi]
   1400127c5:	jae    0x14001282c
   1400127c7:	push   rsp
   1400127c8:	jb     0x14001282b
   1400127ca:	movsxd esp,DWORD PTR [rbp+0x0]
   1400127cd:	add    al,dh
   1400127cf:	add    dl,BYTE PTR [rbx+0x65]
   1400127d2:	je     0x140012828
   1400127d4:	jb     0x140012837
   1400127d6:	movsxd esp,DWORD PTR [rbp+0x43]
   1400127d9:	(bad)  
   1400127da:	ins    BYTE PTR es:[rdi],dx
   1400127db:	ins    BYTE PTR es:[rdi],dx
   1400127dc:	(bad)  
   1400127de:	movsxd ebp,DWORD PTR [rbx+0x0]
   1400127e1:	add    BYTE PTR [rdx+rax*1+0x52],ch
   1400127e5:	gs addr32 rex.R
   1400127e8:	gs ins BYTE PTR es:[rdi],dx
   1400127ea:	gs je  0x140012852
   1400127ed:	rex.WXB
   1400127ee:	gs jns 0x140012848
   1400127f1:	add    dl,bh
   1400127f3:	add    dl,BYTE PTR [rbx+0x74]
   1400127f6:	outs   dx,DWORD PTR ds:[rsi]
   1400127f7:	jo     0x14001284d
   1400127f9:	jb     0x14001285c
   1400127fb:	movsxd esp,DWORD PTR [rbp+0x57]
   1400127fe:	add    BYTE PTR [rax],al
   140012800:	clc    
   140012801:	add    dl,BYTE PTR [rbx+0x74]
   140012804:	(bad)  
   140012805:	jb     0x14001287b
   140012807:	push   rsp
   140012808:	jb     0x14001286b
   14001280a:	movsxd esp,DWORD PTR [rbp+0x57]
   14001280d:	add    BYTE PTR [rax+0x2],dh
   140012810:	push   rdx
   140012811:	gs addr32 rex.R
   140012814:	gs ins BYTE PTR es:[rdi],dx
   140012816:	gs je  0x14001287e
   140012819:	push   rsi
   14001281a:	(bad)  
   14001281b:	ins    BYTE PTR es:[rdi],dx
   14001281c:	jne    0x140012883
   14001281e:	push   rdi
   14001281f:	add    BYTE PTR [rdx],bl
   140012821:	add    cl,BYTE PTR [rdi+0x70]
   140012824:	outs   dx,BYTE PTR gs:[rsi]
   140012826:	push   rsp
   140012827:	jb     0x14001288a
   140012829:	movsxd esp,DWORD PTR [rbp+0x57]
   14001282c:	add    BYTE PTR [rax],al
   14001282e:	pop    rax
   14001282f:	add    dl,BYTE PTR [rdx+0x65]
   140012832:	rex.XB ins BYTE PTR es:[edi],dx
   140012835:	outs   dx,DWORD PTR ds:[rsi]
   140012836:	jae    0x14001289d
   140012838:	rex.WXB
   140012839:	gs jns 0x14001283c
   14001283c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001283d:	add    dl,BYTE PTR [rdx+0x65]
   140012840:	addr32 push rbx
   140012842:	gs je  0x14001289b
   140012845:	(bad)  
   140012846:	ins    BYTE PTR es:[rdi],dx
   140012847:	jne    0x1400128ae
   140012849:	rex.RB js 0x1400128a3
   14001284c:	add    BYTE PTR [rax],al
   14001284e:	rex.B
   14001284f:	rex.R push rsi
   140012851:	push   r8
   140012853:	xor    rsi,QWORD PTR [r10]
   140012856:	cs fs ins BYTE PTR es:[rdi],dx
   140012859:	ins    BYTE PTR es:[rdi],dx
   14001285a:	add    BYTE PTR [rax],al
   14001285c:	xor    al,0x2
   14001285e:	rex.RXB
   14001285f:	gs je  0x1400128a6
   140012862:	(bad)  
   140012863:	je     0x1400128ca
   140012865:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140012867:	jb     0x1400128d6
   140012869:	(bad)  
   14001286a:	je     0x1400128c3
   14001286c:	add    BYTE PTR [rax],al
   14001286e:	test   DWORD PTR [rbx+rdx*2],0x6f437465
   140012875:	outs   dx,BYTE PTR ds:[rsi]
   140012876:	jae    0x1400128e7
   140012878:	ins    BYTE PTR es:[rdi],dx
   140012879:	gs push rsp
   14001287b:	gs js  0x1400128f2
   14001287e:	rex.B je 0x1400128f5
   140012881:	jb     0x1400128ec
   140012883:	(bad)  
   140012884:	jne    0x1400128fa
   140012886:	add    BYTE PTR gs:[rbx+rax*1],bl
   14001288a:	rex.RXB
   14001288b:	gs je  0x1400128e2
   14001288e:	imul   ebp,DWORD PTR [rbp+0x65],0x6d726f46
   140012895:	(bad)  
   140012896:	je     0x1400128ef
   140012898:	add    BYTE PTR [rax],al
   14001289a:	jg     0x14001289d
   14001289c:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x54656d69
   1400128a5:	outs   dx,DWORD PTR ds:[rsi]
   1400128a6:	push   rbx
   1400128a7:	jns    0x14001291c
   1400128a9:	je     0x140012910
   1400128ab:	ins    DWORD PTR es:[rdi],dx
   1400128ac:	push   rsp
   1400128ad:	imul   ebp,DWORD PTR [rbp+0x65],0x2e40000
   1400128b4:	rex.RXB
   1400128b5:	gs je  0x14001290b
   1400128b8:	je     0x14001291e
   1400128ba:	rex.W (bad) 
   1400128bc:	outs   dx,BYTE PTR ds:[rsi]
   1400128bd:	fs ins BYTE PTR es:[rdi],dx
   1400128bf:	add    BYTE PTR gs:[rax],al
   1400128c2:	jo     0x1400128c6
   1400128c4:	rex.RXB
   1400128c5:	gs je  0x140012914
   1400128c8:	(bad)  
   1400128c9:	jae    0x14001293f
   1400128cb:	rex.RB jb 0x140012940
   1400128ce:	outs   dx,DWORD PTR ds:[rsi]
   1400128cf:	jb     0x1400128d1
   1400128d1:	add    BYTE PTR [rdx+rax*1],dl
   1400128d4:	rex.RXB
   1400128d5:	gs je  0x14001291b
   1400128d8:	outs   dx,DWORD PTR ds:[rsi]
   1400128d9:	outs   dx,BYTE PTR ds:[rsi]
   1400128da:	jae    0x14001294b
   1400128dc:	ins    BYTE PTR es:[rdi],dx
   1400128dd:	gs push rbx
   1400128df:	movsxd esi,DWORD PTR [rdx+0x65]
   1400128e2:	outs   dx,BYTE PTR gs:[rsi]
   1400128e4:	rex.X jne 0x14001294d
   1400128e7:	data16 gs jb 0x140012934
   1400128eb:	outs   dx,BYTE PTR ds:[rsi]
   1400128ec:	outs   dx,WORD PTR ds:[rsi]
   1400128ee:	add    BYTE PTR [rax],al
   1400128f0:	fiadd  WORD PTR [rbx+rdx*2]
   1400128f3:	gs je  0x140012939
   1400128f6:	outs   dx,DWORD PTR ds:[rsi]
   1400128f7:	outs   dx,BYTE PTR ds:[rsi]
   1400128f8:	jae    0x140012969
   1400128fa:	ins    BYTE PTR es:[rdi],dx
   1400128fb:	gs rex.XB je 0x140012971
   1400128ff:	ins    BYTE PTR es:[rdi],dx
   140012900:	rex.W (bad) 
   140012902:	outs   dx,BYTE PTR ds:[rsi]
   140012903:	fs ins BYTE PTR es:[rdi],dx
   140012905:	gs jb  0x140012908
   140012908:	jle    0x14001290b
   14001290a:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x54656d69
   140012913:	outs   dx,DWORD PTR ds:[rsi]
   140012914:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140012916:	movsxd esp,DWORD PTR [rcx+0x6c]
   140012919:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x656d69
   140012922:	rex.WXB
   140012923:	rex.RB push r10
   140012925:	rex.WRX
   140012926:	rex.RB
   140012927:	xor    r14,QWORD PTR [rdx]
   14001292a:	cs fs ins BYTE PTR es:[rdi],dx
   14001292d:	ins    BYTE PTR es:[rdi],dx
   14001292e:	add    BYTE PTR [rax],al
   140012930:	rex.WRB
   140012931:	rex.RX
   140012932:	rex.XB xor al,0x32
   140012935:	jne    0x140012965
   140012937:	fs ins BYTE PTR es:[rdi],dx
   140012939:	ins    BYTE PTR es:[rdi],dx
   14001293a:	add    BYTE PTR [rax],al
   14001293c:	repz add al,0x77
   14001293f:	movsxd esi,DWORD PTR [rbx+0x63]
   140012942:	push   0xffffffff87000072
   140012947:	add    al,0x6d
   140012949:	gs ins DWORD PTR es:[rdi],dx
   14001294b:	ins    DWORD PTR es:[rdi],dx
   14001294c:	outs   dx,DWORD PTR ds:[rsi]
   14001294d:	jbe    0x1400129b4
   14001294f:	pop    rdi
   140012950:	jae    0x140012952
   140012952:	jl     0x140012957
   140012954:	pop    rdi
   140012955:	ja     0x1400129ba
   140012957:	jae    0x1400129c2
   140012959:	movsxd ebp,DWORD PTR [rbp+0x70]
   14001295c:	add    BYTE PTR [rax],al
   14001295e:	rex.RXB add al,0x66
   140012961:	ja     0x1400129d3
   140012963:	jb     0x1400129ce
   140012965:	outs   dx,BYTE PTR ds:[rsi]
   140012966:	je     0x1400129ce
   140012968:	add    BYTE PTR [rax],al
   14001296a:	ds add al,0x66
   14001296d:	jb     0x1400129d4
   14001296f:	add    BYTE PTR gs:[rax],al
   140012972:	js     0x140012978
   140012974:	ins    DWORD PTR es:[rdi],dx
   140012975:	(bad)  
   140012976:	ins    BYTE PTR es:[rdi],dx
   140012977:	ins    BYTE PTR es:[rdi],dx
   140012978:	outs   dx,DWORD PTR ds:[rsi]
   140012979:	movsxd eax,DWORD PTR [rax]
   14001297b:	add    BYTE PTR [rbp+0x66775f03],dh
   140012981:	outs   dx,DWORD PTR ds:[rsi]
   140012982:	jo     0x1400129e9
   140012984:	outs   dx,BYTE PTR ds:[rsi]
   140012985:	add    BYTE PTR [rdx],dl
   140012987:	add    eax,0x69727077
   14001298c:	outs   dx,BYTE PTR ds:[rsi]
   14001298d:	je     0x1400129f5
   14001298f:	add    BYTE PTR [rdx],cl
   140012991:	add    eax,0x74736377
   140012996:	outs   dx,DWORD PTR ds:[rsi]
   140012997:	ins    BYTE PTR es:[rdi],dx
   140012998:	add    BYTE PTR [rax],al
   14001299a:	pop    rbx
   14001299b:	add    ebx,DWORD PTR [rdi+0x76]
   14001299e:	jae    0x140012a0e
   1400129a0:	ja     0x140012a12
   1400129a2:	jb     0x140012a0d
   1400129a4:	outs   dx,BYTE PTR ds:[rsi]
   1400129a5:	je     0x140012a0d
   1400129a7:	add    BYTE PTR [rdx],dh
   1400129a9:	add    BYTE PTR [rdi],bh
   1400129ab:	ja     0x140012a15
   1400129ad:	(bad)  
   1400129ae:	je     0x1400129f0
   1400129b0:	gs js  0x140012a16
   1400129b3:	gs jo  0x140012a2a
   1400129b6:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   1400129bd:	rex.X
   1400129be:	push   r8
   1400129c0:	rex.RB
   1400129c1:	rex.X
   1400129c2:	rex.R pop rax
   1400129c4:	pop    rdx
   1400129c5:	add    BYTE PTR [rcx],dl
   1400129c7:	add    BYTE PTR [rdi],bh
   1400129c9:	(bad)  
   1400129ca:	xor    DWORD PTR [rbp+0x78],esp
   1400129cd:	movsxd esp,DWORD PTR [rbp+0x70]
   1400129d0:	je     0x140012a3b
   1400129d2:	outs   dx,DWORD PTR ds:[rsi]
   1400129d3:	outs   dx,BYTE PTR ds:[rsi]
   1400129d4:	rex
   1400129d5:	rex push rbp
   1400129d7:	rex.RB
   1400129d8:	rex.B
   1400129d9:	rex.B
   1400129da:	rex pop rax
   1400129dc:	pop    rdx
   1400129dd:	add    BYTE PTR [rdx],cl
   1400129df:	add    BYTE PTR [rdi],bh
   1400129e1:	(bad)  
   1400129e2:	xor    BYTE PTR [rbp+0x78],ah
   1400129e5:	movsxd esp,DWORD PTR [rbp+0x70]
   1400129e8:	je     0x140012a53
   1400129ea:	outs   dx,DWORD PTR ds:[rsi]
   1400129eb:	outs   dx,BYTE PTR ds:[rsi]
   1400129ec:	rex
   1400129ed:	rex push rcx
   1400129ef:	rex.RB
   1400129f0:	rex.B
   1400129f1:	rex.B
   1400129f2:	rex
   1400129f3:	rex.B
   1400129f4:	rex.RB
   1400129f5:	rex.X push rcx
   1400129f7:	rex.RB
   1400129f8:	rex.X
   1400129f9:	rex.R
   1400129fa:	rex pop rdx
   1400129fc:	add    BYTE PTR [rax],al
   1400129fe:	or     al,0x0
   140012a00:	(bad)  
   140012a01:	(bad)  
   140012a02:	xor    BYTE PTR [rbp+0x78],ah
   140012a05:	movsxd esp,DWORD PTR [rbp+0x70]
   140012a08:	je     0x140012a73
   140012a0a:	outs   dx,DWORD PTR ds:[rsi]
   140012a0b:	outs   dx,BYTE PTR ds:[rsi]
   140012a0c:	rex
   140012a0d:	rex push rcx
   140012a0f:	rex.RB
   140012a10:	rex.B
   140012a11:	rex.B
   140012a12:	rex
   140012a13:	rex.B
   140012a14:	rex.RB
   140012a15:	rex.X push rsi
   140012a17:	xor    BYTE PTR [rax+0x40],al
   140012a1a:	pop    rdx
   140012a1b:	add    BYTE PTR [rbp+0x6d656d04],al
   140012a21:	movsxd esi,DWORD PTR [rax+0x79]
   140012a24:	pop    rdi
   140012a25:	jae    0x140012a27
   140012a27:	add    BYTE PTR [rax],ch
   140012a29:	add    al,0x66
   140012a2b:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   140012a2f:	add    BYTE PTR gs:[rax],al
   140012a32:	and    al,0x4
   140012a34:	gs js  0x140012aa0
   140012a37:	je     0x140012a39
   140012a39:	add    BYTE PTR [rsi],al
   140012a3b:	add    eax,0x73736377
   140012a40:	je     0x140012ab4
   140012a42:	add    BYTE PTR [rax],al
   140012a44:	push   rdi
   140012a45:	add    BYTE PTR [rdi+0x5f],bl
   140012a48:	rex.XB js 0x140012ac3
   140012a4b:	rex.RX jb 0x140012aaf
   140012a4e:	ins    DWORD PTR es:[rdi],dx
   140012a4f:	gs rex.W (bad) 
   140012a52:	outs   dx,BYTE PTR ds:[rsi]
   140012a53:	fs ins BYTE PTR es:[rdi],dx
   140012a55:	gs jb  0x140012a8b
   140012a58:	add    BYTE PTR [rax],al
   140012a5a:	or     eax,0x303f3f00
   140012a5f:	gs js  0x140012ac5
   140012a62:	gs jo  0x140012ad9
   140012a65:	imul   ebp,DWORD PTR [rdi+0x6e],0x45514040
   140012a6c:	rex.B
   140012a6d:	rex.B
   140012a6e:	rex pop rax
   140012a70:	pop    rdx
   140012a71:	add    BYTE PTR [rax+rax*1+0x5f],cl
   140012a75:	rex.XB js 0x140012af0
   140012a78:	push   rsp
   140012a79:	push   0x45776f72
   140012a7e:	js     0x140012ae3
   140012a80:	gs jo  0x140012af7
   140012a83:	imul   ebp,DWORD PTR [rdi+0x6e],0x520000
   140012a8a:	pop    rdi
   140012a8b:	pop    rax
   140012a8c:	movsxd esi,DWORD PTR [rax+0x74]
   140012a8f:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xa00072
   140012a98:	pop    rdi
   140012a99:	(bad)  
   140012a9a:	ins    DWORD PTR es:[rdi],dx
   140012a9b:	jae    0x140012b04
   140012a9d:	pop    rdi
   140012a9e:	gs js  0x140012b0a
   140012aa1:	je     0x140012aa3
   140012aa3:	add    BYTE PTR [rdi+0x775f5f00],cl
   140012aa9:	addr32 gs je 0x140012b1a
   140012aad:	(bad)  
   140012aae:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140012ab5:	add    BYTE PTR [rax+0x735f5f00],al
   140012abb:	gs je  0x140012b1d
   140012abe:	(bad)  
   140012abf:	jo     0x140012b31
   140012ac1:	pop    rdi
   140012ac2:	je     0x140012b3d
   140012ac4:	jo     0x140012b2b
   140012ac6:	add    BYTE PTR [rax],al
   140012ac8:	add    BYTE PTR [rcx],al
   140012aca:	pop    rdi
   140012acb:	gs js  0x140012b37
   140012ace:	je     0x140012ad0
   140012ad0:	mov    bl,0x0
   140012ad2:	pop    rdi
   140012ad3:	movsxd esp,DWORD PTR [rbp+0x78]
   140012ad6:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0082
   140012ade:	jae    0x140012b45
   140012ae0:	je     0x140012b57
   140012ae2:	jae    0x140012b49
   140012ae4:	jb     0x140012b53
   140012ae6:	(bad)  
   140012ae7:	je     0x140012b51
   140012ae9:	gs jb  0x140012b5e
   140012aec:	add    BYTE PTR [rax],al
   140012aee:	outs   dx,DWORD PTR ds:[rsi]
   140012aef:	add    DWORD PTR [rdi+0x69],ebx
   140012af2:	outs   dx,BYTE PTR ds:[rsi]
   140012af3:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x53006d72
   140012afb:	add    BYTE PTR [rdi+0x5f],bl
   140012afe:	rex.XB pop r15
   140012b00:	jae    0x140012b72
   140012b02:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140012b06:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140012b0d:	ins    BYTE PTR es:[rdi],dx
   140012b0e:	gs jb  0x140012b11
   140012b11:	add    BYTE PTR [rcx],bl
   140012b13:	add    DWORD PTR [rdi+0x66],ebx
   140012b16:	ins    DWORD PTR es:[rdi],dx
   140012b17:	outs   dx,DWORD PTR ds:[rsi]
   140012b18:	fs add BYTE PTR gs:[rax],al
   140012b1c:	(bad)  
   140012b1d:	add    BYTE PTR [rdi+0x63],bl
   140012b20:	outs   dx,DWORD PTR ds:[rsi]
   140012b21:	ins    DWORD PTR es:[rdi],dx
   140012b22:	ins    DWORD PTR es:[rdi],dx
   140012b23:	outs   dx,DWORD PTR ds:[rsi]
   140012b24:	fs add BYTE PTR gs:[rax],al
   140012b28:	ins    DWORD PTR es:[rdi],dx
   140012b29:	jae    0x140012ba1
   140012b2b:	movsxd esi,DWORD PTR [rdx+0x74]
   140012b2e:	cs fs ins BYTE PTR es:[rdi],dx
   140012b31:	ins    BYTE PTR es:[rdi],dx
   140012b32:	add    BYTE PTR [rax],al
   140012b34:	fadd   DWORD PTR [rcx]
   140012b36:	pop    rdi
   140012b37:	ins    BYTE PTR es:[rdi],dx
   140012b38:	outs   dx,DWORD PTR ds:[rsi]
   140012b39:	movsxd ebp,DWORD PTR [rbx+0x0]
   140012b3c:	xor    eax,DWORD PTR [rbx]
   140012b3e:	pop    rdi
   140012b3f:	jne    0x140012baf
   140012b41:	ins    BYTE PTR es:[rdi],dx
   140012b42:	outs   dx,DWORD PTR ds:[rsi]
   140012b43:	movsxd ebp,DWORD PTR [rbx+0x0]
   140012b46:	ins    DWORD PTR es:[rdi],dx
   140012b47:	add    BYTE PTR [rdi+0x5f],bl
   140012b4a:	fs ins BYTE PTR es:[rdi],dx
   140012b4c:	ins    BYTE PTR es:[rdi],dx
   140012b4d:	outs   dx,DWORD PTR ds:[rsi]
   140012b4e:	outs   dx,BYTE PTR ds:[rsi]
   140012b4f:	gs js  0x140012bbb
   140012b52:	je     0x140012b54
   140012b54:	(bad)  
   140012b55:	add    bl,BYTE PTR [rdi+0x6f]
   140012b58:	outs   dx,BYTE PTR ds:[rsi]
   140012b59:	gs js  0x140012bc5
   140012b5c:	je     0x140012b5e
   140012b5e:	adc    al,BYTE PTR [rax]
   140012b60:	(bad)  
   140012b61:	(bad)  
   140012b62:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   140012b66:	gs pop rdi
   140012b68:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   140012b6f:	rex.RB
   140012b70:	rex.B
   140012b71:	rex.B
   140012b72:	rex pop rax
   140012b74:	pop    rdx
   140012b75:	add    BYTE PTR [rax],dh
   140012b77:	add    BYTE PTR [rdi],bh
   140012b79:	je     0x140012be0
   140012b7b:	jb     0x140012bea
   140012b7d:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140012b84:	pop    rcx
   140012b85:	pop    r8
   140012b87:	pop    rax
   140012b88:	pop    rdx
   140012b89:	add    BYTE PTR [rax+0x6c745202],dh
   140012b8f:	rex.XB (bad) 
   140012b91:	jo     0x140012c07
   140012b93:	jne    0x140012c07
   140012b95:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140012b98:	outs   dx,BYTE PTR ds:[rsi]
   140012b99:	je     0x140012c00
   140012b9b:	js     0x140012c11
   140012b9d:	add    BYTE PTR [rdi+0x4],cl
   140012ba0:	push   rdx
   140012ba1:	je     0x140012c0f
   140012ba3:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140012ba5:	outs   dx,DWORD PTR ds:[rsi]
   140012ba6:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140012baa:	jne    0x140012c1a
   140012bac:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140012bb0:	outs   dx,BYTE PTR ds:[rsi]
   140012bb1:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140012bb3:	je     0x140012c27
   140012bb5:	jns    0x140012bb7
   140012bb7:	add    BYTE PTR [rsi+0x5],dl
   140012bba:	push   rdx
   140012bbb:	je     0x140012c29
   140012bbd:	push   rsi
   140012bbe:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140012bc5:	outs   dx,BYTE PTR ds:[rsi]
   140012bc6:	ja     0x140012c31
   140012bc8:	outs   dx,BYTE PTR ds:[rsi]
   140012bc9:	add    BYTE PTR fs:[rax],al
   140012bcc:	outs   dx,BYTE PTR ds:[rsi]
   140012bcd:	je     0x140012c33
   140012bcf:	ins    BYTE PTR es:[rdi],dx
   140012bd0:	ins    BYTE PTR es:[rdi],dx
   140012bd1:	cs fs ins BYTE PTR es:[rdi],dx
   140012bd4:	ins    BYTE PTR es:[rdi],dx
   140012bd5:	add    BYTE PTR [rip+0x436f4300],bl        # 0x183706edb
   140012bdb:	jb     0x140012c42
   140012bdd:	(bad)  
   140012bde:	je     0x140012c45
   140012be0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140012be2:	jae    0x140012c58
   140012be4:	(bad)  
   140012be5:	outs   dx,BYTE PTR ds:[rsi]
   140012be6:	movsxd esp,DWORD PTR [rbp+0x0]
   140012be9:	add    BYTE PTR [rax+0x0],bh
   140012bec:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140012bee:	push   rbx
   140012bef:	gs je  0x140012c42
   140012bf2:	jb     0x140012c63
   140012bf4:	js     0x140012c6f
   140012bf6:	rex.X ins BYTE PTR es:[rdi],dx
   140012bf8:	(bad)  
   140012bf9:	outs   dx,BYTE PTR ds:[rsi]
   140012bfa:	imul   esp,DWORD PTR [rbp+0x74],0x0
   140012bfe:	push   rdx
   140012bff:	add    BYTE PTR [rbx+0x6f],al
   140012c02:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140012c04:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140012c0c:	add    BYTE PTR [rax],al
   140012c0e:	outs   dx,DWORD PTR ds:[rsi]
   140012c0f:	ins    BYTE PTR es:[rdi],dx
   140012c10:	xor    esi,DWORD PTR gs:[rdx]
   140012c13:	cs fs ins BYTE PTR es:[rdi],dx
   140012c16:	ins    BYTE PTR es:[rdi],dx
   140012c17:	add    BYTE PTR [rdi+0x4c],cl
   140012c1a:	rex.RB
   140012c1b:	push   r13
   140012c1d:	push   rsp
   140012c1e:	xor    esi,DWORD PTR [rdx]
   140012c20:	cs fs ins BYTE PTR es:[rdi],dx
   140012c23:	ins    BYTE PTR es:[rdi],dx
   140012c24:	add    BYTE PTR [rax],al
   140012c26:	int3   
   140012c27:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
   140012c2b:	(bad)  
   140012c2c:	ins    BYTE PTR es:[rdi],dx
   140012c2d:	rex.B ins BYTE PTR es:[rdi],dx
   140012c2f:	ins    BYTE PTR es:[rdi],dx
   140012c30:	outs   dx,DWORD PTR ds:[rsi]
   140012c31:	movsxd eax,DWORD PTR [rax]
   140012c33:	add    al,dl
   140012c35:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
   140012c39:	(bad)  
   140012c3a:	ins    BYTE PTR es:[rdi],dx
   140012c3b:	rex.RX jb 0x140012ca3
   140012c3e:	add    BYTE PTR gs:[rsi+0x5],ch
   140012c42:	push   rbx
   140012c43:	ins    BYTE PTR es:[rdi],dx
   140012c44:	gs gs jo 0x140012c48
   140012c48:	pop    rdi
   140012c49:	add    eax,0x55746553
   140012c4e:	outs   dx,BYTE PTR ds:[rsi]
   140012c4f:	push   0x6c646e61
   140012c54:	gs fs rex.RB js 0x140012cbc
   140012c59:	gs jo  0x140012cd0
   140012c5c:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140012c63:	gs jb  0x140012c66
   140012c66:	xchg   DWORD PTR [rdx],eax
   140012c68:	rex.RXB
   140012c69:	gs je  0x140012cb9
   140012c6c:	outs   dx,DWORD PTR ds:[rsi]
   140012c6d:	fs jne 0x140012cdc
   140012c70:	gs rex.W (bad) 
   140012c73:	outs   dx,BYTE PTR ds:[rsi]
   140012c74:	fs ins BYTE PTR es:[rdi],dx
   140012c76:	gs push rdi
   140012c78:	add    BYTE PTR [rax],al
   140012c7a:	(bad)  
   140012c7b:	add    al,0x51
   140012c7d:	jne    0x140012ce4
   140012c7f:	jb     0x140012cfa
   140012c81:	push   rax
   140012c82:	gs jb  0x140012ceb
   140012c85:	outs   dx,DWORD PTR ds:[rsi]
   140012c86:	jb     0x140012cf5
   140012c88:	(bad)  
   140012c89:	outs   dx,BYTE PTR ds:[rsi]
   140012c8a:	movsxd esp,DWORD PTR [rbp+0x43]
   140012c8d:	outs   dx,DWORD PTR ds:[rsi]
   140012c8e:	jne    0x140012cfe
   140012c90:	je     0x140012cf7
   140012c92:	jb     0x140012c94
   140012c94:	sub    al,BYTE PTR [rdx]
   140012c96:	rex.RXB
   140012c97:	gs je  0x140012cdd
   140012c9a:	jne    0x140012d0e
   140012c9c:	jb     0x140012d03
   140012c9e:	outs   dx,BYTE PTR ds:[rsi]
   140012c9f:	je     0x140012cf1
   140012ca1:	jb     0x140012d12
   140012ca3:	movsxd esp,DWORD PTR [rbp+0x73]
   140012ca6:	jae    0x140012cf1
   140012ca8:	add    BYTE PTR fs:[rsi],ch
   140012cab:	add    al,BYTE PTR [rdi+0x65]
   140012cae:	je     0x140012cf3
   140012cb0:	jne    0x140012d24
   140012cb2:	jb     0x140012d19
   140012cb4:	outs   dx,BYTE PTR ds:[rsi]
   140012cb5:	je     0x140012d0b
   140012cb7:	push   0x64616572
   140012cbc:	rex.WB
   140012cbd:	add    BYTE PTR fs:[rax],al
   140012cc0:	sti    
   140012cc1:	add    al,BYTE PTR [rdi+0x65]
   140012cc4:	je     0x140012d19
   140012cc6:	jns    0x140012d3b
   140012cc8:	je     0x140012d2f
   140012cca:	ins    DWORD PTR es:[rdi],dx
   140012ccb:	push   rsp
   140012ccc:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140012cd3:	ins    BYTE PTR es:[rdi],dx
   140012cd4:	gs push rsp
   140012cd6:	imul   ebp,DWORD PTR [rbp+0x65],0x47031700
   140012cdd:	gs je  0x140012d34
   140012ce0:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140012ce7:	je     0x140012ce9
   140012ce9:	add    BYTE PTR [rax+0x686e5505],ah
   140012cef:	(bad)  
   140012cf0:	outs   dx,BYTE PTR ds:[rsi]
   140012cf1:	fs ins BYTE PTR es:[rdi],dx
   140012cf3:	gs fs rex.RB js 0x140012d5b
   140012cf8:	gs jo  0x140012d6f
   140012cfb:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140012d02:	gs jb  0x140012d05
   140012d05:	add    BYTE PTR [rcx],ch
   140012d07:	add    al,BYTE PTR [rdi+0x65]
   140012d0a:	je     0x140012d4f
   140012d0c:	jne    0x140012d80
   140012d0e:	jb     0x140012d75
   140012d10:	outs   dx,BYTE PTR ds:[rsi]
   140012d11:	je     0x140012d63
   140012d13:	jb     0x140012d84
   140012d15:	movsxd esp,DWORD PTR [rbp+0x73]
   140012d18:	jae    0x140012d1a
   140012d1a:	jle    0x140012d21
   140012d1c:	push   rsp
   140012d1d:	gs jb  0x140012d8d
   140012d20:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140012d27:	outs   dx,DWORD PTR ds:[rsi]
   140012d28:	movsxd esp,DWORD PTR [rbp+0x73]
   140012d2b:	jae    0x140012d2d
   140012d2d:	add    BYTE PTR [rbp+0x6c655204],bl
   140012d33:	gs (bad) 
   140012d35:	jae    0x140012d9c
   140012d37:	push   rbx
   140012d38:	push   rdx
   140012d39:	push   rdi
   140012d3a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140012d3c:	movsxd ebp,DWORD PTR [rbx+0x45]
   140012d3f:	js     0x140012da4
   140012d41:	ins    BYTE PTR es:[rdi],dx
   140012d42:	jne    0x140012db7
   140012d44:	imul   esi,DWORD PTR [rsi+0x65],0x41000000
   140012d4b:	movsxd esi,DWORD PTR [rcx+0x75]
   140012d4e:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   140012d55:	outs   dx,DWORD PTR ds:[rsi]
   140012d56:	movsxd ebp,DWORD PTR [rbx+0x45]
   140012d59:	js     0x140012dbe
   140012d5b:	ins    BYTE PTR es:[rdi],dx
   140012d5c:	jne    0x140012dd1
   140012d5e:	imul   esi,DWORD PTR [rsi+0x65],0x52049e00
   140012d65:	gs ins BYTE PTR es:[rdi],dx
   140012d67:	gs (bad) 
   140012d69:	jae    0x140012dd0
   140012d6b:	push   rbx
   140012d6c:	push   rdx
   140012d6d:	push   rdi
   140012d6e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140012d70:	movsxd ebp,DWORD PTR [rbx+0x53]
   140012d73:	push   0x64657261
   140012d78:	add    BYTE PTR [rax],al
   140012d7a:	jae    0x140012d7f
   140012d7c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140012d7e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140012d86:	push   rbx
   140012d87:	push   rdx
   140012d88:	push   rdi
   140012d89:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140012d8b:	movsxd ebp,DWORD PTR [rbx+0x0]
   140012d8e:	add    DWORD PTR [rax],eax
   140012d90:	movsxd esi,DWORD PTR [r9+0x75]
   140012d94:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   140012d9b:	outs   dx,DWORD PTR ds:[rsi]
   140012d9c:	movsxd ebp,DWORD PTR [rbx+0x53]
   140012d9f:	push   0x64657261
   140012da4:	add    BYTE PTR [rax],al
   140012da6:	nop
   140012da7:	add    bl,BYTE PTR [rdi+0x70]
   140012daa:	jne    0x140012e1e
   140012dac:	movsxd esp,DWORD PTR gs:[rcx+0x6c]
   140012db0:	ins    BYTE PTR es:[rdi],dx
   140012db1:	add    BYTE PTR [rax+0x6d656d04],cl
   140012db7:	jae    0x140012e1e
   140012db9:	je     0x140012dbb
	...

Disassembly of section .rsrc:

0000000140013000 <.rsrc>:
	...
   14001300c:	add    BYTE PTR [rax],al
   14001300e:	add    DWORD PTR [rax],eax
   140013010:	adc    BYTE PTR [rax],al
   140013012:	add    BYTE PTR [rax],al
   140013014:	sbb    BYTE PTR [rax],al
   140013016:	add    BYTE PTR [rax+0x0],al
	...
   140013024:	add    BYTE PTR [rax],al
   140013026:	add    DWORD PTR [rax],eax
   140013028:	add    DWORD PTR [rax],eax
   14001302a:	add    BYTE PTR [rax],al
   14001302c:	xor    BYTE PTR [rax],al
   14001302e:	add    BYTE PTR [rax+0x0],al
	...
   14001303c:	add    BYTE PTR [rax],al
   14001303e:	add    DWORD PTR [rax],eax
   140013040:	or     DWORD PTR [rax+rax*1],eax
   140013043:	add    BYTE PTR [rax+0x0],cl
   140013046:	add    BYTE PTR [rax],al
   140013048:	(bad)  
   140013049:	xor    BYTE PTR [rcx],al
   14001304b:	add    BYTE PTR [rax+0x3],bh
	...
   14001305d:	add    BYTE PTR [rax],al
   14001305f:	add    BYTE PTR [rax+0x3403],bh
   140013065:	add    BYTE PTR [rsi+0x0],dl
   140013068:	push   rbx
   140013069:	add    BYTE PTR [rdi+0x0],bl
   14001306c:	push   rsi
   14001306d:	add    BYTE PTR [rbp+0x0],al
   140013070:	push   rdx
   140013071:	add    BYTE PTR [rbx+0x0],dl
   140013074:	rex.WB add BYTE PTR [r15+0x0],cl
   140013078:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14001307c:	rex.WB add BYTE PTR [r14+0x0],cl
   140013080:	rex.RX add BYTE PTR [rdi+0x0],r9b
   140013084:	add    BYTE PTR [rax],al
   140013086:	add    BYTE PTR [rax],al
   140013088:	mov    ebp,0xfeef04
   14001308d:	add    BYTE PTR [rcx],al
   14001308f:	add    BYTE PTR [rdx],al
   140013091:	add    BYTE PTR [rsi],al
   140013093:	add    BYTE PTR [rax],al
   140013095:	rex
   140013096:	lock and eax,DWORD PTR [rdx]
   140013099:	add    BYTE PTR [rsi],al
   14001309b:	add    BYTE PTR [rax],al
   14001309d:	rex
   14001309e:	lock and edi,DWORD PTR [rdi]
   1400130a1:	add    BYTE PTR [rax],al
   1400130a3:	add    BYTE PTR [rax],al
   1400130a5:	add    BYTE PTR [rax],al
   1400130a7:	add    BYTE PTR [rax+rax*1],al
   1400130aa:	add    al,0x0
   1400130ac:	add    DWORD PTR [rax],eax
	...
   1400130ba:	add    BYTE PTR [rax],al
   1400130bc:	(bad)  
   1400130bd:	add    eax,DWORD PTR [rax]
   1400130bf:	add    BYTE PTR [rcx],al
   1400130c1:	add    BYTE PTR [rbx+0x0],dl
   1400130c4:	je     0x1400130c6
   1400130c6:	jb     0x1400130c8
   1400130c8:	imul   eax,DWORD PTR [rax],0x67006e
   1400130ce:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400130d2:	ins    BYTE PTR es:[rdi],dx
   1400130d3:	add    BYTE PTR [rbp+0x0],ah
   1400130d6:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400130da:	data16 add BYTE PTR [rdi+0x0],ch
   1400130de:	add    BYTE PTR [rax],al
   1400130e0:	repnz add al,BYTE PTR [rax]
   1400130e3:	add    BYTE PTR [rcx],al
   1400130e5:	add    BYTE PTR [rax],dh
   1400130e7:	add    BYTE PTR [rax+rax*1],dh
   1400130ea:	xor    BYTE PTR [rax],al
   1400130ec:	cmp    DWORD PTR [rax],eax
   1400130ee:	xor    BYTE PTR [rax],al
   1400130f0:	xor    al,0x0
   1400130f2:	rex.X add BYTE PTR [rax],sil
   1400130f5:	add    BYTE PTR [rax],al
   1400130f7:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400130fb:	add    BYTE PTR [rcx],al
   1400130fd:	add    BYTE PTR [rbx+0x0],al
   140013100:	outs   dx,DWORD PTR ds:[rsi]
   140013101:	add    BYTE PTR [rbp+0x0],ch
   140013104:	jo     0x140013106
   140013106:	(bad)  
   140013107:	add    BYTE PTR [rsi+0x0],ch
   14001310a:	jns    0x14001310c
   14001310c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140013110:	ins    DWORD PTR es:[rdi],dx
   140013111:	add    BYTE PTR [rbp+0x0],ah
   140013114:	add    BYTE PTR [rax],al
   140013116:	add    BYTE PTR [rax],al
   140013118:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001311c:	movsxd eax,DWORD PTR [rax]
   14001311e:	jb     0x140013120
   140013120:	outs   dx,DWORD PTR ds:[rsi]
   140013121:	add    BYTE PTR [rbx+0x0],dh
   140013124:	outs   dx,DWORD PTR ds:[rsi]
   140013125:	add    BYTE PTR [rsi+0x0],ah
   140013128:	je     0x14001312a
   14001312a:	and    BYTE PTR [rax],al
   14001312c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140013130:	jb     0x140013132
   140013132:	jo     0x140013134
   140013134:	outs   dx,DWORD PTR ds:[rsi]
   140013135:	add    BYTE PTR [rdx+0x0],dh
   140013138:	(bad)  
   140013139:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001313d:	add    BYTE PTR [rdi+0x0],ch
   140013140:	outs   dx,BYTE PTR ds:[rsi]
   140013141:	add    BYTE PTR [rax],al
   140013143:	add    BYTE PTR [rdx+0x1004100],ch
   140013149:	add    BYTE PTR [rsi+0x0],al
   14001314c:	imul   eax,DWORD PTR [rax],0x65006c
   140013152:	add    BYTE PTR [rbp+0x0],r12b
   140013156:	jae    0x140013158
   140013158:	movsxd eax,DWORD PTR [rax]
   14001315a:	jb     0x14001315c
   14001315c:	imul   eax,DWORD PTR [rax],0x740070
   140013162:	imul   eax,DWORD PTR [rax],0x6e006f
   140013168:	add    BYTE PTR [rax],al
   14001316a:	add    BYTE PTR [rax],al
   14001316c:	jbe    0x14001316e
   14001316e:	jae    0x140013170
   140013170:	jae    0x140013172
   140013172:	je     0x140013174
   140013174:	jb     0x140013176
   140013176:	(bad)  
   140013177:	add    BYTE PTR [rbx+0x0],ah
   14001317a:	add    BYTE PTR gs:[rax+rax*1],ch
   14001317e:	and    BYTE PTR [rax],al
   140013180:	push   rsi
   140013181:	add    BYTE PTR [rdi+0x0],ch
   140013184:	ins    BYTE PTR es:[rdi],dx
   140013185:	add    BYTE PTR [rbp+0x0],dh
   140013188:	ins    DWORD PTR es:[rdi],dx
   140013189:	add    BYTE PTR [rbp+0x0],ah
   14001318c:	and    BYTE PTR [rax],al
   14001318e:	push   rbx
   14001318f:	add    BYTE PTR [rax+0x0],ch
   140013192:	(bad)  
   140013193:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140013197:	add    BYTE PTR [rdi+0x0],dh
   14001319a:	and    BYTE PTR [rax],al
   14001319c:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400131a0:	jo     0x1400131a2
   1400131a2:	jns    0x1400131a4
   1400131a4:	and    BYTE PTR [rax],al
   1400131a6:	push   rbx
   1400131a7:	add    BYTE PTR [rbp+0x0],ah
   1400131aa:	jb     0x1400131ac
   1400131ac:	jbe    0x1400131ae
   1400131ae:	imul   eax,DWORD PTR [rax],0x650063
   1400131b4:	and    BYTE PTR [rax],al
   1400131b6:	sub    BYTE PTR [rax],al
   1400131b8:	push   rsi
   1400131b9:	add    BYTE PTR [rbx+0x0],dl
   1400131bc:	push   rbx
   1400131bd:	add    BYTE PTR [rcx],ch
   1400131bf:	add    BYTE PTR [rax],ah
   1400131c1:	add    BYTE PTR [rax+rax*1+0x72],dh
   1400131c5:	add    BYTE PTR [rcx+0x0],ah
   1400131c8:	movsxd eax,DWORD PTR [rax]
   1400131ca:	add    BYTE PTR gs:[rax],ah
   1400131cd:	add    BYTE PTR [rsi+0x0],ah
   1400131d0:	outs   dx,DWORD PTR ds:[rsi]
   1400131d1:	add    BYTE PTR [rdx+0x0],dh
   1400131d4:	ins    DWORD PTR es:[rdi],dx
   1400131d5:	add    BYTE PTR [rcx+0x0],ah
   1400131d8:	je     0x1400131da
   1400131da:	je     0x1400131dc
   1400131dc:	imul   eax,DWORD PTR [rax],0x67006e
   1400131e2:	and    BYTE PTR [rax],al
   1400131e4:	je     0x1400131e6
   1400131e6:	outs   dx,DWORD PTR ds:[rsi]
   1400131e7:	add    BYTE PTR [rdi+0x0],ch
   1400131ea:	ins    BYTE PTR es:[rdi],dx
   1400131eb:	add    BYTE PTR [rax],al
   1400131ed:	add    BYTE PTR [rax],al
   1400131ef:	add    BYTE PTR [rax+rax*1+0x26],ch
   1400131f3:	add    BYTE PTR [rcx],al
   1400131f5:	add    BYTE PTR [rsi+0x0],al
   1400131f8:	imul   eax,DWORD PTR [rax],0x65006c
   1400131fe:	push   rsi
   1400131ff:	add    BYTE PTR [rbp+0x0],ah
   140013202:	jb     0x140013204
   140013204:	jae    0x140013206
   140013206:	imul   eax,DWORD PTR [rax],0x6e006f
   14001320c:	add    BYTE PTR [rax],al
   14001320e:	add    BYTE PTR [rax],al
   140013210:	add    BYTE PTR ss:[rsi],ch
   140013213:	add    BYTE PTR [rdx],dh
   140013215:	add    BYTE PTR [rsi],ch
   140013217:	add    BYTE PTR [rcx],bh
   140013219:	add    BYTE PTR [rdx],dh
   14001321b:	add    BYTE PTR [rax],dh
   14001321d:	add    BYTE PTR [rax],dh
   14001321f:	add    BYTE PTR [rsi],ch
   140013221:	add    BYTE PTR [rcx],dh
   140013223:	add    BYTE PTR [rsi],dh
   140013225:	add    BYTE PTR [rbx],dh
   140013227:	add    BYTE PTR [rax],bh
   140013229:	add    BYTE PTR [rax+rax*1],dh
   14001322c:	and    BYTE PTR [rax],al
   14001322e:	sub    BYTE PTR [rax],al
   140013230:	ja     0x140013232
   140013232:	imul   eax,DWORD PTR [rax],0x38006e
   140013238:	pop    rdi
   140013239:	add    BYTE PTR [rdx+0x0],dh
   14001323c:	je     0x14001323e
   14001323e:	ins    DWORD PTR es:[rdi],dx
   14001323f:	add    BYTE PTR [rsi],ch
   140013241:	add    BYTE PTR [rcx],dh
   140013243:	add    BYTE PTR [rdx],dh
   140013245:	add    BYTE PTR [rax],dh
   140013247:	add    BYTE PTR [rdi],dh
   140013249:	add    BYTE PTR [rdx],dh
   14001324b:	add    BYTE PTR [rip+0x31002d00],dh        # 0x171015f51
   140013251:	add    BYTE PTR [rdx],dh
   140013253:	add    BYTE PTR [rax+rax*1],dh
   140013256:	(bad)  
   140013257:	add    BYTE PTR [rcx],ch
   140013259:	add    BYTE PTR [rax],al
   14001325b:	add    BYTE PTR [rdx],bh
   14001325d:	add    BYTE PTR [rip+0x49000100],cl        # 0x189013363
   140013263:	add    BYTE PTR [rsi+0x0],ch
   140013266:	je     0x140013268
   140013268:	add    BYTE PTR gs:[rdx+0x0],dh
   14001326c:	outs   dx,BYTE PTR ds:[rsi]
   14001326d:	add    BYTE PTR [rcx+0x0],ah
   140013270:	ins    BYTE PTR es:[rdi],dx
   140013271:	add    BYTE PTR [rsi+0x0],cl
   140013274:	(bad)  
   140013275:	add    BYTE PTR [rbp+0x0],ch
   140013278:	add    BYTE PTR gs:[rax],al
   14001327b:	add    BYTE PTR [rsi+0x0],dh
   14001327e:	jae    0x140013280
   140013280:	jae    0x140013282
   140013282:	je     0x140013284
   140013284:	jb     0x140013286
   140013286:	(bad)  
   140013287:	add    BYTE PTR [rbx+0x0],ah
   14001328a:	add    BYTE PTR gs:[rsi],ch
   14001328d:	add    BYTE PTR [rbp+0x0],ah
   140013290:	js     0x140013292
   140013292:	add    BYTE PTR gs:[rax],al
   140013295:	add    BYTE PTR [rax],al
   140013297:	add    BYTE PTR [rax+0x1002e00],al
   14001329d:	add    BYTE PTR [rax+rax*1+0x65],cl
   1400132a1:	add    BYTE PTR [rdi+0x0],ah
   1400132a4:	(bad)  
   1400132a5:	add    BYTE PTR [rax+rax*1+0x43],ch
   1400132a9:	add    BYTE PTR [rdi+0x0],ch
   1400132ac:	jo     0x1400132ae
   1400132ae:	jns    0x1400132b0
   1400132b0:	jb     0x1400132b2
   1400132b2:	imul   eax,DWORD PTR [rax],0x680067
   1400132b8:	je     0x1400132ba
   1400132ba:	add    BYTE PTR [rax],al
   1400132bc:	test   eax,0x4d002000
   1400132c1:	add    BYTE PTR [rcx+0x0],ch
   1400132c4:	movsxd eax,DWORD PTR [rax]
   1400132c6:	jb     0x1400132c8
   1400132c8:	outs   dx,DWORD PTR ds:[rsi]
   1400132c9:	add    BYTE PTR [rbx+0x0],dh
   1400132cc:	outs   dx,DWORD PTR ds:[rsi]
   1400132cd:	add    BYTE PTR [rsi+0x0],ah
   1400132d0:	je     0x1400132d2
   1400132d2:	and    BYTE PTR [rax],al
   1400132d4:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400132d8:	jb     0x1400132da
   1400132da:	jo     0x1400132dc
   1400132dc:	outs   dx,DWORD PTR ds:[rsi]
   1400132dd:	add    BYTE PTR [rdx+0x0],dh
   1400132e0:	(bad)  
   1400132e1:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400132e5:	add    BYTE PTR [rdi+0x0],ch
   1400132e8:	outs   dx,BYTE PTR ds:[rsi]
   1400132e9:	add    BYTE PTR [rsi],ch
   1400132eb:	add    BYTE PTR [rax],ah
   1400132ed:	add    BYTE PTR [rcx+0x0],al
   1400132f0:	ins    BYTE PTR es:[rdi],dx
   1400132f1:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400132f5:	add    BYTE PTR [rdx+0x0],dh
   1400132f8:	imul   eax,DWORD PTR [rax],0x680067
   1400132fe:	je     0x140013300
   140013300:	jae    0x140013302
   140013302:	and    BYTE PTR [rax],al
   140013304:	jb     0x140013306
   140013306:	add    BYTE PTR gs:[rbx+0x0],dh
   14001330a:	add    BYTE PTR gs:[rdx+0x0],dh
   14001330e:	jbe    0x140013310
   140013310:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140013315:	add    BYTE PTR [rax],al
   140013317:	add    BYTE PTR [rdx+0x0],al
   14001331a:	or     eax,0x4f000100
   14001331f:	add    BYTE PTR [rdx+0x0],dh
   140013322:	imul   eax,DWORD PTR [rax],0x690067
   140013328:	outs   dx,BYTE PTR ds:[rsi]
   140013329:	add    BYTE PTR [rcx+0x0],ah
   14001332c:	ins    BYTE PTR es:[rdi],dx
   14001332d:	add    BYTE PTR [rsi+0x0],al
   140013330:	imul   eax,DWORD PTR [rax],0x65006c
   140013336:	outs   dx,BYTE PTR ds:[rsi]
   140013337:	add    BYTE PTR [rcx+0x0],ah
   14001333a:	ins    DWORD PTR es:[rdi],dx
   14001333b:	add    BYTE PTR [rbp+0x0],ah
   14001333e:	add    BYTE PTR [rax],al
   140013340:	jbe    0x140013342
   140013342:	jae    0x140013344
   140013344:	jae    0x140013346
   140013346:	je     0x140013348
   140013348:	jb     0x14001334a
   14001334a:	(bad)  
   14001334b:	add    BYTE PTR [rbx+0x0],ah
   14001334e:	add    BYTE PTR gs:[rsi],ch
   140013351:	add    BYTE PTR [rbp+0x0],ah
   140013354:	js     0x140013356
   140013356:	add    BYTE PTR gs:[rax],al
   140013359:	add    BYTE PTR [rax],al
   14001335b:	add    BYTE PTR [rdx],dh
   14001335d:	add    BYTE PTR [rcx],cl
   14001335f:	add    BYTE PTR [rcx],al
   140013361:	add    BYTE PTR [rax+0x0],dl
   140013364:	jb     0x140013366
   140013366:	outs   dx,DWORD PTR ds:[rsi]
   140013367:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001336b:	add    BYTE PTR [rbx+0x0],ah
   14001336e:	je     0x140013370
   140013370:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140013374:	ins    DWORD PTR es:[rdi],dx
   140013375:	add    BYTE PTR [rbp+0x0],ah
   140013378:	add    BYTE PTR [rax],al
   14001337a:	add    BYTE PTR [rax],al
   14001337c:	jbe    0x14001337e
   14001337e:	jae    0x140013380
   140013380:	jae    0x140013382
   140013382:	je     0x140013384
   140013384:	jb     0x140013386
   140013386:	(bad)  
   140013387:	add    BYTE PTR [rbx+0x0],ah
   14001338a:	add    BYTE PTR gs:[rax],al
   14001338d:	add    BYTE PTR [rax],al
   14001338f:	add    BYTE PTR [rdx+0x0],al
   140013392:	sldt   WORD PTR [rcx]
   140013395:	add    BYTE PTR [rax+0x0],dl
   140013398:	jb     0x14001339a
   14001339a:	outs   dx,DWORD PTR ds:[rsi]
   14001339b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001339f:	add    BYTE PTR [rbx+0x0],ah
   1400133a2:	je     0x1400133a4
   1400133a4:	push   rsi
   1400133a5:	add    BYTE PTR [rbp+0x0],ah
   1400133a8:	jb     0x1400133aa
   1400133aa:	jae    0x1400133ac
   1400133ac:	imul   eax,DWORD PTR [rax],0x6e006f
   1400133b2:	add    BYTE PTR [rax],al
   1400133b4:	add    BYTE PTR ss:[rsi],ch
   1400133b7:	add    BYTE PTR [rdx],dh
   1400133b9:	add    BYTE PTR [rsi],ch
   1400133bb:	add    BYTE PTR [rcx],bh
   1400133bd:	add    BYTE PTR [rdx],dh
   1400133bf:	add    BYTE PTR [rax],dh
   1400133c1:	add    BYTE PTR [rax],dh
   1400133c3:	add    BYTE PTR [rsi],ch
   1400133c5:	add    BYTE PTR [rcx],dh
   1400133c7:	add    BYTE PTR [rsi],dh
   1400133c9:	add    BYTE PTR [rbx],dh
   1400133cb:	add    BYTE PTR [rax],bh
   1400133cd:	add    BYTE PTR [rax+rax*1],dh
   1400133d0:	add    BYTE PTR [rax],al
   1400133d2:	add    BYTE PTR [rax],al
   1400133d4:	add    BYTE PTR [rax],r8b
   1400133d7:	add    BYTE PTR [rcx],al
   1400133d9:	add    BYTE PTR [rsi+0x0],dl
   1400133dc:	(bad)  
   1400133dd:	add    BYTE PTR [rdx+0x0],dh
   1400133e0:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400133e4:	ins    BYTE PTR es:[rdi],dx
   1400133e5:	add    BYTE PTR [rbp+0x0],ah
   1400133e8:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400133ec:	data16 add BYTE PTR [rdi+0x0],ch
   1400133f0:	add    BYTE PTR [rax],al
   1400133f2:	add    BYTE PTR [rax],al
   1400133f4:	and    al,0x0
   1400133f6:	add    al,0x0
   1400133f8:	add    BYTE PTR [rax],al
   1400133fa:	push   rsp
   1400133fb:	add    BYTE PTR [rdx+0x0],dh
   1400133fe:	(bad)  
   1400133ff:	add    BYTE PTR [rsi+0x0],ch
   140013402:	jae    0x140013404
   140013404:	ins    BYTE PTR es:[rdi],dx
   140013405:	add    BYTE PTR [rcx+0x0],ah
   140013408:	je     0x14001340a
   14001340a:	imul   eax,DWORD PTR [rax],0x6e006f
   140013410:	add    BYTE PTR [rax],al
   140013412:	add    BYTE PTR [rax],al
   140013414:	or     DWORD PTR [rax+rsi*4],eax
   140013417:	.byte 0x4

Disassembly of section .reloc:

0000000140014000 <.reloc>:
   140014000:	add    BYTE PTR [rax],dl
   140014002:	add    BYTE PTR [rax],al
   140014004:	sub    BYTE PTR [rax],al
   140014006:	add    BYTE PTR [rax],al
   140014008:	or     BYTE PTR [rax-0x5fe75ff0],ah
   14001400e:	and    BYTE PTR [rax-0x5fbf5fd8],ah
   140014014:	rex.W movabs al,ds:0xa168a0e0a0d8a080
   14001401e:	jo     0x140013fc1
   140014020:	js     0x140013fc3
   140014022:	test   al,0xa1
   140014024:	mov    al,0xa1
   140014026:	mov    eax,0x3000a1
   14001402b:	add    BYTE PTR [rax+rax*1+0x0],dl
   14001402f:	add    al,cl
   140014031:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014032:	shl    BYTE PTR [rbp-0x5a1f5a28],1
   140014038:	call   0x138a730e2
   14001403d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001403e:	(bad)  
   14001403f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014040:	push   0x8a6e8a6
   140014045:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014046:	adc    BYTE PTR [rdi-0x58c758e8],ah
   14001404c:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001404e:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140014050:	push   rax
   140014051:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014052:	pop    rax
   140014053:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014054:	and    BYTE PTR [rdi-0x586f5878],0xc8
   14001405b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001405c:	shl    BYTE PTR [rdi-0x58175820],1
   140014062:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014064:	clc    
   140014065:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014066:	add    BYTE PTR [rax-0x57ef57f8],ch
   14001406c:	sbb    BYTE PTR [rax-0x57d757e0],ch
   140014072:	nop
   140014073:	test   al,0x98
   140014075:	lods   al,BYTE PTR ds:[rsi]
   140014076:	movabs al,ds:0x4000acb0aca8ac
   14001407f:	add    BYTE PTR [rax+rax*1],dh
   140014082:	add    BYTE PTR [rax],al
   140014084:	lock movabs eax,ds:0xa210a208a200a1f8
   14001408e:	sbb    BYTE PTR [rdx-0x5dd75de0],ah
   140014094:	xor    BYTE PTR [rdx-0x5dbf5dc8],ah
   14001409a:	rex.W movabs ds:0xa268a260a258a250,al
   1400140a4:	jo     0x140014048
   1400140a6:	js     0x14001404a
   1400140a8:	and    BYTE PTR [rdx-0x5a475d78],0x0
   1400140af:	add    BYTE PTR [rax],al
   1400140b1:	rol    BYTE PTR [rax],0x0
   1400140b4:	add    BYTE PTR [rax],al
   1400140b7:	add    BYTE PTR [rax],al
   1400140b9:	movabs eax,ds:0xa1d0a180a158a128
   1400140c2:	fsub   DWORD PTR [rcx-0x5e175e20]
   1400140c8:	lock movabs eax,ds:0xa210a208a200a1f8
   1400140d2:	sbb    BYTE PTR [rdx-0x5dd75de0],ah
   1400140d8:	xor    BYTE PTR [rdx-0x5dbf5dc8],ah
   1400140de:	rex.W movabs ds:0xa848a270a258a250,al
   1400140e8:	(bad)  
   1400140e9:	test   al,0x80
   1400140eb:	test   al,0xa8
   1400140ed:	test   al,0xd0
   1400140ef:	test   al,0x0
	...
