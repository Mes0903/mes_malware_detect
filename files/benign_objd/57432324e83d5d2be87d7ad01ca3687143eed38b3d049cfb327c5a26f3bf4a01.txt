
57432324e83d5d2be87d7ad01ca3687143eed38b3d049cfb327c5a26f3bf4a01.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000402000 <.text>:
  402000:	rex.W add BYTE PTR [rax],al
  402003:	add    BYTE PTR [rdx],al
  402005:	add    BYTE PTR [rip+0xc79c00],al        # 0x107bc0b
  40200b:	add    BYTE PTR [rbx+rbp*1],dh
  40200e:	add    BYTE PTR [rax],al
  402010:	or     DWORD PTR [rax],eax
  402012:	add    BYTE PTR [rax],al
  402014:	(bad)  
  402015:	add    BYTE PTR [rax],al
  402017:	(bad)  
  402018:	enter  0x2c,0x0
  40201c:	rcr    BYTE PTR [rdx+0x20500000],cl
  402022:	add    BYTE PTR [rax],al
  402024:	add    BYTE PTR [rax],0x0
	...
  40204f:	add    BYTE PTR [rbp+0x3f4c7f4d],dl
  402055:	scas   al,BYTE PTR es:[rdi]
  402056:	push   rsi
  402057:	out    dx,al
  402059:	test   DWORD PTR [rdx-0x66],ebx
  40205c:	mov    bl,0x58
  40205e:	pushf  
  40205f:	scas   eax,DWORD PTR es:[rdi]
  402060:	mov    BYTE PTR [rbx+0x7e],ah
  402063:	jg     0x402060
  402065:	stos   BYTE PTR es:[rdi],al
  402066:	rex.RX (bad) 
  402068:	and    bh,dl
  40206a:	in     eax,dx
  40206b:	sub    ecx,edx
  40206d:	cmp    al,al
  40206f:	shr    eax,1
  402071:	mov    ebx,0xf8c1b490
  402076:	rex.B cdq 
  402078:	adc    ebx,DWORD PTR [rax]
  40207a:	(bad)  
  40207b:	xchg   edx,eax
  40207c:	pop    rdi
  40207d:	mov    esi,0x4e431a40
  402082:	add    dh,bh
  402084:	movsxd ebx,eax
  402086:	sahf   
  402087:	cdq    
  402088:	or     DWORD PTR [rsi],edx
  40208a:	jge    0x4020bb
  40208c:	outs   dx,DWORD PTR ds:[rsi]
  40208d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40208e:	jp     0x4020f3
  402090:	rex.WB jmp 0xfffffffff7566df1
  402096:	js     0x40208f
  402098:	pop    rdi
  402099:	(bad)  
  40209a:	pop    rcx
  40209b:	lea    ebx,es:[rdi-0x22]
  40209f:	enter  0xecbc,0x27
  4020a3:	and    cl,BYTE PTR [rax-0x3b1e7221]
  4020a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4020aa:	adc    BYTE PTR [rax+0x45],dl
  4020ad:	xlat   BYTE PTR ds:[rbx]
  4020ae:	scas   al,BYTE PTR es:[rdi]
  4020af:	setne  BYTE PTR [rdi-0x9]
  4020b3:	sar    DWORD PTR [rcx],1
  4020b5:	xchg   ebx,edx
  4020b7:	shl    DWORD PTR [rdi-0x76cc4a23],1
  4020bd:	popf   
  4020be:	jmp    0x573454f0
  4020c3:	mov    ebp,DWORD PTR [rsi-0x61]
  4020c6:	mov    dh,0xb5
  4020c8:	rex.X loop 0x4020ca
  4020cb:	mov    eax,0x48390966
  4020d0:	(bad)  
  4020d1:	add    ch,BYTE PTR [rax]
  4020d3:	adc    al,BYTE PTR [rax]
  4020d5:	add    BYTE PTR [rdx],cl
  4020d7:	sub    bl,BYTE PTR [rdx]
  4020d9:	sub    BYTE PTR [rax+rax*1],cl
  4020dc:	add    BYTE PTR [rsi],al
  4020de:	sub    bl,BYTE PTR [rsi]
  4020e0:	add    ch,BYTE PTR [rax]
  4020e2:	or     eax,0x2a060000
  4020e7:	cs jb  0x4020eb
  4020ea:	add    BYTE PTR [rax],al
  4020ec:	jo     0x402116
  4020ee:	(bad)  
  4020ef:	add    BYTE PTR [rax],al
  4020f1:	(bad)  
  4020f2:	sub    ch,BYTE PTR [rsi]
  4020f4:	jb     0x402115
  4020f6:	add    BYTE PTR [rax],al
  4020f8:	jo     0x402122
  4020fa:	(bad)  
  4020fb:	add    BYTE PTR [rax],al
  4020fd:	(bad)  
  4020fe:	sub    ch,BYTE PTR [rsi]
  402100:	jb     0x402147
  402102:	add    BYTE PTR [rax],al
  402104:	jo     0x40212e
  402106:	(bad)  
  402107:	add    BYTE PTR [rax],al
  402109:	(bad)  
  40210a:	sub    ch,BYTE PTR [rsi]
  40210c:	jb     0x402175
  40210e:	add    BYTE PTR [rax],al
  402110:	jo     0x40213a
  402112:	(bad)  
  402113:	add    BYTE PTR [rax],al
  402115:	(bad)  
  402116:	sub    dh,BYTE PTR [rdx]
  402118:	jb     0x40218d
  40211a:	add    BYTE PTR [rax],al
  40211c:	jo     0x402120
  40211e:	sub    BYTE PTR [rdi],cl
  402120:	add    BYTE PTR [rax],al
  402122:	(bad)  
  402123:	sub    dh,BYTE PTR [rdx]
  402125:	jb     0x4020c4
  402127:	add    BYTE PTR [rax],al
  402129:	jo     0x40212d
  40212b:	sub    BYTE PTR [rdi],cl
  40212d:	add    BYTE PTR [rax],al
  40212f:	(bad)  
  402130:	sub    dh,BYTE PTR [rdx]
  402132:	jb     0x4020fb
  402134:	add    BYTE PTR [rax],al
  402136:	jo     0x40213a
  402138:	sub    BYTE PTR [rdi],cl
  40213a:	add    BYTE PTR [rax],al
  40213c:	(bad)  
  40213d:	sub    bl,BYTE PTR [rsi]
  40213f:	add    ch,BYTE PTR [rax]
  402141:	adc    al,BYTE PTR [rax]
  402143:	add    BYTE PTR [rdx],cl
  402145:	sub    bl,BYTE PTR [rdx]
  402147:	jle    0x402152
  402149:	add    BYTE PTR [rax],al
  40214b:	add    al,0x2a
  40214d:	(bad)  
  40214e:	add    al,BYTE PTR [rax+0x4000009]
  402154:	sub    al,BYTE PTR [rsi+0x7e]
  402157:	or     BYTE PTR [rax],al
  402159:	add    BYTE PTR [rdx+rax*1],al
  40215c:	jle    0x402167
  40215e:	add    BYTE PTR [rax],al
  402160:	add    al,0x6f
  402162:	adc    eax,DWORD PTR [rax]
  402164:	add    BYTE PTR [rdx],cl
  402166:	sub    al,BYTE PTR [rax]
  402168:	adc    esi,DWORD PTR [rax]
  40216a:	add    eax,0x2700
  40216f:	add    BYTE PTR [rcx],al
  402171:	add    BYTE PTR [rax],al
  402173:	adc    DWORD PTR [rax],ebp
  402175:	adc    al,0x0
  402177:	add    BYTE PTR [rdx],cl
  402179:	jle    0x402183
  40217b:	add    BYTE PTR [rax],al
  40217d:	add    al,0x2
  40217f:	jle    0x40218a
  402181:	add    BYTE PTR [rax],al
  402183:	add    al,0x6f
  402185:	adc    eax,DWORD PTR [rax]
  402187:	add    BYTE PTR [rdx],cl
  402189:	(bad)  
  40218a:	lea    eax,[rcx]
  40218c:	add    BYTE PTR [rax],al
  40218e:	add    DWORD PTR [rdx],ecx
  402190:	(bad)  
  402191:	(bad)  
  402192:	add    esp,DWORD PTR [rdx+0x152806]
  402198:	add    BYTE PTR [rdx],cl
  40219a:	sub    dl,dl
  40219c:	rol    BYTE PTR [rdx],1
  40219e:	add    BYTE PTR [rax],al
  4021a0:	add    ch,BYTE PTR [rax]
  4021a2:	(bad)  
  4021a3:	add    BYTE PTR [rax],al
  4021a5:	or     ch,BYTE PTR [rdi+0x17]
  4021a8:	add    BYTE PTR [rax],al
  4021aa:	or     dl,al
  4021ac:	add    al,BYTE PTR [rax]
  4021ae:	add    BYTE PTR [rdx],al
  4021b0:	sub    BYTE PTR [rsi],dl
  4021b2:	add    BYTE PTR [rax],al
  4021b4:	or     ch,BYTE PTR [rdi+0x18]
  4021b7:	add    BYTE PTR [rax],al
  4021b9:	or     ch,BYTE PTR [rdi+0x19]
  4021bc:	add    BYTE PTR [rax],al
  4021be:	or     dh,BYTE PTR [rbx+0x1a]
  4021c1:	add    BYTE PTR [rax],al
  4021c3:	or     al,BYTE PTR [rax+0x4000008]
  4021c9:	adc    al,0x80
  4021cb:	or     DWORD PTR [rax],eax
  4021cd:	add    BYTE PTR [rdx+rbp*1],al
  4021d0:	sbb    dh,BYTE PTR [rdx-0x1d]
  4021d3:	add    BYTE PTR [rax],al
  4021d5:	jo     0x402201
  4021d7:	(bad)  
  4021d8:	add    bh,BYTE PTR [rbx+0x19]
  4021db:	add    BYTE PTR [rax],al
  4021dd:	add    al,0x2a
  4021df:	stos   BYTE PTR es:[rdi],al
  4021e0:	add    bl,BYTE PTR [rcx]
  4021e2:	jge    0x4021fc
  4021e4:	add    BYTE PTR [rax],al
  4021e6:	add    al,0x2
  4021e8:	jae    0x402205
  4021ea:	add    BYTE PTR [rax],al
  4021ec:	or     bh,BYTE PTR [rbp+0x1a]
  4021ef:	add    BYTE PTR [rax],al
  4021f1:	add    al,0x2
  4021f3:	jae    0x402211
  4021f5:	add    BYTE PTR [rax],al
  4021f7:	or     bh,BYTE PTR [rbp+0x1c]
  4021fa:	add    BYTE PTR [rax],al
  4021fc:	add    al,0x2
  4021fe:	sub    BYTE PTR [rip+0x20a0000],bl        # 0x24a2204
  402204:	sub    BYTE PTR [rip+0x2a060000],bl        # 0x2a46220a
  40220a:	add    BYTE PTR [rax],al
  40220c:	add    esi,DWORD PTR [rax]
  40220e:	add    al,0x0
  402210:	jg     0x402212
  402212:	add    BYTE PTR [rax],al
  402214:	add    BYTE PTR [rax],al
  402216:	add    BYTE PTR [rax],al
  402218:	add    ch,BYTE PTR [rax]
  40221a:	adc    eax,DWORD PTR [rax]
  40221c:	add    BYTE PTR [rsi],al
  40221e:	add    bh,BYTE PTR [rbx+0x1a]
  402221:	add    BYTE PTR [rax],al
  402223:	add    al,0x3
  402225:	outs   dx,DWORD PTR ds:[rsi]
  402226:	(bad)  
  402227:	add    BYTE PTR [rax],al
  402229:	or     al,BYTE PTR [rdx]
  40222b:	add    dh,BYTE PTR [rbx+0x21]
  40222e:	add    BYTE PTR [rax],al
  402230:	(bad)  
  402231:	jge    0x40224e
  402233:	add    BYTE PTR [rax],al
  402235:	add    al,0x2
  402237:	jnp    0x402257
  402239:	add    BYTE PTR [rax],al
  40223b:	add    al,0x6f
  40223d:	(bad)  
  40223e:	add    BYTE PTR [rax],al
  402240:	or     al,BYTE PTR [rdx]
  402242:	jnp    0x40225f
  402244:	add    BYTE PTR [rax],al
  402246:	add    al,0x6f
  402248:	and    BYTE PTR [rax],al
  40224a:	add    BYTE PTR [rdx],cl
  40224c:	add    bh,BYTE PTR [rbx+0x1e]
  40224f:	add    BYTE PTR [rax],al
  402251:	add    al,0x6f
  402253:	(bad)  
  402254:	add    BYTE PTR [rax],al
  402256:	or     al,BYTE PTR [rdx]
  402258:	jnp    0x402275
  40225a:	add    BYTE PTR [rax],al
  40225c:	add    al,0x16
  40225e:	outs   dx,DWORD PTR ds:[rsi]
  40225f:	and    DWORD PTR [rax],eax
  402261:	add    BYTE PTR [rdx],cl
  402263:	add    bh,BYTE PTR [rbx+0x1b]
  402266:	add    BYTE PTR [rax],al
  402268:	add    al,0x1b
  40226a:	outs   dx,DWORD PTR ds:[rsi]
  40226b:	and    al,BYTE PTR [rax]
  40226d:	add    BYTE PTR [rdx],cl
  40226f:	add    bh,BYTE PTR [rbx+0x1c]
  402272:	add    BYTE PTR [rax],al
  402274:	add    al,0x28
  402276:	add    al,0x0
  402278:	add    BYTE PTR [rsi],al
  40227a:	outs   dx,DWORD PTR ds:[rsi]
  40227b:	and    eax,DWORD PTR [rax]
  40227d:	add    BYTE PTR [rdx],cl
  40227f:	add    bh,BYTE PTR [rbx+0x1c]
  402282:	add    BYTE PTR [rax],al
  402284:	add    al,0x2
  402286:	inc    BYTE PTR [rsi]
  402288:	sbb    al,BYTE PTR [rax]
  40228a:	add    BYTE PTR [rsi],al
  40228c:	jae    0x4022b2
  40228e:	add    BYTE PTR [rax],al
  402290:	or     ch,BYTE PTR [rdi+0x25]
  402293:	add    BYTE PTR [rax],al
  402295:	or     ch,BYTE PTR [rdx]
  402297:	cmp    al,BYTE PTR [rdx]
  402299:	sbb    DWORD PTR [rbp+0x18],edi
  40229c:	add    BYTE PTR [rax],al
  40229e:	add    al,0x2
  4022a0:	sub    BYTE PTR [rax],bl
  4022a2:	add    BYTE PTR [rax],al
  4022a4:	(bad)  
  4022a5:	sub    bh,BYTE PTR [rdx]
  4022a7:	add    bl,BYTE PTR [rax]
  4022a9:	jge    0x4022c3
  4022ab:	add    BYTE PTR [rax],al
  4022ad:	add    al,0x2
  4022af:	sub    BYTE PTR [rax],bl
  4022b1:	add    BYTE PTR [rax],al
  4022b3:	(bad)  
  4022b4:	sub    bh,BYTE PTR [rdx]
  4022b6:	add    bl,BYTE PTR [rdi*2+0x4000018]
  4022bd:	add    ch,BYTE PTR [rax]
  4022bf:	sbb    BYTE PTR [rax],al
  4022c1:	add    BYTE PTR [rsi],al
  4022c3:	sub    bl,BYTE PTR [rbx]
  4022c5:	xor    BYTE PTR [rax+rax*1],al
  4022c8:	(bad)  
  4022c9:	add    BYTE PTR [rax],al
  4022cb:	add    BYTE PTR [rdx],al
  4022cd:	add    BYTE PTR [rax],al
  4022cf:	adc    DWORD PTR [rdx],eax
  4022d1:	jnp    0x4022eb
  4022d3:	add    BYTE PTR [rax],al
  4022d5:	add    al,0x18
  4022d7:	xor    eax,DWORD PTR [rdi]
  4022d9:	add    ch,BYTE PTR [rax]
  4022db:	sbb    DWORD PTR [rax],eax
  4022dd:	add    BYTE PTR [rsi],al
  4022df:	sub    al,BYTE PTR [rdx]
  4022e1:	adc    al,0x7d
  4022e3:	sbb    DWORD PTR [rax],eax
  4022e5:	add    BYTE PTR [rsi+rdx*1],al
  4022e8:	or     dh,BYTE PTR [rbx+0x26]
  4022eb:	add    BYTE PTR [rax],al
  4022ed:	or     cl,BYTE PTR [rbx]
  4022ef:	cmp    BYTE PTR [rdi+0x2000000],dl
  4022f5:	jnp    0x402313
  4022f7:	add    BYTE PTR [rax],al
  4022f9:	add    al,0x6f
  4022fb:	(bad)  
  4022fc:	add    BYTE PTR [rax],al
  4022fe:	or     cl,BYTE PTR [rdx]
  402300:	(bad)  
  402301:	(bad)  
  402302:	test   BYTE PTR [rax],al
  402305:	add    BYTE PTR [rax],al
  402307:	(bad)  
  402308:	add    bh,BYTE PTR [rbx+0x1c]
  40230b:	add    BYTE PTR [rax],al
  40230d:	add    al,0x6f
  40230f:	sub    BYTE PTR [rax],al
  402311:	add    BYTE PTR [rdx],cl
  402313:	outs   dx,DWORD PTR ds:[rsi]
  402314:	sub    DWORD PTR [rax],eax
  402316:	add    BYTE PTR [rdx],cl
  402318:	(bad)  
  402319:	outs   dx,DWORD PTR ds:[rsi]
  40231a:	sub    al,BYTE PTR [rax]
  40231c:	add    BYTE PTR [rdx],cl
  40231e:	sub    al,0xe
  402320:	add    al,BYTE PTR [rdi]
  402322:	outs   dx,DWORD PTR ds:[rsi]
  402323:	sub    eax,DWORD PTR [rax]
  402325:	add    BYTE PTR [rdx],cl
  402327:	jge    0x402342
  402329:	add    BYTE PTR [rax],al
  40232b:	add    al,0xde
  40232d:	fs jb  0x402341
  402330:	add    DWORD PTR [rax],eax
  402332:	jo     0x402340
  402334:	add    bh,BYTE PTR [rbx+0x1c]
  402337:	add    BYTE PTR [rax],al
  402339:	add    al,0x6f
  40233b:	sub    BYTE PTR [rax],al
  40233d:	add    BYTE PTR [rdx],cl
  40233f:	jle    0x40236d
  402341:	add    BYTE PTR [rax],al
  402343:	or     bl,BYTE PTR [rbx]
  402345:	sub    BYTE PTR [rip+0x2c0a0000],ch        # 0x2c4a234b
  40234b:	or     BYTE PTR [rax],ch
  40234d:	(bad)  
  40234e:	add    BYTE PTR [rax],al
  402350:	(bad)  
  402351:	or     al,0x2b
  402353:	adc    DWORD PTR [rdx],eax
  402355:	jnp    0x402373
  402357:	add    BYTE PTR [rax],al
  402359:	add    al,0x6f
  40235b:	sub    BYTE PTR [rax],al
  40235d:	add    BYTE PTR [rdx],cl
  40235f:	sub    BYTE PTR [rcx],cl
  402361:	add    BYTE PTR [rax],al
  402363:	(bad)  
  402364:	or     al,0x2
  402366:	or     BYTE PTR [rax],ch
  402368:	(bad)  
  402369:	add    BYTE PTR [rax],al
  40236b:	(bad)  
  40236c:	sbb    ebp,DWORD PTR [rax]
  40236e:	sbb    eax,DWORD PTR [rax]
  402370:	add    BYTE PTR [rsi],al
  402372:	or     bl,dh
  402374:	(bad)  
  402375:	or     eax,0x2e6f0902
  40237a:	add    BYTE PTR [rax],al
  40237c:	or     ch,BYTE PTR [rax]
  40237e:	(bad)  
  40237f:	add    BYTE PTR [rax],al
  402381:	(bad)  
  402382:	sbb    ebp,DWORD PTR [rax]
  402384:	sbb    eax,DWORD PTR [rax]
  402386:	add    BYTE PTR [rsi],al
  402388:	or     bl,dh
  40238a:	add    BYTE PTR [rsi],al
  40238c:	sbb    BYTE PTR [rax+0x62],al
  40238f:	(bad)  
  402390:	(bad)  
  402391:	inc    DWORD PTR [rdx]
  402393:	jnp    0x4023ae
  402395:	add    BYTE PTR [rax],al
  402397:	add    al,0x28
  402399:	(bad)  
  40239a:	add    BYTE PTR [rax],al
  40239c:	or     ch,BYTE PTR [rip+0x19280206]        # 0x196825a8
  4023a2:	add    BYTE PTR [rax],al
  4023a4:	(bad)  
  4023a5:	sub    al,BYTE PTR [rax]
  4023a7:	add    BYTE PTR [rcx],al
  4023a9:	adc    BYTE PTR [rax],al
  4023ab:	add    BYTE PTR [rax],al
  4023ad:	add    BYTE PTR [rdi],dh
  4023af:	add    BYTE PTR [rsi-0x5b],ch
  4023b2:	add    BYTE PTR [rsi],dl
  4023b4:	add    BYTE PTR ss:[rax],al
  4023b7:	add    DWORD PTR [rbx],ebx
  4023b9:	xor    BYTE PTR [rax+rax*1],al
  4023bc:	(bad)  
  4023bd:	add    DWORD PTR [rax],eax
  4023bf:	add    BYTE PTR [rbx],al
  4023c1:	add    BYTE PTR [rax],al
  4023c3:	adc    DWORD PTR [rax],ebp
  4023c5:	xor    BYTE PTR [rax],al
  4023c7:	add    BYTE PTR [rdx],cl
  4023c9:	outs   dx,DWORD PTR ds:[rsi]
  4023ca:	xor    DWORD PTR [rax],eax
  4023cc:	add    BYTE PTR [rdx],cl
  4023ce:	jae    0x402402
  4023d0:	add    BYTE PTR [rax],al
  4023d2:	or     ch,BYTE PTR [rax]
  4023d4:	xor    eax,DWORD PTR [rax]
  4023d6:	add    BYTE PTR [rdx],cl
  4023d8:	sub    BYTE PTR [rax+rax*1],dh
  4023db:	add    BYTE PTR [rdx],cl
  4023dd:	jb     0x4023f2
  4023df:	add    DWORD PTR [rax],eax
  4023e1:	jo     0x40240b
  4023e3:	xor    eax,0xa0a0000
  4023e8:	(bad)  
  4023e9:	sub    BYTE PTR [rsi],dh
  4023eb:	add    BYTE PTR [rax],al
  4023ed:	or     ch,BYTE PTR [rip+0x828060c]        # 0x86829ff
  4023f3:	add    BYTE PTR [rax],al
  4023f5:	(bad)  
  4023f6:	jae    0x40242f
  4023f8:	add    BYTE PTR [rax],al
  4023fa:	or     bh,BYTE PTR [rdx+0x73]
  4023fd:	cmp    BYTE PTR [rax],al
  4023ff:	add    BYTE PTR [rdx],cl
  402401:	or     eax,DWORD PTR [rdi]
  402403:	jb     0x402432
  402405:	add    DWORD PTR [rax],eax
  402407:	jo     0x40240b
  402409:	jnp    0x402423
  40240b:	add    BYTE PTR [rax],al
  40240d:	add    al,0x8c
  40240f:	(bad)  
  402410:	add    BYTE PTR [rax],al
  402412:	add    DWORD PTR [rdi+0x39],ebp
  402415:	add    BYTE PTR [rax],al
  402417:	or     ch,BYTE PTR [rax]
  402419:	cmp    al,BYTE PTR [rax]
  40241b:	add    BYTE PTR [rdx],cl
  40241d:	outs   dx,DWORD PTR ds:[rsi]
  40241e:	cmp    eax,DWORD PTR [rax]
  402420:	add    BYTE PTR [rdx],cl
  402422:	add    bh,BYTE PTR es:[rbx+0x18]
  402426:	add    BYTE PTR [rax],al
  402428:	add    al,0x18
  40242a:	xor    DWORD PTR cs:[rdi],eax
  40242d:	add    bh,BYTE PTR [rbx+0x19]
  402430:	add    BYTE PTR [rax],al
  402432:	add    al,0x72
  402434:	rex.RXB add DWORD PTR [r8],r8d
  402437:	jo     0x402454
  402439:	outs   dx,DWORD PTR ds:[rsi]
  40243a:	cmp    al,0x0
  40243c:	add    BYTE PTR [rdx],cl
  40243e:	sub    eax,0x14b7207
  402443:	add    BYTE PTR [rax+0x2b],dh
  402446:	add    eax,0x17372
  40244b:	jo     0x40244f
  40244d:	jnp    0x402468
  40244f:	add    BYTE PTR [rax],al
  402451:	add    al,0x28
  402453:	cmp    al,BYTE PTR [rax]
  402455:	add    BYTE PTR [rdx],cl
  402457:	outs   dx,DWORD PTR ds:[rsi]
  402458:	cmp    eax,DWORD PTR [rax]
  40245a:	add    BYTE PTR [rdx],cl
  40245c:	add    bh,BYTE PTR es:[rbx+0x1a]
  402460:	add    BYTE PTR [rax],al
  402462:	add    al,0x2c
  402464:	push   rcx
  402465:	add    bh,BYTE PTR [rbx+0x1a]
  402468:	add    BYTE PTR [rax],al
  40246a:	add    al,0x6f
  40246c:	cmp    eax,0x2c0a0000
  402471:	add    r15b,BYTE PTR [rbx+0x1a]
  402475:	add    BYTE PTR [rax],al
  402477:	add    al,0x6f
  402479:	add    BYTE PTR ds:[rax],al
  40247c:	or     dl,BYTE PTR [rbx]
  40247e:	(bad)  
  40247f:	sub    ebx,DWORD PTR [rdx+rdx*1]
  402482:	(bad)  
  402483:	sub    BYTE PTR [rdi],bh
  402485:	add    BYTE PTR [rax],al
  402487:	or     cl,BYTE PTR [rdi+rax*1]
  40248a:	jb     0x402429
  40248c:	add    DWORD PTR [rax],eax
  40248e:	jo     0x4024ff
  402490:	cmp    eax,DWORD PTR [rax]
  402492:	add    BYTE PTR [rdx],cl
  402494:	es (bad) 
  402496:	or     BYTE PTR [rdi+0x3b],ch
  402499:	add    BYTE PTR [rax],al
  40249b:	or     ah,BYTE PTR [rsi]
  40249d:	adc    al,BYTE PTR [rsi]
  40249f:	sub    BYTE PTR [rax+0x0],al
  4024a2:	add    BYTE PTR [rdx],cl
  4024a4:	sub    eax,0x120ededb
  4024a9:	(bad)  
  4024aa:	(bad)  
  4024ab:	(bad)  
  4024ac:	add    eax,DWORD PTR [rax]
  4024ae:	add    BYTE PTR [rbx],bl
  4024b0:	outs   dx,DWORD PTR ds:[rsi]
  4024b1:	add    BYTE PTR [r8],al
  4024b4:	or     bl,ah
  4024b6:	(bad)  
  4024b7:	outs   dx,DWORD PTR ds:[rsi]
  4024b8:	cmp    DWORD PTR [rax],eax
  4024ba:	add    BYTE PTR [rdx],cl
  4024bc:	or     eax,0x42730906
  4024c1:	add    BYTE PTR [rax],al
  4024c3:	or     dl,BYTE PTR [rbx]
  4024c5:	add    al,0x2
  4024c7:	sub    BYTE PTR [rbx+0x0],al
  4024ca:	add    BYTE PTR [rdx],cl
  4024cc:	adc    DWORD PTR [rax+rbp*1],eax
  4024cf:	add    BYTE PTR [rax],r8b
  4024d2:	or     dl,BYTE PTR [rbx]
  4024d4:	add    eax,0x456f0511
  4024d9:	add    BYTE PTR [rax],al
  4024db:	or     bl,dh
  4024dd:	or     al,0x11
  4024df:	add    eax,0x511072c
  4024e4:	outs   dx,DWORD PTR ds:[rsi]
  4024e5:	add    BYTE PTR [r8],al
  4024e8:	or     bl,ah
  4024ea:	sub    al,BYTE PTR [rax]
  4024ec:	add    DWORD PTR [rax+rax*1],ebx
  4024ef:	add    BYTE PTR [rdx],al
  4024f1:	add    BYTE PTR [rbx+0xe42900],bh
  4024f7:	(bad)  
  4024f8:	add    BYTE PTR [rax],al
  4024fa:	add    BYTE PTR [rax],al
  4024fc:	add    al,BYTE PTR [rax]
  4024fe:	adc    DWORD PTR [rcx],eax
  402500:	or     DWORD PTR [rdx],ebx
  402502:	add    DWORD PTR [rax+rax*1],ecx
  402505:	add    BYTE PTR [rax],al
  402507:	add    BYTE PTR [rdx+0x466f0402],al
  40250d:	add    BYTE PTR [rax],al
  40250f:	or     ch,BYTE PTR [rax]
  402511:	or     al,BYTE PTR [rax]
  402513:	add    BYTE PTR [rsi],al
  402515:	sub    BYTE PTR [rip+0x16060000],al        # 0x1646251b
  40251b:	sub    BYTE PTR [rbx],bl
  40251d:	add    BYTE PTR [rax],al
  40251f:	(bad)  
  402520:	es add al,0x17
  402523:	outs   dx,DWORD PTR ds:[rsi]
  402524:	rex.RXB add BYTE PTR [r8],r8b
  402527:	or     ch,BYTE PTR [rdx]
  402529:	xor    al,BYTE PTR [rdx]
  40252b:	add    eax,DWORD PTR [rax*1+0x4828101f]
  402532:	add    BYTE PTR [rax],al
  402534:	or     ch,BYTE PTR [rdx]
  402536:	jp     0x40253b
  402538:	sub    al,0x13
  40253a:	add    bh,BYTE PTR [rbx+0x1d]
  40253d:	add    BYTE PTR [rax],al
  40253f:	add    al,0x2c
  402541:	or     eax,DWORD PTR [rdx]
  402543:	jnp    0x402562
  402545:	add    BYTE PTR [rax],al
  402547:	add    al,0x6f
  402549:	add    BYTE PTR [r8],al
  40254c:	or     al,BYTE PTR [rdx]
  40254e:	add    ebp,DWORD PTR [rax]
  402550:	rex.WB add BYTE PTR [r8],al
  402553:	or     ch,BYTE PTR [rdx]
  402555:	add    BYTE PTR [rax],al
  402557:	add    BYTE PTR [rbx],dl
  402559:	xor    BYTE PTR [rbx],al
  40255b:	add    BYTE PTR [rdi+0x4000000],dh
  402561:	add    BYTE PTR [rax],al
  402563:	adc    eax,edx
  402565:	add    eax,0x28020000
  40256a:	(bad)  
  40256b:	add    BYTE PTR [rax],al
  40256d:	or     dh,BYTE PTR [rbx+0x4a]
  402570:	add    BYTE PTR [rax],al
  402572:	or     cl,BYTE PTR [rdx]
  402574:	add    dh,BYTE PTR [rbx+0x4b]
  402577:	add    BYTE PTR [rax],al
  402579:	or     bh,BYTE PTR [rbp+0x1e]
  40257c:	add    BYTE PTR [rax],al
  40257e:	add    al,0x2
  402580:	sub    BYTE PTR [rax+rax*1+0x0],cl
  402584:	or     al,BYTE PTR [rsi]
  402586:	add    bh,BYTE PTR [rbx+0x1e]
  402589:	add    BYTE PTR [rax],al
  40258b:	add    al,0x72
  40258d:	movabs eax,ds:0xa00004d6f700001
  402596:	add    bh,BYTE PTR [rbx+0x1e]
  402599:	add    BYTE PTR [rax],al
  40259b:	add    al,0x28
  40259d:	rex.WRX add BYTE PTR [rax],r8b
  4025a0:	or     ch,BYTE PTR [rdi+0x4f]
  4025a3:	add    BYTE PTR [rax],al
  4025a5:	or     al,BYTE PTR [rdx]
  4025a7:	jnp    0x4025c7
  4025a9:	add    BYTE PTR [rax],al
  4025ab:	add    al,0x72
  4025ad:	movabs eax,ds:0xa0000506f700001
  4025b6:	(bad)  
  4025b7:	add    dh,BYTE PTR [rdx-0x3d]
  4025ba:	add    DWORD PTR [rax],eax
  4025bc:	jo     0x40262d
  4025be:	rex.WRB add BYTE PTR [r8],r8b
  4025c1:	or     al,BYTE PTR [rdx]
  4025c3:	(bad)  
  4025c4:	sub    BYTE PTR [rcx+0x0],dl
  4025c7:	add    BYTE PTR [rdx],cl
  4025c9:	add    dl,BYTE PTR [rdi]
  4025cb:	outs   dx,DWORD PTR ds:[rsi]
  4025cc:	push   rdx
  4025cd:	add    BYTE PTR [rax],al
  4025cf:	or     al,BYTE PTR [rdx]
  4025d1:	sub    BYTE PTR [rbx+0x0],dl
  4025d4:	add    BYTE PTR [rdx],cl
  4025d6:	outs   dx,DWORD PTR ds:[rsi]
  4025d7:	push   rsp
  4025d8:	add    BYTE PTR [rax],al
  4025da:	or     al,BYTE PTR [rdx]
  4025dc:	sub    BYTE PTR [rdi],bl
  4025de:	add    BYTE PTR [rax],al
  4025e0:	or     al,BYTE PTR [rdx]
  4025e2:	jnp    0x402602
  4025e4:	add    BYTE PTR [rax],al
  4025e6:	add    al,0x6f
  4025e8:	and    BYTE PTR [rax],al
  4025ea:	add    BYTE PTR [rdx],cl
  4025ec:	add    bl,BYTE PTR [rcx]
  4025ee:	sub    BYTE PTR [rbp+0x0],dl
  4025f1:	add    BYTE PTR [rdx],cl
  4025f3:	add    dl,BYTE PTR [rsi]
  4025f5:	sub    BYTE PTR [rsi+0x0],dl
  4025f8:	add    BYTE PTR [rdx],cl
  4025fa:	add    dl,BYTE PTR [rsi]
  4025fc:	sub    BYTE PTR [rdi+0x0],dl
  4025ff:	add    BYTE PTR [rdx],cl
  402601:	add    dh,BYTE PTR [rdx-0x31]
  402604:	add    DWORD PTR [rax],eax
  402606:	jo     0x402630
  402608:	push   rax
  402609:	add    BYTE PTR [rax],al
  40260b:	or     al,BYTE PTR [rdx]
  40260d:	sbb    BYTE PTR [rax],ch
  40260f:	pop    rax
  402610:	add    BYTE PTR [rax],al
  402612:	or     al,BYTE PTR [rdx]
  402614:	(bad)  
  402615:	sub    BYTE PTR [rcx+0x0],bl
  402618:	add    BYTE PTR [rdx],cl
  40261a:	sub    bl,BYTE PTR [rsi+0x28]
  40261d:	pop    rbx
  40261e:	add    BYTE PTR [rax],al
  402620:	or     dl,BYTE PTR [rsi]
  402622:	sub    BYTE PTR [rax+rax*1+0x0],bl
  402626:	or     al,BYTE PTR [rdx]
  402628:	jae    0x40263e
  40262a:	add    BYTE PTR [rax],al
  40262c:	(bad)  
  40262d:	sub    BYTE PTR [rbp+0x0],bl
  402630:	add    BYTE PTR [rdx],cl
  402632:	sub    ah,BYTE PTR [rdx]
  402634:	add    al,BYTE PTR [rbx]
  402636:	jge    0x402657
  402638:	add    BYTE PTR [rax],al
  40263a:	add    al,0x2a
  40263c:	add    ch,BYTE PTR ss:[rax]
  40263f:	pop    rsi
  402640:	add    BYTE PTR [rax],al
  402642:	or     al,BYTE PTR [rdx]
  402644:	sub    BYTE PTR [rsi],ah
  402646:	add    BYTE PTR [rax],al
  402648:	(bad)  
  402649:	sub    al,BYTE PTR [rax]
  40264b:	add    BYTE PTR [rbx],al
  40264d:	xor    BYTE PTR [rdx],al
  40264f:	add    BYTE PTR [rdx+0x0],ah
  402652:	add    BYTE PTR [rax],al
  402654:	add    BYTE PTR [rax],al
  402656:	add    BYTE PTR [rax],al
  402658:	add    ch,BYTE PTR [rax]
  40265a:	and    BYTE PTR [rax],al
  40265c:	add    BYTE PTR [rsi],al
  40265e:	add    al,BYTE PTR [rbx]
  402660:	jge    0x402681
  402662:	add    BYTE PTR [rax],al
  402664:	add    al,0x2
  402666:	jnp    0x40268b
  402668:	add    BYTE PTR [rax],al
  40266a:	add    al,0x19
  40266c:	outs   dx,DWORD PTR ds:[rsi]
  40266d:	pop    rdi
  40266e:	add    BYTE PTR [rax],al
  402670:	or     al,BYTE PTR [rdx]
  402672:	jnp    0x402697
  402674:	add    BYTE PTR [rax],al
  402676:	add    al,0x28
  402678:	sub    eax,DWORD PTR [rax]
  40267a:	add    BYTE PTR [rsi],al
  40267c:	outs   dx,DWORD PTR ds:[rsi]
  40267d:	(bad)  
  40267e:	add    BYTE PTR [rax],al
  402680:	or     al,BYTE PTR [rdx]
  402682:	jnp    0x4026ab
  402684:	add    BYTE PTR [rax],al
  402686:	add    al,0x19
  402688:	outs   dx,DWORD PTR ds:[rsi]
  402689:	pop    rdi
  40268a:	add    BYTE PTR [rax],al
  40268c:	or     al,BYTE PTR [rdx]
  40268e:	jnp    0x4026b7
  402690:	add    BYTE PTR [rax],al
  402692:	add    al,0x28
  402694:	sub    eax,0x6f060000
  402699:	(bad)  
  40269a:	add    BYTE PTR [rax],al
  40269c:	or     al,BYTE PTR [rdx]
  40269e:	jnp    0x4026c6
  4026a0:	add    BYTE PTR [rax],al
  4026a2:	add    al,0x19
  4026a4:	outs   dx,DWORD PTR ds:[rsi]
  4026a5:	pop    rdi
  4026a6:	add    BYTE PTR [rax],al
  4026a8:	or     al,BYTE PTR [rdx]
  4026aa:	jnp    0x4026d2
  4026ac:	add    BYTE PTR [rax],al
  4026ae:	add    al,0x28
  4026b0:	sub    al,0x0
  4026b2:	add    BYTE PTR [rsi],al
  4026b4:	outs   dx,DWORD PTR ds:[rsi]
  4026b5:	(bad)  
  4026b6:	add    BYTE PTR [rax],al
  4026b8:	or     ch,BYTE PTR [rdx]
  4026ba:	xor    al,BYTE PTR [rdx]
  4026bc:	jnp    0x4026dd
  4026be:	add    BYTE PTR [rax],al
  4026c0:	add    al,0x6f
  4026c2:	adc    eax,0x2a060000
  4026c7:	xor    al,BYTE PTR [rdx]
  4026c9:	jnp    0x4026ea
  4026cb:	add    BYTE PTR [rax],al
  4026cd:	add    al,0x6f
  4026cf:	(bad)  
  4026d0:	add    BYTE PTR [rax],al
  4026d2:	(bad)  
  4026d3:	sub    dh,BYTE PTR [rdx]
  4026d5:	add    bh,BYTE PTR [rbx+0x1f]
  4026d8:	add    BYTE PTR [rax],al
  4026da:	add    al,0x6f
  4026dc:	(bad)  
  4026dd:	add    BYTE PTR [rax],al
  4026df:	(bad)  
  4026e0:	sub    bh,BYTE PTR [rdx+0x3]
  4026e3:	sub    al,0x13
  4026e5:	add    bh,BYTE PTR [rbx+0x20]
  4026e8:	add    BYTE PTR [rax],al
  4026ea:	add    al,0x2c
  4026ec:	or     eax,DWORD PTR [rdx]
  4026ee:	jnp    0x402710
  4026f0:	add    BYTE PTR [rax],al
  4026f2:	add    al,0x6f
  4026f4:	add    BYTE PTR [r8],al
  4026f7:	or     al,BYTE PTR [rdx]
  4026f9:	add    ebp,DWORD PTR [rax]
  4026fb:	(bad)  
  4026fc:	add    BYTE PTR [rax],al
  4026fe:	or     ch,BYTE PTR [rdx]
  402700:	adc    esi,DWORD PTR [rax]
  402702:	add    al,0x0
  402704:	in     eax,0x4
  402706:	add    BYTE PTR [rax],al
  402708:	add    al,0x0
  40270a:	add    BYTE PTR [rcx],dl
  40270c:	add    dh,BYTE PTR [rbx+0x62]
  40270f:	add    BYTE PTR [rax],al
  402711:	or     bh,BYTE PTR [rbp+0x20]
  402714:	add    BYTE PTR [rax],al
  402716:	add    al,0xd0
  402718:	(bad)  
  402719:	add    BYTE PTR [rax],al
  40271b:	add    ch,BYTE PTR [rax]
  40271d:	(bad)  
  40271e:	add    BYTE PTR [rax],al
  402720:	or     dh,BYTE PTR [rbx+0x4a]
  402723:	add    BYTE PTR [rax],al
  402725:	or     cl,BYTE PTR [rdx]
  402727:	add    al,BYTE PTR [rdx]
  402729:	jnp    0x40274b
  40272b:	add    BYTE PTR [rax],al
  40272d:	add    al,0x73
  40272f:	movsxd eax,DWORD PTR [rax]
  402731:	add    BYTE PTR [rdx],cl
  402733:	jge    0x402756
  402735:	add    BYTE PTR [rax],al
  402737:	add    al,0x2
  402739:	jae    0x40279f
  40273b:	add    BYTE PTR [rax],al
  40273d:	or     bh,BYTE PTR [rbp+0x22]
  402740:	add    BYTE PTR [rax],al
  402742:	add    al,0x2
  402744:	jae    0x4027ab
  402746:	add    BYTE PTR [rax],al
  402748:	or     bh,BYTE PTR [rbp+0x24]
  40274b:	add    BYTE PTR [rax],al
  40274d:	add    al,0x2
  40274f:	jae    0x4027b7
  402751:	add    BYTE PTR [rax],al
  402753:	or     bh,BYTE PTR [rbp+0x25]
  402756:	add    BYTE PTR [rax],al
  402758:	add    al,0x2
  40275a:	jae    0x4027c1
  40275c:	add    BYTE PTR [rax],al
  40275e:	or     bh,BYTE PTR [rbp+0x28]
  402761:	add    BYTE PTR [rax],al
  402763:	add    al,0x2
  402765:	jae    0x4027cd
  402767:	add    BYTE PTR [rax],al
  402769:	or     bh,BYTE PTR [rbp+0x29]
  40276c:	add    BYTE PTR [rax],al
  40276e:	add    al,0x2
  402770:	jae    0x4027d7
  402772:	add    BYTE PTR [rax],al
  402774:	or     bh,BYTE PTR [rbp+0x2a]
  402777:	add    BYTE PTR [rax],al
  402779:	add    al,0x2
  40277b:	jae    0x4027e3
  40277d:	add    BYTE PTR [rax],al
  40277f:	or     bh,BYTE PTR [rbp+0x2b]
  402782:	add    BYTE PTR [rax],al
  402784:	add    al,0x2
  402786:	jae    0x4027ef
  402788:	add    BYTE PTR [rax],al
  40278a:	or     bh,BYTE PTR [rbp+0x27]
  40278d:	add    BYTE PTR [rax],al
  40278f:	add    al,0x2
  402791:	jae    0x4027fa
  402793:	add    BYTE PTR [rax],al
  402795:	or     bh,BYTE PTR [rbp+0x23]
  402798:	add    BYTE PTR [rax],al
  40279a:	add    al,0x2
  40279c:	jae    0x402805
  40279e:	add    BYTE PTR [rax],al
  4027a0:	or     bh,BYTE PTR [rbp+0x26]
  4027a3:	add    BYTE PTR [rax],al
  4027a5:	add    al,0x2
  4027a7:	jnp    0x4027ca
  4027a9:	add    BYTE PTR [rax],al
  4027ab:	add    al,0x6f
  4027ad:	push   0x20a0000
  4027b2:	jnp    0x4027d6
  4027b4:	add    BYTE PTR [rax],al
  4027b6:	add    al,0x6f
  4027b8:	rex.WR add BYTE PTR [rax],r8b
  4027bb:	or     al,BYTE PTR [rdx]
  4027bd:	jnp    0x4027e6
  4027bf:	add    BYTE PTR [rax],al
  4027c1:	add    al,0x6f
  4027c3:	push   0x20a0000
  4027c8:	jnp    0x4027ed
  4027ca:	add    BYTE PTR [rax],al
  4027cc:	add    al,0x6f
  4027ce:	push   0x20a0000
  4027d3:	jnp    0x4027fb
  4027d5:	add    BYTE PTR [rax],al
  4027d7:	add    al,0x6f
  4027d9:	push   0x20a0000
  4027de:	sub    BYTE PTR [rax+rax*1+0x0],cl
  4027e2:	or     al,BYTE PTR [rsi]
  4027e4:	add    bh,BYTE PTR [rbx+0x22]
  4027e7:	add    BYTE PTR [rax],al
  4027e9:	add    al,0x72
  4027eb:	jrcxz  0x4027ee
  4027ed:	add    BYTE PTR [rax+0x6f],dh
  4027f0:	rex.WRB add BYTE PTR [r8],r8b
  4027f3:	or     al,BYTE PTR [rdx]
  4027f5:	jnp    0x402819
  4027f7:	add    BYTE PTR [rax],al
  4027f9:	add    al,0x6f
  4027fb:	imul   eax,DWORD PTR [rax],0x7b020a00
  402801:	(bad)  
  402802:	add    BYTE PTR [rax],al
  402804:	add    al,0x16
  402806:	sbb    ch,BYTE PTR [rdi+0x6a]
  402809:	add    BYTE PTR [rax],al
  40280b:	or     al,BYTE PTR [rdx]
  40280d:	jnp    0x402831
  40280f:	add    BYTE PTR [rax],al
  402811:	add    al,0x6f
  402813:	imul   eax,DWORD PTR [rax],0x7b020a00
  402819:	sub    BYTE PTR [rax],al
  40281b:	add    BYTE PTR [rdi+rdx*1],al
  40281e:	sbb    BYTE PTR [rdi+0x6a],ch
  402821:	add    BYTE PTR [rax],al
  402823:	or     al,BYTE PTR [rdx]
  402825:	jnp    0x402849
  402827:	add    BYTE PTR [rax],al
  402829:	add    al,0x6f
  40282b:	imul   eax,DWORD PTR [rax],0x7b020a00
  402831:	and    eax,DWORD PTR [rax]
  402833:	add    BYTE PTR [rsi+rdx*1],al
  402836:	(bad)  
  402837:	outs   dx,DWORD PTR ds:[rsi]
  402838:	push   0x0
  40283a:	add    BYTE PTR [rdx],cl
  40283c:	add    bh,BYTE PTR [rbx+0x22]
  40283f:	add    BYTE PTR [rax],al
  402841:	add    al,0x6f
  402843:	imul   eax,DWORD PTR [rax],0x7b020a00
  402849:	and    al,0x0
  40284b:	add    BYTE PTR [rdi+rdx*1],al
  40284e:	(bad)  
  40284f:	outs   dx,DWORD PTR ds:[rsi]
  402850:	push   0x0
  402852:	add    BYTE PTR [rdx],cl
  402854:	add    bh,BYTE PTR [rbx+0x22]
  402857:	add    BYTE PTR [rax],al
  402859:	add    al,0x6f
  40285b:	imul   eax,DWORD PTR [rax],0x7b020a00
  402861:	and    eax,0x17040000
  402866:	(bad)  
  402867:	outs   dx,DWORD PTR ds:[rsi]
  402868:	push   0x0
  40286a:	add    BYTE PTR [rdx],cl
  40286c:	add    bh,BYTE PTR [rbx+0x22]
  40286f:	add    BYTE PTR [rax],al
  402871:	add    al,0x6f
  402873:	imul   eax,DWORD PTR [rax],0x7b020a00
  402879:	add    BYTE PTR es:[rax],al
  40287c:	add    al,0x16
  40287e:	sbb    BYTE PTR [rdi+0x6a],ch
  402881:	add    BYTE PTR [rax],al
  402883:	or     al,BYTE PTR [rdx]
  402885:	jnp    0x4028a9
  402887:	add    BYTE PTR [rax],al
  402889:	add    al,0x6f
  40288b:	imul   eax,DWORD PTR [rax],0x7b020a00
  402891:	sub    DWORD PTR [rax],eax
  402893:	add    BYTE PTR [rdi+rdx*1],al
  402896:	sbb    DWORD PTR [rdi+0x6a],ebp
  402899:	add    BYTE PTR [rax],al
  40289b:	or     al,BYTE PTR [rdx]
  40289d:	jnp    0x4028c1
  40289f:	add    BYTE PTR [rax],al
  4028a1:	add    al,0x6f
  4028a3:	imul   eax,DWORD PTR [rax],0x7b020a00
  4028a9:	sub    al,BYTE PTR [rax]
  4028ab:	add    BYTE PTR [rdi+rdx*1],al
  4028ae:	sbb    ch,BYTE PTR [rdi+0x6a]
  4028b1:	add    BYTE PTR [rax],al
  4028b3:	or     al,BYTE PTR [rdx]
  4028b5:	jnp    0x4028d9
  4028b7:	add    BYTE PTR [rax],al
  4028b9:	add    al,0x6f
  4028bb:	imul   eax,DWORD PTR [rax],0x7b020a00
  4028c1:	sub    eax,DWORD PTR [rax]
  4028c3:	add    BYTE PTR [rdi+rdx*1],al
  4028c6:	sbb    ebp,DWORD PTR [rdi+0x6a]
  4028c9:	add    BYTE PTR [rax],al
  4028cb:	or     al,BYTE PTR [rdx]
  4028cd:	jnp    0x4028f1
  4028cf:	add    BYTE PTR [rax],al
  4028d1:	add    al,0x72
  4028d3:	jrcxz  0x4028d6
  4028d5:	add    BYTE PTR [rax+0x6f],dh
  4028d8:	push   rax
  4028d9:	add    BYTE PTR [rax],al
  4028db:	or     al,BYTE PTR [rsi]
  4028dd:	add    bh,BYTE PTR [rbx+0x24]
  4028e0:	add    BYTE PTR [rax],al
  4028e2:	add    al,0x72
  4028e4:	(bad)  
  4028e5:	add    al,BYTE PTR [rax]
  4028e7:	jo     0x402958
  4028e9:	rex.WRB add BYTE PTR [r8],r8b
  4028ec:	or     al,BYTE PTR [rdx]
  4028ee:	jnp    0x402914
  4028f0:	add    BYTE PTR [rax],al
  4028f2:	add    al,0x72
  4028f4:	(bad)  
  4028f5:	add    al,BYTE PTR [rax]
  4028f7:	jo     0x402968
  4028f9:	push   rax
  4028fa:	add    BYTE PTR [rax],al
  4028fc:	or     al,BYTE PTR [rdx]
  4028fe:	jnp    0x402924
  402900:	add    BYTE PTR [rax],al
  402902:	add    al,0x17
  402904:	outs   dx,DWORD PTR ds:[rsi]
  402905:	imul   eax,DWORD PTR [rax],0x0
  402908:	or     al,BYTE PTR [rdx]
  40290a:	jnp    0x40292d
  40290c:	add    BYTE PTR [rax],al
  40290e:	add    al,0x2
  402910:	jnp    0x402936
  402912:	add    BYTE PTR [rax],al
  402914:	add    al,0x18
  402916:	outs   dx,DWORD PTR ds:[rsi]
  402917:	ins    BYTE PTR es:[rdi],dx
  402918:	add    BYTE PTR [rax],al
  40291a:	or     al,BYTE PTR [rdx]
  40291c:	jnp    0x402942
  40291e:	add    BYTE PTR [rax],al
  402920:	add    al,0x2
  402922:	inc    BYTE PTR [rsi]
  402924:	and    al,BYTE PTR [rax]
  402926:	add    BYTE PTR [rsi],al
  402928:	jae    0x402997
  40292a:	add    BYTE PTR [rax],al
  40292c:	or     ch,BYTE PTR [rdi+0x6e]
  40292f:	add    BYTE PTR [rax],al
  402931:	or     al,BYTE PTR [rsi]
  402933:	add    bh,BYTE PTR [rbx+0x25]
  402936:	add    BYTE PTR [rax],al
  402938:	add    al,0x72
  40293a:	(bad)  
  40293b:	add    al,BYTE PTR [rax]
  40293d:	jo     0x4029ae
  40293f:	rex.WRB add BYTE PTR [r8],r8b
  402942:	or     al,BYTE PTR [rdx]
  402944:	jnp    0x40296b
  402946:	add    BYTE PTR [rax],al
  402948:	add    al,0x72
  40294a:	(bad)  
  40294b:	add    al,BYTE PTR [rax]
  40294d:	jo     0x4029be
  40294f:	push   rax
  402950:	add    BYTE PTR [rax],al
  402952:	or     al,BYTE PTR [rsi]
  402954:	add    bh,BYTE PTR [rbx+0x28]
  402957:	add    BYTE PTR [rax],al
  402959:	add    al,0x72
  40295b:	pop    rbp
  40295c:	add    al,BYTE PTR [rax]
  40295e:	jo     0x4029cf
  402960:	rex.WRB add BYTE PTR [r8],r8b
  402963:	or     al,BYTE PTR [rdx]
  402965:	jnp    0x40298f
  402967:	add    BYTE PTR [rax],al
  402969:	add    al,0x72
  40296b:	pop    rbp
  40296c:	add    al,BYTE PTR [rax]
  40296e:	jo     0x4029df
  402970:	push   rax
  402971:	add    BYTE PTR [rax],al
  402973:	or     al,BYTE PTR [rdx]
  402975:	jnp    0x40299f
  402977:	add    BYTE PTR [rax],al
  402979:	add    al,0x17
  40297b:	outs   dx,DWORD PTR ds:[rsi]
  40297c:	imul   eax,DWORD PTR [rax],0x0
  40297f:	or     al,BYTE PTR [rdx]
  402981:	jnp    0x4029a4
  402983:	add    BYTE PTR [rax],al
  402985:	add    al,0x2
  402987:	jnp    0x4029b1
  402989:	add    BYTE PTR [rax],al
  40298b:	add    al,0x18
  40298d:	outs   dx,DWORD PTR ds:[rsi]
  40298e:	ins    BYTE PTR es:[rdi],dx
  40298f:	add    BYTE PTR [rax],al
  402991:	or     al,BYTE PTR [rdx]
  402993:	jnp    0x4029bd
  402995:	add    BYTE PTR [rax],al
  402997:	add    al,0x2
  402999:	inc    BYTE PTR [rsi]
  40299b:	and    eax,DWORD PTR [rax]
  40299d:	add    BYTE PTR [rsi],al
  40299f:	jae    0x402a0e
  4029a1:	add    BYTE PTR [rax],al
  4029a3:	or     ch,BYTE PTR [rdi+0x6e]
  4029a6:	add    BYTE PTR [rax],al
  4029a8:	or     al,BYTE PTR [rsi]
  4029aa:	add    bh,BYTE PTR [rbx+0x29]
  4029ad:	add    BYTE PTR [rax],al
  4029af:	add    al,0x72
  4029b1:	jge    0x4029b5
  4029b3:	add    BYTE PTR [rax+0x6f],dh
  4029b6:	rex.WRB add BYTE PTR [r8],r8b
  4029b9:	or     al,BYTE PTR [rdx]
  4029bb:	jnp    0x4029e6
  4029bd:	add    BYTE PTR [rax],al
  4029bf:	add    al,0x72
  4029c1:	jge    0x4029c5
  4029c3:	add    BYTE PTR [rax+0x6f],dh
  4029c6:	push   rax
  4029c7:	add    BYTE PTR [rax],al
  4029c9:	or     al,BYTE PTR [rsi]
  4029cb:	add    bh,BYTE PTR [rbx+0x2a]
  4029ce:	add    BYTE PTR [rax],al
  4029d0:	add    al,0x72
  4029d2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4029d3:	add    al,BYTE PTR [rax]
  4029d5:	jo     0x402a46
  4029d7:	rex.WRB add BYTE PTR [r8],r8b
  4029da:	or     al,BYTE PTR [rdx]
  4029dc:	jnp    0x402a08
  4029de:	add    BYTE PTR [rax],al
  4029e0:	add    al,0x72
  4029e2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4029e3:	add    al,BYTE PTR [rax]
  4029e5:	jo     0x402a56
  4029e7:	push   rax
  4029e8:	add    BYTE PTR [rax],al
  4029ea:	or     al,BYTE PTR [rdx]
  4029ec:	jnp    0x402a18
  4029ee:	add    BYTE PTR [rax],al
  4029f0:	add    al,0x17
  4029f2:	outs   dx,DWORD PTR ds:[rsi]
  4029f3:	imul   eax,DWORD PTR [rax],0x0
  4029f6:	or     al,BYTE PTR [rdx]
  4029f8:	jnp    0x402a1b
  4029fa:	add    BYTE PTR [rax],al
  4029fc:	add    al,0x2
  4029fe:	jnp    0x402a2a
  402a00:	add    BYTE PTR [rax],al
  402a02:	add    al,0x18
  402a04:	outs   dx,DWORD PTR ds:[rsi]
  402a05:	ins    BYTE PTR es:[rdi],dx
  402a06:	add    BYTE PTR [rax],al
  402a08:	or     al,BYTE PTR [rdx]
  402a0a:	jnp    0x402a36
  402a0c:	add    BYTE PTR [rax],al
  402a0e:	add    al,0x2
  402a10:	inc    BYTE PTR [rsi]
  402a12:	and    al,0x0
  402a14:	add    BYTE PTR [rsi],al
  402a16:	jae    0x402a85
  402a18:	add    BYTE PTR [rax],al
  402a1a:	or     ch,BYTE PTR [rdi+0x6e]
  402a1d:	add    BYTE PTR [rax],al
  402a1f:	or     al,BYTE PTR [rsi]
  402a21:	add    bh,BYTE PTR [rbx+0x2b]
  402a24:	add    BYTE PTR [rax],al
  402a26:	add    al,0x72
  402a28:	(bad)  
  402a29:	add    al,BYTE PTR [rax]
  402a2b:	jo     0x402a9c
  402a2d:	rex.WRB add BYTE PTR [r8],r8b
  402a30:	or     al,BYTE PTR [rdx]
  402a32:	jnp    0x402a5f
  402a34:	add    BYTE PTR [rax],al
  402a36:	add    al,0x72
  402a38:	(bad)  
  402a39:	add    al,BYTE PTR [rax]
  402a3b:	jo     0x402aac
  402a3d:	push   rax
  402a3e:	add    BYTE PTR [rax],al
  402a40:	or     al,BYTE PTR [rdx]
  402a42:	jnp    0x402a65
  402a44:	add    BYTE PTR [rax],al
  402a46:	add    al,0x2
  402a48:	jnp    0x402a71
  402a4a:	add    BYTE PTR [rax],al
  402a4c:	add    al,0x18
  402a4e:	outs   dx,DWORD PTR ds:[rsi]
  402a4f:	outs   dx,DWORD PTR ds:[rsi]
  402a50:	add    BYTE PTR [rax],al
  402a52:	or     al,BYTE PTR [rsi]
  402a54:	add    bh,BYTE PTR [rbx+0x27]
  402a57:	add    BYTE PTR [rax],al
  402a59:	add    al,0x72
  402a5b:	jrcxz  0x402a5f
  402a5d:	add    BYTE PTR [rax+0x6f],dh
  402a60:	rex.WRB add BYTE PTR [r8],r8b
  402a63:	or     al,BYTE PTR [rdx]
  402a65:	jnp    0x402a8e
  402a67:	add    BYTE PTR [rax],al
  402a69:	add    al,0x72
  402a6b:	jrcxz  0x402a6f
  402a6d:	add    BYTE PTR [rax+0x6f],dh
  402a70:	push   rax
  402a71:	add    BYTE PTR [rax],al
  402a73:	or     al,BYTE PTR [rdx]
  402a75:	jnp    0x402a99
  402a77:	add    BYTE PTR [rax],al
  402a79:	add    al,0x2
  402a7b:	jnp    0x402aa4
  402a7d:	add    BYTE PTR [rax],al
  402a7f:	add    al,0x18
  402a81:	outs   dx,DWORD PTR ds:[rsi]
  402a82:	jo     0x402a84
  402a84:	add    BYTE PTR [rdx],cl
  402a86:	add    bh,BYTE PTR [rbx+0x27]
  402a89:	add    BYTE PTR [rax],al
  402a8b:	add    al,0x16
  402a8d:	outs   dx,DWORD PTR ds:[rsi]
  402a8e:	jno    0x402a90
  402a90:	add    BYTE PTR [rdx],cl
  402a92:	add    bh,BYTE PTR [rbx+0x21]
  402a95:	add    BYTE PTR [rax],al
  402a97:	add    al,0x2
  402a99:	jnp    0x402ac2
  402a9b:	add    BYTE PTR [rax],al
  402a9d:	add    al,0x18
  402a9f:	outs   dx,DWORD PTR ds:[rsi]
  402aa0:	ins    BYTE PTR es:[rdi],dx
  402aa1:	add    BYTE PTR [rax],al
  402aa3:	or     al,BYTE PTR [rdx]
  402aa5:	jnp    0x402ac8
  402aa7:	add    BYTE PTR [rax],al
  402aa9:	add    al,0x2
  402aab:	jnp    0x402ad0
  402aad:	add    BYTE PTR [rax],al
  402aaf:	add    al,0x18
  402ab1:	outs   dx,DWORD PTR ds:[rsi]
  402ab2:	outs   dx,DWORD PTR ds:[rsi]
  402ab3:	add    BYTE PTR [rax],al
  402ab5:	or     al,BYTE PTR [rsi]
  402ab7:	add    bh,BYTE PTR [rbx+0x23]
  402aba:	add    BYTE PTR [rax],al
  402abc:	add    al,0x72
  402abe:	adc    eax,0x6f700003
  402ac3:	rex.WRB add BYTE PTR [r8],r8b
  402ac6:	or     al,BYTE PTR [rdx]
  402ac8:	jnp    0x402aed
  402aca:	add    BYTE PTR [rax],al
  402acc:	add    al,0x72
  402ace:	adc    eax,0x6f700003
  402ad3:	push   rax
  402ad4:	add    BYTE PTR [rax],al
  402ad6:	or     al,BYTE PTR [rdx]
  402ad8:	jnp    0x402afc
  402ada:	add    BYTE PTR [rax],al
  402adc:	add    al,0x2
  402ade:	jnp    0x402b03
  402ae0:	add    BYTE PTR [rax],al
  402ae2:	add    al,0x18
  402ae4:	outs   dx,DWORD PTR ds:[rsi]
  402ae5:	jo     0x402ae7
  402ae7:	add    BYTE PTR [rdx],cl
  402ae9:	add    bh,BYTE PTR [rbx+0x23]
  402aec:	add    BYTE PTR [rax],al
  402aee:	add    al,0x16
  402af0:	outs   dx,DWORD PTR ds:[rsi]
  402af1:	jno    0x402af3
  402af3:	add    BYTE PTR [rdx],cl
  402af5:	add    bh,BYTE PTR [rbx+0x21]
  402af8:	add    BYTE PTR [rax],al
  402afa:	add    al,0x2
  402afc:	jnp    0x402b21
  402afe:	add    BYTE PTR [rax],al
  402b00:	add    al,0x18
  402b02:	outs   dx,DWORD PTR ds:[rsi]
  402b03:	ins    BYTE PTR es:[rdi],dx
  402b04:	add    BYTE PTR [rax],al
  402b06:	or     al,BYTE PTR [rdx]
  402b08:	jnp    0x402b2b
  402b0a:	add    BYTE PTR [rax],al
  402b0c:	add    al,0x2
  402b0e:	jnp    0x402b36
  402b10:	add    BYTE PTR [rax],al
  402b12:	add    al,0x18
  402b14:	outs   dx,DWORD PTR ds:[rsi]
  402b15:	outs   dx,DWORD PTR ds:[rsi]
  402b16:	add    BYTE PTR [rax],al
  402b18:	or     al,BYTE PTR [rsi]
  402b1a:	add    bh,BYTE PTR [rbx+0x26]
  402b1d:	add    BYTE PTR [rax],al
  402b1f:	add    al,0x72
  402b21:	(bad)  
  402b22:	add    eax,DWORD PTR [rax]
  402b24:	jo     0x402b95
  402b26:	rex.WRB add BYTE PTR [r8],r8b
  402b29:	or     al,BYTE PTR [rdx]
  402b2b:	jnp    0x402b53
  402b2d:	add    BYTE PTR [rax],al
  402b2f:	add    al,0x72
  402b31:	(bad)  
  402b32:	add    eax,DWORD PTR [rax]
  402b34:	jo     0x402ba5
  402b36:	push   rax
  402b37:	add    BYTE PTR [rax],al
  402b39:	or     al,BYTE PTR [rdx]
  402b3b:	jnp    0x402b5f
  402b3d:	add    BYTE PTR [rax],al
  402b3f:	add    al,0x2
  402b41:	jnp    0x402b69
  402b43:	add    BYTE PTR [rax],al
  402b45:	add    al,0x18
  402b47:	outs   dx,DWORD PTR ds:[rsi]
  402b48:	jo     0x402b4a
  402b4a:	add    BYTE PTR [rdx],cl
  402b4c:	add    bh,BYTE PTR [rbx+0x26]
  402b4f:	add    BYTE PTR [rax],al
  402b51:	add    al,0x16
  402b53:	outs   dx,DWORD PTR ds:[rsi]
  402b54:	jno    0x402b56
  402b56:	add    BYTE PTR [rdx],cl
  402b58:	add    bh,BYTE PTR [rbx+0x21]
  402b5b:	add    BYTE PTR [rax],al
  402b5d:	add    al,0x2
  402b5f:	jnp    0x402b87
  402b61:	add    BYTE PTR [rax],al
  402b63:	add    al,0x18
  402b65:	outs   dx,DWORD PTR ds:[rsi]
  402b66:	ins    BYTE PTR es:[rdi],dx
  402b67:	add    BYTE PTR [rax],al
  402b69:	or     al,BYTE PTR [rsi]
  402b6b:	add    dh,BYTE PTR [rdx-0x3d]
  402b6e:	add    DWORD PTR [rax],eax
  402b70:	jo     0x402be1
  402b72:	rex.WRB add BYTE PTR [r8],r8b
  402b75:	or     al,BYTE PTR [rdx]
  402b77:	(bad)  
  402b78:	sub    BYTE PTR [rcx+0x0],dl
  402b7b:	add    BYTE PTR [rdx],cl
  402b7d:	add    ch,BYTE PTR [rax]
  402b7f:	(bad)  
  402b80:	add    BYTE PTR [rax],al
  402b82:	or     al,BYTE PTR [rdx]
  402b84:	jnp    0x402ba8
  402b86:	add    BYTE PTR [rax],al
  402b88:	add    al,0x6f
  402b8a:	and    BYTE PTR [rax],al
  402b8c:	add    BYTE PTR [rdx],cl
  402b8e:	add    bh,BYTE PTR [rbx+0x21]
  402b91:	add    BYTE PTR [rax],al
  402b93:	add    al,0x2
  402b95:	(bad)  
  402b96:	outs   dx,DWORD PTR ds:[rsi]
  402b97:	jb     0x402b99
  402b99:	add    BYTE PTR [rdx],cl
  402b9b:	add    dh,BYTE PTR [rdx+0x61]
  402b9e:	add    eax,DWORD PTR [rax]
  402ba0:	jo     0x402bca
  402ba2:	push   rax
  402ba3:	add    BYTE PTR [rax],al
  402ba5:	or     al,BYTE PTR [rdx]
  402ba7:	jnp    0x402bca
  402ba9:	add    BYTE PTR [rax],al
  402bab:	add    al,0x6f
  402bad:	jae    0x402baf
  402baf:	add    BYTE PTR [rdx],cl
  402bb1:	add    bh,BYTE PTR [rbx+0x22]
  402bb4:	add    BYTE PTR [rax],al
  402bb6:	add    al,0x16
  402bb8:	outs   dx,DWORD PTR ds:[rsi]
  402bb9:	pop    rcx
  402bba:	add    BYTE PTR [rax],al
  402bbc:	or     al,BYTE PTR [rdx]
  402bbe:	jnp    0x402be2
  402bc0:	add    BYTE PTR [rax],al
  402bc2:	add    al,0x6f
  402bc4:	je     0x402bc6
  402bc6:	add    BYTE PTR [rdx],cl
  402bc8:	add    bh,BYTE PTR [rbx+0x27]
  402bcb:	add    BYTE PTR [rax],al
  402bcd:	add    al,0x6f
  402bcf:	jae    0x402bd1
  402bd1:	add    BYTE PTR [rdx],cl
  402bd3:	add    bh,BYTE PTR [rbx+0x23]
  402bd6:	add    BYTE PTR [rax],al
  402bd8:	add    al,0x6f
  402bda:	jae    0x402bdc
  402bdc:	add    BYTE PTR [rdx],cl
  402bde:	add    bh,BYTE PTR [rbx+0x26]
  402be1:	add    BYTE PTR [rax],al
  402be3:	add    al,0x6f
  402be5:	jae    0x402be7
  402be7:	add    BYTE PTR [rdx],cl
  402be9:	add    dl,BYTE PTR [rsi]
  402beb:	sub    BYTE PTR [rcx+0x0],bl
  402bee:	add    BYTE PTR [rdx],cl
  402bf0:	sub    bl,BYTE PTR [rsi]
  402bf2:	add    ch,BYTE PTR [rax]
  402bf4:	adc    al,BYTE PTR [rax]
  402bf6:	add    BYTE PTR [rdx],cl
  402bf8:	sub    al,BYTE PTR [rax]
  402bfa:	add    BYTE PTR [rax],al
  402bfc:	adc    esi,DWORD PTR [rax]
  402bfe:	add    eax,DWORD PTR [rax]
  402c00:	xor    eax,DWORD PTR [rax]
  402c02:	add    BYTE PTR [rax],al
  402c04:	add    eax,0x7e110000
  402c09:	sub    al,0x0
  402c0b:	add    BYTE PTR [rsp+rdx*1],al
  402c0e:	sub    BYTE PTR [rdi+0x0],dh
  402c11:	add    BYTE PTR [rdx],cl
  402c13:	sub    al,0x20
  402c15:	jb     0x402b9c
  402c17:	add    eax,DWORD PTR [rax]
  402c19:	jo     0x402beb
  402c1b:	or     BYTE PTR [rax],al
  402c1d:	add    BYTE PTR [rdx],al
  402c1f:	sub    BYTE PTR [rsi],dl
  402c21:	add    BYTE PTR [rax],al
  402c23:	or     ch,BYTE PTR [rdi+0x78]
  402c26:	add    BYTE PTR [rax],al
  402c28:	or     dh,BYTE PTR [rbx+0x1a]
  402c2b:	add    BYTE PTR [rax],al
  402c2d:	or     cl,BYTE PTR [rdx]
  402c2f:	(bad)  
  402c30:	sub    BYTE PTR [rax+rax*1],0x0
  402c34:	add    al,0x7e
  402c36:	sub    al,0x0
  402c38:	add    BYTE PTR [rdx+rbp*1],al
  402c3b:	sbb    bh,BYTE PTR [rsi+0x2d]
  402c3e:	add    BYTE PTR [rax],al
  402c40:	add    al,0x2a
  402c42:	(bad)  
  402c43:	add    al,BYTE PTR [rax+0x400002d]
  402c49:	sub    al,BYTE PTR [rax]
  402c4b:	add    BYTE PTR [rbx],dl
  402c4d:	xor    BYTE PTR [rbx],al
  402c4f:	add    BYTE PTR [rax+rax*1],bl
  402c52:	add    BYTE PTR [rax],al
  402c54:	(bad)  
  402c55:	add    BYTE PTR [rax],al
  402c57:	adc    DWORD PTR [rax],ebp
  402c59:	sub    BYTE PTR [rax],al
  402c5b:	add    BYTE PTR [rsi],al
  402c5d:	jb     0x402c50
  402c5f:	add    eax,DWORD PTR [rax]
  402c61:	jo     0x402ce1
  402c63:	sub    eax,0x6f040000
  402c68:	jns    0x402c6a
  402c6a:	add    BYTE PTR [rdx],cl
  402c6c:	or     al,BYTE PTR [rsi]
  402c6e:	je     0x402c84
  402c70:	add    BYTE PTR [rax],al
  402c72:	add    DWORD PTR [rdx],ebp
  402c74:	adc    esi,DWORD PTR [rax]
  402c76:	add    eax,DWORD PTR [rax]
  402c78:	sbb    al,0x0
  402c7a:	add    BYTE PTR [rax],al
  402c7c:	(bad)  
  402c7d:	add    BYTE PTR [rax],al
  402c7f:	adc    DWORD PTR [rax],ebp
  402c81:	sub    BYTE PTR [rax],al
  402c83:	add    BYTE PTR [rsi],al
  402c85:	jb     0x402cca
  402c87:	add    al,0x0
  402c89:	jo     0x402d09
  402c8b:	sub    eax,0x6f040000
  402c90:	jns    0x402c92
  402c92:	add    BYTE PTR [rdx],cl
  402c94:	or     al,BYTE PTR [rsi]
  402c96:	je     0x402cac
  402c98:	add    BYTE PTR [rax],al
  402c9a:	add    DWORD PTR [rdx],ebp
  402c9c:	adc    esi,DWORD PTR [rax]
  402c9e:	add    eax,DWORD PTR [rax]
  402ca0:	sbb    al,0x0
  402ca2:	add    BYTE PTR [rax],al
  402ca4:	(bad)  
  402ca5:	add    BYTE PTR [rax],al
  402ca7:	adc    DWORD PTR [rax],ebp
  402ca9:	sub    BYTE PTR [rax],al
  402cab:	add    BYTE PTR [rsi],al
  402cad:	jb     0x402d2a
  402caf:	add    al,0x0
  402cb1:	jo     0x402d31
  402cb3:	sub    eax,0x6f040000
  402cb8:	jns    0x402cba
  402cba:	add    BYTE PTR [rdx],cl
  402cbc:	or     al,BYTE PTR [rsi]
  402cbe:	je     0x402cd4
  402cc0:	add    BYTE PTR [rax],al
  402cc2:	add    DWORD PTR [rdx],ebp
  402cc4:	add    BYTE PTR [rax],al
  402cc6:	add    BYTE PTR [rax],al
  402cc8:	add    eax,DWORD PTR cs:[rax]
  402ccb:	add    dh,cl
  402ccd:	retf   0xbeef
  402cd0:	add    DWORD PTR [rax],eax
  402cd2:	add    BYTE PTR [rax],al
  402cd4:	xchg   ecx,eax
  402cd5:	add    BYTE PTR [rax],al
  402cd7:	add    BYTE PTR [rbx+rdx*2+0x79],ch
  402cdb:	jae    0x402d51
  402cdd:	gs ins DWORD PTR es:[rdi],dx
  402cdf:	cs push rdx
  402ce1:	gs jae 0x402d53
  402ce4:	jne    0x402d58
  402ce6:	movsxd esp,DWORD PTR [rbp+0x73]
  402ce9:	cs push rdx
  402ceb:	gs jae 0x402d5d
  402cee:	jne    0x402d62
  402cf0:	movsxd esp,DWORD PTR [rbp+0x52]
  402cf3:	gs (bad) 
  402cf5:	fs gs jb 0x402d25
  402cf9:	and    BYTE PTR [rbp+0x73],ch
  402cfc:	movsxd ebp,DWORD PTR [rdi+0x72]
  402cff:	ins    BYTE PTR es:[rdi],dx
  402d00:	imul   esp,DWORD PTR [rdx+0x2c],0x72655620
  402d07:	jae    0x402d72
  402d09:	outs   dx,DWORD PTR ds:[rsi]
  402d0a:	outs   dx,BYTE PTR ds:[rsi]
  402d0b:	cmp    eax,0x2e302e32
  402d10:	xor    BYTE PTR [rsi],ch
  402d12:	xor    BYTE PTR [rax+riz*1],ch
  402d15:	rex.XB jne 0x402d84
  402d18:	je     0x402d8f
  402d1a:	jb     0x402d81
  402d1c:	cmp    eax,0x7475656e
  402d21:	jb     0x402d84
  402d23:	ins    BYTE PTR es:[rdi],dx
  402d24:	sub    al,0x20
  402d26:	push   rax
  402d27:	jne    0x402d8b
  402d29:	ins    BYTE PTR es:[rdi],dx
  402d2a:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  402d31:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  402d35:	(bad)  
  402d36:	(bad)  
  402d37:	(bad)  
  402d38:	(bad)  
  402d39:	xor    eax,0x31363563
  402d3e:	cmp    DWORD PTR [rbx],esi
  402d40:	xor    al,0x65
  402d42:	xor    BYTE PTR [rax],bh
  402d44:	cmp    DWORD PTR [rbx],esp
  402d46:	push   rbx
  402d47:	jns    0x402dbc
  402d49:	je     0x402db0
  402d4b:	ins    DWORD PTR es:[rdi],dx
  402d4c:	cs push rdx
  402d4e:	gs jae 0x402dc0
  402d51:	jne    0x402dc5
  402d53:	movsxd esp,DWORD PTR [rbp+0x73]
  402d56:	cs push rdx
  402d58:	jne    0x402dc8
  402d5a:	je     0x402dc5
  402d5c:	ins    DWORD PTR es:[rdi],dx
  402d5d:	gs push rdx
  402d5f:	gs jae 0x402dd1
  402d62:	jne    0x402dd6
  402d64:	movsxd esp,DWORD PTR [rbp+0x53]
  402d67:	gs je  0x402d6c
  402d6a:	add    BYTE PTR [rax],al
  402d6c:	add    BYTE PTR [rdi],al
  402d6e:	add    BYTE PTR [rax],al
  402d70:	add    BYTE PTR [rax],al
  402d72:	add    BYTE PTR [rax],al
  402d74:	add    BYTE PTR [rax+0x41],dl
  402d77:	rex.R push rax
  402d79:	rex.B
  402d7a:	rex.R push rax
  402d7c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  402d7d:	(bad)  
  402d7e:	ss scas al,BYTE PTR es:[rdi]
  402d80:	movsxd ebp,ebp
  402d82:	mov    WORD PTR [rdi-0x14e0bf9e],gs
  402d88:	rex.X mov al,BYTE PTR [rdi-0x15]
  402d8c:	test   DWORD PTR [rax],eax
  402d8e:	xchg   ebp,eax
  402d8f:	or     eax,0x3ccaf36c
  402d94:	cmc    
  402d95:	scas   al,BYTE PTR es:[rdi]
  402d96:	xor    al,0x6a
  402d98:	add    BYTE PTR [rax],al
  402d9a:	add    BYTE PTR [rax],al
  402d9c:	mov    es,WORD PTR [rax]
  402d9e:	add    BYTE PTR [rax],al
  402da0:	rex.RX add BYTE PTR [rax],r8b
  402da3:	add    BYTE PTR [rbp+0x0],ah
  402da6:	add    BYTE PTR [rax],al
  402da8:	call   0x21402dad
  402dad:	add    BYTE PTR [rax],al
  402daf:	add    BYTE PTR [rbx-0x1d000000],bh
  402db5:	add    DWORD PTR [rax],eax
  402db7:	add    BYTE PTR [rdx+rax*2],bl
  402dba:	add    BYTE PTR [rdx+0x0],dh
  402dbd:	outs   dx,DWORD PTR ds:[rsi]
  402dbe:	add    BYTE PTR [rdi+0x0],dh
  402dc1:	jae    0x402dc3
  402dc3:	add    BYTE PTR gs:[rsi+0x0],al
  402dc7:	outs   dx,DWORD PTR ds:[rsi]
  402dc8:	add    BYTE PTR [rdx+0x0],dh
  402dcb:	rex.WRB add BYTE PTR [r13+0x0],r12b
  402dcf:	add    BYTE PTR fs:[rcx+0x0],ch
  402dd3:	(bad)  
  402dd4:	add    BYTE PTR [rax],al
  402dd6:	add    BYTE PTR [rax],al
  402dd8:	add    BYTE PTR [rax],ah
  402dda:	rex.WB add BYTE PTR [r14+0x0],bpl
  402dde:	jbe    0x402de0
  402de0:	(bad)  
  402de1:	add    BYTE PTR [rax+rax*1+0x69],ch
  402de5:	add    BYTE PTR [rax+rax*1+0x45],ah
  402de9:	add    BYTE PTR [rbp+0x0],ch
  402dec:	jo     0x402dee
  402dee:	je     0x402df0
  402df0:	jns    0x402df2
  402df2:	push   rax
  402df3:	add    BYTE PTR [rcx+0x0],ah
  402df6:	je     0x402df8
  402df8:	push   0x2f00
  402dfd:	add    BYTE PTR [rdx],bl
  402dff:	rex.WB add BYTE PTR [r14+0x0],bpl
  402e03:	jbe    0x402e05
  402e05:	(bad)  
  402e06:	add    BYTE PTR [rax+rax*1+0x69],ch
  402e0a:	add    BYTE PTR [rax+rax*1+0x46],ah
  402e0e:	add    BYTE PTR [rdi+0x0],ch
  402e11:	ins    BYTE PTR es:[rdi],dx
  402e12:	add    BYTE PTR [rax+rax*1+0x65],ah
  402e16:	add    BYTE PTR [rdx+0x0],dh
  402e19:	imul   eax,DWORD PTR [rax],0x49240000
  402e1f:	add    BYTE PTR [rsi+0x0],ch
  402e22:	jbe    0x402e24
  402e24:	(bad)  
  402e25:	add    BYTE PTR [rax+rax*1+0x69],ch
  402e29:	add    BYTE PTR [rax+rax*1+0x46],ah
  402e2d:	add    BYTE PTR [rdi+0x0],ch
  402e30:	ins    BYTE PTR es:[rdi],dx
  402e31:	add    BYTE PTR [rax+rax*1+0x65],ah
  402e35:	add    BYTE PTR [rdx+0x0],dh
  402e38:	push   rsp
  402e39:	add    BYTE PTR [rcx+0x0],ch
  402e3c:	je     0x402e3e
  402e3e:	ins    BYTE PTR es:[rdi],dx
  402e3f:	add    BYTE PTR [rbp+0x0],ah
  402e42:	xchg   DWORD PTR [rax],eax
  402e44:	add    BYTE PTR [rax],al
  402e46:	sub    BYTE PTR [rcx+0x0],cl
  402e49:	outs   dx,BYTE PTR ds:[rsi]
  402e4a:	add    BYTE PTR [rsi+0x0],dh
  402e4d:	(bad)  
  402e4e:	add    BYTE PTR [rax+rax*1+0x69],ch
  402e52:	add    BYTE PTR [rax+rax*1+0x49],ah
  402e56:	add    BYTE PTR [rsi+0x0],ch
  402e59:	jae    0x402e5b
  402e5b:	je     0x402e5d
  402e5d:	(bad)  
  402e5e:	add    BYTE PTR [rax+rax*1+0x6c],ch
  402e62:	add    BYTE PTR [rsi+0x0],al
  402e65:	outs   dx,DWORD PTR ds:[rsi]
  402e66:	add    BYTE PTR [rax+rax*1+0x64],ch
  402e6a:	add    BYTE PTR [rbp+0x0],ah
  402e6d:	jb     0x402e6f
  402e6f:	movabs eax,ds:0x69004d28000000
  402e78:	jae    0x402e7a
  402e7a:	jae    0x402e7c
  402e7c:	imul   eax,DWORD PTR [rax],0x67006e
  402e82:	rex.X add BYTE PTR [rdi+0x0],bpl
  402e86:	outs   dx,DWORD PTR ds:[rsi]
  402e87:	add    BYTE PTR [rax+rax*1+0x73],dh
  402e8b:	add    BYTE PTR [rax+rax*1+0x72],dh
  402e8f:	add    BYTE PTR [rcx+0x0],ah
  402e92:	jo     0x402e94
  402e94:	rex.RX add BYTE PTR [rcx+0x0],r13b
  402e98:	ins    BYTE PTR es:[rdi],dx
  402e99:	add    BYTE PTR [rbp+0x0],ah
  402e9c:	int3   
  402e9d:	add    BYTE PTR [rax],al
  402e9f:	add    BYTE PTR [rdx],cl
  402ea1:	push   rsp
  402ea2:	add    BYTE PTR [rcx+0x0],ch
  402ea5:	je     0x402ea7
  402ea7:	ins    BYTE PTR es:[rdi],dx
  402ea8:	add    BYTE PTR [rbp+0x0],ah
  402eab:	add    DWORD PTR es:[rax],eax
  402eae:	add    BYTE PTR [rcx],al
  402eb0:	sub    eax,0x776f7242
  402eb5:	jae    0x402f1c
  402eb7:	and    BYTE PTR [rsi+0x6f],ah
  402eba:	jb     0x402edc
  402ebc:	push   rbx
  402ebd:	push   rcx
  402ebe:	rex.WR and BYTE PTR [rbx+0x65],r10b
  402ec2:	jb     0x402f3a
  402ec4:	gs jb  0x402ee7
  402ec7:	xor    dh,BYTE PTR [rax]
  402ec9:	xor    BYTE PTR [rax],bh
  402ecb:	and    BYTE PTR [rcx+0x6e],ch
  402ece:	jae    0x402f44
  402ed0:	(bad)  
  402ed1:	ins    BYTE PTR es:[rdi],dx
  402ed2:	ins    BYTE PTR es:[rdi],dx
  402ed3:	(bad)  
  402ed4:	je     0x402f3f
  402ed6:	outs   dx,DWORD PTR ds:[rsi]
  402ed7:	outs   dx,BYTE PTR ds:[rsi]
  402ed8:	and    BYTE PTR [rbp+0x65],ch
  402edb:	imul   esp,DWORD PTR fs:[rcx+0x1],0x65685438
  402ee3:	and    BYTE PTR [rbx+0x65],dh
  402ee6:	ins    BYTE PTR es:[rdi],dx
  402ee7:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  402eec:	and    BYTE PTR [rsi+0x6f],ah
  402eef:	ins    BYTE PTR es:[rdi],dx
  402ef0:	fs gs jb 0x402f14
  402ef4:	imul   esi,DWORD PTR [rbx+0x20],0x20746f6e
  402efb:	(bad)  
  402efc:	and    BYTE PTR [rsi+0x61],dh
  402eff:	ins    BYTE PTR es:[rdi],dx
  402f00:	imul   esp,DWORD PTR [rax+riz*1+0x69],0x6174736e
  402f08:	ins    BYTE PTR es:[rdi],dx
  402f09:	ins    BYTE PTR es:[rdi],dx
  402f0a:	(bad)  
  402f0b:	je     0x402f76
  402f0d:	outs   dx,DWORD PTR ds:[rsi]
  402f0e:	outs   dx,BYTE PTR ds:[rsi]
  402f0f:	and    BYTE PTR [rsi+0x6f],ah
  402f12:	ins    BYTE PTR es:[rdi],dx
  402f13:	fs gs jb 0x402f45
  402f17:	and    BYTE PTR [rcx],al
  402f19:	sbb    al,0x27
  402f1b:	jnp    0x402f4d
  402f1d:	jge    0x402f46
  402f1f:	and    BYTE PTR [rcx+0x73],ch
  402f22:	and    BYTE PTR [rsi+0x6f],ch
  402f25:	je     0x402f47
  402f27:	(bad)  
  402f28:	and    BYTE PTR [rsi+0x61],dh
  402f2b:	ins    BYTE PTR es:[rdi],dx
  402f2c:	imul   esp,DWORD PTR [rax+riz*1+0x66],0x65646c6f
  402f34:	jb     0x402f64
  402f36:	add    DWORD PTR [rax],ebx
  402f38:	push   rsp
  402f39:	push   0x6f662065
  402f3e:	ins    BYTE PTR es:[rdi],dx
  402f3f:	fs gs jb 0x402f63
  402f43:	imul   esi,DWORD PTR [rbx+0x20],0x20746f6e
  402f4a:	jbe    0x402fad
  402f4c:	ins    BYTE PTR es:[rdi],dx
  402f4d:	imul   esp,DWORD PTR [rsi+rbp*1+0x1],0x307b2729
  402f55:	jge    0x402f7e
  402f57:	and    BYTE PTR [rcx+0x73],ch
  402f5a:	and    BYTE PTR [rsi+0x6f],ch
  402f5d:	je     0x402f7f
  402f5f:	(bad)  
  402f60:	and    BYTE PTR [rsi+0x61],dh
  402f63:	ins    BYTE PTR es:[rdi],dx
  402f64:	imul   esp,DWORD PTR [rax+riz*1+0x69],0x6174736e
  402f6c:	ins    BYTE PTR es:[rdi],dx
  402f6d:	ins    BYTE PTR es:[rdi],dx
  402f6e:	(bad)  
  402f6f:	je     0x402fda
  402f71:	outs   dx,DWORD PTR ds:[rsi]
  402f72:	outs   dx,BYTE PTR ds:[rsi]
  402f73:	and    BYTE PTR [rsi+0x6f],ah
  402f76:	ins    BYTE PTR es:[rdi],dx
  402f77:	fs gs jb 0x402fa9
  402f7b:	add    DWORD PTR [rax+0x55],ebx
  402f7e:	outs   dx,BYTE PTR ds:[rsi]
  402f7f:	(bad)  
  402f80:	(bad)  
  402f81:	ins    BYTE PTR es:[rdi],dx
  402f82:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  402f87:	jb     0x402ffe
  402f89:	outs   dx,BYTE PTR ds:[rsi]
  402f8a:	and    BYTE PTR [rax+rbp*2+0x65],dh
  402f8e:	and    BYTE PTR [rcx+0x6e],ch
  402f91:	jae    0x403007
  402f93:	(bad)  
  402f94:	ins    BYTE PTR es:[rdi],dx
  402f95:	ins    BYTE PTR es:[rdi],dx
  402f96:	gs and BYTE PTR fs:[rdx+0x6f],ah
  402f9b:	outs   dx,DWORD PTR ds:[rsi]
  402f9c:	je     0x403011
  402f9e:	je     0x403012
  402fa0:	(bad)  
  402fa1:	jo     0x402fc3
  402fa3:	jo     0x403017
  402fa5:	outs   dx,DWORD PTR ds:[rsi]
  402fa6:	addr32 jb 0x40300a
  402fa9:	ins    DWORD PTR es:[rdi],dx
  402faa:	and    BYTE PTR [rcx+0x73],ah
  402fad:	and    BYTE PTR [rax+rbp*2+0x65],dh
  402fb1:	and    BYTE PTR [rax+0x72],dh
  402fb4:	outs   dx,DWORD PTR ds:[rsi]
  402fb5:	jbe    0x403020
  402fb7:	fs gs and BYTE PTR fs:[rax+0x61],dh
  402fbd:	je     0x403027
  402fbf:	and    BYTE PTR [rdi],ah
  402fc1:	jnp    0x402ff3
  402fc3:	jge    0x402fec
  402fc5:	and    BYTE PTR [rdi+rbp*2+0x65],ah
  402fc9:	jae    0x402feb
  402fcb:	outs   dx,BYTE PTR ds:[rsi]
  402fcc:	outs   dx,DWORD PTR ds:[rsi]
  402fcd:	je     0x402fef
  402fcf:	gs js  0x40303b
  402fd2:	jae    0x403048
  402fd4:	add    DWORD PTR cs:[rbx],esp
  402fd7:	push   rbx
  402fd8:	push   rcx
  402fd9:	rex.WR and BYTE PTR [rbx+0x65],r10b
  402fdd:	jb     0x403055
  402fdf:	gs jb  0x403002
  402fe2:	xor    dh,BYTE PTR [rax]
  402fe4:	xor    BYTE PTR [rax],bh
  402fe6:	and    BYTE PTR [rcx+0x6e],cl
  402fe9:	jae    0x40305f
  402feb:	(bad)  
  402fec:	ins    BYTE PTR es:[rdi],dx
  402fed:	ins    BYTE PTR es:[rdi],dx
  402fee:	(bad)  
  402fef:	je     0x40305a
  402ff1:	outs   dx,DWORD PTR ds:[rsi]
  402ff2:	outs   dx,BYTE PTR ds:[rsi]
  402ff3:	and    BYTE PTR [rbx+0x65],al
  402ff6:	outs   dx,BYTE PTR ds:[rsi]
  402ff7:	je     0x40305e
  402ff9:	jb     0x402ffb
  402ffb:	add    BYTE PTR [rax],al
  402ffd:	add    BYTE PTR [rax],al
  402fff:	add    cl,dh
  403001:	xor    eax,DWORD PTR [rax]
  403003:	add    dh,cl
  403005:	retf   0xbeef
  403008:	add    DWORD PTR [rax],eax
  40300a:	add    BYTE PTR [rax],al
  40300c:	xchg   ecx,eax
  40300d:	add    BYTE PTR [rax],al
  40300f:	add    BYTE PTR [rbx+rdx*2+0x79],ch
  403013:	jae    0x403089
  403015:	gs ins DWORD PTR es:[rdi],dx
  403017:	cs push rdx
  403019:	gs jae 0x40308b
  40301c:	jne    0x403090
  40301e:	movsxd esp,DWORD PTR [rbp+0x73]
  403021:	cs push rdx
  403023:	gs jae 0x403095
  403026:	jne    0x40309a
  403028:	movsxd esp,DWORD PTR [rbp+0x52]
  40302b:	gs (bad) 
  40302d:	fs gs jb 0x40305d
  403031:	and    BYTE PTR [rbp+0x73],ch
  403034:	movsxd ebp,DWORD PTR [rdi+0x72]
  403037:	ins    BYTE PTR es:[rdi],dx
  403038:	imul   esp,DWORD PTR [rdx+0x2c],0x72655620
  40303f:	jae    0x4030aa
  403041:	outs   dx,DWORD PTR ds:[rsi]
  403042:	outs   dx,BYTE PTR ds:[rsi]
  403043:	cmp    eax,0x2e302e32
  403048:	xor    BYTE PTR [rsi],ch
  40304a:	xor    BYTE PTR [rax+riz*1],ch
  40304d:	rex.XB jne 0x4030bc
  403050:	je     0x4030c7
  403052:	jb     0x4030b9
  403054:	cmp    eax,0x7475656e
  403059:	jb     0x4030bc
  40305b:	ins    BYTE PTR es:[rdi],dx
  40305c:	sub    al,0x20
  40305e:	push   rax
  40305f:	jne    0x4030c3
  403061:	ins    BYTE PTR es:[rdi],dx
  403062:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  403069:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40306d:	(bad)  
  40306e:	(bad)  
  40306f:	(bad)  
  403070:	(bad)  
  403071:	xor    eax,0x31363563
  403076:	cmp    DWORD PTR [rbx],esi
  403078:	xor    al,0x65
  40307a:	xor    BYTE PTR [rax],bh
  40307c:	cmp    DWORD PTR [rbx],esp
  40307e:	push   rbx
  40307f:	jns    0x4030f4
  403081:	je     0x4030e8
  403083:	ins    DWORD PTR es:[rdi],dx
  403084:	cs push rdx
  403086:	gs jae 0x4030f8
  403089:	jne    0x4030fd
  40308b:	movsxd esp,DWORD PTR [rbp+0x73]
  40308e:	cs push rdx
  403090:	jne    0x403100
  403092:	je     0x4030fd
  403094:	ins    DWORD PTR es:[rdi],dx
  403095:	gs push rdx
  403097:	gs jae 0x403109
  40309a:	jne    0x40310e
  40309c:	movsxd esp,DWORD PTR [rbp+0x53]
  40309f:	gs je  0x4030a4
  4030a2:	add    BYTE PTR [rax],al
  4030a4:	add    BYTE PTR [rdi],cl
  4030a6:	add    BYTE PTR [rax],al
  4030a8:	add    BYTE PTR [rsi],al
  4030aa:	add    BYTE PTR [rax],al
  4030ac:	add    BYTE PTR [rdi+0x53],ah
  4030af:	jns    0x403124
  4030b1:	je     0x403118
  4030b3:	ins    DWORD PTR es:[rdi],dx
  4030b4:	cs rex.R jb 0x403119
  4030b8:	ja     0x403123
  4030ba:	outs   dx,BYTE PTR ds:[rsi]
  4030bb:	addr32 cs push rbx
  4030be:	imul   edi,DWORD PTR [rdx+0x65],0x53202c46
  4030c5:	jns    0x40313a
  4030c7:	je     0x40312e
  4030c9:	ins    DWORD PTR es:[rdi],dx
  4030ca:	cs rex.R jb 0x40312f
  4030ce:	ja     0x403139
  4030d0:	outs   dx,BYTE PTR ds:[rsi]
  4030d1:	addr32 sub al,0x20
  4030d4:	push   rsi
  4030d5:	gs jb  0x40314b
  4030d8:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4030df:	xor    BYTE PTR cs:[rsi],ch
  4030e2:	xor    BYTE PTR [rax+riz*1],ch
  4030e5:	rex.XB jne 0x403154
  4030e8:	je     0x40315f
  4030ea:	jb     0x403151
  4030ec:	cmp    eax,0x7475656e
  4030f1:	jb     0x403154
  4030f3:	ins    BYTE PTR es:[rdi],dx
  4030f4:	sub    al,0x20
  4030f6:	push   rax
  4030f7:	jne    0x40315b
  4030f9:	ins    BYTE PTR es:[rdi],dx
  4030fa:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  403101:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  403105:	(bad)  
  403106:	xor    BYTE PTR [rbx],dh
  403108:	xor    ax,0x3766
  40310c:	xor    WORD PTR [rcx],si
  40310f:	fs xor eax,0x61336130
  403115:	push   bx
  403117:	jns    0x40318c
  403119:	je     0x403180
  40311b:	ins    DWORD PTR es:[rdi],dx
  40311c:	cs rex.R jb 0x403181
  403120:	ja     0x40318b
  403122:	outs   dx,BYTE PTR ds:[rsi]
  403123:	addr32 cs push rbx
  403126:	imul   edi,DWORD PTR [rdx+0x65],0x7953202c
  40312d:	jae    0x4031a3
  40312f:	gs ins DWORD PTR es:[rdi],dx
  403131:	cs rex.R jb 0x403196
  403135:	ja     0x4031a0
  403137:	outs   dx,BYTE PTR ds:[rsi]
  403138:	addr32 sub al,0x20
  40313b:	push   rsi
  40313c:	gs jb  0x4031b2
  40313f:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  403146:	xor    BYTE PTR cs:[rsi],ch
  403149:	xor    BYTE PTR [rax+riz*1],ch
  40314c:	rex.XB jne 0x4031bb
  40314f:	je     0x4031c6
  403151:	jb     0x4031b8
  403153:	cmp    eax,0x7475656e
  403158:	jb     0x4031bb
  40315a:	ins    BYTE PTR es:[rdi],dx
  40315b:	sub    al,0x20
  40315d:	push   rax
  40315e:	jne    0x4031c2
  403160:	ins    BYTE PTR es:[rdi],dx
  403161:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  403168:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40316c:	(bad)  
  40316d:	xor    BYTE PTR [rbx],dh
  40316f:	xor    ax,0x3766
  403173:	xor    WORD PTR [rcx],si
  403176:	fs xor eax,0x61336130
  40317c:	push   bx
  40317e:	jns    0x4031f3
  403180:	je     0x4031e7
  403182:	ins    DWORD PTR es:[rdi],dx
  403183:	cs rex.R jb 0x4031e8
  403187:	ja     0x4031f2
  403189:	outs   dx,BYTE PTR ds:[rsi]
  40318a:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  403190:	sub    al,0x20
  403192:	push   rbx
  403193:	jns    0x403208
  403195:	je     0x4031fc
  403197:	ins    DWORD PTR es:[rdi],dx
  403198:	cs rex.R jb 0x4031fd
  40319c:	ja     0x403207
  40319e:	outs   dx,BYTE PTR ds:[rsi]
  40319f:	addr32 sub al,0x20
  4031a2:	push   rsi
  4031a3:	gs jb  0x403219
  4031a6:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4031ad:	xor    BYTE PTR cs:[rsi],ch
  4031b0:	xor    BYTE PTR [rax+riz*1],ch
  4031b3:	rex.XB jne 0x403222
  4031b6:	je     0x40322d
  4031b8:	jb     0x40321f
  4031ba:	cmp    eax,0x7475656e
  4031bf:	jb     0x403222
  4031c1:	ins    BYTE PTR es:[rdi],dx
  4031c2:	sub    al,0x20
  4031c4:	push   rax
  4031c5:	jne    0x403229
  4031c7:	ins    BYTE PTR es:[rdi],dx
  4031c8:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4031cf:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4031d3:	(bad)  
  4031d4:	xor    BYTE PTR [rbx],dh
  4031d6:	xor    ax,0x3766
  4031da:	xor    WORD PTR [rcx],si
  4031dd:	fs xor eax,0x61336130
  4031e3:	jg     0x403238
  4031e5:	jns    0x40325a
  4031e7:	je     0x40324e
  4031e9:	ins    DWORD PTR es:[rdi],dx
  4031ea:	cs push rdi
  4031ec:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4031f3:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4031f5:	jb     0x403264
  4031f7:	jae    0x403227
  4031f9:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4031fb:	jb     0x40326a
  4031fd:	push   rbx
  4031fe:	je     0x403261
  403200:	jb     0x403276
  403202:	push   rax
  403203:	outs   dx,DWORD PTR ds:[rsi]
  403204:	jae    0x40326f
  403206:	je     0x403271
  403208:	outs   dx,DWORD PTR ds:[rsi]
  403209:	outs   dx,BYTE PTR ds:[rsi]
  40320a:	sub    al,0x20
  40320c:	push   rbx
  40320d:	jns    0x403282
  40320f:	je     0x403276
  403211:	ins    DWORD PTR es:[rdi],dx
  403212:	cs push rdi
  403214:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40321b:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40321d:	jb     0x40328c
  40321f:	jae    0x40324d
  403221:	and    BYTE PTR [rsi+0x65],dl
  403224:	jb     0x403299
  403226:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40322d:	xor    BYTE PTR cs:[rsi],ch
  403230:	xor    BYTE PTR [rax+riz*1],ch
  403233:	rex.XB jne 0x4032a2
  403236:	je     0x4032ad
  403238:	jb     0x40329f
  40323a:	cmp    eax,0x7475656e
  40323f:	jb     0x4032a2
  403241:	ins    BYTE PTR es:[rdi],dx
  403242:	sub    al,0x20
  403244:	push   rax
  403245:	jne    0x4032a9
  403247:	ins    BYTE PTR es:[rdi],dx
  403248:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40324f:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  403253:	(bad)  
  403254:	(bad)  
  403255:	(bad)  
  403256:	(bad)  
  403257:	xor    eax,0x31363563
  40325c:	cmp    DWORD PTR [rbx],esi
  40325e:	xor    al,0x65
  403260:	xor    BYTE PTR [rax],bh
  403262:	cmp    DWORD PTR [rdi+0x53],esi
  403265:	jns    0x4032da
  403267:	je     0x4032ce
  403269:	ins    DWORD PTR es:[rdi],dx
  40326a:	cs push rdi
  40326c:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  403273:	rex.RX outs dx,DWORD PTR ds:[rsi]
  403275:	jb     0x4032e4
  403277:	jae    0x4032a7
  403279:	rex.R outs dx,DWORD PTR ds:[rsi]
  40327b:	movsxd ebp,DWORD PTR [rbx+0x53]
  40327e:	je     0x4032f9
  403280:	ins    BYTE PTR es:[rdi],dx
  403281:	gs sub al,0x20
  403284:	push   rbx
  403285:	jns    0x4032fa
  403287:	je     0x4032ee
  403289:	ins    DWORD PTR es:[rdi],dx
  40328a:	cs push rdi
  40328c:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  403293:	rex.RX outs dx,DWORD PTR ds:[rsi]
  403295:	jb     0x403304
  403297:	jae    0x4032c5
  403299:	and    BYTE PTR [rsi+0x65],dl
  40329c:	jb     0x403311
  40329e:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4032a5:	xor    BYTE PTR cs:[rsi],ch
  4032a8:	xor    BYTE PTR [rax+riz*1],ch
  4032ab:	rex.XB jne 0x40331a
  4032ae:	je     0x403325
  4032b0:	jb     0x403317
  4032b2:	cmp    eax,0x7475656e
  4032b7:	jb     0x40331a
  4032b9:	ins    BYTE PTR es:[rdi],dx
  4032ba:	sub    al,0x20
  4032bc:	push   rax
  4032bd:	jne    0x403321
  4032bf:	ins    BYTE PTR es:[rdi],dx
  4032c0:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4032c7:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4032cb:	(bad)  
  4032cc:	(bad)  
  4032cd:	(bad)  
  4032ce:	(bad)  
  4032cf:	xor    eax,0x31363563
  4032d4:	cmp    DWORD PTR [rbx],esi
  4032d6:	xor    al,0x65
  4032d8:	xor    BYTE PTR [rax],bh
  4032da:	cmp    DWORD PTR [rdi+0x53],esp
  4032dd:	jns    0x403352
  4032df:	je     0x403346
  4032e1:	ins    DWORD PTR es:[rdi],dx
  4032e2:	cs rex.R jb 0x403347
  4032e6:	ja     0x403351
  4032e8:	outs   dx,BYTE PTR ds:[rsi]
  4032e9:	addr32 cs push rax
  4032ec:	outs   dx,DWORD PTR ds:[rsi]
  4032ed:	imul   ebp,DWORD PTR [rsi+0x74],0x7953202c
  4032f4:	jae    0x40336a
  4032f6:	gs ins DWORD PTR es:[rdi],dx
  4032f8:	cs rex.R jb 0x40335d
  4032fc:	ja     0x403367
  4032fe:	outs   dx,BYTE PTR ds:[rsi]
  4032ff:	addr32 sub al,0x20
  403302:	push   rsi
  403303:	gs jb  0x403379
  403306:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40330d:	xor    BYTE PTR cs:[rsi],ch
  403310:	xor    BYTE PTR [rax+riz*1],ch
  403313:	rex.XB jne 0x403382
  403316:	je     0x40338d
  403318:	jb     0x40337f
  40331a:	cmp    eax,0x7475656e
  40331f:	jb     0x403382
  403321:	ins    BYTE PTR es:[rdi],dx
  403322:	sub    al,0x20
  403324:	push   rax
  403325:	jne    0x403389
  403327:	ins    BYTE PTR es:[rdi],dx
  403328:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40332f:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  403333:	(bad)  
  403334:	xor    BYTE PTR [rbx],dh
  403336:	xor    ax,0x3766
  40333a:	xor    WORD PTR [rcx],si
  40333d:	fs xor eax,0x61336130
  403343:	push   rax
  403344:	rex.X push 0xffffffffffffff9b
  403347:	(bad)  
  403348:	(bad)  
  403349:	sbb    ch,BYTE PTR [rdx-0x134a2a66]
  40334f:	mov    al,0xce
  403351:	cwde   
  403352:	pop    rbx
  403353:	mov    dl,0x6
  403355:	fwait
  403356:	rex mov ebp,0xc7b8febf
  40335c:	cmp    DWORD PTR [rsi-0x3d],ebx
  40335f:	mov    DWORD PTR [rdi-0x46],0x902079f
  403366:	lods   eax,DWORD PTR ds:[rsi]
  403367:	(bad)  
  403368:	std    
  403369:	push   rsp
  40336a:	mov    dl,0x27
  40336c:	push   rbx
  40336d:	cdq    
  40336e:	and    ch,BYTE PTR [rsi+rbp*4]
  403371:	rex.XB icebp 
  403373:	rex.X xchg ecx,eax
  403375:	(bad)  
  403376:	cli    
  403377:	rex.X mov al,0x3a
  40337a:	mov    edx,DWORD PTR [rbx+0x7d]
  40337d:	loopne 0x403314
  40337f:	jo     0x4033dd
  403381:	add    BYTE PTR [rax],al
  403383:	add    BYTE PTR [rax+0x37000000],ah
  403389:	add    BYTE PTR [rax],al
  40338b:	add    BYTE PTR [rax+0x26000001],dl
  403391:	add    DWORD PTR [rax],eax
  403393:	add    BYTE PTR [rip+0xffffffffc7000002],ch        # 0xffffffffc740339b
  403399:	add    DWORD PTR [rax],eax
  40339b:	add    dh,dh
  40339d:	add    DWORD PTR [rax],eax
  40339f:	add    BYTE PTR [rbp+0x1],bl
  4033a2:	add    BYTE PTR [rax],al
  4033a4:	repz add BYTE PTR [rax],al
  4033a7:	add    BYTE PTR [rdx+rax*1+0x0],bl
  4033ab:	add    BYTE PTR [rcx-0x2a000000],bh
  4033b1:	add    BYTE PTR [rax],al
  4033b3:	add    BYTE PTR [rbp+0x0],dh
  4033b6:	add    BYTE PTR [rax],al
  4033b8:	add    BYTE PTR [rax],al
  4033ba:	add    BYTE PTR [rax],al
  4033bc:	rex.WRXB (bad) 
  4033be:	add    BYTE PTR [rax],al
  4033c0:	xor    ah,BYTE PTR [rax+rax*1]
  4033c3:	je     0x4033c5
  4033c5:	push   0x73006900
  4033ca:	add    BYTE PTR [rsi],ch
  4033cc:	add    BYTE PTR [rcx+0x0],al
  4033cf:	jne    0x4033d1
  4033d1:	je     0x4033d3
  4033d3:	outs   dx,DWORD PTR ds:[rsi]
  4033d4:	add    BYTE PTR [rbx+0x0],dl
  4033d7:	movsxd eax,DWORD PTR [rax]
  4033d9:	(bad)  
  4033da:	add    BYTE PTR [rax+rax*1+0x65],ch
  4033de:	add    BYTE PTR [rax+rax*1+0x69],al
  4033e2:	add    BYTE PTR [rbp+0x0],ch
  4033e5:	add    BYTE PTR gs:[rsi+0x0],ch
  4033e9:	jae    0x4033eb
  4033eb:	imul   eax,DWORD PTR [rax],0x6e006f
  4033f1:	jae    0x4033f3
  4033f3:	add    BYTE PTR [rax],al
  4033f5:	add    BYTE PTR [rax],al
  4033f7:	and    BYTE PTR [rax+rax*1],ah
  4033fa:	je     0x4033fc
  4033fc:	push   0x73006900
  403401:	add    BYTE PTR [rsi],ch
  403403:	add    BYTE PTR [rbx+0x0],al
  403406:	ins    BYTE PTR es:[rdi],dx
  403407:	add    BYTE PTR [rcx+0x0],ch
  40340a:	add    BYTE PTR gs:[rsi+0x0],ch
  40340e:	je     0x403410
  403410:	push   rbx
  403411:	add    BYTE PTR [rcx+0x0],ch
  403414:	jp     0x403416
  403416:	add    BYTE PTR gs:[rbp+0x14000000],ah
  40341d:	and    al,0x0
  40341f:	je     0x403421
  403421:	push   0x73006900
  403426:	add    BYTE PTR [rsi],ch
  403428:	add    BYTE PTR [rcx+0x0],cl
  40342b:	movsxd eax,DWORD PTR [rax]
  40342d:	outs   dx,DWORD PTR ds:[rsi]
  40342e:	add    BYTE PTR [rsi+0x0],ch
  403431:	add    QWORD PTR [r8],rax
  403434:	add    BYTE PTR [rsi],ah
  403436:	and    al,0x0
  403438:	je     0x40343a
  40343a:	push   0x73006900
  40343f:	add    BYTE PTR [rsi],ch
  403441:	add    BYTE PTR [rbx+0x0],dl
  403444:	je     0x403446
  403446:	(bad)  
  403447:	add    BYTE PTR [rdx+0x0],dh
  40344a:	je     0x40344c
  40344c:	push   rax
  40344d:	add    BYTE PTR [rdi+0x0],ch
  403450:	jae    0x403452
  403452:	imul   eax,DWORD PTR [rax],0x690074
  403458:	outs   dx,DWORD PTR ds:[rsi]
  403459:	add    BYTE PTR [rsi+0x0],ch
  40345c:	loopne 0x403487
  40345e:	add    BYTE PTR [rax],al
  403460:	adc    al,0x24
  403462:	add    BYTE PTR [rax+rax*1+0x68],dh
  403466:	add    BYTE PTR [rcx+0x0],ch
  403469:	jae    0x40346b
  40346b:	add    BYTE PTR cs:[rax+rax*1+0x65],dl
  403470:	add    BYTE PTR [rax+0x0],bh
  403473:	je     0x403475
  403475:	xchg   edx,eax
  403476:	sub    al,BYTE PTR [rax]
  403478:	add    BYTE PTR [rax],bl
  40347a:	add    BYTE PTR ds:[rsi],bh
  40347d:	add    BYTE PTR [rax+rax*1],ah
  403480:	je     0x403482
  403482:	push   0x73006900
  403487:	add    BYTE PTR [rsi],ch
  403489:	add    BYTE PTR [rsi+0x0],cl
  40348c:	(bad)  
  40348d:	add    BYTE PTR [rbp+0x0],ch
  403490:	add    BYTE PTR gs:[rbx+0x1800002a],ah
  403497:	add    BYTE PTR ds:[rsi],bh
  40349a:	add    BYTE PTR [rax+rax*1],ah
  40349d:	je     0x40349f
  40349f:	push   0x73006900
  4034a4:	add    BYTE PTR [rsi],ch
  4034a6:	add    BYTE PTR [rax+rax*1+0x79],dl
  4034aa:	add    BYTE PTR [rax+0x0],dh
  4034ad:	add    BYTE PTR gs:[rsi+0x2e00002a],ch
  4034b4:	add    BYTE PTR ds:[rsi],bh
  4034b7:	add    BYTE PTR [rbx+0x0],ah
  4034ba:	outs   dx,DWORD PTR ds:[rsi]
  4034bb:	add    BYTE PTR [rsi+0x0],ch
  4034be:	je     0x4034c0
  4034c0:	jb     0x4034c2
  4034c2:	outs   dx,DWORD PTR ds:[rsi]
  4034c3:	add    BYTE PTR [rax+rax*1+0x48],ch
  4034c7:	add    BYTE PTR [rdi+0x0],ch
  4034ca:	jae    0x4034cc
  4034cc:	je     0x4034ce
  4034ce:	push   rax
  4034cf:	add    BYTE PTR [rcx+0x0],ah
  4034d2:	outs   dx,BYTE PTR ds:[rsi]
  4034d3:	add    BYTE PTR [rbp+0x0],ah
  4034d6:	ins    BYTE PTR es:[rdi],dx
  4034d7:	add    BYTE PTR [rsi],ch
  4034d9:	add    BYTE PTR [rsi+0x0],cl
  4034dc:	(bad)  
  4034dd:	add    BYTE PTR [rbp+0x0],ch
  4034e0:	add    BYTE PTR gs:[rdx],ah
  4034e3:	sub    eax,DWORD PTR [rax]
  4034e5:	add    BYTE PTR [rdx],dh
  4034e7:	add    BYTE PTR ds:[rsi],bh
  4034ea:	add    BYTE PTR [rbx+0x0],ah
  4034ed:	outs   dx,DWORD PTR ds:[rsi]
  4034ee:	add    BYTE PTR [rsi+0x0],ch
  4034f1:	je     0x4034f3
  4034f3:	jb     0x4034f5
  4034f5:	outs   dx,DWORD PTR ds:[rsi]
  4034f6:	add    BYTE PTR [rax+rax*1+0x48],ch
  4034fa:	add    BYTE PTR [rdi+0x0],ch
  4034fd:	jae    0x4034ff
  4034ff:	je     0x403501
  403501:	push   rax
  403502:	add    BYTE PTR [rcx+0x0],ah
  403505:	outs   dx,BYTE PTR ds:[rsi]
  403506:	add    BYTE PTR [rbp+0x0],ah
  403509:	ins    BYTE PTR es:[rdi],dx
  40350a:	add    BYTE PTR [rsi],ch
  40350c:	add    BYTE PTR [rax+0x0],dl
  40350f:	(bad)  
  403510:	add    BYTE PTR [rdx+0x0],dh
  403513:	add    BYTE PTR gs:[rsi+0x0],ch
  403517:	je     0x403519
  403519:	xor    al,0x2b
  40351b:	add    BYTE PTR [rax],al
  40351d:	cs add BYTE PTR ds:[rsi],bh
  403521:	add    BYTE PTR [rbx+0x0],ah
  403524:	outs   dx,DWORD PTR ds:[rsi]
  403525:	add    BYTE PTR [rsi+0x0],ch
  403528:	je     0x40352a
  40352a:	jb     0x40352c
  40352c:	outs   dx,DWORD PTR ds:[rsi]
  40352d:	add    BYTE PTR [rax+rax*1+0x48],ch
  403531:	add    BYTE PTR [rdi+0x0],ch
  403534:	jae    0x403536
  403536:	je     0x403538
  403538:	push   rax
  403539:	add    BYTE PTR [rcx+0x0],ah
  40353c:	outs   dx,BYTE PTR ds:[rsi]
  40353d:	add    BYTE PTR [rbp+0x0],ah
  403540:	ins    BYTE PTR es:[rdi],dx
  403541:	add    BYTE PTR [rsi],ch
  403543:	add    BYTE PTR [rax+rax*1+0x79],dl
  403547:	add    BYTE PTR [rax+0x0],dh
  40354a:	add    BYTE PTR gs:[rbx],bh
  40354d:	sub    eax,DWORD PTR [rax]
  40354f:	add    BYTE PTR [rdx],dh
  403551:	add    BYTE PTR ds:[rsi],bh
  403554:	add    BYTE PTR [rbx+0x0],ah
  403557:	outs   dx,DWORD PTR ds:[rsi]
  403558:	add    BYTE PTR [rsi+0x0],ch
  40355b:	je     0x40355d
  40355d:	jb     0x40355f
  40355f:	outs   dx,DWORD PTR ds:[rsi]
  403560:	add    BYTE PTR [rax+rax*1+0x48],ch
  403564:	add    BYTE PTR [rdi+0x0],ch
  403567:	jae    0x403569
  403569:	je     0x40356b
  40356b:	push   rax
  40356c:	add    BYTE PTR [rcx+0x0],ah
  40356f:	outs   dx,BYTE PTR ds:[rsi]
  403570:	add    BYTE PTR [rbp+0x0],ah
  403573:	ins    BYTE PTR es:[rdi],dx
  403574:	add    BYTE PTR [rsi],ch
  403576:	add    BYTE PTR [rdx+0x0],bl
  403579:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  40357d:	add    BYTE PTR fs:[rbp+0x0],ah
  403581:	jb     0x403583
  403583:	mov    al,0x2b
  403585:	add    BYTE PTR [rax],al
  403587:	sub    ah,BYTE PTR [rbx+0x0]
  40358a:	outs   dx,DWORD PTR ds:[rsi]
  40358b:	add    BYTE PTR [rsi+0x0],ch
  40358e:	je     0x403590
  403590:	jb     0x403592
  403592:	outs   dx,DWORD PTR ds:[rsi]
  403593:	add    BYTE PTR [rax+rax*1+0x48],ch
  403597:	add    BYTE PTR [rdi+0x0],ch
  40359a:	jae    0x40359c
  40359c:	je     0x40359e
  40359e:	push   rax
  40359f:	add    BYTE PTR [rcx+0x0],ah
  4035a2:	outs   dx,BYTE PTR ds:[rsi]
  4035a3:	add    BYTE PTR [rbp+0x0],ah
  4035a6:	ins    BYTE PTR es:[rdi],dx
  4035a7:	add    BYTE PTR [rsi],ch
  4035a9:	add    BYTE PTR [rax+rax*1+0x6f],al
  4035ad:	add    BYTE PTR [rbx+0x0],ah
  4035b0:	imul   eax,DWORD PTR [rax],0xffffffb3
  4035b3:	sub    eax,DWORD PTR [rax]
  4035b5:	add    BYTE PTR [rdx],dh
  4035b7:	movsxd eax,DWORD PTR [rax]
  4035b9:	outs   dx,DWORD PTR ds:[rsi]
  4035ba:	add    BYTE PTR [rsi+0x0],ch
  4035bd:	je     0x4035bf
  4035bf:	jb     0x4035c1
  4035c1:	outs   dx,DWORD PTR ds:[rsi]
  4035c2:	add    BYTE PTR [rax+rax*1+0x48],ch
  4035c6:	add    BYTE PTR [rdi+0x0],ch
  4035c9:	jae    0x4035cb
  4035cb:	je     0x4035cd
  4035cd:	push   rax
  4035ce:	add    BYTE PTR [rcx+0x0],ah
  4035d1:	outs   dx,BYTE PTR ds:[rsi]
  4035d2:	add    BYTE PTR [rbp+0x0],ah
  4035d5:	ins    BYTE PTR es:[rdi],dx
  4035d6:	add    BYTE PTR [rsi],ch
  4035d8:	add    BYTE PTR [rax+rax*1+0x6f],cl
  4035dc:	add    BYTE PTR [rbx+0x0],ah
  4035df:	(bad)  
  4035e0:	add    BYTE PTR [rax+rax*1+0x69],dh
  4035e4:	add    BYTE PTR [rdi+0x0],ch
  4035e7:	outs   dx,BYTE PTR ds:[rsi]
  4035e8:	add    BYTE PTR [rbp+0x2c],bl
  4035eb:	add    BYTE PTR [rax],al
  4035ed:	sub    ah,BYTE PTR [rbx+0x0]
  4035f0:	outs   dx,DWORD PTR ds:[rsi]
  4035f1:	add    BYTE PTR [rsi+0x0],ch
  4035f4:	je     0x4035f6
  4035f6:	jb     0x4035f8
  4035f8:	outs   dx,DWORD PTR ds:[rsi]
  4035f9:	add    BYTE PTR [rax+rax*1+0x48],ch
  4035fd:	add    BYTE PTR [rdi+0x0],ch
  403600:	jae    0x403602
  403602:	je     0x403604
  403604:	push   rax
  403605:	add    BYTE PTR [rcx+0x0],ah
  403608:	outs   dx,BYTE PTR ds:[rsi]
  403609:	add    BYTE PTR [rbp+0x0],ah
  40360c:	ins    BYTE PTR es:[rdi],dx
  40360d:	add    BYTE PTR [rsi],ch
  40360f:	add    BYTE PTR [rbx+0x0],dl
  403612:	imul   eax,DWORD PTR [rax],0x65007a
  403618:	stc    
  403619:	sub    al,0x0
  40361b:	add    BYTE PTR [rdx],dh
  40361d:	movsxd eax,DWORD PTR [rax]
  40361f:	outs   dx,DWORD PTR ds:[rsi]
  403620:	add    BYTE PTR [rsi+0x0],ch
  403623:	je     0x403625
  403625:	jb     0x403627
  403627:	outs   dx,DWORD PTR ds:[rsi]
  403628:	add    BYTE PTR [rax+rax*1+0x48],ch
  40362c:	add    BYTE PTR [rdi+0x0],ch
  40362f:	jae    0x403631
  403631:	je     0x403633
  403633:	push   rax
  403634:	add    BYTE PTR [rcx+0x0],ah
  403637:	outs   dx,BYTE PTR ds:[rsi]
  403638:	add    BYTE PTR [rbp+0x0],ah
  40363b:	ins    BYTE PTR es:[rdi],dx
  40363c:	add    BYTE PTR [rsi],ch
  40363e:	add    BYTE PTR [rax+rax*1+0x61],dl
  403642:	add    BYTE PTR [rdx+0x0],ah
  403645:	rex.WB add BYTE PTR [r14+0x0],bpl
  403649:	add    BYTE PTR fs:[rbp+0x0],ah
  40364d:	js     0x40364f
  40364f:	popf   
  403650:	sub    eax,0x400000
  403655:	add    DWORD PTR [rax],eax
  403657:	add    BYTE PTR [rax],al
  403659:	(bad)  
  40365a:	(bad)  
  40365b:	(bad)  
  40365c:	inc    DWORD PTR [rcx]
  40365e:	add    BYTE PTR [rax],al
  403660:	add    BYTE PTR [rax],al
  403662:	add    BYTE PTR [rax],al
  403664:	add    BYTE PTR [rdx+rax*1],cl
  403667:	add    BYTE PTR [rax],al
  403669:	add    BYTE PTR [rcx+0x53],dl
  40366c:	jns    0x4036e1
  40366e:	je     0x4036d5
  403670:	ins    DWORD PTR es:[rdi],dx
  403671:	cs rex.R jb 0x4036d6
  403675:	ja     0x4036e0
  403677:	outs   dx,BYTE PTR ds:[rsi]
  403678:	addr32 sub al,0x20
  40367b:	push   rsi
  40367c:	gs jb  0x4036f2
  40367f:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  403686:	xor    BYTE PTR cs:[rsi],ch
  403689:	xor    BYTE PTR [rax+riz*1],ch
  40368c:	rex.XB jne 0x4036fb
  40368f:	je     0x403706
  403691:	jb     0x4036f8
  403693:	cmp    eax,0x7475656e
  403698:	jb     0x4036fb
  40369a:	ins    BYTE PTR es:[rdi],dx
  40369b:	sub    al,0x20
  40369d:	push   rax
  40369e:	jne    0x403702
  4036a0:	ins    BYTE PTR es:[rdi],dx
  4036a1:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4036a8:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4036ac:	(bad)  
  4036ad:	xor    BYTE PTR [rbx],dh
  4036af:	xor    ax,0x3766
  4036b3:	xor    WORD PTR [rcx],si
  4036b6:	fs xor eax,0x61336130
  4036bc:	add    eax,0x1
  4036c1:	adc    al,0x53
  4036c3:	jns    0x403738
  4036c5:	je     0x40372c
  4036c7:	ins    DWORD PTR es:[rdi],dx
  4036c8:	cs rex.R jb 0x40372d
  4036cc:	ja     0x403737
  4036ce:	outs   dx,BYTE PTR ds:[rsi]
  4036cf:	addr32 cs push rbx
  4036d2:	imul   edi,DWORD PTR [rdx+0x65],0x246
  4036d9:	add    BYTE PTR [rip+0x74646977],al        # 0x74a4a056
  4036df:	push   0x69656806
  4036e4:	addr32 push 0xb000074
  4036ea:	or     eax,DWORD PTR [rdx]
  4036ec:	add    BYTE PTR [rax],al
  4036ee:	add    BYTE PTR [rax],al
  4036f0:	add    BYTE PTR [rax],al
  4036f2:	add    BYTE PTR [r8],al
  4036f5:	add    BYTE PTR [rcx+0xb],0x41
  4036f9:	add    BYTE PTR [rcx],al
  4036fb:	add    BYTE PTR [rax],al
  4036fd:	add    bh,bh
  4036ff:	(bad)  
  403700:	(bad)  
  403701:	inc    DWORD PTR [rcx]
  403703:	add    BYTE PTR [rax],al
  403705:	add    BYTE PTR [rax],al
  403707:	add    BYTE PTR [rax],al
  403709:	add    BYTE PTR [rdx+rax*1],cl
  40370c:	add    BYTE PTR [rax],al
  40370e:	add    BYTE PTR [rcx+0x53],dl
  403711:	jns    0x403786
  403713:	je     0x40377a
  403715:	ins    DWORD PTR es:[rdi],dx
  403716:	cs rex.R jb 0x40377b
  40371a:	ja     0x403785
  40371c:	outs   dx,BYTE PTR ds:[rsi]
  40371d:	addr32 sub al,0x20
  403720:	push   rsi
  403721:	gs jb  0x403797
  403724:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40372b:	xor    BYTE PTR cs:[rsi],ch
  40372e:	xor    BYTE PTR [rax+riz*1],ch
  403731:	rex.XB jne 0x4037a0
  403734:	je     0x4037ab
  403736:	jb     0x40379d
  403738:	cmp    eax,0x7475656e
  40373d:	jb     0x4037a0
  40373f:	ins    BYTE PTR es:[rdi],dx
  403740:	sub    al,0x20
  403742:	push   rax
  403743:	jne    0x4037a7
  403745:	ins    BYTE PTR es:[rdi],dx
  403746:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40374d:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  403751:	(bad)  
  403752:	xor    BYTE PTR [rbx],dh
  403754:	xor    ax,0x3766
  403758:	xor    WORD PTR [rcx],si
  40375b:	fs xor eax,0x61336130
  403761:	add    eax,0x1
  403766:	adc    edx,DWORD PTR [rbx+0x79]
  403769:	jae    0x4037df
  40376b:	gs ins DWORD PTR es:[rdi],dx
  40376d:	cs rex.R jb 0x4037d2
  403771:	ja     0x4037dc
  403773:	outs   dx,BYTE PTR ds:[rsi]
  403774:	addr32 cs push rbx
  403777:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40377e:	add    eax,0x74646977
  403783:	push   0x69656806
  403788:	addr32 push 0x8000074
  40378e:	or     BYTE PTR [rdx],al
  403790:	add    BYTE PTR [rax],al
  403792:	add    BYTE PTR [rbp+0x17000001],cl
  403798:	add    DWORD PTR [rax],eax
  40379a:	add    BYTE PTR [rbx],cl
  40379c:	rex.X add BYTE PTR [rcx],al
  40379f:	add    BYTE PTR [rax],al
  4037a1:	add    bh,bh
  4037a3:	(bad)  
  4037a4:	(bad)  
  4037a5:	inc    DWORD PTR [rcx]
  4037a7:	add    BYTE PTR [rax],al
  4037a9:	add    BYTE PTR [rax],al
  4037ab:	add    BYTE PTR [rax],al
  4037ad:	add    BYTE PTR [rdx+rax*1],cl
  4037b0:	add    BYTE PTR [rax],al
  4037b2:	add    BYTE PTR [rcx+0x53],dl
  4037b5:	jns    0x40382a
  4037b7:	je     0x40381e
  4037b9:	ins    DWORD PTR es:[rdi],dx
  4037ba:	cs rex.R jb 0x40381f
  4037be:	ja     0x403829
  4037c0:	outs   dx,BYTE PTR ds:[rsi]
  4037c1:	addr32 sub al,0x20
  4037c4:	push   rsi
  4037c5:	gs jb  0x40383b
  4037c8:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4037cf:	xor    BYTE PTR cs:[rsi],ch
  4037d2:	xor    BYTE PTR [rax+riz*1],ch
  4037d5:	rex.XB jne 0x403844
  4037d8:	je     0x40384f
  4037da:	jb     0x403841
  4037dc:	cmp    eax,0x7475656e
  4037e1:	jb     0x403844
  4037e3:	ins    BYTE PTR es:[rdi],dx
  4037e4:	sub    al,0x20
  4037e6:	push   rax
  4037e7:	jne    0x40384b
  4037e9:	ins    BYTE PTR es:[rdi],dx
  4037ea:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4037f1:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4037f5:	(bad)  
  4037f6:	xor    BYTE PTR [rbx],dh
  4037f8:	xor    ax,0x3766
  4037fc:	xor    WORD PTR [rcx],si
  4037ff:	fs xor eax,0x61336130
  403805:	add    eax,0x1
  40380a:	adc    edx,DWORD PTR [rbx+0x79]
  40380d:	jae    0x403883
  40380f:	gs ins DWORD PTR es:[rdi],dx
  403811:	cs rex.R jb 0x403876
  403815:	ja     0x403880
  403817:	outs   dx,BYTE PTR ds:[rsi]
  403818:	movsxd rbp,DWORD PTR cs:[r15d+0x6e]
  40381e:	add    al,BYTE PTR [rax]
  403820:	add    BYTE PTR [rax],al
  403822:	or     BYTE PTR [rcx+0x63],cl
  403825:	outs   dx,DWORD PTR ds:[rsi]
  403826:	outs   dx,BYTE PTR ds:[rsi]
  403827:	rex.R (bad) 
  403829:	je     0x40388c
  40382b:	or     BYTE PTR [rcx+0x63],cl
  40382e:	outs   dx,DWORD PTR ds:[rsi]
  40382f:	outs   dx,BYTE PTR ds:[rsi]
  403830:	push   rbx
  403831:	imul   edi,DWORD PTR [rdx+0x65],0x13020407
  403838:	push   rbx
  403839:	jns    0x4038ae
  40383b:	je     0x4038a2
  40383d:	ins    DWORD PTR es:[rdi],dx
  40383e:	cs rex.R jb 0x4038a3
  403842:	ja     0x4038ad
  403844:	outs   dx,BYTE PTR ds:[rsi]
  403845:	addr32 cs push rbx
  403848:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40384f:	add    al,BYTE PTR [rax]
  403851:	add    BYTE PTR [rax],al
  403853:	or     DWORD PTR [rbx],eax
  403855:	add    BYTE PTR [rax],al
  403857:	add    BYTE PTR [rip+0xfffffffffffffffc],al        # 0x403859
  40385d:	adc    edx,DWORD PTR [rbx+0x79]
  403860:	jae    0x4038d6
  403862:	gs ins DWORD PTR es:[rdi],dx
  403864:	cs rex.R jb 0x4038c9
  403868:	ja     0x4038d3
  40386a:	outs   dx,BYTE PTR ds:[rsi]
  40386b:	addr32 cs push rbx
  40386e:	imul   edi,DWORD PTR [rdx+0x65],0x2
  403875:	add    eax,0x74646977
  40387a:	push   0x69656806
  40387f:	addr32 push 0x8000074
  403885:	or     BYTE PTR [rdx],al
	...
  40388f:	add    BYTE PTR [rax],al
  403891:	add    BYTE PTR [rdi],cl
  403893:	add    eax,DWORD PTR [rax]
  403895:	add    BYTE PTR [rax],al
  403897:	xchg   esi,eax
  403898:	(bad)  
  403899:	add    BYTE PTR [rax],al
  40389b:	add    al,BYTE PTR [rax]
  40389d:	add    BYTE PTR [rcx],al
  40389f:	add    BYTE PTR [rsi],al
  4038a1:	add    BYTE PTR [rax],ah
  4038a3:	and    BYTE PTR [rax],dl
  4038a5:	add    BYTE PTR [rcx],al
  4038a7:	add    BYTE PTR [rax+rax*1],al
  4038aa:	call   0x664038b1
  4038af:	add    BYTE PTR [rax],al
  4038b1:	add    BYTE PTR [rax],dl
  4038b3:	adc    BYTE PTR [rax],dl
  4038b5:	add    BYTE PTR [rcx],al
  4038b7:	add    BYTE PTR [rax+rax*1],al
  4038ba:	sub    BYTE PTR [rcx],al
  4038bc:	add    BYTE PTR [rax],al
  4038be:	rex.WRX add r8,QWORD PTR [rax]
  4038c1:	add    BYTE PTR [rax],ah
  4038c3:	and    BYTE PTR [rax],al
  4038c5:	add    BYTE PTR [rcx],al
  4038c7:	add    BYTE PTR [rax],cl
  4038c9:	add    BYTE PTR [rax+0x76000008],ch
  4038cf:	add    al,0x0
  4038d1:	add    BYTE PTR [rax],dl
  4038d3:	adc    BYTE PTR [rax],al
  4038d5:	add    BYTE PTR [rcx],al
  4038d7:	add    BYTE PTR [rax],cl
  4038d9:	add    BYTE PTR [rax+0x5],ch
  4038dc:	add    BYTE PTR [rax],al
  4038de:	(bad)  
  4038df:	or     eax,0x20200000
  4038e4:	add    BYTE PTR [rax],al
  4038e6:	add    DWORD PTR [rax],eax
  4038e8:	and    BYTE PTR [rax],al
  4038ea:	test   al,0x10
  4038ec:	add    BYTE PTR [rax],al
  4038ee:	xchg   BYTE PTR [rdx],dl
  4038f0:	add    BYTE PTR [rax],al
  4038f2:	adc    BYTE PTR [rax],dl
  4038f4:	add    BYTE PTR [rax],al
  4038f6:	add    DWORD PTR [rax],eax
  4038f8:	and    BYTE PTR [rax],al
  4038fa:	push   0x2e000004
  4038ff:	and    eax,DWORD PTR [rax]
  403901:	add    BYTE PTR [rax],ch
  403903:	add    BYTE PTR [rax],al
  403905:	add    BYTE PTR [rax],ah
  403907:	add    BYTE PTR [rax],al
  403909:	add    BYTE PTR [rax+0x0],al
  40390c:	add    BYTE PTR [rax],al
  40390e:	add    DWORD PTR [rax],eax
  403910:	add    al,0x0
  403912:	add    BYTE PTR [rax],al
  403914:	add    BYTE PTR [rax],al
  403916:	add    BYTE PTR [rdx],al
	...
  403930:	add    BYTE PTR [rax],0x0
  403933:	add    BYTE PTR [rax],0x0
  403936:	add    BYTE PTR [rax+0x800080],al
  40393c:	add    BYTE PTR [rax],al
  40393e:	add    BYTE PTR [rax],0x80
  403941:	add    BYTE PTR [rax-0x7fffff80],al
  403947:	add    BYTE PTR [rax-0x3f3f4000],0x0
  40394e:	add    BYTE PTR [rax],al
  403950:	inc    DWORD PTR [rax]
  403952:	add    bh,bh
  403954:	add    BYTE PTR [rax],al
  403956:	add    bh,bh
  403958:	inc    DWORD PTR [rax]
  40395a:	inc    DWORD PTR [rax]
  40395c:	add    BYTE PTR [rax],al
  40395e:	inc    DWORD PTR [rax]
  403960:	inc    DWORD PTR [rax]
  403962:	(bad)  
  403963:	inc    DWORD PTR [rax]
  403965:	add    bh,bh
  403967:	(bad)  
  403968:	inc    DWORD PTR [rax]
  40396a:	add    BYTE PTR [rax],al
  40396c:	add    BYTE PTR [rax],al
  40396e:	add    BYTE PTR [rax],al
  403970:	add    BYTE PTR [rdi],ah
  403972:	and    dh,BYTE PTR [rdx+0x36]
  403975:	and    esp,DWORD PTR [rbx+0x62]
  403978:	add    BYTE PTR ss:[rax],al
  40397b:	add    BYTE PTR [rax],al
  40397d:	add    BYTE PTR [rax],al
  40397f:	add    BYTE PTR [rax],al
  403981:	(bad)  
  403982:	jae    0x4039f7
  403984:	movsxd esp,DWORD PTR [rdx+0x72]
  403987:	and    eax,DWORD PTR ss:[rax]
  40398a:	add    BYTE PTR [rax],al
  40398c:	add    BYTE PTR [rax],al
  40398e:	add    BYTE PTR [rax],al
  403990:	add    BYTE PTR [rax+0x77],bh
  403993:	es ja  0x4039c9
  403996:	(bad)  
  403997:	(bad)  
  403998:	add    BYTE PTR ss:[rax],al
  40399b:	add    BYTE PTR [rax],al
  40399d:	add    BYTE PTR [rax],al
  40399f:	add    BYTE PTR [rax],al
  4039a1:	sub    BYTE PTR [rdx+0x78],bh
  4039a4:	and    esi,DWORD PTR [rsi+0x3a]
  4039a7:	jb     0x403a0c
	...
  4039b1:	(bad)  
  4039b2:	(bad)  
  4039b3:	clc    
  4039b4:	(bad)  
  4039b5:	jp     0x403a2e
  4039b7:	xor    esp,DWORD PTR [rsi+0x0]
  4039bd:	add    BYTE PTR [rax],al
  4039bf:	add    BYTE PTR [rax],al
  4039c1:	js     0x403952
  4039c3:	dec    DWORD PTR [rax+0x72638870]
  4039c9:	add    BYTE PTR [rax],al
  4039cb:	add    BYTE PTR [rax],al
  4039cd:	add    BYTE PTR [rax],al
  4039cf:	add    BYTE PTR [rdi],dl
  4039d1:	js     0x403a4e
  4039d3:	(bad)  
  4039d4:	clc    
  4039d5:	vpperm ymm0,ymm11,YMMWORD PTR [r8],ymm0
  4039db:	add    BYTE PTR [rax],al
  4039dd:	add    BYTE PTR [rax],al
  4039df:	(bad)  
  4039e0:	jae    0x403a1a
  4039e2:	mov    bh,BYTE PTR [rdi-0x1]
  4039e5:	(bad)  
  4039e6:	clc    
  4039e7:	(bad)  
  4039e8:	add    BYTE PTR es:[rax],al
  4039eb:	add    BYTE PTR [rax],al
  4039ed:	add    BYTE PTR [rbx-0x8],dh
  4039f0:	mov    BYTE PTR [rax-0x78],bh
  4039f3:	ja     0x4039f4
  4039f5:	(bad)  
  4039f6:	clc    
  4039f7:	jae    0x403a5c
  4039f9:	add    BYTE PTR [rax],al
  4039fb:	add    BYTE PTR [rax],al
  4039fd:	ja     0x403987
  4039ff:	clc    
  403a00:	mov    bh,0x38
  403a02:	xchg   DWORD PTR [rdi+0x77f8fff8],esp
  403a08:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  403a09:	add    BYTE PTR [rax],al
  403a0b:	add    BYTE PTR [rdi],al
  403a0d:	mov    eax,0x78878f8f
  403a12:	mov    BYTE PTR [rdi-0x1],bh
  403a15:	(bad)  
  403a16:	(bad)  
  403a17:	jp     0x403a8b
  403a19:	add    BYTE PTR [rax],al
  403a1b:	add    BYTE PTR [rdi],al
  403a1d:	mov    edi,DWORD PTR [rdi-0x78]
  403a20:	mov    eax,0xff8f8a38
  403a25:	(bad)  
  403a26:	push   QWORD PTR [rdi+0x37]
  403a29:	add    BYTE PTR [rax],al
  403a2b:	add    BYTE PTR [rdi],al
  403a2d:	mov    BYTE PTR [rdi-0x77877871],cl
  403a33:	xchg   DWORD PTR [rdi+0x728a8787],eax
  403a39:	add    BYTE PTR [rax],al
  403a3b:	add    BYTE PTR [rdi],al
  403a3d:	mov    bh,0xbf
  403a3f:	sti    
  403a40:	js     0x403a7a
  403a42:	mov    BYTE PTR [rax-0x77777778],cl
  403a48:	jb     0x403a4a
  403a4a:	add    BYTE PTR [rax],al
  403a4c:	(bad)  
  403a4d:	mov    BYTE PTR [rax-0x58887408],cl
  403a53:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  403a54:	(bad)  
  403a55:	movabs ds:0x8b070000007a7a6a,eax
  403a5e:	mov    BYTE PTR [rbx+0x73318788],cl
  403a64:	jae    0x403ad9
  403a66:	jae    0x403a9d
  403a68:	add    BYTE PTR [rax],al
  403a6a:	add    BYTE PTR [rax],al
  403a6c:	(bad)  
  403a6d:	mov    BYTE PTR [rax+0x33888bff],cl
  403a73:	(bad)  
  403a74:	xor    esi,DWORD PTR [rbx+0x39]
  403a77:	jae    0x403a79
  403a79:	add    BYTE PTR [rax],al
  403a7b:	add    BYTE PTR [rdi],al
  403a7d:	mov    eax,0x8b88ff88
  403a82:	jno    0x403a95
  403a84:	(bad)  
  403a85:	(bad)  
  403a86:	(bad)  
  403a87:	xor    eax,0x0
  403a8c:	(bad)  
  403a8d:	mov    BYTE PTR [rdi+0x3788b8f8],bh
  403a93:	ja     0x403ac6
  403a95:	xor    DWORD PTR [rdi],esi
  403a97:	adc    eax,DWORD PTR [rax]
  403a99:	add    BYTE PTR [rax],al
  403a9b:	add    BYTE PTR [rdi],al
  403a9d:	mov    edi,0x3b778b88
  403aa2:	push   rdi
  403aa3:	mov    BYTE PTR [rdi+0x73],dh
  403aa6:	adc    DWORD PTR [rip+0x0],esi        # 0x403aac
  403aac:	(bad)  
  403aad:	xchg   DWORD PTR [rdi+0x33988888],esi
  403ab3:	mov    eax,0x3177888b
  403ab8:	add    BYTE PTR [rax],al
  403aba:	add    BYTE PTR [rax],al
  403abc:	mov    edi,DWORD PTR [rax-0x78]
  403abf:	mov    BYTE PTR [rdi+0x787b9883],dh
  403ac5:	mov    eax,DWORD PTR [rdi+0x7077]
  403acb:	jnp    0x403a5c
  403acd:	mov    BYTE PTR [rbx+0x7b337979],cl
  403ad3:	js     0x403a6d
  403ad5:	cmp    BYTE PTR [rbx-0x75],bh
  403ad8:	xchg   DWORD PTR [rax],eax
  403ada:	(bad)  
  403adb:	xchg   DWORD PTR [rdi-0x49],esi
  403ade:	jns    0x403b53
  403ae0:	(bad)  
  403ae1:	(bad)  
  403ae2:	cwde   
  403ae3:	cwde   
  403ae4:	mov    bh,0x89
  403ae6:	xchg   DWORD PTR [rdi+0x8073],eax
  403aec:	or     BYTE PTR [rdi-0x4d],dh
  403aef:	jae    0x403b6a
  403af1:	jae    0x403b2b
  403af3:	mov    bh,0x8b
  403af5:	mov    edi,DWORD PTR [rbx+0x7b]
  403af8:	add    BYTE PTR [rax],al
  403afa:	add    BYTE PTR [rax],al
  403afc:	jnp    0x403a86
  403afe:	ja     0x403b79
  403b00:	(bad)  
  403b01:	cmp    DWORD PTR [rdi-0x77],esi
  403b04:	xor    DWORD PTR [rdi+0x78],0xffffff98
  403b08:	jo     0x403b0a
  403b0a:	add    BYTE PTR [rdi],al
  403b0c:	mov    BYTE PTR [rax+0x733bb7b8],cl
  403b12:	(bad)  
  403b13:	mov    eax,0x88b7b738
  403b18:	mov    bh,0x0
  403b1a:	add    BYTE PTR [rax-0x74777701],cl
  403b20:	xchg   DWORD PTR [rdi],esi
  403b22:	cmp    BYTE PTR [rdi-0x48],dh
  403b25:	mov    BYTE PTR [rax+0x7088b8],cl
  403b2b:	cmp    BYTE PTR [rax-0x74777771],cl
  403b31:	mov    DWORD PTR [rbx-0x77477748],eax
  403b37:	mov    BYTE PTR [rbx-0x48ffff90],cl
  403b3d:	mov    eax,0x8b8888f8
  403b42:	js     0x403bbc
  403b44:	mov    BYTE PTR [rax+0x70b888],cl
  403b4a:	add    BYTE PTR [rax],al
  403b4c:	add    BYTE PTR [rax],cl
  403b4e:	cmp    ecx,DWORD PTR [rax+0x7b0070b8]
  403b54:	mov    BYTE PTR [rax+0xb7],cl
  403b5a:	add    BYTE PTR [rax],al
  403b5c:	add    BYTE PTR [rax],al
  403b5e:	add    BYTE PTR [rdi+0x89],al
  403b64:	jnp    0x403bdd
  403b66:	add    BYTE PTR [rax],al
  403b68:	add    BYTE PTR [rax],al
  403b6a:	(bad)  
  403b6b:	cld    
  403b6c:	add    BYTE PTR [rbx],al
  403b6e:	(bad)  
  403b6f:	cld    
  403b70:	add    BYTE PTR [rbx],al
  403b72:	(bad)  
  403b73:	cld    
  403b74:	add    BYTE PTR [rbx],al
  403b76:	(bad)  
  403b77:	cld    
  403b78:	add    BYTE PTR [rbx],al
  403b7a:	(bad)  
  403b7b:	cld    
  403b7c:	add    BYTE PTR [rbx],al
  403b7e:	(bad)  
  403b7f:	cld    
  403b80:	add    BYTE PTR [rbx],al
  403b82:	push   rax
  403b84:	add    BYTE PTR [rbx],al
  403b86:	inc    eax
  403b88:	add    BYTE PTR [rbx],al
  403b8a:	inc    DWORD PTR [rax]
  403b8c:	add    BYTE PTR [rbx],al
  403b8e:	cld    
  403b8f:	add    BYTE PTR [rax],al
  403b91:	add    edi,eax
  403b93:	add    BYTE PTR [rax],al
  403b95:	add    edi,eax
  403b97:	add    BYTE PTR [rax],al
  403b99:	add    edi,eax
  403b9b:	add    BYTE PTR [rax],al
  403b9d:	add    edi,eax
  403b9f:	add    BYTE PTR [rax],al
  403ba1:	add    edi,eax
  403ba3:	add    BYTE PTR [rax],al
  403ba5:	add    edi,eax
  403ba7:	add    BYTE PTR [rax],al
  403ba9:	psubb  mm0,QWORD PTR [rax]
  403bac:	add    BYTE PTR [rdi],cl
  403bae:	clc    
  403baf:	add    BYTE PTR [rax],al
  403bb1:	psubb  mm0,QWORD PTR [rax]
  403bb4:	add    BYTE PTR [rdi],cl
  403bb6:	clc    
  403bb7:	add    BYTE PTR [rax],al
  403bb9:	psubb  mm0,QWORD PTR [rax]
  403bbc:	add    BYTE PTR [rdi],cl
  403bbe:	lock add BYTE PTR [rax],al
  403bc1:	(bad)  
  403bc2:	rol    BYTE PTR [rax],0x0
  403bc5:	add    eax,DWORD PTR [rax-0x7ff0000]
  403bcb:	add    BYTE PTR [rax],al
  403bcd:	(bad)  
  403bcf:	add    BYTE PTR [rax],al
  403bd1:	(bad)  
  403bd2:	loopne 0x403bd4
  403bd4:	add    BYTE PTR [rbx],al
  403bd6:	rol    BYTE PTR [rax],0x0
  403bd9:	add    eax,eax
  403bdb:	add    BYTE PTR [rax],al
  403bdd:	add    eax,esi
  403bdf:	add    BYTE PTR [rax],al
  403be1:	(bad)  
  403be2:	inc    BYTE PTR [rcx]
  403be4:	sar    BYTE PTR [rdi],0xff
  403be7:	ret    
  403be8:	lock jmp FWORD PTR [rax]
  403beb:	add    BYTE PTR [rax],al
  403bed:	add    BYTE PTR [rax],dl
  403bef:	add    BYTE PTR [rax],al
  403bf1:	add    BYTE PTR [rax],ah
  403bf3:	add    BYTE PTR [rax],al
  403bf5:	add    BYTE PTR [rcx],al
  403bf7:	add    BYTE PTR [rax+rax*1],al
  403bfa:	add    BYTE PTR [rax],al
  403bfc:	add    BYTE PTR [rax],al
  403bfe:	add    BYTE PTR [rax],0x0
	...
  403c15:	add    BYTE PTR [rax],al
  403c17:	add    BYTE PTR [rax+0x800000],al
  403c1d:	add    BYTE PTR [rax],al
  403c1f:	add    BYTE PTR [rax+0x8000],0x0
  403c26:	add    BYTE PTR [rax],0x80
  403c29:	add    BYTE PTR [rax-0x7fffff80],al
  403c2f:	add    BYTE PTR [rax-0x3f3f4000],0x0
  403c36:	add    BYTE PTR [rax],al
  403c38:	inc    DWORD PTR [rax]
  403c3a:	add    bh,bh
  403c3c:	add    BYTE PTR [rax],al
  403c3e:	add    bh,bh
  403c40:	inc    DWORD PTR [rax]
  403c42:	inc    DWORD PTR [rax]
  403c44:	add    BYTE PTR [rax],al
  403c46:	inc    DWORD PTR [rax]
  403c48:	inc    DWORD PTR [rax]
  403c4a:	(bad)  
  403c4b:	inc    DWORD PTR [rax]
  403c4d:	add    bh,bh
  403c4f:	(bad)  
  403c50:	inc    DWORD PTR [rax]
  403c52:	add    BYTE PTR [rax],al
  403c54:	add    BYTE PTR [rdi],al
  403c56:	(bad)  
  403c57:	and    esp,DWORD PTR [rdx]
  403c59:	add    BYTE PTR [rax],al
  403c5b:	add    BYTE PTR [rax],al
  403c5d:	jae    0x403cd2
  403c5f:	(bad)  
  403c60:	xor    BYTE PTR ss:[rax],al
  403c63:	add    BYTE PTR [rbx-0x49],dh
  403c66:	jg     0x403c9e
  403c68:	(bad)  
  403c69:	and    BYTE PTR [rax],al
  403c6b:	(bad)  
  403c6c:	(bad)  
  403c6d:	jae    0x403bf9
  403c6f:	icebp  
  403c70:	mul    DWORD PTR [rax]
  403c72:	add    BYTE PTR [rbx],al
  403c74:	mov    BYTE PTR [rdi+0x20f77f87],dh
  403c7a:	add    BYTE PTR [rbx],cl
  403c7c:	mov    esi,DWORD PTR [rbx-0x76]
  403c7f:	(bad)  
  403c80:	clc    
  403c81:	xor    BYTE PTR [rax],al
  403c83:	(bad)  
  403c84:	mov    BYTE PTR [rbx-0x5f777771],al
  403c8a:	add    BYTE PTR [rbx],cl
  403c8c:	mov    BYTE PTR [rdi+0x707a7a7a],dh
  403c92:	add    BYTE PTR [rdi],al
  403c94:	mov    esi,DWORD PTR [rbx+0x33]
  403c97:	xchg   DWORD PTR [rcx],esi
  403c99:	add    BYTE PTR [rax],al
  403c9b:	jnp    0x403d16
  403c9d:	jno    0x403cd6
  403c9f:	fwait
  403ca0:	js     0x403cd2
  403ca2:	(bad)  
  403ca3:	jns    0x403cd6
  403ca5:	add    DWORD PTR [rbx],esi
  403ca7:	cmp    DWORD PTR [rcx],0x77
  403caa:	add    BYTE PTR [rbx-0x64c8ce8d],cl
  403cb0:	jnp    0x403ce2
  403cb2:	or     BYTE PTR [rdi+0x739b3388],cl
  403cb8:	mov    BYTE PTR [rdi-0x47777500],al
  403cbe:	(bad)  
  403cbf:	mov    BYTE PTR [rdi-0x74ffff50],dh
  403cc5:	jo     0x403cc7
  403cc7:	mov    eax,0x80
  403ccc:	add    BYTE PTR [rax],al
  403cce:	add    BYTE PTR [rax],al
  403cd0:	add    BYTE PTR [rax],al
  403cd2:	inc    BYTE PTR [rcx]
  403cd4:	add    BYTE PTR [rax],al
  403cd6:	cld    
  403cd7:	add    DWORD PTR [rax],eax
  403cd9:	add    al,dh
  403cdb:	add    DWORD PTR [rax],eax
  403cdd:	add    al,ah
  403cdf:	add    DWORD PTR [rax],eax
  403ce1:	add    al,ah
  403ce3:	add    DWORD PTR [rax],eax
  403ce5:	add    al,ah
  403ce7:	add    DWORD PTR [rax],eax
  403ce9:	add    al,ah
  403ceb:	add    DWORD PTR [rax],eax
  403ced:	add    al,ah
  403cef:	add    DWORD PTR [rax],eax
  403cf1:	add    al,ah
  403cf3:	add    eax,DWORD PTR [rax]
  403cf5:	add    al,al
  403cf7:	add    DWORD PTR [rax],eax
  403cf9:	add    BYTE PTR [rax-0x40000000],al
  403cff:	add    DWORD PTR [rax],eax
  403d01:	add    BYTE PTR [rax-0x40000000],al
  403d07:	add    DWORD PTR [rax],0xc7f100
  403d0d:	add    bh,bh
  403d0f:	inc    DWORD PTR [rax]
  403d11:	add    BYTE PTR [rax],ch
  403d13:	add    BYTE PTR [rax],al
  403d15:	add    BYTE PTR [rax],ah
  403d17:	add    BYTE PTR [rax],al
  403d19:	add    BYTE PTR [rax+0x0],al
  403d1c:	add    BYTE PTR [rax],al
  403d1e:	add    DWORD PTR [rax],eax
  403d20:	or     BYTE PTR [rax],al
  403d22:	add    BYTE PTR [rax],al
  403d24:	add    BYTE PTR [rax],al
  403d26:	add    BYTE PTR [rax+rax*1],al
	...
  403d31:	add    BYTE PTR [rax],al
  403d33:	add    DWORD PTR [rax],eax
  403d35:	add    BYTE PTR [rax],al
  403d37:	add    DWORD PTR [rax],eax
  403d39:	add    BYTE PTR [rax],al
  403d3b:	add    BYTE PTR [rax],al
  403d3d:	add    BYTE PTR [rbx],dh
  403d3f:	xor    esi,DWORD PTR [rbx]
  403d41:	add    BYTE PTR [rbx],dh
  403d43:	xor    ax,WORD PTR [rax]
  403d46:	add    BYTE PTR [rbx],dh
  403d48:	data16 add BYTE PTR [rbx],dh
  403d4b:	xor    esp,DWORD PTR [rsi+0x0]
  403d4e:	add    BYTE PTR [rsi+0x66],ah
  403d51:	add    BYTE PTR [rbx],dh
  403d53:	data16 data16 add BYTE PTR [rsi+0x66],ah
  403d58:	data16 add BYTE PTR [rbx],dh
  403d5b:	cdq    
  403d5c:	xor    eax,DWORD PTR [rax]
  403d5e:	xor    ebx,DWORD PTR [rcx-0x6699ff9a]
  403d64:	data16 add BYTE PTR [rsi-0x34],ah
  403d68:	data16 add BYTE PTR [rax],al
  403d6b:	cwd    
  403d6d:	add    BYTE PTR [rbx],dh
  403d6f:	cwd    
  403d71:	add    BYTE PTR [rbx],dh
  403d73:	cdq    
  403d74:	cdq    
  403d75:	add    BYTE PTR [rsi-0x67],ah
  403d78:	cdq    
  403d79:	add    BYTE PTR [rsi-0x34],ah
  403d7c:	cdq    
  403d7d:	add    BYTE PTR [rbx],dh
  403d7f:	cdq    
  403d80:	int3   
  403d81:	add    BYTE PTR [rsi-0x67],ah
  403d84:	int3   
  403d85:	add    BYTE PTR [rsi-0x34],ah
  403d88:	int3   
  403d89:	add    BYTE PTR [rax-0x66ff5257],dl
  403d8f:	int3   
  403d90:	cdq    
  403d91:	add    BYTE PTR [rcx-0x66ff3367],bl
  403d97:	int3   
  403d98:	int3   
  403d99:	add    BYTE PTR [rcx-0x3fff0034],bl
  403d9f:	rol    al,0x0
  403da2:	int3   
  403da3:	int3   
  403da4:	int3   
  403da5:	add    al,al
  403da7:	fadd   st(0),st
  403da9:	add    bh,dl
  403dab:	xlat   BYTE PTR ds:[rbx]
  403dac:	xlat   BYTE PTR ds:[rbx]
  403dad:	add    ch,bl
  403daf:	fstp   st(5)
  403db1:	add    dh,al
  403db3:	(bad)  
  403db4:	out    dx,eax
  403db5:	add    dh,dl
  403db7:	out    0xe7,eax
  403db9:	add    ah,cl
  403dbb:	(bad)  
  403dbc:	inc    DWORD PTR [rax]
  403dbe:	jrcxz  0x403da3
  403dc0:	jrcxz  0x403dc2
  403dc2:	icebp  
  403dc3:	icebp  
  403dc4:	icebp  
  403dc5:	add    al,dh
  403dc7:	sti    
  403dc8:	inc    DWORD PTR [rax]
	...
  404136:	(bad)  
  404137:	(bad)  
  404138:	inc    DWORD PTR [rax]
	...
  404146:	add    BYTE PTR [rax],al
  404148:	or     BYTE PTR [rdx],al
  40414a:	add    al,BYTE PTR [rdx]
  40414c:	add    al,BYTE PTR [rdx]
  40414e:	add    al,BYTE PTR [rdx]
  404150:	add    al,BYTE PTR [rdx]
  404152:	add    al,BYTE PTR [rdx]
  404154:	add    al,BYTE PTR [rdx]
  404156:	add    al,BYTE PTR [rdx]
	...
  404168:	or     BYTE PTR [rdx],cl
  40416a:	or     cl,BYTE PTR [rcx]
  40416c:	or     DWORD PTR [rcx],ecx
  40416e:	or     BYTE PTR [rax],cl
  404170:	or     BYTE PTR [rax],cl
  404172:	or     BYTE PTR [rax],cl
  404174:	or     BYTE PTR [rax],cl
  404176:	or     BYTE PTR [rdx],al
	...
  404188:	or     BYTE PTR [rbx],bl
  40418a:	or     ecx,DWORD PTR [rdx]
  40418c:	or     DWORD PTR [rdx],eax
  40418e:	or     cl,BYTE PTR [rdx]
  404190:	or     DWORD PTR [rcx],ecx
  404192:	or     BYTE PTR [rcx],cl
  404194:	or     BYTE PTR [rcx],cl
  404196:	or     BYTE PTR [rdx],al
	...
  4041a8:	or     BYTE PTR [rbx],bl
  4041aa:	adc    BYTE PTR [rdx],cl
  4041ac:	add    bl,BYTE PTR [rcx]
  4041ae:	add    cl,BYTE PTR [rcx]
  4041b0:	or     cl,BYTE PTR [rax]
  4041b2:	or     DWORD PTR [rax],ecx
  4041b4:	or     DWORD PTR [rax],ecx
  4041b6:	or     BYTE PTR [rdx],al
	...
  4041c8:	or     BYTE PTR [rbx],bl
  4041ca:	adc    BYTE PTR [rdx],al
  4041cc:	sbb    eax,0xa021919
  4041d1:	or     DWORD PTR [rdi],eax
  4041d3:	add    cl,BYTE PTR [rcx]
  4041d5:	or     DWORD PTR [rax],ecx
  4041d7:	add    al,BYTE PTR [rax]
	...
  4041e5:	add    BYTE PTR [rax],al
  4041e7:	add    BYTE PTR [rdx],cl
  4041e9:	sbb    edx,DWORD PTR [rip+0x1a22ffff]        # 0x1a6341ee
  4041ef:	sbb    DWORD PTR [rdx],eax
  4041f1:	add    DWORD PTR [rdx],ebx
  4041f3:	sbb    DWORD PTR [rax],ecx
  4041f5:	or     DWORD PTR [rax],ecx
  4041f7:	add    al,BYTE PTR [rax]
	...
  404205:	add    BYTE PTR [rsp+rax*1],al
  404208:	or     bl,BYTE PTR [rbx]
  40420a:	adc    eax,0xffffff10
  40420f:	sbb    al,0x19
  404211:	sbb    al,0x1c
  404213:	sbb    DWORD PTR [rax],ecx
  404215:	or     DWORD PTR [rax],ecx
  404217:	add    al,BYTE PTR [rax]
	...
  404221:	add    BYTE PTR [rax],al
  404223:	add    BYTE PTR [rip+0x90f120d],cl        # 0x94f5436
  404229:	sbb    edx,DWORD PTR [rip+0xffffffffffff0b10]        # 0x3f4d3f
  40422f:	jmp    QWORD PTR [rdx]
  404231:	and    ah,BYTE PTR [rdx]
  404233:	sbb    cl,BYTE PTR [rcx]
  404235:	or     cl,BYTE PTR [rax]
  404237:	add    al,BYTE PTR [rax]
	...
  404241:	add    BYTE PTR [rdi],cl
  404243:	or     eax,0x120f1f1f
  404248:	or     bl,BYTE PTR [rbx]
  40424a:	adc    eax,0xff0a1015
  40424f:	and    bh,bh
  404251:	jmp    QWORD PTR [rdx]
  404253:	sbb    cl,BYTE PTR [rdx]
  404255:	or     DWORD PTR [rax],ecx
  404257:	add    al,BYTE PTR [rax]
  404259:	add    BYTE PTR [rax],al
  40425b:	add    BYTE PTR [rax],al
  40425d:	add    BYTE PTR [rax],al
  40425f:	add    BYTE PTR [rdi],cl
  404261:	movlps xmm3,QWORD PTR [rdi]
  404264:	(bad)  
  404265:	(bad)  
  404266:	adc    dl,BYTE PTR [rdx]
  404268:	or     bl,BYTE PTR [rbx]
  40426a:	adc    eax,0xff060a15
  40426f:	and    bh,bh
  404271:	and    esp,DWORD PTR [rdx]
  404273:	sbb    al,0xa
  404275:	or     cl,BYTE PTR [rcx]
  404277:	add    al,BYTE PTR [rax]
  404279:	add    BYTE PTR [rax],al
  40427b:	add    BYTE PTR [rax],al
  40427d:	add    BYTE PTR [rax],al
  40427f:	movlps xmm2,QWORD PTR [rdi]
  404282:	(bad)  
  404283:	and    ebx,DWORD PTR [rdi]
  404285:	(bad)  
  404286:	(bad)  
  404287:	adc    cl,BYTE PTR [rdx]
  404289:	sbb    edx,DWORD PTR [rip+0xffffffffffff1015]        # 0x3f52a4
  40428f:	(bad)  
  404290:	(bad)  
  404291:	(bad)  
  404292:	jmp    QWORD PTR [rcx]
  404294:	or     cl,BYTE PTR [rbx]
  404296:	or     DWORD PTR [rdx],eax
  404298:	add    BYTE PTR [rax],al
  40429a:	add    BYTE PTR [rax],al
  40429c:	add    BYTE PTR [rax],al
  40429e:	add    BYTE PTR [rdi],cl
  4042a0:	sbb    BYTE PTR [rdx],dl
  4042a2:	adc    ah,BYTE PTR [rbx]
  4042a4:	(bad)  
  4042a5:	(bad)  
  4042a6:	adc    dl,BYTE PTR [rdi]
  4042a8:	or     bl,BYTE PTR [rbx]
  4042aa:	adc    eax,0xffff1015
  4042af:	(bad)  
  4042b0:	(bad)  
  4042b1:	(bad)  
  4042b2:	(bad)  
  4042b3:	dec    DWORD PTR [rbx]
  4042b5:	or     cl,BYTE PTR [rcx]
  4042b7:	add    al,BYTE PTR [rax]
  4042b9:	add    BYTE PTR [rax],al
  4042bb:	add    BYTE PTR [rax],al
  4042bd:	add    BYTE PTR [rax],al
  4042bf:	movhps QWORD PTR [rdi],xmm2
  4042c2:	(bad)  
  4042c3:	and    ebx,DWORD PTR [rdi]
  4042c5:	(bad)  
  4042c6:	(bad)  
  4042c7:	adc    cl,BYTE PTR [rdx]
  4042c9:	sbb    edx,DWORD PTR [rip+0x15151515]        # 0x155557e4
  4042cf:	adc    eax,0x15151515
  4042d4:	adc    eax,0x20a0b
  4042d9:	add    BYTE PTR [rax],al
  4042db:	add    BYTE PTR [rax],al
  4042dd:	add    BYTE PTR [rax],al
  4042df:	prefetcht1 BYTE PTR [rdx]
  4042e2:	(bad)  
  4042e3:	and    ebx,DWORD PTR [rdi]
  4042e5:	sbb    BYTE PTR [rdx],dl
  4042e7:	(bad)  
  4042e8:	or     bl,BYTE PTR [rbx]
  4042ea:	sbb    ebx,DWORD PTR [rbx]
  4042ec:	sbb    ebx,DWORD PTR [rbx]
  4042ee:	sbb    ebx,DWORD PTR [rbx]
  4042f0:	sbb    ebx,DWORD PTR [rbx]
  4042f2:	sbb    ebx,DWORD PTR [rbx]
  4042f4:	sbb    ebx,DWORD PTR [rbx]
  4042f6:	or     eax,DWORD PTR [rdx]
  4042f8:	add    BYTE PTR [rax],al
  4042fa:	add    BYTE PTR [rax],al
  4042fc:	add    BYTE PTR [rax],al
  4042fe:	add    BYTE PTR [rdi],cl
  404300:	sbb    BYTE PTR [rdi],dl
  404302:	sbb    BYTE PTR [rdi],bl
  404304:	(bad)  
  404305:	(bad)  
  404306:	(bad)  
  404307:	adc    cl,BYTE PTR [rdx]
  404309:	or     cl,BYTE PTR [rdx]
  40430b:	or     cl,BYTE PTR [rdx]
  40430d:	or     cl,BYTE PTR [rdx]
  40430f:	or     cl,BYTE PTR [rdx]
  404311:	or     BYTE PTR [rdx],cl
  404313:	or     BYTE PTR [rdx],cl
  404315:	or     BYTE PTR [rax],cl
  404317:	or     BYTE PTR [rax],al
  404319:	add    BYTE PTR [rax],al
  40431b:	add    BYTE PTR [rax],al
  40431d:	add    BYTE PTR [rax],al
  40431f:	movhps QWORD PTR [rax],xmm3
  404322:	(bad)  
  404323:	(bad)  
  404324:	sbb    BYTE PTR [rdi],dl
  404326:	sbb    BYTE PTR [rbx],dl
  404328:	(bad)  
  404329:	adc    al,BYTE PTR [rsi]
  40432b:	add    ecx,DWORD PTR [rip+0xd060d06]        # 0xd465037
  404331:	or     eax,0x40d0d0d
	...
  40433e:	add    BYTE PTR [rdi],cl
  404340:	sbb    BYTE PTR [rdi],dl
  404342:	sbb    BYTE PTR [rsi],bl
  404344:	and    esp,DWORD PTR [rbx]
  404346:	(bad)  
  404347:	sbb    BYTE PTR [rdi],dl
  404349:	(bad)  
  40434a:	(bad)  
  40434b:	add    eax,DWORD PTR [rsi]
  40434d:	or     eax,0x60d0d06
  404352:	or     eax,0x40d0d
	...
  40435f:	prefetcht1 BYTE PTR [rdi]
  404362:	sbb    BYTE PTR [rdi],bl
  404364:	and    esp,DWORD PTR [rbx]
  404366:	(bad)  
  404367:	(bad)  
  404368:	sbb    BYTE PTR [rdi],dl
  40436a:	(bad)  
  40436b:	add    eax,DWORD PTR [rbx]
  40436d:	add    ecx,DWORD PTR [rip+0xc060d0d]        # 0xc465080
  404373:	or     eax,0x40d
  404378:	add    BYTE PTR [rax],al
  40437a:	add    BYTE PTR [rax],al
  40437c:	add    BYTE PTR [rax],al
  40437e:	add    BYTE PTR [rdi],cl
  404380:	(bad)  
  404381:	sbb    BYTE PTR [rdi],dl
  404383:	and    esp,DWORD PTR [rbx]
  404385:	(bad)  
  404386:	sbb    BYTE PTR [rax],bl
  404388:	(bad)  
  404389:	(bad)  
  40438a:	(bad)  
  40438b:	(bad)  
  40438c:	(bad)  
  40438d:	clts   
  40438f:	add    eax,DWORD PTR [rbx]
  404391:	or     al,0x6
  404393:	or     eax,0x405
  404398:	add    BYTE PTR [rax],al
  40439a:	add    BYTE PTR [rax],al
  40439c:	add    BYTE PTR [rax],al
  40439e:	add    BYTE PTR [rdi],cl
  4043a0:	sbb    BYTE PTR [rax],bl
  4043a2:	(bad)  
  4043a3:	(bad)  
  4043a4:	adc    dl,BYTE PTR [rdx]
  4043a6:	(bad)  
  4043a7:	prefetchwt1 BYTE PTR [rcx]
  4043aa:	or     eax,0xf171712
  4043af:	(bad)  
  4043b0:	lsl    eax,WORD PTR [rbx]
  4043b3:	add    eax,DWORD PTR [rip+0x4]        # 0x4043bd
  4043b9:	add    BYTE PTR [rax],al
  4043bb:	add    BYTE PTR [rax],al
  4043bd:	add    BYTE PTR [rax],al
  4043bf:	movhps QWORD PTR [rdx],xmm2
  4043c2:	adc    cl,BYTE PTR [rdi]
  4043c4:	(bad)  
  4043c5:	(bad)  
  4043c6:	(bad)  
  4043c7:	sbb    BYTE PTR [rdx],dl
  4043c9:	adc    cl,BYTE PTR [rip+0x1717120e]        # 0x175755dd
  4043cf:	sbb    BYTE PTR [rdi],dl
  4043d1:	adc    al,0xf
  4043d3:	lsl    eax,WORD PTR [rax+rax*1]
  4043d7:	add    BYTE PTR [rax],al
  4043d9:	add    BYTE PTR [rax],al
  4043db:	add    BYTE PTR [rax],al
  4043dd:	add    BYTE PTR [rdx],dl
  4043df:	adc    dl,BYTE PTR [rdx]
  4043e1:	adc    bl,BYTE PTR [rsi]
  4043e3:	(bad)  
  4043e4:	(bad)  
  4043e5:	adc    al,0x12
  4043e7:	adc    dl,BYTE PTR [rdx]
  4043e9:	or     eax,0x1212120d
  4043ee:	movlps xmm2,QWORD PTR [rdi]
  4043f1:	sbb    BYTE PTR [rdi],dl
  4043f3:	adc    cl,BYTE PTR [rdi]
  4043f5:	(bad)  
  4043f6:	sldt   WORD PTR [rax]
  4043f9:	add    BYTE PTR [rax],al
  4043fb:	add    BYTE PTR [rdx],dl
  4043fd:	adc    ah,BYTE PTR [rax]
  4043ff:	(bad)  
  404400:	(bad)  
  404401:	(bad)  
  404402:	(bad)  
  404403:	adc    dl,BYTE PTR [rdx]
  404405:	adc    cl,BYTE PTR [rip+0xd0d0d0d]        # 0xd4d5118
  40440b:	adc    dl,BYTE PTR [rdx]
  40440d:	adc    dl,BYTE PTR [rdx]
  40440f:	adc    dl,BYTE PTR [rdx]
  404411:	movlps xmm3,QWORD PTR [rax]
  404414:	(bad)  
  404415:	adc    dl,BYTE PTR [rdi+rcx*1]
  404418:	add    BYTE PTR [rax],al
  40441a:	add    BYTE PTR [rdx],dl
  40441c:	adc    dl,BYTE PTR [rdx]
  40441e:	adc    dl,BYTE PTR [rdx]
  404420:	adc    dl,BYTE PTR [rdx]
  404422:	adc    cl,BYTE PTR [rip+0xd0d0d0d]        # 0xd4d5135
  404428:	or     eax,0x12120d0d
  40442d:	adc    dl,BYTE PTR [rdx]
  40442f:	adc    dl,BYTE PTR [rdx]
  404431:	adc    dl,BYTE PTR [rdx]
  404433:	movlps xmm1,QWORD PTR [rdi]
  404436:	(bad)  
  404437:	(bad)  
  404438:	sldt   WORD PTR [rax]
  40443b:	add    BYTE PTR [rax],al
  40443d:	add    BYTE PTR [rax],al
  40443f:	(bad)  
  404440:	movlps xmm1,QWORD PTR [rsi]
  404443:	or     eax,0xd0d0d0d
  404448:	or     eax,0x13120d0d
  40444d:	adc    dl,BYTE PTR [rbx]
  40444f:	adc    dl,BYTE PTR [rbx]
  404451:	adc    cl,BYTE PTR [rdi]
  404453:	adc    cl,BYTE PTR [rdi]
  404455:	adc    al,BYTE PTR [rax]
  404457:	add    BYTE PTR [rax],al
  404459:	add    BYTE PTR [rax],al
  40445b:	add    BYTE PTR [rax],al
  40445d:	add    BYTE PTR [rdx],dl
  40445f:	adc    ebx,DWORD PTR [rax]
  404461:	(bad)  
  404462:	adc    dl,BYTE PTR [rdx]
  404464:	prefetchw BYTE PTR [rip+0xd0d0d0d]        # 0xd4d5178
  40446b:	adc    dl,BYTE PTR [rdx]
  40446d:	adc    dl,BYTE PTR [rdx]
  40446f:	adc    dl,BYTE PTR [rdx]
  404471:	adc    dl,BYTE PTR [rdx]
  404473:	adc    edx,DWORD PTR [rdx]
  404475:	adc    dl,BYTE PTR [rdx]
  404477:	add    BYTE PTR [rax],al
  404479:	add    BYTE PTR [rax],al
  40447b:	add    BYTE PTR [rax],al
  40447d:	adc    bl,BYTE PTR [rsi]
  40447f:	(bad)  
  404480:	(bad)  
  404481:	sbb    BYTE PTR [rdi],dl
  404483:	sbb    BYTE PTR [rdx],dl
  404485:	(bad)  
  404486:	(bad)  
  404487:	(bad)  
  404488:	or     eax,0x13120d0d
  40448d:	adc    dl,BYTE PTR [rdx]
  40448f:	adc    edx,DWORD PTR [rdx]
  404491:	adc    dl,BYTE PTR [rbx]
  404493:	adc    dl,BYTE PTR [rdi]
  404495:	(bad)  
  404496:	adc    dl,BYTE PTR [rdx]
  404498:	add    BYTE PTR [rax],al
  40449a:	add    BYTE PTR [rax],al
  40449c:	adc    bl,BYTE PTR [rsi]
  40449e:	and    BYTE PTR [rax],ah
  4044a0:	(bad)  
  4044a1:	(bad)  
  4044a2:	sbb    BYTE PTR [rdi],dl
  4044a4:	(bad)  
  4044a5:	adc    edx,DWORD PTR [rdx]
  4044a7:	adc    cl,BYTE PTR [rsi]
  4044a9:	(bad)  
  4044aa:	(bad)  
  4044ab:	adc    dl,BYTE PTR [rdx]
  4044ad:	adc    dl,BYTE PTR [rbx]
  4044af:	adc    dl,BYTE PTR [rbx]
  4044b1:	sbb    BYTE PTR [rdi],dl
  4044b3:	(bad)  
  4044b4:	sbb    BYTE PTR [rdi],dl
  4044b6:	sbb    BYTE PTR [rdi],dl
  4044b8:	adc    al,BYTE PTR [rax]
  4044ba:	add    BYTE PTR [rax],al
  4044bc:	adc    dl,BYTE PTR [rdx]
  4044be:	(bad)  
  4044bf:	(bad)  
  4044c0:	and    BYTE PTR [rdi],bl
  4044c2:	and    BYTE PTR [rsi],bl
  4044c4:	sbb    BYTE PTR [rax],bl
  4044c6:	(bad)  
  4044c7:	adc    edx,DWORD PTR [rdx]
  4044c9:	adc    dl,BYTE PTR [rdx]
  4044cb:	movlps QWORD PTR [rdx],xmm2
  4044ce:	(bad)  
  4044cf:	(bad)  
  4044d0:	(bad)  
  4044d1:	(bad)  
  4044d2:	sbb    BYTE PTR [rax],bl
  4044d4:	(bad)  
  4044d5:	(bad)  
  4044d6:	(bad)  
  4044d7:	adc    dl,BYTE PTR [rdx]
  4044d9:	add    BYTE PTR [rax],al
  4044db:	add    BYTE PTR [rax],al
  4044dd:	add    BYTE PTR [rdx],dl
  4044df:	adc    dl,BYTE PTR [rdx]
  4044e1:	(bad)  
  4044e2:	(bad)  
  4044e3:	(bad)  
  4044e4:	(bad)  
  4044e5:	sbb    BYTE PTR [rdi],dl
  4044e7:	sbb    BYTE PTR [rdi],dl
  4044e9:	adc    cl,BYTE PTR [rdi]
  4044eb:	adc    dl,BYTE PTR [rax+rbx*1]
  4044ee:	(bad)  
  4044ef:	sbb    BYTE PTR [rax],bl
  4044f1:	(bad)  
  4044f2:	(bad)  
  4044f3:	(bad)  
  4044f4:	adc    dl,BYTE PTR [rdx]
  4044f6:	adc    al,BYTE PTR [rax]
	...
  404500:	add    BYTE PTR [rdx],dl
  404502:	adc    dl,BYTE PTR [rdx]
  404504:	(bad)  
  404505:	(bad)  
  404506:	sbb    BYTE PTR [rdi],dl
  404508:	adc    al,BYTE PTR [rax]
  40450a:	add    BYTE PTR [rax],al
  40450c:	adc    dl,BYTE PTR [rdx]
  40450e:	(bad)  
  40450f:	(bad)  
  404510:	(bad)  
  404511:	(bad)  
  404512:	adc    dl,BYTE PTR [rdx]
	...
  404524:	adc    dl,BYTE PTR [rdx]
  404526:	(bad)  
  404527:	adc    al,BYTE PTR [rax]
  404529:	add    BYTE PTR [rax],al
  40452b:	add    BYTE PTR [rax],al
  40452d:	add    BYTE PTR [rdx],dl
  40452f:	adc    dl,BYTE PTR [rdx]
  404531:	adc    al,BYTE PTR [rax]
  404533:	add    BYTE PTR [rax],al
  404535:	add    BYTE PTR [rax],al
  404537:	add    BYTE PTR [rax],al
  404539:	add    bh,bh
  40453b:	cld    
  40453c:	add    BYTE PTR [rbx],al
  40453e:	(bad)  
  40453f:	cld    
  404540:	add    BYTE PTR [rbx],al
  404542:	(bad)  
  404543:	cld    
  404544:	add    BYTE PTR [rbx],al
  404546:	(bad)  
  404547:	cld    
  404548:	add    BYTE PTR [rbx],al
  40454a:	(bad)  
  40454b:	cld    
  40454c:	add    BYTE PTR [rbx],al
  40454e:	(bad)  
  40454f:	cld    
  404550:	add    BYTE PTR [rbx],al
  404552:	push   rax
  404554:	add    BYTE PTR [rbx],al
  404556:	inc    eax
  404558:	add    BYTE PTR [rbx],al
  40455a:	inc    DWORD PTR [rax]
  40455c:	add    BYTE PTR [rbx],al
  40455e:	cld    
  40455f:	add    BYTE PTR [rax],al
  404561:	add    edi,eax
  404563:	add    BYTE PTR [rax],al
  404565:	add    edi,eax
  404567:	add    BYTE PTR [rax],al
  404569:	add    edi,eax
  40456b:	add    BYTE PTR [rax],al
  40456d:	add    edi,eax
  40456f:	add    BYTE PTR [rax],al
  404571:	add    edi,eax
  404573:	add    BYTE PTR [rax],al
  404575:	add    edi,eax
  404577:	add    BYTE PTR [rax],al
  404579:	psubb  mm0,QWORD PTR [rax]
  40457c:	add    BYTE PTR [rdi],cl
  40457e:	clc    
  40457f:	add    BYTE PTR [rax],al
  404581:	psubb  mm0,QWORD PTR [rax]
  404584:	add    BYTE PTR [rdi],cl
  404586:	clc    
  404587:	add    BYTE PTR [rax],al
  404589:	psubb  mm0,QWORD PTR [rax]
  40458c:	add    BYTE PTR [rdi],cl
  40458e:	lock add BYTE PTR [rax],al
  404591:	(bad)  
  404592:	rol    BYTE PTR [rax],0x0
  404595:	add    eax,DWORD PTR [rax-0x7ff0000]
  40459b:	add    BYTE PTR [rax],al
  40459d:	(bad)  
  40459f:	add    BYTE PTR [rax],al
  4045a1:	(bad)  
  4045a2:	loopne 0x4045a4
  4045a4:	add    BYTE PTR [rbx],al
  4045a6:	rol    BYTE PTR [rax],0x0
  4045a9:	add    eax,eax
  4045ab:	add    BYTE PTR [rax],al
  4045ad:	add    eax,esi
  4045af:	add    BYTE PTR [rax],al
  4045b1:	(bad)  
  4045b2:	inc    BYTE PTR [rcx]
  4045b4:	sar    BYTE PTR [rdi],0xff
  4045b7:	ret    
  4045b8:	lock jmp FWORD PTR [rax]
  4045bb:	add    BYTE PTR [rax],al
  4045bd:	add    BYTE PTR [rax],dl
  4045bf:	add    BYTE PTR [rax],al
  4045c1:	add    BYTE PTR [rax],ah
  4045c3:	add    BYTE PTR [rax],al
  4045c5:	add    BYTE PTR [rcx],al
  4045c7:	add    BYTE PTR [rax],cl
  4045c9:	add    BYTE PTR [rax],al
  4045cb:	add    BYTE PTR [rax],al
  4045cd:	add    BYTE PTR [rax],al
  4045cf:	add    DWORD PTR [rax],eax
	...
  4045d9:	add    BYTE PTR [rax],al
  4045db:	add    DWORD PTR [rax],eax
  4045dd:	add    BYTE PTR [rax],al
  4045df:	add    DWORD PTR [rax],eax
  4045e1:	add    BYTE PTR [rax],al
  4045e3:	add    BYTE PTR [rax],al
  4045e5:	add    BYTE PTR [rax+rdx*2],cl
  4045e8:	sbb    al,BYTE PTR [rax]
  4045ea:	sbb    ah,BYTE PTR [rbx+0x2a]
  4045ed:	add    BYTE PTR [rdx+rsi*2],al
  4045f0:	and    eax,0x2a7d0c00
  4045f5:	add    BYTE PTR [rdx],dl
  4045f7:	jg     0x40462a
  4045f9:	add    BYTE PTR [rcx],ah
  4045fb:	ins    BYTE PTR es:[rdi],dx
  4045fc:	xor    BYTE PTR [rax],al
  4045fe:	(bad)  
  4045ff:	gs cmp al,0x0
  404602:	xor    esp,DWORD PTR [rdx+0x3f]
  404605:	add    BYTE PTR [rax],ch
  404607:	je     0x40463f
  404609:	add    BYTE PTR [rdx],ch
  40460b:	je     0x404645
  40460d:	add    BYTE PTR [rax],al
  40460f:	sbb    al,0x4b
  404611:	add    BYTE PTR [rax],al
  404613:	and    DWORD PTR [rax+rax*1+0x7],edx
  404617:	es push rsp
  404619:	add    BYTE PTR [rax],al
  40461b:	(bad)  
  40461c:	pop    rdx
  40461d:	add    BYTE PTR [rax],al
  40461f:	sub    DWORD PTR [rdx+0x0],ebx
  404622:	add    edi,DWORD PTR [rax+rsi*2]
  404625:	add    BYTE PTR [rip+0x35004076],ch        # 0x354086a1
  40462b:	jbe    0x404672
  40462d:	add    BYTE PTR [rax],al
  40462f:	rex.B outs dx,DWORD PTR ds:[rsi]
  404631:	add    BYTE PTR [rbx],al
  404633:	rex.X jne 0x404636
  404636:	or     eax,0x14002d82
  40463b:	xchg   BYTE PTR [rip+0x35801a00],dh        # 0x35c06041
  404641:	add    BYTE PTR [rdx],bl
  404643:	mov    DWORD PTR [rdi],esi
  404645:	add    BYTE PTR [rip+0x34003f8e],ah        # 0x344085d9
  40464b:	add    DWORD PTR [rax+0x0],0x38
  40464f:	mov    WORD PTR [rbp+0x0],es
  404652:	(bad)  
  404653:	or     DWORD PTR [rax+0x0],0x45
  404657:	mov    dl,BYTE PTR [rdi+0x0]
  40465a:	push   rdx
  40465b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40465c:	push   0x0
  40465e:	pop    rdx
  40465f:	mov    dh,0x6b
  404661:	add    BYTE PTR [rcx-0x4a],bl
  404664:	outs   dx,BYTE PTR ds:[rsi]
  404665:	add    BYTE PTR [rcx+rbp*4+0x68],ah
  404669:	add    BYTE PTR [rcx-0x40],ah
  40466c:	js     0x40466e
  40466e:	or     al,0x52
  404670:	mov    BYTE PTR [rax],al
  404672:	or     BYTE PTR [rdi-0x77],dl
  404675:	add    BYTE PTR [rip+0xe008a5c],cl        # 0xe40d0d7
  40467b:	pop    rsi
  40467c:	mov    es,WORD PTR [rax]
  40467e:	sbb    edx,DWORD PTR [rbp-0x7c]
  404681:	add    BYTE PTR [rdi],dl
  404683:	(bad)  
  404684:	pop    QWORD PTR [rax]
  404686:	adc    BYTE PTR [rcx-0x70],ah
  404689:	add    BYTE PTR [rsp+riz*2],dl
  40468c:	xchg   edi,eax
  40468d:	add    BYTE PTR [rbx],dl
  40468f:	imul   ebx,DWORD PTR [rsi-0x7098d100],0x9d722200
  404699:	add    BYTE PTR [rdx],ah
  40469b:	ja     0x404644
  40469d:	add    BYTE PTR [rdx],ch
  40469f:	js     0x404645
  4046a1:	add    BYTE PTR [rdi],dh
  4046a3:	jnp    0x40464c
  4046a5:	add    BYTE PTR [rax+0x75],al
  4046a8:	cdq    
  4046a9:	add    BYTE PTR [rcx+rax*4],ch
  4046ac:	scas   eax,DWORD PTR es:[rdi]
  4046ad:	add    BYTE PTR [rip+0x2a00b181],ch        # 0x2a40f834
  4046b3:	xor    DWORD PTR [rbp-0x457bde00],0xb9882d00
  4046bd:	add    BYTE PTR [rip+0x3400bf8d],ch        # 0x34410650
  4046c3:	mov    bh,BYTE PTR [rcx-0x4372c500]
  4046c9:	add    BYTE PTR [rbp+rsi*4-0x75],bh
  4046cd:	add    BYTE PTR [rax-0x80],cl
  4046d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4046d1:	add    BYTE PTR [rbp-0x7d],al
  4046d4:	stos   DWORD PTR es:[rdi],eax
  4046d5:	add    BYTE PTR [rbx-0x78],cl
  4046d8:	lods   al,BYTE PTR ds:[rsi]
  4046d9:	add    BYTE PTR [rcx-0x78],al
  4046dc:	mov    cl,0x0
  4046de:	rex.RB mov ?,WORD PTR [r14-0x446cba00]
  4046e5:	add    BYTE PTR [rdi-0x6b],al
  4046e8:	mov    ebp,0xb9934b00
  4046ed:	add    BYTE PTR [rbp-0x66],dl
  4046f0:	mov    edi,0xb2986800
  4046f5:	add    BYTE PTR [rdx-0x65],ah
  4046f8:	mov    ebx,0x8ccf7a00
  4046fd:	add    BYTE PTR [rdi+rcx*4],dh
  404700:	rol    DWORD PTR [rax],0x33
  404703:	xchg   edx,eax
  404704:	(bad)
  404707:	xchg   ebp,eax
  404708:	(bad)  
  404709:	add    BYTE PTR [rbx-0x67],al
  40470c:	mov    DWORD PTR [rax],0xc1984b
  404712:	rex.B (bad) 
  404714:	enter  0x5200,0x9a
  404718:	ret    
  404719:	add    BYTE PTR [rbp-0x63],dl
  40471c:	(bad)  
  40471d:	add    BYTE PTR [rdi-0x67],bl
  404720:	rol    DWORD PTR [rax],0x5b
  404723:	pushf  
  404724:	rol    DWORD PTR [rax],0x59
  404727:	lahf   
  404728:	mov    BYTE PTR [rax],0x56
  40472b:	pushf  
  40472c:	retf   
  40472d:	add    BYTE PTR [rsi-0x61],ah
  404730:	ret    0x5100
  404733:	movabs ds:0xa75d00caa35b00cd,al
  40473c:	int    0x0
  40473e:	rex.WXB movabs ds:0xa45900d0a05b00d2,al
  404748:	rol    BYTE PTR [rax],cl
  40474a:	(bad)  
  40474b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40474c:	retf   0x6100
  40474f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  404750:	int    0x0
  404752:	outs   dx,DWORD PTR ds:[rsi]
  404753:	test   al,0xc8
  404755:	add    BYTE PTR [rbx+rbp*4-0x34],ch
  404759:	add    BYTE PTR [rax-0x58],bh
  40475c:	leave  
  40475d:	add    BYTE PTR [rbp-0x52],ah
  404760:	(bad)  
  404761:	add    BYTE PTR [rdi-0x53],ch
  404764:	rol    BYTE PTR [rax],1
  404766:	jae    0x40471c
  404768:	fiadd  DWORD PTR [rax]
  40476a:	js     0x404726
  40476c:	fild   WORD PTR [rax]
  40476e:	gs mov bh,0xe1
  404771:	add    BYTE PTR [rdx-0x47],ch
  404774:	jrcxz  0x404776
  404776:	jns    0x404735
  404778:	loop   0x40477a
  40477a:	jne    0x40473d
  40477c:	call   0xffffffffeb03bf81
  404781:	add    BYTE PTR [rsp+rsi*4-0x227aff6b],cl
  404788:	nop
  404789:	add    BYTE PTR [rdx-0x68ff631d],dl
  40478f:	out    0x9e,eax
  404791:	add    BYTE PTR [rsi-0x64ff5329],bl
  404797:	in     eax,0xa3
  404799:	add    BYTE PTR [rcx-0x5fff5819],ah
  40479f:	jmp    0xffffffffeeea484b
  4047a4:	mov    al,0x0
  4047a6:	mov    ebx,0x8500b4f6
  4047ab:	mov    edi,0xc38d00e0
  4047b0:	fiadd  WORD PTR [rax]
  4047b2:	mov    esp,0x8000c1fa
  4047b7:	ret    
  4047b8:	out    0x0,eax
  4047ba:	pop    rbp
  4047bc:	in     al,0x0
  4047be:	add    edi,0xcd8f00ec
  4047c4:	in     al,dx
  4047c5:	add    BYTE PTR [rbx-0x6eff1536],dl
  4047cb:	(bad)  
  4047cc:	out    dx,eax
  4047cd:	add    BYTE PTR [rcx-0x60ff0c2e],bl
  4047d3:	(bad)  
  4047d5:	add    BYTE PTR [rdi-0x45ff192d],ch
  4047db:	fldl2t 
  4047dd:	add    BYTE PTR [rax-0x5cff0f2d],ah
  4047e3:	fdiv   st,st(3)
  4047e5:	add    BYTE PTR [rdi-0x42ff0e22],dh
  4047eb:	in     eax,0xfc
  4047ed:	add    al,cl
  4047ef:	out    dx,eax
  4047f0:	inc    DWORD PTR [rax]
  4047f2:	shr    eax,1
  4047f4:	repz add cl,dh
  4047f7:	push   rdi
  4047f9:	add    ch,dh
  4047fb:	(bad)  
  4047fc:	stc    
	...
  4049dd:	add    bh,bh
  4049df:	(bad)  
  4049e0:	inc    DWORD PTR [rax]
  4049e2:	add    BYTE PTR [rax],al
  4049e4:	add    BYTE PTR [rax],al
  4049e6:	add    BYTE PTR [rax],al
  4049e8:	add    BYTE PTR [rsi],bl
  4049ea:	sbb    ebx,DWORD PTR [rdx]
  4049ec:	or     DWORD PTR [rdx],ecx
  4049ee:	(bad)  
  4049ef:	add    al,BYTE PTR [rcx]
  4049f1:	add    BYTE PTR [rax],al
  4049f3:	add    BYTE PTR [rax],al
  4049f5:	add    BYTE PTR [rax],al
  4049f7:	add    BYTE PTR [rip+0x812221e],bh        # 0x8526c1b
  4049fd:	sbb    BYTE PTR [rsi],dl
  4049ff:	add    eax,0x3
  404a04:	add    BYTE PTR [rax],al
  404a06:	cmp    eax,0x201e3f3d
  404a0b:	test   DWORD PTR [rax],ecx
  404a0d:	(bad)  
  404a0e:	adc    DWORD PTR [rip+0x15],ebx        # 0x404a29
  404a14:	add    BYTE PTR [rip+0x1e528473],bh        # 0x1e92ce8d
  404a1a:	imul   esp,DWORD PTR [rax],0x3a850885
  404a20:	add    al,0x0
  404a22:	add    BYTE PTR [rax],al
  404a24:	add    BYTE PTR [rax+0x76],al
  404a27:	jge    0x404a81
  404a29:	(bad)  
  404a2a:	push   0x20
  404a2c:	and    bh,bh
  404a2e:	jmp    FWORD PTR [rax+0x17]
  404a31:	add    BYTE PTR [rax],al
  404a33:	add    BYTE PTR [rax],al
  404a35:	rex.WRX
  404a36:	gs pop rdi
  404a38:	pop    rax
  404a39:	(bad)  
  404a3a:	imul   eax,DWORD PTR [rsi-0x7b],0xffffff85
  404a3e:	xchg   BYTE PTR [rcx+rbx*1+0x0],ch
  404a42:	add    BYTE PTR [rax],al
  404a44:	add    BYTE PTR [rbp+0x78],dl
  404a47:	and    DWORD PTR [rdx+0x1e],0x6e707471
  404a4e:	ins    DWORD PTR es:[rdi],dx
  404a4f:	outs   dx,DWORD PTR ds:[rsi]
  404a50:	and    BYTE PTR [rax],al
  404a52:	add    BYTE PTR [rax],al
  404a54:	add    BYTE PTR [rbp-0x80],dl
  404a57:	jle    0x404ab4
  404a59:	and    DWORD PTR [rcx],esp
  404a5b:	and    DWORD PTR [rcx],esp
  404a5d:	and    DWORD PTR [rcx],esp
  404a5f:	and    DWORD PTR [rax+rax*1],ebx
  404a62:	add    BYTE PTR [rax],al
  404a64:	add    BYTE PTR [rdx+0x5d],al
  404a67:	(bad)  
  404a68:	rex.WXB and rax,0x43512d13
  404a6e:	sub    al,0xd
  404a70:	add    BYTE PTR [rax],al
  404a72:	add    BYTE PTR [rax],al
  404a74:	rex.RB pop r13
  404a76:	push   rbx
  404a77:	cmp    al,0x27
  404a79:	adc    BYTE PTR [rsi+rsi*1],ah
  404a7c:	xor    al,BYTE PTR [rax+0x5b]
  404a7f:	push   rcx
  404a80:	cmp    eax,DWORD PTR [rax]
  404a82:	add    BYTE PTR [rbp+rdi*1+0x30],al
  404a86:	and    ecx,DWORD PTR [rip+0x4c250e0b]        # 0x4c655897
  404a8c:	rex.WB cmp BYTE PTR [r14],bpl
  404a8f:	(bad)  
  404a90:	xor    DWORD PTR [rbx],edi
  404a92:	add    BYTE PTR [rax],al
  404a94:	pop    rsi
  404a95:	(bad)  
  404a96:	cmp    DWORD PTR [rdx],ebp
  404a98:	adc    al,0xf
  404a9a:	sub    cl,BYTE PTR [rdx+0x33]
  404a9d:	xor    esi,DWORD PTR [rip+0x3e36]        # 0x4088d9
  404aa3:	pop    rsi
  404aa4:	(bad)  
  404aa5:	cmp    DWORD PTR [rbx+riz*2+0x48],0x2b
  404aaa:	sub    BYTE PTR [rdx],dh
  404aac:	rex.RXB push r15
  404aae:	fs ja  0x404b26
  404ab1:	push   rcx
  404ab2:	add    BYTE PTR [rax],al
  404ab4:	pop    rsi
  404ab5:	pop    rsi
  404ab6:	jg     0x404b33
  404ab8:	addr32 push rsp
  404aba:	add    BYTE PTR [rsi+0x66],cl
  404abd:	jp     0x404b39
  404abf:	pop    rsi
  404ac0:	pop    rsi
  404ac1:	add    BYTE PTR [rax],al
  404ac3:	add    BYTE PTR [rax],al
  404ac5:	add    BYTE PTR [rsi+0x5e],bl
  404ac8:	pop    rsi
  404ac9:	add    BYTE PTR [rax],al
  404acb:	add    BYTE PTR [rsi+0x72],bl
  404ace:	pop    rsi
	...
  404adf:	add    BYTE PTR [rax],al
  404ae1:	add    dh,bh
  404ae3:	add    DWORD PTR [rax],eax
  404ae5:	add    ah,bh
  404ae7:	add    DWORD PTR [rax],eax
  404ae9:	add    al,dh
  404aeb:	add    DWORD PTR [rax],eax
  404aed:	add    al,ah
  404aef:	add    DWORD PTR [rax],eax
  404af1:	add    al,ah
  404af3:	add    DWORD PTR [rax],eax
  404af5:	add    al,ah
  404af7:	add    DWORD PTR [rax],eax
  404af9:	add    al,ah
  404afb:	add    DWORD PTR [rax],eax
  404afd:	add    al,ah
  404aff:	add    DWORD PTR [rax],eax
  404b01:	add    al,ah
  404b03:	add    eax,DWORD PTR [rax]
  404b05:	add    al,al
  404b07:	add    DWORD PTR [rax],eax
  404b09:	add    BYTE PTR [rax-0x40000000],al
  404b0f:	add    DWORD PTR [rax],eax
  404b11:	add    BYTE PTR [rax-0x40000000],al
  404b17:	add    DWORD PTR [rax],0xc7f100
  404b1d:	add    bh,bh
  404b1f:	inc    DWORD PTR [rax]
  404b21:	add    BYTE PTR [rax],ch
  404b23:	add    BYTE PTR [rax],al
  404b25:	add    BYTE PTR [rax],ah
  404b27:	add    BYTE PTR [rax],al
  404b29:	add    BYTE PTR [rax+0x0],al
  404b2c:	add    BYTE PTR [rax],al
  404b2e:	add    DWORD PTR [rax],eax
  404b30:	and    BYTE PTR [rax],al
  404b32:	add    BYTE PTR [rax],al
  404b34:	add    BYTE PTR [rax],al
  404b36:	adc    BYTE PTR [rax],0x0
	...
  404b81:	add    BYTE PTR [rbx],dh
  404b83:	cdq    
  404b84:	xor    edi,edi
  404b86:	xor    esp,DWORD PTR [rsi+0x33]
  404b89:	push   QWORD PTR [rbx]
  404b8b:	xor    di,di
  404b8e:	xor    esp,DWORD PTR [rsi+0x33]
  404b91:	push   QWORD PTR [rbx]
  404b93:	xor    di,di
  404b96:	xor    esp,DWORD PTR [rsi+0x33]
  404b99:	push   QWORD PTR [rbx]
  404b9b:	xor    di,di
  404b9e:	xor    esp,DWORD PTR [rsi+0x33]
  404ba1:	push   QWORD PTR [rbx]
  404ba3:	xor    di,di
  404ba6:	xor    esp,DWORD PTR [rsi+0x33]
  404ba9:	push   QWORD PTR [rbx]
  404bab:	xor    di,di
  404bae:	xor    esp,DWORD PTR [rsi+0x33]
  404bb1:	push   QWORD PTR [rbx]
  404bb3:	xor    di,di
  404bb6:	xor    esp,DWORD PTR [rsi+0x33]
  404bb9:	push   QWORD PTR [rbx]
  404bbb:	xor    di,di
  404bbe:	xor    esp,DWORD PTR [rsi+0x33]
  404bc1:	inc    DWORD PTR [rax]
	...
  404bff:	add    BYTE PTR [rax],al
  404c01:	add    BYTE PTR [rbx],dh
  404c03:	cdq    
  404c04:	xor    edi,edi
  404c06:	cwd    
  404c08:	jmp    WORD PTR [rsi-0x67]
  404c0c:	push   WORD PTR [rbx]
  404c0f:	cdq    
  404c10:	push   WORD PTR [rbx]
  404c13:	cdq    
  404c14:	push   WORD PTR [rbx]
  404c17:	cdq    
  404c18:	push   WORD PTR [rbx]
  404c1b:	cdq    
  404c1c:	xor    edi,edi
  404c1e:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  404c24:	xor    edi,edi
  404c26:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  404c2c:	xor    edi,edi
  404c2e:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  404c34:	xor    edi,edi
  404c36:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  404c3c:	xor    edi,edi
  404c3e:	xor    esp,DWORD PTR [rsi+0x33]
  404c41:	inc    DWORD PTR [rax]
	...
  404c7f:	add    BYTE PTR [rax],al
  404c81:	add    BYTE PTR [rbx],dh
  404c83:	cdq    
  404c84:	xor    edi,edi
  404c86:	rcr    ah,0xc0
  404c89:	jmp    QWORD PTR [rsi-0x34]
  404c8c:	jmp    WORD PTR [rsi-0x67]
  404c90:	push   WORD PTR [rbx]
  404c93:	cdq    
  404c94:	push   WORD PTR [rbx]
  404c97:	xor    di,di
  404c9a:	cwd    
  404c9c:	jmp    WORD PTR [rsi-0x67]
  404ca0:	push   WORD PTR [rbx]
  404ca3:	cdq    
  404ca4:	push   WORD PTR [rbx]
  404ca7:	cdq    
  404ca8:	push   WORD PTR [rbx]
  404cab:	cdq    
  404cac:	xor    edi,edi
  404cae:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  404cb4:	xor    edi,edi
  404cb6:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  404cbc:	xor    edi,edi
  404cbe:	xor    esp,DWORD PTR [rsi+0x33]
  404cc1:	inc    DWORD PTR [rax]
	...
  404cff:	add    BYTE PTR [rax],al
  404d01:	add    BYTE PTR [rbx],dh
  404d03:	cdq    
  404d04:	xor    edi,edi
  404d06:	rcr    ah,0xc0
  404d09:	jmp    QWORD PTR [rsi-0x34]
  404d0c:	cdq    
  404d0d:	jmp    QWORD PTR [rsi-0x67]
  404d10:	push   WORD PTR [rbx]
  404d13:	xor    di,di
  404d16:	rol    al,0xc0
  404d19:	push   QWORD PTR [rbx]
  404d1b:	xor    di,di
  404d1e:	xor    ebx,DWORD PTR [rcx-0x6699009a]
  404d24:	push   WORD PTR [rbx]
  404d27:	cdq    
  404d28:	xor    edi,edi
  404d2a:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  404d30:	xor    edi,edi
  404d32:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  404d38:	xor    edi,edi
  404d3a:	xor    ebx,DWORD PTR [rcx+0x6633ff33]
  404d40:	xor    edi,edi
	...
  404d82:	xor    ebx,DWORD PTR [rcx-0x233f00cd]
  404d88:	sar    bh,0x66
  404d8b:	int3   
  404d8c:	cdq    
  404d8d:	push   QWORD PTR [rbx]
  404d8f:	xor    di,di
  404d92:	fstp   st(5)
  404d94:	(bad)  
  404d96:	rol    al,0xc0
  404d99:	inc    eax
  404d9b:	rol    al,0xff
  404d9e:	xor    esp,DWORD PTR [rsi+0x33]
  404da1:	jmp    QWORD PTR [rsi-0x67]
  404da4:	push   WORD PTR [rbx]
  404da7:	cdq    
  404da8:	jmp    WORD PTR [rsi+0x66]
  404dac:	push   WORD PTR [rbx]
  404daf:	xor    di,di
  404db2:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  404db8:	push   WORD PTR [rbx]
  404dbb:	cdq    
  404dbc:	xor    edi,edi
  404dbe:	xor    esp,DWORD PTR [rsi+0x33]
  404dc1:	inc    DWORD PTR [rax]
	...
  404dff:	add    BYTE PTR [rax],al
  404e01:	add    BYTE PTR [rsi-0x67],ah
  404e04:	inc    ax
  404e07:	fadd   st(0),st
  404e09:	call   FWORD PTR [rcx-0x6634]
  404e0f:	(bad)  
  404e10:	(bad)  
  404e11:	(bad)  
  404e12:	(bad)  
  404e13:	(bad)  
  404e14:	(bad)  
  404e15:	push   rcx
  404e17:	icebp  
  404e18:	icebp  
  404e19:	dec    esp
  404e1b:	int3   
  404e1c:	int3   
  404e1d:	inc    eax
  404e1f:	rol    al,0xff
  404e22:	xor    esp,DWORD PTR [rsi+0x33]
  404e25:	push   QWORD PTR [rbx]
  404e27:	xor    esi,DWORD PTR [rbx]
  404e29:	dec    esp
  404e2b:	int3   
  404e2c:	int3   
  404e2d:	inc    eax
  404e2f:	rol    al,0xff
  404e32:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  404e38:	push   WORD PTR [rbx]
  404e3b:	cdq    
  404e3c:	xor    edi,edi
  404e3e:	xor    esp,DWORD PTR [rsi+0x33]
  404e41:	inc    DWORD PTR [rax]
	...
  404e77:	add    BYTE PTR [rax],al
  404e79:	add    BYTE PTR [rbx],dh
  404e7b:	xor    esp,DWORD PTR [rsi-0x1]
  404e7e:	xor    esi,DWORD PTR [rbx]
  404e80:	jmp    WORD PTR [rsi-0x67]
  404e84:	inc    ax
  404e87:	fadd   st(0),st
  404e89:	call   FWORD PTR [rcx+0x66ff99cc]
  404e8f:	int3   
  404e90:	cdq    
  404e91:	(bad)  
  404e92:	(bad)  
  404e93:	(bad)  
  404e94:	(bad)  
  404e95:	(bad)  
  404e96:	(bad)  
  404e97:	(bad)  
  404e98:	(bad)  
  404e99:	(bad)  
  404e9a:	(bad)  
  404e9b:	(bad)  
  404e9c:	(bad)  
  404e9d:	call   rdi
  404e9f:	xlat   BYTE PTR ds:[rbx]
  404ea0:	xlat   BYTE PTR ds:[rbx]
  404ea1:	inc    eax
  404ea3:	rol    al,0xff
  404ea6:	xlat   BYTE PTR ds:[rbx]
  404ea7:	xlat   BYTE PTR ds:[rbx]
  404ea8:	xlat   BYTE PTR ds:[rbx]
  404ea9:	call   rdi
  404eab:	xlat   BYTE PTR ds:[rbx]
  404eac:	xlat   BYTE PTR ds:[rbx]
  404ead:	inc    eax
  404eaf:	rol    al,0xff
  404eb2:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  404eb8:	push   WORD PTR [rbx]
  404ebb:	cdq    
  404ebc:	xor    edi,edi
  404ebe:	xor    esp,DWORD PTR [rsi+0x33]
  404ec1:	inc    DWORD PTR [rax]
	...
  404eef:	add    BYTE PTR [rax],al
  404ef1:	add    BYTE PTR [rbx],dh
  404ef3:	cwd    
  404ef5:	push   QWORD PTR [rbx]
  404ef7:	cwd    
  404ef9:	jmp    QWORD PTR [rsi-0x67]
  404efc:	int3   
  404efd:	jmp    QWORD PTR [rsi-0x67]
  404f00:	cdq    
  404f01:	push   QWORD PTR [rbx]
  404f03:	cdq    
  404f04:	inc    ax
  404f07:	fadd   st(0),st
  404f09:	call   FWORD PTR [rcx+0x66ff99cc]
  404f0f:	int3   
  404f10:	cdq    
  404f11:	jmp    QWORD PTR [rsi-0x34]
  404f14:	data16 (bad) 
  404f16:	(bad)  
  404f17:	(bad)  
  404f18:	(bad)  
  404f19:	(bad)  
  404f1a:	(bad)  
  404f1b:	(bad)  
  404f1c:	(bad)  
  404f1d:	(bad)  
  404f1e:	(bad)  
  404f1f:	(bad)  
  404f20:	(bad)  
  404f21:	push   rcx
  404f23:	icebp  
  404f24:	icebp  
  404f25:	push   rcx
  404f27:	icebp  
  404f28:	icebp  
  404f29:	push   rcx
  404f2b:	icebp  
  404f2c:	icebp  
  404f2d:	dec    esp
  404f2f:	int3   
  404f30:	int3   
  404f31:	push   QWORD PTR [rbx]
  404f33:	cdq    
  404f34:	jmp    WORD PTR [rsi-0x67]
  404f38:	push   WORD PTR [rbx]
  404f3b:	cdq    
  404f3c:	xor    edi,edi
  404f3e:	xor    esp,DWORD PTR [rsi+0x33]
  404f41:	inc    DWORD PTR [rax]
	...
  404f67:	add    BYTE PTR [rax],al
  404f69:	add    BYTE PTR [rsi-0x67],ah
  404f6c:	cdq    
  404f6d:	push   QWORD PTR [rbx]
  404f6f:	cwd    
  404f71:	call   rsi
  404f73:	out    0xe7,eax
  404f75:	call   rsi
  404f77:	out    0xe7,eax
  404f79:	jmp    QWORD PTR [rsi-0x67]
  404f7c:	cdq    
  404f7d:	jmp    QWORD PTR [rsi-0x67]
  404f80:	int3   
  404f81:	jmp    QWORD PTR [rsi-0x67]
  404f84:	inc    ax
  404f87:	fadd   st(0),st
  404f89:	call   FWORD PTR [rcx-0x66006634]
  404f8f:	int3   
  404f90:	cdq    
  404f91:	jmp    QWORD PTR [rsi-0x34]
  404f94:	cdq    
  404f95:	jmp    QWORD PTR [rsi-0x67]
  404f98:	data16 (bad) 
  404f9a:	(bad)  
  404f9b:	(bad)  
  404f9c:	(bad)  
  404f9d:	push   rcx
  404f9f:	icebp  
  404fa0:	icebp  
  404fa1:	(bad)  
  404fa2:	(bad)  
  404fa3:	(bad)  
  404fa4:	(bad)  
  404fa5:	(bad)  
  404fa6:	(bad)  
  404fa7:	(bad)  
  404fa8:	(bad)  
  404fa9:	push   rcx
  404fab:	icebp  
  404fac:	icebp  
  404fad:	dec    esp
  404faf:	int3   
  404fb0:	int3   
  404fb1:	jmp    QWORD PTR [rsi-0x67]
  404fb4:	push   WORD PTR [rbx]
  404fb7:	cdq    
  404fb8:	push   WORD PTR [rbx]
  404fbb:	cdq    
  404fbc:	xor    edi,edi
  404fbe:	xor    esp,DWORD PTR [rsi+0x33]
  404fc1:	inc    DWORD PTR [rax]
	...
  404fdf:	add    BYTE PTR [rax],al
  404fe1:	add    BYTE PTR [rsi-0x67],ah
  404fe4:	cdq    
  404fe5:	jmp    QWORD PTR [rsi-0x67]
  404fe8:	cdq    
  404fe9:	jmp    QWORD PTR [rsi-0x67]
  404fec:	int3   
  404fed:	call   rsi
  404fef:	out    0xe7,eax
  404ff1:	call   rsi
  404ff3:	out    0xe7,eax
  404ff5:	call   rsi
  404ff7:	out    0xe7,eax
  404ff9:	jmp    QWORD PTR [rsi-0x67]
  404ffc:	int3   
  404ffd:	jmp    QWORD PTR [rsi-0x67]
  405000:	int3   
  405001:	jmp    QWORD PTR [rsi-0x67]
  405004:	inc    ax
  405007:	fadd   st(0),st
  405009:	call   FWORD PTR [rcx-0x66006634]
  40500f:	int3   
  405010:	cdq    
  405011:	jmp    QWORD PTR [rsi-0x67]
  405014:	push   WORD PTR [rbx]
  405017:	data16 data16 (bad) 
  40501a:	(bad)  
  40501b:	(bad)  
  40501c:	(bad)  
  40501d:	push   rcx
  40501f:	icebp  
  405020:	icebp  
  405021:	(bad)  
  405022:	(bad)  
  405023:	(bad)  
  405024:	(bad)  
  405025:	push   rax
  405027:	sti    
  405028:	(bad)  
  405029:	push   rcx
  40502b:	icebp  
  40502c:	icebp  
  40502d:	call   rdi
  40502f:	xlat   BYTE PTR ds:[rbx]
  405030:	xlat   BYTE PTR ds:[rbx]
  405031:	jmp    QWORD PTR [rsi-0x67]
  405034:	jmp    WORD PTR [rsi-0x67]
  405038:	push   WORD PTR [rbx]
  40503b:	cdq    
  40503c:	push   WORD PTR [rbx]
  40503f:	xor    di,di
	...
  40505e:	cwd    
  405060:	cdq    
  405061:	jmp    QWORD PTR [rsi-0x67]
  405064:	int3   
  405065:	call   FWORD PTR [rcx-0x66003334]
  40506b:	int3   
  40506c:	int3   
  40506d:	push   rax
  40506f:	sti    
  405070:	(bad)  
  405071:	call   rsi
  405073:	out    0xe7,eax
  405075:	call   rsi
  405077:	out    0xe7,eax
  405079:	call   FWORD PTR [rcx+0x66ffcccc]
  40507f:	cdq    
  405080:	int3   
  405081:	jmp    QWORD PTR [rsi-0x67]
  405084:	inc    ax
  405087:	fadd   st(0),st
  405089:	call   FWORD PTR [rcx-0x66006634]
  40508f:	int3   
  405090:	cdq    
  405091:	jmp    QWORD PTR [rsi-0x34]
  405094:	cdq    
  405095:	(bad)  
  405096:	(bad)  
  405097:	(bad)  
  405098:	(bad)  
  405099:	(bad)  
  40509a:	(bad)  
  40509b:	(bad)  
  40509c:	(bad)  
  40509d:	(bad)  
  40509e:	(bad)  
  40509f:	(bad)  
  4050a0:	(bad)  
  4050a1:	(bad)  
  4050a2:	(bad)  
  4050a3:	(bad)  
  4050a4:	(bad)  
  4050a5:	(bad)  
  4050a6:	(bad)  
  4050a7:	(bad)  
  4050a8:	(bad)  
  4050a9:	(bad)  
  4050aa:	(bad)  
  4050ab:	(bad)  
  4050ac:	(bad)  
  4050ad:	jmp    rbx
  4050af:	jrcxz  0x405094
  4050b1:	jmp    QWORD PTR [rsi-0x67]
  4050b4:	jmp    WORD PTR [rsi-0x34]
  4050b8:	push   WORD PTR [rbx]
  4050bb:	cdq    
  4050bc:	push   WORD PTR [rbx]
  4050bf:	xor    di,di
	...
  4050de:	cwd    
  4050e0:	cdq    
  4050e1:	call   FWORD PTR [rcx+0x66ffffcc]
  4050e7:	cdq    
  4050e8:	int3   
  4050e9:	jmp    QWORD PTR [rsi-0x67]
  4050ec:	int3   
  4050ed:	push   rax
  4050ef:	sti    
  4050f0:	(bad)  
  4050f1:	call   rsi
  4050f3:	out    0xe7,eax
  4050f5:	call   rsi
  4050f7:	out    0xe7,eax
  4050f9:	jmp    QWORD PTR [rsi-0x67]
  4050fc:	int3   
  4050fd:	call   FWORD PTR [rcx+0x66ffcccc]
  405103:	cdq    
  405104:	inc    ax
  405107:	fadd   st(0),st
  405109:	call   FWORD PTR [rcx-0x66006634]
  40510f:	int3   
  405110:	cdq    
  405111:	jmp    QWORD PTR [rsi-0x34]
  405114:	cdq    
  405115:	(bad)  
  405116:	(bad)  
  405117:	(bad)  
  405118:	(bad)  
  405119:	(bad)  
  40511a:	(bad)  
  40511b:	(bad)  
  40511c:	(bad)  
  40511d:	(bad)  
  40511e:	(bad)  
  40511f:	(bad)  
  405120:	(bad)  
  405121:	(bad)  
  405122:	(bad)  
  405123:	(bad)  
  405124:	(bad)  
  405125:	(bad)  
  405126:	(bad)  
  405127:	(bad)  
  405128:	(bad)  
  405129:	(bad)  
  40512a:	(bad)  
  40512b:	(bad)  
  40512c:	(bad)  
  40512d:	(bad)  
  40512e:	(bad)  
  40512f:	(bad)  
  405130:	(bad)  
  405131:	jmp    QWORD PTR [rsi-0x34]
  405134:	jmp    WORD PTR [rsi-0x67]
  405138:	push   WORD PTR [rbx]
  40513b:	cdq    
  40513c:	push   WORD PTR [rbx]
  40513f:	xor    di,di
	...
  40515e:	cwd    
  405160:	cdq    
  405161:	call   FWORD PTR [rcx-0x66003334]
  405167:	int3   
  405168:	int3   
  405169:	call   FWORD PTR [rcx-0xf003334]
  40516f:	sti    
  405170:	(bad)  
  405171:	call   rsi
  405173:	out    0xe7,eax
  405175:	call   rsi
  405177:	out    0xe7,eax
  405179:	call   FWORD PTR [rcx+0x66ffcccc]
  40517f:	cdq    
  405180:	int3   
  405181:	jmp    QWORD PTR [rsi-0x67]
  405184:	inc    ax
  405187:	fadd   st(0),st
  405189:	call   FWORD PTR [rcx-0x66006634]
  40518f:	int3   
  405190:	cdq    
  405191:	call   FWORD PTR [rcx-0x66006634]
  405197:	int3   
  405198:	cdq    
  405199:	call   FWORD PTR [rcx-0x66006634]
  40519f:	int3   
  4051a0:	cdq    
  4051a1:	call   FWORD PTR [rcx-0x66006634]
  4051a7:	int3   
  4051a8:	cdq    
  4051a9:	call   FWORD PTR [rcx-0x66006634]
  4051af:	int3   
  4051b0:	cdq    
  4051b1:	call   FWORD PTR [rcx+0x66ff99cc]
  4051b7:	int3   
  4051b8:	jmp    WORD PTR [rsi-0x67]
  4051bc:	push   WORD PTR [rbx]
  4051bf:	xor    di,di
	...
  4051de:	cwd    
  4051e0:	cdq    
  4051e1:	call   FWORD PTR [rcx+0x66ffffcc]
  4051e7:	cdq    
  4051e8:	int3   
  4051e9:	call   FWORD PTR [rcx-0xf003334]
  4051ef:	sti    
  4051f0:	(bad)  
  4051f1:	call   rsi
  4051f3:	out    0xe7,eax
  4051f5:	call   FWORD PTR [rcx+0x66ffffcc]
  4051fb:	cdq    
  4051fc:	int3   
  4051fd:	call   FWORD PTR [rcx+0x66ffcccc]
  405203:	cdq    
  405204:	inc    ax
  405207:	fadd   st(0),st
  405209:	inc    eax
  40520b:	fadd   st(0),st
  40520d:	inc    eax
  40520f:	fadd   st(0),st
  405211:	inc    eax
  405213:	fadd   st(0),st
  405215:	inc    eax
  405217:	fadd   st(0),st
  405219:	inc    eax
  40521b:	fadd   st(0),st
  40521d:	inc    eax
  40521f:	fadd   st(0),st
  405221:	inc    eax
  405223:	fadd   st(0),st
  405225:	inc    eax
  405227:	fadd   st(0),st
  405229:	inc    eax
  40522b:	fadd   st(0),st
  40522d:	inc    eax
  40522f:	fadd   st(0),st
  405231:	inc    eax
  405233:	fadd   st(0),st
  405235:	inc    eax
  405237:	fadd   st(0),st
  405239:	jmp    QWORD PTR [rsi-0x34]
  40523c:	push   WORD PTR [rbx]
  40523f:	xor    di,di
	...
  40525e:	cwd    
  405260:	cdq    
  405261:	call   FWORD PTR [rcx-0x66000034]
  405267:	int3   
  405268:	int3   
  405269:	call   FWORD PTR [rcx-0x29000034]
  40526f:	out    0xe7,eax
  405271:	call   rsi
  405273:	out    0xe7,eax
  405275:	call   FWORD PTR [rcx-0x66003334]
  40527b:	int3   
  40527c:	int3   
  40527d:	jmp    QWORD PTR [rsi-0x67]
  405280:	int3   
  405281:	jmp    QWORD PTR [rsi-0x67]
  405284:	jmp    WORD PTR [rsi-0x67]
  405288:	jmp    WORD PTR [rsi-0x67]
  40528c:	jmp    WORD PTR [rsi-0x67]
  405290:	jmp    WORD PTR [rsi-0x67]
  405294:	jmp    WORD PTR [rsi-0x67]
  405298:	jmp    WORD PTR [rsi-0x67]
  40529c:	jmp    WORD PTR [rsi-0x67]
  4052a0:	jmp    WORD PTR [rsi-0x67]
  4052a4:	push   WORD PTR [rbx]
  4052a7:	cdq    
  4052a8:	xor    edi,edi
  4052aa:	cwd    
  4052ac:	push   WORD PTR [rbx]
  4052af:	cdq    
  4052b0:	xor    edi,edi
  4052b2:	cwd    
  4052b4:	push   WORD PTR [rbx]
  4052b7:	cdq    
  4052b8:	xor    edi,edi
  4052ba:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  4052c0:	xor    edi,edi
	...
  4052de:	cwd    
  4052e0:	cdq    
  4052e1:	call   FWORD PTR [rcx-0x66003334]
  4052e7:	int3   
  4052e8:	(bad)  
  4052e9:	call   FWORD PTR [rcx-0x66003334]
  4052ef:	int3   
  4052f0:	int3   
  4052f1:	call   FWORD PTR [rcx-0x66000034]
  4052f7:	int3   
  4052f8:	int3   
  4052f9:	call   FWORD PTR [rcx+0x66ffffcc]
  4052ff:	int3   
  405300:	int3   
  405301:	call   FWORD PTR [rcx+0x66ffcccc]
  405307:	cdq    
  405308:	int3   
  405309:	push   QWORD PTR [rbx]
  40530b:	data16 inc WORD PTR [rax]
  40530f:	xor    esp,DWORD PTR [rsi-0x1]
  405312:	xor    esp,DWORD PTR [rsi-0x67]
  405315:	push   QWORD PTR [rbx]
  405317:	data16 push WORD PTR [rbx]
  40531b:	cwd    
  40531d:	push   QWORD PTR [rbx]
  40531f:	data16 push WORD PTR [rbx]
  405323:	cwd    
  405325:	push   QWORD PTR [rbx]
  405327:	cwd    
  405329:	push   QWORD PTR [rbx]
  40532b:	cwd    
  40532d:	push   QWORD PTR [rbx]
  40532f:	cwd    
  405331:	push   QWORD PTR [rbx]
  405333:	cwd    
  405335:	push   QWORD PTR [rbx]
  405337:	xor    esp,DWORD PTR [rsi-0x1]
	...
  40535e:	cwd    
  405360:	cdq    
  405361:	call   FWORD PTR [rcx-0x66000034]
  405367:	int3   
  405368:	int3   
  405369:	call   FWORD PTR [rcx-0x39000034]
  40536f:	(bad)  
  405370:	out    dx,eax
  405371:	push   rax
  405373:	sti    
  405374:	(bad)  
  405375:	push   rax
  405377:	sti    
  405378:	(bad)  
  405379:	call   FWORD PTR [rcx-0x66003334]
  40537f:	int3   
  405380:	(bad)  
  405381:	call   FWORD PTR [rcx-0x66003334]
  405387:	int3   
  405388:	int3   
  405389:	push   QWORD PTR [rbx]
  40538b:	data16 inc WORD PTR [rax]
  40538f:	xor    esp,DWORD PTR [rsi-0x1]
  405392:	xor    esp,DWORD PTR [rsi+0x66]
  405395:	push   QWORD PTR [rbx]
  405397:	cwd    
  405399:	push   QWORD PTR [rbx]
  40539b:	data16 push WORD PTR [rbx]
  40539f:	cwd    
  4053a1:	push   QWORD PTR [rbx]
  4053a3:	cwd    
  4053a5:	push   QWORD PTR [rbx]
  4053a7:	data16 push WORD PTR [rbx]
  4053ab:	cwd    
  4053ad:	push   QWORD PTR [rbx]
  4053af:	cwd    
  4053b1:	push   QWORD PTR [rbx]
  4053b3:	cwd    
  4053b5:	push   QWORD PTR [rbx]
  4053b7:	xor    esp,DWORD PTR [rsi-0x1]
	...
  4053de:	cwd    
  4053e0:	cdq    
  4053e1:	call   FWORD PTR [rcx-0x66000034]
  4053e7:	int3   
  4053e8:	int3   
  4053e9:	call   FWORD PTR [rcx-0x29000034]
  4053ef:	out    0xe7,eax
  4053f1:	push   rax
  4053f3:	sti    
  4053f4:	(bad)  
  4053f5:	push   rax
  4053f7:	sti    
  4053f8:	(bad)  
  4053f9:	call   FWORD PTR [rcx-0x66003334]
  4053ff:	int3   
  405400:	int3   
  405401:	call   FWORD PTR [rcx-0x66000034]
  405407:	int3   
  405408:	int3   
  405409:	push   QWORD PTR [rbx]
  40540b:	data16 inc WORD PTR [rax]
  40540f:	xor    esp,DWORD PTR [rsi-0x1]
  405412:	add    BYTE PTR [rbx],dh
  405414:	inc    WORD PTR [rax]
  405417:	xor    esp,DWORD PTR [rsi-0x1]
  40541a:	xor    esp,DWORD PTR [rsi-0x67]
  40541d:	push   QWORD PTR [rbx]
  40541f:	cwd    
  405421:	push   QWORD PTR [rbx]
  405423:	cwd    
  405425:	push   QWORD PTR [rbx]
  405427:	data16 inc WORD PTR [rax]
  40542b:	cwd    
  40542d:	push   QWORD PTR [rbx]
  40542f:	cwd    
  405431:	push   QWORD PTR [rbx]
  405433:	cwd    
  405435:	push   QWORD PTR [rbx]
  405437:	xor    esp,DWORD PTR [rsi-0x1]
	...
  40545e:	cwd    
  405460:	cdq    
  405461:	call   FWORD PTR [rcx-0x66003334]
  405467:	int3   
  405468:	(bad)  
  405469:	call   FWORD PTR [rcx-0xf003334]
  40546f:	sti    
  405470:	(bad)  
  405471:	push   rax
  405473:	sti    
  405474:	(bad)  
  405475:	call   rsi
  405477:	out    0xe7,eax
  405479:	call   FWORD PTR [rcx-0x66000034]
  40547f:	int3   
  405480:	(bad)  
  405481:	call   FWORD PTR [rcx-0x66003334]
  405487:	int3   
  405488:	int3   
  405489:	push   QWORD PTR [rbx]
  40548b:	data16 jmp WORD PTR [rsi-0x67]
  405490:	cdq    
  405491:	jmp    QWORD PTR [rsi-0x67]
  405494:	cdq    
  405495:	jmp    QWORD PTR [rsi-0x67]
  405498:	cdq    
  405499:	push   QWORD PTR [rbx]
  40549b:	data16 inc WORD PTR [rax]
  40549f:	xor    esp,DWORD PTR [rsi-0x1]
  4054a2:	add    BYTE PTR [rbx],dh
  4054a4:	inc    WORD PTR [rax]
  4054a7:	cwd    
  4054a9:	push   QWORD PTR [rbx]
  4054ab:	data16 push WORD PTR [rbx]
  4054af:	cwd    
  4054b1:	inc    DWORD PTR [rax]
  4054b3:	data16 push WORD PTR [rbx]
  4054b7:	xor    esp,DWORD PTR [rsi-0x1]
	...
  4054de:	cwd    
  4054e0:	cdq    
  4054e1:	call   FWORD PTR [rcx-0x66000034]
  4054e7:	int3   
  4054e8:	(bad)  
  4054e9:	call   FWORD PTR [rcx-0x29003334]
  4054ef:	out    0xe7,eax
  4054f1:	jmp    QWORD PTR [rsi-0x67]
  4054f4:	int3   
  4054f5:	jmp    QWORD PTR [rsi-0x67]
  4054f8:	int3   
  4054f9:	push   QWORD PTR [rbx]
  4054fb:	cdq    
  4054fc:	cdq    
  4054fd:	jmp    QWORD PTR [rsi-0x67]
  405500:	cdq    
  405501:	push   QWORD PTR [rbx]
  405503:	cwd    
  405505:	push   QWORD PTR [rbx]
  405507:	cdq    
  405508:	int3   
  405509:	push   QWORD PTR [rbx]
  40550b:	cwd    
  40550d:	jmp    QWORD PTR [rsi-0x67]
  405510:	int3   
  405511:	call   FWORD PTR [rcx-0x66003334]
  405517:	int3   
  405518:	int3   
  405519:	jmp    QWORD PTR [rsi-0x67]
  40551c:	cdq    
  40551d:	jmp    QWORD PTR [rsi-0x67]
  405520:	cdq    
  405521:	jmp    QWORD PTR [rsi-0x67]
  405524:	cdq    
  405525:	inc    DWORD PTR [rax]
  405527:	xor    esp,DWORD PTR [rsi-0x1]
  40552a:	add    BYTE PTR [rbx],dh
  40552c:	inc    WORD PTR [rax]
  40552f:	xor    esp,DWORD PTR [rsi-0x1]
  405532:	add    BYTE PTR [rsi+0x66],ah
  405535:	push   QWORD PTR [rbx]
  405537:	xor    esp,DWORD PTR [rsi-0x1]
	...
  40555e:	cwd    
  405560:	cdq    
  405561:	call   FWORD PTR [rcx+0x66ffcccc]
  405567:	cdq    
  405568:	int3   
  405569:	jmp    QWORD PTR [rsi-0x67]
  40556c:	int3   
  40556d:	jmp    QWORD PTR [rsi-0x67]
  405570:	cdq    
  405571:	call   FWORD PTR [rcx-0x39003334]
  405577:	(bad)  
  405578:	out    dx,eax
  405579:	call   FWORD PTR [rcx-0x66003334]
  40557f:	int3   
  405580:	(bad)  
  405581:	jmp    QWORD PTR [rsi-0x67]
  405584:	int3   
  405585:	jmp    QWORD PTR [rsi-0x67]
  405588:	int3   
  405589:	push   QWORD PTR [rbx]
  40558b:	cwd    
  40558d:	push   QWORD PTR [rbx]
  40558f:	cdq    
  405590:	cdq    
  405591:	jmp    QWORD PTR [rsi-0x67]
  405594:	int3   
  405595:	call   FWORD PTR [rcx-0x66003334]
  40559b:	int3   
  40559c:	int3   
  40559d:	call   FWORD PTR [rcx-0x66000034]
  4055a3:	int3   
  4055a4:	int3   
  4055a5:	call   QWORD PTR [rax+0x66ffada9]
  4055ab:	cdq    
  4055ac:	cdq    
  4055ad:	jmp    QWORD PTR [rsi-0x67]
  4055b0:	cdq    
  4055b1:	inc    DWORD PTR [rax]
  4055b3:	xor    esp,DWORD PTR [rsi-0x1]
  4055b6:	xor    esi,DWORD PTR [rbx]
  4055b8:	inc    WORD PTR [rax]
	...
  4055d7:	add    BYTE PTR [rax],al
  4055d9:	add    BYTE PTR [rsi-0x67],ah
  4055dc:	int3   
  4055dd:	jmp    QWORD PTR [rsi-0x67]
  4055e0:	int3   
  4055e1:	jmp    QWORD PTR [rsi-0x67]
  4055e4:	int3   
  4055e5:	jmp    QWORD PTR [rsi-0x67]
  4055e8:	int3   
  4055e9:	inc    esi
  4055eb:	(bad)  
  4055ec:	out    dx,eax
  4055ed:	inc    esi
  4055ef:	(bad)  
  4055f0:	out    dx,eax
  4055f1:	inc    esi
  4055f3:	(bad)  
  4055f4:	out    dx,eax
  4055f5:	call   QWORD PTR [rax+0x66ffada9]
  4055fb:	cdq    
  4055fc:	int3   
  4055fd:	jmp    QWORD PTR [rsi-0x67]
  405600:	int3   
  405601:	jmp    QWORD PTR [rsi-0x67]
  405604:	int3   
  405605:	push   QWORD PTR [rbx]
  405607:	cwd    
  405609:	push   QWORD PTR [rbx]
  40560b:	cwd    
  40560d:	jmp    QWORD PTR [rsi-0x67]
  405610:	int3   
  405611:	jmp    QWORD PTR [rsi-0x67]
  405614:	int3   
  405615:	jmp    QWORD PTR [rsi-0x67]
  405618:	int3   
  405619:	jmp    QWORD PTR [rsi-0x67]
  40561c:	cdq    
  40561d:	jmp    QWORD PTR [rsi-0x67]
  405620:	int3   
  405621:	call   FWORD PTR [rcx-0x66003334]
  405627:	int3   
  405628:	(bad)  
  405629:	call   FWORD PTR [rcx+0x66ffcccc]
  40562f:	cdq    
  405630:	int3   
  405631:	jmp    QWORD PTR [rsi-0x67]
  405634:	cdq    
  405635:	jmp    QWORD PTR [rsi-0x67]
  405638:	cdq    
  405639:	jmp    QWORD PTR [rsi-0x67]
  40563c:	cdq    
  40563d:	inc    DWORD PTR [rax]
	...
  40564f:	add    BYTE PTR [rax],al
  405651:	add    BYTE PTR [rsi-0x67],ah
  405654:	int3   
  405655:	jmp    QWORD PTR [rsi-0x67]
  405658:	int3   
  405659:	dec    esp
  40565b:	(bad)  
  40565c:	(bad)  
  40565d:	call   rsi
  40565f:	out    0xe7,eax
  405661:	inc    esi
  405663:	(bad)  
  405664:	out    dx,eax
  405665:	call   rsi
  405667:	out    0xe7,eax
  405669:	call   FWORD PTR [rcx+0x66ffcccc]
  40566f:	cdq    
  405670:	int3   
  405671:	jmp    QWORD PTR [rsi-0x67]
  405674:	int3   
  405675:	jmp    QWORD PTR [rsi-0x67]
  405678:	int3   
  405679:	push   QWORD PTR [rbx]
  40567b:	cwd    
  40567d:	push   QWORD PTR [rbx]
  40567f:	cwd    
  405681:	push   QWORD PTR [rbx]
  405683:	cwd    
  405685:	push   QWORD PTR [rbx]
  405687:	cwd    
  405689:	push   QWORD PTR [rbx]
  40568b:	cwd    
  40568d:	jmp    QWORD PTR [rsi-0x67]
  405690:	int3   
  405691:	jmp    QWORD PTR [rsi-0x67]
  405694:	int3   
  405695:	jmp    QWORD PTR [rsi-0x67]
  405698:	int3   
  405699:	jmp    QWORD PTR [rsi-0x67]
  40569c:	int3   
  40569d:	jmp    QWORD PTR [rsi-0x67]
  4056a0:	int3   
  4056a1:	jmp    QWORD PTR [rsi-0x67]
  4056a4:	int3   
  4056a5:	jmp    QWORD PTR [rsi-0x67]
  4056a8:	cdq    
  4056a9:	jmp    QWORD PTR [rsi-0x67]
  4056ac:	int3   
  4056ad:	call   FWORD PTR [rcx-0x66000034]
  4056b3:	int3   
  4056b4:	int3   
  4056b5:	jmp    QWORD PTR [rsi-0x67]
  4056b8:	int3   
  4056b9:	call   QWORD PTR [rax+0x66ffada9]
  4056bf:	cdq    
  4056c0:	cdq    
  4056c1:	inc    DWORD PTR [rax]
	...
  4056cb:	add    BYTE PTR [rax],al
  4056cd:	add    BYTE PTR [rsi-0x67],ah
  4056d0:	int3   
  4056d1:	jmp    QWORD PTR [rsi-0x67]
  4056d4:	int3   
  4056d5:	jmp    QWORD PTR [rsi-0x67]
  4056d8:	int3   
  4056d9:	jmp    QWORD PTR [rsi-0x67]
  4056dc:	int3   
  4056dd:	jmp    QWORD PTR [rsi-0x67]
  4056e0:	int3   
  4056e1:	jmp    QWORD PTR [rsi-0x67]
  4056e4:	int3   
  4056e5:	jmp    QWORD PTR [rsi-0x67]
  4056e8:	int3   
  4056e9:	jmp    QWORD PTR [rsi-0x67]
  4056ec:	int3   
  4056ed:	push   QWORD PTR [rbx]
  4056ef:	cwd    
  4056f1:	push   QWORD PTR [rbx]
  4056f3:	cwd    
  4056f5:	push   QWORD PTR [rbx]
  4056f7:	cwd    
  4056f9:	push   QWORD PTR [rbx]
  4056fb:	cwd    
  4056fd:	push   QWORD PTR [rbx]
  4056ff:	cwd    
  405701:	push   QWORD PTR [rbx]
  405703:	cwd    
  405705:	push   QWORD PTR [rbx]
  405707:	cwd    
  405709:	push   QWORD PTR [rbx]
  40570b:	cwd    
  40570d:	jmp    QWORD PTR [rsi-0x67]
  405710:	int3   
  405711:	jmp    QWORD PTR [rsi-0x67]
  405714:	int3   
  405715:	jmp    QWORD PTR [rsi-0x67]
  405718:	int3   
  405719:	jmp    QWORD PTR [rsi-0x67]
  40571c:	int3   
  40571d:	jmp    QWORD PTR [rsi-0x67]
  405720:	int3   
  405721:	jmp    QWORD PTR [rsi-0x67]
  405724:	int3   
  405725:	jmp    QWORD PTR [rsi-0x67]
  405728:	int3   
  405729:	jmp    QWORD PTR [rsi-0x67]
  40572c:	int3   
  40572d:	jmp    QWORD PTR [rsi-0x67]
  405730:	cdq    
  405731:	jmp    QWORD PTR [rsi-0x67]
  405734:	int3   
  405735:	jmp    QWORD PTR [rsi-0x67]
  405738:	cdq    
  405739:	jmp    QWORD PTR [rsi-0x67]
  40573c:	cdq    
  40573d:	jmp    QWORD PTR [rsi-0x67]
  405740:	cdq    
  405741:	jmp    QWORD PTR [rsi-0x67]
  405744:	cdq    
  405745:	inc    DWORD PTR [rax]
	...
  40575b:	add    BYTE PTR [rax],al
  40575d:	add    BYTE PTR [rcx+0x66ffcc99],bl
  405763:	cdq    
  405764:	cdq    
  405765:	jmp    QWORD PTR [rsi-0x67]
  405768:	int3   
  405769:	push   QWORD PTR [rbx]
  40576b:	cdq    
  40576c:	cdq    
  40576d:	push   QWORD PTR [rbx]
  40576f:	cwd    
  405771:	push   QWORD PTR [rbx]
  405773:	cwd    
  405775:	push   QWORD PTR [rbx]
  405777:	cwd    
  405779:	push   QWORD PTR [rbx]
  40577b:	cwd    
  40577d:	push   QWORD PTR [rbx]
  40577f:	cwd    
  405781:	push   QWORD PTR [rbx]
  405783:	cwd    
  405785:	push   QWORD PTR [rbx]
  405787:	cwd    
  405789:	push   QWORD PTR [rbx]
  40578b:	cwd    
  40578d:	jmp    QWORD PTR [rsi-0x67]
  405790:	int3   
  405791:	jmp    QWORD PTR [rsi-0x34]
  405794:	int3   
  405795:	jmp    QWORD PTR [rsi-0x67]
  405798:	int3   
  405799:	jmp    QWORD PTR [rsi-0x34]
  40579c:	int3   
  40579d:	jmp    QWORD PTR [rsi-0x67]
  4057a0:	int3   
  4057a1:	jmp    QWORD PTR [rsi-0x34]
  4057a4:	int3   
  4057a5:	jmp    QWORD PTR [rsi-0x67]
  4057a8:	int3   
  4057a9:	jmp    QWORD PTR [rsi-0x67]
  4057ac:	cdq    
  4057ad:	jmp    QWORD PTR [rsi-0x67]
  4057b0:	int3   
  4057b1:	jmp    QWORD PTR [rsi-0x67]
  4057b4:	cdq    
  4057b5:	jmp    QWORD PTR [rsi-0x67]
  4057b8:	int3   
  4057b9:	inc    DWORD PTR [rax]
	...
  4057d7:	add    BYTE PTR [rax],al
  4057d9:	add    BYTE PTR [rsi-0x67],ah
  4057dc:	int3   
  4057dd:	jmp    QWORD PTR [rsi-0x34]
  4057e0:	int3   
  4057e1:	call   FWORD PTR [rcx-0x66000034]
  4057e7:	int3   
  4057e8:	int3   
  4057e9:	jmp    QWORD PTR [rsi-0x67]
  4057ec:	int3   
  4057ed:	jmp    QWORD PTR [rsi-0x67]
  4057f0:	int3   
  4057f1:	jmp    QWORD PTR [rsi-0x67]
  4057f4:	cdq    
  4057f5:	push   QWORD PTR [rbx]
  4057f7:	cwd    
  4057f9:	push   QWORD PTR [rbx]
  4057fb:	cwd    
  4057fd:	push   QWORD PTR [rbx]
  4057ff:	cwd    
  405801:	push   QWORD PTR [rbx]
  405803:	cwd    
  405805:	push   QWORD PTR [rbx]
  405807:	cwd    
  405809:	push   QWORD PTR [rbx]
  40580b:	cwd    
  40580d:	jmp    QWORD PTR [rsi-0x67]
  405810:	int3   
  405811:	jmp    QWORD PTR [rsi-0x67]
  405814:	int3   
  405815:	jmp    QWORD PTR [rsi-0x67]
  405818:	int3   
  405819:	jmp    QWORD PTR [rsi-0x67]
  40581c:	int3   
  40581d:	jmp    QWORD PTR [rsi-0x67]
  405820:	int3   
  405821:	jmp    QWORD PTR [rsi-0x67]
  405824:	int3   
  405825:	jmp    QWORD PTR [rsi-0x67]
  405828:	int3   
  405829:	jmp    QWORD PTR [rsi-0x67]
  40582c:	int3   
  40582d:	jmp    QWORD PTR [rsi-0x34]
  405830:	int3   
  405831:	jmp    QWORD PTR [rsi-0x67]
  405834:	int3   
  405835:	jmp    QWORD PTR [rsi-0x67]
  405838:	int3   
  405839:	jmp    QWORD PTR [rsi-0x67]
  40583c:	int3   
  40583d:	inc    DWORD PTR [rax]
	...
  405853:	add    BYTE PTR [rax],al
  405855:	add    BYTE PTR [rsi-0x67],ah
  405858:	int3   
  405859:	inc    esi
  40585b:	(bad)  
  40585c:	out    dx,eax
  40585d:	inc    esi
  40585f:	(bad)  
  405860:	out    dx,eax
  405861:	inc    esi
  405863:	(bad)  
  405864:	out    dx,eax
  405865:	call   FWORD PTR [rcx-0x66000034]
  40586b:	int3   
  40586c:	int3   
  40586d:	call   FWORD PTR [rcx+0x66ffffcc]
  405873:	cdq    
  405874:	int3   
  405875:	push   QWORD PTR [rbx]
  405877:	cdq    
  405878:	cdq    
  405879:	push   QWORD PTR [rbx]
  40587b:	cdq    
  40587c:	cdq    
  40587d:	push   QWORD PTR [rbx]
  40587f:	cdq    
  405880:	cdq    
  405881:	push   QWORD PTR [rbx]
  405883:	cwd    
  405885:	push   QWORD PTR [rbx]
  405887:	cwd    
  405889:	push   QWORD PTR [rbx]
  40588b:	cwd    
  40588d:	jmp    QWORD PTR [rsi-0x67]
  405890:	int3   
  405891:	jmp    QWORD PTR [rsi-0x34]
  405894:	int3   
  405895:	jmp    QWORD PTR [rsi-0x67]
  405898:	int3   
  405899:	jmp    QWORD PTR [rsi-0x67]
  40589c:	int3   
  40589d:	jmp    QWORD PTR [rsi-0x34]
  4058a0:	int3   
  4058a1:	jmp    QWORD PTR [rsi-0x67]
  4058a4:	int3   
  4058a5:	jmp    QWORD PTR [rsi-0x67]
  4058a8:	int3   
  4058a9:	jmp    QWORD PTR [rsi-0x34]
  4058ac:	int3   
  4058ad:	jmp    QWORD PTR [rsi-0x67]
  4058b0:	int3   
  4058b1:	call   FWORD PTR [rcx-0x66003334]
  4058b7:	int3   
  4058b8:	int3   
  4058b9:	jmp    QWORD PTR [rsi-0x67]
  4058bc:	int3   
  4058bd:	jmp    QWORD PTR [rsi-0x67]
  4058c0:	int3   
  4058c1:	inc    DWORD PTR [rax]
	...
  4058cf:	add    BYTE PTR [rax],al
  4058d1:	add    BYTE PTR [rsi-0x67],ah
  4058d4:	int3   
  4058d5:	inc    esi
  4058d7:	(bad)  
  4058d8:	out    dx,eax
  4058d9:	dec    esp
  4058db:	(bad)  
  4058dc:	(bad)  
  4058dd:	dec    esp
  4058df:	(bad)  
  4058e0:	(bad)  
  4058e1:	inc    esi
  4058e3:	(bad)  
  4058e4:	out    dx,eax
  4058e5:	inc    esi
  4058e7:	(bad)  
  4058e8:	out    dx,eax
  4058e9:	call   FWORD PTR [rcx-0x66000034]
  4058ef:	int3   
  4058f0:	int3   
  4058f1:	call   FWORD PTR [rcx+0x66ffcccc]
  4058f7:	int3   
  4058f8:	int3   
  4058f9:	jmp    QWORD PTR [rsi-0x67]
  4058fc:	int3   
  4058fd:	jmp    QWORD PTR [rsi-0x67]
  405900:	int3   
  405901:	push   QWORD PTR [rbx]
  405903:	cdq    
  405904:	cdq    
  405905:	push   QWORD PTR [rbx]
  405907:	cdq    
  405908:	cdq    
  405909:	push   QWORD PTR [rbx]
  40590b:	cdq    
  40590c:	cdq    
  40590d:	jmp    QWORD PTR [rsi-0x67]
  405910:	int3   
  405911:	jmp    QWORD PTR [rsi-0x67]
  405914:	int3   
  405915:	jmp    QWORD PTR [rsi-0x67]
  405918:	int3   
  405919:	jmp    QWORD PTR [rsi-0x34]
  40591c:	int3   
  40591d:	jmp    QWORD PTR [rsi-0x67]
  405920:	int3   
  405921:	jmp    QWORD PTR [rsi-0x34]
  405924:	int3   
  405925:	call   FWORD PTR [rcx-0x66000034]
  40592b:	int3   
  40592c:	int3   
  40592d:	call   FWORD PTR [rcx-0x66003334]
  405933:	int3   
  405934:	(bad)  
  405935:	call   FWORD PTR [rcx-0x66003334]
  40593b:	int3   
  40593c:	(bad)  
  40593d:	call   FWORD PTR [rcx+0x66ffcccc]
  405943:	cdq    
  405944:	int3   
  405945:	inc    DWORD PTR [rax]
	...
  40594f:	add    BYTE PTR [rax],al
  405951:	add    BYTE PTR [rsi-0x67],ah
  405954:	int3   
  405955:	jmp    QWORD PTR [rsi-0x67]
  405958:	int3   
  405959:	inc    esi
  40595b:	(bad)  
  40595c:	out    dx,eax
  40595d:	inc    esi
  40595f:	(bad)  
  405960:	out    dx,eax
  405961:	dec    esp
  405963:	(bad)  
  405964:	(bad)  
  405965:	call   rsi
  405967:	out    0xe7,eax
  405969:	dec    esp
  40596b:	(bad)  
  40596c:	(bad)  
  40596d:	inc    esi
  40596f:	(bad)  
  405970:	out    dx,eax
  405971:	call   FWORD PTR [rcx-0x66000034]
  405977:	int3   
  405978:	(bad)  
  405979:	call   FWORD PTR [rcx+0x66ffcccc]
  40597f:	int3   
  405980:	int3   
  405981:	jmp    QWORD PTR [rsi-0x67]
  405984:	int3   
  405985:	jmp    QWORD PTR [rsi-0x67]
  405988:	int3   
  405989:	jmp    QWORD PTR [rsi-0x67]
  40598c:	int3   
  40598d:	jmp    QWORD PTR [rsi-0x67]
  405990:	cdq    
  405991:	jmp    QWORD PTR [rsi-0x34]
  405994:	int3   
  405995:	jmp    QWORD PTR [rsi-0x67]
  405998:	int3   
  405999:	call   FWORD PTR [rcx-0x66003334]
  40599f:	int3   
  4059a0:	int3   
  4059a1:	call   FWORD PTR [rcx-0x66003334]
  4059a7:	int3   
  4059a8:	int3   
  4059a9:	call   FWORD PTR [rcx-0x66000034]
  4059af:	int3   
  4059b0:	(bad)  
  4059b1:	inc    esi
  4059b3:	(bad)  
  4059b4:	out    dx,eax
  4059b5:	inc    esi
  4059b7:	(bad)  
  4059b8:	out    dx,eax
  4059b9:	inc    esi
  4059bb:	(bad)  
  4059bc:	out    dx,eax
  4059bd:	jmp    QWORD PTR [rsi-0x67]
  4059c0:	int3   
  4059c1:	jmp    QWORD PTR [rsi-0x67]
  4059c4:	int3   
  4059c5:	inc    DWORD PTR [rax]
	...
  4059d7:	add    BYTE PTR [rax],al
  4059d9:	add    BYTE PTR [rsi-0x67],ah
  4059dc:	int3   
  4059dd:	jmp    QWORD PTR [rsi-0x67]
  4059e0:	int3   
  4059e1:	jmp    QWORD PTR [rsi-0x67]
  4059e4:	int3   
  4059e5:	inc    esi
  4059e7:	(bad)  
  4059e8:	out    dx,eax
  4059e9:	inc    esi
  4059eb:	(bad)  
  4059ec:	out    dx,eax
  4059ed:	inc    esi
  4059ef:	(bad)  
  4059f0:	out    dx,eax
  4059f1:	inc    esi
  4059f3:	(bad)  
  4059f4:	out    dx,eax
  4059f5:	call   FWORD PTR [rcx-0x66000034]
  4059fb:	int3   
  4059fc:	int3   
  4059fd:	call   FWORD PTR [rcx-0x66000034]
  405a03:	int3   
  405a04:	int3   
  405a05:	jmp    QWORD PTR [rsi-0x67]
  405a08:	int3   
  405a09:	jmp    QWORD PTR [rsi-0x67]
  405a0c:	cdq    
  405a0d:	jmp    QWORD PTR [rsi-0x67]
  405a10:	int3   
  405a11:	call   QWORD PTR [rax-0x66005257]
  405a17:	int3   
  405a18:	(bad)  
  405a19:	call   FWORD PTR [rcx-0x66003334]
  405a1f:	int3   
  405a20:	(bad)  
  405a21:	call   FWORD PTR [rcx-0x39000034]
  405a27:	(bad)  
  405a28:	out    dx,eax
  405a29:	inc    esi
  405a2b:	(bad)  
  405a2c:	out    dx,eax
  405a2d:	inc    esi
  405a2f:	(bad)  
  405a30:	out    dx,eax
  405a31:	jmp    QWORD PTR [rsi-0x67]
  405a34:	int3   
  405a35:	jmp    QWORD PTR [rsi-0x67]
  405a38:	int3   
  405a39:	jmp    QWORD PTR [rsi-0x67]
  405a3c:	int3   
  405a3d:	inc    DWORD PTR [rax]
	...
  405a63:	add    BYTE PTR [rax],al
  405a65:	add    BYTE PTR [rsi-0x67],ah
  405a68:	int3   
  405a69:	jmp    QWORD PTR [rsi-0x67]
  405a6c:	int3   
  405a6d:	jmp    QWORD PTR [rsi-0x67]
  405a70:	int3   
  405a71:	inc    esi
  405a73:	(bad)  
  405a74:	out    dx,eax
  405a75:	inc    esi
  405a77:	(bad)  
  405a78:	out    dx,eax
  405a79:	call   FWORD PTR [rcx-0x66000034]
  405a7f:	int3   
  405a80:	int3   
  405a81:	jmp    QWORD PTR [rsi-0x67]
  405a84:	int3   
  405a85:	inc    DWORD PTR [rax]
	...
  405a8f:	add    BYTE PTR [rax],al
  405a91:	add    BYTE PTR [rsi-0x67],ah
  405a94:	int3   
  405a95:	jmp    QWORD PTR [rsi-0x67]
  405a98:	int3   
  405a99:	inc    esi
  405a9b:	(bad)  
  405a9c:	out    dx,eax
  405a9d:	inc    esi
  405a9f:	(bad)  
  405aa0:	out    dx,eax
  405aa1:	inc    esi
  405aa3:	(bad)  
  405aa4:	out    dx,eax
  405aa5:	inc    esi
  405aa7:	(bad)  
  405aa8:	out    dx,eax
  405aa9:	jmp    QWORD PTR [rsi-0x67]
  405aac:	int3   
  405aad:	jmp    QWORD PTR [rsi-0x67]
  405ab0:	int3   
  405ab1:	inc    DWORD PTR [rax]
	...
  405aef:	add    BYTE PTR [rax],al
  405af1:	add    BYTE PTR [rsi-0x67],ah
  405af4:	int3   
  405af5:	jmp    QWORD PTR [rsi-0x67]
  405af8:	int3   
  405af9:	call   FWORD PTR [rcx+0x66ffcc99]
  405aff:	cdq    
  405b00:	int3   
  405b01:	inc    DWORD PTR [rax]
	...
  405b17:	add    BYTE PTR [rax],al
  405b19:	add    BYTE PTR [rsi-0x67],ah
  405b1c:	int3   
  405b1d:	jmp    QWORD PTR [rsi-0x67]
  405b20:	int3   
  405b21:	jmp    QWORD PTR [rsi-0x67]
  405b24:	int3   
  405b25:	jmp    QWORD PTR [rsi-0x67]
  405b28:	int3   
  405b29:	inc    DWORD PTR [rax]
	...
  405b47:	add    BYTE PTR [rax],al
  405b49:	add    bh,bh
  405b4b:	cld    
  405b4c:	add    BYTE PTR [rbx],al
  405b4e:	(bad)  
  405b4f:	cld    
  405b50:	add    BYTE PTR [rbx],al
  405b52:	(bad)  
  405b53:	cld    
  405b54:	add    BYTE PTR [rbx],al
  405b56:	(bad)  
  405b57:	cld    
  405b58:	add    BYTE PTR [rbx],al
  405b5a:	(bad)  
  405b5b:	cld    
  405b5c:	add    BYTE PTR [rbx],al
  405b5e:	(bad)  
  405b5f:	cld    
  405b60:	add    BYTE PTR [rbx],al
  405b62:	push   rax
  405b64:	add    BYTE PTR [rbx],al
  405b66:	inc    eax
  405b68:	add    BYTE PTR [rbx],al
  405b6a:	inc    DWORD PTR [rax]
  405b6c:	add    BYTE PTR [rbx],al
  405b6e:	cld    
  405b6f:	add    BYTE PTR [rax],al
  405b71:	add    edi,eax
  405b73:	add    BYTE PTR [rax],al
  405b75:	add    edi,eax
  405b77:	add    BYTE PTR [rax],al
  405b79:	add    edi,eax
  405b7b:	add    BYTE PTR [rax],al
  405b7d:	add    edi,eax
  405b7f:	add    BYTE PTR [rax],al
  405b81:	add    edi,eax
  405b83:	add    BYTE PTR [rax],al
  405b85:	add    edi,eax
  405b87:	add    BYTE PTR [rax],al
  405b89:	psubb  mm0,QWORD PTR [rax]
  405b8c:	add    BYTE PTR [rdi],cl
  405b8e:	clc    
  405b8f:	add    BYTE PTR [rax],al
  405b91:	psubb  mm0,QWORD PTR [rax]
  405b94:	add    BYTE PTR [rdi],cl
  405b96:	clc    
  405b97:	add    BYTE PTR [rax],al
  405b99:	psubb  mm0,QWORD PTR [rax]
  405b9c:	add    BYTE PTR [rdi],cl
  405b9e:	lock add BYTE PTR [rax],al
  405ba1:	(bad)  
  405ba2:	rol    BYTE PTR [rax],0x0
  405ba5:	add    eax,DWORD PTR [rax-0x7ff0000]
  405bab:	add    BYTE PTR [rax],al
  405bad:	(bad)  
  405baf:	add    BYTE PTR [rax],al
  405bb1:	(bad)  
  405bb2:	loopne 0x405bb4
  405bb4:	add    BYTE PTR [rbx],al
  405bb6:	rol    BYTE PTR [rax],0x0
  405bb9:	add    eax,eax
  405bbb:	add    BYTE PTR [rax],al
  405bbd:	add    eax,esi
  405bbf:	add    BYTE PTR [rax],al
  405bc1:	(bad)  
  405bc2:	inc    BYTE PTR [rcx]
  405bc4:	sar    BYTE PTR [rdi],0xff
  405bc7:	ret    
  405bc8:	lock jmp FWORD PTR [rax]
  405bcb:	add    BYTE PTR [rax],al
  405bcd:	add    BYTE PTR [rax],dl
  405bcf:	add    BYTE PTR [rax],al
  405bd1:	add    BYTE PTR [rax],ah
  405bd3:	add    BYTE PTR [rax],al
  405bd5:	add    BYTE PTR [rcx],al
  405bd7:	add    BYTE PTR [rax],ah
  405bd9:	add    BYTE PTR [rax],al
  405bdb:	add    BYTE PTR [rax],al
  405bdd:	add    BYTE PTR [rax+0x4],al
	...
  405c0c:	add    BYTE PTR [rax],al
  405c0e:	push   rdx
  405c0f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  405c10:	push   0xffffffffffffffff
  405c12:	cmp    BYTE PTR [rbp+rax*2+0x387e2bff],cl
  405c19:	hlt    
  405c1a:	(bad)  
  405c1b:	outs   dx,BYTE PTR ds:[rsi]
  405c1c:	sub    eax,0x306e21f4
  405c21:	hlt    
  405c22:	sbb    BYTE PTR [rsi+0x27],ah
  405c25:	hlt    
  405c26:	adc    BYTE PTR [rbp+0x21],bl
  405c29:	hlt    
  405c2a:	or     al,0x50
  405c2c:	sbb    bh,bh
	...
  405c4a:	xor    eax,0x52e3a37a
  405c4f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  405c50:	push   0xffffffffffffffff
  405c52:	(bad)  
  405c53:	sar    BYTE PTR [rax-0x1],0x35
  405c57:	jbe    0x405c9e
  405c59:	push   QWORD PTR [rbx]
  405c5b:	(bad)  
  405c5c:	(bad)  
  405c5d:	call   FWORD PTR [rdx]
  405c5f:	mov    DWORD PTR [rdi],esi
  405c61:	call   QWORD PTR [rsi+rax*4]
  405c64:	xor    eax,0x317f12ff
  405c69:	inc    DWORD PTR [rdx+rsi*2]
  405c6c:	and    eax,0xff
	...
  405c81:	add    BYTE PTR [rbx-0x77],cl
  405c84:	lods   eax,DWORD PTR ds:[rsi]
  405c85:	dec    DWORD PTR [rbx-0x77]
  405c88:	lods   eax,DWORD PTR ds:[rsi]
  405c89:	inc    DWORD PTR [rax-0x75]
  405c8c:	mov    ebp,0x6aa452f8
  405c91:	call   FWORD PTR [rcx-0x4a]
  405c94:	outs   dx,BYTE PTR ds:[rsi]
  405c95:	push   rcx
  405c97:	push   rdi
  405c99:	push   QWORD PTR [rbx]
  405c9b:	(bad)  
  405c9c:	(bad)  
  405c9d:	jmp    FWORD PTR [rdi]
  405c9f:	gs cmp al,0xff
  405ca2:	sub    eax,0x45ff4076
  405ca7:	mov    dl,BYTE PTR [rdi-0x1]
  405caa:	or     eax,0xff2d82
	...
  405cbb:	add    BYTE PTR [rax],al
  405cbd:	add    BYTE PTR [rbx-0x77],cl
  405cc0:	lods   eax,DWORD PTR ds:[rsi]
  405cc1:	dec    DWORD PTR [rbp-0x2e00213d]
  405cc7:	call   0xffffffff978e5cbf
  405ccc:	enter  0x52f1,0xa4
  405cd0:	push   0xffffffffffffffff
  405cd2:	test   ebp,ebx
  405cd4:	nop
  405cd5:	call   FWORD PTR [rcx-0x4a]
  405cd8:	outs   dx,BYTE PTR ds:[rsi]
  405cd9:	push   rcx
  405cdb:	push   rdi
  405cdd:	push   QWORD PTR [rbx]
  405cdf:	(bad)  
  405ce0:	(bad)  
  405ce1:	push   rcx
  405ce3:	push   rdi
  405ce5:	(bad)  
  405ce6:	jl     0x405c9d
  405ce8:	mov    edi,edi
  405cea:	or     al,0x7d
  405cec:	sub    bh,bh
	...
  405cfe:	rex.RX xchg ebx,eax
  405d00:	mov    ebx,0xe4c58fff
  405d05:	jmp    FWORD PTR [rdi+0x51ffe6d3]
  405d0b:	fwait
  405d0c:	(bad)  
  405d0d:	lock push rdx
  405d0f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  405d10:	push   0xffffffffffffffff
  405d12:	xchg   edx,eax
  405d13:	jrcxz  0x405cb1
  405d15:	call   FWORD PTR [rcx-0x4a]
  405d18:	outs   dx,BYTE PTR ds:[rsi]
  405d19:	call   FWORD PTR [rcx-0x4a]
  405d1c:	outs   dx,BYTE PTR ds:[rsi]
  405d1d:	(bad)  
  405d1e:	(bad)  
  405d1f:	(bad)  
  405d20:	(bad)  
  405d21:	(bad)  
  405d22:	(bad)  
  405d23:	(bad)  
  405d24:	(bad)  
  405d25:	dec    DWORD PTR [rsp+rsi*4-0x7fe5006b]
  405d2c:	xor    eax,0xff
	...
  405d3d:	add    BYTE PTR [rbp-0x63],dl
  405d40:	(bad)  
  405d41:	(bad)  
  405d42:	jns    0x405d01
  405d44:	loop   0x405d45
  405d46:	gs scas al,BYTE PTR es:[rdi]
  405d48:	(bad)  
  405d49:	call   QWORD PTR [rsi-0x5e]
  405d4c:	sar    ecx,1
  405d4e:	push   rdx
  405d4f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  405d50:	push   0xffffffffffffffff
  405d52:	xchg   edi,eax
  405d53:	out    0x9e,eax
  405d55:	(bad)  
  405d56:	jp     0x405d27
  405d58:	mov    edi,?
  405d5a:	icebp  
  405d5b:	push   rdi
  405d5d:	push   rcx
  405d5f:	push   rdi
  405d61:	push   rbp
  405d63:	(bad)  
  405d64:	stc    
  405d65:	call   FWORD PTR [rsi+0x25ffacd7]
  405d6b:	mov    ?,WORD PTR [rdi]
  405d6d:	inc    DWORD PTR [rax]
	...
  405d7b:	add    BYTE PTR [rax],al
  405d7d:	add    BYTE PTR [rbx-0x5d],bl
  405d80:	retf   0x8fff
  405d83:	int    0xec
  405d85:	push   QWORD PTR [rdi+0x78fff1de]
  405d8b:	mov    edx,0xa452ffdf
  405d90:	push   0xffffffffffffffff
  405d92:	mov    ebx,0xbcffb4f6
  405d97:	cli    
  405d98:	sar    edi,0xaa
  405d9b:	out    dx,al
  405d9c:	mov    al,0xff
  405d9e:	movabs eax,ds:0xa0ffa3e59bffa7e7
  405da7:	jmp    0xffffffffb69b5d53
  405dac:	imul   edi,edi,0x0
	...
  405dbb:	add    BYTE PTR [rax],al
  405dbd:	add    BYTE PTR [rbp-0x59],bl
  405dc0:	int    0xff
  405dc2:	movabs ds:0x61ffe9d9bafff3d8,eax
  405dcb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  405dcc:	int    0xff
  405dce:	fs test eax,0xa964ff68
  405dd4:	push   0x68a964ff
  405dd9:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  405ddd:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  405de1:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  405de5:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  405de9:	(bad)  
  405dea:	(bad)  
  405deb:	or     DWORD PTR [rax-0x1],0x0
	...
  405dfb:	add    BYTE PTR [rax],al
  405dfd:	add    BYTE PTR [rbx-0x6d],cl
  405e00:	mov    ecx,0xccab6cff
  405e05:	jmp    FWORD PTR [rdi-0x53]
  405e08:	sar    bh,1
  405e0a:	rex.WXB cdqe 
  405e0c:	sar    edi,0xd
  405e0f:	pop    rsp
  405e10:	mov    bh,bh
  405e12:	add    BYTE PTR [rcx+0x6f],al
  405e15:	jmp    QWORD PTR [rdx]
  405e17:	jb     0x405db6
  405e19:	call   FWORD PTR [rcx-0x61]
  405e1c:	(bad)  
  405e1d:	call   QWORD PTR [rbp-0x66]
  405e20:	mov    edi,0x8f672fff
  405e25:	inc    DWORD PTR [rdi]
  405e27:	es push rsp
  405e29:	inc    DWORD PTR [rax]
	...
  405e37:	add    BYTE PTR [rax],al
  405e39:	add    BYTE PTR [rcx-0x65],ah
  405e3c:	mov    ebx,0xc8a86ffd
  405e41:	jmp    QWORD PTR [rsi-0x61]
  405e44:	ret    0x45ff
  405e47:	sub    DWORD PTR [rbx-0x7baae401],0xffffffff
  405e4e:	add    edi,DWORD PTR [rax+rsi*2]
  405e51:	dec    DWORD PTR [rax]
  405e53:	push   rdi
  405e54:	mov    edi,edi
  405e56:	sub    eax,0x2cffb988
  405e5b:	sub    DWORD PTR [rdi-0x426ab801],0xcaa661ff
  405e65:	call   FWORD PTR [rbx-0x64]
  405e68:	sar    edi,0x47
  405e6b:	jg     0x405e11
  405e6d:	std    
	...
  405e76:	push   0x3bffb298
  405e7b:	jge    0x405e22
  405e7d:	jmp    0xffffffffffe7d9b9
  405e82:	or     al,0x52
  405e84:	mov    bh,bh
  405e86:	add    BYTE PTR [rcx],ah
  405e88:	push   rsp
  405e89:	inc    DWORD PTR [rax]
  405e8b:	sbb    al,0x4b
  405e8d:	inc    DWORD PTR [rax]
  405e8f:	(bad)  
  405e90:	pop    rdx
  405e91:	dec    DWORD PTR [rsi]
  405e93:	pop    rsi
  405e94:	mov    ?,edi
  405e96:	rex.B (bad) 
  405e98:	enter  0x3dff,0x95
  405e9c:	(bad)  
  405e9d:	push   QWORD PTR [rdx+rcx*4]
  405ea0:	mov    ecx,0xa77722ff
  405ea5:	jmp    FWORD PTR [rdx]
  405ea7:	js     0x405e4d
  405ea9:	jmp    FWORD PTR [rsi]
  405eab:	imul   edx,DWORD PTR [rax-0x5a7fb717],0xff
  405eb5:	add    BYTE PTR [rax],al
  405eb7:	add    BYTE PTR [rax],al
  405eb9:	add    BYTE PTR [rax-0x58],bh
  405ebc:	leave  
  405ebd:	push   QWORD PTR [rbx-0x4c]
  405ec0:	(bad)  
  405ec2:	cmp    ecx,DWORD PTR [rbp+0x6414ffbc]
  405ec8:	xchg   edi,eax
  405ec9:	inc    DWORD PTR [rbx]
  405ecb:	rex.X jne 0x405ecd
  405ece:	add    BYTE PTR [rcx],ch
  405ed0:	pop    rdx
  405ed1:	call   QWORD PTR [rax]
  405ed3:	(bad)  
  405ed4:	nop
  405ed5:	inc    DWORD PTR [rbx-0x67]
  405ed8:	(bad)  
  405ed9:	jmp    FWORD PTR [rip+0x2affb281]        # 0x2b401160
  405edf:	xor    DWORD PTR [rbp-0x457bdd01],0xbf8d2dff
  405ee9:	push   QWORD PTR [rdi]
  405eeb:	(bad)  
  405eec:	lods   eax,DWORD PTR ds:[rsi]
  405eed:	repnz add BYTE PTR [rax],al
  405ef0:	add    BYTE PTR [rax],al
  405ef2:	add    BYTE PTR [rax],al
  405ef4:	add    BYTE PTR [rax],al
  405ef6:	js     0x405ea0
  405ef8:	leave  
  405ef9:	(bad)  
  405efa:	mov    ebp,0xc8fffce5
  405eff:	out    dx,eax
  405f00:	(bad)  
  405f01:	call   FWORD PTR [rdi+0x65fffada]
  405f07:	mov    bh,0xe1
  405f09:	push   QWORD PTR [rbx]
  405f0b:	xchg   edx,eax
  405f0c:	(bad)  
  405f0f:	imul   ebx,DWORD PTR [rsi-0x709ee801],0xb0822dff
  405f19:	push   QWORD PTR [rdi+rcx*4]
  405f1c:	sar    edi,0x4b
  405f1f:	movabs ds:0xc781ffe3b96affd2,al
  405f28:	in     al,dx
  405f29:	inc    DWORD PTR [rax+0x58ffe7c3]
  405f2f:	xchg   ebp,eax
  405f30:	mov    esi,0xf3
  405f35:	add    BYTE PTR [rax],al
  405f37:	add    BYTE PTR [rax],al
  405f39:	add    BYTE PTR [rax-0x58],bh
  405f3c:	leave  
  405f3d:	(bad)  
  405f3e:	js     0x405ee8
  405f40:	leave  
  405f41:	jmp    QWORD PTR [rax-0x66000f2d]
  405f47:	shl    bl,cl
  405f49:	(bad)  
  405f4a:	js     0x405f0f
  405f4c:	(bad)  
  405f4d:	(bad)  
  405f4e:	ds cwde 
  405f50:	enter  0xe5,0x0
  405f54:	add    BYTE PTR [rax],al
  405f56:	rex.X xchg ecx,eax
  405f58:	mov    esi,0xe8c175e9
  405f5d:	call   QWORD PTR [rcx-0x6c001032]
  405f63:	retf   0xffea
  405f66:	js     0x405f10
  405f68:	leave  
  405f69:	(bad)  
  405f6a:	js     0x405f14
  405f6c:	leave  
  405f6d:	inc    DWORD PTR [rax]
	...
  405f7f:	add    BYTE PTR [rax],al
  405f81:	add    BYTE PTR [rax-0x58],bh
  405f84:	leave  
  405f85:	(bad)  
  405f86:	js     0x405f30
  405f88:	leave  
  405f89:	(bad)  
  405f8a:	js     0x405f34
  405f8c:	leave  
  405f8d:	inc    DWORD PTR [rax]
	...
  405f97:	add    BYTE PTR [rax],al
  405f99:	add    BYTE PTR [rax-0x58],bh
  405f9c:	leave  
  405f9d:	(bad)  
  405f9e:	jnp    0x405f5a
  405fa0:	fsubp  st(2),st
  405fa2:	js     0x405f4c
  405fa4:	leave  
  405fa5:	inc    DWORD PTR [rax]
	...
  405fef:	add    BYTE PTR [rax],al
  405ff1:	add    dh,bh
  405ff3:	add    DWORD PTR [rax],eax
  405ff5:	add    ah,bh
  405ff7:	add    DWORD PTR [rax],eax
  405ff9:	add    al,dh
  405ffb:	add    DWORD PTR [rax],eax
  405ffd:	add    al,ah
  405fff:	add    DWORD PTR [rax],eax
  406001:	add    al,ah
  406003:	add    DWORD PTR [rax],eax
  406005:	add    al,ah
  406007:	add    DWORD PTR [rax],eax
  406009:	add    al,ah
  40600b:	add    DWORD PTR [rax],eax
  40600d:	add    al,ah
  40600f:	add    DWORD PTR [rax],eax
  406011:	add    al,ah
  406013:	add    eax,DWORD PTR [rax]
  406015:	add    al,al
  406017:	add    DWORD PTR [rax],eax
  406019:	add    BYTE PTR [rax-0x40000000],al
  40601f:	add    DWORD PTR [rax],eax
  406021:	add    BYTE PTR [rax-0x40000000],al
  406027:	add    DWORD PTR [rax],0xc7f100
  40602d:	add    bh,bh
  40602f:	inc    DWORD PTR [rax]
  406031:	add    BYTE PTR [rbx],cl
  406033:	rex.XB add BYTE PTR [r9],al
  406036:	add    BYTE PTR [rax],al
  406038:	add    bh,bh
  40603a:	(bad)  
  40603b:	(bad)  
  40603c:	inc    DWORD PTR [rcx]
  40603e:	add    BYTE PTR [rax],al
  406040:	add    BYTE PTR [rax],al
  406042:	add    BYTE PTR [rax],al
  406044:	add    BYTE PTR [rdx+rax*1],cl
  406047:	add    BYTE PTR [rax],al
  406049:	add    BYTE PTR [rdi+0x53],dl
  40604c:	jns    0x4060c1
  40604e:	je     0x4060b5
  406050:	ins    DWORD PTR es:[rdi],dx
  406051:	cs push rdi
  406053:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40605a:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40605c:	jb     0x4060cb
  40605e:	jae    0x40608c
  406060:	and    BYTE PTR [rsi+0x65],dl
  406063:	jb     0x4060d8
  406065:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40606c:	xor    BYTE PTR cs:[rsi],ch
  40606f:	xor    BYTE PTR [rax+riz*1],ch
  406072:	rex.XB jne 0x4060e1
  406075:	je     0x4060ec
  406077:	jb     0x4060de
  406079:	cmp    eax,0x7475656e
  40607e:	jb     0x4060e1
  406080:	ins    BYTE PTR es:[rdi],dx
  406081:	sub    al,0x20
  406083:	push   rax
  406084:	jne    0x4060e8
  406086:	ins    BYTE PTR es:[rdi],dx
  406087:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40608e:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  406092:	(bad)  
  406093:	(bad)  
  406094:	(bad)  
  406095:	(bad)  
  406096:	xor    eax,0x31363563
  40609b:	cmp    DWORD PTR [rbx],esi
  40609d:	xor    al,0x65
  40609f:	xor    BYTE PTR [rax],bh
  4060a1:	cmp    DWORD PTR [rip+0x1],eax        # 0x4060a8
  4060a7:	es push rbx
  4060a9:	jns    0x40611e
  4060ab:	je     0x406112
  4060ad:	ins    DWORD PTR es:[rdi],dx
  4060ae:	cs push rdi
  4060b0:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4060b7:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4060b9:	jb     0x406128
  4060bb:	jae    0x4060eb
  4060bd:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4060bf:	jb     0x40612e
  4060c1:	push   rbx
  4060c2:	je     0x406125
  4060c4:	jb     0x40613a
  4060c6:	push   rax
  4060c7:	outs   dx,DWORD PTR ds:[rsi]
  4060c8:	jae    0x406133
  4060ca:	je     0x406135
  4060cc:	outs   dx,DWORD PTR ds:[rsi]
  4060cd:	outs   dx,BYTE PTR ds:[rsi]
  4060ce:	add    DWORD PTR [rax],eax
  4060d0:	add    BYTE PTR [rax],al
  4060d2:	(bad)  
  4060d3:	jbe    0x406136
  4060d5:	ins    BYTE PTR es:[rdi],dx
  4060d6:	jne    0x40613d
  4060d8:	pop    rdi
  4060d9:	pop    rdi
  4060da:	add    BYTE PTR [rax],cl
  4060dc:	add    al,BYTE PTR [rax]
  4060de:	add    BYTE PTR [rax],al
  4060e0:	add    DWORD PTR [rax],eax
  4060e2:	add    BYTE PTR [rax],al
  4060e4:	or     eax,DWORD PTR [rcx]
  4060e6:	rcpps  xmm2,XMMWORD PTR [rcx+0x4c]
  4060ea:	and    BYTE PTR [rbx+0x65],dl
  4060ed:	jb     0x406165
  4060ef:	gs jb  0x406112
  4060f2:	xor    dh,BYTE PTR [rax]
  4060f4:	xor    BYTE PTR [rax],bh
  4060f6:	add    DWORD PTR [rcx],ecx
  4060f8:	push   r10
  4060fa:	push   rax
  4060fb:	imul   r12d,DWORD PTR [rcx+0x6c],0x7201676f
  406103:	push   rbx
  406104:	jns    0x406179
  406106:	je     0x40616d
  406108:	ins    DWORD PTR es:[rdi],dx
  406109:	cs push rdi
  40610b:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  406112:	rex.RX outs dx,DWORD PTR ds:[rsi]
  406114:	jb     0x406183
  406116:	jae    0x406146
  406118:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40611a:	jb     0x406189
  40611c:	sub    al,0x20
  40611e:	push   rbx
  40611f:	jns    0x406194
  406121:	je     0x406188
  406123:	ins    DWORD PTR es:[rdi],dx
  406124:	cs push rdi
  406126:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40612d:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40612f:	jb     0x40619e
  406131:	jae    0x40615f
  406133:	and    BYTE PTR [rsi+0x65],dl
  406136:	jb     0x4061ab
  406138:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40613f:	xor    BYTE PTR cs:[rsi],ch
  406142:	xor    BYTE PTR [rax+riz*1],ch
  406145:	rex.XB jne 0x4061b4
  406148:	je     0x4061bf
  40614a:	jb     0x4061b1
  40614c:	cmp    eax,0x7475656e
  406151:	jb     0x4061b4
  406153:	ins    BYTE PTR es:[rdi],dx
  406154:	sub    al,0x20
  406156:	push   rax
  406157:	jne    0x4061bb
  406159:	ins    BYTE PTR es:[rdi],dx
  40615a:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  406161:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  406165:	(bad)  
  406166:	(bad)  
  406167:	(bad)  
  406168:	(bad)  
  406169:	xor    eax,0x31363563
  40616e:	cmp    DWORD PTR [rbx],esi
  406170:	xor    al,0x65
  406172:	xor    BYTE PTR [rax],bh
  406174:	cmp    DWORD PTR [rcx],eax
  406176:	adc    BYTE PTR [rbx+0x6f],ah
  406179:	outs   dx,BYTE PTR ds:[rsi]
  40617a:	je     0x4061ee
  40617c:	outs   dx,DWORD PTR ds:[rsi]
  40617d:	ins    BYTE PTR es:[rdi],dx
  40617e:	rex.W outs dx,DWORD PTR ds:[rsi]
  406180:	jae    0x4061f6
  406182:	push   rax
  406183:	(bad)  
  406184:	outs   dx,BYTE PTR ds:[rsi]
  406185:	gs ins BYTE PTR es:[rdi],dx
  406187:	add    DWORD PTR [rip+0x69687424],eax        # 0x69a8d5b1
  40618d:	jae    0x406190
  40618f:	jae    0x4061e4
  406191:	jns    0x406206
  406193:	je     0x4061fa
  406195:	ins    DWORD PTR es:[rdi],dx
  406196:	cs push rdi
  406198:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40619f:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4061a1:	jb     0x406210
  4061a3:	jae    0x4061d3
  4061a5:	push   rax
  4061a6:	(bad)  
  4061a7:	outs   dx,BYTE PTR ds:[rsi]
  4061a8:	gs ins BYTE PTR es:[rdi],dx
  4061aa:	sub    al,0x20
  4061ac:	push   rbx
  4061ad:	jns    0x406222
  4061af:	je     0x406216
  4061b1:	ins    DWORD PTR es:[rdi],dx
  4061b2:	cs push rdi
  4061b4:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4061bb:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4061bd:	jb     0x40622c
  4061bf:	jae    0x4061ed
  4061c1:	and    BYTE PTR [rsi+0x65],dl
  4061c4:	jb     0x406239
  4061c6:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4061cd:	xor    BYTE PTR cs:[rsi],ch
  4061d0:	xor    BYTE PTR [rax+riz*1],ch
  4061d3:	rex.XB jne 0x406242
  4061d6:	je     0x40624d
  4061d8:	jb     0x40623f
  4061da:	cmp    eax,0x7475656e
  4061df:	jb     0x406242
  4061e1:	ins    BYTE PTR es:[rdi],dx
  4061e2:	sub    al,0x20
  4061e4:	push   rax
  4061e5:	jne    0x406249
  4061e7:	ins    BYTE PTR es:[rdi],dx
  4061e8:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4061ef:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4061f3:	(bad)  
  4061f4:	(bad)  
  4061f5:	(bad)  
  4061f6:	(bad)  
  4061f7:	xor    eax,0x31363563
  4061fc:	cmp    DWORD PTR [rbx],esi
  4061fe:	xor    al,0x65
  406200:	xor    BYTE PTR [rax],bh
  406202:	cmp    DWORD PTR [rcx],eax
  406204:	add    DWORD PTR [rax],esi
  406206:	add    BYTE PTR [rcx],r8b
  406209:	add    BYTE PTR [rax],al
  40620b:	add    bh,bh
  40620d:	(bad)  
  40620e:	(bad)  
  40620f:	inc    DWORD PTR [rcx]
  406211:	add    BYTE PTR [rax],al
  406213:	add    BYTE PTR [rax],al
  406215:	add    BYTE PTR [rax],al
  406217:	add    BYTE PTR [rdx+rax*1],cl
  40621a:	add    BYTE PTR [rax],al
  40621c:	add    BYTE PTR [rdi+0x53],dl
  40621f:	jns    0x406294
  406221:	je     0x406288
  406223:	ins    DWORD PTR es:[rdi],dx
  406224:	cs push rdi
  406226:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40622d:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40622f:	jb     0x40629e
  406231:	jae    0x40625f
  406233:	and    BYTE PTR [rsi+0x65],dl
  406236:	jb     0x4062ab
  406238:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40623f:	xor    BYTE PTR cs:[rsi],ch
  406242:	xor    BYTE PTR [rax+riz*1],ch
  406245:	rex.XB jne 0x4062b4
  406248:	je     0x4062bf
  40624a:	jb     0x4062b1
  40624c:	cmp    eax,0x7475656e
  406251:	jb     0x4062b4
  406253:	ins    BYTE PTR es:[rdi],dx
  406254:	sub    al,0x20
  406256:	push   rax
  406257:	jne    0x4062bb
  406259:	ins    BYTE PTR es:[rdi],dx
  40625a:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  406261:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  406265:	(bad)  
  406266:	(bad)  
  406267:	(bad)  
  406268:	(bad)  
  406269:	xor    eax,0x31363563
  40626e:	cmp    DWORD PTR [rbx],esi
  406270:	xor    al,0x65
  406272:	xor    BYTE PTR [rax],bh
  406274:	cmp    DWORD PTR [rip+0x1],eax        # 0x40627b
  40627a:	(bad)  
  40627b:	push   rbx
  40627c:	jns    0x4062f1
  40627e:	je     0x4062e5
  406280:	ins    DWORD PTR es:[rdi],dx
  406281:	cs push rdi
  406283:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40628a:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40628c:	jb     0x4062fb
  40628e:	jae    0x4062be
  406290:	rex.R outs dx,DWORD PTR ds:[rsi]
  406292:	movsxd ebp,DWORD PTR [rbx+0x53]
  406295:	je     0x406310
  406297:	ins    BYTE PTR es:[rdi],dx
  406298:	add    DWORD PTR gs:[rax],eax
  40629b:	add    BYTE PTR [rax],al
  40629d:	(bad)  
  40629e:	jbe    0x406301
  4062a0:	ins    BYTE PTR es:[rdi],dx
  4062a1:	jne    0x406308
  4062a3:	pop    rdi
  4062a4:	pop    rdi
  4062a5:	add    BYTE PTR [rax],cl
  4062a7:	add    al,BYTE PTR [rax]
  4062a9:	add    BYTE PTR [rax],al
  4062ab:	add    eax,0xb000000
  4062b0:	add    BYTE PTR [r9],r8b
  4062b3:	add    BYTE PTR [rax],al
  4062b5:	add    bh,bh
  4062b7:	(bad)  
  4062b8:	(bad)  
  4062b9:	inc    DWORD PTR [rcx]
  4062bb:	add    BYTE PTR [rax],al
  4062bd:	add    BYTE PTR [rax],al
  4062bf:	add    BYTE PTR [rax],al
  4062c1:	add    BYTE PTR [rdx+rax*1],cl
  4062c4:	add    BYTE PTR [rax],al
  4062c6:	add    BYTE PTR [rcx+0x53],dl
  4062c9:	jns    0x40633e
  4062cb:	je     0x406332
  4062cd:	ins    DWORD PTR es:[rdi],dx
  4062ce:	cs rex.R jb 0x406333
  4062d2:	ja     0x40633d
  4062d4:	outs   dx,BYTE PTR ds:[rsi]
  4062d5:	addr32 sub al,0x20
  4062d8:	push   rsi
  4062d9:	gs jb  0x40634f
  4062dc:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4062e3:	xor    BYTE PTR cs:[rsi],ch
  4062e6:	xor    BYTE PTR [rax+riz*1],ch
  4062e9:	rex.XB jne 0x406358
  4062ec:	je     0x406363
  4062ee:	jb     0x406355
  4062f0:	cmp    eax,0x7475656e
  4062f5:	jb     0x406358
  4062f7:	ins    BYTE PTR es:[rdi],dx
  4062f8:	sub    al,0x20
  4062fa:	push   rax
  4062fb:	jne    0x40635f
  4062fd:	ins    BYTE PTR es:[rdi],dx
  4062fe:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  406305:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  406309:	(bad)  
  40630a:	xor    BYTE PTR [rbx],dh
  40630c:	xor    ax,0x3766
  406310:	xor    WORD PTR [rcx],si
  406313:	fs xor eax,0x61336130
  406319:	add    eax,0x1
  40631e:	adc    al,0x53
  406320:	jns    0x406395
  406322:	je     0x406389
  406324:	ins    DWORD PTR es:[rdi],dx
  406325:	cs rex.R jb 0x40638a
  406329:	ja     0x406394
  40632b:	outs   dx,BYTE PTR ds:[rsi]
  40632c:	addr32 cs push rax
  40632f:	outs   dx,DWORD PTR ds:[rsi]
  406330:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  406337:	add    DWORD PTR [rax+0x1],edi
  40633a:	jns    0x40633c
  40633c:	add    BYTE PTR [rax],cl
  40633e:	or     BYTE PTR [rdx],al
	...
  406348:	add    BYTE PTR [rax],al
  40634a:	add    BYTE PTR [rbx],cl
  40634c:	add    BYTE PTR [r9],al
  40634f:	add    BYTE PTR [rax],al
  406351:	add    bh,bh
  406353:	(bad)  
  406354:	(bad)  
  406355:	inc    DWORD PTR [rcx]
  406357:	add    BYTE PTR [rax],al
  406359:	add    BYTE PTR [rax],al
  40635b:	add    BYTE PTR [rax],al
  40635d:	add    BYTE PTR [rdx+rax*1],cl
  406360:	add    BYTE PTR [rax],al
  406362:	add    BYTE PTR [rcx+0x53],dl
  406365:	jns    0x4063da
  406367:	je     0x4063ce
  406369:	ins    DWORD PTR es:[rdi],dx
  40636a:	cs rex.R jb 0x4063cf
  40636e:	ja     0x4063d9
  406370:	outs   dx,BYTE PTR ds:[rsi]
  406371:	addr32 sub al,0x20
  406374:	push   rsi
  406375:	gs jb  0x4063eb
  406378:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40637f:	xor    BYTE PTR cs:[rsi],ch
  406382:	xor    BYTE PTR [rax+riz*1],ch
  406385:	rex.XB jne 0x4063f4
  406388:	je     0x4063ff
  40638a:	jb     0x4063f1
  40638c:	cmp    eax,0x7475656e
  406391:	jb     0x4063f4
  406393:	ins    BYTE PTR es:[rdi],dx
  406394:	sub    al,0x20
  406396:	push   rax
  406397:	jne    0x4063fb
  406399:	ins    BYTE PTR es:[rdi],dx
  40639a:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4063a1:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4063a5:	(bad)  
  4063a6:	xor    BYTE PTR [rbx],dh
  4063a8:	xor    ax,0x3766
  4063ac:	xor    WORD PTR [rcx],si
  4063af:	fs xor eax,0x61336130
  4063b5:	add    eax,0x1
  4063ba:	adc    edx,DWORD PTR [rbx+0x79]
  4063bd:	jae    0x406433
  4063bf:	gs ins DWORD PTR es:[rdi],dx
  4063c1:	cs rex.R jb 0x406426
  4063c5:	ja     0x406430
  4063c7:	outs   dx,BYTE PTR ds:[rsi]
  4063c8:	addr32 cs push rbx
  4063cb:	imul   edi,DWORD PTR [rdx+0x65],0x2
  4063d2:	add    eax,0x74646977
  4063d7:	push   0x69656806
  4063dc:	addr32 push 0x8000074
  4063e2:	or     BYTE PTR [rdx],al
  4063e4:	add    BYTE PTR [rax],al
  4063e6:	add    BYTE PTR [rbp+0x17000001],cl
  4063ec:	add    DWORD PTR [rax],eax
  4063ee:	add    BYTE PTR [rbx],cl
  4063f0:	or     BYTE PTR [rcx],al
  4063f2:	add    BYTE PTR [rax],al
  4063f4:	add    BYTE PTR [rax],al
  4063f6:	add    BYTE PTR [rax],al
  4063f8:	xchg   esp,eax
  4063f9:	rex.WXB add BYTE PTR [r8],al
  4063fc:	(bad)  
  4063fd:	retf   0xbeef
  406400:	add    DWORD PTR [rax],eax
  406402:	add    BYTE PTR [rax],al
  406404:	xchg   ecx,eax
  406405:	add    BYTE PTR [rax],al
  406407:	add    BYTE PTR [rbx+rdx*2+0x79],ch
  40640b:	jae    0x406481
  40640d:	gs ins DWORD PTR es:[rdi],dx
  40640f:	cs push rdx
  406411:	gs jae 0x406483
  406414:	jne    0x406488
  406416:	movsxd esp,DWORD PTR [rbp+0x73]
  406419:	cs push rdx
  40641b:	gs jae 0x40648d
  40641e:	jne    0x406492
  406420:	movsxd esp,DWORD PTR [rbp+0x52]
  406423:	gs (bad) 
  406425:	fs gs jb 0x406455
  406429:	and    BYTE PTR [rbp+0x73],ch
  40642c:	movsxd ebp,DWORD PTR [rdi+0x72]
  40642f:	ins    BYTE PTR es:[rdi],dx
  406430:	imul   esp,DWORD PTR [rdx+0x2c],0x72655620
  406437:	jae    0x4064a2
  406439:	outs   dx,DWORD PTR ds:[rsi]
  40643a:	outs   dx,BYTE PTR ds:[rsi]
  40643b:	cmp    eax,0x2e302e32
  406440:	xor    BYTE PTR [rsi],ch
  406442:	xor    BYTE PTR [rax+riz*1],ch
  406445:	rex.XB jne 0x4064b4
  406448:	je     0x4064bf
  40644a:	jb     0x4064b1
  40644c:	cmp    eax,0x7475656e
  406451:	jb     0x4064b4
  406453:	ins    BYTE PTR es:[rdi],dx
  406454:	sub    al,0x20
  406456:	push   rax
  406457:	jne    0x4064bb
  406459:	ins    BYTE PTR es:[rdi],dx
  40645a:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  406461:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  406465:	(bad)  
  406466:	(bad)  
  406467:	(bad)  
  406468:	(bad)  
  406469:	xor    eax,0x31363563
  40646e:	cmp    DWORD PTR [rbx],esi
  406470:	xor    al,0x65
  406472:	xor    BYTE PTR [rax],bh
  406474:	cmp    DWORD PTR [rbx],esp
  406476:	push   rbx
  406477:	jns    0x4064ec
  406479:	je     0x4064e0
  40647b:	ins    DWORD PTR es:[rdi],dx
  40647c:	cs push rdx
  40647e:	gs jae 0x4064f0
  406481:	jne    0x4064f5
  406483:	movsxd esp,DWORD PTR [rbp+0x73]
  406486:	cs push rdx
  406488:	jne    0x4064f8
  40648a:	je     0x4064f5
  40648c:	ins    DWORD PTR es:[rdi],dx
  40648d:	gs push rdx
  40648f:	gs jae 0x406501
  406492:	jne    0x406506
  406494:	movsxd esp,DWORD PTR [rbp+0x53]
  406497:	gs je  0x40649c
  40649a:	add    BYTE PTR [rax],al
  40649c:	add    BYTE PTR [rdx+0x0],dh
  40649f:	add    BYTE PTR [rax],al
  4064a1:	(bad)  
  4064a2:	add    BYTE PTR [rax],al
  4064a4:	add    BYTE PTR [rdi+0x53],ah
  4064a7:	jns    0x40651c
  4064a9:	je     0x406510
  4064ab:	ins    DWORD PTR es:[rdi],dx
  4064ac:	cs rex.R jb 0x406511
  4064b0:	ja     0x40651b
  4064b2:	outs   dx,BYTE PTR ds:[rsi]
  4064b3:	addr32 cs push rbx
  4064b6:	imul   edi,DWORD PTR [rdx+0x65],0x53202c46
  4064bd:	jns    0x406532
  4064bf:	je     0x406526
  4064c1:	ins    DWORD PTR es:[rdi],dx
  4064c2:	cs rex.R jb 0x406527
  4064c6:	ja     0x406531
  4064c8:	outs   dx,BYTE PTR ds:[rsi]
  4064c9:	addr32 sub al,0x20
  4064cc:	push   rsi
  4064cd:	gs jb  0x406543
  4064d0:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4064d7:	xor    BYTE PTR cs:[rsi],ch
  4064da:	xor    BYTE PTR [rax+riz*1],ch
  4064dd:	rex.XB jne 0x40654c
  4064e0:	je     0x406557
  4064e2:	jb     0x406549
  4064e4:	cmp    eax,0x7475656e
  4064e9:	jb     0x40654c
  4064eb:	ins    BYTE PTR es:[rdi],dx
  4064ec:	sub    al,0x20
  4064ee:	push   rax
  4064ef:	jne    0x406553
  4064f1:	ins    BYTE PTR es:[rdi],dx
  4064f2:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4064f9:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4064fd:	(bad)  
  4064fe:	xor    BYTE PTR [rbx],dh
  406500:	xor    ax,0x3766
  406504:	xor    WORD PTR [rcx],si
  406507:	fs xor eax,0x61336130
  40650d:	push   bx
  40650f:	jns    0x406584
  406511:	je     0x406578
  406513:	ins    DWORD PTR es:[rdi],dx
  406514:	cs rex.R jb 0x406579
  406518:	ja     0x406583
  40651a:	outs   dx,BYTE PTR ds:[rsi]
  40651b:	addr32 cs push rbx
  40651e:	imul   edi,DWORD PTR [rdx+0x65],0x7953202c
  406525:	jae    0x40659b
  406527:	gs ins DWORD PTR es:[rdi],dx
  406529:	cs rex.R jb 0x40658e
  40652d:	ja     0x406598
  40652f:	outs   dx,BYTE PTR ds:[rsi]
  406530:	addr32 sub al,0x20
  406533:	push   rsi
  406534:	gs jb  0x4065aa
  406537:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40653e:	xor    BYTE PTR cs:[rsi],ch
  406541:	xor    BYTE PTR [rax+riz*1],ch
  406544:	rex.XB jne 0x4065b3
  406547:	je     0x4065be
  406549:	jb     0x4065b0
  40654b:	cmp    eax,0x7475656e
  406550:	jb     0x4065b3
  406552:	ins    BYTE PTR es:[rdi],dx
  406553:	sub    al,0x20
  406555:	push   rax
  406556:	jne    0x4065ba
  406558:	ins    BYTE PTR es:[rdi],dx
  406559:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  406560:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  406564:	(bad)  
  406565:	xor    BYTE PTR [rbx],dh
  406567:	xor    ax,0x3766
  40656b:	xor    WORD PTR [rcx],si
  40656e:	fs xor eax,0x61336130
  406574:	ja     0x4065c9
  406576:	jns    0x4065eb
  406578:	je     0x4065df
  40657a:	ins    DWORD PTR es:[rdi],dx
  40657b:	cs push rdi
  40657d:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  406584:	rex.RX outs dx,DWORD PTR ds:[rsi]
  406586:	jb     0x4065f5
  406588:	jae    0x4065b8
  40658a:	rex.R outs dx,DWORD PTR ds:[rsi]
  40658c:	movsxd ebp,DWORD PTR [rbx+0x53]
  40658f:	je     0x40660a
  406591:	ins    BYTE PTR es:[rdi],dx
  406592:	gs sub al,0x20
  406595:	push   rbx
  406596:	jns    0x40660b
  406598:	je     0x4065ff
  40659a:	ins    DWORD PTR es:[rdi],dx
  40659b:	cs push rdi
  40659d:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4065a4:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4065a6:	jb     0x406615
  4065a8:	jae    0x4065d6
  4065aa:	and    BYTE PTR [rsi+0x65],dl
  4065ad:	jb     0x406622
  4065af:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4065b6:	xor    BYTE PTR cs:[rsi],ch
  4065b9:	xor    BYTE PTR [rax+riz*1],ch
  4065bc:	rex.XB jne 0x40662b
  4065bf:	je     0x406636
  4065c1:	jb     0x406628
  4065c3:	cmp    eax,0x7475656e
  4065c8:	jb     0x40662b
  4065ca:	ins    BYTE PTR es:[rdi],dx
  4065cb:	sub    al,0x20
  4065cd:	push   rax
  4065ce:	jne    0x406632
  4065d0:	ins    BYTE PTR es:[rdi],dx
  4065d1:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4065d8:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4065dc:	(bad)  
  4065dd:	(bad)  
  4065de:	(bad)  
  4065df:	(bad)  
  4065e0:	xor    eax,0x31363563
  4065e5:	cmp    DWORD PTR [rbx],esi
  4065e7:	xor    al,0x65
  4065e9:	xor    BYTE PTR [rax],bh
  4065eb:	cmp    DWORD PTR [rbp+0x53],esi
  4065ee:	jns    0x406663
  4065f0:	je     0x406657
  4065f2:	ins    DWORD PTR es:[rdi],dx
  4065f3:	cs push rdi
  4065f5:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4065fc:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4065fe:	jb     0x40666d
  406600:	jae    0x406630
  406602:	rex.WB ins DWORD PTR es:[rdi],dx
  406604:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  406607:	fs gs sub al,0x20
  40660b:	push   rbx
  40660c:	jns    0x406681
  40660e:	je     0x406675
  406610:	ins    DWORD PTR es:[rdi],dx
  406611:	cs push rdi
  406613:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40661a:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40661c:	jb     0x40668b
  40661e:	jae    0x40664c
  406620:	and    BYTE PTR [rsi+0x65],dl
  406623:	jb     0x406698
  406625:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40662c:	xor    BYTE PTR cs:[rsi],ch
  40662f:	xor    BYTE PTR [rax+riz*1],ch
  406632:	rex.XB jne 0x4066a1
  406635:	je     0x4066ac
  406637:	jb     0x40669e
  406639:	cmp    eax,0x7475656e
  40663e:	jb     0x4066a1
  406640:	ins    BYTE PTR es:[rdi],dx
  406641:	sub    al,0x20
  406643:	push   rax
  406644:	jne    0x4066a8
  406646:	ins    BYTE PTR es:[rdi],dx
  406647:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40664e:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  406652:	(bad)  
  406653:	(bad)  
  406654:	(bad)  
  406655:	(bad)  
  406656:	xor    eax,0x31363563
  40665b:	cmp    DWORD PTR [rbx],esi
  40665d:	xor    al,0x65
  40665f:	xor    BYTE PTR [rax],bh
  406661:	cmp    DWORD PTR [rdi+0x53],esp
  406664:	jns    0x4066d9
  406666:	je     0x4066cd
  406668:	ins    DWORD PTR es:[rdi],dx
  406669:	cs rex.R jb 0x4066ce
  40666d:	ja     0x4066d8
  40666f:	outs   dx,BYTE PTR ds:[rsi]
  406670:	addr32 cs push rax
  406673:	outs   dx,DWORD PTR ds:[rsi]
  406674:	imul   ebp,DWORD PTR [rsi+0x74],0x7953202c
  40667b:	jae    0x4066f1
  40667d:	gs ins DWORD PTR es:[rdi],dx
  40667f:	cs rex.R jb 0x4066e4
  406683:	ja     0x4066ee
  406685:	outs   dx,BYTE PTR ds:[rsi]
  406686:	addr32 sub al,0x20
  406689:	push   rsi
  40668a:	gs jb  0x406700
  40668d:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  406694:	xor    BYTE PTR cs:[rsi],ch
  406697:	xor    BYTE PTR [rax+riz*1],ch
  40669a:	rex.XB jne 0x406709
  40669d:	je     0x406714
  40669f:	jb     0x406706
  4066a1:	cmp    eax,0x7475656e
  4066a6:	jb     0x406709
  4066a8:	ins    BYTE PTR es:[rdi],dx
  4066a9:	sub    al,0x20
  4066ab:	push   rax
  4066ac:	jne    0x406710
  4066ae:	ins    BYTE PTR es:[rdi],dx
  4066af:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4066b6:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4066ba:	(bad)  
  4066bb:	xor    BYTE PTR [rbx],dh
  4066bd:	xor    ax,0x3766
  4066c1:	xor    WORD PTR [rcx],si
  4066c4:	fs xor eax,0x61336130
  4066ca:	jne    0x40671f
  4066cc:	jns    0x406741
  4066ce:	je     0x406735
  4066d0:	ins    DWORD PTR es:[rdi],dx
  4066d1:	cs push rdi
  4066d3:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4066da:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4066dc:	jb     0x40674b
  4066de:	jae    0x40670e
  4066e0:	push   rax
  4066e1:	(bad)  
  4066e2:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x7953202c
  4066eb:	jae    0x406761
  4066ed:	gs ins DWORD PTR es:[rdi],dx
  4066ef:	cs push rdi
  4066f1:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4066f8:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4066fa:	jb     0x406769
  4066fc:	jae    0x40672a
  4066fe:	and    BYTE PTR [rsi+0x65],dl
  406701:	jb     0x406776
  406703:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40670a:	xor    BYTE PTR cs:[rsi],ch
  40670d:	xor    BYTE PTR [rax+riz*1],ch
  406710:	rex.XB jne 0x40677f
  406713:	je     0x40678a
  406715:	jb     0x40677c
  406717:	cmp    eax,0x7475656e
  40671c:	jb     0x40677f
  40671e:	ins    BYTE PTR es:[rdi],dx
  40671f:	sub    al,0x20
  406721:	push   rax
  406722:	jne    0x406786
  406724:	ins    BYTE PTR es:[rdi],dx
  406725:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40672c:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  406730:	(bad)  
  406731:	(bad)  
  406732:	(bad)  
  406733:	(bad)  
  406734:	xor    eax,0x31363563
  406739:	cmp    DWORD PTR [rbx],esi
  40673b:	xor    al,0x65
  40673d:	xor    BYTE PTR [rax],bh
  40673f:	cmp    DWORD PTR [rcx+0x73795301],eax
  406745:	je     0x4067ac
  406747:	ins    DWORD PTR es:[rdi],dx
  406748:	cs push rdi
  40674a:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  406751:	rex.RX outs dx,DWORD PTR ds:[rsi]
  406753:	jb     0x4067c2
  406755:	jae    0x406785
  406757:	push   rsp
  406758:	(bad)  
  406759:	(bad)  
  40675a:	ins    BYTE PTR es:[rdi],dx
  40675b:	gs rex.WR (bad) 
  40675e:	jns    0x4067cf
  406760:	jne    0x4067d6
  406762:	push   rbx
  406763:	gs je  0x4067da
  406766:	imul   ebp,DWORD PTR [rsi+0x67],0x53202c73
  40676d:	jns    0x4067e2
  40676f:	je     0x4067d6
  406771:	ins    DWORD PTR es:[rdi],dx
  406772:	cs push rdi
  406774:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40677b:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40677d:	jb     0x4067ec
  40677f:	jae    0x4067ad
  406781:	and    BYTE PTR [rsi+0x65],dl
  406784:	jb     0x4067f9
  406786:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40678d:	xor    BYTE PTR cs:[rsi],ch
  406790:	xor    BYTE PTR [rax+riz*1],ch
  406793:	rex.XB jne 0x406802
  406796:	je     0x40680d
  406798:	jb     0x4067ff
  40679a:	cmp    eax,0x7475656e
  40679f:	jb     0x406802
  4067a1:	ins    BYTE PTR es:[rdi],dx
  4067a2:	sub    al,0x20
  4067a4:	push   rax
  4067a5:	jne    0x406809
  4067a7:	ins    BYTE PTR es:[rdi],dx
  4067a8:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4067af:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4067b3:	(bad)  
  4067b4:	(bad)  
  4067b5:	(bad)  
  4067b6:	(bad)  
  4067b7:	xor    eax,0x31363563
  4067bc:	cmp    DWORD PTR [rbx],esi
  4067be:	xor    al,0x65
  4067c0:	xor    BYTE PTR [rax],bh
  4067c2:	cmp    DWORD PTR [rax+0x26],edx
  4067c5:	popf   
  4067c6:	loope  0x40674a
  4067c8:	sbb    ecx,ebp
  4067ca:	out    0x82,al
  4067cc:	lods   eax,DWORD PTR ds:[rsi]
  4067cd:	mov    dh,0x4f
  4067cf:	test   BYTE PTR [rsi+riz*1+0x7db8879e],al
  4067d6:	and    BYTE PTR [rbx-0x7377f3a5],cl
  4067dc:	jrcxz  0x40679e
  4067de:	mov    DWORD PTR [rbp+rbx*8+0x588c926b],ecx
  4067e5:	xor    al,0xd6
  4067e7:	pop    QWORD PTR [rdi]
  4067e9:	add    esi,DWORD PTR [rcx+0x3f779090]
  4067ef:	xchg   edx,eax
  4067f0:	jrcxz  0x40679a
  4067f2:	sahf   
  4067f3:	xchg   edx,eax
  4067f4:	sbb    esp,esi
  4067f6:	adc    al,0x95
  4067f8:	rex.RXB shr DWORD PTR [r10],0x97
  4067fc:	stc    
  4067fd:	ins    BYTE PTR es:[rdi],dx
  4067fe:	xor    edx,DWORD PTR [rdi-0x68cbf7bf]
  406804:	movabs eax,ds:0xaa9aa76f6c98fd38
  40680d:	and    al,0xc6
  40680f:	fwait
  406810:	push   rcx
  406811:	xor    BYTE PTR [rsp+rbx*4],0x1a
  406815:	hlt    
  406816:	(bad)  
  406817:	movabs ds:0xa819b830a75f320e,eax
  406820:	rex.RX xchg ebx,r9d
  406823:	mov    cl,0x3c
  406825:	(bad)  
  406826:	ss mov ah,0x2d
  406829:	adc    ebx,ebp
  40682b:	mov    dh,0xaa
  40682d:	fmul   QWORD PTR [rdi-0x46]
  406830:	mov    ah,0x62
  406832:	fnstsw WORD PTR [rdx-0x449d619a]
  406838:	(bad)  
  40683a:	retf   
  40683b:	mov    ebx,0xbcdd0212
  406840:	(bad)  
  406841:	(bad)  
  406842:	mov    DWORD PTR [rbp-0x409f4073],edi
  406848:	cmc    
  406849:	pop    rbx
  40684a:	(bad)  
  40684b:	mov    edi,0xbf699cf3
  406850:	rex.B loop 0x40689b
  406853:	sar    BYTE PTR [rcx+0x22c04d9f],0xc2
  40685a:	xchg   ebx,eax
  40685b:	retf   0x395b
  40685e:	rex.R fmul st(6),st
  406861:	push   rax
  406862:	jl     0x406840
  406864:	add    ebx,DWORD PTR [rbp-0x58432181]
  40686a:	sbb    dh,0xd4
  40686d:	mov    BYTE PTR [rax-0x21],al
  406870:	and    BYTE PTR [rbp+0x3e],ah
  406873:	out    0xf7,al
  406875:	(bad)  
  406876:	jb     0x40685f
  406878:	repnz xchg edi,eax
  40687a:	xor    al,0xe8
  40687c:	enter  0x9ca2,0xe8
  406880:	(bad)  
  406881:	pop    rsi
  406882:	test   al,0xe8
  406884:	cmp    al,0x89
  406886:	lock in al,dx
  406888:	push   rcx
  406889:	std    
  40688a:	icebp  
  40688b:	icebp  
  40688c:	test   eax,0xb7f1f6ba
  406891:	sub    ebp,0xfffffff5
  406894:	lea    eax,[rsp+rcx*1]
  406897:	not    ebx
  406899:	ja     0x4068f5
  40689b:	cli    
  40689c:	xchg   BYTE PTR [rbx-0x7],dh
  40689f:	cli    
  4068a0:	adc    ch,BYTE PTR [rbx+0x2b]
  4068a3:	cld    
  4068a4:	jmp    0x406859
  4068a6:	test   DWORD PTR [rcx],0x2013d94
  4068ac:	add    dl,al
  4068ae:	push   rcx
  4068af:	(bad)  
  4068b0:	cdq    
  4068b1:	shl    bh,0x6
  4068b4:	and    BYTE PTR [rbx],cl
  4068b6:	push   rcx
  4068b7:	(bad)  
  4068b8:	lahf   
  4068b9:	rex.RX push rsp
  4068bb:	(bad)  
  4068bc:	mov    esi,DWORD PTR [rbx]
  4068be:	dec    BYTE PTR [rcx]
  4068c0:	xor    al,0xff
  4068c2:	or     ecx,DWORD PTR [rdx]
  4068c4:	(bad)  
  4068c6:	mov    edi,0xd54af50e
  4068cb:	adc    DWORD PTR [rsi+0x3a],esp
  4068ce:	xchg   esi,eax
  4068cf:	adc    eax,DWORD PTR [rcx+0x69]
  4068d2:	sbb    edx,DWORD PTR [rcx+rdx*8]
  4068d5:	pop    rax
  4068d6:	adc    eax,0x81e5c118
  4068db:	sbb    bh,BYTE PTR [rdx+0xf1c407c]
  4068e1:	mov    al,0x86
  4068e3:	sbb    eax,0x1d903bb0
  4068e8:	icebp  
  4068e9:	jrcxz  0x4068c8
  4068eb:	and    ecx,DWORD PTR [rbx-0x45]
  4068ee:	imul   ebp,DWORD PTR [rdx],0x4d
  4068f1:	ret    
  4068f2:	jo     0x40691e
  4068f4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4068f5:	call   0x671a9608
  4068fa:	(bad)  
  4068fb:	sub    eax,0x2f8cd800
  406900:	jg     0x406957
  406902:	xchg   esp,eax
  406903:	(bad)  
  406904:	jbe    0x4068a9
  406906:	fidiv  DWORD PTR [rsi]
  406908:	fwait
  406909:	(bad)  
  40690a:	push   rbp
  40690b:	(bad)  
  40690c:	int3   
  40690d:	movabs eax,ds:0x5e683c5263043a79
  406916:	push   rsi
  406917:	cmp    al,0xd7
  406919:	pop    rdx
  40691a:	data16 cmp al,0x48
  40691d:	and    eax,0x2ada42a3
  406922:	stos   DWORD PTR es:[rdi],eax
  406923:	rex.X scas al,BYTE PTR es:[rdi]
  406925:	rex.XB icebp 
  406927:	rex.X xchg ecx,eax
  406929:	(bad)  
  40692a:	cli    
  40692b:	rex.X sub BYTE PTR [rax+0xc],0x45
  406930:	jbe    0x4068f0
  406932:	in     eax,dx
  406933:	rex.RXB or eax,0x6548bbd1
  406939:	sbb    ecx,ecx
  40693b:	rex.WRX test BYTE PTR [rdx],r13b
  40693e:	mov    edi,0xc6a8fb4f
  406943:	rex.WRXB adc r12,QWORD PTR [r11+0xcf95010]
  40694a:	push   rdx
  40694b:	pop    rax
  40694c:	push   rbp
  40694d:	fs push 0x5a
  406950:	push   rcx
  406951:	movabs ds:0xf0da623c824e60cd,al
  40695a:	movsxd r8,r13d
  40695d:	push   rsp
  40695e:	jns    0x4069c6
  406960:	cmp    eax,0x3b6679d1
  406965:	adc    BYTE PTR [rdx-0x2e43a9a],al
  40696b:	imul   eax,DWORD PTR [rbp-0x75],0xf3626aac
  406972:	shr    BYTE PTR [rbx+0x12],1
  406975:	mov    WORD PTR [rdx-0x6a1f8293],ss
  40697b:	jo     0x406949
  40697d:	sub    BYTE PTR [rdx+0x77],bl
  406980:	(bad)  
  406981:	std    
  406982:	fs ja  0x40693f
  406985:	sbb    DWORD PTR [rbx+0x7680ce7b],0x7f
  40698c:	loop   0x406994
  40698e:	add    BYTE PTR [rax],al
  406990:	ins    BYTE PTR es:[rdi],dx
  406991:	(bad)  
  406992:	add    BYTE PTR [rax],al
  406994:	push   rax
  406995:	or     eax,DWORD PTR [rax]
  406997:	add    bh,ch
  406999:	(bad)  
  40699a:	add    BYTE PTR [rax],al
  40699c:	leave  
  40699d:	add    BYTE PTR [rax],al
  40699f:	add    cl,ch
  4069a1:	adc    eax,DWORD PTR [rax]
  4069a3:	add    BYTE PTR [rbx+0x14],bl
  4069a6:	add    BYTE PTR [rax],al
  4069a8:	add    edx,DWORD PTR [rbx]
  4069aa:	add    BYTE PTR [rax],al
  4069ac:	adc    eax,DWORD PTR [rip+0x6250000]        # 0x66569b2
  4069b2:	add    BYTE PTR [rax],al
  4069b4:	lea    eax,[rax+rax*1]
  4069b7:	add    BYTE PTR [rbx+0x13],dh
  4069ba:	add    BYTE PTR [rax],al
  4069bc:	adc    al,0xe
  4069be:	add    BYTE PTR [rax],al
  4069c0:	(bad)  
  4069c1:	or     al,BYTE PTR [rax]
  4069c3:	add    BYTE PTR [rbx+0x1500000b],dl
  4069c9:	or     eax,DWORD PTR [rax]
  4069cb:	add    BYTE PTR [rdi+0x18],dh
  4069ce:	add    BYTE PTR [rax],al
  4069d0:	(bad)  
  4069d1:	add    BYTE PTR [rax],al
  4069d3:	add    BYTE PTR [rcx+0x2c000016],bh
  4069d9:	adc    BYTE PTR [rax],al
  4069db:	add    BYTE PTR [rdi+0x12],bh
  4069de:	add    BYTE PTR [rax],al
  4069e0:	xchg   BYTE PTR [rsi],cl
  4069e2:	add    BYTE PTR [rax],al
  4069e4:	rex.WXB add QWORD PTR [r8],rax
  4069e7:	add    al,ch
  4069e9:	(bad)  
  4069ea:	add    BYTE PTR [rax],al
  4069ec:	fwait
  4069ed:	or     DWORD PTR [rax],eax
  4069ef:	add    BYTE PTR [rdx],bl
  4069f1:	(bad)  
  4069f2:	add    BYTE PTR [rax],al
  4069f4:	sbb    eax,DWORD PTR [rdi]
  4069f6:	add    BYTE PTR [rax],al
  4069f8:	sub    eax,0x52000009
  4069fd:	or     al,BYTE PTR [rax]
  4069ff:	add    BYTE PTR [rdi],bl
  406a01:	(bad)  
  406a02:	add    BYTE PTR [rax],al
  406a04:	rex.WRXB (bad) 
  406a06:	add    BYTE PTR [rax],al
  406a08:	jmp    0xffffffffed406a1c
  406a0d:	adc    eax,0x158b0000
  406a12:	add    BYTE PTR [rax],al
  406a14:	(bad)
  406a17:	add    BYTE PTR [rcx+0x4b00000f],cl
  406a1d:	sldt   WORD PTR [rax]
  406a20:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  406a21:	(bad)  
  406a22:	add    BYTE PTR [rax],al
  406a24:	ror    DWORD PTR [rax],0x0
  406a27:	add    ah,dl
  406a29:	or     DWORD PTR [rax],eax
  406a2b:	add    BYTE PTR [rdx+0xc000000],cl
  406a31:	add    DWORD PTR [rax],eax
  406a33:	add    dh,al
  406a35:	adc    al,BYTE PTR [rax]
  406a37:	add    BYTE PTR [rax-0x70ffffed],dh
  406a3d:	(bad)  
  406a3e:	add    BYTE PTR [rax],al
  406a40:	(bad)  
  406a41:	or     eax,DWORD PTR [rax]
  406a43:	add    BYTE PTR [rsi+0x58000007],bh
  406a49:	(bad)  
  406a4a:	add    BYTE PTR [rax],al
  406a4c:	cmp    BYTE PTR [rbx],dl
  406a4e:	add    BYTE PTR [rax],al
  406a50:	xor    al,0x11
  406a52:	add    BYTE PTR [rax],al
  406a54:	mov    dl,0x10
  406a56:	add    BYTE PTR [rax],al
  406a58:	(bad)  
  406a59:	adc    al,0x0
  406a5b:	add    BYTE PTR [rip+0x57000015],ah        # 0x57406a76
  406a61:	or     BYTE PTR [rax],al
  406a63:	add    BYTE PTR [rax+0x7100000c],bh
  406a69:	adc    BYTE PTR [rax],al
  406a6b:	add    BYTE PTR [rsp+rax*1+0x0],cl
  406a6f:	add    dl,dl
  406a71:	add    al,0x0
  406a73:	add    BYTE PTR [rdi+rcx*1],ch
  406a76:	add    BYTE PTR [rax],al
  406a78:	mov    eax,0x7a000015
  406a7d:	add    al,BYTE PTR [rax]
  406a7f:	add    ah,dh
  406a81:	add    al,BYTE PTR [rax]
  406a83:	add    dl,ah
  406a85:	add    eax,0x5580000
  406a8a:	add    BYTE PTR [rax],al
  406a8c:	call   0xffffffffd4406a9f
  406a91:	(bad)  
  406a92:	add    BYTE PTR [rax],al
  406a94:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  406a95:	sldt   WORD PTR [rax]
  406a98:	or     DWORD PTR [rdi],ecx
  406a9a:	add    BYTE PTR [rax],al
  406a9c:	es or  eax,0x180d0000
  406aa2:	add    BYTE PTR [rax],al
  406aa4:	(bad)  
  406aa5:	or     al,BYTE PTR [rax]
  406aa7:	add    al,bh
  406aa9:	or     BYTE PTR [rax],al
  406aab:	add    BYTE PTR [rsi+0x9],ah
  406aae:	add    BYTE PTR [rax],al
  406ab0:	jno    0x406ac3
  406ab2:	add    BYTE PTR [rax],al
  406ab4:	pop    rsi
  406ab5:	(bad)  
  406ab6:	add    BYTE PTR [rax],al
  406ab8:	rex.RX sbb BYTE PTR [rax],r8b
  406abb:	add    dl,dh
  406abd:	add    eax,DWORD PTR [rax]
  406abf:	add    BYTE PTR [rdi],bl
  406ac1:	add    al,0x0
  406ac3:	add    BYTE PTR [rdx+rax*1],al
  406ac6:	add    BYTE PTR [rax],al
  406ac8:	mov    es,WORD PTR [rcx]
  406aca:	add    BYTE PTR [rax],al
  406acc:	(bad)
  406acf:	add    BYTE PTR [rbp+0x3d000002],dh
  406ad5:	add    al,BYTE PTR [rax]
  406ad7:	add    bh,al
  406ad9:	add    DWORD PTR [rax],eax
  406adb:	add    BYTE PTR [rax+rcx*1],ah
  406ade:	add    BYTE PTR [rax],al
  406ae0:	mov    cs,WORD PTR [rax]
  406ae2:	add    BYTE PTR [rax],al
  406ae4:	iret   
  406ae5:	add    eax,DWORD PTR [rax]
  406ae7:	add    BYTE PTR [rax+0xc],al
  406aea:	add    BYTE PTR [rax],al
  406aec:	push   rax
  406aed:	add    BYTE PTR [rax],al
  406aef:	add    BYTE PTR [rbp+0x0],ch
  406af2:	add    BYTE PTR [rax],al
  406af4:	lea    eax,[rbx]
  406af6:	add    BYTE PTR [rax],al
  406af8:	adc    al,BYTE PTR [rax]
  406afb:	add    ch,bh
  406afd:	adc    DWORD PTR [rax],eax
  406aff:	add    BYTE PTR [rax-0x4ffffff3],bl
  406b05:	add    eax,DWORD PTR [rax]
  406b07:	add    BYTE PTR [rsi+0x3],ch
  406b0a:	add    BYTE PTR [rax],al
  406b0c:	(bad)  
  406b0d:	add    eax,DWORD PTR [rax]
  406b0f:	add    BYTE PTR [rbx+0x6600000a],dl
  406b15:	sldt   WORD PTR [rax]
  406b18:	xchg   BYTE PTR [rsi],dl
  406b1a:	add    BYTE PTR [rax],al
  406b1c:	pop    rdx
  406b1d:	adc    eax,0xdd50000
  406b22:	add    BYTE PTR [rax],al
  406b24:	movsxd ecx,DWORD PTR [rip+0xcf10000]        # 0xd316b2a
  406b2a:	add    BYTE PTR [rax],al
  406b2c:	or     ecx,DWORD PTR [rax+rax*1]
  406b2f:	add    BYTE PTR [rbx+0xc],bh
  406b32:	add    BYTE PTR [rax],al
  406b34:	out    dx,eax
  406b35:	adc    BYTE PTR [rax],al
  406b37:	add    BYTE PTR [rdi+0xe],cl
  406b3a:	add    BYTE PTR [rax],al
  406b3c:	repnz adc al,0x0
  406b3f:	add    BYTE PTR [rax],al
  406b41:	add    BYTE PTR [rax],al
  406b43:	add    BYTE PTR [rcx-0x64fffff9],cl
  406b49:	add    eax,0x14900000
  406b4e:	add    BYTE PTR [rax],al
  406b50:	mov    dh,0x11
  406b52:	add    BYTE PTR [rax],al
  406b54:	or     al,0x20
  406b56:	add    BYTE PTR [rax],al
  406b58:	xor    ah,BYTE PTR [rax+rax*1]
  406b5b:	je     0x406b5d
  406b5d:	push   0x73006900
  406b62:	add    BYTE PTR [rsi],ch
  406b64:	add    BYTE PTR [rcx+0x0],al
  406b67:	jne    0x406b69
  406b69:	je     0x406b6b
  406b6b:	outs   dx,DWORD PTR ds:[rsi]
  406b6c:	add    BYTE PTR [rbx+0x0],dl
  406b6f:	movsxd eax,DWORD PTR [rax]
  406b71:	(bad)  
  406b72:	add    BYTE PTR [rax+rax*1+0x65],ch
  406b76:	add    BYTE PTR [rax+rax*1+0x69],al
  406b7a:	add    BYTE PTR [rbp+0x0],ch
  406b7d:	add    BYTE PTR gs:[rsi+0x0],ch
  406b81:	jae    0x406b83
  406b83:	imul   eax,DWORD PTR [rax],0x6e006f
  406b89:	jae    0x406b8b
  406b8b:	add    BYTE PTR [rax],al
  406b8d:	add    BYTE PTR [rax],al
  406b8f:	adc    al,0x24
  406b91:	add    BYTE PTR [rax+rax*1+0x68],dh
  406b95:	add    BYTE PTR [rcx+0x0],ch
  406b98:	jae    0x406b9a
  406b9a:	add    BYTE PTR cs:[rbx+0x0],dl
  406b9e:	imul   eax,DWORD PTR [rax],0x65007a
  406ba4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  406ba5:	add    BYTE PTR [rax],al
  406ba7:	add    BYTE PTR [rax],bl
  406ba9:	add    BYTE PTR ds:[rsi],bh
  406bac:	add    BYTE PTR [rax+rax*1],ah
  406baf:	je     0x406bb1
  406bb1:	push   0x73006900
  406bb6:	add    BYTE PTR [rsi],ch
  406bb8:	add    BYTE PTR [rsi+0x0],cl
  406bbb:	(bad)  
  406bbc:	add    BYTE PTR [rbp+0x0],ch
  406bbf:	add    BYTE PTR gs:[rcx+0x1],cl
  406bc3:	add    BYTE PTR [rax],al
  406bc5:	sbb    BYTE PTR [rsi],bh
  406bc7:	add    BYTE PTR [rsi],bh
  406bc9:	add    BYTE PTR [rax+rax*1],ah
  406bcc:	je     0x406bce
  406bce:	push   0x73006900
  406bd3:	add    BYTE PTR [rsi],ch
  406bd5:	add    BYTE PTR [rax+rax*1+0x79],dl
  406bd9:	add    BYTE PTR [rax+0x0],dh
  406bdc:	add    BYTE PTR gs:[rcx+rax*1+0x0],bl
  406be1:	add    BYTE PTR [rdx],bh
  406be3:	add    BYTE PTR ds:[rsi],bh
  406be6:	add    BYTE PTR [rcx+0x0],ah
  406be9:	add    BYTE PTR fs:[rax+rax*1+0x46],ah
  406bee:	add    BYTE PTR [rbp+0x0],ah
  406bf1:	(bad)  
  406bf2:	add    BYTE PTR [rax+rax*1+0x75],dh
  406bf6:	add    BYTE PTR [rdx+0x0],dh
  406bf9:	add    BYTE PTR gs:[rax+rax*1+0x65],al
  406bfe:	add    BYTE PTR [rbx+0x0],dh
  406c01:	movsxd eax,DWORD PTR [rax]
  406c03:	imul   eax,DWORD PTR [rax],0x740070
  406c09:	rex.WR add BYTE PTR [rcx+0x0],r12b
  406c0d:	(bad)  
  406c0e:	add    BYTE PTR [rbp+0x0],ah
  406c11:	ins    BYTE PTR es:[rdi],dx
  406c12:	add    BYTE PTR [rsi],ch
  406c14:	add    BYTE PTR [rsi+0x0],cl
  406c17:	(bad)  
  406c18:	add    BYTE PTR [rbp+0x0],ch
  406c1b:	gs add bh,dl
  406c1e:	add    DWORD PTR [rax],eax
  406c20:	add    BYTE PTR [rsi],bh
  406c22:	add    BYTE PTR ds:[rsi],bh
  406c25:	add    BYTE PTR [rcx+0x0],ah
  406c28:	add    BYTE PTR fs:[rax+rax*1+0x46],ah
  406c2d:	add    BYTE PTR [rbp+0x0],ah
  406c30:	(bad)  
  406c31:	add    BYTE PTR [rax+rax*1+0x75],dh
  406c35:	add    BYTE PTR [rdx+0x0],dh
  406c38:	add    BYTE PTR gs:[rax+rax*1+0x65],al
  406c3d:	add    BYTE PTR [rbx+0x0],dh
  406c40:	movsxd eax,DWORD PTR [rax]
  406c42:	imul   eax,DWORD PTR [rax],0x740070
  406c48:	rex.WR add BYTE PTR [rcx+0x0],r12b
  406c4c:	(bad)  
  406c4d:	add    BYTE PTR [rbp+0x0],ah
  406c50:	ins    BYTE PTR es:[rdi],dx
  406c51:	add    BYTE PTR [rsi],ch
  406c53:	add    BYTE PTR [rax+0x0],dl
  406c56:	(bad)  
  406c57:	add    BYTE PTR [rdx+0x0],dh
  406c5a:	add    BYTE PTR gs:[rsi+0x0],ch
  406c5e:	je     0x406c60
  406c60:	out    dx,eax
  406c61:	add    DWORD PTR [rax],eax
  406c63:	add    BYTE PTR [rdx],bh
  406c65:	add    BYTE PTR ds:[rsi],bh
  406c68:	add    BYTE PTR [rcx+0x0],ah
  406c6b:	add    BYTE PTR fs:[rax+rax*1+0x46],ah
  406c70:	add    BYTE PTR [rbp+0x0],ah
  406c73:	(bad)  
  406c74:	add    BYTE PTR [rax+rax*1+0x75],dh
  406c78:	add    BYTE PTR [rdx+0x0],dh
  406c7b:	add    BYTE PTR gs:[rax+rax*1+0x65],al
  406c80:	add    BYTE PTR [rbx+0x0],dh
  406c83:	movsxd eax,DWORD PTR [rax]
  406c85:	imul   eax,DWORD PTR [rax],0x740070
  406c8b:	rex.WR add BYTE PTR [rcx+0x0],r12b
  406c8f:	(bad)  
  406c90:	add    BYTE PTR [rbp+0x0],ah
  406c93:	ins    BYTE PTR es:[rdi],dx
  406c94:	add    BYTE PTR [rsi],ch
  406c96:	add    BYTE PTR [rax+rax*1+0x79],dl
  406c9a:	add    BYTE PTR [rax+0x0],dh
  406c9d:	add    BYTE PTR gs:[rdx],al
  406ca0:	add    al,BYTE PTR [rax]
  406ca2:	add    BYTE PTR [rsi],bh
  406ca4:	add    BYTE PTR ds:[rsi],bh
  406ca7:	add    BYTE PTR [rcx+0x0],ah
  406caa:	add    BYTE PTR fs:[rax+rax*1+0x46],ah
  406caf:	add    BYTE PTR [rbp+0x0],ah
  406cb2:	(bad)  
  406cb3:	add    BYTE PTR [rax+rax*1+0x75],dh
  406cb7:	add    BYTE PTR [rdx+0x0],dh
  406cba:	add    BYTE PTR gs:[rax+rax*1+0x65],al
  406cbf:	add    BYTE PTR [rbx+0x0],dh
  406cc2:	movsxd eax,DWORD PTR [rax]
  406cc4:	imul   eax,DWORD PTR [rax],0x740070
  406cca:	rex.WR add BYTE PTR [rcx+0x0],r12b
  406cce:	(bad)  
  406ccf:	add    BYTE PTR [rbp+0x0],ah
  406cd2:	ins    BYTE PTR es:[rdi],dx
  406cd3:	add    BYTE PTR [rsi],ch
  406cd5:	add    BYTE PTR [rdx+0x0],bl
  406cd8:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  406cdc:	add    BYTE PTR fs:[rbp+0x0],ah
  406ce0:	jb     0x406ce2
  406ce2:	ja     0x406ce6
  406ce4:	add    BYTE PTR [rax],al
  406ce6:	xor    al,0x3e
  406ce8:	add    BYTE PTR [rsi],bh
  406cea:	add    BYTE PTR [rcx+0x0],ah
  406ced:	add    BYTE PTR fs:[rax+rax*1+0x46],ah
  406cf2:	add    BYTE PTR [rbp+0x0],ah
  406cf5:	(bad)  
  406cf6:	add    BYTE PTR [rax+rax*1+0x75],dh
  406cfa:	add    BYTE PTR [rdx+0x0],dh
  406cfd:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
  406d02:	add    BYTE PTR [rsi+0x0],ch
  406d05:	imul   eax,DWORD PTR [rax],0x4c
  406d08:	add    BYTE PTR [rcx+0x0],ah
  406d0b:	(bad)  
  406d0c:	add    BYTE PTR [rbp+0x0],ah
  406d0f:	ins    BYTE PTR es:[rdi],dx
  406d10:	add    BYTE PTR [rsi],ch
  406d12:	add    BYTE PTR [rsi+0x0],cl
  406d15:	(bad)  
  406d16:	add    BYTE PTR [rbp+0x0],ch
  406d19:	add    BYTE PTR gs:[rdx+0x2],bh
  406d1d:	add    BYTE PTR [rax],al
  406d1f:	cmp    BYTE PTR [rsi],bh
  406d21:	add    BYTE PTR [rsi],bh
  406d23:	add    BYTE PTR [rcx+0x0],ah
  406d26:	add    BYTE PTR fs:[rax+rax*1+0x46],ah
  406d2b:	add    BYTE PTR [rbp+0x0],ah
  406d2e:	(bad)  
  406d2f:	add    BYTE PTR [rax+rax*1+0x75],dh
  406d33:	add    BYTE PTR [rdx+0x0],dh
  406d36:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
  406d3b:	add    BYTE PTR [rsi+0x0],ch
  406d3e:	imul   eax,DWORD PTR [rax],0x4c
  406d41:	add    BYTE PTR [rcx+0x0],ah
  406d44:	(bad)  
  406d45:	add    BYTE PTR [rbp+0x0],ah
  406d48:	ins    BYTE PTR es:[rdi],dx
  406d49:	add    BYTE PTR [rsi],ch
  406d4b:	add    BYTE PTR [rax+0x0],dl
  406d4e:	(bad)  
  406d4f:	add    BYTE PTR [rdx+0x0],dh
  406d52:	add    BYTE PTR gs:[rsi+0x0],ch
  406d56:	je     0x406d58
  406d58:	pop    QWORD PTR [rdx]
  406d5a:	add    BYTE PTR [rax],al
  406d5c:	xor    al,0x3e
  406d5e:	add    BYTE PTR [rsi],bh
  406d60:	add    BYTE PTR [rcx+0x0],ah
  406d63:	add    BYTE PTR fs:[rax+rax*1+0x46],ah
  406d68:	add    BYTE PTR [rbp+0x0],ah
  406d6b:	(bad)  
  406d6c:	add    BYTE PTR [rax+rax*1+0x75],dh
  406d70:	add    BYTE PTR [rdx+0x0],dh
  406d73:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
  406d78:	add    BYTE PTR [rsi+0x0],ch
  406d7b:	imul   eax,DWORD PTR [rax],0x4c
  406d7e:	add    BYTE PTR [rcx+0x0],ah
  406d81:	(bad)  
  406d82:	add    BYTE PTR [rbp+0x0],ah
  406d85:	ins    BYTE PTR es:[rdi],dx
  406d86:	add    BYTE PTR [rsi],ch
  406d88:	add    BYTE PTR [rax+rax*1+0x79],dl
  406d8c:	add    BYTE PTR [rax+0x0],dh
  406d8f:	add    BYTE PTR gs:[rdx+0x38000002],ah
  406d96:	add    BYTE PTR ds:[rsi],bh
  406d99:	add    BYTE PTR [rcx+0x0],ah
  406d9c:	add    BYTE PTR fs:[rax+rax*1+0x46],ah
  406da1:	add    BYTE PTR [rbp+0x0],ah
  406da4:	(bad)  
  406da5:	add    BYTE PTR [rax+rax*1+0x75],dh
  406da9:	add    BYTE PTR [rdx+0x0],dh
  406dac:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
  406db1:	add    BYTE PTR [rsi+0x0],ch
  406db4:	imul   eax,DWORD PTR [rax],0x4c
  406db7:	add    BYTE PTR [rcx+0x0],ah
  406dba:	(bad)  
  406dbb:	add    BYTE PTR [rbp+0x0],ah
  406dbe:	ins    BYTE PTR es:[rdi],dx
  406dbf:	add    BYTE PTR [rsi],ch
  406dc1:	add    BYTE PTR [rdx+0x0],bl
  406dc4:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  406dc8:	add    BYTE PTR fs:[rbp+0x0],ah
  406dcc:	jb     0x406dce
  406dce:	sbb    eax,DWORD PTR [rbx]
  406dd0:	add    BYTE PTR [rax],al
  406dd2:	ss add BYTE PTR ds:[rsi],bh
  406dd6:	add    BYTE PTR [rcx+0x0],ah
  406dd9:	add    BYTE PTR fs:[rax+rax*1+0x46],ah
  406dde:	add    BYTE PTR [rbp+0x0],ah
  406de1:	(bad)  
  406de2:	add    BYTE PTR [rax+rax*1+0x75],dh
  406de6:	add    BYTE PTR [rdx+0x0],dh
  406de9:	add    BYTE PTR gs:[rax+0x0],dl
  406ded:	imul   eax,DWORD PTR [rax],0x740063
  406df3:	jne    0x406df5
  406df5:	jb     0x406df7
  406df7:	add    BYTE PTR gs:[rdx+0x0],al
  406dfb:	outs   dx,DWORD PTR ds:[rsi]
  406dfc:	add    BYTE PTR [rax+0x0],bh
  406dff:	add    BYTE PTR cs:[rsi+0x0],cl
  406e03:	(bad)  
  406e04:	add    BYTE PTR [rbp+0x0],ch
  406e07:	add    BYTE PTR gs:[rsi],bl
  406e0a:	add    eax,DWORD PTR [rax]
  406e0c:	add    BYTE PTR [rdx],bh
  406e0e:	add    BYTE PTR ds:[rsi],bh
  406e11:	add    BYTE PTR [rcx+0x0],ah
  406e14:	add    BYTE PTR fs:[rax+rax*1+0x46],ah
  406e19:	add    BYTE PTR [rbp+0x0],ah
  406e1c:	(bad)  
  406e1d:	add    BYTE PTR [rax+rax*1+0x75],dh
  406e21:	add    BYTE PTR [rdx+0x0],dh
  406e24:	add    BYTE PTR gs:[rax+0x0],dl
  406e28:	imul   eax,DWORD PTR [rax],0x740063
  406e2e:	jne    0x406e30
  406e30:	jb     0x406e32
  406e32:	add    BYTE PTR gs:[rdx+0x0],al
  406e36:	outs   dx,DWORD PTR ds:[rsi]
  406e37:	add    BYTE PTR [rax+0x0],bh
  406e3a:	add    BYTE PTR cs:[rax+0x0],dl
  406e3e:	(bad)  
  406e3f:	add    BYTE PTR [rdx+0x0],dh
  406e42:	add    BYTE PTR gs:[rsi+0x0],ch
  406e46:	je     0x406e48
  406e48:	xor    al,0x3
  406e4a:	add    BYTE PTR [rax],al
  406e4c:	ss add BYTE PTR ds:[rsi],bh
  406e50:	add    BYTE PTR [rcx+0x0],ah
  406e53:	add    BYTE PTR fs:[rax+rax*1+0x46],ah
  406e58:	add    BYTE PTR [rbp+0x0],ah
  406e5b:	(bad)  
  406e5c:	add    BYTE PTR [rax+rax*1+0x75],dh
  406e60:	add    BYTE PTR [rdx+0x0],dh
  406e63:	add    BYTE PTR gs:[rax+0x0],dl
  406e67:	imul   eax,DWORD PTR [rax],0x740063
  406e6d:	jne    0x406e6f
  406e6f:	jb     0x406e71
  406e71:	add    BYTE PTR gs:[rdx+0x0],al
  406e75:	outs   dx,DWORD PTR ds:[rsi]
  406e76:	add    BYTE PTR [rax+0x0],bh
  406e79:	add    BYTE PTR cs:[rax+rax*1+0x79],dl
  406e7e:	add    BYTE PTR [rax+0x0],dh
  406e81:	add    BYTE PTR gs:[rdi+0x3],al
  406e85:	add    BYTE PTR [rax],al
  406e87:	cmp    bh,BYTE PTR [rsi]
  406e89:	add    BYTE PTR [rsi],bh
  406e8b:	add    BYTE PTR [rcx+0x0],ah
  406e8e:	add    BYTE PTR fs:[rax+rax*1+0x46],ah
  406e93:	add    BYTE PTR [rbp+0x0],ah
  406e96:	(bad)  
  406e97:	add    BYTE PTR [rax+rax*1+0x75],dh
  406e9b:	add    BYTE PTR [rdx+0x0],dh
  406e9e:	add    BYTE PTR gs:[rax+0x0],dl
  406ea2:	imul   eax,DWORD PTR [rax],0x740063
  406ea8:	jne    0x406eaa
  406eaa:	jb     0x406eac
  406eac:	add    BYTE PTR gs:[rdx+0x0],al
  406eb0:	outs   dx,DWORD PTR ds:[rsi]
  406eb1:	add    BYTE PTR [rax+0x0],bh
  406eb4:	add    BYTE PTR cs:[rdx+0x0],bl
  406eb8:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  406ebc:	add    BYTE PTR fs:[rbp+0x0],ah
  406ec0:	jb     0x406ec2
  406ec2:	rol    DWORD PTR [rbx],0x0
  406ec5:	add    BYTE PTR [rdx],bl
  406ec7:	add    BYTE PTR ds:[rsi],bh
  406eca:	add    BYTE PTR [rax+rax*1+0x61],ch
  406ece:	add    BYTE PTR [rdx+0x0],ah
  406ed1:	add    BYTE PTR gs:[rax+rax*1+0x31],ch
  406ed6:	add    BYTE PTR [rsi],ch
  406ed8:	add    BYTE PTR [rsi+0x0],cl
  406edb:	(bad)  
  406edc:	add    BYTE PTR [rbp+0x0],ch
  406edf:	gs add ah,al
  406ee2:	add    eax,DWORD PTR [rax]
  406ee4:	add    BYTE PTR [rsi],bl
  406ee6:	add    BYTE PTR ds:[rsi],bh
  406ee9:	add    BYTE PTR [rax+rax*1+0x61],ch
  406eed:	add    BYTE PTR [rdx+0x0],ah
  406ef0:	add    BYTE PTR gs:[rax+rax*1+0x31],ch
  406ef5:	add    BYTE PTR [rsi],ch
  406ef7:	add    BYTE PTR [rax+0x0],dl
  406efa:	(bad)  
  406efb:	add    BYTE PTR [rdx+0x0],dh
  406efe:	add    BYTE PTR gs:[rsi+0x0],ch
  406f02:	je     0x406f04
  406f04:	int3   
  406f05:	add    eax,DWORD PTR [rax]
  406f07:	add    BYTE PTR [rdx],bl
  406f09:	add    BYTE PTR ds:[rsi],bh
  406f0c:	add    BYTE PTR [rax+rax*1+0x61],ch
  406f10:	add    BYTE PTR [rdx+0x0],ah
  406f13:	add    BYTE PTR gs:[rax+rax*1+0x31],ch
  406f18:	add    BYTE PTR [rsi],ch
  406f1a:	add    BYTE PTR [rax+rax*1+0x79],dl
  406f1e:	add    BYTE PTR [rax+0x0],dh
  406f21:	gs add bh,bl
  406f24:	add    eax,DWORD PTR [rax]
  406f26:	add    BYTE PTR [rsi],bl
  406f28:	add    BYTE PTR ds:[rsi],bh
  406f2b:	add    BYTE PTR [rax+rax*1+0x61],ch
  406f2f:	add    BYTE PTR [rdx+0x0],ah
  406f32:	add    BYTE PTR gs:[rax+rax*1+0x31],ch
  406f37:	add    BYTE PTR [rsi],ch
  406f39:	add    BYTE PTR [rdx+0x0],bl
  406f3c:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  406f40:	add    BYTE PTR fs:[rbp+0x0],ah
  406f44:	jb     0x406f46
  406f46:	push   rsp
  406f47:	add    al,0x0
  406f49:	add    BYTE PTR [rax],ch
  406f4b:	add    BYTE PTR ds:[rsi],bh
  406f4e:	add    BYTE PTR [rax+rax*1+0x61],ch
  406f52:	add    BYTE PTR [rcx+0x0],bh
  406f55:	outs   dx,DWORD PTR ds:[rsi]
  406f56:	add    BYTE PTR [rbp+0x0],dh
  406f59:	je     0x406f5b
  406f5b:	rex.WRB add BYTE PTR [r9+0x0],r12b
  406f5f:	outs   dx,BYTE PTR ds:[rsi]
  406f60:	add    BYTE PTR [rcx+0x0],ah
  406f63:	add    BYTE PTR [ebp+0x0],ah
  406f67:	jb     0x406f69
  406f69:	add    BYTE PTR cs:[rsi+0x0],cl
  406f6d:	(bad)  
  406f6e:	add    BYTE PTR [rbp+0x0],ch
  406f71:	add    BYTE PTR gs:[rdi+0x4],dl
  406f75:	add    BYTE PTR [rax],al
  406f77:	sub    BYTE PTR [rsi],bh
  406f79:	add    BYTE PTR [rsi],bh
  406f7b:	add    BYTE PTR [rax+rax*1+0x61],ch
  406f7f:	add    BYTE PTR [rcx+0x0],bh
  406f82:	outs   dx,DWORD PTR ds:[rsi]
  406f83:	add    BYTE PTR [rbp+0x0],dh
  406f86:	je     0x406f88
  406f88:	rex.WRB add BYTE PTR [r9+0x0],r12b
  406f8c:	outs   dx,BYTE PTR ds:[rsi]
  406f8d:	add    BYTE PTR [rcx+0x0],ah
  406f90:	add    BYTE PTR [ebp+0x0],ah
  406f94:	jb     0x406f96
  406f96:	add    BYTE PTR cs:[rax+rax*1+0x79],dl
  406f9b:	add    BYTE PTR [rax+0x0],dh
  406f9e:	add    BYTE PTR gs:[rsi+0x4],ah
  406fa2:	add    BYTE PTR [rax],al
  406fa4:	cmp    al,0x3e
  406fa6:	add    BYTE PTR [rsi],bh
  406fa8:	add    BYTE PTR [rdx+0x0],dh
  406fab:	add    BYTE PTR gs:[rbp+0x0],ch
  406faf:	outs   dx,DWORD PTR ds:[rsi]
  406fb0:	add    BYTE PTR [rsi+0x0],dh
  406fb3:	add    BYTE PTR gs:[rsi+0x0],al
  406fb7:	add    BYTE PTR gs:[rcx+0x0],ah
  406fbb:	je     0x406fbd
  406fbd:	jne    0x406fbf
  406fbf:	jb     0x406fc1
  406fc1:	add    BYTE PTR gs:[rbx+0x0],dh
  406fc5:	rex.WR add BYTE PTR [rcx+0x0],r13b
  406fc9:	outs   dx,BYTE PTR ds:[rsi]
  406fca:	add    BYTE PTR [rbx+0x0],ch
  406fcd:	rex.WR add BYTE PTR [rcx+0x0],r12b
  406fd1:	(bad)  
  406fd2:	add    BYTE PTR [rbp+0x0],ah
  406fd5:	ins    BYTE PTR es:[rdi],dx
  406fd6:	add    BYTE PTR [rsi],ch
  406fd8:	add    BYTE PTR [rsi+0x0],cl
  406fdb:	(bad)  
  406fdc:	add    BYTE PTR [rbp+0x0],ch
  406fdf:	add    BYTE PTR gs:[rax*1+0x3e400000],dl
  406fe7:	add    BYTE PTR [rsi],bh
  406fe9:	add    BYTE PTR [rdx+0x0],dh
  406fec:	add    BYTE PTR gs:[rbp+0x0],ch
  406ff0:	outs   dx,DWORD PTR ds:[rsi]
  406ff1:	add    BYTE PTR [rsi+0x0],dh
  406ff4:	add    BYTE PTR gs:[rsi+0x0],al
  406ff8:	add    BYTE PTR gs:[rcx+0x0],ah
  406ffc:	je     0x406ffe
  406ffe:	jne    0x407000
  407000:	jb     0x407002
  407002:	add    BYTE PTR gs:[rbx+0x0],dh
  407006:	rex.WR add BYTE PTR [rcx+0x0],r13b
  40700a:	outs   dx,BYTE PTR ds:[rsi]
  40700b:	add    BYTE PTR [rbx+0x0],ch
  40700e:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407012:	(bad)  
  407013:	add    BYTE PTR [rbp+0x0],ah
  407016:	ins    BYTE PTR es:[rdi],dx
  407017:	add    BYTE PTR [rsi],ch
  407019:	add    BYTE PTR [rax+0x0],dl
  40701c:	(bad)  
  40701d:	add    BYTE PTR [rdx+0x0],dh
  407020:	add    BYTE PTR gs:[rsi+0x0],ch
  407024:	je     0x407026
  407026:	sub    eax,0x3c000005
  40702b:	add    BYTE PTR ds:[rsi],bh
  40702e:	add    BYTE PTR [rdx+0x0],dh
  407031:	add    BYTE PTR gs:[rbp+0x0],ch
  407035:	outs   dx,DWORD PTR ds:[rsi]
  407036:	add    BYTE PTR [rsi+0x0],dh
  407039:	add    BYTE PTR gs:[rsi+0x0],al
  40703d:	add    BYTE PTR gs:[rcx+0x0],ah
  407041:	je     0x407043
  407043:	jne    0x407045
  407045:	jb     0x407047
  407047:	add    BYTE PTR gs:[rbx+0x0],dh
  40704b:	rex.WR add BYTE PTR [rcx+0x0],r13b
  40704f:	outs   dx,BYTE PTR ds:[rsi]
  407050:	add    BYTE PTR [rbx+0x0],ch
  407053:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407057:	(bad)  
  407058:	add    BYTE PTR [rbp+0x0],ah
  40705b:	ins    BYTE PTR es:[rdi],dx
  40705c:	add    BYTE PTR [rsi],ch
  40705e:	add    BYTE PTR [rax+rax*1+0x79],dl
  407062:	add    BYTE PTR [rax+0x0],dh
  407065:	add    BYTE PTR gs:[rax+0x5],al
  407069:	add    BYTE PTR [rax],al
  40706b:	rex
  40706c:	add    BYTE PTR ds:[rsi],bh
  40706f:	add    BYTE PTR [rdx+0x0],dh
  407072:	add    BYTE PTR gs:[rbp+0x0],ch
  407076:	outs   dx,DWORD PTR ds:[rsi]
  407077:	add    BYTE PTR [rsi+0x0],dh
  40707a:	add    BYTE PTR gs:[rsi+0x0],al
  40707e:	add    BYTE PTR gs:[rcx+0x0],ah
  407082:	je     0x407084
  407084:	jne    0x407086
  407086:	jb     0x407088
  407088:	add    BYTE PTR gs:[rbx+0x0],dh
  40708c:	rex.WR add BYTE PTR [rcx+0x0],r13b
  407090:	outs   dx,BYTE PTR ds:[rsi]
  407091:	add    BYTE PTR [rbx+0x0],ch
  407094:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407098:	(bad)  
  407099:	add    BYTE PTR [rbp+0x0],ah
  40709c:	ins    BYTE PTR es:[rdi],dx
  40709d:	add    BYTE PTR [rsi],ch
  40709f:	add    BYTE PTR [rdx+0x0],bl
  4070a2:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  4070a6:	add    BYTE PTR fs:[rbp+0x0],ah
  4070aa:	jb     0x4070ac
  4070ac:	mov    ecx,0x3e000005
  4070b1:	add    BYTE PTR ds:[rsi],bh
  4070b4:	add    BYTE PTR [rdx+0x0],dh
  4070b7:	add    BYTE PTR gs:[rbp+0x0],ch
  4070bb:	outs   dx,DWORD PTR ds:[rsi]
  4070bc:	add    BYTE PTR [rsi+0x0],dh
  4070bf:	add    BYTE PTR gs:[rsi+0x0],al
  4070c3:	add    BYTE PTR gs:[rcx+0x0],ah
  4070c7:	je     0x4070c9
  4070c9:	jne    0x4070cb
  4070cb:	jb     0x4070cd
  4070cd:	add    BYTE PTR gs:[rbx+0x0],dh
  4070d1:	push   rax
  4070d2:	add    BYTE PTR [rcx+0x0],ch
  4070d5:	movsxd eax,DWORD PTR [rax]
  4070d7:	je     0x4070d9
  4070d9:	jne    0x4070db
  4070db:	jb     0x4070dd
  4070dd:	add    BYTE PTR gs:[rdx+0x0],al
  4070e1:	outs   dx,DWORD PTR ds:[rsi]
  4070e2:	add    BYTE PTR [rax+0x0],bh
  4070e5:	add    BYTE PTR cs:[rsi+0x0],cl
  4070e9:	(bad)  
  4070ea:	add    BYTE PTR [rbp+0x0],ch
  4070ed:	add    BYTE PTR gs:[rbp+rax*1+0x3e420000],bh
  4070f5:	add    BYTE PTR [rsi],bh
  4070f7:	add    BYTE PTR [rdx+0x0],dh
  4070fa:	add    BYTE PTR gs:[rbp+0x0],ch
  4070fe:	outs   dx,DWORD PTR ds:[rsi]
  4070ff:	add    BYTE PTR [rsi+0x0],dh
  407102:	add    BYTE PTR gs:[rsi+0x0],al
  407106:	add    BYTE PTR gs:[rcx+0x0],ah
  40710a:	je     0x40710c
  40710c:	jne    0x40710e
  40710e:	jb     0x407110
  407110:	add    BYTE PTR gs:[rbx+0x0],dh
  407114:	push   rax
  407115:	add    BYTE PTR [rcx+0x0],ch
  407118:	movsxd eax,DWORD PTR [rax]
  40711a:	je     0x40711c
  40711c:	jne    0x40711e
  40711e:	jb     0x407120
  407120:	add    BYTE PTR gs:[rdx+0x0],al
  407124:	outs   dx,DWORD PTR ds:[rsi]
  407125:	add    BYTE PTR [rax+0x0],bh
  407128:	add    BYTE PTR cs:[rax+0x0],dl
  40712c:	(bad)  
  40712d:	add    BYTE PTR [rdx+0x0],dh
  407130:	add    BYTE PTR gs:[rsi+0x0],ch
  407134:	je     0x407136
  407136:	(bad)  
  407137:	add    eax,0x3e3e0000
  40713c:	add    BYTE PTR [rsi],bh
  40713e:	add    BYTE PTR [rdx+0x0],dh
  407141:	add    BYTE PTR gs:[rbp+0x0],ch
  407145:	outs   dx,DWORD PTR ds:[rsi]
  407146:	add    BYTE PTR [rsi+0x0],dh
  407149:	add    BYTE PTR gs:[rsi+0x0],al
  40714d:	add    BYTE PTR gs:[rcx+0x0],ah
  407151:	je     0x407153
  407153:	jne    0x407155
  407155:	jb     0x407157
  407157:	add    BYTE PTR gs:[rbx+0x0],dh
  40715b:	push   rax
  40715c:	add    BYTE PTR [rcx+0x0],ch
  40715f:	movsxd eax,DWORD PTR [rax]
  407161:	je     0x407163
  407163:	jne    0x407165
  407165:	jb     0x407167
  407167:	add    BYTE PTR gs:[rdx+0x0],al
  40716b:	outs   dx,DWORD PTR ds:[rsi]
  40716c:	add    BYTE PTR [rax+0x0],bh
  40716f:	add    BYTE PTR cs:[rax+rax*1+0x79],dl
  407174:	add    BYTE PTR [rax+0x0],dh
  407177:	gs add cl,ch
  40717a:	add    eax,0x3e420000
  40717f:	add    BYTE PTR [rsi],bh
  407181:	add    BYTE PTR [rdx+0x0],dh
  407184:	add    BYTE PTR gs:[rbp+0x0],ch
  407188:	outs   dx,DWORD PTR ds:[rsi]
  407189:	add    BYTE PTR [rsi+0x0],dh
  40718c:	add    BYTE PTR gs:[rsi+0x0],al
  407190:	add    BYTE PTR gs:[rcx+0x0],ah
  407194:	je     0x407196
  407196:	jne    0x407198
  407198:	jb     0x40719a
  40719a:	add    BYTE PTR gs:[rbx+0x0],dh
  40719e:	push   rax
  40719f:	add    BYTE PTR [rcx+0x0],ch
  4071a2:	movsxd eax,DWORD PTR [rax]
  4071a4:	je     0x4071a6
  4071a6:	jne    0x4071a8
  4071a8:	jb     0x4071aa
  4071aa:	add    BYTE PTR gs:[rdx+0x0],al
  4071ae:	outs   dx,DWORD PTR ds:[rsi]
  4071af:	add    BYTE PTR [rax+0x0],bh
  4071b2:	add    BYTE PTR cs:[rdx+0x0],bl
  4071b6:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  4071ba:	add    BYTE PTR fs:[rbp+0x0],ah
  4071be:	jb     0x4071c0
  4071c0:	movsxd eax,DWORD PTR [rsi]
  4071c2:	add    BYTE PTR [rax],al
  4071c4:	xor    al,0x3e
  4071c6:	add    BYTE PTR [rsi],bh
  4071c8:	add    BYTE PTR [rdx+0x0],dh
  4071cb:	add    BYTE PTR gs:[rax+0x0],dh
  4071cf:	(bad)  
  4071d0:	add    BYTE PTR [rcx+0x0],ch
  4071d3:	jb     0x4071d5
  4071d5:	add    BYTE PTR [rbp+0x0],r12b
  4071d9:	jae    0x4071db
  4071db:	movsxd eax,DWORD PTR [rax]
  4071dd:	jb     0x4071df
  4071df:	imul   eax,DWORD PTR [rax],0x740070
  4071e5:	rex.WR add BYTE PTR [rcx+0x0],r12b
  4071e9:	(bad)  
  4071ea:	add    BYTE PTR [rbp+0x0],ah
  4071ed:	ins    BYTE PTR es:[rdi],dx
  4071ee:	add    BYTE PTR [rsi],ch
  4071f0:	add    BYTE PTR [rsi+0x0],cl
  4071f3:	(bad)  
  4071f4:	add    BYTE PTR [rbp+0x0],ch
  4071f7:	add    BYTE PTR gs:[rsi+0x6],ah
  4071fb:	add    BYTE PTR [rax],al
  4071fd:	cmp    BYTE PTR [rsi],bh
  4071ff:	add    BYTE PTR [rsi],bh
  407201:	add    BYTE PTR [rdx+0x0],dh
  407204:	add    BYTE PTR gs:[rax+0x0],dh
  407208:	(bad)  
  407209:	add    BYTE PTR [rcx+0x0],ch
  40720c:	jb     0x40720e
  40720e:	add    BYTE PTR [rbp+0x0],r12b
  407212:	jae    0x407214
  407214:	movsxd eax,DWORD PTR [rax]
  407216:	jb     0x407218
  407218:	imul   eax,DWORD PTR [rax],0x740070
  40721e:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407222:	(bad)  
  407223:	add    BYTE PTR [rbp+0x0],ah
  407226:	ins    BYTE PTR es:[rdi],dx
  407227:	add    BYTE PTR [rsi],ch
  407229:	add    BYTE PTR [rax+0x0],dl
  40722c:	(bad)  
  40722d:	add    BYTE PTR [rdx+0x0],dh
  407230:	add    BYTE PTR gs:[rsi+0x0],ch
  407234:	je     0x407236
  407236:	jnp    0x40723e
  407238:	add    BYTE PTR [rax],al
  40723a:	xor    al,0x3e
  40723c:	add    BYTE PTR [rsi],bh
  40723e:	add    BYTE PTR [rdx+0x0],dh
  407241:	add    BYTE PTR gs:[rax+0x0],dh
  407245:	(bad)  
  407246:	add    BYTE PTR [rcx+0x0],ch
  407249:	jb     0x40724b
  40724b:	add    BYTE PTR [rbp+0x0],r12b
  40724f:	jae    0x407251
  407251:	movsxd eax,DWORD PTR [rax]
  407253:	jb     0x407255
  407255:	imul   eax,DWORD PTR [rax],0x740070
  40725b:	rex.WR add BYTE PTR [rcx+0x0],r12b
  40725f:	(bad)  
  407260:	add    BYTE PTR [rbp+0x0],ah
  407263:	ins    BYTE PTR es:[rdi],dx
  407264:	add    BYTE PTR [rsi],ch
  407266:	add    BYTE PTR [rax+rax*1+0x79],dl
  40726a:	add    BYTE PTR [rax+0x0],dh
  40726d:	add    BYTE PTR gs:[rsi+0x38000006],cl
  407274:	add    BYTE PTR ds:[rsi],bh
  407277:	add    BYTE PTR [rdx+0x0],dh
  40727a:	add    BYTE PTR gs:[rax+0x0],dh
  40727e:	(bad)  
  40727f:	add    BYTE PTR [rcx+0x0],ch
  407282:	jb     0x407284
  407284:	add    BYTE PTR [rbp+0x0],r12b
  407288:	jae    0x40728a
  40728a:	movsxd eax,DWORD PTR [rax]
  40728c:	jb     0x40728e
  40728e:	imul   eax,DWORD PTR [rax],0x740070
  407294:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407298:	(bad)  
  407299:	add    BYTE PTR [rbp+0x0],ah
  40729c:	ins    BYTE PTR es:[rdi],dx
  40729d:	add    BYTE PTR [rsi],ch
  40729f:	add    BYTE PTR [rdx+0x0],bl
  4072a2:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  4072a6:	add    BYTE PTR fs:[rbp+0x0],ah
  4072aa:	jb     0x4072ac
  4072ac:	add    eax,DWORD PTR [rdi]
  4072ae:	add    BYTE PTR [rax],al
  4072b0:	sub    al,0x3e
  4072b2:	add    BYTE PTR [rsi],bh
  4072b4:	add    BYTE PTR [rdx+0x0],dh
  4072b7:	add    BYTE PTR gs:[rax+0x0],dh
  4072bb:	(bad)  
  4072bc:	add    BYTE PTR [rcx+0x0],ch
  4072bf:	jb     0x4072c1
  4072c1:	rex.WR add BYTE PTR [rcx+0x0],r13b
  4072c5:	outs   dx,BYTE PTR ds:[rsi]
  4072c6:	add    BYTE PTR [rbx+0x0],ch
  4072c9:	rex.WR add BYTE PTR [rcx+0x0],r12b
  4072cd:	(bad)  
  4072ce:	add    BYTE PTR [rbp+0x0],ah
  4072d1:	ins    BYTE PTR es:[rdi],dx
  4072d2:	add    BYTE PTR [rsi],ch
  4072d4:	add    BYTE PTR [rsi+0x0],cl
  4072d7:	(bad)  
  4072d8:	add    BYTE PTR [rbp+0x0],ch
  4072db:	add    BYTE PTR gs:[rsi],al
  4072de:	(bad)  
  4072df:	add    BYTE PTR [rax],al
  4072e1:	xor    BYTE PTR [rsi],bh
  4072e3:	add    BYTE PTR [rsi],bh
  4072e5:	add    BYTE PTR [rdx+0x0],dh
  4072e8:	add    BYTE PTR gs:[rax+0x0],dh
  4072ec:	(bad)  
  4072ed:	add    BYTE PTR [rcx+0x0],ch
  4072f0:	jb     0x4072f2
  4072f2:	rex.WR add BYTE PTR [rcx+0x0],r13b
  4072f6:	outs   dx,BYTE PTR ds:[rsi]
  4072f7:	add    BYTE PTR [rbx+0x0],ch
  4072fa:	rex.WR add BYTE PTR [rcx+0x0],r12b
  4072fe:	(bad)  
  4072ff:	add    BYTE PTR [rbp+0x0],ah
  407302:	ins    BYTE PTR es:[rdi],dx
  407303:	add    BYTE PTR [rsi],ch
  407305:	add    BYTE PTR [rax+0x0],dl
  407308:	(bad)  
  407309:	add    BYTE PTR [rdx+0x0],dh
  40730c:	add    BYTE PTR gs:[rsi+0x0],ch
  407310:	je     0x407312
  407312:	(bad)  
  407313:	(bad)  
  407314:	add    BYTE PTR [rax],al
  407316:	sub    al,0x3e
  407318:	add    BYTE PTR [rsi],bh
  40731a:	add    BYTE PTR [rdx+0x0],dh
  40731d:	add    BYTE PTR gs:[rax+0x0],dh
  407321:	(bad)  
  407322:	add    BYTE PTR [rcx+0x0],ch
  407325:	jb     0x407327
  407327:	rex.WR add BYTE PTR [rcx+0x0],r13b
  40732b:	outs   dx,BYTE PTR ds:[rsi]
  40732c:	add    BYTE PTR [rbx+0x0],ch
  40732f:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407333:	(bad)  
  407334:	add    BYTE PTR [rbp+0x0],ah
  407337:	ins    BYTE PTR es:[rdi],dx
  407338:	add    BYTE PTR [rsi],ch
  40733a:	add    BYTE PTR [rax+rax*1+0x79],dl
  40733e:	add    BYTE PTR [rax+0x0],dh
  407341:	add    BYTE PTR gs:[rdx],ch
  407344:	(bad)  
  407345:	add    BYTE PTR [rax],al
  407347:	xor    BYTE PTR [rsi],bh
  407349:	add    BYTE PTR [rsi],bh
  40734b:	add    BYTE PTR [rdx+0x0],dh
  40734e:	add    BYTE PTR gs:[rax+0x0],dh
  407352:	(bad)  
  407353:	add    BYTE PTR [rcx+0x0],ch
  407356:	jb     0x407358
  407358:	rex.WR add BYTE PTR [rcx+0x0],r13b
  40735c:	outs   dx,BYTE PTR ds:[rsi]
  40735d:	add    BYTE PTR [rbx+0x0],ch
  407360:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407364:	(bad)  
  407365:	add    BYTE PTR [rbp+0x0],ah
  407368:	ins    BYTE PTR es:[rdi],dx
  407369:	add    BYTE PTR [rsi],ch
  40736b:	add    BYTE PTR [rdx+0x0],bl
  40736e:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  407372:	add    BYTE PTR fs:[rbp+0x0],ah
  407376:	jb     0x407378
  407378:	movabs ds:0x3e003e2e000007,eax
  407381:	jb     0x407383
  407383:	add    BYTE PTR gs:[rax+0x0],dh
  407387:	(bad)  
  407388:	add    BYTE PTR [rcx+0x0],ch
  40738b:	jb     0x40738d
  40738d:	push   rax
  40738e:	add    BYTE PTR [rcx+0x0],ch
  407391:	movsxd eax,DWORD PTR [rax]
  407393:	je     0x407395
  407395:	jne    0x407397
  407397:	jb     0x407399
  407399:	add    BYTE PTR gs:[rdx+0x0],al
  40739d:	outs   dx,DWORD PTR ds:[rsi]
  40739e:	add    BYTE PTR [rax+0x0],bh
  4073a1:	add    BYTE PTR cs:[rsi+0x0],cl
  4073a5:	(bad)  
  4073a6:	add    BYTE PTR [rbp+0x0],ch
  4073a9:	add    BYTE PTR gs:[rsi+0x32000007],ah
  4073b0:	add    BYTE PTR ds:[rsi],bh
  4073b3:	add    BYTE PTR [rdx+0x0],dh
  4073b6:	add    BYTE PTR gs:[rax+0x0],dh
  4073ba:	(bad)  
  4073bb:	add    BYTE PTR [rcx+0x0],ch
  4073be:	jb     0x4073c0
  4073c0:	push   rax
  4073c1:	add    BYTE PTR [rcx+0x0],ch
  4073c4:	movsxd eax,DWORD PTR [rax]
  4073c6:	je     0x4073c8
  4073c8:	jne    0x4073ca
  4073ca:	jb     0x4073cc
  4073cc:	add    BYTE PTR gs:[rdx+0x0],al
  4073d0:	outs   dx,DWORD PTR ds:[rsi]
  4073d1:	add    BYTE PTR [rax+0x0],bh
  4073d4:	add    BYTE PTR cs:[rax+0x0],dl
  4073d8:	(bad)  
  4073d9:	add    BYTE PTR [rdx+0x0],dh
  4073dc:	add    BYTE PTR gs:[rsi+0x0],ch
  4073e0:	je     0x4073e2
  4073e2:	mov    eax,0x2e000007
  4073e7:	add    BYTE PTR ds:[rsi],bh
  4073ea:	add    BYTE PTR [rdx+0x0],dh
  4073ed:	add    BYTE PTR gs:[rax+0x0],dh
  4073f1:	(bad)  
  4073f2:	add    BYTE PTR [rcx+0x0],ch
  4073f5:	jb     0x4073f7
  4073f7:	push   rax
  4073f8:	add    BYTE PTR [rcx+0x0],ch
  4073fb:	movsxd eax,DWORD PTR [rax]
  4073fd:	je     0x4073ff
  4073ff:	jne    0x407401
  407401:	jb     0x407403
  407403:	add    BYTE PTR gs:[rdx+0x0],al
  407407:	outs   dx,DWORD PTR ds:[rsi]
  407408:	add    BYTE PTR [rax+0x0],bh
  40740b:	add    BYTE PTR cs:[rax+rax*1+0x79],dl
  407410:	add    BYTE PTR [rax+0x0],dh
  407413:	gs add bl,cl
  407416:	(bad)  
  407417:	add    BYTE PTR [rax],al
  407419:	xor    bh,BYTE PTR [rsi]
  40741b:	add    BYTE PTR [rsi],bh
  40741d:	add    BYTE PTR [rdx+0x0],dh
  407420:	add    BYTE PTR gs:[rax+0x0],dh
  407424:	(bad)  
  407425:	add    BYTE PTR [rcx+0x0],ch
  407428:	jb     0x40742a
  40742a:	push   rax
  40742b:	add    BYTE PTR [rcx+0x0],ch
  40742e:	movsxd eax,DWORD PTR [rax]
  407430:	je     0x407432
  407432:	jne    0x407434
  407434:	jb     0x407436
  407436:	add    BYTE PTR gs:[rdx+0x0],al
  40743a:	outs   dx,DWORD PTR ds:[rsi]
  40743b:	add    BYTE PTR [rax+0x0],bh
  40743e:	add    BYTE PTR cs:[rdx+0x0],bl
  407442:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  407446:	add    BYTE PTR fs:[rbp+0x0],ah
  40744a:	jb     0x40744c
  40744c:	or     BYTE PTR [r8],r8b
  40744f:	add    BYTE PTR [rax],dh
  407451:	add    BYTE PTR ds:[rsi],bh
  407454:	add    BYTE PTR [rax+rax*1+0x61],dh
  407458:	add    BYTE PTR [rdx+0x0],ah
  40745b:	ins    BYTE PTR es:[rdi],dx
  40745c:	add    BYTE PTR [rbp+0x0],ah
  40745f:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407463:	jns    0x407465
  407465:	outs   dx,DWORD PTR ds:[rsi]
  407466:	add    BYTE PTR [rbp+0x0],dh
  407469:	je     0x40746b
  40746b:	push   rax
  40746c:	add    BYTE PTR [rcx+0x0],ah
  40746f:	outs   dx,BYTE PTR ds:[rsi]
  407470:	add    BYTE PTR [rbp+0x0],ah
  407473:	ins    BYTE PTR es:[rdi],dx
  407474:	add    BYTE PTR [rcx],dh
  407476:	add    BYTE PTR [rsi],ch
  407478:	add    BYTE PTR [rsi+0x0],cl
  40747b:	(bad)  
  40747c:	add    BYTE PTR [rbp+0x0],ch
  40747f:	add    BYTE PTR gs:[rax+0x8],cl
  407483:	add    BYTE PTR [rax],al
  407485:	xor    al,0x3e
  407487:	add    BYTE PTR [rsi],bh
  407489:	add    BYTE PTR [rax+rax*1+0x61],dh
  40748d:	add    BYTE PTR [rdx+0x0],ah
  407490:	ins    BYTE PTR es:[rdi],dx
  407491:	add    BYTE PTR [rbp+0x0],ah
  407494:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407498:	jns    0x40749a
  40749a:	outs   dx,DWORD PTR ds:[rsi]
  40749b:	add    BYTE PTR [rbp+0x0],dh
  40749e:	je     0x4074a0
  4074a0:	push   rax
  4074a1:	add    BYTE PTR [rcx+0x0],ah
  4074a4:	outs   dx,BYTE PTR ds:[rsi]
  4074a5:	add    BYTE PTR [rbp+0x0],ah
  4074a8:	ins    BYTE PTR es:[rdi],dx
  4074a9:	add    BYTE PTR [rcx],dh
  4074ab:	add    BYTE PTR [rsi],ch
  4074ad:	add    BYTE PTR [rax+0x0],dl
  4074b0:	(bad)  
  4074b1:	add    BYTE PTR [rdx+0x0],dh
  4074b4:	add    BYTE PTR gs:[rsi+0x0],ch
  4074b8:	je     0x4074ba
  4074ba:	pop    rbx
  4074bb:	or     BYTE PTR [rax],al
  4074bd:	add    BYTE PTR [rax],dh
  4074bf:	add    BYTE PTR ds:[rsi],bh
  4074c2:	add    BYTE PTR [rax+rax*1+0x61],dh
  4074c6:	add    BYTE PTR [rdx+0x0],ah
  4074c9:	ins    BYTE PTR es:[rdi],dx
  4074ca:	add    BYTE PTR [rbp+0x0],ah
  4074cd:	rex.WR add BYTE PTR [rcx+0x0],r12b
  4074d1:	jns    0x4074d3
  4074d3:	outs   dx,DWORD PTR ds:[rsi]
  4074d4:	add    BYTE PTR [rbp+0x0],dh
  4074d7:	je     0x4074d9
  4074d9:	push   rax
  4074da:	add    BYTE PTR [rcx+0x0],ah
  4074dd:	outs   dx,BYTE PTR ds:[rsi]
  4074de:	add    BYTE PTR [rbp+0x0],ah
  4074e1:	ins    BYTE PTR es:[rdi],dx
  4074e2:	add    BYTE PTR [rcx],dh
  4074e4:	add    BYTE PTR [rsi],ch
  4074e6:	add    BYTE PTR [rax+rax*1+0x79],dl
  4074ea:	add    BYTE PTR [rax+0x0],dh
  4074ed:	add    BYTE PTR gs:[rdx+0x8],ah
  4074f1:	add    BYTE PTR [rax],al
  4074f3:	xor    al,0x3e
  4074f5:	add    BYTE PTR [rsi],bh
  4074f7:	add    BYTE PTR [rax+rax*1+0x61],dh
  4074fb:	add    BYTE PTR [rdx+0x0],ah
  4074fe:	ins    BYTE PTR es:[rdi],dx
  4074ff:	add    BYTE PTR [rbp+0x0],ah
  407502:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407506:	jns    0x407508
  407508:	outs   dx,DWORD PTR ds:[rsi]
  407509:	add    BYTE PTR [rbp+0x0],dh
  40750c:	je     0x40750e
  40750e:	push   rax
  40750f:	add    BYTE PTR [rcx+0x0],ah
  407512:	outs   dx,BYTE PTR ds:[rsi]
  407513:	add    BYTE PTR [rbp+0x0],ah
  407516:	ins    BYTE PTR es:[rdi],dx
  407517:	add    BYTE PTR [rcx],dh
  407519:	add    BYTE PTR [rsi],ch
  40751b:	add    BYTE PTR [rdx+0x0],bl
  40751e:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  407522:	add    BYTE PTR fs:[rbp+0x0],ah
  407526:	jb     0x407528
  407528:	loop   0x407532
  40752a:	add    BYTE PTR [rax],al
  40752c:	ds (bad) 
  40752e:	add    BYTE PTR [rax+rax*1+0x64],ah
  407532:	add    BYTE PTR [rsi+0x0],al
  407535:	add    BYTE PTR gs:[rcx+0x0],ah
  407539:	je     0x40753b
  40753b:	jne    0x40753d
  40753d:	jb     0x40753f
  40753f:	add    BYTE PTR gs:[rax+rax*1+0x65],al
  407544:	add    BYTE PTR [rbx+0x0],dh
  407547:	movsxd eax,DWORD PTR [rax]
  407549:	imul   eax,DWORD PTR [rax],0x740070
  40754f:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407553:	(bad)  
  407554:	add    BYTE PTR [rbp+0x0],ah
  407557:	ins    BYTE PTR es:[rdi],dx
  407558:	add    BYTE PTR [rsi],ch
  40755a:	add    BYTE PTR [rcx+0x0],al
  40755d:	jne    0x40755f
  40755f:	je     0x407561
  407561:	outs   dx,DWORD PTR ds:[rsi]
  407562:	add    BYTE PTR [rbx+0x0],dl
  407565:	imul   eax,DWORD PTR [rax],0x65007a
  40756b:	in     eax,0x8
  40756d:	add    BYTE PTR [rax],al
  40756f:	ss (bad) 
  407571:	add    BYTE PTR [rax+rax*1+0x64],ah
  407575:	add    BYTE PTR [rsi+0x0],al
  407578:	add    BYTE PTR gs:[rcx+0x0],ah
  40757c:	je     0x40757e
  40757e:	jne    0x407580
  407580:	jb     0x407582
  407582:	add    BYTE PTR gs:[rax+rax*1+0x65],al
  407587:	add    BYTE PTR [rbx+0x0],dh
  40758a:	movsxd eax,DWORD PTR [rax]
  40758c:	imul   eax,DWORD PTR [rax],0x740070
  407592:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407596:	(bad)  
  407597:	add    BYTE PTR [rbp+0x0],ah
  40759a:	ins    BYTE PTR es:[rdi],dx
  40759b:	add    BYTE PTR [rsi],ch
  40759d:	add    BYTE PTR [rax+rax*1+0x6f],al
  4075a1:	add    BYTE PTR [rbx+0x0],ah
  4075a4:	imul   eax,DWORD PTR [rax],0xffffffe7
  4075a7:	or     BYTE PTR [rax],al
  4075a9:	add    BYTE PTR [rcx+riz*2],bh
  4075ac:	add    BYTE PTR [rax+rax*1+0x64],ah
  4075b0:	add    BYTE PTR [rsi+0x0],al
  4075b3:	add    BYTE PTR gs:[rcx+0x0],ah
  4075b7:	je     0x4075b9
  4075b9:	jne    0x4075bb
  4075bb:	jb     0x4075bd
  4075bd:	add    BYTE PTR gs:[rax+rax*1+0x65],al
  4075c2:	add    BYTE PTR [rbx+0x0],dh
  4075c5:	movsxd eax,DWORD PTR [rax]
  4075c7:	imul   eax,DWORD PTR [rax],0x740070
  4075cd:	rex.WR add BYTE PTR [rcx+0x0],r12b
  4075d1:	(bad)  
  4075d2:	add    BYTE PTR [rbp+0x0],ah
  4075d5:	ins    BYTE PTR es:[rdi],dx
  4075d6:	add    BYTE PTR [rsi],ch
  4075d8:	add    BYTE PTR [rcx+0x0],cl
  4075db:	ins    DWORD PTR es:[rdi],dx
  4075dc:	add    BYTE PTR [rbp+0x0],ah
  4075df:	rex.WRB add BYTE PTR [r15+0x0],r13b
  4075e3:	add    BYTE PTR fs:[rbp+0x0],ah
  4075e7:	xchg   ecx,eax
  4075e8:	or     DWORD PTR [rax],eax
  4075ea:	add    BYTE PTR [rsi],bh
  4075ec:	(bad)  
  4075ed:	add    BYTE PTR [rax+rax*1+0x64],ah
  4075f1:	add    BYTE PTR [rsi+0x0],al
  4075f4:	add    BYTE PTR gs:[rcx+0x0],ah
  4075f8:	je     0x4075fa
  4075fa:	jne    0x4075fc
  4075fc:	jb     0x4075fe
  4075fe:	add    BYTE PTR gs:[rax+rax*1+0x65],al
  407603:	add    BYTE PTR [rbx+0x0],dh
  407606:	movsxd eax,DWORD PTR [rax]
  407608:	imul   eax,DWORD PTR [rax],0x740070
  40760e:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407612:	(bad)  
  407613:	add    BYTE PTR [rbp+0x0],ah
  407616:	ins    BYTE PTR es:[rdi],dx
  407617:	add    BYTE PTR [rsi],ch
  407619:	add    BYTE PTR [rax+rax*1+0x6f],cl
  40761d:	add    BYTE PTR [rbx+0x0],ah
  407620:	(bad)  
  407621:	add    BYTE PTR [rax+rax*1+0x69],dh
  407625:	add    BYTE PTR [rdi+0x0],ch
  407628:	outs   dx,BYTE PTR ds:[rsi]
  407629:	add    BYTE PTR [rcx],bh
  40762b:	or     al,BYTE PTR [rax]
  40762d:	add    BYTE PTR [rdx],bh
  40762f:	(bad)  
  407630:	add    BYTE PTR [rax+rax*1+0x64],ah
  407634:	add    BYTE PTR [rsi+0x0],al
  407637:	add    BYTE PTR gs:[rcx+0x0],ah
  40763b:	je     0x40763d
  40763d:	jne    0x40763f
  40763f:	jb     0x407641
  407641:	add    BYTE PTR gs:[rax+rax*1+0x65],al
  407646:	add    BYTE PTR [rbx+0x0],dh
  407649:	movsxd eax,DWORD PTR [rax]
  40764b:	imul   eax,DWORD PTR [rax],0x740070
  407651:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407655:	(bad)  
  407656:	add    BYTE PTR [rbp+0x0],ah
  407659:	ins    BYTE PTR es:[rdi],dx
  40765a:	add    BYTE PTR [rsi],ch
  40765c:	add    BYTE PTR [rbp+0x0],cl
  40765f:	(bad)  
  407660:	add    BYTE PTR [rdx+0x0],dh
  407663:	add    BYTE PTR [ecx+0x0],ch
  407667:	outs   dx,BYTE PTR ds:[rsi]
  407668:	add    ch,dl
  40766a:	or     al,BYTE PTR [rax]
  40766c:	add    BYTE PTR [rsi],dh
  40766e:	(bad)  
  40766f:	add    BYTE PTR [rax+rax*1+0x64],ah
  407673:	add    BYTE PTR [rsi+0x0],al
  407676:	add    BYTE PTR gs:[rcx+0x0],ah
  40767a:	je     0x40767c
  40767c:	jne    0x40767e
  40767e:	jb     0x407680
  407680:	add    BYTE PTR gs:[rax+rax*1+0x65],al
  407685:	add    BYTE PTR [rbx+0x0],dh
  407688:	movsxd eax,DWORD PTR [rax]
  40768a:	imul   eax,DWORD PTR [rax],0x740070
  407690:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407694:	(bad)  
  407695:	add    BYTE PTR [rbp+0x0],ah
  407698:	ins    BYTE PTR es:[rdi],dx
  407699:	add    BYTE PTR [rsi],ch
  40769b:	add    BYTE PTR [rbx+0x0],dl
  40769e:	imul   eax,DWORD PTR [rax],0x65007a
  4076a4:	test   eax,0x3e00000b
  4076a9:	(bad)  
  4076aa:	add    BYTE PTR [rax+rax*1+0x64],ah
  4076ae:	add    BYTE PTR [rsi+0x0],al
  4076b1:	add    BYTE PTR gs:[rcx+0x0],ah
  4076b5:	je     0x4076b7
  4076b7:	jne    0x4076b9
  4076b9:	jb     0x4076bb
  4076bb:	add    BYTE PTR gs:[rax+rax*1+0x65],al
  4076c0:	add    BYTE PTR [rbx+0x0],dh
  4076c3:	movsxd eax,DWORD PTR [rax]
  4076c5:	imul   eax,DWORD PTR [rax],0x740070
  4076cb:	rex.WR add BYTE PTR [rcx+0x0],r12b
  4076cf:	(bad)  
  4076d0:	add    BYTE PTR [rbp+0x0],ah
  4076d3:	ins    BYTE PTR es:[rdi],dx
  4076d4:	add    BYTE PTR [rsi],ch
  4076d6:	add    BYTE PTR [rax+rax*1+0x61],dl
  4076da:	add    BYTE PTR [rdx+0x0],ah
  4076dd:	rex.WB add BYTE PTR [r14+0x0],bpl
  4076e1:	add    BYTE PTR fs:[rbp+0x0],ah
  4076e5:	js     0x4076e7
  4076e7:	rex.WRB or al,0x0
  4076ea:	add    BYTE PTR [rsi],dh
  4076ec:	(bad)  
  4076ed:	add    BYTE PTR [rax+rax*1+0x64],ah
  4076f1:	add    BYTE PTR [rsi+0x0],al
  4076f4:	add    BYTE PTR gs:[rcx+0x0],ah
  4076f8:	je     0x4076fa
  4076fa:	jne    0x4076fc
  4076fc:	jb     0x4076fe
  4076fe:	add    BYTE PTR gs:[rax+rax*1+0x65],al
  407703:	add    BYTE PTR [rbx+0x0],dh
  407706:	movsxd eax,DWORD PTR [rax]
  407708:	imul   eax,DWORD PTR [rax],0x740070
  40770e:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407712:	(bad)  
  407713:	add    BYTE PTR [rbp+0x0],ah
  407716:	ins    BYTE PTR es:[rdi],dx
  407717:	add    BYTE PTR [rsi],ch
  407719:	add    BYTE PTR [rax+rax*1+0x65],dl
  40771d:	add    BYTE PTR [rax+0x0],bh
  407720:	je     0x407722
  407722:	push   rdx
  407723:	or     al,0x0
  407725:	add    BYTE PTR [rax],bh
  407727:	(bad)  
  407728:	add    BYTE PTR [rax+rax*1+0x64],ah
  40772c:	add    BYTE PTR [rsi+0x0],al
  40772f:	add    BYTE PTR gs:[rcx+0x0],ah
  407733:	je     0x407735
  407735:	jne    0x407737
  407737:	jb     0x407739
  407739:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
  40773e:	add    BYTE PTR [rsi+0x0],ch
  407741:	imul   eax,DWORD PTR [rax],0x4c
  407744:	add    BYTE PTR [rcx+0x0],ah
  407747:	(bad)  
  407748:	add    BYTE PTR [rbp+0x0],ah
  40774b:	ins    BYTE PTR es:[rdi],dx
  40774c:	add    BYTE PTR [rsi],ch
  40774e:	add    BYTE PTR [rcx+0x0],al
  407751:	jne    0x407753
  407753:	je     0x407755
  407755:	outs   dx,DWORD PTR ds:[rsi]
  407756:	add    BYTE PTR [rbx+0x0],dl
  407759:	imul   eax,DWORD PTR [rax],0x65007a
  40775f:	ja     0x40776d
  407761:	add    BYTE PTR [rax],al
  407763:	xor    BYTE PTR [rcx+0x0],ah
  407766:	add    BYTE PTR fs:[rax+rax*1+0x46],ah
  40776b:	add    BYTE PTR [rbp+0x0],ah
  40776e:	(bad)  
  40776f:	add    BYTE PTR [rax+rax*1+0x75],dh
  407773:	add    BYTE PTR [rdx+0x0],dh
  407776:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
  40777b:	add    BYTE PTR [rsi+0x0],ch
  40777e:	imul   eax,DWORD PTR [rax],0x4c
  407781:	add    BYTE PTR [rcx+0x0],ah
  407784:	(bad)  
  407785:	add    BYTE PTR [rbp+0x0],ah
  407788:	ins    BYTE PTR es:[rdi],dx
  407789:	add    BYTE PTR [rsi],ch
  40778b:	add    BYTE PTR [rax+rax*1+0x6f],al
  40778f:	add    BYTE PTR [rbx+0x0],ah
  407792:	imul   eax,DWORD PTR [rax],0x79
  407795:	or     al,0x0
  407797:	add    BYTE PTR [rsi],dh
  407799:	(bad)  
  40779a:	add    BYTE PTR [rax+rax*1+0x64],ah
  40779e:	add    BYTE PTR [rsi+0x0],al
  4077a1:	add    BYTE PTR gs:[rcx+0x0],ah
  4077a5:	je     0x4077a7
  4077a7:	jne    0x4077a9
  4077a9:	jb     0x4077ab
  4077ab:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
  4077b0:	add    BYTE PTR [rsi+0x0],ch
  4077b3:	imul   eax,DWORD PTR [rax],0x4c
  4077b6:	add    BYTE PTR [rcx+0x0],ah
  4077b9:	(bad)  
  4077ba:	add    BYTE PTR [rbp+0x0],ah
  4077bd:	ins    BYTE PTR es:[rdi],dx
  4077be:	add    BYTE PTR [rsi],ch
  4077c0:	add    BYTE PTR [rcx+0x0],cl
  4077c3:	ins    DWORD PTR es:[rdi],dx
  4077c4:	add    BYTE PTR [rbp+0x0],ah
  4077c7:	rex.WRB add BYTE PTR [r15+0x0],r13b
  4077cb:	add    BYTE PTR fs:[rbp+0x0],ah
  4077cf:	and    ecx,DWORD PTR [rip+0x61380000]        # 0x617877d5
  4077d5:	add    BYTE PTR [rax+rax*1+0x64],ah
  4077d9:	add    BYTE PTR [rsi+0x0],al
  4077dc:	add    BYTE PTR gs:[rcx+0x0],ah
  4077e0:	je     0x4077e2
  4077e2:	jne    0x4077e4
  4077e4:	jb     0x4077e6
  4077e6:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
  4077eb:	add    BYTE PTR [rsi+0x0],ch
  4077ee:	imul   eax,DWORD PTR [rax],0x4c
  4077f1:	add    BYTE PTR [rcx+0x0],ah
  4077f4:	(bad)  
  4077f5:	add    BYTE PTR [rbp+0x0],ah
  4077f8:	ins    BYTE PTR es:[rdi],dx
  4077f9:	add    BYTE PTR [rsi],ch
  4077fb:	add    BYTE PTR [rax+rax*1+0x6f],cl
  4077ff:	add    BYTE PTR [rbx+0x0],ah
  407802:	(bad)  
  407803:	add    BYTE PTR [rax+rax*1+0x69],dh
  407807:	add    BYTE PTR [rdi+0x0],ch
  40780a:	outs   dx,BYTE PTR ds:[rsi]
  40780b:	add    bl,cl
  40780d:	or     eax,0x61340000
  407812:	add    BYTE PTR [rax+rax*1+0x64],ah
  407816:	add    BYTE PTR [rsi+0x0],al
  407819:	add    BYTE PTR gs:[rcx+0x0],ah
  40781d:	je     0x40781f
  40781f:	jne    0x407821
  407821:	jb     0x407823
  407823:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
  407828:	add    BYTE PTR [rsi+0x0],ch
  40782b:	imul   eax,DWORD PTR [rax],0x4c
  40782e:	add    BYTE PTR [rcx+0x0],ah
  407831:	(bad)  
  407832:	add    BYTE PTR [rbp+0x0],ah
  407835:	ins    BYTE PTR es:[rdi],dx
  407836:	add    BYTE PTR [rsi],ch
  407838:	add    BYTE PTR [rbp+0x0],cl
  40783b:	(bad)  
  40783c:	add    BYTE PTR [rdx+0x0],dh
  40783f:	add    BYTE PTR [ecx+0x0],ch
  407843:	outs   dx,BYTE PTR ds:[rsi]
  407844:	add    BYTE PTR [rdi+0xe],ah
  407847:	add    BYTE PTR [rax],al
  407849:	xor    BYTE PTR [rcx+0x0],ah
  40784c:	add    BYTE PTR fs:[rax+rax*1+0x46],ah
  407851:	add    BYTE PTR [rbp+0x0],ah
  407854:	(bad)  
  407855:	add    BYTE PTR [rax+rax*1+0x75],dh
  407859:	add    BYTE PTR [rdx+0x0],dh
  40785c:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
  407861:	add    BYTE PTR [rsi+0x0],ch
  407864:	imul   eax,DWORD PTR [rax],0x4c
  407867:	add    BYTE PTR [rcx+0x0],ah
  40786a:	(bad)  
  40786b:	add    BYTE PTR [rbp+0x0],ah
  40786e:	ins    BYTE PTR es:[rdi],dx
  40786f:	add    BYTE PTR [rsi],ch
  407871:	add    BYTE PTR [rbx+0x0],dl
  407874:	imul   eax,DWORD PTR [rax],0x65007a
  40787a:	cmp    ecx,DWORD PTR [rdi]
  40787c:	add    BYTE PTR [rax],al
  40787e:	cmp    BYTE PTR [rcx+0x0],ah
  407881:	add    BYTE PTR fs:[rax+rax*1+0x46],ah
  407886:	add    BYTE PTR [rbp+0x0],ah
  407889:	(bad)  
  40788a:	add    BYTE PTR [rax+rax*1+0x75],dh
  40788e:	add    BYTE PTR [rdx+0x0],dh
  407891:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
  407896:	add    BYTE PTR [rsi+0x0],ch
  407899:	imul   eax,DWORD PTR [rax],0x4c
  40789c:	add    BYTE PTR [rcx+0x0],ah
  40789f:	(bad)  
  4078a0:	add    BYTE PTR [rbp+0x0],ah
  4078a3:	ins    BYTE PTR es:[rdi],dx
  4078a4:	add    BYTE PTR [rsi],ch
  4078a6:	add    BYTE PTR [rax+rax*1+0x61],dl
  4078aa:	add    BYTE PTR [rdx+0x0],ah
  4078ad:	rex.WB add BYTE PTR [r14+0x0],bpl
  4078b1:	add    BYTE PTR fs:[rbp+0x0],ah
  4078b5:	js     0x4078b7
  4078b7:	fisttp WORD PTR [rdi]
  4078b9:	add    BYTE PTR [rax],al
  4078bb:	xor    BYTE PTR [rcx+0x0],ah
  4078be:	add    BYTE PTR fs:[rax+rax*1+0x46],ah
  4078c3:	add    BYTE PTR [rbp+0x0],ah
  4078c6:	(bad)  
  4078c7:	add    BYTE PTR [rax+rax*1+0x75],dh
  4078cb:	add    BYTE PTR [rdx+0x0],dh
  4078ce:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
  4078d3:	add    BYTE PTR [rsi+0x0],ch
  4078d6:	imul   eax,DWORD PTR [rax],0x4c
  4078d9:	add    BYTE PTR [rcx+0x0],ah
  4078dc:	(bad)  
  4078dd:	add    BYTE PTR [rbp+0x0],ah
  4078e0:	ins    BYTE PTR es:[rdi],dx
  4078e1:	add    BYTE PTR [rsi],ch
  4078e3:	add    BYTE PTR [rax+rax*1+0x65],dl
  4078e7:	add    BYTE PTR [rax+0x0],bh
  4078ea:	je     0x4078ec
  4078ec:	in     al,0xf
  4078ee:	add    BYTE PTR [rax],al
  4078f0:	cmp    BYTE PTR [rcx+0x0],ah
  4078f3:	add    BYTE PTR fs:[rax+rax*1+0x46],ah
  4078f8:	add    BYTE PTR [rbp+0x0],ah
  4078fb:	(bad)  
  4078fc:	add    BYTE PTR [rax+rax*1+0x75],dh
  407900:	add    BYTE PTR [rdx+0x0],dh
  407903:	add    BYTE PTR gs:[rax+0x0],dl
  407907:	imul   eax,DWORD PTR [rax],0x740063
  40790d:	jne    0x40790f
  40790f:	jb     0x407911
  407911:	add    BYTE PTR gs:[rdx+0x0],al
  407915:	outs   dx,DWORD PTR ds:[rsi]
  407916:	add    BYTE PTR [rax+0x0],bh
  407919:	add    BYTE PTR cs:[rcx+0x0],cl
  40791d:	ins    DWORD PTR es:[rdi],dx
  40791e:	add    BYTE PTR [rbp+0x0],ah
  407921:	rex.WRB add BYTE PTR [r15+0x0],r13b
  407925:	add    BYTE PTR fs:[rbp+0x0],ah
  407929:	jmp    0x3a40793d
  40792e:	(bad)  
  40792f:	add    BYTE PTR [rax+rax*1+0x64],ah
  407933:	add    BYTE PTR [rsi+0x0],al
  407936:	add    BYTE PTR gs:[rcx+0x0],ah
  40793a:	je     0x40793c
  40793c:	jne    0x40793e
  40793e:	jb     0x407940
  407940:	add    BYTE PTR gs:[rax+0x0],dl
  407944:	imul   eax,DWORD PTR [rax],0x740063
  40794a:	jne    0x40794c
  40794c:	jb     0x40794e
  40794e:	add    BYTE PTR gs:[rdx+0x0],al
  407952:	outs   dx,DWORD PTR ds:[rsi]
  407953:	add    BYTE PTR [rax+0x0],bh
  407956:	add    BYTE PTR cs:[rax+rax*1+0x6f],cl
  40795b:	add    BYTE PTR [rbx+0x0],ah
  40795e:	(bad)  
  40795f:	add    BYTE PTR [rax+rax*1+0x69],dh
  407963:	add    BYTE PTR [rdi+0x0],ch
  407966:	outs   dx,BYTE PTR ds:[rsi]
  407967:	add    BYTE PTR [rcx+0x36000010],dl
  40796d:	(bad)  
  40796e:	add    BYTE PTR [rax+rax*1+0x64],ah
  407972:	add    BYTE PTR [rsi+0x0],al
  407975:	add    BYTE PTR gs:[rcx+0x0],ah
  407979:	je     0x40797b
  40797b:	jne    0x40797d
  40797d:	jb     0x40797f
  40797f:	add    BYTE PTR gs:[rax+0x0],dl
  407983:	imul   eax,DWORD PTR [rax],0x740063
  407989:	jne    0x40798b
  40798b:	jb     0x40798d
  40798d:	add    BYTE PTR gs:[rdx+0x0],al
  407991:	outs   dx,DWORD PTR ds:[rsi]
  407992:	add    BYTE PTR [rax+0x0],bh
  407995:	add    BYTE PTR cs:[rbp+0x0],cl
  407999:	(bad)  
  40799a:	add    BYTE PTR [rdx+0x0],dh
  40799d:	add    BYTE PTR [ecx+0x0],ch
  4079a1:	outs   dx,BYTE PTR ds:[rsi]
  4079a2:	add    BYTE PTR [rip+0x32000011],ch        # 0x324079b9
  4079a8:	(bad)  
  4079a9:	add    BYTE PTR [rax+rax*1+0x64],ah
  4079ad:	add    BYTE PTR [rsi+0x0],al
  4079b0:	add    BYTE PTR gs:[rcx+0x0],ah
  4079b4:	je     0x4079b6
  4079b6:	jne    0x4079b8
  4079b8:	jb     0x4079ba
  4079ba:	add    BYTE PTR gs:[rax+0x0],dl
  4079be:	imul   eax,DWORD PTR [rax],0x740063
  4079c4:	jne    0x4079c6
  4079c6:	jb     0x4079c8
  4079c8:	add    BYTE PTR gs:[rdx+0x0],al
  4079cc:	outs   dx,DWORD PTR ds:[rsi]
  4079cd:	add    BYTE PTR [rax+0x0],bh
  4079d0:	add    BYTE PTR cs:[rbx+0x0],dl
  4079d4:	imul   eax,DWORD PTR [rax],0x65007a
  4079da:	add    DWORD PTR [rdx],edx
  4079dc:	add    BYTE PTR [rax],al
  4079de:	cmp    ah,BYTE PTR [rcx+0x0]
  4079e1:	add    BYTE PTR fs:[rax+rax*1+0x46],ah
  4079e6:	add    BYTE PTR [rbp+0x0],ah
  4079e9:	(bad)  
  4079ea:	add    BYTE PTR [rax+rax*1+0x75],dh
  4079ee:	add    BYTE PTR [rdx+0x0],dh
  4079f1:	add    BYTE PTR gs:[rax+0x0],dl
  4079f5:	imul   eax,DWORD PTR [rax],0x740063
  4079fb:	jne    0x4079fd
  4079fd:	jb     0x4079ff
  4079ff:	add    BYTE PTR gs:[rdx+0x0],al
  407a03:	outs   dx,DWORD PTR ds:[rsi]
  407a04:	add    BYTE PTR [rax+0x0],bh
  407a07:	add    BYTE PTR cs:[rax+rax*1+0x61],dl
  407a0c:	add    BYTE PTR [rdx+0x0],ah
  407a0f:	rex.WB add BYTE PTR [r14+0x0],bpl
  407a13:	add    BYTE PTR fs:[rbp+0x0],ah
  407a17:	js     0x407a19
  407a19:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  407a1a:	adc    al,BYTE PTR [rax]
  407a1c:	add    BYTE PTR [rsi],bl
  407a1e:	ins    BYTE PTR es:[rdi],dx
  407a1f:	add    BYTE PTR [rcx+0x0],ah
  407a22:	(bad)  
  407a23:	add    BYTE PTR [rbp+0x0],ah
  407a26:	ins    BYTE PTR es:[rdi],dx
  407a27:	add    BYTE PTR [rcx],dh
  407a29:	add    BYTE PTR [rsi],ch
  407a2b:	add    BYTE PTR [rcx+0x0],al
  407a2e:	jne    0x407a30
  407a30:	je     0x407a32
  407a32:	outs   dx,DWORD PTR ds:[rsi]
  407a33:	add    BYTE PTR [rbx+0x0],dl
  407a36:	imul   eax,DWORD PTR [rax],0x65007a
  407a3c:	stos   BYTE PTR es:[rdi],al
  407a3d:	adc    al,BYTE PTR [rax]
  407a3f:	add    BYTE PTR [rsp+rbp*2],bl
  407a42:	add    BYTE PTR [rcx+0x0],ah
  407a45:	(bad)  
  407a46:	add    BYTE PTR [rbp+0x0],ah
  407a49:	ins    BYTE PTR es:[rdi],dx
  407a4a:	add    BYTE PTR [rcx],dh
  407a4c:	add    BYTE PTR [rsi],ch
  407a4e:	add    BYTE PTR [rcx+0x0],cl
  407a51:	ins    DWORD PTR es:[rdi],dx
  407a52:	add    BYTE PTR [rbp+0x0],ah
  407a55:	rex.WRB add BYTE PTR [r15+0x0],r13b
  407a59:	add    BYTE PTR fs:[rbp+0x0],ah
  407a5d:	lods   al,BYTE PTR ds:[rsi]
  407a5e:	adc    al,BYTE PTR [rax]
  407a60:	add    BYTE PTR [rsi],bl
  407a62:	ins    BYTE PTR es:[rdi],dx
  407a63:	add    BYTE PTR [rcx+0x0],ah
  407a66:	(bad)  
  407a67:	add    BYTE PTR [rbp+0x0],ah
  407a6a:	ins    BYTE PTR es:[rdi],dx
  407a6b:	add    BYTE PTR [rcx],dh
  407a6d:	add    BYTE PTR [rsi],ch
  407a6f:	add    BYTE PTR [rax+rax*1+0x6f],cl
  407a73:	add    BYTE PTR [rbx+0x0],ah
  407a76:	(bad)  
  407a77:	add    BYTE PTR [rax+rax*1+0x69],dh
  407a7b:	add    BYTE PTR [rdi+0x0],ch
  407a7e:	outs   dx,BYTE PTR ds:[rsi]
  407a7f:	add    BYTE PTR [rbx+rdx*1+0x0],dl
  407a83:	add    BYTE PTR [rdx],bl
  407a85:	ins    BYTE PTR es:[rdi],dx
  407a86:	add    BYTE PTR [rcx+0x0],ah
  407a89:	(bad)  
  407a8a:	add    BYTE PTR [rbp+0x0],ah
  407a8d:	ins    BYTE PTR es:[rdi],dx
  407a8e:	add    BYTE PTR [rcx],dh
  407a90:	add    BYTE PTR [rsi],ch
  407a92:	add    BYTE PTR [rbp+0x0],cl
  407a95:	(bad)  
  407a96:	add    BYTE PTR [rdx+0x0],dh
  407a99:	add    BYTE PTR [ecx+0x0],ch
  407a9d:	outs   dx,BYTE PTR ds:[rsi]
  407a9e:	add    al,dh
  407aa0:	adc    eax,DWORD PTR [rax]
  407aa2:	add    BYTE PTR [rsi],dl
  407aa4:	ins    BYTE PTR es:[rdi],dx
  407aa5:	add    BYTE PTR [rcx+0x0],ah
  407aa8:	(bad)  
  407aa9:	add    BYTE PTR [rbp+0x0],ah
  407aac:	ins    BYTE PTR es:[rdi],dx
  407aad:	add    BYTE PTR [rcx],dh
  407aaf:	add    BYTE PTR [rsi],ch
  407ab1:	add    BYTE PTR [rbx+0x0],dl
  407ab4:	imul   eax,DWORD PTR [rax],0x65007a
  407aba:	(bad)  
  407abb:	adc    al,0x0
  407abd:	add    BYTE PTR [rsi],bl
  407abf:	ins    BYTE PTR es:[rdi],dx
  407ac0:	add    BYTE PTR [rcx+0x0],ah
  407ac3:	(bad)  
  407ac4:	add    BYTE PTR [rbp+0x0],ah
  407ac7:	ins    BYTE PTR es:[rdi],dx
  407ac8:	add    BYTE PTR [rcx],dh
  407aca:	add    BYTE PTR [rsi],ch
  407acc:	add    BYTE PTR [rax+rax*1+0x61],dl
  407ad0:	add    BYTE PTR [rdx+0x0],ah
  407ad3:	rex.WB add BYTE PTR [r14+0x0],bpl
  407ad7:	add    BYTE PTR fs:[rbp+0x0],ah
  407adb:	js     0x407add
  407add:	push   0x16000015
  407ae2:	ins    BYTE PTR es:[rdi],dx
  407ae3:	add    BYTE PTR [rcx+0x0],ah
  407ae6:	(bad)  
  407ae7:	add    BYTE PTR [rbp+0x0],ah
  407aea:	ins    BYTE PTR es:[rdi],dx
  407aeb:	add    BYTE PTR [rcx],dh
  407aed:	add    BYTE PTR [rsi],ch
  407aef:	add    BYTE PTR [rax+rax*1+0x65],dl
  407af3:	add    BYTE PTR [rax+0x0],bh
  407af6:	je     0x407af8
  407af8:	ins    DWORD PTR es:[rdi],dx
  407af9:	adc    eax,0x72400000
  407afe:	add    BYTE PTR [rbp+0x0],ah
  407b01:	ins    DWORD PTR es:[rdi],dx
  407b02:	add    BYTE PTR [rdi+0x0],ch
  407b05:	jbe    0x407b07
  407b07:	add    BYTE PTR gs:[rsi+0x0],al
  407b0b:	add    BYTE PTR gs:[rcx+0x0],ah
  407b0f:	je     0x407b11
  407b11:	jne    0x407b13
  407b13:	jb     0x407b15
  407b15:	add    BYTE PTR gs:[rbx+0x0],dh
  407b19:	rex.WR add BYTE PTR [rcx+0x0],r13b
  407b1d:	outs   dx,BYTE PTR ds:[rsi]
  407b1e:	add    BYTE PTR [rbx+0x0],ch
  407b21:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407b25:	(bad)  
  407b26:	add    BYTE PTR [rbp+0x0],ah
  407b29:	ins    BYTE PTR es:[rdi],dx
  407b2a:	add    BYTE PTR [rsi],ch
  407b2c:	add    BYTE PTR [rcx+0x0],al
  407b2f:	jne    0x407b31
  407b31:	je     0x407b33
  407b33:	outs   dx,DWORD PTR ds:[rsi]
  407b34:	add    BYTE PTR [rbx+0x0],dl
  407b37:	imul   eax,DWORD PTR [rax],0x65007a
  407b3d:	cwde   
  407b3e:	adc    eax,0x723e0000
  407b43:	add    BYTE PTR [rbp+0x0],ah
  407b46:	ins    DWORD PTR es:[rdi],dx
  407b47:	add    BYTE PTR [rdi+0x0],ch
  407b4a:	jbe    0x407b4c
  407b4c:	add    BYTE PTR gs:[rsi+0x0],al
  407b50:	add    BYTE PTR gs:[rcx+0x0],ah
  407b54:	je     0x407b56
  407b56:	jne    0x407b58
  407b58:	jb     0x407b5a
  407b5a:	add    BYTE PTR gs:[rbx+0x0],dh
  407b5e:	rex.WR add BYTE PTR [rcx+0x0],r13b
  407b62:	outs   dx,BYTE PTR ds:[rsi]
  407b63:	add    BYTE PTR [rbx+0x0],ch
  407b66:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407b6a:	(bad)  
  407b6b:	add    BYTE PTR [rbp+0x0],ah
  407b6e:	ins    BYTE PTR es:[rdi],dx
  407b6f:	add    BYTE PTR [rsi],ch
  407b71:	add    BYTE PTR [rcx+0x0],cl
  407b74:	ins    DWORD PTR es:[rdi],dx
  407b75:	add    BYTE PTR [rbp+0x0],ah
  407b78:	rex.WRB add BYTE PTR [r15+0x0],r13b
  407b7c:	add    BYTE PTR fs:[rbp+0x0],ah
  407b80:	(bad)  
  407b81:	adc    eax,0x72400000
  407b86:	add    BYTE PTR [rbp+0x0],ah
  407b89:	ins    DWORD PTR es:[rdi],dx
  407b8a:	add    BYTE PTR [rdi+0x0],ch
  407b8d:	jbe    0x407b8f
  407b8f:	add    BYTE PTR gs:[rsi+0x0],al
  407b93:	add    BYTE PTR gs:[rcx+0x0],ah
  407b97:	je     0x407b99
  407b99:	jne    0x407b9b
  407b9b:	jb     0x407b9d
  407b9d:	add    BYTE PTR gs:[rbx+0x0],dh
  407ba1:	rex.WR add BYTE PTR [rcx+0x0],r13b
  407ba5:	outs   dx,BYTE PTR ds:[rsi]
  407ba6:	add    BYTE PTR [rbx+0x0],ch
  407ba9:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407bad:	(bad)  
  407bae:	add    BYTE PTR [rbp+0x0],ah
  407bb1:	ins    BYTE PTR es:[rdi],dx
  407bb2:	add    BYTE PTR [rsi],ch
  407bb4:	add    BYTE PTR [rax+rax*1+0x6f],cl
  407bb8:	add    BYTE PTR [rbx+0x0],ah
  407bbb:	(bad)  
  407bbc:	add    BYTE PTR [rax+rax*1+0x69],dh
  407bc0:	add    BYTE PTR [rdi+0x0],ch
  407bc3:	outs   dx,BYTE PTR ds:[rsi]
  407bc4:	add    BYTE PTR [rdx+0x16],al
  407bc7:	add    BYTE PTR [rax],al
  407bc9:	cmp    al,0x72
  407bcb:	add    BYTE PTR [rbp+0x0],ah
  407bce:	ins    DWORD PTR es:[rdi],dx
  407bcf:	add    BYTE PTR [rdi+0x0],ch
  407bd2:	jbe    0x407bd4
  407bd4:	add    BYTE PTR gs:[rsi+0x0],al
  407bd8:	add    BYTE PTR gs:[rcx+0x0],ah
  407bdc:	je     0x407bde
  407bde:	jne    0x407be0
  407be0:	jb     0x407be2
  407be2:	add    BYTE PTR gs:[rbx+0x0],dh
  407be6:	rex.WR add BYTE PTR [rcx+0x0],r13b
  407bea:	outs   dx,BYTE PTR ds:[rsi]
  407beb:	add    BYTE PTR [rbx+0x0],ch
  407bee:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407bf2:	(bad)  
  407bf3:	add    BYTE PTR [rbp+0x0],ah
  407bf6:	ins    BYTE PTR es:[rdi],dx
  407bf7:	add    BYTE PTR [rsi],ch
  407bf9:	add    BYTE PTR [rbp+0x0],cl
  407bfc:	(bad)  
  407bfd:	add    BYTE PTR [rdx+0x0],dh
  407c00:	add    BYTE PTR [ecx+0x0],ch
  407c04:	outs   dx,BYTE PTR ds:[rsi]
  407c05:	add    dh,bl
  407c07:	(bad)  
  407c08:	add    BYTE PTR [rax],al
  407c0a:	cmp    BYTE PTR [rdx+0x0],dh
  407c0d:	add    BYTE PTR gs:[rbp+0x0],ch
  407c11:	outs   dx,DWORD PTR ds:[rsi]
  407c12:	add    BYTE PTR [rsi+0x0],dh
  407c15:	add    BYTE PTR gs:[rsi+0x0],al
  407c19:	add    BYTE PTR gs:[rcx+0x0],ah
  407c1d:	je     0x407c1f
  407c1f:	jne    0x407c21
  407c21:	jb     0x407c23
  407c23:	add    BYTE PTR gs:[rbx+0x0],dh
  407c27:	rex.WR add BYTE PTR [rcx+0x0],r13b
  407c2b:	outs   dx,BYTE PTR ds:[rsi]
  407c2c:	add    BYTE PTR [rbx+0x0],ch
  407c2f:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407c33:	(bad)  
  407c34:	add    BYTE PTR [rbp+0x0],ah
  407c37:	ins    BYTE PTR es:[rdi],dx
  407c38:	add    BYTE PTR [rsi],ch
  407c3a:	add    BYTE PTR [rbx+0x0],dl
  407c3d:	imul   eax,DWORD PTR [rax],0x65007a
  407c43:	mov    dl,0x17
  407c45:	add    BYTE PTR [rax],al
  407c47:	rex jb 0x407c4a
  407c4a:	add    BYTE PTR gs:[rbp+0x0],ch
  407c4e:	outs   dx,DWORD PTR ds:[rsi]
  407c4f:	add    BYTE PTR [rsi+0x0],dh
  407c52:	add    BYTE PTR gs:[rsi+0x0],al
  407c56:	add    BYTE PTR gs:[rcx+0x0],ah
  407c5a:	je     0x407c5c
  407c5c:	jne    0x407c5e
  407c5e:	jb     0x407c60
  407c60:	add    BYTE PTR gs:[rbx+0x0],dh
  407c64:	rex.WR add BYTE PTR [rcx+0x0],r13b
  407c68:	outs   dx,BYTE PTR ds:[rsi]
  407c69:	add    BYTE PTR [rbx+0x0],ch
  407c6c:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407c70:	(bad)  
  407c71:	add    BYTE PTR [rbp+0x0],ah
  407c74:	ins    BYTE PTR es:[rdi],dx
  407c75:	add    BYTE PTR [rsi],ch
  407c77:	add    BYTE PTR [rax+rax*1+0x61],dl
  407c7b:	add    BYTE PTR [rdx+0x0],ah
  407c7e:	rex.WB add BYTE PTR [r14+0x0],bpl
  407c82:	add    BYTE PTR fs:[rbp+0x0],ah
  407c86:	js     0x407c88
  407c88:	push   rsi
  407c89:	sbb    BYTE PTR [rax],al
  407c8b:	add    BYTE PTR [rax],bh
  407c8d:	jb     0x407c8f
  407c8f:	add    BYTE PTR gs:[rbp+0x0],ch
  407c93:	outs   dx,DWORD PTR ds:[rsi]
  407c94:	add    BYTE PTR [rsi+0x0],dh
  407c97:	add    BYTE PTR gs:[rsi+0x0],al
  407c9b:	add    BYTE PTR gs:[rcx+0x0],ah
  407c9f:	je     0x407ca1
  407ca1:	jne    0x407ca3
  407ca3:	jb     0x407ca5
  407ca5:	add    BYTE PTR gs:[rbx+0x0],dh
  407ca9:	rex.WR add BYTE PTR [rcx+0x0],r13b
  407cad:	outs   dx,BYTE PTR ds:[rsi]
  407cae:	add    BYTE PTR [rbx+0x0],ch
  407cb1:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407cb5:	(bad)  
  407cb6:	add    BYTE PTR [rbp+0x0],ah
  407cb9:	ins    BYTE PTR es:[rdi],dx
  407cba:	add    BYTE PTR [rsi],ch
  407cbc:	add    BYTE PTR [rax+rax*1+0x65],dl
  407cc0:	add    BYTE PTR [rax+0x0],bh
  407cc3:	je     0x407cc5
  407cc5:	pop    rbx
  407cc6:	sbb    BYTE PTR [rax],al
  407cc8:	add    BYTE PTR [rax+0x72],al
  407ccb:	add    BYTE PTR [rbp+0x0],ah
  407cce:	ins    DWORD PTR es:[rdi],dx
  407ccf:	add    BYTE PTR [rdi+0x0],ch
  407cd2:	jbe    0x407cd4
  407cd4:	add    BYTE PTR gs:[rsi+0x0],al
  407cd8:	add    BYTE PTR gs:[rcx+0x0],ah
  407cdc:	je     0x407cde
  407cde:	jne    0x407ce0
  407ce0:	jb     0x407ce2
  407ce2:	add    BYTE PTR gs:[rbx+0x0],dh
  407ce6:	push   rax
  407ce7:	add    BYTE PTR [rcx+0x0],ch
  407cea:	movsxd eax,DWORD PTR [rax]
  407cec:	je     0x407cee
  407cee:	jne    0x407cf0
  407cf0:	jb     0x407cf2
  407cf2:	add    BYTE PTR gs:[rdx+0x0],al
  407cf6:	outs   dx,DWORD PTR ds:[rsi]
  407cf7:	add    BYTE PTR [rax+0x0],bh
  407cfa:	add    BYTE PTR cs:[rcx+0x0],cl
  407cfe:	ins    DWORD PTR es:[rdi],dx
  407cff:	add    BYTE PTR [rbp+0x0],ah
  407d02:	rex.WRB add BYTE PTR [r15+0x0],r13b
  407d06:	add    BYTE PTR fs:[rbp+0x0],ah
  407d0a:	movsxd ebx,DWORD PTR [rax]
  407d0c:	add    BYTE PTR [rax],al
  407d0e:	rex.X jb 0x407d11
  407d11:	add    BYTE PTR gs:[rbp+0x0],ch
  407d15:	outs   dx,DWORD PTR ds:[rsi]
  407d16:	add    BYTE PTR [rsi+0x0],dh
  407d19:	add    BYTE PTR gs:[rsi+0x0],al
  407d1d:	add    BYTE PTR gs:[rcx+0x0],ah
  407d21:	je     0x407d23
  407d23:	jne    0x407d25
  407d25:	jb     0x407d27
  407d27:	add    BYTE PTR gs:[rbx+0x0],dh
  407d2b:	push   rax
  407d2c:	add    BYTE PTR [rcx+0x0],ch
  407d2f:	movsxd eax,DWORD PTR [rax]
  407d31:	je     0x407d33
  407d33:	jne    0x407d35
  407d35:	jb     0x407d37
  407d37:	add    BYTE PTR gs:[rdx+0x0],al
  407d3b:	outs   dx,DWORD PTR ds:[rsi]
  407d3c:	add    BYTE PTR [rax+0x0],bh
  407d3f:	add    BYTE PTR cs:[rax+rax*1+0x6f],cl
  407d44:	add    BYTE PTR [rbx+0x0],ah
  407d47:	(bad)  
  407d48:	add    BYTE PTR [rax+rax*1+0x69],dh
  407d4c:	add    BYTE PTR [rdi+0x0],ch
  407d4f:	outs   dx,BYTE PTR ds:[rsi]
  407d50:	add    BYTE PTR [rbx],cl
  407d52:	sbb    DWORD PTR [rax],eax
  407d54:	add    BYTE PTR [rsi],bh
  407d56:	jb     0x407d58
  407d58:	add    BYTE PTR gs:[rbp+0x0],ch
  407d5c:	outs   dx,DWORD PTR ds:[rsi]
  407d5d:	add    BYTE PTR [rsi+0x0],dh
  407d60:	add    BYTE PTR gs:[rsi+0x0],al
  407d64:	add    BYTE PTR gs:[rcx+0x0],ah
  407d68:	je     0x407d6a
  407d6a:	jne    0x407d6c
  407d6c:	jb     0x407d6e
  407d6e:	add    BYTE PTR gs:[rbx+0x0],dh
  407d72:	push   rax
  407d73:	add    BYTE PTR [rcx+0x0],ch
  407d76:	movsxd eax,DWORD PTR [rax]
  407d78:	je     0x407d7a
  407d7a:	jne    0x407d7c
  407d7c:	jb     0x407d7e
  407d7e:	add    BYTE PTR gs:[rdx+0x0],al
  407d82:	outs   dx,DWORD PTR ds:[rsi]
  407d83:	add    BYTE PTR [rax+0x0],bh
  407d86:	add    BYTE PTR cs:[rbp+0x0],cl
  407d8a:	(bad)  
  407d8b:	add    BYTE PTR [rdx+0x0],dh
  407d8e:	add    BYTE PTR [ecx+0x0],ch
  407d92:	outs   dx,BYTE PTR ds:[rsi]
  407d93:	add    BYTE PTR [rdi+0x3a000019],ah
  407d99:	jb     0x407d9b
  407d9b:	add    BYTE PTR gs:[rbp+0x0],ch
  407d9f:	outs   dx,DWORD PTR ds:[rsi]
  407da0:	add    BYTE PTR [rsi+0x0],dh
  407da3:	add    BYTE PTR gs:[rsi+0x0],al
  407da7:	add    BYTE PTR gs:[rcx+0x0],ah
  407dab:	je     0x407dad
  407dad:	jne    0x407daf
  407daf:	jb     0x407db1
  407db1:	add    BYTE PTR gs:[rbx+0x0],dh
  407db5:	push   rax
  407db6:	add    BYTE PTR [rcx+0x0],ch
  407db9:	movsxd eax,DWORD PTR [rax]
  407dbb:	je     0x407dbd
  407dbd:	jne    0x407dbf
  407dbf:	jb     0x407dc1
  407dc1:	add    BYTE PTR gs:[rdx+0x0],al
  407dc5:	outs   dx,DWORD PTR ds:[rsi]
  407dc6:	add    BYTE PTR [rax+0x0],bh
  407dc9:	add    BYTE PTR cs:[rbx+0x0],dl
  407dcd:	imul   eax,DWORD PTR [rax],0x65007a
  407dd3:	jnp    0x407def
  407dd5:	add    BYTE PTR [rax],al
  407dd7:	rex.X jb 0x407dda
  407dda:	add    BYTE PTR gs:[rbp+0x0],ch
  407dde:	outs   dx,DWORD PTR ds:[rsi]
  407ddf:	add    BYTE PTR [rsi+0x0],dh
  407de2:	add    BYTE PTR gs:[rsi+0x0],al
  407de6:	add    BYTE PTR gs:[rcx+0x0],ah
  407dea:	je     0x407dec
  407dec:	jne    0x407dee
  407dee:	jb     0x407df0
  407df0:	add    BYTE PTR gs:[rbx+0x0],dh
  407df4:	push   rax
  407df5:	add    BYTE PTR [rcx+0x0],ch
  407df8:	movsxd eax,DWORD PTR [rax]
  407dfa:	je     0x407dfc
  407dfc:	jne    0x407dfe
  407dfe:	jb     0x407e00
  407e00:	add    BYTE PTR gs:[rdx+0x0],al
  407e04:	outs   dx,DWORD PTR ds:[rsi]
  407e05:	add    BYTE PTR [rax+0x0],bh
  407e08:	add    BYTE PTR cs:[rax+rax*1+0x61],dl
  407e0d:	add    BYTE PTR [rdx+0x0],ah
  407e10:	rex.WB add BYTE PTR [r14+0x0],bpl
  407e14:	add    BYTE PTR fs:[rbp+0x0],ah
  407e18:	js     0x407e1a
  407e1a:	(bad)  
  407e1b:	sbb    eax,DWORD PTR [rax]
  407e1d:	add    BYTE PTR [rax],bh
  407e1f:	jb     0x407e21
  407e21:	add    BYTE PTR gs:[rax+0x0],dh
  407e25:	(bad)  
  407e26:	add    BYTE PTR [rcx+0x0],ch
  407e29:	jb     0x407e2b
  407e2b:	add    BYTE PTR [rbp+0x0],r12b
  407e2f:	jae    0x407e31
  407e31:	movsxd eax,DWORD PTR [rax]
  407e33:	jb     0x407e35
  407e35:	imul   eax,DWORD PTR [rax],0x740070
  407e3b:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407e3f:	(bad)  
  407e40:	add    BYTE PTR [rbp+0x0],ah
  407e43:	ins    BYTE PTR es:[rdi],dx
  407e44:	add    BYTE PTR [rsi],ch
  407e46:	add    BYTE PTR [rcx+0x0],al
  407e49:	jne    0x407e4b
  407e4b:	je     0x407e4d
  407e4d:	outs   dx,DWORD PTR ds:[rsi]
  407e4e:	add    BYTE PTR [rbx+0x0],dl
  407e51:	imul   eax,DWORD PTR [rax],0x65007a
  407e57:	and    al,0x1b
  407e59:	add    BYTE PTR [rax],al
  407e5b:	xor    BYTE PTR [rdx+0x0],dh
  407e5e:	add    BYTE PTR gs:[rax+0x0],dh
  407e62:	(bad)  
  407e63:	add    BYTE PTR [rcx+0x0],ch
  407e66:	jb     0x407e68
  407e68:	add    BYTE PTR [rbp+0x0],r12b
  407e6c:	jae    0x407e6e
  407e6e:	movsxd eax,DWORD PTR [rax]
  407e70:	jb     0x407e72
  407e72:	imul   eax,DWORD PTR [rax],0x740070
  407e78:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407e7c:	(bad)  
  407e7d:	add    BYTE PTR [rbp+0x0],ah
  407e80:	ins    BYTE PTR es:[rdi],dx
  407e81:	add    BYTE PTR [rsi],ch
  407e83:	add    BYTE PTR [rax+rax*1+0x6f],al
  407e87:	add    BYTE PTR [rbx+0x0],ah
  407e8a:	imul   eax,DWORD PTR [rax],0x26
  407e8d:	sbb    eax,DWORD PTR [rax]
  407e8f:	add    BYTE PTR [rsi],dh
  407e91:	jb     0x407e93
  407e93:	add    BYTE PTR gs:[rax+0x0],dh
  407e97:	(bad)  
  407e98:	add    BYTE PTR [rcx+0x0],ch
  407e9b:	jb     0x407e9d
  407e9d:	add    BYTE PTR [rbp+0x0],r12b
  407ea1:	jae    0x407ea3
  407ea3:	movsxd eax,DWORD PTR [rax]
  407ea5:	jb     0x407ea7
  407ea7:	imul   eax,DWORD PTR [rax],0x740070
  407ead:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407eb1:	(bad)  
  407eb2:	add    BYTE PTR [rbp+0x0],ah
  407eb5:	ins    BYTE PTR es:[rdi],dx
  407eb6:	add    BYTE PTR [rsi],ch
  407eb8:	add    BYTE PTR [rcx+0x0],cl
  407ebb:	ins    DWORD PTR es:[rdi],dx
  407ebc:	add    BYTE PTR [rbp+0x0],ah
  407ebf:	rex.WRB add BYTE PTR [r15+0x0],r13b
  407ec3:	add    BYTE PTR fs:[rbp+0x0],ah
  407ec7:	rcr    BYTE PTR [rbx],1
  407ec9:	add    BYTE PTR [rax],al
  407ecb:	cmp    BYTE PTR [rdx+0x0],dh
  407ece:	add    BYTE PTR gs:[rax+0x0],dh
  407ed2:	(bad)  
  407ed3:	add    BYTE PTR [rcx+0x0],ch
  407ed6:	jb     0x407ed8
  407ed8:	add    BYTE PTR [rbp+0x0],r12b
  407edc:	jae    0x407ede
  407ede:	movsxd eax,DWORD PTR [rax]
  407ee0:	jb     0x407ee2
  407ee2:	imul   eax,DWORD PTR [rax],0x740070
  407ee8:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407eec:	(bad)  
  407eed:	add    BYTE PTR [rbp+0x0],ah
  407ef0:	ins    BYTE PTR es:[rdi],dx
  407ef1:	add    BYTE PTR [rsi],ch
  407ef3:	add    BYTE PTR [rax+rax*1+0x6f],cl
  407ef7:	add    BYTE PTR [rbx+0x0],ah
  407efa:	(bad)  
  407efb:	add    BYTE PTR [rax+rax*1+0x69],dh
  407eff:	add    BYTE PTR [rdi+0x0],ch
  407f02:	outs   dx,BYTE PTR ds:[rsi]
  407f03:	add    BYTE PTR [rax+0x1c],bh
  407f06:	add    BYTE PTR [rax],al
  407f08:	xor    al,0x72
  407f0a:	add    BYTE PTR [rbp+0x0],ah
  407f0d:	jo     0x407f0f
  407f0f:	(bad)  
  407f10:	add    BYTE PTR [rcx+0x0],ch
  407f13:	jb     0x407f15
  407f15:	add    BYTE PTR [rbp+0x0],r12b
  407f19:	jae    0x407f1b
  407f1b:	movsxd eax,DWORD PTR [rax]
  407f1d:	jb     0x407f1f
  407f1f:	imul   eax,DWORD PTR [rax],0x740070
  407f25:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407f29:	(bad)  
  407f2a:	add    BYTE PTR [rbp+0x0],ah
  407f2d:	ins    BYTE PTR es:[rdi],dx
  407f2e:	add    BYTE PTR [rsi],ch
  407f30:	add    BYTE PTR [rbp+0x0],cl
  407f33:	(bad)  
  407f34:	add    BYTE PTR [rdx+0x0],dh
  407f37:	add    BYTE PTR [ecx+0x0],ch
  407f3b:	outs   dx,BYTE PTR ds:[rsi]
  407f3c:	add    BYTE PTR [rbx*1+0x72300000],dl
  407f43:	add    BYTE PTR [rbp+0x0],ah
  407f46:	jo     0x407f48
  407f48:	(bad)  
  407f49:	add    BYTE PTR [rcx+0x0],ch
  407f4c:	jb     0x407f4e
  407f4e:	add    BYTE PTR [rbp+0x0],r12b
  407f52:	jae    0x407f54
  407f54:	movsxd eax,DWORD PTR [rax]
  407f56:	jb     0x407f58
  407f58:	imul   eax,DWORD PTR [rax],0x740070
  407f5e:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407f62:	(bad)  
  407f63:	add    BYTE PTR [rbp+0x0],ah
  407f66:	ins    BYTE PTR es:[rdi],dx
  407f67:	add    BYTE PTR [rsi],ch
  407f69:	add    BYTE PTR [rbx+0x0],dl
  407f6c:	imul   eax,DWORD PTR [rax],0x65007a
  407f72:	call   0x38407f94
  407f77:	jb     0x407f79
  407f79:	add    BYTE PTR gs:[rax+0x0],dh
  407f7d:	(bad)  
  407f7e:	add    BYTE PTR [rcx+0x0],ch
  407f81:	jb     0x407f83
  407f83:	add    BYTE PTR [rbp+0x0],r12b
  407f87:	jae    0x407f89
  407f89:	movsxd eax,DWORD PTR [rax]
  407f8b:	jb     0x407f8d
  407f8d:	imul   eax,DWORD PTR [rax],0x740070
  407f93:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407f97:	(bad)  
  407f98:	add    BYTE PTR [rbp+0x0],ah
  407f9b:	ins    BYTE PTR es:[rdi],dx
  407f9c:	add    BYTE PTR [rsi],ch
  407f9e:	add    BYTE PTR [rax+rax*1+0x61],dl
  407fa2:	add    BYTE PTR [rdx+0x0],ah
  407fa5:	rex.WB add BYTE PTR [r14+0x0],bpl
  407fa9:	add    BYTE PTR fs:[rbp+0x0],ah
  407fad:	js     0x407faf
  407faf:	mov    WORD PTR [rsi],ds
  407fb1:	add    BYTE PTR [rax],al
  407fb3:	xor    BYTE PTR [rdx+0x0],dh
  407fb6:	add    BYTE PTR gs:[rax+0x0],dh
  407fba:	(bad)  
  407fbb:	add    BYTE PTR [rcx+0x0],ch
  407fbe:	jb     0x407fc0
  407fc0:	add    BYTE PTR [rbp+0x0],r12b
  407fc4:	jae    0x407fc6
  407fc6:	movsxd eax,DWORD PTR [rax]
  407fc8:	jb     0x407fca
  407fca:	imul   eax,DWORD PTR [rax],0x740070
  407fd0:	rex.WR add BYTE PTR [rcx+0x0],r12b
  407fd4:	(bad)  
  407fd5:	add    BYTE PTR [rbp+0x0],ah
  407fd8:	ins    BYTE PTR es:[rdi],dx
  407fd9:	add    BYTE PTR [rsi],ch
  407fdb:	add    BYTE PTR [rax+rax*1+0x65],dl
  407fdf:	add    BYTE PTR [rax+0x0],bh
  407fe2:	je     0x407fe4
  407fe4:	xchg   ecx,eax
  407fe5:	(bad)  
  407fe6:	add    BYTE PTR [rax],al
  407fe8:	xor    BYTE PTR [rdx+0x0],dh
  407feb:	add    BYTE PTR gs:[rax+0x0],dh
  407fef:	(bad)  
  407ff0:	add    BYTE PTR [rcx+0x0],ch
  407ff3:	jb     0x407ff5
  407ff5:	rex.WR add BYTE PTR [rcx+0x0],r13b
  407ff9:	outs   dx,BYTE PTR ds:[rsi]
  407ffa:	add    BYTE PTR [rbx+0x0],ch
  407ffd:	rex.WR add BYTE PTR [rcx+0x0],r12b
  408001:	(bad)  
  408002:	add    BYTE PTR [rbp+0x0],ah
  408005:	ins    BYTE PTR es:[rdi],dx
  408006:	add    BYTE PTR [rsi],ch
  408008:	add    BYTE PTR [rcx+0x0],al
  40800b:	jne    0x40800d
  40800d:	je     0x40800f
  40800f:	outs   dx,DWORD PTR ds:[rsi]
  408010:	add    BYTE PTR [rbx+0x0],dl
  408013:	imul   eax,DWORD PTR [rax],0x65007a
  408019:	mov    esp,0x2800001e
  40801e:	jb     0x408020
  408020:	add    BYTE PTR gs:[rax+0x0],dh
  408024:	(bad)  
  408025:	add    BYTE PTR [rcx+0x0],ch
  408028:	jb     0x40802a
  40802a:	rex.WR add BYTE PTR [rcx+0x0],r13b
  40802e:	outs   dx,BYTE PTR ds:[rsi]
  40802f:	add    BYTE PTR [rbx+0x0],ch
  408032:	rex.WR add BYTE PTR [rcx+0x0],r12b
  408036:	(bad)  
  408037:	add    BYTE PTR [rbp+0x0],ah
  40803a:	ins    BYTE PTR es:[rdi],dx
  40803b:	add    BYTE PTR [rsi],ch
  40803d:	add    BYTE PTR [rax+rax*1+0x6f],al
  408041:	add    BYTE PTR [rbx+0x0],ah
  408044:	imul   eax,DWORD PTR [rax],0xffffffbe
  408047:	(bad)  
  408048:	add    BYTE PTR [rax],al
  40804a:	cs jb  0x40804d
  40804d:	add    BYTE PTR gs:[rax+0x0],dh
  408051:	(bad)  
  408052:	add    BYTE PTR [rcx+0x0],ch
  408055:	jb     0x408057
  408057:	rex.WR add BYTE PTR [rcx+0x0],r13b
  40805b:	outs   dx,BYTE PTR ds:[rsi]
  40805c:	add    BYTE PTR [rbx+0x0],ch
  40805f:	rex.WR add BYTE PTR [rcx+0x0],r12b
  408063:	(bad)  
  408064:	add    BYTE PTR [rbp+0x0],ah
  408067:	ins    BYTE PTR es:[rdi],dx
  408068:	add    BYTE PTR [rsi],ch
  40806a:	add    BYTE PTR [rcx+0x0],cl
  40806d:	ins    DWORD PTR es:[rdi],dx
  40806e:	add    BYTE PTR [rbp+0x0],ah
  408071:	rex.WRB add BYTE PTR [r15+0x0],r13b
  408075:	add    BYTE PTR fs:[rbp+0x0],ah
  408079:	push   0x3000001f
  40807e:	jb     0x408080
  408080:	add    BYTE PTR gs:[rax+0x0],dh
  408084:	(bad)  
  408085:	add    BYTE PTR [rcx+0x0],ch
  408088:	jb     0x40808a
  40808a:	rex.WR add BYTE PTR [rcx+0x0],r13b
  40808e:	outs   dx,BYTE PTR ds:[rsi]
  40808f:	add    BYTE PTR [rbx+0x0],ch
  408092:	rex.WR add BYTE PTR [rcx+0x0],r12b
  408096:	(bad)  
  408097:	add    BYTE PTR [rbp+0x0],ah
  40809a:	ins    BYTE PTR es:[rdi],dx
  40809b:	add    BYTE PTR [rsi],ch
  40809d:	add    BYTE PTR [rax+rax*1+0x6f],cl
  4080a1:	add    BYTE PTR [rbx+0x0],ah
  4080a4:	(bad)  
  4080a5:	add    BYTE PTR [rax+rax*1+0x69],dh
  4080a9:	add    BYTE PTR [rdi+0x0],ch
  4080ac:	outs   dx,BYTE PTR ds:[rsi]
  4080ad:	add    BYTE PTR [rax],dl
  4080af:	and    BYTE PTR [rax],al
  4080b1:	add    BYTE PTR [rdx+rsi*2],ch
  4080b4:	add    BYTE PTR [rbp+0x0],ah
  4080b7:	jo     0x4080b9
  4080b9:	(bad)  
  4080ba:	add    BYTE PTR [rcx+0x0],ch
  4080bd:	jb     0x4080bf
  4080bf:	rex.WR add BYTE PTR [rcx+0x0],r13b
  4080c3:	outs   dx,BYTE PTR ds:[rsi]
  4080c4:	add    BYTE PTR [rbx+0x0],ch
  4080c7:	rex.WR add BYTE PTR [rcx+0x0],r12b
  4080cb:	(bad)  
  4080cc:	add    BYTE PTR [rbp+0x0],ah
  4080cf:	ins    BYTE PTR es:[rdi],dx
  4080d0:	add    BYTE PTR [rsi],ch
  4080d2:	add    BYTE PTR [rbp+0x0],cl
  4080d5:	(bad)  
  4080d6:	add    BYTE PTR [rdx+0x0],dh
  4080d9:	add    BYTE PTR [ecx+0x0],ch
  4080dd:	outs   dx,BYTE PTR ds:[rsi]
  4080de:	add    BYTE PTR [rax+riz*1+0x72280000],ch
  4080e5:	add    BYTE PTR [rbp+0x0],ah
  4080e8:	jo     0x4080ea
  4080ea:	(bad)  
  4080eb:	add    BYTE PTR [rcx+0x0],ch
  4080ee:	jb     0x4080f0
  4080f0:	rex.WR add BYTE PTR [rcx+0x0],r13b
  4080f4:	outs   dx,BYTE PTR ds:[rsi]
  4080f5:	add    BYTE PTR [rbx+0x0],ch
  4080f8:	rex.WR add BYTE PTR [rcx+0x0],r12b
  4080fc:	(bad)  
  4080fd:	add    BYTE PTR [rbp+0x0],ah
  408100:	ins    BYTE PTR es:[rdi],dx
  408101:	add    BYTE PTR [rsi],ch
  408103:	add    BYTE PTR [rbx+0x0],dl
  408106:	imul   eax,DWORD PTR [rax],0x65007a
  40810c:	and    BYTE PTR [rcx],0x0
  40810f:	add    BYTE PTR [rax],dh
  408111:	jb     0x408113
  408113:	add    BYTE PTR gs:[rax+0x0],dh
  408117:	(bad)  
  408118:	add    BYTE PTR [rcx+0x0],ch
  40811b:	jb     0x40811d
  40811d:	rex.WR add BYTE PTR [rcx+0x0],r13b
  408121:	outs   dx,BYTE PTR ds:[rsi]
  408122:	add    BYTE PTR [rbx+0x0],ch
  408125:	rex.WR add BYTE PTR [rcx+0x0],r12b
  408129:	(bad)  
  40812a:	add    BYTE PTR [rbp+0x0],ah
  40812d:	ins    BYTE PTR es:[rdi],dx
  40812e:	add    BYTE PTR [rsi],ch
  408130:	add    BYTE PTR [rax+rax*1+0x61],dl
  408134:	add    BYTE PTR [rdx+0x0],ah
  408137:	rex.WB add BYTE PTR [r14+0x0],bpl
  40813b:	add    BYTE PTR fs:[rbp+0x0],ah
  40813f:	js     0x408141
  408141:	and    al,0x22
  408143:	add    BYTE PTR [rax],al
  408145:	sub    BYTE PTR [rdx+0x0],dh
  408148:	add    BYTE PTR gs:[rax+0x0],dh
  40814c:	(bad)  
  40814d:	add    BYTE PTR [rcx+0x0],ch
  408150:	jb     0x408152
  408152:	rex.WR add BYTE PTR [rcx+0x0],r13b
  408156:	outs   dx,BYTE PTR ds:[rsi]
  408157:	add    BYTE PTR [rbx+0x0],ch
  40815a:	rex.WR add BYTE PTR [rcx+0x0],r12b
  40815e:	(bad)  
  40815f:	add    BYTE PTR [rbp+0x0],ah
  408162:	ins    BYTE PTR es:[rdi],dx
  408163:	add    BYTE PTR [rsi],ch
  408165:	add    BYTE PTR [rax+rax*1+0x65],dl
  408169:	add    BYTE PTR [rax+0x0],bh
  40816c:	je     0x40816e
  40816e:	sub    DWORD PTR [rdx],esp
  408170:	add    BYTE PTR [rax],al
  408172:	xor    BYTE PTR [rdx+0x0],dh
  408175:	add    BYTE PTR gs:[rax+0x0],dh
  408179:	(bad)  
  40817a:	add    BYTE PTR [rcx+0x0],ch
  40817d:	jb     0x40817f
  40817f:	push   rax
  408180:	add    BYTE PTR [rcx+0x0],ch
  408183:	movsxd eax,DWORD PTR [rax]
  408185:	je     0x408187
  408187:	jne    0x408189
  408189:	jb     0x40818b
  40818b:	add    BYTE PTR gs:[rdx+0x0],al
  40818f:	outs   dx,DWORD PTR ds:[rsi]
  408190:	add    BYTE PTR [rax+0x0],bh
  408193:	add    BYTE PTR cs:[rcx+0x0],cl
  408197:	ins    DWORD PTR es:[rdi],dx
  408198:	add    BYTE PTR [rbp+0x0],ah
  40819b:	rex.WRB add BYTE PTR [r15+0x0],r13b
  40819f:	add    BYTE PTR fs:[rbp+0x0],ah
  4081a3:	xor    DWORD PTR [rdx],esp
  4081a5:	add    BYTE PTR [rax],al
  4081a7:	xor    dh,BYTE PTR [rdx+0x0]
  4081aa:	add    BYTE PTR gs:[rax+0x0],dh
  4081ae:	(bad)  
  4081af:	add    BYTE PTR [rcx+0x0],ch
  4081b2:	jb     0x4081b4
  4081b4:	push   rax
  4081b5:	add    BYTE PTR [rcx+0x0],ch
  4081b8:	movsxd eax,DWORD PTR [rax]
  4081ba:	je     0x4081bc
  4081bc:	jne    0x4081be
  4081be:	jb     0x4081c0
  4081c0:	add    BYTE PTR gs:[rdx+0x0],al
  4081c4:	outs   dx,DWORD PTR ds:[rsi]
  4081c5:	add    BYTE PTR [rax+0x0],bh
  4081c8:	add    BYTE PTR cs:[rax+rax*1+0x6f],cl
  4081cd:	add    BYTE PTR [rbx+0x0],ah
  4081d0:	(bad)  
  4081d1:	add    BYTE PTR [rax+rax*1+0x69],dh
  4081d5:	add    BYTE PTR [rdi+0x0],ch
  4081d8:	outs   dx,BYTE PTR ds:[rsi]
  4081d9:	add    cl,bl
  4081db:	and    al,BYTE PTR [rax]
  4081dd:	add    BYTE PTR [rsi],ch
  4081df:	jb     0x4081e1
  4081e1:	add    BYTE PTR gs:[rax+0x0],dh
  4081e5:	(bad)  
  4081e6:	add    BYTE PTR [rcx+0x0],ch
  4081e9:	jb     0x4081eb
  4081eb:	push   rax
  4081ec:	add    BYTE PTR [rcx+0x0],ch
  4081ef:	movsxd eax,DWORD PTR [rax]
  4081f1:	je     0x4081f3
  4081f3:	jne    0x4081f5
  4081f5:	jb     0x4081f7
  4081f7:	add    BYTE PTR gs:[rdx+0x0],al
  4081fb:	outs   dx,DWORD PTR ds:[rsi]
  4081fc:	add    BYTE PTR [rax+0x0],bh
  4081ff:	add    BYTE PTR cs:[rbp+0x0],cl
  408203:	(bad)  
  408204:	add    BYTE PTR [rdx+0x0],dh
  408207:	add    BYTE PTR [ecx+0x0],ch
  40820b:	outs   dx,BYTE PTR ds:[rsi]
  40820c:	add    BYTE PTR [rbp+0x23],dh
  40820f:	add    BYTE PTR [rax],al
  408211:	sub    dh,BYTE PTR [rdx+0x0]
  408214:	add    BYTE PTR gs:[rax+0x0],dh
  408218:	(bad)  
  408219:	add    BYTE PTR [rcx+0x0],ch
  40821c:	jb     0x40821e
  40821e:	push   rax
  40821f:	add    BYTE PTR [rcx+0x0],ch
  408222:	movsxd eax,DWORD PTR [rax]
  408224:	je     0x408226
  408226:	jne    0x408228
  408228:	jb     0x40822a
  40822a:	add    BYTE PTR gs:[rdx+0x0],al
  40822e:	outs   dx,DWORD PTR ds:[rsi]
  40822f:	add    BYTE PTR [rax+0x0],bh
  408232:	add    BYTE PTR cs:[rbx+0x0],dl
  408236:	imul   eax,DWORD PTR [rax],0x65007a
  40823c:	rex.WB and al,0x0
  40823f:	add    BYTE PTR [rdx],dh
  408241:	jb     0x408243
  408243:	add    BYTE PTR gs:[rax+0x0],dh
  408247:	(bad)  
  408248:	add    BYTE PTR [rcx+0x0],ch
  40824b:	jb     0x40824d
  40824d:	push   rax
  40824e:	add    BYTE PTR [rcx+0x0],ch
  408251:	movsxd eax,DWORD PTR [rax]
  408253:	je     0x408255
  408255:	jne    0x408257
  408257:	jb     0x408259
  408259:	add    BYTE PTR gs:[rdx+0x0],al
  40825d:	outs   dx,DWORD PTR ds:[rsi]
  40825e:	add    BYTE PTR [rax+0x0],bh
  408261:	add    BYTE PTR cs:[rax+rax*1+0x61],dl
  408266:	add    BYTE PTR [rdx+0x0],ah
  408269:	rex.WB add BYTE PTR [r14+0x0],bpl
  40826d:	add    BYTE PTR fs:[rbp+0x0],ah
  408271:	js     0x408273
  408273:	in     eax,dx
  408274:	and    al,0x0
  408276:	add    BYTE PTR [rdx],bh
  408278:	je     0x40827a
  40827a:	(bad)  
  40827b:	add    BYTE PTR [rdx+0x0],ah
  40827e:	ins    BYTE PTR es:[rdi],dx
  40827f:	add    BYTE PTR [rbp+0x0],ah
  408282:	rex.WR add BYTE PTR [rcx+0x0],r12b
  408286:	jns    0x408288
  408288:	outs   dx,DWORD PTR ds:[rsi]
  408289:	add    BYTE PTR [rbp+0x0],dh
  40828c:	je     0x40828e
  40828e:	push   rax
  40828f:	add    BYTE PTR [rcx+0x0],ah
  408292:	outs   dx,BYTE PTR ds:[rsi]
  408293:	add    BYTE PTR [rbp+0x0],ah
  408296:	ins    BYTE PTR es:[rdi],dx
  408297:	add    BYTE PTR [rcx],dh
  408299:	add    BYTE PTR [rsi],ch
  40829b:	add    BYTE PTR [rbx+0x0],al
  40829e:	outs   dx,DWORD PTR ds:[rsi]
  40829f:	add    BYTE PTR [rax+rax*1+0x75],ch
  4082a3:	add    BYTE PTR [rbp+0x0],ch
  4082a6:	outs   dx,BYTE PTR ds:[rsi]
  4082a7:	add    BYTE PTR [rbx+0x0],al
  4082aa:	outs   dx,DWORD PTR ds:[rsi]
  4082ab:	add    BYTE PTR [rbp+0x0],dh
  4082ae:	outs   dx,BYTE PTR ds:[rsi]
  4082af:	add    BYTE PTR [rax+rax*1-0xe],dh
  4082b3:	and    al,0x0
  4082b5:	add    BYTE PTR [rsp+rsi*2],ch
  4082b8:	add    BYTE PTR [rcx+0x0],ah
  4082bb:	(bad)  
  4082bc:	add    BYTE PTR [rax+rax*1+0x65],ch
  4082c0:	add    BYTE PTR [rax+rax*1+0x61],cl
  4082c4:	add    BYTE PTR [rcx+0x0],bh
  4082c7:	outs   dx,DWORD PTR ds:[rsi]
  4082c8:	add    BYTE PTR [rbp+0x0],dh
  4082cb:	je     0x4082cd
  4082cd:	push   rax
  4082ce:	add    BYTE PTR [rcx+0x0],ah
  4082d1:	outs   dx,BYTE PTR ds:[rsi]
  4082d2:	add    BYTE PTR [rbp+0x0],ah
  4082d5:	ins    BYTE PTR es:[rdi],dx
  4082d6:	add    BYTE PTR [rcx],dh
  4082d8:	add    BYTE PTR [rsi],ch
  4082da:	add    BYTE PTR [rax+rax*1+0x6f],al
  4082de:	add    BYTE PTR [rbx+0x0],ah
  4082e1:	imul   eax,DWORD PTR [rax],0xfffffff7
  4082e4:	and    al,0x0
  4082e6:	add    BYTE PTR [rax+0x74],al
  4082e9:	add    BYTE PTR [rcx+0x0],ah
  4082ec:	(bad)  
  4082ed:	add    BYTE PTR [rax+rax*1+0x65],ch
  4082f1:	add    BYTE PTR [rax+rax*1+0x61],cl
  4082f5:	add    BYTE PTR [rcx+0x0],bh
  4082f8:	outs   dx,DWORD PTR ds:[rsi]
  4082f9:	add    BYTE PTR [rbp+0x0],dh
  4082fc:	je     0x4082fe
  4082fe:	push   rax
  4082ff:	add    BYTE PTR [rcx+0x0],ah
  408302:	outs   dx,BYTE PTR ds:[rsi]
  408303:	add    BYTE PTR [rbp+0x0],ah
  408306:	ins    BYTE PTR es:[rdi],dx
  408307:	add    BYTE PTR [rcx],dh
  408309:	add    BYTE PTR [rsi],ch
  40830b:	add    BYTE PTR [rax+rax*1+0x61],cl
  40830f:	add    BYTE PTR [rcx+0x0],bh
  408312:	outs   dx,DWORD PTR ds:[rsi]
  408313:	add    BYTE PTR [rbp+0x0],dh
  408316:	je     0x408318
  408318:	push   rbx
  408319:	add    BYTE PTR [rbp+0x0],ah
  40831c:	je     0x40831e
  40831e:	je     0x408320
  408320:	imul   eax,DWORD PTR [rax],0x67006e
  408326:	jae    0x408328
  408328:	movabs eax,ds:0x61007434000025
  408331:	(bad)  
  408332:	add    BYTE PTR [rax+rax*1+0x65],ch
  408336:	add    BYTE PTR [rax+rax*1+0x61],cl
  40833a:	add    BYTE PTR [rcx+0x0],bh
  40833d:	outs   dx,DWORD PTR ds:[rsi]
  40833e:	add    BYTE PTR [rbp+0x0],dh
  408341:	je     0x408343
  408343:	push   rax
  408344:	add    BYTE PTR [rcx+0x0],ah
  408347:	outs   dx,BYTE PTR ds:[rsi]
  408348:	add    BYTE PTR [rbp+0x0],ah
  40834b:	ins    BYTE PTR es:[rdi],dx
  40834c:	add    BYTE PTR [rcx],dh
  40834e:	add    BYTE PTR [rsi],ch
  408350:	add    BYTE PTR [rax+rax*1+0x6f],cl
  408354:	add    BYTE PTR [rbx+0x0],ah
  408357:	(bad)  
  408358:	add    BYTE PTR [rax+rax*1+0x69],dh
  40835c:	add    BYTE PTR [rdi+0x0],ch
  40835f:	outs   dx,BYTE PTR ds:[rsi]
  408360:	add    BYTE PTR [rsi],bh
  408362:	sub    al,BYTE PTR [rax]
  408364:	add    BYTE PTR [rsp+rsi*2],dh
  408367:	add    BYTE PTR [rcx+0x0],ah
  40836a:	(bad)  
  40836b:	add    BYTE PTR [rax+rax*1+0x65],ch
  40836f:	add    BYTE PTR [rax+rax*1+0x61],cl
  408373:	add    BYTE PTR [rcx+0x0],bh
  408376:	outs   dx,DWORD PTR ds:[rsi]
  408377:	add    BYTE PTR [rbp+0x0],dh
  40837a:	je     0x40837c
  40837c:	push   rax
  40837d:	add    BYTE PTR [rcx+0x0],ah
  408380:	outs   dx,BYTE PTR ds:[rsi]
  408381:	add    BYTE PTR [rbp+0x0],ah
  408384:	ins    BYTE PTR es:[rdi],dx
  408385:	add    BYTE PTR [rcx],dh
  408387:	add    BYTE PTR [rsi],ch
  408389:	add    BYTE PTR [rdx+0x0],dl
  40838c:	outs   dx,DWORD PTR ds:[rsi]
  40838d:	add    BYTE PTR [rdi+0x0],dh
  408390:	rex.XB add BYTE PTR [r15+0x0],bpl
  408394:	jne    0x408396
  408396:	outs   dx,BYTE PTR ds:[rsi]
  408397:	add    BYTE PTR [rax+rax*1-0x26],dh
  40839b:	sub    al,BYTE PTR [rax]
  40839d:	add    BYTE PTR [rsp+rsi*2],ch
  4083a0:	add    BYTE PTR [rcx+0x0],ah
  4083a3:	(bad)  
  4083a4:	add    BYTE PTR [rax+rax*1+0x65],ch
  4083a8:	add    BYTE PTR [rax+rax*1+0x61],cl
  4083ac:	add    BYTE PTR [rcx+0x0],bh
  4083af:	outs   dx,DWORD PTR ds:[rsi]
  4083b0:	add    BYTE PTR [rbp+0x0],dh
  4083b3:	je     0x4083b5
  4083b5:	push   rax
  4083b6:	add    BYTE PTR [rcx+0x0],ah
  4083b9:	outs   dx,BYTE PTR ds:[rsi]
  4083ba:	add    BYTE PTR [rbp+0x0],ah
  4083bd:	ins    BYTE PTR es:[rdi],dx
  4083be:	add    BYTE PTR [rcx],dh
  4083c0:	add    BYTE PTR [rsi],ch
  4083c2:	add    BYTE PTR [rbx+0x0],dl
  4083c5:	imul   eax,DWORD PTR [rax],0x65007a
  4083cb:	fild   QWORD PTR [rdx]
  4083cd:	add    BYTE PTR [rax],al
  4083cf:	xor    al,0x74
  4083d1:	add    BYTE PTR [rcx+0x0],ah
  4083d4:	(bad)  
  4083d5:	add    BYTE PTR [rax+rax*1+0x65],ch
  4083d9:	add    BYTE PTR [rax+rax*1+0x61],cl
  4083dd:	add    BYTE PTR [rcx+0x0],bh
  4083e0:	outs   dx,DWORD PTR ds:[rsi]
  4083e1:	add    BYTE PTR [rbp+0x0],dh
  4083e4:	je     0x4083e6
  4083e6:	push   rax
  4083e7:	add    BYTE PTR [rcx+0x0],ah
  4083ea:	outs   dx,BYTE PTR ds:[rsi]
  4083eb:	add    BYTE PTR [rbp+0x0],ah
  4083ee:	ins    BYTE PTR es:[rdi],dx
  4083ef:	add    BYTE PTR [rcx],dh
  4083f1:	add    BYTE PTR [rsi],ch
  4083f3:	add    BYTE PTR [rax+rax*1+0x61],dl
  4083f7:	add    BYTE PTR [rdx+0x0],ah
  4083fa:	rex.WB add BYTE PTR [r14+0x0],bpl
  4083fe:	add    BYTE PTR fs:[rbp+0x0],ah
  408402:	js     0x408404
  408404:	sub    DWORD PTR [rbx],0x0
  408407:	add    BYTE PTR [rax+0x0],al
  40840a:	add    DWORD PTR [rax],eax
  40840c:	add    BYTE PTR [rax],al
  40840e:	(bad)  
  40840f:	(bad)  
  408410:	(bad)  
  408411:	inc    DWORD PTR [rcx]
  408413:	add    BYTE PTR [rax],al
  408415:	add    BYTE PTR [rax],al
  408417:	add    BYTE PTR [rax],al
  408419:	add    BYTE PTR [rdx+rax*1],cl
  40841c:	add    BYTE PTR [rax],al
  40841e:	add    BYTE PTR [rcx+0x53],dl
  408421:	jns    0x408496
  408423:	je     0x40848a
  408425:	ins    DWORD PTR es:[rdi],dx
  408426:	cs rex.R jb 0x40848b
  40842a:	ja     0x408495
  40842c:	outs   dx,BYTE PTR ds:[rsi]
  40842d:	addr32 sub al,0x20
  408430:	push   rsi
  408431:	gs jb  0x4084a7
  408434:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40843b:	xor    BYTE PTR cs:[rsi],ch
  40843e:	xor    BYTE PTR [rax+riz*1],ch
  408441:	rex.XB jne 0x4084b0
  408444:	je     0x4084bb
  408446:	jb     0x4084ad
  408448:	cmp    eax,0x7475656e
  40844d:	jb     0x4084b0
  40844f:	ins    BYTE PTR es:[rdi],dx
  408450:	sub    al,0x20
  408452:	push   rax
  408453:	jne    0x4084b7
  408455:	ins    BYTE PTR es:[rdi],dx
  408456:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40845d:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408461:	(bad)  
  408462:	xor    BYTE PTR [rbx],dh
  408464:	xor    ax,0x3766
  408468:	xor    WORD PTR [rcx],si
  40846b:	fs xor eax,0x61336130
  408471:	add    eax,0x1
  408476:	adc    al,0x53
  408478:	jns    0x4084ed
  40847a:	je     0x4084e1
  40847c:	ins    DWORD PTR es:[rdi],dx
  40847d:	cs rex.R jb 0x4084e2
  408481:	ja     0x4084ec
  408483:	outs   dx,BYTE PTR ds:[rsi]
  408484:	addr32 cs push rbx
  408487:	imul   edi,DWORD PTR [rdx+0x65],0x246
  40848e:	add    BYTE PTR [rip+0x74646977],al        # 0x74a4ee0b
  408494:	push   0x69656806
  408499:	addr32 push 0xb000074
  40849f:	or     eax,DWORD PTR [rdx]
  4084a1:	add    BYTE PTR [rax],al
  4084a3:	add    BYTE PTR [rax],al
  4084a5:	add    BYTE PTR [rax],al
  4084a7:	add    BYTE PTR [r8],al
  4084aa:	add    BYTE PTR [rcx+0xb],0x41
  4084ae:	add    BYTE PTR [rcx],al
  4084b0:	add    BYTE PTR [rax],al
  4084b2:	add    bh,bh
  4084b4:	(bad)  
  4084b5:	(bad)  
  4084b6:	inc    DWORD PTR [rcx]
  4084b8:	add    BYTE PTR [rax],al
  4084ba:	add    BYTE PTR [rax],al
  4084bc:	add    BYTE PTR [rax],al
  4084be:	add    BYTE PTR [rdx+rax*1],cl
  4084c1:	add    BYTE PTR [rax],al
  4084c3:	add    BYTE PTR [rcx+0x53],dl
  4084c6:	jns    0x40853b
  4084c8:	je     0x40852f
  4084ca:	ins    DWORD PTR es:[rdi],dx
  4084cb:	cs rex.R jb 0x408530
  4084cf:	ja     0x40853a
  4084d1:	outs   dx,BYTE PTR ds:[rsi]
  4084d2:	addr32 sub al,0x20
  4084d5:	push   rsi
  4084d6:	gs jb  0x40854c
  4084d9:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4084e0:	xor    BYTE PTR cs:[rsi],ch
  4084e3:	xor    BYTE PTR [rax+riz*1],ch
  4084e6:	rex.XB jne 0x408555
  4084e9:	je     0x408560
  4084eb:	jb     0x408552
  4084ed:	cmp    eax,0x7475656e
  4084f2:	jb     0x408555
  4084f4:	ins    BYTE PTR es:[rdi],dx
  4084f5:	sub    al,0x20
  4084f7:	push   rax
  4084f8:	jne    0x40855c
  4084fa:	ins    BYTE PTR es:[rdi],dx
  4084fb:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408502:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408506:	(bad)  
  408507:	xor    BYTE PTR [rbx],dh
  408509:	xor    ax,0x3766
  40850d:	xor    WORD PTR [rcx],si
  408510:	fs xor eax,0x61336130
  408516:	add    eax,0x1
  40851b:	adc    edx,DWORD PTR [rbx+0x79]
  40851e:	jae    0x408594
  408520:	gs ins DWORD PTR es:[rdi],dx
  408522:	cs rex.R jb 0x408587
  408526:	ja     0x408591
  408528:	outs   dx,BYTE PTR ds:[rsi]
  408529:	addr32 cs push rbx
  40852c:	imul   edi,DWORD PTR [rdx+0x65],0x2
  408533:	add    eax,0x74646977
  408538:	push   0x69656806
  40853d:	addr32 push 0x8000074
  408543:	or     BYTE PTR [rdx],al
  408545:	add    BYTE PTR [rax],al
  408547:	add    BYTE PTR [rsi+0x1],bh
  40854a:	add    BYTE PTR [rax],al
  40854c:	repnz add BYTE PTR [rax],al
  40854f:	add    BYTE PTR [rbx],cl
  408551:	add    DWORD PTR [rcx],edx
  408553:	push   r10
  408555:	push   rax
  408556:	imul   r12d,DWORD PTR [rcx+0x6c],0x6f43676f
  40855e:	outs   dx,BYTE PTR ds:[rsi]
  40855f:	je     0x4085d3
  408561:	outs   dx,DWORD PTR ds:[rsi]
  408562:	ins    BYTE PTR es:[rdi],dx
  408563:	jae    0x408566
  408565:	jns    0x4085ba
  408567:	jns    0x4085dc
  408569:	je     0x4085d0
  40856b:	ins    DWORD PTR es:[rdi],dx
  40856c:	cs push rdi
  40856e:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408575:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408577:	jb     0x4085e6
  408579:	jae    0x4085a9
  40857b:	push   rbp
  40857c:	jae    0x4085e3
  40857e:	jb     0x4085c3
  408580:	outs   dx,DWORD PTR ds:[rsi]
  408581:	outs   dx,BYTE PTR ds:[rsi]
  408582:	je     0x4085f6
  408584:	outs   dx,DWORD PTR ds:[rsi]
  408585:	ins    BYTE PTR es:[rdi],dx
  408586:	sub    al,0x20
  408588:	push   rbx
  408589:	jns    0x4085fe
  40858b:	je     0x4085f2
  40858d:	ins    DWORD PTR es:[rdi],dx
  40858e:	cs push rdi
  408590:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408597:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408599:	jb     0x408608
  40859b:	jae    0x4085c9
  40859d:	and    BYTE PTR [rsi+0x65],dl
  4085a0:	jb     0x408615
  4085a2:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4085a9:	xor    BYTE PTR cs:[rsi],ch
  4085ac:	xor    BYTE PTR [rax+riz*1],ch
  4085af:	rex.XB jne 0x40861e
  4085b2:	je     0x408629
  4085b4:	jb     0x40861b
  4085b6:	cmp    eax,0x7475656e
  4085bb:	jb     0x40861e
  4085bd:	ins    BYTE PTR es:[rdi],dx
  4085be:	sub    al,0x20
  4085c0:	push   rax
  4085c1:	jne    0x408625
  4085c3:	ins    BYTE PTR es:[rdi],dx
  4085c4:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4085cb:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4085cf:	(bad)  
  4085d0:	(bad)  
  4085d1:	(bad)  
  4085d2:	(bad)  
  4085d3:	xor    eax,0x31363563
  4085d8:	cmp    DWORD PTR [rbx],esi
  4085da:	xor    al,0x65
  4085dc:	xor    BYTE PTR [rax],bh
  4085de:	cmp    DWORD PTR [rcx],eax
  4085e0:	(bad)  
  4085e1:	(bad)  
  4085e2:	fs fs rex.RX
  4085e5:	gs (bad) 
  4085e7:	je     0x40865e
  4085e9:	jb     0x408650
  4085eb:	rex.R
  4085ec:	gs jae 0x408652
  4085ef:	imul   esi,DWORD PTR [rax+0x74],0x6562614c
  4085f6:	ins    BYTE PTR es:[rdi],dx
  4085f7:	add    DWORD PTR [rcx],edx
  4085f9:	je     0x40865c
  4085fb:	(bad)  
  4085fc:	ins    BYTE PTR es:[rdi],dx
  4085fd:	gs rex.WR (bad) 
  408600:	jns    0x408671
  408602:	jne    0x408678
  408604:	push   rax
  408605:	(bad)  
  408606:	outs   dx,BYTE PTR ds:[rsi]
  408607:	gs ins BYTE PTR es:[rdi],dx
  408609:	xor    DWORD PTR [rcx],eax
  40860b:	jae    0x408660
  40860d:	jns    0x408682
  40860f:	je     0x408676
  408611:	ins    DWORD PTR es:[rdi],dx
  408612:	cs push rdi
  408614:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40861b:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40861d:	jb     0x40868c
  40861f:	jae    0x40864f
  408621:	rex.WR (bad) 
  408623:	(bad)  
  408624:	gs ins BYTE PTR es:[rdi],dx
  408626:	sub    al,0x20
  408628:	push   rbx
  408629:	jns    0x40869e
  40862b:	je     0x408692
  40862d:	ins    DWORD PTR es:[rdi],dx
  40862e:	cs push rdi
  408630:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408637:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408639:	jb     0x4086a8
  40863b:	jae    0x408669
  40863d:	and    BYTE PTR [rsi+0x65],dl
  408640:	jb     0x4086b5
  408642:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408649:	xor    BYTE PTR cs:[rsi],ch
  40864c:	xor    BYTE PTR [rax+riz*1],ch
  40864f:	rex.XB jne 0x4086be
  408652:	je     0x4086c9
  408654:	jb     0x4086bb
  408656:	cmp    eax,0x7475656e
  40865b:	jb     0x4086be
  40865d:	ins    BYTE PTR es:[rdi],dx
  40865e:	sub    al,0x20
  408660:	push   rax
  408661:	jne    0x4086c5
  408663:	ins    BYTE PTR es:[rdi],dx
  408664:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40866b:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40866f:	(bad)  
  408670:	(bad)  
  408671:	(bad)  
  408672:	(bad)  
  408673:	xor    eax,0x31363563
  408678:	cmp    DWORD PTR [rbx],esi
  40867a:	xor    al,0x65
  40867c:	xor    BYTE PTR [rax],bh
  40867e:	cmp    DWORD PTR [rcx],eax
  408680:	add    DWORD PTR [rcx+rax*1],esi
  408683:	adc    esp,DWORD PTR [rcx+0x64]
  408686:	fs rex.RX
  408688:	gs (bad) 
  40868a:	je     0x408701
  40868c:	jb     0x4086f3
  40868e:	imul   r13,QWORD PTR [rsi+0x6b],0x6562614c
  408696:	ins    BYTE PTR es:[rdi],dx
  408697:	add    DWORD PTR [rcx],edx
  408699:	je     0x4086fc
  40869b:	(bad)  
  40869c:	ins    BYTE PTR es:[rdi],dx
  40869d:	gs rex.WR (bad) 
  4086a0:	jns    0x408711
  4086a2:	jne    0x408718
  4086a4:	push   rax
  4086a5:	(bad)  
  4086a6:	outs   dx,BYTE PTR ds:[rsi]
  4086a7:	gs ins BYTE PTR es:[rdi],dx
  4086a9:	xor    DWORD PTR [rcx],eax
  4086ab:	ja     0x408700
  4086ad:	jns    0x408722
  4086af:	je     0x408716
  4086b1:	ins    DWORD PTR es:[rdi],dx
  4086b2:	cs push rdi
  4086b4:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4086bb:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4086bd:	jb     0x40872c
  4086bf:	jae    0x4086ef
  4086c1:	imul   r13,QWORD PTR [rsi+0x6b],0x6562614c
  4086c9:	ins    BYTE PTR es:[rdi],dx
  4086ca:	sub    al,0x20
  4086cc:	push   rbx
  4086cd:	jns    0x408742
  4086cf:	je     0x408736
  4086d1:	ins    DWORD PTR es:[rdi],dx
  4086d2:	cs push rdi
  4086d4:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4086db:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4086dd:	jb     0x40874c
  4086df:	jae    0x40870d
  4086e1:	and    BYTE PTR [rsi+0x65],dl
  4086e4:	jb     0x408759
  4086e6:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4086ed:	xor    BYTE PTR cs:[rsi],ch
  4086f0:	xor    BYTE PTR [rax+riz*1],ch
  4086f3:	rex.XB jne 0x408762
  4086f6:	je     0x40876d
  4086f8:	jb     0x40875f
  4086fa:	cmp    eax,0x7475656e
  4086ff:	jb     0x408762
  408701:	ins    BYTE PTR es:[rdi],dx
  408702:	sub    al,0x20
  408704:	push   rax
  408705:	jne    0x408769
  408707:	ins    BYTE PTR es:[rdi],dx
  408708:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40870f:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408713:	(bad)  
  408714:	(bad)  
  408715:	(bad)  
  408716:	(bad)  
  408717:	xor    eax,0x31363563
  40871c:	cmp    DWORD PTR [rbx],esi
  40871e:	xor    al,0x65
  408720:	xor    BYTE PTR [rax],bh
  408722:	cmp    DWORD PTR [rcx],eax
  408724:	add    DWORD PTR [rbx],esi
  408726:	add    DWORD PTR [rcx+riz*2],edx
  408729:	fs fs rex.RX
  40872c:	gs (bad) 
  40872e:	je     0x4087a5
  408730:	jb     0x408797
  408732:	push   rax
  408733:	imul   esp,DWORD PTR [rbx+0x74],0x42657275
  40873a:	outs   dx,DWORD PTR ds:[rsi]
  40873b:	js     0x40873e
  40873d:	adc    DWORD PTR [rcx+riz*2+0x62],esi
  408741:	ins    BYTE PTR es:[rdi],dx
  408742:	gs rex.WR (bad) 
  408745:	jns    0x4087b6
  408747:	jne    0x4087bd
  408749:	push   rax
  40874a:	(bad)  
  40874b:	outs   dx,BYTE PTR ds:[rsi]
  40874c:	gs ins BYTE PTR es:[rdi],dx
  40874e:	xor    DWORD PTR [rcx],eax
  408750:	js     0x4087a5
  408752:	jns    0x4087c7
  408754:	je     0x4087bb
  408756:	ins    DWORD PTR es:[rdi],dx
  408757:	cs push rdi
  408759:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408760:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408762:	jb     0x4087d1
  408764:	jae    0x408794
  408766:	push   rax
  408767:	imul   esp,DWORD PTR [rbx+0x74],0x42657275
  40876e:	outs   dx,DWORD PTR ds:[rsi]
  40876f:	js     0x40879d
  408771:	and    BYTE PTR [rbx+0x79],dl
  408774:	jae    0x4087ea
  408776:	gs ins DWORD PTR es:[rdi],dx
  408778:	cs push rdi
  40877a:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408781:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408783:	jb     0x4087f2
  408785:	jae    0x4087b3
  408787:	and    BYTE PTR [rsi+0x65],dl
  40878a:	jb     0x4087ff
  40878c:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408793:	xor    BYTE PTR cs:[rsi],ch
  408796:	xor    BYTE PTR [rax+riz*1],ch
  408799:	rex.XB jne 0x408808
  40879c:	je     0x408813
  40879e:	jb     0x408805
  4087a0:	cmp    eax,0x7475656e
  4087a5:	jb     0x408808
  4087a7:	ins    BYTE PTR es:[rdi],dx
  4087a8:	sub    al,0x20
  4087aa:	push   rax
  4087ab:	jne    0x40880f
  4087ad:	ins    BYTE PTR es:[rdi],dx
  4087ae:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4087b5:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4087b9:	(bad)  
  4087ba:	(bad)  
  4087bb:	(bad)  
  4087bc:	(bad)  
  4087bd:	xor    eax,0x31363563
  4087c2:	cmp    DWORD PTR [rbx],esi
  4087c4:	xor    al,0x65
  4087c6:	xor    BYTE PTR [rax],bh
  4087c8:	cmp    DWORD PTR [rcx],eax
  4087ca:	add    DWORD PTR [rdx],esi
  4087cc:	add    DWORD PTR [rsi],eax
  4087ce:	ins    BYTE PTR es:[rdi],dx
  4087cf:	(bad)  
  4087d0:	(bad)  
  4087d1:	gs ins BYTE PTR es:[rdi],dx
  4087d3:	xor    DWORD PTR [rcx],eax
  4087d5:	adc    DWORD PTR [rcx+riz*2+0x62],esi
  4087d9:	ins    BYTE PTR es:[rdi],dx
  4087da:	gs rex.WR (bad) 
  4087dd:	jns    0x40884e
  4087df:	jne    0x408855
  4087e1:	push   rax
  4087e2:	(bad)  
  4087e3:	outs   dx,BYTE PTR ds:[rsi]
  4087e4:	gs ins BYTE PTR es:[rdi],dx
  4087e6:	xor    DWORD PTR [rcx],eax
  4087e8:	jae    0x40883d
  4087ea:	jns    0x40885f
  4087ec:	je     0x408853
  4087ee:	ins    DWORD PTR es:[rdi],dx
  4087ef:	cs push rdi
  4087f1:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4087f8:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4087fa:	jb     0x408869
  4087fc:	jae    0x40882c
  4087fe:	rex.WR (bad) 
  408800:	(bad)  
  408801:	gs ins BYTE PTR es:[rdi],dx
  408803:	sub    al,0x20
  408805:	push   rbx
  408806:	jns    0x40887b
  408808:	je     0x40886f
  40880a:	ins    DWORD PTR es:[rdi],dx
  40880b:	cs push rdi
  40880d:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408814:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408816:	jb     0x408885
  408818:	jae    0x408846
  40881a:	and    BYTE PTR [rsi+0x65],dl
  40881d:	jb     0x408892
  40881f:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408826:	xor    BYTE PTR cs:[rsi],ch
  408829:	xor    BYTE PTR [rax+riz*1],ch
  40882c:	rex.XB jne 0x40889b
  40882f:	je     0x4088a6
  408831:	jb     0x408898
  408833:	cmp    eax,0x7475656e
  408838:	jb     0x40889b
  40883a:	ins    BYTE PTR es:[rdi],dx
  40883b:	sub    al,0x20
  40883d:	push   rax
  40883e:	jne    0x4088a2
  408840:	ins    BYTE PTR es:[rdi],dx
  408841:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408848:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40884c:	(bad)  
  40884d:	(bad)  
  40884e:	(bad)  
  40884f:	(bad)  
  408850:	xor    eax,0x31363563
  408855:	cmp    DWORD PTR [rbx],esi
  408857:	xor    al,0x65
  408859:	xor    BYTE PTR [rax],bh
  40885b:	cmp    DWORD PTR [rcx],eax
  40885d:	add    DWORD PTR [rax],edi
  40885f:	add    DWORD PTR [rip+0x6f79616c],ecx        # 0x6fb9e9d1
  408865:	jne    0x4088db
  408867:	rex.WRB (bad) 
  408869:	outs   dx,BYTE PTR ds:[rsi]
  40886a:	(bad)  
  40886b:	addr32 gs jb 0x408870
  40886f:	stos   DWORD PTR es:[rdi],eax
  408870:	add    DWORD PTR [rbp+0x69],ecx
  408873:	movsxd esi,DWORD PTR [rdx+0x6f]
  408876:	jae    0x4088e7
  408878:	data16 je 0x4088a9
  40887b:	push   rbx
  40887c:	jno    0x4088ea
  40887e:	push   rbx
  40887f:	gs jb  0x4088f8
  408882:	gs jb  0x4088b3
  408885:	rex.WRB (bad) 
  408887:	outs   dx,BYTE PTR ds:[rsi]
  408888:	(bad)  
  408889:	gs ins DWORD PTR es:[edi],dx
  40888c:	outs   dx,BYTE PTR gs:[rsi]
  40888e:	je     0x4088be
  408890:	rex.XB outs dx,DWORD PTR ds:[rsi]
  408892:	outs   dx,BYTE PTR ds:[rsi]
  408893:	je     0x408907
  408895:	outs   dx,DWORD PTR ds:[rsi]
  408896:	ins    BYTE PTR es:[rdi],dx
  408897:	jae    0x4088c7
  408899:	push   rbx
  40889a:	jno    0x408908
  40889c:	push   rbx
  40889d:	je     0x408914
  40889f:	imul   ebp,DWORD PTR fs:[rdi+0x4c],0x756f7961
  4088a7:	je     0x4088f6
  4088a9:	(bad)  
  4088aa:	outs   dx,BYTE PTR ds:[rsi]
  4088ab:	(bad)  
  4088ac:	addr32 gs jb 0x4088dc
  4088b0:	and    BYTE PTR [rbp+0x69],cl
  4088b3:	movsxd esi,DWORD PTR [rdx+0x6f]
  4088b6:	jae    0x408927
  4088b8:	data16 je 0x4088e9
  4088bb:	push   rbx
  4088bc:	jno    0x40892a
  4088be:	push   rbx
  4088bf:	gs jb  0x408938
  4088c2:	gs jb  0x4088f3
  4088c5:	rex.WRB (bad) 
  4088c7:	outs   dx,BYTE PTR ds:[rsi]
  4088c8:	(bad)  
  4088c9:	gs ins DWORD PTR es:[edi],dx
  4088cc:	outs   dx,BYTE PTR gs:[rsi]
  4088ce:	je     0x4088fe
  4088d0:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4088d2:	outs   dx,BYTE PTR ds:[rsi]
  4088d3:	je     0x408947
  4088d5:	outs   dx,DWORD PTR ds:[rsi]
  4088d6:	ins    BYTE PTR es:[rdi],dx
  4088d7:	jae    0x408905
  4088d9:	and    BYTE PTR [rsi+0x65],dl
  4088dc:	jb     0x408951
  4088de:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e30313d
  4088e5:	xor    BYTE PTR [rsi],ch
  4088e7:	xor    BYTE PTR [rsi],ch
  4088e9:	xor    BYTE PTR [rax+riz*1],ch
  4088ec:	rex.XB jne 0x40895b
  4088ef:	je     0x408966
  4088f1:	jb     0x408958
  4088f3:	cmp    eax,0x7475656e
  4088f8:	jb     0x40895b
  4088fa:	ins    BYTE PTR es:[rdi],dx
  4088fb:	sub    al,0x20
  4088fd:	push   rax
  4088fe:	jne    0x408962
  408900:	ins    BYTE PTR es:[rdi],dx
  408901:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408908:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40890c:	cmp    BYTE PTR [rcx],bh
  40890e:	cmp    BYTE PTR [rsi*1+0x38646364],dh
  408915:	xor    BYTE PTR [rax],bh
  408917:	xor    BYTE PTR [rbx+0x63],ah
  40891a:	cmp    DWORD PTR [rcx],esi
  40891c:	add    DWORD PTR [rdi],edx
  40891e:	jb     0x408985
  408920:	ins    DWORD PTR es:[rdi],dx
  408921:	outs   dx,DWORD PTR ds:[rsi]
  408922:	jbe    0x408989
  408924:	rex.RX
  408925:	gs (bad) 
  408927:	je     0x40899e
  408929:	jb     0x408990
  40892b:	jae    0x408979
  40892d:	imul   ebp,DWORD PTR [rsi+0x6b],0x6562614c
  408934:	ins    BYTE PTR es:[rdi],dx
  408935:	add    DWORD PTR [rcx],edx
  408937:	je     0x40899a
  408939:	(bad)  
  40893a:	ins    BYTE PTR es:[rdi],dx
  40893b:	gs rex.WR (bad) 
  40893e:	jns    0x4089af
  408940:	jne    0x4089b6
  408942:	push   rax
  408943:	(bad)  
  408944:	outs   dx,BYTE PTR ds:[rsi]
  408945:	gs ins BYTE PTR es:[rdi],dx
  408947:	xor    DWORD PTR [rcx],eax
  408949:	ja     0x40899e
  40894b:	jns    0x4089c0
  40894d:	je     0x4089b4
  40894f:	ins    DWORD PTR es:[rdi],dx
  408950:	cs push rdi
  408952:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408959:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40895b:	jb     0x4089ca
  40895d:	jae    0x40898d
  40895f:	imul   r13,QWORD PTR [rsi+0x6b],0x6562614c
  408967:	ins    BYTE PTR es:[rdi],dx
  408968:	sub    al,0x20
  40896a:	push   rbx
  40896b:	jns    0x4089e0
  40896d:	je     0x4089d4
  40896f:	ins    DWORD PTR es:[rdi],dx
  408970:	cs push rdi
  408972:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408979:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40897b:	jb     0x4089ea
  40897d:	jae    0x4089ab
  40897f:	and    BYTE PTR [rsi+0x65],dl
  408982:	jb     0x4089f7
  408984:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40898b:	xor    BYTE PTR cs:[rsi],ch
  40898e:	xor    BYTE PTR [rax+riz*1],ch
  408991:	rex.XB jne 0x408a00
  408994:	je     0x408a0b
  408996:	jb     0x4089fd
  408998:	cmp    eax,0x7475656e
  40899d:	jb     0x408a00
  40899f:	ins    BYTE PTR es:[rdi],dx
  4089a0:	sub    al,0x20
  4089a2:	push   rax
  4089a3:	jne    0x408a07
  4089a5:	ins    BYTE PTR es:[rdi],dx
  4089a6:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4089ad:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4089b1:	(bad)  
  4089b2:	(bad)  
  4089b3:	(bad)  
  4089b4:	(bad)  
  4089b5:	xor    eax,0x31363563
  4089ba:	cmp    DWORD PTR [rbx],esi
  4089bc:	xor    al,0x65
  4089be:	xor    BYTE PTR [rax],bh
  4089c0:	cmp    DWORD PTR [rcx],eax
  4089c2:	add    DWORD PTR [rdi],esi
  4089c4:	add    DWORD PTR [rax],ebx
  4089c6:	jb     0x408a2d
  4089c8:	ins    DWORD PTR es:[rdi],dx
  4089c9:	outs   dx,DWORD PTR ds:[rsi]
  4089ca:	jbe    0x408a31
  4089cc:	rex.RX
  4089cd:	gs (bad) 
  4089cf:	je     0x408a46
  4089d1:	jb     0x408a38
  4089d3:	jae    0x408a25
  4089d5:	imul   esp,DWORD PTR [rbx+0x74],0x42657275
  4089dc:	outs   dx,DWORD PTR ds:[rsi]
  4089dd:	js     0x4089e0
  4089df:	adc    DWORD PTR [rcx+riz*2+0x62],esi
  4089e3:	ins    BYTE PTR es:[rdi],dx
  4089e4:	gs rex.WR (bad) 
  4089e7:	jns    0x408a58
  4089e9:	jne    0x408a5f
  4089eb:	push   rax
  4089ec:	(bad)  
  4089ed:	outs   dx,BYTE PTR ds:[rsi]
  4089ee:	gs ins BYTE PTR es:[rdi],dx
  4089f0:	xor    DWORD PTR [rcx],eax
  4089f2:	js     0x408a47
  4089f4:	jns    0x408a69
  4089f6:	je     0x408a5d
  4089f8:	ins    DWORD PTR es:[rdi],dx
  4089f9:	cs push rdi
  4089fb:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408a02:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408a04:	jb     0x408a73
  408a06:	jae    0x408a36
  408a08:	push   rax
  408a09:	imul   esp,DWORD PTR [rbx+0x74],0x42657275
  408a10:	outs   dx,DWORD PTR ds:[rsi]
  408a11:	js     0x408a3f
  408a13:	and    BYTE PTR [rbx+0x79],dl
  408a16:	jae    0x408a8c
  408a18:	gs ins DWORD PTR es:[rdi],dx
  408a1a:	cs push rdi
  408a1c:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408a23:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408a25:	jb     0x408a94
  408a27:	jae    0x408a55
  408a29:	and    BYTE PTR [rsi+0x65],dl
  408a2c:	jb     0x408aa1
  408a2e:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408a35:	xor    BYTE PTR cs:[rsi],ch
  408a38:	xor    BYTE PTR [rax+riz*1],ch
  408a3b:	rex.XB jne 0x408aaa
  408a3e:	je     0x408ab5
  408a40:	jb     0x408aa7
  408a42:	cmp    eax,0x7475656e
  408a47:	jb     0x408aaa
  408a49:	ins    BYTE PTR es:[rdi],dx
  408a4a:	sub    al,0x20
  408a4c:	push   rax
  408a4d:	jne    0x408ab1
  408a4f:	ins    BYTE PTR es:[rdi],dx
  408a50:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408a57:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408a5b:	(bad)  
  408a5c:	(bad)  
  408a5d:	(bad)  
  408a5e:	(bad)  
  408a5f:	xor    eax,0x31363563
  408a64:	cmp    DWORD PTR [rbx],esi
  408a66:	xor    al,0x65
  408a68:	xor    BYTE PTR [rax],bh
  408a6a:	cmp    DWORD PTR [rcx],eax
  408a6c:	add    DWORD PTR [rax],esi
  408a6e:	add    DWORD PTR [rbx],edx
  408a70:	jb     0x408ad7
  408a72:	jo     0x408ad5
  408a74:	imul   esi,DWORD PTR [rdx+0x44],0x72637365
  408a7b:	imul   esi,DWORD PTR [rax+0x74],0x6562614c
  408a82:	ins    BYTE PTR es:[rdi],dx
  408a83:	add    DWORD PTR [rcx],edx
  408a85:	je     0x408ae8
  408a87:	(bad)  
  408a88:	ins    BYTE PTR es:[rdi],dx
  408a89:	gs rex.WR (bad) 
  408a8c:	jns    0x408afd
  408a8e:	jne    0x408b04
  408a90:	push   rax
  408a91:	(bad)  
  408a92:	outs   dx,BYTE PTR ds:[rsi]
  408a93:	gs ins BYTE PTR es:[rdi],dx
  408a95:	xor    DWORD PTR [rcx],eax
  408a97:	jae    0x408aec
  408a99:	jns    0x408b0e
  408a9b:	je     0x408b02
  408a9d:	ins    DWORD PTR es:[rdi],dx
  408a9e:	cs push rdi
  408aa0:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408aa7:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408aa9:	jb     0x408b18
  408aab:	jae    0x408adb
  408aad:	rex.WR (bad) 
  408aaf:	(bad)  
  408ab0:	gs ins BYTE PTR es:[rdi],dx
  408ab2:	sub    al,0x20
  408ab4:	push   rbx
  408ab5:	jns    0x408b2a
  408ab7:	je     0x408b1e
  408ab9:	ins    DWORD PTR es:[rdi],dx
  408aba:	cs push rdi
  408abc:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408ac3:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408ac5:	jb     0x408b34
  408ac7:	jae    0x408af5
  408ac9:	and    BYTE PTR [rsi+0x65],dl
  408acc:	jb     0x408b41
  408ace:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408ad5:	xor    BYTE PTR cs:[rsi],ch
  408ad8:	xor    BYTE PTR [rax+riz*1],ch
  408adb:	rex.XB jne 0x408b4a
  408ade:	je     0x408b55
  408ae0:	jb     0x408b47
  408ae2:	cmp    eax,0x7475656e
  408ae7:	jb     0x408b4a
  408ae9:	ins    BYTE PTR es:[rdi],dx
  408aea:	sub    al,0x20
  408aec:	push   rax
  408aed:	jne    0x408b51
  408aef:	ins    BYTE PTR es:[rdi],dx
  408af0:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408af7:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408afb:	(bad)  
  408afc:	(bad)  
  408afd:	(bad)  
  408afe:	(bad)  
  408aff:	xor    eax,0x31363563
  408b04:	cmp    DWORD PTR [rbx],esi
  408b06:	xor    al,0x65
  408b08:	xor    BYTE PTR [rax],bh
  408b0a:	cmp    DWORD PTR [rcx],eax
  408b0c:	add    DWORD PTR [rsi],esi
  408b0e:	add    DWORD PTR [rdi],ecx
  408b10:	jb     0x408b77
  408b12:	jo     0x408b75
  408b14:	imul   esi,DWORD PTR [rdx+0x4c],0x4c6b6e69
  408b1b:	(bad)  
  408b1c:	(bad)  
  408b1d:	gs ins BYTE PTR es:[rdi],dx
  408b1f:	add    DWORD PTR [rcx],edx
  408b21:	je     0x408b84
  408b23:	(bad)  
  408b24:	ins    BYTE PTR es:[rdi],dx
  408b25:	gs rex.WR (bad) 
  408b28:	jns    0x408b99
  408b2a:	jne    0x408ba0
  408b2c:	push   rax
  408b2d:	(bad)  
  408b2e:	outs   dx,BYTE PTR ds:[rsi]
  408b2f:	gs ins BYTE PTR es:[rdi],dx
  408b31:	xor    DWORD PTR [rcx],eax
  408b33:	ja     0x408b88
  408b35:	jns    0x408baa
  408b37:	je     0x408b9e
  408b39:	ins    DWORD PTR es:[rdi],dx
  408b3a:	cs push rdi
  408b3c:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408b43:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408b45:	jb     0x408bb4
  408b47:	jae    0x408b77
  408b49:	imul   r13,QWORD PTR [rsi+0x6b],0x6562614c
  408b51:	ins    BYTE PTR es:[rdi],dx
  408b52:	sub    al,0x20
  408b54:	push   rbx
  408b55:	jns    0x408bca
  408b57:	je     0x408bbe
  408b59:	ins    DWORD PTR es:[rdi],dx
  408b5a:	cs push rdi
  408b5c:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408b63:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408b65:	jb     0x408bd4
  408b67:	jae    0x408b95
  408b69:	and    BYTE PTR [rsi+0x65],dl
  408b6c:	jb     0x408be1
  408b6e:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408b75:	xor    BYTE PTR cs:[rsi],ch
  408b78:	xor    BYTE PTR [rax+riz*1],ch
  408b7b:	rex.XB jne 0x408bea
  408b7e:	je     0x408bf5
  408b80:	jb     0x408be7
  408b82:	cmp    eax,0x7475656e
  408b87:	jb     0x408bea
  408b89:	ins    BYTE PTR es:[rdi],dx
  408b8a:	sub    al,0x20
  408b8c:	push   rax
  408b8d:	jne    0x408bf1
  408b8f:	ins    BYTE PTR es:[rdi],dx
  408b90:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408b97:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408b9b:	(bad)  
  408b9c:	(bad)  
  408b9d:	(bad)  
  408b9e:	(bad)  
  408b9f:	xor    eax,0x31363563
  408ba4:	cmp    DWORD PTR [rbx],esi
  408ba6:	xor    al,0x65
  408ba8:	xor    BYTE PTR [rax],bh
  408baa:	cmp    DWORD PTR [rcx],eax
  408bac:	add    DWORD PTR [rcx],esi
  408bae:	add    DWORD PTR [rax],edx
  408bb0:	jb     0x408c17
  408bb2:	jo     0x408c15
  408bb4:	imul   esi,DWORD PTR [rdx+0x50],0x75746369
  408bbb:	jb     0x408c22
  408bbd:	rex.X outs dx,DWORD PTR ds:[rsi]
  408bbf:	js     0x408bc2
  408bc1:	adc    DWORD PTR [rcx+riz*2+0x62],esi
  408bc5:	ins    BYTE PTR es:[rdi],dx
  408bc6:	gs rex.WR (bad) 
  408bc9:	jns    0x408c3a
  408bcb:	jne    0x408c41
  408bcd:	push   rax
  408bce:	(bad)  
  408bcf:	outs   dx,BYTE PTR ds:[rsi]
  408bd0:	gs ins BYTE PTR es:[rdi],dx
  408bd2:	xor    DWORD PTR [rcx],eax
  408bd4:	js     0x408c29
  408bd6:	jns    0x408c4b
  408bd8:	je     0x408c3f
  408bda:	ins    DWORD PTR es:[rdi],dx
  408bdb:	cs push rdi
  408bdd:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408be4:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408be6:	jb     0x408c55
  408be8:	jae    0x408c18
  408bea:	push   rax
  408beb:	imul   esp,DWORD PTR [rbx+0x74],0x42657275
  408bf2:	outs   dx,DWORD PTR ds:[rsi]
  408bf3:	js     0x408c21
  408bf5:	and    BYTE PTR [rbx+0x79],dl
  408bf8:	jae    0x408c6e
  408bfa:	gs ins DWORD PTR es:[rdi],dx
  408bfc:	cs push rdi
  408bfe:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408c05:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408c07:	jb     0x408c76
  408c09:	jae    0x408c37
  408c0b:	and    BYTE PTR [rsi+0x65],dl
  408c0e:	jb     0x408c83
  408c10:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408c17:	xor    BYTE PTR cs:[rsi],ch
  408c1a:	xor    BYTE PTR [rax+riz*1],ch
  408c1d:	rex.XB jne 0x408c8c
  408c20:	je     0x408c97
  408c22:	jb     0x408c89
  408c24:	cmp    eax,0x7475656e
  408c29:	jb     0x408c8c
  408c2b:	ins    BYTE PTR es:[rdi],dx
  408c2c:	sub    al,0x20
  408c2e:	push   rax
  408c2f:	jne    0x408c93
  408c31:	ins    BYTE PTR es:[rdi],dx
  408c32:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408c39:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408c3d:	(bad)  
  408c3e:	(bad)  
  408c3f:	(bad)  
  408c40:	(bad)  
  408c41:	xor    eax,0x31363563
  408c46:	cmp    DWORD PTR [rbx],esi
  408c48:	xor    al,0x65
  408c4a:	xor    BYTE PTR [rax],bh
  408c4c:	cmp    DWORD PTR [rcx],eax
  408c4e:	add    DWORD PTR [rip+0x61741101],esi        # 0x61b49d55
  408c54:	(bad)  
  408c55:	ins    BYTE PTR es:[rdi],dx
  408c56:	gs rex.WR (bad) 
  408c59:	jns    0x408cca
  408c5b:	jne    0x408cd1
  408c5d:	push   rax
  408c5e:	(bad)  
  408c5f:	outs   dx,BYTE PTR ds:[rsi]
  408c60:	gs ins BYTE PTR es:[rdi],dx
  408c62:	xor    DWORD PTR [rcx],eax
  408c64:	add    eax,0x69687424
  408c69:	jae    0x408c6c
  408c6b:	jle    0x408cc0
  408c6d:	jns    0x408ce2
  408c6f:	je     0x408cd6
  408c71:	ins    DWORD PTR es:[rdi],dx
  408c72:	cs push rdi
  408c74:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408c7b:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408c7d:	jb     0x408cec
  408c7f:	jae    0x408caf
  408c81:	push   rsp
  408c82:	(bad)  
  408c83:	(bad)  
  408c84:	ins    BYTE PTR es:[rdi],dx
  408c85:	gs rex.WR (bad) 
  408c88:	jns    0x408cf9
  408c8a:	jne    0x408d00
  408c8c:	push   rax
  408c8d:	(bad)  
  408c8e:	outs   dx,BYTE PTR ds:[rsi]
  408c8f:	gs ins BYTE PTR es:[rdi],dx
  408c91:	sub    al,0x20
  408c93:	push   rbx
  408c94:	jns    0x408d09
  408c96:	je     0x408cfd
  408c98:	ins    DWORD PTR es:[rdi],dx
  408c99:	cs push rdi
  408c9b:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408ca2:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408ca4:	jb     0x408d13
  408ca6:	jae    0x408cd4
  408ca8:	and    BYTE PTR [rsi+0x65],dl
  408cab:	jb     0x408d20
  408cad:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408cb4:	xor    BYTE PTR cs:[rsi],ch
  408cb7:	xor    BYTE PTR [rax+riz*1],ch
  408cba:	rex.XB jne 0x408d29
  408cbd:	je     0x408d34
  408cbf:	jb     0x408d26
  408cc1:	cmp    eax,0x7475656e
  408cc6:	jb     0x408d29
  408cc8:	ins    BYTE PTR es:[rdi],dx
  408cc9:	sub    al,0x20
  408ccb:	push   rax
  408ccc:	jne    0x408d30
  408cce:	ins    BYTE PTR es:[rdi],dx
  408ccf:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408cd6:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408cda:	(bad)  
  408cdb:	(bad)  
  408cdc:	(bad)  
  408cdd:	(bad)  
  408cde:	xor    eax,0x31363563
  408ce3:	cmp    DWORD PTR [rbx],esi
  408ce5:	xor    al,0x65
  408ce7:	xor    BYTE PTR [rax],bh
  408ce9:	cmp    DWORD PTR [rcx],eax
  408ceb:	add    DWORD PTR [rax],esi
  408ced:	add    al,BYTE PTR [rcx]
  408cef:	rex.X add BYTE PTR [rcx],al
  408cf2:	add    BYTE PTR [rax],al
  408cf4:	add    bh,bh
  408cf6:	(bad)  
  408cf7:	(bad)  
  408cf8:	inc    DWORD PTR [rcx]
  408cfa:	add    BYTE PTR [rax],al
  408cfc:	add    BYTE PTR [rax],al
  408cfe:	add    BYTE PTR [rax],al
  408d00:	add    BYTE PTR [rdx+rax*1],cl
  408d03:	add    BYTE PTR [rax],al
  408d05:	add    BYTE PTR [rdi+0x53],dl
  408d08:	jns    0x408d7d
  408d0a:	je     0x408d71
  408d0c:	ins    DWORD PTR es:[rdi],dx
  408d0d:	cs push rdi
  408d0f:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408d16:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408d18:	jb     0x408d87
  408d1a:	jae    0x408d48
  408d1c:	and    BYTE PTR [rsi+0x65],dl
  408d1f:	jb     0x408d94
  408d21:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408d28:	xor    BYTE PTR cs:[rsi],ch
  408d2b:	xor    BYTE PTR [rax+riz*1],ch
  408d2e:	rex.XB jne 0x408d9d
  408d31:	je     0x408da8
  408d33:	jb     0x408d9a
  408d35:	cmp    eax,0x7475656e
  408d3a:	jb     0x408d9d
  408d3c:	ins    BYTE PTR es:[rdi],dx
  408d3d:	sub    al,0x20
  408d3f:	push   rax
  408d40:	jne    0x408da4
  408d42:	ins    BYTE PTR es:[rdi],dx
  408d43:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408d4a:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408d4e:	(bad)  
  408d4f:	(bad)  
  408d50:	(bad)  
  408d51:	(bad)  
  408d52:	xor    eax,0x31363563
  408d57:	cmp    DWORD PTR [rbx],esi
  408d59:	xor    al,0x65
  408d5b:	xor    BYTE PTR [rax],bh
  408d5d:	cmp    DWORD PTR [rip+0x1],eax        # 0x408d64
  408d63:	(bad)  
  408d64:	push   rbx
  408d65:	jns    0x408dda
  408d67:	je     0x408dce
  408d69:	ins    DWORD PTR es:[rdi],dx
  408d6a:	cs push rdi
  408d6c:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408d73:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408d75:	jb     0x408de4
  408d77:	jae    0x408da7
  408d79:	rex.R outs dx,DWORD PTR ds:[rsi]
  408d7b:	movsxd ebp,DWORD PTR [rbx+0x53]
  408d7e:	je     0x408df9
  408d80:	ins    BYTE PTR es:[rdi],dx
  408d81:	add    DWORD PTR gs:[rax],eax
  408d84:	add    BYTE PTR [rax],al
  408d86:	(bad)  
  408d87:	jbe    0x408dea
  408d89:	ins    BYTE PTR es:[rdi],dx
  408d8a:	jne    0x408df1
  408d8c:	pop    rdi
  408d8d:	pop    rdi
  408d8e:	add    BYTE PTR [rax],cl
  408d90:	add    al,BYTE PTR [rax]
  408d92:	add    BYTE PTR [rax],al
  408d94:	add    eax,0xb000000
  408d99:	rex.XB add BYTE PTR [r9],al
  408d9c:	add    BYTE PTR [rax],al
  408d9e:	add    bh,bh
  408da0:	(bad)  
  408da1:	(bad)  
  408da2:	inc    DWORD PTR [rcx]
  408da4:	add    BYTE PTR [rax],al
  408da6:	add    BYTE PTR [rax],al
  408da8:	add    BYTE PTR [rax],al
  408daa:	add    BYTE PTR [rdx+rax*1],cl
  408dad:	add    BYTE PTR [rax],al
  408daf:	add    BYTE PTR [rdi+0x53],dl
  408db2:	jns    0x408e27
  408db4:	je     0x408e1b
  408db6:	ins    DWORD PTR es:[rdi],dx
  408db7:	cs push rdi
  408db9:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408dc0:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408dc2:	jb     0x408e31
  408dc4:	jae    0x408df2
  408dc6:	and    BYTE PTR [rsi+0x65],dl
  408dc9:	jb     0x408e3e
  408dcb:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408dd2:	xor    BYTE PTR cs:[rsi],ch
  408dd5:	xor    BYTE PTR [rax+riz*1],ch
  408dd8:	rex.XB jne 0x408e47
  408ddb:	je     0x408e52
  408ddd:	jb     0x408e44
  408ddf:	cmp    eax,0x7475656e
  408de4:	jb     0x408e47
  408de6:	ins    BYTE PTR es:[rdi],dx
  408de7:	sub    al,0x20
  408de9:	push   rax
  408dea:	jne    0x408e4e
  408dec:	ins    BYTE PTR es:[rdi],dx
  408ded:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408df4:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408df8:	(bad)  
  408df9:	(bad)  
  408dfa:	(bad)  
  408dfb:	(bad)  
  408dfc:	xor    eax,0x31363563
  408e01:	cmp    DWORD PTR [rbx],esi
  408e03:	xor    al,0x65
  408e05:	xor    BYTE PTR [rax],bh
  408e07:	cmp    DWORD PTR [rip+0x1],eax        # 0x408e0e
  408e0d:	sbb    al,0x53
  408e0f:	jns    0x408e84
  408e11:	je     0x408e78
  408e13:	ins    DWORD PTR es:[rdi],dx
  408e14:	cs push rdi
  408e16:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408e1d:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408e1f:	jb     0x408e8e
  408e21:	jae    0x408e51
  408e23:	rex.WB ins DWORD PTR es:[rdi],dx
  408e25:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  408e28:	fs add DWORD PTR gs:[rax],eax
  408e2c:	add    BYTE PTR [rax],al
  408e2e:	(bad)  
  408e2f:	jbe    0x408e92
  408e31:	ins    BYTE PTR es:[rdi],dx
  408e32:	jne    0x408e99
  408e34:	pop    rdi
  408e35:	pop    rdi
  408e36:	add    BYTE PTR [rax],cl
  408e38:	add    al,BYTE PTR [rax]
  408e3a:	add    BYTE PTR [rax],al
  408e3c:	add    BYTE PTR [rax],al
  408e3e:	add    BYTE PTR [rax],al
  408e40:	or     eax,DWORD PTR [rax+rax*1+0x1]
  408e44:	add    BYTE PTR [rax],al
  408e46:	add    bh,bh
  408e48:	(bad)  
  408e49:	(bad)  
  408e4a:	inc    DWORD PTR [rcx]
  408e4c:	add    BYTE PTR [rax],al
  408e4e:	add    BYTE PTR [rax],al
  408e50:	add    BYTE PTR [rax],al
  408e52:	add    BYTE PTR [rdx+rax*1],cl
  408e55:	add    BYTE PTR [rax],al
  408e57:	add    BYTE PTR [rcx+0x53],dl
  408e5a:	jns    0x408ecf
  408e5c:	je     0x408ec3
  408e5e:	ins    DWORD PTR es:[rdi],dx
  408e5f:	cs rex.R jb 0x408ec4
  408e63:	ja     0x408ece
  408e65:	outs   dx,BYTE PTR ds:[rsi]
  408e66:	addr32 sub al,0x20
  408e69:	push   rsi
  408e6a:	gs jb  0x408ee0
  408e6d:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408e74:	xor    BYTE PTR cs:[rsi],ch
  408e77:	xor    BYTE PTR [rax+riz*1],ch
  408e7a:	rex.XB jne 0x408ee9
  408e7d:	je     0x408ef4
  408e7f:	jb     0x408ee6
  408e81:	cmp    eax,0x7475656e
  408e86:	jb     0x408ee9
  408e88:	ins    BYTE PTR es:[rdi],dx
  408e89:	sub    al,0x20
  408e8b:	push   rax
  408e8c:	jne    0x408ef0
  408e8e:	ins    BYTE PTR es:[rdi],dx
  408e8f:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408e96:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408e9a:	(bad)  
  408e9b:	xor    BYTE PTR [rbx],dh
  408e9d:	xor    ax,0x3766
  408ea1:	xor    WORD PTR [rcx],si
  408ea4:	fs xor eax,0x61336130
  408eaa:	add    eax,0x1
  408eaf:	adc    al,0x53
  408eb1:	jns    0x408f26
  408eb3:	je     0x408f1a
  408eb5:	ins    DWORD PTR es:[rdi],dx
  408eb6:	cs rex.R jb 0x408f1b
  408eba:	ja     0x408f25
  408ebc:	outs   dx,BYTE PTR ds:[rsi]
  408ebd:	addr32 cs push rax
  408ec0:	outs   dx,DWORD PTR ds:[rsi]
  408ec1:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  408ec8:	add    DWORD PTR [rax+0x1],edi
  408ecb:	jns    0x408ecd
  408ecd:	add    BYTE PTR [rax],cl
  408ecf:	or     BYTE PTR [rdx],al
  408ed1:	add    BYTE PTR [rax],al
  408ed3:	add    BYTE PTR [rsi+0x0],dl
  408ed6:	add    BYTE PTR [rax],al
  408ed8:	sub    eax,0xb000000
  408edd:	add    BYTE PTR [r9],r8b
  408ee0:	add    BYTE PTR [rax],al
  408ee2:	add    bh,bh
  408ee4:	(bad)  
  408ee5:	(bad)  
  408ee6:	inc    DWORD PTR [rcx]
  408ee8:	add    BYTE PTR [rax],al
  408eea:	add    BYTE PTR [rax],al
  408eec:	add    BYTE PTR [rax],al
  408eee:	add    BYTE PTR [rdx+rax*1],cl
  408ef1:	add    BYTE PTR [rax],al
  408ef3:	add    BYTE PTR [rdi+0x53],dl
  408ef6:	jns    0x408f6b
  408ef8:	je     0x408f5f
  408efa:	ins    DWORD PTR es:[rdi],dx
  408efb:	cs push rdi
  408efd:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408f04:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408f06:	jb     0x408f75
  408f08:	jae    0x408f36
  408f0a:	and    BYTE PTR [rsi+0x65],dl
  408f0d:	jb     0x408f82
  408f0f:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408f16:	xor    BYTE PTR cs:[rsi],ch
  408f19:	xor    BYTE PTR [rax+riz*1],ch
  408f1c:	rex.XB jne 0x408f8b
  408f1f:	je     0x408f96
  408f21:	jb     0x408f88
  408f23:	cmp    eax,0x7475656e
  408f28:	jb     0x408f8b
  408f2a:	ins    BYTE PTR es:[rdi],dx
  408f2b:	sub    al,0x20
  408f2d:	push   rax
  408f2e:	jne    0x408f92
  408f30:	ins    BYTE PTR es:[rdi],dx
  408f31:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  408f38:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  408f3c:	(bad)  
  408f3d:	(bad)  
  408f3e:	(bad)  
  408f3f:	(bad)  
  408f40:	xor    eax,0x31363563
  408f45:	cmp    DWORD PTR [rbx],esi
  408f47:	xor    al,0x65
  408f49:	xor    BYTE PTR [rax],bh
  408f4b:	cmp    DWORD PTR [rip+0x1],eax        # 0x408f52
  408f51:	sbb    al,0x53
  408f53:	jns    0x408fc8
  408f55:	je     0x408fbc
  408f57:	ins    DWORD PTR es:[rdi],dx
  408f58:	cs push rdi
  408f5a:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  408f61:	rex.RX outs dx,DWORD PTR ds:[rsi]
  408f63:	jb     0x408fd2
  408f65:	jae    0x408f95
  408f67:	push   rax
  408f68:	(bad)  
  408f69:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x5
  408f72:	add    al,0x5f
  408f74:	(bad)  
  408f75:	ins    BYTE PTR es:[rdi],dx
  408f76:	ins    BYTE PTR es:[rdi],dx
  408f77:	add    al,0x5f
  408f79:	je     0x408fea
  408f7b:	jo     0x408f82
  408f7d:	pop    rdi
  408f7e:	ins    BYTE PTR es:[rdi],dx
  408f7f:	gs data16 je 0x408f89
  408f83:	pop    rdi
  408f84:	jb     0x408fef
  408f86:	addr32 push 0x625f0774
  408f8c:	outs   dx,DWORD PTR ds:[rsi]
  408f8d:	je     0x409003
  408f8f:	outs   dx,DWORD PTR ds:[rsi]
  408f90:	ins    DWORD PTR es:[rdi],dx
  408f91:	add    BYTE PTR [rax],al
  408f93:	add    BYTE PTR [rax],al
  408f95:	add    BYTE PTR [rcx],al
  408f97:	or     BYTE PTR [rax],cl
  408f99:	or     BYTE PTR [rax],cl
  408f9b:	add    al,BYTE PTR [rax]
  408f9d:	add    BYTE PTR [rax],al
  408f9f:	add    BYTE PTR [rdx],al
  408fa1:	add    BYTE PTR [rax],al
  408fa3:	add    BYTE PTR [rdx],al
  408fa5:	add    BYTE PTR [rax],al
  408fa7:	add    BYTE PTR [rax],al
  408fa9:	add    BYTE PTR [rax],al
  408fab:	add    BYTE PTR [rdx],al
  408fad:	add    BYTE PTR [rax],al
  408faf:	add    BYTE PTR [rbx],cl
  408fb1:	add    BYTE PTR [r9],al
  408fb4:	add    BYTE PTR [rax],al
  408fb6:	add    bh,bh
  408fb8:	(bad)  
  408fb9:	(bad)  
  408fba:	inc    DWORD PTR [rcx]
  408fbc:	add    BYTE PTR [rax],al
  408fbe:	add    BYTE PTR [rax],al
  408fc0:	add    BYTE PTR [rax],al
  408fc2:	add    BYTE PTR [rdx+rax*1],cl
  408fc5:	add    BYTE PTR [rax],al
  408fc7:	add    BYTE PTR [rcx+0x53],dl
  408fca:	jns    0x40903f
  408fcc:	je     0x409033
  408fce:	ins    DWORD PTR es:[rdi],dx
  408fcf:	cs rex.R jb 0x409034
  408fd3:	ja     0x40903e
  408fd5:	outs   dx,BYTE PTR ds:[rsi]
  408fd6:	addr32 sub al,0x20
  408fd9:	push   rsi
  408fda:	gs jb  0x409050
  408fdd:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  408fe4:	xor    BYTE PTR cs:[rsi],ch
  408fe7:	xor    BYTE PTR [rax+riz*1],ch
  408fea:	rex.XB jne 0x409059
  408fed:	je     0x409064
  408fef:	jb     0x409056
  408ff1:	cmp    eax,0x7475656e
  408ff6:	jb     0x409059
  408ff8:	ins    BYTE PTR es:[rdi],dx
  408ff9:	sub    al,0x20
  408ffb:	push   rax
  408ffc:	jne    0x409060
  408ffe:	ins    BYTE PTR es:[rdi],dx
  408fff:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  409006:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40900a:	(bad)  
  40900b:	xor    BYTE PTR [rbx],dh
  40900d:	xor    ax,0x3766
  409011:	xor    WORD PTR [rcx],si
  409014:	fs xor eax,0x61336130
  40901a:	add    eax,0x1
  40901f:	adc    edx,DWORD PTR [rbx+0x79]
  409022:	jae    0x409098
  409024:	gs ins DWORD PTR es:[rdi],dx
  409026:	cs rex.R jb 0x40908b
  40902a:	ja     0x409095
  40902c:	outs   dx,BYTE PTR ds:[rsi]
  40902d:	addr32 cs push rbx
  409030:	imul   edi,DWORD PTR [rdx+0x65],0x2
  409037:	add    eax,0x74646977
  40903c:	push   0x69656806
  409041:	addr32 push 0x8000074
  409047:	or     BYTE PTR [rdx],al
  409049:	add    BYTE PTR [rax],al
  40904b:	add    BYTE PTR [rax],ch
  40904d:	add    DWORD PTR [rax],eax
  40904f:	add    BYTE PTR [rip+0xb000000],bl        # 0xb409055
  409055:	or     BYTE PTR [rax+rax*1],al
  409058:	add    BYTE PTR [rax],al
  40905a:	add    DWORD PTR [rbx],esp
  40905c:	rex.XB push 0x65736f6f
  409062:	and    BYTE PTR [rax+rbp*2+0x69],dh
  409066:	jae    0x409088
  409068:	outs   dx,DWORD PTR ds:[rsi]
  409069:	jo     0x4090df
  40906b:	imul   ebp,DWORD PTR [rdi+0x6e],0x206f7420
  409072:	(bad)  
  409073:	fs and BYTE PTR fs:[rsi+0x65],ah
  409078:	(bad)  
  409079:	je     0x4090f0
  40907b:	jb     0x4090e2
  40907d:	jae    0x4090ad
  40907f:	add    al,BYTE PTR [rcx]
  409081:	rex.X add BYTE PTR [rcx],al
  409084:	add    BYTE PTR [rax],al
  409086:	add    bh,bh
  409088:	(bad)  
  409089:	(bad)  
  40908a:	inc    DWORD PTR [rcx]
  40908c:	add    BYTE PTR [rax],al
  40908e:	add    BYTE PTR [rax],al
  409090:	add    BYTE PTR [rax],al
  409092:	add    BYTE PTR [rdx+rax*1],cl
  409095:	add    BYTE PTR [rax],al
  409097:	add    BYTE PTR [rdi+0x53],dl
  40909a:	jns    0x40910f
  40909c:	je     0x409103
  40909e:	ins    DWORD PTR es:[rdi],dx
  40909f:	cs push rdi
  4090a1:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4090a8:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4090aa:	jb     0x409119
  4090ac:	jae    0x4090da
  4090ae:	and    BYTE PTR [rsi+0x65],dl
  4090b1:	jb     0x409126
  4090b3:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4090ba:	xor    BYTE PTR cs:[rsi],ch
  4090bd:	xor    BYTE PTR [rax+riz*1],ch
  4090c0:	rex.XB jne 0x40912f
  4090c3:	je     0x40913a
  4090c5:	jb     0x40912c
  4090c7:	cmp    eax,0x7475656e
  4090cc:	jb     0x40912f
  4090ce:	ins    BYTE PTR es:[rdi],dx
  4090cf:	sub    al,0x20
  4090d1:	push   rax
  4090d2:	jne    0x409136
  4090d4:	ins    BYTE PTR es:[rdi],dx
  4090d5:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4090dc:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4090e0:	(bad)  
  4090e1:	(bad)  
  4090e2:	(bad)  
  4090e3:	(bad)  
  4090e4:	xor    eax,0x31363563
  4090e9:	cmp    DWORD PTR [rbx],esi
  4090eb:	xor    al,0x65
  4090ed:	xor    BYTE PTR [rax],bh
  4090ef:	cmp    DWORD PTR [rip+0x1],eax        # 0x4090f6
  4090f5:	(bad)  
  4090f6:	push   rbx
  4090f7:	jns    0x40916c
  4090f9:	je     0x409160
  4090fb:	ins    DWORD PTR es:[rdi],dx
  4090fc:	cs push rdi
  4090fe:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  409105:	rex.RX outs dx,DWORD PTR ds:[rsi]
  409107:	jb     0x409176
  409109:	jae    0x409139
  40910b:	rex.R outs dx,DWORD PTR ds:[rsi]
  40910d:	movsxd ebp,DWORD PTR [rbx+0x53]
  409110:	je     0x40918b
  409112:	ins    BYTE PTR es:[rdi],dx
  409113:	add    DWORD PTR gs:[rax],eax
  409116:	add    BYTE PTR [rax],al
  409118:	(bad)  
  409119:	jbe    0x40917c
  40911b:	ins    BYTE PTR es:[rdi],dx
  40911c:	jne    0x409183
  40911e:	pop    rdi
  40911f:	pop    rdi
  409120:	add    BYTE PTR [rax],cl
  409122:	add    al,BYTE PTR [rax]
  409124:	add    BYTE PTR [rax],al
  409126:	add    eax,0xb000000
  40912b:	rex.XB add BYTE PTR [r9],al
  40912e:	add    BYTE PTR [rax],al
  409130:	add    bh,bh
  409132:	(bad)  
  409133:	(bad)  
  409134:	inc    DWORD PTR [rcx]
  409136:	add    BYTE PTR [rax],al
  409138:	add    BYTE PTR [rax],al
  40913a:	add    BYTE PTR [rax],al
  40913c:	add    BYTE PTR [rdx+rax*1],cl
  40913f:	add    BYTE PTR [rax],al
  409141:	add    BYTE PTR [rdi+0x53],dl
  409144:	jns    0x4091b9
  409146:	je     0x4091ad
  409148:	ins    DWORD PTR es:[rdi],dx
  409149:	cs push rdi
  40914b:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  409152:	rex.RX outs dx,DWORD PTR ds:[rsi]
  409154:	jb     0x4091c3
  409156:	jae    0x409184
  409158:	and    BYTE PTR [rsi+0x65],dl
  40915b:	jb     0x4091d0
  40915d:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  409164:	xor    BYTE PTR cs:[rsi],ch
  409167:	xor    BYTE PTR [rax+riz*1],ch
  40916a:	rex.XB jne 0x4091d9
  40916d:	je     0x4091e4
  40916f:	jb     0x4091d6
  409171:	cmp    eax,0x7475656e
  409176:	jb     0x4091d9
  409178:	ins    BYTE PTR es:[rdi],dx
  409179:	sub    al,0x20
  40917b:	push   rax
  40917c:	jne    0x4091e0
  40917e:	ins    BYTE PTR es:[rdi],dx
  40917f:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  409186:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40918a:	(bad)  
  40918b:	(bad)  
  40918c:	(bad)  
  40918d:	(bad)  
  40918e:	xor    eax,0x31363563
  409193:	cmp    DWORD PTR [rbx],esi
  409195:	xor    al,0x65
  409197:	xor    BYTE PTR [rax],bh
  409199:	cmp    DWORD PTR [rip+0x1],eax        # 0x4091a0
  40919f:	sbb    al,0x53
  4091a1:	jns    0x409216
  4091a3:	je     0x40920a
  4091a5:	ins    DWORD PTR es:[rdi],dx
  4091a6:	cs push rdi
  4091a8:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4091af:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4091b1:	jb     0x409220
  4091b3:	jae    0x4091e3
  4091b5:	rex.WB ins DWORD PTR es:[rdi],dx
  4091b7:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  4091ba:	fs add DWORD PTR gs:[rax],eax
  4091be:	add    BYTE PTR [rax],al
  4091c0:	(bad)  
  4091c1:	jbe    0x409224
  4091c3:	ins    BYTE PTR es:[rdi],dx
  4091c4:	jne    0x40922b
  4091c6:	pop    rdi
  4091c7:	pop    rdi
  4091c8:	add    BYTE PTR [rax],cl
  4091ca:	add    al,BYTE PTR [rax]
  4091cc:	add    BYTE PTR [rax],al
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	add    BYTE PTR [rax],al
  4091d2:	or     eax,DWORD PTR [rax+rax*1+0x1]
  4091d6:	add    BYTE PTR [rax],al
  4091d8:	add    bh,bh
  4091da:	(bad)  
  4091db:	(bad)  
  4091dc:	inc    DWORD PTR [rcx]
  4091de:	add    BYTE PTR [rax],al
  4091e0:	add    BYTE PTR [rax],al
  4091e2:	add    BYTE PTR [rax],al
  4091e4:	add    BYTE PTR [rdx+rax*1],cl
  4091e7:	add    BYTE PTR [rax],al
  4091e9:	add    BYTE PTR [rcx+0x53],dl
  4091ec:	jns    0x409261
  4091ee:	je     0x409255
  4091f0:	ins    DWORD PTR es:[rdi],dx
  4091f1:	cs rex.R jb 0x409256
  4091f5:	ja     0x409260
  4091f7:	outs   dx,BYTE PTR ds:[rsi]
  4091f8:	addr32 sub al,0x20
  4091fb:	push   rsi
  4091fc:	gs jb  0x409272
  4091ff:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  409206:	xor    BYTE PTR cs:[rsi],ch
  409209:	xor    BYTE PTR [rax+riz*1],ch
  40920c:	rex.XB jne 0x40927b
  40920f:	je     0x409286
  409211:	jb     0x409278
  409213:	cmp    eax,0x7475656e
  409218:	jb     0x40927b
  40921a:	ins    BYTE PTR es:[rdi],dx
  40921b:	sub    al,0x20
  40921d:	push   rax
  40921e:	jne    0x409282
  409220:	ins    BYTE PTR es:[rdi],dx
  409221:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  409228:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40922c:	(bad)  
  40922d:	xor    BYTE PTR [rbx],dh
  40922f:	xor    ax,0x3766
  409233:	xor    WORD PTR [rcx],si
  409236:	fs xor eax,0x61336130
  40923c:	add    eax,0x1
  409241:	adc    al,0x53
  409243:	jns    0x4092b8
  409245:	je     0x4092ac
  409247:	ins    DWORD PTR es:[rdi],dx
  409248:	cs rex.R jb 0x4092ad
  40924c:	ja     0x4092b7
  40924e:	outs   dx,BYTE PTR ds:[rsi]
  40924f:	addr32 cs push rax
  409252:	outs   dx,DWORD PTR ds:[rsi]
  409253:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  40925a:	add    DWORD PTR [rax+0x1],edi
  40925d:	jns    0x40925f
  40925f:	add    BYTE PTR [rax],cl
  409261:	or     BYTE PTR [rdx],al
  409263:	add    BYTE PTR [rax],al
  409265:	add    BYTE PTR [rsi+0x0],dl
  409268:	add    BYTE PTR [rax],al
  40926a:	sbb    BYTE PTR [rax],al
  40926c:	add    BYTE PTR [rax],al
  40926e:	or     eax,DWORD PTR [rbp+0x0]
  409271:	add    DWORD PTR [rax],eax
  409273:	add    BYTE PTR [rax],al
  409275:	(bad)  
  409276:	(bad)  
  409277:	(bad)  
  409278:	inc    DWORD PTR [rcx]
  40927a:	add    BYTE PTR [rax],al
  40927c:	add    BYTE PTR [rax],al
  40927e:	add    BYTE PTR [rax],al
  409280:	add    BYTE PTR [rdx+rax*1],cl
  409283:	add    BYTE PTR [rax],al
  409285:	add    BYTE PTR [rdi+0x53],dl
  409288:	jns    0x4092fd
  40928a:	je     0x4092f1
  40928c:	ins    DWORD PTR es:[rdi],dx
  40928d:	cs push rdi
  40928f:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  409296:	rex.RX outs dx,DWORD PTR ds:[rsi]
  409298:	jb     0x409307
  40929a:	jae    0x4092c8
  40929c:	and    BYTE PTR [rsi+0x65],dl
  40929f:	jb     0x409314
  4092a1:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4092a8:	xor    BYTE PTR cs:[rsi],ch
  4092ab:	xor    BYTE PTR [rax+riz*1],ch
  4092ae:	rex.XB jne 0x40931d
  4092b1:	je     0x409328
  4092b3:	jb     0x40931a
  4092b5:	cmp    eax,0x7475656e
  4092ba:	jb     0x40931d
  4092bc:	ins    BYTE PTR es:[rdi],dx
  4092bd:	sub    al,0x20
  4092bf:	push   rax
  4092c0:	jne    0x409324
  4092c2:	ins    BYTE PTR es:[rdi],dx
  4092c3:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4092ca:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4092ce:	(bad)  
  4092cf:	(bad)  
  4092d0:	(bad)  
  4092d1:	(bad)  
  4092d2:	xor    eax,0x31363563
  4092d7:	cmp    DWORD PTR [rbx],esi
  4092d9:	xor    al,0x65
  4092db:	xor    BYTE PTR [rax],bh
  4092dd:	cmp    DWORD PTR [rip+0x1],eax        # 0x4092e4
  4092e3:	sbb    al,0x53
  4092e5:	jns    0x40935a
  4092e7:	je     0x40934e
  4092e9:	ins    DWORD PTR es:[rdi],dx
  4092ea:	cs push rdi
  4092ec:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4092f3:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4092f5:	jb     0x409364
  4092f7:	jae    0x409327
  4092f9:	push   rax
  4092fa:	(bad)  
  4092fb:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x5
  409304:	add    al,0x5f
  409306:	(bad)  
  409307:	ins    BYTE PTR es:[rdi],dx
  409308:	ins    BYTE PTR es:[rdi],dx
  409309:	add    al,0x5f
  40930b:	je     0x40937c
  40930d:	jo     0x409314
  40930f:	pop    rdi
  409310:	ins    BYTE PTR es:[rdi],dx
  409311:	gs data16 je 0x40931b
  409315:	pop    rdi
  409316:	jb     0x409381
  409318:	addr32 push 0x625f0774
  40931e:	outs   dx,DWORD PTR ds:[rsi]
  40931f:	je     0x409395
  409321:	outs   dx,DWORD PTR ds:[rsi]
  409322:	ins    DWORD PTR es:[rdi],dx
  409323:	add    BYTE PTR [rax],al
  409325:	add    BYTE PTR [rax],al
  409327:	add    BYTE PTR [rcx],al
  409329:	or     BYTE PTR [rax],cl
  40932b:	or     BYTE PTR [rax],cl
  40932d:	add    al,BYTE PTR [rax]
  40932f:	add    BYTE PTR [rax],al
  409331:	add    BYTE PTR [rax],bl
  409333:	add    BYTE PTR [rax],al
  409335:	add    BYTE PTR [rdx],al
  409337:	add    BYTE PTR [rax],al
  409339:	add    BYTE PTR [rax],al
  40933b:	add    BYTE PTR [rax],al
  40933d:	add    BYTE PTR [rdx],al
  40933f:	add    BYTE PTR [rax],al
  409341:	add    BYTE PTR [rbx],cl
  409343:	add    BYTE PTR [r9],al
  409346:	add    BYTE PTR [rax],al
  409348:	add    bh,bh
  40934a:	(bad)  
  40934b:	(bad)  
  40934c:	inc    DWORD PTR [rcx]
  40934e:	add    BYTE PTR [rax],al
  409350:	add    BYTE PTR [rax],al
  409352:	add    BYTE PTR [rax],al
  409354:	add    BYTE PTR [rdx+rax*1],cl
  409357:	add    BYTE PTR [rax],al
  409359:	add    BYTE PTR [rcx+0x53],dl
  40935c:	jns    0x4093d1
  40935e:	je     0x4093c5
  409360:	ins    DWORD PTR es:[rdi],dx
  409361:	cs rex.R jb 0x4093c6
  409365:	ja     0x4093d0
  409367:	outs   dx,BYTE PTR ds:[rsi]
  409368:	addr32 sub al,0x20
  40936b:	push   rsi
  40936c:	gs jb  0x4093e2
  40936f:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  409376:	xor    BYTE PTR cs:[rsi],ch
  409379:	xor    BYTE PTR [rax+riz*1],ch
  40937c:	rex.XB jne 0x4093eb
  40937f:	je     0x4093f6
  409381:	jb     0x4093e8
  409383:	cmp    eax,0x7475656e
  409388:	jb     0x4093eb
  40938a:	ins    BYTE PTR es:[rdi],dx
  40938b:	sub    al,0x20
  40938d:	push   rax
  40938e:	jne    0x4093f2
  409390:	ins    BYTE PTR es:[rdi],dx
  409391:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  409398:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40939c:	(bad)  
  40939d:	xor    BYTE PTR [rbx],dh
  40939f:	xor    ax,0x3766
  4093a3:	xor    WORD PTR [rcx],si
  4093a6:	fs xor eax,0x61336130
  4093ac:	add    eax,0x1
  4093b1:	adc    edx,DWORD PTR [rbx+0x79]
  4093b4:	jae    0x40942a
  4093b6:	gs ins DWORD PTR es:[rdi],dx
  4093b8:	cs rex.R jb 0x40941d
  4093bc:	ja     0x409427
  4093be:	outs   dx,BYTE PTR ds:[rsi]
  4093bf:	addr32 cs push rbx
  4093c2:	imul   edi,DWORD PTR [rdx+0x65],0x2
  4093c9:	add    eax,0x74646977
  4093ce:	push   0x69656806
  4093d3:	addr32 push 0x8000074
  4093d9:	or     BYTE PTR [rdx],al
  4093db:	add    BYTE PTR [rax],al
  4093dd:	add    BYTE PTR [rax],ch
  4093df:	add    DWORD PTR [rax],eax
  4093e1:	add    BYTE PTR [rcx],dl
  4093e3:	add    BYTE PTR [rax],al
  4093e5:	add    BYTE PTR [rbx],cl
  4093e7:	or     BYTE PTR [rdx],al
  4093e9:	add    BYTE PTR [rax],al
  4093eb:	add    BYTE PTR [rcx],al
  4093ed:	add    eax,DWORD PTR [rcx+0x64]
  4093f0:	rex.XB add BYTE PTR fs:[r9],al
  4093f4:	add    BYTE PTR [rax],al
  4093f6:	add    bh,bh
  4093f8:	(bad)  
  4093f9:	(bad)  
  4093fa:	inc    DWORD PTR [rcx]
  4093fc:	add    BYTE PTR [rax],al
  4093fe:	add    BYTE PTR [rax],al
  409400:	add    BYTE PTR [rax],al
  409402:	add    BYTE PTR [rdx+rax*1],cl
  409405:	add    BYTE PTR [rax],al
  409407:	add    BYTE PTR [rdi+0x53],dl
  40940a:	jns    0x40947f
  40940c:	je     0x409473
  40940e:	ins    DWORD PTR es:[rdi],dx
  40940f:	cs push rdi
  409411:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  409418:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40941a:	jb     0x409489
  40941c:	jae    0x40944a
  40941e:	and    BYTE PTR [rsi+0x65],dl
  409421:	jb     0x409496
  409423:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40942a:	xor    BYTE PTR cs:[rsi],ch
  40942d:	xor    BYTE PTR [rax+riz*1],ch
  409430:	rex.XB jne 0x40949f
  409433:	je     0x4094aa
  409435:	jb     0x40949c
  409437:	cmp    eax,0x7475656e
  40943c:	jb     0x40949f
  40943e:	ins    BYTE PTR es:[rdi],dx
  40943f:	sub    al,0x20
  409441:	push   rax
  409442:	jne    0x4094a6
  409444:	ins    BYTE PTR es:[rdi],dx
  409445:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40944c:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  409450:	(bad)  
  409451:	(bad)  
  409452:	(bad)  
  409453:	(bad)  
  409454:	xor    eax,0x31363563
  409459:	cmp    DWORD PTR [rbx],esi
  40945b:	xor    al,0x65
  40945d:	xor    BYTE PTR [rax],bh
  40945f:	cmp    DWORD PTR [rip+0x1],eax        # 0x409466
  409465:	sbb    al,0x53
  409467:	jns    0x4094dc
  409469:	je     0x4094d0
  40946b:	ins    DWORD PTR es:[rdi],dx
  40946c:	cs push rdi
  40946e:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  409475:	rex.RX outs dx,DWORD PTR ds:[rsi]
  409477:	jb     0x4094e6
  409479:	jae    0x4094a9
  40947b:	rex.WB ins DWORD PTR es:[rdi],dx
  40947d:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  409480:	fs add DWORD PTR gs:[rax],eax
  409484:	add    BYTE PTR [rax],al
  409486:	(bad)  
  409487:	jbe    0x4094ea
  409489:	ins    BYTE PTR es:[rdi],dx
  40948a:	jne    0x4094f1
  40948c:	pop    rdi
  40948d:	pop    rdi
  40948e:	add    BYTE PTR [rax],cl
  409490:	add    al,BYTE PTR [rax]
  409492:	add    BYTE PTR [rax],al
  409494:	add    BYTE PTR [rax],al
  409496:	add    BYTE PTR [rax],al
  409498:	or     eax,DWORD PTR [rax+rax*1+0x1]
  40949c:	add    BYTE PTR [rax],al
  40949e:	add    bh,bh
  4094a0:	(bad)  
  4094a1:	(bad)  
  4094a2:	inc    DWORD PTR [rcx]
  4094a4:	add    BYTE PTR [rax],al
  4094a6:	add    BYTE PTR [rax],al
  4094a8:	add    BYTE PTR [rax],al
  4094aa:	add    BYTE PTR [rdx+rax*1],cl
  4094ad:	add    BYTE PTR [rax],al
  4094af:	add    BYTE PTR [rcx+0x53],dl
  4094b2:	jns    0x409527
  4094b4:	je     0x40951b
  4094b6:	ins    DWORD PTR es:[rdi],dx
  4094b7:	cs rex.R jb 0x40951c
  4094bb:	ja     0x409526
  4094bd:	outs   dx,BYTE PTR ds:[rsi]
  4094be:	addr32 sub al,0x20
  4094c1:	push   rsi
  4094c2:	gs jb  0x409538
  4094c5:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4094cc:	xor    BYTE PTR cs:[rsi],ch
  4094cf:	xor    BYTE PTR [rax+riz*1],ch
  4094d2:	rex.XB jne 0x409541
  4094d5:	je     0x40954c
  4094d7:	jb     0x40953e
  4094d9:	cmp    eax,0x7475656e
  4094de:	jb     0x409541
  4094e0:	ins    BYTE PTR es:[rdi],dx
  4094e1:	sub    al,0x20
  4094e3:	push   rax
  4094e4:	jne    0x409548
  4094e6:	ins    BYTE PTR es:[rdi],dx
  4094e7:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4094ee:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4094f2:	(bad)  
  4094f3:	xor    BYTE PTR [rbx],dh
  4094f5:	xor    ax,0x3766
  4094f9:	xor    WORD PTR [rcx],si
  4094fc:	fs xor eax,0x61336130
  409502:	add    eax,0x1
  409507:	adc    al,0x53
  409509:	jns    0x40957e
  40950b:	je     0x409572
  40950d:	ins    DWORD PTR es:[rdi],dx
  40950e:	cs rex.R jb 0x409573
  409512:	ja     0x40957d
  409514:	outs   dx,BYTE PTR ds:[rsi]
  409515:	addr32 cs push rax
  409518:	outs   dx,DWORD PTR ds:[rsi]
  409519:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  409520:	add    DWORD PTR [rax+0x1],edi
  409523:	jns    0x409525
  409525:	add    BYTE PTR [rax],cl
  409527:	or     BYTE PTR [rdx],al
  409529:	add    BYTE PTR [rax],al
  40952b:	add    BYTE PTR [rax],ah
  40952d:	add    BYTE PTR [rax],al
  40952f:	add    BYTE PTR [rax],bl
  409531:	add    BYTE PTR [rax],al
  409533:	add    BYTE PTR [rbx],cl
  409535:	add    BYTE PTR [r9],r8b
  409538:	add    BYTE PTR [rax],al
  40953a:	add    bh,bh
  40953c:	(bad)  
  40953d:	(bad)  
  40953e:	inc    DWORD PTR [rcx]
  409540:	add    BYTE PTR [rax],al
  409542:	add    BYTE PTR [rax],al
  409544:	add    BYTE PTR [rax],al
  409546:	add    BYTE PTR [rdx+rax*1],cl
  409549:	add    BYTE PTR [rax],al
  40954b:	add    BYTE PTR [rdi+0x53],dl
  40954e:	jns    0x4095c3
  409550:	je     0x4095b7
  409552:	ins    DWORD PTR es:[rdi],dx
  409553:	cs push rdi
  409555:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40955c:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40955e:	jb     0x4095cd
  409560:	jae    0x40958e
  409562:	and    BYTE PTR [rsi+0x65],dl
  409565:	jb     0x4095da
  409567:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40956e:	xor    BYTE PTR cs:[rsi],ch
  409571:	xor    BYTE PTR [rax+riz*1],ch
  409574:	rex.XB jne 0x4095e3
  409577:	je     0x4095ee
  409579:	jb     0x4095e0
  40957b:	cmp    eax,0x7475656e
  409580:	jb     0x4095e3
  409582:	ins    BYTE PTR es:[rdi],dx
  409583:	sub    al,0x20
  409585:	push   rax
  409586:	jne    0x4095ea
  409588:	ins    BYTE PTR es:[rdi],dx
  409589:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  409590:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  409594:	(bad)  
  409595:	(bad)  
  409596:	(bad)  
  409597:	(bad)  
  409598:	xor    eax,0x31363563
  40959d:	cmp    DWORD PTR [rbx],esi
  40959f:	xor    al,0x65
  4095a1:	xor    BYTE PTR [rax],bh
  4095a3:	cmp    DWORD PTR [rip+0x1],eax        # 0x4095aa
  4095a9:	sbb    al,0x53
  4095ab:	jns    0x409620
  4095ad:	je     0x409614
  4095af:	ins    DWORD PTR es:[rdi],dx
  4095b0:	cs push rdi
  4095b2:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4095b9:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4095bb:	jb     0x40962a
  4095bd:	jae    0x4095ed
  4095bf:	push   rax
  4095c0:	(bad)  
  4095c1:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x5
  4095ca:	add    al,0x5f
  4095cc:	(bad)  
  4095cd:	ins    BYTE PTR es:[rdi],dx
  4095ce:	ins    BYTE PTR es:[rdi],dx
  4095cf:	add    al,0x5f
  4095d1:	je     0x409642
  4095d3:	jo     0x4095da
  4095d5:	pop    rdi
  4095d6:	ins    BYTE PTR es:[rdi],dx
  4095d7:	gs data16 je 0x4095e1
  4095db:	pop    rdi
  4095dc:	jb     0x409647
  4095de:	addr32 push 0x625f0774
  4095e4:	outs   dx,DWORD PTR ds:[rsi]
  4095e5:	je     0x40965b
  4095e7:	outs   dx,DWORD PTR ds:[rsi]
  4095e8:	ins    DWORD PTR es:[rdi],dx
  4095e9:	add    BYTE PTR [rax],al
  4095eb:	add    BYTE PTR [rax],al
  4095ed:	add    BYTE PTR [rcx],al
  4095ef:	or     BYTE PTR [rax],cl
  4095f1:	or     BYTE PTR [rax],cl
  4095f3:	add    al,BYTE PTR [rax]
  4095f5:	add    BYTE PTR [rax],al
  4095f7:	add    BYTE PTR [rax],bl
  4095f9:	add    BYTE PTR [rax],al
  4095fb:	add    BYTE PTR [rax],ah
  4095fd:	add    BYTE PTR [rax],al
  4095ff:	add    BYTE PTR [rdx],al
  409601:	add    BYTE PTR [rax],al
  409603:	add    BYTE PTR [rdx],al
  409605:	add    BYTE PTR [rax],al
  409607:	add    BYTE PTR [rbx],cl
  409609:	add    BYTE PTR [r9],al
  40960c:	add    BYTE PTR [rax],al
  40960e:	add    bh,bh
  409610:	(bad)  
  409611:	(bad)  
  409612:	inc    DWORD PTR [rcx]
  409614:	add    BYTE PTR [rax],al
  409616:	add    BYTE PTR [rax],al
  409618:	add    BYTE PTR [rax],al
  40961a:	add    BYTE PTR [rdx+rax*1],cl
  40961d:	add    BYTE PTR [rax],al
  40961f:	add    BYTE PTR [rcx+0x53],dl
  409622:	jns    0x409697
  409624:	je     0x40968b
  409626:	ins    DWORD PTR es:[rdi],dx
  409627:	cs rex.R jb 0x40968c
  40962b:	ja     0x409696
  40962d:	outs   dx,BYTE PTR ds:[rsi]
  40962e:	addr32 sub al,0x20
  409631:	push   rsi
  409632:	gs jb  0x4096a8
  409635:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40963c:	xor    BYTE PTR cs:[rsi],ch
  40963f:	xor    BYTE PTR [rax+riz*1],ch
  409642:	rex.XB jne 0x4096b1
  409645:	je     0x4096bc
  409647:	jb     0x4096ae
  409649:	cmp    eax,0x7475656e
  40964e:	jb     0x4096b1
  409650:	ins    BYTE PTR es:[rdi],dx
  409651:	sub    al,0x20
  409653:	push   rax
  409654:	jne    0x4096b8
  409656:	ins    BYTE PTR es:[rdi],dx
  409657:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40965e:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  409662:	(bad)  
  409663:	xor    BYTE PTR [rbx],dh
  409665:	xor    ax,0x3766
  409669:	xor    WORD PTR [rcx],si
  40966c:	fs xor eax,0x61336130
  409672:	add    eax,0x1
  409677:	adc    edx,DWORD PTR [rbx+0x79]
  40967a:	jae    0x4096f0
  40967c:	gs ins DWORD PTR es:[rdi],dx
  40967e:	cs rex.R jb 0x4096e3
  409682:	ja     0x4096ed
  409684:	outs   dx,BYTE PTR ds:[rsi]
  409685:	addr32 cs push rbx
  409688:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40968f:	add    eax,0x74646977
  409694:	push   0x69656806
  409699:	addr32 push 0x8000074
  40969f:	or     BYTE PTR [rdx],al
  4096a1:	add    BYTE PTR [rax],al
  4096a3:	add    BYTE PTR [rdx],dh
  4096a5:	add    BYTE PTR [rax],al
  4096a7:	add    BYTE PTR [rdx],dh
  4096a9:	add    BYTE PTR [rax],al
  4096ab:	add    BYTE PTR [rbx],cl
  4096ad:	or     BYTE PTR [rbx],al
  4096af:	add    BYTE PTR [rax],al
  4096b1:	add    BYTE PTR [rdx],al
  4096b3:	add    DWORD PTR [rbx+0x0],eax
  4096b6:	add    DWORD PTR [rax],eax
  4096b8:	add    BYTE PTR [rax],al
  4096ba:	(bad)  
  4096bb:	(bad)  
  4096bc:	(bad)  
  4096bd:	inc    DWORD PTR [rcx]
  4096bf:	add    BYTE PTR [rax],al
  4096c1:	add    BYTE PTR [rax],al
  4096c3:	add    BYTE PTR [rax],al
  4096c5:	add    BYTE PTR [rdx+rax*1],cl
  4096c8:	add    BYTE PTR [rax],al
  4096ca:	add    BYTE PTR [rdi+0x53],dl
  4096cd:	jns    0x409742
  4096cf:	je     0x409736
  4096d1:	ins    DWORD PTR es:[rdi],dx
  4096d2:	cs push rdi
  4096d4:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4096db:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4096dd:	jb     0x40974c
  4096df:	jae    0x40970d
  4096e1:	and    BYTE PTR [rsi+0x65],dl
  4096e4:	jb     0x409759
  4096e6:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4096ed:	xor    BYTE PTR cs:[rsi],ch
  4096f0:	xor    BYTE PTR [rax+riz*1],ch
  4096f3:	rex.XB jne 0x409762
  4096f6:	je     0x40976d
  4096f8:	jb     0x40975f
  4096fa:	cmp    eax,0x7475656e
  4096ff:	jb     0x409762
  409701:	ins    BYTE PTR es:[rdi],dx
  409702:	sub    al,0x20
  409704:	push   rax
  409705:	jne    0x409769
  409707:	ins    BYTE PTR es:[rdi],dx
  409708:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40970f:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  409713:	(bad)  
  409714:	(bad)  
  409715:	(bad)  
  409716:	(bad)  
  409717:	xor    eax,0x31363563
  40971c:	cmp    DWORD PTR [rbx],esi
  40971e:	xor    al,0x65
  409720:	xor    BYTE PTR [rax],bh
  409722:	cmp    DWORD PTR [rip+0x1],eax        # 0x409729
  409728:	sbb    al,0x53
  40972a:	jns    0x40979f
  40972c:	je     0x409793
  40972e:	ins    DWORD PTR es:[rdi],dx
  40972f:	cs push rdi
  409731:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  409738:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40973a:	jb     0x4097a9
  40973c:	jae    0x40976c
  40973e:	rex.WB ins DWORD PTR es:[rdi],dx
  409740:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  409743:	fs add DWORD PTR gs:[rax],eax
  409747:	add    BYTE PTR [rax],al
  409749:	(bad)  
  40974a:	jbe    0x4097ad
  40974c:	ins    BYTE PTR es:[rdi],dx
  40974d:	jne    0x4097b4
  40974f:	pop    rdi
  409750:	pop    rdi
  409751:	add    BYTE PTR [rax],cl
  409753:	add    al,BYTE PTR [rax]
  409755:	add    BYTE PTR [rax],al
  409757:	add    BYTE PTR [rax],al
  409759:	add    BYTE PTR [rax],al
  40975b:	or     eax,DWORD PTR [rax+rax*1+0x1]
  40975f:	add    BYTE PTR [rax],al
  409761:	add    bh,bh
  409763:	(bad)  
  409764:	(bad)  
  409765:	inc    DWORD PTR [rcx]
  409767:	add    BYTE PTR [rax],al
  409769:	add    BYTE PTR [rax],al
  40976b:	add    BYTE PTR [rax],al
  40976d:	add    BYTE PTR [rdx+rax*1],cl
  409770:	add    BYTE PTR [rax],al
  409772:	add    BYTE PTR [rcx+0x53],dl
  409775:	jns    0x4097ea
  409777:	je     0x4097de
  409779:	ins    DWORD PTR es:[rdi],dx
  40977a:	cs rex.R jb 0x4097df
  40977e:	ja     0x4097e9
  409780:	outs   dx,BYTE PTR ds:[rsi]
  409781:	addr32 sub al,0x20
  409784:	push   rsi
  409785:	gs jb  0x4097fb
  409788:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40978f:	xor    BYTE PTR cs:[rsi],ch
  409792:	xor    BYTE PTR [rax+riz*1],ch
  409795:	rex.XB jne 0x409804
  409798:	je     0x40980f
  40979a:	jb     0x409801
  40979c:	cmp    eax,0x7475656e
  4097a1:	jb     0x409804
  4097a3:	ins    BYTE PTR es:[rdi],dx
  4097a4:	sub    al,0x20
  4097a6:	push   rax
  4097a7:	jne    0x40980b
  4097a9:	ins    BYTE PTR es:[rdi],dx
  4097aa:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4097b1:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4097b5:	(bad)  
  4097b6:	xor    BYTE PTR [rbx],dh
  4097b8:	xor    ax,0x3766
  4097bc:	xor    WORD PTR [rcx],si
  4097bf:	fs xor eax,0x61336130
  4097c5:	add    eax,0x1
  4097ca:	adc    al,0x53
  4097cc:	jns    0x409841
  4097ce:	je     0x409835
  4097d0:	ins    DWORD PTR es:[rdi],dx
  4097d1:	cs rex.R jb 0x409836
  4097d5:	ja     0x409840
  4097d7:	outs   dx,BYTE PTR ds:[rsi]
  4097d8:	addr32 cs push rax
  4097db:	outs   dx,DWORD PTR ds:[rsi]
  4097dc:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  4097e3:	add    DWORD PTR [rax+0x1],edi
  4097e6:	jns    0x4097e8
  4097e8:	add    BYTE PTR [rax],cl
  4097ea:	or     BYTE PTR [rdx],al
  4097ec:	add    BYTE PTR [rax],al
  4097ee:	add    BYTE PTR [rsi+0x0],dl
  4097f1:	add    BYTE PTR [rax],al
  4097f3:	leave  
  4097f4:	add    BYTE PTR [rax],al
  4097f6:	add    BYTE PTR [rbx],cl
  4097f8:	add    BYTE PTR [r9],r8b
  4097fb:	add    BYTE PTR [rax],al
  4097fd:	add    bh,bh
  4097ff:	(bad)  
  409800:	(bad)  
  409801:	inc    DWORD PTR [rcx]
  409803:	add    BYTE PTR [rax],al
  409805:	add    BYTE PTR [rax],al
  409807:	add    BYTE PTR [rax],al
  409809:	add    BYTE PTR [rdx+rax*1],cl
  40980c:	add    BYTE PTR [rax],al
  40980e:	add    BYTE PTR [rdi+0x53],dl
  409811:	jns    0x409886
  409813:	je     0x40987a
  409815:	ins    DWORD PTR es:[rdi],dx
  409816:	cs push rdi
  409818:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40981f:	rex.RX outs dx,DWORD PTR ds:[rsi]
  409821:	jb     0x409890
  409823:	jae    0x409851
  409825:	and    BYTE PTR [rsi+0x65],dl
  409828:	jb     0x40989d
  40982a:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  409831:	xor    BYTE PTR cs:[rsi],ch
  409834:	xor    BYTE PTR [rax+riz*1],ch
  409837:	rex.XB jne 0x4098a6
  40983a:	je     0x4098b1
  40983c:	jb     0x4098a3
  40983e:	cmp    eax,0x7475656e
  409843:	jb     0x4098a6
  409845:	ins    BYTE PTR es:[rdi],dx
  409846:	sub    al,0x20
  409848:	push   rax
  409849:	jne    0x4098ad
  40984b:	ins    BYTE PTR es:[rdi],dx
  40984c:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  409853:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  409857:	(bad)  
  409858:	(bad)  
  409859:	(bad)  
  40985a:	(bad)  
  40985b:	xor    eax,0x31363563
  409860:	cmp    DWORD PTR [rbx],esi
  409862:	xor    al,0x65
  409864:	xor    BYTE PTR [rax],bh
  409866:	cmp    DWORD PTR [rip+0x1],eax        # 0x40986d
  40986c:	sbb    al,0x53
  40986e:	jns    0x4098e3
  409870:	je     0x4098d7
  409872:	ins    DWORD PTR es:[rdi],dx
  409873:	cs push rdi
  409875:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40987c:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40987e:	jb     0x4098ed
  409880:	jae    0x4098b0
  409882:	push   rax
  409883:	(bad)  
  409884:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x5
  40988d:	add    al,0x5f
  40988f:	(bad)  
  409890:	ins    BYTE PTR es:[rdi],dx
  409891:	ins    BYTE PTR es:[rdi],dx
  409892:	add    al,0x5f
  409894:	je     0x409905
  409896:	jo     0x40989d
  409898:	pop    rdi
  409899:	ins    BYTE PTR es:[rdi],dx
  40989a:	gs data16 je 0x4098a4
  40989e:	pop    rdi
  40989f:	jb     0x40990a
  4098a1:	addr32 push 0x625f0774
  4098a7:	outs   dx,DWORD PTR ds:[rsi]
  4098a8:	je     0x40991e
  4098aa:	outs   dx,DWORD PTR ds:[rsi]
  4098ab:	ins    DWORD PTR es:[rdi],dx
  4098ac:	add    BYTE PTR [rax],al
  4098ae:	add    BYTE PTR [rax],al
  4098b0:	add    BYTE PTR [rcx],al
  4098b2:	or     BYTE PTR [rax],cl
  4098b4:	or     BYTE PTR [rax],cl
  4098b6:	add    al,BYTE PTR [rax]
  4098b8:	add    BYTE PTR [rax],al
  4098ba:	add    BYTE PTR [rdx],al
  4098bc:	add    BYTE PTR [rax],al
  4098be:	add    BYTE PTR [rdx],al
  4098c0:	add    BYTE PTR [rax],al
  4098c2:	add    BYTE PTR [rax],al
  4098c4:	add    BYTE PTR [rax],al
  4098c6:	add    BYTE PTR [rdx],al
  4098c8:	add    BYTE PTR [rax],al
  4098ca:	add    BYTE PTR [rbx],cl
  4098cc:	add    BYTE PTR [r9],al
  4098cf:	add    BYTE PTR [rax],al
  4098d1:	add    bh,bh
  4098d3:	(bad)  
  4098d4:	(bad)  
  4098d5:	inc    DWORD PTR [rcx]
  4098d7:	add    BYTE PTR [rax],al
  4098d9:	add    BYTE PTR [rax],al
  4098db:	add    BYTE PTR [rax],al
  4098dd:	add    BYTE PTR [rdx+rax*1],cl
  4098e0:	add    BYTE PTR [rax],al
  4098e2:	add    BYTE PTR [rcx+0x53],dl
  4098e5:	jns    0x40995a
  4098e7:	je     0x40994e
  4098e9:	ins    DWORD PTR es:[rdi],dx
  4098ea:	cs rex.R jb 0x40994f
  4098ee:	ja     0x409959
  4098f0:	outs   dx,BYTE PTR ds:[rsi]
  4098f1:	addr32 sub al,0x20
  4098f4:	push   rsi
  4098f5:	gs jb  0x40996b
  4098f8:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4098ff:	xor    BYTE PTR cs:[rsi],ch
  409902:	xor    BYTE PTR [rax+riz*1],ch
  409905:	rex.XB jne 0x409974
  409908:	je     0x40997f
  40990a:	jb     0x409971
  40990c:	cmp    eax,0x7475656e
  409911:	jb     0x409974
  409913:	ins    BYTE PTR es:[rdi],dx
  409914:	sub    al,0x20
  409916:	push   rax
  409917:	jne    0x40997b
  409919:	ins    BYTE PTR es:[rdi],dx
  40991a:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  409921:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  409925:	(bad)  
  409926:	xor    BYTE PTR [rbx],dh
  409928:	xor    ax,0x3766
  40992c:	xor    WORD PTR [rcx],si
  40992f:	fs xor eax,0x61336130
  409935:	add    eax,0x1
  40993a:	adc    edx,DWORD PTR [rbx+0x79]
  40993d:	jae    0x4099b3
  40993f:	gs ins DWORD PTR es:[rdi],dx
  409941:	cs rex.R jb 0x4099a6
  409945:	ja     0x4099b0
  409947:	outs   dx,BYTE PTR ds:[rsi]
  409948:	addr32 cs push rbx
  40994b:	imul   edi,DWORD PTR [rdx+0x65],0x2
  409952:	add    eax,0x74646977
  409957:	push   0x69656806
  40995c:	addr32 push 0x8000074
  409962:	or     BYTE PTR [rdx],al
  409964:	add    BYTE PTR [rax],al
  409966:	add    BYTE PTR [rax],dl
  409968:	add    DWORD PTR [rax],eax
  40996a:	add    BYTE PTR [rcx],dl
  40996c:	add    BYTE PTR [rax],al
  40996e:	add    BYTE PTR [rbx],cl
  409970:	or     BYTE PTR [rax+rax*1],cl
  409973:	add    BYTE PTR [rax],al
  409975:	add    DWORD PTR [rcx],ebp
  409977:	rex.XB push 0x65736f6f
  40997d:	and    BYTE PTR [rax+rbp*2+0x69],dh
  409981:	jae    0x4099a3
  409983:	outs   dx,DWORD PTR ds:[rsi]
  409984:	jo     0x4099fa
  409986:	imul   ebp,DWORD PTR [rdi+0x6e],0x206f7420
  40998d:	jb     0x4099f4
  40998f:	ins    DWORD PTR es:[rdi],dx
  409990:	outs   dx,DWORD PTR ds:[rsi]
  409991:	jbe    0x4099f8
  409993:	and    BYTE PTR [rax+rbp*2+0x65],dh
  409997:	and    BYTE PTR [rax+0x72],dh
  40999a:	outs   dx,DWORD PTR ds:[rsi]
  40999b:	fs jne 0x409a01
  40999e:	je     0x4099ce
  4099a0:	add    al,BYTE PTR [rcx]
  4099a2:	rex.XB add BYTE PTR [r9],al
  4099a5:	add    BYTE PTR [rax],al
  4099a7:	add    bh,bh
  4099a9:	(bad)  
  4099aa:	(bad)  
  4099ab:	inc    DWORD PTR [rcx]
  4099ad:	add    BYTE PTR [rax],al
  4099af:	add    BYTE PTR [rax],al
  4099b1:	add    BYTE PTR [rax],al
  4099b3:	add    BYTE PTR [rdx+rax*1],cl
  4099b6:	add    BYTE PTR [rax],al
  4099b8:	add    BYTE PTR [rdi+0x53],dl
  4099bb:	jns    0x409a30
  4099bd:	je     0x409a24
  4099bf:	ins    DWORD PTR es:[rdi],dx
  4099c0:	cs push rdi
  4099c2:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  4099c9:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4099cb:	jb     0x409a3a
  4099cd:	jae    0x4099fb
  4099cf:	and    BYTE PTR [rsi+0x65],dl
  4099d2:	jb     0x409a47
  4099d4:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  4099db:	xor    BYTE PTR cs:[rsi],ch
  4099de:	xor    BYTE PTR [rax+riz*1],ch
  4099e1:	rex.XB jne 0x409a50
  4099e4:	je     0x409a5b
  4099e6:	jb     0x409a4d
  4099e8:	cmp    eax,0x7475656e
  4099ed:	jb     0x409a50
  4099ef:	ins    BYTE PTR es:[rdi],dx
  4099f0:	sub    al,0x20
  4099f2:	push   rax
  4099f3:	jne    0x409a57
  4099f5:	ins    BYTE PTR es:[rdi],dx
  4099f6:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4099fd:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  409a01:	(bad)  
  409a02:	(bad)  
  409a03:	(bad)  
  409a04:	(bad)  
  409a05:	xor    eax,0x31363563
  409a0a:	cmp    DWORD PTR [rbx],esi
  409a0c:	xor    al,0x65
  409a0e:	xor    BYTE PTR [rax],bh
  409a10:	cmp    DWORD PTR [rip+0x1],eax        # 0x409a17
  409a16:	sbb    al,0x53
  409a18:	jns    0x409a8d
  409a1a:	je     0x409a81
  409a1c:	ins    DWORD PTR es:[rdi],dx
  409a1d:	cs push rdi
  409a1f:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  409a26:	rex.RX outs dx,DWORD PTR ds:[rsi]
  409a28:	jb     0x409a97
  409a2a:	jae    0x409a5a
  409a2c:	rex.WB ins DWORD PTR es:[rdi],dx
  409a2e:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  409a31:	fs add DWORD PTR gs:[rax],eax
  409a35:	add    BYTE PTR [rax],al
  409a37:	(bad)  
  409a38:	jbe    0x409a9b
  409a3a:	ins    BYTE PTR es:[rdi],dx
  409a3b:	jne    0x409aa2
  409a3d:	pop    rdi
  409a3e:	pop    rdi
  409a3f:	add    BYTE PTR [rax],cl
  409a41:	add    al,BYTE PTR [rax]
  409a43:	add    BYTE PTR [rax],al
  409a45:	add    BYTE PTR [rax],al
  409a47:	add    BYTE PTR [rax],al
  409a49:	or     eax,DWORD PTR [rax+rax*1+0x1]
  409a4d:	add    BYTE PTR [rax],al
  409a4f:	add    bh,bh
  409a51:	(bad)  
  409a52:	(bad)  
  409a53:	inc    DWORD PTR [rcx]
  409a55:	add    BYTE PTR [rax],al
  409a57:	add    BYTE PTR [rax],al
  409a59:	add    BYTE PTR [rax],al
  409a5b:	add    BYTE PTR [rdx+rax*1],cl
  409a5e:	add    BYTE PTR [rax],al
  409a60:	add    BYTE PTR [rcx+0x53],dl
  409a63:	jns    0x409ad8
  409a65:	je     0x409acc
  409a67:	ins    DWORD PTR es:[rdi],dx
  409a68:	cs rex.R jb 0x409acd
  409a6c:	ja     0x409ad7
  409a6e:	outs   dx,BYTE PTR ds:[rsi]
  409a6f:	addr32 sub al,0x20
  409a72:	push   rsi
  409a73:	gs jb  0x409ae9
  409a76:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  409a7d:	xor    BYTE PTR cs:[rsi],ch
  409a80:	xor    BYTE PTR [rax+riz*1],ch
  409a83:	rex.XB jne 0x409af2
  409a86:	je     0x409afd
  409a88:	jb     0x409aef
  409a8a:	cmp    eax,0x7475656e
  409a8f:	jb     0x409af2
  409a91:	ins    BYTE PTR es:[rdi],dx
  409a92:	sub    al,0x20
  409a94:	push   rax
  409a95:	jne    0x409af9
  409a97:	ins    BYTE PTR es:[rdi],dx
  409a98:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  409a9f:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  409aa3:	(bad)  
  409aa4:	xor    BYTE PTR [rbx],dh
  409aa6:	xor    ax,0x3766
  409aaa:	xor    WORD PTR [rcx],si
  409aad:	fs xor eax,0x61336130
  409ab3:	add    eax,0x1
  409ab8:	adc    al,0x53
  409aba:	jns    0x409b2f
  409abc:	je     0x409b23
  409abe:	ins    DWORD PTR es:[rdi],dx
  409abf:	cs rex.R jb 0x409b24
  409ac3:	ja     0x409b2e
  409ac5:	outs   dx,BYTE PTR ds:[rsi]
  409ac6:	addr32 cs push rax
  409ac9:	outs   dx,DWORD PTR ds:[rsi]
  409aca:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  409ad1:	add    DWORD PTR [rax+0x1],edi
  409ad4:	jns    0x409ad6
  409ad6:	add    BYTE PTR [rax],cl
  409ad8:	or     BYTE PTR [rdx],al
  409ada:	add    BYTE PTR [rax],al
  409adc:	add    BYTE PTR [rsi+0x0],dl
  409adf:	add    BYTE PTR [rax],al
  409ae1:	mov    ah,0x0
  409ae3:	add    BYTE PTR [rax],al
  409ae5:	or     eax,DWORD PTR [rbp+0x0]
  409ae8:	add    DWORD PTR [rax],eax
  409aea:	add    BYTE PTR [rax],al
  409aec:	(bad)  
  409aed:	(bad)  
  409aee:	(bad)  
  409aef:	inc    DWORD PTR [rcx]
  409af1:	add    BYTE PTR [rax],al
  409af3:	add    BYTE PTR [rax],al
  409af5:	add    BYTE PTR [rax],al
  409af7:	add    BYTE PTR [rdx+rax*1],cl
  409afa:	add    BYTE PTR [rax],al
  409afc:	add    BYTE PTR [rdi+0x53],dl
  409aff:	jns    0x409b74
  409b01:	je     0x409b68
  409b03:	ins    DWORD PTR es:[rdi],dx
  409b04:	cs push rdi
  409b06:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  409b0d:	rex.RX outs dx,DWORD PTR ds:[rsi]
  409b0f:	jb     0x409b7e
  409b11:	jae    0x409b3f
  409b13:	and    BYTE PTR [rsi+0x65],dl
  409b16:	jb     0x409b8b
  409b18:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  409b1f:	xor    BYTE PTR cs:[rsi],ch
  409b22:	xor    BYTE PTR [rax+riz*1],ch
  409b25:	rex.XB jne 0x409b94
  409b28:	je     0x409b9f
  409b2a:	jb     0x409b91
  409b2c:	cmp    eax,0x7475656e
  409b31:	jb     0x409b94
  409b33:	ins    BYTE PTR es:[rdi],dx
  409b34:	sub    al,0x20
  409b36:	push   rax
  409b37:	jne    0x409b9b
  409b39:	ins    BYTE PTR es:[rdi],dx
  409b3a:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  409b41:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  409b45:	(bad)  
  409b46:	(bad)  
  409b47:	(bad)  
  409b48:	(bad)  
  409b49:	xor    eax,0x31363563
  409b4e:	cmp    DWORD PTR [rbx],esi
  409b50:	xor    al,0x65
  409b52:	xor    BYTE PTR [rax],bh
  409b54:	cmp    DWORD PTR [rip+0x1],eax        # 0x409b5b
  409b5a:	sbb    al,0x53
  409b5c:	jns    0x409bd1
  409b5e:	je     0x409bc5
  409b60:	ins    DWORD PTR es:[rdi],dx
  409b61:	cs push rdi
  409b63:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  409b6a:	rex.RX outs dx,DWORD PTR ds:[rsi]
  409b6c:	jb     0x409bdb
  409b6e:	jae    0x409b9e
  409b70:	push   rax
  409b71:	(bad)  
  409b72:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x5
  409b7b:	add    al,0x5f
  409b7d:	(bad)  
  409b7e:	ins    BYTE PTR es:[rdi],dx
  409b7f:	ins    BYTE PTR es:[rdi],dx
  409b80:	add    al,0x5f
  409b82:	je     0x409bf3
  409b84:	jo     0x409b8b
  409b86:	pop    rdi
  409b87:	ins    BYTE PTR es:[rdi],dx
  409b88:	gs data16 je 0x409b92
  409b8c:	pop    rdi
  409b8d:	jb     0x409bf8
  409b8f:	addr32 push 0x625f0774
  409b95:	outs   dx,DWORD PTR ds:[rsi]
  409b96:	je     0x409c0c
  409b98:	outs   dx,DWORD PTR ds:[rsi]
  409b99:	ins    DWORD PTR es:[rdi],dx
  409b9a:	add    BYTE PTR [rax],al
  409b9c:	add    BYTE PTR [rax],al
  409b9e:	add    BYTE PTR [rcx],al
  409ba0:	or     BYTE PTR [rax],cl
  409ba2:	or     BYTE PTR [rax],cl
  409ba4:	add    al,BYTE PTR [rax]
  409ba6:	add    BYTE PTR [rax],al
  409ba8:	add    BYTE PTR [rdx],bl
  409baa:	add    BYTE PTR [rax],al
  409bac:	add    BYTE PTR [rdx],al
  409bae:	add    BYTE PTR [rax],al
  409bb0:	add    BYTE PTR [rax],al
  409bb2:	add    BYTE PTR [rax],al
  409bb4:	add    BYTE PTR [rdx],al
  409bb6:	add    BYTE PTR [rax],al
  409bb8:	add    BYTE PTR [rbx],cl
  409bba:	add    BYTE PTR [r9],al
  409bbd:	add    BYTE PTR [rax],al
  409bbf:	add    bh,bh
  409bc1:	(bad)  
  409bc2:	(bad)  
  409bc3:	inc    DWORD PTR [rcx]
  409bc5:	add    BYTE PTR [rax],al
  409bc7:	add    BYTE PTR [rax],al
  409bc9:	add    BYTE PTR [rax],al
  409bcb:	add    BYTE PTR [rdx+rax*1],cl
  409bce:	add    BYTE PTR [rax],al
  409bd0:	add    BYTE PTR [rcx+0x53],dl
  409bd3:	jns    0x409c48
  409bd5:	je     0x409c3c
  409bd7:	ins    DWORD PTR es:[rdi],dx
  409bd8:	cs rex.R jb 0x409c3d
  409bdc:	ja     0x409c47
  409bde:	outs   dx,BYTE PTR ds:[rsi]
  409bdf:	addr32 sub al,0x20
  409be2:	push   rsi
  409be3:	gs jb  0x409c59
  409be6:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  409bed:	xor    BYTE PTR cs:[rsi],ch
  409bf0:	xor    BYTE PTR [rax+riz*1],ch
  409bf3:	rex.XB jne 0x409c62
  409bf6:	je     0x409c6d
  409bf8:	jb     0x409c5f
  409bfa:	cmp    eax,0x7475656e
  409bff:	jb     0x409c62
  409c01:	ins    BYTE PTR es:[rdi],dx
  409c02:	sub    al,0x20
  409c04:	push   rax
  409c05:	jne    0x409c69
  409c07:	ins    BYTE PTR es:[rdi],dx
  409c08:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  409c0f:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  409c13:	(bad)  
  409c14:	xor    BYTE PTR [rbx],dh
  409c16:	xor    ax,0x3766
  409c1a:	xor    WORD PTR [rcx],si
  409c1d:	fs xor eax,0x61336130
  409c23:	add    eax,0x1
  409c28:	adc    edx,DWORD PTR [rbx+0x79]
  409c2b:	jae    0x409ca1
  409c2d:	gs ins DWORD PTR es:[rdi],dx
  409c2f:	cs rex.R jb 0x409c94
  409c33:	ja     0x409c9e
  409c35:	outs   dx,BYTE PTR ds:[rsi]
  409c36:	addr32 cs push rbx
  409c39:	imul   edi,DWORD PTR [rdx+0x65],0x2
  409c40:	add    eax,0x74646977
  409c45:	push   0x69656806
  409c4a:	addr32 push 0x8000074
  409c50:	or     BYTE PTR [rdx],al
  409c52:	add    BYTE PTR [rax],al
  409c54:	add    BYTE PTR [rax+rax*1],bh
  409c57:	add    BYTE PTR [rax],al
  409c59:	adc    DWORD PTR [rax],eax
  409c5b:	add    BYTE PTR [rax],al
  409c5d:	or     ecx,DWORD PTR [rax]
  409c5f:	or     al,BYTE PTR [rax]
  409c61:	add    BYTE PTR [rax],al
  409c63:	add    DWORD PTR [rsi],eax
  409c65:	push   rdx
  409c66:	gs ins DWORD PTR es:[rdi],dx
  409c68:	outs   dx,DWORD PTR ds:[rsi]
  409c69:	jbe    0x409cd0
  409c6b:	rex.XB add BYTE PTR [r9],al
  409c6e:	add    BYTE PTR [rax],al
  409c70:	add    bh,bh
  409c72:	(bad)  
  409c73:	(bad)  
  409c74:	inc    DWORD PTR [rcx]
  409c76:	add    BYTE PTR [rax],al
  409c78:	add    BYTE PTR [rax],al
  409c7a:	add    BYTE PTR [rax],al
  409c7c:	add    BYTE PTR [rdx+rax*1],cl
  409c7f:	add    BYTE PTR [rax],al
  409c81:	add    BYTE PTR [rdi+0x53],dl
  409c84:	jns    0x409cf9
  409c86:	je     0x409ced
  409c88:	ins    DWORD PTR es:[rdi],dx
  409c89:	cs push rdi
  409c8b:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  409c92:	rex.RX outs dx,DWORD PTR ds:[rsi]
  409c94:	jb     0x409d03
  409c96:	jae    0x409cc4
  409c98:	and    BYTE PTR [rsi+0x65],dl
  409c9b:	jb     0x409d10
  409c9d:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  409ca4:	xor    BYTE PTR cs:[rsi],ch
  409ca7:	xor    BYTE PTR [rax+riz*1],ch
  409caa:	rex.XB jne 0x409d19
  409cad:	je     0x409d24
  409caf:	jb     0x409d16
  409cb1:	cmp    eax,0x7475656e
  409cb6:	jb     0x409d19
  409cb8:	ins    BYTE PTR es:[rdi],dx
  409cb9:	sub    al,0x20
  409cbb:	push   rax
  409cbc:	jne    0x409d20
  409cbe:	ins    BYTE PTR es:[rdi],dx
  409cbf:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  409cc6:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  409cca:	(bad)  
  409ccb:	(bad)  
  409ccc:	(bad)  
  409ccd:	(bad)  
  409cce:	xor    eax,0x31363563
  409cd3:	cmp    DWORD PTR [rbx],esi
  409cd5:	xor    al,0x65
  409cd7:	xor    BYTE PTR [rax],bh
  409cd9:	cmp    DWORD PTR [rip+0x1],eax        # 0x409ce0
  409cdf:	sbb    al,0x53
  409ce1:	jns    0x409d56
  409ce3:	je     0x409d4a
  409ce5:	ins    DWORD PTR es:[rdi],dx
  409ce6:	cs push rdi
  409ce8:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  409cef:	rex.RX outs dx,DWORD PTR ds:[rsi]
  409cf1:	jb     0x409d60
  409cf3:	jae    0x409d23
  409cf5:	rex.WB ins DWORD PTR es:[rdi],dx
  409cf7:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  409cfa:	fs add DWORD PTR gs:[rax],eax
  409cfe:	add    BYTE PTR [rax],al
  409d00:	(bad)  
  409d01:	jbe    0x409d64
  409d03:	ins    BYTE PTR es:[rdi],dx
  409d04:	jne    0x409d6b
  409d06:	pop    rdi
  409d07:	pop    rdi
  409d08:	add    BYTE PTR [rax],cl
  409d0a:	add    al,BYTE PTR [rax]
  409d0c:	add    BYTE PTR [rax],al
  409d0e:	add    BYTE PTR [rax],al
  409d10:	add    BYTE PTR [rax],al
  409d12:	or     eax,DWORD PTR [rax+rax*1+0x1]
  409d16:	add    BYTE PTR [rax],al
  409d18:	add    bh,bh
  409d1a:	(bad)  
  409d1b:	(bad)  
  409d1c:	inc    DWORD PTR [rcx]
  409d1e:	add    BYTE PTR [rax],al
  409d20:	add    BYTE PTR [rax],al
  409d22:	add    BYTE PTR [rax],al
  409d24:	add    BYTE PTR [rdx+rax*1],cl
  409d27:	add    BYTE PTR [rax],al
  409d29:	add    BYTE PTR [rcx+0x53],dl
  409d2c:	jns    0x409da1
  409d2e:	je     0x409d95
  409d30:	ins    DWORD PTR es:[rdi],dx
  409d31:	cs rex.R jb 0x409d96
  409d35:	ja     0x409da0
  409d37:	outs   dx,BYTE PTR ds:[rsi]
  409d38:	addr32 sub al,0x20
  409d3b:	push   rsi
  409d3c:	gs jb  0x409db2
  409d3f:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  409d46:	xor    BYTE PTR cs:[rsi],ch
  409d49:	xor    BYTE PTR [rax+riz*1],ch
  409d4c:	rex.XB jne 0x409dbb
  409d4f:	je     0x409dc6
  409d51:	jb     0x409db8
  409d53:	cmp    eax,0x7475656e
  409d58:	jb     0x409dbb
  409d5a:	ins    BYTE PTR es:[rdi],dx
  409d5b:	sub    al,0x20
  409d5d:	push   rax
  409d5e:	jne    0x409dc2
  409d60:	ins    BYTE PTR es:[rdi],dx
  409d61:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  409d68:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  409d6c:	(bad)  
  409d6d:	xor    BYTE PTR [rbx],dh
  409d6f:	xor    ax,0x3766
  409d73:	xor    WORD PTR [rcx],si
  409d76:	fs xor eax,0x61336130
  409d7c:	add    eax,0x1
  409d81:	adc    al,0x53
  409d83:	jns    0x409df8
  409d85:	je     0x409dec
  409d87:	ins    DWORD PTR es:[rdi],dx
  409d88:	cs rex.R jb 0x409ded
  409d8c:	ja     0x409df7
  409d8e:	outs   dx,BYTE PTR ds:[rsi]
  409d8f:	addr32 cs push rax
  409d92:	outs   dx,DWORD PTR ds:[rsi]
  409d93:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  409d9a:	add    DWORD PTR [rax+0x1],edi
  409d9d:	jns    0x409d9f
  409d9f:	add    BYTE PTR [rax],cl
  409da1:	or     BYTE PTR [rdx],al
  409da3:	add    BYTE PTR [rax],al
  409da5:	add    BYTE PTR [rax],ah
  409da7:	add    BYTE PTR [rax],al
  409da9:	add    BYTE PTR [rax+rax*1+0x450b0000],dh
  409db0:	add    BYTE PTR [rcx],al
  409db2:	add    BYTE PTR [rax],al
  409db4:	add    bh,bh
  409db6:	(bad)  
  409db7:	(bad)  
  409db8:	inc    DWORD PTR [rcx]
  409dba:	add    BYTE PTR [rax],al
  409dbc:	add    BYTE PTR [rax],al
  409dbe:	add    BYTE PTR [rax],al
  409dc0:	add    BYTE PTR [rdx+rax*1],cl
  409dc3:	add    BYTE PTR [rax],al
  409dc5:	add    BYTE PTR [rdi+0x53],dl
  409dc8:	jns    0x409e3d
  409dca:	je     0x409e31
  409dcc:	ins    DWORD PTR es:[rdi],dx
  409dcd:	cs push rdi
  409dcf:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  409dd6:	rex.RX outs dx,DWORD PTR ds:[rsi]
  409dd8:	jb     0x409e47
  409dda:	jae    0x409e08
  409ddc:	and    BYTE PTR [rsi+0x65],dl
  409ddf:	jb     0x409e54
  409de1:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  409de8:	xor    BYTE PTR cs:[rsi],ch
  409deb:	xor    BYTE PTR [rax+riz*1],ch
  409dee:	rex.XB jne 0x409e5d
  409df1:	je     0x409e68
  409df3:	jb     0x409e5a
  409df5:	cmp    eax,0x7475656e
  409dfa:	jb     0x409e5d
  409dfc:	ins    BYTE PTR es:[rdi],dx
  409dfd:	sub    al,0x20
  409dff:	push   rax
  409e00:	jne    0x409e64
  409e02:	ins    BYTE PTR es:[rdi],dx
  409e03:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  409e0a:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  409e0e:	(bad)  
  409e0f:	(bad)  
  409e10:	(bad)  
  409e11:	(bad)  
  409e12:	xor    eax,0x31363563
  409e17:	cmp    DWORD PTR [rbx],esi
  409e19:	xor    al,0x65
  409e1b:	xor    BYTE PTR [rax],bh
  409e1d:	cmp    DWORD PTR [rip+0x1],eax        # 0x409e24
  409e23:	sbb    al,0x53
  409e25:	jns    0x409e9a
  409e27:	je     0x409e8e
  409e29:	ins    DWORD PTR es:[rdi],dx
  409e2a:	cs push rdi
  409e2c:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  409e33:	rex.RX outs dx,DWORD PTR ds:[rsi]
  409e35:	jb     0x409ea4
  409e37:	jae    0x409e67
  409e39:	push   rax
  409e3a:	(bad)  
  409e3b:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x5
  409e44:	add    al,0x5f
  409e46:	(bad)  
  409e47:	ins    BYTE PTR es:[rdi],dx
  409e48:	ins    BYTE PTR es:[rdi],dx
  409e49:	add    al,0x5f
  409e4b:	je     0x409ebc
  409e4d:	jo     0x409e54
  409e4f:	pop    rdi
  409e50:	ins    BYTE PTR es:[rdi],dx
  409e51:	gs data16 je 0x409e5b
  409e55:	pop    rdi
  409e56:	jb     0x409ec1
  409e58:	addr32 push 0x625f0774
  409e5e:	outs   dx,DWORD PTR ds:[rsi]
  409e5f:	je     0x409ed5
  409e61:	outs   dx,DWORD PTR ds:[rsi]
  409e62:	ins    DWORD PTR es:[rdi],dx
  409e63:	add    BYTE PTR [rax],al
  409e65:	add    BYTE PTR [rax],al
  409e67:	add    BYTE PTR [rcx],al
  409e69:	or     BYTE PTR [rax],cl
  409e6b:	or     BYTE PTR [rax],cl
  409e6d:	add    al,BYTE PTR [rax]
  409e6f:	add    BYTE PTR [rax],al
  409e71:	add    BYTE PTR [rdx],bl
  409e73:	add    BYTE PTR [rax],al
  409e75:	add    BYTE PTR [rax],ah
  409e77:	add    BYTE PTR [rax],al
  409e79:	add    BYTE PTR [rdx],al
  409e7b:	add    BYTE PTR [rax],al
  409e7d:	add    BYTE PTR [rdx],al
  409e7f:	add    BYTE PTR [rax],al
  409e81:	add    BYTE PTR [rbx],cl
  409e83:	add    BYTE PTR [r9],al
  409e86:	add    BYTE PTR [rax],al
  409e88:	add    bh,bh
  409e8a:	(bad)  
  409e8b:	(bad)  
  409e8c:	inc    DWORD PTR [rcx]
  409e8e:	add    BYTE PTR [rax],al
  409e90:	add    BYTE PTR [rax],al
  409e92:	add    BYTE PTR [rax],al
  409e94:	add    BYTE PTR [rdx+rax*1],cl
  409e97:	add    BYTE PTR [rax],al
  409e99:	add    BYTE PTR [rcx+0x53],dl
  409e9c:	jns    0x409f11
  409e9e:	je     0x409f05
  409ea0:	ins    DWORD PTR es:[rdi],dx
  409ea1:	cs rex.R jb 0x409f06
  409ea5:	ja     0x409f10
  409ea7:	outs   dx,BYTE PTR ds:[rsi]
  409ea8:	addr32 sub al,0x20
  409eab:	push   rsi
  409eac:	gs jb  0x409f22
  409eaf:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  409eb6:	xor    BYTE PTR cs:[rsi],ch
  409eb9:	xor    BYTE PTR [rax+riz*1],ch
  409ebc:	rex.XB jne 0x409f2b
  409ebf:	je     0x409f36
  409ec1:	jb     0x409f28
  409ec3:	cmp    eax,0x7475656e
  409ec8:	jb     0x409f2b
  409eca:	ins    BYTE PTR es:[rdi],dx
  409ecb:	sub    al,0x20
  409ecd:	push   rax
  409ece:	jne    0x409f32
  409ed0:	ins    BYTE PTR es:[rdi],dx
  409ed1:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  409ed8:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  409edc:	(bad)  
  409edd:	xor    BYTE PTR [rbx],dh
  409edf:	xor    ax,0x3766
  409ee3:	xor    WORD PTR [rcx],si
  409ee6:	fs xor eax,0x61336130
  409eec:	add    eax,0x1
  409ef1:	adc    edx,DWORD PTR [rbx+0x79]
  409ef4:	jae    0x409f6a
  409ef6:	gs ins DWORD PTR es:[rdi],dx
  409ef8:	cs rex.R jb 0x409f5d
  409efc:	ja     0x409f67
  409efe:	outs   dx,BYTE PTR ds:[rsi]
  409eff:	addr32 cs push rbx
  409f02:	imul   edi,DWORD PTR [rdx+0x65],0x2
  409f09:	add    eax,0x74646977
  409f0e:	push   0x69656806
  409f13:	addr32 push 0x8000074
  409f19:	or     BYTE PTR [rdx],al
  409f1b:	add    BYTE PTR [rax],al
  409f1d:	add    BYTE PTR [rdx],dh
  409f1f:	add    BYTE PTR [rax],al
  409f21:	add    BYTE PTR [rdx],dh
  409f23:	add    BYTE PTR [rax],al
  409f25:	add    BYTE PTR [rbx],cl
  409f27:	or     BYTE PTR [rbx],cl
  409f29:	add    BYTE PTR [rax],al
  409f2b:	add    BYTE PTR [rdx],al
  409f2d:	add    DWORD PTR [rdx+0x0],eax
  409f30:	add    DWORD PTR [rax],eax
  409f32:	add    BYTE PTR [rax],al
  409f34:	(bad)  
  409f35:	(bad)  
  409f36:	(bad)  
  409f37:	inc    DWORD PTR [rcx]
  409f39:	add    BYTE PTR [rax],al
  409f3b:	add    BYTE PTR [rax],al
  409f3d:	add    BYTE PTR [rax],al
  409f3f:	add    BYTE PTR [rdx+rax*1],cl
  409f42:	add    BYTE PTR [rax],al
  409f44:	add    BYTE PTR [rdi+0x53],dl
  409f47:	jns    0x409fbc
  409f49:	je     0x409fb0
  409f4b:	ins    DWORD PTR es:[rdi],dx
  409f4c:	cs push rdi
  409f4e:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  409f55:	rex.RX outs dx,DWORD PTR ds:[rsi]
  409f57:	jb     0x409fc6
  409f59:	jae    0x409f87
  409f5b:	and    BYTE PTR [rsi+0x65],dl
  409f5e:	jb     0x409fd3
  409f60:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  409f67:	xor    BYTE PTR cs:[rsi],ch
  409f6a:	xor    BYTE PTR [rax+riz*1],ch
  409f6d:	rex.XB jne 0x409fdc
  409f70:	je     0x409fe7
  409f72:	jb     0x409fd9
  409f74:	cmp    eax,0x7475656e
  409f79:	jb     0x409fdc
  409f7b:	ins    BYTE PTR es:[rdi],dx
  409f7c:	sub    al,0x20
  409f7e:	push   rax
  409f7f:	jne    0x409fe3
  409f81:	ins    BYTE PTR es:[rdi],dx
  409f82:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  409f89:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  409f8d:	(bad)  
  409f8e:	(bad)  
  409f8f:	(bad)  
  409f90:	(bad)  
  409f91:	xor    eax,0x31363563
  409f96:	cmp    DWORD PTR [rbx],esi
  409f98:	xor    al,0x65
  409f9a:	xor    BYTE PTR [rax],bh
  409f9c:	cmp    DWORD PTR [rip+0x1],eax        # 0x409fa3
  409fa2:	(bad)  
  409fa3:	push   rbx
  409fa4:	jns    0x40a019
  409fa6:	je     0x40a00d
  409fa8:	ins    DWORD PTR es:[rdi],dx
  409fa9:	cs push rdi
  409fab:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  409fb2:	rex.RX outs dx,DWORD PTR ds:[rsi]
  409fb4:	jb     0x40a023
  409fb6:	jae    0x409fe6
  409fb8:	rex.R outs dx,DWORD PTR ds:[rsi]
  409fba:	movsxd ebp,DWORD PTR [rbx+0x53]
  409fbd:	je     0x40a038
  409fbf:	ins    BYTE PTR es:[rdi],dx
  409fc0:	add    DWORD PTR gs:[rax],eax
  409fc3:	add    BYTE PTR [rax],al
  409fc5:	(bad)  
  409fc6:	jbe    0x40a029
  409fc8:	ins    BYTE PTR es:[rdi],dx
  409fc9:	jne    0x40a030
  409fcb:	pop    rdi
  409fcc:	pop    rdi
  409fcd:	add    BYTE PTR [rax],cl
  409fcf:	add    al,BYTE PTR [rax]
  409fd1:	add    BYTE PTR [rax],al
  409fd3:	add    eax,0xb000000
  409fd8:	rex.XB add BYTE PTR [r9],al
  409fdb:	add    BYTE PTR [rax],al
  409fdd:	add    bh,bh
  409fdf:	(bad)  
  409fe0:	(bad)  
  409fe1:	inc    DWORD PTR [rcx]
  409fe3:	add    BYTE PTR [rax],al
  409fe5:	add    BYTE PTR [rax],al
  409fe7:	add    BYTE PTR [rax],al
  409fe9:	add    BYTE PTR [rdx+rax*1],cl
  409fec:	add    BYTE PTR [rax],al
  409fee:	add    BYTE PTR [rdi+0x53],dl
  409ff1:	jns    0x40a066
  409ff3:	je     0x40a05a
  409ff5:	ins    DWORD PTR es:[rdi],dx
  409ff6:	cs push rdi
  409ff8:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  409fff:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a001:	jb     0x40a070
  40a003:	jae    0x40a031
  40a005:	and    BYTE PTR [rsi+0x65],dl
  40a008:	jb     0x40a07d
  40a00a:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40a011:	xor    BYTE PTR cs:[rsi],ch
  40a014:	xor    BYTE PTR [rax+riz*1],ch
  40a017:	rex.XB jne 0x40a086
  40a01a:	je     0x40a091
  40a01c:	jb     0x40a083
  40a01e:	cmp    eax,0x7475656e
  40a023:	jb     0x40a086
  40a025:	ins    BYTE PTR es:[rdi],dx
  40a026:	sub    al,0x20
  40a028:	push   rax
  40a029:	jne    0x40a08d
  40a02b:	ins    BYTE PTR es:[rdi],dx
  40a02c:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40a033:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40a037:	(bad)  
  40a038:	(bad)  
  40a039:	(bad)  
  40a03a:	(bad)  
  40a03b:	xor    eax,0x31363563
  40a040:	cmp    DWORD PTR [rbx],esi
  40a042:	xor    al,0x65
  40a044:	xor    BYTE PTR [rax],bh
  40a046:	cmp    DWORD PTR [rip+0x1],eax        # 0x40a04d
  40a04c:	sbb    al,0x53
  40a04e:	jns    0x40a0c3
  40a050:	je     0x40a0b7
  40a052:	ins    DWORD PTR es:[rdi],dx
  40a053:	cs push rdi
  40a055:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40a05c:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a05e:	jb     0x40a0cd
  40a060:	jae    0x40a090
  40a062:	rex.WB ins DWORD PTR es:[rdi],dx
  40a064:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  40a067:	fs add DWORD PTR gs:[rax],eax
  40a06b:	add    BYTE PTR [rax],al
  40a06d:	(bad)  
  40a06e:	jbe    0x40a0d1
  40a070:	ins    BYTE PTR es:[rdi],dx
  40a071:	jne    0x40a0d8
  40a073:	pop    rdi
  40a074:	pop    rdi
  40a075:	add    BYTE PTR [rax],cl
  40a077:	add    al,BYTE PTR [rax]
  40a079:	add    BYTE PTR [rax],al
  40a07b:	add    BYTE PTR [rax],al
  40a07d:	add    BYTE PTR [rax],al
  40a07f:	or     eax,DWORD PTR [rax+rax*1+0x1]
  40a083:	add    BYTE PTR [rax],al
  40a085:	add    bh,bh
  40a087:	(bad)  
  40a088:	(bad)  
  40a089:	inc    DWORD PTR [rcx]
  40a08b:	add    BYTE PTR [rax],al
  40a08d:	add    BYTE PTR [rax],al
  40a08f:	add    BYTE PTR [rax],al
  40a091:	add    BYTE PTR [rdx+rax*1],cl
  40a094:	add    BYTE PTR [rax],al
  40a096:	add    BYTE PTR [rcx+0x53],dl
  40a099:	jns    0x40a10e
  40a09b:	je     0x40a102
  40a09d:	ins    DWORD PTR es:[rdi],dx
  40a09e:	cs rex.R jb 0x40a103
  40a0a2:	ja     0x40a10d
  40a0a4:	outs   dx,BYTE PTR ds:[rsi]
  40a0a5:	addr32 sub al,0x20
  40a0a8:	push   rsi
  40a0a9:	gs jb  0x40a11f
  40a0ac:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40a0b3:	xor    BYTE PTR cs:[rsi],ch
  40a0b6:	xor    BYTE PTR [rax+riz*1],ch
  40a0b9:	rex.XB jne 0x40a128
  40a0bc:	je     0x40a133
  40a0be:	jb     0x40a125
  40a0c0:	cmp    eax,0x7475656e
  40a0c5:	jb     0x40a128
  40a0c7:	ins    BYTE PTR es:[rdi],dx
  40a0c8:	sub    al,0x20
  40a0ca:	push   rax
  40a0cb:	jne    0x40a12f
  40a0cd:	ins    BYTE PTR es:[rdi],dx
  40a0ce:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40a0d5:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40a0d9:	(bad)  
  40a0da:	xor    BYTE PTR [rbx],dh
  40a0dc:	xor    ax,0x3766
  40a0e0:	xor    WORD PTR [rcx],si
  40a0e3:	fs xor eax,0x61336130
  40a0e9:	add    eax,0x1
  40a0ee:	adc    al,0x53
  40a0f0:	jns    0x40a165
  40a0f2:	je     0x40a159
  40a0f4:	ins    DWORD PTR es:[rdi],dx
  40a0f5:	cs rex.R jb 0x40a15a
  40a0f9:	ja     0x40a164
  40a0fb:	outs   dx,BYTE PTR ds:[rsi]
  40a0fc:	addr32 cs push rax
  40a0ff:	outs   dx,DWORD PTR ds:[rsi]
  40a100:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  40a107:	add    DWORD PTR [rax+0x1],edi
  40a10a:	jns    0x40a10c
  40a10c:	add    BYTE PTR [rax],cl
  40a10e:	or     BYTE PTR [rdx],al
  40a110:	add    BYTE PTR [rax],al
  40a112:	add    BYTE PTR [rsi+0x0],dl
  40a115:	add    BYTE PTR [rax],al
  40a117:	jnp    0x40a119
  40a119:	add    BYTE PTR [rax],al
  40a11b:	or     eax,DWORD PTR [rbp+0x0]
  40a11e:	add    DWORD PTR [rax],eax
  40a120:	add    BYTE PTR [rax],al
  40a122:	(bad)  
  40a123:	(bad)  
  40a124:	(bad)  
  40a125:	inc    DWORD PTR [rcx]
  40a127:	add    BYTE PTR [rax],al
  40a129:	add    BYTE PTR [rax],al
  40a12b:	add    BYTE PTR [rax],al
  40a12d:	add    BYTE PTR [rdx+rax*1],cl
  40a130:	add    BYTE PTR [rax],al
  40a132:	add    BYTE PTR [rdi+0x53],dl
  40a135:	jns    0x40a1aa
  40a137:	je     0x40a19e
  40a139:	ins    DWORD PTR es:[rdi],dx
  40a13a:	cs push rdi
  40a13c:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40a143:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a145:	jb     0x40a1b4
  40a147:	jae    0x40a175
  40a149:	and    BYTE PTR [rsi+0x65],dl
  40a14c:	jb     0x40a1c1
  40a14e:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40a155:	xor    BYTE PTR cs:[rsi],ch
  40a158:	xor    BYTE PTR [rax+riz*1],ch
  40a15b:	rex.XB jne 0x40a1ca
  40a15e:	je     0x40a1d5
  40a160:	jb     0x40a1c7
  40a162:	cmp    eax,0x7475656e
  40a167:	jb     0x40a1ca
  40a169:	ins    BYTE PTR es:[rdi],dx
  40a16a:	sub    al,0x20
  40a16c:	push   rax
  40a16d:	jne    0x40a1d1
  40a16f:	ins    BYTE PTR es:[rdi],dx
  40a170:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40a177:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40a17b:	(bad)  
  40a17c:	(bad)  
  40a17d:	(bad)  
  40a17e:	(bad)  
  40a17f:	xor    eax,0x31363563
  40a184:	cmp    DWORD PTR [rbx],esi
  40a186:	xor    al,0x65
  40a188:	xor    BYTE PTR [rax],bh
  40a18a:	cmp    DWORD PTR [rip+0x1],eax        # 0x40a191
  40a190:	sbb    al,0x53
  40a192:	jns    0x40a207
  40a194:	je     0x40a1fb
  40a196:	ins    DWORD PTR es:[rdi],dx
  40a197:	cs push rdi
  40a199:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40a1a0:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a1a2:	jb     0x40a211
  40a1a4:	jae    0x40a1d4
  40a1a6:	push   rax
  40a1a7:	(bad)  
  40a1a8:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x5
  40a1b1:	add    al,0x5f
  40a1b3:	(bad)  
  40a1b4:	ins    BYTE PTR es:[rdi],dx
  40a1b5:	ins    BYTE PTR es:[rdi],dx
  40a1b6:	add    al,0x5f
  40a1b8:	je     0x40a229
  40a1ba:	jo     0x40a1c1
  40a1bc:	pop    rdi
  40a1bd:	ins    BYTE PTR es:[rdi],dx
  40a1be:	gs data16 je 0x40a1c8
  40a1c2:	pop    rdi
  40a1c3:	jb     0x40a22e
  40a1c5:	addr32 push 0x625f0774
  40a1cb:	outs   dx,DWORD PTR ds:[rsi]
  40a1cc:	je     0x40a242
  40a1ce:	outs   dx,DWORD PTR ds:[rsi]
  40a1cf:	ins    DWORD PTR es:[rdi],dx
  40a1d0:	add    BYTE PTR [rax],al
  40a1d2:	add    BYTE PTR [rax],al
  40a1d4:	add    BYTE PTR [rcx],al
  40a1d6:	or     BYTE PTR [rax],cl
  40a1d8:	or     BYTE PTR [rax],cl
  40a1da:	add    al,BYTE PTR [rax]
  40a1dc:	add    BYTE PTR [rax],al
  40a1de:	add    BYTE PTR [rdx],al
  40a1e0:	add    BYTE PTR [rax],al
  40a1e2:	add    BYTE PTR [rdx],al
  40a1e4:	add    BYTE PTR [rax],al
  40a1e6:	add    BYTE PTR [rax],al
  40a1e8:	add    BYTE PTR [rax],al
  40a1ea:	add    BYTE PTR [rdx],al
  40a1ec:	add    BYTE PTR [rax],al
  40a1ee:	add    BYTE PTR [rbx],cl
  40a1f0:	add    BYTE PTR [r9],al
  40a1f3:	add    BYTE PTR [rax],al
  40a1f5:	add    bh,bh
  40a1f7:	(bad)  
  40a1f8:	(bad)  
  40a1f9:	inc    DWORD PTR [rcx]
  40a1fb:	add    BYTE PTR [rax],al
  40a1fd:	add    BYTE PTR [rax],al
  40a1ff:	add    BYTE PTR [rax],al
  40a201:	add    BYTE PTR [rdx+rax*1],cl
  40a204:	add    BYTE PTR [rax],al
  40a206:	add    BYTE PTR [rcx+0x53],dl
  40a209:	jns    0x40a27e
  40a20b:	je     0x40a272
  40a20d:	ins    DWORD PTR es:[rdi],dx
  40a20e:	cs rex.R jb 0x40a273
  40a212:	ja     0x40a27d
  40a214:	outs   dx,BYTE PTR ds:[rsi]
  40a215:	addr32 sub al,0x20
  40a218:	push   rsi
  40a219:	gs jb  0x40a28f
  40a21c:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40a223:	xor    BYTE PTR cs:[rsi],ch
  40a226:	xor    BYTE PTR [rax+riz*1],ch
  40a229:	rex.XB jne 0x40a298
  40a22c:	je     0x40a2a3
  40a22e:	jb     0x40a295
  40a230:	cmp    eax,0x7475656e
  40a235:	jb     0x40a298
  40a237:	ins    BYTE PTR es:[rdi],dx
  40a238:	sub    al,0x20
  40a23a:	push   rax
  40a23b:	jne    0x40a29f
  40a23d:	ins    BYTE PTR es:[rdi],dx
  40a23e:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40a245:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40a249:	(bad)  
  40a24a:	xor    BYTE PTR [rbx],dh
  40a24c:	xor    ax,0x3766
  40a250:	xor    WORD PTR [rcx],si
  40a253:	fs xor eax,0x61336130
  40a259:	add    eax,0x1
  40a25e:	adc    edx,DWORD PTR [rbx+0x79]
  40a261:	jae    0x40a2d7
  40a263:	gs ins DWORD PTR es:[rdi],dx
  40a265:	cs rex.R jb 0x40a2ca
  40a269:	ja     0x40a2d4
  40a26b:	outs   dx,BYTE PTR ds:[rsi]
  40a26c:	addr32 cs push rbx
  40a26f:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40a276:	add    eax,0x74646977
  40a27b:	push   0x69656806
  40a280:	addr32 push 0x8000074
  40a286:	or     BYTE PTR [rdx],al
  40a288:	add    BYTE PTR [rax],al
  40a28a:	add    BYTE PTR [rax],ch
  40a28c:	add    DWORD PTR [rax],eax
  40a28e:	add    BYTE PTR [rip+0xb000000],bl        # 0xb40a294
  40a294:	or     BYTE PTR [rax],cl
  40a296:	add    BYTE PTR [rax],al
  40a298:	add    BYTE PTR [rcx],al
  40a29a:	sub    DWORD PTR [rbx+0x68],eax
  40a29d:	outs   dx,DWORD PTR ds:[rsi]
  40a29e:	outs   dx,DWORD PTR ds:[rsi]
  40a29f:	jae    0x40a306
  40a2a1:	and    BYTE PTR [rax+rbp*2+0x69],dh
  40a2a5:	jae    0x40a2c7
  40a2a7:	outs   dx,DWORD PTR ds:[rsi]
  40a2a8:	jo     0x40a31e
  40a2aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x206f7420
  40a2b1:	jb     0x40a318
  40a2b3:	jo     0x40a316
  40a2b5:	imul   esi,DWORD PTR [rdx+0x20],0x20656874
  40a2bc:	jo     0x40a330
  40a2be:	outs   dx,DWORD PTR ds:[rsi]
  40a2bf:	fs jne 0x40a325
  40a2c2:	je     0x40a2f2
  40a2c4:	add    al,BYTE PTR [rcx]
  40a2c6:	rex.X add BYTE PTR [rcx],al
  40a2c9:	add    BYTE PTR [rax],al
  40a2cb:	add    bh,bh
  40a2cd:	(bad)  
  40a2ce:	(bad)  
  40a2cf:	inc    DWORD PTR [rcx]
  40a2d1:	add    BYTE PTR [rax],al
  40a2d3:	add    BYTE PTR [rax],al
  40a2d5:	add    BYTE PTR [rax],al
  40a2d7:	add    BYTE PTR [rdx+rax*1],cl
  40a2da:	add    BYTE PTR [rax],al
  40a2dc:	add    BYTE PTR [rdi+0x53],dl
  40a2df:	jns    0x40a354
  40a2e1:	je     0x40a348
  40a2e3:	ins    DWORD PTR es:[rdi],dx
  40a2e4:	cs push rdi
  40a2e6:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40a2ed:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a2ef:	jb     0x40a35e
  40a2f1:	jae    0x40a31f
  40a2f3:	and    BYTE PTR [rsi+0x65],dl
  40a2f6:	jb     0x40a36b
  40a2f8:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40a2ff:	xor    BYTE PTR cs:[rsi],ch
  40a302:	xor    BYTE PTR [rax+riz*1],ch
  40a305:	rex.XB jne 0x40a374
  40a308:	je     0x40a37f
  40a30a:	jb     0x40a371
  40a30c:	cmp    eax,0x7475656e
  40a311:	jb     0x40a374
  40a313:	ins    BYTE PTR es:[rdi],dx
  40a314:	sub    al,0x20
  40a316:	push   rax
  40a317:	jne    0x40a37b
  40a319:	ins    BYTE PTR es:[rdi],dx
  40a31a:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40a321:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40a325:	(bad)  
  40a326:	(bad)  
  40a327:	(bad)  
  40a328:	(bad)  
  40a329:	xor    eax,0x31363563
  40a32e:	cmp    DWORD PTR [rbx],esi
  40a330:	xor    al,0x65
  40a332:	xor    BYTE PTR [rax],bh
  40a334:	cmp    DWORD PTR [rip+0x1],eax        # 0x40a33b
  40a33a:	(bad)  
  40a33b:	push   rbx
  40a33c:	jns    0x40a3b1
  40a33e:	je     0x40a3a5
  40a340:	ins    DWORD PTR es:[rdi],dx
  40a341:	cs push rdi
  40a343:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40a34a:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a34c:	jb     0x40a3bb
  40a34e:	jae    0x40a37e
  40a350:	rex.R outs dx,DWORD PTR ds:[rsi]
  40a352:	movsxd ebp,DWORD PTR [rbx+0x53]
  40a355:	je     0x40a3d0
  40a357:	ins    BYTE PTR es:[rdi],dx
  40a358:	add    DWORD PTR gs:[rax],eax
  40a35b:	add    BYTE PTR [rax],al
  40a35d:	(bad)  
  40a35e:	jbe    0x40a3c1
  40a360:	ins    BYTE PTR es:[rdi],dx
  40a361:	jne    0x40a3c8
  40a363:	pop    rdi
  40a364:	pop    rdi
  40a365:	add    BYTE PTR [rax],cl
  40a367:	add    al,BYTE PTR [rax]
  40a369:	add    BYTE PTR [rax],al
  40a36b:	add    eax,0xb000000
  40a370:	rex.XB add BYTE PTR [r9],al
  40a373:	add    BYTE PTR [rax],al
  40a375:	add    bh,bh
  40a377:	(bad)  
  40a378:	(bad)  
  40a379:	inc    DWORD PTR [rcx]
  40a37b:	add    BYTE PTR [rax],al
  40a37d:	add    BYTE PTR [rax],al
  40a37f:	add    BYTE PTR [rax],al
  40a381:	add    BYTE PTR [rdx+rax*1],cl
  40a384:	add    BYTE PTR [rax],al
  40a386:	add    BYTE PTR [rdi+0x53],dl
  40a389:	jns    0x40a3fe
  40a38b:	je     0x40a3f2
  40a38d:	ins    DWORD PTR es:[rdi],dx
  40a38e:	cs push rdi
  40a390:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40a397:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a399:	jb     0x40a408
  40a39b:	jae    0x40a3c9
  40a39d:	and    BYTE PTR [rsi+0x65],dl
  40a3a0:	jb     0x40a415
  40a3a2:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40a3a9:	xor    BYTE PTR cs:[rsi],ch
  40a3ac:	xor    BYTE PTR [rax+riz*1],ch
  40a3af:	rex.XB jne 0x40a41e
  40a3b2:	je     0x40a429
  40a3b4:	jb     0x40a41b
  40a3b6:	cmp    eax,0x7475656e
  40a3bb:	jb     0x40a41e
  40a3bd:	ins    BYTE PTR es:[rdi],dx
  40a3be:	sub    al,0x20
  40a3c0:	push   rax
  40a3c1:	jne    0x40a425
  40a3c3:	ins    BYTE PTR es:[rdi],dx
  40a3c4:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40a3cb:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40a3cf:	(bad)  
  40a3d0:	(bad)  
  40a3d1:	(bad)  
  40a3d2:	(bad)  
  40a3d3:	xor    eax,0x31363563
  40a3d8:	cmp    DWORD PTR [rbx],esi
  40a3da:	xor    al,0x65
  40a3dc:	xor    BYTE PTR [rax],bh
  40a3de:	cmp    DWORD PTR [rip+0x1],eax        # 0x40a3e5
  40a3e4:	sbb    al,0x53
  40a3e6:	jns    0x40a45b
  40a3e8:	je     0x40a44f
  40a3ea:	ins    DWORD PTR es:[rdi],dx
  40a3eb:	cs push rdi
  40a3ed:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40a3f4:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a3f6:	jb     0x40a465
  40a3f8:	jae    0x40a428
  40a3fa:	rex.WB ins DWORD PTR es:[rdi],dx
  40a3fc:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  40a3ff:	fs add DWORD PTR gs:[rax],eax
  40a403:	add    BYTE PTR [rax],al
  40a405:	(bad)  
  40a406:	jbe    0x40a469
  40a408:	ins    BYTE PTR es:[rdi],dx
  40a409:	jne    0x40a470
  40a40b:	pop    rdi
  40a40c:	pop    rdi
  40a40d:	add    BYTE PTR [rax],cl
  40a40f:	add    al,BYTE PTR [rax]
  40a411:	add    BYTE PTR [rax],al
  40a413:	add    BYTE PTR [rax],al
  40a415:	add    BYTE PTR [rax],al
  40a417:	or     eax,DWORD PTR [rax+rax*1+0x1]
  40a41b:	add    BYTE PTR [rax],al
  40a41d:	add    bh,bh
  40a41f:	(bad)  
  40a420:	(bad)  
  40a421:	inc    DWORD PTR [rcx]
  40a423:	add    BYTE PTR [rax],al
  40a425:	add    BYTE PTR [rax],al
  40a427:	add    BYTE PTR [rax],al
  40a429:	add    BYTE PTR [rdx+rax*1],cl
  40a42c:	add    BYTE PTR [rax],al
  40a42e:	add    BYTE PTR [rcx+0x53],dl
  40a431:	jns    0x40a4a6
  40a433:	je     0x40a49a
  40a435:	ins    DWORD PTR es:[rdi],dx
  40a436:	cs rex.R jb 0x40a49b
  40a43a:	ja     0x40a4a5
  40a43c:	outs   dx,BYTE PTR ds:[rsi]
  40a43d:	addr32 sub al,0x20
  40a440:	push   rsi
  40a441:	gs jb  0x40a4b7
  40a444:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40a44b:	xor    BYTE PTR cs:[rsi],ch
  40a44e:	xor    BYTE PTR [rax+riz*1],ch
  40a451:	rex.XB jne 0x40a4c0
  40a454:	je     0x40a4cb
  40a456:	jb     0x40a4bd
  40a458:	cmp    eax,0x7475656e
  40a45d:	jb     0x40a4c0
  40a45f:	ins    BYTE PTR es:[rdi],dx
  40a460:	sub    al,0x20
  40a462:	push   rax
  40a463:	jne    0x40a4c7
  40a465:	ins    BYTE PTR es:[rdi],dx
  40a466:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40a46d:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40a471:	(bad)  
  40a472:	xor    BYTE PTR [rbx],dh
  40a474:	xor    ax,0x3766
  40a478:	xor    WORD PTR [rcx],si
  40a47b:	fs xor eax,0x61336130
  40a481:	add    eax,0x1
  40a486:	adc    al,0x53
  40a488:	jns    0x40a4fd
  40a48a:	je     0x40a4f1
  40a48c:	ins    DWORD PTR es:[rdi],dx
  40a48d:	cs rex.R jb 0x40a4f2
  40a491:	ja     0x40a4fc
  40a493:	outs   dx,BYTE PTR ds:[rsi]
  40a494:	addr32 cs push rax
  40a497:	outs   dx,DWORD PTR ds:[rsi]
  40a498:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  40a49f:	add    DWORD PTR [rax+0x1],edi
  40a4a2:	jns    0x40a4a4
  40a4a4:	add    BYTE PTR [rax],cl
  40a4a6:	or     BYTE PTR [rdx],al
  40a4a8:	add    BYTE PTR [rax],al
  40a4aa:	add    BYTE PTR [rsi+0x0],dl
  40a4ad:	add    BYTE PTR [rax],al
  40a4af:	data16 add BYTE PTR [rax],al
  40a4b2:	add    BYTE PTR [rbx],cl
  40a4b4:	add    BYTE PTR [r9],r8b
  40a4b7:	add    BYTE PTR [rax],al
  40a4b9:	add    bh,bh
  40a4bb:	(bad)  
  40a4bc:	(bad)  
  40a4bd:	inc    DWORD PTR [rcx]
  40a4bf:	add    BYTE PTR [rax],al
  40a4c1:	add    BYTE PTR [rax],al
  40a4c3:	add    BYTE PTR [rax],al
  40a4c5:	add    BYTE PTR [rdx+rax*1],cl
  40a4c8:	add    BYTE PTR [rax],al
  40a4ca:	add    BYTE PTR [rdi+0x53],dl
  40a4cd:	jns    0x40a542
  40a4cf:	je     0x40a536
  40a4d1:	ins    DWORD PTR es:[rdi],dx
  40a4d2:	cs push rdi
  40a4d4:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40a4db:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a4dd:	jb     0x40a54c
  40a4df:	jae    0x40a50d
  40a4e1:	and    BYTE PTR [rsi+0x65],dl
  40a4e4:	jb     0x40a559
  40a4e6:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40a4ed:	xor    BYTE PTR cs:[rsi],ch
  40a4f0:	xor    BYTE PTR [rax+riz*1],ch
  40a4f3:	rex.XB jne 0x40a562
  40a4f6:	je     0x40a56d
  40a4f8:	jb     0x40a55f
  40a4fa:	cmp    eax,0x7475656e
  40a4ff:	jb     0x40a562
  40a501:	ins    BYTE PTR es:[rdi],dx
  40a502:	sub    al,0x20
  40a504:	push   rax
  40a505:	jne    0x40a569
  40a507:	ins    BYTE PTR es:[rdi],dx
  40a508:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40a50f:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40a513:	(bad)  
  40a514:	(bad)  
  40a515:	(bad)  
  40a516:	(bad)  
  40a517:	xor    eax,0x31363563
  40a51c:	cmp    DWORD PTR [rbx],esi
  40a51e:	xor    al,0x65
  40a520:	xor    BYTE PTR [rax],bh
  40a522:	cmp    DWORD PTR [rip+0x1],eax        # 0x40a529
  40a528:	sbb    al,0x53
  40a52a:	jns    0x40a59f
  40a52c:	je     0x40a593
  40a52e:	ins    DWORD PTR es:[rdi],dx
  40a52f:	cs push rdi
  40a531:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40a538:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a53a:	jb     0x40a5a9
  40a53c:	jae    0x40a56c
  40a53e:	push   rax
  40a53f:	(bad)  
  40a540:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x5
  40a549:	add    al,0x5f
  40a54b:	(bad)  
  40a54c:	ins    BYTE PTR es:[rdi],dx
  40a54d:	ins    BYTE PTR es:[rdi],dx
  40a54e:	add    al,0x5f
  40a550:	je     0x40a5c1
  40a552:	jo     0x40a559
  40a554:	pop    rdi
  40a555:	ins    BYTE PTR es:[rdi],dx
  40a556:	gs data16 je 0x40a560
  40a55a:	pop    rdi
  40a55b:	jb     0x40a5c6
  40a55d:	addr32 push 0x625f0774
  40a563:	outs   dx,DWORD PTR ds:[rsi]
  40a564:	je     0x40a5da
  40a566:	outs   dx,DWORD PTR ds:[rsi]
  40a567:	ins    DWORD PTR es:[rdi],dx
  40a568:	add    BYTE PTR [rax],al
  40a56a:	add    BYTE PTR [rax],al
  40a56c:	add    BYTE PTR [rcx],al
  40a56e:	or     BYTE PTR [rax],cl
  40a570:	or     BYTE PTR [rax],cl
  40a572:	add    al,BYTE PTR [rax]
  40a574:	add    BYTE PTR [rax],al
  40a576:	add    BYTE PTR [rdx],bl
  40a578:	add    BYTE PTR [rax],al
  40a57a:	add    BYTE PTR [rdx],al
  40a57c:	add    BYTE PTR [rax],al
  40a57e:	add    BYTE PTR [rax],al
  40a580:	add    BYTE PTR [rax],al
  40a582:	add    BYTE PTR [rdx],al
  40a584:	add    BYTE PTR [rax],al
  40a586:	add    BYTE PTR [rbx],cl
  40a588:	add    BYTE PTR [r9],al
  40a58b:	add    BYTE PTR [rax],al
  40a58d:	add    bh,bh
  40a58f:	(bad)  
  40a590:	(bad)  
  40a591:	inc    DWORD PTR [rcx]
  40a593:	add    BYTE PTR [rax],al
  40a595:	add    BYTE PTR [rax],al
  40a597:	add    BYTE PTR [rax],al
  40a599:	add    BYTE PTR [rdx+rax*1],cl
  40a59c:	add    BYTE PTR [rax],al
  40a59e:	add    BYTE PTR [rcx+0x53],dl
  40a5a1:	jns    0x40a616
  40a5a3:	je     0x40a60a
  40a5a5:	ins    DWORD PTR es:[rdi],dx
  40a5a6:	cs rex.R jb 0x40a60b
  40a5aa:	ja     0x40a615
  40a5ac:	outs   dx,BYTE PTR ds:[rsi]
  40a5ad:	addr32 sub al,0x20
  40a5b0:	push   rsi
  40a5b1:	gs jb  0x40a627
  40a5b4:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40a5bb:	xor    BYTE PTR cs:[rsi],ch
  40a5be:	xor    BYTE PTR [rax+riz*1],ch
  40a5c1:	rex.XB jne 0x40a630
  40a5c4:	je     0x40a63b
  40a5c6:	jb     0x40a62d
  40a5c8:	cmp    eax,0x7475656e
  40a5cd:	jb     0x40a630
  40a5cf:	ins    BYTE PTR es:[rdi],dx
  40a5d0:	sub    al,0x20
  40a5d2:	push   rax
  40a5d3:	jne    0x40a637
  40a5d5:	ins    BYTE PTR es:[rdi],dx
  40a5d6:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40a5dd:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40a5e1:	(bad)  
  40a5e2:	xor    BYTE PTR [rbx],dh
  40a5e4:	xor    ax,0x3766
  40a5e8:	xor    WORD PTR [rcx],si
  40a5eb:	fs xor eax,0x61336130
  40a5f1:	add    eax,0x1
  40a5f6:	adc    edx,DWORD PTR [rbx+0x79]
  40a5f9:	jae    0x40a66f
  40a5fb:	gs ins DWORD PTR es:[rdi],dx
  40a5fd:	cs rex.R jb 0x40a662
  40a601:	ja     0x40a66c
  40a603:	outs   dx,BYTE PTR ds:[rsi]
  40a604:	addr32 cs push rbx
  40a607:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40a60e:	add    eax,0x74646977
  40a613:	push   0x69656806
  40a618:	addr32 push 0x8000074
  40a61e:	or     BYTE PTR [rdx],al
  40a620:	add    BYTE PTR [rax],al
  40a622:	add    BYTE PTR [rax],ch
  40a624:	add    DWORD PTR [rax],eax
  40a626:	add    BYTE PTR [rcx],dl
  40a628:	add    BYTE PTR [rax],al
  40a62a:	add    BYTE PTR [rbx],cl
  40a62c:	or     BYTE PTR [rsi],al
  40a62e:	add    BYTE PTR [rax],al
  40a630:	add    BYTE PTR [rcx],al
  40a632:	(bad)  
  40a633:	push   rdx
  40a634:	gs jo  0x40a698
  40a637:	imul   esi,DWORD PTR [rdx+0x43],0x100
  40a63e:	add    bh,bh
  40a640:	(bad)  
  40a641:	(bad)  
  40a642:	inc    DWORD PTR [rcx]
  40a644:	add    BYTE PTR [rax],al
  40a646:	add    BYTE PTR [rax],al
  40a648:	add    BYTE PTR [rax],al
  40a64a:	add    BYTE PTR [rdx+rax*1],cl
  40a64d:	add    BYTE PTR [rax],al
  40a64f:	add    BYTE PTR [rdi+0x53],dl
  40a652:	jns    0x40a6c7
  40a654:	je     0x40a6bb
  40a656:	ins    DWORD PTR es:[rdi],dx
  40a657:	cs push rdi
  40a659:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40a660:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a662:	jb     0x40a6d1
  40a664:	jae    0x40a692
  40a666:	and    BYTE PTR [rsi+0x65],dl
  40a669:	jb     0x40a6de
  40a66b:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40a672:	xor    BYTE PTR cs:[rsi],ch
  40a675:	xor    BYTE PTR [rax+riz*1],ch
  40a678:	rex.XB jne 0x40a6e7
  40a67b:	je     0x40a6f2
  40a67d:	jb     0x40a6e4
  40a67f:	cmp    eax,0x7475656e
  40a684:	jb     0x40a6e7
  40a686:	ins    BYTE PTR es:[rdi],dx
  40a687:	sub    al,0x20
  40a689:	push   rax
  40a68a:	jne    0x40a6ee
  40a68c:	ins    BYTE PTR es:[rdi],dx
  40a68d:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40a694:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40a698:	(bad)  
  40a699:	(bad)  
  40a69a:	(bad)  
  40a69b:	(bad)  
  40a69c:	xor    eax,0x31363563
  40a6a1:	cmp    DWORD PTR [rbx],esi
  40a6a3:	xor    al,0x65
  40a6a5:	xor    BYTE PTR [rax],bh
  40a6a7:	cmp    DWORD PTR [rip+0x1],eax        # 0x40a6ae
  40a6ad:	sbb    al,0x53
  40a6af:	jns    0x40a724
  40a6b1:	je     0x40a718
  40a6b3:	ins    DWORD PTR es:[rdi],dx
  40a6b4:	cs push rdi
  40a6b6:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40a6bd:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a6bf:	jb     0x40a72e
  40a6c1:	jae    0x40a6f1
  40a6c3:	rex.WB ins DWORD PTR es:[rdi],dx
  40a6c5:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  40a6c8:	fs add DWORD PTR gs:[rax],eax
  40a6cc:	add    BYTE PTR [rax],al
  40a6ce:	(bad)  
  40a6cf:	jbe    0x40a732
  40a6d1:	ins    BYTE PTR es:[rdi],dx
  40a6d2:	jne    0x40a739
  40a6d4:	pop    rdi
  40a6d5:	pop    rdi
  40a6d6:	add    BYTE PTR [rax],cl
  40a6d8:	add    al,BYTE PTR [rax]
  40a6da:	add    BYTE PTR [rax],al
  40a6dc:	add    BYTE PTR [rax],al
  40a6de:	add    BYTE PTR [rax],al
  40a6e0:	or     eax,DWORD PTR [rax+rax*1+0x1]
  40a6e4:	add    BYTE PTR [rax],al
  40a6e6:	add    bh,bh
  40a6e8:	(bad)  
  40a6e9:	(bad)  
  40a6ea:	inc    DWORD PTR [rcx]
  40a6ec:	add    BYTE PTR [rax],al
  40a6ee:	add    BYTE PTR [rax],al
  40a6f0:	add    BYTE PTR [rax],al
  40a6f2:	add    BYTE PTR [rdx+rax*1],cl
  40a6f5:	add    BYTE PTR [rax],al
  40a6f7:	add    BYTE PTR [rcx+0x53],dl
  40a6fa:	jns    0x40a76f
  40a6fc:	je     0x40a763
  40a6fe:	ins    DWORD PTR es:[rdi],dx
  40a6ff:	cs rex.R jb 0x40a764
  40a703:	ja     0x40a76e
  40a705:	outs   dx,BYTE PTR ds:[rsi]
  40a706:	addr32 sub al,0x20
  40a709:	push   rsi
  40a70a:	gs jb  0x40a780
  40a70d:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40a714:	xor    BYTE PTR cs:[rsi],ch
  40a717:	xor    BYTE PTR [rax+riz*1],ch
  40a71a:	rex.XB jne 0x40a789
  40a71d:	je     0x40a794
  40a71f:	jb     0x40a786
  40a721:	cmp    eax,0x7475656e
  40a726:	jb     0x40a789
  40a728:	ins    BYTE PTR es:[rdi],dx
  40a729:	sub    al,0x20
  40a72b:	push   rax
  40a72c:	jne    0x40a790
  40a72e:	ins    BYTE PTR es:[rdi],dx
  40a72f:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40a736:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40a73a:	(bad)  
  40a73b:	xor    BYTE PTR [rbx],dh
  40a73d:	xor    ax,0x3766
  40a741:	xor    WORD PTR [rcx],si
  40a744:	fs xor eax,0x61336130
  40a74a:	add    eax,0x1
  40a74f:	adc    al,0x53
  40a751:	jns    0x40a7c6
  40a753:	je     0x40a7ba
  40a755:	ins    DWORD PTR es:[rdi],dx
  40a756:	cs rex.R jb 0x40a7bb
  40a75a:	ja     0x40a7c5
  40a75c:	outs   dx,BYTE PTR ds:[rsi]
  40a75d:	addr32 cs push rax
  40a760:	outs   dx,DWORD PTR ds:[rsi]
  40a761:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  40a768:	add    DWORD PTR [rax+0x1],edi
  40a76b:	jns    0x40a76d
  40a76d:	add    BYTE PTR [rax],cl
  40a76f:	or     BYTE PTR [rdx],al
  40a771:	add    BYTE PTR [rax],al
  40a773:	add    BYTE PTR [rax],ah
  40a775:	add    BYTE PTR [rax],al
  40a777:	add    BYTE PTR [rsi+0x0],ah
  40a77a:	add    BYTE PTR [rax],al
  40a77c:	or     eax,DWORD PTR [rbp+0x0]
  40a77f:	add    DWORD PTR [rax],eax
  40a781:	add    BYTE PTR [rax],al
  40a783:	(bad)  
  40a784:	(bad)  
  40a785:	(bad)  
  40a786:	inc    DWORD PTR [rcx]
  40a788:	add    BYTE PTR [rax],al
  40a78a:	add    BYTE PTR [rax],al
  40a78c:	add    BYTE PTR [rax],al
  40a78e:	add    BYTE PTR [rdx+rax*1],cl
  40a791:	add    BYTE PTR [rax],al
  40a793:	add    BYTE PTR [rdi+0x53],dl
  40a796:	jns    0x40a80b
  40a798:	je     0x40a7ff
  40a79a:	ins    DWORD PTR es:[rdi],dx
  40a79b:	cs push rdi
  40a79d:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40a7a4:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a7a6:	jb     0x40a815
  40a7a8:	jae    0x40a7d6
  40a7aa:	and    BYTE PTR [rsi+0x65],dl
  40a7ad:	jb     0x40a822
  40a7af:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40a7b6:	xor    BYTE PTR cs:[rsi],ch
  40a7b9:	xor    BYTE PTR [rax+riz*1],ch
  40a7bc:	rex.XB jne 0x40a82b
  40a7bf:	je     0x40a836
  40a7c1:	jb     0x40a828
  40a7c3:	cmp    eax,0x7475656e
  40a7c8:	jb     0x40a82b
  40a7ca:	ins    BYTE PTR es:[rdi],dx
  40a7cb:	sub    al,0x20
  40a7cd:	push   rax
  40a7ce:	jne    0x40a832
  40a7d0:	ins    BYTE PTR es:[rdi],dx
  40a7d1:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40a7d8:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40a7dc:	(bad)  
  40a7dd:	(bad)  
  40a7de:	(bad)  
  40a7df:	(bad)  
  40a7e0:	xor    eax,0x31363563
  40a7e5:	cmp    DWORD PTR [rbx],esi
  40a7e7:	xor    al,0x65
  40a7e9:	xor    BYTE PTR [rax],bh
  40a7eb:	cmp    DWORD PTR [rip+0x1],eax        # 0x40a7f2
  40a7f1:	sbb    al,0x53
  40a7f3:	jns    0x40a868
  40a7f5:	je     0x40a85c
  40a7f7:	ins    DWORD PTR es:[rdi],dx
  40a7f8:	cs push rdi
  40a7fa:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40a801:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a803:	jb     0x40a872
  40a805:	jae    0x40a835
  40a807:	push   rax
  40a808:	(bad)  
  40a809:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x5
  40a812:	add    al,0x5f
  40a814:	(bad)  
  40a815:	ins    BYTE PTR es:[rdi],dx
  40a816:	ins    BYTE PTR es:[rdi],dx
  40a817:	add    al,0x5f
  40a819:	je     0x40a88a
  40a81b:	jo     0x40a822
  40a81d:	pop    rdi
  40a81e:	ins    BYTE PTR es:[rdi],dx
  40a81f:	gs data16 je 0x40a829
  40a823:	pop    rdi
  40a824:	jb     0x40a88f
  40a826:	addr32 push 0x625f0774
  40a82c:	outs   dx,DWORD PTR ds:[rsi]
  40a82d:	je     0x40a8a3
  40a82f:	outs   dx,DWORD PTR ds:[rsi]
  40a830:	ins    DWORD PTR es:[rdi],dx
  40a831:	add    BYTE PTR [rax],al
  40a833:	add    BYTE PTR [rax],al
  40a835:	add    BYTE PTR [rcx],al
  40a837:	or     BYTE PTR [rax],cl
  40a839:	or     BYTE PTR [rax],cl
  40a83b:	add    al,BYTE PTR [rax]
  40a83d:	add    BYTE PTR [rax],al
  40a83f:	add    BYTE PTR [rdx],bl
  40a841:	add    BYTE PTR [rax],al
  40a843:	add    BYTE PTR [rax],ah
  40a845:	add    BYTE PTR [rax],al
  40a847:	add    BYTE PTR [rdx],al
  40a849:	add    BYTE PTR [rax],al
  40a84b:	add    BYTE PTR [rdx],al
  40a84d:	add    BYTE PTR [rax],al
  40a84f:	add    BYTE PTR [rbx],cl
  40a851:	add    BYTE PTR [r9],al
  40a854:	add    BYTE PTR [rax],al
  40a856:	add    bh,bh
  40a858:	(bad)  
  40a859:	(bad)  
  40a85a:	inc    DWORD PTR [rcx]
  40a85c:	add    BYTE PTR [rax],al
  40a85e:	add    BYTE PTR [rax],al
  40a860:	add    BYTE PTR [rax],al
  40a862:	add    BYTE PTR [rdx+rax*1],cl
  40a865:	add    BYTE PTR [rax],al
  40a867:	add    BYTE PTR [rcx+0x53],dl
  40a86a:	jns    0x40a8df
  40a86c:	je     0x40a8d3
  40a86e:	ins    DWORD PTR es:[rdi],dx
  40a86f:	cs rex.R jb 0x40a8d4
  40a873:	ja     0x40a8de
  40a875:	outs   dx,BYTE PTR ds:[rsi]
  40a876:	addr32 sub al,0x20
  40a879:	push   rsi
  40a87a:	gs jb  0x40a8f0
  40a87d:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40a884:	xor    BYTE PTR cs:[rsi],ch
  40a887:	xor    BYTE PTR [rax+riz*1],ch
  40a88a:	rex.XB jne 0x40a8f9
  40a88d:	je     0x40a904
  40a88f:	jb     0x40a8f6
  40a891:	cmp    eax,0x7475656e
  40a896:	jb     0x40a8f9
  40a898:	ins    BYTE PTR es:[rdi],dx
  40a899:	sub    al,0x20
  40a89b:	push   rax
  40a89c:	jne    0x40a900
  40a89e:	ins    BYTE PTR es:[rdi],dx
  40a89f:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40a8a6:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40a8aa:	(bad)  
  40a8ab:	xor    BYTE PTR [rbx],dh
  40a8ad:	xor    ax,0x3766
  40a8b1:	xor    WORD PTR [rcx],si
  40a8b4:	fs xor eax,0x61336130
  40a8ba:	add    eax,0x1
  40a8bf:	adc    edx,DWORD PTR [rbx+0x79]
  40a8c2:	jae    0x40a938
  40a8c4:	gs ins DWORD PTR es:[rdi],dx
  40a8c6:	cs rex.R jb 0x40a92b
  40a8ca:	ja     0x40a935
  40a8cc:	outs   dx,BYTE PTR ds:[rsi]
  40a8cd:	addr32 cs push rbx
  40a8d0:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40a8d7:	add    eax,0x74646977
  40a8dc:	push   0x69656806
  40a8e1:	addr32 push 0x8000074
  40a8e7:	or     BYTE PTR [rdx],al
  40a8e9:	add    BYTE PTR [rax],al
  40a8eb:	add    BYTE PTR [rdx],dh
  40a8ed:	add    BYTE PTR [rax],al
  40a8ef:	add    BYTE PTR [rdx],dh
  40a8f1:	add    BYTE PTR [rax],al
  40a8f3:	add    BYTE PTR [rbx],cl
  40a8f5:	or     BYTE PTR [rdi],al
  40a8f7:	add    BYTE PTR [rax],al
  40a8f9:	add    BYTE PTR [rax],cl
  40a8fb:	add    al,BYTE PTR [rax]
  40a8fd:	add    BYTE PTR [rax],al
  40a8ff:	rex.X add BYTE PTR [rcx],al
  40a902:	add    BYTE PTR [rax],al
  40a904:	add    bh,bh
  40a906:	(bad)  
  40a907:	(bad)  
  40a908:	inc    DWORD PTR [rcx]
  40a90a:	add    BYTE PTR [rax],al
  40a90c:	add    BYTE PTR [rax],al
  40a90e:	add    BYTE PTR [rax],al
  40a910:	add    BYTE PTR [rdx+rax*1],cl
  40a913:	add    BYTE PTR [rax],al
  40a915:	add    BYTE PTR [rdi+0x53],dl
  40a918:	jns    0x40a98d
  40a91a:	je     0x40a981
  40a91c:	ins    DWORD PTR es:[rdi],dx
  40a91d:	cs push rdi
  40a91f:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40a926:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a928:	jb     0x40a997
  40a92a:	jae    0x40a958
  40a92c:	and    BYTE PTR [rsi+0x65],dl
  40a92f:	jb     0x40a9a4
  40a931:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40a938:	xor    BYTE PTR cs:[rsi],ch
  40a93b:	xor    BYTE PTR [rax+riz*1],ch
  40a93e:	rex.XB jne 0x40a9ad
  40a941:	je     0x40a9b8
  40a943:	jb     0x40a9aa
  40a945:	cmp    eax,0x7475656e
  40a94a:	jb     0x40a9ad
  40a94c:	ins    BYTE PTR es:[rdi],dx
  40a94d:	sub    al,0x20
  40a94f:	push   rax
  40a950:	jne    0x40a9b4
  40a952:	ins    BYTE PTR es:[rdi],dx
  40a953:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40a95a:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40a95e:	(bad)  
  40a95f:	(bad)  
  40a960:	(bad)  
  40a961:	(bad)  
  40a962:	xor    eax,0x31363563
  40a967:	cmp    DWORD PTR [rbx],esi
  40a969:	xor    al,0x65
  40a96b:	xor    BYTE PTR [rax],bh
  40a96d:	cmp    DWORD PTR [rip+0x1],eax        # 0x40a974
  40a973:	(bad)  
  40a974:	push   rbx
  40a975:	jns    0x40a9ea
  40a977:	je     0x40a9de
  40a979:	ins    DWORD PTR es:[rdi],dx
  40a97a:	cs push rdi
  40a97c:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40a983:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a985:	jb     0x40a9f4
  40a987:	jae    0x40a9b7
  40a989:	rex.R outs dx,DWORD PTR ds:[rsi]
  40a98b:	movsxd ebp,DWORD PTR [rbx+0x53]
  40a98e:	je     0x40aa09
  40a990:	ins    BYTE PTR es:[rdi],dx
  40a991:	add    DWORD PTR gs:[rax],eax
  40a994:	add    BYTE PTR [rax],al
  40a996:	(bad)  
  40a997:	jbe    0x40a9fa
  40a999:	ins    BYTE PTR es:[rdi],dx
  40a99a:	jne    0x40aa01
  40a99c:	pop    rdi
  40a99d:	pop    rdi
  40a99e:	add    BYTE PTR [rax],cl
  40a9a0:	add    al,BYTE PTR [rax]
  40a9a2:	add    BYTE PTR [rax],al
  40a9a4:	add    eax,0xb000000
  40a9a9:	rex.RX add BYTE PTR [rcx],r8b
  40a9ac:	add    BYTE PTR [rax],al
  40a9ae:	add    bh,bh
  40a9b0:	(bad)  
  40a9b1:	(bad)  
  40a9b2:	inc    DWORD PTR [rcx]
  40a9b4:	add    BYTE PTR [rax],al
  40a9b6:	add    BYTE PTR [rax],al
  40a9b8:	add    BYTE PTR [rax],al
  40a9ba:	add    BYTE PTR [rdx+rax*1],cl
  40a9bd:	add    BYTE PTR [rax],al
  40a9bf:	add    BYTE PTR [rdi+0x53],dl
  40a9c2:	jns    0x40aa37
  40a9c4:	je     0x40aa2b
  40a9c6:	ins    DWORD PTR es:[rdi],dx
  40a9c7:	cs push rdi
  40a9c9:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40a9d0:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a9d2:	jb     0x40aa41
  40a9d4:	jae    0x40aa02
  40a9d6:	and    BYTE PTR [rsi+0x65],dl
  40a9d9:	jb     0x40aa4e
  40a9db:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40a9e2:	xor    BYTE PTR cs:[rsi],ch
  40a9e5:	xor    BYTE PTR [rax+riz*1],ch
  40a9e8:	rex.XB jne 0x40aa57
  40a9eb:	je     0x40aa62
  40a9ed:	jb     0x40aa54
  40a9ef:	cmp    eax,0x7475656e
  40a9f4:	jb     0x40aa57
  40a9f6:	ins    BYTE PTR es:[rdi],dx
  40a9f7:	sub    al,0x20
  40a9f9:	push   rax
  40a9fa:	jne    0x40aa5e
  40a9fc:	ins    BYTE PTR es:[rdi],dx
  40a9fd:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40aa04:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40aa08:	(bad)  
  40aa09:	(bad)  
  40aa0a:	(bad)  
  40aa0b:	(bad)  
  40aa0c:	xor    eax,0x31363563
  40aa11:	cmp    DWORD PTR [rbx],esi
  40aa13:	xor    al,0x65
  40aa15:	xor    BYTE PTR [rax],bh
  40aa17:	cmp    DWORD PTR [rip+0x1],eax        # 0x40aa1e
  40aa1d:	sub    BYTE PTR [rbx+0x79],dl
  40aa20:	jae    0x40aa96
  40aa22:	gs ins DWORD PTR es:[rdi],dx
  40aa24:	cs push rdi
  40aa26:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40aa2d:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40aa2f:	jb     0x40aa9e
  40aa31:	jae    0x40aa61
  40aa33:	push   rsp
  40aa34:	(bad)  
  40aa35:	(bad)  
  40aa36:	ins    BYTE PTR es:[rdi],dx
  40aa37:	gs rex.WR (bad) 
  40aa3a:	jns    0x40aaab
  40aa3c:	jne    0x40aab2
  40aa3e:	push   rbx
  40aa3f:	gs je  0x40aab6
  40aa42:	imul   ebp,DWORD PTR [rsi+0x67],0x173
  40aa49:	add    BYTE PTR [rax],dl
  40aa4b:	push   rbx
  40aa4c:	gs jb  0x40aab8
  40aa4f:	(bad)  
  40aa50:	ins    BYTE PTR es:[rdi],dx
  40aa51:	imul   edi,DWORD PTR [rdx+0x65],0x72745364
  40aa58:	imul   ebp,DWORD PTR [rsi+0x67],0x201
  40aa5f:	add    BYTE PTR [rsi],al
  40aa61:	add    eax,DWORD PTR [rax]
  40aa63:	add    BYTE PTR [rax],al
  40aa65:	fiadd  WORD PTR [rdi]
  40aa67:	cmp    al,0x3f
  40aa69:	js     0x40aad8
  40aa6b:	ins    BYTE PTR es:[rdi],dx
  40aa6c:	and    BYTE PTR [rsi+0x65],dh
  40aa6f:	jb     0x40aae4
  40aa71:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  40aa78:	xor    BYTE PTR [rdx],ah
  40aa7a:	and    BYTE PTR [rbp+0x6e],ah
  40aa7d:	movsxd ebp,DWORD PTR [rdi+0x64]
  40aa80:	imul   ebp,DWORD PTR [rsi+0x67],0x7475223d
  40aa87:	sub    ax,0x3631
  40aa8b:	and    bh,BYTE PTR [rdi]
  40aa8d:	ds cmp al,0x54
  40aa90:	(bad)  
  40aa91:	(bad)  
  40aa92:	ins    BYTE PTR es:[rdi],dx
  40aa93:	gs rex.WR (bad) 
  40aa96:	jns    0x40ab07
  40aa98:	jne    0x40ab0e
  40aa9a:	push   rbx
  40aa9b:	gs je  0x40ab12
  40aa9e:	imul   ebp,DWORD PTR [rsi+0x67],0x433c3e73
  40aaa5:	outs   dx,DWORD PTR ds:[rsi]
  40aaa6:	outs   dx,BYTE PTR ds:[rsi]
  40aaa7:	je     0x40ab1b
  40aaa9:	outs   dx,DWORD PTR ds:[rsi]
  40aaaa:	ins    BYTE PTR es:[rdi],dx
  40aaab:	jae    0x40aaeb
  40aaad:	cmp    al,0x43
  40aaaf:	outs   dx,DWORD PTR ds:[rsi]
  40aab0:	outs   dx,BYTE PTR ds:[rsi]
  40aab1:	je     0x40ab25
  40aab3:	outs   dx,DWORD PTR ds:[rsi]
  40aab4:	ins    BYTE PTR es:[rdi],dx
  40aab5:	and    BYTE PTR [rsi+0x61],cl
  40aab8:	ins    DWORD PTR es:[rdi],dx
  40aab9:	gs cmp eax,0x6d657222
  40aabf:	outs   dx,DWORD PTR ds:[rsi]
  40aac0:	jbe    0x40ab27
  40aac2:	rex.RX
  40aac3:	gs (bad) 
  40aac5:	je     0x40ab3c
  40aac7:	jb     0x40ab2e
  40aac9:	jae    0x40ab1b
  40aacb:	imul   esp,DWORD PTR [rbx+0x74],0x42657275
  40aad2:	outs   dx,DWORD PTR ds:[rsi]
  40aad3:	js     0x40aaf7
  40aad5:	and    BYTE PTR [rdx+0x6f],dl
  40aad8:	ja     0x40ab17
  40aada:	and    dh,BYTE PTR [rdx+riz*1]
  40aadd:	and    BYTE PTR [rdx+0x6f],dl
  40aae0:	ja     0x40ab35
  40aae2:	jo     0x40ab45
  40aae4:	outs   dx,BYTE PTR ds:[rsi]
  40aae5:	cmp    eax,0x20223222
  40aaea:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40aaec:	ins    BYTE PTR es:[rdi],dx
  40aaed:	jne    0x40ab5c
  40aaef:	outs   dx,BYTE PTR ds:[rsi]
  40aaf0:	cmp    eax,0x20223022
  40aaf5:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40aaf7:	ins    BYTE PTR es:[rdi],dx
  40aaf8:	jne    0x40ab67
  40aafa:	outs   dx,BYTE PTR ds:[rsi]
  40aafb:	push   rbx
  40aafc:	jo     0x40ab5f
  40aafe:	outs   dx,BYTE PTR ds:[rsi]
  40aaff:	cmp    eax,0x20223122
  40ab04:	(bad)  
  40ab05:	ds cmp al,0x43
  40ab08:	outs   dx,DWORD PTR ds:[rsi]
  40ab09:	outs   dx,BYTE PTR ds:[rsi]
  40ab0a:	je     0x40ab7e
  40ab0c:	outs   dx,DWORD PTR ds:[rsi]
  40ab0d:	ins    BYTE PTR es:[rdi],dx
  40ab0e:	and    BYTE PTR [rsi+0x61],cl
  40ab11:	ins    DWORD PTR es:[rdi],dx
  40ab12:	gs cmp eax,0x70657222
  40ab18:	(bad)  
  40ab19:	imul   esi,DWORD PTR [rdx+0x4c],0x4c6b6e69
  40ab20:	(bad)  
  40ab21:	(bad)  
  40ab22:	gs ins BYTE PTR es:[rdi],dx
  40ab24:	and    ah,BYTE PTR [rax]
  40ab26:	push   rdx
  40ab27:	outs   dx,DWORD PTR ds:[rsi]
  40ab28:	ja     0x40ab67
  40ab2a:	and    dh,BYTE PTR [rdx]
  40ab2c:	and    ah,BYTE PTR [rax]
  40ab2e:	push   rdx
  40ab2f:	outs   dx,DWORD PTR ds:[rsi]
  40ab30:	ja     0x40ab85
  40ab32:	jo     0x40ab95
  40ab34:	outs   dx,BYTE PTR ds:[rsi]
  40ab35:	cmp    eax,0x20223122
  40ab3a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ab3c:	ins    BYTE PTR es:[rdi],dx
  40ab3d:	jne    0x40abac
  40ab3f:	outs   dx,BYTE PTR ds:[rsi]
  40ab40:	cmp    eax,0x20223122
  40ab45:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ab47:	ins    BYTE PTR es:[rdi],dx
  40ab48:	jne    0x40abb7
  40ab4a:	outs   dx,BYTE PTR ds:[rsi]
  40ab4b:	push   rbx
  40ab4c:	jo     0x40abaf
  40ab4e:	outs   dx,BYTE PTR ds:[rsi]
  40ab4f:	cmp    eax,0x20223122
  40ab54:	(bad)  
  40ab55:	ds cmp al,0x43
  40ab58:	outs   dx,DWORD PTR ds:[rsi]
  40ab59:	outs   dx,BYTE PTR ds:[rsi]
  40ab5a:	je     0x40abce
  40ab5c:	outs   dx,DWORD PTR ds:[rsi]
  40ab5d:	ins    BYTE PTR es:[rdi],dx
  40ab5e:	and    BYTE PTR [rsi+0x61],cl
  40ab61:	ins    DWORD PTR es:[rdi],dx
  40ab62:	gs cmp eax,0x64646122
  40ab68:	rex.RX
  40ab69:	gs (bad) 
  40ab6b:	je     0x40abe2
  40ab6d:	jb     0x40abd4
  40ab6f:	push   rax
  40ab70:	imul   esp,DWORD PTR [rbx+0x74],0x42657275
  40ab77:	outs   dx,DWORD PTR ds:[rsi]
  40ab78:	js     0x40ab9c
  40ab7a:	and    BYTE PTR [rdx+0x6f],dl
  40ab7d:	ja     0x40abbc
  40ab7f:	and    dh,BYTE PTR [rax]
  40ab81:	and    ah,BYTE PTR [rax]
  40ab83:	push   rdx
  40ab84:	outs   dx,DWORD PTR ds:[rsi]
  40ab85:	ja     0x40abda
  40ab87:	jo     0x40abea
  40ab89:	outs   dx,BYTE PTR ds:[rsi]
  40ab8a:	cmp    eax,0x20223222
  40ab8f:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ab91:	ins    BYTE PTR es:[rdi],dx
  40ab92:	jne    0x40ac01
  40ab94:	outs   dx,BYTE PTR ds:[rsi]
  40ab95:	cmp    eax,0x20223022
  40ab9a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ab9c:	ins    BYTE PTR es:[rdi],dx
  40ab9d:	jne    0x40ac0c
  40ab9f:	outs   dx,BYTE PTR ds:[rsi]
  40aba0:	push   rbx
  40aba1:	jo     0x40ac04
  40aba3:	outs   dx,BYTE PTR ds:[rsi]
  40aba4:	cmp    eax,0x20223122
  40aba9:	(bad)  
  40abaa:	ds cmp al,0x43
  40abad:	outs   dx,DWORD PTR ds:[rsi]
  40abae:	outs   dx,BYTE PTR ds:[rsi]
  40abaf:	je     0x40ac23
  40abb1:	outs   dx,DWORD PTR ds:[rsi]
  40abb2:	ins    BYTE PTR es:[rdi],dx
  40abb3:	and    BYTE PTR [rsi+0x61],cl
  40abb6:	ins    DWORD PTR es:[rdi],dx
  40abb7:	gs cmp eax,0x64646122
  40abbd:	rex.RX
  40abbe:	gs (bad) 
  40abc0:	je     0x40ac37
  40abc2:	jb     0x40ac29
  40abc4:	imul   r13,QWORD PTR [rsi+0x6b],0x6562614c
  40abcc:	ins    BYTE PTR es:[rdi],dx
  40abcd:	and    ah,BYTE PTR [rax]
  40abcf:	push   rdx
  40abd0:	outs   dx,DWORD PTR ds:[rsi]
  40abd1:	ja     0x40ac10
  40abd3:	and    dh,BYTE PTR [rax]
  40abd5:	and    ah,BYTE PTR [rax]
  40abd7:	push   rdx
  40abd8:	outs   dx,DWORD PTR ds:[rsi]
  40abd9:	ja     0x40ac2e
  40abdb:	jo     0x40ac3e
  40abdd:	outs   dx,BYTE PTR ds:[rsi]
  40abde:	cmp    eax,0x20223122
  40abe3:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40abe5:	ins    BYTE PTR es:[rdi],dx
  40abe6:	jne    0x40ac55
  40abe8:	outs   dx,BYTE PTR ds:[rsi]
  40abe9:	cmp    eax,0x20223122
  40abee:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40abf0:	ins    BYTE PTR es:[rdi],dx
  40abf1:	jne    0x40ac60
  40abf3:	outs   dx,BYTE PTR ds:[rsi]
  40abf4:	push   rbx
  40abf5:	jo     0x40ac58
  40abf7:	outs   dx,BYTE PTR ds:[rsi]
  40abf8:	cmp    eax,0x20223122
  40abfd:	(bad)  
  40abfe:	ds cmp al,0x43
  40ac01:	outs   dx,DWORD PTR ds:[rsi]
  40ac02:	outs   dx,BYTE PTR ds:[rsi]
  40ac03:	je     0x40ac77
  40ac05:	outs   dx,DWORD PTR ds:[rsi]
  40ac06:	ins    BYTE PTR es:[rdi],dx
  40ac07:	and    BYTE PTR [rsi+0x61],cl
  40ac0a:	ins    DWORD PTR es:[rdi],dx
  40ac0b:	gs cmp eax,0x64646122
  40ac11:	rex.RX
  40ac12:	gs (bad) 
  40ac14:	je     0x40ac8b
  40ac16:	jb     0x40ac7d
  40ac18:	rex.R
  40ac19:	gs jae 0x40ac7f
  40ac1c:	imul   esi,DWORD PTR [rax+0x74],0x6562614c
  40ac23:	ins    BYTE PTR es:[rdi],dx
  40ac24:	and    ah,BYTE PTR [rax]
  40ac26:	push   rdx
  40ac27:	outs   dx,DWORD PTR ds:[rsi]
  40ac28:	ja     0x40ac67
  40ac2a:	and    dh,BYTE PTR [rcx]
  40ac2c:	and    ah,BYTE PTR [rax]
  40ac2e:	push   rdx
  40ac2f:	outs   dx,DWORD PTR ds:[rsi]
  40ac30:	ja     0x40ac85
  40ac32:	jo     0x40ac95
  40ac34:	outs   dx,BYTE PTR ds:[rsi]
  40ac35:	cmp    eax,0x20223122
  40ac3a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ac3c:	ins    BYTE PTR es:[rdi],dx
  40ac3d:	jne    0x40acac
  40ac3f:	outs   dx,BYTE PTR ds:[rsi]
  40ac40:	cmp    eax,0x20223122
  40ac45:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ac47:	ins    BYTE PTR es:[rdi],dx
  40ac48:	jne    0x40acb7
  40ac4a:	outs   dx,BYTE PTR ds:[rsi]
  40ac4b:	push   rbx
  40ac4c:	jo     0x40acaf
  40ac4e:	outs   dx,BYTE PTR ds:[rsi]
  40ac4f:	cmp    eax,0x20223122
  40ac54:	(bad)  
  40ac55:	ds cmp al,0x43
  40ac58:	outs   dx,DWORD PTR ds:[rsi]
  40ac59:	outs   dx,BYTE PTR ds:[rsi]
  40ac5a:	je     0x40acce
  40ac5c:	outs   dx,DWORD PTR ds:[rsi]
  40ac5d:	ins    BYTE PTR es:[rdi],dx
  40ac5e:	and    BYTE PTR [rsi+0x61],cl
  40ac61:	ins    DWORD PTR es:[rdi],dx
  40ac62:	gs cmp eax,0x70657222
  40ac68:	(bad)  
  40ac69:	imul   esi,DWORD PTR [rdx+0x50],0x75746369
  40ac70:	jb     0x40acd7
  40ac72:	rex.X outs dx,DWORD PTR ds:[rsi]
  40ac74:	js     0x40ac98
  40ac76:	and    BYTE PTR [rdx+0x6f],dl
  40ac79:	ja     0x40acb8
  40ac7b:	and    dh,BYTE PTR [rdx]
  40ac7d:	and    ah,BYTE PTR [rax]
  40ac7f:	push   rdx
  40ac80:	outs   dx,DWORD PTR ds:[rsi]
  40ac81:	ja     0x40acd6
  40ac83:	jo     0x40ace6
  40ac85:	outs   dx,BYTE PTR ds:[rsi]
  40ac86:	cmp    eax,0x20223222
  40ac8b:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ac8d:	ins    BYTE PTR es:[rdi],dx
  40ac8e:	jne    0x40acfd
  40ac90:	outs   dx,BYTE PTR ds:[rsi]
  40ac91:	cmp    eax,0x20223022
  40ac96:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ac98:	ins    BYTE PTR es:[rdi],dx
  40ac99:	jne    0x40ad08
  40ac9b:	outs   dx,BYTE PTR ds:[rsi]
  40ac9c:	push   rbx
  40ac9d:	jo     0x40ad00
  40ac9f:	outs   dx,BYTE PTR ds:[rsi]
  40aca0:	cmp    eax,0x20223122
  40aca5:	(bad)  
  40aca6:	ds cmp al,0x43
  40aca9:	outs   dx,DWORD PTR ds:[rsi]
  40acaa:	outs   dx,BYTE PTR ds:[rsi]
  40acab:	je     0x40ad1f
  40acad:	outs   dx,DWORD PTR ds:[rsi]
  40acae:	ins    BYTE PTR es:[rdi],dx
  40acaf:	and    BYTE PTR [rsi+0x61],cl
  40acb2:	ins    DWORD PTR es:[rdi],dx
  40acb3:	gs cmp eax,0x70657222
  40acb9:	(bad)  
  40acba:	imul   esi,DWORD PTR [rdx+0x44],0x72637365
  40acc1:	imul   esi,DWORD PTR [rax+0x74],0x6562614c
  40acc8:	ins    BYTE PTR es:[rdi],dx
  40acc9:	and    ah,BYTE PTR [rax]
  40accb:	push   rdx
  40accc:	outs   dx,DWORD PTR ds:[rsi]
  40accd:	ja     0x40ad0c
  40accf:	and    dh,BYTE PTR [rbx]
  40acd1:	and    ah,BYTE PTR [rax]
  40acd3:	push   rdx
  40acd4:	outs   dx,DWORD PTR ds:[rsi]
  40acd5:	ja     0x40ad2a
  40acd7:	jo     0x40ad3a
  40acd9:	outs   dx,BYTE PTR ds:[rsi]
  40acda:	cmp    eax,0x20223122
  40acdf:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ace1:	ins    BYTE PTR es:[rdi],dx
  40ace2:	jne    0x40ad51
  40ace4:	outs   dx,BYTE PTR ds:[rsi]
  40ace5:	cmp    eax,0x20223122
  40acea:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40acec:	ins    BYTE PTR es:[rdi],dx
  40aced:	jne    0x40ad5c
  40acef:	outs   dx,BYTE PTR ds:[rsi]
  40acf0:	push   rbx
  40acf1:	jo     0x40ad54
  40acf3:	outs   dx,BYTE PTR ds:[rsi]
  40acf4:	cmp    eax,0x20223122
  40acf9:	(bad)  
  40acfa:	ds cmp al,0x43
  40acfd:	outs   dx,DWORD PTR ds:[rsi]
  40acfe:	outs   dx,BYTE PTR ds:[rsi]
  40acff:	je     0x40ad73
  40ad01:	outs   dx,DWORD PTR ds:[rsi]
  40ad02:	ins    BYTE PTR es:[rdi],dx
  40ad03:	and    BYTE PTR [rsi+0x61],cl
  40ad06:	ins    DWORD PTR es:[rdi],dx
  40ad07:	gs cmp eax,0x6d657222
  40ad0d:	outs   dx,DWORD PTR ds:[rsi]
  40ad0e:	jbe    0x40ad75
  40ad10:	rex.RX
  40ad11:	gs (bad) 
  40ad13:	je     0x40ad8a
  40ad15:	jb     0x40ad7c
  40ad17:	jae    0x40ad65
  40ad19:	imul   ebp,DWORD PTR [rsi+0x6b],0x6562614c
  40ad20:	ins    BYTE PTR es:[rdi],dx
  40ad21:	and    ah,BYTE PTR [rax]
  40ad23:	push   rdx
  40ad24:	outs   dx,DWORD PTR ds:[rsi]
  40ad25:	ja     0x40ad64
  40ad27:	and    dh,BYTE PTR [rdx+riz*1]
  40ad2a:	and    BYTE PTR [rdx+0x6f],dl
  40ad2d:	ja     0x40ad82
  40ad2f:	jo     0x40ad92
  40ad31:	outs   dx,BYTE PTR ds:[rsi]
  40ad32:	cmp    eax,0x20223122
  40ad37:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ad39:	ins    BYTE PTR es:[rdi],dx
  40ad3a:	jne    0x40ada9
  40ad3c:	outs   dx,BYTE PTR ds:[rsi]
  40ad3d:	cmp    eax,0x20223122
  40ad42:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ad44:	ins    BYTE PTR es:[rdi],dx
  40ad45:	jne    0x40adb4
  40ad47:	outs   dx,BYTE PTR ds:[rsi]
  40ad48:	push   rbx
  40ad49:	jo     0x40adac
  40ad4b:	outs   dx,BYTE PTR ds:[rsi]
  40ad4c:	cmp    eax,0x20223122
  40ad51:	(bad)  
  40ad52:	ds cmp al,0x43
  40ad55:	outs   dx,DWORD PTR ds:[rsi]
  40ad56:	outs   dx,BYTE PTR ds:[rsi]
  40ad57:	je     0x40adcb
  40ad59:	outs   dx,DWORD PTR ds:[rsi]
  40ad5a:	ins    BYTE PTR es:[rdi],dx
  40ad5b:	and    BYTE PTR [rsi+0x61],cl
  40ad5e:	ins    DWORD PTR es:[rdi],dx
  40ad5f:	gs cmp eax,0x62616c22
  40ad65:	gs ins BYTE PTR es:[rdi],dx
  40ad67:	xor    DWORD PTR [rdx],esp
  40ad69:	and    BYTE PTR [rdx+0x6f],dl
  40ad6c:	ja     0x40adab
  40ad6e:	and    dh,BYTE PTR [rip+0x6f522022]        # 0x6f92cd96
  40ad74:	ja     0x40adc9
  40ad76:	jo     0x40add9
  40ad78:	outs   dx,BYTE PTR ds:[rsi]
  40ad79:	cmp    eax,0x20223122
  40ad7e:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ad80:	ins    BYTE PTR es:[rdi],dx
  40ad81:	jne    0x40adf0
  40ad83:	outs   dx,BYTE PTR ds:[rsi]
  40ad84:	cmp    eax,0x20223122
  40ad89:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ad8b:	ins    BYTE PTR es:[rdi],dx
  40ad8c:	jne    0x40adfb
  40ad8e:	outs   dx,BYTE PTR ds:[rsi]
  40ad8f:	push   rbx
  40ad90:	jo     0x40adf3
  40ad92:	outs   dx,BYTE PTR ds:[rsi]
  40ad93:	cmp    eax,0x20223122
  40ad98:	(bad)  
  40ad99:	ds cmp al,0x2f
  40ad9c:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40ad9e:	outs   dx,BYTE PTR ds:[rsi]
  40ad9f:	je     0x40ae13
  40ada1:	outs   dx,DWORD PTR ds:[rsi]
  40ada2:	ins    BYTE PTR es:[rdi],dx
  40ada3:	jae    0x40ade3
  40ada5:	cmp    al,0x43
  40ada7:	outs   dx,DWORD PTR ds:[rsi]
  40ada8:	ins    BYTE PTR es:[rdi],dx
  40ada9:	jne    0x40ae18
  40adab:	outs   dx,BYTE PTR ds:[rsi]
  40adac:	jae    0x40adce
  40adae:	push   rbx
  40adaf:	je     0x40ae2a
  40adb1:	ins    BYTE PTR es:[rdi],dx
  40adb2:	gs jae 0x40adf2
  40adb5:	and    al,BYTE PTR [rcx+0x75]
  40adb8:	je     0x40ae29
  40adba:	push   rbx
  40adbb:	imul   edi,DWORD PTR [rdx+0x65],0x502c302c
  40adc2:	gs jb  0x40ae28
  40adc5:	outs   dx,BYTE PTR gs:[rsi]
  40adc7:	je     0x40adf5
  40adc9:	xor    DWORD PTR [rax],esi
  40adcb:	xor    BYTE PTR [rdx],ah
  40adcd:	and    BYTE PTR [rdi],ch
  40adcf:	ds cmp al,0x52
  40add2:	outs   dx,DWORD PTR ds:[rsi]
  40add3:	ja     0x40ae48
  40add5:	and    BYTE PTR [rbx+0x74],dl
  40add8:	jns    0x40ae46
  40adda:	gs jae 0x40ae1a
  40addd:	and    al,BYTE PTR [rcx+0x75]
  40ade0:	je     0x40ae51
  40ade2:	push   rbx
  40ade3:	imul   edi,DWORD PTR [rdx+0x65],0x412c302c
  40adea:	jne    0x40ae60
  40adec:	outs   dx,DWORD PTR ds:[rsi]
  40aded:	push   rbx
  40adee:	imul   edi,DWORD PTR [rdx+0x65],0x412c302c
  40adf5:	jne    0x40ae6b
  40adf7:	outs   dx,DWORD PTR ds:[rsi]
  40adf8:	push   rbx
  40adf9:	imul   edi,DWORD PTR [rdx+0x65],0x412c302c
  40ae00:	jne    0x40ae76
  40ae02:	outs   dx,DWORD PTR ds:[rsi]
  40ae03:	push   rbx
  40ae04:	imul   edi,DWORD PTR [rdx+0x65],0x412c302c
  40ae0b:	jne    0x40ae81
  40ae0d:	outs   dx,DWORD PTR ds:[rsi]
  40ae0e:	push   rbx
  40ae0f:	imul   edi,DWORD PTR [rdx+0x65],0x412c302c
  40ae16:	jne    0x40ae8c
  40ae18:	outs   dx,DWORD PTR ds:[rsi]
  40ae19:	push   rbx
  40ae1a:	imul   edi,DWORD PTR [rdx+0x65],0x502c302c
  40ae21:	gs jb  0x40ae87
  40ae24:	outs   dx,BYTE PTR gs:[rsi]
  40ae26:	je     0x40ae54
  40ae28:	xor    DWORD PTR [rax],esi
  40ae2a:	xor    BYTE PTR [rdx],ah
  40ae2c:	and    BYTE PTR [rdi],ch
  40ae2e:	ds cmp al,0x2f
  40ae31:	push   rsp
  40ae32:	(bad)  
  40ae33:	(bad)  
  40ae34:	ins    BYTE PTR es:[rdi],dx
  40ae35:	gs rex.WR (bad) 
  40ae38:	jns    0x40aea9
  40ae3a:	jne    0x40aeb0
  40ae3c:	push   rbx
  40ae3d:	gs je  0x40aeb4
  40ae40:	imul   ebp,DWORD PTR [rsi+0x67],0x440b3e73
  40ae47:	add    BYTE PTR [rcx],al
  40ae49:	add    BYTE PTR [rax],al
  40ae4b:	add    bh,bh
  40ae4d:	(bad)  
  40ae4e:	(bad)  
  40ae4f:	inc    DWORD PTR [rcx]
  40ae51:	add    BYTE PTR [rax],al
  40ae53:	add    BYTE PTR [rax],al
  40ae55:	add    BYTE PTR [rax],al
  40ae57:	add    BYTE PTR [rdx+rax*1],cl
  40ae5a:	add    BYTE PTR [rax],al
  40ae5c:	add    BYTE PTR [rcx+0x53],dl
  40ae5f:	jns    0x40aed4
  40ae61:	je     0x40aec8
  40ae63:	ins    DWORD PTR es:[rdi],dx
  40ae64:	cs rex.R jb 0x40aec9
  40ae68:	ja     0x40aed3
  40ae6a:	outs   dx,BYTE PTR ds:[rsi]
  40ae6b:	addr32 sub al,0x20
  40ae6e:	push   rsi
  40ae6f:	gs jb  0x40aee5
  40ae72:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40ae79:	xor    BYTE PTR cs:[rsi],ch
  40ae7c:	xor    BYTE PTR [rax+riz*1],ch
  40ae7f:	rex.XB jne 0x40aeee
  40ae82:	je     0x40aef9
  40ae84:	jb     0x40aeeb
  40ae86:	cmp    eax,0x7475656e
  40ae8b:	jb     0x40aeee
  40ae8d:	ins    BYTE PTR es:[rdi],dx
  40ae8e:	sub    al,0x20
  40ae90:	push   rax
  40ae91:	jne    0x40aef5
  40ae93:	ins    BYTE PTR es:[rdi],dx
  40ae94:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40ae9b:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40ae9f:	(bad)  
  40aea0:	xor    BYTE PTR [rbx],dh
  40aea2:	xor    ax,0x3766
  40aea6:	xor    WORD PTR [rcx],si
  40aea9:	fs xor eax,0x61336130
  40aeaf:	add    eax,0x1
  40aeb4:	adc    al,0x53
  40aeb6:	jns    0x40af2b
  40aeb8:	je     0x40af1f
  40aeba:	ins    DWORD PTR es:[rdi],dx
  40aebb:	cs rex.R jb 0x40af20
  40aebf:	ja     0x40af2a
  40aec1:	outs   dx,BYTE PTR ds:[rsi]
  40aec2:	addr32 cs push rax
  40aec5:	outs   dx,DWORD PTR ds:[rsi]
  40aec6:	imul   ebp,DWORD PTR [rsi+0x74],0x2
  40aecd:	add    DWORD PTR [rax+0x1],edi
  40aed0:	jns    0x40aed2
  40aed2:	add    BYTE PTR [rax],cl
  40aed4:	or     BYTE PTR [rdx],al
	...
  40aede:	add    BYTE PTR [rax],al
  40aee0:	add    BYTE PTR [rbx],cl
  40aee2:	or     BYTE PTR [rdi],al
  40aee4:	add    BYTE PTR [rax],al
  40aee6:	add    BYTE PTR [rcx+0x0],al
  40aee9:	add    DWORD PTR [rax],eax
  40aeeb:	add    BYTE PTR [rax],al
  40aeed:	(bad)  
  40aeee:	(bad)  
  40aeef:	(bad)  
  40aef0:	inc    DWORD PTR [rcx]
  40aef2:	add    BYTE PTR [rax],al
  40aef4:	add    BYTE PTR [rax],al
  40aef6:	add    BYTE PTR [rax],al
  40aef8:	add    BYTE PTR [rdx+rax*1],cl
  40aefb:	add    BYTE PTR [rax],al
  40aefd:	add    BYTE PTR [rcx+0x53],dl
  40af00:	jns    0x40af75
  40af02:	je     0x40af69
  40af04:	ins    DWORD PTR es:[rdi],dx
  40af05:	cs rex.R jb 0x40af6a
  40af09:	ja     0x40af74
  40af0b:	outs   dx,BYTE PTR ds:[rsi]
  40af0c:	addr32 sub al,0x20
  40af0f:	push   rsi
  40af10:	gs jb  0x40af86
  40af13:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40af1a:	xor    BYTE PTR cs:[rsi],ch
  40af1d:	xor    BYTE PTR [rax+riz*1],ch
  40af20:	rex.XB jne 0x40af8f
  40af23:	je     0x40af9a
  40af25:	jb     0x40af8c
  40af27:	cmp    eax,0x7475656e
  40af2c:	jb     0x40af8f
  40af2e:	ins    BYTE PTR es:[rdi],dx
  40af2f:	sub    al,0x20
  40af31:	push   rax
  40af32:	jne    0x40af96
  40af34:	ins    BYTE PTR es:[rdi],dx
  40af35:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40af3c:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40af40:	(bad)  
  40af41:	xor    BYTE PTR [rbx],dh
  40af43:	xor    ax,0x3766
  40af47:	xor    WORD PTR [rcx],si
  40af4a:	fs xor eax,0x61336130
  40af50:	add    eax,0x1
  40af55:	adc    edx,DWORD PTR [rbx+0x79]
  40af58:	jae    0x40afce
  40af5a:	gs ins DWORD PTR es:[rdi],dx
  40af5c:	cs rex.R jb 0x40afc1
  40af60:	ja     0x40afcb
  40af62:	outs   dx,BYTE PTR ds:[rsi]
  40af63:	addr32 cs push rbx
  40af66:	imul   edi,DWORD PTR [rdx+0x65],0x2
  40af6d:	add    eax,0x74646977
  40af72:	push   0x69656806
  40af77:	addr32 push 0x8000074
  40af7d:	or     BYTE PTR [rdx],al
  40af7f:	add    BYTE PTR [rax],al
  40af81:	add    BYTE PTR [rsi+0x1],bh
  40af84:	add    BYTE PTR [rax],al
  40af86:	repnz add BYTE PTR [rax],al
  40af89:	add    BYTE PTR [rbx],cl
  40af8b:	or     BYTE PTR [rax],al
  40af8d:	add    BYTE PTR [rax],al
  40af8f:	add    BYTE PTR [rsi],al
  40af91:	sbb    BYTE PTR [rax],al
  40af93:	add    dh,cl
  40af95:	retf   0xbeef
  40af98:	add    DWORD PTR [rax],eax
  40af9a:	add    BYTE PTR [rax],al
  40af9c:	xchg   ecx,eax
  40af9d:	add    BYTE PTR [rax],al
  40af9f:	add    BYTE PTR [rbx+rdx*2+0x79],ch
  40afa3:	jae    0x40b019
  40afa5:	gs ins DWORD PTR es:[rdi],dx
  40afa7:	cs push rdx
  40afa9:	gs jae 0x40b01b
  40afac:	jne    0x40b020
  40afae:	movsxd esp,DWORD PTR [rbp+0x73]
  40afb1:	cs push rdx
  40afb3:	gs jae 0x40b025
  40afb6:	jne    0x40b02a
  40afb8:	movsxd esp,DWORD PTR [rbp+0x52]
  40afbb:	gs (bad) 
  40afbd:	fs gs jb 0x40afed
  40afc1:	and    BYTE PTR [rbp+0x73],ch
  40afc4:	movsxd ebp,DWORD PTR [rdi+0x72]
  40afc7:	ins    BYTE PTR es:[rdi],dx
  40afc8:	imul   esp,DWORD PTR [rdx+0x2c],0x72655620
  40afcf:	jae    0x40b03a
  40afd1:	outs   dx,DWORD PTR ds:[rsi]
  40afd2:	outs   dx,BYTE PTR ds:[rsi]
  40afd3:	cmp    eax,0x2e302e32
  40afd8:	xor    BYTE PTR [rsi],ch
  40afda:	xor    BYTE PTR [rax+riz*1],ch
  40afdd:	rex.XB jne 0x40b04c
  40afe0:	je     0x40b057
  40afe2:	jb     0x40b049
  40afe4:	cmp    eax,0x7475656e
  40afe9:	jb     0x40b04c
  40afeb:	ins    BYTE PTR es:[rdi],dx
  40afec:	sub    al,0x20
  40afee:	push   rax
  40afef:	jne    0x40b053
  40aff1:	ins    BYTE PTR es:[rdi],dx
  40aff2:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40aff9:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40affd:	(bad)  
  40affe:	(bad)  
  40afff:	(bad)  
  40b000:	(bad)  
  40b001:	xor    eax,0x31363563
  40b006:	cmp    DWORD PTR [rbx],esi
  40b008:	xor    al,0x65
  40b00a:	xor    BYTE PTR [rax],bh
  40b00c:	cmp    DWORD PTR [rbx],esp
  40b00e:	push   rbx
  40b00f:	jns    0x40b084
  40b011:	je     0x40b078
  40b013:	ins    DWORD PTR es:[rdi],dx
  40b014:	cs push rdx
  40b016:	gs jae 0x40b088
  40b019:	jne    0x40b08d
  40b01b:	movsxd esp,DWORD PTR [rbp+0x73]
  40b01e:	cs push rdx
  40b020:	jne    0x40b090
  40b022:	je     0x40b08d
  40b024:	ins    DWORD PTR es:[rdi],dx
  40b025:	gs push rdx
  40b027:	gs jae 0x40b099
  40b02a:	jne    0x40b09e
  40b02c:	movsxd esp,DWORD PTR [rbp+0x53]
  40b02f:	gs je  0x40b034
  40b032:	add    BYTE PTR [rax],al
  40b034:	add    BYTE PTR [rbx],al
  40b036:	add    BYTE PTR [rax],al
  40b038:	add    BYTE PTR [rcx],al
  40b03a:	add    BYTE PTR [rax],al
  40b03c:	add    BYTE PTR [rax+0x53],ch
  40b03f:	jns    0x40b0b4
  40b041:	je     0x40b0a8
  40b043:	ins    DWORD PTR es:[rdi],dx
  40b044:	cs rex.R jb 0x40b0a9
  40b048:	ja     0x40b0b3
  40b04a:	outs   dx,BYTE PTR ds:[rsi]
  40b04b:	imul   esi,DWORD PTR cs:[ebp+r13d*2+0x61],0x53202c70
  40b056:	jns    0x40b0cb
  40b058:	je     0x40b0bf
  40b05a:	ins    DWORD PTR es:[rdi],dx
  40b05b:	cs rex.R jb 0x40b0c0
  40b05f:	ja     0x40b0ca
  40b061:	outs   dx,BYTE PTR ds:[rsi]
  40b062:	addr32 sub al,0x20
  40b065:	push   rsi
  40b066:	gs jb  0x40b0dc
  40b069:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40b070:	xor    BYTE PTR cs:[rsi],ch
  40b073:	xor    BYTE PTR [rax+riz*1],ch
  40b076:	rex.XB jne 0x40b0e5
  40b079:	je     0x40b0f0
  40b07b:	jb     0x40b0e2
  40b07d:	cmp    eax,0x7475656e
  40b082:	jb     0x40b0e5
  40b084:	ins    BYTE PTR es:[rdi],dx
  40b085:	sub    al,0x20
  40b087:	push   rax
  40b088:	jne    0x40b0ec
  40b08a:	ins    BYTE PTR es:[rdi],dx
  40b08b:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40b092:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40b096:	(bad)  
  40b097:	xor    BYTE PTR [rbx],dh
  40b099:	xor    ax,0x3766
  40b09d:	xor    WORD PTR [rcx],si
  40b0a0:	fs xor eax,0x61336130
  40b0a6:	push   rax
  40b0a7:	rex.B
  40b0a8:	rex.R push rax
  40b0aa:	rex.B
  40b0ab:	rex.R
  40b0ac:	rex push rbx
  40b0ae:	mov    WORD PTR [rbx-0x3c48c6a3],ss
  40b0b4:	fwait
  40b0b5:	add    BYTE PTR [rdi+0x906a],0x0
  40b0bc:	push   rbp
  40b0bd:	add    BYTE PTR [rax],al
  40b0bf:	add    BYTE PTR [rax],al
  40b0c1:	add    BYTE PTR [rax],al
  40b0c3:	add    bh,dh
  40b0c5:	add    DWORD PTR [rax],eax
  40b0c7:	add    BYTE PTR [rax+0x53],dl
  40b0ca:	add    BYTE PTR [rax+rax*1+0x50],cl
  40b0ce:	add    BYTE PTR [rax],dh
  40b0d0:	add    BYTE PTR [rbx],dh
  40b0d2:	add    BYTE PTR [rbx],dh
  40b0d4:	add    BYTE PTR [rdi+0x0],bl
  40b0d7:	rex.WRB add BYTE PTR [r9+0x0],r12b
  40b0db:	imul   eax,DWORD PTR [rax],0x74006e
  40b0e1:	add    BYTE PTR gs:[rsi+0x0],ch
  40b0e5:	(bad)  
  40b0e6:	add    BYTE PTR [rsi+0x0],ch
  40b0e9:	movsxd eax,DWORD PTR [rax]
  40b0eb:	add    BYTE PTR gs:[rcx+0x0],al
  40b0ef:	add    BYTE PTR fs:[rax+rax*1+0x4f],ah
  40b0f4:	add    BYTE PTR [rdx+0x0],dh
  40b0f7:	push   rdx
  40b0f8:	add    BYTE PTR [rbp+0x0],ah
  40b0fb:	ins    DWORD PTR es:[rdi],dx
  40b0fc:	add    BYTE PTR [rdi+0x0],ch
  40b0ff:	jbe    0x40b101
  40b101:	add    BYTE PTR gs:[rsi+0x0],al
  40b105:	add    BYTE PTR gs:[rcx+0x0],ah
  40b109:	je     0x40b10b
  40b10b:	jne    0x40b10d
  40b10d:	jb     0x40b10f
  40b10f:	add    BYTE PTR gs:[rbx+0x0],dh
  40b113:	pop    rdi
  40b114:	add    BYTE PTR [rbx],dh
  40b116:	add    BYTE PTR [rdx],dh
  40b118:	add    BYTE PTR [rax],al
  40b11a:	add    BYTE PTR [rax],al
  40b11c:	add    BYTE PTR [rsi],dh
  40b11e:	push   rbx
  40b11f:	add    BYTE PTR [rax+rax*1+0x50],cl
  40b123:	add    BYTE PTR [rax],dh
  40b125:	add    BYTE PTR [rbx],dh
  40b127:	add    BYTE PTR [rip+0x4d005f00],dh        # 0x4d41102d
  40b12d:	add    BYTE PTR [rcx+0x0],ah
  40b130:	imul   eax,DWORD PTR [rax],0x74006e
  40b136:	add    BYTE PTR gs:[rsi+0x0],ch
  40b13a:	(bad)  
  40b13b:	add    BYTE PTR [rsi+0x0],ch
  40b13e:	movsxd eax,DWORD PTR [rax]
  40b140:	add    BYTE PTR gs:[rdx+0x0],dl
  40b144:	add    BYTE PTR gs:[rax+0x0],dh
  40b148:	(bad)  
  40b149:	add    BYTE PTR [rcx+0x0],ch
  40b14c:	jb     0x40b14e
  40b14e:	pop    rdi
  40b14f:	add    BYTE PTR [rbx],dh
  40b151:	add    BYTE PTR [rdx],dh
  40b153:	add    BYTE PTR [rdi+0x2e000006],dh
  40b159:	push   rbx
  40b15a:	add    BYTE PTR [rax+rax*1+0x50],cl
  40b15e:	add    BYTE PTR [rax],dh
  40b160:	add    BYTE PTR [rbx],dh
  40b162:	add    BYTE PTR [rcx],bh
  40b164:	add    BYTE PTR [rdi+0x0],bl
  40b167:	push   rbp
  40b168:	add    BYTE PTR [rsi+0x0],ch
  40b16b:	imul   eax,DWORD PTR [rax],0x73006e
  40b171:	je     0x40b173
  40b173:	(bad)  
  40b174:	add    BYTE PTR [rax+rax*1+0x6c],ch
  40b178:	add    BYTE PTR [rcx+0x0],cl
  40b17b:	movsxd eax,DWORD PTR [rax]
  40b17d:	outs   dx,DWORD PTR ds:[rsi]
  40b17e:	add    BYTE PTR [rsi+0x0],ch
  40b181:	pop    rdi
  40b182:	add    BYTE PTR [rbx],dh
  40b184:	add    BYTE PTR [rdx],dh
  40b186:	add    BYTE PTR [rsi+0x10],dh
  40b189:	add    BYTE PTR [rax],al
  40b18b:	add    BYTE PTR [rcx],al
  40b18e:	add    BYTE PTR [rax],al
  40b190:	add    bh,bh
  40b192:	(bad)  
  40b193:	(bad)  
  40b194:	inc    DWORD PTR [rcx]
  40b196:	add    BYTE PTR [rax],al
  40b198:	add    BYTE PTR [rax],al
  40b19a:	add    BYTE PTR [rax],al
  40b19c:	add    BYTE PTR [rdx+rax*1],cl
  40b19f:	add    BYTE PTR [rax],al
  40b1a1:	add    BYTE PTR [rcx+0x53],dl
  40b1a4:	jns    0x40b219
  40b1a6:	je     0x40b20d
  40b1a8:	ins    DWORD PTR es:[rdi],dx
  40b1a9:	cs rex.R jb 0x40b20e
  40b1ad:	ja     0x40b218
  40b1af:	outs   dx,BYTE PTR ds:[rsi]
  40b1b0:	addr32 sub al,0x20
  40b1b3:	push   rsi
  40b1b4:	gs jb  0x40b22a
  40b1b7:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40b1be:	xor    BYTE PTR cs:[rsi],ch
  40b1c1:	xor    BYTE PTR [rax+riz*1],ch
  40b1c4:	rex.XB jne 0x40b233
  40b1c7:	je     0x40b23e
  40b1c9:	jb     0x40b230
  40b1cb:	cmp    eax,0x7475656e
  40b1d0:	jb     0x40b233
  40b1d2:	ins    BYTE PTR es:[rdi],dx
  40b1d3:	sub    al,0x20
  40b1d5:	push   rax
  40b1d6:	jne    0x40b23a
  40b1d8:	ins    BYTE PTR es:[rdi],dx
  40b1d9:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40b1e0:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40b1e4:	(bad)  
  40b1e5:	xor    BYTE PTR [rbx],dh
  40b1e7:	xor    ax,0x3766
  40b1eb:	xor    WORD PTR [rcx],si
  40b1ee:	fs xor eax,0x61336130
  40b1f4:	add    eax,0x1
  40b1f9:	adc    eax,0x74737953
  40b1fe:	gs ins DWORD PTR es:[rdi],dx
  40b200:	cs rex.R jb 0x40b265
  40b204:	ja     0x40b26f
  40b206:	outs   dx,BYTE PTR ds:[rsi]
  40b207:	imul   esi,DWORD PTR cs:[ebp+r13d*2+0x61],0x170
  40b212:	add    BYTE PTR [rsp+rax*2],al
  40b215:	(bad)  
  40b216:	je     0x40b279
  40b218:	(bad)  
  40b219:	add    al,BYTE PTR [rdx]
  40b21b:	add    BYTE PTR [rax],al
  40b21d:	add    BYTE PTR [rcx],cl
  40b21f:	add    eax,DWORD PTR [rax]
  40b221:	add    BYTE PTR [rax],al
  40b223:	lsl    eax,WORD PTR [rax]
  40b226:	add    BYTE PTR [rax],al
  40b228:	adc    al,0x6
  40b22a:	add    BYTE PTR [rax],al
  40b22c:	add    cl,BYTE PTR [rcx+0xd474e50]
  40b232:	or     bl,BYTE PTR [rdx]
  40b234:	or     al,BYTE PTR [rax]
  40b236:	add    BYTE PTR [rax],al
  40b238:	or     eax,0x52444849
  40b23d:	add    BYTE PTR [rax],al
  40b23f:	add    BYTE PTR [rax],ah
  40b241:	add    BYTE PTR [rax],al
  40b243:	add    BYTE PTR [rax],ah
  40b245:	or     BYTE PTR [rsi],al
  40b247:	add    BYTE PTR [rax],al
  40b249:	add    BYTE PTR [rbx+0x7a],dh
  40b24c:	jp     0x40b242
  40b24e:	add    BYTE PTR [rax],al
  40b250:	add    BYTE PTR [rcx],al
  40b252:	jae    0x40b2a6
  40b254:	rex.RXB
  40b255:	rex.X add BYTE PTR [rsi+0xe91cce],bpl
  40b25c:	add    BYTE PTR [rax],al
  40b25e:	add    al,0x67
  40b260:	rex.B
  40b261:	rex.WRB
  40b262:	add    BYTE PTR [r8],al
  40b265:	mov    cl,0x8f
  40b267:	or     edi,esp
  40b269:	(bad)  
  40b26a:	add    eax,0x20000000
  40b26f:	movsxd ecx,DWORD PTR [rax+0x52]
  40b272:	rex.WRB add BYTE PTR [r8],r8b
  40b275:	jp     0x40b29d
  40b277:	add    BYTE PTR [rax],al
  40b279:	add    BYTE PTR [rax+rax*1+0xfa00],0x0
  40b281:	sub    al,0x0
  40b284:	add    BYTE PTR [rbp+0x30],dh
  40b287:	add    BYTE PTR [rax],al
  40b289:	(bad)  
  40b28a:	(bad)  
  40b28b:	add    BYTE PTR [rax],al
  40b28d:	cmp    bl,BYTE PTR [rax+0x70170000]
  40b293:	pushf  
  40b294:	mov    edx,0x3c51
  40b299:	add    eax,0x41444992
  40b29e:	push   rsp
  40b29f:	pop    rax
  40b2a0:	(bad)
  40b2a4:	push   rbx
  40b2a5:	adc    edx,DWORD PTR [rdi+0x14]
  40b2a8:	(bad)  
  40b2a9:	jmp    0xffffffff9dcd932d
  40b2ae:	pop    rdx
  40b2af:	adc    eax,0xb5aada2d
  40b2b4:	fcmovbe st,st(6)
  40b2b6:	xlat   BYTE PTR ds:[rbx]
  40b2b7:	mov    ah,0xe0
  40b2b9:	je     0x40b2c1
  40b2bb:	in     al,dx
  40b2bc:	fmul   DWORD PTR [rax-0xeebe0eb]
  40b2c2:	add    DWORD PTR [rcx-0x5d],edx
  40b2c5:	or     BYTE PTR [rax],ch
  40b2c7:	test   al,0x14
  40b2c9:	or     ecx,edx
  40b2cb:	sti    
  40b2cc:	ins    DWORD PTR es:[rdi],dx
  40b2cd:	xchg   esp,eax
  40b2ce:	sbb    BYTE PTR [rax],0x4a
  40b2d1:	adc    dl,BYTE PTR [rcx]
  40b2d3:	adc    cl,al
  40b2d5:	and    BYTE PTR [rsi+rdx*1],cl
  40b2d8:	rcr    al,1
  40b2da:	pop    rax
  40b2db:	mov    QWORD PTR [rdx+0x40],rdx
  40b2df:	add    esi,edx
  40b2e1:	or     cl,BYTE PTR [rax+0x53c80c18]
  40b2e7:	push   rax
  40b2e8:	or     ebp,DWORD PTR [rdx-0x4b]
  40b2eb:	jne    0x40b293
  40b2ed:	xchg   esi,eax
  40b2ee:	fsubr  DWORD PTR [rdi-0x67229109]
  40b2f4:	nop
  40b2f5:	ror    BYTE PTR [rcx+0xa],1
  40b2f8:	popf   
  40b2f9:	out    dx,al
  40b2fa:	int3   
  40b2fb:	cdq    
  40b2fc:	fnstsw WORD PTR [rbp-0x10204227]
  40b302:	jl     0x40b2fb
  40b304:	pushf  
  40b305:	mov    ebx,0xcd800379
  40b30a:	(bad)  
  40b30b:	jp     0x40b35d
  40b30d:	xor    cl,0x46
  40b310:	rex.WR push rdx
  40b312:	mov    dh,0x1b
  40b314:	or     DWORD PTR [rcx],edx
  40b316:	or     eax,0x8b9171c1
  40b31b:	and    BYTE PTR [rbp+0x6c],al
  40b31e:	fstp   TBYTE PTR [rbx+rbp*8+0x2e]
  40b322:	xor    dh,BYTE PTR [rdx+0x2b3d21cf]
  40b328:	cpuid  
  40b32a:	hlt    
  40b32b:	pop    rsp
  40b32c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b32d:	mov    dh,BYTE PTR [rbx+0x412c9891]
  40b333:	fs ins BYTE PTR es:[rdi],dx
  40b335:	loop   0x40b387
  40b337:	push   0xffffffffac4991e4
  40b33c:	out    0xb8,al
  40b33e:	(bad)
  40b341:	rex.R mov eax,0x23999c85
  40b347:	(bad)  
  40b348:	scas   eax,DWORD PTR es:[rdi]
  40b349:	or     BYTE PTR [rdx+0x45],dh
  40b34c:	adc    eax,0xf177d46a
  40b351:	loop   0x40b318
  40b353:	or     BYTE PTR [rdi+rbp*1+0x5f],dh
  40b357:	(bad)  
  40b358:	clc    
  40b359:	leave  
  40b35a:	scas   eax,DWORD PTR es:[rdi]
  40b35b:	js     0x40b395
  40b35d:	cld    
  40b35e:	adc    al,0x3d
  40b360:	test   DWORD PTR [rsi+0x20902f10],0x45be12a
  40b36a:	(bad)  
  40b36b:	rex.RXB fnstenv [r9]
  40b36e:	out    dx,al
  40b36f:	(bad)  
  40b370:	(bad)  
  40b371:	jnp    0x40b3b6
  40b373:	add    cl,0x7
  40b376:	(bad)  
  40b377:	jo     0x40b320
  40b379:	mov    bl,0xf
  40b37b:	push   rdi
  40b37c:	scas   al,BYTE PTR es:[rdi]
  40b37d:	xor    eax,0x17ada9a3
  40b382:	and    edi,DWORD PTR [rdx-0x34038769]
  40b388:	jae    0x40b35e
  40b38a:	mov    ch,0x74
  40b38c:	movabs eax,ds:0x74d01505191eb4b8
  40b395:	hlt    
  40b396:	jrcxz  0x40b3f8
  40b398:	js     0x40b3ac
  40b39a:	jl     0x40b398
  40b39c:	(bad)  
  40b39d:	mov    cl,0xcb
  40b39f:	out    0x80,eax
  40b3a1:	fld    QWORD PTR [rdx+rax*1-0xbf94498]
  40b3a8:	loop   0x40b3cf
  40b3aa:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40b3ab:	xor    eax,0x420e74d0
  40b3b0:	(bad)  
  40b3b1:	fadd   DWORD PTR [rcx-0x6e64a835]
  40b3b7:	nop
  40b3b8:	and    al,BYTE PTR [rbp+0x60]
  40b3bb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b3bc:	adc    dh,bl
  40b3be:	or     DWORD PTR [rcx],0x150fd90
  40b3c4:	ja     0x40b374
  40b3c6:	(bad)  
  40b3c7:	fdiv   QWORD PTR [rsi]
  40b3c9:	ins    DWORD PTR es:[rdi],dx
  40b3ca:	retf   
  40b3cb:	pushf  
  40b3cc:	xor    BYTE PTR [rax+0x142d16c6],al
  40b3d2:	adc    eax,0x3090bd2a
  40b3d7:	mov    ebp,0x3233a200
  40b3dc:	fcom   QWORD PTR [rax-0x49]
  40b3df:	movabs ds:0x72b1c2fd3b1282f0,eax
  40b3e8:	lods   eax,DWORD PTR ds:[rsi]
  40b3e9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40b3ea:	push   rcx
  40b3eb:	cmp    BYTE PTR [rdi+0xbf8ee7],ch
  40b3f1:	pop    rdi
  40b3f2:	sub    eax,0x6ccd1b81
  40b3f7:	(bad)  
  40b3f8:	fimul  WORD PTR [rax-0x30]
  40b3fb:	(bad)  
  40b3fc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b3fd:	movsxd ecx,DWORD PTR [rsi]
  40b3ff:	lahf   
  40b400:	scas   eax,DWORD PTR es:[rdi]
  40b401:	pop    rdi
  40b402:	pushf  
  40b403:	cwde   
  40b404:	xchg   esi,eax
  40b405:	(bad)
  40b409:	jmp    0xffffffffe398f947
  40b40e:	mov    dh,0x13
  40b410:	je     0x40b3fe
  40b412:	(bad)  
  40b413:	outs   dx,DWORD PTR ds:[rsi]
  40b414:	sbb    al,0x72
  40b416:	or     eax,0x265bd5c7
  40b41b:	(bad)  
  40b41c:	(bad)  
  40b41d:	lods   al,BYTE PTR ds:[rsi]
  40b41e:	cmp    ah,BYTE PTR [rdx]
  40b420:	xor    al,dl
  40b422:	jbe    0x40b418
  40b424:	rex.X cwde 
  40b426:	cs test ebx,edx
  40b429:	stos   BYTE PTR es:[rdi],al
  40b42a:	lea    esi,[rsi+rax*2+0x10271c8d]
  40b431:	sbb    al,0xab
  40b433:	xchg   esi,eax
  40b434:	and    ah,ah
  40b436:	pop    rax
  40b437:	scas   al,BYTE PTR es:[rdi]
  40b438:	jge    0x40b3fb
  40b43a:	and    eax,0xc8678e15
  40b43f:	adc    BYTE PTR [rsi-0x37b3386c],bl
  40b445:	fiadd  WORD PTR [rdi-0xbdc5bf7]
  40b44b:	ja     0x40b4a3
  40b44d:	in     al,0x59
  40b44f:	mov    ecx,0xff1c5a62
  40b454:	and    al,0xda
  40b456:	xor    al,0x9d
  40b458:	adc    BYTE PTR [rsi+riz*2+0x5c9c1c2],ah
  40b45f:	je     0x40b4cd
  40b461:	xor    al,0x84
  40b463:	(bad)
  40b466:	mov    bl,0x3f
  40b468:	sub    DWORD PTR cs:[rsi],ebp
  40b46b:	stos   DWORD PTR es:[rdi],eax
  40b46c:	xlat   BYTE PTR ds:[rbx]
  40b46d:	mov    cl,0xed
  40b46f:	mov    dh,0xca
  40b471:	xor    ebx,DWORD PTR [rax+0x2a1988cd]
  40b477:	cs mov ebp,0x10a8be06
  40b47d:	xor    DWORD PTR [rcx-0x67],0x221b5534
  40b484:	(bad)  
  40b485:	fstp   DWORD PTR [rbx]
  40b487:	je     0x40b49d
  40b489:	sub    eax,0x9471dab7
  40b48e:	hlt    
  40b48f:	jmp    QWORD PTR [rdi-0x293ff372]
  40b495:	jg     0x40b4a4
  40b497:	jo     0x40b487
  40b499:	loop   0x40b510
  40b49b:	adc    eax,0xb9ca2e2b
  40b4a0:	or     al,0x16
  40b4a2:	sar    BYTE PTR [rdi],0x22
  40b4a5:	lea    ebx,[rip+0x4f8f1d06]        # 0x4fcfd1b1
  40b4ab:	xchg   ebp,eax
  40b4ac:	ss push rcx
  40b4ae:	xchg   ecx,eax
  40b4af:	(bad)  
  40b4b0:	stc    
  40b4b1:	push   rdx
  40b4b2:	sbb    al,0xe
  40b4b4:	rex.WRXB xchg r12b,r12b
  40b4b7:	je     0x40b4da
  40b4b9:	ret    0x9363
  40b4bc:	sbb    DWORD PTR [rax],eax
  40b4be:	rex.R movs BYTE PTR es:[rdi],BYTE PTR gs:[rsi]
  40b4c1:	leave  
  40b4c2:	xor    bl,BYTE PTR [rax-0x14]
  40b4c5:	rol    BYTE PTR [rip+0x54230345],0xd3        # 0x5463b811
  40b4cc:	fsubr  DWORD PTR [rsi+0x29b36717]
  40b4d2:	stos   DWORD PTR es:[rdi],eax
  40b4d3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b4d4:	(bad)  
  40b4d5:	(bad)  
  40b4d6:	add    BYTE PTR [rsi+0x119876dc],bh
  40b4dc:	mov    ecx,0x9182382f
  40b4e1:	loope  0x40b544
  40b4e3:	cld    
  40b4e4:	rcr    edi,1
  40b4e6:	xchg   edi,ebx
  40b4e8:	cmp    esi,DWORD PTR [rax+rdi*2-0x49b8d5a6]
  40b4ef:	(bad)  
  40b4f0:	xlat   BYTE PTR ds:[rbx]
  40b4f1:	jb     0x40b473
  40b4f3:	(bad)  
  40b4f4:	sbb    ebx,DWORD PTR [rbx-0x4efbb771]
  40b4fa:	and    al,BYTE PTR [rbp+0x2230d7df]
  40b500:	(bad)  
  40b501:	pop    rbx
  40b502:	pop    rbp
  40b503:	or     al,0x0
  40b505:	mov    ebx,0xaadcf4de
  40b50a:	jmp    0x6d78b8e0
  40b50f:	cmp    al,0xa0
  40b511:	(bad)  
  40b512:	clc    
  40b513:	lods   eax,DWORD PTR ds:[rsi]
  40b514:	rex.X
  40b515:	rex.WB ins DWORD PTR es:[rdi],dx
  40b517:	addr32 (bad) 
  40b519:	cmp    edi,ebp
  40b51b:	mov    ebp,0xc220072d
  40b520:	xchg   ebx,eax
  40b521:	rex.WB push 0xffffffff80587049
  40b527:	mov    esp,0x37d09f92
  40b52c:	lock mov BYTE PTR [rcx],dl
  40b52f:	sub    ch,BYTE PTR [rbx+0x6faec56c]
  40b535:	adc    bh,bh
  40b537:	and    al,0xf1
  40b539:	cld    
  40b53a:	rex.R push rsi
  40b53c:	icebp  
  40b53d:	or     BYTE PTR [rsi-0x59],0xc3
  40b541:	rol    bl,0x27
  40b544:	loopne 0x40b4ed
  40b546:	adc    eax,0xf65dec2
  40b54b:	add    esi,DWORD PTR [rax]
  40b54d:	adc    BYTE PTR [rdi],bl
  40b54f:	mov    DWORD PTR [rdi+0x44],esp
  40b552:	js     0x40b58c
  40b554:	push   rbx
  40b555:	(bad)  
  40b556:	lahf   
  40b557:	(bad)
  40b55a:	rex loop 0x40b547
  40b55d:	outs   dx,BYTE PTR ds:[rsi]
  40b55e:	fiadd  WORD PTR [rcx+0x469e776a]
  40b564:	sahf   
  40b565:	pop    rbx
  40b566:	pop    rdx
  40b567:	sahf   
  40b568:	sub    ebp,DWORD PTR [rdi-0x6e]
  40b56b:	or     DWORD PTR [rbp-0x2246a6b6],esp
  40b571:	fadd   QWORD PTR [rdi]
  40b573:	rex.R cmp al,0xd4
  40b576:	mov    al,0x60
  40b578:	adc    al,ch
  40b57a:	add    eax,0xb5a5254d
  40b57f:	mov    eax,ss
  40b581:	call   0x559e4409
  40b586:	fld    QWORD PTR [rax+rbx*8-0x4f]
  40b58a:	xor    esi,eax
  40b58c:	cmovnp edx,DWORD PTR [rcx-0x30]
  40b590:	idiv   edx
  40b592:	ret    
  40b593:	psraw  mm1,QWORD PTR [rcx+0x49]
  40b597:	adc    DWORD PTR [rsi],ebx
  40b599:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b59a:	es jrcxz 0x40b5de
  40b59d:	adc    bl,BYTE PTR [rdi]
  40b59f:	pop    rdx
  40b5a0:	(bad)  
  40b5a1:	(bad)  
  40b5a2:	push   rdx
  40b5a3:	pushf  
  40b5a4:	xlat   BYTE PTR ds:[rbx]
  40b5a5:	(bad)  
  40b5a6:	(bad)  
  40b5a7:	test   al,0xe2
  40b5a9:	in     eax,dx
  40b5aa:	imul   esp,DWORD PTR [rip+0xffffffff9045f482],0x73        # 0xffffffff9086aa33
  40b5b1:	pushf  
  40b5b2:	(bad)  
  40b5b3:	idiv   bl
  40b5b5:	test   DWORD PTR [rip+0xffffffffb535e9c5],0x49f440fa        # 0xffffffffb5769f84
  40b5bf:	push   rdx
  40b5c0:	in     eax,dx
  40b5c1:	or     eax,0x65a1bea8
  40b5c6:	sbb    BYTE PTR [rdx-0x232f7905],bh
  40b5cc:	(bad)  
  40b5cd:	(bad)  
  40b5ce:	(bad)  
  40b5cf:	mov    edx,0xca4888db
  40b5d4:	rcl    DWORD PTR [rdx+0x67],0x2f
  40b5d8:	jl     0x40b5f7
  40b5da:	xchg   edi,eax
  40b5db:	rex.RB push r13
  40b5dd:	ins    BYTE PTR es:[rdi],dx
  40b5de:	jp     0x40b563
  40b5e0:	add    dh,al
  40b5e2:	sub    bh,bh
  40b5e4:	sub    al,0x6
  40b5e6:	stc    
  40b5e7:	mov    cl,0xb8
  40b5e9:	(bad)  
  40b5ea:	adc    eax,DWORD PTR [rsi]
  40b5ec:	int    0x4e
  40b5ee:	rex.WRXB
  40b5ef:	lock popf 
  40b5f1:	test   al,0xa1
  40b5f3:	(bad)  
  40b5f4:	jnp    0x40b5f7
  40b5f6:	push   rbx
  40b5f7:	test   dl,dh
  40b5f9:	fidivr DWORD PTR [rsi]
  40b5fb:	sbb    DWORD PTR [rcx],edx
  40b5fd:	mov    esi,0x8904e24a
  40b602:	mov    dh,0xa8
  40b604:	push   0xfd1e5c9
  40b609:	sbb    al,BYTE PTR [rdx+0x54]
  40b60c:	(bad)  
  40b60d:	mov    dh,0x33
  40b60f:	add    BYTE PTR [rip+0x2f907b37],cl        # 0x2fd1314c
  40b615:	push   rbx
  40b616:	add    DWORD PTR [rdx-0x16ba8547],0xae81f70c
  40b620:	jge    0x40b660
  40b622:	sbb    BYTE PTR [rdx],bh
  40b624:	popf   
  40b625:	cmp    esi,0x21e843b0
  40b62b:	xor    BYTE PTR [rbp+0x6d109b9e],ch
  40b631:	out    dx,eax
  40b632:	push   0xffffffffad76401e
  40b637:	pop    rbx
  40b638:	imul   BYTE PTR [rdx]
  40b63a:	sti    
  40b63b:	(bad)  
  40b63c:	jp     0x40b67c
  40b63e:	js     0x40b664
  40b640:	ficomp WORD PTR [rbx-0x3dd5ef13]
  40b647:	add    dl,BYTE PTR [rdi+rdx*8+0x69]
  40b64b:	and    DWORD PTR [rsi+0x2a1be12a],edx
  40b651:	(bad)  
  40b652:	(bad)  
  40b653:	and    eax,0xeee75efb
  40b658:	sbb    eax,0x44269fb8
  40b65d:	ja     0x40b61f
  40b65f:	pop    rsi
  40b660:	(bad)  
  40b662:	jrcxz  0x40b5e9
  40b664:	test   DWORD PTR es:[rip+0xfffffffff74c5908],0x940e3329        # 0xfffffffff78d0f77
  40b66f:	push   rsp
  40b670:	jbe    0x40b63a
  40b672:	mov    dl,0x2f
  40b674:	(bad)  
  40b675:	retf   
  40b676:	(bad)
  40b67a:	push   rcx
  40b67b:	ret    0xb2f3
  40b67e:	std    
  40b67f:	xor    DWORD PTR [rdi+0x5d4623a8],esp
  40b685:	(bad)  
  40b686:	clc    
  40b687:	movabs ds:0xa3148280e3334afc,al
  40b690:	test   BYTE PTR [rax],al
  40b692:	lock add al,BYTE PTR [rip+0xffffffffb96b1326]        # 0xffffffffb9abc9bf
  40b699:	fwait
  40b69a:	xor    DWORD PTR [rax],ebp
  40b69c:	loopne 0x40b641
  40b69e:	ret    
  40b69f:	imul   edi,DWORD PTR [rbx],0xffffffb4
  40b6a2:	fmul   QWORD PTR [rbp-0x58]
  40b6a5:	pop    rbx
  40b6a6:	mov    bh,0x1a
  40b6a8:	xor    ebx,0x18079897
  40b6ae:	rex.WRB
  40b6af:	gs scas al,BYTE PTR es:[rdi]
  40b6b1:	or     ecx,DWORD PTR [rdi+rbx*4]
  40b6b4:	sub    DWORD PTR [rdi+rbx*8+0x37680060],edx
  40b6bb:	push   rax
  40b6bc:	(bad)  
  40b6bd:	mov    dh,0xfa
  40b6bf:	(bad)  
  40b6c0:	fwait
  40b6c1:	rex.WR lods al,BYTE PTR ds:[rsi]
  40b6c3:	and    DWORD PTR [rcx],ebx
  40b6c5:	test   edi,0xb37da044
  40b6cb:	sub    ebp,DWORD PTR [rsi+0x6f]
  40b6ce:	pop    rax
  40b6cf:	sub    ebx,0xffffffab
  40b6d2:	push   rsi
  40b6d3:	sar    bh,0xdd
  40b6d6:	test   esi,esp
  40b6d8:	add    DWORD PTR [rcx+rbp*8],ebp
  40b6db:	add    al,BYTE PTR [rbx-0x80]
  40b6de:	pushf  
  40b6df:	movabs ds:0xef2be395e40ed7aa,al
  40b6e8:	push   0xffffffffd6db8993
  40b6ed:	cmp    DWORD PTR [rbx+0x6d082437],esp
  40b6f3:	imul   edi,DWORD PTR [rax],0x68
  40b6f6:	std    
  40b6f7:	ret    0x9511
  40b6fa:	mov    cs,ebx
  40b6fc:	loope  0x40b76b
  40b6fe:	cmp    ecx,edi
  40b700:	cmp    al,0x80
  40b702:	and    eax,0x7008605d
  40b707:	xchg   edx,eax
  40b708:	fs int 0x38
  40b70b:	push   rax
  40b70c:	cmc    
  40b70d:	not    DWORD PTR [rdx]
  40b70f:	mov    eax,0x264c42f0
  40b714:	outs   dx,BYTE PTR ds:[rsi]
  40b715:	and    eax,0xf8057719
  40b71a:	movabs eax,ds:0x8570cb0ed43969c5
  40b723:	add    al,0x6f
  40b725:	retf   0xf36c
  40b728:	add    BYTE PTR [rsi-0x6ef4fe8a],dl
  40b72e:	pushf  
  40b72f:	rex.WB
  40b730:	fwait
  40b731:	in     al,0x35
  40b733:	add    bh,al
  40b735:	sub    DWORD PTR [rsi-0x68],0xffffffc6
  40b739:	(bad)
  40b73c:	cmp    edi,DWORD PTR [rbp+0x76]
  40b73f:	rex.B std 
  40b741:	leave  
  40b742:	and    dh,BYTE PTR [rsi+rbp*1]
  40b745:	cli    
  40b746:	add    BYTE PTR [rbp+0x4b],ah
  40b749:	(bad)  
  40b74a:	(bad)  
  40b74b:	cmp    edi,DWORD PTR [rcx-0x5a]
  40b74e:	jns    0x40b750
  40b750:	imul   edi,DWORD PTR [rdx-0x77daf580],0x4a
  40b757:	mov    WORD PTR [rdx+0x60],gs
  40b75a:	(bad)
  40b75d:	xchg   ebx,eax
  40b75e:	mov    ebp,edx
  40b760:	test   BYTE PTR [rbx+0x71],0x67
  40b764:	mov    ebx,0x9c3fea07
  40b769:	mov    edi,DWORD PTR [rdx+0x5f20b379]
  40b76f:	xor    BYTE PTR [rdi],dl
  40b771:	(bad)  
  40b772:	xchg   ebx,eax
  40b773:	ins    BYTE PTR es:[rdi],dx
  40b774:	int    0x3
  40b776:	pop    rax
  40b777:	fild   DWORD PTR [rip+0xfffffffff40bc711]        # 0xfffffffff44c7e8e
  40b77d:	add    BYTE PTR [rcx+rcx*1+0x3e],dh
  40b781:	fneni(8087 only) 
  40b783:	xor    dh,BYTE PTR [ecx+0x23]
  40b787:	leave  
  40b788:	mov    eax,0xea1bb37d
  40b78d:	ficomp WORD PTR [rbx+0x69bb5a89]
  40b793:	mov    eax,0x6c6ec738
  40b798:	add    BYTE PTR [rbx-0x45],ch
  40b79b:	and    al,bh
  40b79d:	push   0xffffffffc508beae
  40b7a2:	jns    0x40b7ee
  40b7a4:	mov    dl,0xff
  40b7a6:	sti    
  40b7a7:	(bad)  
  40b7a8:	add    ah,dl
  40b7aa:	(bad)  
  40b7ab:	pushf  
  40b7ac:	xchg   ebx,ebx
  40b7ae:	scas   al,BYTE PTR es:[rdi]
  40b7af:	cs test al,0x99
  40b7b2:	xor    DWORD PTR [rip+0xffffffffa26fa9aa],eax        # 0xffffffffa2b06162
  40b7b8:	cwde   
  40b7b9:	rex mov ecx,gs
  40b7bc:	xor    BYTE PTR [rbp-0x64efefa3],0xc5
  40b7c3:	jl     0x40b75d
  40b7c5:	push   0x65805211
  40b7ca:	stos   DWORD PTR es:[rdi],eax
  40b7cb:	ja     0x40b768
  40b7cd:	add    BYTE PTR [rax-0x25],dl
  40b7d0:	mov    ebx,esi
  40b7d2:	cdq    
  40b7d3:	mov    ch,bh
  40b7d5:	mov    sp,0xf38d
  40b7d9:	mov    dh,0x53
  40b7db:	jo     0x40b85b
  40b7dd:	cli    
  40b7de:	pop    rbx
  40b7df:	movsxd eax,DWORD PTR [rbx]
  40b7e1:	pop    rax
  40b7e2:	fild   DWORD PTR [rip+0xffffffffcb5c3774]        # 0xffffffffcb9cef5c
  40b7e8:	or     eax,DWORD PTR [rbp+0x5610f733]
  40b7ee:	outs   dx,BYTE PTR ds:[rsi]
  40b7ef:	cmp    DWORD PTR [rax-0x4e],ebp
  40b7f2:	or     edx,DWORD PTR [rdx+0x47]
  40b7f5:	mov    DWORD PTR [rax],edi
  40b7f7:	call   FWORD PTR [edi+ecx*4+0x16b37e1]
  40b7ff:	test   ah,0x9c
  40b802:	(bad)  
  40b803:	fst    st(3)
  40b805:	cdq    
  40b806:	sbb    dl,al
  40b808:	jg     0x40b867
  40b80a:	pop    rcx
  40b80b:	xlat   BYTE PTR ds:[rbx]
  40b80c:	lods   eax,DWORD PTR ds:[rsi]
  40b80d:	cli    
  40b80e:	(bad)  
  40b80f:	mov    WORD PTR [rsi-0x56],ds
  40b812:	mov    DWORD PTR [rax-0x1253ff99],edi
  40b818:	(bad)  
  40b819:	mov    DWORD PTR [rax],edx
  40b81b:	ss jb  0x40b7de
  40b81e:	pop    rsp
  40b81f:	(bad)  
  40b820:	rex.WR movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b822:	enter  0xcd3f,0x65
  40b826:	icebp  
  40b827:	jg     0x40b7eb
  40b829:	dec    DWORD PTR [rdx]
  40b82b:	call   0xfffffffff4c7d05f
  40b830:	(bad)  
  40b831:	cld    
  40b832:	lods   eax,DWORD PTR ds:[rsi]
  40b833:	movups xmm0,XMMWORD PTR [rax]
  40b836:	add    BYTE PTR [rax],al
  40b838:	add    BYTE PTR [rcx+0x45],cl
  40b83b:	rex.WRX
  40b83c:	rex.R scas al,BYTE PTR es:[rdi]
  40b83e:	rex.X (bad) 
  40b840:	(bad)  
  40b841:	or     eax,DWORD PTR [rax+0x0]
  40b844:	add    DWORD PTR [rax],eax
  40b846:	add    BYTE PTR [rax],al
  40b848:	(bad)  
  40b849:	(bad)  
  40b84a:	(bad)  
  40b84b:	inc    DWORD PTR [rcx]
  40b84d:	add    BYTE PTR [rax],al
  40b84f:	add    BYTE PTR [rax],al
  40b851:	add    BYTE PTR [rax],al
  40b853:	add    BYTE PTR [rdx+rax*1],cl
  40b856:	add    BYTE PTR [rax],al
  40b858:	add    BYTE PTR [rcx+0x53],dl
  40b85b:	jns    0x40b8d0
  40b85d:	je     0x40b8c4
  40b85f:	ins    DWORD PTR es:[rdi],dx
  40b860:	cs rex.R jb 0x40b8c5
  40b864:	ja     0x40b8cf
  40b866:	outs   dx,BYTE PTR ds:[rsi]
  40b867:	addr32 sub al,0x20
  40b86a:	push   rsi
  40b86b:	gs jb  0x40b8e1
  40b86e:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40b875:	xor    BYTE PTR cs:[rsi],ch
  40b878:	xor    BYTE PTR [rax+riz*1],ch
  40b87b:	rex.XB jne 0x40b8ea
  40b87e:	je     0x40b8f5
  40b880:	jb     0x40b8e7
  40b882:	cmp    eax,0x7475656e
  40b887:	jb     0x40b8ea
  40b889:	ins    BYTE PTR es:[rdi],dx
  40b88a:	sub    al,0x20
  40b88c:	push   rax
  40b88d:	jne    0x40b8f1
  40b88f:	ins    BYTE PTR es:[rdi],dx
  40b890:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40b897:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40b89b:	(bad)  
  40b89c:	xor    BYTE PTR [rbx],dh
  40b89e:	xor    ax,0x3766
  40b8a2:	xor    WORD PTR [rcx],si
  40b8a5:	fs xor eax,0x61336130
  40b8ab:	add    eax,0x1
  40b8b0:	adc    eax,0x74737953
  40b8b5:	gs ins DWORD PTR es:[rdi],dx
  40b8b7:	cs rex.R jb 0x40b91c
  40b8bb:	ja     0x40b926
  40b8bd:	outs   dx,BYTE PTR ds:[rsi]
  40b8be:	imul   esi,DWORD PTR cs:[ebp+r13d*2+0x61],0x170
  40b8c9:	add    BYTE PTR [rsp+rax*2],al
  40b8cc:	(bad)  
  40b8cd:	je     0x40b930
  40b8cf:	(bad)  
  40b8d0:	add    al,BYTE PTR [rdx]
  40b8d2:	add    BYTE PTR [rax],al
  40b8d4:	add    BYTE PTR [rcx],cl
  40b8d6:	add    eax,DWORD PTR [rax]
  40b8d8:	add    BYTE PTR [rax],al
  40b8da:	lsl    eax,WORD PTR [rax]
  40b8dd:	add    BYTE PTR [rax],al
  40b8df:	sbb    al,0x9
  40b8e1:	add    BYTE PTR [rax],al
  40b8e3:	add    cl,BYTE PTR [rcx+0xd474e50]
  40b8e9:	or     bl,BYTE PTR [rdx]
  40b8eb:	or     al,BYTE PTR [rax]
  40b8ed:	add    BYTE PTR [rax],al
  40b8ef:	or     eax,0x52444849
  40b8f4:	add    BYTE PTR [rax],al
  40b8f6:	add    BYTE PTR [rax],ah
  40b8f8:	add    BYTE PTR [rax],al
  40b8fa:	add    BYTE PTR [rax],ah
  40b8fc:	or     BYTE PTR [rsi],al
  40b8fe:	add    BYTE PTR [rax],al
  40b900:	add    BYTE PTR [rbx+0x7a],dh
  40b903:	jp     0x40b8f9
  40b905:	add    BYTE PTR [rax],al
  40b907:	add    BYTE PTR [rcx],al
  40b909:	jae    0x40b95d
  40b90b:	rex.RXB
  40b90c:	rex.X add BYTE PTR [rsi+0xe91cce],bpl
  40b913:	add    BYTE PTR [rax],al
  40b915:	add    al,0x67
  40b917:	rex.B
  40b918:	rex.WRB
  40b919:	add    BYTE PTR [r8],al
  40b91c:	mov    cl,0x8f
  40b91e:	or     edi,esp
  40b920:	(bad)  
  40b921:	add    eax,0x20000000
  40b926:	movsxd ecx,DWORD PTR [rax+0x52]
  40b929:	rex.WRB add BYTE PTR [r8],r8b
  40b92c:	jp     0x40b954
  40b92e:	add    BYTE PTR [rax],al
  40b930:	add    BYTE PTR [rax+rax*1+0xfa00],0x0
  40b938:	sub    al,0x0
  40b93b:	add    BYTE PTR [rbp+0x30],dh
  40b93e:	add    BYTE PTR [rax],al
  40b940:	(bad)  
  40b941:	(bad)  
  40b942:	add    BYTE PTR [rax],al
  40b944:	cmp    bl,BYTE PTR [rax+0x70170000]
  40b94a:	pushf  
  40b94b:	mov    edx,0x3c51
  40b950:	or     BYTE PTR [rdx+0x54414449],bl
  40b956:	pop    rax
  40b957:	rex.RXB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40b959:	xchg   edi,eax
  40b95a:	jnp    0x40b9ac
  40b95c:	push   rbx
  40b95d:	push   rdi
  40b95e:	(bad)  
  40b95f:	(bad)  
  40b960:	sar    DWORD PTR [rdi],cl
  40b962:	ja     0x40b9ca
  40b964:	(bad)  
  40b965:	call   0xffffffffdbeda836
  40b96a:	(bad)  
  40b96b:	mov    edx,0xa75b7776
  40b970:	pop    rbx
  40b971:	ja     0x40b96e
  40b973:	pushf  
  40b974:	pop    rbp
  40b975:	in     eax,dx
  40b976:	in     al,dx
  40b977:	or     al,0x76
  40b979:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40b97a:	mov    edi,DWORD PTR [rdx-0x720a5496]
  40b980:	clc    
  40b981:	push   rsi
  40b982:	push   rsp
  40b983:	push   0xffffffffde5158a1
  40b988:	(bad)  
  40b989:	and    dl,cl
  40b98b:	rex.XB (bad) 
  40b98d:	test   BYTE PTR [rax],al
  40b98f:	add    ah,BYTE PTR [rdx]
  40b991:	sbb    BYTE PTR [rcx+rax*2+0x40414501],dl
  40b998:	mov    cl,0xf8
  40b99a:	sub    cl,dl
  40b99c:	and    eax,DWORD PTR [rdi+rsi*1+0x783c8121]
  40b9a3:	(bad)  
  40b9a4:	ret    0x484b
  40b9a7:	and    BYTE PTR [rcx+riz*8],ah
  40b9aa:	mov    ebx,0x524873bf
  40b9af:	icebp  
  40b9b0:	ficomp DWORD PTR [rcx-0x703c4246]
  40b9b6:	jae    0x40ba2b
  40b9b8:	xchg   ebx,eax
  40b9b9:	pushf  
  40b9ba:	iret   
  40b9bb:	out    0x77,eax
  40b9bd:	(bad)  
  40b9be:	out    dx,eax
  40b9bf:	pushf  
  40b9c0:	jnp    0x40b9b5
  40b9c2:	retf   0xd2ad
  40b9c5:	(bad)  
  40b9c6:	or     BYTE PTR [rax],0x22
  40b9c9:	inc    bh
  40b9cb:	(bad)  
  40b9cc:	ins    BYTE PTR es:[rdi],dx
  40b9cd:	lods   eax,DWORD PTR ds:[rsi]
  40b9ce:	enter  0x7af6,0xe6
  40b9d2:	(bad)  
  40b9d3:	imul   esi,esp,0xffffffe6
  40b9d6:	or     al,0xfb
  40b9d8:	int3   
  40b9d9:	mov    ebp,?
  40b9db:	cmp    eax,0xcccd2fa
  40b9e0:	rex.R
  40b9e1:	rex.WRX pop rdi
  40b9e3:	lods   eax,DWORD PTR ds:[rsi]
  40b9e4:	jl     0x40b96b
  40b9e6:	ds (bad) 
  40b9e8:	call   FWORD PTR [rip+0x13efb785]        # 0x14307173
  40b9ee:	test   edi,0x2d843a83
  40b9f4:	sub    al,0x74
  40b9f6:	(bad)  
  40b9f7:	cmp    esi,0xffffff99
  40b9fa:	ins    DWORD PTR es:[rdi],dx
  40b9fb:	(bad)  
  40b9fc:	sahf   
  40b9fd:	or     ecx,0xb06131a
  40ba03:	and    al,0x57
  40ba05:	outs   dx,DWORD PTR ds:[rsi]
  40ba06:	mov    dl,0x2f
  40ba08:	pop    rbx
  40ba09:	in     eax,0x5f
  40ba0b:	mov    esi,0xb92cdd15
  40ba10:	(bad)  
  40ba11:	jmp    0x2c9b5c2c
  40ba16:	loopne 0x40b9b8
  40ba18:	imul   eax,DWORD PTR [rdx],0x3067a718
  40ba1e:	imul   esi,DWORD PTR [rax+rax*8+0x38c16930],0x1984d8c5
  40ba29:	and    edx,DWORD PTR [rbx+rax*2]
  40ba2c:	rex.WRXB int 0x18
  40ba2f:	sbb    al,0x35
  40ba31:	movabs eax,ds:0xcf485d55651a647f
  40ba3a:	(bad)  
  40ba3b:	jmp    QWORD PTR [rbp+0x2]
  40ba3e:	(bad)  
  40ba3f:	mov    cl,bl
  40ba41:	mov    eax,0xb859f980
  40ba46:	imul   eax,DWORD PTR [rsi],0x1819c653
  40ba4c:	rex.W
  40ba4d:	rex (bad) 
  40ba4f:	add    r8b,BYTE PTR [r14]
  40ba52:	xor    edx,DWORD PTR [rdi]
  40ba54:	sbb    BYTE PTR [rip+0xffffffffcd8c0ab7],bl        # 0xffffffffcdccc511
  40ba5a:	or     ah,BYTE PTR [rsi+rdx*1+0x34]
  40ba5e:	loope  0x40ba5c
  40ba60:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40ba61:	imul   edi,DWORD PTR [rdi-0x52051fb4],0xffffffbb
  40ba68:	pop    rsp
  40ba69:	shl    BYTE PTR [rsi+rax*1+0x65],0xce
  40ba6e:	ret    0xe302
  40ba71:	xor    eax,DWORD PTR [rdx]
  40ba73:	ins    BYTE PTR es:[rdi],dx
  40ba74:	cwde   
  40ba75:	lahf   
  40ba76:	(bad)  
  40ba77:	addr32 add eax,0x8980b846
  40ba7d:	pop    QWORD PTR [rax-0x21]
  40ba80:	mov    BYTE PTR [rcx-0xdb75bf5],cl
  40ba86:	pop    rsi
  40ba87:	sub    BYTE PTR [rax],dl
  40ba89:	sbb    DWORD PTR [rip+0xffffffff99cfd5fe],ebp        # 0xffffffff9a10908d
  40ba8f:	sbb    dl,BYTE PTR [rcx+0x6e]
  40ba92:	(bad)  
  40ba93:	sub    DWORD PTR [rdi],edx
  40ba95:	cwde   
  40ba96:	es test al,0xd1
  40ba99:	rex.R jo 0x40bad2
  40ba9c:	hlt    
  40ba9d:	rcl    DWORD PTR [rsi],cl
  40ba9f:	rex.WR push rdx
  40baa1:	out    0x3c,al
  40baa3:	sti    
  40baa4:	xor    rdx,QWORD PTR [r15]
  40baa7:	sbb    BYTE PTR [rip+0x42986137],bl        # 0x42d91be4
  40baad:	rex.RXB (bad) [r15]
  40bab0:	adc    BYTE PTR [rdi+rbp*2+0x12047678],bh
  40bab7:	shr    DWORD PTR [rdi+0x6d322822],cl
  40babd:	cmp    eax,0x888b3c45
  40bac2:	xor    esi,ecx
  40bac4:	stos   DWORD PTR es:[rdi],eax
  40bac5:	and    esp,DWORD PTR [rdx+0x1b6bf3c5]
  40bacb:	fist   DWORD PTR [rcx+0x4909769c]
  40bad1:	test   eax,0xca4f8899
  40bad6:	lods   al,BYTE PTR ds:[rsi]
  40bad8:	cmp    BYTE PTR [rip+0x80951e1],cl        # 0x84a0cbf
  40bade:	or     BYTE PTR [rsi],cl
  40bae0:	(bad)  
  40bae1:	hlt    
  40bae2:	or     DWORD PTR [rax],edi
  40bae4:	stc    
  40bae5:	stos   BYTE PTR es:[rdi],al
  40bae6:	rex.WRB
  40bae7:	rex.WRX je 0x40badf
  40baea:	out    0x6d,al
  40baec:	je     0x40bae5
  40baee:	test   BYTE PTR [rbx-0x25],0xd5
  40baf2:	mov    DWORD PTR [rbx-0x2d],0xb6b50bd9
  40baf9:	(bad)  
  40bafa:	ins    DWORD PTR es:[rdi],dx
  40bafb:	(bad)  
  40bafc:	outs   dx,BYTE PTR ds:[rsi]
  40bafd:	sub    BYTE PTR [rbp-0x23],dl
  40bb00:	push   0xffffffff8b42ef6d
  40bb05:	mov    dl,0x3
  40bb07:	lea    ebp,[rbp+0x35cbd45a]
  40bb0d:	nop
  40bb0e:	xor    eax,0x506d21ab
  40bb13:	movabs eax,ds:0xd3884a644f0daeb2
  40bb1c:	mov    dl,0x99
  40bb1e:	rex popf 
  40bb20:	lods   eax,DWORD PTR ds:[rsi]
  40bb21:	mov    WORD PTR [rbx],?
  40bb23:	xor    dh,BYTE PTR [rbx+0x50]
  40bb26:	push   rax
  40bb27:	repnz add BYTE PTR [rdi+0x1a30ed65],cl
  40bb2e:	rex.WRB xor al,0xb5
  40bb31:	(bad)  
  40bb32:	call   0xffffffffb012817d
  40bb37:	sbb    eax,DWORD PTR [rbx+0x21106ba6]
  40bb3d:	adc    DWORD PTR [rcx],ecx
  40bb3f:	or     BYTE PTR [rdi*1-0x3f50b0f5],cl
  40bb46:	test   DWORD PTR [rdx+rax*2-0x6c],ecx
  40bb4a:	popf   
  40bb4b:	pop    rdi
  40bb4c:	or     al,0xb6
  40bb4e:	adc    al,0x6f
  40bb50:	xchg   esp,eax
  40bb51:	xchg   esp,eax
  40bb52:	and    DWORD PTR [rdi-0x514df110],esi
  40bb58:	adc    eax,0x6fb2321
  40bb5d:	xchg   edx,eax
  40bb5e:	(bad)  
  40bb5f:	out    0xe2,al
  40bb61:	ins    BYTE PTR es:[rdi],dx
  40bb62:	rex.WX (bad) 
  40bb64:	and    al,ah
  40bb66:	sbb    DWORD PTR [rax],edi
  40bb68:	jno    0x40bb90
  40bb6a:	add    eax,0x1c62613e
  40bb6f:	(bad)  
  40bb70:	mov    WORD PTR [rcx-0x9fbb055],es
  40bb76:	(bad)  
  40bb77:	mov    DWORD PTR ds:[rip+0xffffffffeb6104df],ebx        # 0xffffffffeba1c05d
  40bb7e:	rol    DWORD PTR [rax],0xc4
  40bb81:	shl    BYTE PTR [rdi+0x6c],cl
  40bb84:	add    bh,BYTE PTR [rip+0x6d68437d]        # 0x6da8ff07
  40bb8a:	jmp    0x40bb4c
  40bb8c:	fld    QWORD PTR [rdi-0x4b]
  40bb8f:	test   al,0x69
  40bb91:	rcl    dl,cl
  40bb93:	mov    ah,0x5a
  40bb95:	xor    BYTE PTR [rdx+rbp*4],bh
  40bb98:	(bad)  
  40bb99:	pop    rcx
  40bb9a:	adc    eax,0x90aa8b72
  40bb9f:	pushf  
  40bba0:	push   rbp
  40bba1:	rex.RX leave 
  40bba3:	je     0x40bb87
  40bba5:	mov    al,0x5f
  40bba7:	and    al,0x5c
  40bba9:	pop    rsp
  40bbaa:	mov    ebp,0x7dc5c7b0
  40bbaf:	movabs eax,ds:0x997c32ce68af2b28
  40bbb8:	(bad)  
  40bbb9:	ins    BYTE PTR es:[rdi],dx
  40bbba:	(bad)
  40bbbd:	pop    rbp
  40bbbe:	mov    dl,0xb
  40bbc0:	sub    BYTE PTR [rax-0x3c],ch
  40bbc3:	ins    BYTE PTR es:[rdi],dx
  40bbc4:	lock mov esp,0x6968c7a2
  40bbca:	jmp    0x40bc0d
  40bbcc:	mov    ecx,0xefc28954
  40bbd1:	imul   edx,DWORD PTR [rcx],0x1a
  40bbd4:	sub    eax,0xc406781
  40bbd9:	idiv   BYTE PTR [rbx-0x7a]
  40bbdc:	and    bh,bh
  40bbde:	push   rsi
  40bbdf:	sbb    DWORD PTR [rsi],esi
  40bbe1:	cmp    bl,BYTE PTR [rdi]
  40bbe3:	sar    dl,0x4d
  40bbe6:	fist   DWORD PTR [rbx+0x44]
  40bbe9:	cdq    
  40bbea:	cmp    DWORD PTR [rbp+0x538fdd7c],eax
  40bbf0:	mov    cl,0xb1
  40bbf2:	push   0x67
  40bbf4:	shl    edi,0x9c
  40bbf7:	(bad)  
  40bbf8:	adc    eax,0x5e779b1d
  40bbfd:	js     0x40bc62
  40bbff:	shl    esi,cl
  40bc01:	mov    ecx,0xa34dd1ef
  40bc06:	imul   edx,eax,0x8
  40bc09:	leave  
  40bc0a:	cmc    
  40bc0b:	rex.WX
  40bc0c:	rex.R
  40bc0d:	es pop rsp
  40bc0f:	in     al,0x2
  40bc11:	sar    BYTE PTR [rdx],cl
  40bc13:	add    eax,0xedcaca4a
  40bc18:	movabs al,ds:0x8547c85fc42ca498
  40bc21:	rex.WR mov gs,rsp
  40bc24:	imul   esp,DWORD PTR [rbp-0x78151228],0xffffffcf
  40bc2b:	xlat   BYTE PTR ds:[rbx]
  40bc2c:	ins    BYTE PTR es:[rdi],dx
  40bc2d:	fwait
  40bc2e:	adc    ebp,DWORD PTR [rbx]
  40bc30:	mov    esi,0xe3288674
  40bc35:	retf   0x2e0d
  40bc38:	xor    dh,al
  40bc3a:	sub    bl,ch
  40bc3c:	pop    rdx
  40bc3d:	in     eax,dx
  40bc3e:	movabs ds:0x66343f35a61f8ad6,eax
  40bc47:	xchg   BYTE PTR [rsi+0x74607eaa],cl
  40bc4d:	(bad)  
  40bc4e:	(bad)  
  40bc4f:	pop    rsi
  40bc50:	(bad)  
  40bc51:	sar    DWORD PTR [rbx+0xe744675],0x18
  40bc58:	xchg   ecx,eax
  40bc59:	push   rdi
  40bc5a:	and    al,ch
  40bc5c:	jmp    0xffffffff849f3119
  40bc61:	sub    al,0xb3
  40bc63:	popf   
  40bc64:	xchg   DWORD PTR [rdx],eax
  40bc66:	clc    
  40bc67:	cmp    DWORD PTR [rbx-0x5005a25],ebx
  40bc6d:	bnd ret 
  40bc6f:	lock mov eax,0x2e5878cb
  40bc75:	rex.XB push r10
  40bc77:	jp     0x40bc87
  40bc79:	push   rsi
  40bc7a:	lods   eax,DWORD PTR ds:[rsi]
  40bc7b:	fisttp WORD PTR [rip+0xffffffff9efacd76]        # 0xffffffff9f3b89f7
  40bc81:	and    ebx,DWORD PTR [rbp+0x16e561c3]
  40bc87:	mov    dl,dl
  40bc89:	mov    dl,0xf2
  40bc8b:	mov    ecx,0x16d6cb00
  40bc90:	ret    
  40bc91:	xchg   esp,eax
  40bc92:	xor    ebx,ebx
  40bc94:	jo     0x40bcee
  40bc96:	(bad)
  40bc99:	fcom   DWORD PTR [rsi-0xb]
  40bc9c:	mov    ebp,0xcca70443
  40bca1:	pop    rcx
  40bca2:	neg    BYTE PTR [rip+0x205c53fd]        # 0x209d10a5
  40bca8:	xor    al,0x26
  40bcaa:	in     eax,dx
  40bcab:	(bad)  
  40bcac:	test   DWORD PTR [rcx],0xa9428192
  40bcb2:	rex.RB
  40bcb3:	rex.WR xchg rdx,rax
  40bcb5:	add    al,0xcb
  40bcb7:	xchg   esi,eax
  40bcb8:	outs   dx,DWORD PTR ds:[rsi]
  40bcb9:	adc    BYTE PTR [rsi+rcx*4+0x24],bh
  40bcbd:	sbb    al,0x45
  40bcbf:	sub    DWORD PTR [rcx+0x65bb7c79],ebx
  40bcc5:	ret    
  40bcc6:	cmp    al,0x4c
  40bcc8:	shl    BYTE PTR [rcx],0x8a
  40bccb:	pop    rcx
  40bccc:	xor    BYTE PTR [rip+0xffffffffe1b6372d],al        # 0xffffffffe1f6f3ff
  40bcd2:	hlt    
  40bcd3:	adc    DWORD PTR [rax+0x7b9a6bc1],ebx
  40bcd9:	nop
  40bcda:	jne    0x40bc7f
  40bcdc:	sbb    al,0x67
  40bcde:	xchg   edx,eax
  40bcdf:	repz loope 0x40bcf9
  40bce2:	cdq    
  40bce3:	leave  
  40bce4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40bce5:	shl    dh,0xda
  40bce8:	(bad)  
  40bce9:	(bad)
  40bcef:	(bad)  
  40bcf0:	mov    dh,0xbc
  40bcf2:	sahf   
  40bcf3:	fisubr WORD PTR [rcx]
  40bcf5:	jns    0x40bcf4
  40bcf7:	rex.R pop rax
  40bcf9:	and    bl,BYTE PTR [rdx+0x1110da5a]
  40bcff:	fwait
  40bd00:	(bad)  
  40bd01:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40bd02:	retf   
  40bd03:	push   rsi
  40bd04:	sbb    DWORD PTR [rbp+0x7b],0x7e
  40bd08:	outs   dx,DWORD PTR ds:[rsi]
  40bd09:	adc    BYTE PTR [rbp+0x5d99c8cb],bl
  40bd0f:	add    eax,0x16e623b4
  40bd14:	xchg   esp,eax
  40bd15:	repnz push rbp
  40bd17:	nop
  40bd18:	rex.WRX stos QWORD PTR es:[rdi],rax
  40bd1a:	loopne 0x40bcf8
  40bd1c:	(bad)
  40bd1f:	rex.WRB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40bd21:	push   rbp
  40bd22:	adc    BYTE PTR [rdi+0x55a6081],bl
  40bd28:	adc    DWORD PTR [rcx-0x55d63757],0xf2e8d7b4
  40bd32:	ins    DWORD PTR es:[rdi],dx
  40bd33:	pop    rsi
  40bd34:	jl     0x40bd4b
  40bd36:	fmul   DWORD PTR [rsi+0x847a2dc]
  40bd3c:	mov    ecx,edi
  40bd3e:	xchg   bh,ah
  40bd40:	mov    DWORD PTR [rsi+rdx*4],edx
  40bd43:	stos   BYTE PTR es:[rdi],al
  40bd44:	mov    BYTE PTR [rax-0x72],ah
  40bd47:	xchg   DWORD PTR [rsi-0x5ca2bd64],ecx
  40bd4d:	sbb    al,0xa7
  40bd4f:	push   0xffffffff81c3fffd
  40bd54:	or     ebp,DWORD PTR [rbp+rdx*1+0x8]
  40bd58:	and    al,0x5c
  40bd5a:	mov    eax,0x51a1c18a
  40bd5f:	test   al,0x3b
  40bd61:	xchg   DWORD PTR [rax+0xe8745b2],esp
  40bd67:	in     eax,dx
  40bd68:	adc    al,0x4a
  40bd6a:	lods   eax,DWORD PTR ds:[rsi]
  40bd6b:	(bad)  
  40bd6c:	or     cl,ch
  40bd6e:	and    BYTE PTR [rdx+rbp*8],dl
  40bd71:	pop    r12
  40bd73:	mov    edi,0xe2c3b52d
  40bd78:	ror    DWORD PTR [rbx],cl
  40bd7a:	rol    DWORD PTR [rdx+rbp*2],0xe5
  40bd7e:	cmp    eax,0x9b8ff370
  40bd83:	jae    0x40bdc2
  40bd85:	and    al,0x56
  40bd87:	push   rdx
  40bd88:	ret    
  40bd89:	and    bl,al
  40bd8b:	xchg   edi,eax
  40bd8c:	and    eax,0x8517e638
  40bd91:	test   bl,dh
  40bd93:	f2xm1  
  40bd95:	or     ecx,DWORD PTR [rsi-0x15afd1e]
  40bd9b:	pop    rsp
  40bd9c:	js     0x40bd6c
  40bd9e:	lea    ecx,[rbx+0x14]
  40bda1:	ja     0x40bde1
  40bda3:	mov    edx,edi
  40bda5:	add    bl,bl
  40bda7:	or     DWORD PTR [rdi+0x2a],edi
  40bdaa:	fcom   st(6)
  40bdac:	jl     0x40bd5b
  40bdae:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40bdaf:	(bad)  
  40bdb0:	sbb    DWORD PTR [rsi],0x4b
  40bdb3:	in     eax,0x1c
  40bdb5:	cmp    r12d,DWORD PTR ds:[r14-0x21ad9162]
  40bdbd:	movabs eax,ds:0xfb130098cfbe28f1
  40bdc6:	iret   
  40bdc7:	mul    BYTE PTR [rbx+0x1c]
  40bdca:	rcr    BYTE PTR [rbx],cl
  40bdcc:	jno    0x40bde0
  40bdce:	es popf 
  40bdd0:	(bad)  
  40bdd1:	rcr    DWORD PTR [rbp+0x2a52981d],cl
  40bdd7:	xor    BYTE PTR [rsi+0x54],dl
  40bdda:	xor    BYTE PTR [rdi+riz*1],0x67
  40bdde:	movabs eax,ds:0x2b2ddbf12f937fc0
  40bde7:	cs pop rbx
  40bde9:	xor    DWORD PTR [rbp+0xd],0xef2af34c
  40bdf0:	sbb    BYTE PTR [rax+0x4d8a9682],bl
  40bdf6:	(bad)  [rdi]
  40bdf8:	test   esp,ebp
  40bdfa:	fwait
  40bdfb:	(bad)  
  40bdfc:	cmp    DWORD PTR [rsi+rdx*8-0x58],eax
  40be00:	loop   0x40be04
  40be02:	(bad)  
  40be03:	(bad)  
  40be04:	jbe    0x40be29
  40be06:	out    dx,eax
  40be07:	scas   al,BYTE PTR es:[rdi]
  40be08:	add    al,BYTE PTR [rdi+0x43]
  40be0b:	(bad)  
  40be0c:	push   0x5d8d168
  40be11:	xchg   esi,eax
  40be12:	ins    DWORD PTR es:[rdi],dx
  40be13:	jo     0x40bdcc
  40be15:	or     ecx,DWORD PTR [rsp+rdx*4-0x6b]
  40be19:	mov    dl,0x61
  40be1b:	out    0xf0,eax
  40be1d:	ss mov bh,0xfd
  40be20:	(bad)  
  40be21:	(bad)  
  40be22:	mov    BYTE PTR [rdx-0x6c],cl
  40be25:	lock pop rbx
  40be27:	lock sub al,0x90
  40be2a:	xchg   esi,eax
  40be2b:	xchg   edi,eax
  40be2c:	adc    eax,0x3e9ac0c8
  40be31:	and    edx,esp
  40be33:	mov    ebp,0x4cf75053
  40be38:	and    DWORD PTR [rbx],esi
  40be3a:	out    dx,eax
  40be3b:	(bad)  
  40be3c:	cmp    bh,BYTE PTR [rdx-0x757c779]
  40be42:	jle    0x40be47
  40be44:	idiv   BYTE PTR [rdi+rdx*1-0x72]
  40be48:	jge    0x40bea8
  40be4a:	xchg   ecx,eax
  40be4b:	mov    BYTE PTR [rdx],bh
  40be4d:	ja     0x40be54
  40be4f:	data16 mov bl,0x19
  40be52:	(bad)  
  40be54:	and    ecx,DWORD PTR [rax]
  40be56:	mov    ecx,ebx
  40be58:	(bad)  
  40be59:	xchg   edx,eax
  40be5a:	(bad)  
  40be5b:	(bad)  
  40be5c:	mov    ecx,0x487740
  40be61:	sahf   
  40be62:	adc    bl,BYTE PTR [rax-0x69]
  40be65:	xchg   edx,eax
  40be66:	add    BYTE PTR [rcx],0x71
  40be69:	or     al,0x17
  40be6b:	rex.W pop rax
  40be6d:	mov    bh,0x51
  40be6f:	cmp    BYTE PTR [rdx],al
  40be71:	loope  0x40bec7
  40be73:	rex.WR and BYTE PTR fs:[rbp-0x57],0x25
  40be79:	cwde   
  40be7a:	xchg   BYTE PTR [rdx+0xe],bl
  40be7d:	in     eax,dx
  40be7e:	xor    eax,0x893bd542
  40be83:	jbe    0x40be07
  40be85:	mov    bh,0x75
  40be87:	rex.WRXB loop 0x40bee6
  40be8a:	adc    dx,si
  40be8d:	mov    bl,BYTE PTR [rsi+0x7f3d070]
  40be93:	mov    ebx,0x3d797df6
  40be98:	jl     0x40bee9
  40be9a:	pop    rdi
  40be9b:	sbb    BYTE PTR [rbx+0x1309746f],0xe8
  40bea2:	hlt    
  40bea3:	cmp    ecx,DWORD PTR [rdx-0xbe3436f]
  40bea9:	mov    DWORD PTR [rsi-0x5f],0xa0c322f
  40beb0:	xchg   edi,eax
  40beb1:	pop    rbp
  40beb2:	mov    BYTE PTR [rsi-0x4f],bl
  40beb5:	rex.RX sub BYTE PTR [rax],r10b
  40beb8:	(bad)  
  40beb9:	jnp    0x40be3c
  40bebb:	or     esi,DWORD PTR [rax+0x68d6552c]
  40bec1:	out    dx,eax
  40bec2:	cdq    
  40bec3:	and    al,0x28
  40bec5:	cmp    DWORD PTR [rbx-0x7d651258],0xb247da92
  40becf:	cs mov eax,0x3da44f1f
  40bed5:	mov    ebp,0x142b0f1a
  40beda:	fadd   QWORD PTR [rcx-0x23]
  40bedd:	xor    DWORD PTR [rax+0x1e3526da],ecx
  40bee3:	push   rsi
  40bee4:	ss ret 
  40bee6:	(bad)  
  40bee7:	xor    bl,BYTE PTR [rip+0xffffffff8bd8af1f]        # 0xffffffff8c196e0c
  40beed:	outs   dx,DWORD PTR ds:[rsi]
  40beee:	rex.WRXB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40bef0:	xor    cl,BYTE PTR [rdx+0x3c47b48]
  40bef6:	rex.XB xchg r15d,eax
  40bef8:	(bad)  
  40bef9:	movabs ds:0xd968be415d182c27,al
  40bf02:	mov    ebp,0x1ccb610d
  40bf07:	test   DWORD PTR [rdx],eax
  40bf09:	movabs eax,ds:0x1b532903805ca9d1
  40bf12:	push   rax
  40bf13:	push   r8
  40bf15:	rex.RB out 0x24,eax
  40bf18:	pop    rdx
  40bf19:	cmp    esp,DWORD PTR [rsi+0x43]
  40bf1c:	rex.WRX icebp 
  40bf1e:	cmp    bpl,BYTE PTR [rbx]
  40bf21:	push   rcx
  40bf22:	test   BYTE PTR [rsi+rcx*8+0x5],0xaa
  40bf27:	jmp    0x40bf5e
  40bf29:	mov    eax,0xafce5f9c
  40bf2e:	lods   eax,DWORD PTR ds:[rsi]
  40bf2f:	fistp  DWORD PTR [rbx]
  40bf31:	push   0x501f767e
  40bf36:	jge    0x40bf25
  40bf38:	(bad)  
  40bf39:	shl    ebx,0xc9
  40bf3c:	call   0xd4afd35
  40bf41:	leave  
  40bf42:	xor    al,0x6c
  40bf44:	fild   DWORD PTR [rbx+riz*8+0x2841c4b]
  40bf4b:	push   r9
  40bf4d:	leave  
  40bf4e:	xor    al,0x87
  40bf50:	xor    ebp,DWORD PTR [rax+0x25]
  40bf53:	sbb    BYTE PTR [rdi],al
  40bf55:	(bad)  
  40bf56:	sbb    DWORD PTR [rdx],0xd01ad720
  40bf5c:	int3   
  40bf5d:	rex.X movsxd eax,DWORD PTR [rax+0x13]
  40bf61:	(bad)
  40bf64:	rex.WRX movabs rbx,0x1c5292c4054ac3c0
  40bf6e:	lock mov ecx,eax
  40bf71:	mov    bl,0x70
  40bf73:	add    ch,BYTE PTR ss:[rbp-0x5]
  40bf77:	jbe    0x40bf1b
  40bf79:	(bad)  
  40bf7a:	cs (bad) 
  40bf7c:	push   0xffffffffffffff8f
  40bf7e:	rex.XB push 0x3517b83f
  40bf84:	sbb    edx,edi
  40bf86:	ret    0x43fb
  40bf89:	mov    dh,0x4f
  40bf8b:	cmp    eax,0xc2030cb7
  40bf90:	xchg   ebx,eax
  40bf91:	clc    
  40bf92:	rex.XB
  40bf93:	mov    dx,WORD PTR [rsi-0x1f9e1b4e]
  40bf9a:	out    0x2d,eax
  40bf9c:	add    al,0xe3
  40bf9e:	push   rax
  40bf9f:	mov    ch,0x1
  40bfa1:	(bad)  
  40bfa2:	(bad)  
  40bfa3:	push   0xffffffffdf51e950
  40bfa8:	scas   al,BYTE PTR es:[rdi]
  40bfa9:	rex.RXB rcr r13d,0x5a
  40bfad:	add    ah,BYTE PTR ds:[rip+0x24098c54]        # 0x244a4c08
  40bfb4:	mov    al,0xcb
  40bfb6:	xor    eax,DWORD PTR [rdx-0x30]
  40bfb9:	mov    cl,0xc2
  40bfbb:	jns    0x40bff0
  40bfbd:	jp     0x40bfe1
  40bfbf:	ret    0xdca0
  40bfc2:	mov    ebx,0x4de70a03
  40bfc7:	test   al,0xfc
  40bfc9:	(bad)  
  40bfca:	and    eax,0x48fddf3c
  40bfcf:	sub    al,ah
  40bfd1:	rex.WXB idiv QWORD PTR [r9+0x26]
  40bfd5:	rol    BYTE PTR [rax+0x2c],0x43
  40bfd9:	pop    rbx
  40bfda:	fld    TBYTE PTR [rax-0x7f6e5c2a]
  40bfe0:	or     eax,0x6541bd74
  40bfe5:	and    BYTE PTR [rax-0x4aeb8aff],dh
  40bfeb:	ins    DWORD PTR es:[rdi],dx
  40bfec:	jp     0x40c052
  40bfee:	(bad)  
  40bfef:	push   rsp
  40bff0:	fcom   DWORD PTR [rdi+0x3]
  40bff3:	sbb    eax,DWORD PTR [rcx-0x7dde9153]
  40bff9:	mov    ds,WORD PTR [rbx+0x28]
  40bffc:	jrcxz  0x40bfcc
  40bffe:	and    BYTE PTR [rdi-0x38],bh
  40c001:	(bad)  
  40c002:	scas   eax,DWORD PTR es:[rdi]
  40c003:	rex.XB
  40c004:	repz ficom DWORD PTR [rbp-0x8]
  40c008:	(bad)  
  40c009:	stc    
  40c00a:	addr32 jo 0x40c008
  40c00d:	shl    DWORD PTR [rdx-0x5f],cl
  40c010:	shl    BYTE PTR [rcx-0x3fd1c770],0x20
  40c017:	sub    al,0x43
  40c019:	sahf   
  40c01a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40c01b:	xor    eax,0x3d6d9653
  40c020:	add    ebx,ebp
  40c022:	test   al,0xad
  40c024:	push   rbp
  40c025:	(bad)  
  40c026:	and    DWORD PTR [rbx+0x4e],edx
  40c029:	movabs al,ds:0x1b612dfa1cf4da86
  40c032:	or     esp,0xff6af83b
  40c038:	jno    0x40c07b
  40c03a:	(bad)  
  40c03b:	rex.WRB pop r15
  40c03d:	lods   al,BYTE PTR ds:[rsi]
  40c03e:	adc    dh,0xfb
  40c041:	or     BYTE PTR [rdx-0x1e5dc6aa],bl
  40c047:	fisttp WORD PTR [rsi]
  40c049:	mov    eax,0xf629f0ef
  40c04e:	iret   
  40c04f:	pop    rdi
  40c050:	and    al,0x14
  40c052:	cmp    BYTE PTR [rdx],dl
  40c054:	sbb    al,0xcb
  40c056:	add    eax,0xe30ac838
  40c05b:	cmp    spl,dil
  40c05e:	(bad)  
  40c05f:	add    eax,0xf42b873
  40c064:	imul   ebp,DWORD PTR [rbx+0x3594891e],0xcc1f8a3b
  40c06e:	rex.WRX shr rdx,0x5d
  40c072:	fiadd  WORD PTR [rdx+0x63281b8e]
  40c078:	xchg   ebp,eax
  40c079:	xchg   DWORD PTR [rbx],ebp
  40c07b:	(bad)  
  40c07c:	xchg   esi,eax
  40c07d:	jge    0x40c089
  40c07f:	(bad)  
  40c081:	rex.WRXB jo 0x40c01b
  40c084:	(bad)  
  40c085:	xlat   BYTE PTR ds:[rbx]
  40c086:	mov    esp,0x3c050a3f
  40c08b:	add    esp,DWORD PTR [rbx+0xecc80b9]
  40c091:	movabs ds:0x9d0e40e30b3154c,al
  40c09a:	push   rsp
  40c09b:	mov    bl,0x90
  40c09d:	rex.WRXB push r8
  40c09f:	add    eax,0x29511afd
  40c0a4:	test   DWORD PTR [rbx+0x4],esi
  40c0a7:	sbb    al,0x9d
  40c0a9:	mov    cs,WORD PTR [rax]
  40c0ab:	cmp    ah,BYTE PTR [rsi-0x20]
  40c0ae:	ss xchg edi,eax
  40c0b0:	cmp    eax,0x3fdfd90
  40c0b5:	rex.W (bad) 
  40c0b7:	clc    
  40c0b8:	or     ecx,DWORD PTR [rdx-0x18f3a5c1]
  40c0be:	fild   QWORD PTR [rax+rdx*1]
  40c0c1:	or     bh,BYTE PTR [rax+0x3fe19dfb]
  40c0c7:	rex.R push 0xffffffffffffffac
  40c0ca:	push   rax
  40c0cb:	(bad)  
  40c0cc:	xchg   ebx,eax
  40c0cd:	sar    BYTE PTR [rcx],cl
  40c0cf:	outs   dx,DWORD PTR ds:[rsi]
  40c0d0:	ins    DWORD PTR es:[rdi],dx
  40c0d1:	(bad)  
  40c0d2:	push   0xffffffffffffffab
  40c0d4:	or     BYTE PTR [rsi-0x27],bl
  40c0d7:	xor    cl,BYTE PTR [rsi]
  40c0d9:	push   rcx
  40c0da:	cmc    
  40c0db:	fist   WORD PTR [rax]
  40c0dd:	sbb    cl,bh
  40c0df:	(bad)  
  40c0e0:	(bad)  
  40c0e3:	enter  0xe06a,0xb3
  40c0e7:	or     eax,0x658e821e
  40c0ec:	rex.WXB
  40c0ed:	ds rex.RX jmp 0x40c0ff
  40c0f1:	(bad)  
  40c0f2:	push   rsp
  40c0f3:	std    
  40c0f4:	cmc    
  40c0f5:	sbb    eax,0xb7a2e54
  40c0fa:	add    eax,0xa703bdef
  40c0ff:	push   rdi
  40c100:	out    0xb,eax
  40c102:	add    eax,0xf9227cdc
  40c107:	rex.WRB enter 0x2196,0xcb
  40c10c:	xchg   edx,eax
  40c10d:	sar    DWORD PTR [rax-0x4c],0x10
  40c111:	xchg   esp,eax
  40c112:	fimul  DWORD PTR [rdx]
  40c114:	add    dh,BYTE PTR [rbx]
  40c116:	js     0x40c15d
  40c118:	xor    ebx,DWORD PTR [rbp-0x3c70c9]
  40c11e:	rex.WR xchg rsi,rax
  40c120:	pop    rbp
  40c121:	or     BYTE PTR [rbp-0x3f],0x3f
  40c125:	xlat   BYTE PTR ds:[rbx]
  40c126:	mov    edx,0x52963a0a
  40c12b:	(bad)  
  40c12c:	repnz int 0xeb
  40c12f:	push   rcx
  40c130:	stc    
  40c131:	out    0x5,eax
  40c133:	js     0x40c0e7
  40c135:	lock jne 0x40c194
  40c138:	jg     0x40c1b5
  40c13a:	loope  0x40c0c7
  40c13c:	add    eax,0xe70b1d0e
  40c141:	add    dl,BYTE PTR [rdi]
  40c143:	repz jmp 0x40c1b7
  40c146:	push   rsi
  40c147:	push   rdx
  40c148:	(bad)  
  40c149:	mov    bl,0xc2
  40c14b:	jmp    0x40c1a1
  40c14d:	xchg   BYTE PTR [rbp-0x5a663af8],bh
  40c153:	mov    ah,0xff
  40c155:	(bad)  
  40c156:	adc    BYTE PTR [rax],cl
  40c158:	push   rsp
  40c159:	sub    eax,0x75e6845e
  40c15e:	stos   DWORD PTR es:[rdi],eax
  40c15f:	icebp  
  40c160:	clc    
  40c161:	int    0x79
  40c163:	sub    BYTE PTR [rdi-0x13],bh
  40c166:	mov    bh,0xc8
  40c168:	and    eax,0x808e1789
  40c16d:	or     edi,DWORD PTR [rip+0xffffffffeeffec34]        # 0xffffffffef40ada7
  40c173:	and    al,0x7f
  40c175:	(bad)  
  40c176:	fdivrp st(3),st
  40c178:	ins    DWORD PTR es:[rdi],dx
  40c179:	or     BYTE PTR [rsi+0x7b],dh
  40c17c:	test   BYTE PTR [rax-0x59],ah
  40c17f:	sti    
  40c180:	or     DWORD PTR [rdx-0x14],edi
  40c183:	(bad)  
  40c184:	(bad)  
  40c185:	imul   BYTE PTR [rdi-0x4eb31f7d]
  40c18b:	int    0x35
  40c18d:	adc    BYTE PTR [rsi-0x79],cl
  40c190:	add    dh,BYTE PTR [rcx-0x4906616b]
  40c196:	sbb    al,0xf0
  40c198:	xchg   DWORD PTR [rdi+0x70],eax
  40c19b:	sub    bh,BYTE PTR [rdi+0x6422b131]
  40c1a1:	add    bl,BYTE PTR [rdi+0x1027dcac]
  40c1a7:	(bad)  
  40c1a8:	ret    
  40c1a9:	sahf   
  40c1aa:	repz xchg edi,edx
  40c1ad:	jo     0x40c1a4
  40c1af:	int    0xdf
  40c1b1:	jrcxz  0x40c17d
  40c1b3:	cld    
  40c1b4:	jns    0x40c16e
  40c1b6:	repnz (bad) 
  40c1b8:	out    dx,eax
  40c1b9:	pop    rsi
  40c1ba:	sub    al,0x40
  40c1bc:	fistp  QWORD PTR [rcx+rbp*8+0x5f]
  40c1c0:	mov    dh,0x6c
  40c1c2:	xlat   BYTE PTR ds:[rbx]
  40c1c3:	pop    rbx
  40c1c4:	mov    bl,0xcb
  40c1c6:	(bad)  
  40c1c7:	sub    ebx,DWORD PTR [rdi+rcx*4-0x78d20c1e]
  40c1ce:	add    eax,0x93eb20bb
  40c1d3:	loopne 0x40c163
  40c1d5:	fistp  QWORD PTR [rbp+rdi*8+0x7adf5c3e]
  40c1dc:	sysret 
  40c1de:	(bad)  
  40c1df:	mov    esp,0xf06f7d8b
  40c1e4:	sbb    ah,BYTE PTR [rax+0x37]
  40c1e7:	cmp    DWORD PTR [rcx],0xffffffbc
  40c1ea:	inc    DWORD PTR [rcx]
  40c1ec:	imul   edi,edi,0x54
  40c1ef:	or     DWORD PTR [rsi+rdi*1+0x48],edx
  40c1f3:	cld    
  40c1f4:	add    BYTE PTR [rax],al
  40c1f6:	add    BYTE PTR [rax],al
  40c1f8:	rex.WB
  40c1f9:	rex.RB
  40c1fa:	rex.WRX
  40c1fb:	rex.R scas al,BYTE PTR es:[rdi]
  40c1fd:	rex.X (bad) 
  40c1ff:	(bad)  
  40c200:	or     eax,DWORD PTR [rax+0x0]
  40c203:	add    DWORD PTR [rax],eax
  40c205:	add    BYTE PTR [rax],al
  40c207:	(bad)  
  40c208:	(bad)  
  40c209:	(bad)  
  40c20a:	inc    DWORD PTR [rcx]
  40c20c:	add    BYTE PTR [rax],al
  40c20e:	add    BYTE PTR [rax],al
  40c210:	add    BYTE PTR [rax],al
  40c212:	add    BYTE PTR [rdx+rax*1],cl
  40c215:	add    BYTE PTR [rax],al
  40c217:	add    BYTE PTR [rcx+0x53],dl
  40c21a:	jns    0x40c28f
  40c21c:	je     0x40c283
  40c21e:	ins    DWORD PTR es:[rdi],dx
  40c21f:	cs rex.R jb 0x40c284
  40c223:	ja     0x40c28e
  40c225:	outs   dx,BYTE PTR ds:[rsi]
  40c226:	addr32 sub al,0x20
  40c229:	push   rsi
  40c22a:	gs jb  0x40c2a0
  40c22d:	imul   ebp,DWORD PTR [rdi+0x6e],0x302e323d
  40c234:	xor    BYTE PTR cs:[rsi],ch
  40c237:	xor    BYTE PTR [rax+riz*1],ch
  40c23a:	rex.XB jne 0x40c2a9
  40c23d:	je     0x40c2b4
  40c23f:	jb     0x40c2a6
  40c241:	cmp    eax,0x7475656e
  40c246:	jb     0x40c2a9
  40c248:	ins    BYTE PTR es:[rdi],dx
  40c249:	sub    al,0x20
  40c24b:	push   rax
  40c24c:	jne    0x40c2b0
  40c24e:	ins    BYTE PTR es:[rdi],dx
  40c24f:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  40c256:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  40c25a:	(bad)  
  40c25b:	xor    BYTE PTR [rbx],dh
  40c25d:	xor    ax,0x3766
  40c261:	xor    WORD PTR [rcx],si
  40c264:	fs xor eax,0x61336130
  40c26a:	add    eax,0x1
  40c26f:	adc    eax,0x74737953
  40c274:	gs ins DWORD PTR es:[rdi],dx
  40c276:	cs rex.R jb 0x40c2db
  40c27a:	ja     0x40c2e5
  40c27c:	outs   dx,BYTE PTR ds:[rsi]
  40c27d:	imul   esi,DWORD PTR cs:[ebp+r13d*2+0x61],0x170
  40c288:	add    BYTE PTR [rsp+rax*2],al
  40c28b:	(bad)  
  40c28c:	je     0x40c2ef
  40c28e:	(bad)  
  40c28f:	add    al,BYTE PTR [rdx]
  40c291:	add    BYTE PTR [rax],al
  40c293:	add    BYTE PTR [rcx],cl
  40c295:	add    eax,DWORD PTR [rax]
  40c297:	add    BYTE PTR [rax],al
  40c299:	lsl    eax,WORD PTR [rax]
  40c29c:	add    BYTE PTR [rax],al
  40c29e:	test   BYTE PTR [rax+rax*1],0x0
  40c2a2:	add    cl,BYTE PTR [rcx+0xd474e50]
  40c2a8:	or     bl,BYTE PTR [rdx]
  40c2aa:	or     al,BYTE PTR [rax]
  40c2ac:	add    BYTE PTR [rax],al
  40c2ae:	or     eax,0x52444849
  40c2b3:	add    BYTE PTR [rax],al
  40c2b5:	add    BYTE PTR [rax],ah
  40c2b7:	add    BYTE PTR [rax],al
  40c2b9:	add    BYTE PTR [rax],ah
  40c2bb:	or     BYTE PTR [rsi],al
  40c2bd:	add    BYTE PTR [rax],al
  40c2bf:	add    BYTE PTR [rbx+0x7a],dh
  40c2c2:	jp     0x40c2b8
  40c2c4:	add    BYTE PTR [rax],al
  40c2c6:	add    BYTE PTR [rcx],al
  40c2c8:	jae    0x40c31c
  40c2ca:	rex.RXB
  40c2cb:	rex.X add BYTE PTR [rsi+0xe91cce],bpl
  40c2d2:	add    BYTE PTR [rax],al
  40c2d4:	add    al,0x67
  40c2d6:	rex.B
  40c2d7:	rex.WRB
  40c2d8:	add    BYTE PTR [r8],al
  40c2db:	mov    cl,0x8f
  40c2dd:	or     edi,esp
  40c2df:	(bad)  
  40c2e0:	add    eax,0x20000000
  40c2e5:	movsxd ecx,DWORD PTR [rax+0x52]
  40c2e8:	rex.WRB add BYTE PTR [r8],r8b
  40c2eb:	jp     0x40c313
  40c2ed:	add    BYTE PTR [rax],al
  40c2ef:	add    BYTE PTR [rax+rax*1+0xfa00],0x0
  40c2f7:	sub    al,0x0
  40c2fa:	add    BYTE PTR [rbp+0x30],dh
  40c2fd:	add    BYTE PTR [rax],al
  40c2ff:	(bad)  
  40c300:	(bad)  
  40c301:	add    BYTE PTR [rax],al
  40c303:	cmp    bl,BYTE PTR [rax+0x70170000]
  40c309:	pushf  
  40c30a:	mov    edx,0x3c51
  40c30f:	add    al,0x74
  40c311:	rex.WB
  40c312:	rex.R
  40c313:	push   r12
  40c315:	pop    rax
  40c316:	rex.RXB popf 
  40c318:	push   rsi
  40c319:	pop    rbx
  40c31a:	imul   edx,DWORD PTR [rip+0xfffffffffe3e1457],0xb        # 0xfffffffffe7ed778
  40c321:	(bad)  
  40c322:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40c323:	movabs al,ds:0x60f83e80f62d0790
  40c32c:	mov    esp,0x86f15521
  40c331:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40c332:	test   al,0xf8
  40c334:	loopne 0x40c3a3
  40c336:	add    al,BYTE PTR [rsi+0x49]
  40c339:	rex.WX xor al,0x48
  40c33c:	and    al,0xf1
  40c33e:	push   rdx
  40c33f:	pop    rbx
  40c340:	prefetch BYTE PTR [rdx+0x35]
  40c344:	sbb    bl,BYTE PTR [rbp-0x3eb659f8]
  40c34a:	sub    edx,DWORD PTR [rcx+0x6ad50a52]
  40c350:	in     eax,dx
  40c351:	push   rcx
  40c352:	rex.B (bad) 
  40c354:	cmp    ah,BYTE PTR [rsi]
  40c356:	xor    eax,0xd8c1698a
  40c35b:	rex.X xchg eax,eax
  40c35d:	enter  0xd0b4,0x4
  40c361:	add    al,0xb1
  40c363:	push   rdx
  40c364:	mov    esi,0xacf7b5ae
  40c369:	cdq    
  40c36a:	xor    eax,0x1e27333b
  40c36f:	(bad)  
  40c370:	(bad)  
  40c371:	mov    bl,0x67
  40c373:	mul    ch
  40c375:	sti    
  40c376:	(bad)  
  40c377:	mov    bh,0x2e
  40c379:	xor    edx,ebx
  40c37b:	add    BYTE PTR [rdx+rbp*4],dl
  40c37e:	mov    ecx,0x47d7761e
  40c383:	sbb    ecx,DWORD PTR [rdx-0x5e9e124c]
  40c389:	call   0xfffffffff6f39787
  40c38e:	(bad)  
  40c38f:	jmp    0x40c37d
  40c391:	ins    BYTE PTR es:[rdi],dx
  40c392:	fidivr WORD PTR [rdx-0x3567ecfe]
  40c398:	add    bl,bh
  40c39a:	sbb    eax,0x3f
  40c39d:	rex.WRXB out dx,eax
  40c39f:	or     DWORD PTR [rbp-0x5c9fdfa2],0x39
  40c3a6:	mov    ebp,0xeb275ddf
  40c3ab:	in     eax,0xbd
  40c3ad:	mov    edx,DWORD PTR [rbp-0x15fa61f5]
  40c3b3:	(bad)  
  40c3b4:	imul   edx,DWORD PTR [rdx],0x7e
  40c3b7:	rex.R mov dl,0xff
  40c3ba:	repnz push rdi
  40c3bc:	xor    DWORD PTR [rcx],edi
  40c3be:	sahf   
  40c3bf:	addr32 xchg ebx,eax
  40c3c1:	jge    0x40c43f
  40c3c3:	xlat   BYTE PTR ds:[rbx]
  40c3c4:	out    0x1a,eax
  40c3c6:	cmc    
  40c3c7:	pop    rbp
  40c3c8:	rex.RX xchg ebx,eax
  40c3ca:	cmp    al,0x45
  40c3cc:	xor    BYTE PTR [rcx+0x2cb4a7b1],0x88
  40c3d3:	cmp    eax,0x4483818f
  40c3d8:	sbb    esi,ebx
  40c3da:	addr32 rex.W enter 0x513b,0x28
  40c3e0:	mov    edx,0x24c991e7
  40c3e5:	(bad)  
  40c3e6:	and    al,0x26
  40c3e8:	rex add DWORD PTR [rbp+0x49],ecx
  40c3ec:	outs   dx,BYTE PTR ds:[rsi]
  40c3ed:	(bad)  
  40c3ee:	rex.WR cmp BYTE PTR [rbp-0x41],0x48
  40c3f3:	rcl    dh,0xb4
  40c3f6:	ja     0x40c401
  40c3f8:	adc    DWORD PTR [rdx],ecx
  40c3fa:	xchg   ecx,eax
  40c3fb:	and    ah,BYTE PTR [rbx]
  40c3fd:	movsxd esi,DWORD PTR [rbx+0x27]
  40c400:	ret    0x2199
  40c403:	loopne 0x40c40e
  40c405:	sub    eax,0x8349bb9b
  40c40a:	cli    
  40c40b:	(bad)  
  40c40c:	add    DWORD PTR [rdi+0x66],0xb2556808
  40c413:	(bad)  
  40c414:	sub    dh,BYTE PTR [rdi+0x72]
  40c417:	or     DWORD PTR [rax+0x58],esi
  40c41a:	in     al,0x30
  40c41c:	sbb    eax,0x83599167
  40c421:	rex.WRX and r12b,BYTE PTR [rax-0x775ac9ee]
  40c428:	rex.WXB
  40c429:	rex.WX fimul WORD PTR cs:[rdx-0x4107efeb]
  40c431:	lea    ebp,[rbx+0x69e26f89]
  40c437:	add    r14b,BYTE PTR [r9+0xe]
  40c43b:	rex.R (bad) 
  40c43d:	mov    bl,BYTE PTR [rsi+0x7bec7393]
  40c443:	leave  
  40c444:	mov    ebp,0x8c498114
  40c449:	sbb    eax,0x5380f26f
  40c44e:	and    DWORD PTR [rax-0x3ed97f60],ebp
  40c454:	movsxd esi,DWORD PTR [rsi+0x4e02adc]
  40c45a:	in     al,0xec
  40c45c:	out    0x5c,eax
  40c45e:	loopne 0x40c41b
  40c460:	(bad)  
  40c461:	mov    esp,0x9322cc90
  40c466:	out    0x80,eax
  40c468:	add    bl,ch
  40c46a:	jo     0x40c4de
  40c46c:	mov    ecx,0x69101266
  40c471:	fadd   st(3),st
  40c473:	je     0x40c4c7
  40c475:	repnz cmp ax,0xa59f
  40c47a:	add    BYTE PTR [rax+0x5fb77132],0x88
  40c481:	neg    DWORD PTR [rcx+0x5f7407d]
  40c487:	pop    rbx
  40c488:	xlat   BYTE PTR ds:[rbx]
  40c489:	mov    dh,0x5c
  40c48b:	xchg   edx,eax
  40c48c:	cmp    dh,BYTE PTR [rdi+0x583e258d]
  40c492:	out    0xb8,al
  40c494:	adc    ah,BYTE PTR [rsp+rdx*1+0x3af3ed55]
  40c49b:	icebp  
  40c49c:	xchg   esi,eax
  40c49d:	iret   
  40c49e:	repz mov al,BYTE PTR [rip+0xe7662b2]        # 0xeb72757
  40c4a5:	mov    eax,0x4837894d
  40c4aa:	add    esp,ecx
  40c4ac:	or     DWORD PTR [rax+rbp*1+0x74],0x52
  40c4b1:	jb     0x40c4cf
  40c4b3:	or     DWORD PTR [rax],edi
  40c4b5:	mov    BYTE PTR [rdx],dl
  40c4b7:	(bad)  
  40c4b8:	push   rsi
  40c4b9:	mov    gs,WORD PTR [rbp-0x2f]
  40c4bc:	loop   0x40c523
  40c4be:	add    cl,dl
  40c4c0:	shl    BYTE PTR [rsi+rbx*2-0x6b],0x4
  40c4c5:	mov    ah,0x84
  40c4c7:	js     0x40c504
  40c4c9:	(bad)  
  40c4ca:	rcr    DWORD PTR ss:[rcx],cl
  40c4cd:	mov    ch,0xb4
  40c4cf:	xor    al,0xf6
  40c4d1:	mov    WORD PTR [rdx],es
  40c4d3:	ss mov cl,0xc
  40c4d6:	sub    BYTE PTR [rip+0x440b6f5b],bh        # 0x444c3437
  40c4dc:	xchg   edx,eax
  40c4dd:	sub    DWORD PTR [rbp+0x15],0x37404d55
  40c4e4:	and    DWORD PTR [rbx],eax
  40c4e6:	sbb    al,0x91
  40c4e8:	adc    BYTE PTR [rdi+0x65],cl
  40c4eb:	pop    rsi
  40c4ec:	add    ebx,DWORD PTR [rdx-0x30]
  40c4ef:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40c4f0:	ins    BYTE PTR es:[rdi],dx
  40c4f1:	sub    eax,0xeaaef278
  40c4f6:	adc    BYTE PTR [rax+0x2b25a60a],cl
  40c4fc:	add    bh,BYTE PTR [rdx+0x6204c6c5]
  40c502:	rex.WRXB pop r13
  40c504:	add    ch,dl
  40c506:	jns    0x40c4b2
  40c508:	sbb    al,0xe8
  40c50a:	mov    eax,0xef6f4e12
  40c50f:	or     esi,edi
  40c511:	out    dx,eax
  40c512:	cmp    eax,0xc77508f3
  40c517:	rex.X sub al,0x69
  40c51a:	jge    0x40c4a5
  40c51c:	jns    0x40c4ab
  40c51e:	iret   
  40c51f:	icebp  
  40c520:	loope  0x40c4b0
  40c522:	add    DWORD PTR [rdi+rbp*2+0x27ed1efa],ebp
  40c529:	jnp    0x40c53b
  40c52b:	(bad)  
  40c52c:	jl     0x40c504
  40c52e:	mov    dh,0xdd
  40c530:	sub    BYTE PTR [rcx-0x7b],cl
  40c533:	adc    BYTE PTR [rbp+0x6ecee459],0x5e
  40c53a:	adc    eax,0xdaf02015
  40c53f:	neg    dh
  40c541:	lock vxorps ymm3,ymm3,YMMWORD PTR [rdi-0x5f]
  40c547:	out    dx,eax
  40c548:	cs (bad) 
  40c54a:	jmp    0x40c505
  40c54c:	add    esi,DWORD PTR [rdi+rdi*8+0x4]
  40c550:	je     0x40c530
  40c552:	add    BYTE PTR [rdx],bl
  40c554:	(bad)  
  40c555:	ffreep st(6)
  40c557:	rex.RXB imul r9d,DWORD PTR [r10+0x28],0xffffffb5
  40c55c:	xor    al,0x63
  40c55e:	jae    0x40c5a7
  40c560:	add    edi,DWORD PTR [rsi+rcx*4]
  40c563:	jns    0x40c56a
  40c565:	sub    edx,DWORD PTR [rdx-0x6e]
  40c568:	repnz mov esp,0x2d98f3be
  40c56e:	(bad)  
  40c56f:	mov    BYTE PTR [rax+rdi*2],cl
  40c572:	pop    rdi
  40c573:	js     0x40c560
  40c575:	(bad)  
  40c576:	ud0    eax,esi
  40c579:	rcr    BYTE PTR [rdi+0x398d7d5d],0x3b
  40c580:	(bad)  
  40c581:	push   rcx
  40c582:	mov    bl,0xe9
  40c584:	es out 0x6e,al
  40c587:	mov    ebx,0xbfcda583
  40c58c:	(bad)  
  40c58d:	jmp    0x72bce750
  40c592:	jo     0x40c5a4
  40c594:	xor    edx,DWORD PTR [rsi]
  40c596:	jge    0x40c519
  40c598:	fldpi  
  40c59a:	psraw  mm6,mm2
  40c59d:	std    
  40c59e:	jmp    0x40c5c8
  40c5a0:	(bad)  
  40c5a1:	sub    edx,DWORD PTR [rdi+0x65]
  40c5a4:	(bad)  
  40c5a5:	test   eax,0x52a52457
  40c5aa:	add    al,0x8
  40c5ac:	mov    esp,0x442ba1a9
  40c5b1:	(bad)  
  40c5b2:	jns    0x40c62f
  40c5b4:	out    dx,al
  40c5b5:	shl    BYTE PTR ss:[rsi-0xf],1
  40c5b9:	xor    eax,0xa3883ec9
  40c5be:	fst    QWORD PTR [rdi]
  40c5c0:	ins    DWORD PTR es:[rdi],dx
  40c5c1:	fld    QWORD PTR [rdi+0x15]
  40c5c4:	lock in al,0xf7
  40c5c7:	(bad)  
  40c5c8:	call   0xffffffffeb04b5b6
  40c5cd:	add    edi,DWORD PTR [rdi+0x4e8ad661]
  40c5d3:	lods   al,BYTE PTR ds:[rsi]
  40c5d4:	fcmovu st,st(5)
  40c5d6:	test   ebx,eax
  40c5d8:	fistp  WORD PTR [rsi-0x81a307a]
  40c5de:	(bad)  
  40c5df:	(bad)  
  40c5e0:	loopne 0x40c628
  40c5e2:	adc    DWORD PTR [rbp-0x80],ecx
  40c5e5:	shr    BYTE PTR [rbx+0x1b],0x4e
  40c5e9:	xchg   DWORD PTR [rdi-0x190944e4],edi
  40c5ef:	out    dx,eax
  40c5f0:	(bad)  
  40c5f1:	jmp    0x40c633
  40c5f3:	retf   
  40c5f4:	(bad)  
  40c5f5:	(bad)  
  40c5f6:	repz pop rsi
  40c5f8:	call   QWORD PTR [rdx+0x5c]
  40c5fb:	sti    
  40c5fc:	rex.X and sil,bpl
  40c5ff:	(bad)  
  40c600:	add    al,0xb6
  40c602:	jmp    0xffffffffb796d17f
  40c607:	shl    BYTE PTR ds:[rdx-0x7b777106],0xf9
  40c60f:	shl    ah,1
  40c611:	pop    rsi
  40c612:	add    ch,dh
  40c614:	jno    0x40c61e
  40c616:	xor    al,0x1
  40c618:	add    ch,BYTE PTR [rdi-0x26]
  40c61b:	jns    0x40c687
  40c61d:	sbb    al,0xa5
  40c61f:	out    dx,eax
  40c620:	lock loop 0x40c673
  40c623:	(bad)  
  40c624:	xor    BYTE PTR [rdi-0x2415ee02],dh
  40c62a:	cmp    ch,BYTE PTR [rax+rdi*4]
  40c62d:	je     0x40c5e5
  40c62f:	add    rbp,rdi
  40c632:	ins    DWORD PTR es:[rdi],dx
  40c633:	(bad)  
  40c634:	rex.WRXB pop r8
  40c636:	inc    ah
  40c638:	repz jl 0x40c63d
  40c63b:	movabs ds:0x810e028c5736a3a3,eax
  40c644:	mov    edx,0xf1f03852
  40c649:	rcl    DWORD PTR [rax],0xfb
  40c64c:	add    BYTE PTR cs:[rbx-0x42],bh
  40c650:	(bad)  
  40c651:	push   0x36
  40c653:	(bad)  
  40c654:	push   0x1634a5da
  40c659:	es ret 0x62c0
  40c65d:	rcl    BYTE PTR [rcx],cl
  40c65f:	pop    rbp
  40c660:	add    al,BYTE PTR [rsi]
  40c662:	cmp    BYTE PTR [rbx+riz*8],0x6b
  40c666:	(bad)  
  40c668:	ret    0x412a
  40c66b:	(bad)  
  40c66c:	jns    0x40c6aa
  40c66e:	cmp    al,0x3c
  40c670:	lods   al,BYTE PTR ds:[rsi]
  40c671:	xchg   edx,eax
  40c672:	(bad)  
  40c673:	and    DWORD PTR [rax-0x13b43f08],esi
  40c679:	cmp    cl,BYTE PTR [rdi]
  40c67b:	ins    BYTE PTR es:[rdi],dx
  40c67c:	(bad)  
  40c67d:	or     ebp,DWORD PTR [rcx+rdi*1-0x7]
  40c681:	(bad)  
  40c682:	data16 scas al,BYTE PTR es:[rdi]
  40c684:	and    eax,0xd98fea26
  40c689:	adc    BYTE PTR [rcx+0x7c808583],ah
  40c68f:	ins    BYTE PTR es:[rdi],dx
  40c690:	mov    dl,0x14
  40c692:	loopne 0x40c70b
  40c694:	sub    DWORD PTR [rdx],eax
  40c696:	adc    DWORD PTR [rcx+0x2220820],ebx
  40c69c:	mov    dh,0x2
  40c69e:	rex.WR or al,r9b
  40c6a1:	jae    0x40c64d
  40c6a3:	repz xor DWORD PTR [rbp+rbp*8+0x2],ebp
  40c6a8:	ss lahf 
  40c6aa:	js     0x40c637
  40c6ac:	mov    edx,0xdd615f2f
  40c6b1:	sar    DWORD PTR [rdi+0x4fedb2b0],1
  40c6b7:	xchg   ebx,eax
  40c6b8:	in     eax,0x6c
  40c6ba:	sub    DWORD PTR [rdx],esp
  40c6bc:	(bad)  
  40c6bd:	test   ebx,0x283a5cb4
  40c6c3:	or     DWORD PTR [rcx-0x13a0a86b],eax
  40c6c9:	mov    ecx,0x94902598
  40c6ce:	fs pushf 
  40c6d0:	add    esi,ebx
  40c6d2:	sbb    bh,bh
  40c6d4:	rol    BYTE PTR [rsi+0x1cd638d2],0x19
  40c6db:	ret    
  40c6dc:	mov    dl,dh
  40c6de:	adc    DWORD PTR [rbx+rbp*2],ebp
  40c6e1:	(bad)  
  40c6e2:	rex.X in eax,dx
  40c6e4:	sahf   
  40c6e5:	(bad)  
  40c6e6:	xchg   ebx,eax
  40c6e7:	shl    BYTE PTR [rip+0xffffffffc6266e11],0x52        # 0xffffffffc66734ff
  40c6ee:	cmp    DWORD PTR [rax-0x343698fa],edx
  40c6f4:	in     eax,0xb2
  40c6f6:	xchg   ecx,eax
  40c6f7:	pop    rsi
  40c6f8:	(bad)  
  40c6f9:	mov    dh,0x17
  40c6fb:	sub    BYTE PTR [rip+0xffffffff8d9ad0e4],al        # 0xffffffff8ddb97e5
  40c701:	(bad)  
  40c702:	mov    cl,0xe4
  40c704:	rol    DWORD PTR [rcx],cl
  40c706:	sub    al,0xdc
  40c708:	jne    0x40c719
  40c70a:	or     esi,DWORD PTR [rsi-0x24]
  40c70d:	test   al,0x8
  40c70f:	sahf   
  40c710:	and    ah,BYTE PTR [rdx-0x131877f8]
  40c716:	xor    DWORD PTR [rbx-0x35],edi
  40c719:	loopne 0x40c707
  40c71b:	gs xchg ecx,eax
  40c71d:	mov    dh,al
  40c71f:	iret   
  40c720:	jns    0x40c726
  40c722:	clc    
  40c723:	ror    BYTE PTR [rdi],1
  40c725:	xchg   esi,eax
  40c726:	ja     0x40c78a
  40c728:	(bad)  
  40c729:	xchg   esi,eax
  40c72a:	imul   ebp,edi,0xc
  40c72d:	(bad)  
  40c72e:	jnp    0x40c708
  40c730:	and    ebx,DWORD PTR [rbx]
  40c732:	add    bl,BYTE PTR [rbx-0x29]
  40c735:	and    esp,DWORD PTR [rbx]
  40c737:	and    eax,DWORD PTR [rsi]
  40c739:	pop    rax
  40c73a:	shr    BYTE PTR [rbp-0x79],0xe4
  40c73e:	imul   BYTE PTR [rdi+riz*8+0x6d]
  40c742:	or     BYTE PTR [rdx],dh
  40c744:	adc    al,0x10
  40c746:	scas   eax,DWORD PTR es:[rdi]
  40c747:	fcomp  QWORD PTR [rax-0x11f70045]
  40c74d:	mov    bl,0x26
  40c74f:	and    ch,cl
  40c751:	and    eax,0xd82dd701
  40c756:	(bad)  
  40c757:	(bad)  
  40c758:	loopne 0x40c7c8
  40c75a:	sbb    DWORD PTR [rsi+0x5],ecx
  40c75d:	xchg   esp,eax
  40c75e:	(bad)  
  40c75f:	(bad)  
  40c760:	add    al,0xdc
  40c762:	(bad)  
  40c763:	xchg   ebx,eax
  40c764:	jl     0x40c781
  40c766:	adc    dl,BYTE PTR [rax+0x1]
  40c769:	scas   eax,DWORD PTR es:[rdi]
  40c76a:	test   al,0x40
  40c76c:	mov    ch,0x44
  40c76e:	in     al,0x3
  40c770:	adc    ecx,DWORD PTR [rbx-0x13]
  40c773:	jp     0x40c79e
  40c775:	jb     0x40c7de
  40c777:	fstp   st(5)
  40c779:	outs   dx,DWORD PTR ds:[rsi]
  40c77a:	mov    r13b,0xe0
  40c77d:	xchg   edx,eax
  40c77e:	add    esp,DWORD PTR [rsi]
  40c780:	rcr    esi,1
  40c782:	sar    esi,cl
  40c784:	(bad)  
  40c785:	cmp    ch,BYTE PTR [rbx+rsi*8]
  40c788:	mov    cl,0x34
  40c78a:	mov    cl,0x80
  40c78c:	mov    bl,0x0
  40c78e:	add    BYTE PTR [rax],al
  40c790:	add    BYTE PTR [rcx+0x45],cl
  40c793:	rex.WRX
  40c794:	rex.R scas al,BYTE PTR es:[rdi]
  40c796:	rex.X (bad) 
  40c798:	(bad)  
  40c799:	or     eax,DWORD PTR [rax]
  40c79b:	add    BYTE PTR [rdx+0x53],al
  40c79e:	rex.WX
  40c79f:	rex.X add DWORD PTR [rax],eax
  40c7a2:	add    DWORD PTR [rax],eax
  40c7a4:	add    BYTE PTR [rax],al
  40c7a6:	add    BYTE PTR [rax],al
  40c7a8:	or     al,0x0
  40c7aa:	add    BYTE PTR [rax],al
  40c7ac:	jbe    0x40c7e0
  40c7ae:	xor    BYTE PTR cs:[rsi],ch
  40c7b1:	xor    eax,0x37323730
  40c7b6:	add    BYTE PTR [rax],al
  40c7b8:	add    BYTE PTR [rax],al
  40c7ba:	add    eax,0x6c00
  40c7bf:	add    BYTE PTR [rsp+rcx*1+0x7e230000],ah
  40c7c6:	add    BYTE PTR [rax],al
  40c7c8:	adc    BYTE PTR [rip+0x12980000],cl        # 0x12d8c7ce
  40c7ce:	add    BYTE PTR [rax],al
  40c7d0:	and    edx,DWORD PTR [rbx+0x74]
  40c7d3:	jb     0x40c83e
  40c7d5:	outs   dx,BYTE PTR ds:[rsi]
  40c7d6:	addr32 jae 0x40c7d9
  40c7d9:	add    BYTE PTR [rax],al
  40c7db:	add    BYTE PTR [rax-0x53ffffe1],ch
  40c7e1:	add    al,0x0
  40c7e3:	add    BYTE PTR [rbx],ah
  40c7e5:	push   rbp
  40c7e6:	push   rbx
  40c7e7:	add    BYTE PTR [rsp+0x0],dl
  40c7eb:	add    BYTE PTR [rax],dl
  40c7ed:	add    BYTE PTR [rax],al
  40c7ef:	add    BYTE PTR [rbx],ah
  40c7f1:	rex.RXB push r13
  40c7f3:	rex.WB
  40c7f4:	add    BYTE PTR [rax],r8b
  40c7f7:	add    BYTE PTR [rsp+0x0],ah
  40c7fb:	add    al,dl
  40c7fd:	(bad)  
  40c7fe:	add    BYTE PTR [rax],al
  40c800:	and    eax,DWORD PTR [rdx+0x6c]
  40c803:	outs   dx,DWORD PTR ds:[rsi]
  40c804:	(bad)  
  40c805:	add    BYTE PTR [rax],al
  40c807:	add    BYTE PTR [rax],al
  40c809:	add    BYTE PTR [rax],al
  40c80b:	add    BYTE PTR [rdx],al
  40c80d:	add    BYTE PTR [rax],al
  40c80f:	add    DWORD PTR [rdi+0x1d],edx
  40c812:	movabs ds:0x1fa000000030909,al
  40c81b:	xor    eax,DWORD PTR [rax]
  40c81d:	(bad)  
  40c81e:	add    BYTE PTR [rax],al
  40c820:	add    DWORD PTR [rax],eax
  40c822:	add    BYTE PTR [rax],al
  40c824:	pop    rax
  40c825:	add    BYTE PTR [rax],al
  40c827:	add    BYTE PTR [rax],cl
  40c829:	add    BYTE PTR [rax],al
  40c82b:	add    BYTE PTR [rip+0x2d000000],ch        # 0x2d40c831
  40c831:	add    BYTE PTR [rax],al
  40c833:	add    BYTE PTR [rdx],bl
  40c835:	add    BYTE PTR [rax],al
  40c837:	add    BYTE PTR [rdx+0x0],bh
  40c83a:	add    BYTE PTR [rax],al
  40c83c:	adc    eax,0x16000000
  40c841:	add    BYTE PTR [rax],al
  40c843:	add    BYTE PTR [rsi],al
  40c845:	add    BYTE PTR [rax],al
  40c847:	add    BYTE PTR [rsi],al
  40c849:	add    BYTE PTR [rax],al
  40c84b:	add    BYTE PTR [rsi],cl
  40c84d:	add    BYTE PTR [rax],al
  40c84f:	add    BYTE PTR [rcx],dl
  40c851:	add    BYTE PTR [rax],al
  40c853:	add    BYTE PTR [rbx],al
  40c855:	add    BYTE PTR [rax],al
  40c857:	add    BYTE PTR [rcx],al
  40c859:	add    BYTE PTR [rax],al
  40c85b:	add    BYTE PTR [rdi],al
  40c85d:	add    BYTE PTR [rax],al
  40c85f:	add    BYTE PTR [rax+rax*1],al
  40c862:	add    BYTE PTR [rax],al
  40c864:	add    DWORD PTR [rax],eax
  40c866:	add    BYTE PTR [rax],al
  40c868:	add    BYTE PTR [rax],al
  40c86a:	or     al,BYTE PTR [rax]
  40c86c:	add    DWORD PTR [rax],eax
  40c86e:	add    BYTE PTR [rax],al
  40c870:	add    BYTE PTR [rax],al
  40c872:	(bad)  
  40c873:	add    BYTE PTR [rsi+0xa009700],bl
  40c879:	add    BYTE PTR [rdx+0xa00a500],bh
  40c87f:	add    BYTE PTR [rdi+0x600a500],bh
  40c885:	add    dh,ah
  40c887:	add    cl,dl
  40c889:	add    BYTE PTR [rsi],al
  40c88b:	add    ch,bl
  40c88d:	add    esp,ecx
  40c88f:	add    DWORD PTR [rsi],ecx
  40c891:	add    BYTE PTR [rbx+0x6036003],cl
  40c897:	add    bl,dl
  40c899:	add    edi,DWORD PTR [rax+0x24001203]
  40c89f:	add    al,0xfe
  40c8a1:	add    edx,DWORD PTR [rdx]
  40c8a3:	add    BYTE PTR [rsp+rax*1+0xa03fe],ah
  40c8aa:	in     al,0x4
  40c8ac:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40c8ad:	add    BYTE PTR [rdx],cl
  40c8af:	add    cl,dh
  40c8b1:	add    al,0xa5
  40c8b3:	add    BYTE PTR [rsi],dl
  40c8b5:	add    BYTE PTR [rbx],ah
  40c8b7:	add    eax,0xa050d
  40c8bc:	push   rbp
  40c8bd:	add    eax,0xa00a5
  40c8c2:	nop
  40c8c3:	add    eax,0x1a00a5
  40c8c8:	ss (bad) 
  40c8ca:	(bad)  
  40c8cb:	(bad)  
  40c8cc:	or     al,BYTE PTR [rax]
  40c8ce:	pop    rbx
  40c8cf:	(bad)  
  40c8d0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40c8d1:	add    BYTE PTR [rdx],cl
  40c8d3:	add    BYTE PTR [rsi+0x6],bh
  40c8d6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40c8d7:	add    BYTE PTR [rdx],cl
  40c8d9:	add    BYTE PTR [rsi+0xa00a506],bl
  40c8df:	add    BYTE PTR [rsi+rax*1+0x1e00a5],bh
  40c8e6:	mov    al,BYTE PTR [rdi]
  40c8e8:	jnp    0x40c8f1
  40c8ea:	(bad)  
  40c8eb:	add    BYTE PTR [rsi+0x8],dh
  40c8ee:	push   rdi
  40c8ef:	or     BYTE PTR [rsi],al
  40c8f1:	add    BYTE PTR [rax+rcx*1+0x60857],al
  40c8f8:	stos   BYTE PTR es:[rdi],al
  40c8f9:	or     BYTE PTR [rax-0x3cfff9f8],bl
  40c8ff:	or     BYTE PTR [rax-0x1dfff9f8],bl
  40c905:	or     BYTE PTR [rax-0xfff9f8],bl
  40c90b:	or     BYTE PTR [rax+0x16000608],bl
  40c911:	or     DWORD PTR [rax+0x3c000608],ebx
  40c917:	or     DWORD PTR [rax+0x59000608],ebx
  40c91d:	or     DWORD PTR [rax+0x72000608],ebx
  40c923:	or     DWORD PTR [rax-0x72fff9f8],ebx
  40c929:	or     DWORD PTR [rax-0x57fff9f8],ebx
  40c92f:	or     DWORD PTR [rax-0x3efff9f8],ebx
  40c935:	or     DWORD PTR [rax-0x12fff9f8],ebx
  40c93b:	or     edx,ebx
  40c93d:	or     DWORD PTR [rbx+0xa0100],ecx
  40c943:	add    BYTE PTR [rsi],al
  40c945:	add    BYTE PTR [rax],dh
  40c947:	or     dl,BYTE PTR [rax]
  40c949:	or     al,BYTE PTR [rsi]
  40c94b:	add    BYTE PTR [rax+0xa],dl
  40c94e:	adc    BYTE PTR [rdx],cl
  40c950:	(bad)  
  40c951:	add    BYTE PTR [rdi+0xa],dh
  40c954:	adc    BYTE PTR [rdx],cl
  40c956:	(bad)  
  40c957:	add    ah,al
  40c959:	or     dl,BYTE PTR [rdi-0x34fffa00]
  40c95f:	or     dl,BYTE PTR [rdi-0x16fffa00]
  40c965:	or     dl,BYTE PTR [rdi-0x11fffa00]
  40c96b:	or     dl,BYTE PTR [rdi+0x1f000600]
  40c971:	or     ebx,DWORD PTR [rax+0x31000608]
  40c977:	or     ebx,DWORD PTR [rax+0x47000608]
  40c97d:	or     edi,DWORD PTR [rax+0x5e000a03]
  40c983:	or     esp,DWORD PTR [rbp+0x6600bb00]
  40c989:	or     eax,DWORD PTR [rax]
  40c98b:	add    BYTE PTR [rdx],cl
  40c98d:	add    BYTE PTR [rdi+0x600a50b],dl
  40c993:	add    BYTE PTR [rdx+0x1200970b],bh
  40c999:	add    dh,bl
  40c99b:	or     edi,esi
  40c99d:	add    ecx,DWORD PTR [rdx]
  40c99f:	add    al,ch
  40c9a1:	or     esp,DWORD PTR [rbp+0x3d000600]
  40c9a7:	or     al,0x97
  40c9a9:	add    BYTE PTR [rsi],al
  40c9ab:	add    BYTE PTR [rbp+0xc],dl
  40c9ae:	xchg   edi,eax
  40c9af:	add    BYTE PTR [rdx],dl
  40c9b1:	add    BYTE PTR [rcx+0xc],bh
  40c9b4:	inc    BYTE PTR [rbx]
  40c9b6:	(bad)  
  40c9b7:	add    BYTE PTR [rsi+0x600970c],ch
  40c9bd:	add    dl,cl
  40c9bf:	or     al,0xc0
  40c9c1:	or     al,0x6
  40c9c3:	add    al,ch
  40c9c5:	or     al,0xc0
  40c9c7:	or     al,0xe
  40c9c9:	add    ah,dh
  40c9cb:	or     al,0x60
  40c9cd:	add    eax,DWORD PTR [rsi]
  40c9cf:	add    BYTE PTR [rcx],ah
  40c9d1:	or     eax,0x1f0d15
  40c9d6:	push   rdx
  40c9d7:	or     eax,0x60000
  40c9dc:	or     BYTE PTR [rip+0x160097],0x8c        # 0x56ca7a
  40c9e3:	or     eax,0x1609da
  40c9e8:	movabs ds:0xd0dd3001609da0d,eax
  40c9f1:	add    eax,0xe05000a
  40c9f6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40c9f7:	add    BYTE PTR [rdx],cl
  40c9f9:	add    BYTE PTR [rax],dl
  40c9fb:	(bad)  
  40c9fc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40c9fd:	add    BYTE PTR [rdx],cl
  40c9ff:	add    BYTE PTR [rip+0x1600a50e],bl        # 0x16416f13
  40ca05:	add    BYTE PTR [rbx],bh
  40ca07:	(bad)  
  40ca08:	or     eax,0x71001e05
  40ca0d:	(bad)  
  40ca0e:	jnp    0x40ca17
  40ca10:	(bad)  
  40ca11:	add    BYTE PTR [rsi+0xe],bh
  40ca14:	jnp    0x40ca1d
  40ca16:	or     al,BYTE PTR [rax]
  40ca18:	stos   DWORD PTR es:[rdi],eax
  40ca19:	(bad)  
  40ca1a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40ca1b:	add    BYTE PTR [rdx],cl
  40ca1d:	add    BYTE PTR [rsi+rcx*1+0xa00a5],bh
  40ca24:	fmul   QWORD PTR [rsi]
  40ca26:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40ca27:	add    BYTE PTR [rdx],cl
  40ca29:	add    BYTE PTR [rbx],dl
  40ca2b:	shld   DWORD PTR [rax],eax,cl
  40ca2e:	or     al,BYTE PTR [rax]
  40ca30:	push   rdi
  40ca31:	shld   DWORD PTR [rax],eax,cl
  40ca34:	(bad)  
  40ca35:	add    BYTE PTR [rdi+rcx*1+0xa0097],al
  40ca3c:	pushf  
  40ca3d:	shld   DWORD PTR [rax],eax,cl
  40ca40:	or     al,BYTE PTR [rax]
  40ca42:	loope  0x40ca53
  40ca44:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40ca45:	add    BYTE PTR [rsi],bl
  40ca47:	add    BYTE PTR [rcx],al
  40ca49:	adc    BYTE PTR [rbx+0x7],bh
  40ca4c:	(bad)  
  40ca4d:	add    BYTE PTR [rcx],dl
  40ca4f:	adc    BYTE PTR [rip+0x1b001605],cl        # 0x1b40e05a
  40ca55:	adc    BYTE PTR [rip+0x38000a05],cl        # 0x3840d460
  40ca5b:	adc    BYTE PTR [rbp+0x61003f00],ah
  40ca61:	adc    BYTE PTR [rax],al
  40ca63:	add    BYTE PTR [rdx],cl
  40ca65:	add    BYTE PTR [rcx+0x1600a510],cl
  40ca6b:	add    BYTE PTR [rax],bl
  40ca6d:	adc    DWORD PTR [rax],eax
  40ca6f:	adc    DWORD PTR [rsi],eax
  40ca71:	add    BYTE PTR [rdi],ch
  40ca73:	adc    edx,ebx
  40ca75:	or     DWORD PTR [rsi],edx
  40ca77:	add    BYTE PTR [rsi+0x11],ah
  40ca7a:	or     eax,0x7f001605
  40ca7f:	adc    DWORD PTR [rip+0x5],ecx        # 0x40ca8a
  40ca85:	add    BYTE PTR [rcx],al
  40ca87:	add    BYTE PTR [rax],al
  40ca89:	add    BYTE PTR [rax],al
  40ca8b:	add    BYTE PTR [rcx],al
  40ca8d:	add    BYTE PTR [rcx],al
  40ca8f:	add    BYTE PTR [rax],al
  40ca91:	add    BYTE PTR [rax],dl
  40ca93:	add    BYTE PTR [rdi],dl
  40ca95:	add    BYTE PTR [rdx],bl
  40ca97:	add    BYTE PTR [rip+0x1000100],al        # 0x140cb9d
  40ca9d:	add    BYTE PTR [rdx],al
  40ca9f:	add    BYTE PTR [rax],dl
  40caa1:	add    BYTE PTR [rsi+0x0],al
  40caa4:	add    BYTE PTR [rax],al
  40caa6:	add    eax,0xb000100
  40caab:	add    BYTE PTR [rax+0x4b001001],al
  40cab1:	add    BYTE PTR [rax],al
  40cab3:	add    BYTE PTR [rip+0x11000a00],al        # 0x1140d4b9
  40cab9:	add    BYTE PTR [rcx],al
  40cabb:	add    BYTE PTR [rax],dl
  40cabd:	add    BYTE PTR [rdi+0x0],bl
  40cac0:	sbb    al,BYTE PTR [rax]
  40cac2:	or     DWORD PTR [rax],eax
  40cac4:	(bad)  
  40cac5:	add    BYTE PTR [rdx],dl
  40cac7:	add    BYTE PTR [rax+0x69001001],al
  40cacd:	add    BYTE PTR [rdx],bl
  40cacf:	add    BYTE PTR [rip+0x1e001f00],al        # 0x1e40e9d5
  40cad5:	add    BYTE PTR [rcx],al
  40cad7:	add    BYTE PTR [rax],dl
  40cad9:	add    BYTE PTR [rdx+0x0],dh
  40cadc:	sbb    al,BYTE PTR [rax]
  40cade:	or     eax,0x1f001f00
  40cae3:	add    BYTE PTR [rax],al
  40cae5:	add    BYTE PTR [rax],dl
  40cae7:	add    BYTE PTR [rax+rax*1+0x5001a],al
  40caee:	sub    al,0x0
  40caf0:	(bad)  
  40caf1:	add    BYTE PTR [rsi-0x80],dl
  40caf4:	push   rbx
  40caf5:	add    DWORD PTR [rbx],ebp
  40caf7:	add    BYTE PTR [rsi-0x80],dl
  40cafa:	xchg   ebx,eax
  40cafb:	add    DWORD PTR [rbx],ebp
  40cafd:	add    BYTE PTR [rsi-0x80],dl
  40cb00:	push   0x56002b01
  40cb05:	and    BYTE PTR [rdx+0x56002b01],0x80
  40cb0c:	mov    ch,0x1
  40cb0e:	sub    eax,DWORD PTR [rax]
  40cb10:	push   rsi
  40cb11:	add    dh,0x1
  40cb14:	sub    eax,DWORD PTR [rax]
  40cb16:	push   rsi
  40cb17:	cmp    BYTE PTR [rbp+0x1],0x2b
  40cb1b:	add    BYTE PTR [rcx],dl
  40cb1d:	add    ch,ch
  40cb1f:	add    DWORD PTR [rcx],ecx
  40cb21:	add    DWORD PTR [rcx],edx
  40cb23:	add    ch,bh
  40cb25:	add    DWORD PTR [rip+0x10805601],ecx        # 0x10c1212c
  40cb2b:	add    ch,BYTE PTR [rbx]
  40cb2d:	add    BYTE PTR [rsi-0x80],dl
  40cb30:	(bad)  
  40cb31:	add    ch,BYTE PTR [rax]
  40cb33:	add    DWORD PTR [rsi-0x80],edx
  40cb36:	sub    eax,DWORD PTR [rdx]
  40cb38:	sub    BYTE PTR [rcx],al
  40cb3a:	push   rsi
  40cb3b:	cmp    BYTE PTR [rax],0x2
  40cb3e:	sub    eax,DWORD PTR [rax]
  40cb40:	push   rsi
  40cb41:	or     BYTE PTR [rbp+0x2],0x2b
  40cb45:	add    BYTE PTR [rsi-0x80],dl
  40cb48:	pop    rdi
  40cb49:	add    ch,BYTE PTR [rbx]
  40cb4b:	add    BYTE PTR [rsi-0x80],dl
  40cb4e:	jns    0x40cb52
  40cb50:	sub    eax,DWORD PTR [rax]
  40cb52:	push   rsi
  40cb53:	or     BYTE PTR [rdi+0x56002b02],0x80
  40cb5a:	test   al,0x2
  40cb5c:	sub    eax,DWORD PTR [rax]
  40cb5e:	push   rsi
  40cb5f:	add    cl,0x2
  40cb62:	sub    eax,DWORD PTR [rax]
  40cb64:	push   rsi
  40cb65:	adc    ah,0x2
  40cb68:	out    dx,al
  40cb69:	add    DWORD PTR [rsi-0x80],edx
  40cb6c:	out    0x2,al
  40cb6e:	out    dx,al
  40cb6f:	add    DWORD PTR [rsi-0x80],edx
  40cb72:	add    al,BYTE PTR [rbx]
  40cb74:	sub    eax,DWORD PTR [rax]
  40cb76:	push   rcx
  40cb77:	or     BYTE PTR [rcx+0x3],0x2b
  40cb7b:	add    BYTE PTR [rcx],al
  40cb7d:	add    BYTE PTR [rax+0x1024203],ah
  40cb83:	add    BYTE PTR [rdi+0x1002b03],ah
  40cb89:	add    dl,bl
  40cb8b:	add    eax,DWORD PTR [rsi+0x2]
  40cb8e:	add    DWORD PTR [rax],eax
  40cb90:	test   BYTE PTR [rbx],0x4d
  40cb93:	add    al,BYTE PTR [rcx]
  40cb95:	add    BYTE PTR [rax],bh
  40cb97:	add    al,0x51
  40cb99:	add    al,BYTE PTR [rcx]
  40cb9b:	add    BYTE PTR [rsi],ch
  40cb9d:	add    eax,0x1026f
  40cba2:	pop    rbx
  40cba3:	add    eax,0x10278
  40cba8:	(bad)  
  40cba9:	add    eax,0x10286
  40cbae:	cs add eax,0x1026f
  40cbb4:	rex.WRB (bad) 
  40cbb6:	xchg   edi,eax
  40cbb7:	add    al,BYTE PTR [rcx]
  40cbb9:	add    BYTE PTR [rsi+rax*1-0x65],ch
  40cbbd:	add    al,BYTE PTR [rcx]
  40cbbf:	add    BYTE PTR [rcx+0x1029f06],cl
  40cbc5:	add    BYTE PTR [rax+0x102a306],ch
  40cbcb:	add    dl,al
  40cbcd:	(bad)  
  40cbce:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40cbcf:	add    al,BYTE PTR [rcx]
  40cbd1:	add    cl,bl
  40cbd3:	(bad)  
  40cbd4:	lahf   
  40cbd5:	add    al,BYTE PTR [rcx]
  40cbd7:	add    dl,ch
  40cbd9:	(bad)  
  40cbda:	lahf   
  40cbdb:	add    al,BYTE PTR [rcx]
  40cbdd:	add    BYTE PTR [rbx],al
  40cbdf:	(bad)  
  40cbe0:	movabs ds:0x102a70713000102,eax
  40cbe9:	add    BYTE PTR [rdi],ah
  40cbeb:	(bad)  
  40cbec:	movabs ds:0x1102a7073f000102,eax
  40cbf5:	add    BYTE PTR [rbx+0x7],cl
  40cbf8:	or     DWORD PTR [rcx],eax
  40cbfa:	adc    DWORD PTR [rax],eax
  40cbfc:	push   rdi
  40cbfd:	(bad)  
  40cbfe:	or     eax,0x20d001
  40cc03:	add    BYTE PTR [rax],al
  40cc05:	add    BYTE PTR [rax+rbx*1+0xa00cb],al
  40cc0c:	add    DWORD PTR [rax],eax
  40cc0e:	fsub   DWORD PTR [rax]
  40cc10:	add    BYTE PTR [rax],al
  40cc12:	add    BYTE PTR [rax],al
  40cc14:	xchg   esi,eax
  40cc15:	or     dl,dh
  40cc17:	add    BYTE PTR [rsi],cl
  40cc19:	add    BYTE PTR [rcx],al
  40cc1b:	add    bh,bl
  40cc1d:	and    BYTE PTR [rax],al
  40cc1f:	add    BYTE PTR [rax],al
  40cc21:	add    BYTE PTR [rsi+0x1300fe08],dl
  40cc27:	add    BYTE PTR [rcx],al
  40cc29:	add    bh,ah
  40cc2b:	and    BYTE PTR [rax],al
  40cc2d:	add    BYTE PTR [rax],al
  40cc2f:	add    BYTE PTR [rsi+0x19010a08],dl
  40cc35:	add    BYTE PTR [rdx],al
  40cc37:	add    bl,dh
  40cc39:	and    BYTE PTR [rax],al
  40cc3b:	add    BYTE PTR [rax],al
  40cc3d:	add    BYTE PTR [rsi+0x19011d08],dl
  40cc43:	add    BYTE PTR [rdx],al
  40cc45:	add    bh,bh
  40cc47:	and    BYTE PTR [rax],al
  40cc49:	add    BYTE PTR [rax],al
  40cc4b:	add    BYTE PTR [rsi+0x19013408],dl
  40cc51:	add    BYTE PTR [rdx],al
  40cc53:	add    BYTE PTR [rbx],cl
  40cc55:	and    DWORD PTR [rax],eax
  40cc57:	add    BYTE PTR [rax],al
  40cc59:	add    BYTE PTR [rsi+0x19014908],dl
  40cc5f:	add    BYTE PTR [rdx],al
  40cc61:	add    BYTE PTR [rdi],dl
  40cc63:	and    DWORD PTR [rax],eax
  40cc65:	add    BYTE PTR [rax],al
  40cc67:	add    BYTE PTR [rsi+0x1d015300],dl
  40cc6d:	add    BYTE PTR [rdx],al
  40cc6f:	add    BYTE PTR [rcx+riz*1],ah
  40cc72:	add    BYTE PTR [rax],al
  40cc74:	add    BYTE PTR [rax],al
  40cc76:	xchg   esi,eax
  40cc77:	add    BYTE PTR [rax+0x1],ch
  40cc7a:	sbb    eax,0x31000300
  40cc7f:	and    DWORD PTR [rax],eax
  40cc81:	add    BYTE PTR [rax],al
  40cc83:	add    BYTE PTR [rsi+0x1d017d00],dl
  40cc89:	add    BYTE PTR [rax+rax*1],al
  40cc8c:	and    DWORD PTR ds:[rax],eax
  40cc8f:	add    BYTE PTR [rax],al
  40cc91:	add    BYTE PTR [rcx+0xa00cb18],al
  40cc97:	add    BYTE PTR [rip+0x214600],al        # 0x62129d
  40cc9d:	add    BYTE PTR [rax],al
  40cc9f:	add    BYTE PTR [rsi+0xe00f208],dl
  40cca5:	add    BYTE PTR [rip+0x214d00],al        # 0x6219ab
  40ccab:	add    BYTE PTR [rax],al
  40ccad:	add    BYTE PTR [rsi+0x1300fe08],dl
  40ccb3:	add    BYTE PTR [rip+0x215500],al        # 0x6221b9
  40ccb9:	add    BYTE PTR [rax],al
  40ccbb:	add    BYTE PTR [rsi+0x1d020600],dl
  40ccc1:	add    BYTE PTR [rsi],al
  40ccc3:	add    BYTE PTR [rax+0x21],ch
  40ccc6:	add    BYTE PTR [rax],al
  40ccc8:	add    BYTE PTR [rax],al
  40ccca:	xchg   esi,eax
  40cccb:	add    BYTE PTR [rsi],al
  40cccd:	add    dl,BYTE PTR [rcx]
  40cccf:	add    DWORD PTR [rdi],eax
  40ccd1:	add    BYTE PTR [rbx+0x21],bl
  40ccd7:	add    BYTE PTR [rcx-0x64f51de8],dl
  40ccdd:	add    ecx,DWORD PTR [rcx]
  40ccdf:	add    al,dl
  40cce1:	and    DWORD PTR [rax],eax
  40cce3:	add    BYTE PTR [rax],al
  40cce5:	add    BYTE PTR [rsi+0x19031b08],dl
  40cceb:	add    BYTE PTR [rcx],cl
  40cced:	add    bh,dl
  40ccef:	and    DWORD PTR [rax],eax
  40ccf1:	add    BYTE PTR [rax],al
  40ccf3:	add    BYTE PTR [rsi+0x55044608],al
  40ccf9:	add    cl,BYTE PTR [rcx]
  40ccfb:	add    bh,bl
  40ccfd:	and    DWORD PTR [rax],eax
  40ccff:	add    BYTE PTR [rax],al
  40cd01:	add    BYTE PTR [rsi+0xa00cb18],al
  40cd07:	add    BYTE PTR [rcx],cl
  40cd09:	add    BYTE PTR [rdx+riz*1],cl
  40cd0c:	add    BYTE PTR [rax],al
  40cd0e:	add    BYTE PTR [rax],al
  40cd10:	xchg   BYTE PTR [rax],bl
  40cd12:	retf   
  40cd13:	add    BYTE PTR [rcx+0x2],bl
  40cd16:	or     DWORD PTR [rax],eax
  40cd18:	xchg   edi,eax
  40cd19:	and    al,BYTE PTR [rax]
  40cd1b:	add    BYTE PTR [rax],al
  40cd1d:	add    BYTE PTR [rsi+0xa045b00],al
  40cd23:	add    BYTE PTR [rdx],cl
  40cd25:	add    BYTE PTR [rsi+0x22],ah
  40cd2b:	add    BYTE PTR [rsi+0xa046700],al
  40cd31:	add    BYTE PTR [rdx],cl
  40cd33:	add    BYTE PTR [rbp+0x22],dh
  40cd39:	add    BYTE PTR [rsi+0xa047600],al
  40cd3f:	add    BYTE PTR [rdx],cl
  40cd41:	add    ah,al
  40cd43:	and    al,BYTE PTR [rax]
  40cd45:	add    BYTE PTR [rax],al
  40cd47:	add    BYTE PTR [rcx+0xa047d00],al
  40cd4d:	add    BYTE PTR [rdx],cl
  40cd4f:	add    BYTE PTR [rax+0x23],bh
  40cd55:	add    BYTE PTR [rcx+0xa048e00],al
  40cd5b:	add    BYTE PTR [rdx],cl
  40cd5d:	add    BYTE PTR [rax],cl
  40cd5f:	and    eax,0x0
  40cd64:	add    DWORD PTR [rax],0x25f04c5
  40cd6a:	or     al,BYTE PTR [rax]
  40cd6c:	sub    DWORD PTR [rip+0x0],esp        # 0x40cd72
  40cd72:	add    DWORD PTR [rax],0x2660503
  40cd78:	or     al,0x0
  40cd7a:	ss and eax,0x0
  40cd80:	(bad)  
  40cd81:	add    BYTE PTR [rcx],bh
  40cd83:	add    eax,0xf0273
  40cd88:	pop    rax
  40cd89:	and    eax,0x0
  40cd8e:	add    DWORD PTR [rax],0xa0541
  40cd94:	adc    BYTE PTR [rax],al
  40cd96:	sbb    esp,DWORD PTR [rsi]
  40cd98:	add    BYTE PTR [rax],al
  40cd9a:	add    BYTE PTR [rax],al
  40cd9c:	xchg   ecx,eax
  40cd9d:	add    BYTE PTR [rbp+0x5],bh
  40cda0:	add    BYTE PTR [rdx],0x10
  40cda3:	add    BYTE PTR [rbx],dh
  40cda5:	add    BYTE PTR es:[rax],al
  40cda8:	add    BYTE PTR [rax],al
  40cdaa:	xchg   BYTE PTR [rax],cl
  40cdac:	xchg   DWORD PTR [rip+0x11028a],eax        # 0x51d03c
  40cdb2:	cmp    al,0x26
  40cdb4:	add    BYTE PTR [rax],al
  40cdb6:	add    BYTE PTR [rax],al
  40cdb8:	xchg   BYTE PTR [rax],bl
  40cdba:	retf   
  40cdbb:	add    BYTE PTR [rdx],cl
  40cdbd:	add    BYTE PTR [rdx],dl
  40cdbf:	add    BYTE PTR [rsi+riz*1+0x0],cl
  40cdc3:	add    BYTE PTR [rax],al
  40cdc5:	add    BYTE PTR [rsi-0x75ff34e8],al
  40cdcb:	add    dl,BYTE PTR [rdx]
  40cdcd:	add    BYTE PTR [rdx+0x26],bh
  40cdd3:	add    BYTE PTR [rcx-0x6ffa5200],al
  40cdd9:	add    dl,BYTE PTR [rbx]
  40cddb:	add    bh,al
  40cddd:	add    BYTE PTR es:[rax],al
  40cde0:	add    BYTE PTR [rax],al
  40cde2:	add    DWORD PTR [rax],0x29005ce
  40cde8:	adc    eax,0x26d400
  40cded:	add    BYTE PTR [rax],al
  40cdef:	add    BYTE PTR [rcx-0x6ffa1600],al
  40cdf5:	add    dl,BYTE PTR [rdi]
  40cdf7:	add    cl,ah
  40cdf9:	add    BYTE PTR es:[rax],al
  40cdfc:	add    BYTE PTR [rax],al
  40cdfe:	(bad)  
  40cdff:	add    BYTE PTR [rcx],bh
  40ce01:	add    eax,0x190273
  40ce06:	add    BYTE PTR [rdi],ah
  40ce08:	add    BYTE PTR [rax],al
  40ce0a:	add    BYTE PTR [rax],al
  40ce0c:	add    DWORD PTR [rax],0xa0541
  40ce12:	sbb    al,BYTE PTR [rax]
  40ce14:	icebp  
  40ce15:	sub    eax,DWORD PTR [rax]
  40ce17:	add    BYTE PTR [rax],al
  40ce19:	add    BYTE PTR [rbx+0xa00cb18],al
  40ce1f:	add    BYTE PTR [rdx],bl
  40ce21:	add    ah,bh
  40ce23:	sub    eax,DWORD PTR [rax]
  40ce25:	add    BYTE PTR [rax],al
  40ce27:	add    BYTE PTR [rbx-0x4ff898f8],dl
  40ce2d:	add    bl,BYTE PTR [rdx]
  40ce2f:	add    BYTE PTR [rbx],bh
  40ce31:	sub    al,0x0
  40ce33:	add    BYTE PTR [rax],al
  40ce35:	add    BYTE PTR [rbx+0xe00f208],dl
  40ce3b:	add    BYTE PTR [rdx],bl
  40ce3d:	add    BYTE PTR [rdx+0x2c],al
  40ce40:	add    BYTE PTR [rax],al
  40ce42:	add    BYTE PTR [rax],al
  40ce44:	xchg   ebx,eax
  40ce45:	or     dh,bh
  40ce47:	add    BYTE PTR [rbx],dl
  40ce49:	add    BYTE PTR [rdx],bl
  40ce4b:	add    BYTE PTR [rsp+rbp*1+0x0],cl
  40ce4f:	add    BYTE PTR [rax],al
  40ce51:	add    BYTE PTR [rbx-0x41f86ef8],dl
  40ce57:	add    bl,BYTE PTR [rbx]
  40ce59:	add    BYTE PTR [rsp+rbp*1+0x0],dh
  40ce5d:	add    BYTE PTR [rax],al
  40ce5f:	add    BYTE PTR [rbx-0x41f841f8],dl
  40ce65:	add    bl,BYTE PTR [rbx]
  40ce67:	add    BYTE PTR [rsp+rbp*1+0x0],bl
  40ce6e:	xchg   ebx,eax
  40ce6f:	or     dh,bl
  40ce71:	(bad)  
  40ce72:	mov    esi,0x1b02
  40ce77:	add    BYTE PTR [rcx],al
  40ce79:	add    BYTE PTR [rdx+0x100000a],dl
  40ce7f:	add    BYTE PTR [rax+0x100000a],bl
  40ce85:	add    BYTE PTR [rbp+0x100000a],bl
  40ce8b:	add    BYTE PTR [rbp+0x100000a],bl
  40ce91:	add    BYTE PTR [rdx+0x100000a],dl
  40ce97:	add    BYTE PTR [rax+0x100000a],ch
  40ce9d:	add    BYTE PTR [rax+0x200000a],ch
  40cea3:	add    BYTE PTR [rdx+rcx*1+0x10000],ch
  40ceaa:	fiadd  DWORD PTR [rbx]
  40ceac:	add    BYTE PTR [rax],al
  40ceae:	add    DWORD PTR [rax],eax
  40ceb0:	mov    ebp,0x200000d
  40ceb5:	add    ah,al
  40ceb7:	or     eax,0x10000
  40cebc:	out    dx,al
  40cebd:	or     eax,0x20000
  40cec2:	test   BYTE PTR [rip+0x30000],0xfe        # 0x43cec9
  40cec9:	or     eax,0x10000
  40cece:	xor    DWORD PTR [rsi],ecx
  40ced0:	add    BYTE PTR [rax],al
  40ced2:	add    DWORD PTR [rax],eax
  40ced4:	xchg   edi,eax
  40ced5:	sldt   WORD PTR [rax]
  40ced8:	add    DWORD PTR [rax],eax
  40ceda:	xchg   edx,eax
  40cedb:	or     al,BYTE PTR [rax]
  40cedd:	add    BYTE PTR [rcx],al
  40cedf:	add    BYTE PTR [rdx+0x1000005],al
  40cee5:	add    BYTE PTR [rbp+0x200000d],bh
  40ceeb:	add    ah,al
  40ceed:	or     eax,0x10000
  40cef2:	mov    ebp,0x200000d
  40cef7:	add    ah,al
  40cef9:	or     eax,0x10000
  40cefe:	mov    ebp,0x200000d
  40cf03:	add    ah,al
  40cf05:	or     eax,0x10000
  40cf0a:	xor    DWORD PTR [rsi],ecx
  40cf0c:	add    BYTE PTR [rax],al
  40cf0e:	add    DWORD PTR [rax],eax
  40cf10:	xchg   edx,eax
  40cf11:	or     ch,BYTE PTR [rcx-0x32ff3500]
  40cf17:	add    dh,BYTE PTR [rcx+0x7300cb00]
  40cf1d:	add    bh,BYTE PTR [rcx-0x32ff3500]
  40cf23:	add    al,cl
  40cf25:	add    bl,cl
  40cf27:	add    ch,cl
  40cf29:	add    cl,cl
  40cf2b:	add    bl,cl
  40cf2d:	add    ch,cl
  40cf2f:	add    dl,cl
  40cf31:	add    bl,cl
  40cf33:	add    ch,cl
  40cf35:	add    bl,cl
  40cf37:	add    bl,cl
  40cf39:	add    ch,cl
  40cf3b:	add    ah,cl
  40cf3d:	add    bl,cl
  40cf3f:	add    ch,cl
  40cf41:	add    ch,cl
  40cf43:	add    bl,cl
  40cf45:	add    ch,cl
  40cf47:	add    dh,cl
  40cf49:	add    bl,cl
  40cf4b:	add    ch,cl
  40cf4d:	add    bh,cl
  40cf4f:	add    bl,cl
  40cf51:	add    ch,cl
  40cf53:	add    al,BYTE PTR [rcx]
  40cf55:	add    ebx,ecx
  40cf57:	add    ch,cl
  40cf59:	add    cl,BYTE PTR [rcx]
  40cf5b:	add    ebx,ecx
  40cf5d:	add    ch,cl
  40cf5f:	add    dl,BYTE PTR [rcx]
  40cf61:	add    ebx,ecx
  40cf63:	add    dl,dl
  40cf65:	add    ah,BYTE PTR [rcx]
  40cf67:	add    ebx,ecx
  40cf69:	add    cl,bl
  40cf6b:	add    ch,BYTE PTR [rcx]
  40cf6d:	add    ebx,ecx
  40cf6f:	add    BYTE PTR [rdx],cl
  40cf71:	add    BYTE PTR [rcx],dh
  40cf73:	add    ebx,ecx
  40cf75:	add    BYTE PTR [rdx],cl
  40cf77:	add    BYTE PTR [rcx],cl
  40cf79:	add    bl,cl
  40cf7b:	add    BYTE PTR [rdx],cl
  40cf7d:	add    BYTE PTR [rcx],ch
  40cf7f:	add    BYTE PTR [rsi],al
  40cf81:	add    al,BYTE PTR [rbp-0x4effdefd]
  40cf87:	or     cl,BYTE PTR [rsi]
  40cf89:	add    BYTE PTR [rcx],bh
  40cf8b:	add    ebx,ebx
  40cf8d:	or     cl,BYTE PTR [rbx+rax*1+0xb000149]
  40cf94:	lahf   
  40cf95:	add    ecx,DWORD PTR [rcx+0x1]
  40cf98:	adc    cl,BYTE PTR [rbx]
  40cf9a:	push   rbp
  40cf9b:	add    cl,BYTE PTR [rcx+0x1]
  40cf9e:	or     ebp,DWORD PTR es:[rax+0x3a015903]
  40cfa5:	or     ebp,DWORD PTR [rsi-0x34ffd6fd]
  40cfab:	add    BYTE PTR [rbx+rax*1+0xcb000c],dh
  40cfb2:	or     al,BYTE PTR [rax]
  40cfb4:	add    r11b,cl
  40cfb7:	add    BYTE PTR [rdx],cl
  40cfb9:	add    BYTE PTR [rcx],dl
  40cfbb:	add    bl,cl
  40cfbd:	add    BYTE PTR [rdx],cl
  40cfbf:	add    BYTE PTR [rax+rax*1],cl
  40cfc2:	push   rbp
  40cfc3:	or     eax,edx
  40cfc5:	add    esi,DWORD PTR [rcx+0x1]
  40cfc8:	js     0x40cfd5
  40cfca:	int    0x3
  40cfcc:	jns    0x40cfcf
  40cfce:	test   DWORD PTR [rbx],ecx
  40cfd0:	rol    DWORD PTR [rbx],cl
  40cfd2:	jns    0x40cfd5
  40cfd4:	mov    DWORD PTR [rbx],ecx
  40cfd6:	fiadd  DWORD PTR [rbx]
  40cfd8:	jno    0x40cfdb
  40cfda:	movabs eax,ds:0xcd0baa004103e20b
  40cfe3:	add    dl,BYTE PTR [rax+rax*1]
  40cfe6:	retf   
  40cfe7:	add    cl,dh
  40cfe9:	add    eax,DWORD PTR [rcx+0x0]
  40cfec:	leave  
  40cfed:	or     esi,edi
  40cfef:	add    edx,DWORD PTR [rcx+0xa00cb01]
  40cff5:	add    BYTE PTR [rcx+0x20bf501],bl
  40cffb:	add    al,0x41
  40cffd:	add    BYTE PTR [rax],al
  40cfff:	or     al,0x55
  40d001:	add    dl,BYTE PTR [rcx-0x32f3eeff]
  40d007:	add    dl,BYTE PTR [rcx+0x70c1901]
  40d00d:	add    al,0x91
  40d00f:	add    DWORD PTR [rdx],ebp
  40d011:	or     al,0x55
  40d013:	add    bh,BYTE PTR [rcx]
  40d015:	add    DWORD PTR [rdi],esi
  40d017:	or     al,0x2b
  40d019:	add    BYTE PTR [rcx],bh
  40d01b:	add    DWORD PTR [rsi+0xc],ecx
  40d01e:	or     eax,DWORD PTR [rcx+rbp*4]
  40d021:	add    DWORD PTR [rdi+0xc],ebx
  40d024:	push   rbp
  40d025:	add    bh,BYTE PTR [rcx]
  40d027:	add    DWORD PTR [rbx+0xc],ebp
  40d02a:	adc    al,0x4
  40d02c:	(bad)  
  40d02d:	add    DWORD PTR [rsp+rcx*1+0x1610425],ecx
  40d034:	movabs eax,ds:0xcd00cb01b902550c
  40d03d:	add    bh,BYTE PTR [rcx+0x550cb201]
  40d043:	add    al,cl
  40d045:	add    edi,ecx
  40d047:	or     al,0x1d
  40d049:	add    cl,al
  40d04b:	add    eax,esp
  40d04d:	or     al,0x2b
  40d04f:	add    al,0xc9
  40d051:	add    ebp,ebp
  40d053:	or     al,0x14
  40d055:	add    al,0xd1
  40d057:	add    ebx,ecx
  40d059:	add    ch,cl
  40d05b:	add    bl,cl
  40d05d:	add    ebx,ecx
  40d05f:	add    BYTE PTR [rdx],cl
  40d061:	add    BYTE PTR [rcx],cl
  40d063:	add    BYTE PTR [rdi],ch
  40d065:	or     eax,0x1390255
  40d06a:	fisttp DWORD PTR [rdx]
  40d06c:	adc    DWORD PTR [rcx],eax
  40d06e:	fld    DWORD PTR [rcx]
  40d070:	cmp    BYTE PTR [rip+0x1390431],cl        # 0x179d4a7
  40d076:	(bad)  
  40d077:	or     eax,0xc0438
  40d07c:	or     rax,0xc0440
  40d082:	pop    rbp
  40d083:	or     eax,0x1c0444
  40d088:	imul   ecx,DWORD PTR [rip+0x1c0455],0x77        # 0x5cd4e4
  40d08f:	or     eax,0x1e90407
  40d094:	cmp    DWORD PTR [rip+0x1f1000a],eax        # 0x231d0a4
  40d09a:	retf   
  40d09b:	add    BYTE PTR [rdx+0x4],bl
  40d09e:	adc    DWORD PTR [rax],eax
  40d0a0:	popf   
  40d0a1:	or     eax,0x1f9000a
  40d0a6:	stos   DWORD PTR es:[rdi],eax
  40d0a7:	or     eax,0x1f90460
  40d0ac:	mov    cl,0xd
  40d0ae:	or     al,BYTE PTR [rax]
  40d0b0:	rex.WB add r14b,al
  40d0b3:	or     eax,0x2010255
  40d0b8:	jrcxz  0x40d0c7
  40d0ba:	jae    0x40d0be
  40d0bc:	or     DWORD PTR [rdx],eax
  40d0be:	sub    al,0xe
  40d0c0:	jle    0x40d0c6
  40d0c2:	adc    DWORD PTR [rax],eax
  40d0c4:	cmp    DWORD PTR [rip+0x2210273],eax        # 0x261d33d
  40d0ca:	retf   
  40d0cb:	add    BYTE PTR [rbp-0x34ff96fc],cl
  40d0d1:	add    BYTE PTR [rdx],cl
  40d0d3:	add    BYTE PTR [rcx+0x1],dh
  40d0d6:	push   rsp
  40d0d7:	(bad)  
  40d0d8:	or     al,BYTE PTR [rax]
  40d0da:	and    DWORD PTR [rdx],eax
  40d0dc:	(bad)  
  40d0dd:	(bad)  
  40d0de:	xchg   esp,eax
  40d0df:	add    al,0x29
  40d0e1:	add    al,BYTE PTR [rsi+rcx*1+0x171049a]
  40d0e8:	xchg   esp,eax
  40d0e9:	(bad)  
  40d0ea:	movabs al,ds:0x3902cd0ea2017104
  40d0f3:	add    cl,dl
  40d0f5:	(bad)  
  40d0f6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40d0f7:	add    al,0x39
  40d0f9:	add    ch,cl
  40d0fb:	(bad)  
  40d0fc:	scas   al,BYTE PTR es:[rdi]
  40d0fd:	add    al,0x29
  40d0ff:	add    bh,dl
  40d101:	(bad)  
  40d102:	(bad)  
  40d103:	add    al,0x71
  40d105:	add    DWORD PTR [rip+0x1104a00f],eax        # 0x1145711a
  40d10b:	add    BYTE PTR [rbx],ah
  40d10d:	lgs    eax,FWORD PTR [rcx+rdx*1]
  40d111:	add    BYTE PTR [rdi],dh
  40d113:	(bad)  
  40d115:	add    dl,BYTE PTR [rcx]
  40d117:	add    BYTE PTR [rdi+0xf],al
  40d11a:	jae    0x40d11e
  40d11c:	adc    DWORD PTR [rax],eax
  40d11e:	bsf    eax,DWORD PTR gs:[rcx+rsi*2]
  40d123:	add    DWORD PTR [rdi+0xf],esi
  40d126:	jae    0x40d12a
  40d128:	(bad)  
  40d129:	add    cl,bl
  40d12b:	add    BYTE PTR [rdx],cl
  40d12d:	add    BYTE PTR [rcx+0x2],ch
  40d130:	test   al,0xf
  40d132:	fwait
  40d133:	add    ebp,DWORD PTR [rcx+0x2]
  40d136:	mov    ebx,0x6904c90f
  40d13b:	add    bl,ch
  40d13d:	bswap  esi
  40d13f:	add    al,0x19
  40d141:	add    bl,cl
  40d143:	add    BYTE PTR [rdx],cl
  40d145:	add    BYTE PTR [rcx-0x2bf00c00],cl
  40d14b:	add    al,0x89
  40d14d:	add    BYTE PTR [rdi],al
  40d14f:	adc    bl,bl
  40d151:	add    al,0x39
  40d153:	add    bh,BYTE PTR [rcx]
  40d155:	add    eax,0x2810273
  40d15a:	retf   
  40d15b:	add    BYTE PTR [rdx],cl
  40d15d:	add    BYTE PTR [rcx+0x0],bh
  40d160:	retf   
  40d161:	add    dl,ah
  40d163:	add    al,0x81
  40d165:	add    bl,cl
  40d167:	add    BYTE PTR [rdx],cl
  40d169:	add    BYTE PTR [rcx+0xa00cb00],dl
  40d16f:	add    BYTE PTR [rcx+0xa00cb00],bl
  40d175:	add    BYTE PTR [rcx+0xa00cb00],cl
  40d17b:	add    BYTE PTR [rcx+0xa102e02],cl
  40d181:	add    BYTE PTR [rcx-0x17f48800],al
  40d187:	add    al,0x91
  40d189:	add    al,BYTE PTR [rbp-0x66fb11f5]
  40d18f:	add    BYTE PTR [rbp+0x10],dl
  40d192:	jae    0x40d196
  40d194:	jns    0x40d196
  40d196:	ja     0x40d1a8
  40d198:	test   DWORD PTR [rcx+riz*4],0xf100cb02
  40d19f:	add    edx,DWORD PTR [rcx+0x110aa00]
  40d1a5:	add    eax,0x10ba0079
  40d1aa:	test   DWORD PTR [rcx+rax*4],0xda10ce00
  40d1b1:	add    ecx,DWORD PTR [rcx+0x73105500]
  40d1b7:	add    bh,BYTE PTR [rcx+0x0]
  40d1ba:	fst    DWORD PTR [rax]
  40d1bc:	or     BYTE PTR [rip+0x10ea0289],al        # 0x112ad44b
  40d1c2:	or     al,BYTE PTR [rax]
  40d1c4:	jno    0x40d1c7
  40d1c6:	repnz adc BYTE PTR [rdx],cl
  40d1c9:	add    BYTE PTR [rcx+0x5a00cb02],ch
  40d1cf:	add    al,0xb1
  40d1d1:	add    cl,bl
  40d1d3:	add    BYTE PTR [rdx],cl
  40d1d5:	add    BYTE PTR [rcx],cl
  40d1d7:	add    BYTE PTR [rcx+rdx*1+0x51],cl
  40d1db:	add    eax,0xb3a0149
  40d1e0:	scas   al,BYTE PTR es:[rdi]
  40d1e1:	add    ebp,DWORD PTR [rcx]
  40d1e3:	add    BYTE PTR [rcx+rdx*1+0x5c],bl
  40d1e7:	add    eax,0xcb02b9
  40d1ec:	addr32 add eax,0x4000e
  40d1f2:	add    BYTE PTR cs:[rsi],cl
  40d1f5:	add    BYTE PTR [rax],cl
  40d1f7:	add    BYTE PTR [rdi+0x0],dl
  40d1fa:	(bad)  
  40d1fb:	add    BYTE PTR [rax+rax*1],cl
  40d1fe:	je     0x40d200
  40d200:	(bad)  
  40d201:	add    BYTE PTR [rax],dl
  40d203:	add    BYTE PTR [rbp+0x14000e00],bl
  40d209:	add    dl,al
  40d20b:	add    BYTE PTR [rsi],cl
  40d20d:	add    BYTE PTR [rax],bl
  40d20f:	add    bl,ah
  40d211:	add    BYTE PTR [rsi],cl
  40d213:	add    BYTE PTR [rax+rax*1],bl
  40d216:	out    dx,al
  40d217:	add    BYTE PTR [rsi],cl
  40d219:	add    BYTE PTR [rax],ch
  40d21b:	add    BYTE PTR [rdi],dl
  40d21d:	add    DWORD PTR [rax],ecx
  40d21f:	add    BYTE PTR [rax+rax*1],ch
  40d222:	sub    eax,DWORD PTR [rcx]
  40d224:	or     BYTE PTR [rax],al
  40d226:	xor    BYTE PTR [rax],al
  40d228:	xor    BYTE PTR [rcx],al
  40d22a:	(bad)  
  40d22b:	add    BYTE PTR [rax+rax*1],dh
  40d22e:	xor    eax,0x38000e01
  40d233:	add    BYTE PTR [rsi],bh
  40d235:	add    DWORD PTR [rsi],ecx
  40d237:	add    BYTE PTR [rax+rax*1],bh
  40d23a:	add    DWORD PTR [esi],ecx
  40d23d:	add    BYTE PTR [rax+0x0],al
  40d240:	(bad)  
  40d241:	add    DWORD PTR [rsi],ecx
  40d243:	add    BYTE PTR [rax+rax*1-0x5f],al
  40d247:	add    DWORD PTR [rsi],ecx
  40d249:	add    BYTE PTR [rax+0x0],cl
  40d24c:	lods   al,BYTE PTR ds:[rsi]
  40d24d:	add    DWORD PTR [rsi],ecx
  40d24f:	add    BYTE PTR [rax+rax*1-0x21],cl
  40d253:	add    DWORD PTR [rcx],ecx
  40d255:	add    BYTE PTR [rax+0x0],dl
  40d258:	icebp  
  40d259:	add    DWORD PTR [rcx],ecx
  40d25b:	add    BYTE PTR [rax+rax*1-0xa],dl
  40d25f:	add    DWORD PTR [rsi],ecx
  40d261:	add    BYTE PTR [rax+0x0],bl
  40d264:	sti    
  40d265:	add    DWORD PTR [rsi],ecx
  40d267:	add    BYTE PTR [rax+rax*1+0x26],bl
  40d26b:	add    ch,BYTE PTR [rsi]
  40d26d:	add    BYTE PTR [rbx],ah
  40d26f:	add    BYTE PTR [rcx+0x2b002e05],ah
  40d275:	add    BYTE PTR [rcx-0x7cffd1fb],ah
  40d27b:	add    BYTE PTR [rax+0xb002e06],dh
  40d281:	add    BYTE PTR [rdi+0x5],dh
  40d284:	add    BYTE PTR cs:[rbx],dl
  40d287:	add    BYTE PTR [rcx+0x53002e05],ah
  40d28d:	add    dl,bh
  40d28f:	add    eax,0x33002e
  40d294:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40d295:	add    eax,0x3b002e
  40d29a:	mov    dh,0x5
  40d29c:	add    BYTE PTR cs:[rbx+0x0],al
  40d2a0:	enter  0x2e05,0x0
  40d2a4:	movsxd eax,DWORD PTR [rax]
  40d2a6:	jb     0x40d2ae
  40d2a8:	add    BYTE PTR cs:[rbx+0x0],bl
  40d2ac:	rex.W (bad) 
  40d2ae:	add    BYTE PTR cs:[rbx+0x0],ch
  40d2b2:	mov    WORD PTR [rsi],es
  40d2b4:	add    BYTE PTR cs:[rbx+0x0],dh
  40d2b8:	outs   dx,BYTE PTR ds:[rsi]
  40d2b9:	add    eax,0x7b002e
  40d2be:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40d2bf:	(bad)  
  40d2c0:	rex.XB add BYTE PTR [r11+0x63038000],cl
  40d2c7:	add    BYTE PTR [rbx+0x3038000],cl
  40d2cd:	add    DWORD PTR [rbx+0x3038003],esi
  40d2d3:	add    DWORD PTR [rbx+0x3038000],ecx
  40d2d9:	add    DWORD PTR [rbx+0x49051003],ebp
  40d2df:	add    ebx,edx
  40d2e1:	add    ebp,DWORD PTR [rsi+0x5]
  40d2e4:	imul   eax,DWORD PTR [rcx],0x56e03d3
  40d2ea:	rol    BYTE PTR [rbx],0xd3
  40d2ed:	add    al,BYTE PTR [rax+0x19039603]
  40d2f3:	add    al,0x69
  40d2f5:	add    al,0xc3
  40d2f7:	add    al,0x57
  40d2f9:	add    eax,0x20563
  40d2fe:	add    DWORD PTR [rax],eax
  40d300:	add    eax,DWORD PTR [rax]
  40d302:	(bad)  
  40d303:	add    BYTE PTR [rax+rax*1],al
  40d306:	(bad)  
  40d307:	add    BYTE PTR [rip+0x7000800],al        # 0x740db0d
  40d30d:	add    BYTE PTR [rcx],cl
  40d30f:	add    BYTE PTR [rax],cl
  40d311:	add    BYTE PTR [rdx],cl
  40d313:	add    BYTE PTR [rax],al
  40d315:	add    BYTE PTR [rbx+0x2201],cl
  40d31b:	add    BYTE PTR [rbx+0x2701],dl
  40d321:	add    BYTE PTR [rdx+0x2701],ah
  40d327:	add    BYTE PTR [rbp+0x2701],dh
  40d32d:	add    dh,al
  40d32f:	add    DWORD PTR [rdi],esp
  40d331:	add    BYTE PTR [rax],al
  40d333:	add    BYTE PTR [rbx+0x2201],cl
  40d339:	add    BYTE PTR [rbx+rax*1],dh
  40d33c:	(bad)  
  40d33d:	add    BYTE PTR [rax],al
  40d33f:	add    BYTE PTR [rbp+rax*1+0x7c],ch
  40d343:	add    al,BYTE PTR [rax]
  40d345:	add    BYTE PTR [rsi+0x7],al
  40d348:	stos   DWORD PTR es:[rdi],eax
  40d349:	add    al,BYTE PTR [rax]
  40d34b:	add    ch,bl
  40d34d:	add    ebx,eax
  40d34f:	add    al,BYTE PTR [rax]
  40d351:	add    BYTE PTR [rbx+0x2201],cl
  40d357:	add    dl,bh
  40d359:	(bad)  
  40d35a:	enter  0x2,0x0
  40d35e:	and    ecx,DWORD PTR [rax]
  40d360:	enter  0x2,0x0
  40d364:	(bad)  
  40d365:	or     al,cl
  40d367:	add    al,BYTE PTR [rdx]
  40d369:	add    BYTE PTR [rdx],al
  40d36b:	add    BYTE PTR [rbx],al
  40d36d:	add    BYTE PTR [rcx],al
  40d36f:	add    BYTE PTR [rbx],al
  40d371:	add    BYTE PTR [rbx],al
  40d373:	add    BYTE PTR [rdx],al
  40d375:	add    BYTE PTR [rax+rax*1],al
  40d378:	add    eax,0x5000200
  40d37d:	add    BYTE PTR [rdi],al
  40d37f:	add    BYTE PTR [rdx],al
  40d381:	add    BYTE PTR [rsi],al
  40d383:	add    BYTE PTR [rcx],cl
  40d385:	add    BYTE PTR [rdx],al
  40d387:	add    BYTE PTR [rdi],al
  40d389:	add    BYTE PTR [rbx],cl
  40d38b:	add    BYTE PTR [rdx],al
  40d38d:	add    BYTE PTR [rax+rax*1],cl
  40d390:	or     eax,0xd000100
  40d395:	add    BYTE PTR [rip+0x11000200],cl        # 0x1140d59b
  40d39b:	add    BYTE PTR [rdi],cl
  40d39d:	add    BYTE PTR [rdx],al
  40d39f:	add    BYTE PTR [rdx],dl
  40d3a1:	add    BYTE PTR [rcx],dl
  40d3a3:	add    BYTE PTR [rcx],al
  40d3a5:	add    BYTE PTR [rdi],bl
  40d3a7:	add    BYTE PTR [rbx],dl
  40d3a9:	add    BYTE PTR [rdx],al
  40d3ab:	add    BYTE PTR [rax],ch
  40d3ad:	add    BYTE PTR [rip+0x29000200],dl        # 0x2940d5b3
  40d3b3:	add    BYTE PTR [rdi],dl
  40d3b5:	add    BYTE PTR [rcx],al
  40d3b7:	add    BYTE PTR [rdx],ch
  40d3b9:	add    BYTE PTR [rdi],dl
  40d3bb:	add    BYTE PTR [rdx],al
  40d3bd:	add    BYTE PTR [rbx],ch
  40d3bf:	add    BYTE PTR [rcx],bl
  40d3c1:	add    BYTE PTR [rdx],al
  40d3c3:	add    BYTE PTR [rax+rax*1],ch
  40d3c6:	sbb    eax,DWORD PTR [rax]
  40d3c8:	add    al,BYTE PTR [rax]
  40d3ca:	sub    eax,0xbc001d00
  40d3cf:	add    ebp,ecx
  40d3d1:	add    ecx,DWORD PTR [rsi+0x4]
  40d3d4:	add    al,0x80
  40d3d6:	add    BYTE PTR [rax],al
  40d3d8:	or     al,BYTE PTR [rax]
  40d3da:	add    BYTE PTR [rax],al
  40d3dc:	add    BYTE PTR [rax],al
  40d3de:	add    BYTE PTR [rax],al
  40d3e0:	add    DWORD PTR [rax],eax
  40d3e2:	add    BYTE PTR [rax],al
  40d3e4:	fiadd  WORD PTR [rdx]
  40d3e6:	outs   dx,BYTE PTR ds:[rsi]
  40d3e7:	or     al,BYTE PTR [rax]
  40d3e9:	add    BYTE PTR [rdx],al
	...
  40d3f3:	add    BYTE PTR [rax],al
  40d3f5:	add    BYTE PTR [rcx],al
  40d3f7:	add    BYTE PTR [rsi+0x0],cl
  40d3fd:	add    BYTE PTR [rdx],al
	...
  40d407:	add    BYTE PTR [rax],al
  40d409:	add    BYTE PTR [rcx],al
  40d40b:	add    BYTE PTR [rbp+0x0],ah
  40d411:	add    BYTE PTR [rdx],cl
	...
  40d41b:	add    BYTE PTR [rax],al
  40d41d:	add    BYTE PTR [rcx],bh
  40d41f:	add    ah,BYTE PTR [rax+0x3]
  40d422:	add    BYTE PTR [rax],al
  40d424:	add    BYTE PTR [rax],al
  40d426:	or     al,BYTE PTR [rax]
	...
  40d430:	add    BYTE PTR [rax],al
  40d432:	cmp    DWORD PTR [rdx],eax
  40d434:	inc    BYTE PTR [rbx]
  40d436:	add    BYTE PTR [rax],al
  40d438:	add    BYTE PTR [rax],al
  40d43a:	add    al,BYTE PTR [rax]
	...
  40d444:	add    BYTE PTR [rax],al
  40d446:	add    DWORD PTR [rax],eax
  40d448:	xchg   edi,eax
  40d449:	add    BYTE PTR [rax],al
  40d44b:	add    BYTE PTR [rax],al
  40d44d:	add    BYTE PTR [rdx],cl
	...
  40d457:	add    BYTE PTR [rax],al
  40d459:	add    BYTE PTR [rcx],bh
  40d45b:	add    cl,BYTE PTR [rsi]
  40d45d:	(bad)  
  40d45e:	add    BYTE PTR [rax],al
  40d460:	add    BYTE PTR [rax],al
  40d462:	add    al,BYTE PTR [rax]
	...
  40d46c:	add    BYTE PTR [rax],al
  40d46e:	mov    ch,0x2
  40d470:	jnp    0x40d479
	...
  40d47a:	add    DWORD PTR [rax],eax
  40d47c:	add    BYTE PTR [rax],al
  40d47e:	xchg   esp,eax
  40d47f:	adc    DWORD PTR [rax],eax
  40d481:	add    BYTE PTR [rax],bh
  40d483:	add    eax,DWORD PTR [rax]
  40d485:	add    BYTE PTR [rcx],al
  40d487:	add    BYTE PTR [rax],al
  40d489:	add    ch,cl
  40d48b:	adc    DWORD PTR [rax],eax
  40d48d:	add    BYTE PTR [rax],dh
  40d48f:	(bad)  
  40d490:	add    BYTE PTR [rax],al
  40d492:	add    DWORD PTR [rax],eax
  40d494:	add    BYTE PTR [rax],al
  40d496:	or     eax,0xc8000012
  40d49b:	(bad)  
  40d49c:	add    BYTE PTR [rax],al
  40d49e:	add    DWORD PTR [rax],eax
  40d4a0:	add    BYTE PTR [rax],al
  40d4a2:	push   rbp
  40d4a3:	adc    al,BYTE PTR [rax]
  40d4a5:	add    BYTE PTR [rbx],al
  40d4a7:	add    BYTE PTR [rdx],al
  40d4a9:	add    BYTE PTR [rax],al
  40d4ab:	add    BYTE PTR [rax],al
  40d4ad:	cmp    al,0x4d
  40d4af:	outs   dx,DWORD PTR ds:[rsi]
  40d4b0:	fs jne 0x40d51f
  40d4b3:	gs add BYTE PTR ds:[rbx+0x65],dl
  40d4b8:	je     0x40d52f
  40d4ba:	jo     0x40d4fd
  40d4bc:	push   rdx
  40d4bd:	push   rax
  40d4be:	cs gs js 0x40d527
  40d4c2:	add    BYTE PTR [rbx+0x52],dl
  40d4c5:	add    BYTE PTR [rbp+0x69],cl
  40d4c8:	movsxd esi,DWORD PTR [rdx+0x6f]
  40d4cb:	jae    0x40d53c
  40d4cd:	data16 je 0x40d4fe
  40d4d0:	push   rbx
  40d4d1:	jno    0x40d53f
  40d4d3:	push   rbx
  40d4d4:	gs jb  0x40d54d
  40d4d7:	gs jb  0x40d508
  40d4da:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40d4dc:	outs   dx,BYTE PTR ds:[rsi]
  40d4dd:	imul   sp,WORD PTR [rdi+0x75],0x6172
  40d4e3:	je     0x40d54e
  40d4e5:	outs   dx,DWORD PTR ds:[rsi]
  40d4e6:	outs   dx,BYTE PTR ds:[rsi]
  40d4e7:	cs push r10
  40d4ea:	push   rax
  40d4eb:	imul   r12d,DWORD PTR [rcx+0x6c],0x4b00676f
  40d4f3:	gs jns 0x40d569
  40d4f6:	add    BYTE PTR [rcx+0x73],al
  40d4f9:	jae    0x40d560
  40d4fb:	ins    DWORD PTR es:[rdi],dx
  40d4fc:	(bad)  
  40d4fd:	ins    BYTE PTR es:[rdi],dx
  40d4fe:	jns    0x40d556
  40d500:	gs jb  0x40d576
  40d503:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f666e49
  40d50a:	add    BYTE PTR [rcx+0x52],al
  40d50d:	push   rax
  40d50e:	imul   r12d,DWORD PTR [rcx+0x6c],0x4100676f
  40d516:	push   rdx
  40d517:	push   rax
  40d518:	push   rbx
  40d519:	gs je  0x40d591
  40d51c:	jo     0x40d51e
  40d51e:	push   r10
  40d520:	push   rax
  40d521:	imul   r12d,DWORD PTR [rcx+0x6c],0x6f43676f
  40d529:	outs   dx,BYTE PTR ds:[rsi]
  40d52a:	je     0x40d59e
  40d52c:	outs   dx,DWORD PTR ds:[rsi]
  40d52d:	ins    BYTE PTR es:[rdi],dx
  40d52e:	jae    0x40d530
  40d530:	push   rdx
  40d531:	gs jae 0x40d5a3
  40d534:	jne    0x40d5a8
  40d536:	movsxd esp,DWORD PTR [rbp+0x73]
  40d539:	add    BYTE PTR [rbp+0x73],ch
  40d53c:	movsxd ebp,DWORD PTR [rdi+0x72]
  40d53f:	ins    BYTE PTR es:[rdi],dx
  40d540:	imul   esp,DWORD PTR [rdx+0x0],0x74737953
  40d547:	gs ins DWORD PTR es:[rdi],dx
  40d549:	add    BYTE PTR [rdi+0x62],cl
  40d54c:	push   0x65
  40d54e:	movsxd esi,DWORD PTR [rax+rax*1+0x53]
  40d552:	jns    0x40d5c7
  40d554:	je     0x40d5bb
  40d556:	ins    DWORD PTR es:[rdi],dx
  40d557:	cs push rdi
  40d559:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
  40d560:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40d562:	jb     0x40d5d1
  40d564:	jae    0x40d566
  40d566:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40d568:	jb     0x40d5d7
  40d56a:	add    BYTE PTR [rbp+0x73],dl
  40d56d:	gs jb  0x40d5b3
  40d570:	outs   dx,DWORD PTR ds:[rsi]
  40d571:	outs   dx,BYTE PTR ds:[rsi]
  40d572:	je     0x40d5e6
  40d574:	outs   dx,DWORD PTR ds:[rsi]
  40d575:	ins    BYTE PTR es:[rdi],dx
  40d576:	add    BYTE PTR [rsi],ch
  40d578:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  40d57c:	add    BYTE PTR [rbx+0x79],dl
  40d57f:	jae    0x40d5f5
  40d581:	gs ins DWORD PTR es:[rdi],dx
  40d583:	cs rex.RXB ins BYTE PTR es:[rdi],dx
  40d586:	outs   dx,DWORD PTR ds:[rsi]
  40d587:	(bad)
  40d58c:	(bad)  
  40d58d:	je     0x40d5f8
  40d58f:	outs   dx,DWORD PTR ds:[rsi]
  40d590:	outs   dx,BYTE PTR ds:[rsi]
  40d591:	add    BYTE PTR [rbx+0x75],al
  40d594:	ins    BYTE PTR es:[rdi],dx
  40d595:	je     0x40d60c
  40d597:	jb     0x40d5fe
  40d599:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40d59b:	outs   dx,WORD PTR ds:[rsi]
  40d59d:	add    BYTE PTR [rdi+0x65],ah
  40d5a0:	je     0x40d601
  40d5a2:	rex.XB jne 0x40d611
  40d5a5:	je     0x40d61c
  40d5a7:	jb     0x40d60e
  40d5a9:	add    BYTE PTR [rbx+0x65],dh
  40d5ac:	je     0x40d60d
  40d5ae:	rex.XB jne 0x40d61d
  40d5b1:	je     0x40d628
  40d5b3:	jb     0x40d61a
  40d5b5:	add    BYTE PTR [rdi+0x65],ah
  40d5b8:	je     0x40d619
  40d5ba:	rex.X jb 0x40d62c
  40d5bd:	ja     0x40d632
  40d5bf:	rex.RX outs dx,DWORD PTR gs:[rsi]
  40d5c2:	jb     0x40d611
  40d5c4:	gs imul esp,DWORD PTR fs:[rcx+0x0],0x5f746567
  40d5cd:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40d5cf:	jbe    0x40d632
  40d5d1:	ins    BYTE PTR es:[rdi],dx
  40d5d2:	imul   esp,DWORD PTR [rsi+rax*2+0x6f],0x7265646c
  40d5da:	push   rsp
  40d5db:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x74656700
  40d5e3:	pop    rdi
  40d5e4:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40d5e6:	jbe    0x40d649
  40d5e8:	ins    BYTE PTR es:[rdi],dx
  40d5e9:	imul   esp,DWORD PTR [rbp+rax*2+0x6d],0x50797470
  40d5f1:	(bad)  
  40d5f2:	je     0x40d65c
  40d5f4:	add    BYTE PTR [rdi+0x65],ah
  40d5f7:	je     0x40d658
  40d5f9:	push   rsp
  40d5fa:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x73694d00
  40d602:	jae    0x40d66d
  40d604:	outs   dx,BYTE PTR ds:[rsi]
  40d605:	rex.X outs dx,DWORD PTR ds:[esi]
  40d608:	outs   dx,DWORD PTR ds:[rsi]
  40d609:	je     0x40d67e
  40d60b:	je     0x40d67f
  40d60d:	(bad)  
  40d60e:	jo     0x40d656
  40d610:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x61766e49
  40d618:	ins    BYTE PTR es:[rdi],dx
  40d619:	imul   esp,DWORD PTR [rcx+rcx*2+0x6e],0x6c617473
  40d621:	ins    BYTE PTR es:[rdi],dx
  40d622:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40d624:	ins    BYTE PTR es:[rdi],dx
  40d625:	fs gs jb 0x40d629
  40d629:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40d62b:	jbe    0x40d68e
  40d62d:	ins    BYTE PTR es:[rdi],dx
  40d62e:	imul   esp,DWORD PTR [rsi+rax*2+0x6f],0x7265646c
  40d636:	add    BYTE PTR [rbx+0x75],al
  40d639:	ins    BYTE PTR es:[rdi],dx
  40d63a:	je     0x40d6b1
  40d63c:	jb     0x40d6a3
  40d63e:	add    BYTE PTR [rdx+0x72],al
  40d641:	outs   dx,DWORD PTR ds:[rsi]
  40d642:	ja     0x40d6b7
  40d644:	rex.RX outs dx,DWORD PTR gs:[rsi]
  40d647:	jb     0x40d696
  40d649:	gs imul esp,DWORD PTR fs:[rcx+0x0],0x61766e49
  40d652:	ins    BYTE PTR es:[rdi],dx
  40d653:	imul   esp,DWORD PTR [rsi+rax*2+0x6f],0x7265646c
  40d65b:	push   rsp
  40d65c:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x766e4900
  40d664:	(bad)  
  40d665:	ins    BYTE PTR es:[rdi],dx
  40d666:	imul   esp,DWORD PTR [rbp+rax*2+0x6d],0x50797470
  40d66e:	(bad)  
  40d66f:	je     0x40d6d9
  40d671:	add    BYTE PTR [rcx+rbp*2+0x74],dl
  40d675:	ins    BYTE PTR es:[rdi],dx
  40d676:	add    BYTE PTR gs:[rbx+0x79],dl
  40d67a:	jae    0x40d6f0
  40d67c:	gs ins DWORD PTR es:[rdi],dx
  40d67e:	cs push rdx
  40d680:	gs jae 0x40d6f2
  40d683:	jne    0x40d6f7
  40d685:	movsxd esp,DWORD PTR [rbp+0x73]
  40d688:	add    BYTE PTR [rdx+0x65],dl
  40d68b:	jae    0x40d6fc
  40d68d:	jne    0x40d701
  40d68f:	movsxd esp,DWORD PTR [rbp+0x4d]
  40d692:	(bad)  
  40d693:	outs   dx,BYTE PTR ds:[rsi]
  40d694:	(bad)  
  40d695:	addr32 gs jb 0x40d699
  40d699:	jb     0x40d700
  40d69b:	jae    0x40d70c
  40d69d:	jne    0x40d711
  40d69f:	movsxd esp,DWORD PTR [rbp+0x4d]
  40d6a2:	(bad)  
  40d6a3:	outs   dx,BYTE PTR ds:[rsi]
  40d6a4:	(bad)  
  40d6a5:	addr32 gs jb 0x40d6a9
  40d6a9:	pop    rdi
  40d6aa:	movsxd esi,DWORD PTR [rbp+0x6c]
  40d6ad:	je     0x40d724
  40d6af:	jb     0x40d716
  40d6b1:	add    BYTE PTR [rdi+0x65],al
  40d6b4:	je     0x40d709
  40d6b6:	je     0x40d72a
  40d6b8:	imul   ebp,DWORD PTR [rsi+0x67],0x72655600
  40d6bf:	jae    0x40d72a
  40d6c1:	outs   dx,DWORD PTR ds:[rsi]
  40d6c2:	outs   dx,BYTE PTR ds:[rsi]
  40d6c3:	push   rbx
  40d6c4:	je     0x40d738
  40d6c6:	imul   ebp,DWORD PTR [rsi+0x67],0x6a614d00
  40d6cd:	outs   dx,DWORD PTR ds:[rsi]
  40d6ce:	jb     0x40d726
  40d6d0:	gs jb  0x40d746
  40d6d3:	imul   ebp,DWORD PTR [rdi+0x6e],0x69754200
  40d6da:	ins    BYTE PTR es:[rdi],dx
  40d6db:	fs push rsi
  40d6dd:	gs jb  0x40d753
  40d6e0:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f725000
  40d6e7:	fs jne 0x40d74d
  40d6ea:	je     0x40d742
  40d6ec:	gs jb  0x40d762
  40d6ef:	imul   ebp,DWORD PTR [rdi+0x6e],0x69727453
  40d6f6:	outs   dx,BYTE PTR ds:[rsi]
  40d6f7:	add    BYTE PTR [eax+0x72],dl
  40d6fb:	outs   dx,DWORD PTR ds:[rsi]
  40d6fc:	fs jne 0x40d762
  40d6ff:	je     0x40d74f
  40d701:	(bad)  
  40d702:	ins    DWORD PTR es:[rdi],dx
  40d703:	gs push rbx
  40d705:	je     0x40d779
  40d707:	imul   ebp,DWORD PTR [rsi+0x67],0x6f725000
  40d70e:	fs jne 0x40d774
  40d711:	je     0x40d761
  40d713:	(bad)  
  40d714:	ins    DWORD PTR es:[rdi],dx
  40d715:	gs rex.X jb 0x40d77a
  40d719:	outs   dx,BYTE PTR ds:[rsi]
  40d71a:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x69727453
  40d722:	outs   dx,BYTE PTR ds:[rsi]
  40d723:	add    BYTE PTR [esi+0x65],dl
  40d727:	jb     0x40d79c
  40d729:	imul   ebp,DWORD PTR [rdi+0x6e],0x61636f4c
  40d730:	je     0x40d79b
  40d732:	outs   dx,DWORD PTR ds:[rsi]
  40d733:	outs   dx,BYTE PTR ds:[rsi]
  40d734:	push   rbx
  40d735:	je     0x40d7a9
  40d737:	imul   ebp,DWORD PTR [rsi+0x67],0x72655600
  40d73e:	jae    0x40d7a9
  40d740:	outs   dx,DWORD PTR ds:[rsi]
  40d741:	outs   dx,BYTE PTR ds:[rsi]
  40d742:	rex.W
  40d743:	gs ins BYTE PTR es:[rdi],dx
  40d745:	jo     0x40d792
  40d747:	gs jns 0x40d7c1
  40d74a:	outs   dx,DWORD PTR ds:[rsi]
  40d74b:	jb     0x40d7b1
  40d74d:	push   rax
  40d74e:	jb     0x40d7b5
  40d750:	imul   di,WORD PTR [rax+0x0],0x6556
  40d756:	jb     0x40d7cb
  40d758:	imul   ebp,DWORD PTR [rdi+0x6e],0x706c6548
  40d75f:	push   rbx
  40d760:	gs je  0x40d7d7
  40d763:	imul   ebp,DWORD PTR [rsi+0x67],0x6b6f5473
  40d76a:	outs   dx,BYTE PTR gs:[rsi]
  40d76c:	add    BYTE PTR [rbx+0x65],dl
  40d76f:	je     0x40d7e6
  40d771:	jo     0x40d7c6
  40d773:	jne    0x40d7e5
  40d775:	jo     0x40d7e6
  40d777:	jb     0x40d7ed
  40d779:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40d77b:	ins    BYTE PTR es:[rdi],dx
  40d77c:	fs gs jb 0x40d780
  40d780:	gs jbe 0x40d7e4
  40d783:	ins    BYTE PTR es:[rdi],dx
  40d784:	push   rsp
  40d785:	imul   ebp,DWORD PTR [rbp+0x65],0x626d6f42
  40d78c:	push   rsi
  40d78d:	(bad)  
  40d78e:	ins    BYTE PTR es:[rdi],dx
  40d78f:	jne    0x40d7f6
  40d791:	add    BYTE PTR [rbx+0x75],ah
  40d794:	jb     0x40d808
  40d796:	outs   dx,BYTE PTR gs:[rsi]
  40d798:	je     0x40d7ec
  40d79a:	gs ins BYTE PTR es:[rdi],dx
  40d79c:	gs (bad) 
  40d79e:	jae    0x40d805
  40d7a0:	push   rsp
  40d7a1:	imul   ebp,DWORD PTR [rbp+0x65],0x626d6f42
  40d7a8:	push   rsi
  40d7a9:	(bad)  
  40d7aa:	ins    BYTE PTR es:[rdi],dx
  40d7ab:	jne    0x40d812
  40d7ad:	add    BYTE PTR [rsi+0x65],dl
  40d7b0:	jb     0x40d825
  40d7b2:	imul   ebp,DWORD PTR [rdi+0x6e],0x53444942
  40d7b9:	rex.W
  40d7ba:	gs ins BYTE PTR es:[rdi],dx
  40d7bc:	jo     0x40d80c
  40d7be:	(bad)  
  40d7bf:	ins    DWORD PTR es:[rdi],dx
  40d7c0:	gs jae 0x40d833
  40d7c3:	(bad)  
  40d7c4:	movsxd esp,DWORD PTR [rbp+0x0]
  40d7c7:	addr32 gs je 0x40d82a
  40d7cb:	push   rsi
  40d7cc:	gs jb  0x40d842
  40d7cf:	imul   ebp,DWORD PTR [rdi+0x6e],0x706c6548
  40d7d6:	rex.WRX (bad) 
  40d7d8:	ins    DWORD PTR es:[rdi],dx
  40d7d9:	gs jae 0x40d84c
  40d7dc:	(bad)  
  40d7dd:	movsxd esp,DWORD PTR [rbp+0x0]
  40d7e0:	push   rsi
  40d7e1:	gs jb  0x40d857
  40d7e4:	imul   ebp,DWORD PTR [rdi+0x6e],0x706c6548
  40d7eb:	rex.WRX (bad) 
  40d7ed:	ins    DWORD PTR es:[rdi],dx
  40d7ee:	gs jae 0x40d861
  40d7f1:	(bad)  
  40d7f2:	movsxd esp,DWORD PTR [rbp+0x0]
  40d7f5:	push   rbx
  40d7f6:	gs je  0x40d86e
  40d7f9:	jo     0x40d847
  40d7fb:	(bad)  
  40d7fc:	jne    0x40d86c
  40d7fe:	movsxd ebp,DWORD PTR [rax+0x69]
  40d801:	outs   dx,BYTE PTR ds:[rsi]
  40d802:	imul   r13d,DWORD PTR [ebp+r12d*2+0x4e],0x656d61
  40d80c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
  40d814:	je     0x40d844
  40d816:	push   rbx
  40d817:	jno    0x40d885
  40d819:	push   rbx
  40d81a:	gs jb  0x40d893
  40d81d:	gs jb  0x40d84e
  40d820:	rex.XB push 0x656e6961
  40d826:	jb     0x40d856
  40d828:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40d82a:	data16 jb 0x40d88e
  40d82d:	jae    0x40d8a3
  40d82f:	jb     0x40d8a6
  40d831:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  40d835:	add    BYTE PTR gs:[rbx+0x6f],al
  40d839:	outs   dx,BYTE PTR ds:[rsi]
  40d83a:	imul   sp,WORD PTR [rdi+0x41],0x7463
  40d840:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e656353
  40d847:	(bad)  
  40d848:	jb     0x40d8b3
  40d84a:	outs   dx,DWORD PTR ds:[rsi]
  40d84b:	add    BYTE PTR [rcx+0x63],ah
  40d84e:	je     0x40d8b9
  40d850:	outs   dx,DWORD PTR ds:[rsi]
  40d851:	outs   dx,BYTE PTR ds:[rsi]
  40d852:	add    BYTE PTR [rcx+0x6e],ch
  40d855:	jae    0x40d8cb
  40d857:	(bad)  
  40d858:	ins    BYTE PTR es:[rdi],dx
  40d859:	ins    BYTE PTR es:[rdi],dx
  40d85a:	ins    DWORD PTR es:[rdi],dx
  40d85b:	gs imul esp,DWORD PTR fs:[rcx+0x50],0x687461
  40d864:	push   rbx
  40d865:	jns    0x40d8da
  40d867:	je     0x40d8ce
  40d869:	ins    DWORD PTR es:[rdi],dx
  40d86a:	rex.XB outs dx,DWORD PTR cs:[rsi]
  40d86d:	ins    BYTE PTR es:[rdi],dx
  40d86e:	ins    BYTE PTR es:[rdi],dx
  40d86f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40d874:	outs   dx,BYTE PTR ds:[rsi]
  40d875:	jae    0x40d8a5
  40d877:	rex.RXB
  40d878:	outs   dx,BYTE PTR gs:[rsi]
  40d87a:	gs jb  0x40d8e6
  40d87d:	movsxd eax,DWORD PTR [rax]
  40d87f:	imul   r14,QWORD PTR [rbx+0x74],0x63003160
  40d887:	push   0x656e6961
  40d88c:	jb     0x40d8d1
  40d88e:	outs   dx,DWORD PTR ds:[rsi]
  40d88f:	ins    DWORD PTR es:[rdi],dx
  40d890:	ins    DWORD PTR es:[rdi],dx
  40d891:	(bad)  
  40d892:	outs   dx,BYTE PTR ds:[rsi]
  40d893:	imul   r13,QWORD PTR fs:[rsi+0x65],0x75677241
  40d89c:	ins    DWORD PTR es:[rdi],dx
  40d89d:	outs   dx,BYTE PTR gs:[rsi]
  40d89f:	je     0x40d914
  40d8a1:	add    BYTE PTR [rbx+0x6f],ah
  40d8a4:	outs   dx,BYTE PTR ds:[rsi]
  40d8a5:	je     0x40d919
  40d8a7:	outs   dx,DWORD PTR ds:[rsi]
  40d8a8:	ins    BYTE PTR es:[rdi],dx
  40d8a9:	add    BYTE PTR [rbp+0x69],cl
  40d8ac:	movsxd esi,DWORD PTR [rdx+0x6f]
  40d8af:	jae    0x40d920
  40d8b1:	data16 je 0x40d8e2
  40d8b4:	push   rbx
  40d8b5:	jno    0x40d923
  40d8b7:	push   rbx
  40d8b8:	gs jb  0x40d931
  40d8bb:	gs jb  0x40d8ec
  40d8be:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40d8c0:	outs   dx,BYTE PTR ds:[rsi]
  40d8c1:	imul   sp,WORD PTR [rdi+0x75],0x6172
  40d8c7:	je     0x40d932
  40d8c9:	outs   dx,DWORD PTR ds:[rsi]
  40d8ca:	outs   dx,BYTE PTR ds:[rsi]
  40d8cb:	cs push rbx
  40d8cd:	movsxd ebp,DWORD PTR [rdi+0x0]
  40d8d0:	rex.XB jne 0x40d946
  40d8d3:	je     0x40d944
  40d8d5:	ins    DWORD PTR es:[rdi],dx
  40d8d6:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40d8d8:	ins    BYTE PTR es:[rdi],dx
  40d8d9:	fs gs jb 0x40d91f
  40d8dd:	jb     0x40d94e
  40d8df:	ja     0x40d954
  40d8e1:	gs jb  0x40d8e4
  40d8e4:	outs   dx,WORD PTR ds:[rsi]
  40d8e6:	ins    BYTE PTR es:[rdi],dx
  40d8e7:	fs gs jb 0x40d92d
  40d8eb:	jb     0x40d95c
  40d8ed:	ja     0x40d962
  40d8ef:	gs jb  0x40d8f2
  40d8f2:	addr32 gs je 0x40d955
  40d8f6:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40d8f8:	jae    0x40d96e
  40d8fa:	(bad)  
  40d8fb:	ins    BYTE PTR es:[rdi],dx
  40d8fc:	ins    BYTE PTR es:[rdi],dx
  40d8fd:	ins    DWORD PTR es:[rdi],dx
  40d8fe:	gs imul esp,DWORD PTR fs:[rcx+0x50],0x687461
  40d907:	rex.B
  40d908:	fs fs rex.RX
  40d90b:	gs (bad) 
  40d90d:	je     0x40d984
  40d90f:	jb     0x40d976
  40d911:	jae    0x40d913
  40d913:	push   rdx
  40d914:	gs ins DWORD PTR es:[rdi],dx
  40d916:	outs   dx,DWORD PTR ds:[rsi]
  40d917:	jbe    0x40d97e
  40d919:	rex.RX
  40d91a:	gs (bad) 
  40d91c:	je     0x40d993
  40d91e:	jb     0x40d985
  40d920:	jae    0x40d922
  40d922:	push   rdx
  40d923:	gs jo  0x40d987
  40d926:	imul   esi,DWORD PTR [rdx+0x0],0x63657845
  40d92d:	jne    0x40d9a3
  40d92f:	gs push r10
  40d932:	push   rax
  40d933:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
  40d938:	outs   dx,BYTE PTR ds:[rsi]
  40d939:	add    BYTE PTR [rcx+riz*2+0x75],cl
  40d93d:	outs   dx,BYTE PTR ds:[rsi]
  40d93e:	movsxd ebp,DWORD PTR [rax+0x42]
  40d941:	outs   dx,DWORD PTR ds:[rsi]
  40d942:	outs   dx,DWORD PTR ds:[rsi]
  40d943:	je     0x40d9b8
  40d945:	je     0x40d9b9
  40d947:	(bad)  
  40d948:	jo     0x40d98b
  40d94a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40d94e:	outs   dx,BYTE PTR ds:[rsi]
  40d94f:	add    BYTE PTR [rbp+riz*2+0x78],dl
  40d953:	je     0x40d997
  40d955:	outs   dx,DWORD PTR ds:[rsi]
  40d956:	js     0x40d9ae
  40d958:	(bad)  
  40d959:	ins    BYTE PTR es:[rdi],dx
  40d95a:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x466e6f69
  40d962:	(bad)  
  40d963:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6e657645
  40d96b:	je     0x40d9ae
  40d96d:	jb     0x40d9d6
  40d96f:	jae    0x40d971
  40d971:	outs   dx,WORD PTR ds:[rsi]
  40d973:	ins    BYTE PTR es:[rdi],dx
  40d974:	fs gs jb 0x40d9ba
  40d978:	jb     0x40d9e9
  40d97a:	ja     0x40d9ef
  40d97c:	gs jb  0x40d9de
  40d97f:	push   rsi
  40d980:	(bad)  
  40d981:	ins    BYTE PTR es:[rdi],dx
  40d982:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x466e6f69
  40d98a:	(bad)  
  40d98b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x61694400
  40d993:	ins    BYTE PTR es:[rdi],dx
  40d994:	outs   dx,DWORD PTR ds:[rsi]
  40d995:	addr32 push rdx
  40d997:	gs jae 0x40da0f
  40d99a:	ins    BYTE PTR es:[rdi],dx
  40d99b:	je     0x40d99d
  40d99d:	rex.WRB
  40d99e:	gs jae 0x40da14
  40d9a1:	(bad)  
  40d9a2:	rex.X outs dx,DWORD PTR gs:[esi]
  40d9a6:	js     0x40d9ea
  40d9a8:	jne    0x40da1e
  40d9aa:	je     0x40da1b
  40d9ac:	outs   dx,BYTE PTR ds:[rsi]
  40d9ad:	jae    0x40d9af
  40d9af:	push   rbx
  40d9b0:	push   0x7245776f
  40d9b5:	jb     0x40da26
  40d9b7:	jb     0x40d9b9
  40d9b9:	push   rbx
  40d9ba:	jns    0x40da2f
  40d9bc:	je     0x40da23
  40d9be:	ins    DWORD PTR es:[rdi],dx
  40d9bf:	rex.XB outs dx,DWORD PTR cs:[rsi]
  40d9c2:	ins    DWORD PTR es:[rdi],dx
  40d9c3:	jo     0x40da34
  40d9c5:	outs   dx,BYTE PTR ds:[rsi]
  40d9c6:	outs   dx,BYTE PTR gs:[rsi]
  40d9c8:	je     0x40da17
  40d9ca:	outs   dx,DWORD PTR ds:[rsi]
  40d9cb:	fs gs ins BYTE PTR es:[rdi],dx
  40d9ce:	add    BYTE PTR [rcx+0x43],cl
  40d9d1:	outs   dx,DWORD PTR ds:[rsi]
  40d9d2:	outs   dx,BYTE PTR ds:[rsi]
  40d9d3:	je     0x40da36
  40d9d5:	imul   ebp,DWORD PTR [rsi+0x65],0x6f630072
  40d9dc:	ins    DWORD PTR es:[rdi],dx
  40d9dd:	jo     0x40da4e
  40d9df:	outs   dx,BYTE PTR ds:[rsi]
  40d9e0:	outs   dx,BYTE PTR gs:[rsi]
  40d9e2:	je     0x40da57
  40d9e4:	add    BYTE PTR [rcx+rbp*2+0x73],al
  40d9e8:	jo     0x40da59
  40d9ea:	jae    0x40da51
  40d9ec:	add    BYTE PTR [rcx+0x6e],cl
  40d9ef:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40d9f7:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40d9f9:	ins    DWORD PTR es:[rdi],dx
  40d9fa:	jo     0x40da6b
  40d9fc:	outs   dx,BYTE PTR ds:[rsi]
  40d9fd:	outs   dx,BYTE PTR gs:[rsi]
  40d9ff:	je     0x40da01
  40da01:	push   rax
  40da02:	(bad)  
  40da03:	outs   dx,BYTE PTR ds:[rsi]
  40da04:	gs ins BYTE PTR es:[rdi],dx
  40da06:	add    BYTE PTR [rbx+0x6f],ah
  40da09:	outs   dx,BYTE PTR ds:[rsi]
  40da0a:	je     0x40da7e
  40da0c:	outs   dx,DWORD PTR ds:[rsi]
  40da0d:	ins    BYTE PTR es:[rdi],dx
  40da0e:	rex.W outs dx,DWORD PTR ds:[rsi]
  40da10:	jae    0x40da86
  40da12:	push   rax
  40da13:	(bad)  
  40da14:	outs   dx,BYTE PTR ds:[rsi]
  40da15:	gs ins BYTE PTR es:[rdi],dx
  40da17:	add    BYTE PTR [rcx+0x6e],cl
  40da1a:	jae    0x40da90
  40da1c:	(bad)  
  40da1d:	ins    BYTE PTR es:[rdi],dx
  40da1e:	ins    BYTE PTR es:[rdi],dx
  40da1f:	ins    DWORD PTR es:[rdi],dx
  40da20:	gs imul esp,DWORD PTR fs:[rcx+0x50],0x687461
  40da29:	rex.WRB (bad) 
  40da2b:	imul   ebp,DWORD PTR [rsi+0x0],0x74736f68
  40da32:	add    BYTE PTR [rbx+0x65],dh
  40da35:	je     0x40da96
  40da37:	rex.W outs dx,DWORD PTR ds:[rsi]
  40da39:	jae    0x40daaf
  40da3b:	add    BYTE PTR [rcx+rbp*2+0x6e],cl
  40da3f:	imul   ecx,DWORD PTR [rcx+riz*2+0x62],0x65
  40da44:	ins    BYTE PTR es:[rdi],dx
  40da45:	imul   r13,QWORD PTR [rsi+0x6b],0x63696c43
  40da4d:	imul   esp,DWORD PTR [rbp+0x64],0x45
  40da51:	jbe    0x40dab8
  40da53:	outs   dx,BYTE PTR ds:[rsi]
  40da54:	je     0x40da97
  40da56:	jb     0x40dabf
  40da58:	jae    0x40da5a
  40da5a:	(bad)  
  40da5b:	fs fs rex.RX
  40da5e:	gs (bad) 
  40da60:	je     0x40dad7
  40da62:	jb     0x40dac9
  40da64:	imul   r13,QWORD PTR [rsi+0x6b],0x6562614c
  40da6c:	ins    BYTE PTR es:[rdi],dx
  40da6d:	pop    rdi
  40da6e:	imul   r13,QWORD PTR [rsi+0x6b],0x63696c43
  40da76:	imul   esp,DWORD PTR [rbp+0x64],0x0
  40da7a:	jb     0x40dae1
  40da7c:	jo     0x40dadf
  40da7e:	imul   esi,DWORD PTR [rdx+0x4c],0x4c6b6e69
  40da85:	(bad)  
  40da86:	(bad)  
  40da87:	gs ins BYTE PTR es:[rdi],dx
  40da89:	pop    rdi
  40da8a:	imul   r13,QWORD PTR [rsi+0x6b],0x63696c43
  40da92:	imul   esp,DWORD PTR [rbp+0x64],0x0
  40da96:	jb     0x40dafd
  40da98:	ins    DWORD PTR es:[rdi],dx
  40da99:	outs   dx,DWORD PTR ds:[rsi]
  40da9a:	jbe    0x40db01
  40da9c:	rex.RX
  40da9d:	gs (bad) 
  40da9f:	je     0x40db16
  40daa1:	jb     0x40db08
  40daa3:	jae    0x40daf1
  40daa5:	imul   ebp,DWORD PTR [rsi+0x6b],0x6562614c
  40daac:	ins    BYTE PTR es:[rdi],dx
  40daad:	pop    rdi
  40daae:	imul   r13,QWORD PTR [rsi+0x6b],0x63696c43
  40dab6:	imul   esp,DWORD PTR [rbp+0x64],0x0
  40daba:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
  40dac2:	je     0x40daf2
  40dac4:	push   rbx
  40dac5:	jno    0x40db33
  40dac7:	push   rbx
  40dac8:	gs jb  0x40db41
  40dacb:	gs jb  0x40dafc
  40dace:	rex.WRB (bad) 
  40dad0:	outs   dx,BYTE PTR ds:[rsi]
  40dad1:	(bad)  
  40dad2:	gs ins DWORD PTR es:[edi],dx
  40dad5:	outs   dx,BYTE PTR gs:[rsi]
  40dad7:	je     0x40db07
  40dad9:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40dadb:	outs   dx,BYTE PTR ds:[rsi]
  40dadc:	je     0x40db50
  40dade:	outs   dx,DWORD PTR ds:[rsi]
  40dadf:	ins    BYTE PTR es:[rdi],dx
  40dae0:	jae    0x40dae2
  40dae2:	push   rbx
  40dae3:	jno    0x40db51
  40dae5:	push   rbx
  40dae6:	je     0x40db5d
  40dae8:	imul   ebp,DWORD PTR fs:[rdi+0x4c],0x756f7961
  40daf0:	je     0x40db3f
  40daf2:	(bad)  
  40daf3:	outs   dx,BYTE PTR ds:[rsi]
  40daf4:	(bad)  
  40daf5:	addr32 gs jb 0x40daf9
  40daf9:	ins    BYTE PTR es:[rdi],dx
  40dafa:	(bad)  
  40dafb:	jns    0x40db6c
  40dafd:	jne    0x40db73
  40daff:	rex.WRB (bad) 
  40db01:	outs   dx,BYTE PTR ds:[rsi]
  40db02:	(bad)  
  40db03:	addr32 gs jb 0x40db07
  40db07:	push   rsp
  40db08:	(bad)  
  40db09:	(bad)  
  40db0a:	ins    BYTE PTR es:[rdi],dx
  40db0b:	gs rex.WR (bad) 
  40db0e:	jns    0x40db7f
  40db10:	jne    0x40db86
  40db12:	push   rax
  40db13:	(bad)  
  40db14:	outs   dx,BYTE PTR ds:[rsi]
  40db15:	gs ins BYTE PTR es:[rdi],dx
  40db17:	add    BYTE PTR [rcx+riz*2+0x62],dh
  40db1b:	ins    BYTE PTR es:[rdi],dx
  40db1c:	gs rex.WR (bad) 
  40db1f:	jns    0x40db90
  40db21:	jne    0x40db97
  40db23:	push   rax
  40db24:	(bad)  
  40db25:	outs   dx,BYTE PTR ds:[rsi]
  40db26:	gs ins BYTE PTR es:[rdi],dx
  40db28:	xor    DWORD PTR [rax],eax
  40db2a:	push   rax
  40db2b:	imul   esp,DWORD PTR [rbx+0x74],0x42657275
  40db32:	outs   dx,DWORD PTR ds:[rsi]
  40db33:	js     0x40db35
  40db35:	(bad)  
  40db36:	fs fs rex.RX
  40db39:	gs (bad) 
  40db3b:	je     0x40dbb2
  40db3d:	jb     0x40dba4
  40db3f:	push   rax
  40db40:	imul   esp,DWORD PTR [rbx+0x74],0x42657275
  40db47:	outs   dx,DWORD PTR ds:[rsi]
  40db48:	js     0x40db4a
  40db4a:	imul   r13,QWORD PTR [rsi+0x6b],0x6562614c
  40db52:	ins    BYTE PTR es:[rdi],dx
  40db53:	add    BYTE PTR [rcx+0x64],ah
  40db56:	fs rex.RX
  40db58:	gs (bad) 
  40db5a:	je     0x40dbd1
  40db5c:	jb     0x40dbc3
  40db5e:	imul   r13,QWORD PTR [rsi+0x6b],0x6562614c
  40db66:	ins    BYTE PTR es:[rdi],dx
  40db67:	add    BYTE PTR [rcx+riz*2+0x62],cl
  40db6b:	gs ins BYTE PTR es:[rdi],dx
  40db6d:	add    BYTE PTR [rcx+0x64],ah
  40db70:	fs rex.RX
  40db72:	gs (bad) 
  40db74:	je     0x40dbeb
  40db76:	jb     0x40dbdd
  40db78:	rex.R
  40db79:	gs jae 0x40dbdf
  40db7c:	imul   esi,DWORD PTR [rax+0x74],0x6562614c
  40db83:	ins    BYTE PTR es:[rdi],dx
  40db84:	add    BYTE PTR [rdx+0x65],dh
  40db87:	jo     0x40dbea
  40db89:	imul   esi,DWORD PTR [rdx+0x50],0x75746369
  40db90:	jb     0x40dbf7
  40db92:	rex.X outs dx,DWORD PTR ds:[rsi]
  40db94:	js     0x40db96
  40db96:	jb     0x40dbfd
  40db98:	ins    DWORD PTR es:[rdi],dx
  40db99:	outs   dx,DWORD PTR ds:[rsi]
  40db9a:	jbe    0x40dc01
  40db9c:	rex.RX
  40db9d:	gs (bad) 
  40db9f:	je     0x40dc16
  40dba1:	jb     0x40dc08
  40dba3:	jae    0x40dbf5
  40dba5:	imul   esp,DWORD PTR [rbx+0x74],0x42657275
  40dbac:	outs   dx,DWORD PTR ds:[rsi]
  40dbad:	js     0x40dbaf
  40dbaf:	jb     0x40dc16
  40dbb1:	jo     0x40dc14
  40dbb3:	imul   esi,DWORD PTR [rdx+0x4c],0x4c6b6e69
  40dbba:	(bad)  
  40dbbb:	(bad)  
  40dbbc:	gs ins BYTE PTR es:[rdi],dx
  40dbbe:	add    BYTE PTR [rdx+0x65],dh
  40dbc1:	jo     0x40dc24
  40dbc3:	imul   esi,DWORD PTR [rdx+0x44],0x72637365
  40dbca:	imul   esi,DWORD PTR [rax+0x74],0x6562614c
  40dbd1:	ins    BYTE PTR es:[rdi],dx
  40dbd2:	add    BYTE PTR [rdx+0x65],dh
  40dbd5:	ins    DWORD PTR es:[rdi],dx
  40dbd6:	outs   dx,DWORD PTR ds:[rsi]
  40dbd7:	jbe    0x40dc3e
  40dbd9:	rex.RX
  40dbda:	gs (bad) 
  40dbdc:	je     0x40dc53
  40dbde:	jb     0x40dc45
  40dbe0:	jae    0x40dc2e
  40dbe2:	imul   ebp,DWORD PTR [rsi+0x6b],0x6562614c
  40dbe9:	ins    BYTE PTR es:[rdi],dx
  40dbea:	add    BYTE PTR [rcx+riz*2+0x62],ch
  40dbee:	gs ins BYTE PTR es:[rdi],dx
  40dbf0:	xor    DWORD PTR [rax],eax
  40dbf2:	rex.W outs dx,DWORD PTR ds:[rsi]
  40dbf4:	jae    0x40dc6a
  40dbf6:	add    BYTE PTR [rdx+0x65],dh
  40dbf9:	jae    0x40dc6a
  40dbfb:	jne    0x40dc6f
  40dbfd:	movsxd esp,DWORD PTR [rbp+0x4d]
  40dc00:	(bad)  
  40dc01:	outs   dx,BYTE PTR ds:[rsi]
  40dc02:	add    BYTE PTR [rdx+0x65],dh
  40dc05:	jae    0x40dc76
  40dc07:	jne    0x40dc7b
  40dc09:	movsxd esp,DWORD PTR [rbp+0x43]
  40dc0c:	jne    0x40dc7a
  40dc0e:	je     0x40dc85
  40dc10:	jb     0x40dc77
  40dc12:	add    BYTE PTR [rdi+0x65],ah
  40dc15:	je     0x40dc76
  40dc17:	push   rdx
  40dc18:	gs jae 0x40dc8a
  40dc1b:	jne    0x40dc8f
  40dc1d:	movsxd esp,DWORD PTR [rbp+0x4d]
  40dc20:	(bad)  
  40dc21:	outs   dx,BYTE PTR ds:[rsi]
  40dc22:	(bad)  
  40dc23:	addr32 gs jb 0x40dc27
  40dc27:	push   rbx
  40dc28:	jns    0x40dc9d
  40dc2a:	je     0x40dc91
  40dc2c:	ins    DWORD PTR es:[rdi],dx
  40dc2d:	cs rex.R jb 0x40dc92
  40dc31:	ja     0x40dc9c
  40dc33:	outs   dx,BYTE PTR ds:[rsi]
  40dc34:	add    BYTE PTR [edx+0x69],al
  40dc38:	je     0x40dca7
  40dc3a:	(bad)  
  40dc3b:	jo     0x40dc3d
  40dc3d:	addr32 gs je 0x40dca0
  40dc41:	push   rbx
  40dc42:	rex.WR push rax
  40dc44:	xor    BYTE PTR [rbx],dh
  40dc46:	xor    ebx,DWORD PTR [rdi+0x4d]
  40dc49:	(bad)  
  40dc4a:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
  40dc51:	movsxd esp,DWORD PTR [rbp+0x41]
  40dc54:	fs fs rex.WRXB jb 0x40dcab
  40dc59:	gs ins DWORD PTR es:[rdi],dx
  40dc5b:	outs   dx,DWORD PTR ds:[rsi]
  40dc5c:	jbe    0x40dcc3
  40dc5e:	rex.RX
  40dc5f:	gs (bad) 
  40dc61:	je     0x40dcd8
  40dc63:	jb     0x40dcca
  40dc65:	jae    0x40dcc6
  40dc67:	xor    esi,DWORD PTR [rdx]
  40dc69:	add    BYTE PTR [rdi+0x65],ah
  40dc6c:	je     0x40dccd
  40dc6e:	push   rbx
  40dc6f:	rex.WR push rax
  40dc71:	xor    BYTE PTR [rbx],dh
  40dc73:	xor    eax,0x69614d5f
  40dc78:	outs   dx,BYTE PTR ds:[rsi]
  40dc79:	je     0x40dce0
  40dc7b:	outs   dx,BYTE PTR ds:[rsi]
  40dc7c:	(bad)  
  40dc7d:	outs   dx,BYTE PTR ds:[rsi]
  40dc7e:	movsxd esp,DWORD PTR [rbp+0x52]
  40dc81:	gs jo  0x40dce5
  40dc84:	imul   esi,DWORD PTR [rdx+0x5f],0x67003233
  40dc8b:	gs je  0x40dced
  40dc8e:	push   rbx
  40dc8f:	rex.WR push rax
  40dc91:	xor    BYTE PTR [rbx],dh
  40dc93:	cmp    DWORD PTR [rdi+0x55],ebx
  40dc96:	outs   dx,BYTE PTR ds:[rsi]
  40dc97:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  40dc9e:	movsxd rbp,DWORD PTR [r15+0x6e]
  40dca2:	pop    rdi
  40dca3:	xor    esi,DWORD PTR [rdx]
  40dca5:	add    BYTE PTR [rbx+0x4c],dl
  40dca8:	push   rax
  40dca9:	xor    BYTE PTR [rbx],dh
  40dcab:	xor    ebx,DWORD PTR [rdi+0x4d]
  40dcae:	(bad)  
  40dcaf:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
  40dcb6:	movsxd esp,DWORD PTR [rbp+0x41]
  40dcb9:	fs fs rex.WRXB jb 0x40dd10
  40dcbe:	gs ins DWORD PTR es:[rdi],dx
  40dcc0:	outs   dx,DWORD PTR ds:[rsi]
  40dcc1:	jbe    0x40dd28
  40dcc3:	rex.RX
  40dcc4:	gs (bad) 
  40dcc6:	je     0x40dd3d
  40dcc8:	jb     0x40dd2f
  40dcca:	jae    0x40dd2b
  40dccc:	xor    esi,DWORD PTR [rdx]
  40dcce:	add    BYTE PTR [rbx+0x4c],dl
  40dcd1:	push   rax
  40dcd2:	xor    BYTE PTR [rbx],dh
  40dcd4:	xor    eax,0x69614d5f
  40dcd9:	outs   dx,BYTE PTR ds:[rsi]
  40dcda:	je     0x40dd41
  40dcdc:	outs   dx,BYTE PTR ds:[rsi]
  40dcdd:	(bad)  
  40dcde:	outs   dx,BYTE PTR ds:[rsi]
  40dcdf:	movsxd esp,DWORD PTR [rbp+0x52]
  40dce2:	gs jo  0x40dd46
  40dce5:	imul   esi,DWORD PTR [rdx+0x5f],0x53003233
  40dcec:	rex.WR push rax
  40dcee:	xor    BYTE PTR [rbx],dh
  40dcf0:	cmp    DWORD PTR [rdi+0x55],ebx
  40dcf3:	outs   dx,BYTE PTR ds:[rsi]
  40dcf4:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  40dcfb:	movsxd rbp,DWORD PTR [r15+0x6e]
  40dcff:	pop    rdi
  40dd00:	xor    esi,DWORD PTR [rdx]
  40dd02:	add    BYTE PTR [rbx+0x79],dl
  40dd05:	jae    0x40dd7b
  40dd07:	gs ins DWORD PTR es:[rdi],dx
  40dd09:	cs push rdx
  40dd0b:	jne    0x40dd7b
  40dd0d:	je     0x40dd78
  40dd0f:	ins    DWORD PTR es:[rdi],dx
  40dd10:	gs rex.WB outs dx,BYTE PTR cs:[rsi]
  40dd14:	je     0x40dd7b
  40dd16:	jb     0x40dd87
  40dd18:	jo     0x40dd6d
  40dd1a:	gs jb  0x40dd93
  40dd1d:	imul   esp,DWORD PTR [rbx+0x65],0x75470073
  40dd24:	imul   esp,DWORD PTR [rcx+rax*2+0x74],0x62697274
  40dd2c:	jne    0x40dda2
  40dd2e:	add    BYTE PTR gs:[rbx+0x6f],al
  40dd32:	ins    DWORD PTR es:[rdi],dx
  40dd33:	push   rsi
  40dd34:	imul   esi,DWORD PTR [rbx+0x69],0x41656c62
  40dd3b:	je     0x40ddb1
  40dd3d:	jb     0x40dda8
  40dd3f:	(bad)  
  40dd40:	jne    0x40ddb6
  40dd42:	add    BYTE PTR gs:[rbx+0x79],dl
  40dd46:	jae    0x40ddbc
  40dd48:	gs ins DWORD PTR es:[rdi],dx
  40dd4a:	cs push rdx
  40dd4c:	gs data16 ins BYTE PTR es:[rdi],dx
  40dd4f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40dd54:	outs   dx,BYTE PTR ds:[rsi]
  40dd55:	add    BYTE PTR [rcx+0x73],al
  40dd58:	jae    0x40ddbf
  40dd5a:	ins    DWORD PTR es:[rdi],dx
  40dd5b:	(bad)  
  40dd5c:	ins    BYTE PTR es:[rdi],dx
  40dd5d:	jns    0x40dda2
  40dd5f:	jne    0x40ddcd
  40dd61:	je     0x40ddd8
  40dd63:	jb     0x40ddca
  40dd65:	rex.B je 0x40dddc
  40dd68:	jb     0x40ddd3
  40dd6a:	(bad)  
  40dd6b:	jne    0x40dde1
  40dd6d:	add    BYTE PTR gs:[rcx+0x73],al
  40dd71:	jae    0x40ddd8
  40dd73:	ins    DWORD PTR es:[rdi],dx
  40dd74:	(bad)  
  40dd75:	ins    BYTE PTR es:[rdi],dx
  40dd76:	jns    0x40ddbb
  40dd78:	outs   dx,DWORD PTR ds:[rsi]
  40dd79:	outs   dx,BYTE PTR ds:[rsi]
  40dd7a:	imul   sp,WORD PTR [rdi+0x75],0x6172
  40dd80:	je     0x40ddeb
  40dd82:	outs   dx,DWORD PTR ds:[rsi]
  40dd83:	outs   dx,BYTE PTR ds:[rsi]
  40dd84:	rex.B je 0x40ddfb
  40dd87:	jb     0x40ddf2
  40dd89:	(bad)  
  40dd8a:	jne    0x40de00
  40dd8c:	add    BYTE PTR gs:[rcx+0x73],al
  40dd90:	jae    0x40ddf7
  40dd92:	ins    DWORD PTR es:[rdi],dx
  40dd93:	(bad)  
  40dd94:	ins    BYTE PTR es:[rdi],dx
  40dd95:	jns    0x40dddb
  40dd97:	gs jae 0x40ddfd
  40dd9a:	jb     0x40de05
  40dd9c:	jo     0x40de12
  40dd9e:	imul   ebp,DWORD PTR [rdi+0x6e],0x72747441
  40dda5:	imul   esp,DWORD PTR [rdx+0x75],0x41006574
  40ddac:	jae    0x40de21
  40ddae:	gs ins DWORD PTR es:[rdi],dx
  40ddb0:	(bad)  
  40ddb1:	ins    BYTE PTR es:[rdi],dx
  40ddb2:	jns    0x40de08
  40ddb4:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x72747441
  40ddbc:	imul   esp,DWORD PTR [rdx+0x75],0x41006574
  40ddc3:	jae    0x40de38
  40ddc5:	gs ins DWORD PTR es:[rdi],dx
  40ddc7:	(bad)  
  40ddc8:	ins    BYTE PTR es:[rdi],dx
  40ddc9:	jns    0x40de14
  40ddcb:	outs   dx,BYTE PTR ds:[rsi]
  40ddcc:	outs   dx,WORD PTR ds:[rsi]
  40ddce:	jb     0x40de3d
  40ddd0:	(bad)  
  40ddd1:	je     0x40de3c
  40ddd3:	outs   dx,DWORD PTR ds:[rsi]
  40ddd4:	outs   dx,BYTE PTR ds:[rsi]
  40ddd5:	(bad)  
  40ddd6:	ins    BYTE PTR es:[rdi],dx
  40ddd7:	push   rsi
  40ddd8:	gs jb  0x40de4e
  40dddb:	imul   ebp,DWORD PTR [rdi+0x6e],0x72747441
  40dde2:	imul   esp,DWORD PTR [rdx+0x75],0x41006574
  40dde9:	jae    0x40de5e
  40ddeb:	gs ins DWORD PTR es:[rdi],dx
  40dded:	(bad)  
  40ddee:	ins    BYTE PTR es:[rdi],dx
  40ddef:	jns    0x40de37
  40ddf1:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
  40ddf9:	outs   dx,DWORD PTR ds:[rsi]
  40ddfa:	outs   dx,BYTE PTR ds:[rsi]
  40ddfb:	rex.B je 0x40de72
  40ddfe:	jb     0x40de69
  40de00:	(bad)  
  40de01:	jne    0x40de77
  40de03:	add    BYTE PTR gs:[rcx+0x73],al
  40de07:	jae    0x40de6e
  40de09:	ins    DWORD PTR es:[rdi],dx
  40de0a:	(bad)  
  40de0b:	ins    BYTE PTR es:[rdi],dx
  40de0c:	jns    0x40de64
  40de0e:	gs jb  0x40de84
  40de11:	imul   ebp,DWORD PTR [rdi+0x6e],0x72747441
  40de18:	imul   esp,DWORD PTR [rdx+0x75],0x41006574
  40de1f:	jae    0x40de94
  40de21:	gs ins DWORD PTR es:[rdi],dx
  40de23:	(bad)  
  40de24:	ins    BYTE PTR es:[rdi],dx
  40de25:	jns    0x40de7b
  40de27:	jb     0x40de8a
  40de29:	fs gs ins DWORD PTR es:[rdi],dx
  40de2c:	(bad)  
  40de2d:	jb     0x40de9a
  40de2f:	rex.B je 0x40dea6
  40de32:	jb     0x40de9d
  40de34:	(bad)  
  40de35:	jne    0x40deab
  40de37:	add    BYTE PTR gs:[rcx+0x73],al
  40de3b:	jae    0x40dea2
  40de3d:	ins    DWORD PTR es:[rdi],dx
  40de3e:	(bad)  
  40de3f:	ins    BYTE PTR es:[rdi],dx
  40de40:	jns    0x40de85
  40de42:	outs   dx,DWORD PTR ds:[rsi]
  40de43:	jo     0x40debe
  40de45:	jb     0x40deb0
  40de47:	addr32 push 0x74744174
  40de4d:	jb     0x40deb8
  40de4f:	(bad)  
  40de50:	jne    0x40dec6
  40de52:	add    BYTE PTR gs:[rcx+0x73],al
  40de56:	jae    0x40debd
  40de58:	ins    DWORD PTR es:[rdi],dx
  40de59:	(bad)  
  40de5a:	ins    BYTE PTR es:[rdi],dx
  40de5b:	jns    0x40dead
  40de5d:	jb     0x40dece
  40de5f:	fs jne 0x40dec5
  40de62:	je     0x40dea5
  40de64:	je     0x40deda
  40de66:	jb     0x40ded1
  40de68:	(bad)  
  40de69:	jne    0x40dedf
  40de6b:	add    BYTE PTR gs:[rcx+0x73],al
  40de6f:	jae    0x40ded6
  40de71:	ins    DWORD PTR es:[rdi],dx
  40de72:	(bad)  
  40de73:	ins    BYTE PTR es:[rdi],dx
  40de74:	jns    0x40deb9
  40de76:	outs   dx,DWORD PTR ds:[rsi]
  40de77:	ins    DWORD PTR es:[rdi],dx
  40de78:	jo     0x40dedb
  40de7a:	outs   dx,BYTE PTR ds:[rsi]
  40de7b:	jns    0x40debe
  40de7d:	je     0x40def3
  40de7f:	jb     0x40deea
  40de81:	(bad)  
  40de82:	jne    0x40def8
  40de84:	add    BYTE PTR gs:[rbx+0x79],dl
  40de88:	jae    0x40defe
  40de8a:	gs ins DWORD PTR es:[rdi],dx
  40de8c:	imul   r12d,DWORD PTR cs:[rcx+0x67],0x74736f6e
  40de95:	imul   esp,DWORD PTR [rbx+0x73],0x62654400
  40de9c:	jne    0x40df05
  40de9e:	addr32 (bad) 
  40dea0:	(bad)  
  40dea1:	ins    BYTE PTR es:[rdi],dx
  40dea2:	gs rex.B je 0x40df1a
  40dea6:	jb     0x40df11
  40dea8:	(bad)  
  40dea9:	jne    0x40df1f
  40deab:	add    BYTE PTR gs:[rbp+riz*2+0x62],al
  40deb0:	jne    0x40df19
  40deb2:	imul   ebp,DWORD PTR [esi+0x67],0x65646f4d
  40deba:	jae    0x40debc
  40debc:	push   rbx
  40debd:	jns    0x40df32
  40debf:	je     0x40df26
  40dec1:	ins    DWORD PTR es:[rdi],dx
  40dec2:	cs push rdx
  40dec4:	jne    0x40df34
  40dec6:	je     0x40df31
  40dec8:	ins    DWORD PTR es:[rdi],dx
  40dec9:	gs rex.XB outs dx,DWORD PTR cs:[rsi]
  40decd:	ins    DWORD PTR es:[rdi],dx
  40dece:	jo     0x40df39
  40ded0:	ins    BYTE PTR es:[rdi],dx
  40ded1:	gs jb  0x40df27
  40ded4:	gs jb  0x40df4d
  40ded7:	imul   esp,DWORD PTR [rbx+0x65],0x6f430073
  40dede:	ins    DWORD PTR es:[rdi],dx
  40dedf:	jo     0x40df4a
  40dee1:	ins    BYTE PTR es:[rdi],dx
  40dee2:	(bad)  
  40dee3:	je     0x40df4e
  40dee5:	outs   dx,DWORD PTR ds:[rsi]
  40dee6:	outs   dx,BYTE PTR ds:[rsi]
  40dee7:	push   rdx
  40dee8:	gs ins BYTE PTR es:[rdi],dx
  40deea:	(bad)  
  40deeb:	js     0x40df4e
  40deed:	je     0x40df58
  40deef:	outs   dx,DWORD PTR ds:[rsi]
  40def0:	outs   dx,BYTE PTR ds:[rsi]
  40def1:	jae    0x40df34
  40def3:	je     0x40df69
  40def5:	jb     0x40df60
  40def7:	(bad)  
  40def8:	jne    0x40df6e
  40defa:	add    BYTE PTR gs:[rdx+0x75],dl
  40defe:	outs   dx,BYTE PTR ds:[rsi]
  40deff:	je     0x40df6a
  40df01:	ins    DWORD PTR es:[rdi],dx
  40df02:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40df05:	ins    DWORD PTR es:[rdi],dx
  40df06:	jo     0x40df69
  40df08:	je     0x40df73
  40df0a:	(bad)  
  40df0b:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x74744179
  40df13:	jb     0x40df7e
  40df15:	(bad)  
  40df16:	jne    0x40df8c
  40df18:	add    BYTE PTR gs:[rbx+0x65],dl
  40df1c:	je     0x40df93
  40df1e:	jo     0x40df61
  40df20:	push   rdx
  40df21:	push   rax
  40df22:	add    BYTE PTR [rbx+0x6f],al
  40df25:	ins    DWORD PTR es:[rdi],dx
  40df26:	jo     0x40df91
  40df28:	ins    BYTE PTR es:[rdi],dx
  40df29:	gs jb  0x40df73
  40df2c:	outs   dx,BYTE PTR gs:[rsi]
  40df2e:	gs jb  0x40df92
  40df31:	je     0x40df98
  40df33:	fs rex.B je 0x40dfab
  40df37:	jb     0x40dfa2
  40df39:	(bad)  
  40df3a:	jne    0x40dfb0
  40df3c:	add    BYTE PTR gs:[rsi+0x61],dh
  40df40:	ins    BYTE PTR es:[rdi],dx
  40df41:	jne    0x40dfa8
  40df43:	add    BYTE PTR [rax+0x61],dh
  40df46:	je     0x40dfb0
  40df48:	add    BYTE PTR [rsi+0x6f],ah
  40df4b:	ins    BYTE PTR es:[rdi],dx
  40df4c:	fs gs jb 0x40df9e
  40df50:	(bad)  
  40df51:	ins    DWORD PTR es:[rdi],dx
  40df52:	add    BYTE PTR gs:[rbx+0x65],ch
  40df56:	jns    0x40df58
  40df58:	(bad)  
  40df59:	jb     0x40dfc2
  40df5b:	xor    BYTE PTR [rax],al
  40df5d:	addr32 gs je 0x40dfc0
  40df61:	rex.XB jne 0x40dfd6
  40df64:	jb     0x40dfcb
  40df66:	outs   dx,BYTE PTR ds:[rsi]
  40df67:	je     0x40dfac
  40df69:	jne    0x40dfd7
  40df6b:	je     0x40dfe2
  40df6d:	jb     0x40dfd4
  40df6f:	add    BYTE PTR [rbx+0x74],dl
  40df72:	jb     0x40dfdd
  40df74:	outs   dx,BYTE PTR ds:[rsi]
  40df75:	add    BYTE PTR [ecx+0x46],cl
  40df79:	outs   dx,DWORD PTR ds:[rsi]
  40df7a:	jb     0x40dfe9
  40df7c:	(bad)  
  40df7d:	je     0x40dfcf
  40df7f:	jb     0x40dff0
  40df81:	jbe    0x40dfec
  40df83:	fs gs jb 0x40df87
  40df87:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40df89:	jb     0x40dff8
  40df8b:	(bad)  
  40df8c:	je     0x40df8e
  40df8e:	movsxd esp,DWORD PTR cs:[rbx+0x74]
  40df92:	outs   dx,DWORD PTR ds:[rsi]
  40df93:	jb     0x40df95
  40df95:	push   rsp
  40df96:	jns    0x40e008
  40df98:	add    BYTE PTR gs:[rdx+0x75],dl
  40df9c:	outs   dx,BYTE PTR ds:[rsi]
  40df9d:	je     0x40e008
  40df9f:	ins    DWORD PTR es:[rdi],dx
  40dfa0:	gs push rsp
  40dfa2:	jns    0x40e014
  40dfa4:	gs rex.W (bad) 
  40dfa7:	outs   dx,BYTE PTR ds:[rsi]
  40dfa8:	fs ins BYTE PTR es:[rdi],dx
  40dfaa:	add    BYTE PTR gs:[rdi+0x65],al
  40dfae:	je     0x40e004
  40dfb0:	jns    0x40e022
  40dfb2:	gs rex.RX jb 0x40e025
  40dfb6:	ins    DWORD PTR es:[rdi],dx
  40dfb7:	rex.W (bad) 
  40dfb9:	outs   dx,BYTE PTR ds:[rsi]
  40dfba:	fs ins BYTE PTR es:[rdi],dx
  40dfbc:	add    BYTE PTR gs:[rdi+0x65],ah
  40dfc0:	je     0x40e021
  40dfc2:	rex.RX jne 0x40e031
  40dfc5:	ins    BYTE PTR es:[rdi],dx
  40dfc6:	rex.WRX (bad) 
  40dfc8:	ins    DWORD PTR es:[rdi],dx
  40dfc9:	add    BYTE PTR gs:[rbp+0x6f],cl
  40dfcd:	fs jne 0x40e03c
  40dfd0:	add    BYTE PTR gs:[rdi+0x65],ah
  40dfd4:	je     0x40e035
  40dfd6:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  40dfd8:	fs jne 0x40e047
  40dfdb:	add    BYTE PTR gs:[rcx+0x73],al
  40dfdf:	jae    0x40e046
  40dfe1:	ins    DWORD PTR es:[rdi],dx
  40dfe2:	(bad)  
  40dfe3:	ins    BYTE PTR es:[rdi],dx
  40dfe4:	jns    0x40dfe6
  40dfe6:	addr32 gs je 0x40e049
  40dfea:	rex.B jae 0x40e060
  40dfed:	gs ins DWORD PTR es:[rdi],dx
  40dfef:	(bad)  
  40dff0:	ins    BYTE PTR es:[rdi],dx
  40dff1:	jns    0x40dff3
  40dff3:	rex.WB
  40dff4:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40dff6:	jne    0x40e065
  40dff8:	gs jb  0x40e05c
  40dffb:	(bad)  
  40dffc:	ins    BYTE PTR es:[rdi],dx
  40dffd:	gs (bad) 
  40dfff:	xor    DWORD PTR [rax],eax
  40e001:	rex.B
  40e002:	fs fs push rdx
  40e005:	(bad)  
  40e006:	outs   dx,BYTE PTR ds:[rsi]
  40e007:	add    BYTE PTR gs:[ebx+0x6f],al
  40e00c:	outs   dx,BYTE PTR ds:[rsi]
  40e00d:	je     0x40e081
  40e00f:	outs   dx,DWORD PTR ds:[rsi]
  40e010:	ins    BYTE PTR es:[rdi],dx
  40e011:	add    BYTE PTR [rbx+0x6f],al
  40e014:	outs   dx,BYTE PTR ds:[rsi]
  40e015:	je     0x40e089
  40e017:	outs   dx,DWORD PTR ds:[rsi]
  40e018:	ins    BYTE PTR es:[rdi],dx
  40e019:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40e01b:	ins    BYTE PTR es:[rdi],dx
  40e01c:	ins    BYTE PTR es:[rdi],dx
  40e01d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e022:	outs   dx,BYTE PTR ds:[rsi]
  40e023:	add    BYTE PTR [rdi+0x65],ah
  40e026:	je     0x40e087
  40e028:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40e02a:	outs   dx,BYTE PTR ds:[rsi]
  40e02b:	je     0x40e09f
  40e02d:	outs   dx,DWORD PTR ds:[rsi]
  40e02e:	ins    BYTE PTR es:[rdi],dx
  40e02f:	jae    0x40e031
  40e031:	rex.B
  40e032:	fs add BYTE PTR fs:[rbx+0x65],dl
  40e037:	je     0x40e07c
  40e039:	push   0x49646c69
  40e03e:	outs   dx,BYTE PTR ds:[rsi]
  40e03f:	fs gs js 0x40e043
  40e043:	rex.R outs dx,DWORD PTR ds:[rsi]
  40e045:	movsxd ebp,DWORD PTR [rbx+0x53]
  40e048:	je     0x40e0c3
  40e04a:	ins    BYTE PTR es:[rdi],dx
  40e04b:	add    BYTE PTR gs:[rbx+0x65],dh
  40e04f:	je     0x40e0b0
  40e051:	rex.R outs dx,DWORD PTR ds:[rsi]
  40e053:	movsxd ebp,DWORD PTR [rbx+0x0]
  40e056:	jae    0x40e0bd
  40e058:	je     0x40e0b9
  40e05a:	rex.R
  40e05b:	gs jae 0x40e0c1
  40e05e:	jb     0x40e0c9
  40e060:	jo     0x40e0d6
  40e062:	imul   ebp,DWORD PTR [rdi+0x6e],0x65764500
  40e069:	outs   dx,BYTE PTR ds:[rsi]
  40e06a:	je     0x40e0b4
  40e06c:	(bad)  
  40e06d:	outs   dx,BYTE PTR ds:[rsi]
  40e06e:	fs ins BYTE PTR es:[rdi],dx
  40e070:	gs jb  0x40e0d3
  40e073:	xor    DWORD PTR [rax],eax
  40e075:	(bad)  
  40e076:	fs fs pop rdi
  40e079:	push   rsi
  40e07a:	(bad)  
  40e07b:	ins    BYTE PTR es:[rdi],dx
  40e07c:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x466e6f69
  40e084:	(bad)  
  40e085:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x64654d00
  40e08d:	imul   esp,DWORD PTR [rcx+0x50],0x687461
  40e094:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40e096:	ins    DWORD PTR es:[rdi],dx
  40e097:	ins    DWORD PTR es:[rdi],dx
  40e098:	outs   dx,DWORD PTR ds:[rsi]
  40e099:	outs   dx,BYTE PTR ds:[rsi]
  40e09a:	imul   r12d,DWORD PTR [rcx+0x6c],0x5300676f
  40e0a2:	push   0x6944776f
  40e0a7:	(bad)  
  40e0a8:	ins    BYTE PTR es:[rdi],dx
  40e0a9:	outs   dx,DWORD PTR ds:[rsi]
  40e0aa:	add    BYTE PTR [edi+0x65],ah
  40e0ae:	je     0x40e10f
  40e0b0:	push   rbx
  40e0b1:	gs ins BYTE PTR es:[rdi],dx
  40e0b3:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  40e0b8:	push   rax
  40e0b9:	(bad)  
  40e0ba:	je     0x40e124
  40e0bc:	add    BYTE PTR [rbx+0x65],dl
  40e0bf:	je     0x40e111
  40e0c1:	(bad)  
  40e0c2:	je     0x40e12c
  40e0c4:	add    BYTE PTR [rdi+0x65],ah
  40e0c7:	je     0x40e128
  40e0c9:	rex.W (bad) 
  40e0cb:	jae    0x40e123
  40e0cd:	(bad)  
  40e0ce:	ins    BYTE PTR es:[rdi],dx
  40e0cf:	imul   esp,DWORD PTR [rax+rdx*2+0x61],0x67006874
  40e0d7:	gs je  0x40e139
  40e0da:	rex.RX jne 0x40e149
  40e0dd:	ins    BYTE PTR es:[rdi],dx
  40e0de:	push   rax
  40e0df:	(bad)  
  40e0e0:	je     0x40e14a
  40e0e2:	add    BYTE PTR [rbp+0x6d],al
  40e0e5:	jo     0x40e15b
  40e0e7:	jns    0x40e0e9
  40e0e9:	push   rbx
  40e0ea:	je     0x40e15e
  40e0ec:	imul   ebp,DWORD PTR [rsi+0x67],0x706d6f43
  40e0f3:	(bad)  
  40e0f4:	jb     0x40e15f
  40e0f6:	jae    0x40e167
  40e0f8:	outs   dx,BYTE PTR ds:[rsi]
  40e0f9:	add    BYTE PTR [rbp+0x71],al
  40e0fc:	jne    0x40e15f
  40e0fe:	ins    BYTE PTR es:[rdi],dx
  40e0ff:	jae    0x40e101
  40e101:	rex.RB js 0x40e167
  40e104:	gs jo  0x40e17b
  40e107:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  40e10e:	pop    rdi
  40e10f:	rex.WRB
  40e110:	gs jae 0x40e186
  40e113:	(bad)  
  40e114:	add    BYTE PTR gs:[ecx+0x73],cl
  40e119:	rex.WRX jne 0x40e188
  40e11c:	ins    BYTE PTR es:[rdi],dx
  40e11d:	rex.WRXB jb 0x40e165
  40e120:	ins    DWORD PTR es:[rdi],dx
  40e121:	jo     0x40e197
  40e123:	jns    0x40e125
  40e125:	rex.WRB
  40e126:	gs imul esp,DWORD PTR fs:[rcx+0x50],0x45687461
  40e12f:	js     0x40e194
  40e131:	gs jo  0x40e1a8
  40e134:	imul   ebp,DWORD PTR [rdi+0x6e],0x74654700
  40e13b:	rex.RB js 0x40e1a3
  40e13e:	movsxd esi,DWORD PTR [rbp+0x74]
  40e141:	imul   ebp,DWORD PTR [rsi+0x67],0x65737341
  40e148:	ins    DWORD PTR es:[rdi],dx
  40e149:	(bad)  
  40e14a:	ins    BYTE PTR es:[rdi],dx
  40e14b:	jns    0x40e14d
  40e14d:	addr32 gs je 0x40e1b0
  40e151:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40e153:	fs gs rex.X (bad) 
  40e157:	jae    0x40e1be
  40e159:	add    BYTE PTR [rbp+0x72],dl
  40e15c:	imul   eax,DWORD PTR [rax],0x5f746567
  40e162:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40e164:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e167:	push   rax
  40e168:	(bad)  
  40e169:	je     0x40e1d3
  40e16b:	add    BYTE PTR [rbx+0x79],dl
  40e16e:	jae    0x40e1e4
  40e170:	gs ins DWORD PTR es:[rdi],dx
  40e172:	cs rex.WB
  40e174:	rex.WRXB add BYTE PTR [r8+0x61],r10b
  40e178:	je     0x40e1e2
  40e17a:	add    BYTE PTR [rdi+0x65],al
  40e17d:	je     0x40e1c3
  40e17f:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
  40e186:	jns    0x40e1d6
  40e188:	(bad)  
  40e189:	ins    DWORD PTR es:[rdi],dx
  40e18a:	add    BYTE PTR gs:[rbx+0x6f],al
  40e18e:	ins    DWORD PTR es:[rdi],dx
  40e18f:	(bad)  
  40e190:	imul   ebp,DWORD PTR [rsi+0x65],0x6c694600
  40e197:	add    BYTE PTR gs:[rbp+0x78],al
  40e19b:	imul   esi,DWORD PTR [rbx+0x74],0x68430073
  40e1a2:	(bad)  
  40e1a3:	imul   ebp,DWORD PTR [rsi+0x65],0x766e4972
  40e1aa:	(bad)  
  40e1ab:	ins    BYTE PTR es:[rdi],dx
  40e1ac:	imul   esp,DWORD PTR [rdi+rcx*2+0x70],0x74617265
  40e1b4:	imul   ebp,DWORD PTR [rdi+0x6e],0x65637845
  40e1bb:	jo     0x40e231
  40e1bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x73795300
  40e1c4:	je     0x40e22b
  40e1c6:	ins    DWORD PTR es:[rdi],dx
  40e1c7:	cs push rsp
  40e1c9:	gs js  0x40e240
  40e1cc:	add    BYTE PTR [rbx+0x74],dl
  40e1cf:	jb     0x40e23a
  40e1d1:	outs   dx,BYTE PTR ds:[rsi]
  40e1d2:	addr32 rex.X jne 0x40e23f
  40e1d6:	ins    BYTE PTR es:[rdi],dx
  40e1d7:	fs gs jb 0x40e1db
  40e1db:	push   rsp
  40e1dc:	outs   dx,DWORD PTR ds:[rsi]
  40e1dd:	push   rbx
  40e1de:	je     0x40e252
  40e1e0:	imul   ebp,DWORD PTR [rsi+0x67],0x70704100
  40e1e7:	outs   dx,BYTE PTR gs:[rsi]
  40e1e9:	add    BYTE PTR fs:[rbp+0x6e],al
  40e1ed:	fs jae 0x40e247
  40e1f0:	imul   esi,DWORD PTR [rax+rbp*2+0x0],0x5f746567
  40e1f8:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40e1fa:	jne    0x40e26a
  40e1fc:	je     0x40e1fe
  40e1fe:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40e200:	jne    0x40e26f
  40e202:	gs jb  0x40e266
  40e205:	je     0x40e276
  40e207:	jb     0x40e209
  40e209:	rex.RXB
  40e20a:	gs je  0x40e252
  40e20d:	outs   dx,BYTE PTR ds:[rsi]
  40e20e:	jne    0x40e27d
  40e210:	gs jb  0x40e274
  40e213:	je     0x40e284
  40e215:	jb     0x40e217
  40e217:	addr32 gs je 0x40e27a
  40e21b:	rex.XB jne 0x40e290
  40e21e:	jb     0x40e285
  40e220:	outs   dx,BYTE PTR ds:[rsi]
  40e221:	je     0x40e223
  40e223:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  40e225:	jbe    0x40e28c
  40e227:	rex.WRX
  40e228:	gs js  0x40e29f
  40e22b:	add    BYTE PTR [rcx+0x44],cl
  40e22e:	imul   esi,DWORD PTR [rbx+0x70],0x6261736f
  40e235:	ins    BYTE PTR es:[rdi],dx
  40e236:	add    BYTE PTR gs:[rax+0x72],dl
  40e23a:	outs   dx,DWORD PTR ds:[rsi]
  40e23b:	movsxd esp,DWORD PTR [rbp+0x73]
  40e23e:	jae    0x40e293
  40e240:	je     0x40e2a3
  40e242:	jb     0x40e2b8
  40e244:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40e246:	outs   dx,WORD PTR ds:[rsi]
  40e248:	add    BYTE PTR [rbx+0x6c],al
  40e24b:	outs   dx,DWORD PTR ds:[rsi]
  40e24c:	jae    0x40e2b3
  40e24e:	add    BYTE PTR [rax+0x72],dl
  40e251:	outs   dx,DWORD PTR ds:[rsi]
  40e252:	movsxd esp,DWORD PTR [rbp+0x73]
  40e255:	jae    0x40e257
  40e257:	push   rbx
  40e258:	je     0x40e2bb
  40e25a:	jb     0x40e2d0
  40e25c:	add    BYTE PTR [rdi+0x61],dl
  40e25f:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x69784572
  40e267:	je     0x40e269
  40e269:	jae    0x40e2d0
  40e26b:	outs   dx,BYTE PTR ds:[rsi]
  40e26c:	fs gs jb 0x40e270
  40e270:	add    BYTE PTR gs:[rdi+0x65],ah
  40e274:	je     0x40e2d5
  40e276:	rex.RB
  40e277:	imul   esi,DWORD PTR fs:[rsp+rdx*2+0x65],0x43007478
  40e280:	(bad)  
  40e281:	outs   dx,BYTE PTR ds:[rsi]
  40e282:	movsxd esp,DWORD PTR [rbp+0x6c]
  40e285:	rex.RB jbe 0x40e2ed
  40e288:	outs   dx,BYTE PTR ds:[rsi]
  40e289:	je     0x40e2cc
  40e28b:	jb     0x40e2f4
  40e28d:	jae    0x40e28f
  40e28f:	jae    0x40e2f6
  40e291:	je     0x40e2f2
  40e293:	rex.XB (bad) 
  40e295:	outs   dx,BYTE PTR ds:[rsi]
  40e296:	movsxd esp,DWORD PTR [rbp+0x6c]
  40e299:	add    BYTE PTR [rbp+0x65],ch
  40e29c:	jae    0x40e311
  40e29e:	(bad)  
  40e29f:	add    BYTE PTR gs:[ebx+0x61],ah
  40e2a4:	jo     0x40e31a
  40e2a6:	imul   ebp,DWORD PTR [rdi+0x6e],0x74756200
  40e2ad:	je     0x40e31e
  40e2af:	outs   dx,BYTE PTR ds:[rsi]
  40e2b0:	add    BYTE PTR [rbp+0x65],cl
  40e2b3:	jae    0x40e328
  40e2b5:	(bad)  
  40e2b6:	rex.X outs dx,DWORD PTR gs:[esi]
  40e2ba:	js     0x40e2bc
  40e2bc:	rex.WB push r15
  40e2be:	imul   ebp,DWORD PTR [rsi+0x33],0x6e695732
  40e2c5:	outs   dx,DWORD PTR fs:[rsi]
  40e2c7:	ja     0x40e2c9
  40e2c9:	rex.WRB
  40e2ca:	gs jae 0x40e340
  40e2cd:	(bad)  
  40e2ce:	rex.X outs dx,DWORD PTR gs:[esi]
  40e2d2:	js     0x40e31d
  40e2d4:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40e2d7:	add    BYTE PTR [rbx+0x68],dl
  40e2da:	outs   dx,DWORD PTR ds:[rsi]
  40e2db:	ja     0x40e2dd
  40e2dd:	imul   esi,DWORD PTR fs:[rbx+0x70],0x6e69736f
  40e2e5:	add    BYTE PTR [ebx+0x6f],al
  40e2e9:	ins    DWORD PTR es:[rdi],dx
  40e2ea:	jo     0x40e35b
  40e2ec:	outs   dx,BYTE PTR ds:[rsi]
  40e2ed:	outs   dx,BYTE PTR gs:[rsi]
  40e2ef:	je     0x40e343
  40e2f1:	gs jae 0x40e363
  40e2f4:	jne    0x40e368
  40e2f6:	movsxd esp,DWORD PTR [rbp+0x4d]
  40e2f9:	(bad)  
  40e2fa:	outs   dx,BYTE PTR ds:[rsi]
  40e2fb:	(bad)  
  40e2fc:	addr32 gs jb 0x40e300
  40e300:	push   rbx
  40e301:	jne    0x40e376
  40e303:	jo     0x40e36a
  40e305:	outs   dx,BYTE PTR ds:[rsi]
  40e306:	fs rex.WR (bad) 
  40e309:	jns    0x40e37a
  40e30b:	jne    0x40e381
  40e30d:	add    BYTE PTR [rcx+0x70],al
  40e310:	jo     0x40e37e
  40e312:	jns    0x40e366
  40e314:	gs jae 0x40e386
  40e317:	jne    0x40e38b
  40e319:	movsxd esp,DWORD PTR [rbp+0x73]
  40e31c:	add    BYTE PTR [rbx+0x79],dl
  40e31f:	jae    0x40e395
  40e321:	gs ins DWORD PTR es:[rdi],dx
  40e323:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40e325:	ins    BYTE PTR es:[rdi],dx
  40e326:	outs   dx,DWORD PTR ds:[rsi]
  40e327:	jb     0x40e39c
  40e329:	add    BYTE PTR [rbx+0x6f],al
  40e32c:	ins    BYTE PTR es:[rdi],dx
  40e32d:	outs   dx,DWORD PTR ds:[rsi]
  40e32e:	jb     0x40e330
  40e330:	addr32 gs je 0x40e393
  40e334:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40e336:	outs   dx,BYTE PTR ds:[rsi]
  40e337:	je     0x40e3ab
  40e339:	outs   dx,DWORD PTR ds:[rsi]
  40e33a:	ins    BYTE PTR es:[rdi],dx
  40e33b:	push   rsp
  40e33c:	gs js  0x40e3b3
  40e33f:	add    BYTE PTR [rbx+0x65],dh
  40e342:	je     0x40e3a3
  40e344:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40e346:	jb     0x40e3ad
  40e348:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40e34a:	ins    BYTE PTR es:[rdi],dx
  40e34b:	outs   dx,DWORD PTR ds:[rsi]
  40e34c:	jb     0x40e34e
  40e34e:	jae    0x40e3b5
  40e350:	je     0x40e3b1
  40e352:	rex.WRX (bad) 
  40e354:	ins    DWORD PTR es:[rdi],dx
  40e355:	add    BYTE PTR gs:[rbx+0x6f],al
  40e359:	outs   dx,BYTE PTR ds:[rsi]
  40e35a:	je     0x40e3bd
  40e35c:	imul   ebp,DWORD PTR [rsi+0x65],0x6e6f4372
  40e363:	je     0x40e3d7
  40e365:	outs   dx,DWORD PTR ds:[rsi]
  40e366:	ins    BYTE PTR es:[rdi],dx
  40e367:	add    BYTE PTR [rcx+0x75],al
  40e36a:	je     0x40e3db
  40e36c:	push   rbx
  40e36d:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e370:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  40e373:	fs add BYTE PTR gs:[rbx+0x65],dh
  40e378:	je     0x40e3d9
  40e37a:	rex.B jne 0x40e3f1
  40e37d:	outs   dx,DWORD PTR ds:[rsi]
  40e37e:	push   rbx
  40e37f:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e382:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  40e385:	fs add BYTE PTR gs:[rcx+0x75],al
  40e38a:	je     0x40e3fb
  40e38c:	push   rsi
  40e38d:	(bad)  
  40e38e:	ins    BYTE PTR es:[rdi],dx
  40e38f:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x65730065
  40e397:	je     0x40e3f8
  40e399:	rex.B jne 0x40e410
  40e39c:	outs   dx,DWORD PTR ds:[rsi]
  40e39d:	push   rsi
  40e39e:	(bad)  
  40e39f:	ins    BYTE PTR es:[rdi],dx
  40e3a0:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x65670065
  40e3a8:	je     0x40e409
  40e3aa:	push   rdi
  40e3ab:	imul   ebp,DWORD PTR [rsi+0x64],0x7300776f
  40e3b2:	gs je  0x40e414
  40e3b5:	rex.X (bad) 
  40e3b7:	movsxd ebp,DWORD PTR [rbx+0x43]
  40e3ba:	outs   dx,DWORD PTR ds:[rsi]
  40e3bb:	ins    BYTE PTR es:[rdi],dx
  40e3bc:	outs   dx,DWORD PTR ds:[rsi]
  40e3bd:	jb     0x40e3bf
  40e3bf:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40e3c1:	jb     0x40e430
  40e3c3:	rex.X outs dx,DWORD PTR ds:[rsi]
  40e3c5:	jb     0x40e42b
  40e3c7:	gs jb  0x40e41d
  40e3ca:	je     0x40e445
  40e3cc:	ins    BYTE PTR es:[rdi],dx
  40e3cd:	add    BYTE PTR gs:[rbx+0x65],dh
  40e3d1:	je     0x40e432
  40e3d3:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40e3d5:	jb     0x40e444
  40e3d7:	rex.X outs dx,DWORD PTR ds:[rsi]
  40e3d9:	jb     0x40e43f
  40e3db:	gs jb  0x40e431
  40e3de:	je     0x40e459
  40e3e0:	ins    BYTE PTR es:[rdi],dx
  40e3e1:	add    BYTE PTR gs:[rbx+0x65],dh
  40e3e5:	je     0x40e446
  40e3e7:	rex.WRB (bad) 
  40e3e9:	js     0x40e454
  40e3eb:	ins    DWORD PTR es:[rdi],dx
  40e3ec:	imul   edi,DWORD PTR [rdx+0x65],0x786f42
  40e3f3:	jae    0x40e45a
  40e3f5:	je     0x40e456
  40e3f7:	imul   r13,QWORD PTR [r14+0x69],0x657a696d
  40e3ff:	rex.X outs dx,DWORD PTR ds:[rsi]
  40e401:	js     0x40e403
  40e403:	push   rbx
  40e404:	imul   edi,DWORD PTR [rdx+0x65],0x70697247
  40e40b:	push   rbx
  40e40c:	je     0x40e487
  40e40e:	ins    BYTE PTR es:[rdi],dx
  40e40f:	add    BYTE PTR gs:[rbx+0x65],dh
  40e413:	je     0x40e474
  40e415:	push   rbx
  40e416:	imul   edi,DWORD PTR [rdx+0x65],0x70697247
  40e41d:	push   rbx
  40e41e:	je     0x40e499
  40e420:	ins    BYTE PTR es:[rdi],dx
  40e421:	add    BYTE PTR gs:[rdx+0x65],dl
  40e425:	jae    0x40e49c
  40e427:	ins    DWORD PTR es:[rdi],dx
  40e428:	gs rex.WR (bad) 
  40e42b:	jns    0x40e49c
  40e42d:	jne    0x40e4a3
  40e42f:	add    BYTE PTR [rbx+0x54],dl
  40e432:	push   r12
  40e434:	push   0x64616572
  40e439:	rex.B je 0x40e4b0
  40e43c:	jb     0x40e4a7
  40e43e:	(bad)  
  40e43f:	jne    0x40e4b5
  40e441:	add    BYTE PTR gs:[rcx+0x72],ah
  40e445:	addr32 jae 0x40e448
  40e448:	rex.B jo 0x40e4bb
  40e44b:	ins    BYTE PTR es:[rdi],dx
  40e44c:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  40e453:	add    BYTE PTR [rbp+0x6e],al
  40e456:	(bad)  
  40e457:	(bad)  
  40e458:	ins    BYTE PTR es:[rdi],dx
  40e459:	gs push rsi
  40e45b:	imul   esi,DWORD PTR [rbx+0x75],0x74536c61
  40e462:	jns    0x40e4d0
  40e464:	gs jae 0x40e467
  40e467:	push   rbx
  40e468:	gs je  0x40e4ae
  40e46b:	outs   dx,DWORD PTR ds:[rsi]
  40e46c:	ins    DWORD PTR es:[rdi],dx
  40e46d:	jo     0x40e4d0
  40e46f:	je     0x40e4da
  40e471:	(bad)  
  40e472:	ins    BYTE PTR es:[rdi],dx
  40e473:	gs push rsp
  40e475:	gs js  0x40e4ec
  40e478:	push   rdx
  40e479:	outs   dx,BYTE PTR gs:[rsi]
  40e47b:	fs gs jb 0x40e4e8
  40e47f:	outs   dx,BYTE PTR ds:[rsi]
  40e480:	addr32 rex.R
  40e482:	gs data16 (bad) 
  40e485:	jne    0x40e4f3
  40e487:	je     0x40e489
  40e489:	push   rdx
  40e48a:	jne    0x40e4fa
  40e48c:	add    BYTE PTR [rax+0x69],dl
  40e48f:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  40e493:	rex.X outs dx,DWORD PTR gs:[rsi]
  40e496:	js     0x40e4eb
  40e498:	imul   edi,DWORD PTR [rdx+0x65],0x65646f4d
  40e49f:	add    BYTE PTR [rbx+0x65],dh
  40e4a2:	je     0x40e503
  40e4a4:	push   rbx
  40e4a5:	imul   edi,DWORD PTR [rdx+0x65],0x65646f4d
  40e4ac:	add    BYTE PTR [rcx+0x6d],cl
  40e4af:	(bad)  
  40e4b0:	add    BYTE PTR gs:[ebx+0x65],dh
  40e4b5:	je     0x40e516
  40e4b7:	rex.WB ins DWORD PTR es:[rdi],dx
  40e4b9:	(bad)  
  40e4ba:	add    BYTE PTR gs:[ebx+0x6f],al
  40e4bf:	outs   dx,BYTE PTR ds:[rsi]
  40e4c0:	je     0x40e523
  40e4c2:	imul   ebp,DWORD PTR [rsi+0x65],0x53490072
  40e4c9:	jne    0x40e53b
  40e4cb:	jo     0x40e53c
  40e4cd:	jb     0x40e543
  40e4cf:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40e4d1:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40e4d9:	add    BYTE PTR [rdx+0x65],al
  40e4dc:	imul   ebp,DWORD PTR [esi+0x49],0x74696e
  40e4e4:	push   rsp
  40e4e5:	(bad)  
  40e4e6:	(bad)  
  40e4e7:	ins    BYTE PTR es:[rdi],dx
  40e4e8:	gs rex.WR (bad) 
  40e4eb:	jns    0x40e55c
  40e4ed:	jne    0x40e563
  40e4ef:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40e4f1:	outs   dx,BYTE PTR ds:[rsi]
  40e4f2:	je     0x40e566
  40e4f4:	outs   dx,DWORD PTR ds:[rsi]
  40e4f5:	ins    BYTE PTR es:[rdi],dx
  40e4f6:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40e4f8:	ins    BYTE PTR es:[rdi],dx
  40e4f9:	ins    BYTE PTR es:[rdi],dx
  40e4fa:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e4ff:	outs   dx,BYTE PTR ds:[rsi]
  40e500:	add    BYTE PTR [rbx+0x65],dh
  40e503:	je     0x40e564
  40e505:	push   rsp
  40e506:	(bad)  
  40e507:	(bad)
  40e50c:	add    BYTE PTR [rbx+0x71],dl
  40e50f:	ins    BYTE PTR es:[rdi],dx
  40e510:	push   rbx
  40e511:	je     0x40e588
  40e513:	imul   ebp,DWORD PTR fs:[rdi+0x4c],0x756f7961
  40e51b:	je     0x40e566
  40e51d:	outs   dx,BYTE PTR ds:[rsi]
  40e51e:	fs outs dx,BYTE PTR gs:[rsi]
  40e521:	je     0x40e523
  40e523:	push   rbx
  40e524:	gs je  0x40e57d
  40e527:	gs jb  0x40e59e
  40e52a:	imul   esp,DWORD PTR [rbx+0x61],0x646e496c
  40e531:	outs   dx,BYTE PTR gs:[rsi]
  40e533:	je     0x40e535
  40e535:	imul   r13,QWORD PTR [rsi+0x6b],0x6562614c
  40e53d:	ins    BYTE PTR es:[rdi],dx
  40e53e:	imul   r13,QWORD PTR [rsi+0x6b],0x63696c43
  40e546:	imul   esp,DWORD PTR [rbp+0x64],0x45
  40e54a:	jbe    0x40e5b1
  40e54c:	outs   dx,BYTE PTR ds:[rsi]
  40e54d:	je     0x40e597
  40e54f:	(bad)  
  40e550:	outs   dx,BYTE PTR ds:[rsi]
  40e551:	fs ins BYTE PTR es:[rdi],dx
  40e553:	gs jb  0x40e556
  40e556:	(bad)  
  40e557:	fs fs pop rdi
  40e55a:	imul   r13,QWORD PTR [rsi+0x6b],0x63696c43
  40e562:	imul   esp,DWORD PTR [rbp+0x64],0x0
  40e566:	push   rbx
  40e567:	gs je  0x40e5b2
  40e56a:	outs   dx,DWORD PTR ds:[rsi]
  40e56b:	jb     0x40e5d6
  40e56d:	jp     0x40e5de
  40e56f:	outs   dx,BYTE PTR ds:[rsi]
  40e570:	je     0x40e5d3
  40e572:	ins    BYTE PTR es:[rdi],dx
  40e573:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40e575:	fs outs dx,BYTE PTR gs:[rsi]
  40e578:	je     0x40e57a
  40e57a:	push   rbx
  40e57b:	gs je  0x40e5d0
  40e57e:	outs   dx,DWORD PTR ds:[rsi]
  40e57f:	ja     0x40e5d4
  40e581:	jo     0x40e5e4
  40e583:	outs   dx,BYTE PTR ds:[rsi]
  40e584:	add    BYTE PTR [rbx+0x65],dl
  40e587:	je     0x40e5d2
  40e589:	jae    0x40e5dd
  40e58b:	outs   dx,DWORD PTR ds:[rsi]
  40e58c:	outs   dx,DWORD PTR ds:[rsi]
  40e58d:	je     0x40e5d2
  40e58f:	outs   dx,DWORD PTR ds:[rsi]
  40e590:	outs   dx,BYTE PTR ds:[rsi]
  40e591:	je     0x40e605
  40e593:	outs   dx,DWORD PTR ds:[rsi]
  40e594:	ins    BYTE PTR es:[rdi],dx
  40e595:	add    BYTE PTR [rbp+0x6e],al
  40e598:	rex.WB outs dx,BYTE PTR fs:[rsi]
  40e59b:	imul   esi,DWORD PTR [rax+rax*1+0x50],0x6f667265
  40e5a3:	jb     0x40e612
  40e5a5:	rex.WR (bad) 
  40e5a7:	jns    0x40e618
  40e5a9:	jne    0x40e61f
  40e5ab:	add    BYTE PTR [rbx+0x79],dl
  40e5ae:	jae    0x40e624
  40e5b0:	gs ins DWORD PTR es:[rdi],dx
  40e5b2:	rex.XB outs dx,DWORD PTR cs:[rsi]
  40e5b5:	fs rex.R outs dx,DWORD PTR gs:[rsi]
  40e5b9:	ins    DWORD PTR es:[rdi],dx
  40e5ba:	rex.XB outs dx,DWORD PTR cs:[rsi]
  40e5bd:	ins    DWORD PTR es:[rdi],dx
  40e5be:	jo     0x40e629
  40e5c0:	ins    BYTE PTR es:[rdi],dx
  40e5c1:	gs jb  0x40e5c4
  40e5c4:	rex.RXB
  40e5c5:	outs   dx,BYTE PTR gs:[rsi]
  40e5c7:	gs jb  0x40e62b
  40e5ca:	je     0x40e631
  40e5cc:	rex.XB outs dx,DWORD PTR fs:[rsi]
  40e5cf:	fs gs rex.B je 0x40e648
  40e5d4:	jb     0x40e63f
  40e5d6:	(bad)  
  40e5d7:	jne    0x40e64d
  40e5d9:	add    BYTE PTR gs:[rbp+riz*2+0x62],al
  40e5de:	jne    0x40e647
  40e5e0:	addr32 gs jb 0x40e632
  40e5e4:	outs   dx,DWORD PTR ds:[rsi]
  40e5e5:	outs   dx,BYTE PTR ds:[rsi]
  40e5e6:	push   rbp
  40e5e7:	jae    0x40e64e
  40e5e9:	jb     0x40e62e
  40e5eb:	outs   dx,DWORD PTR ds:[rsi]
  40e5ec:	fs gs rex.B je 0x40e665
  40e5f1:	jb     0x40e65c
  40e5f3:	(bad)  
  40e5f4:	jne    0x40e66a
  40e5f6:	add    BYTE PTR gs:[rdx+0x65],dl
  40e5fa:	data16 gs jb 0x40e663
  40e5fe:	outs   dx,BYTE PTR ds:[rsi]
  40e5ff:	movsxd esp,DWORD PTR [rbp+0x45]
  40e602:	jno    0x40e679
  40e604:	(bad)  
  40e605:	ins    BYTE PTR es:[rdi],dx
  40e606:	jae    0x40e608
  40e608:	rex.RXB
  40e609:	gs je  0x40e65b
  40e60c:	(bad)  
  40e60d:	push   0x65
  40e60f:	movsxd esi,DWORD PTR [rax+rax*1+0x45]
  40e613:	imul   esi,DWORD PTR fs:[rdi+rbp*2+0x72],0x776f7242
  40e61c:	jae    0x40e67f
  40e61e:	(bad)  
  40e61f:	ins    BYTE PTR es:[rdi],dx
  40e620:	gs rex.B je 0x40e698
  40e624:	jb     0x40e68f
  40e626:	(bad)  
  40e627:	jne    0x40e69d
  40e629:	add    BYTE PTR gs:[rbp+0x64],al
  40e62d:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x776f7242
  40e635:	jae    0x40e698
  40e637:	(bad)  
  40e638:	ins    BYTE PTR es:[rdi],dx
  40e639:	gs push rbx
  40e63b:	je     0x40e69e
  40e63d:	je     0x40e6a4
  40e63f:	add    BYTE PTR [rbp+0x69],cl
  40e642:	movsxd esi,DWORD PTR [rdx+0x6f]
  40e645:	jae    0x40e6b6
  40e647:	data16 je 0x40e678
  40e64a:	push   rbx
  40e64b:	jno    0x40e6b9
  40e64d:	push   rbx
  40e64e:	gs jb  0x40e6c7
  40e651:	gs jb  0x40e682
  40e654:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40e656:	outs   dx,BYTE PTR ds:[rsi]
  40e657:	imul   sp,WORD PTR [rdi+0x75],0x6172
  40e65d:	je     0x40e6c8
  40e65f:	outs   dx,DWORD PTR ds:[rsi]
  40e660:	outs   dx,BYTE PTR ds:[rsi]
  40e661:	cs push r10
  40e664:	push   rax
  40e665:	imul   r12d,DWORD PTR [rcx+0x6c],0x532e676f
  40e66d:	push   rdx
  40e66e:	cs jb  0x40e6d6
  40e671:	jae    0x40e6e2
  40e673:	jne    0x40e6e7
  40e675:	movsxd esp,DWORD PTR [rbp+0x73]
  40e678:	add    BYTE PTR [rbp+0x69],cl
  40e67b:	movsxd esi,DWORD PTR [rdx+0x6f]
  40e67e:	jae    0x40e6ef
  40e680:	data16 je 0x40e6b1
  40e683:	push   rbx
  40e684:	jno    0x40e6f2
  40e686:	push   rbx
  40e687:	gs jb  0x40e700
  40e68a:	gs jb  0x40e6bb
  40e68d:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40e68f:	outs   dx,BYTE PTR ds:[rsi]
  40e690:	imul   sp,WORD PTR [rdi+0x75],0x6172
  40e696:	je     0x40e701
  40e698:	outs   dx,DWORD PTR ds:[rsi]
  40e699:	outs   dx,BYTE PTR ds:[rsi]
  40e69a:	cs push r10
  40e69d:	push   rax
  40e69e:	imul   r12d,DWORD PTR [rcx+0x6c],0x412e676f
  40e6a6:	push   rdx
  40e6a7:	push   rax
  40e6a8:	imul   r12d,DWORD PTR [rcx+0x6c],0x722e676f
  40e6b0:	gs jae 0x40e722
  40e6b3:	jne    0x40e727
  40e6b5:	movsxd esp,DWORD PTR [rbp+0x73]
  40e6b8:	add    BYTE PTR [rbp+0x69],cl
  40e6bb:	movsxd esi,DWORD PTR [rdx+0x6f]
  40e6be:	jae    0x40e72f
  40e6c0:	data16 je 0x40e6f1
  40e6c3:	push   rbx
  40e6c4:	jno    0x40e732
  40e6c6:	push   rbx
  40e6c7:	gs jb  0x40e740
  40e6ca:	gs jb  0x40e6fb
  40e6cd:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40e6cf:	outs   dx,BYTE PTR ds:[rsi]
  40e6d0:	imul   sp,WORD PTR [rdi+0x75],0x6172
  40e6d6:	je     0x40e741
  40e6d8:	outs   dx,DWORD PTR ds:[rsi]
  40e6d9:	outs   dx,BYTE PTR ds:[rsi]
  40e6da:	cs push r10
  40e6dd:	push   rax
  40e6de:	imul   r12d,DWORD PTR [rcx+0x6c],0x412e676f
  40e6e6:	push   rdx
  40e6e7:	push   rax
  40e6e8:	imul   r12d,DWORD PTR [rcx+0x6c],0x6f43676f
  40e6f0:	outs   dx,BYTE PTR ds:[rsi]
  40e6f1:	je     0x40e765
  40e6f3:	outs   dx,DWORD PTR ds:[rsi]
  40e6f4:	ins    BYTE PTR es:[rdi],dx
  40e6f5:	jae    0x40e725
  40e6f7:	jb     0x40e75e
  40e6f9:	jae    0x40e76a
  40e6fb:	jne    0x40e76f
  40e6fd:	movsxd esp,DWORD PTR [rbp+0x73]
  40e700:	add    BYTE PTR [rbp+0x69],cl
  40e703:	movsxd esi,DWORD PTR [rdx+0x6f]
  40e706:	jae    0x40e777
  40e708:	data16 je 0x40e739
  40e70b:	push   rbx
  40e70c:	jno    0x40e77a
  40e70e:	push   rbx
  40e70f:	gs jb  0x40e788
  40e712:	gs jb  0x40e743
  40e715:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40e717:	outs   dx,BYTE PTR ds:[rsi]
  40e718:	imul   sp,WORD PTR [rdi+0x75],0x6172
  40e71e:	je     0x40e789
  40e720:	outs   dx,DWORD PTR ds:[rsi]
  40e721:	outs   dx,BYTE PTR ds:[rsi]
  40e722:	cs push r10
  40e725:	push   rax
  40e726:	imul   r12d,DWORD PTR [rcx+0x6c],0x522e676f
  40e72e:	gs jae 0x40e7a0
  40e731:	jne    0x40e7a5
  40e733:	movsxd esp,DWORD PTR [rbp+0x73]
  40e736:	cs jb  0x40e79e
  40e739:	jae    0x40e7aa
  40e73b:	jne    0x40e7af
  40e73d:	movsxd esp,DWORD PTR [rbp+0x73]
  40e740:	add    BYTE PTR [rax],al
  40e742:	add    BYTE PTR [rax],al
  40e744:	add    BYTE PTR [rip+0x720042],bl        # 0xb2e78c
  40e74a:	outs   dx,DWORD PTR ds:[rsi]
  40e74b:	add    BYTE PTR [rdi+0x0],dh
  40e74e:	jae    0x40e750
  40e750:	add    BYTE PTR gs:[rsi+0x0],al
  40e754:	outs   dx,DWORD PTR ds:[rsi]
  40e755:	add    BYTE PTR [rdx+0x0],dh
  40e758:	rex.WRB add BYTE PTR [r13+0x0],r12b
  40e75c:	add    BYTE PTR fs:[rcx+0x0],ch
  40e760:	(bad)  
  40e761:	add    BYTE PTR [rax],al
  40e763:	and    eax,0x6e0049
  40e768:	jbe    0x40e76a
  40e76a:	(bad)  
  40e76b:	add    BYTE PTR [rax+rax*1+0x69],ch
  40e76f:	add    BYTE PTR [rax+rax*1+0x46],ah
  40e773:	add    BYTE PTR [rdi+0x0],ch
  40e776:	ins    BYTE PTR es:[rdi],dx
  40e777:	add    BYTE PTR [rax+rax*1+0x65],ah
  40e77b:	add    BYTE PTR [rdx+0x0],dh
  40e77e:	push   rsp
  40e77f:	add    BYTE PTR [rcx+0x0],ch
  40e782:	je     0x40e784
  40e784:	ins    BYTE PTR es:[rdi],dx
  40e785:	add    BYTE PTR [rbp+0x0],ah
  40e788:	add    BYTE PTR [rcx],ah
  40e78a:	rex.WB add BYTE PTR [r14+0x0],bpl
  40e78e:	jbe    0x40e790
  40e790:	(bad)  
  40e791:	add    BYTE PTR [rax+rax*1+0x69],ch
  40e795:	add    BYTE PTR [rax+rax*1+0x45],ah
  40e799:	add    BYTE PTR [rbp+0x0],ch
  40e79c:	jo     0x40e79e
  40e79e:	je     0x40e7a0
  40e7a0:	jns    0x40e7a2
  40e7a2:	push   rax
  40e7a3:	add    BYTE PTR [rcx+0x0],ah
  40e7a6:	je     0x40e7a8
  40e7a8:	push   0x540b0000
  40e7ad:	add    BYTE PTR [rcx+0x0],ch
  40e7b0:	je     0x40e7b2
  40e7b2:	ins    BYTE PTR es:[rdi],dx
  40e7b3:	add    BYTE PTR [rbp+0x0],ah
  40e7b6:	add    BYTE PTR [rcx],ch
  40e7b8:	rex.WRB add BYTE PTR [r9+0x0],r13b
  40e7bc:	jae    0x40e7be
  40e7be:	jae    0x40e7c0
  40e7c0:	imul   eax,DWORD PTR [rax],0x67006e
  40e7c6:	rex.X add BYTE PTR [rdi+0x0],bpl
  40e7ca:	outs   dx,DWORD PTR ds:[rsi]
  40e7cb:	add    BYTE PTR [rax+rax*1+0x73],dh
  40e7cf:	add    BYTE PTR [rax+rax*1+0x72],dh
  40e7d3:	add    BYTE PTR [rcx+0x0],ah
  40e7d6:	jo     0x40e7d8
  40e7d8:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40e7dc:	ins    BYTE PTR es:[rdi],dx
  40e7dd:	add    BYTE PTR [rbp+0x0],ah
  40e7e0:	add    BYTE PTR [rcx],ch
  40e7e2:	rex.WB add BYTE PTR [r14+0x0],bpl
  40e7e6:	jbe    0x40e7e8
  40e7e8:	(bad)  
  40e7e9:	add    BYTE PTR [rax+rax*1+0x69],ch
  40e7ed:	add    BYTE PTR [rax+rax*1+0x49],ah
  40e7f1:	add    BYTE PTR [rsi+0x0],ch
  40e7f4:	jae    0x40e7f6
  40e7f6:	je     0x40e7f8
  40e7f8:	(bad)  
  40e7f9:	add    BYTE PTR [rax+rax*1+0x6c],ch
  40e7fd:	add    BYTE PTR [rsi+0x0],al
  40e800:	outs   dx,DWORD PTR ds:[rsi]
  40e801:	add    BYTE PTR [rax+rax*1+0x64],ch
  40e805:	add    BYTE PTR [rbp+0x0],ah
  40e808:	jb     0x40e80a
  40e80a:	add    BYTE PTR [rbx],bl
  40e80c:	rex.WB add BYTE PTR [r14+0x0],bpl
  40e810:	jbe    0x40e812
  40e812:	(bad)  
  40e813:	add    BYTE PTR [rax+rax*1+0x69],ch
  40e817:	add    BYTE PTR [rax+rax*1+0x46],ah
  40e81b:	add    BYTE PTR [rdi+0x0],ch
  40e81e:	ins    BYTE PTR es:[rdi],dx
  40e81f:	add    BYTE PTR [rax+rax*1+0x65],ah
  40e823:	add    BYTE PTR [rdx+0x0],dh
  40e826:	add    BYTE PTR [rip+0x73006d],ch        # 0xb3e899
  40e82c:	sub    eax,0x65006800
  40e831:	add    BYTE PTR [rax+rax*1+0x70],ch
  40e835:	add    BYTE PTR [rdx],bh
  40e837:	add    BYTE PTR [rdi],ch
  40e839:	add    BYTE PTR [rdi],ch
  40e83b:	add    BYTE PTR [rbp+0x0],cl
  40e83e:	push   rbx
  40e83f:	add    BYTE PTR [rsi],ch
  40e841:	add    BYTE PTR [rbx+0x0],dl
  40e844:	push   rcx
  40e845:	add    BYTE PTR [rax+rax*1+0x43],cl
  40e849:	add    BYTE PTR [rbx+0x0],al
  40e84c:	add    BYTE PTR cs:[rsi+0x0],dh
  40e850:	xor    DWORD PTR [rax],eax
  40e852:	xor    BYTE PTR [rax],al
  40e854:	add    DWORD PTR [rcx],eax
  40e856:	add    BYTE PTR [rcx],bl
  40e858:	add    BYTE PTR cs:[rsi],ch
  40e85b:	add    BYTE PTR [rax+rax*1+0x73],bl
  40e85f:	add    BYTE PTR [rbp+0x0],ah
  40e862:	je     0x40e864
  40e864:	jne    0x40e866
  40e866:	jo     0x40e868
  40e868:	add    BYTE PTR cs:[rbp+0x0],ah
  40e86c:	js     0x40e86e
  40e86e:	add    BYTE PTR gs:[rax],al
  40e871:	sbb    DWORD PTR [rax],esp
  40e873:	add    BYTE PTR [rdi],ch
  40e875:	add    BYTE PTR [rcx+0x0],al
  40e878:	add    BYTE PTR [r8+r8*1+0x49],dl
  40e87d:	add    BYTE PTR [rdi+0x0],cl
  40e880:	rex.WRX add BYTE PTR [rip+0x30007b00],r15b        # 0x30416387
  40e887:	add    BYTE PTR [rbp+0x0],bh
  40e88a:	add    BYTE PTR [rbx],al
  40e88c:	pop    rsp
  40e88d:	add    BYTE PTR [rax],al
  40e88f:	(bad)  
  40e890:	and    BYTE PTR [rax],al
  40e892:	(bad)  
  40e893:	add    BYTE PTR [rbp+0x0],cl
  40e896:	add    BYTE PTR [r8+rax*1+0x49],r8b
  40e89b:	add    BYTE PTR [rcx+0x0],al
  40e89e:	push   rbx
  40e89f:	add    BYTE PTR [rdi+0x0],cl
  40e8a2:	push   rbp
  40e8a3:	add    BYTE PTR [rdx+0x0],dl
  40e8a6:	rex.XB add BYTE PTR [r13+0x0],al
  40e8aa:	cmp    eax,0x7b002200
  40e8af:	add    BYTE PTR [rax],dh
  40e8b1:	add    BYTE PTR [rbp+0x0],bh
  40e8b4:	and    al,BYTE PTR [rax]
  40e8b6:	add    BYTE PTR [rcx],ch
  40e8b8:	and    BYTE PTR [rax],al
  40e8ba:	(bad)  
  40e8bb:	add    BYTE PTR [rbp+0x0],cl
  40e8be:	add    BYTE PTR [r8+rax*1+0x49],r8b
  40e8c3:	add    BYTE PTR [rcx+0x0],al
  40e8c6:	push   rbx
  40e8c7:	add    BYTE PTR [rdi+0x0],cl
  40e8ca:	push   rbp
  40e8cb:	add    BYTE PTR [rdx+0x0],dl
  40e8ce:	rex.XB add BYTE PTR [r13+0x0],al
  40e8d2:	cmp    eax,0x7b002200
  40e8d7:	add    BYTE PTR [rax],dh
  40e8d9:	add    BYTE PTR [rbp+0x0],bh
  40e8dc:	pop    rsp
  40e8dd:	add    BYTE PTR [rdx],ah
  40e8df:	add    BYTE PTR [rax],al
  40e8e1:	add    esp,DWORD PTR [rax]
  40e8e3:	add    BYTE PTR [rax],al
  40e8e5:	and    DWORD PTR [rbx+0x0],esp
  40e8e8:	outs   dx,DWORD PTR ds:[rsi]
  40e8e9:	add    BYTE PTR [rsi+0x0],ch
  40e8ec:	je     0x40e8ee
  40e8ee:	jb     0x40e8f0
  40e8f0:	outs   dx,DWORD PTR ds:[rsi]
  40e8f1:	add    BYTE PTR [rax+rax*1+0x48],ch
  40e8f5:	add    BYTE PTR [rdi+0x0],ch
  40e8f8:	jae    0x40e8fa
  40e8fa:	je     0x40e8fc
  40e8fc:	push   rax
  40e8fd:	add    BYTE PTR [rcx+0x0],ah
  40e900:	outs   dx,BYTE PTR ds:[rsi]
  40e901:	add    BYTE PTR [rbp+0x0],ah
  40e904:	ins    BYTE PTR es:[rdi],dx
  40e905:	add    BYTE PTR [rax],al
  40e907:	or     esp,DWORD PTR [rax+rax*1]
  40e90a:	je     0x40e90c
  40e90c:	push   0x73006900
  40e911:	add    BYTE PTR [rax],al
  40e913:	adc    eax,DWORD PTR [rcx+0x0]
  40e916:	push   rdx
  40e917:	add    BYTE PTR [rax+0x0],dl
  40e91a:	add    BYTE PTR [rcx+0x0],r13b
  40e91e:	(bad)  
  40e91f:	add    BYTE PTR [rax+rax*1+0x6f],ch
  40e923:	add    BYTE PTR [rdi+0x0],ah
  40e926:	add    BYTE PTR [rbx],ah
  40e928:	je     0x40e92a
  40e92a:	(bad)  
  40e92b:	add    BYTE PTR [rdx+0x0],ah
  40e92e:	ins    BYTE PTR es:[rdi],dx
  40e92f:	add    BYTE PTR [rbp+0x0],ah
  40e932:	rex.WR add BYTE PTR [rcx+0x0],r12b
  40e936:	jns    0x40e938
  40e938:	outs   dx,DWORD PTR ds:[rsi]
  40e939:	add    BYTE PTR [rbp+0x0],dh
  40e93c:	je     0x40e93e
  40e93e:	push   rax
  40e93f:	add    BYTE PTR [rcx+0x0],ah
  40e942:	outs   dx,BYTE PTR ds:[rsi]
  40e943:	add    BYTE PTR [rbp+0x0],ah
  40e946:	ins    BYTE PTR es:[rdi],dx
  40e947:	add    BYTE PTR [rcx],dh
  40e949:	add    BYTE PTR [rax],al
  40e94b:	(bad)  
  40e94c:	(bad)  
  40e94d:	add    BYTE PTR [rax+rax*1+0x64],ah
  40e951:	add    BYTE PTR [rsi+0x0],al
  40e954:	add    BYTE PTR gs:[rcx+0x0],ah
  40e958:	je     0x40e95a
  40e95a:	jne    0x40e95c
  40e95c:	jb     0x40e95e
  40e95e:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
  40e963:	add    BYTE PTR [rsi+0x0],ch
  40e966:	imul   eax,DWORD PTR [rax],0x4c
  40e969:	add    BYTE PTR [rcx+0x0],ah
  40e96c:	(bad)  
  40e96d:	add    BYTE PTR [rbp+0x0],ah
  40e970:	ins    BYTE PTR es:[rdi],dx
  40e971:	add    BYTE PTR [rax],al
  40e973:	sub    eax,0x640061
  40e978:	add    BYTE PTR fs:[rsi+0x0],al
  40e97c:	add    BYTE PTR gs:[rcx+0x0],ah
  40e980:	je     0x40e982
  40e982:	jne    0x40e984
  40e984:	jb     0x40e986
  40e986:	add    BYTE PTR gs:[rax+rax*1+0x65],al
  40e98b:	add    BYTE PTR [rbx+0x0],dh
  40e98e:	movsxd eax,DWORD PTR [rax]
  40e990:	imul   eax,DWORD PTR [rax],0x740070
  40e996:	rex.WR add BYTE PTR [rcx+0x0],r12b
  40e99a:	(bad)  
  40e99b:	add    BYTE PTR [rbp+0x0],ah
  40e99e:	ins    BYTE PTR es:[rdi],dx
  40e99f:	add    BYTE PTR [rax],al
  40e9a1:	(bad)  
  40e9a2:	jb     0x40e9a4
  40e9a4:	add    BYTE PTR gs:[rax+0x0],dh
  40e9a8:	(bad)  
  40e9a9:	add    BYTE PTR [rcx+0x0],ch
  40e9ac:	jb     0x40e9ae
  40e9ae:	rex.WR add BYTE PTR [rcx+0x0],r13b
  40e9b2:	outs   dx,BYTE PTR ds:[rsi]
  40e9b3:	add    BYTE PTR [rbx+0x0],ch
  40e9b6:	rex.WR add BYTE PTR [rcx+0x0],r12b
  40e9ba:	(bad)  
  40e9bb:	add    BYTE PTR [rbp+0x0],ah
  40e9be:	ins    BYTE PTR es:[rdi],dx
  40e9bf:	add    BYTE PTR [rax],al
  40e9c1:	(bad)  
  40e9c2:	jb     0x40e9c4
  40e9c4:	add    BYTE PTR gs:[rax+0x0],dh
  40e9c8:	(bad)  
  40e9c9:	add    BYTE PTR [rcx+0x0],ch
  40e9cc:	jb     0x40e9ce
  40e9ce:	add    BYTE PTR [rbp+0x0],r12b
  40e9d2:	jae    0x40e9d4
  40e9d4:	movsxd eax,DWORD PTR [rax]
  40e9d6:	jb     0x40e9d8
  40e9d8:	imul   eax,DWORD PTR [rax],0x740070
  40e9de:	rex.WR add BYTE PTR [rcx+0x0],r12b
  40e9e2:	(bad)  
  40e9e3:	add    BYTE PTR [rbp+0x0],ah
  40e9e6:	ins    BYTE PTR es:[rdi],dx
  40e9e7:	add    BYTE PTR [rax],al
  40e9e9:	(bad)  
  40e9ea:	jb     0x40e9ec
  40e9ec:	add    BYTE PTR gs:[rbp+0x0],ch
  40e9f0:	outs   dx,DWORD PTR ds:[rsi]
  40e9f1:	add    BYTE PTR [rsi+0x0],dh
  40e9f4:	add    BYTE PTR gs:[rsi+0x0],al
  40e9f8:	add    BYTE PTR gs:[rcx+0x0],ah
  40e9fc:	je     0x40e9fe
  40e9fe:	jne    0x40ea00
  40ea00:	jb     0x40ea02
  40ea02:	add    BYTE PTR gs:[rbx+0x0],dh
  40ea06:	rex.WR add BYTE PTR [rcx+0x0],r13b
  40ea0a:	outs   dx,BYTE PTR ds:[rsi]
  40ea0b:	add    BYTE PTR [rbx+0x0],ch
  40ea0e:	rex.WR add BYTE PTR [rcx+0x0],r12b
  40ea12:	(bad)  
  40ea13:	add    BYTE PTR [rbp+0x0],ah
  40ea16:	ins    BYTE PTR es:[rdi],dx
  40ea17:	add    BYTE PTR [rax],al
  40ea19:	or     eax,0x61006c
  40ea1e:	(bad)  
  40ea1f:	add    BYTE PTR [rbp+0x0],ah
  40ea22:	ins    BYTE PTR es:[rdi],dx
  40ea23:	add    BYTE PTR [rcx],dh
  40ea25:	add    BYTE PTR [rax],al
  40ea27:	xor    DWORD PTR [rdx+0x0],esi
  40ea2a:	add    BYTE PTR gs:[rbp+0x0],ch
  40ea2e:	outs   dx,DWORD PTR ds:[rsi]
  40ea2f:	add    BYTE PTR [rsi+0x0],dh
  40ea32:	add    BYTE PTR gs:[rsi+0x0],al
  40ea36:	add    BYTE PTR gs:[rcx+0x0],ah
  40ea3a:	je     0x40ea3c
  40ea3c:	jne    0x40ea3e
  40ea3e:	jb     0x40ea40
  40ea40:	add    BYTE PTR gs:[rbx+0x0],dh
  40ea44:	push   rax
  40ea45:	add    BYTE PTR [rcx+0x0],ch
  40ea48:	movsxd eax,DWORD PTR [rax]
  40ea4a:	je     0x40ea4c
  40ea4c:	jne    0x40ea4e
  40ea4e:	jb     0x40ea50
  40ea50:	add    BYTE PTR gs:[rdx+0x0],al
  40ea54:	outs   dx,DWORD PTR ds:[rsi]
  40ea55:	add    BYTE PTR [rax+0x0],bh
  40ea58:	add    BYTE PTR [rcx],ch
  40ea5a:	(bad)  
  40ea5b:	add    BYTE PTR [rax+rax*1+0x64],ah
  40ea5f:	add    BYTE PTR [rsi+0x0],al
  40ea62:	add    BYTE PTR gs:[rcx+0x0],ah
  40ea66:	je     0x40ea68
  40ea68:	jne    0x40ea6a
  40ea6a:	jb     0x40ea6c
  40ea6c:	add    BYTE PTR gs:[rax+0x0],dl
  40ea70:	imul   eax,DWORD PTR [rax],0x740063
  40ea76:	jne    0x40ea78
  40ea78:	jb     0x40ea7a
  40ea7a:	add    BYTE PTR gs:[rdx+0x0],al
  40ea7e:	outs   dx,DWORD PTR ds:[rsi]
  40ea7f:	add    BYTE PTR [rax+0x0],bh
  40ea82:	add    BYTE PTR [rcx],ah
  40ea84:	jb     0x40ea86
  40ea86:	add    BYTE PTR gs:[rax+0x0],dh
  40ea8a:	(bad)  
  40ea8b:	add    BYTE PTR [rcx+0x0],ch
  40ea8e:	jb     0x40ea90
  40ea90:	push   rax
  40ea91:	add    BYTE PTR [rcx+0x0],ch
  40ea94:	movsxd eax,DWORD PTR [rax]
  40ea96:	je     0x40ea98
  40ea98:	jne    0x40ea9a
  40ea9a:	jb     0x40ea9c
  40ea9c:	add    BYTE PTR gs:[rdx+0x0],al
  40eaa0:	outs   dx,DWORD PTR ds:[rsi]
  40eaa1:	add    BYTE PTR [rax+0x0],bh
  40eaa4:	add    BYTE PTR [rbx],ah
  40eaa6:	add    BYTE PTR [r10+0x0],dl
  40eaaa:	push   rax
  40eaab:	add    BYTE PTR [rax+rax*1+0x69],al
  40eaaf:	add    BYTE PTR [rcx+0x0],ah
  40eab2:	ins    BYTE PTR es:[rdi],dx
  40eab3:	add    BYTE PTR [rdi+0x0],ch
  40eab6:	add    BYTE PTR [ebx+0x0],al
  40eaba:	outs   dx,DWORD PTR ds:[rsi]
  40eabb:	add    BYTE PTR [rsi+0x0],ch
  40eabe:	je     0x40eac0
  40eac0:	jb     0x40eac2
  40eac2:	outs   dx,DWORD PTR ds:[rsi]
  40eac3:	add    BYTE PTR [rax+rax*1+0x73],ch
  40eac7:	add    BYTE PTR [rax],al
  40eac9:	imul   ecx,DWORD PTR [rbp+0x0],0x69
  40eacd:	add    BYTE PTR [rbx+0x0],ah
  40ead0:	jb     0x40ead2
  40ead2:	outs   dx,DWORD PTR ds:[rsi]
  40ead3:	add    BYTE PTR [rbx+0x0],dh
  40ead6:	outs   dx,DWORD PTR ds:[rsi]
  40ead7:	add    BYTE PTR [rsi+0x0],ah
  40eada:	je     0x40eadc
  40eadc:	add    BYTE PTR cs:[rbx+0x0],dl
  40eae0:	jno    0x40eae2
  40eae2:	ins    BYTE PTR es:[rdi],dx
  40eae3:	add    BYTE PTR [rbx+0x0],dl
  40eae6:	add    BYTE PTR gs:[rdx+0x0],dh
  40eaea:	jbe    0x40eaec
  40eaec:	add    BYTE PTR gs:[rdx+0x0],dh
  40eaf0:	add    BYTE PTR cs:[rbx+0x0],al
  40eaf4:	outs   dx,DWORD PTR ds:[rsi]
  40eaf5:	add    BYTE PTR [rsi+0x0],ch
  40eaf8:	data16 add BYTE PTR [rcx+0x0],ch
  40eafc:	add    BYTE PTR [ebp+0x0],dh
  40eb00:	jb     0x40eb02
  40eb02:	(bad)  
  40eb03:	add    BYTE PTR [rax+rax*1+0x69],dh
  40eb07:	add    BYTE PTR [rdi+0x0],ch
  40eb0a:	outs   dx,BYTE PTR ds:[rsi]
  40eb0b:	add    BYTE PTR [rsi],ch
  40eb0d:	add    BYTE PTR [rcx+0x0],al
  40eb10:	jb     0x40eb12
  40eb12:	jo     0x40eb14
  40eb14:	add    BYTE PTR [rcx+0x0],r13b
  40eb18:	(bad)  
  40eb19:	add    BYTE PTR [rax+rax*1+0x6f],ch
  40eb1d:	add    BYTE PTR [rdi+0x0],ah
  40eb20:	add    BYTE PTR cs:[rdx+0x0],dl
  40eb24:	add    BYTE PTR gs:[rbx+0x0],dh
  40eb28:	outs   dx,DWORD PTR ds:[rsi]
  40eb29:	add    BYTE PTR [rbp+0x0],dh
  40eb2c:	jb     0x40eb2e
  40eb2e:	movsxd eax,DWORD PTR [rax]
  40eb30:	add    BYTE PTR gs:[rbx+0x0],dh
  40eb34:	add    BYTE PTR [rcx+0x53],dl
  40eb37:	add    BYTE PTR [rax+rax*1+0x50],cl
  40eb3b:	add    BYTE PTR [rax],dh
  40eb3d:	add    BYTE PTR [rbx],dh
  40eb3f:	add    BYTE PTR [rbx],dh
  40eb41:	add    BYTE PTR [rdi+0x0],bl
  40eb44:	rex.WRB add BYTE PTR [r9+0x0],r12b
  40eb48:	imul   eax,DWORD PTR [rax],0x74006e
  40eb4e:	add    BYTE PTR gs:[rsi+0x0],ch
  40eb52:	(bad)  
  40eb53:	add    BYTE PTR [rsi+0x0],ch
  40eb56:	movsxd eax,DWORD PTR [rax]
  40eb58:	add    BYTE PTR gs:[rcx+0x0],al
  40eb5c:	add    BYTE PTR fs:[rax+rax*1+0x4f],ah
  40eb61:	add    BYTE PTR [rdx+0x0],dh
  40eb64:	push   rdx
  40eb65:	add    BYTE PTR [rbp+0x0],ah
  40eb68:	ins    DWORD PTR es:[rdi],dx
  40eb69:	add    BYTE PTR [rdi+0x0],ch
  40eb6c:	jbe    0x40eb6e
  40eb6e:	add    BYTE PTR gs:[rsi+0x0],al
  40eb72:	add    BYTE PTR gs:[rcx+0x0],ah
  40eb76:	je     0x40eb78
  40eb78:	jne    0x40eb7a
  40eb7a:	jb     0x40eb7c
  40eb7c:	add    BYTE PTR gs:[rbx+0x0],dh
  40eb80:	pop    rdi
  40eb81:	add    BYTE PTR [rbx],dh
  40eb83:	add    BYTE PTR [rdx],dh
  40eb85:	add    BYTE PTR [rax],al
  40eb87:	(bad)  
  40eb88:	push   rbx
  40eb89:	add    BYTE PTR [rax+rax*1+0x50],cl
  40eb8d:	add    BYTE PTR [rax],dh
  40eb8f:	add    BYTE PTR [rbx],dh
  40eb91:	add    BYTE PTR [rip+0x4d005f00],dh        # 0x4d414a97
  40eb97:	add    BYTE PTR [rcx+0x0],ah
  40eb9a:	imul   eax,DWORD PTR [rax],0x74006e
  40eba0:	add    BYTE PTR gs:[rsi+0x0],ch
  40eba4:	(bad)  
  40eba5:	add    BYTE PTR [rsi+0x0],ch
  40eba8:	movsxd eax,DWORD PTR [rax]
  40ebaa:	add    BYTE PTR gs:[rdx+0x0],dl
  40ebae:	add    BYTE PTR gs:[rax+0x0],dh
  40ebb2:	(bad)  
  40ebb3:	add    BYTE PTR [rcx+0x0],ch
  40ebb6:	jb     0x40ebb8
  40ebb8:	pop    rdi
  40ebb9:	add    BYTE PTR [rbx],dh
  40ebbb:	add    BYTE PTR [rdx],dh
  40ebbd:	add    BYTE PTR [rax],al
  40ebbf:	(bad)  
  40ebc0:	push   rbx
  40ebc1:	add    BYTE PTR [rax+rax*1+0x50],cl
  40ebc5:	add    BYTE PTR [rax],dh
  40ebc7:	add    BYTE PTR [rbx],dh
  40ebc9:	add    BYTE PTR [rcx],bh
  40ebcb:	add    BYTE PTR [rdi+0x0],bl
  40ebce:	push   rbp
  40ebcf:	add    BYTE PTR [rsi+0x0],ch
  40ebd2:	imul   eax,DWORD PTR [rax],0x73006e
  40ebd8:	je     0x40ebda
  40ebda:	(bad)  
  40ebdb:	add    BYTE PTR [rax+rax*1+0x6c],ch
  40ebdf:	add    BYTE PTR [rcx+0x0],cl
  40ebe2:	movsxd eax,DWORD PTR [rax]
  40ebe4:	outs   dx,DWORD PTR ds:[rsi]
  40ebe5:	add    BYTE PTR [rsi+0x0],ch
  40ebe8:	pop    rdi
  40ebe9:	add    BYTE PTR [rbx],dh
  40ebeb:	add    BYTE PTR [rdx],dh
  40ebed:	add    BYTE PTR [rax],al
  40ebef:	add    BYTE PTR [rax],bh
  40ebf1:	imul   eax,esp,0x70438153
  40ebf7:	rex.XB stos DWORD PTR es:[rdi],eax
  40ebf9:	stc    
  40ebfa:	push   rdi
  40ebfb:	mov    ch,0xf1
  40ebfd:	cmp    cl,BYTE PTR [rbx-0x48f7ff91]
  40ec03:	jp     0x40ec61
  40ec05:	push   rsi
  40ec06:	sbb    DWORD PTR [rax+riz*8],esi
  40ec09:	mov    DWORD PTR [rbx],eax
  40ec0b:	and    BYTE PTR [rax],al
  40ec0d:	add    DWORD PTR [rax+rax*1],eax
  40ec10:	add    BYTE PTR [rdx],dl
  40ec12:	adc    DWORD PTR [rip+0x12010100],eax        # 0x1241ed18
  40ec18:	adc    DWORD PTR [rbx],eax
  40ec1a:	add    BYTE PTR [rax],al
  40ec1c:	(bad)  
  40ec1d:	add    al,0x0
  40ec1f:	add    DWORD PTR [rsi],ecx
  40ec21:	(bad)  
  40ec22:	add    al,0x8
  40ec24:	add    BYTE PTR [rdx],dl
  40ec26:	adc    DWORD PTR [rbx],eax
  40ec28:	or     BYTE PTR [rax],al
  40ec2a:	(bad)  
  40ec2b:	add    al,BYTE PTR [rsi]
  40ec2d:	(bad)  
  40ec2e:	sub    BYTE PTR [rbp+0x0],cl
  40ec31:	imul   eax,DWORD PTR [rax],0x730073
  40ec37:	imul   eax,DWORD PTR [rax],0x67006e
  40ec3d:	rex.X add BYTE PTR [rdi+0x0],bpl
  40ec41:	outs   dx,DWORD PTR ds:[rsi]
  40ec42:	add    BYTE PTR [rax+rax*1+0x73],dh
  40ec46:	add    BYTE PTR [rax+rax*1+0x72],dh
  40ec4a:	add    BYTE PTR [rcx+0x0],ah
  40ec4d:	jo     0x40ec4f
  40ec4f:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40ec53:	ins    BYTE PTR es:[rdi],dx
  40ec54:	add    BYTE PTR [rbp+0x0],ah
  40ec57:	sbb    al,0x42
  40ec59:	add    BYTE PTR [rdx+0x0],dh
  40ec5c:	outs   dx,DWORD PTR ds:[rsi]
  40ec5d:	add    BYTE PTR [rdi+0x0],dh
  40ec60:	jae    0x40ec62
  40ec62:	add    BYTE PTR gs:[rsi+0x0],al
  40ec66:	outs   dx,DWORD PTR ds:[rsi]
  40ec67:	add    BYTE PTR [rdx+0x0],dh
  40ec6a:	rex.WRB add BYTE PTR [r13+0x0],r12b
  40ec6e:	add    BYTE PTR fs:[rcx+0x0],ch
  40ec72:	(bad)  
  40ec73:	add    BYTE PTR [rax],ch
  40ec75:	rex.WB add BYTE PTR [r14+0x0],bpl
  40ec79:	jbe    0x40ec7b
  40ec7b:	(bad)  
  40ec7c:	add    BYTE PTR [rax+rax*1+0x69],ch
  40ec80:	add    BYTE PTR [rax+rax*1+0x49],ah
  40ec84:	add    BYTE PTR [rsi+0x0],ch
  40ec87:	jae    0x40ec89
  40ec89:	je     0x40ec8b
  40ec8b:	(bad)  
  40ec8c:	add    BYTE PTR [rax+rax*1+0x6c],ch
  40ec90:	add    BYTE PTR [rsi+0x0],al
  40ec93:	outs   dx,DWORD PTR ds:[rsi]
  40ec94:	add    BYTE PTR [rax+rax*1+0x64],ch
  40ec98:	add    BYTE PTR [rbp+0x0],ah
  40ec9b:	jb     0x40ec9d
  40ec9d:	and    al,0x49
  40ec9f:	add    BYTE PTR [rsi+0x0],ch
  40eca2:	jbe    0x40eca4
  40eca4:	(bad)  
  40eca5:	add    BYTE PTR [rax+rax*1+0x69],ch
  40eca9:	add    BYTE PTR [rax+rax*1+0x46],ah
  40ecad:	add    BYTE PTR [rdi+0x0],ch
  40ecb0:	ins    BYTE PTR es:[rdi],dx
  40ecb1:	add    BYTE PTR [rax+rax*1+0x65],ah
  40ecb5:	add    BYTE PTR [rdx+0x0],dh
  40ecb8:	push   rsp
  40ecb9:	add    BYTE PTR [rcx+0x0],ch
  40ecbc:	je     0x40ecbe
  40ecbe:	ins    BYTE PTR es:[rdi],dx
  40ecbf:	add    BYTE PTR [rbp+0x0],ah
  40ecc2:	and    BYTE PTR [rcx+0x0],cl
  40ecc5:	outs   dx,BYTE PTR ds:[rsi]
  40ecc6:	add    BYTE PTR [rsi+0x0],dh
  40ecc9:	(bad)  
  40ecca:	add    BYTE PTR [rax+rax*1+0x69],ch
  40ecce:	add    BYTE PTR [rax+rax*1+0x45],ah
  40ecd2:	add    BYTE PTR [rbp+0x0],ch
  40ecd5:	jo     0x40ecd7
  40ecd7:	je     0x40ecd9
  40ecd9:	jns    0x40ecdb
  40ecdb:	push   rax
  40ecdc:	add    BYTE PTR [rcx+0x0],ah
  40ecdf:	je     0x40ece1
  40ece1:	push   0x540a00
  40ece6:	imul   eax,DWORD PTR [rax],0x6c0074
  40ecec:	add    BYTE PTR gs:[rdx],bl
  40ecef:	rex.WB add BYTE PTR [r14+0x0],bpl
  40ecf3:	jbe    0x40ecf5
  40ecf5:	(bad)  
  40ecf6:	add    BYTE PTR [rax+rax*1+0x69],ch
  40ecfa:	add    BYTE PTR [rax+rax*1+0x46],ah
  40ecfe:	add    BYTE PTR [rdi+0x0],ch
  40ed01:	ins    BYTE PTR es:[rdi],dx
  40ed02:	add    BYTE PTR [rax+rax*1+0x65],ah
  40ed06:	add    BYTE PTR [rdx+0x0],dh
  40ed09:	add    eax,DWORD PTR [rsi]
  40ed0b:	adc    dl,BYTE PTR [rip+0x11120603]        # 0x1152f314
  40ed11:	add    eax,0xe0e0200
  40ed16:	sbb    al,0x10
  40ed18:	xor    DWORD PTR [rax],eax
  40ed1a:	xor    BYTE PTR [rax],al
  40ed1c:	add    BYTE PTR cs:[rax],dh
  40ed1f:	add    BYTE PTR [rsi],ch
  40ed21:	add    BYTE PTR [rax],dh
  40ed23:	add    BYTE PTR [rsi],ch
  40ed25:	add    BYTE PTR [rax],dh
  40ed27:	add    BYTE PTR [rdx],al
  40ed29:	(bad)  
  40ed2a:	or     BYTE PTR [rdx+rcx*1],al
  40ed2d:	add    BYTE PTR [rax],al
  40ed2f:	add    BYTE PTR [rax+rax*2],al
  40ed32:	(bad)  
  40ed33:	add    BYTE PTR [rax],al
  40ed35:	or     BYTE PTR [rcx],dh
  40ed37:	add    BYTE PTR [rax],dh
  40ed39:	add    BYTE PTR [rsi],ch
  40ed3b:	add    BYTE PTR [rax],dh
  40ed3d:	add    BYTE PTR [rax],ch
  40ed3f:	rex.WRB add BYTE PTR [r9+0x0],r13b
  40ed43:	movsxd eax,DWORD PTR [rax]
  40ed45:	jb     0x40ed47
  40ed47:	outs   dx,DWORD PTR ds:[rsi]
  40ed48:	add    BYTE PTR [rbx+0x0],dh
  40ed4b:	outs   dx,DWORD PTR ds:[rsi]
  40ed4c:	add    BYTE PTR [rsi+0x0],ah
  40ed4f:	je     0x40ed51
  40ed51:	and    BYTE PTR [rax],al
  40ed53:	push   rbx
  40ed54:	add    BYTE PTR [rcx+0x0],dl
  40ed57:	rex.WR add BYTE PTR [rax],r12b
  40ed5a:	add    BYTE PTR [rbx+0x0],dl
  40ed5d:	add    BYTE PTR gs:[rdx+0x0],dh
  40ed61:	jbe    0x40ed63
  40ed63:	add    BYTE PTR gs:[rdx+0x0],dh
  40ed67:	xor    cl,BYTE PTR [rbp+0x0]
  40ed6a:	imul   eax,DWORD PTR [rax],0x720063
  40ed70:	outs   dx,DWORD PTR ds:[rsi]
  40ed71:	add    BYTE PTR [rbx+0x0],dh
  40ed74:	outs   dx,DWORD PTR ds:[rsi]
  40ed75:	add    BYTE PTR [rsi+0x0],ah
  40ed78:	je     0x40ed7a
  40ed7a:	and    BYTE PTR [rax],al
  40ed7c:	push   rbx
  40ed7d:	add    BYTE PTR [rcx+0x0],dl
  40ed80:	rex.WR add BYTE PTR [rax],r12b
  40ed83:	add    BYTE PTR [rbx+0x0],dl
  40ed86:	add    BYTE PTR gs:[rdx+0x0],dh
  40ed8a:	jbe    0x40ed8c
  40ed8c:	add    BYTE PTR gs:[rdx+0x0],dh
  40ed90:	and    BYTE PTR [rax],al
  40ed92:	xor    al,BYTE PTR [rax]
  40ed94:	xor    BYTE PTR [rax],al
  40ed96:	xor    BYTE PTR [rax],al
  40ed98:	cmp    BYTE PTR [rax],al
  40ed9a:	(bad)  
  40ed9b:	xor    DWORD PTR [rax],eax
  40ed9d:	xor    BYTE PTR [rax],al
  40ed9f:	xor    BYTE PTR [rax],al
  40eda1:	or     dh,BYTE PTR [rbx+0x0]
  40eda4:	jno    0x40eda6
  40eda6:	ins    BYTE PTR es:[rdi],dx
  40eda7:	add    BYTE PTR [rcx],dh
  40eda9:	add    BYTE PTR [rax],dh
  40edab:	add    BYTE PTR [rdx],dh
  40edad:	push   rbx
  40edae:	add    BYTE PTR [rcx+0x0],dl
  40edb1:	rex.WR add BYTE PTR [rbx+0x0],r10b
  40edb5:	add    BYTE PTR gs:[rdx+0x0],dh
  40edb9:	jbe    0x40edbb
  40edbb:	add    BYTE PTR gs:[rdx+0x0],dh
  40edbf:	rex.X add BYTE PTR [rdi+0x0],bpl
  40edc3:	outs   dx,DWORD PTR ds:[rsi]
  40edc4:	add    BYTE PTR [rbx+0x0],ch
  40edc7:	jae    0x40edc9
  40edc9:	rex.WRXB add BYTE PTR [r14+0x0],r13b
  40edcd:	ins    BYTE PTR es:[rdi],dx
  40edce:	add    BYTE PTR [rcx+0x0],ch
  40edd1:	outs   dx,BYTE PTR ds:[rsi]
  40edd2:	add    BYTE PTR [rbp+0x0],ah
  40edd5:	add    BYTE PTR cs:[rcx],dh
  40edd8:	add    BYTE PTR [rax],dh
  40edda:	add    BYTE PTR [rsi],ch
  40eddc:	add    BYTE PTR [rax],dh
  40edde:	add    BYTE PTR [rsi],cl
  40ede0:	push   rdx
  40ede1:	add    BYTE PTR [rbp+0x0],ah
  40ede4:	ins    BYTE PTR es:[rdi],dx
  40ede5:	add    BYTE PTR [rbp+0x0],ah
  40ede8:	(bad)  
  40ede9:	add    BYTE PTR [rbx+0x0],dh
  40edec:	add    BYTE PTR gs:[rdx],al
  40edef:	(bad)  
  40edf0:	or     DWORD PTR [rsp+rsi*4],eax
  40edf3:	add    BYTE PTR [rax],al
  40edf5:	add    BYTE PTR [rax+rax*1],al
  40edf8:	add    BYTE PTR [rax],al
  40edfa:	add    BYTE PTR [rdx],ch
  40edfc:	ins    DWORD PTR es:[rdi],dx
  40edfd:	add    BYTE PTR [rbx+0x0],dh
  40ee00:	sub    eax,0x65006800
  40ee05:	add    BYTE PTR [rax+rax*1+0x70],ch
  40ee09:	add    BYTE PTR [rdx],bh
  40ee0b:	add    BYTE PTR [rdi],ch
  40ee0d:	add    BYTE PTR [rdi],ch
  40ee0f:	add    BYTE PTR [rbp+0x0],cl
  40ee12:	push   rbx
  40ee13:	add    BYTE PTR [rsi],ch
  40ee15:	add    BYTE PTR [rsi+0x0],dl
  40ee18:	push   rbx
  40ee19:	add    BYTE PTR [rbx+0x0],al
  40ee1c:	rex.XB add BYTE PTR [r14],bpl
  40ee1f:	add    BYTE PTR [rsi+0x0],dh
  40ee22:	cmp    DWORD PTR [rax],eax
  40ee24:	xor    BYTE PTR [rax],al
  40ee26:	adc    dh,BYTE PTR [rbx+0x0]
  40ee29:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
  40ee2e:	add    BYTE PTR [rax+0x0],dh
  40ee31:	add    BYTE PTR cs:[rbp+0x0],ah
  40ee35:	js     0x40ee37
  40ee37:	add    BYTE PTR gs:[rax],cl
  40ee3a:	mov    DWORD PTR [rbp+rbx*2-0x337f7f33],eax
  40ee41:	xchg   ecx,eax
  40ee42:	add    eax,DWORD PTR [rsi]
  40ee44:	adc    DWORD PTR [rcx],ebx
  40ee46:	(bad)  
  40ee47:	(bad)  
  40ee48:	adc    eax,0xe011d12
  40ee4d:	add    eax,DWORD PTR [rsi]
  40ee4f:	adc    bl,BYTE PTR [rbx+rax*1]
  40ee52:	(bad)  
  40ee53:	adc    ah,BYTE PTR [rcx]
  40ee55:	add    esp,DWORD PTR [rax]
  40ee57:	add    BYTE PTR [rsi],cl
  40ee59:	add    eax,0x1d010120
  40ee5e:	(bad)  
  40ee5f:	(bad)  
  40ee60:	and    BYTE PTR [rdx],al
  40ee62:	add    DWORD PTR [rdx+rdx*1],ebx
  40ee65:	and    eax,0x11032008
  40ee6a:	sub    DWORD PTR [rsi],ecx
  40ee6c:	(bad)  
  40ee6d:	adc    DWORD PTR [rip+0x31120603],ebp        # 0x3152f476
  40ee73:	add    al,0x20
  40ee75:	add    DWORD PTR [rcx],eax
  40ee77:	add    al,BYTE PTR [rbx]
  40ee79:	(bad)  
  40ee7a:	adc    dh,BYTE PTR [rip+0xe002803]        # 0xe411683
  40ee80:	add    eax,0x1d010100
  40ee85:	(bad)  
  40ee86:	add    eax,DWORD PTR [rsi]
  40ee88:	adc    dl,BYTE PTR [rax*1+0x12010120]
  40ee8f:	adc    al,0x6
  40ee91:	and    BYTE PTR [rdx],al
  40ee93:	add    DWORD PTR [rdx+rdx*1],ebx
  40ee96:	cmp    DWORD PTR [rbx],eax
  40ee98:	(bad)  
  40ee99:	adc    bh,BYTE PTR [rip+0x41120603]        # 0x4152f4a2
  40ee9f:	add    eax,DWORD PTR [rsi]
  40eea1:	adc    al,BYTE PTR [rbp+0x3]
  40eea4:	(bad)  
  40eea5:	adc    cl,BYTE PTR [rcx+0x3]
  40eea8:	(bad)  
  40eea9:	adc    cl,BYTE PTR [rbp+0x4]
  40eeac:	sub    BYTE PTR [rax],al
  40eeae:	adc    dl,BYTE PTR [rsp+rax*1]
  40eeb1:	add    BYTE PTR [rax],al
  40eeb3:	adc    dl,BYTE PTR [rip+0x5f3fb008]        # 0x5f809ec1
  40eeb9:	jg     0x40eecc
  40eebb:	(bad)  
  40eebc:	or     bh,BYTE PTR [rdx]
  40eebe:	add    al,0x0
  40eec0:	add    BYTE PTR [rdx],dl
  40eec2:	push   rcx
  40eec3:	add    al,0x8
  40eec5:	add    BYTE PTR [rdx],dl
  40eec7:	adc    eax,0x12000804
  40eecc:	push   rcx
  40eecd:	add    al,0x20
  40eecf:	add    DWORD PTR [rcx],eax
  40eed1:	(bad)  
  40eed2:	(bad)  
  40eed3:	and    BYTE PTR [rcx],al
  40eed5:	add    DWORD PTR [rcx],edx
  40eed7:	or     BYTE PTR [rbp+0x1012004],0x8
  40eede:	and    BYTE PTR [rax+0x2400],0x4
  40eee5:	add    BYTE PTR [rax],0x0
  40eee8:	xchg   esp,eax
  40eee9:	add    BYTE PTR [rax],al
  40eeeb:	add    BYTE PTR [rsi],al
  40eeed:	add    al,BYTE PTR [rax]
  40eeef:	add    BYTE PTR [rax],al
  40eef1:	and    al,0x0
  40eef3:	add    BYTE PTR [rdx+0x53],dl
  40eef6:	xor    DWORD PTR [r8],eax
  40eef9:	add    al,0x0
  40eefb:	add    BYTE PTR [rcx],al
  40eefd:	add    BYTE PTR [rcx],al
  40eeff:	add    BYTE PTR [rdi],ah
  40ef01:	(bad)  
  40ef02:	lods   eax,DWORD PTR ss:[rsi]
  40ef04:	outs   dx,BYTE PTR ds:[rsi]
  40ef05:	pop    rdi
  40ef06:	xchg   ebp,eax
  40ef07:	xchg   BYTE PTR [rdx-0x15ce2a3e],bh
  40ef0d:	mov    esp,0x6c66cc3a
  40ef12:	(bad)  
  40ef13:	mov    cs,eax
  40ef15:	jns    0x40ef11
  40ef17:	xchg   esp,eax
  40ef18:	clc    
  40ef19:	div    DWORD PTR [rax-0xdd082ce]
  40ef1f:	in     eax,dx
  40ef20:	push   rdx
  40ef21:	xor    al,0x48
  40ef23:	clc    
  40ef24:	cmp    al,0x3d
  40ef26:	pop    rsp
  40ef27:	pop    rbp
  40ef28:	rcr    bh,cl
  40ef2a:	(bad)  
  40ef2b:	mov    esp,0x6b28c599
  40ef30:	sub    al,0x12
  40ef32:	push   rcx
  40ef33:	(bad)  
  40ef34:	mov    edi,0x2b24be5c
  40ef39:	popf   
  40ef3a:	rex.B jne 0x40ef44
  40ef3d:	xor    dh,BYTE PTR [rdx+0x49e6ffbd]
  40ef43:	(bad)  
  40ef44:	out    dx,eax
  40ef45:	mov    eax,0x526d52e5
  40ef4a:	outs   dx,DWORD PTR ds:[rsi]
  40ef4b:	fst    QWORD PTR [rbx]
  40ef4d:	add    BYTE PTR [rbp-0xd842414],dl
  40ef53:	adc    BYTE PTR [rax-0x27259364],al
  40ef59:	(bad)  
  40ef5a:	rex.WRXB stos BYTE PTR es:[rdi],al
  40ef5c:	(bad)  
  40ef5d:	shl    BYTE PTR [rcx],0xa
  40ef60:	ret    
  40ef61:	retf   
  40ef62:	movabs ds:0x7ffa2d7b562305aa,al
  40ef6b:	loop   0x40efbd
  40ef6d:	mov    bl,0xf
  40ef6f:	lods   al,BYTE PTR ds:[rsi]
  40ef70:	mov    ebp,0x99ecd462
  40ef75:	mov    ecx,0x7d7cc44a
  40ef7a:	cmp    ebp,DWORD PTR [rax]
  40ef7c:	icebp  
  40ef7d:	mul    ah
  40ef7f:	enter  0x104,0x0
  40ef83:	add    BYTE PTR [rax],al
  40ef85:	(bad)  
  40ef86:	and    BYTE PTR [rdx],al
  40ef88:	(bad)  
  40ef89:	(bad)  
  40ef8a:	adc    dl,BYTE PTR [rcx]
  40ef8c:	or     DWORD PTR [rax],eax
  40ef8e:	add    ecx,DWORD PTR [rsi]
  40ef90:	adc    al,BYTE PTR [rax+0x1c1d0ea1]
  40ef96:	add    al,0x7
  40ef98:	add    DWORD PTR [rip+0x31c],ebx        # 0x40f2ba
  40ef9e:	add    DWORD PTR [rax],ecx
  40efa0:	add    BYTE PTR [rcx],al
  40efa2:	adc    al,BYTE PTR [rax-0x567fee5b]
  40efa8:	add    eax,0x80120020
  40efad:	lods   eax,DWORD PTR ds:[rsi]
  40efae:	add    eax,0x80120020
  40efb3:	mov    cl,0x7
  40efb5:	and    BYTE PTR [rdx],al
  40efb7:	add    DWORD PTR [rsi],ecx
  40efb9:	adc    al,BYTE PTR [rax+0x121505b1]
  40efbf:	sbb    eax,0x200a0e01
  40efc4:	add    DWORD PTR [rcx],eax
  40efc6:	adc    eax,0x1b58012
  40efcb:	adc    eax,DWORD PTR [rax]
  40efcd:	add    eax,0x80120020
  40efd2:	mov    ebp,0x1012006
  40efd7:	adc    al,BYTE PTR [rax+0x22007b9]
  40efdd:	add    DWORD PTR [rdx],edx
  40efdf:	cmp    BYTE PTR [rcx+0x1200608],0x1
  40efe6:	adc    DWORD PTR [rax+0x121507c1],eax
  40efec:	add    ch,0x1
  40efef:	adc    ah,BYTE PTR [rip+0x1022005]        # 0x1430ffa
  40eff5:	sbb    al,0x18
  40eff7:	or     ah,BYTE PTR [rax]
  40eff9:	add    DWORD PTR [rcx],eax
  40effb:	adc    eax,0x1c58012
  40f000:	adc    ah,BYTE PTR [rip+0x11002004]        # 0x1141100a
  40f006:	sub    DWORD PTR [rbx],eax
  40f008:	and    BYTE PTR [rax],al
  40f00a:	add    cl,BYTE PTR [rax]
  40f00c:	add    BYTE PTR [rbx],al
  40f00e:	add    cl,BYTE PTR [rsi]
  40f010:	(bad)  
  40f011:	adc    DWORD PTR [rax+0x10004d1],eax
  40f017:	add    cl,BYTE PTR [rsi]
  40f019:	or     eax,DWORD PTR [rdi]
  40f01b:	add    al,0x11
  40f01d:	sub    DWORD PTR [rdx],edx
  40f01f:	or     cl,0xe
  40f022:	adc    al,BYTE PTR [rax+0x5d9]
  40f028:	adc    al,BYTE PTR [rax+0x20005b1]
  40f02e:	(bad)  
  40f02f:	(bad)  
  40f030:	(bad)  
  40f031:	(bad)  
  40f032:	and    BYTE PTR [rcx],al
  40f034:	adc    al,BYTE PTR [rax+0x20070eed]
  40f03a:	add    al,BYTE PTR [rdx]
  40f03c:	(bad)  
  40f03d:	adc    DWORD PTR [rax+0x2003d1],eax
  40f043:	or     BYTE PTR [rcx],cl
  40f045:	and    BYTE PTR [rax],al
  40f047:	adc    eax,0x1f18011
  40f04c:	adc    eax,DWORD PTR [rax]
  40f04e:	(bad)  
  40f04f:	adc    eax,0x1f18011
  40f054:	(bad)  
  40f055:	add    al,0x20
  40f057:	add    BYTE PTR [rbx],dl
  40f059:	add    BYTE PTR [rip+0xe010220],al        # 0xe41f27f
  40f05f:	(bad)  
  40f060:	or     BYTE PTR [rax],al
  40f062:	add    DWORD PTR [rdx],edx
  40f064:	cmp    ch,0x12
  40f067:	cmp    cl,0x14
  40f06a:	(bad)  
  40f06b:	(bad)  
  40f06c:	(bad)  
  40f06d:	adc    al,BYTE PTR [rax+0x120e0eed]
  40f073:	cmp    cl,0x12
  40f076:	cmp    ch,0x15
  40f079:	adc    DWORD PTR [rax+0xe0e01f1],eax
  40f07f:	add    BYTE PTR [rip+0xffffffff81122911],al        # 0xffffffff81531996
  40f085:	or     DWORD PTR [rsi],ecx
  40f087:	(bad)  
  40f088:	adc    DWORD PTR [rip+0x60d8111],ebp        # 0x64e719f
  40f08e:	and    BYTE PTR [rcx],al
  40f090:	add    DWORD PTR [rdx],edx
  40f092:	and    BYTE PTR [rbp+0x1022005],0x1c
  40f099:	(bad)  
  40f09a:	add    eax,0x81110000
  40f09f:	sbb    DWORD PTR [rsi],eax
  40f0a1:	and    BYTE PTR [rcx],al
  40f0a3:	add    DWORD PTR [rcx],edx
  40f0a5:	sbb    DWORD PTR [rcx],0x1012006
  40f0ab:	adc    DWORD PTR [rcx+0x1200621],eax
  40f0b1:	add    DWORD PTR [rcx],edx
  40f0b3:	and    DWORD PTR [rip+0x1012006],0x6298111        # 0x14210c3
  40f0bd:	and    BYTE PTR [rcx],al
  40f0bf:	add    DWORD PTR [rcx],edx
  40f0c1:	sub    DWORD PTR [rip+0x12010705],0x41181        # 0x1241f7d0
  40f0cb:	add    DWORD PTR [rcx],eax
  40f0cd:	add    al,BYTE PTR [rip+0x12010100]        # 0x1241f1d3
  40f0d3:	or     DWORD PTR [rsi],eax
  40f0d5:	and    BYTE PTR [rcx],al
  40f0d7:	add    DWORD PTR [rcx],edx
  40f0d9:	cmp    DWORD PTR [rcx],0x1012006
  40f0df:	adc    al,BYTE PTR [rcx+0x120053d]
  40f0e5:	add    DWORD PTR [rdx],edx
  40f0e7:	xor    DWORD PTR [rip+0xffffffff81120020],eax        # 0xffffffff8152f10d
  40f0ed:	rex.WB or BYTE PTR [r8],spl
  40f0f0:	add    eax,DWORD PTR [rcx]
  40f0f2:	adc    al,BYTE PTR [rax+0x90808b9]
  40f0f8:	and    BYTE PTR [rdx],al
  40f0fa:	add    DWORD PTR [rdx],edx
  40f0fc:	cmp    BYTE PTR [rcx+0x64d8111],0x20
  40f103:	add    DWORD PTR [rcx],eax
  40f105:	adc    al,BYTE PTR [rcx+0x2200751]
  40f10b:	add    DWORD PTR [rdx],edx
  40f10d:	sbb    DWORD PTR [rip+0x14002],0x73795333        # 0x423119
  40f117:	je     0x40f17e
  40f119:	ins    DWORD PTR es:[rdi],dx
  40f11a:	cs push rdx
  40f11c:	gs jae 0x40f18e
  40f11f:	jne    0x40f193
  40f121:	movsxd esp,DWORD PTR [rbp+0x73]
  40f124:	cs push rsp
  40f126:	outs   dx,DWORD PTR ds:[rsi]
  40f127:	outs   dx,DWORD PTR ds:[rsi]
  40f128:	ins    BYTE PTR es:[rdi],dx
  40f129:	jae    0x40f159
  40f12b:	push   rbx
  40f12c:	je     0x40f1a0
  40f12e:	outs   dx,DWORD PTR ds:[rsi]
  40f12f:	outs   dx,BYTE PTR ds:[rsi]
  40f130:	ins    BYTE PTR es:[edi],dx
  40f132:	jns    0x40f188
  40f134:	jns    0x40f1a6
  40f136:	gs fs push rdx
  40f139:	gs jae 0x40f1ab
  40f13c:	jne    0x40f1b0
  40f13e:	movsxd esp,DWORD PTR [rbp+0x42]
  40f141:	jne    0x40f1ac
  40f143:	ins    BYTE PTR es:[rdi],dx
  40f144:	fs gs jb 0x40f14f
  40f148:	xor    ch,BYTE PTR [rsi]
  40f14a:	xor    BYTE PTR [rsi],ch
  40f14c:	xor    BYTE PTR [rsi],ch
  40f14e:	xor    BYTE PTR [rax],al
  40f150:	add    BYTE PTR [rip+0x1c020200],al        # 0x1c42f356
  40f156:	sbb    al,0x4
  40f158:	(bad)  
  40f159:	add    DWORD PTR [rdx],edx
  40f15b:	adc    eax,0x1c022006
  40f160:	(bad)  
  40f161:	adc    dl,BYTE PTR [rcx]
  40f163:	add    eax,DWORD PTR [rdi]
  40f165:	add    DWORD PTR [rsi+rax*1],ebx
  40f168:	and    BYTE PTR [rcx],al
  40f16a:	add    DWORD PTR [rcx],edx
  40f16c:	and    DWORD PTR [rcx+0x8],0x20001
  40f173:	add    BYTE PTR [rax],al
  40f175:	add    BYTE PTR [rax],al
  40f177:	sub    DWORD PTR [rcx],eax
  40f179:	add    BYTE PTR [rcx+rdi*1],ah
  40f17c:	xor    BYTE PTR [rbx],dh
  40f17e:	xor    eax,0x65616231
  40f183:	sub    eax,0x61303734
  40f188:	sub    eax,0x37333134
  40f18d:	sub    eax,0x62643362
  40f192:	sub    eax,0x34366431
  40f197:	xor    esi,DWORD PTR ss:[rbx]
  40f19a:	(bad)  
  40f19b:	fs xor al,0x31
  40f19e:	cmp    DWORD PTR [rax],eax
  40f1a0:	add    BYTE PTR [rip+0x1],al        # 0x40f1a7
  40f1a6:	add    BYTE PTR [rsi],cl
  40f1a8:	add    DWORD PTR [rax],eax
  40f1aa:	or     DWORD PTR [rcx+0x52],eax
  40f1ad:	push   rax
  40f1ae:	imul   r12d,DWORD PTR [rcx+0x6c],0x676f
  40f1b6:	adc    DWORD PTR [rcx],eax
  40f1b8:	add    BYTE PTR [rcx+rsi*1],cl
  40f1bb:	xor    BYTE PTR [rsi],ch
  40f1bd:	xor    BYTE PTR [rsi],ch
  40f1bf:	xor    DWORD PTR [rsi],esi
  40f1c1:	xor    BYTE PTR [rax],dh
  40f1c3:	xor    dh,BYTE PTR cs:[rdx]
  40f1c6:	add    BYTE PTR [rax],al
  40f1c8:	xor    DWORD PTR [rcx],eax
  40f1ca:	add    BYTE PTR [rcx+rsi*1],ch
  40f1cd:	xor    BYTE PTR [rsi],ch
  40f1cf:	xor    BYTE PTR [rsi],ch
  40f1d1:	xor    DWORD PTR [rsi],esi
  40f1d3:	xor    BYTE PTR [rax],dh
  40f1d5:	xor    dh,BYTE PTR cs:[rdx]
  40f1d8:	and    BYTE PTR [rax],ch
  40f1da:	sub    BYTE PTR [rbx+0x51],dl
  40f1dd:	rex.WR pop rdi
  40f1df:	push   rax
  40f1e0:	jb     0x40f247
  40f1e2:	push   rdx
  40f1e3:	gs ins BYTE PTR es:[rdi],dx
  40f1e5:	gs (bad) 
  40f1e7:	jae    0x40f24e
  40f1e9:	sub    DWORD PTR [rsi],ebp
  40f1eb:	xor    BYTE PTR [rax],bh
  40f1ed:	xor    BYTE PTR [rdi],dh
  40f1ef:	xor    BYTE PTR [rcx],bh
  40f1f1:	sub    eax,0x34313431
  40f1f6:	and    BYTE PTR [rcx],ch
  40f1f8:	add    BYTE PTR [rax],al
  40f1fa:	add    QWORD PTR [r8],r8
  40f1fd:	rex.W
  40f1fe:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
  40f206:	je     0x40f228
  40f208:	push   rbx
  40f209:	push   rcx
  40f20a:	rex.WR and BYTE PTR [rbx+0x65],r10b
  40f20e:	jb     0x40f286
  40f210:	gs jb  0x40f233
  40f213:	imul   esi,DWORD PTR [rbx+0x20],0x65722061
  40f21a:	imul   esi,DWORD PTR [ebx+0x74],0x64657265
  40f222:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  40f226:	fs gs ins DWORD PTR es:[rdi],dx
  40f229:	(bad)  
  40f22a:	jb     0x40f297
  40f22c:	and    BYTE PTR [rdi+0x66],ch
  40f22f:	and    BYTE PTR [rbp+0x69],cl
  40f232:	movsxd esi,DWORD PTR [rdx+0x6f]
  40f235:	jae    0x40f2a6
  40f237:	data16 je 0x40f25a
  40f23a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40f23c:	jb     0x40f2ae
  40f23e:	outs   dx,DWORD PTR ds:[rsi]
  40f23f:	jb     0x40f2a2
  40f241:	je     0x40f2ac
  40f243:	outs   dx,DWORD PTR ds:[rsi]
  40f244:	outs   dx,BYTE PTR ds:[rsi]
  40f245:	add    BYTE PTR cs:[rax],al
  40f248:	sub    DWORD PTR [rcx],eax
  40f24a:	add    BYTE PTR [rcx*2+0x6f726369],ah
  40f251:	jae    0x40f2c2
  40f253:	data16 je 0x40f276
  40f256:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40f258:	jb     0x40f2ca
  40f25a:	and    BYTE PTR cs:[rcx+0x6c],al
  40f25e:	ins    BYTE PTR es:[rdi],dx
  40f25f:	and    BYTE PTR [rdx+0x69],dh
  40f262:	addr32 push 0x72207374
  40f268:	gs jae 0x40f2d0
  40f26b:	jb     0x40f2e3
  40f26d:	gs fs add BYTE PTR cs:[rax],al
  40f272:	sbb    DWORD PTR [rcx],eax
  40f274:	add    BYTE PTR [rcx*2+0x6f726369],dl
  40f27b:	jae    0x40f2ec
  40f27d:	data16 je 0x40f2a0
  40f280:	push   rbx
  40f281:	push   rcx
  40f282:	rex.WR and BYTE PTR [rbx+0x65],r10b
  40f286:	jb     0x40f2fe
  40f288:	gs jb  0x40f28b
  40f28b:	add    BYTE PTR [rdx],bl
  40f28d:	add    DWORD PTR [rax],eax
  40f28f:	adc    eax,0x7263694d
  40f294:	outs   dx,DWORD PTR ds:[rsi]
  40f295:	jae    0x40f306
  40f297:	data16 je 0x40f2ba
  40f29a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40f29c:	jb     0x40f30e
  40f29e:	outs   dx,DWORD PTR ds:[rsi]
  40f29f:	jb     0x40f302
  40f2a1:	je     0x40f30c
  40f2a3:	outs   dx,DWORD PTR ds:[rsi]
  40f2a4:	outs   dx,BYTE PTR ds:[rsi]
  40f2a5:	add    BYTE PTR [rax],al
  40f2a7:	or     BYTE PTR [rcx],al
  40f2a9:	add    BYTE PTR [rax],cl
  40f2ab:	add    BYTE PTR [rax],al
  40f2ad:	add    BYTE PTR [rax],al
  40f2af:	add    BYTE PTR [rsi],bl
  40f2b1:	add    DWORD PTR [rax],eax
  40f2b3:	add    DWORD PTR [rax],eax
  40f2b5:	push   rsp
  40f2b6:	add    dl,BYTE PTR [rsi]
  40f2b8:	push   rdi
  40f2b9:	jb     0x40f31c
  40f2bb:	jo     0x40f30b
  40f2bd:	outs   dx,DWORD PTR ds:[rsi]
  40f2be:	outs   dx,BYTE PTR ds:[rsi]
  40f2bf:	rex.RB js 0x40f325
  40f2c2:	gs jo  0x40f339
  40f2c5:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f726854
  40f2cc:	ja     0x40f341
  40f2ce:	add    DWORD PTR [rax],eax
  40f2d0:	add    BYTE PTR [rax],al
  40f2d2:	add    BYTE PTR [rax],al
  40f2d4:	rex.WRXB
  40f2d5:	cs jne 0x40f320
  40f2d8:	add    BYTE PTR [rax],al
  40f2da:	add    BYTE PTR [rax],al
  40f2dc:	add    al,BYTE PTR [rax]
  40f2de:	add    BYTE PTR [rax],al
  40f2e0:	and    eax,0xec000000
  40f2e5:	repnz add BYTE PTR [rax],al
  40f2e8:	in     al,dx
  40f2e9:	loop   0x40f2eb
  40f2eb:	add    BYTE PTR [rdx+0x53],dl
  40f2ee:	rex.R push rbx
  40f2f0:	sub    al,0x24
  40f2f2:	jge    0x40f35f
  40f2f4:	jne    0x40f355
  40f2f6:	icebp  
  40f2f7:	rex.RXB xchg r15d,eax
  40f2f9:	std    
  40f2fa:	movsxd ebp,DWORD PTR [rdi]
  40f2fc:	xchg   ebx,eax
  40f2fd:	mov    ebx,0x1462f
  40f302:	add    BYTE PTR [rax],al
  40f304:	push   rbx
  40f305:	gs je  0x40f37d
  40f308:	jo     0x40f34b
  40f30a:	push   rdx
  40f30b:	push   rax
  40f30c:	cs jo  0x40f373
  40f30f:	(bad)  
	...

Disassembly of section .rsrc:

0000000000410000 <.rsrc>:
	...
  41000c:	add    BYTE PTR [rax],al
  41000e:	add    al,0x0
  410010:	add    eax,DWORD PTR [rax]
  410012:	add    BYTE PTR [rax],al
  410014:	xor    BYTE PTR [rax],al
  410016:	add    BYTE PTR [rax+0xe],al
  41001c:	push   rax
  41001d:	add    BYTE PTR [rax],al
  41001f:	adc    BYTE PTR [rax],0x0
  410022:	add    BYTE PTR [rax],al
  410024:	push   0x18800000
  410029:	add    BYTE PTR [rax],al
  41002b:	add    BYTE PTR [rax+0x800000],al
	...
  41003d:	add    BYTE PTR [rdx],al
  41003f:	add    BYTE PTR [rcx],al
  410041:	add    BYTE PTR [rax],al
  410043:	add    BYTE PTR [rax+0x2800000],bl
  410049:	add    BYTE PTR [rax],al
  41004b:	add    BYTE PTR [rax+0x800000],dh
	...
  41005d:	add    BYTE PTR [rcx],al
  41005f:	add    BYTE PTR [rbp+0x0],ah
  410062:	add    BYTE PTR [rax],al
  410064:	enter  0x0,0x80
	...
  410074:	add    BYTE PTR [rax],al
  410076:	add    DWORD PTR [rax],eax
  410078:	add    DWORD PTR [rax],eax
  41007a:	add    BYTE PTR [rax],al
  41007c:	loopne 0x41007e
  41007e:	add    BYTE PTR [rax+0x0],al
	...
  41008c:	add    BYTE PTR [rax],al
  41008e:	add    DWORD PTR [rax],eax
  410090:	add    DWORD PTR [rax],eax
  410092:	add    BYTE PTR [rax],al
  410094:	clc    
  410095:	add    BYTE PTR [rax],al
  410097:	add    BYTE PTR [rax],0x0
	...
  4100a6:	add    DWORD PTR [rax],eax
  4100a8:	or     DWORD PTR [rax+rax*1],eax
  4100ab:	add    BYTE PTR [rax],dl
  4100ad:	add    DWORD PTR [rax],eax
	...
  4100bb:	add    BYTE PTR [rax],al
  4100bd:	add    BYTE PTR [rcx],al
  4100bf:	add    BYTE PTR [rcx],cl
  4100c1:	add    al,0x0
  4100c3:	add    BYTE PTR [rax],ah
  4100c5:	add    DWORD PTR [rax],eax
	...
  4100d3:	add    BYTE PTR [rax],al
  4100d5:	add    BYTE PTR [rcx],al
  4100d7:	add    BYTE PTR [rcx],cl
  4100d9:	add    al,0x0
  4100db:	add    BYTE PTR [rax],dh
  4100dd:	add    DWORD PTR [rax],eax
	...
  4100eb:	add    BYTE PTR [rax],al
  4100ed:	add    BYTE PTR [rcx],al
  4100ef:	add    BYTE PTR [rcx],cl
  4100f1:	add    al,0x0
  4100f3:	add    BYTE PTR [rax+0x1],al
	...
  410106:	add    DWORD PTR [rax],eax
  410108:	or     DWORD PTR [rax+rax*1],eax
  41010b:	add    BYTE PTR [rax+0x1],dl
  41010e:	add    BYTE PTR [rax],al
  410110:	sbb    BYTE PTR [rcx+rax*1],al
  410113:	add    BYTE PTR [rax+0x10],ch
  410119:	add    BYTE PTR [rax],al
  41011b:	add    BYTE PTR [rax],al
  41011d:	add    BYTE PTR [rax],al
  41011f:	add    al,al
  410121:	adc    al,0x1
  410123:	add    BYTE PTR [rax+0x4],ch
	...
  41012e:	add    BYTE PTR [rax],al
  410130:	sub    BYTE PTR [rcx],bl
  410132:	add    DWORD PTR [rax],eax
  410134:	and    al,BYTE PTR [rax]
	...
  41013e:	add    BYTE PTR [rax],al
  410140:	push   rax
  410141:	sbb    DWORD PTR [rcx],eax
  410143:	add    BYTE PTR [rax+0x4],ch
  410149:	add    BYTE PTR [rax],al
  41014b:	add    BYTE PTR [rax],al
  41014d:	add    BYTE PTR [rax],al
  41014f:	add    BYTE PTR [rax+0x1],ah
  410152:	add    DWORD PTR [rax],eax
  410154:	mov    ch,0x2
	...
  41015e:	add    BYTE PTR [rax],al
  410160:	cmp    al,0x3f
  410162:	js     0x4101d1
  410164:	ins    BYTE PTR es:[rdi],dx
  410165:	and    BYTE PTR [rsi+0x65],dh
  410168:	jb     0x4101dd
  41016a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  410171:	xor    BYTE PTR [rdx],ah
  410173:	and    BYTE PTR [rbp+0x6e],ah
  410176:	movsxd ebp,DWORD PTR [rdi+0x64]
  410179:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
  410180:	rex.RX sub eax,0x73202238
  410186:	je     0x4101e9
  410188:	outs   dx,BYTE PTR ds:[rsi]
  410189:	fs (bad) 
  41018b:	ins    BYTE PTR es:[rdi],dx
  41018c:	outs   dx,DWORD PTR ds:[rsi]
  41018d:	outs   dx,BYTE PTR ds:[rsi]
  41018e:	gs cmp eax,0x73657922
  410194:	and    bh,BYTE PTR [rdi]
  410196:	ds or  eax,0x2d213c0a
  41019c:	sub    eax,0x706f4320
  4101a1:	jns    0x410215
  4101a3:	imul   esp,DWORD PTR [rdi+0x68],0xa9c22074
  4101aa:	and    BYTE PTR [rcx],dh
  4101ac:	cmp    DWORD PTR [rax],edi
  4101ae:	xor    DWORD PTR [rip+0x31303032],ebp        # 0x317131e6
  4101b4:	and    BYTE PTR [rbp+0x69],cl
  4101b7:	movsxd esi,DWORD PTR [rdx+0x6f]
  4101ba:	jae    0x41022b
  4101bc:	data16 je 0x4101df
  4101bf:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4101c1:	jb     0x410233
  4101c3:	outs   dx,DWORD PTR ds:[rsi]
  4101c4:	jb     0x410227
  4101c6:	je     0x410231
  4101c8:	outs   dx,DWORD PTR ds:[rsi]
  4101c9:	outs   dx,BYTE PTR ds:[rsi]
  4101ca:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0xa4e3ffd
  4101d0:	cmp    al,0x61
  4101d2:	jae    0x410247
  4101d4:	gs ins DWORD PTR es:[rdi],dx
  4101d6:	(bad)  
  4101d7:	ins    BYTE PTR es:[rdi],dx
  4101d8:	jns    0x4101fa
  4101da:	js     0x410249
  4101dc:	ins    BYTE PTR es:[rdi],dx
  4101dd:	outs   dx,BYTE PTR ds:[rsi]
  4101de:	jae    0x41021d
  4101e0:	and    dh,BYTE PTR [rbp+0x72]
  4101e3:	outs   dx,BYTE PTR ds:[rsi]
  4101e4:	cmp    dh,BYTE PTR [rbx+0x63]
  4101e7:	push   0x73616d65
  4101ec:	sub    eax,0x7263696d
  4101f1:	outs   dx,DWORD PTR ds:[rsi]
  4101f2:	jae    0x410263
  4101f4:	data16 je 0x410224
  4101f7:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4101fa:	cmp    ah,BYTE PTR [rcx+0x73]
  4101fd:	ins    DWORD PTR es:[rdi],dx
  4101fe:	cs jbe 0x410232
  410201:	and    cl,BYTE PTR [rip+0x616d200a]        # 0x61ae2211
  410207:	outs   dx,BYTE PTR ds:[rsi]
  410208:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
  41020f:	jb     0x410284
  410211:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  410218:	xor    BYTE PTR [rdx],ah
  41021a:	and    BYTE PTR ds:[rip+0x200a0d0a],cl        # 0x204b0f2b
  410221:	and    BYTE PTR [rcx+riz*2],bh
  410224:	jae    0x410299
  410226:	gs ins DWORD PTR es:[rdi],dx
  410228:	(bad)  
  410229:	ins    BYTE PTR es:[rdi],dx
  41022a:	jns    0x410275
  41022c:	fs outs dx,BYTE PTR gs:[rsi]
  41022f:	je     0x41029a
  410231:	je     0x4102ac
  410233:	and    BYTE PTR [rsi+0x65],dh
  410236:	jb     0x4102ab
  410238:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  41023f:	xor    BYTE PTR [rsi],ch
  410241:	xor    BYTE PTR [rsi],ch
  410243:	xor    BYTE PTR [rdx],ah
  410245:	or     eax,0x2020200a
  41024a:	and    BYTE PTR [rax],ah
  41024c:	jo     0x4102c0
  41024e:	outs   dx,DWORD PTR ds:[rsi]
  41024f:	movsxd esp,DWORD PTR [rbp+0x73]
  410252:	jae    0x4102c3
  410254:	jb     0x410297
  410256:	jb     0x4102bb
  410258:	push   0x63657469
  41025d:	je     0x4102d4
  41025f:	jb     0x4102c6
  410261:	cmp    eax,0x646d6122
  410266:	ss xor al,0x22
  410269:	or     eax,0x2020200a
  41026e:	and    BYTE PTR [rax],ah
  410270:	outs   dx,BYTE PTR ds:[rsi]
  410271:	(bad)  
  410272:	ins    DWORD PTR es:[rdi],dx
  410273:	gs cmp eax,0x74655322
  410279:	jne    0x4102eb
  41027b:	push   r10
  41027d:	push   rax
  41027e:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x2061228e
  410284:	and    BYTE PTR [rax],ah
  410286:	je     0x410301
  410288:	jo     0x4102ef
  41028a:	cmp    eax,0x6e697722
  41028f:	xor    esi,DWORD PTR [rdx]
  410291:	and    ch,BYTE PTR [rdi]
  410293:	and    BYTE PTR ds:[rip+0x200a0d0a],cl        # 0x204b0fa4
  41029a:	and    BYTE PTR [rsp+riz*2],bh
  41029d:	gs jae 0x410303
  4102a0:	jb     0x41030b
  4102a2:	jo     0x410318
  4102a4:	imul   ebp,DWORD PTR [rdi+0x6e],0x4c51533e
  4102ab:	and    BYTE PTR [rbx+0x65],dl
  4102ae:	je     0x410325
  4102b0:	jo     0x4102ee
  4102b2:	(bad)  
  4102b3:	fs gs jae 0x41031a
  4102b7:	jb     0x410322
  4102b9:	jo     0x41032f
  4102bb:	imul   ebp,DWORD PTR [rdi+0x6e],0xa0d203e
  4102c2:	or     eax,0x3c20200a
  4102c7:	and    DWORD PTR [rip+0x6449202d],ebp        # 0x648a22fa
  4102cd:	outs   dx,BYTE PTR gs:[rsi]
  4102cf:	je     0x41033a
  4102d1:	data16 jns 0x4102f4
  4102d4:	je     0x41033e
  4102d6:	and    BYTE PTR gs:[rcx+0x70],ah
  4102da:	jo     0x410348
  4102dc:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  4102e3:	and    BYTE PTR [rbx+0x65],dh
  4102e6:	movsxd esi,DWORD PTR [rbp+0x72]
  4102e9:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x75716572
  4102f1:	imul   esi,DWORD PTR [rdx+0x65],0x746e656d
  4102f8:	jae    0x410328
  4102fa:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0xa4e412d
  410300:	or     eax,0x3c20200a
  410305:	je     0x410379
  410307:	jne    0x41037c
  410309:	je     0x410354
  41030b:	outs   dx,BYTE PTR ds:[rsi]
  41030c:	outs   dx,WORD PTR ds:[rsi]
  41030e:	and    BYTE PTR [rax+0x6d],bh
  410311:	ins    BYTE PTR es:[rdi],dx
  410312:	outs   dx,BYTE PTR ds:[rsi]
  410313:	jae    0x410352
  410315:	and    dh,BYTE PTR [rbp+0x72]
  410318:	outs   dx,BYTE PTR ds:[rsi]
  410319:	cmp    dh,BYTE PTR [rbx+0x63]
  41031c:	push   0x73616d65
  410321:	sub    eax,0x7263696d
  410326:	outs   dx,DWORD PTR ds:[rsi]
  410327:	jae    0x410398
  410329:	data16 je 0x410359
  41032c:	movsxd ebp,DWORD PTR [rdi+0x6d]
  41032f:	cmp    ah,BYTE PTR [rcx+0x73]
  410332:	ins    DWORD PTR es:[rdi],dx
  410333:	cs jbe 0x410368
  410336:	and    bh,BYTE PTR [rsi]
  410338:	or     eax,0x2020200a
  41033d:	and    BYTE PTR [rbx+rsi*2],bh
  410340:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  410344:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
  41034c:	and    BYTE PTR [rax],ah
  41034e:	and    BYTE PTR [rax],ah
  410350:	cmp    al,0x72
  410352:	gs jno 0x4103ca
  410355:	gs jae 0x4103cc
  410358:	gs fs push rax
  41035b:	jb     0x4103c6
  41035d:	jbe    0x4103c8
  41035f:	ins    BYTE PTR es:[rdi],dx
  410360:	gs addr32 gs jae 0x4103a3
  410365:	or     eax,0x2020200a
  41036a:	and    BYTE PTR [rax],ah
  41036c:	and    BYTE PTR [rax],ah
  41036e:	and    BYTE PTR [rdx+rsi*2],bh
  410371:	gs jno 0x4103e9
  410374:	gs jae 0x4103eb
  410377:	gs fs rex.RB js 0x4103e1
  41037c:	movsxd esi,DWORD PTR [rbp+0x74]
  41037f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
  410386:	ins    BYTE PTR es:[rdi],dx
  410387:	or     eax,0x2020200a
  41038c:	and    BYTE PTR [rax],ah
  41038e:	and    BYTE PTR [rax],ah
  410390:	and    BYTE PTR [rax],ah
  410392:	and    BYTE PTR [rbp+riz*2+0x76],ch
  410396:	gs ins BYTE PTR es:[rdi],dx
  410398:	cmp    eax,0x49736122
  41039d:	outs   dx,BYTE PTR ds:[rsi]
  41039e:	jbe    0x41040f
  4103a0:	imul   esp,DWORD PTR [rbp+0x72],0x22
  4103a4:	or     eax,0x2020200a
  4103a9:	and    BYTE PTR [rax],ah
  4103ab:	and    BYTE PTR [rax],ah
  4103ad:	and    BYTE PTR [rax],ah
  4103af:	and    BYTE PTR [rbp+0x69],dh
  4103b2:	movsxd esp,DWORD PTR [r11+0x65]
  4103b6:	jae    0x41042b
  4103b8:	cmp    eax,0x6c616622
  4103bd:	jae    0x410424
  4103bf:	and    ch,BYTE PTR [rdi]
  4103c1:	ds or  eax,0x2020200a
  4103c7:	and    BYTE PTR [rax],ah
  4103c9:	and    BYTE PTR [rax],ah
  4103cb:	and    BYTE PTR [rdi+rbp*1],bh
  4103ce:	jb     0x410435
  4103d0:	jno    0x410447
  4103d2:	gs jae 0x410449
  4103d5:	gs fs push rax
  4103d8:	jb     0x410443
  4103da:	jbe    0x410445
  4103dc:	ins    BYTE PTR es:[rdi],dx
  4103dd:	gs addr32 gs jae 0x410420
  4103e2:	or     eax,0x2020200a
  4103e7:	and    BYTE PTR [rax],ah
  4103e9:	and    BYTE PTR [rax],ah
  4103eb:	cmp    al,0x2f
  4103ed:	jae    0x410454
  4103ef:	movsxd esi,DWORD PTR [rbp+0x72]
  4103f2:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
  4103fa:	cmp    al,0x2f
  4103fc:	je     0x410470
  4103fe:	jne    0x410473
  410400:	je     0x41044b
  410402:	outs   dx,BYTE PTR ds:[rsi]
  410403:	outs   dx,WORD PTR ds:[rsi]
  410405:	ds or  eax,0x3c0a0d0a
  41040b:	(bad)  
  41040c:	(bad)  
  41040d:	jae    0x410482
  41040f:	gs ins DWORD PTR es:[rdi],dx
  410411:	(bad)  
  410412:	ins    BYTE PTR es:[rdi],dx
  410413:	jns    0x410453
  410415:	add    BYTE PTR [rax],al
  410417:	add    BYTE PTR [rax],ch
  410419:	add    BYTE PTR [rax],al
  41041b:	add    BYTE PTR [rax],ah
  41041d:	add    BYTE PTR [rax],al
  41041f:	add    BYTE PTR [rax+0x0],al
  410422:	add    BYTE PTR [rax],al
  410424:	add    DWORD PTR [rax],eax
  410426:	and    BYTE PTR [rax],al
	...
  4104e0:	xchg   DWORD PTR [rsi+riz*2-0x1],esi
  4104e4:	test   DWORD PTR [rbx+0x65],esi
  4104e7:	inc    DWORD PTR [rbp-0x7c009c8e]
  4104ed:	jo     0x410551
  4104ef:	inc    DWORD PTR [rbx-0x7d009e91]
  4104f5:	outs   dx,BYTE PTR ds:[rsi]
  4104f6:	pop    rdi
  4104f7:	inc    DWORD PTR [rcx-0x7f00a193]
  4104fd:	ins    BYTE PTR es:[rdi],dx
  4104fe:	pop    rbp
  4104ff:	inc    DWORD PTR [rax+0x7eff5c6c]
  410505:	push   0x5b
  410507:	(bad)  
  410508:	jle    0x410573
  41050a:	pop    rdx
  41050b:	(bad)  
  41050c:	jge    0x410577
  41050e:	pop    rcx
  41050f:	(bad)  
  410510:	jl     0x410579
  410512:	pop    rax
  410513:	(bad)  
  410514:	jnp    0x41057d
  410516:	push   rdi
  410517:	(bad)  
  410518:	jnp    0x410580
  41051a:	push   rsi
  41051b:	(bad)  
  41051c:	jp     0x410584
  41051e:	push   rsi
  41051f:	(bad)  
  410520:	jp     0x410587
  410522:	push   rbp
  410523:	inc    DWORD PTR [rax]
	...
  41055d:	add    BYTE PTR [rax],al
  41055f:	add    BYTE PTR [rcx-0x1009689],cl
  410565:	sti    
  410566:	cli    
  410567:	call   rdx
  410569:	mov    cl,0xa2
  41056b:	inc    esi
  41056d:	movabs ds:0xa3c6ff92a3c6ff92,eax
  410576:	xchg   edx,eax
  410577:	inc    esi
  410579:	movabs ds:0xa3c6ff92a3c6ff92,eax
  410582:	xchg   edx,eax
  410583:	inc    esi
  410585:	movabs ds:0xa3c6ff92a3c6ff92,eax
  41058e:	xchg   edx,eax
  41058f:	inc    esi
  410591:	movabs ds:0xa3c6ff92a3c6ff92,eax
  41059a:	xchg   edx,eax
  41059b:	inc    edi
  41059d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41059e:	xchg   esi,eax
  41059f:	(bad)  
  4105a0:	jnp    0x410608
  4105a2:	push   rdi
  4105a3:	inc    DWORD PTR [rax]
	...
  4105dd:	add    BYTE PTR [rax],al
  4105df:	add    BYTE PTR [rbx-0x1009487],cl
  4105e5:	sti    
  4105e6:	cli    
  4105e7:	push   rsp
  4105e9:	fxch   st(4)
  4105eb:	push   rsp
  4105ed:	fmul   st,st(4)
  4105ef:	push   rsp
  4105f1:	fmul   st,st(4)
  4105f3:	push   rsp
  4105f5:	fmul   st,st(3)
  4105f7:	push   rsp
  4105f9:	fmul   st,st(3)
  4105fb:	push   rsp
  4105fd:	xlat   BYTE PTR ds:[rbx]
  4105fe:	retf   
  4105ff:	push   rsp
  410601:	fmul   st,st(2)
  410603:	push   rbx
  410605:	xlat   BYTE PTR ds:[rbx]
  410606:	leave  
  410607:	push   rbx
  410609:	xlat   BYTE PTR ds:[rbx]
  41060a:	retf   0xf4ff
  41060d:	(bad)  
  41060e:	leave  
  41060f:	push   rbx
  410611:	(bad)  
  410612:	leave  
  410613:	push   rbx
  410615:	(bad)  
  410616:	enter  0xf3ff,0xd5
  41061a:	(bad)  
  41061b:	dec    eax
  41061d:	stos   DWORD PTR es:[rdi],eax
  41061e:	fwait
  41061f:	(bad)  
  410620:	jl     0x41068a
  410622:	pop    rax
  410623:	inc    DWORD PTR [rax]
	...
  41065d:	add    BYTE PTR [rax],al
  41065f:	add    BYTE PTR [rbp-0x1009185],cl
  410665:	cld    
  410666:	cli    
  410667:	push   rsp
  410669:	fcmove st,st(6)
  41066b:	push   rbp
  41066d:	fcmove st,st(6)
  41066f:	push   rsp
  410671:	fxch   st(5)
  410673:	push   rsp
  410675:	fcmove st,st(5)
  410677:	push   rsp
  410679:	fxch   st(5)
  41067b:	push   rsp
  41067d:	fxch   st(5)
  41067f:	push   rsp
  410681:	fxch   st(4)
  410683:	push   rsp
  410685:	fxch   st(4)
  410687:	push   rsp
  410689:	fmul   st,st(3)
  41068b:	push   rbx
  41068d:	xlat   BYTE PTR ds:[rbx]
  41068e:	retf   0x2eff
  410691:	int3   
  410692:	add    bh,bh
  410694:	cmp    ecx,eax
  410696:	add    bh,bh
  410698:	repz (bad) 
  41069a:	enter  0xc8ff,0xab
  41069e:	fwait
  41069f:	(bad)  
  4106a0:	jge    0x41070b
  4106a2:	pop    rcx
  4106a3:	inc    DWORD PTR [rax]
	...
  4106dd:	add    BYTE PTR [rax],al
  4106df:	add    BYTE PTR [rsi-0x1008e82],cl
  4106e5:	cld    
  4106e6:	sti    
  4106e7:	push   rbp
  4106e9:	fcmovne st,st(7)
  4106eb:	push   rsp
  4106ed:	fcmovne st,st(7)
  4106ef:	push   rbp
  4106f1:	fcmovne st,st(7)
  4106f3:	push   rsp
  4106f5:	fcmove st,st(7)
  4106f7:	push   rbp
  4106f9:	fcmove st,st(6)
  4106fb:	push   rbp
  4106fd:	fcmove st,st(6)
  4106ff:	push   rbp
  410701:	fcmove st,st(5)
  410703:	push   rsp
  410705:	fxch   st(5)
  410707:	push   rsp
  410709:	fxch   st(4)
  41070b:	push   rsp
  41070d:	fmul   st,st(4)
  41070f:	jmp    QWORD PTR [rdi]
  410711:	(bad)  
  410712:	add    bh,bh
  410714:	xor    ecx,ecx
  410716:	add    bh,bh
  410718:	repz fmul st,st(2)
  41071b:	dec    eax
  41071d:	stos   DWORD PTR es:[rdi],eax
  41071e:	fwait
  41071f:	(bad)  
  410720:	jg     0x41078d
  410722:	pop    rsp
  410723:	inc    DWORD PTR [rax]
	...
  41075d:	add    BYTE PTR [rax],al
  41075f:	add    BYTE PTR [rcx-0x1008b7f],dl
  410765:	cld    
  410766:	sti    
  410767:	push   rbp
  410769:	(bad)  
  41076b:	push   rbp
  41076d:	(bad)  
  41076f:	push   rbp
  410771:	fst    st(1)
  410773:	push   rbp
  410775:	fst    st(1)
  410777:	push   rbp
  410779:	(bad)  
  41077b:	push   rbp
  41077d:	(bad)  
  41077f:	push   rbp
  410781:	fcmovnbe st,st(0)
  410783:	push   rsp
  410785:	fcmovne st,st(7)
  410787:	push   rsp
  410789:	fcmovne st,st(7)
  41078b:	push   rbp
  41078d:	fcmove st,st(6)
  41078f:	push   rbp
  410791:	fxch   st(5)
  410793:	push   rsp
  410795:	fxch   st(4)
  410797:	push   rbx
  410799:	fxch   st(3)
  41079b:	dec    eax
  41079d:	stos   DWORD PTR es:[rdi],eax
  41079e:	fwait
  41079f:	inc    DWORD PTR [rcx+0xff5e6d]
	...
  4107dd:	add    BYTE PTR [rax],al
  4107df:	add    BYTE PTR [rbx-0x100887d],dl
  4107e5:	cld    
  4107e6:	sti    
  4107e7:	push   rsi
  4107e9:	(bad)  
  4107eb:	push   rbp
  4107ed:	(bad)  
  4107ef:	push   rbp
  4107f1:	(bad)  
  4107f3:	push   rbp
  4107f5:	(bad)  
  4107f7:	push   rbp
  4107f9:	fst    st(2)
  4107fb:	push   rbp
  4107fd:	fst    st(2)
  4107ff:	push   rbp
  410801:	(bad)  
  410803:	push   rbp
  410805:	fst    st(1)
  410807:	push   rbp
  410809:	fcmovnbe st,st(0)
  41080b:	push   rsp
  41080d:	fcmovne st,st(7)
  41080f:	push   rbp
  410811:	fcmovne st,st(6)
  410813:	push   rbp
  410815:	fcmove st,st(6)
  410817:	push   rbp
  410819:	fcmove st,st(5)
  41081b:	dec    eax
  41081d:	stos   DWORD PTR es:[rdi],eax
  41081e:	fwait
  41081f:	inc    DWORD PTR [rcx+0xff606f]
	...
  41085d:	add    BYTE PTR [rax],al
  41085f:	add    BYTE PTR [rbp-0x100857a],dl
  410865:	cld    
  410866:	sti    
  410867:	push   rsi
  410869:	(bad)  
  41086b:	push   rsi
  41086d:	loopne 0x410844
  41086f:	push   rsi
  410871:	(bad)  
  410873:	push   rsi
  410875:	loopne 0x41084c
  410877:	push   rbp
  410879:	(bad)  
  41087b:	push   rbp
  41087d:	(bad)  
  41087f:	push   rsi
  410881:	(bad)  
  410883:	push   rsi
  410885:	(bad)  
  410887:	push   rsi
  410889:	fst    st(2)
  41088b:	push   rsi
  41088d:	fst    st(1)
  41088f:	push   rbp
  410891:	(bad)  
  410893:	push   rbp
  410895:	fcmovnbe st,st(0)
  410897:	push   rbp
  410899:	fcmove st,st(7)
  41089b:	dec    eax
  41089d:	stos   DWORD PTR es:[rdi],eax
  41089e:	fwait
  41089f:	inc    DWORD PTR [rbx+0xff6270]
	...
  4108dd:	add    BYTE PTR [rax],al
  4108df:	add    BYTE PTR [rax-0x1008277],bl
  4108e5:	cld    
  4108e6:	sti    
  4108e7:	push   rdi
  4108e9:	loope  0x4108c2
  4108eb:	push   rdi
  4108ed:	loope  0x4108c7
  4108ef:	push   rsi
  4108f1:	loope  0x4108cb
  4108f3:	push   rdi
  4108f5:	loope  0x4108ce
  4108f7:	push   rsi
  4108f9:	loopne 0x4108d2
  4108fb:	push   rsi
  4108fd:	loopne 0x4108d5
  4108ff:	push   rsi
  410901:	(bad)  
  410903:	push   rsi
  410905:	(bad)  
  410907:	push   rsi
  410909:	(bad)  
  41090b:	push   rbp
  41090d:	(bad)  
  41090f:	push   rbp
  410911:	fst    st(2)
  410913:	push   rbp
  410915:	fst    st(1)
  410917:	push   rbp
  410919:	(bad)  
  41091b:	dec    eax
  41091d:	stos   DWORD PTR es:[rdi],eax
  41091e:	fwait
  41091f:	inc    DWORD PTR [rbp+0xff6573]
	...
  41095d:	add    BYTE PTR [rax],al
  41095f:	add    BYTE PTR [rdx-0x1007f74],bl
  410965:	cld    
  410966:	cld    
  410967:	push   rdi
  410969:	jrcxz  0x410944
  41096b:	push   rdi
  41096d:	jrcxz  0x410949
  41096f:	push   rdi
  410971:	jrcxz  0x41094c
  410973:	push   rdi
  410975:	loop   0x410950
  410977:	push   rdi
  410979:	loop   0x410954
  41097b:	push   rsi
  41097d:	loop   0x410957
  41097f:	push   rsi
  410981:	loope  0x41095b
  410983:	push   rsi
  410985:	loope  0x41095d
  410987:	push   rsi
  410989:	loopne 0x410961
  41098b:	push   rsi
  41098d:	loopne 0x410964
  41098f:	push   rsi
  410991:	(bad)  
  410993:	push   rbp
  410995:	(bad)  
  410997:	push   rbp
  410999:	fst    st(2)
  41099b:	dec    eax
  41099d:	stos   DWORD PTR es:[rdi],eax
  41099e:	fwait
  41099f:	inc    DWORD PTR [rdi+0xff6775]
	...
  4109dd:	add    BYTE PTR [rax],al
  4109df:	add    BYTE PTR [rsi+rcx*4-0x201007c],bl
  4109e6:	cld    
  4109e7:	(bad)  
  4109e8:	clc    
  4109e9:	in     eax,0xdc
  4109eb:	push   rdi
  4109ed:	in     eax,0xdc
  4109ef:	(bad)  
  4109f0:	clc    
  4109f1:	in     al,0xdc
  4109f3:	push   rdi
  4109f5:	in     al,0xdb
  4109f7:	push   rdi
  4109f9:	in     al,0xda
  4109fb:	push   rdi
  4109fd:	jrcxz  0x4109d9
  4109ff:	push   rdi
  410a01:	loop   0x4109dc
  410a03:	push   rdi
  410a05:	loop   0x4109e0
  410a07:	push   rdi
  410a09:	loop   0x4109e3
  410a0b:	push   rdi
  410a0d:	loopne 0x4109e6
  410a0f:	push   rsi
  410a11:	loopne 0x4109e9
  410a13:	push   rsi
  410a15:	(bad)  
  410a17:	push   rsi
  410a19:	(bad)  
  410a1b:	dec    eax
  410a1d:	stos   DWORD PTR es:[rdi],eax
  410a1e:	fwait
  410a1f:	dec    DWORD PTR [rcx+0xff6977]
	...
  410a5d:	add    BYTE PTR [rax],al
  410a5f:	add    BYTE PTR [rdi-0x100796f],bl
  410a65:	std    
  410a66:	cld    
  410a67:	(bad)  
  410a68:	clc    
  410a69:	out    0xdf,al
  410a6b:	(bad)  
  410a6c:	clc    
  410a6d:	out    0xde,al
  410a6f:	(bad)  
  410a70:	clc    
  410a71:	out    0xde,al
  410a73:	push   rdi
  410a75:	out    0xdd,al
  410a77:	(bad)  
  410a78:	clc    
  410a79:	in     eax,0xdc
  410a7b:	push   rdi
  410a7d:	in     al,0xdc
  410a7f:	(bad)  
  410a80:	clc    
  410a81:	in     al,0xdc
  410a83:	push   rdi
  410a85:	in     al,0xdb
  410a87:	push   rdi
  410a89:	jrcxz  0x410a64
  410a8b:	push   rdi
  410a8d:	loop   0x410a67
  410a8f:	push   rdi
  410a91:	loope  0x410a6a
  410a93:	push   rsi
  410a95:	loopne 0x410a6d
  410a97:	push   rsi
  410a99:	(bad)  
  410a9b:	dec    eax
  410a9d:	stos   DWORD PTR es:[rdi],eax
  410a9e:	fwait
  410a9f:	dec    DWORD PTR [rbx+0xff6c7a]
	...
  410add:	add    BYTE PTR [rax],al
  410adf:	add    BYTE PTR [rcx-0x100766c],ah
  410ae5:	std    
  410ae6:	cld    
  410ae7:	(bad)  
  410ae8:	clc    
  410ae9:	call   0xffffffffe83a0acf
  410aee:	loope  0x410aef
  410af0:	clc    
  410af1:	call   0xffffffffe83a0ad6
  410af6:	(bad)  
  410af8:	stc    
  410af9:	out    0xdf,eax
  410afb:	push   rdi
  410afd:	out    0xde,eax
  410aff:	(bad)  
  410b00:	clc    
  410b01:	out    0xdd,al
  410b03:	push   rdi
  410b05:	in     eax,0xdc
  410b07:	(bad)  
  410b08:	clc    
  410b09:	in     al,0xdc
  410b0b:	push   rdi
  410b0d:	in     al,0xda
  410b0f:	push   rdi
  410b11:	loop   0x410aec
  410b13:	push   rdi
  410b15:	loope  0x410aef
  410b17:	push   rdi
  410b19:	loope  0x410af1
  410b1b:	dec    eax
  410b1d:	stos   DWORD PTR es:[rdi],eax
  410b1e:	fwait
  410b1f:	dec    DWORD PTR [rbp+0xff707c]
	...
  410b5d:	add    BYTE PTR [rax],al
  410b5f:	add    BYTE PTR [rbx-0x1007369],ah
  410b65:	std    
  410b66:	cld    
  410b67:	(bad)  
  410b68:	stc    
  410b69:	(bad)  
  410b6a:	jrcxz  0x410b6b
  410b6c:	stc    
  410b6d:	(bad)  
  410b6e:	loop   0x410b6f
  410b70:	clc    
  410b71:	jmp    0xffffffffe93a0b59
  410b76:	loope  0x410b77
  410b78:	clc    
  410b79:	jmp    0xffffffffe93b0b5f
  410b7e:	loopne 0x410b7f
  410b80:	clc    
  410b81:	out    0xdf,eax
  410b83:	(bad)  
  410b84:	clc    
  410b85:	out    0xdf,al
  410b87:	(bad)  
  410b88:	clc    
  410b89:	out    0xdd,al
  410b8b:	(bad)  
  410b8c:	clc    
  410b8d:	in     eax,0xdd
  410b8f:	push   rdi
  410b91:	in     al,0xdb
  410b93:	push   rdi
  410b95:	jrcxz  0x410b71
  410b97:	push   rsi
  410b99:	loop   0x410b73
  410b9b:	inc    edi
  410b9d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  410b9e:	xchg   esi,eax
  410b9f:	dec    DWORD PTR [rdi+0xff727f]
	...
  410bdd:	add    BYTE PTR [rax],al
  410bdf:	add    BYTE PTR [rbp-0x1007066],ah
  410be5:	std    
  410be6:	std    
  410be7:	(bad)  
  410be8:	stc    
  410be9:	jmp    0x410bd0
  410beb:	(bad)  
  410bec:	stc    
  410bed:	jmp    0x410bd4
  410bef:	(bad)  
  410bf0:	stc    
  410bf1:	jmp    0x410bd7
  410bf3:	(bad)  
  410bf4:	cli    
  410bf5:	(bad)  
  410bf6:	in     al,0xff
  410bf8:	stc    
  410bf9:	(bad)  
  410bfa:	jrcxz  0x410bfb
  410bfc:	clc    
  410bfd:	(bad)  
  410bfe:	loop   0x410bff
  410c00:	clc    
  410c01:	jmp    0xffffffffe93a0be7
  410c06:	loope  0x410c07
  410c08:	clc    
  410c09:	call   0xffffffffe83a0bed
  410c0e:	fdivp  st(7),st
  410c10:	clc    
  410c11:	in     eax,0xdd
  410c13:	push   rdi
  410c15:	in     al,0xdc
  410c17:	(bad)  
  410c18:	clc    
  410c19:	in     al,0xdb
  410c1b:	(bad)  
  410c1c:	fidivr DWORD PTR [rbp-0x7d6e0052]
  410c22:	jne    0x410c23
	...
  410c60:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  410c61:	popf   
  410c62:	xchg   ebx,eax
  410c63:	(bad)  
  410c64:	(bad)  
  410c65:	(bad)  
  410c66:	(bad)  
  410c67:	(bad)  
  410c68:	(bad)  
  410c69:	sti    
  410c6a:	cli    
  410c6b:	(bad)  
  410c6c:	(bad)  
  410c6d:	sti    
  410c6e:	cli    
  410c6f:	(bad)  
  410c70:	(bad)  
  410c71:	sti    
  410c72:	cli    
  410c73:	(bad)  
  410c74:	(bad)  
  410c75:	sti    
  410c76:	cli    
  410c77:	(bad)  
  410c78:	(bad)  
  410c79:	sti    
  410c7a:	cli    
  410c7b:	(bad)  
  410c7c:	(bad)  
  410c7d:	sti    
  410c7e:	cli    
  410c7f:	(bad)  
  410c80:	(bad)  
  410c81:	sti    
  410c82:	cli    
  410c83:	(bad)  
  410c84:	(bad)  
  410c85:	sti    
  410c86:	stc    
  410c87:	(bad)  
  410c88:	(bad)  
  410c89:	sti    
  410c8a:	stc    
  410c8b:	(bad)  
  410c8c:	(bad)  
  410c8d:	cli    
  410c8e:	stc    
  410c8f:	(bad)  
  410c90:	(bad)  
  410c91:	cli    
  410c92:	stc    
  410c93:	(bad)  
  410c94:	(bad)  
  410c95:	cli    
  410c96:	clc    
  410c97:	(bad)  
  410c98:	(bad)  
  410c99:	cli    
  410c9a:	clc    
  410c9b:	(bad)  
  410c9c:	std    
  410c9d:	div    ebp
  410c9f:	call   QWORD PTR [rsp+rax*4+0xff78]
	...
  410cde:	add    BYTE PTR [rax],al
  410ce0:	stos   DWORD PTR es:[rdi],eax
  410ce1:	lahf   
  410ce2:	xchg   esi,eax
  410ce3:	push   rax
  410ce5:	in     eax,dx
  410ce6:	jmp    0x410ce7
  410ce8:	in     eax,dx
  410ce9:	jrcxz  0x410cca
  410ceb:	(bad)  
  410cec:	in     eax,dx
  410ced:	jrcxz  0x410ccd
  410cef:	(bad)  
  410cf0:	in     eax,dx
  410cf1:	jrcxz  0x410cd1
  410cf3:	(bad)  
  410cf4:	in     al,dx
  410cf5:	loop   0x410cd5
  410cf7:	(bad)  
  410cf8:	in     al,dx
  410cf9:	loop   0x410cd8
  410cfb:	(bad)  
  410cfc:	in     al,dx
  410cfd:	loope  0x410cda
  410cff:	(bad)  
  410d00:	jmp    0x410ce2
  410d02:	(bad)  
  410d04:	jmp    0x410ce5
  410d06:	(bad)  
  410d08:	(bad)  
  410d09:	(bad)  
  410d0b:	(bad)  
  410d0c:	jmp    0xffffffffea40e4ee
  410d11:	(bad)  
  410d13:	(bad)  
  410d14:	call   0xffffffffe840e0f4
  410d19:	fcmovbe st,st(2)
  410d1b:	jmp    rsi
  410d1d:	fcom   st(0)
  410d1f:	call   QWORD PTR [rdi+0xff7b87]
	...
  410d5d:	add    BYTE PTR [rax],al
  410d5f:	add    BYTE PTR [rcx+riz*4-0x433d0067],ch
  410d66:	mov    dh,0xff
  410d68:	mov    edi,0xbcffb2b8
  410d6d:	mov    ah,0xad
  410d6f:	push   QWORD PTR [rdi-0x4d005851]
  410d75:	test   eax,0xa2acffa0
  410d7a:	cdq    
  410d7b:	jmp    QWORD PTR [rdi-0x5e006d64]
  410d81:	xchg   esp,eax
  410d82:	mov    bh,bh
  410d84:	fwait
  410d85:	lea    eax,[rcx+0x798695ff]
  410d8b:	dec    DWORD PTR [rdi-0x75008d81]
  410d91:	js     0x410dfd
  410d93:	inc    DWORD PTR [rbp-0x7f009b8d]
  410d99:	ins    DWORD PTR es:[rdi],dx
  410d9a:	pop    rsi
  410d9b:	(bad)  
  410d9c:	jge    0x410e06
  410d9e:	pop    rcx
  410d9f:	call   FWORD PTR [rcx+0xff7e8b]
	...
  410ddd:	add    BYTE PTR [rax],al
  410ddf:	add    BYTE PTR [rsi-0x645c],ch
  410de5:	(bad)  
  410de6:	std    
  410de7:	(bad)  
  410de8:	sti    
  410de9:	repnz in eax,dx
  410deb:	(bad)  
  410dec:	sti    
  410ded:	icebp  
  410dee:	out    dx,al
  410def:	(bad)  
  410df0:	sti    
  410df1:	icebp  
  410df2:	in     eax,dx
  410df3:	(bad)  
  410df4:	sti    
  410df5:	icebp  
  410df6:	in     al,dx
  410df7:	(bad)  
  410df8:	sti    
  410df9:	lock jmp 0x410dfb
  410dfc:	sti    
  410dfd:	out    dx,eax
  410dfe:	jmp    0x410dff
  410e00:	cli    
  410e01:	out    dx,eax
  410e02:	jmp    0xffffffffe92f0906
  410e07:	(bad)  
  410e08:	cli    
  410e09:	in     eax,dx
  410e0a:	out    0xff,eax
  410e0c:	cli    
  410e0d:	in     al,dx
  410e0e:	out    0xff,al
  410e10:	stc    
  410e11:	(bad)  
  410e12:	in     al,0xff
  410e14:	stc    
  410e15:	(bad)  
  410e16:	loop   0x410e17
  410e18:	clc    
  410e19:	call   0xffffffffb10c0dfe
  410e1e:	movabs ds:0xff818d9bff,eax
	...
  410e5f:	add    BYTE PTR [rcx-0x6159],dh
  410e65:	(bad)  
  410e66:	(bad)  
  410e67:	(bad)  
  410e68:	cld    
  410e69:	repz out dx,eax
  410e6b:	(bad)  
  410e6c:	cld    
  410e6d:	repz out dx,eax
  410e6f:	(bad)  
  410e70:	cld    
  410e71:	repz out dx,eax
  410e73:	(bad)  
  410e74:	sti    
  410e75:	repnz out dx,al
  410e77:	(bad)  
  410e78:	cld    
  410e79:	repnz in eax,dx
  410e7b:	(bad)  
  410e7c:	sti    
  410e7d:	icebp  
  410e7e:	in     al,dx
  410e7f:	(bad)  
  410e80:	cli    
  410e81:	lock jmp 0x410e83
  410e84:	sti    
  410e85:	out    dx,eax
  410e86:	(bad)  
  410e87:	(bad)  
  410e88:	cli    
  410e89:	out    dx,al
  410e8a:	call   0xffffffffe82f098e
  410e8f:	(bad)  
  410e90:	stc    
  410e91:	jmp    0x410e78
  410e93:	(bad)  
  410e94:	stc    
  410e95:	jmp    0x410e7b
  410e97:	(bad)  
  410e98:	clc    
  410e99:	jmp    0xffffffffba0f0e80
  410e9e:	scas   al,BYTE PTR es:[rdi]
  410e9f:	call   FWORD PTR [rsi+0xff8490]
	...
  410edd:	add    BYTE PTR [rax],al
  410edf:	add    BYTE PTR [rdx-0x5e56],dh
  410ee5:	(bad)  
  410ee6:	(bad)  
  410ee7:	(bad)  
  410ee8:	cld    
  410ee9:	cmc    
  410eea:	icebp  
  410eeb:	(bad)  
  410eec:	cld    
  410eed:	cmc    
  410eee:	icebp  
  410eef:	(bad)  
  410ef0:	cld    
  410ef1:	hlt    
  410ef2:	icebp  
  410ef3:	(bad)  
  410ef4:	cld    
  410ef5:	hlt    
  410ef6:	lock (bad) 
  410ef8:	cld    
  410ef9:	repz out dx,eax
  410efb:	(bad)  
  410efc:	cld    
  410efd:	repnz out dx,al
  410eff:	(bad)  
  410f00:	cld    
  410f01:	icebp  
  410f02:	in     eax,dx
  410f03:	(bad)  
  410f04:	sti    
  410f05:	lock in al,dx
  410f07:	(bad)  
  410f08:	cli    
  410f09:	lock (bad) 
  410f0b:	(bad)  
  410f0c:	cli    
  410f0d:	out    dx,al
  410f0e:	call   0xffffffffe82e0a12
  410f13:	(bad)  
  410f14:	stc    
  410f15:	in     al,dx
  410f16:	in     eax,0xff
  410f18:	stc    
  410f19:	(bad)  
  410f1a:	jrcxz  0x410f1b
  410f1c:	int    0xb9
  410f1e:	scas   al,BYTE PTR es:[rdi]
  410f1f:	jmp    QWORD PTR [rax+0xff8893]
	...
  410f5d:	add    BYTE PTR [rax],al
  410f5f:	add    BYTE PTR [rbp-0x5b54],dh
  410f65:	(bad)  
  410f66:	(bad)  
  410f67:	(bad)  
  410f68:	std    
  410f69:	div    bl
  410f6b:	(bad)  
  410f6c:	cld    
  410f6d:	div    bl
  410f6f:	(bad)  
  410f70:	cld    
  410f71:	div    bl
  410f73:	(bad)  
  410f74:	cld    
  410f75:	cmc    
  410f76:	repnz (bad) 
  410f78:	cld    
  410f79:	cmc    
  410f7a:	lock (bad) 
  410f7c:	cld    
  410f7d:	repz out dx,eax
  410f7f:	(bad)  
  410f80:	sti    
  410f81:	repz out dx,al
  410f83:	(bad)  
  410f84:	sti    
  410f85:	repnz in eax,dx
  410f87:	(bad)  
  410f88:	cli    
  410f89:	icebp  
  410f8a:	jmp    0x410f8b
  410f8c:	sti    
  410f8d:	out    dx,eax
  410f8e:	(bad)  
  410f8f:	(bad)  
  410f90:	cli    
  410f91:	out    dx,al
  410f92:	call   0xffffffffe72e0a96
  410f97:	(bad)  
  410f98:	stc    
  410f99:	jmp    0x410f7f
  410f9b:	dec    edx
  410f9d:	mov    al,0xa3
  410f9f:	jmp    QWORD PTR [rdx+0xff8b96]
	...
  410fdd:	add    BYTE PTR [rax],al
  410fdf:	add    BYTE PTR [rdi-0x5852],dh
  410fe5:	(bad)  
  410fe6:	(bad)  
  410fe7:	(bad)  
  410fe8:	(bad)  
  410fe9:	(bad)  
  410fea:	(bad)  
  410feb:	(bad)  
  410fec:	(bad)  
  410fed:	(bad)  
  410fee:	(bad)  
  410fef:	(bad)  
  410ff0:	(bad)  
  410ff1:	(bad)  
  410ff2:	(bad)  
  410ff3:	(bad)  
  410ff4:	(bad)  
  410ff5:	(bad)  
  410ff6:	(bad)  
  410ff7:	(bad)  
  410ff8:	(bad)  
  410ff9:	(bad)  
  410ffa:	(bad)  
  410ffb:	(bad)  
  410ffc:	(bad)  
  410ffd:	(bad)  
  410ffe:	(bad)  
  410fff:	(bad)  
  411000:	(bad)  
  411001:	(bad)  
  411002:	(bad)  
  411003:	(bad)  
  411004:	(bad)  
  411005:	(bad)  
  411006:	(bad)  
  411007:	(bad)  
  411008:	(bad)  
  411009:	(bad)  
  41100a:	(bad)  
  41100b:	(bad)  
  41100c:	(bad)  
  41100d:	(bad)  
  41100e:	(bad)  
  41100f:	(bad)  
  411010:	(bad)  
  411011:	(bad)  
  411012:	(bad)  
  411013:	(bad)  
  411014:	(bad)  
  411015:	(bad)  
  411016:	(bad)  
  411017:	(bad)  
  411018:	(bad)  
  411019:	(bad)  
  41101a:	(bad)  
  41101b:	(bad)  
  41101c:	(bad)  
  41101d:	std    
  41101e:	cld    
  41101f:	jmp    QWORD PTR [rbp+0xff8e98]
	...
  41105d:	add    BYTE PTR [rax],al
  41105f:	add    BYTE PTR [rax-0x3d00564f],bh
  411065:	mov    esp,0xb9bfffb6
  41106a:	mov    dl,0xff
  41106c:	mov    ebx,0xb7ffadb5
  411071:	scas   eax,DWORD PTR es:[rdi]
  411072:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  411073:	push   QWORD PTR [rdx-0x52005e57]
  411079:	movabs ds:0x95a1ff929ba7ff9a,al
  411082:	mov    bh,bh
  411084:	fwait
  411085:	lea    eax,[rdx+0x798695ff]
  41108b:	call   QWORD PTR [rax-0x75008d82]
  411091:	jns    0x4110fd
  411093:	inc    DWORD PTR [rbp-0x7f009c8e]
  411099:	ins    DWORD PTR es:[rdi],dx
  41109a:	pop    rsi
  41109b:	(bad)  
  41109c:	jge    0x411106
  41109e:	pop    rcx
  41109f:	jmp    QWORD PTR [rdi+0xff919b]
	...
  4110dd:	add    BYTE PTR [rax],al
  4110df:	add    BYTE PTR [rdx-0x1600544d],bh
  4110e5:	out    0xe5,eax
  4110e7:	(bad)  
  4110e8:	call   0xffffffffe940f2d1
  4110ed:	in     al,0xe1
  4110ef:	jmp    rdi
  4110f1:	jrcxz  0x4110d3
  4110f3:	jmp    rdi
  4110f5:	loope  0x4110d6
  4110f7:	jmp    rbp
  4110f9:	loopne 0x4110d7
  4110fb:	jmp    rbp
  4110fd:	(bad)  
  4110ff:	jmp    rsp
  411101:	fstp   st(1)
  411103:	jmp    rdx
  411105:	fcmovnbe st,st(7)
  411107:	jmp    rcx
  411109:	(bad)  
  41110b:	jmp    rax
  41110d:	fcom   st(2)
  41110f:	(bad)  
  411110:	(bad)  
  411112:	iret   
  411113:	(bad)  
  411114:	(bad)  
  411116:	int    0xff
  411118:	(bad)  
  41111a:	retf   0xdbff
  41111d:	iret   
  41111e:	enter  0xa9ff,0x9e
  411122:	xchg   ebp,eax
  411123:	inc    DWORD PTR [rax]
	...
  41115d:	add    BYTE PTR [rax],al
  41115f:	add    BYTE PTR [rbp+rsi*4-0x53],bh
  411166:	(bad)  
  411167:	(bad)  
  411168:	(bad)  
  411169:	sti    
  41116a:	cli    
  41116b:	(bad)  
  41116c:	std    
  41116d:	sti    
  41116e:	stc    
  41116f:	(bad)  
  411170:	(bad)  
  411171:	cli    
  411172:	stc    
  411173:	(bad)  
  411174:	std    
  411175:	cli    
  411176:	idiv   edi
  411178:	std    
  411179:	clc    
  41117a:	idiv   edi
  41117c:	std    
  41117d:	clc    
  41117e:	cmc    
  41117f:	(bad)  
  411180:	cld    
  411181:	div    ebx
  411183:	(bad)  
  411184:	cld    
  411185:	cmc    
  411186:	repnz (bad) 
  411188:	sti    
  411189:	repz lock (bad) 
  41118c:	sti    
  41118d:	repz out dx,al
  41118f:	(bad)  
  411190:	sti    
  411191:	icebp  
  411192:	in     al,dx
  411193:	(bad)  
  411194:	sti    
  411195:	out    dx,eax
  411196:	(bad)  
  411197:	(bad)  
  411198:	cli    
  411199:	out    dx,al
  41119a:	call   0xffffffffa4f5e79e
  41119f:	jmp    FWORD PTR [rbx+0xff97a0]
	...
  4111dd:	add    BYTE PTR [rax],al
  4111df:	add    BYTE PTR [rbp-0x4f4a],bh
  4111e5:	(bad)  
  4111e6:	(bad)  
  4111e7:	(bad)  
  4111e8:	(bad)  
  4111e9:	cld    
  4111ea:	sti    
  4111eb:	(bad)  
  4111ec:	(bad)  
  4111ed:	cld    
  4111ee:	cli    
  4111ef:	(bad)  
  4111f0:	std    
  4111f1:	cld    
  4111f2:	cli    
  4111f3:	(bad)  
  4111f4:	(bad)  
  4111f5:	sti    
  4111f6:	stc    
  4111f7:	(bad)  
  4111f8:	(bad)  
  4111f9:	stc    
  4111fa:	clc    
  4111fb:	(bad)  
  4111fc:	std    
  4111fd:	stc    
  4111fe:	idiv   bh
  411200:	std    
  411201:	div    ah
  411203:	(bad)  
  411204:	cld    
  411205:	cmc    
  411206:	repnz (bad) 
  411208:	cld    
  411209:	hlt    
  41120a:	icebp  
  41120b:	(bad)  
  41120c:	cld    
  41120d:	repz out dx,eax
  41120f:	(bad)  
  411210:	sti    
  411211:	repnz in eax,dx
  411213:	(bad)  
  411214:	sti    
  411215:	lock jmp 0x411217
  411218:	sti    
  411219:	out    dx,eax
  41121a:	call   0xffffffffa4f5e81e
  41121f:	jmp    FWORD PTR [rsi+0xff9ba3]
	...
  41125d:	add    BYTE PTR [rax],al
  41125f:	add    BYTE PTR [rdi-0x4d48],bh
  411265:	(bad)  
  411266:	(bad)  
  411267:	(bad)  
  411268:	(bad)  
  411269:	std    
  41126a:	cld    
  41126b:	(bad)  
  41126c:	(bad)  
  41126d:	std    
  41126e:	cld    
  41126f:	(bad)  
  411270:	(bad)  
  411271:	cld    
  411272:	cli    
  411273:	(bad)  
  411274:	(bad)  
  411275:	sti    
  411276:	stc    
  411277:	(bad)  
  411278:	(bad)  
  411279:	stc    
  41127a:	clc    
  41127b:	(bad)  
  41127c:	std    
  41127d:	stc    
  41127e:	idiv   bh
  411280:	std    
  411281:	clc    
  411282:	cmc    
  411283:	(bad)  
  411284:	cld    
  411285:	div    bl
  411287:	(bad)  
  411288:	cld    
  411289:	hlt    
  41128a:	icebp  
  41128b:	(bad)  
  41128c:	cld    
  41128d:	repz lock (bad) 
  411290:	cld    
  411291:	repnz in eax,dx
  411293:	(bad)  
  411294:	sti    
  411295:	icebp  
  411296:	jmp    0x411297
  411298:	cli    
  411299:	out    dx,eax
  41129a:	jmp    0xffffffffa4f5e89e
  41129f:	jmp    FWORD PTR [rdi+0xff9da5]
	...
  4112dd:	add    BYTE PTR [rax],al
  4112df:	add    al,al
  4112e1:	mov    ecx,0xffffffb3
  4112e6:	(bad)  
  4112e7:	(bad)  
  4112e8:	(bad)  
  4112e9:	(bad)  
  4112ea:	std    
  4112eb:	(bad)  
  4112ec:	(bad)  
  4112ed:	std    
  4112ee:	std    
  4112ef:	(bad)  
  4112f0:	(bad)  
  4112f1:	std    
  4112f2:	cld    
  4112f3:	(bad)  
  4112f4:	(bad)  
  4112f5:	cld    
  4112f6:	cli    
  4112f7:	(bad)  
  4112f8:	(bad)  
  4112f9:	cli    
  4112fa:	stc    
  4112fb:	(bad)  
  4112fc:	std    
  4112fd:	stc    
  4112fe:	idiv   edi
  411300:	std    
  411301:	div    esi
  411303:	(bad)  
  411304:	std    
  411305:	div    ebx
  411307:	(bad)  
  411308:	cld    
  411309:	hlt    
  41130a:	icebp  
  41130b:	(bad)  
  41130c:	cld    
  41130d:	hlt    
  41130e:	out    dx,eax
  41130f:	(bad)  
  411310:	cld    
  411311:	repnz in eax,dx
  411313:	(bad)  
  411314:	sti    
  411315:	lock jmp 0x411317
  411318:	cli    
  411319:	out    dx,eax
  41131a:	jmp    0xffffffffc00cf81e
  41131f:	push   QWORD PTR [rcx+0xffa0a9]
	...
  41135d:	add    BYTE PTR [rax],al
  41135f:	add    cl,al
  411361:	mov    edx,0xffffffb5
  411366:	(bad)  
  411367:	(bad)  
  411368:	(bad)  
  411369:	(bad)  
  41136a:	(bad)  
  41136b:	(bad)  
  41136c:	(bad)  
  41136d:	(bad)  
  41136e:	(bad)  
  41136f:	(bad)  
  411370:	(bad)  
  411371:	(bad)  
  411372:	(bad)  
  411373:	(bad)  
  411374:	(bad)  
  411375:	(bad)  
  411376:	(bad)  
  411377:	(bad)  
  411378:	(bad)  
  411379:	(bad)  
  41137a:	(bad)  
  41137b:	(bad)  
  41137c:	(bad)  
  41137d:	(bad)  
  41137e:	std    
  41137f:	(bad)  
  411380:	(bad)  
  411381:	(bad)  
  411382:	std    
  411383:	(bad)  
  411384:	(bad)  
  411385:	std    
  411386:	std    
  411387:	(bad)  
  411388:	(bad)  
  411389:	std    
  41138a:	cld    
  41138b:	(bad)  
  41138c:	(bad)  
  41138d:	std    
  41138e:	cld    
  41138f:	(bad)  
  411390:	(bad)  
  411391:	cld    
  411392:	cld    
  411393:	(bad)  
  411394:	(bad)  
  411395:	cld    
  411396:	sti    
  411397:	(bad)  
  411398:	(bad)  
  411399:	cld    
  41139a:	sti    
  41139b:	(bad)  
  41139c:	std    
  41139d:	div    ah
  41139f:	push   QWORD PTR [rbx+0xffa3ab]
	...
  4113dd:	add    BYTE PTR [rax],al
  4113df:	add    dl,al
  4113e1:	mov    esp,0xbcc1ffb6
  4113e6:	mov    ch,0xff
  4113e8:	sar    DWORD PTR [rbx-0x453f004b],0xb4
  4113ef:	inc    eax
  4113f1:	mov    ecx,0xb8bfffb3
  4113f6:	mov    dl,0xff
  4113f8:	mov    edi,0xbeffb1b8
  4113fd:	mov    bh,0xb0
  4113ff:	(bad)  
  411400:	mov    esp,0xbcffafb6
  411405:	mov    ch,0xae
  411407:	(bad)  
  411408:	mov    ebx,0xbaffadb4
  41140d:	mov    bl,0xac
  41140f:	(bad)  
  411410:	mov    ecx,0xb9ffaab2
  411415:	mov    al,0xa9
  411417:	(bad)  
  411418:	mov    eax,0xb7ffa8af
  41141d:	scas   eax,DWORD PTR es:[rdi]
  41141e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41141f:	push   QWORD PTR [rsi+0xffa5ad]
	...
  41143d:	add    BYTE PTR [rax],al
  41143f:	add    bh,bh
  411441:	(bad)  
  411442:	(bad)  
  411443:	(bad)  
  411444:	inc    DWORD PTR [rax]
  411446:	add    BYTE PTR [rdi-0x1],bh
  411449:	add    BYTE PTR [rax],al
  41144b:	jg     0x41144c
  41144d:	add    BYTE PTR [rax],al
  41144f:	jg     0x411450
  411451:	add    BYTE PTR [rax],al
  411453:	jg     0x411454
  411455:	add    BYTE PTR [rax],al
  411457:	jg     0x411458
  411459:	add    BYTE PTR [rax],al
  41145b:	jg     0x41145c
  41145d:	add    BYTE PTR [rax],al
  41145f:	jg     0x411460
  411461:	add    BYTE PTR [rax],al
  411463:	jg     0x411464
  411465:	add    BYTE PTR [rax],al
  411467:	jg     0x411468
  411469:	add    BYTE PTR [rax],al
  41146b:	jg     0x41146c
  41146d:	add    BYTE PTR [rax],al
  41146f:	jg     0x411470
  411471:	add    BYTE PTR [rax],al
  411473:	jg     0x411474
  411475:	add    BYTE PTR [rax],al
  411477:	jg     0x411478
  411479:	add    BYTE PTR [rax],al
  41147b:	jg     0x41147c
  41147d:	add    BYTE PTR [rax],al
  41147f:	jg     0x411480
  411481:	add    BYTE PTR [rax],al
  411483:	jg     0x411484
  411485:	add    BYTE PTR [rax],al
  411487:	jg     0x411488
  411489:	add    BYTE PTR [rax],al
  41148b:	jg     0x41148c
  41148d:	add    BYTE PTR [rax],al
  41148f:	jg     0x411490
  411491:	add    BYTE PTR [rax],al
  411493:	jg     0x411494
  411495:	add    BYTE PTR [rax],al
  411497:	jg     0x411498
  411499:	add    BYTE PTR [rax],al
  41149b:	jg     0x41149c
  41149d:	add    BYTE PTR [rax],al
  41149f:	jg     0x4114a0
  4114a1:	add    BYTE PTR [rax],al
  4114a3:	jg     0x4114a4
  4114a5:	add    BYTE PTR [rax],al
  4114a7:	jg     0x4114a8
  4114a9:	add    BYTE PTR [rax],al
  4114ab:	jg     0x4114ac
  4114ad:	add    BYTE PTR [rax],al
  4114af:	jg     0x4114b0
  4114b1:	add    BYTE PTR [rax],al
  4114b3:	jg     0x4114b4
  4114b5:	add    BYTE PTR [rax],al
  4114b7:	jg     0x4114b8
  4114b9:	add    BYTE PTR [rax],al
  4114bb:	jg     0x4114bc
  4114bd:	add    BYTE PTR [rax],al
  4114bf:	jg     0x4114e9
  4114c1:	add    BYTE PTR [rax],al
  4114c3:	add    BYTE PTR [rax],dl
  4114c5:	add    BYTE PTR [rax],al
  4114c7:	add    BYTE PTR [rax],ah
  4114c9:	add    BYTE PTR [rax],al
  4114cb:	add    BYTE PTR [rcx],al
  4114cd:	add    BYTE PTR [rax],ah
	...
  4114f3:	add    BYTE PTR [rsi+rax*4-0x7f6b3787],bl
  4114fa:	jb     0x4114fb
  4114fc:	mov    BYTE PTR [rbx+0x64],dh
  4114ff:	(bad)  
  411500:	jl     0x411568
  411502:	push   rsi
  411503:	jmp    FWORD PTR [rdi+0x59]
  411506:	rex.W push QWORD PTR [rax+0x59]
  41150a:	rex.W push QWORD PTR [rax+0x59]
  41150e:	rex.W jmp QWORD PTR [rbp+0x4d]
  411512:	cmp    edi,edi
  411514:	mov    WORD PTR [rdx+0x6f],?
  411517:	enter  0x0,0x0
	...
  411533:	add    BYTE PTR [rsi-0x3a008379],bl
  411539:	mov    ebp,0xa8c8ffb6
  41153e:	xchg   edi,eax
  41153f:	inc    edi
  411541:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411542:	xchg   ebp,eax
  411543:	inc    edi
  411545:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  411546:	xchg   esp,eax
  411547:	inc    esi
  411549:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41154a:	xchg   edx,eax
  41154b:	inc    esi
  41154d:	movabs ds:0x455bff90a2c6ff92,eax
  411556:	xor    al,0xff
	...
  411574:	movabs al,ds:0xf3ffffffffff7f8a
  41157d:	xlat   BYTE PTR ds:[rbx]
  41157e:	leave  
  41157f:	push   rdx
  411581:	(bad)  
  411582:	(bad)  
  411583:	push   rdx
  411585:	(bad)  
  411586:	(bad)  
  411589:	rol    bl,cl
  41158b:	push   QWORD PTR [rbx]
  41158d:	int3   
  41158e:	inc    di
  411591:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  411592:	xchg   esp,eax
  411593:	call   FWORD PTR [rdx+0x46]
  411596:	(bad)  
  411597:	inc    DWORD PTR [rax]
	...
  4115b1:	add    BYTE PTR [rax],al
  4115b3:	add    BYTE PTR [rbx-0x7b72],ah
  4115b9:	(bad)  
  4115ba:	(bad)  
  4115bb:	push   rsp
  4115bd:	fcmove st,st(6)
  4115bf:	push   rsp
  4115c1:	fxch   st(4)
  4115c3:	push   rbx
  4115c5:	xlat   BYTE PTR ds:[rbx]
  4115c6:	retf   0xf3ff
  4115c9:	(bad)  
  4115ca:	enter  0xf2ff,0xd5
  4115ce:	(bad)  
  4115cf:	dec    eax
  4115d1:	test   al,0x98
  4115d3:	jmp    QWORD PTR [rdx+0x4e]
  4115d6:	rex inc DWORD PTR [rax]
	...
  4115f1:	add    BYTE PTR [rax],al
  4115f3:	add    BYTE PTR [rsi-0x786d],ah
  4115f9:	(bad)  
  4115fa:	(bad)  
  4115fb:	push   rbp
  4115fd:	(bad)  
  4115ff:	push   rbp
  411601:	fst    st(1)
  411603:	push   rsp
  411605:	fcmovne st,st(7)
  411607:	push   rsp
  411609:	fcmove st,st(5)
  41160b:	push   rbx
  41160d:	fmul   st,st(4)
  41160f:	dec    eax
  411611:	stos   DWORD PTR es:[rdi],eax
  411612:	fwait
  411613:	jmp    QWORD PTR [rdi+0x55]
  411616:	rex.RX inc DWORD PTR [rax]
	...
  411631:	add    BYTE PTR [rax],al
  411633:	add    BYTE PTR [rcx-0x736a],ch
  411639:	(bad)  
  41163a:	(bad)  
  41163b:	push   rsi
  41163d:	loope  0x411617
  41163f:	push   rsi
  411641:	loopne 0x411619
  411643:	push   rbp
  411645:	(bad)  
  411647:	push   rbp
  411649:	(bad)  
  41164b:	push   rbp
  41164d:	(bad)  
  41164f:	dec    ecx
  411651:	scas   al,BYTE PTR es:[rdi]
  411652:	movabs al,ds:0xff4f5c6fff
	...
  411673:	add    BYTE PTR [rbp-0x6d64],ch
  411679:	(bad)  
  41167a:	(bad)  
  41167b:	push   rdi
  41167d:	in     eax,0xdc
  41167f:	push   rdi
  411681:	in     al,0xda
  411683:	push   rsi
  411685:	loop   0x411660
  411687:	push   rsi
  411689:	loope  0x411662
  41168b:	push   rsi
  41168d:	loopne 0x411664
  41168f:	dec    edx
  411691:	mov    al,0xa3
  411693:	push   QWORD PTR [rsi+0x64]
  411696:	push   rsi
  411697:	inc    DWORD PTR [rax]
	...
  4116b1:	add    BYTE PTR [rax],al
  4116b3:	add    BYTE PTR [rcx-0x6760],dh
  4116b9:	(bad)  
  4116ba:	(bad)  
  4116bb:	(bad)  
  4116bc:	(bad)  
  4116bd:	(bad)  
  4116be:	(bad)  
  4116bf:	(bad)  
  4116c0:	(bad)  
  4116c1:	(bad)  
  4116c2:	(bad)  
  4116c3:	(bad)  
  4116c4:	(bad)  
  4116c5:	(bad)  
  4116c6:	(bad)  
  4116c7:	(bad)  
  4116c8:	(bad)  
  4116c9:	(bad)  
  4116ca:	(bad)  
  4116cb:	(bad)  
  4116cc:	(bad)  
  4116cd:	(bad)  
  4116ce:	(bad)  
  4116cf:	push   rsi
  4116d1:	loop   0x4116ab
  4116d3:	(bad)  
  4116d4:	jg     0x411743
  4116d6:	pop    rdi
  4116d7:	inc    DWORD PTR [rax]
	...
  4116f1:	add    BYTE PTR [rax],al
  4116f3:	add    BYTE PTR [rsi-0x21006159],dh
  4116f9:	(bad)  
  4116fa:	int    0xff
  4116fc:	mov    bh,0xa2
  4116fe:	xchg   ebx,eax
  4116ff:	jmp    FWORD PTR [rdi-0x58007466]
  411705:	xchg   ecx,eax
  411706:	cmp    edi,0xff79899f
  41170c:	cwde   
  41170d:	xor    DWORD PTR [rax-0x1],0xff697a91
  411714:	xchg   ecx,eax
  411715:	jp     0x411780
  411717:	inc    DWORD PTR [rax]
	...
  411731:	add    BYTE PTR [rax],al
  411733:	add    BYTE PTR [rbx-0x5a53],bh
  411739:	(bad)  
  41173a:	(bad)  
  41173b:	(bad)  
  41173c:	sti    
  41173d:	lock jmp 0x41173f
  411740:	cli    
  411741:	out    dx,eax
  411742:	jmp    0xffffffffe92f1246
  411747:	(bad)  
  411748:	stc    
  411749:	in     al,dx
  41174a:	out    0xff,al
  41174c:	stc    
  41174d:	jmp    0x411733
  41174f:	dec    ebp
  411751:	mov    ecx,0x7f91ffae
  411756:	je     0x411757
	...
  411774:	shl    BYTE PTR [rbp+rbp*4-0x1],0xff
  41177c:	(bad)  
  41177d:	(bad)  
  41177e:	(bad)  
  41177f:	(bad)  
  411780:	(bad)  
  411781:	(bad)  
  411782:	(bad)  
  411783:	(bad)  
  411784:	(bad)  
  411785:	(bad)  
  411786:	(bad)  
  411787:	(bad)  
  411788:	(bad)  
  411789:	(bad)  
  41178a:	(bad)  
  41178b:	(bad)  
  41178c:	(bad)  
  41178d:	(bad)  
  41178e:	(bad)  
  41178f:	(bad)  
  411790:	(bad)  
  411791:	(bad)  
  411792:	(bad)  
  411793:	call   FWORD PTR [rcx+0xff7d88]
	...
  4117b1:	add    BYTE PTR [rax],al
  4117b3:	add    dh,al
  4117b5:	mov    ecx,0xc9d7ffb3
  4117ba:	mov    esi,0xa2b0c4ff
  4117bf:	(bad)  
  4117c0:	mov    ebp,0xb6ff9ba9
  4117c5:	movabs ds:0x91a6ff8a99aeff92,al
  4117ce:	cmp    edi,0xff78889f
  4117d4:	lahf   
  4117d5:	mov    BYTE PTR [rax-0x1],bh
	...
  4117f4:	retf   0xbbc1
  4117f7:	(bad)  
  4117f8:	(bad)  
  4117f9:	(bad)  
  4117fa:	(bad)  
  4117fb:	(bad)  
  4117fc:	sti    
  4117fd:	repnz out dx,al
  4117ff:	(bad)  
  411800:	stc    
  411801:	jmp    0x4117e8
  411803:	(bad)  
  411804:	clc    
  411805:	in     eax,0xdc
  411807:	push   rbp
  411809:	(bad)  
  41180b:	push   rbx
  41180d:	xlat   BYTE PTR ds:[rbx]
  41180e:	retf   
  41180f:	call   rbp
  411811:	mov    ah,0xa4
  411813:	jmp    QWORD PTR [rbp+0xff8a95]
	...
  411831:	add    BYTE PTR [rax],al
  411833:	add    al,dl
  411835:	mov    ebx,0xffffffff
  41183b:	(bad)  
  41183c:	cld    
  41183d:	clc    
  41183e:	cmc    
  41183f:	(bad)  
  411840:	cli    
  411841:	repnz in al,dx
  411843:	(bad)  
  411844:	clc    
  411845:	(bad)  
  411846:	jrcxz  0x411847
  411848:	mul    esp
  41184a:	(bad)  
  41184c:	cmc    
  41184d:	(bad)  
  41184f:	call   rdi
  411851:	mov    ecx,0x9fafffaa
  411856:	xchg   ebp,eax
  411857:	inc    DWORD PTR [rax]
	...
  411871:	add    BYTE PTR [rax],al
  411873:	add    al,dl
  411875:	leave  
  411876:	(bad)  
  411879:	cld    
  41187a:	cld    
  41187b:	(bad)  
  41187c:	(bad)  
  41187d:	(bad)  
  41187e:	(bad)  
  41187f:	(bad)  
  411880:	(bad)  
  411881:	(bad)  
  411882:	(bad)  
  411883:	(bad)  
  411884:	(bad)  
  411885:	(bad)  
  411886:	(bad)  
  411887:	(bad)  
  411888:	(bad)  
  411889:	(bad)  
  41188a:	(bad)  
  41188b:	(bad)  
  41188c:	(bad)  
  41188d:	(bad)  
  41188e:	(bad)  
  41188f:	jmp    rcx
  411891:	(bad)  
  411893:	(bad)  
  411894:	mov    esi,0xff9fac
	...
  4118b1:	add    BYTE PTR [rax],al
  4118b3:	add    bh,al
  4118b5:	vshufps xmm0,xmm6,xmm8,0xbc
  4118bb:	inc    edx
  4118bd:	mov    edx,0xb3bdffb5
  4118c2:	lods   eax,DWORD PTR ds:[rsi]
  4118c3:	(bad)  
  4118c4:	mov    eax,0xb9ffa7ad
  4118c9:	lods   eax,DWORD PTR ds:[rsi]
  4118ca:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4118cb:	(bad)  
  4118cc:	mov    ecx,0xb6ffa7ad
  4118d1:	test   eax,0xa6b7ffa1
  4118d6:	popf   
  4118d7:	movabs ds:0x0,eax
	...
  4118e8:	loopne 0x4118f9
  4118ea:	add    BYTE PTR [rax],al
  4118ec:	loopne 0x4118fd
  4118ee:	add    BYTE PTR [rax],al
  4118f0:	loopne 0x411901
  4118f2:	add    BYTE PTR [rax],al
  4118f4:	loopne 0x411905
  4118f6:	add    BYTE PTR [rax],al
  4118f8:	loopne 0x411909
  4118fa:	add    BYTE PTR [rax],al
  4118fc:	loopne 0x41190d
  4118fe:	add    BYTE PTR [rax],al
  411900:	loopne 0x411911
  411902:	add    BYTE PTR [rax],al
  411904:	loopne 0x411915
  411906:	add    BYTE PTR [rax],al
  411908:	loopne 0x411919
  41190a:	jp     0x41190b
  41190c:	loopne 0x41191d
  41190e:	sti    
  41190f:	jmp    rax
  411911:	pmullw mm7,mm7
  411914:	loopne 0x411925
  411916:	(bad)  
  411917:	jmp    rax
  411919:	pmullw mm7,mm7
  41191c:	loopne 0x41192d
  41191e:	(bad)  
  41191f:	jmp    rax
  411921:	paddq  mm7,mm7
  411924:	loopne 0x411935
  411926:	(bad)  
  411927:	inc    DWORD PTR [rax]
  411929:	add    BYTE PTR [rcx],al
  41192b:	add    BYTE PTR [rdx],al
  41192d:	add    BYTE PTR [rax],ah
  41192f:	and    BYTE PTR [rax],al
  411931:	add    BYTE PTR [rcx],al
  411933:	add    BYTE PTR [rax],ah
  411935:	add    BYTE PTR [rax+0x1000010],ch
  41193b:	add    BYTE PTR [rax],dl
  41193d:	adc    BYTE PTR [rax],al
  41193f:	add    BYTE PTR [rcx],al
  411941:	add    BYTE PTR [rax],ah
  411943:	add    BYTE PTR [rax+0x4],ch
  411946:	add    BYTE PTR [rax],al
  411948:	add    al,BYTE PTR [rax]
  41194a:	add    BYTE PTR [rax],al
  41194c:	add    BYTE PTR [rax],al
  41194e:	add    BYTE PTR [rax],al
  411950:	test   al,0x4
  411952:	xor    al,0x0
  411954:	add    BYTE PTR [rax],al
  411956:	push   rsi
  411957:	add    BYTE PTR [rbx+0x0],dl
  41195a:	pop    rdi
  41195b:	add    BYTE PTR [rsi+0x0],dl
  41195e:	add    BYTE PTR [r10+0x0],r10b
  411962:	push   rbx
  411963:	add    BYTE PTR [rcx+0x0],cl
  411966:	rex.WRXB add BYTE PTR [r14+0x0],r9b
  41196a:	pop    rdi
  41196b:	add    BYTE PTR [rcx+0x0],cl
  41196e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
  411972:	rex.WRXB add BYTE PTR [r8],r8b
  411975:	add    BYTE PTR [rax],al
  411977:	add    BYTE PTR [rbp+0xfeef04],bh
  41197d:	add    BYTE PTR [rcx],al
  41197f:	add    BYTE PTR [rax],al
  411981:	add    BYTE PTR [rdx],cl
  411983:	add    BYTE PTR [rsi],dl
  411985:	add    BYTE PTR [rax+0x6],al
  411988:	add    BYTE PTR [rax],al
  41198a:	or     al,BYTE PTR [rax]
  41198c:	(bad)  
  41198d:	add    BYTE PTR [rax+0x6],al
  411990:	(bad)  
  411991:	add    BYTE PTR [rax],al
  411993:	add    BYTE PTR [rax],cl
  411995:	add    BYTE PTR [rax],al
  411997:	add    BYTE PTR [rax],al
  411999:	add    BYTE PTR [rax+rax*1],al
  41199c:	add    DWORD PTR [rax],eax
	...
  4119aa:	add    BYTE PTR [rax],al
  4119ac:	(bad)  
  4119ad:	add    al,0x0
  4119af:	add    BYTE PTR [rcx],al
  4119b1:	add    BYTE PTR [rbx+0x0],dl
  4119b4:	je     0x4119b6
  4119b6:	jb     0x4119b8
  4119b8:	imul   eax,DWORD PTR [rax],0x67006e
  4119be:	rex.RX add BYTE PTR [rcx+0x0],r13b
  4119c2:	ins    BYTE PTR es:[rdi],dx
  4119c3:	add    BYTE PTR [rbp+0x0],ah
  4119c6:	rex.WB add BYTE PTR [r14+0x0],bpl
  4119ca:	data16 add BYTE PTR [rdi+0x0],ch
  4119ce:	add    BYTE PTR [rax],al
  4119d0:	loop   0x4119d5
  4119d2:	add    BYTE PTR [rax],al
  4119d4:	add    DWORD PTR [rax],eax
  4119d6:	xor    BYTE PTR [rax],al
  4119d8:	xor    al,0x0
  4119da:	xor    BYTE PTR [rax],al
  4119dc:	cmp    DWORD PTR [rax],eax
  4119de:	xor    BYTE PTR [rax],al
  4119e0:	xor    al,0x0
  4119e2:	rex.X add BYTE PTR [rax],sil
  4119e5:	add    BYTE PTR [rax],al
  4119e7:	add    BYTE PTR [rsi],ah
  4119e9:	add    BYTE PTR [rdi],al
  4119eb:	add    BYTE PTR [rcx],al
  4119ed:	add    BYTE PTR [rax+0x0],dl
  4119f0:	ins    BYTE PTR es:[rdi],dx
  4119f1:	add    BYTE PTR [rcx+0x0],ah
  4119f4:	je     0x4119f6
  4119f6:	data16 add BYTE PTR [rdi+0x0],ch
  4119fa:	jb     0x4119fc
  4119fc:	ins    DWORD PTR es:[rdi],dx
  4119fd:	add    BYTE PTR [rax],al
  4119ff:	add    BYTE PTR [rsi+0x0],cl
  411a02:	push   rsp
  411a03:	add    BYTE PTR [rax],ah
  411a05:	add    BYTE PTR [rax+0x0],bh
  411a08:	add    BYTE PTR ss:[rax+rax*1],dh
  411a0c:	add    BYTE PTR [rax],al
  411a0e:	add    BYTE PTR [rax],al
  411a10:	mov    edx,0x1004900
  411a15:	add    BYTE PTR [rax+rax*1+0x65],cl
  411a19:	add    BYTE PTR [rdi+0x0],ah
  411a1c:	(bad)  
  411a1d:	add    BYTE PTR [rax+rax*1+0x54],ch
  411a21:	add    BYTE PTR [rdx+0x0],dh
  411a24:	(bad)  
  411a25:	add    BYTE PTR [rax+rax*1+0x65],ah
  411a29:	add    BYTE PTR [rbp+0x0],ch
  411a2c:	(bad)  
  411a2d:	add    BYTE PTR [rdx+0x0],dh
  411a30:	imul   eax,DWORD PTR [rax],0x73
  411a33:	add    BYTE PTR [rax],al
  411a35:	add    BYTE PTR [rax],al
  411a37:	add    BYTE PTR [rbp+0x0],cl
  411a3a:	imul   eax,DWORD PTR [rax],0x720063
  411a40:	outs   dx,DWORD PTR ds:[rsi]
  411a41:	add    BYTE PTR [rbx+0x0],dh
  411a44:	outs   dx,DWORD PTR ds:[rsi]
  411a45:	add    BYTE PTR [rsi+0x0],ah
  411a48:	je     0x411a4a
  411a4a:	and    BYTE PTR [rax],al
  411a4c:	push   rbx
  411a4d:	add    BYTE PTR [rcx+0x0],dl
  411a50:	rex.WR add BYTE PTR [rax],r12b
  411a53:	add    BYTE PTR [rbx+0x0],dl
  411a56:	add    BYTE PTR gs:[rdx+0x0],dh
  411a5a:	jbe    0x411a5c
  411a5c:	add    BYTE PTR gs:[rdx+0x0],dh
  411a60:	and    BYTE PTR [rax],al
  411a62:	imul   eax,DWORD PTR [rax],0x200073
  411a68:	(bad)  
  411a69:	add    BYTE PTR [rax],ah
  411a6b:	add    BYTE PTR [rdx+0x0],dh
  411a6e:	add    BYTE PTR gs:[rdi+0x0],ah
  411a72:	imul   eax,DWORD PTR [rax],0x740073
  411a78:	add    BYTE PTR gs:[rdx+0x0],dh
  411a7c:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
  411a81:	add    BYTE PTR [rax+rax*1+0x72],dh
  411a85:	add    BYTE PTR [rcx+0x0],ah
  411a88:	add    BYTE PTR fs:[rbp+0x0],ah
  411a8c:	ins    DWORD PTR es:[rdi],dx
  411a8d:	add    BYTE PTR [rcx+0x0],ah
  411a90:	jb     0x411a92
  411a92:	imul   eax,DWORD PTR [rax],0x20
  411a95:	add    BYTE PTR [rdi+0x0],ch
  411a98:	data16 add BYTE PTR [rax],ah
  411a9b:	add    BYTE PTR [rbp+0x0],cl
  411a9e:	imul   eax,DWORD PTR [rax],0x720063
  411aa4:	outs   dx,DWORD PTR ds:[rsi]
  411aa5:	add    BYTE PTR [rbx+0x0],dh
  411aa8:	outs   dx,DWORD PTR ds:[rsi]
  411aa9:	add    BYTE PTR [rsi+0x0],ah
  411aac:	je     0x411aae
  411aae:	and    BYTE PTR [rax],al
  411ab0:	rex.XB add BYTE PTR [r15+0x0],bpl
  411ab4:	jb     0x411ab6
  411ab6:	jo     0x411ab8
  411ab8:	outs   dx,DWORD PTR ds:[rsi]
  411ab9:	add    BYTE PTR [rdx+0x0],dh
  411abc:	(bad)  
  411abd:	add    BYTE PTR [rax+rax*1+0x69],dh
  411ac1:	add    BYTE PTR [rdi+0x0],ch
  411ac4:	outs   dx,BYTE PTR ds:[rsi]
  411ac5:	add    BYTE PTR [rsi],ch
  411ac7:	add    BYTE PTR [rax],al
  411ac9:	add    BYTE PTR [rax],al
  411acb:	add    BYTE PTR [rax],ah
  411acd:	add    BYTE PTR [rax+rax*1],al
  411ad0:	add    DWORD PTR [rax],eax
  411ad2:	rex.XB add BYTE PTR [r15+0x0],bpl
  411ad6:	ins    DWORD PTR es:[rdi],dx
  411ad7:	add    BYTE PTR [rbp+0x0],ch
  411ada:	add    BYTE PTR gs:[rsi+0x0],ch
  411ade:	je     0x411ae0
  411ae0:	jae    0x411ae2
  411ae2:	add    BYTE PTR [rax],al
  411ae4:	push   rbx
  411ae5:	add    BYTE PTR [rcx+0x0],dl
  411ae8:	rex.WR add BYTE PTR [rax],r8b
  411aeb:	add    BYTE PTR [rsi],ah
  411aed:	add    BYTE PTR [rip+0x47000100],al        # 0x47411bf3
  411af3:	add    BYTE PTR [rdi+0x0],ch
  411af6:	ins    BYTE PTR es:[rdi],dx
  411af7:	add    BYTE PTR [rax+rax*1+0x65],ah
  411afb:	add    BYTE PTR [rsi+0x0],ch
  411afe:	rex.X add BYTE PTR [rcx+0x0],bpl
  411b02:	je     0x411b04
  411b04:	jae    0x411b06
  411b06:	add    BYTE PTR [rax],al
  411b08:	push   rsp
  411b09:	add    BYTE PTR [rdx+0x0],dh
  411b0c:	jne    0x411b0e
  411b0e:	add    BYTE PTR gs:[rax],al
  411b11:	add    BYTE PTR [rax],al
  411b13:	add    BYTE PTR [rax+rax*1+0x16],cl
  411b17:	add    BYTE PTR [rcx],al
  411b19:	add    BYTE PTR [rbx+0x0],al
  411b1c:	outs   dx,DWORD PTR ds:[rsi]
  411b1d:	add    BYTE PTR [rbp+0x0],ch
  411b20:	jo     0x411b22
  411b22:	(bad)  
  411b23:	add    BYTE PTR [rsi+0x0],ch
  411b26:	jns    0x411b28
  411b28:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  411b2c:	ins    DWORD PTR es:[rdi],dx
  411b2d:	add    BYTE PTR [rbp+0x0],ah
  411b30:	add    BYTE PTR [rax],al
  411b32:	add    BYTE PTR [rax],al
  411b34:	rex.WRB add BYTE PTR [r9+0x0],r13b
  411b38:	movsxd eax,DWORD PTR [rax]
  411b3a:	jb     0x411b3c
  411b3c:	outs   dx,DWORD PTR ds:[rsi]
  411b3d:	add    BYTE PTR [rbx+0x0],dh
  411b40:	outs   dx,DWORD PTR ds:[rsi]
  411b41:	add    BYTE PTR [rsi+0x0],ah
  411b44:	je     0x411b46
  411b46:	and    BYTE PTR [rax],al
  411b48:	rex.XB add BYTE PTR [r15+0x0],bpl
  411b4c:	jb     0x411b4e
  411b4e:	jo     0x411b50
  411b50:	outs   dx,DWORD PTR ds:[rsi]
  411b51:	add    BYTE PTR [rdx+0x0],dh
  411b54:	(bad)  
  411b55:	add    BYTE PTR [rax+rax*1+0x69],dh
  411b59:	add    BYTE PTR [rdi+0x0],ch
  411b5c:	outs   dx,BYTE PTR ds:[rsi]
  411b5d:	add    BYTE PTR [rax],al
  411b5f:	add    BYTE PTR [rax+rax*1+0x1e],ah
  411b63:	add    BYTE PTR [rcx],al
  411b65:	add    BYTE PTR [rsi+0x0],al
  411b68:	imul   eax,DWORD PTR [rax],0x65006c
  411b6e:	add    BYTE PTR [rbp+0x0],r12b
  411b72:	jae    0x411b74
  411b74:	movsxd eax,DWORD PTR [rax]
  411b76:	jb     0x411b78
  411b78:	imul   eax,DWORD PTR [rax],0x740070
  411b7e:	imul   eax,DWORD PTR [rax],0x6e006f
  411b84:	add    BYTE PTR [rax],al
  411b86:	add    BYTE PTR [rax],al
  411b88:	rex.WRB add BYTE PTR [r9+0x0],r12b
  411b8c:	outs   dx,BYTE PTR ds:[rsi]
  411b8d:	add    BYTE PTR [rcx+0x0],ah
  411b90:	add    BYTE PTR [ebp+0x0],ah
  411b94:	add    BYTE PTR fs:[rax],ah
  411b97:	add    BYTE PTR [rbx+0x0],dl
  411b9a:	push   rcx
  411b9b:	add    BYTE PTR [rax+rax*1+0x20],cl
  411b9f:	add    BYTE PTR [rbx+0x0],dl
  411ba2:	add    BYTE PTR gs:[rdx+0x0],dh
  411ba6:	jbe    0x411ba8
  411ba8:	add    BYTE PTR gs:[rdx+0x0],dh
  411bac:	and    BYTE PTR [rax],al
  411bae:	add    BYTE PTR [r10+0x0],dl
  411bb2:	push   rax
  411bb3:	add    BYTE PTR [rax],ah
  411bb5:	add    BYTE PTR [rax+rax*1+0x69],al
  411bb9:	add    BYTE PTR [rcx+0x0],ah
  411bbc:	ins    BYTE PTR es:[rdi],dx
  411bbd:	add    BYTE PTR [rdi+0x0],ch
  411bc0:	add    BYTE PTR [eax],al
  411bc3:	add    BYTE PTR [rdx+0x0],bh
  411bc6:	sub    eax,0x46000100
  411bcb:	add    BYTE PTR [rcx+0x0],ch
  411bce:	ins    BYTE PTR es:[rdi],dx
  411bcf:	add    BYTE PTR [rbp+0x0],ah
  411bd2:	push   rsi
  411bd3:	add    BYTE PTR [rbp+0x0],ah
  411bd6:	jb     0x411bd8
  411bd8:	jae    0x411bda
  411bda:	imul   eax,DWORD PTR [rax],0x6e006f
  411be0:	add    BYTE PTR [rax],al
  411be2:	add    BYTE PTR [rax],al
  411be4:	xor    DWORD PTR [rax],eax
  411be6:	xor    BYTE PTR [rax],al
  411be8:	add    BYTE PTR cs:[rax],dh
  411beb:	add    BYTE PTR [rsi],ch
  411bed:	add    BYTE PTR [rcx],dh
  411bef:	add    BYTE PTR [rsi],dh
  411bf1:	add    BYTE PTR [rax],dh
  411bf3:	add    BYTE PTR [rax],dh
  411bf5:	add    BYTE PTR [rsi],ch
  411bf7:	add    BYTE PTR [rdx],dh
  411bf9:	add    BYTE PTR [rdx],dh
  411bfb:	add    BYTE PTR [rax],ah
  411bfd:	add    BYTE PTR [rax],ch
  411bff:	add    BYTE PTR [rax],ch
  411c01:	add    BYTE PTR [rbx+0x0],dl
  411c04:	push   rcx
  411c05:	add    BYTE PTR [rax+rax*1+0x5f],cl
  411c09:	add    BYTE PTR [rax+0x0],dl
  411c0c:	jb     0x411c0e
  411c0e:	add    BYTE PTR gs:[rdx+0x0],dl
  411c12:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
  411c17:	add    BYTE PTR [rcx+0x0],ah
  411c1a:	jae    0x411c1c
  411c1c:	add    BYTE PTR gs:[rcx],ch
  411c1f:	add    BYTE PTR [rsi],ch
  411c21:	add    BYTE PTR [rax],dh
  411c23:	add    BYTE PTR [rax],bh
  411c25:	add    BYTE PTR [rax],dh
  411c27:	add    BYTE PTR [rdi],dh
  411c29:	add    BYTE PTR [rax],dh
  411c2b:	add    BYTE PTR [rcx],bh
  411c2d:	add    BYTE PTR [rip+0x34003100],ch        # 0x34414d33
  411c33:	add    BYTE PTR [rcx],dh
  411c35:	add    BYTE PTR [rax+rax*1],dh
  411c38:	and    BYTE PTR [rax],al
  411c3a:	sub    DWORD PTR [rax],eax
  411c3c:	add    BYTE PTR [rax],al
  411c3e:	add    BYTE PTR [rax],al
  411c40:	xor    al,0x0
  411c42:	or     al,BYTE PTR [rax]
  411c44:	add    DWORD PTR [rax],eax
  411c46:	rex.WB add BYTE PTR [r14+0x0],bpl
  411c4a:	je     0x411c4c
  411c4c:	add    BYTE PTR gs:[rdx+0x0],dh
  411c50:	outs   dx,BYTE PTR ds:[rsi]
  411c51:	add    BYTE PTR [rcx+0x0],ah
  411c54:	ins    BYTE PTR es:[rdi],dx
  411c55:	add    BYTE PTR [rsi+0x0],cl
  411c58:	(bad)  
  411c59:	add    BYTE PTR [rbp+0x0],ch
  411c5c:	add    BYTE PTR gs:[rax],al
  411c5f:	add    BYTE PTR [rcx+0x0],al
  411c62:	push   rdx
  411c63:	add    BYTE PTR [rax+0x0],dl
  411c66:	add    BYTE PTR [rcx+0x0],r13b
  411c6a:	(bad)  
  411c6b:	add    BYTE PTR [rax+rax*1+0x6f],ch
  411c6f:	add    BYTE PTR [rdi+0x0],ah
  411c72:	add    BYTE PTR [rax],al
  411c74:	outs   dx,BYTE PTR ds:[rsi]
  411c75:	add    BYTE PTR [rip+0x4c000100],ah        # 0x4c411d7b
  411c7b:	add    BYTE PTR [rbp+0x0],ah
  411c7e:	add    BYTE PTR [ecx+0x0],ah
  411c82:	ins    BYTE PTR es:[rdi],dx
  411c83:	add    BYTE PTR [rbx+0x0],al
  411c86:	outs   dx,DWORD PTR ds:[rsi]
  411c87:	add    BYTE PTR [rax+0x0],dh
  411c8a:	jns    0x411c8c
  411c8c:	jb     0x411c8e
  411c8e:	imul   eax,DWORD PTR [rax],0x680067
  411c94:	je     0x411c96
  411c96:	add    BYTE PTR [rax],al
  411c98:	rex.WRB add BYTE PTR [r9+0x0],r13b
  411c9c:	movsxd eax,DWORD PTR [rax]
  411c9e:	jb     0x411ca0
  411ca0:	outs   dx,DWORD PTR ds:[rsi]
  411ca1:	add    BYTE PTR [rbx+0x0],dh
  411ca4:	outs   dx,DWORD PTR ds:[rsi]
  411ca5:	add    BYTE PTR [rsi+0x0],ah
  411ca8:	je     0x411caa
  411caa:	and    BYTE PTR [rax],al
  411cac:	rex.XB add BYTE PTR [r15+0x0],bpl
  411cb0:	jb     0x411cb2
  411cb2:	jo     0x411cb4
  411cb4:	add    BYTE PTR cs:[rax],ah
  411cb7:	add    BYTE PTR [rcx+0x0],al
  411cba:	ins    BYTE PTR es:[rdi],dx
  411cbb:	add    BYTE PTR [rax+rax*1+0x20],ch
  411cbf:	add    BYTE PTR [rdx+0x0],dh
  411cc2:	imul   eax,DWORD PTR [rax],0x680067
  411cc8:	je     0x411cca
  411cca:	jae    0x411ccc
  411ccc:	and    BYTE PTR [rax],al
  411cce:	jb     0x411cd0
  411cd0:	add    BYTE PTR gs:[rbx+0x0],dh
  411cd4:	add    BYTE PTR gs:[rdx+0x0],dh
  411cd8:	jbe    0x411cda
  411cda:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
  411cdf:	add    BYTE PTR [rax],al
  411ce1:	add    BYTE PTR [rax],al
  411ce3:	add    BYTE PTR [rax+rax*1+0xe],al
  411ce7:	add    BYTE PTR [rcx],al
  411ce9:	add    BYTE PTR [rdi+0x0],cl
  411cec:	jb     0x411cee
  411cee:	imul   eax,DWORD PTR [rax],0x690067
  411cf4:	outs   dx,BYTE PTR ds:[rsi]
  411cf5:	add    BYTE PTR [rcx+0x0],ah
  411cf8:	ins    BYTE PTR es:[rdi],dx
  411cf9:	add    BYTE PTR [rsi+0x0],al
  411cfc:	imul   eax,DWORD PTR [rax],0x65006c
  411d02:	outs   dx,BYTE PTR ds:[rsi]
  411d03:	add    BYTE PTR [rcx+0x0],ah
  411d06:	ins    DWORD PTR es:[rdi],dx
  411d07:	add    BYTE PTR [rbp+0x0],ah
  411d0a:	add    BYTE PTR [rax],al
  411d0c:	add    BYTE PTR [r10+0x0],dl
  411d10:	push   rax
  411d11:	add    BYTE PTR [rax+rax*1+0x69],al
  411d15:	add    BYTE PTR [rcx+0x0],ah
  411d18:	ins    BYTE PTR es:[rdi],dx
  411d19:	add    BYTE PTR [rdi+0x0],ch
  411d1c:	add    BYTE PTR [esi],ch
  411d1f:	add    BYTE PTR [rbp+0x0],ah
  411d22:	js     0x411d24
  411d24:	add    BYTE PTR gs:[rax],al
  411d27:	add    BYTE PTR [rdx+0x0],cl
  411d2a:	adc    eax,0x50000100
  411d2f:	add    BYTE PTR [rdx+0x0],dh
  411d32:	outs   dx,DWORD PTR ds:[rsi]
  411d33:	add    BYTE PTR [rax+rax*1+0x75],ah
  411d37:	add    BYTE PTR [rbx+0x0],ah
  411d3a:	je     0x411d3c
  411d3c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  411d40:	ins    DWORD PTR es:[rdi],dx
  411d41:	add    BYTE PTR [rbp+0x0],ah
  411d44:	add    BYTE PTR [rax],al
  411d46:	add    BYTE PTR [rax],al
  411d48:	rex.WRB add BYTE PTR [r9+0x0],r13b
  411d4c:	movsxd eax,DWORD PTR [rax]
  411d4e:	jb     0x411d50
  411d50:	outs   dx,DWORD PTR ds:[rsi]
  411d51:	add    BYTE PTR [rbx+0x0],dh
  411d54:	outs   dx,DWORD PTR ds:[rsi]
  411d55:	add    BYTE PTR [rsi+0x0],ah
  411d58:	je     0x411d5a
  411d5a:	and    BYTE PTR [rax],al
  411d5c:	push   rbx
  411d5d:	add    BYTE PTR [rcx+0x0],dl
  411d60:	rex.WR add BYTE PTR [rax],r12b
  411d63:	add    BYTE PTR [rbx+0x0],dl
  411d66:	add    BYTE PTR gs:[rdx+0x0],dh
  411d6a:	jbe    0x411d6c
  411d6c:	add    BYTE PTR gs:[rdx+0x0],dh
  411d70:	add    BYTE PTR [rax],al
  411d72:	add    BYTE PTR [rax],al
  411d74:	add    BYTE PTR ds:[rip+0x50000100],cl        # 0x50411e7b
  411d7b:	add    BYTE PTR [rdx+0x0],dh
  411d7e:	outs   dx,DWORD PTR ds:[rsi]
  411d7f:	add    BYTE PTR [rax+rax*1+0x75],ah
  411d83:	add    BYTE PTR [rbx+0x0],ah
  411d86:	je     0x411d88
  411d88:	push   rsi
  411d89:	add    BYTE PTR [rbp+0x0],ah
  411d8c:	jb     0x411d8e
  411d8e:	jae    0x411d90
  411d90:	imul   eax,DWORD PTR [rax],0x6e006f
  411d96:	add    BYTE PTR [rax],al
  411d98:	xor    DWORD PTR [rax],eax
  411d9a:	xor    BYTE PTR [rax],al
  411d9c:	add    BYTE PTR cs:[rax],dh
  411d9f:	add    BYTE PTR [rsi],ch
  411da1:	add    BYTE PTR [rcx],dh
  411da3:	add    BYTE PTR [rsi],dh
  411da5:	add    BYTE PTR [rax],dh
  411da7:	add    BYTE PTR [rax],dh
  411da9:	add    BYTE PTR [rsi],ch
  411dab:	add    BYTE PTR [rdx],dh
  411dad:	add    BYTE PTR [rdx],dh
  411daf:	add    BYTE PTR [rax],al
  411db1:	add    BYTE PTR [rax],al
  411db3:	add    BYTE PTR [rax+rax*1+0x0],al
  411db7:	add    BYTE PTR [rcx],al
  411db9:	add    BYTE PTR [rsi+0x0],dl
  411dbc:	(bad)  
  411dbd:	add    BYTE PTR [rdx+0x0],dh
  411dc0:	rex.RX add BYTE PTR [rcx+0x0],r13b
  411dc4:	ins    BYTE PTR es:[rdi],dx
  411dc5:	add    BYTE PTR [rbp+0x0],ah
  411dc8:	rex.WB add BYTE PTR [r14+0x0],bpl
  411dcc:	data16 add BYTE PTR [rdi+0x0],ch
  411dd0:	add    BYTE PTR [rax],al
  411dd2:	add    BYTE PTR [rax],al
  411dd4:	and    al,0x0
  411dd6:	add    al,0x0
  411dd8:	add    BYTE PTR [rax],al
  411dda:	push   rsp
  411ddb:	add    BYTE PTR [rdx+0x0],dh
  411dde:	(bad)  
  411ddf:	add    BYTE PTR [rsi+0x0],ch
  411de2:	jae    0x411de4
  411de4:	ins    BYTE PTR es:[rdi],dx
  411de5:	add    BYTE PTR [rcx+0x0],ah
  411de8:	je     0x411dea
  411dea:	imul   eax,DWORD PTR [rax],0x6e006f
  411df0:	add    BYTE PTR [rax],al
  411df2:	add    BYTE PTR [rax],al
  411df4:	or     DWORD PTR [rax+rsi*4],eax
  411df7:	.byte 0x4
