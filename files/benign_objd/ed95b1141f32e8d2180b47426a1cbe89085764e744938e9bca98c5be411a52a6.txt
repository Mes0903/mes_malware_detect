
ed95b1141f32e8d2180b47426a1cbe89085764e744938e9bca98c5be411a52a6.exe:     file format pei-i386


Disassembly of section .text:

01001000 <.text>:
 1001000:	dec    edx
 1001001:	xchg   esp,eax
 1001002:	add    BYTE PTR [eax],al
 1001004:	pop    edx
 1001005:	xchg   esp,eax
 1001006:	add    BYTE PTR [eax],al
 1001008:	cmp    al,0x94
 100100a:	add    BYTE PTR [eax],al
 100100c:	add    BYTE PTR [eax],al
 100100e:	add    BYTE PTR [eax],al
 1001010:	ss cdq 
 1001012:	add    BYTE PTR [eax],al
 1001014:	pusha  
 1001015:	cdq    
 1001016:	add    BYTE PTR [eax],al
 1001018:	out    dx,al
 1001019:	cwde   
 100101a:	add    BYTE PTR [eax],al
 100101c:	retf   0x98
 100101f:	add    BYTE PTR [eax+ebx*4-0x67620000],dh
 1001026:	add    BYTE PTR [eax],al
 1001028:	xor    al,0x98
 100102a:	add    BYTE PTR [eax],al
 100102c:	rcr    BYTE PTR [ecx-0x66f20000],cl
 1001032:	add    BYTE PTR [eax],al
 1001034:	add    BYTE PTR [eax],al
 1001036:	add    BYTE PTR [eax],al
 1001038:	push   es
 1001039:	call   0x0:0x0
 1001040:	mov    al,0x9f
 1001042:	add    BYTE PTR [eax],al
 1001044:	pushf  
 1001045:	lahf   
 1001046:	add    BYTE PTR [eax],al
 1001048:	nop
 1001049:	lahf   
 100104a:	add    BYTE PTR [eax],al
 100104c:	sbb    BYTE PTR [edi-0x60920000],0x0
 1001053:	add    BYTE PTR [edx-0x61],ah
 1001056:	add    BYTE PTR [eax],al
 1001058:	push   esp
 1001059:	lahf   
 100105a:	add    BYTE PTR [eax],al
 100105c:	cli    
 100105d:	popf   
 100105e:	add    BYTE PTR [eax],al
 1001060:	out    0x9d,al
 1001062:	add    BYTE PTR [eax],al
 1001064:	rcr    BYTE PTR [ebp-0x62400000],cl
 100106a:	add    BYTE PTR [eax],al
 100106c:	scas   al,BYTE PTR es:[edi]
 100106d:	popf   
 100106e:	add    BYTE PTR [eax],al
 1001070:	cwde   
 1001071:	popf   
 1001072:	add    BYTE PTR [eax],al
 1001074:	sbb    BYTE PTR [ebp-0x62940000],0x0
 100107b:	add    BYTE PTR [esi-0x63],bl
 100107e:	add    BYTE PTR [eax],al
 1001080:	dec    esi
 1001081:	popf   
 1001082:	add    BYTE PTR [eax],al
 1001084:	ds popf 
 1001086:	add    BYTE PTR [eax],al
 1001088:	xor    BYTE PTR [ebp-0x62e00000],bl
 100108e:	add    BYTE PTR [eax],al
 1001090:	adc    al,0x9d
 1001092:	add    BYTE PTR [eax],al
 1001094:	or     BYTE PTR [ebp-0x6a4a0000],bl
 100109a:	add    BYTE PTR [eax],al
 100109c:	jmp    0x9c:0xd200009c
 10010a3:	add    BYTE PTR [esp+ebx*4-0x63540000],bh
 10010aa:	add    BYTE PTR [eax],al
 10010ac:	call   0x9c:0x8800009c
 10010b3:	add    BYTE PTR [esi-0x64],dh
 10010b6:	add    BYTE PTR [eax],al
 10010b8:	pushfw 
 10010ba:	add    BYTE PTR [eax],al
 10010bc:	push   edx
 10010bd:	pushf  
 10010be:	add    BYTE PTR [eax],al
 10010c0:	cmp    al,0x9c
 10010c2:	add    BYTE PTR [eax],al
 10010c4:	es pushf 
 10010c6:	add    BYTE PTR [eax],al
 10010c8:	sbb    bl,BYTE PTR [eax+eax*1+0x9c0400]
 10010cf:	add    al,ch
 10010d1:	fwait
 10010d2:	add    BYTE PTR [eax],al
 10010d4:	rcr    BYTE PTR [ebx-0x643e0000],cl
 10010da:	add    BYTE PTR [eax],al
 10010dc:	scas   al,BYTE PTR es:[edi]
 10010dd:	fwait
 10010de:	add    BYTE PTR [eax],al
 10010e0:	pushf  
 10010e1:	fwait
 10010e2:	add    BYTE PTR [eax],al
 10010e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10010e5:	xchg   ebp,eax
 10010e6:	add    BYTE PTR [eax],al
 10010e8:	cwde   
 10010e9:	xchg   ebp,eax
 10010ea:	add    BYTE PTR [eax],al
 10010ec:	mov    dl,BYTE PTR [ebp-0x6a8e0000]
 10010f2:	add    BYTE PTR [eax],al
 10010f4:	mov    bl,BYTE PTR [ebx-0x64860000]
 10010fa:	add    BYTE PTR [eax],al
 10010fc:	outs   dx,BYTE PTR ds:[esi]
 10010fd:	fwait
 10010fe:	add    BYTE PTR [eax],al
 1001100:	pop    esi
 1001101:	fwait
 1001102:	add    BYTE PTR [eax],al
 1001104:	ss fwait
 1001106:	add    BYTE PTR [eax],al
 1001108:	sbb    al,0x9b
 100110a:	add    BYTE PTR [eax],al
 100110c:	pop    edx
 100110d:	xchg   ebp,eax
 100110e:	add    BYTE PTR [eax],al
 1001110:	ds xchg ebp,eax
 1001112:	add    BYTE PTR [eax],al
 1001114:	cs xchg ebp,eax
 1001116:	add    BYTE PTR [eax],al
 1001118:	sbb    BYTE PTR [ebp-0x6b060000],dl
 100111e:	add    BYTE PTR [eax],al
 1001120:	in     al,0x94
 1001122:	add    BYTE PTR [eax],al
 1001124:	int3   
 1001125:	xchg   esp,eax
 1001126:	add    BYTE PTR [eax],al
 1001128:	mov    eax,0xa0000094
 100112d:	xchg   esp,eax
 100112e:	add    BYTE PTR [eax],al
 1001130:	mov    ss,WORD PTR [eax+eax*1+0x947c00]
 1001137:	add    dl,bh
 1001139:	pushf  
 100113a:	add    BYTE PTR [eax],al
 100113c:	sub    BYTE PTR [edx-0x65c20000],bl
 1001142:	add    BYTE PTR [eax],al
 1001144:	inc    esi
 1001145:	call   0x0:0x9a640000
 100114c:	je     0x10010e8
 100114e:	add    BYTE PTR [eax],al
 1001150:	mov    BYTE PTR [edx-0x65640000],bl
 1001156:	add    BYTE PTR [eax],al
 1001158:	mov    eax,0xcc00009a
 100115d:	call   0x0:0x9adc0000
 1001164:	neg    BYTE PTR [edx-0x64fa0000]
 100116a:	add    BYTE PTR [eax],al
 100116c:	ret    0x9f
 100116f:	add    BYTE PTR [eax],al
 1001171:	add    BYTE PTR [eax],al
 1001173:	add    BYTE PTR [eax-0x69ffff62],dh
 1001179:	sahf   
 100117a:	add    BYTE PTR [eax],al
 100117c:	jl     0x100111c
 100117e:	add    BYTE PTR [eax],al
 1001180:	add    BYTE PTR [eax],al
 1001182:	add    BYTE PTR [eax],al
 1001184:	cmp    al,0x9e
 1001186:	add    BYTE PTR [eax],al
 1001188:	dec    esp
 1001189:	sahf   
 100118a:	add    BYTE PTR [eax],al
 100118c:	pop    esp
 100118d:	sahf   
 100118e:	add    BYTE PTR [eax],al
 1001190:	ins    BYTE PTR es:[edi],dx
 1001191:	sahf   
 1001192:	add    BYTE PTR [eax],al
 1001194:	xor    al,0x9e
 1001196:	add    BYTE PTR [eax],al
 1001198:	sub    BYTE PTR [esi-0x61e40000],bl
 100119e:	add    BYTE PTR [eax],al
 10011a0:	push   cs
 10011a1:	sahf   
 10011a2:	add    BYTE PTR [eax],al
 10011a4:	sub    al,0x96
 10011a6:	add    BYTE PTR [eax],al
 10011a8:	cmp    dl,BYTE PTR [esi-0x69bc0000]
 10011ae:	add    BYTE PTR [eax],al
 10011b0:	dec    esi
 10011b1:	xchg   esi,eax
 10011b2:	add    BYTE PTR [eax],al
 10011b4:	push   esi
 10011b5:	xchg   esi,eax
 10011b6:	add    BYTE PTR [eax],al
 10011b8:	ins    BYTE PTR es:[edi],dx
 10011b9:	xchg   esi,eax
 10011ba:	add    BYTE PTR [eax],al
 10011bc:	jbe    0x1001154
 10011be:	add    BYTE PTR [eax],al
 10011c0:	adc    BYTE PTR [esi-0x69700000],0x0
 10011c7:	add    BYTE PTR [esi-0x4fffff6a],bl
 10011cd:	xchg   esi,eax
 10011ce:	add    BYTE PTR [eax],al
 10011d0:	mov    edx,0xc2000096
 10011d5:	xchg   esi,eax
 10011d6:	add    BYTE PTR [eax],al
 10011d8:	rcl    BYTE PTR [esi-0x69280000],1
 10011de:	add    BYTE PTR [eax],al
 10011e0:	out    0x96,al
 10011e2:	add    BYTE PTR [eax],al
 10011e4:	repnz xchg esi,eax
 10011e6:	add    BYTE PTR [eax],al
 10011e8:	add    BYTE PTR [edi-0x68ea0000],dl
 10011ee:	add    BYTE PTR [eax],al
 10011f0:	sub    dl,BYTE PTR [edi-0x68ca0000]
 10011f6:	add    BYTE PTR [eax],al
 10011f8:	inc    eax
 10011f9:	xchg   edi,eax
 10011fa:	add    BYTE PTR [eax],al
 10011fc:	pusha  
 10011fd:	xchg   edi,eax
 10011fe:	add    BYTE PTR [eax],al
 1001200:	je     0x1001199
 1001202:	add    BYTE PTR [eax],al
 1001204:	mov    dl,BYTE PTR [edi-0x685c0000]
 100120a:	add    BYTE PTR [eax],al
 100120c:	scas   al,BYTE PTR es:[edi]
 100120d:	xchg   edi,eax
 100120e:	add    BYTE PTR [eax],al
 1001210:	mov    esp,0xc4000097
 1001215:	xchg   edi,eax
 1001216:	add    BYTE PTR [eax],al
 1001218:	into   
 1001219:	xchg   edi,eax
 100121a:	add    BYTE PTR [eax],al
 100121c:	loopne 0x10011b5
 100121e:	add    BYTE PTR [eax],al
 1001220:	lock xchg edi,eax
 1001222:	add    BYTE PTR [eax],al
 1001224:	(bad)  
 1001225:	xchg   ebp,eax
 1001226:	add    BYTE PTR [eax],al
 1001228:	out    0x95,al
 100122a:	add    BYTE PTR [eax],al
 100122c:	out    dx,al
 100122d:	xchg   ebp,eax
 100122e:	add    BYTE PTR [eax],al
 1001230:	(bad)  
 1001231:	xchg   ebp,eax
 1001232:	add    BYTE PTR [eax],al
 1001234:	adc    al,0x96
 1001236:	add    BYTE PTR [eax],al
 1001238:	and    dl,BYTE PTR [esi+0x0]
 100123e:	add    BYTE PTR [eax],al
 1001240:	push   es
 1001241:	add    BYTE PTR [eax],al
 1001243:	add    BYTE PTR [eax+eax*1],0x0
 1001247:	add    BYTE PTR [eax],0x0
 100124a:	add    BYTE PTR [eax],al
 100124c:	call   0xff0012ef
 1001251:	sahf   
 1001252:	add    BYTE PTR [eax],al
 1001254:	add    BYTE PTR [eax],al
 1001256:	add    BYTE PTR [eax],al
 1001258:	ss lahf 
 100125a:	add    BYTE PTR [eax],al
 100125c:	and    BYTE PTR [edi+0x0],bl
 1001262:	add    BYTE PTR [eax],al
 1001264:	add    BYTE PTR [eax],al
 1001266:	add    BYTE PTR [eax],al
 1001268:	fidiv  WORD PTR [eax+eax*1]
 100126b:	add    esi,esi
 100126d:	mov    eax,DWORD PTR [eax]
 100126f:	add    DWORD PTR [ecx],edx
 1001271:	mov    WORD PTR [eax],es
 1001273:	add    DWORD PTR [edx],esp
 1001275:	mov    WORD PTR [eax],es
 1001277:	add    DWORD PTR [edi-0x74],ecx
 100127a:	add    BYTE PTR [ecx],al
	...
 1001284:	mov    esp,0xcc010036
 1001289:	cmp    eax,DWORD PTR [eax]
 100128b:	add    DWORD PTR [eax],eax
 100128d:	add    BYTE PTR [eax],al
 100128f:	add    BYTE PTR [eax],al
 1001291:	add    BYTE PTR [eax],al
 1001293:	add    BYTE PTR [edx+0x4f35e2],dh
 1001299:	add    BYTE PTR [eax],al
 100129b:	add    BYTE PTR [edx],al
 100129d:	add    BYTE PTR [eax],al
 100129f:	add    BYTE PTR [ebx],ah
 10012a1:	add    BYTE PTR [eax],al
 10012a3:	add    BYTE PTR [eax],al
 10012a5:	sub    al,BYTE PTR [eax]
 10012a7:	add    BYTE PTR [eax],al
 10012a9:	push   ds
 10012aa:	add    BYTE PTR [eax],al
 10012ac:	add    BYTE PTR fs:[eax+eax*1+0x73],dh
 10012b1:	add    BYTE PTR [eax+0x0],dh
 10012b4:	imul   eax,DWORD PTR [eax],0x650070
 10012ba:	ins    BYTE PTR es:[edi],dx
 10012bb:	add    BYTE PTR [ecx+0x0],ch
 10012be:	outs   dx,BYTE PTR ds:[esi]
 10012bf:	add    BYTE PTR [ebp+0x0],ah
 10012c2:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
 10012c7:	add    BYTE PTR [eax+eax*1+0x0],ch
 10012cb:	add    BYTE PTR [ecx+0x0],al
 10012ce:	add    BYTE PTR fs:[esi+0x0],dh
 10012d2:	popa   
 10012d3:	add    BYTE PTR [eax+0x0],dh
 10012d6:	imul   eax,DWORD PTR [eax],0x320033
 10012dc:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
 10012e1:	add    BYTE PTR [eax+eax*1+0x0],ch
 10012e5:	add    BYTE PTR [eax],al
 10012e7:	add    BYTE PTR [edx+0x65],dl
 10012ea:	addr16 dec edi
 10012ec:	jo     0x1001353
 10012ee:	outs   dx,BYTE PTR ds:[esi]
 10012ef:	dec    ebx
 10012f0:	gs jns 0x1001347
 10012f3:	jb     0x1001356
 10012f5:	outs   dx,BYTE PTR ds:[esi]
 10012f6:	jae    0x1001359
 10012f8:	arpl   WORD PTR [ebp+eiz*2+0x64],si
 10012fc:	push   edi
 10012fd:	add    BYTE PTR [eax],al
 10012ff:	add    BYTE PTR [edx+0x0],bh
 1001302:	add    BYTE PTR [eax],al
 1001304:	inc    esp
 1001305:	ins    DWORD PTR es:[edi],dx
 1001306:	jo     0x100134f
 1001308:	gs je  0x100134e
 100130b:	ins    BYTE PTR es:[edi],dx
 100130c:	imul   esp,DWORD PTR [ebp+0x6e],0x70784574
 1001313:	outs   dx,DWORD PTR ds:[esi]
 1001314:	jb     0x100138a
 1001316:	add    BYTE PTR [eax],al
 1001318:	and    eax,0x25007300
 100131d:	add    BYTE PTR [ebx+0x0],dh
 1001320:	pop    edi
 1001321:	add    BYTE PTR ds:0x2e006400,ah
 1001327:	add    BYTE PTR [eax+eax*1+0x6d],dh
 100132b:	add    BYTE PTR [eax+0x0],dh
 100132e:	add    BYTE PTR [eax],al
 1001330:	and    eax,0x25007300
 1001335:	add    BYTE PTR [ebx+0x0],dh
 1001338:	pop    edi
 1001339:	add    BYTE PTR ds:0x2e006400,ah
 100133f:	add    BYTE PTR [ebp+0x0],ch
 1001342:	add    BYTE PTR fs:[ebp+0x0],ch
 1001346:	jo     0x1001348
	...
 1001350:	push   ebx
 1001351:	add    BYTE PTR [edi+0x0],cl
 1001354:	inc    esi
 1001355:	add    BYTE PTR [eax+eax*1+0x57],dl
 1001359:	add    BYTE PTR [ecx+0x0],al
 100135c:	push   edx
 100135d:	add    BYTE PTR [ebp+0x0],al
 1001360:	pop    esp
 1001361:	add    BYTE PTR [ebp+0x0],cl
 1001364:	imul   eax,DWORD PTR [eax],0x720063
 100136a:	outs   dx,DWORD PTR ds:[esi]
 100136b:	add    BYTE PTR [ebx+0x0],dh
 100136e:	outs   dx,DWORD PTR ds:[esi]
 100136f:	add    BYTE PTR [esi+0x0],ah
 1001372:	je     0x1001374
 1001374:	pop    esp
 1001375:	add    BYTE PTR [ebp+0x0],cl
 1001378:	imul   eax,DWORD PTR [eax],0x720063
 100137e:	outs   dx,DWORD PTR ds:[esi]
 100137f:	add    BYTE PTR [ebx+0x0],dh
 1001382:	outs   dx,DWORD PTR ds:[esi]
 1001383:	add    BYTE PTR [esi+0x0],ah
 1001386:	je     0x1001388
 1001388:	and    BYTE PTR [eax],al
 100138a:	push   ebx
 100138b:	add    BYTE PTR [ecx+0x0],dl
 100138e:	dec    esp
 100138f:	add    BYTE PTR [eax],ah
 1001391:	add    BYTE PTR [ebx+0x0],dl
 1001394:	add    BYTE PTR gs:[edx+0x0],dh
 1001398:	jbe    0x100139a
 100139a:	add    BYTE PTR gs:[edx+0x0],dh
 100139e:	pop    esp
 100139f:	add    BYTE PTR [ecx],dh
 10013a1:	add    BYTE PTR [ecx],dh
 10013a3:	add    BYTE PTR [eax],dh
 10013a5:	add    BYTE PTR [eax+eax*1+0x53],bl
 10013a9:	add    BYTE PTR [ebx+0x0],dl
 10013ac:	dec    ecx
 10013ad:	add    BYTE PTR [ebx+0x0],dl
 10013b0:	pop    esp
 10013b1:	add    BYTE PTR [ebx+0x0],dl
 10013b4:	add    BYTE PTR gs:[eax+eax*1+0x75],dh
 10013b9:	add    BYTE PTR [eax+0x0],dh
 10013bc:	pop    esp
 10013bd:	add    BYTE PTR [eax+eax*1+0x74],al
 10013c1:	add    BYTE PTR [ebx+0x0],dh
 10013c4:	push   eax
 10013c5:	add    BYTE PTR [ecx+0x0],ah
 10013c8:	je     0x10013ca
 10013ca:	push   0x0
 10013cf:	add    BYTE PTR [ebx+0x0],dl
 10013d2:	jno    0x10013d4
 10013d4:	ins    BYTE PTR es:[edi],dx
 10013d5:	add    BYTE PTR [eax+eax*1+0x75],al
 10013d9:	add    BYTE PTR [ebp+0x0],ch
 10013dc:	jo     0x10013de
 10013de:	add    BYTE PTR gs:[edx+0x0],dh
 10013e2:	inc    esi
 10013e3:	add    BYTE PTR [eax+eax*1+0x61],ch
 10013e7:	add    BYTE PTR [edi+0x0],ah
 10013ea:	jae    0x10013ec
 10013ec:	add    BYTE PTR [eax],al
 10013ee:	add    BYTE PTR [eax],al
 10013f0:	push   ebx
 10013f1:	add    BYTE PTR [ecx+0x0],dh
 10013f4:	ins    BYTE PTR es:[edi],dx
 10013f5:	add    BYTE PTR [eax+eax*1+0x75],al
 10013f9:	add    BYTE PTR [ebp+0x0],ch
 10013fc:	jo     0x10013fe
 10013fe:	add    BYTE PTR gs:[edx+0x0],dh
 1001402:	dec    ebp
 1001403:	add    BYTE PTR [ecx+0x0],ch
 1001406:	outs   dx,BYTE PTR ds:[esi]
 1001407:	add    BYTE PTR [ecx+0x0],ch
 100140a:	add    BYTE PTR fs:[ebp+0x0],dh
 100140e:	ins    DWORD PTR es:[edi],dx
 100140f:	add    BYTE PTR [eax+0x0],dh
 1001412:	inc    esi
 1001413:	add    BYTE PTR [eax+eax*1+0x61],ch
 1001417:	add    BYTE PTR [edi+0x0],ah
 100141a:	jae    0x100141c
 100141c:	add    BYTE PTR [eax],al
 100141e:	add    BYTE PTR [eax],al
 1001420:	xor    DWORD PTR [eax],eax
 1001422:	xor    DWORD PTR [eax],eax
 1001424:	add    BYTE PTR cs:[eax],dh
 1001427:	add    BYTE PTR [esi],ch
 1001429:	add    BYTE PTR [edx],dh
 100142b:	add    BYTE PTR [ecx],dh
 100142d:	add    BYTE PTR [eax],dh
 100142f:	add    BYTE PTR [eax],dh
 1001431:	add    BYTE PTR [esi],ch
 1001433:	add    BYTE PTR [esi],dh
 1001435:	add    BYTE PTR [eax],dh
 1001437:	add    BYTE PTR [eax],al
 1001439:	add    BYTE PTR [eax],al
 100143b:	add    BYTE PTR [esp+edx*2+0x45],al
 100143f:	js     0x10014a6
 1001441:	arpl   WORD PTR [ebp+0x61],cx
 1001444:	imul   ebp,DWORD PTR [esi+0x0],0x2e002500
 100144b:	add    BYTE PTR [esi],dh
 100144d:	add    BYTE PTR [edi+0x0],ah
	...
 100145c:	add    BYTE PTR [eax-0x71],al
 100145f:	inc    eax
 1001460:	cmp    BYTE PTR [ebx-0x4c6fff00],dh
 1001466:	add    BYTE PTR [ecx],al
 1001468:	push   0xa301002a
 100146d:	cmp    DWORD PTR [eax],eax
 100146f:	add    DWORD PTR [eax],edx
 1001471:	pop    ecx
 1001472:	das    
 1001473:	mov    dh,0x28
 1001475:	rcl    DWORD PTR gs:[ecx],1
 1001478:	xchg   esi,eax
 1001479:	adc    DWORD PTR [eax],eax
 100147b:	add    al,bh
 100147d:	push   ds
 100147e:	or     eax,0x4c3de00d
 1001483:	cmp    DWORD PTR [edi+0x3c],ebp
 1001486:	rcl    BYTE PTR [ecx],cl
 1001488:	cmp    DWORD PTR [ebx+0x0],0x7a794fc0
 100148f:	mov    bh,0xca
 1001491:	test   eax,0x92a25dc0
 1001496:	add    al,0x42
 1001498:	nop
 1001499:	add    esp,esp
 100149b:	into   
 100149c:	pop    edi
 100149d:	adc    ecx,esp
 100149f:	test   al,0x4d
 10014a1:	add    BYTE PTR [ecx+0x0],ah
 10014a4:	imul   eax,DWORD PTR [eax],0x53006c
 10014aa:	ins    BYTE PTR es:[edi],dx
 10014ab:	add    BYTE PTR [edi+0x0],ch
 10014ae:	je     0x10014b0
 10014b0:	push   eax
 10014b1:	add    BYTE PTR [edx+0x0],dh
 10014b4:	add    BYTE PTR gs:[esi+0x0],ah
 10014b8:	imul   eax,DWORD PTR [eax],0x78
 10014be:	add    BYTE PTR [eax],al
 10014c0:	push   esp
 10014c1:	add    BYTE PTR [ecx+0x0],ch
 10014c4:	ins    DWORD PTR es:[edi],dx
 10014c5:	add    BYTE PTR [ebp+0x0],ah
 10014c8:	outs   dx,DWORD PTR ds:[esi]
 10014c9:	add    BYTE PTR [ebp+0x0],dh
 10014cc:	je     0x10014ce
 10014ce:	add    BYTE PTR [eax],al
 10014d0:	pop    esp
 10014d1:	add    BYTE PTR [eax+eax*1+0x2e],bl
 10014d5:	add    BYTE PTR [eax+eax*1+0x6d],bl
 10014d9:	add    BYTE PTR [ecx+0x0],ah
 10014dc:	imul   eax,DWORD PTR [eax],0x73006c
 10014e2:	ins    BYTE PTR es:[edi],dx
 10014e3:	add    BYTE PTR [edi+0x0],ch
 10014e6:	je     0x10014e8
 10014e8:	pop    esp
 10014e9:	add    BYTE PTR [edi+0x0],dl
 10014ec:	inc    ecx
 10014ed:	add    BYTE PTR [ecx+0x0],cl
 10014f0:	push   esp
 10014f1:	add    BYTE PTR [esi+0x0],al
 10014f4:	dec    edi
 10014f5:	add    BYTE PTR [edx+0x0],dl
 10014f8:	add    BYTE PTR cs:[ebp+0x0],al
 10014fc:	pop    eax
 10014fd:	add    BYTE PTR [ebp+0x0],al
 1001500:	pop    esp
 1001501:	add    BYTE PTR [eax],al
 1001503:	add    BYTE PTR [eax],al
 1001505:	add    BYTE PTR [eax],al
 1001507:	add    BYTE PTR [ebx+0x0],dl
 100150a:	dec    edi
 100150b:	add    BYTE PTR [esi+0x0],al
 100150e:	push   esp
 100150f:	add    BYTE PTR [edi+0x0],dl
 1001512:	inc    ecx
 1001513:	add    BYTE PTR [edx+0x0],dl
 1001516:	inc    ebp
 1001517:	add    BYTE PTR [eax+eax*1+0x4d],bl
 100151b:	add    BYTE PTR [ecx+0x0],ch
 100151e:	arpl   WORD PTR [eax],ax
 1001520:	jb     0x1001522
 1001522:	outs   dx,DWORD PTR ds:[esi]
 1001523:	add    BYTE PTR [ebx+0x0],dh
 1001526:	outs   dx,DWORD PTR ds:[esi]
 1001527:	add    BYTE PTR [esi+0x0],ah
 100152a:	je     0x100152c
 100152c:	pop    esp
 100152d:	add    BYTE PTR [ebp+0x0],cl
 1001530:	imul   eax,DWORD PTR [eax],0x720063
 1001536:	outs   dx,DWORD PTR ds:[esi]
 1001537:	add    BYTE PTR [ebx+0x0],dh
 100153a:	outs   dx,DWORD PTR ds:[esi]
 100153b:	add    BYTE PTR [esi+0x0],ah
 100153e:	je     0x1001540
 1001540:	and    BYTE PTR [eax],al
 1001542:	push   ebx
 1001543:	add    BYTE PTR [ecx+0x0],dl
 1001546:	dec    esp
 1001547:	add    BYTE PTR [eax],ah
 1001549:	add    BYTE PTR [ebx+0x0],dl
 100154c:	add    BYTE PTR gs:[edx+0x0],dh
 1001550:	jbe    0x1001552
 1001552:	add    BYTE PTR gs:[edx+0x0],dh
 1001556:	pop    esp
 1001557:	add    BYTE PTR [ecx],dh
 1001559:	add    BYTE PTR [ecx],dh
 100155b:	add    BYTE PTR [eax],dh
 100155d:	add    BYTE PTR [eax+eax*1+0x53],bl
 1001561:	add    BYTE PTR [ebx+0x0],dl
 1001564:	dec    ecx
 1001565:	add    BYTE PTR [ebx+0x0],dl
 1001568:	pop    esp
 1001569:	add    BYTE PTR [edi+0x0],dl
 100156c:	popa   
 100156d:	add    BYTE PTR [ecx+0x0],ch
 1001570:	je     0x1001572
 1001572:	dec    edi
 1001573:	add    BYTE PTR [esi+0x0],ch
 1001576:	push   ebx
 1001577:	add    BYTE PTR [eax+eax*1+0x61],dh
 100157b:	add    BYTE PTR [edx+0x0],dh
 100157e:	je     0x1001580
 1001580:	jne    0x1001582
 1001582:	jo     0x1001584
 1001584:	add    BYTE PTR [eax],al
 1001586:	add    BYTE PTR [eax],al
 1001588:	push   ebx
 1001589:	add    BYTE PTR [edi+0x0],cl
 100158c:	inc    esi
 100158d:	add    BYTE PTR [eax+eax*1+0x57],dl
 1001591:	add    BYTE PTR [ecx+0x0],al
 1001594:	push   edx
 1001595:	add    BYTE PTR [ebp+0x0],al
 1001598:	pop    esp
 1001599:	add    BYTE PTR [ebp+0x0],cl
 100159c:	imul   eax,DWORD PTR [eax],0x720063
 10015a2:	outs   dx,DWORD PTR ds:[esi]
 10015a3:	add    BYTE PTR [ebx+0x0],dh
 10015a6:	outs   dx,DWORD PTR ds:[esi]
 10015a7:	add    BYTE PTR [esi+0x0],ah
 10015aa:	je     0x10015ac
 10015ac:	pop    esp
 10015ad:	add    BYTE PTR [ebp+0x0],cl
 10015b0:	imul   eax,DWORD PTR [eax],0x720063
 10015b6:	outs   dx,DWORD PTR ds:[esi]
 10015b7:	add    BYTE PTR [ebx+0x0],dh
 10015ba:	outs   dx,DWORD PTR ds:[esi]
 10015bb:	add    BYTE PTR [esi+0x0],ah
 10015be:	je     0x10015c0
 10015c0:	and    BYTE PTR [eax],al
 10015c2:	push   ebx
 10015c3:	add    BYTE PTR [ecx+0x0],dl
 10015c6:	dec    esp
 10015c7:	add    BYTE PTR [eax],ah
 10015c9:	add    BYTE PTR [ebx+0x0],dl
 10015cc:	add    BYTE PTR gs:[edx+0x0],dh
 10015d0:	jbe    0x10015d2
 10015d2:	add    BYTE PTR gs:[edx+0x0],dh
 10015d6:	pop    esp
 10015d7:	add    BYTE PTR [ecx],dh
 10015d9:	add    BYTE PTR [ecx],dh
 10015db:	add    BYTE PTR [eax],dh
 10015dd:	add    BYTE PTR [eax+eax*1+0x53],bl
 10015e1:	add    BYTE PTR [ebx+0x0],dl
 10015e4:	dec    ecx
 10015e5:	add    BYTE PTR [ebx+0x0],dl
 10015e8:	pop    esp
 10015e9:	add    BYTE PTR [edi+0x0],dl
 10015ec:	popa   
 10015ed:	add    BYTE PTR [ecx+0x0],ch
 10015f0:	je     0x10015f2
 10015f2:	dec    edi
 10015f3:	add    BYTE PTR [esi+0x0],ch
 10015f6:	push   ebx
 10015f7:	add    BYTE PTR [eax+eax*1+0x61],dh
 10015fb:	add    BYTE PTR [edx+0x0],dh
 10015fe:	je     0x1001600
 1001600:	jne    0x1001602
 1001602:	jo     0x1001604
 1001604:	pop    esp
 1001605:	add    BYTE PTR [ecx+0x0],cl
 1001608:	push   ebx
 1001609:	add    BYTE PTR [ebx+0x0],dl
 100160c:	add    BYTE PTR gs:[edx+0x0],dh
 1001610:	jbe    0x1001612
 1001612:	add    BYTE PTR gs:[edx+0x0],dh
 1001616:	add    BYTE PTR [eax],al
 1001618:	push   ebx
 1001619:	add    BYTE PTR [edi+0x0],cl
 100161c:	inc    esi
 100161d:	add    BYTE PTR [eax+eax*1+0x57],dl
 1001621:	add    BYTE PTR [ecx+0x0],al
 1001624:	push   edx
 1001625:	add    BYTE PTR [ebp+0x0],al
 1001628:	pop    esp
 1001629:	add    BYTE PTR [ebp+0x0],cl
 100162c:	imul   eax,DWORD PTR [eax],0x720063
 1001632:	outs   dx,DWORD PTR ds:[esi]
 1001633:	add    BYTE PTR [ebx+0x0],dh
 1001636:	outs   dx,DWORD PTR ds:[esi]
 1001637:	add    BYTE PTR [esi+0x0],ah
 100163a:	je     0x100163c
 100163c:	pop    esp
 100163d:	add    BYTE PTR [ebp+0x0],cl
 1001640:	imul   eax,DWORD PTR [eax],0x720063
 1001646:	outs   dx,DWORD PTR ds:[esi]
 1001647:	add    BYTE PTR [ebx+0x0],dh
 100164a:	outs   dx,DWORD PTR ds:[esi]
 100164b:	add    BYTE PTR [esi+0x0],ah
 100164e:	je     0x1001650
 1001650:	and    BYTE PTR [eax],al
 1001652:	push   ebx
 1001653:	add    BYTE PTR [ecx+0x0],dl
 1001656:	dec    esp
 1001657:	add    BYTE PTR [eax],ah
 1001659:	add    BYTE PTR [ebx+0x0],dl
 100165c:	add    BYTE PTR gs:[edx+0x0],dh
 1001660:	jbe    0x1001662
 1001662:	add    BYTE PTR gs:[edx+0x0],dh
 1001666:	pop    esp
 1001667:	add    BYTE PTR [ecx],dh
 1001669:	add    BYTE PTR [ecx],dh
 100166b:	add    BYTE PTR [eax],dh
 100166d:	add    BYTE PTR [eax+eax*1+0x53],bl
 1001671:	add    BYTE PTR [ebx+0x0],dl
 1001674:	dec    ecx
 1001675:	add    BYTE PTR [ebx+0x0],dl
 1001678:	pop    esp
 1001679:	add    BYTE PTR [edi+0x0],dl
 100167c:	popa   
 100167d:	add    BYTE PTR [ecx+0x0],ch
 1001680:	je     0x1001682
 1001682:	dec    edi
 1001683:	add    BYTE PTR [esi+0x0],ch
 1001686:	push   ebx
 1001687:	add    BYTE PTR [eax+eax*1+0x61],dh
 100168b:	add    BYTE PTR [edx+0x0],dh
 100168e:	je     0x1001690
 1001690:	jne    0x1001692
 1001692:	jo     0x1001694
 1001694:	pop    esp
 1001695:	add    BYTE PTR [esi+0x0],al
 1001698:	imul   eax,DWORD PTR [eax],0x65006c
 100169e:	add    BYTE PTR [eax],al
 10016a0:	push   ebx
 10016a1:	add    BYTE PTR [edi+0x0],cl
 10016a4:	inc    esi
 10016a5:	add    BYTE PTR [eax+eax*1+0x57],dl
 10016a9:	add    BYTE PTR [ecx+0x0],al
 10016ac:	push   edx
 10016ad:	add    BYTE PTR [ebp+0x0],al
 10016b0:	pop    esp
 10016b1:	add    BYTE PTR [ebp+0x0],cl
 10016b4:	imul   eax,DWORD PTR [eax],0x720063
 10016ba:	outs   dx,DWORD PTR ds:[esi]
 10016bb:	add    BYTE PTR [ebx+0x0],dh
 10016be:	outs   dx,DWORD PTR ds:[esi]
 10016bf:	add    BYTE PTR [esi+0x0],ah
 10016c2:	je     0x10016c4
 10016c4:	pop    esp
 10016c5:	add    BYTE PTR [ebp+0x0],cl
 10016c8:	imul   eax,DWORD PTR [eax],0x720063
 10016ce:	outs   dx,DWORD PTR ds:[esi]
 10016cf:	add    BYTE PTR [ebx+0x0],dh
 10016d2:	outs   dx,DWORD PTR ds:[esi]
 10016d3:	add    BYTE PTR [esi+0x0],ah
 10016d6:	je     0x10016d8
 10016d8:	and    BYTE PTR [eax],al
 10016da:	push   ebx
 10016db:	add    BYTE PTR [ecx+0x0],dl
 10016de:	dec    esp
 10016df:	add    BYTE PTR [eax],ah
 10016e1:	add    BYTE PTR [ebx+0x0],dl
 10016e4:	add    BYTE PTR gs:[edx+0x0],dh
 10016e8:	jbe    0x10016ea
 10016ea:	add    BYTE PTR gs:[edx+0x0],dh
 10016ee:	pop    esp
 10016ef:	add    BYTE PTR [ecx],dh
 10016f1:	add    BYTE PTR [ecx],dh
 10016f3:	add    BYTE PTR [eax],dh
 10016f5:	add    BYTE PTR [eax+eax*1+0x53],bl
 10016f9:	add    BYTE PTR [ebx+0x0],dl
 10016fc:	dec    ecx
 10016fd:	add    BYTE PTR [ebx+0x0],dl
 1001700:	pop    esp
 1001701:	add    BYTE PTR [edi+0x0],dl
 1001704:	popa   
 1001705:	add    BYTE PTR [ecx+0x0],ch
 1001708:	je     0x100170a
 100170a:	dec    edi
 100170b:	add    BYTE PTR [esi+0x0],ch
 100170e:	push   ebx
 100170f:	add    BYTE PTR [eax+eax*1+0x61],dh
 1001713:	add    BYTE PTR [edx+0x0],dh
 1001716:	je     0x1001718
 1001718:	jne    0x100171a
 100171a:	jo     0x100171c
 100171c:	pop    esp
 100171d:	add    BYTE PTR [ebx+0x0],dl
 1001720:	push   ecx
 1001721:	add    BYTE PTR [eax+eax*1+0x0],cl
 1001725:	add    BYTE PTR [eax],al
 1001727:	add    BYTE PTR [ebx+0x0],dl
 100172a:	dec    edi
 100172b:	add    BYTE PTR [esi+0x0],al
 100172e:	push   esp
 100172f:	add    BYTE PTR [edi+0x0],dl
 1001732:	inc    ecx
 1001733:	add    BYTE PTR [edx+0x0],dl
 1001736:	inc    ebp
 1001737:	add    BYTE PTR [eax+eax*1+0x4d],bl
 100173b:	add    BYTE PTR [ecx+0x0],ch
 100173e:	arpl   WORD PTR [eax],ax
 1001740:	jb     0x1001742
 1001742:	outs   dx,DWORD PTR ds:[esi]
 1001743:	add    BYTE PTR [ebx+0x0],dh
 1001746:	outs   dx,DWORD PTR ds:[esi]
 1001747:	add    BYTE PTR [esi+0x0],ah
 100174a:	je     0x100174c
 100174c:	pop    esp
 100174d:	add    BYTE PTR [ebp+0x0],cl
 1001750:	imul   eax,DWORD PTR [eax],0x720063
 1001756:	outs   dx,DWORD PTR ds:[esi]
 1001757:	add    BYTE PTR [ebx+0x0],dh
 100175a:	outs   dx,DWORD PTR ds:[esi]
 100175b:	add    BYTE PTR [esi+0x0],ah
 100175e:	je     0x1001760
 1001760:	and    BYTE PTR [eax],al
 1001762:	push   ebx
 1001763:	add    BYTE PTR [ecx+0x0],dl
 1001766:	dec    esp
 1001767:	add    BYTE PTR [eax],ah
 1001769:	add    BYTE PTR [ebx+0x0],dl
 100176c:	add    BYTE PTR gs:[edx+0x0],dh
 1001770:	jbe    0x1001772
 1001772:	add    BYTE PTR gs:[edx+0x0],dh
 1001776:	pop    esp
 1001777:	add    BYTE PTR [ecx],dh
 1001779:	add    BYTE PTR [ecx],dh
 100177b:	add    BYTE PTR [eax],dh
 100177d:	add    BYTE PTR [eax+eax*1+0x53],bl
 1001781:	add    BYTE PTR [ebx+0x0],dl
 1001784:	dec    ecx
 1001785:	add    BYTE PTR [ebx+0x0],dl
 1001788:	pop    esp
 1001789:	add    BYTE PTR [edi+0x0],dl
 100178c:	popa   
 100178d:	add    BYTE PTR [ecx+0x0],ch
 1001790:	je     0x1001792
 1001792:	dec    edi
 1001793:	add    BYTE PTR [esi+0x0],ch
 1001796:	push   ebx
 1001797:	add    BYTE PTR [eax+eax*1+0x61],dh
 100179b:	add    BYTE PTR [edx+0x0],dh
 100179e:	je     0x10017a0
 10017a0:	jne    0x10017a2
 10017a2:	jo     0x10017a4
 10017a4:	pop    esp
 10017a5:	add    BYTE PTR [eax+0x0],dl
 10017a8:	jb     0x10017aa
 10017aa:	outs   dx,DWORD PTR ds:[esi]
 10017ab:	add    BYTE PTR [edx+0x0],ch
 10017ae:	add    BYTE PTR gs:[ebx+0x0],ah
 10017b2:	je     0x10017b4
	...
 10017c0:	inc    ebx
 10017c1:	add    BYTE PTR [edi+0x0],ch
 10017c4:	jne    0x10017c6
 10017c6:	ins    BYTE PTR es:[edi],dx
 10017c7:	add    BYTE PTR [eax+eax*1+0x20],ah
 10017cb:	add    BYTE PTR [esi+0x0],ch
 10017ce:	outs   dx,DWORD PTR ds:[esi]
 10017cf:	add    BYTE PTR [eax+eax*1+0x20],dh
 10017d3:	add    BYTE PTR [esi+0x0],ah
 10017d6:	imul   eax,DWORD PTR [eax],0x64006e
 10017dc:	and    BYTE PTR [eax],al
 10017de:	jae    0x10017e0
 10017e0:	je     0x10017e2
 10017e2:	jb     0x10017e4
 10017e4:	imul   eax,DWORD PTR [eax],0x67006e
 10017ea:	and    BYTE PTR [eax],al
 10017ec:	and    eax,0x20006400
 10017f1:	add    BYTE PTR [ecx+0x0],ch
 10017f4:	outs   dx,BYTE PTR ds:[esi]
 10017f5:	add    BYTE PTR [eax],ah
 10017f7:	add    BYTE PTR [ebp+0x0],ch
 10017fa:	outs   dx,DWORD PTR ds:[esi]
 10017fb:	add    BYTE PTR [eax+eax*1+0x75],ah
 10017ff:	add    BYTE PTR [eax+eax*1+0x65],ch
 1001803:	add    BYTE PTR [eax],ah
 1001805:	add    BYTE PTR ds:0xa007000,ah
 100180b:	add    BYTE PTR [eax],al
 100180d:	add    BYTE PTR [eax],al
 100180f:	add    BYTE PTR [ebx+0x53],dl
 1001812:	dec    ecx
 1001813:	push   ebx
 1001814:	inc    edx
 1001815:	imul   ebp,DWORD PTR gs:[bp+0x44],0x706d75
 100181e:	add    BYTE PTR [eax],al
 1001820:	push   ebx
 1001821:	push   ebx
 1001822:	dec    ecx
 1001823:	push   ebx
 1001824:	inc    edi
 1001825:	gs je  0x100186d
 1001828:	js     0x100189e
 100182a:	jb     0x100188d
 100182c:	inc    esp
 100182d:	jne    0x100189c
 100182f:	jo     0x1001877
 1001831:	imul   ebp,DWORD PTR [ebp+eiz*2+0x48],0x6c646e61
 1001839:	add    BYTE PTR gs:[eax],al
	...
 1001844:	rol    BYTE PTR [eax],0x0
 1001847:	add    BYTE PTR [eax],al
 1001849:	add    BYTE PTR [eax],al
 100184b:	inc    esi
 100184c:	xor    al,0x11
 100184e:	sbb    ecx,esp
 1001850:	jmp    0x10017e1
 1001852:	pop    edi
 1001853:	dec    edx
 1001854:	cwde   
 1001855:	xor    DWORD PTR [eax+0x60],esi
 1001858:	xchg   ecx,eax
 1001859:	dec    eax
 100185a:	jns    0x1001863
 100185c:	add    BYTE PTR [eax],al
 100185e:	add    BYTE PTR [eax],al
 1001860:	push   ebx
 1001861:	add    BYTE PTR [edi+0x0],cl
 1001864:	inc    esi
 1001865:	add    BYTE PTR [eax+eax*1+0x57],dl
 1001869:	add    BYTE PTR [ecx+0x0],al
 100186c:	push   edx
 100186d:	add    BYTE PTR [ebp+0x0],al
 1001870:	pop    esp
 1001871:	add    BYTE PTR [ebp+0x0],cl
 1001874:	imul   eax,DWORD PTR [eax],0x720063
 100187a:	outs   dx,DWORD PTR ds:[esi]
 100187b:	add    BYTE PTR [ebx+0x0],dh
 100187e:	outs   dx,DWORD PTR ds:[esi]
 100187f:	add    BYTE PTR [esi+0x0],ah
 1001882:	je     0x1001884
 1001884:	pop    esp
 1001885:	add    BYTE PTR [ebp+0x0],cl
 1001888:	imul   eax,DWORD PTR [eax],0x720063
 100188e:	outs   dx,DWORD PTR ds:[esi]
 100188f:	add    BYTE PTR [ebx+0x0],dh
 1001892:	outs   dx,DWORD PTR ds:[esi]
 1001893:	add    BYTE PTR [esi+0x0],ah
 1001896:	je     0x1001898
 1001898:	and    BYTE PTR [eax],al
 100189a:	push   ebx
 100189b:	add    BYTE PTR [ecx+0x0],dl
 100189e:	dec    esp
 100189f:	add    BYTE PTR [eax],ah
 10018a1:	add    BYTE PTR [ebx+0x0],dl
 10018a4:	add    BYTE PTR gs:[edx+0x0],dh
 10018a8:	jbe    0x10018aa
 10018aa:	add    BYTE PTR gs:[edx+0x0],dh
 10018ae:	pop    esp
 10018af:	add    BYTE PTR [ecx],dh
 10018b1:	add    BYTE PTR [ecx],dh
 10018b3:	add    BYTE PTR [eax],dh
 10018b5:	add    BYTE PTR [eax],al
 10018b7:	add    BYTE PTR [esi],ch
 10018b9:	add    BYTE PTR [eax],al
 10018bb:	add    BYTE PTR [ebp+0x0],al
 10018be:	jb     0x10018c0
 10018c0:	jb     0x10018c2
 10018c2:	outs   dx,DWORD PTR ds:[esi]
 10018c3:	add    BYTE PTR [edx+0x0],dh
 10018c6:	push   edx
 10018c7:	add    BYTE PTR [ebp+0x0],ah
 10018ca:	jo     0x10018cc
 10018cc:	outs   dx,DWORD PTR ds:[esi]
 10018cd:	add    BYTE PTR [edx+0x0],dh
 10018d0:	je     0x10018d2
 10018d2:	imul   eax,DWORD PTR [eax],0x67006e
 10018d8:	inc    esp
 10018d9:	add    BYTE PTR [ecx+0x0],ch
 10018dc:	jb     0x10018de
 10018de:	add    BYTE PTR [eax],al
 10018e0:	dec    ecx
 10018e1:	add    BYTE PTR [ebx+0x0],dl
 10018e4:	inc    esp
 10018e5:	add    BYTE PTR [eax],al
 10018e7:	add    BYTE PTR [ecx+0x0],bh
 10018ea:	jns    0x10018ec
 10018ec:	jns    0x10018ee
 10018ee:	jns    0x10018f0
 10018f0:	sub    eax,0x4d004d00
 10018f5:	add    BYTE PTR ds:0x64006400,ch
 10018fb:	add    BYTE PTR [eax],al
 10018fd:	add    BYTE PTR [eax],al
 10018ff:	add    BYTE PTR [eax+0x0],cl
 1001902:	dec    eax
 1001903:	add    BYTE PTR [edx],bh
 1001905:	add    BYTE PTR [ebp+0x0],ch
 1001908:	ins    DWORD PTR es:[edi],dx
 1001909:	add    BYTE PTR [edx],bh
 100190b:	add    BYTE PTR [ebx+0x0],dh
 100190e:	jae    0x1001910
	...
 1001918:	and    eax,DWORD PTR [eax]
 100191a:	and    BYTE PTR [eax],al
 100191c:	push   ebx
 100191d:	add    BYTE PTR [ebx+0x0],dl
 1001920:	dec    ecx
 1001921:	add    BYTE PTR [ebx+0x0],dl
 1001924:	and    BYTE PTR [eax],al
 1001926:	push   esp
 1001927:	add    BYTE PTR [ebp+0x0],ah
 100192a:	js     0x100192c
 100192c:	je     0x100192e
 100192e:	jne    0x1001930
 1001930:	popa   
 1001931:	add    BYTE PTR [eax+eax*1+0x20],ch
 1001935:	add    BYTE PTR [eax+eax*1+0x75],al
 1001939:	add    BYTE PTR [ebp+0x0],ch
 100193c:	jo     0x100193e
 100193e:	and    BYTE PTR [eax],al
 1001940:	je     0x1001942
 1001942:	popa   
 1001943:	add    BYTE PTR [ebx+0x0],ch
 1001946:	add    BYTE PTR gs:[esi+0x0],ch
 100194a:	and    BYTE PTR [eax],al
 100194c:	popa   
 100194d:	add    BYTE PTR [eax+eax*1+0x20],dh
 1001951:	add    BYTE PTR ds:0x20007300,ah
 1001957:	add    BYTE PTR ds:0xd007300,ah
 100195d:	add    BYTE PTR [edx],cl
 100195f:	add    BYTE PTR [eax],al
 1001961:	add    BYTE PTR [eax],al
 1001963:	add    BYTE PTR [ebx],ah
 1001965:	add    BYTE PTR [eax],ah
 1001967:	add    BYTE PTR [eax+0x0],dl
 100196a:	dec    ecx
 100196b:	add    BYTE PTR [eax+eax*1+0x20],al
 100196f:	add    BYTE PTR ds:0xd006400,ah
 1001975:	add    BYTE PTR [edx],cl
 1001977:	add    BYTE PTR [eax],al
 1001979:	add    BYTE PTR [eax],al
 100197b:	add    BYTE PTR [ebx],ah
 100197d:	add    BYTE PTR [eax],ah
 100197f:	add    BYTE PTR [ecx+0x0],cl
 1001982:	ins    DWORD PTR es:[edi],dx
 1001983:	add    BYTE PTR [ecx+0x0],ah
 1001986:	add    BYTE PTR [di+0x0],ah
 100198a:	and    BYTE PTR [eax],al
 100198c:	dec    esi
 100198d:	add    BYTE PTR [ecx+0x0],ah
 1001990:	ins    DWORD PTR es:[edi],dx
 1001991:	add    BYTE PTR [ebp+0x0],ah
 1001994:	and    BYTE PTR [eax],al
 1001996:	pop    ebx
 1001997:	add    BYTE PTR ds:0x5d007300,ah
 100199d:	add    BYTE PTR ds:0xa00,cl
 10019a3:	add    BYTE PTR [eax],al
 10019a5:	add    BYTE PTR [eax],al
 10019a7:	add    BYTE PTR [ebx],ah
 10019a9:	add    BYTE PTR [eax],ah
 10019ab:	add    BYTE PTR [edi+0x0],cl
 10019ae:	push   ebx
 10019af:	add    BYTE PTR [eax],ah
 10019b1:	add    BYTE PTR [ebp+0x0],ch
 10019b4:	popa   
 10019b5:	add    BYTE PTR [edx+0x0],ch
 10019b8:	outs   dx,DWORD PTR ds:[esi]
 10019b9:	add    BYTE PTR [edx+0x0],dh
 10019bc:	cmp    eax,0x64002500
 10019c1:	add    BYTE PTR [eax],ah
 10019c3:	add    BYTE PTR [ebp+0x0],ch
 10019c6:	imul   eax,DWORD PTR [eax],0x6f006e
 10019cc:	jb     0x10019ce
 10019ce:	cmp    eax,0x64002500
 10019d3:	add    BYTE PTR [eax],ah
 10019d5:	add    BYTE PTR [edx+0x0],ah
 10019d8:	jne    0x10019da
 10019da:	imul   eax,DWORD PTR [eax],0x64006c
 10019e0:	cmp    eax,0x64002500
 10019e5:	add    BYTE PTR [eax],ah
 10019e7:	add    BYTE PTR ds:0xd007300,ah
 10019ed:	add    BYTE PTR [edx],cl
 10019ef:	add    BYTE PTR [eax],al
 10019f1:	add    BYTE PTR [eax],al
 10019f3:	add    BYTE PTR [ecx+0x0],ah
 10019f6:	ins    DWORD PTR es:[edi],dx
 10019f7:	add    BYTE PTR [eax+eax*1+0x36],ah
 10019fb:	add    BYTE PTR [eax+eax*1],dh
 10019fe:	add    BYTE PTR [eax],al
 1001a00:	imul   eax,DWORD PTR [eax],0x360061
 1001a06:	xor    al,0x0
 1001a08:	add    BYTE PTR [eax],al
 1001a0a:	add    BYTE PTR [eax],al
 1001a0c:	js     0x1001a0e
 1001a0e:	cmp    BYTE PTR [eax],al
 1001a10:	add    BYTE PTR ss:[eax],al
 1001a13:	add    BYTE PTR [ebp+0x0],dh
 1001a16:	outs   dx,BYTE PTR ds:[esi]
 1001a17:	add    BYTE PTR [ebx+0x0],ch
 1001a1a:	outs   dx,BYTE PTR ds:[esi]
 1001a1b:	add    BYTE PTR [edi+0x0],ch
 1001a1e:	ja     0x1001a20
 1001a20:	outs   dx,BYTE PTR ds:[esi]
 1001a21:	add    BYTE PTR [edi],bh
 1001a23:	add    BYTE PTR [eax],al
 1001a25:	add    BYTE PTR [eax],al
 1001a27:	add    BYTE PTR [ebp+0x0],dh
 1001a2a:	outs   dx,BYTE PTR ds:[esi]
 1001a2b:	add    BYTE PTR [eax+eax*1+0x65],ah
 1001a2f:	add    BYTE PTR [edx+0x0],dh
 1001a32:	and    BYTE PTR [eax],al
 1001a34:	push   edi
 1001a35:	add    BYTE PTR [edi+0x0],cl
 1001a38:	push   edi
 1001a39:	add    BYTE PTR [esi],dh
 1001a3b:	add    BYTE PTR [eax+eax*1],dh
 1001a3e:	add    BYTE PTR [eax],al
 1001a40:	jo     0x1001a42
 1001a42:	jb     0x1001a44
 1001a44:	outs   dx,DWORD PTR ds:[esi]
 1001a45:	add    BYTE PTR [ebx+0x0],ah
 1001a48:	add    BYTE PTR gs:[ebx+0x0],dh
 1001a4c:	jae    0x1001a4e
 1001a4e:	outs   dx,DWORD PTR ds:[esi]
 1001a4f:	add    BYTE PTR [edx+0x0],dh
 1001a52:	jae    0x1001a54
 1001a54:	add    BYTE PTR [eax],al
 1001a56:	add    BYTE PTR [eax],al
 1001a58:	jo     0x1001a5a
 1001a5a:	jb     0x1001a5c
 1001a5c:	outs   dx,DWORD PTR ds:[esi]
 1001a5d:	add    BYTE PTR [ebx+0x0],ah
 1001a60:	add    BYTE PTR gs:[ebx+0x0],dh
 1001a64:	jae    0x1001a66
 1001a66:	outs   dx,DWORD PTR ds:[esi]
 1001a67:	add    BYTE PTR [edx+0x0],dh
 1001a6a:	add    BYTE PTR [eax],al
 1001a6c:	and    eax,DWORD PTR [eax]
 1001a6e:	and    BYTE PTR [eax],al
 1001a70:	push   edx
 1001a71:	add    BYTE PTR [ebp+0x0],dh
 1001a74:	outs   dx,BYTE PTR ds:[esi]
 1001a75:	add    BYTE PTR [esi+0x0],ch
 1001a78:	imul   eax,DWORD PTR [eax],0x67006e
 1001a7e:	and    BYTE PTR [eax],al
 1001a80:	outs   dx,DWORD PTR ds:[esi]
 1001a81:	add    BYTE PTR [esi+0x0],ch
 1001a84:	and    BYTE PTR [eax],al
 1001a86:	and    eax,0x20006400
 1001a8b:	add    BYTE PTR ds:0x20007300,ah
 1001a91:	add    BYTE PTR ds:0x20007300,ah
 1001a97:	add    BYTE PTR ds:0xd007300,ah
 1001a9d:	add    BYTE PTR [edx],cl
	...
 1001aa7:	add    BYTE PTR [ebx],ah
 1001aa9:	add    BYTE PTR [eax],ah
 1001aab:	add    BYTE PTR [ebp+0x0],cl
 1001aae:	add    BYTE PTR gs:[ebp+0x0],ch
 1001ab2:	outs   dx,DWORD PTR ds:[esi]
 1001ab3:	add    BYTE PTR [edx+0x0],dh
 1001ab6:	jns    0x1001ab8
 1001ab8:	cmp    al,BYTE PTR [eax]
 1001aba:	and    BYTE PTR [eax],al
 1001abc:	and    eax,0x25006400
 1001ac1:	add    BYTE PTR ds:0x69002000,ah
 1001ac7:	add    BYTE PTR [esi+0x0],ch
 1001aca:	and    BYTE PTR [eax],al
 1001acc:	jne    0x1001ace
 1001ace:	jae    0x1001ad0
 1001ad0:	add    BYTE PTR gs:[esi],ch
 1001ad3:	add    BYTE PTR [eax],ah
 1001ad5:	add    BYTE PTR [eax+0x0],dl
 1001ad8:	push   0x73007900
 1001add:	add    BYTE PTR [ecx+0x0],ch
 1001ae0:	arpl   WORD PTR [eax],ax
 1001ae2:	popa   
 1001ae3:	add    BYTE PTR [eax+eax*1+0x3a],ch
 1001ae7:	add    BYTE PTR [eax],ah
 1001ae9:	add    BYTE PTR ds:0x64006c00,ah
 1001aef:	add    BYTE PTR [ebp+0x0],cl
 1001af2:	das    
 1001af3:	add    BYTE PTR ds:0x64006c00,ah
 1001af9:	add    BYTE PTR [ebp+0x0],cl
 1001afc:	and    BYTE PTR [eax],al
 1001afe:	and    BYTE PTR [eax],al
 1001b00:	push   eax
 1001b01:	add    BYTE PTR [ecx+0x0],ah
 1001b04:	add    BYTE PTR [bx+di+0x0],ch
 1001b08:	outs   dx,BYTE PTR ds:[esi]
 1001b09:	add    BYTE PTR [edi+0x0],ah
 1001b0c:	cmp    al,BYTE PTR [eax]
 1001b0e:	and    BYTE PTR [eax],al
 1001b10:	and    eax,0x4d006400
 1001b15:	add    BYTE PTR [edi],ch
 1001b17:	add    BYTE PTR ds:0x4d006400,ah
 1001b1d:	add    BYTE PTR [eax],ah
 1001b1f:	add    BYTE PTR [eax],ch
 1001b21:	add    BYTE PTR [ecx+0x0],ah
 1001b24:	jbe    0x1001b26
 1001b26:	popa   
 1001b27:	add    BYTE PTR [ecx+0x0],ch
 1001b2a:	ins    BYTE PTR es:[edi],dx
 1001b2b:	add    BYTE PTR [edi],ch
 1001b2d:	add    BYTE PTR [eax+eax*1+0x6f],dh
 1001b31:	add    BYTE PTR [eax+eax*1+0x61],dh
 1001b35:	add    BYTE PTR [eax+eax*1+0x29],ch
 1001b39:	add    BYTE PTR ds:0xa00,cl
 1001b3f:	add    BYTE PTR [eax+eax*1+0x0],bl
 1001b43:	add    BYTE PTR [eax],al
 1001b45:	add    BYTE PTR [eax],al
 1001b47:	add    BYTE PTR [ebx],ah
 1001b49:	add    BYTE PTR [eax],ah
 1001b4b:	add    BYTE PTR [eax+eax*1+0x6f],cl
 1001b4f:	add    BYTE PTR [ecx+0x0],ah
 1001b52:	add    BYTE PTR fs:[ebp+0x0],ah
 1001b56:	add    BYTE PTR fs:[eax],ah
 1001b59:	add    BYTE PTR [ebp+0x0],cl
 1001b5c:	outs   dx,DWORD PTR ds:[esi]
 1001b5d:	add    BYTE PTR [eax+eax*1+0x75],ah
 1001b61:	add    BYTE PTR [eax+eax*1+0x65],ch
 1001b65:	add    BYTE PTR [edx],bh
 1001b67:	add    BYTE PTR [eax],ah
 1001b69:	add    BYTE PTR ds:0x20007300,ah
 1001b6f:	add    BYTE PTR [eax],ch
 1001b71:	add    BYTE PTR ds:0x64006c00,ah
 1001b77:	add    BYTE PTR [esi],ch
 1001b79:	add    BYTE PTR ds:0x64006c00,ah
 1001b7f:	add    BYTE PTR [esi],ch
 1001b81:	add    BYTE PTR ds:0x64006c00,ah
 1001b87:	add    BYTE PTR [esi],ch
 1001b89:	add    BYTE PTR ds:0x64006c00,ah
 1001b8f:	add    BYTE PTR [ecx],ch
 1001b91:	add    BYTE PTR ds:0xa00,cl
 1001b97:	add    BYTE PTR [ebx],ah
 1001b99:	add    BYTE PTR [eax],ah
 1001b9b:	add    BYTE PTR [eax+eax*1+0x6f],cl
 1001b9f:	add    BYTE PTR [ecx+0x0],ah
 1001ba2:	add    BYTE PTR fs:[ebp+0x0],ah
 1001ba6:	add    BYTE PTR fs:[eax],ah
 1001ba9:	add    BYTE PTR [ebp+0x0],cl
 1001bac:	outs   dx,DWORD PTR ds:[esi]
 1001bad:	add    BYTE PTR [eax+eax*1+0x75],ah
 1001bb1:	add    BYTE PTR [eax+eax*1+0x65],ch
 1001bb5:	add    BYTE PTR [edx],bh
 1001bb7:	add    BYTE PTR [eax],ah
 1001bb9:	add    BYTE PTR ds:0x20007300,ah
 1001bbf:	add    BYTE PTR [eax],ch
 1001bc1:	add    BYTE PTR [ebp+0x0],dh
 1001bc4:	outs   dx,BYTE PTR ds:[esi]
 1001bc5:	add    BYTE PTR [ebx+0x0],ch
 1001bc8:	outs   dx,BYTE PTR ds:[esi]
 1001bc9:	add    BYTE PTR [edi+0x0],ch
 1001bcc:	ja     0x1001bce
 1001bce:	outs   dx,BYTE PTR ds:[esi]
 1001bcf:	add    BYTE PTR [eax],ah
 1001bd1:	add    BYTE PTR [esi+0x0],dh
 1001bd4:	add    BYTE PTR gs:[edx+0x0],dh
 1001bd8:	jae    0x1001bda
 1001bda:	imul   eax,DWORD PTR [eax],0x6e006f
 1001be0:	sub    DWORD PTR [eax],eax
 1001be2:	or     eax,0xa00
 1001be7:	add    BYTE PTR [ebx+0x65],ch
 1001bea:	jb     0x1001c5a
 1001bec:	gs ins BYTE PTR es:[edi],dx
 1001bee:	xor    esi,DWORD PTR [edx]
 1001bf0:	cs fs ins BYTE PTR es:[edi],dx
 1001bf3:	ins    BYTE PTR es:[edi],dx
 1001bf4:	add    BYTE PTR [eax],al
 1001bf6:	add    BYTE PTR [eax],al
 1001bf8:	inc    edi
 1001bf9:	gs je  0x1001c50
 1001bfc:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
 1001c03:	je     0x1001c3b
 1001c05:	xor    al,0x0
	...
 1001c0f:	add    BYTE PTR [ebx+0x0],dl
 1001c12:	dec    edi
 1001c13:	add    BYTE PTR [esi+0x0],al
 1001c16:	push   esp
 1001c17:	add    BYTE PTR [edi+0x0],dl
 1001c1a:	inc    ecx
 1001c1b:	add    BYTE PTR [edx+0x0],dl
 1001c1e:	inc    ebp
 1001c1f:	add    BYTE PTR [eax+eax*1+0x4d],bl
 1001c23:	add    BYTE PTR [ecx+0x0],ch
 1001c26:	arpl   WORD PTR [eax],ax
 1001c28:	jb     0x1001c2a
 1001c2a:	outs   dx,DWORD PTR ds:[esi]
 1001c2b:	add    BYTE PTR [ebx+0x0],dh
 1001c2e:	outs   dx,DWORD PTR ds:[esi]
 1001c2f:	add    BYTE PTR [esi+0x0],ah
 1001c32:	je     0x1001c34
 1001c34:	pop    esp
 1001c35:	add    BYTE PTR [ebp+0x0],cl
 1001c38:	imul   eax,DWORD PTR [eax],0x720063
 1001c3e:	outs   dx,DWORD PTR ds:[esi]
 1001c3f:	add    BYTE PTR [ebx+0x0],dh
 1001c42:	outs   dx,DWORD PTR ds:[esi]
 1001c43:	add    BYTE PTR [esi+0x0],ah
 1001c46:	je     0x1001c48
 1001c48:	and    BYTE PTR [eax],al
 1001c4a:	push   ebx
 1001c4b:	add    BYTE PTR [ecx+0x0],dl
 1001c4e:	dec    esp
 1001c4f:	add    BYTE PTR [eax],ah
 1001c51:	add    BYTE PTR [ebx+0x0],dl
 1001c54:	add    BYTE PTR gs:[edx+0x0],dh
 1001c58:	jbe    0x1001c5a
 1001c5a:	add    BYTE PTR gs:[edx+0x0],dh
 1001c5e:	pop    esp
 1001c5f:	add    BYTE PTR [ecx],dh
 1001c61:	add    BYTE PTR [ecx],dh
 1001c63:	add    BYTE PTR [eax],dh
 1001c65:	add    BYTE PTR [eax],al
 1001c67:	add    BYTE PTR [ebx+0x0],dl
 1001c6a:	push   ecx
 1001c6b:	add    BYTE PTR [eax+eax*1+0x44],cl
 1001c6f:	add    BYTE PTR [ebp+0x0],dl
 1001c72:	dec    ebp
 1001c73:	add    BYTE PTR [eax+0x0],dl
 1001c76:	inc    ebp
 1001c77:	add    BYTE PTR [edx+0x0],dl
 1001c7a:	add    BYTE PTR cs:[ebp+0x0],al
 1001c7e:	pop    eax
 1001c7f:	add    BYTE PTR [ebp+0x0],al
 1001c82:	add    BYTE PTR [eax],al
 1001c84:	ja     0x1001c72
 1001c86:	enter  0x7bf4,0x7d
 1001c8a:	mov    ecx,0x42cd8c4d
 1001c8f:	inc    eax
 1001c90:	jmp    0x6c00:0x25f95aa6
 1001c97:	add    BYTE PTR [ebx+0x0],dh
 1001c9a:	pop    esp
 1001c9b:	add    BYTE PTR ds:0x73006c00,ah
 1001ca1:	add    BYTE PTR [eax],al
 1001ca3:	add    BYTE PTR [eax],dh
 1001ca5:	push   ecx
 1001ca6:	add    BYTE PTR [ecx],al
 1001ca8:	nop
 1001ca9:	push   ecx
 1001caa:	add    BYTE PTR [ecx],al
 1001cac:	mov    al,ds:0xf0010051
 1001cb1:	pop    ebp
 1001cb2:	add    BYTE PTR [ecx],al
 1001cb4:	mov    al,0x4f
 1001cb6:	add    BYTE PTR [ecx],al
 1001cb8:	pusha  
 1001cb9:	pop    edx
 1001cba:	add    BYTE PTR [ecx],al
 1001cbc:	inc    eax
 1001cbd:	pusha  
 1001cbe:	add    BYTE PTR [ecx],al
 1001cc0:	push   eax
 1001cc1:	push   esp
 1001cc2:	add    BYTE PTR [ecx],al
 1001cc4:	mov    al,0x51
 1001cc6:	add    BYTE PTR [ecx],al
 1001cc8:	loopne 0x1001d1b
 1001cca:	add    BYTE PTR [ecx],al
 1001ccc:	mov    al,0x59
 1001cce:	add    BYTE PTR [ecx],al
 1001cd0:	push   ebx
 1001cd1:	add    BYTE PTR [eax+0x0],ch
 1001cd4:	popa   
 1001cd5:	add    BYTE PTR [edx+0x0],dh
 1001cd8:	add    BYTE PTR gs:[eax+eax*1+0x43],ah
 1001cdd:	add    BYTE PTR [edi+0x0],ch
 1001ce0:	add    BYTE PTR fs:[ebp+0x0],ah
	...
 1001cec:	xchg   esi,eax
 1001ced:	xor    BYTE PTR [edi],al
 1001cef:	ja     0x1001d1d
 1001cf1:	popa   
 1001cf2:	push   cs
 1001cf3:	out    dx,al
 1001cf4:	mov    edx,0x19990951
 1001cf9:	les    ebp,FWORD PTR [ebp+0x7]
 1001cfc:	(bad)  
 1001cfd:	hlt    
 1001cfe:	push   0x70
 1001d00:	xor    eax,0xa3e963a5
 1001d05:	xchg   ebp,eax
 1001d06:	fs sahf 
 1001d08:	xor    cl,BYTE PTR [eax-0x475bf125]
 1001d0e:	fdivr  QWORD PTR [ecx+0x1e]
 1001d11:	jmp    0xda88fdeb
 1001d16:	rcl    BYTE PTR [edi+0x9b64c2b],cl
 1001d1c:	mov    ebp,0x77eb17c
 1001d21:	sub    eax,0x1d91e7b8
 1001d26:	mov    edi,0xb7106490
 1001d2b:	sbb    eax,0x6ab020f2
 1001d30:	dec    eax
 1001d31:	jno    0x1001cec
 1001d33:	repz fiadd WORD PTR [ecx-0x42]
 1001d37:	test   BYTE PTR [ebp-0x2c],bh
 1001d3a:	ficomp DWORD PTR [edx]
 1001d3c:	jmp    0x1001d22
 1001d3e:	(bad)  [ebp+0x51]
 1001d41:	mov    ch,0xd4
 1001d43:	hlt    
 1001d44:	mov    DWORD PTR [ebp-0x67a97c2d],0xa8c0136c
 1001d4e:	imul   esp,DWORD PTR [edx+edi*2-0x7],0x62
 1001d53:	std    
 1001d54:	in     al,dx
 1001d55:	leave  
 1001d56:	mov    cl,BYTE PTR gs:[edi+0x5c]
 1001d5a:	add    DWORD PTR [ecx+ebx*8],edx
 1001d5d:	ins    BYTE PTR es:[edi],dx
 1001d5e:	push   es
 1001d5f:	arpl   WORD PTR [ebx+0x3d],sp
 1001d62:	psubd  mm6,mm5
 1001d65:	or     eax,0x20c88d08
 1001d6a:	outs   dx,BYTE PTR ds:[esi]
 1001d6b:	cmp    ebx,DWORD PTR [esi+0x10]
 1001d6e:	imul   ecx,DWORD PTR [esp+eiz*8+0x41],0x7172d560
 1001d76:	addr16 mov ds:0xe4d1,al
 1001d7a:	add    edi,DWORD PTR [edi+eax*2]
 1001d7d:	aam    0x4
 1001d7f:	dec    ebx
 1001d80:	std    
 1001d81:	test   DWORD PTR ds:0xab56bd2,ecx
 1001d87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1001d88:	cli    
 1001d89:	test   al,0xb5
 1001d8b:	xor    eax,0x42b2986c
 1001d90:	(bad)  
 1001d91:	leave  
 1001d92:	mov    ebx,0xbcf940db
 1001d97:	lods   al,BYTE PTR ds:[esi]
 1001d98:	jecxz  0x1001e06
 1001d9a:	fdiv   DWORD PTR [edx]
 1001d9c:	jne    0x1001dfa
 1001d9e:	fild   WORD PTR [ebp-0x31]
 1001da1:	or     eax,0x3d59dcd6
 1001da6:	shr    DWORD PTR [ebx+0x26d930ac],1
 1001dac:	cmp    al,BYTE PTR [eax]
 1001dae:	ficom  WORD PTR [ecx-0x80]
 1001db1:	push   ecx
 1001db2:	xlat   BYTE PTR ds:[ebx]
 1001db3:	enter  0x6116,0xd0
 1001db7:	mov    edi,0x21b4f4b5
 1001dbc:	and    eax,esp
 1001dbe:	mov    bl,0x56
 1001dc0:	cdq    
 1001dc1:	xchg   ebp,eax
 1001dc2:	mov    edx,0xbda50fcf
 1001dc7:	mov    eax,0x2802b89e
 1001dcc:	or     BYTE PTR [eax-0x264da0fb],cl
 1001dd2:	or     al,0xc6
 1001dd4:	and    al,0xe9
 1001dd6:	or     esi,DWORD PTR [ecx+0x2f6f7c87]
 1001ddc:	adc    DWORD PTR [eax+ebp*2+0x58],ecx
 1001de0:	stos   DWORD PTR es:[edi],eax
 1001de1:	sbb    eax,0x2d3dc161
 1001de6:	data16 mov dh,0x90
 1001de9:	inc    ecx
 1001dea:	fdiv   QWORD PTR [esi+0x6]
 1001ded:	jno    0x1001dca
 1001def:	add    DWORD PTR [eax+eiz*1+0x102a98d2],edi
 1001df6:	aad    0xef
 1001df8:	mov    DWORD PTR [ebp-0x4ae08e4f],eax
 1001dfe:	mov    dh,0x6
 1001e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1001e01:	in     al,0xbf
 1001e03:	lahf   
 1001e04:	xor    edx,esp
 1001e06:	mov    eax,0x7c9a2e8
 1001e0b:	js     0x1001e41
 1001e0d:	stc    
 1001e0e:	add    BYTE PTR [edi],cl
 1001e10:	mov    gs,WORD PTR [eax-0x67e769f7]
 1001e16:	push   cs
 1001e17:	loope  0x1001dd4
 1001e19:	or     eax,0x3d2d7f6a
 1001e1e:	ins    DWORD PTR es:[edi],dx
 1001e1f:	or     BYTE PTR [edi+0x191646c],dl
 1001e25:	pop    esp
 1001e26:	arpl   si,sp
 1001e28:	hlt    
 1001e29:	push   ecx
 1001e2a:	imul   ebp,DWORD PTR [ebx+0x62],0x61
 1001e2e:	ins    BYTE PTR es:[edi],dx
 1001e2f:	sbb    al,0xd8
 1001e31:	xor    BYTE PTR [ebp-0x7b],ah
 1001e34:	dec    esi
 1001e35:	add    BYTE PTR [edx-0xe],ah
 1001e38:	in     eax,dx
 1001e39:	xchg   ebp,eax
 1001e3a:	push   es
 1001e3b:	ins    BYTE PTR es:[edi],dx
 1001e3c:	jnp    0x1001de3
 1001e3e:	add    DWORD PTR [ebx],ebx
 1001e40:	shl    esp,0x8
 1001e43:	adc    BYTE PTR [edi-0x3c],0xf
 1001e47:	cmc    
 1001e48:	(bad)  
 1001e49:	fnstenv [eax-0x4816af9b]
 1001e4f:	adc    ch,dl
 1001e51:	mov    eax,0x887c8bbe
 1001e56:	mov    ecx,0xdd1ddffc
 1001e5b:	bound  ecx,QWORD PTR [ecx+0x2d]
 1001e5e:	ficom  DWORD PTR ds:0x8cd37cf3
 1001e64:	gs dec esp
 1001e66:	aam    0xfb
 1001e68:	pop    eax
 1001e69:	popa   
 1001e6a:	mov    dl,0x4d
 1001e6c:	into   
 1001e6d:	push   ecx
 1001e6e:	mov    ch,0x3a
 1001e70:	je     0x1001e72
 1001e72:	mov    esp,0xbb30e2a3
 1001e77:	aam    0x41
 1001e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1001e7a:	fisttp WORD PTR [edx-0x29]
 1001e7d:	xchg   ebp,eax
 1001e7e:	fdivr  DWORD PTR ds:0xa4d1c46d
 1001e84:	sti    
 1001e85:	hlt    
 1001e86:	(bad)  
 1001e87:	shr    DWORD PTR [edx-0x17],cl
 1001e8a:	imul   eax,DWORD PTR [ebx-0x4],0x46346ed9
 1001e91:	mov    BYTE PTR [edi-0x53],ah
 1001e94:	sar    BYTE PTR [eax+0x2d73da60],1
 1001e9a:	add    al,0x44
 1001e9c:	in     eax,0x1d
 1001e9e:	add    esi,DWORD PTR [ebx]
 1001ea0:	pop    edi
 1001ea1:	dec    esp
 1001ea2:	or     ch,BYTE PTR [edx-0x22f28337]
 1001ea8:	cmp    al,0x71
 1001eaa:	add    eax,0x241aa50
 1001eaf:	daa    
 1001eb0:	adc    BYTE PTR [eax],dl
 1001eb2:	or     edi,DWORD PTR [esi-0x36f3df7a]
 1001eb8:	and    eax,0xb35768b5
 1001ebd:	test   DWORD PTR [edi+0x20],ebp
 1001ec0:	or     esp,edx
 1001ec2:	mov    cx,0xe49f
 1001ec6:	popa   
 1001ec7:	into   
 1001ec8:	push   cs
 1001ec9:	stc    
 1001eca:	ficomp WORD PTR [esi-0x68]
 1001ecd:	leave  
 1001ece:	fldcw  WORD PTR [ecx]
 1001ed0:	and    bl,BYTE PTR [eax-0x574b4f30]
 1001ed6:	xlat   BYTE PTR ds:[ebx]
 1001ed7:	(bad)  
 1001ed8:	pop    ss
 1001ed9:	cmp    eax,0xd8159b3
 1001ede:	mov    ah,0x2e
 1001ee0:	cmp    ebx,DWORD PTR [ebp+edi*4-0x49]
 1001ee4:	lods   eax,DWORD PTR ds:[esi]
 1001ee5:	ins    BYTE PTR es:[edi],dx
 1001ee6:	mov    edx,0xb88320c0
 1001eeb:	in     eax,dx
 1001eec:	mov    dh,0xb3
 1001eee:	mov    edi,0xb6e20c9a
 1001ef3:	add    ebx,DWORD PTR [edx+0x3974b1d2]
 1001ef9:	inc    edi
 1001efa:	aad    0xea
 1001efc:	scas   eax,DWORD PTR es:[edi]
 1001efd:	ja     0x1001ed1
 1001eff:	popf   
 1001f00:	adc    eax,0x8304db26
 1001f05:	push   ss
 1001f06:	fdiv   QWORD PTR [ebx+0x12]
 1001f09:	or     esp,DWORD PTR [ebx-0x1d]
 1001f0c:	test   BYTE PTR [ebx],bh
 1001f0e:	fs xchg esp,eax
 1001f10:	ds push 0x6d
 1001f13:	or     eax,0x7a6a5aa8
 1001f18:	or     ecx,edi
 1001f1a:	push   cs
 1001f1b:	in     al,0x9d
 1001f1d:	dec    DWORD PTR [ecx]
 1001f1f:	xchg   ebx,eax
 1001f20:	daa    
 1001f21:	scas   al,BYTE PTR es:[edi]
 1001f22:	add    BYTE PTR [edx],cl
 1001f24:	mov    cl,0x9e
 1001f26:	pop    es
 1001f27:	jge    0x1001f6d
 1001f29:	xchg   ebx,eax
 1001f2a:	(bad)  
 1001f2c:	shl    BYTE PTR [ebx-0xd9778f8],cl
 1001f32:	add    DWORD PTR [esi],ebx
 1001f34:	inc    dl
 1001f36:	push   es
 1001f37:	imul   ebx,DWORD PTR [ebp+0x57],0x67cbf762
 1001f3e:	xor    BYTE PTR gs:[ecx+0x36],0x6c
 1001f43:	sbb    edi,esp
 1001f45:	push   es
 1001f46:	imul   ebp,DWORD PTR [esi+0x76],0x1b
 1001f4a:	aam    0xfe
 1001f4c:	loopne 0x1001f79
 1001f4e:	ror    DWORD PTR [ecx+0x10da7a5a],cl
 1001f54:	int3   
 1001f55:	dec    edx
 1001f56:	frstor [edi+0x6f]
 1001f59:	fistp  QWORD PTR [ecx-0x41100607]
 1001f5f:	mov    es,WORD PTR [ebx-0x42]
 1001f62:	mov    bh,0x17
 1001f64:	aad    0x8e
 1001f66:	mov    al,0x60
 1001f68:	call   0x7fd6f610
 1001f6d:	xchg   ebx,eax
 1001f6e:	shl    DWORD PTR [ecx+0x38d8c2c4],1
 1001f74:	push   edx
 1001f75:	repnz fisttp WORD PTR [edi-0xf]
 1001f79:	addr16 mov ebx,0xbc5767d1
 1001f7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1001f80:	fld    QWORD PTR [esi]
 1001f82:	mov    ch,0x3f
 1001f84:	dec    ebx
 1001f85:	ss mov dl,0x48
 1001f88:	fisubr DWORD PTR [ebx]
 1001f8a:	or     eax,0xa1b4cd8
 1001f8f:	scas   eax,DWORD PTR es:[edi]
 1001f90:	test   BYTE PTR [edx+0x3],0x36
 1001f94:	pusha  
 1001f95:	jp     0x1001f9b
 1001f97:	inc    ecx
 1001f98:	ret    
 1001f99:	out    dx,eax
 1001f9a:	pusha  
 1001f9b:	fist   WORD PTR [ebp-0x21]
 1001f9e:	addr16 test al,0xef
 1001fa1:	mov    gs,WORD PTR [esi+0x31]
 1001fa4:	jns    0x1001f64
 1001fa6:	imul   eax,DWORD PTR [esi-0x74],0x1acb61b3
 1001fad:	and    DWORD PTR [esi-0x44],0xffffffa0
 1001fb1:	shr    BYTE PTR [edi+0x25],cl
 1001fb4:	ss loop 0x100201f
 1001fb7:	push   edx
 1001fb8:	xchg   ebp,eax
 1001fb9:	ja     0x1001fc7
 1001fbb:	int3   
 1001fbc:	add    eax,DWORD PTR [edi+0xb]
 1001fbf:	mov    ebx,0x220216b9
 1001fc4:	das    
 1001fc5:	es add eax,0xba3bbe55
 1001fcb:	lds    ebp,FWORD PTR [eax]
 1001fcd:	or     edi,DWORD PTR [ebp-0x4ba56d4e]
 1001fd3:	sub    eax,DWORD PTR [edx+ebp*2]
 1001fd6:	mov    bl,0x5c
 1001fd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1001fd9:	call   edi
 1001fdb:	ret    0xcf31
 1001fde:	shl    BYTE PTR [ebp+0x2cd99e8b],1
 1001fe4:	sbb    eax,0xb05bdeae
 1001fe9:	ret    0x9b64
 1001fec:	es repnz arpl sp,bp
 1001ff0:	pushf  
 1001ff1:	mov    ds:0x930a756a,eax
 1001ff6:	ins    DWORD PTR es:[edi],dx
 1001ff7:	add    ch,BYTE PTR [ecx+0x3f9c0906]
 1001ffd:	ss push cs
 1001fff:	jmp    0x1001f86
 1002001:	addr16 pop es
 1002003:	jb     0x1002018
 1002005:	push   edi
 1002006:	add    BYTE PTR ds:0x95bf4a82,al
 100200c:	adc    al,0x7a
 100200e:	mov    eax,0xb12baee2
 1002013:	jnp    0x100204d
 1002015:	sbb    esi,DWORD PTR [esi-0x2d7164f4]
 100201b:	xchg   edx,eax
 100201c:	or     eax,0xb7e5d5be
 1002021:	out    dx,eax
 1002022:	fdivr  QWORD PTR [ecx+eiz*1-0x21]
 1002026:	fisttp DWORD PTR [ebx]
 1002028:	aam    0xd2
 100202a:	rol    DWORD PTR [esi-0xe2b1dbe],cl
 1002030:	clc    
 1002031:	mov    bl,0xdd
 1002033:	push   0x1fda836e
 1002038:	int    0x16
 100203a:	mov    esi,0xb9265b81
 100203f:	mul    cl
 1002041:	ja     0x1001ff3
 1002043:	outs   dx,DWORD PTR ds:[esi]
 1002044:	ja     0x100208d
 1002046:	mov    bh,0x18
 1002048:	out    0x5a,al
 100204a:	or     BYTE PTR [eax-0xf09590],cl
 1002050:	retf   0x63b
 1002053:	pop    sp
 1002055:	or     eax,DWORD PTR [ecx]
 1002057:	adc    edi,edi
 1002059:	sahf   
 100205a:	(bad)
 100205f:	clc    
 1002060:	sar    edi,cl
 1002062:	imul   esp,DWORD PTR [ecx+0x45],0xffffffcf
 1002066:	ins    BYTE PTR es:[edi],dx
 1002067:	push   ss
 1002068:	js     0x100204c
 100206a:	or     ah,BYTE PTR [eax-0x28f22d12]
 1002070:	push   esp
 1002071:	add    DWORD PTR [esi+ecx*2],0xffffffc2
 1002075:	mov    bl,0x3
 1002077:	cmp    DWORD PTR [ecx+0x26],esp
 100207a:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
 100207c:	not    DWORD PTR [esi]
 100207e:	pusha  
 100207f:	ror    BYTE PTR [ebp+0x47],1
 1002082:	imul   ecx,DWORD PTR [ecx-0x25],0x4a3e6e77
 1002089:	push   0xffffffd1
 100208b:	scas   al,BYTE PTR es:[edi]
 100208c:	fcomp  QWORD PTR [edx-0x2a]
 100208f:	fldenv [esi+0xb]
 1002092:	fild   WORD PTR [eax-0x10]
 1002095:	cmp    ebx,eax
 1002097:	aaa    
 1002098:	push   ebx
 1002099:	scas   al,BYTE PTR es:[edi]
 100209a:	mov    esp,0xbb9ec5a9
 100209f:	fidivr WORD PTR [edi-0x31]
 10020a2:	mov    dl,0x47
 10020a4:	jmp    0x1d30d6a8
 10020a9:	repnz mov ebp,0xbac28abd
 10020af:	retf   0x9330
 10020b2:	mov    bl,0x53
 10020b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10020b5:	mov    ds:0x360524b4,eax
 10020ba:	sar    BYTE PTR [edx-0x3228f96d],1
 10020c0:	sub    DWORD PTR [edi-0x22],edx
 10020c3:	push   esp
 10020c4:	mov    edi,0x2e23d967
 10020c9:	jp     0x1002131
 10020cb:	mov    bl,0xb8
 10020cd:	dec    edx
 10020ce:	popa   
 10020cf:	les    eax,FWORD PTR [edx]
 10020d1:	sbb    ebp,DWORD PTR [eax+0x5d]
 10020d4:	xchg   esp,eax
 10020d5:	sub    ebp,DWORD PTR [edi+0x2a]
 10020d8:	aaa    
 10020d9:	mov    esi,0x8ea1b40b
 10020de:	or     al,0xc3
 10020e0:	sbb    ebx,edi
 10020e2:	add    eax,0x2ef8d5a
 10020e7:	sub    eax,0x72657551
 10020ec:	jns    0x1002145
 10020ee:	outs   dx,DWORD PTR ds:[esi]
 10020ef:	jb     0x100215c
 10020f1:	imul   ebp,DWORD PTR [esi+0x67],0x45746553
 10020f8:	js     0x10020fa
 10020fa:	add    BYTE PTR [eax],al
 10020fc:	jo     0x10020fe
 10020fe:	jae    0x1002100
 1002100:	popa   
 1002101:	add    BYTE PTR [eax+0x0],dh
 1002104:	imul   eax,DWORD PTR [eax],0x64002e
 100210a:	ins    BYTE PTR es:[edi],dx
 100210b:	add    BYTE PTR [eax+eax*1+0x0],ch
 100210f:	add    BYTE PTR [eax],al
 1002111:	add    BYTE PTR [eax],al
 1002113:	add    BYTE PTR [ebx+0x0],dl
 1002116:	push   ecx
 1002117:	add    BYTE PTR [eax+eax*1+0x44],cl
 100211b:	add    BYTE PTR [ebp+0x0],dl
 100211e:	dec    ebp
 100211f:	add    BYTE PTR [eax+0x0],dl
 1002122:	inc    ebp
 1002123:	add    BYTE PTR [edx+0x0],dl
 1002126:	add    BYTE PTR cs:[ebp+0x0],al
 100212a:	pop    eax
 100212b:	add    BYTE PTR [ebp+0x0],al
 100212e:	add    BYTE PTR [eax],al
 1002130:	les    ecx,FWORD PTR [esi]
 1002132:	ret    
 1002133:	sbb    edx,DWORD PTR [ecx-0x61b65b7b]
 1002139:	mov    ds:0x7640b44f,al
 100213e:	mov    ch,0xe6
 1002140:	add    BYTE PTR [eax],dl
 1002142:	add    BYTE PTR [eax],ah
 1002144:	lock and al,BYTE PTR [eax]
 1002147:	add    DWORD PTR [edx],eax
 1002149:	add    BYTE PTR [eax],al
 100214b:	and    BYTE PTR [eax],bh
 100214d:	and    eax,DWORD PTR [eax]
 100214f:	add    DWORD PTR [eax+eax*1],eax
 1002152:	add    BYTE PTR [eax],ah
 1002154:	mov    BYTE PTR [ebx],ah
 1002156:	add    BYTE PTR [ecx],al
 1002158:	or     BYTE PTR [eax],al
 100215a:	add    BYTE PTR [eax],ah
 100215c:	loopne 0x1002181
 100215e:	add    BYTE PTR [ecx],al
 1002160:	adc    BYTE PTR [eax],al
 1002162:	add    BYTE PTR [eax],ah
 1002164:	xor    BYTE PTR [eax+eax*1],ah
 1002167:	add    DWORD PTR [eax],esp
 1002169:	add    BYTE PTR [eax],al
 100216b:	and    BYTE PTR [eax+0x40010024],cl
 1002171:	add    BYTE PTR [eax],al
 1002173:	and    al,bl
 1002175:	and    al,0x0
 1002177:	add    DWORD PTR [eax+0x30200000],eax
 100217d:	and    eax,0x1000100
 1002182:	add    BYTE PTR [eax],ah
 1002184:	nop
 1002185:	and    eax,0x2000100
 100218a:	add    BYTE PTR [eax],ah
 100218c:	loopne 0x10021b3
 100218e:	add    BYTE PTR [ecx],al
 1002190:	add    BYTE PTR [eax+eax*1],al
 1002193:	and    BYTE PTR [eax],dh
 1002195:	add    BYTE PTR es:[ecx],al
 1002198:	add    BYTE PTR [eax],cl
 100219a:	add    BYTE PTR [eax],ah
 100219c:	mov    BYTE PTR [esi],ah
 100219e:	add    BYTE PTR [ecx],al
 10021a0:	add    BYTE PTR [eax],ah
 10021a2:	add    BYTE PTR [eax],ah
 10021a4:	call   0x10121cf
 10021a9:	add    BYTE PTR [eax],0x20
 10021ac:	js     0x10021d5
 10021ae:	add    BYTE PTR [ecx],al
 10021b0:	inc    ebp
 10021b1:	add    BYTE PTR [edx+0x0],dh
 10021b4:	jb     0x10021b6
 10021b6:	outs   dx,DWORD PTR ds:[esi]
 10021b7:	add    BYTE PTR [edx+0x0],dh
 10021ba:	and    BYTE PTR [eax],al
 10021bc:	sub    eax,0x44002000
 10021c1:	add    BYTE PTR [ebp+0x0],dh
 10021c4:	ins    DWORD PTR es:[edi],dx
 10021c5:	add    BYTE PTR [eax+0x0],dh
 10021c8:	imul   eax,DWORD PTR [eax],0x67006e
 10021ce:	and    BYTE PTR [eax],al
 10021d0:	jo     0x10021d2
 10021d2:	jb     0x10021d4
 10021d4:	outs   dx,DWORD PTR ds:[esi]
 10021d5:	add    BYTE PTR [ebx+0x0],ah
 10021d8:	add    BYTE PTR gs:[ebx+0x0],dh
 10021dc:	jae    0x10021de
 10021de:	and    BYTE PTR [eax],al
 10021e0:	ja     0x10021e2
 10021e2:	popa   
 10021e3:	add    BYTE PTR [ebx+0x0],dh
 10021e6:	and    BYTE PTR [eax],al
 10021e8:	outs   dx,BYTE PTR ds:[esi]
 10021e9:	add    BYTE PTR [edi+0x0],ch
 10021ec:	je     0x10021ee
 10021ee:	and    BYTE PTR [eax],al
 10021f0:	jae    0x10021f2
 10021f2:	je     0x10021f4
 10021f4:	popa   
 10021f5:	add    BYTE PTR [edx+0x0],dh
 10021f8:	je     0x10021fa
 10021fa:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
 10021ff:	add    BYTE PTR [edi+0x0],ch
 1002202:	jb     0x1002204
 1002204:	and    BYTE PTR [eax],al
 1002206:	je     0x1002208
 1002208:	add    BYTE PTR gs:[edx+0x0],dh
 100220c:	ins    DWORD PTR es:[edi],dx
 100220d:	add    BYTE PTR [ecx+0x0],ch
 1002210:	outs   dx,BYTE PTR ds:[esi]
 1002211:	add    BYTE PTR [ecx+0x0],ah
 1002214:	je     0x1002216
 1002216:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
 100221b:	add    BYTE PTR [eax+0x0],dh
 100221e:	jb     0x1002220
 1002220:	add    BYTE PTR gs:[ebp+0x0],ch
 1002224:	popa   
 1002225:	add    BYTE PTR [eax+eax*1+0x75],dh
 1002229:	add    BYTE PTR [edx+0x0],dh
 100222c:	add    BYTE PTR gs:[eax+eax*1+0x79],ch
 1002231:	add    BYTE PTR [esi],ch
 1002233:	add    BYTE PTR ds:0xa00,cl
 1002239:	add    BYTE PTR [eax],al
 100223b:	add    BYTE PTR [eax],al
 100223d:	add    BYTE PTR [eax],al
 100223f:	add    BYTE PTR [ebp+0x0],al
 1002242:	js     0x1002244
 1002244:	je     0x1002246
 1002246:	add    BYTE PTR gs:[edx+0x0],dh
 100224a:	outs   dx,BYTE PTR ds:[esi]
 100224b:	add    BYTE PTR [ecx+0x0],ah
 100224e:	ins    BYTE PTR es:[edi],dx
 100224f:	add    BYTE PTR [eax],ah
 1002251:	add    BYTE PTR [eax+eax*1+0x75],ah
 1002255:	add    BYTE PTR [ebp+0x0],ch
 1002258:	jo     0x100225a
 100225a:	and    BYTE PTR [eax],al
 100225c:	jo     0x100225e
 100225e:	jb     0x1002260
 1002260:	outs   dx,DWORD PTR ds:[esi]
 1002261:	add    BYTE PTR [ebx+0x0],ah
 1002264:	add    BYTE PTR gs:[ebx+0x0],dh
 1002268:	jae    0x100226a
 100226a:	and    BYTE PTR [eax],al
 100226c:	jb     0x100226e
 100226e:	add    BYTE PTR gs:[eax+eax*1+0x75],dh
 1002273:	add    BYTE PTR [edx+0x0],dh
 1002276:	outs   dx,BYTE PTR ds:[esi]
 1002277:	add    BYTE PTR [ebp+0x0],ah
 100227a:	add    BYTE PTR fs:[eax],ah
 100227d:	add    BYTE PTR [esi+0x0],ch
 1002280:	outs   dx,DWORD PTR ds:[esi]
 1002281:	add    BYTE PTR [eax],ah
 1002283:	add    BYTE PTR [ebp+0x0],ah
 1002286:	jb     0x1002288
 1002288:	jb     0x100228a
 100228a:	outs   dx,DWORD PTR ds:[esi]
 100228b:	add    BYTE PTR [edx+0x0],dh
 100228e:	jae    0x1002290
 1002290:	add    BYTE PTR cs:0xa00,cl
 1002297:	add    BYTE PTR [ebp+0x0],al
 100229a:	js     0x100229c
 100229c:	je     0x100229e
 100229e:	add    BYTE PTR gs:[edx+0x0],dh
 10022a2:	outs   dx,BYTE PTR ds:[esi]
 10022a3:	add    BYTE PTR [ecx+0x0],ah
 10022a6:	ins    BYTE PTR es:[edi],dx
 10022a7:	add    BYTE PTR [eax],ah
 10022a9:	add    BYTE PTR [eax+eax*1+0x75],ah
 10022ad:	add    BYTE PTR [ebp+0x0],ch
 10022b0:	jo     0x10022b2
 10022b2:	and    BYTE PTR [eax],al
 10022b4:	jo     0x10022b6
 10022b6:	jb     0x10022b8
 10022b8:	outs   dx,DWORD PTR ds:[esi]
 10022b9:	add    BYTE PTR [ebx+0x0],ah
 10022bc:	add    BYTE PTR gs:[ebx+0x0],dh
 10022c0:	jae    0x10022c2
 10022c2:	and    BYTE PTR [eax],al
 10022c4:	jb     0x10022c6
 10022c6:	add    BYTE PTR gs:[eax+eax*1+0x75],dh
 10022cb:	add    BYTE PTR [edx+0x0],dh
 10022ce:	outs   dx,BYTE PTR ds:[esi]
 10022cf:	add    BYTE PTR [eax],ah
 10022d1:	add    BYTE PTR [ebx+0x0],ah
 10022d4:	outs   dx,DWORD PTR ds:[esi]
 10022d5:	add    BYTE PTR [eax+eax*1+0x65],ah
 10022d9:	add    BYTE PTR [eax],ah
 10022db:	add    BYTE PTR [eax],dh
 10022dd:	add    BYTE PTR [eax+0x0],bh
 10022e0:	and    eax,0x2e007800
 10022e5:	add    BYTE PTR ds:0xa00,cl
 10022eb:	add    BYTE PTR [eax],al
 10022ed:	add    BYTE PTR [eax],al
 10022ef:	add    BYTE PTR [ebp+0x0],al
 10022f2:	jb     0x10022f4
 10022f4:	jb     0x10022f6
 10022f6:	outs   dx,DWORD PTR ds:[esi]
 10022f7:	add    BYTE PTR [edx+0x0],dh
 10022fa:	and    BYTE PTR [eax],al
 10022fc:	sub    eax,0x49002000
 1002301:	add    BYTE PTR [esi+0x0],ch
 1002304:	jo     0x1002306
 1002306:	jne    0x1002308
 1002308:	je     0x100230a
 100230a:	and    BYTE PTR [eax],al
 100230c:	jo     0x100230e
 100230e:	popa   
 100230f:	add    BYTE PTR [edx+0x0],dh
 1002312:	popa   
 1002313:	add    BYTE PTR [ebp+0x0],ch
 1002316:	add    BYTE PTR gs:[eax+eax*1+0x65],dh
 100231b:	add    BYTE PTR [edx+0x0],dh
 100231e:	jae    0x1002320
 1002320:	and    BYTE PTR [eax],al
 1002322:	imul   eax,DWORD PTR [eax],0x76006e
 1002328:	popa   
 1002329:	add    BYTE PTR [eax+eax*1+0x69],ch
 100232d:	add    BYTE PTR [eax+eax*1+0x2e],ah
 1002331:	add    BYTE PTR ds:0xa00,cl
 1002337:	add    BYTE PTR [ebp+0x0],al
 100233a:	jb     0x100233c
 100233c:	jb     0x100233e
 100233e:	outs   dx,DWORD PTR ds:[esi]
 100233f:	add    BYTE PTR [edx+0x0],dh
 1002342:	and    BYTE PTR [eax],al
 1002344:	sub    eax,0x46002000
 1002349:	add    BYTE PTR [ecx+0x0],ah
 100234c:	imul   eax,DWORD PTR [eax],0x65006c
 1002352:	add    BYTE PTR fs:[eax],ah
 1002355:	add    BYTE PTR [eax+eax*1+0x6f],dh
 1002359:	add    BYTE PTR [eax],ah
 100235b:	add    BYTE PTR [ebx+0x0],ah
 100235e:	jb     0x1002360
 1002360:	add    BYTE PTR gs:[ecx+0x0],ah
 1002364:	je     0x1002366
 1002366:	add    BYTE PTR gs:[eax],ah
 1002369:	add    BYTE PTR [eax+eax*1+0x75],ah
 100236d:	add    BYTE PTR [ebp+0x0],ch
 1002370:	jo     0x1002372
 1002372:	and    BYTE PTR [eax],al
 1002374:	data16 add BYTE PTR [ecx+0x0],ch
 1002378:	ins    BYTE PTR es:[edi],dx
 1002379:	add    BYTE PTR [ebp+0x0],ah
 100237c:	add    BYTE PTR cs:0xa00,cl
 1002383:	add    BYTE PTR [eax],al
 1002385:	add    BYTE PTR [eax],al
 1002387:	add    BYTE PTR [ebp+0x0],al
 100238a:	jb     0x100238c
 100238c:	jb     0x100238e
 100238e:	outs   dx,DWORD PTR ds:[esi]
 100238f:	add    BYTE PTR [edx+0x0],dh
 1002392:	and    BYTE PTR [eax],al
 1002394:	sub    eax,0x46002000
 1002399:	add    BYTE PTR [ecx+0x0],ah
 100239c:	imul   eax,DWORD PTR [eax],0x65006c
 10023a2:	add    BYTE PTR fs:[eax],ah
 10023a5:	add    BYTE PTR [eax+eax*1+0x6f],dh
 10023a9:	add    BYTE PTR [eax],ah
 10023ab:	add    BYTE PTR [ebx+0x0],ah
 10023ae:	jb     0x10023b0
 10023b0:	add    BYTE PTR gs:[ecx+0x0],ah
 10023b4:	je     0x10023b6
 10023b6:	add    BYTE PTR gs:[eax],ah
 10023b9:	add    BYTE PTR [ebp+0x0],ch
 10023bc:	popa   
 10023bd:	add    BYTE PTR [esi+0x0],ch
 10023c0:	imul   eax,DWORD PTR [eax],0x650066
 10023c6:	jae    0x10023c8
 10023c8:	je     0x10023ca
 10023ca:	and    BYTE PTR [eax],al
 10023cc:	data16 add BYTE PTR [ecx+0x0],ch
 10023d0:	ins    BYTE PTR es:[edi],dx
 10023d1:	add    BYTE PTR [ebp+0x0],ah
 10023d4:	add    BYTE PTR cs:0xa00,cl
 10023db:	add    BYTE PTR [eax],al
 10023dd:	add    BYTE PTR [eax],al
 10023df:	add    BYTE PTR [ebp+0x0],al
 10023e2:	jb     0x10023e4
 10023e4:	jb     0x10023e6
 10023e6:	outs   dx,DWORD PTR ds:[esi]
 10023e7:	add    BYTE PTR [edx+0x0],dh
 10023ea:	and    BYTE PTR [eax],al
 10023ec:	sub    eax,0x46002000
 10023f1:	add    BYTE PTR [ecx+0x0],ah
 10023f4:	imul   eax,DWORD PTR [eax],0x65006c
 10023fa:	add    BYTE PTR fs:[eax],ah
 10023fd:	add    BYTE PTR [eax+eax*1+0x6f],dh
 1002401:	add    BYTE PTR [eax],ah
 1002403:	add    BYTE PTR [edi+0x0],ch
 1002406:	jo     0x1002408
 1002408:	add    BYTE PTR gs:[esi+0x0],ch
 100240c:	and    BYTE PTR [eax],al
 100240e:	add    BYTE PTR fs:[ebp+0x0],ah
 1002412:	bound  eax,QWORD PTR [eax]
 1002414:	jne    0x1002416
 1002416:	add    BYTE PTR [bx+si],ah
 1002419:	add    BYTE PTR [eax+0x0],dh
 100241c:	jb     0x100241e
 100241e:	outs   dx,DWORD PTR ds:[esi]
 100241f:	add    BYTE PTR [ebx+0x0],ah
 1002422:	add    BYTE PTR gs:[ebx+0x0],dh
 1002426:	jae    0x1002428
 1002428:	add    BYTE PTR cs:0xa00,cl
 100242f:	add    BYTE PTR [ebp+0x0],al
 1002432:	jb     0x1002434
 1002434:	jb     0x1002436
 1002436:	outs   dx,DWORD PTR ds:[esi]
 1002437:	add    BYTE PTR [edx+0x0],dh
 100243a:	and    BYTE PTR [eax],al
 100243c:	sub    eax,0x46002000
 1002441:	add    BYTE PTR [ecx+0x0],ah
 1002444:	imul   eax,DWORD PTR [eax],0x65006c
 100244a:	add    BYTE PTR fs:[eax],ah
 100244d:	add    BYTE PTR [edi+0x0],dh
 1002450:	push   0x6c006900
 1002455:	add    BYTE PTR [ebp+0x0],ah
 1002458:	and    BYTE PTR [eax],al
 100245a:	ja     0x100245c
 100245c:	jb     0x100245e
 100245e:	imul   eax,DWORD PTR [eax],0x690074
 1002464:	outs   dx,BYTE PTR ds:[esi]
 1002465:	add    BYTE PTR [edi+0x0],ah
 1002468:	and    BYTE PTR [eax],al
 100246a:	ins    DWORD PTR es:[edi],dx
 100246b:	add    BYTE PTR [ecx+0x0],ch
 100246e:	outs   dx,BYTE PTR ds:[esi]
 100246f:	add    BYTE PTR [ecx+0x0],ch
 1002472:	and    BYTE PTR [eax],al
 1002474:	add    BYTE PTR fs:[ebp+0x0],dh
 1002478:	ins    DWORD PTR es:[edi],dx
 1002479:	add    BYTE PTR [eax+0x0],dh
 100247c:	add    BYTE PTR cs:0xa00,cl
 1002483:	add    BYTE PTR [eax],al
 1002485:	add    BYTE PTR [eax],al
 1002487:	add    BYTE PTR [ebp+0x0],al
 100248a:	jb     0x100248c
 100248c:	jb     0x100248e
 100248e:	outs   dx,DWORD PTR ds:[esi]
 100248f:	add    BYTE PTR [edx+0x0],dh
 1002492:	and    BYTE PTR [eax],al
 1002494:	sub    eax,0x46002000
 1002499:	add    BYTE PTR [ecx+0x0],ah
 100249c:	imul   eax,DWORD PTR [eax],0x65006c
 10024a2:	add    BYTE PTR fs:[eax],ah
 10024a5:	add    BYTE PTR [edx+0x0],dh
 10024a8:	add    BYTE PTR gs:[ecx+0x0],ah
 10024ac:	add    BYTE PTR fs:[ecx+0x0],ch
 10024b0:	outs   dx,BYTE PTR ds:[esi]
 10024b1:	add    BYTE PTR [edi+0x0],ah
 10024b4:	and    BYTE PTR [eax],al
 10024b6:	jb     0x10024b8
 10024b8:	add    BYTE PTR gs:[edi+0x0],ah
 10024bc:	imul   eax,DWORD PTR [eax],0x740073
 10024c2:	jb     0x10024c4
 10024c4:	jns    0x10024c6
 10024c6:	and    BYTE PTR [eax],al
 10024c8:	imul   eax,DWORD PTR [eax],0x65
 10024cb:	add    BYTE PTR [ecx+0x0],bh
 10024ce:	jae    0x10024d0
 10024d0:	add    BYTE PTR cs:0xa00,cl
 10024d7:	add    BYTE PTR [ebp+0x0],al
 10024da:	jb     0x10024dc
 10024dc:	jb     0x10024de
 10024de:	outs   dx,DWORD PTR ds:[esi]
 10024df:	add    BYTE PTR [edx+0x0],dh
 10024e2:	and    BYTE PTR [eax],al
 10024e4:	sub    eax,0x46002000
 10024e9:	add    BYTE PTR [ecx+0x0],ah
 10024ec:	imul   eax,DWORD PTR [eax],0x65006c
 10024f2:	add    BYTE PTR fs:[eax],ah
 10024f5:	add    BYTE PTR [eax+eax*1+0x6f],dh
 10024f9:	add    BYTE PTR [eax],ah
 10024fb:	add    BYTE PTR [ebx+0x0],dh
 10024fe:	je     0x1002500
 1002500:	popa   
 1002501:	add    BYTE PTR [edx+0x0],dh
 1002504:	je     0x1002506
 1002506:	and    BYTE PTR [eax],al
 1002508:	push   edi
 1002509:	add    BYTE PTR [ecx+0x0],ah
 100250c:	je     0x100250e
 100250e:	jae    0x1002510
 1002510:	outs   dx,DWORD PTR ds:[esi]
 1002511:	add    BYTE PTR [esi+0x0],ch
 1002514:	and    BYTE PTR [eax],al
 1002516:	jo     0x1002518
 1002518:	jb     0x100251a
 100251a:	outs   dx,DWORD PTR ds:[esi]
 100251b:	add    BYTE PTR [ebx+0x0],ah
 100251e:	add    BYTE PTR gs:[ebx+0x0],dh
 1002522:	jae    0x1002524
 1002524:	add    BYTE PTR cs:0xa00,cl
 100252b:	add    BYTE PTR [eax],al
 100252d:	add    BYTE PTR [eax],al
 100252f:	add    BYTE PTR [ebp+0x0],al
 1002532:	jb     0x1002534
 1002534:	jb     0x1002536
 1002536:	outs   dx,DWORD PTR ds:[esi]
 1002537:	add    BYTE PTR [edx+0x0],dh
 100253a:	and    BYTE PTR [eax],al
 100253c:	sub    eax,0x46002000
 1002541:	add    BYTE PTR [ecx+0x0],ah
 1002544:	imul   eax,DWORD PTR [eax],0x65006c
 100254a:	add    BYTE PTR fs:[eax],ah
 100254d:	add    BYTE PTR [edi+0x0],dh
 1002550:	jb     0x1002552
 1002552:	imul   eax,DWORD PTR [eax],0x690074
 1002558:	outs   dx,BYTE PTR ds:[esi]
 1002559:	add    BYTE PTR [edi+0x0],ah
 100255c:	and    BYTE PTR [eax],al
 100255e:	je     0x1002560
 1002560:	push   0x20006500
 1002565:	add    BYTE PTR [edi+0x0],dl
 1002568:	popa   
 1002569:	add    BYTE PTR [eax+eax*1+0x73],dh
 100256d:	add    BYTE PTR [edi+0x0],ch
 1002570:	outs   dx,BYTE PTR ds:[esi]
 1002571:	add    BYTE PTR [eax],ah
 1002573:	add    BYTE PTR [ebp+0x0],ch
 1002576:	popa   
 1002577:	add    BYTE PTR [esi+0x0],ch
 100257a:	imul   eax,DWORD PTR [eax],0x650066
 1002580:	jae    0x1002582
 1002582:	je     0x1002584
 1002584:	add    BYTE PTR cs:0xa00,cl
 100258b:	add    BYTE PTR [eax],al
 100258d:	add    BYTE PTR [eax],al
 100258f:	add    BYTE PTR [ebp+0x0],al
 1002592:	jb     0x1002594
 1002594:	jb     0x1002596
 1002596:	outs   dx,DWORD PTR ds:[esi]
 1002597:	add    BYTE PTR [edx+0x0],dh
 100259a:	and    BYTE PTR [eax],al
 100259c:	sub    eax,0x56002000
 10025a1:	add    BYTE PTR [ebp+0x0],ah
 10025a4:	jb     0x10025a6
 10025a6:	jae    0x10025a8
 10025a8:	imul   eax,DWORD PTR [eax],0x6e006f
 10025ae:	and    BYTE PTR [eax],al
 10025b0:	ins    DWORD PTR es:[edi],dx
 10025b1:	add    BYTE PTR [ecx+0x0],ch
 10025b4:	jae    0x10025b6
 10025b6:	ins    DWORD PTR es:[edi],dx
 10025b7:	add    BYTE PTR [ecx+0x0],ah
 10025ba:	je     0x10025bc
 10025bc:	arpl   WORD PTR [eax],ax
 10025be:	push   0x64002000
 10025c3:	add    BYTE PTR [ebp+0x0],ah
 10025c6:	je     0x10025c8
 10025c8:	add    BYTE PTR gs:[ebx+0x0],ah
 10025cc:	je     0x10025ce
 10025ce:	add    BYTE PTR gs:[eax+eax*1+0x2e],ah
 10025d3:	add    BYTE PTR ds:0xa00,cl
 10025d9:	add    BYTE PTR [eax],al
 10025db:	add    BYTE PTR [eax],al
 10025dd:	add    BYTE PTR [eax],al
 10025df:	add    BYTE PTR [ebp+0x0],al
 10025e2:	jb     0x10025e4
 10025e4:	jb     0x10025e6
 10025e6:	outs   dx,DWORD PTR ds:[esi]
 10025e7:	add    BYTE PTR [edx+0x0],dh
 10025ea:	and    BYTE PTR [eax],al
 10025ec:	sub    eax,0x52002000
 10025f1:	add    BYTE PTR [ebp+0x0],ah
 10025f4:	ins    DWORD PTR es:[edi],dx
 10025f5:	add    BYTE PTR [edi+0x0],ch
 10025f8:	je     0x10025fa
 10025fa:	add    BYTE PTR gs:[eax],ah
 10025fd:	add    BYTE PTR [ebp+0x0],ch
 1002600:	add    BYTE PTR gs:[ebp+0x0],ch
 1002604:	outs   dx,DWORD PTR ds:[esi]
 1002605:	add    BYTE PTR [edx+0x0],dh
 1002608:	jns    0x100260a
 100260a:	and    BYTE PTR [eax],al
 100260c:	jb     0x100260e
 100260e:	add    BYTE PTR gs:[ecx+0x0],ah
 1002612:	add    BYTE PTR fs:[eax],ah
 1002615:	add    BYTE PTR [esi+0x0],ah
 1002618:	popa   
 1002619:	add    BYTE PTR [ecx+0x0],ch
 100261c:	ins    BYTE PTR es:[edi],dx
 100261d:	add    BYTE PTR [ebp+0x0],ah
 1002620:	add    BYTE PTR fs:[esi],ch
 1002623:	add    BYTE PTR ds:0xa00,cl
 1002629:	add    BYTE PTR [eax],al
 100262b:	add    BYTE PTR [eax],al
 100262d:	add    BYTE PTR [eax],al
 100262f:	add    BYTE PTR [ebp+0x0],al
 1002632:	jb     0x1002634
 1002634:	jb     0x1002636
 1002636:	outs   dx,DWORD PTR ds:[esi]
 1002637:	add    BYTE PTR [edx+0x0],dh
 100263a:	and    BYTE PTR [eax],al
 100263c:	sub    eax,0x52002000
 1002641:	add    BYTE PTR [ebp+0x0],ah
 1002644:	ins    DWORD PTR es:[edi],dx
 1002645:	add    BYTE PTR [edi+0x0],ch
 1002648:	je     0x100264a
 100264a:	add    BYTE PTR gs:[eax],ah
 100264d:	add    BYTE PTR [ebp+0x0],ch
 1002650:	add    BYTE PTR gs:[ebp+0x0],ch
 1002654:	outs   dx,DWORD PTR ds:[esi]
 1002655:	add    BYTE PTR [edx+0x0],dh
 1002658:	jns    0x100265a
 100265a:	and    BYTE PTR [eax],al
 100265c:	data16 add BYTE PTR [ecx+0x0],ah
 1002660:	imul   eax,DWORD PTR [eax],0x65006c
 1002666:	add    BYTE PTR fs:[eax],ah
 1002669:	add    BYTE PTR [ebx+0x0],ah
 100266c:	push   0x63006500
 1002671:	add    BYTE PTR [ebx+0x0],ch
 1002674:	jae    0x1002676
 1002676:	jne    0x1002678
 1002678:	ins    DWORD PTR es:[edi],dx
 1002679:	add    BYTE PTR [esi],ch
 100267b:	add    BYTE PTR ds:0xa00,cl
 1002681:	add    BYTE PTR [eax],al
 1002683:	add    BYTE PTR [eax],al
 1002685:	add    BYTE PTR [eax],al
 1002687:	add    BYTE PTR [ebp+0x0],al
 100268a:	jb     0x100268c
 100268c:	jb     0x100268e
 100268e:	outs   dx,DWORD PTR ds:[esi]
 100268f:	add    BYTE PTR [edx+0x0],dh
 1002692:	and    BYTE PTR [eax],al
 1002694:	sub    eax,0x52002000
 1002699:	add    BYTE PTR [ebp+0x0],ah
 100269c:	ins    DWORD PTR es:[edi],dx
 100269d:	add    BYTE PTR [edi+0x0],ch
 10026a0:	je     0x10026a2
 10026a2:	add    BYTE PTR gs:[eax],ah
 10026a5:	add    BYTE PTR [ebp+0x0],ch
 10026a8:	add    BYTE PTR gs:[ebp+0x0],ch
 10026ac:	outs   dx,DWORD PTR ds:[esi]
 10026ad:	add    BYTE PTR [edx+0x0],dh
 10026b0:	jns    0x10026b2
 10026b2:	and    BYTE PTR [eax],al
 10026b4:	data16 add BYTE PTR [ecx+0x0],ah
 10026b8:	imul   eax,DWORD PTR [eax],0x65006c
 10026be:	add    BYTE PTR fs:[eax],ah
 10026c1:	add    BYTE PTR [ebx+0x0],dh
 10026c4:	popa   
 10026c5:	add    BYTE PTR [esi+0x0],ch
 10026c8:	imul   eax,DWORD PTR [eax],0x790074
 10026ce:	and    BYTE PTR [eax],al
 10026d0:	arpl   WORD PTR [eax],ax
 10026d2:	push   0x63006500
 10026d7:	add    BYTE PTR [ebx+0x0],ch
 10026da:	add    BYTE PTR cs:0xa00,cl
 10026e1:	add    BYTE PTR [eax],al
 10026e3:	add    BYTE PTR [eax],al
 10026e5:	add    BYTE PTR [eax],al
 10026e7:	add    BYTE PTR [eax+eax*1+0x68],dl
 10026eb:	add    BYTE PTR [ebp+0x0],ah
 10026ee:	and    BYTE PTR [eax],al
 10026f0:	add    BYTE PTR gs:[edx+0x0],dh
 10026f4:	jb     0x10026f6
 10026f6:	outs   dx,DWORD PTR ds:[esi]
 10026f7:	add    BYTE PTR [edx+0x0],dh
 10026fa:	and    BYTE PTR [eax],al
 10026fc:	imul   eax,DWORD PTR [eax],0x66006e
 1002702:	outs   dx,DWORD PTR ds:[esi]
 1002703:	add    BYTE PTR [edx+0x0],dh
 1002706:	ins    DWORD PTR es:[edi],dx
 1002707:	add    BYTE PTR [ecx+0x0],ah
 100270a:	je     0x100270c
 100270c:	imul   eax,DWORD PTR [eax],0x6e006f
 1002712:	and    BYTE PTR [eax],al
 1002714:	push   0x73006100
 1002719:	add    BYTE PTR [eax],ah
 100271b:	add    BYTE PTR [edx+0x0],ah
 100271e:	add    BYTE PTR gs:[ebp+0x0],ah
 1002722:	outs   dx,BYTE PTR ds:[esi]
 1002723:	add    BYTE PTR [eax],ah
 1002725:	add    BYTE PTR [ebx+0x0],dh
 1002728:	jne    0x100272a
 100272a:	bound  eax,QWORD PTR [eax]
 100272c:	ins    DWORD PTR es:[edi],dx
 100272d:	add    BYTE PTR [ecx+0x0],ch
 1002730:	je     0x1002732
 1002732:	je     0x1002734
 1002734:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
 1002739:	add    BYTE PTR [eax+eax*1+0x6f],dh
 100273d:	add    BYTE PTR [eax],ah
 100273f:	add    BYTE PTR [edi+0x0],dl
 1002742:	popa   
 1002743:	add    BYTE PTR [eax+eax*1+0x73],dh
 1002747:	add    BYTE PTR [edi+0x0],ch
 100274a:	outs   dx,BYTE PTR ds:[esi]
 100274b:	add    BYTE PTR [eax],ah
 100274d:	add    BYTE PTR [ebp+0x0],ah
 1002750:	jb     0x1002752
 1002752:	jb     0x1002754
 1002754:	outs   dx,DWORD PTR ds:[esi]
 1002755:	add    BYTE PTR [edx+0x0],dh
 1002758:	and    BYTE PTR [eax],al
 100275a:	jb     0x100275c
 100275c:	add    BYTE PTR gs:[eax+0x0],dh
 1002760:	outs   dx,DWORD PTR ds:[esi]
 1002761:	add    BYTE PTR [edx+0x0],dh
 1002764:	je     0x1002766
 1002766:	imul   eax,DWORD PTR [eax],0x67006e
 100276c:	add    BYTE PTR cs:0xa00,cl
 1002773:	add    BYTE PTR [eax],al
 1002775:	add    BYTE PTR [eax],al
 1002777:	add    BYTE PTR [ebp+0x0],al
 100277a:	jb     0x100277c
 100277c:	jb     0x100277e
 100277e:	outs   dx,DWORD PTR ds:[esi]
 100277f:	add    BYTE PTR [edx+0x0],dh
 1002782:	and    BYTE PTR [eax],al
 1002784:	sub    eax,0x73002000
 1002789:	add    BYTE PTR [edi+0x0],ch
 100278c:	ins    DWORD PTR es:[edi],dx
 100278d:	add    BYTE PTR [ebp+0x0],ah
 1002790:	and    BYTE PTR [eax],al
 1002792:	outs   dx,DWORD PTR ds:[esi]
 1002793:	add    BYTE PTR [esi+0x0],ah
 1002796:	and    BYTE PTR [eax],al
 1002798:	je     0x100279a
 100279a:	push   0x20006500
 100279f:	add    BYTE PTR [eax+eax*1+0x75],ah
 10027a3:	add    BYTE PTR [ebp+0x0],ch
 10027a6:	jo     0x10027a8
 10027a8:	and    BYTE PTR [eax],al
 10027aa:	data16 add BYTE PTR [ecx+0x0],ch
 10027ae:	ins    BYTE PTR es:[edi],dx
 10027af:	add    BYTE PTR [ebp+0x0],ah
 10027b2:	jae    0x10027b4
 10027b4:	and    BYTE PTR [eax],al
 10027b6:	ja     0x10027b8
 10027b8:	add    BYTE PTR gs:[edx+0x0],dh
 10027bc:	add    BYTE PTR gs:[eax],ah
 10027bf:	add    BYTE PTR [esi+0x0],ch
 10027c2:	outs   dx,DWORD PTR ds:[esi]
 10027c3:	add    BYTE PTR [eax+eax*1+0x20],dh
 10027c7:	add    BYTE PTR [edi+0x0],ah
 10027ca:	add    BYTE PTR gs:[esi+0x0],ch
 10027ce:	add    BYTE PTR gs:[edx+0x0],dh
 10027d2:	popa   
 10027d3:	add    BYTE PTR [eax+eax*1+0x65],dh
 10027d7:	add    BYTE PTR [eax+eax*1+0x20],ah
 10027db:	add    BYTE PTR [edi+0x0],ch
 10027de:	outs   dx,BYTE PTR ds:[esi]
 10027df:	add    BYTE PTR [eax],ah
 10027e1:	add    BYTE PTR [edx+0x0],dh
 10027e4:	add    BYTE PTR gs:[ebp+0x0],ch
 10027e8:	outs   dx,DWORD PTR ds:[esi]
 10027e9:	add    BYTE PTR [eax+eax*1+0x65],dh
 10027ed:	add    BYTE PTR [eax],ah
 10027ef:	add    BYTE PTR [esi+0x0],ch
 10027f2:	outs   dx,DWORD PTR ds:[esi]
 10027f3:	add    BYTE PTR [eax+eax*1+0x65],ah
 10027f7:	add    BYTE PTR [ebx+0x0],dh
 10027fa:	add    BYTE PTR cs:0xa00,cl
 1002801:	add    BYTE PTR [eax],al
 1002803:	add    BYTE PTR [eax],al
 1002805:	add    BYTE PTR [eax],al
 1002807:	add    BYTE PTR [eax+0x1001006d],dh
 100280d:	outs   dx,BYTE PTR ds:[esi]
 100280e:	add    BYTE PTR [ecx],al
 1002810:	xor    BYTE PTR [esi+0x0],ch
 1002813:	add    DWORD PTR [eax],esp
 1002815:	add    DWORD PTR [eax],0x6ba001
 100281b:	add    DWORD PTR [eax-0x5ffeff95],eax
 1002821:	push   0x0
 1002823:	add    DWORD PTR [eax+0x2001006f],eax
 1002829:	ins    BYTE PTR es:[edi],dx
 100282a:	add    BYTE PTR [ecx],al
 100282c:	sub    BYTE PTR [edx+0x0],0x1
 1002830:	mov    al,0x78
 1002832:	add    BYTE PTR [ecx],al
 1002834:	adc    BYTE PTR [ecx+0x0],bh
 1002837:	add    eax,eax
 1002839:	push   0x0
 100283b:	add    DWORD PTR [eax+0x6b],eax
 100283e:	add    BYTE PTR [ecx],al
 1002840:	add    BYTE PTR [eax+eax*1+0x1],ch
 1002844:	loopne 0x10028b1
 1002846:	add    BYTE PTR [ecx],al
 1002848:	shr    BYTE PTR [eax+eax*1+0x1],1
 100284c:	lock ins BYTE PTR es:[edi],dx
 100284e:	add    BYTE PTR [ecx],al
 1002850:	mov    al,0x6c
 1002852:	add    BYTE PTR [ecx],al
 1002854:	push   eax
 1002855:	ins    BYTE PTR es:[edi],dx
 1002856:	add    BYTE PTR [ecx],al
 1002858:	jo     0x10028c6
 100285a:	add    BYTE PTR [ecx],al
 100285c:	nop
 100285d:	ins    BYTE PTR es:[edi],dx
 100285e:	add    BYTE PTR [ecx],al
 1002860:	and    BYTE PTR [ebx+0x0],ch
 1002863:	add    DWORD PTR [eax+0x7f],eax
 1002866:	add    BYTE PTR [ecx],al
 1002868:	jo     0x10028d7
 100286a:	add    BYTE PTR [ecx],al
 100286c:	push   eax
 100286d:	ins    DWORD PTR es:[edi],dx
 100286e:	add    BYTE PTR [ecx],al
 1002870:	adc    BYTE PTR [ebp+0x0],ch
 1002873:	add    DWORD PTR [eax],esi
 1002875:	ins    DWORD PTR es:[edi],dx
 1002876:	add    BYTE PTR [ecx],al
 1002878:	pusha  
 1002879:	imul   eax,DWORD PTR [eax],0x1
 100287c:	jo     0x10028f1
 100287e:	add    BYTE PTR [ecx],al
 1002880:	jo     0x10028fb
 1002882:	add    BYTE PTR [ecx],al
 1002884:	and    eax,0x73006c00
 1002889:	add    BYTE PTR [eax],ah
 100288b:	add    BYTE PTR ds:0x64006c00,ah
 1002891:	add    BYTE PTR [eax],ah
 1002893:	add    BYTE PTR [eax],dh
 1002895:	add    BYTE PTR [eax],ah
 1002897:	add    BYTE PTR [eax],dh
 1002899:	add    BYTE PTR [edx],bh
 100289b:	add    BYTE PTR [eax],dh
 100289d:	add    BYTE PTR [eax],ah
 100289f:	add    BYTE PTR ds:0x7000,ah
 10028a5:	add    BYTE PTR [eax],al
 10028a7:	add    BYTE PTR [eax+eax*1+0x69],dl
 10028ab:	add    BYTE PTR [ebp+0x0],ch
 10028ae:	add    BYTE PTR gs:[edi+0x0],ch
 10028b2:	jne    0x10028b4
 10028b4:	je     0x10028b6
 10028b6:	and    BYTE PTR [eax],al
 10028b8:	ja     0x10028ba
 10028ba:	popa   
 10028bb:	add    BYTE PTR [ecx+0x0],ch
 10028be:	je     0x10028c0
 10028c0:	imul   eax,DWORD PTR [eax],0x67006e
 10028c6:	and    BYTE PTR [eax],al
 10028c8:	data16 add BYTE PTR [edi+0x0],ch
 10028cc:	jb     0x10028ce
 10028ce:	and    BYTE PTR [eax],al
 10028d0:	add    BYTE PTR gs:[eax+0x0],bh
 10028d4:	je     0x10028d6
 10028d6:	add    BYTE PTR gs:[edx+0x0],dh
 10028da:	outs   dx,BYTE PTR ds:[esi]
 10028db:	add    BYTE PTR [ecx+0x0],ah
 10028de:	ins    BYTE PTR es:[edi],dx
 10028df:	add    BYTE PTR [eax],ah
 10028e1:	add    BYTE PTR [eax+eax*1+0x75],ah
 10028e5:	add    BYTE PTR [ebp+0x0],ch
 10028e8:	jo     0x10028ea
 10028ea:	and    BYTE PTR [eax],al
 10028ec:	jo     0x10028ee
 10028ee:	jb     0x10028f0
 10028f0:	outs   dx,DWORD PTR ds:[esi]
 10028f1:	add    BYTE PTR [ebx+0x0],ah
 10028f4:	add    BYTE PTR gs:[ebx+0x0],dh
 10028f8:	jae    0x10028fa
 10028fa:	and    BYTE PTR [eax],al
 10028fc:	and    eax,0x2e006400
 1002901:	add    BYTE PTR ds:0xa00,cl
 1002907:	add    BYTE PTR [ebp+0x0],al
 100290a:	js     0x100290c
 100290c:	je     0x100290e
 100290e:	add    BYTE PTR gs:[edx+0x0],dh
 1002912:	outs   dx,BYTE PTR ds:[esi]
 1002913:	add    BYTE PTR [ecx+0x0],ah
 1002916:	ins    BYTE PTR es:[edi],dx
 1002917:	add    BYTE PTR [eax],ah
 1002919:	add    BYTE PTR [eax+eax*1+0x75],ah
 100291d:	add    BYTE PTR [ebp+0x0],ch
 1002920:	jo     0x1002922
 1002922:	and    BYTE PTR [eax],al
 1002924:	jo     0x1002926
 1002926:	jb     0x1002928
 1002928:	outs   dx,DWORD PTR ds:[esi]
 1002929:	add    BYTE PTR [ebx+0x0],ah
 100292c:	add    BYTE PTR gs:[ebx+0x0],dh
 1002930:	jae    0x1002932
 1002932:	and    BYTE PTR [eax],al
 1002934:	outs   dx,BYTE PTR ds:[esi]
 1002935:	add    BYTE PTR [edi+0x0],ch
 1002938:	je     0x100293a
 100293a:	and    BYTE PTR [eax],al
 100293c:	add    BYTE PTR gs:[eax+0x0],bh
 1002940:	add    BYTE PTR gs:[ebx+0x0],ah
 1002944:	jne    0x1002946
 1002946:	je     0x1002948
 1002948:	add    BYTE PTR gs:[eax+eax*1+0x2e],ah
 100294d:	add    BYTE PTR ds:0xa00,cl
 1002953:	add    BYTE PTR [eax-0x7d],bl
 1002956:	add    BYTE PTR [ecx],al
 1002958:	je     0x10028dd
 100295a:	add    BYTE PTR [ecx],al
 100295c:	xchg   esi,eax
 100295d:	add    DWORD PTR [eax],0x1
 1002960:	rol    DWORD PTR [ebx-0x7c10ff00],cl
 1002966:	add    BYTE PTR [ecx],al
 1002968:	adc    eax,0x84010084
 100296d:	test   BYTE PTR [eax],al
 100296f:	add    DWORD PTR [edi-0x2feff7c],edx
 1002975:	test   BYTE PTR [eax],al
 1002977:	add    DWORD PTR [eax],edx
 1002979:	test   DWORD PTR [eax],eax
 100297b:	add    DWORD PTR [eax],ebx
 100297d:	test   DWORD PTR [eax],eax
 100297f:	add    DWORD PTR [esi],ebp
 1002981:	add    BYTE PTR [edx+0x0],dh
 1002984:	ins    BYTE PTR es:[edi],dx
 1002985:	add    BYTE PTR [eax+eax*1+0x0],ch
 1002989:	add    BYTE PTR [eax],al
 100298b:	add    BYTE PTR [edx+0x0],dh
 100298e:	add    BYTE PTR gs:[ebx+0x0],dh
 1002992:	outs   dx,DWORD PTR ds:[esi]
 1002993:	add    BYTE PTR [ebp+0x0],dh
 1002996:	jb     0x1002998
 1002998:	arpl   WORD PTR [eax],ax
 100299a:	add    BYTE PTR gs:[ebx+0x0],dh
 100299e:	add    BYTE PTR [eax],al
 10029a0:	push   edx
 10029a1:	add    BYTE PTR [ebp+0x0],ah
 10029a4:	jae    0x10029a6
 10029a6:	outs   dx,DWORD PTR ds:[esi]
 10029a7:	add    BYTE PTR [ebp+0x0],dh
 10029aa:	jb     0x10029ac
 10029ac:	arpl   WORD PTR [eax],ax
 10029ae:	add    BYTE PTR gs:[ebx+0x0],dh
 10029b2:	add    BYTE PTR [eax],al
 10029b4:	add    BYTE PTR [eax],al
 10029b6:	add    BYTE PTR [eax],al
 10029b8:	dec    eax
	...
 10029f1:	add    BYTE PTR [eax],al
 10029f3:	add    BYTE PTR [eax-0x50],cl
 10029f6:	add    BYTE PTR [ecx],al
 10029f8:	mov    al,0x2a
 10029fa:	add    BYTE PTR [ecx],al
 10029fc:	add    al,0x0
 10029fe:	add    BYTE PTR [eax],al
 1002a00:	push   edx
 1002a01:	push   ebx
 1002a02:	inc    esp
 1002a03:	push   ebx
 1002a04:	icebp  
 1002a05:	fsubr  st(4),st
 1002a07:	lea    ebx,[edx-0xc]
 1002a0a:	clc    
 1002a0b:	dec    edx
 1002a0c:	popf   
 1002a0d:	js     0x10029ab
 1002a0f:	xchg   ebx,eax
 1002a10:	mov    dl,0xd0
 1002a12:	gs xchg ebx,eax
 1002a14:	add    DWORD PTR [eax],eax
 1002a16:	add    BYTE PTR [eax],al
 1002a18:	inc    esp
 1002a19:	push   esp
 1002a1a:	inc    ebp
 1002a1b:	js     0x1002a82
 1002a1d:	arpl   WORD PTR [esi],bp
 1002a1f:	jo     0x1002a85
 1002a21:	bound  eax,QWORD PTR [eax]
	...
 1002a73:	add    BYTE PTR [eax],dh
 1002a75:	mov    al,0x0
 1002a77:	add    DWORD PTR [edx+ebp*1+0x0],edi
 1002a7b:	add    DWORD PTR [eax],eax
 1002a7d:	add    BYTE PTR [eax],al
 1002a7f:	add    BYTE PTR [eax],al
 1002a81:	add    BYTE PTR [eax],al
 1002a83:	add    BYTE PTR [ecx],al
 1002a85:	add    BYTE PTR [eax],al
 1002a87:	add    BYTE PTR [edx+ebp*1+0x2a940100],cl
 1002a8e:	add    BYTE PTR [ecx],al
 1002a90:	add    BYTE PTR [eax],al
 1002a92:	add    BYTE PTR [eax],al
 1002a94:	xor    BYTE PTR [eax+0x100],dh
 1002a9a:	add    BYTE PTR [eax],al
 1002a9c:	add    BYTE PTR [eax],al
 1002a9e:	add    BYTE PTR [eax],al
 1002aa0:	(bad)  
 1002aa1:	(bad)  
 1002aa2:	(bad)  
 1002aa3:	inc    DWORD PTR [eax]
 1002aa5:	add    BYTE PTR [eax],al
 1002aa7:	add    BYTE PTR [eax+0x0],al
 1002aaa:	add    BYTE PTR [eax],al
 1002aac:	jl     0x1002ad8
 1002aae:	add    BYTE PTR [ecx],al
 1002ab0:	aaa    
 1002ab1:	cmp    eax,DWORD PTR [eax]
 1002ab3:	add    BYTE PTR [eax-0x75],bh
 1002ab6:	add    BYTE PTR [eax],al
 1002ab8:	lods   eax,DWORD PTR ds:[esi]
 1002ab9:	mov    eax,DWORD PTR [eax]
 1002abb:	add    dh,dl
 1002abd:	mov    eax,DWORD PTR [eax]
	...
 1002ad3:	add    BYTE PTR [eax],al
 1002ad5:	mov    edi,edi
 1002ad7:	push   ebp
 1002ad8:	mov    ebp,esp
 1002ada:	mov    eax,DWORD PTR [ebp+0x8]
 1002add:	mov    DWORD PTR [ebp+0x8],eax
 1002ae0:	push   0x1008c98
 1002ae5:	lea    eax,[ebp+0x8]
 1002ae8:	push   eax
 1002ae9:	call   0x1003998
 1002aee:	int3   
 1002aef:	int3   
 1002af0:	int3   
 1002af1:	int3   
 1002af2:	int3   
 1002af3:	int3   
 1002af4:	mov    edi,edi
 1002af6:	push   ebp
 1002af7:	mov    ebp,esp
 1002af9:	mov    eax,DWORD PTR [ebp+0x8]
 1002afc:	test   eax,eax
 1002afe:	je     0x1002b2c
 1002b00:	cmp    eax,0xc
 1002b03:	je     0x1002b25
 1002b05:	cmp    eax,0x16
 1002b08:	je     0x1002b1e
 1002b0a:	cmp    eax,0x22
 1002b0d:	je     0x1002b1e
 1002b0f:	cmp    eax,0x50
 1002b12:	je     0x1002b2c
 1002b14:	push   0x80004005
 1002b19:	call   0x1002ad5
 1002b1e:	push   0x80070057
 1002b23:	jmp    0x1002b19
 1002b25:	push   0x8007000e
 1002b2a:	jmp    0x1002b19
 1002b2c:	pop    ebp
 1002b2d:	ret    
 1002b2e:	int3   
 1002b2f:	int3   
 1002b30:	int3   
 1002b31:	int3   
 1002b32:	int3   
 1002b33:	mov    edi,edi
 1002b35:	push   ebp
 1002b36:	mov    ebp,esp
 1002b38:	push   esi
 1002b39:	mov    esi,ecx
 1002b3b:	cmp    DWORD PTR [esi],0x0
 1002b3e:	je     0x1002b76
 1002b40:	push   0x10012cc
 1002b45:	call   DWORD PTR ds:0x1001128
 1002b4b:	test   eax,eax
 1002b4d:	je     0x1002b84
 1002b4f:	push   0x10012e8
 1002b54:	push   eax
 1002b55:	call   DWORD PTR ds:0x1001134
 1002b5b:	test   eax,eax
 1002b5d:	je     0x1002b84
 1002b5f:	push   0x0
 1002b61:	push   DWORD PTR [esi]
 1002b63:	push   DWORD PTR [ebp+0x18]
 1002b66:	push   DWORD PTR [ebp+0x14]
 1002b69:	push   DWORD PTR [ebp+0x10]
 1002b6c:	push   DWORD PTR [ebp+0xc]
 1002b6f:	push   DWORD PTR [ebp+0x8]
 1002b72:	call   eax
 1002b74:	jmp    0x1002b87
 1002b76:	cmp    DWORD PTR [esi+0x4],0x0
 1002b7a:	je     0x1002b84
 1002b7c:	pop    esi
 1002b7d:	pop    ebp
 1002b7e:	jmp    DWORD PTR ds:0x1001000
 1002b84:	xor    eax,eax
 1002b86:	inc    eax
 1002b87:	pop    esi
 1002b88:	pop    ebp
 1002b89:	ret    0x14
 1002b8c:	int3   
 1002b8d:	int3   
 1002b8e:	int3   
 1002b8f:	int3   
 1002b90:	int3   
 1002b91:	mov    edi,edi
 1002b93:	push   ebp
 1002b94:	mov    ebp,esp
 1002b96:	push   ecx
 1002b97:	lea    eax,[ebp-0x4]
 1002b9a:	push   eax
 1002b9b:	push   DWORD PTR [ebp+0xc]
 1002b9e:	lea    eax,[ebp+0xc]
 1002ba1:	push   eax
 1002ba2:	push   0x0
 1002ba4:	push   DWORD PTR [ebp+0x8]
 1002ba7:	mov    DWORD PTR [ebp-0x4],0x4
 1002bae:	push   DWORD PTR [ecx]
 1002bb0:	call   DWORD PTR ds:0x1001004
 1002bb6:	test   eax,eax
 1002bb8:	jne    0x1002bc7
 1002bba:	mov    eax,DWORD PTR [ebp+0xc]
 1002bbd:	sub    eax,0x4
 1002bc0:	neg    eax
 1002bc2:	sbb    eax,eax
 1002bc4:	and    eax,0xd
 1002bc7:	leave  
 1002bc8:	ret    0x8
 1002bcb:	int3   
 1002bcc:	int3   
 1002bcd:	int3   
 1002bce:	int3   
 1002bcf:	int3   
 1002bd0:	mov    edi,edi
 1002bd2:	push   ebp
 1002bd3:	mov    ebp,esp
 1002bd5:	push   ecx
 1002bd6:	push   esi
 1002bd7:	mov    esi,DWORD PTR [ebp+0x10]
 1002bda:	push   edi
 1002bdb:	lea    eax,[ebp-0x4]
 1002bde:	push   eax
 1002bdf:	xor    edx,edx
 1002be1:	push   esi
 1002be2:	push   edx
 1002be3:	push   DWORD PTR [ebp+0xc]
 1002be6:	mov    edi,ecx
 1002be8:	mov    ecx,DWORD PTR [edi+0x8]
 1002beb:	push   DWORD PTR [ebp+0x8]
 1002bee:	mov    DWORD PTR [ebp-0x4],edx
 1002bf1:	test   ecx,ecx
 1002bf3:	je     0x1002bfc
 1002bf5:	call   0x1002b33
 1002bfa:	jmp    0x1002c02
 1002bfc:	call   DWORD PTR ds:0x1001000
 1002c02:	mov    ecx,eax
 1002c04:	test   ecx,ecx
 1002c06:	jne    0x1002c1f
 1002c08:	mov    ecx,edi
 1002c0a:	call   0x1002c2c
 1002c0f:	mov    ecx,eax
 1002c11:	mov    eax,DWORD PTR [ebp-0x4]
 1002c14:	and    esi,0x300
 1002c1a:	mov    DWORD PTR [edi],eax
 1002c1c:	mov    DWORD PTR [edi+0x4],esi
 1002c1f:	pop    edi
 1002c20:	mov    eax,ecx
 1002c22:	pop    esi
 1002c23:	leave  
 1002c24:	ret    0xc
 1002c27:	int3   
 1002c28:	int3   
 1002c29:	int3   
 1002c2a:	int3   
 1002c2b:	int3   
 1002c2c:	mov    edi,edi
 1002c2e:	push   esi
 1002c2f:	mov    esi,ecx
 1002c31:	xor    eax,eax
 1002c33:	cmp    DWORD PTR [esi],eax
 1002c35:	je     0x1002c42
 1002c37:	push   DWORD PTR [esi]
 1002c39:	call   DWORD PTR ds:0x1001008
 1002c3f:	and    DWORD PTR [esi],0x0
 1002c42:	and    DWORD PTR [esi+0x4],0x0
 1002c46:	pop    esi
 1002c47:	ret    
 1002c48:	int3   
 1002c49:	int3   
 1002c4a:	int3   
 1002c4b:	int3   
 1002c4c:	int3   
 1002c4d:	mov    edi,edi
 1002c4f:	push   ebp
 1002c50:	mov    ebp,esp
 1002c52:	mov    eax,DWORD PTR [ebp+0xc]
 1002c55:	push   esi
 1002c56:	mov    esi,DWORD PTR [ebp+0x8]
 1002c59:	and    DWORD PTR [esi],0x0
 1002c5c:	test   eax,eax
 1002c5e:	jne    0x1002c6b
 1002c60:	push   eax
 1002c61:	call   DWORD PTR ds:0x1001128
 1002c67:	test   eax,eax
 1002c69:	je     0x1002c80
 1002c6b:	push   0x1001304
 1002c70:	push   eax
 1002c71:	call   DWORD PTR ds:0x1001134
 1002c77:	test   eax,eax
 1002c79:	je     0x1002c80
 1002c7b:	push   esi
 1002c7c:	call   eax
 1002c7e:	jmp    0x1002c94
 1002c80:	call   DWORD PTR ds:0x1001114
 1002c86:	test   eax,eax
 1002c88:	jle    0x1002c94
 1002c8a:	and    eax,0xffff
 1002c8f:	or     eax,0x80070000
 1002c94:	pop    esi
 1002c95:	pop    ebp
 1002c96:	ret    
 1002c97:	int3   
 1002c98:	int3   
 1002c99:	int3   
 1002c9a:	int3   
 1002c9b:	int3   
 1002c9c:	mov    edi,edi
 1002c9e:	push   ebp
 1002c9f:	mov    ebp,esp
 1002ca1:	mov    ecx,DWORD PTR [ebp+0xc]
 1002ca4:	push   esi
 1002ca5:	xor    esi,esi
 1002ca7:	test   ecx,ecx
 1002ca9:	je     0x1002cb3
 1002cab:	cmp    ecx,0x7fffffff
 1002cb1:	jbe    0x1002cb8
 1002cb3:	mov    esi,0x80070057
 1002cb8:	test   esi,esi
 1002cba:	js     0x1002cff
 1002cbc:	mov    edx,DWORD PTR [ebp+0x8]
 1002cbf:	xor    esi,esi
 1002cc1:	test   ecx,ecx
 1002cc3:	je     0x1002cf2
 1002cc5:	push   ebx
 1002cc6:	mov    ebx,DWORD PTR [ebp+0x10]
 1002cc9:	push   edi
 1002cca:	mov    edi,0x7ffffffe
 1002ccf:	sub    edi,ecx
 1002cd1:	sub    ebx,edx
 1002cd3:	lea    eax,[edi+ecx*1]
 1002cd6:	test   eax,eax
 1002cd8:	je     0x1002cec
 1002cda:	movzx  eax,WORD PTR [ebx+edx*1]
 1002cde:	test   ax,ax
 1002ce1:	je     0x1002cec
 1002ce3:	mov    WORD PTR [edx],ax
 1002ce6:	add    edx,0x2
 1002ce9:	dec    ecx
 1002cea:	jne    0x1002cd3
 1002cec:	pop    edi
 1002ced:	pop    ebx
 1002cee:	test   ecx,ecx
 1002cf0:	jne    0x1002cfa
 1002cf2:	sub    edx,0x2
 1002cf5:	mov    esi,0x8007007a
 1002cfa:	xor    eax,eax
 1002cfc:	mov    WORD PTR [edx],ax
 1002cff:	mov    eax,esi
 1002d01:	pop    esi
 1002d02:	pop    ebp
 1002d03:	ret    0xc
 1002d06:	int3   
 1002d07:	int3   
 1002d08:	int3   
 1002d09:	int3   
 1002d0a:	int3   
 1002d0b:	push   0x634
 1002d10:	push   0x1008cd0
 1002d15:	call   0x1003ad0
 1002d1a:	mov    esi,DWORD PTR [ebp+0x8]
 1002d1d:	mov    DWORD PTR [ebp-0x644],esi
 1002d23:	mov    ebx,DWORD PTR [ebp+0xc]
 1002d26:	mov    ecx,DWORD PTR ds:0x100b0e8
 1002d2c:	mov    DWORD PTR [ebp-0x640],ecx
 1002d32:	test   ecx,ecx
 1002d34:	je     0x1002f7b
 1002d3a:	xor    edi,edi
 1002d3c:	mov    DWORD PTR [ebp-0x638],edi
 1002d42:	mov    DWORD PTR [ebp-0x63c],edi
 1002d48:	mov    eax,DWORD PTR [ecx]
 1002d4a:	lea    edx,[ebp-0x638]
 1002d50:	push   edx
 1002d51:	push   ecx
 1002d52:	call   DWORD PTR [eax+0x14]
 1002d55:	test   eax,eax
 1002d57:	js     0x1002f7b
 1002d5d:	push   0x100b0f0
 1002d62:	call   DWORD PTR ds:0x100110c
 1002d68:	mov    DWORD PTR [ebp-0x4],edi
 1002d6b:	lea    eax,[ebp-0x63c]
 1002d71:	push   eax
 1002d72:	push   0x1389
 1002d77:	push   DWORD PTR ds:0x100b670
 1002d7d:	call   0x100464b
 1002d82:	add    esp,0xc
 1002d85:	cmp    DWORD PTR [ebp-0x63c],edi
 1002d8b:	je     0x1002d9f
 1002d8d:	mov    eax,DWORD PTR [ebp-0x638]
 1002d93:	mov    ecx,DWORD PTR [eax]
 1002d95:	push   DWORD PTR [ebp-0x63c]
 1002d9b:	push   eax
 1002d9c:	call   DWORD PTR [ecx+0x48]
 1002d9f:	test   esi,esi
 1002da1:	je     0x1002db8
 1002da3:	mov    eax,DWORD PTR [ebp-0x638]
 1002da9:	mov    ecx,DWORD PTR [eax]
 1002dab:	push   edi
 1002dac:	push   DWORD PTR ds:0x100b024
 1002db2:	push   eax
 1002db3:	call   DWORD PTR [ecx+0x10]
 1002db6:	jmp    0x1002dd4
 1002db8:	mov    ecx,DWORD PTR [ebp-0x638]
 1002dbe:	mov    edx,DWORD PTR [ecx]
 1002dc0:	push   0x400
 1002dc5:	mov    eax,ds:0x100b024
 1002dca:	and    eax,0xfffffbff
 1002dcf:	push   eax
 1002dd0:	push   ecx
 1002dd1:	call   DWORD PTR [edx+0x10]
 1002dd4:	mov    edx,DWORD PTR ds:0x100b028
 1002dda:	test   edx,edx
 1002ddc:	je     0x1002dec
 1002dde:	mov    eax,DWORD PTR [ebp-0x638]
 1002de4:	mov    ecx,DWORD PTR [eax]
 1002de6:	push   edi
 1002de7:	push   edx
 1002de8:	push   eax
 1002de9:	call   DWORD PTR [ecx+0x14]
 1002dec:	mov    eax,DWORD PTR [ebp-0x638]
 1002df2:	test   esi,esi
 1002df4:	je     0x1002e15
 1002df6:	mov    esi,DWORD PTR [eax]
 1002df8:	mov    eax,DWORD PTR [ebp-0x644]
 1002dfe:	push   DWORD PTR [eax+0x4]
 1002e01:	push   DWORD PTR [eax]
 1002e03:	call   DWORD PTR ds:0x1001118
 1002e09:	push   eax
 1002e0a:	push   DWORD PTR [ebp-0x638]
 1002e10:	call   DWORD PTR [esi+0x20]
 1002e13:	jmp    0x1002e23
 1002e15:	mov    eax,DWORD PTR [eax]
 1002e17:	push   DWORD PTR [ebp+0x4]
 1002e1a:	push   DWORD PTR [ebp-0x638]
 1002e20:	call   DWORD PTR [eax+0x64]
 1002e23:	cmp    WORD PTR ds:0x100b108,0x0
 1002e2b:	je     0x1002ec8
 1002e31:	mov    esi,0x104
 1002e36:	push   esi
 1002e37:	lea    eax,[ebp-0x634]
 1002e3d:	push   eax
 1002e3e:	call   0x10047fc
 1002e43:	push   DWORD PTR ds:0x100b310
 1002e49:	push   0x100b108
 1002e4e:	lea    eax,[ebp-0x634]
 1002e54:	push   eax
 1002e55:	push   0x1001318
 1002e5a:	push   esi
 1002e5b:	lea    eax,[ebp-0x224]
 1002e61:	push   eax
 1002e62:	mov    esi,DWORD PTR ds:0x10011a4
 1002e68:	call   esi
 1002e6a:	push   DWORD PTR ds:0x100b310
 1002e70:	push   0x100b108
 1002e75:	lea    eax,[ebp-0x634]
 1002e7b:	push   eax
 1002e7c:	push   0x1001330
 1002e81:	push   0x104
 1002e86:	lea    eax,[ebp-0x42c]
 1002e8c:	push   eax
 1002e8d:	call   esi
 1002e8f:	add    esp,0x38
 1002e92:	mov    eax,DWORD PTR [ebp-0x638]
 1002e98:	mov    ecx,DWORD PTR [eax]
 1002e9a:	lea    edx,[ebp-0x42c]
 1002ea0:	push   edx
 1002ea1:	push   eax
 1002ea2:	call   DWORD PTR [ecx+0x38]
 1002ea5:	test   ebx,ebx
 1002ea7:	je     0x1002ebb
 1002ea9:	lea    eax,[ebp-0x42c]
 1002eaf:	push   eax
 1002eb0:	push   0x104
 1002eb5:	push   ebx
 1002eb6:	call   0x1002c9c
 1002ebb:	push   0x100b310
 1002ec0:	call   DWORD PTR ds:0x1001124
 1002ec6:	jmp    0x1002edb
 1002ec8:	push   0x104
 1002ecd:	lea    eax,[ebp-0x224]
 1002ed3:	push   eax
 1002ed4:	call   0x1004891
 1002ed9:	pop    ecx
 1002eda:	pop    ecx
 1002edb:	push   edi
 1002edc:	push   0x80
 1002ee1:	push   0x2
 1002ee3:	push   edi
 1002ee4:	push   0x1
 1002ee6:	push   0x40000000
 1002eeb:	lea    eax,[ebp-0x224]
 1002ef1:	push   eax
 1002ef2:	call   DWORD PTR ds:0x10010e8
 1002ef8:	mov    ds:0x100b0ec,eax
 1002efd:	test   eax,eax
 1002eff:	je     0x1002f3c
 1002f01:	mov    eax,DWORD PTR [ebp-0x638]
 1002f07:	mov    ecx,DWORD PTR [eax]
 1002f09:	lea    edx,[ebp-0x224]
 1002f0f:	push   edx
 1002f10:	push   eax
 1002f11:	call   DWORD PTR [ecx+0x34]
 1002f14:	push   DWORD PTR ds:0x100b0ec
 1002f1a:	call   0x10048fc
 1002f1f:	pop    ecx
 1002f20:	test   ebx,ebx
 1002f22:	je     0x1002f3c
 1002f24:	lea    eax,[ebp-0x224]
 1002f2a:	push   eax
 1002f2b:	push   0x104
 1002f30:	lea    eax,[ebx+0x208]
 1002f36:	push   eax
 1002f37:	call   0x1002c9c
 1002f3c:	test   DWORD PTR ds:0x100b024,0x8000
 1002f46:	je     0x1002f59
 1002f48:	push   DWORD PTR [ebp-0x638]
 1002f4e:	mov    ecx,DWORD PTR [ebp-0x640]
 1002f54:	call   0x1005880
 1002f59:	mov    eax,DWORD PTR [ebp-0x638]
 1002f5f:	mov    ecx,DWORD PTR [eax]
 1002f61:	push   eax
 1002f62:	call   DWORD PTR [ecx+0xc]
 1002f65:	test   ebx,ebx
 1002f67:	je     0x1002f6f
 1002f69:	mov    DWORD PTR [ebx+0x410],eax
 1002f6f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1002f76:	call   0x1002f88
 1002f7b:	xor    eax,eax
 1002f7d:	inc    eax
 1002f7e:	call   0x1003b18
 1002f83:	ret    0x8
 1002f86:	xor    edi,edi
 1002f88:	mov    eax,DWORD PTR [ebp-0x638]
 1002f8e:	mov    ecx,DWORD PTR [eax]
 1002f90:	push   eax
 1002f91:	call   DWORD PTR [ecx+0x8]
 1002f94:	cmp    DWORD PTR [ebp-0x63c],0x0
 1002f9b:	je     0x1002faf
 1002f9d:	push   DWORD PTR [ebp-0x63c]
 1002fa3:	call   DWORD PTR ds:0x1001240
 1002fa9:	mov    DWORD PTR [ebp-0x63c],edi
 1002faf:	push   DWORD PTR ds:0x100b0ec
 1002fb5:	call   DWORD PTR ds:0x10010ec
 1002fbb:	mov    DWORD PTR ds:0x100b0ec,edi
 1002fc1:	push   0x100b0f0
 1002fc6:	call   DWORD PTR ds:0x10010f0
 1002fcc:	ret    
 1002fcd:	int3   
 1002fce:	int3   
 1002fcf:	int3   
 1002fd0:	int3   
 1002fd1:	int3   
 1002fd2:	mov    edi,edi
 1002fd4:	push   ebp
 1002fd5:	mov    ebp,esp
 1002fd7:	push   0x0
 1002fd9:	push   DWORD PTR [ebp+0x8]
 1002fdc:	call   0x1002d0b
 1002fe1:	pop    ebp
 1002fe2:	ret    0x4
 1002fe5:	int3   
 1002fe6:	int3   
 1002fe7:	int3   
 1002fe8:	int3   
 1002fe9:	int3   
 1002fea:	int3   
 1002feb:	int3   
 1002fec:	int3   
 1002fed:	mov    edi,edi
 1002fef:	push   ebp
 1002ff0:	mov    ebp,esp
 1002ff2:	sub    esp,0x18
 1002ff5:	push   esi
 1002ff6:	push   edi
 1002ff7:	xor    edi,edi
 1002ff9:	push   edi
 1002ffa:	push   edi
 1002ffb:	push   0x1
 1002ffd:	push   edi
 1002ffe:	call   DWORD PTR ds:0x1001120
 1003004:	push   0x100b0f0
 1003009:	call   DWORD PTR ds:0x1001110
 100300f:	push   0x208
 1003014:	push   edi
 1003015:	push   0x100b108
 100301a:	mov    DWORD PTR ds:0x100b0ec,edi
 1003020:	call   0x1003b62
 1003025:	lea    eax,[ebp-0x4]
 1003028:	push   edi
 1003029:	push   eax
 100302a:	mov    DWORD PTR [ebp-0x4],edi
 100302d:	call   0x1002c4d
 1003032:	mov    esi,eax
 1003034:	add    esp,0x14
 1003037:	test   esi,esi
 1003039:	js     0x10030e0
 100303f:	mov    eax,DWORD PTR [ebp-0x4]
 1003042:	mov    ecx,DWORD PTR [eax]
 1003044:	push   eax
 1003045:	call   DWORD PTR [ecx+0x10]
 1003048:	mov    esi,eax
 100304a:	mov    eax,DWORD PTR [ebp-0x4]
 100304d:	test   esi,esi
 100304f:	js     0x10030da
 1003055:	mov    ds:0x100b0e8,eax
 100305a:	cmp    DWORD PTR [ebp+0x8],edi
 100305d:	je     0x1003088
 100305f:	lea    eax,[ebp-0xc]
 1003062:	push   eax
 1003063:	lea    eax,[ebp-0x8]
 1003066:	push   eax
 1003067:	mov    DWORD PTR [ebp-0x8],edi
 100306a:	mov    DWORD PTR [ebp-0xc],edi
 100306d:	call   DWORD PTR [ebp+0x8]
 1003070:	mov    esi,eax
 1003072:	test   esi,esi
 1003074:	js     0x10030e0
 1003076:	mov    eax,DWORD PTR [ebp-0x8]
 1003079:	mov    ds:0x100b024,eax
 100307e:	mov    eax,DWORD PTR [ebp-0xc]
 1003081:	mov    ds:0x100b028,eax
 1003086:	jmp    0x10030e0
 1003088:	push   0x20019
 100308d:	push   0x1001350
 1003092:	push   0x80000002
 1003097:	lea    ecx,[ebp-0x18]
 100309a:	mov    DWORD PTR [ebp-0x18],edi
 100309d:	mov    DWORD PTR [ebp-0x14],edi
 10030a0:	mov    DWORD PTR [ebp-0x10],edi
 10030a3:	call   0x1002bd0
 10030a8:	test   eax,eax
 10030aa:	jne    0x10030d0
 10030ac:	push   0x100b024
 10030b1:	push   0x10013d0
 10030b6:	lea    ecx,[ebp-0x18]
 10030b9:	call   0x1002b91
 10030be:	push   0x100b028
 10030c3:	push   0x10013f0
 10030c8:	lea    ecx,[ebp-0x18]
 10030cb:	call   0x1002b91
 10030d0:	lea    ecx,[ebp-0x18]
 10030d3:	call   0x1002c2c
 10030d8:	jmp    0x10030e0
 10030da:	mov    ecx,DWORD PTR [eax]
 10030dc:	push   eax
 10030dd:	call   DWORD PTR [ecx+0x8]
 10030e0:	push   0x1002fd2
 10030e5:	call   DWORD PTR ds:0x100111c
 10030eb:	pop    edi
 10030ec:	mov    eax,esi
 10030ee:	pop    esi
 10030ef:	leave  
 10030f0:	ret    
 10030f1:	int3   
 10030f2:	int3   
 10030f3:	int3   
 10030f4:	int3   
 10030f5:	int3   
 10030f6:	mov    edi,edi
 10030f8:	push   ebp
 10030f9:	mov    ebp,esp
 10030fb:	push   DWORD PTR [ebp+0x8]
 10030fe:	push   0x0
 1003100:	call   0x1002d0b
 1003105:	pop    ebp
 1003106:	ret    
 1003107:	int3   
 1003108:	int3   
 1003109:	int3   
 100310a:	int3   
 100310b:	int3   
 100310c:	mov    eax,ds:0x100b0ec
 1003111:	ret    
 1003112:	int3   
 1003113:	int3   
 1003114:	int3   
 1003115:	int3   
 1003116:	int3   
 1003117:	xor    eax,eax
 1003119:	ret    
 100311a:	int3   
 100311b:	int3   
 100311c:	int3   
 100311d:	int3   
 100311e:	int3   
 100311f:	jmp    0x1003127
 1003121:	call   DWORD PTR ds:0x10011a8
 1003127:	call   DWORD PTR ds:0x10011ac
 100312d:	test   eax,eax
 100312f:	jne    0x1003121
 1003131:	push   0x68
 1003133:	call   0x1004555
 1003138:	pop    ecx
 1003139:	jmp    DWORD PTR ds:0x10011a8
 100313f:	int3   
 1003140:	int3   
 1003141:	int3   
 1003142:	int3   
 1003143:	int3   
 1003144:	push   0x398
 1003149:	mov    eax,0x1008b78
 100314e:	call   0x1003a67
 1003153:	mov    edi,DWORD PTR [ebp+0xc]
 1003156:	lea    ecx,[ebp-0x37c]
 100315c:	call   DWORD PTR ds:0x1001024
 1003162:	and    DWORD PTR [ebp-0x4],0x0
 1003166:	lea    ecx,[ebp-0x50]
 1003169:	call   0x10032df
 100316e:	mov    esi,0x100143c
 1003173:	push   esi
 1003174:	push   0xffffffff
 1003176:	mov    BYTE PTR [ebp-0x4],0x1
 100317a:	call   0x1004181
 100317f:	push   esi
 1003180:	call   0x1004187
 1003185:	push   0x0
 1003187:	call   0x1002fed
 100318c:	add    esp,0x10
 100318f:	cmp    BYTE PTR ds:0x100b314,0x0
 1003196:	jne    0x10031be
 1003198:	push   0x65
 100319a:	mov    BYTE PTR ds:0x100b314,0x1
 10031a1:	call   0x1004555
 10031a6:	mov    DWORD PTR [esp],0x1001420
 10031ad:	push   0x66
 10031af:	call   0x1004555
 10031b4:	push   0x67
 10031b6:	call   0x1004555
 10031bb:	add    esp,0xc
 10031be:	lea    ecx,[ebp-0x37c]
 10031c4:	call   DWORD PTR ds:0x1001010
 10031ca:	push   0x0
 10031cc:	push   DWORD PTR ds:0x1001028
 10031d2:	lea    ecx,[ebp-0x37c]
 10031d8:	call   DWORD PTR ds:0x1001014
 10031de:	mov    esi,DWORD PTR ds:0x1001234
 10031e4:	call   esi
 10031e6:	push   eax
 10031e7:	call   DWORD PTR ds:0x1001238
 10031ed:	push   eax
 10031ee:	call   DWORD PTR ds:0x10011b0
 10031f4:	pop    ecx
 10031f5:	pop    ecx
 10031f6:	test   eax,eax
 10031f8:	jne    0x1003213
 10031fa:	call   esi
 10031fc:	push   eax
 10031fd:	lea    ecx,[ebp-0x37c]
 1003203:	call   DWORD PTR ds:0x100101c
 1003209:	mov    esi,eax
 100320b:	test   esi,esi
 100320d:	jne    0x10032af
 1003213:	push   edi
 1003214:	push   DWORD PTR [ebp+0x8]
 1003217:	lea    ecx,[ebp-0x37c]
 100321d:	call   DWORD PTR ds:0x1001018
 1003223:	mov    esi,eax
 1003225:	test   esi,esi
 1003227:	jne    0x10032af
 100322d:	lea    ecx,[ebp-0x37c]
 1003233:	call   DWORD PTR ds:0x1001030
 1003239:	mov    esi,eax
 100323b:	test   esi,esi
 100323d:	jne    0x10032af
 100323f:	push   0x1001300
 1003244:	lea    eax,[ebp-0x3a4]
 100324a:	push   eax
 100324b:	lea    ecx,[ebp-0x37c]
 1003251:	call   DWORD PTR ds:0x100102c
 1003257:	push   0x5
 1003259:	pop    ecx
 100325a:	mov    esi,eax
 100325c:	lea    edi,[ebp-0x390]
 1003262:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1003264:	mov    bl,BYTE PTR [ebp-0x388]
 100326a:	test   bl,bl
 100326c:	je     0x1003273
 100326e:	call   0x100311f
 1003273:	push   0x0
 1003275:	push   0x69
 1003277:	lea    ecx,[ebp-0x50]
 100327a:	call   0x1003328
 100327f:	lea    eax,[ebp-0x37c]
 1003285:	push   eax
 1003286:	call   DWORD PTR ds:0x1001038
 100328c:	lea    ecx,[ebp-0x50]
 100328f:	mov    esi,eax
 1003291:	call   0x100336a
 1003296:	push   0x69
 1003298:	push   0x6a
 100329a:	push   0x6b
 100329c:	lea    ecx,[ebp-0x50]
 100329f:	call   0x1003395
 10032a4:	test   bl,bl
 10032a6:	je     0x10032b6
 10032a8:	call   0x100311f
 10032ad:	jmp    0x10032b6
 10032af:	cmp    esi,0xa
 10032b2:	jne    0x10032b6
 10032b4:	xor    esi,esi
 10032b6:	lea    ecx,[ebp-0x50]
 10032b9:	mov    BYTE PTR [ebp-0x4],0x0
 10032bd:	call   0x1003313
 10032c2:	or     DWORD PTR [ebp-0x4],0xffffffff
 10032c6:	lea    ecx,[ebp-0x37c]
 10032cc:	call   DWORD PTR ds:0x1001020
 10032d2:	mov    eax,esi
 10032d4:	call   0x1003abb
 10032d9:	ret    
 10032da:	int3   
 10032db:	int3   
 10032dc:	int3   
 10032dd:	int3   
 10032de:	int3   
 10032df:	mov    edi,edi
 10032e1:	push   edi
 10032e2:	xor    eax,eax
 10032e4:	mov    edi,ecx
 10032e6:	stos   DWORD PTR es:[edi],eax
 10032e7:	stos   DWORD PTR es:[edi],eax
 10032e8:	stos   DWORD PTR es:[edi],eax
 10032e9:	stos   DWORD PTR es:[edi],eax
 10032ea:	xor    eax,eax
 10032ec:	lea    edi,[ecx+0x10]
 10032ef:	stos   DWORD PTR es:[edi],eax
 10032f0:	stos   DWORD PTR es:[edi],eax
 10032f1:	stos   DWORD PTR es:[edi],eax
 10032f2:	stos   DWORD PTR es:[edi],eax
 10032f3:	xor    eax,eax
 10032f5:	mov    DWORD PTR [ecx+0x28],eax
 10032f8:	mov    DWORD PTR [ecx+0x2c],eax
 10032fb:	mov    DWORD PTR [ecx+0x20],eax
 10032fe:	mov    DWORD PTR [ecx+0x24],eax
 1003301:	mov    DWORD PTR [ecx+0x30],eax
 1003304:	mov    DWORD PTR [ecx+0x34],eax
 1003307:	mov    DWORD PTR [ecx+0x38],eax
 100330a:	mov    eax,ecx
 100330c:	pop    edi
 100330d:	ret    
 100330e:	int3   
 100330f:	int3   
 1003310:	int3   
 1003311:	int3   
 1003312:	int3   
 1003313:	cmp    DWORD PTR [ecx+0x34],0x0
 1003317:	je     0x1003322
 1003319:	push   DWORD PTR [ecx+0x34]
 100331c:	call   0x1003978
 1003321:	pop    ecx
 1003322:	ret    
 1003323:	int3   
 1003324:	int3   
 1003325:	int3   
 1003326:	int3   
 1003327:	int3   
 1003328:	mov    edi,edi
 100332a:	push   ebp
 100332b:	mov    ebp,esp
 100332d:	push   esi
 100332e:	mov    esi,ecx
 1003330:	cmp    DWORD PTR [esi+0x30],0x0
 1003334:	je     0x100333c
 1003336:	cmp    BYTE PTR [ebp+0xc],0x0
 100333a:	je     0x1003360
 100333c:	push   esi
 100333d:	call   DWORD PTR ds:0x10010e4
 1003343:	call   0x1004ec6
 1003348:	push   esi
 1003349:	push   DWORD PTR [ebp+0x8]
 100334c:	mov    ecx,esi
 100334e:	mov    DWORD PTR [esi+0x20],eax
 1003351:	mov    DWORD PTR [esi+0x24],edx
 1003354:	mov    DWORD PTR [esi+0x30],0x1
 100335b:	call   0x1003458
 1003360:	pop    esi
 1003361:	pop    ebp
 1003362:	ret    0x8
 1003365:	int3   
 1003366:	int3   
 1003367:	int3   
 1003368:	int3   
 1003369:	int3   
 100336a:	mov    edi,edi
 100336c:	push   esi
 100336d:	mov    esi,ecx
 100336f:	cmp    DWORD PTR [esi+0x30],0x1
 1003373:	jne    0x100338e
 1003375:	lea    eax,[esi+0x10]
 1003378:	push   eax
 1003379:	call   DWORD PTR ds:0x10010e4
 100337f:	call   0x1004ec6
 1003384:	and    DWORD PTR [esi+0x30],0x0
 1003388:	mov    DWORD PTR [esi+0x28],eax
 100338b:	mov    DWORD PTR [esi+0x2c],edx
 100338e:	pop    esi
 100338f:	ret    
 1003390:	int3   
 1003391:	int3   
 1003392:	int3   
 1003393:	int3   
 1003394:	int3   
 1003395:	mov    edi,edi
 1003397:	push   ebp
 1003398:	mov    ebp,esp
 100339a:	push   ecx
 100339b:	push   ecx
 100339c:	push   ebx
 100339d:	push   esi
 100339e:	mov    esi,ecx
 10033a0:	cmp    DWORD PTR [esi+0x30],0x1
 10033a4:	push   edi
 10033a5:	jne    0x10033be
 10033a7:	lea    eax,[esi+0x10]
 10033aa:	push   eax
 10033ab:	call   DWORD PTR ds:0x10010e4
 10033b1:	call   0x1004ec6
 10033b6:	mov    DWORD PTR [esi+0x28],eax
 10033b9:	mov    DWORD PTR [esi+0x2c],edx
 10033bc:	jmp    0x10033db
 10033be:	cmp    DWORD PTR [ebp+0x10],0x0
 10033c2:	je     0x10033cd
 10033c4:	push   esi
 10033c5:	push   DWORD PTR [ebp+0x10]
 10033c8:	call   0x1003458
 10033cd:	lea    eax,[esi+0x10]
 10033d0:	push   eax
 10033d1:	push   DWORD PTR [ebp+0xc]
 10033d4:	mov    ecx,esi
 10033d6:	call   0x1003458
 10033db:	mov    edi,DWORD PTR [esi+0x2c]
 10033de:	mov    ebx,DWORD PTR [esi+0x28]
 10033e1:	cmp    edi,DWORD PTR [esi+0x24]
 10033e4:	jb     0x10033f5
 10033e6:	ja     0x10033ed
 10033e8:	cmp    ebx,DWORD PTR [esi+0x20]
 10033eb:	jb     0x10033f5
 10033ed:	sub    ebx,DWORD PTR [esi+0x20]
 10033f0:	sbb    edi,DWORD PTR [esi+0x24]
 10033f3:	jmp    0x1003401
 10033f5:	sub    ebx,DWORD PTR [esi+0x20]
 10033f8:	sbb    edi,DWORD PTR [esi+0x24]
 10033fb:	add    ebx,0xffffffff
 10033fe:	adc    edi,0xffffffff
 1003401:	push   DWORD PTR [ebp+0x8]
 1003404:	call   0x1004555
 1003409:	mov    eax,edi
 100340b:	mov    DWORD PTR [ebp-0x8],ebx
 100340e:	and    edi,0x7fffffff
 1003414:	mov    DWORD PTR [ebp-0x4],edi
 1003417:	fild   QWORD PTR [ebp-0x8]
 100341a:	and    DWORD PTR [ebp-0x8],0x0
 100341e:	and    eax,0x80000000
 1003423:	mov    DWORD PTR [ebp-0x4],eax
 1003426:	fild   QWORD PTR [ebp-0x8]
 1003429:	push   ecx
 100342a:	fchs   
 100342c:	faddp  st(1),st
 100342e:	fdiv   QWORD PTR ds:0x1001458
 1003434:	fstp   QWORD PTR [esp]
 1003437:	push   0x1001448
 100343c:	call   DWORD PTR ds:0x10011bc
 1003442:	push   0x6c
 1003444:	call   0x1004555
 1003449:	add    esp,0x10
 100344c:	pop    edi
 100344d:	pop    esi
 100344e:	pop    ebx
 100344f:	leave  
 1003450:	ret    0xc
 1003453:	int3   
 1003454:	int3   
 1003455:	int3   
 1003456:	int3   
 1003457:	int3   
 1003458:	mov    edi,edi
 100345a:	push   ebp
 100345b:	mov    ebp,esp
 100345d:	push   esi
 100345e:	push   edi
 100345f:	xor    eax,eax
 1003461:	push   eax
 1003462:	push   eax
 1003463:	push   eax
 1003464:	push   DWORD PTR [ebp+0xc]
 1003467:	mov    esi,ecx
 1003469:	push   eax
 100346a:	push   0x400
 100346f:	call   DWORD PTR ds:0x1001098
 1003475:	mov    edi,eax
 1003477:	cmp    edi,DWORD PTR [esi+0x38]
 100347a:	jle    0x10034a8
 100347c:	cmp    DWORD PTR [esi+0x34],0x0
 1003480:	je     0x100348b
 1003482:	push   DWORD PTR [esi+0x34]
 1003485:	call   0x1003978
 100348a:	pop    ecx
 100348b:	xor    ecx,ecx
 100348d:	push   0x2
 100348f:	pop    edx
 1003490:	mov    eax,edi
 1003492:	mul    edx
 1003494:	seto   cl
 1003497:	neg    ecx
 1003499:	or     ecx,eax
 100349b:	push   ecx
 100349c:	call   0x1003b6e
 10034a1:	pop    ecx
 10034a2:	mov    DWORD PTR [esi+0x34],eax
 10034a5:	mov    DWORD PTR [esi+0x38],edi
 10034a8:	cmp    DWORD PTR [esi+0x34],0x0
 10034ac:	je     0x10034d3
 10034ae:	push   DWORD PTR [esi+0x38]
 10034b1:	push   DWORD PTR [esi+0x34]
 10034b4:	push   0x0
 10034b6:	push   DWORD PTR [ebp+0xc]
 10034b9:	push   0x0
 10034bb:	push   0x400
 10034c0:	call   DWORD PTR ds:0x1001098
 10034c6:	push   DWORD PTR [esi+0x34]
 10034c9:	push   DWORD PTR [ebp+0x8]
 10034cc:	call   0x1004555
 10034d1:	pop    ecx
 10034d2:	pop    ecx
 10034d3:	pop    edi
 10034d4:	pop    esi
 10034d5:	pop    ebp
 10034d6:	ret    0x8
 10034d9:	int3   
 10034da:	int3   
 10034db:	int3   
 10034dc:	int3   
 10034dd:	int3   
 10034de:	push   0x1003cd8
 10034e3:	call   0x1003c91
 10034e8:	mov    eax,ds:0x100b660
 10034ed:	mov    DWORD PTR [esp],0x100b32c
 10034f4:	push   DWORD PTR ds:0x100b65c
 10034fa:	mov    ds:0x100b32c,eax
 10034ff:	push   0x100b31c
 1003504:	push   0x100b320
 1003509:	push   0x100b318
 100350e:	call   DWORD PTR ds:0x10011c8
 1003514:	add    esp,0x14
 1003517:	mov    ds:0x100b328,eax
 100351c:	test   eax,eax
 100351e:	jns    0x1003528
 1003520:	push   0x8
 1003522:	call   0x1003be0
 1003527:	pop    ecx
 1003528:	ret    
 1003529:	int3   
 100352a:	int3   
 100352b:	int3   
 100352c:	int3   
 100352d:	int3   
 100352e:	push   0x10
 1003530:	push   0x1008d20
 1003535:	call   0x1003e80
 100353a:	xor    ebx,ebx
 100353c:	cmp    DWORD PTR ds:0x100c920,ebx
 1003542:	jne    0x100354f
 1003544:	push   ebx
 1003545:	push   ebx
 1003546:	push   0x1
 1003548:	push   ebx
 1003549:	call   DWORD PTR ds:0x1001120
 100354f:	mov    DWORD PTR [ebp-0x4],ebx
 1003552:	mov    eax,fs:0x18
 1003558:	mov    esi,DWORD PTR [eax+0x4]
 100355b:	mov    DWORD PTR [ebp-0x1c],ebx
 100355e:	mov    edi,0x100c914
 1003563:	push   ebx
 1003564:	push   esi
 1003565:	push   edi
 1003566:	call   DWORD PTR ds:0x1001144
 100356c:	cmp    eax,ebx
 100356e:	je     0x1003589
 1003570:	cmp    eax,esi
 1003572:	jne    0x100357c
 1003574:	xor    esi,esi
 1003576:	inc    esi
 1003577:	mov    DWORD PTR [ebp-0x1c],esi
 100357a:	jmp    0x100358c
 100357c:	push   0x3e8
 1003581:	call   DWORD PTR ds:0x1001140
 1003587:	jmp    0x1003563
 1003589:	xor    esi,esi
 100358b:	inc    esi
 100358c:	mov    eax,ds:0x100c910
 1003591:	cmp    eax,esi
 1003593:	jne    0x100359f
 1003595:	push   0x1f
 1003597:	call   0x1003be0
 100359c:	pop    ecx
 100359d:	jmp    0x10035da
 100359f:	mov    eax,ds:0x100c910
 10035a4:	test   eax,eax
 10035a6:	jne    0x10035d4
 10035a8:	mov    DWORD PTR ds:0x100c910,esi
 10035ae:	push   0x100128c
 10035b3:	push   0x1001280
 10035b8:	call   0x1003e6e
 10035bd:	pop    ecx
 10035be:	pop    ecx
 10035bf:	test   eax,eax
 10035c1:	je     0x10035da
 10035c3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10035ca:	mov    eax,0xff
 10035cf:	jmp    0x10036b1
 10035d4:	mov    DWORD PTR ds:0x100b334,esi
 10035da:	mov    eax,ds:0x100c910
 10035df:	cmp    eax,esi
 10035e1:	jne    0x10035fe
 10035e3:	push   0x100127c
 10035e8:	push   0x1001264
 10035ed:	call   0x1003e62
 10035f2:	pop    ecx
 10035f3:	pop    ecx
 10035f4:	mov    DWORD PTR ds:0x100c910,0x2
 10035fe:	cmp    DWORD PTR [ebp-0x1c],ebx
 1003601:	jne    0x100360b
 1003603:	push   ebx
 1003604:	push   edi
 1003605:	call   DWORD PTR ds:0x100113c
 100360b:	cmp    DWORD PTR ds:0x100c924,ebx
 1003611:	je     0x100362c
 1003613:	push   0x100c924
 1003618:	call   0x1003da0
 100361d:	pop    ecx
 100361e:	test   eax,eax
 1003620:	je     0x100362c
 1003622:	push   ebx
 1003623:	push   0x2
 1003625:	push   ebx
 1003626:	call   DWORD PTR ds:0x100c924
 100362c:	mov    eax,ds:0x100b31c
 1003631:	mov    ecx,DWORD PTR ds:0x10011dc
 1003637:	mov    DWORD PTR [ecx],eax
 1003639:	push   DWORD PTR ds:0x100b31c
 100363f:	push   DWORD PTR ds:0x100b320
 1003645:	push   DWORD PTR ds:0x100b318
 100364b:	call   0x1003144
 1003650:	add    esp,0xc
 1003653:	mov    ds:0x100b330,eax
 1003658:	cmp    DWORD PTR ds:0x100b324,ebx
 100365e:	jne    0x1003697
 1003660:	push   eax
 1003661:	call   DWORD PTR ds:0x10011d8
 1003667:	mov    eax,DWORD PTR [ebp-0x14]
 100366a:	mov    ecx,DWORD PTR [eax]
 100366c:	mov    ecx,DWORD PTR [ecx]
 100366e:	mov    DWORD PTR [ebp-0x20],ecx
 1003671:	push   eax
 1003672:	push   ecx
 1003673:	call   0x1003d04
 1003678:	pop    ecx
 1003679:	pop    ecx
 100367a:	ret    
 100367b:	mov    esp,DWORD PTR [ebp-0x18]
 100367e:	mov    eax,DWORD PTR [ebp-0x20]
 1003681:	mov    ds:0x100b330,eax
 1003686:	xor    ebx,ebx
 1003688:	cmp    DWORD PTR ds:0x100b324,ebx
 100368e:	jne    0x1003697
 1003690:	push   eax
 1003691:	call   DWORD PTR ds:0x10011d0
 1003697:	cmp    DWORD PTR ds:0x100b334,ebx
 100369d:	jne    0x10036a5
 100369f:	call   DWORD PTR ds:0x10011cc
 10036a5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10036ac:	mov    eax,ds:0x100b330
 10036b1:	call   0x1003ec5
 10036b6:	ret    
 10036b7:	int3   
 10036b8:	int3   
 10036b9:	int3   
 10036ba:	int3   
 10036bb:	int3   
 10036bc:	mov    eax,0x5a4d
 10036c1:	cmp    WORD PTR ds:0x1000000,ax
 10036c8:	je     0x10036ce
 10036ca:	xor    eax,eax
 10036cc:	jmp    0x1003703
 10036ce:	mov    eax,ds:0x100003c
 10036d3:	cmp    DWORD PTR [eax+0x1000000],0x4550
 10036dd:	jne    0x10036ca
 10036df:	mov    ecx,0x10b
 10036e4:	cmp    WORD PTR [eax+0x1000018],cx
 10036eb:	jne    0x10036ca
 10036ed:	cmp    DWORD PTR [eax+0x1000074],0xe
 10036f4:	jbe    0x10036ca
 10036f6:	xor    ecx,ecx
 10036f8:	cmp    DWORD PTR [eax+0x10000e8],ecx
 10036fe:	setne  cl
 1003701:	mov    eax,ecx
 1003703:	push   0x1
 1003705:	mov    ds:0x100b324,eax
 100370a:	call   DWORD PTR ds:0x10011f8
 1003710:	pop    ecx
 1003711:	push   0xffffffff
 1003713:	call   DWORD PTR ds:0x1001148
 1003719:	mov    ecx,DWORD PTR ds:0x100b668
 100371f:	mov    ds:0x100c918,eax
 1003724:	mov    ds:0x100c91c,eax
 1003729:	mov    eax,ds:0x10011f4
 100372e:	mov    DWORD PTR [eax],ecx
 1003730:	mov    eax,ds:0x10011f0
 1003735:	mov    ecx,DWORD PTR ds:0x100b664
 100373b:	mov    DWORD PTR [eax],ecx
 100373d:	call   0x1003cad
 1003742:	call   0x1003f13
 1003747:	cmp    DWORD PTR ds:0x100b064,0x0
 100374e:	jne    0x100375c
 1003750:	push   0x1003f0b
 1003755:	call   DWORD PTR ds:0x10011ec
 100375b:	pop    ecx
 100375c:	call   0x1003ede
 1003761:	cmp    DWORD PTR ds:0x100b060,0xffffffff
 1003768:	jne    0x1003773
 100376a:	push   0xffffffff
 100376c:	call   DWORD PTR ds:0x10011e8
 1003772:	pop    ecx
 1003773:	xor    eax,eax
 1003775:	ret    
 1003776:	int3   
 1003777:	int3   
 1003778:	int3   
 1003779:	int3   
 100377a:	int3   
 100377b:	call   0x1003f1b
 1003780:	jmp    0x100352e
 1003785:	int3   
 1003786:	int3   
 1003787:	int3   
 1003788:	int3   
 1003789:	int3   
 100378a:	jmp    DWORD PTR ds:0x1001224
 1003790:	int3   
 1003791:	int3   
 1003792:	int3   
 1003793:	int3   
 1003794:	int3   
 1003795:	push   0x14
 1003797:	push   0x1008d40
 100379c:	call   0x1003e80
 10037a1:	and    DWORD PTR [ebp-0x4],0x0
 10037a5:	dec    DWORD PTR [ebp+0x10]
 10037a8:	js     0x10037e4
 10037aa:	mov    ecx,DWORD PTR [ebp+0x8]
 10037ad:	sub    ecx,DWORD PTR [ebp+0xc]
 10037b0:	mov    DWORD PTR [ebp+0x8],ecx
 10037b3:	call   DWORD PTR [ebp+0x14]
 10037b6:	jmp    0x10037a5
 10037b8:	mov    eax,DWORD PTR [ebp-0x14]
 10037bb:	mov    DWORD PTR [ebp-0x1c],eax
 10037be:	mov    eax,DWORD PTR [ebp-0x1c]
 10037c1:	mov    eax,DWORD PTR [eax]
 10037c3:	mov    DWORD PTR [ebp-0x20],eax
 10037c6:	mov    eax,DWORD PTR [ebp-0x20]
 10037c9:	cmp    DWORD PTR [eax],0xe06d7363
 10037cf:	je     0x10037dc
 10037d1:	mov    DWORD PTR [ebp-0x24],0x0
 10037d8:	mov    eax,DWORD PTR [ebp-0x24]
 10037db:	ret    
 10037dc:	call   0x1003fbc
 10037e1:	mov    esp,DWORD PTR [ebp-0x18]
 10037e4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10037eb:	call   0x1003ec5
 10037f0:	ret    0x10
 10037f3:	int3   
 10037f4:	int3   
 10037f5:	int3   
 10037f6:	int3   
 10037f7:	int3   
 10037f8:	push   0xc
 10037fa:	push   0x1008d60
 10037ff:	call   0x1003e80
 1003804:	and    DWORD PTR [ebp-0x1c],0x0
 1003808:	mov    esi,DWORD PTR [ebp+0xc]
 100380b:	mov    eax,esi
 100380d:	imul   eax,DWORD PTR [ebp+0x10]
 1003811:	add    DWORD PTR [ebp+0x8],eax
 1003814:	and    DWORD PTR [ebp-0x4],0x0
 1003818:	dec    DWORD PTR [ebp+0x10]
 100381b:	js     0x1003828
 100381d:	sub    DWORD PTR [ebp+0x8],esi
 1003820:	mov    ecx,DWORD PTR [ebp+0x8]
 1003823:	call   DWORD PTR [ebp+0x14]
 1003826:	jmp    0x1003818
 1003828:	mov    DWORD PTR [ebp-0x1c],0x1
 100382f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1003836:	call   0x1003843
 100383b:	call   0x1003ec5
 1003840:	ret    0x10
 1003843:	cmp    DWORD PTR [ebp-0x1c],0x0
 1003847:	jne    0x100385a
 1003849:	push   DWORD PTR [ebp+0x14]
 100384c:	push   DWORD PTR [ebp+0x10]
 100384f:	push   DWORD PTR [ebp+0xc]
 1003852:	push   DWORD PTR [ebp+0x8]
 1003855:	call   0x1003795
 100385a:	ret    
 100385b:	int3   
 100385c:	int3   
 100385d:	int3   
 100385e:	int3   
 100385f:	int3   
 1003860:	mov    edi,edi
 1003862:	push   ebp
 1003863:	mov    ebp,esp
 1003865:	sub    esp,0x328
 100386b:	mov    ds:0x100b440,eax
 1003870:	mov    DWORD PTR ds:0x100b43c,ecx
 1003876:	mov    DWORD PTR ds:0x100b438,edx
 100387c:	mov    DWORD PTR ds:0x100b434,ebx
 1003882:	mov    DWORD PTR ds:0x100b430,esi
 1003888:	mov    DWORD PTR ds:0x100b42c,edi
 100388e:	data16 mov WORD PTR ds:0x100b458,ss
 1003895:	data16 mov WORD PTR ds:0x100b44c,cs
 100389c:	data16 mov WORD PTR ds:0x100b428,ds
 10038a3:	data16 mov WORD PTR ds:0x100b424,es
 10038aa:	data16 mov WORD PTR ds:0x100b420,fs
 10038b1:	data16 mov WORD PTR ds:0x100b41c,gs
 10038b8:	pushf  
 10038b9:	pop    DWORD PTR ds:0x100b450
 10038bf:	mov    eax,DWORD PTR [ebp+0x0]
 10038c2:	mov    ds:0x100b444,eax
 10038c7:	mov    eax,DWORD PTR [ebp+0x4]
 10038ca:	mov    ds:0x100b448,eax
 10038cf:	lea    eax,[ebp+0x8]
 10038d2:	mov    ds:0x100b454,eax
 10038d7:	mov    eax,DWORD PTR [ebp-0x320]
 10038dd:	mov    DWORD PTR ds:0x100b390,0x10001
 10038e7:	mov    eax,ds:0x100b448
 10038ec:	mov    ds:0x100b344,eax
 10038f1:	mov    DWORD PTR ds:0x100b338,0xc0000409
 10038fb:	mov    DWORD PTR ds:0x100b33c,0x1
 1003905:	mov    eax,ds:0x100b048
 100390a:	mov    DWORD PTR [ebp-0x328],eax
 1003910:	mov    eax,ds:0x100b04c
 1003915:	mov    DWORD PTR [ebp-0x324],eax
 100391b:	call   DWORD PTR ds:0x1001158
 1003921:	mov    ds:0x100b388,eax
 1003926:	push   0x1
 1003928:	call   0x1003fc8
 100392d:	pop    ecx
 100392e:	push   0x0
 1003930:	call   DWORD PTR ds:0x100111c
 1003936:	push   0x1001460
 100393b:	call   DWORD PTR ds:0x1001154
 1003941:	cmp    DWORD PTR ds:0x100b388,0x0
 1003948:	jne    0x1003952
 100394a:	push   0x1
 100394c:	call   0x1003fc8
 1003951:	pop    ecx
 1003952:	push   0xc0000409
 1003957:	call   DWORD PTR ds:0x1001150
 100395d:	push   eax
 100395e:	call   DWORD PTR ds:0x100114c
 1003964:	leave  
 1003965:	ret    
 1003966:	int3   
 1003967:	int3   
 1003968:	int3   
 1003969:	int3   
 100396a:	int3   
 100396b:	int3   
 100396c:	jmp    DWORD PTR ds:0x1001228
 1003972:	int3   
 1003973:	int3   
 1003974:	int3   
 1003975:	int3   
 1003976:	int3   
 1003977:	int3   
 1003978:	jmp    DWORD PTR ds:0x100122c
 100397e:	int3   
 100397f:	int3   
 1003980:	int3   
 1003981:	int3   
 1003982:	int3   
 1003983:	cmp    ecx,DWORD PTR ds:0x100b048
 1003989:	jne    0x100398d
 100398b:	repz ret 
 100398d:	jmp    0x1003860
 1003992:	int3   
 1003993:	int3   
 1003994:	int3   
 1003995:	int3   
 1003996:	int3   
 1003997:	int3   
 1003998:	jmp    DWORD PTR ds:0x1001230
 100399e:	int3   
 100399f:	int3   
 10039a0:	int3   
 10039a1:	int3   
 10039a2:	int3   
 10039a3:	mov    edi,edi
 10039a5:	push   ebp
 10039a6:	mov    ebp,esp
 10039a8:	test   BYTE PTR [ebp+0x8],0x2
 10039ac:	push   edi
 10039ad:	mov    edi,ecx
 10039af:	je     0x10039d6
 10039b1:	push   esi
 10039b2:	push   0x100401c
 10039b7:	lea    esi,[edi-0x4]
 10039ba:	push   DWORD PTR [esi]
 10039bc:	push   0xc
 10039be:	push   edi
 10039bf:	call   0x10037f8
 10039c4:	test   BYTE PTR [ebp+0x8],0x1
 10039c8:	je     0x10039d1
 10039ca:	push   esi
 10039cb:	call   0x100378a
 10039d0:	pop    ecx
 10039d1:	mov    eax,esi
 10039d3:	pop    esi
 10039d4:	jmp    0x10039ea
 10039d6:	call   0x100401c
 10039db:	test   BYTE PTR [ebp+0x8],0x1
 10039df:	je     0x10039e8
 10039e1:	push   edi
 10039e2:	call   0x100378a
 10039e7:	pop    ecx
 10039e8:	mov    eax,edi
 10039ea:	pop    edi
 10039eb:	pop    ebp
 10039ec:	ret    0x4
 10039ef:	int3   
 10039f0:	int3   
 10039f1:	int3   
 10039f2:	int3   
 10039f3:	int3   
 10039f4:	push   eax
 10039f5:	push   DWORD PTR fs:0x0
 10039fc:	lea    eax,[esp+0xc]
 1003a00:	sub    esp,DWORD PTR [esp+0xc]
 1003a04:	push   ebx
 1003a05:	push   esi
 1003a06:	push   edi
 1003a07:	mov    DWORD PTR [eax],ebp
 1003a09:	mov    ebp,eax
 1003a0b:	mov    eax,ds:0x100b048
 1003a10:	xor    eax,ebp
 1003a12:	push   eax
 1003a13:	push   DWORD PTR [ebp-0x4]
 1003a16:	mov    DWORD PTR [ebp-0x4],0xffffffff
 1003a1d:	lea    eax,[ebp-0xc]
 1003a20:	mov    fs:0x0,eax
 1003a26:	ret    
 1003a27:	int3   
 1003a28:	int3   
 1003a29:	int3   
 1003a2a:	int3   
 1003a2b:	int3   
 1003a2c:	push   eax
 1003a2d:	push   DWORD PTR fs:0x0
 1003a34:	lea    eax,[esp+0xc]
 1003a38:	sub    esp,DWORD PTR [esp+0xc]
 1003a3c:	push   ebx
 1003a3d:	push   esi
 1003a3e:	push   edi
 1003a3f:	mov    DWORD PTR [eax],ebp
 1003a41:	mov    ebp,eax
 1003a43:	mov    eax,ds:0x100b048
 1003a48:	xor    eax,ebp
 1003a4a:	push   eax
 1003a4b:	mov    DWORD PTR [ebp-0x10],esp
 1003a4e:	push   DWORD PTR [ebp-0x4]
 1003a51:	mov    DWORD PTR [ebp-0x4],0xffffffff
 1003a58:	lea    eax,[ebp-0xc]
 1003a5b:	mov    fs:0x0,eax
 1003a61:	ret    
 1003a62:	int3   
 1003a63:	int3   
 1003a64:	int3   
 1003a65:	int3   
 1003a66:	int3   
 1003a67:	push   eax
 1003a68:	push   DWORD PTR fs:0x0
 1003a6f:	lea    eax,[esp+0xc]
 1003a73:	sub    esp,DWORD PTR [esp+0xc]
 1003a77:	push   ebx
 1003a78:	push   esi
 1003a79:	push   edi
 1003a7a:	mov    DWORD PTR [eax],ebp
 1003a7c:	mov    ebp,eax
 1003a7e:	mov    eax,ds:0x100b048
 1003a83:	xor    eax,ebp
 1003a85:	push   eax
 1003a86:	mov    DWORD PTR [ebp-0x10],eax
 1003a89:	push   DWORD PTR [ebp-0x4]
 1003a8c:	mov    DWORD PTR [ebp-0x4],0xffffffff
 1003a93:	lea    eax,[ebp-0xc]
 1003a96:	mov    fs:0x0,eax
 1003a9c:	ret    
 1003a9d:	int3   
 1003a9e:	int3   
 1003a9f:	int3   
 1003aa0:	int3   
 1003aa1:	int3   
 1003aa2:	mov    ecx,DWORD PTR [ebp-0xc]
 1003aa5:	mov    DWORD PTR fs:0x0,ecx
 1003aac:	pop    ecx
 1003aad:	pop    edi
 1003aae:	pop    edi
 1003aaf:	pop    esi
 1003ab0:	pop    ebx
 1003ab1:	mov    esp,ebp
 1003ab3:	pop    ebp
 1003ab4:	push   ecx
 1003ab5:	ret    
 1003ab6:	int3   
 1003ab7:	int3   
 1003ab8:	int3   
 1003ab9:	int3   
 1003aba:	int3   
 1003abb:	mov    ecx,DWORD PTR [ebp-0x10]
 1003abe:	xor    ecx,ebp
 1003ac0:	call   0x1003983
 1003ac5:	jmp    0x1003aa2
 1003aca:	int3   
 1003acb:	int3   
 1003acc:	int3   
 1003acd:	int3   
 1003ace:	int3   
 1003acf:	int3   
 1003ad0:	push   0x1003b37
 1003ad5:	push   DWORD PTR fs:0x0
 1003adc:	mov    eax,DWORD PTR [esp+0x10]
 1003ae0:	mov    DWORD PTR [esp+0x10],ebp
 1003ae4:	lea    ebp,[esp+0x10]
 1003ae8:	sub    esp,eax
 1003aea:	push   ebx
 1003aeb:	push   esi
 1003aec:	push   edi
 1003aed:	mov    eax,ds:0x100b048
 1003af2:	xor    DWORD PTR [ebp-0x4],eax
 1003af5:	xor    eax,ebp
 1003af7:	mov    DWORD PTR [ebp-0x1c],eax
 1003afa:	push   eax
 1003afb:	mov    DWORD PTR [ebp-0x18],esp
 1003afe:	push   DWORD PTR [ebp-0x8]
 1003b01:	mov    eax,DWORD PTR [ebp-0x4]
 1003b04:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1003b0b:	mov    DWORD PTR [ebp-0x8],eax
 1003b0e:	lea    eax,[ebp-0x10]
 1003b11:	mov    fs:0x0,eax
 1003b17:	ret    
 1003b18:	mov    ecx,DWORD PTR [ebp-0x1c]
 1003b1b:	xor    ecx,ebp
 1003b1d:	call   0x1003983
 1003b22:	jmp    0x1003ec5
 1003b27:	int3   
 1003b28:	int3   
 1003b29:	int3   
 1003b2a:	int3   
 1003b2b:	int3   
 1003b2c:	jmp    DWORD PTR ds:0x10011b4
 1003b32:	int3   
 1003b33:	int3   
 1003b34:	int3   
 1003b35:	int3   
 1003b36:	int3   
 1003b37:	mov    edi,edi
 1003b39:	push   ebp
 1003b3a:	mov    ebp,esp
 1003b3c:	push   DWORD PTR [ebp+0x14]
 1003b3f:	push   DWORD PTR [ebp+0x10]
 1003b42:	push   DWORD PTR [ebp+0xc]
 1003b45:	push   DWORD PTR [ebp+0x8]
 1003b48:	push   0x1003983
 1003b4d:	push   0x100b048
 1003b52:	call   0x1003fd4
 1003b57:	add    esp,0x18
 1003b5a:	pop    ebp
 1003b5b:	ret    
 1003b5c:	int3   
 1003b5d:	int3   
 1003b5e:	int3   
 1003b5f:	int3   
 1003b60:	int3   
 1003b61:	int3   
 1003b62:	jmp    DWORD PTR ds:0x10011b8
 1003b68:	int3   
 1003b69:	int3   
 1003b6a:	int3   
 1003b6b:	int3   
 1003b6c:	int3   
 1003b6d:	int3   
 1003b6e:	jmp    DWORD PTR ds:0x10011c0
 1003b74:	int3   
 1003b75:	int3   
 1003b76:	int3   
 1003b77:	int3   
 1003b78:	int3   
 1003b79:	int3   
 1003b7a:	int3   
 1003b7b:	int3   
 1003b7c:	int3   
 1003b7d:	int3   
 1003b7e:	int3   
 1003b7f:	int3   
 1003b80:	int3   
 1003b81:	int3   
 1003b82:	int3   
 1003b83:	int3   
 1003b84:	int3   
 1003b85:	mov    edi,edi
 1003b87:	push   ebp
 1003b88:	mov    ebp,esp
 1003b8a:	mov    eax,DWORD PTR [ebp+0x8]
 1003b8d:	mov    eax,DWORD PTR [eax]
 1003b8f:	cmp    DWORD PTR [eax],0xe06d7363
 1003b95:	jne    0x1003bc1
 1003b97:	cmp    DWORD PTR [eax+0x10],0x3
 1003b9b:	jne    0x1003bc1
 1003b9d:	mov    eax,DWORD PTR [eax+0x14]
 1003ba0:	cmp    eax,0x19930520
 1003ba5:	je     0x1003bbc
 1003ba7:	cmp    eax,0x19930521
 1003bac:	je     0x1003bbc
 1003bae:	cmp    eax,0x19930522
 1003bb3:	je     0x1003bbc
 1003bb5:	cmp    eax,0x1994000
 1003bba:	jne    0x1003bc1
 1003bbc:	call   0x1003fbc
 1003bc1:	xor    eax,eax
 1003bc3:	pop    ebp
 1003bc4:	ret    0x4
 1003bc7:	int3   
 1003bc8:	int3   
 1003bc9:	int3   
 1003bca:	int3   
 1003bcb:	int3   
 1003bcc:	push   0x1003b85
 1003bd1:	call   DWORD PTR ds:0x100111c
 1003bd7:	xor    eax,eax
 1003bd9:	ret    
 1003bda:	int3   
 1003bdb:	int3   
 1003bdc:	int3   
 1003bdd:	int3   
 1003bde:	int3   
 1003bdf:	int3   
 1003be0:	jmp    DWORD PTR ds:0x10011c4
 1003be6:	int3   
 1003be7:	int3   
 1003be8:	int3   
 1003be9:	int3   
 1003bea:	int3   
 1003beb:	push   0x14
 1003bed:	push   0x1008d80
 1003bf2:	call   0x1003e80
 1003bf7:	push   DWORD PTR ds:0x100c91c
 1003bfd:	mov    esi,DWORD PTR ds:0x100115c
 1003c03:	call   esi
 1003c05:	mov    DWORD PTR [ebp-0x1c],eax
 1003c08:	cmp    eax,0xffffffff
 1003c0b:	jne    0x1003c19
 1003c0d:	push   DWORD PTR [ebp+0x8]
 1003c10:	call   DWORD PTR ds:0x1001214
 1003c16:	pop    ecx
 1003c17:	jmp    0x1003c7d
 1003c19:	push   0x8
 1003c1b:	call   0x1003ff8
 1003c20:	pop    ecx
 1003c21:	and    DWORD PTR [ebp-0x4],0x0
 1003c25:	push   DWORD PTR ds:0x100c91c
 1003c2b:	call   esi
 1003c2d:	mov    DWORD PTR [ebp-0x1c],eax
 1003c30:	push   DWORD PTR ds:0x100c918
 1003c36:	call   esi
 1003c38:	mov    DWORD PTR [ebp-0x20],eax
 1003c3b:	lea    eax,[ebp-0x20]
 1003c3e:	push   eax
 1003c3f:	lea    eax,[ebp-0x1c]
 1003c42:	push   eax
 1003c43:	push   DWORD PTR [ebp+0x8]
 1003c46:	mov    esi,DWORD PTR ds:0x1001148
 1003c4c:	call   esi
 1003c4e:	push   eax
 1003c4f:	call   0x1003fec
 1003c54:	add    esp,0xc
 1003c57:	mov    DWORD PTR [ebp-0x24],eax
 1003c5a:	push   DWORD PTR [ebp-0x1c]
 1003c5d:	call   esi
 1003c5f:	mov    ds:0x100c91c,eax
 1003c64:	push   DWORD PTR [ebp-0x20]
 1003c67:	call   esi
 1003c69:	mov    ds:0x100c918,eax
 1003c6e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1003c75:	call   0x1003c83
 1003c7a:	mov    eax,DWORD PTR [ebp-0x24]
 1003c7d:	call   0x1003ec5
 1003c82:	ret    
 1003c83:	push   0x8
 1003c85:	call   0x1003fe0
 1003c8a:	pop    ecx
 1003c8b:	ret    
 1003c8c:	int3   
 1003c8d:	int3   
 1003c8e:	int3   
 1003c8f:	int3   
 1003c90:	int3   
 1003c91:	mov    edi,edi
 1003c93:	push   ebp
 1003c94:	mov    ebp,esp
 1003c96:	push   DWORD PTR [ebp+0x8]
 1003c99:	call   0x1003beb
 1003c9e:	neg    eax
 1003ca0:	sbb    eax,eax
 1003ca2:	neg    eax
 1003ca4:	pop    ecx
 1003ca5:	dec    eax
 1003ca6:	pop    ebp
 1003ca7:	ret    
 1003ca8:	int3   
 1003ca9:	int3   
 1003caa:	int3   
 1003cab:	int3   
 1003cac:	int3   
 1003cad:	mov    edi,edi
 1003caf:	push   esi
 1003cb0:	mov    eax,0x1002ac4
 1003cb5:	mov    esi,0x1002ac4
 1003cba:	push   edi
 1003cbb:	mov    edi,eax
 1003cbd:	cmp    eax,esi
 1003cbf:	jae    0x1003cd0
 1003cc1:	mov    eax,DWORD PTR [edi]
 1003cc3:	test   eax,eax
 1003cc5:	je     0x1003cc9
 1003cc7:	call   eax
 1003cc9:	add    edi,0x4
 1003ccc:	cmp    edi,esi
 1003cce:	jb     0x1003cc1
 1003cd0:	pop    edi
 1003cd1:	pop    esi
 1003cd2:	ret    
 1003cd3:	int3   
 1003cd4:	int3   
 1003cd5:	int3   
 1003cd6:	int3   
 1003cd7:	int3   
 1003cd8:	mov    edi,edi
 1003cda:	push   esi
 1003cdb:	mov    eax,0x1002acc
 1003ce0:	mov    esi,0x1002acc
 1003ce5:	push   edi
 1003ce6:	mov    edi,eax
 1003ce8:	cmp    eax,esi
 1003cea:	jae    0x1003cfb
 1003cec:	mov    eax,DWORD PTR [edi]
 1003cee:	test   eax,eax
 1003cf0:	je     0x1003cf4
 1003cf2:	call   eax
 1003cf4:	add    edi,0x4
 1003cf7:	cmp    edi,esi
 1003cf9:	jb     0x1003cec
 1003cfb:	pop    edi
 1003cfc:	pop    esi
 1003cfd:	ret    
 1003cfe:	int3   
 1003cff:	int3   
 1003d00:	int3   
 1003d01:	int3   
 1003d02:	int3   
 1003d03:	int3   
 1003d04:	jmp    DWORD PTR ds:0x10011d4
 1003d0a:	int3   
 1003d0b:	int3   
 1003d0c:	int3   
 1003d0d:	int3   
 1003d0e:	int3   
 1003d0f:	int3   
 1003d10:	mov    edi,edi
 1003d12:	push   ebp
 1003d13:	mov    ebp,esp
 1003d15:	mov    ecx,DWORD PTR [ebp+0x8]
 1003d18:	mov    eax,0x5a4d
 1003d1d:	cmp    WORD PTR [ecx],ax
 1003d20:	je     0x1003d26
 1003d22:	xor    eax,eax
 1003d24:	pop    ebp
 1003d25:	ret    
 1003d26:	mov    eax,DWORD PTR [ecx+0x3c]
 1003d29:	add    eax,ecx
 1003d2b:	cmp    DWORD PTR [eax],0x4550
 1003d31:	jne    0x1003d22
 1003d33:	xor    edx,edx
 1003d35:	mov    ecx,0x10b
 1003d3a:	cmp    WORD PTR [eax+0x18],cx
 1003d3e:	sete   dl
 1003d41:	mov    eax,edx
 1003d43:	pop    ebp
 1003d44:	ret    
 1003d45:	int3   
 1003d46:	int3   
 1003d47:	int3   
 1003d48:	int3   
 1003d49:	int3   
 1003d4a:	int3   
 1003d4b:	int3   
 1003d4c:	int3   
 1003d4d:	int3   
 1003d4e:	int3   
 1003d4f:	int3   
 1003d50:	mov    edi,edi
 1003d52:	push   ebp
 1003d53:	mov    ebp,esp
 1003d55:	mov    eax,DWORD PTR [ebp+0x8]
 1003d58:	mov    ecx,DWORD PTR [eax+0x3c]
 1003d5b:	add    ecx,eax
 1003d5d:	movzx  eax,WORD PTR [ecx+0x14]
 1003d61:	push   ebx
 1003d62:	push   esi
 1003d63:	movzx  esi,WORD PTR [ecx+0x6]
 1003d67:	xor    edx,edx
 1003d69:	push   edi
 1003d6a:	lea    eax,[eax+ecx*1+0x18]
 1003d6e:	test   esi,esi
 1003d70:	je     0x1003d8d
 1003d72:	mov    edi,DWORD PTR [ebp+0xc]
 1003d75:	mov    ecx,DWORD PTR [eax+0xc]
 1003d78:	cmp    edi,ecx
 1003d7a:	jb     0x1003d85
 1003d7c:	mov    ebx,DWORD PTR [eax+0x8]
 1003d7f:	add    ebx,ecx
 1003d81:	cmp    edi,ebx
 1003d83:	jb     0x1003d8f
 1003d85:	inc    edx
 1003d86:	add    eax,0x28
 1003d89:	cmp    edx,esi
 1003d8b:	jb     0x1003d75
 1003d8d:	xor    eax,eax
 1003d8f:	pop    edi
 1003d90:	pop    esi
 1003d91:	pop    ebx
 1003d92:	pop    ebp
 1003d93:	ret    
 1003d94:	int3   
 1003d95:	int3   
 1003d96:	int3   
 1003d97:	int3   
 1003d98:	int3   
 1003d99:	int3   
 1003d9a:	int3   
 1003d9b:	int3   
 1003d9c:	int3   
 1003d9d:	int3   
 1003d9e:	int3   
 1003d9f:	int3   
 1003da0:	mov    edi,edi
 1003da2:	push   ebp
 1003da3:	mov    ebp,esp
 1003da5:	push   0xfffffffe
 1003da7:	push   0x1008da0
 1003dac:	push   0x1003b37
 1003db1:	mov    eax,fs:0x0
 1003db7:	push   eax
 1003db8:	sub    esp,0x8
 1003dbb:	push   ebx
 1003dbc:	push   esi
 1003dbd:	push   edi
 1003dbe:	mov    eax,ds:0x100b048
 1003dc3:	xor    DWORD PTR [ebp-0x8],eax
 1003dc6:	xor    eax,ebp
 1003dc8:	push   eax
 1003dc9:	lea    eax,[ebp-0x10]
 1003dcc:	mov    fs:0x0,eax
 1003dd2:	mov    DWORD PTR [ebp-0x18],esp
 1003dd5:	mov    DWORD PTR [ebp-0x4],0x0
 1003ddc:	push   0x1000000
 1003de1:	call   0x1003d10
 1003de6:	add    esp,0x4
 1003de9:	test   eax,eax
 1003deb:	je     0x1003e41
 1003ded:	mov    eax,DWORD PTR [ebp+0x8]
 1003df0:	sub    eax,0x1000000
 1003df5:	push   eax
 1003df6:	push   0x1000000
 1003dfb:	call   0x1003d50
 1003e00:	add    esp,0x8
 1003e03:	test   eax,eax
 1003e05:	je     0x1003e41
 1003e07:	mov    eax,DWORD PTR [eax+0x24]
 1003e0a:	shr    eax,0x1f
 1003e0d:	not    eax
 1003e0f:	and    eax,0x1
 1003e12:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1003e19:	mov    ecx,DWORD PTR [ebp-0x10]
 1003e1c:	mov    DWORD PTR fs:0x0,ecx
 1003e23:	pop    ecx
 1003e24:	pop    edi
 1003e25:	pop    esi
 1003e26:	pop    ebx
 1003e27:	mov    esp,ebp
 1003e29:	pop    ebp
 1003e2a:	ret    
 1003e2b:	mov    eax,DWORD PTR [ebp-0x14]
 1003e2e:	mov    ecx,DWORD PTR [eax]
 1003e30:	xor    edx,edx
 1003e32:	cmp    DWORD PTR [ecx],0xc0000005
 1003e38:	sete   dl
 1003e3b:	mov    eax,edx
 1003e3d:	ret    
 1003e3e:	mov    esp,DWORD PTR [ebp-0x18]
 1003e41:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1003e48:	xor    eax,eax
 1003e4a:	mov    ecx,DWORD PTR [ebp-0x10]
 1003e4d:	mov    DWORD PTR fs:0x0,ecx
 1003e54:	pop    ecx
 1003e55:	pop    edi
 1003e56:	pop    esi
 1003e57:	pop    ebx
 1003e58:	mov    esp,ebp
 1003e5a:	pop    ebp
 1003e5b:	ret    
 1003e5c:	int3   
 1003e5d:	int3   
 1003e5e:	int3   
 1003e5f:	int3   
 1003e60:	int3   
 1003e61:	int3   
 1003e62:	jmp    DWORD PTR ds:0x10011e0
 1003e68:	int3   
 1003e69:	int3   
 1003e6a:	int3   
 1003e6b:	int3   
 1003e6c:	int3   
 1003e6d:	int3   
 1003e6e:	jmp    DWORD PTR ds:0x10011e4
 1003e74:	int3   
 1003e75:	int3   
 1003e76:	int3   
 1003e77:	int3   
 1003e78:	int3   
 1003e79:	int3   
 1003e7a:	int3   
 1003e7b:	int3   
 1003e7c:	int3   
 1003e7d:	int3   
 1003e7e:	int3   
 1003e7f:	int3   
 1003e80:	push   0x1003b37
 1003e85:	push   DWORD PTR fs:0x0
 1003e8c:	mov    eax,DWORD PTR [esp+0x10]
 1003e90:	mov    DWORD PTR [esp+0x10],ebp
 1003e94:	lea    ebp,[esp+0x10]
 1003e98:	sub    esp,eax
 1003e9a:	push   ebx
 1003e9b:	push   esi
 1003e9c:	push   edi
 1003e9d:	mov    eax,ds:0x100b048
 1003ea2:	xor    DWORD PTR [ebp-0x4],eax
 1003ea5:	xor    eax,ebp
 1003ea7:	push   eax
 1003ea8:	mov    DWORD PTR [ebp-0x18],esp
 1003eab:	push   DWORD PTR [ebp-0x8]
 1003eae:	mov    eax,DWORD PTR [ebp-0x4]
 1003eb1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1003eb8:	mov    DWORD PTR [ebp-0x8],eax
 1003ebb:	lea    eax,[ebp-0x10]
 1003ebe:	mov    fs:0x0,eax
 1003ec4:	ret    
 1003ec5:	mov    ecx,DWORD PTR [ebp-0x10]
 1003ec8:	mov    DWORD PTR fs:0x0,ecx
 1003ecf:	pop    ecx
 1003ed0:	pop    edi
 1003ed1:	pop    edi
 1003ed2:	pop    esi
 1003ed3:	pop    ebx
 1003ed4:	mov    esp,ebp
 1003ed6:	pop    ebp
 1003ed7:	push   ecx
 1003ed8:	ret    
 1003ed9:	int3   
 1003eda:	int3   
 1003edb:	int3   
 1003edc:	int3   
 1003edd:	int3   
 1003ede:	mov    edi,edi
 1003ee0:	push   esi
 1003ee1:	push   0x30000
 1003ee6:	push   0x10000
 1003eeb:	xor    esi,esi
 1003eed:	push   esi
 1003eee:	call   0x1004010
 1003ef3:	add    esp,0xc
 1003ef6:	test   eax,eax
 1003ef8:	je     0x1003f04
 1003efa:	push   esi
 1003efb:	push   esi
 1003efc:	push   esi
 1003efd:	push   esi
 1003efe:	push   esi
 1003eff:	call   0x1004004
 1003f04:	pop    esi
 1003f05:	ret    
 1003f06:	int3   
 1003f07:	int3   
 1003f08:	int3   
 1003f09:	int3   
 1003f0a:	int3   
 1003f0b:	xor    eax,eax
 1003f0d:	ret    
 1003f0e:	int3   
 1003f0f:	int3   
 1003f10:	int3   
 1003f11:	int3   
 1003f12:	int3   
 1003f13:	xor    eax,eax
 1003f15:	ret    
 1003f16:	int3   
 1003f17:	int3   
 1003f18:	int3   
 1003f19:	int3   
 1003f1a:	int3   
 1003f1b:	mov    edi,edi
 1003f1d:	push   ebp
 1003f1e:	mov    ebp,esp
 1003f20:	sub    esp,0x10
 1003f23:	mov    eax,ds:0x100b048
 1003f28:	and    DWORD PTR [ebp-0x8],0x0
 1003f2c:	and    DWORD PTR [ebp-0x4],0x0
 1003f30:	push   ebx
 1003f31:	push   edi
 1003f32:	mov    edi,0xbb40e64e
 1003f37:	mov    ebx,0xffff0000
 1003f3c:	cmp    eax,edi
 1003f3e:	je     0x1003f4d
 1003f40:	test   ebx,eax
 1003f42:	je     0x1003f4d
 1003f44:	not    eax
 1003f46:	mov    ds:0x100b04c,eax
 1003f4b:	jmp    0x1003fb2
 1003f4d:	push   esi
 1003f4e:	lea    eax,[ebp-0x8]
 1003f51:	push   eax
 1003f52:	call   DWORD PTR ds:0x1001108
 1003f58:	mov    esi,DWORD PTR [ebp-0x4]
 1003f5b:	xor    esi,DWORD PTR [ebp-0x8]
 1003f5e:	call   DWORD PTR ds:0x1001168
 1003f64:	xor    esi,eax
 1003f66:	call   DWORD PTR ds:0x1001118
 1003f6c:	xor    esi,eax
 1003f6e:	call   DWORD PTR ds:0x1001164
 1003f74:	xor    esi,eax
 1003f76:	lea    eax,[ebp-0x10]
 1003f79:	push   eax
 1003f7a:	call   DWORD PTR ds:0x1001160
 1003f80:	mov    eax,DWORD PTR [ebp-0xc]
 1003f83:	xor    eax,DWORD PTR [ebp-0x10]
 1003f86:	xor    esi,eax
 1003f88:	cmp    esi,edi
 1003f8a:	jne    0x1003f93
 1003f8c:	mov    esi,0xbb40e64f
 1003f91:	jmp    0x1003fa3
 1003f93:	test   ebx,esi
 1003f95:	jne    0x1003fa3
 1003f97:	mov    eax,esi
 1003f99:	or     eax,0x4711
 1003f9e:	shl    eax,0x10
 1003fa1:	or     esi,eax
 1003fa3:	mov    DWORD PTR ds:0x100b048,esi
 1003fa9:	not    esi
 1003fab:	mov    DWORD PTR ds:0x100b04c,esi
 1003fb1:	pop    esi
 1003fb2:	pop    edi
 1003fb3:	pop    ebx
 1003fb4:	leave  
 1003fb5:	ret    
 1003fb6:	int3   
 1003fb7:	int3   
 1003fb8:	int3   
 1003fb9:	int3   
 1003fba:	int3   
 1003fbb:	int3   
 1003fbc:	jmp    DWORD PTR ds:0x10011fc
 1003fc2:	int3   
 1003fc3:	int3   
 1003fc4:	int3   
 1003fc5:	int3   
 1003fc6:	int3   
 1003fc7:	int3   
 1003fc8:	jmp    DWORD PTR ds:0x1001200
 1003fce:	int3   
 1003fcf:	int3   
 1003fd0:	int3   
 1003fd1:	int3   
 1003fd2:	int3   
 1003fd3:	int3   
 1003fd4:	jmp    DWORD PTR ds:0x1001204
 1003fda:	int3   
 1003fdb:	int3   
 1003fdc:	int3   
 1003fdd:	int3   
 1003fde:	int3   
 1003fdf:	int3   
 1003fe0:	jmp    DWORD PTR ds:0x1001208
 1003fe6:	int3   
 1003fe7:	int3   
 1003fe8:	int3   
 1003fe9:	int3   
 1003fea:	int3   
 1003feb:	int3   
 1003fec:	jmp    DWORD PTR ds:0x100120c
 1003ff2:	int3   
 1003ff3:	int3   
 1003ff4:	int3   
 1003ff5:	int3   
 1003ff6:	int3   
 1003ff7:	int3   
 1003ff8:	jmp    DWORD PTR ds:0x1001210
 1003ffe:	int3   
 1003fff:	int3   
 1004000:	int3   
 1004001:	int3   
 1004002:	int3   
 1004003:	int3   
 1004004:	jmp    DWORD PTR ds:0x1001218
 100400a:	int3   
 100400b:	int3   
 100400c:	int3   
 100400d:	int3   
 100400e:	int3   
 100400f:	int3   
 1004010:	jmp    DWORD PTR ds:0x100121c
 1004016:	int3   
 1004017:	int3   
 1004018:	int3   
 1004019:	int3   
 100401a:	int3   
 100401b:	int3   
 100401c:	jmp    DWORD PTR ds:0x1001220
 1004022:	int3   
 1004023:	int3   
 1004024:	int3   
 1004025:	int3   
 1004026:	int3   
 1004027:	mov    edi,edi
 1004029:	push   esi
 100402a:	xor    esi,esi
 100402c:	push   esi
 100402d:	push   ecx
 100402e:	call   DWORD PTR ds:0x1001104
 1004034:	test   eax,eax
 1004036:	jne    0x1004050
 1004038:	call   DWORD PTR ds:0x1001114
 100403e:	mov    esi,eax
 1004040:	test   esi,esi
 1004042:	jle    0x1004050
 1004044:	and    esi,0xffff
 100404a:	or     esi,0x80070000
 1004050:	mov    eax,esi
 1004052:	pop    esi
 1004053:	ret    
 1004054:	int3   
 1004055:	int3   
 1004056:	int3   
 1004057:	int3   
 1004058:	int3   
 1004059:	mov    edi,edi
 100405b:	push   esi
 100405c:	mov    esi,ecx
 100405e:	cmp    DWORD PTR [esi],0x0
 1004061:	je     0x100406e
 1004063:	push   DWORD PTR [esi]
 1004065:	call   0x100396c
 100406a:	and    DWORD PTR [esi],0x0
 100406d:	pop    ecx
 100406e:	and    DWORD PTR [esi+0x4],0x0
 1004072:	and    DWORD PTR [esi+0x8],0x0
 1004076:	pop    esi
 1004077:	ret    
 1004078:	int3   
 1004079:	int3   
 100407a:	int3   
 100407b:	int3   
 100407c:	int3   
 100407d:	mov    edi,edi
 100407f:	push   esi
 1004080:	push   edi
 1004081:	mov    esi,ecx
 1004083:	push   0x18
 1004085:	xor    edi,edi
 1004087:	lea    eax,[esi+0x14]
 100408a:	push   edi
 100408b:	push   eax
 100408c:	call   0x1003b62
 1004091:	add    esp,0xc
 1004094:	mov    DWORD PTR [esi+0x2c],edi
 1004097:	mov    DWORD PTR [esi+0x30],edi
 100409a:	mov    DWORD PTR [esi+0x34],edi
 100409d:	pop    edi
 100409e:	mov    eax,esi
 10040a0:	pop    esi
 10040a1:	ret    
 10040a2:	int3   
 10040a3:	int3   
 10040a4:	int3   
 10040a5:	int3   
 10040a6:	int3   
 10040a7:	mov    edi,edi
 10040a9:	push   esi
 10040aa:	mov    esi,ecx
 10040ac:	call   0x100407d
 10040b1:	mov    eax,0x1000000
 10040b6:	lea    ecx,[esi+0x14]
 10040b9:	mov    DWORD PTR [esi],0x38
 10040bf:	mov    DWORD PTR [esi+0x8],eax
 10040c2:	mov    DWORD PTR [esi+0x4],eax
 10040c5:	mov    DWORD PTR [esi+0xc],0xa00
 10040cc:	mov    DWORD PTR [esi+0x10],0x1001490
 10040d3:	call   0x1004027
 10040d8:	test   eax,eax
 10040da:	jns    0x10040e3
 10040dc:	mov    BYTE PTR ds:0x100b0e0,0x1
 10040e3:	mov    eax,esi
 10040e5:	pop    esi
 10040e6:	ret    
 10040e7:	int3   
 10040e8:	int3   
 10040e9:	int3   
 10040ea:	int3   
 10040eb:	int3   
 10040ec:	mov    edi,edi
 10040ee:	push   esi
 10040ef:	mov    esi,ecx
 10040f1:	lea    eax,[esi+0x14]
 10040f4:	push   eax
 10040f5:	call   DWORD PTR ds:0x100112c
 10040fb:	lea    ecx,[esi+0x2c]
 10040fe:	pop    esi
 10040ff:	jmp    0x1004059
 1004104:	int3   
 1004105:	int3   
 1004106:	int3   
 1004107:	int3   
 1004108:	int3   
 1004109:	mov    edi,edi
 100410b:	push   ebp
 100410c:	mov    ebp,esp
 100410e:	push   ecx
 100410f:	push   ebx
 1004110:	push   esi
 1004111:	mov    esi,DWORD PTR [ebp+0xc]
 1004114:	push   edi
 1004115:	mov    edi,DWORD PTR [ebp+0x10]
 1004118:	mov    eax,DWORD PTR [edi]
 100411a:	add    eax,eax
 100411c:	mov    DWORD PTR [ebp-0x4],eax
 100411f:	lea    eax,[ebp-0x4]
 1004122:	push   eax
 1004123:	push   esi
 1004124:	lea    eax,[ebp+0x10]
 1004127:	push   eax
 1004128:	xor    ebx,ebx
 100412a:	push   ebx
 100412b:	push   DWORD PTR [ebp+0x8]
 100412e:	mov    DWORD PTR [edi],ebx
 1004130:	push   DWORD PTR [ecx]
 1004132:	call   DWORD PTR ds:0x1001004
 1004138:	test   eax,eax
 100413a:	jne    0x1004175
 100413c:	cmp    DWORD PTR [ebp+0x10],0x1
 1004140:	je     0x100414d
 1004142:	cmp    DWORD PTR [ebp+0x10],0x2
 1004146:	je     0x100414d
 1004148:	push   0xd
 100414a:	pop    eax
 100414b:	jmp    0x1004175
 100414d:	mov    ecx,DWORD PTR [ebp-0x4]
 1004150:	test   esi,esi
 1004152:	je     0x100416f
 1004154:	test   ecx,ecx
 1004156:	je     0x100416a
 1004158:	test   cl,0x1
 100415b:	jne    0x1004148
 100415d:	mov    eax,ecx
 100415f:	shr    eax,1
 1004161:	cmp    WORD PTR [esi+eax*2-0x2],bx
 1004166:	je     0x100416f
 1004168:	jmp    0x1004148
 100416a:	xor    eax,eax
 100416c:	mov    WORD PTR [esi],ax
 100416f:	shr    ecx,1
 1004171:	mov    DWORD PTR [edi],ecx
 1004173:	xor    eax,eax
 1004175:	pop    edi
 1004176:	pop    esi
 1004177:	pop    ebx
 1004178:	leave  
 1004179:	ret    0xc
 100417c:	int3   
 100417d:	int3   
 100417e:	int3   
 100417f:	int3   
 1004180:	int3   
 1004181:	ret    
 1004182:	int3   
 1004183:	int3   
 1004184:	int3   
 1004185:	int3   
 1004186:	int3   
 1004187:	ret    
 1004188:	int3   
 1004189:	int3   
 100418a:	int3   
 100418b:	int3   
 100418c:	int3   
 100418d:	mov    edi,edi
 100418f:	push   ebp
 1004190:	mov    ebp,esp
 1004192:	push   DWORD PTR [ebp+0x14]
 1004195:	push   DWORD PTR [ebp+0x10]
 1004198:	push   DWORD PTR [ebp+0xc]
 100419b:	push   DWORD PTR [ebp+0x8]
 100419e:	call   0x10081dc
 10041a3:	push   eax
 10041a4:	call   0x1002af4
 10041a9:	add    esp,0x14
 10041ac:	pop    ebp
 10041ad:	ret    
 10041ae:	int3   
 10041af:	int3   
 10041b0:	int3   
 10041b1:	int3   
 10041b2:	int3   
 10041b3:	mov    edi,edi
 10041b5:	push   ebp
 10041b6:	mov    ebp,esp
 10041b8:	push   DWORD PTR [ebp+0xc]
 10041bb:	push   DWORD PTR [ebp+0x8]
 10041be:	call   DWORD PTR ds:0x10010f8
 10041c4:	test   eax,eax
 10041c6:	jne    0x10041ca
 10041c8:	pop    ebp
 10041c9:	ret    
 10041ca:	push   esi
 10041cb:	push   eax
 10041cc:	call   DWORD PTR ds:0x1001100
 10041d2:	mov    esi,eax
 10041d4:	test   esi,esi
 10041d6:	je     0x1004203
 10041d8:	push   DWORD PTR [ebp+0xc]
 10041db:	push   DWORD PTR [ebp+0x8]
 10041de:	call   DWORD PTR ds:0x10010f4
 10041e4:	mov    edx,DWORD PTR [ebp+0x10]
 10041e7:	lea    ecx,[esi+eax*1]
 10041ea:	and    edx,0xf
 10041ed:	jbe    0x10041ff
 10041ef:	cmp    esi,ecx
 10041f1:	jae    0x1004203
 10041f3:	movzx  eax,WORD PTR [esi]
 10041f6:	lea    esi,[esi+eax*2]
 10041f9:	add    esi,0x2
 10041fc:	dec    edx
 10041fd:	jne    0x10041ef
 10041ff:	cmp    esi,ecx
 1004201:	jb     0x1004207
 1004203:	xor    eax,eax
 1004205:	jmp    0x1004210
 1004207:	movzx  eax,WORD PTR [esi]
 100420a:	neg    eax
 100420c:	sbb    eax,eax
 100420e:	and    eax,esi
 1004210:	pop    esi
 1004211:	pop    ebp
 1004212:	ret    
 1004213:	int3   
 1004214:	int3   
 1004215:	int3   
 1004216:	int3   
 1004217:	int3   
 1004218:	mov    edi,edi
 100421a:	push   ebp
 100421b:	mov    ebp,esp
 100421d:	mov    eax,DWORD PTR [ebp+0xc]
 1004220:	shr    eax,0x4
 1004223:	inc    eax
 1004224:	movzx  eax,ax
 1004227:	push   0x6
 1004229:	push   eax
 100422a:	push   DWORD PTR [ebp+0x8]
 100422d:	call   DWORD PTR ds:0x10010d8
 1004233:	test   eax,eax
 1004235:	jne    0x1004239
 1004237:	pop    ebp
 1004238:	ret    
 1004239:	push   DWORD PTR [ebp+0xc]
 100423c:	push   eax
 100423d:	push   DWORD PTR [ebp+0x8]
 1004240:	call   0x10041b3
 1004245:	add    esp,0xc
 1004248:	pop    ebp
 1004249:	ret    
 100424a:	int3   
 100424b:	int3   
 100424c:	int3   
 100424d:	int3   
 100424e:	int3   
 100424f:	mov    edi,edi
 1004251:	push   ebp
 1004252:	mov    ebp,esp
 1004254:	push   esi
 1004255:	mov    esi,ecx
 1004257:	push   DWORD PTR [esi]
 1004259:	call   DWORD PTR ds:0x1001240
 100425f:	and    DWORD PTR [esi],0x0
 1004262:	push   esi
 1004263:	push   DWORD PTR [ebp+0xc]
 1004266:	push   DWORD PTR [ebp+0x8]
 1004269:	call   0x100427b
 100426e:	add    esp,0xc
 1004271:	pop    esi
 1004272:	pop    ebp
 1004273:	ret    0x8
 1004276:	int3   
 1004277:	int3   
 1004278:	int3   
 1004279:	int3   
 100427a:	int3   
 100427b:	mov    edi,edi
 100427d:	push   ebp
 100427e:	mov    ebp,esp
 1004280:	push   DWORD PTR [ebp+0xc]
 1004283:	push   DWORD PTR [ebp+0x8]
 1004286:	call   0x1004218
 100428b:	pop    ecx
 100428c:	pop    ecx
 100428d:	test   eax,eax
 100428f:	je     0x10042a6
 1004291:	movzx  ecx,WORD PTR [eax]
 1004294:	push   ecx
 1004295:	add    eax,0x2
 1004298:	push   eax
 1004299:	call   DWORD PTR ds:0x1001244
 100429f:	mov    ecx,DWORD PTR [ebp+0x10]
 10042a2:	mov    DWORD PTR [ecx],eax
 10042a4:	jmp    0x10042ac
 10042a6:	mov    ecx,DWORD PTR [ebp+0x10]
 10042a9:	and    DWORD PTR [ecx],0x0
 10042ac:	cmp    DWORD PTR [ecx],0x0
 10042af:	setne  al
 10042b2:	pop    ebp
 10042b3:	ret    
 10042b4:	int3   
 10042b5:	int3   
 10042b6:	int3   
 10042b7:	int3   
 10042b8:	int3   
 10042b9:	mov    edi,edi
 10042bb:	push   esi
 10042bc:	mov    esi,ecx
 10042be:	lea    eax,[esi+0xc]
 10042c1:	or     edx,0xffffffff
 10042c4:	lock xadd DWORD PTR [eax],edx
 10042c8:	dec    edx
 10042c9:	test   edx,edx
 10042cb:	jg     0x10042d5
 10042cd:	mov    ecx,DWORD PTR [esi]
 10042cf:	mov    eax,DWORD PTR [ecx]
 10042d1:	push   esi
 10042d2:	call   DWORD PTR [eax+0x4]
 10042d5:	pop    esi
 10042d6:	ret    
 10042d7:	int3   
 10042d8:	int3   
 10042d9:	int3   
 10042da:	int3   
 10042db:	int3   
 10042dc:	mov    edi,edi
 10042de:	push   ebp
 10042df:	mov    ebp,esp
 10042e1:	push   esi
 10042e2:	mov    esi,ecx
 10042e4:	mov    ecx,DWORD PTR [ebp+0x8]
 10042e7:	test   ecx,ecx
 10042e9:	jne    0x10042f5
 10042eb:	push   0x80004005
 10042f0:	call   0x1002ad5
 10042f5:	mov    eax,DWORD PTR [ecx]
 10042f7:	call   DWORD PTR [eax+0xc]
 10042fa:	add    eax,0x10
 10042fd:	mov    DWORD PTR [esi],eax
 10042ff:	mov    eax,esi
 1004301:	pop    esi
 1004302:	pop    ebp
 1004303:	ret    0x4
 1004306:	int3   
 1004307:	int3   
 1004308:	int3   
 1004309:	int3   
 100430a:	int3   
 100430b:	mov    edi,edi
 100430d:	push   ebp
 100430e:	mov    ebp,esp
 1004310:	mov    eax,DWORD PTR [ebp+0x14]
 1004313:	add    eax,eax
 1004315:	push   eax
 1004316:	push   DWORD PTR [ebp+0x10]
 1004319:	mov    eax,DWORD PTR [ebp+0xc]
 100431c:	add    eax,eax
 100431e:	push   eax
 100431f:	push   DWORD PTR [ebp+0x8]
 1004322:	call   DWORD PTR ds:0x100119c
 1004328:	add    esp,0x10
 100432b:	pop    ebp
 100432c:	ret    
 100432d:	int3   
 100432e:	int3   
 100432f:	int3   
 1004330:	int3   
 1004331:	int3   
 1004332:	push   0x8007000e
 1004337:	call   0x1002ad5
 100433c:	int3   
 100433d:	int3   
 100433e:	int3   
 100433f:	int3   
 1004340:	int3   
 1004341:	int3   
 1004342:	mov    edi,edi
 1004344:	push   ebp
 1004345:	mov    ebp,esp
 1004347:	push   ecx
 1004348:	mov    eax,ecx
 100434a:	push   ebx
 100434b:	mov    ebx,DWORD PTR [eax]
 100434d:	mov    ecx,DWORD PTR [ebx-0x10]
 1004350:	push   esi
 1004351:	mov    DWORD PTR [ebp-0x4],eax
 1004354:	mov    eax,DWORD PTR [ecx]
 1004356:	push   edi
 1004357:	mov    edi,DWORD PTR [ebx-0xc]
 100435a:	call   DWORD PTR [eax+0x10]
 100435d:	mov    esi,DWORD PTR [ebp+0x8]
 1004360:	mov    edx,DWORD PTR [eax]
 1004362:	push   0x2
 1004364:	push   esi
 1004365:	mov    ecx,eax
 1004367:	call   DWORD PTR [edx]
 1004369:	mov    DWORD PTR [ebp+0x8],eax
 100436c:	test   eax,eax
 100436e:	jne    0x1004375
 1004370:	call   0x1004332
 1004375:	cmp    edi,esi
 1004377:	jge    0x100437b
 1004379:	mov    esi,edi
 100437b:	lea    edx,[esi+0x1]
 100437e:	push   edx
 100437f:	push   ebx
 1004380:	lea    esi,[eax+0x10]
 1004383:	push   edx
 1004384:	push   esi
 1004385:	call   0x100430b
 100438a:	mov    eax,DWORD PTR [ebp+0x8]
 100438d:	add    esp,0x10
 1004390:	lea    ecx,[ebx-0x10]
 1004393:	mov    DWORD PTR [eax+0x4],edi
 1004396:	call   0x10042b9
 100439b:	mov    eax,DWORD PTR [ebp-0x4]
 100439e:	pop    edi
 100439f:	mov    DWORD PTR [eax],esi
 10043a1:	pop    esi
 10043a2:	pop    ebx
 10043a3:	leave  
 10043a4:	ret    0x4
 10043a7:	int3   
 10043a8:	int3   
 10043a9:	int3   
 10043aa:	int3   
 10043ab:	int3   
 10043ac:	mov    edi,edi
 10043ae:	push   ebp
 10043af:	mov    ebp,esp
 10043b1:	mov    edx,DWORD PTR [ebp+0x8]
 10043b4:	push   esi
 10043b5:	mov    esi,ecx
 10043b7:	test   edx,edx
 10043b9:	jns    0x10043c5
 10043bb:	push   0x80070057
 10043c0:	call   0x1002ad5
 10043c5:	mov    eax,DWORD PTR [esi]
 10043c7:	xor    ecx,ecx
 10043c9:	inc    ecx
 10043ca:	sub    ecx,DWORD PTR [eax-0x4]
 10043cd:	mov    eax,DWORD PTR [eax-0x8]
 10043d0:	sub    eax,edx
 10043d2:	or     ecx,eax
 10043d4:	jge    0x10043de
 10043d6:	push   edx
 10043d7:	mov    ecx,esi
 10043d9:	call   0x10043ea
 10043de:	mov    eax,DWORD PTR [esi]
 10043e0:	pop    esi
 10043e1:	pop    ebp
 10043e2:	ret    0x4
 10043e5:	int3   
 10043e6:	int3   
 10043e7:	int3   
 10043e8:	int3   
 10043e9:	int3   
 10043ea:	mov    edi,edi
 10043ec:	push   ebp
 10043ed:	mov    ebp,esp
 10043ef:	push   esi
 10043f0:	mov    esi,DWORD PTR [ebp+0x8]
 10043f3:	push   edi
 10043f4:	mov    edi,ecx
 10043f6:	mov    ecx,DWORD PTR [edi]
 10043f8:	cmp    DWORD PTR [ecx-0xc],esi
 10043fb:	jle    0x1004400
 10043fd:	mov    esi,DWORD PTR [ecx-0xc]
 1004400:	cmp    DWORD PTR [ecx-0x4],0x1
 1004404:	jle    0x1004410
 1004406:	push   esi
 1004407:	mov    ecx,edi
 1004409:	call   0x1004342
 100440e:	jmp    0x100443e
 1004410:	mov    ecx,DWORD PTR [ecx-0x8]
 1004413:	cmp    ecx,esi
 1004415:	jge    0x100443e
 1004417:	cmp    ecx,0x40000000
 100441d:	jle    0x1004427
 100441f:	add    ecx,0x100000
 1004425:	jmp    0x1004430
 1004427:	mov    eax,ecx
 1004429:	cdq    
 100442a:	sub    eax,edx
 100442c:	sar    eax,1
 100442e:	add    ecx,eax
 1004430:	cmp    ecx,esi
 1004432:	jge    0x1004436
 1004434:	mov    ecx,esi
 1004436:	push   ecx
 1004437:	mov    ecx,edi
 1004439:	call   0x1004449
 100443e:	pop    edi
 100443f:	pop    esi
 1004440:	pop    ebp
 1004441:	ret    0x4
 1004444:	int3   
 1004445:	int3   
 1004446:	int3   
 1004447:	int3   
 1004448:	int3   
 1004449:	mov    edi,edi
 100444b:	push   ebp
 100444c:	mov    ebp,esp
 100444e:	push   esi
 100444f:	mov    esi,DWORD PTR [ebp+0x8]
 1004452:	push   edi
 1004453:	mov    edi,ecx
 1004455:	mov    edx,DWORD PTR [edi]
 1004457:	sub    edx,0x10
 100445a:	mov    ecx,DWORD PTR [edx]
 100445c:	cmp    DWORD PTR [edx+0x8],esi
 100445f:	jge    0x1004472
 1004461:	test   esi,esi
 1004463:	jle    0x1004472
 1004465:	mov    eax,DWORD PTR [ecx]
 1004467:	push   0x2
 1004469:	push   esi
 100446a:	push   edx
 100446b:	call   DWORD PTR [eax+0x8]
 100446e:	test   eax,eax
 1004470:	jne    0x1004477
 1004472:	call   0x1004332
 1004477:	add    eax,0x10
 100447a:	mov    DWORD PTR [edi],eax
 100447c:	pop    edi
 100447d:	pop    esi
 100447e:	pop    ebp
 100447f:	ret    0x4
 1004482:	int3   
 1004483:	int3   
 1004484:	int3   
 1004485:	int3   
 1004486:	int3   
 1004487:	mov    edi,edi
 1004489:	push   ebp
 100448a:	mov    ebp,esp
 100448c:	mov    edx,DWORD PTR [ebp+0x8]
 100448f:	test   edx,edx
 1004491:	js     0x10044a9
 1004493:	mov    eax,DWORD PTR [ecx]
 1004495:	cmp    edx,DWORD PTR [eax-0x8]
 1004498:	jg     0x10044a9
 100449a:	mov    DWORD PTR [eax-0xc],edx
 100449d:	mov    eax,DWORD PTR [ecx]
 100449f:	xor    ecx,ecx
 10044a1:	mov    WORD PTR [eax+edx*2],cx
 10044a5:	pop    ebp
 10044a6:	ret    0x4
 10044a9:	push   0x80070057
 10044ae:	call   0x1002ad5
 10044b3:	int3   
 10044b4:	int3   
 10044b5:	int3   
 10044b6:	int3   
 10044b7:	int3   
 10044b8:	int3   
 10044b9:	mov    edi,edi
 10044bb:	push   ebp
 10044bc:	mov    ebp,esp
 10044be:	mov    ecx,DWORD PTR [ebp+0x14]
 10044c1:	cmp    ecx,0xffffffff
 10044c4:	jne    0x10044dc
 10044c6:	mov    ecx,DWORD PTR [ebp+0x10]
 10044c9:	lea    edx,[ecx+0x2]
 10044cc:	mov    ax,WORD PTR [ecx]
 10044cf:	add    ecx,0x2
 10044d2:	test   ax,ax
 10044d5:	jne    0x10044cc
 10044d7:	sub    ecx,edx
 10044d9:	sar    ecx,1
 10044db:	inc    ecx
 10044dc:	push   ecx
 10044dd:	push   DWORD PTR [ebp+0x10]
 10044e0:	push   DWORD PTR [ebp+0xc]
 10044e3:	push   DWORD PTR [ebp+0x8]
 10044e6:	call   0x100418d
 10044eb:	add    esp,0x10
 10044ee:	pop    ebp
 10044ef:	ret    
 10044f0:	int3   
 10044f1:	int3   
 10044f2:	int3   
 10044f3:	int3   
 10044f4:	int3   
 10044f5:	mov    ecx,DWORD PTR [ecx]
 10044f7:	sub    ecx,0x10
 10044fa:	jmp    0x10042b9
 10044ff:	int3   
 1004500:	int3   
 1004501:	int3   
 1004502:	int3   
 1004503:	int3   
 1004504:	mov    edi,edi
 1004506:	push   ebp
 1004507:	mov    ebp,esp
 1004509:	push   ebx
 100450a:	push   edi
 100450b:	push   DWORD PTR [ebp+0xc]
 100450e:	mov    ebx,ecx
 1004510:	push   DWORD PTR [ebp+0x8]
 1004513:	call   0x1004218
 1004518:	mov    edi,eax
 100451a:	pop    ecx
 100451b:	pop    ecx
 100451c:	test   edi,edi
 100451e:	je     0x100454a
 1004520:	push   esi
 1004521:	movzx  esi,WORD PTR [edi]
 1004524:	push   esi
 1004525:	mov    ecx,ebx
 1004527:	call   0x10043ac
 100452c:	movzx  ecx,WORD PTR [edi]
 100452f:	push   ecx
 1004530:	lea    ecx,[edi+0x2]
 1004533:	push   ecx
 1004534:	push   esi
 1004535:	push   eax
 1004536:	call   0x10044b9
 100453b:	add    esp,0x10
 100453e:	push   esi
 100453f:	mov    ecx,ebx
 1004541:	call   0x1004487
 1004546:	xor    eax,eax
 1004548:	inc    eax
 1004549:	pop    esi
 100454a:	pop    edi
 100454b:	pop    ebx
 100454c:	pop    ebp
 100454d:	ret    0x8
 1004550:	int3   
 1004551:	int3   
 1004552:	int3   
 1004553:	int3   
 1004554:	int3   
 1004555:	push   0x10
 1004557:	mov    eax,0x1008bad
 100455c:	call   0x1003a2c
 1004561:	lea    eax,[ebp+0xc]
 1004564:	xor    esi,esi
 1004566:	cmp    BYTE PTR ds:0x100b6a8,0x0
 100456d:	mov    DWORD PTR [ebp-0x1c],eax
 1004570:	jne    0x100458c
 1004572:	push   esi
 1004573:	call   DWORD PTR ds:0x10010dc
 1004579:	push   eax
 100457a:	call   0x10046cc
 100457f:	pop    ecx
 1004580:	mov    ds:0x100b6a4,eax
 1004585:	mov    BYTE PTR ds:0x100b6a8,0x1
 100458c:	push   0x100b0c0
 1004591:	lea    ecx,[ebp-0x14]
 1004594:	mov    DWORD PTR [ebp-0x4],esi
 1004597:	call   0x10042dc
 100459c:	push   DWORD PTR [ebp+0x8]
 100459f:	lea    ecx,[ebp-0x14]
 10045a2:	push   DWORD PTR ds:0x100b6a4
 10045a8:	mov    BYTE PTR [ebp-0x4],0x1
 10045ac:	call   0x1004504
 10045b1:	test   eax,eax
 10045b3:	jne    0x10045f9
 10045b5:	mov    eax,ds:0x100b6a4
 10045ba:	test   eax,eax
 10045bc:	je     0x10045d3
 10045be:	push   DWORD PTR [ebp+0x8]
 10045c1:	lea    ecx,[ebp-0x14]
 10045c4:	push   esi
 10045c5:	call   0x1004504
 10045ca:	test   eax,eax
 10045cc:	jne    0x10045f9
 10045ce:	mov    eax,ds:0x100b6a4
 10045d3:	mov    esi,DWORD PTR ds:0x10011bc
 10045d9:	push   eax
 10045da:	push   DWORD PTR [ebp+0x8]
 10045dd:	mov    edi,0x10017c0
 10045e2:	push   edi
 10045e3:	call   esi
 10045e5:	push   DWORD PTR ds:0x100b6a4
 10045eb:	push   DWORD PTR [ebp+0x8]
 10045ee:	push   edi
 10045ef:	call   esi
 10045f1:	mov    esi,DWORD PTR [ebp-0x14]
 10045f4:	add    esp,0x18
 10045f7:	jmp    0x100462a
 10045f9:	lea    eax,[ebp-0x1c]
 10045fc:	push   eax
 10045fd:	push   esi
 10045fe:	lea    eax,[ebp-0x18]
 1004601:	push   eax
 1004602:	push   esi
 1004603:	push   esi
 1004604:	mov    esi,DWORD PTR [ebp-0x14]
 1004607:	push   esi
 1004608:	push   0x500
 100460d:	call   DWORD PTR ds:0x10010e0
 1004613:	test   eax,eax
 1004615:	je     0x100462a
 1004617:	mov    edx,DWORD PTR [ebp-0x18]
 100461a:	mov    ecx,eax
 100461c:	call   0x10046f7
 1004621:	push   DWORD PTR [ebp-0x18]
 1004624:	call   DWORD PTR ds:0x10010fc
 100462a:	lea    ecx,[esi-0x10]
 100462d:	call   0x10042b9
 1004632:	call   0x1003aa2
 1004637:	ret    
 1004638:	mov    eax,0x100463e
 100463d:	ret    
 100463e:	jmp    0x1004632
 1004640:	mov    eax,0x1004632
 1004645:	ret    
 1004646:	int3   
 1004647:	int3   
 1004648:	int3   
 1004649:	int3   
 100464a:	int3   
 100464b:	mov    edi,edi
 100464d:	push   ebp
 100464e:	mov    ebp,esp
 1004650:	push   ecx
 1004651:	cmp    BYTE PTR ds:0x100b6a8,0x0
 1004658:	jne    0x1004671
 100465a:	push   DWORD PTR [ebp+0x8]
 100465d:	call   0x10046cc
 1004662:	pop    ecx
 1004663:	mov    ds:0x100b6a4,eax
 1004668:	mov    BYTE PTR ds:0x100b6a8,0x1
 100466f:	jmp    0x1004676
 1004671:	mov    eax,ds:0x100b6a4
 1004676:	push   ebx
 1004677:	push   esi
 1004678:	push   DWORD PTR [ebp+0xc]
 100467b:	xor    esi,esi
 100467d:	push   eax
 100467e:	lea    ecx,[ebp-0x4]
 1004681:	mov    DWORD PTR [ebp-0x4],esi
 1004684:	call   0x100424f
 1004689:	mov    bl,al
 100468b:	test   bl,bl
 100468d:	jne    0x10046ad
 100468f:	push   DWORD PTR [ebp+0xc]
 1004692:	lea    ecx,[ebp-0x4]
 1004695:	push   DWORD PTR [ebp+0x8]
 1004698:	call   0x100424f
 100469d:	mov    bl,al
 100469f:	test   bl,bl
 10046a1:	jne    0x10046ad
 10046a3:	mov    eax,DWORD PTR [ebp+0x10]
 10046a6:	mov    DWORD PTR [eax],esi
 10046a8:	mov    esi,DWORD PTR [ebp-0x4]
 10046ab:	jmp    0x10046b5
 10046ad:	mov    ecx,DWORD PTR [ebp-0x4]
 10046b0:	mov    eax,DWORD PTR [ebp+0x10]
 10046b3:	mov    DWORD PTR [eax],ecx
 10046b5:	push   esi
 10046b6:	call   DWORD PTR ds:0x1001240
 10046bc:	xor    eax,eax
 10046be:	test   bl,bl
 10046c0:	pop    esi
 10046c1:	setne  al
 10046c4:	pop    ebx
 10046c5:	leave  
 10046c6:	ret    
 10046c7:	int3   
 10046c8:	int3   
 10046c9:	int3   
 10046ca:	int3   
 10046cb:	int3   
 10046cc:	mov    edi,edi
 10046ce:	push   ebp
 10046cf:	mov    ebp,esp
 10046d1:	call   DWORD PTR ds:0x10010d0
 10046d7:	mov    ecx,0x409
 10046dc:	cmp    ax,cx
 10046df:	je     0x10046ed
 10046e1:	push   DWORD PTR [ebp+0x8]
 10046e4:	call   0x100856f
 10046e9:	test   eax,eax
 10046eb:	jne    0x10046f0
 10046ed:	mov    eax,DWORD PTR [ebp+0x8]
 10046f0:	pop    ebp
 10046f1:	ret    
 10046f2:	int3   
 10046f3:	int3   
 10046f4:	int3   
 10046f5:	int3   
 10046f6:	int3   
 10046f7:	mov    edi,edi
 10046f9:	push   ebp
 10046fa:	mov    ebp,esp
 10046fc:	sub    esp,0x108
 1004702:	mov    eax,ds:0x100b048
 1004707:	xor    eax,ebp
 1004709:	mov    DWORD PTR [ebp-0x4],eax
 100470c:	push   esi
 100470d:	push   edi
 100470e:	mov    edi,ecx
 1004710:	mov    esi,edx
 1004712:	test   edi,edi
 1004714:	je     0x10047b9
 100471a:	mov    ecx,esi
 100471c:	cmp    WORD PTR [ecx],0xd
 1004720:	jne    0x100472c
 1004722:	cmp    WORD PTR [ecx+0x2],0xa
 1004727:	jne    0x100472c
 1004729:	add    ecx,0x2
 100472c:	mov    ax,WORD PTR [ecx]
 100472f:	mov    WORD PTR [edx],ax
 1004732:	mov    ax,WORD PTR [ecx]
 1004735:	add    edx,0x2
 1004738:	add    ecx,0x2
 100473b:	test   ax,ax
 100473e:	jne    0x100471c
 1004740:	push   ebx
 1004741:	xor    eax,eax
 1004743:	push   eax
 1004744:	push   eax
 1004745:	push   eax
 1004746:	push   eax
 1004747:	lea    ebx,[edi+0x1]
 100474a:	push   ebx
 100474b:	push   esi
 100474c:	push   0x400
 1004751:	push   0x1
 1004753:	call   DWORD PTR ds:0x10010d4
 1004759:	mov    edi,eax
 100475b:	test   edi,edi
 100475d:	je     0x10047b8
 100475f:	push   edi
 1004760:	lea    ecx,[ebp-0x108]
 1004766:	call   0x10047cc
 100476b:	push   0x0
 100476d:	push   0x0
 100476f:	push   edi
 1004770:	push   DWORD PTR [ebp-0x108]
 1004776:	push   ebx
 1004777:	push   esi
 1004778:	push   0x400
 100477d:	push   0x1
 100477f:	call   DWORD PTR ds:0x10010d4
 1004785:	mov    esi,DWORD PTR [ebp-0x108]
 100478b:	call   DWORD PTR ds:0x1001234
 1004791:	add    eax,0x20
 1004794:	push   eax
 1004795:	push   esi
 1004796:	call   DWORD PTR ds:0x1001194
 100479c:	lea    eax,[ebp-0x104]
 10047a2:	pop    ecx
 10047a3:	pop    ecx
 10047a4:	cmp    DWORD PTR [ebp-0x108],eax
 10047aa:	je     0x10047b8
 10047ac:	push   DWORD PTR [ebp-0x108]
 10047b2:	call   0x1003978
 10047b7:	pop    ecx
 10047b8:	pop    ebx
 10047b9:	mov    ecx,DWORD PTR [ebp-0x4]
 10047bc:	pop    edi
 10047bd:	xor    ecx,ebp
 10047bf:	pop    esi
 10047c0:	call   0x1003983
 10047c5:	leave  
 10047c6:	ret    
 10047c7:	int3   
 10047c8:	int3   
 10047c9:	int3   
 10047ca:	int3   
 10047cb:	int3   
 10047cc:	mov    edi,edi
 10047ce:	push   ebp
 10047cf:	mov    ebp,esp
 10047d1:	cmp    DWORD PTR [ebp+0x8],0x100
 10047d8:	push   esi
 10047d9:	mov    esi,ecx
 10047db:	jbe    0x10047eb
 10047dd:	push   DWORD PTR [ebp+0x8]
 10047e0:	and    DWORD PTR [esi],0x0
 10047e3:	call   0x1003b6e
 10047e8:	pop    ecx
 10047e9:	jmp    0x10047ee
 10047eb:	lea    eax,[esi+0x4]
 10047ee:	mov    DWORD PTR [esi],eax
 10047f0:	mov    eax,esi
 10047f2:	pop    esi
 10047f3:	pop    ebp
 10047f4:	ret    0x4
 10047f7:	int3   
 10047f8:	int3   
 10047f9:	int3   
 10047fa:	int3   
 10047fb:	int3   
 10047fc:	mov    edi,edi
 10047fe:	push   ebp
 10047ff:	mov    ebp,esp
 1004801:	sub    esp,0x10
 1004804:	push   0x20019
 1004809:	xor    eax,eax
 100480b:	push   0x1001860
 1004810:	push   0x80000002
 1004815:	lea    ecx,[ebp-0x10]
 1004818:	mov    DWORD PTR [ebp-0x10],eax
 100481b:	mov    DWORD PTR [ebp-0xc],eax
 100481e:	mov    DWORD PTR [ebp-0x8],eax
 1004821:	call   0x1002bd0
 1004826:	test   eax,eax
 1004828:	je     0x1004844
 100482a:	push   0x10018b8
 100482f:	push   DWORD PTR [ebp+0xc]
 1004832:	push   DWORD PTR [ebp+0x8]
 1004835:	call   0x1002c9c
 100483a:	lea    ecx,[ebp-0x10]
 100483d:	call   0x1002c2c
 1004842:	leave  
 1004843:	ret    
 1004844:	push   esi
 1004845:	mov    esi,DWORD PTR [ebp+0xc]
 1004848:	push   edi
 1004849:	mov    edi,DWORD PTR [ebp+0x8]
 100484c:	lea    eax,[ebp-0x4]
 100484f:	push   eax
 1004850:	push   edi
 1004851:	push   0x10018bc
 1004856:	lea    ecx,[ebp-0x10]
 1004859:	mov    DWORD PTR [ebp-0x4],esi
 100485c:	call   0x1004109
 1004861:	test   eax,eax
 1004863:	jne    0x100486c
 1004865:	mov    eax,DWORD PTR [ebp-0x4]
 1004868:	cmp    eax,esi
 100486a:	jb     0x100487a
 100486c:	push   0x10018b8
 1004871:	push   esi
 1004872:	push   edi
 1004873:	call   0x1002c9c
 1004878:	jmp    0x1004880
 100487a:	xor    ecx,ecx
 100487c:	mov    WORD PTR [edi+eax*2],cx
 1004880:	lea    ecx,[ebp-0x10]
 1004883:	call   0x1002c2c
 1004888:	pop    edi
 1004889:	pop    esi
 100488a:	leave  
 100488b:	ret    
 100488c:	int3   
 100488d:	int3   
 100488e:	int3   
 100488f:	int3   
 1004890:	int3   
 1004891:	mov    edi,edi
 1004893:	push   ebp
 1004894:	mov    ebp,esp
 1004896:	sub    esp,0x20c
 100489c:	mov    eax,ds:0x100b048
 10048a1:	xor    eax,ebp
 10048a3:	mov    DWORD PTR [ebp-0x4],eax
 10048a6:	mov    eax,0x104
 10048ab:	push   esi
 10048ac:	mov    esi,DWORD PTR [ebp+0x8]
 10048af:	cmp    DWORD PTR [ebp+0xc],eax
 10048b2:	jb     0x10048dc
 10048b4:	push   eax
 10048b5:	lea    eax,[ebp-0x20c]
 10048bb:	push   eax
 10048bc:	call   0x10047fc
 10048c1:	pop    ecx
 10048c2:	pop    ecx
 10048c3:	push   esi
 10048c4:	push   0x0
 10048c6:	push   0x10018e0
 10048cb:	lea    eax,[ebp-0x20c]
 10048d1:	push   eax
 10048d2:	call   DWORD PTR ds:0x10010bc
 10048d8:	test   eax,eax
 10048da:	jne    0x10048ea
 10048dc:	push   0x10017b8
 10048e1:	push   DWORD PTR [ebp+0xc]
 10048e4:	push   esi
 10048e5:	call   0x1002c9c
 10048ea:	mov    ecx,DWORD PTR [ebp-0x4]
 10048ed:	xor    ecx,ebp
 10048ef:	pop    esi
 10048f0:	call   0x1003983
 10048f5:	leave  
 10048f6:	ret    
 10048f7:	int3   
 10048f8:	int3   
 10048f9:	int3   
 10048fa:	int3   
 10048fb:	int3   
 10048fc:	mov    edi,edi
 10048fe:	push   ebp
 10048ff:	mov    ebp,esp
 1004901:	mov    eax,0x2188
 1004906:	call   0x10081f0
 100490b:	mov    eax,ds:0x100b048
 1004910:	xor    eax,ebp
 1004912:	mov    DWORD PTR [ebp-0x4],eax
 1004915:	push   ebx
 1004916:	mov    ebx,DWORD PTR ds:0x10010c8
 100491c:	push   esi
 100491d:	push   edi
 100491e:	mov    edi,DWORD PTR [ebp+0x8]
 1004921:	xor    esi,esi
 1004923:	push   esi
 1004924:	lea    eax,[ebp-0x114c]
 100492a:	push   eax
 100492b:	push   0x2
 100492d:	lea    eax,[ebp-0x1150]
 1004933:	push   eax
 1004934:	push   edi
 1004935:	mov    WORD PTR [ebp-0x1150],0xfeff
 100493e:	mov    DWORD PTR [ebp-0x1158],esi
 1004944:	call   ebx
 1004946:	xor    eax,eax
 1004948:	push   0x7fe
 100494d:	mov    WORD PTR [ebp-0xa04],ax
 1004954:	lea    eax,[ebp-0xa02]
 100495a:	push   esi
 100495b:	push   eax
 100495c:	call   0x1003b62
 1004961:	xor    eax,eax
 1004963:	mov    esi,0xfe
 1004968:	push   esi
 1004969:	push   eax
 100496a:	mov    WORD PTR [ebp-0x104],ax
 1004971:	lea    eax,[ebp-0x102]
 1004977:	push   eax
 1004978:	call   0x1003b62
 100497d:	xor    eax,eax
 100497f:	push   esi
 1004980:	mov    WORD PTR [ebp-0x204],ax
 1004987:	xor    esi,esi
 1004989:	lea    eax,[ebp-0x202]
 100498f:	push   esi
 1004990:	push   eax
 1004991:	call   0x1003b62
 1004996:	add    esp,0x24
 1004999:	push   0x80
 100499e:	lea    eax,[ebp-0x104]
 10049a4:	push   eax
 10049a5:	push   0x10018e8
 10049aa:	push   esi
 10049ab:	push   esi
 10049ac:	push   0x400
 10049b1:	call   DWORD PTR ds:0x10010b0
 10049b7:	test   eax,eax
 10049b9:	je     0x1004a32
 10049bb:	push   0x80
 10049c0:	lea    eax,[ebp-0x204]
 10049c6:	push   eax
 10049c7:	push   0x1001900
 10049cc:	push   esi
 10049cd:	push   esi
 10049ce:	push   0x400
 10049d3:	call   DWORD PTR ds:0x1001098
 10049d9:	test   eax,eax
 10049db:	je     0x1004a32
 10049dd:	lea    eax,[ebp-0x204]
 10049e3:	push   eax
 10049e4:	lea    eax,[ebp-0x104]
 10049ea:	push   eax
 10049eb:	push   0x1001918
 10049f0:	lea    eax,[ebp-0xa04]
 10049f6:	push   0x400
 10049fb:	push   eax
 10049fc:	call   0x1004e69
 1004a01:	lea    ecx,[ebp-0xa04]
 1004a07:	add    esp,0x14
 1004a0a:	lea    edx,[ecx+0x2]
 1004a0d:	mov    ax,WORD PTR [ecx]
 1004a10:	add    ecx,0x2
 1004a13:	cmp    ax,si
 1004a16:	jne    0x1004a0d
 1004a18:	push   esi
 1004a19:	sub    ecx,edx
 1004a1b:	lea    eax,[ebp-0x114c]
 1004a21:	push   eax
 1004a22:	sar    ecx,1
 1004a24:	lea    eax,[ecx+ecx*1]
 1004a27:	push   eax
 1004a28:	lea    eax,[ebp-0xa04]
 1004a2e:	push   eax
 1004a2f:	push   edi
 1004a30:	call   ebx
 1004a32:	call   DWORD PTR ds:0x1001168
 1004a38:	push   eax
 1004a39:	push   0x1001964
 1004a3e:	lea    eax,[ebp-0xa04]
 1004a44:	push   0x400
 1004a49:	push   eax
 1004a4a:	call   0x1004e69
 1004a4f:	lea    ecx,[ebp-0xa04]
 1004a55:	add    esp,0x10
 1004a58:	lea    edx,[ecx+0x2]
 1004a5b:	mov    ax,WORD PTR [ecx]
 1004a5e:	add    ecx,0x2
 1004a61:	cmp    ax,si
 1004a64:	jne    0x1004a5b
 1004a66:	push   esi
 1004a67:	sub    ecx,edx
 1004a69:	lea    eax,[ebp-0x114c]
 1004a6f:	push   eax
 1004a70:	sar    ecx,1
 1004a72:	lea    eax,[ecx+ecx*1]
 1004a75:	push   eax
 1004a76:	lea    eax,[ebp-0xa04]
 1004a7c:	push   eax
 1004a7d:	push   edi
 1004a7e:	call   ebx
 1004a80:	push   0x80
 1004a85:	lea    eax,[ebp-0x104]
 1004a8b:	push   eax
 1004a8c:	push   esi
 1004a8d:	call   DWORD PTR ds:0x10010c0
 1004a93:	test   eax,eax
 1004a95:	je     0x1004ae5
 1004a97:	lea    eax,[ebp-0x104]
 1004a9d:	push   eax
 1004a9e:	push   0x100197c
 1004aa3:	lea    eax,[ebp-0xa04]
 1004aa9:	push   0x400
 1004aae:	push   eax
 1004aaf:	call   0x1004e69
 1004ab4:	lea    ecx,[ebp-0xa04]
 1004aba:	add    esp,0x10
 1004abd:	lea    edx,[ecx+0x2]
 1004ac0:	mov    ax,WORD PTR [ecx]
 1004ac3:	add    ecx,0x2
 1004ac6:	cmp    ax,si
 1004ac9:	jne    0x1004ac0
 1004acb:	push   esi
 1004acc:	sub    ecx,edx
 1004ace:	lea    eax,[ebp-0x114c]
 1004ad4:	push   eax
 1004ad5:	sar    ecx,1
 1004ad7:	lea    eax,[ecx+ecx*1]
 1004ada:	push   eax
 1004adb:	lea    eax,[ebp-0xa04]
 1004ae1:	push   eax
 1004ae2:	push   edi
 1004ae3:	call   ebx
 1004ae5:	mov    esi,0x11c
 1004aea:	xor    eax,eax
 1004aec:	push   esi
 1004aed:	push   eax
 1004aee:	lea    eax,[ebp-0x1148]
 1004af4:	push   eax
 1004af5:	call   0x1003b62
 1004afa:	add    esp,0xc
 1004afd:	lea    eax,[ebp-0x1148]
 1004b03:	push   eax
 1004b04:	mov    DWORD PTR [ebp-0x1148],esi
 1004b0a:	call   DWORD PTR ds:0x10010b8
 1004b10:	test   eax,eax
 1004b12:	je     0x1004b78
 1004b14:	lea    eax,[ebp-0x1134]
 1004b1a:	push   eax
 1004b1b:	push   DWORD PTR [ebp-0x113c]
 1004b21:	lea    eax,[ebp-0xa04]
 1004b27:	push   DWORD PTR [ebp-0x1140]
 1004b2d:	push   DWORD PTR [ebp-0x1144]
 1004b33:	push   0x10019a8
 1004b38:	push   0x400
 1004b3d:	push   eax
 1004b3e:	call   0x1004e69
 1004b43:	lea    ecx,[ebp-0xa04]
 1004b49:	add    esp,0x1c
 1004b4c:	lea    edx,[ecx+0x2]
 1004b4f:	xor    esi,esi
 1004b51:	mov    ax,WORD PTR [ecx]
 1004b54:	add    ecx,0x2
 1004b57:	cmp    ax,si
 1004b5a:	jne    0x1004b51
 1004b5c:	push   esi
 1004b5d:	sub    ecx,edx
 1004b5f:	lea    eax,[ebp-0x114c]
 1004b65:	push   eax
 1004b66:	sar    ecx,1
 1004b68:	lea    eax,[ecx+ecx*1]
 1004b6b:	push   eax
 1004b6c:	lea    eax,[ebp-0xa04]
 1004b72:	push   eax
 1004b73:	push   edi
 1004b74:	call   ebx
 1004b76:	jmp    0x1004b7a
 1004b78:	xor    esi,esi
 1004b7a:	lea    eax,[ebp-0x1188]
 1004b80:	push   eax
 1004b81:	call   DWORD PTR ds:0x10010c4
 1004b87:	movzx  eax,WORD PTR [ebp-0x1188]
 1004b8e:	test   eax,eax
 1004b90:	je     0x1004bb7
 1004b92:	cmp    eax,0x6
 1004b95:	je     0x1004bb0
 1004b97:	cmp    eax,0x9
 1004b9a:	lea    eax,[ebp-0x104]
 1004ba0:	je     0x1004ba9
 1004ba2:	push   0x1001a14
 1004ba7:	jmp    0x1004bc2
 1004ba9:	push   0x10019f4
 1004bae:	jmp    0x1004bc2
 1004bb0:	push   0x1001a00
 1004bb5:	jmp    0x1004bbc
 1004bb7:	push   0x1001a0c
 1004bbc:	lea    eax,[ebp-0x104]
 1004bc2:	push   0x80
 1004bc7:	push   eax
 1004bc8:	call   0x1002c9c
 1004bcd:	lea    eax,[ebp-0x115c]
 1004bd3:	mov    DWORD PTR [ebp-0x115c],esi
 1004bd9:	mov    esi,DWORD PTR ds:0x1001150
 1004bdf:	push   eax
 1004be0:	call   esi
 1004be2:	push   eax
 1004be3:	call   DWORD PTR ds:0x10010b4
 1004be9:	cmp    DWORD PTR [ebp-0x115c],0x0
 1004bf0:	mov    eax,0x1001a28
 1004bf5:	jne    0x1004bfc
 1004bf7:	mov    eax,0x10017b8
 1004bfc:	cmp    DWORD PTR [ebp-0x1174],0x1
 1004c03:	mov    ecx,0x1001a40
 1004c08:	ja     0x1004c0f
 1004c0a:	mov    ecx,0x1001a58
 1004c0f:	push   eax
 1004c10:	push   ecx
 1004c11:	lea    eax,[ebp-0x104]
 1004c17:	push   eax
 1004c18:	push   DWORD PTR [ebp-0x1174]
 1004c1e:	lea    eax,[ebp-0xa04]
 1004c24:	push   0x1001a6c
 1004c29:	push   0x400
 1004c2e:	push   eax
 1004c2f:	call   0x1004e69
 1004c34:	lea    ecx,[ebp-0xa04]
 1004c3a:	add    esp,0x1c
 1004c3d:	lea    edx,[ecx+0x2]
 1004c40:	mov    ax,WORD PTR [ecx]
 1004c43:	add    ecx,0x2
 1004c46:	cmp    ax,WORD PTR [ebp-0x1158]
 1004c4d:	jne    0x1004c40
 1004c4f:	xor    eax,eax
 1004c51:	push   eax
 1004c52:	sub    ecx,edx
 1004c54:	lea    eax,[ebp-0x114c]
 1004c5a:	push   eax
 1004c5b:	sar    ecx,1
 1004c5d:	lea    eax,[ecx+ecx*1]
 1004c60:	push   eax
 1004c61:	lea    eax,[ebp-0xa04]
 1004c67:	push   eax
 1004c68:	push   edi
 1004c69:	call   ebx
 1004c6b:	lea    eax,[ebp-0x102c]
 1004c71:	push   eax
 1004c72:	call   DWORD PTR ds:0x10010cc
 1004c78:	mov    eax,DWORD PTR [ebp-0x101c]
 1004c7e:	shr    eax,0x14
 1004c81:	push   eax
 1004c82:	mov    eax,DWORD PTR [ebp-0x1018]
 1004c88:	shr    eax,0x14
 1004c8b:	push   eax
 1004c8c:	mov    eax,DWORD PTR [ebp-0x1024]
 1004c92:	shr    eax,0x14
 1004c95:	push   eax
 1004c96:	mov    eax,DWORD PTR [ebp-0x1020]
 1004c9c:	shr    eax,0x14
 1004c9f:	push   eax
 1004ca0:	push   DWORD PTR [ebp-0x1028]
 1004ca6:	lea    eax,[ebp-0xa04]
 1004cac:	push   0x1001aa8
 1004cb1:	push   0x400
 1004cb6:	push   eax
 1004cb7:	call   0x1004e69
 1004cbc:	lea    ecx,[ebp-0xa04]
 1004cc2:	add    esp,0x20
 1004cc5:	lea    edx,[ecx+0x2]
 1004cc8:	mov    ax,WORD PTR [ecx]
 1004ccb:	add    ecx,0x2
 1004cce:	cmp    ax,WORD PTR [ebp-0x1158]
 1004cd5:	jne    0x1004cc8
 1004cd7:	xor    eax,eax
 1004cd9:	push   eax
 1004cda:	sub    ecx,edx
 1004cdc:	lea    eax,[ebp-0x114c]
 1004ce2:	push   eax
 1004ce3:	sar    ecx,1
 1004ce5:	lea    eax,[ecx+ecx*1]
 1004ce8:	push   eax
 1004ce9:	lea    eax,[ebp-0xa04]
 1004cef:	push   eax
 1004cf0:	push   edi
 1004cf1:	call   ebx
 1004cf3:	xor    eax,eax
 1004cf5:	mov    DWORD PTR [ebp-0x1154],eax
 1004cfb:	lea    eax,[ebp-0x1154]
 1004d01:	push   eax
 1004d02:	push   0x400
 1004d07:	lea    eax,[ebp-0x2188]
 1004d0d:	push   eax
 1004d0e:	call   esi
 1004d10:	push   eax
 1004d11:	call   0x1008540
 1004d16:	test   eax,eax
 1004d18:	je     0x1004e55
 1004d1e:	mov    eax,DWORD PTR [ebp-0x1154]
 1004d24:	mov    ecx,0x1000
 1004d29:	cmp    eax,ecx
 1004d2b:	jbe    0x1004d35
 1004d2d:	mov    eax,ecx
 1004d2f:	mov    DWORD PTR [ebp-0x1154],eax
 1004d35:	xor    ecx,ecx
 1004d37:	mov    esi,ecx
 1004d39:	test   eax,0xfffffffc
 1004d3e:	jbe    0x1004e55
 1004d44:	push   0x104
 1004d49:	lea    eax,[ebp-0xc0c]
 1004d4f:	push   eax
 1004d50:	push   DWORD PTR [ebp+esi*4-0x2188]
 1004d57:	call   DWORD PTR ds:0x1001150
 1004d5d:	push   eax
 1004d5e:	call   0x100854c
 1004d63:	test   eax,eax
 1004d65:	je     0x1004e43
 1004d6b:	lea    eax,[ebp-0x100c]
 1004d71:	push   eax
 1004d72:	xor    ecx,ecx
 1004d74:	push   0x400
 1004d79:	push   ecx
 1004d7a:	lea    eax,[ebp-0xc0c]
 1004d80:	push   eax
 1004d81:	mov    DWORD PTR [ebp-0x1160],ecx
 1004d87:	call   0x1008558
 1004d8c:	test   eax,eax
 1004d8e:	je     0x1004def
 1004d90:	lea    eax,[ebp-0x1164]
 1004d96:	push   eax
 1004d97:	lea    eax,[ebp-0x1160]
 1004d9d:	push   eax
 1004d9e:	push   0x1001b40
 1004da3:	lea    eax,[ebp-0x100c]
 1004da9:	push   eax
 1004daa:	call   0x1008564
 1004daf:	test   eax,eax
 1004db1:	je     0x1004def
 1004db3:	mov    ecx,DWORD PTR [ebp-0x1160]
 1004db9:	movzx  eax,WORD PTR [ecx+0x14]
 1004dbd:	push   eax
 1004dbe:	movzx  eax,WORD PTR [ecx+0x16]
 1004dc2:	push   eax
 1004dc3:	movzx  eax,WORD PTR [ecx+0x10]
 1004dc7:	push   eax
 1004dc8:	movzx  eax,WORD PTR [ecx+0x12]
 1004dcc:	push   eax
 1004dcd:	lea    eax,[ebp-0xc0c]
 1004dd3:	push   eax
 1004dd4:	push   0x1001b48
 1004dd9:	lea    eax,[ebp-0xa04]
 1004ddf:	push   0x400
 1004de4:	push   eax
 1004de5:	call   0x1004e69
 1004dea:	add    esp,0x20
 1004ded:	jmp    0x1004e0f
 1004def:	lea    eax,[ebp-0xc0c]
 1004df5:	push   eax
 1004df6:	push   0x1001b98
 1004dfb:	lea    eax,[ebp-0xa04]
 1004e01:	push   0x400
 1004e06:	push   eax
 1004e07:	call   0x1004e69
 1004e0c:	add    esp,0x10
 1004e0f:	lea    ecx,[ebp-0xa04]
 1004e15:	lea    edx,[ecx+0x2]
 1004e18:	mov    ax,WORD PTR [ecx]
 1004e1b:	add    ecx,0x2
 1004e1e:	cmp    ax,WORD PTR [ebp-0x1158]
 1004e25:	jne    0x1004e18
 1004e27:	xor    eax,eax
 1004e29:	push   eax
 1004e2a:	sub    ecx,edx
 1004e2c:	lea    eax,[ebp-0x114c]
 1004e32:	push   eax
 1004e33:	sar    ecx,1
 1004e35:	lea    eax,[ecx+ecx*1]
 1004e38:	push   eax
 1004e39:	lea    eax,[ebp-0xa04]
 1004e3f:	push   eax
 1004e40:	push   edi
 1004e41:	call   ebx
 1004e43:	mov    eax,DWORD PTR [ebp-0x1154]
 1004e49:	inc    esi
 1004e4a:	shr    eax,0x2
 1004e4d:	cmp    esi,eax
 1004e4f:	jb     0x1004d44
 1004e55:	mov    ecx,DWORD PTR [ebp-0x4]
 1004e58:	pop    edi
 1004e59:	pop    esi
 1004e5a:	xor    ecx,ebp
 1004e5c:	pop    ebx
 1004e5d:	call   0x1003983
 1004e62:	leave  
 1004e63:	ret    
 1004e64:	int3   
 1004e65:	int3   
 1004e66:	int3   
 1004e67:	int3   
 1004e68:	int3   
 1004e69:	mov    edi,edi
 1004e6b:	push   ebp
 1004e6c:	mov    ebp,esp
 1004e6e:	push   esi
 1004e6f:	push   edi
 1004e70:	mov    edi,DWORD PTR [ebp+0xc]
 1004e73:	xor    esi,esi
 1004e75:	test   edi,edi
 1004e77:	je     0x1004e81
 1004e79:	cmp    edi,0x7fffffff
 1004e7f:	jbe    0x1004e86
 1004e81:	mov    esi,0x80070057
 1004e86:	test   esi,esi
 1004e88:	js     0x1004ebb
 1004e8a:	push   ebx
 1004e8b:	mov    ebx,DWORD PTR [ebp+0x8]
 1004e8e:	lea    eax,[ebp+0x14]
 1004e91:	push   eax
 1004e92:	push   DWORD PTR [ebp+0x10]
 1004e95:	xor    esi,esi
 1004e97:	dec    edi
 1004e98:	push   edi
 1004e99:	push   ebx
 1004e9a:	call   DWORD PTR ds:0x10011a0
 1004ea0:	add    esp,0x10
 1004ea3:	test   eax,eax
 1004ea5:	js     0x1004eaf
 1004ea7:	cmp    eax,edi
 1004ea9:	ja     0x1004eaf
 1004eab:	jne    0x1004eba
 1004ead:	jmp    0x1004eb4
 1004eaf:	mov    esi,0x8007007a
 1004eb4:	xor    eax,eax
 1004eb6:	mov    WORD PTR [ebx+edi*2],ax
 1004eba:	pop    ebx
 1004ebb:	pop    edi
 1004ebc:	mov    eax,esi
 1004ebe:	pop    esi
 1004ebf:	pop    ebp
 1004ec0:	ret    
 1004ec1:	int3   
 1004ec2:	int3   
 1004ec3:	int3   
 1004ec4:	int3   
 1004ec5:	int3   
 1004ec6:	mov    edi,edi
 1004ec8:	push   ebp
 1004ec9:	mov    ebp,esp
 1004ecb:	sub    esp,0x118
 1004ed1:	mov    eax,ds:0x100b048
 1004ed6:	xor    eax,ebp
 1004ed8:	mov    DWORD PTR [ebp-0x4],eax
 1004edb:	push   edi
 1004edc:	xor    edi,edi
 1004ede:	cmp    DWORD PTR ds:0x100b0b0,edi
 1004ee4:	jg     0x1004f77
 1004eea:	push   0xffffffff
 1004eec:	push   edi
 1004eed:	push   0x100b0b0
 1004ef2:	call   DWORD PTR ds:0x1001144
 1004ef8:	cmp    eax,0xffffffff
 1004efb:	jne    0x1004f6f
 1004efd:	push   esi
 1004efe:	mov    esi,0x114
 1004f03:	push   esi
 1004f04:	lea    eax,[ebp-0x118]
 1004f0a:	push   edi
 1004f0b:	push   eax
 1004f0c:	call   0x1003b62
 1004f11:	add    esp,0xc
 1004f14:	lea    eax,[ebp-0x118]
 1004f1a:	push   eax
 1004f1b:	mov    DWORD PTR [ebp-0x118],esi
 1004f21:	call   DWORD PTR ds:0x10010b8
 1004f27:	pop    esi
 1004f28:	test   eax,eax
 1004f2a:	je     0x1004f5d
 1004f2c:	cmp    DWORD PTR [ebp-0x10c],0x6
 1004f33:	jb     0x1004f5d
 1004f35:	push   0x1001be8
 1004f3a:	call   DWORD PTR ds:0x10010dc
 1004f40:	push   0x1001bf8
 1004f45:	push   eax
 1004f46:	call   DWORD PTR ds:0x1001134
 1004f4c:	mov    ds:0x100b6ac,eax
 1004f51:	mov    DWORD PTR ds:0x100b0b0,0x1
 1004f5b:	jmp    0x1004f77
 1004f5d:	mov    DWORD PTR ds:0x100b0b0,0x2
 1004f67:	jmp    0x1004f77
 1004f69:	call   DWORD PTR ds:0x10010ac
 1004f6f:	cmp    DWORD PTR ds:0x100b0b0,edi
 1004f75:	jle    0x1004f69
 1004f77:	cmp    DWORD PTR ds:0x100b0b0,0x1
 1004f7e:	pop    edi
 1004f7f:	jne    0x1004f89
 1004f81:	call   DWORD PTR ds:0x100b6ac
 1004f87:	jmp    0x1004f91
 1004f89:	call   DWORD PTR ds:0x1001164
 1004f8f:	xor    edx,edx
 1004f91:	mov    ecx,DWORD PTR [ebp-0x4]
 1004f94:	xor    ecx,ebp
 1004f96:	call   0x1003983
 1004f9b:	leave  
 1004f9c:	ret    
 1004f9d:	int3   
 1004f9e:	int3   
 1004f9f:	int3   
 1004fa0:	int3   
 1004fa1:	int3   
 1004fa2:	int3   
 1004fa3:	int3   
 1004fa4:	int3   
 1004fa5:	int3   
 1004fa6:	int3   
 1004fa7:	int3   
 1004fa8:	int3   
 1004fa9:	int3   
 1004faa:	int3   
 1004fab:	int3   
 1004fac:	int3   
 1004fad:	int3   
 1004fae:	int3   
 1004faf:	int3   
 1004fb0:	mov    edi,edi
 1004fb2:	push   ebp
 1004fb3:	mov    ebp,esp
 1004fb5:	mov    eax,DWORD PTR [ebp+0x8]
 1004fb8:	mov    ecx,DWORD PTR [eax]
 1004fba:	mov    edx,DWORD PTR [ecx+0xc]
 1004fbd:	push   0x0
 1004fbf:	push   eax
 1004fc0:	call   edx
 1004fc2:	pop    ebp
 1004fc3:	ret    0x4
 1004fc6:	int3   
 1004fc7:	int3   
 1004fc8:	int3   
 1004fc9:	int3   
 1004fca:	int3   
 1004fcb:	int3   
 1004fcc:	int3   
 1004fcd:	int3   
 1004fce:	int3   
 1004fcf:	int3   
 1004fd0:	lea    eax,[ecx+0xc]
 1004fd3:	ret    
 1004fd4:	int3   
 1004fd5:	int3   
 1004fd6:	int3   
 1004fd7:	int3   
 1004fd8:	int3   
 1004fd9:	int3   
 1004fda:	int3   
 1004fdb:	int3   
 1004fdc:	int3   
 1004fdd:	int3   
 1004fde:	int3   
 1004fdf:	int3   
 1004fe0:	mov    edi,edi
 1004fe2:	push   ebp
 1004fe3:	mov    ebp,esp
 1004fe5:	mov    eax,DWORD PTR [ebp+0xc]
 1004fe8:	mov    ecx,DWORD PTR [ebp+0x8]
 1004feb:	push   esi
 1004fec:	push   edi
 1004fed:	mov    esi,0x10
 1004ff2:	mov    edx,DWORD PTR [ecx]
 1004ff4:	cmp    edx,DWORD PTR [eax]
 1004ff6:	jne    0x100500a
 1004ff8:	sub    esi,0x4
 1004ffb:	add    eax,0x4
 1004ffe:	add    ecx,0x4
 1005001:	cmp    esi,0x4
 1005004:	jae    0x1004ff2
 1005006:	test   esi,esi
 1005008:	je     0x1005074
 100500a:	movzx  edx,BYTE PTR [ecx]
 100500d:	movzx  edi,BYTE PTR [eax]
 1005010:	sub    edx,edi
 1005012:	jne    0x1005059
 1005014:	sub    esi,0x1
 1005017:	add    eax,0x1
 100501a:	add    ecx,0x1
 100501d:	test   esi,esi
 100501f:	je     0x1005074
 1005021:	movzx  edx,BYTE PTR [ecx]
 1005024:	movzx  edi,BYTE PTR [eax]
 1005027:	sub    edx,edi
 1005029:	jne    0x1005059
 100502b:	sub    esi,0x1
 100502e:	add    eax,0x1
 1005031:	add    ecx,0x1
 1005034:	test   esi,esi
 1005036:	je     0x1005074
 1005038:	movzx  edx,BYTE PTR [ecx]
 100503b:	movzx  edi,BYTE PTR [eax]
 100503e:	sub    edx,edi
 1005040:	jne    0x1005059
 1005042:	sub    esi,0x1
 1005045:	add    eax,0x1
 1005048:	add    ecx,0x1
 100504b:	test   esi,esi
 100504d:	je     0x1005074
 100504f:	movzx  edx,BYTE PTR [ecx]
 1005052:	movzx  eax,BYTE PTR [eax]
 1005055:	sub    edx,eax
 1005057:	je     0x1005074
 1005059:	test   edx,edx
 100505b:	mov    eax,0x1
 1005060:	jg     0x1005076
 1005062:	or     eax,0xffffffff
 1005065:	xor    ecx,ecx
 1005067:	test   eax,eax
 1005069:	sete   cl
 100506c:	pop    edi
 100506d:	pop    esi
 100506e:	mov    eax,ecx
 1005070:	pop    ebp
 1005071:	ret    0x8
 1005074:	xor    eax,eax
 1005076:	xor    ecx,ecx
 1005078:	test   eax,eax
 100507a:	sete   cl
 100507d:	pop    edi
 100507e:	pop    esi
 100507f:	mov    eax,ecx
 1005081:	pop    ebp
 1005082:	ret    0x8
 1005085:	int3   
 1005086:	int3   
 1005087:	int3   
 1005088:	int3   
 1005089:	int3   
 100508a:	int3   
 100508b:	int3   
 100508c:	int3   
 100508d:	int3   
 100508e:	int3   
 100508f:	int3   
 1005090:	mov    edi,edi
 1005092:	push   ebp
 1005093:	mov    ebp,esp
 1005095:	push   0xfffffffe
 1005097:	push   0x1008e30
 100509c:	push   0x1003b37
 10050a1:	mov    eax,fs:0x0
 10050a7:	push   eax
 10050a8:	sub    esp,0xc
 10050ab:	push   ebx
 10050ac:	push   esi
 10050ad:	push   edi
 10050ae:	mov    eax,ds:0x100b048
 10050b3:	xor    DWORD PTR [ebp-0x8],eax
 10050b6:	xor    eax,ebp
 10050b8:	push   eax
 10050b9:	lea    eax,[ebp-0x10]
 10050bc:	mov    fs:0x0,eax
 10050c2:	mov    DWORD PTR [ebp-0x18],esp
 10050c5:	xor    esi,esi
 10050c7:	mov    DWORD PTR [ebp-0x4],esi
 10050ca:	push   esi
 10050cb:	mov    ecx,DWORD PTR [ebp+0x8]
 10050ce:	call   0x1006390
 10050d3:	jmp    0x1005102
 10050d5:	mov    eax,DWORD PTR [ebp-0x14]
 10050d8:	mov    ecx,DWORD PTR [eax]
 10050da:	mov    edx,DWORD PTR [ecx]
 10050dc:	mov    DWORD PTR [ebp-0x1c],edx
 10050df:	mov    eax,0x1
 10050e4:	ret    
 10050e5:	mov    esp,DWORD PTR [ebp-0x18]
 10050e8:	mov    esi,DWORD PTR [ebp-0x1c]
 10050eb:	cmp    esi,0xc00000fd
 10050f1:	jne    0x10050f9
 10050f3:	call   DWORD PTR ds:0x1001184
 10050f9:	test   esi,esi
 10050fb:	jl     0x1005102
 10050fd:	mov    esi,0x80004005
 1005102:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005109:	mov    eax,esi
 100510b:	mov    ecx,DWORD PTR [ebp-0x10]
 100510e:	mov    DWORD PTR fs:0x0,ecx
 1005115:	pop    ecx
 1005116:	pop    edi
 1005117:	pop    esi
 1005118:	pop    ebx
 1005119:	mov    esp,ebp
 100511b:	pop    ebp
 100511c:	ret    0x4
 100511f:	int3   
 1005120:	int3   
 1005121:	int3   
 1005122:	int3   
 1005123:	int3   
 1005124:	int3   
 1005125:	int3   
 1005126:	int3   
 1005127:	int3   
 1005128:	int3   
 1005129:	int3   
 100512a:	int3   
 100512b:	int3   
 100512c:	int3   
 100512d:	int3   
 100512e:	int3   
 100512f:	int3   
 1005130:	mov    edi,edi
 1005132:	push   ebp
 1005133:	mov    ebp,esp
 1005135:	push   esi
 1005136:	mov    esi,DWORD PTR [ebp+0x10]
 1005139:	push   edi
 100513a:	mov    edi,DWORD PTR [ebp+0xc]
 100513d:	push   edi
 100513e:	push   0x100183c
 1005143:	mov    DWORD PTR [esi],0x0
 1005149:	call   0x1004fe0
 100514e:	test   eax,eax
 1005150:	jne    0x1005161
 1005152:	push   edi
 1005153:	push   0x1001c84
 1005158:	call   0x1004fe0
 100515d:	test   eax,eax
 100515f:	je     0x1005176
 1005161:	mov    eax,DWORD PTR [ebp+0x8]
 1005164:	mov    DWORD PTR [esi],eax
 1005166:	mov    ecx,DWORD PTR [eax]
 1005168:	mov    edx,DWORD PTR [ecx+0x4]
 100516b:	push   eax
 100516c:	call   edx
 100516e:	pop    edi
 100516f:	xor    eax,eax
 1005171:	pop    esi
 1005172:	pop    ebp
 1005173:	ret    0xc
 1005176:	pop    edi
 1005177:	mov    eax,0x80004002
 100517c:	pop    esi
 100517d:	pop    ebp
 100517e:	ret    0xc
 1005181:	int3   
 1005182:	int3   
 1005183:	int3   
 1005184:	int3   
 1005185:	int3   
 1005186:	int3   
 1005187:	int3   
 1005188:	int3   
 1005189:	int3   
 100518a:	int3   
 100518b:	int3   
 100518c:	int3   
 100518d:	int3   
 100518e:	int3   
 100518f:	int3   
 1005190:	mov    eax,0x1
 1005195:	ret    0x4
 1005198:	int3   
 1005199:	int3   
 100519a:	int3   
 100519b:	int3   
 100519c:	int3   
 100519d:	int3   
 100519e:	int3   
 100519f:	int3   
 10051a0:	mov    eax,0x1
 10051a5:	ret    0x4
 10051a8:	int3   
 10051a9:	int3   
 10051aa:	int3   
 10051ab:	int3   
 10051ac:	int3   
 10051ad:	int3   
 10051ae:	int3   
 10051af:	int3   
 10051b0:	mov    edi,edi
 10051b2:	push   ebp
 10051b3:	mov    ebp,esp
 10051b5:	mov    ecx,DWORD PTR [ebp+0x8]
 10051b8:	add    ecx,0x4
 10051bb:	call   0x1006500
 10051c0:	mov    ecx,DWORD PTR [ebp+0xc]
 10051c3:	mov    DWORD PTR [ecx],eax
 10051c5:	xor    eax,eax
 10051c7:	pop    ebp
 10051c8:	ret    0x8
 10051cb:	int3   
 10051cc:	int3   
 10051cd:	int3   
 10051ce:	int3   
 10051cf:	int3   
 10051d0:	mov    eax,DWORD PTR [ecx+0x1220]
 10051d6:	ret    
 10051d7:	int3   
 10051d8:	int3   
 10051d9:	int3   
 10051da:	int3   
 10051db:	int3   
 10051dc:	int3   
 10051dd:	int3   
 10051de:	int3   
 10051df:	int3   
 10051e0:	mov    edi,edi
 10051e2:	push   ebp
 10051e3:	mov    ebp,esp
 10051e5:	mov    eax,DWORD PTR [ebp+0x8]
 10051e8:	mov    ecx,DWORD PTR [ebp+0xc]
 10051eb:	mov    DWORD PTR [eax+0x1224],ecx
 10051f1:	xor    eax,eax
 10051f3:	pop    ebp
 10051f4:	ret    0x8
 10051f7:	int3   
 10051f8:	int3   
 10051f9:	int3   
 10051fa:	int3   
 10051fb:	int3   
 10051fc:	int3   
 10051fd:	int3   
 10051fe:	int3   
 10051ff:	int3   
 1005200:	mov    edi,edi
 1005202:	push   ebp
 1005203:	mov    ebp,esp
 1005205:	mov    ecx,DWORD PTR [ebp+0x8]
 1005208:	mov    ecx,DWORD PTR [ecx+0x1224]
 100520e:	test   ecx,ecx
 1005210:	mov    eax,0x80004001
 1005215:	je     0x100521d
 1005217:	mov    edx,DWORD PTR [ebp+0xc]
 100521a:	push   edx
 100521b:	call   ecx
 100521d:	pop    ebp
 100521e:	ret    0x8
 1005221:	int3   
 1005222:	int3   
 1005223:	int3   
 1005224:	int3   
 1005225:	int3   
 1005226:	int3   
 1005227:	int3   
 1005228:	int3   
 1005229:	int3   
 100522a:	int3   
 100522b:	int3   
 100522c:	int3   
 100522d:	int3   
 100522e:	int3   
 100522f:	int3   
 1005230:	lea    eax,[ecx+0xe10]
 1005236:	ret    
 1005237:	int3   
 1005238:	int3   
 1005239:	int3   
 100523a:	int3   
 100523b:	int3   
 100523c:	int3   
 100523d:	int3   
 100523e:	int3   
 100523f:	int3   
 1005240:	mov    edi,edi
 1005242:	push   ebp
 1005243:	mov    ebp,esp
 1005245:	mov    eax,ecx
 1005247:	mov    ecx,DWORD PTR [ebp+0x8]
 100524a:	mov    DWORD PTR [eax],ecx
 100524c:	mov    DWORD PTR [eax+0x4],0x0
 1005253:	pop    ebp
 1005254:	ret    0x4
 1005257:	int3   
 1005258:	int3   
 1005259:	int3   
 100525a:	int3   
 100525b:	int3   
 100525c:	int3   
 100525d:	int3   
 100525e:	int3   
 100525f:	int3   
 1005260:	mov    edi,edi
 1005262:	push   ebp
 1005263:	mov    ebp,esp
 1005265:	mov    eax,DWORD PTR [ebp+0x8]
 1005268:	test   eax,eax
 100526a:	jl     0x100526f
 100526c:	mov    eax,DWORD PTR [ebp+0xc]
 100526f:	pop    ebp
 1005270:	ret    0x8
 1005273:	int3   
 1005274:	int3   
 1005275:	int3   
 1005276:	int3   
 1005277:	int3   
 1005278:	int3   
 1005279:	int3   
 100527a:	int3   
 100527b:	int3   
 100527c:	int3   
 100527d:	int3   
 100527e:	int3   
 100527f:	int3   
 1005280:	mov    edi,edi
 1005282:	push   ebp
 1005283:	mov    ebp,esp
 1005285:	mov    eax,DWORD PTR [ebp+0x8]
 1005288:	mov    ecx,DWORD PTR [ebp+0xc]
 100528b:	push   eax
 100528c:	call   0x1006180
 1005291:	pop    ebp
 1005292:	ret    
 1005293:	int3   
 1005294:	int3   
 1005295:	int3   
 1005296:	int3   
 1005297:	int3   
 1005298:	int3   
 1005299:	int3   
 100529a:	int3   
 100529b:	int3   
 100529c:	int3   
 100529d:	int3   
 100529e:	int3   
 100529f:	int3   
 10052a0:	mov    edi,edi
 10052a2:	push   ebp
 10052a3:	mov    ebp,esp
 10052a5:	mov    eax,DWORD PTR [ebp+0x8]
 10052a8:	test   eax,eax
 10052aa:	je     0x10052b5
 10052ac:	mov    ecx,DWORD PTR [ebp+0xc]
 10052af:	push   eax
 10052b0:	call   0x1006240
 10052b5:	pop    ebp
 10052b6:	ret    
 10052b7:	int3   
 10052b8:	int3   
 10052b9:	int3   
 10052ba:	int3   
 10052bb:	int3   
 10052bc:	int3   
 10052bd:	int3   
 10052be:	int3   
 10052bf:	int3   
 10052c0:	mov    edi,edi
 10052c2:	push   ebp
 10052c3:	mov    ebp,esp
 10052c5:	push   0xfffffffe
 10052c7:	push   0x1008e50
 10052cc:	push   0x1003b37
 10052d1:	mov    eax,fs:0x0
 10052d7:	push   eax
 10052d8:	sub    esp,0x20
 10052db:	push   ebx
 10052dc:	push   esi
 10052dd:	push   edi
 10052de:	mov    eax,ds:0x100b048
 10052e3:	xor    DWORD PTR [ebp-0x8],eax
 10052e6:	xor    eax,ebp
 10052e8:	push   eax
 10052e9:	lea    eax,[ebp-0x10]
 10052ec:	mov    fs:0x0,eax
 10052f2:	mov    DWORD PTR [ebp-0x18],esp
 10052f5:	mov    edi,ecx
 10052f7:	xor    ebx,ebx
 10052f9:	xor    esi,esi
 10052fb:	mov    DWORD PTR [ebp-0x1c],esi
 10052fe:	mov    DWORD PTR [ebp-0x24],ebx
 1005301:	mov    DWORD PTR [ebp-0x4],ebx
 1005304:	call   0x1006450
 1005309:	test   eax,eax
 100530b:	je     0x10053c3
 1005311:	mov    DWORD PTR [ebp-0x20],ebx
 1005314:	mov    ecx,edi
 1005316:	call   0x1006450
 100531b:	mov    ecx,DWORD PTR [eax]
 100531d:	lea    edx,[ebp-0x20]
 1005320:	push   edx
 1005321:	push   0x100184c
 1005326:	push   eax
 1005327:	mov    eax,DWORD PTR [ecx]
 1005329:	call   eax
 100532b:	mov    esi,eax
 100532d:	mov    DWORD PTR [ebp-0x1c],esi
 1005330:	cmp    esi,ebx
 1005332:	jl     0x10053c3
 1005338:	mov    eax,DWORD PTR [ebp-0x20]
 100533b:	cmp    eax,ebx
 100533d:	je     0x10053bb
 100533f:	xor    esi,esi
 1005341:	mov    DWORD PTR [ebp-0x28],esi
 1005344:	mov    DWORD PTR [ebp-0x4],0x1
 100534b:	mov    ecx,DWORD PTR [eax]
 100534d:	mov    edx,DWORD PTR [ebp+0xc]
 1005350:	push   edx
 1005351:	mov    edx,DWORD PTR [ebp+0x8]
 1005354:	push   edx
 1005355:	push   eax
 1005356:	mov    eax,DWORD PTR [ecx+0xc]
 1005359:	call   eax
 100535b:	mov    DWORD PTR [ebp-0x1c],eax
 100535e:	jmp    0x1005395
 1005360:	mov    ecx,DWORD PTR [ebp-0x14]
 1005363:	mov    edx,DWORD PTR [ecx]
 1005365:	mov    eax,DWORD PTR [edx]
 1005367:	mov    DWORD PTR [ebp-0x2c],eax
 100536a:	mov    eax,0x1
 100536f:	ret    
 1005370:	mov    esp,DWORD PTR [ebp-0x18]
 1005373:	mov    esi,DWORD PTR [ebp-0x2c]
 1005376:	mov    DWORD PTR [ebp-0x28],esi
 1005379:	cmp    esi,0xc00000fd
 100537f:	jne    0x1005387
 1005381:	call   DWORD PTR ds:0x1001184
 1005387:	xor    ebx,ebx
 1005389:	cmp    esi,ebx
 100538b:	jl     0x1005395
 100538d:	mov    esi,0x80004005
 1005392:	mov    DWORD PTR [ebp-0x28],esi
 1005395:	mov    DWORD PTR [ebp-0x4],ebx
 1005398:	push   esi
 1005399:	mov    ecx,DWORD PTR [ebp-0x1c]
 100539c:	push   ecx
 100539d:	call   0x1005260
 10053a2:	mov    esi,eax
 10053a4:	mov    DWORD PTR [ebp-0x1c],esi
 10053a7:	mov    eax,DWORD PTR [ebp-0x20]
 10053aa:	mov    edx,DWORD PTR [eax]
 10053ac:	push   eax
 10053ad:	mov    eax,DWORD PTR [edx+0x8]
 10053b0:	call   eax
 10053b2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10053b9:	jmp    0x100540a
 10053bb:	mov    esi,0x80070057
 10053c0:	mov    DWORD PTR [ebp-0x1c],esi
 10053c3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10053ca:	jmp    0x100540a
 10053cc:	mov    ecx,DWORD PTR [ebp-0x14]
 10053cf:	mov    edx,DWORD PTR [ecx]
 10053d1:	mov    eax,DWORD PTR [edx]
 10053d3:	mov    DWORD PTR [ebp-0x30],eax
 10053d6:	mov    eax,0x1
 10053db:	ret    
 10053dc:	mov    esp,DWORD PTR [ebp-0x18]
 10053df:	mov    esi,DWORD PTR [ebp-0x30]
 10053e2:	mov    DWORD PTR [ebp-0x24],esi
 10053e5:	cmp    esi,0xc00000fd
 10053eb:	jne    0x10053f3
 10053ed:	call   DWORD PTR ds:0x1001184
 10053f3:	xor    ebx,ebx
 10053f5:	cmp    esi,ebx
 10053f7:	jl     0x1005400
 10053f9:	mov    DWORD PTR [ebp-0x24],0x80004005
 1005400:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005407:	mov    esi,DWORD PTR [ebp-0x1c]
 100540a:	cmp    esi,ebx
 100540c:	mov    eax,DWORD PTR [ebp-0x24]
 100540f:	jge    0x1005413
 1005411:	mov    eax,esi
 1005413:	mov    ecx,DWORD PTR [ebp-0x10]
 1005416:	mov    DWORD PTR fs:0x0,ecx
 100541d:	pop    ecx
 100541e:	pop    edi
 100541f:	pop    esi
 1005420:	pop    ebx
 1005421:	mov    esp,ebp
 1005423:	pop    ebp
 1005424:	ret    0x8
 1005427:	int3   
 1005428:	int3   
 1005429:	int3   
 100542a:	int3   
 100542b:	int3   
 100542c:	int3   
 100542d:	int3   
 100542e:	int3   
 100542f:	int3   
 1005430:	mov    edi,edi
 1005432:	push   ebp
 1005433:	mov    ebp,esp
 1005435:	mov    ecx,DWORD PTR [ebp+0x8]
 1005438:	test   ecx,ecx
 100543a:	mov    DWORD PTR [ecx],0x0
 1005440:	je     0x1005447
 1005442:	call   0x10062d0
 1005447:	pop    ebp
 1005448:	ret    0x4
 100544b:	int3   
 100544c:	int3   
 100544d:	int3   
 100544e:	int3   
 100544f:	int3   
 1005450:	mov    edi,edi
 1005452:	push   ebp
 1005453:	mov    ebp,esp
 1005455:	push   0xfffffffe
 1005457:	push   0x1008e78
 100545c:	push   0x1003b37
 1005461:	mov    eax,fs:0x0
 1005467:	push   eax
 1005468:	sub    esp,0x10
 100546b:	push   ebx
 100546c:	push   esi
 100546d:	push   edi
 100546e:	mov    eax,ds:0x100b048
 1005473:	xor    DWORD PTR [ebp-0x8],eax
 1005476:	xor    eax,ebp
 1005478:	push   eax
 1005479:	lea    eax,[ebp-0x10]
 100547c:	mov    fs:0x0,eax
 1005482:	mov    DWORD PTR [ebp-0x18],esp
 1005485:	xor    ebx,ebx
 1005487:	mov    DWORD PTR [ebp-0x1c],ebx
 100548a:	mov    edi,DWORD PTR [ebp+0x8]
 100548d:	lea    ecx,[edi+0x4]
 1005490:	call   0x1006500
 1005495:	test   eax,eax
 1005497:	je     0x1005541
 100549d:	push   0x4e20
 10054a2:	mov    eax,DWORD PTR [edi+0x10]
 10054a5:	push   eax
 10054a6:	call   DWORD PTR ds:0x10010a4
 10054ac:	cmp    eax,ebx
 10054ae:	je     0x10054d7
 10054b0:	cmp    eax,0x80
 10054b5:	je     0x10054d7
 10054b7:	call   DWORD PTR ds:0x1001114
 10054bd:	cmp    eax,ebx
 10054bf:	jle    0x10054cb
 10054c1:	and    eax,0xffff
 10054c6:	or     eax,0x80070000
 10054cb:	mov    esi,eax
 10054cd:	mov    ecx,DWORD PTR [ebp+0xc]
 10054d0:	call   0x1006440
 10054d5:	jmp    0x100554e
 10054d7:	mov    DWORD PTR [ebp-0x4],ebx
 10054da:	mov    ecx,DWORD PTR [ebp+0xc]
 10054dd:	push   ecx
 10054de:	mov    ecx,edi
 10054e0:	call   0x1005090
 10054e5:	mov    esi,eax
 10054e7:	mov    DWORD PTR [ebp-0x1c],esi
 10054ea:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10054f1:	jmp    0x100552f
 10054f3:	mov    edx,DWORD PTR [ebp-0x14]
 10054f6:	mov    eax,DWORD PTR [edx]
 10054f8:	mov    ecx,DWORD PTR [eax]
 10054fa:	mov    DWORD PTR [ebp-0x20],ecx
 10054fd:	mov    eax,0x1
 1005502:	ret    
 1005503:	mov    esp,DWORD PTR [ebp-0x18]
 1005506:	mov    esi,DWORD PTR [ebp-0x20]
 1005509:	mov    ebx,esi
 100550b:	cmp    esi,0xc00000fd
 1005511:	jne    0x1005519
 1005513:	call   DWORD PTR ds:0x1001184
 1005519:	test   esi,esi
 100551b:	jl     0x1005522
 100551d:	mov    ebx,0x80004005
 1005522:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005529:	mov    edi,DWORD PTR [ebp+0x8]
 100552c:	mov    esi,DWORD PTR [ebp-0x1c]
 100552f:	test   esi,esi
 1005531:	jl     0x1005535
 1005533:	mov    esi,ebx
 1005535:	mov    edx,DWORD PTR [edi+0x10]
 1005538:	push   edx
 1005539:	call   DWORD PTR ds:0x10010a8
 100553f:	jmp    0x100554e
 1005541:	mov    eax,DWORD PTR [ebp+0xc]
 1005544:	push   eax
 1005545:	mov    ecx,edi
 1005547:	call   0x1005090
 100554c:	mov    esi,eax
 100554e:	mov    eax,esi
 1005550:	mov    ecx,DWORD PTR [ebp-0x10]
 1005553:	mov    DWORD PTR fs:0x0,ecx
 100555a:	pop    ecx
 100555b:	pop    edi
 100555c:	pop    esi
 100555d:	pop    ebx
 100555e:	mov    esp,ebp
 1005560:	pop    ebp
 1005561:	ret    0x8
 1005564:	int3   
 1005565:	int3   
 1005566:	int3   
 1005567:	int3   
 1005568:	int3   
 1005569:	int3   
 100556a:	int3   
 100556b:	int3   
 100556c:	int3   
 100556d:	int3   
 100556e:	int3   
 100556f:	int3   
 1005570:	mov    edi,edi
 1005572:	push   ebp
 1005573:	mov    ebp,esp
 1005575:	push   esi
 1005576:	push   edi
 1005577:	mov    esi,ecx
 1005579:	push   0xd94
 100557e:	lea    ecx,[esi+0xc]
 1005581:	xor    edi,edi
 1005583:	call   0x1006180
 1005588:	test   eax,eax
 100558a:	je     0x10055af
 100558c:	push   0x4e20
 1005591:	push   esi
 1005592:	mov    ecx,eax
 1005594:	call   0x1007750
 1005599:	test   eax,eax
 100559b:	jne    0x10055c3
 100559d:	mov    edx,DWORD PTR [ebp+0x8]
 10055a0:	mov    ecx,0x8007000e
 10055a5:	pop    edi
 10055a6:	mov    DWORD PTR [edx],eax
 10055a8:	mov    eax,ecx
 10055aa:	pop    esi
 10055ab:	pop    ebp
 10055ac:	ret    0x4
 10055af:	mov    edx,DWORD PTR [ebp+0x8]
 10055b2:	xor    eax,eax
 10055b4:	mov    ecx,0x8007000e
 10055b9:	pop    edi
 10055ba:	mov    DWORD PTR [edx],eax
 10055bc:	mov    eax,ecx
 10055be:	pop    esi
 10055bf:	pop    ebp
 10055c0:	ret    0x4
 10055c3:	mov    ecx,DWORD PTR [ebp+0x8]
 10055c6:	mov    DWORD PTR [ecx],eax
 10055c8:	mov    eax,edi
 10055ca:	pop    edi
 10055cb:	pop    esi
 10055cc:	pop    ebp
 10055cd:	ret    0x4
 10055d0:	int3   
 10055d1:	int3   
 10055d2:	int3   
 10055d3:	int3   
 10055d4:	int3   
 10055d5:	int3   
 10055d6:	int3   
 10055d7:	int3   
 10055d8:	int3   
 10055d9:	int3   
 10055da:	int3   
 10055db:	int3   
 10055dc:	int3   
 10055dd:	int3   
 10055de:	int3   
 10055df:	int3   
 10055e0:	mov    edi,edi
 10055e2:	push   ebp
 10055e3:	mov    ebp,esp
 10055e5:	push   0xfffffffe
 10055e7:	push   0x1008e98
 10055ec:	push   0x1003b37
 10055f1:	mov    eax,fs:0x0
 10055f7:	push   eax
 10055f8:	sub    esp,0x14
 10055fb:	push   ebx
 10055fc:	push   esi
 10055fd:	push   edi
 10055fe:	mov    eax,ds:0x100b048
 1005603:	xor    DWORD PTR [ebp-0x8],eax
 1005606:	xor    eax,ebp
 1005608:	push   eax
 1005609:	lea    eax,[ebp-0x10]
 100560c:	mov    fs:0x0,eax
 1005612:	mov    DWORD PTR [ebp-0x18],esp
 1005615:	mov    edi,ecx
 1005617:	mov    DWORD PTR [ebp-0x24],edi
 100561a:	xor    ebx,ebx
 100561c:	xor    esi,esi
 100561e:	mov    DWORD PTR [ebp-0x1c],esi
 1005621:	lea    eax,[edi+0x7c]
 1005624:	mov    ecx,DWORD PTR [ebp+0x8]
 1005627:	cmp    ecx,eax
 1005629:	jne    0x100568f
 100562b:	mov    DWORD PTR [ebp-0x4],ebx
 100562e:	call   0x10071c0
 1005633:	mov    esi,eax
 1005635:	mov    DWORD PTR [ebp-0x1c],esi
 1005638:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100563f:	jmp    0x100567d
 1005641:	mov    ecx,DWORD PTR [ebp-0x14]
 1005644:	mov    edx,DWORD PTR [ecx]
 1005646:	mov    eax,DWORD PTR [edx]
 1005648:	mov    DWORD PTR [ebp-0x20],eax
 100564b:	mov    eax,0x1
 1005650:	ret    
 1005651:	mov    esp,DWORD PTR [ebp-0x18]
 1005654:	mov    esi,DWORD PTR [ebp-0x20]
 1005657:	mov    ebx,esi
 1005659:	cmp    esi,0xc00000fd
 100565f:	jne    0x1005667
 1005661:	call   DWORD PTR ds:0x1001184
 1005667:	test   esi,esi
 1005669:	jl     0x1005670
 100566b:	mov    ebx,0x80004005
 1005670:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005677:	mov    edi,DWORD PTR [ebp-0x24]
 100567a:	mov    esi,DWORD PTR [ebp-0x1c]
 100567d:	test   esi,esi
 100567f:	jl     0x1005683
 1005681:	mov    esi,ebx
 1005683:	mov    ecx,DWORD PTR [edi+0x14]
 1005686:	push   ecx
 1005687:	call   DWORD PTR ds:0x10010a8
 100568d:	jmp    0x100569c
 100568f:	cmp    ecx,ebx
 1005691:	je     0x100569c
 1005693:	push   ecx
 1005694:	lea    ecx,[edi+0xc]
 1005697:	call   0x1006240
 100569c:	mov    eax,esi
 100569e:	mov    ecx,DWORD PTR [ebp-0x10]
 10056a1:	mov    DWORD PTR fs:0x0,ecx
 10056a8:	pop    ecx
 10056a9:	pop    edi
 10056aa:	pop    esi
 10056ab:	pop    ebx
 10056ac:	mov    esp,ebp
 10056ae:	pop    ebp
 10056af:	ret    0x4
 10056b2:	int3   
 10056b3:	int3   
 10056b4:	int3   
 10056b5:	int3   
 10056b6:	int3   
 10056b7:	int3   
 10056b8:	int3   
 10056b9:	int3   
 10056ba:	int3   
 10056bb:	int3   
 10056bc:	int3   
 10056bd:	int3   
 10056be:	int3   
 10056bf:	int3   
 10056c0:	mov    eax,DWORD PTR [ecx]
 10056c2:	test   eax,eax
 10056c4:	je     0x10056f4
 10056c6:	mov    edx,DWORD PTR [ecx+0x4]
 10056c9:	cmp    edx,DWORD PTR [eax+0x8]
 10056cc:	jb     0x10056d9
 10056ce:	mov    eax,DWORD PTR [eax]
 10056d0:	mov    DWORD PTR [ecx],eax
 10056d2:	mov    DWORD PTR [ecx+0x4],0x0
 10056d9:	mov    edx,DWORD PTR [ecx]
 10056db:	test   edx,edx
 10056dd:	je     0x10056f4
 10056df:	mov    eax,DWORD PTR [ecx+0x4]
 10056e2:	cmp    eax,DWORD PTR [edx+0x8]
 10056e5:	jae    0x10056f4
 10056e7:	push   esi
 10056e8:	lea    esi,[eax+0x1]
 10056eb:	mov    DWORD PTR [ecx+0x4],esi
 10056ee:	lea    eax,[edx+eax*4+0x10]
 10056f2:	pop    esi
 10056f3:	ret    
 10056f4:	xor    eax,eax
 10056f6:	ret    
 10056f7:	int3   
 10056f8:	int3   
 10056f9:	int3   
 10056fa:	int3   
 10056fb:	int3   
 10056fc:	int3   
 10056fd:	int3   
 10056fe:	int3   
 10056ff:	int3   
 1005700:	mov    edi,edi
 1005702:	push   ebp
 1005703:	mov    ebp,esp
 1005705:	mov    ecx,DWORD PTR [ebp+0xc]
 1005708:	xor    eax,eax
 100570a:	test   ecx,ecx
 100570c:	je     0x1005716
 100570e:	cmp    ecx,0x7fffffff
 1005714:	jbe    0x100571b
 1005716:	mov    eax,0x80070057
 100571b:	test   eax,eax
 100571d:	jl     0x1005764
 100571f:	mov    edx,DWORD PTR [ebp+0x10]
 1005722:	push   ebx
 1005723:	push   esi
 1005724:	push   edi
 1005725:	mov    edi,DWORD PTR [ebp+0x8]
 1005728:	lea    esi,[ecx-0x1]
 100572b:	mov    ecx,DWORD PTR [ebp+0x14]
 100572e:	lea    eax,[ebp+0x18]
 1005731:	push   eax
 1005732:	push   ecx
 1005733:	push   edx
 1005734:	push   esi
 1005735:	push   edi
 1005736:	xor    ebx,ebx
 1005738:	call   DWORD PTR ds:0x1001188
 100573e:	add    esp,0x14
 1005741:	test   eax,eax
 1005743:	jl     0x1005756
 1005745:	cmp    eax,esi
 1005747:	ja     0x1005756
 1005749:	jne    0x100575f
 100574b:	mov    WORD PTR [edi+esi*2],bx
 100574f:	pop    edi
 1005750:	pop    esi
 1005751:	mov    eax,ebx
 1005753:	pop    ebx
 1005754:	pop    ebp
 1005755:	ret    
 1005756:	mov    WORD PTR [edi+esi*2],bx
 100575a:	mov    ebx,0x8007007a
 100575f:	pop    edi
 1005760:	pop    esi
 1005761:	mov    eax,ebx
 1005763:	pop    ebx
 1005764:	pop    ebp
 1005765:	ret    
 1005766:	int3   
 1005767:	int3   
 1005768:	int3   
 1005769:	int3   
 100576a:	int3   
 100576b:	int3   
 100576c:	int3   
 100576d:	int3   
 100576e:	int3   
 100576f:	int3   
 1005770:	mov    edi,edi
 1005772:	push   ebp
 1005773:	mov    ebp,esp
 1005775:	sub    esp,0xa40
 100577b:	mov    eax,ds:0x100b048
 1005780:	xor    eax,ebp
 1005782:	mov    DWORD PTR [ebp-0x4],eax
 1005785:	push   ebx
 1005786:	push   esi
 1005787:	push   edi
 1005788:	push   0x104
 100578d:	lea    eax,[ebp-0x41c]
 1005793:	push   eax
 1005794:	xor    ebx,ebx
 1005796:	push   ebx
 1005797:	mov    edi,ecx
 1005799:	xor    esi,esi
 100579b:	call   DWORD PTR ds:0x1001128
 10057a1:	push   eax
 10057a2:	call   DWORD PTR ds:0x10010c0
 10057a8:	test   eax,eax
 10057aa:	jbe    0x1005867
 10057b0:	push   0x105
 10057b5:	lea    ecx,[ebp-0x834]
 10057bb:	push   ecx
 10057bc:	push   0x105
 10057c1:	lea    edx,[ebp-0xa40]
 10057c7:	push   edx
 10057c8:	push   0x105
 10057cd:	lea    eax,[ebp-0x628]
 10057d3:	push   eax
 10057d4:	push   0x105
 10057d9:	lea    ecx,[ebp-0x210]
 10057df:	push   ecx
 10057e0:	lea    edx,[ebp-0x41c]
 10057e6:	push   edx
 10057e7:	mov    WORD PTR [ebp-0x214],bx
 10057ee:	call   DWORD PTR ds:0x1001190
 10057f4:	push   ebx
 10057f5:	push   ebx
 10057f6:	lea    eax,[ebp-0x628]
 10057fc:	push   eax
 10057fd:	lea    ecx,[ebp-0x210]
 1005803:	push   ecx
 1005804:	lea    esi,[edi+0x1018]
 100580a:	push   0x104
 100580f:	push   esi
 1005810:	mov    WORD PTR [ebp-0x20a],bx
 1005817:	mov    WORD PTR [ebp-0x428],bx
 100581e:	mov    WORD PTR [esi],bx
 1005821:	call   DWORD PTR ds:0x100118c
 1005827:	add    esp,0x3c
 100582a:	push   0x1001c68
 100582f:	push   esi
 1005830:	mov    WORD PTR [edi+0x121e],bx
 1005837:	call   0x1003117
 100583c:	push   eax
 100583d:	push   0x1001c94
 1005842:	push   0x104
 1005847:	add    edi,0xe10
 100584d:	push   edi
 100584e:	call   0x1005700
 1005853:	add    esp,0x18
 1005856:	pop    edi
 1005857:	pop    esi
 1005858:	pop    ebx
 1005859:	mov    ecx,DWORD PTR [ebp-0x4]
 100585c:	xor    ecx,ebp
 100585e:	call   0x1003983
 1005863:	mov    esp,ebp
 1005865:	pop    ebp
 1005866:	ret    
 1005867:	mov    ecx,DWORD PTR [ebp-0x4]
 100586a:	pop    edi
 100586b:	mov    eax,esi
 100586d:	pop    esi
 100586e:	xor    ecx,ebp
 1005870:	pop    ebx
 1005871:	call   0x1003983
 1005876:	mov    esp,ebp
 1005878:	pop    ebp
 1005879:	ret    
 100587a:	int3   
 100587b:	int3   
 100587c:	int3   
 100587d:	int3   
 100587e:	int3   
 100587f:	int3   
 1005880:	mov    edi,edi
 1005882:	push   ebp
 1005883:	mov    ebp,esp
 1005885:	push   0xfffffffe
 1005887:	push   0x1008eb8
 100588c:	push   0x1003b37
 1005891:	mov    eax,fs:0x0
 1005897:	push   eax
 1005898:	sub    esp,0x20
 100589b:	push   ebx
 100589c:	push   esi
 100589d:	push   edi
 100589e:	mov    eax,ds:0x100b048
 10058a3:	xor    DWORD PTR [ebp-0x8],eax
 10058a6:	xor    eax,ebp
 10058a8:	push   eax
 10058a9:	lea    eax,[ebp-0x10]
 10058ac:	mov    fs:0x0,eax
 10058b2:	mov    DWORD PTR [ebp-0x18],esp
 10058b5:	mov    edi,ecx
 10058b7:	mov    DWORD PTR [ebp-0x28],edi
 10058ba:	xor    esi,esi
 10058bc:	mov    DWORD PTR [ebp-0x20],esi
 10058bf:	push   0x4e20
 10058c4:	mov    eax,DWORD PTR [edi+0x10]
 10058c7:	push   eax
 10058c8:	call   DWORD PTR ds:0x10010a4
 10058ce:	cmp    eax,esi
 10058d0:	je     0x10058f4
 10058d2:	cmp    eax,0x80
 10058d7:	je     0x10058f4
 10058d9:	call   DWORD PTR ds:0x1001114
 10058df:	cmp    eax,esi
 10058e1:	jle    0x10058ed
 10058e3:	and    eax,0xffff
 10058e8:	or     eax,0x80070000
 10058ed:	mov    esi,eax
 10058ef:	jmp    0x100598c
 10058f4:	mov    DWORD PTR [ebp-0x1c],esi
 10058f7:	mov    DWORD PTR [ebp-0x4],esi
 10058fa:	lea    ecx,[edi+0x18]
 10058fd:	push   ecx
 10058fe:	lea    ecx,[ebp-0x30]
 1005901:	call   0x1005240
 1005906:	mov    ebx,DWORD PTR [ebp+0x8]
 1005909:	lea    esp,[esp+0x0]
 1005910:	lea    ecx,[ebp-0x30]
 1005913:	call   0x10056c0
 1005918:	test   eax,eax
 100591a:	je     0x1005933
 100591c:	push   ebx
 100591d:	push   edi
 100591e:	mov    ecx,eax
 1005920:	call   0x10052c0
 1005925:	push   eax
 1005926:	push   esi
 1005927:	call   0x1005260
 100592c:	mov    esi,eax
 100592e:	mov    DWORD PTR [ebp-0x20],esi
 1005931:	jmp    0x1005910
 1005933:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100593a:	jmp    0x100597b
 100593c:	mov    edx,DWORD PTR [ebp-0x14]
 100593f:	mov    eax,DWORD PTR [edx]
 1005941:	mov    ecx,DWORD PTR [eax]
 1005943:	mov    DWORD PTR [ebp-0x24],ecx
 1005946:	mov    eax,0x1
 100594b:	ret    
 100594c:	mov    esp,DWORD PTR [ebp-0x18]
 100594f:	mov    esi,DWORD PTR [ebp-0x24]
 1005952:	mov    DWORD PTR [ebp-0x1c],esi
 1005955:	cmp    esi,0xc00000fd
 100595b:	jne    0x1005963
 100595d:	call   DWORD PTR ds:0x1001184
 1005963:	test   esi,esi
 1005965:	jl     0x100596e
 1005967:	mov    DWORD PTR [ebp-0x1c],0x80004005
 100596e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005975:	mov    edi,DWORD PTR [ebp-0x28]
 1005978:	mov    esi,DWORD PTR [ebp-0x20]
 100597b:	mov    edx,DWORD PTR [edi+0x10]
 100597e:	push   edx
 100597f:	call   DWORD PTR ds:0x10010a8
 1005985:	test   esi,esi
 1005987:	jl     0x100598c
 1005989:	mov    esi,DWORD PTR [ebp-0x1c]
 100598c:	mov    eax,esi
 100598e:	mov    ecx,DWORD PTR [ebp-0x10]
 1005991:	mov    DWORD PTR fs:0x0,ecx
 1005998:	pop    ecx
 1005999:	pop    edi
 100599a:	pop    esi
 100599b:	pop    ebx
 100599c:	mov    esp,ebp
 100599e:	pop    ebp
 100599f:	ret    0x4
 10059a2:	int3   
 10059a3:	int3   
 10059a4:	int3   
 10059a5:	int3   
 10059a6:	int3   
 10059a7:	int3   
 10059a8:	int3   
 10059a9:	int3   
 10059aa:	int3   
 10059ab:	int3   
 10059ac:	int3   
 10059ad:	int3   
 10059ae:	int3   
 10059af:	int3   
 10059b0:	mov    edi,edi
 10059b2:	push   ebp
 10059b3:	mov    ebp,esp
 10059b5:	push   esi
 10059b6:	mov    esi,DWORD PTR [ebp+0xc]
 10059b9:	test   esi,esi
 10059bb:	mov    eax,0x80070057
 10059c0:	je     0x1005a47
 10059c6:	mov    eax,DWORD PTR [ebp+0x8]
 10059c9:	push   ebx
 10059ca:	add    eax,0x1018
 10059cf:	push   edi
 10059d0:	xor    ebx,ebx
 10059d2:	mov    edi,0x104
 10059d7:	mov    ecx,eax
 10059d9:	sub    esi,eax
 10059db:	jmp    0x10059e0
 10059dd:	lea    ecx,[ecx+0x0]
 10059e0:	lea    edx,[edi+0x7ffffefa]
 10059e6:	test   edx,edx
 10059e8:	je     0x1005a00
 10059ea:	movzx  edx,WORD PTR [esi+ecx*1]
 10059ee:	test   dx,dx
 10059f1:	je     0x1005a00
 10059f3:	mov    WORD PTR [ecx],dx
 10059f6:	add    ecx,0x2
 10059f9:	sub    edi,0x1
 10059fc:	jne    0x10059e0
 10059fe:	jmp    0x1005a04
 1005a00:	test   edi,edi
 1005a02:	jne    0x1005a0c
 1005a04:	sub    ecx,0x2
 1005a07:	mov    ebx,0x8007007a
 1005a0c:	test   ebx,ebx
 1005a0e:	mov    WORD PTR [ecx],0x0
 1005a13:	jl     0x1005a43
 1005a15:	push   0x1001c68
 1005a1a:	push   eax
 1005a1b:	call   0x1003117
 1005a20:	push   eax
 1005a21:	mov    eax,DWORD PTR [ebp+0x8]
 1005a24:	push   0x1001c94
 1005a29:	add    eax,0xe10
 1005a2e:	push   0x104
 1005a33:	push   eax
 1005a34:	call   0x1005700
 1005a39:	add    esp,0x18
 1005a3c:	pop    edi
 1005a3d:	pop    ebx
 1005a3e:	pop    esi
 1005a3f:	pop    ebp
 1005a40:	ret    0x8
 1005a43:	pop    edi
 1005a44:	mov    eax,ebx
 1005a46:	pop    ebx
 1005a47:	pop    esi
 1005a48:	pop    ebp
 1005a49:	ret    0x8
 1005a4c:	int3   
 1005a4d:	int3   
 1005a4e:	int3   
 1005a4f:	int3   
 1005a50:	int3   
 1005a51:	int3   
 1005a52:	int3   
 1005a53:	int3   
 1005a54:	int3   
 1005a55:	int3   
 1005a56:	int3   
 1005a57:	int3   
 1005a58:	int3   
 1005a59:	int3   
 1005a5a:	int3   
 1005a5b:	int3   
 1005a5c:	int3   
 1005a5d:	int3   
 1005a5e:	int3   
 1005a5f:	int3   
 1005a60:	mov    edi,edi
 1005a62:	push   ebp
 1005a63:	mov    ebp,esp
 1005a65:	push   0xfffffffe
 1005a67:	push   0x1008ed8
 1005a6c:	push   0x1003b37
 1005a71:	mov    eax,fs:0x0
 1005a77:	push   eax
 1005a78:	sub    esp,0x10
 1005a7b:	push   ebx
 1005a7c:	push   esi
 1005a7d:	push   edi
 1005a7e:	mov    eax,ds:0x100b048
 1005a83:	xor    DWORD PTR [ebp-0x8],eax
 1005a86:	xor    eax,ebp
 1005a88:	push   eax
 1005a89:	lea    eax,[ebp-0x10]
 1005a8c:	mov    fs:0x0,eax
 1005a92:	mov    DWORD PTR [ebp-0x18],esp
 1005a95:	xor    edi,edi
 1005a97:	mov    DWORD PTR [ebp-0x1c],edi
 1005a9a:	mov    eax,DWORD PTR [ebp+0xc]
 1005a9d:	mov    DWORD PTR [eax],edi
 1005a9f:	mov    ebx,DWORD PTR [ebp+0x8]
 1005aa2:	lea    esi,[ebx+0x4]
 1005aa5:	mov    ecx,esi
 1005aa7:	call   0x1006500
 1005aac:	test   eax,eax
 1005aae:	je     0x1005bb4
 1005ab4:	mov    ecx,esi
 1005ab6:	call   0x1006520
 1005abb:	test   eax,eax
 1005abd:	jl     0x1005bb4
 1005ac3:	call   DWORD PTR ds:0x1001184
 1005ac9:	push   0x7530
 1005ace:	mov    ecx,DWORD PTR [ebx+0x14]
 1005ad1:	push   ecx
 1005ad2:	call   DWORD PTR ds:0x10010a4
 1005ad8:	mov    esi,eax
 1005ada:	cmp    esi,edi
 1005adc:	je     0x1005b18
 1005ade:	cmp    esi,0x80
 1005ae4:	je     0x1005b18
 1005ae6:	call   DWORD PTR ds:0x1001114
 1005aec:	cmp    eax,edi
 1005aee:	jle    0x1005afa
 1005af0:	and    eax,0xffff
 1005af5:	or     eax,0x80070000
 1005afa:	mov    edi,eax
 1005afc:	test   edi,edi
 1005afe:	jl     0x1005b7f
 1005b00:	test   esi,esi
 1005b02:	jg     0x1005b08
 1005b04:	mov    edi,esi
 1005b06:	jmp    0x1005b7f
 1005b08:	and    esi,0xffff
 1005b0e:	or     esi,0x80070000
 1005b14:	mov    edi,esi
 1005b16:	jmp    0x1005b7f
 1005b18:	mov    DWORD PTR [ebp-0x4],edi
 1005b1b:	push   0x4e20
 1005b20:	push   ebx
 1005b21:	lea    ecx,[ebx+0x7c]
 1005b24:	call   0x1008080
 1005b29:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005b30:	jmp    0x1005b69
 1005b32:	mov    edx,DWORD PTR [ebp-0x14]
 1005b35:	mov    eax,DWORD PTR [edx]
 1005b37:	mov    ecx,DWORD PTR [eax]
 1005b39:	mov    DWORD PTR [ebp-0x20],ecx
 1005b3c:	mov    eax,0x1
 1005b41:	ret    
 1005b42:	mov    esp,DWORD PTR [ebp-0x18]
 1005b45:	mov    edi,DWORD PTR [ebp-0x20]
 1005b48:	cmp    edi,0xc00000fd
 1005b4e:	jne    0x1005b56
 1005b50:	call   DWORD PTR ds:0x1001184
 1005b56:	test   edi,edi
 1005b58:	jl     0x1005b5f
 1005b5a:	mov    edi,0x80004005
 1005b5f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005b66:	mov    ebx,DWORD PTR [ebp+0x8]
 1005b69:	test   edi,edi
 1005b6b:	jl     0x1005b75
 1005b6d:	lea    edx,[ebx+0x7c]
 1005b70:	mov    DWORD PTR [ebp-0x1c],edx
 1005b73:	jmp    0x1005b7f
 1005b75:	mov    eax,DWORD PTR [ebx+0x14]
 1005b78:	push   eax
 1005b79:	call   DWORD PTR ds:0x10010a8
 1005b7f:	cmp    DWORD PTR [ebp-0x1c],0x0
 1005b83:	jne    0x1005b96
 1005b85:	lea    ecx,[ebp-0x1c]
 1005b88:	push   ecx
 1005b89:	mov    ecx,ebx
 1005b8b:	call   0x1005570
 1005b90:	test   eax,eax
 1005b92:	jl     0x1005b96
 1005b94:	mov    edi,eax
 1005b96:	mov    edx,DWORD PTR [ebp+0xc]
 1005b99:	mov    eax,DWORD PTR [ebp-0x1c]
 1005b9c:	mov    DWORD PTR [edx],eax
 1005b9e:	mov    eax,edi
 1005ba0:	mov    ecx,DWORD PTR [ebp-0x10]
 1005ba3:	mov    DWORD PTR fs:0x0,ecx
 1005baa:	pop    ecx
 1005bab:	pop    edi
 1005bac:	pop    esi
 1005bad:	pop    ebx
 1005bae:	mov    esp,ebp
 1005bb0:	pop    ebp
 1005bb1:	ret    0x8
 1005bb4:	mov    eax,0x80004005
 1005bb9:	mov    ecx,DWORD PTR [ebp-0x10]
 1005bbc:	mov    DWORD PTR fs:0x0,ecx
 1005bc3:	pop    ecx
 1005bc4:	pop    edi
 1005bc5:	pop    esi
 1005bc6:	pop    ebx
 1005bc7:	mov    esp,ebp
 1005bc9:	pop    ebp
 1005bca:	ret    0x8
 1005bcd:	int3   
 1005bce:	int3   
 1005bcf:	int3   
 1005bd0:	int3   
 1005bd1:	int3   
 1005bd2:	int3   
 1005bd3:	int3   
 1005bd4:	int3   
 1005bd5:	int3   
 1005bd6:	int3   
 1005bd7:	int3   
 1005bd8:	int3   
 1005bd9:	int3   
 1005bda:	int3   
 1005bdb:	int3   
 1005bdc:	int3   
 1005bdd:	int3   
 1005bde:	int3   
 1005bdf:	int3   
 1005be0:	mov    edi,edi
 1005be2:	push   esi
 1005be3:	mov    esi,ecx
 1005be5:	mov    eax,DWORD PTR [esi+0x10]
 1005be8:	mov    ecx,DWORD PTR [eax+0x8]
 1005beb:	cmp    ecx,DWORD PTR [eax+0xc]
 1005bee:	push   edi
 1005bef:	jb     0x1005c2a
 1005bf1:	mov    ecx,DWORD PTR [esi+0x8]
 1005bf4:	test   ecx,ecx
 1005bf6:	je     0x1005c44
 1005bf8:	mov    edi,DWORD PTR [esi]
 1005bfa:	lea    edx,[edi*4+0x10]
 1005c01:	push   edx
 1005c02:	call   0x1006180
 1005c07:	test   eax,eax
 1005c09:	je     0x1005c44
 1005c0b:	mov    DWORD PTR [eax],0x0
 1005c11:	mov    DWORD PTR [eax+0x4],0x0
 1005c18:	mov    DWORD PTR [eax+0x8],0x0
 1005c1f:	mov    DWORD PTR [eax+0xc],edi
 1005c22:	mov    ecx,DWORD PTR [esi+0x10]
 1005c25:	mov    DWORD PTR [ecx],eax
 1005c27:	mov    DWORD PTR [esi+0x10],eax
 1005c2a:	mov    eax,DWORD PTR [esi+0x10]
 1005c2d:	mov    ecx,DWORD PTR [eax+0x8]
 1005c30:	lea    edx,[ecx+0x1]
 1005c33:	mov    DWORD PTR [eax+0x8],edx
 1005c36:	mov    eax,DWORD PTR [esi+0x10]
 1005c39:	add    DWORD PTR [esi+0x4],0x1
 1005c3d:	pop    edi
 1005c3e:	lea    eax,[eax+ecx*4+0x10]
 1005c42:	pop    esi
 1005c43:	ret    
 1005c44:	pop    edi
 1005c45:	xor    eax,eax
 1005c47:	pop    esi
 1005c48:	ret    
 1005c49:	int3   
 1005c4a:	int3   
 1005c4b:	int3   
 1005c4c:	int3   
 1005c4d:	int3   
 1005c4e:	int3   
 1005c4f:	int3   
 1005c50:	mov    edi,edi
 1005c52:	push   ebx
 1005c53:	push   esi
 1005c54:	mov    esi,ecx
 1005c56:	push   edi
 1005c57:	lea    ecx,[esi+0x4]
 1005c5a:	mov    DWORD PTR [esi],0x1001ca4
 1005c60:	call   0x10064e0
 1005c65:	lea    ecx,[esi+0xc]
 1005c68:	call   0x1006170
 1005c6d:	xor    ebx,ebx
 1005c6f:	lea    edi,[esi+0x18]
 1005c72:	push   0x40
 1005c74:	mov    DWORD PTR [esi+0x10],ebx
 1005c77:	mov    DWORD PTR [esi+0x14],ebx
 1005c7a:	lea    eax,[edi+0x10]
 1005c7d:	push   ebx
 1005c7e:	push   eax
 1005c7f:	mov    DWORD PTR [edi],ebx
 1005c81:	mov    DWORD PTR [edi+0x4],ebx
 1005c84:	mov    DWORD PTR [edi+0x8],ebx
 1005c87:	mov    DWORD PTR [edi+0xc],0x10
 1005c8e:	call   0x1003b62
 1005c93:	add    esp,0xc
 1005c96:	mov    DWORD PTR [esi+0x74],edi
 1005c99:	mov    DWORD PTR [esi+0x78],edi
 1005c9c:	push   0x4e20
 1005ca1:	lea    edi,[esi+0x7c]
 1005ca4:	push   ebx
 1005ca5:	mov    ecx,edi
 1005ca7:	mov    DWORD PTR [esi+0x68],0x10
 1005cae:	mov    DWORD PTR [esi+0x6c],ebx
 1005cb1:	mov    DWORD PTR [esi+0x70],ebx
 1005cb4:	call   0x1007750
 1005cb9:	push   0x208
 1005cbe:	lea    ecx,[esi+0xe10]
 1005cc4:	push   ebx
 1005cc5:	push   ecx
 1005cc6:	mov    DWORD PTR [esi+0x1220],ebx
 1005ccc:	mov    DWORD PTR [esi+0x1224],ebx
 1005cd2:	call   0x1003b62
 1005cd7:	push   0x208
 1005cdc:	lea    edx,[esi+0x1018]
 1005ce2:	push   ebx
 1005ce3:	push   edx
 1005ce4:	call   0x1003b62
 1005ce9:	add    esp,0x18
 1005cec:	push   esi
 1005ced:	mov    ecx,edi
 1005cef:	call   0x1006f20
 1005cf4:	pop    edi
 1005cf5:	mov    eax,esi
 1005cf7:	pop    esi
 1005cf8:	pop    ebx
 1005cf9:	ret    
 1005cfa:	int3   
 1005cfb:	int3   
 1005cfc:	int3   
 1005cfd:	int3   
 1005cfe:	int3   
 1005cff:	int3   
 1005d00:	mov    edi,edi
 1005d02:	push   ebp
 1005d03:	mov    ebp,esp
 1005d05:	push   ecx
 1005d06:	mov    eax,DWORD PTR [ebp+0x8]
 1005d09:	test   eax,eax
 1005d0b:	push   esi
 1005d0c:	push   edi
 1005d0d:	mov    edi,ecx
 1005d0f:	mov    DWORD PTR [ebp-0x4],0x0
 1005d16:	je     0x1005da9
 1005d1c:	lea    ecx,[ebp-0x4]
 1005d1f:	push   ecx
 1005d20:	push   0x1
 1005d22:	push   0x0
 1005d24:	push   eax
 1005d25:	push   0x80000002
 1005d2a:	call   DWORD PTR ds:0x1001000
 1005d30:	test   eax,eax
 1005d32:	jne    0x1005da7
 1005d34:	mov    edx,DWORD PTR [ebp-0x4]
 1005d37:	push   ebx
 1005d38:	push   0x104
 1005d3d:	lea    ebx,[edi+0x1018]
 1005d43:	push   ebx
 1005d44:	push   0x1001cd0
 1005d49:	push   edx
 1005d4a:	call   0x10069b0
 1005d4f:	mov    esi,eax
 1005d51:	test   esi,esi
 1005d53:	jl     0x1005d89
 1005d55:	push   0x1001c68
 1005d5a:	push   ebx
 1005d5b:	call   0x1003117
 1005d60:	push   eax
 1005d61:	push   0x1001c94
 1005d66:	lea    eax,[edi+0xe10]
 1005d6c:	push   0x104
 1005d71:	push   eax
 1005d72:	call   0x1005700
 1005d77:	mov    ecx,DWORD PTR [ebp-0x4]
 1005d7a:	add    esp,0x18
 1005d7d:	push   ecx
 1005d7e:	mov    esi,eax
 1005d80:	call   DWORD PTR ds:0x1001008
 1005d86:	pop    ebx
 1005d87:	jmp    0x1005db0
 1005d89:	cmp    esi,0x80070002
 1005d8f:	jne    0x1005d9a
 1005d91:	mov    ecx,edi
 1005d93:	call   0x1005770
 1005d98:	mov    esi,eax
 1005d9a:	mov    ecx,DWORD PTR [ebp-0x4]
 1005d9d:	push   ecx
 1005d9e:	call   DWORD PTR ds:0x1001008
 1005da4:	pop    ebx
 1005da5:	jmp    0x1005db0
 1005da7:	mov    ecx,edi
 1005da9:	call   0x1005770
 1005dae:	mov    esi,eax
 1005db0:	test   esi,esi
 1005db2:	jge    0x1005ddd
 1005db4:	push   0x208
 1005db9:	lea    edx,[edi+0x1018]
 1005dbf:	push   0x0
 1005dc1:	push   edx
 1005dc2:	call   0x1003b62
 1005dc7:	push   0x208
 1005dcc:	push   0x0
 1005dce:	add    edi,0xe10
 1005dd4:	push   edi
 1005dd5:	call   0x1003b62
 1005dda:	add    esp,0x18
 1005ddd:	pop    edi
 1005dde:	mov    eax,esi
 1005de0:	pop    esi
 1005de1:	mov    esp,ebp
 1005de3:	pop    ebp
 1005de4:	ret    0x4
 1005de7:	int3   
 1005de8:	int3   
 1005de9:	int3   
 1005dea:	int3   
 1005deb:	int3   
 1005dec:	int3   
 1005ded:	int3   
 1005dee:	int3   
 1005def:	int3   
 1005df0:	mov    edi,edi
 1005df2:	push   ebp
 1005df3:	mov    ebp,esp
 1005df5:	cmp    DWORD PTR [ebp+0xc],0x0
 1005df9:	push   esi
 1005dfa:	push   edi
 1005dfb:	mov    edi,DWORD PTR [ebp+0x8]
 1005dfe:	je     0x1005e0a
 1005e00:	mov    DWORD PTR [edi+0x1220],0x1
 1005e0a:	lea    esi,[edi+0x4]
 1005e0d:	mov    ecx,esi
 1005e0f:	mov    DWORD PTR [ebp+0xc],esi
 1005e12:	call   0x10067b0
 1005e17:	test   eax,eax
 1005e19:	je     0x1005f13
 1005e1f:	push   ebx
 1005e20:	lea    ebx,[edi+0xc]
 1005e23:	mov    ecx,ebx
 1005e25:	call   0x10066d0
 1005e2a:	mov    esi,eax
 1005e2c:	test   esi,esi
 1005e2e:	jl     0x1005f06
 1005e34:	push   0x0
 1005e36:	push   0x0
 1005e38:	mov    DWORD PTR [edi+0x70],ebx
 1005e3b:	mov    ebx,DWORD PTR ds:0x100109c
 1005e41:	push   0x0
 1005e43:	call   ebx
 1005e45:	test   eax,eax
 1005e47:	mov    DWORD PTR [edi+0x10],eax
 1005e4a:	jne    0x1005e62
 1005e4c:	call   DWORD PTR ds:0x1001114
 1005e52:	test   eax,eax
 1005e54:	jle    0x1005e60
 1005e56:	and    eax,0xffff
 1005e5b:	or     eax,0x80070000
 1005e60:	mov    esi,eax
 1005e62:	test   esi,esi
 1005e64:	jl     0x1005f06
 1005e6a:	mov    eax,DWORD PTR [edi+0x10]
 1005e6d:	push   0x2
 1005e6f:	push   0x2
 1005e71:	push   eax
 1005e72:	call   DWORD PTR ds:0x10010a0
 1005e78:	test   eax,eax
 1005e7a:	jne    0x1005e92
 1005e7c:	call   DWORD PTR ds:0x1001114
 1005e82:	test   eax,eax
 1005e84:	jle    0x1005e90
 1005e86:	and    eax,0xffff
 1005e8b:	or     eax,0x80070000
 1005e90:	mov    esi,eax
 1005e92:	test   esi,esi
 1005e94:	jl     0x1005f06
 1005e96:	push   0x0
 1005e98:	push   0x0
 1005e9a:	push   0x0
 1005e9c:	call   ebx
 1005e9e:	test   eax,eax
 1005ea0:	mov    DWORD PTR [edi+0x14],eax
 1005ea3:	jne    0x1005ebb
 1005ea5:	call   DWORD PTR ds:0x1001114
 1005eab:	test   eax,eax
 1005ead:	jle    0x1005eb9
 1005eaf:	and    eax,0xffff
 1005eb4:	or     eax,0x80070000
 1005eb9:	mov    esi,eax
 1005ebb:	test   esi,esi
 1005ebd:	jl     0x1005f06
 1005ebf:	mov    ecx,DWORD PTR [edi+0x14]
 1005ec2:	push   0x2
 1005ec4:	push   0x2
 1005ec6:	push   ecx
 1005ec7:	call   DWORD PTR ds:0x10010a0
 1005ecd:	test   eax,eax
 1005ecf:	jne    0x1005ee7
 1005ed1:	call   DWORD PTR ds:0x1001114
 1005ed7:	test   eax,eax
 1005ed9:	jle    0x1005ee5
 1005edb:	and    eax,0xffff
 1005ee0:	or     eax,0x80070000
 1005ee5:	mov    esi,eax
 1005ee7:	test   esi,esi
 1005ee9:	jl     0x1005f06
 1005eeb:	cmp    DWORD PTR [edi+0x1220],0x0
 1005ef2:	mov    ecx,edi
 1005ef4:	je     0x1005efa
 1005ef6:	push   0x0
 1005ef8:	jmp    0x1005eff
 1005efa:	push   0x1001c10
 1005eff:	call   0x1005d00
 1005f04:	mov    esi,eax
 1005f06:	mov    ecx,DWORD PTR [ebp+0xc]
 1005f09:	push   esi
 1005f0a:	call   0x1006800
 1005f0f:	mov    esi,DWORD PTR [ebp+0xc]
 1005f12:	pop    ebx
 1005f13:	call   0x1006530
 1005f18:	mov    ecx,esi
 1005f1a:	call   0x1006520
 1005f1f:	pop    edi
 1005f20:	pop    esi
 1005f21:	pop    ebp
 1005f22:	ret    0x8
 1005f25:	int3   
 1005f26:	int3   
 1005f27:	int3   
 1005f28:	int3   
 1005f29:	int3   
 1005f2a:	int3   
 1005f2b:	int3   
 1005f2c:	int3   
 1005f2d:	int3   
 1005f2e:	int3   
 1005f2f:	int3   
 1005f30:	mov    edi,edi
 1005f32:	push   ebp
 1005f33:	mov    ebp,esp
 1005f35:	push   0xfffffffe
 1005f37:	push   0x1008ef8
 1005f3c:	push   0x1003b37
 1005f41:	mov    eax,fs:0x0
 1005f47:	push   eax
 1005f48:	sub    esp,0x1c
 1005f4b:	push   ebx
 1005f4c:	push   esi
 1005f4d:	push   edi
 1005f4e:	mov    eax,ds:0x100b048
 1005f53:	xor    DWORD PTR [ebp-0x8],eax
 1005f56:	xor    eax,ebp
 1005f58:	push   eax
 1005f59:	lea    eax,[ebp-0x10]
 1005f5c:	mov    fs:0x0,eax
 1005f62:	mov    DWORD PTR [ebp-0x18],esp
 1005f65:	mov    edi,ecx
 1005f67:	xor    ebx,ebx
 1005f69:	mov    DWORD PTR [ebp-0x1c],ebx
 1005f6c:	mov    DWORD PTR [ebp-0x20],ebx
 1005f6f:	mov    DWORD PTR [ebp-0x4],ebx
 1005f72:	lea    eax,[edi+0x18]
 1005f75:	push   eax
 1005f76:	lea    ecx,[ebp-0x2c]
 1005f79:	call   0x1005240
 1005f7e:	mov    edi,edi
 1005f80:	lea    ecx,[ebp-0x2c]
 1005f83:	call   0x10056c0
 1005f88:	mov    esi,eax
 1005f8a:	test   esi,esi
 1005f8c:	je     0x1005f9d
 1005f8e:	mov    ecx,esi
 1005f90:	call   0x1006450
 1005f95:	test   eax,eax
 1005f97:	jne    0x1005f80
 1005f99:	test   esi,esi
 1005f9b:	jne    0x1005fab
 1005f9d:	lea    ecx,[edi+0x68]
 1005fa0:	call   0x1005be0
 1005fa5:	mov    esi,eax
 1005fa7:	test   esi,esi
 1005fa9:	je     0x1005fcd
 1005fab:	push   esi
 1005fac:	mov    ecx,edi
 1005fae:	call   0x1005430
 1005fb3:	mov    ecx,DWORD PTR [ebp+0x8]
 1005fb6:	push   ecx
 1005fb7:	mov    ecx,esi
 1005fb9:	call   0x1006390
 1005fbe:	mov    DWORD PTR [ebp-0x1c],eax
 1005fc1:	mov    DWORD PTR [ebp-0x20],esi
 1005fc4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005fcb:	jmp    0x1006017
 1005fcd:	mov    eax,0x8007000e
 1005fd2:	mov    DWORD PTR [ebp-0x1c],eax
 1005fd5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005fdc:	jmp    0x1006017
 1005fde:	mov    edx,DWORD PTR [ebp-0x14]
 1005fe1:	mov    eax,DWORD PTR [edx]
 1005fe3:	mov    ecx,DWORD PTR [eax]
 1005fe5:	mov    DWORD PTR [ebp-0x24],ecx
 1005fe8:	mov    eax,0x1
 1005fed:	ret    
 1005fee:	mov    esp,DWORD PTR [ebp-0x18]
 1005ff1:	mov    esi,DWORD PTR [ebp-0x24]
 1005ff4:	mov    ebx,esi
 1005ff6:	cmp    esi,0xc00000fd
 1005ffc:	jne    0x1006004
 1005ffe:	call   DWORD PTR ds:0x1001184
 1006004:	test   esi,esi
 1006006:	jl     0x100600d
 1006008:	mov    ebx,0x80004005
 100600d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1006014:	mov    eax,DWORD PTR [ebp-0x1c]
 1006017:	mov    edx,DWORD PTR [ebp+0xc]
 100601a:	mov    ecx,DWORD PTR [ebp-0x20]
 100601d:	mov    DWORD PTR [edx],ecx
 100601f:	test   eax,eax
 1006021:	jl     0x1006025
 1006023:	mov    eax,ebx
 1006025:	mov    ecx,DWORD PTR [ebp-0x10]
 1006028:	mov    DWORD PTR fs:0x0,ecx
 100602f:	pop    ecx
 1006030:	pop    edi
 1006031:	pop    esi
 1006032:	pop    ebx
 1006033:	mov    esp,ebp
 1006035:	pop    ebp
 1006036:	ret    0x8
 1006039:	int3   
 100603a:	int3   
 100603b:	int3   
 100603c:	int3   
 100603d:	int3   
 100603e:	int3   
 100603f:	int3   
 1006040:	mov    edi,edi
 1006042:	push   ebp
 1006043:	mov    ebp,esp
 1006045:	push   0xfffffffe
 1006047:	push   0x1008f18
 100604c:	push   0x1003b37
 1006051:	mov    eax,fs:0x0
 1006057:	push   eax
 1006058:	sub    esp,0x14
 100605b:	push   ebx
 100605c:	push   esi
 100605d:	push   edi
 100605e:	mov    eax,ds:0x100b048
 1006063:	xor    DWORD PTR [ebp-0x8],eax
 1006066:	xor    eax,ebp
 1006068:	push   eax
 1006069:	lea    eax,[ebp-0x10]
 100606c:	mov    fs:0x0,eax
 1006072:	mov    DWORD PTR [ebp-0x18],esp
 1006075:	xor    ebx,ebx
 1006077:	mov    DWORD PTR [ebp-0x20],ebx
 100607a:	mov    DWORD PTR [ebp-0x1c],ebx
 100607d:	mov    edi,DWORD PTR [ebp+0x8]
 1006080:	lea    ecx,[edi+0x4]
 1006083:	call   0x1006500
 1006088:	test   eax,eax
 100608a:	je     0x100612f
 1006090:	push   0xffffffff
 1006092:	mov    eax,DWORD PTR [edi+0x10]
 1006095:	push   eax
 1006096:	call   DWORD PTR ds:0x10010a4
 100609c:	cmp    eax,ebx
 100609e:	je     0x10060c1
 10060a0:	cmp    eax,0x80
 10060a5:	je     0x10060c1
 10060a7:	call   DWORD PTR ds:0x1001114
 10060ad:	cmp    eax,ebx
 10060af:	jle    0x100613e
 10060b5:	and    eax,0xffff
 10060ba:	or     eax,0x80070000
 10060bf:	jmp    0x100613e
 10060c1:	mov    DWORD PTR [ebp-0x4],ebx
 10060c4:	lea    ecx,[ebp-0x1c]
 10060c7:	push   ecx
 10060c8:	mov    edx,DWORD PTR [ebp+0xc]
 10060cb:	push   edx
 10060cc:	mov    ecx,edi
 10060ce:	call   0x1005f30
 10060d3:	mov    esi,eax
 10060d5:	mov    DWORD PTR [ebp-0x20],esi
 10060d8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10060df:	jmp    0x100611d
 10060e1:	mov    eax,DWORD PTR [ebp-0x14]
 10060e4:	mov    ecx,DWORD PTR [eax]
 10060e6:	mov    edx,DWORD PTR [ecx]
 10060e8:	mov    DWORD PTR [ebp-0x24],edx
 10060eb:	mov    eax,0x1
 10060f0:	ret    
 10060f1:	mov    esp,DWORD PTR [ebp-0x18]
 10060f4:	mov    esi,DWORD PTR [ebp-0x24]
 10060f7:	mov    ebx,esi
 10060f9:	cmp    esi,0xc00000fd
 10060ff:	jne    0x1006107
 1006101:	call   DWORD PTR ds:0x1001184
 1006107:	test   esi,esi
 1006109:	jl     0x1006110
 100610b:	mov    ebx,0x80004005
 1006110:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1006117:	mov    edi,DWORD PTR [ebp+0x8]
 100611a:	mov    esi,DWORD PTR [ebp-0x20]
 100611d:	test   esi,esi
 100611f:	jl     0x1006123
 1006121:	mov    esi,ebx
 1006123:	mov    eax,DWORD PTR [edi+0x10]
 1006126:	push   eax
 1006127:	call   DWORD PTR ds:0x10010a8
 100612d:	jmp    0x1006140
 100612f:	lea    ecx,[ebp-0x1c]
 1006132:	push   ecx
 1006133:	mov    edx,DWORD PTR [ebp+0xc]
 1006136:	push   edx
 1006137:	mov    ecx,edi
 1006139:	call   0x1005f30
 100613e:	mov    esi,eax
 1006140:	mov    eax,DWORD PTR [ebp+0x10]
 1006143:	mov    ecx,DWORD PTR [ebp-0x1c]
 1006146:	mov    DWORD PTR [eax],ecx
 1006148:	mov    eax,esi
 100614a:	mov    ecx,DWORD PTR [ebp-0x10]
 100614d:	mov    DWORD PTR fs:0x0,ecx
 1006154:	pop    ecx
 1006155:	pop    edi
 1006156:	pop    esi
 1006157:	pop    ebx
 1006158:	mov    esp,ebp
 100615a:	pop    ebp
 100615b:	ret    0xc
 100615e:	int3   
 100615f:	int3   
 1006160:	int3   
 1006161:	int3   
 1006162:	int3   
 1006163:	int3   
 1006164:	int3   
 1006165:	int3   
 1006166:	int3   
 1006167:	int3   
 1006168:	int3   
 1006169:	int3   
 100616a:	int3   
 100616b:	int3   
 100616c:	int3   
 100616d:	int3   
 100616e:	int3   
 100616f:	int3   
 1006170:	mov    eax,ecx
 1006172:	mov    DWORD PTR [eax],0x0
 1006178:	ret    
 1006179:	int3   
 100617a:	int3   
 100617b:	int3   
 100617c:	int3   
 100617d:	int3   
 100617e:	int3   
 100617f:	int3   
 1006180:	mov    edi,edi
 1006182:	push   ebp
 1006183:	mov    ebp,esp
 1006185:	push   0xfffffffe
 1006187:	push   0x1008f38
 100618c:	push   0x1003b37
 1006191:	mov    eax,fs:0x0
 1006197:	push   eax
 1006198:	sub    esp,0x10
 100619b:	push   ebx
 100619c:	push   esi
 100619d:	push   edi
 100619e:	mov    eax,ds:0x100b048
 10061a3:	xor    DWORD PTR [ebp-0x8],eax
 10061a6:	xor    eax,ebp
 10061a8:	push   eax
 10061a9:	lea    eax,[ebp-0x10]
 10061ac:	mov    fs:0x0,eax
 10061b2:	mov    DWORD PTR [ebp-0x18],esp
 10061b5:	mov    DWORD PTR [ebp-0x1c],0x0
 10061bc:	xor    esi,esi
 10061be:	mov    DWORD PTR [ebp-0x4],esi
 10061c1:	mov    eax,DWORD PTR [ebp+0x8]
 10061c4:	push   eax
 10061c5:	push   esi
 10061c6:	mov    ecx,DWORD PTR [ecx]
 10061c8:	push   ecx
 10061c9:	call   DWORD PTR ds:0x1001094
 10061cf:	mov    DWORD PTR [ebp-0x1c],eax
 10061d2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10061d9:	jmp    0x1006212
 10061db:	mov    edx,DWORD PTR [ebp-0x14]
 10061de:	mov    eax,DWORD PTR [edx]
 10061e0:	mov    ecx,DWORD PTR [eax]
 10061e2:	mov    DWORD PTR [ebp-0x20],ecx
 10061e5:	mov    eax,0x1
 10061ea:	ret    
 10061eb:	mov    esp,DWORD PTR [ebp-0x18]
 10061ee:	mov    esi,DWORD PTR [ebp-0x20]
 10061f1:	cmp    esi,0xc00000fd
 10061f7:	jne    0x10061ff
 10061f9:	call   DWORD PTR ds:0x1001184
 10061ff:	test   esi,esi
 1006201:	jl     0x1006208
 1006203:	mov    esi,0x80004005
 1006208:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100620f:	mov    eax,DWORD PTR [ebp-0x1c]
 1006212:	test   esi,esi
 1006214:	jge    0x1006218
 1006216:	xor    eax,eax
 1006218:	mov    ecx,DWORD PTR [ebp-0x10]
 100621b:	mov    DWORD PTR fs:0x0,ecx
 1006222:	pop    ecx
 1006223:	pop    edi
 1006224:	pop    esi
 1006225:	pop    ebx
 1006226:	mov    esp,ebp
 1006228:	pop    ebp
 1006229:	ret    0x4
 100622c:	int3   
 100622d:	int3   
 100622e:	int3   
 100622f:	int3   
 1006230:	int3   
 1006231:	int3   
 1006232:	int3   
 1006233:	int3   
 1006234:	int3   
 1006235:	int3   
 1006236:	int3   
 1006237:	int3   
 1006238:	int3   
 1006239:	int3   
 100623a:	int3   
 100623b:	int3   
 100623c:	int3   
 100623d:	int3   
 100623e:	int3   
 100623f:	int3   
 1006240:	mov    edi,edi
 1006242:	push   ebp
 1006243:	mov    ebp,esp
 1006245:	push   0xfffffffe
 1006247:	push   0x1008f58
 100624c:	push   0x1003b37
 1006251:	mov    eax,fs:0x0
 1006257:	push   eax
 1006258:	sub    esp,0xc
 100625b:	push   ebx
 100625c:	push   esi
 100625d:	push   edi
 100625e:	mov    eax,ds:0x100b048
 1006263:	xor    DWORD PTR [ebp-0x8],eax
 1006266:	xor    eax,ebp
 1006268:	push   eax
 1006269:	lea    eax,[ebp-0x10]
 100626c:	mov    fs:0x0,eax
 1006272:	mov    DWORD PTR [ebp-0x18],esp
 1006275:	mov    DWORD PTR [ebp-0x4],0x0
 100627c:	mov    eax,DWORD PTR [ebp+0x8]
 100627f:	push   eax
 1006280:	push   0x0
 1006282:	mov    ecx,DWORD PTR [ecx]
 1006284:	push   ecx
 1006285:	call   DWORD PTR ds:0x1001090
 100628b:	jmp    0x10062af
 100628d:	mov    edx,DWORD PTR [ebp-0x14]
 1006290:	mov    eax,DWORD PTR [edx]
 1006292:	mov    ecx,DWORD PTR [eax]
 1006294:	mov    DWORD PTR [ebp-0x1c],ecx
 1006297:	mov    eax,0x1
 100629c:	ret    
 100629d:	mov    esp,DWORD PTR [ebp-0x18]
 10062a0:	cmp    DWORD PTR [ebp-0x1c],0xc00000fd
 10062a7:	jne    0x10062af
 10062a9:	call   DWORD PTR ds:0x1001184
 10062af:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10062b6:	mov    ecx,DWORD PTR [ebp-0x10]
 10062b9:	mov    DWORD PTR fs:0x0,ecx
 10062c0:	pop    ecx
 10062c1:	pop    edi
 10062c2:	pop    esi
 10062c3:	pop    ebx
 10062c4:	mov    esp,ebp
 10062c6:	pop    ebp
 10062c7:	ret    0x4
 10062ca:	int3   
 10062cb:	int3   
 10062cc:	int3   
 10062cd:	int3   
 10062ce:	int3   
 10062cf:	int3   
 10062d0:	mov    eax,ecx
 10062d2:	mov    DWORD PTR [eax],0x0
 10062d8:	ret    
 10062d9:	int3   
 10062da:	int3   
 10062db:	int3   
 10062dc:	int3   
 10062dd:	int3   
 10062de:	int3   
 10062df:	int3   
 10062e0:	mov    edi,edi
 10062e2:	push   ebp
 10062e3:	mov    ebp,esp
 10062e5:	push   0xfffffffe
 10062e7:	push   0x1008f78
 10062ec:	push   0x1003b37
 10062f1:	mov    eax,fs:0x0
 10062f7:	push   eax
 10062f8:	sub    esp,0x10
 10062fb:	push   ebx
 10062fc:	push   esi
 10062fd:	push   edi
 10062fe:	mov    eax,ds:0x100b048
 1006303:	xor    DWORD PTR [ebp-0x8],eax
 1006306:	xor    eax,ebp
 1006308:	push   eax
 1006309:	lea    eax,[ebp-0x10]
 100630c:	mov    fs:0x0,eax
 1006312:	mov    DWORD PTR [ebp-0x18],esp
 1006315:	mov    esi,ecx
 1006317:	mov    DWORD PTR [ebp-0x20],esi
 100631a:	xor    edi,edi
 100631c:	mov    DWORD PTR [ebp-0x4],edi
 100631f:	mov    eax,DWORD PTR [esi]
 1006321:	test   eax,eax
 1006323:	je     0x100632d
 1006325:	mov    ecx,DWORD PTR [eax]
 1006327:	push   eax
 1006328:	mov    edx,DWORD PTR [ecx+0x8]
 100632b:	call   edx
 100632d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1006334:	jmp    0x100636f
 1006336:	mov    eax,DWORD PTR [ebp-0x14]
 1006339:	mov    ecx,DWORD PTR [eax]
 100633b:	mov    edx,DWORD PTR [ecx]
 100633d:	mov    DWORD PTR [ebp-0x1c],edx
 1006340:	mov    eax,0x1
 1006345:	ret    
 1006346:	mov    esp,DWORD PTR [ebp-0x18]
 1006349:	mov    esi,DWORD PTR [ebp-0x1c]
 100634c:	mov    edi,esi
 100634e:	cmp    esi,0xc00000fd
 1006354:	jne    0x100635c
 1006356:	call   DWORD PTR ds:0x1001184
 100635c:	test   esi,esi
 100635e:	jl     0x1006365
 1006360:	mov    edi,0x80004005
 1006365:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100636c:	mov    esi,DWORD PTR [ebp-0x20]
 100636f:	mov    DWORD PTR [esi],0x0
 1006375:	mov    eax,edi
 1006377:	mov    ecx,DWORD PTR [ebp-0x10]
 100637a:	mov    DWORD PTR fs:0x0,ecx
 1006381:	pop    ecx
 1006382:	pop    edi
 1006383:	pop    esi
 1006384:	pop    ebx
 1006385:	mov    esp,ebp
 1006387:	pop    ebp
 1006388:	ret    
 1006389:	int3   
 100638a:	int3   
 100638b:	int3   
 100638c:	int3   
 100638d:	int3   
 100638e:	int3   
 100638f:	int3   
 1006390:	mov    edi,edi
 1006392:	push   ebp
 1006393:	mov    ebp,esp
 1006395:	push   0xfffffffe
 1006397:	push   0x1008f98
 100639c:	push   0x1003b37
 10063a1:	mov    eax,fs:0x0
 10063a7:	push   eax
 10063a8:	sub    esp,0xc
 10063ab:	push   ebx
 10063ac:	push   esi
 10063ad:	push   edi
 10063ae:	mov    eax,ds:0x100b048
 10063b3:	xor    DWORD PTR [ebp-0x8],eax
 10063b6:	xor    eax,ebp
 10063b8:	push   eax
 10063b9:	lea    eax,[ebp-0x10]
 10063bc:	mov    fs:0x0,eax
 10063c2:	mov    DWORD PTR [ebp-0x18],esp
 10063c5:	mov    esi,ecx
 10063c7:	call   0x10062e0
 10063cc:	xor    ebx,ebx
 10063ce:	mov    DWORD PTR [ebp-0x4],ebx
 10063d1:	mov    edi,DWORD PTR [ebp+0x8]
 10063d4:	cmp    edi,ebx
 10063d6:	je     0x10063e0
 10063d8:	mov    eax,DWORD PTR [edi]
 10063da:	push   edi
 10063db:	mov    ecx,DWORD PTR [eax+0x4]
 10063de:	call   ecx
 10063e0:	mov    DWORD PTR [esi],edi
 10063e2:	jmp    0x1006413
 10063e4:	mov    edx,DWORD PTR [ebp-0x14]
 10063e7:	mov    eax,DWORD PTR [edx]
 10063e9:	mov    ecx,DWORD PTR [eax]
 10063eb:	mov    DWORD PTR [ebp-0x1c],ecx
 10063ee:	mov    eax,0x1
 10063f3:	ret    
 10063f4:	mov    esp,DWORD PTR [ebp-0x18]
 10063f7:	mov    esi,DWORD PTR [ebp-0x1c]
 10063fa:	mov    ebx,esi
 10063fc:	cmp    esi,0xc00000fd
 1006402:	jne    0x100640a
 1006404:	call   DWORD PTR ds:0x1001184
 100640a:	test   esi,esi
 100640c:	jl     0x1006413
 100640e:	mov    ebx,0x80004005
 1006413:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100641a:	mov    eax,ebx
 100641c:	mov    ecx,DWORD PTR [ebp-0x10]
 100641f:	mov    DWORD PTR fs:0x0,ecx
 1006426:	pop    ecx
 1006427:	pop    edi
 1006428:	pop    esi
 1006429:	pop    ebx
 100642a:	mov    esp,ebp
 100642c:	pop    ebp
 100642d:	ret    0x4
 1006430:	int3   
 1006431:	int3   
 1006432:	int3   
 1006433:	int3   
 1006434:	int3   
 1006435:	int3   
 1006436:	int3   
 1006437:	int3   
 1006438:	int3   
 1006439:	int3   
 100643a:	int3   
 100643b:	int3   
 100643c:	int3   
 100643d:	int3   
 100643e:	int3   
 100643f:	int3   
 1006440:	mov    DWORD PTR [ecx],0x0
 1006446:	ret    
 1006447:	int3   
 1006448:	int3   
 1006449:	int3   
 100644a:	int3   
 100644b:	int3   
 100644c:	int3   
 100644d:	int3   
 100644e:	int3   
 100644f:	int3   
 1006450:	mov    eax,DWORD PTR [ecx]
 1006452:	ret    
 1006453:	int3   
 1006454:	int3   
 1006455:	int3   
 1006456:	int3   
 1006457:	int3   
 1006458:	int3   
 1006459:	int3   
 100645a:	int3   
 100645b:	int3   
 100645c:	int3   
 100645d:	int3   
 100645e:	int3   
 100645f:	int3   
 1006460:	mov    edi,edi
 1006462:	push   ebp
 1006463:	mov    ebp,esp
 1006465:	mov    ecx,DWORD PTR [ebp+0xc]
 1006468:	or     eax,0xffffffff
 100646b:	test   ecx,ecx
 100646d:	push   esi
 100646e:	mov    esi,DWORD PTR [ebp+0x8]
 1006471:	jbe    0x1006492
 1006473:	movzx  edx,BYTE PTR [esi]
 1006476:	xor    edx,eax
 1006478:	and    edx,0xff
 100647e:	shr    eax,0x8
 1006481:	xor    eax,DWORD PTR [edx*4+0x1001ce8]
 1006488:	sub    ecx,0x1
 100648b:	add    esi,0x1
 100648e:	test   ecx,ecx
 1006490:	ja     0x1006473
 1006492:	pop    esi
 1006493:	pop    ebp
 1006494:	ret    0x8
 1006497:	int3   
 1006498:	int3   
 1006499:	int3   
 100649a:	int3   
 100649b:	int3   
 100649c:	int3   
 100649d:	int3   
 100649e:	int3   
 100649f:	int3   
 10064a0:	mov    edi,edi
 10064a2:	push   ebp
 10064a3:	mov    ebp,esp
 10064a5:	mov    edx,DWORD PTR [ebp+0x8]
 10064a8:	xor    eax,eax
 10064aa:	test   edx,edx
 10064ac:	je     0x10064cd
 10064ae:	mov    eax,edx
 10064b0:	push   esi
 10064b1:	lea    esi,[eax+0x2]
 10064b4:	mov    cx,WORD PTR [eax]
 10064b7:	add    eax,0x2
 10064ba:	test   cx,cx
 10064bd:	jne    0x10064b4
 10064bf:	sub    eax,esi
 10064c1:	sar    eax,1
 10064c3:	add    eax,eax
 10064c5:	push   eax
 10064c6:	push   edx
 10064c7:	call   0x1006460
 10064cc:	pop    esi
 10064cd:	pop    ebp
 10064ce:	ret    0x4
 10064d1:	int3   
 10064d2:	int3   
 10064d3:	int3   
 10064d4:	int3   
 10064d5:	int3   
 10064d6:	int3   
 10064d7:	int3   
 10064d8:	int3   
 10064d9:	int3   
 10064da:	int3   
 10064db:	int3   
 10064dc:	int3   
 10064dd:	int3   
 10064de:	int3   
 10064df:	int3   
 10064e0:	mov    eax,ecx
 10064e2:	mov    DWORD PTR [eax],0x0
 10064e8:	mov    DWORD PTR [eax+0x4],0x0
 10064ef:	ret    
 10064f0:	int3   
 10064f1:	int3   
 10064f2:	int3   
 10064f3:	int3   
 10064f4:	int3   
 10064f5:	int3   
 10064f6:	int3   
 10064f7:	int3   
 10064f8:	int3   
 10064f9:	int3   
 10064fa:	int3   
 10064fb:	int3   
 10064fc:	int3   
 10064fd:	int3   
 10064fe:	int3   
 10064ff:	int3   
 1006500:	mov    eax,DWORD PTR [ecx]
 1006502:	xor    ecx,ecx
 1006504:	cmp    eax,0x2
 1006507:	sete   cl
 100650a:	mov    eax,ecx
 100650c:	ret    
 100650d:	int3   
 100650e:	int3   
 100650f:	int3   
 1006510:	int3   
 1006511:	int3   
 1006512:	int3   
 1006513:	int3   
 1006514:	int3   
 1006515:	int3   
 1006516:	int3   
 1006517:	int3   
 1006518:	int3   
 1006519:	int3   
 100651a:	int3   
 100651b:	int3   
 100651c:	int3   
 100651d:	int3   
 100651e:	int3   
 100651f:	int3   
 1006520:	mov    eax,DWORD PTR [ecx+0x4]
 1006523:	ret    
 1006524:	int3   
 1006525:	int3   
 1006526:	int3   
 1006527:	int3   
 1006528:	int3   
 1006529:	int3   
 100652a:	int3   
 100652b:	int3   
 100652c:	int3   
 100652d:	int3   
 100652e:	int3   
 100652f:	int3   
 1006530:	mov    edi,edi
 1006532:	push   ebp
 1006533:	mov    ebp,esp
 1006535:	sub    esp,0x24
 1006538:	push   esi
 1006539:	push   0x10020fc
 100653e:	call   DWORD PTR ds:0x1001084
 1006544:	mov    esi,eax
 1006546:	push   0x10020e8
 100654b:	push   esi
 100654c:	call   DWORD PTR ds:0x1001134
 1006552:	test   eax,eax
 1006554:	mov    ds:0x100b6b8,eax
 1006559:	jne    0x1006562
 100655b:	push   esi
 100655c:	call   DWORD PTR ds:0x1001088
 1006562:	lea    eax,[ebp-0x24]
 1006565:	push   eax
 1006566:	call   DWORD PTR ds:0x100108c
 100656c:	mov    ecx,DWORD PTR [ebp-0x20]
 100656f:	mov    DWORD PTR ds:0x100b6bc,ecx
 1006575:	pop    esi
 1006576:	mov    esp,ebp
 1006578:	pop    ebp
 1006579:	ret    
 100657a:	int3   
 100657b:	int3   
 100657c:	int3   
 100657d:	int3   
 100657e:	int3   
 100657f:	int3   
 1006580:	mov    edi,edi
 1006582:	push   ebp
 1006583:	mov    ebp,esp
 1006585:	sub    esp,0x24
 1006588:	push   ebx
 1006589:	push   edi
 100658a:	mov    edi,DWORD PTR [ebp+0x8]
 100658d:	test   edi,edi
 100658f:	mov    ebx,edi
 1006591:	jne    0x100659d
 1006593:	pop    edi
 1006594:	xor    eax,eax
 1006596:	pop    ebx
 1006597:	mov    esp,ebp
 1006599:	pop    ebp
 100659a:	ret    0xc
 100659d:	cmp    DWORD PTR [ebp+0x10],0x0
 10065a1:	mov    DWORD PTR [ebp+0x8],0xcc
 10065a8:	je     0x10065b1
 10065aa:	mov    DWORD PTR [ebp+0x8],0xee
 10065b1:	push   esi
 10065b2:	mov    esi,DWORD PTR [ebp+0xc]
 10065b5:	cmp    DWORD PTR ds:0x100b6b8,0x0
 10065bc:	je     0x10065ff
 10065be:	push   0x8
 10065c0:	lea    eax,[ebp-0x8]
 10065c3:	push   eax
 10065c4:	mov    DWORD PTR [ebp-0x8],edi
 10065c7:	call   DWORD PTR ds:0x1001150
 10065cd:	push   eax
 10065ce:	call   DWORD PTR ds:0x100b6b8
 10065d4:	test   eax,eax
 10065d6:	je     0x10065ff
 10065d8:	mov    eax,DWORD PTR [ebp-0x4]
 10065db:	test   al,0x1
 10065dd:	je     0x10065ff
 10065df:	mov    ecx,DWORD PTR [ebp+0x8]
 10065e2:	shr    eax,0x4
 10065e5:	and    eax,0x7ff
 10065ea:	test   ecx,eax
 10065ec:	je     0x1006654
 10065ee:	mov    ecx,DWORD PTR ds:0x100b6bc
 10065f4:	lea    eax,[ecx-0x1]
 10065f7:	not    eax
 10065f9:	and    eax,edi
 10065fb:	add    eax,ecx
 10065fd:	jmp    0x1006638
 10065ff:	push   0x1c
 1006601:	lea    edx,[ebp-0x24]
 1006604:	push   edx
 1006605:	push   edi
 1006606:	call   DWORD PTR ds:0x1001080
 100660c:	cmp    eax,0x1c
 100660f:	jne    0x1006654
 1006611:	mov    eax,DWORD PTR [ebp-0x24]
 1006614:	mov    ecx,DWORD PTR [ebp-0x18]
 1006617:	add    eax,ecx
 1006619:	cmp    ebx,eax
 100661b:	jae    0x100664a
 100661d:	cmp    DWORD PTR [ebp-0x14],0x1000
 1006624:	jne    0x1006654
 1006626:	mov    ecx,DWORD PTR [ebp-0x10]
 1006629:	mov    edx,DWORD PTR [ebp+0x8]
 100662c:	test   edx,ecx
 100662e:	je     0x1006654
 1006630:	test   ecx,0x100
 1006636:	jne    0x1006654
 1006638:	mov    ecx,eax
 100663a:	sub    ecx,ebx
 100663c:	cmp    ecx,esi
 100663e:	jb     0x1006642
 1006640:	mov    ecx,esi
 1006642:	sub    esi,ecx
 1006644:	add    ebx,ecx
 1006646:	test   esi,esi
 1006648:	je     0x100665f
 100664a:	cmp    eax,ebx
 100664c:	mov    edi,eax
 100664e:	jbe    0x10065b5
 1006654:	pop    esi
 1006655:	pop    edi
 1006656:	xor    eax,eax
 1006658:	pop    ebx
 1006659:	mov    esp,ebp
 100665b:	pop    ebp
 100665c:	ret    0xc
 100665f:	pop    esi
 1006660:	pop    edi
 1006661:	mov    eax,0x1
 1006666:	pop    ebx
 1006667:	mov    esp,ebp
 1006669:	pop    ebp
 100666a:	ret    0xc
 100666d:	int3   
 100666e:	int3   
 100666f:	int3   
 1006670:	int3   
 1006671:	int3   
 1006672:	int3   
 1006673:	int3   
 1006674:	int3   
 1006675:	int3   
 1006676:	int3   
 1006677:	int3   
 1006678:	int3   
 1006679:	int3   
 100667a:	int3   
 100667b:	int3   
 100667c:	int3   
 100667d:	int3   
 100667e:	int3   
 100667f:	int3   
 1006680:	xor    eax,eax
 1006682:	test   ecx,ecx
 1006684:	push   esi
 1006685:	mov    esi,ecx
 1006687:	je     0x10066a3
 1006689:	lea    esp,[esp+0x0]
 1006690:	cmp    WORD PTR [edx],ax
 1006693:	je     0x100669f
 1006695:	add    edx,0x2
 1006698:	sub    ecx,0x1
 100669b:	jne    0x1006690
 100669d:	jmp    0x10066a3
 100669f:	test   ecx,ecx
 10066a1:	jne    0x10066a8
 10066a3:	mov    eax,0x80070057
 10066a8:	test   edi,edi
 10066aa:	je     0x10066bc
 10066ac:	test   eax,eax
 10066ae:	jl     0x10066b6
 10066b0:	sub    esi,ecx
 10066b2:	mov    DWORD PTR [edi],esi
 10066b4:	pop    esi
 10066b5:	ret    
 10066b6:	mov    DWORD PTR [edi],0x0
 10066bc:	pop    esi
 10066bd:	ret    
 10066be:	int3   
 10066bf:	int3   
 10066c0:	int3   
 10066c1:	int3   
 10066c2:	int3   
 10066c3:	int3   
 10066c4:	int3   
 10066c5:	int3   
 10066c6:	int3   
 10066c7:	int3   
 10066c8:	int3   
 10066c9:	int3   
 10066ca:	int3   
 10066cb:	int3   
 10066cc:	int3   
 10066cd:	int3   
 10066ce:	int3   
 10066cf:	int3   
 10066d0:	mov    edi,edi
 10066d2:	push   ebp
 10066d3:	mov    ebp,esp
 10066d5:	push   0xfffffffe
 10066d7:	push   0x1008fb8
 10066dc:	push   0x1003b37
 10066e1:	mov    eax,fs:0x0
 10066e7:	push   eax
 10066e8:	sub    esp,0x10
 10066eb:	push   ebx
 10066ec:	push   esi
 10066ed:	push   edi
 10066ee:	mov    eax,ds:0x100b048
 10066f3:	xor    DWORD PTR [ebp-0x8],eax
 10066f6:	xor    eax,ebp
 10066f8:	push   eax
 10066f9:	lea    eax,[ebp-0x10]
 10066fc:	mov    fs:0x0,eax
 1006702:	mov    DWORD PTR [ebp-0x18],esp
 1006705:	mov    esi,ecx
 1006707:	xor    ebx,ebx
 1006709:	xor    edi,edi
 100670b:	mov    DWORD PTR [ebp-0x1c],edi
 100670e:	mov    DWORD PTR [ebp-0x4],ebx
 1006711:	cmp    DWORD PTR [esi],ebx
 1006713:	jne    0x1006741
 1006715:	push   ebx
 1006716:	push   0x10000
 100671b:	push   ebx
 100671c:	call   DWORD PTR ds:0x100107c
 1006722:	mov    DWORD PTR [esi],eax
 1006724:	test   eax,eax
 1006726:	jne    0x1006741
 1006728:	call   DWORD PTR ds:0x1001114
 100672e:	test   eax,eax
 1006730:	jle    0x100673c
 1006732:	and    eax,0xffff
 1006737:	or     eax,0x80070000
 100673c:	mov    edi,eax
 100673e:	mov    DWORD PTR [ebp-0x1c],edi
 1006741:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1006748:	jmp    0x1006783
 100674a:	mov    eax,DWORD PTR [ebp-0x14]
 100674d:	mov    ecx,DWORD PTR [eax]
 100674f:	mov    edx,DWORD PTR [ecx]
 1006751:	mov    DWORD PTR [ebp-0x20],edx
 1006754:	mov    eax,0x1
 1006759:	ret    
 100675a:	mov    esp,DWORD PTR [ebp-0x18]
 100675d:	mov    esi,DWORD PTR [ebp-0x20]
 1006760:	mov    ebx,esi
 1006762:	cmp    esi,0xc00000fd
 1006768:	jne    0x1006770
 100676a:	call   DWORD PTR ds:0x1001184
 1006770:	test   esi,esi
 1006772:	jl     0x1006779
 1006774:	mov    ebx,0x80004005
 1006779:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1006780:	mov    edi,DWORD PTR [ebp-0x1c]
 1006783:	test   edi,edi
 1006785:	mov    eax,ebx
 1006787:	jge    0x100678b
 1006789:	mov    eax,edi
 100678b:	mov    ecx,DWORD PTR [ebp-0x10]
 100678e:	mov    DWORD PTR fs:0x0,ecx
 1006795:	pop    ecx
 1006796:	pop    edi
 1006797:	pop    esi
 1006798:	pop    ebx
 1006799:	mov    esp,ebp
 100679b:	pop    ebp
 100679c:	ret    
 100679d:	int3   
 100679e:	int3   
 100679f:	int3   
 10067a0:	int3   
 10067a1:	int3   
 10067a2:	int3   
 10067a3:	int3   
 10067a4:	int3   
 10067a5:	int3   
 10067a6:	int3   
 10067a7:	int3   
 10067a8:	int3   
 10067a9:	int3   
 10067aa:	int3   
 10067ab:	int3   
 10067ac:	int3   
 10067ad:	int3   
 10067ae:	int3   
 10067af:	int3   
 10067b0:	mov    edi,edi
 10067b2:	push   esi
 10067b3:	push   0x0
 10067b5:	mov    esi,ecx
 10067b7:	push   0x1
 10067b9:	push   esi
 10067ba:	call   DWORD PTR ds:0x1001144
 10067c0:	test   eax,eax
 10067c2:	jne    0x10067cb
 10067c4:	mov    eax,0x1
 10067c9:	pop    esi
 10067ca:	ret    
 10067cb:	mov    eax,DWORD PTR [esi]
 10067cd:	cmp    eax,0x2
 10067d0:	je     0x10067ec
 10067d2:	push   edi
 10067d3:	mov    edi,DWORD PTR ds:0x1001140
 10067d9:	lea    esp,[esp+0x0]
 10067e0:	push   0x1
 10067e2:	call   edi
 10067e4:	mov    ecx,DWORD PTR [esi]
 10067e6:	cmp    ecx,0x2
 10067e9:	jne    0x10067e0
 10067eb:	pop    edi
 10067ec:	xor    eax,eax
 10067ee:	pop    esi
 10067ef:	ret    
 10067f0:	int3   
 10067f1:	int3   
 10067f2:	int3   
 10067f3:	int3   
 10067f4:	int3   
 10067f5:	int3   
 10067f6:	int3   
 10067f7:	int3   
 10067f8:	int3   
 10067f9:	int3   
 10067fa:	int3   
 10067fb:	int3   
 10067fc:	int3   
 10067fd:	int3   
 10067fe:	int3   
 10067ff:	int3   
 1006800:	mov    edi,edi
 1006802:	push   ebp
 1006803:	mov    ebp,esp
 1006805:	mov    eax,DWORD PTR [ebp+0x8]
 1006808:	push   0x1
 100680a:	push   0x2
 100680c:	push   ecx
 100680d:	mov    DWORD PTR [ecx+0x4],eax
 1006810:	call   DWORD PTR ds:0x1001144
 1006816:	pop    ebp
 1006817:	ret    0x4
 100681a:	int3   
 100681b:	int3   
 100681c:	int3   
 100681d:	int3   
 100681e:	int3   
 100681f:	int3   
 1006820:	mov    edi,edi
 1006822:	push   ebp
 1006823:	mov    ebp,esp
 1006825:	push   ecx
 1006826:	push   ebx
 1006827:	push   esi
 1006828:	push   edi
 1006829:	mov    edi,DWORD PTR [ebp+0xc]
 100682c:	test   edi,edi
 100682e:	mov    DWORD PTR [ebp-0x4],0x0
 1006835:	je     0x10068ac
 1006837:	mov    ebx,DWORD PTR [ebp+0x8]
 100683a:	test   ebx,ebx
 100683c:	je     0x10068ac
 100683e:	mov    esi,DWORD PTR [ebp+0x10]
 1006841:	test   esi,esi
 1006843:	je     0x10068ac
 1006845:	push   0x1
 1006847:	push   esi
 1006848:	push   edi
 1006849:	call   0x1006580
 100684e:	test   eax,eax
 1006850:	jne    0x1006860
 1006852:	pop    edi
 1006853:	pop    esi
 1006854:	mov    eax,0x800703e6
 1006859:	pop    ebx
 100685a:	mov    esp,ebp
 100685c:	pop    ebp
 100685d:	ret    0xc
 1006860:	lea    eax,[ebp-0x4]
 1006863:	push   eax
 1006864:	push   esi
 1006865:	push   ebx
 1006866:	push   edi
 1006867:	call   DWORD PTR ds:0x1001150
 100686d:	push   eax
 100686e:	call   DWORD PTR ds:0x1001078
 1006874:	test   eax,eax
 1006876:	je     0x100688f
 1006878:	mov    eax,DWORD PTR [ebp-0x4]
 100687b:	sub    eax,esi
 100687d:	neg    eax
 100687f:	pop    edi
 1006880:	sbb    eax,eax
 1006882:	pop    esi
 1006883:	and    eax,0x8007012b
 1006888:	pop    ebx
 1006889:	mov    esp,ebp
 100688b:	pop    ebp
 100688c:	ret    0xc
 100688f:	call   DWORD PTR ds:0x1001114
 1006895:	test   eax,eax
 1006897:	jle    0x10068b1
 1006899:	pop    edi
 100689a:	and    eax,0xffff
 100689f:	pop    esi
 10068a0:	or     eax,0x80070000
 10068a5:	pop    ebx
 10068a6:	mov    esp,ebp
 10068a8:	pop    ebp
 10068a9:	ret    0xc
 10068ac:	mov    eax,0x80070057
 10068b1:	pop    edi
 10068b2:	pop    esi
 10068b3:	pop    ebx
 10068b4:	mov    esp,ebp
 10068b6:	pop    ebp
 10068b7:	ret    0xc
 10068ba:	int3   
 10068bb:	int3   
 10068bc:	int3   
 10068bd:	int3   
 10068be:	int3   
 10068bf:	int3   
 10068c0:	mov    edi,edi
 10068c2:	push   ebp
 10068c3:	mov    ebp,esp
 10068c5:	mov    ecx,DWORD PTR [ebp+0xc]
 10068c8:	xor    eax,eax
 10068ca:	test   ecx,ecx
 10068cc:	je     0x10068d6
 10068ce:	cmp    ecx,0x7fffffff
 10068d4:	jbe    0x10068db
 10068d6:	mov    eax,0x80070057
 10068db:	test   eax,eax
 10068dd:	jl     0x1006926
 10068df:	mov    eax,DWORD PTR [ebp+0x18]
 10068e2:	mov    edx,DWORD PTR [ebp+0x10]
 10068e5:	push   ebx
 10068e6:	push   esi
 10068e7:	push   edi
 10068e8:	mov    edi,DWORD PTR [ebp+0x8]
 10068eb:	push   eax
 10068ec:	lea    esi,[ecx-0x1]
 10068ef:	mov    ecx,DWORD PTR [ebp+0x14]
 10068f2:	push   ecx
 10068f3:	push   edx
 10068f4:	push   esi
 10068f5:	push   edi
 10068f6:	xor    ebx,ebx
 10068f8:	call   DWORD PTR ds:0x1001188
 10068fe:	add    esp,0x14
 1006901:	test   eax,eax
 1006903:	jl     0x1006918
 1006905:	cmp    eax,esi
 1006907:	ja     0x1006918
 1006909:	jne    0x1006921
 100690b:	mov    WORD PTR [edi+esi*2],bx
 100690f:	pop    edi
 1006910:	pop    esi
 1006911:	mov    eax,ebx
 1006913:	pop    ebx
 1006914:	pop    ebp
 1006915:	ret    0x14
 1006918:	mov    WORD PTR [edi+esi*2],bx
 100691c:	mov    ebx,0x8007007a
 1006921:	pop    edi
 1006922:	pop    esi
 1006923:	mov    eax,ebx
 1006925:	pop    ebx
 1006926:	pop    ebp
 1006927:	ret    0x14
 100692a:	int3   
 100692b:	int3   
 100692c:	int3   
 100692d:	int3   
 100692e:	int3   
 100692f:	int3   
 1006930:	mov    edi,edi
 1006932:	push   ebp
 1006933:	mov    ebp,esp
 1006935:	push   esi
 1006936:	mov    esi,DWORD PTR [ebp+0xc]
 1006939:	cmp    esi,0x7fffffff
 100693f:	jbe    0x1006949
 1006941:	mov    eax,0x80070057
 1006946:	pop    esi
 1006947:	pop    ebp
 1006948:	ret    
 1006949:	push   ebx
 100694a:	mov    ebx,DWORD PTR [ebp+0x8]
 100694d:	test   ebx,ebx
 100694f:	push   edi
 1006950:	mov    DWORD PTR [ebp+0xc],0x0
 1006957:	je     0x100696d
 1006959:	lea    edi,[ebp+0xc]
 100695c:	mov    ecx,esi
 100695e:	mov    edx,ebx
 1006960:	call   0x1006680
 1006965:	test   eax,eax
 1006967:	jge    0x1006976
 1006969:	xor    edi,edi
 100696b:	jmp    0x1006979
 100696d:	mov    eax,0x80070057
 1006972:	xor    edi,edi
 1006974:	jmp    0x1006979
 1006976:	mov    edi,DWORD PTR [ebp+0xc]
 1006979:	test   eax,eax
 100697b:	jl     0x1006997
 100697d:	lea    eax,[ebp+0x14]
 1006980:	push   eax
 1006981:	call   0x1003117
 1006986:	mov    ecx,DWORD PTR [ebp+0x10]
 1006989:	push   eax
 100698a:	push   ecx
 100698b:	sub    esi,edi
 100698d:	push   esi
 100698e:	lea    edx,[ebx+edi*2]
 1006991:	push   edx
 1006992:	call   0x10068c0
 1006997:	pop    edi
 1006998:	pop    ebx
 1006999:	pop    esi
 100699a:	pop    ebp
 100699b:	ret    
 100699c:	int3   
 100699d:	int3   
 100699e:	int3   
 100699f:	int3   
 10069a0:	int3   
 10069a1:	int3   
 10069a2:	int3   
 10069a3:	int3   
 10069a4:	int3   
 10069a5:	int3   
 10069a6:	int3   
 10069a7:	int3   
 10069a8:	int3   
 10069a9:	int3   
 10069aa:	int3   
 10069ab:	int3   
 10069ac:	int3   
 10069ad:	int3   
 10069ae:	int3   
 10069af:	int3   
 10069b0:	mov    edi,edi
 10069b2:	push   ebp
 10069b3:	mov    ebp,esp
 10069b5:	push   ecx
 10069b6:	push   ebx
 10069b7:	push   esi
 10069b8:	mov    esi,DWORD PTR [ebp+0x10]
 10069bb:	push   edi
 10069bc:	mov    edi,DWORD PTR [ebp+0x14]
 10069bf:	push   0x10017b8
 10069c4:	push   edi
 10069c5:	lea    eax,[edi+edi*1]
 10069c8:	xor    ebx,ebx
 10069ca:	push   esi
 10069cb:	mov    DWORD PTR [ebp-0x4],ebx
 10069ce:	mov    DWORD PTR [ebp+0x14],eax
 10069d1:	call   0x1002c9c
 10069d6:	cmp    DWORD PTR [ebp+0x14],edi
 10069d9:	jae    0x10069e9
 10069db:	pop    edi
 10069dc:	pop    esi
 10069dd:	mov    eax,0x80070057
 10069e2:	pop    ebx
 10069e3:	mov    esp,ebp
 10069e5:	pop    ebp
 10069e6:	ret    0x10
 10069e9:	mov    eax,DWORD PTR [ebp+0xc]
 10069ec:	lea    ecx,[ebp+0x14]
 10069ef:	push   ecx
 10069f0:	mov    ecx,DWORD PTR [ebp+0x8]
 10069f3:	push   esi
 10069f4:	lea    edx,[ebp-0x4]
 10069f7:	push   edx
 10069f8:	push   0x0
 10069fa:	push   eax
 10069fb:	push   ecx
 10069fc:	call   DWORD PTR ds:0x1001004
 1006a02:	test   eax,eax
 1006a04:	jne    0x1006a59
 1006a06:	cmp    DWORD PTR [ebp-0x4],0x1
 1006a0a:	jne    0x1006a49
 1006a0c:	mov    eax,DWORD PTR [ebp+0x14]
 1006a0f:	test   al,0x1
 1006a11:	jne    0x1006a49
 1006a13:	cmp    eax,0x2
 1006a16:	jb     0x1006a49
 1006a18:	shr    eax,1
 1006a1a:	sub    eax,0x1
 1006a1d:	cmp    WORD PTR [esi+eax*2],bx
 1006a21:	je     0x1006a67
 1006a23:	add    eax,0x1
 1006a26:	cmp    eax,edi
 1006a28:	jae    0x1006a39
 1006a2a:	mov    WORD PTR [esi+eax*2],bx
 1006a2e:	pop    edi
 1006a2f:	pop    esi
 1006a30:	mov    eax,ebx
 1006a32:	pop    ebx
 1006a33:	mov    esp,ebp
 1006a35:	pop    ebp
 1006a36:	ret    0x10
 1006a39:	pop    edi
 1006a3a:	mov    ebx,0x8007007a
 1006a3f:	pop    esi
 1006a40:	mov    eax,ebx
 1006a42:	pop    ebx
 1006a43:	mov    esp,ebp
 1006a45:	pop    ebp
 1006a46:	ret    0x10
 1006a49:	pop    edi
 1006a4a:	mov    ebx,0x8007000b
 1006a4f:	pop    esi
 1006a50:	mov    eax,ebx
 1006a52:	pop    ebx
 1006a53:	mov    esp,ebp
 1006a55:	pop    ebp
 1006a56:	ret    0x10
 1006a59:	jle    0x1006a65
 1006a5b:	and    eax,0xffff
 1006a60:	or     eax,0x80070000
 1006a65:	mov    ebx,eax
 1006a67:	pop    edi
 1006a68:	pop    esi
 1006a69:	mov    eax,ebx
 1006a6b:	pop    ebx
 1006a6c:	mov    esp,ebp
 1006a6e:	pop    ebp
 1006a6f:	ret    0x10
 1006a72:	int3   
 1006a73:	int3   
 1006a74:	int3   
 1006a75:	int3   
 1006a76:	int3   
 1006a77:	int3   
 1006a78:	int3   
 1006a79:	int3   
 1006a7a:	int3   
 1006a7b:	int3   
 1006a7c:	int3   
 1006a7d:	int3   
 1006a7e:	int3   
 1006a7f:	int3   
 1006a80:	mov    edi,edi
 1006a82:	push   ebp
 1006a83:	mov    ebp,esp
 1006a85:	mov    eax,DWORD PTR [ebp+0x14]
 1006a88:	mov    ecx,DWORD PTR [ebp+0x10]
 1006a8b:	mov    edx,DWORD PTR [ebp+0xc]
 1006a8e:	push   eax
 1006a8f:	push   ecx
 1006a90:	push   edx
 1006a91:	call   0x1006820
 1006a96:	pop    ebp
 1006a97:	ret    0x10
 1006a9a:	int3   
 1006a9b:	int3   
 1006a9c:	int3   
 1006a9d:	int3   
 1006a9e:	int3   
 1006a9f:	int3   
 1006aa0:	mov    edi,edi
 1006aa2:	push   ebp
 1006aa3:	mov    ebp,esp
 1006aa5:	mov    eax,DWORD PTR [ebp+0x8]
 1006aa8:	mov    ecx,DWORD PTR [ebp+0xc]
 1006aab:	mov    DWORD PTR [eax+0x40],ecx
 1006aae:	xor    eax,eax
 1006ab0:	pop    ebp
 1006ab1:	ret    0x8
 1006ab4:	int3   
 1006ab5:	int3   
 1006ab6:	int3   
 1006ab7:	int3   
 1006ab8:	int3   
 1006ab9:	int3   
 1006aba:	int3   
 1006abb:	int3   
 1006abc:	int3   
 1006abd:	int3   
 1006abe:	int3   
 1006abf:	int3   
 1006ac0:	mov    edi,edi
 1006ac2:	push   ebp
 1006ac3:	mov    ebp,esp
 1006ac5:	push   esi
 1006ac6:	mov    esi,DWORD PTR [ebp+0x8]
 1006ac9:	cmp    DWORD PTR [esi+0x40],0x0
 1006acd:	push   edi
 1006ace:	je     0x1006afd
 1006ad0:	mov    eax,DWORD PTR [esi+0x68]
 1006ad3:	not    eax
 1006ad5:	and    eax,DWORD PTR [esi+0x64]
 1006ad8:	test   al,0x20
 1006ada:	jne    0x1006afd
 1006adc:	mov    edi,DWORD PTR ds:0x1001118
 1006ae2:	call   edi
 1006ae4:	cmp    eax,DWORD PTR [esi+0x40]
 1006ae7:	je     0x1006afd
 1006ae9:	call   edi
 1006aeb:	cmp    eax,DWORD PTR [esi+0x60]
 1006aee:	je     0x1006afd
 1006af0:	mov    ecx,DWORD PTR [ebp+0xc]
 1006af3:	xor    eax,eax
 1006af5:	pop    edi
 1006af6:	mov    DWORD PTR [ecx],eax
 1006af8:	pop    esi
 1006af9:	pop    ebp
 1006afa:	ret    0x8
 1006afd:	mov    edx,DWORD PTR [ebp+0xc]
 1006b00:	mov    eax,0x1
 1006b05:	pop    edi
 1006b06:	mov    DWORD PTR [edx],eax
 1006b08:	xor    eax,eax
 1006b0a:	pop    esi
 1006b0b:	pop    ebp
 1006b0c:	ret    0x8
 1006b0f:	int3   
 1006b10:	int3   
 1006b11:	int3   
 1006b12:	int3   
 1006b13:	int3   
 1006b14:	int3   
 1006b15:	int3   
 1006b16:	int3   
 1006b17:	int3   
 1006b18:	int3   
 1006b19:	int3   
 1006b1a:	int3   
 1006b1b:	int3   
 1006b1c:	int3   
 1006b1d:	int3   
 1006b1e:	int3   
 1006b1f:	int3   
 1006b20:	mov    edi,edi
 1006b22:	push   ebp
 1006b23:	mov    ebp,esp
 1006b25:	mov    eax,DWORD PTR [ebp+0x8]
 1006b28:	mov    ecx,DWORD PTR [ebp+0xc]
 1006b2b:	mov    DWORD PTR [eax+0xb20],ecx
 1006b31:	xor    eax,eax
 1006b33:	pop    ebp
 1006b34:	ret    0x8
 1006b37:	int3   
 1006b38:	int3   
 1006b39:	int3   
 1006b3a:	int3   
 1006b3b:	int3   
 1006b3c:	int3   
 1006b3d:	int3   
 1006b3e:	int3   
 1006b3f:	int3   
 1006b40:	mov    edi,edi
 1006b42:	push   ebp
 1006b43:	mov    ebp,esp
 1006b45:	mov    eax,DWORD PTR [ebp+0x8]
 1006b48:	mov    ecx,DWORD PTR [ebp+0xc]
 1006b4b:	mov    DWORD PTR [eax+0x54],ecx
 1006b4e:	xor    eax,eax
 1006b50:	pop    ebp
 1006b51:	ret    0x8
 1006b54:	int3   
 1006b55:	int3   
 1006b56:	int3   
 1006b57:	int3   
 1006b58:	int3   
 1006b59:	int3   
 1006b5a:	int3   
 1006b5b:	int3   
 1006b5c:	int3   
 1006b5d:	int3   
 1006b5e:	int3   
 1006b5f:	int3   
 1006b60:	mov    edi,edi
 1006b62:	push   ebp
 1006b63:	mov    ebp,esp
 1006b65:	mov    eax,DWORD PTR [ebp+0x8]
 1006b68:	mov    ecx,DWORD PTR [ebp+0xc]
 1006b6b:	mov    edx,DWORD PTR [ebp+0x10]
 1006b6e:	mov    DWORD PTR [eax+0x58],ecx
 1006b71:	mov    DWORD PTR [eax+0x5c],edx
 1006b74:	xor    eax,eax
 1006b76:	pop    ebp
 1006b77:	ret    0xc
 1006b7a:	int3   
 1006b7b:	int3   
 1006b7c:	int3   
 1006b7d:	int3   
 1006b7e:	int3   
 1006b7f:	int3   
 1006b80:	mov    edi,edi
 1006b82:	push   ebp
 1006b83:	mov    ebp,esp
 1006b85:	mov    eax,DWORD PTR [ebp+0x8]
 1006b88:	mov    ecx,DWORD PTR [ebp+0xc]
 1006b8b:	mov    edx,DWORD PTR [ebp+0x10]
 1006b8e:	mov    DWORD PTR [eax+0x6c],ecx
 1006b91:	mov    DWORD PTR [eax+0x70],edx
 1006b94:	xor    eax,eax
 1006b96:	pop    ebp
 1006b97:	ret    0xc
 1006b9a:	int3   
 1006b9b:	int3   
 1006b9c:	int3   
 1006b9d:	int3   
 1006b9e:	int3   
 1006b9f:	int3   
 1006ba0:	mov    edi,edi
 1006ba2:	push   ebp
 1006ba3:	mov    ebp,esp
 1006ba5:	mov    ecx,DWORD PTR [ebp+0x10]
 1006ba8:	mov    eax,DWORD PTR [ebp+0xc]
 1006bab:	push   esi
 1006bac:	mov    esi,DWORD PTR [ebp+0x8]
 1006baf:	mov    DWORD PTR [esi+0x68],ecx
 1006bb2:	mov    ecx,DWORD PTR [esi+0x8]
 1006bb5:	test   ecx,ecx
 1006bb7:	mov    DWORD PTR [esi+0x64],eax
 1006bba:	je     0x1006bd2
 1006bbc:	call   0x10051d0
 1006bc1:	test   eax,eax
 1006bc3:	je     0x1006bd2
 1006bc5:	mov    eax,0x20000
 1006bca:	test   DWORD PTR [esi+0x68],eax
 1006bcd:	jne    0x1006bd2
 1006bcf:	or     DWORD PTR [esi+0x64],eax
 1006bd2:	xor    eax,eax
 1006bd4:	pop    esi
 1006bd5:	pop    ebp
 1006bd6:	ret    0xc
 1006bd9:	int3   
 1006bda:	int3   
 1006bdb:	int3   
 1006bdc:	int3   
 1006bdd:	int3   
 1006bde:	int3   
 1006bdf:	int3   
 1006be0:	mov    edi,edi
 1006be2:	push   ebp
 1006be3:	mov    ebp,esp
 1006be5:	mov    eax,DWORD PTR [ebp+0x8]
 1006be8:	mov    ecx,DWORD PTR [ebp+0xc]
 1006beb:	mov    DWORD PTR [eax+0x24],ecx
 1006bee:	xor    eax,eax
 1006bf0:	pop    ebp
 1006bf1:	ret    0x8
 1006bf4:	int3   
 1006bf5:	int3   
 1006bf6:	int3   
 1006bf7:	int3   
 1006bf8:	int3   
 1006bf9:	int3   
 1006bfa:	int3   
 1006bfb:	int3   
 1006bfc:	int3   
 1006bfd:	int3   
 1006bfe:	int3   
 1006bff:	int3   
 1006c00:	mov    edi,edi
 1006c02:	push   ebp
 1006c03:	mov    ebp,esp
 1006c05:	mov    eax,DWORD PTR [ebp+0x8]
 1006c08:	mov    ecx,DWORD PTR [ebp+0xc]
 1006c0b:	mov    DWORD PTR [eax+0x20],ecx
 1006c0e:	xor    eax,eax
 1006c10:	pop    ebp
 1006c11:	ret    0x8
 1006c14:	int3   
 1006c15:	int3   
 1006c16:	int3   
 1006c17:	int3   
 1006c18:	int3   
 1006c19:	int3   
 1006c1a:	int3   
 1006c1b:	int3   
 1006c1c:	int3   
 1006c1d:	int3   
 1006c1e:	int3   
 1006c1f:	int3   
 1006c20:	mov    edi,edi
 1006c22:	push   ebp
 1006c23:	mov    ebp,esp
 1006c25:	mov    eax,DWORD PTR [ebp+0x8]
 1006c28:	mov    ecx,DWORD PTR [ebp+0xc]
 1006c2b:	mov    edx,DWORD PTR [ebp+0x10]
 1006c2e:	mov    DWORD PTR [eax+0x60],ecx
 1006c31:	mov    ecx,DWORD PTR [ebp+0x14]
 1006c34:	mov    DWORD PTR [eax+0x1c],edx
 1006c37:	mov    DWORD PTR [eax+0x18],ecx
 1006c3a:	xor    eax,eax
 1006c3c:	pop    ebp
 1006c3d:	ret    0x10
 1006c40:	int3   
 1006c41:	int3   
 1006c42:	int3   
 1006c43:	int3   
 1006c44:	int3   
 1006c45:	int3   
 1006c46:	int3   
 1006c47:	int3   
 1006c48:	int3   
 1006c49:	int3   
 1006c4a:	int3   
 1006c4b:	int3   
 1006c4c:	int3   
 1006c4d:	int3   
 1006c4e:	int3   
 1006c4f:	int3   
 1006c50:	mov    edi,edi
 1006c52:	push   ebp
 1006c53:	mov    ebp,esp
 1006c55:	mov    eax,DWORD PTR [ebp+0x8]
 1006c58:	mov    ecx,DWORD PTR [ebp+0xc]
 1006c5b:	mov    DWORD PTR [eax+0x48],ecx
 1006c5e:	xor    eax,eax
 1006c60:	pop    ebp
 1006c61:	ret    0x8
 1006c64:	int3   
 1006c65:	int3   
 1006c66:	int3   
 1006c67:	int3   
 1006c68:	int3   
 1006c69:	int3   
 1006c6a:	int3   
 1006c6b:	int3   
 1006c6c:	int3   
 1006c6d:	int3   
 1006c6e:	int3   
 1006c6f:	int3   
 1006c70:	mov    edi,edi
 1006c72:	push   ebp
 1006c73:	mov    ebp,esp
 1006c75:	mov    eax,DWORD PTR [ebp+0x8]
 1006c78:	mov    ecx,DWORD PTR [ebp+0xc]
 1006c7b:	mov    DWORD PTR [eax+0x2c],ecx
 1006c7e:	xor    eax,eax
 1006c80:	pop    ebp
 1006c81:	ret    0x8
 1006c84:	int3   
 1006c85:	int3   
 1006c86:	int3   
 1006c87:	int3   
 1006c88:	int3   
 1006c89:	int3   
 1006c8a:	int3   
 1006c8b:	int3   
 1006c8c:	int3   
 1006c8d:	int3   
 1006c8e:	int3   
 1006c8f:	int3   
 1006c90:	mov    edi,edi
 1006c92:	push   ebp
 1006c93:	mov    ebp,esp
 1006c95:	mov    eax,DWORD PTR [ebp+0x8]
 1006c98:	mov    ecx,DWORD PTR [ebp+0xc]
 1006c9b:	mov    DWORD PTR [eax+0x28],ecx
 1006c9e:	xor    eax,eax
 1006ca0:	pop    ebp
 1006ca1:	ret    0x8
 1006ca4:	int3   
 1006ca5:	int3   
 1006ca6:	int3   
 1006ca7:	int3   
 1006ca8:	int3   
 1006ca9:	int3   
 1006caa:	int3   
 1006cab:	int3   
 1006cac:	int3   
 1006cad:	int3   
 1006cae:	int3   
 1006caf:	int3   
 1006cb0:	mov    edi,edi
 1006cb2:	push   ebp
 1006cb3:	mov    ebp,esp
 1006cb5:	mov    eax,DWORD PTR [ebp+0x8]
 1006cb8:	mov    ecx,DWORD PTR [ebp+0xc]
 1006cbb:	mov    DWORD PTR [eax+0x14],ecx
 1006cbe:	xor    eax,eax
 1006cc0:	pop    ebp
 1006cc1:	ret    0x8
 1006cc4:	int3   
 1006cc5:	int3   
 1006cc6:	int3   
 1006cc7:	int3   
 1006cc8:	int3   
 1006cc9:	int3   
 1006cca:	int3   
 1006ccb:	int3   
 1006ccc:	int3   
 1006ccd:	int3   
 1006cce:	int3   
 1006ccf:	int3   
 1006cd0:	mov    edi,edi
 1006cd2:	push   ebp
 1006cd3:	mov    ebp,esp
 1006cd5:	mov    eax,DWORD PTR [ebp+0x8]
 1006cd8:	mov    ecx,DWORD PTR [ebp+0xc]
 1006cdb:	mov    DWORD PTR [eax+0x30],ecx
 1006cde:	xor    eax,eax
 1006ce0:	pop    ebp
 1006ce1:	ret    0x8
 1006ce4:	int3   
 1006ce5:	int3   
 1006ce6:	int3   
 1006ce7:	int3   
 1006ce8:	int3   
 1006ce9:	int3   
 1006cea:	int3   
 1006ceb:	int3   
 1006cec:	int3   
 1006ced:	int3   
 1006cee:	int3   
 1006cef:	int3   
 1006cf0:	mov    edi,edi
 1006cf2:	push   ebp
 1006cf3:	mov    ebp,esp
 1006cf5:	mov    eax,DWORD PTR [ebp+0x8]
 1006cf8:	mov    ecx,DWORD PTR [ebp+0xc]
 1006cfb:	mov    edx,DWORD PTR [ebp+0x10]
 1006cfe:	mov    DWORD PTR [eax+0x4c],ecx
 1006d01:	mov    DWORD PTR [eax+0x50],edx
 1006d04:	xor    eax,eax
 1006d06:	pop    ebp
 1006d07:	ret    0xc
 1006d0a:	int3   
 1006d0b:	int3   
 1006d0c:	int3   
 1006d0d:	int3   
 1006d0e:	int3   
 1006d0f:	int3   
 1006d10:	mov    edi,edi
 1006d12:	push   ebp
 1006d13:	mov    ebp,esp
 1006d15:	mov    eax,DWORD PTR [ebp+0x8]
 1006d18:	mov    ecx,DWORD PTR [ebp+0xc]
 1006d1b:	mov    DWORD PTR [eax+0x34],ecx
 1006d1e:	xor    eax,eax
 1006d20:	pop    ebp
 1006d21:	ret    0x8
 1006d24:	int3   
 1006d25:	int3   
 1006d26:	int3   
 1006d27:	int3   
 1006d28:	int3   
 1006d29:	int3   
 1006d2a:	int3   
 1006d2b:	int3   
 1006d2c:	int3   
 1006d2d:	int3   
 1006d2e:	int3   
 1006d2f:	int3   
 1006d30:	mov    edi,edi
 1006d32:	push   ebp
 1006d33:	mov    ebp,esp
 1006d35:	mov    eax,DWORD PTR [ebp+0x8]
 1006d38:	mov    ecx,DWORD PTR [ebp+0xc]
 1006d3b:	mov    DWORD PTR [eax+0x38],ecx
 1006d3e:	xor    eax,eax
 1006d40:	pop    ebp
 1006d41:	ret    0x8
 1006d44:	int3   
 1006d45:	int3   
 1006d46:	int3   
 1006d47:	int3   
 1006d48:	int3   
 1006d49:	int3   
 1006d4a:	int3   
 1006d4b:	int3   
 1006d4c:	int3   
 1006d4d:	int3   
 1006d4e:	int3   
 1006d4f:	int3   
 1006d50:	mov    edi,edi
 1006d52:	push   ebp
 1006d53:	mov    ebp,esp
 1006d55:	mov    eax,DWORD PTR [ebp+0x8]
 1006d58:	mov    ecx,DWORD PTR [ebp+0xc]
 1006d5b:	mov    DWORD PTR [eax+0xb34],ecx
 1006d61:	xor    eax,eax
 1006d63:	pop    ebp
 1006d64:	ret    0x8
 1006d67:	int3   
 1006d68:	int3   
 1006d69:	int3   
 1006d6a:	int3   
 1006d6b:	int3   
 1006d6c:	int3   
 1006d6d:	int3   
 1006d6e:	int3   
 1006d6f:	int3   
 1006d70:	mov    edi,edi
 1006d72:	push   ebp
 1006d73:	mov    ebp,esp
 1006d75:	mov    ecx,DWORD PTR [ebp+0x8]
 1006d78:	cmp    DWORD PTR [ecx+0xb30],0x0
 1006d7f:	mov    eax,0x80004005
 1006d84:	je     0x1006da5
 1006d86:	cmp    DWORD PTR [ecx+0xb2c],0x0
 1006d8d:	jne    0x1006da5
 1006d8f:	cmp    DWORD PTR [ecx+0xb28],0x0
 1006d96:	je     0x1006da5
 1006d98:	mov    ecx,DWORD PTR [ecx+0xb24]
 1006d9e:	mov    edx,DWORD PTR [ebp+0xc]
 1006da1:	xor    eax,eax
 1006da3:	mov    DWORD PTR [edx],ecx
 1006da5:	pop    ebp
 1006da6:	ret    0x8
 1006da9:	int3   
 1006daa:	int3   
 1006dab:	int3   
 1006dac:	int3   
 1006dad:	int3   
 1006dae:	int3   
 1006daf:	int3   
 1006db0:	mov    edi,edi
 1006db2:	push   ebp
 1006db3:	mov    ebp,esp
 1006db5:	push   esi
 1006db6:	mov    esi,DWORD PTR [ebp+0x10]
 1006db9:	push   edi
 1006dba:	mov    edi,DWORD PTR [ebp+0xc]
 1006dbd:	push   edi
 1006dbe:	push   0x100183c
 1006dc3:	mov    DWORD PTR [esi],0x0
 1006dc9:	call   0x1004fe0
 1006dce:	test   eax,eax
 1006dd0:	jne    0x1006de1
 1006dd2:	push   edi
 1006dd3:	push   0x1002130
 1006dd8:	call   0x1004fe0
 1006ddd:	test   eax,eax
 1006ddf:	je     0x1006df6
 1006de1:	mov    eax,DWORD PTR [ebp+0x8]
 1006de4:	mov    DWORD PTR [esi],eax
 1006de6:	mov    ecx,DWORD PTR [eax]
 1006de8:	mov    edx,DWORD PTR [ecx+0x4]
 1006deb:	push   eax
 1006dec:	call   edx
 1006dee:	pop    edi
 1006def:	xor    eax,eax
 1006df1:	pop    esi
 1006df2:	pop    ebp
 1006df3:	ret    0xc
 1006df6:	pop    edi
 1006df7:	mov    eax,0x80004002
 1006dfc:	pop    esi
 1006dfd:	pop    ebp
 1006dfe:	ret    0xc
 1006e01:	int3   
 1006e02:	int3   
 1006e03:	int3   
 1006e04:	int3   
 1006e05:	int3   
 1006e06:	int3   
 1006e07:	int3   
 1006e08:	int3   
 1006e09:	int3   
 1006e0a:	int3   
 1006e0b:	int3   
 1006e0c:	int3   
 1006e0d:	int3   
 1006e0e:	int3   
 1006e0f:	int3   
 1006e10:	mov    edi,edi
 1006e12:	push   ebp
 1006e13:	mov    ebp,esp
 1006e15:	mov    eax,DWORD PTR [ebp+0x8]
 1006e18:	add    eax,0x4
 1006e1b:	push   eax
 1006e1c:	call   DWORD PTR ds:0x1001124
 1006e22:	pop    ebp
 1006e23:	ret    0x4
 1006e26:	int3   
 1006e27:	int3   
 1006e28:	int3   
 1006e29:	int3   
 1006e2a:	int3   
 1006e2b:	int3   
 1006e2c:	int3   
 1006e2d:	int3   
 1006e2e:	int3   
 1006e2f:	int3   
 1006e30:	mov    edi,edi
 1006e32:	push   ebp
 1006e33:	mov    ebp,esp
 1006e35:	push   esi
 1006e36:	push   edi
 1006e37:	mov    edi,DWORD PTR [ebp+0x8]
 1006e3a:	lea    eax,[edi+0x4]
 1006e3d:	push   eax
 1006e3e:	call   DWORD PTR ds:0x1001074
 1006e44:	mov    esi,eax
 1006e46:	test   esi,esi
 1006e48:	jne    0x1006e55
 1006e4a:	mov    ecx,DWORD PTR [edi+0x8]
 1006e4d:	push   edi
 1006e4e:	call   0x10055e0
 1006e53:	mov    eax,esi
 1006e55:	pop    edi
 1006e56:	pop    esi
 1006e57:	pop    ebp
 1006e58:	ret    0x4
 1006e5b:	int3   
 1006e5c:	int3   
 1006e5d:	int3   
 1006e5e:	int3   
 1006e5f:	int3   
 1006e60:	xor    eax,eax
 1006e62:	test   ecx,ecx
 1006e64:	push   esi
 1006e65:	mov    esi,ecx
 1006e67:	je     0x1006e83
 1006e69:	lea    esp,[esp+0x0]
 1006e70:	cmp    WORD PTR [edx],ax
 1006e73:	je     0x1006e7f
 1006e75:	add    edx,0x2
 1006e78:	sub    ecx,0x1
 1006e7b:	jne    0x1006e70
 1006e7d:	jmp    0x1006e83
 1006e7f:	test   ecx,ecx
 1006e81:	jne    0x1006e88
 1006e83:	mov    eax,0x80070057
 1006e88:	test   edi,edi
 1006e8a:	je     0x1006e9c
 1006e8c:	test   eax,eax
 1006e8e:	jl     0x1006e96
 1006e90:	sub    esi,ecx
 1006e92:	mov    DWORD PTR [edi],esi
 1006e94:	pop    esi
 1006e95:	ret    
 1006e96:	mov    DWORD PTR [edi],0x0
 1006e9c:	pop    esi
 1006e9d:	ret    
 1006e9e:	int3   
 1006e9f:	int3   
 1006ea0:	int3   
 1006ea1:	int3   
 1006ea2:	int3   
 1006ea3:	int3   
 1006ea4:	int3   
 1006ea5:	int3   
 1006ea6:	int3   
 1006ea7:	int3   
 1006ea8:	int3   
 1006ea9:	int3   
 1006eaa:	int3   
 1006eab:	int3   
 1006eac:	int3   
 1006ead:	int3   
 1006eae:	int3   
 1006eaf:	int3   
 1006eb0:	mov    edi,edi
 1006eb2:	push   ebp
 1006eb3:	mov    ebp,esp
 1006eb5:	push   ecx
 1006eb6:	push   ebx
 1006eb7:	push   esi
 1006eb8:	push   edi
 1006eb9:	mov    esi,ecx
 1006ebb:	mov    ebx,DWORD PTR [esi+0x224]
 1006ec1:	push   0x220
 1006ec6:	push   esi
 1006ec7:	mov    DWORD PTR [ebp-0x4],ebx
 1006eca:	call   0x1006460
 1006ecf:	mov    edi,eax
 1006ed1:	add    edi,ebx
 1006ed3:	xor    ebx,ebx
 1006ed5:	cmp    DWORD PTR [ebp-0x4],ebx
 1006ed8:	jbe    0x1006f08
 1006eda:	mov    DWORD PTR [ebp-0x4],ebx
 1006edd:	lea    ecx,[ecx+0x0]
 1006ee0:	mov    eax,DWORD PTR [esi+0x220]
 1006ee6:	add    eax,DWORD PTR [ebp-0x4]
 1006ee9:	push   0xb3c
 1006eee:	push   eax
 1006eef:	call   0x1006460
 1006ef4:	add    DWORD PTR [ebp-0x4],0xb3c
 1006efb:	add    ebx,0x1
 1006efe:	add    edi,eax
 1006f00:	cmp    ebx,DWORD PTR [esi+0x224]
 1006f06:	jb     0x1006ee0
 1006f08:	mov    eax,edi
 1006f0a:	pop    edi
 1006f0b:	pop    esi
 1006f0c:	pop    ebx
 1006f0d:	mov    esp,ebp
 1006f0f:	pop    ebp
 1006f10:	ret    
 1006f11:	int3   
 1006f12:	int3   
 1006f13:	int3   
 1006f14:	int3   
 1006f15:	int3   
 1006f16:	int3   
 1006f17:	int3   
 1006f18:	int3   
 1006f19:	int3   
 1006f1a:	int3   
 1006f1b:	int3   
 1006f1c:	int3   
 1006f1d:	int3   
 1006f1e:	int3   
 1006f1f:	int3   
 1006f20:	mov    edi,edi
 1006f22:	push   ebp
 1006f23:	mov    ebp,esp
 1006f25:	push   esi
 1006f26:	mov    esi,ecx
 1006f28:	mov    eax,DWORD PTR [esi+0x8]
 1006f2b:	test   eax,eax
 1006f2d:	je     0x1006f3e
 1006f2f:	mov    ecx,DWORD PTR [eax]
 1006f31:	mov    edx,DWORD PTR [ecx+0x8]
 1006f34:	push   eax
 1006f35:	call   edx
 1006f37:	mov    DWORD PTR [esi+0x8],0x0
 1006f3e:	mov    eax,DWORD PTR [ebp+0x8]
 1006f41:	mov    DWORD PTR [esi+0x8],eax
 1006f44:	mov    ecx,DWORD PTR [eax]
 1006f46:	mov    edx,DWORD PTR [ecx+0x4]
 1006f49:	push   eax
 1006f4a:	call   edx
 1006f4c:	mov    ecx,DWORD PTR [esi+0x8]
 1006f4f:	call   0x1004fd0
 1006f54:	mov    ecx,DWORD PTR [esi+0x8]
 1006f57:	mov    DWORD PTR [esi+0xb00],eax
 1006f5d:	call   0x1004fd0
 1006f62:	mov    DWORD PTR [esi+0xb14],eax
 1006f68:	pop    esi
 1006f69:	pop    ebp
 1006f6a:	ret    0x4
 1006f6d:	int3   
 1006f6e:	int3   
 1006f6f:	int3   
 1006f70:	int3   
 1006f71:	int3   
 1006f72:	int3   
 1006f73:	int3   
 1006f74:	int3   
 1006f75:	int3   
 1006f76:	int3   
 1006f77:	int3   
 1006f78:	int3   
 1006f79:	int3   
 1006f7a:	int3   
 1006f7b:	int3   
 1006f7c:	int3   
 1006f7d:	int3   
 1006f7e:	int3   
 1006f7f:	int3   
 1006f80:	mov    edi,edi
 1006f82:	push   ebp
 1006f83:	mov    ebp,esp
 1006f85:	mov    edx,DWORD PTR [ebp+0xc]
 1006f88:	test   edx,edx
 1006f8a:	jne    0x1006f95
 1006f8c:	mov    eax,0x80070057
 1006f91:	pop    ebp
 1006f92:	ret    0x8
 1006f95:	mov    ecx,DWORD PTR [ebp+0x8]
 1006f98:	mov    eax,DWORD PTR [ecx+0x60]
 1006f9b:	test   eax,eax
 1006f9d:	je     0x1006fa8
 1006f9f:	test   DWORD PTR [ecx+0x64],0x200000
 1006fa6:	je     0x1006fab
 1006fa8:	mov    eax,DWORD PTR [ecx+0x40]
 1006fab:	mov    DWORD PTR [edx],eax
 1006fad:	xor    eax,eax
 1006faf:	pop    ebp
 1006fb0:	ret    0x8
 1006fb3:	int3   
 1006fb4:	int3   
 1006fb5:	int3   
 1006fb6:	int3   
 1006fb7:	int3   
 1006fb8:	int3   
 1006fb9:	int3   
 1006fba:	int3   
 1006fbb:	int3   
 1006fbc:	int3   
 1006fbd:	int3   
 1006fbe:	int3   
 1006fbf:	int3   
 1006fc0:	mov    edi,edi
 1006fc2:	push   ebp
 1006fc3:	mov    ebp,esp
 1006fc5:	push   0xfffffffe
 1006fc7:	push   0x1008fd8
 1006fcc:	push   0x1003b37
 1006fd1:	mov    eax,fs:0x0
 1006fd7:	push   eax
 1006fd8:	sub    esp,0x1c
 1006fdb:	push   ebx
 1006fdc:	push   esi
 1006fdd:	push   edi
 1006fde:	mov    eax,ds:0x100b048
 1006fe3:	xor    DWORD PTR [ebp-0x8],eax
 1006fe6:	xor    eax,ebp
 1006fe8:	push   eax
 1006fe9:	lea    eax,[ebp-0x10]
 1006fec:	mov    fs:0x0,eax
 1006ff2:	mov    DWORD PTR [ebp-0x18],esp
 1006ff5:	mov    esi,ecx
 1006ff7:	mov    DWORD PTR [ebp-0x28],esi
 1006ffa:	xor    ebx,ebx
 1006ffc:	mov    DWORD PTR [ebp-0x20],ebx
 1006fff:	mov    DWORD PTR [ebp-0x1c],ebx
 1007002:	mov    DWORD PTR [ebp-0x4],ebx
 1007005:	mov    eax,DWORD PTR [esi+0xc]
 1007008:	mov    eax,DWORD PTR [eax]
 100700a:	lea    ebx,[ebx+0x0]
 1007010:	test   eax,eax
 1007012:	je     0x1007027
 1007014:	mov    edi,DWORD PTR [eax]
 1007016:	mov    ecx,DWORD PTR [esi+0x8]
 1007019:	push   ecx
 100701a:	push   eax
 100701b:	call   0x10052a0
 1007020:	add    esp,0x8
 1007023:	mov    eax,edi
 1007025:	jmp    0x1007010
 1007027:	mov    eax,0xfffffffe
 100702c:	mov    DWORD PTR [ebp-0x4],eax
 100702f:	jmp    0x1007071
 1007031:	mov    edx,DWORD PTR [ebp-0x14]
 1007034:	mov    eax,DWORD PTR [edx]
 1007036:	mov    ecx,DWORD PTR [eax]
 1007038:	mov    DWORD PTR [ebp-0x24],ecx
 100703b:	mov    eax,0x1
 1007040:	ret    
 1007041:	mov    esp,DWORD PTR [ebp-0x18]
 1007044:	mov    esi,DWORD PTR [ebp-0x24]
 1007047:	mov    DWORD PTR [ebp-0x1c],esi
 100704a:	cmp    esi,0xc00000fd
 1007050:	jne    0x1007058
 1007052:	call   DWORD PTR ds:0x1001184
 1007058:	test   esi,esi
 100705a:	jl     0x1007063
 100705c:	mov    DWORD PTR [ebp-0x1c],0x80004005
 1007063:	mov    eax,0xfffffffe
 1007068:	mov    DWORD PTR [ebp-0x4],eax
 100706b:	mov    esi,DWORD PTR [ebp-0x28]
 100706e:	mov    ebx,DWORD PTR [ebp-0x20]
 1007071:	test   ebx,ebx
 1007073:	jl     0x100707b
 1007075:	mov    ebx,DWORD PTR [ebp-0x1c]
 1007078:	mov    DWORD PTR [ebp-0x20],ebx
 100707b:	xor    edi,edi
 100707d:	mov    DWORD PTR [ebp-0x4],0x1
 1007084:	mov    edx,DWORD PTR [esi+0xc]
 1007087:	mov    DWORD PTR [edx],edi
 1007089:	mov    ecx,DWORD PTR [esi+0xc]
 100708c:	mov    DWORD PTR [esi+0x10],ecx
 100708f:	mov    DWORD PTR [ebp-0x4],eax
 1007092:	jmp    0x10070cd
 1007094:	mov    edx,DWORD PTR [ebp-0x14]
 1007097:	mov    eax,DWORD PTR [edx]
 1007099:	mov    ecx,DWORD PTR [eax]
 100709b:	mov    DWORD PTR [ebp-0x2c],ecx
 100709e:	mov    eax,0x1
 10070a3:	ret    
 10070a4:	mov    esp,DWORD PTR [ebp-0x18]
 10070a7:	mov    esi,DWORD PTR [ebp-0x2c]
 10070aa:	mov    edi,esi
 10070ac:	cmp    esi,0xc00000fd
 10070b2:	jne    0x10070ba
 10070b4:	call   DWORD PTR ds:0x1001184
 10070ba:	test   esi,esi
 10070bc:	jl     0x10070c3
 10070be:	mov    edi,0x80004005
 10070c3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10070ca:	mov    ebx,DWORD PTR [ebp-0x20]
 10070cd:	test   ebx,ebx
 10070cf:	jl     0x10070d3
 10070d1:	mov    ebx,edi
 10070d3:	mov    eax,ebx
 10070d5:	mov    ecx,DWORD PTR [ebp-0x10]
 10070d8:	mov    DWORD PTR fs:0x0,ecx
 10070df:	pop    ecx
 10070e0:	pop    edi
 10070e1:	pop    esi
 10070e2:	pop    ebx
 10070e3:	mov    esp,ebp
 10070e5:	pop    ebp
 10070e6:	ret    
 10070e7:	int3   
 10070e8:	int3   
 10070e9:	int3   
 10070ea:	int3   
 10070eb:	int3   
 10070ec:	int3   
 10070ed:	int3   
 10070ee:	int3   
 10070ef:	int3   
 10070f0:	lea    eax,[ecx+0x8]
 10070f3:	mov    ecx,DWORD PTR [eax]
 10070f5:	lea    edx,[ecx*8+0x8]
 10070fc:	push   edx
 10070fd:	push   eax
 10070fe:	call   0x1006460
 1007103:	ret    
 1007104:	int3   
 1007105:	int3   
 1007106:	int3   
 1007107:	int3   
 1007108:	int3   
 1007109:	int3   
 100710a:	int3   
 100710b:	int3   
 100710c:	int3   
 100710d:	int3   
 100710e:	int3   
 100710f:	int3   
 1007110:	mov    edi,edi
 1007112:	push   ebp
 1007113:	mov    ebp,esp
 1007115:	push   ebx
 1007116:	mov    ebx,DWORD PTR [ebp+0xc]
 1007119:	push   esi
 100711a:	xor    eax,eax
 100711c:	test   ebx,ebx
 100711e:	push   edi
 100711f:	je     0x1007129
 1007121:	cmp    ebx,0x7fffffff
 1007127:	jbe    0x100712e
 1007129:	mov    eax,0x80070057
 100712e:	test   eax,eax
 1007130:	jl     0x1007144
 1007132:	mov    edx,DWORD PTR [ebp+0x8]
 1007135:	lea    edi,[ebp+0xc]
 1007138:	mov    ecx,ebx
 100713a:	call   0x1006e60
 100713f:	mov    esi,DWORD PTR [ebp+0xc]
 1007142:	jmp    0x1007146
 1007144:	xor    esi,esi
 1007146:	test   eax,eax
 1007148:	jl     0x10071b0
 100714a:	mov    eax,DWORD PTR [ebp+0x8]
 100714d:	mov    ecx,ebx
 100714f:	sub    ecx,esi
 1007151:	lea    edx,[eax+esi*2]
 1007154:	mov    eax,0x0
 1007159:	je     0x10071a3
 100715b:	mov    edi,ecx
 100715d:	sub    edi,ebx
 100715f:	mov    ebx,DWORD PTR [ebp+0x10]
 1007162:	lea    edi,[edi+esi*1+0x7fffffff]
 1007169:	sub    ebx,edx
 100716b:	jmp    0x1007170
 100716d:	lea    ecx,[ecx+0x0]
 1007170:	test   edi,edi
 1007172:	je     0x100719f
 1007174:	movzx  esi,WORD PTR [ebx+edx*1]
 1007178:	test   si,si
 100717b:	je     0x100719f
 100717d:	mov    WORD PTR [edx],si
 1007180:	sub    ecx,0x1
 1007183:	add    edx,0x2
 1007186:	sub    edi,0x1
 1007189:	test   ecx,ecx
 100718b:	jne    0x1007170
 100718d:	pop    edi
 100718e:	sub    edx,0x2
 1007191:	pop    esi
 1007192:	mov    eax,0x8007007a
 1007197:	mov    WORD PTR [edx],cx
 100719a:	pop    ebx
 100719b:	pop    ebp
 100719c:	ret    0xc
 100719f:	test   ecx,ecx
 10071a1:	jne    0x10071ab
 10071a3:	sub    edx,0x2
 10071a6:	mov    eax,0x8007007a
 10071ab:	mov    WORD PTR [edx],0x0
 10071b0:	pop    edi
 10071b1:	pop    esi
 10071b2:	pop    ebx
 10071b3:	pop    ebp
 10071b4:	ret    0xc
 10071b7:	int3   
 10071b8:	int3   
 10071b9:	int3   
 10071ba:	int3   
 10071bb:	int3   
 10071bc:	int3   
 10071bd:	int3   
 10071be:	int3   
 10071bf:	int3   
 10071c0:	mov    edi,edi
 10071c2:	push   esi
 10071c3:	mov    esi,ecx
 10071c5:	lea    ecx,[esi+0xaf8]
 10071cb:	call   0x1006fc0
 10071d0:	test   eax,eax
 10071d2:	jne    0x10071e0
 10071d4:	lea    ecx,[esi+0xb0c]
 10071da:	pop    esi
 10071db:	jmp    0x1006fc0
 10071e0:	pop    esi
 10071e1:	ret    
 10071e2:	int3   
 10071e3:	int3   
 10071e4:	int3   
 10071e5:	int3   
 10071e6:	int3   
 10071e7:	int3   
 10071e8:	int3   
 10071e9:	int3   
 10071ea:	int3   
 10071eb:	int3   
 10071ec:	int3   
 10071ed:	int3   
 10071ee:	int3   
 10071ef:	int3   
 10071f0:	mov    edi,edi
 10071f2:	push   ebp
 10071f3:	mov    ebp,esp
 10071f5:	mov    eax,DWORD PTR [ebp+0x8]
 10071f8:	push   ebx
 10071f9:	mov    ebx,DWORD PTR [ebp+0xc]
 10071fc:	push   esi
 10071fd:	mov    DWORD PTR [ecx+0x228],eax
 1007203:	lea    edx,[ecx+0x14]
 1007206:	push   edi
 1007207:	xor    eax,eax
 1007209:	mov    edi,0x105
 100720e:	sub    ebx,edx
 1007210:	lea    esi,[edi+0x7ffffef9]
 1007216:	test   esi,esi
 1007218:	je     0x1007230
 100721a:	movzx  esi,WORD PTR [ebx+edx*1]
 100721e:	test   si,si
 1007221:	je     0x1007230
 1007223:	mov    WORD PTR [edx],si
 1007226:	add    edx,0x2
 1007229:	sub    edi,0x1
 100722c:	jne    0x1007210
 100722e:	jmp    0x1007234
 1007230:	test   edi,edi
 1007232:	jne    0x100723c
 1007234:	sub    edx,0x2
 1007237:	mov    eax,0x8007007a
 100723c:	test   eax,eax
 100723e:	mov    WORD PTR [edx],0x0
 1007243:	jne    0x1007267
 1007245:	mov    edx,DWORD PTR [ebp+0x10]
 1007248:	mov    esi,DWORD PTR [edx]
 100724a:	mov    DWORD PTR [ecx],esi
 100724c:	mov    esi,DWORD PTR [edx+0x4]
 100724f:	mov    DWORD PTR [ecx+0x4],esi
 1007252:	mov    esi,DWORD PTR [edx+0x8]
 1007255:	mov    DWORD PTR [ecx+0x8],esi
 1007258:	mov    edx,DWORD PTR [edx+0xc]
 100725b:	mov    DWORD PTR [ecx+0xc],edx
 100725e:	mov    edx,DWORD PTR [ebp+0x14]
 1007261:	mov    DWORD PTR [ecx+0x220],edx
 1007267:	pop    edi
 1007268:	pop    esi
 1007269:	pop    ebx
 100726a:	pop    ebp
 100726b:	ret    0x10
 100726e:	int3   
 100726f:	int3   
 1007270:	int3   
 1007271:	int3   
 1007272:	int3   
 1007273:	int3   
 1007274:	int3   
 1007275:	int3   
 1007276:	int3   
 1007277:	int3   
 1007278:	int3   
 1007279:	int3   
 100727a:	int3   
 100727b:	int3   
 100727c:	int3   
 100727d:	int3   
 100727e:	int3   
 100727f:	int3   
 1007280:	mov    edi,edi
 1007282:	push   ebp
 1007283:	mov    ebp,esp
 1007285:	push   ecx
 1007286:	mov    eax,DWORD PTR [ecx+0x224]
 100728c:	cmp    eax,DWORD PTR [ecx+0x228]
 1007292:	jne    0x100729f
 1007294:	mov    eax,0x80004005
 1007299:	mov    esp,ebp
 100729b:	pop    ebp
 100729c:	ret    0xc
 100729f:	mov    edx,eax
 10072a1:	imul   edx,edx,0xb3c
 10072a7:	add    edx,DWORD PTR [ecx+0x220]
 10072ad:	push   ebx
 10072ae:	add    eax,0x1
 10072b1:	push   esi
 10072b2:	push   edi
 10072b3:	mov    edi,DWORD PTR [ebp+0x8]
 10072b6:	mov    DWORD PTR [ecx+0x224],eax
 10072bc:	xor    ebx,ebx
 10072be:	lea    eax,[edx+0x6]
 10072c1:	mov    esi,0x105
 10072c6:	mov    DWORD PTR [ebp-0x4],ebx
 10072c9:	sub    edi,eax
 10072cb:	jmp    0x10072d0
 10072cd:	lea    ecx,[ecx+0x0]
 10072d0:	lea    ecx,[esi+0x7ffffef9]
 10072d6:	test   ecx,ecx
 10072d8:	je     0x10072f0
 10072da:	movzx  ecx,WORD PTR [edi+eax*1]
 10072de:	cmp    cx,bx
 10072e1:	je     0x10072f0
 10072e3:	mov    WORD PTR [eax],cx
 10072e6:	add    eax,0x2
 10072e9:	sub    esi,0x1
 10072ec:	jne    0x10072d0
 10072ee:	jmp    0x10072f4
 10072f0:	cmp    esi,ebx
 10072f2:	jne    0x10072fe
 10072f4:	sub    eax,0x2
 10072f7:	mov    DWORD PTR [ebp-0x4],0x8007007a
 10072fe:	mov    edi,DWORD PTR [ebp+0xc]
 1007301:	mov    WORD PTR [eax],bx
 1007304:	lea    eax,[edx+0x316]
 100730a:	mov    esi,0x105
 100730f:	sub    edi,eax
 1007311:	lea    ecx,[esi+0x7ffffef9]
 1007317:	test   ecx,ecx
 1007319:	je     0x1007331
 100731b:	movzx  ecx,WORD PTR [edi+eax*1]
 100731f:	test   cx,cx
 1007322:	je     0x1007331
 1007324:	mov    WORD PTR [eax],cx
 1007327:	add    eax,0x2
 100732a:	sub    esi,0x1
 100732d:	jne    0x1007311
 100732f:	jmp    0x1007335
 1007331:	test   esi,esi
 1007333:	jne    0x100733d
 1007335:	sub    eax,0x2
 1007338:	mov    ebx,0x8007007a
 100733d:	mov    WORD PTR [eax],0x0
 1007342:	mov    ax,WORD PTR [ebp+0x10]
 1007346:	mov    WORD PTR [edx+0x4],ax
 100734a:	mov    eax,DWORD PTR [ebp-0x4]
 100734d:	test   eax,eax
 100734f:	jl     0x1007353
 1007351:	mov    eax,ebx
 1007353:	pop    edi
 1007354:	pop    esi
 1007355:	pop    ebx
 1007356:	mov    esp,ebp
 1007358:	pop    ebp
 1007359:	ret    0xc
 100735c:	int3   
 100735d:	int3   
 100735e:	int3   
 100735f:	int3   
 1007360:	int3   
 1007361:	int3   
 1007362:	int3   
 1007363:	int3   
 1007364:	int3   
 1007365:	int3   
 1007366:	int3   
 1007367:	int3   
 1007368:	int3   
 1007369:	int3   
 100736a:	int3   
 100736b:	int3   
 100736c:	int3   
 100736d:	int3   
 100736e:	int3   
 100736f:	int3   
 1007370:	mov    edi,edi
 1007372:	push   ebp
 1007373:	mov    ebp,esp
 1007375:	push   0xfffffffe
 1007377:	push   0x1009000
 100737c:	push   0x1003b37
 1007381:	mov    eax,fs:0x0
 1007387:	push   eax
 1007388:	sub    esp,0x10
 100738b:	push   ebx
 100738c:	push   esi
 100738d:	push   edi
 100738e:	mov    eax,ds:0x100b048
 1007393:	xor    DWORD PTR [ebp-0x8],eax
 1007396:	xor    eax,ebp
 1007398:	push   eax
 1007399:	lea    eax,[ebp-0x10]
 100739c:	mov    fs:0x0,eax
 10073a2:	mov    DWORD PTR [ebp-0x18],esp
 10073a5:	xor    ebx,ebx
 10073a7:	mov    DWORD PTR [ebp-0x1c],ebx
 10073aa:	mov    DWORD PTR [ebp-0x4],ebx
 10073ad:	mov    esi,DWORD PTR [ebp+0x8]
 10073b0:	mov    ecx,DWORD PTR [esi+0x8]
 10073b3:	call   0x1004fd0
 10073b8:	push   eax
 10073b9:	xor    ecx,ecx
 10073bb:	mov    edi,DWORD PTR [ebp+0xc]
 10073be:	mov    eax,edi
 10073c0:	mov    edx,0xb3c
 10073c5:	mul    edx
 10073c7:	seto   cl
 10073ca:	neg    ecx
 10073cc:	or     ecx,eax
 10073ce:	push   ecx
 10073cf:	call   0x1005280
 10073d4:	add    esp,0x8
 10073d7:	test   eax,eax
 10073d9:	jne    0x10073ec
 10073db:	mov    eax,0x8007000e
 10073e0:	mov    DWORD PTR [ebp-0x1c],eax
 10073e3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10073ea:	jmp    0x1007446
 10073ec:	push   eax
 10073ed:	mov    eax,DWORD PTR [ebp+0x14]
 10073f0:	push   eax
 10073f1:	mov    ecx,DWORD PTR [ebp+0x10]
 10073f4:	push   ecx
 10073f5:	push   edi
 10073f6:	lea    ecx,[esi+0x8c4]
 10073fc:	call   0x10071f0
 1007401:	mov    DWORD PTR [ebp-0x1c],eax
 1007404:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100740b:	jmp    0x1007446
 100740d:	mov    edx,DWORD PTR [ebp-0x14]
 1007410:	mov    eax,DWORD PTR [edx]
 1007412:	mov    ecx,DWORD PTR [eax]
 1007414:	mov    DWORD PTR [ebp-0x20],ecx
 1007417:	mov    eax,0x1
 100741c:	ret    
 100741d:	mov    esp,DWORD PTR [ebp-0x18]
 1007420:	mov    esi,DWORD PTR [ebp-0x20]
 1007423:	mov    ebx,esi
 1007425:	cmp    esi,0xc00000fd
 100742b:	jne    0x1007433
 100742d:	call   DWORD PTR ds:0x1001184
 1007433:	test   esi,esi
 1007435:	jl     0x100743c
 1007437:	mov    ebx,0x80004005
 100743c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007443:	mov    eax,DWORD PTR [ebp-0x1c]
 1007446:	test   eax,eax
 1007448:	jl     0x100744c
 100744a:	mov    eax,ebx
 100744c:	mov    ecx,DWORD PTR [ebp-0x10]
 100744f:	mov    DWORD PTR fs:0x0,ecx
 1007456:	pop    ecx
 1007457:	pop    edi
 1007458:	pop    esi
 1007459:	pop    ebx
 100745a:	mov    esp,ebp
 100745c:	pop    ebp
 100745d:	ret    0x10
 1007460:	int3   
 1007461:	int3   
 1007462:	int3   
 1007463:	int3   
 1007464:	int3   
 1007465:	int3   
 1007466:	int3   
 1007467:	int3   
 1007468:	int3   
 1007469:	int3   
 100746a:	int3   
 100746b:	int3   
 100746c:	int3   
 100746d:	int3   
 100746e:	int3   
 100746f:	int3   
 1007470:	mov    edi,edi
 1007472:	push   ebp
 1007473:	mov    ebp,esp
 1007475:	push   ebx
 1007476:	mov    ebx,ecx
 1007478:	cmp    DWORD PTR [ebx+0xb28],0x0
 100747f:	jne    0x1007488
 1007481:	xor    eax,eax
 1007483:	pop    ebx
 1007484:	pop    ebp
 1007485:	ret    0x8
 1007488:	mov    eax,DWORD PTR [ebx+0xb24]
 100748e:	push   esi
 100748f:	mov    esi,DWORD PTR [ebp+0x8]
 1007492:	push   edi
 1007493:	mov    edi,DWORD PTR [ebp+0xc]
 1007496:	push   eax
 1007497:	push   0x1002298
 100749c:	push   edi
 100749d:	push   esi
 100749e:	call   0x1006930
 10074a3:	add    esp,0x10
 10074a6:	test   eax,eax
 10074a8:	jl     0x100751f
 10074aa:	mov    ecx,DWORD PTR [ebx+0xb24]
 10074b0:	cmp    ecx,0x20000001
 10074b6:	jne    0x10074cb
 10074b8:	push   0x1002240
 10074bd:	push   edi
 10074be:	push   esi
 10074bf:	call   0x1007110
 10074c4:	pop    edi
 10074c5:	pop    esi
 10074c6:	pop    ebx
 10074c7:	pop    ebp
 10074c8:	ret    0x8
 10074cb:	test   ecx,ecx
 10074cd:	jne    0x10074e2
 10074cf:	push   0x10021b0
 10074d4:	push   edi
 10074d5:	push   esi
 10074d6:	call   0x1007110
 10074db:	pop    edi
 10074dc:	pop    esi
 10074dd:	pop    ebx
 10074de:	pop    ebp
 10074df:	ret    0x8
 10074e2:	xor    esi,esi
 10074e4:	jmp    0x10074f0
 10074e6:	lea    esp,[esp+0x0]
 10074ed:	lea    ecx,[ecx+0x0]
 10074f0:	mov    ecx,DWORD PTR [esi+0x1002140]
 10074f6:	mov    edx,ecx
 10074f8:	and    edx,DWORD PTR [ebx+0xb24]
 10074fe:	cmp    ecx,edx
 1007500:	jne    0x1007517
 1007502:	mov    eax,DWORD PTR [esi+0x1002144]
 1007508:	mov    ecx,DWORD PTR [ebp+0x8]
 100750b:	push   eax
 100750c:	push   edi
 100750d:	push   ecx
 100750e:	call   0x1007110
 1007513:	test   eax,eax
 1007515:	jl     0x100751f
 1007517:	add    esi,0x8
 100751a:	cmp    esi,0x70
 100751d:	jb     0x10074f0
 100751f:	pop    edi
 1007520:	pop    esi
 1007521:	pop    ebx
 1007522:	pop    ebp
 1007523:	ret    0x8
 1007526:	int3   
 1007527:	int3   
 1007528:	int3   
 1007529:	int3   
 100752a:	int3   
 100752b:	int3   
 100752c:	int3   
 100752d:	int3   
 100752e:	int3   
 100752f:	int3   
 1007530:	mov    edi,edi
 1007532:	push   esi
 1007533:	mov    esi,ecx
 1007535:	mov    eax,DWORD PTR [esi+0x10]
 1007538:	mov    ecx,DWORD PTR [eax+0x8]
 100753b:	cmp    ecx,DWORD PTR [eax+0xc]
 100753e:	push   edi
 100753f:	jb     0x100757a
 1007541:	mov    ecx,DWORD PTR [esi+0x8]
 1007544:	test   ecx,ecx
 1007546:	je     0x1007594
 1007548:	mov    edi,DWORD PTR [esi]
 100754a:	lea    edx,[edi*8+0x10]
 1007551:	push   edx
 1007552:	call   0x1006180
 1007557:	test   eax,eax
 1007559:	je     0x1007594
 100755b:	mov    DWORD PTR [eax],0x0
 1007561:	mov    DWORD PTR [eax+0x4],0x0
 1007568:	mov    DWORD PTR [eax+0x8],0x0
 100756f:	mov    DWORD PTR [eax+0xc],edi
 1007572:	mov    ecx,DWORD PTR [esi+0x10]
 1007575:	mov    DWORD PTR [ecx],eax
 1007577:	mov    DWORD PTR [esi+0x10],eax
 100757a:	mov    eax,DWORD PTR [esi+0x10]
 100757d:	mov    ecx,DWORD PTR [eax+0x8]
 1007580:	lea    edx,[ecx+0x1]
 1007583:	mov    DWORD PTR [eax+0x8],edx
 1007586:	mov    eax,DWORD PTR [esi+0x10]
 1007589:	add    DWORD PTR [esi+0x4],0x1
 100758d:	pop    edi
 100758e:	lea    eax,[eax+ecx*8+0x10]
 1007592:	pop    esi
 1007593:	ret    
 1007594:	pop    edi
 1007595:	xor    eax,eax
 1007597:	pop    esi
 1007598:	ret    
 1007599:	int3   
 100759a:	int3   
 100759b:	int3   
 100759c:	int3   
 100759d:	int3   
 100759e:	int3   
 100759f:	int3   
 10075a0:	mov    edi,edi
 10075a2:	push   ebp
 10075a3:	mov    ebp,esp
 10075a5:	push   0xfffffffe
 10075a7:	push   0x1009020
 10075ac:	push   0x1003b37
 10075b1:	mov    eax,fs:0x0
 10075b7:	push   eax
 10075b8:	sub    esp,0x10
 10075bb:	push   ebx
 10075bc:	push   esi
 10075bd:	push   edi
 10075be:	mov    eax,ds:0x100b048
 10075c3:	xor    DWORD PTR [ebp-0x8],eax
 10075c6:	xor    eax,ebp
 10075c8:	push   eax
 10075c9:	lea    eax,[ebp-0x10]
 10075cc:	mov    fs:0x0,eax
 10075d2:	mov    DWORD PTR [ebp-0x18],esp
 10075d5:	xor    edi,edi
 10075d7:	mov    DWORD PTR [ebp-0x4],edi
 10075da:	mov    esi,DWORD PTR [ecx+0xc]
 10075dd:	mov    DWORD PTR [ebp-0x1c],esi
 10075e0:	cmp    esi,edi
 10075e2:	je     0x1007621
 10075e4:	mov    ecx,esi
 10075e6:	call   0x10070f0
 10075eb:	mov    DWORD PTR [esi+0x4],eax
 10075ee:	mov    esi,DWORD PTR [esi]
 10075f0:	jmp    0x10075dd
 10075f2:	mov    eax,DWORD PTR [ebp-0x14]
 10075f5:	mov    ecx,DWORD PTR [eax]
 10075f7:	mov    edx,DWORD PTR [ecx]
 10075f9:	mov    DWORD PTR [ebp-0x20],edx
 10075fc:	mov    eax,0x1
 1007601:	ret    
 1007602:	mov    esp,DWORD PTR [ebp-0x18]
 1007605:	mov    esi,DWORD PTR [ebp-0x20]
 1007608:	mov    edi,esi
 100760a:	cmp    esi,0xc00000fd
 1007610:	jne    0x1007618
 1007612:	call   DWORD PTR ds:0x1001184
 1007618:	test   esi,esi
 100761a:	jl     0x1007621
 100761c:	mov    edi,0x80004005
 1007621:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007628:	mov    eax,edi
 100762a:	mov    ecx,DWORD PTR [ebp-0x10]
 100762d:	mov    DWORD PTR fs:0x0,ecx
 1007634:	pop    ecx
 1007635:	pop    edi
 1007636:	pop    esi
 1007637:	pop    ebx
 1007638:	mov    esp,ebp
 100763a:	pop    ebp
 100763b:	ret    
 100763c:	int3   
 100763d:	int3   
 100763e:	int3   
 100763f:	int3   
 1007640:	int3   
 1007641:	int3   
 1007642:	int3   
 1007643:	int3   
 1007644:	int3   
 1007645:	int3   
 1007646:	int3   
 1007647:	int3   
 1007648:	int3   
 1007649:	int3   
 100764a:	int3   
 100764b:	int3   
 100764c:	int3   
 100764d:	int3   
 100764e:	int3   
 100764f:	int3   
 1007650:	mov    edi,edi
 1007652:	push   esi
 1007653:	mov    esi,ecx
 1007655:	push   edi
 1007656:	xor    edi,edi
 1007658:	push   0x400
 100765d:	mov    DWORD PTR [esi],0x2
 1007663:	mov    DWORD PTR [esi+0x4],edi
 1007666:	mov    DWORD PTR [esi+0x8],edi
 1007669:	mov    DWORD PTR [esi+0xc],edi
 100766c:	mov    DWORD PTR [esi+0x10],edi
 100766f:	mov    DWORD PTR [esi+0x14],edi
 1007672:	mov    DWORD PTR [esi+0x18],edi
 1007675:	mov    DWORD PTR [esi+0x1c],edi
 1007678:	mov    DWORD PTR [esi+0x20],edi
 100767b:	mov    DWORD PTR [esi+0x24],edi
 100767e:	mov    DWORD PTR [esi+0x28],edi
 1007681:	mov    DWORD PTR [esi+0x2c],edi
 1007684:	mov    DWORD PTR [esi+0x30],edi
 1007687:	mov    DWORD PTR [esi+0x34],edi
 100768a:	mov    DWORD PTR [esi+0x38],edi
 100768d:	mov    DWORD PTR [esi+0x3c],edi
 1007690:	mov    DWORD PTR [esi+0x48],edi
 1007693:	mov    DWORD PTR [esi+0x4c],edi
 1007696:	mov    DWORD PTR [esi+0x50],edi
 1007699:	mov    DWORD PTR [esi+0x54],edi
 100769c:	mov    DWORD PTR [esi+0x58],edi
 100769f:	mov    DWORD PTR [esi+0x5c],edi
 10076a2:	mov    DWORD PTR [esi+0x60],edi
 10076a5:	mov    DWORD PTR [esi+0x64],edi
 10076a8:	mov    DWORD PTR [esi+0x68],edi
 10076ab:	mov    DWORD PTR [esi+0x6c],edi
 10076ae:	mov    DWORD PTR [esi+0x70],edi
 10076b1:	mov    DWORD PTR [esi+0x74],edi
 10076b4:	mov    DWORD PTR [esi+0x78],edi
 10076b7:	mov    DWORD PTR [esi+0x7c],edi
 10076ba:	mov    DWORD PTR [esi+0x80],edi
 10076c0:	mov    DWORD PTR [esi+0x84],edi
 10076c6:	mov    DWORD PTR [esi+0x8c],edi
 10076cc:	mov    DWORD PTR [esi+0x90],edi
 10076d2:	lea    eax,[esi+0xa4]
 10076d8:	push   edi
 10076d9:	push   eax
 10076da:	mov    DWORD PTR [esi+0x94],edi
 10076e0:	mov    DWORD PTR [esi+0x98],edi
 10076e6:	mov    DWORD PTR [esi+0x9c],edi
 10076ec:	mov    DWORD PTR [esi+0xa0],0x80
 10076f6:	call   0x1003b62
 10076fb:	push   0x400
 1007700:	lea    ecx,[esi+0x4b4]
 1007706:	push   edi
 1007707:	push   ecx
 1007708:	mov    DWORD PTR [esi+0x4a4],edi
 100770e:	mov    DWORD PTR [esi+0x4a8],edi
 1007714:	mov    DWORD PTR [esi+0x4ac],edi
 100771a:	mov    DWORD PTR [esi+0x4b0],0x80
 1007724:	call   0x1003b62
 1007729:	push   0x22c
 100772e:	lea    edx,[esi+0x8b8]
 1007734:	push   edi
 1007735:	push   edx
 1007736:	call   0x1003b62
 100773b:	add    esp,0x24
 100773e:	mov    DWORD PTR [esi+0x40],edi
 1007741:	mov    DWORD PTR [esi+0x44],edi
 1007744:	pop    edi
 1007745:	mov    eax,esi
 1007747:	pop    esi
 1007748:	ret    
 1007749:	int3   
 100774a:	int3   
 100774b:	int3   
 100774c:	int3   
 100774d:	int3   
 100774e:	int3   
 100774f:	int3   
 1007750:	mov    edi,edi
 1007752:	push   ebp
 1007753:	mov    ebp,esp
 1007755:	push   esi
 1007756:	mov    esi,ecx
 1007758:	push   edi
 1007759:	xor    edi,edi
 100775b:	lea    ecx,[esi+0xc]
 100775e:	mov    DWORD PTR [esi],0x1002808
 1007764:	mov    DWORD PTR [esi+0x4],0x1
 100776b:	mov    DWORD PTR [esi+0x8],edi
 100776e:	call   0x1007650
 1007773:	mov    DWORD PTR [esi+0xafc],edi
 1007779:	mov    DWORD PTR [esi+0xb00],edi
 100777f:	lea    eax,[esi+0xa0]
 1007785:	mov    DWORD PTR [esi+0xb04],eax
 100778b:	mov    DWORD PTR [esi+0xb08],eax
 1007791:	mov    ecx,0x200
 1007796:	mov    DWORD PTR [esi+0xaf8],ecx
 100779c:	lea    eax,[esi+0x4b0]
 10077a2:	mov    DWORD PTR [esi+0xb18],eax
 10077a8:	mov    DWORD PTR [esi+0xb1c],eax
 10077ae:	mov    eax,DWORD PTR [ebp+0xc]
 10077b1:	mov    DWORD PTR [esi+0xb0c],ecx
 10077b7:	mov    DWORD PTR [esi+0xb10],edi
 10077bd:	mov    DWORD PTR [esi+0xb14],edi
 10077c3:	mov    DWORD PTR [esi+0xb20],eax
 10077c9:	mov    eax,DWORD PTR [ebp+0x8]
 10077cc:	cmp    eax,edi
 10077ce:	mov    DWORD PTR [esi+0xb24],edi
 10077d4:	mov    DWORD PTR [esi+0xb28],edi
 10077da:	mov    DWORD PTR [esi+0xb2c],edi
 10077e0:	mov    DWORD PTR [esi+0xb30],edi
 10077e6:	mov    DWORD PTR [esi+0xb34],edi
 10077ec:	je     0x10077f6
 10077ee:	push   eax
 10077ef:	mov    ecx,esi
 10077f1:	call   0x1006f20
 10077f6:	call   DWORD PTR ds:0x1001118
 10077fc:	push   0x208
 1007801:	lea    ecx,[esi+0xb38]
 1007807:	push   edi
 1007808:	push   ecx
 1007809:	mov    DWORD PTR [esi+0x40],eax
 100780c:	call   0x1003b62
 1007811:	push   0x44
 1007813:	lea    edx,[esi+0xd40]
 1007819:	push   edi
 100781a:	push   edx
 100781b:	call   0x1003b62
 1007820:	mov    DWORD PTR [esi+0xd84],edi
 1007826:	mov    DWORD PTR [esi+0xd88],edi
 100782c:	mov    DWORD PTR [esi+0xd8c],edi
 1007832:	add    esp,0x18
 1007835:	mov    DWORD PTR [esi+0xd90],edi
 100783b:	pop    edi
 100783c:	mov    eax,esi
 100783e:	pop    esi
 100783f:	pop    ebp
 1007840:	ret    0x8
 1007843:	int3   
 1007844:	int3   
 1007845:	int3   
 1007846:	int3   
 1007847:	int3   
 1007848:	int3   
 1007849:	int3   
 100784a:	int3   
 100784b:	int3   
 100784c:	int3   
 100784d:	int3   
 100784e:	int3   
 100784f:	int3   
 1007850:	mov    edi,edi
 1007852:	push   esi
 1007853:	mov    esi,ecx
 1007855:	cmp    DWORD PTR [esi+0xae4],0x0
 100785c:	mov    DWORD PTR [esi],0x1002808
 1007862:	je     0x100787e
 1007864:	mov    ecx,DWORD PTR [esi+0x8]
 1007867:	call   0x1004fd0
 100786c:	mov    edx,DWORD PTR [esi+0xae4]
 1007872:	test   edx,edx
 1007874:	je     0x100787e
 1007876:	push   edx
 1007877:	mov    ecx,eax
 1007879:	call   0x1006240
 100787e:	mov    eax,DWORD PTR [esi+0x8]
 1007881:	test   eax,eax
 1007883:	je     0x1007894
 1007885:	mov    ecx,DWORD PTR [eax]
 1007887:	mov    edx,DWORD PTR [ecx+0x8]
 100788a:	push   eax
 100788b:	call   edx
 100788d:	mov    DWORD PTR [esi+0x8],0x0
 1007894:	lea    ecx,[esi+0xb0c]
 100789a:	call   0x1006fc0
 100789f:	lea    ecx,[esi+0xaf8]
 10078a5:	pop    esi
 10078a6:	jmp    0x1006fc0
 10078ab:	int3   
 10078ac:	int3   
 10078ad:	int3   
 10078ae:	int3   
 10078af:	int3   
 10078b0:	mov    edi,edi
 10078b2:	push   ebp
 10078b3:	mov    ebp,esp
 10078b5:	push   ebx
 10078b6:	push   esi
 10078b7:	push   edi
 10078b8:	mov    edi,DWORD PTR [ebp+0xc]
 10078bb:	xor    ebx,ebx
 10078bd:	test   edi,edi
 10078bf:	je     0x10078f6
 10078c1:	mov    esi,DWORD PTR [ebp+0x10]
 10078c4:	test   esi,esi
 10078c6:	je     0x10078f6
 10078c8:	mov    ecx,DWORD PTR [ebp+0x8]
 10078cb:	add    ecx,0xaf8
 10078d1:	call   0x1007530
 10078d6:	test   eax,eax
 10078d8:	je     0x10078e8
 10078da:	mov    DWORD PTR [eax],edi
 10078dc:	pop    edi
 10078dd:	mov    DWORD PTR [eax+0x4],esi
 10078e0:	pop    esi
 10078e1:	mov    eax,ebx
 10078e3:	pop    ebx
 10078e4:	pop    ebp
 10078e5:	ret    0xc
 10078e8:	pop    edi
 10078e9:	mov    ebx,0x8007000e
 10078ee:	pop    esi
 10078ef:	mov    eax,ebx
 10078f1:	pop    ebx
 10078f2:	pop    ebp
 10078f3:	ret    0xc
 10078f6:	pop    edi
 10078f7:	pop    esi
 10078f8:	xor    eax,eax
 10078fa:	pop    ebx
 10078fb:	pop    ebp
 10078fc:	ret    0xc
 10078ff:	int3   
 1007900:	int3   
 1007901:	int3   
 1007902:	int3   
 1007903:	int3   
 1007904:	int3   
 1007905:	int3   
 1007906:	int3   
 1007907:	int3   
 1007908:	int3   
 1007909:	int3   
 100790a:	int3   
 100790b:	int3   
 100790c:	int3   
 100790d:	int3   
 100790e:	int3   
 100790f:	int3   
 1007910:	mov    edi,edi
 1007912:	push   ebp
 1007913:	mov    ebp,esp
 1007915:	push   ebx
 1007916:	push   esi
 1007917:	push   edi
 1007918:	mov    edi,DWORD PTR [ebp+0xc]
 100791b:	xor    ebx,ebx
 100791d:	test   edi,edi
 100791f:	je     0x1007956
 1007921:	mov    esi,DWORD PTR [ebp+0x10]
 1007924:	test   esi,esi
 1007926:	je     0x1007956
 1007928:	mov    ecx,DWORD PTR [ebp+0x8]
 100792b:	add    ecx,0xb0c
 1007931:	call   0x1007530
 1007936:	test   eax,eax
 1007938:	je     0x1007948
 100793a:	mov    DWORD PTR [eax],edi
 100793c:	pop    edi
 100793d:	mov    DWORD PTR [eax+0x4],esi
 1007940:	pop    esi
 1007941:	mov    eax,ebx
 1007943:	pop    ebx
 1007944:	pop    ebp
 1007945:	ret    0xc
 1007948:	pop    edi
 1007949:	mov    ebx,0x8007000e
 100794e:	pop    esi
 100794f:	mov    eax,ebx
 1007951:	pop    ebx
 1007952:	pop    ebp
 1007953:	ret    0xc
 1007956:	pop    edi
 1007957:	pop    esi
 1007958:	xor    eax,eax
 100795a:	pop    ebx
 100795b:	pop    ebp
 100795c:	ret    0xc
 100795f:	int3   
 1007960:	int3   
 1007961:	int3   
 1007962:	int3   
 1007963:	int3   
 1007964:	int3   
 1007965:	int3   
 1007966:	int3   
 1007967:	int3   
 1007968:	int3   
 1007969:	int3   
 100796a:	int3   
 100796b:	int3   
 100796c:	int3   
 100796d:	int3   
 100796e:	int3   
 100796f:	int3   
 1007970:	mov    edi,edi
 1007972:	push   ebp
 1007973:	mov    ebp,esp
 1007975:	push   0xfffffffe
 1007977:	push   0x1009040
 100797c:	push   0x1003b37
 1007981:	mov    eax,fs:0x0
 1007987:	push   eax
 1007988:	sub    esp,0x10
 100798b:	push   ebx
 100798c:	push   esi
 100798d:	push   edi
 100798e:	mov    eax,ds:0x100b048
 1007993:	xor    DWORD PTR [ebp-0x8],eax
 1007996:	xor    eax,ebp
 1007998:	push   eax
 1007999:	lea    eax,[ebp-0x10]
 100799c:	mov    fs:0x0,eax
 10079a2:	mov    DWORD PTR [ebp-0x18],esp
 10079a5:	mov    DWORD PTR [ebp-0x1c],0x0
 10079ac:	xor    esi,esi
 10079ae:	mov    DWORD PTR [ebp-0x4],esi
 10079b1:	mov    eax,DWORD PTR [ebp+0x14]
 10079b4:	push   eax
 10079b5:	mov    ecx,DWORD PTR [ebp+0x10]
 10079b8:	push   ecx
 10079b9:	mov    edx,DWORD PTR [ebp+0xc]
 10079bc:	push   edx
 10079bd:	mov    ecx,DWORD PTR [ebp+0x8]
 10079c0:	add    ecx,0x8c4
 10079c6:	call   0x1007280
 10079cb:	mov    DWORD PTR [ebp-0x1c],eax
 10079ce:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10079d5:	jmp    0x1007a0e
 10079d7:	mov    eax,DWORD PTR [ebp-0x14]
 10079da:	mov    ecx,DWORD PTR [eax]
 10079dc:	mov    edx,DWORD PTR [ecx]
 10079de:	mov    DWORD PTR [ebp-0x20],edx
 10079e1:	mov    eax,0x1
 10079e6:	ret    
 10079e7:	mov    esp,DWORD PTR [ebp-0x18]
 10079ea:	mov    esi,DWORD PTR [ebp-0x20]
 10079ed:	cmp    esi,0xc00000fd
 10079f3:	jne    0x10079fb
 10079f5:	call   DWORD PTR ds:0x1001184
 10079fb:	test   esi,esi
 10079fd:	jl     0x1007a04
 10079ff:	mov    esi,0x80004005
 1007a04:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007a0b:	mov    eax,DWORD PTR [ebp-0x1c]
 1007a0e:	test   eax,eax
 1007a10:	jl     0x1007a14
 1007a12:	mov    eax,esi
 1007a14:	mov    ecx,DWORD PTR [ebp-0x10]
 1007a17:	mov    DWORD PTR fs:0x0,ecx
 1007a1e:	pop    ecx
 1007a1f:	pop    edi
 1007a20:	pop    esi
 1007a21:	pop    ebx
 1007a22:	mov    esp,ebp
 1007a24:	pop    ebp
 1007a25:	ret    0x10
 1007a28:	int3   
 1007a29:	int3   
 1007a2a:	int3   
 1007a2b:	int3   
 1007a2c:	int3   
 1007a2d:	int3   
 1007a2e:	int3   
 1007a2f:	int3   
 1007a30:	mov    edi,edi
 1007a32:	push   ebp
 1007a33:	mov    ebp,esp
 1007a35:	push   0xfffffffe
 1007a37:	push   0x1009060
 1007a3c:	push   0x1003b37
 1007a41:	mov    eax,fs:0x0
 1007a47:	push   eax
 1007a48:	sub    esp,0x10
 1007a4b:	push   ebx
 1007a4c:	push   esi
 1007a4d:	push   edi
 1007a4e:	mov    eax,ds:0x100b048
 1007a53:	xor    DWORD PTR [ebp-0x8],eax
 1007a56:	xor    eax,ebp
 1007a58:	push   eax
 1007a59:	lea    eax,[ebp-0x10]
 1007a5c:	mov    fs:0x0,eax
 1007a62:	mov    DWORD PTR [ebp-0x18],esp
 1007a65:	mov    esi,ecx
 1007a67:	xor    ebx,ebx
 1007a69:	mov    DWORD PTR [ebp-0x1c],ebx
 1007a6c:	mov    DWORD PTR [ebp-0x4],ebx
 1007a6f:	push   0x68
 1007a71:	lea    eax,[esi+0xc]
 1007a74:	push   eax
 1007a75:	call   0x1006460
 1007a7a:	mov    DWORD PTR [esi+0x74],eax
 1007a7d:	mov    eax,DWORD PTR [esi+0x20]
 1007a80:	push   eax
 1007a81:	call   0x10064a0
 1007a86:	mov    DWORD PTR [esi+0x7c],eax
 1007a89:	mov    eax,DWORD PTR [esi+0x24]
 1007a8c:	push   eax
 1007a8d:	call   0x10064a0
 1007a92:	mov    DWORD PTR [esi+0x80],eax
 1007a98:	lea    ecx,[esi+0xaf8]
 1007a9e:	call   0x10075a0
 1007aa3:	mov    edi,eax
 1007aa5:	mov    DWORD PTR [ebp-0x1c],edi
 1007aa8:	test   edi,edi
 1007aaa:	jne    0x1007abc
 1007aac:	lea    ecx,[esi+0xb0c]
 1007ab2:	call   0x10075a0
 1007ab7:	mov    edi,eax
 1007ab9:	mov    DWORD PTR [ebp-0x1c],edi
 1007abc:	mov    eax,DWORD PTR [esi+0x54]
 1007abf:	push   eax
 1007ac0:	call   0x10064a0
 1007ac5:	mov    DWORD PTR [esi+0x90],eax
 1007acb:	mov    eax,DWORD PTR [esi+0x58]
 1007ace:	push   eax
 1007acf:	call   0x10064a0
 1007ad4:	mov    DWORD PTR [esi+0x94],eax
 1007ada:	mov    eax,DWORD PTR [esi+0x30]
 1007add:	push   eax
 1007ade:	call   0x10064a0
 1007ae3:	mov    DWORD PTR [esi+0x8c],eax
 1007ae9:	mov    eax,DWORD PTR [esi+0x14]
 1007aec:	push   eax
 1007aed:	call   0x10064a0
 1007af2:	mov    DWORD PTR [esi+0x78],eax
 1007af5:	mov    eax,DWORD PTR [esi+0x28]
 1007af8:	push   eax
 1007af9:	call   0x10064a0
 1007afe:	mov    DWORD PTR [esi+0x84],eax
 1007b04:	mov    eax,DWORD PTR [esi+0x2c]
 1007b07:	push   eax
 1007b08:	call   0x10064a0
 1007b0d:	mov    DWORD PTR [esi+0x88],eax
 1007b13:	mov    eax,DWORD PTR [esi+0x34]
 1007b16:	push   eax
 1007b17:	call   0x10064a0
 1007b1c:	mov    DWORD PTR [esi+0x98],eax
 1007b22:	mov    eax,DWORD PTR [esi+0x38]
 1007b25:	push   eax
 1007b26:	call   0x10064a0
 1007b2b:	mov    DWORD PTR [esi+0x9c],eax
 1007b31:	lea    ecx,[esi+0x8c4]
 1007b37:	call   0x1006eb0
 1007b3c:	mov    DWORD PTR [esi+0xaf0],eax
 1007b42:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007b49:	jmp    0x1007b84
 1007b4b:	mov    ecx,DWORD PTR [ebp-0x14]
 1007b4e:	mov    edx,DWORD PTR [ecx]
 1007b50:	mov    eax,DWORD PTR [edx]
 1007b52:	mov    DWORD PTR [ebp-0x20],eax
 1007b55:	mov    eax,0x1
 1007b5a:	ret    
 1007b5b:	mov    esp,DWORD PTR [ebp-0x18]
 1007b5e:	mov    esi,DWORD PTR [ebp-0x20]
 1007b61:	mov    ebx,esi
 1007b63:	cmp    esi,0xc00000fd
 1007b69:	jne    0x1007b71
 1007b6b:	call   DWORD PTR ds:0x1001184
 1007b71:	test   esi,esi
 1007b73:	jl     0x1007b7a
 1007b75:	mov    ebx,0x80004005
 1007b7a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007b81:	mov    edi,DWORD PTR [ebp-0x1c]
 1007b84:	test   edi,edi
 1007b86:	mov    eax,ebx
 1007b88:	jge    0x1007b8c
 1007b8a:	mov    eax,edi
 1007b8c:	mov    ecx,DWORD PTR [ebp-0x10]
 1007b8f:	mov    DWORD PTR fs:0x0,ecx
 1007b96:	pop    ecx
 1007b97:	pop    edi
 1007b98:	pop    esi
 1007b99:	pop    ebx
 1007b9a:	mov    esp,ebp
 1007b9c:	pop    ebp
 1007b9d:	ret    
 1007b9e:	int3   
 1007b9f:	int3   
 1007ba0:	int3   
 1007ba1:	int3   
 1007ba2:	int3   
 1007ba3:	int3   
 1007ba4:	int3   
 1007ba5:	int3   
 1007ba6:	int3   
 1007ba7:	int3   
 1007ba8:	int3   
 1007ba9:	int3   
 1007baa:	int3   
 1007bab:	int3   
 1007bac:	int3   
 1007bad:	int3   
 1007bae:	int3   
 1007baf:	int3   
 1007bb0:	mov    edi,edi
 1007bb2:	push   ebp
 1007bb3:	mov    ebp,esp
 1007bb5:	push   0xfffffffe
 1007bb7:	push   0x1009080
 1007bbc:	push   0x1003b37
 1007bc1:	mov    eax,fs:0x0
 1007bc7:	push   eax
 1007bc8:	sub    esp,0x28
 1007bcb:	push   ebx
 1007bcc:	push   esi
 1007bcd:	push   edi
 1007bce:	mov    eax,ds:0x100b048
 1007bd3:	xor    DWORD PTR [ebp-0x8],eax
 1007bd6:	xor    eax,ebp
 1007bd8:	push   eax
 1007bd9:	lea    eax,[ebp-0x10]
 1007bdc:	mov    fs:0x0,eax
 1007be2:	mov    DWORD PTR [ebp-0x18],esp
 1007be5:	mov    esi,ecx
 1007be7:	mov    DWORD PTR [ebp-0x30],esi
 1007bea:	xor    edi,edi
 1007bec:	mov    DWORD PTR [ebp-0x1c],edi
 1007bef:	mov    ebx,DWORD PTR ds:0x100105c
 1007bf5:	call   ebx
 1007bf7:	push   eax
 1007bf8:	call   DWORD PTR ds:0x1001060
 1007bfe:	mov    DWORD PTR [ebp-0x38],eax
 1007c01:	cmp    eax,0x7fffffff
 1007c06:	je     0x1007c13
 1007c08:	push   0x1
 1007c0a:	call   ebx
 1007c0c:	push   eax
 1007c0d:	call   DWORD PTR ds:0x1001064
 1007c13:	xor    eax,eax
 1007c15:	mov    DWORD PTR [ebp-0x24],eax
 1007c18:	mov    DWORD PTR [ebp-0x4],eax
 1007c1b:	mov    ebx,DWORD PTR [esi+0x60]
 1007c1e:	call   DWORD PTR ds:0x1001118
 1007c24:	cmp    ebx,eax
 1007c26:	jne    0x1007c33
 1007c28:	mov    eax,DWORD PTR [esi+0x1c]
 1007c2b:	cmp    DWORD PTR [eax],0xc00000fd
 1007c31:	je     0x1007c5a
 1007c33:	mov    eax,DWORD PTR [esi+0x64]
 1007c36:	test   eax,0x1000
 1007c3b:	jne    0x1007c5a
 1007c3d:	test   eax,0x8000
 1007c42:	jne    0x1007c5a
 1007c44:	push   esi
 1007c45:	mov    ecx,DWORD PTR [esi+0x8]
 1007c48:	call   0x1005880
 1007c4d:	push   eax
 1007c4e:	push   0x0
 1007c50:	call   0x1005260
 1007c55:	mov    edi,eax
 1007c57:	mov    DWORD PTR [ebp-0x1c],edi
 1007c5a:	mov    eax,DWORD PTR [esi]
 1007c5c:	push   0xd94
 1007c61:	push   esi
 1007c62:	push   esi
 1007c63:	mov    ecx,DWORD PTR [eax+0x28]
 1007c66:	call   ecx
 1007c68:	push   eax
 1007c69:	push   edi
 1007c6a:	call   0x1005260
 1007c6f:	mov    edi,eax
 1007c71:	mov    DWORD PTR [ebp-0x1c],edi
 1007c74:	mov    ecx,DWORD PTR [esi+0x2c]
 1007c77:	test   ecx,ecx
 1007c79:	je     0x1007ca7
 1007c7b:	mov    eax,ecx
 1007c7d:	lea    ebx,[eax+0x2]
 1007c80:	mov    dx,WORD PTR [eax]
 1007c83:	add    eax,0x2
 1007c86:	test   dx,dx
 1007c89:	jne    0x1007c80
 1007c8b:	sub    eax,ebx
 1007c8d:	sar    eax,1
 1007c8f:	mov    edx,DWORD PTR [esi]
 1007c91:	add    eax,eax
 1007c93:	push   eax
 1007c94:	push   ecx
 1007c95:	push   esi
 1007c96:	mov    ecx,DWORD PTR [edx+0x28]
 1007c99:	call   ecx
 1007c9b:	push   eax
 1007c9c:	push   edi
 1007c9d:	call   0x1005260
 1007ca2:	mov    edi,eax
 1007ca4:	mov    DWORD PTR [ebp-0x1c],edi
 1007ca7:	mov    edx,DWORD PTR [esi+0x28]
 1007caa:	test   edx,edx
 1007cac:	je     0x1007cda
 1007cae:	mov    eax,edx
 1007cb0:	lea    ebx,[eax+0x2]
 1007cb3:	mov    cx,WORD PTR [eax]
 1007cb6:	add    eax,0x2
 1007cb9:	test   cx,cx
 1007cbc:	jne    0x1007cb3
 1007cbe:	sub    eax,ebx
 1007cc0:	sar    eax,1
 1007cc2:	mov    ecx,DWORD PTR [esi]
 1007cc4:	add    eax,eax
 1007cc6:	push   eax
 1007cc7:	push   edx
 1007cc8:	push   esi
 1007cc9:	mov    ecx,DWORD PTR [ecx+0x28]
 1007ccc:	call   ecx
 1007cce:	push   eax
 1007ccf:	push   edi
 1007cd0:	call   0x1005260
 1007cd5:	mov    edi,eax
 1007cd7:	mov    DWORD PTR [ebp-0x1c],edi
 1007cda:	call   DWORD PTR ds:0x1001168
 1007ce0:	mov    DWORD PTR [esi+0x44],eax
 1007ce3:	mov    ecx,esi
 1007ce5:	call   0x1007a30
 1007cea:	push   eax
 1007ceb:	push   edi
 1007cec:	call   0x1005260
 1007cf1:	mov    ebx,eax
 1007cf3:	mov    DWORD PTR [ebp-0x1c],ebx
 1007cf6:	lea    edi,[esi+0xb38]
 1007cfc:	lea    edx,[esi+0xc]
 1007cff:	push   edx
 1007d00:	mov    eax,DWORD PTR [esi+0x44]
 1007d03:	push   eax
 1007d04:	push   0x1002114
 1007d09:	call   0x1003117
 1007d0e:	push   eax
 1007d0f:	push   0x1002884
 1007d14:	push   0x104
 1007d19:	push   edi
 1007d1a:	call   0x1005700
 1007d1f:	add    esp,0x1c
 1007d22:	test   eax,eax
 1007d24:	jl     0x1007eaf
 1007d2a:	lea    eax,[esi+0xd40]
 1007d30:	push   eax
 1007d31:	call   DWORD PTR ds:0x1001068
 1007d37:	xor    eax,eax
 1007d39:	mov    DWORD PTR [esi+0xd44],eax
 1007d3f:	mov    DWORD PTR [esi+0xd4c],eax
 1007d45:	lea    ebx,[esi+0xd84]
 1007d4b:	push   ebx
 1007d4c:	lea    eax,[esi+0xd40]
 1007d52:	push   eax
 1007d53:	push   0x0
 1007d55:	push   0x0
 1007d57:	push   0xc008010
 1007d5c:	push   0x0
 1007d5e:	push   0x0
 1007d60:	push   0x0
 1007d62:	push   edi
 1007d63:	mov    ecx,DWORD PTR [esi+0x8]
 1007d66:	call   0x1005230
 1007d6b:	push   eax
 1007d6c:	call   DWORD PTR ds:0x100106c
 1007d72:	test   eax,eax
 1007d74:	je     0x1007e94
 1007d7a:	mov    DWORD PTR [ebp-0x20],0x0
 1007d81:	mov    DWORD PTR [ebp-0x4],0x1
 1007d88:	call   DWORD PTR ds:0x1001164
 1007d8e:	mov    DWORD PTR [ebp-0x28],eax
 1007d91:	push   0x64
 1007d93:	mov    ecx,DWORD PTR [ebx]
 1007d95:	push   ecx
 1007d96:	call   DWORD PTR ds:0x10010a4
 1007d9c:	mov    edi,eax
 1007d9e:	cmp    edi,0x102
 1007da4:	jne    0x1007dc0
 1007da6:	cmp    DWORD PTR [esi+0xb20],0xffffffff
 1007dad:	je     0x1007d91
 1007daf:	call   DWORD PTR ds:0x1001164
 1007db5:	sub    eax,DWORD PTR [ebp-0x28]
 1007db8:	cmp    eax,DWORD PTR [esi+0xb20]
 1007dbe:	jb     0x1007d91
 1007dc0:	xor    edx,edx
 1007dc2:	cmp    edi,0x102
 1007dc8:	sete   dl
 1007dcb:	mov    DWORD PTR [esi+0xb2c],edx
 1007dd1:	mov    DWORD PTR [esi+0xb30],0x1
 1007ddb:	lea    edi,[esi+0xb24]
 1007de1:	push   edi
 1007de2:	mov    eax,DWORD PTR [ebx]
 1007de4:	push   eax
 1007de5:	call   DWORD PTR ds:0x1001070
 1007deb:	test   eax,eax
 1007ded:	je     0x1007e0e
 1007def:	cmp    DWORD PTR [edi],0x103
 1007df5:	je     0x1007e0e
 1007df7:	mov    DWORD PTR [esi+0xb28],0x1
 1007e01:	xor    ebx,ebx
 1007e03:	mov    DWORD PTR [esi+0xb2c],ebx
 1007e09:	mov    DWORD PTR [ebp-0x4],ebx
 1007e0c:	jmp    0x1007e53
 1007e0e:	xor    ebx,ebx
 1007e10:	mov    DWORD PTR [ebp-0x4],ebx
 1007e13:	jmp    0x1007e53
 1007e15:	mov    ecx,DWORD PTR [ebp-0x14]
 1007e18:	mov    edx,DWORD PTR [ecx]
 1007e1a:	mov    eax,DWORD PTR [edx]
 1007e1c:	mov    DWORD PTR [ebp-0x2c],eax
 1007e1f:	mov    eax,0x1
 1007e24:	ret    
 1007e25:	mov    esp,DWORD PTR [ebp-0x18]
 1007e28:	mov    esi,DWORD PTR [ebp-0x2c]
 1007e2b:	mov    DWORD PTR [ebp-0x20],esi
 1007e2e:	cmp    esi,0xc00000fd
 1007e34:	jne    0x1007e3c
 1007e36:	call   DWORD PTR ds:0x1001184
 1007e3c:	test   esi,esi
 1007e3e:	jl     0x1007e47
 1007e40:	mov    DWORD PTR [ebp-0x20],0x80004005
 1007e47:	mov    DWORD PTR [ebp-0x4],0x0
 1007e4e:	mov    esi,DWORD PTR [ebp-0x30]
 1007e51:	xor    ebx,ebx
 1007e53:	mov    ecx,DWORD PTR [ebp-0x20]
 1007e56:	push   ecx
 1007e57:	mov    edx,DWORD PTR [ebp-0x1c]
 1007e5a:	push   edx
 1007e5b:	call   0x1005260
 1007e60:	mov    edi,eax
 1007e62:	mov    DWORD PTR [ebp-0x1c],edi
 1007e65:	mov    eax,DWORD PTR [esi+0xd88]
 1007e6b:	push   eax
 1007e6c:	call   DWORD PTR ds:0x10010ec
 1007e72:	mov    DWORD PTR [esi+0xd88],ebx
 1007e78:	mov    ecx,DWORD PTR [esi+0xd84]
 1007e7e:	push   ecx
 1007e7f:	call   DWORD PTR ds:0x10010ec
 1007e85:	mov    DWORD PTR [esi+0xd84],ebx
 1007e8b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007e92:	jmp    0x1007f00
 1007e94:	call   DWORD PTR ds:0x1001114
 1007e9a:	test   eax,eax
 1007e9c:	jle    0x1007ea8
 1007e9e:	and    eax,0xffff
 1007ea3:	or     eax,0x80070000
 1007ea8:	push   eax
 1007ea9:	mov    edx,DWORD PTR [ebp-0x1c]
 1007eac:	push   edx
 1007ead:	jmp    0x1007eb1
 1007eaf:	push   eax
 1007eb0:	push   ebx
 1007eb1:	call   0x1005260
 1007eb6:	mov    edi,eax
 1007eb8:	mov    DWORD PTR [ebp-0x1c],edi
 1007ebb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007ec2:	jmp    0x1007f00
 1007ec4:	mov    eax,DWORD PTR [ebp-0x14]
 1007ec7:	mov    ecx,DWORD PTR [eax]
 1007ec9:	mov    edx,DWORD PTR [ecx]
 1007ecb:	mov    DWORD PTR [ebp-0x34],edx
 1007ece:	mov    eax,0x1
 1007ed3:	ret    
 1007ed4:	mov    esp,DWORD PTR [ebp-0x18]
 1007ed7:	mov    esi,DWORD PTR [ebp-0x34]
 1007eda:	mov    DWORD PTR [ebp-0x24],esi
 1007edd:	cmp    esi,0xc00000fd
 1007ee3:	jne    0x1007eeb
 1007ee5:	call   DWORD PTR ds:0x1001184
 1007eeb:	test   esi,esi
 1007eed:	jl     0x1007ef6
 1007eef:	mov    DWORD PTR [ebp-0x24],0x80004005
 1007ef6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007efd:	mov    edi,DWORD PTR [ebp-0x1c]
 1007f00:	mov    eax,DWORD PTR [ebp-0x38]
 1007f03:	cmp    eax,0x7fffffff
 1007f08:	je     0x1007f18
 1007f0a:	push   eax
 1007f0b:	call   DWORD PTR ds:0x100105c
 1007f11:	push   eax
 1007f12:	call   DWORD PTR ds:0x1001064
 1007f18:	test   edi,edi
 1007f1a:	jl     0x1007f1f
 1007f1c:	mov    edi,DWORD PTR [ebp-0x24]
 1007f1f:	mov    eax,edi
 1007f21:	mov    ecx,DWORD PTR [ebp-0x10]
 1007f24:	mov    DWORD PTR fs:0x0,ecx
 1007f2b:	pop    ecx
 1007f2c:	pop    edi
 1007f2d:	pop    esi
 1007f2e:	pop    ebx
 1007f2f:	mov    esp,ebp
 1007f31:	pop    ebp
 1007f32:	ret    
 1007f33:	int3   
 1007f34:	int3   
 1007f35:	int3   
 1007f36:	int3   
 1007f37:	int3   
 1007f38:	int3   
 1007f39:	int3   
 1007f3a:	int3   
 1007f3b:	int3   
 1007f3c:	int3   
 1007f3d:	int3   
 1007f3e:	int3   
 1007f3f:	int3   
 1007f40:	mov    edi,edi
 1007f42:	push   ebp
 1007f43:	mov    ebp,esp
 1007f45:	push   0xfffffffe
 1007f47:	push   0x10090a8
 1007f4c:	push   0x1003b37
 1007f51:	mov    eax,fs:0x0
 1007f57:	push   eax
 1007f58:	sub    esp,0x14
 1007f5b:	push   ebx
 1007f5c:	push   esi
 1007f5d:	push   edi
 1007f5e:	mov    eax,ds:0x100b048
 1007f63:	xor    DWORD PTR [ebp-0x8],eax
 1007f66:	xor    eax,ebp
 1007f68:	push   eax
 1007f69:	lea    eax,[ebp-0x10]
 1007f6c:	mov    fs:0x0,eax
 1007f72:	mov    DWORD PTR [ebp-0x18],esp
 1007f75:	xor    ebx,ebx
 1007f77:	mov    DWORD PTR [ebp-0x1c],ebx
 1007f7a:	mov    DWORD PTR [ebp-0x20],ebx
 1007f7d:	mov    DWORD PTR [ebp-0x4],ebx
 1007f80:	push   0x10017b8
 1007f85:	mov    esi,DWORD PTR [ebp+0x10]
 1007f88:	push   esi
 1007f89:	mov    edi,DWORD PTR [ebp+0xc]
 1007f8c:	push   edi
 1007f8d:	call   0x1002c9c
 1007f92:	mov    DWORD PTR [ebp-0x1c],eax
 1007f95:	cmp    eax,ebx
 1007f97:	jl     0x1007fe7
 1007f99:	mov    ebx,DWORD PTR [ebp+0x8]
 1007f9c:	cmp    DWORD PTR [ebx+0xd8c],0x0
 1007fa3:	jne    0x1007fb8
 1007fa5:	push   0x1002908
 1007faa:	push   esi
 1007fab:	push   edi
 1007fac:	call   0x1007110
 1007fb1:	mov    DWORD PTR [ebp-0x1c],eax
 1007fb4:	test   eax,eax
 1007fb6:	jl     0x1007fe7
 1007fb8:	cmp    DWORD PTR [ebx+0xb30],0x0
 1007fbf:	je     0x100800d
 1007fc1:	cmp    DWORD PTR [ebx+0xb2c],0x0
 1007fc8:	je     0x1008002
 1007fca:	mov    eax,DWORD PTR [ebx+0xd8c]
 1007fd0:	push   eax
 1007fd1:	push   0x10028a8
 1007fd6:	push   esi
 1007fd7:	push   edi
 1007fd8:	call   0x1006930
 1007fdd:	add    esp,0x10
 1007fe0:	mov    DWORD PTR [ebp-0x1c],eax
 1007fe3:	test   eax,eax
 1007fe5:	jge    0x100800d
 1007fe7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007fee:	mov    ecx,DWORD PTR [ebp-0x10]
 1007ff1:	mov    DWORD PTR fs:0x0,ecx
 1007ff8:	pop    ecx
 1007ff9:	pop    edi
 1007ffa:	pop    esi
 1007ffb:	pop    ebx
 1007ffc:	mov    esp,ebp
 1007ffe:	pop    ebp
 1007fff:	ret    0xc
 1008002:	push   esi
 1008003:	push   edi
 1008004:	mov    ecx,ebx
 1008006:	call   0x1007470
 100800b:	jmp    0x1007fe0
 100800d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1008014:	jmp    0x1008052
 1008016:	mov    ecx,DWORD PTR [ebp-0x14]
 1008019:	mov    edx,DWORD PTR [ecx]
 100801b:	mov    eax,DWORD PTR [edx]
 100801d:	mov    DWORD PTR [ebp-0x24],eax
 1008020:	mov    eax,0x1
 1008025:	ret    
 1008026:	mov    esp,DWORD PTR [ebp-0x18]
 1008029:	mov    esi,DWORD PTR [ebp-0x24]
 100802c:	mov    DWORD PTR [ebp-0x20],esi
 100802f:	cmp    esi,0xc00000fd
 1008035:	jne    0x100803d
 1008037:	call   DWORD PTR ds:0x1001184
 100803d:	test   esi,esi
 100803f:	jl     0x1008048
 1008041:	mov    DWORD PTR [ebp-0x20],0x80004005
 1008048:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100804f:	mov    eax,DWORD PTR [ebp-0x1c]
 1008052:	test   eax,eax
 1008054:	jl     0x1008059
 1008056:	mov    eax,DWORD PTR [ebp-0x20]
 1008059:	mov    ecx,DWORD PTR [ebp-0x10]
 100805c:	mov    DWORD PTR fs:0x0,ecx
 1008063:	pop    ecx
 1008064:	pop    edi
 1008065:	pop    esi
 1008066:	pop    ebx
 1008067:	mov    esp,ebp
 1008069:	pop    ebp
 100806a:	ret    0xc
 100806d:	int3   
 100806e:	int3   
 100806f:	int3   
 1008070:	int3   
 1008071:	int3   
 1008072:	int3   
 1008073:	int3   
 1008074:	int3   
 1008075:	int3   
 1008076:	int3   
 1008077:	int3   
 1008078:	int3   
 1008079:	int3   
 100807a:	int3   
 100807b:	int3   
 100807c:	int3   
 100807d:	int3   
 100807e:	int3   
 100807f:	int3   
 1008080:	mov    edi,edi
 1008082:	push   ebp
 1008083:	mov    ebp,esp
 1008085:	push   esi
 1008086:	mov    esi,ecx
 1008088:	call   0x1007850
 100808d:	push   0xd94
 1008092:	push   0x0
 1008094:	push   esi
 1008095:	call   0x1003b62
 100809a:	add    esp,0xc
 100809d:	test   esi,esi
 100809f:	je     0x10080b0
 10080a1:	mov    eax,DWORD PTR [ebp+0xc]
 10080a4:	mov    ecx,DWORD PTR [ebp+0x8]
 10080a7:	push   eax
 10080a8:	push   ecx
 10080a9:	mov    ecx,esi
 10080ab:	call   0x1007750
 10080b0:	pop    esi
 10080b1:	pop    ebp
 10080b2:	ret    0x8
 10080b5:	int3   
 10080b6:	int3   
 10080b7:	int3   
 10080b8:	int3   
 10080b9:	int3   
 10080ba:	int3   
 10080bb:	int3   
 10080bc:	int3   
 10080bd:	int3   
 10080be:	int3   
 10080bf:	int3   
 10080c0:	mov    edi,edi
 10080c2:	push   ebp
 10080c3:	mov    ebp,esp
 10080c5:	sub    esp,0x50
 10080c8:	mov    eax,DWORD PTR [ebp+0x8]
 10080cb:	mov    edx,DWORD PTR [eax+0x4]
 10080ce:	push   ebx
 10080cf:	push   esi
 10080d0:	mov    esi,DWORD PTR [eax]
 10080d2:	push   edi
 10080d3:	mov    ebx,ecx
 10080d5:	mov    ecx,0x14
 10080da:	lea    edi,[ebp-0x50]
 10080dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10080df:	mov    ecx,DWORD PTR [ebx+0xb34]
 10080e5:	mov    esi,DWORD PTR [ebx]
 10080e7:	push   edx
 10080e8:	lea    eax,[ebp-0x50]
 10080eb:	push   eax
 10080ec:	mov    DWORD PTR [ebp-0x44],ecx
 10080ef:	call   DWORD PTR ds:0x1001118
 10080f5:	mov    ecx,DWORD PTR [esi+0x20]
 10080f8:	push   eax
 10080f9:	push   ebx
 10080fa:	call   ecx
 10080fc:	mov    esi,DWORD PTR [ebp+0xc]
 10080ff:	mov    ecx,ebx
 1008101:	mov    DWORD PTR [esi],eax
 1008103:	call   0x1007bb0
 1008108:	pop    edi
 1008109:	mov    DWORD PTR [esi],eax
 100810b:	pop    esi
 100810c:	mov    eax,0x1
 1008111:	pop    ebx
 1008112:	mov    esp,ebp
 1008114:	pop    ebp
 1008115:	ret    0x8
 1008118:	int3   
 1008119:	int3   
 100811a:	int3   
 100811b:	int3   
 100811c:	int3   
 100811d:	int3   
 100811e:	int3   
 100811f:	int3   
 1008120:	mov    edi,edi
 1008122:	push   ebp
 1008123:	mov    ebp,esp
 1008125:	push   0xfffffffe
 1008127:	push   0x10090c8
 100812c:	push   0x1003b37
 1008131:	mov    eax,fs:0x0
 1008137:	push   eax
 1008138:	sub    esp,0xc
 100813b:	push   ebx
 100813c:	push   esi
 100813d:	push   edi
 100813e:	mov    eax,ds:0x100b048
 1008143:	xor    DWORD PTR [ebp-0x8],eax
 1008146:	xor    eax,ebp
 1008148:	push   eax
 1008149:	lea    eax,[ebp-0x10]
 100814c:	mov    fs:0x0,eax
 1008152:	mov    DWORD PTR [ebp-0x18],esp
 1008155:	mov    esi,0x80004005
 100815a:	mov    DWORD PTR [ebp-0x1c],esi
 100815d:	mov    edx,DWORD PTR [ebp+0x4]
 1008160:	mov    ecx,DWORD PTR [ebp+0x8]
 1008163:	mov    eax,DWORD PTR [ecx+0x1c]
 1008166:	test   eax,eax
 1008168:	je     0x1008173
 100816a:	call   0x1007bb0
 100816f:	mov    esi,eax
 1008171:	jmp    0x10081c1
 1008173:	mov    DWORD PTR [ebp-0x4],0x0
 100817a:	cmp    DWORD PTR [ecx+0xb34],0x0
 1008181:	jne    0x1008189
 1008183:	mov    DWORD PTR [ecx+0xb34],edx
 1008189:	push   0x0
 100818b:	push   0x0
 100818d:	push   0x0
 100818f:	push   0x42ac
 1008194:	call   DWORD PTR ds:0x1001130
 100819a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10081a1:	jmp    0x10081c1
 10081a3:	lea    eax,[ebp-0x1c]
 10081a6:	push   eax
 10081a7:	mov    ecx,DWORD PTR [ebp-0x14]
 10081aa:	push   ecx
 10081ab:	mov    ecx,DWORD PTR [ebp+0x8]
 10081ae:	call   0x10080c0
 10081b3:	ret    
 10081b4:	mov    esp,DWORD PTR [ebp-0x18]
 10081b7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10081be:	mov    esi,DWORD PTR [ebp-0x1c]
 10081c1:	mov    eax,esi
 10081c3:	mov    ecx,DWORD PTR [ebp-0x10]
 10081c6:	mov    DWORD PTR fs:0x0,ecx
 10081cd:	pop    ecx
 10081ce:	pop    edi
 10081cf:	pop    esi
 10081d0:	pop    ebx
 10081d1:	mov    esp,ebp
 10081d3:	pop    ebp
 10081d4:	ret    0x4
 10081d7:	int3   
 10081d8:	int3   
 10081d9:	int3   
 10081da:	int3   
 10081db:	int3   
 10081dc:	jmp    DWORD PTR ds:0x1001198
 10081e2:	int3   
 10081e3:	int3   
 10081e4:	int3   
 10081e5:	int3   
 10081e6:	int3   
 10081e7:	int3   
 10081e8:	int3   
 10081e9:	int3   
 10081ea:	int3   
 10081eb:	int3   
 10081ec:	int3   
 10081ed:	int3   
 10081ee:	int3   
 10081ef:	int3   
 10081f0:	push   ecx
 10081f1:	lea    ecx,[esp+0x4]
 10081f5:	sub    ecx,eax
 10081f7:	sbb    eax,eax
 10081f9:	not    eax
 10081fb:	and    ecx,eax
 10081fd:	mov    eax,esp
 10081ff:	and    eax,0xfffff000
 1008204:	cmp    ecx,eax
 1008206:	jb     0x1008212
 1008208:	mov    eax,ecx
 100820a:	pop    ecx
 100820b:	xchg   esp,eax
 100820c:	mov    eax,DWORD PTR [eax]
 100820e:	mov    DWORD PTR [esp],eax
 1008211:	ret    
 1008212:	sub    eax,0x1000
 1008217:	test   DWORD PTR [eax],eax
 1008219:	jmp    0x1008204
 100821b:	int3   
 100821c:	int3   
 100821d:	int3   
 100821e:	int3   
 100821f:	int3   
 1008220:	mov    ecx,DWORD PTR [ecx+0x4]
 1008223:	call   DWORD PTR ds:0x1001174
 1008229:	test   eax,eax
 100822b:	je     0x1008235
 100822d:	mov    edx,DWORD PTR [eax]
 100822f:	push   0x1
 1008231:	mov    ecx,eax
 1008233:	call   DWORD PTR [edx]
 1008235:	ret    
 1008236:	int3   
 1008237:	int3   
 1008238:	int3   
 1008239:	int3   
 100823a:	int3   
 100823b:	push   0x4
 100823d:	mov    eax,0x1008bd6
 1008242:	call   0x10039f4
 1008247:	push   0x0
 1008249:	lea    ecx,[ebp-0x10]
 100824c:	call   DWORD PTR ds:0x100117c
 1008252:	and    DWORD PTR [ebp-0x4],0x0
 1008256:	jmp    0x100826d
 1008258:	mov    eax,DWORD PTR [esi]
 100825a:	mov    ecx,esi
 100825c:	mov    ds:0x100b6c0,eax
 1008261:	call   0x1008220
 1008266:	push   esi
 1008267:	call   0x100378a
 100826c:	pop    ecx
 100826d:	mov    esi,DWORD PTR ds:0x100b6c0
 1008273:	test   esi,esi
 1008275:	jne    0x1008258
 1008277:	or     DWORD PTR [ebp-0x4],0xffffffff
 100827b:	lea    ecx,[ebp-0x10]
 100827e:	call   DWORD PTR ds:0x1001178
 1008284:	call   0x1003aa2
 1008289:	ret    
 100828a:	int3   
 100828b:	int3   
 100828c:	int3   
 100828d:	int3   
 100828e:	int3   
 100828f:	mov    edi,edi
 1008291:	push   ebp
 1008292:	mov    ebp,esp
 1008294:	mov    eax,DWORD PTR [ebp+0xc]
 1008297:	mul    DWORD PTR [ebp+0x10]
 100829a:	test   edx,edx
 100829c:	jne    0x10082ac
 100829e:	cmp    eax,0xffffffff
 10082a1:	ja     0x10082ac
 10082a3:	mov    ecx,DWORD PTR [ebp+0x8]
 10082a6:	mov    DWORD PTR [ecx],eax
 10082a8:	xor    eax,eax
 10082aa:	pop    ebp
 10082ab:	ret    
 10082ac:	mov    eax,0x80070216
 10082b1:	pop    ebp
 10082b2:	ret    
 10082b3:	int3   
 10082b4:	int3   
 10082b5:	int3   
 10082b6:	int3   
 10082b7:	int3   
 10082b8:	mov    edi,edi
 10082ba:	push   ebp
 10082bb:	mov    ebp,esp
 10082bd:	mov    eax,DWORD PTR [ebp+0xc]
 10082c0:	mul    DWORD PTR [ebp+0x10]
 10082c3:	test   edx,edx
 10082c5:	jne    0x10082d5
 10082c7:	cmp    eax,0xffffffff
 10082ca:	ja     0x10082d5
 10082cc:	mov    ecx,DWORD PTR [ebp+0x8]
 10082cf:	mov    DWORD PTR [ecx],eax
 10082d1:	xor    eax,eax
 10082d3:	pop    ebp
 10082d4:	ret    
 10082d5:	mov    eax,0x80070216
 10082da:	pop    ebp
 10082db:	ret    
 10082dc:	int3   
 10082dd:	int3   
 10082de:	int3   
 10082df:	int3   
 10082e0:	int3   
 10082e1:	mov    edi,edi
 10082e3:	push   ebp
 10082e4:	mov    ebp,esp
 10082e6:	mov    ecx,DWORD PTR [ebp+0xc]
 10082e9:	mov    edx,DWORD PTR [ebp+0x10]
 10082ec:	or     eax,0xffffffff
 10082ef:	sub    eax,ecx
 10082f1:	cmp    eax,edx
 10082f3:	jae    0x10082fc
 10082f5:	mov    eax,0x80070216
 10082fa:	pop    ebp
 10082fb:	ret    
 10082fc:	mov    eax,DWORD PTR [ebp+0x8]
 10082ff:	add    ecx,edx
 1008301:	mov    DWORD PTR [eax],ecx
 1008303:	xor    eax,eax
 1008305:	pop    ebp
 1008306:	ret    
 1008307:	int3   
 1008308:	int3   
 1008309:	int3   
 100830a:	int3   
 100830b:	int3   
 100830c:	mov    edi,edi
 100830e:	push   ebp
 100830f:	mov    ebp,esp
 1008311:	mov    ecx,DWORD PTR [ebp+0xc]
 1008314:	mov    edx,DWORD PTR [ebp+0x10]
 1008317:	or     eax,0xffffffff
 100831a:	sub    eax,ecx
 100831c:	cmp    eax,edx
 100831e:	jae    0x1008327
 1008320:	mov    eax,0x80070216
 1008325:	pop    ebp
 1008326:	ret    
 1008327:	mov    eax,DWORD PTR [ebp+0x8]
 100832a:	add    ecx,edx
 100832c:	mov    DWORD PTR [eax],ecx
 100832e:	xor    eax,eax
 1008330:	pop    ebp
 1008331:	ret    
 1008332:	int3   
 1008333:	int3   
 1008334:	int3   
 1008335:	int3   
 1008336:	int3   
 1008337:	cmp    BYTE PTR [ecx+0x8],0x0
 100833b:	mov    DWORD PTR [ecx],0x1002954
 1008341:	je     0x1008352
 1008343:	cmp    DWORD PTR [ecx+0x4],0x0
 1008347:	je     0x1008352
 1008349:	push   DWORD PTR [ecx+0x4]
 100834c:	call   DWORD PTR ds:0x1001138
 1008352:	ret    
 1008353:	int3   
 1008354:	int3   
 1008355:	int3   
 1008356:	int3   
 1008357:	int3   
 1008358:	mov    edi,edi
 100835a:	push   ebp
 100835b:	mov    ebp,esp
 100835d:	push   DWORD PTR [ebp+0x8]
 1008360:	push   0x0
 1008362:	push   DWORD PTR [ecx+0x4]
 1008365:	call   DWORD PTR ds:0x1001094
 100836b:	pop    ebp
 100836c:	ret    0x4
 100836f:	int3   
 1008370:	int3   
 1008371:	int3   
 1008372:	int3   
 1008373:	int3   
 1008374:	mov    edi,edi
 1008376:	push   ebp
 1008377:	mov    ebp,esp
 1008379:	cmp    DWORD PTR [ebp+0x8],0x0
 100837d:	je     0x100838d
 100837f:	push   DWORD PTR [ebp+0x8]
 1008382:	push   0x0
 1008384:	push   DWORD PTR [ecx+0x4]
 1008387:	call   DWORD PTR ds:0x1001090
 100838d:	pop    ebp
 100838e:	ret    0x4
 1008391:	int3   
 1008392:	int3   
 1008393:	int3   
 1008394:	int3   
 1008395:	int3   
 1008396:	mov    edi,edi
 1008398:	push   ebp
 1008399:	mov    ebp,esp
 100839b:	mov    edx,DWORD PTR [ebp+0x8]
 100839e:	test   edx,edx
 10083a0:	jne    0x10083ab
 10083a2:	push   DWORD PTR [ebp+0xc]
 10083a5:	mov    eax,DWORD PTR [ecx]
 10083a7:	call   DWORD PTR [eax]
 10083a9:	jmp    0x10083ca
 10083ab:	cmp    DWORD PTR [ebp+0xc],0x0
 10083af:	jne    0x10083bb
 10083b1:	mov    eax,DWORD PTR [ecx]
 10083b3:	push   edx
 10083b4:	call   DWORD PTR [eax+0x4]
 10083b7:	xor    eax,eax
 10083b9:	jmp    0x10083ca
 10083bb:	push   DWORD PTR [ebp+0xc]
 10083be:	push   edx
 10083bf:	push   0x0
 10083c1:	push   DWORD PTR [ecx+0x4]
 10083c4:	call   DWORD PTR ds:0x1001058
 10083ca:	pop    ebp
 10083cb:	ret    0x8
 10083ce:	int3   
 10083cf:	int3   
 10083d0:	int3   
 10083d1:	int3   
 10083d2:	int3   
 10083d3:	mov    edi,edi
 10083d5:	push   ebp
 10083d6:	mov    ebp,esp
 10083d8:	push   DWORD PTR [ebp+0x8]
 10083db:	push   0x0
 10083dd:	push   DWORD PTR [ecx+0x4]
 10083e0:	call   DWORD PTR ds:0x1001054
 10083e6:	pop    ebp
 10083e7:	ret    0x4
 10083ea:	int3   
 10083eb:	int3   
 10083ec:	int3   
 10083ed:	int3   
 10083ee:	int3   
 10083ef:	mov    edi,edi
 10083f1:	push   ebp
 10083f2:	mov    ebp,esp
 10083f4:	push   esi
 10083f5:	mov    esi,ecx
 10083f7:	call   0x1008337
 10083fc:	test   BYTE PTR [ebp+0x8],0x1
 1008400:	je     0x1008409
 1008402:	push   esi
 1008403:	call   0x100378a
 1008408:	pop    ecx
 1008409:	mov    eax,esi
 100840b:	pop    esi
 100840c:	pop    ebp
 100840d:	ret    0x4
 1008410:	int3   
 1008411:	int3   
 1008412:	int3   
 1008413:	int3   
 1008414:	int3   
 1008415:	mov    edi,edi
 1008417:	push   ebp
 1008418:	mov    ebp,esp
 100841a:	push   esi
 100841b:	mov    esi,DWORD PTR [ebp+0x8]
 100841e:	push   edi
 100841f:	push   DWORD PTR [ebp+0xc]
 1008422:	add    esi,0x8
 1008425:	and    esi,0xfffffff8
 1008428:	lea    eax,[ebp+0x8]
 100842b:	push   esi
 100842c:	push   eax
 100842d:	mov    edi,ecx
 100842f:	call   0x100828f
 1008434:	add    esp,0xc
 1008437:	test   eax,eax
 1008439:	js     0x1008477
 100843b:	push   DWORD PTR [ebp+0x8]
 100843e:	lea    eax,[ebp+0x8]
 1008441:	push   0x10
 1008443:	push   eax
 1008444:	call   0x100830c
 1008449:	add    esp,0xc
 100844c:	test   eax,eax
 100844e:	js     0x1008477
 1008450:	mov    ecx,DWORD PTR [edi+0x4]
 1008453:	push   DWORD PTR [ebp+0x8]
 1008456:	mov    eax,DWORD PTR [ecx]
 1008458:	call   DWORD PTR [eax]
 100845a:	mov    ecx,eax
 100845c:	test   ecx,ecx
 100845e:	je     0x1008477
 1008460:	and    DWORD PTR [ecx+0x4],0x0
 1008464:	lea    eax,[esi-0x1]
 1008467:	mov    DWORD PTR [ecx+0x8],eax
 100846a:	mov    DWORD PTR [ecx],edi
 100846c:	mov    DWORD PTR [ecx+0xc],0x1
 1008473:	mov    eax,ecx
 1008475:	jmp    0x1008479
 1008477:	xor    eax,eax
 1008479:	pop    edi
 100847a:	pop    esi
 100847b:	pop    ebp
 100847c:	ret    0x8
 100847f:	int3   
 1008480:	int3   
 1008481:	int3   
 1008482:	int3   
 1008483:	int3   
 1008484:	mov    edi,edi
 1008486:	push   ebp
 1008487:	mov    ebp,esp
 1008489:	mov    ecx,DWORD PTR [ecx+0x4]
 100848c:	mov    eax,DWORD PTR [ecx]
 100848e:	pop    ebp
 100848f:	jmp    DWORD PTR [eax+0x4]
 1008492:	int3   
 1008493:	int3   
 1008494:	int3   
 1008495:	int3   
 1008496:	int3   
 1008497:	mov    edi,edi
 1008499:	push   ebp
 100849a:	mov    ebp,esp
 100849c:	push   esi
 100849d:	mov    esi,DWORD PTR [ebp+0xc]
 10084a0:	push   edi
 10084a1:	push   DWORD PTR [ebp+0x10]
 10084a4:	add    esi,0x8
 10084a7:	and    esi,0xfffffff8
 10084aa:	lea    eax,[ebp+0xc]
 10084ad:	push   esi
 10084ae:	push   eax
 10084af:	mov    edi,ecx
 10084b1:	call   0x10082b8
 10084b6:	add    esp,0xc
 10084b9:	test   eax,eax
 10084bb:	js     0x10084f0
 10084bd:	push   DWORD PTR [ebp+0xc]
 10084c0:	lea    eax,[ebp+0xc]
 10084c3:	push   0x10
 10084c5:	push   eax
 10084c6:	call   0x10082e1
 10084cb:	add    esp,0xc
 10084ce:	test   eax,eax
 10084d0:	js     0x10084f0
 10084d2:	push   DWORD PTR [ebp+0xc]
 10084d5:	mov    ecx,DWORD PTR [edi+0x4]
 10084d8:	push   DWORD PTR [ebp+0x8]
 10084db:	mov    eax,DWORD PTR [ecx]
 10084dd:	call   DWORD PTR [eax+0x8]
 10084e0:	mov    ecx,eax
 10084e2:	test   ecx,ecx
 10084e4:	je     0x10084f0
 10084e6:	lea    eax,[esi-0x1]
 10084e9:	mov    DWORD PTR [ecx+0x8],eax
 10084ec:	mov    eax,ecx
 10084ee:	jmp    0x10084f2
 10084f0:	xor    eax,eax
 10084f2:	pop    edi
 10084f3:	pop    esi
 10084f4:	pop    ebp
 10084f5:	ret    0xc
 10084f8:	int3   
 10084f9:	int3   
 10084fa:	int3   
 10084fb:	int3   
 10084fc:	int3   
 10084fd:	xor    edx,edx
 10084ff:	lea    eax,[ecx+0x14]
 1008502:	inc    edx
 1008503:	lock xadd DWORD PTR [eax],edx
 1008507:	lea    eax,[ecx+0x8]
 100850a:	ret    
 100850b:	int3   
 100850c:	int3   
 100850d:	int3   
 100850e:	int3   
 100850f:	int3   
 1008510:	mov    eax,ecx
 1008512:	ret    
 1008513:	int3   
 1008514:	int3   
 1008515:	int3   
 1008516:	int3   
 1008517:	int3   
 1008518:	mov    edi,edi
 100851a:	push   ebp
 100851b:	mov    ebp,esp
 100851d:	test   BYTE PTR [ebp+0x8],0x1
 1008521:	push   esi
 1008522:	mov    esi,ecx
 1008524:	mov    DWORD PTR [esi],0x1002968
 100852a:	je     0x1008533
 100852c:	push   esi
 100852d:	call   0x100378a
 1008532:	pop    ecx
 1008533:	mov    eax,esi
 1008535:	pop    esi
 1008536:	pop    ebp
 1008537:	ret    0x4
 100853a:	int3   
 100853b:	int3   
 100853c:	int3   
 100853d:	int3   
 100853e:	int3   
 100853f:	int3   
 1008540:	jmp    DWORD PTR ds:0x100124c
 1008546:	int3   
 1008547:	int3   
 1008548:	int3   
 1008549:	int3   
 100854a:	int3   
 100854b:	int3   
 100854c:	jmp    DWORD PTR ds:0x1001250
 1008552:	int3   
 1008553:	int3   
 1008554:	int3   
 1008555:	int3   
 1008556:	int3   
 1008557:	int3   
 1008558:	jmp    DWORD PTR ds:0x100125c
 100855e:	int3   
 100855f:	int3   
 1008560:	int3   
 1008561:	int3   
 1008562:	int3   
 1008563:	int3   
 1008564:	jmp    DWORD PTR ds:0x1001258
 100856a:	int3   
 100856b:	int3   
 100856c:	int3   
 100856d:	int3   
 100856e:	int3   
 100856f:	mov    edi,edi
 1008571:	push   ebp
 1008572:	mov    ebp,esp
 1008574:	call   DWORD PTR ds:0x10010d0
 100857a:	movzx  eax,ax
 100857d:	push   eax
 100857e:	push   DWORD PTR [ebp+0x8]
 1008581:	call   0x100858f
 1008586:	pop    ebp
 1008587:	ret    0x4
 100858a:	int3   
 100858b:	int3   
 100858c:	int3   
 100858d:	int3   
 100858e:	int3   
 100858f:	mov    edi,edi
 1008591:	push   ebp
 1008592:	mov    ebp,esp
 1008594:	sub    esp,0x210
 100859a:	mov    eax,ds:0x100b048
 100859f:	xor    eax,ebp
 10085a1:	mov    DWORD PTR [ebp-0x4],eax
 10085a4:	mov    ecx,DWORD PTR [ebp+0x8]
 10085a7:	mov    edx,DWORD PTR [ebp+0xc]
 10085aa:	push   0x0
 10085ac:	lea    eax,[ebp-0x210]
 10085b2:	push   0x105
 10085b7:	push   eax
 10085b8:	call   0x100868a
 10085bd:	add    esp,0xc
 10085c0:	test   al,al
 10085c2:	jne    0x10085c8
 10085c4:	xor    eax,eax
 10085c6:	jmp    0x10085d5
 10085c8:	lea    eax,[ebp-0x210]
 10085ce:	push   eax
 10085cf:	call   DWORD PTR ds:0x1001084
 10085d5:	mov    ecx,DWORD PTR [ebp-0x4]
 10085d8:	xor    ecx,ebp
 10085da:	call   0x1003983
 10085df:	leave  
 10085e0:	ret    0x8
 10085e3:	int3   
 10085e4:	int3   
 10085e5:	int3   
 10085e6:	int3   
 10085e7:	int3   
 10085e8:	mov    edi,edi
 10085ea:	push   ebp
 10085eb:	mov    ebp,esp
 10085ed:	sub    esp,0x214
 10085f3:	mov    eax,ds:0x100b048
 10085f8:	xor    eax,ebp
 10085fa:	mov    DWORD PTR [ebp-0x4],eax
 10085fd:	mov    eax,DWORD PTR [ebp+0x8]
 1008600:	push   ebx
 1008601:	push   esi
 1008602:	mov    esi,ecx
 1008604:	push   0x105
 1008609:	lea    ecx,[ebp-0x210]
 100860f:	push   ecx
 1008610:	push   eax
 1008611:	mov    ebx,edx
 1008613:	call   DWORD PTR ds:0x10010c0
 1008619:	test   eax,eax
 100861b:	je     0x1008675
 100861d:	lea    eax,[ebp-0x214]
 1008623:	push   eax
 1008624:	push   esi
 1008625:	push   DWORD PTR [ebp+0xc]
 1008628:	lea    eax,[ebp-0x210]
 100862e:	push   eax
 100862f:	call   DWORD PTR ds:0x1001044
 1008635:	test   eax,eax
 1008637:	je     0x1008675
 1008639:	cmp    eax,DWORD PTR [ebp+0xc]
 100863c:	ja     0x1008675
 100863e:	xor    eax,eax
 1008640:	cmp    ax,WORD PTR [ebx]
 1008643:	jne    0x1008658
 1008645:	push   DWORD PTR [ebp-0x214]
 100864b:	mov    ecx,DWORD PTR [ebp+0x10]
 100864e:	call   0x1008a0a
 1008653:	pop    ecx
 1008654:	test   al,al
 1008656:	je     0x1008675
 1008658:	mov    ecx,DWORD PTR [ebp-0x214]
 100865e:	xor    eax,eax
 1008660:	mov    WORD PTR [ecx],ax
 1008663:	mov    eax,DWORD PTR [ebp+0x10]
 1008666:	push   0x1002980
 100866b:	mov    esi,ebx
 100866d:	call   0x1008862
 1008672:	pop    ecx
 1008673:	jmp    0x1008677
 1008675:	xor    al,al
 1008677:	mov    ecx,DWORD PTR [ebp-0x4]
 100867a:	pop    esi
 100867b:	xor    ecx,ebp
 100867d:	pop    ebx
 100867e:	call   0x1003983
 1008683:	leave  
 1008684:	ret    
 1008685:	int3   
 1008686:	int3   
 1008687:	int3   
 1008688:	int3   
 1008689:	int3   
 100868a:	mov    edi,edi
 100868c:	push   ebp
 100868d:	mov    ebp,esp
 100868f:	sub    esp,0x420
 1008695:	mov    eax,ds:0x100b048
 100869a:	xor    eax,ebp
 100869c:	mov    DWORD PTR [ebp-0x4],eax
 100869f:	mov    eax,DWORD PTR [ebp+0x10]
 10086a2:	push   ebx
 10086a3:	push   esi
 10086a4:	mov    esi,edx
 10086a6:	xor    edx,edx
 10086a8:	push   edi
 10086a9:	mov    edi,DWORD PTR [ebp+0x8]
 10086ac:	mov    WORD PTR [ebp-0x210],dx
 10086b3:	mov    DWORD PTR [ebp-0x420],ecx
 10086b9:	mov    edx,0x105
 10086be:	test   eax,eax
 10086c0:	je     0x10086e7
 10086c2:	push   eax
 10086c3:	mov    ecx,edx
 10086c5:	lea    ebx,[ebp-0x210]
 10086cb:	call   0x1008a0a
 10086d0:	pop    ecx
 10086d1:	test   al,al
 10086d3:	jne    0x10086dc
 10086d5:	xor    al,al
 10086d7:	jmp    0x1008805
 10086dc:	mov    ecx,DWORD PTR [ebp-0x420]
 10086e2:	mov    edx,0x105
 10086e7:	movzx  eax,si
 10086ea:	cmp    eax,0xc04
 10086ef:	je     0x10086ff
 10086f1:	cmp    eax,0x1004
 10086f6:	jne    0x1008704
 10086f8:	mov    esi,0x804
 10086fd:	jmp    0x1008704
 10086ff:	mov    esi,0x404
 1008704:	push   edx
 1008705:	push   edx
 1008706:	push   ecx
 1008707:	lea    edx,[ebp-0x210]
 100870d:	lea    ecx,[ebp-0x41c]
 1008713:	call   0x10085e8
 1008718:	add    esp,0xc
 100871b:	test   al,al
 100871d:	je     0x10086d5
 100871f:	lea    eax,[ebp-0x41c]
 1008725:	push   eax
 1008726:	push   esi
 1008727:	push   DWORD PTR [ebp+0xc]
 100872a:	mov    edx,0x100298c
 100872f:	push   edi
 1008730:	lea    ecx,[ebp-0x210]
 1008736:	call   0x1008910
 100873b:	push   edi
 100873c:	call   0x1008819
 1008741:	add    esp,0x14
 1008744:	test   al,al
 1008746:	je     0x100874f
 1008748:	mov    al,0x1
 100874a:	jmp    0x1008805
 100874f:	lea    eax,[ebp-0x41c]
 1008755:	push   eax
 1008756:	push   esi
 1008757:	push   DWORD PTR [ebp+0xc]
 100875a:	xor    edx,edx
 100875c:	push   edi
 100875d:	lea    ecx,[ebp-0x210]
 1008763:	call   0x1008910
 1008768:	push   edi
 1008769:	call   0x1008819
 100876e:	add    esp,0x14
 1008771:	test   al,al
 1008773:	jne    0x1008748
 1008775:	mov    ebx,0x409
 100877a:	cmp    bx,si
 100877d:	je     0x10087d2
 100877f:	lea    eax,[ebp-0x41c]
 1008785:	push   eax
 1008786:	push   ebx
 1008787:	push   DWORD PTR [ebp+0xc]
 100878a:	mov    edx,0x100298c
 100878f:	push   edi
 1008790:	lea    ecx,[ebp-0x210]
 1008796:	call   0x1008910
 100879b:	push   edi
 100879c:	call   0x1008819
 10087a1:	add    esp,0x14
 10087a4:	test   al,al
 10087a6:	jne    0x1008748
 10087a8:	lea    eax,[ebp-0x41c]
 10087ae:	push   eax
 10087af:	push   ebx
 10087b0:	push   DWORD PTR [ebp+0xc]
 10087b3:	xor    edx,edx
 10087b5:	push   edi
 10087b6:	lea    ecx,[ebp-0x210]
 10087bc:	call   0x1008910
 10087c1:	push   edi
 10087c2:	call   0x1008819
 10087c7:	add    esp,0x14
 10087ca:	test   al,al
 10087cc:	jne    0x1008748
 10087d2:	mov    ecx,DWORD PTR [ebp+0xc]
 10087d5:	lea    eax,[ebp-0x41c]
 10087db:	push   eax
 10087dc:	mov    ebx,edi
 10087de:	call   0x1008a0a
 10087e3:	pop    ecx
 10087e4:	test   al,al
 10087e6:	je     0x10087f9
 10087e8:	lea    eax,[ebp-0x210]
 10087ee:	push   eax
 10087ef:	push   DWORD PTR [ebp+0xc]
 10087f2:	call   0x10088a3
 10087f7:	pop    ecx
 10087f8:	pop    ecx
 10087f9:	push   edi
 10087fa:	call   0x1008819
 10087ff:	test   al,al
 1008801:	pop    ecx
 1008802:	setne  al
 1008805:	mov    ecx,DWORD PTR [ebp-0x4]
 1008808:	pop    edi
 1008809:	pop    esi
 100880a:	xor    ecx,ebp
 100880c:	pop    ebx
 100880d:	call   0x1003983
 1008812:	leave  
 1008813:	ret    
 1008814:	int3   
 1008815:	int3   
 1008816:	int3   
 1008817:	int3   
 1008818:	int3   
 1008819:	mov    edi,edi
 100881b:	push   ebp
 100881c:	mov    ebp,esp
 100881e:	sub    esp,0x254
 1008824:	mov    eax,ds:0x100b048
 1008829:	xor    eax,ebp
 100882b:	mov    DWORD PTR [ebp-0x4],eax
 100882e:	mov    eax,DWORD PTR [ebp+0x8]
 1008831:	lea    ecx,[ebp-0x254]
 1008837:	push   ecx
 1008838:	push   eax
 1008839:	call   DWORD PTR ds:0x1001040
 100883f:	cmp    eax,0xffffffff
 1008842:	jne    0x1008848
 1008844:	xor    al,al
 1008846:	jmp    0x1008851
 1008848:	push   eax
 1008849:	call   DWORD PTR ds:0x1001048
 100884f:	mov    al,0x1
 1008851:	mov    ecx,DWORD PTR [ebp-0x4]
 1008854:	xor    ecx,ebp
 1008856:	call   0x1003983
 100885b:	leave  
 100885c:	ret    
 100885d:	int3   
 100885e:	int3   
 100885f:	int3   
 1008860:	int3   
 1008861:	int3   
 1008862:	mov    edi,edi
 1008864:	push   ebp
 1008865:	mov    ebp,esp
 1008867:	push   ebx
 1008868:	push   edi
 1008869:	mov    ecx,esi
 100886b:	mov    edi,eax
 100886d:	call   0x10089f5
 1008872:	push   0x2e
 1008874:	mov    edx,eax
 1008876:	pop    ecx
 1008877:	test   edx,edx
 1008879:	je     0x1008882
 100887b:	dec    edx
 100887c:	cmp    cx,WORD PTR [esi+edx*2]
 1008880:	jne    0x1008877
 1008882:	cmp    cx,WORD PTR [esi+edx*2]
 1008886:	je     0x100888a
 1008888:	mov    edx,eax
 100888a:	push   DWORD PTR [ebp+0x8]
 100888d:	sub    edi,edx
 100888f:	lea    ebx,[esi+edx*2]
 1008892:	mov    ecx,edi
 1008894:	call   0x1008a0a
 1008899:	pop    ecx
 100889a:	pop    edi
 100889b:	pop    ebx
 100889c:	pop    ebp
 100889d:	ret    
 100889e:	int3   
 100889f:	int3   
 10088a0:	int3   
 10088a1:	int3   
 10088a2:	int3   
 10088a3:	mov    edi,edi
 10088a5:	push   ebp
 10088a6:	mov    ebp,esp
 10088a8:	push   ebx
 10088a9:	push   esi
 10088aa:	mov    ecx,edi
 10088ac:	call   0x10089f5
 10088b1:	mov    esi,eax
 10088b3:	test   esi,esi
 10088b5:	je     0x10088ba
 10088b7:	lea    eax,[esi-0x1]
 10088ba:	movzx  eax,WORD PTR [edi+eax*2]
 10088be:	push   0x5c
 10088c0:	pop    edx
 10088c1:	cmp    dx,ax
 10088c4:	je     0x10088f6
 10088c6:	push   0x2f
 10088c8:	pop    ecx
 10088c9:	cmp    cx,ax
 10088cc:	je     0x10088f6
 10088ce:	mov    eax,DWORD PTR [ebp+0xc]
 10088d1:	movzx  eax,WORD PTR [eax]
 10088d4:	cmp    dx,ax
 10088d7:	je     0x10088f6
 10088d9:	cmp    cx,ax
 10088dc:	je     0x10088f6
 10088de:	mov    ecx,DWORD PTR [ebp+0x8]
 10088e1:	push   0x1001b40
 10088e6:	sub    ecx,esi
 10088e8:	lea    ebx,[edi+esi*2]
 10088eb:	call   0x1008a0a
 10088f0:	pop    ecx
 10088f1:	test   al,al
 10088f3:	je     0x1008907
 10088f5:	inc    esi
 10088f6:	mov    ecx,DWORD PTR [ebp+0x8]
 10088f9:	push   DWORD PTR [ebp+0xc]
 10088fc:	sub    ecx,esi
 10088fe:	lea    ebx,[edi+esi*2]
 1008901:	call   0x1008a0a
 1008906:	pop    ecx
 1008907:	pop    esi
 1008908:	pop    ebx
 1008909:	pop    ebp
 100890a:	ret    
 100890b:	int3   
 100890c:	int3   
 100890d:	int3   
 100890e:	int3   
 100890f:	int3   
 1008910:	mov    edi,edi
 1008912:	push   ebp
 1008913:	mov    ebp,esp
 1008915:	sub    esp,0x60
 1008918:	mov    eax,ds:0x100b048
 100891d:	xor    eax,ebp
 100891f:	mov    DWORD PTR [ebp-0x4],eax
 1008922:	mov    eax,DWORD PTR [ebp+0x14]
 1008925:	push   ebx
 1008926:	mov    ebx,DWORD PTR [ebp+0x8]
 1008929:	push   esi
 100892a:	mov    DWORD PTR [ebp-0x60],ecx
 100892d:	mov    ecx,DWORD PTR [ebp+0xc]
 1008930:	push   eax
 1008931:	mov    esi,edx
 1008933:	call   0x1008a0a
 1008938:	pop    ecx
 1008939:	test   al,al
 100893b:	je     0x10089e2
 1008941:	push   edi
 1008942:	test   esi,esi
 1008944:	je     0x1008962
 1008946:	xor    eax,eax
 1008948:	cmp    ax,WORD PTR [esi]
 100894b:	je     0x1008962
 100894d:	push   0x10029a0
 1008952:	push   DWORD PTR [ebp+0xc]
 1008955:	mov    edi,ebx
 1008957:	call   0x10088a3
 100895c:	pop    ecx
 100895d:	pop    ecx
 100895e:	test   al,al
 1008960:	je     0x10089cb
 1008962:	movzx  eax,WORD PTR [ebp+0x10]
 1008966:	xor    ecx,ecx
 1008968:	mov    WORD PTR [ebp-0x58],cx
 100896c:	lea    edi,[ebp-0x58]
 100896f:	lea    esi,[ebp-0x56]
 1008972:	inc    ecx
 1008973:	xor    edx,edx
 1008975:	mov    DWORD PTR [ebp-0x5c],0xa
 100897c:	div    DWORD PTR [ebp-0x5c]
 100897f:	push   0x2
 1008981:	mov    DWORD PTR [ebp-0x5c],eax
 1008984:	lea    eax,[edx+0x30]
 1008987:	mov    WORD PTR [esi],ax
 100898a:	mov    eax,DWORD PTR [ebp-0x5c]
 100898d:	pop    edx
 100898e:	add    esi,edx
 1008990:	test   eax,eax
 1008992:	je     0x100899a
 1008994:	inc    ecx
 1008995:	cmp    ecx,0x29
 1008998:	jb     0x1008973
 100899a:	sub    esi,edx
 100899c:	lea    eax,[ebp-0x58]
 100899f:	cmp    eax,esi
 10089a1:	jae    0x10089b7
 10089a3:	movzx  ecx,WORD PTR [edi]
 10089a6:	mov    ax,WORD PTR [esi]
 10089a9:	mov    WORD PTR [edi],ax
 10089ac:	mov    WORD PTR [esi],cx
 10089af:	add    edi,edx
 10089b1:	sub    esi,edx
 10089b3:	cmp    edi,esi
 10089b5:	jb     0x10089a3
 10089b7:	lea    eax,[ebp-0x58]
 10089ba:	push   eax
 10089bb:	push   DWORD PTR [ebp+0xc]
 10089be:	mov    edi,ebx
 10089c0:	call   0x10088a3
 10089c5:	pop    ecx
 10089c6:	pop    ecx
 10089c7:	test   al,al
 10089c9:	jne    0x10089cf
 10089cb:	xor    al,al
 10089cd:	jmp    0x10089e1
 10089cf:	push   DWORD PTR [ebp-0x60]
 10089d2:	push   DWORD PTR [ebp+0xc]
 10089d5:	call   0x10088a3
 10089da:	pop    ecx
 10089db:	test   al,al
 10089dd:	pop    ecx
 10089de:	setne  al
 10089e1:	pop    edi
 10089e2:	mov    ecx,DWORD PTR [ebp-0x4]
 10089e5:	pop    esi
 10089e6:	xor    ecx,ebp
 10089e8:	pop    ebx
 10089e9:	call   0x1003983
 10089ee:	leave  
 10089ef:	ret    
 10089f0:	int3   
 10089f1:	int3   
 10089f2:	int3   
 10089f3:	int3   
 10089f4:	int3   
 10089f5:	xor    eax,eax
 10089f7:	jmp    0x10089fd
 10089f9:	add    ecx,0x2
 10089fc:	inc    eax
 10089fd:	xor    edx,edx
 10089ff:	cmp    dx,WORD PTR [ecx]
 1008a02:	jne    0x10089f9
 1008a04:	ret    
 1008a05:	int3   
 1008a06:	int3   
 1008a07:	int3   
 1008a08:	int3   
 1008a09:	int3   
 1008a0a:	mov    edi,edi
 1008a0c:	push   ebp
 1008a0d:	mov    ebp,esp
 1008a0f:	push   ecx
 1008a10:	mov    edx,DWORD PTR [ebp+0x8]
 1008a13:	test   ecx,ecx
 1008a15:	jne    0x1008a23
 1008a17:	push   0x7a
 1008a19:	call   DWORD PTR ds:0x100104c
 1008a1f:	xor    al,al
 1008a21:	leave  
 1008a22:	ret    
 1008a23:	push   edi
 1008a24:	lea    edi,[ecx-0x1]
 1008a27:	xor    eax,eax
 1008a29:	test   edi,edi
 1008a2b:	je     0x1008a51
 1008a2d:	push   esi
 1008a2e:	mov    esi,ebx
 1008a30:	mov    ecx,edx
 1008a32:	sub    esi,edx
 1008a34:	movzx  edx,WORD PTR [ecx]
 1008a37:	and    DWORD PTR [ebp-0x4],0x0
 1008a3b:	cmp    WORD PTR [ebp-0x4],dx
 1008a3f:	je     0x1008a4d
 1008a41:	mov    WORD PTR [esi+ecx*1],dx
 1008a45:	inc    eax
 1008a46:	add    ecx,0x2
 1008a49:	cmp    eax,edi
 1008a4b:	jb     0x1008a34
 1008a4d:	mov    edx,DWORD PTR [ebp+0x8]
 1008a50:	pop    esi
 1008a51:	xor    ecx,ecx
 1008a53:	mov    WORD PTR [ebx+eax*2],cx
 1008a57:	pop    edi
 1008a58:	cmp    cx,WORD PTR [edx+eax*2]
 1008a5c:	jne    0x1008a17
 1008a5e:	mov    al,0x1
 1008a60:	leave  
 1008a61:	ret    
 1008a62:	int3   
 1008a63:	int3   
 1008a64:	int3   
 1008a65:	int3   
 1008a66:	int3   
 1008a67:	int3   
 1008a68:	int3   
 1008a69:	int3   
 1008a6a:	int3   
 1008a6b:	int3   
 1008a6c:	int3   
 1008a6d:	int3   
 1008a6e:	int3   
 1008a6f:	int3   
 1008a70:	mov    edi,edi
 1008a72:	push   ebp
 1008a73:	mov    ebp,esp
 1008a75:	mov    ecx,0x100b6d8
 1008a7a:	call   0x1006500
 1008a7f:	test   eax,eax
 1008a81:	jne    0x1008ac0
 1008a83:	mov    ecx,0x100b6d8
 1008a88:	call   0x10067b0
 1008a8d:	test   eax,eax
 1008a8f:	je     0x1008ac0
 1008a91:	push   0x1228
 1008a96:	push   0x0
 1008a98:	push   0x100b6e8
 1008a9d:	call   0x1003b62
 1008aa2:	add    esp,0xc
 1008aa5:	mov    ecx,0x100b6e8
 1008aaa:	call   0x1005c50
 1008aaf:	push   0x0
 1008ab1:	mov    ecx,0x100b6d8
 1008ab6:	mov    ds:0x100b6e0,eax
 1008abb:	call   0x1006800
 1008ac0:	push   esi
 1008ac1:	mov    ecx,0x100b6d8
 1008ac6:	call   0x1006520
 1008acb:	mov    ecx,DWORD PTR [ebp+0x8]
 1008ace:	mov    esi,eax
 1008ad0:	test   esi,esi
 1008ad2:	jl     0x1008aea
 1008ad4:	mov    eax,ds:0x100b6e0
 1008ad9:	mov    DWORD PTR [ecx],eax
 1008adb:	mov    edx,DWORD PTR [eax]
 1008add:	push   eax
 1008ade:	mov    eax,DWORD PTR [edx+0x4]
 1008ae1:	call   eax
 1008ae3:	mov    eax,esi
 1008ae5:	pop    esi
 1008ae6:	pop    ebp
 1008ae7:	ret    0x4
 1008aea:	mov    eax,esi
 1008aec:	mov    DWORD PTR [ecx],0x0
 1008af2:	pop    esi
 1008af3:	pop    ebp
 1008af4:	ret    0x4
 1008af7:	int3   
 1008af8:	int3   
 1008af9:	int3   
 1008afa:	int3   
 1008afb:	int3   
 1008afc:	int3   
 1008afd:	int3   
 1008afe:	int3   
 1008aff:	int3   
 1008b00:	mov    edi,edi
 1008b02:	push   ebp
 1008b03:	mov    ebp,esp
 1008b05:	pop    ebp
 1008b06:	jmp    0x1008a70
 1008b0b:	int3   
 1008b0c:	int3   
 1008b0d:	int3   
 1008b0e:	int3   
 1008b0f:	int3   
 1008b10:	mov    edi,edi
 1008b12:	push   ebp
 1008b13:	mov    ebp,esp
 1008b15:	push   ecx
 1008b16:	push   ebx
 1008b17:	push   esi
 1008b18:	lea    eax,[ebp-0x4]
 1008b1b:	push   eax
 1008b1c:	mov    DWORD PTR [ebp-0x4],0x0
 1008b23:	call   0x1008a70
 1008b28:	mov    ebx,DWORD PTR [ebp+0x8]
 1008b2b:	mov    esi,eax
 1008b2d:	test   esi,esi
 1008b2f:	jne    0x1008b47
 1008b31:	push   edi
 1008b32:	mov    edi,DWORD PTR [ebp-0x4]
 1008b35:	push   ebx
 1008b36:	push   edi
 1008b37:	call   0x1005200
 1008b3c:	mov    ecx,DWORD PTR [edi]
 1008b3e:	mov    edx,DWORD PTR [ecx+0x8]
 1008b41:	push   edi
 1008b42:	mov    esi,eax
 1008b44:	call   edx
 1008b46:	pop    edi
 1008b47:	push   0x8000
 1008b4c:	push   0x0
 1008b4e:	push   ebx
 1008b4f:	call   DWORD PTR ds:0x100116c
 1008b55:	mov    eax,esi
 1008b57:	pop    esi
 1008b58:	pop    ebx
 1008b59:	mov    esp,ebp
 1008b5b:	pop    ebp
 1008b5c:	ret    0x4
 1008b5f:	int3   
 1008b60:	int3   
 1008b61:	int3   
 1008b62:	int3   
 1008b63:	int3   
 1008b64:	lea    ecx,[ebp-0x37c]
 1008b6a:	jmp    DWORD PTR ds:0x1001020
 1008b70:	lea    ecx,[ebp-0x50]
 1008b73:	jmp    0x1003313
 1008b78:	mov    edx,DWORD PTR [esp+0x8]
 1008b7c:	lea    eax,[edx+0xc]
 1008b7f:	mov    ecx,DWORD PTR [edx-0x3a8]
 1008b85:	xor    ecx,eax
 1008b87:	call   0x1003983
 1008b8c:	mov    ecx,DWORD PTR [edx-0x4]
 1008b8f:	xor    ecx,eax
 1008b91:	call   0x1003983
 1008b96:	mov    eax,0x1008cfc
 1008b9b:	jmp    0x1003b2c
 1008ba0:	int3   
 1008ba1:	int3   
 1008ba2:	int3   
 1008ba3:	int3   
 1008ba4:	int3   
 1008ba5:	lea    ecx,[ebp-0x14]
 1008ba8:	jmp    0x10044f5
 1008bad:	mov    edx,DWORD PTR [esp+0x8]
 1008bb1:	lea    eax,[edx+0xc]
 1008bb4:	mov    ecx,DWORD PTR [edx-0x20]
 1008bb7:	xor    ecx,eax
 1008bb9:	call   0x1003983
 1008bbe:	mov    eax,0x1008e08
 1008bc3:	jmp    0x1003b2c
 1008bc8:	int3   
 1008bc9:	int3   
 1008bca:	int3   
 1008bcb:	int3   
 1008bcc:	int3   
 1008bcd:	lea    ecx,[ebp-0x10]
 1008bd0:	jmp    DWORD PTR ds:0x1001178
 1008bd6:	mov    edx,DWORD PTR [esp+0x8]
 1008bda:	lea    eax,[edx+0xc]
 1008bdd:	mov    ecx,DWORD PTR [edx-0x14]
 1008be0:	xor    ecx,eax
 1008be2:	call   0x1003983
 1008be7:	mov    eax,0x10090ec
 1008bec:	jmp    0x1003b2c
 1008bf1:	int3   
 1008bf2:	int3   
 1008bf3:	int3   
 1008bf4:	int3   
 1008bf5:	int3   
 1008bf6:	mov    ecx,0x100b66c
 1008bfb:	call   0x10040a7
 1008c00:	push   0x1008c60
 1008c05:	call   0x1003c91
 1008c0a:	pop    ecx
 1008c0b:	ret    
 1008c0c:	int3   
 1008c0d:	int3   
 1008c0e:	int3   
 1008c0f:	int3   
 1008c10:	int3   
 1008c11:	push   0x1008c6f
 1008c16:	call   0x1003c91
 1008c1b:	pop    ecx
 1008c1c:	ret    
 1008c1d:	int3   
 1008c1e:	int3   
 1008c1f:	int3   
 1008c20:	int3   
 1008c21:	int3   
 1008c22:	call   DWORD PTR ds:0x1001050
 1008c28:	push   0x1008c7e
 1008c2d:	mov    DWORD PTR ds:0x100b6c8,0x1002954
 1008c37:	mov    ds:0x100b6cc,eax
 1008c3c:	mov    BYTE PTR ds:0x100b6d0,0x0
 1008c43:	call   0x1003c91
 1008c48:	pop    ecx
 1008c49:	ret    
 1008c4a:	int3   
 1008c4b:	int3   
 1008c4c:	int3   
 1008c4d:	int3   
 1008c4e:	int3   
 1008c4f:	push   0x1008c8d
 1008c54:	call   0x1003c91
 1008c59:	pop    ecx
 1008c5a:	ret    
 1008c5b:	int3   
 1008c5c:	int3   
 1008c5d:	int3   
 1008c5e:	int3   
 1008c5f:	int3   
 1008c60:	mov    ecx,0x100b66c
 1008c65:	jmp    0x10040ec
 1008c6a:	int3   
 1008c6b:	int3   
 1008c6c:	int3   
 1008c6d:	int3   
 1008c6e:	int3   
 1008c6f:	mov    ecx,0x100b6c4
 1008c74:	jmp    0x100823b
 1008c79:	int3   
 1008c7a:	int3   
 1008c7b:	int3   
 1008c7c:	int3   
 1008c7d:	int3   
 1008c7e:	mov    ecx,0x100b6c8
 1008c83:	jmp    0x1008337
 1008c88:	int3   
 1008c89:	int3   
 1008c8a:	int3   
 1008c8b:	int3   
 1008c8c:	int3   
 1008c8d:	mov    DWORD PTR ds:0x100b0c0,0x1002968
 1008c97:	ret    
	...
 1008ca4:	test   al,0x8c
 1008ca6:	add    BYTE PTR [ecx],al
 1008ca8:	add    DWORD PTR [eax],eax
 1008caa:	add    BYTE PTR [eax],al
 1008cac:	mov    al,0x8c
 1008cae:	add    BYTE PTR [ecx],al
 1008cb0:	add    BYTE PTR [eax],al
 1008cb2:	add    BYTE PTR [eax],al
 1008cb4:	add    BYTE PTR [eax+0x100],dh
 1008cba:	add    BYTE PTR [eax],al
 1008cbc:	(bad)  
 1008cbd:	(bad)  
 1008cbe:	(bad)  
 1008cbf:	inc    DWORD PTR [eax]
 1008cc1:	add    BYTE PTR [eax],al
 1008cc3:	add    BYTE PTR [eax+eax*1],al
	...
 1008cce:	add    BYTE PTR [eax],al
 1008cd0:	in     al,0xff
 1008cd2:	(bad)  
 1008cd3:	inc    DWORD PTR [eax]
 1008cd5:	add    BYTE PTR [eax],al
 1008cd7:	add    BYTE PTR [ecx+edi*8+0xffff],ch
 1008cde:	add    BYTE PTR [eax],al
 1008ce0:	(bad)  
 1008ce1:	(bad)  
 1008ce2:	(bad)  
 1008ce3:	inc    DWORD PTR [eax]
 1008ce5:	add    BYTE PTR [eax],al
 1008ce7:	add    BYTE PTR [esi-0xfeffd1],al
 1008ced:	(bad)  
 1008cee:	(bad)  
 1008cef:	jmp    DWORD PTR [ebx+ecx*4+0x0]
 1008cf3:	add    DWORD PTR [eax],eax
 1008cf5:	add    BYTE PTR [eax],al
 1008cf7:	add    BYTE PTR [eax-0x75],dh
 1008cfa:	add    BYTE PTR [ecx],al
 1008cfc:	and    al,BYTE PTR ds:0x21993
 1008d02:	add    BYTE PTR [eax],al
 1008d04:	in     al,dx
 1008d05:	mov    WORD PTR [eax],es
 1008d07:	add    DWORD PTR [eax],eax
	...
 1008d19:	add    BYTE PTR [eax],al
 1008d1b:	add    BYTE PTR [ecx],al
 1008d1d:	add    BYTE PTR [eax],al
 1008d1f:	add    dh,bh
 1008d21:	(bad)  
 1008d22:	(bad)  
 1008d23:	inc    DWORD PTR [eax]
 1008d25:	add    BYTE PTR [eax],al
 1008d27:	add    al,dl
 1008d29:	(bad)  
 1008d2a:	(bad)  
 1008d2b:	inc    DWORD PTR [eax]
 1008d2d:	add    BYTE PTR [eax],al
 1008d2f:	add    dh,bh
 1008d31:	(bad)  
 1008d32:	(bad)  
 1008d33:	jmp    DWORD PTR [edi+0x36]
 1008d36:	add    BYTE PTR [ecx],al
 1008d38:	jnp    0x1008d70
 1008d3a:	add    BYTE PTR [ecx],al
 1008d3c:	add    BYTE PTR [eax],al
 1008d3e:	add    BYTE PTR [eax],al
 1008d40:	(bad)  
 1008d41:	(bad)  
 1008d42:	(bad)  
 1008d43:	inc    DWORD PTR [eax]
 1008d45:	add    BYTE PTR [eax],al
 1008d47:	add    ah,cl
 1008d49:	(bad)  
 1008d4a:	(bad)  
 1008d4b:	inc    DWORD PTR [eax]
 1008d4d:	add    BYTE PTR [eax],al
 1008d4f:	add    dh,bh
 1008d51:	(bad)  
 1008d52:	(bad)  
 1008d53:	(bad)  
 1008d54:	mov    eax,0xe1010037
 1008d59:	aaa    
 1008d5a:	add    BYTE PTR [ecx],al
 1008d5c:	add    BYTE PTR [eax],al
 1008d5e:	add    BYTE PTR [eax],al
 1008d60:	(bad)  
 1008d61:	(bad)  
 1008d62:	(bad)  
 1008d63:	inc    DWORD PTR [eax]
 1008d65:	add    BYTE PTR [eax],al
 1008d67:	add    ah,dl
 1008d69:	(bad)  
 1008d6a:	(bad)  
 1008d6b:	inc    DWORD PTR [eax]
 1008d6d:	add    BYTE PTR [eax],al
 1008d6f:	add    dh,bh
 1008d71:	(bad)  
 1008d72:	(bad)  
 1008d73:	inc    DWORD PTR [eax]
 1008d75:	add    BYTE PTR [eax],al
 1008d77:	add    BYTE PTR [ebx+0x38],al
 1008d7a:	add    BYTE PTR [ecx],al
 1008d7c:	add    BYTE PTR [eax],al
 1008d7e:	add    BYTE PTR [eax],al
 1008d80:	(bad)  
 1008d81:	(bad)  
 1008d82:	(bad)  
 1008d83:	inc    DWORD PTR [eax]
 1008d85:	add    BYTE PTR [eax],al
 1008d87:	add    ah,cl
 1008d89:	(bad)  
 1008d8a:	(bad)  
 1008d8b:	inc    DWORD PTR [eax]
 1008d8d:	add    BYTE PTR [eax],al
 1008d8f:	add    dh,bh
 1008d91:	(bad)  
 1008d92:	(bad)  
 1008d93:	inc    DWORD PTR [eax]
 1008d95:	add    BYTE PTR [eax],al
 1008d97:	add    BYTE PTR [ebx+0x1003c],al
 1008d9d:	add    BYTE PTR [eax],al
 1008d9f:	add    dh,bh
 1008da1:	(bad)  
 1008da2:	(bad)  
 1008da3:	inc    DWORD PTR [eax]
 1008da5:	add    BYTE PTR [eax],al
 1008da7:	add    al,bl
 1008da9:	(bad)  
 1008daa:	(bad)  
 1008dab:	inc    DWORD PTR [eax]
 1008dad:	add    BYTE PTR [eax],al
 1008daf:	add    dh,bh
 1008db1:	(bad)  
 1008db2:	(bad)  
 1008db3:	jmp    FWORD PTR [ebx]
 1008db5:	add    BYTE PTR ds:[ecx],al
 1008db8:	ds add BYTE PTR ds:[ecx],al
 1008dbc:	add    BYTE PTR [eax],al
 1008dbe:	add    BYTE PTR [eax],al
 1008dc0:	add    DWORD PTR [eax],eax
 1008dc2:	add    BYTE PTR [eax],al
 1008dc4:	add    al,BYTE PTR [eax]
 1008dc6:	add    BYTE PTR [eax],al
 1008dc8:	add    al,BYTE PTR [eax]
 1008dca:	add    BYTE PTR [eax],al
 1008dcc:	call   0x18e5e
 1008dd1:	(bad)  
 1008dd2:	(bad)  
 1008dd3:	inc    DWORD PTR [eax]
 1008dd5:	add    BYTE PTR [eax],al
 1008dd7:	add    BYTE PTR [eax],al
 1008dd9:	add    BYTE PTR [eax],al
 1008ddb:	add    BYTE PTR [ebp-0xfeff75],ah
 1008de1:	(bad)  
 1008de2:	(bad)  
 1008de3:	inc    DWORD PTR [eax]
	...
 1008ded:	mov    al,0x0
 1008def:	add    DWORD PTR [eax],eax
 1008df1:	add    BYTE PTR [eax],al
 1008df3:	add    BYTE PTR [eax],bh
 1008df5:	inc    esi
 1008df6:	add    BYTE PTR [ecx],al
 1008df8:	add    BYTE PTR [eax],al
 1008dfa:	add    BYTE PTR [eax],al
 1008dfc:	mov    WORD PTR [eax+0x100],?
 1008e02:	add    BYTE PTR [eax],al
 1008e04:	inc    eax
 1008e05:	inc    esi
 1008e06:	add    BYTE PTR [ecx],al
 1008e08:	and    al,BYTE PTR ds:0x31993
 1008e0e:	add    BYTE PTR [eax],al
 1008e10:	ror    BYTE PTR [ebp+0x10100],1
 1008e16:	add    BYTE PTR [eax],al
 1008e18:	mov    esp,0x1008d
	...
 1008e25:	add    BYTE PTR [eax],al
 1008e27:	add    BYTE PTR [ecx],al
 1008e29:	add    BYTE PTR [eax],al
 1008e2b:	add    BYTE PTR [eax],al
 1008e2d:	add    BYTE PTR [eax],al
 1008e2f:	add    dh,bh
 1008e31:	(bad)  
 1008e32:	(bad)  
 1008e33:	inc    DWORD PTR [eax]
 1008e35:	add    BYTE PTR [eax],al
 1008e37:	add    ah,dl
 1008e39:	(bad)  
 1008e3a:	(bad)  
 1008e3b:	inc    DWORD PTR [eax]
 1008e3d:	add    BYTE PTR [eax],al
 1008e3f:	add    dh,bh
 1008e41:	(bad)  
 1008e42:	(bad)  
 1008e43:	call   ebp
 1008e45:	push   eax
 1008e46:	add    BYTE PTR [ecx],al
 1008e48:	in     eax,0x50
 1008e4a:	add    BYTE PTR [ecx],al
 1008e4c:	add    BYTE PTR [eax],al
 1008e4e:	add    BYTE PTR [eax],al
 1008e50:	(bad)  
 1008e51:	(bad)  
 1008e52:	(bad)  
 1008e53:	inc    DWORD PTR [eax]
 1008e55:	add    BYTE PTR [eax],al
 1008e57:	add    al,al
 1008e59:	(bad)  
 1008e5a:	(bad)  
 1008e5b:	inc    DWORD PTR [eax]
 1008e5d:	add    BYTE PTR [eax],al
 1008e5f:	add    dh,bh
 1008e61:	(bad)  
 1008e62:	(bad)  
 1008e63:	dec    esp
 1008e65:	push   ebx
 1008e66:	add    BYTE PTR [ecx],al
 1008e68:	fcom   QWORD PTR [ebx+0x0]
 1008e6b:	add    DWORD PTR [eax],eax
 1008e6d:	add    BYTE PTR [eax],al
 1008e6f:	add    BYTE PTR [eax+0x53],ah
 1008e72:	add    BYTE PTR [ecx],al
 1008e74:	jo     0x1008ec9
 1008e76:	add    BYTE PTR [ecx],al
 1008e78:	(bad)  
 1008e79:	(bad)  
 1008e7a:	(bad)  
 1008e7b:	inc    DWORD PTR [eax]
 1008e7d:	add    BYTE PTR [eax],al
 1008e7f:	add    al,dl
 1008e81:	(bad)  
 1008e82:	(bad)  
 1008e83:	inc    DWORD PTR [eax]
 1008e85:	add    BYTE PTR [eax],al
 1008e87:	add    dh,bh
 1008e89:	(bad)  
 1008e8a:	(bad)  
 1008e8b:	push   ebx
 1008e8d:	push   esp
 1008e8e:	add    BYTE PTR [ecx],al
 1008e90:	add    edx,DWORD PTR [ebp+0x0]
 1008e93:	add    DWORD PTR [eax],eax
 1008e95:	add    BYTE PTR [eax],al
 1008e97:	add    dh,bh
 1008e99:	(bad)  
 1008e9a:	(bad)  
 1008e9b:	inc    DWORD PTR [eax]
 1008e9d:	add    BYTE PTR [eax],al
 1008e9f:	add    ah,cl
 1008ea1:	(bad)  
 1008ea2:	(bad)  
 1008ea3:	inc    DWORD PTR [eax]
 1008ea5:	add    BYTE PTR [eax],al
 1008ea7:	add    dh,bh
 1008ea9:	(bad)  
 1008eaa:	(bad)  
 1008eab:	inc    DWORD PTR [ecx+0x56]
 1008eae:	add    BYTE PTR [ecx],al
 1008eb0:	push   ecx
 1008eb1:	push   esi
 1008eb2:	add    BYTE PTR [ecx],al
 1008eb4:	add    BYTE PTR [eax],al
 1008eb6:	add    BYTE PTR [eax],al
 1008eb8:	(bad)  
 1008eb9:	(bad)  
 1008eba:	(bad)  
 1008ebb:	inc    DWORD PTR [eax]
 1008ebd:	add    BYTE PTR [eax],al
 1008ebf:	add    al,al
 1008ec1:	(bad)  
 1008ec2:	(bad)  
 1008ec3:	inc    DWORD PTR [eax]
 1008ec5:	add    BYTE PTR [eax],al
 1008ec7:	add    dh,bh
 1008ec9:	(bad)  
 1008eca:	(bad)  
 1008ecb:	(bad)  
 1008ecc:	cmp    al,0x59
 1008ece:	add    BYTE PTR [ecx],al
 1008ed0:	dec    esp
 1008ed1:	pop    ecx
 1008ed2:	add    BYTE PTR [ecx],al
 1008ed4:	add    BYTE PTR [eax],al
 1008ed6:	add    BYTE PTR [eax],al
 1008ed8:	(bad)  
 1008ed9:	(bad)  
 1008eda:	(bad)  
 1008edb:	inc    DWORD PTR [eax]
 1008edd:	add    BYTE PTR [eax],al
 1008edf:	add    al,dl
 1008ee1:	(bad)  
 1008ee2:	(bad)  
 1008ee3:	inc    DWORD PTR [eax]
 1008ee5:	add    BYTE PTR [eax],al
 1008ee7:	add    dh,bh
 1008ee9:	(bad)  
 1008eea:	(bad)  
 1008eeb:	push   DWORD PTR [edx]
 1008eed:	pop    ebx
 1008eee:	add    BYTE PTR [ecx],al
 1008ef0:	inc    edx
 1008ef1:	pop    ebx
 1008ef2:	add    BYTE PTR [ecx],al
 1008ef4:	add    BYTE PTR [eax],al
 1008ef6:	add    BYTE PTR [eax],al
 1008ef8:	(bad)  
 1008ef9:	(bad)  
 1008efa:	(bad)  
 1008efb:	inc    DWORD PTR [eax]
 1008efd:	add    BYTE PTR [eax],al
 1008eff:	add    ah,al
 1008f01:	(bad)  
 1008f02:	(bad)  
 1008f03:	inc    DWORD PTR [eax]
 1008f05:	add    BYTE PTR [eax],al
 1008f07:	add    dh,bh
 1008f09:	(bad)  
 1008f0a:	(bad)  
 1008f0b:	(bad)  
 1008f0c:	ficomp WORD PTR [edi+0x0]
 1008f0f:	add    esi,ebp
 1008f11:	pop    edi
 1008f12:	add    BYTE PTR [ecx],al
 1008f14:	add    BYTE PTR [eax],al
 1008f16:	add    BYTE PTR [eax],al
 1008f18:	(bad)  
 1008f19:	(bad)  
 1008f1a:	(bad)  
 1008f1b:	inc    DWORD PTR [eax]
 1008f1d:	add    BYTE PTR [eax],al
 1008f1f:	add    ah,cl
 1008f21:	(bad)  
 1008f22:	(bad)  
 1008f23:	inc    DWORD PTR [eax]
 1008f25:	add    BYTE PTR [eax],al
 1008f27:	add    dh,bh
 1008f29:	(bad)  
 1008f2a:	(bad)  
 1008f2b:	jmp    ecx
 1008f2d:	pusha  
 1008f2e:	add    BYTE PTR [ecx],al
 1008f30:	icebp  
 1008f31:	pusha  
 1008f32:	add    BYTE PTR [ecx],al
 1008f34:	add    BYTE PTR [eax],al
 1008f36:	add    BYTE PTR [eax],al
 1008f38:	(bad)  
 1008f39:	(bad)  
 1008f3a:	(bad)  
 1008f3b:	inc    DWORD PTR [eax]
 1008f3d:	add    BYTE PTR [eax],al
 1008f3f:	add    al,dl
 1008f41:	(bad)  
 1008f42:	(bad)  
 1008f43:	inc    DWORD PTR [eax]
 1008f45:	add    BYTE PTR [eax],al
 1008f47:	add    dh,bh
 1008f49:	(bad)  
 1008f4a:	(bad)  
 1008f4b:	(bad)  
 1008f4c:	(bad)  [ecx+0x0]
 1008f4f:	add    ebx,ebp
 1008f51:	popa   
 1008f52:	add    BYTE PTR [ecx],al
 1008f54:	add    BYTE PTR [eax],al
 1008f56:	add    BYTE PTR [eax],al
 1008f58:	(bad)  
 1008f59:	(bad)  
 1008f5a:	(bad)  
 1008f5b:	inc    DWORD PTR [eax]
 1008f5d:	add    BYTE PTR [eax],al
 1008f5f:	add    ah,dl
 1008f61:	(bad)  
 1008f62:	(bad)  
 1008f63:	inc    DWORD PTR [eax]
 1008f65:	add    BYTE PTR [eax],al
 1008f67:	add    dh,bh
 1008f69:	(bad)  
 1008f6a:	(bad)  
 1008f6b:	dec    DWORD PTR [ebp-0x62feff9e]
 1008f71:	bound  eax,QWORD PTR [eax]
 1008f73:	add    DWORD PTR [eax],eax
 1008f75:	add    BYTE PTR [eax],al
 1008f77:	add    dh,bh
 1008f79:	(bad)  
 1008f7a:	(bad)  
 1008f7b:	inc    DWORD PTR [eax]
 1008f7d:	add    BYTE PTR [eax],al
 1008f7f:	add    al,dl
 1008f81:	(bad)  
 1008f82:	(bad)  
 1008f83:	inc    DWORD PTR [eax]
 1008f85:	add    BYTE PTR [eax],al
 1008f87:	add    dh,bh
 1008f89:	(bad)  
 1008f8a:	(bad)  
 1008f8b:	push   DWORD PTR [esi]
 1008f8d:	arpl   WORD PTR [eax],ax
 1008f8f:	add    DWORD PTR [esi+0x63],eax
 1008f92:	add    BYTE PTR [ecx],al
 1008f94:	add    BYTE PTR [eax],al
 1008f96:	add    BYTE PTR [eax],al
 1008f98:	(bad)  
 1008f99:	(bad)  
 1008f9a:	(bad)  
 1008f9b:	inc    DWORD PTR [eax]
 1008f9d:	add    BYTE PTR [eax],al
 1008f9f:	add    ah,dl
 1008fa1:	(bad)  
 1008fa2:	(bad)  
 1008fa3:	inc    DWORD PTR [eax]
 1008fa5:	add    BYTE PTR [eax],al
 1008fa7:	add    dh,bh
 1008fa9:	(bad)  
 1008faa:	(bad)  
 1008fab:	jmp    esp
 1008fad:	arpl   WORD PTR [eax],ax
 1008faf:	add    esp,esi
 1008fb1:	arpl   WORD PTR [eax],ax
 1008fb3:	add    DWORD PTR [eax],eax
 1008fb5:	add    BYTE PTR [eax],al
 1008fb7:	add    dh,bh
 1008fb9:	(bad)  
 1008fba:	(bad)  
 1008fbb:	inc    DWORD PTR [eax]
 1008fbd:	add    BYTE PTR [eax],al
 1008fbf:	add    al,dl
 1008fc1:	(bad)  
 1008fc2:	(bad)  
 1008fc3:	inc    DWORD PTR [eax]
 1008fc5:	add    BYTE PTR [eax],al
 1008fc7:	add    dh,bh
 1008fc9:	(bad)  
 1008fca:	(bad)  
 1008fcb:	dec    DWORD PTR [edx+0x67]
 1008fce:	add    BYTE PTR [ecx],al
 1008fd0:	pop    edx
 1008fd1:	add    BYTE PTR [bx+di],al
 1008fd4:	add    BYTE PTR [eax],al
 1008fd6:	add    BYTE PTR [eax],al
 1008fd8:	(bad)  
 1008fd9:	(bad)  
 1008fda:	(bad)  
 1008fdb:	inc    DWORD PTR [eax]
 1008fdd:	add    BYTE PTR [eax],al
 1008fdf:	add    ah,al
 1008fe1:	(bad)  
 1008fe2:	(bad)  
 1008fe3:	inc    DWORD PTR [eax]
 1008fe5:	add    BYTE PTR [eax],al
 1008fe7:	add    dh,bh
 1008fe9:	(bad)  
 1008fea:	(bad)  
 1008feb:	push   DWORD PTR [ecx]
 1008fed:	jo     0x1008fef
 1008fef:	add    DWORD PTR [ecx+0x70],eax
 1008ff2:	add    BYTE PTR [ecx],al
 1008ff4:	(bad)  
 1008ff5:	(bad)  
 1008ff6:	(bad)  
 1008ff7:	call   DWORD PTR [eax+esi*2+0x70a40100]
 1008ffe:	add    BYTE PTR [ecx],al
 1009000:	(bad)  
 1009001:	(bad)  
 1009002:	(bad)  
 1009003:	inc    DWORD PTR [eax]
 1009005:	add    BYTE PTR [eax],al
 1009007:	add    al,dl
 1009009:	(bad)  
 100900a:	(bad)  
 100900b:	inc    DWORD PTR [eax]
 100900d:	add    BYTE PTR [eax],al
 100900f:	add    dh,bh
 1009011:	(bad)  
 1009012:	(bad)  
 1009013:	dec    DWORD PTR ds:0x1d010074
 1009019:	je     0x100901b
 100901b:	add    DWORD PTR [eax],eax
 100901d:	add    BYTE PTR [eax],al
 100901f:	add    dh,bh
 1009021:	(bad)  
 1009022:	(bad)  
 1009023:	inc    DWORD PTR [eax]
 1009025:	add    BYTE PTR [eax],al
 1009027:	add    al,dl
 1009029:	(bad)  
 100902a:	(bad)  
 100902b:	inc    DWORD PTR [eax]
 100902d:	add    BYTE PTR [eax],al
 100902f:	add    dh,bh
 1009031:	(bad)  
 1009032:	(bad)  
 1009033:	push   edx
 1009035:	jne    0x1009037
 1009037:	add    DWORD PTR [edx],eax
 1009039:	jbe    0x100903b
 100903b:	add    DWORD PTR [eax],eax
 100903d:	add    BYTE PTR [eax],al
 100903f:	add    dh,bh
 1009041:	(bad)  
 1009042:	(bad)  
 1009043:	inc    DWORD PTR [eax]
 1009045:	add    BYTE PTR [eax],al
 1009047:	add    al,dl
 1009049:	(bad)  
 100904a:	(bad)  
 100904b:	inc    DWORD PTR [eax]
 100904d:	add    BYTE PTR [eax],al
 100904f:	add    dh,bh
 1009051:	(bad)  
 1009052:	(bad)  
 1009053:	call   edi
 1009055:	jns    0x1009057
 1009057:	add    edi,esp
 1009059:	jns    0x100905b
 100905b:	add    DWORD PTR [eax],eax
 100905d:	add    BYTE PTR [eax],al
 100905f:	add    dh,bh
 1009061:	(bad)  
 1009062:	(bad)  
 1009063:	inc    DWORD PTR [eax]
 1009065:	add    BYTE PTR [eax],al
 1009067:	add    al,dl
 1009069:	(bad)  
 100906a:	(bad)  
 100906b:	inc    DWORD PTR [eax]
 100906d:	add    BYTE PTR [eax],al
 100906f:	add    dh,bh
 1009071:	(bad)  
 1009072:	(bad)  
 1009073:	dec    DWORD PTR [ebx+0x7b]
 1009076:	add    BYTE PTR [ecx],al
 1009078:	pop    ebx
 1009079:	jnp    0x100907b
 100907b:	add    DWORD PTR [eax],eax
 100907d:	add    BYTE PTR [eax],al
 100907f:	add    dh,bh
 1009081:	(bad)  
 1009082:	(bad)  
 1009083:	inc    DWORD PTR [eax]
 1009085:	add    BYTE PTR [eax],al
 1009087:	add    BYTE PTR [eax+0xffffff],bh
 100908d:	add    BYTE PTR [eax],al
 100908f:	add    dh,bh
 1009091:	(bad)  
 1009092:	(bad)  
 1009093:	inc    esp
 1009095:	jle    0x1009097
 1009097:	add    esp,edx
 1009099:	jle    0x100909b
 100909b:	add    DWORD PTR [eax],eax
 100909d:	add    BYTE PTR [eax],al
 100909f:	add    BYTE PTR ds:0x2501007e,dl
 10090a5:	jle    0x10090a7
 10090a7:	add    esi,edi
 10090a9:	(bad)  
 10090aa:	(bad)  
 10090ab:	inc    DWORD PTR [eax]
 10090ad:	add    BYTE PTR [eax],al
 10090af:	add    ah,cl
 10090b1:	(bad)  
 10090b2:	(bad)  
 10090b3:	inc    DWORD PTR [eax]
 10090b5:	add    BYTE PTR [eax],al
 10090b7:	add    dh,bh
 10090b9:	(bad)  
 10090ba:	(bad)  
 10090bb:	call   DWORD PTR [esi]
 10090bd:	add    BYTE PTR [eax],0x1
 10090c0:	add    BYTE PTR es:[eax],0x1
 10090c4:	add    BYTE PTR [eax],al
 10090c6:	add    BYTE PTR [eax],al
 10090c8:	(bad)  
 10090c9:	(bad)  
 10090ca:	(bad)  
 10090cb:	inc    DWORD PTR [eax]
 10090cd:	add    BYTE PTR [eax],al
 10090cf:	add    ah,dl
 10090d1:	(bad)  
 10090d2:	(bad)  
 10090d3:	inc    DWORD PTR [eax]
 10090d5:	add    BYTE PTR [eax],al
 10090d7:	add    dh,bh
 10090d9:	(bad)  
 10090da:	(bad)  
 10090db:	jmp    DWORD PTR [ebx-0x4bfeff7f]
 10090e1:	add    DWORD PTR [eax],0xffffff01
 10090e7:	dec    ebp
 10090e9:	mov    eax,DWORD PTR [eax]
 10090eb:	add    DWORD PTR [edx],esp
 10090ed:	add    eax,0x11993
 10090f2:	add    BYTE PTR [eax],al
 10090f4:	in     al,0x90
 10090f6:	add    BYTE PTR [ecx],al
	...
 100910c:	add    DWORD PTR [eax],eax
 100910e:	add    BYTE PTR [eax],al
 1009110:	fcom   DWORD PTR [ecx+0x0]
 1009116:	add    BYTE PTR [eax],al
 1009118:	add    BYTE PTR [eax],al
 100911a:	add    BYTE PTR [eax],al
 100911c:	outs   dx,BYTE PTR ds:[esi]
 100911d:	xchg   esp,eax
 100911e:	add    BYTE PTR [eax],al
 1009120:	add    BYTE PTR [eax],dl
 1009122:	add    BYTE PTR [eax],al
 1009124:	sbb    BYTE PTR [edx+0x0],dl
 100912a:	add    BYTE PTR [eax],al
 100912c:	add    BYTE PTR [eax],al
 100912e:	add    BYTE PTR [eax],al
 1009130:	enter  0x95,0x0
 1009134:	inc    eax
 1009135:	adc    BYTE PTR [eax],al
 1009137:	add    BYTE PTR [ebx+edx*4+0x0],bl
	...
 1009143:	add    BYTE PTR [edx-0x69],dl
 1009146:	add    BYTE PTR [eax],al
 1009148:	test   BYTE PTR [ecx],dl
 100914a:	add    BYTE PTR [eax],al
 100914c:	sbb    BYTE PTR [eax+eax*1+0x0],dl
 1009153:	add    BYTE PTR [eax],al
 1009155:	add    BYTE PTR [eax],al
 1009157:	add    BYTE PTR [esi],ah
 1009159:	cwde   
 100915a:	add    BYTE PTR [eax],al
 100915c:	inc    eax
 100915d:	adc    al,BYTE PTR [eax]
 100915f:	add    al,ch
 1009161:	xchg   ecx,eax
	...
 100916a:	add    BYTE PTR [eax],al
 100916c:	clc    
 100916d:	cdq    
 100916e:	add    BYTE PTR [eax],al
 1009170:	adc    BYTE PTR [eax],dl
 1009172:	add    BYTE PTR [eax],al
 1009174:	adc    BYTE PTR [edx+0x0],dl
 100917a:	add    BYTE PTR [eax],al
 100917c:	add    BYTE PTR [eax],al
 100917e:	add    BYTE PTR [eax],al
 1009180:	sbb    al,0x9a
 1009182:	add    BYTE PTR [eax],al
 1009184:	cmp    BYTE PTR [eax],dl
 1009186:	add    BYTE PTR [eax],al
 1009188:	dec    esp
 1009189:	xchg   ebx,eax
	...
 1009192:	add    BYTE PTR [eax],al
 1009194:	ficomp DWORD PTR [esi+0x11740000]
 100919a:	add    BYTE PTR [eax],al
 100919c:	and    al,0x94
	...
 10091a6:	add    BYTE PTR [eax],al
 10091a8:	push   ss
 10091a9:	lahf   
 10091aa:	add    BYTE PTR [eax],al
 10091ac:	dec    esp
 10091ad:	adc    al,BYTE PTR [eax]
 10091af:	add    BYTE PTR [eax],dh
 10091b1:	xchg   esp,eax
	...
 10091ba:	add    BYTE PTR [eax],al
 10091bc:	dec    eax
 10091bd:	lahf   
 10091be:	add    BYTE PTR [eax],al
 10091c0:	pop    eax
 10091c1:	adc    al,BYTE PTR [eax]
	...
 10091d7:	add    BYTE PTR [edx-0x6c],cl
 10091da:	add    BYTE PTR [eax],al
 10091dc:	pop    edx
 10091dd:	xchg   esp,eax
 10091de:	add    BYTE PTR [eax],al
 10091e0:	cmp    al,0x94
 10091e2:	add    BYTE PTR [eax],al
 10091e4:	add    BYTE PTR [eax],al
 10091e6:	add    BYTE PTR [eax],al
 10091e8:	ss cdq 
 10091ea:	add    BYTE PTR [eax],al
 10091ec:	pusha  
 10091ed:	cdq    
 10091ee:	add    BYTE PTR [eax],al
 10091f0:	out    dx,al
 10091f1:	cwde   
 10091f2:	add    BYTE PTR [eax],al
 10091f4:	retf   0x98
 10091f7:	add    BYTE PTR [eax+ebx*4-0x67620000],dh
 10091fe:	add    BYTE PTR [eax],al
 1009200:	xor    al,0x98
 1009202:	add    BYTE PTR [eax],al
 1009204:	rcr    BYTE PTR [ecx-0x66f20000],cl
 100920a:	add    BYTE PTR [eax],al
 100920c:	add    BYTE PTR [eax],al
 100920e:	add    BYTE PTR [eax],al
 1009210:	push   es
 1009211:	call   0x0:0x0
 1009218:	mov    al,0x9f
 100921a:	add    BYTE PTR [eax],al
 100921c:	pushf  
 100921d:	lahf   
 100921e:	add    BYTE PTR [eax],al
 1009220:	nop
 1009221:	lahf   
 1009222:	add    BYTE PTR [eax],al
 1009224:	sbb    BYTE PTR [edi-0x60920000],0x0
 100922b:	add    BYTE PTR [edx-0x61],ah
 100922e:	add    BYTE PTR [eax],al
 1009230:	push   esp
 1009231:	lahf   
 1009232:	add    BYTE PTR [eax],al
 1009234:	cli    
 1009235:	popf   
 1009236:	add    BYTE PTR [eax],al
 1009238:	out    0x9d,al
 100923a:	add    BYTE PTR [eax],al
 100923c:	rcr    BYTE PTR [ebp-0x62400000],cl
 1009242:	add    BYTE PTR [eax],al
 1009244:	scas   al,BYTE PTR es:[edi]
 1009245:	popf   
 1009246:	add    BYTE PTR [eax],al
 1009248:	cwde   
 1009249:	popf   
 100924a:	add    BYTE PTR [eax],al
 100924c:	sbb    BYTE PTR [ebp-0x62940000],0x0
 1009253:	add    BYTE PTR [esi-0x63],bl
 1009256:	add    BYTE PTR [eax],al
 1009258:	dec    esi
 1009259:	popf   
 100925a:	add    BYTE PTR [eax],al
 100925c:	ds popf 
 100925e:	add    BYTE PTR [eax],al
 1009260:	xor    BYTE PTR [ebp-0x62e00000],bl
 1009266:	add    BYTE PTR [eax],al
 1009268:	adc    al,0x9d
 100926a:	add    BYTE PTR [eax],al
 100926c:	or     BYTE PTR [ebp-0x6a4a0000],bl
 1009272:	add    BYTE PTR [eax],al
 1009274:	jmp    0x9c:0xd200009c
 100927b:	add    BYTE PTR [esp+ebx*4-0x63540000],bh
 1009282:	add    BYTE PTR [eax],al
 1009284:	call   0x9c:0x8800009c
 100928b:	add    BYTE PTR [esi-0x64],dh
 100928e:	add    BYTE PTR [eax],al
 1009290:	pushfw 
 1009292:	add    BYTE PTR [eax],al
 1009294:	push   edx
 1009295:	pushf  
 1009296:	add    BYTE PTR [eax],al
 1009298:	cmp    al,0x9c
 100929a:	add    BYTE PTR [eax],al
 100929c:	es pushf 
 100929e:	add    BYTE PTR [eax],al
 10092a0:	sbb    bl,BYTE PTR [eax+eax*1+0x9c0400]
 10092a7:	add    al,ch
 10092a9:	fwait
 10092aa:	add    BYTE PTR [eax],al
 10092ac:	rcr    BYTE PTR [ebx-0x643e0000],cl
 10092b2:	add    BYTE PTR [eax],al
 10092b4:	scas   al,BYTE PTR es:[edi]
 10092b5:	fwait
 10092b6:	add    BYTE PTR [eax],al
 10092b8:	pushf  
 10092b9:	fwait
 10092ba:	add    BYTE PTR [eax],al
 10092bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10092bd:	xchg   ebp,eax
 10092be:	add    BYTE PTR [eax],al
 10092c0:	cwde   
 10092c1:	xchg   ebp,eax
 10092c2:	add    BYTE PTR [eax],al
 10092c4:	mov    dl,BYTE PTR [ebp-0x6a8e0000]
 10092ca:	add    BYTE PTR [eax],al
 10092cc:	mov    bl,BYTE PTR [ebx-0x64860000]
 10092d2:	add    BYTE PTR [eax],al
 10092d4:	outs   dx,BYTE PTR ds:[esi]
 10092d5:	fwait
 10092d6:	add    BYTE PTR [eax],al
 10092d8:	pop    esi
 10092d9:	fwait
 10092da:	add    BYTE PTR [eax],al
 10092dc:	ss fwait
 10092de:	add    BYTE PTR [eax],al
 10092e0:	sbb    al,0x9b
 10092e2:	add    BYTE PTR [eax],al
 10092e4:	pop    edx
 10092e5:	xchg   ebp,eax
 10092e6:	add    BYTE PTR [eax],al
 10092e8:	ds xchg ebp,eax
 10092ea:	add    BYTE PTR [eax],al
 10092ec:	cs xchg ebp,eax
 10092ee:	add    BYTE PTR [eax],al
 10092f0:	sbb    BYTE PTR [ebp-0x6b060000],dl
 10092f6:	add    BYTE PTR [eax],al
 10092f8:	in     al,0x94
 10092fa:	add    BYTE PTR [eax],al
 10092fc:	int3   
 10092fd:	xchg   esp,eax
 10092fe:	add    BYTE PTR [eax],al
 1009300:	mov    eax,0xa0000094
 1009305:	xchg   esp,eax
 1009306:	add    BYTE PTR [eax],al
 1009308:	mov    ss,WORD PTR [eax+eax*1+0x947c00]
 100930f:	add    dl,bh
 1009311:	pushf  
 1009312:	add    BYTE PTR [eax],al
 1009314:	sub    BYTE PTR [edx-0x65c20000],bl
 100931a:	add    BYTE PTR [eax],al
 100931c:	inc    esi
 100931d:	call   0x0:0x9a640000
 1009324:	je     0x10092c0
 1009326:	add    BYTE PTR [eax],al
 1009328:	mov    BYTE PTR [edx-0x65640000],bl
 100932e:	add    BYTE PTR [eax],al
 1009330:	mov    eax,0xcc00009a
 1009335:	call   0x0:0x9adc0000
 100933c:	neg    BYTE PTR [edx-0x64fa0000]
 1009342:	add    BYTE PTR [eax],al
 1009344:	ret    0x9f
 1009347:	add    BYTE PTR [eax],al
 1009349:	add    BYTE PTR [eax],al
 100934b:	add    BYTE PTR [eax-0x69ffff62],dh
 1009351:	sahf   
 1009352:	add    BYTE PTR [eax],al
 1009354:	jl     0x10092f4
 1009356:	add    BYTE PTR [eax],al
 1009358:	add    BYTE PTR [eax],al
 100935a:	add    BYTE PTR [eax],al
 100935c:	cmp    al,0x9e
 100935e:	add    BYTE PTR [eax],al
 1009360:	dec    esp
 1009361:	sahf   
 1009362:	add    BYTE PTR [eax],al
 1009364:	pop    esp
 1009365:	sahf   
 1009366:	add    BYTE PTR [eax],al
 1009368:	ins    BYTE PTR es:[edi],dx
 1009369:	sahf   
 100936a:	add    BYTE PTR [eax],al
 100936c:	xor    al,0x9e
 100936e:	add    BYTE PTR [eax],al
 1009370:	sub    BYTE PTR [esi-0x61e40000],bl
 1009376:	add    BYTE PTR [eax],al
 1009378:	push   cs
 1009379:	sahf   
 100937a:	add    BYTE PTR [eax],al
 100937c:	sub    al,0x96
 100937e:	add    BYTE PTR [eax],al
 1009380:	cmp    dl,BYTE PTR [esi-0x69bc0000]
 1009386:	add    BYTE PTR [eax],al
 1009388:	dec    esi
 1009389:	xchg   esi,eax
 100938a:	add    BYTE PTR [eax],al
 100938c:	push   esi
 100938d:	xchg   esi,eax
 100938e:	add    BYTE PTR [eax],al
 1009390:	ins    BYTE PTR es:[edi],dx
 1009391:	xchg   esi,eax
 1009392:	add    BYTE PTR [eax],al
 1009394:	jbe    0x100932c
 1009396:	add    BYTE PTR [eax],al
 1009398:	adc    BYTE PTR [esi-0x69700000],0x0
 100939f:	add    BYTE PTR [esi-0x4fffff6a],bl
 10093a5:	xchg   esi,eax
 10093a6:	add    BYTE PTR [eax],al
 10093a8:	mov    edx,0xc2000096
 10093ad:	xchg   esi,eax
 10093ae:	add    BYTE PTR [eax],al
 10093b0:	rcl    BYTE PTR [esi-0x69280000],1
 10093b6:	add    BYTE PTR [eax],al
 10093b8:	out    0x96,al
 10093ba:	add    BYTE PTR [eax],al
 10093bc:	repnz xchg esi,eax
 10093be:	add    BYTE PTR [eax],al
 10093c0:	add    BYTE PTR [edi-0x68ea0000],dl
 10093c6:	add    BYTE PTR [eax],al
 10093c8:	sub    dl,BYTE PTR [edi-0x68ca0000]
 10093ce:	add    BYTE PTR [eax],al
 10093d0:	inc    eax
 10093d1:	xchg   edi,eax
 10093d2:	add    BYTE PTR [eax],al
 10093d4:	pusha  
 10093d5:	xchg   edi,eax
 10093d6:	add    BYTE PTR [eax],al
 10093d8:	je     0x1009371
 10093da:	add    BYTE PTR [eax],al
 10093dc:	mov    dl,BYTE PTR [edi-0x685c0000]
 10093e2:	add    BYTE PTR [eax],al
 10093e4:	scas   al,BYTE PTR es:[edi]
 10093e5:	xchg   edi,eax
 10093e6:	add    BYTE PTR [eax],al
 10093e8:	mov    esp,0xc4000097
 10093ed:	xchg   edi,eax
 10093ee:	add    BYTE PTR [eax],al
 10093f0:	into   
 10093f1:	xchg   edi,eax
 10093f2:	add    BYTE PTR [eax],al
 10093f4:	loopne 0x100938d
 10093f6:	add    BYTE PTR [eax],al
 10093f8:	lock xchg edi,eax
 10093fa:	add    BYTE PTR [eax],al
 10093fc:	(bad)  
 10093fd:	xchg   ebp,eax
 10093fe:	add    BYTE PTR [eax],al
 1009400:	out    0x95,al
 1009402:	add    BYTE PTR [eax],al
 1009404:	out    dx,al
 1009405:	xchg   ebp,eax
 1009406:	add    BYTE PTR [eax],al
 1009408:	(bad)  
 1009409:	xchg   ebp,eax
 100940a:	add    BYTE PTR [eax],al
 100940c:	adc    al,0x96
 100940e:	add    BYTE PTR [eax],al
 1009410:	and    dl,BYTE PTR [esi+0x0]
 1009416:	add    BYTE PTR [eax],al
 1009418:	push   es
 1009419:	add    BYTE PTR [eax],al
 100941b:	add    BYTE PTR [eax+eax*1],0x0
 100941f:	add    BYTE PTR [eax],0x0
 1009422:	add    BYTE PTR [eax],al
 1009424:	call   0xff0094c7
 1009429:	sahf   
 100942a:	add    BYTE PTR [eax],al
 100942c:	add    BYTE PTR [eax],al
 100942e:	add    BYTE PTR [eax],al
 1009430:	ss lahf 
 1009432:	add    BYTE PTR [eax],al
 1009434:	and    BYTE PTR [edi+0x0],bl
 100943a:	add    BYTE PTR [eax],al
 100943c:	xor    BYTE PTR [edx],al
 100943e:	push   edx
 100943f:	gs addr16 inc ebx
 1009442:	ins    BYTE PTR es:[edi],dx
 1009443:	outs   dx,DWORD PTR ds:[esi]
 1009444:	jae    0x10094ab
 1009446:	dec    ebx
 1009447:	gs jns 0x100944a
 100944a:	popa   
 100944b:	add    dl,BYTE PTR [edx+0x65]
 100944e:	addr16 dec edi
 1009450:	jo     0x10094b7
 1009452:	outs   dx,BYTE PTR ds:[esi]
 1009453:	dec    ebx
 1009454:	gs jns 0x100949c
 1009457:	js     0x10094b0
 1009459:	add    BYTE PTR [esi+0x2],ch
 100945c:	push   edx
 100945d:	gs addr16 push ecx
 1009460:	jne    0x10094c7
 1009462:	jb     0x10094dd
 1009464:	push   esi
 1009465:	popa   
 1009466:	ins    BYTE PTR es:[edi],dx
 1009467:	jne    0x10094ce
 1009469:	inc    ebp
 100946a:	js     0x10094c3
 100946c:	add    BYTE PTR [eax],al
 100946e:	inc    ecx
 100946f:	inc    esp
 1009470:	push   esi
 1009471:	inc    ecx
 1009472:	push   eax
 1009473:	dec    ecx
 1009474:	xor    esi,DWORD PTR [edx]
 1009476:	cs fs ins BYTE PTR es:[edi],dx
 1009479:	ins    BYTE PTR es:[edi],dx
 100947a:	add    BYTE PTR [eax],al
 100947c:	inc    ebp
 100947d:	add    al,BYTE PTR [edi+0x65]
 1009480:	je     0x10094d2
 1009482:	jb     0x10094f3
 1009484:	arpl   WORD PTR [ecx+0x64],ax
 1009487:	fs jb  0x10094ef
 100948a:	jae    0x10094ff
 100948c:	add    BYTE PTR [eax],al
 100948e:	mov    cl,0x3
 1009490:	push   edx
 1009491:	popa   
 1009492:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
 1009499:	jo     0x100950f
 100949b:	imul   ebp,DWORD PTR [edi+0x6e],0xd10000
 10094a2:	inc    esp
 10094a3:	gs ins BYTE PTR es:[edi],dx
 10094a5:	gs je  0x100950d
 10094a8:	inc    ebx
 10094a9:	jb     0x1009514
 10094ab:	je     0x1009516
 10094ad:	arpl   WORD PTR [ecx+0x6c],sp
 10094b0:	push   ebx
 10094b1:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 10094b6:	outs   dx,BYTE PTR ds:[esi]
 10094b7:	add    BYTE PTR [eax],bl
 10094b9:	add    al,BYTE PTR [edi+0x65]
 10094bc:	je     0x100950b
 10094be:	outs   dx,DWORD PTR ds:[esi]
 10094bf:	fs jne 0x100952e
 10094c2:	gs dec eax
 10094c4:	popa   
 10094c5:	outs   dx,BYTE PTR ds:[esi]
 10094c6:	fs ins BYTE PTR es:[edi],dx
 10094c8:	gs push edi
 10094ca:	add    BYTE PTR [eax],al
 10094cc:	out    dx,eax
 10094cd:	add    cl,BYTE PTR [ecx+0x6e]
 10094d0:	je     0x1009537
 10094d2:	jb     0x1009540
 10094d4:	outs   dx,DWORD PTR ds:[esi]
 10094d5:	arpl   WORD PTR [ebx+0x65],bp
 10094d8:	fs dec ecx
 10094da:	outs   dx,BYTE PTR ds:[esi]
 10094db:	arpl   WORD PTR [edx+0x65],si
 10094de:	ins    DWORD PTR es:[edi],dx
 10094df:	outs   dx,BYTE PTR gs:[esi]
 10094e1:	je     0x10094e3
 10094e3:	add    bl,dl
 10094e5:	add    cl,BYTE PTR [eax+0x65]
 10094e8:	popa   
 10094e9:	jo     0x100953e
 10094eb:	gs je  0x1009537
 10094ee:	outs   dx,BYTE PTR ds:[esi]
 10094ef:	outs   dx,WORD PTR ds:[esi]
 10094f1:	jb     0x1009560
 10094f3:	popa   
 10094f4:	je     0x100955f
 10094f6:	outs   dx,DWORD PTR ds:[esi]
 10094f7:	outs   dx,BYTE PTR ds:[esi]
 10094f8:	add    BYTE PTR [eax],al
 10094fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10094fb:	add    al,0x53
 10094fd:	gs je  0x1009555
 1009500:	outs   dx,BYTE PTR ds:[esi]
 1009501:	push   0x6c646e61
 1009506:	gs fs inc ebp
 1009509:	js     0x100956e
 100950b:	gs jo  0x1009582
 100950e:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
 1009515:	gs jb  0x1009518
 1009518:	lds    eax,FWORD PTR [ecx]
 100951a:	inc    edi
 100951b:	gs je  0x1009561
 100951e:	jne    0x1009592
 1009520:	jb     0x1009587
 1009522:	outs   dx,BYTE PTR ds:[esi]
 1009523:	je     0x1009579
 1009525:	push   0x64616572
 100952a:	dec    ecx
 100952b:	add    BYTE PTR fs:[eax],al
 100952e:	add    al,BYTE PTR [edx]
 1009530:	inc    edi
 1009531:	gs je  0x1009580
 1009534:	popa   
 1009535:	jae    0x10095ab
 1009537:	inc    ebp
 1009538:	jb     0x10095ac
 100953a:	outs   dx,DWORD PTR ds:[esi]
 100953b:	jb     0x100953d
 100953d:	add    dl,ah
 100953f:	add    cl,BYTE PTR [ecx+0x6e]
 1009542:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
 100954a:	inc    ebx
 100954b:	jb     0x10095b6
 100954d:	je     0x10095b8
 100954f:	arpl   WORD PTR [ecx+0x6c],sp
 1009552:	push   ebx
 1009553:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 1009558:	outs   dx,BYTE PTR ds:[esi]
 1009559:	add    dh,ch
 100955b:	add    BYTE PTR [ebp+0x6e],al
 100955e:	je     0x10095c5
 1009560:	jb     0x10095a5
 1009562:	jb     0x10095cd
 1009564:	je     0x10095cf
 1009566:	arpl   WORD PTR [ecx+0x6c],sp
 1009569:	push   ebx
 100956a:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 100956f:	outs   dx,BYTE PTR ds:[esi]
 1009570:	add    BYTE PTR [eax],al
 1009572:	cmp    DWORD PTR [ebx],eax
 1009574:	dec    esp
 1009575:	gs popa 
 1009577:	jbe    0x10095de
 1009579:	inc    ebx
 100957a:	jb     0x10095e5
 100957c:	je     0x10095e7
 100957e:	arpl   WORD PTR [ecx+0x6c],sp
 1009581:	push   ebx
 1009582:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 1009587:	outs   dx,BYTE PTR ds:[esi]
 1009588:	add    BYTE PTR [eax],al
 100958a:	push   edx
 100958b:	add    BYTE PTR [ebx+0x6c],al
 100958e:	outs   dx,DWORD PTR ds:[esi]
 100958f:	jae    0x10095f6
 1009591:	dec    eax
 1009592:	popa   
 1009593:	outs   dx,BYTE PTR ds:[esi]
 1009594:	fs ins BYTE PTR es:[edi],dx
 1009596:	add    BYTE PTR gs:[edi+0x65724300],cl
 100959d:	popa   
 100959e:	je     0x1009605
 10095a0:	inc    esi
 10095a1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x47020300
 10095a9:	gs je  0x10095f8
 10095ac:	outs   dx,DWORD PTR ds:[esi]
 10095ad:	arpl   WORD PTR [ecx+0x6c],sp
 10095b0:	push   esp
 10095b1:	imul   ebp,DWORD PTR [ebp+0x65],0x2970000
 10095b8:	inc    edi
 10095b9:	gs je  0x1009610
 10095bc:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
 10095c3:	popa   
 10095c4:	je     0x100961d
 10095c6:	add    BYTE PTR [eax],al
 10095c8:	dec    ebx
 10095c9:	inc    ebp
 10095ca:	push   edx
 10095cb:	dec    esi
 10095cc:	inc    ebp
 10095cd:	dec    esp
 10095ce:	xor    esi,DWORD PTR [edx]
 10095d0:	cs fs ins BYTE PTR es:[edi],dx
 10095d3:	ins    BYTE PTR es:[edi],dx
 10095d4:	add    BYTE PTR [eax],al
 10095d6:	add    BYTE PTR gs:[edi],bh
 10095d9:	aas    
 10095da:	xor    eax,DWORD PTR [eax+0x59]
 10095dd:	inc    ecx
 10095de:	pop    eax
 10095df:	push   eax
 10095e0:	inc    ecx
 10095e1:	pop    eax
 10095e2:	inc    eax
 10095e3:	pop    edx
 10095e4:	add    BYTE PTR [eax],al
 10095e6:	mov    eax,DWORD PTR ds:0x65657266
 10095ec:	add    BYTE PTR [eax],al
 10095ee:	jp     0x10095f0
 10095f0:	aas    
 10095f1:	aas    
 10095f2:	pop    edi
 10095f3:	push   esi
 10095f4:	inc    eax
 10095f5:	pop    ecx
 10095f6:	inc    ecx
 10095f7:	pop    eax
 10095f8:	push   eax
 10095f9:	inc    ecx
 10095fa:	pop    eax
 10095fb:	inc    eax
 10095fc:	pop    edx
 10095fd:	add    BYTE PTR [ecx],ah
 10095ff:	add    DWORD PTR [edi+0x43],ebx
 1009602:	js     0x100967c
 1009604:	push   esp
 1009605:	push   0x45776f72
 100960a:	js     0x100966f
 100960c:	gs jo  0x1009683
 100960f:	imul   ebp,DWORD PTR [edi+0x6e],0x1650000
 1009616:	pop    edi
 1009617:	pop    edi
 1009618:	imul   ebp,DWORD PTR [edi+0x62],0x6e75665f
 100961f:	arpl   WORD PTR [eax],ax
 1009621:	add    BYTE PTR [eax],bh
 1009623:	add    bl,BYTE PTR [edi+0x66]
 1009626:	imul   ebp,DWORD PTR [ebp+eiz*2+0x6e],0x611006f
 100962e:	jae    0x10096a7
 1009630:	jo     0x10096a4
 1009632:	imul   ebp,DWORD PTR [esi+0x74],0x735f66
 1009639:	add    BYTE PTR [eax+0x65675f02],bl
 100963f:	je     0x10096b8
 1009641:	arpl   WORD PTR [eax+0x0],bp
 1009644:	sbb    DWORD PTR [ebx],eax
 1009646:	pop    edi
 1009647:	imul   esp,DWORD PTR [edx+0x68],0x69
 100964b:	je     0x100964d
 100964d:	add    BYTE PTR ds:0x6f655f02,bl
 1009653:	data16 add BYTE PTR [eax],al
 1009656:	cmp    al,BYTE PTR [ecx]
 1009658:	pop    edi
 1009659:	pop    edi
 100965a:	inc    ebx
 100965b:	js     0x10096d5
 100965d:	inc    esi
 100965e:	jb     0x10096c1
 1009660:	ins    DWORD PTR es:[edi],dx
 1009661:	gs dec eax
 1009663:	popa   
 1009664:	outs   dx,BYTE PTR ds:[esi]
 1009665:	fs ins BYTE PTR es:[edi],dx
 1009667:	gs jb  0x100969d
 100966a:	add    BYTE PTR [eax],al
 100966c:	rol    DWORD PTR ds:0x736d656d,cl
 1009672:	gs je  0x1009675
 1009675:	add    BYTE PTR [ecx+0x6],dl
 1009678:	ja     0x10096ea
 100967a:	jb     0x10096e5
 100967c:	outs   dx,BYTE PTR ds:[esi]
 100967d:	je     0x10096e5
 100967f:	add    BYTE PTR [eax+0x0],bh
 1009682:	aas    
 1009683:	aas    
 1009684:	pop    edi
 1009685:	push   ebp
 1009686:	inc    eax
 1009687:	pop    ecx
 1009688:	inc    ecx
 1009689:	push   eax
 100968a:	inc    ecx
 100968b:	pop    eax
 100968c:	dec    ecx
 100968d:	inc    eax
 100968e:	pop    edx
 100968f:	add    ch,al
 1009691:	add    DWORD PTR [edi+0x61],ebx
 1009694:	ins    DWORD PTR es:[edi],dx
 1009695:	jae    0x10096fe
 1009697:	pop    edi
 1009698:	gs js  0x1009704
 100969b:	je     0x100969d
 100969d:	add    BYTE PTR [esi+0x775f5f01],dh
 10096a3:	addr16 gs je 0x1009714
 10096a7:	popa   
 10096a8:	imul   ebp,DWORD PTR [esi+0x61],0x736772
 10096af:	add    ah,bl
 10096b1:	add    DWORD PTR [edi+0x63],ebx
 10096b4:	gs js  0x1009720
 10096b7:	je     0x10096b9
 10096b9:	add    BYTE PTR [edx],ch
 10096bb:	add    bl,BYTE PTR [edi+0x65]
 10096be:	js     0x1009729
 10096c0:	je     0x10096c2
 10096c2:	sub    eax,0x63585f01
 10096c7:	jo     0x100973d
 10096c9:	inc    esi
 10096ca:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x5730072
 10096d2:	gs js  0x100973e
 10096d5:	je     0x10096d7
 10096d7:	add    BYTE PTR [edi+0x775f5f01],dh
 10096dd:	imul   ebp,DWORD PTR [esi+0x69],0x766e6574
 10096e4:	add    BYTE PTR [eax],al
 10096e6:	mov    al,0x2
 10096e8:	pop    edi
 10096e9:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
 10096f0:	ins    DWORD PTR es:[edi],dx
 10096f1:	add    BYTE PTR [ecx+0x6e695f02],dh
 10096f7:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x655f6d72
 10096ff:	add    ah,ch
 1009701:	add    DWORD PTR [edi+0x63],ebx
 1009704:	outs   dx,DWORD PTR ds:[esi]
 1009705:	outs   dx,BYTE PTR ds:[esi]
 1009706:	imul   sp,WORD PTR [edi+0x74],0x7268
 100970c:	gs popa 
 100970e:	fs ins BYTE PTR es:[edi],dx
 1009710:	outs   dx,DWORD PTR ds:[esi]
 1009711:	arpl   WORD PTR [ecx+0x6c],sp
 1009714:	add    BYTE PTR gs:[edx+0x735f5f01],ah
 100971b:	gs je  0x1009793
 100971e:	jae    0x1009785
 1009720:	jb     0x100978f
 1009722:	popa   
 1009723:	je     0x100978d
 1009725:	gs jb  0x100979a
 1009728:	add    BYTE PTR [eax],al
 100972a:	jmp    0x100972d
 100972c:	pop    edi
 100972d:	arpl   WORD PTR [edi+0x6d],bp
 1009730:	ins    DWORD PTR es:[edi],dx
 1009731:	outs   dx,DWORD PTR ds:[esi]
 1009732:	fs add BYTE PTR gs:[eax],al
 1009736:	inc    ebp
 1009737:	add    bl,BYTE PTR [edi+0x66]
 100973a:	ins    DWORD PTR es:[edi],dx
 100973b:	outs   dx,DWORD PTR ds:[esi]
 100973c:	fs add BYTE PTR gs:[eax],al
 1009740:	lahf   
 1009741:	add    DWORD PTR [edi+0x5f],ebx
 1009744:	jae    0x10097ab
 1009746:	je     0x10097a7
 1009748:	popa   
 1009749:	jo     0x10097bb
 100974b:	pop    edi
 100974c:	je     0x10097c7
 100974e:	jo     0x10097b5
 1009750:	add    BYTE PTR [eax],al
 1009752:	dec    ebp
 1009753:	push   ebx
 1009754:	push   esi
 1009755:	inc    ebx
 1009756:	push   edx
 1009757:	xor    DWORD PTR [eax],esi
 1009759:	xor    BYTE PTR [esi],ch
 100975b:	fs ins BYTE PTR es:[edi],dx
 100975d:	ins    BYTE PTR es:[edi],dx
 100975e:	add    BYTE PTR [eax],al
 1009760:	add    al,BYTE PTR [ecx]
 1009762:	aas    
 1009763:	je     0x10097ca
 1009765:	jb     0x10097d4
 1009767:	imul   ebp,DWORD PTR [esi+0x61],0x40406574
 100976e:	pop    ecx
 100976f:	inc    ecx
 1009770:	pop    eax
 1009771:	pop    eax
 1009772:	pop    edx
 1009773:	add    bl,bh
 1009775:	add    DWORD PTR [edi+0x63],ebx
 1009778:	jb     0x10097ee
 100977a:	pop    edi
 100977b:	fs bound esi,QWORD PTR gs:[ebp+0x67]
 1009780:	addr16 gs jb 0x10097e3
 1009784:	push   0x6b6f6f
 1009789:	add    BYTE PTR [ecx],ah
 100978b:	add    bl,BYTE PTR [edi+0x65]
 100978e:	js     0x10097f3
 1009790:	gs jo  0x1009807
 1009793:	pop    edi
 1009794:	push   0x6c646e61
 1009799:	gs jb  0x10097d0
 100979c:	pop    edi
 100979d:	arpl   WORD PTR [edi+0x6d],bp
 10097a0:	ins    DWORD PTR es:[edi],dx
 10097a1:	outs   dx,DWORD PTR ds:[esi]
 10097a2:	outs   dx,BYTE PTR ds:[esi]
 10097a3:	add    BYTE PTR [ebp+0x6e755f04],cl
 10097a9:	ins    BYTE PTR es:[edi],dx
 10097aa:	outs   dx,DWORD PTR ds:[esi]
 10097ab:	arpl   WORD PTR [ebx+0x0],bp
 10097ae:	pop    ebx
 10097af:	add    DWORD PTR [edi+0x5f],ebx
 10097b2:	fs ins BYTE PTR es:[edi],dx
 10097b4:	ins    BYTE PTR es:[edi],dx
 10097b5:	outs   dx,DWORD PTR ds:[esi]
 10097b6:	outs   dx,BYTE PTR ds:[esi]
 10097b7:	gs js  0x1009823
 10097ba:	je     0x10097bc
 10097bc:	and    eax,DWORD PTR [ebx]
 10097be:	pop    edi
 10097bf:	ins    BYTE PTR es:[edi],dx
 10097c0:	outs   dx,DWORD PTR ds:[esi]
 10097c1:	arpl   WORD PTR [ebx+0x0],bp
 10097c4:	leave  
 10097c5:	add    ebx,DWORD PTR [edi+0x6f]
 10097c8:	outs   dx,BYTE PTR ds:[esi]
 10097c9:	gs js  0x1009835
 10097cc:	je     0x10097ce
 10097ce:	mov    eax,0x6e695f02
 10097d3:	jbe    0x1009844
 10097d5:	imul   esp,DWORD PTR [ebp+0x5f],0x77
 10097d9:	popa   
 10097da:	je     0x100984f
 10097dc:	outs   dx,DWORD PTR ds:[esi]
 10097dd:	outs   dx,BYTE PTR ds:[esi]
 10097de:	add    BYTE PTR [eax],al
 10097e0:	out    dx,eax
 10097e1:	add    DWORD PTR [edi+0x63],ebx
 10097e4:	outs   dx,DWORD PTR ds:[esi]
 10097e5:	outs   dx,BYTE PTR ds:[esi]
 10097e6:	je     0x100985a
 10097e8:	outs   dx,DWORD PTR ds:[esi]
 10097e9:	ins    BYTE PTR es:[edi],dx
 10097ea:	data16 jo 0x100984c
 10097ed:	jae    0x10097ef
 10097ef:	add    dh,ch
 10097f1:	add    BYTE PTR [edi],bh
 10097f3:	pop    edi
 10097f4:	je     0x100986f
 10097f6:	jo     0x100985d
 10097f8:	pop    edi
 10097f9:	imul   ebp,DWORD PTR [esi+0x66],0x74645f6f
 1009800:	outs   dx,DWORD PTR ds:[esi]
 1009801:	jb     0x1009862
 1009803:	imul   ebp,DWORD PTR [esi+0x74],0x616e7265
 100980a:	ins    BYTE PTR es:[edi],dx
 100980b:	pop    edi
 100980c:	ins    DWORD PTR es:[edi],dx
 100980d:	gs je  0x1009878
 1009810:	outs   dx,DWORD PTR ds:[esi]
 1009811:	fs inc eax
 1009813:	je     0x100988e
 1009815:	jo     0x100987c
 1009817:	pop    edi
 1009818:	imul   ebp,DWORD PTR [esi+0x66],0x5140406f
 100981f:	inc    ecx
 1009820:	inc    ebp
 1009821:	pop    eax
 1009822:	pop    eax
 1009823:	pop    edx
 1009824:	add    BYTE PTR [eax],al
 1009826:	dec    edi
 1009827:	dec    esp
 1009828:	inc    ebp
 1009829:	inc    ecx
 100982a:	push   ebp
 100982b:	push   esp
 100982c:	xor    esi,DWORD PTR [edx]
 100982e:	cs fs ins BYTE PTR es:[edi],dx
 1009831:	ins    BYTE PTR es:[edi],dx
 1009832:	add    BYTE PTR [eax],al
 1009834:	sbb    BYTE PTR [eax],al
 1009836:	aas    
 1009837:	push   eax
 1009838:	popa   
 1009839:	jb     0x10098ae
 100983b:	gs jb  0x1009881
 100983e:	outs   dx,DWORD PTR ds:[esi]
 100983f:	outs   dx,BYTE PTR ds:[esi]
 1009840:	jae    0x10098b1
 1009842:	ins    BYTE PTR es:[edi],dx
 1009843:	gs push eax
 1009845:	popa   
 1009846:	jae    0x10098bb
 1009848:	ja     0x10098b9
 100984a:	jb     0x10098b0
 100984c:	push   eax
 100984d:	jb     0x10098be
 100984f:	ins    DWORD PTR es:[edi],dx
 1009850:	jo     0x10098c6
 1009852:	inc    eax
 1009853:	inc    eax
 1009854:	pop    ecx
 1009855:	inc    ecx
 1009856:	pop    eax
 1009857:	dec    eax
 1009858:	push   eax
 1009859:	inc    ecx
 100985a:	push   esi
 100985b:	aas    
 100985c:	and    al,0x62
 100985e:	popa   
 100985f:	jae    0x10098ca
 1009861:	arpl   WORD PTR [edi+0x73],bx
 1009864:	je     0x10098d8
 1009866:	imul   ebp,DWORD PTR [esi+0x67],0x3f554740
 100986d:	and    al,0x63
 100986f:	push   0x745f7261
 1009874:	jb     0x10098d7
 1009876:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734047
 100987e:	fs inc eax
 1009880:	inc    eax
 1009881:	push   esi
 1009882:	aas    
 1009883:	and    al,0x61
 1009885:	ins    BYTE PTR es:[edi],dx
 1009886:	ins    BYTE PTR es:[edi],dx
 1009887:	outs   dx,DWORD PTR ds:[esi]
 1009888:	arpl   WORD PTR [ecx+0x74],sp
 100988b:	outs   dx,DWORD PTR ds:[esi]
 100988c:	jb     0x10098ce
 100988e:	inc    edi
 100988f:	inc    eax
 1009890:	xor    al,BYTE PTR [eax+0x40]
 1009893:	jae    0x1009909
 1009895:	fs inc eax
 1009897:	inc    eax
 1009898:	push   eax
 1009899:	inc    ecx
 100989a:	pop    eax
 100989b:	inc    eax
 100989c:	pop    edx
 100989d:	add    BYTE PTR [ecx],al
 100989f:	add    BYTE PTR [edi],bh
 10098a1:	aas    
 10098a2:	xor    BYTE PTR [ebx+0x50],al
 10098a5:	popa   
 10098a6:	jb     0x100991b
 10098a8:	gs jb  0x10098eb
 10098ab:	inc    eax
 10098ac:	push   ecx
 10098ad:	inc    ecx
 10098ae:	inc    ebp
 10098af:	inc    eax
 10098b0:	pop    eax
 10098b1:	pop    edx
 10098b2:	add    BYTE PTR [eax],al
 10098b4:	add    al,BYTE PTR [eax]
 10098b6:	aas    
 10098b7:	aas    
 10098b8:	xor    DWORD PTR [ebx+0x50],eax
 10098bb:	popa   
 10098bc:	jb     0x1009931
 10098be:	gs jb  0x1009901
 10098c1:	inc    eax
 10098c2:	push   ecx
 10098c3:	inc    ecx
 10098c4:	inc    ebp
 10098c5:	inc    eax
 10098c6:	pop    eax
 10098c7:	pop    edx
 10098c8:	add    BYTE PTR [eax],al
 10098ca:	adc    al,0x0
 10098cc:	aas    
 10098cd:	push   eax
 10098ce:	popa   
 10098cf:	jb     0x1009944
 10098d1:	gs inc eax
 10098d3:	inc    ebx
 10098d4:	push   eax
 10098d5:	popa   
 10098d6:	jb     0x100994b
 10098d8:	gs jb  0x100991b
 10098db:	inc    eax
 10098dc:	push   ecx
 10098dd:	inc    ecx
 10098de:	inc    ebp
 10098df:	dec    eax
 10098e0:	push   eax
 10098e1:	inc    ecx
 10098e2:	push   ebp
 10098e3:	pop    edi
 10098e4:	imul   ebp,DWORD PTR [edi+0x62],0x40406675
 10098eb:	inc    eax
 10098ec:	pop    edx
 10098ed:	add    BYTE PTR [ebx],dl
 10098ef:	add    BYTE PTR [edi],bh
 10098f1:	push   eax
 10098f2:	popa   
 10098f3:	jb     0x1009968
 10098f5:	gs inc eax
 10098f7:	inc    ebx
 10098f8:	push   eax
 10098f9:	popa   
 10098fa:	jb     0x100996f
 10098fc:	gs jb  0x100993f
 10098ff:	inc    eax
 1009900:	push   ecx
 1009901:	inc    ecx
 1009902:	inc    ebp
 1009903:	dec    eax
 1009904:	dec    eax
 1009905:	push   ecx
 1009906:	inc    ecx
 1009907:	push   eax
 1009908:	inc    ecx
 1009909:	inc    edi
 100990a:	inc    eax
 100990b:	pop    edx
 100990c:	add    BYTE PTR [eax],al
 100990e:	add    BYTE PTR es:[edi],bh
 1009911:	push   esi
 1009912:	popa   
 1009913:	ins    BYTE PTR es:[edi],dx
 1009914:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x70654465
 100991c:	outs   dx,BYTE PTR gs:[esi]
 100991e:	fs outs dx,BYTE PTR gs:[esi]
 1009921:	arpl   WORD PTR [ecx+0x65],bp
 1009924:	jae    0x1009966
 1009926:	inc    ebx
 1009927:	push   eax
 1009928:	popa   
 1009929:	jb     0x100999e
 100992b:	gs jb  0x100996e
 100992e:	inc    eax
 100992f:	push   ecx
 1009930:	inc    ecx
 1009931:	inc    ebp
 1009932:	dec    eax
 1009933:	pop    eax
 1009934:	pop    edx
 1009935:	add    BYTE PTR [ecx],ah
 1009937:	add    BYTE PTR [edi],bh
 1009939:	push   ebx
 100993a:	gs je  0x1009981
 100993d:	imul   esi,DWORD PTR [ebx+0x70],0x5479616c
 1009944:	outs   dx,DWORD PTR ds:[esi]
 1009945:	inc    ebx
 1009946:	outs   dx,DWORD PTR ds:[esi]
 1009947:	outs   dx,BYTE PTR ds:[esi]
 1009948:	jae    0x10099b9
 100994a:	ins    BYTE PTR es:[edi],dx
 100994b:	gs dec edi
 100994d:	outs   dx,BYTE PTR ds:[esi]
 100994e:	inc    eax
 100994f:	inc    ebx
 1009950:	push   eax
 1009951:	popa   
 1009952:	jb     0x10099c7
 1009954:	gs jb  0x1009997
 1009957:	inc    eax
 1009958:	push   ecx
 1009959:	inc    ecx
 100995a:	inc    ebp
 100995b:	pop    eax
 100995c:	pop    eax
 100995d:	pop    edx
 100995e:	add    BYTE PTR [eax],al
 1009960:	and    al,BYTE PTR [eax]
 1009962:	aas    
 1009963:	push   ebx
 1009964:	gs je  0x10099b7
 1009967:	popa   
 1009968:	jae    0x10099dd
 100996a:	ja     0x10099db
 100996c:	jb     0x10099d2
 100996e:	inc    ebx
 100996f:	popa   
 1009970:	ins    BYTE PTR es:[edi],dx
 1009971:	ins    BYTE PTR es:[edi],dx
 1009972:	bound  esp,QWORD PTR [ecx+0x63]
 1009975:	imul   eax,DWORD PTR [eax+0x43],0x50
 1009979:	popa   
 100997a:	jb     0x10099ef
 100997c:	gs jb  0x10099bf
 100997f:	inc    eax
 1009980:	push   ecx
 1009981:	inc    ecx
 1009982:	inc    ebp
 1009983:	pop    eax
 1009984:	push   eax
 1009985:	ss inc ecx
 1009987:	pop    eax
 1009988:	dec    eax
 1009989:	push   eax
 100998a:	inc    ecx
 100998b:	push   esi
 100998c:	aas    
 100998d:	and    al,0x62
 100998f:	popa   
 1009990:	jae    0x10099fb
 1009992:	arpl   WORD PTR [edi+0x73],bx
 1009995:	je     0x1009a09
 1009997:	imul   ebp,DWORD PTR [esi+0x67],0x3f554740
 100999e:	and    al,0x63
 10099a0:	push   0x745f7261
 10099a5:	jb     0x1009a08
 10099a7:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734047
 10099af:	fs inc eax
 10099b1:	inc    eax
 10099b2:	push   esi
 10099b3:	aas    
 10099b4:	and    al,0x61
 10099b6:	ins    BYTE PTR es:[edi],dx
 10099b7:	ins    BYTE PTR es:[edi],dx
 10099b8:	outs   dx,DWORD PTR ds:[esi]
 10099b9:	arpl   WORD PTR [ecx+0x74],sp
 10099bc:	outs   dx,DWORD PTR ds:[esi]
 10099bd:	jb     0x10099ff
 10099bf:	inc    edi
 10099c0:	inc    eax
 10099c1:	xor    al,BYTE PTR [eax+0x40]
 10099c4:	jae    0x1009a3a
 10099c6:	fs inc eax
 10099c8:	inc    eax
 10099c9:	push   eax
 10099ca:	inc    ecx
 10099cb:	pop    eax
 10099cc:	inc    eax
 10099cd:	pop    edx
 10099ce:	xor    DWORD PTR [eax+0x5a],eax
 10099d1:	add    BYTE PTR ds:0x413f3f00,al
 10099d7:	inc    ebx
 10099d8:	push   eax
 10099d9:	popa   
 10099da:	jb     0x1009a4f
 10099dc:	gs jb  0x1009a1f
 10099df:	inc    eax
 10099e0:	push   ecx
 10099e1:	inc    ecx
 10099e2:	inc    ebp
 10099e3:	aas    
 10099e4:	inc    ecx
 10099e5:	push   ebp
 10099e6:	dec    edi
 10099e7:	push   eax
 10099e8:	push   esp
 10099e9:	inc    ecx
 10099ea:	push   edx
 10099eb:	inc    edi
 10099ec:	dec    ecx
 10099ed:	dec    esi
 10099ee:	inc    esi
 10099ef:	dec    edi
 10099f0:	inc    eax
 10099f1:	inc    eax
 10099f2:	push   eax
 10099f3:	inc    edx
 10099f4:	inc    edi
 10099f5:	inc    eax
 10099f6:	pop    edx
 10099f7:	add    BYTE PTR [esp+edx*2+0x45],al
 10099fb:	push   eax
 10099fc:	popa   
 10099fd:	jb     0x1009a72
 10099ff:	gs cs fs ins BYTE PTR es:[edi],dx
 1009a03:	ins    BYTE PTR es:[edi],dx
 1009a04:	add    BYTE PTR [eax],al
 1009a06:	add    DWORD PTR [eax],eax
 1009a08:	push   eax
 1009a09:	imul   esp,DWORD PTR [edi+0x43],0x72
 1009a0d:	gs popa 
 1009a0f:	je     0x1009a76
 1009a11:	inc    ecx
 1009a12:	outs   dx,BYTE PTR ds:[esi]
 1009a13:	fs inc ebp
 1009a15:	js     0x1009a7c
 1009a17:	arpl   WORD PTR [ebp+0x74],si
 1009a1a:	add    BYTE PTR gs:[esp+edx*2+0x45],al
 1009a1f:	push   eax
 1009a20:	imul   esp,DWORD PTR [edi+0x2e],0x64
 1009a24:	ins    BYTE PTR es:[edi],dx
 1009a25:	ins    BYTE PTR es:[edi],dx
 1009a26:	add    BYTE PTR [eax],al
 1009a28:	in     al,dx
 1009a29:	add    cl,BYTE PTR [ecx+0x6e]
 1009a2c:	je     0x1009a93
 1009a2e:	jb     0x1009a9c
 1009a30:	outs   dx,DWORD PTR ds:[esi]
 1009a31:	arpl   WORD PTR [ebx+0x65],bp
 1009a34:	fs inc ebp
 1009a36:	js     0x1009a9b
 1009a38:	push   0x65676e61
 1009a3d:	add    BYTE PTR [edx+0x656c5304],dh
 1009a43:	gs jo  0x1009a46
 1009a46:	jmp    0x756ee34d
 1009a4b:	gs jb  0x1009aba
 1009a4e:	outs   dx,DWORD PTR ds:[esi]
 1009a4f:	arpl   WORD PTR [ebx+0x65],bp
 1009a52:	fs inc ebx
 1009a54:	outs   dx,DWORD PTR ds:[esi]
 1009a55:	ins    DWORD PTR es:[edi],dx
 1009a56:	jo     0x1009ab9
 1009a58:	jb     0x1009abf
 1009a5a:	inc    ebp
 1009a5b:	js     0x1009ac0
 1009a5d:	push   0x65676e61
 1009a62:	add    BYTE PTR [eax],al
 1009a64:	jmp    0x646f:0x636e4500
 1009a6b:	gs push eax
 1009a6d:	outs   dx,DWORD PTR ds:[esi]
 1009a6e:	imul   ebp,DWORD PTR [esi+0x74],0xc0007265
 1009a75:	add    al,0x54
 1009a77:	gs jb  0x1009ae7
 1009a7a:	imul   ebp,DWORD PTR [esi+0x61],0x72506574
 1009a81:	outs   dx,DWORD PTR ds:[esi]
 1009a82:	arpl   WORD PTR [ebp+0x73],sp
 1009a85:	jae    0x1009a87
 1009a87:	add    al,al
 1009a89:	add    DWORD PTR [edi+0x65],eax
 1009a8c:	je     0x1009ad1
 1009a8e:	jne    0x1009b02
 1009a90:	jb     0x1009af7
 1009a92:	outs   dx,BYTE PTR ds:[esi]
 1009a93:	je     0x1009ae5
 1009a95:	jb     0x1009b06
 1009a97:	arpl   WORD PTR [ebp+0x73],sp
 1009a9a:	jae    0x1009a9c
 1009a9c:	rol    DWORD PTR [edx*2+0x6e61686e],cl
 1009aa3:	fs ins BYTE PTR es:[edi],dx
 1009aa5:	gs fs inc ebp
 1009aa8:	js     0x1009b0d
 1009aaa:	gs jo  0x1009b21
 1009aad:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
 1009ab4:	gs jb  0x1009ab7
 1009ab7:	add    BYTE PTR [eax],al
 1009ab9:	add    ecx,DWORD PTR [ecx+0x73]
 1009abc:	inc    esp
 1009abd:	bound  esi,QWORD PTR gs:[ebp+0x67]
 1009ac1:	addr16 gs jb 0x1009b15
 1009ac5:	jb     0x1009b2c
 1009ac7:	jae    0x1009b2e
 1009ac9:	outs   dx,BYTE PTR ds:[esi]
 1009aca:	je     0x1009acc
 1009acc:	retf   0x4400
 1009acf:	arpl   WORD PTR gs:[edi+0x64],bp
 1009ad3:	gs push eax
 1009ad5:	outs   dx,DWORD PTR ds:[esi]
 1009ad6:	imul   ebp,DWORD PTR [esi+0x74],0xa7007265
 1009add:	add    edx,DWORD PTR [ecx+0x75]
 1009ae0:	gs jb  0x1009b5c
 1009ae3:	push   eax
 1009ae4:	gs jb  0x1009b4d
 1009ae7:	outs   dx,DWORD PTR ds:[esi]
 1009ae8:	jb     0x1009b57
 1009aea:	popa   
 1009aeb:	outs   dx,BYTE PTR ds:[esi]
 1009aec:	arpl   WORD PTR [ebp+0x43],sp
 1009aef:	outs   dx,DWORD PTR ds:[esi]
 1009af0:	jne    0x1009b60
 1009af2:	je     0x1009b59
 1009af4:	jb     0x1009af6
 1009af6:	xchg   ebx,eax
 1009af7:	add    al,BYTE PTR [edi+0x65]
 1009afa:	je     0x1009b50
 1009afc:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
 1009b03:	je     0x1009b05
 1009b05:	add    cl,al
 1009b07:	add    DWORD PTR [edi+0x65],eax
 1009b0a:	je     0x1009b4f
 1009b0c:	jne    0x1009b80
 1009b0e:	jb     0x1009b75
 1009b10:	outs   dx,BYTE PTR ds:[esi]
 1009b11:	je     0x1009b63
 1009b13:	jb     0x1009b84
 1009b15:	arpl   WORD PTR [ebp+0x73],sp
 1009b18:	jae    0x1009b63
 1009b1a:	add    BYTE PTR fs:[ecx+0x2],bh
 1009b1e:	inc    edi
 1009b1f:	gs je  0x1009b75
 1009b22:	jns    0x1009b97
 1009b24:	je     0x1009b8b
 1009b26:	ins    DWORD PTR es:[edi],dx
 1009b27:	push   esp
 1009b28:	imul   ebp,DWORD PTR [ebp+0x65],0x69467341
 1009b2f:	ins    BYTE PTR es:[edi],dx
 1009b30:	gs push esp
 1009b32:	imul   ebp,DWORD PTR [ebp+0x65],0x4902e300
 1009b39:	outs   dx,BYTE PTR ds:[esi]
 1009b3a:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
 1009b42:	inc    ebx
 1009b43:	jb     0x1009bae
 1009b45:	je     0x1009bb0
 1009b47:	arpl   WORD PTR [ecx+0x6c],sp
 1009b4a:	push   ebx
 1009b4b:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 1009b50:	outs   dx,BYTE PTR ds:[esi]
 1009b51:	inc    ecx
 1009b52:	outs   dx,BYTE PTR ds:[esi]
 1009b53:	fs push ebx
 1009b55:	jo     0x1009bc0
 1009b57:	outs   dx,BYTE PTR ds:[esi]
 1009b58:	inc    ebx
 1009b59:	outs   dx,DWORD PTR ds:[esi]
 1009b5a:	jne    0x1009bca
 1009b5c:	je     0x1009b5e
 1009b5e:	push   esp
 1009b5f:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
 1009b63:	imul   edx,DWORD PTR [edx+0x65],0x73
 1009b67:	outs   dx,DWORD PTR ds:[esi]
 1009b68:	jne    0x1009bdc
 1009b6a:	arpl   WORD PTR [ebp+0x0],sp
 1009b6d:	add    BYTE PTR [eax+0x3],cl
 1009b70:	dec    esp
 1009b71:	outs   dx,DWORD PTR ds:[esi]
 1009b72:	arpl   WORD PTR [ecx+0x6c],sp
 1009b75:	inc    esi
 1009b76:	jb     0x1009bdd
 1009b78:	add    BYTE PTR gs:[ecx+0x3],al
 1009b7c:	dec    esp
 1009b7d:	outs   dx,DWORD PTR ds:[esi]
 1009b7e:	popa   
 1009b7f:	fs push edx
 1009b81:	gs jae 0x1009bf3
 1009b84:	jne    0x1009bf8
 1009b86:	arpl   WORD PTR [ebp+0x0],sp
 1009b89:	add    BYTE PTR [ecx+0x7a695304],dh
 1009b8f:	outs   dx,DWORD PTR gs:[esi]
 1009b91:	push   dx
 1009b93:	gs jae 0x1009c05
 1009b96:	jne    0x1009c0a
 1009b98:	arpl   WORD PTR [ebp+0x0],sp
 1009b9b:	add    BYTE PTR [esi+0x1],bl
 1009b9e:	inc    esi
 1009b9f:	outs   dx,DWORD PTR ds:[esi]
 1009ba0:	jb     0x1009c0f
 1009ba2:	popa   
 1009ba3:	je     0x1009bf2
 1009ba5:	gs jae 0x1009c1b
 1009ba8:	popa   
 1009ba9:	addr16 gs push edi
 1009bac:	add    BYTE PTR [eax],al
 1009bae:	adc    eax,0x74654702
 1009bb3:	dec    ebp
 1009bb4:	outs   dx,DWORD PTR ds:[esi]
 1009bb5:	fs jne 0x1009c24
 1009bb8:	gs dec eax
 1009bba:	popa   
 1009bbb:	outs   dx,BYTE PTR ds:[esi]
 1009bbc:	fs ins BYTE PTR es:[edi],dx
 1009bbe:	gs inc ecx
 1009bc0:	add    BYTE PTR [eax],al
 1009bc2:	dec    esi
 1009bc3:	add    DWORD PTR [esi+0x69],eax
 1009bc6:	outs   dx,BYTE PTR ds:[esi]
 1009bc7:	fs push edx
 1009bc9:	gs jae 0x1009c3b
 1009bcc:	jne    0x1009c40
 1009bce:	arpl   WORD PTR [ebp+0x57],sp
 1009bd1:	add    BYTE PTR [ecx],dl
 1009bd3:	add    eax,0x65646957
 1009bd8:	inc    ebx
 1009bd9:	push   0x6f547261
 1009bde:	dec    ebp
 1009bdf:	jne    0x1009c4d
 1009be1:	je     0x1009c4c
 1009be3:	inc    edx
 1009be4:	jns    0x1009c5a
 1009be6:	add    BYTE PTR gs:[esi+0x74654702],bl
 1009bed:	push   ebp
 1009bee:	jae    0x1009c55
 1009bf0:	jb     0x1009c36
 1009bf2:	gs popaw 
 1009bf5:	jne    0x1009c63
 1009bf7:	je     0x1009c4e
 1009bf9:	dec    ecx
 1009bfa:	dec    esp
 1009bfb:	popa   
 1009bfc:	outs   dx,BYTE PTR ds:[esi]
 1009bfd:	addr16 jne 0x1009c61
 1009c00:	add    BYTE PTR gs:[bx+si],al
 1009c04:	mov    edi,0x6f6c4702
 1009c09:	bound  esp,QWORD PTR [ecx+0x6c]
 1009c0c:	dec    ebp
 1009c0d:	gs ins DWORD PTR es:[edi],dx
 1009c0f:	outs   dx,DWORD PTR ds:[esi]
 1009c10:	jb     0x1009c8b
 1009c12:	push   ebx
 1009c13:	je     0x1009c76
 1009c15:	je     0x1009c8c
 1009c17:	jae    0x1009c19
 1009c19:	add    BYTE PTR ds:0x69725705,ah
 1009c1f:	je     0x1009c86
 1009c21:	inc    esi
 1009c22:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x65470225
 1009c2a:	je     0x1009c7a
 1009c2c:	popa   
 1009c2d:	je     0x1009c98
 1009c2f:	jbe    0x1009c96
 1009c31:	push   ebx
 1009c32:	jns    0x1009ca7
 1009c34:	je     0x1009c9b
 1009c36:	ins    DWORD PTR es:[edi],dx
 1009c37:	dec    ecx
 1009c38:	outs   dx,BYTE PTR ds:[esi]
 1009c39:	outs   dx,WORD PTR ds:[esi]
 1009c3b:	add    BYTE PTR [edx+eax*1],dl
 1009c3e:	inc    edi
 1009c3f:	gs je  0x1009c8f
 1009c42:	outs   dx,DWORD PTR ds:[esi]
 1009c43:	fs jne 0x1009cb2
 1009c46:	gs inc esi
 1009c48:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
 1009c50:	add    BYTE PTR [eax],al
 1009c52:	add    DWORD PTR [edx],0x47
 1009c55:	gs je  0x1009cac
 1009c58:	gs ins DWORD PTR es:[edi],dx
 1009c5a:	jo     0x1009ca2
 1009c5c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
 1009c64:	add    BYTE PTR [eax],al
 1009c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1009c67:	add    al,BYTE PTR [edi+0x65]
 1009c6a:	je     0x1009cc2
 1009c6c:	gs jb  0x1009ce2
 1009c6f:	imul   ebp,DWORD PTR [edi+0x6e],0x577845
 1009c76:	push   cs
 1009c77:	add    ecx,DWORD PTR [ecx+0x73]
 1009c7a:	push   edi
 1009c7b:	outs   dx,DWORD PTR ds:[esi]
 1009c7c:	ja     0x1009cb4
 1009c7e:	xor    al,0x50
 1009c80:	jb     0x1009cf1
 1009c82:	arpl   WORD PTR [ebp+0x73],sp
 1009c85:	jae    0x1009c87
 1009c87:	add    al,cl
 1009c89:	add    DWORD PTR [edi+0x65],eax
 1009c8c:	je     0x1009cd2
 1009c8e:	popa   
 1009c8f:	je     0x1009cf6
 1009c91:	inc    esi
 1009c92:	outs   dx,DWORD PTR ds:[esi]
 1009c93:	jb     0x1009d02
 1009c95:	popa   
 1009c96:	je     0x1009cef
 1009c98:	add    BYTE PTR [eax],al
 1009c9a:	mov    esp,0x69775304
 1009c9f:	je     0x1009d04
 1009ca1:	push   0x68546f54
 1009ca6:	jb     0x1009d0d
 1009ca8:	popa   
 1009ca9:	add    BYTE PTR fs:[eax],al
 1009cac:	cli    
 1009cad:	add    edx,DWORD PTR [edx+0x65]
 1009cb0:	ins    BYTE PTR es:[edi],dx
 1009cb1:	gs popa 
 1009cb3:	jae    0x1009d1a
 1009cb5:	dec    ebp
 1009cb6:	jne    0x1009d2c
 1009cb8:	gs js  0x1009cbb
 1009cbb:	add    cl,bh
 1009cbd:	add    al,0x57
 1009cbf:	popa   
 1009cc0:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
 1009cc8:	ins    BYTE PTR es:[di],dx
 1009cca:	gs dec edi
 1009ccc:	bound  ebp,QWORD PTR [edx+0x65]
 1009ccf:	arpl   WORD PTR [eax+eax*1+0x70],si
 1009cd3:	add    al,0x53
 1009cd5:	gs je  0x1009d20
 1009cd8:	popa   
 1009cd9:	outs   dx,BYTE PTR ds:[esi]
 1009cda:	fs ins BYTE PTR es:[edi],dx
 1009cdc:	gs dec ecx
 1009cde:	outs   dx,BYTE PTR ds:[esi]
 1009cdf:	outs   dx,WORD PTR ds:[esi]
 1009ce1:	jb     0x1009d50
 1009ce3:	popa   
 1009ce4:	je     0x1009d4f
 1009ce6:	outs   dx,DWORD PTR ds:[esi]
 1009ce7:	outs   dx,BYTE PTR ds:[esi]
 1009ce8:	add    BYTE PTR [eax],al
 1009cea:	sahf   
 1009ceb:	add    BYTE PTR [ebx+0x72],al
 1009cee:	gs popa 
 1009cf0:	je     0x1009d57
 1009cf2:	dec    ebp
 1009cf3:	jne    0x1009d69
 1009cf5:	gs js  0x1009d4f
 1009cf8:	add    BYTE PTR [eax],al
 1009cfa:	into   
 1009cfb:	add    cl,BYTE PTR [eax+0x65]
 1009cfe:	popa   
 1009cff:	jo     0x1009d45
 1009d01:	gs jae 0x1009d78
 1009d04:	jb     0x1009d75
 1009d06:	jns    0x1009d08
 1009d08:	retf   
 1009d09:	add    cl,BYTE PTR [eax+0x65]
 1009d0c:	popa   
 1009d0d:	jo     0x1009d50
 1009d0f:	ins    BYTE PTR es:[edi],dx
 1009d10:	ins    BYTE PTR es:[edi],dx
 1009d11:	outs   dx,DWORD PTR ds:[esi]
 1009d12:	arpl   WORD PTR [eax],ax
 1009d14:	iret   
 1009d15:	add    cl,BYTE PTR [eax+0x65]
 1009d18:	popa   
 1009d19:	jo     0x1009d61
 1009d1b:	jb     0x1009d82
 1009d1d:	add    BYTE PTR gs:[eax],al
 1009d20:	jae    0x1009d24
 1009d22:	inc    edi
 1009d23:	gs je  0x1009d79
 1009d26:	jns    0x1009d9b
 1009d28:	je     0x1009d8f
 1009d2a:	ins    DWORD PTR es:[edi],dx
 1009d2b:	dec    ecx
 1009d2c:	outs   dx,BYTE PTR ds:[esi]
 1009d2d:	outs   dx,WORD PTR ds:[esi]
 1009d2f:	add    BYTE PTR [edx+0x1],ah
 1009d32:	inc    esi
 1009d33:	jb     0x1009d9a
 1009d35:	gs dec esp
 1009d37:	imul   esp,DWORD PTR [edx+0x72],0x797261
 1009d3e:	aas    
 1009d3f:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
 1009d43:	fs dec esp
 1009d45:	imul   esp,DWORD PTR [edx+0x72],0x57797261
 1009d4c:	add    BYTE PTR [eax],al
 1009d4e:	icebp  
 1009d4f:	add    al,0x56
 1009d51:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
 1009d58:	jne    0x1009dbf
 1009d5a:	jb     0x1009dd5
 1009d5c:	add    BYTE PTR [eax],al
 1009d5e:	int    0x2
 1009d60:	dec    eax
 1009d61:	gs popa 
 1009d63:	jo     0x1009da8
 1009d65:	jb     0x1009dcc
 1009d67:	popa   
 1009d68:	je     0x1009dcf
 1009d6a:	add    BYTE PTR [eax],al
 1009d6c:	ret    
 1009d6d:	add    edx,DWORD PTR [edx+0x65]
 1009d70:	popa   
 1009d71:	fs push eax
 1009d73:	jb     0x1009de4
 1009d75:	arpl   WORD PTR [ebp+0x73],sp
 1009d78:	jae    0x1009dc7
 1009d7a:	gs ins DWORD PTR es:[edi],dx
 1009d7c:	outs   dx,DWORD PTR ds:[esi]
 1009d7d:	jb     0x1009df8
 1009d7f:	add    bl,ch
 1009d81:	add    cl,BYTE PTR [ecx+0x6e]
 1009d84:	je     0x1009deb
 1009d86:	jb     0x1009df4
 1009d88:	outs   dx,DWORD PTR ds:[esi]
 1009d89:	arpl   WORD PTR [ebx+0x65],bp
 1009d8c:	fs inc esp
 1009d8e:	arpl   WORD PTR gs:[edx+0x65],si
 1009d92:	ins    DWORD PTR es:[edi],dx
 1009d93:	outs   dx,BYTE PTR gs:[esi]
 1009d95:	je     0x1009d97
 1009d97:	add    bh,bl
 1009d99:	add    DWORD PTR [edi+0x65],eax
 1009d9c:	je     0x1009de3
 1009d9e:	js     0x1009e09
 1009da0:	je     0x1009de5
 1009da2:	outs   dx,DWORD PTR ds:[esi]
 1009da3:	fs gs push eax
 1009da6:	jb     0x1009e17
 1009da8:	arpl   WORD PTR [ebp+0x73],sp
 1009dab:	jae    0x1009dad
 1009dad:	add    BYTE PTR [eax+0x65724300],ch
 1009db3:	popa   
 1009db4:	je     0x1009e1b
 1009db6:	push   eax
 1009db7:	jb     0x1009e28
 1009db9:	arpl   WORD PTR [ebp+0x73],sp
 1009dbc:	jae    0x1009e15
 1009dbe:	add    BYTE PTR [eax],al
 1009dc0:	arpl   WORD PTR [edx],ax
 1009dc2:	inc    edi
 1009dc3:	gs je  0x1009e19
 1009dc6:	je     0x1009e29
 1009dc8:	jb     0x1009e3e
 1009dca:	jne    0x1009e3c
 1009dcc:	dec    ecx
 1009dcd:	outs   dx,BYTE PTR ds:[esi]
 1009dce:	outs   dx,WORD PTR ds:[esi]
 1009dd0:	push   edi
 1009dd1:	add    BYTE PTR [ecx+0x74655304],bl
 1009dd7:	push   esp
 1009dd8:	push   0x64616572
 1009ddd:	push   eax
 1009dde:	jb     0x1009e49
 1009de0:	outs   dx,DWORD PTR ds:[esi]
 1009de1:	jb     0x1009e4c
 1009de3:	je     0x1009e5e
 1009de5:	add    BYTE PTR [esi+0x74654702],cl
 1009deb:	push   esp
 1009dec:	push   0x64616572
 1009df1:	push   eax
 1009df2:	jb     0x1009e5d
 1009df4:	outs   dx,DWORD PTR ds:[esi]
 1009df5:	jb     0x1009e60
 1009df7:	je     0x1009e72
 1009df9:	add    ah,al
 1009dfb:	add    DWORD PTR [edi+0x65],eax
 1009dfe:	je     0x1009e43
 1009e00:	jne    0x1009e74
 1009e02:	jb     0x1009e69
 1009e04:	outs   dx,BYTE PTR ds:[esi]
 1009e05:	je     0x1009e5b
 1009e07:	push   0x64616572
 1009e0c:	add    BYTE PTR [eax],al
 1009e0e:	mov    bh,0x4
 1009e10:	pop    edi
 1009e11:	jbe    0x1009e86
 1009e13:	outs   dx,BYTE PTR ds:[esi]
 1009e14:	ja     0x1009e86
 1009e16:	jb     0x1009e81
 1009e18:	outs   dx,BYTE PTR ds:[esi]
 1009e19:	je     0x1009e81
 1009e1b:	add    al,dl
 1009e1d:	add    eax,0x636d656d
 1009e22:	jo     0x1009e9d
 1009e24:	pop    edi
 1009e25:	jae    0x1009e27
 1009e27:	add    BYTE PTR [edi+0x6],cl
 1009e2a:	ja     0x1009e99
 1009e2c:	gs ins DWORD PTR es:[edi],dx
 1009e2e:	arpl   WORD PTR [eax+0x79],si
 1009e31:	pop    edi
 1009e32:	jae    0x1009e34
 1009e34:	xchg   BYTE PTR ds:0x74757066,al
 1009e3a:	jae    0x1009e3c
 1009e3c:	out    0x3,al
 1009e3e:	pop    edi
 1009e3f:	jb     0x1009ea6
 1009e41:	jae    0x1009ea8
 1009e43:	je     0x1009eb8
 1009e45:	je     0x1009eb2
 1009e47:	outs   dx,DWORD PTR ds:[esi]
 1009e48:	data16 ins BYTE PTR es:[edi],dx
 1009e4a:	ja     0x1009e4c
 1009e4c:	mov    eax,0x73765f04
 1009e51:	outs   dx,BYTE PTR ds:[esi]
 1009e52:	ja     0x1009ec4
 1009e54:	jb     0x1009ebf
 1009e56:	outs   dx,BYTE PTR ds:[esi]
 1009e57:	je     0x1009ebf
 1009e59:	pop    edi
 1009e5a:	ins    BYTE PTR es:[edi],dx
 1009e5b:	add    BYTE PTR [edi],bl
 1009e5d:	add    eax,0x616d775f
 1009e62:	imul   esp,DWORD PTR [ebp+0x70],0x61
 1009e66:	je     0x1009ed0
 1009e68:	pop    edi
 1009e69:	jae    0x1009e6b
 1009e6b:	add    BYTE PTR [ecx+0x5],al
 1009e6e:	pop    edi
 1009e6f:	ja     0x1009ee4
 1009e71:	jo     0x1009edf
 1009e73:	imul   esi,DWORD PTR [eax+esi*2+0x61],0x735f6874
 1009e7b:	add    BYTE PTR [eax+0x0],ah
 1009e7e:	aas    
 1009e7f:	aas    
 1009e80:	xor    BYTE PTR [edi+0x4c],bl
 1009e83:	outs   dx,DWORD PTR ds:[esi]
 1009e84:	arpl   WORD PTR [ebx+0x69],bp
 1009e87:	je     0x1009ec9
 1009e89:	jae    0x1009eff
 1009e8b:	fs inc eax
 1009e8d:	inc    eax
 1009e8e:	push   ecx
 1009e8f:	inc    ecx
 1009e90:	inc    ebp
 1009e91:	inc    eax
 1009e92:	dec    eax
 1009e93:	inc    eax
 1009e94:	pop    edx
 1009e95:	add    BYTE PTR [esi+0x313f3f00],bl
 1009e9b:	pop    edi
 1009e9c:	dec    esp
 1009e9d:	outs   dx,DWORD PTR ds:[esi]
 1009e9e:	arpl   WORD PTR [ebx+0x69],bp
 1009ea1:	je     0x1009ee3
 1009ea3:	jae    0x1009f19
 1009ea5:	fs inc eax
 1009ea7:	inc    eax
 1009ea8:	push   ecx
 1009ea9:	inc    ecx
 1009eaa:	inc    ebp
 1009eab:	inc    eax
 1009eac:	pop    eax
 1009ead:	pop    edx
 1009eae:	add    BYTE PTR [eax],al
 1009eb0:	sahf   
 1009eb1:	add    DWORD PTR [edi],edi
 1009eb3:	pop    edi
 1009eb4:	inc    esp
 1009eb5:	arpl   WORD PTR gs:[edx+0x65],si
 1009eb9:	inc    ax
 1009ebb:	popaw  
 1009ebd:	arpl   WORD PTR [ebp+0x74],sp
 1009ec0:	inc    eax
 1009ec1:	ins    BYTE PTR es:[edi],dx
 1009ec2:	outs   dx,DWORD PTR ds:[esi]
 1009ec3:	arpl   WORD PTR [ecx+0x6c],sp
 1009ec6:	gs inc eax
 1009ec8:	jae    0x1009f3e
 1009eca:	fs inc eax
 1009ecc:	inc    eax
 1009ecd:	push   ecx
 1009ece:	inc    ecx
 1009ecf:	inc    ebp
 1009ed0:	push   eax
 1009ed1:	inc    ecx
 1009ed2:	push   esi
 1009ed3:	xor    DWORD PTR [edx],esi
 1009ed5:	xor    eax,DWORD PTR [eax+0x58]
 1009ed8:	pop    edx
 1009ed9:	add    BYTE PTR [ebp+0x53],cl
 1009edc:	push   esi
 1009edd:	inc    ebx
 1009ede:	push   eax
 1009edf:	xor    DWORD PTR [eax],esi
 1009ee1:	xor    BYTE PTR [esi],ch
 1009ee3:	fs ins BYTE PTR es:[edi],dx
 1009ee5:	ins    BYTE PTR es:[edi],dx
 1009ee6:	add    BYTE PTR [eax],al
 1009ee8:	add    al,0x0
 1009eea:	inc    ebp
 1009eeb:	outs   dx,BYTE PTR ds:[esi]
 1009eec:	jne    0x1009f5b
 1009eee:	push   eax
 1009eef:	jb     0x1009f60
 1009ef1:	arpl   WORD PTR [ebp+0x73],sp
 1009ef4:	jae    0x1009f43
 1009ef6:	outs   dx,DWORD PTR ds:[esi]
 1009ef7:	fs jne 0x1009f66
 1009efa:	gs jae 0x1009efd
 1009efd:	add    BYTE PTR [eax],dl
 1009eff:	add    BYTE PTR [edi+0x65],al
 1009f02:	je     0x1009f51
 1009f04:	outs   dx,DWORD PTR ds:[esi]
 1009f05:	fs jne 0x1009f74
 1009f08:	gs inc esi
 1009f0a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x45656d61
 1009f12:	js     0x1009f6b
 1009f14:	add    BYTE PTR [eax],al
 1009f16:	push   eax
 1009f17:	push   ebx
 1009f18:	inc    ecx
 1009f19:	push   eax
 1009f1a:	dec    ecx
 1009f1b:	cs inc esp
 1009f1d:	dec    esp
 1009f1e:	dec    esp
 1009f1f:	add    BYTE PTR [esi],al
 1009f21:	add    BYTE PTR [edi+0x65],al
 1009f24:	je     0x1009f6c
 1009f26:	imul   ebp,DWORD PTR [ebp+eiz*2+0x56],0x69737265
 1009f2e:	outs   dx,DWORD PTR ds:[esi]
 1009f2f:	outs   dx,BYTE PTR ds:[esi]
 1009f30:	dec    ecx
 1009f31:	outs   dx,BYTE PTR ds:[esi]
 1009f32:	outs   dx,WORD PTR ds:[esi]
 1009f34:	push   edi
 1009f35:	add    BYTE PTR [esi],cl
 1009f37:	add    BYTE PTR [esi+0x65],dl
 1009f3a:	jb     0x1009f8d
 1009f3c:	jne    0x1009fa3
 1009f3e:	jb     0x1009fb9
 1009f40:	push   esi
 1009f41:	popa   
 1009f42:	ins    BYTE PTR es:[edi],dx
 1009f43:	jne    0x1009faa
 1009f45:	push   edi
 1009f46:	add    BYTE PTR [eax],al
 1009f48:	push   esi
 1009f49:	inc    ebp
 1009f4a:	push   edx
 1009f4b:	push   ebx
 1009f4c:	dec    ecx
 1009f4d:	dec    edi
 1009f4e:	dec    esi
 1009f4f:	cs fs ins BYTE PTR es:[edi],dx
 1009f52:	ins    BYTE PTR es:[edi],dx
 1009f53:	add    dl,dl
 1009f55:	add    cl,BYTE PTR [eax+0x65]
 1009f58:	popa   
 1009f59:	jo     0x1009fad
 1009f5b:	gs inc ecx
 1009f5d:	ins    BYTE PTR es:[edi],dx
 1009f5e:	ins    BYTE PTR es:[edi],dx
 1009f5f:	outs   dx,DWORD PTR ds:[esi]
 1009f60:	arpl   WORD PTR [eax],ax
 1009f62:	aam    0x2
 1009f64:	dec    eax
 1009f65:	gs popa 
 1009f67:	jo     0x1009fbc
 1009f69:	imul   edi,DWORD PTR [edx+0x65],0x24a0000
 1009f70:	inc    edi
 1009f71:	gs je  0x1009fc4
 1009f74:	jb     0x1009fe5
 1009f76:	arpl   WORD PTR [ebp+0x73],sp
 1009f79:	jae    0x1009fc3
 1009f7b:	gs popa 
 1009f7d:	jo     0x1009f7f
 1009f7f:	add    BYTE PTR [ebx+0x4],dh
 1009f82:	push   ebx
 1009f83:	gs je  0x1009fd2
 1009f86:	popa   
 1009f87:	jae    0x1009ffd
 1009f89:	inc    ebp
 1009f8a:	jb     0x1009ffe
 1009f8c:	outs   dx,DWORD PTR ds:[esi]
 1009f8d:	jb     0x1009f8f
 1009f8f:	add    BYTE PTR [esi],ch
 1009f91:	add    DWORD PTR [esi+0x69],eax
 1009f94:	outs   dx,BYTE PTR ds:[esi]
 1009f95:	fs inc ebx
 1009f97:	ins    BYTE PTR es:[edi],dx
 1009f98:	outs   dx,DWORD PTR ds:[esi]
 1009f99:	jae    0x100a000
 1009f9b:	add    bl,bh
 1009f9d:	add    DWORD PTR [edi+0x65],eax
 1009fa0:	je     0x1009fe8
 1009fa2:	jne    0x100a010
 1009fa4:	ins    BYTE PTR es:[edi],dx
 1009fa5:	push   eax
 1009fa6:	popa   
 1009fa7:	je     0x100a011
 1009fa9:	dec    esi
 1009faa:	popa   
 1009fab:	ins    DWORD PTR es:[edi],dx
 1009fac:	gs push edi
 1009fae:	add    BYTE PTR [eax],al
 1009fb0:	cmp    DWORD PTR [ecx],eax
 1009fb2:	inc    esi
 1009fb3:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
 1009fba:	je     0x100a002
 1009fbc:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x4ec0000
 1009fc4:	push   esi
 1009fc5:	imul   esi,DWORD PTR [edx+0x74],0x466c6175
 1009fcc:	jb     0x100a033
 1009fce:	add    BYTE PTR gs:[eax],al
 1009fd1:	add    BYTE PTR [eax],al
 1009fd3:	add    BYTE PTR [edx+0x4f35e2],dh
 1009fd9:	add    BYTE PTR [eax],al
 1009fdb:	add    BYTE PTR [eax],ah
 1009fdd:	mov    al,ds:0x10000
 1009fe2:	add    BYTE PTR [eax],al
 1009fe4:	add    al,0x0
 1009fe6:	add    BYTE PTR [eax],al
 1009fe8:	add    al,0x0
 1009fea:	add    BYTE PTR [eax],al
 1009fec:	clc    
 1009fed:	lahf   
 1009fee:	add    BYTE PTR [eax],al
 1009ff0:	or     BYTE PTR [eax-0x5fe80000],ah
 1009ff6:	add    BYTE PTR [eax],al
 1009ff8:	add    BYTE PTR [ebx-0x74f00000],cl
 1009ffe:	add    BYTE PTR [eax],al
 100a000:	div    BYTE PTR [eax]
 100a002:	add    BYTE PTR [eax],al
 100a004:	or     al,0x31
 100a006:	add    BYTE PTR [eax],al
 100a008:	sub    esp,DWORD PTR [eax-0x5fc20000]
 100a00e:	add    BYTE PTR [eax],al
 100a010:	push   ebx
 100a011:	mov    al,ds:0xa0610000
 100a016:	add    BYTE PTR [eax],al
 100a018:	add    BYTE PTR [eax],al
 100a01a:	add    DWORD PTR [eax],eax
 100a01c:	add    al,BYTE PTR [eax]
 100a01e:	add    eax,DWORD PTR [eax]
 100a020:	inc    esp
 100a021:	push   esp
 100a022:	inc    ebp
 100a023:	js     0x100a08a
 100a025:	arpl   WORD PTR [esi],bp
 100a027:	gs js  0x100a08f
 100a02a:	add    BYTE PTR [ebp+ebp*2+0x70],al
 100a02e:	inc    edi
 100a02f:	gs je  0x100a075
 100a032:	ins    BYTE PTR es:[edi],dx
 100a033:	imul   esp,DWORD PTR [ebp+0x6e],0x70784574
 100a03a:	outs   dx,DWORD PTR ds:[esi]
 100a03b:	jb     0x100a0b1
 100a03d:	add    BYTE PTR [ebp+ebp*2+0x70],al
 100a041:	push   edx
 100a042:	gs ins DWORD PTR es:[edi],dx
 100a044:	outs   dx,DWORD PTR ds:[esi]
 100a045:	je     0x100a0ac
 100a047:	inc    esp
 100a048:	jne    0x100a0b7
 100a04a:	jo     0x100a09e
 100a04c:	gs jno 0x100a0c4
 100a04f:	gs jae 0x100a0c6
 100a052:	add    BYTE PTR [ebx+0x53],dl
 100a055:	dec    ecx
 100a056:	push   ebx
 100a057:	inc    edx
 100a058:	imul   ebp,DWORD PTR gs:[bp+0x44],0x706d75
 100a061:	push   ebx
 100a062:	push   ebx
 100a063:	dec    ecx
 100a064:	push   ebx
 100a065:	inc    edi
 100a066:	gs je  0x100a0ae
 100a069:	js     0x100a0df
 100a06b:	jb     0x100a0ce
 100a06d:	inc    esp
 100a06e:	jne    0x100a0dd
 100a070:	jo     0x100a0b8
 100a072:	imul   ebp,DWORD PTR [ebp+eiz*2+0x48],0x6c646e61
 100a07a:	gs
	...
