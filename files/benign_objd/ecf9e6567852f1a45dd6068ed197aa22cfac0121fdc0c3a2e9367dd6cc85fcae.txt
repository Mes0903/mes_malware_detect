
ecf9e6567852f1a45dd6068ed197aa22cfac0121fdc0c3a2e9367dd6cc85fcae.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001010:	mov    rax,rsp
   140001013:	mov    QWORD PTR [rax+0x8],rbx
   140001017:	mov    QWORD PTR [rax+0x10],rbp
   14000101b:	mov    QWORD PTR [rax+0x18],rsi
   14000101f:	mov    QWORD PTR [rax+0x20],rdi
   140001023:	push   r12
   140001025:	push   r14
   140001027:	push   r15
   140001029:	sub    rsp,0x40
   14000102d:	mov    rbx,QWORD PTR [rsp+0x90]
   140001035:	mov    r15,r9
   140001038:	mov    sil,r8b
   14000103b:	mov    r14d,edx
   14000103e:	mov    r12,rcx
   140001041:	test   rbx,rbx
   140001044:	je     0x1400010b4
   140001046:	mov    rbp,QWORD PTR [rsp+0x80]
   14000104e:	mov    eax,edx
   140001050:	test   edx,edx
   140001052:	je     0x140001076
   140001054:	cmp    eax,0x1
   140001057:	jne    0x140001079
   140001059:	movzx  ecx,r8b
   14000105d:	mov    eax,0x100
   140001062:	inc    ecx
   140001064:	mov    QWORD PTR [rbx+0x10],r9
   140001068:	test   r8b,r8b
   14000106b:	mov    QWORD PTR [rbx+0x18],rbp
   14000106f:	cmovne eax,ecx
   140001072:	mov    DWORD PTR [rbx],eax
   140001074:	jmp    0x140001079
   140001076:	and    DWORD PTR [rbx],0x0
   140001079:	mov    rdi,QWORD PTR [rbx+0x28]
   14000107d:	test   rdi,rdi
   140001080:	je     0x1400010b4
   140001082:	mov    rcx,rdi
   140001085:	call   QWORD PTR [rip+0x72ad]        # 0x140008338
   14000108b:	mov    rax,QWORD PTR [rbx+0x30]
   14000108f:	mov    r9,r15
   140001092:	mov    QWORD PTR [rsp+0x30],rax
   140001097:	mov    r8b,sil
   14000109a:	mov    rax,QWORD PTR [rsp+0x88]
   1400010a2:	mov    edx,r14d
   1400010a5:	mov    QWORD PTR [rsp+0x28],rax
   1400010aa:	mov    rcx,r12
   1400010ad:	mov    QWORD PTR [rsp+0x20],rbp
   1400010b2:	call   rdi
   1400010b4:	mov    rbx,QWORD PTR [rsp+0x60]
   1400010b9:	mov    rbp,QWORD PTR [rsp+0x68]
   1400010be:	mov    rsi,QWORD PTR [rsp+0x70]
   1400010c3:	mov    rdi,QWORD PTR [rsp+0x78]
   1400010c8:	add    rsp,0x40
   1400010cc:	pop    r15
   1400010ce:	pop    r14
   1400010d0:	pop    r12
   1400010d2:	ret    
   1400010d3:	int3   
   1400010d4:	int3   
   1400010d5:	int3   
   1400010d6:	int3   
   1400010d7:	int3   
   1400010d8:	int3   
   1400010d9:	int3   
   1400010da:	int3   
   1400010db:	int3   
   1400010dc:	sub    rsp,0x48
   1400010e0:	mov    r8d,edx
   1400010e3:	lea    rax,[rip+0x7dc6]        # 0x140008eb0
   1400010ea:	sub    r8d,eax
   1400010ed:	mov    r10,rcx
   1400010f0:	mov    al,BYTE PTR [rip+0x8351]        # 0x140009447
   1400010f6:	xor    r9d,r9d
   1400010f9:	movzx  eax,BYTE PTR [rdx]
   1400010fc:	shl    eax,0x18
   1400010ff:	or     eax,r8d
   140001102:	lea    r8,[rdx+0x1]
   140001106:	mov    rdx,QWORD PTR [rsp+0x78]
   14000110b:	mov    DWORD PTR [rsp+0x30],eax
   14000110f:	movzx  eax,WORD PTR [r8]
   140001113:	mov    DWORD PTR [rsp+0x34],eax
   140001117:	mov    eax,DWORD PTR [r8+0x2]
   14000111b:	mov    DWORD PTR [rsp+0x38],eax
   14000111f:	mov    eax,DWORD PTR [r8+0x6]
   140001123:	add    r8,0xa
   140001127:	mov    DWORD PTR [rsp+0x3c],eax
   14000112b:	mov    rax,QWORD PTR [rcx+0x8]
   14000112f:	mov    QWORD PTR [rdx],rax
   140001132:	mov    rax,QWORD PTR [rcx+0x8]
   140001136:	mov    QWORD PTR [rsp+0x28],rdx
   14000113b:	movzx  ecx,WORD PTR [rax]
   14000113e:	mov    QWORD PTR [rdx+0x10],r8
   140001142:	mov    DWORD PTR [rdx+0x8],ecx
   140001145:	mov    DWORD PTR [rdx+0xc],0x2
   14000114c:	movzx  eax,WORD PTR [r8]
   140001150:	xor    r8d,r8d
   140001153:	mov    DWORD PTR [rdx+0x18],eax
   140001156:	mov    eax,DWORD PTR [rsp+0x70]
   14000115a:	mov    DWORD PTR [rdx+0x1c],0x1
   140001161:	lea    rdx,[rsp+0x30]
   140001166:	mov    rcx,QWORD PTR [r10+0x20]
   14000116a:	mov    DWORD PTR [rsp+0x20],eax
   14000116e:	call   QWORD PTR [rip+0x70c4]        # 0x140008238
   140001174:	add    rsp,0x48
   140001178:	ret    
   140001179:	int3   
   14000117a:	int3   
   14000117b:	int3   
   14000117c:	int3   
   14000117d:	int3   
   14000117e:	int3   
   14000117f:	int3   
   140001180:	rex push rbx
   140001182:	sub    rsp,0x20
   140001186:	mov    eax,DWORD PTR [rip+0xa514]        # 0x14000b6a0
   14000118c:	lea    rbx,[rip+0xa515]        # 0x14000b6a8
   140001193:	test   al,0x1
   140001195:	jne    0x1400011c1
   140001197:	or     eax,0x1
   14000119a:	mov    QWORD PTR [rip+0xa517],rbx        # 0x14000b6b8
   1400011a1:	mov    DWORD PTR [rip+0xa4f9],eax        # 0x14000b6a0
   1400011a7:	lea    rcx,[rip+0x5dc2]        # 0x140006f70
   1400011ae:	lea    rax,[rip+0x75b3]        # 0x140008768
   1400011b5:	mov    QWORD PTR [rip+0xa4ec],rax        # 0x14000b6a8
   1400011bc:	call   0x140006774
   1400011c1:	test   rbx,rbx
   1400011c4:	setne  BYTE PTR [rip+0xa5b5]        # 0x14000b780
   1400011cb:	add    rsp,0x20
   1400011cf:	pop    rbx
   1400011d0:	ret    
   1400011d1:	int3   
   1400011d2:	int3   
   1400011d3:	int3   
   1400011d4:	int3   
   1400011d5:	int3   
   1400011d6:	int3   
   1400011d7:	int3   
   1400011d8:	int3   
   1400011d9:	int3   
   1400011da:	int3   
   1400011db:	int3   
   1400011dc:	int3   
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	rex push rbx
   1400011e2:	sub    rsp,0x20
   1400011e6:	mov    eax,DWORD PTR [rip+0xa57c]        # 0x14000b768
   1400011ec:	lea    rbx,[rip+0xa57d]        # 0x14000b770
   1400011f3:	test   al,0x1
   1400011f5:	jne    0x140001229
   1400011f7:	and    QWORD PTR [rip+0xa579],0x0        # 0x14000b778
   1400011ff:	lea    rcx,[rip+0x5d4a]        # 0x140006f50
   140001206:	or     eax,0x1
   140001209:	mov    QWORD PTR [rip+0xa4a8],rbx        # 0x14000b6b8
   140001210:	mov    DWORD PTR [rip+0xa552],eax        # 0x14000b768
   140001216:	lea    rax,[rip+0x75db]        # 0x1400087f8
   14000121d:	mov    QWORD PTR [rip+0xa54c],rax        # 0x14000b770
   140001224:	call   0x140006774
   140001229:	test   rbx,rbx
   14000122c:	setne  BYTE PTR [rip+0xa531]        # 0x14000b764
   140001233:	add    rsp,0x20
   140001237:	pop    rbx
   140001238:	ret    
   140001239:	int3   
   14000123a:	int3   
   14000123b:	int3   
   14000123c:	int3   
   14000123d:	int3   
   14000123e:	int3   
   14000123f:	int3   
   140001240:	lea    rax,[rip+0x1fb9]        # 0x140003200
   140001247:	mov    QWORD PTR [rip+0xa4c2],rax        # 0x14000b710
   14000124e:	lea    rax,[rip+0x20bb]        # 0x140003310
   140001255:	mov    QWORD PTR [rip+0xa4a4],rax        # 0x14000b700
   14000125c:	lea    rax,[rip+0x20fd]        # 0x140003360
   140001263:	mov    QWORD PTR [rip+0xa49e],rax        # 0x14000b708
   14000126a:	ret    
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	sub    rsp,0x28
   140001274:	xor    edx,edx
   140001276:	lea    rcx,[rip+0xa5f3]        # 0x14000b870
   14000127d:	mov    r8d,0xa0
   140001283:	call   0x140006e12
   140001288:	lea    rcx,[rip+0x5d21]        # 0x140006fb0
   14000128f:	add    rsp,0x28
   140001293:	jmp    0x140006774
   140001298:	int3   
   140001299:	int3   
   14000129a:	int3   
   14000129b:	int3   
   14000129c:	int3   
   14000129d:	int3   
   14000129e:	int3   
   14000129f:	int3   
   1400012a0:	sub    rsp,0x28
   1400012a4:	cmp    QWORD PTR [rip+0xa444],0x0        # 0x14000b6f0
   1400012ac:	lea    rax,[rip+0x338d]        # 0x140004640
   1400012b3:	je     0x1400012ba
   1400012b5:	test   rax,rax
   1400012b8:	jne    0x1400012df
   1400012ba:	mov    QWORD PTR [rip+0xa42f],rax        # 0x14000b6f0
   1400012c1:	lea    rax,[rip+0x3ff8]        # 0x1400052c0
   1400012c8:	mov    QWORD PTR [rip+0xa481],rax        # 0x14000b750
   1400012cf:	mov    QWORD PTR [rip+0xa546],0x1        # 0x14000b820
   1400012da:	add    rsp,0x28
   1400012de:	ret    
   1400012df:	mov    rcx,QWORD PTR [rsp+0x28]
   1400012e4:	call   0x140003e6c
   1400012e9:	int3   
   1400012ea:	int3   
   1400012eb:	int3   
   1400012ec:	int3   
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	int3   
   1400012f1:	int3   
   1400012f2:	int3   
   1400012f3:	int3   
   1400012f4:	int3   
   1400012f5:	int3   
   1400012f6:	int3   
   1400012f7:	int3   
   1400012f8:	xor    r9d,r9d
   1400012fb:	xor    r8d,r8d
   1400012fe:	lea    edx,[r9+0x1]
   140001302:	rex.W jmp QWORD PTR [rip+0x6d6f]        # 0x140008078
   140001309:	int3   
   14000130a:	int3   
   14000130b:	int3   
   14000130c:	int3   
   14000130d:	int3   
   14000130e:	int3   
   14000130f:	int3   
   140001310:	mov    eax,DWORD PTR [rip+0xa3aa]        # 0x14000b6c0
   140001316:	ret    
   140001317:	int3   
   140001318:	int3   
   140001319:	int3   
   14000131a:	int3   
   14000131b:	int3   
   14000131c:	int3   
   14000131d:	int3   
   14000131e:	int3   
   14000131f:	int3   
   140001320:	lea    rax,[rip+0x8991]        # 0x140009cb8
   140001327:	ret    
   140001328:	int3   
   140001329:	int3   
   14000132a:	int3   
   14000132b:	int3   
   14000132c:	int3   
   14000132d:	int3   
   14000132e:	int3   
   14000132f:	int3   
   140001330:	lea    rax,[rip+0x8989]        # 0x140009cc0
   140001337:	ret    
   140001338:	int3   
   140001339:	int3   
   14000133a:	int3   
   14000133b:	int3   
   14000133c:	int3   
   14000133d:	int3   
   14000133e:	int3   
   14000133f:	int3   
   140001340:	lea    rax,[rip+0x8989]        # 0x140009cd0
   140001347:	ret    
   140001348:	int3   
   140001349:	int3   
   14000134a:	int3   
   14000134b:	int3   
   14000134c:	int3   
   14000134d:	int3   
   14000134e:	int3   
   14000134f:	int3   
   140001350:	lea    rax,[rip+0xa359]        # 0x14000b6b0
   140001357:	ret    
   140001358:	int3   
   140001359:	int3   
   14000135a:	int3   
   14000135b:	int3   
   14000135c:	int3   
   14000135d:	int3   
   14000135e:	int3   
   14000135f:	int3   
   140001360:	mov    rax,rsp
   140001363:	mov    QWORD PTR [rax+0x8],rbx
   140001367:	mov    QWORD PTR [rax+0x10],rbp
   14000136b:	mov    QWORD PTR [rax+0x18],rsi
   14000136f:	mov    QWORD PTR [rax+0x20],rdi
   140001373:	push   r14
   140001375:	sub    rsp,0x40
   140001379:	mov    rdi,QWORD PTR [rcx+0x10]
   14000137d:	mov    esi,r9d
   140001380:	mov    rbp,r8
   140001383:	mov    r14,rdx
   140001386:	test   rdi,rdi
   140001389:	je     0x1400013ca
   14000138b:	mov    rax,QWORD PTR [rdi]
   14000138e:	mov    rbx,QWORD PTR [rax+0x18]
   140001392:	mov    rcx,rbx
   140001395:	call   QWORD PTR [rip+0x6f9d]        # 0x140008338
   14000139b:	mov    rax,QWORD PTR [rsp+0x80]
   1400013a3:	mov    r9d,esi
   1400013a6:	mov    QWORD PTR [rsp+0x30],rax
   1400013ab:	mov    r8,rbp
   1400013ae:	mov    eax,DWORD PTR [rsp+0x78]
   1400013b2:	mov    rdx,r14
   1400013b5:	mov    DWORD PTR [rsp+0x28],eax
   1400013b9:	mov    rcx,rdi
   1400013bc:	mov    rax,QWORD PTR [rsp+0x70]
   1400013c1:	mov    QWORD PTR [rsp+0x20],rax
   1400013c6:	call   rbx
   1400013c8:	jmp    0x1400013cf
   1400013ca:	mov    eax,0x8007000e
   1400013cf:	mov    rbx,QWORD PTR [rsp+0x50]
   1400013d4:	mov    rbp,QWORD PTR [rsp+0x58]
   1400013d9:	mov    rsi,QWORD PTR [rsp+0x60]
   1400013de:	mov    rdi,QWORD PTR [rsp+0x68]
   1400013e3:	add    rsp,0x40
   1400013e7:	pop    r14
   1400013e9:	ret    
   1400013ea:	int3   
   1400013eb:	int3   
   1400013ec:	int3   
   1400013ed:	int3   
   1400013ee:	int3   
   1400013ef:	int3   
   1400013f0:	mov    rax,rsp
   1400013f3:	mov    QWORD PTR [rax+0x8],rbx
   1400013f7:	mov    QWORD PTR [rax+0x10],rbp
   1400013fb:	mov    QWORD PTR [rax+0x18],rsi
   1400013ff:	mov    QWORD PTR [rax+0x20],rdi
   140001403:	push   r14
   140001405:	sub    rsp,0x40
   140001409:	mov    rdi,QWORD PTR [rcx+0x10]
   14000140d:	mov    esi,r9d
   140001410:	mov    rbp,r8
   140001413:	mov    r14,rdx
   140001416:	test   rdi,rdi
   140001419:	je     0x14000145a
   14000141b:	mov    rax,QWORD PTR [rdi]
   14000141e:	mov    rbx,QWORD PTR [rax+0x20]
   140001422:	mov    rcx,rbx
   140001425:	call   QWORD PTR [rip+0x6f0d]        # 0x140008338
   14000142b:	mov    rax,QWORD PTR [rsp+0x80]
   140001433:	mov    r9d,esi
   140001436:	mov    QWORD PTR [rsp+0x30],rax
   14000143b:	mov    r8,rbp
   14000143e:	mov    eax,DWORD PTR [rsp+0x78]
   140001442:	mov    rdx,r14
   140001445:	mov    DWORD PTR [rsp+0x28],eax
   140001449:	mov    rcx,rdi
   14000144c:	mov    rax,QWORD PTR [rsp+0x70]
   140001451:	mov    QWORD PTR [rsp+0x20],rax
   140001456:	call   rbx
   140001458:	jmp    0x14000145f
   14000145a:	mov    eax,0x8007000e
   14000145f:	mov    rbx,QWORD PTR [rsp+0x50]
   140001464:	mov    rbp,QWORD PTR [rsp+0x58]
   140001469:	mov    rsi,QWORD PTR [rsp+0x60]
   14000146e:	mov    rdi,QWORD PTR [rsp+0x68]
   140001473:	add    rsp,0x40
   140001477:	pop    r14
   140001479:	ret    
   14000147a:	int3   
   14000147b:	int3   
   14000147c:	int3   
   14000147d:	int3   
   14000147e:	int3   
   14000147f:	int3   
   140001480:	mov    rax,rsp
   140001483:	mov    QWORD PTR [rax+0x8],rbx
   140001487:	mov    QWORD PTR [rax+0x10],rbp
   14000148b:	mov    QWORD PTR [rax+0x18],rsi
   14000148f:	mov    QWORD PTR [rax+0x20],rdi
   140001493:	push   r14
   140001495:	sub    rsp,0x40
   140001499:	mov    rdi,QWORD PTR [rcx+0x10]
   14000149d:	mov    rsi,r9
   1400014a0:	mov    rbp,r8
   1400014a3:	mov    r14,rdx
   1400014a6:	test   rdi,rdi
   1400014a9:	je     0x1400014e8
   1400014ab:	mov    rax,QWORD PTR [rdi]
   1400014ae:	mov    rbx,QWORD PTR [rax+0x28]
   1400014b2:	mov    rcx,rbx
   1400014b5:	call   QWORD PTR [rip+0x6e7d]        # 0x140008338
   1400014bb:	mov    eax,DWORD PTR [rsp+0x80]
   1400014c2:	mov    r9,rsi
   1400014c5:	mov    DWORD PTR [rsp+0x30],eax
   1400014c9:	mov    r8,rbp
   1400014cc:	mov    rax,QWORD PTR [rsp+0x78]
   1400014d1:	mov    rdx,r14
   1400014d4:	mov    QWORD PTR [rsp+0x28],rax
   1400014d9:	mov    rcx,rdi
   1400014dc:	mov    eax,DWORD PTR [rsp+0x70]
   1400014e0:	mov    DWORD PTR [rsp+0x20],eax
   1400014e4:	call   rbx
   1400014e6:	jmp    0x1400014ed
   1400014e8:	mov    eax,0x8007000e
   1400014ed:	mov    rbx,QWORD PTR [rsp+0x50]
   1400014f2:	mov    rbp,QWORD PTR [rsp+0x58]
   1400014f7:	mov    rsi,QWORD PTR [rsp+0x60]
   1400014fc:	mov    rdi,QWORD PTR [rsp+0x68]
   140001501:	add    rsp,0x40
   140001505:	pop    r14
   140001507:	ret    
   140001508:	int3   
   140001509:	int3   
   14000150a:	int3   
   14000150b:	int3   
   14000150c:	int3   
   14000150d:	int3   
   14000150e:	int3   
   14000150f:	int3   
   140001510:	mov    rax,rsp
   140001513:	mov    QWORD PTR [rax+0x8],rbx
   140001517:	mov    QWORD PTR [rax+0x10],rbp
   14000151b:	mov    QWORD PTR [rax+0x18],rsi
   14000151f:	mov    QWORD PTR [rax+0x20],rdi
   140001523:	push   r14
   140001525:	sub    rsp,0x20
   140001529:	mov    rdi,QWORD PTR [rcx+0x10]
   14000152d:	mov    rsi,r9
   140001530:	mov    rbp,r8
   140001533:	mov    r14,rdx
   140001536:	test   rdi,rdi
   140001539:	je     0x14000155b
   14000153b:	mov    rax,QWORD PTR [rdi]
   14000153e:	mov    rbx,QWORD PTR [rax+0x30]
   140001542:	mov    rcx,rbx
   140001545:	call   QWORD PTR [rip+0x6ded]        # 0x140008338
   14000154b:	mov    r9,rsi
   14000154e:	mov    r8,rbp
   140001551:	mov    rdx,r14
   140001554:	mov    rcx,rdi
   140001557:	call   rbx
   140001559:	jmp    0x140001560
   14000155b:	mov    eax,0x8007000e
   140001560:	mov    rbx,QWORD PTR [rsp+0x30]
   140001565:	mov    rbp,QWORD PTR [rsp+0x38]
   14000156a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000156f:	mov    rdi,QWORD PTR [rsp+0x48]
   140001574:	add    rsp,0x20
   140001578:	pop    r14
   14000157a:	ret    
   14000157b:	int3   
   14000157c:	int3   
   14000157d:	int3   
   14000157e:	int3   
   14000157f:	int3   
   140001580:	int3   
   140001581:	int3   
   140001582:	int3   
   140001583:	int3   
   140001584:	int3   
   140001585:	int3   
   140001586:	int3   
   140001587:	int3   
   140001588:	int3   
   140001589:	int3   
   14000158a:	int3   
   14000158b:	int3   
   14000158c:	int3   
   14000158d:	int3   
   14000158e:	int3   
   14000158f:	int3   
   140001590:	mov    QWORD PTR [rsp+0x8],rbx
   140001595:	mov    QWORD PTR [rsp+0x10],rsi
   14000159a:	push   rdi
   14000159b:	sub    rsp,0x20
   14000159f:	mov    rdi,QWORD PTR [rcx+0x10]
   1400015a3:	mov    rsi,rdx
   1400015a6:	test   rdi,rdi
   1400015a9:	je     0x1400015c5
   1400015ab:	mov    rax,QWORD PTR [rdi]
   1400015ae:	mov    rbx,QWORD PTR [rax+0x38]
   1400015b2:	mov    rcx,rbx
   1400015b5:	call   QWORD PTR [rip+0x6d7d]        # 0x140008338
   1400015bb:	mov    rdx,rsi
   1400015be:	mov    rcx,rdi
   1400015c1:	call   rbx
   1400015c3:	jmp    0x1400015ca
   1400015c5:	mov    eax,0x8007000e
   1400015ca:	mov    rbx,QWORD PTR [rsp+0x30]
   1400015cf:	mov    rsi,QWORD PTR [rsp+0x38]
   1400015d4:	add    rsp,0x20
   1400015d8:	pop    rdi
   1400015d9:	ret    
   1400015da:	int3   
   1400015db:	int3   
   1400015dc:	int3   
   1400015dd:	int3   
   1400015de:	int3   
   1400015df:	int3   
   1400015e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400015e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400015ea:	push   rdi
   1400015eb:	sub    rsp,0x20
   1400015ef:	mov    rdi,QWORD PTR [rcx+0x10]
   1400015f3:	mov    esi,edx
   1400015f5:	test   rdi,rdi
   1400015f8:	je     0x140001613
   1400015fa:	mov    rax,QWORD PTR [rdi]
   1400015fd:	mov    rbx,QWORD PTR [rax+0x40]
   140001601:	mov    rcx,rbx
   140001604:	call   QWORD PTR [rip+0x6d2e]        # 0x140008338
   14000160a:	mov    edx,esi
   14000160c:	mov    rcx,rdi
   14000160f:	call   rbx
   140001611:	jmp    0x140001618
   140001613:	mov    eax,0x8007000e
   140001618:	mov    rbx,QWORD PTR [rsp+0x30]
   14000161d:	mov    rsi,QWORD PTR [rsp+0x38]
   140001622:	add    rsp,0x20
   140001626:	pop    rdi
   140001627:	ret    
   140001628:	int3   
   140001629:	int3   
   14000162a:	int3   
   14000162b:	int3   
   14000162c:	int3   
   14000162d:	int3   
   14000162e:	int3   
   14000162f:	int3   
   140001630:	mov    rax,rsp
   140001633:	mov    QWORD PTR [rax+0x8],rbx
   140001637:	mov    QWORD PTR [rax+0x10],rbp
   14000163b:	mov    QWORD PTR [rax+0x18],rsi
   14000163f:	mov    QWORD PTR [rax+0x20],rdi
   140001643:	push   r14
   140001645:	sub    rsp,0x20
   140001649:	and    QWORD PTR [r8],0x0
   14000164d:	mov    rsi,r8
   140001650:	mov    r14,rdx
   140001653:	mov    rbp,rcx
   140001656:	jmp    0x140001664
   140001658:	lea    r9d,[rax+0x1]
   14000165c:	lock cmpxchg DWORD PTR [rcx+0x10],r9d
   140001662:	je     0x140001686
   140001664:	mov    eax,DWORD PTR [rcx+0x10]
   140001667:	test   eax,eax
   140001669:	jne    0x140001658
   14000166b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001670:	mov    rbp,QWORD PTR [rsp+0x38]
   140001675:	mov    rsi,QWORD PTR [rsp+0x40]
   14000167a:	mov    rdi,QWORD PTR [rsp+0x48]
   14000167f:	add    rsp,0x20
   140001683:	pop    r14
   140001685:	ret    
   140001686:	mov    rdi,QWORD PTR [rcx+0x18]
   14000168a:	mov    rax,QWORD PTR [rdi]
   14000168d:	mov    rbx,QWORD PTR [rax]
   140001690:	mov    rcx,rbx
   140001693:	call   QWORD PTR [rip+0x6c9f]        # 0x140008338
   140001699:	mov    r8,rsi
   14000169c:	mov    rdx,r14
   14000169f:	mov    rcx,rdi
   1400016a2:	call   rbx
   1400016a4:	mov    rdi,QWORD PTR [rbp+0x18]
   1400016a8:	mov    esi,eax
   1400016aa:	mov    rdx,QWORD PTR [rdi]
   1400016ad:	mov    rbx,QWORD PTR [rdx+0x10]
   1400016b1:	mov    rcx,rbx
   1400016b4:	call   QWORD PTR [rip+0x6c7e]        # 0x140008338
   1400016ba:	mov    rcx,rdi
   1400016bd:	call   rbx
   1400016bf:	mov    eax,esi
   1400016c1:	jmp    0x14000166b
   1400016c3:	int3   
   1400016c4:	int3   
   1400016c5:	int3   
   1400016c6:	int3   
   1400016c7:	int3   
   1400016c8:	int3   
   1400016c9:	int3   
   1400016ca:	int3   
   1400016cb:	int3   
   1400016cc:	int3   
   1400016cd:	int3   
   1400016ce:	int3   
   1400016cf:	int3   
   1400016d0:	rex push rbx
   1400016d2:	sub    rsp,0x20
   1400016d6:	lea    rax,[rip+0x71bb]        # 0x140008898
   1400016dd:	mov    rbx,rcx
   1400016e0:	mov    QWORD PTR [rcx],rax
   1400016e3:	mov    eax,0xc0000001
   1400016e8:	mov    DWORD PTR [rcx+0x10],eax
   1400016eb:	mov    DWORD PTR [rcx+0xc],eax
   1400016ee:	test   dl,0x1
   1400016f1:	je     0x1400016f8
   1400016f3:	call   0x1400062b0
   1400016f8:	mov    rax,rbx
   1400016fb:	add    rsp,0x20
   1400016ff:	pop    rbx
   140001700:	ret    
   140001701:	int3   
   140001702:	int3   
   140001703:	int3   
   140001704:	int3   
   140001705:	int3   
   140001706:	int3   
   140001707:	int3   
   140001708:	mov    QWORD PTR [rsp+0x8],rbx
   14000170d:	push   rdi
   14000170e:	sub    rsp,0x20
   140001712:	mov    rdi,rcx
   140001715:	mov    rbx,rdx
   140001718:	mov    rcx,rdx
   14000171b:	call   QWORD PTR [rip+0x6a37]        # 0x140008158
   140001721:	mov    QWORD PTR [rdi],rbx
   140001724:	mov    rax,rdi
   140001727:	mov    rbx,QWORD PTR [rsp+0x30]
   14000172c:	add    rsp,0x20
   140001730:	pop    rdi
   140001731:	ret    
   140001732:	int3   
   140001733:	int3   
   140001734:	int3   
   140001735:	int3   
   140001736:	int3   
   140001737:	int3   
   140001738:	mov    QWORD PTR [rsp+0x8],rbx
   14000173d:	push   rdi
   14000173e:	sub    rsp,0x20
   140001742:	mov    rdi,rcx
   140001745:	mov    rbx,rdx
   140001748:	mov    rcx,rdx
   14000174b:	call   QWORD PTR [rip+0x69f7]        # 0x140008148
   140001751:	mov    QWORD PTR [rdi],rbx
   140001754:	mov    rax,rdi
   140001757:	mov    rbx,QWORD PTR [rsp+0x30]
   14000175c:	add    rsp,0x20
   140001760:	pop    rdi
   140001761:	ret    
   140001762:	int3   
   140001763:	int3   
   140001764:	int3   
   140001765:	int3   
   140001766:	int3   
   140001767:	int3   
   140001768:	mov    QWORD PTR [rsp+0x8],rbx
   14000176d:	mov    QWORD PTR [rsp+0x18],rbp
   140001772:	mov    QWORD PTR [rsp+0x10],rdx
   140001777:	push   rsi
   140001778:	push   rdi
   140001779:	push   r12
   14000177b:	push   r13
   14000177d:	push   r14
   14000177f:	sub    rsp,0x20
   140001783:	mov    bpl,r8b
   140001786:	lea    rsi,[rip+0x8533]        # 0x140009cc0
   14000178d:	mov    r14,rcx
   140001790:	lea    r13,[rip+0x8539]        # 0x140009cd0
   140001797:	lea    r12,[rip+0xfffffffffffffb72]        # 0x140001310
   14000179e:	cmp    rsi,r13
   1400017a1:	jae    0x14000185f
   1400017a7:	cmp    QWORD PTR [rsi],0x0
   1400017ab:	je     0x140001852
   1400017b1:	mov    rax,QWORD PTR [r14]
   1400017b4:	cmp    QWORD PTR [rax+0x18],r12
   1400017b8:	jne    0x1400017c2
   1400017ba:	mov    eax,DWORD PTR [rip+0x9f00]        # 0x14000b6c0
   1400017c0:	jmp    0x1400017c4
   1400017c2:	xor    eax,eax
   1400017c4:	test   eax,eax
   1400017c6:	je     0x1400017d1
   1400017c8:	test   bpl,bpl
   1400017cb:	je     0x14000185b
   1400017d1:	mov    rax,QWORD PTR [rsi]
   1400017d4:	mov    rcx,QWORD PTR [rax+0x18]
   1400017d8:	mov    rax,QWORD PTR [rcx]
   1400017db:	test   rax,rax
   1400017de:	je     0x140001852
   1400017e0:	lea    rdx,[rip+0x9ec9]        # 0x14000b6b0
   1400017e7:	lea    rcx,[rsp+0x58]
   1400017ec:	call   0x140001708
   1400017f1:	mov    rax,QWORD PTR [rsi]
   1400017f4:	mov    rcx,QWORD PTR [rax+0x18]
   1400017f8:	mov    rbx,QWORD PTR [rcx]
   1400017fb:	test   rbx,rbx
   1400017fe:	jne    0x140001817
   140001800:	mov    rcx,QWORD PTR [rsp+0x58]
   140001805:	test   rcx,rcx
   140001808:	je     0x140001852
   14000180a:	call   QWORD PTR [rip+0x6950]        # 0x140008160
   140001810:	and    QWORD PTR [rsp+0x58],rbx
   140001815:	jmp    0x140001852
   140001817:	and    QWORD PTR [rcx],0x0
   14000181b:	mov    rcx,QWORD PTR [rsp+0x58]
   140001820:	test   rcx,rcx
   140001823:	je     0x140001831
   140001825:	call   QWORD PTR [rip+0x6935]        # 0x140008160
   14000182b:	and    QWORD PTR [rsp+0x58],0x0
   140001831:	mov    rcx,rbx
   140001834:	call   QWORD PTR [rip+0x6956]        # 0x140008190
   14000183a:	mov    rdi,rax
   14000183d:	mov    rcx,QWORD PTR [rax]
   140001840:	mov    rbx,QWORD PTR [rcx+0x10]
   140001844:	mov    rcx,rbx
   140001847:	call   QWORD PTR [rip+0x6aeb]        # 0x140008338
   14000184d:	mov    rcx,rdi
   140001850:	call   rbx
   140001852:	add    rsi,0x8
   140001856:	jmp    0x14000179e
   14000185b:	xor    al,al
   14000185d:	jmp    0x140001877
   14000185f:	mov    rax,QWORD PTR [r14]
   140001862:	cmp    QWORD PTR [rax+0x18],r12
   140001866:	jne    0x140001870
   140001868:	mov    eax,DWORD PTR [rip+0x9e52]        # 0x14000b6c0
   14000186e:	jmp    0x140001872
   140001870:	xor    eax,eax
   140001872:	test   eax,eax
   140001874:	sete   al
   140001877:	mov    rbx,QWORD PTR [rsp+0x50]
   14000187c:	mov    rbp,QWORD PTR [rsp+0x60]
   140001881:	add    rsp,0x20
   140001885:	pop    r14
   140001887:	pop    r13
   140001889:	pop    r12
   14000188b:	pop    rdi
   14000188c:	pop    rsi
   14000188d:	ret    
   14000188e:	int3   
   14000188f:	int3   
   140001890:	int3   
   140001891:	int3   
   140001892:	int3   
   140001893:	int3   
   140001894:	mov    QWORD PTR [rsp+0x10],rbx
   140001899:	mov    QWORD PTR [rsp+0x8],rcx
   14000189e:	push   rbp
   14000189f:	push   rsi
   1400018a0:	push   rdi
   1400018a1:	push   r14
   1400018a3:	push   r15
   1400018a5:	mov    rbp,rsp
   1400018a8:	sub    rsp,0x20
   1400018ac:	and    QWORD PTR [rbp+0x30],0x0
   1400018b1:	mov    rdi,r9
   1400018b4:	mov    r14,QWORD PTR [rbp+0x50]
   1400018b8:	mov    r15,r8
   1400018bb:	mov    rsi,rdx
   1400018be:	and    QWORD PTR [r14],0x0
   1400018c2:	mov    rax,QWORD PTR [r9+0x18]
   1400018c6:	mov    rcx,QWORD PTR [rax]
   1400018c9:	test   rcx,rcx
   1400018cc:	je     0x140001938
   1400018ce:	lea    rdx,[rip+0x9ddb]        # 0x14000b6b0
   1400018d5:	lea    rcx,[rbp+0x50]
   1400018d9:	call   0x140001738
   1400018de:	mov    rax,QWORD PTR [rdi+0x18]
   1400018e2:	mov    rcx,QWORD PTR [rax]
   1400018e5:	test   rcx,rcx
   1400018e8:	je     0x140001929
   1400018ea:	call   QWORD PTR [rip+0x68a0]        # 0x140008190
   1400018f0:	mov    QWORD PTR [rbp+0x30],rax
   1400018f4:	mov    rdi,rax
   1400018f7:	mov    rcx,QWORD PTR [rax]
   1400018fa:	mov    rbx,QWORD PTR [rcx]
   1400018fd:	mov    rcx,rbx
   140001900:	call   QWORD PTR [rip+0x6a32]        # 0x140008338
   140001906:	mov    r8,r14
   140001909:	mov    rdx,r15
   14000190c:	mov    rcx,rdi
   14000190f:	call   rbx
   140001911:	mov    rcx,QWORD PTR [rbp+0x50]
   140001915:	mov    ebx,eax
   140001917:	test   rcx,rcx
   14000191a:	je     0x140001922
   14000191c:	call   QWORD PTR [rip+0x680e]        # 0x140008130
   140001922:	mov    eax,ebx
   140001924:	jmp    0x140001a04
   140001929:	mov    rcx,QWORD PTR [rbp+0x50]
   14000192d:	test   rcx,rcx
   140001930:	je     0x140001938
   140001932:	call   QWORD PTR [rip+0x67f8]        # 0x140008130
   140001938:	mov    rbx,QWORD PTR [rdi]
   14000193b:	mov    rcx,rbx
   14000193e:	call   QWORD PTR [rip+0x69f4]        # 0x140008338
   140001944:	lea    r9,[rbp+0x30]
   140001948:	mov    r8,r15
   14000194b:	mov    rdx,rdi
   14000194e:	mov    rcx,rsi
   140001951:	call   rbx
   140001953:	test   eax,eax
   140001955:	js     0x140001a04
   14000195b:	test   BYTE PTR [rsi],0x4
   14000195e:	jne    0x1400019fb
   140001964:	lea    rdx,[rip+0x9d45]        # 0x14000b6b0
   14000196b:	xor    esi,esi
   14000196d:	lea    rcx,[rbp+0x48]
   140001971:	call   0x140001708
   140001976:	mov    rax,QWORD PTR [rdi+0x18]
   14000197a:	mov    rcx,QWORD PTR [rax]
   14000197d:	test   rcx,rcx
   140001980:	jne    0x140001995
   140001982:	mov    rcx,QWORD PTR [rbp+0x30]
   140001986:	call   QWORD PTR [rip+0x67fc]        # 0x140008188
   14000198c:	mov    rcx,QWORD PTR [rdi+0x18]
   140001990:	mov    QWORD PTR [rcx],rax
   140001993:	jmp    0x1400019b3
   140001995:	call   QWORD PTR [rip+0x67f5]        # 0x140008190
   14000199b:	mov    rsi,rax
   14000199e:	mov    rcx,QWORD PTR [rax]
   1400019a1:	mov    rbx,QWORD PTR [rcx+0x8]
   1400019a5:	mov    rcx,rbx
   1400019a8:	call   QWORD PTR [rip+0x698a]        # 0x140008338
   1400019ae:	mov    rcx,rsi
   1400019b1:	call   rbx
   1400019b3:	mov    rcx,QWORD PTR [rbp+0x48]
   1400019b7:	test   rcx,rcx
   1400019ba:	je     0x1400019c2
   1400019bc:	call   QWORD PTR [rip+0x679e]        # 0x140008160
   1400019c2:	test   rsi,rsi
   1400019c5:	je     0x1400019fb
   1400019c7:	mov    rdi,QWORD PTR [rbp+0x30]
   1400019cb:	mov    rax,QWORD PTR [rdi]
   1400019ce:	mov    rbx,QWORD PTR [rax+0x10]
   1400019d2:	mov    rcx,rbx
   1400019d5:	call   QWORD PTR [rip+0x695d]        # 0x140008338
   1400019db:	mov    rcx,rdi
   1400019de:	call   rbx
   1400019e0:	mov    rdi,QWORD PTR [rbp+0x30]
   1400019e4:	mov    rax,QWORD PTR [rdi]
   1400019e7:	mov    rbx,QWORD PTR [rax+0x10]
   1400019eb:	mov    rcx,rbx
   1400019ee:	call   QWORD PTR [rip+0x6944]        # 0x140008338
   1400019f4:	mov    rcx,rdi
   1400019f7:	call   rbx
   1400019f9:	jmp    0x1400019ff
   1400019fb:	mov    rsi,QWORD PTR [rbp+0x30]
   1400019ff:	mov    QWORD PTR [r14],rsi
   140001a02:	xor    eax,eax
   140001a04:	mov    rbx,QWORD PTR [rsp+0x58]
   140001a09:	add    rsp,0x20
   140001a0d:	pop    r15
   140001a0f:	pop    r14
   140001a11:	pop    rdi
   140001a12:	pop    rsi
   140001a13:	pop    rbp
   140001a14:	ret    
   140001a15:	int3   
   140001a16:	int3   
   140001a17:	int3   
   140001a18:	int3   
   140001a19:	int3   
   140001a1a:	int3   
   140001a1b:	int3   
   140001a1c:	int3   
   140001a1d:	int3   
   140001a1e:	int3   
   140001a1f:	int3   
   140001a20:	mov    rax,rsp
   140001a23:	mov    QWORD PTR [rax+0x8],rbx
   140001a27:	mov    QWORD PTR [rax+0x10],rsi
   140001a2b:	mov    QWORD PTR [rax+0x20],rdi
   140001a2f:	push   r14
   140001a31:	sub    rsp,0x20
   140001a35:	and    QWORD PTR [r8],0x0
   140001a39:	xor    edi,edi
   140001a3b:	mov    QWORD PTR [rax+0x18],rdi
   140001a3f:	mov    r14,r8
   140001a42:	mov    eax,DWORD PTR [rip+0x9c58]        # 0x14000b6a0
   140001a48:	mov    rsi,rdx
   140001a4b:	test   al,0x1
   140001a4d:	jne    0x140001a85
   140001a4f:	or     eax,0x1
   140001a52:	lea    rcx,[rip+0x5517]        # 0x140006f70
   140001a59:	mov    DWORD PTR [rip+0x9c41],eax        # 0x14000b6a0
   140001a5f:	lea    rax,[rip+0x9c42]        # 0x14000b6a8
   140001a66:	mov    QWORD PTR [rip+0x9c4b],rax        # 0x14000b6b8
   140001a6d:	lea    rax,[rip+0x6cf4]        # 0x140008768
   140001a74:	mov    QWORD PTR [rip+0x9c2d],rax        # 0x14000b6a8
   140001a7b:	call   0x140006774
   140001a80:	mov    rdi,QWORD PTR [rsp+0x40]
   140001a85:	test   rdi,rdi
   140001a88:	je     0x140001aa5
   140001a8a:	and    QWORD PTR [rsp+0x40],0x0
   140001a90:	mov    rax,QWORD PTR [rdi]
   140001a93:	mov    rbx,QWORD PTR [rax+0x10]
   140001a97:	mov    rcx,rbx
   140001a9a:	call   QWORD PTR [rip+0x6898]        # 0x140008338
   140001aa0:	mov    rcx,rdi
   140001aa3:	call   rbx
   140001aa5:	lea    r8,[rsp+0x40]
   140001aaa:	mov    rdx,rsi
   140001aad:	call   0x140002228
   140001ab2:	mov    esi,eax
   140001ab4:	test   eax,eax
   140001ab6:	js     0x140001ac4
   140001ab8:	mov    rcx,QWORD PTR [rsp+0x40]
   140001abd:	xor    edi,edi
   140001abf:	mov    QWORD PTR [r14],rcx
   140001ac2:	jmp    0x140001ac9
   140001ac4:	mov    rdi,QWORD PTR [rsp+0x40]
   140001ac9:	test   rdi,rdi
   140001acc:	je     0x140001ae9
   140001ace:	and    QWORD PTR [rsp+0x40],0x0
   140001ad4:	mov    rax,QWORD PTR [rdi]
   140001ad7:	mov    rbx,QWORD PTR [rax+0x10]
   140001adb:	mov    rcx,rbx
   140001ade:	call   QWORD PTR [rip+0x6854]        # 0x140008338
   140001ae4:	mov    rcx,rdi
   140001ae7:	call   rbx
   140001ae9:	mov    rbx,QWORD PTR [rsp+0x30]
   140001aee:	mov    eax,esi
   140001af0:	mov    rsi,QWORD PTR [rsp+0x38]
   140001af5:	mov    rdi,QWORD PTR [rsp+0x48]
   140001afa:	add    rsp,0x20
   140001afe:	pop    r14
   140001b00:	ret    
   140001b01:	int3   
   140001b02:	int3   
   140001b03:	int3   
   140001b04:	int3   
   140001b05:	int3   
   140001b06:	int3   
   140001b07:	int3   
   140001b08:	mov    QWORD PTR [rsp+0x8],rbx
   140001b0d:	mov    QWORD PTR [rsp+0x10],rsi
   140001b12:	mov    QWORD PTR [rsp+0x18],rdi
   140001b17:	push   rbp
   140001b18:	mov    rbp,rsp
   140001b1b:	sub    rsp,0x60
   140001b1f:	mov    rax,QWORD PTR [rip+0x94e2]        # 0x14000b008
   140001b26:	xor    rax,rsp
   140001b29:	mov    QWORD PTR [rbp-0x10],rax
   140001b2d:	mov    ecx,0x1
   140001b32:	call   QWORD PTR [rip+0x66a0]        # 0x1400081d8
   140001b38:	test   eax,eax
   140001b3a:	js     0x140001c88
   140001b40:	mov    eax,DWORD PTR [rip+0x9c22]        # 0x14000b768
   140001b46:	test   al,0x1
   140001b48:	jne    0x140001b83
   140001b4a:	and    QWORD PTR [rip+0x9c26],0x0        # 0x14000b778
   140001b52:	lea    rcx,[rip+0x53f7]        # 0x140006f50
   140001b59:	or     eax,0x1
   140001b5c:	mov    DWORD PTR [rip+0x9c06],eax        # 0x14000b768
   140001b62:	lea    rax,[rip+0x9c07]        # 0x14000b770
   140001b69:	mov    QWORD PTR [rip+0x9b48],rax        # 0x14000b6b8
   140001b70:	lea    rax,[rip+0x6c81]        # 0x1400087f8
   140001b77:	mov    QWORD PTR [rip+0x9bf2],rax        # 0x14000b770
   140001b7e:	call   0x140006774
   140001b83:	call   QWORD PTR [rip+0x64af]        # 0x140008038
   140001b89:	test   eax,eax
   140001b8b:	js     0x140001c88
   140001b91:	and    QWORD PTR [rbp-0x40],0x0
   140001b96:	lea    r9,[rbp-0x18]
   140001b9a:	and    QWORD PTR [rbp-0x18],0x0
   140001b9f:	lea    r8,[rbp-0x30]
   140001ba3:	mov    edx,0x2d
   140001ba8:	lea    rcx,[rip+0x6d31]        # 0x1400088e0
   140001baf:	call   QWORD PTR [rip+0x664b]        # 0x140008200
   140001bb5:	test   eax,eax
   140001bb7:	js     0x140001cb0
   140001bbd:	mov    rdi,QWORD PTR [rbp-0x40]
   140001bc1:	mov    rsi,QWORD PTR [rbp-0x18]
   140001bc5:	test   rdi,rdi
   140001bc8:	je     0x140001be4
   140001bca:	and    QWORD PTR [rbp-0x40],0x0
   140001bcf:	mov    rax,QWORD PTR [rdi]
   140001bd2:	mov    rbx,QWORD PTR [rax+0x10]
   140001bd6:	mov    rcx,rbx
   140001bd9:	call   QWORD PTR [rip+0x6759]        # 0x140008338
   140001bdf:	mov    rcx,rdi
   140001be2:	call   rbx
   140001be4:	lea    r8,[rbp-0x40]
   140001be8:	mov    rcx,rsi
   140001beb:	lea    rdx,[rip+0x6a3e]        # 0x140008630
   140001bf2:	call   QWORD PTR [rip+0x65d8]        # 0x1400081d0
   140001bf8:	test   eax,eax
   140001bfa:	js     0x140001c65
   140001bfc:	lea    rcx,[rbp-0x38]
   140001c00:	call   0x140002918
   140001c05:	mov    rdi,QWORD PTR [rax]
   140001c08:	and    QWORD PTR [rax],0x0
   140001c0c:	mov    rsi,QWORD PTR [rbp-0x38]
   140001c10:	test   rsi,rsi
   140001c13:	je     0x140001c2f
   140001c15:	and    QWORD PTR [rbp-0x38],0x0
   140001c1a:	mov    rax,QWORD PTR [rsi]
   140001c1d:	mov    rbx,QWORD PTR [rax+0x10]
   140001c21:	mov    rcx,rbx
   140001c24:	call   QWORD PTR [rip+0x670e]        # 0x140008338
   140001c2a:	mov    rcx,rsi
   140001c2d:	call   rbx
   140001c2f:	mov    rbx,QWORD PTR [rbp-0x40]
   140001c33:	mov    rax,QWORD PTR [rbx]
   140001c36:	mov    rsi,QWORD PTR [rax+0x70]
   140001c3a:	mov    rcx,rsi
   140001c3d:	call   QWORD PTR [rip+0x66f5]        # 0x140008338
   140001c43:	mov    rdx,rdi
   140001c46:	mov    rcx,rbx
   140001c49:	call   rsi
   140001c4b:	test   rdi,rdi
   140001c4e:	je     0x140001c65
   140001c50:	mov    rax,QWORD PTR [rdi]
   140001c53:	mov    rbx,QWORD PTR [rax+0x10]
   140001c57:	mov    rcx,rbx
   140001c5a:	call   QWORD PTR [rip+0x66d8]        # 0x140008338
   140001c60:	mov    rcx,rdi
   140001c63:	call   rbx
   140001c65:	mov    rdi,QWORD PTR [rbp-0x40]
   140001c69:	test   rdi,rdi
   140001c6c:	je     0x140001c88
   140001c6e:	and    QWORD PTR [rbp-0x40],0x0
   140001c73:	mov    rax,QWORD PTR [rdi]
   140001c76:	mov    rbx,QWORD PTR [rax+0x10]
   140001c7a:	mov    rcx,rbx
   140001c7d:	call   QWORD PTR [rip+0x66b5]        # 0x140008338
   140001c83:	mov    rcx,rdi
   140001c86:	call   rbx
   140001c88:	call   QWORD PTR [rip+0x6532]        # 0x1400081c0
   140001c8e:	mov    rcx,QWORD PTR [rbp-0x10]
   140001c92:	xor    rcx,rsp
   140001c95:	call   0x1400066a0
   140001c9a:	lea    r11,[rsp+0x60]
   140001c9f:	mov    rbx,QWORD PTR [r11+0x10]
   140001ca3:	mov    rsi,QWORD PTR [r11+0x18]
   140001ca7:	mov    rdi,QWORD PTR [r11+0x20]
   140001cab:	mov    rsp,r11
   140001cae:	pop    rbp
   140001caf:	ret    
   140001cb0:	mov    ecx,eax
   140001cb2:	call   0x1400012f8
   140001cb7:	int3   
   140001cb8:	int3   
   140001cb9:	int3   
   140001cba:	int3   
   140001cbb:	int3   
   140001cbc:	int3   
   140001cbd:	int3   
   140001cbe:	int3   
   140001cbf:	int3   
   140001cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140001cc5:	mov    QWORD PTR [rsp+0x10],rsi
   140001cca:	push   rdi
   140001ccb:	sub    rsp,0x20
   140001ccf:	xor    edi,edi
   140001cd1:	mov    rsi,rcx
   140001cd4:	mov    QWORD PTR [r8],rdi
   140001cd7:	cmp    DWORD PTR [rdx],edi
   140001cd9:	jne    0x140001cfc
   140001cdb:	mov    eax,DWORD PTR [rip+0x6943]        # 0x140008624
   140001ce1:	cmp    DWORD PTR [rdx+0x4],eax
   140001ce4:	jne    0x140001cfc
   140001ce6:	mov    eax,DWORD PTR [rip+0x693c]        # 0x140008628
   140001cec:	cmp    DWORD PTR [rdx+0x8],eax
   140001cef:	jne    0x140001cfc
   140001cf1:	mov    eax,DWORD PTR [rip+0x6935]        # 0x14000862c
   140001cf7:	cmp    DWORD PTR [rdx+0xc],eax
   140001cfa:	je     0x140001d22
   140001cfc:	cmp    DWORD PTR [rdx],0x37
   140001cff:	jne    0x140001d3c
   140001d01:	mov    eax,DWORD PTR [rip+0x699d]        # 0x1400086a4
   140001d07:	cmp    DWORD PTR [rdx+0x4],eax
   140001d0a:	jne    0x140001d3c
   140001d0c:	mov    eax,DWORD PTR [rip+0x6996]        # 0x1400086a8
   140001d12:	cmp    DWORD PTR [rdx+0x8],eax
   140001d15:	jne    0x140001d3c
   140001d17:	mov    eax,DWORD PTR [rip+0x698f]        # 0x1400086ac
   140001d1d:	cmp    DWORD PTR [rdx+0xc],eax
   140001d20:	jne    0x140001d3c
   140001d22:	mov    QWORD PTR [r8],rcx
   140001d25:	mov    rax,QWORD PTR [rcx]
   140001d28:	mov    rbx,QWORD PTR [rax+0x8]
   140001d2c:	mov    rcx,rbx
   140001d2f:	call   QWORD PTR [rip+0x6603]        # 0x140008338
   140001d35:	mov    rcx,rsi
   140001d38:	call   rbx
   140001d3a:	jmp    0x140001d41
   140001d3c:	mov    edi,0x80004002
   140001d41:	mov    rbx,QWORD PTR [rsp+0x30]
   140001d46:	mov    eax,edi
   140001d48:	mov    rsi,QWORD PTR [rsp+0x38]
   140001d4d:	add    rsp,0x20
   140001d51:	pop    rdi
   140001d52:	ret    
   140001d53:	int3   
   140001d54:	int3   
   140001d55:	int3   
   140001d56:	int3   
   140001d57:	int3   
   140001d58:	int3   
   140001d59:	int3   
   140001d5a:	int3   
   140001d5b:	int3   
   140001d5c:	int3   
   140001d5d:	int3   
   140001d5e:	int3   
   140001d5f:	int3   
   140001d60:	mov    eax,0x1
   140001d65:	lock xadd DWORD PTR [rcx+0xc],eax
   140001d6a:	inc    eax
   140001d6c:	ret    
   140001d6d:	int3   
   140001d6e:	int3   
   140001d6f:	int3   
   140001d70:	int3   
   140001d71:	int3   
   140001d72:	int3   
   140001d73:	int3   
   140001d74:	int3   
   140001d75:	int3   
   140001d76:	int3   
   140001d77:	int3   
   140001d78:	int3   
   140001d79:	int3   
   140001d7a:	int3   
   140001d7b:	int3   
   140001d7c:	int3   
   140001d7d:	int3   
   140001d7e:	int3   
   140001d7f:	int3   
   140001d80:	mov    QWORD PTR [rsp+0x8],rbx
   140001d85:	mov    QWORD PTR [rsp+0x10],rsi
   140001d8a:	push   rdi
   140001d8b:	sub    rsp,0x20
   140001d8f:	mov    rsi,rcx
   140001d92:	or     edi,0xffffffff
   140001d95:	lock xadd DWORD PTR [rcx+0xc],edi
   140001d9a:	sub    edi,0x1
   140001d9d:	jne    0x140001ddd
   140001d9f:	test   rcx,rcx
   140001da2:	je     0x140001dbc
   140001da4:	mov    rax,QWORD PTR [rcx]
   140001da7:	mov    rbx,QWORD PTR [rax+0x20]
   140001dab:	mov    rcx,rbx
   140001dae:	call   QWORD PTR [rip+0x6584]        # 0x140008338
   140001db4:	lea    edx,[rdi+0x1]
   140001db7:	mov    rcx,rsi
   140001dba:	call   rbx
   140001dbc:	mov    rsi,QWORD PTR [rip+0x98f5]        # 0x14000b6b8
   140001dc3:	test   rsi,rsi
   140001dc6:	je     0x140001ddd
   140001dc8:	mov    rdx,QWORD PTR [rsi]
   140001dcb:	mov    rbx,QWORD PTR [rdx+0x10]
   140001dcf:	mov    rcx,rbx
   140001dd2:	call   QWORD PTR [rip+0x6560]        # 0x140008338
   140001dd8:	mov    rcx,rsi
   140001ddb:	call   rbx
   140001ddd:	mov    rbx,QWORD PTR [rsp+0x30]
   140001de2:	mov    eax,edi
   140001de4:	mov    rsi,QWORD PTR [rsp+0x38]
   140001de9:	add    rsp,0x20
   140001ded:	pop    rdi
   140001dee:	ret    
   140001def:	int3   
   140001df0:	int3   
   140001df1:	int3   
   140001df2:	int3   
   140001df3:	int3   
   140001df4:	int3   
   140001df5:	int3   
   140001df6:	int3   
   140001df7:	int3   
   140001df8:	int3   
   140001df9:	int3   
   140001dfa:	int3   
   140001dfb:	int3   
   140001dfc:	int3   
   140001dfd:	int3   
   140001dfe:	int3   
   140001dff:	int3   
   140001e00:	mov    QWORD PTR [rsp+0x8],rbx
   140001e05:	mov    QWORD PTR [rsp+0x10],rsi
   140001e0a:	push   rdi
   140001e0b:	sub    rsp,0x20
   140001e0f:	xor    edi,edi
   140001e11:	mov    rsi,rcx
   140001e14:	mov    QWORD PTR [r8],rdi
   140001e17:	cmp    DWORD PTR [rdx],edi
   140001e19:	jne    0x140001e3c
   140001e1b:	mov    eax,DWORD PTR [rip+0x6803]        # 0x140008624
   140001e21:	cmp    DWORD PTR [rdx+0x4],eax
   140001e24:	jne    0x140001e3c
   140001e26:	mov    eax,DWORD PTR [rip+0x67fc]        # 0x140008628
   140001e2c:	cmp    DWORD PTR [rdx+0x8],eax
   140001e2f:	jne    0x140001e3c
   140001e31:	mov    eax,DWORD PTR [rip+0x67f5]        # 0x14000862c
   140001e37:	cmp    DWORD PTR [rdx+0xc],eax
   140001e3a:	je     0x140001e65
   140001e3c:	cmp    DWORD PTR [rdx],0xaf86e2e0
   140001e42:	jne    0x140001e82
   140001e44:	mov    eax,DWORD PTR [rip+0x6782]        # 0x1400085cc
   140001e4a:	cmp    DWORD PTR [rdx+0x4],eax
   140001e4d:	jne    0x140001e82
   140001e4f:	mov    eax,DWORD PTR [rip+0x677b]        # 0x1400085d0
   140001e55:	cmp    DWORD PTR [rdx+0x8],eax
   140001e58:	jne    0x140001e82
   140001e5a:	mov    eax,DWORD PTR [rip+0x6774]        # 0x1400085d4
   140001e60:	cmp    DWORD PTR [rdx+0xc],eax
   140001e63:	jne    0x140001e82
   140001e65:	mov    QWORD PTR [r8],rcx
   140001e68:	mov    rax,QWORD PTR [rcx]
   140001e6b:	mov    rbx,QWORD PTR [rax+0x8]
   140001e6f:	mov    rcx,rbx
   140001e72:	call   QWORD PTR [rip+0x64c0]        # 0x140008338
   140001e78:	mov    rcx,rsi
   140001e7b:	call   rbx
   140001e7d:	jmp    0x140001f61
   140001e82:	cmp    DWORD PTR [rdx],0x4edb8ee2
   140001e88:	jne    0x140001eb5
   140001e8a:	mov    eax,DWORD PTR [rip+0x67b4]        # 0x140008644
   140001e90:	cmp    DWORD PTR [rdx+0x4],eax
   140001e93:	jne    0x140001eb5
   140001e95:	mov    eax,DWORD PTR [rip+0x67ad]        # 0x140008648
   140001e9b:	cmp    DWORD PTR [rdx+0x8],eax
   140001e9e:	jne    0x140001eb5
   140001ea0:	mov    eax,DWORD PTR [rip+0x67a6]        # 0x14000864c
   140001ea6:	cmp    DWORD PTR [rdx+0xc],eax
   140001ea9:	jne    0x140001eb5
   140001eab:	mov    QWORD PTR [r8],rcx
   140001eae:	mov    esi,edi
   140001eb0:	jmp    0x140001f47
   140001eb5:	add    rsi,0x8
   140001eb9:	cmp    DWORD PTR [rdx],0x38
   140001ebc:	jne    0x140001ee4
   140001ebe:	mov    eax,DWORD PTR [rip+0x6838]        # 0x1400086fc
   140001ec4:	cmp    DWORD PTR [rdx+0x4],eax
   140001ec7:	jne    0x140001ee4
   140001ec9:	mov    eax,DWORD PTR [rip+0x6831]        # 0x140008700
   140001ecf:	cmp    DWORD PTR [rdx+0x8],eax
   140001ed2:	jne    0x140001ee4
   140001ed4:	mov    eax,DWORD PTR [rip+0x682a]        # 0x140008704
   140001eda:	cmp    DWORD PTR [rdx+0xc],eax
   140001edd:	jne    0x140001ee4
   140001edf:	mov    QWORD PTR [r8],rsi
   140001ee2:	jmp    0x140001eae
   140001ee4:	add    rsi,0x8
   140001ee8:	cmp    DWORD PTR [rdx],0x94ea2b94
   140001eee:	jne    0x140001f18
   140001ef0:	mov    eax,DWORD PTR [rip+0x69de]        # 0x1400088d4
   140001ef6:	cmp    DWORD PTR [rdx+0x4],eax
   140001ef9:	jne    0x140001f18
   140001efb:	mov    eax,DWORD PTR [rip+0x69d7]        # 0x1400088d8
   140001f01:	cmp    DWORD PTR [rdx+0x8],eax
   140001f04:	jne    0x140001f18
   140001f06:	mov    eax,DWORD PTR [rip+0x69d0]        # 0x1400088dc
   140001f0c:	cmp    DWORD PTR [rdx+0xc],eax
   140001f0f:	jne    0x140001f18
   140001f11:	mov    QWORD PTR [r8],rsi
   140001f14:	mov    esi,edi
   140001f16:	jmp    0x140001f43
   140001f18:	cmp    DWORD PTR [rdx],0x3
   140001f1b:	jne    0x140001f3e
   140001f1d:	mov    eax,DWORD PTR [rip+0x69a1]        # 0x1400088c4
   140001f23:	cmp    DWORD PTR [rdx+0x4],eax
   140001f26:	jne    0x140001f3e
   140001f28:	mov    eax,DWORD PTR [rip+0x699a]        # 0x1400088c8
   140001f2e:	cmp    DWORD PTR [rdx+0x8],eax
   140001f31:	jne    0x140001f3e
   140001f33:	mov    eax,DWORD PTR [rip+0x6993]        # 0x1400088cc
   140001f39:	cmp    DWORD PTR [rdx+0xc],eax
   140001f3c:	je     0x140001f11
   140001f3e:	mov    esi,0x80004002
   140001f43:	test   esi,esi
   140001f45:	js     0x140001f5f
   140001f47:	mov    rdi,QWORD PTR [r8]
   140001f4a:	mov    rax,QWORD PTR [rdi]
   140001f4d:	mov    rbx,QWORD PTR [rax+0x8]
   140001f51:	mov    rcx,rbx
   140001f54:	call   QWORD PTR [rip+0x63de]        # 0x140008338
   140001f5a:	mov    rcx,rdi
   140001f5d:	call   rbx
   140001f5f:	mov    edi,esi
   140001f61:	mov    rbx,QWORD PTR [rsp+0x30]
   140001f66:	mov    eax,edi
   140001f68:	mov    rsi,QWORD PTR [rsp+0x38]
   140001f6d:	add    rsp,0x20
   140001f71:	pop    rdi
   140001f72:	ret    
   140001f73:	int3   
   140001f74:	int3   
   140001f75:	int3   
   140001f76:	int3   
   140001f77:	int3   
   140001f78:	int3   
   140001f79:	int3   
   140001f7a:	int3   
   140001f7b:	int3   
   140001f7c:	int3   
   140001f7d:	int3   
   140001f7e:	int3   
   140001f7f:	int3   
   140001f80:	mov    rax,QWORD PTR [rcx+0x30]
   140001f84:	mov    QWORD PTR [rsp+0x8],rax
   140001f89:	jmp    0x140001f97
   140001f8b:	lea    rdx,[rax+0x1]
   140001f8f:	lock cmpxchg QWORD PTR [rcx+0x30],rdx
   140001f95:	je     0x140001fa9
   140001f97:	test   rax,rax
   140001f9a:	jns    0x140001f8b
   140001f9c:	mov    edx,0x1
   140001fa1:	lock xadd DWORD PTR [rax+rax*1+0x10],edx
   140001fa7:	inc    edx
   140001fa9:	mov    eax,edx
   140001fab:	ret    
   140001fac:	int3   
   140001fad:	int3   
   140001fae:	int3   
   140001faf:	int3   
   140001fb0:	int3   
   140001fb1:	int3   
   140001fb2:	int3   
   140001fb3:	int3   
   140001fb4:	int3   
   140001fb5:	int3   
   140001fb6:	int3   
   140001fb7:	int3   
   140001fb8:	int3   
   140001fb9:	int3   
   140001fba:	int3   
   140001fbb:	int3   
   140001fbc:	int3   
   140001fbd:	int3   
   140001fbe:	int3   
   140001fbf:	int3   
   140001fc0:	mov    r11,rsp
   140001fc3:	mov    QWORD PTR [r11+0x10],rbx
   140001fc7:	mov    QWORD PTR [r11+0x18],rsi
   140001fcb:	push   rdi
   140001fcc:	sub    rsp,0x20
   140001fd0:	mov    rax,QWORD PTR [rcx+0x30]
   140001fd4:	mov    rdi,rcx
   140001fd7:	mov    QWORD PTR [r11+0x8],rax
   140001fdb:	jmp    0x140001fe9
   140001fdd:	lea    rsi,[rax-0x1]
   140001fe1:	lock cmpxchg QWORD PTR [rcx+0x30],rsi
   140001fe7:	je     0x140001ff9
   140001fe9:	test   rax,rax
   140001fec:	jns    0x140001fdd
   140001fee:	or     esi,0xffffffff
   140001ff1:	lock xadd DWORD PTR [rax+rax*1+0x10],esi
   140001ff7:	dec    esi
   140001ff9:	test   esi,esi
   140001ffb:	jne    0x14000203b
   140001ffd:	test   rcx,rcx
   140002000:	je     0x14000201a
   140002002:	mov    rax,QWORD PTR [rcx]
   140002005:	mov    rbx,QWORD PTR [rax+0x38]
   140002009:	mov    rcx,rbx
   14000200c:	call   QWORD PTR [rip+0x6326]        # 0x140008338
   140002012:	lea    edx,[rsi+0x1]
   140002015:	mov    rcx,rdi
   140002018:	call   rbx
   14000201a:	mov    rdi,QWORD PTR [rip+0x9697]        # 0x14000b6b8
   140002021:	test   rdi,rdi
   140002024:	je     0x14000203b
   140002026:	mov    rdx,QWORD PTR [rdi]
   140002029:	mov    rbx,QWORD PTR [rdx+0x10]
   14000202d:	mov    rcx,rbx
   140002030:	call   QWORD PTR [rip+0x6302]        # 0x140008338
   140002036:	mov    rcx,rdi
   140002039:	call   rbx
   14000203b:	mov    rbx,QWORD PTR [rsp+0x38]
   140002040:	mov    eax,esi
   140002042:	mov    rsi,QWORD PTR [rsp+0x40]
   140002047:	add    rsp,0x20
   14000204b:	pop    rdi
   14000204c:	ret    
   14000204d:	int3   
   14000204e:	int3   
   14000204f:	int3   
   140002050:	int3   
   140002051:	int3   
   140002052:	int3   
   140002053:	int3   
   140002054:	int3   
   140002055:	int3   
   140002056:	int3   
   140002057:	int3   
   140002058:	int3   
   140002059:	int3   
   14000205a:	int3   
   14000205b:	int3   
   14000205c:	int3   
   14000205d:	int3   
   14000205e:	int3   
   14000205f:	int3   
   140002060:	mov    QWORD PTR [rsp+0x8],rbx
   140002065:	mov    QWORD PTR [rsp+0x10],rsi
   14000206a:	push   rdi
   14000206b:	sub    rsp,0x20
   14000206f:	xor    ebx,ebx
   140002071:	mov    rdi,r8
   140002074:	mov    QWORD PTR [r8],rbx
   140002077:	mov    rsi,rdx
   14000207a:	mov    DWORD PTR [rdx],ebx
   14000207c:	lea    ecx,[rbx+0x20]
   14000207f:	call   QWORD PTR [rip+0x5fa3]        # 0x140008028
   140002085:	test   rax,rax
   140002088:	jne    0x140002091
   14000208a:	mov    ebx,0x8007000e
   14000208f:	jmp    0x1400020b1
   140002091:	movups xmm0,XMMWORD PTR [rip+0x65a8]        # 0x140008640
   140002098:	movdqu XMMWORD PTR [rax],xmm0
   14000209c:	movups xmm1,XMMWORD PTR [rip+0x6655]        # 0x1400086f8
   1400020a3:	movdqu XMMWORD PTR [rax+0x10],xmm1
   1400020a8:	mov    DWORD PTR [rsi],0x2
   1400020ae:	mov    QWORD PTR [rdi],rax
   1400020b1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400020b6:	mov    eax,ebx
   1400020b8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400020bd:	add    rsp,0x20
   1400020c1:	pop    rdi
   1400020c2:	ret    
   1400020c3:	int3   
   1400020c4:	int3   
   1400020c5:	int3   
   1400020c6:	int3   
   1400020c7:	int3   
   1400020c8:	int3   
   1400020c9:	int3   
   1400020ca:	int3   
   1400020cb:	int3   
   1400020cc:	int3   
   1400020cd:	int3   
   1400020ce:	int3   
   1400020cf:	int3   
   1400020d0:	sub    rsp,0x28
   1400020d4:	and    QWORD PTR [rdx],0x0
   1400020d8:	mov    ecx,0x80004001
   1400020dd:	xor    edx,edx
   1400020df:	call   QWORD PTR [rip+0x60bb]        # 0x1400081a0
   1400020e5:	mov    eax,0x80004001
   1400020ea:	add    rsp,0x28
   1400020ee:	ret    
   1400020ef:	int3   
   1400020f0:	int3   
   1400020f1:	int3   
   1400020f2:	int3   
   1400020f3:	int3   
   1400020f4:	int3   
   1400020f5:	int3   
   1400020f6:	int3   
   1400020f7:	int3   
   1400020f8:	int3   
   1400020f9:	int3   
   1400020fa:	int3   
   1400020fb:	int3   
   1400020fc:	int3   
   1400020fd:	int3   
   1400020fe:	int3   
   1400020ff:	int3   
   140002100:	sub    rsp,0x28
   140002104:	xor    edx,edx
   140002106:	mov    ecx,0x80004001
   14000210b:	call   QWORD PTR [rip+0x608f]        # 0x1400081a0
   140002111:	mov    eax,0x80004001
   140002116:	add    rsp,0x28
   14000211a:	ret    
   14000211b:	int3   
   14000211c:	int3   
   14000211d:	int3   
   14000211e:	int3   
   14000211f:	int3   
   140002120:	int3   
   140002121:	int3   
   140002122:	int3   
   140002123:	int3   
   140002124:	int3   
   140002125:	int3   
   140002126:	int3   
   140002127:	int3   
   140002128:	int3   
   140002129:	int3   
   14000212a:	int3   
   14000212b:	int3   
   14000212c:	int3   
   14000212d:	int3   
   14000212e:	int3   
   14000212f:	int3   
   140002130:	mov    QWORD PTR [rsp+0x20],rbx
   140002135:	push   rbp
   140002136:	push   rsi
   140002137:	push   rdi
   140002138:	sub    rsp,0x20
   14000213c:	mov    rax,QWORD PTR [rcx+0x28]
   140002140:	mov    rsi,rdx
   140002143:	and    QWORD PTR [rdx],0x0
   140002147:	mov    rbp,rcx
   14000214a:	mov    QWORD PTR [rsp+0x48],rax
   14000214f:	mov    rdi,rax
   140002152:	test   rax,rax
   140002155:	jns    0x140002167
   140002157:	lea    rax,[rax+rax*1]
   14000215b:	lock inc DWORD PTR [rax+0xc]
   14000215f:	mov    QWORD PTR [rdx],rax
   140002162:	jmp    0x1400021e7
   140002167:	lea    rax,[rcx-0x8]
   14000216b:	lea    rcx,[rsp+0x40]
   140002170:	mov    QWORD PTR [rsp+0x50],rax
   140002175:	lea    rdx,[rsp+0x50]
   14000217a:	call   0x140002854
   14000217f:	mov    rbx,QWORD PTR [rax]
   140002182:	and    QWORD PTR [rax],0x0
   140002186:	mov    rcx,QWORD PTR [rsp+0x40]
   14000218b:	test   rcx,rcx
   14000218e:	je     0x14000219b
   140002190:	and    QWORD PTR [rsp+0x40],0x0
   140002196:	call   0x140001d80
   14000219b:	test   rbx,rbx
   14000219e:	jne    0x1400021a7
   1400021a0:	mov    eax,0x8007000e
   1400021a5:	jmp    0x1400021e9
   1400021a7:	movabs rax,0x8000000000000000
   1400021b1:	mov    DWORD PTR [rbx+0x10],edi
   1400021b4:	mov    rdx,rbx
   1400021b7:	sar    rdx,1
   1400021ba:	or     rdx,rax
   1400021bd:	mov    rax,rdi
   1400021c0:	lock cmpxchg QWORD PTR [rbp+0x28],rdx
   1400021c6:	jmp    0x1400021df
   1400021c8:	test   rdi,rdi
   1400021cb:	js     0x1400021f6
   1400021cd:	mov    rcx,rdi
   1400021d0:	mov    DWORD PTR [rbx+0x10],edi
   1400021d3:	mov    rax,rdi
   1400021d6:	lock cmpxchg QWORD PTR [rbp+0x28],rdx
   1400021dc:	cmp    rax,rcx
   1400021df:	mov    rdi,rax
   1400021e2:	jne    0x1400021c8
   1400021e4:	mov    QWORD PTR [rsi],rbx
   1400021e7:	xor    eax,eax
   1400021e9:	mov    rbx,QWORD PTR [rsp+0x58]
   1400021ee:	add    rsp,0x20
   1400021f2:	pop    rdi
   1400021f3:	pop    rsi
   1400021f4:	pop    rbp
   1400021f5:	ret    
   1400021f6:	lea    rax,[rip+0x669b]        # 0x140008898
   1400021fd:	mov    rcx,rbx
   140002200:	mov    QWORD PTR [rbx],rax
   140002203:	mov    eax,0xc0000001
   140002208:	mov    DWORD PTR [rbx+0x10],eax
   14000220b:	mov    DWORD PTR [rbx+0xc],eax
   14000220e:	call   0x1400062b0
   140002213:	lea    rax,[rdi+rdi*1]
   140002217:	lock inc DWORD PTR [rax+0xc]
   14000221b:	mov    QWORD PTR [rsi],rax
   14000221e:	jmp    0x1400021e7
   140002220:	int3   
   140002221:	int3   
   140002222:	int3   
   140002223:	int3   
   140002224:	int3   
   140002225:	int3   
   140002226:	int3   
   140002227:	int3   
   140002228:	mov    QWORD PTR [rsp+0x8],rbx
   14000222d:	mov    QWORD PTR [rsp+0x20],rbp
   140002232:	push   rsi
   140002233:	push   rdi
   140002234:	push   r14
   140002236:	sub    rsp,0x70
   14000223a:	mov    rax,QWORD PTR [rip+0x8dc7]        # 0x14000b008
   140002241:	xor    rax,rsp
   140002244:	mov    QWORD PTR [rsp+0x60],rax
   140002249:	and    QWORD PTR [r8],0x0
   14000224d:	mov    rcx,rdx
   140002250:	mov    rsi,r8
   140002253:	mov    rbx,rdx
   140002256:	call   QWORD PTR [rip+0x5f9c]        # 0x1400081f8
   14000225c:	test   eax,eax
   14000225e:	jne    0x140002319
   140002264:	lea    rdx,[rsp+0x34]
   140002269:	mov    rcx,rbx
   14000226c:	call   QWORD PTR [rip+0x5f96]        # 0x140008208
   140002272:	test   eax,eax
   140002274:	js     0x140002319
   14000227a:	cmp    DWORD PTR [rsp+0x34],0x1
   14000227f:	je     0x140002319
   140002285:	xor    edx,edx
   140002287:	mov    rcx,rbx
   14000228a:	call   QWORD PTR [rip+0x5f58]        # 0x1400081e8
   140002290:	mov    rbp,rax
   140002293:	lea    rdi,[rip+0x7a2e]        # 0x140009cc8
   14000229a:	lea    r14,[rip+0x7a2f]        # 0x140009cd0
   1400022a1:	cmp    rdi,r14
   1400022a4:	jae    0x140002308
   1400022a6:	mov    rbx,QWORD PTR [rdi]
   1400022a9:	test   rbx,rbx
   1400022ac:	je     0x1400022dd
   1400022ae:	mov    rbx,QWORD PTR [rbx+0x8]
   1400022b2:	mov    rcx,rbx
   1400022b5:	call   QWORD PTR [rip+0x607d]        # 0x140008338
   1400022bb:	call   rbx
   1400022bd:	mov    rcx,rbp
   1400022c0:	sub    rax,rbp
   1400022c3:	movzx  edx,WORD PTR [rcx]
   1400022c6:	movzx  r8d,WORD PTR [rcx+rax*1]
   1400022cb:	sub    edx,r8d
   1400022ce:	jne    0x1400022d9
   1400022d0:	add    rcx,0x2
   1400022d4:	test   r8d,r8d
   1400022d7:	jne    0x1400022c3
   1400022d9:	test   edx,edx
   1400022db:	je     0x1400022e3
   1400022dd:	add    rdi,0x8
   1400022e1:	jmp    0x1400022a1
   1400022e3:	mov    r9,QWORD PTR [rdi]
   1400022e6:	lea    r8,[rip+0x6653]        # 0x140008940
   1400022ed:	lea    rdx,[rsp+0x30]
   1400022f2:	mov    DWORD PTR [rsp+0x30],0x1
   1400022fa:	mov    QWORD PTR [rsp+0x20],rsi
   1400022ff:	call   0x140001894
   140002304:	mov    ebx,eax
   140002306:	jmp    0x140002356
   140002308:	mov    ebx,0x80040111
   14000230d:	xor    edx,edx
   14000230f:	mov    ecx,ebx
   140002311:	call   QWORD PTR [rip+0x5e89]        # 0x1400081a0
   140002317:	jmp    0x140002356
   140002319:	movups xmm0,XMMWORD PTR [rip+0x6280]        # 0x1400085a0
   140002320:	mov    ebx,0x80070057
   140002325:	lea    r8,[rsp+0x38]
   14000232a:	movups xmm1,XMMWORD PTR [rip+0x627f]        # 0x1400085b0
   140002331:	mov    edx,0x13
   140002336:	mov    ecx,ebx
   140002338:	movups XMMWORD PTR [rsp+0x38],xmm0
   14000233d:	movsd  xmm0,QWORD PTR [rip+0x627b]        # 0x1400085c0
   140002345:	movsd  QWORD PTR [rsp+0x58],xmm0
   14000234b:	movups XMMWORD PTR [rsp+0x48],xmm1
   140002350:	call   QWORD PTR [rip+0x5e52]        # 0x1400081a8
   140002356:	mov    eax,ebx
   140002358:	mov    rcx,QWORD PTR [rsp+0x60]
   14000235d:	xor    rcx,rsp
   140002360:	call   0x1400066a0
   140002365:	lea    r11,[rsp+0x70]
   14000236a:	mov    rbx,QWORD PTR [r11+0x20]
   14000236e:	mov    rbp,QWORD PTR [r11+0x38]
   140002372:	mov    rsp,r11
   140002375:	pop    r14
   140002377:	pop    rdi
   140002378:	pop    rsi
   140002379:	ret    
   14000237a:	int3   
   14000237b:	int3   
   14000237c:	int3   
   14000237d:	int3   
   14000237e:	int3   
   14000237f:	int3   
   140002380:	mov    eax,0x1
   140002385:	lock xadd DWORD PTR [rip+0x9333],eax        # 0x14000b6c0
   14000238d:	inc    eax
   14000238f:	ret    
   140002390:	int3   
   140002391:	int3   
   140002392:	int3   
   140002393:	int3   
   140002394:	int3   
   140002395:	int3   
   140002396:	int3   
   140002397:	int3   
   140002398:	int3   
   140002399:	int3   
   14000239a:	int3   
   14000239b:	int3   
   14000239c:	int3   
   14000239d:	int3   
   14000239e:	int3   
   14000239f:	int3   
   1400023a0:	or     eax,0xffffffff
   1400023a3:	lock xadd DWORD PTR [rip+0x9315],eax        # 0x14000b6c0
   1400023ab:	dec    eax
   1400023ad:	ret    
   1400023ae:	int3   
   1400023af:	int3   
   1400023b0:	int3   
   1400023b1:	int3   
   1400023b2:	int3   
   1400023b3:	int3   
   1400023b4:	int3   
   1400023b5:	int3   
   1400023b6:	int3   
   1400023b7:	int3   
   1400023b8:	int3   
   1400023b9:	int3   
   1400023ba:	int3   
   1400023bb:	int3   
   1400023bc:	int3   
   1400023bd:	int3   
   1400023be:	int3   
   1400023bf:	int3   
   1400023c0:	mov    rax,rsp
   1400023c3:	mov    QWORD PTR [rax+0x8],rbx
   1400023c7:	mov    QWORD PTR [rax+0x10],rsi
   1400023cb:	mov    QWORD PTR [rax+0x18],rdi
   1400023cf:	mov    QWORD PTR [rax+0x20],r14
   1400023d3:	push   r15
   1400023d5:	sub    rsp,0x30
   1400023d9:	mov    rdi,QWORD PTR [rsp+0x60]
   1400023de:	xor    ebx,ebx
   1400023e0:	xor    esi,esi
   1400023e2:	mov    r14,r9
   1400023e5:	mov    r15,r8
   1400023e8:	cmp    DWORD PTR [rsp+0x68],ebx
   1400023ec:	jbe    0x140002429
   1400023ee:	test   ebx,ebx
   1400023f0:	js     0x140002435
   1400023f2:	mov    rdx,QWORD PTR [r14]
   1400023f5:	lea    rax,[rdi+rsi*4]
   1400023f9:	mov    r9d,0x5
   1400023ff:	mov    ecx,esi
   140002401:	shl    rcx,0x4
   140002405:	add    rcx,r15
   140002408:	mov    QWORD PTR [rsp+0x20],rax
   14000240d:	lea    r8d,[r9-0x1]
   140002411:	call   QWORD PTR [rip+0x5c09]        # 0x140008020
   140002417:	inc    esi
   140002419:	add    r14,0x8
   14000241d:	mov    ebx,eax
   14000241f:	cmp    esi,DWORD PTR [rsp+0x68]
   140002423:	jb     0x1400023ee
   140002425:	test   eax,eax
   140002427:	js     0x140002435
   140002429:	call   QWORD PTR [rip+0x5c21]        # 0x140008050
   14000242f:	mov    ebx,eax
   140002431:	test   eax,eax
   140002433:	jns    0x14000244e
   140002435:	test   esi,esi
   140002437:	je     0x14000244e
   140002439:	mov    ecx,DWORD PTR [rdi]
   14000243b:	call   QWORD PTR [rip+0x5bef]        # 0x140008030
   140002441:	and    DWORD PTR [rdi],0x0
   140002444:	lea    rdi,[rdi+0x4]
   140002448:	sub    rsi,0x1
   14000244c:	jne    0x140002439
   14000244e:	mov    rsi,QWORD PTR [rsp+0x48]
   140002453:	mov    eax,ebx
   140002455:	mov    rbx,QWORD PTR [rsp+0x40]
   14000245a:	mov    rdi,QWORD PTR [rsp+0x50]
   14000245f:	mov    r14,QWORD PTR [rsp+0x58]
   140002464:	add    rsp,0x30
   140002468:	pop    r15
   14000246a:	ret    
   14000246b:	int3   
   14000246c:	int3   
   14000246d:	int3   
   14000246e:	int3   
   14000246f:	int3   
   140002470:	int3   
   140002471:	int3   
   140002472:	int3   
   140002473:	int3   
   140002474:	int3   
   140002475:	int3   
   140002476:	int3   
   140002477:	int3   
   140002478:	int3   
   140002479:	int3   
   14000247a:	int3   
   14000247b:	int3   
   14000247c:	int3   
   14000247d:	int3   
   14000247e:	int3   
   14000247f:	int3   
   140002480:	mov    QWORD PTR [rsp+0x8],rbx
   140002485:	mov    QWORD PTR [rsp+0x10],rsi
   14000248a:	push   rdi
   14000248b:	sub    rsp,0x20
   14000248f:	xor    eax,eax
   140002491:	xor    edi,edi
   140002493:	mov    esi,r9d
   140002496:	mov    rbx,r8
   140002499:	test   r9d,r9d
   14000249c:	je     0x1400024bf
   14000249e:	test   eax,eax
   1400024a0:	js     0x1400024bf
   1400024a2:	mov    ecx,DWORD PTR [rbx]
   1400024a4:	test   ecx,ecx
   1400024a6:	je     0x1400024b5
   1400024a8:	call   QWORD PTR [rip+0x5b82]        # 0x140008030
   1400024ae:	test   eax,eax
   1400024b0:	js     0x1400024b5
   1400024b2:	and    DWORD PTR [rbx],0x0
   1400024b5:	inc    edi
   1400024b7:	add    rbx,0x4
   1400024bb:	cmp    edi,esi
   1400024bd:	jb     0x14000249e
   1400024bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400024c4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400024c9:	add    rsp,0x20
   1400024cd:	pop    rdi
   1400024ce:	ret    
   1400024cf:	int3   
   1400024d0:	int3   
   1400024d1:	int3   
   1400024d2:	int3   
   1400024d3:	int3   
   1400024d4:	int3   
   1400024d5:	int3   
   1400024d6:	int3   
   1400024d7:	int3   
   1400024d8:	int3   
   1400024d9:	int3   
   1400024da:	int3   
   1400024db:	int3   
   1400024dc:	int3   
   1400024dd:	int3   
   1400024de:	int3   
   1400024df:	int3   
   1400024e0:	mov    rax,rsp
   1400024e3:	mov    QWORD PTR [rax+0x8],rbx
   1400024e7:	mov    QWORD PTR [rax+0x10],rbp
   1400024eb:	mov    QWORD PTR [rax+0x18],rsi
   1400024ef:	mov    QWORD PTR [rax+0x20],rdi
   1400024f3:	push   r13
   1400024f5:	push   r14
   1400024f7:	push   r15
   1400024f9:	sub    rsp,0x20
   1400024fd:	mov    ebx,DWORD PTR [rsp+0x60]
   140002501:	mov    edi,0x8
   140002506:	mov    eax,edi
   140002508:	mov    r13,r9
   14000250b:	mul    rbx
   14000250e:	lea    rdx,[rip+0x643b]        # 0x140008950
   140002515:	mov    rsi,r8
   140002518:	lea    r14,[rdi-0x9]
   14000251c:	cmovo  rax,r14
   140002520:	mov    rcx,rax
   140002523:	call   0x1400066c4
   140002528:	mov    rbp,rax
   14000252b:	mov    eax,edi
   14000252d:	mul    rbx
   140002530:	lea    rdx,[rip+0x6419]        # 0x140008950
   140002537:	cmovo  rax,r14
   14000253b:	mov    rcx,rax
   14000253e:	call   0x1400066c4
   140002543:	xor    r9d,r9d
   140002546:	mov    r14,rax
   140002549:	mov    ebx,r9d
   14000254c:	test   rbp,rbp
   14000254f:	je     0x1400025e2
   140002555:	test   rax,rax
   140002558:	je     0x1400025e2
   14000255e:	mov    edi,r9d
   140002561:	cmp    DWORD PTR [rsp+0x60],r9d
   140002566:	jbe    0x1400025b0
   140002568:	mov    r15,rbp
   14000256b:	sub    r15,rsi
   14000256e:	test   ebx,ebx
   140002570:	js     0x1400025c6
   140002572:	lea    rax,[rip+0x5d7]        # 0x140002b50
   140002579:	or     rdx,0xffffffffffffffff
   14000257d:	mov    QWORD PTR [r15+rsi*1],rax
   140002581:	lea    r8,[r14+rdi*8]
   140002585:	mov    rcx,QWORD PTR [rsi]
   140002588:	inc    rdx
   14000258b:	cmp    WORD PTR [rcx+rdx*2],r9w
   140002590:	jne    0x140002588
   140002592:	call   QWORD PTR [rip+0x5c58]        # 0x1400081f0
   140002598:	inc    edi
   14000259a:	add    rsi,0x8
   14000259e:	mov    ebx,eax
   1400025a0:	mov    r9d,0x0
   1400025a6:	cmp    edi,DWORD PTR [rsp+0x60]
   1400025aa:	jb     0x14000256e
   1400025ac:	test   eax,eax
   1400025ae:	js     0x1400025c6
   1400025b0:	mov    r8d,DWORD PTR [rsp+0x60]
   1400025b5:	mov    r9,r13
   1400025b8:	mov    rdx,rbp
   1400025bb:	mov    rcx,r14
   1400025be:	call   QWORD PTR [rip+0x5c04]        # 0x1400081c8
   1400025c4:	mov    ebx,eax
   1400025c6:	test   edi,edi
   1400025c8:	je     0x1400025e7
   1400025ca:	mov    rsi,r14
   1400025cd:	mov    rcx,QWORD PTR [rsi]
   1400025d0:	call   QWORD PTR [rip+0x5c3a]        # 0x140008210
   1400025d6:	lea    rsi,[rsi+0x8]
   1400025da:	sub    rdi,0x1
   1400025de:	jne    0x1400025cd
   1400025e0:	jmp    0x1400025e7
   1400025e2:	mov    ebx,0x8007000e
   1400025e7:	mov    rcx,rbp
   1400025ea:	call   0x1400062b0
   1400025ef:	mov    rcx,r14
   1400025f2:	call   0x1400062b0
   1400025f7:	mov    rbp,QWORD PTR [rsp+0x48]
   1400025fc:	mov    eax,ebx
   1400025fe:	mov    rbx,QWORD PTR [rsp+0x40]
   140002603:	mov    rsi,QWORD PTR [rsp+0x50]
   140002608:	mov    rdi,QWORD PTR [rsp+0x58]
   14000260d:	add    rsp,0x20
   140002611:	pop    r15
   140002613:	pop    r14
   140002615:	pop    r13
   140002617:	ret    
   140002618:	int3   
   140002619:	int3   
   14000261a:	int3   
   14000261b:	int3   
   14000261c:	int3   
   14000261d:	int3   
   14000261e:	int3   
   14000261f:	int3   
   140002620:	sub    rsp,0x28
   140002624:	mov    rcx,r8
   140002627:	call   QWORD PTR [rip+0x5b8b]        # 0x1400081b8
   14000262d:	xor    eax,eax
   14000262f:	add    rsp,0x28
   140002633:	ret    
   140002634:	int3   
   140002635:	int3   
   140002636:	int3   
   140002637:	int3   
   140002638:	int3   
   140002639:	int3   
   14000263a:	int3   
   14000263b:	int3   
   14000263c:	int3   
   14000263d:	int3   
   14000263e:	int3   
   14000263f:	int3   
   140002640:	rex.W jmp QWORD PTR [rip+0x59f1]        # 0x140008038
   140002647:	int3   
   140002648:	int3   
   140002649:	int3   
   14000264a:	int3   
   14000264b:	int3   
   14000264c:	int3   
   14000264d:	int3   
   14000264e:	int3   
   14000264f:	int3   
   140002650:	mov    QWORD PTR [rsp+0x8],rbx
   140002655:	mov    QWORD PTR [rsp+0x10],rsi
   14000265a:	push   rdi
   14000265b:	sub    rsp,0x20
   14000265f:	mov    rdi,rcx
   140002662:	call   QWORD PTR [rip+0x59e0]        # 0x140008048
   140002668:	mov    esi,eax
   14000266a:	test   eax,eax
   14000266c:	jne    0x140002687
   14000266e:	mov    rdi,QWORD PTR [rdi+0x8]
   140002672:	mov    rdx,QWORD PTR [rdi]
   140002675:	mov    rbx,QWORD PTR [rdx+0x8]
   140002679:	mov    rcx,rbx
   14000267c:	call   QWORD PTR [rip+0x5cb6]        # 0x140008338
   140002682:	mov    rcx,rdi
   140002685:	call   rbx
   140002687:	mov    rbx,QWORD PTR [rsp+0x30]
   14000268c:	mov    eax,esi
   14000268e:	mov    rsi,QWORD PTR [rsp+0x38]
   140002693:	add    rsp,0x20
   140002697:	pop    rdi
   140002698:	ret    
   140002699:	int3   
   14000269a:	int3   
   14000269b:	int3   
   14000269c:	int3   
   14000269d:	int3   
   14000269e:	int3   
   14000269f:	int3   
   1400026a0:	xor    eax,eax
   1400026a2:	ret    
   1400026a3:	int3   
   1400026a4:	int3   
   1400026a5:	int3   
   1400026a6:	int3   
   1400026a7:	int3   
   1400026a8:	int3   
   1400026a9:	int3   
   1400026aa:	int3   
   1400026ab:	int3   
   1400026ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400026b1:	mov    QWORD PTR [rsp+0x10],rsi
   1400026b6:	push   rdi
   1400026b7:	sub    rsp,0x20
   1400026bb:	mov    rsi,QWORD PTR [rcx+0x8]
   1400026bf:	lea    rax,[rip+0x62da]        # 0x1400089a0
   1400026c6:	mov    QWORD PTR [rcx],rax
   1400026c9:	mov    rdi,rcx
   1400026cc:	test   rsi,rsi
   1400026cf:	je     0x1400026f5
   1400026d1:	cmp    BYTE PTR [rsi+0x8],0x0
   1400026d5:	je     0x1400026f0
   1400026d7:	mov    rax,QWORD PTR [rsi]
   1400026da:	mov    rbx,QWORD PTR [rax]
   1400026dd:	mov    rcx,rbx
   1400026e0:	call   QWORD PTR [rip+0x5c52]        # 0x140008338
   1400026e6:	mov    edx,0x1
   1400026eb:	mov    rcx,rsi
   1400026ee:	call   rbx
   1400026f0:	and    QWORD PTR [rdi+0x8],0x0
   1400026f5:	lea    rax,[rip+0x600c]        # 0x140008708
   1400026fc:	mov    r8b,0x1
   1400026ff:	mov    rcx,rdi
   140002702:	mov    QWORD PTR [rdi],rax
   140002705:	call   0x140001768
   14000270a:	and    QWORD PTR [rip+0x8fa6],0x0        # 0x14000b6b8
   140002712:	mov    rbx,QWORD PTR [rsp+0x30]
   140002717:	mov    rsi,QWORD PTR [rsp+0x38]
   14000271c:	mov    BYTE PTR [rip+0x9041],0x0        # 0x14000b764
   140002723:	add    rsp,0x20
   140002727:	pop    rdi
   140002728:	ret    
   140002729:	int3   
   14000272a:	int3   
   14000272b:	int3   
   14000272c:	int3   
   14000272d:	int3   
   14000272e:	int3   
   14000272f:	int3   
   140002730:	rex push rbx
   140002732:	sub    rsp,0x20
   140002736:	mov    DWORD PTR [rcx+0xc],0xc0000001
   14000273d:	mov    rbx,rcx
   140002740:	test   dl,0x1
   140002743:	je     0x14000274a
   140002745:	call   0x1400062b0
   14000274a:	mov    rax,rbx
   14000274d:	add    rsp,0x20
   140002751:	pop    rbx
   140002752:	ret    
   140002753:	int3   
   140002754:	int3   
   140002755:	int3   
   140002756:	int3   
   140002757:	int3   
   140002758:	int3   
   140002759:	int3   
   14000275a:	int3   
   14000275b:	int3   
   14000275c:	int3   
   14000275d:	int3   
   14000275e:	int3   
   14000275f:	int3   
   140002760:	mov    QWORD PTR [rsp+0x8],rbx
   140002765:	push   rdi
   140002766:	sub    rsp,0x20
   14000276a:	lea    rax,[rip+0x5ff7]        # 0x140008768
   140002771:	mov    r8b,0x1
   140002774:	mov    QWORD PTR [rcx],rax
   140002777:	mov    ebx,edx
   140002779:	mov    rdi,rcx
   14000277c:	call   0x140001768
   140002781:	and    QWORD PTR [rip+0x8f2f],0x0        # 0x14000b6b8
   140002789:	mov    BYTE PTR [rip+0x8ff0],0x0        # 0x14000b780
   140002790:	test   bl,0x1
   140002793:	je     0x14000279d
   140002795:	mov    rcx,rdi
   140002798:	call   0x1400062b0
   14000279d:	mov    rax,rdi
   1400027a0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400027a5:	add    rsp,0x20
   1400027a9:	pop    rdi
   1400027aa:	ret    
   1400027ab:	int3   
   1400027ac:	int3   
   1400027ad:	int3   
   1400027ae:	int3   
   1400027af:	int3   
   1400027b0:	int3   
   1400027b1:	int3   
   1400027b2:	int3   
   1400027b3:	int3   
   1400027b4:	int3   
   1400027b5:	int3   
   1400027b6:	int3   
   1400027b7:	int3   
   1400027b8:	int3   
   1400027b9:	int3   
   1400027ba:	int3   
   1400027bb:	int3   
   1400027bc:	int3   
   1400027bd:	int3   
   1400027be:	int3   
   1400027bf:	int3   
   1400027c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400027c5:	push   rdi
   1400027c6:	sub    rsp,0x20
   1400027ca:	mov    ebx,edx
   1400027cc:	mov    rdi,rcx
   1400027cf:	call   0x1400026ac
   1400027d4:	test   bl,0x1
   1400027d7:	je     0x1400027e1
   1400027d9:	mov    rcx,rdi
   1400027dc:	call   0x1400062b0
   1400027e1:	mov    rax,rdi
   1400027e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400027e9:	add    rsp,0x20
   1400027ed:	pop    rdi
   1400027ee:	ret    
   1400027ef:	int3   
   1400027f0:	int3   
   1400027f1:	int3   
   1400027f2:	int3   
   1400027f3:	int3   
   1400027f4:	int3   
   1400027f5:	int3   
   1400027f6:	int3   
   1400027f7:	int3   
   1400027f8:	int3   
   1400027f9:	int3   
   1400027fa:	int3   
   1400027fb:	int3   
   1400027fc:	int3   
   1400027fd:	int3   
   1400027fe:	int3   
   1400027ff:	int3   
   140002800:	mov    QWORD PTR [rsp+0x8],rbx
   140002805:	push   rdi
   140002806:	sub    rsp,0x20
   14000280a:	lea    rax,[rip+0x5ef7]        # 0x140008708
   140002811:	mov    r8b,0x1
   140002814:	mov    QWORD PTR [rcx],rax
   140002817:	mov    ebx,edx
   140002819:	mov    rdi,rcx
   14000281c:	call   0x140001768
   140002821:	and    QWORD PTR [rip+0x8e8f],0x0        # 0x14000b6b8
   140002829:	mov    BYTE PTR [rip+0x8f34],0x0        # 0x14000b764
   140002830:	test   bl,0x1
   140002833:	je     0x14000283d
   140002835:	mov    rcx,rdi
   140002838:	call   0x1400062b0
   14000283d:	mov    rax,rdi
   140002840:	mov    rbx,QWORD PTR [rsp+0x30]
   140002845:	add    rsp,0x20
   140002849:	pop    rdi
   14000284a:	ret    
   14000284b:	int3   
   14000284c:	int3   
   14000284d:	int3   
   14000284e:	int3   
   14000284f:	int3   
   140002850:	int3   
   140002851:	int3   
   140002852:	int3   
   140002853:	int3   
   140002854:	mov    rax,rsp
   140002857:	mov    QWORD PTR [rax+0x8],rbx
   14000285b:	mov    QWORD PTR [rax+0x10],rbp
   14000285f:	mov    QWORD PTR [rax+0x18],rsi
   140002863:	mov    QWORD PTR [rax+0x20],rdi
   140002867:	push   r14
   140002869:	sub    rsp,0x20
   14000286d:	and    QWORD PTR [rcx],0x0
   140002871:	mov    rbp,rdx
   140002874:	mov    rsi,rcx
   140002877:	lea    rdx,[rip+0x60d2]        # 0x140008950
   14000287e:	mov    ecx,0x20
   140002883:	call   0x1400067ac
   140002888:	mov    rbx,rax
   14000288b:	test   rax,rax
   14000288e:	je     0x1400028f2
   140002890:	mov    rbp,QWORD PTR [rbp+0x0]
   140002894:	mov    r14,QWORD PTR [rip+0x8e1d]        # 0x14000b6b8
   14000289b:	mov    DWORD PTR [rax+0xc],0x1
   1400028a2:	lea    rax,[rip+0x5e27]        # 0x1400086d0
   1400028a9:	mov    QWORD PTR [rbx],rax
   1400028ac:	test   r14,r14
   1400028af:	je     0x1400028c6
   1400028b1:	mov    rax,QWORD PTR [r14]
   1400028b4:	mov    rdi,QWORD PTR [rax+0x8]
   1400028b8:	mov    rcx,rdi
   1400028bb:	call   QWORD PTR [rip+0x5a77]        # 0x140008338
   1400028c1:	mov    rcx,r14
   1400028c4:	call   rdi
   1400028c6:	mov    DWORD PTR [rbx+0x10],0x3fffffff
   1400028cd:	lea    rax,[rip+0x5fc4]        # 0x140008898
   1400028d4:	mov    QWORD PTR [rbx],rax
   1400028d7:	mov    QWORD PTR [rbx+0x18],rbp
   1400028db:	mov    DWORD PTR [rbx+0xc],0x2
   1400028e2:	mov    rcx,QWORD PTR [rsi]
   1400028e5:	test   rcx,rcx
   1400028e8:	je     0x1400028ef
   1400028ea:	call   0x140001d80
   1400028ef:	mov    QWORD PTR [rsi],rbx
   1400028f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400028f7:	mov    rax,rsi
   1400028fa:	mov    rsi,QWORD PTR [rsp+0x40]
   1400028ff:	mov    rbp,QWORD PTR [rsp+0x38]
   140002904:	mov    rdi,QWORD PTR [rsp+0x48]
   140002909:	add    rsp,0x20
   14000290d:	pop    r14
   14000290f:	ret    
   140002910:	int3   
   140002911:	int3   
   140002912:	int3   
   140002913:	int3   
   140002914:	int3   
   140002915:	int3   
   140002916:	int3   
   140002917:	int3   
   140002918:	mov    QWORD PTR [rsp+0x8],rbx
   14000291d:	mov    QWORD PTR [rsp+0x10],rbp
   140002922:	mov    QWORD PTR [rsp+0x18],rsi
   140002927:	push   rdi
   140002928:	sub    rsp,0x20
   14000292c:	and    QWORD PTR [rcx],0x0
   140002930:	lea    rdx,[rip+0x6019]        # 0x140008950
   140002937:	mov    rdi,rcx
   14000293a:	mov    ecx,0x38
   14000293f:	call   0x1400067ac
   140002944:	test   rax,rax
   140002947:	je     0x140002974
   140002949:	mov    rcx,rax
   14000294c:	call   0x140002994
   140002951:	mov    rsi,QWORD PTR [rdi]
   140002954:	mov    rbp,rax
   140002957:	test   rsi,rsi
   14000295a:	je     0x140002971
   14000295c:	mov    rdx,QWORD PTR [rsi]
   14000295f:	mov    rbx,QWORD PTR [rdx+0x10]
   140002963:	mov    rcx,rbx
   140002966:	call   QWORD PTR [rip+0x59cc]        # 0x140008338
   14000296c:	mov    rcx,rsi
   14000296f:	call   rbx
   140002971:	mov    QWORD PTR [rdi],rbp
   140002974:	mov    rbx,QWORD PTR [rsp+0x30]
   140002979:	mov    rax,rdi
   14000297c:	mov    rbp,QWORD PTR [rsp+0x38]
   140002981:	mov    rsi,QWORD PTR [rsp+0x40]
   140002986:	add    rsp,0x20
   14000298a:	pop    rdi
   14000298b:	ret    
   14000298c:	int3   
   14000298d:	int3   
   14000298e:	int3   
   14000298f:	int3   
   140002990:	int3   
   140002991:	int3   
   140002992:	int3   
   140002993:	int3   
   140002994:	mov    r11,rsp
   140002997:	mov    QWORD PTR [r11+0x10],rbx
   14000299b:	mov    QWORD PTR [r11+0x18],rsi
   14000299f:	mov    QWORD PTR [r11+0x20],rdi
   1400029a3:	push   r14
   1400029a5:	sub    rsp,0x20
   1400029a9:	and    QWORD PTR [r11+0x8],0x0
   1400029ae:	lea    r14,[rcx+0x20]
   1400029b2:	lea    rax,[rip+0x5c1f]        # 0x1400085d8
   1400029b9:	mov    rsi,rcx
   1400029bc:	mov    QWORD PTR [rcx+0x10],rax
   1400029c0:	lea    rdx,[r11+0x8]
   1400029c4:	and    QWORD PTR [r14],0x0
   1400029c8:	xor    ecx,ecx
   1400029ca:	call   QWORD PTR [rip+0x5670]        # 0x140008040
   1400029d0:	test   eax,eax
   1400029d2:	js     0x140002a18
   1400029d4:	mov    rdi,QWORD PTR [r14]
   1400029d7:	test   rdi,rdi
   1400029da:	je     0x1400029f5
   1400029dc:	and    QWORD PTR [r14],0x0
   1400029e0:	mov    rax,QWORD PTR [rdi]
   1400029e3:	mov    rbx,QWORD PTR [rax+0x10]
   1400029e7:	mov    rcx,rbx
   1400029ea:	call   QWORD PTR [rip+0x5948]        # 0x140008338
   1400029f0:	mov    rcx,rdi
   1400029f3:	call   rbx
   1400029f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400029fa:	mov    rax,QWORD PTR [rbx]
   1400029fd:	mov    rdi,QWORD PTR [rax]
   140002a00:	mov    rcx,rdi
   140002a03:	call   QWORD PTR [rip+0x592f]        # 0x140008338
   140002a09:	mov    r8,r14
   140002a0c:	lea    rdx,[rip+0x5ead]        # 0x1400088c0
   140002a13:	mov    rcx,rbx
   140002a16:	call   rdi
   140002a18:	mov    rdi,QWORD PTR [rsp+0x30]
   140002a1d:	test   rdi,rdi
   140002a20:	je     0x140002a3d
   140002a22:	and    QWORD PTR [rsp+0x30],0x0
   140002a28:	mov    rax,QWORD PTR [rdi]
   140002a2b:	mov    rbx,QWORD PTR [rax+0x10]
   140002a2f:	mov    rcx,rbx
   140002a32:	call   QWORD PTR [rip+0x5900]        # 0x140008338
   140002a38:	mov    rcx,rdi
   140002a3b:	call   rbx
   140002a3d:	mov    rdi,QWORD PTR [rip+0x8c74]        # 0x14000b6b8
   140002a44:	lea    rax,[rip+0x5c15]        # 0x140008660
   140002a4b:	mov    QWORD PTR [rsi],rax
   140002a4e:	lea    rax,[rip+0x5c5b]        # 0x1400086b0
   140002a55:	mov    QWORD PTR [rsi+0x8],rax
   140002a59:	lea    rax,[rip+0x5ef8]        # 0x140008958
   140002a60:	mov    QWORD PTR [rsi+0x10],rax
   140002a64:	mov    QWORD PTR [rsi+0x30],0x1
   140002a6c:	test   rdi,rdi
   140002a6f:	je     0x140002a86
   140002a71:	mov    rax,QWORD PTR [rdi]
   140002a74:	mov    rbx,QWORD PTR [rax+0x8]
   140002a78:	mov    rcx,rbx
   140002a7b:	call   QWORD PTR [rip+0x58b7]        # 0x140008338
   140002a81:	mov    rcx,rdi
   140002a84:	call   rbx
   140002a86:	mov    rbx,QWORD PTR [rsp+0x38]
   140002a8b:	lea    rax,[rip+0x5dc6]        # 0x140008858
   140002a92:	mov    rdi,QWORD PTR [rsp+0x48]
   140002a97:	mov    QWORD PTR [rsi],rax
   140002a9a:	lea    rax,[rip+0x5c0f]        # 0x1400086b0
   140002aa1:	mov    QWORD PTR [rsi+0x8],rax
   140002aa5:	lea    rax,[rip+0x5eac]        # 0x140008958
   140002aac:	mov    QWORD PTR [rsi+0x10],rax
   140002ab0:	mov    rax,rsi
   140002ab3:	mov    rsi,QWORD PTR [rsp+0x40]
   140002ab8:	add    rsp,0x20
   140002abc:	pop    r14
   140002abe:	ret    
   140002abf:	int3   
   140002ac0:	int3   
   140002ac1:	int3   
   140002ac2:	int3   
   140002ac3:	int3   
   140002ac4:	int3   
   140002ac5:	int3   
   140002ac6:	int3   
   140002ac7:	int3   
   140002ac8:	int3   
   140002ac9:	int3   
   140002aca:	int3   
   140002acb:	int3   
   140002acc:	int3   
   140002acd:	int3   
   140002ace:	int3   
   140002acf:	int3   
   140002ad0:	mov    QWORD PTR [rsp+0x8],rbx
   140002ad5:	mov    QWORD PTR [rsp+0x10],rbp
   140002ada:	mov    QWORD PTR [rsp+0x18],rsi
   140002adf:	push   rdi
   140002ae0:	sub    rsp,0x20
   140002ae4:	mov    rdi,rcx
   140002ae7:	mov    ebp,edx
   140002ae9:	mov    rcx,QWORD PTR [rcx+0x30]
   140002aed:	test   rcx,rcx
   140002af0:	jns    0x140002afa
   140002af2:	add    rcx,rcx
   140002af5:	call   0x140001d80
   140002afa:	mov    rsi,QWORD PTR [rdi+0x20]
   140002afe:	test   rsi,rsi
   140002b01:	je     0x140002b1d
   140002b03:	and    QWORD PTR [rdi+0x20],0x0
   140002b08:	mov    rax,QWORD PTR [rsi]
   140002b0b:	mov    rbx,QWORD PTR [rax+0x10]
   140002b0f:	mov    rcx,rbx
   140002b12:	call   QWORD PTR [rip+0x5820]        # 0x140008338
   140002b18:	mov    rcx,rsi
   140002b1b:	call   rbx
   140002b1d:	test   bpl,0x1
   140002b21:	je     0x140002b2b
   140002b23:	mov    rcx,rdi
   140002b26:	call   0x1400062b0
   140002b2b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002b30:	mov    rax,rdi
   140002b33:	mov    rbp,QWORD PTR [rsp+0x38]
   140002b38:	mov    rsi,QWORD PTR [rsp+0x40]
   140002b3d:	add    rsp,0x20
   140002b41:	pop    rdi
   140002b42:	ret    
   140002b43:	int3   
   140002b44:	int3   
   140002b45:	int3   
   140002b46:	int3   
   140002b47:	int3   
   140002b48:	int3   
   140002b49:	int3   
   140002b4a:	int3   
   140002b4b:	int3   
   140002b4c:	int3   
   140002b4d:	int3   
   140002b4e:	int3   
   140002b4f:	int3   
   140002b50:	mov    QWORD PTR [rsp+0x18],rbx
   140002b55:	mov    QWORD PTR [rsp+0x20],rbp
   140002b5a:	push   rsi
   140002b5b:	push   rdi
   140002b5c:	push   r14
   140002b5e:	sub    rsp,0x70
   140002b62:	mov    rax,QWORD PTR [rip+0x849f]        # 0x14000b008
   140002b69:	xor    rax,rsp
   140002b6c:	mov    QWORD PTR [rsp+0x60],rax
   140002b71:	and    QWORD PTR [rdx],0x0
   140002b75:	mov    rsi,rdx
   140002b78:	mov    rbx,rcx
   140002b7b:	call   QWORD PTR [rip+0x5677]        # 0x1400081f8
   140002b81:	test   eax,eax
   140002b83:	jne    0x140002c3e
   140002b89:	lea    rdx,[rsp+0x34]
   140002b8e:	mov    rcx,rbx
   140002b91:	call   QWORD PTR [rip+0x5671]        # 0x140008208
   140002b97:	test   eax,eax
   140002b99:	js     0x140002c3e
   140002b9f:	cmp    DWORD PTR [rsp+0x34],0x1
   140002ba4:	je     0x140002c3e
   140002baa:	xor    edx,edx
   140002bac:	mov    rcx,rbx
   140002baf:	call   QWORD PTR [rip+0x5633]        # 0x1400081e8
   140002bb5:	mov    rbp,rax
   140002bb8:	lea    rdi,[rip+0x7109]        # 0x140009cc8
   140002bbf:	lea    r14,[rip+0x710a]        # 0x140009cd0
   140002bc6:	cmp    rdi,r14
   140002bc9:	jae    0x140002c2d
   140002bcb:	mov    rbx,QWORD PTR [rdi]
   140002bce:	test   rbx,rbx
   140002bd1:	je     0x140002c02
   140002bd3:	mov    rbx,QWORD PTR [rbx+0x8]
   140002bd7:	mov    rcx,rbx
   140002bda:	call   QWORD PTR [rip+0x5758]        # 0x140008338
   140002be0:	call   rbx
   140002be2:	mov    rcx,rbp
   140002be5:	sub    rax,rbp
   140002be8:	movzx  edx,WORD PTR [rcx]
   140002beb:	movzx  r8d,WORD PTR [rcx+rax*1]
   140002bf0:	sub    edx,r8d
   140002bf3:	jne    0x140002bfe
   140002bf5:	add    rcx,0x2
   140002bf9:	test   r8d,r8d
   140002bfc:	jne    0x140002be8
   140002bfe:	test   edx,edx
   140002c00:	je     0x140002c08
   140002c02:	add    rdi,0x8
   140002c06:	jmp    0x140002bc6
   140002c08:	mov    r9,QWORD PTR [rdi]
   140002c0b:	lea    r8,[rip+0x5d2e]        # 0x140008940
   140002c12:	lea    rdx,[rsp+0x30]
   140002c17:	mov    DWORD PTR [rsp+0x30],0x2
   140002c1f:	mov    QWORD PTR [rsp+0x20],rsi
   140002c24:	call   0x140001894
   140002c29:	mov    ebx,eax
   140002c2b:	jmp    0x140002c7b
   140002c2d:	mov    ebx,0x80040111
   140002c32:	xor    edx,edx
   140002c34:	mov    ecx,ebx
   140002c36:	call   QWORD PTR [rip+0x5564]        # 0x1400081a0
   140002c3c:	jmp    0x140002c7b
   140002c3e:	movups xmm0,XMMWORD PTR [rip+0x595b]        # 0x1400085a0
   140002c45:	mov    ebx,0x80070057
   140002c4a:	lea    r8,[rsp+0x38]
   140002c4f:	movups xmm1,XMMWORD PTR [rip+0x595a]        # 0x1400085b0
   140002c56:	mov    edx,0x13
   140002c5b:	mov    ecx,ebx
   140002c5d:	movups XMMWORD PTR [rsp+0x38],xmm0
   140002c62:	movsd  xmm0,QWORD PTR [rip+0x5956]        # 0x1400085c0
   140002c6a:	movsd  QWORD PTR [rsp+0x58],xmm0
   140002c70:	movups XMMWORD PTR [rsp+0x48],xmm1
   140002c75:	call   QWORD PTR [rip+0x552d]        # 0x1400081a8
   140002c7b:	mov    eax,ebx
   140002c7d:	mov    rcx,QWORD PTR [rsp+0x60]
   140002c82:	xor    rcx,rsp
   140002c85:	call   0x1400066a0
   140002c8a:	lea    r11,[rsp+0x70]
   140002c8f:	mov    rbx,QWORD PTR [r11+0x30]
   140002c93:	mov    rbp,QWORD PTR [r11+0x38]
   140002c97:	mov    rsp,r11
   140002c9a:	pop    r14
   140002c9c:	pop    rdi
   140002c9d:	pop    rsi
   140002c9e:	ret    
   140002c9f:	int3   
   140002ca0:	int3   
   140002ca1:	int3   
   140002ca2:	int3   
   140002ca3:	int3   
   140002ca4:	int3   
   140002ca5:	int3   
   140002ca6:	int3   
   140002ca7:	int3   
   140002ca8:	int3   
   140002ca9:	int3   
   140002caa:	int3   
   140002cab:	int3   
   140002cac:	int3   
   140002cad:	int3   
   140002cae:	int3   
   140002caf:	int3   
   140002cb0:	sub    rcx,0x10
   140002cb4:	jmp    0x140001fc0
   140002cb9:	int3   
   140002cba:	int3   
   140002cbb:	int3   
   140002cbc:	int3   
   140002cbd:	int3   
   140002cbe:	int3   
   140002cbf:	int3   
   140002cc0:	sub    rcx,0x8
   140002cc4:	jmp    0x140001f80
   140002cc9:	int3   
   140002cca:	int3   
   140002ccb:	int3   
   140002ccc:	int3   
   140002ccd:	int3   
   140002cce:	int3   
   140002ccf:	int3   
   140002cd0:	sub    rcx,0x8
   140002cd4:	jmp    0x140001e00
   140002cd9:	int3   
   140002cda:	int3   
   140002cdb:	int3   
   140002cdc:	int3   
   140002cdd:	int3   
   140002cde:	int3   
   140002cdf:	int3   
   140002ce0:	sub    rcx,0x10
   140002ce4:	jmp    0x140001f80
   140002ce9:	int3   
   140002cea:	int3   
   140002ceb:	int3   
   140002cec:	int3   
   140002ced:	int3   
   140002cee:	int3   
   140002cef:	int3   
   140002cf0:	sub    rcx,0x10
   140002cf4:	jmp    0x140001e00
   140002cf9:	int3   
   140002cfa:	int3   
   140002cfb:	int3   
   140002cfc:	int3   
   140002cfd:	int3   
   140002cfe:	int3   
   140002cff:	int3   
   140002d00:	sub    rcx,0x8
   140002d04:	jmp    0x140001fc0
   140002d09:	int3   
   140002d0a:	int3   
   140002d0b:	int3   
   140002d0c:	int3   
   140002d0d:	int3   
   140002d0e:	int3   
   140002d0f:	int3   
   140002d10:	mov    QWORD PTR [rsp+0x8],rbx
   140002d15:	push   rdi
   140002d16:	sub    rsp,0x20
   140002d1a:	mov    eax,DWORD PTR [rip+0x8980]        # 0x14000b6a0
   140002d20:	mov    rbx,rdx
   140002d23:	mov    rdi,rcx
   140002d26:	test   al,0x1
   140002d28:	jne    0x140002d5b
   140002d2a:	or     eax,0x1
   140002d2d:	lea    rcx,[rip+0x423c]        # 0x140006f70
   140002d34:	mov    DWORD PTR [rip+0x8966],eax        # 0x14000b6a0
   140002d3a:	lea    rax,[rip+0x8967]        # 0x14000b6a8
   140002d41:	mov    QWORD PTR [rip+0x8970],rax        # 0x14000b6b8
   140002d48:	lea    rax,[rip+0x5a19]        # 0x140008768
   140002d4f:	mov    QWORD PTR [rip+0x8952],rax        # 0x14000b6a8
   140002d56:	call   0x140006774
   140002d5b:	mov    r8,rbx
   140002d5e:	mov    rdx,rdi
   140002d61:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d66:	add    rsp,0x20
   140002d6a:	pop    rdi
   140002d6b:	jmp    0x140002228
   140002d70:	int3   
   140002d71:	int3   
   140002d72:	int3   
   140002d73:	int3   
   140002d74:	int3   
   140002d75:	int3   
   140002d76:	int3   
   140002d77:	int3   
   140002d78:	int3   
   140002d79:	int3   
   140002d7a:	int3   
   140002d7b:	int3   
   140002d7c:	int3   
   140002d7d:	int3   
   140002d7e:	int3   
   140002d7f:	int3   
   140002d80:	mov    QWORD PTR [rsp+0x8],rbx
   140002d85:	mov    QWORD PTR [rsp+0x10],rsi
   140002d8a:	push   rdi
   140002d8b:	sub    rsp,0x30
   140002d8f:	mov    eax,DWORD PTR [rip+0x890b]        # 0x14000b6a0
   140002d95:	mov    rbx,r8
   140002d98:	mov    rsi,rdx
   140002d9b:	mov    rdi,rcx
   140002d9e:	test   al,0x1
   140002da0:	jne    0x140002dd3
   140002da2:	or     eax,0x1
   140002da5:	lea    rcx,[rip+0x41c4]        # 0x140006f70
   140002dac:	mov    DWORD PTR [rip+0x88ee],eax        # 0x14000b6a0
   140002db2:	lea    rax,[rip+0x88ef]        # 0x14000b6a8
   140002db9:	mov    QWORD PTR [rip+0x88f8],rax        # 0x14000b6b8
   140002dc0:	lea    rax,[rip+0x59a1]        # 0x140008768
   140002dc7:	mov    QWORD PTR [rip+0x88da],rax        # 0x14000b6a8
   140002dce:	call   0x140006774
   140002dd3:	and    QWORD PTR [rbx],0x0
   140002dd7:	lea    r9,[rip+0x6ee2]        # 0x140009cc0
   140002dde:	lea    rdx,[rip+0x6edb]        # 0x140009cc0
   140002de5:	cmp    r9,rdx
   140002de8:	jae    0x140002e2d
   140002dea:	mov    rax,QWORD PTR [r9]
   140002ded:	test   rax,rax
   140002df0:	je     0x140002e08
   140002df2:	mov    rcx,QWORD PTR [rax+0x8]
   140002df6:	mov    rax,QWORD PTR [rcx]
   140002df9:	cmp    rax,QWORD PTR [rdi]
   140002dfc:	jne    0x140002e08
   140002dfe:	mov    rax,QWORD PTR [rcx+0x8]
   140002e02:	cmp    rax,QWORD PTR [rdi+0x8]
   140002e06:	je     0x140002e0e
   140002e08:	add    r9,0x8
   140002e0c:	jmp    0x140002de5
   140002e0e:	mov    r9,QWORD PTR [r9]
   140002e11:	lea    rdx,[rsp+0x50]
   140002e16:	mov    r8,rsi
   140002e19:	mov    DWORD PTR [rsp+0x50],0x1
   140002e21:	mov    QWORD PTR [rsp+0x20],rbx
   140002e26:	call   0x140001894
   140002e2b:	jmp    0x140002e32
   140002e2d:	mov    eax,0x80040111
   140002e32:	mov    rbx,QWORD PTR [rsp+0x40]
   140002e37:	mov    rsi,QWORD PTR [rsp+0x48]
   140002e3c:	add    rsp,0x30
   140002e40:	pop    rdi
   140002e41:	ret    
   140002e42:	int3   
   140002e43:	int3   
   140002e44:	int3   
   140002e45:	int3   
   140002e46:	int3   
   140002e47:	int3   
   140002e48:	int3   
   140002e49:	int3   
   140002e4a:	int3   
   140002e4b:	int3   
   140002e4c:	int3   
   140002e4d:	int3   
   140002e4e:	int3   
   140002e4f:	int3   
   140002e50:	rex push rbx
   140002e52:	sub    rsp,0x20
   140002e56:	mov    eax,DWORD PTR [rip+0x8844]        # 0x14000b6a0
   140002e5c:	lea    rbx,[rip+0x8845]        # 0x14000b6a8
   140002e63:	test   al,0x1
   140002e65:	jne    0x140002e91
   140002e67:	or     eax,0x1
   140002e6a:	mov    QWORD PTR [rip+0x8847],rbx        # 0x14000b6b8
   140002e71:	mov    DWORD PTR [rip+0x8829],eax        # 0x14000b6a0
   140002e77:	lea    rcx,[rip+0x40f2]        # 0x140006f70
   140002e7e:	lea    rax,[rip+0x58e3]        # 0x140008768
   140002e85:	mov    QWORD PTR [rip+0x881c],rax        # 0x14000b6a8
   140002e8c:	call   0x140006774
   140002e91:	xor    r8d,r8d
   140002e94:	mov    rcx,rbx
   140002e97:	call   0x140001768
   140002e9c:	xor    ecx,ecx
   140002e9e:	test   al,al
   140002ea0:	sete   cl
   140002ea3:	mov    eax,ecx
   140002ea5:	add    rsp,0x20
   140002ea9:	pop    rbx
   140002eaa:	ret    
   140002eab:	int3   
   140002eac:	int3   
   140002ead:	int3   
   140002eae:	int3   
   140002eaf:	int3   
   140002eb0:	int3   
   140002eb1:	int3   
   140002eb2:	int3   
   140002eb3:	int3   
   140002eb4:	mov    QWORD PTR [rsp+0x18],r8
   140002eb9:	mov    QWORD PTR [rsp+0x20],r9
   140002ebe:	push   rbx
   140002ebf:	push   rsi
   140002ec0:	push   rdi
   140002ec1:	sub    rsp,0x20
   140002ec5:	mov    r10,rdx
   140002ec8:	lea    r9,[rsp+0x58]
   140002ecd:	sub    r10,rcx
   140002ed0:	mov    rsi,rdx
   140002ed3:	sar    r10,1
   140002ed6:	mov    rbx,rcx
   140002ed9:	lea    rax,[r10-0x1]
   140002edd:	cmp    rax,0x7ffffffe
   140002ee3:	ja     0x140002f07
   140002ee5:	lea    rdi,[r10-0x1]
   140002ee9:	mov    rdx,rdi
   140002eec:	call   QWORD PTR [rip+0x540e]        # 0x140008300
   140002ef2:	xor    ecx,ecx
   140002ef4:	test   eax,eax
   140002ef6:	js     0x140002f01
   140002ef8:	cdqe   
   140002efa:	cmp    rax,rdi
   140002efd:	ja     0x140002f01
   140002eff:	jne    0x140002f11
   140002f01:	mov    WORD PTR [rbx+rdi*2],cx
   140002f05:	jmp    0x140002f11
   140002f07:	xor    ecx,ecx
   140002f09:	test   r10,r10
   140002f0c:	je     0x140002f11
   140002f0e:	mov    WORD PTR [rbx],cx
   140002f11:	cmp    rsi,rbx
   140002f14:	je     0x140002f27
   140002f16:	or     rax,0xffffffffffffffff
   140002f1a:	inc    rax
   140002f1d:	cmp    WORD PTR [rbx+rax*2],cx
   140002f21:	jne    0x140002f1a
   140002f23:	lea    rbx,[rbx+rax*2]
   140002f27:	mov    rax,rbx
   140002f2a:	add    rsp,0x20
   140002f2e:	pop    rdi
   140002f2f:	pop    rsi
   140002f30:	pop    rbx
   140002f31:	ret    
   140002f32:	int3   
   140002f33:	int3   
   140002f34:	int3   
   140002f35:	int3   
   140002f36:	int3   
   140002f37:	int3   
   140002f38:	mov    QWORD PTR [rsp+0x20],rbx
   140002f3d:	push   rbp
   140002f3e:	push   rsi
   140002f3f:	push   rdi
   140002f40:	push   r14
   140002f42:	push   r15
   140002f44:	sub    rsp,0x250
   140002f4b:	mov    rax,QWORD PTR [rip+0x80b6]        # 0x14000b008
   140002f52:	xor    rax,rsp
   140002f55:	mov    QWORD PTR [rsp+0x240],rax
   140002f5d:	mov    r14,rcx
   140002f60:	lea    rsi,[rip+0x5c61]        # 0x140008bc8
   140002f67:	mov    ecx,DWORD PTR [r8]
   140002f6a:	xor    r15d,r15d
   140002f6d:	mov    rbx,r8
   140002f70:	mov    rdi,rdx
   140002f73:	test   ecx,ecx
   140002f75:	je     0x140002faf
   140002f77:	sub    ecx,0x1
   140002f7a:	je     0x140002fa6
   140002f7c:	sub    ecx,0x1
   140002f7f:	je     0x140002f9d
   140002f81:	sub    ecx,0x1
   140002f84:	je     0x140002f94
   140002f86:	cmp    ecx,0x1
   140002f89:	jne    0x140002fb6
   140002f8b:	lea    rsi,[rip+0x5c7e]        # 0x140008c10
   140002f92:	jmp    0x140002fb6
   140002f94:	lea    rsi,[rip+0x5c6d]        # 0x140008c08
   140002f9b:	jmp    0x140002fb6
   140002f9d:	lea    rsi,[rip+0x5c4c]        # 0x140008bf0
   140002fa4:	jmp    0x140002fb6
   140002fa6:	lea    rsi,[rip+0x5c33]        # 0x140008be0
   140002fad:	jmp    0x140002fb6
   140002faf:	lea    rsi,[rip+0x5c1a]        # 0x140008bd0
   140002fb6:	mov    r8d,DWORD PTR [r8+0x4]
   140002fba:	lea    rax,[rsp+0x40]
   140002fbf:	mov    QWORD PTR [rsp+0x30],r15
   140002fc4:	mov    r9d,0x400
   140002fca:	mov    DWORD PTR [rsp+0x28],0x100
   140002fd2:	xor    edx,edx
   140002fd4:	mov    ecx,0x1200
   140002fd9:	mov    QWORD PTR [rsp+0x20],rax
   140002fde:	mov    WORD PTR [rsp+0x40],r15w
   140002fe4:	call   QWORD PTR [rip+0x50d6]        # 0x1400080c0
   140002fea:	mov    r9,QWORD PTR [rbx+0x30]
   140002fee:	lea    rdi,[r14+rdi*2]
   140002ff2:	mov    rax,QWORD PTR [rbx+0x80]
   140002ff9:	mov    rdx,rdi
   140002ffc:	mov    rcx,r14
   140002fff:	test   r9,r9
   140003002:	je     0x140003027
   140003004:	mov    QWORD PTR [rsp+0x30],rax
   140003009:	lea    r8,[rip+0x5c10]        # 0x140008c20
   140003010:	mov    rax,QWORD PTR [rbx+0x78]
   140003014:	mov    QWORD PTR [rsp+0x28],rax
   140003019:	mov    eax,DWORD PTR [rbx+0x38]
   14000301c:	mov    DWORD PTR [rsp+0x20],eax
   140003020:	call   0x140002eb4
   140003025:	jmp    0x14000303c
   140003027:	mov    r9,QWORD PTR [rbx+0x78]
   14000302b:	lea    r8,[rip+0x5c16]        # 0x140008c48
   140003032:	mov    QWORD PTR [rsp+0x20],rax
   140003037:	call   0x140002eb4
   14000303c:	mov    r9,QWORD PTR [rbx+0x88]
   140003043:	mov    rbp,rax
   140003046:	test   r9,r9
   140003049:	je     0x140003060
   14000304b:	lea    r8,[rip+0x5c0e]        # 0x140008c60
   140003052:	mov    rdx,rdi
   140003055:	mov    rcx,rax
   140003058:	call   0x140002eb4
   14000305d:	mov    rbp,rax
   140003060:	call   QWORD PTR [rip+0x5082]        # 0x1400080e8
   140003066:	lea    rcx,[rsp+0x40]
   14000306b:	mov    r9,rsi
   14000306e:	mov    QWORD PTR [rsp+0x38],rcx
   140003073:	lea    r8,[rip+0x5c06]        # 0x140008c80
   14000307a:	mov    ecx,DWORD PTR [rbx+0x4]
   14000307d:	mov    rdx,rdi
   140003080:	mov    DWORD PTR [rsp+0x30],ecx
   140003084:	mov    rcx,rbp
   140003087:	mov    DWORD PTR [rsp+0x28],eax
   14000308b:	mov    eax,DWORD PTR [rbx+0x3c]
   14000308e:	mov    DWORD PTR [rsp+0x20],eax
   140003092:	call   0x140002eb4
   140003097:	cmp    QWORD PTR [rbx+0x10],r15
   14000309b:	jne    0x1400030ad
   14000309d:	cmp    QWORD PTR [rbx+0x40],r15
   1400030a1:	jne    0x1400030ad
   1400030a3:	cmp    QWORD PTR [rbx+0x28],r15
   1400030a7:	je     0x14000313d
   1400030ad:	lea    r8,[rip+0x5c04]        # 0x140008cb8
   1400030b4:	mov    rdx,rdi
   1400030b7:	mov    rcx,rax
   1400030ba:	call   0x140002eb4
   1400030bf:	mov    r9,QWORD PTR [rbx+0x10]
   1400030c3:	test   r9,r9
   1400030c6:	je     0x1400030da
   1400030c8:	lea    r8,[rip+0x5bf9]        # 0x140008cc8
   1400030cf:	mov    rdx,rdi
   1400030d2:	mov    rcx,rax
   1400030d5:	call   0x140002eb4
   1400030da:	mov    r9,QWORD PTR [rbx+0x40]
   1400030de:	test   r9,r9
   1400030e1:	je     0x1400030f5
   1400030e3:	lea    r8,[rip+0x5bf6]        # 0x140008ce0
   1400030ea:	mov    rdx,rdi
   1400030ed:	mov    rcx,rax
   1400030f0:	call   0x140002eb4
   1400030f5:	mov    rcx,QWORD PTR [rbx+0x20]
   1400030f9:	mov    rdx,rdi
   1400030fc:	mov    r9,QWORD PTR [rbx+0x28]
   140003100:	test   rcx,rcx
   140003103:	je     0x14000311b
   140003105:	mov    QWORD PTR [rsp+0x20],rcx
   14000310a:	lea    r8,[rip+0x5bf7]        # 0x140008d08
   140003111:	mov    rcx,rax
   140003114:	call   0x140002eb4
   140003119:	jmp    0x14000313d
   14000311b:	mov    rcx,rax
   14000311e:	test   r9,r9
   140003121:	je     0x140003131
   140003123:	lea    r8,[rip+0x5bf6]        # 0x140008d20
   14000312a:	call   0x140002eb4
   14000312f:	jmp    0x14000313d
   140003131:	lea    r8,[rip+0x5bf8]        # 0x140008d30
   140003138:	call   0x140002eb4
   14000313d:	xor    eax,eax
   14000313f:	mov    rcx,QWORD PTR [rsp+0x240]
   140003147:	xor    rcx,rsp
   14000314a:	call   0x1400066a0
   14000314f:	mov    rbx,QWORD PTR [rsp+0x298]
   140003157:	add    rsp,0x250
   14000315e:	pop    r15
   140003160:	pop    r14
   140003162:	pop    rdi
   140003163:	pop    rsi
   140003164:	pop    rbp
   140003165:	ret    
   140003166:	int3   
   140003167:	int3   
   140003168:	int3   
   140003169:	int3   
   14000316a:	int3   
   14000316b:	int3   
   14000316c:	mov    DWORD PTR [rip+0x85ee],ecx        # 0x14000b760
   140003172:	mov    eax,0x1
   140003177:	lock xadd DWORD PTR [rip+0x85b9],eax        # 0x14000b738
   14000317f:	inc    eax
   140003181:	ret    
   140003182:	int3   
   140003183:	int3   
   140003184:	int3   
   140003185:	int3   
   140003186:	int3   
   140003187:	int3   
   140003188:	mov    DWORD PTR [rip+0x854a],ecx        # 0x14000b6d8
   14000318e:	mov    eax,0x1
   140003193:	lock xadd DWORD PTR [rip+0x85ad],eax        # 0x14000b748
   14000319b:	inc    eax
   14000319d:	ret    
   14000319e:	int3   
   14000319f:	int3   
   1400031a0:	int3   
   1400031a1:	int3   
   1400031a2:	int3   
   1400031a3:	int3   
   1400031a4:	mov    DWORD PTR [rip+0x85ae],ecx        # 0x14000b758
   1400031aa:	mov    eax,0x1
   1400031af:	lock xadd DWORD PTR [rip+0x8529],eax        # 0x14000b6e0
   1400031b7:	inc    eax
   1400031b9:	ret    
   1400031ba:	int3   
   1400031bb:	int3   
   1400031bc:	int3   
   1400031bd:	int3   
   1400031be:	int3   
   1400031bf:	int3   
   1400031c0:	mov    DWORD PTR [rip+0x8516],ecx        # 0x14000b6dc
   1400031c6:	mov    eax,0x1
   1400031cb:	lock xadd DWORD PTR [rip+0x8511],eax        # 0x14000b6e4
   1400031d3:	inc    eax
   1400031d5:	ret    
   1400031d6:	int3   
   1400031d7:	int3   
   1400031d8:	int3   
   1400031d9:	int3   
   1400031da:	int3   
   1400031db:	int3   
   1400031dc:	int3   
   1400031dd:	int3   
   1400031de:	int3   
   1400031df:	int3   
   1400031e0:	mov    DWORD PTR [rip+0x8542],ecx        # 0x14000b728
   1400031e6:	mov    eax,0x1
   1400031eb:	ret    
   1400031ec:	int3   
   1400031ed:	int3   
   1400031ee:	int3   
   1400031ef:	int3   
   1400031f0:	int3   
   1400031f1:	int3   
   1400031f2:	int3   
   1400031f3:	int3   
   1400031f4:	int3   
   1400031f5:	int3   
   1400031f6:	int3   
   1400031f7:	int3   
   1400031f8:	int3   
   1400031f9:	int3   
   1400031fa:	int3   
   1400031fb:	int3   
   1400031fc:	int3   
   1400031fd:	int3   
   1400031fe:	int3   
   1400031ff:	int3   
   140003200:	mov    QWORD PTR [rsp+0x8],rbx
   140003205:	push   rsi
   140003206:	sub    rsp,0x150
   14000320d:	mov    rax,QWORD PTR [rip+0x7df4]        # 0x14000b008
   140003214:	xor    rax,rsp
   140003217:	mov    QWORD PTR [rsp+0x140],rax
   14000321f:	mov    al,BYTE PTR [rip+0x8537]        # 0x14000b75c
   140003225:	lea    rsi,[rip+0x8604]        # 0x14000b830
   14000322c:	test   al,al
   14000322e:	jne    0x1400032e4
   140003234:	mov    ebx,0x40
   140003239:	xor    edx,edx
   14000323b:	mov    r8d,ebx
   14000323e:	mov    rcx,rsi
   140003241:	call   0x140006e12
   140003246:	and    QWORD PTR [rsp+0x20],0x0
   14000324c:	lea    r8,[rsp+0x20]
   140003251:	lea    rdx,[rip+0xffffffffffffff88]        # 0x1400031e0
   140003258:	lea    ecx,[rbx-0x3a]
   14000325b:	call   QWORD PTR [rip+0x4e3f]        # 0x1400080a0
   140003261:	test   eax,eax
   140003263:	je     0x1400032dd
   140003265:	mov    rcx,QWORD PTR [rsp+0x20]
   14000326a:	lea    rdx,[rsp+0x30]
   14000326f:	mov    r8d,0x104
   140003275:	call   QWORD PTR [rip+0x4e2d]        # 0x1400080a8
   14000327b:	test   eax,eax
   14000327d:	je     0x1400032dd
   14000327f:	lea    rcx,[rsp+0x30]
   140003284:	or     rax,0xffffffffffffffff
   140003288:	inc    rax
   14000328b:	cmp    BYTE PTR [rcx+rax*1],0x0
   14000328f:	jne    0x140003288
   140003291:	lea    rdx,[rsp+0x30]
   140003296:	add    rdx,rax
   140003299:	jmp    0x1400032a4
   14000329b:	cmp    BYTE PTR [rdx-0x1],0x5c
   14000329f:	je     0x1400032ae
   1400032a1:	dec    rdx
   1400032a4:	lea    rax,[rsp+0x30]
   1400032a9:	cmp    rdx,rax
   1400032ac:	ja     0x14000329b
   1400032ae:	mov    rcx,rsi
   1400032b1:	sub    rdx,rsi
   1400032b4:	lea    rax,[rbx+0x7fffffbe]
   1400032bb:	test   rax,rax
   1400032be:	je     0x1400032d2
   1400032c0:	mov    al,BYTE PTR [rdx+rcx*1]
   1400032c3:	test   al,al
   1400032c5:	je     0x1400032d2
   1400032c7:	mov    BYTE PTR [rcx],al
   1400032c9:	inc    rcx
   1400032cc:	sub    rbx,0x1
   1400032d0:	jne    0x1400032b4
   1400032d2:	test   rbx,rbx
   1400032d5:	jne    0x1400032da
   1400032d7:	dec    rcx
   1400032da:	mov    BYTE PTR [rcx],0x0
   1400032dd:	mov    BYTE PTR [rip+0x8478],0x1        # 0x14000b75c
   1400032e4:	mov    rax,rsi
   1400032e7:	mov    rcx,QWORD PTR [rsp+0x140]
   1400032ef:	xor    rcx,rsp
   1400032f2:	call   0x1400066a0
   1400032f7:	mov    rbx,QWORD PTR [rsp+0x160]
   1400032ff:	add    rsp,0x150
   140003306:	pop    rsi
   140003307:	ret    
   140003308:	int3   
   140003309:	int3   
   14000330a:	int3   
   14000330b:	int3   
   14000330c:	int3   
   14000330d:	int3   
   14000330e:	int3   
   14000330f:	int3   
   140003310:	rex push rbx
   140003312:	sub    rsp,0x20
   140003316:	lea    rcx,[rip+0x5a1b]        # 0x140008d38
   14000331d:	call   QWORD PTR [rip+0x4d6d]        # 0x140008090
   140003323:	test   rax,rax
   140003326:	je     0x14000334b
   140003328:	lea    rdx,[rip+0x5a21]        # 0x140008d50
   14000332f:	mov    rcx,rax
   140003332:	call   QWORD PTR [rip+0x4d78]        # 0x1400080b0
   140003338:	mov    rbx,rax
   14000333b:	test   rax,rax
   14000333e:	je     0x14000334b
   140003340:	mov    rcx,rax
   140003343:	call   QWORD PTR [rip+0x4fef]        # 0x140008338
   140003349:	call   rbx
   14000334b:	add    rsp,0x20
   14000334f:	pop    rbx
   140003350:	ret    
   140003351:	int3   
   140003352:	int3   
   140003353:	int3   
   140003354:	int3   
   140003355:	int3   
   140003356:	int3   
   140003357:	int3   
   140003358:	int3   
   140003359:	int3   
   14000335a:	int3   
   14000335b:	int3   
   14000335c:	int3   
   14000335d:	int3   
   14000335e:	int3   
   14000335f:	int3   
   140003360:	mov    QWORD PTR [rsp+0x8],rbx
   140003365:	mov    QWORD PTR [rsp+0x10],rsi
   14000336a:	push   rdi
   14000336b:	sub    rsp,0x20
   14000336f:	mov    rdi,QWORD PTR [rip+0x83ca]        # 0x14000b740
   140003376:	xor    ebx,ebx
   140003378:	mov    esi,ecx
   14000337a:	test   rdi,rdi
   14000337d:	jne    0x1400033c6
   14000337f:	mov    rax,QWORD PTR [rip+0x83aa]        # 0x14000b730
   140003386:	test   rax,rax
   140003389:	jne    0x1400033a7
   14000338b:	xor    edx,edx
   14000338d:	lea    rcx,[rip+0x59a4]        # 0x140008d38
   140003394:	mov    r8d,0x800
   14000339a:	call   QWORD PTR [rip+0x4cf8]        # 0x140008098
   1400033a0:	mov    QWORD PTR [rip+0x8389],rax        # 0x14000b730
   1400033a7:	lea    rdx,[rip+0x59c2]        # 0x140008d70
   1400033ae:	mov    rcx,rax
   1400033b1:	call   QWORD PTR [rip+0x4cf9]        # 0x1400080b0
   1400033b7:	mov    QWORD PTR [rip+0x8382],rax        # 0x14000b740
   1400033be:	mov    rdi,rax
   1400033c1:	test   rax,rax
   1400033c4:	je     0x1400033d5
   1400033c6:	mov    rcx,rdi
   1400033c9:	call   QWORD PTR [rip+0x4f69]        # 0x140008338
   1400033cf:	mov    ecx,esi
   1400033d1:	call   rdi
   1400033d3:	mov    ebx,eax
   1400033d5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400033da:	mov    eax,ebx
   1400033dc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400033e1:	add    rsp,0x20
   1400033e5:	pop    rdi
   1400033e6:	ret    
   1400033e7:	int3   
   1400033e8:	int3   
   1400033e9:	int3   
   1400033ea:	int3   
   1400033eb:	int3   
   1400033ec:	int3   
   1400033ed:	int3   
   1400033ee:	int3   
   1400033ef:	int3   
   1400033f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400033f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400033fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400033ff:	push   rdi
   140003400:	sub    rsp,0x20
   140003404:	xor    al,al
   140003406:	mov    BYTE PTR [r8],0x0
   14000340a:	mov    rbp,r9
   14000340d:	mov    rbx,r8
   140003410:	mov    rsi,rdx
   140003413:	mov    rdi,rcx
   140003416:	test   rdx,rdx
   140003419:	je     0x1400034c6
   14000341f:	mov    rdx,QWORD PTR [rdx+0x10]
   140003423:	call   0x1400033f0
   140003428:	mov    rdx,QWORD PTR [rsi+0x20]
   14000342c:	xor    esi,esi
   14000342e:	test   rdx,rdx
   140003431:	je     0x1400034c6
   140003437:	cmp    DWORD PTR [rdx],esi
   140003439:	jne    0x14000344a
   14000343b:	lea    eax,[rsi+0x1]
   14000343e:	lock xadd DWORD PTR [rip+0x7c1a],eax        # 0x14000b060
   140003446:	inc    eax
   140003448:	mov    DWORD PTR [rdx],eax
   14000344a:	cmp    DWORD PTR [rdi+0x48],esi
   14000344d:	jne    0x140003460
   14000344f:	movups xmm0,XMMWORD PTR [rdx]
   140003452:	movups XMMWORD PTR [rdi+0x48],xmm0
   140003456:	movsd  xmm1,QWORD PTR [rdx+0x10]
   14000345b:	movsd  QWORD PTR [rdi+0x58],xmm1
   140003460:	movups xmm0,XMMWORD PTR [rdx]
   140003463:	or     rcx,0xffffffffffffffff
   140003467:	mov    rax,rcx
   14000346a:	movups XMMWORD PTR [rdi+0x60],xmm0
   14000346e:	movsd  xmm1,QWORD PTR [rdx+0x10]
   140003473:	movsd  QWORD PTR [rdi+0x70],xmm1
   140003478:	lea    rdi,[rbx+rbp*1]
   14000347c:	inc    rax
   14000347f:	cmp    BYTE PTR [rbx+rax*1],sil
   140003483:	jne    0x14000347c
   140003485:	add    rbx,rax
   140003488:	mov    rax,rdi
   14000348b:	sub    rax,rbx
   14000348e:	cmp    rax,0x2
   140003492:	jle    0x1400034c4
   140003494:	mov    BYTE PTR [rbx],0x5c
   140003497:	inc    rbx
   14000349a:	mov    rdx,QWORD PTR [rdx+0x8]
   14000349e:	inc    rcx
   1400034a1:	cmp    BYTE PTR [rdx+rcx*1],sil
   1400034a5:	jne    0x14000349e
   1400034a7:	inc    rcx
   1400034aa:	sub    rdi,rbx
   1400034ad:	cmp    rcx,rdi
   1400034b0:	cmovb  rdi,rcx
   1400034b4:	mov    rcx,rbx
   1400034b7:	mov    r8,rdi
   1400034ba:	call   0x140006e06
   1400034bf:	mov    BYTE PTR [rdi+rbx*1-0x1],sil
   1400034c4:	mov    al,0x1
   1400034c6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400034cb:	mov    rbp,QWORD PTR [rsp+0x38]
   1400034d0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400034d5:	add    rsp,0x20
   1400034d9:	pop    rdi
   1400034da:	ret    
   1400034db:	int3   
   1400034dc:	int3   
   1400034dd:	int3   
   1400034de:	int3   
   1400034df:	int3   
   1400034e0:	int3   
   1400034e1:	int3   
   1400034e2:	int3   
   1400034e3:	int3   
   1400034e4:	mov    QWORD PTR [rsp+0x10],rbx
   1400034e9:	mov    QWORD PTR [rsp+0x18],rbp
   1400034ee:	mov    QWORD PTR [rsp+0x20],rsi
   1400034f3:	push   rdi
   1400034f4:	push   r12
   1400034f6:	push   r13
   1400034f8:	push   r14
   1400034fa:	push   r15
   1400034fc:	sub    rsp,0x20
   140003500:	movups xmm0,XMMWORD PTR [rdx]
   140003503:	mov    rsi,rcx
   140003506:	or     r15,0xffffffffffffffff
   14000350a:	xor    edi,edi
   14000350c:	mov    r14,rdx
   14000350f:	movups XMMWORD PTR [rcx],xmm0
   140003512:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140003516:	lea    r12d,[r15+0x3]
   14000351a:	movups XMMWORD PTR [rcx+0x10],xmm1
   14000351e:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140003522:	movups XMMWORD PTR [rcx+0x20],xmm0
   140003526:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14000352a:	movups XMMWORD PTR [rcx+0x30],xmm1
   14000352e:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140003532:	movups XMMWORD PTR [rcx+0x40],xmm0
   140003536:	movups xmm1,XMMWORD PTR [rdx+0x50]
   14000353a:	movups XMMWORD PTR [rcx+0x50],xmm1
   14000353e:	movups xmm0,XMMWORD PTR [rdx+0x60]
   140003542:	movups XMMWORD PTR [rcx+0x60],xmm0
   140003546:	mov    ecx,0x80
   14000354b:	movups xmm0,XMMWORD PTR [rdx+0x70]
   14000354f:	movups XMMWORD PTR [rsi+rcx*1-0x10],xmm0
   140003554:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140003558:	movups XMMWORD PTR [rsi+rcx*1],xmm1
   14000355c:	mov    rcx,QWORD PTR [rdx+0x10]
   140003560:	test   rcx,rcx
   140003563:	jne    0x14000356c
   140003565:	mov    QWORD PTR [rsp+0x50],r12
   14000356a:	jmp    0x140003585
   14000356c:	mov    rax,r15
   14000356f:	inc    rax
   140003572:	cmp    WORD PTR [rcx+rax*2],di
   140003576:	jne    0x14000356f
   140003578:	lea    rax,[rax*2+0x2]
   140003580:	mov    QWORD PTR [rsp+0x50],rax
   140003585:	mov    rax,QWORD PTR [rdx+0x20]
   140003589:	test   rax,rax
   14000358c:	jne    0x140003595
   14000358e:	lea    ebx,[rax+0x1]
   140003591:	mov    ecx,ebx
   140003593:	jmp    0x1400035a9
   140003595:	mov    rcx,r15
   140003598:	inc    rcx
   14000359b:	cmp    BYTE PTR [rax+rcx*1],dil
   14000359f:	jne    0x140003598
   1400035a1:	mov    ebx,0x1
   1400035a6:	add    rcx,rbx
   1400035a9:	mov    rax,QWORD PTR [rdx+0x28]
   1400035ad:	test   rax,rax
   1400035b0:	jne    0x1400035b7
   1400035b2:	mov    r9,rbx
   1400035b5:	jmp    0x1400035c6
   1400035b7:	mov    r9,r15
   1400035ba:	inc    r9
   1400035bd:	cmp    BYTE PTR [rax+r9*1],dil
   1400035c1:	jne    0x1400035ba
   1400035c3:	add    r9,rbx
   1400035c6:	mov    rax,QWORD PTR [rdx+0x30]
   1400035ca:	test   rax,rax
   1400035cd:	jne    0x1400035d4
   1400035cf:	mov    r11,rbx
   1400035d2:	jmp    0x1400035e3
   1400035d4:	mov    r11,r15
   1400035d7:	inc    r11
   1400035da:	cmp    BYTE PTR [rax+r11*1],dil
   1400035de:	jne    0x1400035d7
   1400035e0:	add    r11,rbx
   1400035e3:	mov    rax,QWORD PTR [rdx+0x40]
   1400035e7:	test   rax,rax
   1400035ea:	jne    0x1400035f1
   1400035ec:	mov    r10,rbx
   1400035ef:	jmp    0x140003600
   1400035f1:	mov    r10,r15
   1400035f4:	inc    r10
   1400035f7:	cmp    BYTE PTR [rax+r10*1],dil
   1400035fb:	jne    0x1400035f4
   1400035fd:	add    r10,rbx
   140003600:	mov    rax,QWORD PTR [rdx+0x78]
   140003604:	test   rax,rax
   140003607:	jne    0x14000360e
   140003609:	mov    r8,rbx
   14000360c:	jmp    0x14000361d
   14000360e:	mov    r8,r15
   140003611:	inc    r8
   140003614:	cmp    BYTE PTR [rax+r8*1],dil
   140003618:	jne    0x140003611
   14000361a:	add    r8,rbx
   14000361d:	mov    rax,QWORD PTR [rdx+0x68]
   140003621:	test   rax,rax
   140003624:	jne    0x14000362b
   140003626:	mov    rdx,rbx
   140003629:	jmp    0x14000363a
   14000362b:	mov    rdx,r15
   14000362e:	inc    rdx
   140003631:	cmp    BYTE PTR [rax+rdx*1],dil
   140003635:	jne    0x14000362e
   140003637:	add    rdx,rbx
   14000363a:	mov    rbp,QWORD PTR [r14+0x70]
   14000363e:	test   rbp,rbp
   140003641:	jne    0x140003648
   140003643:	mov    r13,r12
   140003646:	jmp    0x14000365d
   140003648:	mov    rax,r15
   14000364b:	inc    rax
   14000364e:	cmp    WORD PTR [rbp+rax*2+0x0],di
   140003653:	jne    0x14000364b
   140003655:	lea    r13,[rax*2+0x2]
   14000365d:	mov    rbp,QWORD PTR [r14+0x50]
   140003661:	test   rbp,rbp
   140003664:	jne    0x14000366b
   140003666:	mov    rax,rbx
   140003669:	jmp    0x14000367a
   14000366b:	mov    rax,r15
   14000366e:	inc    rax
   140003671:	cmp    BYTE PTR [rax+rbp*1],dil
   140003675:	jne    0x14000366e
   140003677:	add    rax,rbx
   14000367a:	mov    r15,QWORD PTR [r14+0x58]
   14000367e:	test   r15,r15
   140003681:	je     0x140003699
   140003683:	or     rbp,0xffffffffffffffff
   140003687:	inc    rbp
   14000368a:	cmp    WORD PTR [r15+rbp*2],di
   14000368f:	jne    0x140003687
   140003691:	lea    r12,[rbp*2+0x2]
   140003699:	lea    rbp,[r12+rax*1]
   14000369d:	mov    rax,QWORD PTR [rsi+0x90]
   1400036a4:	add    rbp,r13
   1400036a7:	add    rbp,rdx
   1400036aa:	add    rbp,r8
   1400036ad:	add    rbp,r10
   1400036b0:	add    rbp,r11
   1400036b3:	add    rbp,r9
   1400036b6:	add    rbp,rcx
   1400036b9:	add    rbp,QWORD PTR [rsp+0x50]
   1400036be:	test   rax,rax
   1400036c1:	je     0x1400036d4
   1400036c3:	cmp    DWORD PTR [rax],ebx
   1400036c5:	jne    0x1400036d4
   1400036c7:	cmp    QWORD PTR [rsi+0x98],rbp
   1400036ce:	jae    0x14000379a
   1400036d4:	mov    rcx,rax
   1400036d7:	test   rax,rax
   1400036da:	je     0x140003703
   1400036dc:	or     eax,0xffffffff
   1400036df:	lock xadd DWORD PTR [rcx],eax
   1400036e3:	cmp    eax,0x1
   1400036e6:	jne    0x1400036f5
   1400036e8:	mov    rcx,QWORD PTR [rsi+0x90]
   1400036ef:	call   QWORD PTR [rip+0x4c13]        # 0x140008308
   1400036f5:	mov    QWORD PTR [rsi+0x90],rdi
   1400036fc:	mov    QWORD PTR [rsi+0x98],rdi
   140003703:	test   rbp,rbp
   140003706:	jne    0x140003741
   140003708:	mov    rcx,QWORD PTR [rsi+0x90]
   14000370f:	test   rcx,rcx
   140003712:	je     0x14000379a
   140003718:	or     eax,0xffffffff
   14000371b:	lock xadd DWORD PTR [rcx],eax
   14000371f:	cmp    eax,0x1
   140003722:	jne    0x140003731
   140003724:	mov    rcx,QWORD PTR [rsi+0x90]
   14000372b:	call   QWORD PTR [rip+0x4bd7]        # 0x140008308
   140003731:	mov    QWORD PTR [rsi+0x90],rdi
   140003738:	mov    QWORD PTR [rsi+0x98],rdi
   14000373f:	jmp    0x14000379a
   140003741:	lea    rcx,[rbp+0x4]
   140003745:	call   QWORD PTR [rip+0x4b3d]        # 0x140008288
   14000374b:	mov    r15,rax
   14000374e:	test   rax,rax
   140003751:	je     0x14000379a
   140003753:	mov    DWORD PTR [rax],edi
   140003755:	mov    rax,QWORD PTR [rsi+0x90]
   14000375c:	test   rax,rax
   14000375f:	je     0x140003788
   140003761:	or     ecx,0xffffffff
   140003764:	lock xadd DWORD PTR [rax],ecx
   140003768:	cmp    ecx,0x1
   14000376b:	jne    0x14000377a
   14000376d:	mov    rcx,QWORD PTR [rsi+0x90]
   140003774:	call   QWORD PTR [rip+0x4b8e]        # 0x140008308
   14000377a:	mov    QWORD PTR [rsi+0x90],rdi
   140003781:	mov    QWORD PTR [rsi+0x98],rdi
   140003788:	mov    QWORD PTR [rsi+0x90],r15
   14000378f:	mov    QWORD PTR [rsi+0x98],rbp
   140003796:	lock add DWORD PTR [r15],ebx
   14000379a:	mov    rax,QWORD PTR [rsi+0x90]
   1400037a1:	mov    rcx,QWORD PTR [rsi+0x98]
   1400037a8:	test   rax,rax
   1400037ab:	je     0x1400037b1
   1400037ad:	lea    rdi,[rax+0x4]
   1400037b1:	mov    r8,QWORD PTR [r14+0x10]
   1400037b5:	lea    rdx,[rcx+rdi*1]
   1400037b9:	mov    rax,rdi
   1400037bc:	lea    r9,[rsi+0x10]
   1400037c0:	neg    rax
   1400037c3:	mov    rcx,rdi
   1400037c6:	sbb    rbx,rbx
   1400037c9:	and    rbx,rdx
   1400037cc:	mov    rdx,rbx
   1400037cf:	call   0x140005c10
   1400037d4:	mov    r8,QWORD PTR [r14+0x20]
   1400037d8:	lea    r9,[rsi+0x20]
   1400037dc:	mov    rdx,rbx
   1400037df:	mov    rcx,rax
   1400037e2:	call   0x140005cc8
   1400037e7:	mov    r8,QWORD PTR [r14+0x28]
   1400037eb:	lea    r9,[rsi+0x28]
   1400037ef:	mov    rdx,rbx
   1400037f2:	mov    rcx,rax
   1400037f5:	call   0x140005cc8
   1400037fa:	mov    r8,QWORD PTR [r14+0x30]
   1400037fe:	lea    r9,[rsi+0x30]
   140003802:	mov    rdx,rbx
   140003805:	mov    rcx,rax
   140003808:	call   0x140005cc8
   14000380d:	mov    r8,QWORD PTR [r14+0x40]
   140003811:	lea    r9,[rsi+0x40]
   140003815:	mov    rdx,rbx
   140003818:	mov    rcx,rax
   14000381b:	call   0x140005cc8
   140003820:	mov    r8,QWORD PTR [r14+0x78]
   140003824:	lea    r9,[rsi+0x78]
   140003828:	mov    rdx,rbx
   14000382b:	mov    rcx,rax
   14000382e:	call   0x140005cc8
   140003833:	mov    r8,QWORD PTR [r14+0x68]
   140003837:	lea    r9,[rsi+0x68]
   14000383b:	mov    rdx,rbx
   14000383e:	mov    rcx,rax
   140003841:	call   0x140005cc8
   140003846:	mov    r8,QWORD PTR [r14+0x70]
   14000384a:	lea    r9,[rsi+0x70]
   14000384e:	mov    rdx,rbx
   140003851:	mov    rcx,rax
   140003854:	call   0x140005c10
   140003859:	mov    r8,QWORD PTR [r14+0x50]
   14000385d:	lea    r9,[rsi+0x50]
   140003861:	mov    rdx,rbx
   140003864:	mov    rcx,rax
   140003867:	call   0x140005cc8
   14000386c:	mov    r8,QWORD PTR [r14+0x58]
   140003870:	lea    r9,[rsi+0x58]
   140003874:	mov    rdx,rbx
   140003877:	mov    rcx,rax
   14000387a:	mov    rbx,QWORD PTR [rsp+0x58]
   14000387f:	mov    rbp,QWORD PTR [rsp+0x60]
   140003884:	mov    rsi,QWORD PTR [rsp+0x68]
   140003889:	add    rsp,0x20
   14000388d:	pop    r15
   14000388f:	pop    r14
   140003891:	pop    r13
   140003893:	pop    r12
   140003895:	pop    rdi
   140003896:	jmp    0x140005c10
   14000389b:	int3   
   14000389c:	int3   
   14000389d:	int3   
   14000389e:	int3   
   14000389f:	int3   
   1400038a0:	int3   
   1400038a1:	int3   
   1400038a2:	int3   
   1400038a3:	int3   
   1400038a4:	rex push rbx
   1400038a6:	sub    rsp,0x20
   1400038aa:	and    QWORD PTR [rcx+0x90],0x0
   1400038b2:	mov    rbx,rcx
   1400038b5:	and    QWORD PTR [rcx+0x98],0x0
   1400038bd:	call   0x1400034e4
   1400038c2:	mov    rax,rbx
   1400038c5:	add    rsp,0x20
   1400038c9:	pop    rbx
   1400038ca:	ret    
   1400038cb:	int3   
   1400038cc:	int3   
   1400038cd:	int3   
   1400038ce:	int3   
   1400038cf:	int3   
   1400038d0:	int3   
   1400038d1:	int3   
   1400038d2:	int3   
   1400038d3:	int3   
   1400038d4:	mov    QWORD PTR [rsp+0x18],rbx
   1400038d9:	mov    DWORD PTR [rsp+0x10],edx
   1400038dd:	mov    QWORD PTR [rsp+0x8],rcx
   1400038e2:	push   rbp
   1400038e3:	push   rsi
   1400038e4:	push   rdi
   1400038e5:	push   r12
   1400038e7:	push   r13
   1400038e9:	push   r14
   1400038eb:	push   r15
   1400038ed:	sub    rsp,0x40
   1400038f1:	mov    r14d,DWORD PTR [rsp+0xb0]
   1400038f9:	mov    r13,r8
   1400038fc:	mov    r15,QWORD PTR [rsp+0xd0]
   140003904:	xor    r8d,r8d
   140003907:	mov    rbp,QWORD PTR [rsp+0xe0]
   14000390f:	mov    r12,r9
   140003912:	mov    ebx,DWORD PTR [rsp+0xb8]
   140003919:	mov    edi,r8d
   14000391c:	mov    r10d,r14d
   14000391f:	mov    WORD PTR [r15],r8w
   140003923:	mov    BYTE PTR [rbp+0x0],r8b
   140003927:	test   r14d,r14d
   14000392a:	je     0x14000399f
   14000392c:	sub    r10d,0x1
   140003930:	je     0x140003996
   140003932:	sub    r10d,0x1
   140003936:	je     0x14000398d
   140003938:	sub    r10d,0x1
   14000393c:	je     0x14000394d
   14000393e:	cmp    r10d,0x1
   140003942:	jne    0x1400039a8
   140003944:	mov    ecx,ebx
   140003946:	call   0x1400031e0
   14000394b:	jmp    0x1400039a6
   14000394d:	test   ebx,ebx
   14000394f:	js     0x140003984
   140003951:	mov    rax,QWORD PTR [rsp+0xa8]
   140003959:	mov    ebx,0x8007029c
   14000395e:	mov    DWORD PTR [rsp+0x38],ebx
   140003962:	mov    r8,r13
   140003965:	mov    DWORD PTR [rsp+0x30],0x3
   14000396d:	mov    QWORD PTR [rsp+0x28],rax
   140003972:	mov    rax,QWORD PTR [rsp+0xa0]
   14000397a:	mov    QWORD PTR [rsp+0x20],rax
   14000397f:	call   0x140003e28
   140003984:	mov    ecx,ebx
   140003986:	call   0x1400031c0
   14000398b:	jmp    0x1400039a6
   14000398d:	mov    ecx,ebx
   14000398f:	call   0x1400031a4
   140003994:	jmp    0x1400039a6
   140003996:	mov    ecx,ebx
   140003998:	call   0x140003188
   14000399d:	jmp    0x1400039a6
   14000399f:	mov    ecx,ebx
   1400039a1:	call   0x14000316c
   1400039a6:	mov    edi,eax
   1400039a8:	mov    rsi,QWORD PTR [rsp+0xf0]
   1400039b0:	mov    DWORD PTR [rsi],r14d
   1400039b3:	mov    r14d,0x1
   1400039b9:	mov    eax,r14d
   1400039bc:	mov    DWORD PTR [rsi+0x4],ebx
   1400039bf:	lock xadd DWORD PTR [rip+0x7d85],eax        # 0x14000b74c
   1400039c7:	add    eax,r14d
   1400039ca:	xor    ecx,ecx
   1400039cc:	mov    DWORD PTR [rsi+0x8],eax
   1400039cf:	mov    rax,QWORD PTR [rsp+0xc0]
   1400039d7:	test   rax,rax
   1400039da:	je     0x1400039e1
   1400039dc:	cmp    WORD PTR [rax],cx
   1400039df:	jne    0x1400039e4
   1400039e1:	mov    rax,rcx
   1400039e4:	mov    QWORD PTR [rsi+0x10],rax
   1400039e8:	call   QWORD PTR [rip+0x46fa]        # 0x1400080e8
   1400039ee:	mov    rbx,QWORD PTR [rip+0x7d1b]        # 0x14000b710
   1400039f5:	mov    DWORD PTR [rsi+0x18],eax
   1400039f8:	mov    eax,DWORD PTR [rsp+0x88]
   1400039ff:	mov    DWORD PTR [rsi+0x38],eax
   140003a02:	mov    rax,QWORD PTR [rsp+0xa0]
   140003a0a:	mov    QWORD PTR [rsi+0x20],rax
   140003a0e:	mov    rax,QWORD PTR [rsp+0xa8]
   140003a16:	mov    QWORD PTR [rsi+0x80],rax
   140003a1d:	mov    rax,QWORD PTR [rsp+0x80]
   140003a25:	mov    QWORD PTR [rsi+0x30],r13
   140003a29:	xor    r13d,r13d
   140003a2c:	mov    QWORD PTR [rsi+0x88],rax
   140003a33:	mov    DWORD PTR [rsi+0x3c],edi
   140003a36:	mov    QWORD PTR [rsi+0x28],r12
   140003a3a:	mov    QWORD PTR [rsi+0x40],r13
   140003a3e:	mov    DWORD PTR [rsi+0x60],r13d
   140003a42:	mov    QWORD PTR [rsi+0x68],r13
   140003a46:	mov    QWORD PTR [rsi+0x70],r13
   140003a4a:	mov    DWORD PTR [rsi+0x48],r13d
   140003a4e:	mov    QWORD PTR [rsi+0x50],r13
   140003a52:	mov    QWORD PTR [rsi+0x58],r13
   140003a56:	test   rbx,rbx
   140003a59:	je     0x140003a68
   140003a5b:	mov    rcx,rbx
   140003a5e:	call   QWORD PTR [rip+0x48d4]        # 0x140008338
   140003a64:	call   rbx
   140003a66:	jmp    0x140003a6b
   140003a68:	mov    rax,r13
   140003a6b:	mov    QWORD PTR [rsi+0x78],rax
   140003a6f:	mov    r12b,r13b
   140003a72:	mov    BYTE PTR [rbp+0x0],r13b
   140003a76:	call   QWORD PTR [rip+0x466c]        # 0x1400080e8
   140003a7c:	mov    r8d,eax
   140003a7f:	lea    rbx,[rip+0x7dea]        # 0x14000b870
   140003a86:	mov    r9d,eax
   140003a89:	movabs rax,0xcccccccccccccccd
   140003a93:	mul    r9
   140003a96:	shr    rdx,0x4
   140003a9a:	lea    rcx,[rdx+rdx*4]
   140003a9e:	shl    rcx,0x2
   140003aa2:	sub    r8,rcx
   140003aa5:	mov    rbx,QWORD PTR [rbx+r8*8]
   140003aa9:	jmp    0x140003ab5
   140003aab:	cmp    DWORD PTR [rbx+0x8],r9d
   140003aaf:	je     0x140003abd
   140003ab1:	mov    rbx,QWORD PTR [rbx+0x10]
   140003ab5:	test   rbx,rbx
   140003ab8:	jne    0x140003aab
   140003aba:	mov    rbx,r13
   140003abd:	test   rbx,rbx
   140003ac0:	je     0x140003b11
   140003ac2:	cmp    QWORD PTR [rbx],r13
   140003ac5:	je     0x140003b11
   140003ac7:	mov    BYTE PTR [rbp+0x0],r13b
   140003acb:	mov    r9d,0x400
   140003ad1:	mov    rdx,QWORD PTR [rbx]
   140003ad4:	mov    r8,rbp
   140003ad7:	mov    rcx,rsi
   140003ada:	call   0x1400033f0
   140003adf:	test   al,al
   140003ae1:	je     0x140003ae7
   140003ae3:	mov    QWORD PTR [rsi+0x40],rbp
   140003ae7:	mov    rbp,QWORD PTR [rbx]
   140003aea:	mov    rdi,QWORD PTR [rbp+0x8]
   140003aee:	mov    rax,QWORD PTR [rdi]
   140003af1:	mov    rbx,QWORD PTR [rax]
   140003af4:	mov    rcx,rbx
   140003af7:	call   QWORD PTR [rip+0x483b]        # 0x140008338
   140003afd:	mov    rdx,rsi
   140003b00:	mov    rcx,rdi
   140003b03:	call   rbx
   140003b05:	mov    rbp,QWORD PTR [rbp+0x10]
   140003b09:	or     r12b,al
   140003b0c:	test   rbp,rbp
   140003b0f:	jne    0x140003aea
   140003b11:	mov    rdi,QWORD PTR [rip+0x7bd8]        # 0x14000b6f0
   140003b18:	test   rdi,rdi
   140003b1b:	je     0x140003b35
   140003b1d:	mov    rcx,rdi
   140003b20:	call   QWORD PTR [rip+0x4812]        # 0x140008338
   140003b26:	mov    rdx,rsi
   140003b29:	mov    cl,r12b
   140003b2c:	call   rdi
   140003b2e:	mov    rdi,QWORD PTR [rip+0x7bbb]        # 0x14000b6f0
   140003b35:	mov    rbx,QWORD PTR [rip+0x7bac]        # 0x14000b6e8
   140003b3c:	test   rbx,rbx
   140003b3f:	je     0x140003b56
   140003b41:	mov    rcx,rbx
   140003b44:	call   QWORD PTR [rip+0x47ee]        # 0x140008338
   140003b4a:	mov    rcx,rsi
   140003b4d:	call   rbx
   140003b4f:	mov    rdi,QWORD PTR [rip+0x7b9a]        # 0x14000b6f0
   140003b56:	cmp    DWORD PTR [rsi+0x4],r13d
   140003b5a:	jl     0x140003b6a
   140003b5c:	cmp    DWORD PTR [rsp+0xb0],0x4
   140003b64:	jne    0x140003c11
   140003b6a:	cmp    BYTE PTR [rip+0x7ba8],r13b        # 0x14000b719
   140003b71:	mov    rbx,QWORD PTR [rip+0x7ba8]        # 0x14000b720
   140003b78:	jne    0x140003b87
   140003b7a:	test   rdi,rdi
   140003b7d:	jne    0x140003b84
   140003b7f:	test   rbx,rbx
   140003b82:	je     0x140003b87
   140003b84:	mov    r14b,r13b
   140003b87:	cmp    BYTE PTR [rsp+0xc8],r13b
   140003b8f:	jne    0x140003bb9
   140003b91:	test   r14b,r14b
   140003b94:	jne    0x140003bb9
   140003b96:	test   rbx,rbx
   140003b99:	je     0x140003bf9
   140003b9b:	cmp    BYTE PTR [rip+0x7b76],r13b        # 0x14000b718
   140003ba2:	jne    0x140003bf9
   140003ba4:	mov    rcx,rbx
   140003ba7:	call   QWORD PTR [rip+0x478b]        # 0x140008338
   140003bad:	xor    r8d,r8d
   140003bb0:	xor    edx,edx
   140003bb2:	mov    rcx,rsi
   140003bb5:	call   rbx
   140003bb7:	jmp    0x140003bf9
   140003bb9:	mov    edi,0x800
   140003bbe:	test   rbx,rbx
   140003bc1:	je     0x140003bd7
   140003bc3:	mov    rcx,rbx
   140003bc6:	call   QWORD PTR [rip+0x476c]        # 0x140008338
   140003bcc:	mov    r8d,edi
   140003bcf:	mov    rdx,r15
   140003bd2:	mov    rcx,rsi
   140003bd5:	call   rbx
   140003bd7:	cmp    WORD PTR [r15],r13w
   140003bdb:	jne    0x140003beb
   140003bdd:	mov    r8,rsi
   140003be0:	mov    rdx,rdi
   140003be3:	mov    rcx,r15
   140003be6:	call   0x140002f38
   140003beb:	test   r14b,r14b
   140003bee:	je     0x140003bf9
   140003bf0:	mov    rcx,r15
   140003bf3:	call   QWORD PTR [rip+0x4467]        # 0x140008060
   140003bf9:	mov    rbx,QWORD PTR [rsp+0x90]
   140003c01:	add    rsp,0x40
   140003c05:	pop    r15
   140003c07:	pop    r14
   140003c09:	pop    r13
   140003c0b:	pop    r12
   140003c0d:	pop    rdi
   140003c0e:	pop    rsi
   140003c0f:	pop    rbp
   140003c10:	ret    
   140003c11:	mov    rcx,QWORD PTR [rsp+0x78]
   140003c16:	lea    r8,[rip+0x5173]        # 0x140008d90
   140003c1d:	mov    edx,0xb46
   140003c22:	call   0x140003eb0
   140003c27:	int3   
   140003c28:	int3   
   140003c29:	int3   
   140003c2a:	int3   
   140003c2b:	int3   
   140003c2c:	int3   
   140003c2d:	int3   
   140003c2e:	int3   
   140003c2f:	int3   
   140003c30:	rex push rbx
   140003c32:	push   rdi
   140003c33:	mov    eax,0x15c8
   140003c38:	call   0x140006e50
   140003c3d:	sub    rsp,rax
   140003c40:	mov    rax,QWORD PTR [rip+0x73c1]        # 0x14000b008
   140003c47:	xor    rax,rsp
   140003c4a:	mov    QWORD PTR [rsp+0x15b0],rax
   140003c52:	mov    edi,DWORD PTR [rsp+0x1610]
   140003c59:	mov    r10,QWORD PTR [rsp+0x1600]
   140003c61:	mov    r11,QWORD PTR [rsp+0x1608]
   140003c69:	test   edi,edi
   140003c6b:	jne    0x140003c7b
   140003c6d:	cmp    QWORD PTR [rip+0x7a83],0x0        # 0x14000b6f8
   140003c75:	je     0x140003c7b
   140003c77:	mov    bl,0x1
   140003c79:	jmp    0x140003c7d
   140003c7b:	xor    bl,bl
   140003c7d:	lea    rax,[rsp+0x80]
   140003c85:	mov    QWORD PTR [rsp+0x70],rax
   140003c8a:	lea    rax,[rsp+0x1b0]
   140003c92:	mov    QWORD PTR [rsp+0x60],rax
   140003c97:	lea    rax,[rsp+0x5b0]
   140003c9f:	mov    QWORD PTR [rsp+0x50],rax
   140003ca4:	mov    eax,DWORD PTR [rsp+0x1618]
   140003cab:	mov    BYTE PTR [rsp+0x48],bl
   140003caf:	and    QWORD PTR [rsp+0x40],0x0
   140003cb5:	mov    DWORD PTR [rsp+0x38],eax
   140003cb9:	mov    DWORD PTR [rsp+0x30],edi
   140003cbd:	mov    QWORD PTR [rsp+0x28],r11
   140003cc2:	mov    QWORD PTR [rsp+0x20],r10
   140003cc7:	call   0x1400038d4
   140003ccc:	cmp    edi,0x4
   140003ccf:	jne    0x140003cf0
   140003cd1:	lea    ecx,[rdi+0x3]
   140003cd4:	int    0x29
   140003cd6:	mov    rcx,QWORD PTR [rsp+0x15b0]
   140003cde:	xor    rcx,rsp
   140003ce1:	call   0x1400066a0
   140003ce6:	add    rsp,0x15c8
   140003ced:	pop    rdi
   140003cee:	pop    rbx
   140003cef:	ret    
   140003cf0:	test   edi,edi
   140003cf2:	jne    0x140003cd6
   140003cf4:	test   bl,bl
   140003cf6:	je     0x140003d1a
   140003cf8:	mov    rbx,QWORD PTR [rip+0x79f9]        # 0x14000b6f8
   140003cff:	mov    rcx,rbx
   140003d02:	call   QWORD PTR [rip+0x4630]        # 0x140008338
   140003d08:	lea    rdx,[rsp+0x5b0]
   140003d10:	lea    rcx,[rsp+0x80]
   140003d18:	call   rbx
   140003d1a:	lea    rdx,[rsp+0x80]
   140003d22:	lea    rcx,[rsp+0x110]
   140003d2a:	call   0x1400038a4
   140003d2f:	lea    rdx,[rip+0x5f62]        # 0x140009c98
   140003d36:	lea    rcx,[rsp+0x110]
   140003d3e:	call   0x140006d62
   140003d43:	int3   
   140003d44:	int3   
   140003d45:	int3   
   140003d46:	int3   
   140003d47:	int3   
   140003d48:	int3   
   140003d49:	int3   
   140003d4a:	int3   
   140003d4b:	int3   
   140003d4c:	rex push rbx
   140003d4e:	sub    rsp,0x20
   140003d52:	mov    rbx,rcx
   140003d55:	mov    rcx,QWORD PTR [rcx+0x90]
   140003d5c:	test   rcx,rcx
   140003d5f:	je     0x140003d8a
   140003d61:	or     eax,0xffffffff
   140003d64:	lock xadd DWORD PTR [rcx],eax
   140003d68:	cmp    eax,0x1
   140003d6b:	jne    0x140003d7a
   140003d6d:	mov    rcx,QWORD PTR [rbx+0x90]
   140003d74:	call   QWORD PTR [rip+0x458e]        # 0x140008308
   140003d7a:	and    QWORD PTR [rbx+0x90],0x0
   140003d82:	and    QWORD PTR [rbx+0x98],0x0
   140003d8a:	add    rsp,0x20
   140003d8e:	pop    rbx
   140003d8f:	ret    
   140003d90:	int3   
   140003d91:	int3   
   140003d92:	int3   
   140003d93:	int3   
   140003d94:	int3   
   140003d95:	int3   
   140003d96:	int3   
   140003d97:	int3   
   140003d98:	movups xmm0,XMMWORD PTR [rdx]
   140003d9b:	mov    r9d,0x80
   140003da1:	movups XMMWORD PTR [rcx],xmm0
   140003da4:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140003da8:	movups XMMWORD PTR [rcx+0x10],xmm1
   140003dac:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140003db0:	movups XMMWORD PTR [rcx+0x20],xmm0
   140003db4:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140003db8:	movups XMMWORD PTR [rcx+0x30],xmm1
   140003dbc:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140003dc0:	movups XMMWORD PTR [rcx+0x40],xmm0
   140003dc4:	movups xmm1,XMMWORD PTR [rdx+0x50]
   140003dc8:	movups XMMWORD PTR [rcx+0x50],xmm1
   140003dcc:	movups xmm0,XMMWORD PTR [rdx+0x60]
   140003dd0:	movups XMMWORD PTR [rcx+0x60],xmm0
   140003dd4:	movups xmm0,XMMWORD PTR [rdx+0x70]
   140003dd8:	movups XMMWORD PTR [rcx+r9*1-0x10],xmm0
   140003dde:	movups xmm1,XMMWORD PTR [rdx+r9*1]
   140003de3:	movups XMMWORD PTR [rcx+r9*1],xmm1
   140003de8:	and    QWORD PTR [rcx+0x90],0x0
   140003df0:	and    QWORD PTR [rcx+0x98],0x0
   140003df8:	mov    rax,QWORD PTR [rdx+0x90]
   140003dff:	mov    r8,QWORD PTR [rdx+0x98]
   140003e06:	test   rax,rax
   140003e09:	je     0x140003e1c
   140003e0b:	mov    QWORD PTR [rcx+0x90],rax
   140003e12:	mov    QWORD PTR [rcx+0x98],r8
   140003e19:	lock inc DWORD PTR [rax]
   140003e1c:	mov    rax,rcx
   140003e1f:	ret    
   140003e20:	int3   
   140003e21:	int3   
   140003e22:	int3   
   140003e23:	int3   
   140003e24:	int3   
   140003e25:	int3   
   140003e26:	int3   
   140003e27:	int3   
   140003e28:	sub    rsp,0x58
   140003e2c:	mov    eax,DWORD PTR [rsp+0x98]
   140003e33:	mov    DWORD PTR [rsp+0x38],eax
   140003e37:	mov    eax,DWORD PTR [rsp+0x90]
   140003e3e:	mov    DWORD PTR [rsp+0x30],eax
   140003e42:	mov    rax,QWORD PTR [rsp+0x88]
   140003e4a:	mov    QWORD PTR [rsp+0x28],rax
   140003e4f:	mov    rax,QWORD PTR [rsp+0x80]
   140003e57:	mov    QWORD PTR [rsp+0x20],rax
   140003e5c:	call   0x140003c30
   140003e61:	add    rsp,0x58
   140003e65:	ret    
   140003e66:	int3   
   140003e67:	int3   
   140003e68:	int3   
   140003e69:	int3   
   140003e6a:	int3   
   140003e6b:	int3   
   140003e6c:	sub    rsp,0x48
   140003e70:	mov    rax,QWORD PTR [rsp+0x48]
   140003e75:	lea    r8,[rip+0x4f14]        # 0x140008d90
   140003e7c:	mov    DWORD PTR [rsp+0x38],0x8000ffff
   140003e84:	xor    r9d,r9d
   140003e87:	mov    DWORD PTR [rsp+0x30],0x4
   140003e8f:	mov    edx,0x893
   140003e94:	mov    QWORD PTR [rsp+0x28],rax
   140003e99:	and    QWORD PTR [rsp+0x20],0x0
   140003e9f:	call   0x140003e28
   140003ea4:	add    rsp,0x48
   140003ea8:	ret    
   140003ea9:	int3   
   140003eaa:	int3   
   140003eab:	int3   
   140003eac:	int3   
   140003ead:	int3   
   140003eae:	int3   
   140003eaf:	int3   
   140003eb0:	sub    rsp,0x48
   140003eb4:	mov    rax,QWORD PTR [rsp+0x48]
   140003eb9:	xor    r9d,r9d
   140003ebc:	mov    DWORD PTR [rsp+0x38],0x8000ffff
   140003ec4:	mov    DWORD PTR [rsp+0x30],0x4
   140003ecc:	mov    QWORD PTR [rsp+0x28],rax
   140003ed1:	and    QWORD PTR [rsp+0x20],0x0
   140003ed7:	call   0x140003e28
   140003edc:	add    rsp,0x48
   140003ee0:	ret    
   140003ee1:	int3   
   140003ee2:	int3   
   140003ee3:	int3   
   140003ee4:	int3   
   140003ee5:	int3   
   140003ee6:	int3   
   140003ee7:	int3   
   140003ee8:	int3   
   140003ee9:	int3   
   140003eea:	int3   
   140003eeb:	int3   
   140003eec:	int3   
   140003eed:	int3   
   140003eee:	int3   
   140003eef:	int3   
   140003ef0:	ret    0x0
   140003ef3:	int3   
   140003ef4:	int3   
   140003ef5:	int3   
   140003ef6:	int3   
   140003ef7:	int3   
   140003ef8:	int3   
   140003ef9:	int3   
   140003efa:	int3   
   140003efb:	int3   
   140003efc:	int3   
   140003efd:	int3   
   140003efe:	int3   
   140003eff:	int3   
   140003f00:	sub    rsp,0x28
   140003f04:	test   dl,dl
   140003f06:	jne    0x140003f28
   140003f08:	cmp    DWORD PTR [rcx+0x14],0x1
   140003f0c:	jne    0x140003f1a
   140003f0e:	mov    rdx,r8
   140003f11:	add    rsp,0x28
   140003f15:	jmp    0x140003f34
   140003f1a:	cmp    DWORD PTR [rcx+0x14],0x2
   140003f1e:	jne    0x140003f28
   140003f20:	mov    rdx,r8
   140003f23:	call   0x1400041cc
   140003f28:	add    rsp,0x28
   140003f2c:	ret    
   140003f2d:	int3   
   140003f2e:	int3   
   140003f2f:	int3   
   140003f30:	int3   
   140003f31:	int3   
   140003f32:	int3   
   140003f33:	int3   
   140003f34:	mov    rax,rsp
   140003f37:	mov    QWORD PTR [rax+0x10],rbx
   140003f3b:	mov    QWORD PTR [rax+0x18],rsi
   140003f3f:	mov    QWORD PTR [rax+0x20],rdi
   140003f43:	push   rbp
   140003f44:	lea    rbp,[rax-0x68]
   140003f48:	sub    rsp,0x160
   140003f4f:	mov    rax,QWORD PTR [rip+0x70b2]        # 0x14000b008
   140003f56:	xor    rax,rsp
   140003f59:	mov    QWORD PTR [rbp+0x50],rax
   140003f5d:	mov    r9,QWORD PTR [rcx+0x8]
   140003f61:	cmp    DWORD PTR [r9],0x5
   140003f65:	jbe    0x1400041a1
   140003f6b:	movabs rcx,0x200000000000
   140003f75:	test   QWORD PTR [r9+0x10],rcx
   140003f79:	je     0x1400041a1
   140003f7f:	mov    rax,QWORD PTR [r9+0x18]
   140003f83:	and    rax,rcx
   140003f86:	cmp    rax,QWORD PTR [r9+0x18]
   140003f8a:	jne    0x1400041a1
   140003f90:	mov    eax,DWORD PTR [rdx+0x4]
   140003f93:	lea    r10,[rip+0x4c2e]        # 0x140008bc8
   140003f9a:	mov    rcx,QWORD PTR [rdx+0x30]
   140003f9e:	xor    ebx,ebx
   140003fa0:	mov    DWORD PTR [rsp+0x40],eax
   140003fa4:	or     rdi,0xffffffffffffffff
   140003fa8:	mov    QWORD PTR [rsp+0x78],0x4
   140003fb1:	lea    rax,[rsp+0x40]
   140003fb6:	mov    QWORD PTR [rsp+0x70],rax
   140003fbb:	mov    eax,ebx
   140003fbd:	mov    r8,r10
   140003fc0:	test   rcx,rcx
   140003fc3:	je     0x140003fd3
   140003fc5:	mov    r8,rcx
   140003fc8:	mov    rax,rdi
   140003fcb:	inc    rax
   140003fce:	cmp    BYTE PTR [rcx+rax*1],bl
   140003fd1:	jne    0x140003fcb
   140003fd3:	mov    rcx,QWORD PTR [rdx+0x78]
   140003fd7:	inc    eax
   140003fd9:	mov    DWORD PTR [rbp-0x78],eax
   140003fdc:	lea    rax,[rdx+0x38]
   140003fe0:	mov    QWORD PTR [rbp-0x70],rax
   140003fe4:	mov    rax,rbx
   140003fe7:	mov    QWORD PTR [rbp-0x80],r8
   140003feb:	mov    r8,r10
   140003fee:	mov    DWORD PTR [rbp-0x74],ebx
   140003ff1:	mov    QWORD PTR [rbp-0x68],0x4
   140003ff9:	test   rcx,rcx
   140003ffc:	je     0x14000400c
   140003ffe:	mov    r8,rcx
   140004001:	mov    rax,rdi
   140004004:	inc    rax
   140004007:	cmp    BYTE PTR [rcx+rax*1],bl
   14000400a:	jne    0x140004004
   14000400c:	mov    rcx,QWORD PTR [rdx+0x10]
   140004010:	lea    r11,[rip+0x4bb5]        # 0x140008bcc
   140004017:	inc    eax
   140004019:	mov    QWORD PTR [rbp-0x60],r8
   14000401d:	mov    DWORD PTR [rbp-0x58],eax
   140004020:	mov    r8,r11
   140004023:	mov    eax,DWORD PTR [rdx]
   140004025:	mov    DWORD PTR [rsp+0x38],eax
   140004029:	lea    rax,[rsp+0x38]
   14000402e:	mov    QWORD PTR [rbp-0x50],rax
   140004032:	mov    rax,rbx
   140004035:	mov    DWORD PTR [rbp-0x54],ebx
   140004038:	mov    QWORD PTR [rbp-0x48],0x4
   140004040:	test   rcx,rcx
   140004043:	je     0x140004054
   140004045:	mov    r8,rcx
   140004048:	mov    rax,rdi
   14000404b:	inc    rax
   14000404e:	cmp    WORD PTR [rcx+rax*2],bx
   140004052:	jne    0x14000404b
   140004054:	mov    rcx,QWORD PTR [rdx+0x40]
   140004058:	lea    eax,[rax*2+0x2]
   14000405f:	mov    DWORD PTR [rbp-0x38],eax
   140004062:	mov    eax,DWORD PTR [rdx+0x18]
   140004065:	mov    DWORD PTR [rsp+0x30],eax
   140004069:	lea    rax,[rsp+0x30]
   14000406e:	mov    QWORD PTR [rbp-0x30],rax
   140004072:	mov    rax,rbx
   140004075:	mov    QWORD PTR [rbp-0x40],r8
   140004079:	mov    r8,r10
   14000407c:	mov    DWORD PTR [rbp-0x34],ebx
   14000407f:	mov    QWORD PTR [rbp-0x28],0x4
   140004087:	test   rcx,rcx
   14000408a:	je     0x14000409a
   14000408c:	mov    r8,rcx
   14000408f:	mov    rax,rdi
   140004092:	inc    rax
   140004095:	cmp    BYTE PTR [rcx+rax*1],bl
   140004098:	jne    0x140004092
   14000409a:	mov    rcx,QWORD PTR [rdx+0x50]
   14000409e:	inc    eax
   1400040a0:	mov    DWORD PTR [rbp-0x18],eax
   1400040a3:	mov    eax,DWORD PTR [rdx+0x48]
   1400040a6:	mov    DWORD PTR [rsp+0x34],eax
   1400040aa:	lea    rax,[rsp+0x34]
   1400040af:	mov    QWORD PTR [rbp-0x10],rax
   1400040b3:	mov    rax,rbx
   1400040b6:	mov    QWORD PTR [rbp-0x20],r8
   1400040ba:	mov    r8,r10
   1400040bd:	mov    DWORD PTR [rbp-0x14],ebx
   1400040c0:	mov    QWORD PTR [rbp-0x8],0x4
   1400040c8:	test   rcx,rcx
   1400040cb:	je     0x1400040db
   1400040cd:	mov    r8,rcx
   1400040d0:	mov    rax,rdi
   1400040d3:	inc    rax
   1400040d6:	cmp    BYTE PTR [rcx+rax*1],bl
   1400040d9:	jne    0x1400040d3
   1400040db:	mov    rcx,QWORD PTR [rdx+0x58]
   1400040df:	inc    eax
   1400040e1:	mov    DWORD PTR [rbp+0x8],eax
   1400040e4:	mov    rax,rbx
   1400040e7:	mov    QWORD PTR [rbp+0x0],r8
   1400040eb:	mov    r8,r11
   1400040ee:	mov    DWORD PTR [rbp+0xc],ebx
   1400040f1:	test   rcx,rcx
   1400040f4:	je     0x140004105
   1400040f6:	mov    r8,rcx
   1400040f9:	mov    rax,rdi
   1400040fc:	inc    rax
   1400040ff:	cmp    WORD PTR [rcx+rax*2],bx
   140004103:	jne    0x1400040fc
   140004105:	mov    rcx,QWORD PTR [rdx+0x68]
   140004109:	lea    eax,[rax*2+0x2]
   140004110:	mov    DWORD PTR [rbp+0x18],eax
   140004113:	mov    eax,DWORD PTR [rdx+0x60]
   140004116:	mov    DWORD PTR [rsp+0x3c],eax
   14000411a:	lea    rax,[rsp+0x3c]
   14000411f:	mov    QWORD PTR [rbp+0x20],rax
   140004123:	mov    rax,rbx
   140004126:	mov    QWORD PTR [rbp+0x10],r8
   14000412a:	mov    DWORD PTR [rbp+0x1c],ebx
   14000412d:	mov    QWORD PTR [rbp+0x28],0x4
   140004135:	test   rcx,rcx
   140004138:	je     0x140004148
   14000413a:	mov    r10,rcx
   14000413d:	mov    rax,rdi
   140004140:	inc    rax
   140004143:	cmp    BYTE PTR [rcx+rax*1],bl
   140004146:	jne    0x140004140
   140004148:	mov    rcx,QWORD PTR [rdx+0x70]
   14000414c:	inc    eax
   14000414e:	mov    DWORD PTR [rbp+0x38],eax
   140004151:	mov    rax,rbx
   140004154:	mov    QWORD PTR [rbp+0x30],r10
   140004158:	mov    DWORD PTR [rbp+0x3c],ebx
   14000415b:	test   rcx,rcx
   14000415e:	je     0x14000416f
   140004160:	mov    r11,rcx
   140004163:	mov    rax,rdi
   140004166:	inc    rax
   140004169:	cmp    WORD PTR [rcx+rax*2],bx
   14000416d:	jne    0x140004166
   14000416f:	lea    eax,[rax*2+0x2]
   140004176:	mov    QWORD PTR [rbp+0x40],r11
   14000417a:	mov    DWORD PTR [rbp+0x48],eax
   14000417d:	mov    DWORD PTR [rbp+0x4c],ebx
   140004180:	lea    rax,[rsp+0x50]
   140004185:	mov    rcx,r9
   140004188:	mov    QWORD PTR [rsp+0x28],rax
   14000418d:	lea    rdx,[rip+0x4e1f]        # 0x140008fb3
   140004194:	mov    DWORD PTR [rsp+0x20],0x10
   14000419c:	call   0x1400010dc
   1400041a1:	mov    rcx,QWORD PTR [rbp+0x50]
   1400041a5:	xor    rcx,rsp
   1400041a8:	call   0x1400066a0
   1400041ad:	lea    r11,[rsp+0x160]
   1400041b5:	mov    rbx,QWORD PTR [r11+0x18]
   1400041b9:	mov    rsi,QWORD PTR [r11+0x20]
   1400041bd:	mov    rdi,QWORD PTR [r11+0x28]
   1400041c1:	mov    rsp,r11
   1400041c4:	pop    rbp
   1400041c5:	ret    
   1400041c6:	int3   
   1400041c7:	int3   
   1400041c8:	int3   
   1400041c9:	int3   
   1400041ca:	int3   
   1400041cb:	int3   
   1400041cc:	mov    rax,rsp
   1400041cf:	mov    QWORD PTR [rax+0x10],rbx
   1400041d3:	mov    QWORD PTR [rax+0x18],rsi
   1400041d7:	mov    QWORD PTR [rax+0x20],rdi
   1400041db:	push   rbp
   1400041dc:	lea    rbp,[rax-0x98]
   1400041e3:	sub    rsp,0x190
   1400041ea:	mov    rax,QWORD PTR [rip+0x6e17]        # 0x14000b008
   1400041f1:	xor    rax,rsp
   1400041f4:	mov    QWORD PTR [rbp+0x80],rax
   1400041fb:	mov    r11,QWORD PTR [rcx+0x8]
   1400041ff:	cmp    DWORD PTR [r11],0x5
   140004203:	jbe    0x140004473
   140004209:	mov    eax,DWORD PTR [rdx+0x4]
   14000420c:	lea    r9,[rip+0x49b5]        # 0x140008bc8
   140004213:	mov    rcx,QWORD PTR [rdx+0x30]
   140004217:	xor    ebx,ebx
   140004219:	mov    DWORD PTR [rsp+0x40],eax
   14000421d:	or     rdi,0xffffffffffffffff
   140004221:	mov    QWORD PTR [rsp+0x78],0x4
   14000422a:	lea    rax,[rsp+0x40]
   14000422f:	mov    QWORD PTR [rsp+0x70],rax
   140004234:	mov    eax,ebx
   140004236:	mov    r8,r9
   140004239:	test   rcx,rcx
   14000423c:	je     0x14000424c
   14000423e:	mov    r8,rcx
   140004241:	mov    rax,rdi
   140004244:	inc    rax
   140004247:	cmp    BYTE PTR [rcx+rax*1],bl
   14000424a:	jne    0x140004244
   14000424c:	mov    rcx,QWORD PTR [rdx+0x78]
   140004250:	inc    eax
   140004252:	mov    DWORD PTR [rbp-0x78],eax
   140004255:	lea    rax,[rdx+0x38]
   140004259:	mov    QWORD PTR [rbp-0x70],rax
   14000425d:	mov    rax,rbx
   140004260:	mov    QWORD PTR [rbp-0x80],r8
   140004264:	mov    r8,r9
   140004267:	mov    DWORD PTR [rbp-0x74],ebx
   14000426a:	mov    QWORD PTR [rbp-0x68],0x4
   140004272:	test   rcx,rcx
   140004275:	je     0x140004285
   140004277:	mov    r8,rcx
   14000427a:	mov    rax,rdi
   14000427d:	inc    rax
   140004280:	cmp    BYTE PTR [rcx+rax*1],bl
   140004283:	jne    0x14000427d
   140004285:	mov    rcx,QWORD PTR [rdx+0x10]
   140004289:	lea    r10,[rip+0x493c]        # 0x140008bcc
   140004290:	inc    eax
   140004292:	mov    QWORD PTR [rbp-0x60],r8
   140004296:	mov    DWORD PTR [rbp-0x58],eax
   140004299:	mov    r8,r10
   14000429c:	mov    eax,DWORD PTR [rdx]
   14000429e:	mov    DWORD PTR [rsp+0x38],eax
   1400042a2:	lea    rax,[rsp+0x38]
   1400042a7:	mov    QWORD PTR [rbp-0x50],rax
   1400042ab:	mov    rax,rbx
   1400042ae:	mov    DWORD PTR [rbp-0x54],ebx
   1400042b1:	mov    QWORD PTR [rbp-0x48],0x4
   1400042b9:	test   rcx,rcx
   1400042bc:	je     0x1400042cd
   1400042be:	mov    r8,rcx
   1400042c1:	mov    rax,rdi
   1400042c4:	inc    rax
   1400042c7:	cmp    WORD PTR [rcx+rax*2],bx
   1400042cb:	jne    0x1400042c4
   1400042cd:	mov    rcx,QWORD PTR [rdx+0x40]
   1400042d1:	lea    eax,[rax*2+0x2]
   1400042d8:	mov    DWORD PTR [rbp-0x38],eax
   1400042db:	mov    eax,DWORD PTR [rdx+0x18]
   1400042de:	mov    DWORD PTR [rsp+0x48],eax
   1400042e2:	lea    rax,[rsp+0x48]
   1400042e7:	mov    QWORD PTR [rbp-0x30],rax
   1400042eb:	mov    rax,rbx
   1400042ee:	mov    QWORD PTR [rbp-0x40],r8
   1400042f2:	mov    r8,r9
   1400042f5:	mov    DWORD PTR [rbp-0x34],ebx
   1400042f8:	mov    QWORD PTR [rbp-0x28],0x4
   140004300:	test   rcx,rcx
   140004303:	je     0x140004313
   140004305:	mov    r8,rcx
   140004308:	mov    rax,rdi
   14000430b:	inc    rax
   14000430e:	cmp    BYTE PTR [rcx+rax*1],bl
   140004311:	jne    0x14000430b
   140004313:	mov    rcx,QWORD PTR [rdx+0x50]
   140004317:	inc    eax
   140004319:	mov    DWORD PTR [rbp-0x18],eax
   14000431c:	mov    eax,DWORD PTR [rdx+0x48]
   14000431f:	mov    DWORD PTR [rsp+0x30],eax
   140004323:	lea    rax,[rsp+0x30]
   140004328:	mov    QWORD PTR [rbp-0x10],rax
   14000432c:	mov    rax,rbx
   14000432f:	mov    QWORD PTR [rbp-0x20],r8
   140004333:	mov    r8,r9
   140004336:	mov    DWORD PTR [rbp-0x14],ebx
   140004339:	mov    QWORD PTR [rbp-0x8],0x4
   140004341:	test   rcx,rcx
   140004344:	je     0x140004354
   140004346:	mov    r8,rcx
   140004349:	mov    rax,rdi
   14000434c:	inc    rax
   14000434f:	cmp    BYTE PTR [rcx+rax*1],bl
   140004352:	jne    0x14000434c
   140004354:	mov    rcx,QWORD PTR [rdx+0x58]
   140004358:	inc    eax
   14000435a:	mov    DWORD PTR [rbp+0x8],eax
   14000435d:	mov    rax,rbx
   140004360:	mov    QWORD PTR [rbp+0x0],r8
   140004364:	mov    r8,r10
   140004367:	mov    DWORD PTR [rbp+0xc],ebx
   14000436a:	test   rcx,rcx
   14000436d:	je     0x14000437e
   14000436f:	mov    r8,rcx
   140004372:	mov    rax,rdi
   140004375:	inc    rax
   140004378:	cmp    WORD PTR [rcx+rax*2],bx
   14000437c:	jne    0x140004375
   14000437e:	mov    rcx,QWORD PTR [rdx+0x68]
   140004382:	lea    eax,[rax*2+0x2]
   140004389:	mov    DWORD PTR [rbp+0x18],eax
   14000438c:	mov    eax,DWORD PTR [rdx+0x60]
   14000438f:	mov    DWORD PTR [rsp+0x34],eax
   140004393:	lea    rax,[rsp+0x34]
   140004398:	mov    QWORD PTR [rbp+0x20],rax
   14000439c:	mov    rax,rbx
   14000439f:	mov    QWORD PTR [rbp+0x10],r8
   1400043a3:	mov    r8,r9
   1400043a6:	mov    DWORD PTR [rbp+0x1c],ebx
   1400043a9:	mov    QWORD PTR [rbp+0x28],0x4
   1400043b1:	test   rcx,rcx
   1400043b4:	je     0x1400043c4
   1400043b6:	mov    r8,rcx
   1400043b9:	mov    rax,rdi
   1400043bc:	inc    rax
   1400043bf:	cmp    BYTE PTR [rcx+rax*1],bl
   1400043c2:	jne    0x1400043bc
   1400043c4:	mov    rcx,QWORD PTR [rdx+0x70]
   1400043c8:	inc    eax
   1400043ca:	mov    DWORD PTR [rbp+0x38],eax
   1400043cd:	mov    rax,rbx
   1400043d0:	mov    QWORD PTR [rbp+0x30],r8
   1400043d4:	mov    DWORD PTR [rbp+0x3c],ebx
   1400043d7:	test   rcx,rcx
   1400043da:	je     0x1400043eb
   1400043dc:	mov    r10,rcx
   1400043df:	mov    rax,rdi
   1400043e2:	inc    rax
   1400043e5:	cmp    WORD PTR [rcx+rax*2],bx
   1400043e9:	jne    0x1400043e2
   1400043eb:	mov    rcx,QWORD PTR [rdx+0x28]
   1400043ef:	lea    eax,[rax*2+0x2]
   1400043f6:	mov    DWORD PTR [rbp+0x48],eax
   1400043f9:	mov    eax,DWORD PTR [rdx+0x8]
   1400043fc:	mov    DWORD PTR [rsp+0x3c],eax
   140004400:	lea    rax,[rsp+0x3c]
   140004405:	mov    QWORD PTR [rbp+0x50],rax
   140004409:	mov    eax,DWORD PTR [rdx+0x3c]
   14000440c:	mov    DWORD PTR [rsp+0x44],eax
   140004410:	lea    rax,[rsp+0x44]
   140004415:	mov    QWORD PTR [rbp+0x60],rax
   140004419:	mov    rax,rbx
   14000441c:	mov    QWORD PTR [rbp+0x40],r10
   140004420:	mov    DWORD PTR [rbp+0x4c],ebx
   140004423:	mov    QWORD PTR [rbp+0x58],0x4
   14000442b:	mov    QWORD PTR [rbp+0x68],0x4
   140004433:	test   rcx,rcx
   140004436:	je     0x140004446
   140004438:	mov    r9,rcx
   14000443b:	mov    rax,rdi
   14000443e:	inc    rax
   140004441:	cmp    BYTE PTR [rcx+rax*1],bl
   140004444:	jne    0x14000443e
   140004446:	inc    eax
   140004448:	mov    QWORD PTR [rbp+0x70],r9
   14000444c:	mov    DWORD PTR [rbp+0x78],eax
   14000444f:	mov    DWORD PTR [rbp+0x7c],ebx
   140004452:	lea    rax,[rsp+0x50]
   140004457:	mov    rcx,r11
   14000445a:	mov    QWORD PTR [rsp+0x28],rax
   14000445f:	lea    rdx,[rip+0x4c50]        # 0x1400090b6
   140004466:	mov    DWORD PTR [rsp+0x20],0x13
   14000446e:	call   0x1400010dc
   140004473:	mov    rcx,QWORD PTR [rbp+0x80]
   14000447a:	xor    rcx,rsp
   14000447d:	call   0x1400066a0
   140004482:	lea    r11,[rsp+0x190]
   14000448a:	mov    rbx,QWORD PTR [r11+0x18]
   14000448e:	mov    rsi,QWORD PTR [r11+0x20]
   140004492:	mov    rdi,QWORD PTR [r11+0x28]
   140004496:	mov    rsp,r11
   140004499:	pop    rbp
   14000449a:	ret    
   14000449b:	int3   
   14000449c:	int3   
   14000449d:	int3   
   14000449e:	int3   
   14000449f:	int3   
   1400044a0:	int3   
   1400044a1:	int3   
   1400044a2:	int3   
   1400044a3:	int3   
   1400044a4:	mov    QWORD PTR [rsp+0x18],rbx
   1400044a9:	mov    QWORD PTR [rsp+0x20],rsi
   1400044ae:	push   rdi
   1400044af:	sub    rsp,0x40
   1400044b3:	mov    rax,QWORD PTR [rip+0x6b4e]        # 0x14000b008
   1400044ba:	xor    rax,rsp
   1400044bd:	mov    QWORD PTR [rsp+0x30],rax
   1400044c2:	mov    QWORD PTR [rcx+0x8],rdx
   1400044c6:	lea    r9,[rdx+0x20]
   1400044ca:	mov    BYTE PTR [rcx+0x10],0x1
   1400044ce:	mov    rbx,rdx
   1400044d1:	mov    rax,QWORD PTR [rdx+0x8]
   1400044d5:	mov    rdi,rcx
   1400044d8:	mov    r8,rdx
   1400044db:	lea    rcx,[rsp+0x20]
   1400044e0:	movups xmm0,XMMWORD PTR [rax-0x10]
   1400044e4:	and    QWORD PTR [rdx+0x28],0x0
   1400044e9:	and    QWORD PTR [rdx+0x30],0x0
   1400044ee:	lea    rdx,[rip+0xffffffffffffcb1b]        # 0x140001010
   1400044f5:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   1400044fb:	call   QWORD PTR [rip+0x3d1f]        # 0x140008220
   140004501:	test   eax,eax
   140004503:	jne    0x14000451a
   140004505:	mov    r8,QWORD PTR [rbx+0x8]
   140004509:	lea    edx,[rax+0x2]
   14000450c:	mov    rcx,QWORD PTR [rbx+0x20]
   140004510:	movzx  r9d,WORD PTR [r8]
   140004514:	call   QWORD PTR [rip+0x3d0e]        # 0x140008228
   14000451a:	mov    rax,QWORD PTR [rdi]
   14000451d:	mov    DWORD PTR [rdi+0x14],0x1
   140004524:	mov    rbx,QWORD PTR [rax+0x8]
   140004528:	mov    rcx,rbx
   14000452b:	call   QWORD PTR [rip+0x3e07]        # 0x140008338
   140004531:	mov    rcx,rdi
   140004534:	call   rbx
   140004536:	mov    rcx,QWORD PTR [rsp+0x30]
   14000453b:	xor    rcx,rsp
   14000453e:	call   0x1400066a0
   140004543:	mov    rbx,QWORD PTR [rsp+0x60]
   140004548:	mov    rsi,QWORD PTR [rsp+0x68]
   14000454d:	add    rsp,0x40
   140004551:	pop    rdi
   140004552:	ret    
   140004553:	int3   
   140004554:	int3   
   140004555:	int3   
   140004556:	int3   
   140004557:	int3   
   140004558:	int3   
   140004559:	int3   
   14000455a:	int3   
   14000455b:	int3   
   14000455c:	int3   
   14000455d:	int3   
   14000455e:	int3   
   14000455f:	int3   
   140004560:	mov    QWORD PTR [rsp+0x8],rbx
   140004565:	mov    QWORD PTR [rsp+0x10],rsi
   14000456a:	push   rdi
   14000456b:	sub    rsp,0x20
   14000456f:	mov    eax,DWORD PTR [rip+0x6aef]        # 0x14000b064
   140004575:	mov    rdi,rdx
   140004578:	mov    r8d,DWORD PTR [rdx+0x8]
   14000457c:	mov    rsi,rcx
   14000457f:	cmp    eax,r8d
   140004582:	mov    DWORD PTR [rip+0x6adb],r8d        # 0x14000b064
   140004589:	sete   al
   14000458c:	test   al,al
   14000458e:	jne    0x1400045aa
   140004590:	mov    rax,QWORD PTR [rcx]
   140004593:	mov    rbx,QWORD PTR [rax+0x10]
   140004597:	mov    rcx,rbx
   14000459a:	call   QWORD PTR [rip+0x3d98]        # 0x140008338
   1400045a0:	mov    r8,rdi
   1400045a3:	xor    edx,edx
   1400045a5:	mov    rcx,rsi
   1400045a8:	call   rbx
   1400045aa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400045af:	mov    al,0x1
   1400045b1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400045b6:	add    rsp,0x20
   1400045ba:	pop    rdi
   1400045bb:	ret    
   1400045bc:	int3   
   1400045bd:	int3   
   1400045be:	int3   
   1400045bf:	int3   
   1400045c0:	int3   
   1400045c1:	int3   
   1400045c2:	int3   
   1400045c3:	int3   
   1400045c4:	int3   
   1400045c5:	int3   
   1400045c6:	int3   
   1400045c7:	int3   
   1400045c8:	int3   
   1400045c9:	int3   
   1400045ca:	int3   
   1400045cb:	int3   
   1400045cc:	int3   
   1400045cd:	int3   
   1400045ce:	int3   
   1400045cf:	int3   
   1400045d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400045d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400045da:	push   rdi
   1400045db:	sub    rsp,0x20
   1400045df:	cmp    BYTE PTR [rcx+0x10],0x0
   1400045e3:	lea    rax,[rip+0x45be]        # 0x140008ba8
   1400045ea:	mov    QWORD PTR [rcx],rax
   1400045ed:	mov    esi,edx
   1400045ef:	mov    rdi,rcx
   1400045f2:	je     0x14000460a
   1400045f4:	mov    rbx,QWORD PTR [rcx+0x8]
   1400045f8:	mov    rcx,QWORD PTR [rbx+0x20]
   1400045fc:	call   QWORD PTR [rip+0x3c2e]        # 0x140008230
   140004602:	and    QWORD PTR [rbx+0x20],0x0
   140004607:	and    DWORD PTR [rbx],0x0
   14000460a:	test   sil,0x1
   14000460e:	je     0x140004618
   140004610:	mov    rcx,rdi
   140004613:	call   0x1400062b0
   140004618:	mov    rbx,QWORD PTR [rsp+0x30]
   14000461d:	mov    rax,rdi
   140004620:	mov    rsi,QWORD PTR [rsp+0x38]
   140004625:	add    rsp,0x20
   140004629:	pop    rdi
   14000462a:	ret    
   14000462b:	int3   
   14000462c:	int3   
   14000462d:	int3   
   14000462e:	int3   
   14000462f:	int3   
   140004630:	int3   
   140004631:	int3   
   140004632:	int3   
   140004633:	int3   
   140004634:	int3   
   140004635:	int3   
   140004636:	int3   
   140004637:	int3   
   140004638:	int3   
   140004639:	int3   
   14000463a:	int3   
   14000463b:	int3   
   14000463c:	int3   
   14000463d:	int3   
   14000463e:	int3   
   14000463f:	int3   
   140004640:	mov    QWORD PTR [rsp+0x8],rbx
   140004645:	mov    QWORD PTR [rsp+0x10],rbp
   14000464a:	mov    QWORD PTR [rsp+0x18],rsi
   14000464f:	push   rdi
   140004650:	sub    rsp,0x20
   140004654:	mov    rsi,rdx
   140004657:	mov    bpl,cl
   14000465a:	call   0x14000469c
   14000465f:	mov    rdi,rax
   140004662:	mov    r8,QWORD PTR [rax]
   140004665:	mov    rbx,QWORD PTR [r8+0x10]
   140004669:	mov    rcx,rbx
   14000466c:	call   QWORD PTR [rip+0x3cc6]        # 0x140008338
   140004672:	mov    r8,rsi
   140004675:	mov    dl,bpl
   140004678:	mov    rcx,rdi
   14000467b:	mov    rax,rbx
   14000467e:	mov    rbx,QWORD PTR [rsp+0x30]
   140004683:	mov    rbp,QWORD PTR [rsp+0x38]
   140004688:	mov    rsi,QWORD PTR [rsp+0x40]
   14000468d:	add    rsp,0x20
   140004691:	pop    rdi
   140004692:	rex.W jmp rax
   140004695:	int3   
   140004696:	int3   
   140004697:	int3   
   140004698:	int3   
   140004699:	int3   
   14000469a:	int3   
   14000469b:	int3   
   14000469c:	rex push rbx
   14000469e:	sub    rsp,0x20
   1400046a2:	mov    eax,DWORD PTR [rip+0x7170]        # 0x14000b818
   1400046a8:	test   al,0x1
   1400046aa:	jne    0x1400046c1
   1400046ac:	or     eax,0x1
   1400046af:	lea    rcx,[rip+0x294a]        # 0x140007000
   1400046b6:	mov    DWORD PTR [rip+0x715c],eax        # 0x14000b818
   1400046bc:	call   0x140006774
   1400046c1:	lea    r9,[rsp+0x38]
   1400046c6:	xor    edx,edx
   1400046c8:	lea    r8,[rsp+0x30]
   1400046cd:	lea    rcx,[rip+0x70dc]        # 0x14000b7b0
   1400046d4:	call   QWORD PTR [rip+0x3a5e]        # 0x140008138
   1400046da:	cmp    DWORD PTR [rsp+0x30],0x0
   1400046df:	je     0x140004723
   1400046e1:	lea    rbx,[rip+0x70d0]        # 0x14000b7b8
   1400046e8:	lea    rax,[rip+0x4429]        # 0x140008b18
   1400046ef:	mov    QWORD PTR [rsp+0x38],rbx
   1400046f4:	mov    QWORD PTR [rip+0x70bd],rax        # 0x14000b7b8
   1400046fb:	lea    rdx,[rip+0x691e]        # 0x14000b020
   140004702:	mov    rcx,rbx
   140004705:	mov    QWORD PTR [rip+0x70c4],rdx        # 0x14000b7d0
   14000470c:	call   0x1400044a4
   140004711:	mov    r8,rbx
   140004714:	lea    rcx,[rip+0x7095]        # 0x14000b7b0
   14000471b:	xor    edx,edx
   14000471d:	call   QWORD PTR [rip+0x3a2d]        # 0x140008150
   140004723:	mov    rax,QWORD PTR [rsp+0x38]
   140004728:	add    rsp,0x20
   14000472c:	pop    rbx
   14000472d:	ret    
   14000472e:	int3   
   14000472f:	int3   
   140004730:	int3   
   140004731:	int3   
   140004732:	int3   
   140004733:	int3   
   140004734:	int3   
   140004735:	int3   
   140004736:	int3   
   140004737:	int3   
   140004738:	int3   
   140004739:	int3   
   14000473a:	int3   
   14000473b:	int3   
   14000473c:	int3   
   14000473d:	int3   
   14000473e:	int3   
   14000473f:	int3   
   140004740:	mov    rax,rsp
   140004743:	mov    QWORD PTR [rax+0x8],rbx
   140004747:	mov    QWORD PTR [rax+0x10],rsi
   14000474b:	mov    QWORD PTR [rax+0x18],rdi
   14000474f:	push   rbp
   140004750:	lea    rbp,[rax-0x68]
   140004754:	sub    rsp,0x160
   14000475b:	mov    rax,QWORD PTR [rip+0x68a6]        # 0x14000b008
   140004762:	xor    rax,rsp
   140004765:	mov    QWORD PTR [rbp+0x50],rax
   140004769:	mov    rbx,r8
   14000476c:	call   0x14000469c
   140004771:	mov    r8,QWORD PTR [rax+0x8]
   140004775:	cmp    DWORD PTR [r8],0x2
   140004779:	jbe    0x1400049c7
   14000477f:	movabs rcx,0x200000000000
   140004789:	test   QWORD PTR [r8+0x10],rcx
   14000478d:	je     0x1400049c7
   140004793:	mov    rax,QWORD PTR [r8+0x18]
   140004797:	and    rax,rcx
   14000479a:	cmp    rax,QWORD PTR [r8+0x18]
   14000479e:	jne    0x1400049c7
   1400047a4:	mov    eax,DWORD PTR [rbx+0x4]
   1400047a7:	lea    r9,[rip+0x441a]        # 0x140008bc8
   1400047ae:	mov    rcx,QWORD PTR [rbx+0x30]
   1400047b2:	xor    r11d,r11d
   1400047b5:	mov    DWORD PTR [rsp+0x40],eax
   1400047b9:	or     rdi,0xffffffffffffffff
   1400047bd:	mov    QWORD PTR [rsp+0x78],0x4
   1400047c6:	lea    rax,[rsp+0x40]
   1400047cb:	mov    QWORD PTR [rsp+0x70],rax
   1400047d0:	mov    eax,r11d
   1400047d3:	mov    rdx,r9
   1400047d6:	test   rcx,rcx
   1400047d9:	je     0x1400047ea
   1400047db:	mov    rdx,rcx
   1400047de:	mov    rax,rdi
   1400047e1:	inc    rax
   1400047e4:	cmp    BYTE PTR [rcx+rax*1],r11b
   1400047e8:	jne    0x1400047e1
   1400047ea:	mov    rcx,QWORD PTR [rbx+0x78]
   1400047ee:	inc    eax
   1400047f0:	mov    DWORD PTR [rbp-0x78],eax
   1400047f3:	lea    rax,[rbx+0x38]
   1400047f7:	mov    QWORD PTR [rbp-0x70],rax
   1400047fb:	mov    rax,r11
   1400047fe:	mov    QWORD PTR [rbp-0x80],rdx
   140004802:	mov    rdx,r9
   140004805:	mov    DWORD PTR [rbp-0x74],r11d
   140004809:	mov    QWORD PTR [rbp-0x68],0x4
   140004811:	test   rcx,rcx
   140004814:	je     0x140004825
   140004816:	mov    rdx,rcx
   140004819:	mov    rax,rdi
   14000481c:	inc    rax
   14000481f:	cmp    BYTE PTR [rcx+rax*1],r11b
   140004823:	jne    0x14000481c
   140004825:	mov    rcx,QWORD PTR [rbx+0x10]
   140004829:	lea    r10,[rip+0x439c]        # 0x140008bcc
   140004830:	inc    eax
   140004832:	mov    QWORD PTR [rbp-0x60],rdx
   140004836:	mov    DWORD PTR [rbp-0x58],eax
   140004839:	mov    rdx,r10
   14000483c:	mov    eax,DWORD PTR [rbx]
   14000483e:	mov    DWORD PTR [rsp+0x38],eax
   140004842:	lea    rax,[rsp+0x38]
   140004847:	mov    QWORD PTR [rbp-0x50],rax
   14000484b:	mov    rax,r11
   14000484e:	mov    DWORD PTR [rbp-0x54],r11d
   140004852:	mov    QWORD PTR [rbp-0x48],0x4
   14000485a:	test   rcx,rcx
   14000485d:	je     0x14000486f
   14000485f:	mov    rdx,rcx
   140004862:	mov    rax,rdi
   140004865:	inc    rax
   140004868:	cmp    WORD PTR [rcx+rax*2],r11w
   14000486d:	jne    0x140004865
   14000486f:	mov    rcx,QWORD PTR [rbx+0x40]
   140004873:	lea    eax,[rax*2+0x2]
   14000487a:	mov    DWORD PTR [rbp-0x38],eax
   14000487d:	mov    eax,DWORD PTR [rbx+0x18]
   140004880:	mov    DWORD PTR [rsp+0x30],eax
   140004884:	lea    rax,[rsp+0x30]
   140004889:	mov    QWORD PTR [rbp-0x30],rax
   14000488d:	mov    rax,r11
   140004890:	mov    QWORD PTR [rbp-0x40],rdx
   140004894:	mov    rdx,r9
   140004897:	mov    DWORD PTR [rbp-0x34],r11d
   14000489b:	mov    QWORD PTR [rbp-0x28],0x4
   1400048a3:	test   rcx,rcx
   1400048a6:	je     0x1400048b7
   1400048a8:	mov    rdx,rcx
   1400048ab:	mov    rax,rdi
   1400048ae:	inc    rax
   1400048b1:	cmp    BYTE PTR [rcx+rax*1],r11b
   1400048b5:	jne    0x1400048ae
   1400048b7:	mov    rcx,QWORD PTR [rbx+0x50]
   1400048bb:	inc    eax
   1400048bd:	mov    DWORD PTR [rbp-0x18],eax
   1400048c0:	mov    eax,DWORD PTR [rbx+0x48]
   1400048c3:	mov    DWORD PTR [rsp+0x34],eax
   1400048c7:	lea    rax,[rsp+0x34]
   1400048cc:	mov    QWORD PTR [rbp-0x10],rax
   1400048d0:	mov    rax,r11
   1400048d3:	mov    QWORD PTR [rbp-0x20],rdx
   1400048d7:	mov    rdx,r9
   1400048da:	mov    DWORD PTR [rbp-0x14],r11d
   1400048de:	mov    QWORD PTR [rbp-0x8],0x4
   1400048e6:	test   rcx,rcx
   1400048e9:	je     0x1400048fa
   1400048eb:	mov    rdx,rcx
   1400048ee:	mov    rax,rdi
   1400048f1:	inc    rax
   1400048f4:	cmp    BYTE PTR [rcx+rax*1],r11b
   1400048f8:	jne    0x1400048f1
   1400048fa:	mov    rcx,QWORD PTR [rbx+0x58]
   1400048fe:	inc    eax
   140004900:	mov    DWORD PTR [rbp+0x8],eax
   140004903:	mov    rax,r11
   140004906:	mov    QWORD PTR [rbp+0x0],rdx
   14000490a:	mov    rdx,r10
   14000490d:	mov    DWORD PTR [rbp+0xc],r11d
   140004911:	test   rcx,rcx
   140004914:	je     0x140004926
   140004916:	mov    rdx,rcx
   140004919:	mov    rax,rdi
   14000491c:	inc    rax
   14000491f:	cmp    WORD PTR [rcx+rax*2],r11w
   140004924:	jne    0x14000491c
   140004926:	mov    rcx,QWORD PTR [rbx+0x68]
   14000492a:	lea    eax,[rax*2+0x2]
   140004931:	mov    DWORD PTR [rbp+0x18],eax
   140004934:	mov    eax,DWORD PTR [rbx+0x60]
   140004937:	mov    DWORD PTR [rsp+0x3c],eax
   14000493b:	lea    rax,[rsp+0x3c]
   140004940:	mov    QWORD PTR [rbp+0x20],rax
   140004944:	mov    rax,r11
   140004947:	mov    QWORD PTR [rbp+0x10],rdx
   14000494b:	mov    DWORD PTR [rbp+0x1c],r11d
   14000494f:	mov    QWORD PTR [rbp+0x28],0x4
   140004957:	test   rcx,rcx
   14000495a:	je     0x14000496b
   14000495c:	mov    r9,rcx
   14000495f:	mov    rax,rdi
   140004962:	inc    rax
   140004965:	cmp    BYTE PTR [rcx+rax*1],r11b
   140004969:	jne    0x140004962
   14000496b:	mov    rcx,QWORD PTR [rbx+0x70]
   14000496f:	inc    eax
   140004971:	mov    DWORD PTR [rbp+0x38],eax
   140004974:	mov    rax,r11
   140004977:	mov    QWORD PTR [rbp+0x30],r9
   14000497b:	mov    DWORD PTR [rbp+0x3c],r11d
   14000497f:	test   rcx,rcx
   140004982:	je     0x140004994
   140004984:	mov    r10,rcx
   140004987:	mov    rax,rdi
   14000498a:	inc    rax
   14000498d:	cmp    WORD PTR [rcx+rax*2],r11w
   140004992:	jne    0x14000498a
   140004994:	lea    eax,[rax*2+0x2]
   14000499b:	mov    QWORD PTR [rbp+0x40],r10
   14000499f:	mov    DWORD PTR [rbp+0x48],eax
   1400049a2:	mov    DWORD PTR [rbp+0x4c],r11d
   1400049a6:	lea    rax,[rsp+0x50]
   1400049ab:	mov    rcx,r8
   1400049ae:	mov    QWORD PTR [rsp+0x28],rax
   1400049b3:	lea    rdx,[rip+0x4880]        # 0x14000923a
   1400049ba:	mov    DWORD PTR [rsp+0x20],0x10
   1400049c2:	call   0x1400010dc
   1400049c7:	mov    rcx,QWORD PTR [rbp+0x50]
   1400049cb:	xor    rcx,rsp
   1400049ce:	call   0x1400066a0
   1400049d3:	lea    r11,[rsp+0x160]
   1400049db:	mov    rbx,QWORD PTR [r11+0x10]
   1400049df:	mov    rsi,QWORD PTR [r11+0x18]
   1400049e3:	mov    rdi,QWORD PTR [r11+0x20]
   1400049e7:	mov    rsp,r11
   1400049ea:	pop    rbp
   1400049eb:	ret    
   1400049ec:	int3   
   1400049ed:	int3   
   1400049ee:	int3   
   1400049ef:	int3   
   1400049f0:	int3   
   1400049f1:	int3   
   1400049f2:	int3   
   1400049f3:	int3   
   1400049f4:	mov    QWORD PTR [rsp+0x18],rbx
   1400049f9:	push   rdi
   1400049fa:	sub    rsp,0x20
   1400049fe:	mov    eax,DWORD PTR [rip+0x6e24]        # 0x14000b828
   140004a04:	test   al,0x1
   140004a06:	jne    0x140004a1d
   140004a08:	or     eax,0x1
   140004a0b:	lea    rcx,[rip+0x264e]        # 0x140007060
   140004a12:	mov    DWORD PTR [rip+0x6e10],eax        # 0x14000b828
   140004a18:	call   0x140006774
   140004a1d:	lea    r9,[rsp+0x38]
   140004a22:	xor    edx,edx
   140004a24:	lea    r8,[rsp+0x30]
   140004a29:	lea    rcx,[rip+0x6da8]        # 0x14000b7d8
   140004a30:	call   QWORD PTR [rip+0x3702]        # 0x140008138
   140004a36:	cmp    DWORD PTR [rsp+0x30],0x0
   140004a3b:	je     0x140004aa3
   140004a3d:	lea    rax,[rip+0x4164]        # 0x140008ba8
   140004a44:	lea    rdi,[rip+0x6d95]        # 0x14000b7e0
   140004a4b:	mov    QWORD PTR [rip+0x6d8e],rax        # 0x14000b7e0
   140004a52:	mov    QWORD PTR [rsp+0x38],rdi
   140004a57:	call   0x14000469c
   140004a5c:	mov    rdx,QWORD PTR [rax+0x8]
   140004a60:	mov    rax,QWORD PTR [rip+0x6d79]        # 0x14000b7e0
   140004a67:	mov    QWORD PTR [rip+0x6d7a],rdx        # 0x14000b7e8
   140004a6e:	mov    BYTE PTR [rip+0x6d7b],0x0        # 0x14000b7f0
   140004a75:	mov    DWORD PTR [rip+0x6d75],0x1        # 0x14000b7f4
   140004a7f:	mov    rbx,QWORD PTR [rax+0x8]
   140004a83:	mov    rcx,rbx
   140004a86:	call   QWORD PTR [rip+0x38ac]        # 0x140008338
   140004a8c:	mov    rcx,rdi
   140004a8f:	call   rbx
   140004a91:	mov    r8,rdi
   140004a94:	lea    rcx,[rip+0x6d3d]        # 0x14000b7d8
   140004a9b:	xor    edx,edx
   140004a9d:	call   QWORD PTR [rip+0x36ad]        # 0x140008150
   140004aa3:	mov    rax,QWORD PTR [rsp+0x38]
   140004aa8:	mov    rbx,QWORD PTR [rsp+0x40]
   140004aad:	add    rsp,0x20
   140004ab1:	pop    rdi
   140004ab2:	ret    
   140004ab3:	int3   
   140004ab4:	int3   
   140004ab5:	int3   
   140004ab6:	int3   
   140004ab7:	int3   
   140004ab8:	int3   
   140004ab9:	int3   
   140004aba:	int3   
   140004abb:	int3   
   140004abc:	mov    rax,rsp
   140004abf:	mov    QWORD PTR [rax+0x8],rbx
   140004ac3:	mov    QWORD PTR [rax+0x10],rsi
   140004ac7:	mov    QWORD PTR [rax+0x18],rdi
   140004acb:	mov    DWORD PTR [rax+0x20],r9d
   140004acf:	push   rbp
   140004ad0:	lea    rbp,[rax-0x7a8]
   140004ad7:	sub    rsp,0x8a0
   140004ade:	mov    rax,QWORD PTR [rip+0x6523]        # 0x14000b008
   140004ae5:	xor    rax,rsp
   140004ae8:	mov    QWORD PTR [rbp+0x790],rax
   140004aef:	mov    rax,QWORD PTR [rbp+0x7d8]
   140004af6:	lea    rcx,[rbp-0x70]
   140004afa:	mov    r9,QWORD PTR [rbp+0x7d0]
   140004b01:	mov    rsi,r8
   140004b04:	mov    rdi,rdx
   140004b07:	mov    QWORD PTR [rsp+0x20],rax
   140004b0c:	or     rbx,0xffffffffffffffff
   140004b10:	mov    edx,0x800
   140004b15:	mov    r8,rbx
   140004b18:	call   QWORD PTR [rip+0x3762]        # 0x140008280
   140004b1e:	call   0x14000469c
   140004b23:	mov    r8,QWORD PTR [rax+0x8]
   140004b27:	cmp    DWORD PTR [r8],0x2
   140004b2b:	jbe    0x140004be1
   140004b31:	xor    r9d,r9d
   140004b34:	lea    rcx,[rip+0x408d]        # 0x140008bc8
   140004b3b:	mov    rdx,rcx
   140004b3e:	mov    eax,r9d
   140004b41:	test   rdi,rdi
   140004b44:	je     0x140004b55
   140004b46:	mov    rdx,rdi
   140004b49:	mov    rax,rbx
   140004b4c:	inc    rax
   140004b4f:	cmp    BYTE PTR [rdi+rax*1],r9b
   140004b53:	jne    0x140004b4c
   140004b55:	inc    eax
   140004b57:	mov    QWORD PTR [rsp+0x50],rdx
   140004b5c:	mov    DWORD PTR [rsp+0x58],eax
   140004b60:	mov    rax,r9
   140004b63:	mov    DWORD PTR [rsp+0x5c],r9d
   140004b68:	test   rsi,rsi
   140004b6b:	je     0x140004b7c
   140004b6d:	mov    rcx,rsi
   140004b70:	mov    rax,rbx
   140004b73:	inc    rax
   140004b76:	cmp    BYTE PTR [rsi+rax*1],r9b
   140004b7a:	jne    0x140004b73
   140004b7c:	inc    eax
   140004b7e:	mov    QWORD PTR [rsp+0x60],rcx
   140004b83:	mov    DWORD PTR [rsp+0x68],eax
   140004b87:	lea    rax,[rbp+0x7c8]
   140004b8e:	mov    QWORD PTR [rsp+0x70],rax
   140004b93:	lea    rax,[rbp-0x70]
   140004b97:	mov    DWORD PTR [rsp+0x6c],r9d
   140004b9c:	mov    QWORD PTR [rsp+0x78],0x4
   140004ba5:	inc    rbx
   140004ba8:	cmp    BYTE PTR [rax+rbx*1],r9b
   140004bac:	jne    0x140004ba5
   140004bae:	lea    rax,[rbp-0x70]
   140004bb2:	mov    DWORD PTR [rbp-0x74],r9d
   140004bb6:	mov    QWORD PTR [rbp-0x80],rax
   140004bba:	lea    eax,[rbx+0x1]
   140004bbd:	mov    DWORD PTR [rbp-0x78],eax
   140004bc0:	lea    rax,[rsp+0x30]
   140004bc5:	mov    rcx,r8
   140004bc8:	mov    QWORD PTR [rsp+0x28],rax
   140004bcd:	lea    rdx,[rip+0x4769]        # 0x14000933d
   140004bd4:	mov    DWORD PTR [rsp+0x20],0x6
   140004bdc:	call   0x1400010dc
   140004be1:	mov    rcx,QWORD PTR [rbp+0x790]
   140004be8:	xor    rcx,rsp
   140004beb:	call   0x1400066a0
   140004bf0:	lea    r11,[rsp+0x8a0]
   140004bf8:	mov    rbx,QWORD PTR [r11+0x10]
   140004bfc:	mov    rsi,QWORD PTR [r11+0x18]
   140004c00:	mov    rdi,QWORD PTR [r11+0x20]
   140004c04:	mov    rsp,r11
   140004c07:	pop    rbp
   140004c08:	ret    
   140004c09:	int3   
   140004c0a:	int3   
   140004c0b:	int3   
   140004c0c:	int3   
   140004c0d:	int3   
   140004c0e:	int3   
   140004c0f:	int3   
   140004c10:	mov    rax,rsp
   140004c13:	mov    QWORD PTR [rax+0x8],rbx
   140004c17:	mov    QWORD PTR [rax+0x10],rsi
   140004c1b:	mov    QWORD PTR [rax+0x18],rdi
   140004c1f:	mov    DWORD PTR [rax+0x20],r9d
   140004c23:	push   rbp
   140004c24:	lea    rbp,[rax-0x7a8]
   140004c2b:	sub    rsp,0x8a0
   140004c32:	mov    rax,QWORD PTR [rip+0x63cf]        # 0x14000b008
   140004c39:	xor    rax,rsp
   140004c3c:	mov    QWORD PTR [rbp+0x790],rax
   140004c43:	mov    rax,QWORD PTR [rbp+0x7d8]
   140004c4a:	lea    rcx,[rbp-0x70]
   140004c4e:	mov    r9,QWORD PTR [rbp+0x7d0]
   140004c55:	mov    rsi,r8
   140004c58:	mov    rdi,rdx
   140004c5b:	mov    QWORD PTR [rsp+0x20],rax
   140004c60:	or     rbx,0xffffffffffffffff
   140004c64:	mov    edx,0x800
   140004c69:	mov    r8,rbx
   140004c6c:	call   QWORD PTR [rip+0x360e]        # 0x140008280
   140004c72:	call   0x14000469c
   140004c77:	mov    r8,QWORD PTR [rax+0x8]
   140004c7b:	cmp    DWORD PTR [r8],0x5
   140004c7f:	jbe    0x140004d35
   140004c85:	xor    r9d,r9d
   140004c88:	lea    rcx,[rip+0x3f39]        # 0x140008bc8
   140004c8f:	mov    rdx,rcx
   140004c92:	mov    eax,r9d
   140004c95:	test   rdi,rdi
   140004c98:	je     0x140004ca9
   140004c9a:	mov    rdx,rdi
   140004c9d:	mov    rax,rbx
   140004ca0:	inc    rax
   140004ca3:	cmp    BYTE PTR [rdi+rax*1],r9b
   140004ca7:	jne    0x140004ca0
   140004ca9:	inc    eax
   140004cab:	mov    QWORD PTR [rsp+0x50],rdx
   140004cb0:	mov    DWORD PTR [rsp+0x58],eax
   140004cb4:	mov    rax,r9
   140004cb7:	mov    DWORD PTR [rsp+0x5c],r9d
   140004cbc:	test   rsi,rsi
   140004cbf:	je     0x140004cd0
   140004cc1:	mov    rcx,rsi
   140004cc4:	mov    rax,rbx
   140004cc7:	inc    rax
   140004cca:	cmp    BYTE PTR [rsi+rax*1],r9b
   140004cce:	jne    0x140004cc7
   140004cd0:	inc    eax
   140004cd2:	mov    QWORD PTR [rsp+0x60],rcx
   140004cd7:	mov    DWORD PTR [rsp+0x68],eax
   140004cdb:	lea    rax,[rbp+0x7c8]
   140004ce2:	mov    QWORD PTR [rsp+0x70],rax
   140004ce7:	lea    rax,[rbp-0x70]
   140004ceb:	mov    DWORD PTR [rsp+0x6c],r9d
   140004cf0:	mov    QWORD PTR [rsp+0x78],0x4
   140004cf9:	inc    rbx
   140004cfc:	cmp    BYTE PTR [rax+rbx*1],r9b
   140004d00:	jne    0x140004cf9
   140004d02:	lea    rax,[rbp-0x70]
   140004d06:	mov    DWORD PTR [rbp-0x74],r9d
   140004d0a:	mov    QWORD PTR [rbp-0x80],rax
   140004d0e:	lea    eax,[rbx+0x1]
   140004d11:	mov    DWORD PTR [rbp-0x78],eax
   140004d14:	lea    rax,[rsp+0x30]
   140004d19:	mov    rcx,r8
   140004d1c:	mov    QWORD PTR [rsp+0x28],rax
   140004d21:	lea    rdx,[rip+0x44d9]        # 0x140009201
   140004d28:	mov    DWORD PTR [rsp+0x20],0x6
   140004d30:	call   0x1400010dc
   140004d35:	mov    rcx,QWORD PTR [rbp+0x790]
   140004d3c:	xor    rcx,rsp
   140004d3f:	call   0x1400066a0
   140004d44:	lea    r11,[rsp+0x8a0]
   140004d4c:	mov    rbx,QWORD PTR [r11+0x10]
   140004d50:	mov    rsi,QWORD PTR [r11+0x18]
   140004d54:	mov    rdi,QWORD PTR [r11+0x20]
   140004d58:	mov    rsp,r11
   140004d5b:	pop    rbp
   140004d5c:	ret    
   140004d5d:	int3   
   140004d5e:	int3   
   140004d5f:	int3   
   140004d60:	int3   
   140004d61:	int3   
   140004d62:	int3   
   140004d63:	int3   
   140004d64:	mov    rax,rsp
   140004d67:	mov    QWORD PTR [rax+0x8],rbx
   140004d6b:	mov    QWORD PTR [rax+0x10],rsi
   140004d6f:	mov    QWORD PTR [rax+0x18],rdi
   140004d73:	mov    DWORD PTR [rax+0x20],r9d
   140004d77:	push   rbp
   140004d78:	lea    rbp,[rax-0x7a8]
   140004d7f:	sub    rsp,0x8a0
   140004d86:	mov    rax,QWORD PTR [rip+0x627b]        # 0x14000b008
   140004d8d:	xor    rax,rsp
   140004d90:	mov    QWORD PTR [rbp+0x790],rax
   140004d97:	mov    rax,QWORD PTR [rbp+0x7d8]
   140004d9e:	lea    rcx,[rbp-0x70]
   140004da2:	mov    r9,QWORD PTR [rbp+0x7d0]
   140004da9:	mov    rsi,r8
   140004dac:	mov    rdi,rdx
   140004daf:	mov    QWORD PTR [rsp+0x20],rax
   140004db4:	or     rbx,0xffffffffffffffff
   140004db8:	mov    edx,0x800
   140004dbd:	mov    r8,rbx
   140004dc0:	call   QWORD PTR [rip+0x34ba]        # 0x140008280
   140004dc6:	call   0x14000469c
   140004dcb:	mov    r8,QWORD PTR [rax+0x8]
   140004dcf:	cmp    DWORD PTR [r8],0x3
   140004dd3:	jbe    0x140004e89
   140004dd9:	xor    r9d,r9d
   140004ddc:	lea    rcx,[rip+0x3de5]        # 0x140008bc8
   140004de3:	mov    rdx,rcx
   140004de6:	mov    eax,r9d
   140004de9:	test   rdi,rdi
   140004dec:	je     0x140004dfd
   140004dee:	mov    rdx,rdi
   140004df1:	mov    rax,rbx
   140004df4:	inc    rax
   140004df7:	cmp    BYTE PTR [rdi+rax*1],r9b
   140004dfb:	jne    0x140004df4
   140004dfd:	inc    eax
   140004dff:	mov    QWORD PTR [rsp+0x50],rdx
   140004e04:	mov    DWORD PTR [rsp+0x58],eax
   140004e08:	mov    rax,r9
   140004e0b:	mov    DWORD PTR [rsp+0x5c],r9d
   140004e10:	test   rsi,rsi
   140004e13:	je     0x140004e24
   140004e15:	mov    rcx,rsi
   140004e18:	mov    rax,rbx
   140004e1b:	inc    rax
   140004e1e:	cmp    BYTE PTR [rsi+rax*1],r9b
   140004e22:	jne    0x140004e1b
   140004e24:	inc    eax
   140004e26:	mov    QWORD PTR [rsp+0x60],rcx
   140004e2b:	mov    DWORD PTR [rsp+0x68],eax
   140004e2f:	lea    rax,[rbp+0x7c8]
   140004e36:	mov    QWORD PTR [rsp+0x70],rax
   140004e3b:	lea    rax,[rbp-0x70]
   140004e3f:	mov    DWORD PTR [rsp+0x6c],r9d
   140004e44:	mov    QWORD PTR [rsp+0x78],0x4
   140004e4d:	inc    rbx
   140004e50:	cmp    BYTE PTR [rax+rbx*1],r9b
   140004e54:	jne    0x140004e4d
   140004e56:	lea    rax,[rbp-0x70]
   140004e5a:	mov    DWORD PTR [rbp-0x74],r9d
   140004e5e:	mov    QWORD PTR [rbp-0x80],rax
   140004e62:	lea    eax,[rbx+0x1]
   140004e65:	mov    DWORD PTR [rbp-0x78],eax
   140004e68:	lea    rax,[rsp+0x30]
   140004e6d:	mov    rcx,r8
   140004e70:	mov    QWORD PTR [rsp+0x28],rax
   140004e75:	lea    rdx,[rip+0x409d]        # 0x140008f19
   140004e7c:	mov    DWORD PTR [rsp+0x20],0x6
   140004e84:	call   0x1400010dc
   140004e89:	mov    rcx,QWORD PTR [rbp+0x790]
   140004e90:	xor    rcx,rsp
   140004e93:	call   0x1400066a0
   140004e98:	lea    r11,[rsp+0x8a0]
   140004ea0:	mov    rbx,QWORD PTR [r11+0x10]
   140004ea4:	mov    rsi,QWORD PTR [r11+0x18]
   140004ea8:	mov    rdi,QWORD PTR [r11+0x20]
   140004eac:	mov    rsp,r11
   140004eaf:	pop    rbp
   140004eb0:	ret    
   140004eb1:	int3   
   140004eb2:	int3   
   140004eb3:	int3   
   140004eb4:	int3   
   140004eb5:	int3   
   140004eb6:	int3   
   140004eb7:	int3   
   140004eb8:	mov    rax,rsp
   140004ebb:	mov    QWORD PTR [rax+0x8],rbx
   140004ebf:	mov    QWORD PTR [rax+0x10],rsi
   140004ec3:	mov    QWORD PTR [rax+0x18],rdi
   140004ec7:	mov    DWORD PTR [rax+0x20],r9d
   140004ecb:	push   rbp
   140004ecc:	lea    rbp,[rax-0x7a8]
   140004ed3:	sub    rsp,0x8a0
   140004eda:	mov    rax,QWORD PTR [rip+0x6127]        # 0x14000b008
   140004ee1:	xor    rax,rsp
   140004ee4:	mov    QWORD PTR [rbp+0x790],rax
   140004eeb:	mov    rax,QWORD PTR [rbp+0x7d8]
   140004ef2:	lea    rcx,[rbp-0x70]
   140004ef6:	mov    r9,QWORD PTR [rbp+0x7d0]
   140004efd:	mov    rsi,r8
   140004f00:	mov    rdi,rdx
   140004f03:	mov    QWORD PTR [rsp+0x20],rax
   140004f08:	or     rbx,0xffffffffffffffff
   140004f0c:	mov    edx,0x800
   140004f11:	mov    r8,rbx
   140004f14:	call   QWORD PTR [rip+0x3366]        # 0x140008280
   140004f1a:	call   0x14000469c
   140004f1f:	mov    r8,QWORD PTR [rax+0x8]
   140004f23:	cmp    DWORD PTR [r8],0x4
   140004f27:	jbe    0x140004fdd
   140004f2d:	xor    r9d,r9d
   140004f30:	lea    rcx,[rip+0x3c91]        # 0x140008bc8
   140004f37:	mov    rdx,rcx
   140004f3a:	mov    eax,r9d
   140004f3d:	test   rdi,rdi
   140004f40:	je     0x140004f51
   140004f42:	mov    rdx,rdi
   140004f45:	mov    rax,rbx
   140004f48:	inc    rax
   140004f4b:	cmp    BYTE PTR [rdi+rax*1],r9b
   140004f4f:	jne    0x140004f48
   140004f51:	inc    eax
   140004f53:	mov    QWORD PTR [rsp+0x50],rdx
   140004f58:	mov    DWORD PTR [rsp+0x58],eax
   140004f5c:	mov    rax,r9
   140004f5f:	mov    DWORD PTR [rsp+0x5c],r9d
   140004f64:	test   rsi,rsi
   140004f67:	je     0x140004f78
   140004f69:	mov    rcx,rsi
   140004f6c:	mov    rax,rbx
   140004f6f:	inc    rax
   140004f72:	cmp    BYTE PTR [rsi+rax*1],r9b
   140004f76:	jne    0x140004f6f
   140004f78:	inc    eax
   140004f7a:	mov    QWORD PTR [rsp+0x60],rcx
   140004f7f:	mov    DWORD PTR [rsp+0x68],eax
   140004f83:	lea    rax,[rbp+0x7c8]
   140004f8a:	mov    QWORD PTR [rsp+0x70],rax
   140004f8f:	lea    rax,[rbp-0x70]
   140004f93:	mov    DWORD PTR [rsp+0x6c],r9d
   140004f98:	mov    QWORD PTR [rsp+0x78],0x4
   140004fa1:	inc    rbx
   140004fa4:	cmp    BYTE PTR [rax+rbx*1],r9b
   140004fa8:	jne    0x140004fa1
   140004faa:	lea    rax,[rbp-0x70]
   140004fae:	mov    DWORD PTR [rbp-0x74],r9d
   140004fb2:	mov    QWORD PTR [rbp-0x80],rax
   140004fb6:	lea    eax,[rbx+0x1]
   140004fb9:	mov    DWORD PTR [rbp-0x78],eax
   140004fbc:	lea    rax,[rsp+0x30]
   140004fc1:	mov    rcx,r8
   140004fc4:	mov    QWORD PTR [rsp+0x28],rax
   140004fc9:	lea    rdx,[rip+0x3f10]        # 0x140008ee0
   140004fd0:	mov    DWORD PTR [rsp+0x20],0x6
   140004fd8:	call   0x1400010dc
   140004fdd:	mov    rcx,QWORD PTR [rbp+0x790]
   140004fe4:	xor    rcx,rsp
   140004fe7:	call   0x1400066a0
   140004fec:	lea    r11,[rsp+0x8a0]
   140004ff4:	mov    rbx,QWORD PTR [r11+0x10]
   140004ff8:	mov    rsi,QWORD PTR [r11+0x18]
   140004ffc:	mov    rdi,QWORD PTR [r11+0x20]
   140005000:	mov    rsp,r11
   140005003:	pop    rbp
   140005004:	ret    
   140005005:	int3   
   140005006:	int3   
   140005007:	int3   
   140005008:	int3   
   140005009:	int3   
   14000500a:	int3   
   14000500b:	int3   
   14000500c:	mov    rax,rsp
   14000500f:	mov    QWORD PTR [rax+0x8],rbx
   140005013:	mov    QWORD PTR [rax+0x10],rsi
   140005017:	mov    QWORD PTR [rax+0x18],rdi
   14000501b:	mov    DWORD PTR [rax+0x20],r9d
   14000501f:	push   rbp
   140005020:	lea    rbp,[rax-0x7a8]
   140005027:	sub    rsp,0x8a0
   14000502e:	mov    rax,QWORD PTR [rip+0x5fd3]        # 0x14000b008
   140005035:	xor    rax,rsp
   140005038:	mov    QWORD PTR [rbp+0x790],rax
   14000503f:	mov    rax,QWORD PTR [rbp+0x7d8]
   140005046:	lea    rcx,[rbp-0x70]
   14000504a:	mov    r9,QWORD PTR [rbp+0x7d0]
   140005051:	mov    rsi,r8
   140005054:	mov    rdi,rdx
   140005057:	mov    QWORD PTR [rsp+0x20],rax
   14000505c:	or     rbx,0xffffffffffffffff
   140005060:	mov    edx,0x800
   140005065:	mov    r8,rbx
   140005068:	call   QWORD PTR [rip+0x3212]        # 0x140008280
   14000506e:	call   0x14000469c
   140005073:	mov    r8,QWORD PTR [rax+0x8]
   140005077:	cmp    DWORD PTR [r8],0x5
   14000507b:	jbe    0x140005131
   140005081:	xor    r9d,r9d
   140005084:	lea    rcx,[rip+0x3b3d]        # 0x140008bc8
   14000508b:	mov    rdx,rcx
   14000508e:	mov    eax,r9d
   140005091:	test   rdi,rdi
   140005094:	je     0x1400050a5
   140005096:	mov    rdx,rdi
   140005099:	mov    rax,rbx
   14000509c:	inc    rax
   14000509f:	cmp    BYTE PTR [rdi+rax*1],r9b
   1400050a3:	jne    0x14000509c
   1400050a5:	inc    eax
   1400050a7:	mov    QWORD PTR [rsp+0x50],rdx
   1400050ac:	mov    DWORD PTR [rsp+0x58],eax
   1400050b0:	mov    rax,r9
   1400050b3:	mov    DWORD PTR [rsp+0x5c],r9d
   1400050b8:	test   rsi,rsi
   1400050bb:	je     0x1400050cc
   1400050bd:	mov    rcx,rsi
   1400050c0:	mov    rax,rbx
   1400050c3:	inc    rax
   1400050c6:	cmp    BYTE PTR [rsi+rax*1],r9b
   1400050ca:	jne    0x1400050c3
   1400050cc:	inc    eax
   1400050ce:	mov    QWORD PTR [rsp+0x60],rcx
   1400050d3:	mov    DWORD PTR [rsp+0x68],eax
   1400050d7:	lea    rax,[rbp+0x7c8]
   1400050de:	mov    QWORD PTR [rsp+0x70],rax
   1400050e3:	lea    rax,[rbp-0x70]
   1400050e7:	mov    DWORD PTR [rsp+0x6c],r9d
   1400050ec:	mov    QWORD PTR [rsp+0x78],0x4
   1400050f5:	inc    rbx
   1400050f8:	cmp    BYTE PTR [rax+rbx*1],r9b
   1400050fc:	jne    0x1400050f5
   1400050fe:	lea    rax,[rbp-0x70]
   140005102:	mov    DWORD PTR [rbp-0x74],r9d
   140005106:	mov    QWORD PTR [rbp-0x80],rax
   14000510a:	lea    eax,[rbx+0x1]
   14000510d:	mov    DWORD PTR [rbp-0x78],eax
   140005110:	lea    rax,[rsp+0x30]
   140005115:	mov    rcx,r8
   140005118:	mov    QWORD PTR [rsp+0x28],rax
   14000511d:	lea    rdx,[rip+0x4253]        # 0x140009377
   140005124:	mov    DWORD PTR [rsp+0x20],0x6
   14000512c:	call   0x1400010dc
   140005131:	mov    rcx,QWORD PTR [rbp+0x790]
   140005138:	xor    rcx,rsp
   14000513b:	call   0x1400066a0
   140005140:	lea    r11,[rsp+0x8a0]
   140005148:	mov    rbx,QWORD PTR [r11+0x10]
   14000514c:	mov    rsi,QWORD PTR [r11+0x18]
   140005150:	mov    rdi,QWORD PTR [r11+0x20]
   140005154:	mov    rsp,r11
   140005157:	pop    rbp
   140005158:	ret    
   140005159:	int3   
   14000515a:	int3   
   14000515b:	int3   
   14000515c:	int3   
   14000515d:	int3   
   14000515e:	int3   
   14000515f:	int3   
   140005160:	mov    rax,rsp
   140005163:	mov    QWORD PTR [rax+0x8],rbx
   140005167:	mov    QWORD PTR [rax+0x10],rsi
   14000516b:	mov    QWORD PTR [rax+0x18],rdi
   14000516f:	mov    DWORD PTR [rax+0x20],r9d
   140005173:	push   rbp
   140005174:	lea    rbp,[rax-0x7a8]
   14000517b:	sub    rsp,0x8a0
   140005182:	mov    rax,QWORD PTR [rip+0x5e7f]        # 0x14000b008
   140005189:	xor    rax,rsp
   14000518c:	mov    QWORD PTR [rbp+0x790],rax
   140005193:	mov    rax,QWORD PTR [rbp+0x7d8]
   14000519a:	lea    rcx,[rbp-0x70]
   14000519e:	mov    r9,QWORD PTR [rbp+0x7d0]
   1400051a5:	mov    rsi,r8
   1400051a8:	mov    rdi,rdx
   1400051ab:	mov    QWORD PTR [rsp+0x20],rax
   1400051b0:	or     rbx,0xffffffffffffffff
   1400051b4:	mov    edx,0x800
   1400051b9:	mov    r8,rbx
   1400051bc:	call   QWORD PTR [rip+0x30be]        # 0x140008280
   1400051c2:	call   0x14000469c
   1400051c7:	mov    r8,QWORD PTR [rax+0x8]
   1400051cb:	cmp    DWORD PTR [r8],0x5
   1400051cf:	jbe    0x140005285
   1400051d5:	xor    r9d,r9d
   1400051d8:	lea    rcx,[rip+0x39e9]        # 0x140008bc8
   1400051df:	mov    rdx,rcx
   1400051e2:	mov    eax,r9d
   1400051e5:	test   rdi,rdi
   1400051e8:	je     0x1400051f9
   1400051ea:	mov    rdx,rdi
   1400051ed:	mov    rax,rbx
   1400051f0:	inc    rax
   1400051f3:	cmp    BYTE PTR [rdi+rax*1],r9b
   1400051f7:	jne    0x1400051f0
   1400051f9:	inc    eax
   1400051fb:	mov    QWORD PTR [rsp+0x50],rdx
   140005200:	mov    DWORD PTR [rsp+0x58],eax
   140005204:	mov    rax,r9
   140005207:	mov    DWORD PTR [rsp+0x5c],r9d
   14000520c:	test   rsi,rsi
   14000520f:	je     0x140005220
   140005211:	mov    rcx,rsi
   140005214:	mov    rax,rbx
   140005217:	inc    rax
   14000521a:	cmp    BYTE PTR [rsi+rax*1],r9b
   14000521e:	jne    0x140005217
   140005220:	inc    eax
   140005222:	mov    QWORD PTR [rsp+0x60],rcx
   140005227:	mov    DWORD PTR [rsp+0x68],eax
   14000522b:	lea    rax,[rbp+0x7c8]
   140005232:	mov    QWORD PTR [rsp+0x70],rax
   140005237:	lea    rax,[rbp-0x70]
   14000523b:	mov    DWORD PTR [rsp+0x6c],r9d
   140005240:	mov    QWORD PTR [rsp+0x78],0x4
   140005249:	inc    rbx
   14000524c:	cmp    BYTE PTR [rax+rbx*1],r9b
   140005250:	jne    0x140005249
   140005252:	lea    rax,[rbp-0x70]
   140005256:	mov    DWORD PTR [rbp-0x74],r9d
   14000525a:	mov    QWORD PTR [rbp-0x80],rax
   14000525e:	lea    eax,[rbx+0x1]
   140005261:	mov    DWORD PTR [rbp-0x78],eax
   140005264:	lea    rax,[rsp+0x30]
   140005269:	mov    rcx,r8
   14000526c:	mov    QWORD PTR [rsp+0x28],rax
   140005271:	lea    rdx,[rip+0x3d01]        # 0x140008f79
   140005278:	mov    DWORD PTR [rsp+0x20],0x6
   140005280:	call   0x1400010dc
   140005285:	mov    rcx,QWORD PTR [rbp+0x790]
   14000528c:	xor    rcx,rsp
   14000528f:	call   0x1400066a0
   140005294:	lea    r11,[rsp+0x8a0]
   14000529c:	mov    rbx,QWORD PTR [r11+0x10]
   1400052a0:	mov    rsi,QWORD PTR [r11+0x18]
   1400052a4:	mov    rdi,QWORD PTR [r11+0x20]
   1400052a8:	mov    rsp,r11
   1400052ab:	pop    rbp
   1400052ac:	ret    
   1400052ad:	int3   
   1400052ae:	int3   
   1400052af:	int3   
   1400052b0:	int3   
   1400052b1:	int3   
   1400052b2:	int3   
   1400052b3:	int3   
   1400052b4:	int3   
   1400052b5:	int3   
   1400052b6:	int3   
   1400052b7:	int3   
   1400052b8:	int3   
   1400052b9:	int3   
   1400052ba:	int3   
   1400052bb:	int3   
   1400052bc:	int3   
   1400052bd:	int3   
   1400052be:	int3   
   1400052bf:	int3   
   1400052c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400052c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400052ca:	push   rdi
   1400052cb:	sub    rsp,0x30
   1400052cf:	mov    ebx,r9d
   1400052d2:	mov    rdi,r8
   1400052d5:	mov    rsi,rdx
   1400052d8:	test   ecx,ecx
   1400052da:	je     0x14000545e
   1400052e0:	sub    ecx,0x1
   1400052e3:	je     0x140005422
   1400052e9:	sub    ecx,0x1
   1400052ec:	je     0x1400053de
   1400052f2:	sub    ecx,0x1
   1400052f5:	je     0x140005397
   1400052fb:	sub    ecx,0x1
   1400052fe:	je     0x140005350
   140005300:	cmp    ecx,0x1
   140005303:	jne    0x140005498
   140005309:	call   0x1400049f4
   14000530e:	mov    rcx,QWORD PTR [rax+0x8]
   140005312:	test   rcx,rcx
   140005315:	je     0x140005498
   14000531b:	cmp    DWORD PTR [rcx],0x0
   14000531e:	jbe    0x140005498
   140005324:	call   0x1400049f4
   140005329:	mov    rax,QWORD PTR [rsp+0x68]
   14000532e:	mov    r9d,ebx
   140005331:	mov    QWORD PTR [rsp+0x28],rax
   140005336:	mov    r8,rdi
   140005339:	mov    rax,QWORD PTR [rsp+0x60]
   14000533e:	mov    rdx,rsi
   140005341:	mov    QWORD PTR [rsp+0x20],rax
   140005346:	call   0x140005160
   14000534b:	jmp    0x140005498
   140005350:	call   0x1400049f4
   140005355:	mov    rcx,QWORD PTR [rax+0x8]
   140005359:	test   rcx,rcx
   14000535c:	je     0x140005498
   140005362:	cmp    DWORD PTR [rcx],0x0
   140005365:	jbe    0x140005498
   14000536b:	call   0x1400049f4
   140005370:	mov    rax,QWORD PTR [rsp+0x68]
   140005375:	mov    r9d,ebx
   140005378:	mov    QWORD PTR [rsp+0x28],rax
   14000537d:	mov    r8,rdi
   140005380:	mov    rax,QWORD PTR [rsp+0x60]
   140005385:	mov    rdx,rsi
   140005388:	mov    QWORD PTR [rsp+0x20],rax
   14000538d:	call   0x14000500c
   140005392:	jmp    0x140005498
   140005397:	call   0x1400049f4
   14000539c:	mov    rcx,QWORD PTR [rax+0x8]
   1400053a0:	test   rcx,rcx
   1400053a3:	je     0x140005498
   1400053a9:	cmp    DWORD PTR [rcx],0x0
   1400053ac:	jbe    0x140005498
   1400053b2:	call   0x1400049f4
   1400053b7:	mov    rax,QWORD PTR [rsp+0x68]
   1400053bc:	mov    r9d,ebx
   1400053bf:	mov    QWORD PTR [rsp+0x28],rax
   1400053c4:	mov    r8,rdi
   1400053c7:	mov    rax,QWORD PTR [rsp+0x60]
   1400053cc:	mov    rdx,rsi
   1400053cf:	mov    QWORD PTR [rsp+0x20],rax
   1400053d4:	call   0x140004eb8
   1400053d9:	jmp    0x140005498
   1400053de:	call   0x1400049f4
   1400053e3:	mov    rcx,QWORD PTR [rax+0x8]
   1400053e7:	test   rcx,rcx
   1400053ea:	je     0x140005498
   1400053f0:	cmp    DWORD PTR [rcx],0x0
   1400053f3:	jbe    0x140005498
   1400053f9:	call   0x1400049f4
   1400053fe:	mov    rax,QWORD PTR [rsp+0x68]
   140005403:	mov    r9d,ebx
   140005406:	mov    QWORD PTR [rsp+0x28],rax
   14000540b:	mov    r8,rdi
   14000540e:	mov    rax,QWORD PTR [rsp+0x60]
   140005413:	mov    rdx,rsi
   140005416:	mov    QWORD PTR [rsp+0x20],rax
   14000541b:	call   0x140004d64
   140005420:	jmp    0x140005498
   140005422:	call   0x1400049f4
   140005427:	mov    rcx,QWORD PTR [rax+0x8]
   14000542b:	test   rcx,rcx
   14000542e:	je     0x140005498
   140005430:	cmp    DWORD PTR [rcx],0x0
   140005433:	jbe    0x140005498
   140005435:	call   0x1400049f4
   14000543a:	mov    rax,QWORD PTR [rsp+0x68]
   14000543f:	mov    r9d,ebx
   140005442:	mov    QWORD PTR [rsp+0x28],rax
   140005447:	mov    r8,rdi
   14000544a:	mov    rax,QWORD PTR [rsp+0x60]
   14000544f:	mov    rdx,rsi
   140005452:	mov    QWORD PTR [rsp+0x20],rax
   140005457:	call   0x140004c10
   14000545c:	jmp    0x140005498
   14000545e:	call   0x1400049f4
   140005463:	mov    rcx,QWORD PTR [rax+0x8]
   140005467:	test   rcx,rcx
   14000546a:	je     0x140005498
   14000546c:	cmp    DWORD PTR [rcx],0x0
   14000546f:	jbe    0x140005498
   140005471:	call   0x1400049f4
   140005476:	mov    rax,QWORD PTR [rsp+0x68]
   14000547b:	mov    r9d,ebx
   14000547e:	mov    QWORD PTR [rsp+0x28],rax
   140005483:	mov    r8,rdi
   140005486:	mov    rax,QWORD PTR [rsp+0x60]
   14000548b:	mov    rdx,rsi
   14000548e:	mov    QWORD PTR [rsp+0x20],rax
   140005493:	call   0x140004abc
   140005498:	mov    rbx,QWORD PTR [rsp+0x40]
   14000549d:	mov    rsi,QWORD PTR [rsp+0x48]
   1400054a2:	add    rsp,0x30
   1400054a6:	pop    rdi
   1400054a7:	ret    
   1400054a8:	int3   
   1400054a9:	int3   
   1400054aa:	int3   
   1400054ab:	int3   
   1400054ac:	int3   
   1400054ad:	int3   
   1400054ae:	int3   
   1400054af:	int3   
   1400054b0:	rex push rbx
   1400054b2:	sub    rsp,0x30
   1400054b6:	mov    eax,DWORD PTR [rip+0x6370]        # 0x14000b82c
   1400054bc:	test   al,0x1
   1400054be:	jne    0x1400054d5
   1400054c0:	or     eax,0x1
   1400054c3:	lea    rcx,[rip+0x1c56]        # 0x140007120
   1400054ca:	mov    DWORD PTR [rip+0x635c],eax        # 0x14000b82c
   1400054d0:	call   0x140006774
   1400054d5:	lea    rbx,[rip+0x631c]        # 0x14000b7f8
   1400054dc:	xor    edx,edx
   1400054de:	mov    rcx,rbx
   1400054e1:	lea    r9,[rsp+0x48]
   1400054e6:	lea    r8,[rsp+0x40]
   1400054eb:	call   QWORD PTR [rip+0x2c47]        # 0x140008138
   1400054f1:	cmp    DWORD PTR [rsp+0x40],0x0
   1400054f6:	je     0x140005526
   1400054f8:	and    DWORD PTR [rsp+0x28],0x0
   1400054fd:	lea    rax,[rip+0x62fc]        # 0x14000b800
   140005504:	mov    QWORD PTR [rsp+0x48],rax
   140005509:	lea    rcx,[rsp+0x20]
   14000550e:	lea    rax,[rip+0x3693]        # 0x140008ba8
   140005515:	mov    QWORD PTR [rsp+0x20],rbx
   14000551a:	mov    QWORD PTR [rip+0x62df],rax        # 0x14000b800
   140005521:	call   0x140005b18
   140005526:	mov    rax,QWORD PTR [rsp+0x48]
   14000552b:	mov    rax,QWORD PTR [rax+0x8]
   14000552f:	add    rsp,0x30
   140005533:	pop    rbx
   140005534:	ret    
   140005535:	int3   
   140005536:	int3   
   140005537:	int3   
   140005538:	int3   
   140005539:	int3   
   14000553a:	int3   
   14000553b:	int3   
   14000553c:	int3   
   14000553d:	int3   
   14000553e:	int3   
   14000553f:	int3   
   140005540:	lea    rax,[rip+0x3281]        # 0x1400087c8
   140005547:	ret    
   140005548:	int3   
   140005549:	int3   
   14000554a:	int3   
   14000554b:	int3   
   14000554c:	int3   
   14000554d:	int3   
   14000554e:	int3   
   14000554f:	int3   
   140005550:	and    QWORD PTR [rdx],0x0
   140005554:	lea    rcx,[rip+0x326d]        # 0x1400087c8
   14000555b:	mov    r8,rdx
   14000555e:	mov    edx,0x17
   140005563:	rex.W jmp QWORD PTR [rip+0x2c86]        # 0x1400081f0
   14000556a:	int3   
   14000556b:	int3   
   14000556c:	int3   
   14000556d:	int3   
   14000556e:	int3   
   14000556f:	int3   
   140005570:	and    DWORD PTR [rdx],0x0
   140005573:	xor    eax,eax
   140005575:	ret    
   140005576:	int3   
   140005577:	int3   
   140005578:	int3   
   140005579:	int3   
   14000557a:	int3   
   14000557b:	int3   
   14000557c:	int3   
   14000557d:	int3   
   14000557e:	int3   
   14000557f:	int3   
   140005580:	mov    QWORD PTR [rsp+0x8],rbx
   140005585:	mov    QWORD PTR [rsp+0x10],rsi
   14000558a:	push   rdi
   14000558b:	sub    rsp,0x20
   14000558f:	xor    ebx,ebx
   140005591:	mov    rdi,r8
   140005594:	mov    QWORD PTR [r8],rbx
   140005597:	mov    rsi,rdx
   14000559a:	mov    DWORD PTR [rdx],ebx
   14000559c:	lea    ecx,[rbx+0x20]
   14000559f:	call   QWORD PTR [rip+0x2a83]        # 0x140008028
   1400055a5:	test   rax,rax
   1400055a8:	jne    0x1400055b1
   1400055aa:	mov    ebx,0x8007000e
   1400055af:	jmp    0x1400055d1
   1400055b1:	movups xmm0,XMMWORD PTR [rip+0x3098]        # 0x140008650
   1400055b8:	movdqu XMMWORD PTR [rax],xmm0
   1400055bc:	movups xmm1,XMMWORD PTR [rip+0x3135]        # 0x1400086f8
   1400055c3:	movdqu XMMWORD PTR [rax+0x10],xmm1
   1400055c8:	mov    DWORD PTR [rsi],0x2
   1400055ce:	mov    QWORD PTR [rdi],rax
   1400055d1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400055d6:	mov    eax,ebx
   1400055d8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400055dd:	add    rsp,0x20
   1400055e1:	pop    rdi
   1400055e2:	ret    
   1400055e3:	int3   
   1400055e4:	int3   
   1400055e5:	int3   
   1400055e6:	int3   
   1400055e7:	int3   
   1400055e8:	int3   
   1400055e9:	int3   
   1400055ea:	int3   
   1400055eb:	int3   
   1400055ec:	int3   
   1400055ed:	int3   
   1400055ee:	int3   
   1400055ef:	int3   
   1400055f0:	jmp    0x140005880
   1400055f5:	int3   
   1400055f6:	int3   
   1400055f7:	int3   
   1400055f8:	int3   
   1400055f9:	int3   
   1400055fa:	int3   
   1400055fb:	int3   
   1400055fc:	int3   
   1400055fd:	int3   
   1400055fe:	int3   
   1400055ff:	int3   
   140005600:	jmp    0x140005980
   140005605:	int3   
   140005606:	int3   
   140005607:	int3   
   140005608:	int3   
   140005609:	int3   
   14000560a:	int3   
   14000560b:	int3   
   14000560c:	int3   
   14000560d:	int3   
   14000560e:	int3   
   14000560f:	int3   
   140005610:	mov    rax,QWORD PTR [rcx+0x18]
   140005614:	mov    QWORD PTR [rsp+0x8],rax
   140005619:	jmp    0x140005627
   14000561b:	lea    rdx,[rax+0x1]
   14000561f:	lock cmpxchg QWORD PTR [rcx+0x18],rdx
   140005625:	je     0x140005639
   140005627:	test   rax,rax
   14000562a:	jns    0x14000561b
   14000562c:	mov    edx,0x1
   140005631:	lock xadd DWORD PTR [rax+rax*1+0x10],edx
   140005637:	inc    edx
   140005639:	mov    eax,edx
   14000563b:	ret    
   14000563c:	int3   
   14000563d:	int3   
   14000563e:	int3   
   14000563f:	int3   
   140005640:	int3   
   140005641:	int3   
   140005642:	int3   
   140005643:	int3   
   140005644:	int3   
   140005645:	int3   
   140005646:	int3   
   140005647:	int3   
   140005648:	int3   
   140005649:	int3   
   14000564a:	int3   
   14000564b:	int3   
   14000564c:	int3   
   14000564d:	int3   
   14000564e:	int3   
   14000564f:	int3   
   140005650:	mov    QWORD PTR [rsp+0x8],rbx
   140005655:	push   rdi
   140005656:	sub    rsp,0x60
   14000565a:	mov    rax,QWORD PTR [rip+0x59a7]        # 0x14000b008
   140005661:	xor    rax,rsp
   140005664:	mov    QWORD PTR [rsp+0x50],rax
   140005669:	mov    dil,r8b
   14000566c:	mov    rbx,rdx
   14000566f:	call   0x1400054b0
   140005674:	cmp    DWORD PTR [rax],0x5
   140005677:	jbe    0x1400056b7
   140005679:	movabs rcx,0x200000000000
   140005683:	test   QWORD PTR [rax+0x10],rcx
   140005687:	je     0x1400056b7
   140005689:	mov    rdx,QWORD PTR [rax+0x18]
   14000568d:	and    rdx,rcx
   140005690:	cmp    rdx,QWORD PTR [rax+0x18]
   140005694:	jne    0x1400056b7
   140005696:	lea    rcx,[rsp+0x30]
   14000569b:	mov    QWORD PTR [rsp+0x28],rcx
   1400056a0:	lea    rdx,[rip+0x381a]        # 0x140008ec1
   1400056a7:	mov    rcx,rax
   1400056aa:	mov    DWORD PTR [rsp+0x20],0x2
   1400056b2:	call   0x1400010dc
   1400056b7:	test   dil,dil
   1400056ba:	mov    rcx,rbx
   1400056bd:	setne  dl
   1400056c0:	call   QWORD PTR [rip+0x2942]        # 0x140008008
   1400056c6:	xor    eax,eax
   1400056c8:	mov    rcx,QWORD PTR [rsp+0x50]
   1400056cd:	xor    rcx,rsp
   1400056d0:	call   0x1400066a0
   1400056d5:	mov    rbx,QWORD PTR [rsp+0x70]
   1400056da:	add    rsp,0x60
   1400056de:	pop    rdi
   1400056df:	ret    
   1400056e0:	int3   
   1400056e1:	int3   
   1400056e2:	int3   
   1400056e3:	int3   
   1400056e4:	int3   
   1400056e5:	int3   
   1400056e6:	int3   
   1400056e7:	int3   
   1400056e8:	int3   
   1400056e9:	int3   
   1400056ea:	int3   
   1400056eb:	int3   
   1400056ec:	int3   
   1400056ed:	int3   
   1400056ee:	int3   
   1400056ef:	int3   
   1400056f0:	rex push rbx
   1400056f2:	push   rsi
   1400056f3:	push   rdi
   1400056f4:	sub    rsp,0x60
   1400056f8:	mov    rax,QWORD PTR [rip+0x5909]        # 0x14000b008
   1400056ff:	xor    rax,rsp
   140005702:	mov    QWORD PTR [rsp+0x50],rax
   140005707:	mov    rsi,r9
   14000570a:	mov    rdi,r8
   14000570d:	mov    rbx,rdx
   140005710:	call   0x1400054b0
   140005715:	cmp    DWORD PTR [rax],0x5
   140005718:	jbe    0x140005758
   14000571a:	movabs rcx,0x200000000000
   140005724:	test   QWORD PTR [rax+0x10],rcx
   140005728:	je     0x140005758
   14000572a:	mov    r8,QWORD PTR [rax+0x18]
   14000572e:	and    r8,rcx
   140005731:	cmp    r8,QWORD PTR [rax+0x18]
   140005735:	jne    0x140005758
   140005737:	lea    rcx,[rsp+0x30]
   14000573c:	mov    QWORD PTR [rsp+0x28],rcx
   140005741:	lea    rdx,[rip+0x380d]        # 0x140008f55
   140005748:	mov    rcx,rax
   14000574b:	mov    DWORD PTR [rsp+0x20],0x2
   140005753:	call   0x1400010dc
   140005758:	mov    rdx,rdi
   14000575b:	mov    rcx,rbx
   14000575e:	call   QWORD PTR [rip+0x28ac]        # 0x140008010
   140005764:	mov    QWORD PTR [rsi],rax
   140005767:	xor    eax,eax
   140005769:	mov    rcx,QWORD PTR [rsp+0x50]
   14000576e:	xor    rcx,rsp
   140005771:	call   0x1400066a0
   140005776:	add    rsp,0x60
   14000577a:	pop    rdi
   14000577b:	pop    rsi
   14000577c:	pop    rbx
   14000577d:	ret    
   14000577e:	int3   
   14000577f:	int3   
   140005780:	int3   
   140005781:	int3   
   140005782:	int3   
   140005783:	int3   
   140005784:	int3   
   140005785:	int3   
   140005786:	int3   
   140005787:	int3   
   140005788:	int3   
   140005789:	int3   
   14000578a:	int3   
   14000578b:	int3   
   14000578c:	int3   
   14000578d:	int3   
   14000578e:	int3   
   14000578f:	int3   
   140005790:	rex push rbx
   140005792:	push   rsi
   140005793:	push   rdi
   140005794:	sub    rsp,0x60
   140005798:	mov    rax,QWORD PTR [rip+0x5869]        # 0x14000b008
   14000579f:	xor    rax,rsp
   1400057a2:	mov    QWORD PTR [rsp+0x50],rax
   1400057a7:	mov    rsi,r9
   1400057aa:	mov    rdi,r8
   1400057ad:	mov    rbx,rdx
   1400057b0:	call   0x1400054b0
   1400057b5:	cmp    DWORD PTR [rax],0x5
   1400057b8:	jbe    0x1400057f8
   1400057ba:	movabs rcx,0x200000000000
   1400057c4:	test   QWORD PTR [rax+0x10],rcx
   1400057c8:	je     0x1400057f8
   1400057ca:	mov    r8,QWORD PTR [rax+0x18]
   1400057ce:	and    r8,rcx
   1400057d1:	cmp    r8,QWORD PTR [rax+0x18]
   1400057d5:	jne    0x1400057f8
   1400057d7:	lea    rcx,[rsp+0x30]
   1400057dc:	mov    QWORD PTR [rsp+0x28],rcx
   1400057e1:	lea    rdx,[rip+0x39f4]        # 0x1400091dc
   1400057e8:	mov    rcx,rax
   1400057eb:	mov    DWORD PTR [rsp+0x20],0x2
   1400057f3:	call   0x1400010dc
   1400057f8:	mov    rdx,rdi
   1400057fb:	mov    rcx,rbx
   1400057fe:	call   QWORD PTR [rip+0x27fc]        # 0x140008000
   140005804:	mov    QWORD PTR [rsi],rax
   140005807:	xor    eax,eax
   140005809:	mov    rcx,QWORD PTR [rsp+0x50]
   14000580e:	xor    rcx,rsp
   140005811:	call   0x1400066a0
   140005816:	add    rsp,0x60
   14000581a:	pop    rdi
   14000581b:	pop    rsi
   14000581c:	pop    rbx
   14000581d:	ret    
   14000581e:	int3   
   14000581f:	int3   
   140005820:	int3   
   140005821:	int3   
   140005822:	int3   
   140005823:	int3   
   140005824:	int3   
   140005825:	int3   
   140005826:	int3   
   140005827:	int3   
   140005828:	int3   
   140005829:	int3   
   14000582a:	int3   
   14000582b:	int3   
   14000582c:	int3   
   14000582d:	int3   
   14000582e:	int3   
   14000582f:	int3   
   140005830:	mov    QWORD PTR [rsp+0x8],rbx
   140005835:	push   rdi
   140005836:	sub    rsp,0x20
   14000583a:	mov    rbx,rcx
   14000583d:	mov    edi,edx
   14000583f:	mov    rcx,QWORD PTR [rcx+0x18]
   140005843:	test   rcx,rcx
   140005846:	jns    0x140005850
   140005848:	add    rcx,rcx
   14000584b:	call   0x140001d80
   140005850:	test   dil,0x1
   140005854:	je     0x14000585e
   140005856:	mov    rcx,rbx
   140005859:	call   0x1400062b0
   14000585e:	mov    rax,rbx
   140005861:	mov    rbx,QWORD PTR [rsp+0x30]
   140005866:	add    rsp,0x20
   14000586a:	pop    rdi
   14000586b:	ret    
   14000586c:	int3   
   14000586d:	int3   
   14000586e:	int3   
   14000586f:	int3   
   140005870:	int3   
   140005871:	int3   
   140005872:	int3   
   140005873:	int3   
   140005874:	int3   
   140005875:	int3   
   140005876:	int3   
   140005877:	int3   
   140005878:	int3   
   140005879:	int3   
   14000587a:	int3   
   14000587b:	int3   
   14000587c:	int3   
   14000587d:	int3   
   14000587e:	int3   
   14000587f:	int3   
   140005880:	mov    QWORD PTR [rsp+0x8],rbx
   140005885:	mov    QWORD PTR [rsp+0x10],rsi
   14000588a:	push   rdi
   14000588b:	sub    rsp,0x20
   14000588f:	xor    esi,esi
   140005891:	mov    rdi,rcx
   140005894:	mov    QWORD PTR [r8],rsi
   140005897:	cmp    DWORD PTR [rdx],esi
   140005899:	jne    0x1400058bc
   14000589b:	mov    eax,DWORD PTR [rip+0x2d83]        # 0x140008624
   1400058a1:	cmp    DWORD PTR [rdx+0x4],eax
   1400058a4:	jne    0x1400058bc
   1400058a6:	mov    eax,DWORD PTR [rip+0x2d7c]        # 0x140008628
   1400058ac:	cmp    DWORD PTR [rdx+0x8],eax
   1400058af:	jne    0x1400058bc
   1400058b1:	mov    eax,DWORD PTR [rip+0x2d75]        # 0x14000862c
   1400058b7:	cmp    DWORD PTR [rdx+0xc],eax
   1400058ba:	je     0x1400058e5
   1400058bc:	cmp    DWORD PTR [rdx],0xaf86e2e0
   1400058c2:	jne    0x1400058ed
   1400058c4:	mov    eax,DWORD PTR [rip+0x2d02]        # 0x1400085cc
   1400058ca:	cmp    DWORD PTR [rdx+0x4],eax
   1400058cd:	jne    0x1400058ed
   1400058cf:	mov    eax,DWORD PTR [rip+0x2cfb]        # 0x1400085d0
   1400058d5:	cmp    DWORD PTR [rdx+0x8],eax
   1400058d8:	jne    0x1400058ed
   1400058da:	mov    eax,DWORD PTR [rip+0x2cf4]        # 0x1400085d4
   1400058e0:	cmp    DWORD PTR [rdx+0xc],eax
   1400058e3:	jne    0x1400058ed
   1400058e5:	mov    QWORD PTR [r8],rcx
   1400058e8:	mov    rax,QWORD PTR [rcx]
   1400058eb:	jmp    0x14000594e
   1400058ed:	cmp    DWORD PTR [rdx],0x764145ec
   1400058f3:	jne    0x14000591b
   1400058f5:	mov    eax,DWORD PTR [rip+0x2d59]        # 0x140008654
   1400058fb:	cmp    DWORD PTR [rdx+0x4],eax
   1400058fe:	jne    0x14000591b
   140005900:	mov    eax,DWORD PTR [rip+0x2d52]        # 0x140008658
   140005906:	cmp    DWORD PTR [rdx+0x8],eax
   140005909:	jne    0x14000591b
   14000590b:	mov    eax,DWORD PTR [rip+0x2d4b]        # 0x14000865c
   140005911:	cmp    DWORD PTR [rdx+0xc],eax
   140005914:	jne    0x14000591b
   140005916:	mov    QWORD PTR [r8],rcx
   140005919:	jmp    0x140005948
   14000591b:	cmp    DWORD PTR [rdx],0x38
   14000591e:	jne    0x140005962
   140005920:	mov    eax,DWORD PTR [rip+0x2dd6]        # 0x1400086fc
   140005926:	cmp    DWORD PTR [rdx+0x4],eax
   140005929:	jne    0x140005962
   14000592b:	mov    eax,DWORD PTR [rip+0x2dcf]        # 0x140008700
   140005931:	cmp    DWORD PTR [rdx+0x8],eax
   140005934:	jne    0x140005962
   140005936:	mov    eax,DWORD PTR [rip+0x2dc8]        # 0x140008704
   14000593c:	cmp    DWORD PTR [rdx+0xc],eax
   14000593f:	jne    0x140005962
   140005941:	lea    rax,[rcx+0x8]
   140005945:	mov    QWORD PTR [r8],rax
   140005948:	mov    rdi,QWORD PTR [r8]
   14000594b:	mov    rax,QWORD PTR [rdi]
   14000594e:	mov    rbx,QWORD PTR [rax+0x8]
   140005952:	mov    rcx,rbx
   140005955:	call   QWORD PTR [rip+0x29dd]        # 0x140008338
   14000595b:	mov    rcx,rdi
   14000595e:	call   rbx
   140005960:	jmp    0x140005967
   140005962:	mov    esi,0x80004002
   140005967:	mov    rbx,QWORD PTR [rsp+0x30]
   14000596c:	mov    eax,esi
   14000596e:	mov    rsi,QWORD PTR [rsp+0x38]
   140005973:	add    rsp,0x20
   140005977:	pop    rdi
   140005978:	ret    
   140005979:	int3   
   14000597a:	int3   
   14000597b:	int3   
   14000597c:	int3   
   14000597d:	int3   
   14000597e:	int3   
   14000597f:	int3   
   140005980:	mov    r11,rsp
   140005983:	mov    QWORD PTR [r11+0x10],rbx
   140005987:	mov    QWORD PTR [r11+0x18],rsi
   14000598b:	push   rdi
   14000598c:	sub    rsp,0x20
   140005990:	mov    rax,QWORD PTR [rcx+0x18]
   140005994:	mov    rdi,rcx
   140005997:	mov    QWORD PTR [r11+0x8],rax
   14000599b:	jmp    0x1400059a9
   14000599d:	lea    rsi,[rax-0x1]
   1400059a1:	lock cmpxchg QWORD PTR [rcx+0x18],rsi
   1400059a7:	je     0x1400059b9
   1400059a9:	test   rax,rax
   1400059ac:	jns    0x14000599d
   1400059ae:	or     esi,0xffffffff
   1400059b1:	lock xadd DWORD PTR [rax+rax*1+0x10],esi
   1400059b7:	dec    esi
   1400059b9:	test   esi,esi
   1400059bb:	jne    0x1400059fb
   1400059bd:	test   rcx,rcx
   1400059c0:	je     0x1400059da
   1400059c2:	mov    rax,QWORD PTR [rcx]
   1400059c5:	mov    rbx,QWORD PTR [rax+0x48]
   1400059c9:	mov    rcx,rbx
   1400059cc:	call   QWORD PTR [rip+0x2966]        # 0x140008338
   1400059d2:	lea    edx,[rsi+0x1]
   1400059d5:	mov    rcx,rdi
   1400059d8:	call   rbx
   1400059da:	mov    rdi,QWORD PTR [rip+0x5cd7]        # 0x14000b6b8
   1400059e1:	test   rdi,rdi
   1400059e4:	je     0x1400059fb
   1400059e6:	mov    rdx,QWORD PTR [rdi]
   1400059e9:	mov    rbx,QWORD PTR [rdx+0x10]
   1400059ed:	mov    rcx,rbx
   1400059f0:	call   QWORD PTR [rip+0x2942]        # 0x140008338
   1400059f6:	mov    rcx,rdi
   1400059f9:	call   rbx
   1400059fb:	mov    rbx,QWORD PTR [rsp+0x38]
   140005a00:	mov    eax,esi
   140005a02:	mov    rsi,QWORD PTR [rsp+0x40]
   140005a07:	add    rsp,0x20
   140005a0b:	pop    rdi
   140005a0c:	ret    
   140005a0d:	int3   
   140005a0e:	int3   
   140005a0f:	int3   
   140005a10:	int3   
   140005a11:	int3   
   140005a12:	int3   
   140005a13:	int3   
   140005a14:	int3   
   140005a15:	int3   
   140005a16:	int3   
   140005a17:	int3   
   140005a18:	int3   
   140005a19:	int3   
   140005a1a:	int3   
   140005a1b:	int3   
   140005a1c:	int3   
   140005a1d:	int3   
   140005a1e:	int3   
   140005a1f:	int3   
   140005a20:	mov    QWORD PTR [rsp+0x20],rbx
   140005a25:	push   rbp
   140005a26:	push   rsi
   140005a27:	push   rdi
   140005a28:	sub    rsp,0x20
   140005a2c:	mov    rax,QWORD PTR [rcx+0x10]
   140005a30:	mov    rsi,rdx
   140005a33:	and    QWORD PTR [rdx],0x0
   140005a37:	mov    rbp,rcx
   140005a3a:	mov    QWORD PTR [rsp+0x48],rax
   140005a3f:	mov    rdi,rax
   140005a42:	test   rax,rax
   140005a45:	jns    0x140005a57
   140005a47:	lea    rax,[rax+rax*1]
   140005a4b:	lock inc DWORD PTR [rax+0xc]
   140005a4f:	mov    QWORD PTR [rdx],rax
   140005a52:	jmp    0x140005ad7
   140005a57:	lea    rax,[rcx-0x8]
   140005a5b:	lea    rcx,[rsp+0x40]
   140005a60:	mov    QWORD PTR [rsp+0x50],rax
   140005a65:	lea    rdx,[rsp+0x50]
   140005a6a:	call   0x140002854
   140005a6f:	mov    rbx,QWORD PTR [rax]
   140005a72:	and    QWORD PTR [rax],0x0
   140005a76:	mov    rcx,QWORD PTR [rsp+0x40]
   140005a7b:	test   rcx,rcx
   140005a7e:	je     0x140005a8b
   140005a80:	and    QWORD PTR [rsp+0x40],0x0
   140005a86:	call   0x140001d80
   140005a8b:	test   rbx,rbx
   140005a8e:	jne    0x140005a97
   140005a90:	mov    eax,0x8007000e
   140005a95:	jmp    0x140005ad9
   140005a97:	movabs rax,0x8000000000000000
   140005aa1:	mov    DWORD PTR [rbx+0x10],edi
   140005aa4:	mov    rdx,rbx
   140005aa7:	sar    rdx,1
   140005aaa:	or     rdx,rax
   140005aad:	mov    rax,rdi
   140005ab0:	lock cmpxchg QWORD PTR [rbp+0x10],rdx
   140005ab6:	jmp    0x140005acf
   140005ab8:	test   rdi,rdi
   140005abb:	js     0x140005ae6
   140005abd:	mov    rcx,rdi
   140005ac0:	mov    DWORD PTR [rbx+0x10],edi
   140005ac3:	mov    rax,rdi
   140005ac6:	lock cmpxchg QWORD PTR [rbp+0x10],rdx
   140005acc:	cmp    rax,rcx
   140005acf:	mov    rdi,rax
   140005ad2:	jne    0x140005ab8
   140005ad4:	mov    QWORD PTR [rsi],rbx
   140005ad7:	xor    eax,eax
   140005ad9:	mov    rbx,QWORD PTR [rsp+0x58]
   140005ade:	add    rsp,0x20
   140005ae2:	pop    rdi
   140005ae3:	pop    rsi
   140005ae4:	pop    rbp
   140005ae5:	ret    
   140005ae6:	lea    rax,[rip+0x2dab]        # 0x140008898
   140005aed:	mov    rcx,rbx
   140005af0:	mov    QWORD PTR [rbx],rax
   140005af3:	mov    eax,0xc0000001
   140005af8:	mov    DWORD PTR [rbx+0x10],eax
   140005afb:	mov    DWORD PTR [rbx+0xc],eax
   140005afe:	call   0x1400062b0
   140005b03:	lea    rax,[rdi+rdi*1]
   140005b07:	lock inc DWORD PTR [rax+0xc]
   140005b0b:	mov    QWORD PTR [rsi],rax
   140005b0e:	jmp    0x140005ad7
   140005b10:	int3   
   140005b11:	int3   
   140005b12:	int3   
   140005b13:	int3   
   140005b14:	int3   
   140005b15:	int3   
   140005b16:	int3   
   140005b17:	int3   
   140005b18:	mov    QWORD PTR [rsp+0x18],rbx
   140005b1d:	mov    QWORD PTR [rsp+0x20],rsi
   140005b22:	push   rdi
   140005b23:	sub    rsp,0x20
   140005b27:	cmp    DWORD PTR [rcx+0x8],0x0
   140005b2b:	mov    rdi,rcx
   140005b2e:	jne    0x140005be7
   140005b34:	mov    eax,DWORD PTR [rip+0x5dd6]        # 0x14000b910
   140005b3a:	mov    rsi,QWORD PTR [rcx]
   140005b3d:	test   al,0x1
   140005b3f:	jne    0x140005b56
   140005b41:	or     eax,0x1
   140005b44:	lea    rcx,[rip+0x1575]        # 0x1400070c0
   140005b4b:	mov    DWORD PTR [rip+0x5dbf],eax        # 0x14000b910
   140005b51:	call   0x140006774
   140005b56:	lea    r9,[rsp+0x38]
   140005b5b:	xor    edx,edx
   140005b5d:	lea    r8,[rsp+0x30]
   140005b62:	lea    rcx,[rip+0x5c1f]        # 0x14000b788
   140005b69:	call   QWORD PTR [rip+0x25c9]        # 0x140008138
   140005b6f:	cmp    DWORD PTR [rsp+0x30],0x0
   140005b74:	je     0x140005bb8
   140005b76:	lea    rbx,[rip+0x5c13]        # 0x14000b790
   140005b7d:	lea    rax,[rip+0x3024]        # 0x140008ba8
   140005b84:	mov    QWORD PTR [rsp+0x38],rbx
   140005b89:	mov    QWORD PTR [rip+0x5c00],rax        # 0x14000b790
   140005b90:	lea    rdx,[rip+0x54d9]        # 0x14000b070
   140005b97:	mov    rcx,rbx
   140005b9a:	mov    QWORD PTR [rip+0x5c07],rdx        # 0x14000b7a8
   140005ba1:	call   0x1400044a4
   140005ba6:	mov    r8,rbx
   140005ba9:	lea    rcx,[rip+0x5bd8]        # 0x14000b788
   140005bb0:	xor    edx,edx
   140005bb2:	call   QWORD PTR [rip+0x2598]        # 0x140008150
   140005bb8:	mov    rax,QWORD PTR [rsp+0x38]
   140005bbd:	mov    rdx,QWORD PTR [rax+0x8]
   140005bc1:	mov    rax,QWORD PTR [rsi+0x8]
   140005bc5:	mov    QWORD PTR [rsi+0x10],rdx
   140005bc9:	mov    BYTE PTR [rsi+0x18],0x0
   140005bcd:	mov    DWORD PTR [rsi+0x1c],0x1
   140005bd4:	mov    rbx,QWORD PTR [rax+0x8]
   140005bd8:	mov    rcx,rbx
   140005bdb:	call   QWORD PTR [rip+0x2757]        # 0x140008338
   140005be1:	lea    rcx,[rsi+0x8]
   140005be5:	call   rbx
   140005be7:	mov    rcx,QWORD PTR [rdi]
   140005bea:	mov    edx,DWORD PTR [rdi+0x8]
   140005bed:	lea    r8,[rcx+0x8]
   140005bf1:	mov    rbx,QWORD PTR [rsp+0x40]
   140005bf6:	mov    rsi,QWORD PTR [rsp+0x48]
   140005bfb:	add    rsp,0x20
   140005bff:	pop    rdi
   140005c00:	rex.W jmp QWORD PTR [rip+0x2549]        # 0x140008150
   140005c07:	int3   
   140005c08:	int3   
   140005c09:	int3   
   140005c0a:	int3   
   140005c0b:	int3   
   140005c0c:	int3   
   140005c0d:	int3   
   140005c0e:	int3   
   140005c0f:	int3   
   140005c10:	mov    rax,rsp
   140005c13:	mov    QWORD PTR [rax+0x10],rbx
   140005c17:	mov    QWORD PTR [rax+0x18],rbp
   140005c1b:	mov    QWORD PTR [rax+0x20],rsi
   140005c1f:	push   rdi
   140005c20:	push   r14
   140005c22:	push   r15
   140005c24:	sub    rsp,0x20
   140005c28:	xor    ebp,ebp
   140005c2a:	mov    rbx,rdx
   140005c2d:	test   r8,r8
   140005c30:	mov    WORD PTR [rax+0x8],bp
   140005c34:	lea    rdx,[rax+0x8]
   140005c38:	mov    r15,r9
   140005c3b:	cmovne rdx,r8
   140005c3f:	mov    rdi,rcx
   140005c42:	test   rdx,rdx
   140005c45:	jne    0x140005c4c
   140005c47:	lea    esi,[rbp+0x2]
   140005c4a:	jmp    0x140005c61
   140005c4c:	or     rax,0xffffffffffffffff
   140005c50:	inc    rax
   140005c53:	cmp    WORD PTR [rdx+rax*2],bp
   140005c57:	jne    0x140005c50
   140005c59:	lea    rsi,[rax*2+0x2]
   140005c61:	sub    rbx,rcx
   140005c64:	shr    rsi,1
   140005c67:	shr    rbx,1
   140005c6a:	cmp    rsi,rbx
   140005c6d:	cmovb  rbx,rsi
   140005c71:	lea    r14,[rbx+rbx*1]
   140005c75:	mov    r8,r14
   140005c78:	call   0x140006e06
   140005c7d:	test   r15,r15
   140005c80:	je     0x140005c90
   140005c82:	cmp    rbx,0x1
   140005c86:	mov    rax,rbp
   140005c89:	cmova  rax,rdi
   140005c8d:	mov    QWORD PTR [r15],rax
   140005c90:	cmp    rbx,rsi
   140005c93:	jae    0x140005ca2
   140005c95:	test   rbx,rbx
   140005c98:	je     0x140005ca2
   140005c9a:	xor    eax,eax
   140005c9c:	mov    WORD PTR [r14+rdi*1-0x2],ax
   140005ca2:	mov    rbx,QWORD PTR [rsp+0x48]
   140005ca7:	lea    rax,[r14+rdi*1]
   140005cab:	mov    rbp,QWORD PTR [rsp+0x50]
   140005cb0:	mov    rsi,QWORD PTR [rsp+0x58]
   140005cb5:	add    rsp,0x20
   140005cb9:	pop    r15
   140005cbb:	pop    r14
   140005cbd:	pop    rdi
   140005cbe:	ret    
   140005cbf:	int3   
   140005cc0:	int3   
   140005cc1:	int3   
   140005cc2:	int3   
   140005cc3:	int3   
   140005cc4:	int3   
   140005cc5:	int3   
   140005cc6:	int3   
   140005cc7:	int3   
   140005cc8:	mov    rax,rsp
   140005ccb:	mov    QWORD PTR [rax+0x10],rbx
   140005ccf:	mov    QWORD PTR [rax+0x18],rsi
   140005cd3:	mov    QWORD PTR [rax+0x20],rdi
   140005cd7:	push   r14
   140005cd9:	sub    rsp,0x20
   140005cdd:	mov    rbx,rdx
   140005ce0:	mov    BYTE PTR [rax+0x8],0x0
   140005ce4:	test   r8,r8
   140005ce7:	lea    rdx,[rax+0x8]
   140005ceb:	mov    r14,r9
   140005cee:	mov    rsi,rcx
   140005cf1:	cmovne rdx,r8
   140005cf5:	test   rdx,rdx
   140005cf8:	jne    0x140005cff
   140005cfa:	lea    edi,[rdx+0x1]
   140005cfd:	jmp    0x140005d0f
   140005cff:	or     rdi,0xffffffffffffffff
   140005d03:	inc    rdi
   140005d06:	cmp    BYTE PTR [rdx+rdi*1],0x0
   140005d0a:	jne    0x140005d03
   140005d0c:	inc    rdi
   140005d0f:	sub    rbx,rcx
   140005d12:	cmp    rdi,rbx
   140005d15:	cmovb  rbx,rdi
   140005d19:	mov    r8,rbx
   140005d1c:	call   0x140006e06
   140005d21:	test   r14,r14
   140005d24:	je     0x140005d33
   140005d26:	xor    eax,eax
   140005d28:	cmp    rbx,0x1
   140005d2c:	cmova  rax,rsi
   140005d30:	mov    QWORD PTR [r14],rax
   140005d33:	cmp    rbx,rdi
   140005d36:	jae    0x140005d43
   140005d38:	test   rbx,rbx
   140005d3b:	je     0x140005d43
   140005d3d:	xor    eax,eax
   140005d3f:	mov    BYTE PTR [rbx+rsi*1-0x1],al
   140005d43:	mov    rdi,QWORD PTR [rsp+0x48]
   140005d48:	lea    rax,[rbx+rsi*1]
   140005d4c:	mov    rbx,QWORD PTR [rsp+0x38]
   140005d51:	mov    rsi,QWORD PTR [rsp+0x40]
   140005d56:	add    rsp,0x20
   140005d5a:	pop    r14
   140005d5c:	ret    
   140005d5d:	int3   
   140005d5e:	int3   
   140005d5f:	int3   
   140005d60:	int3   
   140005d61:	int3   
   140005d62:	int3   
   140005d63:	int3   
   140005d64:	int3   
   140005d65:	int3   
   140005d66:	int3   
   140005d67:	int3   
   140005d68:	int3   
   140005d69:	int3   
   140005d6a:	int3   
   140005d6b:	int3   
   140005d6c:	int3   
   140005d6d:	int3   
   140005d6e:	int3   
   140005d6f:	int3   
   140005d70:	mov    rax,rsp
   140005d73:	mov    QWORD PTR [rax+0x8],rbx
   140005d77:	mov    QWORD PTR [rax+0x10],rbp
   140005d7b:	mov    QWORD PTR [rax+0x18],rsi
   140005d7f:	mov    QWORD PTR [rax+0x20],rdi
   140005d83:	push   r12
   140005d85:	push   r14
   140005d87:	push   r15
   140005d89:	sub    rsp,0x30
   140005d8d:	xor    edi,edi
   140005d8f:	mov    r15,rdx
   140005d92:	mov    r14,rcx
   140005d95:	mov    QWORD PTR [rax-0x28],rdi
   140005d99:	lea    rdx,[rip+0x2bb0]        # 0x140008950
   140005da0:	mov    r12,r9
   140005da3:	mov    rbp,r8
   140005da6:	lea    ecx,[rdi+0x28]
   140005da9:	call   0x1400067ac
   140005dae:	mov    rbx,rax
   140005db1:	test   rax,rax
   140005db4:	je     0x140005e90
   140005dba:	and    QWORD PTR [rbx+0x18],rdi
   140005dbe:	mov    rsi,QWORD PTR [rip+0x58f3]        # 0x14000b6b8
   140005dc5:	mov    DWORD PTR [rax+0xc],0x1
   140005dcc:	lea    rax,[rip+0x2d05]        # 0x140008ad8
   140005dd3:	mov    QWORD PTR [rbx],rax
   140005dd6:	mov    DWORD PTR [rbx+0x20],0x4
   140005ddd:	test   rsi,rsi
   140005de0:	je     0x140005df7
   140005de2:	mov    rax,QWORD PTR [rsi]
   140005de5:	mov    rdi,QWORD PTR [rax+0x8]
   140005de9:	mov    rcx,rdi
   140005dec:	call   QWORD PTR [rip+0x2546]        # 0x140008338
   140005df2:	mov    rcx,rsi
   140005df5:	call   rdi
   140005df7:	lea    rax,[rip+0x2c2a]        # 0x140008a28
   140005dfe:	mov    QWORD PTR [rbx],rax
   140005e01:	mov    eax,0x1
   140005e06:	lock xadd DWORD PTR [rbx+0xc],eax
   140005e0b:	inc    eax
   140005e0d:	test   BYTE PTR [rbx+0x20],0x4
   140005e11:	jne    0x140005e34
   140005e13:	cmp    eax,0x2
   140005e16:	jne    0x140005e34
   140005e18:	mov    rsi,QWORD PTR [rip+0x5899]        # 0x14000b6b8
   140005e1f:	mov    rax,QWORD PTR [rsi]
   140005e22:	mov    rdi,QWORD PTR [rax+0x8]
   140005e26:	mov    rcx,rdi
   140005e29:	call   QWORD PTR [rip+0x2509]        # 0x140008338
   140005e2f:	mov    rcx,rsi
   140005e32:	call   rdi
   140005e34:	mov    rcx,rbx
   140005e37:	mov    QWORD PTR [rsp+0x20],rbx
   140005e3c:	mov    rdi,rbx
   140005e3f:	call   0x140006000
   140005e44:	cmp    DWORD PTR [rbp+0x0],0x35
   140005e48:	jne    0x140005e89
   140005e4a:	mov    eax,DWORD PTR [rip+0x2af4]        # 0x140008944
   140005e50:	cmp    DWORD PTR [rbp+0x4],eax
   140005e53:	jne    0x140005e89
   140005e55:	mov    eax,DWORD PTR [rip+0x2aed]        # 0x140008948
   140005e5b:	cmp    DWORD PTR [rbp+0x8],eax
   140005e5e:	jne    0x140005e89
   140005e60:	mov    eax,DWORD PTR [rip+0x2ae6]        # 0x14000894c
   140005e66:	cmp    DWORD PTR [rbp+0xc],eax
   140005e69:	jne    0x140005e89
   140005e6b:	mov    QWORD PTR [r12],rbx
   140005e6f:	test   BYTE PTR [r14],0x4
   140005e73:	jne    0x140005e79
   140005e75:	lock inc DWORD PTR [rbx+0xc]
   140005e79:	mov    eax,DWORD PTR [r14]
   140005e7c:	xor    edi,edi
   140005e7e:	mov    DWORD PTR [rbx+0x20],eax
   140005e81:	mov    QWORD PTR [rbx+0x18],r15
   140005e85:	xor    ebx,ebx
   140005e87:	jmp    0x140005e95
   140005e89:	mov    ebx,0x80004002
   140005e8e:	jmp    0x140005e95
   140005e90:	mov    ebx,0x8007000e
   140005e95:	test   rdi,rdi
   140005e98:	je     0x140005ea2
   140005e9a:	mov    rcx,rdi
   140005e9d:	call   0x140006000
   140005ea2:	mov    rbp,QWORD PTR [rsp+0x58]
   140005ea7:	mov    eax,ebx
   140005ea9:	mov    rbx,QWORD PTR [rsp+0x50]
   140005eae:	mov    rsi,QWORD PTR [rsp+0x60]
   140005eb3:	mov    rdi,QWORD PTR [rsp+0x68]
   140005eb8:	add    rsp,0x30
   140005ebc:	pop    r15
   140005ebe:	pop    r14
   140005ec0:	pop    r12
   140005ec2:	ret    
   140005ec3:	int3   
   140005ec4:	int3   
   140005ec5:	int3   
   140005ec6:	int3   
   140005ec7:	int3   
   140005ec8:	int3   
   140005ec9:	int3   
   140005eca:	int3   
   140005ecb:	int3   
   140005ecc:	int3   
   140005ecd:	int3   
   140005ece:	int3   
   140005ecf:	int3   
   140005ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ed5:	mov    QWORD PTR [rsp+0x10],rsi
   140005eda:	mov    QWORD PTR [rsp+0x18],rdi
   140005edf:	push   r14
   140005ee1:	sub    rsp,0x20
   140005ee5:	and    QWORD PTR [rdx],0x0
   140005ee9:	mov    r14,rdx
   140005eec:	lea    rdx,[rip+0x2a5d]        # 0x140008950
   140005ef3:	mov    ecx,0x20
   140005ef8:	call   0x1400067ac
   140005efd:	mov    rbx,rax
   140005f00:	test   rax,rax
   140005f03:	jne    0x140005f0c
   140005f05:	mov    edi,0x8007000e
   140005f0a:	jmp    0x140005f7b
   140005f0c:	mov    rsi,QWORD PTR [rip+0x57a5]        # 0x14000b6b8
   140005f13:	mov    QWORD PTR [rax+0x18],0x1
   140005f1b:	lea    rax,[rip+0x2b66]        # 0x140008a88
   140005f22:	mov    QWORD PTR [rbx],rax
   140005f25:	lea    rax,[rip+0x2b3c]        # 0x140008a68
   140005f2c:	mov    QWORD PTR [rbx+0x8],rax
   140005f30:	test   rsi,rsi
   140005f33:	je     0x140005f4a
   140005f35:	mov    rax,QWORD PTR [rsi]
   140005f38:	mov    rdi,QWORD PTR [rax+0x8]
   140005f3c:	mov    rcx,rdi
   140005f3f:	call   QWORD PTR [rip+0x23f3]        # 0x140008338
   140005f45:	mov    rcx,rsi
   140005f48:	call   rdi
   140005f4a:	lea    rax,[rip+0x2c07]        # 0x140008b58
   140005f51:	mov    r8,r14
   140005f54:	mov    QWORD PTR [rbx],rax
   140005f57:	lea    rdx,[rip+0x266a]        # 0x1400085c8
   140005f5e:	lea    rax,[rip+0x2bd3]        # 0x140008b38
   140005f65:	mov    rcx,rbx
   140005f68:	mov    QWORD PTR [rbx+0x8],rax
   140005f6c:	call   0x140005880
   140005f71:	mov    rcx,rbx
   140005f74:	mov    edi,eax
   140005f76:	call   0x140005980
   140005f7b:	mov    rbx,QWORD PTR [rsp+0x30]
   140005f80:	mov    eax,edi
   140005f82:	mov    rdi,QWORD PTR [rsp+0x40]
   140005f87:	mov    rsi,QWORD PTR [rsp+0x38]
   140005f8c:	add    rsp,0x20
   140005f90:	pop    r14
   140005f92:	ret    
   140005f93:	int3   
   140005f94:	int3   
   140005f95:	int3   
   140005f96:	int3   
   140005f97:	int3   
   140005f98:	int3   
   140005f99:	int3   
   140005f9a:	int3   
   140005f9b:	int3   
   140005f9c:	int3   
   140005f9d:	int3   
   140005f9e:	int3   
   140005f9f:	int3   
   140005fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140005fa5:	mov    QWORD PTR [rsp+0x10],rsi
   140005faa:	push   rdi
   140005fab:	sub    rsp,0x20
   140005faf:	mov    esi,0x1
   140005fb4:	lock xadd DWORD PTR [rcx+0xc],esi
   140005fb9:	inc    esi
   140005fbb:	test   BYTE PTR [rcx+0x20],0x4
   140005fbf:	jne    0x140005fe2
   140005fc1:	cmp    esi,0x2
   140005fc4:	jne    0x140005fe2
   140005fc6:	mov    rdi,QWORD PTR [rip+0x56eb]        # 0x14000b6b8
   140005fcd:	mov    rdx,QWORD PTR [rdi]
   140005fd0:	mov    rbx,QWORD PTR [rdx+0x8]
   140005fd4:	mov    rcx,rbx
   140005fd7:	call   QWORD PTR [rip+0x235b]        # 0x140008338
   140005fdd:	mov    rcx,rdi
   140005fe0:	call   rbx
   140005fe2:	mov    rbx,QWORD PTR [rsp+0x30]
   140005fe7:	mov    eax,esi
   140005fe9:	mov    rsi,QWORD PTR [rsp+0x38]
   140005fee:	add    rsp,0x20
   140005ff2:	pop    rdi
   140005ff3:	ret    
   140005ff4:	int3   
   140005ff5:	int3   
   140005ff6:	int3   
   140005ff7:	int3   
   140005ff8:	int3   
   140005ff9:	int3   
   140005ffa:	int3   
   140005ffb:	int3   
   140005ffc:	int3   
   140005ffd:	int3   
   140005ffe:	int3   
   140005fff:	int3   
   140006000:	mov    QWORD PTR [rsp+0x8],rbx
   140006005:	mov    QWORD PTR [rsp+0x10],rsi
   14000600a:	mov    QWORD PTR [rsp+0x18],rdi
   14000600f:	push   r14
   140006011:	sub    rsp,0x20
   140006015:	mov    r14,rcx
   140006018:	or     esi,0xffffffff
   14000601b:	lock xadd DWORD PTR [rcx+0xc],esi
   140006020:	sub    esi,0x1
   140006023:	jne    0x14000605e
   140006025:	mov    rax,QWORD PTR [rcx]
   140006028:	mov    edi,DWORD PTR [rcx+0x20]
   14000602b:	shr    edi,0x2
   14000602e:	mov    rbx,QWORD PTR [rax+0x38]
   140006032:	mov    rcx,rbx
   140006035:	call   QWORD PTR [rip+0x22fd]        # 0x140008338
   14000603b:	lea    edx,[rsi+0x1]
   14000603e:	mov    rcx,r14
   140006041:	call   rbx
   140006043:	and    dil,0x1
   140006047:	je     0x140006085
   140006049:	mov    rdi,QWORD PTR [rip+0x5668]        # 0x14000b6b8
   140006050:	test   rdi,rdi
   140006053:	je     0x140006085
   140006055:	mov    rax,QWORD PTR [rdi]
   140006058:	mov    rbx,QWORD PTR [rax+0x10]
   14000605c:	jmp    0x140006077
   14000605e:	test   BYTE PTR [rcx+0x20],0x4
   140006062:	jne    0x140006085
   140006064:	cmp    esi,0x1
   140006067:	jne    0x140006085
   140006069:	mov    rdi,QWORD PTR [rip+0x5648]        # 0x14000b6b8
   140006070:	mov    rdx,QWORD PTR [rdi]
   140006073:	mov    rbx,QWORD PTR [rdx+0x10]
   140006077:	mov    rcx,rbx
   14000607a:	call   QWORD PTR [rip+0x22b8]        # 0x140008338
   140006080:	mov    rcx,rdi
   140006083:	call   rbx
   140006085:	mov    rbx,QWORD PTR [rsp+0x30]
   14000608a:	mov    eax,esi
   14000608c:	mov    rsi,QWORD PTR [rsp+0x38]
   140006091:	mov    rdi,QWORD PTR [rsp+0x40]
   140006096:	add    rsp,0x20
   14000609a:	pop    r14
   14000609c:	ret    
   14000609d:	int3   
   14000609e:	int3   
   14000609f:	int3   
   1400060a0:	int3   
   1400060a1:	int3   
   1400060a2:	int3   
   1400060a3:	int3   
   1400060a4:	int3   
   1400060a5:	int3   
   1400060a6:	int3   
   1400060a7:	int3   
   1400060a8:	int3   
   1400060a9:	int3   
   1400060aa:	int3   
   1400060ab:	int3   
   1400060ac:	int3   
   1400060ad:	int3   
   1400060ae:	int3   
   1400060af:	int3   
   1400060b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400060b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400060ba:	push   rdi
   1400060bb:	sub    rsp,0x20
   1400060bf:	xor    edi,edi
   1400060c1:	mov    rsi,rcx
   1400060c4:	mov    QWORD PTR [r8],rdi
   1400060c7:	cmp    DWORD PTR [rdx],edi
   1400060c9:	jne    0x1400060ec
   1400060cb:	mov    eax,DWORD PTR [rip+0x2553]        # 0x140008624
   1400060d1:	cmp    DWORD PTR [rdx+0x4],eax
   1400060d4:	jne    0x1400060ec
   1400060d6:	mov    eax,DWORD PTR [rip+0x254c]        # 0x140008628
   1400060dc:	cmp    DWORD PTR [rdx+0x8],eax
   1400060df:	jne    0x1400060ec
   1400060e1:	mov    eax,DWORD PTR [rip+0x2545]        # 0x14000862c
   1400060e7:	cmp    DWORD PTR [rdx+0xc],eax
   1400060ea:	je     0x14000613b
   1400060ec:	cmp    DWORD PTR [rdx],0xaf86e2e0
   1400060f2:	jne    0x140006115
   1400060f4:	mov    eax,DWORD PTR [rip+0x24d2]        # 0x1400085cc
   1400060fa:	cmp    DWORD PTR [rdx+0x4],eax
   1400060fd:	jne    0x140006115
   1400060ff:	mov    eax,DWORD PTR [rip+0x24cb]        # 0x1400085d0
   140006105:	cmp    DWORD PTR [rdx+0x8],eax
   140006108:	jne    0x140006115
   14000610a:	mov    eax,DWORD PTR [rip+0x24c4]        # 0x1400085d4
   140006110:	cmp    DWORD PTR [rdx+0xc],eax
   140006113:	je     0x14000613b
   140006115:	cmp    DWORD PTR [rdx],0x35
   140006118:	jne    0x140006155
   14000611a:	mov    eax,DWORD PTR [rip+0x2824]        # 0x140008944
   140006120:	cmp    DWORD PTR [rdx+0x4],eax
   140006123:	jne    0x140006155
   140006125:	mov    eax,DWORD PTR [rip+0x281d]        # 0x140008948
   14000612b:	cmp    DWORD PTR [rdx+0x8],eax
   14000612e:	jne    0x140006155
   140006130:	mov    eax,DWORD PTR [rip+0x2816]        # 0x14000894c
   140006136:	cmp    DWORD PTR [rdx+0xc],eax
   140006139:	jne    0x140006155
   14000613b:	mov    QWORD PTR [r8],rcx
   14000613e:	mov    rax,QWORD PTR [rcx]
   140006141:	mov    rbx,QWORD PTR [rax+0x8]
   140006145:	mov    rcx,rbx
   140006148:	call   QWORD PTR [rip+0x21ea]        # 0x140008338
   14000614e:	mov    rcx,rsi
   140006151:	call   rbx
   140006153:	jmp    0x14000615a
   140006155:	mov    edi,0x80004002
   14000615a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000615f:	mov    eax,edi
   140006161:	mov    rsi,QWORD PTR [rsp+0x38]
   140006166:	add    rsp,0x20
   14000616a:	pop    rdi
   14000616b:	ret    
   14000616c:	int3   
   14000616d:	int3   
   14000616e:	int3   
   14000616f:	int3   
   140006170:	int3   
   140006171:	int3   
   140006172:	int3   
   140006173:	int3   
   140006174:	int3   
   140006175:	int3   
   140006176:	int3   
   140006177:	int3   
   140006178:	int3   
   140006179:	int3   
   14000617a:	int3   
   14000617b:	int3   
   14000617c:	int3   
   14000617d:	int3   
   14000617e:	int3   
   14000617f:	int3   
   140006180:	mov    QWORD PTR [rsp+0x8],rbx
   140006185:	mov    QWORD PTR [rsp+0x10],rsi
   14000618a:	push   rdi
   14000618b:	sub    rsp,0x20
   14000618f:	xor    ebx,ebx
   140006191:	mov    rdi,r8
   140006194:	mov    QWORD PTR [r8],rbx
   140006197:	mov    rsi,rdx
   14000619a:	mov    DWORD PTR [rdx],ebx
   14000619c:	lea    ecx,[rbx+0x10]
   14000619f:	call   QWORD PTR [rip+0x1e83]        # 0x140008028
   1400061a5:	test   rax,rax
   1400061a8:	jne    0x1400061b1
   1400061aa:	mov    ebx,0x8007000e
   1400061af:	jmp    0x1400061c5
   1400061b1:	movups xmm0,XMMWORD PTR [rip+0x2788]        # 0x140008940
   1400061b8:	movdqu XMMWORD PTR [rax],xmm0
   1400061bc:	mov    DWORD PTR [rsi],0x1
   1400061c2:	mov    QWORD PTR [rdi],rax
   1400061c5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400061ca:	mov    eax,ebx
   1400061cc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400061d1:	add    rsp,0x20
   1400061d5:	pop    rdi
   1400061d6:	ret    
   1400061d7:	int3   
   1400061d8:	int3   
   1400061d9:	int3   
   1400061da:	int3   
   1400061db:	int3   
   1400061dc:	int3   
   1400061dd:	int3   
   1400061de:	int3   
   1400061df:	int3   
   1400061e0:	sub    rsp,0x28
   1400061e4:	and    QWORD PTR [rdx],0x0
   1400061e8:	mov    ecx,0x8000000e
   1400061ed:	xor    edx,edx
   1400061ef:	call   QWORD PTR [rip+0x1fab]        # 0x1400081a0
   1400061f5:	mov    eax,0x8000000e
   1400061fa:	add    rsp,0x28
   1400061fe:	ret    
   1400061ff:	int3   
   140006200:	int3   
   140006201:	int3   
   140006202:	int3   
   140006203:	int3   
   140006204:	int3   
   140006205:	int3   
   140006206:	int3   
   140006207:	int3   
   140006208:	int3   
   140006209:	int3   
   14000620a:	int3   
   14000620b:	int3   
   14000620c:	int3   
   14000620d:	int3   
   14000620e:	int3   
   14000620f:	int3   
   140006210:	mov    QWORD PTR [rsp+0x8],rbx
   140006215:	push   rdi
   140006216:	sub    rsp,0x20
   14000621a:	mov    rbx,QWORD PTR [rcx+0x18]
   14000621e:	mov    rdi,rdx
   140006221:	test   rbx,rbx
   140006224:	je     0x140006239
   140006226:	mov    rbx,QWORD PTR [rbx+0x10]
   14000622a:	mov    rcx,rbx
   14000622d:	call   QWORD PTR [rip+0x2105]        # 0x140008338
   140006233:	call   rbx
   140006235:	mov    DWORD PTR [rdi],eax
   140006237:	jmp    0x14000623f
   140006239:	mov    DWORD PTR [rdx],0x2
   14000623f:	xor    eax,eax
   140006241:	mov    rbx,QWORD PTR [rsp+0x30]
   140006246:	add    rsp,0x20
   14000624a:	pop    rdi
   14000624b:	ret    
   14000624c:	int3   
   14000624d:	int3   
   14000624e:	int3   
   14000624f:	int3   
   140006250:	int3   
   140006251:	int3   
   140006252:	int3   
   140006253:	int3   
   140006254:	int3   
   140006255:	int3   
   140006256:	int3   
   140006257:	int3   
   140006258:	int3   
   140006259:	int3   
   14000625a:	int3   
   14000625b:	int3   
   14000625c:	int3   
   14000625d:	int3   
   14000625e:	int3   
   14000625f:	int3   
   140006260:	sub    rcx,0x8
   140006264:	jmp    0x140005600
   140006269:	int3   
   14000626a:	int3   
   14000626b:	int3   
   14000626c:	int3   
   14000626d:	int3   
   14000626e:	int3   
   14000626f:	int3   
   140006270:	sub    rcx,0x8
   140006274:	jmp    0x140005880
   140006279:	int3   
   14000627a:	int3   
   14000627b:	int3   
   14000627c:	int3   
   14000627d:	int3   
   14000627e:	int3   
   14000627f:	int3   
   140006280:	sub    rcx,0x8
   140006284:	jmp    0x140005610
   140006289:	int3   
   14000628a:	int3   
   14000628b:	int3   
   14000628c:	int3   
   14000628d:	int3   
   14000628e:	int3   
   14000628f:	int3   
   140006290:	sub    rcx,0x8
   140006294:	jmp    0x1400055f0
   140006299:	int3   
   14000629a:	int3   
   14000629b:	int3   
   14000629c:	int3   
   14000629d:	int3   
   14000629e:	int3   
   14000629f:	int3   
   1400062a0:	sub    rcx,0x8
   1400062a4:	jmp    0x140005980
   1400062a9:	int3   
   1400062aa:	int3   
   1400062ab:	int3   
   1400062ac:	int3   
   1400062ad:	int3   
   1400062ae:	int3   
   1400062af:	int3   
   1400062b0:	jmp    0x1400067d2
   1400062b5:	int3   
   1400062b6:	int3   
   1400062b7:	int3   
   1400062b8:	int3   
   1400062b9:	int3   
   1400062ba:	int3   
   1400062bb:	int3   
   1400062bc:	int3   
   1400062bd:	int3   
   1400062be:	int3   
   1400062bf:	int3   
   1400062c0:	sub    rsp,0x28
   1400062c4:	mov    eax,0x5a4d
   1400062c9:	cmp    WORD PTR [rip+0xffffffffffff9d30],ax        # 0x140000000
   1400062d0:	je     0x1400062d6
   1400062d2:	xor    eax,eax
   1400062d4:	jmp    0x140006325
   1400062d6:	movsxd rcx,DWORD PTR [rip+0xffffffffffff9d5f]        # 0x14000003c
   1400062dd:	lea    rax,[rip+0xffffffffffff9d1c]        # 0x140000000
   1400062e4:	add    rcx,rax
   1400062e7:	cmp    DWORD PTR [rcx],0x4550
   1400062ed:	jne    0x1400062d2
   1400062ef:	movzx  eax,WORD PTR [rcx+0x18]
   1400062f3:	cmp    eax,0x10b
   1400062f8:	je     0x140006314
   1400062fa:	cmp    eax,0x20b
   1400062ff:	jne    0x1400062d2
   140006301:	xor    eax,eax
   140006303:	cmp    DWORD PTR [rcx+0x84],0xe
   14000630a:	jbe    0x140006325
   14000630c:	cmp    DWORD PTR [rcx+0xf8],eax
   140006312:	jmp    0x140006322
   140006314:	xor    eax,eax
   140006316:	cmp    DWORD PTR [rcx+0x74],0xe
   14000631a:	jbe    0x140006325
   14000631c:	cmp    DWORD PTR [rcx+0xe8],eax
   140006322:	setne  al
   140006325:	mov    ecx,0x2
   14000632a:	mov    DWORD PTR [rip+0x4de0],eax        # 0x14000b110
   140006330:	call   0x1400068a8
   140006335:	mov    ecx,eax
   140006337:	call   QWORD PTR [rip+0x1f8b]        # 0x1400082c8
   14000633d:	mov    rcx,QWORD PTR [rip+0x1f94]        # 0x1400082d8
   140006344:	or     rax,0xffffffffffffffff
   140006348:	mov    QWORD PTR [rip+0x55d9],rax        # 0x14000b928
   14000634f:	mov    QWORD PTR [rip+0x55da],rax        # 0x14000b930
   140006356:	mov    eax,DWORD PTR [rip+0x4dc8]        # 0x14000b124
   14000635c:	mov    DWORD PTR [rcx],eax
   14000635e:	mov    rcx,QWORD PTR [rip+0x1fab]        # 0x140008310
   140006365:	mov    eax,DWORD PTR [rip+0x4dad]        # 0x14000b118
   14000636b:	mov    DWORD PTR [rcx],eax
   14000636d:	call   0x1400026a0
   140006372:	cmp    DWORD PTR [rip+0x4c87],0x0        # 0x14000b000
   140006379:	jne    0x140006388
   14000637b:	lea    rcx,[rip+0xffffffffffffc31e]        # 0x1400026a0
   140006382:	call   QWORD PTR [rip+0x1ee8]        # 0x140008270
   140006388:	xor    eax,eax
   14000638a:	add    rsp,0x28
   14000638e:	ret    
   14000638f:	int3   
   140006390:	int3   
   140006391:	int3   
   140006392:	int3   
   140006393:	int3   
   140006394:	int3   
   140006395:	int3   
   140006396:	int3   
   140006397:	int3   
   140006398:	int3   
   140006399:	int3   
   14000639a:	int3   
   14000639b:	int3   
   14000639c:	int3   
   14000639d:	int3   
   14000639e:	int3   
   14000639f:	int3   
   1400063a0:	sub    rsp,0x38
   1400063a4:	mov    eax,DWORD PTR [rip+0x4d76]        # 0x14000b120
   1400063aa:	lea    r8,[rip+0x4d57]        # 0x14000b108
   1400063b1:	mov    r9d,DWORD PTR [rip+0x4d64]        # 0x14000b11c
   1400063b8:	lea    rdx,[rip+0x4d41]        # 0x14000b100
   1400063bf:	mov    DWORD PTR [rip+0x4d4f],eax        # 0x14000b114
   1400063c5:	lea    rcx,[rip+0x4d2c]        # 0x14000b0f8
   1400063cc:	lea    rax,[rip+0x4d41]        # 0x14000b114
   1400063d3:	mov    QWORD PTR [rsp+0x20],rax
   1400063d8:	call   QWORD PTR [rip+0x1ef2]        # 0x1400082d0
   1400063de:	mov    DWORD PTR [rip+0x4d18],eax        # 0x14000b0fc
   1400063e4:	add    rsp,0x38
   1400063e8:	ret    
   1400063e9:	int3   
   1400063ea:	int3   
   1400063eb:	int3   
   1400063ec:	int3   
   1400063ed:	int3   
   1400063ee:	int3   
   1400063ef:	int3   
   1400063f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400063f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400063fa:	mov    QWORD PTR [rsp+0x18],rdi
   1400063ff:	push   r12
   140006401:	push   r14
   140006403:	push   r15
   140006405:	sub    rsp,0xb0
   14000640c:	xor    r15d,r15d
   14000640f:	mov    DWORD PTR [rsp+0x20],r15d
   140006414:	lea    rcx,[rsp+0x40]
   140006419:	call   QWORD PTR [rip+0x1cb9]        # 0x1400080d8
   14000641f:	nop
   140006420:	mov    rax,QWORD PTR gs:0x30
   140006429:	mov    rbx,QWORD PTR [rax+0x8]
   14000642d:	mov    r14d,r15d
   140006430:	xor    eax,eax
   140006432:	lock cmpxchg QWORD PTR [rip+0x54dd],rbx        # 0x14000b918
   14000643b:	je     0x140006459
   14000643d:	cmp    rax,rbx
   140006440:	jne    0x14000644c
   140006442:	mov    edi,0x1
   140006447:	mov    r14d,edi
   14000644a:	jmp    0x14000645e
   14000644c:	mov    ecx,0x3e8
   140006451:	call   QWORD PTR [rip+0x1ce9]        # 0x140008140
   140006457:	jmp    0x140006430
   140006459:	mov    edi,0x1
   14000645e:	mov    eax,DWORD PTR [rip+0x54bc]        # 0x14000b920
   140006464:	cmp    eax,edi
   140006466:	jne    0x140006476
   140006468:	mov    esi,0x1f
   14000646d:	mov    ecx,esi
   14000646f:	call   0x1400068f4
   140006474:	jmp    0x1400064e7
   140006476:	mov    eax,DWORD PTR [rip+0x54a4]        # 0x14000b920
   14000647c:	test   eax,eax
   14000647e:	jne    0x1400064dc
   140006480:	mov    DWORD PTR [rip+0x549a],edi        # 0x14000b920
   140006486:	lea    r12,[rip+0x1f13]        # 0x1400083a0
   14000648d:	lea    rbx,[rip+0x1ef4]        # 0x140008388
   140006494:	mov    QWORD PTR [rsp+0x30],rbx
   140006499:	mov    eax,r15d
   14000649c:	mov    DWORD PTR [rsp+0x24],eax
   1400064a0:	cmp    rbx,r12
   1400064a3:	jae    0x1400064ce
   1400064a5:	test   eax,eax
   1400064a7:	jne    0x1400064d2
   1400064a9:	mov    rsi,QWORD PTR [rbx]
   1400064ac:	test   rsi,rsi
   1400064af:	je     0x1400064c3
   1400064b1:	mov    rcx,rsi
   1400064b4:	mov    rax,QWORD PTR [rip+0x1e7d]        # 0x140008338
   1400064bb:	call   rax
   1400064bd:	call   rsi
   1400064bf:	mov    DWORD PTR [rsp+0x24],eax
   1400064c3:	add    rbx,0x8
   1400064c7:	mov    QWORD PTR [rsp+0x30],rbx
   1400064cc:	jmp    0x1400064a0
   1400064ce:	test   eax,eax
   1400064d0:	je     0x1400064e2
   1400064d2:	mov    eax,0xff
   1400064d7:	jmp    0x140006643
   1400064dc:	mov    DWORD PTR [rip+0x4c12],edi        # 0x14000b0f4
   1400064e2:	mov    esi,0x1f
   1400064e7:	mov    eax,DWORD PTR [rip+0x5433]        # 0x14000b920
   1400064ed:	cmp    eax,edi
   1400064ef:	jne    0x14000650e
   1400064f1:	lea    rdx,[rip+0x1e88]        # 0x140008380
   1400064f8:	lea    rcx,[rip+0x1e49]        # 0x140008348
   1400064ff:	call   0x140006aba
   140006504:	mov    DWORD PTR [rip+0x5412],0x2        # 0x14000b920
   14000650e:	test   r14d,r14d
   140006511:	jne    0x14000651d
   140006513:	mov    rax,r15
   140006516:	xchg   QWORD PTR [rip+0x53fb],rax        # 0x14000b918
   14000651d:	cmp    QWORD PTR [rip+0x5414],r15        # 0x14000b938
   140006524:	je     0x140006554
   140006526:	lea    rcx,[rip+0x540b]        # 0x14000b938
   14000652d:	call   0x140006950
   140006532:	test   eax,eax
   140006534:	je     0x140006554
   140006536:	mov    rbx,QWORD PTR [rip+0x53fb]        # 0x14000b938
   14000653d:	mov    rcx,rbx
   140006540:	mov    rax,QWORD PTR [rip+0x1df1]        # 0x140008338
   140006547:	call   rax
   140006549:	xor    r8d,r8d
   14000654c:	lea    edx,[r8+0x2]
   140006550:	xor    ecx,ecx
   140006552:	call   rbx
   140006554:	mov    rax,QWORD PTR [rip+0x1d35]        # 0x140008290
   14000655b:	mov    rdx,QWORD PTR [rax]
   14000655e:	test   rdx,rdx
   140006561:	jne    0x14000656d
   140006563:	mov    eax,0xff
   140006568:	jmp    0x140006643
   14000656d:	mov    QWORD PTR [rsp+0x28],rdx
   140006572:	mov    ecx,DWORD PTR [rsp+0x20]
   140006576:	cmp    WORD PTR [rdx],0x20
   14000657a:	ja     0x1400065f4
   14000657c:	cmp    WORD PTR [rdx],r15w
   140006580:	je     0x140006586
   140006582:	test   ecx,ecx
   140006584:	jne    0x1400065f4
   140006586:	movzx  eax,WORD PTR [rdx]
   140006589:	sub    ax,di
   14000658c:	cmp    ax,si
   14000658f:	ja     0x14000659c
   140006591:	add    rdx,0x2
   140006595:	mov    QWORD PTR [rsp+0x28],rdx
   14000659a:	jmp    0x140006586
   14000659c:	mov    ecx,DWORD PTR [rsp+0x7c]
   1400065a0:	movzx  eax,WORD PTR [rsp+0x80]
   1400065a8:	mov    r9d,0xa
   1400065ae:	and    cl,dil
   1400065b1:	cmovne r9d,eax
   1400065b5:	mov    r8,rdx
   1400065b8:	xor    edx,edx
   1400065ba:	lea    rcx,[rip+0xffffffffffff9a3f]        # 0x140000000
   1400065c1:	call   0x140001b08
   1400065c6:	mov    DWORD PTR [rip+0x4b24],eax        # 0x14000b0f0
   1400065cc:	cmp    DWORD PTR [rip+0x4b3d],r15d        # 0x14000b110
   1400065d3:	jne    0x1400065dd
   1400065d5:	mov    ecx,eax
   1400065d7:	call   QWORD PTR [rip+0x1ce3]        # 0x1400082c0
   1400065dd:	cmp    DWORD PTR [rip+0x4b10],r15d        # 0x14000b0f4
   1400065e4:	jne    0x1400065f2
   1400065e6:	call   QWORD PTR [rip+0x1c8c]        # 0x140008278
   1400065ec:	mov    eax,DWORD PTR [rip+0x4afe]        # 0x14000b0f0
   1400065f2:	jmp    0x140006643
   1400065f4:	cmp    WORD PTR [rdx],0x22
   1400065f8:	jne    0x140006608
   1400065fa:	mov    eax,r15d
   1400065fd:	test   ecx,ecx
   1400065ff:	sete   al
   140006602:	mov    ecx,eax
   140006604:	mov    DWORD PTR [rsp+0x20],eax
   140006608:	add    rdx,0x2
   14000660c:	mov    QWORD PTR [rsp+0x28],rdx
   140006611:	jmp    0x140006576
   140006616:	mov    DWORD PTR [rip+0x4ad4],eax        # 0x14000b0f0
   14000661c:	cmp    DWORD PTR [rip+0x4aed],0x0        # 0x14000b110
   140006623:	jne    0x14000662e
   140006625:	mov    ecx,eax
   140006627:	call   QWORD PTR [rip+0x1c8b]        # 0x1400082b8
   14000662d:	int3   
   14000662e:	cmp    DWORD PTR [rip+0x4abf],0x0        # 0x14000b0f4
   140006635:	jne    0x140006643
   140006637:	call   QWORD PTR [rip+0x1c3b]        # 0x140008278
   14000663d:	mov    eax,DWORD PTR [rip+0x4aad]        # 0x14000b0f0
   140006643:	lea    r11,[rsp+0xb0]
   14000664b:	mov    rbx,QWORD PTR [r11+0x20]
   14000664f:	mov    rsi,QWORD PTR [r11+0x28]
   140006653:	mov    rdi,QWORD PTR [r11+0x30]
   140006657:	mov    rsp,r11
   14000665a:	pop    r15
   14000665c:	pop    r14
   14000665e:	pop    r12
   140006660:	ret    
   140006661:	int3   
   140006662:	int3   
   140006663:	int3   
   140006664:	int3   
   140006665:	int3   
   140006666:	int3   
   140006667:	int3   
   140006668:	int3   
   140006669:	int3   
   14000666a:	int3   
   14000666b:	int3   
   14000666c:	int3   
   14000666d:	int3   
   14000666e:	int3   
   14000666f:	int3   
   140006670:	sub    rsp,0x28
   140006674:	call   0x1400069e4
   140006679:	add    rsp,0x28
   14000667d:	jmp    0x1400063f0
   140006682:	int3   
   140006683:	int3   
   140006684:	int3   
   140006685:	int3   
   140006686:	int3   
   140006687:	int3   
   140006688:	int3   
   140006689:	int3   
   14000668a:	int3   
   14000668b:	int3   
   14000668c:	int3   
   14000668d:	int3   
   14000668e:	int3   
   14000668f:	int3   
   140006690:	int3   
   140006691:	int3   
   140006692:	int3   
   140006693:	int3   
   140006694:	int3   
   140006695:	int3   
   140006696:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400066a0:	cmp    rcx,QWORD PTR [rip+0x4961]        # 0x14000b008
   1400066a7:	jne    0x1400066b9
   1400066a9:	rol    rcx,0x10
   1400066ad:	test   cx,0xffff
   1400066b2:	jne    0x1400066b5
   1400066b4:	ret    
   1400066b5:	ror    rcx,0x10
   1400066b9:	jmp    0x140006b10
   1400066be:	int3   
   1400066bf:	int3   
   1400066c0:	int3   
   1400066c1:	int3   
   1400066c2:	int3   
   1400066c3:	int3   
   1400066c4:	jmp    0x1400067ac
   1400066c9:	int3   
   1400066ca:	int3   
   1400066cb:	int3   
   1400066cc:	int3   
   1400066cd:	int3   
   1400066ce:	int3   
   1400066cf:	int3   
   1400066d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400066d5:	push   rdi
   1400066d6:	sub    rsp,0x20
   1400066da:	mov    rdi,rcx
   1400066dd:	mov    rax,QWORD PTR [rip+0x524c]        # 0x14000b930
   1400066e4:	mov    QWORD PTR [rsp+0x38],rax
   1400066e9:	cmp    rax,0xffffffffffffffff
   1400066ed:	jne    0x140006706
   1400066ef:	mov    rbx,QWORD PTR [rip+0x1b5a]        # 0x140008250
   1400066f6:	mov    rcx,rbx
   1400066f9:	call   QWORD PTR [rip+0x1c39]        # 0x140008338
   1400066ff:	mov    rcx,rdi
   140006702:	call   rbx
   140006704:	jmp    0x140006763
   140006706:	mov    ecx,0x8
   14000670b:	call   0x140006c88
   140006710:	nop
   140006711:	mov    rax,QWORD PTR [rip+0x5218]        # 0x14000b930
   140006718:	mov    QWORD PTR [rsp+0x38],rax
   14000671d:	mov    rax,QWORD PTR [rip+0x5204]        # 0x14000b928
   140006724:	mov    QWORD PTR [rsp+0x40],rax
   140006729:	lea    r8,[rsp+0x40]
   14000672e:	lea    rdx,[rsp+0x38]
   140006733:	mov    rcx,rdi
   140006736:	call   0x140006ca0
   14000673b:	mov    rbx,rax
   14000673e:	mov    rdx,QWORD PTR [rsp+0x38]
   140006743:	mov    QWORD PTR [rip+0x51e6],rdx        # 0x14000b930
   14000674a:	mov    rdx,QWORD PTR [rsp+0x40]
   14000674f:	mov    QWORD PTR [rip+0x51d2],rdx        # 0x14000b928
   140006756:	mov    ecx,0x8
   14000675b:	call   0x140006c94
   140006760:	mov    rax,rbx
   140006763:	mov    rbx,QWORD PTR [rsp+0x30]
   140006768:	add    rsp,0x20
   14000676c:	pop    rdi
   14000676d:	ret    
   14000676e:	int3   
   14000676f:	int3   
   140006770:	int3   
   140006771:	int3   
   140006772:	int3   
   140006773:	int3   
   140006774:	sub    rsp,0x28
   140006778:	call   0x1400066d0
   14000677d:	neg    rax
   140006780:	sbb    eax,eax
   140006782:	neg    eax
   140006784:	dec    eax
   140006786:	add    rsp,0x28
   14000678a:	ret    
   14000678b:	int3   
   14000678c:	int3   
   14000678d:	int3   
   14000678e:	int3   
   14000678f:	int3   
   140006790:	int3   
   140006791:	int3   
   140006792:	int3   
   140006793:	int3   
   140006794:	int3   
   140006795:	int3   
   140006796:	int3   
   140006797:	int3   
   140006798:	int3   
   140006799:	int3   
   14000679a:	int3   
   14000679b:	int3   
   14000679c:	int3   
   14000679d:	int3   
   14000679e:	int3   
   14000679f:	int3   
   1400067a0:	jmp    QWORD PTR [rip+0x1b0a]        # 0x1400082b0
   1400067a6:	int3   
   1400067a7:	int3   
   1400067a8:	int3   
   1400067a9:	int3   
   1400067aa:	int3   
   1400067ab:	int3   
   1400067ac:	sub    rsp,0x38
   1400067b0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400067b9:	call   0x140006cc8
   1400067be:	nop
   1400067bf:	jmp    0x1400067c6
   1400067c1:	mov    rax,QWORD PTR [rsp+0x50]
   1400067c6:	add    rsp,0x38
   1400067ca:	ret    
   1400067cb:	int3   
   1400067cc:	int3   
   1400067cd:	int3   
   1400067ce:	int3   
   1400067cf:	int3   
   1400067d0:	int3   
   1400067d1:	int3   
   1400067d2:	jmp    QWORD PTR [rip+0x1b30]        # 0x140008308
   1400067d8:	int3   
   1400067d9:	int3   
   1400067da:	int3   
   1400067db:	int3   
   1400067dc:	int3   
   1400067dd:	int3   
   1400067de:	int3   
   1400067df:	int3   
   1400067e0:	sub    rsp,0x28
   1400067e4:	mov    rax,QWORD PTR [rcx]
   1400067e7:	cmp    DWORD PTR [rax],0xe06d7363
   1400067ed:	jne    0x140006812
   1400067ef:	cmp    DWORD PTR [rax+0x18],0x4
   1400067f3:	jne    0x140006812
   1400067f5:	mov    ecx,DWORD PTR [rax+0x20]
   1400067f8:	lea    eax,[rcx-0x19930520]
   1400067fe:	cmp    eax,0x2
   140006801:	jbe    0x14000680b
   140006803:	cmp    ecx,0x1994000
   140006809:	jne    0x140006812
   14000680b:	call   QWORD PTR [rip+0x1a97]        # 0x1400082a8
   140006811:	int3   
   140006812:	xor    eax,eax
   140006814:	add    rsp,0x28
   140006818:	ret    
   140006819:	int3   
   14000681a:	int3   
   14000681b:	int3   
   14000681c:	int3   
   14000681d:	int3   
   14000681e:	int3   
   14000681f:	int3   
   140006820:	sub    rsp,0x28
   140006824:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400067e0
   14000682b:	call   QWORD PTR [rip+0x184f]        # 0x140008080
   140006831:	xor    eax,eax
   140006833:	add    rsp,0x28
   140006837:	ret    
   140006838:	int3   
   140006839:	int3   
   14000683a:	int3   
   14000683b:	int3   
   14000683c:	int3   
   14000683d:	int3   
   14000683e:	jmp    QWORD PTR [rip+0x1aac]        # 0x1400082f0
   140006844:	int3   
   140006845:	int3   
   140006846:	int3   
   140006847:	int3   
   140006848:	int3   
   140006849:	int3   
   14000684a:	int3   
   14000684b:	int3   
   14000684c:	sub    rsp,0x18
   140006850:	xor    edx,edx
   140006852:	lea    rax,[rcx-0x1]
   140006856:	cmp    rax,0xfffffffffffffffd
   14000685a:	ja     0x140006898
   14000685c:	mov    eax,0x5a4d
   140006861:	cmp    WORD PTR [rcx],ax
   140006864:	jne    0x140006890
   140006866:	cmp    DWORD PTR [rcx+0x3c],edx
   140006869:	jl     0x140006890
   14000686b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140006872:	jae    0x140006890
   140006874:	movsxd rax,DWORD PTR [rcx+0x3c]
   140006878:	add    rax,rcx
   14000687b:	mov    QWORD PTR [rsp],rax
   14000687f:	cmp    DWORD PTR [rax],0x4550
   140006885:	cmovne rax,rdx
   140006889:	mov    rdx,rax
   14000688c:	mov    QWORD PTR [rsp],rax
   140006890:	jmp    0x140006898
   140006892:	xor    edx,edx
   140006894:	mov    QWORD PTR [rsp],rdx
   140006898:	mov    rax,rdx
   14000689b:	add    rsp,0x18
   14000689f:	ret    
   1400068a0:	int3   
   1400068a1:	int3   
   1400068a2:	int3   
   1400068a3:	int3   
   1400068a4:	int3   
   1400068a5:	int3   
   1400068a6:	int3   
   1400068a7:	int3   
   1400068a8:	rex push rbx
   1400068aa:	sub    rsp,0x20
   1400068ae:	mov    ebx,ecx
   1400068b0:	xor    ecx,ecx
   1400068b2:	call   QWORD PTR [rip+0x17d8]        # 0x140008090
   1400068b8:	test   rax,rax
   1400068bb:	je     0x1400068e5
   1400068bd:	mov    rcx,rax
   1400068c0:	call   0x14000684c
   1400068c5:	test   rax,rax
   1400068c8:	je     0x1400068e5
   1400068ca:	mov    ecx,0x2
   1400068cf:	cmp    WORD PTR [rax+0x5c],cx
   1400068d3:	jne    0x1400068d9
   1400068d5:	mov    eax,ecx
   1400068d7:	jmp    0x1400068e7
   1400068d9:	cmp    WORD PTR [rax+0x5c],0x3
   1400068de:	mov    eax,0x1
   1400068e3:	je     0x1400068e7
   1400068e5:	mov    eax,ebx
   1400068e7:	add    rsp,0x20
   1400068eb:	pop    rbx
   1400068ec:	ret    
   1400068ed:	int3   
   1400068ee:	int3   
   1400068ef:	int3   
   1400068f0:	int3   
   1400068f1:	int3   
   1400068f2:	int3   
   1400068f3:	int3   
   1400068f4:	jmp    QWORD PTR [rip+0x19ee]        # 0x1400082e8
   1400068fa:	int3   
   1400068fb:	int3   
   1400068fc:	int3   
   1400068fd:	int3   
   1400068fe:	int3   
   1400068ff:	int3   
   140006900:	movsxd r8,DWORD PTR [rcx+0x3c]
   140006904:	xor    r9d,r9d
   140006907:	add    r8,rcx
   14000690a:	mov    r10,rdx
   14000690d:	movzx  eax,WORD PTR [r8+0x14]
   140006912:	movzx  r11d,WORD PTR [r8+0x6]
   140006917:	add    rax,0x18
   14000691b:	add    rax,r8
   14000691e:	test   r11d,r11d
   140006921:	je     0x140006941
   140006923:	mov    edx,DWORD PTR [rax+0xc]
   140006926:	cmp    r10,rdx
   140006929:	jb     0x140006935
   14000692b:	mov    ecx,DWORD PTR [rax+0x8]
   14000692e:	add    ecx,edx
   140006930:	cmp    r10,rcx
   140006933:	jb     0x140006943
   140006935:	inc    r9d
   140006938:	add    rax,0x28
   14000693c:	cmp    r9d,r11d
   14000693f:	jb     0x140006923
   140006941:	xor    eax,eax
   140006943:	ret    
   140006944:	int3   
   140006945:	int3   
   140006946:	int3   
   140006947:	int3   
   140006948:	int3   
   140006949:	int3   
   14000694a:	int3   
   14000694b:	int3   
   14000694c:	int3   
   14000694d:	int3   
   14000694e:	int3   
   14000694f:	int3   
   140006950:	mov    QWORD PTR [rsp+0x8],rbx
   140006955:	push   rdi
   140006956:	sub    rsp,0x20
   14000695a:	mov    rbx,rcx
   14000695d:	lea    rdi,[rip+0xffffffffffff969c]        # 0x140000000
   140006964:	mov    rcx,rdi
   140006967:	call   0x1400069b0
   14000696c:	test   eax,eax
   14000696e:	je     0x140006992
   140006970:	sub    rbx,rdi
   140006973:	mov    rdx,rbx
   140006976:	mov    rcx,rdi
   140006979:	call   0x140006900
   14000697e:	test   rax,rax
   140006981:	je     0x140006992
   140006983:	mov    eax,DWORD PTR [rax+0x24]
   140006986:	shr    eax,0x1f
   140006989:	not    eax
   14000698b:	and    eax,0x1
   14000698e:	jmp    0x140006992
   140006990:	xor    eax,eax
   140006992:	mov    rbx,QWORD PTR [rsp+0x30]
   140006997:	add    rsp,0x20
   14000699b:	pop    rdi
   14000699c:	ret    
   14000699d:	int3   
   14000699e:	int3   
   14000699f:	int3   
   1400069a0:	int3   
   1400069a1:	int3   
   1400069a2:	int3   
   1400069a3:	int3   
   1400069a4:	int3   
   1400069a5:	int3   
   1400069a6:	int3   
   1400069a7:	int3   
   1400069a8:	int3   
   1400069a9:	int3   
   1400069aa:	int3   
   1400069ab:	int3   
   1400069ac:	int3   
   1400069ad:	int3   
   1400069ae:	int3   
   1400069af:	int3   
   1400069b0:	mov    rax,rcx
   1400069b3:	mov    ecx,0x5a4d
   1400069b8:	cmp    WORD PTR [rax],cx
   1400069bb:	je     0x1400069c0
   1400069bd:	xor    eax,eax
   1400069bf:	ret    
   1400069c0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400069c4:	add    rcx,rax
   1400069c7:	xor    eax,eax
   1400069c9:	cmp    DWORD PTR [rcx],0x4550
   1400069cf:	jne    0x1400069dd
   1400069d1:	mov    edx,0x20b
   1400069d6:	cmp    WORD PTR [rcx+0x18],dx
   1400069da:	sete   al
   1400069dd:	ret    
   1400069de:	int3   
   1400069df:	int3   
   1400069e0:	int3   
   1400069e1:	int3   
   1400069e2:	int3   
   1400069e3:	int3   
   1400069e4:	mov    QWORD PTR [rsp+0x20],rbx
   1400069e9:	push   rbp
   1400069ea:	mov    rbp,rsp
   1400069ed:	sub    rsp,0x20
   1400069f1:	and    QWORD PTR [rbp+0x18],0x0
   1400069f6:	movabs rbx,0x2b992ddfa232
   140006a00:	mov    rax,QWORD PTR [rip+0x4601]        # 0x14000b008
   140006a07:	cmp    rax,rbx
   140006a0a:	jne    0x140006a9f
   140006a10:	lea    rcx,[rbp+0x18]
   140006a14:	call   QWORD PTR [rip+0x175e]        # 0x140008178
   140006a1a:	mov    rax,QWORD PTR [rbp+0x18]
   140006a1e:	mov    QWORD PTR [rbp+0x10],rax
   140006a22:	call   QWORD PTR [rip+0x16c8]        # 0x1400080f0
   140006a28:	mov    eax,eax
   140006a2a:	xor    QWORD PTR [rbp+0x10],rax
   140006a2e:	call   QWORD PTR [rip+0x16b4]        # 0x1400080e8
   140006a34:	mov    eax,eax
   140006a36:	xor    QWORD PTR [rbp+0x10],rax
   140006a3a:	call   QWORD PTR [rip+0x1730]        # 0x140008170
   140006a40:	mov    eax,eax
   140006a42:	shl    rax,0x18
   140006a46:	xor    QWORD PTR [rbp+0x10],rax
   140006a4a:	call   QWORD PTR [rip+0x1720]        # 0x140008170
   140006a50:	mov    eax,eax
   140006a52:	lea    rcx,[rbp+0x10]
   140006a56:	xor    rax,QWORD PTR [rbp+0x10]
   140006a5a:	xor    rax,rcx
   140006a5d:	lea    rcx,[rbp+0x20]
   140006a61:	mov    QWORD PTR [rbp+0x10],rax
   140006a65:	call   QWORD PTR [rip+0x1695]        # 0x140008100
   140006a6b:	mov    eax,DWORD PTR [rbp+0x20]
   140006a6e:	movabs rcx,0xffffffffffff
   140006a78:	shl    rax,0x20
   140006a7c:	xor    rax,QWORD PTR [rbp+0x20]
   140006a80:	xor    rax,QWORD PTR [rbp+0x10]
   140006a84:	and    rax,rcx
   140006a87:	movabs rcx,0x2b992ddfa233
   140006a91:	cmp    rax,rbx
   140006a94:	cmove  rax,rcx
   140006a98:	mov    QWORD PTR [rip+0x4569],rax        # 0x14000b008
   140006a9f:	mov    rbx,QWORD PTR [rsp+0x48]
   140006aa4:	not    rax
   140006aa7:	mov    QWORD PTR [rip+0x4562],rax        # 0x14000b010
   140006aae:	add    rsp,0x20
   140006ab2:	pop    rbp
   140006ab3:	ret    
   140006ab4:	int3   
   140006ab5:	int3   
   140006ab6:	int3   
   140006ab7:	int3   
   140006ab8:	int3   
   140006ab9:	int3   
   140006aba:	jmp    QWORD PTR [rip+0x17a8]        # 0x140008268
   140006ac0:	int3   
   140006ac1:	int3   
   140006ac2:	int3   
   140006ac3:	int3   
   140006ac4:	int3   
   140006ac5:	int3   
   140006ac6:	jmp    QWORD PTR [rip+0x1794]        # 0x140008260
   140006acc:	int3   
   140006acd:	int3   
   140006ace:	int3   
   140006acf:	int3   
   140006ad0:	int3   
   140006ad1:	int3   
   140006ad2:	int3   
   140006ad3:	int3   
   140006ad4:	rex push rbx
   140006ad6:	sub    rsp,0x20
   140006ada:	mov    rbx,rcx
   140006add:	xor    ecx,ecx
   140006adf:	call   QWORD PTR [rip+0x159b]        # 0x140008080
   140006ae5:	mov    rcx,rbx
   140006ae8:	call   QWORD PTR [rip+0x1582]        # 0x140008070
   140006aee:	call   QWORD PTR [rip+0x15ec]        # 0x1400080e0
   140006af4:	mov    rcx,rax
   140006af7:	mov    edx,0xc0000409
   140006afc:	add    rsp,0x20
   140006b00:	pop    rbx
   140006b01:	rex.W jmp QWORD PTR [rip+0x15c8]        # 0x1400080d0
   140006b08:	int3   
   140006b09:	int3   
   140006b0a:	int3   
   140006b0b:	int3   
   140006b0c:	int3   
   140006b0d:	int3   
   140006b0e:	int3   
   140006b0f:	int3   
   140006b10:	mov    QWORD PTR [rsp+0x8],rcx
   140006b15:	sub    rsp,0x88
   140006b1c:	lea    rcx,[rip+0x46ad]        # 0x14000b1d0
   140006b23:	call   QWORD PTR [rip+0x15f7]        # 0x140008120
   140006b29:	mov    rax,QWORD PTR [rip+0x4798]        # 0x14000b2c8
   140006b30:	mov    QWORD PTR [rsp+0x48],rax
   140006b35:	xor    r8d,r8d
   140006b38:	lea    rdx,[rsp+0x50]
   140006b3d:	mov    rcx,QWORD PTR [rsp+0x48]
   140006b42:	call   QWORD PTR [rip+0x15c8]        # 0x140008110
   140006b48:	mov    QWORD PTR [rsp+0x40],rax
   140006b4d:	cmp    QWORD PTR [rsp+0x40],0x0
   140006b53:	je     0x140006b97
   140006b55:	mov    QWORD PTR [rsp+0x38],0x0
   140006b5e:	lea    rax,[rsp+0x58]
   140006b63:	mov    QWORD PTR [rsp+0x30],rax
   140006b68:	lea    rax,[rsp+0x60]
   140006b6d:	mov    QWORD PTR [rsp+0x28],rax
   140006b72:	lea    rax,[rip+0x4657]        # 0x14000b1d0
   140006b79:	mov    QWORD PTR [rsp+0x20],rax
   140006b7e:	mov    r9,QWORD PTR [rsp+0x40]
   140006b83:	mov    r8,QWORD PTR [rsp+0x48]
   140006b88:	mov    rdx,QWORD PTR [rsp+0x50]
   140006b8d:	xor    ecx,ecx
   140006b8f:	call   QWORD PTR [rip+0x1583]        # 0x140008118
   140006b95:	jmp    0x140006bba
   140006b97:	mov    rax,QWORD PTR [rip+0x46ca]        # 0x14000b268
   140006b9e:	mov    rax,QWORD PTR [rax]
   140006ba1:	mov    QWORD PTR [rip+0x4720],rax        # 0x14000b2c8
   140006ba8:	mov    rax,QWORD PTR [rip+0x46b9]        # 0x14000b268
   140006baf:	add    rax,0x8
   140006bb3:	mov    QWORD PTR [rip+0x46ae],rax        # 0x14000b268
   140006bba:	mov    rax,QWORD PTR [rip+0x4707]        # 0x14000b2c8
   140006bc1:	mov    QWORD PTR [rip+0x4578],rax        # 0x14000b140
   140006bc8:	mov    rax,QWORD PTR [rsp+0x90]
   140006bd0:	mov    QWORD PTR [rip+0x4679],rax        # 0x14000b250
   140006bd7:	mov    DWORD PTR [rip+0x454f],0xc0000409        # 0x14000b130
   140006be1:	mov    DWORD PTR [rip+0x4549],0x1        # 0x14000b134
   140006beb:	mov    DWORD PTR [rip+0x4553],0x3        # 0x14000b148
   140006bf5:	mov    eax,0x8
   140006bfa:	imul   rax,rax,0x0
   140006bfe:	lea    rcx,[rip+0x454b]        # 0x14000b150
   140006c05:	mov    QWORD PTR [rcx+rax*1],0x2
   140006c0d:	mov    eax,0x8
   140006c12:	imul   rax,rax,0x1
   140006c16:	lea    rcx,[rip+0x4533]        # 0x14000b150
   140006c1d:	mov    rdx,QWORD PTR [rip+0x43e4]        # 0x14000b008
   140006c24:	mov    QWORD PTR [rcx+rax*1],rdx
   140006c28:	mov    eax,0x8
   140006c2d:	imul   rax,rax,0x2
   140006c31:	lea    rcx,[rip+0x4518]        # 0x14000b150
   140006c38:	mov    rdx,QWORD PTR [rip+0x43d1]        # 0x14000b010
   140006c3f:	mov    QWORD PTR [rcx+rax*1],rdx
   140006c43:	mov    eax,0x8
   140006c48:	imul   rax,rax,0x0
   140006c4c:	mov    rcx,QWORD PTR [rip+0x43b5]        # 0x14000b008
   140006c53:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140006c58:	mov    eax,0x8
   140006c5d:	imul   rax,rax,0x1
   140006c61:	mov    rcx,QWORD PTR [rip+0x43a8]        # 0x14000b010
   140006c68:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140006c6d:	lea    rcx,[rip+0x1914]        # 0x140008588
   140006c74:	call   0x140006ad4
   140006c79:	add    rsp,0x88
   140006c80:	ret    
   140006c81:	int3   
   140006c82:	int3   
   140006c83:	int3   
   140006c84:	int3   
   140006c85:	int3   
   140006c86:	int3   
   140006c87:	int3   
   140006c88:	jmp    QWORD PTR [rip+0x166a]        # 0x1400082f8
   140006c8e:	int3   
   140006c8f:	int3   
   140006c90:	int3   
   140006c91:	int3   
   140006c92:	int3   
   140006c93:	int3   
   140006c94:	jmp    QWORD PTR [rip+0x1646]        # 0x1400082e0
   140006c9a:	int3   
   140006c9b:	int3   
   140006c9c:	int3   
   140006c9d:	int3   
   140006c9e:	int3   
   140006c9f:	int3   
   140006ca0:	jmp    QWORD PTR [rip+0x15a2]        # 0x140008248
   140006ca6:	int3   
   140006ca7:	int3   
   140006ca8:	int3   
   140006ca9:	int3   
   140006caa:	int3   
   140006cab:	int3   
   140006cac:	jmp    QWORD PTR [rip+0x15a6]        # 0x140008258
   140006cb2:	int3   
   140006cb3:	int3   
   140006cb4:	int3   
   140006cb5:	int3   
   140006cb6:	int3   
   140006cb7:	int3   
   140006cb8:	int3   
   140006cb9:	int3   
   140006cba:	int3   
   140006cbb:	int3   
   140006cbc:	int3   
   140006cbd:	int3   
   140006cbe:	int3   
   140006cbf:	int3   
   140006cc0:	int3   
   140006cc1:	int3   
   140006cc2:	int3   
   140006cc3:	int3   
   140006cc4:	int3   
   140006cc5:	int3   
   140006cc6:	int3   
   140006cc7:	int3   
   140006cc8:	mov    QWORD PTR [rsp+0x8],rbx
   140006ccd:	push   rdi
   140006cce:	sub    rsp,0x20
   140006cd2:	mov    rdi,rcx
   140006cd5:	jmp    0x140006ce6
   140006cd7:	mov    rcx,rdi
   140006cda:	call   0x140006d56
   140006cdf:	test   eax,eax
   140006ce1:	je     0x140006cf3
   140006ce3:	mov    rcx,rdi
   140006ce6:	call   0x140006d08
   140006ceb:	mov    rbx,rax
   140006cee:	test   rax,rax
   140006cf1:	je     0x140006cd7
   140006cf3:	mov    rax,rbx
   140006cf6:	mov    rbx,QWORD PTR [rsp+0x30]
   140006cfb:	add    rsp,0x20
   140006cff:	pop    rdi
   140006d00:	ret    
   140006d01:	int3   
   140006d02:	int3   
   140006d03:	int3   
   140006d04:	int3   
   140006d05:	int3   
   140006d06:	int3   
   140006d07:	int3   
   140006d08:	jmp    QWORD PTR [rip+0x157a]        # 0x140008288
   140006d0e:	int3   
   140006d0f:	int3   
   140006d10:	int3   
   140006d11:	int3   
   140006d12:	int3   
   140006d13:	int3   
   140006d14:	int3   
   140006d15:	int3   
   140006d16:	int3   
   140006d17:	int3   
   140006d18:	int3   
   140006d19:	int3   
   140006d1a:	int3   
   140006d1b:	int3   
   140006d1c:	int3   
   140006d1d:	int3   
   140006d1e:	int3   
   140006d1f:	int3   
   140006d20:	mov    QWORD PTR [rsp+0x8],rbx
   140006d25:	push   rdi
   140006d26:	sub    rsp,0x20
   140006d2a:	mov    ebx,edx
   140006d2c:	mov    rdi,rcx
   140006d2f:	call   QWORD PTR [rip+0x156b]        # 0x1400082a0
   140006d35:	test   bl,0x1
   140006d38:	je     0x140006d42
   140006d3a:	mov    rcx,rdi
   140006d3d:	call   0x1400062b0
   140006d42:	mov    rax,rdi
   140006d45:	mov    rbx,QWORD PTR [rsp+0x30]
   140006d4a:	add    rsp,0x20
   140006d4e:	pop    rdi
   140006d4f:	ret    
   140006d50:	int3   
   140006d51:	int3   
   140006d52:	int3   
   140006d53:	int3   
   140006d54:	int3   
   140006d55:	int3   
   140006d56:	jmp    QWORD PTR [rip+0x153c]        # 0x140008298
   140006d5c:	int3   
   140006d5d:	int3   
   140006d5e:	int3   
   140006d5f:	int3   
   140006d60:	int3   
   140006d61:	int3   
   140006d62:	jmp    QWORD PTR [rip+0x15b0]        # 0x140008318
   140006d68:	int3   
   140006d69:	int3   
   140006d6a:	int3   
   140006d6b:	int3   
   140006d6c:	int3   
   140006d6d:	int3   
   140006d6e:	int3   
   140006d6f:	int3   
   140006d70:	sub    rsp,0x28
   140006d74:	mov    r8,QWORD PTR [r9+0x38]
   140006d78:	mov    rcx,rdx
   140006d7b:	mov    rdx,r9
   140006d7e:	call   0x140006d94
   140006d83:	mov    eax,0x1
   140006d88:	add    rsp,0x28
   140006d8c:	ret    
   140006d8d:	int3   
   140006d8e:	int3   
   140006d8f:	int3   
   140006d90:	int3   
   140006d91:	int3   
   140006d92:	int3   
   140006d93:	int3   
   140006d94:	rex push rbx
   140006d96:	sub    rsp,0x20
   140006d9a:	mov    r11d,DWORD PTR [r8]
   140006d9d:	mov    rbx,rdx
   140006da0:	and    r11d,0xfffffff8
   140006da4:	mov    r9,rcx
   140006da7:	test   BYTE PTR [r8],0x4
   140006dab:	mov    r10,rcx
   140006dae:	je     0x140006dc3
   140006db0:	mov    eax,DWORD PTR [r8+0x8]
   140006db4:	movsxd r10,DWORD PTR [r8+0x4]
   140006db8:	neg    eax
   140006dba:	add    r10,rcx
   140006dbd:	movsxd rcx,eax
   140006dc0:	and    r10,rcx
   140006dc3:	movsxd rax,r11d
   140006dc6:	mov    rdx,QWORD PTR [rax+r10*1]
   140006dca:	mov    rax,QWORD PTR [rbx+0x10]
   140006dce:	mov    ecx,DWORD PTR [rax+0x8]
   140006dd1:	add    rcx,QWORD PTR [rbx+0x8]
   140006dd5:	test   BYTE PTR [rcx+0x3],0xf
   140006dd9:	je     0x140006de7
   140006ddb:	movzx  eax,BYTE PTR [rcx+0x3]
   140006ddf:	and    eax,0xfffffff0
   140006de2:	cdqe   
   140006de4:	add    r9,rax
   140006de7:	xor    r9,rdx
   140006dea:	mov    rcx,r9
   140006ded:	add    rsp,0x20
   140006df1:	pop    rbx
   140006df2:	jmp    0x1400066a0
   140006df7:	int3   
   140006df8:	int3   
   140006df9:	int3   
   140006dfa:	int3   
   140006dfb:	int3   
   140006dfc:	int3   
   140006dfd:	int3   
   140006dfe:	int3   
   140006dff:	int3   
   140006e00:	int3   
   140006e01:	int3   
   140006e02:	int3   
   140006e03:	int3   
   140006e04:	int3   
   140006e05:	int3   
   140006e06:	jmp    QWORD PTR [rip+0x1514]        # 0x140008320
   140006e0c:	int3   
   140006e0d:	int3   
   140006e0e:	int3   
   140006e0f:	int3   
   140006e10:	int3   
   140006e11:	int3   
   140006e12:	jmp    QWORD PTR [rip+0x1510]        # 0x140008328
   140006e18:	int3   
   140006e19:	int3   
   140006e1a:	int3   
   140006e1b:	int3   
   140006e1c:	int3   
   140006e1d:	int3   
   140006e1e:	int3   
   140006e1f:	int3   
   140006e20:	int3   
   140006e21:	int3   
   140006e22:	int3   
   140006e23:	int3   
   140006e24:	int3   
   140006e25:	int3   
   140006e26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006e30:	jmp    rax
   140006e32:	int3   
   140006e33:	int3   
   140006e34:	int3   
   140006e35:	int3   
   140006e36:	int3   
   140006e37:	int3   
   140006e38:	int3   
   140006e39:	int3   
   140006e3a:	int3   
   140006e3b:	int3   
   140006e3c:	int3   
   140006e3d:	int3   
   140006e3e:	int3   
   140006e3f:	int3   
   140006e40:	int3   
   140006e41:	int3   
   140006e42:	int3   
   140006e43:	int3   
   140006e44:	int3   
   140006e45:	int3   
   140006e46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006e50:	sub    rsp,0x10
   140006e54:	mov    QWORD PTR [rsp],r10
   140006e58:	mov    QWORD PTR [rsp+0x8],r11
   140006e5d:	xor    r11,r11
   140006e60:	lea    r10,[rsp+0x18]
   140006e65:	sub    r10,rax
   140006e68:	cmovb  r10,r11
   140006e6c:	mov    r11,QWORD PTR gs:0x10
   140006e75:	cmp    r10,r11
   140006e78:	jae    0x140006e8f
   140006e7a:	and    r10w,0xf000
   140006e80:	lea    r11,[r11-0x1000]
   140006e87:	test   BYTE PTR [r11],r11b
   140006e8a:	cmp    r10,r11
   140006e8d:	jne    0x140006e80
   140006e8f:	mov    r10,QWORD PTR [rsp]
   140006e93:	mov    r11,QWORD PTR [rsp+0x8]
   140006e98:	add    rsp,0x10
   140006e9c:	ret    
   140006e9d:	int3   
   140006e9e:	int3   
   140006e9f:	int3   
   140006ea0:	int3   
   140006ea1:	int3   
   140006ea2:	int3   
   140006ea3:	int3   
   140006ea4:	int3   
   140006ea5:	int3   
   140006ea6:	rex push rbp
   140006ea8:	sub    rsp,0x20
   140006eac:	mov    rbp,rdx
   140006eaf:	mov    rax,QWORD PTR [rcx]
   140006eb2:	mov    rdx,rcx
   140006eb5:	mov    ecx,DWORD PTR [rax]
   140006eb7:	call   0x14000683e
   140006ebc:	nop
   140006ebd:	add    rsp,0x20
   140006ec1:	pop    rbp
   140006ec2:	ret    
   140006ec3:	int3   
   140006ec4:	int3   
   140006ec5:	int3   
   140006ec6:	int3   
   140006ec7:	int3   
   140006ec8:	int3   
   140006ec9:	int3   
   140006eca:	rex push rbp
   140006ecc:	sub    rsp,0x20
   140006ed0:	mov    rbp,rdx
   140006ed3:	mov    ecx,0x8
   140006ed8:	call   0x140006c94
   140006edd:	nop
   140006ede:	add    rsp,0x20
   140006ee2:	pop    rbp
   140006ee3:	ret    
   140006ee4:	int3   
   140006ee5:	int3   
   140006ee6:	int3   
   140006ee7:	int3   
   140006ee8:	int3   
   140006ee9:	int3   
   140006eea:	int3   
   140006eeb:	mov    QWORD PTR [rsp+0x10],rdx
   140006ef0:	push   rbp
   140006ef1:	sub    rsp,0x20
   140006ef5:	mov    rbp,rdx
   140006ef8:	and    QWORD PTR [rbp+0x50],0x0
   140006efd:	lea    rax,[rip+0xfffffffffffff8bd]        # 0x1400067c1
   140006f04:	add    rsp,0x20
   140006f08:	pop    rbp
   140006f09:	ret    
   140006f0a:	int3   
   140006f0b:	int3   
   140006f0c:	int3   
   140006f0d:	int3   
   140006f0e:	int3   
   140006f0f:	int3   
   140006f10:	int3   
   140006f11:	int3   
   140006f12:	int3   
   140006f13:	int3   
   140006f14:	int3   
   140006f15:	int3   
   140006f16:	int3   
   140006f17:	int3   
   140006f18:	int3   
   140006f19:	int3   
   140006f1a:	int3   
   140006f1b:	int3   
   140006f1c:	int3   
   140006f1d:	int3   
   140006f1e:	int3   
   140006f1f:	int3   
   140006f20:	rex push rbp
   140006f22:	sub    rsp,0x20
   140006f26:	mov    rbp,rdx
   140006f29:	mov    rax,QWORD PTR [rcx]
   140006f2c:	xor    ecx,ecx
   140006f2e:	cmp    DWORD PTR [rax],0xc0000005
   140006f34:	sete   cl
   140006f37:	mov    eax,ecx
   140006f39:	add    rsp,0x20
   140006f3d:	pop    rbp
   140006f3e:	ret    
   140006f3f:	int3   
   140006f40:	int3   
   140006f41:	int3   
   140006f42:	int3   
   140006f43:	int3   
   140006f44:	int3   
   140006f45:	int3   
   140006f46:	int3   
   140006f47:	int3   
   140006f48:	int3   
   140006f49:	int3   
   140006f4a:	int3   
   140006f4b:	int3   
   140006f4c:	int3   
   140006f4d:	int3   
   140006f4e:	int3   
   140006f4f:	int3   
   140006f50:	lea    rcx,[rip+0x4819]        # 0x14000b770
   140006f57:	jmp    0x1400026ac
   140006f5c:	int3   
   140006f5d:	int3   
   140006f5e:	int3   
   140006f5f:	int3   
   140006f60:	int3   
   140006f61:	int3   
   140006f62:	int3   
   140006f63:	int3   
   140006f64:	int3   
   140006f65:	int3   
   140006f66:	int3   
   140006f67:	int3   
   140006f68:	int3   
   140006f69:	int3   
   140006f6a:	int3   
   140006f6b:	int3   
   140006f6c:	int3   
   140006f6d:	int3   
   140006f6e:	int3   
   140006f6f:	int3   
   140006f70:	sub    rsp,0x28
   140006f74:	lea    rax,[rip+0x17ed]        # 0x140008768
   140006f7b:	mov    r8b,0x1
   140006f7e:	lea    rcx,[rip+0x4723]        # 0x14000b6a8
   140006f85:	mov    QWORD PTR [rip+0x471c],rax        # 0x14000b6a8
   140006f8c:	call   0x140001768
   140006f91:	and    QWORD PTR [rip+0x471f],0x0        # 0x14000b6b8
   140006f99:	mov    BYTE PTR [rip+0x47e0],0x0        # 0x14000b780
   140006fa0:	add    rsp,0x28
   140006fa4:	ret    
   140006fa5:	int3   
   140006fa6:	int3   
   140006fa7:	int3   
   140006fa8:	int3   
   140006fa9:	int3   
   140006faa:	int3   
   140006fab:	int3   
   140006fac:	int3   
   140006fad:	int3   
   140006fae:	int3   
   140006faf:	int3   
   140006fb0:	mov    QWORD PTR [rsp+0x8],rbx
   140006fb5:	push   rdi
   140006fb6:	sub    rsp,0x20
   140006fba:	lea    rbx,[rip+0x48af]        # 0x14000b870
   140006fc1:	mov    rdi,QWORD PTR [rbx]
   140006fc4:	jmp    0x140006fd3
   140006fc6:	mov    rcx,rdi
   140006fc9:	mov    rdi,QWORD PTR [rdi+0x10]
   140006fcd:	call   QWORD PTR [rip+0x1335]        # 0x140008308
   140006fd3:	test   rdi,rdi
   140006fd6:	jne    0x140006fc6
   140006fd8:	mov    QWORD PTR [rbx],rdi
   140006fdb:	lea    rax,[rip+0x492e]        # 0x14000b910
   140006fe2:	add    rbx,0x8
   140006fe6:	cmp    rbx,rax
   140006fe9:	jne    0x140006fc1
   140006feb:	mov    rbx,QWORD PTR [rsp+0x30]
   140006ff0:	add    rsp,0x20
   140006ff4:	pop    rdi
   140006ff5:	ret    
   140006ff6:	int3   
   140006ff7:	int3   
   140006ff8:	int3   
   140006ff9:	int3   
   140006ffa:	int3   
   140006ffb:	int3   
   140006ffc:	int3   
   140006ffd:	int3   
   140006ffe:	int3   
   140006fff:	int3   
   140007000:	mov    QWORD PTR [rsp+0x18],rbx
   140007005:	push   rdi
   140007006:	sub    rsp,0x20
   14000700a:	lea    r9,[rsp+0x38]
   14000700f:	xor    edx,edx
   140007011:	lea    r8,[rsp+0x30]
   140007016:	lea    rcx,[rip+0x4793]        # 0x14000b7b0
   14000701d:	call   QWORD PTR [rip+0x1115]        # 0x140008138
   140007023:	test   eax,eax
   140007025:	je     0x14000704a
   140007027:	cmp    DWORD PTR [rsp+0x30],0x0
   14000702c:	jne    0x14000704a
   14000702e:	mov    rdi,QWORD PTR [rsp+0x38]
   140007033:	mov    rax,QWORD PTR [rdi]
   140007036:	mov    rbx,QWORD PTR [rax+0x18]
   14000703a:	mov    rcx,rbx
   14000703d:	call   QWORD PTR [rip+0x12f5]        # 0x140008338
   140007043:	xor    edx,edx
   140007045:	mov    rcx,rdi
   140007048:	call   rbx
   14000704a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000704f:	add    rsp,0x20
   140007053:	pop    rdi
   140007054:	ret    
   140007055:	int3   
   140007056:	int3   
   140007057:	int3   
   140007058:	int3   
   140007059:	int3   
   14000705a:	int3   
   14000705b:	int3   
   14000705c:	int3   
   14000705d:	int3   
   14000705e:	int3   
   14000705f:	int3   
   140007060:	mov    QWORD PTR [rsp+0x18],rbx
   140007065:	push   rdi
   140007066:	sub    rsp,0x20
   14000706a:	lea    r9,[rsp+0x38]
   14000706f:	xor    edx,edx
   140007071:	lea    r8,[rsp+0x30]
   140007076:	lea    rcx,[rip+0x475b]        # 0x14000b7d8
   14000707d:	call   QWORD PTR [rip+0x10b5]        # 0x140008138
   140007083:	test   eax,eax
   140007085:	je     0x1400070aa
   140007087:	cmp    DWORD PTR [rsp+0x30],0x0
   14000708c:	jne    0x1400070aa
   14000708e:	mov    rdi,QWORD PTR [rsp+0x38]
   140007093:	mov    rax,QWORD PTR [rdi]
   140007096:	mov    rbx,QWORD PTR [rax+0x18]
   14000709a:	mov    rcx,rbx
   14000709d:	call   QWORD PTR [rip+0x1295]        # 0x140008338
   1400070a3:	xor    edx,edx
   1400070a5:	mov    rcx,rdi
   1400070a8:	call   rbx
   1400070aa:	mov    rbx,QWORD PTR [rsp+0x40]
   1400070af:	add    rsp,0x20
   1400070b3:	pop    rdi
   1400070b4:	ret    
   1400070b5:	int3   
   1400070b6:	int3   
   1400070b7:	int3   
   1400070b8:	int3   
   1400070b9:	int3   
   1400070ba:	int3   
   1400070bb:	int3   
   1400070bc:	int3   
   1400070bd:	int3   
   1400070be:	int3   
   1400070bf:	int3   
   1400070c0:	mov    QWORD PTR [rsp+0x18],rbx
   1400070c5:	push   rdi
   1400070c6:	sub    rsp,0x20
   1400070ca:	lea    r9,[rsp+0x38]
   1400070cf:	xor    edx,edx
   1400070d1:	lea    r8,[rsp+0x30]
   1400070d6:	lea    rcx,[rip+0x46ab]        # 0x14000b788
   1400070dd:	call   QWORD PTR [rip+0x1055]        # 0x140008138
   1400070e3:	test   eax,eax
   1400070e5:	je     0x14000710a
   1400070e7:	cmp    DWORD PTR [rsp+0x30],0x0
   1400070ec:	jne    0x14000710a
   1400070ee:	mov    rdi,QWORD PTR [rsp+0x38]
   1400070f3:	mov    rax,QWORD PTR [rdi]
   1400070f6:	mov    rbx,QWORD PTR [rax+0x18]
   1400070fa:	mov    rcx,rbx
   1400070fd:	call   QWORD PTR [rip+0x1235]        # 0x140008338
   140007103:	xor    edx,edx
   140007105:	mov    rcx,rdi
   140007108:	call   rbx
   14000710a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000710f:	add    rsp,0x20
   140007113:	pop    rdi
   140007114:	ret    
   140007115:	int3   
   140007116:	int3   
   140007117:	int3   
   140007118:	int3   
   140007119:	int3   
   14000711a:	int3   
   14000711b:	int3   
   14000711c:	int3   
   14000711d:	int3   
   14000711e:	int3   
   14000711f:	int3   
   140007120:	mov    QWORD PTR [rsp+0x18],rbx
   140007125:	push   rdi
   140007126:	sub    rsp,0x20
   14000712a:	lea    r9,[rsp+0x38]
   14000712f:	xor    edx,edx
   140007131:	lea    r8,[rsp+0x30]
   140007136:	lea    rcx,[rip+0x46bb]        # 0x14000b7f8
   14000713d:	call   QWORD PTR [rip+0xff5]        # 0x140008138
   140007143:	test   eax,eax
   140007145:	je     0x14000716a
   140007147:	cmp    DWORD PTR [rsp+0x30],0x0
   14000714c:	jne    0x14000716a
   14000714e:	mov    rdi,QWORD PTR [rsp+0x38]
   140007153:	mov    rax,QWORD PTR [rdi]
   140007156:	mov    rbx,QWORD PTR [rax+0x18]
   14000715a:	mov    rcx,rbx
   14000715d:	call   QWORD PTR [rip+0x11d5]        # 0x140008338
   140007163:	xor    edx,edx
   140007165:	mov    rcx,rdi
   140007168:	call   rbx
   14000716a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000716f:	add    rsp,0x20
   140007173:	pop    rdi
   140007174:	ret    

Disassembly of section .rdata:

0000000140008000 <.rdata>:
   140008000:	in     al,0xa8
   140008002:	add    BYTE PTR [rax],al
   140008004:	add    BYTE PTR [rax],al
   140008006:	add    BYTE PTR [rax],al
   140008008:	ret    0xa8
   14000800b:	add    BYTE PTR [rax],al
   14000800d:	add    BYTE PTR [rax],al
   14000800f:	add    dh,cl
   140008011:	test   al,0x0
	...
   14000801f:	add    BYTE PTR [rsi-0x5b],bl
   140008022:	add    BYTE PTR [rax],al
   140008024:	add    BYTE PTR [rax],al
   140008026:	add    BYTE PTR [rax],al
   140008028:	in     al,dx
   140008029:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000802a:	add    BYTE PTR [rax],al
   14000802c:	add    BYTE PTR [rax],al
   14000802e:	add    BYTE PTR [rax],al
   140008030:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140008032:	add    BYTE PTR [rax],al
   140008034:	add    BYTE PTR [rax],al
   140008036:	add    BYTE PTR [rax],al
   140008038:	pushf  
   140008039:	movabs ds:0xa33e000000000000,eax
   140008042:	add    BYTE PTR [rax],al
   140008044:	add    BYTE PTR [rax],al
   140008046:	add    BYTE PTR [rax],al
   140008048:	movabs ds:0xa8000000000000a4,al
   140008051:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   14000805e:	add    BYTE PTR [rax],al
   140008060:	(bad)  
   140008061:	test   eax,0x0
	...
   14000806e:	add    BYTE PTR [rax],al
   140008070:	mov    esi,0xa6
   140008075:	add    BYTE PTR [rax],al
   140008077:	add    BYTE PTR [rax+0xa4],al
   14000807d:	add    BYTE PTR [rax],al
   14000807f:	add    dl,bl
   140008081:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   14000808e:	add    BYTE PTR [rax],al
   140008090:	clc    
   140008091:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008092:	add    BYTE PTR [rax],al
   140008094:	add    BYTE PTR [rax],al
   140008096:	add    BYTE PTR [rax],al
   140008098:	(bad)  
   140008099:	test   eax,0x0
   14000809e:	add    BYTE PTR [rax],al
   1400080a0:	scas   al,BYTE PTR es:[rdi]
   1400080a1:	test   eax,0x0
   1400080a6:	add    BYTE PTR [rax],al
   1400080a8:	es stos BYTE PTR es:[rdi],al
   1400080aa:	add    BYTE PTR [rax],al
   1400080ac:	add    BYTE PTR [rax],al
   1400080ae:	add    BYTE PTR [rax],al
   1400080b0:	adc    al,0xaa
	...
   1400080be:	add    BYTE PTR [rax],al
   1400080c0:	fisubr DWORD PTR [rcx+0x0]
	...
   1400080ce:	add    BYTE PTR [rax],al
   1400080d0:	out    dx,al
   1400080d1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400080d2:	add    BYTE PTR [rax],al
   1400080d4:	add    BYTE PTR [rax],al
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	enter  0xa5,0x0
   1400080dc:	add    BYTE PTR [rax],al
   1400080de:	add    BYTE PTR [rax],al
   1400080e0:	fisub  DWORD PTR [rsi+0x0]
   1400080e6:	add    BYTE PTR [rax],al
   1400080e8:	cmp    al,0xa6
   1400080ea:	add    BYTE PTR [rax],al
   1400080ec:	add    BYTE PTR [rax],al
   1400080ee:	add    BYTE PTR [rax],al
   1400080f0:	cmps   BYTE PTR es:[rsi],BYTE PTR es:[rdi]
	...
   1400080fe:	add    BYTE PTR [rax],al
   140008100:	or     al,0xa6
	...
   14000810e:	add    BYTE PTR [rax],al
   140008110:	nop
   140008111:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008112:	add    BYTE PTR [rax],al
   140008114:	add    BYTE PTR [rax],al
   140008116:	add    BYTE PTR [rax],al
   140008118:	stos   BYTE PTR es:[rdi],al
   140008119:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000811a:	add    BYTE PTR [rax],al
   14000811c:	add    BYTE PTR [rax],al
   14000811e:	add    BYTE PTR [rax],al
   140008120:	jl     0x1400080c8
	...
   14000812e:	add    BYTE PTR [rax],al
   140008130:	push   0xa4
   140008135:	add    BYTE PTR [rax],al
   140008137:	add    BYTE PTR [rcx+rbp*4+0x0],dl
   14000813e:	add    BYTE PTR [rax],al
   140008140:	shl    BYTE PTR [rbp+0x0],0x0
   140008147:	add    BYTE PTR [rax],dh
   140008149:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000814a:	add    BYTE PTR [rax],al
   14000814c:	add    BYTE PTR [rax],al
   14000814e:	add    BYTE PTR [rax],al
   140008150:	pop    rax
   140008151:	test   eax,0x0
   140008156:	add    BYTE PTR [rax],al
   140008158:	or     al,0xa4
   14000815a:	add    BYTE PTR [rax],al
   14000815c:	add    BYTE PTR [rax],al
   14000815e:	add    BYTE PTR [rax],al
   140008160:	(bad)  
   140008161:	movabs ds:0x0,eax
   14000816a:	add    BYTE PTR [rax],al
   14000816c:	add    BYTE PTR [rax],al
   14000816e:	add    BYTE PTR [rax],al
   140008170:	ins    BYTE PTR es:[rdi],dx
   140008171:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008172:	add    BYTE PTR [rax],al
   140008174:	add    BYTE PTR [rax],al
   140008176:	add    BYTE PTR [rax],al
   140008178:	push   rdx
   140008179:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
	...
   140008186:	add    BYTE PTR [rax],al
   140008188:	pop    rsi
   140008189:	movabs ds:0xa4dc000000000000,eax
	...
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	push   rsp
   1400081a1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400081a2:	add    BYTE PTR [rax],al
   1400081a4:	add    BYTE PTR [rax],al
   1400081a6:	add    BYTE PTR [rax],al
   1400081a8:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   1400081b6:	add    BYTE PTR [rax],al
   1400081b8:	out    dx,al
   1400081b9:	movabs ds:0xa51e000000000000,eax
   1400081c2:	add    BYTE PTR [rax],al
   1400081c4:	add    BYTE PTR [rax],al
   1400081c6:	add    BYTE PTR [rax],al
   1400081c8:	(bad)  
   1400081c9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400081ca:	add    BYTE PTR [rax],al
   1400081cc:	add    BYTE PTR [rax],al
   1400081ce:	add    BYTE PTR [rax],al
   1400081d0:	movs   BYTE PTR es:[rdi],BYTE PTR es:[rsi]
   1400081d2:	add    BYTE PTR [rax],al
   1400081d4:	add    BYTE PTR [rax],al
   1400081d6:	add    BYTE PTR [rax],al
   1400081d8:	xchg   edx,eax
   1400081d9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	mov    WORD PTR [rbp+0x0],fs
   1400081ee:	add    BYTE PTR [rax],al
   1400081f0:	jbe    0x140008197
   1400081f2:	add    BYTE PTR [rax],al
   1400081f4:	add    BYTE PTR [rax],al
   1400081f6:	add    BYTE PTR [rax],al
   1400081f8:	outs   dx,BYTE PTR ds:[rsi]
   1400081f9:	movabs ds:0xa3b4000000000000,eax
   140008202:	add    BYTE PTR [rax],al
   140008204:	add    BYTE PTR [rax],al
   140008206:	add    BYTE PTR [rax],al
   140008208:	mov    esp,0xa4
   14000820d:	add    BYTE PTR [rax],al
   14000820f:	add    BYTE PTR [rsi+0xa3],al
	...
   14000821d:	add    BYTE PTR [rax],al
   14000821f:	add    BYTE PTR [rdx+rbp*4],bh
   140008222:	add    BYTE PTR [rax],al
   140008224:	add    BYTE PTR [rax],al
   140008226:	add    BYTE PTR [rax],al
   140008228:	(bad)  
   140008229:	test   eax,0x0
   14000822e:	add    BYTE PTR [rax],al
   140008230:	in     al,dx
   140008231:	test   eax,0x0
   140008236:	add    BYTE PTR [rax],al
   140008238:	ins    BYTE PTR es:[rdi],dx
   140008239:	test   eax,0x0
	...
   140008246:	add    BYTE PTR [rax],al
   140008248:	lock movabs ds:0xa2fe000000000000,al
   140008252:	add    BYTE PTR [rax],al
   140008254:	add    BYTE PTR [rax],al
   140008256:	add    BYTE PTR [rax],al
   140008258:	adc    al,0xa3
   14000825a:	add    BYTE PTR [rax],al
   14000825c:	add    BYTE PTR [rax],al
   14000825e:	add    BYTE PTR [rax],al
   140008260:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008261:	movabs ds:0xa29a000000000000,al
   14000826a:	add    BYTE PTR [rax],al
   14000826c:	add    BYTE PTR [rax],al
   14000826e:	add    BYTE PTR [rax],al
   140008270:	xchg   BYTE PTR [rdx+0x0],ah
   140008276:	add    BYTE PTR [rax],al
   140008278:	jl     0x14000821c
   14000827a:	add    BYTE PTR [rax],al
   14000827c:	add    BYTE PTR [rax],al
   14000827e:	add    BYTE PTR [rax],al
   140008280:	or     al,0xa9
   140008282:	add    BYTE PTR [rax],al
   140008284:	add    BYTE PTR [rax],al
   140008286:	add    BYTE PTR [rax],al
   140008288:	sbb    al,0xa9
   14000828a:	add    BYTE PTR [rax],al
   14000828c:	add    BYTE PTR [rax],al
   14000828e:	add    BYTE PTR [rax],al
   140008290:	mov    esi,0xa2
   140008295:	add    BYTE PTR [rax],al
   140008297:	add    BYTE PTR [rcx+rbp*4],dh
   14000829a:	add    BYTE PTR [rax],al
   14000829c:	add    BYTE PTR [rax],al
   14000829e:	add    BYTE PTR [rax],al
   1400082a0:	rex test eax,0x0
   1400082a6:	add    BYTE PTR [rax],al
   1400082a8:	sub    ah,BYTE PTR [rbx+0x0]
   1400082ae:	add    BYTE PTR [rax],al
   1400082b0:	sbb    BYTE PTR [rdx+0x0],ah
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	je     0x14000825c
   1400082ba:	add    BYTE PTR [rax],al
   1400082bc:	add    BYTE PTR [rax],al
   1400082be:	add    BYTE PTR [rax],al
   1400082c0:	ins    BYTE PTR es:[rdi],dx
   1400082c1:	movabs ds:0xa25a000000000000,al
   1400082ca:	add    BYTE PTR [rax],al
   1400082cc:	add    BYTE PTR [rax],al
   1400082ce:	add    BYTE PTR [rax],al
   1400082d0:	rex.W movabs ds:0xa2c8000000000000,al
   1400082da:	add    BYTE PTR [rax],al
   1400082dc:	add    BYTE PTR [rax],al
   1400082de:	add    BYTE PTR [rax],al
   1400082e0:	out    0xa2,al
   1400082e2:	add    BYTE PTR [rax],al
   1400082e4:	add    BYTE PTR [rax],al
   1400082e6:	add    BYTE PTR [rax],al
   1400082e8:	cmp    ah,BYTE PTR [rdx+0x0]
   1400082ee:	add    BYTE PTR [rax],al
   1400082f0:	sub    al,0xa2
   1400082f2:	add    BYTE PTR [rax],al
   1400082f4:	add    BYTE PTR [rax],al
   1400082f6:	add    BYTE PTR [rax],al
   1400082f8:	fisub  WORD PTR [rdx+0x0]
   1400082fe:	add    BYTE PTR [rax],al
   140008300:	es test eax,0x0
   140008306:	add    BYTE PTR [rax],al
   140008308:	and    al,0xa2
   14000830a:	add    BYTE PTR [rax],al
   14000830c:	add    BYTE PTR [rax],al
   14000830e:	add    BYTE PTR [rax],al
   140008310:	shl    BYTE PTR [rdx+0x0],cl
   140008316:	add    BYTE PTR [rax],al
   140008318:	mov    esi,0xaa
   14000831d:	add    BYTE PTR [rax],al
   14000831f:	add    ah,dl
   140008321:	stos   BYTE PTR es:[rdi],al
   140008322:	add    BYTE PTR [rax],al
   140008324:	add    BYTE PTR [rax],al
   140008326:	add    BYTE PTR [rax],al
   140008328:	fisubr WORD PTR [rdx+0x0]
	...
   140008336:	add    BYTE PTR [rax],al
   140008338:	lock add BYTE PTR ds:[rax+0x1],al
   14000833d:	add    BYTE PTR [rax],al
   14000833f:	add    BYTE PTR [rax],dh
   140008341:	outs   dx,BYTE PTR ds:[rsi]
   140008342:	add    BYTE PTR [rax+0x1],al
	...
   14000834d:	add    BYTE PTR [rax],al
   14000834f:	add    BYTE PTR [rax+0x1400063],ah
   140008355:	add    BYTE PTR [rax],al
   140008357:	add    BYTE PTR [rax+0x1400011],al
   14000835d:	add    BYTE PTR [rax],al
   14000835f:	add    al,ah
   140008361:	adc    DWORD PTR [rax],eax
   140008363:	rex add DWORD PTR [rax],eax
   140008366:	add    BYTE PTR [rax],al
   140008368:	adc    al,BYTE PTR [rax]
   14000836b:	rex add DWORD PTR [rax],eax
   14000836e:	add    BYTE PTR [rax],al
   140008370:	jo     0x140008384
   140008372:	add    BYTE PTR [rax+0x1],al
   140008375:	add    BYTE PTR [rax],al
   140008377:	add    BYTE PTR [rax+0x1400012],ah
	...
   14000838d:	add    BYTE PTR [rax],al
   14000838f:	add    al,al
   140008391:	(bad)  
   140008392:	add    BYTE PTR [rax+0x1],al
   140008395:	add    BYTE PTR [rax],al
   140008397:	add    BYTE PTR [rax],ah
   140008399:	push   0x14000
	...
   1400083a6:	add    BYTE PTR [rax],al
   1400083a8:	adc    BYTE PTR [rax],dl
   1400083aa:	add    BYTE PTR [rax],al
   1400083ac:	adc    BYTE PTR [rcx],0x0
   1400083af:	add    al,ah
   1400083b1:	adc    DWORD PTR [rax],eax
   1400083b3:	add    BYTE PTR [rax+0x12],al
   1400083b6:	add    BYTE PTR [rax],al
   1400083b8:	jo     0x1400083cc
   1400083ba:	add    BYTE PTR [rax],al
   1400083bc:	movabs al,ds:0x2000001310000012
   1400083c5:	adc    eax,DWORD PTR [rax]
   1400083c7:	add    BYTE PTR [rax],dh
   1400083c9:	adc    eax,DWORD PTR [rax]
   1400083cb:	add    BYTE PTR [rax+0x13],al
   1400083ce:	add    BYTE PTR [rax],al
   1400083d0:	push   rax
   1400083d1:	adc    eax,DWORD PTR [rax]
   1400083d3:	add    BYTE PTR [rax+0x13],ah
   1400083d6:	add    BYTE PTR [rax],al
   1400083d8:	lock adc eax,DWORD PTR [rax]
   1400083db:	add    BYTE PTR [rax+0x10000014],al
   1400083e1:	adc    eax,0x15900000
   1400083e6:	add    BYTE PTR [rax],al
   1400083e8:	loopne 0x1400083ff
   1400083ea:	add    BYTE PTR [rax],al
   1400083ec:	xor    BYTE PTR [rsi],dl
   1400083ee:	add    BYTE PTR [rax],al
   1400083f0:	rcl    BYTE PTR [rsi],1
   1400083f2:	add    BYTE PTR [rax],al
   1400083f4:	and    BYTE PTR [rdx],bl
   1400083f6:	add    BYTE PTR [rax],al
   1400083f8:	rcr    BYTE PTR [rax+rax*1],0x0
   1400083fc:	(bad)  
   1400083fd:	sbb    eax,0x1d800000
   140008402:	add    BYTE PTR [rax],al
   140008404:	add    BYTE PTR [rsi],bl
   140008406:	add    BYTE PTR [rax],al
   140008408:	sbb    BYTE PTR [rdi],0x0
   14000840b:	add    al,al
   14000840d:	(bad)  
   14000840e:	add    BYTE PTR [rax],al
   140008410:	(bad)  
   140008411:	and    BYTE PTR [rax],al
   140008413:	add    al,dl
   140008415:	and    BYTE PTR [rax],al
   140008417:	add    BYTE PTR [rax],al
   140008419:	and    DWORD PTR [rax],eax
   14000841b:	add    BYTE PTR [rax],dh
   14000841d:	and    DWORD PTR [rax],eax
   14000841f:	add    BYTE PTR [rax-0x5fffffdd],al
   140008425:	and    eax,DWORD PTR [rax]
   140008427:	add    al,al
   140008429:	and    eax,DWORD PTR [rax]
   14000842b:	add    BYTE PTR [rax-0x1fffffdc],al
   140008431:	and    al,0x0
   140008433:	add    BYTE PTR [rax],ah
   140008435:	add    BYTE PTR es:[rax],al
   140008438:	rex
   140008439:	add    BYTE PTR es:[rax],al
   14000843c:	push   rax
   14000843d:	add    BYTE PTR es:[rax],al
   140008440:	movabs al,ds:0x6000002730000026
   140008449:	(bad)  
   14000844a:	add    BYTE PTR [rax],al
   14000844c:	shl    BYTE PTR [rdi],0x0
   14000844f:	add    BYTE PTR [rax],al
   140008451:	sub    BYTE PTR [rax],al
   140008453:	add    al,dl
   140008455:	sub    al,BYTE PTR [rax]
   140008457:	add    BYTE PTR [rax+0x2b],dl
   14000845a:	add    BYTE PTR [rax],al
   14000845c:	mov    al,0x2c
   14000845e:	add    BYTE PTR [rax],al
   140008460:	shr    BYTE PTR [rax+rax*1],0x0
   140008464:	shr    BYTE PTR [rax+rax*1],1
   140008467:	add    al,ah
   140008469:	sub    al,0x0
   14000846b:	add    al,dh
   14000846d:	sub    al,0x0
   14000846f:	add    BYTE PTR [rax],al
   140008471:	sub    eax,0x2d100000
   140008476:	add    BYTE PTR [rax],al
   140008478:	sub    BYTE PTR [rip+0x2e500000],0x0        # 0x16e50847f
   14000847f:	add    al,ah
   140008481:	xor    DWORD PTR [rax],eax
   140008483:	add    BYTE PTR [rax],al
   140008485:	xor    al,BYTE PTR [rax]
   140008487:	add    BYTE PTR [rax],dl
   140008489:	xor    eax,DWORD PTR [rax]
   14000848b:	add    BYTE PTR [rax+0x33],ah
   14000848e:	add    BYTE PTR [rax],al
   140008490:	lock add BYTE PTR ds:[rax],al
   140008494:	add    BYTE PTR [rdi],bh
   140008496:	add    BYTE PTR [rax],al
   140008498:	(bad)  
   140008499:	add    BYTE PTR [r8],r8b
   14000849c:	rol    BYTE PTR [rbp+0x0],1
   14000849f:	add    BYTE PTR [rax+0x46],al
   1400084a2:	add    BYTE PTR [rax],al
   1400084a4:	rex
   1400084a5:	rex.RXB add BYTE PTR [r8],r8b
   1400084a8:	rcl    BYTE PTR [rdx+0x0],0x0
   1400084ac:	rex push rbp
   1400084ae:	add    BYTE PTR [rax],al
   1400084b0:	push   rax
   1400084b1:	push   rbp
   1400084b2:	add    BYTE PTR [rax],al
   1400084b4:	jo     0x14000850b
   1400084b6:	add    BYTE PTR [rax],al
   1400084b8:	adc    BYTE PTR [rbp+0x0],0x0
   1400084bc:	lock push rbp
   1400084be:	add    BYTE PTR [rax],al
   1400084c0:	add    BYTE PTR [rsi+0x0],dl
   1400084c3:	add    BYTE PTR [rax],dl
   1400084c5:	push   rsi
   1400084c6:	add    BYTE PTR [rax],al
   1400084c8:	push   rax
   1400084c9:	push   rsi
   1400084ca:	add    BYTE PTR [rax],al
   1400084cc:	lock push rsi
   1400084ce:	add    BYTE PTR [rax],al
   1400084d0:	nop
   1400084d1:	push   rdi
   1400084d2:	add    BYTE PTR [rax],al
   1400084d4:	xor    BYTE PTR [rax+0x0],bl
   1400084d7:	add    BYTE PTR [rax-0x7fffffa8],al
   1400084dd:	pop    rcx
   1400084de:	add    BYTE PTR [rax],al
   1400084e0:	and    BYTE PTR [rdx+0x0],bl
   1400084e3:	add    BYTE PTR [rax+0x5d],dh
   1400084e6:	add    BYTE PTR [rax],al
   1400084e8:	rcr    BYTE PTR [rsi+0x0],1
   1400084eb:	add    BYTE PTR [rax+0x5f],ah
   1400084f1:	(bad)  
   1400084f2:	add    BYTE PTR [rax],al
   1400084f4:	mov    al,0x60
   1400084f6:	add    BYTE PTR [rax],al
   1400084f8:	and    BYTE PTR [rcx+0x0],0x0
   1400084fc:	loopne 0x14000855f
   1400084fe:	add    BYTE PTR [rax],al
   140008500:	adc    BYTE PTR [rdx+0x0],ah
   140008503:	add    BYTE PTR [rax+0x62],ah
   140008506:	add    BYTE PTR [rax],al
   140008508:	jo     0x14000856c
   14000850a:	add    BYTE PTR [rax],al
   14000850c:	and    BYTE PTR [rdx+0x0],0x0
   140008510:	nop
   140008511:	(bad)  
   140008512:	add    BYTE PTR [rax],al
   140008514:	movabs al,ds:0xa0000062c0000062
   14000851d:	movsxd eax,DWORD PTR [rax]
   14000851f:	add    BYTE PTR [rax+0x66],dh
   140008522:	add    BYTE PTR [rax],al
   140008524:	movabs al,ds:0x20000067e0000067
   14000852d:	push   0x6b100000
   140008532:	add    BYTE PTR [rax],al
   140008534:	and    BYTE PTR [rbp+0x0],ch
   140008537:	add    BYTE PTR [rax+0x6f],dl
   14000853a:	add    BYTE PTR [rax],al
   14000853c:	jo     0x1400085ad
   14000853e:	add    BYTE PTR [rax],al
   140008540:	mov    al,0x6f
   140008542:	add    BYTE PTR [rax],al
   140008544:	add    BYTE PTR [rax+0x0],dh
   140008547:	add    BYTE PTR [rax+0x70],ah
   14000854a:	add    BYTE PTR [rax],al
   14000854c:	shl    BYTE PTR [rax+0x0],0x0
   140008550:	and    BYTE PTR [rcx+0x0],dh
	...
   14000855f:	add    BYTE PTR [rdx],ah
   140008561:	add    eax,0x21993
   140008566:	add    BYTE PTR [rax],al
   140008568:	sbb    BYTE PTR [rbx+0x10000],0x0
   14000856f:	add    BYTE PTR [rax+0x600009b],dl
   140008575:	add    BYTE PTR [rax],al
   140008577:	add    BYTE PTR [rax+0x2000009b],bh
   14000857d:	add    BYTE PTR [rax],al
   14000857f:	add    BYTE PTR [rax],al
   140008581:	add    BYTE PTR [rax],al
   140008583:	add    BYTE PTR [rcx],al
   140008585:	add    BYTE PTR [rax],al
   140008587:	add    BYTE PTR [rax],dh
   140008589:	mov    cl,0x0
   14000858b:	rex add DWORD PTR [rax],eax
   14000858e:	add    BYTE PTR [rax],al
   140008590:	shl    BYTE PTR [rcx+0x14000],1
   140008596:	add    BYTE PTR [rax],al
   140008598:	and    BYTE PTR [rbp+0x0],ch
   14000859b:	rex add DWORD PTR [rax],eax
   14000859e:	add    BYTE PTR [rax],al
   1400085a0:	jo     0x1400085a2
   1400085a2:	add    BYTE PTR [r11+0x0],spl
   1400085a6:	je     0x1400085a8
   1400085a8:	imul   eax,DWORD PTR [rax],0x610076
   1400085ae:	je     0x1400085b0
   1400085b0:	imul   eax,DWORD PTR [rax],0x6c0062
   1400085b6:	add    BYTE PTR gs:[rbx+0x0],al
   1400085ba:	ins    BYTE PTR es:[rdi],dx
   1400085bb:	add    BYTE PTR [rcx+0x0],ah
   1400085be:	jae    0x1400085c0
   1400085c0:	jae    0x1400085c2
   1400085c2:	rex.WB add BYTE PTR [r8+rax*1+0x0],spl
   1400085c7:	add    al,ah
   1400085c9:	loop   0x140008551
   1400085cb:	scas   eax,DWORD PTR es:[rdi]
   1400085cc:	sub    eax,0x9c4c6ab1
   1400085d1:	pop    rdx
   1400085d2:	xlat   BYTE PTR ds:[rbx]
   1400085d3:	stos   BYTE PTR es:[rdi],al
   1400085d4:	adc    BYTE PTR gs:[rsi],bl
   1400085d7:	nop
   1400085d8:	movabs al,ds:0xa000000001400067
   1400085e1:	add    BYTE PTR [eax+0x1],al
   1400085e5:	add    BYTE PTR [rax],al
   1400085e7:	add    BYTE PTR [rax+0x1400067],ah
   1400085ed:	add    BYTE PTR [rax],al
   1400085ef:	add    BYTE PTR [rax+0x13],ah
   1400085f2:	add    BYTE PTR [rax+0x1],al
   1400085f5:	add    BYTE PTR [rax],al
   1400085f7:	add    al,dh
   1400085f9:	adc    eax,DWORD PTR [rax]
   1400085fb:	rex add DWORD PTR [rax],eax
   1400085fe:	add    BYTE PTR [rax],al
   140008600:	adc    BYTE PTR [rax+rax*1],0x40
   140008604:	add    DWORD PTR [rax],eax
   140008606:	add    BYTE PTR [rax],al
   140008608:	adc    BYTE PTR [rip+0x14000],dl        # 0x14001c60e
   14000860e:	add    BYTE PTR [rax],al
   140008610:	nop
   140008611:	adc    eax,0x14000
   140008616:	add    BYTE PTR [rax],al
   140008618:	loopne 0x14000862f
   14000861a:	add    BYTE PTR [rax+0x1],al
	...
   140008625:	add    BYTE PTR [rax],al
   140008627:	add    al,al
   140008629:	add    BYTE PTR [rax],al
   14000862b:	add    BYTE PTR [rax],al
   14000862d:	add    BYTE PTR [rax],al
   14000862f:	rex.RX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008631:	imul   DWORD PTR [rdx+rcx*1+0x49df5e1d]
   140008638:	xor    BYTE PTR [rbx+rdi*8],0x6a
   14000863c:	push   0xffffffffe2d15ebc
   140008641:	mov    ds,ebx
   140008643:	rex.WRX fst QWORD PTR [rsi-0x86bb659]
   14000864a:	rex.RX (bad) 
   14000864c:	(bad)  [rbx+0x45ec3c8e]
   140008652:	rex.B jbe 0x140008652
   140008655:	outs   dx,BYTE PTR ds:[rsi]
   140008656:	repnz rex.WB (bad) 
   140008659:	xor    ebx,esp
   14000865b:	jne    0x140008689
   14000865d:	sub    ah,BYTE PTR [rdi+0x1e0051]
   140008663:	rex add DWORD PTR [rax],eax
   140008666:	add    BYTE PTR [rax],al
   140008668:	sbb    BYTE PTR [rdi],0x0
   14000866b:	rex add DWORD PTR [rax],eax
   14000866e:	add    BYTE PTR [rax],al
   140008670:	rcr    BYTE PTR [rdi],0x0
   140008673:	rex add DWORD PTR [rax],eax
   140008676:	add    BYTE PTR [rax],al
   140008678:	(bad)  
   140008679:	and    BYTE PTR [rax],al
   14000867b:	rex add DWORD PTR [rax],eax
   14000867e:	add    BYTE PTR [rax],al
   140008680:	shl    BYTE PTR [rax],1
   140008682:	add    BYTE PTR [rax+0x1],al
   140008685:	add    BYTE PTR [rax],al
   140008687:	add    BYTE PTR [rax],al
   140008689:	and    DWORD PTR [rax],eax
   14000868b:	rex add DWORD PTR [rax],eax
   14000868e:	add    BYTE PTR [rax],al
   140008690:	movabs al,ds:0xd000000001400067
   140008699:	sub    al,BYTE PTR [rax]
   14000869b:	rex add DWORD PTR [rax],eax
   14000869e:	add    BYTE PTR [rax],al
   1400086a0:	(bad)  
   1400086a1:	add    BYTE PTR [rax],al
   1400086a3:	add    BYTE PTR [rax],al
   1400086a5:	add    BYTE PTR [rax],al
   1400086a7:	add    al,al
   1400086a9:	add    BYTE PTR [rax],al
   1400086ab:	add    BYTE PTR [rax],al
   1400086ad:	add    BYTE PTR [rax],al
   1400086af:	rex.RX shr BYTE PTR [rax+r8*1],1
   1400086b3:	rex add DWORD PTR [rax],eax
   1400086b6:	add    BYTE PTR [rax],al
   1400086b8:	shr    BYTE PTR [rax+rax*1],0x40
   1400086bc:	add    DWORD PTR [rax],eax
   1400086be:	add    BYTE PTR [rax],al
   1400086c0:	add    BYTE PTR [rip+0x14000],ch        # 0x14001c6c6
   1400086c6:	add    BYTE PTR [rax],al
   1400086c8:	xor    BYTE PTR [rcx],ah
   1400086ca:	add    BYTE PTR [rax+0x1],al
   1400086cd:	add    BYTE PTR [rax],al
   1400086cf:	add    al,al
   1400086d1:	sbb    al,0x0
   1400086d3:	rex add DWORD PTR [rax],eax
   1400086d6:	add    BYTE PTR [rax],al
   1400086d8:	(bad)  
   1400086d9:	sbb    eax,0x14000
   1400086de:	add    BYTE PTR [rax],al
   1400086e0:	sbb    BYTE PTR [rip+0x14000],0x0        # 0x14001c6e7
   1400086e7:	add    BYTE PTR [rax+0x1400067],ah
   1400086ed:	add    BYTE PTR [rax],al
   1400086ef:	add    BYTE PTR [rax],dh
   1400086f1:	(bad)  
   1400086f2:	add    BYTE PTR [rax+0x1],al
   1400086f5:	add    BYTE PTR [rax],al
   1400086f7:	add    BYTE PTR [rax],bh
   1400086f9:	add    BYTE PTR [rax],al
   1400086fb:	add    BYTE PTR [rax],al
   1400086fd:	add    BYTE PTR [rax],al
   1400086ff:	add    al,al
   140008701:	add    BYTE PTR [rax],al
   140008703:	add    BYTE PTR [rax],al
   140008705:	add    BYTE PTR [rax],al
   140008707:	rex.RX add BYTE PTR [rax],r13b
   14000870a:	add    BYTE PTR [rax+0x1],al
   14000870d:	add    BYTE PTR [rax],al
   14000870f:	add    BYTE PTR [rax+0x1400023],al
   140008715:	add    BYTE PTR [rax],al
   140008717:	add    BYTE PTR [rax+0x1400023],ah
   14000871d:	add    BYTE PTR [rax],al
   14000871f:	add    BYTE PTR [rax],dl
   140008721:	adc    eax,DWORD PTR [rax]
   140008723:	rex add DWORD PTR [rax],eax
   140008726:	add    BYTE PTR [rax],al
   140008728:	and    BYTE PTR [rbx],dl
   14000872a:	add    BYTE PTR [rax+0x1],al
   14000872d:	add    BYTE PTR [rax],al
   14000872f:	add    BYTE PTR [rax],dh
   140008731:	adc    eax,DWORD PTR [rax]
   140008733:	rex add DWORD PTR [rax],eax
   140008736:	add    BYTE PTR [rax],al
   140008738:	rex adc eax,DWORD PTR [rax]
   14000873b:	rex add DWORD PTR [rax],eax
   14000873e:	add    BYTE PTR [rax],al
   140008740:	push   rax
   140008741:	adc    eax,DWORD PTR [rax]
   140008743:	rex add DWORD PTR [rax],eax
   140008746:	add    BYTE PTR [rax],al
   140008748:	add    BYTE PTR [rcx],ah
   14000874a:	add    BYTE PTR [rax+0x1],al
   14000874d:	add    BYTE PTR [rax],al
   14000874f:	add    BYTE PTR [rax],al
   140008751:	and    DWORD PTR [rax],eax
   140008753:	rex add DWORD PTR [rax],eax
   140008756:	add    BYTE PTR [rax],al
   140008758:	add    BYTE PTR [rcx],ah
   14000875a:	add    BYTE PTR [rax+0x1],al
   14000875d:	add    BYTE PTR [rax],al
   14000875f:	add    BYTE PTR [rax],al
   140008761:	and    DWORD PTR [rax],eax
   140008763:	rex add DWORD PTR [rax],eax
   140008766:	add    BYTE PTR [rax],al
   140008768:	(bad)  
   140008769:	(bad)  
   14000876a:	add    BYTE PTR [rax+0x1],al
   14000876d:	add    BYTE PTR [rax],al
   14000876f:	add    BYTE PTR [rax+0x1400023],al
   140008775:	add    BYTE PTR [rax],al
   140008777:	add    BYTE PTR [rax+0x1400023],ah
   14000877d:	add    BYTE PTR [rax],al
   14000877f:	add    BYTE PTR [rax],dl
   140008781:	adc    eax,DWORD PTR [rax]
   140008783:	rex add DWORD PTR [rax],eax
   140008786:	add    BYTE PTR [rax],al
   140008788:	and    BYTE PTR [rbx],dl
   14000878a:	add    BYTE PTR [rax+0x1],al
   14000878d:	add    BYTE PTR [rax],al
   14000878f:	add    BYTE PTR [rax],dh
   140008791:	adc    eax,DWORD PTR [rax]
   140008793:	rex add DWORD PTR [rax],eax
   140008796:	add    BYTE PTR [rax],al
   140008798:	rex adc eax,DWORD PTR [rax]
   14000879b:	rex add DWORD PTR [rax],eax
   14000879e:	add    BYTE PTR [rax],al
   1400087a0:	push   rax
   1400087a1:	adc    eax,DWORD PTR [rax]
   1400087a3:	rex add DWORD PTR [rax],eax
   1400087a6:	add    BYTE PTR [rax],al
   1400087a8:	add    BYTE PTR [rcx],ah
   1400087aa:	add    BYTE PTR [rax+0x1],al
   1400087ad:	add    BYTE PTR [rax],al
   1400087af:	add    BYTE PTR [rax],al
   1400087b1:	and    DWORD PTR [rax],eax
   1400087b3:	rex add DWORD PTR [rax],eax
   1400087b6:	add    BYTE PTR [rax],al
   1400087b8:	add    BYTE PTR [rcx],ah
   1400087ba:	add    BYTE PTR [rax+0x1],al
   1400087bd:	add    BYTE PTR [rax],al
   1400087bf:	add    BYTE PTR [rax],al
   1400087c1:	and    DWORD PTR [rax],eax
   1400087c3:	rex add DWORD PTR [rax],eax
   1400087c6:	add    BYTE PTR [rax],al
   1400087c8:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400087cc:	jb     0x1400087ce
   1400087ce:	je     0x1400087d0
   1400087d0:	(bad)  
   1400087d1:	add    BYTE PTR [rsi+0x0],ch
   1400087d4:	(bad)  
   1400087d5:	add    BYTE PTR [rsi],ch
   1400087d7:	add    BYTE PTR [rax+rax*1+0x73],al
   1400087db:	add    BYTE PTR [rbx+0x0],dh
   1400087de:	add    BYTE PTR cs:[rcx+0x0],cl
   1400087e2:	outs   dx,BYTE PTR ds:[rsi]
   1400087e3:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400087e7:	add    BYTE PTR [rdx+0x0],dh
   1400087ea:	movsxd eax,DWORD PTR [rax]
   1400087ec:	add    BYTE PTR gs:[rax+0x0],dh
   1400087f0:	je     0x1400087f2
   1400087f2:	outs   dx,DWORD PTR ds:[rsi]
   1400087f3:	add    BYTE PTR [rdx+0x0],dh
   1400087f6:	add    BYTE PTR [rax],al
   1400087f8:	shl    BYTE PTR [rdi],0x0
   1400087fb:	rex add DWORD PTR [rax],eax
   1400087fe:	add    BYTE PTR [rax],al
   140008800:	rex
   140008801:	add    BYTE PTR es:[rax+0x1],al
   140008805:	add    BYTE PTR [rax],al
   140008807:	add    BYTE PTR [rax+0x26],dl
   14000880a:	add    BYTE PTR [rax+0x1],al
   14000880d:	add    BYTE PTR [rax],al
   14000880f:	add    BYTE PTR [rax+0x1400026],ah
   140008815:	add    BYTE PTR [rax],al
   140008817:	add    BYTE PTR [rax],ah
   140008819:	adc    eax,DWORD PTR [rax]
   14000881b:	rex add DWORD PTR [rax],eax
   14000881e:	add    BYTE PTR [rax],al
   140008820:	xor    BYTE PTR [rbx],dl
   140008822:	add    BYTE PTR [rax+0x1],al
   140008825:	add    BYTE PTR [rax],al
   140008827:	add    BYTE PTR [rax+0x13],al
   14000882a:	add    BYTE PTR [rax+0x1],al
   14000882d:	add    BYTE PTR [rax],al
   14000882f:	add    BYTE PTR [rax+0x13],dl
   140008832:	add    BYTE PTR [rax+0x1],al
   140008835:	add    BYTE PTR [rax],al
   140008837:	add    al,ah
   140008839:	and    al,0x0
   14000883b:	rex add DWORD PTR [rax],eax
   14000883e:	add    BYTE PTR [rax],al
   140008840:	and    BYTE PTR [rsi],ah
   140008842:	add    BYTE PTR [rax+0x1],al
   140008845:	add    BYTE PTR [rax],al
   140008847:	add    al,al
   140008849:	and    eax,DWORD PTR [rax]
   14000884b:	rex add DWORD PTR [rax],eax
   14000884e:	add    BYTE PTR [rax],al
   140008850:	and    BYTE PTR [rax+rax*1],0x40
   140008854:	add    DWORD PTR [rax],eax
   140008856:	add    BYTE PTR [rax],al
   140008858:	add    BYTE PTR [rsi],bl
   14000885a:	add    BYTE PTR [rax+0x1],al
   14000885d:	add    BYTE PTR [rax],al
   14000885f:	add    BYTE PTR [rax+0x140001f],al
   140008865:	add    BYTE PTR [rax],al
   140008867:	add    al,al
   140008869:	(bad)  
   14000886a:	add    BYTE PTR [rax+0x1],al
   14000886d:	add    BYTE PTR [rax],al
   14000886f:	add    BYTE PTR [rax+0x20],ah
   140008872:	add    BYTE PTR [rax+0x1],al
   140008875:	add    BYTE PTR [rax],al
   140008877:	add    al,dl
   140008879:	and    BYTE PTR [rax],al
   14000887b:	rex add DWORD PTR [rax],eax
   14000887e:	add    BYTE PTR [rax],al
   140008880:	add    BYTE PTR [rcx],ah
   140008882:	add    BYTE PTR [rax+0x1],al
   140008885:	add    BYTE PTR [rax],al
   140008887:	add    BYTE PTR [rax],ah
   140008889:	sbb    al,BYTE PTR [rax]
   14000888b:	rex add DWORD PTR [rax],eax
   14000888e:	add    BYTE PTR [rax],al
   140008890:	shr    BYTE PTR [rdx],1
   140008892:	add    BYTE PTR [rax+0x1],al
   140008895:	add    BYTE PTR [rax],al
   140008897:	add    al,al
   140008899:	sbb    al,0x0
   14000889b:	rex add DWORD PTR [rax],eax
   14000889e:	add    BYTE PTR [rax],al
   1400088a0:	(bad)  
   1400088a1:	sbb    eax,0x14000
   1400088a6:	add    BYTE PTR [rax],al
   1400088a8:	sbb    BYTE PTR [rip+0x14000],0x0        # 0x14001c8af
   1400088af:	add    BYTE PTR [rax],dh
   1400088b1:	(bad)  
   1400088b2:	add    BYTE PTR [rax+0x1],al
   1400088b5:	add    BYTE PTR [rax],al
   1400088b7:	add    al,dl
   1400088b9:	(bad)  
   1400088ba:	add    BYTE PTR [rax+0x1],al
   1400088bd:	add    BYTE PTR [rax],al
   1400088bf:	add    BYTE PTR [rbx],al
   1400088c1:	add    BYTE PTR [rax],al
   1400088c3:	add    BYTE PTR [rax],al
   1400088c5:	add    BYTE PTR [rax],al
   1400088c7:	add    al,al
   1400088c9:	add    BYTE PTR [rax],al
   1400088cb:	add    BYTE PTR [rax],al
   1400088cd:	add    BYTE PTR [rax],al
   1400088cf:	rex.RX xchg esp,eax
   1400088d1:	sub    ebp,edx
   1400088d3:	xchg   esp,eax
   1400088d4:	int3   
   1400088d5:	jmp    0x13fc0d2ba
   1400088da:	out    dx,al
   1400088db:	fs retf 0x5b8f
   1400088df:	nop
   1400088e0:	push   rdi
   1400088e1:	add    BYTE PTR [rcx+0x0],ch
   1400088e4:	outs   dx,BYTE PTR ds:[rsi]
   1400088e5:	add    BYTE PTR [rax+rax*1+0x6f],ah
   1400088e9:	add    BYTE PTR [rdi+0x0],dh
   1400088ec:	jae    0x1400088ee
   1400088ee:	add    BYTE PTR cs:[rcx+0x0],al
   1400088f2:	jo     0x1400088f4
   1400088f4:	jo     0x1400088f6
   1400088f6:	ins    BYTE PTR es:[rdi],dx
   1400088f7:	add    BYTE PTR [rcx+0x0],ch
   1400088fa:	movsxd eax,DWORD PTR [rax]
   1400088fc:	(bad)  
   1400088fd:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008901:	add    BYTE PTR [rdi+0x0],ch
   140008904:	outs   dx,BYTE PTR ds:[rsi]
   140008905:	add    BYTE PTR [rbp+0x0],cl
   140008908:	outs   dx,DWORD PTR ds:[rsi]
   140008909:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000890d:	add    BYTE PTR [rax+rax*1+0x2e],ch
   140008911:	add    BYTE PTR [rbx+0x0],al
   140008914:	outs   dx,DWORD PTR ds:[rsi]
   140008915:	add    BYTE PTR [rdx+0x0],dh
   140008918:	add    BYTE PTR gs:[rsi],ch
   14000891b:	add    BYTE PTR [rbx+0x0],al
   14000891e:	outs   dx,DWORD PTR ds:[rsi]
   14000891f:	add    BYTE PTR [rdx+0x0],dh
   140008922:	add    BYTE PTR gs:[rcx+0x0],al
   140008926:	jo     0x140008928
   140008928:	jo     0x14000892a
   14000892a:	ins    BYTE PTR es:[rdi],dx
   14000892b:	add    BYTE PTR [rcx+0x0],ch
   14000892e:	movsxd eax,DWORD PTR [rax]
   140008930:	(bad)  
   140008931:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008935:	add    BYTE PTR [rdi+0x0],ch
   140008938:	outs   dx,BYTE PTR ds:[rsi]
   140008939:	add    BYTE PTR [rax],al
   14000893b:	add    BYTE PTR [rax],al
   14000893d:	add    BYTE PTR [rax],al
   14000893f:	add    BYTE PTR [rip+0x0],dh        # 0x140008945
   140008945:	add    BYTE PTR [rax],al
   140008947:	add    al,al
   140008949:	add    BYTE PTR [rax],al
   14000894b:	add    BYTE PTR [rax],al
   14000894d:	add    BYTE PTR [rax],al
   14000894f:	rex.RX add BYTE PTR [rax],r8b
   140008952:	add    BYTE PTR [rax],al
   140008954:	add    BYTE PTR [rax],al
   140008956:	add    BYTE PTR [rax],al
   140008958:	lock sub al,0x0
   14000895b:	rex add DWORD PTR [rax],eax
   14000895e:	add    BYTE PTR [rax],al
   140008960:	loopne 0x14000898e
   140008962:	add    BYTE PTR [rax+0x1],al
   140008965:	add    BYTE PTR [rax],al
   140008967:	add    BYTE PTR [rax+0x140002c],dh
   14000896d:	add    BYTE PTR [rax],al
   14000896f:	add    BYTE PTR [rax+0x13],ah
   140008972:	add    BYTE PTR [rax+0x1],al
   140008975:	add    BYTE PTR [rax],al
   140008977:	add    al,dh
   140008979:	adc    eax,DWORD PTR [rax]
   14000897b:	rex add DWORD PTR [rax],eax
   14000897e:	add    BYTE PTR [rax],al
   140008980:	adc    BYTE PTR [rax+rax*1],0x40
   140008984:	add    DWORD PTR [rax],eax
   140008986:	add    BYTE PTR [rax],al
   140008988:	adc    BYTE PTR [rip+0x14000],dl        # 0x14001c98e
   14000898e:	add    BYTE PTR [rax],al
   140008990:	nop
   140008991:	adc    eax,0x14000
   140008996:	add    BYTE PTR [rax],al
   140008998:	loopne 0x1400089af
   14000899a:	add    BYTE PTR [rax+0x1],al
   14000899d:	add    BYTE PTR [rax],al
   14000899f:	add    al,al
   1400089a1:	(bad)  
   1400089a2:	add    BYTE PTR [rax+0x1],al
   1400089a5:	add    BYTE PTR [rax],al
   1400089a7:	add    BYTE PTR [rax+0x1400023],al
   1400089ad:	add    BYTE PTR [rax],al
   1400089af:	add    BYTE PTR [rax+0x1400023],ah
   1400089b5:	add    BYTE PTR [rax],al
   1400089b7:	add    BYTE PTR [rax+0x1400026],ah
   1400089bd:	add    BYTE PTR [rax],al
   1400089bf:	add    BYTE PTR [rax],ah
   1400089c1:	adc    eax,DWORD PTR [rax]
   1400089c3:	rex add DWORD PTR [rax],eax
   1400089c6:	add    BYTE PTR [rax],al
   1400089c8:	xor    BYTE PTR [rbx],dl
   1400089ca:	add    BYTE PTR [rax+0x1],al
   1400089cd:	add    BYTE PTR [rax],al
   1400089cf:	add    BYTE PTR [rax+0x13],al
   1400089d2:	add    BYTE PTR [rax+0x1],al
   1400089d5:	add    BYTE PTR [rax],al
   1400089d7:	add    BYTE PTR [rax+0x13],dl
   1400089da:	add    BYTE PTR [rax+0x1],al
   1400089dd:	add    BYTE PTR [rax],al
   1400089df:	add    BYTE PTR [rax],al
   1400089e1:	and    DWORD PTR [rax],eax
   1400089e3:	rex add DWORD PTR [rax],eax
   1400089e6:	add    BYTE PTR [rax],al
   1400089e8:	add    BYTE PTR [rcx],ah
   1400089ea:	add    BYTE PTR [rax+0x1],al
   1400089ed:	add    BYTE PTR [rax],al
   1400089ef:	add    BYTE PTR [rax],al
   1400089f1:	and    DWORD PTR [rax],eax
   1400089f3:	rex add DWORD PTR [rax],eax
   1400089f6:	add    BYTE PTR [rax],al
   1400089f8:	add    BYTE PTR [rcx],ah
   1400089fa:	add    BYTE PTR [rax+0x1],al
   1400089fd:	add    BYTE PTR [rax],al
   1400089ff:	add    BYTE PTR [rax+0x5d],dh
   140008a02:	add    BYTE PTR [rax+0x1],al
   140008a05:	add    BYTE PTR [rax],al
   140008a07:	add    BYTE PTR [rax+0x55],al
   140008a0a:	add    BYTE PTR [rax+0x1],al
   140008a0d:	add    BYTE PTR [rax],al
   140008a0f:	add    BYTE PTR [rax+0x1400026],ah
   140008a15:	add    BYTE PTR [rax],al
   140008a17:	add    al,cl
   140008a19:	mov    dh,0x0
   140008a1b:	rex add DWORD PTR [rax],eax
	...
   140008a26:	add    BYTE PTR [rax],al
   140008a28:	mov    al,0x60
   140008a2a:	add    BYTE PTR [rax+0x1],al
   140008a2d:	add    BYTE PTR [rax],al
   140008a2f:	add    BYTE PTR [rax+0x140005f],ah
   140008a35:	add    BYTE PTR [rax],al
   140008a37:	add    BYTE PTR [rax],al
   140008a39:	(bad)  
   140008a3a:	add    BYTE PTR [rax+0x1],al
   140008a3d:	add    BYTE PTR [rax],al
   140008a3f:	add    BYTE PTR [rax+0x1400061],al
   140008a45:	add    BYTE PTR [rax],al
   140008a47:	add    al,ah
   140008a49:	(bad)  
   140008a4a:	add    BYTE PTR [rax+0x1],al
   140008a4d:	add    BYTE PTR [rax],al
   140008a4f:	add    BYTE PTR [rax],dl
   140008a51:	(bad)  
   140008a52:	add    BYTE PTR [rax+0x1],al
   140008a55:	add    BYTE PTR [rax],al
   140008a57:	add    al,dl
   140008a59:	pop    rsi
   140008a5a:	add    BYTE PTR [rax+0x1],al
   140008a5d:	add    BYTE PTR [rax],al
   140008a5f:	add    BYTE PTR [rax],dh
   140008a61:	(bad)  
   140008a62:	add    BYTE PTR [rax+0x1],al
   140008a65:	add    BYTE PTR [rax],al
   140008a67:	add    BYTE PTR [rax+0x62],dh
   140008a6a:	add    BYTE PTR [rax+0x1],al
   140008a6d:	add    BYTE PTR [rax],al
   140008a6f:	add    BYTE PTR [rax+0x1400062],al
   140008a75:	add    BYTE PTR [rax],al
   140008a77:	add    BYTE PTR [rax+0x1400062],ah
   140008a7d:	add    BYTE PTR [rax],al
   140008a7f:	add    BYTE PTR [rax],ah
   140008a81:	pop    rdx
   140008a82:	add    BYTE PTR [rax+0x1],al
   140008a85:	add    BYTE PTR [rax],al
   140008a87:	add    BYTE PTR [rax+0x1400058],al
   140008a8d:	add    BYTE PTR [rax],al
   140008a8f:	add    BYTE PTR [rax],dl
   140008a91:	push   rsi
   140008a92:	add    BYTE PTR [rax+0x1],al
   140008a95:	add    BYTE PTR [rax],al
   140008a97:	add    BYTE PTR [rax+0x1400059],al
   140008a9d:	add    BYTE PTR [rax],al
   140008a9f:	add    BYTE PTR [rax+0x1400055],al
   140008aa5:	add    BYTE PTR [rax],al
   140008aa7:	add    al,dl
   140008aa9:	and    BYTE PTR [rax],al
   140008aab:	rex add DWORD PTR [rax],eax
   140008aae:	add    BYTE PTR [rax],al
   140008ab0:	add    BYTE PTR [rcx],ah
   140008ab2:	add    BYTE PTR [rax+0x1],al
   140008ab5:	add    BYTE PTR [rax],al
   140008ab7:	add    BYTE PTR [rax+0x1400067],ah
   140008abd:	add    BYTE PTR [rax],al
   140008abf:	add    BYTE PTR [rax+0x1400067],ah
   140008ac5:	add    BYTE PTR [rax],al
   140008ac7:	add    BYTE PTR [rax+0x1400067],ah
   140008acd:	add    BYTE PTR [rax],al
   140008acf:	add    BYTE PTR [rax],dh
   140008ad1:	pop    rax
   140008ad2:	add    BYTE PTR [rax+0x1],al
   140008ad5:	add    BYTE PTR [rax],al
   140008ad7:	add    BYTE PTR [rax+0x1400060],dh
   140008add:	add    BYTE PTR [rax],al
   140008adf:	add    BYTE PTR [rax+0x140005f],ah
   140008ae5:	add    BYTE PTR [rax],al
   140008ae7:	add    BYTE PTR [rax],al
   140008ae9:	(bad)  
   140008aea:	add    BYTE PTR [rax+0x1],al
   140008aed:	add    BYTE PTR [rax],al
   140008aef:	add    BYTE PTR [rax+0x1400061],al
   140008af5:	add    BYTE PTR [rax],al
   140008af7:	add    al,ah
   140008af9:	(bad)  
   140008afa:	add    BYTE PTR [rax+0x1],al
   140008afd:	add    BYTE PTR [rax],al
   140008aff:	add    BYTE PTR [rax],dl
   140008b01:	(bad)  
   140008b02:	add    BYTE PTR [rax+0x1],al
   140008b05:	add    BYTE PTR [rax],al
   140008b07:	add    al,dl
   140008b09:	and    BYTE PTR [rax],al
   140008b0b:	rex add DWORD PTR [rax],eax
   140008b0e:	add    BYTE PTR [rax],al
   140008b10:	xor    BYTE PTR [rdi],ah
   140008b12:	add    BYTE PTR [rax+0x1],al
   140008b15:	add    BYTE PTR [rax],al
   140008b17:	add    BYTE PTR [rax+0x45],ah
   140008b1a:	add    BYTE PTR [rax+0x1],al
   140008b1d:	add    BYTE PTR [rax],al
   140008b1f:	add    al,dh
   140008b21:	add    BYTE PTR ds:[rax+0x1],al
   140008b25:	add    BYTE PTR [rax],al
   140008b27:	add    BYTE PTR [rax+0x47],al
   140008b2a:	add    BYTE PTR [rax+0x1],al
   140008b2d:	add    BYTE PTR [rax],al
   140008b2f:	add    al,dl
   140008b31:	add    BYTE PTR [r8+0x1],r8b
   140008b35:	add    BYTE PTR [rax],al
   140008b37:	add    BYTE PTR [rax+0x1400062],dl
   140008b3d:	add    BYTE PTR [rax],al
   140008b3f:	add    BYTE PTR [rax+0x1400062],al
   140008b45:	add    BYTE PTR [rax],al
   140008b47:	add    BYTE PTR [rax+0x62],ah
   140008b4a:	add    BYTE PTR [rax+0x1],al
   140008b4d:	add    BYTE PTR [rax],al
   140008b4f:	add    BYTE PTR [rax],ah
   140008b51:	pop    rdx
   140008b52:	add    BYTE PTR [rax+0x1],al
   140008b55:	add    BYTE PTR [rax],al
   140008b57:	add    al,dh
   140008b59:	push   rbp
   140008b5a:	add    BYTE PTR [rax+0x1],al
   140008b5d:	add    BYTE PTR [rax],al
   140008b5f:	add    BYTE PTR [rax],dl
   140008b61:	push   rsi
   140008b62:	add    BYTE PTR [rax+0x1],al
   140008b65:	add    BYTE PTR [rax],al
   140008b67:	add    BYTE PTR [rax],al
   140008b69:	push   rsi
   140008b6a:	add    BYTE PTR [rax+0x1],al
   140008b6d:	add    BYTE PTR [rax],al
   140008b6f:	add    BYTE PTR [rax+0x1400055],al
   140008b75:	add    BYTE PTR [rax],al
   140008b77:	add    BYTE PTR [rax+0x55],dl
   140008b7a:	add    BYTE PTR [rax+0x1],al
   140008b7d:	add    BYTE PTR [rax],al
   140008b7f:	add    BYTE PTR [rax+0x55],dh
   140008b82:	add    BYTE PTR [rax+0x1],al
   140008b85:	add    BYTE PTR [rax],al
   140008b87:	add    BYTE PTR [rax+0x56],dl
   140008b8a:	add    BYTE PTR [rax+0x1],al
   140008b8d:	add    BYTE PTR [rax],al
   140008b8f:	add    BYTE PTR [rax+0x1400057],dl
   140008b95:	add    BYTE PTR [rax],al
   140008b97:	add    al,dh
   140008b99:	push   rsi
   140008b9a:	add    BYTE PTR [rax+0x1],al
   140008b9d:	add    BYTE PTR [rax],al
   140008b9f:	add    BYTE PTR [rax],dh
   140008ba1:	pop    rax
   140008ba2:	add    BYTE PTR [rax+0x1],al
   140008ba5:	add    BYTE PTR [rax],al
   140008ba7:	add    BYTE PTR [rax+0x45],ah
   140008baa:	add    BYTE PTR [rax+0x1],al
   140008bad:	add    BYTE PTR [rax],al
   140008baf:	add    al,dh
   140008bb1:	add    BYTE PTR ds:[rax+0x1],al
   140008bb5:	add    BYTE PTR [rax],al
   140008bb7:	add    BYTE PTR [rax],al
   140008bb9:	(bad)  
   140008bba:	add    BYTE PTR [rax+0x1],al
   140008bbd:	add    BYTE PTR [rax],al
   140008bbf:	add    al,dl
   140008bc1:	add    BYTE PTR [r8+0x1],r8b
	...
   140008bcd:	add    BYTE PTR [rax],al
   140008bcf:	add    BYTE PTR [rbp+0x78],al
   140008bd2:	movsxd esp,DWORD PTR [rbp+0x70]
   140008bd5:	je     0x140008c40
   140008bd7:	outs   dx,DWORD PTR ds:[rsi]
   140008bd8:	outs   dx,BYTE PTR ds:[rsi]
   140008bd9:	add    BYTE PTR [rax],al
   140008bdb:	add    BYTE PTR [rax],al
   140008bdd:	add    BYTE PTR [rax],al
   140008bdf:	add    BYTE PTR [rdx+0x65],dl
   140008be2:	je     0x140008c59
   140008be4:	jb     0x140008c54
   140008be6:	rex.W jb 0x140008be9
   140008be9:	add    BYTE PTR [rax],al
   140008beb:	add    BYTE PTR [rax],al
   140008bed:	add    BYTE PTR [rax],al
   140008bef:	add    BYTE PTR [rdx+0x65],dl
   140008bf2:	je     0x140008c69
   140008bf4:	jb     0x140008c64
   140008bf6:	rex.W jb 0x140008c54
   140008bf9:	push   rax
   140008bfa:	jb     0x140008c61
   140008bfc:	push   rdx
   140008bfd:	gs ins BYTE PTR es:[rdi],dx
   140008bff:	gs (bad) 
   140008c01:	jae    0x140008c68
   140008c03:	pop    rbp
   140008c04:	add    BYTE PTR [rax],al
   140008c06:	add    BYTE PTR [rax],al
   140008c08:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008c0a:	addr32 rex.W jb 0x140008c0e
   140008c0e:	add    BYTE PTR [rax],al
   140008c10:	rex.RX (bad) 
   140008c12:	imul   ebp,DWORD PTR [rsi+rax*2+0x61],0x7473
   140008c1a:	add    BYTE PTR [rax],al
   140008c1c:	add    BYTE PTR [rax],al
   140008c1e:	add    BYTE PTR [rax],al
   140008c20:	and    eax,0x73006800
   140008c25:	add    BYTE PTR [rax],ch
   140008c27:	add    BYTE PTR [rip+0x29006400],ah        # 0x16900f02d
   140008c2d:	add    BYTE PTR [rax+rax*1+0x25],bl
   140008c31:	add    BYTE PTR [rax+0x0],ch
   140008c34:	jae    0x140008c36
   140008c36:	and    DWORD PTR [rax],eax
   140008c38:	and    eax,0x3a007000
   140008c3d:	add    BYTE PTR [rax],ah
	...
   140008c47:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300f44d
   140008c4d:	add    BYTE PTR [rcx],ah
   140008c4f:	add    BYTE PTR [rip+0x3a007000],ah        # 0x17a00fc55
   140008c55:	add    BYTE PTR [rax],ah
	...
   140008c5f:	add    BYTE PTR [rax],ch
   140008c61:	add    BYTE PTR [rbx+0x0],ah
   140008c64:	(bad)  
   140008c65:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140008c69:	add    BYTE PTR [rbp+0x0],ah
   140008c6c:	jb     0x140008c6e
   140008c6e:	cmp    al,BYTE PTR [rax]
   140008c70:	and    BYTE PTR [rax],al
   140008c72:	and    eax,0x29007000
   140008c77:	add    BYTE PTR [rax],ah
   140008c79:	add    BYTE PTR [rax],al
   140008c7b:	add    BYTE PTR [rax],al
   140008c7d:	add    BYTE PTR [rax],al
   140008c7f:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300f485
   140008c85:	add    BYTE PTR [rax],ch
   140008c87:	add    BYTE PTR [rip+0x29006400],ah        # 0x16900f08d
   140008c8d:	add    BYTE PTR [rax],ah
   140008c8f:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008c93:	add    BYTE PTR [rax+rax*1+0x28],ah
   140008c97:	add    BYTE PTR [rip+0x29007800],ah        # 0x16901049d
   140008c9d:	add    BYTE PTR [rax],ah
   140008c9f:	add    BYTE PTR [rip+0x38003000],ah        # 0x17800bca5
   140008ca5:	add    BYTE PTR [rax+0x0],bl
   140008ca8:	and    BYTE PTR [rax],al
   140008caa:	and    eax,0x73007700
	...
   140008cb7:	add    BYTE PTR [rax],ah
   140008cb9:	add    BYTE PTR [rax],ah
   140008cbb:	add    BYTE PTR [rax],ah
   140008cbd:	add    BYTE PTR [rax],ah
	...
   140008cc7:	add    BYTE PTR [rbp+0x0],cl
   140008cca:	jae    0x140008ccc
   140008ccc:	add    BYTE PTR [edx],bh
   140008ccf:	add    BYTE PTR [rbx+0x0],bl
   140008cd2:	and    eax,0x73007700
   140008cd7:	add    BYTE PTR [rbp+0x0],bl
   140008cda:	and    BYTE PTR [rax],al
   140008cdc:	add    BYTE PTR [rax],al
   140008cde:	add    BYTE PTR [rax],al
   140008ce0:	rex.XB add BYTE PTR [r9+0x0],spl
   140008ce4:	ins    BYTE PTR es:[rdi],dx
   140008ce5:	add    BYTE PTR [rax+rax*1+0x43],ch
   140008ce9:	add    BYTE PTR [rdi+0x0],ch
   140008cec:	outs   dx,BYTE PTR ds:[rsi]
   140008ced:	add    BYTE PTR [rax+rax*1+0x65],dh
   140008cf1:	add    BYTE PTR [rax+0x0],bh
   140008cf4:	je     0x140008cf6
   140008cf6:	cmp    al,BYTE PTR [rax]
   140008cf8:	pop    rbx
   140008cf9:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300f4ff
   140008cff:	add    BYTE PTR [rbp+0x0],bl
   140008d02:	and    BYTE PTR [rax],al
   140008d04:	add    BYTE PTR [rax],al
   140008d06:	add    BYTE PTR [rax],al
   140008d08:	pop    rbx
   140008d09:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300f50f
   140008d0f:	add    BYTE PTR [rax],ch
   140008d11:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300f517
   140008d17:	add    BYTE PTR [rcx],ch
   140008d19:	add    BYTE PTR [rbp+0x0],bl
   140008d1c:	or     al,BYTE PTR [rax]
   140008d1e:	add    BYTE PTR [rax],al
   140008d20:	pop    rbx
   140008d21:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300f527
   140008d27:	add    BYTE PTR [rbp+0x0],bl
   140008d2a:	or     al,BYTE PTR [rax]
   140008d2c:	add    BYTE PTR [rax],al
   140008d2e:	add    BYTE PTR [rax],al
   140008d30:	or     al,BYTE PTR [rax]
   140008d32:	add    BYTE PTR [rax],al
   140008d34:	add    BYTE PTR [rax],al
   140008d36:	add    BYTE PTR [rax],al
   140008d38:	outs   dx,BYTE PTR ds:[rsi]
   140008d39:	add    BYTE PTR [rax+rax*1+0x64],dh
   140008d3d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140008d41:	add    BYTE PTR [rsi],ch
   140008d43:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140008d47:	add    BYTE PTR [rax+rax*1+0x0],ch
   140008d4b:	add    BYTE PTR [rax],al
   140008d4d:	add    BYTE PTR [rax],al
   140008d4f:	add    BYTE PTR [rsp+riz*2+0x72],cl
   140008d53:	rex.RX (bad) 
   140008d55:	jae    0x140008dcb
   140008d57:	rex.RX (bad) 
   140008d59:	imul   ebp,DWORD PTR [rcx+rcx*2+0x6e],0x64616f4c
   140008d61:	gs jb  0x140008da7
   140008d64:	(bad)  
   140008d65:	ins    BYTE PTR es:[rdi],dx
   140008d66:	ins    BYTE PTR es:[rdi],dx
   140008d67:	outs   dx,DWORD PTR ds:[rsi]
   140008d68:	jne    0x140008dde
   140008d6a:	add    BYTE PTR [rax],al
   140008d6c:	add    BYTE PTR [rax],al
   140008d6e:	add    BYTE PTR [rax],al
   140008d70:	push   rdx
   140008d71:	je     0x140008ddf
   140008d73:	rex.WRX je 0x140008dc9
   140008d76:	je     0x140008dd9
   140008d78:	je     0x140008def
   140008d7a:	jae    0x140008dd0
   140008d7c:	outs   dx,DWORD PTR ds:[rsi]
   140008d7d:	rex.R outs dx,DWORD PTR ds:[rsi]
   140008d7f:	jae    0x140008dc6
   140008d81:	jb     0x140008df5
   140008d83:	outs   dx,DWORD PTR ds:[rsi]
   140008d84:	jb     0x140008dd4
   140008d86:	outs   dx,DWORD PTR ds:[rsi]
   140008d87:	push   rsp
   140008d88:	gs (bad) 
   140008d8a:	add    BYTE PTR [rax],al
   140008d8c:	add    BYTE PTR [rax],al
   140008d8e:	add    BYTE PTR [rax],al
   140008d90:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   140008d97:	ins    BYTE PTR es:[rdi],dx
   140008d98:	pop    rsp
   140008d99:	jae    0x140008dff
   140008d9b:	imul   ebx,DWORD PTR [rcx+rbp*2+0x6e],0x63
   140008da0:	pop    rsp
   140008da1:	ja     0x140008e0c
   140008da3:	ins    BYTE PTR es:[rdi],dx
   140008da4:	pop    rsp
   140008da5:	jb     0x140008e0c
   140008da7:	jae    0x140008e1e
   140008da9:	ins    BYTE PTR es:[rdi],dx
   140008daa:	je     0x140008dda
   140008dac:	push   0x0
   140008db1:	add    BYTE PTR [rax],al
   140008db3:	add    BYTE PTR [rsi+0x38],al
   140008db6:	lahf   
   140008db7:	push   rbp
   140008db8:	add    BYTE PTR [rax],al
   140008dba:	add    BYTE PTR [rax],al
   140008dbc:	add    al,BYTE PTR [rax]
   140008dbe:	add    BYTE PTR [rax],al
   140008dc0:	sub    eax,0x48000000
   140008dc5:	xchg   esp,eax
   140008dc6:	add    BYTE PTR [rax],al
   140008dc8:	rex.W jp 0x140008dcb
   140008dcb:	add    BYTE PTR [rax],al
   140008dcd:	add    BYTE PTR [rax],al
   140008dcf:	add    BYTE PTR [rsi+0x38],al
   140008dd2:	lahf   
   140008dd3:	push   rbp
   140008dd4:	add    BYTE PTR [rax],al
   140008dd6:	add    BYTE PTR [rax],al
   140008dd8:	or     eax,0x10000000
   140008ddd:	add    eax,DWORD PTR [rax]
   140008ddf:	add    BYTE PTR [rsp+rdx*4+0x7a8c0000],cl
	...
   140008e0e:	add    BYTE PTR [rax],al
   140008e10:	movabs al,ds:0x0
	...
   140008e65:	add    BYTE PTR [rax],al
   140008e67:	add    BYTE PTR [rax],cl
   140008e69:	mov    al,0x0
   140008e6b:	rex add DWORD PTR [rax],eax
	...
   140008e7e:	add    BYTE PTR [rax],al
   140008e80:	cmp    BYTE PTR [rbx+0x14000],al
   140008e86:	add    BYTE PTR [rax],al
   140008e88:	rex add DWORD PTR [rax],0x40
   140008e8c:	add    DWORD PTR [rax],eax
   140008e8e:	add    BYTE PTR [rax],al
   140008e90:	test   al,0x83
   140008e92:	add    BYTE PTR [rax+0x1],al
   140008e95:	add    BYTE PTR [rax],al
   140008e97:	add    BYTE PTR [rbx+0x0],ch
   140008e9a:	add    BYTE PTR [rax],al
   140008e9c:	add    BYTE PTR [rax],al
   140008e9e:	add    BYTE PTR [rax],al
   140008ea0:	add    BYTE PTR [rip+0x0],dh        # 0x140008ea6
	...
   140008eae:	add    BYTE PTR [rax],al
   140008eb0:	rex.RB push r12
   140008eb2:	push   rdi
   140008eb3:	xor    BYTE PTR [rax],dl
   140008eb5:	add    BYTE PTR [rax],al
   140008eb7:	add    DWORD PTR [rsi+0x2b88040e],eax
   140008ebd:	add    eax,0xb03bb8a
   140008ec2:	add    eax,0x0
   140008ec7:	add    BYTE PTR [rax],al
   140008ec9:	and    BYTE PTR [rax],al
   140008ecb:	add    BYTE PTR [rbx],dl
   140008ecd:	add    BYTE PTR [rax],al
   140008ecf:	rex.R jae 0x140008f45
   140008ed2:	push   rbx
   140008ed3:	gs jb  0x140008f4c
   140008ed6:	gs jb  0x140008f38
   140008ed9:	push   rbx
   140008eda:	je     0x140008f3d
   140008edc:	jb     0x140008f52
   140008ede:	add    BYTE PTR [rbx],al
   140008ee0:	or     eax,DWORD PTR [rax+rax*1]
	...
   140008eeb:	sub    eax,0x6e490000
   140008ef0:	outs   dx,WORD PTR ds:[rsi]
   140008ef2:	add    BYTE PTR [rsi+0x69],ah
   140008ef5:	ins    BYTE PTR es:[rdi],dx
   140008ef6:	add    BYTE PTR gs:[rdx],al
   140008ef9:	data16 jne 0x140008f6a
   140008efc:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140008f00:	outs   dx,BYTE PTR ds:[rsi]
   140008f01:	add    BYTE PTR [rdx],al
   140008f03:	ins    BYTE PTR es:[rdi],dx
   140008f04:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   140008f0b:	gs jb  0x140008f0e
   140008f0e:	or     BYTE PTR [rbp+0x65],ch
   140008f11:	jae    0x140008f86
   140008f13:	(bad)  
   140008f14:	add    BYTE PTR gs:[edx],al
   140008f18:	add    ecx,DWORD PTR [rbx]
   140008f1a:	add    eax,DWORD PTR [rax]
	...
   140008f24:	xor    BYTE PTR [rax],al
   140008f26:	add    BYTE PTR [rdi+0x61],dl
   140008f29:	jb     0x140008f99
   140008f2b:	imul   ebp,DWORD PTR [rsi+0x67],0x6c696600
   140008f32:	add    BYTE PTR gs:[rdx],al
   140008f35:	data16 jne 0x140008fa6
   140008f38:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140008f3c:	outs   dx,BYTE PTR ds:[rsi]
   140008f3d:	add    BYTE PTR [rdx],al
   140008f3f:	ins    BYTE PTR es:[rdi],dx
   140008f40:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   140008f47:	gs jb  0x140008f4a
   140008f4a:	or     BYTE PTR [rbp+0x65],ch
   140008f4d:	jae    0x140008fc2
   140008f4f:	(bad)  
   140008f50:	add    BYTE PTR gs:[edx],al
   140008f54:	add    ecx,DWORD PTR [rbx]
   140008f56:	add    eax,0x0
   140008f5b:	add    BYTE PTR [rax],al
   140008f5d:	and    BYTE PTR [rax],al
   140008f5f:	add    BYTE PTR [rax],bl
   140008f61:	add    BYTE PTR [rax],al
   140008f63:	rex.R jae 0x140008fd9
   140008f66:	push   rbx
   140008f67:	gs jb  0x140008fe0
   140008f6a:	gs jb  0x140008fcc
   140008f6d:	push   rbx
   140008f6e:	outs   dx,BYTE PTR gs:[rsi]
   140008f70:	fs push rbx
   140008f72:	imul   esp,DWORD PTR [rdi+0x6e],0x3006c61
   140008f79:	or     eax,DWORD PTR [rip+0x0]        # 0x140008f7f
   140008f7f:	add    BYTE PTR [rax],al
   140008f81:	add    BYTE PTR [rax],al
   140008f83:	add    BYTE PTR [rsi],ch
   140008f85:	add    BYTE PTR [rax],al
   140008f87:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140008f89:	imul   esi,DWORD PTR [rbx+0x79],0x6c696600
   140008f90:	add    BYTE PTR gs:[rdx],al
   140008f93:	data16 jne 0x140009004
   140008f96:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140008f9a:	outs   dx,BYTE PTR ds:[rsi]
   140008f9b:	add    BYTE PTR [rdx],al
   140008f9d:	ins    BYTE PTR es:[rdi],dx
   140008f9e:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   140008fa5:	gs jb  0x140008fa8
   140008fa8:	or     BYTE PTR [rbp+0x65],ch
   140008fab:	jae    0x140009020
   140008fad:	(bad)  
   140008fae:	add    BYTE PTR gs:[edx],al
   140008fb2:	add    ecx,DWORD PTR [rbx]
   140008fb4:	add    eax,0x0
   140008fb9:	add    BYTE PTR [rax],al
   140008fbb:	and    BYTE PTR [rax],al
   140008fbd:	add    bh,dh
   140008fbf:	add    BYTE PTR [rax],al
   140008fc1:	rex.RX (bad) 
   140008fc3:	ins    BYTE PTR es:[rdi],dx
   140008fc4:	ins    BYTE PTR es:[rdi],dx
   140008fc5:	(bad)  
   140008fc7:	movsxd ebp,DWORD PTR [rbx+0x45]
   140008fca:	jb     0x14000903e
   140008fcc:	outs   dx,DWORD PTR ds:[rsi]
   140008fcd:	jb     0x140008fcf
   140008fcf:	ja     0x14000903a
   140008fd1:	ins    BYTE PTR es:[rdi],dx
   140008fd2:	push   rdx
   140008fd3:	gs jae 0x14000904b
   140008fd6:	ins    BYTE PTR es:[rdi],dx
   140008fd7:	je     0x140008fd9
   140008fd9:	cwde   
   140008fda:	(bad)  
   140008fdb:	push   0x75736572
   140008fe0:	ins    BYTE PTR es:[rdi],dx
   140008fe1:	je     0x140008fe3
   140008fe3:	or     BYTE PTR [rsi+0x69],ah
   140008fe6:	ins    BYTE PTR es:[rdi],dx
   140008fe7:	gs rex.WRX (bad) 
   140008fea:	ins    DWORD PTR es:[rdi],dx
   140008feb:	add    BYTE PTR gs:[rdx],al
   140008fee:	ins    BYTE PTR es:[rdi],dx
   140008fef:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   140008ff6:	gs jb  0x140008ff9
   140008ff9:	or     BYTE PTR [rbp+0x6f],ch
   140008ffc:	fs jne 0x14000906b
   140008fff:	add    BYTE PTR gs:[rdx],al
   140009002:	data16 (bad) 
   140009004:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   14000900c:	add    BYTE PTR gs:[rax],cl
   14000900f:	ins    DWORD PTR es:[rdi],dx
   140009010:	gs jae 0x140009086
   140009013:	(bad)  
   140009014:	add    BYTE PTR gs:[ecx],al
   140009018:	je     0x140009082
   14000901a:	jb     0x140009081
   14000901c:	(bad)  
   14000901d:	fs rex.WB
   14000901f:	add    BYTE PTR fs:[rax],cl
   140009022:	movsxd esp,DWORD PTR [rcx+0x6c]
   140009025:	ins    BYTE PTR es:[rdi],dx
   140009026:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009028:	outs   dx,BYTE PTR ds:[rsi]
   140009029:	je     0x140009090
   14000902b:	js     0x1400090a1
   14000902d:	add    BYTE PTR [rdx],al
   14000902f:	outs   dx,DWORD PTR ds:[rsi]
   140009030:	jb     0x14000909b
   140009032:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000903a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000903c:	outs   dx,BYTE PTR ds:[rsi]
   14000903d:	je     0x1400090a4
   14000903f:	js     0x1400090b5
   140009041:	rex.WB
   140009042:	add    BYTE PTR fs:[rax],cl
   140009045:	outs   dx,DWORD PTR ds:[rsi]
   140009046:	jb     0x1400090b1
   140009048:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140009050:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009052:	outs   dx,BYTE PTR ds:[rsi]
   140009053:	je     0x1400090ba
   140009055:	js     0x1400090cb
   140009057:	rex.WRX (bad) 
   140009059:	ins    DWORD PTR es:[rdi],dx
   14000905a:	add    BYTE PTR gs:[rdx],al
   14000905d:	outs   dx,DWORD PTR ds:[rsi]
   14000905e:	jb     0x1400090c9
   140009060:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140009068:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000906a:	outs   dx,BYTE PTR ds:[rsi]
   14000906b:	je     0x1400090d2
   14000906d:	js     0x1400090e3
   14000906f:	rex.WRB
   140009070:	gs jae 0x1400090e6
   140009073:	(bad)  
   140009074:	add    BYTE PTR gs:[ecx],al
   140009078:	movsxd esi,DWORD PTR [rbp+0x72]
   14000907b:	jb     0x1400090e2
   14000907d:	outs   dx,BYTE PTR ds:[rsi]
   14000907e:	je     0x1400090c3
   140009080:	outs   dx,DWORD PTR ds:[rsi]
   140009081:	outs   dx,BYTE PTR ds:[rsi]
   140009082:	je     0x1400090e9
   140009084:	js     0x1400090fa
   140009086:	rex.WB
   140009087:	add    BYTE PTR fs:[rax],cl
   14000908a:	movsxd esi,DWORD PTR [rbp+0x72]
   14000908d:	jb     0x1400090f4
   14000908f:	outs   dx,BYTE PTR ds:[rsi]
   140009090:	je     0x1400090d5
   140009092:	outs   dx,DWORD PTR ds:[rsi]
   140009093:	outs   dx,BYTE PTR ds:[rsi]
   140009094:	je     0x1400090fb
   140009096:	js     0x14000910c
   140009098:	rex.WRX (bad) 
   14000909a:	ins    DWORD PTR es:[rdi],dx
   14000909b:	add    BYTE PTR gs:[rdx],al
   14000909e:	movsxd esi,DWORD PTR [rbp+0x72]
   1400090a1:	jb     0x140009108
   1400090a3:	outs   dx,BYTE PTR ds:[rsi]
   1400090a4:	je     0x1400090e9
   1400090a6:	outs   dx,DWORD PTR ds:[rsi]
   1400090a7:	outs   dx,BYTE PTR ds:[rsi]
   1400090a8:	je     0x14000910f
   1400090aa:	js     0x140009120
   1400090ac:	rex.WRB
   1400090ad:	gs jae 0x140009123
   1400090b0:	(bad)  
   1400090b1:	add    BYTE PTR gs:[ecx],al
   1400090b5:	add    ecx,DWORD PTR [rbx]
   1400090b7:	add    eax,0x0
   1400090bc:	add    BYTE PTR [rax],al
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	add    BYTE PTR [rdx],bl
   1400090c2:	add    DWORD PTR [rax],eax
   1400090c4:	rex.RX (bad) 
   1400090c6:	ins    BYTE PTR es:[rdi],dx
   1400090c7:	ins    BYTE PTR es:[rdi],dx
   1400090c8:	(bad)  
   1400090ca:	movsxd ebp,DWORD PTR [rbx+0x45]
   1400090cd:	jb     0x140009141
   1400090cf:	outs   dx,DWORD PTR ds:[rsi]
   1400090d0:	jb     0x1400090d2
   1400090d2:	ja     0x14000913d
   1400090d4:	ins    BYTE PTR es:[rdi],dx
   1400090d5:	push   rdx
   1400090d6:	gs jae 0x14000914e
   1400090d9:	ins    BYTE PTR es:[rdi],dx
   1400090da:	je     0x1400090dc
   1400090dc:	cwde   
   1400090dd:	adc    DWORD PTR [rax+0x72],ebp
   1400090e0:	gs jae 0x140009158
   1400090e3:	ins    BYTE PTR es:[rdi],dx
   1400090e4:	je     0x1400090e6
   1400090e6:	or     BYTE PTR [rsi+0x69],ah
   1400090e9:	ins    BYTE PTR es:[rdi],dx
   1400090ea:	gs rex.WRX (bad) 
   1400090ed:	ins    DWORD PTR es:[rdi],dx
   1400090ee:	add    BYTE PTR gs:[rdx],al
   1400090f1:	ins    BYTE PTR es:[rdi],dx
   1400090f2:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   1400090f9:	gs jb  0x1400090fc
   1400090fc:	or     BYTE PTR [rbp+0x6f],ch
   1400090ff:	fs jne 0x14000916e
   140009102:	add    BYTE PTR gs:[rdx],al
   140009105:	data16 (bad) 
   140009107:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   14000910f:	add    BYTE PTR gs:[rax],cl
   140009112:	ins    DWORD PTR es:[rdi],dx
   140009113:	gs jae 0x140009189
   140009116:	(bad)  
   140009117:	add    BYTE PTR gs:[ecx],al
   14000911b:	je     0x140009185
   14000911d:	jb     0x140009184
   14000911f:	(bad)  
   140009120:	fs rex.WB
   140009122:	add    BYTE PTR fs:[rax],cl
   140009125:	movsxd esp,DWORD PTR [rcx+0x6c]
   140009128:	ins    BYTE PTR es:[rdi],dx
   140009129:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000912b:	outs   dx,BYTE PTR ds:[rsi]
   14000912c:	je     0x140009193
   14000912e:	js     0x1400091a4
   140009130:	add    BYTE PTR [rdx],al
   140009132:	outs   dx,DWORD PTR ds:[rsi]
   140009133:	jb     0x14000919e
   140009135:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000913d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000913f:	outs   dx,BYTE PTR ds:[rsi]
   140009140:	je     0x1400091a7
   140009142:	js     0x1400091b8
   140009144:	rex.WB
   140009145:	add    BYTE PTR fs:[rax],cl
   140009148:	outs   dx,DWORD PTR ds:[rsi]
   140009149:	jb     0x1400091b4
   14000914b:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140009153:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009155:	outs   dx,BYTE PTR ds:[rsi]
   140009156:	je     0x1400091bd
   140009158:	js     0x1400091ce
   14000915a:	rex.WRX (bad) 
   14000915c:	ins    DWORD PTR es:[rdi],dx
   14000915d:	add    BYTE PTR gs:[rdx],al
   140009160:	outs   dx,DWORD PTR ds:[rsi]
   140009161:	jb     0x1400091cc
   140009163:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000916b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000916d:	outs   dx,BYTE PTR ds:[rsi]
   14000916e:	je     0x1400091d5
   140009170:	js     0x1400091e6
   140009172:	rex.WRB
   140009173:	gs jae 0x1400091e9
   140009176:	(bad)  
   140009177:	add    BYTE PTR gs:[ecx],al
   14000917b:	movsxd esi,DWORD PTR [rbp+0x72]
   14000917e:	jb     0x1400091e5
   140009180:	outs   dx,BYTE PTR ds:[rsi]
   140009181:	je     0x1400091c6
   140009183:	outs   dx,DWORD PTR ds:[rsi]
   140009184:	outs   dx,BYTE PTR ds:[rsi]
   140009185:	je     0x1400091ec
   140009187:	js     0x1400091fd
   140009189:	rex.WB
   14000918a:	add    BYTE PTR fs:[rax],cl
   14000918d:	movsxd esi,DWORD PTR [rbp+0x72]
   140009190:	jb     0x1400091f7
   140009192:	outs   dx,BYTE PTR ds:[rsi]
   140009193:	je     0x1400091d8
   140009195:	outs   dx,DWORD PTR ds:[rsi]
   140009196:	outs   dx,BYTE PTR ds:[rsi]
   140009197:	je     0x1400091fe
   140009199:	js     0x14000920f
   14000919b:	rex.WRX (bad) 
   14000919d:	ins    DWORD PTR es:[rdi],dx
   14000919e:	add    BYTE PTR gs:[rdx],al
   1400091a1:	movsxd esi,DWORD PTR [rbp+0x72]
   1400091a4:	jb     0x14000920b
   1400091a6:	outs   dx,BYTE PTR ds:[rsi]
   1400091a7:	je     0x1400091ec
   1400091a9:	outs   dx,DWORD PTR ds:[rsi]
   1400091aa:	outs   dx,BYTE PTR ds:[rsi]
   1400091ab:	je     0x140009212
   1400091ad:	js     0x140009223
   1400091af:	rex.WRB
   1400091b0:	gs jae 0x140009226
   1400091b3:	(bad)  
   1400091b4:	add    BYTE PTR gs:[ecx],al
   1400091b8:	data16 (bad) 
   1400091ba:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x644965
   1400091c2:	or     BYTE PTR [rsi+0x61],ah
   1400091c5:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x756f4365
   1400091cd:	outs   dx,BYTE PTR ds:[rsi]
   1400091ce:	je     0x1400091d0
   1400091d0:	or     BYTE PTR [rsi+0x75],ah
   1400091d3:	outs   dx,BYTE PTR ds:[rsi]
   1400091d4:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400091d8:	outs   dx,BYTE PTR ds:[rsi]
   1400091d9:	add    BYTE PTR [rdx],al
   1400091db:	add    ecx,DWORD PTR [rbx]
   1400091dd:	add    eax,0x0
   1400091e2:	add    BYTE PTR [rax],al
   1400091e4:	and    BYTE PTR [rax],al
   1400091e6:	add    BYTE PTR [rcx],bl
   1400091e8:	add    BYTE PTR [rax],al
   1400091ea:	rex.R jae 0x140009260
   1400091ed:	push   rbx
   1400091ee:	gs jb  0x140009267
   1400091f1:	gs jb  0x140009253
   1400091f4:	push   rbx
   1400091f5:	outs   dx,BYTE PTR gs:[rsi]
   1400091f7:	fs rex.WRB
   1400091f9:	gs jae 0x14000926f
   1400091fc:	(bad)  
   1400091fd:	add    BYTE PTR gs:[ebx],al
   140009201:	or     eax,DWORD PTR [rip+0x0]        # 0x140009207
   140009207:	add    BYTE PTR [rax],al
   140009209:	add    BYTE PTR [rax],al
   14000920b:	add    BYTE PTR [rip+0x65500000],ch        # 0x1a5509211
   140009211:	jb     0x140009279
   140009213:	add    BYTE PTR [rsi+0x69],ah
   140009216:	ins    BYTE PTR es:[rdi],dx
   140009217:	add    BYTE PTR gs:[rdx],al
   14000921a:	data16 jne 0x14000928b
   14000921d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140009221:	outs   dx,BYTE PTR ds:[rsi]
   140009222:	add    BYTE PTR [rdx],al
   140009224:	ins    BYTE PTR es:[rdi],dx
   140009225:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   14000922c:	gs jb  0x14000922f
   14000922f:	or     BYTE PTR [rbp+0x65],ch
   140009232:	jae    0x1400092a7
   140009234:	(bad)  
   140009235:	add    BYTE PTR gs:[edx],al
   140009239:	add    ecx,DWORD PTR [rbx]
   14000923b:	add    al,BYTE PTR [rax]
   14000923d:	add    BYTE PTR [rax],al
   14000923f:	add    BYTE PTR [rax],al
   140009241:	add    BYTE PTR [rax],ah
   140009243:	add    BYTE PTR [rax],al
   140009245:	test   DWORD PTR [rax],0x6c614600
   14000924b:	ins    BYTE PTR es:[rdi],dx
   14000924c:	(bad)  
   14000924e:	movsxd ebp,DWORD PTR [rbx+0x45]
   140009251:	jb     0x1400092c5
   140009253:	outs   dx,DWORD PTR ds:[rsi]
   140009254:	jb     0x140009256
   140009256:	ja     0x1400092c1
   140009258:	ins    BYTE PTR es:[rdi],dx
   140009259:	push   rdx
   14000925a:	gs jae 0x1400092d2
   14000925d:	ins    BYTE PTR es:[rdi],dx
   14000925e:	je     0x140009260
   140009260:	cwde   
   140009261:	(bad)  
   140009262:	push   0x75736572
   140009267:	ins    BYTE PTR es:[rdi],dx
   140009268:	je     0x14000926a
   14000926a:	or     BYTE PTR [rsi+0x69],ah
   14000926d:	ins    BYTE PTR es:[rdi],dx
   14000926e:	gs rex.WRX (bad) 
   140009271:	ins    DWORD PTR es:[rdi],dx
   140009272:	add    BYTE PTR gs:[rdx],al
   140009275:	ins    BYTE PTR es:[rdi],dx
   140009276:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   14000927d:	gs jb  0x140009280
   140009280:	or     BYTE PTR [rbp+0x6f],ch
   140009283:	fs jne 0x1400092f2
   140009286:	add    BYTE PTR gs:[rdx],al
   140009289:	data16 (bad) 
   14000928b:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   140009293:	add    BYTE PTR gs:[rax],cl
   140009296:	ins    DWORD PTR es:[rdi],dx
   140009297:	gs jae 0x14000930d
   14000929a:	(bad)  
   14000929b:	add    BYTE PTR gs:[ecx],al
   14000929f:	je     0x140009309
   1400092a1:	jb     0x140009308
   1400092a3:	(bad)  
   1400092a4:	fs rex.WB
   1400092a6:	add    BYTE PTR fs:[rax],cl
   1400092a9:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400092ac:	ins    BYTE PTR es:[rdi],dx
   1400092ad:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400092af:	outs   dx,BYTE PTR ds:[rsi]
   1400092b0:	je     0x140009317
   1400092b2:	js     0x140009328
   1400092b4:	add    BYTE PTR [rdx],al
   1400092b6:	outs   dx,DWORD PTR ds:[rsi]
   1400092b7:	jb     0x140009322
   1400092b9:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   1400092c1:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400092c3:	outs   dx,BYTE PTR ds:[rsi]
   1400092c4:	je     0x14000932b
   1400092c6:	js     0x14000933c
   1400092c8:	rex.WB
   1400092c9:	add    BYTE PTR fs:[rax],cl
   1400092cc:	outs   dx,DWORD PTR ds:[rsi]
   1400092cd:	jb     0x140009338
   1400092cf:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   1400092d7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400092d9:	outs   dx,BYTE PTR ds:[rsi]
   1400092da:	je     0x140009341
   1400092dc:	js     0x140009352
   1400092de:	rex.WRX (bad) 
   1400092e0:	ins    DWORD PTR es:[rdi],dx
   1400092e1:	add    BYTE PTR gs:[rdx],al
   1400092e4:	outs   dx,DWORD PTR ds:[rsi]
   1400092e5:	jb     0x140009350
   1400092e7:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   1400092ef:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400092f1:	outs   dx,BYTE PTR ds:[rsi]
   1400092f2:	je     0x140009359
   1400092f4:	js     0x14000936a
   1400092f6:	rex.WRB
   1400092f7:	gs jae 0x14000936d
   1400092fa:	(bad)  
   1400092fb:	add    BYTE PTR gs:[ecx],al
   1400092ff:	movsxd esi,DWORD PTR [rbp+0x72]
   140009302:	jb     0x140009369
   140009304:	outs   dx,BYTE PTR ds:[rsi]
   140009305:	je     0x14000934a
   140009307:	outs   dx,DWORD PTR ds:[rsi]
   140009308:	outs   dx,BYTE PTR ds:[rsi]
   140009309:	je     0x140009370
   14000930b:	js     0x140009381
   14000930d:	rex.WB
   14000930e:	add    BYTE PTR fs:[rax],cl
   140009311:	movsxd esi,DWORD PTR [rbp+0x72]
   140009314:	jb     0x14000937b
   140009316:	outs   dx,BYTE PTR ds:[rsi]
   140009317:	je     0x14000935c
   140009319:	outs   dx,DWORD PTR ds:[rsi]
   14000931a:	outs   dx,BYTE PTR ds:[rsi]
   14000931b:	je     0x140009382
   14000931d:	js     0x140009393
   14000931f:	rex.WRX (bad) 
   140009321:	ins    DWORD PTR es:[rdi],dx
   140009322:	add    BYTE PTR gs:[rdx],al
   140009325:	movsxd esi,DWORD PTR [rbp+0x72]
   140009328:	jb     0x14000938f
   14000932a:	outs   dx,BYTE PTR ds:[rsi]
   14000932b:	je     0x140009370
   14000932d:	outs   dx,DWORD PTR ds:[rsi]
   14000932e:	outs   dx,BYTE PTR ds:[rsi]
   14000932f:	je     0x140009396
   140009331:	js     0x1400093a7
   140009333:	rex.WRB
   140009334:	gs jae 0x1400093aa
   140009337:	(bad)  
   140009338:	add    BYTE PTR gs:[ecx],al
   14000933c:	add    ecx,DWORD PTR [rbx]
   14000933e:	add    al,BYTE PTR [rax]
	...
   140009348:	add    BYTE PTR cs:[rax],al
   14000934b:	rex.RB jb 0x1400093c0
   14000934e:	outs   dx,DWORD PTR ds:[rsi]
   14000934f:	jb     0x140009351
   140009351:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6602
   140009358:	jne    0x1400093c8
   14000935a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000935e:	outs   dx,BYTE PTR ds:[rsi]
   14000935f:	add    BYTE PTR [rdx],al
   140009361:	ins    BYTE PTR es:[rdi],dx
   140009362:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   140009369:	gs jb  0x14000936c
   14000936c:	or     BYTE PTR [rbp+0x65],ch
   14000936f:	jae    0x1400093e4
   140009371:	(bad)  
   140009372:	add    BYTE PTR gs:[edx],al
   140009376:	add    ecx,DWORD PTR [rbx]
   140009378:	add    eax,0x0
   14000937d:	add    BYTE PTR [rax],al
   14000937f:	add    BYTE PTR [rax],al
   140009381:	add    BYTE PTR [rcx],dh
   140009383:	add    BYTE PTR [rax],al
   140009385:	rex.R (bad) 
   140009387:	je     0x1400093ea
   140009389:	rex.R jne 0x1400093f9
   14000938c:	jo     0x14000938e
   14000938e:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6602
   140009395:	jne    0x140009405
   140009397:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000939b:	outs   dx,BYTE PTR ds:[rsi]
   14000939c:	add    BYTE PTR [rdx],al
   14000939e:	ins    BYTE PTR es:[rdi],dx
   14000939f:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   1400093a6:	gs jb  0x1400093a9
   1400093a9:	or     BYTE PTR [rbp+0x65],ch
   1400093ac:	jae    0x140009421
   1400093ae:	(bad)  
   1400093af:	add    BYTE PTR gs:[edx],al
   1400093b3:	add    al,0x2d
   1400093b5:	(bad)  
   1400093b6:	mov    esp,0xb7f7ae88
   1400093bb:	rex.RB mov r13b,0x78
   1400093be:	rex.WXB
   1400093bf:	repnz mov eax,0x3a7b86ab
   1400093c5:	add    BYTE PTR [rbp+0x69],cl
   1400093c8:	movsxd esi,DWORD PTR [rdx+0x6f]
   1400093cb:	jae    0x14000943c
   1400093cd:	data16 je 0x1400093fd
   1400093d0:	push   rdi
   1400093d1:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   1400093d8:	push   rbx
   1400093d9:	push   0x2d6c6c65
   1400093de:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400093e0:	jb     0x140009456
   1400093e2:	(bad)  
   1400093e3:	outs   dx,BYTE PTR ds:[rsi]
   1400093e4:	(bad)  
   1400093e5:	push   rsp
   1400093e6:	jb     0x140009449
   1400093e8:	movsxd esp,DWORD PTR [rbp+0x0]
   1400093eb:	adc    eax,DWORD PTR [rax]
   1400093ed:	add    DWORD PTR [rdx],ebx
   1400093ef:	jae    0x140009441
   1400093f1:	rex.WRXB iretq 
   1400093f3:	mov    DWORD PTR [rdx-0x231f4cb9],eax
   1400093f9:	call   0xfa7698c7
   1400093fe:	add    al,0x73
   140009400:	ja     0x1400093e5
   140009402:	movaps XMMWORD PTR [rbx+rsi*1+0x52],xmm5
   140009407:	or     eax,0x74e950d0
   14000940c:	repnz rex.X add edi,DWORD PTR [rax]
   140009410:	add    BYTE PTR [rbp+0x69],cl
   140009413:	movsxd esi,DWORD PTR [rdx+0x6f]
   140009416:	jae    0x140009487
   140009418:	data16 je 0x140009448
   14000941b:	push   rdi
   14000941c:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   140009423:	push   rbx
   140009424:	push   0x2d6c6c65
   140009429:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000942b:	jb     0x1400094a1
   14000942d:	(bad)  
   14000942e:	outs   dx,BYTE PTR ds:[rsi]
   14000942f:	(bad)  
   140009430:	rex.R jae 0x1400094a6
   140009433:	add    BYTE PTR [rbx],dl
   140009435:	add    BYTE PTR [rcx],al
   140009437:	sbb    dh,BYTE PTR [rbx+0x50]
   14000943a:	rex.WRXB iretq 
   14000943c:	mov    DWORD PTR [rdx-0x231f4cb9],eax
   140009442:	call   0xfa769910
   140009447:	add    DWORD PTR [rdx+0x53],edx
   14000944a:	rex.R push rbx
   14000944c:	mov    eax,0xb2cc2796
   140009451:	rex.WRXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140009453:	rex.B movabs ds:0x1e42ac88edaf7e1,al
   14000945d:	add    BYTE PTR [rax],al
   14000945f:	add    BYTE PTR [rbx+0x6f],al
   140009462:	jb     0x1400094d8
   140009464:	(bad)  
   140009465:	outs   dx,BYTE PTR ds:[rsi]
   140009466:	(bad)  
   140009467:	rex.R jae 0x1400094dd
   14000946a:	push   rbx
   14000946b:	gs jb  0x1400094e4
   14000946e:	gs jb  0x14000949f
   140009471:	jo     0x1400094d7
   140009473:	(bad)  
	...
   14000948c:	rex.RXB
   14000948d:	rex.XB push r12
   14000948f:	rex.WR add BYTE PTR [rax],r10b
   140009492:	add    BYTE PTR [rax],al
   140009494:	jns    0x140009497
   140009496:	add    BYTE PTR [rax],al
   140009498:	cs je  0x140009500
   14000949b:	js     0x140009511
   14000949d:	add    BYTE PTR [rax],al
   14000949f:	add    BYTE PTR [rcx+rdx*1+0x0],bh
   1400094a3:	add    BYTE PTR [rsi+0x1],ch
   1400094a6:	add    BYTE PTR [rax],al
   1400094a8:	cs je  0x140009510
   1400094ab:	js     0x140009521
   1400094ad:	and    al,0x64
   1400094af:	imul   eax,DWORD PTR [rax],0xf0000000
   1400094b5:	adc    al,BYTE PTR [rax]
   1400094b7:	add    BYTE PTR [rax],ch
   1400094b9:	pop    rbx
   1400094ba:	add    BYTE PTR [rax],al
   1400094bc:	cs je  0x140009524
   1400094bf:	js     0x140009535
   1400094c1:	and    al,0x6d
   1400094c3:	outs   dx,BYTE PTR ds:[rsi]
   1400094c4:	add    BYTE PTR [rax],al
   1400094c6:	add    BYTE PTR [rax],al
   1400094c8:	and    BYTE PTR [rsi+0x0],ch
   1400094cb:	add    BYTE PTR [rbp+0x0],bh
   1400094ce:	add    BYTE PTR [rax],al
   1400094d0:	cs je  0x140009538
   1400094d3:	js     0x140009549
   1400094d5:	and    al,0x6d
   1400094d7:	outs   dx,BYTE PTR ds:[rsi]
   1400094d8:	and    al,0x30
   1400094da:	xor    BYTE PTR [rax],al
   1400094dc:	movabs al,ds:0x2e000000a000006e
   1400094e5:	je     0x14000954c
   1400094e7:	js     0x14000955d
   1400094e9:	and    al,0x78
   1400094eb:	add    BYTE PTR [rax+0x6f],al
   1400094ee:	add    BYTE PTR [rax],al
   1400094f0:	xor    eax,0x2e000002
   1400094f5:	je     0x14000955c
   1400094f7:	js     0x14000956d
   1400094f9:	and    al,0x79
   1400094fb:	add    BYTE PTR fs:[rax],al
   1400094fe:	add    BYTE PTR [rax],al
   140009500:	add    BYTE PTR [rax+0x3380000],al
   140009506:	add    BYTE PTR [rax],al
   140009508:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140009511:	add    BYTE PTR [rax],al
   140009513:	add    BYTE PTR [rax],bh
   140009515:	add    DWORD PTR [rax],0x0
   140009518:	adc    BYTE PTR [rax],al
   14000951a:	add    BYTE PTR [rax],al
   14000951c:	xor    BYTE PTR cs:[rax],dh
   14000951f:	movsxd esp,DWORD PTR [rsi+0x67]
   140009522:	add    BYTE PTR [rax],al
   140009524:	add    QWORD PTR [rax],0x0
   140009528:	or     BYTE PTR [rax],al
   14000952a:	add    BYTE PTR [rax],al
   14000952c:	cs rex.XB push r10
   14000952f:	push   rsp
   140009530:	and    al,0x58
   140009532:	rex.XB
   140009533:	add    BYTE PTR [r8],al
   140009536:	add    BYTE PTR [rax],al
   140009538:	push   rax
   140009539:	add    DWORD PTR [rax],0x0
   14000953c:	or     BYTE PTR [rax],al
   14000953e:	add    BYTE PTR [rax],al
   140009540:	cs rex.XB push r10
   140009543:	push   rsp
   140009544:	and    al,0x58
   140009546:	rex.XB
   140009547:	rex.B
   140009548:	add    BYTE PTR [r8],al
   14000954b:	add    BYTE PTR [rax-0x7d],bl
   14000954e:	add    BYTE PTR [rax],al
   140009550:	sub    BYTE PTR [rax],al
   140009552:	add    BYTE PTR [rax],al
   140009554:	cs rex.XB push r10
   140009557:	push   rsp
   140009558:	and    al,0x58
   14000955a:	rex.XB push r13
   14000955c:	add    BYTE PTR [rax],al
   14000955e:	add    BYTE PTR [rax],al
   140009560:	add    BYTE PTR [rbx+0x80000],0x0
   140009567:	add    BYTE PTR [rsi],ch
   140009569:	rex.XB push r10
   14000956b:	push   rsp
   14000956c:	and    al,0x58
   14000956e:	rex.XB pop r10
   140009570:	add    BYTE PTR [rax],al
   140009572:	add    BYTE PTR [rax],al
   140009574:	mov    BYTE PTR [rbx+0x80000],al
   14000957a:	add    BYTE PTR [rax],al
   14000957c:	cs rex.XB push r10
   14000957f:	push   rsp
   140009580:	and    al,0x58
   140009582:	rex.WB
   140009583:	add    BYTE PTR [r8],al
   140009586:	add    BYTE PTR [rax],al
   140009588:	nop
   140009589:	add    DWORD PTR [rax],0x0
   14000958c:	or     BYTE PTR [rax],al
   14000958e:	add    BYTE PTR [rax],al
   140009590:	cs rex.XB push r10
   140009593:	push   rsp
   140009594:	and    al,0x58
   140009596:	rex.WB
   140009597:	rex.B
   140009598:	add    BYTE PTR [r8],al
   14000959b:	add    BYTE PTR [rax+0x8000083],bl
   1400095a1:	add    BYTE PTR [rax],al
   1400095a3:	add    BYTE PTR [rsi],ch
   1400095a5:	rex.XB push r10
   1400095a7:	push   rsp
   1400095a8:	and    al,0x58
   1400095aa:	rex.WB pop r9
   1400095ac:	add    BYTE PTR [rax],al
   1400095ae:	add    BYTE PTR [rax],al
   1400095b0:	movabs al,ds:0x2e00000008000083
   1400095b9:	rex.XB push r10
   1400095bb:	push   rsp
   1400095bc:	and    al,0x58
   1400095be:	rex.WB pop r10
   1400095c0:	add    BYTE PTR [rax],al
   1400095c2:	add    BYTE PTR [rax],al
   1400095c4:	test   al,0x83
   1400095c6:	add    BYTE PTR [rax],al
   1400095c8:	lods   al,BYTE PTR ds:[rsi]
   1400095c9:	add    DWORD PTR [rax],eax
   1400095cb:	add    BYTE PTR [rsi],ch
   1400095cd:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   1400095d5:	add    BYTE PTR [rax],al
   1400095d7:	add    BYTE PTR [rax-0x7b],ah
   1400095da:	add    BYTE PTR [rax],al
   1400095dc:	push   rax
   1400095dd:	or     DWORD PTR [rax],eax
   1400095df:	add    BYTE PTR [rsi],ch
   1400095e1:	jb     0x140009647
   1400095e3:	(bad)  
   1400095e4:	je     0x140009647
   1400095e6:	add    BYTE PTR [rax],al
   1400095e8:	mov    al,0x8e
   1400095ea:	add    BYTE PTR [rax],al
   1400095ec:	adc    BYTE PTR [rax],al
   1400095ee:	add    BYTE PTR [rax],al
   1400095f0:	cs jb  0x140009657
   1400095f3:	(bad)  
   1400095f4:	je     0x140009657
   1400095f6:	and    al,0x7a
   1400095f8:	rex.RB push r12
   1400095fa:	push   rdi
   1400095fb:	xor    BYTE PTR [rax],al
   1400095fd:	add    BYTE PTR [rax],al
   1400095ff:	add    al,al
   140009601:	mov    es,WORD PTR [rax]
   140009603:	add    bl,dh
   140009605:	add    al,0x0
   140009607:	add    BYTE PTR [rsi],ch
   140009609:	jb     0x14000966f
   14000960b:	(bad)  
   14000960c:	je     0x14000966f
   14000960e:	and    al,0x7a
   140009610:	rex.RB push r12
   140009612:	push   rdi
   140009613:	xor    DWORD PTR [rax],eax
   140009615:	add    BYTE PTR [rax],al
   140009617:	add    BYTE PTR [rbx-0x6bffff6d],dh
   14000961d:	add    BYTE PTR [rax],al
   14000961f:	add    BYTE PTR [rsi],ch
   140009621:	jb     0x140009687
   140009623:	(bad)  
   140009624:	je     0x140009687
   140009626:	and    al,0x7a
   140009628:	rex.RB push r12
   14000962a:	push   rdi
   14000962b:	xor    al,BYTE PTR [rax]
   14000962d:	add    BYTE PTR [rax],al
   14000962f:	add    BYTE PTR [rdi-0x6c],al
   140009632:	add    BYTE PTR [rax],al
   140009634:	add    DWORD PTR [rax],eax
   140009636:	add    BYTE PTR [rax],al
   140009638:	cs jb  0x14000969f
   14000963b:	(bad)  
   14000963c:	je     0x14000969f
   14000963e:	and    al,0x7a
   140009640:	rex.RB push r12
   140009642:	push   rdi
   140009643:	cmp    DWORD PTR [rax],eax
   140009645:	add    BYTE PTR [rax],al
   140009647:	add    BYTE PTR [rax-0x6c],cl
   14000964a:	add    BYTE PTR [rax],al
   14000964c:	push   rsp
   14000964d:	add    eax,DWORD PTR [rax]
   14000964f:	add    BYTE PTR [rsi],ch
   140009651:	jb     0x1400096b7
   140009653:	(bad)  
   140009654:	je     0x1400096b7
   140009656:	and    al,0x7a
   140009658:	jp     0x1400096d4
   14000965a:	fs (bad) 
   14000965c:	add    BYTE PTR [eax],al
   14000965f:	add    BYTE PTR [rax-0x3fffff69],ah
   140009665:	add    al,0x0
   140009667:	add    BYTE PTR [rsi],ch
   140009669:	js     0x1400096cf
   14000966b:	(bad)  
   14000966c:	je     0x1400096cf
   14000966e:	add    BYTE PTR [rax],al
   140009670:	(bad)  
   140009671:	pushf  
   140009672:	add    BYTE PTR [rax],al
   140009674:	push   rsp
   140009675:	add    BYTE PTR [rax],al
   140009677:	add    BYTE PTR [rsi],ch
   140009679:	js     0x1400096df
   14000967b:	(bad)  
   14000967c:	je     0x1400096df
   14000967e:	and    al,0x78
   140009680:	add    BYTE PTR [rax],al
   140009682:	add    BYTE PTR [rax],al
   140009684:	mov    eax,0x800009c
   140009689:	add    BYTE PTR [rax],al
   14000968b:	add    BYTE PTR [rbp+0x69],ch
   14000968e:	outs   dx,BYTE PTR ds:[rsi]
   14000968f:	push   r12
   140009691:	rex.WR and al,0x5f
   140009694:	pop    rdi
   140009695:	(bad)  
   140009696:	add    BYTE PTR [rax],al
   140009698:	rcr    BYTE PTR [rax+rax*1+0x800],0x0
   1400096a0:	ins    DWORD PTR es:[rdi],dx
   1400096a1:	imul   ebp,DWORD PTR [rsi+0x41],0x5f244c54
   1400096a8:	pop    rdi
   1400096a9:	ins    DWORD PTR es:[rdi],dx
   1400096aa:	add    BYTE PTR [rax],al
   1400096ac:	enter  0x9c,0x0
   1400096b0:	or     BYTE PTR [rax],al
   1400096b2:	add    BYTE PTR [rax],al
   1400096b4:	ins    DWORD PTR es:[rdi],dx
   1400096b5:	imul   ebp,DWORD PTR [rsi+0x41],0x5f244c54
   1400096bc:	pop    rdi
   1400096bd:	jb     0x1400096bf
   1400096bf:	add    al,dl
   1400096c1:	pushf  
   1400096c2:	add    BYTE PTR [rax],al
   1400096c4:	or     BYTE PTR [rax],al
   1400096c6:	add    BYTE PTR [rax],al
   1400096c8:	ins    DWORD PTR es:[rdi],dx
   1400096c9:	imul   ebp,DWORD PTR [rsi+0x41],0x5f244c54
   1400096d0:	pop    rdi
   1400096d1:	jp     0x1400096d3
   1400096d3:	add    al,ah
   1400096d5:	pushf  
   1400096d6:	add    BYTE PTR [rax],al
   1400096d8:	xchg   ebp,eax
   1400096d9:	add    BYTE PTR [rax],al
   1400096db:	add    BYTE PTR [rsi],ch
   1400096dd:	gs fs (bad) 
   1400096e0:	je     0x140009743
   1400096e2:	add    BYTE PTR [rax],al
   1400096e4:	js     0x140009683
   1400096e6:	add    BYTE PTR [rax],al
   1400096e8:	push   rsp
   1400096e9:	add    DWORD PTR [rax],eax
   1400096eb:	add    BYTE PTR [rsi],ch
   1400096ed:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   1400096f5:	add    BYTE PTR [rax],al
   1400096f7:	add    ah,cl
   1400096f9:	sahf   
   1400096fa:	add    BYTE PTR [rax],al
   1400096fc:	adc    al,0x0
   1400096fe:	add    BYTE PTR [rax],al
   140009700:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140009709:	add    BYTE PTR [rax],al
   14000970b:	add    al,ah
   14000970d:	sahf   
   14000970e:	add    BYTE PTR [rax],al
   140009710:	cmp    BYTE PTR [rbx],al
   140009712:	add    BYTE PTR [rax],al
   140009714:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   14000971d:	add    BYTE PTR [rax],al
   14000971f:	add    BYTE PTR [rax],bl
   140009721:	movabs ds:0x692e000008d00000,al
   14000972a:	fs (bad) 
   14000972c:	je     0x14000978f
   14000972e:	and    al,0x36
   140009730:	add    BYTE PTR [rax],al
   140009732:	add    BYTE PTR [rax],al
   140009734:	add    BYTE PTR [rax+0xc00000],dh
   14000973a:	add    BYTE PTR [rax],al
   14000973c:	cs fs (bad) 
   14000973f:	je     0x1400097a2
   140009741:	add    BYTE PTR [rax],al
   140009743:	add    al,al
   140009745:	mov    al,0x0
   140009747:	add    BYTE PTR [rdx],ch
   140009749:	add    BYTE PTR [rax],al
   14000974b:	add    BYTE PTR [rsi],ch
   14000974d:	fs (bad) 
   14000974f:	je     0x1400097b2
   140009751:	and    al,0x72
   140009753:	add    al,dh
   140009755:	mov    al,0x0
   140009757:	add    BYTE PTR [rax+0x8],dl
   14000975a:	add    BYTE PTR [rax],al
   14000975c:	cs (bad) 
   14000975f:	jae    0x140009761
   140009761:	add    BYTE PTR [rax],al
   140009763:	add    BYTE PTR [rax],al
   140009765:	rol    BYTE PTR [rax],0x0
   140009768:	sbb    BYTE PTR [rsi],al
   14000976a:	add    BYTE PTR [rax],al
   14000976c:	cs jo  0x1400097d3
   14000976f:	(bad)  
   140009770:	je     0x1400097d3
   140009772:	add    BYTE PTR [rax],al
   140009774:	add    al,dl
   140009776:	add    BYTE PTR [rax],al
   140009778:	pop    rax
   140009779:	add    BYTE PTR [rax],al
   14000977b:	add    BYTE PTR [rsi],ch
   14000977d:	jb     0x1400097f2
   14000977f:	jb     0x1400097e4
   140009781:	and    al,0x30
   140009783:	xor    DWORD PTR [rax],eax
   140009785:	add    BYTE PTR [rax],al
   140009787:	add    BYTE PTR [rax-0x30],ah
   14000978a:	add    BYTE PTR [rax],al
   14000978c:	fadd   DWORD PTR [rbx]
   14000978e:	add    BYTE PTR [rax],al
   140009790:	cs jb  0x140009806
   140009793:	jb     0x1400097f8
   140009795:	and    al,0x30
   140009797:	xor    al,BYTE PTR [rax]
   140009799:	add    BYTE PTR [rax],al
   14000979b:	add    BYTE PTR [rax],al
   14000979d:	add    BYTE PTR [rax],al
   14000979f:	add    BYTE PTR [rcx],al
   1400097a1:	sbb    DWORD PTR [rdx],ecx
   1400097a3:	add    BYTE PTR [rcx],bl
   1400097a5:	je     0x1400097b4
   1400097a7:	add    BYTE PTR [rcx],bl
   1400097a9:	fs or  al,0x0
   1400097ac:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   1400097b0:	sbb    DWORD PTR [rdx+rcx*1],esi
   1400097b3:	add    BYTE PTR [rcx],bl
   1400097b5:	jb     0x1400097cc
   1400097b7:	loopne 0x1400097ba
   1400097b9:	sbb    DWORD PTR [rdx],ecx
   1400097bb:	add    BYTE PTR [rcx],bl
   1400097bd:	je     0x1400097c8
   1400097bf:	add    BYTE PTR [rcx],bl
   1400097c1:	or     BYTE PTR fs:[rax],al
   1400097c4:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400097c8:	sbb    DWORD PTR [rsi+rax*1],esi
   1400097cb:	add    BYTE PTR [rcx],bl
   1400097cd:	xor    dl,BYTE PTR [rip+0x60f01e0]        # 0x1460f99b3
   1400097d3:	add    BYTE PTR [rdi],cl
   1400097d5:	fs (bad) 
   1400097d7:	add    BYTE PTR [rdi],cl
   1400097d9:	xor    al,0x6
   1400097db:	add    BYTE PTR [rdi],cl
   1400097dd:	xor    cl,BYTE PTR [rbx]
   1400097df:	jo     0x1400097e2
   1400097e1:	(bad)  
   1400097e2:	add    al,BYTE PTR [rax]
   1400097e4:	(bad)  
   1400097e5:	xor    al,BYTE PTR [rdx]
   1400097e7:	xor    BYTE PTR [rcx],al
   1400097e9:	or     al,BYTE PTR [rax+rax*1]
   1400097ec:	or     dh,BYTE PTR [rsi+rax*1]
   1400097ef:	add    BYTE PTR [rdx],cl
   1400097f1:	xor    al,BYTE PTR [rsi]
   1400097f3:	jo     0x1400097f6
   1400097f5:	sbb    ecx,DWORD PTR [rdx]
   1400097f7:	add    BYTE PTR [rbx],bl
   1400097f9:	push   rsp
   1400097fa:	or     al,0x0
   1400097fc:	sbb    esi,DWORD PTR [rdx+rcx*1]
   1400097ff:	add    BYTE PTR [rbx],bl
   140009801:	xor    dl,BYTE PTR [rdi]
   140009803:	loopne 0x14000981a
   140009805:	rcl    BYTE PTR [rbx],1
   140009807:	rcl    BYTE PTR [rcx],0x70
   14000980a:	adc    BYTE PTR [rax+0x1],ah
   14000980d:	sbb    BYTE PTR [rax],cl
   14000980f:	add    BYTE PTR [rax],bl
   140009811:	xor    al,0xb
   140009813:	add    BYTE PTR [rax],bl
   140009815:	xor    dl,BYTE PTR [rcx]
   140009817:	lock pavgb mm1,QWORD PTR [rip+0xb600c70]        # 0x14b60a48f
   14000981f:	push   rax
   140009820:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b415982e
   140009826:	or     DWORD PTR [rax],eax
   140009828:	adc    eax,0x15000764
   14000982d:	xor    al,0x6
   14000982f:	add    BYTE PTR [rip+0x19e01132],dl        # 0x159e0a967
   140009835:	and    eax,0x74170008
   14000983a:	adc    BYTE PTR [rax],al
   14000983c:	(bad)  
   14000983d:	lldt   WORD PTR fs:[rdi]
   140009841:	xor    al,0xe
   140009843:	add    BYTE PTR [rdi],dl
   140009845:	mov    dl,0x10
   140009847:	push   rax
   140009848:	jo     0x1400098b7
   14000984a:	add    BYTE PTR [rax],al
   14000984c:	push   rax
   14000984d:	add    BYTE PTR [rax],al
   14000984f:	add    BYTE PTR [rcx],al
   140009851:	adc    BYTE PTR [rsi],al
   140009853:	add    BYTE PTR [rax],dl
   140009855:	or     BYTE PTR fs:[rax],al
   140009858:	adc    BYTE PTR [rdi+rax*1],dh
   14000985b:	add    BYTE PTR [rax],dl
   14000985d:	xor    cl,BYTE PTR [rax+rsi*2]
   140009860:	add    DWORD PTR [rcx+rax*1],eax
   140009863:	add    BYTE PTR [rdx+rax*2],al
   140009866:	add    BYTE PTR [rax],al
   140009868:	add    DWORD PTR [rsi+rax*1],ecx
   14000986b:	add    BYTE PTR [rsp+rsi*1],cl
   14000986e:	or     eax,DWORD PTR [rax]
   140009870:	or     al,0x32
   140009872:	or     BYTE PTR [rax+0x7],dh
   140009875:	(bad)  
   140009876:	(bad)  
   140009877:	push   rax
   140009878:	sbb    DWORD PTR [rcx],esp
   14000987a:	or     BYTE PTR [rax],al
   14000987c:	adc    dl,BYTE PTR [rbp+rdx*1+0x0]
   140009880:	adc    dh,BYTE PTR [rdx+rdx*1]
   140009883:	add    BYTE PTR [rdx],dl
   140009885:	ror    BYTE PTR [rsi],cl
   140009887:	loopne 0x140009895
   140009889:	jo     0x140009896
   14000988b:	(bad)  
   14000988c:	jo     0x1400098fb
   14000988e:	add    BYTE PTR [rax],al
   140009890:	(bad)  
   140009891:	add    BYTE PTR [rax],al
   140009893:	add    BYTE PTR [rcx],al
   140009895:	sbb    DWORD PTR [rdx],ecx
   140009897:	add    BYTE PTR [rcx],bl
   140009899:	in     al,0xb
   14000989b:	add    BYTE PTR [rcx],bl
   14000989d:	je     0x1400098a9
   14000989f:	add    BYTE PTR [rcx],bl
   1400098a1:	or     DWORD PTR fs:[rax],eax
   1400098a4:	sbb    DWORD PTR [rax+rcx*1],esi
   1400098a7:	add    BYTE PTR [rcx],bl
   1400098a9:	push   rdx
   1400098aa:	adc    eax,0xc1d01f0
   1400098af:	add    BYTE PTR [rip+0x1d000b74],bl        # 0x15d00a429
   1400098b5:	or     al,BYTE PTR fs:[rax]
   1400098b8:	sbb    eax,0x1d000954
   1400098bd:	xor    al,0x8
   1400098bf:	add    BYTE PTR [rip+0x17f01932],bl        # 0x157f0b1f7
   1400098c5:	loopne 0x1400098dc
   1400098c7:	rol    BYTE PTR [rcx],1
   1400098c9:	adc    al,0x8
   1400098cb:	add    BYTE PTR [rsp+riz*2],dl
   1400098ce:	or     BYTE PTR [rax],al
   1400098d0:	adc    al,0x54
   1400098d2:	(bad)  
   1400098d3:	add    BYTE PTR [rsp+rsi*1],dl
   1400098d6:	(bad)  
   1400098d7:	add    BYTE PTR [rdx+rsi*1],dl
   1400098da:	adc    BYTE PTR [rax+0x1],dh
   1400098dd:	adc    eax,0x74150008
   1400098e2:	or     DWORD PTR [rax],eax
   1400098e4:	adc    eax,0x15000864
   1400098e9:	xor    al,0x7
   1400098eb:	add    BYTE PTR [rip+0x19e01132],dl        # 0x159e0aa23
   1400098f1:	and    DWORD PTR [rax],ecx
   1400098f3:	add    BYTE PTR [rdx],dl
   1400098f5:	push   rsp
   1400098f6:	adc    eax,0x14341200
   1400098fb:	add    BYTE PTR [rdx],dl
   1400098fd:	ror    BYTE PTR [rsi],cl
   1400098ff:	loopne 0x14000990d
   140009901:	jo     0x14000990e
   140009903:	(bad)  
   140009904:	jo     0x140009973
   140009906:	add    BYTE PTR [rax],al
   140009908:	(bad)  
   140009909:	add    BYTE PTR [rax],al
   14000990b:	add    BYTE PTR [rcx],al
   14000990d:	clts   
   14000990f:	add    BYTE PTR [rdi],cl
   140009911:	or     DWORD PTR fs:[rax],eax
   140009914:	sysenter 
   140009916:	or     BYTE PTR [rax],al
   140009918:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000991b:	jo     0x14000991e
   14000991d:	adc    DWORD PTR [rax+rax*1],eax
   140009920:	adc    DWORD PTR [rdx],esi
   140009922:	or     eax,0xb600c70
   140009927:	xor    BYTE PTR [rcx],bl
   140009929:	and    eax,0x34130009
   14000992e:	push   rbx
   14000992f:	add    BYTE PTR [rbx],dl
   140009931:	add    DWORD PTR [rdx+0x0],ecx
   140009934:	or     al,0xf0
   140009936:	or     ah,al
   140009938:	or     BYTE PTR [rax+0x7],dh
   14000993b:	(bad)  
   14000993c:	(bad)  
   14000993d:	push   rax
   14000993e:	add    BYTE PTR [rax],al
   140009940:	jo     0x1400099af
   140009942:	add    BYTE PTR [rax],al
   140009944:	add    al,BYTE PTR [rax]
   140009947:	add    BYTE PTR [rcx],bl
   140009949:	(bad)  
   14000994a:	add    eax,0x2c340d00
   14000994f:	add    BYTE PTR [rip+0x6002a01],cl        # 0x14600c356
   140009955:	(bad)  
   140009956:	add    BYTE PTR [rax],al
   140009958:	jo     0x1400099c7
   14000995a:	add    BYTE PTR [rax],al
   14000995c:	rex add DWORD PTR [rax],eax
   14000995f:	add    BYTE PTR [rcx],al
   140009961:	sbb    al,0xc
   140009963:	add    BYTE PTR [rsp+riz*2],bl
   140009966:	or     eax,0xc541c00
   14000996b:	add    BYTE PTR [rsp+rsi*1],bl
   14000996e:	or     eax,DWORD PTR [rax]
   140009970:	sbb    al,0x32
   140009972:	sbb    al,dh
   140009974:	(bad)  
   140009975:	loopne 0x14000998b
   140009977:	rcl    BYTE PTR [rdx],1
   140009979:	rcl    BYTE PTR [rax],0x70
   14000997c:	add    DWORD PTR [rip+0x341d000a],ebx        # 0x1741d998c
   140009982:	adc    al,BYTE PTR [rax]
   140009984:	sbb    eax,0x17f01972
   140009989:	loopne 0x1400099a0
   14000998b:	rcl    BYTE PTR [rbx],1
   14000998d:	rcl    BYTE PTR [rcx],0x70
   140009990:	adc    BYTE PTR [rax+0xf],ah
   140009993:	push   rax
   140009994:	sbb    DWORD PTR [rdx],esp
   140009996:	add    al,0x0
   140009998:	adc    BYTE PTR [rcx],al
   14000999a:	mov    ecx,0x2700302
   14000999f:	xor    BYTE PTR [rax+0x6d],dh
   1400099a2:	add    BYTE PTR [rax],al
   1400099a4:	mov    al,0x15
   1400099a6:	add    BYTE PTR [rax],al
   1400099a8:	add    DWORD PTR [rcx+rax*1],eax
   1400099ab:	add    BYTE PTR [rdx+riz*4],al
   1400099ae:	add    BYTE PTR [rax],al
   1400099b0:	add    DWORD PTR [rcx+rax*1],eax
   1400099b3:	add    BYTE PTR [rdx+rax*4],al
   1400099b6:	add    BYTE PTR [rax],al
   1400099b8:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41d99ca
   1400099be:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d00a829
   1400099c5:	push   rsp
   1400099c6:	or     eax,0xc341d00
   1400099cb:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f0b343
   1400099d1:	loopne 0x1400099e8
   1400099d3:	rcr    BYTE PTR [rcx],0x29
   1400099d6:	or     DWORD PTR [rax],eax
   1400099d8:	sbb    esi,DWORD PTR [rcx+rsi*1+0x0]
   1400099dc:	sbb    esp,DWORD PTR [rax+rsi*1+0x0]
   1400099e0:	sbb    esi,DWORD PTR [rdi+rbp*1]
   1400099e3:	add    BYTE PTR [rbx],bl
   1400099e5:	add    DWORD PTR [rax+rax*1],ebp
   1400099e8:	adc    BYTE PTR [rax+0x0],dl
   1400099eb:	add    BYTE PTR [rax+0x6d],dh
   1400099ee:	add    BYTE PTR [rax],al
   1400099f0:	push   rax
   1400099f1:	add    DWORD PTR [rax],eax
   1400099f3:	add    BYTE PTR [rcx],bl
   1400099f5:	(bad)  
   1400099f6:	or     DWORD PTR [rax],eax
   1400099f8:	(bad)  
   1400099f9:	je     0x140009a32
   1400099fb:	add    BYTE PTR [rsi],bl
   1400099fd:	fs add BYTE PTR ss:[rsi],bl
   140009a01:	xor    al,0x35
   140009a03:	add    BYTE PTR [rsi],bl
   140009a05:	add    DWORD PTR [rdx],esi
   140009a07:	add    BYTE PTR [rax],dl
   140009a09:	push   rax
   140009a0a:	add    BYTE PTR [rax],al
   140009a0c:	jo     0x140009a7b
   140009a0e:	add    BYTE PTR [rax],al
   140009a10:	add    BYTE PTR [rcx],0x0
   140009a13:	add    BYTE PTR [rcx],bl
   140009a15:	(bad)  
   140009a16:	(bad)  
   140009a17:	add    BYTE PTR [rdi],cl
   140009a19:	fs or  eax,0xc340f00
   140009a1f:	add    BYTE PTR [rdi],cl
   140009a21:	jb     0x140009a2e
   140009a23:	jo     0x140009a95
   140009a25:	ins    DWORD PTR es:[rdi],dx
   140009a26:	add    BYTE PTR [rax],al
   140009a28:	xor    BYTE PTR [rax],al
   140009a2a:	add    BYTE PTR [rax],al
   140009a2c:	sbb    DWORD PTR [rcx],ebp
   140009a2e:	or     DWORD PTR [rax],eax
   140009a30:	sbb    esi,DWORD PTR [rax+rsi*1+0x0]
   140009a34:	sbb    esp,DWORD PTR [rdi+rbp*1+0x0]
   140009a38:	sbb    esi,DWORD PTR [rsi+rbp*1]
   140009a3b:	add    BYTE PTR [rbx],bl
   140009a3d:	add    DWORD PTR [rax+rax*1],ebp
   140009a40:	adc    BYTE PTR [rax+0x0],dl
   140009a43:	add    BYTE PTR [rax+0x6d],dh
   140009a46:	add    BYTE PTR [rax],al
   140009a48:	push   rax
   140009a49:	add    DWORD PTR [rax],eax
   140009a4b:	add    BYTE PTR [rcx],al
   140009a4d:	or     al,BYTE PTR [rax+rax*1]
   140009a50:	or     dh,BYTE PTR [rax+rcx*1]
   140009a53:	add    BYTE PTR [rdx],cl
   140009a55:	xor    al,BYTE PTR [rsi]
   140009a57:	jo     0x140009a72
   140009a59:	xor    ecx,DWORD PTR [rcx]
   140009a5b:	add    BYTE PTR [rdx],ah
   140009a5d:	je     0x140009a77
   140009a5f:	add    DWORD PTR [rdx],esp
   140009a61:	fs (bad) 
   140009a63:	add    DWORD PTR [rdx],esp
   140009a65:	xor    al,0x16
   140009a67:	add    DWORD PTR [rdx],esp
   140009a69:	add    DWORD PTR [rcx+rax*1],edx
   140009a6c:	adc    al,0x50
   140009a6e:	add    BYTE PTR [rax],al
   140009a70:	jo     0x140009adf
   140009a72:	add    BYTE PTR [rax],al
   140009a74:	nop
   140009a75:	or     BYTE PTR [rax],al
   140009a77:	add    BYTE PTR [rcx],al
   140009a79:	(bad)  
   140009a7a:	add    al,BYTE PTR [rax]
   140009a7c:	(bad)  
   140009a7d:	push   rdx
   140009a7e:	add    dh,BYTE PTR [rax]
   140009a80:	sbb    DWORD PTR [rcx],ebx
   140009a82:	add    al,0x0
   140009a84:	or     dh,BYTE PTR [rsi+rcx*1]
   140009a87:	add    BYTE PTR [rdx],cl
   140009a89:	mov    dl,0x6
   140009a8b:	jo     0x140009afd
   140009a8d:	ins    DWORD PTR es:[rdi],dx
   140009a8e:	add    BYTE PTR [rax],al
   140009a90:	push   rax
   140009a91:	add    BYTE PTR [rax],al
   140009a93:	add    BYTE PTR [rcx],bl
   140009a95:	(bad)  
   140009a96:	add    al,0x0
   140009a98:	or     BYTE PTR [rdx+0x60037004],dh
   140009a9e:	add    dh,BYTE PTR [rax]
   140009aa0:	jo     0x140009b0f
   140009aa2:	add    BYTE PTR [rax],al
   140009aa4:	push   rax
   140009aa5:	add    BYTE PTR [rax],al
   140009aa7:	add    BYTE PTR [rcx],al
   140009aa9:	clts   
   140009aab:	add    BYTE PTR [rdi],cl
   140009aad:	or     DWORD PTR fs:[rax],eax
   140009ab0:	sysenter 
   140009ab2:	or     BYTE PTR [rax],al
   140009ab4:	rdmsr  
   140009ab6:	or     esi,DWORD PTR [rax+0x1]
   140009ab9:	sbb    BYTE PTR [rdx],cl
   140009abb:	add    BYTE PTR [rax],bl
   140009abd:	or     eax,DWORD PTR fs:[rax]
   140009ac0:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140009ac4:	sbb    BYTE PTR [rcx+rcx*1],dh
   140009ac7:	add    BYTE PTR [rax],bl
   140009ac9:	xor    dl,BYTE PTR [rax+rsi*8]
   140009acc:	adc    ah,al
   140009ace:	adc    BYTE PTR [rax+0x1],dh
   140009ad1:	sbb    eax,0x741d000c
   140009ad6:	or     eax,0xc641d00
   140009adb:	add    BYTE PTR [rip+0x1d000b54],bl        # 0x15d00a635
   140009ae1:	xor    al,0xa
   140009ae3:	add    BYTE PTR [rip+0x17f01952],bl        # 0x157f0b43b
   140009ae9:	loopne 0x140009b00
   140009aeb:	rol    BYTE PTR [rcx],0x15
   140009aee:	or     BYTE PTR [rax],al
   140009af0:	adc    eax,0x15000874
   140009af5:	fs (bad) 
   140009af7:	add    BYTE PTR [rip+0x15000634],dl        # 0x15500a131
   140009afd:	xor    dl,BYTE PTR [rcx]
   140009aff:	loopne 0x140009b02
   140009b01:	add    al,0x1
   140009b03:	add    BYTE PTR [rdx+riz*2],al
   140009b06:	add    BYTE PTR [rax],al
   140009b08:	or     DWORD PTR [rbx+rcx*1],ebx
   140009b0b:	add    BYTE PTR [rsp+rsi*2],bl
   140009b0e:	sbb    al,0x0
   140009b10:	sbb    al,0x64
   140009b12:	sbb    eax,DWORD PTR [rax]
   140009b14:	sbb    al,0x34
   140009b16:	sbb    al,BYTE PTR [rax]
   140009b18:	sbb    al,0x1
   140009b1a:	(bad)  
   140009b1b:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e0af11
   140009b21:	rol    BYTE PTR [rax],0x0
   140009b24:	(bad)  
   140009b25:	push   0x0
   140009b27:	add    BYTE PTR [rcx],al
   140009b29:	add    BYTE PTR [rax],al
   140009b2b:	add    BYTE PTR [rax],ah
   140009b2d:	add    BYTE PTR fs:[rax],al
   140009b30:	(bad)  
   140009b31:	data16 add BYTE PTR [rax],al
   140009b34:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009b35:	outs   dx,BYTE PTR ds:[rsi]
   140009b36:	add    BYTE PTR [rax],al
   140009b38:	(bad)  
   140009b39:	data16 add BYTE PTR [rax],al
   140009b3c:	add    DWORD PTR [rsi],eax
   140009b3e:	add    al,BYTE PTR [rax]
   140009b40:	(bad)  
   140009b41:	xor    al,BYTE PTR [rdx]
   140009b43:	push   rax
   140009b44:	add    BYTE PTR [rax],al
   140009b46:	add    BYTE PTR [rax],al
   140009b48:	add    DWORD PTR [rax],eax
   140009b4a:	add    BYTE PTR [rax],al
   140009b4c:	adc    DWORD PTR [rdx],ecx
   140009b4e:	add    al,0x0
   140009b50:	or     dh,BYTE PTR [rsi+rax*1]
   140009b53:	add    BYTE PTR [rdx],cl
   140009b55:	xor    al,BYTE PTR [rsi]
   140009b57:	jo     0x140009b1f
   140009b59:	push   0x0
   140009b5b:	add    BYTE PTR [rcx],al
   140009b5d:	add    BYTE PTR [rax],al
   140009b5f:	add    BYTE PTR [rcx],dl
   140009b61:	add    BYTE PTR [eax],al
   140009b64:	push   rsi
   140009b65:	add    BYTE PTR [eax],al
   140009b68:	retf   0x6e
   140009b6b:	add    BYTE PTR [rax],al
   140009b6d:	add    BYTE PTR [rax],al
   140009b6f:	add    BYTE PTR [rcx],bl
   140009b71:	or     eax,0x62040001
   140009b76:	add    BYTE PTR [rax],al
   140009b78:	lods   al,BYTE PTR ds:[rsi]
   140009b79:	ins    BYTE PTR es:[rdi],dx
   140009b7a:	add    BYTE PTR [rax],al
   140009b7c:	(bad)  
   140009b7d:	test   DWORD PTR [rax],eax
   140009b7f:	add    bh,bh
   140009b81:	(bad)  
   140009b82:	(bad)  
   140009b83:	inc    DWORD PTR [rax]
   140009b85:	add    BYTE PTR [rax],al
   140009b87:	add    bh,bh
   140009b89:	(bad)  
   140009b8a:	(bad)  
   140009b8b:	inc    DWORD PTR [rax]
	...
   140009b95:	add    BYTE PTR [rax],al
   140009b97:	add    BYTE PTR [rcx],al
   140009b99:	add    BYTE PTR [rax],al
   140009b9b:	add    BYTE PTR [rcx],al
   140009b9d:	add    BYTE PTR [rax],al
   140009b9f:	add    BYTE PTR [rbx+rbx*4+0x400000],ah
	...
   140009bae:	add    BYTE PTR [rax],al
   140009bb0:	jmp    0x140009c20
   140009bb2:	add    BYTE PTR [rax],al
   140009bb4:	cmp    BYTE PTR [rax],al
   140009bb6:	add    BYTE PTR [rax],al
   140009bb8:	lods   al,BYTE PTR ds:[rsi]
   140009bb9:	add    BYTE PTR [eax],al
   140009bbc:	(bad)  
   140009bbd:	(bad)  
   140009bbe:	(bad)  
   140009bbf:	(bad)  
   140009bc0:	mov    ecx,0x67
   140009bc5:	add    BYTE PTR [rax],al
   140009bc7:	add    BYTE PTR [rdi-0xffff99],bh
   140009bcd:	(bad)  
   140009bce:	(bad)  
   140009bcf:	(bad)  
   140009bd0:	jmp    0x140009c40
   140009bd2:	add    BYTE PTR [rax],al
   140009bd4:	add    BYTE PTR [rax],al
   140009bd6:	add    BYTE PTR [rax],al
   140009bd8:	clc    
   140009bd9:	outs   dx,BYTE PTR ds:[rsi]
   140009bda:	add    BYTE PTR [rax],al
   140009bdc:	add    DWORD PTR [rax],eax
   140009bde:	add    BYTE PTR [rax],al
   140009be0:	std    
   140009be1:	outs   dx,BYTE PTR ds:[rsi]
   140009be2:	add    BYTE PTR [rax],al
   140009be4:	add    BYTE PTR [rax],al
   140009be6:	add    BYTE PTR [rax],al
   140009be8:	sbb    DWORD PTR [rdx],ecx
   140009bea:	add    al,BYTE PTR [rax]
   140009bec:	or     dh,BYTE PTR [rdx]
   140009bee:	(bad)  
   140009bef:	push   rax
   140009bf0:	lods   al,BYTE PTR ds:[rsi]
   140009bf1:	ins    BYTE PTR es:[rdi],dx
   140009bf2:	add    BYTE PTR [rax],al
   140009bf4:	(bad)  
   140009bf5:	test   DWORD PTR [rax],eax
   140009bf7:	add    BYTE PTR [rcx],cl
   140009bf9:	add    al,0x1
   140009bfb:	add    BYTE PTR [rdx+riz*1],al
   140009bfe:	add    BYTE PTR [rax],al
   140009c00:	(bad)  
   140009c01:	push   0x0
   140009c03:	add    BYTE PTR [rcx],al
   140009c05:	add    BYTE PTR [rax],al
   140009c07:	add    BYTE PTR [rax+rbp*2+0x0],bl
   140009c0b:	add    BYTE PTR [rdx+0x1000068],dl
   140009c11:	add    BYTE PTR [rax],al
   140009c13:	add    BYTE PTR [rdx+0x9000068],dl
   140009c19:	or     al,BYTE PTR [rax+rax*1]
   140009c1c:	or     dh,BYTE PTR [rsi+rax*1]
   140009c1f:	add    BYTE PTR [rdx],cl
   140009c21:	xor    al,BYTE PTR [rsi]
   140009c23:	jo     0x140009beb
   140009c25:	push   0x0
   140009c27:	add    BYTE PTR [rcx],al
   140009c29:	add    BYTE PTR [rax],al
   140009c2b:	add    BYTE PTR [rbp+0x69],bl
   140009c2e:	add    BYTE PTR [rax],al
   140009c30:	nop
   140009c31:	imul   eax,DWORD PTR [rax],0x6f2000
   140009c37:	add    BYTE PTR [rax+0x1000069],dl
   140009c3d:	or     eax,0x340d0004
   140009c42:	or     DWORD PTR [rax],eax
   140009c44:	or     eax,0x1500632
   140009c49:	or     al,0x2
   140009c4b:	add    BYTE PTR [rcx+rax*1],cl
   140009c4e:	adc    DWORD PTR [rax],eax
   140009c50:	add    DWORD PTR [rax],eax
   140009c52:	add    BYTE PTR [rax],al
   140009c54:	add    BYTE PTR [rax],al
   140009c56:	add    BYTE PTR [rax],al
   140009c58:	add    DWORD PTR [rcx+rax*1],eax
   140009c5b:	add    BYTE PTR [rdx+rdx*1],al
   140009c5e:	add    BYTE PTR [rax],al
   140009c60:	add    DWORD PTR [rax],eax
   140009c62:	add    BYTE PTR [rax],al
   140009c64:	jo     0x140009c02
	...
   140009c72:	add    BYTE PTR [rax],al
   140009c74:	shl    BYTE PTR [rax+0x0],0x0
   140009c7b:	add    bh,bh
   140009c7d:	(bad)  
   140009c7e:	(bad)  
   140009c7f:	inc    DWORD PTR [rax]
   140009c81:	add    BYTE PTR [rax],al
   140009c83:	add    BYTE PTR [rax-0x68000000],ah
   140009c89:	cmp    eax,0x0
	...
   140009c9a:	add    BYTE PTR [rax],al
   140009c9c:	rex.WR cmp rax,0x0
   140009ca2:	add    BYTE PTR [rax],al
   140009ca4:	(bad)  
   140009ca5:	pushf  
	...
   140009cc6:	add    BYTE PTR [rax],al
   140009cc8:	add    BYTE PTR [rdx+0x14000],cl
	...
   140009ce2:	add    BYTE PTR [rax],al
   140009ce4:	cmp    BYTE PTR [r15+0x55],r11b
   140009ceb:	add    BYTE PTR [rsi],ah
   140009ced:	popf   
   140009cee:	add    BYTE PTR [rax],al
   140009cf0:	add    DWORD PTR [rax],eax
   140009cf2:	add    BYTE PTR [rax],al
   140009cf4:	add    eax,DWORD PTR [rax]
   140009cf6:	add    BYTE PTR [rax],al
   140009cf8:	add    eax,DWORD PTR [rax]
   140009cfa:	add    BYTE PTR [rax],al
   140009cfc:	or     BYTE PTR [rbp-0x62ec0000],bl
   140009d02:	add    BYTE PTR [rax],al
   140009d04:	and    BYTE PTR [rbp+0x2e500000],bl
   140009d0a:	add    BYTE PTR [rax],al
   140009d0c:	adc    BYTE PTR [rip+0x2d800000],ch        # 0x16d809d12
   140009d12:	add    BYTE PTR [rax],al
   140009d14:	cmp    ebx,DWORD PTR [rbp-0x62b50000]
   140009d1a:	add    BYTE PTR [rax],al
   140009d1c:	movsxd ebx,DWORD PTR [rbp+0x0]
   140009d22:	add    DWORD PTR [rax],eax
   140009d24:	add    al,BYTE PTR [rax]
   140009d26:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009d28:	jb     0x140009d9e
   140009d2a:	(bad)  
   140009d2b:	outs   dx,BYTE PTR ds:[rsi]
   140009d2c:	(bad)  
   140009d2d:	rex.R jae 0x140009da3
   140009d30:	push   rbx
   140009d31:	gs jb  0x140009daa
   140009d34:	gs jb  0x140009d65
   140009d37:	gs js  0x140009d9f
   140009d3a:	add    BYTE PTR [rsp+rbp*2+0x6c],al
   140009d3e:	rex.XB (bad) 
   140009d40:	outs   dx,BYTE PTR ds:[rsi]
   140009d41:	push   rbp
   140009d42:	outs   dx,BYTE PTR ds:[rsi]
   140009d43:	ins    BYTE PTR es:[rdi],dx
   140009d44:	outs   dx,DWORD PTR ds:[rsi]
   140009d45:	(bad)  
   140009d46:	rex.WRX outs dx,DWORD PTR fs:[rsi]
   140009d49:	ja     0x140009d4b
   140009d4b:	rex.R ins BYTE PTR es:[rdi],dx
   140009d4d:	ins    BYTE PTR es:[rdi],dx
   140009d4e:	rex.RXB
   140009d4f:	gs je  0x140009d93
   140009d52:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140009d56:	(bad)  
   140009d57:	je     0x140009dc2
   140009d59:	outs   dx,DWORD PTR ds:[rsi]
   140009d5a:	outs   dx,BYTE PTR ds:[rsi]
   140009d5b:	rex.RX (bad) 
   140009d5d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140009d61:	jns    0x140009d63
   140009d63:	rex.R ins BYTE PTR es:[rdi],dx
   140009d65:	ins    BYTE PTR es:[rdi],dx
   140009d66:	rex.RXB
   140009d67:	gs je  0x140009dad
   140009d6a:	ins    BYTE PTR es:[rdi],dx
   140009d6b:	(bad)  
   140009d6c:	jae    0x140009de1
   140009d6e:	rex.WRXB (bad) 
   140009d70:	push   0x65
   140009d72:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140009d76:	add    BYTE PTR [rax],al
   140009d78:	sub    BYTE PTR [rcx+0x0],ah
   140009d7e:	add    BYTE PTR [rax],al
   140009d80:	add    BYTE PTR [rax],al
   140009d82:	add    BYTE PTR [rax],al
   140009d84:	or     BYTE PTR [rbx-0x7db80000],ah
   140009d8a:	add    BYTE PTR [rax],al
   140009d8c:	add    BYTE PTR [rdi+0x0],bl
   140009d92:	add    BYTE PTR [rax],al
   140009d94:	add    BYTE PTR [rax],al
   140009d96:	add    BYTE PTR [rax],al
   140009d98:	add    ah,BYTE PTR [rdi-0x7fe00000]
   140009d9e:	add    BYTE PTR [rax],al
   140009da0:	push   0xa0
   140009da5:	add    BYTE PTR [rax],al
   140009da7:	add    BYTE PTR [rax],al
   140009da9:	add    BYTE PTR [rax],al
   140009dab:	add    BYTE PTR [rdx],ah
   140009dad:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009dae:	add    BYTE PTR [rax],al
   140009db0:	mov    BYTE PTR [rcx-0x5f380000],al
	...
   140009dbe:	add    BYTE PTR [rax],al
   140009dc0:	rex.X cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009dc2:	add    BYTE PTR [rax],al
   140009dc4:	call   0x150009e4a
   140009dc9:	movabs al,ds:0x0
   140009dd2:	add    BYTE PTR [rax],al
   140009dd4:	push   0xffffffffffffffa7
   140009dd6:	add    BYTE PTR [rax],al
   140009dd8:	xor    BYTE PTR [rcx-0x5f680000],al
	...
   140009de6:	add    BYTE PTR [rax],al
   140009de8:	mov    WORD PTR [rdi-0x7e480000],fs
   140009dee:	add    BYTE PTR [rax],al
   140009df0:	and    BYTE PTR [rax+0x0],0x0
   140009df7:	add    BYTE PTR [rax],al
   140009df9:	add    BYTE PTR [rax],al
   140009dfb:	add    BYTE PTR [rsi-0x5fffff59],ch
   140009e01:	add    DWORD PTR [rax],0x9f5000
	...
   140009e0f:	add    dh,dl
   140009e11:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009e12:	add    BYTE PTR [rax],al
   140009e14:	jo     0x140009d96
   140009e16:	add    BYTE PTR [rax],al
   140009e18:	mov    al,0x9f
	...
   140009e22:	add    BYTE PTR [rax],al
   140009e24:	add    BYTE PTR [rax-0x7f300000],ch
   140009e2a:	add    BYTE PTR [rax],al
   140009e2c:	jo     0x140009dcd
	...
   140009e36:	add    BYTE PTR [rax],al
   140009e38:	sub    ch,BYTE PTR [rax-0x7f700000]
   140009e3e:	add    BYTE PTR [rax],al
   140009e40:	loopne 0x140009de1
	...
   140009e4a:	add    BYTE PTR [rax],al
   140009e4c:	push   rsp
   140009e4d:	test   al,0x0
   140009e4f:	add    BYTE PTR [rax],al
   140009e51:	add    DWORD PTR [rax],0xa05000
	...
   140009e5f:	add    BYTE PTR [rax-0x58],bh
   140009e62:	add    BYTE PTR [rax],al
   140009e64:	jo     0x140009de7
   140009e66:	add    BYTE PTR [rax],al
   140009e68:	lock lahf 
	...
   140009e72:	add    BYTE PTR [rax],al
   140009e74:	pushf  
   140009e75:	test   al,0x0
   140009e77:	add    BYTE PTR [rax],dl
   140009e79:	add    DWORD PTR [rax],0x9ee000
	...
   140009e87:	add    dl,bh
   140009e89:	test   al,0x0
   140009e8b:	add    BYTE PTR [rax],al
   140009e8d:	add    BYTE PTR [rax],0x0
   140009e90:	add    BYTE PTR [rcx+0x0],ah
   140009e96:	add    BYTE PTR [rax],al
   140009e98:	add    BYTE PTR [rax],al
   140009e9a:	add    BYTE PTR [rax],al
   140009e9c:	rex.WR stos BYTE PTR es:[rdi],al
   140009e9e:	add    BYTE PTR [rax],al
   140009ea0:	and    BYTE PTR [rdx-0x60c00000],al
	...
   140009eae:	add    BYTE PTR [rax],al
   140009eb0:	je     0x140009e5c
   140009eb2:	add    BYTE PTR [rax],al
   140009eb4:	(bad)  
   140009eb5:	add    BYTE PTR [rax],0x0
   140009eb8:	movabs al,ds:0x9f
   140009ec1:	add    BYTE PTR [rax],al
   140009ec3:	add    BYTE PTR [rsi-0x3fffff56],dl
   140009ec9:	add    BYTE PTR [rax],0x0
	...
   140009ee0:	in     al,0xa8
   140009ee2:	add    BYTE PTR [rax],al
   140009ee4:	add    BYTE PTR [rax],al
   140009ee6:	add    BYTE PTR [rax],al
   140009ee8:	ret    0xa8
   140009eeb:	add    BYTE PTR [rax],al
   140009eed:	add    BYTE PTR [rax],al
   140009eef:	add    dh,cl
   140009ef1:	test   al,0x0
	...
   140009eff:	add    BYTE PTR [rsi-0x5b],bl
   140009f02:	add    BYTE PTR [rax],al
   140009f04:	add    BYTE PTR [rax],al
   140009f06:	add    BYTE PTR [rax],al
   140009f08:	in     al,dx
   140009f09:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009f0a:	add    BYTE PTR [rax],al
   140009f0c:	add    BYTE PTR [rax],al
   140009f0e:	add    BYTE PTR [rax],al
   140009f10:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140009f12:	add    BYTE PTR [rax],al
   140009f14:	add    BYTE PTR [rax],al
   140009f16:	add    BYTE PTR [rax],al
   140009f18:	pushf  
   140009f19:	movabs ds:0xa33e000000000000,eax
   140009f22:	add    BYTE PTR [rax],al
   140009f24:	add    BYTE PTR [rax],al
   140009f26:	add    BYTE PTR [rax],al
   140009f28:	movabs ds:0xa8000000000000a4,al
   140009f31:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   140009f3e:	add    BYTE PTR [rax],al
   140009f40:	(bad)  
   140009f41:	test   eax,0x0
	...
   140009f4e:	add    BYTE PTR [rax],al
   140009f50:	mov    esi,0xa6
   140009f55:	add    BYTE PTR [rax],al
   140009f57:	add    BYTE PTR [rax+0xa4],al
   140009f5d:	add    BYTE PTR [rax],al
   140009f5f:	add    dl,bl
   140009f61:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   140009f6e:	add    BYTE PTR [rax],al
   140009f70:	clc    
   140009f71:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009f72:	add    BYTE PTR [rax],al
   140009f74:	add    BYTE PTR [rax],al
   140009f76:	add    BYTE PTR [rax],al
   140009f78:	(bad)  
   140009f79:	test   eax,0x0
   140009f7e:	add    BYTE PTR [rax],al
   140009f80:	scas   al,BYTE PTR es:[rdi]
   140009f81:	test   eax,0x0
   140009f86:	add    BYTE PTR [rax],al
   140009f88:	es stos BYTE PTR es:[rdi],al
   140009f8a:	add    BYTE PTR [rax],al
   140009f8c:	add    BYTE PTR [rax],al
   140009f8e:	add    BYTE PTR [rax],al
   140009f90:	adc    al,0xaa
	...
   140009f9e:	add    BYTE PTR [rax],al
   140009fa0:	fisubr DWORD PTR [rcx+0x0]
	...
   140009fae:	add    BYTE PTR [rax],al
   140009fb0:	out    dx,al
   140009fb1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009fb2:	add    BYTE PTR [rax],al
   140009fb4:	add    BYTE PTR [rax],al
   140009fb6:	add    BYTE PTR [rax],al
   140009fb8:	enter  0xa5,0x0
   140009fbc:	add    BYTE PTR [rax],al
   140009fbe:	add    BYTE PTR [rax],al
   140009fc0:	fisub  DWORD PTR [rsi+0x0]
   140009fc6:	add    BYTE PTR [rax],al
   140009fc8:	cmp    al,0xa6
   140009fca:	add    BYTE PTR [rax],al
   140009fcc:	add    BYTE PTR [rax],al
   140009fce:	add    BYTE PTR [rax],al
   140009fd0:	cmps   BYTE PTR es:[rsi],BYTE PTR es:[rdi]
	...
   140009fde:	add    BYTE PTR [rax],al
   140009fe0:	or     al,0xa6
	...
   140009fee:	add    BYTE PTR [rax],al
   140009ff0:	nop
   140009ff1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009ff2:	add    BYTE PTR [rax],al
   140009ff4:	add    BYTE PTR [rax],al
   140009ff6:	add    BYTE PTR [rax],al
   140009ff8:	stos   BYTE PTR es:[rdi],al
   140009ff9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009ffa:	add    BYTE PTR [rax],al
   140009ffc:	add    BYTE PTR [rax],al
   140009ffe:	add    BYTE PTR [rax],al
   14000a000:	jl     0x140009fa8
	...
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	push   0xa4
   14000a015:	add    BYTE PTR [rax],al
   14000a017:	add    BYTE PTR [rcx+rbp*4+0x0],dl
   14000a01e:	add    BYTE PTR [rax],al
   14000a020:	shl    BYTE PTR [rbp+0x0],0x0
   14000a027:	add    BYTE PTR [rax],dh
   14000a029:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a02a:	add    BYTE PTR [rax],al
   14000a02c:	add    BYTE PTR [rax],al
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	pop    rax
   14000a031:	test   eax,0x0
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	or     al,0xa4
   14000a03a:	add    BYTE PTR [rax],al
   14000a03c:	add    BYTE PTR [rax],al
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	(bad)  
   14000a041:	movabs ds:0x0,eax
   14000a04a:	add    BYTE PTR [rax],al
   14000a04c:	add    BYTE PTR [rax],al
   14000a04e:	add    BYTE PTR [rax],al
   14000a050:	ins    BYTE PTR es:[rdi],dx
   14000a051:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a052:	add    BYTE PTR [rax],al
   14000a054:	add    BYTE PTR [rax],al
   14000a056:	add    BYTE PTR [rax],al
   14000a058:	push   rdx
   14000a059:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
	...
   14000a066:	add    BYTE PTR [rax],al
   14000a068:	pop    rsi
   14000a069:	movabs ds:0xa4dc000000000000,eax
	...
   14000a07e:	add    BYTE PTR [rax],al
   14000a080:	push   rsp
   14000a081:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a082:	add    BYTE PTR [rax],al
   14000a084:	add    BYTE PTR [rax],al
   14000a086:	add    BYTE PTR [rax],al
   14000a088:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   14000a096:	add    BYTE PTR [rax],al
   14000a098:	out    dx,al
   14000a099:	movabs ds:0xa51e000000000000,eax
   14000a0a2:	add    BYTE PTR [rax],al
   14000a0a4:	add    BYTE PTR [rax],al
   14000a0a6:	add    BYTE PTR [rax],al
   14000a0a8:	(bad)  
   14000a0a9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a0aa:	add    BYTE PTR [rax],al
   14000a0ac:	add    BYTE PTR [rax],al
   14000a0ae:	add    BYTE PTR [rax],al
   14000a0b0:	movs   BYTE PTR es:[rdi],BYTE PTR es:[rsi]
   14000a0b2:	add    BYTE PTR [rax],al
   14000a0b4:	add    BYTE PTR [rax],al
   14000a0b6:	add    BYTE PTR [rax],al
   14000a0b8:	xchg   edx,eax
   14000a0b9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   14000a0c6:	add    BYTE PTR [rax],al
   14000a0c8:	mov    WORD PTR [rbp+0x0],fs
   14000a0ce:	add    BYTE PTR [rax],al
   14000a0d0:	jbe    0x14000a077
   14000a0d2:	add    BYTE PTR [rax],al
   14000a0d4:	add    BYTE PTR [rax],al
   14000a0d6:	add    BYTE PTR [rax],al
   14000a0d8:	outs   dx,BYTE PTR ds:[rsi]
   14000a0d9:	movabs ds:0xa3b4000000000000,eax
   14000a0e2:	add    BYTE PTR [rax],al
   14000a0e4:	add    BYTE PTR [rax],al
   14000a0e6:	add    BYTE PTR [rax],al
   14000a0e8:	mov    esp,0xa4
   14000a0ed:	add    BYTE PTR [rax],al
   14000a0ef:	add    BYTE PTR [rsi+0xa3],al
	...
   14000a0fd:	add    BYTE PTR [rax],al
   14000a0ff:	add    BYTE PTR [rdx+rbp*4],bh
   14000a102:	add    BYTE PTR [rax],al
   14000a104:	add    BYTE PTR [rax],al
   14000a106:	add    BYTE PTR [rax],al
   14000a108:	(bad)  
   14000a109:	test   eax,0x0
   14000a10e:	add    BYTE PTR [rax],al
   14000a110:	in     al,dx
   14000a111:	test   eax,0x0
   14000a116:	add    BYTE PTR [rax],al
   14000a118:	ins    BYTE PTR es:[rdi],dx
   14000a119:	test   eax,0x0
	...
   14000a126:	add    BYTE PTR [rax],al
   14000a128:	lock movabs ds:0xa2fe000000000000,al
   14000a132:	add    BYTE PTR [rax],al
   14000a134:	add    BYTE PTR [rax],al
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	adc    al,0xa3
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	add    BYTE PTR [rax],al
   14000a13e:	add    BYTE PTR [rax],al
   14000a140:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a141:	movabs ds:0xa29a000000000000,al
   14000a14a:	add    BYTE PTR [rax],al
   14000a14c:	add    BYTE PTR [rax],al
   14000a14e:	add    BYTE PTR [rax],al
   14000a150:	xchg   BYTE PTR [rdx+0x0],ah
   14000a156:	add    BYTE PTR [rax],al
   14000a158:	jl     0x14000a0fc
   14000a15a:	add    BYTE PTR [rax],al
   14000a15c:	add    BYTE PTR [rax],al
   14000a15e:	add    BYTE PTR [rax],al
   14000a160:	or     al,0xa9
   14000a162:	add    BYTE PTR [rax],al
   14000a164:	add    BYTE PTR [rax],al
   14000a166:	add    BYTE PTR [rax],al
   14000a168:	sbb    al,0xa9
   14000a16a:	add    BYTE PTR [rax],al
   14000a16c:	add    BYTE PTR [rax],al
   14000a16e:	add    BYTE PTR [rax],al
   14000a170:	mov    esi,0xa2
   14000a175:	add    BYTE PTR [rax],al
   14000a177:	add    BYTE PTR [rcx+rbp*4],dh
   14000a17a:	add    BYTE PTR [rax],al
   14000a17c:	add    BYTE PTR [rax],al
   14000a17e:	add    BYTE PTR [rax],al
   14000a180:	rex test eax,0x0
   14000a186:	add    BYTE PTR [rax],al
   14000a188:	sub    ah,BYTE PTR [rbx+0x0]
   14000a18e:	add    BYTE PTR [rax],al
   14000a190:	sbb    BYTE PTR [rdx+0x0],ah
   14000a196:	add    BYTE PTR [rax],al
   14000a198:	je     0x14000a13c
   14000a19a:	add    BYTE PTR [rax],al
   14000a19c:	add    BYTE PTR [rax],al
   14000a19e:	add    BYTE PTR [rax],al
   14000a1a0:	ins    BYTE PTR es:[rdi],dx
   14000a1a1:	movabs ds:0xa25a000000000000,al
   14000a1aa:	add    BYTE PTR [rax],al
   14000a1ac:	add    BYTE PTR [rax],al
   14000a1ae:	add    BYTE PTR [rax],al
   14000a1b0:	rex.W movabs ds:0xa2c8000000000000,al
   14000a1ba:	add    BYTE PTR [rax],al
   14000a1bc:	add    BYTE PTR [rax],al
   14000a1be:	add    BYTE PTR [rax],al
   14000a1c0:	out    0xa2,al
   14000a1c2:	add    BYTE PTR [rax],al
   14000a1c4:	add    BYTE PTR [rax],al
   14000a1c6:	add    BYTE PTR [rax],al
   14000a1c8:	cmp    ah,BYTE PTR [rdx+0x0]
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	sub    al,0xa2
   14000a1d2:	add    BYTE PTR [rax],al
   14000a1d4:	add    BYTE PTR [rax],al
   14000a1d6:	add    BYTE PTR [rax],al
   14000a1d8:	fisub  WORD PTR [rdx+0x0]
   14000a1de:	add    BYTE PTR [rax],al
   14000a1e0:	es test eax,0x0
   14000a1e6:	add    BYTE PTR [rax],al
   14000a1e8:	and    al,0xa2
   14000a1ea:	add    BYTE PTR [rax],al
   14000a1ec:	add    BYTE PTR [rax],al
   14000a1ee:	add    BYTE PTR [rax],al
   14000a1f0:	shl    BYTE PTR [rdx+0x0],cl
   14000a1f6:	add    BYTE PTR [rax],al
   14000a1f8:	mov    esi,0xaa
   14000a1fd:	add    BYTE PTR [rax],al
   14000a1ff:	add    ah,dl
   14000a201:	stos   BYTE PTR es:[rdi],al
   14000a202:	add    BYTE PTR [rax],al
   14000a204:	add    BYTE PTR [rax],al
   14000a206:	add    BYTE PTR [rax],al
   14000a208:	fisubr WORD PTR [rdx+0x0]
	...
   14000a216:	add    BYTE PTR [rax],al
   14000a218:	sahf   
   14000a219:	add    bl,BYTE PTR [rdi+0x70]
   14000a21c:	jne    0x14000a290
   14000a21e:	movsxd esp,DWORD PTR gs:[rcx+0x6c]
   14000a222:	ins    BYTE PTR es:[rdi],dx
   14000a223:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14000a227:	jb     0x14000a28e
   14000a229:	add    BYTE PTR gs:[rax],al
   14000a22c:	push   rbp
   14000a22d:	add    BYTE PTR [rdi+0x58],bl
   14000a230:	movsxd esi,DWORD PTR [rax+0x74]
   14000a233:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000a23c:	pop    rdi
   14000a23d:	(bad)  
   14000a23e:	ins    DWORD PTR es:[rdi],dx
   14000a23f:	jae    0x14000a2a8
   14000a241:	pop    rdi
   14000a242:	gs js  0x14000a2ae
   14000a245:	je     0x14000a247
   14000a247:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000a24d:	addr32 gs je 0x14000a2be
   14000a251:	(bad)  
   14000a252:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000a259:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000a25f:	gs je  0x14000a2c1
   14000a262:	(bad)  
   14000a263:	jo     0x14000a2d5
   14000a265:	pop    rdi
   14000a266:	je     0x14000a2e1
   14000a268:	jo     0x14000a2cf
   14000a26a:	add    BYTE PTR [rax],al
   14000a26c:	xor    al,BYTE PTR [riz*2+0x746978]
   14000a273:	add    BYTE PTR [rsi],cl
   14000a275:	add    DWORD PTR [rdi+0x65],ebx
   14000a278:	js     0x14000a2e3
   14000a27a:	je     0x14000a27c
   14000a27c:	rol    DWORD PTR [rax],0x5f
   14000a27f:	movsxd esp,DWORD PTR [rbp+0x78]
   14000a282:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000a28a:	jae    0x14000a2f1
   14000a28c:	je     0x14000a303
   14000a28e:	jae    0x14000a2f5
   14000a290:	jb     0x14000a2ff
   14000a292:	(bad)  
   14000a293:	je     0x14000a2fd
   14000a295:	gs jb  0x14000a30a
   14000a298:	add    BYTE PTR [rax],al
   14000a29a:	jge    0x14000a29d
   14000a29c:	pop    rdi
   14000a29d:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000a2a4:	ins    DWORD PTR es:[rdi],dx
   14000a2a5:	add    BYTE PTR [rdi+0x0],dl
   14000a2a8:	pop    rdi
   14000a2a9:	pop    rdi
   14000a2aa:	rex.XB pop r15
   14000a2ac:	jae    0x14000a31e
   14000a2ae:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000a2b2:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000a2b9:	ins    BYTE PTR es:[rdi],dx
   14000a2ba:	gs jb  0x14000a2bd
   14000a2bd:	add    BYTE PTR [rdx+0x63775f03],al
   14000a2c3:	ins    DWORD PTR es:[rdi],dx
   14000a2c4:	fs ins BYTE PTR es:[rdi],dx
   14000a2c6:	outs   dx,BYTE PTR ds:[rsi]
   14000a2c7:	add    BYTE PTR [rdi],ah
   14000a2c9:	add    DWORD PTR [rdi+0x66],ebx
   14000a2cc:	ins    DWORD PTR es:[rdi],dx
   14000a2cd:	outs   dx,DWORD PTR ds:[rsi]
   14000a2ce:	fs add BYTE PTR gs:[rax],al
   14000a2d2:	rol    BYTE PTR [rax],cl
   14000a2d4:	pop    rdi
   14000a2d5:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000a2d8:	ins    DWORD PTR es:[rdi],dx
   14000a2d9:	outs   dx,DWORD PTR ds:[rsi]
   14000a2da:	fs add BYTE PTR gs:[rax],al
   14000a2de:	out    0x1,al
   14000a2e0:	pop    rdi
   14000a2e1:	ins    BYTE PTR es:[rdi],dx
   14000a2e2:	outs   dx,DWORD PTR ds:[rsi]
   14000a2e3:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000a2e6:	add    ebx,DWORD PTR [r15+0x75]
   14000a2ea:	outs   dx,BYTE PTR ds:[rsi]
   14000a2eb:	ins    BYTE PTR es:[rdi],dx
   14000a2ec:	outs   dx,DWORD PTR ds:[rsi]
   14000a2ed:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000a2f0:	jnp    0x14000a2f2
   14000a2f2:	pop    rdi
   14000a2f3:	pop    rdi
   14000a2f4:	fs ins BYTE PTR es:[rdi],dx
   14000a2f6:	ins    BYTE PTR es:[rdi],dx
   14000a2f7:	outs   dx,DWORD PTR ds:[rsi]
   14000a2f8:	outs   dx,BYTE PTR ds:[rsi]
   14000a2f9:	gs js  0x14000a365
   14000a2fc:	je     0x14000a2fe
   14000a2fe:	nop
   14000a2ff:	add    bl,BYTE PTR [rdi+0x6f]
   14000a302:	outs   dx,BYTE PTR ds:[rsi]
   14000a303:	gs js  0x14000a36f
   14000a306:	je     0x14000a308
   14000a308:	ins    DWORD PTR es:[rdi],dx
   14000a309:	jae    0x14000a381
   14000a30b:	movsxd esi,DWORD PTR [rdx+0x74]
   14000a30e:	cs fs ins BYTE PTR es:[rdi],dx
   14000a311:	ins    BYTE PTR es:[rdi],dx
   14000a312:	add    BYTE PTR [rax],al
   14000a314:	pop    rbx
   14000a315:	add    BYTE PTR [rdi+0x5f],bl
   14000a318:	rex.XB js 0x14000a393
   14000a31b:	rex.RX jb 0x14000a37f
   14000a31e:	ins    DWORD PTR es:[rdi],dx
   14000a31f:	gs rex.W (bad) 
   14000a322:	outs   dx,BYTE PTR ds:[rsi]
   14000a323:	fs ins BYTE PTR es:[rdi],dx
   14000a325:	gs jb  0x14000a35b
   14000a328:	add    BYTE PTR [rax],al
   14000a32a:	(bad)  
   14000a32b:	add    BYTE PTR [rdi],bh
   14000a32d:	je     0x14000a394
   14000a32f:	jb     0x14000a39e
   14000a331:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000a338:	pop    rcx
   14000a339:	pop    r8
   14000a33b:	pop    rax
   14000a33c:	pop    rdx
   14000a33d:	add    BYTE PTR [rsi],al
   14000a33f:	add    BYTE PTR [rbx+0x6f],al
   14000a342:	rex.XB jb 0x14000a3aa
   14000a345:	(bad)  
   14000a346:	je     0x14000a3ad
   14000a348:	rex.RX jb 0x14000a3b0
   14000a34b:	gs push rsp
   14000a34d:	push   0x64616572
   14000a352:	gs fs rex.WRB (bad) 
   14000a356:	jb     0x14000a3cb
   14000a358:	push   0x72656c61
   14000a35d:	add    BYTE PTR [rax+rax*1],al
   14000a360:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000a362:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000a365:	gs push rax
   14000a367:	outs   dx,DWORD PTR ds:[rsi]
   14000a368:	imul   ebp,DWORD PTR [rsi+0x74],0x13007265
   14000a36f:	add    BYTE PTR [rdi+0x69],dl
   14000a372:	outs   dx,BYTE PTR ds:[rsi]
   14000a373:	outs   dx,DWORD PTR fs:[rsi]
   14000a375:	ja     0x14000a3ea
   14000a377:	rex.WB jae 0x14000a3cd
   14000a37a:	je     0x14000a3ee
   14000a37c:	imul   ebp,DWORD PTR [rsi+0x67],0x74706d45
   14000a383:	jns    0x14000a385
   14000a385:	add    BYTE PTR [rax+rax*1],cl
   14000a388:	push   rdi
   14000a389:	imul   ebp,DWORD PTR [rsi+0x64],0x4473776f
   14000a390:	gs ins BYTE PTR es:[rdi],dx
   14000a392:	gs je  0x14000a3fa
   14000a395:	push   rbx
   14000a396:	je     0x14000a40a
   14000a398:	imul   ebp,DWORD PTR [rsi+0x67],0x43000200
   14000a39f:	outs   dx,DWORD PTR ds:[rsi]
   14000a3a0:	rex.B
   14000a3a1:	fs fs push rdx
   14000a3a4:	gs push bx
   14000a3a7:	gs jb  0x14000a420
   14000a3aa:	gs jb  0x14000a3fd
   14000a3ad:	jb     0x14000a41e
   14000a3af:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a3b2:	jae    0x14000a3b4
   14000a3b4:	or     eax,DWORD PTR [rax]
   14000a3b6:	push   rdi
   14000a3b7:	imul   ebp,DWORD PTR [rsi+0x64],0x4373776f
   14000a3be:	jb     0x14000a425
   14000a3c0:	(bad)  
   14000a3c1:	je     0x14000a428
   14000a3c3:	push   rbx
   14000a3c4:	je     0x14000a438
   14000a3c6:	imul   ebp,DWORD PTR [rsi+0x67],0x65666552
   14000a3cd:	jb     0x14000a434
   14000a3cf:	outs   dx,BYTE PTR ds:[rsi]
   14000a3d0:	movsxd esp,DWORD PTR [rbp+0x0]
   14000a3d3:	add    BYTE PTR [rax+rax*1],ah
   14000a3d6:	push   rdx
   14000a3d7:	gs ins BYTE PTR es:[rdi],dx
   14000a3d9:	gs (bad) 
   14000a3db:	jae    0x14000a442
   14000a3dd:	push   rbx
   14000a3de:	push   rdx
   14000a3df:	push   rdi
   14000a3e0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000a3e2:	movsxd ebp,DWORD PTR [rbx+0x45]
   14000a3e5:	js     0x14000a44a
   14000a3e7:	ins    BYTE PTR es:[rdi],dx
   14000a3e8:	jne    0x14000a45d
   14000a3ea:	imul   esi,DWORD PTR [rsi+0x65],0x52000600
   14000a3f1:	outs   dx,DWORD PTR ds:[rsi]
   14000a3f2:	push   rdx
   14000a3f3:	gs jbe 0x14000a465
   14000a3f6:	imul   esp,DWORD PTR [rbp+0x41],0x63
   14000a3fa:	je     0x14000a465
   14000a3fc:	jbe    0x14000a45f
   14000a3fe:	je     0x14000a469
   14000a400:	outs   dx,DWORD PTR ds:[rsi]
   14000a401:	outs   dx,BYTE PTR ds:[rsi]
   14000a402:	rex.RX (bad) 
   14000a404:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000a408:	imul   esp,DWORD PTR [rbp+0x73],0x41000000
   14000a40f:	movsxd esi,DWORD PTR [rcx+0x75]
   14000a412:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   14000a419:	outs   dx,DWORD PTR ds:[rsi]
   14000a41a:	movsxd ebp,DWORD PTR [rbx+0x45]
   14000a41d:	js     0x14000a482
   14000a41f:	ins    BYTE PTR es:[rdi],dx
   14000a420:	jne    0x14000a495
   14000a422:	imul   esi,DWORD PTR [rsi+0x65],0x52000100
   14000a429:	outs   dx,DWORD PTR ds:[rsi]
   14000a42a:	rex.RXB
   14000a42b:	gs je  0x14000a46f
   14000a42e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14000a432:	(bad)  
   14000a433:	je     0x14000a49e
   14000a435:	outs   dx,DWORD PTR ds:[rsi]
   14000a436:	outs   dx,BYTE PTR ds:[rsi]
   14000a437:	rex.RX (bad) 
   14000a439:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000a43d:	jns    0x14000a43f
   14000a43f:	add    BYTE PTR [rdx],cl
   14000a441:	add    BYTE PTR [rdx+0x6f],dl
   14000a444:	rex.WRXB jb 0x14000a4b0
   14000a447:	imul   ebp,DWORD PTR [esi+0x61],0x72456574
   14000a44f:	jb     0x14000a4c0
   14000a451:	jb     0x14000a4aa
   14000a453:	add    BYTE PTR [rcx],cl
   14000a455:	add    BYTE PTR [rdx+0x6f],dl
   14000a458:	rex.WRXB jb 0x14000a4c4
   14000a45b:	imul   ebp,DWORD PTR [esi+0x61],0x72456574
   14000a463:	jb     0x14000a4d4
   14000a465:	jb     0x14000a467
   14000a467:	add    BYTE PTR [rip+0x6c655200],ah        # 0x1ac65f66d
   14000a46d:	gs (bad) 
   14000a46f:	jae    0x14000a4d6
   14000a471:	push   rbx
   14000a472:	push   rdx
   14000a473:	push   rdi
   14000a474:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000a476:	movsxd ebp,DWORD PTR [rbx+0x53]
   14000a479:	push   0x64657261
   14000a47e:	add    BYTE PTR [rax],al
   14000a480:	(bad)  
   14000a481:	add    BYTE PTR [rdx+0x61],dl
   14000a484:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   14000a48b:	jo     0x14000a501
   14000a48d:	imul   ebp,DWORD PTR [rdi+0x6e],0x30000
   14000a494:	push   rdx
   14000a495:	outs   dx,DWORD PTR ds:[rsi]
   14000a496:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a498:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000a4a0:	add    BYTE PTR [rax],al
   14000a4a2:	add    BYTE PTR ss:[rbx+0x6f],al
   14000a4a6:	push   rdx
   14000a4a7:	gs ins BYTE PTR es:[rdi],dx
   14000a4a9:	gs (bad) 
   14000a4ab:	jae    0x14000a512
   14000a4ad:	push   rbx
   14000a4ae:	gs jb  0x14000a527
   14000a4b1:	gs jb  0x14000a504
   14000a4b4:	jb     0x14000a525
   14000a4b6:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a4b9:	jae    0x14000a4bb
   14000a4bb:	add    BYTE PTR [rdi],dl
   14000a4bd:	add    BYTE PTR [rdi+0x69],dl
   14000a4c0:	outs   dx,BYTE PTR ds:[rsi]
   14000a4c1:	outs   dx,DWORD PTR fs:[rsi]
   14000a4c3:	ja     0x14000a538
   14000a4c5:	push   rbx
   14000a4c6:	je     0x14000a53a
   14000a4c8:	imul   ebp,DWORD PTR [rsi+0x67],0x45736148
   14000a4cf:	ins    DWORD PTR es:[rdi],dx
   14000a4d0:	(bad)  
   14000a4d1:	gs fs fs gs fs rex.WRX jne 0x14000a545
   14000a4d9:	ins    BYTE PTR es:[rdi],dx
   14000a4da:	add    BYTE PTR [rax],al
   14000a4dc:	add    DWORD PTR [rax],eax
   14000a4de:	rex.R
   14000a4df:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
   14000a4e3:	gs push rax
   14000a4e5:	outs   dx,DWORD PTR ds:[rsi]
   14000a4e6:	imul   ebp,DWORD PTR [rsi+0x74],0x3e007265
   14000a4ed:	add    BYTE PTR [rbx+0x6f],al
   14000a4f0:	push   rsp
   14000a4f1:	(bad)  
   14000a4f2:	jae    0x14000a55f
   14000a4f4:	rex.WRB
   14000a4f5:	gs ins DWORD PTR es:[rdi],dx
   14000a4f7:	rex.B ins BYTE PTR es:[rdi],dx
   14000a4f9:	ins    BYTE PTR es:[rdi],dx
   14000a4fa:	outs   dx,DWORD PTR ds:[rsi]
   14000a4fb:	movsxd eax,DWORD PTR [rax]
   14000a4fd:	add    BYTE PTR [rax+rax*1],al
   14000a500:	push   rdx
   14000a501:	outs   dx,DWORD PTR ds:[rsi]
   14000a502:	push   rdx
   14000a503:	imul   esi,DWORD PTR gs:[ebx+0x74],0x63417265
   14000a50c:	je     0x14000a577
   14000a50e:	jbe    0x14000a571
   14000a510:	je     0x14000a57b
   14000a512:	outs   dx,DWORD PTR ds:[rsi]
   14000a513:	outs   dx,BYTE PTR ds:[rsi]
   14000a514:	rex.RX (bad) 
   14000a516:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000a51a:	imul   esp,DWORD PTR [rbp+0x73],0x52000700
   14000a521:	outs   dx,DWORD PTR ds:[rsi]
   14000a522:	push   rbp
   14000a523:	outs   dx,BYTE PTR ds:[rsi]
   14000a524:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000a52b:	imul   edi,DWORD PTR [rdx+0x65],0x10000
   14000a532:	movsxd esi,DWORD PTR [r9+0x75]
   14000a536:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   14000a53d:	outs   dx,DWORD PTR ds:[rsi]
   14000a53e:	movsxd ebp,DWORD PTR [rbx+0x53]
   14000a541:	push   0x64657261
   14000a546:	add    BYTE PTR [rax],al
   14000a548:	cmp    DWORD PTR [rax],eax
   14000a54a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a54c:	push   rdx
   14000a54d:	gs jbe 0x14000a5bf
   14000a550:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   14000a554:	(bad)  
   14000a555:	jae    0x14000a5ca
   14000a557:	rex.WRXB (bad) 
   14000a559:	push   0x65
   14000a55b:	movsxd esi,DWORD PTR [rax+rax*1+0x32]
   14000a55f:	add    BYTE PTR [rbx+0x6f],al
   14000a562:	push   rdx
   14000a563:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   14000a56c:	(bad)  
   14000a56d:	jae    0x14000a5e2
   14000a56f:	rex.WRXB (bad) 
   14000a571:	push   0x65
   14000a573:	movsxd esi,DWORD PTR [rax+rax*1+0xa]
   14000a577:	add    BYTE PTR [rdi+0x69],dl
   14000a57a:	outs   dx,BYTE PTR ds:[rsi]
   14000a57b:	outs   dx,DWORD PTR fs:[rsi]
   14000a57d:	ja     0x14000a5f2
   14000a57f:	rex.XB jb 0x14000a5e7
   14000a582:	(bad)  
   14000a583:	je     0x14000a5ea
   14000a585:	push   rbx
   14000a586:	je     0x14000a5fa
   14000a588:	imul   ebp,DWORD PTR [rsi+0x67],0x57001000
   14000a58f:	imul   ebp,DWORD PTR [rsi+0x64],0x4773776f
   14000a596:	gs je  0x14000a5ec
   14000a599:	je     0x14000a60d
   14000a59b:	imul   ebp,DWORD PTR [rsi+0x67],0x42776152
   14000a5a2:	jne    0x14000a60a
   14000a5a4:	data16 gs jb 0x14000a5a8
   14000a5a8:	(bad)  
   14000a5a9:	add    BYTE PTR [rbx+0x6f],al
   14000a5ac:	push   rdx
   14000a5ad:	gs jae 0x14000a625
   14000a5b0:	ins    DWORD PTR es:[rdi],dx
   14000a5b1:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000a5b4:	(bad)  
   14000a5b5:	jae    0x14000a62a
   14000a5b7:	rex.WRXB (bad) 
   14000a5b9:	push   0x65
   14000a5bb:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   14000a5bf:	add    BYTE PTR [rip+0x656c5300],ch        # 0x1a56cf8c5
   14000a5c5:	gs jo  0x14000a5c8
   14000a5c8:	and    BYTE PTR [rax],al
   14000a5ca:	rex.RXB
   14000a5cb:	gs je  0x14000a621
   14000a5ce:	je     0x14000a631
   14000a5d0:	jb     0x14000a646
   14000a5d2:	jne    0x14000a644
   14000a5d4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a5d6:	outs   dx,WORD PTR ds:[rsi]
   14000a5d8:	push   rdi
   14000a5d9:	add    BYTE PTR [rdi],cl
   14000a5db:	add    BYTE PTR [rbx+0x65],dl
   14000a5de:	je     0x14000a635
   14000a5e0:	outs   dx,BYTE PTR ds:[rsi]
   14000a5e1:	push   0x6c646e61
   14000a5e6:	gs fs rex.RB js 0x14000a64e
   14000a5eb:	gs jo  0x14000a662
   14000a5ee:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000a5f5:	gs jb  0x14000a5f8
   14000a5f8:	adc    eax,DWORD PTR [rax]
   14000a5fa:	rex.RXB
   14000a5fb:	gs je  0x14000a64b
   14000a5fe:	outs   dx,DWORD PTR ds:[rsi]
   14000a5ff:	fs jne 0x14000a66e
   14000a602:	gs rex.W (bad) 
   14000a605:	outs   dx,BYTE PTR ds:[rsi]
   14000a606:	fs ins BYTE PTR es:[rdi],dx
   14000a608:	gs push rdi
   14000a60a:	add    BYTE PTR [rax],al
   14000a60c:	add    BYTE PTR [rax],al
   14000a60e:	push   rcx
   14000a60f:	jne    0x14000a676
   14000a611:	jb     0x14000a68c
   14000a613:	push   rax
   14000a614:	gs jb  0x14000a67d
   14000a617:	outs   dx,DWORD PTR ds:[rsi]
   14000a618:	jb     0x14000a687
   14000a61a:	(bad)  
   14000a61b:	outs   dx,BYTE PTR ds:[rsi]
   14000a61c:	movsxd esp,DWORD PTR [rbp+0x43]
   14000a61f:	outs   dx,DWORD PTR ds:[rsi]
   14000a620:	jne    0x14000a690
   14000a622:	je     0x14000a689
   14000a624:	jb     0x14000a626
   14000a626:	or     eax,0x74654700
   14000a62b:	rex.XB jne 0x14000a6a0
   14000a62e:	jb     0x14000a695
   14000a630:	outs   dx,BYTE PTR ds:[rsi]
   14000a631:	je     0x14000a683
   14000a633:	jb     0x14000a6a4
   14000a635:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a638:	jae    0x14000a683
   14000a63a:	add    BYTE PTR fs:[rcx],dl
   14000a63d:	add    BYTE PTR [rdi+0x65],al
   14000a640:	je     0x14000a685
   14000a642:	jne    0x14000a6b6
   14000a644:	jb     0x14000a6ab
   14000a646:	outs   dx,BYTE PTR ds:[rsi]
   14000a647:	je     0x14000a69d
   14000a649:	push   0x64616572
   14000a64e:	rex.WB
   14000a64f:	add    BYTE PTR fs:[rax],al
   14000a652:	adc    al,0x0
   14000a654:	rex.RXB
   14000a655:	gs je  0x14000a6ab
   14000a658:	jns    0x14000a6cd
   14000a65a:	je     0x14000a6c1
   14000a65c:	ins    DWORD PTR es:[rdi],dx
   14000a65d:	push   rsp
   14000a65e:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000a665:	ins    BYTE PTR es:[rdi],dx
   14000a666:	gs push rsp
   14000a668:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   14000a66f:	gs je  0x14000a6c6
   14000a672:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000a679:	je     0x14000a67b
   14000a67b:	add    BYTE PTR [rdx],al
   14000a67d:	add    BYTE PTR [rdx+0x74],dl
   14000a680:	ins    BYTE PTR es:[rdi],dx
   14000a681:	rex.XB (bad) 
   14000a683:	jo     0x14000a6f9
   14000a685:	jne    0x14000a6f9
   14000a687:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000a68a:	outs   dx,BYTE PTR ds:[rsi]
   14000a68b:	je     0x14000a6f2
   14000a68d:	js     0x14000a703
   14000a68f:	add    BYTE PTR [rcx],cl
   14000a691:	add    BYTE PTR [rdx+0x74],dl
   14000a694:	ins    BYTE PTR es:[rdi],dx
   14000a695:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000a697:	outs   dx,DWORD PTR ds:[rsi]
   14000a698:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000a69c:	jne    0x14000a70c
   14000a69e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000a6a2:	outs   dx,BYTE PTR ds:[rsi]
   14000a6a3:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000a6a5:	je     0x14000a719
   14000a6a7:	jns    0x14000a6a9
   14000a6a9:	add    BYTE PTR [rdi],cl
   14000a6ab:	add    BYTE PTR [rdx+0x74],dl
   14000a6ae:	ins    BYTE PTR es:[rdi],dx
   14000a6af:	push   rsi
   14000a6b0:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000a6b7:	outs   dx,BYTE PTR ds:[rsi]
   14000a6b8:	ja     0x14000a723
   14000a6ba:	outs   dx,BYTE PTR ds:[rsi]
   14000a6bb:	add    BYTE PTR fs:[rax],al
   14000a6be:	adc    DWORD PTR [rax],eax
   14000a6c0:	push   rbp
   14000a6c1:	outs   dx,BYTE PTR ds:[rsi]
   14000a6c2:	push   0x6c646e61
   14000a6c7:	gs fs rex.RB js 0x14000a72f
   14000a6cc:	gs jo  0x14000a743
   14000a6cf:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000a6d6:	gs jb  0x14000a6d9
   14000a6d9:	add    BYTE PTR [rax+rax*1],cl
   14000a6dc:	rex.RXB
   14000a6dd:	gs je  0x14000a723
   14000a6e0:	jne    0x14000a754
   14000a6e2:	jb     0x14000a749
   14000a6e4:	outs   dx,BYTE PTR ds:[rsi]
   14000a6e5:	je     0x14000a737
   14000a6e7:	jb     0x14000a758
   14000a6e9:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a6ec:	jae    0x14000a6ee
   14000a6ee:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   14000a6f3:	ins    DWORD PTR es:[rdi],dx
   14000a6f4:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000a6fb:	outs   dx,DWORD PTR ds:[rsi]
   14000a6fc:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a6ff:	jae    0x14000a701
   14000a701:	add    BYTE PTR [rcx+0x70],ah
   14000a704:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e1a7b
   14000a70e:	outs   dx,DWORD PTR ds:[rsi]
   14000a70f:	jb     0x14000a776
   14000a711:	sub    eax,0x2d6d6f63
   14000a716:	ins    BYTE PTR es:[rdi],dx
   14000a717:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31d44e
   14000a71d:	fs ins BYTE PTR es:[rdi],dx
   14000a71f:	ins    BYTE PTR es:[rdi],dx
   14000a720:	add    BYTE PTR [rax],al
   14000a722:	(bad)  
   14000a723:	jo     0x14000a78e
   14000a725:	sub    eax,0x772d736d
   14000a72a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000a731:	sub    eax,0x6c697475
   14000a736:	sub    eax,0x312d316c
   14000a73b:	sub    eax,0x6c642e30
   14000a740:	ins    BYTE PTR es:[rdi],dx
   14000a741:	add    BYTE PTR [rcx+0x70],ah
   14000a744:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e1abb
   14000a74e:	outs   dx,DWORD PTR ds:[rsi]
   14000a74f:	jb     0x14000a7b6
   14000a751:	sub    eax,0x726e6977
   14000a756:	je     0x14000a785
   14000a758:	jae    0x14000a7ce
   14000a75a:	jb     0x14000a7c5
   14000a75c:	outs   dx,BYTE PTR ds:[rsi]
   14000a75d:	addr32 sub eax,0x312d316c
   14000a763:	sub    eax,0x6c642e30
   14000a768:	ins    BYTE PTR es:[rdi],dx
   14000a769:	add    BYTE PTR [rcx+0x70],ah
   14000a76c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e1ae3
   14000a776:	outs   dx,DWORD PTR ds:[rsi]
   14000a777:	jb     0x14000a7de
   14000a779:	sub    eax,0x636e7973
   14000a77e:	push   0x2d316c2d
   14000a783:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64d5b9
   14000a789:	ins    BYTE PTR es:[rdi],dx
   14000a78a:	add    BYTE PTR [rax],al
   14000a78c:	(bad)  
   14000a78d:	jo     0x14000a7f8
   14000a78f:	sub    eax,0x772d736d
   14000a794:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000a79b:	sub    eax,0x726e6977
   14000a7a0:	je     0x14000a7cf
   14000a7a2:	ins    BYTE PTR es:[rdi],dx
   14000a7a3:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30d4da
   14000a7a9:	fs ins BYTE PTR es:[rdi],dx
   14000a7ab:	ins    BYTE PTR es:[rdi],dx
   14000a7ac:	add    BYTE PTR [rax],al
   14000a7ae:	(bad)  
   14000a7af:	jo     0x14000a81a
   14000a7b1:	sub    eax,0x772d736d
   14000a7b6:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000a7bd:	sub    eax,0x726e6977
   14000a7c2:	je     0x14000a7f1
   14000a7c4:	gs jb  0x14000a839
   14000a7c7:	outs   dx,DWORD PTR ds:[rsi]
   14000a7c8:	jb     0x14000a7f7
   14000a7ca:	ins    BYTE PTR es:[rdi],dx
   14000a7cb:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31d502
   14000a7d1:	fs ins BYTE PTR es:[rdi],dx
   14000a7d3:	ins    BYTE PTR es:[rdi],dx
   14000a7d4:	add    BYTE PTR [rax],al
   14000a7d6:	(bad)  
   14000a7d7:	jo     0x14000a842
   14000a7d9:	sub    eax,0x772d736d
   14000a7de:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000a7e5:	sub    eax,0x6f727265
   14000a7ea:	jb     0x14000a854
   14000a7ec:	(bad)  
   14000a7ed:	outs   dx,BYTE PTR ds:[rsi]
   14000a7ee:	fs ins BYTE PTR es:[rdi],dx
   14000a7f0:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000a7f7:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64d62e
   14000a7fd:	ins    BYTE PTR es:[rdi],dx
   14000a7fe:	add    BYTE PTR [rax],al
   14000a800:	(bad)  
   14000a801:	jo     0x14000a86c
   14000a803:	sub    eax,0x772d736d
   14000a808:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000a80f:	sub    eax,0x636f7270
   14000a814:	gs jae 0x14000a88a
   14000a817:	je     0x14000a881
   14000a819:	jb     0x14000a880
   14000a81b:	(bad)  
   14000a81c:	fs jae 0x14000a84c
   14000a81f:	ins    BYTE PTR es:[rdi],dx
   14000a820:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32d557
   14000a826:	fs ins BYTE PTR es:[rdi],dx
   14000a828:	ins    BYTE PTR es:[rdi],dx
   14000a829:	add    BYTE PTR [rcx+0x70],ah
   14000a82c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e1ba3
   14000a836:	outs   dx,DWORD PTR ds:[rsi]
   14000a837:	jb     0x14000a89e
   14000a839:	sub    eax,0x7262696c
   14000a83e:	(bad)  
   14000a83f:	jb     0x14000a8ba
   14000a841:	ins    BYTE PTR es:[rdi],dx
   14000a842:	outs   dx,DWORD PTR ds:[rsi]
   14000a843:	(bad)  
   14000a844:	fs gs jb 0x14000a875
   14000a848:	ins    BYTE PTR es:[rdi],dx
   14000a849:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30d581
   14000a84f:	fs ins BYTE PTR es:[rdi],dx
   14000a851:	ins    BYTE PTR es:[rdi],dx
   14000a852:	add    BYTE PTR [rax],al
   14000a854:	(bad)  
   14000a855:	jo     0x14000a8c0
   14000a857:	sub    eax,0x772d736d
   14000a85c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000a863:	sub    eax,0x666f7270
   14000a868:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000a870:	sub    eax,0x6c642e30
   14000a875:	ins    BYTE PTR es:[rdi],dx
   14000a876:	add    BYTE PTR [rax],al
   14000a878:	(bad)  
   14000a879:	jo     0x14000a8e4
   14000a87b:	sub    eax,0x772d736d
   14000a880:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000a887:	sub    eax,0x69737973
   14000a88c:	outs   dx,BYTE PTR ds:[rsi]
   14000a88d:	outs   dx,WORD PTR ds:[rsi]
   14000a88f:	sub    eax,0x322d316c
   14000a894:	sub    eax,0x6c642e31
   14000a899:	ins    BYTE PTR es:[rdi],dx
   14000a89a:	add    BYTE PTR [rax],al
   14000a89c:	(bad)  
   14000a89d:	jo     0x14000a908
   14000a89f:	sub    eax,0x772d736d
   14000a8a4:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000a8ab:	sub    eax,0x736c7472
   14000a8b0:	jne    0x14000a922
   14000a8b2:	jo     0x14000a923
   14000a8b4:	jb     0x14000a92a
   14000a8b6:	sub    eax,0x322d316c
   14000a8bb:	sub    eax,0x6c642e30
   14000a8c0:	ins    BYTE PTR es:[rdi],dx
   14000a8c1:	add    BYTE PTR [rsi],al
   14000a8c3:	add    BYTE PTR [rbx+0x74],dl
   14000a8c6:	(bad)  
   14000a8c7:	jb     0x14000a93d
   14000a8c9:	rex.R jae 0x14000a93f
   14000a8cc:	add    BYTE PTR [rax],al
   14000a8ce:	add    eax,DWORD PTR [rax]
   14000a8d0:	push   rbx
   14000a8d1:	outs   dx,BYTE PTR gs:[rsi]
   14000a8d3:	fs rex.R jae 0x14000a94a
   14000a8d7:	push   rbx
   14000a8d8:	imul   esp,DWORD PTR [rdi+0x6e],0x73416c61
   14000a8df:	jns    0x14000a94f
   14000a8e1:	movsxd eax,DWORD PTR [rax]
   14000a8e3:	add    BYTE PTR [rdx],al
   14000a8e5:	add    BYTE PTR [rbx+0x65],dl
   14000a8e8:	outs   dx,BYTE PTR ds:[rsi]
   14000a8e9:	fs rex.R jae 0x14000a960
   14000a8ed:	rex.WRB
   14000a8ee:	gs jae 0x14000a964
   14000a8f1:	(bad)  
   14000a8f2:	addr32 gs rex.B jae 0x14000a970
   14000a8f7:	outs   dx,BYTE PTR ds:[rsi]
   14000a8f8:	movsxd eax,DWORD PTR [rax]
   14000a8fa:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000a8fc:	fs gs push rdi
   14000a8ff:	imul   ebp,DWORD PTR [rsi+0x72],0x61725774
   14000a906:	jo     0x14000a936
   14000a908:	fs ins BYTE PTR es:[rdi],dx
   14000a90a:	ins    BYTE PTR es:[rdi],dx
   14000a90b:	add    BYTE PTR [rdi+0x3],ah
   14000a90e:	pop    rdi
   14000a90f:	jbe    0x14000a984
   14000a911:	outs   dx,BYTE PTR ds:[rsi]
   14000a912:	jo     0x14000a986
   14000a914:	imul   ebp,DWORD PTR [rsi+0x74],0x735f66
   14000a91b:	add    BYTE PTR [rsi+0x6c616d04],al
   14000a921:	ins    BYTE PTR es:[rdi],dx
   14000a922:	outs   dx,DWORD PTR ds:[rsi]
   14000a923:	movsxd eax,DWORD PTR [rax]
   14000a925:	add    BYTE PTR [rcx+0x3],ch
   14000a928:	pop    rdi
   14000a929:	jbe    0x14000a99e
   14000a92b:	outs   dx,BYTE PTR ds:[rsi]
   14000a92c:	ja     0x14000a99e
   14000a92e:	jb     0x14000a999
   14000a930:	outs   dx,BYTE PTR ds:[rsi]
   14000a931:	je     0x14000a999
   14000a933:	add    BYTE PTR [rdi+0x61635f00],bh
   14000a939:	ins    BYTE PTR es:[rdi],dx
   14000a93a:	ins    BYTE PTR es:[rdi],dx
   14000a93b:	outs   dx,BYTE PTR ds:[rsi]
   14000a93c:	gs ja  0x14000a9a7
   14000a93f:	add    BYTE PTR [rdx],dl
   14000a941:	add    BYTE PTR [rdi],bh
   14000a943:	(bad)  
   14000a944:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   14000a948:	gs pop rdi
   14000a94a:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14000a951:	rex.RB
   14000a952:	rex.B
   14000a953:	rex.B
   14000a954:	rex pop rax
   14000a956:	pop    rdx
   14000a957:	add    BYTE PTR [rax+rax*1],dl
   14000a95a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a95c:	imul   esi,DWORD PTR [rdi+rcx*2+0x6e],0x6f436563
   14000a964:	ins    DWORD PTR es:[rdi],dx
   14000a965:	jo     0x14000a9d3
   14000a967:	gs je  0x14000a9cf
   14000a96a:	add    BYTE PTR [rax],al
   14000a96c:	or     DWORD PTR [rax],eax
   14000a96e:	rex.RB jbe 0x14000a9d6
   14000a971:	outs   dx,BYTE PTR ds:[rsi]
   14000a972:	je     0x14000a9cb
   14000a974:	jb     0x14000a9df
   14000a976:	je     0x14000a9dd
   14000a978:	push   rsp
   14000a979:	jb     0x14000a9dc
   14000a97b:	outs   dx,BYTE PTR ds:[rsi]
   14000a97c:	jae    0x14000a9e4
   14000a97e:	gs jb  0x14000a981
   14000a981:	add    BYTE PTR [rdi],dl
   14000a983:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   14000a987:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14000a990:	js     0x14000a9e9
   14000a992:	add    BYTE PTR [rax],al
   14000a994:	adc    eax,DWORD PTR [rax]
   14000a996:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a998:	imul   esi,DWORD PTR [rdi+rcx*2+0x6e],0x65426563
   14000a9a0:	imul   ebp,DWORD PTR [esi+0x49],0x6974696e
   14000a9a8:	(bad)  
   14000a9a9:	ins    BYTE PTR es:[rdi],dx
   14000a9aa:	imul   edi,DWORD PTR [rdx+0x65],0x47001200
   14000a9b1:	gs je  0x14000aa01
   14000a9b4:	outs   dx,DWORD PTR ds:[rsi]
   14000a9b5:	fs jne 0x14000aa24
   14000a9b8:	gs rex.W (bad) 
   14000a9bb:	outs   dx,BYTE PTR ds:[rsi]
   14000a9bc:	fs ins BYTE PTR es:[rdi],dx
   14000a9be:	gs rex.RB js 0x14000aa19
   14000a9c2:	add    BYTE PTR [rax],al
   14000a9c4:	(bad)  
   14000a9c5:	add    BYTE PTR [rdi+0x75],cl
   14000a9c8:	je     0x14000aa3a
   14000a9ca:	jne    0x14000aa40
   14000a9cc:	rex.R
   14000a9cd:	gs (bad) 
   14000a9cf:	jne    0x14000aa38
   14000a9d1:	push   rbx
   14000a9d2:	je     0x14000aa46
   14000a9d4:	imul   ebp,DWORD PTR [rsi+0x67],0x8000057
   14000a9db:	add    BYTE PTR [rsi+0x6f],al
   14000a9de:	jb     0x14000aa4d
   14000a9e0:	(bad)  
   14000a9e1:	je     0x14000aa30
   14000a9e3:	gs jae 0x14000aa59
   14000a9e6:	(bad)  
   14000a9e7:	addr32 gs push rdi
   14000a9ea:	add    BYTE PTR [rax],al
   14000a9ec:	add    eax,0x65764500
   14000a9f1:	outs   dx,BYTE PTR ds:[rsi]
   14000a9f2:	je     0x14000aa49
   14000a9f4:	outs   dx,BYTE PTR ds:[rsi]
   14000a9f5:	jb     0x14000aa5c
   14000a9f7:	imul   esi,DWORD PTR [ebx+0x74],0x4007265
   14000a9ff:	add    BYTE PTR [rbp+0x76],al
   14000aa02:	outs   dx,BYTE PTR gs:[rsi]
   14000aa04:	je     0x14000aa59
   14000aa06:	gs je  0x14000aa52
   14000aa09:	outs   dx,BYTE PTR ds:[rsi]
   14000aa0a:	outs   dx,WORD PTR ds:[rsi]
   14000aa0c:	jb     0x14000aa7b
   14000aa0e:	(bad)  
   14000aa0f:	je     0x14000aa7a
   14000aa11:	outs   dx,DWORD PTR ds:[rsi]
   14000aa12:	outs   dx,BYTE PTR ds:[rsi]
   14000aa13:	add    BYTE PTR [rax+rax*1],dl
   14000aa16:	rex.RXB
   14000aa17:	gs je  0x14000aa6a
   14000aa1a:	jb     0x14000aa8b
   14000aa1c:	movsxd eax,DWORD PTR [rcx+0x64]
   14000aa1f:	fs jb  0x14000aa87
   14000aa22:	jae    0x14000aa97
   14000aa24:	add    BYTE PTR [rax],al
   14000aa26:	(bad)  
   14000aa27:	add    BYTE PTR [rdi+0x65],al
   14000aa2a:	je     0x14000aa79
   14000aa2c:	outs   dx,DWORD PTR ds:[rsi]
   14000aa2d:	fs jne 0x14000aa9c
   14000aa30:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   14000aa3a:	add    BYTE PTR [rax],al
   14000aa3c:	add    eax,DWORD PTR [rax]
   14000aa3e:	rex.RB jbe 0x14000aaa6
   14000aa41:	outs   dx,BYTE PTR ds:[rsi]
   14000aa42:	je     0x14000aa96
   14000aa44:	imul   esi,DWORD PTR gs:[ebx+0x74],0x61007265
   14000aa4d:	jo     0x14000aab8
   14000aa4f:	sub    eax,0x772d736d
   14000aa54:	imul   ebp,DWORD PTR [rsi+0x2d],0x6e657665
   14000aa5b:	je     0x14000aac6
   14000aa5d:	outs   dx,BYTE PTR ds:[rsi]
   14000aa5e:	addr32 sub eax,0x766f7270
   14000aa64:	imul   esp,DWORD PTR [rbp+riz*2+0x72],0x2d316c2d
   14000aa6c:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac64d8a2
   14000aa72:	ins    BYTE PTR es:[rdi],dx
   14000aa73:	add    BYTE PTR [rcx+0x70],ah
   14000aa76:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e1ded
   14000aa80:	outs   dx,DWORD PTR ds:[rsi]
   14000aa81:	jb     0x14000aae8
   14000aa83:	sub    eax,0x75626564
   14000aa88:	addr32 sub eax,0x312d316c
   14000aa8e:	sub    eax,0x6c642e31
   14000aa93:	ins    BYTE PTR es:[rdi],dx
   14000aa94:	add    BYTE PTR [rax],al
   14000aa96:	(bad)  
   14000aa97:	jo     0x14000ab02
   14000aa99:	sub    eax,0x772d736d
   14000aa9e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000aaa5:	sub    eax,0x61636f6c
   14000aaaa:	ins    BYTE PTR es:[rdi],dx
   14000aaab:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   14000aab2:	sub    eax,0x322d316c
   14000aab7:	sub    eax,0x6c642e31
   14000aabc:	ins    BYTE PTR es:[rdi],dx
   14000aabd:	add    BYTE PTR [rbx+0x0],cl
   14000aac0:	pop    rdi
   14000aac1:	rex.XB js 0x14000ab3c
   14000aac4:	push   rsp
   14000aac5:	push   0x45776f72
   14000aaca:	js     0x14000ab2f
   14000aacc:	gs jo  0x14000ab43
   14000aacf:	imul   ebp,DWORD PTR [rdi+0x6e],0x4920000
   14000aad6:	ins    DWORD PTR es:[rdi],dx
   14000aad7:	gs ins DWORD PTR es:[rdi],dx
   14000aad9:	movsxd esi,DWORD PTR [rax+0x79]
   14000aadc:	add    BYTE PTR [rax],al
   14000aade:	xchg   esi,eax
   14000aadf:	add    al,0x6d
   14000aae1:	gs ins DWORD PTR es:[rdi],dx
   14000aae3:	jae    0x14000ab4a
   14000aae5:	je     0x14000aae7
	...

Disassembly of section .data:

000000014000b000 <.data>:
   14000b000:	add    DWORD PTR [rax],eax
   14000b002:	add    BYTE PTR [rax],al
   14000b004:	add    BYTE PTR [rax],al
   14000b006:	add    BYTE PTR [rax],al
   14000b008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000b00e:	add    BYTE PTR [rax],al
   14000b010:	int    0x5d
   14000b012:	and    dl,dl
   14000b014:	data16 (bad) 
   14000b016:	(bad)  
   14000b017:	inc    DWORD PTR [rax]
	...
   14000b025:	add    BYTE PTR [rax],al
   14000b027:	add    ah,al
   14000b029:	xchg   ebx,eax
   14000b02a:	add    BYTE PTR [rax+0x1],al
	...
   14000b05d:	add    BYTE PTR [rax],al
   14000b05f:	add    BYTE PTR [rcx],al
   14000b061:	add    BYTE PTR [rax],al
   14000b063:	add    bh,bh
   14000b065:	(bad)  
   14000b066:	(bad)  
   14000b067:	inc    DWORD PTR [rax]
	...
   14000b075:	add    BYTE PTR [rax],al
   14000b077:	add    BYTE PTR [rdi],cl
   14000b079:	xchg   esp,eax
   14000b07a:	add    BYTE PTR [rax+0x1],al
	...
   14000b0ad:	add    BYTE PTR [rax],al
   14000b0af:	add    BYTE PTR [rcx],al
	...
   14000b0bd:	add    BYTE PTR [rax],al
   14000b0bf:	add    BYTE PTR [rax+0x1400085],bl
	...
   14000b0cd:	add    BYTE PTR [rax],al
   14000b0cf:	add    BYTE PTR [rsi],ch
   14000b0d1:	(bad)  
   14000b0d2:	push   r14
   14000b0d4:	push   rdx
   14000b0d5:	gs jae 0x14000b14d
   14000b0d8:	ins    BYTE PTR es:[rdi],dx
   14000b0d9:	je     0x14000b120
   14000b0db:	js     0x14000b140
   14000b0dd:	gs jo  0x14000b154
   14000b0e0:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c697740
   14000b0e7:	rex
   14000b0e8:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000014000c000 <.pdata>:
   14000c000:	adc    BYTE PTR [rax],dl
   14000c002:	add    BYTE PTR [rax],al
   14000c004:	rcl    DWORD PTR [rax],cl
   14000c006:	add    BYTE PTR [rax],al
   14000c008:	mov    eax,0xdc000099
   14000c00d:	adc    BYTE PTR [rax],al
   14000c00f:	add    BYTE PTR [rcx+0x11],bh
   14000c012:	add    BYTE PTR [rax],al
   14000c014:	mov    al,0x99
   14000c016:	add    BYTE PTR [rax],al
   14000c018:	adc    BYTE PTR [rcx],0x0
   14000c01b:	add    cl,dl
   14000c01d:	adc    DWORD PTR [rax],eax
   14000c01f:	add    al,ah
   14000c021:	xchg   edi,eax
   14000c022:	add    BYTE PTR [rax],al
   14000c024:	loopne 0x14000c037
   14000c026:	add    BYTE PTR [rax],al
   14000c028:	cmp    DWORD PTR [rdx],edx
   14000c02a:	add    BYTE PTR [rax],al
   14000c02c:	loopne 0x14000bfc5
   14000c02e:	add    BYTE PTR [rax],al
   14000c030:	jo     0x14000c044
   14000c032:	add    BYTE PTR [rax],al
   14000c034:	cwde   
   14000c035:	adc    al,BYTE PTR [rax]
   14000c037:	add    BYTE PTR [rax-0x68],ah
   14000c03a:	add    BYTE PTR [rax],al
   14000c03c:	movabs al,ds:0x60000012ea000012
   14000c045:	cwde   
   14000c046:	add    BYTE PTR [rax],al
   14000c048:	(bad)  
   14000c049:	adc    eax,DWORD PTR [rax]
   14000c04b:	add    dl,ch
   14000c04d:	adc    eax,DWORD PTR [rax]
   14000c04f:	add    BYTE PTR [rax-0xfffff69],ah
   14000c055:	adc    eax,DWORD PTR [rax]
   14000c057:	add    BYTE PTR [rdx+0x14],bh
   14000c05a:	add    BYTE PTR [rax],al
   14000c05c:	movabs al,ds:0x800001480000097
   14000c065:	adc    eax,0x97a00000
   14000c06a:	add    BYTE PTR [rax],al
   14000c06c:	adc    BYTE PTR [rip+0x157b0000],dl        # 0x1557bc072
   14000c072:	add    BYTE PTR [rax],al
   14000c074:	mov    eax,0x90000097
   14000c079:	adc    eax,0x15da0000
   14000c07e:	add    BYTE PTR [rax],al
   14000c080:	rcl    BYTE PTR [rdi+0x15e00000],1
   14000c086:	add    BYTE PTR [rax],al
   14000c088:	sub    BYTE PTR [rsi],dl
   14000c08a:	add    BYTE PTR [rax],al
   14000c08c:	rcl    BYTE PTR [rdi+0x16300000],1
   14000c092:	add    BYTE PTR [rax],al
   14000c094:	ret    
   14000c095:	(bad)  
   14000c096:	add    BYTE PTR [rax],al
   14000c098:	mov    eax,0xd0000097
   14000c09d:	(bad)  
   14000c09e:	add    BYTE PTR [rax],al
   14000c0a0:	add    DWORD PTR [rdi],edx
   14000c0a2:	add    BYTE PTR [rax],al
   14000c0a4:	loopne 0x14000c03d
   14000c0a6:	add    BYTE PTR [rax],al
   14000c0a8:	or     BYTE PTR [rdi],dl
   14000c0aa:	add    BYTE PTR [rax],al
   14000c0ac:	xor    dl,BYTE PTR [rdi]
   14000c0ae:	add    BYTE PTR [rax],al
   14000c0b0:	call   0x17800c14c
   14000c0b5:	(bad)  
   14000c0b6:	add    BYTE PTR [rax],al
   14000c0b8:	(bad)  
   14000c0b9:	(bad)  
   14000c0ba:	add    BYTE PTR [rax],al
   14000c0bc:	call   0x1a800c158
   14000c0c1:	(bad)  
   14000c0c2:	add    BYTE PTR [rax],al
   14000c0c4:	mov    ds,WORD PTR [rax]
   14000c0c6:	add    BYTE PTR [rax],al
   14000c0c8:	hlt    
   14000c0c9:	xchg   edi,eax
   14000c0ca:	add    BYTE PTR [rax],al
   14000c0cc:	xchg   esp,eax
   14000c0cd:	sbb    BYTE PTR [rax],al
   14000c0cf:	add    BYTE PTR [rip+0xc00001a],dl        # 0x14c00c0ef
   14000c0d5:	cwde   
   14000c0d6:	add    BYTE PTR [rax],al
   14000c0d8:	and    BYTE PTR [rdx],bl
   14000c0da:	add    BYTE PTR [rax],al
   14000c0dc:	add    DWORD PTR [rbx],ebx
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	and    BYTE PTR [rax+0x1b080000],bl
   14000c0e6:	add    BYTE PTR [rax],al
   14000c0e8:	mov    eax,0x3400001c
   14000c0ed:	cwde   
   14000c0ee:	add    BYTE PTR [rax],al
   14000c0f0:	rcr    BYTE PTR [rax+rax*1],0x0
   14000c0f4:	push   rbx
   14000c0f5:	sbb    eax,0x97d00000
   14000c0fa:	add    BYTE PTR [rax],al
   14000c0fc:	sbb    BYTE PTR [rip+0x1def0000],0x0        # 0x15defc103
   14000c103:	add    al,dl
   14000c105:	xchg   edi,eax
   14000c106:	add    BYTE PTR [rax],al
   14000c108:	add    BYTE PTR [rsi],bl
   14000c10a:	add    BYTE PTR [rax],al
   14000c10c:	jae    0x14000c12d
   14000c10e:	add    BYTE PTR [rax],al
   14000c110:	rcl    BYTE PTR [rdi+0x1fc00000],1
   14000c116:	add    BYTE PTR [rax],al
   14000c118:	rex.WRB and BYTE PTR [r8],r8b
   14000c11b:	add    BYTE PTR [rax-0x68],dl
   14000c11e:	add    BYTE PTR [rax],al
   14000c120:	(bad)  
   14000c121:	and    BYTE PTR [rax],al
   14000c123:	add    bl,al
   14000c125:	and    BYTE PTR [rax],al
   14000c127:	add    al,dl
   14000c129:	xchg   edi,eax
   14000c12a:	add    BYTE PTR [rax],al
   14000c12c:	shl    BYTE PTR [rax],1
   14000c12e:	add    BYTE PTR [rax],al
   14000c130:	out    dx,eax
   14000c131:	and    BYTE PTR [rax],al
   14000c133:	add    BYTE PTR [rax-0x68],ah
   14000c136:	add    BYTE PTR [rax],al
   14000c138:	add    BYTE PTR [rcx],ah
   14000c13a:	add    BYTE PTR [rax],al
   14000c13c:	sbb    esp,DWORD PTR [rcx]
   14000c13e:	add    BYTE PTR [rax],al
   14000c140:	(bad)  
   14000c141:	cwde   
   14000c142:	add    BYTE PTR [rax],al
   14000c144:	xor    BYTE PTR [rcx],ah
   14000c146:	add    BYTE PTR [rax],al
   14000c148:	and    BYTE PTR [rdx],ah
   14000c14a:	add    BYTE PTR [rax],al
   14000c14c:	push   0x28000098
   14000c151:	and    al,BYTE PTR [rax]
   14000c153:	add    BYTE PTR [rdx+0x23],bh
   14000c156:	add    BYTE PTR [rax],al
   14000c158:	js     0x14000c0f2
   14000c15a:	add    BYTE PTR [rax],al
   14000c15c:	shl    BYTE PTR [rbx],0x0
   14000c15f:	add    BYTE PTR [rbx+0x24],ch
   14000c162:	add    BYTE PTR [rax],al
   14000c164:	xchg   esp,eax
   14000c165:	cwde   
   14000c166:	add    BYTE PTR [rax],al
   14000c168:	and    BYTE PTR [rax+rax*1],0x0
   14000c16c:	iret   
   14000c16d:	and    al,0x0
   14000c16f:	add    al,dl
   14000c171:	xchg   edi,eax
   14000c172:	add    BYTE PTR [rax],al
   14000c174:	loopne 0x14000c19a
   14000c176:	add    BYTE PTR [rax],al
   14000c178:	sbb    BYTE PTR [rsi],ah
   14000c17a:	add    BYTE PTR [rax],al
   14000c17c:	lods   al,BYTE PTR ds:[rsi]
   14000c17d:	cwde   
   14000c17e:	add    BYTE PTR [rax],al
   14000c180:	and    BYTE PTR [rsi],ah
   14000c182:	add    BYTE PTR [rax],al
   14000c184:	xor    al,0x26
   14000c186:	add    BYTE PTR [rax],al
   14000c188:	(bad)  
   14000c189:	cwde   
   14000c18a:	add    BYTE PTR [rax],al
   14000c18c:	push   rax
   14000c18d:	add    BYTE PTR es:[rax],al
   14000c190:	cdq    
   14000c191:	add    BYTE PTR es:[rax],al
   14000c194:	rcl    BYTE PTR [rdi+0x26ac0000],1
   14000c19a:	add    BYTE PTR [rax],al
   14000c19c:	sub    DWORD PTR [rdi],esp
   14000c19e:	add    BYTE PTR [rax],al
   14000c1a0:	rcl    BYTE PTR [rdi+0x27300000],1
   14000c1a6:	add    BYTE PTR [rax],al
   14000c1a8:	push   rbx
   14000c1a9:	(bad)  
   14000c1aa:	add    BYTE PTR [rax],al
   14000c1ac:	loopne 0x14000c145
   14000c1ae:	add    BYTE PTR [rax],al
   14000c1b0:	(bad)  
   14000c1b1:	(bad)  
   14000c1b2:	add    BYTE PTR [rax],al
   14000c1b4:	stos   DWORD PTR es:[rdi],eax
   14000c1b5:	(bad)  
   14000c1b6:	add    BYTE PTR [rax],al
   14000c1b8:	call   0x10000c254
   14000c1bd:	(bad)  
   14000c1be:	add    BYTE PTR [rax],al
   14000c1c0:	out    dx,eax
   14000c1c1:	(bad)  
   14000c1c2:	add    BYTE PTR [rax],al
   14000c1c4:	call   0x14000c260
   14000c1c9:	sub    BYTE PTR [rax],al
   14000c1cb:	add    BYTE PTR [rbx+0x28],cl
   14000c1ce:	add    BYTE PTR [rax],al
   14000c1d0:	call   0x19400c26c
   14000c1d5:	sub    BYTE PTR [rax],al
   14000c1d7:	add    BYTE PTR [rax],dl
   14000c1d9:	sub    DWORD PTR [rax],eax
   14000c1db:	add    BYTE PTR [rax+0x18000097],bh
   14000c1e1:	sub    DWORD PTR [rax],eax
   14000c1e3:	add    BYTE PTR [rcx+rbp*1-0x67380000],cl
   14000c1ea:	add    BYTE PTR [rax],al
   14000c1ec:	xchg   esp,eax
   14000c1ed:	sub    DWORD PTR [rax],eax
   14000c1ef:	add    BYTE PTR [rdi-0x23ffffd6],bh
   14000c1f5:	cwde   
   14000c1f6:	add    BYTE PTR [rax],al
   14000c1f8:	shr    BYTE PTR [rdx],1
   14000c1fa:	add    BYTE PTR [rax],al
   14000c1fc:	rex.XB sub eax,DWORD PTR [r8]
   14000c1ff:	add    al,cl
   14000c201:	cwde   
   14000c202:	add    BYTE PTR [rax],al
   14000c204:	push   rax
   14000c205:	sub    eax,DWORD PTR [rax]
   14000c207:	add    BYTE PTR [rdi-0xfffffd4],bl
   14000c20d:	cwde   
   14000c20e:	add    BYTE PTR [rax],al
   14000c210:	adc    BYTE PTR [rip+0x2d700000],ch        # 0x16d70c216
   14000c216:	add    BYTE PTR [rax],al
   14000c218:	call   0xc000c2b4
   14000c21d:	sub    eax,0x2e420000
   14000c222:	add    BYTE PTR [rax],al
   14000c224:	or     al,0x99
   14000c226:	add    BYTE PTR [rax],al
   14000c228:	push   rax
   14000c229:	add    BYTE PTR cs:[rax],al
   14000c22c:	stos   DWORD PTR es:[rdi],eax
   14000c22d:	add    BYTE PTR cs:[rax],al
   14000c230:	loopne 0x14000c1c9
   14000c232:	add    BYTE PTR [rax],al
   14000c234:	mov    ah,0x2e
   14000c236:	add    BYTE PTR [rax],al
   14000c238:	xor    ch,BYTE PTR [rdi]
   14000c23a:	add    BYTE PTR [rax],al
   14000c23c:	sbb    al,0x99
   14000c23e:	add    BYTE PTR [rax],al
   14000c240:	cmp    BYTE PTR [rdi],ch
   14000c242:	add    BYTE PTR [rax],al
   14000c244:	xor    WORD PTR [rax],ax
   14000c247:	add    BYTE PTR [rax],ch
   14000c249:	cdq    
   14000c24a:	add    BYTE PTR [rax],al
   14000c24c:	add    BYTE PTR [rdx],dh
   14000c24e:	add    BYTE PTR [rax],al
   14000c250:	or     BYTE PTR [rbx],dh
   14000c252:	add    BYTE PTR [rax],al
   14000c254:	cqo    
   14000c256:	add    BYTE PTR [rax],al
   14000c258:	adc    BYTE PTR [rbx],dh
   14000c25a:	add    BYTE PTR [rax],al
   14000c25c:	push   rcx
   14000c25d:	xor    eax,DWORD PTR [rax]
   14000c25f:	add    al,ah
   14000c261:	xchg   edi,eax
   14000c262:	add    BYTE PTR [rax],al
   14000c264:	(bad)  
   14000c265:	xor    eax,DWORD PTR [rax]
   14000c267:	add    bh,ah
   14000c269:	xor    eax,DWORD PTR [rax]
   14000c26b:	add    al,dl
   14000c26d:	xchg   edi,eax
   14000c26e:	add    BYTE PTR [rax],al
   14000c270:	lock xor eax,DWORD PTR [rax]
   14000c273:	add    bl,bl
   14000c275:	xor    al,0x0
   14000c277:	add    al,cl
   14000c279:	cwde   
   14000c27a:	add    BYTE PTR [rax],al
   14000c27c:	in     al,0x34
   14000c27e:	add    BYTE PTR [rax],al
   14000c280:	fwait
   14000c281:	cmp    BYTE PTR [rax],al
   14000c283:	add    BYTE PTR [rax-0x67],ah
   14000c286:	add    BYTE PTR [rax],al
   14000c288:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c289:	cmp    BYTE PTR [rax],al
   14000c28b:	add    bl,cl
   14000c28d:	cmp    BYTE PTR [rax],al
   14000c28f:	add    al,ah
   14000c291:	xchg   edi,eax
   14000c292:	add    BYTE PTR [rax],al
   14000c294:	(bad)  
   14000c295:	cmp    BYTE PTR [rax],al
   14000c297:	add    BYTE PTR [rax],ch
   14000c299:	cmp    al,0x0
   14000c29b:	add    BYTE PTR [rcx+rbx*4+0x0],bh
   14000c29f:	add    BYTE PTR [rax],dh
   14000c2a1:	cmp    al,0x0
   14000c2a3:	add    BYTE PTR [rbp+rdi*1+0x0],al
   14000c2a7:	add    BYTE PTR [rcx+rbx*4+0x3d4c0000],dl
   14000c2ae:	add    BYTE PTR [rax],al
   14000c2b0:	nop
   14000c2b1:	cmp    eax,0x97e00000
   14000c2b6:	add    BYTE PTR [rax],al
   14000c2b8:	sub    BYTE PTR [rsi],bh
   14000c2ba:	add    BYTE PTR [rax],al
   14000c2bc:	data16 add BYTE PTR ds:[rax],al
   14000c2c0:	test   al,0x99
   14000c2c2:	add    BYTE PTR [rax],al
   14000c2c4:	ins    BYTE PTR es:[rdi],dx
   14000c2c5:	add    BYTE PTR ds:[rax],al
   14000c2c8:	test   eax,0xb000003e
   14000c2cd:	cdq    
   14000c2ce:	add    BYTE PTR [rax],al
   14000c2d0:	mov    al,0x3e
   14000c2d2:	add    BYTE PTR [rax],al
   14000c2d4:	loope  0x14000c314
   14000c2d6:	add    BYTE PTR [rax],al
   14000c2d8:	mov    al,0x99
   14000c2da:	add    BYTE PTR [rax],al
   14000c2dc:	add    BYTE PTR [rdi],bh
   14000c2de:	add    BYTE PTR [rax],al
   14000c2e0:	sub    eax,0x6000003f
   14000c2e5:	cwde   
   14000c2e6:	add    BYTE PTR [rax],al
   14000c2e8:	xor    al,0x3f
   14000c2ea:	add    BYTE PTR [rax],al
   14000c2ec:	mov    BYTE PTR [rcx+0x0],0x0
   14000c2f0:	(bad)  
   14000c2f1:	cdq    
   14000c2f2:	add    BYTE PTR [rax],al
   14000c2f4:	int3   
   14000c2f5:	add    BYTE PTR [r8],al
   14000c2f8:	fwait
   14000c2f9:	add    BYTE PTR [rax],r8b
   14000c2fc:	hlt    
   14000c2fd:	cdq    
   14000c2fe:	add    BYTE PTR [rax],al
   14000c300:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c301:	add    BYTE PTR [rax],r8b
   14000c304:	push   rbx
   14000c305:	add    BYTE PTR [r8],r8b
   14000c308:	adc    al,0x9a
   14000c30a:	add    BYTE PTR [rax],al
   14000c30c:	(bad)  
   14000c30d:	add    BYTE PTR [r8],r8b
   14000c310:	mov    esp,0xd0000045
   14000c315:	xchg   edi,eax
   14000c316:	add    BYTE PTR [rax],al
   14000c318:	rol    BYTE PTR [rbp+0x0],1
   14000c31b:	add    BYTE PTR [rbx],ch
   14000c31d:	rex.RX add BYTE PTR [rax],r8b
   14000c320:	rcl    BYTE PTR [rdi+0x46400000],1
   14000c326:	add    BYTE PTR [rax],al
   14000c328:	xchg   ebp,eax
   14000c329:	rex.RX add BYTE PTR [rax],r8b
   14000c32c:	enter  0x98,0x0
   14000c330:	pushf  
   14000c331:	rex.RX add BYTE PTR [rax],r8b
   14000c334:	rex.RXB add BYTE PTR cs:[r8],r8b
   14000c338:	loopne 0x14000c2d1
   14000c33a:	add    BYTE PTR [rax],al
   14000c33c:	rex
   14000c33d:	rex.RXB add BYTE PTR [r8],r8b
   14000c340:	in     al,dx
   14000c341:	rex.WB add BYTE PTR [r8],al
   14000c344:	sub    al,0x9a
   14000c346:	add    BYTE PTR [rax],al
   14000c348:	hlt    
   14000c349:	rex.WB add BYTE PTR [r8],al
   14000c34c:	mov    bl,0x4a
   14000c34e:	add    BYTE PTR [rax],al
   14000c350:	rex.WR (bad) 
   14000c352:	add    BYTE PTR [rax],al
   14000c354:	mov    esp,0x900004a
   14000c359:	rex.WR add BYTE PTR [rax],r8b
   14000c35c:	pop    rax
   14000c35d:	(bad)  
   14000c35e:	add    BYTE PTR [rax],al
   14000c360:	adc    BYTE PTR [rax+rax*1+0x0],cl
   14000c364:	pop    rbp
   14000c365:	rex.WRB add BYTE PTR [r8],r8b
   14000c368:	pop    rax
   14000c369:	(bad)  
   14000c36a:	add    BYTE PTR [rax],al
   14000c36c:	rex.WRB add BYTE PTR fs:[r8],r8b
   14000c370:	mov    cl,0x4e
   14000c372:	add    BYTE PTR [rax],al
   14000c374:	pop    rax
   14000c375:	(bad)  
   14000c376:	add    BYTE PTR [rax],al
   14000c378:	mov    eax,0x500004e
   14000c37d:	push   rax
   14000c37e:	add    BYTE PTR [rax],al
   14000c380:	pop    rax
   14000c381:	(bad)  
   14000c382:	add    BYTE PTR [rax],al
   14000c384:	or     al,0x50
   14000c386:	add    BYTE PTR [rax],al
   14000c388:	pop    rcx
   14000c389:	push   rcx
   14000c38a:	add    BYTE PTR [rax],al
   14000c38c:	pop    rax
   14000c38d:	(bad)  
   14000c38e:	add    BYTE PTR [rax],al
   14000c390:	(bad)  
   14000c391:	push   rcx
   14000c392:	add    BYTE PTR [rax],al
   14000c394:	lods   eax,DWORD PTR ds:[rsi]
   14000c395:	push   rdx
   14000c396:	add    BYTE PTR [rax],al
   14000c398:	pop    rax
   14000c399:	(bad)  
   14000c39a:	add    BYTE PTR [rax],al
   14000c39c:	rcl    BYTE PTR [rdx+0x0],0x0
   14000c3a0:	test   al,0x54
   14000c3a2:	add    BYTE PTR [rax],al
   14000c3a4:	or     al,0x99
   14000c3a6:	add    BYTE PTR [rax],al
   14000c3a8:	mov    al,0x54
   14000c3aa:	add    BYTE PTR [rax],al
   14000c3ac:	xor    eax,0x78000055
   14000c3b1:	(bad)  
   14000c3b2:	add    BYTE PTR [rax],al
   14000c3b4:	adc    BYTE PTR [rbp+0x0],0x0
   14000c3b8:	jrcxz  0x14000c40f
   14000c3ba:	add    BYTE PTR [rax],al
   14000c3bc:	rcl    BYTE PTR [rdi+0x56500000],1
   14000c3c2:	add    BYTE PTR [rax],al
   14000c3c4:	loopne 0x14000c41c
   14000c3c6:	add    BYTE PTR [rax],al
   14000c3c8:	sbb    BYTE PTR [rdx+0x56f00000],0x0
   14000c3cf:	add    BYTE PTR [rsi+0x57],bh
   14000c3d2:	add    BYTE PTR [rax],al
   14000c3d4:	xchg   esp,eax
   14000c3d5:	(bad)  
   14000c3d6:	add    BYTE PTR [rax],al
   14000c3d8:	nop
   14000c3d9:	push   rdi
   14000c3da:	add    BYTE PTR [rax],al
   14000c3dc:	(bad)  
   14000c3dd:	pop    rax
   14000c3de:	add    BYTE PTR [rax],al
   14000c3e0:	xchg   esp,eax
   14000c3e1:	(bad)  
   14000c3e2:	add    BYTE PTR [rax],al
   14000c3e4:	xor    BYTE PTR [rax+0x0],bl
   14000c3e7:	add    BYTE PTR [rax+rbx*2+0x0],ch
   14000c3eb:	add    al,ch
   14000c3ed:	xchg   edi,eax
   14000c3ee:	add    BYTE PTR [rax],al
   14000c3f0:	sbb    BYTE PTR [rax+0x0],0x0
   14000c3f4:	jns    0x14000c44f
   14000c3f6:	add    BYTE PTR [rax],al
   14000c3f8:	rcl    BYTE PTR [rdi+0x59800000],1
   14000c3fe:	add    BYTE PTR [rax],al
   14000c400:	or     eax,0x5000005a
   14000c405:	cwde   
   14000c406:	add    BYTE PTR [rax],al
   14000c408:	and    BYTE PTR [rdx+0x0],bl
   14000c40b:	add    BYTE PTR [rax],dl
   14000c40d:	pop    rbx
   14000c40e:	add    BYTE PTR [rax],al
   14000c410:	push   0x18000098
   14000c415:	pop    rbx
   14000c416:	add    BYTE PTR [rax],al
   14000c418:	(bad)  
   14000c419:	pop    rsp
   14000c41a:	add    BYTE PTR [rax],al
   14000c41c:	test   al,0x9a
   14000c41e:	add    BYTE PTR [rax],al
   14000c420:	adc    BYTE PTR [rax+rax*1+0x0],bl
   14000c424:	mov    edi,0xb800005c
   14000c429:	(bad)  
   14000c42a:	add    BYTE PTR [rax],al
   14000c42c:	enter  0x5c,0x0
   14000c430:	pop    rbp
   14000c431:	pop    rbp
   14000c432:	add    BYTE PTR [rax],al
   14000c434:	fcomp  QWORD PTR [rax+0x5d700000]
   14000c43a:	add    BYTE PTR [rax],al
   14000c43c:	ret    
   14000c43d:	pop    rsi
   14000c43e:	add    BYTE PTR [rax],al
   14000c440:	rcr    BYTE PTR [rdx+0x5ed00000],1
   14000c446:	add    BYTE PTR [rax],al
   14000c448:	xchg   ebx,eax
   14000c449:	pop    rdi
   14000c44a:	add    BYTE PTR [rax],al
   14000c44c:	in     al,dx
   14000c44d:	(bad)  
   14000c44e:	add    BYTE PTR [rax],al
   14000c450:	movabs al,ds:0xd000005ff400005f
   14000c459:	xchg   edi,eax
   14000c45a:	add    BYTE PTR [rax],al
   14000c45c:	add    BYTE PTR [rax+0x0],ah
   14000c45f:	add    BYTE PTR [rbp-0x13ffffa0],bl
   14000c465:	(bad)  
   14000c466:	add    BYTE PTR [rax],al
   14000c468:	mov    al,0x60
   14000c46a:	add    BYTE PTR [rax],al
   14000c46c:	ins    BYTE PTR es:[rdi],dx
   14000c46d:	(bad)  
   14000c46e:	add    BYTE PTR [rax],al
   14000c470:	rcl    BYTE PTR [rdi+0x61800000],1
   14000c476:	add    BYTE PTR [rax],al
   14000c478:	xlat   BYTE PTR ds:[rbx]
   14000c479:	(bad)  
   14000c47a:	add    BYTE PTR [rax],al
   14000c47c:	rcl    BYTE PTR [rdi+0x61e00000],1
   14000c482:	add    BYTE PTR [rax],al
   14000c484:	jmp    QWORD PTR [rcx+0x0]
   14000c487:	add    BYTE PTR [rax-0x68],ah
   14000c48a:	add    BYTE PTR [rax],al
   14000c48c:	adc    BYTE PTR [rdx+0x0],ah
   14000c48f:	add    BYTE PTR [rdx+riz*2+0x0],cl
   14000c493:	add    al,ch
   14000c495:	xchg   edi,eax
   14000c496:	add    BYTE PTR [rax],al
   14000c498:	shl    BYTE PTR [rdx+0x0],0x0
   14000c49c:	(bad)  
   14000c49d:	movsxd eax,DWORD PTR [rax]
   14000c49f:	add    BYTE PTR [rax-0x68],ah
   14000c4a2:	add    BYTE PTR [rax],al
   14000c4a4:	movabs al,ds:0x63e9000063
   14000c4ad:	fwait
   14000c4ae:	add    BYTE PTR [rax],al
   14000c4b0:	lock movsxd eax,DWORD PTR [rax]
   14000c4b3:	add    BYTE PTR [rcx+0x66],ah
   14000c4b6:	add    BYTE PTR [rax],al
   14000c4b8:	or     BYTE PTR [rbx+0x66700000],bl
   14000c4be:	add    BYTE PTR [rax],al
   14000c4c0:	(bad)  
   14000c4c1:	data16 add BYTE PTR [rax],al
   14000c4c4:	(bad)  
   14000c4c5:	cwde   
   14000c4c6:	add    BYTE PTR [rax],al
   14000c4c8:	movabs al,ds:0x48000066be000066
   14000c4d1:	fwait
   14000c4d2:	add    BYTE PTR [rax],al
   14000c4d4:	shl    BYTE PTR [rsi+0x0],1
   14000c4d7:	add    BYTE PTR [rsi+0x67],ch
   14000c4da:	add    BYTE PTR [rax],al
   14000c4dc:	rex.WR
   14000c4dd:	fwait
   14000c4de:	add    BYTE PTR [rax],al
   14000c4e0:	je     0x14000c549
   14000c4e2:	add    BYTE PTR [rax],al
   14000c4e4:	mov    esp,DWORD PTR [rdi+0x0]
   14000c4e7:	add    BYTE PTR [rax-0x68],ah
   14000c4ea:	add    BYTE PTR [rax],al
   14000c4ec:	lods   al,BYTE PTR ds:[rsi]
   14000c4ed:	add    BYTE PTR [eax],al
   14000c4f0:	retf   
   14000c4f1:	add    BYTE PTR [eax],al
   14000c4f4:	jo     0x14000c491
   14000c4f6:	add    BYTE PTR [rax],al
   14000c4f8:	loopne 0x14000c561
   14000c4fa:	add    BYTE PTR [rax],al
   14000c4fc:	sbb    DWORD PTR [rax+0x0],ebp
   14000c4ff:	add    BYTE PTR [rax-0x68],ah
   14000c502:	add    BYTE PTR [rax],al
   14000c504:	and    BYTE PTR [rax+0x0],ch
   14000c507:	add    BYTE PTR [rax],bh
   14000c509:	push   0xffffffff98600000
   14000c50e:	add    BYTE PTR [rax],al
   14000c510:	rex.WR push 0x68a00000
   14000c516:	add    BYTE PTR [rax],al
   14000c518:	clc    
   14000c519:	fwait
   14000c51a:	add    BYTE PTR [rax],al
   14000c51c:	test   al,0x68
   14000c51e:	add    BYTE PTR [rax],al
   14000c520:	in     eax,dx
   14000c521:	push   0xffffffff97e00000
   14000c526:	add    BYTE PTR [rax],al
   14000c528:	push   rax
   14000c529:	imul   eax,DWORD PTR [rax],0x699d00
   14000c52f:	add    BYTE PTR [rax],bl
   14000c531:	pushf  
   14000c532:	add    BYTE PTR [rax],al
   14000c534:	in     al,0x69
   14000c536:	add    BYTE PTR [rax],al
   14000c538:	mov    ah,0x6a
   14000c53a:	add    BYTE PTR [rax],al
   14000c53c:	cmp    al,0x9c
   14000c53e:	add    BYTE PTR [rax],al
   14000c540:	(bad)  
   14000c541:	push   0x0
   14000c543:	add    BYTE PTR [rax],cl
   14000c545:	imul   eax,DWORD PTR [rax],0x0
   14000c548:	loopne 0x14000c4e1
   14000c54a:	add    BYTE PTR [rax],al
   14000c54c:	adc    BYTE PTR [rbx+0x0],ch
   14000c54f:	add    BYTE PTR [rcx+0x4800006c],al
   14000c555:	pushf  
   14000c556:	add    BYTE PTR [rax],al
   14000c558:	enter  0x6c,0x0
   14000c55c:	add    DWORD PTR [rbp+0x0],ebp
   14000c55f:	add    al,ch
   14000c561:	xchg   edi,eax
   14000c562:	add    BYTE PTR [rax],al
   14000c564:	and    BYTE PTR [rbp+0x0],ch
   14000c567:	add    BYTE PTR [rax+0x6d],dl
   14000c56a:	add    BYTE PTR [rax],al
   14000c56c:	call   0x1b000c608
   14000c571:	ins    DWORD PTR es:[rdi],dx
   14000c572:	add    BYTE PTR [rax],al
   14000c574:	lea    ebp,[rbp+0x0]
   14000c577:	add    BYTE PTR [rax-0x68],ah
   14000c57a:	add    BYTE PTR [rax],al
   14000c57c:	xchg   esp,eax
   14000c57d:	ins    DWORD PTR es:[rdi],dx
   14000c57e:	add    BYTE PTR [rax],al
   14000c580:	imul   DWORD PTR [rbp+0x0]
   14000c583:	add    al,ah
   14000c585:	xchg   edi,eax
   14000c586:	add    BYTE PTR [rax],al
   14000c588:	xor    BYTE PTR [rsi+0x0],ch
   14000c58b:	add    BYTE PTR [rdx],dh
   14000c58d:	outs   dx,BYTE PTR ds:[rsi]
   14000c58e:	add    BYTE PTR [rax],al
   14000c590:	push   rax
   14000c591:	pushf  
   14000c592:	add    BYTE PTR [rax],al
   14000c594:	push   rax
   14000c595:	outs   dx,BYTE PTR ds:[rsi]
   14000c596:	add    BYTE PTR [rax],al
   14000c598:	popf   
   14000c599:	outs   dx,BYTE PTR ds:[rsi]
   14000c59a:	add    BYTE PTR [rax],al
   14000c59c:	pop    rax
   14000c59d:	pushf  
   14000c59e:	add    BYTE PTR [rax],al
   14000c5a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c5a1:	outs   dx,BYTE PTR ds:[rsi]
   14000c5a2:	add    BYTE PTR [rax],al
   14000c5a4:	(bad)  
   14000c5a5:	outs   dx,BYTE PTR ds:[rsi]
   14000c5a6:	add    BYTE PTR [rax],al
   14000c5a8:	cmp    al,0x9b
   14000c5aa:	add    BYTE PTR [rax],al
   14000c5ac:	retf   0x6e
   14000c5af:	add    ch,ah
   14000c5b1:	outs   dx,BYTE PTR ds:[rsi]
   14000c5b2:	add    BYTE PTR [rax],al
   14000c5b4:	cmp    al,0x9b
   14000c5b6:	add    BYTE PTR [rax],al
   14000c5b8:	jmp    0x14000c628
   14000c5ba:	add    BYTE PTR [rax],al
   14000c5bc:	or     ebp,DWORD PTR [rdi+0x0]
   14000c5bf:	add    al,ch
   14000c5c1:	fwait
   14000c5c2:	add    BYTE PTR [rax],al
   14000c5c4:	and    BYTE PTR [rdi+0x0],ch
   14000c5c7:	add    BYTE PTR [rax+0x6f],al
   14000c5ca:	add    BYTE PTR [rax],al
   14000c5cc:	cmp    al,0x9b
   14000c5ce:	add    BYTE PTR [rax],al
   14000c5d0:	jo     0x14000c641
   14000c5d2:	add    BYTE PTR [rax],al
   14000c5d4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c5d5:	outs   dx,DWORD PTR ds:[rsi]
   14000c5d6:	add    BYTE PTR [rax],al
   14000c5d8:	(bad)  
   14000c5d9:	cwde   
   14000c5da:	add    BYTE PTR [rax],al
   14000c5dc:	mov    al,0x6f
   14000c5de:	add    BYTE PTR [rax],al
   14000c5e0:	imul   BYTE PTR [rdi+0x0]
   14000c5e3:	add    al,ch
   14000c5e5:	xchg   edi,eax
   14000c5e6:	add    BYTE PTR [rax],al
   14000c5e8:	add    BYTE PTR [rax+0x0],dh
   14000c5eb:	add    BYTE PTR [rbp+0x70],dl
   14000c5ee:	add    BYTE PTR [rax],al
   14000c5f0:	rex.WR (bad) 
   14000c5f2:	add    BYTE PTR [rax],al
   14000c5f4:	(bad)  
   14000c5f5:	jo     0x14000c5f7
   14000c5f7:	add    BYTE PTR [rbp+0x4c000070],dh
   14000c5fd:	(bad)  
   14000c5fe:	add    BYTE PTR [rax],al
   14000c600:	shl    BYTE PTR [rax+0x0],0x0
   14000c604:	adc    eax,0x4c000071
   14000c609:	(bad)  
   14000c60a:	add    BYTE PTR [rax],al
   14000c60c:	and    BYTE PTR [rcx+0x0],dh
   14000c60f:	add    BYTE PTR [rbp+0x71],dh
   14000c612:	add    BYTE PTR [rax],al
   14000c614:	rex.WR (bad) 
	...

Disassembly of section .rsrc:

000000014000d000 <.rsrc>:
	...
   14000d00c:	add    BYTE PTR [rax],al
   14000d00e:	add    DWORD PTR [rax],eax
   14000d010:	adc    BYTE PTR [rax],al
   14000d012:	add    BYTE PTR [rax],al
   14000d014:	sbb    BYTE PTR [rax],al
   14000d016:	add    BYTE PTR [rax+0x0],al
	...
   14000d024:	add    BYTE PTR [rax],al
   14000d026:	add    DWORD PTR [rax],eax
   14000d028:	add    DWORD PTR [rax],eax
   14000d02a:	add    BYTE PTR [rax],al
   14000d02c:	xor    BYTE PTR [rax],al
   14000d02e:	add    BYTE PTR [rax+0x0],al
	...
   14000d03c:	add    BYTE PTR [rax],al
   14000d03e:	add    DWORD PTR [rax],eax
   14000d040:	or     DWORD PTR [rax+rax*1],eax
   14000d043:	add    BYTE PTR [rax+0x0],cl
   14000d046:	add    BYTE PTR [rax],al
   14000d048:	(bad)  
   14000d049:	rol    BYTE PTR [rax],1
   14000d04b:	add    al,bl
   14000d04d:	add    eax,DWORD PTR [rax]
	...
   14000d05f:	add    al,bl
   14000d061:	add    esi,DWORD PTR [rax+rax*1]
   14000d064:	add    BYTE PTR [rax],al
   14000d066:	push   rsi
   14000d067:	add    BYTE PTR [rbx+0x0],dl
   14000d06a:	pop    rdi
   14000d06b:	add    BYTE PTR [rsi+0x0],dl
   14000d06e:	add    BYTE PTR [r10+0x0],r10b
   14000d072:	push   rbx
   14000d073:	add    BYTE PTR [rcx+0x0],cl
   14000d076:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000d07a:	pop    rdi
   14000d07b:	add    BYTE PTR [rcx+0x0],cl
   14000d07e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000d082:	rex.WRXB add BYTE PTR [r8],r8b
   14000d085:	add    BYTE PTR [rax],al
   14000d087:	add    BYTE PTR [rbp+0xfeef04],bh
   14000d08d:	add    BYTE PTR [rcx],al
   14000d08f:	add    BYTE PTR [rax],al
   14000d091:	add    BYTE PTR [rdx],cl
   14000d093:	add    BYTE PTR [rax],al
   14000d095:	add    BYTE PTR [rax],bpl
   14000d098:	add    BYTE PTR [rax],al
   14000d09a:	or     al,BYTE PTR [rax]
   14000d09c:	add    BYTE PTR [rax+0x0],al
   14000d09f:	sub    BYTE PTR [rdi],bh
   14000d0a1:	add    BYTE PTR [rax],al
   14000d0a3:	add    BYTE PTR [rax],al
   14000d0a5:	add    BYTE PTR [rax],al
   14000d0a7:	add    BYTE PTR [rax+rax*1],al
   14000d0aa:	add    al,0x0
   14000d0ac:	add    al,BYTE PTR [rax]
	...
   14000d0ba:	add    BYTE PTR [rax],al
   14000d0bc:	add    eax,DWORD PTR ss:[rax]
   14000d0bf:	add    BYTE PTR [rcx],al
   14000d0c1:	add    BYTE PTR [rbx+0x0],dl
   14000d0c4:	je     0x14000d0c6
   14000d0c6:	jb     0x14000d0c8
   14000d0c8:	imul   eax,DWORD PTR [rax],0x67006e
   14000d0ce:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000d0d2:	ins    BYTE PTR es:[rdi],dx
   14000d0d3:	add    BYTE PTR [rbp+0x0],ah
   14000d0d6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d0da:	data16 add BYTE PTR [rdi+0x0],ch
   14000d0de:	add    BYTE PTR [rax],al
   14000d0e0:	adc    al,BYTE PTR [rbx]
   14000d0e2:	add    BYTE PTR [rax],al
   14000d0e4:	add    DWORD PTR [rax],eax
   14000d0e6:	xor    BYTE PTR [rax],al
   14000d0e8:	xor    al,0x0
   14000d0ea:	xor    BYTE PTR [rax],al
   14000d0ec:	cmp    DWORD PTR [rax],eax
   14000d0ee:	xor    BYTE PTR [rax],al
   14000d0f0:	xor    al,0x0
   14000d0f2:	rex.X add BYTE PTR [rax],sil
   14000d0f5:	add    BYTE PTR [rax],al
   14000d0f7:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000d0fb:	add    BYTE PTR [rcx],al
   14000d0fd:	add    BYTE PTR [rbx+0x0],al
   14000d100:	outs   dx,DWORD PTR ds:[rsi]
   14000d101:	add    BYTE PTR [rbp+0x0],ch
   14000d104:	jo     0x14000d106
   14000d106:	(bad)  
   14000d107:	add    BYTE PTR [rsi+0x0],ch
   14000d10a:	jns    0x14000d10c
   14000d10c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000d110:	ins    DWORD PTR es:[rdi],dx
   14000d111:	add    BYTE PTR [rbp+0x0],ah
   14000d114:	add    BYTE PTR [rax],al
   14000d116:	add    BYTE PTR [rax],al
   14000d118:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000d11c:	movsxd eax,DWORD PTR [rax]
   14000d11e:	jb     0x14000d120
   14000d120:	outs   dx,DWORD PTR ds:[rsi]
   14000d121:	add    BYTE PTR [rbx+0x0],dh
   14000d124:	outs   dx,DWORD PTR ds:[rsi]
   14000d125:	add    BYTE PTR [rsi+0x0],ah
   14000d128:	je     0x14000d12a
   14000d12a:	and    BYTE PTR [rax],al
   14000d12c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000d130:	jb     0x14000d132
   14000d132:	jo     0x14000d134
   14000d134:	outs   dx,DWORD PTR ds:[rsi]
   14000d135:	add    BYTE PTR [rdx+0x0],dh
   14000d138:	(bad)  
   14000d139:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000d13d:	add    BYTE PTR [rdi+0x0],ch
   14000d140:	outs   dx,BYTE PTR ds:[rsi]
   14000d141:	add    BYTE PTR [rax],al
   14000d143:	add    BYTE PTR [rdx+0x0],ah
   14000d146:	sbb    eax,0x46000100
   14000d14b:	add    BYTE PTR [rcx+0x0],ch
   14000d14e:	ins    BYTE PTR es:[rdi],dx
   14000d14f:	add    BYTE PTR [rbp+0x0],ah
   14000d152:	add    BYTE PTR [rbp+0x0],r12b
   14000d156:	jae    0x14000d158
   14000d158:	movsxd eax,DWORD PTR [rax]
   14000d15a:	jb     0x14000d15c
   14000d15c:	imul   eax,DWORD PTR [rax],0x740070
   14000d162:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d168:	add    BYTE PTR [rax],al
   14000d16a:	add    BYTE PTR [rax],al
   14000d16c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000d170:	jb     0x14000d172
   14000d172:	je     0x14000d174
   14000d174:	(bad)  
   14000d175:	add    BYTE PTR [rsi+0x0],ch
   14000d178:	(bad)  
   14000d179:	add    BYTE PTR [rax],ah
   14000d17b:	add    BYTE PTR [rax+rax*1+0x73],al
   14000d17f:	add    BYTE PTR [rbx+0x0],dh
   14000d182:	and    BYTE PTR [rax],al
   14000d184:	push   rdi
   14000d185:	add    BYTE PTR [rcx+0x0],ch
   14000d188:	outs   dx,BYTE PTR ds:[rsi]
   14000d189:	add    BYTE PTR [rdx+0x0],dl
   14000d18c:	push   rsp
   14000d18d:	add    BYTE PTR [rax],ah
   14000d18f:	add    BYTE PTR [rdi+0x0],cl
   14000d192:	rex.WRXB add BYTE PTR [r8+0x0],r10b
   14000d196:	and    BYTE PTR [rax],al
   14000d198:	push   rbx
   14000d199:	add    BYTE PTR [rbp+0x0],ah
   14000d19c:	jb     0x14000d19e
   14000d19e:	jbe    0x14000d1a0
   14000d1a0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d1a4:	add    BYTE PTR [rax],al
   14000d1a6:	add    BYTE PTR [rax],al
   14000d1a8:	data16 add BYTE PTR [rbx],ah
   14000d1ab:	add    BYTE PTR [rcx],al
   14000d1ad:	add    BYTE PTR [rsi+0x0],al
   14000d1b0:	imul   eax,DWORD PTR [rax],0x65006c
   14000d1b6:	push   rsi
   14000d1b7:	add    BYTE PTR [rbp+0x0],ah
   14000d1ba:	jb     0x14000d1bc
   14000d1bc:	jae    0x14000d1be
   14000d1be:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d1c4:	add    BYTE PTR [rax],al
   14000d1c6:	add    BYTE PTR [rax],al
   14000d1c8:	xor    DWORD PTR [rax],eax
   14000d1ca:	xor    BYTE PTR [rax],al
   14000d1cc:	add    BYTE PTR cs:[rax],dh
   14000d1cf:	add    BYTE PTR [rsi],ch
   14000d1d1:	add    BYTE PTR [rcx],dh
   14000d1d3:	add    BYTE PTR [rax],dh
   14000d1d5:	add    BYTE PTR [rdx],dh
   14000d1d7:	add    BYTE PTR [rax+rax*1],dh
   14000d1da:	xor    BYTE PTR [rax],al
   14000d1dc:	add    BYTE PTR cs:[rcx],dh
   14000d1df:	add    BYTE PTR [rsi],dh
   14000d1e1:	add    BYTE PTR [rbx],dh
   14000d1e3:	add    BYTE PTR [rax],bh
   14000d1e5:	add    BYTE PTR [rax+rax*1],dh
   14000d1e8:	and    BYTE PTR [rax],al
   14000d1ea:	sub    BYTE PTR [rax],al
   14000d1ec:	je     0x14000d1ee
   14000d1ee:	push   0x2e003100
   14000d1f3:	add    BYTE PTR [rcx],dh
   14000d1f5:	add    BYTE PTR [rip+0x37003000],dh        # 0x1770101fb
   14000d1fb:	add    BYTE PTR [rax],dh
   14000d1fd:	add    BYTE PTR [rcx],bh
   14000d1ff:	add    BYTE PTR [rip+0x37003100],ch        # 0x177010305
   14000d205:	add    BYTE PTR [rax],dh
   14000d207:	add    BYTE PTR [rax],dh
   14000d209:	add    BYTE PTR [rcx],ch
   14000d20b:	add    BYTE PTR [rax],al
   14000d20d:	add    BYTE PTR [rax],al
   14000d20f:	add    BYTE PTR [rdx+0x0],bl
   14000d212:	sbb    eax,0x49000100
   14000d217:	add    BYTE PTR [rsi+0x0],ch
   14000d21a:	je     0x14000d21c
   14000d21c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d220:	outs   dx,BYTE PTR ds:[rsi]
   14000d221:	add    BYTE PTR [rcx+0x0],ah
   14000d224:	ins    BYTE PTR es:[rdi],dx
   14000d225:	add    BYTE PTR [rsi+0x0],cl
   14000d228:	(bad)  
   14000d229:	add    BYTE PTR [rbp+0x0],ch
   14000d22c:	add    BYTE PTR gs:[rax],al
   14000d22f:	add    BYTE PTR [rbx+0x0],al
   14000d232:	outs   dx,DWORD PTR ds:[rsi]
   14000d233:	add    BYTE PTR [rdx+0x0],dh
   14000d236:	je     0x14000d238
   14000d238:	(bad)  
   14000d239:	add    BYTE PTR [rsi+0x0],ch
   14000d23c:	(bad)  
   14000d23d:	add    BYTE PTR [rax],ah
   14000d23f:	add    BYTE PTR [rax+rax*1+0x73],al
   14000d243:	add    BYTE PTR [rbx+0x0],dh
   14000d246:	and    BYTE PTR [rax],al
   14000d248:	push   rdi
   14000d249:	add    BYTE PTR [rcx+0x0],ch
   14000d24c:	outs   dx,BYTE PTR ds:[rsi]
   14000d24d:	add    BYTE PTR [rdx+0x0],dl
   14000d250:	push   rsp
   14000d251:	add    BYTE PTR [rax],ah
   14000d253:	add    BYTE PTR [rdi+0x0],cl
   14000d256:	rex.WRXB add BYTE PTR [r8+0x0],r10b
   14000d25a:	and    BYTE PTR [rax],al
   14000d25c:	push   rbx
   14000d25d:	add    BYTE PTR [rbp+0x0],ah
   14000d260:	jb     0x14000d262
   14000d262:	jbe    0x14000d264
   14000d264:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d268:	add    BYTE PTR [rax],al
   14000d26a:	add    BYTE PTR [rax],al
   14000d26c:	add    BYTE PTR [rax],0x2e
   14000d26f:	add    BYTE PTR [rcx],al
   14000d271:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000d275:	add    BYTE PTR [rdi+0x0],ah
   14000d278:	(bad)  
   14000d279:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000d27d:	add    BYTE PTR [rdi+0x0],ch
   14000d280:	jo     0x14000d282
   14000d282:	jns    0x14000d284
   14000d284:	jb     0x14000d286
   14000d286:	imul   eax,DWORD PTR [rax],0x680067
   14000d28c:	je     0x14000d28e
   14000d28e:	add    BYTE PTR [rax],al
   14000d290:	test   eax,0x4d002000
   14000d295:	add    BYTE PTR [rcx+0x0],ch
   14000d298:	movsxd eax,DWORD PTR [rax]
   14000d29a:	jb     0x14000d29c
   14000d29c:	outs   dx,DWORD PTR ds:[rsi]
   14000d29d:	add    BYTE PTR [rbx+0x0],dh
   14000d2a0:	outs   dx,DWORD PTR ds:[rsi]
   14000d2a1:	add    BYTE PTR [rsi+0x0],ah
   14000d2a4:	je     0x14000d2a6
   14000d2a6:	and    BYTE PTR [rax],al
   14000d2a8:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000d2ac:	jb     0x14000d2ae
   14000d2ae:	jo     0x14000d2b0
   14000d2b0:	outs   dx,DWORD PTR ds:[rsi]
   14000d2b1:	add    BYTE PTR [rdx+0x0],dh
   14000d2b4:	(bad)  
   14000d2b5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000d2b9:	add    BYTE PTR [rdi+0x0],ch
   14000d2bc:	outs   dx,BYTE PTR ds:[rsi]
   14000d2bd:	add    BYTE PTR [rsi],ch
   14000d2bf:	add    BYTE PTR [rax],ah
   14000d2c1:	add    BYTE PTR [rcx+0x0],al
   14000d2c4:	ins    BYTE PTR es:[rdi],dx
   14000d2c5:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000d2c9:	add    BYTE PTR [rdx+0x0],dh
   14000d2cc:	imul   eax,DWORD PTR [rax],0x680067
   14000d2d2:	je     0x14000d2d4
   14000d2d4:	jae    0x14000d2d6
   14000d2d6:	and    BYTE PTR [rax],al
   14000d2d8:	jb     0x14000d2da
   14000d2da:	add    BYTE PTR gs:[rbx+0x0],dh
   14000d2de:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d2e2:	jbe    0x14000d2e4
   14000d2e4:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000d2e9:	add    BYTE PTR [rax],al
   14000d2eb:	add    BYTE PTR [rdx+0x0],dl
   14000d2ee:	adc    eax,0x4f000100
   14000d2f3:	add    BYTE PTR [rdx+0x0],dh
   14000d2f6:	imul   eax,DWORD PTR [rax],0x690067
   14000d2fc:	outs   dx,BYTE PTR ds:[rsi]
   14000d2fd:	add    BYTE PTR [rcx+0x0],ah
   14000d300:	ins    BYTE PTR es:[rdi],dx
   14000d301:	add    BYTE PTR [rsi+0x0],al
   14000d304:	imul   eax,DWORD PTR [rax],0x65006c
   14000d30a:	outs   dx,BYTE PTR ds:[rsi]
   14000d30b:	add    BYTE PTR [rcx+0x0],ah
   14000d30e:	ins    DWORD PTR es:[rdi],dx
   14000d30f:	add    BYTE PTR [rbp+0x0],ah
   14000d312:	add    BYTE PTR [rax],al
   14000d314:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000d318:	jb     0x14000d31a
   14000d31a:	je     0x14000d31c
   14000d31c:	(bad)  
   14000d31d:	add    BYTE PTR [rsi+0x0],ch
   14000d320:	(bad)  
   14000d321:	add    BYTE PTR [rax+rax*1+0x73],al
   14000d325:	add    BYTE PTR [rbx+0x0],dh
   14000d328:	push   rbx
   14000d329:	add    BYTE PTR [rbp+0x0],ah
   14000d32c:	jb     0x14000d32e
   14000d32e:	jbe    0x14000d330
   14000d330:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d334:	add    BYTE PTR cs:[rbp+0x0],ah
   14000d338:	js     0x14000d33a
   14000d33a:	add    BYTE PTR gs:[rax],al
   14000d33d:	add    BYTE PTR [rax],al
   14000d33f:	add    BYTE PTR [rdx+0x0],ch
   14000d342:	and    eax,0x50000100
   14000d347:	add    BYTE PTR [rdx+0x0],dh
   14000d34a:	outs   dx,DWORD PTR ds:[rsi]
   14000d34b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000d34f:	add    BYTE PTR [rbx+0x0],ah
   14000d352:	je     0x14000d354
   14000d354:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000d358:	ins    DWORD PTR es:[rdi],dx
   14000d359:	add    BYTE PTR [rbp+0x0],ah
   14000d35c:	add    BYTE PTR [rax],al
   14000d35e:	add    BYTE PTR [rax],al
   14000d360:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000d364:	movsxd eax,DWORD PTR [rax]
   14000d366:	jb     0x14000d368
   14000d368:	outs   dx,DWORD PTR ds:[rsi]
   14000d369:	add    BYTE PTR [rbx+0x0],dh
   14000d36c:	outs   dx,DWORD PTR ds:[rsi]
   14000d36d:	add    BYTE PTR [rsi+0x0],ah
   14000d370:	je     0x14000d372
   14000d372:	scas   al,BYTE PTR es:[rdi]
   14000d373:	add    BYTE PTR [rax],ah
   14000d375:	add    BYTE PTR [rdi+0x0],dl
   14000d378:	imul   eax,DWORD PTR [rax],0x64006e
   14000d37e:	outs   dx,DWORD PTR ds:[rsi]
   14000d37f:	add    BYTE PTR [rdi+0x0],dh
   14000d382:	jae    0x14000d384
   14000d384:	scas   al,BYTE PTR es:[rdi]
   14000d385:	add    BYTE PTR [rax],ah
   14000d387:	add    BYTE PTR [rdi+0x0],cl
   14000d38a:	jo     0x14000d38c
   14000d38c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d390:	(bad)  
   14000d391:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000d395:	add    BYTE PTR [rsi+0x0],ch
   14000d398:	add    BYTE PTR [eax],ah
   14000d39b:	add    BYTE PTR [rbx+0x0],dl
   14000d39e:	jns    0x14000d3a0
   14000d3a0:	jae    0x14000d3a2
   14000d3a2:	je     0x14000d3a4
   14000d3a4:	add    BYTE PTR gs:[rbp+0x0],ch
   14000d3a8:	add    BYTE PTR [rax],al
   14000d3aa:	add    BYTE PTR [rax],al
   14000d3ac:	rex.RX add BYTE PTR [rcx],r10b
   14000d3af:	add    BYTE PTR [rcx],al
   14000d3b1:	add    BYTE PTR [rax+0x0],dl
   14000d3b4:	jb     0x14000d3b6
   14000d3b6:	outs   dx,DWORD PTR ds:[rsi]
   14000d3b7:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000d3bb:	add    BYTE PTR [rbx+0x0],ah
   14000d3be:	je     0x14000d3c0
   14000d3c0:	push   rsi
   14000d3c1:	add    BYTE PTR [rbp+0x0],ah
   14000d3c4:	jb     0x14000d3c6
   14000d3c6:	jae    0x14000d3c8
   14000d3c8:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d3ce:	add    BYTE PTR [rax],al
   14000d3d0:	xor    DWORD PTR [rax],eax
   14000d3d2:	xor    BYTE PTR [rax],al
   14000d3d4:	add    BYTE PTR cs:[rax],dh
   14000d3d7:	add    BYTE PTR [rsi],ch
   14000d3d9:	add    BYTE PTR [rcx],dh
   14000d3db:	add    BYTE PTR [rax],dh
   14000d3dd:	add    BYTE PTR [rdx],dh
   14000d3df:	add    BYTE PTR [rax+rax*1],dh
   14000d3e2:	xor    BYTE PTR [rax],al
   14000d3e4:	add    BYTE PTR cs:[rcx],dh
   14000d3e7:	add    BYTE PTR [rsi],dh
   14000d3e9:	add    BYTE PTR [rbx],dh
   14000d3eb:	add    BYTE PTR [rax],bh
   14000d3ed:	add    BYTE PTR [rax+rax*1],dh
   14000d3f0:	add    BYTE PTR [rax],al
   14000d3f2:	add    BYTE PTR [rax],al
   14000d3f4:	add    BYTE PTR [rax],r8b
   14000d3f7:	add    BYTE PTR [rcx],al
   14000d3f9:	add    BYTE PTR [rsi+0x0],dl
   14000d3fc:	(bad)  
   14000d3fd:	add    BYTE PTR [rdx+0x0],dh
   14000d400:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000d404:	ins    BYTE PTR es:[rdi],dx
   14000d405:	add    BYTE PTR [rbp+0x0],ah
   14000d408:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d40c:	data16 add BYTE PTR [rdi+0x0],ch
   14000d410:	add    BYTE PTR [rax],al
   14000d412:	add    BYTE PTR [rax],al
   14000d414:	and    al,0x0
   14000d416:	add    al,0x0
   14000d418:	add    BYTE PTR [rax],al
   14000d41a:	push   rsp
   14000d41b:	add    BYTE PTR [rdx+0x0],dh
   14000d41e:	(bad)  
   14000d41f:	add    BYTE PTR [rsi+0x0],ch
   14000d422:	jae    0x14000d424
   14000d424:	ins    BYTE PTR es:[rdi],dx
   14000d425:	add    BYTE PTR [rcx+0x0],ah
   14000d428:	je     0x14000d42a
   14000d42a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d430:	add    BYTE PTR [rax],al
   14000d432:	add    BYTE PTR [rax],al
   14000d434:	or     DWORD PTR [rax+rsi*4],eax
   14000d437:	.byte 0x4

Disassembly of section .reloc:

000000014000e000 <.reloc>:
   14000e000:	add    BYTE PTR [rax+0x15c0000],al
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	cmp    BYTE PTR [rbx-0x5caf5cc0],ah
   14000e00e:	pop    rax
   14000e00f:	movabs ds:0xa378a370a368a360,eax
   14000e018:	nop
   14000e019:	movabs ds:0xa598a590a588a398,eax
   14000e022:	fsub   DWORD PTR [rbp-0x5a175a20]
   14000e028:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e02a:	clc    
   14000e02b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e02c:	add    BYTE PTR [rsi-0x59ef59f8],ah
   14000e032:	sbb    BYTE PTR [rsi-0x599759a0],ah
   14000e038:	jo     0x14000dfe0
   14000e03a:	js     0x14000dfe2
   14000e03c:	and    BYTE PTR [rsi-0x596f5978],0x98
   14000e043:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e044:	mov    al,0xa6
   14000e046:	mov    eax,0xc8a6c0a6
   14000e04b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e04c:	shl    BYTE PTR [rsi-0x591f5928],1
   14000e052:	call   0x148a7d0fd
   14000e057:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e058:	adc    BYTE PTR [rdi-0x58df58e8],ah
   14000e05e:	sub    BYTE PTR [rdi-0x58c758d0],ah
   14000e064:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e066:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000e068:	push   rax
   14000e069:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e06a:	pop    rax
   14000e06b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e06c:	(bad)  
   14000e06d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e06e:	push   0x78a770a7
   14000e073:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e074:	and    BYTE PTR [rdi-0x586f5878],0x98
   14000e07b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e07c:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   14000e085:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e086:	clc    
   14000e087:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e088:	add    BYTE PTR [rax-0x57ef57f8],ch
   14000e08e:	sbb    BYTE PTR [rax-0x57d757e0],ch
   14000e094:	xor    BYTE PTR [rax-0x57bf57c8],ch
   14000e09a:	rex.W test al,0x50
   14000e09d:	test   al,0x58
   14000e09f:	test   al,0x60
   14000e0a1:	test   al,0x68
   14000e0a3:	test   al,0x70
   14000e0a5:	test   al,0x78
   14000e0a7:	test   al,0x80
   14000e0a9:	test   al,0x88
   14000e0ab:	test   al,0x90
   14000e0ad:	test   al,0x98
   14000e0af:	test   al,0xa0
   14000e0b1:	test   al,0xa8
   14000e0b3:	test   al,0xb0
   14000e0b5:	test   al,0xb8
   14000e0b7:	test   al,0x58
   14000e0b9:	test   eax,0xa968a960
   14000e0be:	jo     0x14000e069
   14000e0c0:	js     0x14000e06b
   14000e0c2:	sub    BYTE PTR [rcx-0x566f5678],0x98
   14000e0c9:	test   eax,0xa9a8a9a0
   14000e0ce:	mov    al,0xa9
   14000e0d0:	mov    eax,0xc8a9c0a9
   14000e0d5:	test   eax,0xa9d8a9d0
   14000e0da:	loopne 0x14000e085
   14000e0dc:	call   0x138aad18a
   14000e0e1:	test   eax,0xaa08aa00
   14000e0e6:	adc    BYTE PTR [rdx-0x55d755e8],ch
   14000e0ec:	xor    BYTE PTR [rdx-0x55bf55c8],ch
   14000e0f2:	rex.W stos BYTE PTR es:[rdi],al
   14000e0f4:	push   rax
   14000e0f5:	stos   BYTE PTR es:[rdi],al
   14000e0f6:	pop    rax
   14000e0f7:	stos   BYTE PTR es:[rdi],al
   14000e0f8:	(bad)  
   14000e0f9:	stos   BYTE PTR es:[rdi],al
   14000e0fa:	push   0x78aa70aa
   14000e0ff:	stos   BYTE PTR es:[rdi],al
   14000e100:	sub    BYTE PTR [rdx-0x556f5578],0x98
   14000e107:	stos   BYTE PTR es:[rdi],al
   14000e108:	movabs al,ds:0xc0aab8aab0aaa8aa
   14000e111:	stos   BYTE PTR es:[rdi],al
   14000e112:	enter  0xd0aa,0xaa
   14000e116:	fsubr  DWORD PTR [rdx-0x55175520]
   14000e11c:	lock stos BYTE PTR es:[rdi],al
   14000e11e:	clc    
   14000e11f:	stos   BYTE PTR es:[rdi],al
   14000e120:	add    BYTE PTR [rbx-0x54ef54f8],ch
   14000e126:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   14000e12c:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   14000e132:	stos   QWORD PTR es:[rdi],rax
   14000e134:	push   rax
   14000e135:	stos   DWORD PTR es:[rdi],eax
   14000e136:	pop    rax
   14000e137:	stos   DWORD PTR es:[rdi],eax
   14000e138:	(bad)  
   14000e139:	stos   DWORD PTR es:[rdi],eax
   14000e13a:	push   0x78ab70ab
   14000e13f:	stos   DWORD PTR es:[rdi],eax
   14000e140:	sub    BYTE PTR [rbx-0x546f5478],0x98
   14000e147:	stos   DWORD PTR es:[rdi],eax
   14000e148:	movabs al,ds:0xc0abb8abb0aba8ab
   14000e151:	stos   DWORD PTR es:[rdi],eax
   14000e152:	push   0xffffffff88ae80ae
   14000e157:	scas   al,BYTE PTR es:[rdi]
   14000e158:	nop
   14000e159:	scas   al,BYTE PTR es:[rdi]
   14000e15a:	add    BYTE PTR [rax],al
   14000e15c:	add    BYTE PTR [rax+0xc0000],dl
   14000e162:	add    BYTE PTR [rax],al
   14000e164:	enter  0xac,0x0
   14000e168:	add    BYTE PTR [rax+0x100000],dh
   14000e16e:	add    BYTE PTR [rax],al
   14000e170:	sub    BYTE PTR [rax-0x5f3f5f88],ah
	...
