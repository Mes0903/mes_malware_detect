
0524d1cc0e49105631e29f5e13f5dd2d1eb580899297b29cf67aa9644da62e20.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x5d25]        # 0x406d40
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x5d26]        # 0x406d50
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x5d29]        # 0x406d60
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x5cec]        # 0x406d30
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x5b8f]        # 0x406be0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x5cc1]        # 0x406d20
  40105f:	mov    DWORD PTR [rip+0x8fa3],edx        # 0x40a008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x403e30
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x402160
  401081:	mov    rdx,QWORD PTR [rip+0x5bf8]        # 0x406c80
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x5bde]        # 0x406c70
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x5c44]        # 0x406ce0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x5b7b]        # 0x406c20
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401d40
  4010af:	mov    rax,QWORD PTR [rip+0x5ada]        # 0x406b90
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x403e30
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xf19]        # 0x402040
  401127:	call   0x402030
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x5ba5]        # 0x406d10
  40116b:	lea    r8,[rip+0x8ea6]        # 0x40a018
  401172:	lea    rdx,[rip+0x8ea7]        # 0x40a020
  401179:	lea    rcx,[rip+0x8ea8]        # 0x40a028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x8e78],eax        # 0x40a000
  401188:	lea    rax,[rip+0x8e71]        # 0x40a000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x5b35]        # 0x406cd0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x403e48
  4011a3:	mov    DWORD PTR [rip+0x8e67],eax        # 0x40a010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x5b5a]        # 0x406d20
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x5a5b]        # 0x406c50
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xa2be]        # 0x40b4c0
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x5a37]        # 0x406c60
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x8dba],0x1        # 0x40a004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x596c]        # 0x406bd0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x402350
  40127d:	lea    rcx,[rip+0x166c]        # 0x4028f0
  401284:	call   QWORD PTR [rip+0xa22e]        # 0x40b4b8
  40128a:	mov    rdx,QWORD PTR [rip+0x59af]        # 0x406c40
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402800
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x403e70
  4012a5:	call   0x402140
  4012aa:	mov    rax,QWORD PTR [rip+0x592f]        # 0x406be0
  4012b1:	mov    QWORD PTR [rip+0x9750],rax        # 0x40aa08
  4012b8:	mov    rax,QWORD PTR [rip+0x5951]        # 0x406c10
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x96e9],rax        # 0x40aa00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x3cca],eax        # 0x405000
  401336:	mov    r12d,DWORD PTR [rip+0x8ceb]        # 0x40a028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x403da0
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x8cc2]        # 0x40a020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x403d68
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x403da0
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x403d98
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x8c6a],rbp        # 0x40a020
  4013b6:	call   0x401d10
  4013bb:	mov    rax,QWORD PTR [rip+0x583e]        # 0x406c00
  4013c2:	mov    rdx,QWORD PTR [rip+0x8c4f]        # 0x40a018
  4013c9:	mov    ecx,DWORD PTR [rip+0x8c59]        # 0x40a028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x8c3c]        # 0x40a018
  4013dc:	mov    rdx,QWORD PTR [rip+0x8c3d]        # 0x40a020
  4013e3:	call   0x403f40
  4013e8:	mov    ecx,DWORD PTR [rip+0x8c1a]        # 0x40a008
  4013ee:	mov    DWORD PTR [rip+0x8c18],eax        # 0x40a00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x8c02]        # 0x40a004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x403e18
  40140b:	mov    eax,DWORD PTR [rip+0x8bfb]        # 0x40a00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x5829]        # 0x406c60
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x403e20
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x583d]        # 0x406ca0
  401463:	mov    rcx,QWORD PTR [rip+0x5826]        # 0x406c90
  40146a:	call   0x403e08
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x9fcf]        # 0x40b468
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x5819]        # 0x406cc0
  4014a7:	mov    rcx,QWORD PTR [rip+0x5802]        # 0x406cb0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x403e08
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x403dd8
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x5845]        # 0x406d20
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401d50
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x5815]        # 0x406d20
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401d50
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rdi
  401531:	push   rsi
  401532:	push   rbx
  401533:	sub    rsp,0x20
  401537:	test   edx,edx
  401539:	mov    rdi,rcx
  40153c:	mov    esi,edx
  40153e:	je     0x40165e
  401544:	call   QWORD PTR [rip+0x9fd6]        # 0x40b520
  40154a:	lea    rbx,[rax+0x60]
  40154e:	lea    rdx,[rip+0x4aab]        # 0x406000
  401555:	mov    r8,rdi
  401558:	mov    rcx,rbx
  40155b:	call   0x403dc8
  401560:	lea    rcx,[rip+0x4b39]        # 0x4060a0
  401567:	mov    r9,rbx
  40156a:	mov    r8d,0x5c
  401570:	mov    edx,0x1
  401575:	call   0x403db0
  40157a:	mov    rdx,rbx
  40157d:	mov    ecx,0xa
  401582:	call   0x403dc0
  401587:	lea    rcx,[rip+0x4b72]        # 0x406100
  40158e:	mov    r9,rbx
  401591:	mov    r8d,0x45
  401597:	mov    edx,0x1
  40159c:	call   0x403db0
  4015a1:	lea    rcx,[rip+0x4ba0]        # 0x406148
  4015a8:	mov    r9,rbx
  4015ab:	mov    r8d,0x49
  4015b1:	mov    edx,0x1
  4015b6:	call   0x403db0
  4015bb:	lea    rcx,[rip+0x4bd6]        # 0x406198
  4015c2:	mov    r9,rbx
  4015c5:	mov    r8d,0x42
  4015cb:	mov    edx,0x1
  4015d0:	call   0x403db0
  4015d5:	lea    rcx,[rip+0x4c04]        # 0x4061e0
  4015dc:	mov    r9,rbx
  4015df:	mov    r8d,0x3d
  4015e5:	mov    edx,0x1
  4015ea:	call   0x403db0
  4015ef:	lea    rcx,[rip+0x4c2a]        # 0x406220
  4015f6:	mov    r9,rbx
  4015f9:	mov    r8d,0x45
  4015ff:	mov    edx,0x1
  401604:	call   0x403db0
  401609:	lea    rcx,[rip+0x4c58]        # 0x406268
  401610:	mov    r9,rbx
  401613:	mov    r8d,0x41
  401619:	mov    edx,0x1
  40161e:	call   0x403db0
  401623:	lea    rcx,[rip+0x4c86]        # 0x4062b0
  40162a:	mov    r9,rbx
  40162d:	mov    r8d,0x40
  401633:	mov    edx,0x1
  401638:	call   0x403db0
  40163d:	lea    rcx,[rip+0x4cb4]        # 0x4062f8
  401644:	mov    r9,rbx
  401647:	mov    r8d,0x36
  40164d:	mov    edx,0x1
  401652:	call   0x403db0
  401657:	mov    ecx,esi
  401659:	call   0x403dd8
  40165e:	call   QWORD PTR [rip+0x9ebc]        # 0x40b520
  401664:	lea    rbx,[rax+0x30]
  401668:	jmp    0x40154e
  40166d:	nop    DWORD PTR [rax]
  401670:	push   r15
  401672:	push   r14
  401674:	push   r13
  401676:	push   r12
  401678:	push   rbp
  401679:	push   rdi
  40167a:	push   rsi
  40167b:	push   rbx
  40167c:	sub    rsp,0xa8
  401683:	mov    r12d,DWORD PTR [rsp+0x110]
  40168b:	xor    ebx,ebx
  40168d:	xor    r15d,r15d
  401690:	mov    r13,rcx
  401693:	mov    rcx,rdx
  401696:	mov    QWORD PTR [rsp+0xf8],rdx
  40169e:	mov    DWORD PTR [rsp+0x100],r8d
  4016a6:	mov    DWORD PTR [rsp+0x108],r9d
  4016ae:	call   0x401b50
  4016b3:	mov    r14,rax
  4016b6:	mov    rax,QWORD PTR [rip+0x9e63]        # 0x40b520
  4016bd:	mov    QWORD PTR [rsp+0x58],rax
  4016c2:	mov    QWORD PTR [rsp+0x48],rax
  4016c7:	mov    QWORD PTR [rsp+0x50],rax
  4016cc:	mov    QWORD PTR [rsp+0x40],rax
  4016d1:	mov    rcx,r13
  4016d4:	call   0x401ad8
  4016d9:	test   rax,rax
  4016dc:	mov    rsi,rax
  4016df:	je     0x401750
  4016e1:	test   r12d,r12d
  4016e4:	je     0x401780
  4016ea:	test   r14,r14
  4016ed:	je     0x4016fe
  4016ef:	lea    rcx,[rip+0x4c39]        # 0x40632f
  4016f6:	mov    rdx,r14
  4016f9:	call   0x403d88
  4016fe:	lea    rcx,[rip+0x4c2f]        # 0x406334
  401705:	mov    rdx,rsi
  401708:	call   0x403d88
  40170d:	call   QWORD PTR [rip+0x9e0d]        # 0x40b520
  401713:	lea    rcx,[rax+0x30]
  401717:	call   0x403dd0
  40171c:	mov    rcx,QWORD PTR [rip+0x890d]        # 0x40a030
  401723:	mov    rdx,rsi
  401726:	call   0x401ab0
  40172b:	test   eax,eax
  40172d:	je     0x401797
  40172f:	lea    rcx,[rip+0x4c0a]        # 0x406340
  401736:	call   0x403d80
  40173b:	mov    rcx,r13
  40173e:	call   0x401ad8
  401743:	test   rax,rax
  401746:	mov    rsi,rax
  401749:	jne    0x4016e1
  40174b:	nop    DWORD PTR [rax+rax*1+0x0]
  401750:	test   ebx,ebx
  401752:	mov    eax,r15d
  401755:	jne    0x40176c
  401757:	mov    edx,DWORD PTR [rsp+0x118]
  40175e:	test   edx,edx
  401760:	lea    edx,[r15+0x1]
  401764:	setne  cl
  401767:	test   cl,cl
  401769:	cmovne eax,edx
  40176c:	add    rsp,0xa8
  401773:	pop    rbx
  401774:	pop    rsi
  401775:	pop    rdi
  401776:	pop    rbp
  401777:	pop    r12
  401779:	pop    r13
  40177b:	pop    r14
  40177d:	pop    r15
  40177f:	ret    
  401780:	mov    rcx,QWORD PTR [rip+0x88a9]        # 0x40a030
  401787:	mov    rdx,rsi
  40178a:	call   0x401ab0
  40178f:	test   eax,eax
  401791:	jne    0x4016d1
  401797:	lea    rdx,[rsp+0x60]
  40179c:	mov    rcx,rsi
  40179f:	call   QWORD PTR [rip+0x9e7b]        # 0x40b620
  4017a5:	cmp    eax,0xffffffff
  4017a8:	je     0x401910
  4017ae:	movzx  eax,WORD PTR [rsp+0x66]
  4017b3:	and    ax,0xf000
  4017b7:	cmp    ax,0x4000
  4017bb:	je     0x4017e0
  4017bd:	mov    rax,QWORD PTR [rsp+0x40]
  4017c2:	call   rax
  4017c4:	lea    rdx,[rip+0x4bbd]        # 0x406388
  4017cb:	lea    rcx,[rax+0x60]
  4017cf:	mov    r8,rsi
  4017d2:	call   0x403dc8
  4017d7:	jmp    0x4016d1
  4017dc:	nop    DWORD PTR [rax+0x0]
  4017e0:	mov    r8d,DWORD PTR [rsp+0x108]
  4017e8:	test   r8d,r8d
  4017eb:	jne    0x401990
  4017f1:	mov    ecx,DWORD PTR [rsp+0x100]
  4017f8:	test   ecx,ecx
  4017fa:	je     0x401940
  401800:	mov    rax,QWORD PTR [rsp+0x120]
  401808:	mov    r8,QWORD PTR [rsp+0xf8]
  401810:	mov    edx,0x1
  401815:	mov    rcx,rsi
  401818:	add    DWORD PTR [rax],0x1
  40181b:	call   0x401b28
  401820:	test   rax,rax
  401823:	mov    rdi,rax
  401826:	je     0x401a82
  40182c:	test   r12d,r12d
  40182f:	jne    0x401a05
  401835:	mov    rcx,rsi
  401838:	call   0x401b10
  40183d:	test   eax,eax
  40183f:	je     0x4019a5
  401845:	call   0x401ac0
  40184a:	xor    ebx,ebx
  40184c:	test   rax,rax
  40184f:	mov    rbp,rax
  401852:	jne    0x401878
  401854:	jmp    0x401a55
  401859:	nop    DWORD PTR [rax+0x0]
  401860:	mov    edx,ebx
  401862:	mov    rcx,rdi
  401865:	add    ebx,0x1
  401868:	call   0x401b80
  40186d:	mov    rcx,rbp
  401870:	mov    rdx,rax
  401873:	call   0x401ad0
  401878:	mov    rcx,rdi
  40187b:	call   0x401b88
  401880:	cmp    ebx,eax
  401882:	jl     0x401860
  401884:	mov    rcx,rdi
  401887:	call   0x401b18
  40188c:	mov    rcx,rbp
  40188f:	call   0x401ae8
  401894:	mov    rcx,rbp
  401897:	mov    rbx,rax
  40189a:	call   0x401ab8
  40189f:	test   rbx,rbx
  4018a2:	je     0x401a30
  4018a8:	mov    rcx,QWORD PTR [rip+0x8781]        # 0x40a030
  4018af:	mov    rdx,rsi
  4018b2:	call   0x401ad0
  4018b7:	mov    rax,QWORD PTR [rsp+0x120]
  4018bf:	mov    r9d,DWORD PTR [rsp+0x108]
  4018c7:	mov    rcx,rbx
  4018ca:	mov    r8d,DWORD PTR [rsp+0x100]
  4018d2:	mov    rdx,QWORD PTR [rsp+0xf8]
  4018da:	mov    DWORD PTR [rsp+0x20],r12d
  4018df:	mov    QWORD PTR [rsp+0x30],rax
  4018e4:	mov    eax,DWORD PTR [rsp+0x118]
  4018eb:	mov    DWORD PTR [rsp+0x28],eax
  4018ef:	call   0x401670
  4018f4:	mov    rcx,rbx
  4018f7:	add    r15d,eax
  4018fa:	mov    ebx,0x1
  4018ff:	call   0x401ae0
  401904:	jmp    0x4016d1
  401909:	nop    DWORD PTR [rax+0x0]
  401910:	call   QWORD PTR [rip+0x9c42]        # 0x40b558
  401916:	mov    eax,DWORD PTR [rax]
  401918:	cmp    eax,0x2
  40191b:	je     0x401926
  40191d:	cmp    eax,0x14
  401920:	jne    0x4019d7
  401926:	test   r12d,r12d
  401929:	je     0x4016d1
  40192f:	lea    rcx,[rip+0x4a2e]        # 0x406364
  401936:	call   0x403d80
  40193b:	jmp    0x4016d1
  401940:	mov    rdx,QWORD PTR [rsp+0xf8]
  401948:	xor    r8d,r8d
  40194b:	mov    rcx,rsi
  40194e:	call   0x401b30
  401953:	test   rax,rax
  401956:	mov    rdi,rax
  401959:	je     0x401800
  40195f:	test   r12d,r12d
  401962:	je     0x401845
  401968:	mov    rcx,rdi
  40196b:	call   0x401b88
  401970:	mov    rcx,rdi
  401973:	mov    ebx,eax
  401975:	call   0x401b90
  40197a:	lea    rcx,[rip+0x4a3f]        # 0x4063c0
  401981:	mov    edx,eax
  401983:	mov    r8d,ebx
  401986:	call   0x403d88
  40198b:	jmp    0x401845
  401990:	mov    rdx,QWORD PTR [rsp+0xf8]
  401998:	mov    rcx,rsi
  40199b:	call   0x401b20
  4019a0:	jmp    0x4017f1
  4019a5:	call   QWORD PTR [rip+0x9b75]        # 0x40b520
  4019ab:	lea    rdx,[rip+0x4a76]        # 0x406428
  4019b2:	lea    rcx,[rax+0x60]
  4019b6:	mov    r8,rsi
  4019b9:	add    r15d,0x1
  4019bd:	call   0x403dc8
  4019c2:	mov    rdx,QWORD PTR [rsp+0xf8]
  4019ca:	mov    rcx,rsi
  4019cd:	call   0x401b20
  4019d2:	jmp    0x401845
  4019d7:	call   QWORD PTR [rip+0x9b43]        # 0x40b520
  4019dd:	lea    rdx,[rip+0x499c]        # 0x406380
  4019e4:	lea    rcx,[rax+0x60]
  4019e8:	mov    r8,rsi
  4019eb:	add    r15d,0x1
  4019ef:	call   0x403dc8
  4019f4:	lea    rcx,[rip+0x498c]        # 0x406387
  4019fb:	call   0x403d90
  401a00:	jmp    0x4016d1
  401a05:	mov    rcx,rdi
  401a08:	call   0x401b88
  401a0d:	mov    rcx,rdi
  401a10:	mov    ebx,eax
  401a12:	call   0x401b90
  401a17:	lea    rcx,[rip+0x49da]        # 0x4063f8
  401a1e:	mov    edx,eax
  401a20:	mov    r8d,ebx
  401a23:	call   0x403d88
  401a28:	jmp    0x401835
  401a2d:	nop    DWORD PTR [rax]
  401a30:	mov    rax,QWORD PTR [rsp+0x48]
  401a35:	add    r15d,0x1
  401a39:	mov    bl,0x1
  401a3b:	call   rax
  401a3d:	lea    rdx,[rip+0x4a1c]        # 0x406460
  401a44:	lea    rcx,[rax+0x60]
  401a48:	mov    r8,rsi
  401a4b:	call   0x403dc8
  401a50:	jmp    0x4016d1
  401a55:	mov    rax,QWORD PTR [rsp+0x50]
  401a5a:	add    r15d,0x1
  401a5e:	mov    bl,0x1
  401a60:	call   rax
  401a62:	lea    rdx,[rip+0x49da]        # 0x406443
  401a69:	lea    rcx,[rax+0x60]
  401a6d:	mov    r8,rsi
  401a70:	call   0x403dc8
  401a75:	mov    rcx,rdi
  401a78:	call   0x401b18
  401a7d:	jmp    0x4016d1
  401a82:	mov    rax,QWORD PTR [rsp+0x58]
  401a87:	add    r15d,0x1
  401a8b:	mov    ebx,0x1
  401a90:	call   rax
  401a92:	lea    rdx,[rip+0x4910]        # 0x4063a9
  401a99:	lea    rcx,[rax+0x60]
  401a9d:	mov    r8,rsi
  401aa0:	call   0x403dc8
  401aa5:	jmp    0x4016d1
  401aaa:	nop
  401aab:	nop
  401aac:	nop
  401aad:	nop
  401aae:	nop
  401aaf:	nop
  401ab0:	jmp    QWORD PTR [rip+0x9972]        # 0x40b428
  401ab6:	nop
  401ab7:	nop
  401ab8:	jmp    QWORD PTR [rip+0x9962]        # 0x40b420
  401abe:	nop
  401abf:	nop
  401ac0:	jmp    QWORD PTR [rip+0x9952]        # 0x40b418
  401ac6:	nop
  401ac7:	nop
  401ac8:	jmp    QWORD PTR [rip+0x9942]        # 0x40b410
  401ace:	nop
  401acf:	nop
  401ad0:	jmp    QWORD PTR [rip+0x9932]        # 0x40b408
  401ad6:	nop
  401ad7:	nop
  401ad8:	jmp    QWORD PTR [rip+0x9922]        # 0x40b400
  401ade:	nop
  401adf:	nop
  401ae0:	jmp    QWORD PTR [rip+0x9912]        # 0x40b3f8
  401ae6:	nop
  401ae7:	nop
  401ae8:	jmp    QWORD PTR [rip+0x9902]        # 0x40b3f0
  401aee:	nop
  401aef:	nop
  401af0:	jmp    QWORD PTR [rip+0x98f2]        # 0x40b3e8
  401af6:	nop
  401af7:	nop
  401af8:	jmp    QWORD PTR [rip+0x98e2]        # 0x40b3e0
  401afe:	nop
  401aff:	nop
  401b00:	jmp    QWORD PTR [rip+0x98d2]        # 0x40b3d8
  401b06:	nop
  401b07:	nop
  401b08:	jmp    QWORD PTR [rip+0x98c2]        # 0x40b3d0
  401b0e:	nop
  401b0f:	nop
  401b10:	jmp    QWORD PTR [rip+0x98b2]        # 0x40b3c8
  401b16:	nop
  401b17:	nop
  401b18:	jmp    QWORD PTR [rip+0x98a2]        # 0x40b3c0
  401b1e:	nop
  401b1f:	nop
  401b20:	jmp    QWORD PTR [rip+0x9892]        # 0x40b3b8
  401b26:	nop
  401b27:	nop
  401b28:	jmp    QWORD PTR [rip+0x9882]        # 0x40b3b0
  401b2e:	nop
  401b2f:	nop
  401b30:	jmp    QWORD PTR [rip+0x9872]        # 0x40b3a8
  401b36:	nop
  401b37:	nop
  401b38:	jmp    QWORD PTR [rip+0x9862]        # 0x40b3a0
  401b3e:	nop
  401b3f:	nop
  401b40:	jmp    QWORD PTR [rip+0x9852]        # 0x40b398
  401b46:	nop
  401b47:	nop
  401b48:	jmp    QWORD PTR [rip+0x9842]        # 0x40b390
  401b4e:	nop
  401b4f:	nop
  401b50:	jmp    QWORD PTR [rip+0x9832]        # 0x40b388
  401b56:	nop
  401b57:	nop
  401b58:	jmp    QWORD PTR [rip+0x9822]        # 0x40b380
  401b5e:	nop
  401b5f:	nop
  401b60:	jmp    QWORD PTR [rip+0x9812]        # 0x40b378
  401b66:	nop
  401b67:	nop
  401b68:	jmp    QWORD PTR [rip+0x9802]        # 0x40b370
  401b6e:	nop
  401b6f:	nop
  401b70:	jmp    QWORD PTR [rip+0x97f2]        # 0x40b368
  401b76:	nop
  401b77:	nop
  401b78:	jmp    QWORD PTR [rip+0x97e2]        # 0x40b360
  401b7e:	nop
  401b7f:	nop
  401b80:	jmp    QWORD PTR [rip+0x97d2]        # 0x40b358
  401b86:	nop
  401b87:	nop
  401b88:	jmp    QWORD PTR [rip+0x97c2]        # 0x40b350
  401b8e:	nop
  401b8f:	nop
  401b90:	jmp    QWORD PTR [rip+0x97b2]        # 0x40b348
  401b96:	nop
  401b97:	nop
  401b98:	jmp    QWORD PTR [rip+0x97a2]        # 0x40b340
  401b9e:	nop
  401b9f:	nop
  401ba0:	push   rbx
  401ba1:	sub    rsp,0x30
  401ba5:	mov    rbx,rcx
  401ba8:	mov    rcx,QWORD PTR [rip+0x8e61]        # 0x40aa10
  401baf:	call   0x402150
  401bb4:	cmp    rax,0xffffffffffffffff
  401bb8:	mov    QWORD PTR [rsp+0x20],rax
  401bbd:	je     0x401c35
  401bbf:	mov    ecx,0x8
  401bc4:	call   0x403e00
  401bc9:	mov    rcx,QWORD PTR [rip+0x8e40]        # 0x40aa10
  401bd0:	call   0x402150
  401bd5:	mov    rcx,QWORD PTR [rip+0x8e3c]        # 0x40aa18
  401bdc:	mov    QWORD PTR [rsp+0x20],rax
  401be1:	call   0x402150
  401be6:	lea    rdx,[rsp+0x20]
  401beb:	lea    r8,[rsp+0x28]
  401bf0:	mov    rcx,rbx
  401bf3:	mov    QWORD PTR [rsp+0x28],rax
  401bf8:	call   0x403e50
  401bfd:	mov    rcx,QWORD PTR [rsp+0x20]
  401c02:	mov    rbx,rax
  401c05:	call   0x402160
  401c0a:	mov    rcx,QWORD PTR [rsp+0x28]
  401c0f:	mov    QWORD PTR [rip+0x8dfa],rax        # 0x40aa10
  401c16:	call   0x402160
  401c1b:	mov    ecx,0x8
  401c20:	mov    QWORD PTR [rip+0x8df1],rax        # 0x40aa18
  401c27:	call   0x403df0
  401c2c:	mov    rax,rbx
  401c2f:	add    rsp,0x30
  401c33:	pop    rbx
  401c34:	ret    
  401c35:	mov    rax,QWORD PTR [rip+0x4ff4]        # 0x406c30
  401c3c:	mov    rcx,rbx
  401c3f:	call   QWORD PTR [rax]
  401c41:	add    rsp,0x30
  401c45:	pop    rbx
  401c46:	ret    
  401c47:	nop    WORD PTR [rax+rax*1+0x0]
  401c50:	sub    rsp,0x28
  401c54:	call   0x401ba0
  401c59:	test   rax,rax
  401c5c:	sete   al
  401c5f:	movzx  eax,al
  401c62:	neg    eax
  401c64:	add    rsp,0x28
  401c68:	ret    
  401c69:	nop
  401c6a:	nop
  401c6b:	nop
  401c6c:	nop
  401c6d:	nop
  401c6e:	nop
  401c6f:	nop
  401c70:	sub    rsp,0x28
  401c74:	mov    rax,QWORD PTR [rip+0x3395]        # 0x405010
  401c7b:	mov    rax,QWORD PTR [rax]
  401c7e:	test   rax,rax
  401c81:	je     0x401ca0
  401c83:	call   rax
  401c85:	mov    rax,QWORD PTR [rip+0x3384]        # 0x405010
  401c8c:	lea    rdx,[rax+0x8]
  401c90:	mov    rax,QWORD PTR [rax+0x8]
  401c94:	mov    QWORD PTR [rip+0x3375],rdx        # 0x405010
  401c9b:	test   rax,rax
  401c9e:	jne    0x401c83
  401ca0:	add    rsp,0x28
  401ca4:	ret    
  401ca5:	nop
  401ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401cb0:	push   rsi
  401cb1:	push   rbx
  401cb2:	sub    rsp,0x28
  401cb6:	mov    rsi,QWORD PTR [rip+0x4ee3]        # 0x406ba0
  401cbd:	mov    rax,QWORD PTR [rsi]
  401cc0:	cmp    eax,0xffffffff
  401cc3:	mov    ebx,eax
  401cc5:	je     0x401cf0
  401cc7:	test   ebx,ebx
  401cc9:	je     0x401cda
  401ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  401cd0:	mov    eax,ebx
  401cd2:	call   QWORD PTR [rsi+rax*8]
  401cd5:	sub    ebx,0x1
  401cd8:	jne    0x401cd0
  401cda:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401c70
  401ce1:	add    rsp,0x28
  401ce5:	pop    rbx
  401ce6:	pop    rsi
  401ce7:	jmp    0x401c50
  401cec:	nop    DWORD PTR [rax+0x0]
  401cf0:	xor    ebx,ebx
  401cf2:	jmp    0x401cf6
  401cf4:	mov    ebx,eax
  401cf6:	lea    edx,[rbx+0x1]
  401cf9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  401cfe:	mov    rax,rdx
  401d01:	jne    0x401cf4
  401d03:	jmp    0x401cc7
  401d05:	nop
  401d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d10:	mov    eax,DWORD PTR [rip+0x832a]        # 0x40a040
  401d16:	test   eax,eax
  401d18:	je     0x401d20
  401d1a:	repz ret 
  401d1c:	nop    DWORD PTR [rax+0x0]
  401d20:	mov    DWORD PTR [rip+0x8316],0x1        # 0x40a040
  401d2a:	jmp    0x401cb0
  401d2c:	nop
  401d2d:	nop
  401d2e:	nop
  401d2f:	nop
  401d30:	mov    rax,QWORD PTR [rip+0x97f1]        # 0x40b528
  401d37:	rex.W jmp rax
  401d3a:	nop
  401d3b:	nop
  401d3c:	nop
  401d3d:	nop
  401d3e:	nop
  401d3f:	nop
  401d40:	xor    eax,eax
  401d42:	ret    
  401d43:	nop
  401d44:	nop
  401d45:	nop
  401d46:	nop
  401d47:	nop
  401d48:	nop
  401d49:	nop
  401d4a:	nop
  401d4b:	nop
  401d4c:	nop
  401d4d:	nop
  401d4e:	nop
  401d4f:	nop
  401d50:	push   r12
  401d52:	push   rbp
  401d53:	push   rdi
  401d54:	push   rsi
  401d55:	push   rbx
  401d56:	sub    rsp,0x40
  401d5a:	mov    rbx,QWORD PTR [rip+0x333f]        # 0x4050a0
  401d61:	movabs rax,0x2b992ddfa232
  401d6b:	mov    QWORD PTR [rsp+0x20],0x0
  401d74:	cmp    rbx,rax
  401d77:	je     0x401d90
  401d79:	not    rbx
  401d7c:	mov    QWORD PTR [rip+0x332d],rbx        # 0x4050b0
  401d83:	add    rsp,0x40
  401d87:	pop    rbx
  401d88:	pop    rsi
  401d89:	pop    rdi
  401d8a:	pop    rbp
  401d8b:	pop    r12
  401d8d:	ret    
  401d8e:	xchg   ax,ax
  401d90:	lea    rcx,[rsp+0x20]
  401d95:	call   QWORD PTR [rip+0x96d5]        # 0x40b470
  401d9b:	mov    r12,QWORD PTR [rsp+0x20]
  401da0:	call   QWORD PTR [rip+0x96aa]        # 0x40b450
  401da6:	mov    ebp,eax
  401da8:	call   QWORD PTR [rip+0x96aa]        # 0x40b458
  401dae:	mov    edi,eax
  401db0:	call   QWORD PTR [rip+0x96c2]        # 0x40b478
  401db6:	lea    rcx,[rsp+0x30]
  401dbb:	mov    esi,eax
  401dbd:	call   QWORD PTR [rip+0x96cd]        # 0x40b490
  401dc3:	xor    r12,QWORD PTR [rsp+0x30]
  401dc8:	mov    edx,edi
  401dca:	movabs rax,0xffffffffffff
  401dd4:	xor    rbp,r12
  401dd7:	mov    rdi,rbp
  401dda:	xor    rdi,rdx
  401ddd:	mov    edx,esi
  401ddf:	xor    rdi,rdx
  401de2:	mov    rsi,rdi
  401de5:	and    rsi,rax
  401de8:	cmp    rsi,rbx
  401deb:	je     0x401e10
  401ded:	mov    rax,rsi
  401df0:	not    rax
  401df3:	mov    QWORD PTR [rip+0x32a6],rsi        # 0x4050a0
  401dfa:	mov    QWORD PTR [rip+0x32af],rax        # 0x4050b0
  401e01:	add    rsp,0x40
  401e05:	pop    rbx
  401e06:	pop    rsi
  401e07:	pop    rdi
  401e08:	pop    rbp
  401e09:	pop    r12
  401e0b:	ret    
  401e0c:	nop    DWORD PTR [rax+0x0]
  401e10:	movabs rax,0xffffd466d2205dcc
  401e1a:	movabs rsi,0x2b992ddfa233
  401e24:	jmp    0x401df3
  401e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e30:	push   rbp
  401e31:	push   rsi
  401e32:	push   rbx
  401e33:	mov    rbp,rsp
  401e36:	sub    rsp,0x70
  401e3a:	mov    rsi,rcx
  401e3d:	lea    rcx,[rip+0x823c]        # 0x40a080
  401e44:	call   QWORD PTR [rip+0x9656]        # 0x40b4a0
  401e4a:	mov    rbx,QWORD PTR [rip+0x8327]        # 0x40a178
  401e51:	xor    r8d,r8d
  401e54:	lea    rdx,[rbp-0x28]
  401e58:	mov    rcx,rbx
  401e5b:	call   QWORD PTR [rip+0x9647]        # 0x40b4a8
  401e61:	test   rax,rax
  401e64:	mov    r9,rax
  401e67:	je     0x401f10
  401e6d:	lea    rax,[rbp-0x20]
  401e71:	mov    QWORD PTR [rsp+0x38],0x0
  401e7a:	mov    r8,rbx
  401e7d:	mov    rdx,QWORD PTR [rbp-0x28]
  401e81:	xor    ecx,ecx
  401e83:	mov    QWORD PTR [rsp+0x30],rax
  401e88:	lea    rax,[rbp-0x18]
  401e8c:	mov    QWORD PTR [rsp+0x28],rax
  401e91:	lea    rax,[rip+0x81e8]        # 0x40a080
  401e98:	mov    QWORD PTR [rsp+0x20],rax
  401e9d:	call   QWORD PTR [rip+0x960d]        # 0x40b4b0
  401ea3:	mov    rax,QWORD PTR [rip+0x82ce]        # 0x40a178
  401eaa:	xor    ecx,ecx
  401eac:	mov    QWORD PTR [rip+0x824d],rsi        # 0x40a100
  401eb3:	mov    DWORD PTR [rip+0x86c3],0xc0000409        # 0x40a580
  401ebd:	mov    DWORD PTR [rip+0x86bd],0x1        # 0x40a584
  401ec7:	mov    QWORD PTR [rip+0x86c2],rax        # 0x40a590
  401ece:	mov    rax,QWORD PTR [rip+0x31cb]        # 0x4050a0
  401ed5:	mov    QWORD PTR [rbp-0x10],rax
  401ed9:	mov    rax,QWORD PTR [rip+0x31d0]        # 0x4050b0
  401ee0:	mov    QWORD PTR [rbp-0x8],rax
  401ee4:	call   QWORD PTR [rip+0x95ce]        # 0x40b4b8
  401eea:	lea    rcx,[rip+0x48cf]        # 0x4067c0
  401ef1:	call   QWORD PTR [rip+0x95e1]        # 0x40b4d8
  401ef7:	call   QWORD PTR [rip+0x954b]        # 0x40b448
  401efd:	mov    edx,0xc0000409
  401f02:	mov    rcx,rax
  401f05:	call   QWORD PTR [rip+0x95bd]        # 0x40b4c8
  401f0b:	call   0x403de8
  401f10:	mov    rax,QWORD PTR [rbp+0x18]
  401f14:	mov    QWORD PTR [rip+0x825d],rax        # 0x40a178
  401f1b:	lea    rax,[rbp+0x8]
  401f1f:	mov    QWORD PTR [rip+0x81f2],rax        # 0x40a118
  401f26:	jmp    0x401ea3
  401f2b:	nop
  401f2c:	nop
  401f2d:	nop
  401f2e:	nop
  401f2f:	nop
  401f30:	sub    rsp,0x28
  401f34:	test   edx,edx
  401f36:	je     0x401f50
  401f38:	cmp    edx,0x3
  401f3b:	je     0x401f50
  401f3d:	mov    eax,0x1
  401f42:	add    rsp,0x28
  401f46:	ret    
  401f47:	nop    WORD PTR [rax+rax*1+0x0]
  401f50:	call   0x402c40
  401f55:	mov    eax,0x1
  401f5a:	add    rsp,0x28
  401f5e:	ret    
  401f5f:	nop
  401f60:	push   rsi
  401f61:	push   rbx
  401f62:	sub    rsp,0x28
  401f66:	mov    rax,QWORD PTR [rip+0x4c13]        # 0x406b80
  401f6d:	cmp    DWORD PTR [rax],0x2
  401f70:	je     0x401f78
  401f72:	mov    DWORD PTR [rax],0x2
  401f78:	cmp    edx,0x2
  401f7b:	je     0x401f90
  401f7d:	cmp    edx,0x1
  401f80:	je     0x401fc2
  401f82:	mov    eax,0x1
  401f87:	add    rsp,0x28
  401f8b:	pop    rbx
  401f8c:	pop    rsi
  401f8d:	ret    
  401f8e:	xchg   ax,ax
  401f90:	lea    rbx,[rip+0xa0c9]        # 0x40c060
  401f97:	lea    rsi,[rip+0xa0c2]        # 0x40c060
  401f9e:	cmp    rbx,rsi
  401fa1:	je     0x401f82
  401fa3:	mov    rax,QWORD PTR [rbx]
  401fa6:	test   rax,rax
  401fa9:	je     0x401fad
  401fab:	call   rax
  401fad:	add    rbx,0x8
  401fb1:	cmp    rbx,rsi
  401fb4:	jne    0x401fa3
  401fb6:	mov    eax,0x1
  401fbb:	add    rsp,0x28
  401fbf:	pop    rbx
  401fc0:	pop    rsi
  401fc1:	ret    
  401fc2:	call   0x402c40
  401fc7:	jmp    0x401f82
  401fc9:	nop    DWORD PTR [rax+0x0]
  401fd0:	xor    eax,eax
  401fd2:	ret    
  401fd3:	nop
  401fd4:	nop
  401fd5:	nop
  401fd6:	nop
  401fd7:	nop
  401fd8:	nop
  401fd9:	nop
  401fda:	nop
  401fdb:	nop
  401fdc:	nop
  401fdd:	nop
  401fde:	nop
  401fdf:	nop
  401fe0:	sub    rsp,0x58
  401fe4:	mov    rax,QWORD PTR [rip+0x8675]        # 0x40a660
  401feb:	test   rax,rax
  401fee:	je     0x40201c
  401ff0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401ff9:	mov    DWORD PTR [rsp+0x20],ecx
  401ffd:	lea    rcx,[rsp+0x20]
  402002:	mov    QWORD PTR [rsp+0x28],rdx
  402007:	movsd  QWORD PTR [rsp+0x30],xmm2
  40200d:	movsd  QWORD PTR [rsp+0x38],xmm3
  402013:	movsd  QWORD PTR [rsp+0x40],xmm0
  402019:	call   rax
  40201b:	nop
  40201c:	add    rsp,0x58
  402020:	ret    
  402021:	nop    DWORD PTR [rax+rax*1+0x0]
  402026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402030:	mov    QWORD PTR [rip+0x8629],rcx        # 0x40a660
  402037:	jmp    0x403e28
  40203c:	nop    DWORD PTR [rax+0x0]
  402040:	push   rsi
  402041:	push   rbx
  402042:	sub    rsp,0x78
  402046:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40204b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  402050:	movaps XMMWORD PTR [rsp+0x60],xmm8
  402056:	cmp    DWORD PTR [rcx],0x6
  402059:	ja     0x402130
  40205f:	mov    edx,DWORD PTR [rcx]
  402061:	lea    rax,[rip+0x489c]        # 0x406904
  402068:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40206c:	add    rax,rdx
  40206f:	jmp    rax
  402071:	lea    rbx,[rip+0x4768]        # 0x4067e0
  402078:	nop    DWORD PTR [rax+rax*1+0x0]
  402080:	movsd  xmm8,QWORD PTR [rcx+0x20]
  402086:	mov    rsi,QWORD PTR [rcx+0x8]
  40208a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40208f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  402094:	call   0x403e40
  402099:	movsd  QWORD PTR [rsp+0x30],xmm8
  4020a0:	lea    rcx,[rax+0x60]
  4020a4:	lea    rdx,[rip+0x482d]        # 0x4068d8
  4020ab:	movsd  QWORD PTR [rsp+0x28],xmm7
  4020b1:	mov    r9,rsi
  4020b4:	mov    r8,rbx
  4020b7:	movsd  QWORD PTR [rsp+0x20],xmm6
  4020bd:	call   0x403dc8
  4020c2:	nop
  4020c3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4020c8:	xor    eax,eax
  4020ca:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4020cf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4020d5:	add    rsp,0x78
  4020d9:	pop    rbx
  4020da:	pop    rsi
  4020db:	ret    
  4020dc:	nop    DWORD PTR [rax+0x0]
  4020e0:	lea    rbx,[rip+0x4718]        # 0x4067ff
  4020e7:	jmp    0x402080
  4020e9:	nop    DWORD PTR [rax+0x0]
  4020f0:	lea    rbx,[rip+0x4729]        # 0x406820
  4020f7:	jmp    0x402080
  4020f9:	nop    DWORD PTR [rax+0x0]
  402100:	lea    rbx,[rip+0x4789]        # 0x406890
  402107:	jmp    0x402080
  40210c:	nop    DWORD PTR [rax+0x0]
  402110:	lea    rbx,[rip+0x4751]        # 0x406868
  402117:	jmp    0x402080
  40211c:	nop    DWORD PTR [rax+0x0]
  402120:	lea    rbx,[rip+0x4719]        # 0x406840
  402127:	jmp    0x402080
  40212c:	nop    DWORD PTR [rax+0x0]
  402130:	lea    rbx,[rip+0x478f]        # 0x4068c6
  402137:	jmp    0x402080
  40213c:	nop
  40213d:	nop
  40213e:	nop
  40213f:	nop
  402140:	fninit 
  402142:	ret    
  402143:	nop
  402144:	nop
  402145:	nop
  402146:	nop
  402147:	nop
  402148:	nop
  402149:	nop
  40214a:	nop
  40214b:	nop
  40214c:	nop
  40214d:	nop
  40214e:	nop
  40214f:	nop
  402150:	mov    rax,rcx
  402153:	ret    
  402154:	xchg   ax,ax
  402156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402160:	mov    rax,rcx
  402163:	ret    
  402164:	nop
  402165:	nop
  402166:	nop
  402167:	nop
  402168:	nop
  402169:	nop
  40216a:	nop
  40216b:	nop
  40216c:	nop
  40216d:	nop
  40216e:	nop
  40216f:	nop
  402170:	push   rsi
  402171:	push   rbx
  402172:	sub    rsp,0x38
  402176:	lea    rax,[rsp+0x58]
  40217b:	mov    rbx,rcx
  40217e:	mov    QWORD PTR [rsp+0x58],rdx
  402183:	mov    QWORD PTR [rsp+0x60],r8
  402188:	mov    QWORD PTR [rsp+0x68],r9
  40218d:	mov    QWORD PTR [rsp+0x28],rax
  402192:	call   0x403e40
  402197:	lea    rcx,[rip+0x4782]        # 0x406920
  40219e:	lea    r9,[rax+0x60]
  4021a2:	mov    r8d,0x1b
  4021a8:	mov    edx,0x1
  4021ad:	call   0x403db0
  4021b2:	mov    rsi,QWORD PTR [rsp+0x28]
  4021b7:	call   0x403e40
  4021bc:	lea    rcx,[rax+0x60]
  4021c0:	mov    rdx,rbx
  4021c3:	mov    r8,rsi
  4021c6:	call   0x403d58
  4021cb:	call   0x403de8
  4021d0:	nop
  4021d1:	nop    DWORD PTR [rax+rax*1+0x0]
  4021d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021e0:	push   r13
  4021e2:	push   r12
  4021e4:	push   rbp
  4021e5:	push   rdi
  4021e6:	push   rsi
  4021e7:	push   rbx
  4021e8:	sub    rsp,0x58
  4021ec:	movsxd rbp,DWORD PTR [rip+0x8491]        # 0x40a684
  4021f3:	mov    rbx,rcx
  4021f6:	mov    rsi,rdx
  4021f9:	mov    rdi,r8
  4021fc:	test   ebp,ebp
  4021fe:	jle    0x4022fa
  402204:	mov    rax,QWORD PTR [rip+0x847d]        # 0x40a688
  40220b:	xor    r9d,r9d
  40220e:	add    rax,0x8
  402212:	mov    r10,QWORD PTR [rax]
  402215:	cmp    rbx,r10
  402218:	jb     0x40222e
  40221a:	mov    rdx,QWORD PTR [rax+0x8]
  40221e:	mov    r11d,DWORD PTR [rdx+0x8]
  402222:	add    r10,r11
  402225:	cmp    rbx,r10
  402228:	jb     0x4022e0
  40222e:	add    r9d,0x1
  402232:	add    rax,0x18
  402236:	cmp    r9d,ebp
  402239:	jne    0x402212
  40223b:	mov    rcx,rbx
  40223e:	call   0x402e50
  402243:	test   rax,rax
  402246:	mov    r12,rax
  402249:	je     0x402332
  40224f:	lea    rbp,[rbp+rbp*2+0x0]
  402254:	shl    rbp,0x3
  402258:	mov    r13,rbp
  40225b:	add    r13,QWORD PTR [rip+0x8426]        # 0x40a688
  402262:	mov    QWORD PTR [r13+0x10],rax
  402266:	mov    DWORD PTR [r13+0x0],0x0
  40226e:	call   0x402f70
  402273:	mov    edx,DWORD PTR [r12+0xc]
  402278:	mov    r8d,0x30
  40227e:	add    rax,rdx
  402281:	lea    rdx,[rsp+0x20]
  402286:	mov    QWORD PTR [r13+0x8],rax
  40228a:	mov    rax,QWORD PTR [rip+0x83f7]        # 0x40a688
  402291:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  402296:	call   QWORD PTR [rip+0x924c]        # 0x40b4e8
  40229c:	test   rax,rax
  40229f:	je     0x402315
  4022a1:	mov    eax,DWORD PTR [rsp+0x44]
  4022a5:	lea    edx,[rax-0x4]
  4022a8:	and    edx,0xfffffffb
  4022ab:	je     0x4022d9
  4022ad:	sub    eax,0x40
  4022b0:	and    eax,0xffffffbf
  4022b3:	je     0x4022d9
  4022b5:	mov    r9,rbp
  4022b8:	add    r9,QWORD PTR [rip+0x83c9]        # 0x40a688
  4022bf:	mov    r8d,0x40
  4022c5:	mov    rdx,QWORD PTR [rsp+0x38]
  4022ca:	mov    rcx,QWORD PTR [rsp+0x20]
  4022cf:	call   QWORD PTR [rip+0x920b]        # 0x40b4e0
  4022d5:	test   eax,eax
  4022d7:	je     0x402301
  4022d9:	add    DWORD PTR [rip+0x83a4],0x1        # 0x40a684
  4022e0:	mov    r8,rdi
  4022e3:	mov    rdx,rsi
  4022e6:	mov    rcx,rbx
  4022e9:	add    rsp,0x58
  4022ed:	pop    rbx
  4022ee:	pop    rsi
  4022ef:	pop    rdi
  4022f0:	pop    rbp
  4022f1:	pop    r12
  4022f3:	pop    r13
  4022f5:	jmp    0x403d98
  4022fa:	xor    ebp,ebp
  4022fc:	jmp    0x40223b
  402301:	call   QWORD PTR [rip+0x9159]        # 0x40b460
  402307:	lea    rcx,[rip+0x468a]        # 0x406998
  40230e:	mov    edx,eax
  402310:	call   0x402170
  402315:	mov    rax,QWORD PTR [rip+0x836c]        # 0x40a688
  40231c:	mov    edx,DWORD PTR [r12+0x8]
  402321:	lea    rcx,[rip+0x4638]        # 0x406960
  402328:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40232d:	call   0x402170
  402332:	lea    rcx,[rip+0x4607]        # 0x406940
  402339:	mov    rdx,rbx
  40233c:	call   0x402170
  402341:	nop
  402342:	nop    DWORD PTR [rax+0x0]
  402346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402350:	push   rbp
  402351:	push   r14
  402353:	push   r13
  402355:	push   r12
  402357:	push   rdi
  402358:	push   rsi
  402359:	push   rbx
  40235a:	mov    rbp,rsp
  40235d:	sub    rsp,0x60
  402361:	mov    ebx,DWORD PTR [rip+0x8319]        # 0x40a680
  402367:	test   ebx,ebx
  402369:	je     0x402380
  40236b:	mov    rsp,rbp
  40236e:	pop    rbx
  40236f:	pop    rsi
  402370:	pop    rdi
  402371:	pop    r12
  402373:	pop    r13
  402375:	pop    r14
  402377:	pop    rbp
  402378:	ret    
  402379:	nop    DWORD PTR [rax+0x0]
  402380:	mov    DWORD PTR [rip+0x82f6],0x1        # 0x40a680
  40238a:	call   0x402ea0
  40238f:	cdqe   
  402391:	lea    rax,[rax+rax*2]
  402395:	lea    rax,[rax*8+0x1e]
  40239d:	and    rax,0xfffffffffffffff0
  4023a1:	call   0x4030c0
  4023a6:	mov    rsi,QWORD PTR [rip+0x4803]        # 0x406bb0
  4023ad:	mov    rbx,QWORD PTR [rip+0x480c]        # 0x406bc0
  4023b4:	sub    rsp,rax
  4023b7:	mov    DWORD PTR [rip+0x82c3],0x0        # 0x40a684
  4023c1:	lea    rax,[rsp+0x20]
  4023c6:	mov    QWORD PTR [rip+0x82bb],rax        # 0x40a688
  4023cd:	mov    rax,rsi
  4023d0:	sub    rax,rbx
  4023d3:	cmp    rax,0x7
  4023d7:	jle    0x40236b
  4023d9:	cmp    rax,0xb
  4023dd:	jle    0x402405
  4023df:	mov    r11d,DWORD PTR [rbx]
  4023e2:	test   r11d,r11d
  4023e5:	jne    0x402530
  4023eb:	mov    r10d,DWORD PTR [rbx+0x4]
  4023ef:	test   r10d,r10d
  4023f2:	jne    0x402530
  4023f8:	mov    r9d,DWORD PTR [rbx+0x8]
  4023fc:	test   r9d,r9d
  4023ff:	jne    0x40241c
  402401:	add    rbx,0xc
  402405:	mov    r8d,DWORD PTR [rbx]
  402408:	test   r8d,r8d
  40240b:	jne    0x402530
  402411:	mov    ecx,DWORD PTR [rbx+0x4]
  402414:	test   ecx,ecx
  402416:	jne    0x402530
  40241c:	mov    edx,DWORD PTR [rbx+0x8]
  40241f:	cmp    edx,0x1
  402422:	jne    0x40263c
  402428:	add    rbx,0xc
  40242c:	cmp    rbx,rsi
  40242f:	jae    0x40236b
  402435:	mov    r12,QWORD PTR [rip+0x47a4]        # 0x406be0
  40243c:	lea    r13,[rbp-0x30]
  402440:	movabs r14,0xffffffff00000000
  40244a:	mov    ecx,DWORD PTR [rbx+0x4]
  40244d:	mov    eax,DWORD PTR [rbx]
  40244f:	movzx  edx,BYTE PTR [rbx+0x8]
  402453:	add    rax,r12
  402456:	add    rcx,r12
  402459:	cmp    edx,0x10
  40245c:	mov    r8,QWORD PTR [rax]
  40245f:	je     0x4025a6
  402465:	jbe    0x40256d
  40246b:	cmp    edx,0x20
  40246e:	je     0x4025ef
  402474:	cmp    edx,0x40
  402477:	jne    0x4025db
  40247d:	sub    r8,rax
  402480:	mov    rdx,r13
  402483:	mov    rdi,r13
  402486:	mov    rax,r8
  402489:	add    rax,QWORD PTR [rcx]
  40248c:	mov    r8d,0x8
  402492:	mov    QWORD PTR [rbp-0x30],rax
  402496:	call   0x4021e0
  40249b:	add    rbx,0xc
  40249f:	cmp    rbx,rsi
  4024a2:	jb     0x40244a
  4024a4:	mov    eax,DWORD PTR [rip+0x81da]        # 0x40a684
  4024aa:	xor    ebx,ebx
  4024ac:	xor    esi,esi
  4024ae:	test   eax,eax
  4024b0:	jle    0x40236b
  4024b6:	mov    r14,QWORD PTR [rip+0x902b]        # 0x40b4e8
  4024bd:	lea    r13,[rbp-0x34]
  4024c1:	mov    r12,QWORD PTR [rip+0x9018]        # 0x40b4e0
  4024c8:	jmp    0x4024e3
  4024ca:	nop    WORD PTR [rax+rax*1+0x0]
  4024d0:	add    esi,0x1
  4024d3:	add    rbx,0x18
  4024d7:	cmp    esi,DWORD PTR [rip+0x81a7]        # 0x40a684
  4024dd:	jge    0x40236b
  4024e3:	mov    rax,rbx
  4024e6:	add    rax,QWORD PTR [rip+0x819b]        # 0x40a688
  4024ed:	mov    edx,DWORD PTR [rax]
  4024ef:	test   edx,edx
  4024f1:	je     0x4024d0
  4024f3:	mov    rcx,QWORD PTR [rax+0x8]
  4024f7:	mov    r8d,0x30
  4024fd:	mov    rdx,rdi
  402500:	call   r14
  402503:	test   rax,rax
  402506:	je     0x40261e
  40250c:	mov    rax,QWORD PTR [rip+0x8175]        # 0x40a688
  402513:	mov    r9,r13
  402516:	mov    rdx,QWORD PTR [rbp-0x18]
  40251a:	mov    rcx,QWORD PTR [rbp-0x30]
  40251e:	mov    r8d,DWORD PTR [rax+rbx*1]
  402522:	call   r12
  402525:	jmp    0x4024d0
  402527:	nop    WORD PTR [rax+rax*1+0x0]
  402530:	cmp    rbx,rsi
  402533:	jae    0x40236b
  402539:	mov    r12,QWORD PTR [rip+0x46a0]        # 0x406be0
  402540:	lea    rdi,[rbp-0x30]
  402544:	mov    ecx,DWORD PTR [rbx+0x4]
  402547:	mov    eax,DWORD PTR [rbx]
  402549:	mov    r8d,0x4
  40254f:	mov    rdx,rdi
  402552:	add    rbx,0x8
  402556:	add    rcx,r12
  402559:	add    eax,DWORD PTR [rcx]
  40255b:	mov    DWORD PTR [rbp-0x30],eax
  40255e:	call   0x4021e0
  402563:	cmp    rbx,rsi
  402566:	jb     0x402544
  402568:	jmp    0x4024a4
  40256d:	cmp    edx,0x8
  402570:	jne    0x4025db
  402572:	movzx  edx,BYTE PTR [rcx]
  402575:	mov    rdi,r13
  402578:	mov    r10,rdx
  40257b:	or     r10,0xffffffffffffff00
  402582:	test   dl,dl
  402584:	cmovs  rdx,r10
  402588:	sub    rdx,rax
  40258b:	lea    rax,[r8+rdx*1]
  40258f:	mov    r8d,0x1
  402595:	mov    rdx,r13
  402598:	mov    QWORD PTR [rbp-0x30],rax
  40259c:	call   0x4021e0
  4025a1:	jmp    0x40249b
  4025a6:	movzx  edx,WORD PTR [rcx]
  4025a9:	mov    rdi,r13
  4025ac:	mov    r10,rdx
  4025af:	or     r10,0xffffffffffff0000
  4025b6:	test   dx,dx
  4025b9:	cmovs  rdx,r10
  4025bd:	sub    rdx,rax
  4025c0:	lea    rax,[r8+rdx*1]
  4025c4:	mov    r8d,0x2
  4025ca:	mov    rdx,r13
  4025cd:	mov    QWORD PTR [rbp-0x30],rax
  4025d1:	call   0x4021e0
  4025d6:	jmp    0x40249b
  4025db:	lea    rcx,[rip+0x4416]        # 0x4069f8
  4025e2:	mov    QWORD PTR [rbp-0x30],0x0
  4025ea:	call   0x402170
  4025ef:	mov    edx,DWORD PTR [rcx]
  4025f1:	mov    rdi,r13
  4025f4:	mov    r10,rdx
  4025f7:	or     r10,r14
  4025fa:	test   edx,edx
  4025fc:	cmovs  rdx,r10
  402600:	sub    rdx,rax
  402603:	lea    rax,[r8+rdx*1]
  402607:	mov    r8d,0x4
  40260d:	mov    rdx,r13
  402610:	mov    QWORD PTR [rbp-0x30],rax
  402614:	call   0x4021e0
  402619:	jmp    0x40249b
  40261e:	add    rbx,QWORD PTR [rip+0x8063]        # 0x40a688
  402625:	lea    rcx,[rip+0x4334]        # 0x406960
  40262c:	mov    rax,QWORD PTR [rbx+0x10]
  402630:	mov    r8,QWORD PTR [rbx+0x8]
  402634:	mov    edx,DWORD PTR [rax+0x8]
  402637:	call   0x402170
  40263c:	lea    rcx,[rip+0x437d]        # 0x4069c0
  402643:	call   0x402170
  402648:	nop
  402649:	nop
  40264a:	nop
  40264b:	nop
  40264c:	nop
  40264d:	nop
  40264e:	nop
  40264f:	nop
  402650:	sub    rsp,0x28
  402654:	mov    eax,DWORD PTR [rcx]
  402656:	cmp    eax,0xc0000091
  40265b:	ja     0x4026c0
  40265d:	cmp    eax,0xc000008d
  402662:	jae    0x4026df
  402664:	cmp    eax,0xc0000008
  402669:	je     0x402780
  40266f:	ja     0x402750
  402675:	cmp    eax,0x80000002
  40267a:	je     0x402780
  402680:	cmp    eax,0xc0000005
  402685:	jne    0x40275e
  40268b:	xor    edx,edx
  40268d:	mov    ecx,0xb
  402692:	call   0x403d78
  402697:	cmp    rax,0x1
  40269b:	je     0x4027e0
  4026a1:	test   rax,rax
  4026a4:	je     0x4027c0
  4026aa:	mov    ecx,0xb
  4026af:	call   rax
  4026b1:	xor    eax,eax
  4026b3:	add    rsp,0x28
  4026b7:	ret    
  4026b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4026c0:	cmp    eax,0xc0000094
  4026c5:	je     0x402790
  4026cb:	ja     0x402710
  4026cd:	cmp    eax,0xc0000092
  4026d2:	je     0x402780
  4026d8:	cmp    eax,0xc0000093
  4026dd:	jne    0x40275e
  4026df:	xor    edx,edx
  4026e1:	mov    ecx,0x8
  4026e6:	call   0x403d78
  4026eb:	cmp    rax,0x1
  4026ef:	mov    rdx,rax
  4026f2:	je     0x402768
  4026f4:	test   rdx,rdx
  4026f7:	mov    eax,0x1
  4026fc:	je     0x4026b3
  4026fe:	mov    ecx,0x8
  402703:	call   rdx
  402705:	xor    eax,eax
  402707:	add    rsp,0x28
  40270b:	ret    
  40270c:	nop    DWORD PTR [rax+0x0]
  402710:	cmp    eax,0xc0000095
  402715:	je     0x402780
  402717:	cmp    eax,0xc0000096
  40271c:	jne    0x40275e
  40271e:	xor    edx,edx
  402720:	mov    ecx,0x4
  402725:	call   0x403d78
  40272a:	cmp    rax,0x1
  40272e:	je     0x4027ca
  402734:	test   rax,rax
  402737:	je     0x4027c0
  40273d:	mov    ecx,0x4
  402742:	call   rax
  402744:	xor    eax,eax
  402746:	jmp    0x4026b3
  40274b:	nop    DWORD PTR [rax+rax*1+0x0]
  402750:	cmp    eax,0xc000001d
  402755:	je     0x40271e
  402757:	cmp    eax,0xc000008c
  40275c:	je     0x402780
  40275e:	mov    eax,0x1
  402763:	add    rsp,0x28
  402767:	ret    
  402768:	mov    edx,0x1
  40276d:	mov    ecx,0x8
  402772:	call   0x403d78
  402777:	call   0x402140
  40277c:	nop    DWORD PTR [rax+0x0]
  402780:	xor    eax,eax
  402782:	add    rsp,0x28
  402786:	ret    
  402787:	nop    WORD PTR [rax+rax*1+0x0]
  402790:	xor    edx,edx
  402792:	mov    ecx,0x8
  402797:	call   0x403d78
  40279c:	cmp    rax,0x1
  4027a0:	mov    rdx,rax
  4027a3:	jne    0x4026f4
  4027a9:	mov    edx,0x1
  4027ae:	mov    ecx,0x8
  4027b3:	call   0x403d78
  4027b8:	xor    eax,eax
  4027ba:	jmp    0x4026b3
  4027bf:	nop
  4027c0:	mov    eax,0x4
  4027c5:	add    rsp,0x28
  4027c9:	ret    
  4027ca:	mov    edx,0x1
  4027cf:	mov    ecx,0x4
  4027d4:	call   0x403d78
  4027d9:	xor    eax,eax
  4027db:	jmp    0x4026b3
  4027e0:	mov    edx,0x1
  4027e5:	mov    ecx,0xb
  4027ea:	call   0x403d78
  4027ef:	xor    eax,eax
  4027f1:	jmp    0x4026b3
  4027f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402800:	push   r12
  402802:	push   rbp
  402803:	push   rdi
  402804:	push   rsi
  402805:	push   rbx
  402806:	sub    rsp,0x20
  40280a:	call   0x402f70
  40280f:	mov    rbp,rax
  402812:	mov    eax,DWORD PTR [rip+0x7eb0]        # 0x40a6c8
  402818:	test   eax,eax
  40281a:	jne    0x402841
  40281c:	test   rbp,rbp
  40281f:	je     0x402841
  402821:	lea    rcx,[rip+0x4208]        # 0x406a30
  402828:	mov    DWORD PTR [rip+0x7e96],0x1        # 0x40a6c8
  402832:	call   0x402db0
  402837:	test   rax,rax
  40283a:	je     0x402850
  40283c:	mov    eax,0x1
  402841:	add    rsp,0x20
  402845:	pop    rbx
  402846:	pop    rsi
  402847:	pop    rdi
  402848:	pop    rbp
  402849:	pop    r12
  40284b:	ret    
  40284c:	nop    DWORD PTR [rax+0x0]
  402850:	lea    rbx,[rip+0x7fa9]        # 0x40a800
  402857:	mov    ecx,0x30
  40285c:	lea    rdx,[rip+0x7e9d]        # 0x40a700
  402863:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402650
  40286a:	xor    esi,esi
  40286c:	mov    rdi,rbx
  40286f:	rep stos QWORD PTR es:[rdi],rax
  402872:	mov    rdi,rdx
  402875:	sub    r12,rbp
  402878:	mov    cl,0x20
  40287a:	rep stos QWORD PTR es:[rdi],rax
  40287d:	mov    rdi,rdx
  402880:	jmp    0x4028b0
  402882:	mov    BYTE PTR [rdi],0x9
  402885:	mov    DWORD PTR [rdi+0x4],r12d
  402889:	add    rsi,0x1
  40288d:	mov    edx,DWORD PTR [rax+0xc]
  402890:	add    rbx,0xc
  402894:	mov    DWORD PTR [rbx-0xc],edx
  402897:	add    edx,DWORD PTR [rax+0x8]
  40289a:	mov    rax,rdi
  40289d:	sub    rax,rbp
  4028a0:	add    rdi,0x8
  4028a4:	mov    DWORD PTR [rbx-0x4],eax
  4028a7:	mov    DWORD PTR [rbx-0x8],edx
  4028aa:	cmp    rsi,0x20
  4028ae:	je     0x4028e5
  4028b0:	mov    rcx,rsi
  4028b3:	call   0x402ee0
  4028b8:	test   rax,rax
  4028bb:	jne    0x402882
  4028bd:	test   rsi,rsi
  4028c0:	je     0x40283c
  4028c6:	mov    edx,esi
  4028c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4028d0:	mov    r8,rbp
  4028d3:	lea    rcx,[rip+0x7f26]        # 0x40a800
  4028da:	call   QWORD PTR [rip+0x8bb8]        # 0x40b498
  4028e0:	jmp    0x40283c
  4028e5:	mov    edx,0x20
  4028ea:	jmp    0x4028d0
  4028ec:	nop    DWORD PTR [rax+0x0]
  4028f0:	push   rbx
  4028f1:	sub    rsp,0x20
  4028f5:	mov    rdx,QWORD PTR [rcx]
  4028f8:	mov    eax,DWORD PTR [rdx]
  4028fa:	mov    r8d,eax
  4028fd:	and    r8d,0x20ffffff
  402904:	cmp    r8d,0x20474343
  40290b:	je     0x402a10
  402911:	cmp    eax,0xc0000091
  402916:	mov    rbx,rcx
  402919:	ja     0x4029a0
  40291f:	cmp    eax,0xc000008d
  402924:	jae    0x4029b7
  40292a:	cmp    eax,0xc0000008
  40292f:	je     0x402963
  402931:	ja     0x402970
  402933:	cmp    eax,0x80000002
  402938:	je     0x402963
  40293a:	cmp    eax,0xc0000005
  40293f:	jne    0x402982
  402941:	xor    edx,edx
  402943:	mov    ecx,0xb
  402948:	call   0x403d78
  40294d:	cmp    rax,0x1
  402951:	je     0x402a80
  402957:	test   rax,rax
  40295a:	je     0x402982
  40295c:	mov    ecx,0xb
  402961:	call   rax
  402963:	mov    eax,0xffffffff
  402968:	add    rsp,0x20
  40296c:	pop    rbx
  40296d:	ret    
  40296e:	xchg   ax,ax
  402970:	cmp    eax,0xc000001d
  402975:	je     0x402a36
  40297b:	cmp    eax,0xc000008c
  402980:	je     0x402963
  402982:	mov    rax,QWORD PTR [rip+0x7d37]        # 0x40a6c0
  402989:	test   rax,rax
  40298c:	je     0x402968
  40298e:	mov    rcx,rbx
  402991:	add    rsp,0x20
  402995:	pop    rbx
  402996:	rex.W jmp rax
  402999:	nop    DWORD PTR [rax+0x0]
  4029a0:	cmp    eax,0xc0000094
  4029a5:	je     0x4029e2
  4029a7:	ja     0x402a20
  4029a9:	cmp    eax,0xc0000092
  4029ae:	je     0x402963
  4029b0:	cmp    eax,0xc0000093
  4029b5:	jne    0x402982
  4029b7:	xor    edx,edx
  4029b9:	mov    ecx,0x8
  4029be:	call   0x403d78
  4029c3:	cmp    rax,0x1
  4029c7:	jne    0x4029f4
  4029c9:	mov    edx,0x1
  4029ce:	mov    ecx,0x8
  4029d3:	call   0x403d78
  4029d8:	call   0x402140
  4029dd:	jmp    0x402963
  4029e2:	xor    edx,edx
  4029e4:	mov    ecx,0x8
  4029e9:	call   0x403d78
  4029ee:	cmp    rax,0x1
  4029f2:	je     0x402a62
  4029f4:	test   rax,rax
  4029f7:	je     0x402982
  4029f9:	mov    ecx,0x8
  4029fe:	call   rax
  402a00:	mov    eax,0xffffffff
  402a05:	jmp    0x402968
  402a0a:	nop    WORD PTR [rax+rax*1+0x0]
  402a10:	test   BYTE PTR [rdx+0x4],0x1
  402a14:	jne    0x402911
  402a1a:	jmp    0x402963
  402a1f:	nop
  402a20:	cmp    eax,0xc0000095
  402a25:	je     0x402963
  402a2b:	cmp    eax,0xc0000096
  402a30:	jne    0x402982
  402a36:	xor    edx,edx
  402a38:	mov    ecx,0x4
  402a3d:	call   0x403d78
  402a42:	cmp    rax,0x1
  402a46:	je     0x402a94
  402a48:	test   rax,rax
  402a4b:	je     0x402982
  402a51:	mov    ecx,0x4
  402a56:	call   rax
  402a58:	mov    eax,0xffffffff
  402a5d:	jmp    0x402968
  402a62:	mov    edx,0x1
  402a67:	mov    ecx,0x8
  402a6c:	call   0x403d78
  402a71:	jmp    0x402963
  402a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a80:	mov    edx,0x1
  402a85:	mov    ecx,0xb
  402a8a:	call   0x403d78
  402a8f:	jmp    0x402963
  402a94:	mov    edx,0x1
  402a99:	mov    ecx,0x4
  402a9e:	call   0x403d78
  402aa3:	jmp    0x402963
  402aa8:	nop
  402aa9:	nop
  402aaa:	nop
  402aab:	nop
  402aac:	nop
  402aad:	nop
  402aae:	nop
  402aaf:	nop
  402ab0:	push   rbp
  402ab1:	push   rdi
  402ab2:	push   rsi
  402ab3:	push   rbx
  402ab4:	sub    rsp,0x28
  402ab8:	lea    rcx,[rip+0x7ee1]        # 0x40a9a0
  402abf:	call   QWORD PTR [rip+0x897b]        # 0x40b440
  402ac5:	mov    rbx,QWORD PTR [rip+0x7eb4]        # 0x40a980
  402acc:	test   rbx,rbx
  402acf:	je     0x402b04
  402ad1:	mov    rbp,QWORD PTR [rip+0x89f8]        # 0x40b4d0
  402ad8:	mov    rdi,QWORD PTR [rip+0x8981]        # 0x40b460
  402adf:	nop
  402ae0:	mov    ecx,DWORD PTR [rbx]
  402ae2:	call   rbp
  402ae4:	mov    rsi,rax
  402ae7:	call   rdi
  402ae9:	test   eax,eax
  402aeb:	jne    0x402afb
  402aed:	test   rsi,rsi
  402af0:	je     0x402afb
  402af2:	mov    rax,QWORD PTR [rbx+0x8]
  402af6:	mov    rcx,rsi
  402af9:	call   rax
  402afb:	mov    rbx,QWORD PTR [rbx+0x10]
  402aff:	test   rbx,rbx
  402b02:	jne    0x402ae0
  402b04:	mov    rax,QWORD PTR [rip+0x897d]        # 0x40b488
  402b0b:	lea    rcx,[rip+0x7e8e]        # 0x40a9a0
  402b12:	add    rsp,0x28
  402b16:	pop    rbx
  402b17:	pop    rsi
  402b18:	pop    rdi
  402b19:	pop    rbp
  402b1a:	rex.W jmp rax
  402b1d:	nop    DWORD PTR [rax]
  402b20:	push   rdi
  402b21:	push   rsi
  402b22:	push   rbx
  402b23:	sub    rsp,0x20
  402b27:	mov    eax,DWORD PTR [rip+0x7e5b]        # 0x40a988
  402b2d:	test   eax,eax
  402b2f:	jne    0x402b40
  402b31:	add    rsp,0x20
  402b35:	pop    rbx
  402b36:	pop    rsi
  402b37:	pop    rdi
  402b38:	ret    
  402b39:	nop    DWORD PTR [rax+0x0]
  402b40:	mov    rsi,rdx
  402b43:	mov    edi,ecx
  402b45:	mov    edx,0x18
  402b4a:	mov    ecx,0x1
  402b4f:	call   0x403de0
  402b54:	test   rax,rax
  402b57:	mov    rbx,rax
  402b5a:	je     0x402b98
  402b5c:	mov    DWORD PTR [rax],edi
  402b5e:	mov    QWORD PTR [rax+0x8],rsi
  402b62:	lea    rcx,[rip+0x7e37]        # 0x40a9a0
  402b69:	call   QWORD PTR [rip+0x88d1]        # 0x40b440
  402b6f:	mov    rax,QWORD PTR [rip+0x7e0a]        # 0x40a980
  402b76:	lea    rcx,[rip+0x7e23]        # 0x40a9a0
  402b7d:	mov    QWORD PTR [rip+0x7dfc],rbx        # 0x40a980
  402b84:	mov    QWORD PTR [rbx+0x10],rax
  402b88:	call   QWORD PTR [rip+0x88fa]        # 0x40b488
  402b8e:	xor    eax,eax
  402b90:	add    rsp,0x20
  402b94:	pop    rbx
  402b95:	pop    rsi
  402b96:	pop    rdi
  402b97:	ret    
  402b98:	mov    eax,0xffffffff
  402b9d:	jmp    0x402b31
  402b9f:	nop
  402ba0:	push   rbx
  402ba1:	sub    rsp,0x20
  402ba5:	mov    eax,DWORD PTR [rip+0x7ddd]        # 0x40a988
  402bab:	test   eax,eax
  402bad:	jne    0x402bc0
  402baf:	xor    eax,eax
  402bb1:	add    rsp,0x20
  402bb5:	pop    rbx
  402bb6:	ret    
  402bb7:	nop    WORD PTR [rax+rax*1+0x0]
  402bc0:	mov    ebx,ecx
  402bc2:	lea    rcx,[rip+0x7dd7]        # 0x40a9a0
  402bc9:	call   QWORD PTR [rip+0x8871]        # 0x40b440
  402bcf:	mov    rdx,QWORD PTR [rip+0x7daa]        # 0x40a980
  402bd6:	test   rdx,rdx
  402bd9:	je     0x402bf7
  402bdb:	mov    eax,DWORD PTR [rdx]
  402bdd:	cmp    eax,ebx
  402bdf:	jne    0x402bee
  402be1:	jmp    0x402c2f
  402be3:	mov    r8d,DWORD PTR [rax]
  402be6:	cmp    r8d,ebx
  402be9:	je     0x402c10
  402beb:	mov    rdx,rax
  402bee:	mov    rax,QWORD PTR [rdx+0x10]
  402bf2:	test   rax,rax
  402bf5:	jne    0x402be3
  402bf7:	lea    rcx,[rip+0x7da2]        # 0x40a9a0
  402bfe:	call   QWORD PTR [rip+0x8884]        # 0x40b488
  402c04:	xor    eax,eax
  402c06:	add    rsp,0x20
  402c0a:	pop    rbx
  402c0b:	ret    
  402c0c:	nop    DWORD PTR [rax+0x0]
  402c10:	mov    rcx,rax
  402c13:	mov    rax,QWORD PTR [rax+0x10]
  402c17:	mov    QWORD PTR [rdx+0x10],rax
  402c1b:	call   0x403db8
  402c20:	lea    rcx,[rip+0x7d79]        # 0x40a9a0
  402c27:	call   QWORD PTR [rip+0x885b]        # 0x40b488
  402c2d:	jmp    0x402c04
  402c2f:	mov    rax,QWORD PTR [rdx+0x10]
  402c33:	mov    rcx,rdx
  402c36:	mov    QWORD PTR [rip+0x7d43],rax        # 0x40a980
  402c3d:	jmp    0x402c1b
  402c3f:	nop
  402c40:	push   rbx
  402c41:	sub    rsp,0x20
  402c45:	cmp    edx,0x1
  402c48:	je     0x402ce0
  402c4e:	jb     0x402c80
  402c50:	cmp    edx,0x2
  402c53:	je     0x402c70
  402c55:	cmp    edx,0x3
  402c58:	jne    0x402c75
  402c5a:	mov    eax,DWORD PTR [rip+0x7d28]        # 0x40a988
  402c60:	test   eax,eax
  402c62:	je     0x402c75
  402c64:	call   0x402ab0
  402c69:	jmp    0x402c75
  402c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  402c70:	call   0x402140
  402c75:	mov    eax,0x1
  402c7a:	add    rsp,0x20
  402c7e:	pop    rbx
  402c7f:	ret    
  402c80:	mov    eax,DWORD PTR [rip+0x7d02]        # 0x40a988
  402c86:	test   eax,eax
  402c88:	jne    0x402d10
  402c8e:	mov    eax,DWORD PTR [rip+0x7cf4]        # 0x40a988
  402c94:	cmp    eax,0x1
  402c97:	jne    0x402c75
  402c99:	mov    rcx,QWORD PTR [rip+0x7ce0]        # 0x40a980
  402ca0:	test   rcx,rcx
  402ca3:	je     0x402cb6
  402ca5:	mov    rbx,QWORD PTR [rcx+0x10]
  402ca9:	call   0x403db8
  402cae:	test   rbx,rbx
  402cb1:	mov    rcx,rbx
  402cb4:	jne    0x402ca5
  402cb6:	lea    rcx,[rip+0x7ce3]        # 0x40a9a0
  402cbd:	mov    QWORD PTR [rip+0x7cb8],0x0        # 0x40a980
  402cc8:	mov    DWORD PTR [rip+0x7cb6],0x0        # 0x40a988
  402cd2:	call   QWORD PTR [rip+0x8760]        # 0x40b438
  402cd8:	jmp    0x402c75
  402cda:	nop    WORD PTR [rax+rax*1+0x0]
  402ce0:	mov    eax,DWORD PTR [rip+0x7ca2]        # 0x40a988
  402ce6:	test   eax,eax
  402ce8:	je     0x402d00
  402cea:	mov    eax,0x1
  402cef:	mov    DWORD PTR [rip+0x7c8f],0x1        # 0x40a988
  402cf9:	add    rsp,0x20
  402cfd:	pop    rbx
  402cfe:	ret    
  402cff:	nop
  402d00:	lea    rcx,[rip+0x7c99]        # 0x40a9a0
  402d07:	call   QWORD PTR [rip+0x8773]        # 0x40b480
  402d0d:	jmp    0x402cea
  402d0f:	nop
  402d10:	call   0x402ab0
  402d15:	jmp    0x402c8e
  402d1a:	nop
  402d1b:	nop
  402d1c:	nop
  402d1d:	nop
  402d1e:	nop
  402d1f:	nop
  402d20:	movsxd rax,DWORD PTR [rcx+0x3c]
  402d24:	add    rcx,rax
  402d27:	xor    eax,eax
  402d29:	cmp    DWORD PTR [rcx],0x4550
  402d2f:	je     0x402d33
  402d31:	repz ret 
  402d33:	xor    eax,eax
  402d35:	cmp    WORD PTR [rcx+0x18],0x20b
  402d3b:	sete   al
  402d3e:	ret    
  402d3f:	nop
  402d40:	cmp    WORD PTR [rcx],0x5a4d
  402d45:	je     0x402d50
  402d47:	xor    eax,eax
  402d49:	ret    
  402d4a:	nop    WORD PTR [rax+rax*1+0x0]
  402d50:	jmp    0x402d20
  402d52:	nop    DWORD PTR [rax+0x0]
  402d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d60:	movsxd rax,DWORD PTR [rcx+0x3c]
  402d64:	add    rcx,rax
  402d67:	movzx  eax,WORD PTR [rcx+0x14]
  402d6b:	lea    rax,[rcx+rax*1+0x18]
  402d70:	movzx  ecx,WORD PTR [rcx+0x6]
  402d74:	test   ecx,ecx
  402d76:	je     0x402da1
  402d78:	sub    ecx,0x1
  402d7b:	lea    rcx,[rcx+rcx*4]
  402d7f:	lea    r9,[rax+rcx*8+0x28]
  402d84:	mov    r8d,DWORD PTR [rax+0xc]
  402d88:	cmp    r8,rdx
  402d8b:	mov    rcx,r8
  402d8e:	ja     0x402d98
  402d90:	add    ecx,DWORD PTR [rax+0x8]
  402d93:	cmp    rdx,rcx
  402d96:	jb     0x402da3
  402d98:	add    rax,0x28
  402d9c:	cmp    rax,r9
  402d9f:	jne    0x402d84
  402da1:	xor    eax,eax
  402da3:	repz ret 
  402da5:	nop
  402da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402db0:	push   rdi
  402db1:	push   rsi
  402db2:	push   rbx
  402db3:	sub    rsp,0x20
  402db7:	mov    rsi,rcx
  402dba:	call   0x403d68
  402dbf:	cmp    rax,0x8
  402dc3:	ja     0x402de0
  402dc5:	mov    rbx,QWORD PTR [rip+0x3e14]        # 0x406be0
  402dcc:	xor    edi,edi
  402dce:	cmp    WORD PTR [rbx],0x5a4d
  402dd3:	je     0x402df0
  402dd5:	mov    rax,rdi
  402dd8:	add    rsp,0x20
  402ddc:	pop    rbx
  402ddd:	pop    rsi
  402dde:	pop    rdi
  402ddf:	ret    
  402de0:	xor    edi,edi
  402de2:	mov    rax,rdi
  402de5:	add    rsp,0x20
  402de9:	pop    rbx
  402dea:	pop    rsi
  402deb:	pop    rdi
  402dec:	ret    
  402ded:	nop    DWORD PTR [rax]
  402df0:	mov    rcx,rbx
  402df3:	call   0x402d20
  402df8:	test   eax,eax
  402dfa:	je     0x402dd5
  402dfc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402e00:	add    rdx,rbx
  402e03:	movzx  eax,WORD PTR [rdx+0x14]
  402e07:	lea    rbx,[rdx+rax*1+0x18]
  402e0c:	movzx  eax,WORD PTR [rdx+0x6]
  402e10:	test   eax,eax
  402e12:	je     0x402dd5
  402e14:	sub    eax,0x1
  402e17:	lea    rax,[rax+rax*4]
  402e1b:	lea    rdi,[rbx+rax*8+0x28]
  402e20:	jmp    0x402e2b
  402e22:	add    rbx,0x28
  402e26:	cmp    rbx,rdi
  402e29:	je     0x402de0
  402e2b:	mov    r8d,0x8
  402e31:	mov    rdx,rsi
  402e34:	mov    rcx,rbx
  402e37:	call   0x403d60
  402e3c:	test   eax,eax
  402e3e:	jne    0x402e22
  402e40:	mov    rdi,rbx
  402e43:	mov    rax,rdi
  402e46:	add    rsp,0x20
  402e4a:	pop    rbx
  402e4b:	pop    rsi
  402e4c:	pop    rdi
  402e4d:	ret    
  402e4e:	xchg   ax,ax
  402e50:	push   rsi
  402e51:	push   rbx
  402e52:	sub    rsp,0x28
  402e56:	mov    rbx,QWORD PTR [rip+0x3d83]        # 0x406be0
  402e5d:	cmp    WORD PTR [rbx],0x5a4d
  402e62:	je     0x402e70
  402e64:	xor    eax,eax
  402e66:	add    rsp,0x28
  402e6a:	pop    rbx
  402e6b:	pop    rsi
  402e6c:	ret    
  402e6d:	nop    DWORD PTR [rax]
  402e70:	mov    rsi,rcx
  402e73:	mov    rcx,rbx
  402e76:	call   0x402d20
  402e7b:	test   eax,eax
  402e7d:	je     0x402e64
  402e7f:	sub    rsi,rbx
  402e82:	mov    rcx,rbx
  402e85:	mov    rdx,rsi
  402e88:	add    rsp,0x28
  402e8c:	pop    rbx
  402e8d:	pop    rsi
  402e8e:	jmp    0x402d60
  402e93:	nop    DWORD PTR [rax]
  402e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ea0:	push   rbx
  402ea1:	sub    rsp,0x20
  402ea5:	mov    rbx,QWORD PTR [rip+0x3d34]        # 0x406be0
  402eac:	xor    eax,eax
  402eae:	cmp    WORD PTR [rbx],0x5a4d
  402eb3:	je     0x402ec0
  402eb5:	add    rsp,0x20
  402eb9:	pop    rbx
  402eba:	ret    
  402ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  402ec0:	mov    rcx,rbx
  402ec3:	call   0x402d20
  402ec8:	test   eax,eax
  402eca:	je     0x402eb5
  402ecc:	movsxd rax,DWORD PTR [rbx+0x3c]
  402ed0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402ed5:	add    rsp,0x20
  402ed9:	pop    rbx
  402eda:	ret    
  402edb:	nop    DWORD PTR [rax+rax*1+0x0]
  402ee0:	push   rdi
  402ee1:	push   rsi
  402ee2:	push   rbx
  402ee3:	sub    rsp,0x20
  402ee7:	mov    rsi,QWORD PTR [rip+0x3cf2]        # 0x406be0
  402eee:	xor    edi,edi
  402ef0:	mov    rbx,rcx
  402ef3:	cmp    WORD PTR [rsi],0x5a4d
  402ef8:	je     0x402f05
  402efa:	mov    rax,rdi
  402efd:	add    rsp,0x20
  402f01:	pop    rbx
  402f02:	pop    rsi
  402f03:	pop    rdi
  402f04:	ret    
  402f05:	mov    rcx,rsi
  402f08:	call   0x402d20
  402f0d:	test   eax,eax
  402f0f:	je     0x402efa
  402f11:	movsxd rax,DWORD PTR [rsi+0x3c]
  402f15:	add    rsi,rax
  402f18:	movzx  eax,WORD PTR [rsi+0x14]
  402f1c:	lea    rdx,[rsi+rax*1+0x18]
  402f21:	movzx  eax,WORD PTR [rsi+0x6]
  402f25:	test   eax,eax
  402f27:	je     0x402efa
  402f29:	sub    eax,0x1
  402f2c:	lea    rax,[rax+rax*4]
  402f30:	lea    rax,[rdx+rax*8+0x28]
  402f35:	test   BYTE PTR [rdx+0x27],0x20
  402f39:	je     0x402f44
  402f3b:	test   rbx,rbx
  402f3e:	je     0x402f60
  402f40:	sub    rbx,0x1
  402f44:	add    rdx,0x28
  402f48:	cmp    rdx,rax
  402f4b:	jne    0x402f35
  402f4d:	xor    edi,edi
  402f4f:	mov    rax,rdi
  402f52:	add    rsp,0x20
  402f56:	pop    rbx
  402f57:	pop    rsi
  402f58:	pop    rdi
  402f59:	ret    
  402f5a:	nop    WORD PTR [rax+rax*1+0x0]
  402f60:	mov    rdi,rdx
  402f63:	mov    rax,rdi
  402f66:	add    rsp,0x20
  402f6a:	pop    rbx
  402f6b:	pop    rsi
  402f6c:	pop    rdi
  402f6d:	ret    
  402f6e:	xchg   ax,ax
  402f70:	push   rsi
  402f71:	push   rbx
  402f72:	sub    rsp,0x28
  402f76:	mov    rsi,QWORD PTR [rip+0x3c63]        # 0x406be0
  402f7d:	xor    ebx,ebx
  402f7f:	cmp    WORD PTR [rsi],0x5a4d
  402f84:	je     0x402f90
  402f86:	mov    rax,rbx
  402f89:	add    rsp,0x28
  402f8d:	pop    rbx
  402f8e:	pop    rsi
  402f8f:	ret    
  402f90:	mov    rcx,rsi
  402f93:	call   0x402d20
  402f98:	test   eax,eax
  402f9a:	cmovne rbx,rsi
  402f9e:	mov    rax,rbx
  402fa1:	add    rsp,0x28
  402fa5:	pop    rbx
  402fa6:	pop    rsi
  402fa7:	ret    
  402fa8:	nop    DWORD PTR [rax+rax*1+0x0]
  402fb0:	push   rsi
  402fb1:	push   rbx
  402fb2:	sub    rsp,0x28
  402fb6:	mov    rbx,QWORD PTR [rip+0x3c23]        # 0x406be0
  402fbd:	xor    eax,eax
  402fbf:	cmp    WORD PTR [rbx],0x5a4d
  402fc4:	je     0x402fd0
  402fc6:	add    rsp,0x28
  402fca:	pop    rbx
  402fcb:	pop    rsi
  402fcc:	ret    
  402fcd:	nop    DWORD PTR [rax]
  402fd0:	mov    rsi,rcx
  402fd3:	mov    rcx,rbx
  402fd6:	call   0x402d20
  402fdb:	test   eax,eax
  402fdd:	je     0x402fc6
  402fdf:	sub    rsi,rbx
  402fe2:	mov    rcx,rbx
  402fe5:	mov    rdx,rsi
  402fe8:	call   0x402d60
  402fed:	test   rax,rax
  402ff0:	je     0x403001
  402ff2:	mov    eax,DWORD PTR [rax+0x24]
  402ff5:	not    eax
  402ff7:	shr    eax,0x1f
  402ffa:	add    rsp,0x28
  402ffe:	pop    rbx
  402fff:	pop    rsi
  403000:	ret    
  403001:	xor    eax,eax
  403003:	jmp    0x402fc6
  403005:	nop
  403006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403010:	push   rbp
  403011:	push   rdi
  403012:	push   rsi
  403013:	push   rbx
  403014:	sub    rsp,0x28
  403018:	mov    rdi,QWORD PTR [rip+0x3bc1]        # 0x406be0
  40301f:	xor    ebp,ebp
  403021:	mov    esi,ecx
  403023:	cmp    WORD PTR [rdi],0x5a4d
  403028:	je     0x403040
  40302a:	mov    rax,rbp
  40302d:	add    rsp,0x28
  403031:	pop    rbx
  403032:	pop    rsi
  403033:	pop    rdi
  403034:	pop    rbp
  403035:	ret    
  403036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403040:	mov    rcx,rdi
  403043:	call   0x402d20
  403048:	test   eax,eax
  40304a:	je     0x40302a
  40304c:	movsxd rax,DWORD PTR [rdi+0x3c]
  403050:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  403057:	test   edx,edx
  403059:	je     0x40302a
  40305b:	mov    ebx,edx
  40305d:	mov    rcx,rdi
  403060:	mov    rdx,rbx
  403063:	call   0x402d60
  403068:	test   rax,rax
  40306b:	je     0x40302a
  40306d:	add    rbx,rdi
  403070:	mov    rdx,rbx
  403073:	jne    0x403087
  403075:	jmp    0x40302a
  403077:	nop    WORD PTR [rax+rax*1+0x0]
  403080:	sub    esi,0x1
  403083:	add    rdx,0x14
  403087:	mov    ecx,DWORD PTR [rdx+0x4]
  40308a:	test   ecx,ecx
  40308c:	jne    0x403095
  40308e:	mov    eax,DWORD PTR [rdx+0xc]
  403091:	test   eax,eax
  403093:	je     0x4030b0
  403095:	test   esi,esi
  403097:	jg     0x403080
  403099:	mov    ebp,DWORD PTR [rdx+0xc]
  40309c:	add    rbp,rdi
  40309f:	mov    rax,rbp
  4030a2:	add    rsp,0x28
  4030a6:	pop    rbx
  4030a7:	pop    rsi
  4030a8:	pop    rdi
  4030a9:	pop    rbp
  4030aa:	ret    
  4030ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4030b0:	xor    ebp,ebp
  4030b2:	mov    rax,rbp
  4030b5:	add    rsp,0x28
  4030b9:	pop    rbx
  4030ba:	pop    rsi
  4030bb:	pop    rdi
  4030bc:	pop    rbp
  4030bd:	ret    
  4030be:	nop
  4030bf:	nop
  4030c0:	push   rcx
  4030c1:	push   rax
  4030c2:	cmp    rax,0x1000
  4030c8:	lea    rcx,[rsp+0x18]
  4030cd:	jb     0x4030e8
  4030cf:	sub    rcx,0x1000
  4030d6:	or     QWORD PTR [rcx],0x0
  4030da:	sub    rax,0x1000
  4030e0:	cmp    rax,0x1000
  4030e6:	ja     0x4030cf
  4030e8:	sub    rcx,rax
  4030eb:	or     QWORD PTR [rcx],0x0
  4030ef:	pop    rax
  4030f0:	pop    rcx
  4030f1:	ret    
  4030f2:	nop
  4030f3:	nop
  4030f4:	nop
  4030f5:	nop
  4030f6:	nop
  4030f7:	nop
  4030f8:	nop
  4030f9:	nop
  4030fa:	nop
  4030fb:	nop
  4030fc:	nop
  4030fd:	nop
  4030fe:	nop
  4030ff:	nop
  403100:	push   r13
  403102:	push   r12
  403104:	push   rbp
  403105:	push   rdi
  403106:	push   rsi
  403107:	push   rbx
  403108:	mov    r12d,edx
  40310b:	mov    ebp,r8d
  40310e:	mov    edi,edx
  403110:	sub    r12d,ecx
  403113:	sub    ebp,edx
  403115:	mov    eax,r12d
  403118:	cdq    
  403119:	idiv   ebp
  40311b:	test   edx,edx
  40311d:	mov    r13d,edx
  403120:	je     0x4031a5
  403126:	mov    eax,ebp
  403128:	jmp    0x403133
  40312a:	nop    WORD PTR [rax+rax*1+0x0]
  403130:	mov    r13d,edx
  403133:	cdq    
  403134:	idiv   r13d
  403137:	mov    eax,r13d
  40313a:	test   edx,edx
  40313c:	jne    0x403130
  40313e:	mov    eax,r8d
  403141:	sub    eax,ecx
  403143:	cdq    
  403144:	idiv   r13d
  403147:	test   r13d,r13d
  40314a:	jle    0x40319c
  40314c:	movsxd rdx,edi
  40314f:	xor    esi,esi
  403151:	lea    rdx,[r9+rdx*8]
  403155:	test   eax,eax
  403157:	lea    ecx,[rdi+rsi*1]
  40315a:	jle    0x403193
  40315c:	mov    rbx,QWORD PTR [rdx+rsi*8]
  403160:	xor    r10d,r10d
  403163:	mov    r11d,ecx
  403166:	lea    r8d,[rcx+rbp*1]
  40316a:	sub    r11d,r12d
  40316d:	cmp    edi,ecx
  40316f:	mov    ecx,r11d
  403172:	cmovg  ecx,r8d
  403176:	add    r10d,0x1
  40317a:	movsxd r11,ecx
  40317d:	cmp    r10d,eax
  403180:	lea    r8,[r9+r11*8]
  403184:	mov    r11,QWORD PTR [r8]
  403187:	mov    QWORD PTR [r8],rbx
  40318a:	mov    QWORD PTR [rdx+rsi*8],r11
  40318e:	mov    rbx,r11
  403191:	jne    0x403163
  403193:	add    rsi,0x1
  403197:	cmp    r13d,esi
  40319a:	jg     0x403155
  40319c:	pop    rbx
  40319d:	pop    rsi
  40319e:	pop    rdi
  40319f:	pop    rbp
  4031a0:	pop    r12
  4031a2:	pop    r13
  4031a4:	ret    
  4031a5:	mov    r13d,ebp
  4031a8:	jmp    0x40313e
  4031aa:	nop    WORD PTR [rax+rax*1+0x0]
  4031b0:	push   rdi
  4031b1:	push   rsi
  4031b2:	push   rbx
  4031b3:	sub    rsp,0x30
  4031b7:	mov    rax,QWORD PTR [rip+0x3a32]        # 0x406bf0
  4031be:	mov    QWORD PTR [rsp+0x58],rdx
  4031c3:	mov    QWORD PTR [rsp+0x60],r8
  4031c8:	lea    rsi,[rsp+0x58]
  4031cd:	mov    QWORD PTR [rsp+0x68],r9
  4031d2:	mov    rbx,rcx
  4031d5:	mov    rax,QWORD PTR [rax]
  4031d8:	mov    QWORD PTR [rsp+0x28],rsi
  4031dd:	mov    rax,QWORD PTR [rax]
  4031e0:	mov    rdi,QWORD PTR [rax]
  4031e3:	call   0x403e40
  4031e8:	lea    rdx,[rip+0x3851]        # 0x406a40
  4031ef:	lea    rcx,[rax+0x60]
  4031f3:	mov    r8,rdi
  4031f6:	call   0x403dc8
  4031fb:	test   rbx,rbx
  4031fe:	je     0x403214
  403200:	call   0x403e40
  403205:	lea    rcx,[rax+0x60]
  403209:	mov    r8,rsi
  40320c:	mov    rdx,rbx
  40320f:	call   0x403d58
  403214:	call   0x403e40
  403219:	lea    rdx,[rax+0x60]
  40321d:	mov    ecx,0xa
  403222:	call   0x403dc0
  403227:	nop
  403228:	add    rsp,0x30
  40322c:	pop    rbx
  40322d:	pop    rsi
  40322e:	pop    rdi
  40322f:	ret    
  403230:	push   r15
  403232:	push   r14
  403234:	push   r13
  403236:	push   r12
  403238:	push   rbp
  403239:	push   rdi
  40323a:	push   rsi
  40323b:	push   rbx
  40323c:	sub    rsp,0x48
  403240:	mov    eax,DWORD PTR [rip+0x1e26]        # 0x40506c
  403246:	mov    rbp,QWORD PTR [rip+0x1e13]        # 0x405060
  40324d:	mov    QWORD PTR [rsp+0x90],rcx
  403255:	mov    QWORD PTR [rsp+0x98],rdx
  40325d:	mov    edx,0x3d
  403262:	mov    r14,r8
  403265:	mov    QWORD PTR [rsp+0xa8],r9
  40326d:	mov    r13d,DWORD PTR [rsp+0xb0]
  403275:	mov    DWORD PTR [rsp+0x38],eax
  403279:	mov    rcx,rbp
  40327c:	add    eax,0x1
  40327f:	mov    DWORD PTR [rsp+0x3c],eax
  403283:	mov    DWORD PTR [rip+0x1de3],eax        # 0x40506c
  403289:	call   0x403d70
  40328e:	test   rax,rax
  403291:	mov    QWORD PTR [rsp+0x30],rax
  403296:	je     0x403474
  40329c:	mov    rdi,rax
  40329f:	add    rax,0x1
  4032a3:	sub    rdi,rbp
  4032a6:	mov    QWORD PTR [rsp+0x30],rax
  4032ab:	mov    r15,QWORD PTR [r14]
  4032ae:	test   r15,r15
  4032b1:	je     0x4034bb
  4032b7:	lea    rbx,[r14+0x20]
  4032bb:	mov    r12d,0xffffffff
  4032c1:	mov    DWORD PTR [rsp+0x2c],0x0
  4032c9:	xor    esi,esi
  4032cb:	jmp    0x4032e5
  4032cd:	nop    DWORD PTR [rax]
  4032d0:	test   r13d,r13d
  4032d3:	je     0x40330e
  4032d5:	add    rbx,0x20
  4032d9:	mov    r15,QWORD PTR [rbx-0x20]
  4032dd:	add    esi,0x1
  4032e0:	test   r15,r15
  4032e3:	je     0x403350
  4032e5:	mov    r8,rdi
  4032e8:	mov    rdx,r15
  4032eb:	mov    rcx,rbp
  4032ee:	call   0x403d60
  4032f3:	test   eax,eax
  4032f5:	jne    0x4032d5
  4032f7:	mov    rcx,r15
  4032fa:	call   0x403d68
  4032ff:	cmp    rax,rdi
  403302:	je     0x4033fd
  403308:	cmp    rdi,0x1
  40330c:	je     0x4032d0
  40330e:	cmp    r12d,0xffffffff
  403312:	je     0x4033b0
  403318:	movsxd rax,r12d
  40331b:	shl    rax,0x5
  40331f:	add    rax,r14
  403322:	mov    edx,DWORD PTR [rax+0x8]
  403325:	cmp    DWORD PTR [rbx-0x18],edx
  403328:	je     0x4033c0
  40332e:	add    rbx,0x20
  403332:	mov    r15,QWORD PTR [rbx-0x20]
  403336:	add    esi,0x1
  403339:	mov    DWORD PTR [rsp+0x2c],0x1
  403341:	test   r15,r15
  403344:	jne    0x4032e5
  403346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403350:	mov    r9d,DWORD PTR [rsp+0x2c]
  403355:	test   r9d,r9d
  403358:	je     0x4033f0
  40335e:	mov    r8d,DWORD PTR [rip+0x1d0b]        # 0x405070
  403365:	test   r8d,r8d
  403368:	je     0x403388
  40336a:	mov    rax,QWORD PTR [rsp+0x98]
  403372:	cmp    BYTE PTR [rax],0x3a
  403375:	je     0x403388
  403377:	lea    rcx,[rip+0x3752]        # 0x406ad0
  40337e:	mov    r8,rbp
  403381:	mov    edx,edi
  403383:	call   0x4031b0
  403388:	mov    DWORD PTR [rip+0x1cd6],0x0        # 0x405068
  403392:	mov    eax,0x3f
  403397:	add    rsp,0x48
  40339b:	pop    rbx
  40339c:	pop    rsi
  40339d:	pop    rdi
  40339e:	pop    rbp
  40339f:	pop    r12
  4033a1:	pop    r13
  4033a3:	pop    r14
  4033a5:	pop    r15
  4033a7:	ret    
  4033a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4033b0:	mov    r12d,esi
  4033b3:	jmp    0x4032d5
  4033b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4033c0:	mov    rdx,QWORD PTR [rax+0x10]
  4033c4:	cmp    QWORD PTR [rbx-0x10],rdx
  4033c8:	jne    0x40332e
  4033ce:	mov    eax,DWORD PTR [rax+0x18]
  4033d1:	cmp    DWORD PTR [rbx-0x8],eax
  4033d4:	mov    eax,0x1
  4033d9:	cmove  eax,DWORD PTR [rsp+0x2c]
  4033de:	mov    DWORD PTR [rsp+0x2c],eax
  4033e2:	jmp    0x4032d5
  4033e7:	nop    WORD PTR [rax+rax*1+0x0]
  4033f0:	cmp    r12d,0xffffffff
  4033f4:	je     0x4034bb
  4033fa:	mov    esi,r12d
  4033fd:	movsxd rax,esi
  403400:	shl    rax,0x5
  403404:	add    r14,rax
  403407:	cmp    QWORD PTR [rsp+0x30],0x0
  40340d:	mov    eax,DWORD PTR [r14+0x8]
  403411:	setne  cl
  403414:	je     0x403484
  403416:	test   eax,eax
  403418:	jne    0x403484
  40341a:	mov    ecx,DWORD PTR [rip+0x1c50]        # 0x405070
  403420:	test   ecx,ecx
  403422:	jne    0x403454
  403424:	cmp    QWORD PTR [r14+0x10],0x0
  403429:	je     0x403584
  40342f:	mov    DWORD PTR [rip+0x1c2f],0x0        # 0x405068
  403439:	mov    rax,QWORD PTR [rsp+0x98]
  403441:	cmp    BYTE PTR [rax],0x3a
  403444:	je     0x403571
  40344a:	mov    eax,0x3f
  40344f:	jmp    0x403397
  403454:	mov    rax,QWORD PTR [rsp+0x98]
  40345c:	cmp    BYTE PTR [rax],0x3a
  40345f:	je     0x403424
  403461:	lea    rcx,[rip+0x3638]        # 0x406aa0
  403468:	mov    r8,rbp
  40346b:	mov    edx,edi
  40346d:	call   0x4031b0
  403472:	jmp    0x403424
  403474:	mov    rcx,rbp
  403477:	call   0x403d68
  40347c:	mov    rdi,rax
  40347f:	jmp    0x4032ab
  403484:	lea    edx,[rax-0x1]
  403487:	cmp    edx,0x1
  40348a:	jbe    0x4034f7
  40348c:	cmp    QWORD PTR [rsp+0xa8],0x0
  403495:	je     0x4034a1
  403497:	mov    rax,QWORD PTR [rsp+0xa8]
  40349f:	mov    DWORD PTR [rax],esi
  4034a1:	mov    rax,QWORD PTR [r14+0x10]
  4034a5:	test   rax,rax
  4034a8:	je     0x40357b
  4034ae:	mov    edx,DWORD PTR [r14+0x18]
  4034b2:	mov    DWORD PTR [rax],edx
  4034b4:	xor    eax,eax
  4034b6:	jmp    0x403397
  4034bb:	test   r13d,r13d
  4034be:	jne    0x4035d2
  4034c4:	mov    eax,DWORD PTR [rip+0x1ba6]        # 0x405070
  4034ca:	test   eax,eax
  4034cc:	je     0x403388
  4034d2:	mov    rax,QWORD PTR [rsp+0x98]
  4034da:	cmp    BYTE PTR [rax],0x3a
  4034dd:	je     0x403388
  4034e3:	lea    rcx,[rip+0x3576]        # 0x406a60
  4034ea:	mov    rdx,rbp
  4034ed:	call   0x4031b0
  4034f2:	jmp    0x403388
  4034f7:	test   cl,cl
  4034f9:	je     0x403593
  4034ff:	mov    rdx,QWORD PTR [rsp+0x30]
  403504:	cmp    eax,0x1
  403507:	mov    QWORD PTR [rip+0x7542],rdx        # 0x40aa50
  40350e:	jne    0x40348c
  403514:	mov    r15,QWORD PTR [rsp+0x30]
  403519:	test   r15,r15
  40351c:	jne    0x40348c
  403522:	mov    edx,DWORD PTR [rip+0x1b48]        # 0x405070
  403528:	test   edx,edx
  40352a:	je     0x403548
  40352c:	mov    rax,QWORD PTR [rsp+0x98]
  403534:	cmp    BYTE PTR [rax],0x3a
  403537:	je     0x403548
  403539:	lea    rcx,[rip+0x35c0]        # 0x406b00
  403540:	mov    rdx,rbp
  403543:	call   0x4031b0
  403548:	cmp    QWORD PTR [r14+0x10],0x0
  40354d:	je     0x4035c6
  40354f:	mov    DWORD PTR [rip+0x1b0f],0x0        # 0x405068
  403559:	mov    rax,QWORD PTR [rsp+0x98]
  403561:	sub    DWORD PTR [rip+0x1b04],0x1        # 0x40506c
  403568:	cmp    BYTE PTR [rax],0x3a
  40356b:	jne    0x40344a
  403571:	mov    eax,0x3a
  403576:	jmp    0x403397
  40357b:	mov    eax,DWORD PTR [r14+0x18]
  40357f:	jmp    0x403397
  403584:	mov    eax,DWORD PTR [r14+0x18]
  403588:	mov    DWORD PTR [rip+0x1ada],eax        # 0x405068
  40358e:	jmp    0x403439
  403593:	cmp    eax,0x1
  403596:	jne    0x40348c
  40359c:	mov    eax,DWORD PTR [rsp+0x38]
  4035a0:	mov    rdx,QWORD PTR [rsp+0x90]
  4035a8:	add    eax,0x2
  4035ab:	mov    DWORD PTR [rip+0x1abb],eax        # 0x40506c
  4035b1:	movsxd rax,DWORD PTR [rsp+0x3c]
  4035b6:	mov    r15,QWORD PTR [rdx+rax*8]
  4035ba:	mov    QWORD PTR [rip+0x748f],r15        # 0x40aa50
  4035c1:	jmp    0x403519
  4035c6:	mov    eax,DWORD PTR [r14+0x18]
  4035ca:	mov    DWORD PTR [rip+0x1a98],eax        # 0x405068
  4035d0:	jmp    0x403559
  4035d2:	mov    eax,DWORD PTR [rsp+0x38]
  4035d6:	mov    DWORD PTR [rip+0x1a90],eax        # 0x40506c
  4035dc:	mov    eax,0xffffffff
  4035e1:	jmp    0x403397
  4035e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4035f0:	push   r15
  4035f2:	push   r14
  4035f4:	push   r13
  4035f6:	push   r12
  4035f8:	push   rbp
  4035f9:	push   rdi
  4035fa:	push   rsi
  4035fb:	push   rbx
  4035fc:	sub    rsp,0x38
  403600:	test   r8,r8
  403603:	mov    edi,ecx
  403605:	mov    r15,rdx
  403608:	mov    QWORD PTR [rsp+0x90],r8
  403610:	mov    QWORD PTR [rsp+0x98],r9
  403618:	je     0x4038ee
  40361e:	mov    r9d,DWORD PTR [rip+0x1a47]        # 0x40506c
  403625:	test   r9d,r9d
  403628:	je     0x403880
  40362e:	cmp    DWORD PTR [rip+0x1a1b],0xffffffff        # 0x405050
  403635:	je     0x4037f4
  40363b:	mov    edx,DWORD PTR [rip+0x7417]        # 0x40aa58
  403641:	test   edx,edx
  403643:	jne    0x4037f4
  403649:	mov    rax,QWORD PTR [rsp+0x90]
  403651:	movzx  eax,BYTE PTR [rax]
  403654:	cmp    al,0x2d
  403656:	je     0x403828
  40365c:	cmp    al,0x2b
  40365e:	je     0x403904
  403664:	mov    r8d,DWORD PTR [rip+0x19e5]        # 0x405050
  40366b:	test   r8d,r8d
  40366e:	jne    0x403904
  403674:	sub    eax,0x2b
  403677:	test   al,0xfd
  403679:	je     0x403830
  40367f:	test   edx,edx
  403681:	mov    QWORD PTR [rip+0x73c4],0x0        # 0x40aa50
  40368c:	jne    0x403860
  403692:	mov    r14d,DWORD PTR [rsp+0xa8]
  40369a:	mov    ebp,DWORD PTR [rsp+0xa8]
  4036a1:	and    r14d,0x2
  4036a5:	and    ebp,0x1
  4036a8:	jmp    0x40372e
  4036ad:	nop    DWORD PTR [rax]
  4036b0:	lea    rax,[rip+0x339e]        # 0x406a55
  4036b7:	test   r14d,r14d
  4036ba:	mov    edx,r14d
  4036bd:	mov    QWORD PTR [rip+0x199c],rax        # 0x405060
  4036c4:	jne    0x4039d0
  4036ca:	test   ebp,ebp
  4036cc:	je     0x4038ee
  4036d2:	mov    r12d,DWORD PTR [rip+0x197f]        # 0x405058
  4036d9:	cmp    r12d,0xffffffff
  4036dd:	je     0x403850
  4036e3:	mov    r13d,DWORD PTR [rip+0x196a]        # 0x405054
  4036ea:	cmp    r13d,0xffffffff
  4036ee:	je     0x403725
  4036f0:	mov    edx,r13d
  4036f3:	mov    r9,r15
  4036f6:	mov    r8d,ebx
  4036f9:	mov    ecx,r12d
  4036fc:	call   0x403100
  403701:	mov    esi,DWORD PTR [rip+0x1965]        # 0x40506c
  403707:	mov    eax,r12d
  40370a:	mov    edx,DWORD PTR [rip+0x7348]        # 0x40aa58
  403710:	sub    eax,r13d
  403713:	mov    DWORD PTR [rip+0x1937],0xffffffff        # 0x405054
  40371d:	add    eax,esi
  40371f:	mov    DWORD PTR [rip+0x1933],eax        # 0x405058
  403725:	add    esi,0x1
  403728:	mov    DWORD PTR [rip+0x193e],esi        # 0x40506c
  40372e:	test   edx,edx
  403730:	jne    0x403744
  403732:	mov    rsi,QWORD PTR [rip+0x1927]        # 0x405060
  403739:	movzx  eax,BYTE PTR [rsi]
  40373c:	test   al,al
  40373e:	jne    0x40393e
  403744:	movsxd rbx,DWORD PTR [rip+0x1921]        # 0x40506c
  40374b:	mov    DWORD PTR [rip+0x7303],0x0        # 0x40aa58
  403755:	cmp    ebx,edi
  403757:	mov    esi,ebx
  403759:	jge    0x4038a0
  40375f:	movsxd rax,ebx
  403762:	mov    r13,QWORD PTR [r15+rax*8]
  403766:	cmp    BYTE PTR [r13+0x0],0x2d
  40376b:	mov    QWORD PTR [rip+0x18ee],r13        # 0x405060
  403772:	jne    0x4036b0
  403778:	movzx  eax,BYTE PTR [r13+0x1]
  40377d:	test   al,al
  40377f:	jne    0x403911
  403785:	mov    rcx,QWORD PTR [rsp+0x90]
  40378d:	mov    edx,0x2d
  403792:	call   0x403d70
  403797:	test   rax,rax
  40379a:	je     0x4036b0
  4037a0:	cmp    DWORD PTR [rip+0x18b1],0xffffffff        # 0x405058
  4037a7:	mov    rsi,r13
  4037aa:	je     0x4037c4
  4037ac:	cmp    DWORD PTR [rip+0x18a1],0xffffffff        # 0x405054
  4037b3:	mov    eax,0x2d
  4037b8:	jne    0x40393e
  4037be:	mov    DWORD PTR [rip+0x1890],ebx        # 0x405054
  4037c4:	cmp    QWORD PTR [rsp+0x98],0x0
  4037cd:	je     0x403bbc
  4037d3:	cmp    rsi,QWORD PTR [r15+rbx*8]
  4037d7:	mov    eax,0x2d
  4037dc:	je     0x403a0e
  4037e2:	add    rsi,0x1
  4037e6:	xor    edx,edx
  4037e8:	mov    QWORD PTR [rip+0x1871],rsi        # 0x405060
  4037ef:	jmp    0x403992
  4037f4:	lea    rcx,[rip+0x324a]        # 0x406a45
  4037fb:	call   0x403da8
  403800:	test   rax,rax
  403803:	mov    edx,DWORD PTR [rip+0x724f]        # 0x40aa58
  403809:	setne  al
  40380c:	movzx  eax,al
  40380f:	mov    DWORD PTR [rip+0x183b],eax        # 0x405050
  403815:	mov    rax,QWORD PTR [rsp+0x90]
  40381d:	movzx  eax,BYTE PTR [rax]
  403820:	cmp    al,0x2d
  403822:	jne    0x40365c
  403828:	or     DWORD PTR [rsp+0xa8],0x2
  403830:	add    QWORD PTR [rsp+0x90],0x1
  403839:	test   edx,edx
  40383b:	mov    QWORD PTR [rip+0x720a],0x0        # 0x40aa50
  403846:	je     0x403692
  40384c:	jmp    0x403860
  40384e:	xchg   ax,ax
  403850:	mov    DWORD PTR [rip+0x1802],ebx        # 0x405058
  403856:	jmp    0x403725
  40385b:	nop    DWORD PTR [rax+rax*1+0x0]
  403860:	mov    DWORD PTR [rip+0x17ea],0xffffffff        # 0x405054
  40386a:	mov    DWORD PTR [rip+0x17e4],0xffffffff        # 0x405058
  403874:	jmp    0x403692
  403879:	nop    DWORD PTR [rax+0x0]
  403880:	mov    DWORD PTR [rip+0x71ce],0x1        # 0x40aa58
  40388a:	mov    DWORD PTR [rip+0x17d8],0x1        # 0x40506c
  403894:	jmp    0x40362e
  403899:	nop    DWORD PTR [rax+0x0]
  4038a0:	mov    esi,DWORD PTR [rip+0x17ae]        # 0x405054
  4038a6:	lea    rax,[rip+0x31a8]        # 0x406a55
  4038ad:	mov    QWORD PTR [rip+0x17ac],rax        # 0x405060
  4038b4:	cmp    esi,0xffffffff
  4038b7:	je     0x4039ea
  4038bd:	mov    edi,DWORD PTR [rip+0x1795]        # 0x405058
  4038c3:	mov    r9,r15
  4038c6:	mov    r8d,ebx
  4038c9:	mov    edx,esi
  4038cb:	mov    ecx,edi
  4038cd:	sub    edi,esi
  4038cf:	call   0x403100
  4038d4:	add    DWORD PTR [rip+0x1792],edi        # 0x40506c
  4038da:	mov    DWORD PTR [rip+0x1770],0xffffffff        # 0x405054
  4038e4:	mov    DWORD PTR [rip+0x176a],0xffffffff        # 0x405058
  4038ee:	mov    eax,0xffffffff
  4038f3:	add    rsp,0x38
  4038f7:	pop    rbx
  4038f8:	pop    rsi
  4038f9:	pop    rdi
  4038fa:	pop    rbp
  4038fb:	pop    r12
  4038fd:	pop    r13
  4038ff:	pop    r14
  403901:	pop    r15
  403903:	ret    
  403904:	and    DWORD PTR [rsp+0xa8],0xfffffffe
  40390c:	jmp    0x403674
  403911:	mov    ebp,DWORD PTR [rip+0x1741]        # 0x405058
  403917:	cmp    ebp,0xffffffff
  40391a:	je     0x40392b
  40391c:	cmp    DWORD PTR [rip+0x1731],0xffffffff        # 0x405054
  403923:	jne    0x40392b
  403925:	mov    DWORD PTR [rip+0x1729],ebx        # 0x405054
  40392b:	lea    rsi,[r13+0x1]
  40392f:	cmp    al,0x2d
  403931:	mov    QWORD PTR [rip+0x1728],rsi        # 0x405060
  403938:	je     0x403aef
  40393e:	cmp    QWORD PTR [rsp+0x98],0x0
  403947:	je     0x403a0e
  40394d:	movsxd rdx,DWORD PTR [rip+0x1718]        # 0x40506c
  403954:	cmp    rsi,QWORD PTR [r15+rdx*8]
  403958:	je     0x403a0e
  40395e:	cmp    al,0x2d
  403960:	je     0x4037e2
  403966:	test   BYTE PTR [rsp+0xa8],0x4
  40396e:	je     0x403a0e
  403974:	xor    edx,edx
  403976:	cmp    al,0x3a
  403978:	je     0x403992
  40397a:	mov    rcx,QWORD PTR [rsp+0x90]
  403982:	movsx  edx,al
  403985:	call   0x403d70
  40398a:	xor    edx,edx
  40398c:	test   rax,rax
  40398f:	setne  dl
  403992:	mov    DWORD PTR [rsp+0x20],edx
  403996:	mov    r9,QWORD PTR [rsp+0xa0]
  40399e:	mov    rcx,r15
  4039a1:	mov    r8,QWORD PTR [rsp+0x98]
  4039a9:	mov    rdx,QWORD PTR [rsp+0x90]
  4039b1:	call   0x403230
  4039b6:	cmp    eax,0xffffffff
  4039b9:	je     0x403a04
  4039bb:	lea    rcx,[rip+0x3093]        # 0x406a55
  4039c2:	mov    QWORD PTR [rip+0x1697],rcx        # 0x405060
  4039c9:	jmp    0x4038f3
  4039ce:	xchg   ax,ax
  4039d0:	add    ebx,0x1
  4039d3:	mov    QWORD PTR [rip+0x7076],r13        # 0x40aa50
  4039da:	mov    eax,0x1
  4039df:	mov    DWORD PTR [rip+0x1687],ebx        # 0x40506c
  4039e5:	jmp    0x4038f3
  4039ea:	mov    eax,DWORD PTR [rip+0x1668]        # 0x405058
  4039f0:	cmp    eax,0xffffffff
  4039f3:	je     0x4038da
  4039f9:	mov    DWORD PTR [rip+0x166d],eax        # 0x40506c
  4039ff:	jmp    0x4038da
  403a04:	mov    rsi,QWORD PTR [rip+0x1655]        # 0x405060
  403a0b:	movzx  eax,BYTE PTR [rsi]
  403a0e:	lea    rbp,[rsi+0x1]
  403a12:	movsx  ebx,al
  403a15:	cmp    ebx,0x3a
  403a18:	mov    QWORD PTR [rip+0x1641],rbp        # 0x405060
  403a1f:	je     0x403a84
  403a21:	cmp    ebx,0x2d
  403a24:	je     0x403bc7
  403a2a:	mov    rcx,QWORD PTR [rsp+0x90]
  403a32:	mov    edx,ebx
  403a34:	call   0x403d70
  403a39:	test   rax,rax
  403a3c:	je     0x403a84
  403a3e:	cmp    ebx,0x57
  403a41:	jne    0x403ae6
  403a47:	cmp    QWORD PTR [rsp+0x98],0x0
  403a50:	je     0x403ae6
  403a56:	movzx  edx,BYTE PTR [rax+0x1]
  403a5a:	cmp    dl,0x3b
  403a5d:	je     0x403b40
  403a63:	cmp    dl,0x3a
  403a66:	je     0x403bdb
  403a6c:	cmp    BYTE PTR [rsi+0x1],0x0
  403a70:	mov    eax,ebx
  403a72:	jne    0x4038f3
  403a78:	add    DWORD PTR [rip+0x15ed],0x1        # 0x40506c
  403a7f:	jmp    0x4038f3
  403a84:	cmp    BYTE PTR [rsi+0x1],0x0
  403a88:	jne    0x403a91
  403a8a:	add    DWORD PTR [rip+0x15db],0x1        # 0x40506c
  403a91:	mov    ecx,DWORD PTR [rip+0x15d9]        # 0x405070
  403a97:	test   ecx,ecx
  403a99:	je     0x403ab6
  403a9b:	mov    rax,QWORD PTR [rsp+0x90]
  403aa3:	cmp    BYTE PTR [rax],0x3a
  403aa6:	je     0x403ab6
  403aa8:	lea    rcx,[rip+0x2fd1]        # 0x406a80
  403aaf:	mov    edx,ebx
  403ab1:	call   0x4031b0
  403ab6:	mov    DWORD PTR [rip+0x15ac],ebx        # 0x405068
  403abc:	mov    eax,0x3f
  403ac1:	jmp    0x4038f3
  403ac6:	mov    rcx,QWORD PTR [rsp+0x90]
  403ace:	mov    edx,0x2d
  403ad3:	call   0x403d70
  403ad8:	test   rax,rax
  403adb:	je     0x4038ee
  403ae1:	mov    ebx,0x2d
  403ae6:	movzx  edx,BYTE PTR [rax+0x1]
  403aea:	jmp    0x403a63
  403aef:	cmp    BYTE PTR [r13+0x2],0x0
  403af4:	jne    0x4037c4
  403afa:	mov    esi,DWORD PTR [rip+0x1554]        # 0x405054
  403b00:	lea    r8d,[rbx+0x1]
  403b04:	lea    rax,[rip+0x2f4a]        # 0x406a55
  403b0b:	mov    DWORD PTR [rip+0x155a],r8d        # 0x40506c
  403b12:	mov    QWORD PTR [rip+0x1547],rax        # 0x405060
  403b19:	cmp    esi,0xffffffff
  403b1c:	je     0x4038da
  403b22:	mov    ecx,ebp
  403b24:	mov    r9,r15
  403b27:	mov    edx,esi
  403b29:	call   0x403100
  403b2e:	sub    ebp,esi
  403b30:	add    DWORD PTR [rip+0x1536],ebp        # 0x40506c
  403b36:	jmp    0x4038da
  403b3b:	nop    DWORD PTR [rax+rax*1+0x0]
  403b40:	cmp    BYTE PTR [rsi+0x1],0x0
  403b44:	jne    0x403c95
  403b4a:	mov    eax,DWORD PTR [rip+0x151c]        # 0x40506c
  403b50:	add    eax,0x1
  403b53:	cmp    edi,eax
  403b55:	mov    DWORD PTR [rip+0x1511],eax        # 0x40506c
  403b5b:	jg     0x403c88
  403b61:	mov    edx,DWORD PTR [rip+0x1509]        # 0x405070
  403b67:	lea    rax,[rip+0x2ee7]        # 0x406a55
  403b6e:	mov    QWORD PTR [rip+0x14eb],rax        # 0x405060
  403b75:	test   edx,edx
  403b77:	je     0x403b97
  403b79:	mov    rax,QWORD PTR [rsp+0x90]
  403b81:	cmp    BYTE PTR [rax],0x3a
  403b84:	je     0x403b97
  403b86:	lea    rcx,[rip+0x2fb3]        # 0x406b40
  403b8d:	mov    edx,0x57
  403b92:	call   0x4031b0
  403b97:	mov    rax,QWORD PTR [rsp+0x90]
  403b9f:	mov    DWORD PTR [rip+0x14bf],0x57        # 0x405068
  403ba9:	cmp    BYTE PTR [rax],0x3a
  403bac:	je     0x403c7e
  403bb2:	mov    eax,0x3f
  403bb7:	jmp    0x4038f3
  403bbc:	lea    rbp,[rsi+0x1]
  403bc0:	mov    QWORD PTR [rip+0x1499],rbp        # 0x405060
  403bc7:	cmp    BYTE PTR [rsi+0x1],0x0
  403bcb:	je     0x403ac6
  403bd1:	mov    ebx,0x2d
  403bd6:	jmp    0x403a91
  403bdb:	mov    QWORD PTR [rip+0x6e6a],0x0        # 0x40aa50
  403be6:	cmp    BYTE PTR [rsi+0x1],0x0
  403bea:	je     0x403c17
  403bec:	mov    eax,DWORD PTR [rip+0x147a]        # 0x40506c
  403bf2:	mov    QWORD PTR [rip+0x6e57],rbp        # 0x40aa50
  403bf9:	lea    rcx,[rip+0x2e55]        # 0x406a55
  403c00:	add    eax,0x1
  403c03:	mov    DWORD PTR [rip+0x1463],eax        # 0x40506c
  403c09:	mov    eax,ebx
  403c0b:	mov    QWORD PTR [rip+0x144e],rcx        # 0x405060
  403c12:	jmp    0x4038f3
  403c17:	cmp    BYTE PTR [rax+0x2],0x3a
  403c1b:	mov    eax,DWORD PTR [rip+0x144b]        # 0x40506c
  403c21:	je     0x403bf9
  403c23:	add    eax,0x1
  403c26:	cmp    edi,eax
  403c28:	mov    DWORD PTR [rip+0x143e],eax        # 0x40506c
  403c2e:	jg     0x403cc2
  403c34:	lea    rax,[rip+0x2e1a]        # 0x406a55
  403c3b:	mov    QWORD PTR [rip+0x141e],rax        # 0x405060
  403c42:	mov    eax,DWORD PTR [rip+0x1428]        # 0x405070
  403c48:	test   eax,eax
  403c4a:	je     0x403c67
  403c4c:	mov    rax,QWORD PTR [rsp+0x90]
  403c54:	cmp    BYTE PTR [rax],0x3a
  403c57:	je     0x403c67
  403c59:	lea    rcx,[rip+0x2ee0]        # 0x406b40
  403c60:	mov    edx,ebx
  403c62:	call   0x4031b0
  403c67:	mov    rax,QWORD PTR [rsp+0x90]
  403c6f:	mov    DWORD PTR [rip+0x13f3],ebx        # 0x405068
  403c75:	cmp    BYTE PTR [rax],0x3a
  403c78:	jne    0x403bb2
  403c7e:	mov    eax,0x3a
  403c83:	jmp    0x4038f3
  403c88:	cdqe   
  403c8a:	mov    rax,QWORD PTR [r15+rax*8]
  403c8e:	mov    QWORD PTR [rip+0x13cb],rax        # 0x405060
  403c95:	mov    r9,QWORD PTR [rsp+0xa0]
  403c9d:	mov    r8,QWORD PTR [rsp+0x98]
  403ca5:	mov    rcx,r15
  403ca8:	mov    rdx,QWORD PTR [rsp+0x90]
  403cb0:	mov    DWORD PTR [rsp+0x20],0x0
  403cb8:	call   0x403230
  403cbd:	jmp    0x4039bb
  403cc2:	movsxd rdx,eax
  403cc5:	mov    rdx,QWORD PTR [r15+rdx*8]
  403cc9:	mov    QWORD PTR [rip+0x6d80],rdx        # 0x40aa50
  403cd0:	jmp    0x403bf9
  403cd5:	nop
  403cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ce0:	sub    rsp,0x38
  403ce4:	xor    r9d,r9d
  403ce7:	mov    DWORD PTR [rsp+0x28],0x0
  403cef:	mov    QWORD PTR [rsp+0x20],0x0
  403cf8:	call   0x4035f0
  403cfd:	add    rsp,0x38
  403d01:	ret    
  403d02:	nop    DWORD PTR [rax+0x0]
  403d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d10:	sub    rsp,0x38
  403d14:	mov    rax,QWORD PTR [rsp+0x60]
  403d19:	mov    DWORD PTR [rsp+0x28],0x1
  403d21:	mov    QWORD PTR [rsp+0x20],rax
  403d26:	call   0x4035f0
  403d2b:	add    rsp,0x38
  403d2f:	ret    
  403d30:	sub    rsp,0x38
  403d34:	mov    rax,QWORD PTR [rsp+0x60]
  403d39:	mov    DWORD PTR [rsp+0x28],0x5
  403d41:	mov    QWORD PTR [rsp+0x20],rax
  403d46:	call   0x4035f0
  403d4b:	add    rsp,0x38
  403d4f:	ret    
  403d50:	jmp    QWORD PTR [rip+0x78ca]        # 0x40b620
  403d56:	nop
  403d57:	nop
  403d58:	jmp    QWORD PTR [rip+0x78ba]        # 0x40b618
  403d5e:	nop
  403d5f:	nop
  403d60:	jmp    QWORD PTR [rip+0x78aa]        # 0x40b610
  403d66:	nop
  403d67:	nop
  403d68:	jmp    QWORD PTR [rip+0x789a]        # 0x40b608
  403d6e:	nop
  403d6f:	nop
  403d70:	jmp    QWORD PTR [rip+0x788a]        # 0x40b600
  403d76:	nop
  403d77:	nop
  403d78:	jmp    QWORD PTR [rip+0x787a]        # 0x40b5f8
  403d7e:	nop
  403d7f:	nop
  403d80:	jmp    QWORD PTR [rip+0x786a]        # 0x40b5f0
  403d86:	nop
  403d87:	nop
  403d88:	jmp    QWORD PTR [rip+0x785a]        # 0x40b5e8
  403d8e:	nop
  403d8f:	nop
  403d90:	jmp    QWORD PTR [rip+0x784a]        # 0x40b5e0
  403d96:	nop
  403d97:	nop
  403d98:	jmp    QWORD PTR [rip+0x783a]        # 0x40b5d8
  403d9e:	nop
  403d9f:	nop
  403da0:	jmp    QWORD PTR [rip+0x782a]        # 0x40b5d0
  403da6:	nop
  403da7:	nop
  403da8:	jmp    QWORD PTR [rip+0x781a]        # 0x40b5c8
  403dae:	nop
  403daf:	nop
  403db0:	jmp    QWORD PTR [rip+0x780a]        # 0x40b5c0
  403db6:	nop
  403db7:	nop
  403db8:	jmp    QWORD PTR [rip+0x77fa]        # 0x40b5b8
  403dbe:	nop
  403dbf:	nop
  403dc0:	jmp    QWORD PTR [rip+0x77ea]        # 0x40b5b0
  403dc6:	nop
  403dc7:	nop
  403dc8:	jmp    QWORD PTR [rip+0x77da]        # 0x40b5a8
  403dce:	nop
  403dcf:	nop
  403dd0:	jmp    QWORD PTR [rip+0x77ca]        # 0x40b5a0
  403dd6:	nop
  403dd7:	nop
  403dd8:	jmp    QWORD PTR [rip+0x77ba]        # 0x40b598
  403dde:	nop
  403ddf:	nop
  403de0:	jmp    QWORD PTR [rip+0x77aa]        # 0x40b590
  403de6:	nop
  403de7:	nop
  403de8:	jmp    QWORD PTR [rip+0x779a]        # 0x40b588
  403dee:	nop
  403def:	nop
  403df0:	jmp    QWORD PTR [rip+0x778a]        # 0x40b580
  403df6:	nop
  403df7:	nop
  403df8:	jmp    QWORD PTR [rip+0x777a]        # 0x40b578
  403dfe:	nop
  403dff:	nop
  403e00:	jmp    QWORD PTR [rip+0x776a]        # 0x40b570
  403e06:	nop
  403e07:	nop
  403e08:	jmp    QWORD PTR [rip+0x775a]        # 0x40b568
  403e0e:	nop
  403e0f:	nop
  403e10:	jmp    QWORD PTR [rip+0x7742]        # 0x40b558
  403e16:	nop
  403e17:	nop
  403e18:	jmp    QWORD PTR [rip+0x7732]        # 0x40b550
  403e1e:	nop
  403e1f:	nop
  403e20:	jmp    QWORD PTR [rip+0x7722]        # 0x40b548
  403e26:	nop
  403e27:	nop
  403e28:	jmp    QWORD PTR [rip+0x770a]        # 0x40b538
  403e2e:	nop
  403e2f:	nop
  403e30:	jmp    QWORD PTR [rip+0x76fa]        # 0x40b530
  403e36:	nop
  403e37:	nop
  403e38:	jmp    QWORD PTR [rip+0x76ea]        # 0x40b528
  403e3e:	nop
  403e3f:	nop
  403e40:	jmp    QWORD PTR [rip+0x76da]        # 0x40b520
  403e46:	nop
  403e47:	nop
  403e48:	jmp    QWORD PTR [rip+0x76c2]        # 0x40b510
  403e4e:	nop
  403e4f:	nop
  403e50:	jmp    QWORD PTR [rip+0x76b2]        # 0x40b508
  403e56:	nop
  403e57:	nop
  403e58:	jmp    QWORD PTR [rip+0x769a]        # 0x40b4f8
  403e5e:	nop
  403e5f:	nop
  403e60:	mov    rax,QWORD PTR [rip+0x6b89]        # 0x40a9f0
  403e67:	ret    
  403e68:	nop    DWORD PTR [rax+rax*1+0x0]
  403e70:	mov    rax,rcx
  403e73:	xchg   QWORD PTR [rip+0x6b76],rax        # 0x40a9f0
  403e7a:	ret    
  403e7b:	nop
  403e7c:	nop
  403e7d:	nop
  403e7e:	nop
  403e7f:	nop
  403e80:	jmp    QWORD PTR [rip+0x7662]        # 0x40b4e8
  403e86:	nop
  403e87:	nop
  403e88:	jmp    QWORD PTR [rip+0x7652]        # 0x40b4e0
  403e8e:	nop
  403e8f:	nop
  403e90:	jmp    QWORD PTR [rip+0x7642]        # 0x40b4d8
  403e96:	nop
  403e97:	nop
  403e98:	jmp    QWORD PTR [rip+0x7632]        # 0x40b4d0
  403e9e:	nop
  403e9f:	nop
  403ea0:	jmp    QWORD PTR [rip+0x7622]        # 0x40b4c8
  403ea6:	nop
  403ea7:	nop
  403ea8:	jmp    QWORD PTR [rip+0x7612]        # 0x40b4c0
  403eae:	nop
  403eaf:	nop
  403eb0:	jmp    QWORD PTR [rip+0x7602]        # 0x40b4b8
  403eb6:	nop
  403eb7:	nop
  403eb8:	jmp    QWORD PTR [rip+0x75f2]        # 0x40b4b0
  403ebe:	nop
  403ebf:	nop
  403ec0:	jmp    QWORD PTR [rip+0x75e2]        # 0x40b4a8
  403ec6:	nop
  403ec7:	nop
  403ec8:	jmp    QWORD PTR [rip+0x75d2]        # 0x40b4a0
  403ece:	nop
  403ecf:	nop
  403ed0:	jmp    QWORD PTR [rip+0x75c2]        # 0x40b498
  403ed6:	nop
  403ed7:	nop
  403ed8:	jmp    QWORD PTR [rip+0x75b2]        # 0x40b490
  403ede:	nop
  403edf:	nop
  403ee0:	jmp    QWORD PTR [rip+0x75a2]        # 0x40b488
  403ee6:	nop
  403ee7:	nop
  403ee8:	jmp    QWORD PTR [rip+0x7592]        # 0x40b480
  403eee:	nop
  403eef:	nop
  403ef0:	jmp    QWORD PTR [rip+0x7582]        # 0x40b478
  403ef6:	nop
  403ef7:	nop
  403ef8:	jmp    QWORD PTR [rip+0x7572]        # 0x40b470
  403efe:	nop
  403eff:	nop
  403f00:	jmp    QWORD PTR [rip+0x7562]        # 0x40b468
  403f06:	nop
  403f07:	nop
  403f08:	jmp    QWORD PTR [rip+0x7552]        # 0x40b460
  403f0e:	nop
  403f0f:	nop
  403f10:	jmp    QWORD PTR [rip+0x7542]        # 0x40b458
  403f16:	nop
  403f17:	nop
  403f18:	jmp    QWORD PTR [rip+0x7532]        # 0x40b450
  403f1e:	nop
  403f1f:	nop
  403f20:	jmp    QWORD PTR [rip+0x7522]        # 0x40b448
  403f26:	nop
  403f27:	nop
  403f28:	jmp    QWORD PTR [rip+0x7512]        # 0x40b440
  403f2e:	nop
  403f2f:	nop
  403f30:	jmp    QWORD PTR [rip+0x7502]        # 0x40b438
  403f36:	nop
  403f37:	nop
  403f38:	nop    DWORD PTR [rax+rax*1+0x0]
  403f40:	push   r15
  403f42:	push   r14
  403f44:	push   r13
  403f46:	push   r12
  403f48:	push   rbp
  403f49:	push   rdi
  403f4a:	push   rsi
  403f4b:	push   rbx
  403f4c:	sub    rsp,0x68
  403f50:	lea    rbx,[rip+0x25e1]        # 0x406538
  403f57:	xor    r13d,r13d
  403f5a:	xor    r14d,r14d
  403f5d:	mov    edi,ecx
  403f5f:	mov    rsi,rdx
  403f62:	xor    r15d,r15d
  403f65:	call   0x401d10
  403f6a:	xor    ebp,ebp
  403f6c:	mov    DWORD PTR [rsp+0x4c],0x0
  403f74:	xor    r12d,r12d
  403f77:	lea    r9,[rip+0x2702]        # 0x406680
  403f7e:	lea    r8,[rip+0x2527]        # 0x4064ac
  403f85:	mov    QWORD PTR [rsp+0x20],0x0
  403f8e:	mov    rdx,rsi
  403f91:	mov    ecx,edi
  403f93:	call   0x403d10
  403f98:	cmp    eax,0xffffffff
  403f9b:	je     0x404045
  403fa1:	sub    eax,0x45
  403fa4:	cmp    eax,0x34
  403fa7:	ja     0x404038
  403fad:	movsxd rax,DWORD PTR [rbx+rax*4]
  403fb1:	add    rax,rbx
  403fb4:	jmp    rax
  403fb6:	mov    r15d,0x1
  403fbc:	mov    ebp,0x1
  403fc1:	jmp    0x403f77
  403fc3:	mov    rcx,QWORD PTR [rsi]
  403fc6:	xor    edx,edx
  403fc8:	call   0x401530
  403fcd:	call   QWORD PTR [rip+0x754d]        # 0x40b520
  403fd3:	lea    rdx,[rip+0x24b5]        # 0x40648f
  403fda:	lea    rcx,[rax+0x60]
  403fde:	mov    DWORD PTR [rsp+0x20],0x1
  403fe6:	mov    r9d,0xc
  403fec:	mov    r8d,0x2
  403ff2:	call   0x403dc8
  403ff7:	xor    ecx,ecx
  403ff9:	call   0x403dd8
  403ffe:	mov    DWORD PTR [rsp+0x4c],0x1
  404006:	jmp    0x403f77
  40400b:	mov    rax,QWORD PTR [rip+0x2d5e]        # 0x406d70
  404012:	mov    rcx,QWORD PTR [rax]
  404015:	call   0x401af8
  40401a:	mov    r13,rax
  40401d:	jmp    0x403f77
  404022:	mov    r12d,0x1
  404028:	jmp    0x403f77
  40402d:	mov    r14d,0x1
  404033:	jmp    0x403f77
  404038:	mov    rcx,QWORD PTR [rsi]
  40403b:	mov    edx,0x1
  404040:	call   0x401530
  404045:	mov    rax,QWORD PTR [rip+0x2d34]        # 0x406d80
  40404c:	test   r14d,r14d
  40404f:	movsxd rbx,DWORD PTR [rax]
  404052:	jne    0x4041c6
  404058:	test   r13,r13
  40405b:	je     0x404205
  404061:	mov    rdx,r13
  404064:	xor    ecx,ecx
  404066:	call   0x401b40
  40406b:	mov    rcx,r13
  40406e:	call   0x401af0
  404073:	call   0x401b58
  404078:	mov    rdi,rax
  40407b:	test   rdi,rdi
  40407e:	je     0x404222
  404084:	lea    rbx,[rsi+rbx*8]
  404088:	mov    rcx,rdi
  40408b:	call   0x401b48
  404090:	cmp    QWORD PTR [rbx],0x0
  404094:	je     0x4041d2
  40409a:	call   0x401ac0
  40409f:	test   rax,rax
  4040a2:	mov    r13,rax
  4040a5:	jne    0x4040bd
  4040a7:	jmp    0x404273
  4040ac:	call   0x401ac8
  4040b1:	add    rbx,0x8
  4040b5:	test   eax,eax
  4040b7:	je     0x4041e2
  4040bd:	mov    rdx,QWORD PTR [rbx]
  4040c0:	mov    rcx,r13
  4040c3:	test   rdx,rdx
  4040c6:	jne    0x4040ac
  4040c8:	call   0x401ae8
  4040cd:	mov    rcx,r13
  4040d0:	mov    r14,rax
  4040d3:	call   0x401ab8
  4040d8:	call   0x401ac0
  4040dd:	test   rax,rax
  4040e0:	mov    QWORD PTR [rip+0x5f49],rax        # 0x40a030
  4040e7:	je     0x404248
  4040ed:	lea    rax,[rsp+0x5c]
  4040f2:	mov    r8d,ebp
  4040f5:	mov    r9d,r15d
  4040f8:	mov    rdx,rdi
  4040fb:	mov    rcx,r14
  4040fe:	mov    DWORD PTR [rsp+0x20],r12d
  404103:	mov    QWORD PTR [rsp+0x30],rax
  404108:	mov    eax,DWORD PTR [rsp+0x4c]
  40410c:	mov    DWORD PTR [rsp+0x5c],0x0
  404114:	mov    DWORD PTR [rsp+0x28],eax
  404118:	call   0x401670
  40411d:	mov    rcx,r14
  404120:	mov    ebp,eax
  404122:	call   0x401ae0
  404127:	mov    rcx,rdi
  40412a:	call   0x401b98
  40412f:	mov    rcx,QWORD PTR [rip+0x5efa]        # 0x40a030
  404136:	call   0x401ab8
  40413b:	mov    rcx,rdi
  40413e:	call   0x401b68
  404143:	test   rax,rax
  404146:	mov    rbx,rax
  404149:	jne    0x40415c
  40414b:	jmp    0x404171
  40414d:	mov    edx,r12d
  404150:	mov    rcx,rax
  404153:	call   0x401b38
  404158:	test   eax,eax
  40415a:	je     0x404169
  40415c:	mov    rcx,rbx
  40415f:	call   0x401ad8
  404164:	test   rax,rax
  404167:	jne    0x40414d
  404169:	mov    rcx,rbx
  40416c:	call   0x401ae0
  404171:	mov    rcx,rdi
  404174:	call   0x401b78
  404179:	call   0x401b08
  40417e:	cmp    DWORD PTR [rsp+0x5c],0x0
  404183:	jne    0x404212
  404189:	test   r12d,r12d
  40418c:	mov    ebx,ebp
  40418e:	je     0x4041b3
  404190:	lea    rax,[rip+0x22ee]        # 0x406485
  404197:	lea    r8,[rip+0x22e0]        # 0x40647e
  40419e:	mov    rdx,QWORD PTR [rsi]
  4041a1:	test   ebp,ebp
  4041a3:	lea    rcx,[rip+0x2384]        # 0x40652e
  4041aa:	cmove  r8,rax
  4041ae:	call   0x403d88
  4041b3:	mov    eax,ebx
  4041b5:	add    rsp,0x68
  4041b9:	pop    rbx
  4041ba:	pop    rsi
  4041bb:	pop    rdi
  4041bc:	pop    rbp
  4041bd:	pop    r12
  4041bf:	pop    r13
  4041c1:	pop    r14
  4041c3:	pop    r15
  4041c5:	ret    
  4041c6:	xor    ecx,ecx
  4041c8:	call   0x401b70
  4041cd:	jmp    0x404058
  4041d2:	mov    rcx,rdi
  4041d5:	call   0x401b60
  4041da:	mov    r14,rax
  4041dd:	jmp    0x4040d8
  4041e2:	mov    rbx,QWORD PTR [rsi]
  4041e5:	call   QWORD PTR [rip+0x7335]        # 0x40b520
  4041eb:	lea    rdx,[rip+0x2314]        # 0x406506
  4041f2:	lea    rcx,[rax+0x60]
  4041f6:	mov    r8,rbx
  4041f9:	mov    ebx,0x1
  4041fe:	call   0x403dc8
  404203:	jmp    0x4041b3
  404205:	call   0x401b00
  40420a:	mov    rdi,rax
  40420d:	jmp    0x40407b
  404212:	mov    ecx,0x7d0
  404217:	call   QWORD PTR [rip+0x72a3]        # 0x40b4c0
  40421d:	jmp    0x404189
  404222:	mov    rbx,QWORD PTR [rsi]
  404225:	call   QWORD PTR [rip+0x72f5]        # 0x40b520
  40422b:	lea    rdx,[rip+0x2286]        # 0x4064b8
  404232:	lea    rcx,[rax+0x60]
  404236:	mov    r8,rbx
  404239:	mov    ebx,0x1
  40423e:	call   0x403dc8
  404243:	jmp    0x4041b3
  404248:	call   QWORD PTR [rip+0x72d2]        # 0x40b520
  40424e:	lea    rcx,[rip+0x22ca]        # 0x40651f
  404255:	lea    r9,[rax+0x60]
  404259:	mov    r8d,0xe
  40425f:	mov    edx,0x1
  404264:	mov    ebx,0x1
  404269:	call   0x403db0
  40426e:	jmp    0x4041b3
  404273:	mov    rbx,QWORD PTR [rsi]
  404276:	call   QWORD PTR [rip+0x72a4]        # 0x40b520
  40427c:	lea    rdx,[rip+0x225d]        # 0x4064e0
  404283:	lea    rcx,[rax+0x60]
  404287:	mov    r8,rbx
  40428a:	mov    ebx,0x1
  40428f:	call   0x403dc8
  404294:	jmp    0x4041b3
  404299:	nop
  40429a:	nop
  40429b:	nop
  40429c:	nop
  40429d:	nop
  40429e:	nop
  40429f:	nop
  4042a0:	(bad)  
  4042a1:	(bad)  
  4042a2:	(bad)  
  4042a3:	(bad)  
  4042a4:	(bad)  
  4042a5:	(bad)  
  4042a6:	(bad)  
  4042a7:	inc    DWORD PTR [rax]
  4042a9:	add    BYTE PTR [rax],al
  4042ab:	add    BYTE PTR [rax],al
  4042ad:	add    BYTE PTR [rax],al
  4042af:	add    bh,bh
  4042b1:	(bad)  
  4042b2:	(bad)  
  4042b3:	(bad)  
  4042b4:	(bad)  
  4042b5:	(bad)  
  4042b6:	(bad)  
  4042b7:	inc    DWORD PTR [rax]
  4042b9:	add    BYTE PTR [rax],al
  4042bb:	add    BYTE PTR [rax],al
  4042bd:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000405000 <.data>:
  405000:	or     al,BYTE PTR [rax]
	...
  40500e:	add    BYTE PTR [rax],al
  405010:	mov    eax,0x4042
	...
  40501d:	add    BYTE PTR [rax],al
  40501f:	add    bh,bh
  405021:	(bad)  
  405022:	(bad)  
  405023:	(bad)  
  405024:	(bad)  
  405025:	(bad)  
  405026:	(bad)  
  405027:	inc    DWORD PTR [rax]
  405029:	add    BYTE PTR [rax],al
  40502b:	add    BYTE PTR [rax],al
  40502d:	add    BYTE PTR [rax],al
  40502f:	add    bh,bh
	...
  40503d:	add    BYTE PTR [rax],al
  40503f:	add    BYTE PTR [rdx],al
	...
  40504d:	add    BYTE PTR [rax],al
  40504f:	add    bh,bh
  405051:	(bad)  
  405052:	(bad)  
  405053:	(bad)  
  405054:	(bad)  
  405055:	(bad)  
  405056:	(bad)  
  405057:	(bad)  
  405058:	(bad)  
  405059:	(bad)  
  40505a:	(bad)  
  40505b:	inc    DWORD PTR [rax]
  40505d:	add    BYTE PTR [rax],al
  40505f:	add    BYTE PTR [rbp+0x6a],dl
  405062:	add    BYTE PTR [rax],al
  405065:	add    BYTE PTR [rax],al
  405067:	add    BYTE PTR [rdi],bh
  405069:	add    BYTE PTR [rax],al
  40506b:	add    BYTE PTR [rcx],al
  40506d:	add    BYTE PTR [rax],al
  40506f:	add    BYTE PTR [rcx],al
	...
  40507d:	add    BYTE PTR [rax],al
  40507f:	add    bh,bh
  405081:	(bad)  
  405082:	(bad)  
  405083:	inc    DWORD PTR [rax]
	...
  40508d:	add    BYTE PTR [rax],al
  40508f:	add    BYTE PTR [rax+0x3e],ah
  405092:	add    BYTE PTR [rax],al
  405095:	add    BYTE PTR [rax],al
  405097:	add    BYTE PTR [rax+0x3e],dh
  40509a:	add    BYTE PTR [rax],al
  40509d:	add    BYTE PTR [rax],al
  40509f:	add    BYTE PTR [rdx],dh
  4050a1:	movabs ds:0x2b992ddf,al
  4050aa:	add    BYTE PTR [rax],al
  4050ac:	add    BYTE PTR [rax],al
  4050ae:	add    BYTE PTR [rax],al
  4050b0:	int    0x5d
  4050b2:	and    dl,dl
  4050b4:	data16 (bad) 
  4050b6:	(bad)  
  4050b7:	inc    DWORD PTR [rax]
  4050b9:	add    BYTE PTR [rax],al
  4050bb:	add    BYTE PTR [rax],al
  4050bd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000406000 <.rdata>:
  406000:	jne    0x406075
  406002:	(bad)  
  406003:	cmp    ah,BYTE PTR gs:[eax]
  406007:	and    eax,0x2d5b2073
  40600c:	rex.RB
  40600d:	data16 jb 0x406083
  406010:	jbe    0x406068
  406012:	push   0x2d5b205d
  406017:	jns    0x406039
  406019:	push   rbx
  40601a:	pop    rcx
  40601b:	push   rbx
  40601c:	push   rdx
  40601d:	rex.WRXB
  40601e:	rex.WRXB push r12
  406020:	pop    rbp
  406021:	and    BYTE PTR [rbx+0x2d],bl
  406024:	sub    eax,0x6f727265
  406029:	jb     0x406058
  40602b:	outs   dx,DWORD PTR ds:[rsi]
  40602c:	outs   dx,BYTE PTR ds:[rsi]
  40602d:	sub    eax,0x662d6f6e
  406032:	outs   dx,DWORD PTR ds:[rsi]
  406033:	outs   dx,BYTE PTR ds:[rsi]
  406034:	je     0x4060a9
  406036:	pop    rbp
  406037:	and    BYTE PTR [rbx+0x2d],bl
  40603a:	sub    eax,0x63726f66
  40603f:	gs jl  0x40606f
  406042:	sub    eax,0x6c616572
  406047:	ins    BYTE PTR es:[rdi],dx
  406048:	jns    0x406077
  40604a:	outs   dx,WORD PTR ds:[rsi]
  40604c:	jb     0x4060b1
  40604e:	gs pop rbp
  406050:	and    BYTE PTR [rbx+0x2d],bl
  406053:	sub    eax,0x72737973
  406058:	outs   dx,DWORD PTR ds:[rsi]
  406059:	outs   dx,DWORD PTR ds:[rsi]
  40605a:	je     0x406099
  40605c:	push   rbx
  40605d:	pop    rcx
  40605e:	push   rbx
  40605f:	push   rdx
  406060:	rex.WRXB
  406061:	rex.WRXB push r12
  406063:	pop    rbp
  406064:	and    BYTE PTR [rbx+0x2d],bl
  406067:	sub    eax,0x74737973
  40606c:	gs ins DWORD PTR es:[rdi],dx
  40606e:	sub    eax,0x796c6e6f
  406073:	pop    rbp
  406074:	and    BYTE PTR [rbx+0x2d],bl
  406077:	sub    eax,0x62726576
  40607c:	outs   dx,DWORD PTR ds:[rsi]
  40607d:	jae    0x4060e4
  40607f:	pop    rbp
  406080:	and    BYTE PTR [rbx+0x2d],bl
  406083:	sub    eax,0x73726576
  406088:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d5b205d
  40608f:	sub    eax,0x706c6568
  406094:	pop    rbp
  406095:	and    BYTE PTR [rbx+0x64],bl
  406098:	imul   esi,DWORD PTR [rdx+0x73],0xa5d
  40609f:	add    BYTE PTR [rdx+0x75],al
  4060a2:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x746e6f66
  4060aa:	and    BYTE PTR [rcx+0x6e],ch
  4060ad:	outs   dx,WORD PTR ds:[rsi]
  4060af:	jb     0x40611e
  4060b1:	(bad)  
  4060b2:	je     0x40611d
  4060b4:	outs   dx,DWORD PTR ds:[rsi]
  4060b5:	outs   dx,BYTE PTR ds:[rsi]
  4060b6:	and    BYTE PTR [rbx+0x61],ah
  4060b9:	movsxd ebp,DWORD PTR [rax+0x65]
  4060bc:	jae    0x4060de
  4060be:	imul   ebp,DWORD PTR [rsi+0x20],0x7269645b
  4060c5:	jae    0x406124
  4060c7:	or     ch,BYTE PTR [rax]
  4060c9:	(bad)  
  4060ca:	ins    BYTE PTR es:[rdi],dx
  4060cb:	ins    BYTE PTR es:[rdi],dx
  4060cc:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  4060d0:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  4060d5:	imul   esp,DWORD PTR [rbp+0x73],0x206e6920
  4060dc:	outs   dx,WORD PTR ds:[rsi]
  4060de:	outs   dx,BYTE PTR ds:[rsi]
  4060df:	je     0x406101
  4060e1:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4060e4:	imul   sp,WORD PTR [rdi+0x75],0x6172
  4060ea:	je     0x406155
  4060ec:	outs   dx,DWORD PTR ds:[rsi]
  4060ed:	outs   dx,BYTE PTR ds:[rsi]
  4060ee:	and    BYTE PTR [rdx+0x79],ah
  4060f1:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4060f5:	(bad)  
  4060f6:	jne    0x406164
  4060f8:	je     0x406123
  4060fa:	or     al,BYTE PTR cs:[rax]
  4060fd:	add    BYTE PTR [rax],al
  4060ff:	add    BYTE PTR [rax],ah
  406101:	and    BYTE PTR [rip+0x2d202c45],ch        # 0x2d608d4c
  406107:	sub    eax,0x6f727265
  40610c:	jb     0x40613b
  40610e:	outs   dx,DWORD PTR ds:[rsi]
  40610f:	outs   dx,BYTE PTR ds:[rsi]
  406110:	sub    eax,0x662d6f6e
  406115:	outs   dx,DWORD PTR ds:[rsi]
  406116:	outs   dx,BYTE PTR ds:[rsi]
  406117:	je     0x40618c
  406119:	and    BYTE PTR [rax],ah
  40611b:	jb     0x40617e
  40611d:	imul   esi,DWORD PTR [rbx+0x65],0x206e6120
  406124:	gs jb  0x406199
  406127:	outs   dx,DWORD PTR ds:[rsi]
  406128:	jb     0x40614a
  40612a:	imul   esp,DWORD PTR [rsi+0x20],0x66206f6e
  406131:	outs   dx,DWORD PTR ds:[rsi]
  406132:	outs   dx,BYTE PTR ds:[rsi]
  406133:	je     0x4061a8
  406135:	and    BYTE PTR [rcx+0x6e],ch
  406138:	and    BYTE PTR [rcx+0x20],ah
  40613b:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  406143:	jns    0x40614f
  406145:	add    BYTE PTR [rax],al
  406147:	add    BYTE PTR [rax],ah
  406149:	and    BYTE PTR [rip+0x2d202c66],ch        # 0x2d608db5
  40614f:	sub    eax,0x63726f66
  406154:	and    BYTE PTR gs:[rax],ah
  406157:	and    BYTE PTR [rax],ah
  406159:	and    BYTE PTR [rax],ah
  40615b:	and    BYTE PTR [rax],ah
  40615d:	and    BYTE PTR [rax],ah
  40615f:	and    BYTE PTR [rax],ah
  406161:	and    BYTE PTR [rax],ah
  406163:	jae    0x4061c8
  406165:	(bad)  
  406166:	outs   dx,BYTE PTR ds:[rsi]
  406167:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  40616b:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  406170:	imul   esp,DWORD PTR [rbp+0x73],0x74697720
  406177:	push   0x70706120
  40617c:	(bad)  
  40617d:	jb     0x4061e4
  40617f:	outs   dx,BYTE PTR ds:[rsi]
  406180:	je     0x4061ee
  406182:	jns    0x4061a4
  406184:	jbe    0x4061e7
  406186:	ins    BYTE PTR es:[rdi],dx
  406187:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x65686361
  40618f:	jae    0x40619b
  406191:	add    BYTE PTR [rax],al
  406193:	add    BYTE PTR [rax],al
  406195:	add    BYTE PTR [rax],al
  406197:	add    BYTE PTR [rax],ah
  406199:	and    BYTE PTR [rip+0x2d202c72],ch        # 0x2d608e11
  40619f:	sub    eax,0x6c616572
  4061a4:	ins    BYTE PTR es:[rdi],dx
  4061a5:	jns    0x4061d4
  4061a7:	outs   dx,WORD PTR ds:[rsi]
  4061a9:	jb     0x40620e
  4061ab:	and    BYTE PTR gs:[rax],ah
  4061ae:	and    BYTE PTR [rax],ah
  4061b0:	and    BYTE PTR [rax],ah
  4061b2:	and    BYTE PTR [rbp+0x72],ah
  4061b5:	(bad)  
  4061b6:	jae    0x40621d
  4061b8:	and    BYTE PTR [rcx+0x6c],ah
  4061bb:	ins    BYTE PTR es:[rdi],dx
  4061bc:	and    BYTE PTR [rbp+0x78],ah
  4061bf:	imul   esi,DWORD PTR [rbx+0x74],0x20676e69
  4061c6:	movsxd esp,DWORD PTR [rcx+0x63]
  4061c9:	push   0x202c7365
  4061ce:	je     0x406238
  4061d0:	outs   dx,BYTE PTR gs:[rsi]
  4061d2:	and    BYTE PTR [rdx+0x65],dh
  4061d5:	jae    0x40623a
  4061d7:	(bad)  
  4061d8:	outs   dx,BYTE PTR ds:[rsi]
  4061d9:	or     al,BYTE PTR [rax]
  4061db:	add    BYTE PTR [rax],al
  4061dd:	add    BYTE PTR [rax],al
  4061df:	add    BYTE PTR [rax],ah
  4061e1:	and    BYTE PTR [rip+0x2d202c73],ch        # 0x2d608e5a
  4061e7:	sub    eax,0x74737973
  4061ec:	gs ins DWORD PTR es:[rdi],dx
  4061ee:	sub    eax,0x796c6e6f
  4061f3:	and    BYTE PTR [rax],ah
  4061f5:	and    BYTE PTR [rax],ah
  4061f7:	and    BYTE PTR [rax],ah
  4061f9:	and    BYTE PTR [rax],ah
  4061fb:	jae    0x406260
  4061fd:	(bad)  
  4061fe:	outs   dx,BYTE PTR ds:[rsi]
  4061ff:	and    BYTE PTR [rbx+0x79],dh
  406202:	jae    0x406278
  406204:	gs ins DWORD PTR es:[rdi],dx
  406206:	sub    eax,0x65646977
  40620b:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  40620f:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  406214:	imul   esp,DWORD PTR [rbp+0x73],0x6c6e6f20
  40621b:	jns    0x406227
  40621d:	add    BYTE PTR [rax],al
  40621f:	add    BYTE PTR [rax],ah
  406221:	and    BYTE PTR [rip+0x2d202c79],ch        # 0x2d608ea0
  406227:	sub    eax,0x72737973
  40622c:	outs   dx,DWORD PTR ds:[rsi]
  40622d:	outs   dx,DWORD PTR ds:[rsi]
  40622e:	je     0x40626d
  406230:	push   rbx
  406231:	pop    rcx
  406232:	push   rbx
  406233:	push   rdx
  406234:	rex.WRXB
  406235:	rex.WRXB push r12
  406237:	and    BYTE PTR [rax],ah
  406239:	and    BYTE PTR [rax],ah
  40623b:	jo     0x4062af
  40623d:	gs jo  0x4062a5
  406240:	outs   dx,BYTE PTR ds:[rsi]
  406241:	and    BYTE PTR fs:[rbx+0x59],dl
  406245:	push   rbx
  406246:	push   rdx
  406247:	rex.WRXB
  406248:	rex.WRXB push r12
  40624a:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40624e:	(bad)  
  40624f:	ins    BYTE PTR es:[rdi],dx
  406250:	ins    BYTE PTR es:[rdi],dx
  406251:	and    BYTE PTR [rax+0x61],dh
  406254:	je     0x4062be
  406256:	jae    0x406278
  406258:	outs   dx,WORD PTR ds:[rsi]
  40625a:	jb     0x40627c
  40625c:	jae    0x4062c1
  40625e:	(bad)  
  40625f:	outs   dx,BYTE PTR ds:[rsi]
  406260:	outs   dx,BYTE PTR ds:[rsi]
  406261:	imul   ebp,DWORD PTR [rsi+0x67],0xa
  406268:	and    BYTE PTR [rax],ah
  40626a:	sub    eax,0x2d202c76
  40626f:	sub    eax,0x62726576
  406274:	outs   dx,DWORD PTR ds:[rsi]
  406275:	jae    0x4062dc
  406277:	and    BYTE PTR [rax],ah
  406279:	and    BYTE PTR [rax],ah
  40627b:	and    BYTE PTR [rax],ah
  40627d:	and    BYTE PTR [rax],ah
  40627f:	and    BYTE PTR [rax],ah
  406281:	and    BYTE PTR [rax],ah
  406283:	imul   esi,DWORD PTR fs:[rbx+0x70],0x2079616c
  40628b:	jae    0x406301
  40628d:	(bad)  
  40628e:	je     0x406305
  406290:	jae    0x4062b2
  406292:	imul   ebp,DWORD PTR [rsi+0x66],0x616d726f
  406299:	je     0x406304
  40629b:	outs   dx,DWORD PTR ds:[rsi]
  40629c:	outs   dx,BYTE PTR ds:[rsi]
  40629d:	and    BYTE PTR [rdi+0x68],dh
  4062a0:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x79737562
  4062a8:	or     al,BYTE PTR [rax]
  4062aa:	add    BYTE PTR [rax],al
  4062ac:	add    BYTE PTR [rax],al
  4062ae:	add    BYTE PTR [rax],al
  4062b0:	and    BYTE PTR [rax],ah
  4062b2:	sub    eax,0x2d202c56
  4062b7:	sub    eax,0x73726576
  4062bc:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202020
  4062c3:	and    BYTE PTR [rax],ah
  4062c5:	and    BYTE PTR [rax],ah
  4062c7:	and    BYTE PTR [rax],ah
  4062c9:	and    BYTE PTR [rax],ah
  4062cb:	imul   esi,DWORD PTR fs:[rbx+0x70],0x2079616c
  4062d3:	outs   dx,WORD PTR ds:[rsi]
  4062d5:	outs   dx,BYTE PTR ds:[rsi]
  4062d6:	je     0x4062f8
  4062d8:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4062db:	imul   sp,WORD PTR [rdi+0x20],0x6576
  4062e1:	jb     0x406356
  4062e3:	imul   ebp,DWORD PTR [rdi+0x6e],0x646e6120
  4062ea:	and    BYTE PTR [rbp+0x78],ah
  4062ed:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x0
  4062f5:	add    BYTE PTR [rax],al
  4062f7:	add    BYTE PTR [rax],ah
  4062f9:	and    BYTE PTR [rip+0x2d202c68],ch        # 0x2d608f67
  4062ff:	sub    eax,0x706c6568
  406304:	and    BYTE PTR [rax],ah
  406306:	and    BYTE PTR [rax],ah
  406308:	and    BYTE PTR [rax],ah
  40630a:	and    BYTE PTR [rax],ah
  40630c:	and    BYTE PTR [rax],ah
  40630e:	and    BYTE PTR [rax],ah
  406310:	and    BYTE PTR [rax],ah
  406312:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  406316:	jo     0x406384
  406318:	(bad)  
  406319:	jns    0x40633b
  40631b:	je     0x406385
  40631d:	imul   esi,DWORD PTR [rbx+0x20],0x706c6568
  406324:	and    BYTE PTR [rcx+0x6e],ah
  406327:	and    BYTE PTR fs:[rbp+0x78],ah
  40632b:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x5d73255b
  406333:	add    BYTE PTR [rip+0x203a73],ah        # 0x609dac
  406339:	add    BYTE PTR [rax],al
  40633b:	add    BYTE PTR [rax],al
  40633d:	add    BYTE PTR [rax],al
  40633f:	add    BYTE PTR [rbx+0x6b],dh
  406342:	imul   esi,DWORD PTR [rax+0x70],0x2c676e69
  406349:	and    BYTE PTR [rdi+rbp*2+0x6f],ch
  40634d:	jo     0x4063b4
  40634f:	and    BYTE PTR fs:[rcx+rbp*2+0x72],ah
  406354:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  406359:	jns    0x40637b
  40635b:	fs gs je 0x4063c4
  40635f:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  406363:	add    BYTE PTR [rbx+0x6b],dh
  406366:	imul   esi,DWORD PTR [rax+0x70],0x2c676e69
  40636d:	and    BYTE PTR [rsi+0x6f],ch
  406370:	and    BYTE PTR [rbx+0x75],dh
  406373:	movsxd ebp,DWORD PTR [rax+0x20]
  406376:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  40637e:	jns    0x406380
  406380:	and    ah,BYTE PTR [rip+0x203a2273]        # 0x207a85f9
  406386:	add    BYTE PTR [rax],al
  406388:	and    ah,BYTE PTR [rip+0x203a2273]        # 0x207a8601
  40638e:	outs   dx,BYTE PTR ds:[rsi]
  40638f:	outs   dx,DWORD PTR ds:[rsi]
  406390:	je     0x4063b2
  406392:	(bad)  
  406393:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  406397:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  40639c:	jns    0x4063ca
  40639e:	and    BYTE PTR [rbx+0x6b],dh
  4063a1:	imul   esi,DWORD PTR [rax+0x70],0xa676e69
  4063a8:	add    BYTE PTR [rip+0x65203a73],ah        # 0x65609e21
  4063ae:	jb     0x406422
  4063b0:	outs   dx,DWORD PTR ds:[rsi]
  4063b1:	jb     0x4063d3
  4063b3:	jae    0x406418
  4063b5:	(bad)  
  4063b6:	outs   dx,BYTE PTR ds:[rsi]
  4063b7:	outs   dx,BYTE PTR ds:[rsi]
  4063b8:	imul   ebp,DWORD PTR [rsi+0x67],0xa
  4063bf:	add    BYTE PTR [rbx+0x6b],dh
  4063c2:	imul   esi,DWORD PTR [rax+0x70],0x2c676e69
  4063c9:	and    BYTE PTR [rbp+0x78],ah
  4063cc:	imul   esi,DWORD PTR [rbx+0x74],0x20676e69
  4063d3:	movsxd esp,DWORD PTR [rcx+0x63]
  4063d6:	push   0x73692065
  4063db:	and    BYTE PTR [rsi+0x61],dh
  4063de:	ins    BYTE PTR es:[rdi],dx
  4063df:	imul   esp,DWORD PTR [rdx+rdi*1+0x20],0x66206425
  4063e7:	outs   dx,DWORD PTR ds:[rsi]
  4063e8:	outs   dx,BYTE PTR ds:[rsi]
  4063e9:	je     0x40645e
  4063eb:	sub    al,0x20
  4063ed:	and    eax,0x69642064
  4063f2:	jb     0x406467
  4063f4:	or     al,BYTE PTR [rax]
  4063f6:	add    BYTE PTR [rax],al
  4063f8:	movsxd esp,DWORD PTR [rcx+0x63]
  4063fb:	push   0x2c676e69
  406400:	and    BYTE PTR [rsi+0x65],ch
  406403:	ja     0x406425
  406405:	movsxd esp,DWORD PTR [rcx+0x63]
  406408:	push   0x6f632065
  40640d:	outs   dx,BYTE PTR ds:[rsi]
  40640e:	je     0x406475
  406410:	outs   dx,BYTE PTR ds:[rsi]
  406411:	je     0x406486
  406413:	cmp    ah,BYTE PTR [rax]
  406415:	and    eax,0x6f662064
  40641a:	outs   dx,BYTE PTR ds:[rsi]
  40641b:	je     0x406490
  40641d:	sub    al,0x20
  40641f:	and    eax,0x69642064
  406424:	jb     0x406499
  406426:	or     al,BYTE PTR [rax]
  406428:	and    eax,0x66203a73
  40642d:	(bad)  
  40642e:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  406436:	ja     0x4064aa
  406438:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x68636163
  406440:	or     al,BYTE PTR gs:[rax]
  406443:	and    eax,0x43203a73
  406448:	(bad)  
  406449:	outs   dx,BYTE PTR ds:[rsi]
  40644a:	(bad)  
  40644b:	je     0x40646d
  40644d:	movsxd esi,DWORD PTR [rdx+0x65]
  406450:	(bad)  
  406451:	je     0x4064b8
  406453:	and    BYTE PTR [rbx+0x75],dh
  406456:	(bad)  
  406457:	imul   esi,DWORD PTR fs:[rdx+0x20],0xa746573
  40645f:	add    BYTE PTR [rip+0x43203a73],ah        # 0x43609ed8
  406465:	(bad)  
  406466:	outs   dx,BYTE PTR ds:[rsi]
  406467:	(bad)  
  406468:	je     0x40648a
  40646a:	movsxd esi,DWORD PTR [rdx+0x65]
  40646d:	(bad)  
  40646e:	je     0x4064d5
  406470:	and    BYTE PTR [rbx+0x75],dh
  406473:	(bad)  
  406474:	imul   esi,DWORD PTR fs:[rdx+0x20],0x7473696c
  40647c:	or     al,BYTE PTR [rax]
  40647e:	data16 (bad) 
  406480:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x63757300
  406488:	movsxd esp,DWORD PTR [rbp+0x65]
  40648b:	fs gs add BYTE PTR fs:[rsi+0x6f],ah
  406491:	outs   dx,BYTE PTR ds:[rsi]
  406492:	je     0x4064f7
  406494:	outs   dx,DWORD PTR ds:[rsi]
  406495:	outs   dx,BYTE PTR ds:[rsi]
  406496:	imul   sp,WORD PTR [rdi+0x20],0x6576
  40649c:	jb     0x406511
  40649e:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4064a5:	and    eax,0x64252e64
  4064aa:	or     al,BYTE PTR [rax]
  4064ac:	rex.RB
  4064ad:	data16 jb 0x406523
  4064b0:	jns    0x4064ec
  4064b2:	push   rsi
  4064b3:	jbe    0x40651d
  4064b5:	add    BYTE PTR [rax],al
  4064b7:	add    BYTE PTR [rip+0x43203a73],ah        # 0x43609f30
  4064bd:	(bad)  
  4064be:	outs   dx,BYTE PTR ds:[rsi]
  4064bf:	(bad)  
  4064c0:	je     0x4064e2
  4064c2:	imul   ebp,DWORD PTR [rsi+0x69],0x6f662074
  4064c9:	outs   dx,BYTE PTR ds:[rsi]
  4064ca:	je     0x4064ec
  4064cc:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4064cf:	imul   sp,WORD PTR [rdi+0x20],0x696c
  4064d5:	(bad)  
  4064d7:	(bad)  
  4064d8:	jb     0x406553
  4064da:	or     al,BYTE PTR [rax]
  4064dc:	add    BYTE PTR [rax],al
  4064de:	add    BYTE PTR [rax],al
  4064e0:	and    eax,0x43203a73
  4064e5:	(bad)  
  4064e6:	outs   dx,BYTE PTR ds:[rsi]
  4064e7:	(bad)  
  4064e8:	je     0x40650a
  4064ea:	movsxd esi,DWORD PTR [rdx+0x65]
  4064ed:	(bad)  
  4064ee:	je     0x406555
  4064f0:	and    BYTE PTR [rcx+rbp*2+0x73],ch
  4064f4:	je     0x406516
  4064f6:	outs   dx,DWORD PTR ds:[rsi]
  4064f7:	data16 and BYTE PTR [rcx+rbp*2+0x72],ah
  4064fc:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  406501:	imul   esp,DWORD PTR [rbp+0x73],0x7325000a
  406508:	cmp    ah,BYTE PTR [rax]
  40650a:	rex.XB (bad) 
  40650c:	outs   dx,BYTE PTR ds:[rsi]
  40650d:	(bad)  
  40650e:	je     0x406530
  406510:	(bad)  
  406511:	fs and BYTE PTR fs:[rcx+rbp*2+0x72],ah
  406517:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  40651c:	jns    0x406528
  40651e:	add    BYTE PTR [rbx+0x61],al
  406521:	outs   dx,BYTE PTR ds:[rsi]
  406522:	outs   dx,BYTE PTR ds:[rsi]
  406523:	outs   dx,DWORD PTR ds:[rsi]
  406524:	je     0x406546
  406526:	ins    DWORD PTR es:[rdi],dx
  406527:	(bad)  
  406528:	ins    BYTE PTR es:[rdi],dx
  406529:	ins    BYTE PTR es:[rdi],dx
  40652a:	outs   dx,DWORD PTR ds:[rsi]
  40652b:	movsxd ecx,DWORD PTR [rdx]
  40652d:	add    BYTE PTR [rip+0x25203a73],ah        # 0x25609fa6
  406533:	jae    0x40653f
  406535:	add    BYTE PTR [rax],al
  406537:	add    dh,al
  406539:	(bad)  
  40653b:	inc    DWORD PTR [rax]
  40653d:	(bad)  
  40653f:	inc    DWORD PTR [rax]
  406541:	(bad)  
  406543:	inc    DWORD PTR [rax]
  406545:	(bad)  
  406547:	inc    DWORD PTR [rax]
  406549:	(bad)  
  40654b:	inc    DWORD PTR [rax]
  40654d:	(bad)  
  40654f:	inc    DWORD PTR [rax]
  406551:	(bad)  
  406553:	inc    DWORD PTR [rax]
  406555:	(bad)  
  406557:	inc    DWORD PTR [rax]
  406559:	(bad)  
  40655b:	inc    DWORD PTR [rax]
  40655d:	(bad)  
  40655f:	inc    DWORD PTR [rax]
  406561:	(bad)  
  406563:	inc    DWORD PTR [rax]
  406565:	(bad)  
  406567:	inc    DWORD PTR [rax]
  406569:	(bad)  
  40656b:	inc    DWORD PTR [rax]
  40656d:	(bad)  
  40656f:	inc    DWORD PTR [rax]
  406571:	(bad)  
  406573:	inc    DWORD PTR [rax]
  406575:	(bad)  
  406577:	inc    DWORD PTR [rax]
  406579:	(bad)  
  40657b:	call   QWORD PTR [rbp+0xffffda]
  406581:	(bad)  
  406583:	inc    DWORD PTR [rax]
  406585:	(bad)  
  406587:	inc    DWORD PTR [rax]
  406589:	(bad)  
  40658b:	inc    DWORD PTR [rax]
  40658d:	(bad)  
  40658f:	inc    DWORD PTR [rax]
  406591:	(bad)  
  406593:	inc    DWORD PTR [rax]
  406595:	(bad)  
  406597:	inc    DWORD PTR [rax]
  406599:	(bad)  
  40659b:	inc    DWORD PTR [rax]
  40659d:	(bad)  
  40659f:	inc    DWORD PTR [rax]
  4065a1:	(bad)  
  4065a3:	inc    DWORD PTR [rax]
  4065a5:	(bad)  
  4065a7:	inc    DWORD PTR [rax]
  4065a9:	(bad)  
  4065ab:	inc    DWORD PTR [rax]
  4065ad:	(bad)  
  4065af:	inc    DWORD PTR [rax]
  4065b1:	(bad)  
  4065b3:	inc    DWORD PTR [rax]
  4065b5:	(bad)  
  4065b7:	inc    DWORD PTR [rax]
  4065b9:	(bad)  
  4065bb:	inc    DWORD PTR [rdx+rbx*8-0x24ff0001]
  4065c2:	(bad)  
  4065c3:	dec    DWORD PTR [rbx+0xffffda]
  4065c9:	(bad)  
  4065cb:	inc    DWORD PTR [rax]
  4065cd:	(bad)  
  4065cf:	inc    DWORD PTR [rax]
  4065d1:	(bad)  
  4065d3:	inc    DWORD PTR [rax]
  4065d5:	(bad)  
  4065d7:	inc    DWORD PTR [rax]
  4065d9:	(bad)  
  4065db:	inc    DWORD PTR [rax]
  4065dd:	(bad)  
  4065df:	inc    DWORD PTR [rax]
  4065e1:	(bad)  
  4065e3:	inc    DWORD PTR [rax]
  4065e5:	(bad)  
  4065e7:	inc    DWORD PTR [rax]
  4065e9:	(bad)  
  4065eb:	(bad)  
  4065ec:	jle    0x4065c8
  4065ee:	(bad)  
  4065ef:	push   rbp
  4065f1:	(bad)  
  4065f3:	inc    DWORD PTR [rax]
  4065f5:	(bad)  
  4065f7:	inc    DWORD PTR [rax]
  4065f9:	(bad)  
  4065fb:	(bad)  
  4065fc:	(bad)  
  4065fd:	(bad)  
  4065ff:	inc    DWORD PTR [rax]
  406601:	(bad)  
  406603:	inc    DWORD PTR [rax]
  406605:	(bad)  
  406607:	call   rbx
  406609:	(bad)  
  40660b:	jmp    QWORD PTR [rbp+0x72]
  40660e:	jb     0x40667f
  406610:	jb     0x40663f
  406612:	outs   dx,DWORD PTR ds:[rsi]
  406613:	outs   dx,BYTE PTR ds:[rsi]
  406614:	sub    eax,0x662d6f6e
  406619:	outs   dx,DWORD PTR ds:[rsi]
  40661a:	outs   dx,BYTE PTR ds:[rsi]
  40661b:	je     0x406690
  40661d:	add    BYTE PTR [rsi+0x6f],ah
  406620:	jb     0x406685
  406622:	add    BYTE PTR gs:[rdx+0x65],dh
  406626:	(bad)  
  406627:	ins    BYTE PTR es:[rdi],dx
  406628:	ins    BYTE PTR es:[rdi],dx
  406629:	jns    0x406658
  40662b:	outs   dx,WORD PTR ds:[rsi]
  40662d:	jb     0x406692
  40662f:	add    BYTE PTR gs:[rbx+0x79],dh
  406633:	jae    0x4066a7
  406635:	outs   dx,DWORD PTR ds:[rsi]
  406636:	outs   dx,DWORD PTR ds:[rsi]
  406637:	je     0x406639
  406639:	jae    0x4066b4
  40663b:	jae    0x4066b1
  40663d:	gs ins DWORD PTR es:[rdi],dx
  40663f:	sub    eax,0x796c6e6f
  406644:	add    BYTE PTR [rsi+0x65],dh
  406647:	jb     0x4066bc
  406649:	imul   ebp,DWORD PTR [rdi+0x6e],0x72657600
  406650:	(bad)  
  406651:	outs   dx,DWORD PTR ds:[rsi]
  406652:	jae    0x4066b9
  406654:	add    BYTE PTR [rax+0x65],ch
  406657:	ins    BYTE PTR es:[rdi],dx
  406658:	jo     0x40665a
	...
  40667e:	add    BYTE PTR [rax],al
  406680:	or     al,0x66
  406682:	add    BYTE PTR [rax],al
	...
  406695:	add    BYTE PTR [rax],al
  406697:	add    BYTE PTR [rbp+0x0],al
  40669a:	add    BYTE PTR [rax],al
  40669c:	add    BYTE PTR [rax],al
  40669e:	add    BYTE PTR [rax],al
  4066a0:	(bad)  
  4066a1:	data16 add BYTE PTR [rax],al
	...
  4066b5:	add    BYTE PTR [rax],al
  4066b7:	add    BYTE PTR [rsi+0x0],ah
  4066ba:	add    BYTE PTR [rax],al
  4066bc:	add    BYTE PTR [rax],al
  4066be:	add    BYTE PTR [rax],al
  4066c0:	and    al,0x66
  4066c2:	add    BYTE PTR [rax],al
	...
  4066d5:	add    BYTE PTR [rax],al
  4066d7:	add    BYTE PTR [rdx+0x0],dh
  4066da:	add    BYTE PTR [rax],al
  4066dc:	add    BYTE PTR [rax],al
  4066de:	add    BYTE PTR [rax],al
  4066e0:	xor    DWORD PTR [rsi+0x40],esp
  4066e3:	add    BYTE PTR [rax],al
  4066e5:	add    BYTE PTR [rax],al
  4066e7:	add    BYTE PTR [rcx],al
	...
  4066f5:	add    BYTE PTR [rax],al
  4066f7:	add    BYTE PTR [rcx+0x0],bh
  4066fa:	add    BYTE PTR [rax],al
  4066fc:	add    BYTE PTR [rax],al
  4066fe:	add    BYTE PTR [rax],al
  406700:	cmp    DWORD PTR [rsi+0x40],esp
	...
  406717:	add    BYTE PTR [rbx+0x0],dh
  40671a:	add    BYTE PTR [rax],al
  40671c:	add    BYTE PTR [rax],al
  40671e:	add    BYTE PTR [rax],al
  406720:	rex.RB
  406721:	data16 add BYTE PTR [rax],al
	...
  406735:	add    BYTE PTR [rax],al
  406737:	add    BYTE PTR [rsi+0x0],dl
  40673a:	add    BYTE PTR [rax],al
  40673c:	add    BYTE PTR [rax],al
  40673e:	add    BYTE PTR [rax],al
  406740:	rex.WRB
  406741:	data16 add BYTE PTR [rax],al
	...
  406755:	add    BYTE PTR [rax],al
  406757:	add    BYTE PTR [rsi+0x0],dh
  40675a:	add    BYTE PTR [rax],al
  40675c:	add    BYTE PTR [rax],al
  40675e:	add    BYTE PTR [rax],al
  406760:	push   rbp
  406761:	data16 add BYTE PTR [rax],al
	...
  406775:	add    BYTE PTR [rax],al
  406777:	add    BYTE PTR [rax+0x0],ch
	...
  4067be:	add    BYTE PTR [rax],al
  4067c0:	and    BYTE PTR [rbp+0x40],0x0
  4067c7:	add    BYTE PTR [rax+0x40a0],al
  4067cd:	add    BYTE PTR [rax],al
  4067cf:	add    BYTE PTR [rax+0x1f],ah
  4067d2:	add    BYTE PTR [rax],al
	...
  4067dd:	add    BYTE PTR [rax],al
  4067df:	add    BYTE PTR [rcx+0x72],al
  4067e2:	addr32 jne 0x406852
  4067e5:	outs   dx,BYTE PTR gs:[rsi]
  4067e7:	je     0x406809
  4067e9:	outs   dx,DWORD PTR fs:[rsi]
  4067eb:	ins    DWORD PTR es:[rdi],dx
  4067ec:	(bad)  
  4067ed:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4067f4:	jb     0x406816
  4067f6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4067fa:	rex.B
  4067fb:	rex.WB
  4067fc:	rex.WRX sub QWORD PTR [rax],r8
  4067ff:	rex.B jb 0x406869
  406802:	jne    0x406871
  406804:	outs   dx,BYTE PTR gs:[rsi]
  406806:	je     0x406828
  406808:	jae    0x406873
  40680a:	outs   dx,BYTE PTR ds:[rsi]
  40680b:	addr32 jne 0x40687a
  40680e:	(bad)  
  40680f:	jb     0x40687a
  406811:	je     0x40688c
  406813:	and    BYTE PTR [rax],ch
  406815:	push   rbx
  406816:	rex.WB
  406817:	rex.RXB
  406818:	rex.WRX sub QWORD PTR [rax],r8
  40681b:	add    BYTE PTR [rax],al
  40681d:	add    BYTE PTR [rax],al
  40681f:	add    BYTE PTR [rdi+0x76],cl
  406822:	gs jb  0x40688b
  406825:	ins    BYTE PTR es:[rdi],dx
  406826:	outs   dx,DWORD PTR ds:[rsi]
  406827:	ja     0x406849
  406829:	jb     0x40688c
  40682b:	outs   dx,BYTE PTR ds:[rsi]
  40682c:	and    BYTE PTR gs:[ebp+0x72],ah
  406831:	jb     0x4068a2
  406833:	jb     0x406855
  406835:	sub    BYTE PTR [rdi+0x56],cl
  406838:	rex.RB push r10
  40683a:	rex.RX
  40683b:	rex.WR
  40683c:	rex.WRXB push r15
  40683e:	sub    DWORD PTR [rax],eax
  406840:	push   rax
  406841:	(bad)  
  406842:	jb     0x4068b8
  406844:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40684b:	jae    0x40686d
  40684d:	outs   dx,DWORD PTR ds:[rsi]
  40684e:	data16 and BYTE PTR [rbx+0x69],dh
  406852:	outs   dx,BYTE PTR ds:[esi]
  406854:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40685b:	and    BYTE PTR gs:[rax],ch
  40685e:	push   rax
  40685f:	rex.WR
  406860:	rex.WRXB push r11
  406862:	push   rbx
  406863:	sub    DWORD PTR [rax],eax
  406865:	add    BYTE PTR [rax],al
  406867:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40686b:	(bad)  
  40686c:	ins    BYTE PTR es:[rdi],dx
  40686d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  406871:	jae    0x406893
  406873:	outs   dx,DWORD PTR ds:[rsi]
  406874:	data16 and BYTE PTR [rbx+0x69],dh
  406878:	outs   dx,BYTE PTR ds:[esi]
  40687a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  406881:	and    BYTE PTR gs:[rax],ch
  406884:	push   rsp
  406885:	rex.WR
  406886:	rex.WRXB push r11
  406888:	push   rbx
  406889:	sub    DWORD PTR [rax],eax
  40688b:	add    BYTE PTR [rax],al
  40688d:	add    BYTE PTR [rax],al
  40688f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  406893:	and    BYTE PTR [rdx+0x65],dh
  406896:	jae    0x40690d
  406898:	ins    BYTE PTR es:[rdi],dx
  406899:	je     0x4068bb
  40689b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  4068a2:	jae    0x406911
  4068a4:	(bad)  
  4068a5:	ins    BYTE PTR es:[rdi],dx
  4068a6:	ins    BYTE PTR es:[rdi],dx
  4068a7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4068ab:	(bad)  
  4068ac:	and    BYTE PTR gs:[rdx+0x65],dh
  4068b0:	jo     0x406924
  4068b2:	gs jae 0x40691a
  4068b5:	outs   dx,BYTE PTR ds:[rsi]
  4068b6:	je     0x40691d
  4068b8:	and    BYTE PTR fs:[rax],ch
  4068bb:	push   rbp
  4068bc:	rex.WRX
  4068bd:	rex.R
  4068be:	rex.RB push r10
  4068c0:	rex.RX
  4068c1:	rex.WR
  4068c2:	rex.WRXB push r15
  4068c4:	sub    DWORD PTR [rax],eax
  4068c6:	push   rbp
  4068c7:	outs   dx,BYTE PTR ds:[rsi]
  4068c8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4068cc:	outs   dx,BYTE PTR ds:[rsi]
  4068cd:	and    BYTE PTR [rbp+0x72],ah
  4068d0:	jb     0x406941
  4068d2:	jb     0x4068d4
  4068d4:	add    BYTE PTR [rax],al
  4068d6:	add    BYTE PTR [rax],al
  4068d8:	pop    rdi
  4068d9:	ins    DWORD PTR es:[rdi],dx
  4068da:	(bad)  
  4068db:	je     0x406945
  4068dd:	gs jb  0x406952
  4068e0:	sub    BYTE PTR [rcx],ch
  4068e2:	cmp    ah,BYTE PTR [rax]
  4068e4:	and    eax,0x6e692073
  4068e9:	and    BYTE PTR [rip+0x67252873],ah        # 0x67659162
  4068ef:	sub    al,0x20
  4068f1:	and    eax,0x20202967
  4068f6:	sub    BYTE PTR [rdx+0x65],dh
  4068f9:	je     0x406971
  4068fb:	(bad)  
  4068fc:	ins    BYTE PTR es:[rdi],dx
  4068fd:	cmp    eax,0xa296725
  406902:	add    BYTE PTR [rax],al
  406904:	sub    al,0xb8
  406906:	(bad)  
  406907:	jmp    FWORD PTR [rbp-0x49]
  40690a:	(bad)  
  40690b:	(bad)  
  40690c:	fdiv   QWORD PTR [rdi-0x48130001]
  406912:	(bad)  
  406913:	(bad)  
  406914:	cld    
  406915:	mov    bh,0xff
  406917:	dec    DWORD PTR [rax+rdi*4]
  40691a:	(bad)  
  40691b:	call   FWORD PTR [rax+rdi*4]
  40691e:	(bad)  
  40691f:	dec    DWORD PTR [rbp+0x69]
  406922:	outs   dx,BYTE PTR ds:[rsi]
  406923:	addr32 ja 0x406953
  406926:	ja     0x40695e
  406928:	xor    al,0x20
  40692a:	jb     0x4069a1
  40692c:	outs   dx,BYTE PTR ds:[rsi]
  40692d:	je     0x406998
  40692f:	ins    DWORD PTR es:[rdi],dx
  406930:	and    BYTE PTR gs:[rsi+0x61],ah
  406934:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40693c:	add    BYTE PTR [rax],al
  40693e:	add    BYTE PTR [rax],al
  406940:	rex.B
  406941:	fs fs jb 0x4069aa
  406945:	jae    0x4069ba
  406947:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a889bd
  40694d:	jae    0x40696f
  40694f:	outs   dx,BYTE PTR ds:[rsi]
  406950:	outs   dx,DWORD PTR ds:[rsi]
  406951:	and    BYTE PTR [rcx+0x6d],ch
  406954:	(bad)  
  406955:	addr32 gs sub eax,0x74636573
  40695c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  406963:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40696a:	jne    0x4069d1
  40696c:	jb     0x4069e7
  40696e:	and    BYTE PTR [rsi+0x61],ah
  406971:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  406979:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a289e3
  40697f:	je     0x4069e6
  406981:	jae    0x4069a3
  406983:	(bad)  
  406984:	je     0x4069a6
  406986:	(bad)  
  406987:	fs fs jb 0x4069f0
  40698b:	jae    0x406a00
  40698d:	and    BYTE PTR [rip+0x70],ah        # 0x406a03
  406993:	add    BYTE PTR [rax],al
  406995:	add    BYTE PTR [rax],al
  406997:	add    BYTE PTR [rax],ah
  406999:	and    BYTE PTR [rsi+0x69],dl
  40699c:	jb     0x406a12
  40699e:	jne    0x406a01
  4069a0:	ins    BYTE PTR es:[rdi],dx
  4069a1:	push   rax
  4069a2:	jb     0x406a13
  4069a4:	je     0x406a0b
  4069a6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  4069aa:	(bad)  
  4069ab:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  4069b3:	push   0x646f6320
  4069b8:	and    BYTE PTR gs:[rax],dh
  4069bb:	js     0x4069e2
  4069bd:	js     0x4069bf
  4069bf:	add    BYTE PTR [rax],ah
  4069c1:	and    BYTE PTR [rbp+0x6e],dl
  4069c4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4069c8:	outs   dx,BYTE PTR ds:[rsi]
  4069c9:	and    BYTE PTR [rax+0x73],dh
  4069cc:	gs jne 0x406a33
  4069cf:	outs   dx,DWORD PTR ds:[rsi]
  4069d0:	and    BYTE PTR [rdx+0x65],dh
  4069d3:	ins    BYTE PTR es:[rdi],dx
  4069d4:	outs   dx,DWORD PTR ds:[rsi]
  4069d5:	movsxd esp,DWORD PTR [rcx+0x74]
  4069d8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  4069df:	je     0x406a50
  4069e1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4069e4:	and    BYTE PTR [rsi+0x65],dh
  4069e7:	jb     0x406a5c
  4069e9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4069f0:	or     al,BYTE PTR [rax]
  4069f2:	add    BYTE PTR [rax],al
  4069f4:	add    BYTE PTR [rax],al
  4069f6:	add    BYTE PTR [rax],al
  4069f8:	and    BYTE PTR [rax],ah
  4069fa:	push   rbp
  4069fb:	outs   dx,BYTE PTR ds:[rsi]
  4069fc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406a00:	outs   dx,BYTE PTR ds:[rsi]
  406a01:	and    BYTE PTR [rax+0x73],dh
  406a04:	gs jne 0x406a6b
  406a07:	outs   dx,DWORD PTR ds:[rsi]
  406a08:	and    BYTE PTR [rdx+0x65],dh
  406a0b:	ins    BYTE PTR es:[rdi],dx
  406a0c:	outs   dx,DWORD PTR ds:[rsi]
  406a0d:	movsxd esp,DWORD PTR [rcx+0x74]
  406a10:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  406a17:	and    BYTE PTR [rbx+0x69],dh
  406a1a:	jp     0x406a81
  406a1c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a9886
	...
  406a2e:	add    BYTE PTR [rax],al
  406a30:	cs jo  0x406a97
  406a33:	(bad)  
  406a34:	je     0x406a97
	...
  406a3e:	add    BYTE PTR [rax],al
  406a40:	and    eax,0x203a73
  406a45:	push   rax
  406a46:	rex.WRXB push r11
  406a48:	rex.WB pop r8
  406a4a:	rex.WR pop rcx
  406a4c:	pop    rdi
  406a4d:	rex.XB
  406a4e:	rex.WRXB push r10
  406a50:	push   rdx
  406a51:	rex.RB
  406a52:	rex.XB push r12
	...
  406a60:	jne    0x406ad0
  406a62:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406a66:	outs   dx,BYTE PTR ds:[rsi]
  406a67:	and    BYTE PTR [rdi+0x70],ch
  406a6a:	je     0x406ad5
  406a6c:	outs   dx,DWORD PTR ds:[rsi]
  406a6d:	outs   dx,BYTE PTR ds:[rsi]
  406a6e:	and    BYTE PTR [rip+0x7325202d],ch        # 0x73658aa1
	...
  406a80:	jne    0x406af0
  406a82:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406a86:	outs   dx,BYTE PTR ds:[rsi]
  406a87:	and    BYTE PTR [rdi+0x70],ch
  406a8a:	je     0x406af5
  406a8c:	outs   dx,DWORD PTR ds:[rsi]
  406a8d:	outs   dx,BYTE PTR ds:[rsi]
  406a8e:	and    BYTE PTR [rip+0x6325202d],ch        # 0x63658ac1
	...
  406aa0:	outs   dx,DWORD PTR ds:[rsi]
  406aa1:	jo     0x406b17
  406aa3:	imul   ebp,DWORD PTR [rdi+0x6e],0x656f6420
  406aaa:	jae    0x406b1a
  406aac:	(bad)  
  406aad:	je     0x406acf
  406aaf:	je     0x406b12
  406ab1:	imul   esp,DWORD PTR [rbp+0x20],0x61
  406ab5:	outs   dx,BYTE PTR ds:[rsi]
  406ab6:	and    BYTE PTR [rcx+0x72],ah
  406ab9:	addr32 jne 0x406b29
  406abc:	outs   dx,BYTE PTR gs:[rsi]
  406abe:	je     0x406ae0
  406ac0:	sub    eax,0x2e25202d
  406ac5:	sub    dh,BYTE PTR [rbx+0x0]
	...
  406ad0:	(bad)  
  406ad1:	ins    DWORD PTR es:[rdi],dx
  406ad2:	(bad)  
  406ad3:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  406ada:	outs   dx,DWORD PTR ds:[rsi]
  406adb:	jo     0x406b51
  406add:	imul   ebp,DWORD PTR [rdi+0x6e],0x202d2d20
  406ae4:	and    eax,0x732a2e
	...
  406afd:	add    BYTE PTR [rax],al
  406aff:	add    BYTE PTR [rdi+0x70],ch
  406b02:	je     0x406b6d
  406b04:	outs   dx,DWORD PTR ds:[rsi]
  406b05:	outs   dx,BYTE PTR ds:[rsi]
  406b06:	and    BYTE PTR [rdx+0x65],dh
  406b09:	jno    0x406b80
  406b0b:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  406b12:	and    BYTE PTR [rcx+0x72],ah
  406b15:	addr32 jne 0x406b85
  406b18:	outs   dx,BYTE PTR gs:[rsi]
  406b1a:	je     0x406b3c
  406b1c:	sub    eax,0x7325202d
	...
  406b3d:	add    BYTE PTR [rax],al
  406b3f:	add    BYTE PTR [rdi+0x70],ch
  406b42:	je     0x406bad
  406b44:	outs   dx,DWORD PTR ds:[rsi]
  406b45:	outs   dx,BYTE PTR ds:[rsi]
  406b46:	and    BYTE PTR [rdx+0x65],dh
  406b49:	jno    0x406bc0
  406b4b:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  406b52:	and    BYTE PTR [rcx+0x72],ah
  406b55:	addr32 jne 0x406bc5
  406b58:	outs   dx,BYTE PTR gs:[rsi]
  406b5a:	je     0x406b7c
  406b5c:	sub    eax,0x6325202d
	...
  406b7d:	add    BYTE PTR [rax],al
  406b7f:	add    BYTE PTR [rax+0x50],al
  406b82:	add    BYTE PTR [rax],al
	...
  406b8d:	add    BYTE PTR [rax],al
  406b8f:	add    BYTE PTR [rax+0x4050],al
	...
  406b9d:	add    BYTE PTR [rax],al
  406b9f:	add    BYTE PTR [rax+0x4042],ah
	...
  406bad:	add    BYTE PTR [rax],al
  406baf:	add    BYTE PTR [rax],dl
  406bb1:	jno    0x406bf3
	...
  406bbf:	add    BYTE PTR [rax],dl
  406bc1:	jno    0x406c03
	...
  406bcf:	add    al,dl
  406bd1:	add    BYTE PTR [eax],al
	...
  406be1:	add    BYTE PTR [rax+0x0],al
	...
  406bf0:	add    BYTE PTR [rbp+0x40],dh
	...
  406bfe:	add    BYTE PTR [rax],al
  406c00:	sbb    BYTE PTR [rbp+0x40],dh
	...
  406c0e:	add    BYTE PTR [rax],al
  406c10:	mov    bpl,0x40
	...
  406c1f:	add    BYTE PTR [rax-0x4b],ah
  406c22:	add    BYTE PTR [rax],al
	...
  406c2d:	add    BYTE PTR [rax],al
  406c2f:	add    BYTE PTR [rax-0x4b],bh
  406c32:	add    BYTE PTR [rax],al
	...
  406c3d:	add    BYTE PTR [rax],al
  406c3f:	add    al,al
  406c41:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406c42:	add    BYTE PTR [rax],al
	...
  406c4d:	add    BYTE PTR [rax],al
  406c4f:	add    BYTE PTR [rax],ch
  406c51:	stos   BYTE PTR es:[rdi],al
  406c52:	add    BYTE PTR [rax],al
	...
  406c5d:	add    BYTE PTR [rax],al
  406c5f:	add    BYTE PTR [rax],ah
  406c61:	stos   BYTE PTR es:[rdi],al
  406c62:	add    BYTE PTR [rax],al
	...
  406c6d:	add    BYTE PTR [rax],al
  406c6f:	add    BYTE PTR [rax],dl
  406c71:	stos   BYTE PTR es:[rdi],al
  406c72:	add    BYTE PTR [rax],al
	...
  406c7d:	add    BYTE PTR [rax],al
  406c7f:	add    BYTE PTR [rax],bl
  406c81:	stos   BYTE PTR es:[rdi],al
  406c82:	add    BYTE PTR [rax],al
	...
  406c91:	rol    BYTE PTR [rax+0x0],0x0
	...
  406c9d:	add    BYTE PTR [rax],al
  406c9f:	add    BYTE PTR [rax],dl
  406ca1:	rol    BYTE PTR [rax+0x0],0x0
	...
  406cad:	add    BYTE PTR [rax],al
  406caf:	add    BYTE PTR [rax],bl
  406cb1:	rol    BYTE PTR [rax+0x0],0x0
	...
  406cbd:	add    BYTE PTR [rax],al
  406cbf:	add    BYTE PTR [rax],dh
  406cc1:	rol    BYTE PTR [rax+0x0],0x0
	...
  406ccd:	add    BYTE PTR [rax],al
  406ccf:	add    BYTE PTR [rax-0x60],dl
  406cd2:	add    BYTE PTR [rax],al
	...
  406cdd:	add    BYTE PTR [rax],al
  406cdf:	add    BYTE PTR [rax+0x40a6],dl
	...
  406ced:	add    BYTE PTR [rax],al
  406cef:	add    al,dh
  406cf1:	sub    BYTE PTR [rax+0x0],al
	...
  406d00:	and    BYTE PTR [rax+0x0],al
	...
  406d10:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406d12:	add    BYTE PTR [rax],al
	...
  406d1d:	add    BYTE PTR [rax],al
  406d1f:	add    BYTE PTR [rax-0x5a],dh
  406d22:	add    BYTE PTR [rax],al
	...
  406d2d:	add    BYTE PTR [rax],al
  406d2f:	add    BYTE PTR [rax-0x60],ah
  406d32:	add    BYTE PTR [rax],al
	...
  406d3d:	add    BYTE PTR [rax],al
  406d3f:	add    BYTE PTR [rax-0x5a],bl
  406d42:	add    BYTE PTR [rax],al
	...
  406d4d:	add    BYTE PTR [rax],al
  406d4f:	add    BYTE PTR [rsi+riz*4+0x40],dl
	...
  406d5f:	add    BYTE PTR [rax-0x5a],dl
  406d62:	add    BYTE PTR [rax],al
	...
  406d6d:	add    BYTE PTR [rax],al
  406d6f:	add    BYTE PTR [rax-0x56],dl
  406d72:	add    BYTE PTR [rax],al
	...
  406d7d:	add    BYTE PTR [rax],al
  406d7f:	add    BYTE PTR [rax+rdx*2+0x40],ch
	...
  406d8f:	add    BYTE PTR [rdi+0x43],al
  406d92:	rex.XB cmp spl,BYTE PTR [r8]
  406d95:	sub    BYTE PTR [rdi+0x4e],al
  406d98:	push   rbp
  406d99:	sub    DWORD PTR [rax],esp
  406d9b:	xor    al,0x2e
  406d9d:	cmp    DWORD PTR [rsi],ebp
  406d9f:	xor    al,0x0
	...
  406dad:	add    BYTE PTR [rax],al
  406daf:	add    BYTE PTR [rdi+0x43],al
  406db2:	rex.XB cmp spl,BYTE PTR [r8]
  406db5:	sub    BYTE PTR [rdi+0x4e],al
  406db8:	push   rbp
  406db9:	sub    DWORD PTR [rax],esp
  406dbb:	xor    al,0x2e
  406dbd:	cmp    DWORD PTR [rsi],ebp
  406dbf:	xor    al,0x0
	...
  406dcd:	add    BYTE PTR [rax],al
  406dcf:	add    BYTE PTR [rdi+0x43],al
  406dd2:	rex.XB cmp spl,BYTE PTR [r8]
  406dd5:	sub    BYTE PTR [rdi+0x4e],al
  406dd8:	push   rbp
  406dd9:	sub    DWORD PTR [rax],esp
  406ddb:	xor    al,0x2e
  406ddd:	cmp    DWORD PTR [rsi],ebp
  406ddf:	xor    al,0x0
	...
  406ded:	add    BYTE PTR [rax],al
  406def:	add    BYTE PTR [rdi+0x43],al
  406df2:	rex.XB cmp spl,BYTE PTR [r8]
  406df5:	sub    BYTE PTR [rdi+0x4e],al
  406df8:	push   rbp
  406df9:	sub    DWORD PTR [rax],esp
  406dfb:	xor    al,0x2e
  406dfd:	cmp    DWORD PTR [rsi],ebp
  406dff:	xor    al,0x0
	...
  406e0d:	add    BYTE PTR [rax],al
  406e0f:	add    BYTE PTR [rdi+0x43],al
  406e12:	rex.XB cmp spl,BYTE PTR [r8]
  406e15:	sub    BYTE PTR [rdi+0x4e],al
  406e18:	push   rbp
  406e19:	sub    DWORD PTR [rax],esp
  406e1b:	xor    al,0x2e
  406e1d:	cmp    DWORD PTR [rsi],ebp
  406e1f:	xor    al,0x0
	...
  406e2d:	add    BYTE PTR [rax],al
  406e2f:	add    BYTE PTR [rdi+0x43],al
  406e32:	rex.XB cmp spl,BYTE PTR [r8]
  406e35:	sub    BYTE PTR [rdi+0x4e],al
  406e38:	push   rbp
  406e39:	sub    DWORD PTR [rax],esp
  406e3b:	xor    al,0x2e
  406e3d:	cmp    DWORD PTR [rsi],ebp
  406e3f:	xor    al,0x0
	...
  406e4d:	add    BYTE PTR [rax],al
  406e4f:	add    BYTE PTR [rdi+0x43],al
  406e52:	rex.XB cmp spl,BYTE PTR [r8]
  406e55:	sub    BYTE PTR [rdi+0x4e],al
  406e58:	push   rbp
  406e59:	sub    DWORD PTR [rax],esp
  406e5b:	xor    al,0x2e
  406e5d:	cmp    DWORD PTR [rsi],ebp
  406e5f:	xor    al,0x0
	...
  406e6d:	add    BYTE PTR [rax],al
  406e6f:	add    BYTE PTR [rdi+0x43],al
  406e72:	rex.XB cmp spl,BYTE PTR [r8]
  406e75:	sub    BYTE PTR [rdi+0x4e],al
  406e78:	push   rbp
  406e79:	sub    DWORD PTR [rax],esp
  406e7b:	xor    al,0x2e
  406e7d:	cmp    DWORD PTR [rsi],ebp
  406e7f:	xor    al,0x0
	...
  406e8d:	add    BYTE PTR [rax],al
  406e8f:	add    BYTE PTR [rdi+0x43],al
  406e92:	rex.XB cmp spl,BYTE PTR [r8]
  406e95:	sub    BYTE PTR [rdi+0x4e],al
  406e98:	push   rbp
  406e99:	sub    DWORD PTR [rax],esp
  406e9b:	xor    al,0x2e
  406e9d:	cmp    DWORD PTR [rsi],ebp
  406e9f:	xor    al,0x0
	...
  406ead:	add    BYTE PTR [rax],al
  406eaf:	add    BYTE PTR [rdi+0x43],al
  406eb2:	rex.XB cmp spl,BYTE PTR [r8]
  406eb5:	sub    BYTE PTR [rdi+0x4e],al
  406eb8:	push   rbp
  406eb9:	sub    DWORD PTR [rax],esp
  406ebb:	xor    al,0x2e
  406ebd:	cmp    DWORD PTR [rsi],ebp
  406ebf:	xor    al,0x0
	...
  406ecd:	add    BYTE PTR [rax],al
  406ecf:	add    BYTE PTR [rdi+0x43],al
  406ed2:	rex.XB cmp spl,BYTE PTR [r8]
  406ed5:	sub    BYTE PTR [rdi+0x4e],al
  406ed8:	push   rbp
  406ed9:	sub    DWORD PTR [rax],esp
  406edb:	xor    al,0x2e
  406edd:	cmp    DWORD PTR [rsi],ebp
  406edf:	xor    al,0x0
	...
  406eed:	add    BYTE PTR [rax],al
  406eef:	add    BYTE PTR [rdi+0x43],al
  406ef2:	rex.XB cmp spl,BYTE PTR [r8]
  406ef5:	sub    BYTE PTR [rdi+0x4e],al
  406ef8:	push   rbp
  406ef9:	sub    DWORD PTR [rax],esp
  406efb:	xor    al,0x2e
  406efd:	cmp    DWORD PTR [rsi],ebp
  406eff:	xor    al,0x0
	...
  406f0d:	add    BYTE PTR [rax],al
  406f0f:	add    BYTE PTR [rdi+0x43],al
  406f12:	rex.XB cmp spl,BYTE PTR [r8]
  406f15:	sub    BYTE PTR [rdi+0x4e],al
  406f18:	push   rbp
  406f19:	sub    DWORD PTR [rax],esp
  406f1b:	xor    al,0x2e
  406f1d:	cmp    DWORD PTR [rsi],ebp
  406f1f:	xor    al,0x0
	...
  406f2d:	add    BYTE PTR [rax],al
  406f2f:	add    BYTE PTR [rdi+0x43],al
  406f32:	rex.XB cmp spl,BYTE PTR [r8]
  406f35:	sub    BYTE PTR [rdi+0x4e],al
  406f38:	push   rbp
  406f39:	sub    DWORD PTR [rax],esp
  406f3b:	xor    al,0x2e
  406f3d:	cmp    DWORD PTR [rsi],ebp
  406f3f:	xor    al,0x0
	...
  406f4d:	add    BYTE PTR [rax],al
  406f4f:	add    BYTE PTR [rdi+0x43],al
  406f52:	rex.XB cmp spl,BYTE PTR [r8]
  406f55:	sub    BYTE PTR [rdi+0x4e],al
  406f58:	push   rbp
  406f59:	sub    DWORD PTR [rax],esp
  406f5b:	xor    al,0x2e
  406f5d:	cmp    DWORD PTR [rsi],ebp
  406f5f:	xor    al,0x0
	...
  406f6d:	add    BYTE PTR [rax],al
  406f6f:	add    BYTE PTR [rdi+0x43],al
  406f72:	rex.XB cmp spl,BYTE PTR [r8]
  406f75:	sub    BYTE PTR [rdi+0x4e],al
  406f78:	push   rbp
  406f79:	sub    DWORD PTR [rax],esp
  406f7b:	xor    al,0x2e
  406f7d:	cmp    DWORD PTR [rsi],ebp
  406f7f:	xor    al,0x0
	...
  406f8d:	add    BYTE PTR [rax],al
  406f8f:	add    BYTE PTR [rdi+0x43],al
  406f92:	rex.XB cmp spl,BYTE PTR [r8]
  406f95:	sub    BYTE PTR [rdi+0x4e],al
  406f98:	push   rbp
  406f99:	sub    DWORD PTR [rax],esp
  406f9b:	xor    al,0x2e
  406f9d:	cmp    DWORD PTR [rsi],ebp
  406f9f:	xor    al,0x0
	...
  406fad:	add    BYTE PTR [rax],al
  406faf:	add    BYTE PTR [rdi+0x43],al
  406fb2:	rex.XB cmp spl,BYTE PTR [r8]
  406fb5:	sub    BYTE PTR [rdi+0x4e],al
  406fb8:	push   rbp
  406fb9:	sub    DWORD PTR [rax],esp
  406fbb:	xor    al,0x2e
  406fbd:	cmp    DWORD PTR [rsi],ebp
  406fbf:	xor    al,0x0
	...
  406fcd:	add    BYTE PTR [rax],al
  406fcf:	add    BYTE PTR [rdi+0x43],al
  406fd2:	rex.XB cmp spl,BYTE PTR [r8]
  406fd5:	sub    BYTE PTR [rdi+0x4e],al
  406fd8:	push   rbp
  406fd9:	sub    DWORD PTR [rax],esp
  406fdb:	xor    al,0x2e
  406fdd:	cmp    DWORD PTR [rsi],ebp
  406fdf:	xor    al,0x0
	...
  406fed:	add    BYTE PTR [rax],al
  406fef:	add    BYTE PTR [rdi+0x43],al
  406ff2:	rex.XB cmp spl,BYTE PTR [r8]
  406ff5:	sub    BYTE PTR [rdi+0x4e],al
  406ff8:	push   rbp
  406ff9:	sub    DWORD PTR [rax],esp
  406ffb:	xor    al,0x2e
  406ffd:	cmp    DWORD PTR [rsi],ebp
  406fff:	xor    al,0x0
	...
  40700d:	add    BYTE PTR [rax],al
  40700f:	add    BYTE PTR [rdi+0x43],al
  407012:	rex.XB cmp spl,BYTE PTR [r8]
  407015:	sub    BYTE PTR [rdi+0x4e],al
  407018:	push   rbp
  407019:	sub    DWORD PTR [rax],esp
  40701b:	xor    al,0x2e
  40701d:	cmp    DWORD PTR [rsi],ebp
  40701f:	xor    al,0x0
	...
  40702d:	add    BYTE PTR [rax],al
  40702f:	add    BYTE PTR [rdi+0x43],al
  407032:	rex.XB cmp spl,BYTE PTR [r8]
  407035:	sub    BYTE PTR [rdi+0x4e],al
  407038:	push   rbp
  407039:	sub    DWORD PTR [rax],esp
  40703b:	xor    al,0x2e
  40703d:	cmp    DWORD PTR [rsi],ebp
  40703f:	xor    al,0x0
	...
  40704d:	add    BYTE PTR [rax],al
  40704f:	add    BYTE PTR [rdi+0x43],al
  407052:	rex.XB cmp spl,BYTE PTR [r8]
  407055:	sub    BYTE PTR [rdi+0x4e],al
  407058:	push   rbp
  407059:	sub    DWORD PTR [rax],esp
  40705b:	xor    al,0x2e
  40705d:	cmp    DWORD PTR [rsi],ebp
  40705f:	xor    al,0x0
	...
  40706d:	add    BYTE PTR [rax],al
  40706f:	add    BYTE PTR [rdi+0x43],al
  407072:	rex.XB cmp spl,BYTE PTR [r8]
  407075:	sub    BYTE PTR [rdi+0x4e],al
  407078:	push   rbp
  407079:	sub    DWORD PTR [rax],esp
  40707b:	xor    al,0x2e
  40707d:	cmp    DWORD PTR [rsi],ebp
  40707f:	xor    al,0x0
	...
  40708d:	add    BYTE PTR [rax],al
  40708f:	add    BYTE PTR [rdi+0x43],al
  407092:	rex.XB cmp spl,BYTE PTR [r8]
  407095:	sub    BYTE PTR [rdi+0x4e],al
  407098:	push   rbp
  407099:	sub    DWORD PTR [rax],esp
  40709b:	xor    al,0x2e
  40709d:	cmp    DWORD PTR [rsi],ebp
  40709f:	xor    al,0x0
	...
  4070ad:	add    BYTE PTR [rax],al
  4070af:	add    BYTE PTR [rdi+0x43],al
  4070b2:	rex.XB cmp spl,BYTE PTR [r8]
  4070b5:	sub    BYTE PTR [rdi+0x4e],al
  4070b8:	push   rbp
  4070b9:	sub    DWORD PTR [rax],esp
  4070bb:	xor    al,0x2e
  4070bd:	cmp    DWORD PTR [rsi],ebp
  4070bf:	xor    al,0x0
	...
  4070cd:	add    BYTE PTR [rax],al
  4070cf:	add    BYTE PTR [rdi+0x43],al
  4070d2:	rex.XB cmp spl,BYTE PTR [r8]
  4070d5:	sub    BYTE PTR [rdi+0x4e],al
  4070d8:	push   rbp
  4070d9:	sub    DWORD PTR [rax],esp
  4070db:	xor    al,0x2e
  4070dd:	cmp    DWORD PTR [rsi],ebp
  4070df:	xor    al,0x0
	...
  4070ed:	add    BYTE PTR [rax],al
  4070ef:	add    BYTE PTR [rdi+0x43],al
  4070f2:	rex.XB cmp spl,BYTE PTR [r8]
  4070f5:	sub    BYTE PTR [rdi+0x4e],al
  4070f8:	push   rbp
  4070f9:	sub    DWORD PTR [rax],esp
  4070fb:	xor    al,0x2e
  4070fd:	cmp    DWORD PTR [rsi],ebp
  4070ff:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000408000 <.pdata>:
  408000:	add    BYTE PTR [rax],dl
  408002:	add    BYTE PTR [rax],al
  408004:	add    DWORD PTR [rax],edx
  408006:	add    BYTE PTR [rax],al
  408008:	add    BYTE PTR [rax+0x10100000],dl
  40800e:	add    BYTE PTR [rax],al
  408010:	push   rcx
  408011:	adc    DWORD PTR [rax],eax
  408013:	add    BYTE PTR [rax+rdx*4],al
  408016:	add    BYTE PTR [rax],al
  408018:	(bad)  
  408019:	adc    DWORD PTR [rax],eax
  40801b:	add    BYTE PTR [rsi+0xc000011],ch
  408021:	nop
  408022:	add    BYTE PTR [rax],al
  408024:	mov    al,0x11
  408026:	add    BYTE PTR [rax],al
  408028:	(bad)  
  408029:	adc    al,0x0
  40802b:	add    BYTE PTR [rax+rdx*4],dl
  40802e:	add    BYTE PTR [rax],al
  408030:	rcl    BYTE PTR [rax+rax*1],1
  408033:	add    dl,dh
  408035:	adc    al,0x0
  408037:	add    BYTE PTR [rax],ch
  408039:	nop
  40803a:	add    BYTE PTR [rax],al
  40803c:	add    BYTE PTR [rip+0x15220000],dl        # 0x15628042
  408042:	add    BYTE PTR [rax],al
  408044:	rex.W nop
  408046:	add    BYTE PTR [rax],al
  408048:	xor    BYTE PTR [rip+0x166d0000],dl        # 0x16ad804e
  40804e:	add    BYTE PTR [rax],al
  408050:	push   0x70000090
  408055:	(bad)  
  408056:	add    BYTE PTR [rax],al
  408058:	stos   BYTE PTR es:[rdi],al
  408059:	sbb    al,BYTE PTR [rax]
  40805b:	add    BYTE PTR [rax+rdx*4+0x0],dh
  40805f:	add    BYTE PTR [rax+0x4700001b],ah
  408065:	sbb    al,0x0
  408067:	add    BYTE PTR [rax+rdx*4+0x1c500000],ah
  40806e:	add    BYTE PTR [rax],al
  408070:	imul   ebx,DWORD PTR [rax+rax*1],0x90ac00
  408077:	add    BYTE PTR [rax+0x1c],dh
  40807a:	add    BYTE PTR [rax],al
  40807c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40807d:	sbb    al,0x0
  40807f:	add    BYTE PTR [rax+rdx*4+0x1cb00000],dh
  408086:	add    BYTE PTR [rax],al
  408088:	add    eax,0xbc00001d
  40808d:	nop
  40808e:	add    BYTE PTR [rax],al
  408090:	adc    BYTE PTR [rip+0x1d2c0000],bl        # 0x1d6c8096
  408096:	add    BYTE PTR [rax],al
  408098:	enter  0x90,0x0
  40809c:	xor    BYTE PTR [rip+0x1d3a0000],bl        # 0x1d7a80a2
  4080a2:	add    BYTE PTR [rax],al
  4080a4:	int3   
  4080a5:	nop
  4080a6:	add    BYTE PTR [rax],al
  4080a8:	rex sbb eax,0x1d430000
  4080ae:	add    BYTE PTR [rax],al
  4080b0:	rcl    BYTE PTR [rax+0x1d500000],1
  4080b6:	add    BYTE PTR [rax],al
  4080b8:	es (bad) 
  4080ba:	add    BYTE PTR [rax],al
  4080bc:	(bad)  
  4080bd:	nop
  4080be:	add    BYTE PTR [rax],al
  4080c0:	xor    BYTE PTR [rsi],bl
  4080c2:	add    BYTE PTR [rax],al
  4080c4:	sub    ebx,DWORD PTR [rdi]
  4080c6:	add    BYTE PTR [rax],al
  4080c8:	in     al,0x90
  4080ca:	add    BYTE PTR [rax],al
  4080cc:	xor    BYTE PTR [rdi],bl
  4080ce:	add    BYTE PTR [rax],al
  4080d0:	pop    rdi
  4080d1:	(bad)  
  4080d2:	add    BYTE PTR [rax],al
  4080d4:	hlt    
  4080d5:	nop
  4080d6:	add    BYTE PTR [rax],al
  4080d8:	(bad)  
  4080d9:	(bad)  
  4080da:	add    BYTE PTR [rax],al
  4080dc:	leave  
  4080dd:	(bad)  
  4080de:	add    BYTE PTR [rax],al
  4080e0:	cld    
  4080e1:	nop
  4080e2:	add    BYTE PTR [rax],al
  4080e4:	rcr    BYTE PTR [rdi],1
  4080e6:	add    BYTE PTR [rax],al
  4080e8:	rcr    DWORD PTR [rdi],cl
  4080ea:	add    BYTE PTR [rax],al
  4080ec:	or     BYTE PTR [rcx+0x1fe00000],dl
  4080f2:	add    BYTE PTR [rax],al
  4080f4:	and    DWORD PTR [rax],esp
  4080f6:	add    BYTE PTR [rax],al
  4080f8:	or     al,0x91
  4080fa:	add    BYTE PTR [rax],al
  4080fc:	xor    BYTE PTR [rax],ah
  4080fe:	add    BYTE PTR [rax],al
  408100:	cmp    al,0x20
  408102:	add    BYTE PTR [rax],al
  408104:	adc    al,0x91
  408106:	add    BYTE PTR [rax],al
  408108:	and    BYTE PTR [rax],al
  40810b:	add    BYTE PTR [rcx+riz*1],bh
  40810e:	add    BYTE PTR [rax],al
  408110:	sbb    BYTE PTR [rcx+0x21400000],dl
  408116:	add    BYTE PTR [rax],al
  408118:	rex.XB and DWORD PTR [r8],eax
  40811b:	add    BYTE PTR [rax],dh
  40811d:	xchg   ecx,eax
  40811e:	add    BYTE PTR [rax],al
  408120:	push   rax
  408121:	and    DWORD PTR [rax],eax
  408123:	add    BYTE PTR [rcx+riz*1+0x0],dl
  408127:	add    BYTE PTR [rcx+rdx*4],dh
  40812a:	add    BYTE PTR [rax],al
  40812c:	(bad)  
  40812d:	and    DWORD PTR [rax],eax
  40812f:	add    BYTE PTR [rcx+riz*1+0x0],ah
  408133:	add    BYTE PTR [rax],bh
  408135:	xchg   ecx,eax
  408136:	add    BYTE PTR [rax],al
  408138:	jo     0x40815b
  40813a:	add    BYTE PTR [rax],al
  40813c:	shl    DWORD PTR [rcx],1
  40813e:	add    BYTE PTR [rax],al
  408140:	cmp    al,0x91
  408142:	add    BYTE PTR [rax],al
  408144:	loopne 0x408167
  408146:	add    BYTE PTR [rax],al
  408148:	rex.X and eax,DWORD PTR [rax]
  40814b:	add    BYTE PTR [rax-0x6f],cl
  40814e:	add    BYTE PTR [rax],al
  408150:	push   rax
  408151:	and    eax,DWORD PTR [rax]
  408153:	add    BYTE PTR [rcx+0x26],cl
  408156:	add    BYTE PTR [rax],al
  408158:	pop    rsp
  408159:	xchg   ecx,eax
  40815a:	add    BYTE PTR [rax],al
  40815c:	push   rax
  40815d:	add    BYTE PTR es:[rax],al
  408160:	mul    BYTE PTR [rdi]
  408162:	add    BYTE PTR [rax],al
  408164:	je     0x4080f7
  408166:	add    BYTE PTR [rax],al
  408168:	add    BYTE PTR [rax],ch
  40816a:	add    BYTE PTR [rax],al
  40816c:	in     al,dx
  40816d:	sub    BYTE PTR [rax],al
  40816f:	add    BYTE PTR [rcx+rdx*4+0x0],bh
  408173:	add    al,dh
  408175:	sub    BYTE PTR [rax],al
  408177:	add    BYTE PTR [rax-0x73ffffd6],ch
  40817d:	xchg   ecx,eax
  40817e:	add    BYTE PTR [rax],al
  408180:	mov    al,0x2a
  408182:	add    BYTE PTR [rax],al
  408184:	sbb    eax,0x9400002b
  408189:	xchg   ecx,eax
  40818a:	add    BYTE PTR [rax],al
  40818c:	and    BYTE PTR [rbx],ch
  40818e:	add    BYTE PTR [rax],al
  408190:	lahf   
  408191:	sub    eax,DWORD PTR [rax]
  408193:	add    BYTE PTR [rcx+rdx*4+0x2ba00000],ah
  40819a:	add    BYTE PTR [rax],al
  40819c:	(bad)  
  40819d:	sub    al,0x0
  40819f:	add    BYTE PTR [rax+0x40000091],dh
  4081a5:	sub    al,0x0
  4081a7:	add    BYTE PTR [rdx],bl
  4081a9:	sub    eax,0x91b80000
  4081ae:	add    BYTE PTR [rax],al
  4081b0:	and    BYTE PTR [rip+0x2d3f0000],ch        # 0x2d7f81b6
  4081b6:	add    BYTE PTR [rax],al
  4081b8:	rcl    BYTE PTR [rcx+0x2d400000],0x0
  4081bf:	add    BYTE PTR [rdx+0x2d],dl
  4081c2:	add    BYTE PTR [rax],al
  4081c4:	(bad)  
  4081c5:	xchg   ecx,eax
  4081c6:	add    BYTE PTR [rax],al
  4081c8:	(bad)  
  4081c9:	sub    eax,0x2da50000
  4081ce:	add    BYTE PTR [rax],al
  4081d0:	enter  0x91,0x0
  4081d4:	mov    al,0x2d
  4081d6:	add    BYTE PTR [rax],al
  4081d8:	rex.WRX
  4081d9:	add    BYTE PTR cs:[rax],al
  4081dc:	int3   
  4081dd:	xchg   ecx,eax
  4081de:	add    BYTE PTR [rax],al
  4081e0:	push   rax
  4081e1:	add    BYTE PTR cs:[rax],al
  4081e4:	xchg   ebx,eax
  4081e5:	add    BYTE PTR cs:[rax],al
  4081e8:	fcom   DWORD PTR [rcx+0x2ea00000]
  4081ee:	add    BYTE PTR [rax],al
  4081f0:	fld    TBYTE PTR [rsi]
  4081f2:	add    BYTE PTR [rax],al
  4081f4:	in     al,0x91
  4081f6:	add    BYTE PTR [rax],al
  4081f8:	loopne 0x408228
  4081fa:	add    BYTE PTR [rax],al
  4081fc:	outs   dx,BYTE PTR ds:[rsi]
  4081fd:	(bad)  
  4081fe:	add    BYTE PTR [rax],al
  408200:	in     al,dx
  408201:	xchg   ecx,eax
  408202:	add    BYTE PTR [rax],al
  408204:	jo     0x408235
  408206:	add    BYTE PTR [rax],al
  408208:	test   al,0x2f
  40820a:	add    BYTE PTR [rax],al
  40820c:	clc    
  40820d:	xchg   ecx,eax
  40820e:	add    BYTE PTR [rax],al
  408210:	mov    al,0x2f
  408212:	add    BYTE PTR [rax],al
  408214:	add    eax,0x4000030
  408219:	xchg   edx,eax
  40821a:	add    BYTE PTR [rax],al
  40821c:	adc    BYTE PTR [rax],dh
  40821e:	add    BYTE PTR [rax],al
  408220:	mov    esi,0x10000030
  408225:	xchg   edx,eax
  408226:	add    BYTE PTR [rax],al
  408228:	add    BYTE PTR [rcx],dh
  40822a:	add    BYTE PTR [rax],al
  40822c:	stos   BYTE PTR es:[rdi],al
  40822d:	xor    DWORD PTR [rax],eax
  40822f:	add    BYTE PTR [rax],ah
  408231:	xchg   edx,eax
  408232:	add    BYTE PTR [rax],al
  408234:	mov    al,0x31
  408236:	add    BYTE PTR [rax],al
  408238:	xor    BYTE PTR [rdx],dh
  40823a:	add    BYTE PTR [rax],al
  40823c:	xor    BYTE PTR [rdx+0x32300000],dl
  408242:	add    BYTE PTR [rax],al
  408244:	out    0x35,al
  408246:	add    BYTE PTR [rax],al
  408248:	cmp    al,0x92
  40824a:	add    BYTE PTR [rax],al
  40824c:	lock xor eax,0x3cd50000
  408252:	add    BYTE PTR [rax],al
  408254:	push   rsp
  408255:	xchg   edx,eax
  408256:	add    BYTE PTR [rax],al
  408258:	loopne 0x408296
  40825a:	add    BYTE PTR [rax],al
  40825c:	add    bh,BYTE PTR [rip+0xffffffff926c0000]        # 0xffffffff92ac8262
  408262:	add    BYTE PTR [rax],al
  408264:	adc    BYTE PTR [rip+0x3d300000],bh        # 0x3d70826a
  40826a:	add    BYTE PTR [rax],al
  40826c:	je     0x408200
  40826e:	add    BYTE PTR [rax],al
  408270:	xor    BYTE PTR [rip+0x3d500000],bh        # 0x3d908276
  408276:	add    BYTE PTR [rax],al
  408278:	jl     0x40820c
  40827a:	add    BYTE PTR [rax],al
  40827c:	(bad)  
  40827d:	add    BYTE PTR ds:[rax],al
  408280:	push   0xffffffff8400003e
  408285:	xchg   edx,eax
  408286:	add    BYTE PTR [rax],al
  408288:	jo     0x4082c8
  40828a:	add    BYTE PTR [rax],al
  40828c:	jnp    0x4082cc
  40828e:	add    BYTE PTR [rax],al
  408290:	mov    BYTE PTR [rdx+0x3f400000],dl
  408296:	add    BYTE PTR [rax],al
  408298:	cdq    
  408299:	rex.X add BYTE PTR [rax],al
  40829c:	.byte 0x8c
  40829d:	nop
	...

Disassembly of section .xdata:

0000000000409000 <.xdata>:
  409000:	add    DWORD PTR [rax],eax
  409002:	add    BYTE PTR [rax],al
  409004:	add    DWORD PTR [rcx+rax*1],eax
  409007:	add    BYTE PTR [rdx+rax*2],al
  40900a:	add    BYTE PTR [rax],al
  40900c:	add    DWORD PTR [rcx+rax*1],eax
  40900f:	add    BYTE PTR [rdx+riz*2],al
  409012:	add    BYTE PTR [rax],al
  409014:	add    DWORD PTR [rdi],ecx
  409016:	or     BYTE PTR [rax],al
  409018:	lgdt   [rbx]
  40901b:	add    BYTE PTR [rax],cl
  40901d:	xor    BYTE PTR [rdi],al
  40901f:	(bad)  
  409020:	(bad)  
  409021:	jo     0x409028
  409023:	push   rax
  409024:	add    al,0xc0
  409026:	add    dl,al
  409028:	or     DWORD PTR [rcx+rax*1],eax
  40902b:	add    BYTE PTR [rdx+rax*2],al
  40902e:	add    BYTE PTR [rax],al
  409030:	pop    rax
  409031:	add    BYTE PTR ds:[rax],al
  409034:	add    DWORD PTR [rax],eax
  409036:	add    BYTE PTR [rax],al
  409038:	(bad)  
  409039:	adc    al,0x0
  40903b:	add    ah,ch
  40903d:	adc    al,0x0
  40903f:	add    al,dh
  409041:	sub    BYTE PTR [rax],al
  409043:	add    ah,ch
  409045:	adc    al,0x0
  409047:	add    BYTE PTR [rcx],cl
  409049:	add    al,0x1
  40904b:	add    BYTE PTR [rdx+rax*2],al
  40904e:	add    BYTE PTR [rax],al
  409050:	pop    rax
  409051:	add    BYTE PTR ds:[rax],al
  409054:	add    DWORD PTR [rax],eax
  409056:	add    BYTE PTR [rax],al
  409058:	add    al,0x15
  40905a:	add    BYTE PTR [rax],al
  40905c:	sbb    al,0x15
  40905e:	add    BYTE PTR [rax],al
  409060:	lock sub BYTE PTR [rax],al
  409063:	add    BYTE PTR [rdx*1+0x7010000],bl
  40906a:	add    al,0x0
  40906c:	(bad)  
  40906d:	xor    al,BYTE PTR [rbx]
  40906f:	xor    BYTE PTR [rdx],al
  409071:	(bad)  
  409072:	add    DWORD PTR [rax+0x1],esi
  409075:	adc    ecx,DWORD PTR [rdx]
  409077:	add    BYTE PTR [rbx],dl
  409079:	add    DWORD PTR [rip+0xb300c00],edx        # 0xb709c7f
  40907f:	(bad)  
  409080:	or     dh,BYTE PTR [rax+0x9]
  409083:	push   rax
  409084:	or     al,al
  409086:	(bad)  
  409087:	rol    BYTE PTR [rax+riz*8],1
  40908a:	add    dh,al
  40908c:	add    DWORD PTR [rax],edx
  40908e:	or     DWORD PTR [rax],eax
  409090:	adc    dl,al
  409092:	or     al,0x30
  409094:	or     esp,DWORD PTR [rax+0xa]
  409097:	jo     0x4090a2
  409099:	push   rax
  40909a:	or     al,al
  40909c:	(bad)  
  40909d:	rol    BYTE PTR [rax+riz*8],1
  4090a0:	add    dh,al
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	add    DWORD PTR [rip+0x52050002],eax        # 0x524590ac
  4090aa:	add    DWORD PTR [rax],esi
  4090ac:	add    DWORD PTR [rcx+rax*1],eax
  4090af:	add    BYTE PTR [rdx+rax*2],al
  4090b2:	add    BYTE PTR [rax],al
  4090b4:	add    DWORD PTR [rcx+rax*1],eax
  4090b7:	add    BYTE PTR [rdx+rax*2],al
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	add    DWORD PTR [rsi],eax
  4090be:	add    eax,DWORD PTR [rax]
  4090c0:	(bad)  
  4090c1:	rex.X add sil,BYTE PTR [rax]
  4090c4:	add    DWORD PTR [rax+0x0],esp
  4090c7:	add    BYTE PTR [rcx],al
  4090c9:	add    BYTE PTR [rax],al
  4090cb:	add    BYTE PTR [rcx],al
  4090cd:	add    BYTE PTR [rax],al
  4090cf:	add    BYTE PTR [rcx],al
  4090d1:	add    BYTE PTR [rax],al
  4090d3:	add    BYTE PTR [rcx],al
  4090d5:	or     al,BYTE PTR [rsi]
  4090d7:	add    BYTE PTR [rdx],cl
  4090d9:	jb     0x4090e1
  4090db:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b09541
  4090e1:	push   rax
  4090e2:	add    al,al
  4090e4:	add    DWORD PTR [rdx],ecx
  4090e6:	add    eax,0x6d20a05
  4090eb:	add    eax,DWORD PTR [rbx]
  4090ed:	xor    BYTE PTR [rdx],al
  4090ef:	(bad)  
  4090f0:	add    DWORD PTR [rax+0x0],edx
  4090f3:	add    BYTE PTR [rcx],al
  4090f5:	add    al,0x1
  4090f7:	add    BYTE PTR [rdx+rax*2],al
  4090fa:	add    BYTE PTR [rax],al
  4090fc:	add    DWORD PTR [rsi],eax
  4090fe:	add    eax,DWORD PTR [rax]
  409100:	(bad)  
  409101:	rex.X add sil,BYTE PTR [rax]
  409104:	add    DWORD PTR [rax+0x0],esp
  409107:	add    BYTE PTR [rcx],al
  409109:	add    BYTE PTR [rax],al
  40910b:	add    BYTE PTR [rcx],al
  40910d:	add    al,0x1
  40910f:	add    BYTE PTR [rdx+riz*4],al
  409112:	add    BYTE PTR [rax],al
  409114:	add    DWORD PTR [rax],eax
  409116:	add    BYTE PTR [rax],al
  409118:	add    DWORD PTR [rsi],edx
  40911a:	or     DWORD PTR [rax],eax
  40911c:	(bad)  
  40911d:	mov    BYTE PTR [rsi],al
  40911f:	add    BYTE PTR [rax],dl
  409121:	js     0x409128
  409123:	add    BYTE PTR [rbx],cl
  409125:	push   0xffffffffe2060004
  40912a:	add    dh,BYTE PTR [rax]
  40912c:	add    DWORD PTR [rax+0x0],esp
  40912f:	add    BYTE PTR [rcx],al
  409131:	add    BYTE PTR [rax],al
  409133:	add    BYTE PTR [rcx],al
  409135:	add    BYTE PTR [rax],al
  409137:	add    BYTE PTR [rcx],al
  409139:	add    BYTE PTR [rax],al
  40913b:	add    BYTE PTR [rcx],al
  40913d:	(bad)  
  40913e:	add    eax,DWORD PTR [rax]
  409140:	(bad)  
  409141:	(bad)  
  409143:	xor    BYTE PTR [rcx],al
  409145:	(bad)  
  409146:	add    BYTE PTR [rax],al
  409148:	add    DWORD PTR [rdi+rax*1],ecx
  40914b:	add    BYTE PTR [rdx+riz*4],cl
  40914e:	or     BYTE PTR [rax],dh
  409150:	(bad)  
  409151:	(bad)  
  409152:	(bad)  
  409153:	jo     0x40915a
  409155:	push   rax
  409156:	add    al,0xc0
  409158:	add    dl,al
  40915a:	add    BYTE PTR [rax],al
  40915c:	add    DWORD PTR [rcx],edx
  40915e:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e4375
  409164:	or     dh,BYTE PTR [rax]
  409166:	or     DWORD PTR [rax+0x8],esp
  409169:	jo     0x409172
  40916b:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x2209542
  409172:	add    BYTE PTR [rax],al
  409174:	add    DWORD PTR [rcx+rax*1],eax
  409177:	add    BYTE PTR [rdx+rax*2],al
  40917a:	add    BYTE PTR [rax],al
  40917c:	add    DWORD PTR [rdx],ecx
  40917e:	(bad)  
  40917f:	add    BYTE PTR [rdx],cl
  409181:	xor    al,BYTE PTR [rsi]
  409183:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b095e9
  409189:	push   rax
  40918a:	add    al,al
  40918c:	add    DWORD PTR [rip+0x32050002],eax        # 0x32459194
  409192:	add    DWORD PTR [rax],esi
  409194:	add    DWORD PTR [rax],ecx
  409196:	add    eax,0x4420800
  40919b:	xor    BYTE PTR [rbx],al
  40919d:	(bad)  
  40919e:	add    dh,BYTE PTR [rax+0x1]
  4091a1:	push   rax
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	add    DWORD PTR [rdi],eax
  4091a6:	add    al,0x0
  4091a8:	(bad)  
  4091a9:	xor    al,BYTE PTR [rbx]
  4091ab:	xor    BYTE PTR [rdx],al
  4091ad:	(bad)  
  4091ae:	add    DWORD PTR [rax+0x1],esi
  4091b1:	add    eax,0x32050002
  4091b6:	add    DWORD PTR [rax],esi
  4091b8:	add    DWORD PTR [rip+0x32050002],eax        # 0x324591c0
  4091be:	add    DWORD PTR [rax],esi
  4091c0:	add    DWORD PTR [rax],eax
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	add    DWORD PTR [rax],eax
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	add    DWORD PTR [rax],eax
  4091ca:	add    BYTE PTR [rax],al
  4091cc:	add    DWORD PTR [rdi],eax
  4091ce:	add    al,0x0
  4091d0:	(bad)  
  4091d1:	xor    al,BYTE PTR [rbx]
  4091d3:	xor    BYTE PTR [rdx],al
  4091d5:	(bad)  
  4091d6:	add    DWORD PTR [rax+0x1],esi
  4091d9:	(bad)  
  4091da:	add    eax,DWORD PTR [rax]
  4091dc:	(bad)  
  4091dd:	rex.X add sil,BYTE PTR [rax]
  4091e0:	add    DWORD PTR [rax+0x0],esp
  4091e3:	add    BYTE PTR [rcx],al
  4091e5:	add    eax,0x32050002
  4091ea:	add    DWORD PTR [rax],esi
  4091ec:	add    DWORD PTR [rdi],eax
  4091ee:	add    al,0x0
  4091f0:	(bad)  
  4091f1:	xor    al,BYTE PTR [rbx]
  4091f3:	xor    BYTE PTR [rdx],al
  4091f5:	(bad)  
  4091f6:	add    DWORD PTR [rax+0x1],esi
  4091f9:	(bad)  
  4091fa:	add    eax,DWORD PTR [rax]
  4091fc:	(bad)  
  4091fd:	rex.X add sil,BYTE PTR [rax]
  409200:	add    DWORD PTR [rax+0x0],esp
  409203:	add    BYTE PTR [rcx],al
  409205:	(bad)  
  409206:	add    eax,DWORD PTR [rax]
  409208:	(bad)  
  409209:	rex.X add sil,BYTE PTR [rax]
  40920c:	add    DWORD PTR [rax+0x0],esp
  40920f:	add    BYTE PTR [rcx],al
  409211:	or     BYTE PTR [rip+0x4420800],al        # 0x4829a17
  409217:	xor    BYTE PTR [rbx],al
  409219:	(bad)  
  40921a:	add    dh,BYTE PTR [rax+0x1]
  40921d:	push   rax
  40921e:	add    BYTE PTR [rax],al
  409220:	add    DWORD PTR [rax],ecx
  409222:	(bad)  
  409223:	add    BYTE PTR [rax],cl
  409225:	xor    BYTE PTR [rdi],al
  409227:	(bad)  
  409228:	(bad)  
  409229:	jo     0x409230
  40922b:	push   rax
  40922c:	add    al,0xc0
  40922e:	add    dl,al
  409230:	add    DWORD PTR [rdi],eax
  409232:	add    al,0x0
  409234:	(bad)  
  409235:	push   rdx
  409236:	add    esi,DWORD PTR [rax]
  409238:	add    ah,BYTE PTR [rax+0x1]
  40923b:	jo     0x40923e
  40923d:	adc    BYTE PTR [rcx],cl
  40923f:	add    BYTE PTR [rax],dl
  409241:	(bad)  
  409242:	or     al,0x30
  409244:	or     esp,DWORD PTR [rax+0xa]
  409247:	jo     0x409252
  409249:	push   rax
  40924a:	or     al,al
  40924c:	(bad)  
  40924d:	rol    BYTE PTR [rax+riz*8],1
  409250:	add    dh,al
  409252:	add    BYTE PTR [rax],al
  409254:	add    DWORD PTR [rax],edx
  409256:	or     DWORD PTR [rax],eax
  409258:	adc    BYTE PTR [rdx+0xc],ah
  40925b:	xor    BYTE PTR [rbx],cl
  40925d:	(bad)  
  40925e:	or     dh,BYTE PTR [rax+0x9]
  409261:	push   rax
  409262:	or     al,al
  409264:	(bad)  
  409265:	rol    BYTE PTR [rax+riz*8],1
  409268:	add    dh,al
  40926a:	add    BYTE PTR [rax],al
  40926c:	add    DWORD PTR [rcx+rax*1],eax
  40926f:	add    BYTE PTR [rdx+riz*2],al
  409272:	add    BYTE PTR [rax],al
  409274:	add    DWORD PTR [rcx+rax*1],eax
  409277:	add    BYTE PTR [rdx+riz*2],al
  40927a:	add    BYTE PTR [rax],al
  40927c:	add    DWORD PTR [rcx+rax*1],eax
  40927f:	add    BYTE PTR [rdx+riz*2],al
  409282:	add    BYTE PTR [rax],al
  409284:	add    DWORD PTR [rax],eax
  409286:	add    BYTE PTR [rax],al
  409288:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000040a000 <.bss>:
	...

Disassembly of section .idata:

000000000040b000 <.idata>:
  40b000:	push   rax
  40b001:	mov    al,0x0
	...
  40b00b:	add    BYTE PTR [rsp+rdi*4-0x4cc00000],dl
  40b012:	add    BYTE PTR [rax],al
  40b014:	rex.W mov cl,0x0
	...
  40b01f:	add    BYTE PTR [rdi*4-0x4bc80000],al
  40b026:	add    BYTE PTR [rax],al
  40b028:	or     BYTE PTR [rdx+0x0],dh
  40b02e:	add    BYTE PTR [rax],al
  40b030:	add    BYTE PTR [rax],al
  40b032:	add    BYTE PTR [rax],al
  40b034:	lods   al,BYTE PTR ds:[rsi]
  40b035:	mov    ebp,0xb4f80000
	...
  40b04e:	add    BYTE PTR [rax],al
  40b050:	xor    BYTE PTR [rsi+0x0],dh
  40b056:	add    BYTE PTR [rax],al
  40b058:	rex.W mov sil,0x0
  40b05b:	add    BYTE PTR [rax],al
  40b05d:	add    BYTE PTR [rax],al
  40b05f:	add    BYTE PTR [rsi+rsi*4+0x0],bl
  40b063:	add    BYTE PTR [rax],al
  40b065:	add    BYTE PTR [rax],al
  40b067:	add    BYTE PTR [rax-0x4a],dh
  40b06a:	add    BYTE PTR [rax],al
  40b06c:	add    BYTE PTR [rax],al
  40b06e:	add    BYTE PTR [rax],al
  40b070:	xor    BYTE PTR [rsi+0x0],0x0
  40b077:	add    BYTE PTR [rsi+rsi*4+0x0],dl
  40b07e:	add    BYTE PTR [rax],al
  40b080:	lods   al,BYTE PTR ds:[rsi]
  40b081:	mov    dh,0x0
  40b083:	add    BYTE PTR [rax],al
  40b085:	add    BYTE PTR [rax],al
  40b087:	add    ah,al
  40b089:	mov    dh,0x0
  40b08b:	add    BYTE PTR [rax],al
  40b08d:	add    BYTE PTR [rax],al
  40b08f:	add    ah,bl
  40b091:	mov    dh,0x0
  40b093:	add    BYTE PTR [rax],al
  40b095:	add    BYTE PTR [rax],al
  40b097:	add    ah,dh
  40b099:	mov    dh,0x0
  40b09b:	add    BYTE PTR [rax],al
  40b09d:	add    BYTE PTR [rax],al
  40b09f:	add    BYTE PTR [rdi+rsi*4],cl
  40b0a2:	add    BYTE PTR [rax],al
  40b0a4:	add    BYTE PTR [rax],al
  40b0a6:	add    BYTE PTR [rax],al
  40b0a8:	and    al,0xb7
  40b0aa:	add    BYTE PTR [rax],al
  40b0ac:	add    BYTE PTR [rax],al
  40b0ae:	add    BYTE PTR [rax],al
  40b0b0:	cmp    al,0xb7
  40b0b2:	add    BYTE PTR [rax],al
  40b0b4:	add    BYTE PTR [rax],al
  40b0b6:	add    BYTE PTR [rax],al
  40b0b8:	push   rax
  40b0b9:	mov    bh,0x0
  40b0bb:	add    BYTE PTR [rax],al
  40b0bd:	add    BYTE PTR [rax],al
  40b0bf:	add    BYTE PTR [rdi+rsi*4+0x0],ah
  40b0c3:	add    BYTE PTR [rax],al
  40b0c5:	add    BYTE PTR [rax],al
  40b0c7:	add    BYTE PTR [rax-0x49],bh
  40b0ca:	add    BYTE PTR [rax],al
  40b0cc:	add    BYTE PTR [rax],al
  40b0ce:	add    BYTE PTR [rax],al
  40b0d0:	mov    WORD PTR [rdi+0x0],?
  40b0d6:	add    BYTE PTR [rax],al
  40b0d8:	movabs al,ds:0xb4000000000000b7
  40b0e1:	mov    bh,0x0
  40b0e3:	add    BYTE PTR [rax],al
  40b0e5:	add    BYTE PTR [rax],al
  40b0e7:	add    al,al
  40b0e9:	mov    bh,0x0
  40b0eb:	add    BYTE PTR [rax],al
  40b0ed:	add    BYTE PTR [rax],al
  40b0ef:	add    ah,dl
  40b0f1:	mov    bh,0x0
  40b0f3:	add    BYTE PTR [rax],al
  40b0f5:	add    BYTE PTR [rax],al
  40b0f7:	add    al,ah
  40b0f9:	mov    bh,0x0
  40b0fb:	add    BYTE PTR [rax],al
  40b0fd:	add    BYTE PTR [rax],al
  40b0ff:	add    ah,ch
  40b101:	mov    bh,0x0
  40b103:	add    BYTE PTR [rax],al
  40b105:	add    BYTE PTR [rax],al
  40b107:	add    BYTE PTR [rax],al
  40b109:	mov    eax,0x0
  40b10e:	add    BYTE PTR [rax],al
  40b110:	adc    BYTE PTR [rax+0x0],bh
  40b116:	add    BYTE PTR [rax],al
  40b118:	and    BYTE PTR [rax+0x0],bh
  40b11e:	add    BYTE PTR [rax],al
  40b120:	xor    BYTE PTR [rax+0x0],bh
  40b126:	add    BYTE PTR [rax],al
  40b128:	movabs rax,0xb85c000000000000
  40b132:	add    BYTE PTR [rax],al
  40b134:	add    BYTE PTR [rax],al
  40b136:	add    BYTE PTR [rax],al
  40b138:	jo     0x40b0f2
	...
  40b146:	add    BYTE PTR [rax],al
  40b148:	test   BYTE PTR [rax+0x0],bh
  40b14e:	add    BYTE PTR [rax],al
  40b150:	pushf  
  40b151:	mov    eax,0x0
  40b156:	add    BYTE PTR [rax],al
  40b158:	mov    ah,0xb8
  40b15a:	add    BYTE PTR [rax],al
  40b15c:	add    BYTE PTR [rax],al
  40b15e:	add    BYTE PTR [rax],al
  40b160:	enter  0xb8,0x0
  40b164:	add    BYTE PTR [rax],al
  40b166:	add    BYTE PTR [rax],al
  40b168:	fidivr WORD PTR [rax+0x0]
  40b16e:	add    BYTE PTR [rax],al
  40b170:	hlt    
  40b171:	mov    eax,0x0
  40b176:	add    BYTE PTR [rax],al
  40b178:	add    al,0xb9
  40b17a:	add    BYTE PTR [rax],al
  40b17c:	add    BYTE PTR [rax],al
  40b17e:	add    BYTE PTR [rax],al
  40b180:	(bad)  
  40b181:	mov    ecx,0x0
  40b186:	add    BYTE PTR [rax],al
  40b188:	xor    BYTE PTR [rcx+0x0],bh
  40b18e:	add    BYTE PTR [rax],al
  40b190:	rex mov ecx,0x0
  40b196:	add    BYTE PTR [rax],al
  40b198:	pop    rsp
  40b199:	mov    ecx,0x0
  40b19e:	add    BYTE PTR [rax],al
  40b1a0:	je     0x40b15b
  40b1a2:	add    BYTE PTR [rax],al
  40b1a4:	add    BYTE PTR [rax],al
  40b1a6:	add    BYTE PTR [rax],al
  40b1a8:	mov    ?,WORD PTR [rcx+0x0]
  40b1ae:	add    BYTE PTR [rax],al
  40b1b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b1b1:	mov    ecx,0x0
  40b1b6:	add    BYTE PTR [rax],al
  40b1b8:	mov    eax,0xb9
  40b1bd:	add    BYTE PTR [rax],al
  40b1bf:	add    dl,dl
  40b1c1:	mov    ecx,0x0
  40b1c6:	add    BYTE PTR [rax],al
  40b1c8:	out    0xb9,al
  40b1ca:	add    BYTE PTR [rax],al
  40b1cc:	add    BYTE PTR [rax],al
  40b1ce:	add    BYTE PTR [rax],al
  40b1d0:	add    al,0xba
  40b1d2:	add    BYTE PTR [rax],al
  40b1d4:	add    BYTE PTR [rax],al
  40b1d6:	add    BYTE PTR [rax],al
  40b1d8:	or     al,0xba
  40b1da:	add    BYTE PTR [rax],al
  40b1dc:	add    BYTE PTR [rax],al
  40b1de:	add    BYTE PTR [rax],al
  40b1e0:	and    BYTE PTR [rdx+0x0],bh
  40b1e6:	add    BYTE PTR [rax],al
  40b1e8:	cs mov edx,0x0
  40b1ee:	add    BYTE PTR [rax],al
  40b1f0:	rex.WX movabs rdx,0xba5c000000000000
	...
  40b206:	add    BYTE PTR [rax],al
  40b208:	ins    BYTE PTR es:[rdi],dx
  40b209:	mov    edx,0x0
  40b20e:	add    BYTE PTR [rax],al
  40b210:	test   BYTE PTR [rdx+0x0],bh
  40b216:	add    BYTE PTR [rax],al
  40b218:	mov    ?,WORD PTR [rdx+0x0]
  40b21e:	add    BYTE PTR [rax],al
  40b220:	pushf  
  40b221:	mov    edx,0x0
  40b226:	add    BYTE PTR [rax],al
  40b228:	lods   al,BYTE PTR ds:[rsi]
  40b229:	mov    edx,0x0
  40b22e:	add    BYTE PTR [rax],al
  40b230:	mov    eax,0xba
  40b235:	add    BYTE PTR [rax],al
  40b237:	add    dh,al
  40b239:	mov    edx,0x0
  40b23e:	add    BYTE PTR [rax],al
  40b240:	(bad)  
  40b241:	mov    edx,0x0
  40b246:	add    BYTE PTR [rax],al
  40b248:	call   0x40b307
  40b24d:	add    BYTE PTR [rax],al
  40b24f:	add    ah,bh
  40b251:	mov    edx,0x0
  40b256:	add    BYTE PTR [rax],al
  40b258:	(bad)  
  40b259:	mov    ebx,0x0
  40b25e:	add    BYTE PTR [rax],al
  40b260:	adc    al,0xbb
  40b262:	add    BYTE PTR [rax],al
  40b264:	add    BYTE PTR [rax],al
  40b266:	add    BYTE PTR [rax],al
  40b268:	(bad)  
  40b269:	mov    ebx,0x0
  40b26e:	add    BYTE PTR [rax],al
  40b270:	sub    BYTE PTR [rbx+0x0],bh
  40b276:	add    BYTE PTR [rax],al
  40b278:	xor    bh,BYTE PTR [rbx+0x0]
  40b27e:	add    BYTE PTR [rax],al
  40b280:	ds mov ebx,0x0
  40b286:	add    BYTE PTR [rax],al
  40b288:	rex.RX mov ebx,0x0
  40b28e:	add    BYTE PTR [rax],al
  40b290:	push   rax
  40b291:	mov    ebx,0x0
  40b296:	add    BYTE PTR [rax],al
  40b298:	pop    rdx
  40b299:	mov    ebx,0x0
  40b29e:	add    BYTE PTR [rax],al
  40b2a0:	(bad)  
  40b2a1:	mov    ebx,0x0
  40b2a6:	add    BYTE PTR [rax],al
  40b2a8:	ins    BYTE PTR es:[rdi],dx
  40b2a9:	mov    ebx,0x0
  40b2ae:	add    BYTE PTR [rax],al
  40b2b0:	je     0x40b26d
  40b2b2:	add    BYTE PTR [rax],al
  40b2b4:	add    BYTE PTR [rax],al
  40b2b6:	add    BYTE PTR [rax],al
  40b2b8:	jle    0x40b275
  40b2ba:	add    BYTE PTR [rax],al
  40b2bc:	add    BYTE PTR [rax],al
  40b2be:	add    BYTE PTR [rax],al
  40b2c0:	mov    BYTE PTR [rbx+0x0],bh
  40b2c6:	add    BYTE PTR [rax],al
  40b2c8:	nop
  40b2c9:	mov    ebx,0x0
  40b2ce:	add    BYTE PTR [rax],al
  40b2d0:	cwde   
  40b2d1:	mov    ebx,0x0
  40b2d6:	add    BYTE PTR [rax],al
  40b2d8:	movabs ds:0xac000000000000bb,al
  40b2e1:	mov    ebx,0x0
  40b2e6:	add    BYTE PTR [rax],al
  40b2e8:	mov    dh,0xbb
  40b2ea:	add    BYTE PTR [rax],al
  40b2ec:	add    BYTE PTR [rax],al
  40b2ee:	add    BYTE PTR [rax],al
  40b2f0:	sar    BYTE PTR [rbx+0x0],0x0
  40b2f7:	add    dl,cl
  40b2f9:	mov    ebx,0x0
  40b2fe:	add    BYTE PTR [rax],al
  40b300:	(bad)  
  40b301:	mov    ebx,0x0
  40b306:	add    BYTE PTR [rax],al
  40b308:	fdivr  QWORD PTR [rbx+0x0]
  40b30e:	add    BYTE PTR [rax],al
  40b310:	out    0xbb,al
  40b312:	add    BYTE PTR [rax],al
  40b314:	add    BYTE PTR [rax],al
  40b316:	add    BYTE PTR [rax],al
  40b318:	lock mov ebx,0x0
  40b31e:	add    BYTE PTR [rax],al
  40b320:	cli    
  40b321:	mov    ebx,0x0
  40b326:	add    BYTE PTR [rax],al
  40b328:	add    al,0xbc
  40b32a:	add    BYTE PTR [rax],al
  40b32c:	add    BYTE PTR [rax],al
  40b32e:	add    BYTE PTR [rax],al
  40b330:	adc    BYTE PTR [rax+rax*1+0x0],bh
	...
  40b33f:	add    BYTE PTR [rax],dh
  40b341:	mov    dh,0x0
  40b343:	add    BYTE PTR [rax],al
  40b345:	add    BYTE PTR [rax],al
  40b347:	add    BYTE PTR [rax-0x4a],cl
  40b34a:	add    BYTE PTR [rax],al
  40b34c:	add    BYTE PTR [rax],al
  40b34e:	add    BYTE PTR [rax],al
  40b350:	pop    rsp
  40b351:	mov    dh,0x0
  40b353:	add    BYTE PTR [rax],al
  40b355:	add    BYTE PTR [rax],al
  40b357:	add    BYTE PTR [rax-0x4a],dh
  40b35a:	add    BYTE PTR [rax],al
  40b35c:	add    BYTE PTR [rax],al
  40b35e:	add    BYTE PTR [rax],al
  40b360:	xor    BYTE PTR [rsi+0x0],0x0
  40b367:	add    BYTE PTR [rsi+rsi*4+0x0],dl
  40b36e:	add    BYTE PTR [rax],al
  40b370:	lods   al,BYTE PTR ds:[rsi]
  40b371:	mov    dh,0x0
  40b373:	add    BYTE PTR [rax],al
  40b375:	add    BYTE PTR [rax],al
  40b377:	add    ah,al
  40b379:	mov    dh,0x0
  40b37b:	add    BYTE PTR [rax],al
  40b37d:	add    BYTE PTR [rax],al
  40b37f:	add    ah,bl
  40b381:	mov    dh,0x0
  40b383:	add    BYTE PTR [rax],al
  40b385:	add    BYTE PTR [rax],al
  40b387:	add    ah,dh
  40b389:	mov    dh,0x0
  40b38b:	add    BYTE PTR [rax],al
  40b38d:	add    BYTE PTR [rax],al
  40b38f:	add    BYTE PTR [rdi+rsi*4],cl
  40b392:	add    BYTE PTR [rax],al
  40b394:	add    BYTE PTR [rax],al
  40b396:	add    BYTE PTR [rax],al
  40b398:	and    al,0xb7
  40b39a:	add    BYTE PTR [rax],al
  40b39c:	add    BYTE PTR [rax],al
  40b39e:	add    BYTE PTR [rax],al
  40b3a0:	cmp    al,0xb7
  40b3a2:	add    BYTE PTR [rax],al
  40b3a4:	add    BYTE PTR [rax],al
  40b3a6:	add    BYTE PTR [rax],al
  40b3a8:	push   rax
  40b3a9:	mov    bh,0x0
  40b3ab:	add    BYTE PTR [rax],al
  40b3ad:	add    BYTE PTR [rax],al
  40b3af:	add    BYTE PTR [rdi+rsi*4+0x0],ah
  40b3b3:	add    BYTE PTR [rax],al
  40b3b5:	add    BYTE PTR [rax],al
  40b3b7:	add    BYTE PTR [rax-0x49],bh
  40b3ba:	add    BYTE PTR [rax],al
  40b3bc:	add    BYTE PTR [rax],al
  40b3be:	add    BYTE PTR [rax],al
  40b3c0:	mov    WORD PTR [rdi+0x0],?
  40b3c6:	add    BYTE PTR [rax],al
  40b3c8:	movabs al,ds:0xb4000000000000b7
  40b3d1:	mov    bh,0x0
  40b3d3:	add    BYTE PTR [rax],al
  40b3d5:	add    BYTE PTR [rax],al
  40b3d7:	add    al,al
  40b3d9:	mov    bh,0x0
  40b3db:	add    BYTE PTR [rax],al
  40b3dd:	add    BYTE PTR [rax],al
  40b3df:	add    ah,dl
  40b3e1:	mov    bh,0x0
  40b3e3:	add    BYTE PTR [rax],al
  40b3e5:	add    BYTE PTR [rax],al
  40b3e7:	add    al,ah
  40b3e9:	mov    bh,0x0
  40b3eb:	add    BYTE PTR [rax],al
  40b3ed:	add    BYTE PTR [rax],al
  40b3ef:	add    ah,ch
  40b3f1:	mov    bh,0x0
  40b3f3:	add    BYTE PTR [rax],al
  40b3f5:	add    BYTE PTR [rax],al
  40b3f7:	add    BYTE PTR [rax],al
  40b3f9:	mov    eax,0x0
  40b3fe:	add    BYTE PTR [rax],al
  40b400:	adc    BYTE PTR [rax+0x0],bh
  40b406:	add    BYTE PTR [rax],al
  40b408:	and    BYTE PTR [rax+0x0],bh
  40b40e:	add    BYTE PTR [rax],al
  40b410:	xor    BYTE PTR [rax+0x0],bh
  40b416:	add    BYTE PTR [rax],al
  40b418:	movabs rax,0xb85c000000000000
  40b422:	add    BYTE PTR [rax],al
  40b424:	add    BYTE PTR [rax],al
  40b426:	add    BYTE PTR [rax],al
  40b428:	jo     0x40b3e2
	...
  40b436:	add    BYTE PTR [rax],al
  40b438:	test   BYTE PTR [rax+0x0],bh
  40b43e:	add    BYTE PTR [rax],al
  40b440:	pushf  
  40b441:	mov    eax,0x0
  40b446:	add    BYTE PTR [rax],al
  40b448:	mov    ah,0xb8
  40b44a:	add    BYTE PTR [rax],al
  40b44c:	add    BYTE PTR [rax],al
  40b44e:	add    BYTE PTR [rax],al
  40b450:	enter  0xb8,0x0
  40b454:	add    BYTE PTR [rax],al
  40b456:	add    BYTE PTR [rax],al
  40b458:	fidivr WORD PTR [rax+0x0]
  40b45e:	add    BYTE PTR [rax],al
  40b460:	hlt    
  40b461:	mov    eax,0x0
  40b466:	add    BYTE PTR [rax],al
  40b468:	add    al,0xb9
  40b46a:	add    BYTE PTR [rax],al
  40b46c:	add    BYTE PTR [rax],al
  40b46e:	add    BYTE PTR [rax],al
  40b470:	(bad)  
  40b471:	mov    ecx,0x0
  40b476:	add    BYTE PTR [rax],al
  40b478:	xor    BYTE PTR [rcx+0x0],bh
  40b47e:	add    BYTE PTR [rax],al
  40b480:	rex mov ecx,0x0
  40b486:	add    BYTE PTR [rax],al
  40b488:	pop    rsp
  40b489:	mov    ecx,0x0
  40b48e:	add    BYTE PTR [rax],al
  40b490:	je     0x40b44b
  40b492:	add    BYTE PTR [rax],al
  40b494:	add    BYTE PTR [rax],al
  40b496:	add    BYTE PTR [rax],al
  40b498:	mov    ?,WORD PTR [rcx+0x0]
  40b49e:	add    BYTE PTR [rax],al
  40b4a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b4a1:	mov    ecx,0x0
  40b4a6:	add    BYTE PTR [rax],al
  40b4a8:	mov    eax,0xb9
  40b4ad:	add    BYTE PTR [rax],al
  40b4af:	add    dl,dl
  40b4b1:	mov    ecx,0x0
  40b4b6:	add    BYTE PTR [rax],al
  40b4b8:	out    0xb9,al
  40b4ba:	add    BYTE PTR [rax],al
  40b4bc:	add    BYTE PTR [rax],al
  40b4be:	add    BYTE PTR [rax],al
  40b4c0:	add    al,0xba
  40b4c2:	add    BYTE PTR [rax],al
  40b4c4:	add    BYTE PTR [rax],al
  40b4c6:	add    BYTE PTR [rax],al
  40b4c8:	or     al,0xba
  40b4ca:	add    BYTE PTR [rax],al
  40b4cc:	add    BYTE PTR [rax],al
  40b4ce:	add    BYTE PTR [rax],al
  40b4d0:	and    BYTE PTR [rdx+0x0],bh
  40b4d6:	add    BYTE PTR [rax],al
  40b4d8:	cs mov edx,0x0
  40b4de:	add    BYTE PTR [rax],al
  40b4e0:	rex.WX movabs rdx,0xba5c000000000000
	...
  40b4f6:	add    BYTE PTR [rax],al
  40b4f8:	ins    BYTE PTR es:[rdi],dx
  40b4f9:	mov    edx,0x0
  40b4fe:	add    BYTE PTR [rax],al
  40b500:	test   BYTE PTR [rdx+0x0],bh
  40b506:	add    BYTE PTR [rax],al
  40b508:	mov    ?,WORD PTR [rdx+0x0]
  40b50e:	add    BYTE PTR [rax],al
  40b510:	pushf  
  40b511:	mov    edx,0x0
  40b516:	add    BYTE PTR [rax],al
  40b518:	lods   al,BYTE PTR ds:[rsi]
  40b519:	mov    edx,0x0
  40b51e:	add    BYTE PTR [rax],al
  40b520:	mov    eax,0xba
  40b525:	add    BYTE PTR [rax],al
  40b527:	add    dh,al
  40b529:	mov    edx,0x0
  40b52e:	add    BYTE PTR [rax],al
  40b530:	(bad)  
  40b531:	mov    edx,0x0
  40b536:	add    BYTE PTR [rax],al
  40b538:	call   0x40b5f7
  40b53d:	add    BYTE PTR [rax],al
  40b53f:	add    ah,bh
  40b541:	mov    edx,0x0
  40b546:	add    BYTE PTR [rax],al
  40b548:	(bad)  
  40b549:	mov    ebx,0x0
  40b54e:	add    BYTE PTR [rax],al
  40b550:	adc    al,0xbb
  40b552:	add    BYTE PTR [rax],al
  40b554:	add    BYTE PTR [rax],al
  40b556:	add    BYTE PTR [rax],al
  40b558:	(bad)  
  40b559:	mov    ebx,0x0
  40b55e:	add    BYTE PTR [rax],al
  40b560:	sub    BYTE PTR [rbx+0x0],bh
  40b566:	add    BYTE PTR [rax],al
  40b568:	xor    bh,BYTE PTR [rbx+0x0]
  40b56e:	add    BYTE PTR [rax],al
  40b570:	ds mov ebx,0x0
  40b576:	add    BYTE PTR [rax],al
  40b578:	rex.RX mov ebx,0x0
  40b57e:	add    BYTE PTR [rax],al
  40b580:	push   rax
  40b581:	mov    ebx,0x0
  40b586:	add    BYTE PTR [rax],al
  40b588:	pop    rdx
  40b589:	mov    ebx,0x0
  40b58e:	add    BYTE PTR [rax],al
  40b590:	(bad)  
  40b591:	mov    ebx,0x0
  40b596:	add    BYTE PTR [rax],al
  40b598:	ins    BYTE PTR es:[rdi],dx
  40b599:	mov    ebx,0x0
  40b59e:	add    BYTE PTR [rax],al
  40b5a0:	je     0x40b55d
  40b5a2:	add    BYTE PTR [rax],al
  40b5a4:	add    BYTE PTR [rax],al
  40b5a6:	add    BYTE PTR [rax],al
  40b5a8:	jle    0x40b565
  40b5aa:	add    BYTE PTR [rax],al
  40b5ac:	add    BYTE PTR [rax],al
  40b5ae:	add    BYTE PTR [rax],al
  40b5b0:	mov    BYTE PTR [rbx+0x0],bh
  40b5b6:	add    BYTE PTR [rax],al
  40b5b8:	nop
  40b5b9:	mov    ebx,0x0
  40b5be:	add    BYTE PTR [rax],al
  40b5c0:	cwde   
  40b5c1:	mov    ebx,0x0
  40b5c6:	add    BYTE PTR [rax],al
  40b5c8:	movabs ds:0xac000000000000bb,al
  40b5d1:	mov    ebx,0x0
  40b5d6:	add    BYTE PTR [rax],al
  40b5d8:	mov    dh,0xbb
  40b5da:	add    BYTE PTR [rax],al
  40b5dc:	add    BYTE PTR [rax],al
  40b5de:	add    BYTE PTR [rax],al
  40b5e0:	sar    BYTE PTR [rbx+0x0],0x0
  40b5e7:	add    dl,cl
  40b5e9:	mov    ebx,0x0
  40b5ee:	add    BYTE PTR [rax],al
  40b5f0:	(bad)  
  40b5f1:	mov    ebx,0x0
  40b5f6:	add    BYTE PTR [rax],al
  40b5f8:	fdivr  QWORD PTR [rbx+0x0]
  40b5fe:	add    BYTE PTR [rax],al
  40b600:	out    0xbb,al
  40b602:	add    BYTE PTR [rax],al
  40b604:	add    BYTE PTR [rax],al
  40b606:	add    BYTE PTR [rax],al
  40b608:	lock mov ebx,0x0
  40b60e:	add    BYTE PTR [rax],al
  40b610:	cli    
  40b611:	mov    ebx,0x0
  40b616:	add    BYTE PTR [rax],al
  40b618:	add    al,0xbc
  40b61a:	add    BYTE PTR [rax],al
  40b61c:	add    BYTE PTR [rax],al
  40b61e:	add    BYTE PTR [rax],al
  40b620:	adc    BYTE PTR [rax+rax*1+0x0],bh
	...
  40b62f:	add    BYTE PTR [rip+0x43634600],cl        # 0x43a3fc35
  40b635:	(bad)  
  40b636:	movsxd ebp,DWORD PTR [rax+0x65]
  40b639:	rex.XB jb 0x40b6a1
  40b63c:	(bad)  
  40b63d:	je     0x40b6a4
  40b63f:	push   rsp
  40b640:	(bad)  
  40b641:	imul   r13d,DWORD PTR [ebp+r12d*2+0x0],0x46000f00
  40b64b:	movsxd eax,DWORD PTR [rbx+0x61]
  40b64e:	movsxd ebp,DWORD PTR [rax+0x65]
  40b651:	rex.WRX jne 0x40b6c1
  40b654:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40b656:	outs   dx,BYTE PTR ds:[rsi]
  40b657:	je     0x40b659
  40b659:	add    BYTE PTR [rax],al
  40b65b:	add    BYTE PTR [rax],dl
  40b65d:	add    BYTE PTR [rsi+0x63],al
  40b660:	rex.XB (bad) 
  40b662:	movsxd ebp,DWORD PTR [rax+0x65]
  40b665:	rex.WRX jne 0x40b6d5
  40b668:	push   rbx
  40b669:	jne    0x40b6cd
  40b66b:	imul   esi,DWORD PTR fs:[rdx+0x0],0x46001100
  40b673:	movsxd eax,DWORD PTR [rbx+0x61]
  40b676:	movsxd ebp,DWORD PTR [rax+0x65]
  40b679:	push   rbx
  40b67a:	jne    0x40b6de
  40b67c:	imul   esi,DWORD PTR fs:[rdx+0x0],0x6346002a
  40b684:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40b686:	outs   dx,BYTE PTR ds:[rsi]
  40b687:	imul   sp,WORD PTR [rdi+0x44],0x7365
  40b68d:	je     0x40b701
  40b68f:	outs   dx,DWORD PTR ds:[rsi]
  40b690:	jns    0x40b692
  40b692:	add    BYTE PTR [rax],al
  40b694:	sub    eax,DWORD PTR [rax]
  40b696:	rex.RX movsxd r8d,DWORD PTR [rbx+0x6f]
  40b69a:	outs   dx,BYTE PTR ds:[rsi]
  40b69b:	imul   sp,WORD PTR [rdi+0x45],0x616e
  40b6a1:	(bad)  
  40b6a2:	ins    BYTE PTR es:[rdi],dx
  40b6a3:	rex.W outs dx,DWORD PTR gs:[rsi]
  40b6a6:	ins    DWORD PTR es:[rdi],dx
  40b6a7:	add    BYTE PTR gs:[rax],al
  40b6aa:	add    BYTE PTR [rax],al
  40b6ac:	(bad)  
  40b6ad:	add    BYTE PTR [rsi+0x63],al
  40b6b0:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40b6b2:	outs   dx,BYTE PTR ds:[rsi]
  40b6b3:	imul   sp,WORD PTR [rdi+0x47],0x7465
  40b6b9:	rex.XB (bad) 
  40b6bb:	movsxd ebp,DWORD PTR [rax+0x65]
  40b6be:	imul   r14d,DWORD PTR [rdx+0x73],0x300000
  40b6c6:	rex.RX movsxd r8d,DWORD PTR [rbx+0x6f]
  40b6ca:	outs   dx,BYTE PTR ds:[rsi]
  40b6cb:	imul   sp,WORD PTR [rdi+0x47],0x7465
  40b6d1:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40b6d3:	outs   dx,BYTE PTR ds:[rsi]
  40b6d4:	imul   sp,WORD PTR [rdi+0x44],0x7269
  40b6da:	jae    0x40b6dc
  40b6dc:	xor    al,BYTE PTR [rax]
  40b6de:	rex.RX movsxd r8d,DWORD PTR [rbx+0x6f]
  40b6e2:	outs   dx,BYTE PTR ds:[rsi]
  40b6e3:	imul   sp,WORD PTR [rdi+0x47],0x7465
  40b6e9:	rex.XB jne 0x40b75e
  40b6ec:	jb     0x40b753
  40b6ee:	outs   dx,BYTE PTR ds:[rsi]
  40b6ef:	je     0x40b6f1
  40b6f1:	add    BYTE PTR [rax],al
  40b6f3:	add    BYTE PTR [rdi],dh
  40b6f5:	add    BYTE PTR [rsi+0x63],al
  40b6f8:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40b6fa:	outs   dx,BYTE PTR ds:[rsi]
  40b6fb:	imul   sp,WORD PTR [rdi+0x47],0x7465
  40b701:	push   rbx
  40b702:	jns    0x40b777
  40b704:	push   rdx
  40b705:	outs   dx,DWORD PTR ds:[rsi]
  40b706:	outs   dx,DWORD PTR ds:[rsi]
  40b707:	je     0x40b709
  40b709:	add    BYTE PTR [rax],al
  40b70b:	add    BYTE PTR [rbx],bh
  40b70d:	add    BYTE PTR [rsi+0x63],al
  40b710:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40b712:	outs   dx,BYTE PTR ds:[rsi]
  40b713:	imul   sp,WORD PTR [rdi+0x53],0x7465
  40b719:	rex.XB jne 0x40b78e
  40b71c:	jb     0x40b783
  40b71e:	outs   dx,BYTE PTR ds:[rsi]
  40b71f:	je     0x40b721
  40b721:	add    BYTE PTR [rax],al
  40b723:	add    BYTE PTR [rsi],bh
  40b725:	add    BYTE PTR [rsi+0x63],al
  40b728:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40b72a:	outs   dx,BYTE PTR ds:[rsi]
  40b72b:	imul   sp,WORD PTR [rdi+0x53],0x7465
  40b731:	push   rbx
  40b732:	jns    0x40b7a7
  40b734:	push   rdx
  40b735:	outs   dx,DWORD PTR ds:[rsi]
  40b736:	outs   dx,DWORD PTR ds:[rsi]
  40b737:	je     0x40b739
  40b739:	add    BYTE PTR [rax],al
  40b73b:	add    BYTE PTR [rbx+0x0],al
  40b73e:	movsxd r8d,DWORD PTR [rcx+r13*2+0x72]
  40b743:	rex.XB (bad) 
  40b745:	movsxd ebp,DWORD PTR [rax+0x65]
  40b748:	rex.XB ins BYTE PTR es:[rdi],dx
  40b74a:	gs (bad) 
  40b74c:	outs   dx,BYTE PTR ds:[rsi]
  40b74d:	add    BYTE PTR [rax],al
  40b74f:	add    BYTE PTR [rax+rax*1+0x46],al
  40b753:	movsxd eax,DWORD PTR [rcx+rbp*2+0x72]
  40b757:	rex.XB (bad) 
  40b759:	movsxd ebp,DWORD PTR [rax+0x65]
  40b75c:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40b75e:	(bad)  
  40b75f:	add    BYTE PTR fs:[rax],al
  40b762:	add    BYTE PTR [rax],al
  40b764:	rex.RX add BYTE PTR [rsi+0x63],r8b
  40b768:	imul   r14d,DWORD PTR [rdx+0x43],0x65686361
  40b770:	push   rdx
  40b771:	gs (bad) 
  40b773:	add    BYTE PTR fs:[rax],al
  40b776:	add    BYTE PTR [rax],al
  40b778:	rex.W add BYTE PTR [rsi+0x63],al
  40b77c:	imul   r14d,DWORD PTR [rdx+0x43],0x65686361
  40b784:	push   rbp
  40b785:	outs   dx,BYTE PTR ds:[rsi]
  40b786:	ins    BYTE PTR es:[rdi],dx
  40b787:	imul   ebp,DWORD PTR [rsi+0x6b],0x490000
  40b78e:	movsxd r8d,DWORD PTR [rcx+r13*2+0x72]
  40b793:	rex.XB (bad) 
  40b795:	movsxd ebp,DWORD PTR [rax+0x65]
  40b798:	push   rbp
  40b799:	outs   dx,BYTE PTR ds:[rsi]
  40b79a:	ins    BYTE PTR es:[rdi],dx
  40b79b:	outs   dx,DWORD PTR ds:[rsi]
  40b79c:	(bad)  
  40b79d:	add    BYTE PTR fs:[rax],al
  40b7a0:	rex.WX add BYTE PTR [rsi+0x63],al
  40b7a4:	imul   r14d,DWORD PTR [rdx+0x43],0x65686361
  40b7ac:	push   rsi
  40b7ad:	(bad)  
  40b7ae:	ins    BYTE PTR es:[rdi],dx
  40b7af:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x46004f00
  40b7b7:	movsxd eax,DWORD PTR [rsi+0x69]
  40b7ba:	outs   dx,BYTE PTR ds:[rsi]
  40b7bb:	imul   eax,DWORD PTR [rax],0x66000000
  40b7c1:	add    BYTE PTR [rsi+0x63],al
  40b7c4:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40b7c6:	imul   esi,DWORD PTR [rsp+rcx*2+0x6f],0x6f436461
  40b7ce:	outs   dx,BYTE PTR ds:[rsi]
  40b7cf:	imul   sp,WORD PTR [rdi+0x0],0xb700
  40b7d5:	add    BYTE PTR [rsi+0x63],al
  40b7d8:	push   rbx
  40b7d9:	je     0x40b84d
  40b7db:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40b7dd:	jo     0x40b858
  40b7df:	add    BYTE PTR [rbx+0x53634600],bh
  40b7e5:	je     0x40b859
  40b7e7:	rex.RX jb 0x40b84f
  40b7ea:	add    BYTE PTR gs:[rax+rax*1+0x74536346],bh
  40b7f2:	jb     0x40b840
  40b7f4:	imul   esi,DWORD PTR [rbx+0x74],0x61657243
  40b7fb:	je     0x40b862
  40b7fd:	add    BYTE PTR [rax],al
  40b7ff:	add    BYTE PTR [rbp+0x53634600],bh
  40b805:	je     0x40b879
  40b807:	imul   r14,QWORD PTR [rbx+0x74],0x656e6f44
  40b80f:	add    BYTE PTR [rdi+0x53634600],bh
  40b815:	je     0x40b889
  40b817:	imul   r14,QWORD PTR [rbx+0x74],0x7478654e
  40b81f:	add    cl,al
  40b821:	add    BYTE PTR [rsi+0x63],al
  40b824:	push   rbx
  40b825:	je     0x40b899
  40b827:	push   rbx
  40b828:	gs je  0x40b86c
  40b82b:	fs add BYTE PTR fs:[rax],al
  40b82f:	add    dl,al
  40b831:	add    BYTE PTR [rsi+0x63],al
  40b834:	push   rbx
  40b835:	je     0x40b8a9
  40b837:	push   rbx
  40b838:	gs je  0x40b87c
  40b83b:	fs imul r13d,DWORD PTR fs:[rbp+r12*2+0x6e],0x656d61
  40b846:	add    BYTE PTR [rax],al
  40b848:	ret    
  40b849:	add    BYTE PTR [rsi+0x63],al
  40b84c:	push   rbx
  40b84d:	je     0x40b8c1
  40b84f:	push   rbx
  40b850:	gs je  0x40b896
  40b853:	jb     0x40b8ba
  40b855:	(bad)  
  40b856:	je     0x40b8bd
  40b858:	add    BYTE PTR [rax],al
  40b85a:	add    BYTE PTR [rax],al
  40b85c:	(bad)
  40b85f:	movsxd edx,DWORD PTR [rbx+0x74]
  40b862:	jb     0x40b8b7
  40b864:	gs je  0x40b8ab
  40b867:	gs jae 0x40b8de
  40b86a:	jb     0x40b8db
  40b86c:	jns    0x40b86e
  40b86e:	add    BYTE PTR [rax],al
  40b870:	mov    DWORD PTR [rax],0x74536346
  40b876:	jb     0x40b8cb
  40b878:	gs je  0x40b8c8
  40b87b:	gs ins DWORD PTR es:[rdi],dx
  40b87d:	(bad)  
  40b87e:	gs jb  0x40b881
  40b881:	add    BYTE PTR [rax],al
  40b883:	add    al,bl
  40b885:	add    BYTE PTR [rbp+riz*2+0x6c],al
  40b889:	gs je  0x40b8f1
  40b88c:	rex.XB jb 0x40b8f8
  40b88f:	je     0x40b8fa
  40b891:	movsxd esp,DWORD PTR [rcx+0x6c]
  40b894:	push   rbx
  40b895:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b89a:	outs   dx,BYTE PTR ds:[rsi]
  40b89b:	add    al,bh
  40b89d:	add    BYTE PTR [rbp+0x6e],al
  40b8a0:	je     0x40b907
  40b8a2:	jb     0x40b8e7
  40b8a4:	jb     0x40b90f
  40b8a6:	je     0x40b911
  40b8a8:	movsxd esp,DWORD PTR [rcx+0x6c]
  40b8ab:	push   rbx
  40b8ac:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b8b1:	outs   dx,BYTE PTR ds:[rsi]
  40b8b2:	add    BYTE PTR [rax],al
  40b8b4:	int    0x1
  40b8b6:	rex.RXB
  40b8b7:	gs je  0x40b8fd
  40b8ba:	jne    0x40b92e
  40b8bc:	jb     0x40b923
  40b8be:	outs   dx,BYTE PTR ds:[rsi]
  40b8bf:	je     0x40b911
  40b8c1:	jb     0x40b932
  40b8c3:	movsxd esp,DWORD PTR [rbp+0x73]
  40b8c6:	jae    0x40b8c8
  40b8c8:	(bad)  
  40b8c9:	add    DWORD PTR [rdi+0x65],eax
  40b8cc:	je     0x40b911
  40b8ce:	jne    0x40b942
  40b8d0:	jb     0x40b937
  40b8d2:	outs   dx,BYTE PTR ds:[rsi]
  40b8d3:	je     0x40b925
  40b8d5:	jb     0x40b946
  40b8d7:	movsxd esp,DWORD PTR [rbp+0x73]
  40b8da:	jae    0x40b925
  40b8dc:	fs add dl,dl
  40b8df:	add    DWORD PTR [rdi+0x65],eax
  40b8e2:	je     0x40b927
  40b8e4:	jne    0x40b958
  40b8e6:	jb     0x40b94d
  40b8e8:	outs   dx,BYTE PTR ds:[rsi]
  40b8e9:	je     0x40b93f
  40b8eb:	push   0x64616572
  40b8f0:	rex.WB
  40b8f1:	add    BYTE PTR fs:[rax],al
  40b8f4:	adc    BYTE PTR [rdx],al
  40b8f6:	rex.RXB
  40b8f7:	gs je  0x40b946
  40b8fa:	(bad)  
  40b8fb:	jae    0x40b971
  40b8fd:	rex.RB jb 0x40b972
  40b900:	outs   dx,DWORD PTR ds:[rsi]
  40b901:	jb     0x40b903
  40b903:	add    BYTE PTR [rbx+0x2],dh
  40b906:	rex.RXB
  40b907:	gs je  0x40b95d
  40b90a:	je     0x40b96d
  40b90c:	jb     0x40b982
  40b90e:	jne    0x40b980
  40b910:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40b912:	outs   dx,WORD PTR ds:[rsi]
  40b914:	add    BYTE PTR [r10+0x74654702],cl
  40b91b:	push   rbx
  40b91c:	jns    0x40b991
  40b91e:	je     0x40b985
  40b920:	ins    DWORD PTR es:[rdi],dx
  40b921:	push   rsp
  40b922:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40b929:	ins    BYTE PTR es:[rdi],dx
  40b92a:	gs push rsp
  40b92c:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40b933:	gs je  0x40b98a
  40b936:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40b93d:	je     0x40b93f
  40b93f:	add    cl,bh
  40b941:	add    cl,BYTE PTR [rcx+0x6e]
  40b944:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40b94c:	rex.XB jb 0x40b9b8
  40b94f:	je     0x40b9ba
  40b951:	movsxd esp,DWORD PTR [rcx+0x6c]
  40b954:	push   rbx
  40b955:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b95a:	outs   dx,BYTE PTR ds:[rsi]
  40b95b:	add    BYTE PTR [rbx+0x3],cl
  40b95e:	rex.WR
  40b95f:	gs (bad) 
  40b961:	jbe    0x40b9c8
  40b963:	rex.XB jb 0x40b9cf
  40b966:	je     0x40b9d1
  40b968:	movsxd esp,DWORD PTR [rcx+0x6c]
  40b96b:	push   rbx
  40b96c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40b971:	outs   dx,BYTE PTR ds:[rsi]
  40b972:	add    BYTE PTR [rax],al
  40b974:	mov    ebx,0x65755103
  40b979:	jb     0x40b9f4
  40b97b:	push   rax
  40b97c:	gs jb  0x40b9e5
  40b97f:	outs   dx,DWORD PTR ds:[rsi]
  40b980:	jb     0x40b9ef
  40b982:	(bad)  
  40b983:	outs   dx,BYTE PTR ds:[rsi]
  40b984:	movsxd esp,DWORD PTR [rbp+0x43]
  40b987:	outs   dx,DWORD PTR ds:[rsi]
  40b988:	jne    0x40b9f8
  40b98a:	je     0x40b9f1
  40b98c:	jb     0x40b98e
  40b98e:	add    DWORD PTR [rdx+rdx*2],eax
  40b991:	je     0x40b9ff
  40b993:	rex.B
  40b994:	fs fs rex.RX jne 0x40ba07
  40b999:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40b99d:	outs   dx,BYTE PTR ds:[rsi]
  40b99e:	push   rsp
  40b99f:	(bad)  
  40b9a0:	(bad)  
  40b9a1:	ins    BYTE PTR es:[rdi],dx
  40b9a2:	add    BYTE PTR gs:[rdx],al
  40b9a5:	add    al,0x52
  40b9a7:	je     0x40ba15
  40b9a9:	rex.XB (bad) 
  40b9ab:	jo     0x40ba21
  40b9ad:	jne    0x40ba21
  40b9af:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40b9b2:	outs   dx,BYTE PTR ds:[rsi]
  40b9b3:	je     0x40ba1a
  40b9b5:	js     0x40ba2b
  40b9b7:	add    BYTE PTR [rcx],cl
  40b9b9:	add    al,0x52
  40b9bb:	je     0x40ba29
  40b9bd:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40b9bf:	outs   dx,DWORD PTR ds:[rsi]
  40b9c0:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40b9c4:	jne    0x40ba34
  40b9c6:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40b9ca:	outs   dx,BYTE PTR ds:[rsi]
  40b9cb:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40b9cd:	je     0x40ba41
  40b9cf:	jns    0x40b9d1
  40b9d1:	add    BYTE PTR [rax],dl
  40b9d3:	add    al,0x52
  40b9d5:	je     0x40ba43
  40b9d7:	push   rsi
  40b9d8:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40b9df:	outs   dx,BYTE PTR ds:[rsi]
  40b9e0:	ja     0x40ba4b
  40b9e2:	outs   dx,BYTE PTR ds:[rsi]
  40b9e3:	add    BYTE PTR fs:[rax],al
  40b9e6:	lahf   
  40b9e7:	add    al,0x53
  40b9e9:	gs je  0x40ba41
  40b9ec:	outs   dx,BYTE PTR ds:[rsi]
  40b9ed:	push   0x6c646e61
  40b9f2:	gs fs rex.RB js 0x40ba5a
  40b9f7:	gs jo  0x40ba6e
  40b9fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40ba01:	gs jb  0x40ba04
  40ba04:	lods   al,BYTE PTR ds:[rsi]
  40ba05:	add    al,0x53
  40ba07:	ins    BYTE PTR es:[rdi],dx
  40ba08:	gs gs jo 0x40ba0c
  40ba0c:	mov    edx,0x72655404
  40ba11:	ins    DWORD PTR es:[rdi],dx
  40ba12:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40ba19:	outs   dx,DWORD PTR ds:[rsi]
  40ba1a:	movsxd esp,DWORD PTR [rbp+0x73]
  40ba1d:	jae    0x40ba1f
  40ba1f:	add    cl,al
  40ba21:	add    al,0x54
  40ba23:	ins    BYTE PTR es:[rdi],dx
  40ba24:	jae    0x40ba6d
  40ba26:	gs je  0x40ba7f
  40ba29:	(bad)  
  40ba2a:	ins    BYTE PTR es:[rdi],dx
  40ba2b:	jne    0x40ba92
  40ba2d:	add    dh,cl
  40ba2f:	add    al,0x55
  40ba31:	outs   dx,BYTE PTR ds:[rsi]
  40ba32:	push   0x6c646e61
  40ba37:	gs fs rex.RB js 0x40ba9f
  40ba3c:	gs jo  0x40bab3
  40ba3f:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40ba46:	gs jb  0x40ba49
  40ba49:	add    ah,ch
  40ba4b:	add    al,0x56
  40ba4d:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40ba54:	jb     0x40bac5
  40ba56:	je     0x40babd
  40ba58:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40ba5c:	out    dx,al
  40ba5d:	add    al,0x56
  40ba5f:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40ba66:	jne    0x40bacd
  40ba68:	jb     0x40bae3
  40ba6a:	add    BYTE PTR [rax],al
  40ba6c:	(bad)  
  40ba6d:	add    BYTE PTR [rdi+0x5f],bl
  40ba70:	rex.XB pop r15
  40ba72:	jae    0x40bae4
  40ba74:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40ba78:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40ba7f:	ins    BYTE PTR es:[rdi],dx
  40ba80:	gs jb  0x40ba83
  40ba83:	add    BYTE PTR [rsi+0x0],al
  40ba86:	pop    rdi
  40ba87:	pop    rdi
  40ba88:	(bad)  
  40ba89:	jb     0x40baf2
  40ba8b:	jbe    0x40ba8d
  40ba8d:	add    BYTE PTR [rsi+0x0],cl
  40ba90:	pop    rdi
  40ba91:	pop    rdi
  40ba92:	fs ins BYTE PTR es:[rdi],dx
  40ba94:	ins    BYTE PTR es:[rdi],dx
  40ba95:	outs   dx,DWORD PTR ds:[rsi]
  40ba96:	outs   dx,BYTE PTR ds:[rsi]
  40ba97:	gs js  0x40bb03
  40ba9a:	je     0x40ba9c
  40ba9c:	push   rcx
  40ba9d:	add    BYTE PTR [rdi+0x5f],bl
  40baa0:	addr32 gs je 0x40bb11
  40baa4:	(bad)  
  40baa5:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40baac:	push   rdx
  40baad:	add    BYTE PTR [rdi+0x5f],bl
  40bab0:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40bab7:	add    BYTE PTR [rbx+0x0],dl
  40baba:	pop    rdi
  40babb:	pop    rdi
  40babc:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40bac3:	movsxd eax,DWORD PTR [rax]
  40bac5:	add    BYTE PTR [rdx+0x0],bl
  40bac8:	pop    rdi
  40bac9:	pop    rdi
  40baca:	ins    BYTE PTR es:[rdi],dx
  40bacb:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40bace:	jbe    0x40bb2f
  40bad0:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40bad7:	add    BYTE PTR [rdi+0x5f],bl
  40bada:	jae    0x40bb41
  40badc:	je     0x40bb3d
  40bade:	(bad)  
  40badf:	jo     0x40bb51
  40bae1:	pop    rdi
  40bae2:	je     0x40bb5d
  40bae4:	jo     0x40bb4b
  40bae6:	add    BYTE PTR [rax],al
  40bae8:	(bad)  
  40bae9:	add    BYTE PTR [rdi+0x5f],bl
  40baec:	jae    0x40bb53
  40baee:	je     0x40bb65
  40baf0:	jae    0x40bb57
  40baf2:	jb     0x40bb61
  40baf4:	(bad)  
  40baf5:	je     0x40bb5f
  40baf7:	gs jb  0x40bb6c
  40bafa:	add    BYTE PTR [rax],al
  40bafc:	jno    0x40bafe
  40bafe:	pop    rdi
  40baff:	(bad)  
  40bb00:	movsxd ebp,DWORD PTR [rbp+0x64]
  40bb03:	ins    BYTE PTR es:[rdi],dx
  40bb04:	outs   dx,BYTE PTR ds:[rsi]
  40bb05:	add    BYTE PTR [rax+0x0],bh
  40bb08:	pop    rdi
  40bb09:	(bad)  
  40bb0a:	ins    DWORD PTR es:[rdi],dx
  40bb0b:	jae    0x40bb74
  40bb0d:	pop    rdi
  40bb0e:	gs js  0x40bb7a
  40bb11:	je     0x40bb13
  40bb13:	add    BYTE PTR [rdx+0x65635f00],cl
  40bb19:	js     0x40bb84
  40bb1b:	je     0x40bb1d
  40bb1d:	add    BYTE PTR [rdx+0x72655f00],bh
  40bb23:	jb     0x40bb93
  40bb25:	outs   dx,DWORD PTR ds:[rsi]
  40bb26:	add    BYTE PTR [rax],al
  40bb28:	fiadd  DWORD PTR [rax]
  40bb2a:	pop    rdi
  40bb2b:	ins    WORD PTR es:[rdi],dx
  40bb2d:	outs   dx,DWORD PTR ds:[rsi]
  40bb2e:	fs add BYTE PTR gs:[rax],al
  40bb32:	sbb    al,BYTE PTR [rcx]
  40bb34:	pop    rdi
  40bb35:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40bb3c:	ins    DWORD PTR es:[rdi],dx
  40bb3d:	add    BYTE PTR [rax+0x6f6c5f01],al
  40bb43:	movsxd ebp,DWORD PTR [rbx+0x0]
  40bb46:	and    eax,0x6e6f5f02
  40bb4b:	gs js  0x40bbb7
  40bb4e:	je     0x40bb50
  40bb50:	(bad)
  40bb54:	outs   dx,BYTE PTR ds:[rsi]
  40bb55:	ins    BYTE PTR es:[rdi],dx
  40bb56:	outs   dx,DWORD PTR ds:[rsi]
  40bb57:	movsxd ebp,DWORD PTR [rbx+0x0]
  40bb5a:	jg     0x40bb5f
  40bb5c:	(bad)  
  40bb5d:	(bad)  
  40bb5e:	outs   dx,DWORD PTR ds:[rsi]
  40bb5f:	jb     0x40bbd5
  40bb61:	add    BYTE PTR [rax+0x6c616303],dl
  40bb67:	ins    BYTE PTR es:[rdi],dx
  40bb68:	outs   dx,DWORD PTR ds:[rsi]
  40bb69:	movsxd eax,DWORD PTR [rax]
  40bb6b:	add    BYTE PTR [rbp+0x69786503],bl
  40bb71:	je     0x40bb73
  40bb73:	add    BYTE PTR [rbx+rax*1+0x756c6666],ah
  40bb7a:	jae    0x40bbe4
  40bb7c:	add    BYTE PTR [rax],al
  40bb7e:	mov    al,0x3
  40bb80:	data16 jo 0x40bbf5
  40bb83:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  40bb8a:	data16 jo 0x40bc02
  40bb8d:	je     0x40bbf2
  40bb8f:	add    BYTE PTR [rdi+0x65726603],dh
  40bb95:	add    BYTE PTR gs:[rax],al
  40bb98:	ret    0x6603
  40bb9b:	ja     0x40bc0f
  40bb9d:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c700
  40bba5:	gs je  0x40bc0d
  40bba8:	outs   dx,BYTE PTR ds:[rsi]
  40bba9:	jbe    0x40bbab
  40bbab:	add    al,dh
  40bbad:	add    ebp,DWORD PTR [rbp+0x61]
  40bbb0:	ins    BYTE PTR es:[rdi],dx
  40bbb1:	ins    BYTE PTR es:[rdi],dx
  40bbb2:	outs   dx,DWORD PTR ds:[rsi]
  40bbb3:	movsxd eax,DWORD PTR [rax]
  40bbb5:	add    al,bh
  40bbb7:	add    ebp,DWORD PTR [rbp+0x65]
  40bbba:	ins    DWORD PTR es:[rdi],dx
  40bbbb:	movsxd esi,DWORD PTR [rax+0x79]
  40bbbe:	add    BYTE PTR [rax],al
  40bbc0:	inc    BYTE PTR [rbx]
  40bbc2:	jo     0x40bc29
  40bbc4:	jb     0x40bc38
  40bbc6:	outs   dx,DWORD PTR ds:[rsi]
  40bbc7:	jb     0x40bbc9
  40bbc9:	add    BYTE PTR [rcx],al
  40bbcb:	add    al,0x70
  40bbcd:	jb     0x40bc38
  40bbcf:	outs   dx,BYTE PTR ds:[rsi]
  40bbd0:	je     0x40bc38
  40bbd2:	add    BYTE PTR [rax],al
  40bbd4:	add    eax,0x74757004
  40bbd9:	jae    0x40bbdb
  40bbdb:	add    BYTE PTR [rsi],dl
  40bbdd:	add    al,0x73
  40bbdf:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40bbe6:	and    eax,DWORD PTR [rbx+rsi*2]
  40bbe9:	je     0x40bc5d
  40bbeb:	movsxd ebp,DWORD PTR [rax+0x72]
  40bbee:	add    BYTE PTR [rax],al
  40bbf0:	sub    eax,DWORD PTR [rbx+rsi*2]
  40bbf3:	je     0x40bc67
  40bbf5:	ins    BYTE PTR es:[rdi],dx
  40bbf6:	outs   dx,BYTE PTR gs:[rsi]
  40bbf8:	add    BYTE PTR [rax],al
  40bbfa:	cs add al,0x73
  40bbfd:	je     0x40bc71
  40bbff:	outs   dx,BYTE PTR ds:[rsi]
  40bc00:	movsxd ebp,DWORD PTR [rbp+0x70]
  40bc03:	add    BYTE PTR [rsi+0x4],cl
  40bc06:	jbe    0x40bc6e
  40bc08:	jo     0x40bc7c
  40bc0a:	imul   ebp,DWORD PTR [rsi+0x74],0x89000066
  40bc11:	add    al,0x5f
  40bc13:	jae    0x40bc89
  40bc15:	(bad)  
  40bc16:	je     0x40bc4e
  40bc18:	xor    al,0x0
  40bc1a:	add    BYTE PTR [rax],al
  40bc1c:	add    BYTE PTR [rax-0x50000000],dh
  40bc22:	add    BYTE PTR [rax],al
  40bc24:	add    BYTE PTR [rax-0x50000000],dh
  40bc2a:	add    BYTE PTR [rax],al
  40bc2c:	add    BYTE PTR [rax-0x50000000],dh
  40bc32:	add    BYTE PTR [rax],al
  40bc34:	add    BYTE PTR [rax-0x50000000],dh
  40bc3a:	add    BYTE PTR [rax],al
  40bc3c:	add    BYTE PTR [rax-0x50000000],dh
  40bc42:	add    BYTE PTR [rax],al
  40bc44:	add    BYTE PTR [rax-0x50000000],dh
  40bc4a:	add    BYTE PTR [rax],al
  40bc4c:	add    BYTE PTR [rax-0x50000000],dh
  40bc52:	add    BYTE PTR [rax],al
  40bc54:	add    BYTE PTR [rax-0x50000000],dh
  40bc5a:	add    BYTE PTR [rax],al
  40bc5c:	add    BYTE PTR [rax-0x50000000],dh
  40bc62:	add    BYTE PTR [rax],al
  40bc64:	add    BYTE PTR [rax-0x50000000],dh
  40bc6a:	add    BYTE PTR [rax],al
  40bc6c:	add    BYTE PTR [rax-0x50000000],dh
  40bc72:	add    BYTE PTR [rax],al
  40bc74:	add    BYTE PTR [rax-0x50000000],dh
  40bc7a:	add    BYTE PTR [rax],al
  40bc7c:	add    BYTE PTR [rax-0x50000000],dh
  40bc82:	add    BYTE PTR [rax],al
  40bc84:	add    BYTE PTR [rax-0x50000000],dh
  40bc8a:	add    BYTE PTR [rax],al
  40bc8c:	add    BYTE PTR [rax-0x50000000],dh
  40bc92:	add    BYTE PTR [rax],al
  40bc94:	ins    BYTE PTR es:[rdi],dx
  40bc95:	imul   esp,DWORD PTR [rdx+0x66],0x63746e6f
  40bc9c:	outs   dx,DWORD PTR ds:[rsi]
  40bc9d:	outs   dx,BYTE PTR ds:[rsi]
  40bc9e:	imul   sp,WORD PTR [rdi+0x2d],0x2e31
  40bca4:	fs ins BYTE PTR es:[rdi],dx
  40bca6:	ins    BYTE PTR es:[rdi],dx
  40bca7:	add    BYTE PTR [rax+rsi*4],dl
  40bcaa:	add    BYTE PTR [rax],al
  40bcac:	adc    al,0xb0
  40bcae:	add    BYTE PTR [rax],al
  40bcb0:	adc    al,0xb0
  40bcb2:	add    BYTE PTR [rax],al
  40bcb4:	adc    al,0xb0
  40bcb6:	add    BYTE PTR [rax],al
  40bcb8:	adc    al,0xb0
  40bcba:	add    BYTE PTR [rax],al
  40bcbc:	adc    al,0xb0
  40bcbe:	add    BYTE PTR [rax],al
  40bcc0:	adc    al,0xb0
  40bcc2:	add    BYTE PTR [rax],al
  40bcc4:	adc    al,0xb0
  40bcc6:	add    BYTE PTR [rax],al
  40bcc8:	adc    al,0xb0
  40bcca:	add    BYTE PTR [rax],al
  40bccc:	adc    al,0xb0
  40bcce:	add    BYTE PTR [rax],al
  40bcd0:	adc    al,0xb0
  40bcd2:	add    BYTE PTR [rax],al
  40bcd4:	adc    al,0xb0
  40bcd6:	add    BYTE PTR [rax],al
  40bcd8:	adc    al,0xb0
  40bcda:	add    BYTE PTR [rax],al
  40bcdc:	adc    al,0xb0
  40bcde:	add    BYTE PTR [rax],al
  40bce0:	adc    al,0xb0
  40bce2:	add    BYTE PTR [rax],al
  40bce4:	adc    al,0xb0
  40bce6:	add    BYTE PTR [rax],al
  40bce8:	adc    al,0xb0
  40bcea:	add    BYTE PTR [rax],al
  40bcec:	adc    al,0xb0
  40bcee:	add    BYTE PTR [rax],al
  40bcf0:	adc    al,0xb0
  40bcf2:	add    BYTE PTR [rax],al
  40bcf4:	adc    al,0xb0
  40bcf6:	add    BYTE PTR [rax],al
  40bcf8:	adc    al,0xb0
  40bcfa:	add    BYTE PTR [rax],al
  40bcfc:	adc    al,0xb0
  40bcfe:	add    BYTE PTR [rax],al
  40bd00:	adc    al,0xb0
  40bd02:	add    BYTE PTR [rax],al
  40bd04:	rex.WXB
  40bd05:	rex.RB push r10
  40bd07:	rex.WRX
  40bd08:	rex.RB
  40bd09:	xor    r14,QWORD PTR [rdx]
  40bd0c:	cs fs ins BYTE PTR es:[rdi],dx
  40bd0f:	ins    BYTE PTR es:[rdi],dx
  40bd10:	add    BYTE PTR [rax],al
  40bd12:	add    BYTE PTR [rax],al
  40bd14:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bd1a:	add    BYTE PTR [rax],al
  40bd1c:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bd22:	add    BYTE PTR [rax],al
  40bd24:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bd2a:	add    BYTE PTR [rax],al
  40bd2c:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bd32:	add    BYTE PTR [rax],al
  40bd34:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bd3a:	add    BYTE PTR [rax],al
  40bd3c:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bd42:	add    BYTE PTR [rax],al
  40bd44:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bd4a:	add    BYTE PTR [rax],al
  40bd4c:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bd52:	add    BYTE PTR [rax],al
  40bd54:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bd5a:	add    BYTE PTR [rax],al
  40bd5c:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bd62:	add    BYTE PTR [rax],al
  40bd64:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bd6a:	add    BYTE PTR [rax],al
  40bd6c:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bd72:	add    BYTE PTR [rax],al
  40bd74:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bd7a:	add    BYTE PTR [rax],al
  40bd7c:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bd82:	add    BYTE PTR [rax],al
  40bd84:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bd8a:	add    BYTE PTR [rax],al
  40bd8c:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bd92:	add    BYTE PTR [rax],al
  40bd94:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bd9a:	add    BYTE PTR [rax],al
  40bd9c:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bda2:	add    BYTE PTR [rax],al
  40bda4:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bdaa:	add    BYTE PTR [rax],al
  40bdac:	ins    DWORD PTR es:[rdi],dx
  40bdad:	jae    0x40be25
  40bdaf:	movsxd esi,DWORD PTR [rdx+0x74]
  40bdb2:	cs fs ins BYTE PTR es:[rdi],dx
  40bdb5:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040c000 <.CRT>:
	...
  40c008:	(bad)  
  40c009:	adc    DWORD PTR [rax+0x0],eax
	...
  40c020:	adc    BYTE PTR [rax],dl
  40c022:	add    BYTE PTR [rax],al
  40c025:	add    BYTE PTR [rax],al
  40c027:	add    BYTE PTR [rax],dh
  40c029:	sbb    eax,0x40
	...
  40c03e:	add    BYTE PTR [rax],al
  40c040:	(bad)  
  40c041:	(bad)  
  40c042:	add    BYTE PTR [rax],al
  40c045:	add    BYTE PTR [rax],al
  40c047:	add    BYTE PTR [rax],dh
  40c049:	(bad)  
  40c04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000040d000 <.tls>:
	...
  40d020:	add    al,dl
  40d022:	add    BYTE PTR [rax],al
  40d025:	add    BYTE PTR [rax],al
  40d027:	add    BYTE PTR [rax-0x30],ah
  40d02a:	add    BYTE PTR [rax],al
  40d02d:	add    BYTE PTR [rax],al
  40d02f:	add    BYTE PTR [rsi+riz*4+0x40],bl
  40d033:	add    BYTE PTR [rax],al
  40d035:	add    BYTE PTR [rax],al
  40d037:	add    BYTE PTR [rax-0x40],al
  40d03a:	add    BYTE PTR [rax],al
	...
