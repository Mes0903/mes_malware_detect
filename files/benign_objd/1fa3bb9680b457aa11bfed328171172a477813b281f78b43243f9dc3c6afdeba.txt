
1fa3bb9680b457aa11bfed328171172a477813b281f78b43243f9dc3c6afdeba.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x3cb05]        # 0x43db20
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x3cb06]        # 0x43db30
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x3cb09]        # 0x43db40
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x3cacc]        # 0x43db10
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x3c81f]        # 0x43d870
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x3caa1]        # 0x43db00
  40105f:	mov    DWORD PTR [rip+0x41fa3],edx        # 0x443008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x42e038
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x427480
  401081:	mov    rdx,QWORD PTR [rip+0x3c898]        # 0x43d920
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x3c87e]        # 0x43d910
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x3c8f4]        # 0x43d990
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x3c81b]        # 0x43d8c0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x427060
  4010af:	mov    rax,QWORD PTR [rip+0x3c76a]        # 0x43d820
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x42e038
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x26239]        # 0x427360
  401127:	call   0x427350
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x3c855]        # 0x43d9c0
  40116b:	lea    r8,[rip+0x41ea6]        # 0x443018
  401172:	lea    rdx,[rip+0x41ea7]        # 0x443020
  401179:	lea    rcx,[rip+0x41ea8]        # 0x443028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x41e78],eax        # 0x443000
  401188:	lea    rax,[rip+0x41e71]        # 0x443000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x3c7e5]        # 0x43d980
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x42e050
  4011a3:	mov    DWORD PTR [rip+0x41e67],eax        # 0x443010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x3c93a]        # 0x43db00
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x3c6fb]        # 0x43d8f0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x47576]        # 0x448778
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x3c6d7]        # 0x43d900
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x41dba],0x1        # 0x443004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x3c5fc]        # 0x43d860
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x427670
  40127d:	lea    rcx,[rip+0x2698c]        # 0x427c10
  401284:	call   QWORD PTR [rip+0x474e6]        # 0x448770
  40128a:	mov    rdx,QWORD PTR [rip+0x3c64f]        # 0x43d8e0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x427b20
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x42e080
  4012a5:	call   0x427460
  4012aa:	mov    rax,QWORD PTR [rip+0x3c5bf]        # 0x43d870
  4012b1:	mov    QWORD PTR [rip+0x44cc0],rax        # 0x445f78
  4012b8:	mov    rax,QWORD PTR [rip+0x3c5e1]        # 0x43d8a0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x44c59],rax        # 0x445f70
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2dcca],eax        # 0x42f000
  401336:	mov    r12d,DWORD PTR [rip+0x41ceb]        # 0x443028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x42dea8
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x41cc2]        # 0x443020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x42de30
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x42dea8
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x42de98
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x41c6a],rbp        # 0x443020
  4013b6:	call   0x427030
  4013bb:	mov    rax,QWORD PTR [rip+0x3c4be]        # 0x43d880
  4013c2:	mov    rdx,QWORD PTR [rip+0x41c4f]        # 0x443018
  4013c9:	mov    ecx,DWORD PTR [rip+0x41c59]        # 0x443028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x41c3c]        # 0x443018
  4013dc:	mov    rdx,QWORD PTR [rip+0x41c3d]        # 0x443020
  4013e3:	call   0x42e270
  4013e8:	mov    ecx,DWORD PTR [rip+0x41c1a]        # 0x443008
  4013ee:	mov    DWORD PTR [rip+0x41c18],eax        # 0x44300c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x41c02]        # 0x443004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x42e020
  40140b:	mov    eax,DWORD PTR [rip+0x41bfb]        # 0x44300c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x3c4c9]        # 0x43d900
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x42e028
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x3c4ed]        # 0x43d950
  401463:	mov    rcx,QWORD PTR [rip+0x3c4d6]        # 0x43d940
  40146a:	call   0x42dfc8
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x4726f]        # 0x448708
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x3c4c9]        # 0x43d970
  4014a7:	mov    rcx,QWORD PTR [rip+0x3c4b2]        # 0x43d960
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x42dfc8
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x42df60
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x3c625]        # 0x43db00
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x427070
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x3c5f5]        # 0x43db00
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x427070
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	cmp    ecx,0xa
  401533:	ja     0x4015c0
  401539:	lea    rax,[rip+0x30b14]        # 0x432054
  401540:	mov    ecx,ecx
  401542:	movsxd rdx,DWORD PTR [rax+rcx*4]
  401546:	add    rax,rdx
  401549:	jmp    rax
  40154b:	nop    DWORD PTR [rax+rax*1+0x0]
  401550:	lea    rax,[rip+0x30aa9]        # 0x432000
  401557:	ret    
  401558:	nop    DWORD PTR [rax+rax*1+0x0]
  401560:	lea    rax,[rip+0x30ab5]        # 0x43201c
  401567:	ret    
  401568:	nop    DWORD PTR [rax+rax*1+0x0]
  401570:	lea    rax,[rip+0x30ab1]        # 0x432028
  401577:	ret    
  401578:	nop    DWORD PTR [rax+rax*1+0x0]
  401580:	lea    rax,[rip+0x30ab7]        # 0x43203e
  401587:	ret    
  401588:	nop    DWORD PTR [rax+rax*1+0x0]
  401590:	lea    rax,[rip+0x30aab]        # 0x432042
  401597:	ret    
  401598:	nop    DWORD PTR [rax+rax*1+0x0]
  4015a0:	lea    rax,[rip+0x30a8d]        # 0x432034
  4015a7:	ret    
  4015a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015b0:	lea    rax,[rip+0x30a5f]        # 0x432016
  4015b7:	ret    
  4015b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015c0:	lea    rax,[rip+0x30a82]        # 0x432049
  4015c7:	ret    
  4015c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015d0:	sub    rsp,0x38
  4015d4:	mov    QWORD PTR [rsp+0x48],rdx
  4015d9:	lea    rdx,[rsp+0x48]
  4015de:	mov    QWORD PTR [rsp+0x50],r8
  4015e3:	mov    QWORD PTR [rsp+0x58],r9
  4015e8:	mov    QWORD PTR [rsp+0x28],rdx
  4015ed:	call   0x429310
  4015f2:	add    rsp,0x38
  4015f6:	ret    
  4015f7:	nop    WORD PTR [rax+rax*1+0x0]
  401600:	sub    rsp,0x38
  401604:	mov    QWORD PTR [rsp+0x50],r8
  401609:	lea    r8,[rsp+0x50]
  40160e:	mov    QWORD PTR [rsp+0x58],r9
  401613:	mov    QWORD PTR [rsp+0x28],r8
  401618:	call   0x4292e0
  40161d:	add    rsp,0x38
  401621:	ret    
  401622:	nop    DWORD PTR [rax+0x0]
  401626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401630:	push   rsi
  401631:	push   rbx
  401632:	sub    rsp,0x28
  401636:	mov    ebx,ecx
  401638:	mov    rsi,rdx
  40163b:	call   QWORD PTR [rip+0x4719f]        # 0x4487e0
  401641:	lea    rdx,[rip+0x30a38]        # 0x432080
  401648:	lea    rcx,[rax+0x60]
  40164c:	mov    r9,rsi
  40164f:	mov    r8d,ebx
  401652:	add    rsp,0x28
  401656:	pop    rbx
  401657:	pop    rsi
  401658:	jmp    0x401600
  40165a:	nop    WORD PTR [rax+rax*1+0x0]
  401660:	push   r15
  401662:	push   r14
  401664:	push   r13
  401666:	push   r12
  401668:	push   rbp
  401669:	push   rdi
  40166a:	push   rsi
  40166b:	push   rbx
  40166c:	sub    rsp,0x78
  401670:	mov    QWORD PTR [rsp+0xc0],rcx
  401678:	lea    rcx,[rsp+0x48]
  40167d:	mov    rbx,rdx
  401680:	mov    DWORD PTR [rsp+0xd0],r8d
  401688:	mov    r14,r9
  40168b:	call   0x40db40
  401690:	test   eax,eax
  401692:	js     0x401ff5
  401698:	mov    rcx,r14
  40169b:	call   0x40a680
  4016a0:	test   rax,rax
  4016a3:	mov    r13,rax
  4016a6:	je     0x401c10
  4016ac:	mov    rcx,QWORD PTR [rsp+0x48]
  4016b1:	mov    rdx,rax
  4016b4:	call   0x40db00
  4016b9:	test   eax,eax
  4016bb:	js     0x4018a1
  4016c1:	mov    QWORD PTR [rsp+0x30],0x0
  4016ca:	lea    rax,[rsp+0x58]
  4016cf:	lea    rbp,[rsp+0x60]
  4016d4:	mov    QWORD PTR [rsp+0x58],0x10
  4016dd:	mov    rdx,rax
  4016e0:	mov    rcx,rbp
  4016e3:	mov    QWORD PTR [rsp+0x38],rax
  4016e8:	call   0x411140
  4016ed:	mov    r8,QWORD PTR [rsp+0x58]
  4016f2:	mov    rcx,QWORD PTR [rsp+0x48]
  4016f7:	mov    rdx,rbp
  4016fa:	call   0x40dac0
  4016ff:	test   eax,eax
  401701:	js     0x40207c
  401707:	mov    r11d,DWORD PTR [rip+0x44872]        # 0x445f80
  40170e:	test   r11d,r11d
  401711:	je     0x401b30
  401717:	call   0x411160
  40171c:	mov    rcx,QWORD PTR [rsp+0x48]
  401721:	mov    rdx,rax
  401724:	mov    QWORD PTR [rsp+0x50],rax
  401729:	call   0x40db18
  40172e:	test   eax,eax
  401730:	js     0x40204f
  401736:	lea    r12,[rsp+0x50]
  40173b:	mov    rdi,QWORD PTR [rip+0x470de]        # 0x448820
  401742:	mov    rsi,QWORD PTR [rip+0x47097]        # 0x4487e0
  401749:	jmp    0x4017e5
  40174e:	xchg   ax,ax
  401750:	mov    rcx,rbx
  401753:	call   0x40db78
  401758:	mov    rdx,QWORD PTR [rsp+0x50]
  40175d:	cmp    rax,rdx
  401760:	jge    0x4017fb
  401766:	mov    rcx,rbx
  401769:	call   0x40db78
  40176e:	mov    rcx,r12
  401771:	mov    QWORD PTR [rsp+0x60],rax
  401776:	call   rdi
  401778:	mov    r15,rax
  40177b:	call   rsi
  40177d:	lea    rdx,[rip+0x30a3f]        # 0x4321c3
  401784:	lea    rcx,[rax+0x60]
  401788:	mov    r8,r15
  40178b:	call   0x401600
  401790:	mov    rcx,rbp
  401793:	call   rdi
  401795:	mov    r15,rax
  401798:	call   rsi
  40179a:	lea    rdx,[rip+0x30a37]        # 0x4321d8
  4017a1:	lea    rcx,[rax+0x60]
  4017a5:	mov    r8,r15
  4017a8:	call   0x401600
  4017ad:	call   rsi
  4017af:	lea    rdx,[rip+0x30a3a]        # 0x4321f0
  4017b6:	lea    rcx,[rax+0x60]
  4017ba:	call   0x401600
  4017bf:	mov    r10d,DWORD PTR [rip+0x447ba]        # 0x445f80
  4017c6:	test   r10d,r10d
  4017c9:	jne    0x401880
  4017cf:	lea    rcx,[rip+0x30a52]        # 0x432228
  4017d6:	xor    edx,edx
  4017d8:	call   0x410270
  4017dd:	test   eax,eax
  4017df:	jne    0x401880
  4017e5:	call   0x4111f0
  4017ea:	test   rbx,rbx
  4017ed:	mov    rdx,rax
  4017f0:	mov    QWORD PTR [rsp+0x50],rax
  4017f5:	jne    0x401750
  4017fb:	mov    rcx,QWORD PTR [rsp+0x48]
  401800:	call   0x40daf0
  401805:	test   eax,eax
  401807:	js     0x402022
  40180d:	mov    r9d,DWORD PTR [rip+0x4476c]        # 0x445f80
  401814:	test   r9d,r9d
  401817:	je     0x401b10
  40181d:	test   r13,r13
  401820:	je     0x40182b
  401822:	call   0x411240
  401827:	test   eax,eax
  401829:	jne    0x401890
  40182b:	mov    edi,DWORD PTR [r14+0x84]
  401832:	test   edi,edi
  401834:	je     0x4018d0
  40183a:	mov    edx,0x1
  40183f:	mov    rcx,QWORD PTR [rsp+0x48]
  401844:	call   0x40dab0
  401849:	test   eax,eax
  40184b:	js     0x401ec7
  401851:	mov    rax,QWORD PTR [rsp+0xc0]
  401859:	mov    rdi,QWORD PTR [rsp+0x30]
  40185e:	mov    QWORD PTR [rax],rdi
  401861:	mov    rax,QWORD PTR [rsp+0x48]
  401866:	add    rsp,0x78
  40186a:	pop    rbx
  40186b:	pop    rsi
  40186c:	pop    rdi
  40186d:	pop    rbp
  40186e:	pop    r12
  401870:	pop    r13
  401872:	pop    r14
  401874:	pop    r15
  401876:	ret    
  401877:	nop    WORD PTR [rax+rax*1+0x0]
  401880:	mov    rdx,QWORD PTR [rsp+0x50]
  401885:	jmp    0x4017fb
  40188a:	nop    WORD PTR [rax+rax*1+0x0]
  401890:	mov    rcx,QWORD PTR [rsp+0x48]
  401895:	mov    rdx,r13
  401898:	call   0x40daf8
  40189d:	test   eax,eax
  40189f:	jns    0x40182b
  4018a1:	mov    ecx,eax
  4018a3:	call   0x40dc88
  4018a8:	mov    rbx,rax
  4018ab:	call   QWORD PTR [rip+0x46f2f]        # 0x4487e0
  4018b1:	lea    rdx,[rip+0x308b9]        # 0x432171
  4018b8:	lea    rcx,[rax+0x60]
  4018bc:	mov    r8,rbx
  4018bf:	call   0x401600
  4018c4:	mov    ecx,0x1
  4018c9:	call   0x42df60
  4018ce:	xchg   ax,ax
  4018d0:	mov    r8d,DWORD PTR [rsp+0xd0]
  4018d8:	test   r8d,r8d
  4018db:	jne    0x401cc0
  4018e1:	call   0x411210
  4018e6:	test   eax,eax
  4018e8:	mov    esi,eax
  4018ea:	je     0x4020a9
  4018f0:	call   0x411290
  4018f5:	mov    edi,esi
  4018f7:	mov    r8d,eax
  4018fa:	mov    rcx,QWORD PTR [rsp+0x48]
  4018ff:	mov    edx,edi
  401901:	call   0x40db08
  401906:	test   eax,eax
  401908:	js     0x4020b4
  40190e:	call   0x411320
  401913:	test   eax,eax
  401915:	je     0x401933
  401917:	mov    rcx,QWORD PTR [rsp+0x48]
  40191c:	lea    rdx,[rip+0x309c6]        # 0x4322e9
  401923:	xor    r8d,r8d
  401926:	call   0x40dae8
  40192b:	test   eax,eax
  40192d:	js     0x401bb3
  401933:	mov    rcx,QWORD PTR [rsp+0x48]
  401938:	call   0x410c30
  40193d:	call   0x411d20
  401942:	mov    r13d,eax
  401945:	call   0x411350
  40194a:	mov    rdx,QWORD PTR [rsp+0x48]
  40194f:	mov    ecx,0x1
  401954:	mov    edi,eax
  401956:	call   0x411770
  40195b:	mov    rdx,QWORD PTR [rsp+0x48]
  401960:	mov    ecx,0x1
  401965:	call   0x411a00
  40196a:	mov    rdx,QWORD PTR [rsp+0x48]
  40196f:	mov    ecx,0x1
  401974:	call   0x411380
  401979:	mov    rcx,QWORD PTR [rsp+0x48]
  40197e:	call   0x4118c0
  401983:	test   edi,edi
  401985:	jne    0x401b50
  40198b:	mov    edx,DWORD PTR [rsp+0xd0]
  401992:	test   edx,edx
  401994:	je     0x401d8a
  40199a:	xor    r12d,r12d
  40199d:	test   esi,esi
  40199f:	je     0x401b68
  4019a5:	call   0x411c30
  4019aa:	mov    edx,r12d
  4019ad:	or     edx,0x8
  4019b0:	test   eax,eax
  4019b2:	cmovne r12d,edx
  4019b6:	call   0x411c70
  4019bb:	mov    edx,r12d
  4019be:	or     edx,0x10
  4019c1:	test   eax,eax
  4019c3:	cmovne r12d,edx
  4019c7:	call   0x411c50
  4019cc:	mov    edx,r12d
  4019cf:	or     edx,0x40
  4019d2:	test   eax,eax
  4019d4:	cmovne r12d,edx
  4019d8:	call   0x411cc0
  4019dd:	test   eax,eax
  4019df:	je     0x4019fd
  4019e1:	mov    rcx,QWORD PTR [rsp+0x48]
  4019e6:	lea    rdx,[rip+0x3099a]        # 0x432387
  4019ed:	xor    r8d,r8d
  4019f0:	call   0x40dae8
  4019f5:	test   eax,eax
  4019f7:	js     0x401bb3
  4019fd:	call   0x411c90
  401a02:	test   eax,eax
  401a04:	je     0x401a22
  401a06:	mov    rcx,QWORD PTR [rsp+0x48]
  401a0b:	lea    rdx,[rip+0x30987]        # 0x432399
  401a12:	xor    r8d,r8d
  401a15:	call   0x40dae8
  401a1a:	test   eax,eax
  401a1c:	js     0x401bb3
  401a22:	call   0x411cf0
  401a27:	test   eax,eax
  401a29:	jne    0x401d50
  401a2f:	test   esi,esi
  401a31:	jne    0x401d15
  401a37:	mov    rcx,QWORD PTR [rsp+0x48]
  401a3c:	call   0x410f20
  401a41:	mov    rcx,QWORD PTR [rsp+0x48]
  401a46:	call   0x410fe0
  401a4b:	test   r12d,r12d
  401a4e:	je     0x401a6e
  401a50:	test   r13d,r13d
  401a53:	jne    0x401d71
  401a59:	mov    rcx,QWORD PTR [rsp+0x48]
  401a5e:	mov    edx,r12d
  401a61:	call   0x40dae0
  401a66:	test   eax,eax
  401a68:	js     0x401ef4
  401a6e:	mov    rdi,QWORD PTR [rip+0x3c06b]        # 0x43dae0
  401a75:	mov    rsi,QWORD PTR [rip+0x3c054]        # 0x43dad0
  401a7c:	xor    edx,edx
  401a7e:	mov    rcx,QWORD PTR [rsp+0x48]
  401a83:	mov    r9,rbp
  401a86:	mov    eax,DWORD PTR [rdi]
  401a88:	mov    r8,QWORD PTR [rsi]
  401a8b:	mov    QWORD PTR [rsp+0x60],rax
  401a90:	call   0x40db60
  401a95:	test   eax,eax
  401a97:	js     0x401ab3
  401a99:	mov    r8,QWORD PTR [rsp+0x60]
  401a9e:	mov    rdx,QWORD PTR [rsi]
  401aa1:	mov    rcx,QWORD PTR [rsp+0x48]
  401aa6:	call   0x40dab8
  401aab:	test   eax,eax
  401aad:	js     0x401f21
  401ab3:	test   rbx,rbx
  401ab6:	je     0x401aee
  401ab8:	mov    eax,DWORD PTR [rdi]
  401aba:	mov    rdx,QWORD PTR [rsi]
  401abd:	xor    r9d,r9d
  401ac0:	mov    r8,rbp
  401ac3:	mov    rcx,rbx
  401ac6:	mov    QWORD PTR [rsp+0x60],rax
  401acb:	call   0x40db50
  401ad0:	test   eax,eax
  401ad2:	js     0x401aee
  401ad4:	mov    r8,QWORD PTR [rsp+0x60]
  401ad9:	mov    rdx,QWORD PTR [rsi]
  401adc:	mov    rcx,QWORD PTR [rsp+0x48]
  401ae1:	call   0x40db10
  401ae6:	test   eax,eax
  401ae8:	js     0x401f6e
  401aee:	mov    eax,DWORD PTR [r14+0x84]
  401af5:	test   eax,eax
  401af7:	jne    0x40183a
  401afd:	mov    edx,0x3
  401b02:	jmp    0x40183f
  401b07:	nop    WORD PTR [rax+rax*1+0x0]
  401b10:	call   QWORD PTR [rip+0x46cca]        # 0x4487e0
  401b16:	lea    rdx,[rip+0x3073c]        # 0x432259
  401b1d:	lea    rcx,[rax+0x60]
  401b21:	call   0x401600
  401b26:	jmp    0x40181d
  401b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  401b30:	call   QWORD PTR [rip+0x46caa]        # 0x4487e0
  401b36:	lea    rdx,[rip+0x30653]        # 0x432190
  401b3d:	lea    rcx,[rax+0x60]
  401b41:	call   0x401600
  401b46:	jmp    0x401717
  401b4b:	nop    DWORD PTR [rax+rax*1+0x0]
  401b50:	mov    rcx,QWORD PTR [rsp+0x48]
  401b55:	lea    rdx,[rip+0x307ab]        # 0x432307
  401b5c:	xor    r8d,r8d
  401b5f:	call   0x40dae8
  401b64:	test   eax,eax
  401b66:	js     0x401bb3
  401b68:	mov    rcx,QWORD PTR [rsp+0x48]
  401b6d:	xor    edx,edx
  401b6f:	call   0x40db58
  401b74:	cmp    eax,0x1
  401b77:	je     0x401be0
  401b79:	mov    ecx,edi
  401b7b:	mov    r12d,0x80
  401b81:	call   0x411b90
  401b86:	test   eax,eax
  401b88:	jne    0x401e2f
  401b8e:	test   r13d,r13d
  401b91:	je     0x4019a5
  401b97:	mov    rcx,QWORD PTR [rsp+0x48]
  401b9c:	lea    rdx,[rip+0x307d1]        # 0x432374
  401ba3:	xor    r8d,r8d
  401ba6:	call   0x40dae8
  401bab:	test   eax,eax
  401bad:	jns    0x4019a5
  401bb3:	mov    ecx,eax
  401bb5:	call   0x40dc88
  401bba:	mov    rbx,rax
  401bbd:	call   QWORD PTR [rip+0x46c1d]        # 0x4487e0
  401bc3:	lea    rdx,[rip+0x30731]        # 0x4322fb
  401bca:	lea    rcx,[rax+0x60]
  401bce:	mov    r8,rbx
  401bd1:	call   0x401600
  401bd6:	mov    ecx,0x1
  401bdb:	call   0x42df60
  401be0:	mov    ecx,edi
  401be2:	call   0x411b50
  401be7:	cmp    eax,0x1
  401bea:	mov    ecx,edi
  401bec:	sbb    r12d,r12d
  401bef:	not    r12d
  401bf2:	and    r12d,0x80
  401bf9:	call   0x411b90
  401bfe:	mov    edx,r12d
  401c01:	or     edx,0x20
  401c04:	test   eax,eax
  401c06:	cmovne r12d,edx
  401c0a:	jmp    0x401b8e
  401c0c:	nop    DWORD PTR [rax+0x0]
  401c10:	xor    ecx,ecx
  401c12:	mov    rdx,r14
  401c15:	call   0x40a000
  401c1a:	xor    ecx,ecx
  401c1c:	mov    rdi,rax
  401c1f:	mov    r8,r14
  401c22:	mov    rdx,rax
  401c25:	mov    QWORD PTR [rsp+0x30],rax
  401c2a:	call   0x40abd0
  401c2f:	test   rdi,rdi
  401c32:	mov    rsi,rax
  401c35:	jne    0x401c40
  401c37:	test   rsi,rsi
  401c3a:	je     0x401f4e
  401c40:	mov    r12d,DWORD PTR [rip+0x44339]        # 0x445f80
  401c47:	test   r12d,r12d
  401c4a:	je     0x401e4a
  401c50:	mov    ebp,DWORD PTR [rsp+0xd0]
  401c57:	test   ebp,ebp
  401c59:	je     0x401d9e
  401c5f:	mov    rcx,QWORD PTR [rsp+0x48]
  401c64:	xor    r9d,r9d
  401c67:	xor    r8d,r8d
  401c6a:	mov    DWORD PTR [rsp+0x20],0x0
  401c72:	mov    rdx,rbx
  401c75:	call   0x40dad0
  401c7a:	test   eax,eax
  401c7c:	js     0x401fc8
  401c82:	mov    rcx,QWORD PTR [rsp+0x48]
  401c87:	call   0x410910
  401c8c:	mov    rcx,QWORD PTR [rsp+0x48]
  401c91:	call   0x410870
  401c96:	mov    rcx,QWORD PTR [rsp+0x48]
  401c9b:	mov    rdx,rsi
  401c9e:	call   0x40dac8
  401ca3:	test   eax,eax
  401ca5:	js     0x401f9b
  401cab:	mov    rcx,rsi
  401cae:	call   0x40dd78
  401cb3:	jmp    0x4016ca
  401cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  401cc0:	call   0x411290
  401cc5:	mov    ecx,DWORD PTR [rip+0x442b5]        # 0x445f80
  401ccb:	mov    esi,eax
  401ccd:	test   ecx,ecx
  401ccf:	je     0x401e65
  401cd5:	mov    rcx,QWORD PTR [rsp+0x38]
  401cda:	mov    rdx,rbp
  401cdd:	call   0x411d70
  401ce2:	mov    r8,rax
  401ce5:	mov    rax,QWORD PTR [rsp+0x60]
  401cea:	mov    r9,QWORD PTR [rsp+0x58]
  401cef:	mov    rcx,QWORD PTR [rsp+0x48]
  401cf4:	mov    edx,esi
  401cf6:	mov    QWORD PTR [rsp+0x20],rax
  401cfb:	call   0x40dad8
  401d00:	test   eax,eax
  401d02:	js     0x401e9a
  401d08:	xor    esi,esi
  401d0a:	mov    r8d,0xffffffff
  401d10:	jmp    0x4018fa
  401d15:	call   0x411bd0
  401d1a:	mov    edx,r12d
  401d1d:	or     edx,0x4
  401d20:	test   eax,eax
  401d22:	cmovne r12d,edx
  401d26:	call   0x411c00
  401d2b:	mov    rcx,QWORD PTR [rsp+0x48]
  401d30:	mov    edx,r12d
  401d33:	or     edx,0x2
  401d36:	test   eax,eax
  401d38:	cmovne r12d,edx
  401d3c:	call   0x410980
  401d41:	jmp    0x401a37
  401d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d50:	mov    rcx,QWORD PTR [rsp+0x48]
  401d55:	lea    rdx,[rip+0x3064f]        # 0x4323ab
  401d5c:	xor    r8d,r8d
  401d5f:	call   0x40dae8
  401d64:	test   eax,eax
  401d66:	jns    0x401a2f
  401d6c:	jmp    0x401bb3
  401d71:	mov    ecx,edi
  401d73:	call   0x411b50
  401d78:	mov    edx,r12d
  401d7b:	or     edx,0x40
  401d7e:	cmp    eax,0x1
  401d81:	cmovne r12d,edx
  401d85:	jmp    0x401a59
  401d8a:	mov    rdx,QWORD PTR [rsp+0x48]
  401d8f:	mov    ecx,0x1
  401d94:	call   0x4114d0
  401d99:	jmp    0x40199a
  401d9e:	mov    rcx,QWORD PTR [rsp+0x48]
  401da3:	call   0x410910
  401da8:	mov    rcx,QWORD PTR [rsp+0x48]
  401dad:	call   0x410870
  401db2:	mov    rcx,QWORD PTR [rsp+0x48]
  401db7:	call   0x410cf0
  401dbc:	mov    rcx,QWORD PTR [rsp+0x48]
  401dc1:	call   0x410670
  401dc6:	mov    rcx,QWORD PTR [rsp+0x48]
  401dcb:	call   0x4105b0
  401dd0:	mov    rcx,QWORD PTR [rsp+0x48]
  401dd5:	call   0x4107d0
  401dda:	mov    rcx,QWORD PTR [rsp+0x48]
  401ddf:	call   0x410730
  401de4:	mov    rcx,QWORD PTR [rsp+0x48]
  401de9:	call   0x410510
  401dee:	mov    rdx,QWORD PTR [rsp+0x48]
  401df3:	mov    ecx,0x1
  401df8:	call   0x411630
  401dfd:	mov    rcx,QWORD PTR [rsp+0x48]
  401e02:	call   0x410d90
  401e07:	mov    rdx,QWORD PTR [rsp+0x48]
  401e0c:	mov    ecx,0x1
  401e11:	call   0x410e70
  401e16:	mov    edi,DWORD PTR [rip+0x44164]        # 0x445f80
  401e1c:	test   edi,edi
  401e1e:	je     0x401e82
  401e20:	mov    rcx,QWORD PTR [rsp+0x48]
  401e25:	call   0x4110a0
  401e2a:	jmp    0x401c96
  401e2f:	call   QWORD PTR [rip+0x469ab]        # 0x4487e0
  401e35:	lea    rdx,[rip+0x304e4]        # 0x432320
  401e3c:	lea    rcx,[rax+0x60]
  401e40:	call   0x401600
  401e45:	jmp    0x401b8e
  401e4a:	call   QWORD PTR [rip+0x46990]        # 0x4487e0
  401e50:	lea    rdx,[rip+0x30259]        # 0x4320b0
  401e57:	lea    rcx,[rax+0x60]
  401e5b:	call   0x401600
  401e60:	jmp    0x401c50
  401e65:	lea    rcx,[rip+0x303fc]        # 0x432268
  401e6c:	call   0x4015d0
  401e71:	lea    rcx,[rip+0x30420]        # 0x432298
  401e78:	call   0x4015d0
  401e7d:	jmp    0x401cd5
  401e82:	call   QWORD PTR [rip+0x46958]        # 0x4487e0
  401e88:	lea    rdx,[rip+0x302a1]        # 0x432130
  401e8f:	lea    rcx,[rax+0x60]
  401e93:	call   0x401600
  401e98:	jmp    0x401e20
  401e9a:	mov    ecx,eax
  401e9c:	call   0x40dc88
  401ea1:	mov    rbx,rax
  401ea4:	call   QWORD PTR [rip+0x46936]        # 0x4487e0
  401eaa:	lea    rdx,[rip+0x30412]        # 0x4322c3
  401eb1:	lea    rcx,[rax+0x60]
  401eb5:	mov    r8,rbx
  401eb8:	call   0x401600
  401ebd:	mov    ecx,0x1
  401ec2:	call   0x42df60
  401ec7:	mov    ecx,eax
  401ec9:	call   0x40dc88
  401ece:	mov    rbx,rax
  401ed1:	call   QWORD PTR [rip+0x46909]        # 0x4487e0
  401ed7:	lea    rdx,[rip+0x30520]        # 0x4323fe
  401ede:	lea    rcx,[rax+0x60]
  401ee2:	mov    r8,rbx
  401ee5:	call   0x401600
  401eea:	mov    ecx,0x1
  401eef:	call   0x42df60
  401ef4:	mov    ecx,eax
  401ef6:	call   0x40dc88
  401efb:	mov    rbx,rax
  401efe:	call   QWORD PTR [rip+0x468dc]        # 0x4487e0
  401f04:	lea    rdx,[rip+0x304b2]        # 0x4323bd
  401f0b:	lea    rcx,[rax+0x60]
  401f0f:	mov    r8,rbx
  401f12:	call   0x401600
  401f17:	mov    ecx,0x1
  401f1c:	call   0x42df60
  401f21:	mov    ecx,eax
  401f23:	call   0x40dc88
  401f28:	mov    rbx,rax
  401f2b:	call   QWORD PTR [rip+0x468af]        # 0x4487e0
  401f31:	lea    rdx,[rip+0x30494]        # 0x4323cc
  401f38:	lea    rcx,[rax+0x60]
  401f3c:	mov    r8,rbx
  401f3f:	call   0x401600
  401f44:	mov    ecx,0x1
  401f49:	call   0x42df60
  401f4e:	call   QWORD PTR [rip+0x4688c]        # 0x4487e0
  401f54:	lea    rdx,[rip+0x3013d]        # 0x432098
  401f5b:	lea    rcx,[rax+0x60]
  401f5f:	call   0x401600
  401f64:	mov    ecx,0x1
  401f69:	call   0x42df60
  401f6e:	mov    ecx,eax
  401f70:	call   0x40dc88
  401f75:	mov    rbx,rax
  401f78:	call   QWORD PTR [rip+0x46862]        # 0x4487e0
  401f7e:	lea    rdx,[rip+0x3045f]        # 0x4323e4
  401f85:	lea    rcx,[rax+0x60]
  401f89:	mov    r8,rbx
  401f8c:	call   0x401600
  401f91:	mov    ecx,0x1
  401f96:	call   0x42df60
  401f9b:	mov    ecx,eax
  401f9d:	call   0x40dc88
  401fa2:	mov    rbx,rax
  401fa5:	call   QWORD PTR [rip+0x46835]        # 0x4487e0
  401fab:	lea    rdx,[rip+0x301b2]        # 0x432164
  401fb2:	lea    rcx,[rax+0x60]
  401fb6:	mov    r8,rbx
  401fb9:	call   0x401600
  401fbe:	mov    ecx,0x1
  401fc3:	call   0x42df60
  401fc8:	mov    ecx,eax
  401fca:	call   0x40dc88
  401fcf:	mov    rbx,rax
  401fd2:	call   QWORD PTR [rip+0x46808]        # 0x4487e0
  401fd8:	lea    rdx,[rip+0x30138]        # 0x432117
  401fdf:	lea    rcx,[rax+0x60]
  401fe3:	mov    r8,rbx
  401fe6:	call   0x401600
  401feb:	mov    ecx,0x1
  401ff0:	call   0x42df60
  401ff5:	mov    ecx,eax
  401ff7:	call   0x40dc88
  401ffc:	mov    rbx,rax
  401fff:	call   QWORD PTR [rip+0x467db]        # 0x4487e0
  402005:	lea    rdx,[rip+0x3007e]        # 0x43208a
  40200c:	lea    rcx,[rax+0x60]
  402010:	mov    r8,rbx
  402013:	call   0x401600
  402018:	mov    ecx,0x1
  40201d:	call   0x42df60
  402022:	mov    ecx,eax
  402024:	call   0x40dc88
  402029:	mov    rbx,rax
  40202c:	call   QWORD PTR [rip+0x467ae]        # 0x4487e0
  402032:	lea    rdx,[rip+0x3020c]        # 0x432245
  402039:	lea    rcx,[rax+0x60]
  40203d:	mov    r8,rbx
  402040:	call   0x401600
  402045:	mov    ecx,0x1
  40204a:	call   0x42df60
  40204f:	mov    ecx,eax
  402051:	call   0x40dc88
  402056:	mov    rbx,rax
  402059:	call   QWORD PTR [rip+0x46781]        # 0x4487e0
  40205f:	lea    rdx,[rip+0x30149]        # 0x4321af
  402066:	lea    rcx,[rax+0x60]
  40206a:	mov    r8,rbx
  40206d:	call   0x401600
  402072:	mov    ecx,0x1
  402077:	call   0x42df60
  40207c:	mov    ecx,eax
  40207e:	call   0x40dc88
  402083:	mov    rbx,rax
  402086:	call   QWORD PTR [rip+0x46754]        # 0x4487e0
  40208c:	lea    rdx,[rip+0x300eb]        # 0x43217e
  402093:	lea    rcx,[rax+0x60]
  402097:	mov    r8,rbx
  40209a:	call   0x401600
  40209f:	mov    ecx,0x1
  4020a4:	call   0x42df60
  4020a9:	mov    r8d,0xffffffff
  4020af:	jmp    0x4018fa
  4020b4:	mov    ecx,eax
  4020b6:	call   0x40dc88
  4020bb:	mov    rbx,rax
  4020be:	call   QWORD PTR [rip+0x4671c]        # 0x4487e0
  4020c4:	lea    rdx,[rip+0x30207]        # 0x4322d2
  4020cb:	lea    rcx,[rax+0x60]
  4020cf:	mov    r8,rbx
  4020d2:	call   0x401600
  4020d7:	mov    ecx,0x1
  4020dc:	call   0x42df60
  4020e1:	nop
  4020e2:	nop    DWORD PTR [rax+0x0]
  4020e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4020f0:	push   rbx
  4020f1:	sub    rsp,0x30
  4020f5:	lea    rdx,[rsp+0x28]
  4020fa:	lea    r8,[rsp+0x2c]
  4020ff:	call   0x40dd58
  402104:	test   eax,eax
  402106:	js     0x40212a
  402108:	mov    eax,DWORD PTR [rsp+0x2c]
  40210c:	test   eax,eax
  40210e:	jne    0x402120
  402110:	mov    eax,DWORD PTR [rip+0x40f2a]        # 0x443040
  402116:	test   eax,eax
  402118:	je     0x402120
  40211a:	add    rsp,0x30
  40211e:	pop    rbx
  40211f:	ret    
  402120:	mov    eax,DWORD PTR [rsp+0x28]
  402124:	add    rsp,0x30
  402128:	pop    rbx
  402129:	ret    
  40212a:	mov    ecx,eax
  40212c:	call   0x40dc88
  402131:	mov    rbx,rax
  402134:	call   QWORD PTR [rip+0x466a6]        # 0x4487e0
  40213a:	lea    rdx,[rip+0x302cf]        # 0x432410
  402141:	lea    rcx,[rax+0x60]
  402145:	mov    r8,rbx
  402148:	call   0x401600
  40214d:	mov    ecx,0x1
  402152:	call   0x42df60
  402157:	nop
  402158:	nop    DWORD PTR [rax+rax*1+0x0]
  402160:	push   rbx
  402161:	sub    rsp,0x30
  402165:	mov    rbx,rcx
  402168:	lea    rcx,[rsp+0x28]
  40216d:	call   0x40dd28
  402172:	mov    rcx,QWORD PTR [rsp+0x28]
  402177:	xor    r8d,r8d
  40217a:	mov    rdx,rbx
  40217d:	call   0x40dd38
  402182:	test   eax,eax
  402184:	js     0x4021a4
  402186:	mov    rcx,QWORD PTR [rsp+0x28]
  40218b:	call   0x4020f0
  402190:	mov    rcx,QWORD PTR [rsp+0x28]
  402195:	mov    ebx,eax
  402197:	call   0x40dd78
  40219c:	mov    eax,ebx
  40219e:	add    rsp,0x30
  4021a2:	pop    rbx
  4021a3:	ret    
  4021a4:	mov    ecx,eax
  4021a6:	call   0x40dc88
  4021ab:	mov    rbx,rax
  4021ae:	call   QWORD PTR [rip+0x4662c]        # 0x4487e0
  4021b4:	lea    rdx,[rip+0x3027d]        # 0x432438
  4021bb:	lea    rcx,[rax+0x60]
  4021bf:	mov    r8,rbx
  4021c2:	call   0x401600
  4021c7:	mov    ecx,0x1
  4021cc:	call   0x42df60
  4021d1:	nop
  4021d2:	nop    DWORD PTR [rax+0x0]
  4021d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021e0:	push   rsi
  4021e1:	push   rbx
  4021e2:	sub    rsp,0x48
  4021e6:	mov    rsi,rdx
  4021e9:	mov    edx,DWORD PTR [rip+0x40e49]        # 0x443038
  4021ef:	mov    rbx,rcx
  4021f2:	cmp    edx,0x1
  4021f5:	je     0x402240
  4021f7:	lea    r8,[rsp+0x30]
  4021fc:	mov    rcx,rbx
  4021ff:	call   0x40dc70
  402204:	test   eax,eax
  402206:	js     0x402281
  402208:	mov    r8d,DWORD PTR [rsp+0x38]
  40220d:	mov    r9,QWORD PTR [rip+0x43d74]        # 0x445f88
  402214:	mov    edx,0x1
  402219:	mov    rcx,QWORD PTR [rsp+0x30]
  40221e:	call   0x42dee0
  402223:	mov    rcx,QWORD PTR [rsp+0x30]
  402228:	mov    rax,QWORD PTR [rip+0x3b7e1]        # 0x43da10
  40222f:	call   QWORD PTR [rax]
  402231:	nop
  402232:	add    rsp,0x48
  402236:	pop    rbx
  402237:	pop    rsi
  402238:	ret    
  402239:	nop    DWORD PTR [rax+0x0]
  402240:	mov    edx,DWORD PTR [rip+0x40dea]        # 0x443030
  402246:	lea    r8,[rsp+0x20]
  40224b:	call   0x40dc40
  402250:	test   eax,eax
  402252:	js     0x4022ae
  402254:	mov    r8,QWORD PTR [rsp+0x20]
  402259:	lea    rdx,[rip+0x30206]        # 0x432466
  402260:	mov    rcx,rsi
  402263:	call   0x401600
  402268:	mov    rax,QWORD PTR [rip+0x3b7a1]        # 0x43da10
  40226f:	mov    rcx,QWORD PTR [rsp+0x20]
  402274:	call   QWORD PTR [rax]
  402276:	mov    edx,DWORD PTR [rip+0x40dbc]        # 0x443038
  40227c:	jmp    0x4021f7
  402281:	mov    ecx,eax
  402283:	call   0x40dc88
  402288:	mov    rbx,rax
  40228b:	call   QWORD PTR [rip+0x4654f]        # 0x4487e0
  402291:	lea    rdx,[rip+0x301d2]        # 0x43246a
  402298:	lea    rcx,[rax+0x60]
  40229c:	mov    r8,rbx
  40229f:	call   0x401600
  4022a4:	mov    ecx,0x1
  4022a9:	call   0x42df60
  4022ae:	mov    ecx,eax
  4022b0:	call   0x40dc88
  4022b5:	mov    rbx,rax
  4022b8:	call   QWORD PTR [rip+0x46522]        # 0x4487e0
  4022be:	lea    rdx,[rip+0x30192]        # 0x432457
  4022c5:	lea    rcx,[rax+0x60]
  4022c9:	mov    r8,rbx
  4022cc:	call   0x401600
  4022d1:	mov    ecx,0x1
  4022d6:	call   0x42df60
  4022db:	nop
  4022dc:	nop    DWORD PTR [rax+0x0]
  4022e0:	push   rsi
  4022e1:	push   rbx
  4022e2:	sub    rsp,0x38
  4022e6:	test   edx,edx
  4022e8:	mov    rsi,rcx
  4022eb:	mov    ebx,edx
  4022ed:	je     0x402340
  4022ef:	lea    rdx,[rip+0x30184]        # 0x43247a
  4022f6:	call   0x401600
  4022fb:	lea    r8,[rsp+0x20]
  402300:	xor    r9d,r9d
  402303:	mov    edx,0x1
  402308:	mov    ecx,ebx
  40230a:	call   0x40e190
  40230f:	test   eax,eax
  402311:	js     0x40234e
  402313:	mov    r8,QWORD PTR [rsp+0x20]
  402318:	lea    rdx,[rip+0x3017e]        # 0x43249d
  40231f:	mov    rcx,rsi
  402322:	call   0x401600
  402327:	mov    rcx,QWORD PTR [rsp+0x20]
  40232c:	mov    rax,QWORD PTR [rip+0x3b6dd]        # 0x43da10
  402333:	call   QWORD PTR [rax]
  402335:	nop
  402336:	add    rsp,0x38
  40233a:	pop    rbx
  40233b:	pop    rsi
  40233c:	ret    
  40233d:	nop    DWORD PTR [rax]
  402340:	lea    rdx,[rip+0x30141]        # 0x432488
  402347:	call   0x401600
  40234c:	jmp    0x4022fb
  40234e:	mov    ecx,eax
  402350:	call   0x40dc88
  402355:	mov    rbx,rax
  402358:	call   QWORD PTR [rip+0x46482]        # 0x4487e0
  40235e:	lea    rdx,[rip+0x3012d]        # 0x432492
  402365:	lea    rcx,[rax+0x60]
  402369:	mov    r8,rbx
  40236c:	call   0x401600
  402371:	mov    ecx,0x1
  402376:	call   0x42df60
  40237b:	nop
  40237c:	nop    DWORD PTR [rax+0x0]
  402380:	push   r13
  402382:	push   r12
  402384:	push   rbp
  402385:	push   rdi
  402386:	push   rsi
  402387:	push   rbx
  402388:	sub    rsp,0xb8
  40238f:	mov    rbx,QWORD PTR [rsp+0x118]
  402397:	mov    rdi,QWORD PTR [rsp+0x120]
  40239f:	mov    r13,rcx
  4023a2:	lea    rcx,[rsp+0x68]
  4023a7:	mov    r12d,edx
  4023aa:	xor    edx,edx
  4023ac:	mov    rsi,r8
  4023af:	mov    ebp,r9d
  4023b2:	mov    QWORD PTR [rsp+0x50],0x0
  4023bb:	mov    QWORD PTR [rsp+0x58],0x0
  4023c4:	mov    QWORD PTR [rsp+0x60],0x0
  4023cd:	mov    DWORD PTR [rsp+0x44],0x0
  4023d5:	mov    DWORD PTR [rsp+0x48],0x0
  4023dd:	call   0x40d9f0
  4023e2:	test   eax,eax
  4023e4:	js     0x4028cb
  4023ea:	mov    r8d,DWORD PTR [rsp+0x110]
  4023f2:	test   r8d,r8d
  4023f5:	jne    0x402719
  4023fb:	test   rsi,rsi
  4023fe:	je     0x4026a1
  402404:	mov    DWORD PTR [rsp+0x78],ebp
  402408:	lea    rbp,[rsp+0x70]
  40240d:	lea    rdx,[rsp+0x48]
  402412:	lea    rcx,[rsp+0x58]
  402417:	mov    DWORD PTR [rsp+0x20],0x0
  40241f:	mov    r9d,0x1
  402425:	mov    r8,rbp
  402428:	mov    QWORD PTR [rsp+0x70],rsi
  40242d:	call   0x40db30
  402432:	test   eax,eax
  402434:	js     0x4028f8
  40243a:	cmp    DWORD PTR [rsp+0x48],0x0
  40243f:	je     0x4028f8
  402445:	lea    rdx,[rsp+0x44]
  40244a:	lea    rcx,[rsp+0x60]
  40244f:	mov    DWORD PTR [rsp+0x20],0x0
  402457:	mov    r9d,0x1
  40245d:	mov    r8,rbp
  402460:	call   0x40dc48
  402465:	test   eax,eax
  402467:	js     0x40279e
  40246d:	lea    rdx,[rsp+0x40]
  402472:	lea    rcx,[rsp+0x50]
  402477:	mov    DWORD PTR [rsp+0x20],0x0
  40247f:	mov    r9d,0x1
  402485:	mov    r8,rbp
  402488:	mov    QWORD PTR [rsp+0x70],r13
  40248d:	mov    DWORD PTR [rsp+0x78],r12d
  402492:	call   0x40db30
  402497:	test   eax,eax
  402499:	js     0x40281b
  40249f:	mov    edx,DWORD PTR [rsp+0x40]
  4024a3:	test   edx,edx
  4024a5:	je     0x40281b
  4024ab:	test   rsi,rsi
  4024ae:	je     0x4027c8
  4024b4:	mov    r8d,DWORD PTR [rsp+0x48]
  4024b9:	mov    rdx,QWORD PTR [rsp+0x58]
  4024be:	xor    r9d,r9d
  4024c1:	mov    rcx,QWORD PTR [rsp+0x68]
  4024c6:	call   0x40da18
  4024cb:	test   eax,eax
  4024cd:	js     0x402925
  4024d3:	mov    r8d,DWORD PTR [rsp+0x44]
  4024d8:	mov    rdx,QWORD PTR [rsp+0x60]
  4024dd:	xor    r9d,r9d
  4024e0:	mov    rcx,QWORD PTR [rsp+0x68]
  4024e5:	mov    DWORD PTR [rsp+0x20],0x0
  4024ed:	call   0x40da10
  4024f2:	test   eax,eax
  4024f4:	js     0x402875
  4024fa:	mov    rbp,QWORD PTR [rip+0x462df]        # 0x4487e0
  402501:	mov    esi,DWORD PTR [rsp+0x40]
  402505:	mov    r13d,DWORD PTR [rsp+0x44]
  40250a:	mov    r12d,DWORD PTR [rsp+0x48]
  40250f:	call   rbp
  402511:	lea    rdx,[rip+0x30070]        # 0x432588
  402518:	lea    rcx,[rax+0x30]
  40251c:	mov    r8d,esi
  40251f:	mov    DWORD PTR [rsp+0x20],r13d
  402524:	mov    r9d,r12d
  402527:	call   0x401600
  40252c:	test   rbx,rbx
  40252f:	setne  al
  402532:	test   rdi,rdi
  402535:	setne  sil
  402539:	test   al,al
  40253b:	jne    0x4026b5
  402541:	xor    ebx,ebx
  402543:	test   sil,sil
  402546:	jne    0x4026dc
  40254c:	cmp    QWORD PTR [rsp+0x128],0x0
  402555:	je     0x4027e6
  40255b:	mov    edx,ebx
  40255d:	mov    rax,QWORD PTR [rsp+0x128]
  402565:	mov    rdi,QWORD PTR [rsp+0x128]
  40256d:	imul   rdx,rdx,0x18
  402571:	or     rcx,0xffffffffffffffff
  402575:	add    ebx,0x1
  402578:	mov    QWORD PTR [rsp+rdx*1+0x88],rax
  402580:	mov    DWORD PTR [rsp+rdx*1+0x80],0x3
  40258b:	xor    eax,eax
  40258d:	repnz scas al,BYTE PTR es:[rdi]
  40258f:	mov    rax,rcx
  402592:	not    rax
  402595:	sub    rax,0x1
  402599:	mov    DWORD PTR [rsp+rdx*1+0x90],eax
  4025a0:	lea    rax,[rip+0x3b9]        # 0x402960
  4025a7:	mov    r8d,DWORD PTR [rsp+0x40]
  4025ac:	mov    rdx,QWORD PTR [rsp+0x50]
  4025b1:	mov    rcx,QWORD PTR [rsp+0x68]
  4025b6:	lea    r9,[rsp+0x80]
  4025be:	mov    DWORD PTR [rsp+0x28],0x4
  4025c6:	mov    QWORD PTR [rsp+0x38],rax
  4025cb:	lea    rax,[rsp+0x4c]
  4025d0:	mov    DWORD PTR [rsp+0x20],ebx
  4025d4:	mov    QWORD PTR [rsp+0x30],rax
  4025d9:	call   0x40d9e0
  4025de:	test   eax,eax
  4025e0:	js     0x4028a2
  4025e6:	mov    rcx,QWORD PTR [rip+0x4399b]        # 0x445f88
  4025ed:	lea    rdx,[rip+0x2ffed]        # 0x4325e1
  4025f4:	xor    ebx,ebx
  4025f6:	call   0x401600
  4025fb:	mov    edx,DWORD PTR [rsp+0x4c]
  4025ff:	mov    rcx,QWORD PTR [rip+0x43982]        # 0x445f88
  402606:	call   0x4022e0
  40260b:	mov    rcx,QWORD PTR [rip+0x43976]        # 0x445f88
  402612:	lea    rdx,[rip+0x2ffe4]        # 0x4325fd
  402619:	call   0x401600
  40261e:	mov    rcx,QWORD PTR [rsp+0x68]
  402623:	xor    edx,edx
  402625:	call   0x40d9f8
  40262a:	mov    ecx,DWORD PTR [rsp+0x40]
  40262e:	test   ecx,ecx
  402630:	je     0x40264b
  402632:	mov    rax,QWORD PTR [rsp+0x50]
  402637:	mov    edx,ebx
  402639:	add    ebx,0x1
  40263c:	mov    rcx,QWORD PTR [rax+rdx*8]
  402640:	call   0x40db90
  402645:	cmp    DWORD PTR [rsp+0x40],ebx
  402649:	ja     0x402632
  40264b:	mov    rsi,QWORD PTR [rip+0x3b3be]        # 0x43da10
  402652:	mov    rcx,QWORD PTR [rsp+0x50]
  402657:	xor    ebx,ebx
  402659:	call   QWORD PTR [rsi]
  40265b:	mov    edx,DWORD PTR [rsp+0x44]
  40265f:	test   edx,edx
  402661:	je     0x40267c
  402663:	mov    rax,QWORD PTR [rsp+0x60]
  402668:	mov    edx,ebx
  40266a:	add    ebx,0x1
  40266d:	mov    rcx,QWORD PTR [rax+rdx*8]
  402671:	call   0x40dc78
  402676:	cmp    DWORD PTR [rsp+0x44],ebx
  40267a:	ja     0x402663
  40267c:	mov    rcx,QWORD PTR [rsp+0x60]
  402681:	call   QWORD PTR [rsi]
  402683:	mov    eax,DWORD PTR [rsp+0x4c]
  402687:	test   eax,eax
  402689:	jne    0x40283e
  40268f:	xor    eax,eax
  402691:	add    rsp,0xb8
  402698:	pop    rbx
  402699:	pop    rsi
  40269a:	pop    rdi
  40269b:	pop    rbp
  40269c:	pop    r12
  40269e:	pop    r13
  4026a0:	ret    
  4026a1:	mov    QWORD PTR [rsp+0x70],r13
  4026a6:	mov    DWORD PTR [rsp+0x78],r12d
  4026ab:	lea    rbp,[rsp+0x70]
  4026b0:	jmp    0x402445
  4026b5:	mov    rcx,rbx
  4026b8:	mov    QWORD PTR [rsp+0x88],rbx
  4026c0:	mov    DWORD PTR [rsp+0x80],0x2
  4026cb:	mov    ebx,0x1
  4026d0:	call   0x42de30
  4026d5:	mov    DWORD PTR [rsp+0x90],eax
  4026dc:	test   sil,sil
  4026df:	je     0x4027b4
  4026e5:	mov    eax,ebx
  4026e7:	mov    rcx,rdi
  4026ea:	add    ebx,0x1
  4026ed:	lea    rsi,[rax+rax*2]
  4026f1:	shl    rsi,0x3
  4026f5:	mov    DWORD PTR [rsp+rsi*1+0x80],0x1
  402700:	mov    QWORD PTR [rsp+rsi*1+0x88],rdi
  402708:	call   0x42de30
  40270d:	mov    DWORD PTR [rsp+rsi*1+0x90],eax
  402714:	jmp    0x4025a0
  402719:	mov    rcx,QWORD PTR [rsp+0x68]
  40271e:	xor    r8d,r8d
  402721:	xor    edx,edx
  402723:	call   0x40da08
  402728:	test   eax,eax
  40272a:	mov    esi,eax
  40272c:	js     0x402848
  402732:	mov    rbp,QWORD PTR [rip+0x460a7]        # 0x4487e0
  402739:	call   rbp
  40273b:	lea    rdx,[rip+0x2fdae]        # 0x4324f0
  402742:	lea    rcx,[rax+0x60]
  402746:	mov    r8d,esi
  402749:	call   0x401600
  40274e:	lea    rdx,[rsp+0x40]
  402753:	lea    rcx,[rsp+0x50]
  402758:	lea    r8,[rsp+0x70]
  40275d:	mov    DWORD PTR [rsp+0x20],0x0
  402765:	mov    r9d,0x1
  40276b:	mov    DWORD PTR [rsp+0x48],esi
  40276f:	mov    QWORD PTR [rsp+0x70],r13
  402774:	mov    DWORD PTR [rsp+0x78],r12d
  402779:	call   0x40db30
  40277e:	test   eax,eax
  402780:	js     0x40278d
  402782:	cmp    DWORD PTR [rsp+0x40],0x0
  402787:	jne    0x402501
  40278d:	mov    ecx,eax
  40278f:	call   0x40dc88
  402794:	mov    rbx,rax
  402797:	call   rbp
  402799:	jmp    0x40282b
  40279e:	mov    QWORD PTR [rsp+0x60],0x0
  4027a7:	mov    DWORD PTR [rsp+0x44],0x0
  4027af:	jmp    0x40246d
  4027b4:	cmp    QWORD PTR [rsp+0x128],0x0
  4027bd:	jne    0x40255b
  4027c3:	jmp    0x4025a0
  4027c8:	mov    rax,QWORD PTR [rsp+0x50]
  4027cd:	sub    edx,0x1
  4027d0:	mov    DWORD PTR [rsp+0x48],0x1
  4027d8:	lea    rax,[rax+rdx*8]
  4027dc:	mov    QWORD PTR [rsp+0x58],rax
  4027e1:	jmp    0x4024b4
  4027e6:	lea    rax,[rip+0x173]        # 0x402960
  4027ed:	mov    r8d,DWORD PTR [rsp+0x40]
  4027f2:	mov    rdx,QWORD PTR [rsp+0x50]
  4027f7:	mov    rcx,QWORD PTR [rsp+0x68]
  4027fc:	mov    r9d,0x4
  402802:	mov    QWORD PTR [rsp+0x28],rax
  402807:	lea    rax,[rsp+0x4c]
  40280c:	mov    QWORD PTR [rsp+0x20],rax
  402811:	call   0x40d9e8
  402816:	jmp    0x4025de
  40281b:	mov    ecx,eax
  40281d:	call   0x40dc88
  402822:	mov    rbx,rax
  402825:	call   QWORD PTR [rip+0x45fb5]        # 0x4487e0
  40282b:	lea    rcx,[rax+0x60]
  40282f:	lea    rdx,[rip+0x2fce2]        # 0x432518
  402836:	mov    r8,rbx
  402839:	call   0x401600
  40283e:	mov    ecx,0x1
  402843:	call   0x42df60
  402848:	mov    ecx,eax
  40284a:	call   0x40dc88
  40284f:	mov    rbx,rax
  402852:	call   QWORD PTR [rip+0x45f88]        # 0x4487e0
  402858:	lea    rdx,[rip+0x2fc71]        # 0x4324d0
  40285f:	lea    rcx,[rax+0x60]
  402863:	mov    r8,rbx
  402866:	call   0x401600
  40286b:	mov    ecx,0x1
  402870:	call   0x42df60
  402875:	mov    ecx,eax
  402877:	call   0x40dc88
  40287c:	mov    rbx,rax
  40287f:	call   QWORD PTR [rip+0x45f5b]        # 0x4487e0
  402885:	lea    rdx,[rip+0x2fcdc]        # 0x432568
  40288c:	lea    rcx,[rax+0x60]
  402890:	mov    r8,rbx
  402893:	call   0x401600
  402898:	mov    ecx,0x1
  40289d:	call   0x42df60
  4028a2:	mov    ecx,eax
  4028a4:	call   0x40dc88
  4028a9:	mov    rbx,rax
  4028ac:	call   rbp
  4028ae:	lea    rdx,[rip+0x2fd03]        # 0x4325b8
  4028b5:	lea    rcx,[rax+0x60]
  4028b9:	mov    r8,rbx
  4028bc:	call   0x401600
  4028c1:	mov    ecx,0x1
  4028c6:	call   0x42df60
  4028cb:	mov    ecx,eax
  4028cd:	call   0x40dc88
  4028d2:	mov    rbx,rax
  4028d5:	call   QWORD PTR [rip+0x45f05]        # 0x4487e0
  4028db:	lea    rdx,[rip+0x2fbc6]        # 0x4324a8
  4028e2:	lea    rcx,[rax+0x60]
  4028e6:	mov    r8,rbx
  4028e9:	call   0x401600
  4028ee:	mov    ecx,0x1
  4028f3:	call   0x42df60
  4028f8:	mov    ecx,eax
  4028fa:	call   0x40dc88
  4028ff:	mov    rbx,rax
  402902:	call   QWORD PTR [rip+0x45ed8]        # 0x4487e0
  402908:	lea    rdx,[rip+0x2fc21]        # 0x432530
  40290f:	lea    rcx,[rax+0x60]
  402913:	mov    r8,rbx
  402916:	call   0x401600
  40291b:	mov    ecx,0x1
  402920:	call   0x42df60
  402925:	mov    ecx,eax
  402927:	call   0x40dc88
  40292c:	mov    rbx,rax
  40292f:	call   QWORD PTR [rip+0x45eab]        # 0x4487e0
  402935:	lea    rdx,[rip+0x2fc0c]        # 0x432548
  40293c:	lea    rcx,[rax+0x60]
  402940:	mov    r8,rbx
  402943:	call   0x401600
  402948:	mov    ecx,0x1
  40294d:	call   0x42df60
  402952:	nop
  402953:	nop    DWORD PTR [rax]
  402956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402960:	push   r15
  402962:	push   r14
  402964:	push   r13
  402966:	push   r12
  402968:	push   rbp
  402969:	push   rdi
  40296a:	push   rsi
  40296b:	push   rbx
  40296c:	sub    rsp,0x548
  402973:	lea    rbp,[rsp+0x28]
  402978:	lea    rbx,[rsp+0x340]
  402980:	mov    r14,rdx
  402983:	mov    rdi,r8
  402986:	mov    r13,rcx
  402989:	mov    r15d,r9d
  40298c:	mov    r8,rbp
  40298f:	mov    rdx,rbx
  402992:	mov    QWORD PTR [rsp+0x28],0x200
  40299b:	call   0x40db68
  4029a0:	test   eax,eax
  4029a2:	js     0x402b5c
  4029a8:	lea    r12,[rsp+0x20]
  4029ad:	lea    rsi,[rsp+0x140]
  4029b5:	mov    rcx,r13
  4029b8:	mov    QWORD PTR [rsp+0x20],0x200
  4029c1:	mov    r8,r12
  4029c4:	mov    rdx,rsi
  4029c7:	call   0x40db80
  4029cc:	test   eax,eax
  4029ce:	js     0x402bb6
  4029d4:	mov    rcx,QWORD PTR [rip+0x435ad]        # 0x445f88
  4029db:	lea    rdx,[rip+0x2fc5d]        # 0x43263f
  4029e2:	mov    r8,rsi
  4029e5:	call   0x401600
  4029ea:	mov    rcx,QWORD PTR [rip+0x43597]        # 0x445f88
  4029f1:	lea    rdx,[rip+0x2fc55]        # 0x43264d
  4029f8:	mov    r8,rbx
  4029fb:	call   0x401600
  402a00:	test   r14,r14
  402a03:	je     0x402a3a
  402a05:	mov    r8,rbp
  402a08:	mov    rdx,rbx
  402a0b:	mov    rcx,r14
  402a0e:	mov    QWORD PTR [rsp+0x28],0x200
  402a17:	call   0x40db80
  402a1c:	test   eax,eax
  402a1e:	js     0x402b5c
  402a24:	mov    rcx,QWORD PTR [rip+0x4355d]        # 0x445f88
  402a2b:	lea    rdx,[rip+0x2fc28]        # 0x43265a
  402a32:	mov    r8,rbx
  402a35:	call   0x401600
  402a3a:	test   rdi,rdi
  402a3d:	je     0x402ad1
  402a43:	mov    r8,rbp
  402a46:	mov    rdx,rbx
  402a49:	mov    rcx,rdi
  402a4c:	mov    QWORD PTR [rsp+0x28],0x200
  402a55:	call   0x40dc68
  402a5a:	test   eax,eax
  402a5c:	js     0x402b89
  402a62:	lea    rbp,[rsp+0x40]
  402a67:	xor    r9d,r9d
  402a6a:	mov    r8,r12
  402a6d:	mov    rcx,rdi
  402a70:	mov    QWORD PTR [rsp+0x20],0xff
  402a79:	mov    rdx,rbp
  402a7c:	call   0x40dc60
  402a81:	test   eax,eax
  402a83:	js     0x402b30
  402a89:	mov    rax,QWORD PTR [rsp+0x20]
  402a8e:	lea    rcx,[rsp+0x30]
  402a93:	mov    r8,r12
  402a96:	mov    rdx,rsi
  402a99:	mov    QWORD PTR [rsp+0x30],rbp
  402a9e:	mov    QWORD PTR [rsp+0x20],0x200
  402aa7:	mov    DWORD PTR [rsp+0x38],eax
  402aab:	call   0x40e090
  402ab0:	test   eax,eax
  402ab2:	js     0x402be3
  402ab8:	mov    rcx,QWORD PTR [rip+0x434c9]        # 0x445f88
  402abf:	lea    rdx,[rip+0x2fbea]        # 0x4326b0
  402ac6:	mov    r9,rbx
  402ac9:	mov    r8,rsi
  402acc:	call   0x401600
  402ad1:	mov    rcx,QWORD PTR [rip+0x434b0]        # 0x445f88
  402ad8:	lea    rdx,[rip+0x2fbf2]        # 0x4326d1
  402adf:	call   0x401600
  402ae4:	mov    rcx,QWORD PTR [rip+0x4349d]        # 0x445f88
  402aeb:	mov    edx,r15d
  402aee:	call   0x4022e0
  402af3:	mov    r9,QWORD PTR [rip+0x4348e]        # 0x445f88
  402afa:	lea    rcx,[rip+0x2fafc]        # 0x4325fd
  402b01:	mov    r8d,0x2
  402b07:	mov    edx,0x1
  402b0c:	call   0x42dee0
  402b11:	xor    eax,eax
  402b13:	add    rsp,0x548
  402b1a:	pop    rbx
  402b1b:	pop    rsi
  402b1c:	pop    rdi
  402b1d:	pop    rbp
  402b1e:	pop    r12
  402b20:	pop    r13
  402b22:	pop    r14
  402b24:	pop    r15
  402b26:	ret    
  402b27:	nop    WORD PTR [rax+rax*1+0x0]
  402b30:	movabs rax,0x7265626d756e6e75
  402b3a:	mov    BYTE PTR [rsp+0x14a],0x0
  402b42:	mov    QWORD PTR [rsp+0x140],rax
  402b4a:	mov    eax,0x6465
  402b4f:	mov    WORD PTR [rsp+0x148],ax
  402b57:	jmp    0x402ab8
  402b5c:	mov    ecx,eax
  402b5e:	call   0x40dc88
  402b63:	mov    rbx,rax
  402b66:	call   QWORD PTR [rip+0x45c74]        # 0x4487e0
  402b6c:	lea    rdx,[rip+0x2fa8d]        # 0x432600
  402b73:	lea    rcx,[rax+0x60]
  402b77:	mov    r8,rbx
  402b7a:	call   0x401600
  402b7f:	mov    ecx,0x1
  402b84:	call   0x42df60
  402b89:	mov    ecx,eax
  402b8b:	call   0x40dc88
  402b90:	mov    rbx,rax
  402b93:	call   QWORD PTR [rip+0x45c47]        # 0x4487e0
  402b99:	lea    rdx,[rip+0x2fad0]        # 0x432670
  402ba0:	lea    rcx,[rax+0x60]
  402ba4:	mov    r8,rbx
  402ba7:	call   0x401600
  402bac:	mov    ecx,0x1
  402bb1:	call   0x42df60
  402bb6:	mov    ecx,eax
  402bb8:	call   0x40dc88
  402bbd:	mov    rbx,rax
  402bc0:	call   QWORD PTR [rip+0x45c1a]        # 0x4487e0
  402bc6:	lea    rdx,[rip+0x2fa56]        # 0x432623
  402bcd:	lea    rcx,[rax+0x60]
  402bd1:	mov    r8,rbx
  402bd4:	call   0x401600
  402bd9:	mov    ecx,0x1
  402bde:	call   0x42df60
  402be3:	mov    ecx,eax
  402be5:	call   0x40dc88
  402bea:	mov    rbx,rax
  402bed:	call   QWORD PTR [rip+0x45bed]        # 0x4487e0
  402bf3:	lea    rdx,[rip+0x2fa99]        # 0x432693
  402bfa:	lea    rcx,[rax+0x60]
  402bfe:	mov    r8,rbx
  402c01:	call   0x401600
  402c06:	mov    ecx,0x1
  402c0b:	call   0x42df60
  402c10:	nop
  402c11:	nop    DWORD PTR [rax+rax*1+0x0]
  402c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c20:	push   rsi
  402c21:	push   rbx
  402c22:	sub    rsp,0x48
  402c26:	lea    rsi,[rsp+0x20]
  402c2b:	mov    QWORD PTR [rsp+0x60],rcx
  402c30:	mov    rbx,rdx
  402c33:	mov    QWORD PTR [rsp+0x20],0x0
  402c3c:	mov    rcx,rsi
  402c3f:	call   0x40dd28
  402c44:	test   eax,eax
  402c46:	js     0x402e4a
  402c4c:	cmp    QWORD PTR [rsp+0x60],0x0
  402c52:	je     0x402ce0
  402c58:	mov    rcx,rbx
  402c5b:	call   0x40a680
  402c60:	mov    rdx,QWORD PTR [rsp+0x60]
  402c65:	test   rdx,rdx
  402c68:	je     0x402c90
  402c6a:	mov    rcx,QWORD PTR [rsp+0x20]
  402c6f:	xor    r8d,r8d
  402c72:	call   0x40dd38
  402c77:	test   eax,eax
  402c79:	js     0x402e1d
  402c7f:	mov    rax,QWORD PTR [rsp+0x20]
  402c84:	add    rsp,0x48
  402c88:	pop    rbx
  402c89:	pop    rsi
  402c8a:	ret    
  402c8b:	nop    DWORD PTR [rax+rax*1+0x0]
  402c90:	test   rax,rax
  402c93:	je     0x402cf4
  402c95:	mov    rcx,QWORD PTR [rsp+0x20]
  402c9a:	xor    r8d,r8d
  402c9d:	mov    rdx,rax
  402ca0:	call   0x40dd30
  402ca5:	test   eax,eax
  402ca7:	jns    0x402c7f
  402ca9:	mov    ecx,eax
  402cab:	call   0x40dc88
  402cb0:	mov    rbx,rax
  402cb3:	call   QWORD PTR [rip+0x45b27]        # 0x4487e0
  402cb9:	lea    rdx,[rip+0x2fa58]        # 0x432718
  402cc0:	lea    rcx,[rax+0x60]
  402cc4:	mov    r8,rbx
  402cc7:	call   0x401600
  402ccc:	mov    ecx,0x1
  402cd1:	call   0x42df60
  402cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ce0:	mov    rdx,rbx
  402ce3:	xor    ecx,ecx
  402ce5:	call   0x40a470
  402cea:	mov    QWORD PTR [rsp+0x60],rax
  402cef:	jmp    0x402c58
  402cf4:	xor    ecx,ecx
  402cf6:	mov    rdx,rbx
  402cf9:	call   0x40a000
  402cfe:	test   rax,rax
  402d01:	je     0x402d50
  402d03:	mov    rcx,QWORD PTR [rsp+0x20]
  402d08:	xor    r9d,r9d
  402d0b:	xor    r8d,r8d
  402d0e:	mov    rdx,rax
  402d11:	call   0x40dd48
  402d16:	test   eax,eax
  402d18:	jns    0x402c7f
  402d1e:	mov    ecx,eax
  402d20:	call   0x40dc88
  402d25:	mov    rbx,rax
  402d28:	call   QWORD PTR [rip+0x45ab2]        # 0x4487e0
  402d2e:	lea    rdx,[rip+0x2f9ff]        # 0x432734
  402d35:	lea    rcx,[rax+0x60]
  402d39:	mov    r8,rbx
  402d3c:	call   0x401600
  402d41:	mov    ecx,0x1
  402d46:	call   0x42df60
  402d4b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d50:	mov    rcx,QWORD PTR [rsp+0x20]
  402d55:	call   0x40dd78
  402d5a:	xor    ecx,ecx
  402d5c:	mov    rdx,rbx
  402d5f:	call   0x40a9b0
  402d64:	test   rax,rax
  402d67:	mov    QWORD PTR [rsp+0x20],rax
  402d6c:	jne    0x402c84
  402d72:	mov    rcx,QWORD PTR [rip+0x43217]        # 0x445f90
  402d79:	lea    rdx,[rsp+0x28]
  402d7e:	call   0x415540
  402d83:	mov    rdx,QWORD PTR [rsp+0x28]
  402d88:	test   rax,rax
  402d8b:	mov    QWORD PTR [rsp+0x30],rax
  402d90:	mov    DWORD PTR [rsp+0x38],edx
  402d94:	je     0x402f3d
  402d9a:	mov    rcx,rsi
  402d9d:	call   0x40dd28
  402da2:	test   eax,eax
  402da4:	js     0x402e4a
  402daa:	mov    esi,DWORD PTR [rsp+0x38]
  402dae:	mov    rbx,QWORD PTR [rsp+0x30]
  402db3:	lea    r8,[rip+0x2f998]        # 0x432752
  402dba:	mov    r9d,0x10
  402dc0:	mov    rcx,rbx
  402dc3:	mov    rdx,rsi
  402dc6:	call   0x418320
  402dcb:	test   rax,rax
  402dce:	je     0x402e77
  402dd4:	lea    rcx,[rsp+0x60]
  402dd9:	call   0x40db40
  402dde:	test   eax,eax
  402de0:	js     0x402ee3
  402de6:	mov    rcx,QWORD PTR [rsp+0x60]
  402deb:	lea    rdx,[rsp+0x30]
  402df0:	mov    r8d,0x1
  402df6:	call   0x40db48
  402dfb:	test   eax,eax
  402dfd:	js     0x402f10
  402e03:	mov    rdx,QWORD PTR [rsp+0x60]
  402e08:	mov    rcx,QWORD PTR [rsp+0x20]
  402e0d:	xor    r8d,r8d
  402e10:	call   0x40dd38
  402e15:	test   eax,eax
  402e17:	jns    0x402c7f
  402e1d:	mov    ecx,eax
  402e1f:	call   0x40dc88
  402e24:	mov    rbx,rax
  402e27:	call   QWORD PTR [rip+0x459b3]        # 0x4487e0
  402e2d:	lea    rdx,[rip+0x2f8cc]        # 0x432700
  402e34:	lea    rcx,[rax+0x60]
  402e38:	mov    r8,rbx
  402e3b:	call   0x401600
  402e40:	mov    ecx,0x1
  402e45:	call   0x42df60
  402e4a:	mov    ecx,eax
  402e4c:	call   0x40dc88
  402e51:	mov    rbx,rax
  402e54:	call   QWORD PTR [rip+0x45986]        # 0x4487e0
  402e5a:	lea    rdx,[rip+0x2f88e]        # 0x4326ef
  402e61:	lea    rcx,[rax+0x60]
  402e65:	mov    r8,rbx
  402e68:	call   0x401600
  402e6d:	mov    ecx,0x1
  402e72:	call   0x42df60
  402e77:	lea    r8,[rip+0x2f8e6]        # 0x432764
  402e7e:	mov    r9d,0xa
  402e84:	mov    rdx,rsi
  402e87:	mov    rcx,rbx
  402e8a:	call   0x418320
  402e8f:	test   rax,rax
  402e92:	jne    0x402dd4
  402e98:	mov    r8d,DWORD PTR [rip+0x4019d]        # 0x44303c
  402e9f:	mov    rcx,QWORD PTR [rsp+0x20]
  402ea4:	lea    rdx,[rsp+0x30]
  402ea9:	call   0x40dd50
  402eae:	test   eax,eax
  402eb0:	jns    0x402c7f
  402eb6:	mov    ecx,eax
  402eb8:	call   0x40dc88
  402ebd:	mov    rbx,rax
  402ec0:	call   QWORD PTR [rip+0x4591a]        # 0x4487e0
  402ec6:	lea    rdx,[rip+0x2f8b2]        # 0x43277f
  402ecd:	lea    rcx,[rax+0x60]
  402ed1:	mov    r8,rbx
  402ed4:	call   0x401600
  402ed9:	mov    ecx,0x1
  402ede:	call   0x42df60
  402ee3:	mov    ecx,eax
  402ee5:	call   0x40dc88
  402eea:	mov    rbx,rax
  402eed:	call   QWORD PTR [rip+0x458ed]        # 0x4487e0
  402ef3:	lea    rdx,[rip+0x2f190]        # 0x43208a
  402efa:	lea    rcx,[rax+0x60]
  402efe:	mov    r8,rbx
  402f01:	call   0x401600
  402f06:	mov    ecx,0x1
  402f0b:	call   0x42df60
  402f10:	mov    ecx,eax
  402f12:	call   0x40dc88
  402f17:	mov    rbx,rax
  402f1a:	call   QWORD PTR [rip+0x458c0]        # 0x4487e0
  402f20:	lea    rdx,[rip+0x2f848]        # 0x43276f
  402f27:	lea    rcx,[rax+0x60]
  402f2b:	mov    r8,rbx
  402f2e:	call   0x401600
  402f33:	mov    ecx,0x1
  402f38:	call   0x42df60
  402f3d:	cmp    QWORD PTR [rip+0x4304b],0x0        # 0x445f90
  402f45:	lea    rax,[rip+0x2f78f]        # 0x4326db
  402f4c:	lea    rbx,[rip+0x2f78d]        # 0x4326e0
  402f53:	cmovne rbx,rax
  402f57:	call   QWORD PTR [rip+0x45883]        # 0x4487e0
  402f5d:	lea    rdx,[rip+0x2f7eb]        # 0x43274f
  402f64:	lea    rcx,[rax+0x60]
  402f68:	mov    r8,rbx
  402f6b:	call   0x401600
  402f70:	mov    ecx,0x1
  402f75:	call   0x42df60
  402f7a:	nop
  402f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  402f80:	push   rsi
  402f81:	push   rbx
  402f82:	sub    rsp,0x48
  402f86:	cmp    DWORD PTR [rip+0x400ab],0x1        # 0x443038
  402f8d:	mov    rsi,rcx
  402f90:	mov    rbx,rdx
  402f93:	je     0x403021
  402f99:	xor    edx,edx
  402f9b:	mov    rcx,rsi
  402f9e:	call   0x40dba0
  402fa3:	test   eax,eax
  402fa5:	mov    rcx,rbx
  402fa8:	js     0x403060
  402fae:	cmp    DWORD PTR [rip+0x40083],0x1        # 0x443038
  402fb5:	je     0x402fc1
  402fb7:	call   QWORD PTR [rip+0x45823]        # 0x4487e0
  402fbd:	lea    rcx,[rax+0x60]
  402fc1:	lea    rdx,[rip+0x2f7f2]        # 0x4327ba
  402fc8:	call   0x401600
  402fcd:	mov    rax,QWORD PTR [rip+0x3ab0c]        # 0x43dae0
  402fd4:	mov    rbx,QWORD PTR [rip+0x3aaf5]        # 0x43dad0
  402fdb:	lea    r9,[rsp+0x28]
  402fe0:	mov    edx,DWORD PTR [rip+0x40052]        # 0x443038
  402fe6:	mov    rcx,rsi
  402fe9:	mov    eax,DWORD PTR [rax]
  402feb:	mov    r8,QWORD PTR [rbx]
  402fee:	mov    QWORD PTR [rsp+0x28],rax
  402ff3:	call   0x40dbf0
  402ff8:	test   eax,eax
  402ffa:	js     0x403084
  403000:	mov    r9,QWORD PTR [rip+0x42f81]        # 0x445f88
  403007:	mov    r8,QWORD PTR [rsp+0x28]
  40300c:	mov    edx,0x1
  403011:	mov    rcx,QWORD PTR [rbx]
  403014:	call   0x42dee0
  403019:	nop
  40301a:	add    rsp,0x48
  40301e:	pop    rbx
  40301f:	pop    rsi
  403020:	ret    
  403021:	mov    edx,DWORD PTR [rip+0x40009]        # 0x443030
  403027:	lea    r8,[rsp+0x30]
  40302c:	call   0x40dbd8
  403031:	test   eax,eax
  403033:	js     0x4030b1
  403035:	mov    r8,QWORD PTR [rsp+0x30]
  40303a:	lea    rdx,[rip+0x2f425]        # 0x432466
  403041:	mov    rcx,rbx
  403044:	call   0x401600
  403049:	mov    rax,QWORD PTR [rip+0x3a9c0]        # 0x43da10
  403050:	mov    rcx,QWORD PTR [rsp+0x30]
  403055:	call   QWORD PTR [rax]
  403057:	jmp    0x402f99
  40305c:	nop    DWORD PTR [rax+0x0]
  403060:	cmp    DWORD PTR [rip+0x3ffd1],0x1        # 0x443038
  403067:	je     0x403073
  403069:	call   QWORD PTR [rip+0x45771]        # 0x4487e0
  40306f:	lea    rcx,[rax+0x60]
  403073:	lea    rdx,[rip+0x2f727]        # 0x4327a1
  40307a:	call   0x401600
  40307f:	jmp    0x402fcd
  403084:	mov    ecx,eax
  403086:	call   0x40dc88
  40308b:	mov    rbx,rax
  40308e:	call   QWORD PTR [rip+0x4574c]        # 0x4487e0
  403094:	lea    rdx,[rip+0x2f73a]        # 0x4327d5
  40309b:	lea    rcx,[rax+0x60]
  40309f:	mov    r8,rbx
  4030a2:	call   0x401600
  4030a7:	mov    ecx,0x1
  4030ac:	call   0x42df60
  4030b1:	mov    ecx,eax
  4030b3:	call   0x40dc88
  4030b8:	mov    rbx,rax
  4030bb:	call   QWORD PTR [rip+0x4571f]        # 0x4487e0
  4030c1:	lea    rdx,[rip+0x2f6ca]        # 0x432792
  4030c8:	lea    rcx,[rax+0x60]
  4030cc:	mov    r8,rbx
  4030cf:	call   0x401600
  4030d4:	mov    ecx,0x1
  4030d9:	call   0x42df60
  4030de:	nop
  4030df:	nop
  4030e0:	push   rsi
  4030e1:	push   rbx
  4030e2:	sub    rsp,0x28
  4030e6:	test   rcx,rcx
  4030e9:	je     0x403120
  4030eb:	lea    rdx,[rip+0x2f6f3]        # 0x4327e5
  4030f2:	mov    rbx,rcx
  4030f5:	mov    rsi,QWORD PTR [rip+0x457b4]        # 0x4488b0
  4030fc:	call   rsi
  4030fe:	test   eax,eax
  403100:	mov    edx,0x10
  403105:	jne    0x403110
  403107:	mov    eax,edx
  403109:	add    rsp,0x28
  40310d:	pop    rbx
  40310e:	pop    rsi
  40310f:	ret    
  403110:	lea    rdx,[rip+0x2f6d3]        # 0x4327ea
  403117:	mov    rcx,rbx
  40311a:	call   rsi
  40311c:	test   eax,eax
  40311e:	jne    0x403130
  403120:	mov    edx,0x2
  403125:	mov    eax,edx
  403127:	add    rsp,0x28
  40312b:	pop    rbx
  40312c:	pop    rsi
  40312d:	ret    
  40312e:	xchg   ax,ax
  403130:	lea    rdx,[rip+0x2f6bf]        # 0x4327f6
  403137:	mov    rcx,rbx
  40313a:	call   rsi
  40313c:	test   eax,eax
  40313e:	mov    edx,0x4
  403143:	je     0x403107
  403145:	lea    rdx,[rip+0x2f6b2]        # 0x4327fe
  40314c:	mov    rcx,rbx
  40314f:	call   rsi
  403151:	test   eax,eax
  403153:	mov    edx,0x20
  403158:	je     0x403107
  40315a:	lea    rdx,[rip+0x2f6a5]        # 0x432806
  403161:	mov    rcx,rbx
  403164:	call   rsi
  403166:	test   eax,eax
  403168:	mov    edx,0x40
  40316d:	je     0x403107
  40316f:	lea    rdx,[rip+0x2f698]        # 0x43280e
  403176:	mov    rcx,rbx
  403179:	call   rsi
  40317b:	test   eax,eax
  40317d:	mov    edx,0x80
  403182:	je     0x403107
  403184:	lea    rdx,[rip+0x2f68b]        # 0x432816
  40318b:	mov    rcx,rbx
  40318e:	call   rsi
  403190:	test   eax,eax
  403192:	jne    0x40319e
  403194:	mov    edx,0x8
  403199:	jmp    0x403107
  40319e:	call   QWORD PTR [rip+0x4563c]        # 0x4487e0
  4031a4:	lea    rdx,[rip+0x2f672]        # 0x43281d
  4031ab:	lea    rcx,[rax+0x60]
  4031af:	mov    r8,rbx
  4031b2:	call   0x401600
  4031b7:	mov    ecx,0x1
  4031bc:	call   0x42df60
  4031c1:	nop
  4031c2:	nop    DWORD PTR [rax+0x0]
  4031c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031d0:	push   rbx
  4031d1:	sub    rsp,0x30
  4031d5:	test   r8d,r8d
  4031d8:	mov    rbx,rdx
  4031db:	lea    r8,[rsp+0x20]
  4031e0:	je     0x403210
  4031e2:	mov    edx,DWORD PTR [rip+0x3fe48]        # 0x443030
  4031e8:	call   0x40db28
  4031ed:	test   eax,eax
  4031ef:	je     0x40321e
  4031f1:	call   QWORD PTR [rip+0x455e9]        # 0x4487e0
  4031f7:	add    rax,0x60
  4031fb:	cmp    rbx,rax
  4031fe:	je     0x40324f
  403200:	add    rsp,0x30
  403204:	pop    rbx
  403205:	ret    
  403206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403210:	mov    edx,0x2
  403215:	call   0x40db28
  40321a:	test   eax,eax
  40321c:	jne    0x4031f1
  40321e:	mov    r8,QWORD PTR [rsp+0x20]
  403223:	lea    rdx,[rip+0x2f23c]        # 0x432466
  40322a:	mov    rcx,rbx
  40322d:	call   0x401600
  403232:	mov    rax,QWORD PTR [rip+0x3a7d7]        # 0x43da10
  403239:	mov    rcx,QWORD PTR [rsp+0x20]
  40323e:	call   QWORD PTR [rax]
  403240:	call   QWORD PTR [rip+0x4559a]        # 0x4487e0
  403246:	add    rax,0x60
  40324a:	cmp    rbx,rax
  40324d:	jne    0x403200
  40324f:	mov    eax,DWORD PTR [rip+0x42d2b]        # 0x445f80
  403255:	test   eax,eax
  403257:	jne    0x403200
  403259:	lea    rcx,[rip+0x2f5d0]        # 0x432830
  403260:	xor    edx,edx
  403262:	call   0x410270
  403267:	test   eax,eax
  403269:	jne    0x403200
  40326b:	mov    ecx,0x1
  403270:	call   0x42df60
  403275:	nop
  403276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403280:	push   rdi
  403281:	push   rsi
  403282:	push   rbx
  403283:	sub    rsp,0x30
  403287:	mov    ebx,DWORD PTR [rip+0x3fda7]        # 0x443034
  40328d:	mov    rsi,rcx
  403290:	lea    rcx,[rsp+0x28]
  403295:	mov    rdi,rdx
  403298:	call   0x40da30
  40329d:	test   eax,eax
  40329f:	js     0x40336b
  4032a5:	mov    edx,DWORD PTR [rsi]
  4032a7:	mov    r8,QWORD PTR [rdi]
  4032aa:	mov    r9d,0x1
  4032b0:	mov    ecx,ebx
  4032b2:	call   0x40ad50
  4032b7:	mov    ecx,ebx
  4032b9:	mov    esi,eax
  4032bb:	call   0x40df60
  4032c0:	mov    rcx,QWORD PTR [rip+0x3fd81]        # 0x443048
  4032c7:	lea    rdx,[rip+0x2f59a]        # 0x432868
  4032ce:	mov    r9,rax
  4032d1:	mov    r8d,esi
  4032d4:	call   0x401600
  4032d9:	cmp    esi,0xff
  4032df:	jg     0x4032e6
  4032e1:	cmp    ebx,0x4
  4032e4:	je     0x403350
  4032e6:	cmp    esi,0x400
  4032ec:	jle    0x4032f3
  4032ee:	cmp    ebx,0x2
  4032f1:	je     0x403330
  4032f3:	mov    rcx,QWORD PTR [rsp+0x28]
  4032f8:	xor    r9d,r9d
  4032fb:	mov    r8d,esi
  4032fe:	mov    edx,ebx
  403300:	call   0x40da58
  403305:	test   eax,eax
  403307:	js     0x4033c5
  40330d:	mov    rcx,QWORD PTR [rsp+0x28]
  403312:	call   0x40da20
  403317:	test   eax,eax
  403319:	js     0x403398
  40331b:	mov    rax,QWORD PTR [rsp+0x28]
  403320:	add    rsp,0x30
  403324:	pop    rbx
  403325:	pop    rsi
  403326:	pop    rdi
  403327:	ret    
  403328:	nop    DWORD PTR [rax+rax*1+0x0]
  403330:	call   QWORD PTR [rip+0x454aa]        # 0x4487e0
  403336:	lea    rdx,[rip+0x2f5a3]        # 0x4328e0
  40333d:	lea    rcx,[rax+0x60]
  403341:	call   0x401600
  403346:	jmp    0x4032f3
  403348:	nop    DWORD PTR [rax+rax*1+0x0]
  403350:	call   QWORD PTR [rip+0x4548a]        # 0x4487e0
  403356:	lea    rdx,[rip+0x2f533]        # 0x432890
  40335d:	lea    rcx,[rax+0x60]
  403361:	call   0x401600
  403366:	jmp    0x4032e6
  40336b:	mov    ecx,eax
  40336d:	call   0x40dc88
  403372:	mov    rbx,rax
  403375:	call   QWORD PTR [rip+0x45465]        # 0x4487e0
  40337b:	lea    rdx,[rip+0x2f4d3]        # 0x432855
  403382:	lea    rcx,[rax+0x60]
  403386:	mov    r8,rbx
  403389:	call   0x401600
  40338e:	mov    ecx,0x1
  403393:	call   0x42df60
  403398:	mov    ecx,eax
  40339a:	call   0x40dc88
  40339f:	mov    rbx,rax
  4033a2:	call   QWORD PTR [rip+0x45438]        # 0x4487e0
  4033a8:	lea    rdx,[rip+0x2f5c1]        # 0x432970
  4033af:	lea    rcx,[rax+0x60]
  4033b3:	mov    r8,rbx
  4033b6:	call   0x401600
  4033bb:	mov    ecx,0x1
  4033c0:	call   0x42df60
  4033c5:	mov    ecx,eax
  4033c7:	call   0x40dc88
  4033cc:	mov    rbx,rax
  4033cf:	call   QWORD PTR [rip+0x4540b]        # 0x4487e0
  4033d5:	lea    rdx,[rip+0x2f57e]        # 0x43295a
  4033dc:	lea    rcx,[rax+0x60]
  4033e0:	mov    r8,rbx
  4033e3:	call   0x401600
  4033e8:	mov    ecx,0x1
  4033ed:	call   0x42df60
  4033f2:	nop
  4033f3:	nop    DWORD PTR [rax]
  4033f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403400:	push   r15
  403402:	push   r14
  403404:	push   r13
  403406:	push   r12
  403408:	push   rbp
  403409:	push   rdi
  40340a:	push   rsi
  40340b:	push   rbx
  40340c:	sub    rsp,0xf8
  403413:	lea    rdx,[rip+0x2f571]        # 0x43298b
  40341a:	mov    rsi,rcx
  40341d:	mov    rcx,QWORD PTR [rip+0x42b64]        # 0x445f88
  403424:	mov    DWORD PTR [rsp+0x6c],0x0
  40342c:	call   0x401600
  403431:	lea    rdx,[rsp+0x6c]
  403436:	mov    rcx,rsi
  403439:	call   0x40da48
  40343e:	mov    rcx,QWORD PTR [rip+0x42b43]        # 0x445f88
  403445:	lea    rdx,[rip+0x2f551]        # 0x43299d
  40344c:	mov    ebx,eax
  40344e:	call   0x401600
  403453:	mov    ecx,ebx
  403455:	call   0x40df60
  40345a:	mov    rcx,QWORD PTR [rip+0x42b27]        # 0x445f88
  403461:	lea    r8,[rip+0x2ebe1]        # 0x432049
  403468:	test   rax,rax
  40346b:	lea    rdx,[rip+0x2eff4]        # 0x432466
  403472:	mov    rdi,rax
  403475:	cmovne r8,rax
  403479:	call   0x401600
  40347e:	mov    rcx,rsi
  403481:	mov    ebp,DWORD PTR [rsp+0x6c]
  403485:	call   0x40da28
  40348a:	mov    ecx,eax
  40348c:	call   0x40dd00
  403491:	mov    rcx,QWORD PTR [rip+0x42af0]        # 0x445f88
  403498:	lea    rdx,[rip+0x2f519]        # 0x4329b8
  40349f:	mov    r8,rax
  4034a2:	mov    r9d,ebp
  4034a5:	call   0x401600
  4034aa:	cmp    ebx,0x1
  4034ad:	je     0x4035e5
  4034b3:	cmp    ebx,0x2
  4034b6:	je     0x403710
  4034bc:	cmp    ebx,0x4
  4034bf:	lea    rbp,[rsp+0xd0]
  4034c7:	je     0x4037d4
  4034cd:	mov    rcx,QWORD PTR [rip+0x42ab4]        # 0x445f88
  4034d4:	lea    rdx,[rip+0x2f577]        # 0x432a52
  4034db:	call   0x401600
  4034e0:	mov    rax,QWORD PTR [rip+0x3a5f9]        # 0x43dae0
  4034e7:	mov    rbx,QWORD PTR [rip+0x3a5e2]        # 0x43dad0
  4034ee:	xor    edx,edx
  4034f0:	mov    r9,rbp
  4034f3:	mov    rcx,rsi
  4034f6:	mov    eax,DWORD PTR [rax]
  4034f8:	mov    r8,QWORD PTR [rbx]
  4034fb:	mov    QWORD PTR [rsp+0xd0],rax
  403503:	call   0x40da50
  403508:	test   eax,eax
  40350a:	js     0x4035c0
  403510:	mov    rdx,QWORD PTR [rsp+0xd0]
  403518:	mov    rcx,QWORD PTR [rbx]
  40351b:	call   0x40be60
  403520:	mov    rcx,QWORD PTR [rip+0x42a61]        # 0x445f88
  403527:	lea    rdx,[rip+0x2f54b]        # 0x432a79
  40352e:	mov    r8,rax
  403531:	call   0x401600
  403536:	lea    rax,[rsp+0xe0]
  40353e:	mov    r8d,DWORD PTR [rsp+0x6c]
  403543:	mov    rdx,rdi
  403546:	mov    ecx,0x1
  40354b:	mov    QWORD PTR [rsp+0x28],rax
  403550:	mov    rax,QWORD PTR [rsp+0xd0]
  403558:	mov    QWORD PTR [rsp+0x20],rax
  40355d:	mov    r9,QWORD PTR [rbx]
  403560:	call   0x40dd18
  403565:	test   eax,eax
  403567:	js     0x403595
  403569:	mov    rcx,QWORD PTR [rip+0x42a18]        # 0x445f88
  403570:	mov    r8,QWORD PTR [rsp+0xe0]
  403578:	lea    rdx,[rip+0x2f50d]        # 0x432a8c
  40357f:	call   0x401600
  403584:	mov    rax,QWORD PTR [rip+0x3a485]        # 0x43da10
  40358b:	mov    rcx,QWORD PTR [rsp+0xe0]
  403593:	call   QWORD PTR [rax]
  403595:	mov    rcx,QWORD PTR [rip+0x429ec]        # 0x445f88
  40359c:	lea    rdx,[rip+0x2f4af]        # 0x432a52
  4035a3:	call   0x401600
  4035a8:	nop
  4035a9:	add    rsp,0xf8
  4035b0:	pop    rbx
  4035b1:	pop    rsi
  4035b2:	pop    rdi
  4035b3:	pop    rbp
  4035b4:	pop    r12
  4035b6:	pop    r13
  4035b8:	pop    r14
  4035ba:	pop    r15
  4035bc:	ret    
  4035bd:	nop    DWORD PTR [rax]
  4035c0:	mov    ecx,eax
  4035c2:	call   0x40dc88
  4035c7:	mov    rbx,rax
  4035ca:	call   QWORD PTR [rip+0x45210]        # 0x4487e0
  4035d0:	lea    rdx,[rip+0x2f481]        # 0x432a58
  4035d7:	lea    rcx,[rax+0x60]
  4035db:	mov    r8,rbx
  4035de:	call   0x401600
  4035e3:	jmp    0x403595
  4035e5:	lea    r11,[rsp+0xe0]
  4035ed:	lea    r10,[rsp+0xc0]
  4035f5:	lea    r13,[rsp+0x90]
  4035fd:	lea    r12,[rsp+0x80]
  403605:	lea    rbx,[rsp+0x70]
  40360a:	lea    rbp,[rsp+0xd0]
  403612:	lea    r15,[rsp+0xb0]
  40361a:	lea    r14,[rsp+0xa0]
  403622:	mov    QWORD PTR [rsp+0x40],r11
  403627:	mov    QWORD PTR [rsp+0x30],r10
  40362c:	mov    QWORD PTR [rsp+0x38],rbp
  403631:	mov    r9,r13
  403634:	mov    QWORD PTR [rsp+0x28],r15
  403639:	mov    QWORD PTR [rsp+0x20],r14
  40363e:	mov    r8,r12
  403641:	mov    rdx,rbx
  403644:	mov    rcx,rsi
  403647:	mov    QWORD PTR [rsp+0x58],r11
  40364c:	mov    QWORD PTR [rsp+0x50],r10
  403651:	call   0x40da60
  403656:	test   eax,eax
  403658:	mov    r10,QWORD PTR [rsp+0x50]
  40365d:	mov    r11,QWORD PTR [rsp+0x58]
  403662:	js     0x403882
  403668:	mov    rax,QWORD PTR [rip+0x3a381]        # 0x43d9f0
  40366f:	mov    rcx,QWORD PTR [rip+0x42912]        # 0x445f88
  403676:	mov    rdx,rbx
  403679:	mov    r9,r13
  40367c:	mov    r8,r12
  40367f:	mov    rax,QWORD PTR [rax+0x78]
  403683:	test   BYTE PTR [rax+0xd10],0xf
  40368a:	mov    QWORD PTR [rsp+0x40],r11
  40368f:	mov    QWORD PTR [rsp+0x30],r10
  403694:	mov    QWORD PTR [rsp+0x38],rbp
  403699:	mov    QWORD PTR [rsp+0x28],r15
  40369e:	mov    QWORD PTR [rsp+0x20],r14
  4036a3:	setne  al
  4036a6:	movzx  eax,al
  4036a9:	mov    DWORD PTR [rsp+0x48],eax
  4036ad:	call   0x40b0b0
  4036b2:	mov    rbx,QWORD PTR [rip+0x3a357]        # 0x43da10
  4036b9:	mov    rcx,QWORD PTR [rsp+0x70]
  4036be:	call   QWORD PTR [rbx]
  4036c0:	mov    rcx,QWORD PTR [rsp+0x80]
  4036c8:	call   QWORD PTR [rbx]
  4036ca:	mov    rcx,QWORD PTR [rsp+0x90]
  4036d2:	call   QWORD PTR [rbx]
  4036d4:	mov    rcx,QWORD PTR [rsp+0xa0]
  4036dc:	call   QWORD PTR [rbx]
  4036de:	mov    rcx,QWORD PTR [rsp+0xb0]
  4036e6:	call   QWORD PTR [rbx]
  4036e8:	mov    rcx,QWORD PTR [rsp+0xc0]
  4036f0:	call   QWORD PTR [rbx]
  4036f2:	mov    rcx,QWORD PTR [rsp+0xd0]
  4036fa:	call   QWORD PTR [rbx]
  4036fc:	mov    rcx,QWORD PTR [rsp+0xe0]
  403704:	call   QWORD PTR [rbx]
  403706:	jmp    0x4034cd
  40370b:	nop    DWORD PTR [rax+rax*1+0x0]
  403710:	lea    r14,[rsp+0xc0]
  403718:	lea    r13,[rsp+0xb0]
  403720:	lea    r12,[rsp+0xa0]
  403728:	lea    rbx,[rsp+0xe0]
  403730:	lea    rbp,[rsp+0xd0]
  403738:	mov    rcx,rsi
  40373b:	mov    r9,r14
  40373e:	mov    r8,r13
  403741:	mov    rdx,r12
  403744:	mov    QWORD PTR [rsp+0x28],rbx
  403749:	mov    QWORD PTR [rsp+0x20],rbp
  40374e:	call   0x40da78
  403753:	test   eax,eax
  403755:	js     0x4038b0
  40375b:	mov    rax,QWORD PTR [rip+0x3a28e]        # 0x43d9f0
  403762:	mov    rcx,QWORD PTR [rip+0x4281f]        # 0x445f88
  403769:	mov    rdx,rbx
  40376c:	mov    r9,r12
  40376f:	mov    r8,rbp
  403772:	mov    rax,QWORD PTR [rax+0x78]
  403776:	test   BYTE PTR [rax+0xd10],0xf
  40377d:	mov    QWORD PTR [rsp+0x28],r14
  403782:	mov    QWORD PTR [rsp+0x20],r13
  403787:	setne  al
  40378a:	movzx  eax,al
  40378d:	mov    DWORD PTR [rsp+0x30],eax
  403791:	call   0x40adf0
  403796:	mov    rbx,QWORD PTR [rip+0x3a273]        # 0x43da10
  40379d:	mov    rcx,QWORD PTR [rsp+0xe0]
  4037a5:	call   QWORD PTR [rbx]
  4037a7:	mov    rcx,QWORD PTR [rsp+0xd0]
  4037af:	call   QWORD PTR [rbx]
  4037b1:	mov    rcx,QWORD PTR [rsp+0xa0]
  4037b9:	call   QWORD PTR [rbx]
  4037bb:	mov    rcx,QWORD PTR [rsp+0xb0]
  4037c3:	call   QWORD PTR [rbx]
  4037c5:	mov    rcx,QWORD PTR [rsp+0xc0]
  4037cd:	call   QWORD PTR [rbx]
  4037cf:	jmp    0x4034cd
  4037d4:	lea    r12,[rsp+0xc0]
  4037dc:	lea    rbx,[rsp+0xe0]
  4037e4:	lea    rdx,[rsp+0xb0]
  4037ec:	mov    r8,rbp
  4037ef:	mov    rcx,rsi
  4037f2:	mov    QWORD PTR [rsp+0x20],rbx
  4037f7:	mov    r9,r12
  4037fa:	call   0x40da70
  4037ff:	test   eax,eax
  403801:	js     0x4038e0
  403807:	mov    ecx,DWORD PTR [rsp+0xb0]
  40380e:	call   0x40e0d8
  403813:	mov    rdi,rax
  403816:	mov    rax,QWORD PTR [rip+0x3a1d3]        # 0x43d9f0
  40381d:	mov    edx,DWORD PTR [rsp+0xb0]
  403824:	mov    rcx,QWORD PTR [rip+0x4275d]        # 0x445f88
  40382b:	mov    r8,rbx
  40382e:	mov    r9,rbp
  403831:	mov    DWORD PTR [rsp+0x6c],0x0
  403839:	mov    rax,QWORD PTR [rax+0x78]
  40383d:	test   BYTE PTR [rax+0xd10],0xf
  403844:	mov    QWORD PTR [rsp+0x20],r12
  403849:	setne  al
  40384c:	movzx  eax,al
  40384f:	mov    DWORD PTR [rsp+0x28],eax
  403853:	call   0x40afd0
  403858:	mov    rbx,QWORD PTR [rip+0x3a1b1]        # 0x43da10
  40385f:	mov    rcx,QWORD PTR [rsp+0xd0]
  403867:	call   QWORD PTR [rbx]
  403869:	mov    rcx,QWORD PTR [rsp+0xc0]
  403871:	call   QWORD PTR [rbx]
  403873:	mov    rcx,QWORD PTR [rsp+0xe0]
  40387b:	call   QWORD PTR [rbx]
  40387d:	jmp    0x4034cd
  403882:	mov    ecx,eax
  403884:	call   0x40dc88
  403889:	mov    rbx,rax
  40388c:	call   QWORD PTR [rip+0x44f4e]        # 0x4487e0
  403892:	lea    rdx,[rip+0x2f147]        # 0x4329e0
  403899:	lea    rcx,[rax+0x60]
  40389d:	mov    r8,rbx
  4038a0:	call   0x401600
  4038a5:	jmp    0x4034cd
  4038aa:	nop    WORD PTR [rax+rax*1+0x0]
  4038b0:	mov    ecx,eax
  4038b2:	call   0x40dc88
  4038b7:	mov    rbx,rax
  4038ba:	call   QWORD PTR [rip+0x44f20]        # 0x4487e0
  4038c0:	lea    rdx,[rip+0x2f141]        # 0x432a08
  4038c7:	lea    rcx,[rax+0x60]
  4038cb:	mov    r8,rbx
  4038ce:	call   0x401600
  4038d3:	jmp    0x4034cd
  4038d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4038e0:	mov    ecx,eax
  4038e2:	call   0x40dc88
  4038e7:	mov    rbx,rax
  4038ea:	call   QWORD PTR [rip+0x44ef0]        # 0x4487e0
  4038f0:	lea    rdx,[rip+0x2f139]        # 0x432a30
  4038f7:	lea    rcx,[rax+0x60]
  4038fb:	mov    r8,rbx
  4038fe:	call   0x401600
  403903:	jmp    0x4034cd
  403908:	nop    DWORD PTR [rax+rax*1+0x0]
  403910:	push   rdi
  403911:	push   rsi
  403912:	push   rbx
  403913:	sub    rsp,0x40
  403917:	test   rdx,rdx
  40391a:	je     0x40397f
  40391c:	mov    eax,DWORD PTR [rcx+0x18]
  40391f:	mov    rsi,rdx
  403922:	mov    rbx,rcx
  403925:	test   eax,eax
  403927:	jne    0x403990
  403929:	mov    edx,DWORD PTR [rip+0x3f709]        # 0x443038
  40392f:	cmp    edx,0x1
  403932:	je     0x403a30
  403938:	mov    rax,QWORD PTR [rip+0x3a1a1]        # 0x43dae0
  40393f:	mov    rbx,QWORD PTR [rip+0x3a18a]        # 0x43dad0
  403946:	lea    r9,[rsp+0x38]
  40394b:	mov    rcx,rsi
  40394e:	mov    eax,DWORD PTR [rax]
  403950:	mov    r8,QWORD PTR [rbx]
  403953:	mov    QWORD PTR [rsp+0x38],rax
  403958:	call   0x40da80
  40395d:	test   eax,eax
  40395f:	js     0x403a43
  403965:	mov    r9,QWORD PTR [rip+0x4261c]        # 0x445f88
  40396c:	mov    r8,QWORD PTR [rsp+0x38]
  403971:	mov    edx,0x1
  403976:	mov    rcx,QWORD PTR [rbx]
  403979:	call   0x42dee0
  40397e:	nop
  40397f:	add    rsp,0x40
  403983:	pop    rbx
  403984:	pop    rsi
  403985:	pop    rdi
  403986:	ret    
  403987:	nop    WORD PTR [rax+rax*1+0x0]
  403990:	lea    rdx,[rsp+0x34]
  403995:	xor    r8d,r8d
  403998:	mov    DWORD PTR [rsp+0x34],0x0
  4039a0:	call   0x409e60
  4039a5:	mov    rcx,QWORD PTR [rbx+0x68]
  4039a9:	mov    rdi,rax
  4039ac:	call   0x4030e0
  4039b1:	or     eax,DWORD PTR [rsp+0x34]
  4039b5:	mov    rbx,QWORD PTR [rip+0x3a114]        # 0x43dad0
  4039bc:	mov    r8,rdi
  4039bf:	mov    edx,DWORD PTR [rip+0x3f673]        # 0x443038
  4039c5:	mov    rcx,rsi
  4039c8:	mov    r9d,eax
  4039cb:	mov    DWORD PTR [rsp+0x34],eax
  4039cf:	mov    rax,QWORD PTR [rip+0x3a10a]        # 0x43dae0
  4039d6:	mov    eax,DWORD PTR [rax]
  4039d8:	mov    QWORD PTR [rsp+0x38],rax
  4039dd:	lea    rax,[rsp+0x38]
  4039e2:	mov    QWORD PTR [rsp+0x28],rax
  4039e7:	mov    rax,QWORD PTR [rbx]
  4039ea:	mov    QWORD PTR [rsp+0x20],rax
  4039ef:	call   0x40da68
  4039f4:	test   eax,eax
  4039f6:	jns    0x403965
  4039fc:	mov    ecx,eax
  4039fe:	call   0x40dc88
  403a03:	mov    rbx,rax
  403a06:	call   QWORD PTR [rip+0x44dd4]        # 0x4487e0
  403a0c:	lea    rdx,[rip+0x2f0a9]        # 0x432abc
  403a13:	lea    rcx,[rax+0x60]
  403a17:	mov    r8,rbx
  403a1a:	call   0x401600
  403a1f:	mov    ecx,0x1
  403a24:	call   0x42df60
  403a29:	nop    DWORD PTR [rax+0x0]
  403a30:	mov    rcx,rsi
  403a33:	call   0x403400
  403a38:	mov    edx,DWORD PTR [rip+0x3f5fa]        # 0x443038
  403a3e:	jmp    0x403938
  403a43:	mov    ecx,eax
  403a45:	call   0x40dc88
  403a4a:	mov    rbx,rax
  403a4d:	call   QWORD PTR [rip+0x44d8d]        # 0x4487e0
  403a53:	lea    rdx,[rip+0x2f04f]        # 0x432aa9
  403a5a:	lea    rcx,[rax+0x60]
  403a5e:	mov    r8,rbx
  403a61:	call   0x401600
  403a66:	mov    ecx,0x1
  403a6b:	call   0x42df60
  403a70:	nop
  403a71:	nop    DWORD PTR [rax+rax*1+0x0]
  403a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a80:	push   rbx
  403a81:	sub    rsp,0x30
  403a85:	mov    rbx,rcx
  403a88:	mov    rcx,rdx
  403a8b:	lea    rdx,[rsp+0x20]
  403a90:	call   0x40e088
  403a95:	test   eax,eax
  403a97:	js     0x403ac9
  403a99:	mov    r9,QWORD PTR [rsp+0x20]
  403a9e:	mov    rcx,QWORD PTR [rip+0x424e3]        # 0x445f88
  403aa5:	lea    rdx,[rip+0x2f042]        # 0x432aee
  403aac:	mov    r8,rbx
  403aaf:	call   0x401600
  403ab4:	mov    rcx,QWORD PTR [rsp+0x20]
  403ab9:	mov    rax,QWORD PTR [rip+0x39f50]        # 0x43da10
  403ac0:	call   QWORD PTR [rax]
  403ac2:	nop
  403ac3:	add    rsp,0x30
  403ac7:	pop    rbx
  403ac8:	ret    
  403ac9:	mov    ecx,eax
  403acb:	call   0x40dc88
  403ad0:	mov    rbx,rax
  403ad3:	call   QWORD PTR [rip+0x44d07]        # 0x4487e0
  403ad9:	lea    rdx,[rip+0x2eff6]        # 0x432ad6
  403ae0:	lea    rcx,[rax+0x60]
  403ae4:	mov    r8,rbx
  403ae7:	call   0x401600
  403aec:	mov    ecx,0x1
  403af1:	call   0x42df60
  403af6:	nop
  403af7:	nop    WORD PTR [rax+rax*1+0x0]
  403b00:	push   rsi
  403b01:	push   rbx
  403b02:	sub    rsp,0x48
  403b06:	lea    rdx,[rip+0x2efeb]        # 0x432af8
  403b0d:	mov    rsi,rcx
  403b10:	mov    rcx,QWORD PTR [rip+0x3f531]        # 0x443048
  403b17:	call   0x401600
  403b1c:	lea    rcx,[rsp+0x30]
  403b21:	xor    r8d,r8d
  403b24:	xor    edx,edx
  403b26:	mov    r9,rsi
  403b29:	call   0x401660
  403b2e:	cmp    QWORD PTR [rsp+0x30],0x0
  403b34:	mov    rbx,rax
  403b37:	je     0x403bf3
  403b3d:	mov    rcx,rbx
  403b40:	call   0x410450
  403b45:	mov    rdx,QWORD PTR [rip+0x3f4fc]        # 0x443048
  403b4c:	xor    r8d,r8d
  403b4f:	mov    rcx,rbx
  403b52:	call   0x4031d0
  403b57:	mov    rcx,QWORD PTR [rip+0x3f4ea]        # 0x443048
  403b5e:	lea    rdx,[rip+0x2efbc]        # 0x432b21
  403b65:	call   0x401600
  403b6a:	mov    rcx,rbx
  403b6d:	call   0x402160
  403b72:	mov    r8,QWORD PTR [rsp+0x30]
  403b77:	mov    r9d,eax
  403b7a:	mov    DWORD PTR [rsp+0x20],0x0
  403b82:	mov    rdx,rbx
  403b85:	mov    rcx,rbx
  403b88:	call   0x40db20
  403b8d:	test   eax,eax
  403b8f:	js     0x403c0a
  403b91:	mov    rax,QWORD PTR [rip+0x39f48]        # 0x43dae0
  403b98:	mov    rsi,QWORD PTR [rip+0x39f31]        # 0x43dad0
  403b9f:	lea    r9,[rsp+0x38]
  403ba4:	mov    edx,DWORD PTR [rip+0x3f48e]        # 0x443038
  403baa:	mov    rcx,rbx
  403bad:	mov    eax,DWORD PTR [rax]
  403baf:	mov    r8,QWORD PTR [rsi]
  403bb2:	mov    QWORD PTR [rsp+0x38],rax
  403bb7:	call   0x40db88
  403bbc:	test   eax,eax
  403bbe:	js     0x403c37
  403bc0:	mov    r9,QWORD PTR [rip+0x423c1]        # 0x445f88
  403bc7:	mov    r8,QWORD PTR [rsp+0x38]
  403bcc:	mov    edx,0x1
  403bd1:	mov    rcx,QWORD PTR [rsi]
  403bd4:	call   0x42dee0
  403bd9:	mov    rcx,rbx
  403bdc:	call   0x40db90
  403be1:	mov    rcx,QWORD PTR [rsp+0x30]
  403be6:	call   0x40ddc8
  403beb:	nop
  403bec:	add    rsp,0x48
  403bf0:	pop    rbx
  403bf1:	pop    rsi
  403bf2:	ret    
  403bf3:	mov    rdx,rsi
  403bf6:	mov    ecx,0x1
  403bfb:	call   0x40a000
  403c00:	mov    QWORD PTR [rsp+0x30],rax
  403c05:	jmp    0x403b3d
  403c0a:	mov    ecx,eax
  403c0c:	call   0x40dc88
  403c11:	mov    rbx,rax
  403c14:	call   QWORD PTR [rip+0x44bc6]        # 0x4487e0
  403c1a:	lea    rdx,[rip+0x2ef1a]        # 0x432b3b
  403c21:	lea    rcx,[rax+0x60]
  403c25:	mov    r8,rbx
  403c28:	call   0x401600
  403c2d:	mov    ecx,0x1
  403c32:	call   0x42df60
  403c37:	mov    ecx,eax
  403c39:	call   0x40dc88
  403c3e:	mov    rbx,rax
  403c41:	call   QWORD PTR [rip+0x44b99]        # 0x4487e0
  403c47:	lea    rdx,[rip+0x2eefb]        # 0x432b49
  403c4e:	lea    rcx,[rax+0x60]
  403c52:	mov    r8,rbx
  403c55:	call   0x401600
  403c5a:	mov    ecx,0x1
  403c5f:	call   0x42df60
  403c64:	nop
  403c65:	nop
  403c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c70:	push   rsi
  403c71:	push   rbx
  403c72:	sub    rsp,0x78
  403c76:	mov    rcx,QWORD PTR [rip+0x42313]        # 0x445f90
  403c7d:	lea    rbx,[rsp+0x48]
  403c82:	mov    rdx,rbx
  403c85:	call   0x415540
  403c8a:	mov    rdx,QWORD PTR [rsp+0x48]
  403c8f:	test   rax,rax
  403c92:	mov    QWORD PTR [rsp+0x50],rax
  403c97:	mov    DWORD PTR [rsp+0x58],edx
  403c9b:	je     0x403e51
  403ca1:	lea    rcx,[rsp+0x40]
  403ca6:	call   0x40e028
  403cab:	test   eax,eax
  403cad:	js     0x403ebb
  403cb3:	mov    r8d,DWORD PTR [rip+0x3f382]        # 0x44303c
  403cba:	mov    rcx,QWORD PTR [rsp+0x40]
  403cbf:	lea    rdx,[rsp+0x50]
  403cc4:	call   0x40e030
  403cc9:	test   eax,eax
  403ccb:	js     0x403e8e
  403cd1:	mov    rcx,QWORD PTR [rsp+0x50]
  403cd6:	call   0x42df08
  403cdb:	cmp    DWORD PTR [rip+0x3f356],0x1        # 0x443038
  403ce2:	je     0x403de0
  403ce8:	mov    rcx,QWORD PTR [rsp+0x40]
  403ced:	lea    r8,[rsp+0x3c]
  403cf2:	xor    edx,edx
  403cf4:	call   0x40e018
  403cf9:	test   eax,eax
  403cfb:	js     0x403ee8
  403d01:	mov    r8d,DWORD PTR [rsp+0x3c]
  403d06:	test   r8b,0x2
  403d0a:	jne    0x403d90
  403d10:	mov    eax,DWORD PTR [rip+0x3f322]        # 0x443038
  403d16:	test   eax,eax
  403d18:	je     0x403db2
  403d1e:	mov    rcx,QWORD PTR [rip+0x42263]        # 0x445f88
  403d25:	lea    rdx,[rip+0x2ee9c]        # 0x432bc8
  403d2c:	call   0x401600
  403d31:	mov    rax,QWORD PTR [rip+0x39da8]        # 0x43dae0
  403d38:	mov    rsi,QWORD PTR [rip+0x39d91]        # 0x43dad0
  403d3f:	mov    r9,rbx
  403d42:	mov    edx,DWORD PTR [rip+0x3f2f0]        # 0x443038
  403d48:	mov    rcx,QWORD PTR [rsp+0x40]
  403d4d:	mov    eax,DWORD PTR [rax]
  403d4f:	mov    r8,QWORD PTR [rsi]
  403d52:	mov    QWORD PTR [rsp+0x48],rax
  403d57:	call   0x40e038
  403d5c:	test   eax,eax
  403d5e:	js     0x403e24
  403d64:	mov    r8,QWORD PTR [rsi]
  403d67:	mov    rcx,QWORD PTR [rip+0x4221a]        # 0x445f88
  403d6e:	lea    rdx,[rip+0x2e6f1]        # 0x432466
  403d75:	call   0x401600
  403d7a:	mov    rcx,QWORD PTR [rsp+0x40]
  403d7f:	call   0x40e040
  403d84:	nop
  403d85:	add    rsp,0x78
  403d89:	pop    rbx
  403d8a:	pop    rsi
  403d8b:	ret    
  403d8c:	nop    DWORD PTR [rax+0x0]
  403d90:	mov    edx,DWORD PTR [rip+0x3f2a2]        # 0x443038
  403d96:	test   edx,edx
  403d98:	je     0x403dd0
  403d9a:	mov    rcx,QWORD PTR [rip+0x421e7]        # 0x445f88
  403da1:	lea    rdx,[rip+0x2edf8]        # 0x432ba0
  403da8:	call   0x401600
  403dad:	jmp    0x403d31
  403db2:	mov    DWORD PTR [rsp+0x2c],r8d
  403db7:	call   QWORD PTR [rip+0x44a23]        # 0x4487e0
  403dbd:	mov    r8d,DWORD PTR [rsp+0x2c]
  403dc2:	lea    rcx,[rax+0x60]
  403dc6:	jmp    0x403d25
  403dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  403dd0:	call   QWORD PTR [rip+0x44a0a]        # 0x4487e0
  403dd6:	lea    rcx,[rax+0x60]
  403dda:	jmp    0x403da1
  403ddc:	nop    DWORD PTR [rax+0x0]
  403de0:	mov    rcx,QWORD PTR [rsp+0x40]
  403de5:	lea    r8,[rsp+0x60]
  403dea:	xor    edx,edx
  403dec:	call   0x40e020
  403df1:	test   eax,eax
  403df3:	jne    0x403ce8
  403df9:	mov    r8,QWORD PTR [rsp+0x60]
  403dfe:	mov    rcx,QWORD PTR [rip+0x42183]        # 0x445f88
  403e05:	lea    rdx,[rip+0x2e65a]        # 0x432466
  403e0c:	call   0x401600
  403e11:	mov    rax,QWORD PTR [rip+0x39bf8]        # 0x43da10
  403e18:	mov    rcx,QWORD PTR [rsp+0x60]
  403e1d:	call   QWORD PTR [rax]
  403e1f:	jmp    0x403ce8
  403e24:	mov    ecx,eax
  403e26:	call   0x40dc88
  403e2b:	mov    rbx,rax
  403e2e:	call   QWORD PTR [rip+0x449ac]        # 0x4487e0
  403e34:	lea    rdx,[rip+0x2edb4]        # 0x432bef
  403e3b:	lea    rcx,[rax+0x60]
  403e3f:	mov    r8,rbx
  403e42:	call   0x401600
  403e47:	mov    ecx,0x1
  403e4c:	call   0x42df60
  403e51:	cmp    QWORD PTR [rip+0x42137],0x0        # 0x445f90
  403e59:	lea    rax,[rip+0x2e87b]        # 0x4326db
  403e60:	lea    rbx,[rip+0x2e879]        # 0x4326e0
  403e67:	cmovne rbx,rax
  403e6b:	call   QWORD PTR [rip+0x4496f]        # 0x4487e0
  403e71:	lea    rdx,[rip+0x2e8d7]        # 0x43274f
  403e78:	lea    rcx,[rax+0x60]
  403e7c:	mov    r8,rbx
  403e7f:	call   0x401600
  403e84:	mov    ecx,0x1
  403e89:	call   0x42df60
  403e8e:	mov    ecx,eax
  403e90:	call   0x40dc88
  403e95:	mov    rbx,rax
  403e98:	call   QWORD PTR [rip+0x44942]        # 0x4487e0
  403e9e:	lea    rdx,[rip+0x2ecca]        # 0x432b6f
  403ea5:	lea    rcx,[rax+0x60]
  403ea9:	mov    r8,rbx
  403eac:	call   0x401600
  403eb1:	mov    ecx,0x1
  403eb6:	call   0x42df60
  403ebb:	mov    ecx,eax
  403ebd:	call   0x40dc88
  403ec2:	mov    rbx,rax
  403ec5:	call   QWORD PTR [rip+0x44915]        # 0x4487e0
  403ecb:	lea    rdx,[rip+0x2ec87]        # 0x432b59
  403ed2:	lea    rcx,[rax+0x60]
  403ed6:	mov    r8,rbx
  403ed9:	call   0x401600
  403ede:	mov    ecx,0x1
  403ee3:	call   0x42df60
  403ee8:	mov    ecx,eax
  403eea:	call   0x40dc88
  403eef:	mov    rbx,rax
  403ef2:	call   QWORD PTR [rip+0x448e8]        # 0x4487e0
  403ef8:	lea    rdx,[rip+0x2ec82]        # 0x432b81
  403eff:	lea    rcx,[rax+0x60]
  403f03:	mov    r8,rbx
  403f06:	call   0x401600
  403f0b:	mov    ecx,0x1
  403f10:	call   0x42df60
  403f15:	nop
  403f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f20:	push   r15
  403f22:	push   r14
  403f24:	push   r13
  403f26:	push   r12
  403f28:	push   rbp
  403f29:	push   rdi
  403f2a:	push   rsi
  403f2b:	push   rbx
  403f2c:	sub    rsp,0x138
  403f33:	mov    r14,QWORD PTR [rip+0x39ba6]        # 0x43dae0
  403f3a:	mov    rbp,QWORD PTR [rip+0x39b8f]        # 0x43dad0
  403f41:	mov    edx,0x1
  403f46:	mov    r9,QWORD PTR [rip+0x42043]        # 0x445f90
  403f4d:	mov    eax,DWORD PTR [r14]
  403f50:	mov    rcx,QWORD PTR [rbp+0x0]
  403f54:	lea    r8d,[rax-0x1]
  403f58:	call   0x42df10
  403f5d:	mov    rdx,QWORD PTR [rbp+0x0]
  403f61:	lea    rcx,[rsp+0xb0]
  403f69:	mov    QWORD PTR [rsp+0xb8],rax
  403f71:	mov    BYTE PTR [rdx+rax*1],0x0
  403f75:	call   0x40df78
  403f7a:	mov    rax,QWORD PTR [rbp+0x0]
  403f7e:	mov    r8d,DWORD PTR [rip+0x3f0b7]        # 0x44303c
  403f85:	lea    rdx,[rsp+0xc0]
  403f8d:	mov    rcx,QWORD PTR [rsp+0xb0]
  403f95:	xor    r9d,r9d
  403f98:	mov    DWORD PTR [rsp+0x20],0x0
  403fa0:	mov    QWORD PTR [rsp+0xc0],rax
  403fa8:	mov    rax,QWORD PTR [rsp+0xb8]
  403fb0:	mov    DWORD PTR [rsp+0xc8],eax
  403fb7:	call   0x40df80
  403fbc:	test   eax,eax
  403fbe:	js     0x404646
  403fc4:	mov    rcx,QWORD PTR [rsp+0xb0]
  403fcc:	call   0x40dfa0
  403fd1:	test   eax,eax
  403fd3:	mov    DWORD PTR [rsp+0x64],eax
  403fd7:	js     0x404673
  403fdd:	lea    rax,[rsp+0xb8]
  403fe5:	xor    r13d,r13d
  403fe8:	mov    ebx,0xffffffff
  403fed:	lea    rsi,[rip+0x41f94]        # 0x445f88
  403ff4:	lea    r15,[rsp+0xa0]
  403ffc:	mov    QWORD PTR [rsp+0x58],rax
  404001:	mov    rax,QWORD PTR [rip+0x399e8]        # 0x43d9f0
  404008:	mov    QWORD PTR [rsp+0x90],rax
  404010:	mov    rax,QWORD PTR [rip+0x447c9]        # 0x4487e0
  404017:	mov    QWORD PTR [rsp+0x98],rax
  40401f:	mov    QWORD PTR [rsp+0x88],rax
  404027:	jmp    0x404154
  40402c:	nop    DWORD PTR [rax+0x0]
  404030:	cmp    r12d,0x2
  404034:	je     0x4043d0
  40403a:	mov    rcx,QWORD PTR [rsi]
  40403d:	lea    rdx,[rip+0x2ea0e]        # 0x432a52
  404044:	call   0x401600
  404049:	mov    eax,DWORD PTR [r14]
  40404c:	cmp    ebx,0xffffffff
  40404f:	mov    QWORD PTR [rsp+0xb8],rax
  404057:	je     0x404526
  40405d:	mov    rcx,QWORD PTR [rsp+0xb0]
  404065:	mov    r8,r15
  404068:	mov    edx,ebx
  40406a:	call   0x40df90
  40406f:	test   eax,eax
  404071:	js     0x4043a0
  404077:	mov    edx,0x8
  40407c:	mov    rcx,r15
  40407f:	call   0x40be60
  404084:	mov    rcx,QWORD PTR [rsi]
  404087:	lea    rdx,[rip+0x2ebb7]        # 0x432c45
  40408e:	mov    r8,rax
  404091:	call   0x401600
  404096:	mov    eax,DWORD PTR [r14]
  404099:	cmp    ebx,0xffffffff
  40409c:	mov    QWORD PTR [rsp+0xb8],rax
  4040a4:	je     0x40450b
  4040aa:	mov    r9,QWORD PTR [rsp+0x58]
  4040af:	mov    r8,QWORD PTR [rbp+0x0]
  4040b3:	mov    edx,ebx
  4040b5:	mov    rcx,QWORD PTR [rsp+0xb0]
  4040bd:	call   0x40df98
  4040c2:	test   eax,eax
  4040c4:	js     0x4042f0
  4040ca:	mov    rdx,QWORD PTR [rsp+0xb8]
  4040d2:	mov    rcx,QWORD PTR [rbp+0x0]
  4040d6:	call   0x40be60
  4040db:	mov    rcx,QWORD PTR [rsi]
  4040de:	lea    rdx,[rip+0x2eb99]        # 0x432c7e
  4040e5:	mov    r8,rax
  4040e8:	call   0x401600
  4040ed:	lea    rax,[rsp+0x120]
  4040f5:	mov    r8d,r13d
  4040f8:	mov    rdx,rdi
  4040fb:	mov    ecx,0x1
  404100:	mov    QWORD PTR [rsp+0x28],rax
  404105:	mov    rax,QWORD PTR [rsp+0xb8]
  40410d:	mov    QWORD PTR [rsp+0x20],rax
  404112:	mov    r9,QWORD PTR [rbp+0x0]
  404116:	call   0x40dd18
  40411b:	test   eax,eax
  40411d:	js     0x404147
  40411f:	mov    rcx,QWORD PTR [rsi]
  404122:	mov    r8,QWORD PTR [rsp+0x120]
  40412a:	lea    rdx,[rip+0x2eb5f]        # 0x432c90
  404131:	call   0x401600
  404136:	mov    rax,QWORD PTR [rip+0x398d3]        # 0x43da10
  40413d:	mov    rcx,QWORD PTR [rsp+0x120]
  404145:	call   QWORD PTR [rax]
  404147:	add    ebx,0x1
  40414a:	cmp    ebx,DWORD PTR [rsp+0x64]
  40414e:	je     0x404320
  404154:	cmp    ebx,0xffffffff
  404157:	je     0x4044e5
  40415d:	mov    rcx,QWORD PTR [rsi]
  404160:	lea    rdx,[rip+0x2eab8]        # 0x432c1f
  404167:	mov    r8d,ebx
  40416a:	call   0x401600
  40416f:	mov    rcx,QWORD PTR [rsi]
  404172:	lea    rdx,[rip+0x2e812]        # 0x43298b
  404179:	call   0x401600
  40417e:	mov    rcx,QWORD PTR [rsp+0xb0]
  404186:	xor    r8d,r8d
  404189:	mov    edx,ebx
  40418b:	call   0x40df88
  404190:	mov    r12d,eax
  404193:	mov    rcx,QWORD PTR [rsi]
  404196:	lea    rdx,[rip+0x2e800]        # 0x43299d
  40419d:	call   0x401600
  4041a2:	mov    ecx,r12d
  4041a5:	call   0x40df60
  4041aa:	mov    rcx,QWORD PTR [rsi]
  4041ad:	lea    r8,[rip+0x2de95]        # 0x432049
  4041b4:	test   rax,rax
  4041b7:	lea    rdx,[rip+0x2e2a8]        # 0x432466
  4041be:	mov    rdi,rax
  4041c1:	cmovne r8,rax
  4041c5:	call   0x401600
  4041ca:	mov    rcx,QWORD PTR [rsp+0xb0]
  4041d2:	call   0x40df70
  4041d7:	mov    ecx,eax
  4041d9:	call   0x40dd00
  4041de:	mov    rcx,QWORD PTR [rsi]
  4041e1:	lea    rdx,[rip+0x2ea44]        # 0x432c2c
  4041e8:	mov    r8,rax
  4041eb:	call   0x401600
  4041f0:	cmp    r12d,0x1
  4041f4:	jne    0x404030
  4041fa:	cmp    ebx,0xffffffff
  4041fd:	je     0x40453b
  404203:	lea    r11,[rsp+0x100]
  40420b:	lea    r10,[rsp+0xf0]
  404213:	lea    rax,[rsp+0xe0]
  40421b:	lea    rdx,[rsp+0xd0]
  404223:	lea    r12,[rsp+0x120]
  40422b:	lea    r13,[rsp+0x110]
  404233:	mov    rcx,QWORD PTR [rsp+0xb0]
  40423b:	mov    QWORD PTR [rsp+0x28],r11
  404240:	mov    r9,rax
  404243:	mov    QWORD PTR [rsp+0x80],rdx
  40424b:	mov    QWORD PTR [rsp+0x20],r10
  404250:	mov    r8,rdx
  404253:	mov    QWORD PTR [rsp+0x38],r12
  404258:	mov    QWORD PTR [rsp+0x30],r13
  40425d:	mov    edx,ebx
  40425f:	mov    QWORD PTR [rsp+0x78],r11
  404264:	mov    QWORD PTR [rsp+0x70],r10
  404269:	mov    QWORD PTR [rsp+0x68],rax
  40426e:	call   0x40dfc0
  404273:	mov    r11,QWORD PTR [rsp+0x78]
  404278:	mov    r10,QWORD PTR [rsp+0x70]
  40427d:	test   eax,eax
  40427f:	js     0x404490
  404285:	mov    rax,QWORD PTR [rsp+0x90]
  40428d:	mov    r8,QWORD PTR [rsp+0x68]
  404292:	mov    r9,r10
  404295:	mov    rdx,QWORD PTR [rsp+0x80]
  40429d:	mov    rcx,QWORD PTR [rsi]
  4042a0:	mov    rax,QWORD PTR [rax+0x78]
  4042a4:	test   BYTE PTR [rax+0xd10],0xf
  4042ab:	mov    QWORD PTR [rsp+0x40],0x0
  4042b4:	mov    QWORD PTR [rsp+0x38],0x0
  4042bd:	mov    QWORD PTR [rsp+0x30],r12
  4042c2:	mov    QWORD PTR [rsp+0x28],r13
  4042c7:	mov    QWORD PTR [rsp+0x20],r11
  4042cc:	setne  al
  4042cf:	movzx  eax,al
  4042d2:	mov    DWORD PTR [rsp+0x48],eax
  4042d6:	call   0x40b0b0
  4042db:	mov    eax,DWORD PTR [rsp+0xd8]
  4042e2:	lea    r13d,[rax*8+0x0]
  4042ea:	jmp    0x40403a
  4042ef:	nop
  4042f0:	mov    ecx,eax
  4042f2:	add    ebx,0x1
  4042f5:	call   0x40dc88
  4042fa:	mov    rdi,rax
  4042fd:	call   QWORD PTR [rip+0x444dd]        # 0x4487e0
  404303:	lea    rdx,[rip+0x2e94e]        # 0x432c58
  40430a:	lea    rcx,[rax+0x60]
  40430e:	mov    r8,rdi
  404311:	call   0x401600
  404316:	cmp    ebx,DWORD PTR [rsp+0x64]
  40431a:	jne    0x404154
  404320:	mov    eax,DWORD PTR [r14]
  404323:	mov    rcx,QWORD PTR [rsp+0xb0]
  40432b:	xor    r9d,r9d
  40432e:	xor    r8d,r8d
  404331:	mov    edx,0x1
  404336:	mov    QWORD PTR [rsp+0xb8],rax
  40433e:	mov    rax,QWORD PTR [rsp+0x58]
  404343:	mov    QWORD PTR [rsp+0x28],rax
  404348:	mov    rax,QWORD PTR [rbp+0x0]
  40434c:	mov    QWORD PTR [rsp+0x20],rax
  404351:	call   0x40dfe0
  404356:	test   eax,eax
  404358:	js     0x404619
  40435e:	mov    r8,QWORD PTR [rbp+0x0]
  404362:	mov    rcx,QWORD PTR [rip+0x41c1f]        # 0x445f88
  404369:	lea    rdx,[rip+0x2e93f]        # 0x432caf
  404370:	call   0x401600
  404375:	mov    rcx,QWORD PTR [rsp+0xb0]
  40437d:	call   0x40dfe8
  404382:	nop
  404383:	add    rsp,0x138
  40438a:	pop    rbx
  40438b:	pop    rsi
  40438c:	pop    rdi
  40438d:	pop    rbp
  40438e:	pop    r12
  404390:	pop    r13
  404392:	pop    r14
  404394:	pop    r15
  404396:	ret    
  404397:	nop    WORD PTR [rax+rax*1+0x0]
  4043a0:	mov    ecx,eax
  4043a2:	call   0x40dc88
  4043a7:	mov    r12,rax
  4043aa:	mov    rax,QWORD PTR [rsp+0x88]
  4043b2:	call   rax
  4043b4:	lea    rdx,[rip+0x2e69d]        # 0x432a58
  4043bb:	lea    rcx,[rax+0x60]
  4043bf:	mov    r8,r12
  4043c2:	call   0x401600
  4043c7:	jmp    0x404096
  4043cc:	nop    DWORD PTR [rax+0x0]
  4043d0:	cmp    ebx,0xffffffff
  4043d3:	je     0x4045b3
  4043d9:	lea    r10,[rsp+0xf0]
  4043e1:	lea    r11,[rsp+0x100]
  4043e9:	lea    rax,[rsp+0xe0]
  4043f1:	lea    r12,[rsp+0x120]
  4043f9:	lea    r13,[rsp+0x110]
  404401:	mov    rcx,QWORD PTR [rsp+0xb0]
  404409:	mov    QWORD PTR [rsp+0x20],r11
  40440e:	mov    r9,r10
  404411:	mov    r8,rax
  404414:	mov    QWORD PTR [rsp+0x30],r12
  404419:	mov    QWORD PTR [rsp+0x28],r13
  40441e:	mov    edx,ebx
  404420:	mov    QWORD PTR [rsp+0x78],r11
  404425:	mov    QWORD PTR [rsp+0x70],r10
  40442a:	mov    QWORD PTR [rsp+0x68],rax
  40442f:	call   0x40dfc8
  404434:	mov    r11,QWORD PTR [rsp+0x78]
  404439:	mov    r10,QWORD PTR [rsp+0x70]
  40443e:	test   eax,eax
  404440:	js     0x4044c0
  404442:	mov    rax,QWORD PTR [rip+0x395a7]        # 0x43d9f0
  404449:	mov    r9,QWORD PTR [rsp+0x68]
  40444e:	mov    r8,r13
  404451:	mov    rcx,QWORD PTR [rsi]
  404454:	mov    rdx,r12
  404457:	mov    rax,QWORD PTR [rax+0x78]
  40445b:	test   BYTE PTR [rax+0xd10],0xf
  404462:	mov    QWORD PTR [rsp+0x28],r11
  404467:	mov    QWORD PTR [rsp+0x20],r10
  40446c:	setne  al
  40446f:	movzx  eax,al
  404472:	mov    DWORD PTR [rsp+0x30],eax
  404476:	call   0x40adf0
  40447b:	mov    eax,DWORD PTR [rsp+0x118]
  404482:	lea    r13d,[rax*8+0x0]
  40448a:	jmp    0x40403a
  40448f:	nop
  404490:	mov    ecx,eax
  404492:	call   0x40dc88
  404497:	mov    r12,rax
  40449a:	mov    rax,QWORD PTR [rsp+0x98]
  4044a2:	call   rax
  4044a4:	lea    rdx,[rip+0x2e535]        # 0x4329e0
  4044ab:	lea    rcx,[rax+0x60]
  4044af:	mov    r8,r12
  4044b2:	call   0x401600
  4044b7:	jmp    0x4042db
  4044bc:	nop    DWORD PTR [rax+0x0]
  4044c0:	mov    ecx,eax
  4044c2:	call   0x40dc88
  4044c7:	mov    r12,rax
  4044ca:	call   QWORD PTR [rip+0x44310]        # 0x4487e0
  4044d0:	lea    rdx,[rip+0x2e531]        # 0x432a08
  4044d7:	lea    rcx,[rax+0x60]
  4044db:	mov    r8,r12
  4044de:	call   0x401600
  4044e3:	jmp    0x40447b
  4044e5:	mov    rcx,QWORD PTR [rsi]
  4044e8:	lea    rdx,[rip+0x2e49c]        # 0x43298b
  4044ef:	call   0x401600
  4044f4:	mov    rcx,QWORD PTR [rsp+0xb0]
  4044fc:	xor    edx,edx
  4044fe:	call   0x40dfa8
  404503:	mov    r12d,eax
  404506:	jmp    0x404193
  40450b:	mov    r8,QWORD PTR [rsp+0x58]
  404510:	mov    rdx,QWORD PTR [rbp+0x0]
  404514:	mov    rcx,QWORD PTR [rsp+0xb0]
  40451c:	call   0x40dfb8
  404521:	jmp    0x4040c2
  404526:	mov    rcx,QWORD PTR [rsp+0xb0]
  40452e:	mov    rdx,r15
  404531:	call   0x40dfb0
  404536:	jmp    0x40406f
  40453b:	lea    r10,[rsp+0xf0]
  404543:	lea    r11,[rsp+0x100]
  40454b:	lea    rax,[rsp+0xe0]
  404553:	lea    r12,[rsp+0x120]
  40455b:	lea    r13,[rsp+0x110]
  404563:	mov    rcx,QWORD PTR [rsp+0xb0]
  40456b:	lea    rdx,[rsp+0xd0]
  404573:	mov    QWORD PTR [rsp+0x20],r11
  404578:	mov    r9,r10
  40457b:	mov    QWORD PTR [rsp+0x30],r12
  404580:	mov    QWORD PTR [rsp+0x28],r13
  404585:	mov    r8,rax
  404588:	mov    QWORD PTR [rsp+0x78],r11
  40458d:	mov    QWORD PTR [rsp+0x70],r10
  404592:	mov    QWORD PTR [rsp+0x68],rax
  404597:	mov    QWORD PTR [rsp+0x80],rdx
  40459f:	call   0x40dfd0
  4045a4:	mov    r10,QWORD PTR [rsp+0x70]
  4045a9:	mov    r11,QWORD PTR [rsp+0x78]
  4045ae:	jmp    0x40427d
  4045b3:	lea    r11,[rsp+0x100]
  4045bb:	lea    r10,[rsp+0xf0]
  4045c3:	lea    rax,[rsp+0xe0]
  4045cb:	lea    r12,[rsp+0x120]
  4045d3:	lea    r13,[rsp+0x110]
  4045db:	mov    rcx,QWORD PTR [rsp+0xb0]
  4045e3:	mov    r9,r11
  4045e6:	mov    r8,r10
  4045e9:	mov    rdx,rax
  4045ec:	mov    QWORD PTR [rsp+0x28],r12
  4045f1:	mov    QWORD PTR [rsp+0x20],r13
  4045f6:	mov    QWORD PTR [rsp+0x78],r11
  4045fb:	mov    QWORD PTR [rsp+0x70],r10
  404600:	mov    QWORD PTR [rsp+0x68],rax
  404605:	call   0x40dfd8
  40460a:	mov    r10,QWORD PTR [rsp+0x70]
  40460f:	mov    r11,QWORD PTR [rsp+0x78]
  404614:	jmp    0x40443e
  404619:	mov    ecx,eax
  40461b:	call   0x40dc88
  404620:	mov    rbx,rax
  404623:	call   QWORD PTR [rip+0x441b7]        # 0x4487e0
  404629:	lea    rdx,[rip+0x2e5bf]        # 0x432bef
  404630:	lea    rcx,[rax+0x60]
  404634:	mov    r8,rbx
  404637:	call   0x401600
  40463c:	mov    ecx,0x1
  404641:	call   0x42df60
  404646:	mov    ecx,eax
  404648:	call   0x40dc88
  40464d:	mov    rbx,rax
  404650:	call   QWORD PTR [rip+0x4418a]        # 0x4487e0
  404656:	lea    rdx,[rip+0x2e512]        # 0x432b6f
  40465d:	lea    rcx,[rax+0x60]
  404661:	mov    r8,rbx
  404664:	call   0x401600
  404669:	mov    ecx,0x1
  40466e:	call   0x42df60
  404673:	mov    ecx,eax
  404675:	call   0x40dc88
  40467a:	mov    rbx,rax
  40467d:	call   QWORD PTR [rip+0x4415d]        # 0x4487e0
  404683:	lea    rdx,[rip+0x2e577]        # 0x432c01
  40468a:	lea    rcx,[rax+0x60]
  40468e:	mov    r8,rbx
  404691:	call   0x401600
  404696:	mov    ecx,0x1
  40469b:	call   0x42df60
  4046a0:	nop
  4046a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4046a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4046b0:	push   r13
  4046b2:	push   r12
  4046b4:	push   rbp
  4046b5:	push   rdi
  4046b6:	push   rsi
  4046b7:	push   rbx
  4046b8:	sub    rsp,0x58
  4046bc:	mov    rcx,QWORD PTR [rip+0x418cd]        # 0x445f90
  4046c3:	lea    rbp,[rsp+0x38]
  4046c8:	mov    rdx,rbp
  4046cb:	call   0x415540
  4046d0:	mov    rdx,QWORD PTR [rsp+0x38]
  4046d5:	test   rax,rax
  4046d8:	mov    QWORD PTR [rsp+0x40],rax
  4046dd:	mov    DWORD PTR [rsp+0x48],edx
  4046e1:	je     0x4048af
  4046e7:	lea    rcx,[rsp+0x28]
  4046ec:	call   0x40dff0
  4046f1:	test   eax,eax
  4046f3:	js     0x404882
  4046f9:	mov    r8d,DWORD PTR [rip+0x3e93c]        # 0x44303c
  404700:	mov    rcx,QWORD PTR [rsp+0x28]
  404705:	lea    rdx,[rsp+0x40]
  40470a:	call   0x40dff8
  40470f:	test   eax,eax
  404711:	js     0x404855
  404717:	mov    rcx,QWORD PTR [rsp+0x40]
  40471c:	call   0x42df08
  404721:	mov    rcx,QWORD PTR [rsp+0x28]
  404726:	call   0x40e000
  40472b:	test   eax,eax
  40472d:	mov    edi,eax
  40472f:	js     0x404828
  404735:	mov    rcx,QWORD PTR [rip+0x4184c]        # 0x445f88
  40473c:	lea    rdx,[rip+0x2e58d]        # 0x432cd0
  404743:	mov    r8d,eax
  404746:	xor    ebx,ebx
  404748:	lea    r12,[rsp+0x30]
  40474d:	call   0x401600
  404752:	test   edi,edi
  404754:	je     0x4047e3
  40475a:	mov    r13,QWORD PTR [rip+0x3937f]        # 0x43dae0
  404761:	mov    rsi,QWORD PTR [rip+0x39368]        # 0x43dad0
  404768:	nop    DWORD PTR [rax+rax*1+0x0]
  404770:	mov    rcx,QWORD PTR [rsp+0x28]
  404775:	mov    r8,r12
  404778:	mov    edx,ebx
  40477a:	call   0x40e008
  40477f:	test   eax,eax
  404781:	js     0x4047fb
  404783:	mov    eax,DWORD PTR [r13+0x0]
  404787:	mov    r8,QWORD PTR [rsi]
  40478a:	mov    r9,rbp
  40478d:	mov    edx,DWORD PTR [rip+0x3e8a5]        # 0x443038
  404793:	mov    rcx,QWORD PTR [rsp+0x30]
  404798:	mov    QWORD PTR [rsp+0x38],rax
  40479d:	call   0x40e038
  4047a2:	test   eax,eax
  4047a4:	js     0x4047fb
  4047a6:	mov    r9,QWORD PTR [rip+0x417db]        # 0x445f88
  4047ad:	mov    r8,QWORD PTR [rsp+0x38]
  4047b2:	mov    edx,0x1
  4047b7:	mov    rcx,QWORD PTR [rsi]
  4047ba:	add    ebx,0x1
  4047bd:	call   0x42dee0
  4047c2:	mov    rcx,QWORD PTR [rip+0x417bf]        # 0x445f88
  4047c9:	lea    rdx,[rip+0x2de2d]        # 0x4325fd
  4047d0:	call   0x401600
  4047d5:	mov    rcx,QWORD PTR [rsp+0x30]
  4047da:	call   0x40e040
  4047df:	cmp    ebx,edi
  4047e1:	jne    0x404770
  4047e3:	mov    rcx,QWORD PTR [rsp+0x28]
  4047e8:	call   0x40e010
  4047ed:	nop
  4047ee:	add    rsp,0x58
  4047f2:	pop    rbx
  4047f3:	pop    rsi
  4047f4:	pop    rdi
  4047f5:	pop    rbp
  4047f6:	pop    r12
  4047f8:	pop    r13
  4047fa:	ret    
  4047fb:	mov    ecx,eax
  4047fd:	call   0x40dc88
  404802:	mov    rbx,rax
  404805:	call   QWORD PTR [rip+0x43fd5]        # 0x4487e0
  40480b:	lea    rdx,[rip+0x2e3dd]        # 0x432bef
  404812:	lea    rcx,[rax+0x60]
  404816:	mov    r8,rbx
  404819:	call   0x401600
  40481e:	mov    ecx,0x1
  404823:	call   0x42df60
  404828:	mov    ecx,eax
  40482a:	call   0x40dc88
  40482f:	mov    rbx,rax
  404832:	call   QWORD PTR [rip+0x43fa8]        # 0x4487e0
  404838:	lea    rdx,[rip+0x2e4bc]        # 0x432cfb
  40483f:	lea    rcx,[rax+0x60]
  404843:	mov    r8,rbx
  404846:	call   0x401600
  40484b:	mov    ecx,0x1
  404850:	call   0x42df60
  404855:	mov    ecx,eax
  404857:	call   0x40dc88
  40485c:	mov    rbx,rax
  40485f:	call   QWORD PTR [rip+0x43f7b]        # 0x4487e0
  404865:	lea    rdx,[rip+0x2e303]        # 0x432b6f
  40486c:	lea    rcx,[rax+0x60]
  404870:	mov    r8,rbx
  404873:	call   0x401600
  404878:	mov    ecx,0x1
  40487d:	call   0x42df60
  404882:	mov    ecx,eax
  404884:	call   0x40dc88
  404889:	mov    rbx,rax
  40488c:	call   QWORD PTR [rip+0x43f4e]        # 0x4487e0
  404892:	lea    rdx,[rip+0x2e41b]        # 0x432cb4
  404899:	lea    rcx,[rax+0x60]
  40489d:	mov    r8,rbx
  4048a0:	call   0x401600
  4048a5:	mov    ecx,0x1
  4048aa:	call   0x42df60
  4048af:	cmp    QWORD PTR [rip+0x416d9],0x0        # 0x445f90
  4048b7:	lea    rax,[rip+0x2de1d]        # 0x4326db
  4048be:	lea    rbx,[rip+0x2de1b]        # 0x4326e0
  4048c5:	cmovne rbx,rax
  4048c9:	call   QWORD PTR [rip+0x43f11]        # 0x4487e0
  4048cf:	lea    rdx,[rip+0x2de79]        # 0x43274f
  4048d6:	lea    rcx,[rax+0x60]
  4048da:	mov    r8,rbx
  4048dd:	call   0x401600
  4048e2:	mov    ecx,0x1
  4048e7:	call   0x42df60
  4048ec:	nop
  4048ed:	nop    DWORD PTR [rax]
  4048f0:	push   rbx
  4048f1:	sub    rsp,0x40
  4048f5:	lea    rcx,[rsp+0x20]
  4048fa:	call   0x40dc50
  4048ff:	test   eax,eax
  404901:	js     0x404973
  404903:	mov    rcx,QWORD PTR [rip+0x41686]        # 0x445f90
  40490a:	lea    rdx,[rsp+0x28]
  40490f:	call   0x415540
  404914:	mov    rdx,QWORD PTR [rsp+0x28]
  404919:	test   rax,rax
  40491c:	mov    QWORD PTR [rsp+0x30],rax
  404921:	mov    DWORD PTR [rsp+0x38],edx
  404925:	je     0x4049cd
  40492b:	mov    r8d,DWORD PTR [rip+0x3e70a]        # 0x44303c
  404932:	mov    rcx,QWORD PTR [rsp+0x20]
  404937:	lea    rdx,[rsp+0x30]
  40493c:	call   0x40dc58
  404941:	mov    rcx,QWORD PTR [rsp+0x30]
  404946:	mov    ebx,eax
  404948:	call   0x42df08
  40494d:	test   ebx,ebx
  40494f:	js     0x4049a0
  404951:	mov    rdx,QWORD PTR [rip+0x41630]        # 0x445f88
  404958:	mov    rcx,QWORD PTR [rsp+0x20]
  40495d:	call   0x4021e0
  404962:	mov    rcx,QWORD PTR [rsp+0x20]
  404967:	call   0x40dc78
  40496c:	nop
  40496d:	add    rsp,0x40
  404971:	pop    rbx
  404972:	ret    
  404973:	mov    ecx,eax
  404975:	call   0x40dc88
  40497a:	mov    rbx,rax
  40497d:	call   QWORD PTR [rip+0x43e5d]        # 0x4487e0
  404983:	lea    rdx,[rip+0x2e384]        # 0x432d0e
  40498a:	lea    rcx,[rax+0x60]
  40498e:	mov    r8,rbx
  404991:	call   0x401600
  404996:	mov    ecx,0x1
  40499b:	call   0x42df60
  4049a0:	mov    ecx,ebx
  4049a2:	call   0x40dc88
  4049a7:	mov    rbx,rax
  4049aa:	call   QWORD PTR [rip+0x43e30]        # 0x4487e0
  4049b0:	lea    rdx,[rip+0x2e1b8]        # 0x432b6f
  4049b7:	lea    rcx,[rax+0x60]
  4049bb:	mov    r8,rbx
  4049be:	call   0x401600
  4049c3:	mov    ecx,0x1
  4049c8:	call   0x42df60
  4049cd:	cmp    QWORD PTR [rip+0x415bb],0x0        # 0x445f90
  4049d5:	lea    rax,[rip+0x2dcff]        # 0x4326db
  4049dc:	lea    rbx,[rip+0x2dcfd]        # 0x4326e0
  4049e3:	cmovne rbx,rax
  4049e7:	call   QWORD PTR [rip+0x43df3]        # 0x4487e0
  4049ed:	lea    rdx,[rip+0x2dd5b]        # 0x43274f
  4049f4:	lea    rcx,[rax+0x60]
  4049f8:	mov    r8,rbx
  4049fb:	call   0x401600
  404a00:	mov    ecx,0x1
  404a05:	call   0x42df60
  404a0a:	nop
  404a0b:	nop    DWORD PTR [rax+rax*1+0x0]
  404a10:	push   rbx
  404a11:	sub    rsp,0x40
  404a15:	lea    rcx,[rsp+0x20]
  404a1a:	call   0x40dbe0
  404a1f:	test   eax,eax
  404a21:	js     0x404a93
  404a23:	mov    rcx,QWORD PTR [rip+0x41566]        # 0x445f90
  404a2a:	lea    rdx,[rsp+0x28]
  404a2f:	call   0x415540
  404a34:	mov    rdx,QWORD PTR [rsp+0x28]
  404a39:	test   rax,rax
  404a3c:	mov    QWORD PTR [rsp+0x30],rax
  404a41:	mov    DWORD PTR [rsp+0x38],edx
  404a45:	je     0x404aed
  404a4b:	mov    r8d,DWORD PTR [rip+0x3e5ea]        # 0x44303c
  404a52:	mov    rcx,QWORD PTR [rsp+0x20]
  404a57:	lea    rdx,[rsp+0x30]
  404a5c:	call   0x40dbe8
  404a61:	mov    rcx,QWORD PTR [rsp+0x30]
  404a66:	mov    ebx,eax
  404a68:	call   0x42df08
  404a6d:	test   ebx,ebx
  404a6f:	js     0x404ac0
  404a71:	mov    rdx,QWORD PTR [rip+0x41510]        # 0x445f88
  404a78:	mov    rcx,QWORD PTR [rsp+0x20]
  404a7d:	call   0x402f80
  404a82:	mov    rcx,QWORD PTR [rsp+0x20]
  404a87:	call   0x40dbf8
  404a8c:	nop
  404a8d:	add    rsp,0x40
  404a91:	pop    rbx
  404a92:	ret    
  404a93:	mov    ecx,eax
  404a95:	call   0x40dc88
  404a9a:	mov    rbx,rax
  404a9d:	call   QWORD PTR [rip+0x43d3d]        # 0x4487e0
  404aa3:	lea    rdx,[rip+0x2e272]        # 0x432d1c
  404aaa:	lea    rcx,[rax+0x60]
  404aae:	mov    r8,rbx
  404ab1:	call   0x401600
  404ab6:	mov    ecx,0x1
  404abb:	call   0x42df60
  404ac0:	mov    ecx,ebx
  404ac2:	call   0x40dc88
  404ac7:	mov    rbx,rax
  404aca:	call   QWORD PTR [rip+0x43d10]        # 0x4487e0
  404ad0:	lea    rdx,[rip+0x2e098]        # 0x432b6f
  404ad7:	lea    rcx,[rax+0x60]
  404adb:	mov    r8,rbx
  404ade:	call   0x401600
  404ae3:	mov    ecx,0x1
  404ae8:	call   0x42df60
  404aed:	cmp    QWORD PTR [rip+0x4149b],0x0        # 0x445f90
  404af5:	lea    rax,[rip+0x2dbdf]        # 0x4326db
  404afc:	lea    rbx,[rip+0x2dbdd]        # 0x4326e0
  404b03:	cmovne rbx,rax
  404b07:	call   QWORD PTR [rip+0x43cd3]        # 0x4487e0
  404b0d:	lea    rdx,[rip+0x2dc3b]        # 0x43274f
  404b14:	lea    rcx,[rax+0x60]
  404b18:	mov    r8,rbx
  404b1b:	call   0x401600
  404b20:	mov    ecx,0x1
  404b25:	call   0x42df60
  404b2a:	nop
  404b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  404b30:	push   r12
  404b32:	push   rbp
  404b33:	push   rdi
  404b34:	push   rsi
  404b35:	push   rbx
  404b36:	sub    rsp,0x30
  404b3a:	mov    rdi,QWORD PTR [rip+0x43c9f]        # 0x4487e0
  404b41:	mov    rsi,rcx
  404b44:	call   rdi
  404b46:	lea    rdx,[rip+0x2e1e3]        # 0x432d30
  404b4d:	lea    rcx,[rax+0x60]
  404b51:	call   0x401600
  404b56:	lea    rcx,[rsp+0x20]
  404b5b:	call   0x40dbe0
  404b60:	test   eax,eax
  404b62:	js     0x404f67
  404b68:	xor    ecx,ecx
  404b6a:	mov    rdx,rsi
  404b6d:	call   0x40a000
  404b72:	test   rax,rax
  404b75:	mov    QWORD PTR [rsp+0x28],rax
  404b7a:	je     0x404e52
  404b80:	mov    r8,rsi
  404b83:	mov    rdx,rax
  404b86:	mov    ecx,0x1
  404b8b:	call   0x40abd0
  404b90:	xor    edx,edx
  404b92:	mov    rcx,rax
  404b95:	mov    rbx,rax
  404b98:	call   0x40dd60
  404b9d:	mov    rcx,QWORD PTR [rsp+0x20]
  404ba2:	mov    r12d,eax
  404ba5:	call   0x412190
  404baa:	mov    rcx,QWORD PTR [rsp+0x20]
  404baf:	call   0x412200
  404bb4:	mov    rcx,QWORD PTR [rsp+0x20]
  404bb9:	call   0x411f90
  404bbe:	mov    rcx,QWORD PTR [rsp+0x20]
  404bc3:	call   0x411ed0
  404bc8:	mov    rcx,QWORD PTR [rsp+0x20]
  404bcd:	call   0x4120f0
  404bd2:	mov    rcx,QWORD PTR [rsp+0x20]
  404bd7:	call   0x412050
  404bdc:	mov    rcx,QWORD PTR [rsp+0x20]
  404be1:	call   0x411e30
  404be6:	mov    rdx,QWORD PTR [rsp+0x20]
  404beb:	mov    ecx,0x2
  404bf0:	call   0x411630
  404bf5:	mov    rcx,QWORD PTR [rsp+0x20]
  404bfa:	call   0x4122a0
  404bff:	mov    rcx,QWORD PTR [rsp+0x20]
  404c04:	call   0x412340
  404c09:	mov    rdx,QWORD PTR [rsp+0x20]
  404c0e:	mov    ecx,0x2
  404c13:	call   0x411770
  404c18:	mov    rdx,QWORD PTR [rsp+0x20]
  404c1d:	mov    ecx,0x2
  404c22:	call   0x411a00
  404c27:	mov    rdx,QWORD PTR [rsp+0x20]
  404c2c:	mov    ecx,0x2
  404c31:	call   0x411380
  404c36:	mov    rdx,QWORD PTR [rsp+0x20]
  404c3b:	mov    ecx,0x2
  404c40:	call   0x4114d0
  404c45:	call   0x410410
  404c4a:	test   rax,rax
  404c4d:	je     0x404c58
  404c4f:	cmp    BYTE PTR [rax],0x0
  404c52:	jne    0x404e14
  404c58:	mov    eax,DWORD PTR [rsi+0x80]
  404c5e:	test   eax,eax
  404c60:	je     0x404da1
  404c66:	call   0x411210
  404c6b:	test   eax,eax
  404c6d:	mov    ebp,eax
  404c6f:	mov    r8d,0xffffffff
  404c75:	jne    0x404ea4
  404c7b:	mov    rcx,QWORD PTR [rsp+0x20]
  404c80:	mov    edx,ebp
  404c82:	call   0x40dbc8
  404c87:	test   eax,eax
  404c89:	js     0x404fe2
  404c8f:	cmp    r12d,0x1
  404c93:	mov    ecx,0x1
  404c98:	je     0x404f23
  404c9e:	call   0x411b90
  404ca3:	test   eax,eax
  404ca5:	jne    0x404f50
  404cab:	mov    esi,0x80
  404cb0:	call   0x411c90
  404cb5:	test   eax,eax
  404cb7:	je     0x404cd5
  404cb9:	mov    rcx,QWORD PTR [rsp+0x20]
  404cbe:	lea    rdx,[rip+0x2d6d4]        # 0x432399
  404cc5:	xor    r8d,r8d
  404cc8:	call   0x40dbb8
  404ccd:	test   eax,eax
  404ccf:	js     0x404ecd
  404cd5:	call   0x411cf0
  404cda:	test   eax,eax
  404cdc:	je     0x404cfa
  404cde:	mov    rcx,QWORD PTR [rsp+0x20]
  404ce3:	lea    rdx,[rip+0x2d6c1]        # 0x4323ab
  404cea:	xor    r8d,r8d
  404ced:	call   0x40dbb8
  404cf2:	test   eax,eax
  404cf4:	js     0x404ecd
  404cfa:	call   0x411d20
  404cff:	test   eax,eax
  404d01:	je     0x404d1f
  404d03:	mov    rcx,QWORD PTR [rsp+0x20]
  404d08:	lea    rdx,[rip+0x2d665]        # 0x432374
  404d0f:	xor    r8d,r8d
  404d12:	call   0x40dbb8
  404d17:	test   eax,eax
  404d19:	js     0x404ecd
  404d1f:	call   0x411cc0
  404d24:	test   eax,eax
  404d26:	jne    0x404eb1
  404d2c:	test   ebp,ebp
  404d2e:	jne    0x404f00
  404d34:	mov    rcx,QWORD PTR [rsp+0x20]
  404d39:	mov    edx,esi
  404d3b:	call   0x40dbb0
  404d40:	test   eax,eax
  404d42:	js     0x40500b
  404d48:	call   0x411320
  404d4d:	test   eax,eax
  404d4f:	je     0x404d6d
  404d51:	mov    rcx,QWORD PTR [rsp+0x20]
  404d56:	lea    rdx,[rip+0x2d58c]        # 0x4322e9
  404d5d:	xor    r8d,r8d
  404d60:	call   0x40dbb8
  404d65:	test   eax,eax
  404d67:	js     0x404ecd
  404d6d:	call   0x411350
  404d72:	test   eax,eax
  404d74:	je     0x404d92
  404d76:	mov    rcx,QWORD PTR [rsp+0x20]
  404d7b:	lea    rdx,[rip+0x2d585]        # 0x432307
  404d82:	xor    r8d,r8d
  404d85:	call   0x40dbb8
  404d8a:	test   eax,eax
  404d8c:	js     0x404ecd
  404d92:	mov    rdx,QWORD PTR [rsp+0x20]
  404d97:	mov    ecx,0x2
  404d9c:	call   0x410e70
  404da1:	mov    rcx,QWORD PTR [rsp+0x20]
  404da6:	mov    rdx,rbx
  404da9:	call   0x40dba8
  404dae:	test   eax,eax
  404db0:	js     0x404fb9
  404db6:	mov    rcx,rbx
  404db9:	call   0x4020f0
  404dbe:	mov    rdx,QWORD PTR [rsp+0x28]
  404dc3:	mov    rcx,QWORD PTR [rsp+0x20]
  404dc8:	xor    r9d,r9d
  404dcb:	mov    r8d,eax
  404dce:	call   0x40dbd0
  404dd3:	test   eax,eax
  404dd5:	js     0x404f90
  404ddb:	mov    rdx,QWORD PTR [rip+0x411a6]        # 0x445f88
  404de2:	mov    rcx,QWORD PTR [rsp+0x20]
  404de7:	call   0x402f80
  404dec:	mov    rcx,QWORD PTR [rsp+0x20]
  404df1:	call   0x40dbf8
  404df6:	mov    rcx,QWORD PTR [rsp+0x28]
  404dfb:	call   0x40ddc8
  404e00:	mov    rcx,rbx
  404e03:	call   0x40dd78
  404e08:	nop
  404e09:	add    rsp,0x30
  404e0d:	pop    rbx
  404e0e:	pop    rsi
  404e0f:	pop    rdi
  404e10:	pop    rbp
  404e11:	pop    r12
  404e13:	ret    
  404e14:	mov    rcx,QWORD PTR [rsp+0x20]
  404e19:	mov    rdx,rax
  404e1c:	call   0x40dbc0
  404e21:	test   eax,eax
  404e23:	jns    0x404c58
  404e29:	mov    ecx,eax
  404e2b:	call   0x40dc88
  404e30:	mov    rbx,rax
  404e33:	call   rdi
  404e35:	lea    rdx,[rip+0x2df4d]        # 0x432d89
  404e3c:	lea    rcx,[rax+0x60]
  404e40:	mov    r8,rbx
  404e43:	call   0x401600
  404e48:	mov    ecx,0x1
  404e4d:	call   0x42df60
  404e52:	lea    rcx,[rsp+0x28]
  404e57:	call   0x40dda8
  404e5c:	test   eax,eax
  404e5e:	js     0x40505d
  404e64:	lea    rdx,[rsi+0x60]
  404e68:	lea    rcx,[rsi+0x58]
  404e6c:	call   0x403280
  404e71:	mov    rcx,rsi
  404e74:	mov    rdx,rax
  404e77:	mov    rbx,rax
  404e7a:	call   0x403910
  404e7f:	mov    rcx,QWORD PTR [rsp+0x28]
  404e84:	mov    r8d,0x1
  404e8a:	mov    rdx,rbx
  404e8d:	call   0x40ddb8
  404e92:	test   eax,eax
  404e94:	js     0x405034
  404e9a:	mov    rax,QWORD PTR [rsp+0x28]
  404e9f:	jmp    0x404b80
  404ea4:	call   0x411290
  404ea9:	mov    r8d,eax
  404eac:	jmp    0x404c7b
  404eb1:	mov    rcx,QWORD PTR [rsp+0x20]
  404eb6:	lea    rdx,[rip+0x2d4ca]        # 0x432387
  404ebd:	xor    r8d,r8d
  404ec0:	call   0x40dbb8
  404ec5:	test   eax,eax
  404ec7:	jns    0x404d2c
  404ecd:	mov    ecx,eax
  404ecf:	call   0x40dc88
  404ed4:	mov    rbx,rax
  404ed7:	call   rdi
  404ed9:	lea    rdx,[rip+0x2d41b]        # 0x4322fb
  404ee0:	lea    rcx,[rax+0x60]
  404ee4:	mov    r8,rbx
  404ee7:	call   0x401600
  404eec:	mov    ecx,0x1
  404ef1:	call   0x42df60
  404ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f00:	call   0x411bd0
  404f05:	mov    edx,esi
  404f07:	or     edx,0x4
  404f0a:	test   eax,eax
  404f0c:	cmovne esi,edx
  404f0f:	call   0x411c00
  404f14:	mov    edx,esi
  404f16:	or     edx,0x2
  404f19:	test   eax,eax
  404f1b:	cmovne esi,edx
  404f1e:	jmp    0x404d34
  404f23:	call   0x411b50
  404f28:	cmp    eax,0x1
  404f2b:	mov    ecx,0x1
  404f30:	sbb    esi,esi
  404f32:	not    esi
  404f34:	and    esi,0x80
  404f3a:	call   0x411b90
  404f3f:	or     esi,0x20
  404f42:	test   eax,eax
  404f44:	jne    0x404cb0
  404f4a:	jmp    0x404cab
  404f4f:	nop
  404f50:	call   rdi
  404f52:	lea    rdx,[rip+0x2d3c7]        # 0x432320
  404f59:	lea    rcx,[rax+0x60]
  404f5d:	call   0x401600
  404f62:	jmp    0x404cab
  404f67:	mov    ecx,eax
  404f69:	call   0x40dc88
  404f6e:	mov    rbx,rax
  404f71:	call   rdi
  404f73:	lea    rdx,[rip+0x2dda2]        # 0x432d1c
  404f7a:	lea    rcx,[rax+0x60]
  404f7e:	mov    r8,rbx
  404f81:	call   0x401600
  404f86:	mov    ecx,0x1
  404f8b:	call   0x42df60
  404f90:	mov    ecx,eax
  404f92:	call   0x40dc88
  404f97:	mov    rbx,rax
  404f9a:	call   rdi
  404f9c:	lea    rdx,[rip+0x2de0f]        # 0x432db2
  404fa3:	lea    rcx,[rax+0x60]
  404fa7:	mov    r8,rbx
  404faa:	call   0x401600
  404faf:	mov    ecx,0x1
  404fb4:	call   0x42df60
  404fb9:	mov    ecx,eax
  404fbb:	call   0x40dc88
  404fc0:	mov    rbx,rax
  404fc3:	call   rdi
  404fc5:	lea    rdx,[rip+0x2d198]        # 0x432164
  404fcc:	lea    rcx,[rax+0x60]
  404fd0:	mov    r8,rbx
  404fd3:	call   0x401600
  404fd8:	mov    ecx,0x1
  404fdd:	call   0x42df60
  404fe2:	mov    ecx,eax
  404fe4:	call   0x40dc88
  404fe9:	mov    rbx,rax
  404fec:	call   rdi
  404fee:	lea    rdx,[rip+0x2dda2]        # 0x432d97
  404ff5:	lea    rcx,[rax+0x60]
  404ff9:	mov    r8,rbx
  404ffc:	call   0x401600
  405001:	mov    ecx,0x1
  405006:	call   0x42df60
  40500b:	mov    ecx,eax
  40500d:	call   0x40dc88
  405012:	mov    rbx,rax
  405015:	call   rdi
  405017:	lea    rdx,[rip+0x2d39f]        # 0x4323bd
  40501e:	lea    rcx,[rax+0x60]
  405022:	mov    r8,rbx
  405025:	call   0x401600
  40502a:	mov    ecx,0x1
  40502f:	call   0x42df60
  405034:	mov    ecx,eax
  405036:	call   0x40dc88
  40503b:	mov    rbx,rax
  40503e:	call   rdi
  405040:	lea    rdx,[rip+0x2dd29]        # 0x432d70
  405047:	lea    rcx,[rax+0x60]
  40504b:	mov    r8,rbx
  40504e:	call   0x401600
  405053:	mov    ecx,0x1
  405058:	call   0x42df60
  40505d:	mov    ecx,eax
  40505f:	call   0x40dc88
  405064:	mov    rbx,rax
  405067:	call   rdi
  405069:	lea    rdx,[rip+0x2dcee]        # 0x432d5e
  405070:	lea    rcx,[rax+0x60]
  405074:	mov    r8,rbx
  405077:	call   0x401600
  40507c:	mov    ecx,0x1
  405081:	call   0x42df60
  405086:	nop
  405087:	nop    WORD PTR [rax+rax*1+0x0]
  405090:	push   rbx
  405091:	sub    rsp,0x100
  405098:	mov    rdx,rcx
  40509b:	mov    ecx,0x1
  4050a0:	lea    rbx,[rsp+0x80]
  4050a8:	call   0x40a870
  4050ad:	mov    rcx,QWORD PTR [rip+0x40ed4]        # 0x445f88
  4050b4:	lea    rdx,[rip+0x2dd01]        # 0x432dbc
  4050bb:	mov    QWORD PTR [rsp+0x58],rax
  4050c0:	call   0x401600
  4050c5:	mov    rcx,QWORD PTR [rsp+0x58]
  4050ca:	lea    r8,[rsp+0x48]
  4050cf:	mov    rdx,rbx
  4050d2:	mov    QWORD PTR [rsp+0x48],0x80
  4050db:	call   0x40db80
  4050e0:	test   eax,eax
  4050e2:	js     0x405336
  4050e8:	mov    rcx,QWORD PTR [rip+0x40e99]        # 0x445f88
  4050ef:	lea    rdx,[rip+0x2dce8]        # 0x432dde
  4050f6:	mov    r8,rbx
  4050f9:	call   0x401600
  4050fe:	lea    rcx,[rsp+0x50]
  405103:	call   0x40dc50
  405108:	test   eax,eax
  40510a:	js     0x405309
  405110:	mov    rcx,QWORD PTR [rip+0x40e79]        # 0x445f90
  405117:	lea    rdx,[rsp+0x40]
  40511c:	call   0x415540
  405121:	mov    rdx,QWORD PTR [rsp+0x40]
  405126:	test   rax,rax
  405129:	mov    QWORD PTR [rsp+0x60],rax
  40512e:	mov    DWORD PTR [rsp+0x68],edx
  405132:	je     0x4052cc
  405138:	mov    r8d,DWORD PTR [rip+0x3defd]        # 0x44303c
  40513f:	mov    rcx,QWORD PTR [rsp+0x50]
  405144:	lea    rdx,[rsp+0x60]
  405149:	call   0x40dc58
  40514e:	mov    rcx,QWORD PTR [rsp+0x60]
  405153:	mov    ebx,eax
  405155:	call   0x42df08
  40515a:	test   ebx,ebx
  40515c:	js     0x40529f
  405162:	mov    rdx,QWORD PTR [rip+0x40e1f]        # 0x445f88
  405169:	mov    rcx,QWORD PTR [rsp+0x50]
  40516e:	call   0x4021e0
  405173:	mov    rcx,QWORD PTR [rip+0x40e0e]        # 0x445f88
  40517a:	lea    rdx,[rip+0x2dc6c]        # 0x432ded
  405181:	call   0x401600
  405186:	lea    rax,[rsp+0x3c]
  40518b:	mov    rcx,QWORD PTR [rsp+0x50]
  405190:	lea    rdx,[rsp+0x58]
  405195:	xor    r9d,r9d
  405198:	mov    r8d,0x1
  40519e:	mov    QWORD PTR [rsp+0x20],rax
  4051a3:	call   0x40dc00
  4051a8:	test   eax,eax
  4051aa:	js     0x405272
  4051b0:	mov    eax,DWORD PTR [rsp+0x3c]
  4051b4:	test   eax,eax
  4051b6:	jne    0x405230
  4051b8:	mov    rcx,QWORD PTR [rip+0x40dc9]        # 0x445f88
  4051bf:	lea    rdx,[rip+0x2d2c2]        # 0x432488
  4051c6:	call   0x401600
  4051cb:	mov    ecx,DWORD PTR [rsp+0x3c]
  4051cf:	lea    r8,[rsp+0x70]
  4051d4:	xor    r9d,r9d
  4051d7:	mov    edx,0x1
  4051dc:	call   0x40e190
  4051e1:	test   eax,eax
  4051e3:	js     0x405245
  4051e5:	mov    r8,QWORD PTR [rsp+0x70]
  4051ea:	mov    rcx,QWORD PTR [rip+0x40d97]        # 0x445f88
  4051f1:	lea    rdx,[rip+0x2d2a5]        # 0x43249d
  4051f8:	call   0x401600
  4051fd:	mov    rax,QWORD PTR [rip+0x3880c]        # 0x43da10
  405204:	mov    rcx,QWORD PTR [rsp+0x70]
  405209:	call   QWORD PTR [rax]
  40520b:	mov    rcx,QWORD PTR [rip+0x40d76]        # 0x445f88
  405212:	lea    rdx,[rip+0x2d839]        # 0x432a52
  405219:	call   0x401600
  40521e:	nop
  40521f:	add    rsp,0x100
  405226:	pop    rbx
  405227:	ret    
  405228:	nop    DWORD PTR [rax+rax*1+0x0]
  405230:	mov    rcx,QWORD PTR [rip+0x40d51]        # 0x445f88
  405237:	lea    rdx,[rip+0x2dbdd]        # 0x432e1b
  40523e:	call   0x401600
  405243:	jmp    0x4051cb
  405245:	mov    ecx,eax
  405247:	call   0x40dc88
  40524c:	mov    rbx,rax
  40524f:	call   QWORD PTR [rip+0x4358b]        # 0x4487e0
  405255:	lea    rdx,[rip+0x2d236]        # 0x432492
  40525c:	lea    rcx,[rax+0x60]
  405260:	mov    r8,rbx
  405263:	call   0x401600
  405268:	mov    ecx,0x1
  40526d:	call   0x42df60
  405272:	mov    ecx,eax
  405274:	call   0x40dc88
  405279:	mov    rbx,rax
  40527c:	call   QWORD PTR [rip+0x4355e]        # 0x4487e0
  405282:	lea    rdx,[rip+0x2db7a]        # 0x432e03
  405289:	lea    rcx,[rax+0x60]
  40528d:	mov    r8,rbx
  405290:	call   0x401600
  405295:	mov    ecx,0x1
  40529a:	call   0x42df60
  40529f:	mov    ecx,ebx
  4052a1:	call   0x40dc88
  4052a6:	mov    rbx,rax
  4052a9:	call   QWORD PTR [rip+0x43531]        # 0x4487e0
  4052af:	lea    rdx,[rip+0x2d8b9]        # 0x432b6f
  4052b6:	lea    rcx,[rax+0x60]
  4052ba:	mov    r8,rbx
  4052bd:	call   0x401600
  4052c2:	mov    ecx,0x1
  4052c7:	call   0x42df60
  4052cc:	cmp    QWORD PTR [rip+0x40cbc],0x0        # 0x445f90
  4052d4:	lea    rax,[rip+0x2d400]        # 0x4326db
  4052db:	lea    rbx,[rip+0x2d3fe]        # 0x4326e0
  4052e2:	cmovne rbx,rax
  4052e6:	call   QWORD PTR [rip+0x434f4]        # 0x4487e0
  4052ec:	lea    rdx,[rip+0x2d45c]        # 0x43274f
  4052f3:	lea    rcx,[rax+0x60]
  4052f7:	mov    r8,rbx
  4052fa:	call   0x401600
  4052ff:	mov    ecx,0x1
  405304:	call   0x42df60
  405309:	mov    ecx,eax
  40530b:	call   0x40dc88
  405310:	mov    rbx,rax
  405313:	call   QWORD PTR [rip+0x434c7]        # 0x4487e0
  405319:	lea    rdx,[rip+0x2d9ee]        # 0x432d0e
  405320:	lea    rcx,[rax+0x60]
  405324:	mov    r8,rbx
  405327:	call   0x401600
  40532c:	mov    ecx,0x1
  405331:	call   0x42df60
  405336:	mov    ecx,eax
  405338:	call   0x40dc88
  40533d:	mov    rbx,rax
  405340:	call   QWORD PTR [rip+0x4349a]        # 0x4487e0
  405346:	lea    rdx,[rip+0x2da81]        # 0x432dce
  40534d:	lea    rcx,[rax+0x60]
  405351:	mov    r8,rbx
  405354:	call   0x401600
  405359:	mov    ecx,0x1
  40535e:	call   0x42df60
  405363:	nop
  405364:	xchg   ax,ax
  405366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405370:	push   r15
  405372:	push   r14
  405374:	push   r13
  405376:	push   r12
  405378:	push   rbp
  405379:	push   rdi
  40537a:	push   rsi
  40537b:	push   rbx
  40537c:	sub    rsp,0x228
  405383:	mov    rbx,rcx
  405386:	lea    rcx,[rsp+0x78]
  40538b:	mov    rdi,rdx
  40538e:	mov    DWORD PTR [rsp+0x280],r8d
  405396:	mov    QWORD PTR [rsp+0xa0],0x0
  4053a2:	mov    DWORD PTR [rsp+0xa8],0x0
  4053ad:	mov    QWORD PTR [rsp+0xb0],0x0
  4053b9:	mov    DWORD PTR [rsp+0xb8],0x0
  4053c4:	call   0x40de58
  4053c9:	test   eax,eax
  4053cb:	js     0x4059fd
  4053d1:	mov    rcx,QWORD PTR [rip+0x40bb8]        # 0x445f90
  4053d8:	lea    rdx,[rsp+0x80]
  4053e0:	call   0x415540
  4053e5:	mov    rdx,QWORD PTR [rsp+0x80]
  4053ed:	test   rax,rax
  4053f0:	mov    QWORD PTR [rsp+0x90],rax
  4053f8:	mov    DWORD PTR [rsp+0x98],edx
  4053ff:	je     0x405a2a
  405405:	mov    r8d,DWORD PTR [rbx+0x1c]
  405409:	mov    rcx,QWORD PTR [rsp+0x78]
  40540e:	lea    rdx,[rsp+0x90]
  405416:	call   0x40de60
  40541b:	mov    rcx,QWORD PTR [rsp+0x90]
  405423:	mov    esi,eax
  405425:	call   0x42df08
  40542a:	test   esi,esi
  40542c:	js     0x405a67
  405432:	cmp    QWORD PTR [rbx+0x28],0x0
  405437:	je     0x405ab3
  40543d:	mov    rdx,rbx
  405440:	mov    ecx,0x1
  405445:	call   0x40a470
  40544a:	mov    QWORD PTR [rsp+0x60],0x0
  405453:	mov    QWORD PTR [rsp+0x50],rax
  405458:	mov    rcx,QWORD PTR [rbx+0x48]
  40545c:	test   rcx,rcx
  40545f:	je     0x405a94
  405465:	lea    rdx,[rip+0x2d9cb]        # 0x432e37
  40546c:	call   0x42df30
  405471:	test   rax,rax
  405474:	mov    rsi,rax
  405477:	je     0x405e07
  40547d:	lea    rax,[rsp+0x180]
  405485:	mov    rcx,rsi
  405488:	mov    rdx,rax
  40548b:	mov    QWORD PTR [rsp+0x48],rax
  405490:	call   0x415540
  405495:	test   rax,rax
  405498:	mov    QWORD PTR [rsp+0xa0],rax
  4054a0:	je     0x405e0d
  4054a6:	mov    rax,QWORD PTR [rsp+0x180]
  4054ae:	mov    rcx,rsi
  4054b1:	mov    DWORD PTR [rsp+0xa8],eax
  4054b8:	call   0x42df58
  4054bd:	test   rdi,rdi
  4054c0:	je     0x405aa6
  4054c6:	xor    eax,eax
  4054c8:	mov    DWORD PTR [rsp+0xd0],0x2
  4054d3:	mov    QWORD PTR [rsp+0xd8],rdi
  4054db:	or     rcx,0xffffffffffffffff
  4054df:	repnz scas al,BYTE PTR es:[rdi]
  4054e1:	mov    DWORD PTR [rsp+0x6c],0x1
  4054e9:	mov    rax,rcx
  4054ec:	not    rax
  4054ef:	sub    rax,0x1
  4054f3:	mov    DWORD PTR [rsp+0xe0],eax
  4054fa:	mov    r12,QWORD PTR [rip+0x3850f]        # 0x43da10
  405501:	xor    ebp,ebp
  405503:	mov    ebx,0x1
  405508:	mov    r13,r12
  40550b:	mov    QWORD PTR [rsp+0x58],r12
  405510:	mov    r8,QWORD PTR [rsp+0x48]
  405515:	mov    rcx,QWORD PTR [rsp+0x78]
  40551a:	mov    edx,ebp
  40551c:	call   0x40de68
  405521:	test   eax,eax
  405523:	js     0x40596a
  405529:	mov    r9d,DWORD PTR [rsp+0x280]
  405531:	test   r9d,r9d
  405534:	jne    0x405730
  40553a:	test   ebp,ebp
  40553c:	lea    r14,[rip+0x40a45]        # 0x445f88
  405543:	je     0x405911
  405549:	lea    rsi,[rsp+0xc0]
  405551:	mov    QWORD PTR [rsp+0xc0],0x0
  40555d:	mov    QWORD PTR [rsp+0x100],0x0
  405569:	mov    DWORD PTR [rsp+0x108],0x0
  405574:	mov    rcx,rsi
  405577:	call   0x40da90
  40557c:	test   eax,eax
  40557e:	js     0x4055f1
  405580:	mov    rax,QWORD PTR [rsp+0x48]
  405585:	mov    rcx,QWORD PTR [rsp+0xc0]
  40558d:	lea    rdx,[rax+0x18]
  405591:	call   0x40da98
  405596:	test   eax,eax
  405598:	js     0x4055d5
  40559a:	mov    rcx,QWORD PTR [rsp+0xc0]
  4055a2:	lea    rdx,[rsp+0x100]
  4055aa:	call   0x40daa0
  4055af:	test   eax,eax
  4055b1:	js     0x4055d5
  4055b3:	mov    r9,QWORD PTR [rsp+0x100]
  4055bb:	mov    rcx,QWORD PTR [rip+0x409c6]        # 0x445f88
  4055c2:	lea    r8,[rip+0x2d8ec]        # 0x432eb5
  4055c9:	lea    rdx,[rip+0x2d51e]        # 0x432aee
  4055d0:	call   0x401600
  4055d5:	mov    rcx,QWORD PTR [rsp+0xc0]
  4055dd:	call   0x40daa8
  4055e2:	mov    rax,QWORD PTR [rsp+0x58]
  4055e7:	mov    rcx,QWORD PTR [rsp+0x100]
  4055ef:	call   QWORD PTR [rax]
  4055f1:	cmp    QWORD PTR [rsp+0x1a8],0x0
  4055fa:	je     0x40560d
  4055fc:	mov    r8d,DWORD PTR [rsp+0x1b0]
  405604:	test   r8d,r8d
  405607:	jne    0x405930
  40560d:	cmp    QWORD PTR [rsp+0x1b8],0x0
  405616:	je     0x405627
  405618:	mov    ecx,DWORD PTR [rsp+0x1c0]
  40561f:	test   ecx,ecx
  405621:	jne    0x405950
  405627:	cmp    QWORD PTR [rsp+0x1c8],0xffffffffffffffff
  405630:	je     0x405657
  405632:	mov    rax,QWORD PTR [rsp+0x48]
  405637:	lea    rcx,[rax+0x48]
  40563b:	call   QWORD PTR [rip+0x431df]        # 0x448820
  405641:	mov    rcx,QWORD PTR [rip+0x40940]        # 0x445f88
  405648:	lea    rdx,[rip+0x2d8a3]        # 0x432ef2
  40564f:	mov    r8,rax
  405652:	call   0x401600
  405657:	mov    ecx,DWORD PTR [rsp+0x180]
  40565e:	call   0x40dcb0
  405663:	mov    rcx,QWORD PTR [rip+0x4091e]        # 0x445f88
  40566a:	lea    rdx,[rip+0x2d893]        # 0x432f04
  405671:	mov    r8,rax
  405674:	call   0x401600
  405679:	mov    rcx,QWORD PTR [rsp+0x1d0]
  405681:	test   rcx,rcx
  405684:	je     0x4057d0
  40568a:	xor    ebx,ebx
  40568c:	lea    rdi,[rsp+0x88]
  405694:	lea    r15,[rsp+0x100]
  40569c:	jmp    0x4056e3
  40569e:	xchg   ax,ax
  4056a0:	mov    r9,QWORD PTR [rsp+0x88]
  4056a8:	lea    r8,[rip+0x2d884]        # 0x432f33
  4056af:	mov    rcx,r15
  4056b2:	mov    edx,0x80
  4056b7:	call   0x415c60
  4056bc:	mov    rcx,QWORD PTR [rsp+0xc0]
  4056c4:	test   rcx,rcx
  4056c7:	je     0x4056d4
  4056c9:	mov    edx,DWORD PTR [rsp+0xc8]
  4056d0:	test   edx,edx
  4056d2:	jne    0x405715
  4056d4:	call   QWORD PTR [r13+0x0]
  4056d8:	mov    rcx,QWORD PTR [rsp+0x1d0]
  4056e0:	add    ebx,0x1
  4056e3:	mov    DWORD PTR [rsp+0x20],0x0
  4056eb:	mov    r9,rsi
  4056ee:	mov    r8,rdi
  4056f1:	mov    edx,ebx
  4056f3:	call   0x40de78
  4056f8:	test   eax,eax
  4056fa:	js     0x4057d0
  405700:	test   ebx,ebx
  405702:	jne    0x4056a0
  405704:	mov    rcx,QWORD PTR [r14]
  405707:	lea    rdx,[rip+0x2d810]        # 0x432f1e
  40570e:	call   0x401600
  405713:	jmp    0x4056a0
  405715:	mov    rcx,r15
  405718:	mov    rdx,rsi
  40571b:	call   0x403a80
  405720:	mov    rcx,QWORD PTR [rsp+0xc0]
  405728:	jmp    0x4056d4
  40572a:	nop    WORD PTR [rax+rax*1+0x0]
  405730:	test   ebp,ebp
  405732:	jne    0x40575e
  405734:	mov    rcx,QWORD PTR [rsp+0xa0]
  40573c:	test   rcx,rcx
  40573f:	je     0x40599e
  405745:	mov    r8d,DWORD PTR [rsp+0xa8]
  40574d:	mov    r9,QWORD PTR [rip+0x40834]        # 0x445f88
  405754:	mov    edx,0x1
  405759:	call   0x42dee0
  40575e:	mov    rcx,QWORD PTR [rsp+0x48]
  405763:	call   0x40de30
  405768:	mov    rdx,QWORD PTR [rsp+0x50]
  40576d:	lea    rax,[rsp+0xa0]
  405775:	test   rdx,rdx
  405778:	je     0x4058d0
  40577e:	cmp    QWORD PTR [rsp+0xa0],0x0
  405787:	mov    rcx,QWORD PTR [rsp+0x78]
  40578c:	mov    r9d,0x0
  405792:	mov    DWORD PTR [rsp+0x20],0x0
  40579a:	mov    r8d,ebp
  40579d:	cmovne r9,rax
  4057a1:	call   0x40de20
  4057a6:	test   eax,eax
  4057a8:	js     0x4058a0
  4057ae:	call   QWORD PTR [rip+0x4302c]        # 0x4487e0
  4057b4:	lea    rdx,[rip+0x2d7e9]        # 0x432fa4
  4057bb:	lea    rcx,[rax+0x60]
  4057bf:	xor    ebx,ebx
  4057c1:	call   0x401600
  4057c6:	add    ebp,0x1
  4057c9:	jmp    0x405510
  4057ce:	xchg   ax,ax
  4057d0:	mov    rcx,QWORD PTR [rsp+0x1d8]
  4057d8:	test   rcx,rcx
  4057db:	je     0x405885
  4057e1:	xor    ebx,ebx
  4057e3:	lea    rdi,[rsp+0x88]
  4057eb:	lea    r15,[rsp+0x100]
  4057f3:	jmp    0x405838
  4057f5:	mov    r9,QWORD PTR [rsp+0x88]
  4057fd:	lea    r8,[rip+0x2d72f]        # 0x432f33
  405804:	mov    rcx,r15
  405807:	mov    edx,0x80
  40580c:	call   0x415c60
  405811:	mov    rcx,QWORD PTR [rsp+0xc0]
  405819:	test   rcx,rcx
  40581c:	je     0x405829
  40581e:	mov    eax,DWORD PTR [rsp+0xc8]
  405825:	test   eax,eax
  405827:	jne    0x405870
  405829:	call   QWORD PTR [r12]
  40582d:	mov    rcx,QWORD PTR [rsp+0x1d8]
  405835:	add    ebx,0x1
  405838:	mov    DWORD PTR [rsp+0x20],0x0
  405840:	mov    r9,rsi
  405843:	mov    r8,rdi
  405846:	mov    edx,ebx
  405848:	call   0x40de78
  40584d:	test   eax,eax
  40584f:	js     0x405885
  405851:	test   ebx,ebx
  405853:	jne    0x4057f5
  405855:	mov    rcx,QWORD PTR [r14]
  405858:	lea    rdx,[rip+0x2d6d9]        # 0x432f38
  40585f:	call   0x401600
  405864:	jmp    0x4057f5
  405866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405870:	mov    rcx,r15
  405873:	mov    rdx,rsi
  405876:	call   0x403a80
  40587b:	mov    rcx,QWORD PTR [rsp+0xc0]
  405883:	jmp    0x405829
  405885:	mov    rcx,QWORD PTR [rip+0x406fc]        # 0x445f88
  40588c:	lea    rdx,[rip+0x2d1bf]        # 0x432a52
  405893:	call   0x401600
  405898:	jmp    0x40575e
  40589d:	nop    DWORD PTR [rax]
  4058a0:	mov    ecx,eax
  4058a2:	call   0x40dc88
  4058a7:	mov    rbx,rax
  4058aa:	call   QWORD PTR [rip+0x42f30]        # 0x4487e0
  4058b0:	lea    rdx,[rip+0x2d6c1]        # 0x432f78
  4058b7:	lea    rcx,[rax+0x60]
  4058bb:	mov    r8,rbx
  4058be:	mov    ebx,0x1
  4058c3:	call   0x401600
  4058c8:	jmp    0x4057c6
  4058cd:	nop    DWORD PTR [rax]
  4058d0:	cmp    QWORD PTR [rsp+0xa0],0x0
  4058d9:	mov    r9d,DWORD PTR [rsp+0x6c]
  4058de:	lea    r8,[rsp+0xd0]
  4058e6:	cmove  rax,QWORD PTR [rsp+0x50]
  4058ec:	mov    rdx,QWORD PTR [rsp+0x60]
  4058f1:	mov    rcx,QWORD PTR [rsp+0x78]
  4058f6:	mov    DWORD PTR [rsp+0x30],0x0
  4058fe:	mov    DWORD PTR [rsp+0x20],ebp
  405902:	mov    QWORD PTR [rsp+0x28],rax
  405907:	call   0x40de28
  40590c:	jmp    0x4057a6
  405911:	mov    rcx,QWORD PTR [rip+0x40670]        # 0x445f88
  405918:	lea    rdx,[rip+0x2d58c]        # 0x432eab
  40591f:	call   0x401600
  405924:	jmp    0x405549
  405929:	nop    DWORD PTR [rax+0x0]
  405930:	mov    rax,QWORD PTR [rsp+0x48]
  405935:	lea    rcx,[rip+0x2d58d]        # 0x432ec9
  40593c:	lea    rdx,[rax+0x28]
  405940:	call   0x403a80
  405945:	jmp    0x40560d
  40594a:	nop    WORD PTR [rax+rax*1+0x0]
  405950:	mov    rax,QWORD PTR [rsp+0x48]
  405955:	lea    rcx,[rip+0x2d57e]        # 0x432eda
  40595c:	lea    rdx,[rax+0x38]
  405960:	call   0x403a80
  405965:	jmp    0x405627
  40596a:	mov    rcx,QWORD PTR [rsp+0x78]
  40596f:	call   0x40de90
  405974:	mov    rax,QWORD PTR [rsp+0x50]
  405979:	test   rax,rax
  40597c:	je     0x405c77
  405982:	mov    rcx,rax
  405985:	call   0x40db90
  40598a:	mov    rcx,QWORD PTR [rsp+0xa0]
  405992:	call   0x42df08
  405997:	mov    ecx,ebx
  405999:	call   0x42df60
  40599e:	mov    rcx,QWORD PTR [rsp+0x78]
  4059a3:	lea    r8,[rsp+0xb0]
  4059ab:	xor    edx,edx
  4059ad:	call   0x40de70
  4059b2:	test   eax,eax
  4059b4:	js     0x405cd6
  4059ba:	mov    r8d,DWORD PTR [rsp+0xb8]
  4059c2:	mov    r9,QWORD PTR [rip+0x405bf]        # 0x445f88
  4059c9:	mov    edx,0x1
  4059ce:	mov    rcx,QWORD PTR [rsp+0xb0]
  4059d6:	call   0x42dee0
  4059db:	mov    rax,QWORD PTR [rip+0x3802e]        # 0x43da10
  4059e2:	mov    rcx,QWORD PTR [rsp+0xb0]
  4059ea:	call   QWORD PTR [rax]
  4059ec:	mov    QWORD PTR [rsp+0xb0],0x0
  4059f8:	jmp    0x40575e
  4059fd:	mov    ecx,eax
  4059ff:	call   0x40dc88
  405a04:	mov    rbx,rax
  405a07:	call   QWORD PTR [rip+0x42dd3]        # 0x4487e0
  405a0d:	lea    rdx,[rip+0x2d416]        # 0x432e2a
  405a14:	lea    rcx,[rax+0x60]
  405a18:	mov    r8,rbx
  405a1b:	call   0x401600
  405a20:	mov    ecx,0x1
  405a25:	call   0x42df60
  405a2a:	cmp    QWORD PTR [rip+0x4055e],0x0        # 0x445f90
  405a32:	lea    rax,[rip+0x2cca2]        # 0x4326db
  405a39:	lea    rbx,[rip+0x2cca0]        # 0x4326e0
  405a40:	cmovne rbx,rax
  405a44:	call   QWORD PTR [rip+0x42d96]        # 0x4487e0
  405a4a:	lea    rdx,[rip+0x2ccfe]        # 0x43274f
  405a51:	lea    rcx,[rax+0x60]
  405a55:	mov    r8,rbx
  405a58:	call   0x401600
  405a5d:	mov    ecx,0x1
  405a62:	call   0x42df60
  405a67:	mov    ecx,esi
  405a69:	call   0x40dc88
  405a6e:	mov    rbx,rax
  405a71:	call   QWORD PTR [rip+0x42d69]        # 0x4487e0
  405a77:	lea    rdx,[rip+0x2d0f1]        # 0x432b6f
  405a7e:	lea    rcx,[rax+0x60]
  405a82:	mov    r8,rbx
  405a85:	call   0x401600
  405a8a:	mov    ecx,0x1
  405a8f:	call   0x42df60
  405a94:	lea    rax,[rsp+0x180]
  405a9c:	mov    QWORD PTR [rsp+0x48],rax
  405aa1:	jmp    0x4054bd
  405aa6:	mov    DWORD PTR [rsp+0x6c],0x0
  405aae:	jmp    0x4054fa
  405ab3:	lea    rcx,[rsp+0x88]
  405abb:	xor    edx,edx
  405abd:	mov    QWORD PTR [rsp+0x100],0x0
  405ac9:	mov    DWORD PTR [rsp+0x108],0x0
  405ad4:	mov    QWORD PTR [rsp+0x180],0x0
  405ae0:	mov    DWORD PTR [rsp+0x188],0x0
  405aeb:	call   0x40d9f0
  405af0:	test   eax,eax
  405af2:	js     0x405dda
  405af8:	mov    rcx,QWORD PTR [rbx+0x40]
  405afc:	test   rcx,rcx
  405aff:	je     0x405d03
  405b05:	lea    rdx,[rip+0x2d32b]        # 0x432e37
  405b0c:	call   0x42df30
  405b11:	test   rax,rax
  405b14:	mov    rsi,rax
  405b17:	je     0x405d8d
  405b1d:	lea    rdx,[rsp+0xc0]
  405b25:	mov    rcx,rax
  405b28:	call   0x415540
  405b2d:	test   rax,rax
  405b30:	je     0x405d6d
  405b36:	mov    QWORD PTR [rsp+0x100],rax
  405b3e:	mov    rax,QWORD PTR [rsp+0xc0]
  405b46:	mov    rcx,rsi
  405b49:	mov    DWORD PTR [rsp+0x108],eax
  405b50:	call   0x42df58
  405b55:	mov    rcx,QWORD PTR [rbx+0x38]
  405b59:	test   rcx,rcx
  405b5c:	je     0x405bb1
  405b5e:	lea    rdx,[rip+0x2d2d2]        # 0x432e37
  405b65:	call   0x42df30
  405b6a:	test   rax,rax
  405b6d:	mov    rsi,rax
  405b70:	je     0x405dd4
  405b76:	lea    rdx,[rsp+0xd0]
  405b7e:	mov    rcx,rax
  405b81:	call   0x415540
  405b86:	test   rax,rax
  405b89:	mov    rbp,rax
  405b8c:	je     0x405db4
  405b92:	mov    rcx,rsi
  405b95:	call   0x42df58
  405b9a:	mov    rax,QWORD PTR [rsp+0xd0]
  405ba2:	mov    QWORD PTR [rsp+0x180],rbp
  405baa:	mov    DWORD PTR [rsp+0x188],eax
  405bb1:	cmp    QWORD PTR [rsp+0x180],0x0
  405bba:	mov    DWORD PTR [rsp+0x28],0x0
  405bc2:	lea    r8,[rsp+0x180]
  405bca:	mov    DWORD PTR [rsp+0x20],0x0
  405bd2:	lea    rbp,[rsp+0x100]
  405bda:	mov    r9d,DWORD PTR [rbx+0x1c]
  405bde:	mov    rcx,QWORD PTR [rsp+0x88]
  405be6:	mov    eax,0x0
  405beb:	mov    rdx,rbp
  405bee:	cmove  r8,rax
  405bf2:	call   0x40da00
  405bf7:	test   eax,eax
  405bf9:	mov    esi,eax
  405bfb:	js     0x405c8b
  405c01:	mov    rcx,QWORD PTR [rsp+0x100]
  405c09:	call   0x42df08
  405c0e:	mov    rcx,QWORD PTR [rsp+0x180]
  405c16:	call   0x42df08
  405c1b:	mov    rbp,QWORD PTR [rip+0x42bbe]        # 0x4487e0
  405c22:	call   rbp
  405c24:	lea    rdx,[rip+0x2d3ba]        # 0x432fe5
  405c2b:	lea    rcx,[rax+0x60]
  405c2f:	mov    r8d,esi
  405c32:	call   0x401600
  405c37:	mov    rax,QWORD PTR [rsp+0x88]
  405c3f:	mov    QWORD PTR [rsp+0x50],0x0
  405c48:	test   rax,rax
  405c4b:	mov    QWORD PTR [rsp+0x60],rax
  405c50:	jne    0x405458
  405c56:	call   rbp
  405c58:	lea    rdx,[rip+0x2d21a]        # 0x432e79
  405c5f:	lea    rcx,[rax+0x60]
  405c63:	call   0x401600
  405c68:	mov    rax,QWORD PTR [rsp+0x60]
  405c6d:	mov    QWORD PTR [rsp+0x50],rax
  405c72:	jmp    0x405458
  405c77:	mov    rcx,QWORD PTR [rsp+0x60]
  405c7c:	mov    edx,0x1
  405c81:	call   0x40d9f8
  405c86:	jmp    0x40598a
  405c8b:	cmp    QWORD PTR [rsp+0x180],0x0
  405c94:	lea    r8,[rsp+0x180]
  405c9c:	mov    rcx,QWORD PTR [rsp+0x88]
  405ca4:	mov    eax,0x0
  405ca9:	mov    DWORD PTR [rsp+0x28],0x0
  405cb1:	mov    DWORD PTR [rsp+0x20],0x0
  405cb9:	mov    r9d,0x1
  405cbf:	mov    rdx,rbp
  405cc2:	cmove  r8,rax
  405cc6:	call   0x40da00
  405ccb:	test   eax,eax
  405ccd:	js     0x405d40
  405ccf:	mov    esi,eax
  405cd1:	jmp    0x405c01
  405cd6:	mov    ecx,eax
  405cd8:	call   0x40dc88
  405cdd:	mov    rbx,rax
  405ce0:	call   QWORD PTR [rip+0x42afa]        # 0x4487e0
  405ce6:	lea    rdx,[rip+0x2d263]        # 0x432f50
  405ced:	lea    rcx,[rax+0x60]
  405cf1:	mov    r8,rbx
  405cf4:	call   0x401600
  405cf9:	mov    ecx,0x1
  405cfe:	call   0x42df60
  405d03:	mov    rcx,QWORD PTR [rsp+0x88]
  405d0b:	xor    r8d,r8d
  405d0e:	xor    edx,edx
  405d10:	call   0x40da08
  405d15:	test   eax,eax
  405d17:	mov    esi,eax
  405d19:	js     0x405e2d
  405d1f:	mov    rbp,QWORD PTR [rip+0x42aba]        # 0x4487e0
  405d26:	call   rbp
  405d28:	lea    rdx,[rip+0x2c7c1]        # 0x4324f0
  405d2f:	lea    rcx,[rax+0x60]
  405d33:	mov    r8d,esi
  405d36:	call   0x401600
  405d3b:	jmp    0x405c37
  405d40:	mov    ecx,esi
  405d42:	call   0x40dc88
  405d47:	mov    rbx,rax
  405d4a:	call   QWORD PTR [rip+0x42a90]        # 0x4487e0
  405d50:	lea    rdx,[rip+0x2d269]        # 0x432fc0
  405d57:	lea    rcx,[rax+0x60]
  405d5b:	mov    r8,rbx
  405d5e:	call   0x401600
  405d63:	mov    ecx,0x1
  405d68:	call   0x42df60
  405d6d:	call   QWORD PTR [rip+0x42a6d]        # 0x4487e0
  405d73:	lea    rdx,[rip+0x2d0d2]        # 0x432e4c
  405d7a:	lea    rcx,[rax+0x60]
  405d7e:	call   0x401600
  405d83:	mov    ecx,0x1
  405d88:	call   0x42df60
  405d8d:	mov    rbx,QWORD PTR [rbx+0x40]
  405d91:	call   QWORD PTR [rip+0x42a49]        # 0x4487e0
  405d97:	lea    rdx,[rip+0x2d09b]        # 0x432e39
  405d9e:	lea    rcx,[rax+0x60]
  405da2:	mov    r8,rbx
  405da5:	call   0x401600
  405daa:	mov    ecx,0x1
  405daf:	call   0x42df60
  405db4:	call   QWORD PTR [rip+0x42a26]        # 0x4487e0
  405dba:	lea    rdx,[rip+0x2d0a1]        # 0x432e62
  405dc1:	lea    rcx,[rax+0x60]
  405dc5:	call   0x401600
  405dca:	mov    ecx,0x1
  405dcf:	call   0x42df60
  405dd4:	mov    rbx,QWORD PTR [rbx+0x38]
  405dd8:	jmp    0x405d91
  405dda:	mov    ecx,eax
  405ddc:	call   0x40dc88
  405de1:	mov    rbx,rax
  405de4:	call   QWORD PTR [rip+0x429f6]        # 0x4487e0
  405dea:	lea    rdx,[rip+0x2c6b7]        # 0x4324a8
  405df1:	lea    rcx,[rax+0x60]
  405df5:	mov    r8,rbx
  405df8:	call   0x401600
  405dfd:	mov    ecx,0x1
  405e02:	call   0x42df60
  405e07:	mov    rbx,QWORD PTR [rbx+0x48]
  405e0b:	jmp    0x405d91
  405e0d:	call   QWORD PTR [rip+0x429cd]        # 0x4487e0
  405e13:	lea    rdx,[rip+0x2d079]        # 0x432e93
  405e1a:	lea    rcx,[rax+0x60]
  405e1e:	call   0x401600
  405e23:	mov    ecx,0x1
  405e28:	call   0x42df60
  405e2d:	mov    ecx,eax
  405e2f:	call   0x40dc88
  405e34:	mov    rbx,rax
  405e37:	call   QWORD PTR [rip+0x429a3]        # 0x4487e0
  405e3d:	lea    rdx,[rip+0x2c68c]        # 0x4324d0
  405e44:	lea    rcx,[rax+0x60]
  405e48:	mov    r8,rbx
  405e4b:	call   0x401600
  405e50:	mov    ecx,0x1
  405e55:	call   0x42df60
  405e5a:	nop
  405e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  405e60:	push   r12
  405e62:	push   rbp
  405e63:	push   rdi
  405e64:	push   rsi
  405e65:	push   rbx
  405e66:	sub    rsp,0x60
  405e6a:	mov    rax,QWORD PTR [rip+0x37b7f]        # 0x43d9f0
  405e71:	mov    rsi,rcx
  405e74:	lea    rcx,[rsp+0x40]
  405e79:	mov    edi,edx
  405e7b:	mov    r8,QWORD PTR [rax+0x78]
  405e7f:	mov    eax,DWORD PTR [r8+0x1390]
  405e86:	and    eax,0xf
  405e89:	cmp    eax,0x1
  405e8c:	sbb    ebx,ebx
  405e8e:	not    ebx
  405e90:	and    ebx,0x2
  405e93:	mov    eax,ebx
  405e95:	or     eax,0x4
  405e98:	test   BYTE PTR [r8+0x1328],0x20
  405ea0:	cmove  ebx,eax
  405ea3:	call   0x40de58
  405ea8:	test   eax,eax
  405eaa:	js     0x405fb1
  405eb0:	lea    rbp,[rsp+0x48]
  405eb5:	mov    rcx,QWORD PTR [rip+0x400d4]        # 0x445f90
  405ebc:	mov    rdx,rbp
  405ebf:	call   0x415540
  405ec4:	mov    rdx,QWORD PTR [rsp+0x48]
  405ec9:	test   rax,rax
  405ecc:	mov    QWORD PTR [rsp+0x50],rax
  405ed1:	mov    DWORD PTR [rsp+0x58],edx
  405ed5:	je     0x405fde
  405edb:	mov    rdx,rsi
  405ede:	mov    ecx,0x1
  405ee3:	call   0x40a470
  405ee8:	mov    rdx,rsi
  405eeb:	mov    ecx,0x1
  405ef0:	mov    r12,rax
  405ef3:	call   0x40a000
  405ef8:	mov    rsi,rax
  405efb:	mov    eax,ebx
  405efd:	mov    rcx,r12
  405f00:	or     eax,0x1
  405f03:	test   edi,edi
  405f05:	cmovne ebx,eax
  405f08:	call   0x402160
  405f0d:	mov    rcx,QWORD PTR [rsp+0x40]
  405f12:	lea    r9,[rsp+0x50]
  405f17:	mov    DWORD PTR [rsp+0x38],ebx
  405f1b:	mov    DWORD PTR [rsp+0x30],eax
  405f1f:	mov    QWORD PTR [rsp+0x28],0x0
  405f28:	mov    r8,rsi
  405f2b:	mov    QWORD PTR [rsp+0x20],0x0
  405f34:	mov    rdx,r12
  405f37:	call   0x40de38
  405f3c:	test   eax,eax
  405f3e:	js     0x40601b
  405f44:	mov    rax,QWORD PTR [rip+0x37b95]        # 0x43dae0
  405f4b:	mov    rbx,QWORD PTR [rip+0x37b7e]        # 0x43dad0
  405f52:	mov    r9,rbp
  405f55:	mov    edx,DWORD PTR [rip+0x3d0dd]        # 0x443038
  405f5b:	mov    rcx,QWORD PTR [rsp+0x40]
  405f60:	mov    eax,DWORD PTR [rax]
  405f62:	mov    r8,QWORD PTR [rbx]
  405f65:	mov    QWORD PTR [rsp+0x48],rax
  405f6a:	call   0x40de88
  405f6f:	test   eax,eax
  405f71:	js     0x406048
  405f77:	mov    r9,QWORD PTR [rip+0x4000a]        # 0x445f88
  405f7e:	mov    r8,QWORD PTR [rsp+0x48]
  405f83:	mov    edx,0x1
  405f88:	mov    rcx,QWORD PTR [rbx]
  405f8b:	call   0x42dee0
  405f90:	mov    rcx,rsi
  405f93:	call   0x40ddc8
  405f98:	mov    rcx,r12
  405f9b:	call   0x40db90
  405fa0:	mov    rcx,QWORD PTR [rsp+0x40]
  405fa5:	call   0x40de90
  405faa:	xor    ecx,ecx
  405fac:	call   0x42df60
  405fb1:	mov    ecx,eax
  405fb3:	call   0x40dc88
  405fb8:	mov    rbx,rax
  405fbb:	call   QWORD PTR [rip+0x4281f]        # 0x4487e0
  405fc1:	lea    rdx,[rip+0x2ce62]        # 0x432e2a
  405fc8:	lea    rcx,[rax+0x60]
  405fcc:	mov    r8,rbx
  405fcf:	call   0x401600
  405fd4:	mov    ecx,0x1
  405fd9:	call   0x42df60
  405fde:	cmp    QWORD PTR [rip+0x3ffaa],0x0        # 0x445f90
  405fe6:	lea    rax,[rip+0x2c6ee]        # 0x4326db
  405fed:	lea    rbx,[rip+0x2c6ec]        # 0x4326e0
  405ff4:	cmovne rbx,rax
  405ff8:	call   QWORD PTR [rip+0x427e2]        # 0x4487e0
  405ffe:	lea    rdx,[rip+0x2c74a]        # 0x43274f
  406005:	lea    rcx,[rax+0x60]
  406009:	mov    r8,rbx
  40600c:	call   0x401600
  406011:	mov    ecx,0x1
  406016:	call   0x42df60
  40601b:	mov    ecx,eax
  40601d:	call   0x40dc88
  406022:	mov    rbx,rax
  406025:	call   QWORD PTR [rip+0x427b5]        # 0x4487e0
  40602b:	lea    rdx,[rip+0x2cfce]        # 0x433000
  406032:	lea    rcx,[rax+0x60]
  406036:	mov    r8,rbx
  406039:	call   0x401600
  40603e:	mov    ecx,0x1
  406043:	call   0x42df60
  406048:	mov    ecx,eax
  40604a:	call   0x40dc88
  40604f:	mov    rbx,rax
  406052:	call   QWORD PTR [rip+0x42788]        # 0x4487e0
  406058:	lea    rdx,[rip+0x2cfb4]        # 0x433013
  40605f:	lea    rcx,[rax+0x60]
  406063:	mov    r8,rbx
  406066:	call   0x401600
  40606b:	mov    ecx,0x1
  406070:	call   0x42df60
  406075:	nop
  406076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406080:	push   r12
  406082:	push   rbp
  406083:	push   rdi
  406084:	push   rsi
  406085:	push   rbx
  406086:	sub    rsp,0x50
  40608a:	lea    rdx,[rsp+0x38]
  40608f:	mov    r8,rcx
  406092:	mov    rbx,rcx
  406095:	mov    ecx,0x1
  40609a:	mov    QWORD PTR [rsp+0x30],0x0
  4060a3:	mov    QWORD PTR [rsp+0x38],0x0
  4060ac:	call   0x40a2c0
  4060b1:	lea    rdx,[rsp+0x30]
  4060b6:	xor    ecx,ecx
  4060b8:	mov    r8,rbx
  4060bb:	mov    rbp,rax
  4060be:	call   0x40a4d0
  4060c3:	lea    rcx,[rsp+0x28]
  4060c8:	mov    rdi,rax
  4060cb:	call   0x40de58
  4060d0:	test   eax,eax
  4060d2:	js     0x40623d
  4060d8:	xor    edx,edx
  4060da:	xor    ebx,ebx
  4060dc:	cmp    QWORD PTR [rsp+0x38],0x0
  4060e2:	jne    0x406105
  4060e4:	jmp    0x406148
  4060e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4060f0:	mov    rcx,QWORD PTR [rsi]
  4060f3:	call   0x40db90
  4060f8:	lea    edx,[rbx+0x1]
  4060fb:	cmp    rdx,QWORD PTR [rsp+0x38]
  406100:	mov    rbx,rdx
  406103:	jae    0x406148
  406105:	lea    rsi,[rbp+rdx*8+0x0]
  40610a:	mov    rcx,QWORD PTR [rsp+0x28]
  40610f:	mov    rdx,QWORD PTR [rsi]
  406112:	call   0x40de40
  406117:	test   eax,eax
  406119:	jns    0x4060f0
  40611b:	mov    ecx,eax
  40611d:	call   0x40dc88
  406122:	mov    rbx,rax
  406125:	call   QWORD PTR [rip+0x426b5]        # 0x4487e0
  40612b:	lea    rdx,[rip+0x2cef3]        # 0x433025
  406132:	lea    rcx,[rax+0x60]
  406136:	mov    r8,rbx
  406139:	call   0x401600
  40613e:	mov    ecx,0x1
  406143:	call   0x42df60
  406148:	mov    r12,QWORD PTR [rip+0x378c1]        # 0x43da10
  40614f:	mov    rcx,rbp
  406152:	xor    ebx,ebx
  406154:	call   QWORD PTR [r12]
  406158:	xor    edx,edx
  40615a:	cmp    QWORD PTR [rsp+0x30],0x0
  406160:	jne    0x406179
  406162:	jmp    0x4061bb
  406164:	mov    rcx,QWORD PTR [rsi]
  406167:	call   0x40dc78
  40616c:	lea    edx,[rbx+0x1]
  40616f:	cmp    rdx,QWORD PTR [rsp+0x30]
  406174:	mov    rbx,rdx
  406177:	jae    0x4061bb
  406179:	lea    rsi,[rdi+rdx*8]
  40617d:	mov    rcx,QWORD PTR [rsp+0x28]
  406182:	mov    rdx,QWORD PTR [rsi]
  406185:	call   0x40de48
  40618a:	test   eax,eax
  40618c:	jns    0x406164
  40618e:	mov    ecx,eax
  406190:	call   0x40dc88
  406195:	mov    rbx,rax
  406198:	call   QWORD PTR [rip+0x42642]        # 0x4487e0
  40619e:	lea    rdx,[rip+0x2ce97]        # 0x43303c
  4061a5:	lea    rcx,[rax+0x60]
  4061a9:	mov    r8,rbx
  4061ac:	call   0x401600
  4061b1:	mov    ecx,0x1
  4061b6:	call   0x42df60
  4061bb:	mov    rcx,rdi
  4061be:	call   QWORD PTR [r12]
  4061c2:	mov    edx,DWORD PTR [rip+0x3ce70]        # 0x443038
  4061c8:	mov    rcx,QWORD PTR [rsp+0x28]
  4061cd:	lea    r8,[rsp+0x40]
  4061d2:	call   0x40de80
  4061d7:	test   eax,eax
  4061d9:	js     0x406210
  4061db:	mov    r8d,DWORD PTR [rsp+0x48]
  4061e0:	mov    r9,QWORD PTR [rip+0x3fda1]        # 0x445f88
  4061e7:	mov    edx,0x1
  4061ec:	mov    rcx,QWORD PTR [rsp+0x40]
  4061f1:	call   0x42dee0
  4061f6:	mov    rcx,QWORD PTR [rsp+0x40]
  4061fb:	call   QWORD PTR [r12]
  4061ff:	mov    rcx,QWORD PTR [rsp+0x28]
  406204:	call   0x40de90
  406209:	xor    ecx,ecx
  40620b:	call   0x42df60
  406210:	mov    ecx,eax
  406212:	call   0x40dc88
  406217:	mov    rbx,rax
  40621a:	call   QWORD PTR [rip+0x425c0]        # 0x4487e0
  406220:	lea    rdx,[rip+0x2cdec]        # 0x433013
  406227:	lea    rcx,[rax+0x60]
  40622b:	mov    r8,rbx
  40622e:	call   0x401600
  406233:	mov    ecx,0x1
  406238:	call   0x42df60
  40623d:	mov    ecx,eax
  40623f:	call   0x40dc88
  406244:	mov    rbx,rax
  406247:	call   QWORD PTR [rip+0x42593]        # 0x4487e0
  40624d:	lea    rdx,[rip+0x2cbd6]        # 0x432e2a
  406254:	lea    rcx,[rax+0x60]
  406258:	mov    r8,rbx
  40625b:	call   0x401600
  406260:	mov    ecx,0x1
  406265:	call   0x42df60
  40626a:	nop
  40626b:	nop    DWORD PTR [rax+rax*1+0x0]
  406270:	push   rbp
  406271:	push   rdi
  406272:	push   rsi
  406273:	push   rbx
  406274:	sub    rsp,0x48
  406278:	mov    rsi,QWORD PTR [rip+0x42561]        # 0x4487e0
  40627f:	mov    rbx,rcx
  406282:	mov    DWORD PTR [rsp+0x34],0x0
  40628a:	call   rsi
  40628c:	lea    rdx,[rip+0x2cdc5]        # 0x433058
  406293:	lea    rcx,[rax+0x60]
  406297:	call   0x401600
  40629c:	mov    rdx,rbx
  40629f:	mov    ecx,0x1
  4062a4:	call   0x40a0c0
  4062a9:	lea    rdx,[rsp+0x34]
  4062ae:	mov    r8d,0x1
  4062b4:	mov    rcx,rbx
  4062b7:	mov    rdi,rax
  4062ba:	call   0x409e60
  4062bf:	mov    rcx,QWORD PTR [rbx+0x68]
  4062c3:	mov    rbp,rax
  4062c6:	call   0x4030e0
  4062cb:	or     eax,DWORD PTR [rsp+0x34]
  4062cf:	mov    rbx,QWORD PTR [rip+0x377fa]        # 0x43dad0
  4062d6:	mov    r8,rbp
  4062d9:	mov    edx,DWORD PTR [rip+0x3cd59]        # 0x443038
  4062df:	mov    rcx,rdi
  4062e2:	mov    r9d,eax
  4062e5:	mov    DWORD PTR [rsp+0x34],eax
  4062e9:	mov    rax,QWORD PTR [rip+0x377f0]        # 0x43dae0
  4062f0:	mov    eax,DWORD PTR [rax]
  4062f2:	mov    QWORD PTR [rsp+0x38],rax
  4062f7:	lea    rax,[rsp+0x38]
  4062fc:	mov    QWORD PTR [rsp+0x28],rax
  406301:	mov    rax,QWORD PTR [rbx]
  406304:	mov    QWORD PTR [rsp+0x20],rax
  406309:	call   0x40da68
  40630e:	test   eax,eax
  406310:	js     0x406335
  406312:	mov    r9,QWORD PTR [rip+0x3fc6f]        # 0x445f88
  406319:	mov    r8,QWORD PTR [rsp+0x38]
  40631e:	mov    edx,0x1
  406323:	mov    rcx,QWORD PTR [rbx]
  406326:	call   0x42dee0
  40632b:	nop
  40632c:	add    rsp,0x48
  406330:	pop    rbx
  406331:	pop    rsi
  406332:	pop    rdi
  406333:	pop    rbp
  406334:	ret    
  406335:	mov    ecx,eax
  406337:	call   0x40dc88
  40633c:	mov    rbx,rax
  40633f:	call   rsi
  406341:	lea    rdx,[rip+0x2cd37]        # 0x43307f
  406348:	lea    rcx,[rax+0x60]
  40634c:	mov    r8,rbx
  40634f:	call   0x401600
  406354:	mov    ecx,0x1
  406359:	call   0x42df60
  40635e:	nop
  40635f:	nop
  406360:	push   r15
  406362:	push   r14
  406364:	push   r13
  406366:	push   r12
  406368:	push   rbp
  406369:	push   rdi
  40636a:	push   rsi
  40636b:	push   rbx
  40636c:	sub    rsp,0x108
  406373:	mov    rax,QWORD PTR [rip+0x42466]        # 0x4487e0
  40637a:	mov    rbx,rcx
  40637d:	mov    DWORD PTR [rsp+0x74],0x0
  406385:	mov    QWORD PTR [rsp+0x58],rax
  40638a:	call   rax
  40638c:	lea    rdx,[rip+0x2ccfd]        # 0x433090
  406393:	lea    rcx,[rax+0x60]
  406397:	call   0x401600
  40639c:	lea    rdx,[rsp+0x90]
  4063a4:	xor    ecx,ecx
  4063a6:	mov    r8,rbx
  4063a9:	call   0x40b8f0
  4063ae:	lea    rdx,[rsp+0x88]
  4063b6:	xor    ecx,ecx
  4063b8:	mov    r8,rbx
  4063bb:	mov    QWORD PTR [rsp+0x60],rax
  4063c0:	call   0x40a2c0
  4063c5:	xor    ecx,ecx
  4063c7:	mov    rdx,rbx
  4063ca:	mov    r15,rax
  4063cd:	call   0x40a870
  4063d2:	mov    QWORD PTR [rsp+0x50],rax
  4063d7:	mov    rax,QWORD PTR [rip+0x37612]        # 0x43d9f0
  4063de:	mov    rax,QWORD PTR [rax+0x78]
  4063e2:	test   BYTE PTR [rax+0x1188],0xf
  4063e9:	je     0x40685e
  4063ef:	mov    rax,QWORD PTR [rax+0x1190]
  4063f6:	mov    QWORD PTR [rsp+0x30],rax
  4063fb:	lea    rcx,[rsp+0x78]
  406400:	call   0x40deb0
  406405:	test   eax,eax
  406407:	js     0x406a4c
  40640d:	lea    rdx,[rsp+0x74]
  406412:	mov    r8d,0x1
  406418:	mov    rcx,rbx
  40641b:	call   0x409e60
  406420:	mov    rcx,QWORD PTR [rbx+0x68]
  406424:	mov    rbp,rax
  406427:	call   0x4030e0
  40642c:	or     DWORD PTR [rsp+0x74],eax
  406430:	cmp    QWORD PTR [rsp+0x88],0x0
  406439:	je     0x4068f7
  40643f:	lea    rax,[rsp+0xb0]
  406447:	lea    rdi,[rsp+0xa0]
  40644f:	lea    r12,[rsp+0x80]
  406457:	lea    rsi,[rsp+0xc0]
  40645f:	xor    r14d,r14d
  406462:	xor    ebx,ebx
  406464:	mov    QWORD PTR [rsp+0x38],rax
  406469:	nop    DWORD PTR [rax+0x0]
  406470:	mov    rcx,rdi
  406473:	call   0x40df00
  406478:	test   eax,eax
  40647a:	js     0x4068c9
  406480:	lea    r13,[r15+r14*8]
  406484:	mov    rcx,QWORD PTR [rsp+0xa0]
  40648c:	mov    rdx,QWORD PTR [r13+0x0]
  406490:	call   0x40def8
  406495:	test   eax,eax
  406497:	mov    r14d,eax
  40649a:	js     0x40695a
  4064a0:	test   ebx,ebx
  4064a2:	jne    0x4064c0
  4064a4:	mov    r8,QWORD PTR [rsp+0x30]
  4064a9:	mov    rcx,QWORD PTR [rsp+0xa0]
  4064b1:	mov    edx,eax
  4064b3:	call   0x40dee8
  4064b8:	test   eax,eax
  4064ba:	js     0x4068fe
  4064c0:	mov    rcx,QWORD PTR [r13+0x0]
  4064c4:	xor    edx,edx
  4064c6:	mov    r9,r12
  4064c9:	mov    r8,rsi
  4064cc:	mov    QWORD PTR [rsp+0x80],0x40
  4064d8:	call   0x40db60
  4064dd:	test   eax,eax
  4064df:	js     0x40698b
  4064e5:	mov    rax,QWORD PTR [rsp+0x80]
  4064ed:	mov    r8,QWORD PTR [rsp+0x38]
  4064f2:	mov    edx,r14d
  4064f5:	mov    rcx,QWORD PTR [rsp+0xa0]
  4064fd:	mov    QWORD PTR [rsp+0xb0],rsi
  406505:	mov    DWORD PTR [rsp+0xb8],eax
  40650c:	call   0x40dee0
  406511:	test   eax,eax
  406513:	js     0x40689b
  406519:	mov    r8d,DWORD PTR [rsp+0x74]
  40651e:	mov    rcx,QWORD PTR [rsp+0xa0]
  406526:	mov    rdx,rbp
  406529:	call   0x40df30
  40652e:	test   eax,eax
  406530:	js     0x40692c
  406536:	mov    rdx,QWORD PTR [rsp+0xa0]
  40653e:	mov    rcx,QWORD PTR [rsp+0x78]
  406543:	call   0x40dea0
  406548:	test   eax,eax
  40654a:	js     0x40686d
  406550:	mov    rcx,QWORD PTR [rsp+0xa0]
  406558:	lea    r14d,[rbx+0x1]
  40655c:	mov    rbx,r14
  40655f:	call   0x40df40
  406564:	cmp    r14,QWORD PTR [rsp+0x88]
  40656c:	jb     0x406470
  406572:	cmp    QWORD PTR [rsp+0x50],0x0
  406578:	je     0x4065ed
  40657a:	lea    rcx,[rsp+0xa0]
  406582:	call   0x40df00
  406587:	test   eax,eax
  406589:	js     0x4068c9
  40658f:	mov    rdx,QWORD PTR [rsp+0x50]
  406594:	mov    rcx,QWORD PTR [rsp+0xa0]
  40659c:	call   0x40def8
  4065a1:	test   eax,eax
  4065a3:	js     0x406ad6
  4065a9:	mov    r8d,DWORD PTR [rsp+0x74]
  4065ae:	mov    rcx,QWORD PTR [rsp+0xa0]
  4065b6:	mov    rdx,rbp
  4065b9:	call   0x40df30
  4065be:	test   eax,eax
  4065c0:	js     0x40692c
  4065c6:	mov    rdx,QWORD PTR [rsp+0xa0]
  4065ce:	mov    rcx,QWORD PTR [rsp+0x78]
  4065d3:	call   0x40dea0
  4065d8:	test   eax,eax
  4065da:	js     0x40686d
  4065e0:	mov    rcx,QWORD PTR [rsp+0xa0]
  4065e8:	call   0x40df40
  4065ed:	cmp    QWORD PTR [rsp+0x90],0x0
  4065f6:	je     0x40678e
  4065fc:	lea    rax,[rsp+0x98]
  406604:	mov    QWORD PTR [rsp+0x68],r15
  406609:	mov    r12,QWORD PTR [rip+0x374c0]        # 0x43dad0
  406610:	mov    r15,QWORD PTR [rsp+0x60]
  406615:	lea    r13,[rsp+0x80]
  40661d:	lea    r14,[rsp+0xc0]
  406625:	mov    QWORD PTR [rsp+0x38],rax
  40662a:	lea    rax,[rsp+0xa0]
  406632:	xor    ebx,ebx
  406634:	xor    esi,esi
  406636:	mov    QWORD PTR [rsp+0x40],rax
  40663b:	lea    rax,[rsp+0xb0]
  406643:	mov    QWORD PTR [rsp+0x48],rax
  406648:	nop    DWORD PTR [rax+rax*1+0x0]
  406650:	mov    rcx,QWORD PTR [rsp+0x38]
  406655:	call   0x40df00
  40665a:	test   eax,eax
  40665c:	js     0x4068c9
  406662:	mov    rax,QWORD PTR [rip+0x37477]        # 0x43dae0
  406669:	lea    rdi,[r15+rbx*8]
  40666d:	mov    r9d,DWORD PTR [rsp+0x74]
  406672:	xor    edx,edx
  406674:	mov    r8,rbp
  406677:	mov    eax,DWORD PTR [rax]
  406679:	mov    QWORD PTR [rsp+0x28],r13
  40667e:	mov    QWORD PTR [rsp+0x80],rax
  406686:	mov    rax,QWORD PTR [r12]
  40668a:	mov    QWORD PTR [rsp+0x20],rax
  40668f:	mov    rcx,QWORD PTR [rdi]
  406692:	call   0x40da68
  406697:	test   eax,eax
  406699:	js     0x406a1b
  40669f:	mov    rax,QWORD PTR [r12]
  4066a3:	mov    r8,QWORD PTR [rsp+0x40]
  4066a8:	mov    edx,0x1
  4066ad:	mov    rcx,QWORD PTR [rsp+0x98]
  4066b5:	mov    QWORD PTR [rsp+0xa0],rax
  4066bd:	mov    rax,QWORD PTR [rsp+0x80]
  4066c5:	mov    DWORD PTR [rsp+0xa8],eax
  4066cc:	call   0x40def0
  4066d1:	test   eax,eax
  4066d3:	mov    ebx,eax
  4066d5:	js     0x4069ed
  4066db:	mov    r8,QWORD PTR [rsp+0x30]
  4066e0:	mov    rcx,QWORD PTR [rsp+0x98]
  4066e8:	mov    edx,eax
  4066ea:	call   0x40dee8
  4066ef:	test   eax,eax
  4066f1:	js     0x4068fe
  4066f7:	mov    rcx,QWORD PTR [rdi]
  4066fa:	xor    edx,edx
  4066fc:	mov    r9,r13
  4066ff:	mov    r8,r14
  406702:	mov    QWORD PTR [rsp+0x80],0x40
  40670e:	call   0x40da50
  406713:	test   eax,eax
  406715:	js     0x4069bc
  40671b:	mov    rax,QWORD PTR [rsp+0x80]
  406723:	mov    r8,QWORD PTR [rsp+0x48]
  406728:	mov    edx,ebx
  40672a:	mov    rcx,QWORD PTR [rsp+0x98]
  406732:	mov    QWORD PTR [rsp+0xb0],r14
  40673a:	mov    DWORD PTR [rsp+0xb8],eax
  406741:	call   0x40dee0
  406746:	test   eax,eax
  406748:	js     0x40689b
  40674e:	mov    rdx,QWORD PTR [rsp+0x98]
  406756:	mov    rcx,QWORD PTR [rsp+0x78]
  40675b:	call   0x40dea0
  406760:	test   eax,eax
  406762:	js     0x40686d
  406768:	mov    rcx,QWORD PTR [rsp+0x98]
  406770:	lea    ebx,[rsi+0x1]
  406773:	mov    rsi,rbx
  406776:	call   0x40df40
  40677b:	cmp    rbx,QWORD PTR [rsp+0x90]
  406783:	jb     0x406650
  406789:	mov    r15,QWORD PTR [rsp+0x68]
  40678e:	mov    rcx,QWORD PTR [rsp+0x78]
  406793:	mov    rdx,rbp
  406796:	call   0x40dec8
  40679b:	test   eax,eax
  40679d:	js     0x406a7a
  4067a3:	mov    rax,QWORD PTR [rip+0x37336]        # 0x43dae0
  4067aa:	mov    rbx,QWORD PTR [rip+0x3731f]        # 0x43dad0
  4067b1:	lea    r9,[rsp+0x80]
  4067b9:	mov    edx,DWORD PTR [rip+0x3c879]        # 0x443038
  4067bf:	mov    rcx,QWORD PTR [rsp+0x78]
  4067c4:	mov    eax,DWORD PTR [rax]
  4067c6:	mov    r8,QWORD PTR [rbx]
  4067c9:	mov    QWORD PTR [rsp+0x80],rax
  4067d1:	call   0x40ded0
  4067d6:	test   eax,eax
  4067d8:	js     0x406aa8
  4067de:	mov    rcx,QWORD PTR [rbx]
  4067e1:	mov    r9,QWORD PTR [rip+0x3f7a0]        # 0x445f88
  4067e8:	mov    edx,0x1
  4067ed:	mov    r8,QWORD PTR [rsp+0x80]
  4067f5:	xor    ebx,ebx
  4067f7:	call   0x42dee0
  4067fc:	xor    eax,eax
  4067fe:	cmp    QWORD PTR [rsp+0x88],0x0
  406807:	je     0x406829
  406809:	nop    DWORD PTR [rax+0x0]
  406810:	mov    rcx,QWORD PTR [r15+rax*8]
  406814:	call   0x40db90
  406819:	lea    eax,[rbx+0x1]
  40681c:	cmp    rax,QWORD PTR [rsp+0x88]
  406824:	mov    rbx,rax
  406827:	jb     0x406810
  406829:	mov    rax,QWORD PTR [rip+0x371e0]        # 0x43da10
  406830:	mov    rcx,r15
  406833:	call   QWORD PTR [rax]
  406835:	mov    rcx,QWORD PTR [rsp+0x50]
  40683a:	call   0x40db90
  40683f:	mov    rcx,QWORD PTR [rsp+0x78]
  406844:	call   0x40ded8
  406849:	nop
  40684a:	add    rsp,0x108
  406851:	pop    rbx
  406852:	pop    rsi
  406853:	pop    rdi
  406854:	pop    rbp
  406855:	pop    r12
  406857:	pop    r13
  406859:	pop    r14
  40685b:	pop    r15
  40685d:	ret    
  40685e:	call   0x4112d0
  406863:	mov    QWORD PTR [rsp+0x30],rax
  406868:	jmp    0x4063fb
  40686d:	mov    ecx,eax
  40686f:	call   0x40dc88
  406874:	mov    rbx,rax
  406877:	mov    rax,QWORD PTR [rsp+0x58]
  40687c:	call   rax
  40687e:	lea    rdx,[rip+0x2c8af]        # 0x433134
  406885:	lea    rcx,[rax+0x60]
  406889:	mov    r8,rbx
  40688c:	call   0x401600
  406891:	mov    ecx,0x1
  406896:	call   0x42df60
  40689b:	mov    ecx,eax
  40689d:	call   0x40dc88
  4068a2:	mov    rbx,rax
  4068a5:	mov    rax,QWORD PTR [rsp+0x58]
  4068aa:	call   rax
  4068ac:	lea    rdx,[rip+0x2c85c]        # 0x43310f
  4068b3:	lea    rcx,[rax+0x60]
  4068b7:	mov    r8,rbx
  4068ba:	call   0x401600
  4068bf:	mov    ecx,0x1
  4068c4:	call   0x42df60
  4068c9:	mov    ecx,eax
  4068cb:	call   0x40dc88
  4068d0:	mov    rbx,rax
  4068d3:	mov    rax,QWORD PTR [rsp+0x58]
  4068d8:	call   rax
  4068da:	lea    rdx,[rip+0x2c7e4]        # 0x4330c5
  4068e1:	lea    rcx,[rax+0x60]
  4068e5:	mov    r8,rbx
  4068e8:	call   0x401600
  4068ed:	mov    ecx,0x1
  4068f2:	call   0x42df60
  4068f7:	xor    ebx,ebx
  4068f9:	jmp    0x406572
  4068fe:	mov    ecx,eax
  406900:	call   0x40dc88
  406905:	mov    rbx,rax
  406908:	mov    rax,QWORD PTR [rsp+0x58]
  40690d:	call   rax
  40690f:	lea    rdx,[rip+0x2c7ce]        # 0x4330e4
  406916:	lea    rcx,[rax+0x60]
  40691a:	mov    r8,rbx
  40691d:	call   0x401600
  406922:	mov    ecx,0x1
  406927:	call   0x42df60
  40692c:	mov    ecx,eax
  40692e:	call   0x40dc88
  406933:	mov    rbx,rax
  406936:	mov    rax,QWORD PTR [rsp+0x58]
  40693b:	call   rax
  40693d:	lea    rdx,[rip+0x2c7df]        # 0x433123
  406944:	lea    rcx,[rax+0x60]
  406948:	mov    r8,rbx
  40694b:	call   0x401600
  406950:	mov    ecx,0x1
  406955:	call   0x42df60
  40695a:	mov    ecx,eax
  40695c:	call   0x40dc88
  406961:	mov    rsi,rax
  406964:	mov    rax,QWORD PTR [rsp+0x58]
  406969:	call   rax
  40696b:	lea    rdx,[rip+0x2c761]        # 0x4330d3
  406972:	lea    rcx,[rax+0x60]
  406976:	mov    r9,rsi
  406979:	mov    r8d,ebx
  40697c:	call   0x401600
  406981:	mov    ecx,0x1
  406986:	call   0x42df60
  40698b:	mov    ecx,eax
  40698d:	call   0x40dc88
  406992:	mov    rsi,rax
  406995:	mov    rax,QWORD PTR [rsp+0x58]
  40699a:	call   rax
  40699c:	lea    rdx,[rip+0x2c75c]        # 0x4330ff
  4069a3:	lea    rcx,[rax+0x60]
  4069a7:	mov    r9,rsi
  4069aa:	mov    r8d,ebx
  4069ad:	call   0x401600
  4069b2:	mov    ecx,0x1
  4069b7:	call   0x42df60
  4069bc:	mov    ecx,eax
  4069be:	call   0x40dc88
  4069c3:	mov    rbx,rax
  4069c6:	mov    rax,QWORD PTR [rsp+0x58]
  4069cb:	call   rax
  4069cd:	lea    rdx,[rip+0x2c72b]        # 0x4330ff
  4069d4:	lea    rcx,[rax+0x60]
  4069d8:	mov    r9,rbx
  4069db:	mov    r8d,esi
  4069de:	call   0x401600
  4069e3:	mov    ecx,0x1
  4069e8:	call   0x42df60
  4069ed:	mov    ecx,eax
  4069ef:	call   0x40dc88
  4069f4:	mov    rbx,rax
  4069f7:	mov    rax,QWORD PTR [rsp+0x58]
  4069fc:	call   rax
  4069fe:	lea    rdx,[rip+0x2c750]        # 0x433155
  406a05:	lea    rcx,[rax+0x60]
  406a09:	mov    r8,rbx
  406a0c:	call   0x401600
  406a11:	mov    ecx,0x1
  406a16:	call   0x42df60
  406a1b:	mov    ecx,eax
  406a1d:	call   0x40dc88
  406a22:	mov    rbx,rax
  406a25:	mov    rax,QWORD PTR [rsp+0x58]
  406a2a:	call   rax
  406a2c:	lea    rdx,[rip+0x2c70e]        # 0x433141
  406a33:	lea    rcx,[rax+0x60]
  406a37:	mov    r9,rbx
  406a3a:	mov    r8d,esi
  406a3d:	call   0x401600
  406a42:	mov    ecx,0x1
  406a47:	call   0x42df60
  406a4c:	mov    ecx,eax
  406a4e:	call   0x40dc88
  406a53:	mov    rbx,rax
  406a56:	mov    rax,QWORD PTR [rsp+0x58]
  406a5b:	call   rax
  406a5d:	lea    rdx,[rip+0x2c650]        # 0x4330b4
  406a64:	lea    rcx,[rax+0x60]
  406a68:	mov    r8,rbx
  406a6b:	call   0x401600
  406a70:	mov    ecx,0x1
  406a75:	call   0x42df60
  406a7a:	mov    ecx,eax
  406a7c:	call   0x40dc88
  406a81:	mov    rbx,rax
  406a84:	mov    rax,QWORD PTR [rsp+0x58]
  406a89:	call   rax
  406a8b:	lea    rdx,[rip+0x2c6d5]        # 0x433167
  406a92:	lea    rcx,[rax+0x60]
  406a96:	mov    r8,rbx
  406a99:	call   0x401600
  406a9e:	mov    ecx,0x1
  406aa3:	call   0x42df60
  406aa8:	mov    ecx,eax
  406aaa:	call   0x40dc88
  406aaf:	mov    rbx,rax
  406ab2:	mov    rax,QWORD PTR [rsp+0x58]
  406ab7:	call   rax
  406ab9:	lea    rdx,[rip+0x2c6b9]        # 0x433179
  406ac0:	lea    rcx,[rax+0x60]
  406ac4:	mov    r8,rbx
  406ac7:	call   0x401600
  406acc:	mov    ecx,0x1
  406ad1:	call   0x42df60
  406ad6:	mov    ecx,eax
  406ad8:	jmp    0x40695c
  406add:	nop    DWORD PTR [rax]
  406ae0:	push   rbp
  406ae1:	push   rdi
  406ae2:	push   rsi
  406ae3:	push   rbx
  406ae4:	sub    rsp,0xe8
  406aeb:	mov    rsi,QWORD PTR [rsp+0x130]
  406af3:	lea    rax,[rsp+0x58]
  406af8:	lea    rdi,[rsp+0x70]
  406afd:	mov    ebp,r8d
  406b00:	mov    rbx,r9
  406b03:	lea    r8,[rsp+0x40]
  406b08:	lea    r9,[rsp+0x44]
  406b0d:	mov    QWORD PTR [rsp+0x38],rax
  406b12:	lea    rax,[rsp+0x4c]
  406b17:	mov    QWORD PTR [rsp+0x20],rdi
  406b1c:	mov    DWORD PTR [rsp+0x48],0x20
  406b24:	mov    QWORD PTR [rsp+0x50],0x41
  406b2d:	mov    QWORD PTR [rsp+0x30],rax
  406b32:	lea    rax,[rsp+0x48]
  406b37:	mov    QWORD PTR [rsp+0x58],0x0
  406b40:	mov    QWORD PTR [rsp+0x28],rax
  406b45:	call   0x40de18
  406b4a:	cmp    eax,0xfffffffa
  406b4d:	je     0x406c81
  406b53:	test   eax,eax
  406b55:	js     0x406c50
  406b5b:	mov    rax,QWORD PTR [rip+0x36eae]        # 0x43da10
  406b62:	mov    rcx,QWORD PTR [rsp+0x58]
  406b67:	call   QWORD PTR [rax]
  406b69:	lea    rdx,[rip+0x2c665]        # 0x4331d5
  406b70:	mov    r8,rsi
  406b73:	mov    rcx,rbx
  406b76:	call   0x401600
  406b7b:	mov    ecx,DWORD PTR [rsp+0x44]
  406b7f:	call   0x40e178
  406b84:	lea    rdx,[rip+0x2c662]        # 0x4331ed
  406b8b:	mov    r9,rax
  406b8e:	mov    r8,rsi
  406b91:	mov    rcx,rbx
  406b94:	call   0x401600
  406b99:	mov    ecx,DWORD PTR [rsp+0x40]
  406b9d:	call   0x40de10
  406ba2:	test   rax,rax
  406ba5:	mov    rbp,rax
  406ba8:	je     0x406bcd
  406baa:	mov    ecx,DWORD PTR [rsp+0x40]
  406bae:	call   0x40de08
  406bb3:	lea    rdx,[rip+0x2c642]        # 0x4331fc
  406bba:	mov    QWORD PTR [rsp+0x20],rax
  406bbf:	mov    r9,rbp
  406bc2:	mov    r8,rsi
  406bc5:	mov    rcx,rbx
  406bc8:	call   0x401600
  406bcd:	mov    QWORD PTR [rsp+0x60],rdi
  406bd2:	mov    eax,DWORD PTR [rsp+0x48]
  406bd6:	lea    rdi,[rsp+0x90]
  406bde:	lea    rcx,[rsp+0x60]
  406be3:	lea    r8,[rsp+0x50]
  406be8:	mov    rdx,rdi
  406beb:	mov    DWORD PTR [rsp+0x68],eax
  406bef:	call   0x40e090
  406bf4:	test   eax,eax
  406bf6:	js     0x406cbf
  406bfc:	lea    rdx,[rip+0x2c623]        # 0x433226
  406c03:	mov    r9,rdi
  406c06:	mov    r8,rsi
  406c09:	mov    rcx,rbx
  406c0c:	call   0x401600
  406c11:	mov    r9d,DWORD PTR [rsp+0x48]
  406c16:	lea    rdx,[rip+0x2c616]        # 0x433233
  406c1d:	mov    r8,rsi
  406c20:	mov    rcx,rbx
  406c23:	call   0x401600
  406c28:	mov    r9d,DWORD PTR [rsp+0x4c]
  406c2d:	lea    rdx,[rip+0x2c611]        # 0x433245
  406c34:	mov    r8,rsi
  406c37:	mov    rcx,rbx
  406c3a:	call   0x401600
  406c3f:	nop
  406c40:	add    rsp,0xe8
  406c47:	pop    rbx
  406c48:	pop    rsi
  406c49:	pop    rdi
  406c4a:	pop    rbp
  406c4b:	ret    
  406c4c:	nop    DWORD PTR [rax+0x0]
  406c50:	test   ebp,ebp
  406c52:	jne    0x406c40
  406c54:	mov    ecx,eax
  406c56:	call   0x40dc88
  406c5b:	mov    rbx,rax
  406c5e:	call   QWORD PTR [rip+0x41b7c]        # 0x4487e0
  406c64:	lea    rdx,[rip+0x2c552]        # 0x4331bd
  406c6b:	lea    rcx,[rax+0x60]
  406c6f:	mov    r8,rbx
  406c72:	call   0x401600
  406c77:	mov    ecx,0x1
  406c7c:	call   0x42df60
  406c81:	lea    rdx,[rip+0x2c504]        # 0x43318c
  406c88:	mov    rcx,rbx
  406c8b:	call   0x401600
  406c90:	mov    r8,QWORD PTR [rsp+0x58]
  406c95:	lea    rdx,[rip+0x2c506]        # 0x4331a2
  406c9c:	mov    rcx,rbx
  406c9f:	call   0x401600
  406ca4:	mov    rcx,QWORD PTR [rsp+0x58]
  406ca9:	mov    rax,QWORD PTR [rip+0x36d60]        # 0x43da10
  406cb0:	call   QWORD PTR [rax]
  406cb2:	nop
  406cb3:	add    rsp,0xe8
  406cba:	pop    rbx
  406cbb:	pop    rsi
  406cbc:	pop    rdi
  406cbd:	pop    rbp
  406cbe:	ret    
  406cbf:	mov    ecx,eax
  406cc1:	call   0x40dc88
  406cc6:	mov    rbx,rax
  406cc9:	call   QWORD PTR [rip+0x41b11]        # 0x4487e0
  406ccf:	lea    rdx,[rip+0x2c53a]        # 0x433210
  406cd6:	lea    rcx,[rax+0x60]
  406cda:	mov    r8,rbx
  406cdd:	call   0x401600
  406ce2:	mov    ecx,0x1
  406ce7:	call   0x42df60
  406cec:	nop
  406ced:	nop    DWORD PTR [rax]
  406cf0:	push   rbp
  406cf1:	push   rdi
  406cf2:	push   rsi
  406cf3:	push   rbx
  406cf4:	sub    rsp,0x68
  406cf8:	mov    rsi,QWORD PTR [rip+0x36de1]        # 0x43dae0
  406cff:	mov    rbx,QWORD PTR [rip+0x36dca]        # 0x43dad0
  406d06:	mov    edx,0x1
  406d0b:	mov    r9,QWORD PTR [rip+0x3f27e]        # 0x445f90
  406d12:	mov    rbp,rcx
  406d15:	mov    DWORD PTR [rsp+0x3c],0x0
  406d1d:	lea    rdi,[rsp+0x50]
  406d22:	mov    eax,DWORD PTR [rsi]
  406d24:	mov    rcx,QWORD PTR [rbx]
  406d27:	lea    r8d,[rax-0x1]
  406d2b:	call   0x42df10
  406d30:	mov    rdx,QWORD PTR [rbx]
  406d33:	lea    rcx,[rsp+0x40]
  406d38:	mov    QWORD PTR [rsp+0x48],rax
  406d3d:	mov    BYTE PTR [rdx+rax*1],0x0
  406d41:	call   0x40da30
  406d46:	mov    rax,QWORD PTR [rbx]
  406d49:	mov    r8d,DWORD PTR [rip+0x3c2ec]        # 0x44303c
  406d50:	xor    r9d,r9d
  406d53:	mov    rcx,QWORD PTR [rsp+0x40]
  406d58:	mov    DWORD PTR [rsp+0x20],0x1
  406d60:	mov    rdx,rdi
  406d63:	mov    QWORD PTR [rsp+0x50],rax
  406d68:	mov    rax,QWORD PTR [rsp+0x48]
  406d6d:	mov    DWORD PTR [rsp+0x58],eax
  406d71:	call   0x40da40
  406d76:	cmp    eax,0xffffffe8
  406d79:	je     0x406e00
  406d7f:	test   eax,eax
  406d81:	js     0x406ed5
  406d87:	cmp    DWORD PTR [rip+0x3c2aa],0x1        # 0x443038
  406d8e:	je     0x406e71
  406d94:	mov    rcx,QWORD PTR [rsp+0x40]
  406d99:	call   0x40da20
  406d9e:	test   eax,eax
  406da0:	js     0x406e90
  406da6:	mov    eax,DWORD PTR [rsi]
  406da8:	mov    r8,QWORD PTR [rbx]
  406dab:	lea    r9,[rsp+0x48]
  406db0:	mov    edx,DWORD PTR [rip+0x3c282]        # 0x443038
  406db6:	mov    rcx,QWORD PTR [rsp+0x40]
  406dbb:	mov    QWORD PTR [rsp+0x48],rax
  406dc0:	call   0x40da80
  406dc5:	test   eax,eax
  406dc7:	js     0x406ea8
  406dcd:	mov    r9,QWORD PTR [rip+0x3f1b4]        # 0x445f88
  406dd4:	mov    r8,QWORD PTR [rsp+0x48]
  406dd9:	mov    edx,0x1
  406dde:	mov    rcx,QWORD PTR [rbx]
  406de1:	call   0x42dee0
  406de6:	mov    rcx,QWORD PTR [rsp+0x40]
  406deb:	call   0x40da88
  406df0:	nop
  406df1:	add    rsp,0x68
  406df5:	pop    rbx
  406df6:	pop    rsi
  406df7:	pop    rdi
  406df8:	pop    rbp
  406df9:	ret    
  406dfa:	nop    WORD PTR [rax+rax*1+0x0]
  406e00:	call   QWORD PTR [rip+0x419da]        # 0x4487e0
  406e06:	lea    rdx,[rip+0x2c453]        # 0x433260
  406e0d:	lea    rcx,[rax+0x60]
  406e11:	call   0x401600
  406e16:	lea    rax,[rip+0x2c464]        # 0x433281
  406e1d:	mov    r9,QWORD PTR [rip+0x3f164]        # 0x445f88
  406e24:	mov    edx,DWORD PTR [rip+0x3c212]        # 0x44303c
  406e2a:	mov    rcx,rdi
  406e2d:	mov    r8d,0x1
  406e33:	mov    QWORD PTR [rsp+0x20],rax
  406e38:	call   0x406ae0
  406e3d:	lea    rdx,[rsp+0x3c]
  406e42:	xor    r8d,r8d
  406e45:	mov    rcx,rbp
  406e48:	call   0x409e60
  406e4d:	mov    r9,rax
  406e50:	mov    eax,DWORD PTR [rsp+0x3c]
  406e54:	mov    r8d,DWORD PTR [rip+0x3c1e1]        # 0x44303c
  406e5b:	mov    rcx,QWORD PTR [rsp+0x40]
  406e60:	mov    rdx,rdi
  406e63:	mov    DWORD PTR [rsp+0x20],eax
  406e67:	call   0x40da40
  406e6c:	jmp    0x406d7f
  406e71:	mov    rcx,QWORD PTR [rsp+0x40]
  406e76:	call   0x403400
  406e7b:	mov    rcx,QWORD PTR [rsp+0x40]
  406e80:	call   0x40da20
  406e85:	test   eax,eax
  406e87:	jns    0x406da6
  406e8d:	nop    DWORD PTR [rax]
  406e90:	mov    rcx,QWORD PTR [rip+0x3f0f1]        # 0x445f88
  406e97:	lea    rdx,[rip+0x2c3ea]        # 0x433288
  406e9e:	call   0x401600
  406ea3:	jmp    0x406da6
  406ea8:	mov    ecx,eax
  406eaa:	call   0x40dc88
  406eaf:	mov    rbx,rax
  406eb2:	call   QWORD PTR [rip+0x41928]        # 0x4487e0
  406eb8:	lea    rdx,[rip+0x2bd30]        # 0x432bef
  406ebf:	lea    rcx,[rax+0x60]
  406ec3:	mov    r8,rbx
  406ec6:	call   0x401600
  406ecb:	mov    ecx,0x1
  406ed0:	call   0x42df60
  406ed5:	mov    ecx,eax
  406ed7:	call   0x40dc88
  406edc:	mov    rbx,rax
  406edf:	call   QWORD PTR [rip+0x418fb]        # 0x4487e0
  406ee5:	lea    rdx,[rip+0x2bc83]        # 0x432b6f
  406eec:	lea    rcx,[rax+0x60]
  406ef0:	mov    r8,rbx
  406ef3:	call   0x401600
  406ef8:	mov    ecx,0x1
  406efd:	call   0x42df60
  406f02:	nop
  406f03:	nop    DWORD PTR [rax]
  406f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406f10:	push   r15
  406f12:	push   r14
  406f14:	push   r13
  406f16:	push   r12
  406f18:	push   rbp
  406f19:	push   rdi
  406f1a:	push   rsi
  406f1b:	push   rbx
  406f1c:	sub    rsp,0x1e8
  406f23:	mov    rsi,rcx
  406f26:	lea    rcx,[rsp+0xa8]
  406f2e:	mov    QWORD PTR [rsp+0xb8],0x0
  406f3a:	mov    QWORD PTR [rsp+0xc0],0x41
  406f46:	call   0x40deb0
  406f4b:	test   eax,eax
  406f4d:	js     0x407937
  406f53:	mov    rcx,QWORD PTR [rip+0x3f036]        # 0x445f90
  406f5a:	lea    rdx,[rsp+0xc8]
  406f62:	call   0x415540
  406f67:	mov    rdx,QWORD PTR [rsp+0xc8]
  406f6f:	test   rax,rax
  406f72:	mov    QWORD PTR [rsp+0xe0],rax
  406f7a:	mov    DWORD PTR [rsp+0xe8],edx
  406f81:	je     0x407880
  406f87:	mov    r8d,DWORD PTR [rip+0x3c0ae]        # 0x44303c
  406f8e:	mov    rcx,QWORD PTR [rsp+0xa8]
  406f96:	lea    rdx,[rsp+0xe0]
  406f9e:	xor    r9d,r9d
  406fa1:	call   0x40deb8
  406fa6:	mov    rcx,QWORD PTR [rsp+0xe0]
  406fae:	mov    ebx,eax
  406fb0:	call   0x42df08
  406fb5:	test   ebx,ebx
  406fb7:	js     0x4078ea
  406fbd:	lea    rax,[rsp+0xb8]
  406fc5:	lea    rbx,[rsp+0x100]
  406fcd:	mov    rcx,QWORD PTR [rsp+0xa8]
  406fd5:	lea    rdx,[rsp+0x8c]
  406fdd:	lea    r9,[rsp+0x90]
  406fe5:	mov    DWORD PTR [rsp+0x90],0x20
  406ff0:	mov    QWORD PTR [rsp+0x28],rax
  406ff5:	lea    rax,[rsp+0x94]
  406ffd:	mov    r8,rbx
  407000:	mov    QWORD PTR [rsp+0x20],rax
  407005:	call   0x40dea8
  40700a:	cmp    eax,0xffffffa0
  40700d:	je     0x40776f
  407013:	test   eax,eax
  407015:	js     0x4070e5
  40701b:	mov    rcx,QWORD PTR [rip+0x3ef66]        # 0x445f88
  407022:	lea    rdx,[rip+0x2c2dd]        # 0x433306
  407029:	call   0x401600
  40702e:	mov    ecx,DWORD PTR [rsp+0x8c]
  407035:	mov    rdi,QWORD PTR [rsp+0xb8]
  40703d:	call   0x40e058
  407042:	mov    rcx,QWORD PTR [rip+0x3ef3f]        # 0x445f88
  407049:	lea    rdx,[rip+0x2c2d5]        # 0x433325
  407050:	mov    r8,rax
  407053:	mov    r9,rdi
  407056:	call   0x401600
  40705b:	mov    QWORD PTR [rsp+0x190],rbx
  407063:	mov    eax,DWORD PTR [rsp+0x90]
  40706a:	lea    rbx,[rsp+0x140]
  407072:	lea    rcx,[rsp+0x190]
  40707a:	lea    r8,[rsp+0xc0]
  407082:	mov    rdx,rbx
  407085:	mov    DWORD PTR [rsp+0x198],eax
  40708c:	call   0x40e090
  407091:	test   eax,eax
  407093:	js     0x4077e6
  407099:	mov    rcx,QWORD PTR [rip+0x3eee8]        # 0x445f88
  4070a0:	lea    rdx,[rip+0x2c28d]        # 0x433334
  4070a7:	mov    r8,rbx
  4070aa:	call   0x401600
  4070af:	mov    r8d,DWORD PTR [rsp+0x90]
  4070b7:	mov    rcx,QWORD PTR [rip+0x3eeca]        # 0x445f88
  4070be:	lea    rdx,[rip+0x2c27a]        # 0x43333f
  4070c5:	call   0x401600
  4070ca:	mov    r8d,DWORD PTR [rsp+0x94]
  4070d2:	mov    rcx,QWORD PTR [rip+0x3eeaf]        # 0x445f88
  4070d9:	lea    rdx,[rip+0x2c26f]        # 0x43334f
  4070e0:	call   0x401600
  4070e5:	mov    rcx,QWORD PTR [rsp+0xb8]
  4070ed:	mov    rax,QWORD PTR [rip+0x3691c]        # 0x43da10
  4070f4:	call   QWORD PTR [rax]
  4070f6:	xor    r8d,r8d
  4070f9:	xor    edx,edx
  4070fb:	mov    rcx,rsi
  4070fe:	call   0x409e60
  407103:	mov    rcx,QWORD PTR [rsp+0xa8]
  40710b:	mov    rdx,rax
  40710e:	mov    QWORD PTR [rsp+0x70],rax
  407113:	call   0x40de98
  407118:	test   eax,eax
  40711a:	mov    DWORD PTR [rsp+0x7c],0x0
  407122:	js     0x4077b6
  407128:	lea    rax,[rsp+0xb0]
  407130:	mov    r14,QWORD PTR [rip+0x416a9]        # 0x4487e0
  407137:	lea    r12,[rsp+0xf0]
  40713f:	mov    DWORD PTR [rsp+0x78],0x0
  407147:	mov    QWORD PTR [rsp+0x60],rax
  40714c:	lea    rax,[rsp+0xd8]
  407154:	mov    QWORD PTR [rsp+0x68],r14
  407159:	mov    QWORD PTR [rsp+0x50],rax
  40715e:	lea    rax,[rsp+0x120]
  407166:	mov    QWORD PTR [rsp+0x48],rax
  40716b:	lea    rax,[rsp+0x190]
  407173:	mov    QWORD PTR [rsp+0x58],rax
  407178:	nop    DWORD PTR [rax+rax*1+0x0]
  407180:	mov    rcx,QWORD PTR [rsp+0x60]
  407185:	call   0x40df00
  40718a:	test   eax,eax
  40718c:	js     0x4078bd
  407192:	mov    rcx,QWORD PTR [rsp+0xa8]
  40719a:	mov    r8,QWORD PTR [rsp+0xb0]
  4071a2:	mov    edx,DWORD PTR [rsp+0x78]
  4071a6:	call   0x40dec0
  4071ab:	test   eax,eax
  4071ad:	mov    rcx,QWORD PTR [rsp+0xb0]
  4071b5:	js     0x407697
  4071bb:	call   0x40df28
  4071c0:	test   eax,eax
  4071c2:	js     0x407826
  4071c8:	mov    r8d,DWORD PTR [rsp+0x78]
  4071cd:	mov    rcx,QWORD PTR [rip+0x3edb4]        # 0x445f88
  4071d4:	lea    rdx,[rip+0x2c1aa]        # 0x433385
  4071db:	lea    rbp,[rip+0x3eda6]        # 0x445f88
  4071e2:	call   0x401600
  4071e7:	mov    rcx,QWORD PTR [rsp+0xb0]
  4071ef:	xor    edx,edx
  4071f1:	call   0x40df08
  4071f6:	test   eax,eax
  4071f8:	js     0x4078bd
  4071fe:	cmp    eax,0xa
  407201:	je     0x407415
  407207:	mov    rdi,QWORD PTR [rsp+0xb0]
  40720f:	mov    rcx,rdi
  407212:	call   0x40df28
  407217:	test   eax,eax
  407219:	mov    r13d,eax
  40721c:	js     0x407853
  407222:	mov    rcx,QWORD PTR [rip+0x3ed5f]        # 0x445f88
  407229:	lea    rdx,[rip+0x2c205]        # 0x433435
  407230:	mov    r8d,eax
  407233:	call   0x401600
  407238:	test   r13d,r13d
  40723b:	je     0x407390
  407241:	xor    ebx,ebx
  407243:	jmp    0x40729c
  407245:	cmp    esi,0x3
  407248:	je     0x4073e1
  40724e:	cmp    esi,0x4
  407251:	lea    rcx,[rip+0x2ade6]        # 0x43203e
  407258:	jne    0x407290
  40725a:	mov    r8,QWORD PTR [rsp+0x58]
  40725f:	mov    rdx,r12
  407262:	call   0x40df68
  407267:	mov    rcx,QWORD PTR [rbp+0x0]
  40726b:	mov    r8,QWORD PTR [rsp+0x190]
  407273:	lea    rdx,[rip+0x2b1ec]        # 0x432466
  40727a:	call   0x401600
  40727f:	mov    rax,QWORD PTR [rip+0x3678a]        # 0x43da10
  407286:	mov    rcx,QWORD PTR [rsp+0x190]
  40728e:	call   QWORD PTR [rax]
  407290:	add    ebx,0x1
  407293:	cmp    ebx,r13d
  407296:	je     0x407390
  40729c:	mov    rcx,rdi
  40729f:	mov    edx,ebx
  4072a1:	call   0x40df08
  4072a6:	test   eax,eax
  4072a8:	mov    esi,eax
  4072aa:	mov    ecx,eax
  4072ac:	js     0x407747
  4072b2:	call   0x401530
  4072b7:	mov    r15,rax
  4072ba:	call   r14
  4072bd:	lea    rdx,[rip+0x2c0ca]        # 0x43338e
  4072c4:	lea    rcx,[rax+0x60]
  4072c8:	mov    r8,r15
  4072cb:	call   0x401600
  4072d0:	mov    r8,r12
  4072d3:	mov    edx,ebx
  4072d5:	mov    rcx,rdi
  4072d8:	call   0x40df20
  4072dd:	test   eax,eax
  4072df:	js     0x40771d
  4072e5:	cmp    esi,0x1
  4072e8:	je     0x4073f0
  4072ee:	mov    r8,QWORD PTR [rsp+0x50]
  4072f3:	mov    edx,ebx
  4072f5:	mov    rcx,rdi
  4072f8:	mov    QWORD PTR [rsp+0xd8],0x0
  407304:	call   0x40df18
  407309:	test   eax,eax
  40730b:	js     0x4076f3
  407311:	mov    r8,QWORD PTR [rsp+0xd8]
  407319:	test   r8,r8
  40731c:	je     0x40732e
  40731e:	mov    rcx,QWORD PTR [rbp+0x0]
  407322:	lea    rdx,[rip+0x2c150]        # 0x433479
  407329:	call   0x401600
  40732e:	mov    r8,QWORD PTR [rsp+0x48]
  407333:	mov    edx,ebx
  407335:	mov    rcx,rdi
  407338:	mov    QWORD PTR [rsp+0x120],0x0
  407344:	mov    DWORD PTR [rsp+0x128],0x0
  40734f:	call   0x40df10
  407354:	test   eax,eax
  407356:	js     0x4076c9
  40735c:	mov    edx,DWORD PTR [rsp+0x128]
  407363:	test   edx,edx
  407365:	jne    0x4073b0
  407367:	cmp    esi,0x2
  40736a:	je     0x4073d5
  40736c:	jg     0x407245
  407372:	cmp    esi,0x1
  407375:	lea    rcx,[rip+0x2bf56]        # 0x4332d2
  40737c:	je     0x40725a
  407382:	add    ebx,0x1
  407385:	cmp    ebx,r13d
  407388:	jne    0x40729c
  40738e:	xchg   ax,ax
  407390:	mov    rcx,QWORD PTR [rsp+0xb0]
  407398:	call   0x40df40
  40739d:	add    DWORD PTR [rsp+0x78],0x1
  4073a2:	jmp    0x407180
  4073a7:	nop    WORD PTR [rax+rax*1+0x0]
  4073b0:	mov    rcx,QWORD PTR [rsp+0x120]
  4073b8:	call   0x40be60
  4073bd:	mov    rcx,QWORD PTR [rbp+0x0]
  4073c1:	lea    rdx,[rip+0x2c0d5]        # 0x43349d
  4073c8:	mov    r8,rax
  4073cb:	call   0x401600
  4073d0:	cmp    esi,0x2
  4073d3:	jne    0x40736c
  4073d5:	lea    rcx,[rip+0x2beea]        # 0x4332c6
  4073dc:	jmp    0x40725a
  4073e1:	lea    rcx,[rip+0x2bed2]        # 0x4332ba
  4073e8:	jmp    0x40725a
  4073ed:	nop    DWORD PTR [rax]
  4073f0:	lea    rax,[rip+0x2c069]        # 0x433460
  4073f7:	mov    r8d,0x1
  4073fd:	xor    edx,edx
  4073ff:	mov    rcx,r12
  407402:	mov    QWORD PTR [rsp+0x20],rax
  407407:	mov    r9,QWORD PTR [rbp+0x0]
  40740b:	call   0x406ae0
  407410:	jmp    0x4072ee
  407415:	mov    ecx,0xa
  40741a:	call   0x401530
  40741f:	mov    rdi,QWORD PTR [rsp+0x68]
  407424:	mov    rbx,rax
  407427:	call   rdi
  407429:	lea    rdx,[rip+0x2bf5e]        # 0x43338e
  407430:	lea    rcx,[rax+0x60]
  407434:	mov    r8,rbx
  407437:	call   0x401600
  40743c:	call   rdi
  40743e:	lea    rbx,[rax+0x60]
  407442:	mov    rax,QWORD PTR [rsp+0x50]
  407447:	mov    r9,QWORD PTR [rsp+0x48]
  40744c:	mov    rcx,QWORD PTR [rsp+0xb0]
  407454:	lea    rdx,[rsp+0x98]
  40745c:	lea    r8,[rsp+0x9c]
  407464:	mov    DWORD PTR [rsp+0xa0],0x20
  40746f:	mov    QWORD PTR [rsp+0xd0],0x41
  40747b:	mov    QWORD PTR [rsp+0x30],rax
  407480:	lea    rax,[rsp+0xa4]
  407488:	mov    QWORD PTR [rsp+0xd8],0x0
  407494:	mov    QWORD PTR [rsp+0x28],rax
  407499:	lea    rax,[rsp+0xa0]
  4074a1:	mov    QWORD PTR [rsp+0x20],rax
  4074a6:	call   0x40df38
  4074ab:	cmp    eax,0xfffffffa
  4074ae:	je     0x40766a
  4074b4:	test   eax,eax
  4074b6:	js     0x407641
  4074bc:	mov    rax,QWORD PTR [rip+0x3654d]        # 0x43da10
  4074c3:	mov    rcx,QWORD PTR [rsp+0xd8]
  4074cb:	call   QWORD PTR [rax]
  4074cd:	mov    ecx,DWORD PTR [rsp+0x9c]
  4074d4:	call   0x40e178
  4074d9:	lea    rdx,[rip+0x2bed6]        # 0x4333b6
  4074e0:	mov    r8,rax
  4074e3:	mov    rcx,rbx
  4074e6:	call   0x401600
  4074eb:	mov    ecx,DWORD PTR [rsp+0x98]
  4074f2:	call   0x40de10
  4074f7:	test   rax,rax
  4074fa:	mov    rsi,rax
  4074fd:	je     0x407520
  4074ff:	mov    ecx,DWORD PTR [rsp+0x98]
  407506:	call   0x40de08
  40750b:	lea    rdx,[rip+0x2beb1]        # 0x4333c3
  407512:	mov    r9,rax
  407515:	mov    r8,rsi
  407518:	mov    rcx,rbx
  40751b:	call   0x401600
  407520:	mov    rax,QWORD PTR [rsp+0x48]
  407525:	mov    rdx,QWORD PTR [rsp+0x58]
  40752a:	lea    r8,[rsp+0xd0]
  407532:	mov    rcx,r12
  407535:	mov    QWORD PTR [rsp+0xf0],rax
  40753d:	mov    eax,DWORD PTR [rsp+0xa0]
  407544:	mov    DWORD PTR [rsp+0xf8],eax
  40754b:	call   0x40e090
  407550:	test   eax,eax
  407552:	js     0x407813
  407558:	mov    r8,QWORD PTR [rsp+0x58]
  40755d:	lea    rdx,[rip+0x2bdd0]        # 0x433334
  407564:	mov    rcx,rbx
  407567:	call   0x401600
  40756c:	mov    r8d,DWORD PTR [rsp+0xa0]
  407574:	lea    rdx,[rip+0x2bdc4]        # 0x43333f
  40757b:	mov    rcx,rbx
  40757e:	call   0x401600
  407583:	mov    r8d,DWORD PTR [rsp+0xa4]
  40758b:	lea    rdx,[rip+0x2be43]        # 0x4333d5
  407592:	mov    rcx,rbx
  407595:	call   0x401600
  40759a:	mov    rax,QWORD PTR [rsp+0x68]
  40759f:	call   rax
  4075a1:	lea    rdx,[rip+0x2be43]        # 0x4333eb
  4075a8:	lea    rcx,[rax+0x60]
  4075ac:	call   0x401600
  4075b1:	mov    rdx,QWORD PTR [rsp+0x70]
  4075b6:	mov    rcx,QWORD PTR [rsp+0xb0]
  4075be:	call   0x40df48
  4075c3:	test   eax,eax
  4075c5:	js     0x407610
  4075c7:	mov    rcx,QWORD PTR [rsp+0xb0]
  4075cf:	call   0x40df28
  4075d4:	test   eax,eax
  4075d6:	jns    0x407207
  4075dc:	mov    ecx,eax
  4075de:	call   0x40dc88
  4075e3:	mov    rbx,rax
  4075e6:	mov    rax,QWORD PTR [rsp+0x68]
  4075eb:	call   rax
  4075ed:	lea    rdx,[rip+0x2be19]        # 0x43340d
  4075f4:	lea    rcx,[rax+0x60]
  4075f8:	mov    r8,rbx
  4075fb:	call   0x401600
  407600:	mov    ecx,0x1
  407605:	call   0x42df60
  40760a:	nop    WORD PTR [rax+rax*1+0x0]
  407610:	mov    ecx,eax
  407612:	call   0x40dc88
  407617:	mov    rbx,rax
  40761a:	mov    rax,QWORD PTR [rsp+0x68]
  40761f:	call   rax
  407621:	lea    rdx,[rip+0x2bdd4]        # 0x4333fc
  407628:	lea    rcx,[rax+0x60]
  40762c:	mov    r8,rbx
  40762f:	call   0x401600
  407634:	mov    DWORD PTR [rsp+0x7c],0x1
  40763c:	jmp    0x40739d
  407641:	mov    ecx,eax
  407643:	call   0x40dc88
  407648:	mov    rbx,rax
  40764b:	mov    rax,QWORD PTR [rsp+0x68]
  407650:	call   rax
  407652:	lea    rdx,[rip+0x2bd40]        # 0x433399
  407659:	lea    rcx,[rax+0x60]
  40765d:	mov    r8,rbx
  407660:	call   0x401600
  407665:	jmp    0x40759a
  40766a:	mov    r8,QWORD PTR [rsp+0xd8]
  407672:	lea    rdx,[rip+0x2bb29]        # 0x4331a2
  407679:	mov    rcx,rbx
  40767c:	call   0x401600
  407681:	mov    rax,QWORD PTR [rip+0x36388]        # 0x43da10
  407688:	mov    rcx,QWORD PTR [rsp+0xd8]
  407690:	call   QWORD PTR [rax]
  407692:	jmp    0x40759a
  407697:	call   0x40df40
  40769c:	mov    rcx,QWORD PTR [rsp+0xa8]
  4076a4:	call   0x40ded8
  4076a9:	mov    eax,DWORD PTR [rsp+0x7c]
  4076ad:	test   eax,eax
  4076af:	jne    0x407917
  4076b5:	add    rsp,0x1e8
  4076bc:	pop    rbx
  4076bd:	pop    rsi
  4076be:	pop    rdi
  4076bf:	pop    rbp
  4076c0:	pop    r12
  4076c2:	pop    r13
  4076c4:	pop    r14
  4076c6:	pop    r15
  4076c8:	ret    
  4076c9:	mov    ecx,eax
  4076cb:	call   0x40dc88
  4076d0:	mov    rbx,rax
  4076d3:	call   r14
  4076d6:	lea    rdx,[rip+0x2bdb0]        # 0x43348d
  4076dd:	lea    rcx,[rax+0x60]
  4076e1:	mov    r8,rbx
  4076e4:	call   0x401600
  4076e9:	mov    ecx,0x1
  4076ee:	call   0x42df60
  4076f3:	mov    ecx,eax
  4076f5:	call   0x40dc88
  4076fa:	mov    rbx,rax
  4076fd:	call   r14
  407700:	lea    rdx,[rip+0x2bd5b]        # 0x433462
  407707:	lea    rcx,[rax+0x60]
  40770b:	mov    r8,rbx
  40770e:	call   0x401600
  407713:	mov    ecx,0x1
  407718:	call   0x42df60
  40771d:	mov    ecx,eax
  40771f:	call   0x40dc88
  407724:	mov    rbx,rax
  407727:	call   r14
  40772a:	lea    rdx,[rip+0x2bd21]        # 0x433452
  407731:	lea    rcx,[rax+0x60]
  407735:	mov    r8,rbx
  407738:	call   0x401600
  40773d:	mov    ecx,0x1
  407742:	call   0x42df60
  407747:	call   0x40dc88
  40774c:	mov    rbx,rax
  40774f:	call   r14
  407752:	lea    rdx,[rip+0x2bceb]        # 0x433444
  407759:	lea    rcx,[rax+0x60]
  40775d:	mov    r8,rbx
  407760:	call   0x401600
  407765:	mov    ecx,0x1
  40776a:	call   0x42df60
  40776f:	mov    rcx,QWORD PTR [rip+0x3e812]        # 0x445f88
  407776:	lea    rdx,[rip+0x2bb89]        # 0x433306
  40777d:	call   0x401600
  407782:	mov    rcx,QWORD PTR [rsp+0xb8]
  40778a:	test   rcx,rcx
  40778d:	je     0x4070ed
  407793:	mov    r8,rcx
  407796:	mov    rcx,QWORD PTR [rip+0x3e7eb]        # 0x445f88
  40779d:	lea    rdx,[rip+0x2bb6d]        # 0x433311
  4077a4:	call   0x401600
  4077a9:	mov    rcx,QWORD PTR [rsp+0xb8]
  4077b1:	jmp    0x4070ed
  4077b6:	mov    ecx,eax
  4077b8:	call   0x40dc88
  4077bd:	mov    rbx,rax
  4077c0:	call   QWORD PTR [rip+0x4101a]        # 0x4487e0
  4077c6:	lea    rdx,[rip+0x2bb99]        # 0x433366
  4077cd:	lea    rcx,[rax+0x60]
  4077d1:	mov    r8,rbx
  4077d4:	call   0x401600
  4077d9:	mov    DWORD PTR [rsp+0x7c],0x1
  4077e1:	jmp    0x407128
  4077e6:	mov    ecx,eax
  4077e8:	call   0x40dc88
  4077ed:	mov    rbx,rax
  4077f0:	call   QWORD PTR [rip+0x40fea]        # 0x4487e0
  4077f6:	lea    rcx,[rax+0x60]
  4077fa:	lea    rdx,[rip+0x2ba0f]        # 0x433210
  407801:	mov    r8,rbx
  407804:	call   0x401600
  407809:	mov    ecx,0x1
  40780e:	call   0x42df60
  407813:	mov    ecx,eax
  407815:	call   0x40dc88
  40781a:	mov    rbx,rax
  40781d:	mov    rax,QWORD PTR [rsp+0x68]
  407822:	call   rax
  407824:	jmp    0x4077f6
  407826:	mov    ecx,eax
  407828:	call   0x40dc88
  40782d:	mov    rbx,rax
  407830:	call   QWORD PTR [rip+0x40faa]        # 0x4487e0
  407836:	lea    rdx,[rip+0x2bb39]        # 0x433376
  40783d:	lea    rcx,[rax+0x60]
  407841:	mov    r8,rbx
  407844:	call   0x401600
  407849:	mov    ecx,0x1
  40784e:	call   0x42df60
  407853:	mov    ecx,eax
  407855:	call   0x40dc88
  40785a:	mov    rbx,rax
  40785d:	call   QWORD PTR [rip+0x40f7d]        # 0x4487e0
  407863:	lea    rdx,[rip+0x2bbbc]        # 0x433426
  40786a:	lea    rcx,[rax+0x60]
  40786e:	mov    r8,rbx
  407871:	call   0x401600
  407876:	mov    ecx,0x1
  40787b:	call   0x42df60
  407880:	cmp    QWORD PTR [rip+0x3e708],0x0        # 0x445f90
  407888:	lea    rax,[rip+0x2ae4c]        # 0x4326db
  40788f:	lea    rbx,[rip+0x2ae4a]        # 0x4326e0
  407896:	cmovne rbx,rax
  40789a:	call   QWORD PTR [rip+0x40f40]        # 0x4487e0
  4078a0:	lea    rdx,[rip+0x2aea8]        # 0x43274f
  4078a7:	lea    rcx,[rax+0x60]
  4078ab:	mov    r8,rbx
  4078ae:	call   0x401600
  4078b3:	mov    ecx,0x1
  4078b8:	call   0x42df60
  4078bd:	mov    ecx,eax
  4078bf:	call   0x40dc88
  4078c4:	mov    rbx,rax
  4078c7:	call   QWORD PTR [rip+0x40f13]        # 0x4487e0
  4078cd:	lea    rdx,[rip+0x2b7f1]        # 0x4330c5
  4078d4:	lea    rcx,[rax+0x60]
  4078d8:	mov    r8,rbx
  4078db:	call   0x401600
  4078e0:	mov    ecx,0x1
  4078e5:	call   0x42df60
  4078ea:	mov    ecx,ebx
  4078ec:	call   0x40dc88
  4078f1:	mov    rbx,rax
  4078f4:	call   QWORD PTR [rip+0x40ee6]        # 0x4487e0
  4078fa:	lea    rdx,[rip+0x2b9f5]        # 0x4332f6
  407901:	lea    rcx,[rax+0x60]
  407905:	mov    r8,rbx
  407908:	call   0x401600
  40790d:	mov    ecx,0x1
  407912:	call   0x42df60
  407917:	call   QWORD PTR [rip+0x40ec3]        # 0x4487e0
  40791d:	lea    rdx,[rip+0x2bb8c]        # 0x4334b0
  407924:	lea    rcx,[rax+0x60]
  407928:	call   0x401600
  40792d:	mov    ecx,0x1
  407932:	call   0x42df60
  407937:	mov    ecx,eax
  407939:	call   0x40dc88
  40793e:	mov    rbx,rax
  407941:	call   QWORD PTR [rip+0x40e99]        # 0x4487e0
  407947:	lea    rdx,[rip+0x2b99a]        # 0x4332e8
  40794e:	lea    rcx,[rax+0x60]
  407952:	mov    r8,rbx
  407955:	call   0x401600
  40795a:	mov    ecx,0x1
  40795f:	call   0x42df60
  407964:	nop
  407965:	nop
  407966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407970:	push   rbx
  407971:	sub    rsp,0x50
  407975:	mov    rcx,QWORD PTR [rip+0x3e614]        # 0x445f90
  40797c:	lea    rdx,[rsp+0x38]
  407981:	call   0x415540
  407986:	mov    rdx,QWORD PTR [rsp+0x38]
  40798b:	test   rax,rax
  40798e:	mov    QWORD PTR [rsp+0x40],rax
  407993:	mov    DWORD PTR [rsp+0x48],edx
  407997:	je     0x4079c6
  407999:	lea    rax,[rip+0x2b8e1]        # 0x433281
  4079a0:	mov    r9,QWORD PTR [rip+0x3e5e1]        # 0x445f88
  4079a7:	mov    edx,DWORD PTR [rip+0x3b68f]        # 0x44303c
  4079ad:	lea    rcx,[rsp+0x40]
  4079b2:	xor    r8d,r8d
  4079b5:	mov    QWORD PTR [rsp+0x20],rax
  4079ba:	call   0x406ae0
  4079bf:	nop
  4079c0:	add    rsp,0x50
  4079c4:	pop    rbx
  4079c5:	ret    
  4079c6:	cmp    QWORD PTR [rip+0x3e5c2],0x0        # 0x445f90
  4079ce:	lea    r8,[rip+0x2ad0b]        # 0x4326e0
  4079d5:	lea    rax,[rip+0x2acff]        # 0x4326db
  4079dc:	mov    rbx,r8
  4079df:	cmovne rbx,rax
  4079e3:	call   QWORD PTR [rip+0x40df7]        # 0x4487e0
  4079e9:	lea    rdx,[rip+0x2ad5f]        # 0x43274f
  4079f0:	lea    rcx,[rax+0x60]
  4079f4:	mov    r8,rbx
  4079f7:	call   0x401600
  4079fc:	mov    ecx,0x1
  407a01:	call   0x42df60
  407a06:	nop
  407a07:	nop    WORD PTR [rax+rax*1+0x0]
  407a10:	push   rsi
  407a11:	push   rbx
  407a12:	sub    rsp,0x58
  407a16:	lea    rcx,[rsp+0x20]
  407a1b:	mov    esi,edx
  407a1d:	call   0x40de58
  407a22:	test   eax,eax
  407a24:	js     0x407b7f
  407a2a:	mov    rcx,QWORD PTR [rip+0x3e55f]        # 0x445f90
  407a31:	lea    rdx,[rsp+0x28]
  407a36:	call   0x415540
  407a3b:	mov    rdx,QWORD PTR [rsp+0x28]
  407a40:	test   rax,rax
  407a43:	mov    QWORD PTR [rsp+0x30],rax
  407a48:	mov    DWORD PTR [rsp+0x38],edx
  407a4c:	je     0x407b42
  407a52:	mov    r8d,DWORD PTR [rip+0x3b5e3]        # 0x44303c
  407a59:	mov    rcx,QWORD PTR [rsp+0x20]
  407a5e:	lea    rdx,[rsp+0x30]
  407a63:	call   0x40de60
  407a68:	mov    rcx,QWORD PTR [rsp+0x30]
  407a6d:	mov    ebx,eax
  407a6f:	call   0x42df08
  407a74:	test   ebx,ebx
  407a76:	js     0x407b15
  407a7c:	xor    edx,edx
  407a7e:	test   esi,esi
  407a80:	lea    r8,[rsp+0x40]
  407a85:	mov    rcx,QWORD PTR [rsp+0x20]
  407a8a:	je     0x407ad0
  407a8c:	call   0x40de70
  407a91:	cmp    eax,0xffffffc8
  407a94:	je     0x407bd9
  407a9a:	test   eax,eax
  407a9c:	js     0x407bf9
  407aa2:	mov    r8d,DWORD PTR [rsp+0x48]
  407aa7:	mov    rcx,QWORD PTR [rsp+0x40]
  407aac:	mov    edx,0x1
  407ab1:	mov    r9,QWORD PTR [rip+0x3e4d0]        # 0x445f88
  407ab8:	call   0x42dee0
  407abd:	mov    rax,QWORD PTR [rip+0x35f4c]        # 0x43da10
  407ac4:	mov    rcx,QWORD PTR [rsp+0x40]
  407ac9:	call   QWORD PTR [rax]
  407acb:	jmp    0x407b03
  407acd:	nop    DWORD PTR [rax]
  407ad0:	call   0x40de50
  407ad5:	test   eax,eax
  407ad7:	js     0x407bac
  407add:	mov    rcx,QWORD PTR [rip+0x3e4a4]        # 0x445f88
  407ae4:	mov    r8,QWORD PTR [rsp+0x40]
  407ae9:	lea    rdx,[rip+0x2ac5f]        # 0x43274f
  407af0:	call   0x401600
  407af5:	mov    rax,QWORD PTR [rip+0x35f14]        # 0x43da10
  407afc:	mov    rcx,QWORD PTR [rsp+0x40]
  407b01:	call   QWORD PTR [rax]
  407b03:	mov    rcx,QWORD PTR [rsp+0x20]
  407b08:	call   0x40de90
  407b0d:	nop
  407b0e:	add    rsp,0x58
  407b12:	pop    rbx
  407b13:	pop    rsi
  407b14:	ret    
  407b15:	mov    ecx,ebx
  407b17:	call   0x40dc88
  407b1c:	mov    rbx,rax
  407b1f:	call   QWORD PTR [rip+0x40cbb]        # 0x4487e0
  407b25:	lea    rdx,[rip+0x2b043]        # 0x432b6f
  407b2c:	lea    rcx,[rax+0x60]
  407b30:	mov    r8,rbx
  407b33:	call   0x401600
  407b38:	mov    ecx,0x1
  407b3d:	call   0x42df60
  407b42:	cmp    QWORD PTR [rip+0x3e446],0x0        # 0x445f90
  407b4a:	lea    rax,[rip+0x2ab8a]        # 0x4326db
  407b51:	lea    rbx,[rip+0x2ab88]        # 0x4326e0
  407b58:	cmovne rbx,rax
  407b5c:	call   QWORD PTR [rip+0x40c7e]        # 0x4487e0
  407b62:	lea    rdx,[rip+0x2abe6]        # 0x43274f
  407b69:	lea    rcx,[rax+0x60]
  407b6d:	mov    r8,rbx
  407b70:	call   0x401600
  407b75:	mov    ecx,0x1
  407b7a:	call   0x42df60
  407b7f:	mov    ecx,eax
  407b81:	call   0x40dc88
  407b86:	mov    rbx,rax
  407b89:	call   QWORD PTR [rip+0x40c51]        # 0x4487e0
  407b8f:	lea    rdx,[rip+0x2b294]        # 0x432e2a
  407b96:	lea    rcx,[rax+0x60]
  407b9a:	mov    r8,rbx
  407b9d:	call   0x401600
  407ba2:	mov    ecx,0x1
  407ba7:	call   0x42df60
  407bac:	mov    ecx,eax
  407bae:	call   0x40dc88
  407bb3:	mov    rbx,rax
  407bb6:	call   QWORD PTR [rip+0x40c24]        # 0x4487e0
  407bbc:	lea    rdx,[rip+0x2b93d]        # 0x433500
  407bc3:	lea    rcx,[rax+0x60]
  407bc7:	mov    r8,rbx
  407bca:	call   0x401600
  407bcf:	mov    ecx,0x1
  407bd4:	call   0x42df60
  407bd9:	call   QWORD PTR [rip+0x40c01]        # 0x4487e0
  407bdf:	lea    rdx,[rip+0x2b8fa]        # 0x4334e0
  407be6:	lea    rcx,[rax+0x60]
  407bea:	call   0x401600
  407bef:	mov    ecx,0x1
  407bf4:	call   0x42df60
  407bf9:	mov    ecx,eax
  407bfb:	call   0x40dc88
  407c00:	mov    rbx,rax
  407c03:	call   QWORD PTR [rip+0x40bd7]        # 0x4487e0
  407c09:	lea    rdx,[rip+0x2b340]        # 0x432f50
  407c10:	lea    rcx,[rax+0x60]
  407c14:	mov    r8,rbx
  407c17:	call   0x401600
  407c1c:	mov    ecx,0x1
  407c21:	call   0x42df60
  407c26:	nop
  407c27:	nop    WORD PTR [rax+rax*1+0x0]
  407c30:	push   r15
  407c32:	push   r14
  407c34:	push   r13
  407c36:	push   r12
  407c38:	push   rbp
  407c39:	push   rdi
  407c3a:	push   rsi
  407c3b:	push   rbx
  407c3c:	sub    rsp,0x38
  407c40:	lea    r13,[rip+0x3e349]        # 0x445f90
  407c47:	mov    ebx,0x3
  407c4c:	mov    r14d,0x2
  407c52:	mov    QWORD PTR [rsp+0x20],0x0
  407c5b:	mov    QWORD PTR [rsp+0x28],0x0
  407c64:	lea    rbp,[rsp+0x20]
  407c69:	lea    r12,[rsp+0x28]
  407c6e:	jmp    0x407c81
  407c70:	lea    rdi,[rip+0x2addb]        # 0x432a52
  407c77:	mov    rsi,rax
  407c7a:	mov    rcx,r14
  407c7d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407c7f:	je     0x407cb3
  407c81:	mov    r8,QWORD PTR [r13+0x0]
  407c85:	mov    rdx,rbp
  407c88:	mov    rcx,r12
  407c8b:	call   0x412420
  407c90:	cmp    rax,0xffffffffffffffff
  407c94:	je     0x407db5
  407c9a:	mov    rax,QWORD PTR [rsp+0x28]
  407c9f:	lea    r15,[rip+0x2b89d]        # 0x433543
  407ca6:	mov    rcx,rbx
  407ca9:	mov    rdi,r15
  407cac:	mov    rsi,rax
  407caf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407cb1:	jne    0x407c70
  407cb3:	mov    r14d,0x3
  407cb9:	jmp    0x407cd3
  407cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  407cc0:	lea    rdi,[rip+0x2ad8b]        # 0x432a52
  407cc7:	mov    rsi,rax
  407cca:	mov    ecx,0x2
  407ccf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407cd1:	jne    0x407d01
  407cd3:	mov    r8,QWORD PTR [r13+0x0]
  407cd7:	mov    rdx,rbp
  407cda:	mov    rcx,r12
  407cdd:	call   0x412420
  407ce2:	cmp    rax,0xffffffffffffffff
  407ce6:	mov    rbx,rax
  407ce9:	je     0x407dd5
  407cef:	mov    rax,QWORD PTR [rsp+0x28]
  407cf4:	mov    rdi,r15
  407cf7:	mov    rcx,r14
  407cfa:	mov    rsi,rax
  407cfd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407cff:	je     0x407cc0
  407d01:	mov    rcx,QWORD PTR [rip+0x3e280]        # 0x445f88
  407d08:	lea    r8,[rip+0x2b861]        # 0x433570
  407d0f:	lea    rdx,[rip+0x2aa39]        # 0x43274f
  407d16:	call   0x401600
  407d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  407d20:	test   rbx,rbx
  407d23:	mov    r8,QWORD PTR [rsp+0x28]
  407d28:	jle    0x407d38
  407d2a:	movzx  eax,BYTE PTR [r8+rbx*1-0x1]
  407d30:	cmp    al,0xa
  407d32:	je     0x407d90
  407d34:	cmp    al,0xd
  407d36:	je     0x407d90
  407d38:	cmp    BYTE PTR [r8],0x0
  407d3c:	jne    0x407da0
  407d3e:	mov    r8,QWORD PTR [r13+0x0]
  407d42:	mov    rdx,rbp
  407d45:	mov    rcx,r12
  407d48:	call   0x412420
  407d4d:	cmp    rax,0xffffffffffffffff
  407d51:	mov    rbx,rax
  407d54:	jne    0x407d20
  407d56:	mov    rcx,QWORD PTR [rip+0x3e22b]        # 0x445f88
  407d5d:	lea    r8,[rip+0x2b823]        # 0x433587
  407d64:	lea    rdx,[rip+0x2a9e4]        # 0x43274f
  407d6b:	call   0x401600
  407d70:	mov    rcx,QWORD PTR [rsp+0x28]
  407d75:	call   0x42df08
  407d7a:	nop
  407d7b:	add    rsp,0x38
  407d7f:	pop    rbx
  407d80:	pop    rsi
  407d81:	pop    rdi
  407d82:	pop    rbp
  407d83:	pop    r12
  407d85:	pop    r13
  407d87:	pop    r14
  407d89:	pop    r15
  407d8b:	ret    
  407d8c:	nop    DWORD PTR [rax+0x0]
  407d90:	sub    rbx,0x1
  407d94:	mov    BYTE PTR [r8+rbx*1],0x0
  407d99:	jmp    0x407d20
  407d9b:	nop    DWORD PTR [rax+rax*1+0x0]
  407da0:	mov    rcx,QWORD PTR [rip+0x3e1e1]        # 0x445f88
  407da7:	lea    rdx,[rip+0x2a6b8]        # 0x432466
  407dae:	call   0x401600
  407db3:	jmp    0x407d3e
  407db5:	call   QWORD PTR [rip+0x40a25]        # 0x4487e0
  407dbb:	lea    rdx,[rip+0x2b756]        # 0x433518
  407dc2:	lea    rcx,[rax+0x60]
  407dc6:	call   0x401600
  407dcb:	mov    ecx,0x1
  407dd0:	call   0x42df60
  407dd5:	call   QWORD PTR [rip+0x40a05]        # 0x4487e0
  407ddb:	lea    rdx,[rip+0x2b766]        # 0x433548
  407de2:	lea    rcx,[rax+0x60]
  407de6:	call   0x401600
  407deb:	mov    ecx,0x1
  407df0:	call   0x42df60
  407df5:	nop
  407df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e00:	push   rsi
  407e01:	push   rbx
  407e02:	sub    rsp,0x38
  407e06:	call   0x402c20
  407e0b:	test   rax,rax
  407e0e:	mov    rbx,rax
  407e11:	je     0x407e9a
  407e17:	mov    eax,DWORD PTR [rip+0x3b21b]        # 0x443038
  407e1d:	test   eax,eax
  407e1f:	jne    0x407e75
  407e21:	mov    rax,QWORD PTR [rip+0x35cb8]        # 0x43dae0
  407e28:	mov    rsi,QWORD PTR [rip+0x35ca1]        # 0x43dad0
  407e2f:	lea    r9,[rsp+0x28]
  407e34:	xor    edx,edx
  407e36:	mov    rcx,rbx
  407e39:	mov    eax,DWORD PTR [rax]
  407e3b:	mov    r8,QWORD PTR [rsi]
  407e3e:	mov    QWORD PTR [rsp+0x28],rax
  407e43:	call   0x40dd70
  407e48:	test   eax,eax
  407e4a:	js     0x407eba
  407e4c:	mov    r9,QWORD PTR [rip+0x3e135]        # 0x445f88
  407e53:	mov    r8,QWORD PTR [rsp+0x28]
  407e58:	mov    edx,0x1
  407e5d:	mov    rcx,QWORD PTR [rsi]
  407e60:	call   0x42dee0
  407e65:	mov    rcx,rbx
  407e68:	call   0x40dd78
  407e6d:	nop
  407e6e:	add    rsp,0x38
  407e72:	pop    rbx
  407e73:	pop    rsi
  407e74:	ret    
  407e75:	mov    edx,DWORD PTR [rip+0x3b1b5]        # 0x443030
  407e7b:	mov    rcx,QWORD PTR [rip+0x3e106]        # 0x445f88
  407e82:	mov    r8,rbx
  407e85:	call   0x40b270
  407e8a:	mov    rcx,rbx
  407e8d:	call   0x40dd78
  407e92:	nop
  407e93:	add    rsp,0x38
  407e97:	pop    rbx
  407e98:	pop    rsi
  407e99:	ret    
  407e9a:	call   QWORD PTR [rip+0x40940]        # 0x4487e0
  407ea0:	lea    rdx,[rip+0x2b6f5]        # 0x43359c
  407ea7:	lea    rcx,[rax+0x60]
  407eab:	call   0x401600
  407eb0:	mov    ecx,0x1
  407eb5:	call   0x42df60
  407eba:	mov    ecx,eax
  407ebc:	call   0x40dc88
  407ec1:	mov    rbx,rax
  407ec4:	call   QWORD PTR [rip+0x40916]        # 0x4487e0
  407eca:	lea    rdx,[rip+0x2ad1e]        # 0x432bef
  407ed1:	lea    rcx,[rax+0x60]
  407ed5:	mov    r8,rbx
  407ed8:	call   0x401600
  407edd:	mov    ecx,0x1
  407ee2:	call   0x42df60
  407ee7:	nop
  407ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  407ef0:	push   r15
  407ef2:	push   r14
  407ef4:	push   r13
  407ef6:	push   r12
  407ef8:	push   rbp
  407ef9:	push   rdi
  407efa:	push   rsi
  407efb:	push   rbx
  407efc:	sub    rsp,0x68
  407f00:	mov    ebp,ecx
  407f02:	lea    r13,[rsp+0x48]
  407f07:	mov    rcx,QWORD PTR [rip+0x3e082]        # 0x445f90
  407f0e:	mov    r14,rdx
  407f11:	mov    QWORD PTR [rsp+0x40],0x0
  407f1a:	mov    rdx,r13
  407f1d:	call   0x415540
  407f22:	mov    rdx,QWORD PTR [rsp+0x48]
  407f27:	test   rax,rax
  407f2a:	mov    QWORD PTR [rsp+0x50],rax
  407f2f:	mov    DWORD PTR [rsp+0x58],edx
  407f33:	je     0x40810f
  407f39:	mov    r9d,DWORD PTR [rip+0x3b0fc]        # 0x44303c
  407f40:	lea    rdx,[rsp+0x3c]
  407f45:	lea    rcx,[rsp+0x40]
  407f4a:	lea    r8,[rsp+0x50]
  407f4f:	mov    DWORD PTR [rsp+0x20],0x0
  407f57:	call   0x40db30
  407f5c:	test   eax,eax
  407f5e:	js     0x4080e2
  407f64:	mov    rcx,QWORD PTR [rsp+0x50]
  407f69:	call   0x42df08
  407f6e:	mov    edi,DWORD PTR [rsp+0x3c]
  407f72:	cmp    edi,0x1
  407f75:	jle    0x408060
  407f7b:	mov    eax,DWORD PTR [rip+0x3b0b7]        # 0x443038
  407f81:	test   eax,eax
  407f83:	je     0x408090
  407f89:	xor    ebx,ebx
  407f8b:	xor    esi,esi
  407f8d:	mov    r15,QWORD PTR [rip+0x35b4c]        # 0x43dae0
  407f94:	mov    r12,QWORD PTR [rip+0x35b35]        # 0x43dad0
  407f9b:	jmp    0x407fe5
  407f9d:	nop    DWORD PTR [rax]
  407fa0:	mov    rax,QWORD PTR [rsp+0x40]
  407fa5:	mov    rdx,r14
  407fa8:	mov    rcx,QWORD PTR [rax+rbx*1]
  407fac:	call   0x407e00
  407fb1:	mov    rax,QWORD PTR [rsp+0x40]
  407fb6:	add    esi,0x1
  407fb9:	mov    rcx,QWORD PTR [rax+rbx*1]
  407fbd:	call   0x40db90
  407fc2:	cmp    edi,esi
  407fc4:	je     0x408070
  407fca:	test   esi,esi
  407fcc:	jle    0x407fe1
  407fce:	mov    rcx,QWORD PTR [rip+0x3dfb3]        # 0x445f88
  407fd5:	lea    rdx,[rip+0x2aa76]        # 0x432a52
  407fdc:	call   0x401600
  407fe1:	add    rbx,0x8
  407fe5:	cmp    DWORD PTR [rip+0x3b04c],0x1        # 0x443038
  407fec:	je     0x408040
  407fee:	test   ebp,ebp
  407ff0:	jne    0x407fa0
  407ff2:	mov    eax,DWORD PTR [r15]
  407ff5:	mov    r8,QWORD PTR [r12]
  407ff9:	mov    r9,r13
  407ffc:	mov    edx,DWORD PTR [rip+0x3b036]        # 0x443038
  408002:	mov    QWORD PTR [rsp+0x48],rax
  408007:	mov    rax,QWORD PTR [rsp+0x40]
  40800c:	mov    rcx,QWORD PTR [rax+rbx*1]
  408010:	call   0x40db88
  408015:	test   eax,eax
  408017:	js     0x4080b5
  40801d:	mov    r9,QWORD PTR [rip+0x3df64]        # 0x445f88
  408024:	mov    r8,QWORD PTR [rsp+0x48]
  408029:	mov    edx,0x1
  40802e:	mov    rcx,QWORD PTR [r12]
  408032:	call   0x42dee0
  408037:	jmp    0x407fb1
  40803c:	nop    DWORD PTR [rax+0x0]
  408040:	mov    rax,QWORD PTR [rsp+0x40]
  408045:	mov    rdx,QWORD PTR [rip+0x3df3c]        # 0x445f88
  40804c:	mov    r8d,0x1
  408052:	mov    rcx,QWORD PTR [rax+rbx*1]
  408056:	call   0x4031d0
  40805b:	jmp    0x407fee
  40805d:	nop    DWORD PTR [rax]
  408060:	test   edi,edi
  408062:	jg     0x407f89
  408068:	nop    DWORD PTR [rax+rax*1+0x0]
  408070:	mov    rcx,QWORD PTR [rsp+0x40]
  408075:	mov    rax,QWORD PTR [rip+0x35994]        # 0x43da10
  40807c:	call   QWORD PTR [rax]
  40807e:	nop
  40807f:	add    rsp,0x68
  408083:	pop    rbx
  408084:	pop    rsi
  408085:	pop    rdi
  408086:	pop    rbp
  408087:	pop    r12
  408089:	pop    r13
  40808b:	pop    r14
  40808d:	pop    r15
  40808f:	ret    
  408090:	call   QWORD PTR [rip+0x4074a]        # 0x4487e0
  408096:	lea    rdx,[rip+0x2b51b]        # 0x4335b8
  40809d:	lea    rcx,[rax+0x60]
  4080a1:	call   0x401600
  4080a6:	mov    DWORD PTR [rip+0x3af88],0x1        # 0x443038
  4080b0:	jmp    0x407f89
  4080b5:	mov    ecx,eax
  4080b7:	call   0x40dc88
  4080bc:	mov    rbx,rax
  4080bf:	call   QWORD PTR [rip+0x4071b]        # 0x4487e0
  4080c5:	lea    rdx,[rip+0x2ab23]        # 0x432bef
  4080cc:	lea    rcx,[rax+0x60]
  4080d0:	mov    r8,rbx
  4080d3:	call   0x401600
  4080d8:	mov    ecx,0x1
  4080dd:	call   0x42df60
  4080e2:	mov    ecx,eax
  4080e4:	call   0x40dc88
  4080e9:	mov    rbx,rax
  4080ec:	call   QWORD PTR [rip+0x406ee]        # 0x4487e0
  4080f2:	lea    rdx,[rip+0x2aa76]        # 0x432b6f
  4080f9:	lea    rcx,[rax+0x60]
  4080fd:	mov    r8,rbx
  408100:	call   0x401600
  408105:	mov    ecx,0x1
  40810a:	call   0x42df60
  40810f:	cmp    QWORD PTR [rip+0x3de79],0x0        # 0x445f90
  408117:	lea    rax,[rip+0x2a5bd]        # 0x4326db
  40811e:	lea    rbx,[rip+0x2a5bb]        # 0x4326e0
  408125:	cmovne rbx,rax
  408129:	call   QWORD PTR [rip+0x406b1]        # 0x4487e0
  40812f:	lea    rdx,[rip+0x2a619]        # 0x43274f
  408136:	lea    rcx,[rax+0x60]
  40813a:	mov    r8,rbx
  40813d:	call   0x401600
  408142:	mov    ecx,0x1
  408147:	call   0x42df60
  40814c:	nop
  40814d:	nop    DWORD PTR [rax]
  408150:	push   r15
  408152:	push   r14
  408154:	push   r13
  408156:	push   r12
  408158:	push   rbp
  408159:	push   rdi
  40815a:	push   rsi
  40815b:	push   rbx
  40815c:	sub    rsp,0x278
  408163:	mov    r8,rdx
  408166:	mov    edx,ecx
  408168:	mov    rcx,QWORD PTR [rip+0x35881]        # 0x43d9f0
  40816f:	call   0x4249e0
  408174:	mov    rbx,QWORD PTR [rip+0x35875]        # 0x43d9f0
  40817b:	mov    rsi,QWORD PTR [rip+0x4065e]        # 0x4487e0
  408182:	mov    rax,QWORD PTR [rbx+0x78]
  408186:	test   BYTE PTR [rax+0x1e88],0xf
  40818d:	je     0x408713
  408193:	call   rsi
  408195:	add    rax,0x30
  408199:	mov    QWORD PTR [rip+0x3aea8],rax        # 0x443048
  4081a0:	mov    rax,QWORD PTR [rbx+0x78]
  4081a4:	mov    edx,0x1
  4081a9:	test   BYTE PTR [rax+0x3b8],0xf
  4081b0:	jne    0x4081bf
  4081b2:	test   BYTE PTR [rax+0x420],0xf
  4081b9:	je     0x408793
  4081bf:	test   BYTE PTR [rax+0xca8],0xf
  4081c6:	je     0x4081d2
  4081c8:	mov    DWORD PTR [rip+0x3ae5e],0x4        # 0x443030
  4081d2:	test   BYTE PTR [rax+0x148],0xf
  4081d9:	je     0x408701
  4081df:	mov    rcx,QWORD PTR [rax+0x150]
  4081e6:	call   0x409d10
  4081eb:	test   rax,rax
  4081ee:	mov    QWORD PTR [rip+0x3dd93],rax        # 0x445f88
  4081f5:	je     0x409501
  4081fb:	mov    rax,QWORD PTR [rbx+0x78]
  4081ff:	test   BYTE PTR [rax+0xe0],0xf
  408206:	je     0x408744
  40820c:	lea    rdx,[rsp+0x170]
  408214:	mov    rcx,QWORD PTR [rax+0xe8]
  40821b:	call   QWORD PTR [rip+0x4085f]        # 0x448a80
  408221:	test   eax,eax
  408223:	je     0x4088cc
  408229:	mov    rax,QWORD PTR [rbx+0x78]
  40822d:	lea    rdx,[rip+0x2b3c9]        # 0x4335fd
  408234:	mov    rcx,QWORD PTR [rax+0xe8]
  40823b:	call   0x42df30
  408240:	test   rax,rax
  408243:	mov    QWORD PTR [rip+0x3dd46],rax        # 0x445f90
  40824a:	je     0x408ecf
  408250:	xor    ecx,ecx
  408252:	call   0x409c60
  408257:	mov    rax,QWORD PTR [rbx+0x78]
  40825b:	test   BYTE PTR [rax+0x1ae0],0xf
  408262:	jne    0x408271
  408264:	test   BYTE PTR [rax+0x1b48],0xf
  40826b:	je     0x4087c0
  408271:	mov    DWORD PTR [rip+0x3adc1],0x0        # 0x44303c
  40827b:	test   BYTE PTR [rax+0x1bb0],0xf
  408282:	jne    0x408291
  408284:	test   BYTE PTR [rax+0x1c18],0xf
  40828b:	je     0x4087b1
  408291:	mov    DWORD PTR [rip+0x3ad9d],0x0        # 0x443038
  40829b:	test   BYTE PTR [rax+0x1940],0xf
  4082a2:	je     0x408725
  4082a8:	mov    DWORD PTR [rip+0x3ad82],0x2        # 0x443034
  4082b2:	test   BYTE PTR [rax+0x1a78],0xf
  4082b9:	mov    DWORD PTR [rip+0x3ad7d],0x0        # 0x443040
  4082c3:	mov    rdx,rax
  4082c6:	jne    0x40880e
  4082cc:	test   BYTE PTR [rdx+0x1e20],0xf
  4082d3:	mov    DWORD PTR [rip+0x3dca3],0x0        # 0x445f80
  4082dd:	jne    0x4087ef
  4082e3:	mov    eax,DWORD PTR [rdx+0x1ef0]
  4082e9:	lea    rcx,[rip+0xffffffffffff9340]        # 0x401630
  4082f0:	shr    eax,0x5
  4082f3:	xor    eax,0x1
  4082f6:	and    eax,0x1
  4082f9:	mov    DWORD PTR [rip+0x3dc99],eax        # 0x445f98
  4082ff:	call   0x40e0b0
  408304:	mov    rax,QWORD PTR [rbx+0x78]
  408308:	test   BYTE PTR [rax+0x10],0xf
  40830c:	jne    0x4087cf
  408312:	call   0x40e0b8
  408317:	test   eax,eax
  408319:	js     0x40949f
  40831f:	lea    rbp,[rsp+0xc0]
  408327:	xor    eax,eax
  408329:	mov    ecx,0x16
  40832e:	mov    rdi,rbp
  408331:	rep stos QWORD PTR es:[rdi],rax
  408334:	mov    rax,QWORD PTR [rbx+0x78]
  408338:	test   BYTE PTR [rax+0x78],0xf
  40833c:	je     0x408349
  40833e:	mov    DWORD PTR [rsp+0x168],0x1
  408349:	mov    edx,DWORD PTR [rip+0x3dc31]        # 0x445f80
  40834f:	mov    DWORD PTR [rsp+0x160],edx
  408356:	xor    edx,edx
  408358:	test   BYTE PTR [rax+0xd10],0xf
  40835f:	setne  dl
  408362:	test   BYTE PTR [rax+0x830],0xf
  408369:	mov    DWORD PTR [rsp+0x158],edx
  408370:	je     0x408381
  408372:	mov    rdx,QWORD PTR [rax+0x838]
  408379:	mov    QWORD PTR [rsp+0xc8],rdx
  408381:	test   BYTE PTR [rax+0xaa0],0xf
  408388:	je     0x408399
  40838a:	mov    rdx,QWORD PTR [rax+0xaa8]
  408391:	mov    QWORD PTR [rsp+0xf8],rdx
  408399:	test   BYTE PTR [rax+0xb08],0xf
  4083a0:	je     0x4083b1
  4083a2:	mov    rdx,QWORD PTR [rax+0xb10]
  4083a9:	mov    QWORD PTR [rsp+0x108],rdx
  4083b1:	xor    edx,edx
  4083b3:	test   BYTE PTR [rax+0x1738],0xf
  4083ba:	setne  dl
  4083bd:	test   BYTE PTR [rax+0x10b8],0xf
  4083c4:	mov    DWORD PTR [rsp+0x144],edx
  4083cb:	je     0x408783
  4083d1:	test   BYTE PTR [rax+0x898],0xf
  4083d8:	je     0x4083e9
  4083da:	mov    rdx,QWORD PTR [rax+0x8a0]
  4083e1:	mov    QWORD PTR [rsp+0xd0],rdx
  4083e9:	xor    edx,edx
  4083eb:	test   BYTE PTR [rax+0x1870],0xf
  4083f2:	setne  dl
  4083f5:	test   BYTE PTR [rax+0x968],0xf
  4083fc:	mov    DWORD PTR [rsp+0xd8],edx
  408403:	mov    edx,DWORD PTR [rip+0x3ac33]        # 0x44303c
  408409:	mov    DWORD PTR [rsp+0xdc],edx
  408410:	mov    edx,DWORD PTR [rip+0x3ac22]        # 0x443038
  408416:	mov    DWORD PTR [rsp+0xe0],edx
  40841d:	je     0x40842e
  40841f:	mov    rdx,QWORD PTR [rax+0x970]
  408426:	mov    QWORD PTR [rsp+0xe8],rdx
  40842e:	test   BYTE PTR [rax+0x900],0xf
  408435:	je     0x408446
  408437:	mov    rdx,QWORD PTR [rax+0x908]
  40843e:	mov    QWORD PTR [rsp+0xf0],rdx
  408446:	test   BYTE PTR [rax+0xa38],0xf
  40844d:	je     0x40845e
  40844f:	mov    rdx,QWORD PTR [rax+0xa40]
  408456:	mov    QWORD PTR [rsp+0x100],rdx
  40845e:	test   BYTE PTR [rax+0x9d0],0xf
  408465:	je     0x408476
  408467:	mov    rdx,QWORD PTR [rax+0x9d8]
  40846e:	mov    QWORD PTR [rsp+0x110],rdx
  408476:	test   BYTE PTR [rax+0x1c80],0xf
  40847d:	jne    0x408771
  408483:	test   BYTE PTR [rax+0x1ce8],0xf
  40848a:	mov    r10,rax
  40848d:	jne    0x408858
  408493:	test   BYTE PTR [r10+0x1d50],0xf
  40849b:	je     0x4084ac
  40849d:	mov    rax,QWORD PTR [r10+0x1d58]
  4084a4:	mov    QWORD PTR [rsp+0x120],rax
  4084ac:	test   BYTE PTR [r10+0x1f58],0xf
  4084b4:	je     0x4084c5
  4084b6:	mov    rax,QWORD PTR [r10+0x1f60]
  4084bd:	mov    QWORD PTR [rsp+0x128],rax
  4084c5:	test   BYTE PTR [r10+0xb70],0xf
  4084cd:	je     0x408500
  4084cf:	test   BYTE PTR [r10+0x3b8],0xf
  4084d7:	mov    rax,QWORD PTR [r10+0xb78]
  4084de:	mov    QWORD PTR [rsp+0x130],rax
  4084e6:	je     0x408500
  4084e8:	cmp    DWORD PTR [rsp+0xd8],0x0
  4084f0:	je     0x4089f9
  4084f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408500:	mov    rax,QWORD PTR [rbx+0x78]
  408504:	test   BYTE PTR [rax+0xbd8],0xf
  40850b:	je     0x408527
  40850d:	lea    rdi,[rip+0x2ad6d]        # 0x433281
  408514:	mov    DWORD PTR [rsp+0x138],0x1
  40851f:	mov    QWORD PTR [rsp+0x130],rdi
  408527:	test   BYTE PTR [rax+0xc40],0xf
  40852e:	jne    0x408752
  408534:	test   BYTE PTR [rax+0x1b0],0xf
  40853b:	jne    0x408879
  408541:	test   BYTE PTR [rax+0x218],0xf
  408548:	jne    0x408a28
  40854e:	test   BYTE PTR [rax+0x280],0xf
  408555:	jne    0x4088e0
  40855b:	test   BYTE PTR [rax+0x2e8],0xf
  408562:	jne    0x408b2b
  408568:	test   BYTE PTR [rax+0x350],0xf
  40856f:	jne    0x408d78
  408575:	test   BYTE PTR [rax+0x3b8],0xf
  40857c:	jne    0x408e95
  408582:	test   BYTE PTR [rax+0x420],0xf
  408589:	jne    0x408a1b
  40858f:	test   BYTE PTR [rax+0x488],0xf
  408596:	jne    0x408f28
  40859c:	test   BYTE PTR [rax+0x4f0],0xf
  4085a3:	jne    0x408fa6
  4085a9:	test   BYTE PTR [rax+0x558],0xf
  4085b0:	jne    0x409091
  4085b6:	test   BYTE PTR [rax+0xd78],0xf
  4085bd:	jne    0x40909e
  4085c3:	test   BYTE PTR [rax+0x7c8],0xf
  4085ca:	jne    0x4090ad
  4085d0:	test   BYTE PTR [rax+0xeb0],0xf
  4085d7:	jne    0x408ebd
  4085dd:	test   BYTE PTR [rax+0x1600],0xf
  4085e4:	jne    0x4090f7
  4085ea:	test   BYTE PTR [rax+0x16d0],0xf
  4085f1:	jne    0x409104
  4085f7:	test   BYTE PTR [rax+0xde0],0xf
  4085fe:	jne    0x40914e
  408604:	test   BYTE PTR [rax+0xe48],0xf
  40860b:	jne    0x409212
  408611:	test   BYTE PTR [rax+0x17a0],0xf
  408618:	jne    0x4092dc
  40861e:	test   BYTE PTR [rax+0x1120],0xf
  408625:	jne    0x409318
  40862b:	test   BYTE PTR [rax+0x6f8],0xf
  408632:	jne    0x40932c
  408638:	test   BYTE PTR [rax+0x760],0xf
  40863f:	jne    0x409345
  408645:	test   BYTE PTR [rax+0xfe8],0xf
  40864c:	jne    0x40935b
  408652:	test   BYTE PTR [rax+0x1460],0xf
  408659:	jne    0x409365
  40865f:	test   BYTE PTR [rax+0x11f0],0xf
  408666:	jne    0x409792
  40866c:	test   BYTE PTR [rax+0x1258],0xf
  408673:	jne    0x409785
  408679:	test   BYTE PTR [rax+0x12c0],0xf
  408680:	jne    0x4095ed
  408686:	test   BYTE PTR [rax+0x14c8],0xf
  40868d:	jne    0x4095cb
  408693:	test   BYTE PTR [rax+0x1530],0xf
  40869a:	jne    0x4093b7
  4086a0:	test   BYTE PTR [rax+0x1598],0xf
  4086a7:	jne    0x4093f7
  4086ad:	test   BYTE PTR [rax+0x1808],0xf
  4086b4:	jne    0x4093ea
  4086ba:	test   BYTE PTR [rax+0xf18],0xf
  4086c1:	jne    0x409495
  4086c7:	test   BYTE PTR [rax+0x1668],0xf
  4086ce:	jne    0x409401
  4086d4:	test   BYTE PTR [rax+0xf80],0xf
  4086db:	jne    0x4094f7
  4086e1:	test   BYTE PTR [rax+0x1050],0xf
  4086e8:	jne    0x40940b
  4086ee:	mov    edx,0x1
  4086f3:	mov    rcx,rbx
  4086f6:	call   QWORD PTR [rbx+0x98]
  4086fc:	jmp    0x408881
  408701:	call   rsi
  408703:	add    rax,0x30
  408707:	mov    QWORD PTR [rip+0x3d87a],rax        # 0x445f88
  40870e:	jmp    0x4081fb
  408713:	call   rsi
  408715:	add    rax,0x60
  408719:	mov    QWORD PTR [rip+0x3a928],rax        # 0x443048
  408720:	jmp    0x4081a0
  408725:	mov    edx,DWORD PTR [rax+0x19a8]
  40872b:	and    edx,0xf
  40872e:	cmp    edx,0x1
  408731:	sbb    edx,edx
  408733:	and    edx,0xfffffffd
  408736:	add    edx,0x4
  408739:	mov    DWORD PTR [rip+0x3a8f5],edx        # 0x443034
  40873f:	jmp    0x4082b2
  408744:	call   rsi
  408746:	mov    QWORD PTR [rip+0x3d843],rax        # 0x445f90
  40874d:	jmp    0x408250
  408752:	lea    rdi,[rip+0x2ab28]        # 0x433281
  408759:	mov    DWORD PTR [rsp+0x13c],0x1
  408764:	mov    QWORD PTR [rsp+0x130],rdi
  40876c:	jmp    0x408534
  408771:	mov    edx,DWORD PTR [rax+0x1c88]
  408777:	mov    DWORD PTR [rsp+0x118],edx
  40877e:	jmp    0x408483
  408783:	mov    DWORD PTR [rsp+0x140],0x1
  40878e:	jmp    0x4083d1
  408793:	test   BYTE PTR [rax+0x1600],0xf
  40879a:	jne    0x4081bf
  4087a0:	xor    edx,edx
  4087a2:	test   BYTE PTR [rax+0x1668],0xf
  4087a9:	setne  dl
  4087ac:	jmp    0x4081bf
  4087b1:	mov    DWORD PTR [rip+0x3a87d],0x1        # 0x443038
  4087bb:	jmp    0x40829b
  4087c0:	mov    DWORD PTR [rip+0x3a872],0x1        # 0x44303c
  4087ca:	jmp    0x40827b
  4087cf:	mov    ecx,DWORD PTR [rax+0x18]
  4087d2:	call   0x40e0a8
  4087d7:	mov    rax,QWORD PTR [rbx+0x78]
  4087db:	lea    rcx,[rip+0x2aeb1]        # 0x433693
  4087e2:	mov    edx,DWORD PTR [rax+0x18]
  4087e5:	call   0x4015d0
  4087ea:	jmp    0x408312
  4087ef:	mov    rcx,QWORD PTR [rdx+0x1e28]
  4087f6:	mov    DWORD PTR [rip+0x3d780],0x1        # 0x445f80
  408800:	call   0x40e820
  408805:	mov    rdx,QWORD PTR [rbx+0x78]
  408809:	jmp    0x4082e3
  40880e:	mov    rcx,QWORD PTR [rax+0x1a80]
  408815:	lea    rdx,[rip+0x2ade4]        # 0x433600
  40881c:	mov    rdi,QWORD PTR [rip+0x4008d]        # 0x4488b0
  408823:	call   rdi
  408825:	test   eax,eax
  408827:	je     0x4088a7
  408829:	mov    rax,QWORD PTR [rbx+0x78]
  40882d:	lea    rdx,[rip+0x2ae25]        # 0x433659
  408834:	mov    rcx,QWORD PTR [rax+0x1a80]
  40883b:	call   rdi
  40883d:	test   eax,eax
  40883f:	jne    0x408ef9
  408845:	mov    DWORD PTR [rip+0x3a7f1],0x3        # 0x443040
  40884f:	mov    rdx,QWORD PTR [rbx+0x78]
  408853:	jmp    0x4082cc
  408858:	mov    rcx,QWORD PTR [rax+0x1cf0]
  40885f:	call   0x40aef0
  408864:	or     eax,0x80000000
  408869:	mov    r10,QWORD PTR [rbx+0x78]
  40886d:	mov    DWORD PTR [rsp+0x118],eax
  408874:	jmp    0x408493
  408879:	mov    rcx,rbp
  40887c:	call   0x403b00
  408881:	mov    rcx,QWORD PTR [rip+0x3d700]        # 0x445f88
  408888:	call   0x42df58
  40888d:	call   0x40e0c0
  408892:	nop
  408893:	add    rsp,0x278
  40889a:	pop    rbx
  40889b:	pop    rsi
  40889c:	pop    rdi
  40889d:	pop    rbp
  40889e:	pop    r12
  4088a0:	pop    r13
  4088a2:	pop    r14
  4088a4:	pop    r15
  4088a6:	ret    
  4088a7:	call   rsi
  4088a9:	lea    rdx,[rip+0x2ad58]        # 0x433608
  4088b0:	lea    rcx,[rax+0x60]
  4088b4:	call   0x401600
  4088b9:	mov    DWORD PTR [rip+0x3a77d],0x2        # 0x443040
  4088c3:	mov    rdx,QWORD PTR [rbx+0x78]
  4088c7:	jmp    0x4082cc
  4088cc:	mov    eax,DWORD PTR [rsp+0x188]
  4088d3:	lea    ecx,[rax+rax*1]
  4088d6:	call   0x409c60
  4088db:	jmp    0x408229
  4088e0:	mov    rcx,QWORD PTR [rip+0x3a761]        # 0x443048
  4088e7:	lea    rdx,[rip+0x2ae1a]        # 0x433708
  4088ee:	call   0x401600
  4088f3:	mov    rcx,rbp
  4088f6:	call   0x40a7b0
  4088fb:	mov    rdx,rbp
  4088fe:	mov    ecx,0x1
  408903:	mov    r12,rax
  408906:	call   0x40a470
  40890b:	lea    rcx,[rsp+0x80]
  408913:	mov    r9,rbp
  408916:	mov    r8d,0x1
  40891c:	mov    rdx,rax
  40891f:	mov    rdi,rax
  408922:	call   0x401660
  408927:	mov    rdx,QWORD PTR [rip+0x3a71a]        # 0x443048
  40892e:	xor    r8d,r8d
  408931:	mov    rcx,rax
  408934:	mov    rbx,rax
  408937:	call   0x4031d0
  40893c:	mov    rcx,QWORD PTR [rip+0x3a705]        # 0x443048
  408943:	lea    rdx,[rip+0x2a1d7]        # 0x432b21
  40894a:	call   0x401600
  40894f:	mov    rcx,rdi
  408952:	call   0x402160
  408957:	mov    DWORD PTR [rsp+0x20],0x0
  40895f:	mov    r9d,eax
  408962:	mov    r8,r12
  408965:	mov    rdx,rdi
  408968:	mov    rcx,rbx
  40896b:	call   0x40db20
  408970:	test   eax,eax
  408972:	js     0x40955d
  408978:	mov    rax,QWORD PTR [rip+0x35161]        # 0x43dae0
  40897f:	mov    rbp,QWORD PTR [rip+0x3514a]        # 0x43dad0
  408986:	lea    r9,[rsp+0x170]
  40898e:	mov    edx,DWORD PTR [rip+0x3a6a4]        # 0x443038
  408994:	mov    rcx,rbx
  408997:	mov    eax,DWORD PTR [rax]
  408999:	mov    r8,QWORD PTR [rbp+0x0]
  40899d:	mov    QWORD PTR [rsp+0x170],rax
  4089a5:	call   0x40db88
  4089aa:	test   eax,eax
  4089ac:	js     0x408b02
  4089b2:	mov    r9,QWORD PTR [rip+0x3d5cf]        # 0x445f88
  4089b9:	mov    r8,QWORD PTR [rsp+0x170]
  4089c1:	mov    edx,0x1
  4089c6:	mov    rcx,QWORD PTR [rbp+0x0]
  4089ca:	call   0x42dee0
  4089cf:	mov    rcx,rdi
  4089d2:	call   0x40db90
  4089d7:	mov    rcx,rbx
  4089da:	call   0x40db90
  4089df:	mov    rcx,QWORD PTR [rsp+0x80]
  4089e7:	call   0x40ddc8
  4089ec:	mov    rcx,r12
  4089ef:	call   0x40ddc8
  4089f4:	jmp    0x408881
  4089f9:	call   rsi
  4089fb:	lea    rdx,[rip+0x2acbb]        # 0x4336bd
  408a02:	lea    rcx,[rax+0x60]
  408a06:	call   0x401600
  408a0b:	mov    DWORD PTR [rsp+0xd8],0x1
  408a16:	jmp    0x408500
  408a1b:	mov    rcx,rbp
  408a1e:	call   0x404b30
  408a23:	jmp    0x408881
  408a28:	mov    rcx,QWORD PTR [rip+0x3a619]        # 0x443048
  408a2f:	lea    rdx,[rip+0x2acaa]        # 0x4336e0
  408a36:	call   0x401600
  408a3b:	mov    rcx,rbp
  408a3e:	call   0x40a7b0
  408a43:	mov    rdx,rbp
  408a46:	mov    ecx,0x1
  408a4b:	mov    r12,rax
  408a4e:	call   0x40a870
  408a53:	lea    rcx,[rsp+0x80]
  408a5b:	mov    r9,rbp
  408a5e:	mov    rbx,rax
  408a61:	xor    r8d,r8d
  408a64:	mov    rdx,rax
  408a67:	call   0x401660
  408a6c:	mov    rdx,rbx
  408a6f:	mov    rcx,rax
  408a72:	mov    rdi,rax
  408a75:	call   0x40db98
  408a7a:	mov    rdx,QWORD PTR [rip+0x3a5c7]        # 0x443048
  408a81:	xor    r8d,r8d
  408a84:	mov    rcx,rdi
  408a87:	call   0x4031d0
  408a8c:	mov    rcx,QWORD PTR [rip+0x3a5b5]        # 0x443048
  408a93:	lea    rdx,[rip+0x2a087]        # 0x432b21
  408a9a:	call   0x401600
  408a9f:	mov    rcx,rbx
  408aa2:	call   0x402160
  408aa7:	mov    DWORD PTR [rsp+0x20],0x0
  408aaf:	mov    r9d,eax
  408ab2:	mov    r8,r12
  408ab5:	mov    rdx,rbx
  408ab8:	mov    rcx,rdi
  408abb:	call   0x40db20
  408ac0:	test   eax,eax
  408ac2:	js     0x40955d
  408ac8:	mov    rax,QWORD PTR [rip+0x35011]        # 0x43dae0
  408acf:	mov    rbp,QWORD PTR [rip+0x34ffa]        # 0x43dad0
  408ad6:	lea    r9,[rsp+0x170]
  408ade:	mov    edx,DWORD PTR [rip+0x3a554]        # 0x443038
  408ae4:	mov    rcx,rdi
  408ae7:	mov    eax,DWORD PTR [rax]
  408ae9:	mov    r8,QWORD PTR [rbp+0x0]
  408aed:	mov    QWORD PTR [rsp+0x170],rax
  408af5:	call   0x40db88
  408afa:	test   eax,eax
  408afc:	jns    0x4089b2
  408b02:	mov    ecx,eax
  408b04:	call   0x40dc88
  408b09:	mov    rbx,rax
  408b0c:	call   rsi
  408b0e:	lea    rdx,[rip+0x2a034]        # 0x432b49
  408b15:	lea    rcx,[rax+0x60]
  408b19:	mov    r8,rbx
  408b1c:	call   0x401600
  408b21:	mov    ecx,0x1
  408b26:	call   0x42df60
  408b2b:	mov    rcx,QWORD PTR [rip+0x3a516]        # 0x443048
  408b32:	lea    rdx,[rip+0x2abf2]        # 0x43372b
  408b39:	call   0x401600
  408b3e:	mov    rcx,rbp
  408b41:	call   0x40a7b0
  408b46:	mov    rdx,rbp
  408b49:	mov    ecx,0x1
  408b4e:	mov    r12,rax
  408b51:	call   0x40a870
  408b56:	lea    rdx,[rsp+0x70]
  408b5b:	xor    ecx,ecx
  408b5d:	mov    r8,rbp
  408b60:	mov    rdi,rax
  408b63:	call   0x40a4d0
  408b68:	test   rax,rax
  408b6b:	je     0x409113
  408b71:	cmp    QWORD PTR [rsp+0x70],0x1
  408b77:	ja     0x4095af
  408b7d:	mov    rdx,QWORD PTR [rax]
  408b80:	mov    rcx,rax
  408b83:	mov    rax,QWORD PTR [rip+0x34e86]        # 0x43da10
  408b8a:	mov    QWORD PTR [rsp+0x58],rdx
  408b8f:	call   QWORD PTR [rax]
  408b91:	lea    r13,[rsp+0x60]
  408b96:	mov    r8,rbp
  408b99:	xor    ecx,ecx
  408b9b:	xor    ebx,ebx
  408b9d:	mov    rdx,r13
  408ba0:	call   0x40a2c0
  408ba5:	mov    rbp,rax
  408ba8:	call   0x411190
  408bad:	xor    r9d,r9d
  408bb0:	cmp    QWORD PTR [rsp+0x60],0x0
  408bb6:	mov    r14,rax
  408bb9:	je     0x408bf3
  408bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  408bc0:	lea    r15,[rbp+r9*8+0x0]
  408bc5:	mov    rcx,QWORD PTR [rsp+0x58]
  408bca:	mov    r8,r14
  408bcd:	mov    rdx,QWORD PTR [r15]
  408bd0:	call   0x40dc28
  408bd5:	test   eax,eax
  408bd7:	js     0x4093c1
  408bdd:	mov    rcx,QWORD PTR [r15]
  408be0:	call   0x40db90
  408be5:	lea    r9d,[rbx+0x1]
  408be9:	cmp    r9,QWORD PTR [rsp+0x60]
  408bee:	mov    rbx,r9
  408bf1:	jb     0x408bc0
  408bf3:	mov    rax,QWORD PTR [rip+0x34e16]        # 0x43da10
  408bfa:	mov    rcx,rbp
  408bfd:	call   QWORD PTR [rax]
  408bff:	call   0x4111c0
  408c04:	mov    rcx,QWORD PTR [rsp+0x58]
  408c09:	mov    rdx,rax
  408c0c:	call   0x40dc10
  408c11:	test   eax,eax
  408c13:	js     0x40970a
  408c19:	call   rsi
  408c1b:	lea    rdx,[rip+0x2ab69]        # 0x43378b
  408c22:	lea    rcx,[rax+0x60]
  408c26:	call   0x401600
  408c2b:	call   0x411d50
  408c30:	mov    rcx,QWORD PTR [rsp+0x58]
  408c35:	mov    rdx,rax
  408c38:	call   0x40dc20
  408c3d:	test   eax,eax
  408c3f:	js     0x409620
  408c45:	mov    rcx,QWORD PTR [rsp+0x58]
  408c4a:	mov    edx,0x2
  408c4f:	call   0x40dc08
  408c54:	test   eax,eax
  408c56:	js     0x4095f7
  408c5c:	test   rdi,rdi
  408c5f:	je     0x408cca
  408c61:	mov    rax,QWORD PTR [rip+0x34e78]        # 0x43dae0
  408c68:	mov    rbx,QWORD PTR [rip+0x34e61]        # 0x43dad0
  408c6f:	xor    r9d,r9d
  408c72:	mov    r8,r13
  408c75:	mov    rcx,rdi
  408c78:	mov    eax,DWORD PTR [rax]
  408c7a:	mov    rdx,QWORD PTR [rbx]
  408c7d:	mov    QWORD PTR [rsp+0x60],rax
  408c82:	call   0x40db50
  408c87:	test   eax,eax
  408c89:	js     0x408cca
  408c8b:	mov    r8,QWORD PTR [rsp+0x60]
  408c90:	mov    rdx,QWORD PTR [rbx]
  408c93:	mov    rcx,QWORD PTR [rsp+0x58]
  408c98:	call   0x40dc30
  408c9d:	test   eax,eax
  408c9f:	jns    0x408cca
  408ca1:	mov    ecx,eax
  408ca3:	call   0x40dc88
  408ca8:	mov    rbx,rax
  408cab:	call   rsi
  408cad:	lea    rdx,[rip+0x29730]        # 0x4323e4
  408cb4:	lea    rcx,[rax+0x60]
  408cb8:	mov    r8,rbx
  408cbb:	call   0x401600
  408cc0:	mov    ecx,0x1
  408cc5:	call   0x42df60
  408cca:	lea    rbx,[rsp+0x170]
  408cd2:	lea    rdx,[rsp+0x80]
  408cda:	mov    QWORD PTR [rsp+0x80],0x10
  408ce6:	mov    rcx,rbx
  408ce9:	call   0x411270
  408cee:	mov    r8,QWORD PTR [rsp+0x80]
  408cf6:	mov    rcx,QWORD PTR [rsp+0x58]
  408cfb:	mov    rdx,rbx
  408cfe:	call   0x40dc18
  408d03:	test   eax,eax
  408d05:	js     0x409649
  408d0b:	mov    rcx,QWORD PTR [rip+0x3a336]        # 0x443048
  408d12:	lea    rdx,[rip+0x29d39]        # 0x432a52
  408d19:	mov    rbx,QWORD PTR [rsp+0x58]
  408d1e:	call   0x401600
  408d23:	mov    rcx,rdi
  408d26:	call   0x402160
  408d2b:	mov    DWORD PTR [rsp+0x20],0x0
  408d33:	mov    r9d,eax
  408d36:	mov    r8,r12
  408d39:	mov    rdx,rdi
  408d3c:	mov    rcx,rbx
  408d3f:	call   0x40dc38
  408d44:	test   eax,eax
  408d46:	js     0x40975c
  408d4c:	mov    rdx,QWORD PTR [rip+0x3a2f5]        # 0x443048
  408d53:	mov    rcx,rbx
  408d56:	call   0x4021e0
  408d5b:	mov    rcx,r12
  408d5e:	call   0x40ddc8
  408d63:	mov    rcx,rbx
  408d66:	call   0x40dc78
  408d6b:	mov    rcx,rdi
  408d6e:	call   0x40db90
  408d73:	jmp    0x408881
  408d78:	mov    rcx,QWORD PTR [rip+0x3a2c9]        # 0x443048
  408d7f:	lea    rdx,[rip+0x2a95a]        # 0x4336e0
  408d86:	call   0x401600
  408d8b:	mov    rcx,rbp
  408d8e:	call   0x40a7b0
  408d93:	mov    rdx,rbp
  408d96:	mov    ecx,0x1
  408d9b:	mov    r12,rax
  408d9e:	call   0x40a870
  408da3:	mov    rdx,rbp
  408da6:	mov    ecx,0x1
  408dab:	mov    rdi,rax
  408dae:	call   0x40a470
  408db3:	mov    rbx,rax
  408db6:	call   rsi
  408db8:	lea    rdx,[rip+0x2aa16]        # 0x4337d5
  408dbf:	lea    rcx,[rax+0x60]
  408dc3:	call   0x401600
  408dc8:	call   0x411160
  408dcd:	mov    rcx,rbx
  408dd0:	mov    rdx,rax
  408dd3:	call   0x40db18
  408dd8:	test   eax,eax
  408dda:	js     0x409733
  408de0:	call   0x4111f0
  408de5:	mov    rcx,rbx
  408de8:	mov    rdx,rax
  408deb:	call   0x40daf0
  408df0:	test   eax,eax
  408df2:	js     0x409586
  408df8:	call   rsi
  408dfa:	lea    rdx,[rip+0x29d20]        # 0x432b21
  408e01:	lea    rcx,[rax+0x60]
  408e05:	call   0x401600
  408e0a:	mov    rcx,rdi
  408e0d:	call   0x402160
  408e12:	mov    DWORD PTR [rsp+0x20],0x0
  408e1a:	mov    r9d,eax
  408e1d:	mov    r8,r12
  408e20:	mov    rdx,rdi
  408e23:	mov    rcx,rbx
  408e26:	call   0x40db20
  408e2b:	test   eax,eax
  408e2d:	js     0x40955d
  408e33:	mov    rax,QWORD PTR [rip+0x34ca6]        # 0x43dae0
  408e3a:	mov    rdi,QWORD PTR [rip+0x34c8f]        # 0x43dad0
  408e41:	lea    r9,[rsp+0x170]
  408e49:	mov    edx,DWORD PTR [rip+0x3a1e9]        # 0x443038
  408e4f:	mov    rcx,rbx
  408e52:	mov    eax,DWORD PTR [rax]
  408e54:	mov    r8,QWORD PTR [rdi]
  408e57:	mov    QWORD PTR [rsp+0x170],rax
  408e5f:	call   0x40db88
  408e64:	test   eax,eax
  408e66:	js     0x408b02
  408e6c:	mov    rcx,QWORD PTR [rdi]
  408e6f:	mov    r9,QWORD PTR [rip+0x3d112]        # 0x445f88
  408e76:	mov    edx,0x1
  408e7b:	mov    r8,QWORD PTR [rsp+0x170]
  408e83:	call   0x42dee0
  408e88:	mov    rcx,rbx
  408e8b:	call   0x40db90
  408e90:	jmp    0x408881
  408e95:	lea    rdx,[rbp+0x60]
  408e99:	lea    rcx,[rbp+0x58]
  408e9d:	call   0x403280
  408ea2:	mov    rcx,rbp
  408ea5:	mov    rbx,rax
  408ea8:	mov    rdx,rax
  408eab:	call   0x403910
  408eb0:	mov    rcx,rbx
  408eb3:	call   0x40da88
  408eb8:	jmp    0x408881
  408ebd:	mov    rdx,rbp
  408ec0:	mov    ecx,0x1
  408ec5:	call   0x407ef0
  408eca:	jmp    0x408881
  408ecf:	mov    rax,QWORD PTR [rbx+0x78]
  408ed3:	mov    rbx,QWORD PTR [rax+0xe8]
  408eda:	call   rsi
  408edc:	lea    rdx,[rip+0x2986c]        # 0x43274f
  408ee3:	lea    rcx,[rax+0x60]
  408ee7:	mov    r8,rbx
  408eea:	call   0x401600
  408eef:	mov    ecx,0x1
  408ef4:	call   0x42df60
  408ef9:	mov    rax,QWORD PTR [rbx+0x78]
  408efd:	lea    rdx,[rip+0x2a75a]        # 0x43365e
  408f04:	mov    rcx,QWORD PTR [rax+0x1a80]
  408f0b:	call   rdi
  408f0d:	test   eax,eax
  408f0f:	jne    0x4090c8
  408f15:	mov    DWORD PTR [rip+0x3a121],0x6        # 0x443040
  408f1f:	mov    rdx,QWORD PTR [rbx+0x78]
  408f23:	jmp    0x4082cc
  408f28:	mov    rcx,QWORD PTR [rip+0x3d061]        # 0x445f90
  408f2f:	lea    rdx,[rsp+0x170]
  408f37:	call   0x415540
  408f3c:	test   rax,rax
  408f3f:	mov    rdi,rax
  408f42:	je     0x40969c
  408f48:	mov    rax,QWORD PTR [rsp+0x170]
  408f50:	mov    rcx,rdi
  408f53:	xor    r9d,r9d
  408f56:	xor    r8d,r8d
  408f59:	mov    BYTE PTR [rdi+rax*1],0x0
  408f5d:	mov    rax,QWORD PTR [rbx+0x78]
  408f61:	mov    rdx,QWORD PTR [rax+0x630]
  408f68:	mov    QWORD PTR [rsp+0x38],rdx
  408f6d:	mov    rdx,QWORD PTR [rax+0x5c8]
  408f74:	mov    QWORD PTR [rsp+0x30],rdx
  408f79:	mov    rax,QWORD PTR [rax+0x698]
  408f80:	mov    edx,DWORD PTR [rsp+0x170]
  408f87:	mov    DWORD PTR [rsp+0x20],0x0
  408f8f:	mov    QWORD PTR [rsp+0x28],rax
  408f94:	call   0x402380
  408f99:	mov    rcx,rdi
  408f9c:	call   0x42df08
  408fa1:	jmp    0x408881
  408fa6:	mov    rcx,QWORD PTR [rip+0x3cfe3]        # 0x445f90
  408fad:	lea    rdx,[rsp+0x80]
  408fb5:	mov    QWORD PTR [rsp+0x170],0x0
  408fc1:	call   0x415540
  408fc6:	test   rax,rax
  408fc9:	mov    rdi,rax
  408fcc:	je     0x40979a
  408fd2:	mov    rcx,QWORD PTR [rsp+0x100]
  408fda:	test   rcx,rcx
  408fdd:	je     0x409325
  408fe3:	lea    rdx,[rip+0x29e4d]        # 0x432e37
  408fea:	call   0x42df30
  408fef:	test   rax,rax
  408ff2:	mov    r12,rax
  408ff5:	je     0x4097ee
  408ffb:	mov    rax,QWORD PTR [rsp+0x80]
  409003:	lea    rdx,[rsp+0x170]
  40900b:	mov    rcx,r12
  40900e:	mov    BYTE PTR [rdi+rax*1],0x0
  409012:	call   0x415540
  409017:	test   rax,rax
  40901a:	mov    rbp,rax
  40901d:	je     0x4097d2
  409023:	mov    rax,QWORD PTR [rsp+0x170]
  40902b:	mov    rcx,r12
  40902e:	mov    BYTE PTR [rbp+rax*1+0x0],0x0
  409033:	call   0x42df58
  409038:	mov    rdx,QWORD PTR [rbx+0x78]
  40903c:	mov    r9d,DWORD PTR [rsp+0x170]
  409044:	mov    r8,rbp
  409047:	mov    rcx,rdi
  40904a:	mov    rax,QWORD PTR [rdx+0x630]
  409051:	mov    QWORD PTR [rsp+0x38],rax
  409056:	mov    rax,QWORD PTR [rdx+0x5c8]
  40905d:	mov    QWORD PTR [rsp+0x30],rax
  409062:	mov    rax,QWORD PTR [rdx+0x698]
  409069:	mov    edx,DWORD PTR [rsp+0x80]
  409070:	mov    QWORD PTR [rsp+0x28],rax
  409075:	xor    eax,eax
  409077:	cmp    QWORD PTR [rsp+0x100],0x0
  409080:	sete   al
  409083:	mov    DWORD PTR [rsp+0x20],eax
  409087:	call   0x402380
  40908c:	jmp    0x408881
  409091:	mov    rcx,rbp
  409094:	call   0x405090
  409099:	jmp    0x408881
  40909e:	mov    rdx,rbp
  4090a1:	xor    ecx,ecx
  4090a3:	call   0x407ef0
  4090a8:	jmp    0x408881
  4090ad:	mov    rdx,QWORD PTR [rip+0x3ced4]        # 0x445f88
  4090b4:	mov    rcx,QWORD PTR [rip+0x3ced5]        # 0x445f90
  4090bb:	mov    r8,rbp
  4090be:	call   0x40b360
  4090c3:	jmp    0x408881
  4090c8:	mov    rax,QWORD PTR [rbx+0x78]
  4090cc:	lea    rdx,[rip+0x2a592]        # 0x433665
  4090d3:	mov    rcx,QWORD PTR [rax+0x1a80]
  4090da:	call   rdi
  4090dc:	test   eax,eax
  4090de:	jne    0x4092e9
  4090e4:	mov    DWORD PTR [rip+0x39f52],0x9        # 0x443040
  4090ee:	mov    rdx,QWORD PTR [rbx+0x78]
  4090f2:	jmp    0x4082cc
  4090f7:	mov    rcx,rbp
  4090fa:	call   0x406cf0
  4090ff:	jmp    0x408881
  409104:	mov    rdx,rbp
  409107:	xor    ecx,ecx
  409109:	call   0x407e00
  40910e:	jmp    0x408881
  409113:	lea    rcx,[rsp+0x58]
  409118:	call   0x40dc50
  40911d:	test   eax,eax
  40911f:	jns    0x408b91
  409125:	mov    ecx,eax
  409127:	call   0x40dc88
  40912c:	mov    rbx,rax
  40912f:	call   rsi
  409131:	lea    rdx,[rip+0x29bd6]        # 0x432d0e
  409138:	lea    rcx,[rax+0x60]
  40913c:	mov    r8,rbx
  40913f:	call   0x401600
  409144:	mov    ecx,0x1
  409149:	call   0x42df60
  40914e:	xor    ecx,ecx
  409150:	mov    rdx,rbp
  409153:	call   0x40a470
  409158:	test   rax,rax
  40915b:	mov    QWORD PTR [rsp+0x48],rax
  409160:	je     0x409415
  409166:	cmp    DWORD PTR [rip+0x39ed3],0x0        # 0x443040
  40916d:	mov    QWORD PTR [rsp+0x58],0x20
  409176:	jne    0x409182
  409178:	mov    DWORD PTR [rip+0x39ebe],0x3        # 0x443040
  409182:	lea    rbx,[rsp+0x80]
  40918a:	mov    edx,DWORD PTR [rip+0x39eb0]        # 0x443040
  409190:	mov    rcx,QWORD PTR [rsp+0x48]
  409195:	lea    r9,[rsp+0x58]
  40919a:	mov    r8,rbx
  40919d:	call   0x40db70
  4091a2:	test   eax,eax
  4091a4:	js     0x40983e
  4091aa:	mov    QWORD PTR [rsp+0x70],rbx
  4091af:	mov    rax,QWORD PTR [rsp+0x58]
  4091b4:	lea    rbx,[rsp+0x170]
  4091bc:	lea    rcx,[rsp+0x70]
  4091c1:	lea    r8,[rsp+0x50]
  4091c6:	mov    QWORD PTR [rsp+0x50],0x80
  4091cf:	mov    rdx,rbx
  4091d2:	mov    DWORD PTR [rsp+0x78],eax
  4091d6:	call   0x40e090
  4091db:	test   eax,eax
  4091dd:	js     0x409815
  4091e3:	mov    rdx,QWORD PTR [rip+0x3cd9e]        # 0x445f88
  4091ea:	mov    rcx,rbx
  4091ed:	call   0x42df18
  4091f2:	mov    rdx,QWORD PTR [rip+0x3cd8f]        # 0x445f88
  4091f9:	mov    ecx,0xa
  4091fe:	call   0x42df20
  409203:	mov    rcx,QWORD PTR [rsp+0x48]
  409208:	call   0x40db90
  40920d:	jmp    0x408881
  409212:	xor    ecx,ecx
  409214:	mov    rdx,rbp
  409217:	call   0x402c20
  40921c:	test   rax,rax
  40921f:	mov    rbx,rax
  409222:	je     0x4097b6
  409228:	mov    eax,DWORD PTR [rip+0x39e12]        # 0x443040
  40922e:	test   eax,eax
  409230:	je     0x409381
  409236:	cmp    eax,0x3
  409239:	je     0x409381
  40923f:	cmp    eax,0x6
  409242:	mov    edx,0x1
  409247:	jne    0x4096ee
  40924d:	lea    rdi,[rsp+0x80]
  409255:	lea    r9,[rsp+0x60]
  40925a:	mov    rcx,rbx
  40925d:	mov    QWORD PTR [rsp+0x60],0x40
  409266:	mov    r8,rdi
  409269:	call   0x40dd68
  40926e:	test   eax,eax
  409270:	js     0x40983e
  409276:	mov    QWORD PTR [rsp+0x70],rdi
  40927b:	mov    rax,QWORD PTR [rsp+0x60]
  409280:	lea    rdi,[rsp+0x170]
  409288:	lea    rcx,[rsp+0x70]
  40928d:	lea    r8,[rsp+0x58]
  409292:	mov    QWORD PTR [rsp+0x58],0x100
  40929b:	mov    rdx,rdi
  40929e:	mov    DWORD PTR [rsp+0x78],eax
  4092a2:	call   0x40e090
  4092a7:	test   eax,eax
  4092a9:	js     0x409815
  4092af:	mov    rdx,QWORD PTR [rip+0x3ccd2]        # 0x445f88
  4092b6:	mov    rcx,rdi
  4092b9:	call   0x42df18
  4092be:	mov    rdx,QWORD PTR [rip+0x3ccc3]        # 0x445f88
  4092c5:	mov    ecx,0xa
  4092ca:	call   0x42df20
  4092cf:	mov    rcx,rbx
  4092d2:	call   0x40dd78
  4092d7:	jmp    0x408881
  4092dc:	mov    rcx,rbp
  4092df:	call   0x406360
  4092e4:	jmp    0x408881
  4092e9:	mov    rax,QWORD PTR [rbx+0x78]
  4092ed:	lea    rdx,[rip+0x2a378]        # 0x43366c
  4092f4:	mov    rcx,QWORD PTR [rax+0x1a80]
  4092fb:	call   rdi
  4092fd:	test   eax,eax
  4092ff:	jne    0x409388
  409305:	mov    DWORD PTR [rip+0x39d31],0x7        # 0x443040
  40930f:	mov    rdx,QWORD PTR [rbx+0x78]
  409313:	jmp    0x4082cc
  409318:	mov    rcx,rbp
  40931b:	call   0x406f10
  409320:	jmp    0x408881
  409325:	xor    ebp,ebp
  409327:	jmp    0x409038
  40932c:	mov    rcx,QWORD PTR [rip+0x3cc55]        # 0x445f88
  409333:	mov    r8,rbp
  409336:	mov    edx,0x1
  40933b:	call   0x40b560
  409340:	jmp    0x408881
  409345:	mov    rcx,QWORD PTR [rip+0x3cc3c]        # 0x445f88
  40934c:	mov    r8,rbp
  40934f:	xor    edx,edx
  409351:	call   0x40b560
  409356:	jmp    0x408881
  40935b:	call   0x4048f0
  409360:	jmp    0x408881
  409365:	mov    edx,DWORD PTR [rax+0x13f8]
  40936b:	mov    rcx,rbp
  40936e:	shr    edx,0x5
  409371:	xor    edx,0x1
  409374:	and    edx,0x1
  409377:	call   0x407a10
  40937c:	jmp    0x408881
  409381:	xor    edx,edx
  409383:	jmp    0x40924d
  409388:	mov    rax,QWORD PTR [rbx+0x78]
  40938c:	lea    rdx,[rip+0x2a2e0]        # 0x433673
  409393:	mov    rcx,QWORD PTR [rax+0x1a80]
  40939a:	call   rdi
  40939c:	test   eax,eax
  40939e:	jne    0x4094c8
  4093a4:	mov    DWORD PTR [rip+0x39c92],0x8        # 0x443040
  4093ae:	mov    rdx,QWORD PTR [rbx+0x78]
  4093b2:	jmp    0x4082cc
  4093b7:	call   0x407970
  4093bc:	jmp    0x408881
  4093c1:	mov    ecx,eax
  4093c3:	call   0x40dc88
  4093c8:	mov    rbx,rax
  4093cb:	call   rsi
  4093cd:	lea    rdx,[rip+0x2a395]        # 0x433769
  4093d4:	lea    rcx,[rax+0x60]
  4093d8:	mov    r8,rbx
  4093db:	call   0x401600
  4093e0:	mov    ecx,0x1
  4093e5:	call   0x42df60
  4093ea:	mov    rcx,rbp
  4093ed:	call   0x406270
  4093f2:	jmp    0x408881
  4093f7:	call   0x407c30
  4093fc:	jmp    0x408881
  409401:	call   0x403f20
  409406:	jmp    0x408881
  40940b:	call   0x404a10
  409410:	jmp    0x408881
  409415:	mov    rcx,QWORD PTR [rip+0x3cb74]        # 0x445f90
  40941c:	lea    rdx,[rsp+0x50]
  409421:	call   0x415540
  409426:	mov    rdx,QWORD PTR [rsp+0x50]
  40942b:	test   rax,rax
  40942e:	mov    QWORD PTR [rsp+0x60],rax
  409433:	mov    DWORD PTR [rsp+0x68],edx
  409437:	je     0x4096cf
  40943d:	mov    r9d,DWORD PTR [rip+0x39bf8]        # 0x44303c
  409444:	lea    rdx,[rsp+0x44]
  409449:	lea    rcx,[rsp+0x48]
  40944e:	lea    r8,[rsp+0x60]
  409453:	mov    DWORD PTR [rsp+0x20],0x1
  40945b:	mov    DWORD PTR [rsp+0x44],0x1
  409463:	call   0x40db38
  409468:	cmp    eax,0xffffffcd
  40946b:	mov    ebx,eax
  40946d:	je     0x409511
  409473:	test   eax,eax
  409475:	js     0x40952a
  40947b:	cmp    DWORD PTR [rsp+0x44],0x0
  409480:	je     0x4096b8
  409486:	mov    rcx,QWORD PTR [rsp+0x60]
  40948b:	call   0x42df08
  409490:	jmp    0x409166
  409495:	call   0x403c70
  40949a:	jmp    0x408881
  40949f:	mov    ecx,eax
  4094a1:	call   0x40dc88
  4094a6:	mov    rbx,rax
  4094a9:	call   rsi
  4094ab:	lea    rdx,[rip+0x2a1fa]        # 0x4336ac
  4094b2:	lea    rcx,[rax+0x60]
  4094b6:	mov    r8,rbx
  4094b9:	call   0x401600
  4094be:	mov    ecx,0x1
  4094c3:	call   0x42df60
  4094c8:	mov    rax,QWORD PTR [rbx+0x78]
  4094cc:	lea    rdx,[rip+0x2a1a7]        # 0x43367a
  4094d3:	mov    rcx,QWORD PTR [rax+0x1a80]
  4094da:	call   rdi
  4094dc:	test   eax,eax
  4094de:	jne    0x409672
  4094e4:	mov    DWORD PTR [rip+0x39b52],0x4        # 0x443040
  4094ee:	mov    rdx,QWORD PTR [rbx+0x78]
  4094f2:	jmp    0x4082cc
  4094f7:	call   0x4046b0
  4094fc:	jmp    0x408881
  409501:	mov    rax,QWORD PTR [rbx+0x78]
  409505:	mov    rbx,QWORD PTR [rax+0x150]
  40950c:	jmp    0x408eda
  409511:	mov    edi,DWORD PTR [rsp+0x44]
  409515:	call   rsi
  409517:	lea    rdx,[rip+0x2a30a]        # 0x433828
  40951e:	lea    rcx,[rax+0x60]
  409522:	mov    r8d,edi
  409525:	call   0x401600
  40952a:	mov    rcx,QWORD PTR [rsp+0x60]
  40952f:	call   0x42df08
  409534:	mov    ecx,ebx
  409536:	call   0x40dc88
  40953b:	mov    rbx,rax
  40953e:	call   rsi
  409540:	lea    rdx,[rip+0x29628]        # 0x432b6f
  409547:	lea    rcx,[rax+0x60]
  40954b:	mov    r8,rbx
  40954e:	call   0x401600
  409553:	mov    ecx,0x1
  409558:	call   0x42df60
  40955d:	mov    ecx,eax
  40955f:	call   0x40dc88
  409564:	mov    rbx,rax
  409567:	call   rsi
  409569:	lea    rdx,[rip+0x295cb]        # 0x432b3b
  409570:	lea    rcx,[rax+0x60]
  409574:	mov    r8,rbx
  409577:	call   0x401600
  40957c:	mov    ecx,0x1
  409581:	call   0x42df60
  409586:	mov    ecx,eax
  409588:	call   0x40dc88
  40958d:	mov    rbx,rax
  409590:	call   rsi
  409592:	lea    rdx,[rip+0x28cac]        # 0x432245
  409599:	lea    rcx,[rax+0x60]
  40959d:	mov    r8,rbx
  4095a0:	call   0x401600
  4095a5:	mov    ecx,0x1
  4095aa:	call   0x42df60
  4095af:	call   rsi
  4095b1:	lea    rdx,[rip+0x2a190]        # 0x433748
  4095b8:	lea    rcx,[rax+0x60]
  4095bc:	call   0x401600
  4095c1:	mov    ecx,0x1
  4095c6:	call   0x42df60
  4095cb:	mov    r8d,DWORD PTR [rax+0x13f8]
  4095d2:	mov    rdx,QWORD PTR [rax+0x698]
  4095d9:	mov    rcx,rbp
  4095dc:	shr    r8d,0x5
  4095e0:	xor    r8d,0x1
  4095e4:	and    r8d,0x1
  4095e8:	call   0x405370
  4095ed:	xor    edx,edx
  4095ef:	mov    rcx,rbp
  4095f2:	call   0x405e60
  4095f7:	mov    ecx,eax
  4095f9:	call   0x40dc88
  4095fe:	mov    rbx,rax
  409601:	call   rsi
  409603:	lea    rdx,[rip+0x28df4]        # 0x4323fe
  40960a:	lea    rcx,[rax+0x60]
  40960e:	mov    r8,rbx
  409611:	call   0x401600
  409616:	mov    ecx,0x1
  40961b:	call   0x42df60
  409620:	mov    ecx,eax
  409622:	call   0x40dc88
  409627:	mov    rbx,rax
  40962a:	call   rsi
  40962c:	lea    rdx,[rip+0x2a167]        # 0x43379a
  409633:	lea    rcx,[rax+0x60]
  409637:	mov    r8,rbx
  40963a:	call   0x401600
  40963f:	mov    ecx,0x1
  409644:	call   0x42df60
  409649:	mov    ecx,eax
  40964b:	call   0x40dc88
  409650:	mov    rbx,rax
  409653:	call   rsi
  409655:	lea    rdx,[rip+0x2a14f]        # 0x4337ab
  40965c:	lea    rcx,[rax+0x60]
  409660:	mov    r8,rbx
  409663:	call   0x401600
  409668:	mov    ecx,0x1
  40966d:	call   0x42df60
  409672:	mov    rax,QWORD PTR [rbx+0x78]
  409676:	mov    rbx,QWORD PTR [rax+0x1a80]
  40967d:	call   rsi
  40967f:	lea    rdx,[rip+0x29ffb]        # 0x433681
  409686:	lea    rcx,[rax+0x60]
  40968a:	mov    r8,rbx
  40968d:	call   0x401600
  409692:	mov    ecx,0x1
  409697:	call   0x42df60
  40969c:	call   rsi
  40969e:	lea    rdx,[rip+0x2a14d]        # 0x4337f2
  4096a5:	lea    rcx,[rax+0x60]
  4096a9:	call   0x401600
  4096ae:	mov    ecx,0x1
  4096b3:	call   0x42df60
  4096b8:	call   rsi
  4096ba:	lea    rdx,[rip+0x2a183]        # 0x433844
  4096c1:	lea    rcx,[rax+0x60]
  4096c5:	call   0x401600
  4096ca:	jmp    0x409486
  4096cf:	cmp    QWORD PTR [rip+0x3c8b9],0x0        # 0x445f90
  4096d7:	lea    rbx,[rip+0x29002]        # 0x4326e0
  4096de:	lea    rax,[rip+0x28ff6]        # 0x4326db
  4096e5:	cmovne rbx,rax
  4096e9:	jmp    0x408eda
  4096ee:	call   rsi
  4096f0:	lea    rdx,[rip+0x2a181]        # 0x433878
  4096f7:	lea    rcx,[rax+0x60]
  4096fb:	call   0x401600
  409700:	mov    ecx,0x1
  409705:	call   0x42df60
  40970a:	mov    ecx,eax
  40970c:	call   0x40dc88
  409711:	mov    rbx,rax
  409714:	call   rsi
  409716:	lea    rdx,[rip+0x2a05d]        # 0x43377a
  40971d:	lea    rcx,[rax+0x60]
  409721:	mov    r8,rbx
  409724:	call   0x401600
  409729:	mov    ecx,0x1
  40972e:	call   0x42df60
  409733:	mov    ecx,eax
  409735:	call   0x40dc88
  40973a:	mov    rbx,rax
  40973d:	call   rsi
  40973f:	lea    rdx,[rip+0x28a69]        # 0x4321af
  409746:	lea    rcx,[rax+0x60]
  40974a:	mov    r8,rbx
  40974d:	call   0x401600
  409752:	mov    ecx,0x1
  409757:	call   0x42df60
  40975c:	mov    ecx,eax
  40975e:	call   0x40dc88
  409763:	mov    rbx,rax
  409766:	call   rsi
  409768:	lea    rdx,[rip+0x2a050]        # 0x4337bf
  40976f:	lea    rcx,[rax+0x60]
  409773:	mov    r8,rbx
  409776:	call   0x401600
  40977b:	mov    ecx,0x1
  409780:	call   0x42df60
  409785:	mov    edx,0x1
  40978a:	mov    rcx,rbp
  40978d:	call   0x405e60
  409792:	mov    rcx,rbp
  409795:	call   0x406080
  40979a:	call   rsi
  40979c:	lea    rdx,[rip+0x2a065]        # 0x433808
  4097a3:	lea    rcx,[rax+0x60]
  4097a7:	call   0x401600
  4097ac:	mov    ecx,0x1
  4097b1:	call   0x42df60
  4097b6:	call   rsi
  4097b8:	lea    rdx,[rip+0x29ddd]        # 0x43359c
  4097bf:	lea    rcx,[rax+0x60]
  4097c3:	call   0x401600
  4097c8:	mov    ecx,0x1
  4097cd:	call   0x42df60
  4097d2:	call   rsi
  4097d4:	lea    rdx,[rip+0x29671]        # 0x432e4c
  4097db:	lea    rcx,[rax+0x60]
  4097df:	call   0x401600
  4097e4:	mov    ecx,0x1
  4097e9:	call   0x42df60
  4097ee:	mov    rbx,QWORD PTR [rsp+0x100]
  4097f6:	call   rsi
  4097f8:	lea    rdx,[rip+0x2963a]        # 0x432e39
  4097ff:	lea    rcx,[rax+0x60]
  409803:	mov    r8,rbx
  409806:	call   0x401600
  40980b:	mov    ecx,0x1
  409810:	call   0x42df60
  409815:	mov    ecx,eax
  409817:	call   0x40dc88
  40981c:	mov    rbx,rax
  40981f:	call   rsi
  409821:	lea    rdx,[rip+0x2a039]        # 0x433861
  409828:	lea    rcx,[rax+0x60]
  40982c:	mov    r8,rbx
  40982f:	call   0x401600
  409834:	mov    ecx,0x1
  409839:	call   0x42df60
  40983e:	mov    ecx,eax
  409840:	call   0x40dc88
  409845:	mov    rbx,rax
  409848:	call   rsi
  40984a:	lea    rdx,[rip+0x29c3c]        # 0x43348d
  409851:	lea    rcx,[rax+0x60]
  409855:	mov    r8,rbx
  409858:	call   0x401600
  40985d:	mov    ecx,0x1
  409862:	call   0x42df60
  409867:	nop
  409868:	nop
  409869:	nop
  40986a:	nop
  40986b:	nop
  40986c:	nop
  40986d:	nop
  40986e:	nop
  40986f:	nop
  409870:	sub    rsp,0x38
  409874:	mov    QWORD PTR [rsp+0x50],r8
  409879:	lea    r8,[rsp+0x50]
  40987e:	mov    QWORD PTR [rsp+0x58],r9
  409883:	mov    QWORD PTR [rsp+0x28],r8
  409888:	call   0x4292e0
  40988d:	add    rsp,0x38
  409891:	ret    
  409892:	nop    DWORD PTR [rax+0x0]
  409896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4098a0:	push   rsi
  4098a1:	push   rbx
  4098a2:	sub    rsp,0x38
  4098a6:	mov    rbx,rcx
  4098a9:	lea    rcx,[rsp+0x28]
  4098ae:	call   0x40dda8
  4098b3:	test   eax,eax
  4098b5:	js     0x4098d7
  4098b7:	mov    rcx,QWORD PTR [rsp+0x28]
  4098bc:	xor    r8d,r8d
  4098bf:	mov    rdx,rbx
  4098c2:	call   0x40ddc0
  4098c7:	test   eax,eax
  4098c9:	js     0x409904
  4098cb:	mov    rax,QWORD PTR [rsp+0x28]
  4098d0:	add    rsp,0x38
  4098d4:	pop    rbx
  4098d5:	pop    rsi
  4098d6:	ret    
  4098d7:	mov    ecx,eax
  4098d9:	call   0x40dc88
  4098de:	mov    rbx,rax
  4098e1:	call   QWORD PTR [rip+0x3eef9]        # 0x4487e0
  4098e7:	lea    rdx,[rip+0x29fc2]        # 0x4338b0
  4098ee:	lea    rcx,[rax+0x60]
  4098f2:	mov    r8,rbx
  4098f5:	call   0x409870
  4098fa:	mov    ecx,0x1
  4098ff:	call   0x42df60
  409904:	mov    ecx,eax
  409906:	call   0x40dc88
  40990b:	mov    rsi,rax
  40990e:	call   QWORD PTR [rip+0x3eecc]        # 0x4487e0
  409914:	lea    rdx,[rip+0x29fa7]        # 0x4338c2
  40991b:	lea    rcx,[rax+0x60]
  40991f:	mov    r9,rsi
  409922:	mov    r8,rbx
  409925:	call   0x409870
  40992a:	mov    ecx,0x1
  40992f:	call   0x42df60
  409934:	nop
  409935:	nop
  409936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409940:	push   rdi
  409941:	push   rsi
  409942:	push   rbx
  409943:	sub    rsp,0x20
  409947:	mov    rbx,rcx
  40994a:	call   0x42def0
  40994f:	xor    edx,edx
  409951:	mov    r8d,0x2
  409957:	mov    rcx,rbx
  40995a:	mov    edi,eax
  40995c:	call   0x42def8
  409961:	mov    rcx,rbx
  409964:	call   0x42def0
  409969:	xor    r8d,r8d
  40996c:	mov    esi,eax
  40996e:	mov    edx,edi
  409970:	mov    rcx,rbx
  409973:	call   0x42def8
  409978:	mov    eax,esi
  40997a:	add    rsp,0x20
  40997e:	pop    rbx
  40997f:	pop    rsi
  409980:	pop    rdi
  409981:	ret    
  409982:	nop    DWORD PTR [rax+0x0]
  409986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409990:	sub    rsp,0x38
  409994:	mov    QWORD PTR [rsp+0x50],r8
  409999:	lea    r8,[rsp+0x50]
  40999e:	mov    QWORD PTR [rsp+0x58],r9
  4099a3:	mov    QWORD PTR [rsp+0x28],r8
  4099a8:	call   0x4293e0
  4099ad:	add    rsp,0x38
  4099b1:	ret    
  4099b2:	nop    DWORD PTR [rax+0x0]
  4099b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4099c0:	push   rbp
  4099c1:	push   rdi
  4099c2:	push   rsi
  4099c3:	push   rbx
  4099c4:	sub    rsp,0x38
  4099c8:	test   r9d,r9d
  4099cb:	mov    rbp,rcx
  4099ce:	mov    rdi,rdx
  4099d1:	je     0x409a80
  4099d7:	test   r8d,r8d
  4099da:	lea    rcx,[rsp+0x28]
  4099df:	jne    0x409a34
  4099e1:	mov    r8,rdx
  4099e4:	lea    rdx,[rip+0x29f0b]        # 0x4338f6
  4099eb:	call   0x409990
  4099f0:	mov    rcx,QWORD PTR [rsp+0x28]
  4099f5:	lea    rdx,[rip+0x29f16]        # 0x433912
  4099fc:	xor    ebx,ebx
  4099fe:	call   0x42de08
  409a03:	mov    rcx,rdi
  409a06:	mov    rsi,rax
  409a09:	call   0x42de30
  409a0e:	jmp    0x409a13
  409a10:	add    ebx,0x1
  409a13:	mov    r9d,ebx
  409a16:	cmp    r9,rax
  409a19:	jae    0x409a50
  409a1b:	lea    r9,[rsi+r9*1+0x5]
  409a20:	cmp    BYTE PTR [r9],0x20
  409a24:	jne    0x409a10
  409a26:	mov    BYTE PTR [r9],0x5f
  409a2a:	mov    rcx,rdi
  409a2d:	call   0x42de30
  409a32:	jmp    0x409a10
  409a34:	mov    r9d,r8d
  409a37:	mov    r8,rdx
  409a3a:	lea    rdx,[rip+0x29e98]        # 0x4338d9
  409a41:	call   0x409990
  409a46:	jmp    0x4099f0
  409a48:	nop    DWORD PTR [rax+rax*1+0x0]
  409a50:	mov    r8,QWORD PTR [rsp+0x28]
  409a55:	lea    rdx,[rip+0x29ebb]        # 0x433917
  409a5c:	mov    rcx,rbp
  409a5f:	call   0x409870
  409a64:	mov    rcx,QWORD PTR [rsp+0x28]
  409a69:	call   0x42df08
  409a6e:	nop
  409a6f:	add    rsp,0x38
  409a73:	pop    rbx
  409a74:	pop    rsi
  409a75:	pop    rdi
  409a76:	pop    rbp
  409a77:	ret    
  409a78:	nop    DWORD PTR [rax+rax*1+0x0]
  409a80:	mov    r8,rdx
  409a83:	lea    rdx,[rip+0x29e90]        # 0x43391a
  409a8a:	call   0x409870
  409a8f:	nop
  409a90:	add    rsp,0x38
  409a94:	pop    rbx
  409a95:	pop    rsi
  409a96:	pop    rdi
  409a97:	pop    rbp
  409a98:	ret    
  409a99:	nop    DWORD PTR [rax+0x0]
  409aa0:	push   rdi
  409aa1:	push   rsi
  409aa2:	push   rbx
  409aa3:	sub    rsp,0x20
  409aa7:	test   r8d,r8d
  409aaa:	mov    rdi,rcx
  409aad:	mov    rsi,rdx
  409ab0:	je     0x409b10
  409ab2:	lea    rdx,[rip+0x29e65]        # 0x43391e
  409ab9:	xor    ebx,ebx
  409abb:	call   0x409870
  409ac0:	cmp    ebx,DWORD PTR [rsi+0x8]
  409ac3:	jae    0x409afa
  409ac5:	mov    rdx,QWORD PTR [rsi]
  409ac8:	mov    eax,ebx
  409aca:	mov    rcx,rdi
  409acd:	add    ebx,0x1
  409ad0:	movzx  r8d,BYTE PTR [rdx+rax*1]
  409ad5:	lea    rdx,[rip+0x29e46]        # 0x433922
  409adc:	call   0x409870
  409ae1:	test   bl,0xf
  409ae4:	jne    0x409ac0
  409ae6:	lea    rdx,[rip+0x29e3c]        # 0x433929
  409aed:	mov    rcx,rdi
  409af0:	call   0x409870
  409af5:	cmp    ebx,DWORD PTR [rsi+0x8]
  409af8:	jb     0x409ac5
  409afa:	lea    rdx,[rip+0x29e2d]        # 0x43392e
  409b01:	mov    rcx,rdi
  409b04:	add    rsp,0x20
  409b08:	pop    rbx
  409b09:	pop    rsi
  409b0a:	pop    rdi
  409b0b:	jmp    0x409870
  409b10:	lea    rdx,[rip+0x29e1c]        # 0x433933
  409b17:	call   0x409870
  409b1c:	xor    eax,eax
  409b1e:	cmp    eax,DWORD PTR [rsi+0x8]
  409b21:	jae    0x409b58
  409b23:	lea    ebx,[rax+0x1]
  409b26:	mov    rdx,QWORD PTR [rsi]
  409b29:	test   bl,0xf
  409b2c:	movzx  r8d,BYTE PTR [rdx+rax*1]
  409b31:	jne    0x409b70
  409b33:	lea    rdx,[rip+0x29dfc]        # 0x433936
  409b3a:	mov    rcx,rdi
  409b3d:	call   0x409870
  409b42:	lea    rdx,[rip+0x29dea]        # 0x433933
  409b49:	mov    rcx,rdi
  409b4c:	call   0x409870
  409b51:	mov    eax,ebx
  409b53:	cmp    eax,DWORD PTR [rsi+0x8]
  409b56:	jb     0x409b23
  409b58:	lea    rdx,[rip+0x29de2]        # 0x433941
  409b5f:	mov    rcx,rdi
  409b62:	add    rsp,0x20
  409b66:	pop    rbx
  409b67:	pop    rsi
  409b68:	pop    rdi
  409b69:	jmp    0x409870
  409b6e:	xchg   ax,ax
  409b70:	lea    rdx,[rip+0x29dc4]        # 0x43393b
  409b77:	mov    rcx,rdi
  409b7a:	call   0x409870
  409b7f:	mov    eax,ebx
  409b81:	jmp    0x409b53
  409b83:	nop    DWORD PTR [rax]
  409b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b90:	push   rbp
  409b91:	push   rdi
  409b92:	push   rsi
  409b93:	push   rbx
  409b94:	sub    rsp,0x28
  409b98:	mov    ebx,DWORD PTR [rsp+0x70]
  409b9c:	test   r9d,r9d
  409b9f:	mov    rsi,rcx
  409ba2:	mov    rdi,rdx
  409ba5:	mov    rbp,r8
  409ba8:	je     0x409bbd
  409baa:	test   ebx,ebx
  409bac:	jne    0x409c10
  409bae:	lea    rdx,[rip+0x29dc3]        # 0x433978
  409bb5:	mov    r8d,r9d
  409bb8:	call   0x409870
  409bbd:	mov    r8d,DWORD PTR [rbp+0x8]
  409bc1:	lea    rdx,[rip+0x29dd3]        # 0x43399b
  409bc8:	mov    r9d,ebx
  409bcb:	mov    rcx,rsi
  409bce:	call   0x4099c0
  409bd3:	mov    r8d,ebx
  409bd6:	mov    rdx,rbp
  409bd9:	mov    rcx,rsi
  409bdc:	call   0x409aa0
  409be1:	mov    r8d,DWORD PTR [rdi+0x8]
  409be5:	lea    rdx,[rip+0x29db9]        # 0x4339a5
  409bec:	mov    rcx,rsi
  409bef:	mov    r9d,ebx
  409bf2:	call   0x4099c0
  409bf7:	mov    r8d,ebx
  409bfa:	mov    rdx,rdi
  409bfd:	mov    rcx,rsi
  409c00:	add    rsp,0x28
  409c04:	pop    rbx
  409c05:	pop    rsi
  409c06:	pop    rdi
  409c07:	pop    rbp
  409c08:	jmp    0x409aa0
  409c0d:	nop    DWORD PTR [rax]
  409c10:	lea    r8d,[r9+0x7]
  409c14:	lea    rdx,[rip+0x29d2d]        # 0x433948
  409c1b:	shr    r8d,0x3
  409c1f:	call   0x409870
  409c24:	jmp    0x409bbd
  409c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c30:	sub    rsp,0x38
  409c34:	lea    rcx,[rip+0x29d70]        # 0x4339ab
  409c3b:	mov    QWORD PTR [rsp+0x48],rdx
  409c40:	lea    rdx,[rsp+0x48]
  409c45:	mov    QWORD PTR [rsp+0x50],r8
  409c4a:	mov    QWORD PTR [rsp+0x58],r9
  409c4f:	mov    QWORD PTR [rsp+0x28],rdx
  409c54:	call   0x429310
  409c59:	add    rsp,0x38
  409c5d:	ret    
  409c5e:	xchg   ax,ax
  409c60:	sub    rsp,0x28
  409c64:	mov    eax,DWORD PTR [rip+0x39416]        # 0x443080
  409c6a:	test   eax,eax
  409c6c:	je     0x409c83
  409c6e:	mov    r8,QWORD PTR [rip+0x39413]        # 0x443088
  409c75:	test   r8,r8
  409c78:	je     0x409c83
  409c7a:	cmp    eax,ecx
  409c7c:	jb     0x409ce1
  409c7e:	add    rsp,0x28
  409c82:	ret    
  409c83:	test   ecx,ecx
  409c85:	je     0x409cd0
  409c87:	add    ecx,0x1
  409c8a:	mov    eax,0x10000
  409c8f:	cmp    ecx,0x10000
  409c95:	cmovb  rcx,rax
  409c99:	mov    DWORD PTR [rip+0x393e1],ecx        # 0x443080
  409c9f:	call   0x412940
  409ca4:	mov    QWORD PTR [rip+0x393dd],rax        # 0x443088
  409cab:	test   rax,rax
  409cae:	jne    0x409c7e
  409cb0:	call   QWORD PTR [rip+0x3eb2a]        # 0x4487e0
  409cb6:	lea    rdx,[rip+0x29cf4]        # 0x4339b1
  409cbd:	lea    rcx,[rax+0x60]
  409cc1:	call   0x409870
  409cc6:	mov    ecx,0x1
  409ccb:	call   0x42df60
  409cd0:	mov    DWORD PTR [rip+0x393a6],0x10000        # 0x443080
  409cda:	mov    ecx,0x10000
  409cdf:	jmp    0x409c9f
  409ce1:	lea    edx,[rcx+0x1]
  409ce4:	mov    eax,0x10000
  409ce9:	mov    rcx,r8
  409cec:	cmp    edx,0x10000
  409cf2:	cmovb  rdx,rax
  409cf6:	mov    DWORD PTR [rip+0x39384],edx        # 0x443080
  409cfc:	call   0x415780
  409d01:	mov    QWORD PTR [rip+0x39380],rax        # 0x443088
  409d08:	jmp    0x409cab
  409d0a:	nop    WORD PTR [rax+rax*1+0x0]
  409d10:	push   rsi
  409d11:	push   rbx
  409d12:	sub    rsp,0x28
  409d16:	test   edx,edx
  409d18:	jne    0x409d30
  409d1a:	lea    rdx,[rip+0x29c9d]        # 0x4339be
  409d21:	add    rsp,0x28
  409d25:	pop    rbx
  409d26:	pop    rsi
  409d27:	jmp    0x42df30
  409d2c:	nop    DWORD PTR [rax+0x0]
  409d30:	mov    rbx,rcx
  409d33:	mov    ecx,0x36
  409d38:	call   0x42dda0
  409d3d:	lea    rdx,[rip+0x29c7a]        # 0x4339be
  409d44:	mov    esi,eax
  409d46:	mov    rcx,rbx
  409d49:	call   0x42df30
  409d4e:	movzx  ecx,si
  409d51:	mov    rbx,rax
  409d54:	call   0x42dda0
  409d59:	mov    rax,rbx
  409d5c:	add    rsp,0x28
  409d60:	pop    rbx
  409d61:	pop    rsi
  409d62:	ret    
  409d63:	nop    DWORD PTR [rax]
  409d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d70:	push   rsi
  409d71:	push   rbx
  409d72:	sub    rsp,0x48
  409d76:	mov    eax,DWORD PTR [rdx+0xa8]
  409d7c:	mov    esi,ecx
  409d7e:	mov    rbx,rdx
  409d81:	mov    QWORD PTR [rsp+0x28],0x40
  409d8a:	test   eax,eax
  409d8c:	jne    0x409df2
  409d8e:	mov    rcx,QWORD PTR [rbx]
  409d91:	test   rcx,rcx
  409d94:	je     0x409de5
  409d96:	mov    QWORD PTR [rsp+0x30],rcx
  409d9b:	call   0x42de30
  409da0:	lea    rcx,[rsp+0x30]
  409da5:	lea    r8,[rsp+0x28]
  409daa:	lea    rdx,[rip+0x3930f]        # 0x4430c0
  409db1:	mov    DWORD PTR [rsp+0x38],eax
  409db5:	call   0x40e098
  409dba:	test   eax,eax
  409dbc:	js     0x409e0a
  409dbe:	lea    rax,[rip+0x392fb]        # 0x4430c0
  409dc5:	mov    QWORD PTR [rip+0x392e4],rax        # 0x4430b0
  409dcc:	mov    rax,QWORD PTR [rsp+0x28]
  409dd1:	mov    DWORD PTR [rip+0x392e1],eax        # 0x4430b8
  409dd7:	lea    rax,[rip+0x392d2]        # 0x4430b0
  409dde:	add    rsp,0x48
  409de2:	pop    rbx
  409de3:	pop    rsi
  409de4:	ret    
  409de5:	test   esi,esi
  409de7:	jne    0x409e37
  409de9:	xor    eax,eax
  409deb:	add    rsp,0x48
  409def:	pop    rbx
  409df0:	pop    rsi
  409df1:	ret    
  409df2:	call   QWORD PTR [rip+0x3e9e8]        # 0x4487e0
  409df8:	lea    rdx,[rip+0x29bc2]        # 0x4339c1
  409dff:	lea    rcx,[rax+0x60]
  409e03:	call   0x409870
  409e08:	jmp    0x409d8e
  409e0a:	mov    ecx,eax
  409e0c:	call   0x40dc88
  409e11:	mov    rbx,rax
  409e14:	call   QWORD PTR [rip+0x3e9c6]        # 0x4487e0
  409e1a:	lea    rdx,[rip+0x29bcd]        # 0x4339ee
  409e21:	lea    rcx,[rax+0x60]
  409e25:	mov    r8,rbx
  409e28:	call   0x409870
  409e2d:	mov    ecx,0x1
  409e32:	call   0x42df60
  409e37:	call   QWORD PTR [rip+0x3e9a3]        # 0x4487e0
  409e3d:	lea    rdx,[rip+0x29b94]        # 0x4339d8
  409e44:	lea    rcx,[rax+0x60]
  409e48:	call   0x409870
  409e4d:	mov    ecx,0x1
  409e52:	call   0x42df60
  409e57:	nop
  409e58:	nop    DWORD PTR [rax+rax*1+0x0]
  409e60:	push   rsi
  409e61:	push   rbx
  409e62:	sub    rsp,0x28
  409e66:	mov    r9d,DWORD PTR [rcx+0x78]
  409e6a:	test   r9d,r9d
  409e6d:	je     0x409e83
  409e6f:	test   rdx,rdx
  409e72:	je     0x409ed0
  409e74:	or     DWORD PTR [rdx],0x100
  409e7a:	xor    eax,eax
  409e7c:	add    rsp,0x28
  409e80:	pop    rbx
  409e81:	pop    rsi
  409e82:	ret    
  409e83:	mov    rbx,rcx
  409e86:	mov    rcx,QWORD PTR [rcx+0x70]
  409e8a:	mov    rsi,rdx
  409e8d:	test   rcx,rcx
  409e90:	je     0x409eb3
  409e92:	cmp    BYTE PTR [rcx],0x0
  409e95:	mov    rax,rcx
  409e98:	jne    0x409e7c
  409e9a:	test   rsi,rsi
  409e9d:	mov    rax,rcx
  409ea0:	je     0x409e7c
  409ea2:	mov    edx,DWORD PTR [rbx+0x7c]
  409ea5:	test   edx,edx
  409ea7:	jne    0x409e7c
  409ea9:	or     DWORD PTR [rsi],0x1
  409eac:	add    rsp,0x28
  409eb0:	pop    rbx
  409eb1:	pop    rsi
  409eb2:	ret    
  409eb3:	test   r8d,r8d
  409eb6:	jne    0x409ed4
  409eb8:	call   0x410310
  409ebd:	mov    rcx,rax
  409ec0:	test   rcx,rcx
  409ec3:	je     0x409e9a
  409ec5:	jmp    0x409e92
  409ec7:	nop    WORD PTR [rax+rax*1+0x0]
  409ed0:	xor    eax,eax
  409ed2:	jmp    0x409e7c
  409ed4:	mov    cl,0x1
  409ed6:	call   0x410350
  409edb:	mov    rcx,rax
  409ede:	jmp    0x409ec0
  409ee0:	push   rsi
  409ee1:	push   rbx
  409ee2:	sub    rsp,0x48
  409ee6:	mov    rsi,rcx
  409ee9:	lea    rcx,[rsp+0x38]
  409eee:	mov    rbx,rdx
  409ef1:	mov    DWORD PTR [rsp+0x34],0x0
  409ef9:	call   0x40dda8
  409efe:	test   eax,eax
  409f00:	js     0x409f90
  409f06:	mov    DWORD PTR [rsp+0x20],0x0
  409f0e:	mov    rcx,QWORD PTR [rsp+0x38]
  409f13:	xor    r9d,r9d
  409f16:	mov    r8d,DWORD PTR [rbx+0x1c]
  409f1a:	mov    rdx,rsi
  409f1d:	call   0x40ddb0
  409f22:	cmp    eax,0xffffffe8
  409f25:	je     0x409f42
  409f27:	cmp    eax,0xffffff31
  409f2c:	je     0x409f70
  409f2e:	test   eax,eax
  409f30:	js     0x409fbd
  409f36:	mov    rax,QWORD PTR [rsp+0x38]
  409f3b:	add    rsp,0x48
  409f3f:	pop    rbx
  409f40:	pop    rsi
  409f41:	ret    
  409f42:	lea    rdx,[rsp+0x34]
  409f47:	xor    r8d,r8d
  409f4a:	mov    rcx,rbx
  409f4d:	call   0x409e60
  409f52:	mov    r9,rax
  409f55:	mov    eax,DWORD PTR [rsp+0x34]
  409f59:	mov    rcx,QWORD PTR [rsp+0x38]
  409f5e:	mov    rdx,rsi
  409f61:	mov    DWORD PTR [rsp+0x20],eax
  409f65:	mov    r8d,DWORD PTR [rbx+0x1c]
  409f69:	call   0x40ddb0
  409f6e:	jmp    0x409f27
  409f70:	call   QWORD PTR [rip+0x3e86a]        # 0x4487e0
  409f76:	lea    rdx,[rip+0x29a83]        # 0x433a00
  409f7d:	lea    rcx,[rax+0x60]
  409f81:	call   0x409870
  409f86:	mov    ecx,0x1
  409f8b:	call   0x42df60
  409f90:	mov    ecx,eax
  409f92:	call   0x40dc88
  409f97:	mov    rbx,rax
  409f9a:	call   QWORD PTR [rip+0x3e840]        # 0x4487e0
  409fa0:	lea    rdx,[rip+0x29909]        # 0x4338b0
  409fa7:	lea    rcx,[rax+0x60]
  409fab:	mov    r8,rbx
  409fae:	call   0x409870
  409fb3:	mov    ecx,0x1
  409fb8:	call   0x42df60
  409fbd:	mov    ecx,eax
  409fbf:	call   0x40dc88
  409fc4:	mov    rbx,QWORD PTR [rbx+0x8]
  409fc8:	mov    rsi,rax
  409fcb:	call   QWORD PTR [rip+0x3e80f]        # 0x4487e0
  409fd1:	lea    rdx,[rip+0x29a80]        # 0x433a58
  409fd8:	lea    rcx,[rax+0x60]
  409fdc:	mov    r9,rsi
  409fdf:	mov    r8,rbx
  409fe2:	call   0x409870
  409fe7:	mov    ecx,0x1
  409fec:	call   0x42df60
  409ff1:	nop
  409ff2:	nop    DWORD PTR [rax+0x0]
  409ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a000:	push   rbx
  40a001:	sub    rsp,0x40
  40a005:	mov    rax,QWORD PTR [rdx+0x8]
  40a009:	mov    rbx,rdx
  40a00c:	test   rax,rax
  40a00f:	je     0x40a070
  40a011:	mov    rcx,rax
  40a014:	call   0x40dc80
  40a019:	test   eax,eax
  40a01b:	jne    0x40a061
  40a01d:	mov    rcx,QWORD PTR [rbx+0x8]
  40a021:	lea    rdx,[rsp+0x28]
  40a026:	call   0x415770
  40a02b:	mov    rdx,QWORD PTR [rsp+0x28]
  40a030:	test   rax,rax
  40a033:	mov    QWORD PTR [rsp+0x30],rax
  40a038:	mov    DWORD PTR [rsp+0x38],edx
  40a03c:	je     0x40a098
  40a03e:	lea    rcx,[rsp+0x30]
  40a043:	mov    rdx,rbx
  40a046:	call   0x409ee0
  40a04b:	mov    rcx,QWORD PTR [rsp+0x30]
  40a050:	mov    rbx,rax
  40a053:	call   0x42df08
  40a058:	mov    rax,rbx
  40a05b:	add    rsp,0x40
  40a05f:	pop    rbx
  40a060:	ret    
  40a061:	mov    rcx,QWORD PTR [rbx+0x8]
  40a065:	call   0x4098a0
  40a06a:	add    rsp,0x40
  40a06e:	pop    rbx
  40a06f:	ret    
  40a070:	test   ecx,ecx
  40a072:	je     0x40a094
  40a074:	call   QWORD PTR [rip+0x3e766]        # 0x4487e0
  40a07a:	lea    rdx,[rip+0x299f9]        # 0x433a7a
  40a081:	lea    rcx,[rax+0x60]
  40a085:	call   0x409870
  40a08a:	mov    ecx,0x1
  40a08f:	call   0x42df60
  40a094:	xor    eax,eax
  40a096:	jmp    0x40a05b
  40a098:	mov    rbx,QWORD PTR [rbx+0x8]
  40a09c:	call   QWORD PTR [rip+0x3e73e]        # 0x4487e0
  40a0a2:	lea    rdx,[rip+0x299e9]        # 0x433a92
  40a0a9:	lea    rcx,[rax+0x60]
  40a0ad:	mov    r8,rbx
  40a0b0:	call   0x409870
  40a0b5:	mov    ecx,0x1
  40a0ba:	call   0x42df60
  40a0bf:	nop
  40a0c0:	push   rdi
  40a0c1:	push   rsi
  40a0c2:	push   rbx
  40a0c3:	sub    rsp,0x60
  40a0c7:	cmp    QWORD PTR [rdx+0x8],0x0
  40a0cc:	mov    rbx,rdx
  40a0cf:	mov    DWORD PTR [rsp+0x3c],0x0
  40a0d7:	je     0x40a1a4
  40a0dd:	lea    rcx,[rsp+0x40]
  40a0e2:	call   0x40da30
  40a0e7:	test   eax,eax
  40a0e9:	js     0x40a231
  40a0ef:	mov    rcx,QWORD PTR [rbx+0x8]
  40a0f3:	lea    rdx,[rsp+0x48]
  40a0f8:	call   0x415770
  40a0fd:	mov    rdx,QWORD PTR [rsp+0x48]
  40a102:	test   rax,rax
  40a105:	mov    QWORD PTR [rsp+0x50],rax
  40a10a:	mov    DWORD PTR [rsp+0x58],edx
  40a10e:	je     0x40a20a
  40a114:	mov    eax,DWORD PTR [rbx+0x18]
  40a117:	test   eax,eax
  40a119:	jne    0x40a172
  40a11b:	mov    DWORD PTR [rsp+0x20],0x0
  40a123:	lea    rdi,[rsp+0x50]
  40a128:	mov    r8d,DWORD PTR [rbx+0x1c]
  40a12c:	mov    rcx,QWORD PTR [rsp+0x40]
  40a131:	xor    r9d,r9d
  40a134:	mov    rdx,rdi
  40a137:	call   0x40da40
  40a13c:	cmp    eax,0xffffffe8
  40a13f:	mov    esi,eax
  40a141:	je     0x40a1d0
  40a147:	mov    rcx,QWORD PTR [rsp+0x50]
  40a14c:	call   0x42df08
  40a151:	cmp    esi,0xffffff31
  40a157:	je     0x40a25e
  40a15d:	test   esi,esi
  40a15f:	js     0x40a27e
  40a165:	mov    rax,QWORD PTR [rsp+0x40]
  40a16a:	add    rsp,0x60
  40a16e:	pop    rbx
  40a16f:	pop    rsi
  40a170:	pop    rdi
  40a171:	ret    
  40a172:	lea    rdx,[rsp+0x3c]
  40a177:	xor    r8d,r8d
  40a17a:	mov    rcx,rbx
  40a17d:	call   0x409e60
  40a182:	mov    r9,rax
  40a185:	mov    eax,DWORD PTR [rsp+0x3c]
  40a189:	mov    rcx,QWORD PTR [rsp+0x40]
  40a18e:	lea    rdx,[rsp+0x50]
  40a193:	mov    DWORD PTR [rsp+0x20],eax
  40a197:	mov    r8d,DWORD PTR [rbx+0x1c]
  40a19b:	call   0x40da38
  40a1a0:	mov    esi,eax
  40a1a2:	jmp    0x40a147
  40a1a4:	test   ecx,ecx
  40a1a6:	je     0x40a203
  40a1a8:	call   QWORD PTR [rip+0x3e632]        # 0x4487e0
  40a1ae:	lea    rdx,[rip+0x298c5]        # 0x433a7a
  40a1b5:	lea    rcx,[rax+0x60]
  40a1b9:	call   0x409870
  40a1be:	mov    ecx,0x1
  40a1c3:	call   0x42df60
  40a1c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1d0:	lea    rdx,[rsp+0x3c]
  40a1d5:	xor    r8d,r8d
  40a1d8:	mov    rcx,rbx
  40a1db:	call   0x409e60
  40a1e0:	mov    r9,rax
  40a1e3:	mov    eax,DWORD PTR [rsp+0x3c]
  40a1e7:	mov    rcx,QWORD PTR [rsp+0x40]
  40a1ec:	mov    rdx,rdi
  40a1ef:	mov    DWORD PTR [rsp+0x20],eax
  40a1f3:	mov    r8d,DWORD PTR [rbx+0x1c]
  40a1f7:	call   0x40da40
  40a1fc:	mov    esi,eax
  40a1fe:	jmp    0x40a147
  40a203:	xor    eax,eax
  40a205:	jmp    0x40a16a
  40a20a:	mov    rbx,QWORD PTR [rbx+0x8]
  40a20e:	call   QWORD PTR [rip+0x3e5cc]        # 0x4487e0
  40a214:	lea    rdx,[rip+0x29877]        # 0x433a92
  40a21b:	lea    rcx,[rax+0x60]
  40a21f:	mov    r8,rbx
  40a222:	call   0x409870
  40a227:	mov    ecx,0x1
  40a22c:	call   0x42df60
  40a231:	mov    ecx,eax
  40a233:	call   0x40dc88
  40a238:	mov    rbx,rax
  40a23b:	call   QWORD PTR [rip+0x3e59f]        # 0x4487e0
  40a241:	lea    rdx,[rip+0x29668]        # 0x4338b0
  40a248:	lea    rcx,[rax+0x60]
  40a24c:	mov    r8,rbx
  40a24f:	call   0x409870
  40a254:	mov    ecx,0x1
  40a259:	call   0x42df60
  40a25e:	call   QWORD PTR [rip+0x3e57c]        # 0x4487e0
  40a264:	lea    rdx,[rip+0x29845]        # 0x433ab0
  40a26b:	lea    rcx,[rax+0x60]
  40a26f:	call   0x409870
  40a274:	mov    ecx,0x1
  40a279:	call   0x42df60
  40a27e:	mov    ecx,esi
  40a280:	call   0x40dc88
  40a285:	mov    rbx,QWORD PTR [rbx+0x8]
  40a289:	mov    rsi,rax
  40a28c:	call   QWORD PTR [rip+0x3e54e]        # 0x4487e0
  40a292:	lea    rdx,[rip+0x297bf]        # 0x433a58
  40a299:	lea    rcx,[rax+0x60]
  40a29d:	mov    r9,rsi
  40a2a0:	mov    r8,rbx
  40a2a3:	call   0x409870
  40a2a8:	mov    ecx,0x1
  40a2ad:	call   0x42df60
  40a2b2:	nop
  40a2b3:	nop    DWORD PTR [rax]
  40a2b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a2c0:	push   rbp
  40a2c1:	push   rdi
  40a2c2:	push   rsi
  40a2c3:	push   rbx
  40a2c4:	sub    rsp,0x58
  40a2c8:	mov    rdi,rdx
  40a2cb:	mov    QWORD PTR [rdx],0x0
  40a2d2:	mov    edx,DWORD PTR [r8+0xa8]
  40a2d9:	mov    esi,ecx
  40a2db:	mov    rbx,r8
  40a2de:	test   edx,edx
  40a2e0:	jne    0x40a3e0
  40a2e6:	mov    rcx,QWORD PTR [rbx+0x28]
  40a2ea:	test   rcx,rcx
  40a2ed:	je     0x40a3d0
  40a2f3:	lea    rdx,[rip+0x29842]        # 0x433b3c
  40a2fa:	call   0x42df30
  40a2ff:	test   rax,rax
  40a302:	mov    rsi,rax
  40a305:	je     0x40a428
  40a30b:	mov    rcx,rax
  40a30e:	call   0x409940
  40a313:	mov    ecx,eax
  40a315:	call   0x409c60
  40a31a:	mov    eax,DWORD PTR [rip+0x38d60]        # 0x443080
  40a320:	mov    rcx,QWORD PTR [rip+0x38d61]        # 0x443088
  40a327:	mov    r9,rsi
  40a32a:	mov    edx,0x1
  40a32f:	lea    r8d,[rax-0x1]
  40a333:	call   0x42df10
  40a338:	mov    rdx,QWORD PTR [rip+0x38d49]        # 0x443088
  40a33f:	mov    rbp,rax
  40a342:	mov    eax,eax
  40a344:	mov    rcx,rsi
  40a347:	mov    BYTE PTR [rdx+rax*1],0x0
  40a34b:	call   0x42df58
  40a350:	mov    rax,QWORD PTR [rip+0x38d31]        # 0x443088
  40a357:	lea    rdx,[rsp+0x3c]
  40a35c:	lea    r8,[rsp+0x40]
  40a361:	lea    rcx,[rip+0x38d38]        # 0x4430a0
  40a368:	mov    DWORD PTR [rsp+0x20],0x0
  40a370:	mov    r9d,0x1
  40a376:	mov    DWORD PTR [rsp+0x48],ebp
  40a37a:	mov    QWORD PTR [rsp+0x40],rax
  40a37f:	call   0x40db30
  40a384:	test   eax,eax
  40a386:	js     0x40a3fb
  40a388:	mov    eax,DWORD PTR [rsp+0x3c]
  40a38c:	mov    rsi,rax
  40a38f:	mov    QWORD PTR [rdi],rax
  40a392:	mov    eax,DWORD PTR [rbx+0xa8]
  40a398:	test   eax,eax
  40a39a:	jne    0x40a3b0
  40a39c:	mov    rax,QWORD PTR [rip+0x38cfd]        # 0x4430a0
  40a3a3:	add    rsp,0x58
  40a3a7:	pop    rbx
  40a3a8:	pop    rsi
  40a3a9:	pop    rdi
  40a3aa:	pop    rbp
  40a3ab:	ret    
  40a3ac:	nop    DWORD PTR [rax+0x0]
  40a3b0:	call   QWORD PTR [rip+0x3e42a]        # 0x4487e0
  40a3b6:	lea    rdx,[rip+0x297bb]        # 0x433b78
  40a3bd:	lea    rcx,[rax+0x60]
  40a3c1:	mov    r8d,esi
  40a3c4:	call   0x409870
  40a3c9:	jmp    0x40a39c
  40a3cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a3d0:	test   esi,esi
  40a3d2:	jne    0x40a44f
  40a3d4:	xor    eax,eax
  40a3d6:	add    rsp,0x58
  40a3da:	pop    rbx
  40a3db:	pop    rsi
  40a3dc:	pop    rdi
  40a3dd:	pop    rbp
  40a3de:	ret    
  40a3df:	nop
  40a3e0:	call   QWORD PTR [rip+0x3e3fa]        # 0x4487e0
  40a3e6:	lea    rdx,[rip+0x29716]        # 0x433b03
  40a3ed:	lea    rcx,[rax+0x60]
  40a3f1:	call   0x409870
  40a3f6:	jmp    0x40a2e6
  40a3fb:	mov    ecx,eax
  40a3fd:	call   0x40dc88
  40a402:	mov    rbx,rax
  40a405:	call   QWORD PTR [rip+0x3e3d5]        # 0x4487e0
  40a40b:	lea    rdx,[rip+0x29746]        # 0x433b58
  40a412:	lea    rcx,[rax+0x60]
  40a416:	mov    r8,rbx
  40a419:	call   0x409870
  40a41e:	mov    ecx,0x1
  40a423:	call   0x42df60
  40a428:	mov    rbx,QWORD PTR [rbx+0x28]
  40a42c:	call   QWORD PTR [rip+0x3e3ae]        # 0x4487e0
  40a432:	lea    rdx,[rip+0x29705]        # 0x433b3e
  40a439:	lea    rcx,[rax+0x60]
  40a43d:	mov    r8,rbx
  40a440:	call   0x409870
  40a445:	mov    ecx,0x1
  40a44a:	call   0x42df60
  40a44f:	call   QWORD PTR [rip+0x3e38b]        # 0x4487e0
  40a455:	lea    rdx,[rip+0x296c4]        # 0x433b20
  40a45c:	lea    rcx,[rax+0x60]
  40a460:	call   0x409870
  40a465:	mov    ecx,0x1
  40a46a:	call   0x42df60
  40a46f:	nop
  40a470:	push   rdi
  40a471:	push   rsi
  40a472:	push   rbx
  40a473:	sub    rsp,0x30
  40a477:	mov    r8,rdx
  40a47a:	lea    rdx,[rsp+0x28]
  40a47f:	call   0x40a2c0
  40a484:	test   rax,rax
  40a487:	mov    rsi,rax
  40a48a:	je     0x40a4cb
  40a48c:	cmp    QWORD PTR [rsp+0x28],0x1
  40a492:	mov    rdi,QWORD PTR [rax]
  40a495:	mov    ebx,0x1
  40a49a:	jbe    0x40a4b4
  40a49c:	nop    DWORD PTR [rax+0x0]
  40a4a0:	mov    rcx,QWORD PTR [rsi+rbx*8]
  40a4a4:	add    rbx,0x1
  40a4a8:	call   0x40db90
  40a4ad:	cmp    QWORD PTR [rsp+0x28],rbx
  40a4b2:	ja     0x40a4a0
  40a4b4:	mov    rax,QWORD PTR [rip+0x33555]        # 0x43da10
  40a4bb:	mov    rcx,rsi
  40a4be:	call   QWORD PTR [rax]
  40a4c0:	mov    rax,rdi
  40a4c3:	add    rsp,0x30
  40a4c7:	pop    rbx
  40a4c8:	pop    rsi
  40a4c9:	pop    rdi
  40a4ca:	ret    
  40a4cb:	xor    eax,eax
  40a4cd:	jmp    0x40a4c3
  40a4cf:	nop
  40a4d0:	push   rbp
  40a4d1:	push   rdi
  40a4d2:	push   rsi
  40a4d3:	push   rbx
  40a4d4:	sub    rsp,0x58
  40a4d8:	mov    rdi,rdx
  40a4db:	mov    QWORD PTR [rdx],0x0
  40a4e2:	mov    edx,DWORD PTR [r8+0xa8]
  40a4e9:	mov    esi,ecx
  40a4eb:	mov    rbx,r8
  40a4ee:	test   edx,edx
  40a4f0:	jne    0x40a5f0
  40a4f6:	mov    rcx,QWORD PTR [rbx+0x38]
  40a4fa:	test   rcx,rcx
  40a4fd:	je     0x40a5e0
  40a503:	lea    rdx,[rip+0x29632]        # 0x433b3c
  40a50a:	call   0x42df30
  40a50f:	test   rax,rax
  40a512:	mov    rsi,rax
  40a515:	je     0x40a638
  40a51b:	mov    rcx,rax
  40a51e:	call   0x409940
  40a523:	mov    ecx,eax
  40a525:	call   0x409c60
  40a52a:	mov    eax,DWORD PTR [rip+0x38b50]        # 0x443080
  40a530:	mov    rcx,QWORD PTR [rip+0x38b51]        # 0x443088
  40a537:	mov    r9,rsi
  40a53a:	mov    edx,0x1
  40a53f:	lea    r8d,[rax-0x1]
  40a543:	call   0x42df10
  40a548:	mov    rbp,rax
  40a54b:	mov    rax,QWORD PTR [rip+0x38b36]        # 0x443088
  40a552:	mov    rcx,rsi
  40a555:	mov    BYTE PTR [rax+rbp*1],0x0
  40a559:	call   0x42df58
  40a55e:	mov    rax,QWORD PTR [rip+0x38b23]        # 0x443088
  40a565:	lea    rdx,[rsp+0x3c]
  40a56a:	lea    r8,[rsp+0x40]
  40a56f:	lea    rcx,[rip+0x38b22]        # 0x443098
  40a576:	mov    DWORD PTR [rsp+0x20],0x0
  40a57e:	mov    r9d,0x1
  40a584:	mov    DWORD PTR [rsp+0x48],ebp
  40a588:	mov    QWORD PTR [rsp+0x40],rax
  40a58d:	call   0x40dc48
  40a592:	test   eax,eax
  40a594:	js     0x40a60b
  40a596:	mov    eax,DWORD PTR [rsp+0x3c]
  40a59a:	mov    rsi,rax
  40a59d:	mov    QWORD PTR [rdi],rax
  40a5a0:	mov    eax,DWORD PTR [rbx+0xa8]
  40a5a6:	test   eax,eax
  40a5a8:	jne    0x40a5c0
  40a5aa:	mov    rax,QWORD PTR [rip+0x38ae7]        # 0x443098
  40a5b1:	add    rsp,0x58
  40a5b5:	pop    rbx
  40a5b6:	pop    rsi
  40a5b7:	pop    rdi
  40a5b8:	pop    rbp
  40a5b9:	ret    
  40a5ba:	nop    WORD PTR [rax+rax*1+0x0]
  40a5c0:	call   QWORD PTR [rip+0x3e21a]        # 0x4487e0
  40a5c6:	lea    rdx,[rip+0x29605]        # 0x433bd2
  40a5cd:	lea    rcx,[rax+0x60]
  40a5d1:	mov    r8d,esi
  40a5d4:	call   0x409870
  40a5d9:	jmp    0x40a5aa
  40a5db:	nop    DWORD PTR [rax+rax*1+0x0]
  40a5e0:	test   esi,esi
  40a5e2:	jne    0x40a65f
  40a5e4:	xor    eax,eax
  40a5e6:	add    rsp,0x58
  40a5ea:	pop    rbx
  40a5eb:	pop    rsi
  40a5ec:	pop    rdi
  40a5ed:	pop    rbp
  40a5ee:	ret    
  40a5ef:	nop
  40a5f0:	call   QWORD PTR [rip+0x3e1ea]        # 0x4487e0
  40a5f6:	lea    rdx,[rip+0x29594]        # 0x433b91
  40a5fd:	lea    rcx,[rax+0x60]
  40a601:	call   0x409870
  40a606:	jmp    0x40a4f6
  40a60b:	mov    ecx,eax
  40a60d:	call   0x40dc88
  40a612:	mov    rbx,rax
  40a615:	call   QWORD PTR [rip+0x3e1c5]        # 0x4487e0
  40a61b:	lea    rdx,[rip+0x29598]        # 0x433bba
  40a622:	lea    rcx,[rax+0x60]
  40a626:	mov    r8,rbx
  40a629:	call   0x409870
  40a62e:	mov    ecx,0x1
  40a633:	call   0x42df60
  40a638:	mov    rbx,QWORD PTR [rbx+0x38]
  40a63c:	call   QWORD PTR [rip+0x3e19e]        # 0x4487e0
  40a642:	lea    rdx,[rip+0x294f5]        # 0x433b3e
  40a649:	lea    rcx,[rax+0x60]
  40a64d:	mov    r8,rbx
  40a650:	call   0x409870
  40a655:	mov    ecx,0x1
  40a65a:	call   0x42df60
  40a65f:	call   QWORD PTR [rip+0x3e17b]        # 0x4487e0
  40a665:	lea    rdx,[rip+0x2953a]        # 0x433ba6
  40a66c:	lea    rcx,[rax+0x60]
  40a670:	call   0x409870
  40a675:	mov    ecx,0x1
  40a67a:	call   0x42df60
  40a67f:	nop
  40a680:	push   rsi
  40a681:	push   rbx
  40a682:	sub    rsp,0x48
  40a686:	cmp    QWORD PTR [rcx+0x30],0x0
  40a68b:	je     0x40a700
  40a68d:	mov    rbx,rcx
  40a690:	lea    rcx,[rsp+0x20]
  40a695:	call   0x40dbe0
  40a69a:	test   eax,eax
  40a69c:	js     0x40a77f
  40a6a2:	mov    rcx,QWORD PTR [rbx+0x30]
  40a6a6:	lea    rdx,[rsp+0x28]
  40a6ab:	call   0x415770
  40a6b0:	mov    rdx,QWORD PTR [rsp+0x28]
  40a6b5:	test   rax,rax
  40a6b8:	mov    QWORD PTR [rsp+0x30],rax
  40a6bd:	mov    DWORD PTR [rsp+0x38],edx
  40a6c1:	je     0x40a758
  40a6c7:	mov    r8d,DWORD PTR [rbx+0x1c]
  40a6cb:	mov    rcx,QWORD PTR [rsp+0x20]
  40a6d0:	lea    rdx,[rsp+0x30]
  40a6d5:	call   0x40dbe8
  40a6da:	cmp    eax,0xffffff31
  40a6df:	mov    esi,eax
  40a6e1:	je     0x40a738
  40a6e3:	mov    rcx,QWORD PTR [rsp+0x30]
  40a6e8:	call   0x42df08
  40a6ed:	test   esi,esi
  40a6ef:	js     0x40a704
  40a6f1:	mov    rax,QWORD PTR [rsp+0x20]
  40a6f6:	add    rsp,0x48
  40a6fa:	pop    rbx
  40a6fb:	pop    rsi
  40a6fc:	ret    
  40a6fd:	nop    DWORD PTR [rax]
  40a700:	xor    eax,eax
  40a702:	jmp    0x40a6f6
  40a704:	mov    ecx,esi
  40a706:	call   0x40dc88
  40a70b:	mov    rbx,QWORD PTR [rbx+0x30]
  40a70f:	mov    rsi,rax
  40a712:	call   QWORD PTR [rip+0x3e0c8]        # 0x4487e0
  40a718:	lea    rdx,[rip+0x29529]        # 0x433c48
  40a71f:	lea    rcx,[rax+0x60]
  40a723:	mov    r9,rsi
  40a726:	mov    r8,rbx
  40a729:	call   0x409870
  40a72e:	mov    ecx,0x1
  40a733:	call   0x42df60
  40a738:	call   QWORD PTR [rip+0x3e0a2]        # 0x4487e0
  40a73e:	lea    rdx,[rip+0x294cb]        # 0x433c10
  40a745:	lea    rcx,[rax+0x60]
  40a749:	call   0x409870
  40a74e:	mov    ecx,0x1
  40a753:	call   0x42df60
  40a758:	mov    rbx,QWORD PTR [rbx+0x30]
  40a75c:	call   QWORD PTR [rip+0x3e07e]        # 0x4487e0
  40a762:	lea    rdx,[rip+0x29488]        # 0x433bf1
  40a769:	lea    rcx,[rax+0x60]
  40a76d:	mov    r8,rbx
  40a770:	call   0x409870
  40a775:	mov    ecx,0x1
  40a77a:	call   0x42df60
  40a77f:	mov    ecx,eax
  40a781:	call   0x40dc88
  40a786:	mov    rbx,rax
  40a789:	call   QWORD PTR [rip+0x3e051]        # 0x4487e0
  40a78f:	lea    rdx,[rip+0x2944d]        # 0x433be3
  40a796:	lea    rcx,[rax+0x60]
  40a79a:	mov    r8,rbx
  40a79d:	call   0x409870
  40a7a2:	mov    ecx,0x1
  40a7a7:	call   0x42df60
  40a7ac:	nop
  40a7ad:	nop    DWORD PTR [rax]
  40a7b0:	push   rbx
  40a7b1:	sub    rsp,0x40
  40a7b5:	mov    rbx,rcx
  40a7b8:	mov    rcx,QWORD PTR [rcx+0x50]
  40a7bc:	test   rcx,rcx
  40a7bf:	je     0x40a81f
  40a7c1:	call   0x40dc80
  40a7c6:	test   eax,eax
  40a7c8:	jne    0x40a810
  40a7ca:	mov    rcx,QWORD PTR [rbx+0x50]
  40a7ce:	lea    rdx,[rsp+0x28]
  40a7d3:	call   0x415770
  40a7d8:	mov    rdx,QWORD PTR [rsp+0x28]
  40a7dd:	test   rax,rax
  40a7e0:	mov    QWORD PTR [rsp+0x30],rax
  40a7e5:	mov    DWORD PTR [rsp+0x38],edx
  40a7e9:	je     0x40a83f
  40a7eb:	lea    rcx,[rsp+0x30]
  40a7f0:	mov    rdx,rbx
  40a7f3:	call   0x409ee0
  40a7f8:	mov    rcx,QWORD PTR [rsp+0x30]
  40a7fd:	mov    rbx,rax
  40a800:	call   0x42df08
  40a805:	mov    rax,rbx
  40a808:	add    rsp,0x40
  40a80c:	pop    rbx
  40a80d:	ret    
  40a80e:	xchg   ax,ax
  40a810:	mov    rcx,QWORD PTR [rbx+0x50]
  40a814:	call   0x4098a0
  40a819:	add    rsp,0x40
  40a81d:	pop    rbx
  40a81e:	ret    
  40a81f:	call   QWORD PTR [rip+0x3dfbb]        # 0x4487e0
  40a825:	lea    rdx,[rip+0x2943e]        # 0x433c6a
  40a82c:	lea    rcx,[rax+0x60]
  40a830:	call   0x409870
  40a835:	mov    ecx,0x1
  40a83a:	call   0x42df60
  40a83f:	mov    rbx,QWORD PTR [rbx+0x50]
  40a843:	call   QWORD PTR [rip+0x3df97]        # 0x4487e0
  40a849:	lea    rdx,[rip+0x29438]        # 0x433c88
  40a850:	lea    rcx,[rax+0x60]
  40a854:	mov    r8,rbx
  40a857:	call   0x409870
  40a85c:	mov    ecx,0x1
  40a861:	call   0x42df60
  40a866:	nop
  40a867:	nop    WORD PTR [rax+rax*1+0x0]
  40a870:	push   rsi
  40a871:	push   rbx
  40a872:	sub    rsp,0x48
  40a876:	test   ecx,ecx
  40a878:	mov    rbx,rdx
  40a87b:	jne    0x40a8f0
  40a87d:	cmp    QWORD PTR [rdx+0x40],0x0
  40a882:	je     0x40a920
  40a888:	lea    rcx,[rsp+0x20]
  40a88d:	call   0x40db40
  40a892:	test   eax,eax
  40a894:	js     0x40a97f
  40a89a:	mov    rcx,QWORD PTR [rbx+0x40]
  40a89e:	lea    rdx,[rsp+0x28]
  40a8a3:	call   0x415770
  40a8a8:	mov    rdx,QWORD PTR [rsp+0x28]
  40a8ad:	test   rax,rax
  40a8b0:	mov    QWORD PTR [rsp+0x30],rax
  40a8b5:	mov    DWORD PTR [rsp+0x38],edx
  40a8b9:	je     0x40a958
  40a8bf:	mov    r8d,DWORD PTR [rbx+0x1c]
  40a8c3:	mov    rcx,QWORD PTR [rsp+0x20]
  40a8c8:	lea    rdx,[rsp+0x30]
  40a8cd:	call   0x40db48
  40a8d2:	mov    rcx,QWORD PTR [rsp+0x30]
  40a8d7:	mov    esi,eax
  40a8d9:	call   0x42df08
  40a8de:	test   esi,esi
  40a8e0:	js     0x40a924
  40a8e2:	mov    rax,QWORD PTR [rsp+0x20]
  40a8e7:	add    rsp,0x48
  40a8eb:	pop    rbx
  40a8ec:	pop    rsi
  40a8ed:	ret    
  40a8ee:	xchg   ax,ax
  40a8f0:	cmp    QWORD PTR [rdx+0x40],0x0
  40a8f5:	jne    0x40a888
  40a8f7:	call   QWORD PTR [rip+0x3dee3]        # 0x4487e0
  40a8fd:	lea    rdx,[rip+0x293a4]        # 0x433ca8
  40a904:	lea    rcx,[rax+0x60]
  40a908:	call   0x409870
  40a90d:	mov    ecx,0x1
  40a912:	call   0x42df60
  40a917:	nop    WORD PTR [rax+rax*1+0x0]
  40a920:	xor    eax,eax
  40a922:	jmp    0x40a8e7
  40a924:	mov    ecx,esi
  40a926:	call   0x40dc88
  40a92b:	mov    rbx,QWORD PTR [rbx+0x40]
  40a92f:	mov    rsi,rax
  40a932:	call   QWORD PTR [rip+0x3dea8]        # 0x4487e0
  40a938:	lea    rdx,[rip+0x293c9]        # 0x433d08
  40a93f:	lea    rcx,[rax+0x60]
  40a943:	mov    r9,rsi
  40a946:	mov    r8,rbx
  40a949:	call   0x409870
  40a94e:	mov    ecx,0x1
  40a953:	call   0x42df60
  40a958:	mov    rbx,QWORD PTR [rbx+0x40]
  40a95c:	call   QWORD PTR [rip+0x3de7e]        # 0x4487e0
  40a962:	lea    rdx,[rip+0x2936f]        # 0x433cd8
  40a969:	lea    rcx,[rax+0x60]
  40a96d:	mov    r8,rbx
  40a970:	call   0x409870
  40a975:	mov    ecx,0x1
  40a97a:	call   0x42df60
  40a97f:	mov    ecx,eax
  40a981:	call   0x40dc88
  40a986:	mov    rbx,rax
  40a989:	call   QWORD PTR [rip+0x3de51]        # 0x4487e0
  40a98f:	lea    rdx,[rip+0x29331]        # 0x433cc7
  40a996:	lea    rcx,[rax+0x60]
  40a99a:	mov    r8,rbx
  40a99d:	call   0x409870
  40a9a2:	mov    ecx,0x1
  40a9a7:	call   0x42df60
  40a9ac:	nop
  40a9ad:	nop    DWORD PTR [rax]
  40a9b0:	push   rsi
  40a9b1:	push   rbx
  40a9b2:	sub    rsp,0x58
  40a9b6:	mov    rax,QWORD PTR [rdx+0x10]
  40a9ba:	mov    rbx,rdx
  40a9bd:	test   rax,rax
  40a9c0:	je     0x40aa80
  40a9c6:	mov    rcx,rax
  40a9c9:	call   0x40dc80
  40a9ce:	test   eax,eax
  40a9d0:	jne    0x40aa44
  40a9d2:	lea    rcx,[rsp+0x30]
  40a9d7:	call   0x40dd28
  40a9dc:	test   eax,eax
  40a9de:	js     0x40ab23
  40a9e4:	mov    rcx,QWORD PTR [rbx+0x10]
  40a9e8:	lea    rdx,[rsp+0x38]
  40a9ed:	call   0x415770
  40a9f2:	mov    rdx,QWORD PTR [rsp+0x38]
  40a9f7:	test   rax,rax
  40a9fa:	mov    QWORD PTR [rsp+0x40],rax
  40a9ff:	mov    DWORD PTR [rsp+0x48],edx
  40aa03:	je     0x40aafc
  40aa09:	mov    r8d,DWORD PTR [rbx+0x1c]
  40aa0d:	mov    rcx,QWORD PTR [rsp+0x30]
  40aa12:	lea    rdx,[rsp+0x40]
  40aa17:	call   0x40dd50
  40aa1c:	mov    rcx,QWORD PTR [rsp+0x40]
  40aa21:	mov    esi,eax
  40aa23:	call   0x42df08
  40aa28:	cmp    esi,0xffffff31
  40aa2e:	je     0x40aadc
  40aa34:	test   esi,esi
  40aa36:	js     0x40aaa8
  40aa38:	mov    rax,QWORD PTR [rsp+0x30]
  40aa3d:	add    rsp,0x58
  40aa41:	pop    rbx
  40aa42:	pop    rsi
  40aa43:	ret    
  40aa44:	lea    rcx,[rsp+0x40]
  40aa49:	mov    rbx,QWORD PTR [rbx+0x10]
  40aa4d:	call   0x40dd28
  40aa52:	test   eax,eax
  40aa54:	js     0x40ab50
  40aa5a:	mov    rcx,QWORD PTR [rsp+0x40]
  40aa5f:	xor    r8d,r8d
  40aa62:	mov    rdx,rbx
  40aa65:	call   0x40dd40
  40aa6a:	test   eax,eax
  40aa6c:	js     0x40ab8c
  40aa72:	mov    rax,QWORD PTR [rsp+0x40]
  40aa77:	add    rsp,0x58
  40aa7b:	pop    rbx
  40aa7c:	pop    rsi
  40aa7d:	ret    
  40aa7e:	xchg   ax,ax
  40aa80:	test   ecx,ecx
  40aa82:	je     0x40aaa4
  40aa84:	call   QWORD PTR [rip+0x3dd56]        # 0x4487e0
  40aa8a:	lea    rdx,[rip+0x292a0]        # 0x433d31
  40aa91:	lea    rcx,[rax+0x60]
  40aa95:	call   0x409870
  40aa9a:	mov    ecx,0x1
  40aa9f:	call   0x42df60
  40aaa4:	xor    eax,eax
  40aaa6:	jmp    0x40aa3d
  40aaa8:	mov    ecx,esi
  40aaaa:	call   0x40dc88
  40aaaf:	mov    rbx,QWORD PTR [rbx+0x10]
  40aab3:	mov    rsi,rax
  40aab6:	call   QWORD PTR [rip+0x3dd24]        # 0x4487e0
  40aabc:	lea    rdx,[rip+0x2932d]        # 0x433df0
  40aac3:	lea    rcx,[rax+0x60]
  40aac7:	mov    r9,rsi
  40aaca:	mov    r8,rbx
  40aacd:	call   0x409870
  40aad2:	mov    ecx,0x1
  40aad7:	call   0x42df60
  40aadc:	call   QWORD PTR [rip+0x3dcfe]        # 0x4487e0
  40aae2:	lea    rdx,[rip+0x292a7]        # 0x433d90
  40aae9:	lea    rcx,[rax+0x60]
  40aaed:	call   0x409870
  40aaf2:	mov    ecx,0x1
  40aaf7:	call   0x42df60
  40aafc:	mov    rbx,QWORD PTR [rbx+0x10]
  40ab00:	call   QWORD PTR [rip+0x3dcda]        # 0x4487e0
  40ab06:	lea    rdx,[rip+0x29267]        # 0x433d74
  40ab0d:	lea    rcx,[rax+0x60]
  40ab11:	mov    r8,rbx
  40ab14:	call   0x409870
  40ab19:	mov    ecx,0x1
  40ab1e:	call   0x42df60
  40ab23:	mov    ecx,eax
  40ab25:	call   0x40dc88
  40ab2a:	mov    rbx,rax
  40ab2d:	call   QWORD PTR [rip+0x3dcad]        # 0x4487e0
  40ab33:	lea    rdx,[rip+0x28d76]        # 0x4338b0
  40ab3a:	lea    rcx,[rax+0x60]
  40ab3e:	mov    r8,rbx
  40ab41:	call   0x409870
  40ab46:	mov    ecx,0x1
  40ab4b:	call   0x42df60
  40ab50:	mov    ecx,eax
  40ab52:	call   0x40dc88
  40ab57:	mov    rbx,rax
  40ab5a:	call   QWORD PTR [rip+0x3dc80]        # 0x4487e0
  40ab60:	lea    r8,[rip+0x29559]        # 0x4340c0
  40ab67:	lea    rcx,[rax+0x60]
  40ab6b:	lea    rdx,[rip+0x291d6]        # 0x433d48
  40ab72:	mov    QWORD PTR [rsp+0x20],rbx
  40ab77:	mov    r9d,0xe3
  40ab7d:	call   0x409870
  40ab82:	mov    ecx,0x1
  40ab87:	call   0x42df60
  40ab8c:	mov    ecx,eax
  40ab8e:	call   0x40dc88
  40ab93:	mov    rsi,rax
  40ab96:	call   QWORD PTR [rip+0x3dc44]        # 0x4487e0
  40ab9c:	lea    r8,[rip+0x2951d]        # 0x4340c0
  40aba3:	lea    rcx,[rax+0x60]
  40aba7:	lea    rdx,[rip+0x291ae]        # 0x433d5c
  40abae:	mov    QWORD PTR [rsp+0x28],rbx
  40abb3:	mov    QWORD PTR [rsp+0x20],rsi
  40abb8:	mov    r9d,0xeb
  40abbe:	call   0x409870
  40abc3:	mov    ecx,0x1
  40abc8:	call   0x42df60
  40abcd:	nop
  40abce:	xchg   ax,ax
  40abd0:	push   rdi
  40abd1:	push   rsi
  40abd2:	push   rbx
  40abd3:	sub    rsp,0x30
  40abd7:	mov    esi,ecx
  40abd9:	lea    rcx,[rsp+0x28]
  40abde:	mov    rbx,rdx
  40abe1:	mov    rdi,r8
  40abe4:	call   0x40dd28
  40abe9:	test   eax,eax
  40abeb:	js     0x40ac3c
  40abed:	test   rbx,rbx
  40abf0:	je     0x40ac20
  40abf2:	mov    rcx,QWORD PTR [rsp+0x28]
  40abf7:	xor    r9d,r9d
  40abfa:	xor    r8d,r8d
  40abfd:	mov    rdx,rbx
  40ac00:	call   0x40dd48
  40ac05:	test   eax,eax
  40ac07:	js     0x40ac20
  40ac09:	mov    rax,QWORD PTR [rsp+0x28]
  40ac0e:	add    rsp,0x30
  40ac12:	pop    rbx
  40ac13:	pop    rsi
  40ac14:	pop    rdi
  40ac15:	ret    
  40ac16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ac20:	mov    rcx,QWORD PTR [rsp+0x28]
  40ac25:	call   0x40dd78
  40ac2a:	mov    rdx,rdi
  40ac2d:	mov    ecx,esi
  40ac2f:	call   0x40a9b0
  40ac34:	add    rsp,0x30
  40ac38:	pop    rbx
  40ac39:	pop    rsi
  40ac3a:	pop    rdi
  40ac3b:	ret    
  40ac3c:	mov    ecx,eax
  40ac3e:	call   0x40dc88
  40ac43:	mov    rbx,rax
  40ac46:	call   QWORD PTR [rip+0x3db94]        # 0x4487e0
  40ac4c:	lea    rdx,[rip+0x291be]        # 0x433e11
  40ac53:	lea    rcx,[rax+0x60]
  40ac57:	mov    r8,rbx
  40ac5a:	call   0x409870
  40ac5f:	mov    ecx,0x1
  40ac64:	call   0x42df60
  40ac69:	nop
  40ac6a:	nop    WORD PTR [rax+rax*1+0x0]
  40ac70:	push   rsi
  40ac71:	push   rbx
  40ac72:	sub    rsp,0x28
  40ac76:	lea    rdx,[rip+0x291ac]        # 0x433e29
  40ac7d:	mov    rsi,QWORD PTR [rip+0x3dc2c]        # 0x4488b0
  40ac84:	mov    rbx,rcx
  40ac87:	call   rsi
  40ac89:	test   eax,eax
  40ac8b:	mov    edx,0x19
  40ac90:	jne    0x40aca0
  40ac92:	mov    eax,edx
  40ac94:	add    rsp,0x28
  40ac98:	pop    rbx
  40ac99:	pop    rsi
  40ac9a:	ret    
  40ac9b:	nop    DWORD PTR [rax+rax*1+0x0]
  40aca0:	lea    rdx,[rip+0x29186]        # 0x433e2d
  40aca7:	mov    rcx,rbx
  40acaa:	call   rsi
  40acac:	test   eax,eax
  40acae:	mov    edx,0x1e
  40acb3:	je     0x40ac92
  40acb5:	lea    rdx,[rip+0x29178]        # 0x433e34
  40acbc:	mov    rcx,rbx
  40acbf:	call   rsi
  40acc1:	test   eax,eax
  40acc3:	jne    0x40acd3
  40acc5:	mov    edx,0x23
  40acca:	mov    eax,edx
  40accc:	add    rsp,0x28
  40acd0:	pop    rbx
  40acd1:	pop    rsi
  40acd2:	ret    
  40acd3:	lea    rdx,[rip+0x29161]        # 0x433e3b
  40acda:	mov    rcx,rbx
  40acdd:	call   rsi
  40acdf:	test   eax,eax
  40ace1:	je     0x40acc5
  40ace3:	lea    rdx,[rip+0x29158]        # 0x433e42
  40acea:	mov    rcx,rbx
  40aced:	call   rsi
  40acef:	test   eax,eax
  40acf1:	mov    edx,0x28
  40acf6:	je     0x40ac92
  40acf8:	lea    rdx,[rip+0x29148]        # 0x433e47
  40acff:	mov    rcx,rbx
  40ad02:	call   rsi
  40ad04:	test   eax,eax
  40ad06:	mov    edx,0x2d
  40ad0b:	je     0x40ac92
  40ad0d:	lea    rdx,[rip+0x29139]        # 0x433e4d
  40ad14:	mov    rcx,rbx
  40ad17:	call   rsi
  40ad19:	test   eax,eax
  40ad1b:	jne    0x40ad27
  40ad1d:	mov    edx,0x32
  40ad22:	jmp    0x40ac92
  40ad27:	call   QWORD PTR [rip+0x3dab3]        # 0x4487e0
  40ad2d:	lea    rdx,[rip+0x29124]        # 0x433e58
  40ad34:	lea    rcx,[rax+0x60]
  40ad38:	mov    r8,rbx
  40ad3b:	call   0x409870
  40ad40:	mov    ecx,0x1
  40ad45:	call   0x42df60
  40ad4a:	nop
  40ad4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad50:	push   rsi
  40ad51:	push   rbx
  40ad52:	sub    rsp,0x28
  40ad56:	test   edx,edx
  40ad58:	mov    esi,ecx
  40ad5a:	mov    ebx,edx
  40ad5c:	je     0x40adb3
  40ad5e:	mov    eax,DWORD PTR [rip+0x3832c]        # 0x443090
  40ad64:	test   eax,eax
  40ad66:	jne    0x40adaa
  40ad68:	test   r9d,r9d
  40ad6b:	je     0x40adaa
  40ad6d:	test   edx,edx
  40ad6f:	js     0x40adaa
  40ad71:	mov    DWORD PTR [rip+0x38315],0x1        # 0x443090
  40ad7b:	call   0x40df58
  40ad80:	test   eax,eax
  40ad82:	je     0x40ade0
  40ad84:	mov    ecx,eax
  40ad86:	call   0x40dd00
  40ad8b:	mov    rsi,rax
  40ad8e:	call   QWORD PTR [rip+0x3da4c]        # 0x4487e0
  40ad94:	lea    rdx,[rip+0x290ed]        # 0x433e88
  40ad9b:	lea    rcx,[rax+0x60]
  40ad9f:	mov    r9d,ebx
  40ada2:	mov    r8,rsi
  40ada5:	call   0x409870
  40adaa:	mov    eax,ebx
  40adac:	add    rsp,0x28
  40adb0:	pop    rbx
  40adb1:	pop    rsi
  40adb2:	ret    
  40adb3:	lea    rax,[rip+0x290c5]        # 0x433e7f
  40adba:	test   r8,r8
  40adbd:	cmove  r8,rax
  40adc1:	mov    rcx,r8
  40adc4:	call   0x40ac70
  40adc9:	mov    ecx,esi
  40adcb:	mov    edx,eax
  40adcd:	add    rsp,0x28
  40add1:	pop    rbx
  40add2:	pop    rsi
  40add3:	jmp    0x40dcf8
  40add8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ade0:	mov    ecx,0x23
  40ade5:	call   0x40dd00
  40adea:	mov    rsi,rax
  40aded:	jmp    0x40ad8e
  40adef:	nop
  40adf0:	push   r14
  40adf2:	push   r13
  40adf4:	push   r12
  40adf6:	push   rbp
  40adf7:	push   rdi
  40adf8:	push   rsi
  40adf9:	push   rbx
  40adfa:	sub    rsp,0x20
  40adfe:	mov    r12,QWORD PTR [rsp+0x80]
  40ae06:	mov    rbp,QWORD PTR [rsp+0x88]
  40ae0e:	test   rdx,rdx
  40ae11:	mov    rbx,rcx
  40ae14:	mov    rdi,rdx
  40ae17:	mov    r14,r8
  40ae1a:	mov    r13,r9
  40ae1d:	mov    esi,DWORD PTR [rsp+0x90]
  40ae24:	je     0x40ae47
  40ae26:	mov    r8d,DWORD PTR [rdx+0x8]
  40ae2a:	lea    rdx,[rip+0x29095]        # 0x433ec6
  40ae31:	mov    r9d,esi
  40ae34:	call   0x4099c0
  40ae39:	mov    r8d,esi
  40ae3c:	mov    rdx,rdi
  40ae3f:	mov    rcx,rbx
  40ae42:	call   0x409aa0
  40ae47:	mov    r8d,DWORD PTR [r14+0x8]
  40ae4b:	lea    rdx,[rip+0x29080]        # 0x433ed2
  40ae52:	mov    r9d,esi
  40ae55:	mov    rcx,rbx
  40ae58:	call   0x4099c0
  40ae5d:	mov    r8d,esi
  40ae60:	mov    rdx,r14
  40ae63:	mov    rcx,rbx
  40ae66:	call   0x409aa0
  40ae6b:	mov    r8d,DWORD PTR [r13+0x8]
  40ae6f:	lea    rdx,[rip+0x29067]        # 0x433edd
  40ae76:	mov    r9d,esi
  40ae79:	mov    rcx,rbx
  40ae7c:	call   0x4099c0
  40ae81:	mov    r8d,esi
  40ae84:	mov    rdx,r13
  40ae87:	mov    rcx,rbx
  40ae8a:	call   0x409aa0
  40ae8f:	mov    r8d,DWORD PTR [r12+0x8]
  40ae94:	lea    rdx,[rip+0x29044]        # 0x433edf
  40ae9b:	mov    r9d,esi
  40ae9e:	mov    rcx,rbx
  40aea1:	call   0x4099c0
  40aea6:	mov    r8d,esi
  40aea9:	mov    rdx,r12
  40aeac:	mov    rcx,rbx
  40aeaf:	call   0x409aa0
  40aeb4:	mov    r8d,DWORD PTR [rbp+0x8]
  40aeb8:	lea    rdx,[rip+0x29022]        # 0x433ee1
  40aebf:	mov    rcx,rbx
  40aec2:	mov    r9d,esi
  40aec5:	call   0x4099c0
  40aeca:	mov    r8d,esi
  40aecd:	mov    rdx,rbp
  40aed0:	mov    rcx,rbx
  40aed3:	add    rsp,0x20
  40aed7:	pop    rbx
  40aed8:	pop    rsi
  40aed9:	pop    rdi
  40aeda:	pop    rbp
  40aedb:	pop    r12
  40aedd:	pop    r13
  40aedf:	pop    r14
  40aee1:	jmp    0x409aa0
  40aee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aef0:	push   r12
  40aef2:	push   rbp
  40aef3:	push   rdi
  40aef4:	push   rsi
  40aef5:	push   rbx
  40aef6:	sub    rsp,0x20
  40aefa:	mov    rdi,rcx
  40aefd:	call   0x40e0c8
  40af02:	mov    ecx,DWORD PTR [rax]
  40af04:	mov    r12,rax
  40af07:	test   ecx,ecx
  40af09:	je     0x40afa3
  40af0f:	mov    rbx,rax
  40af12:	xor    esi,esi
  40af14:	mov    rbp,QWORD PTR [rip+0x3d995]        # 0x4488b0
  40af1b:	jmp    0x40af2d
  40af1d:	nop    DWORD PTR [rax]
  40af20:	add    rbx,0x4
  40af24:	mov    ecx,DWORD PTR [rbx]
  40af26:	add    esi,0x1
  40af29:	test   ecx,ecx
  40af2b:	je     0x40af4b
  40af2d:	call   0x40e0d8
  40af32:	mov    rcx,rdi
  40af35:	mov    rdx,rax
  40af38:	call   rbp
  40af3a:	test   eax,eax
  40af3c:	jne    0x40af20
  40af3e:	mov    eax,DWORD PTR [rbx]
  40af40:	add    rsp,0x20
  40af44:	pop    rbx
  40af45:	pop    rsi
  40af46:	pop    rdi
  40af47:	pop    rbp
  40af48:	pop    r12
  40af4a:	ret    
  40af4b:	mov    rbx,QWORD PTR [rip+0x3d88e]        # 0x4487e0
  40af52:	call   rbx
  40af54:	lea    rdx,[rip+0x28f8d]        # 0x433ee8
  40af5b:	lea    rcx,[rax+0x60]
  40af5f:	mov    r8,rdi
  40af62:	call   0x409870
  40af67:	test   esi,esi
  40af69:	jne    0x40af91
  40af6b:	jmp    0x40afbf
  40af6d:	nop    DWORD PTR [rax]
  40af70:	call   0x40e0d8
  40af75:	mov    rsi,rax
  40af78:	add    r12,0x4
  40af7c:	call   rbx
  40af7e:	lea    rdx,[rip+0x28f8c]        # 0x433f11
  40af85:	lea    rcx,[rax+0x60]
  40af89:	mov    r8,rsi
  40af8c:	call   0x409870
  40af91:	mov    ecx,DWORD PTR [r12]
  40af95:	test   ecx,ecx
  40af97:	jne    0x40af70
  40af99:	mov    ecx,0x1
  40af9e:	call   0x42df60
  40afa3:	mov    rbx,QWORD PTR [rip+0x3d836]        # 0x4487e0
  40afaa:	call   rbx
  40afac:	lea    rdx,[rip+0x28f35]        # 0x433ee8
  40afb3:	lea    rcx,[rax+0x60]
  40afb7:	mov    r8,rdi
  40afba:	call   0x409870
  40afbf:	lea    rcx,[rip+0x289e5]        # 0x4339ab
  40afc6:	call   0x409c30
  40afcb:	jmp    0x40af91
  40afcd:	nop    DWORD PTR [rax]
  40afd0:	push   r12
  40afd2:	push   rbp
  40afd3:	push   rdi
  40afd4:	push   rsi
  40afd5:	push   rbx
  40afd6:	sub    rsp,0x20
  40afda:	mov    esi,DWORD PTR [rsp+0x78]
  40afde:	mov    rbp,QWORD PTR [rsp+0x70]
  40afe3:	mov    rbx,rcx
  40afe6:	mov    rdi,r8
  40afe9:	mov    r12,r9
  40afec:	mov    ecx,edx
  40afee:	test   esi,esi
  40aff0:	je     0x40b090
  40aff6:	call   0x40e0d8
  40affb:	lea    rdx,[rip+0x28f16]        # 0x433f18
  40b002:	mov    r8,rax
  40b005:	mov    rcx,rbx
  40b008:	call   0x409870
  40b00d:	test   rdi,rdi
  40b010:	je     0x40b036
  40b012:	mov    r8d,DWORD PTR [rdi+0x8]
  40b016:	lea    rdx,[rip+0x28ea9]        # 0x433ec6
  40b01d:	mov    rcx,rbx
  40b020:	mov    r9d,esi
  40b023:	call   0x4099c0
  40b028:	mov    r8d,esi
  40b02b:	mov    rdx,rdi
  40b02e:	mov    rcx,rbx
  40b031:	call   0x409aa0
  40b036:	mov    r8d,DWORD PTR [r12+0x8]
  40b03b:	lea    rdx,[rip+0x28ef2]        # 0x433f34
  40b042:	mov    r9d,esi
  40b045:	mov    rcx,rbx
  40b048:	call   0x4099c0
  40b04d:	mov    r8d,esi
  40b050:	mov    rdx,r12
  40b053:	mov    rcx,rbx
  40b056:	call   0x409aa0
  40b05b:	mov    r8d,DWORD PTR [rbp+0x8]
  40b05f:	lea    rdx,[rip+0x28ed0]        # 0x433f36
  40b066:	mov    rcx,rbx
  40b069:	mov    r9d,esi
  40b06c:	call   0x4099c0
  40b071:	mov    r8d,esi
  40b074:	mov    rdx,rbp
  40b077:	mov    rcx,rbx
  40b07a:	add    rsp,0x20
  40b07e:	pop    rbx
  40b07f:	pop    rsi
  40b080:	pop    rdi
  40b081:	pop    rbp
  40b082:	pop    r12
  40b084:	jmp    0x409aa0
  40b089:	nop    DWORD PTR [rax+0x0]
  40b090:	call   0x40e0d8
  40b095:	lea    rdx,[rip+0x28e8d]        # 0x433f29
  40b09c:	mov    r8,rax
  40b09f:	mov    rcx,rbx
  40b0a2:	call   0x409870
  40b0a7:	jmp    0x40b00d
  40b0ac:	nop    DWORD PTR [rax+0x0]
  40b0b0:	push   r15
  40b0b2:	push   r14
  40b0b4:	push   r13
  40b0b6:	push   r12
  40b0b8:	push   rbp
  40b0b9:	push   rdi
  40b0ba:	push   rsi
  40b0bb:	push   rbx
  40b0bc:	sub    rsp,0x38
  40b0c0:	mov    ebx,DWORD PTR [rsp+0xc8]
  40b0c7:	mov    r13,QWORD PTR [rsp+0xa0]
  40b0cf:	mov    rax,rdx
  40b0d2:	mov    rdx,QWORD PTR [rsp+0xc0]
  40b0da:	mov    rdi,r8
  40b0dd:	mov    r8d,DWORD PTR [rax+0x8]
  40b0e1:	mov    rsi,r9
  40b0e4:	mov    r15,rcx
  40b0e7:	mov    r9d,ebx
  40b0ea:	mov    QWORD PTR [rsp+0x20],rax
  40b0ef:	mov    r12,QWORD PTR [rsp+0xa8]
  40b0f7:	mov    QWORD PTR [rsp+0x28],rdx
  40b0fc:	lea    rdx,[rip+0x28e35]        # 0x433f38
  40b103:	mov    rbp,QWORD PTR [rsp+0xb0]
  40b10b:	mov    r14,QWORD PTR [rsp+0xb8]
  40b113:	call   0x4099c0
  40b118:	mov    rax,QWORD PTR [rsp+0x20]
  40b11d:	mov    r8d,ebx
  40b120:	mov    rcx,r15
  40b123:	mov    rdx,rax
  40b126:	call   0x409aa0
  40b12b:	mov    r8d,DWORD PTR [rdi+0x8]
  40b12f:	lea    rdx,[rip+0x28e0a]        # 0x433f40
  40b136:	mov    r9d,ebx
  40b139:	mov    rcx,r15
  40b13c:	call   0x4099c0
  40b141:	mov    r8d,ebx
  40b144:	mov    rdx,rdi
  40b147:	mov    rcx,r15
  40b14a:	call   0x409aa0
  40b14f:	test   rsi,rsi
  40b152:	je     0x40b250
  40b158:	mov    r8d,DWORD PTR [rsi+0x8]
  40b15c:	lea    rdx,[rip+0x28ded]        # 0x433f50
  40b163:	mov    r9d,ebx
  40b166:	mov    rcx,r15
  40b169:	call   0x4099c0
  40b16e:	mov    r8d,ebx
  40b171:	mov    rdx,rsi
  40b174:	mov    rcx,r15
  40b177:	call   0x409aa0
  40b17c:	mov    r8d,DWORD PTR [r13+0x8]
  40b180:	lea    rdx,[rip+0x28dda]        # 0x433f61
  40b187:	mov    r9d,ebx
  40b18a:	mov    rcx,r15
  40b18d:	call   0x4099c0
  40b192:	mov    r8d,ebx
  40b195:	mov    rdx,r13
  40b198:	mov    rcx,r15
  40b19b:	call   0x409aa0
  40b1a0:	mov    r8d,DWORD PTR [r12+0x8]
  40b1a5:	lea    rdx,[rip+0x28dbc]        # 0x433f68
  40b1ac:	mov    r9d,ebx
  40b1af:	mov    rcx,r15
  40b1b2:	call   0x4099c0
  40b1b7:	mov    r8d,ebx
  40b1ba:	mov    rdx,r12
  40b1bd:	mov    rcx,r15
  40b1c0:	call   0x409aa0
  40b1c5:	mov    r8d,DWORD PTR [rbp+0x8]
  40b1c9:	lea    rdx,[rip+0x28d9f]        # 0x433f6f
  40b1d0:	mov    r9d,ebx
  40b1d3:	mov    rcx,r15
  40b1d6:	call   0x4099c0
  40b1db:	mov    r8d,ebx
  40b1de:	mov    rdx,rbp
  40b1e1:	mov    rcx,r15
  40b1e4:	call   0x409aa0
  40b1e9:	test   r14,r14
  40b1ec:	je     0x40b250
  40b1ee:	mov    rdi,QWORD PTR [rsp+0x28]
  40b1f3:	test   rdi,rdi
  40b1f6:	je     0x40b250
  40b1f8:	mov    r8d,DWORD PTR [r14+0x8]
  40b1fc:	lea    rdx,[rip+0x28d78]        # 0x433f7b
  40b203:	mov    r9d,ebx
  40b206:	mov    rcx,r15
  40b209:	call   0x4099c0
  40b20e:	mov    r8d,ebx
  40b211:	mov    rdx,r14
  40b214:	mov    rcx,r15
  40b217:	call   0x409aa0
  40b21c:	mov    r8d,DWORD PTR [rdi+0x8]
  40b220:	lea    rdx,[rip+0x28d59]        # 0x433f80
  40b227:	mov    rcx,r15
  40b22a:	mov    r9d,ebx
  40b22d:	call   0x4099c0
  40b232:	mov    r8d,ebx
  40b235:	mov    rdx,rdi
  40b238:	mov    rcx,r15
  40b23b:	add    rsp,0x38
  40b23f:	pop    rbx
  40b240:	pop    rsi
  40b241:	pop    rdi
  40b242:	pop    rbp
  40b243:	pop    r12
  40b245:	pop    r13
  40b247:	pop    r14
  40b249:	pop    r15
  40b24b:	jmp    0x409aa0
  40b250:	add    rsp,0x38
  40b254:	pop    rbx
  40b255:	pop    rsi
  40b256:	pop    rdi
  40b257:	pop    rbp
  40b258:	pop    r12
  40b25a:	pop    r13
  40b25c:	pop    r14
  40b25e:	pop    r15
  40b260:	ret    
  40b261:	nop    DWORD PTR [rax+rax*1+0x0]
  40b266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b270:	push   rdi
  40b271:	push   rsi
  40b272:	push   rbx
  40b273:	sub    rsp,0x40
  40b277:	mov    rsi,rcx
  40b27a:	xor    ecx,ecx
  40b27c:	mov    rbx,r8
  40b27f:	mov    edi,edx
  40b281:	call   0x409c60
  40b286:	lea    r8,[rsp+0x30]
  40b28b:	mov    edx,edi
  40b28d:	mov    rcx,rbx
  40b290:	call   0x40dd20
  40b295:	test   eax,eax
  40b297:	js     0x40b302
  40b299:	mov    r8,QWORD PTR [rsp+0x30]
  40b29e:	lea    rdx,[rip+0x28cf8]        # 0x433f9d
  40b2a5:	mov    rcx,rsi
  40b2a8:	call   0x409870
  40b2ad:	mov    rax,QWORD PTR [rip+0x3275c]        # 0x43da10
  40b2b4:	mov    rcx,QWORD PTR [rsp+0x30]
  40b2b9:	call   QWORD PTR [rax]
  40b2bb:	mov    eax,DWORD PTR [rip+0x37dbf]        # 0x443080
  40b2c1:	mov    r8,QWORD PTR [rip+0x37dc0]        # 0x443088
  40b2c8:	lea    r9,[rsp+0x28]
  40b2cd:	mov    edx,0x1
  40b2d2:	mov    rcx,rbx
  40b2d5:	mov    QWORD PTR [rsp+0x28],rax
  40b2da:	call   0x40dd70
  40b2df:	test   eax,eax
  40b2e1:	js     0x40b32f
  40b2e3:	mov    r8,QWORD PTR [rip+0x37d9e]        # 0x443088
  40b2ea:	lea    rdx,[rip+0x28cc2]        # 0x433fb3
  40b2f1:	mov    rcx,rsi
  40b2f4:	call   0x409870
  40b2f9:	nop
  40b2fa:	add    rsp,0x40
  40b2fe:	pop    rbx
  40b2ff:	pop    rsi
  40b300:	pop    rdi
  40b301:	ret    
  40b302:	mov    ecx,eax
  40b304:	call   0x40dc88
  40b309:	mov    rbx,rax
  40b30c:	call   QWORD PTR [rip+0x3d4ce]        # 0x4487e0
  40b312:	lea    rdx,[rip+0x28c6c]        # 0x433f85
  40b319:	lea    rcx,[rax+0x60]
  40b31d:	mov    r8,rbx
  40b320:	call   0x409870
  40b325:	mov    ecx,0x1
  40b32a:	call   0x42df60
  40b32f:	mov    ecx,eax
  40b331:	call   0x40dc88
  40b336:	mov    rbx,rax
  40b339:	call   QWORD PTR [rip+0x3d4a1]        # 0x4487e0
  40b33f:	lea    rdx,[rip+0x28c5b]        # 0x433fa1
  40b346:	lea    rcx,[rax+0x60]
  40b34a:	mov    r8,rbx
  40b34d:	call   0x409870
  40b352:	mov    ecx,0x1
  40b357:	call   0x42df60
  40b35c:	nop
  40b35d:	nop    DWORD PTR [rax]
  40b360:	push   rbp
  40b361:	push   rdi
  40b362:	push   rsi
  40b363:	push   rbx
  40b364:	sub    rsp,0x88
  40b36b:	mov    rsi,rcx
  40b36e:	xor    ecx,ecx
  40b370:	mov    rbp,rdx
  40b373:	mov    rbx,r8
  40b376:	mov    DWORD PTR [rsp+0x34],0x0
  40b37e:	call   0x409c60
  40b383:	lea    rcx,[rsp+0x40]
  40b388:	call   0x40e0f8
  40b38d:	test   eax,eax
  40b38f:	js     0x40b534
  40b395:	lea    rdx,[rsp+0x38]
  40b39a:	mov    rcx,rsi
  40b39d:	call   0x415540
  40b3a2:	mov    r8d,DWORD PTR [rbx+0x1c]
  40b3a6:	mov    QWORD PTR [rsp+0x50],rax
  40b3ab:	lea    rdx,[rsp+0x50]
  40b3b0:	mov    rax,QWORD PTR [rsp+0x38]
  40b3b5:	mov    rcx,QWORD PTR [rsp+0x40]
  40b3ba:	mov    DWORD PTR [rsp+0x58],eax
  40b3be:	call   0x40e108
  40b3c3:	test   eax,eax
  40b3c5:	js     0x40b507
  40b3cb:	lea    rdi,[rsp+0x70]
  40b3d0:	lea    rsi,[rsp+0x60]
  40b3d5:	mov    rcx,QWORD PTR [rsp+0x40]
  40b3da:	lea    r9,[rsp+0x34]
  40b3df:	mov    r8,rdi
  40b3e2:	mov    rdx,rsi
  40b3e5:	call   0x40e118
  40b3ea:	test   eax,eax
  40b3ec:	js     0x40b4da
  40b3f2:	cmp    DWORD PTR [rbx+0x20],0x1
  40b3f6:	je     0x40b490
  40b3fc:	mov    eax,DWORD PTR [rbx+0x98]
  40b402:	test   eax,eax
  40b404:	je     0x40b420
  40b406:	mov    rcx,QWORD PTR [rsp+0x40]
  40b40b:	call   0x40e128
  40b410:	nop
  40b411:	add    rsp,0x88
  40b418:	pop    rbx
  40b419:	pop    rsi
  40b41a:	pop    rdi
  40b41b:	pop    rbp
  40b41c:	ret    
  40b41d:	nop    DWORD PTR [rax]
  40b420:	mov    eax,DWORD PTR [rip+0x37c5a]        # 0x443080
  40b426:	mov    edx,DWORD PTR [rbx+0x20]
  40b429:	lea    r9,[rsp+0x48]
  40b42e:	mov    r8,QWORD PTR [rip+0x37c53]        # 0x443088
  40b435:	mov    rcx,QWORD PTR [rsp+0x40]
  40b43a:	mov    QWORD PTR [rsp+0x48],rax
  40b43f:	call   0x40e120
  40b444:	test   eax,eax
  40b446:	jne    0x40b4b2
  40b448:	cmp    DWORD PTR [rbx+0x20],0x1
  40b44c:	je     0x40b470
  40b44e:	mov    r8,QWORD PTR [rsp+0x48]
  40b453:	mov    rcx,QWORD PTR [rip+0x37c2e]        # 0x443088
  40b45a:	mov    r9,rbp
  40b45d:	mov    edx,0x1
  40b462:	call   0x42dee0
  40b467:	jmp    0x40b406
  40b469:	nop    DWORD PTR [rax+0x0]
  40b470:	mov    r8,QWORD PTR [rip+0x37c11]        # 0x443088
  40b477:	lea    rdx,[rip+0x28ba2]        # 0x434020
  40b47e:	mov    rcx,rbp
  40b481:	call   0x409870
  40b486:	jmp    0x40b406
  40b48b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b490:	mov    eax,DWORD PTR [rbx+0x98]
  40b496:	mov    r9d,DWORD PTR [rsp+0x34]
  40b49b:	mov    r8,rdi
  40b49e:	mov    rdx,rsi
  40b4a1:	mov    rcx,rbp
  40b4a4:	mov    DWORD PTR [rsp+0x20],eax
  40b4a8:	call   0x409b90
  40b4ad:	jmp    0x40b3fc
  40b4b2:	mov    ecx,eax
  40b4b4:	call   0x40dc88
  40b4b9:	mov    rbx,rax
  40b4bc:	call   QWORD PTR [rip+0x3d31e]        # 0x4487e0
  40b4c2:	lea    rdx,[rip+0x28b5b]        # 0x434024
  40b4c9:	lea    rcx,[rax+0x60]
  40b4cd:	mov    r8,rbx
  40b4d0:	call   0x409870
  40b4d5:	jmp    0x40b406
  40b4da:	mov    ecx,eax
  40b4dc:	call   0x40dc88
  40b4e1:	mov    rbx,rax
  40b4e4:	call   QWORD PTR [rip+0x3d2f6]        # 0x4487e0
  40b4ea:	lea    rdx,[rip+0x28b0f]        # 0x434000
  40b4f1:	lea    rcx,[rax+0x60]
  40b4f5:	mov    r8,rbx
  40b4f8:	call   0x409870
  40b4fd:	mov    ecx,0x1
  40b502:	call   0x42df60
  40b507:	mov    ecx,eax
  40b509:	call   0x40dc88
  40b50e:	mov    rbx,rax
  40b511:	call   QWORD PTR [rip+0x3d2c9]        # 0x4487e0
  40b517:	lea    rdx,[rip+0x28ac0]        # 0x433fde
  40b51e:	lea    rcx,[rax+0x60]
  40b522:	mov    r8,rbx
  40b525:	call   0x409870
  40b52a:	mov    ecx,0x1
  40b52f:	call   0x42df60
  40b534:	call   QWORD PTR [rip+0x3d2a6]        # 0x4487e0
  40b53a:	lea    rdx,[rip+0x28a77]        # 0x433fb8
  40b541:	lea    rcx,[rax+0x60]
  40b545:	call   0x409870
  40b54a:	mov    ecx,0x1
  40b54f:	call   0x42df60
  40b554:	nop
  40b555:	nop
  40b556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b560:	push   r12
  40b562:	push   rbp
  40b563:	push   rdi
  40b564:	push   rsi
  40b565:	push   rbx
  40b566:	sub    rsp,0x70
  40b56a:	mov    r9d,0x1
  40b570:	mov    edi,edx
  40b572:	mov    rbx,r8
  40b575:	mov    edx,DWORD PTR [r8+0x58]
  40b579:	mov    r8,QWORD PTR [r8+0x60]
  40b57d:	mov    r12,rcx
  40b580:	mov    ecx,0x3
  40b585:	call   0x40ad50
  40b58a:	xor    ecx,ecx
  40b58c:	mov    esi,eax
  40b58e:	mov    DWORD PTR [rsp+0x3c],0x0
  40b596:	call   0x409c60
  40b59b:	lea    rcx,[rsp+0x40]
  40b5a0:	call   0x40e0f8
  40b5a5:	test   edi,edi
  40b5a7:	mov    rdi,QWORD PTR [rip+0x3d232]        # 0x4487e0
  40b5ae:	je     0x40b645
  40b5b4:	call   rdi
  40b5b6:	lea    rdx,[rip+0x28a73]        # 0x434030
  40b5bd:	lea    rcx,[rax+0x60]
  40b5c1:	mov    r8d,esi
  40b5c4:	call   0x409870
  40b5c9:	call   rdi
  40b5cb:	lea    rdx,[rip+0x28a85]        # 0x434057
  40b5d2:	lea    rcx,[rax+0x60]
  40b5d6:	call   0x409870
  40b5db:	mov    rcx,QWORD PTR [rsp+0x40]
  40b5e0:	mov    edx,esi
  40b5e2:	call   0x40e110
  40b5e7:	test   eax,eax
  40b5e9:	js     0x40b895
  40b5ef:	lea    rbp,[rsp+0x60]
  40b5f4:	lea    rsi,[rsp+0x50]
  40b5f9:	mov    rcx,QWORD PTR [rsp+0x40]
  40b5fe:	lea    r9,[rsp+0x3c]
  40b603:	mov    r8,rbp
  40b606:	mov    rdx,rsi
  40b609:	call   0x40e118
  40b60e:	test   eax,eax
  40b610:	js     0x40b6b5
  40b616:	cmp    DWORD PTR [rbx+0x20],0x1
  40b61a:	je     0x40b7d0
  40b620:	mov    eax,DWORD PTR [rbx+0x98]
  40b626:	test   eax,eax
  40b628:	je     0x40b730
  40b62e:	mov    rcx,QWORD PTR [rsp+0x40]
  40b633:	call   0x40e128
  40b638:	xor    eax,eax
  40b63a:	add    rsp,0x70
  40b63e:	pop    rbx
  40b63f:	pop    rsi
  40b640:	pop    rdi
  40b641:	pop    rbp
  40b642:	pop    r12
  40b644:	ret    
  40b645:	call   rdi
  40b647:	lea    rdx,[rip+0x28a21]        # 0x43406f
  40b64e:	lea    rcx,[rax+0x60]
  40b652:	call   0x409870
  40b657:	cmp    esi,0x400
  40b65d:	jg     0x40b6e0
  40b663:	mov    rax,QWORD PTR [rip+0x323d6]        # 0x43da40
  40b66a:	mov    rdx,QWORD PTR [rax+0x8]
  40b66e:	mov    rax,QWORD PTR [rax]
  40b671:	mov    QWORD PTR [rsp+0x50],rax
  40b676:	mov    rax,QWORD PTR [rip+0x323b3]        # 0x43da30
  40b67d:	mov    QWORD PTR [rsp+0x58],rdx
  40b682:	mov    rdx,QWORD PTR [rax+0x8]
  40b686:	mov    rax,QWORD PTR [rax]
  40b689:	mov    QWORD PTR [rsp+0x68],rdx
  40b68e:	mov    QWORD PTR [rsp+0x60],rax
  40b693:	lea    rbp,[rsp+0x60]
  40b698:	lea    rsi,[rsp+0x50]
  40b69d:	mov    rcx,QWORD PTR [rsp+0x40]
  40b6a2:	mov    r8,rbp
  40b6a5:	mov    rdx,rsi
  40b6a8:	call   0x40e100
  40b6ad:	test   eax,eax
  40b6af:	jns    0x40b616
  40b6b5:	mov    ecx,eax
  40b6b7:	call   0x40dc88
  40b6bc:	mov    rbx,rax
  40b6bf:	call   rdi
  40b6c1:	lea    rdx,[rip+0x28938]        # 0x434000
  40b6c8:	lea    rcx,[rax+0x60]
  40b6cc:	mov    r8,rbx
  40b6cf:	call   0x409870
  40b6d4:	mov    ecx,0x1
  40b6d9:	call   0x42df60
  40b6de:	xchg   ax,ax
  40b6e0:	cmp    esi,0x600
  40b6e6:	jle    0x40b780
  40b6ec:	cmp    esi,0x800
  40b6f2:	jg     0x40b820
  40b6f8:	mov    rax,QWORD PTR [rip+0x32381]        # 0x43da80
  40b6ff:	mov    rdx,QWORD PTR [rax+0x8]
  40b703:	mov    rax,QWORD PTR [rax]
  40b706:	mov    QWORD PTR [rsp+0x50],rax
  40b70b:	mov    rax,QWORD PTR [rip+0x3235e]        # 0x43da70
  40b712:	mov    QWORD PTR [rsp+0x58],rdx
  40b717:	mov    rdx,QWORD PTR [rax+0x8]
  40b71b:	mov    rax,QWORD PTR [rax]
  40b71e:	mov    QWORD PTR [rsp+0x68],rdx
  40b723:	mov    QWORD PTR [rsp+0x60],rax
  40b728:	jmp    0x40b693
  40b72d:	nop    DWORD PTR [rax]
  40b730:	mov    eax,DWORD PTR [rip+0x3794a]        # 0x443080
  40b736:	mov    edx,DWORD PTR [rbx+0x20]
  40b739:	lea    r9,[rsp+0x48]
  40b73e:	mov    r8,QWORD PTR [rip+0x37943]        # 0x443088
  40b745:	mov    rcx,QWORD PTR [rsp+0x40]
  40b74a:	mov    QWORD PTR [rsp+0x48],rax
  40b74f:	call   0x40e120
  40b754:	test   eax,eax
  40b756:	jne    0x40b7f2
  40b75c:	cmp    DWORD PTR [rbx+0x20],0x1
  40b760:	je     0x40b7b5
  40b762:	mov    r8,QWORD PTR [rsp+0x48]
  40b767:	mov    rcx,QWORD PTR [rip+0x3791a]        # 0x443088
  40b76e:	mov    r9,r12
  40b771:	mov    edx,0x1
  40b776:	call   0x42dee0
  40b77b:	jmp    0x40b62e
  40b780:	mov    rax,QWORD PTR [rip+0x322d9]        # 0x43da60
  40b787:	mov    rdx,QWORD PTR [rax+0x8]
  40b78b:	mov    rax,QWORD PTR [rax]
  40b78e:	mov    QWORD PTR [rsp+0x50],rax
  40b793:	mov    rax,QWORD PTR [rip+0x322b6]        # 0x43da50
  40b79a:	mov    QWORD PTR [rsp+0x58],rdx
  40b79f:	mov    rdx,QWORD PTR [rax+0x8]
  40b7a3:	mov    rax,QWORD PTR [rax]
  40b7a6:	mov    QWORD PTR [rsp+0x68],rdx
  40b7ab:	mov    QWORD PTR [rsp+0x60],rax
  40b7b0:	jmp    0x40b693
  40b7b5:	mov    r8,QWORD PTR [rip+0x378cc]        # 0x443088
  40b7bc:	lea    rdx,[rip+0x2885d]        # 0x434020
  40b7c3:	mov    rcx,r12
  40b7c6:	call   0x409870
  40b7cb:	jmp    0x40b62e
  40b7d0:	mov    eax,DWORD PTR [rbx+0x98]
  40b7d6:	mov    r9d,DWORD PTR [rsp+0x3c]
  40b7db:	mov    r8,rbp
  40b7de:	mov    rdx,rsi
  40b7e1:	mov    rcx,r12
  40b7e4:	mov    DWORD PTR [rsp+0x20],eax
  40b7e8:	call   0x409b90
  40b7ed:	jmp    0x40b620
  40b7f2:	mov    ecx,eax
  40b7f4:	call   0x40dc88
  40b7f9:	mov    rbx,rax
  40b7fc:	call   rdi
  40b7fe:	lea    rdx,[rip+0x2881f]        # 0x434024
  40b805:	lea    rcx,[rax+0x60]
  40b809:	mov    r8,rbx
  40b80c:	call   0x409870
  40b811:	jmp    0x40b62e
  40b816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b820:	cmp    esi,0xc00
  40b826:	jg     0x40b860
  40b828:	mov    rax,QWORD PTR [rip+0x32271]        # 0x43daa0
  40b82f:	mov    rdx,QWORD PTR [rax+0x8]
  40b833:	mov    rax,QWORD PTR [rax]
  40b836:	mov    QWORD PTR [rsp+0x50],rax
  40b83b:	mov    rax,QWORD PTR [rip+0x3224e]        # 0x43da90
  40b842:	mov    QWORD PTR [rsp+0x58],rdx
  40b847:	mov    rdx,QWORD PTR [rax+0x8]
  40b84b:	mov    rax,QWORD PTR [rax]
  40b84e:	mov    QWORD PTR [rsp+0x68],rdx
  40b853:	mov    QWORD PTR [rsp+0x60],rax
  40b858:	jmp    0x40b693
  40b85d:	nop    DWORD PTR [rax]
  40b860:	mov    rax,QWORD PTR [rip+0x32259]        # 0x43dac0
  40b867:	mov    rdx,QWORD PTR [rax+0x8]
  40b86b:	mov    rax,QWORD PTR [rax]
  40b86e:	mov    QWORD PTR [rsp+0x50],rax
  40b873:	mov    rax,QWORD PTR [rip+0x32236]        # 0x43dab0
  40b87a:	mov    QWORD PTR [rsp+0x58],rdx
  40b87f:	mov    rdx,QWORD PTR [rax+0x8]
  40b883:	mov    rax,QWORD PTR [rax]
  40b886:	mov    QWORD PTR [rsp+0x68],rdx
  40b88b:	mov    QWORD PTR [rsp+0x60],rax
  40b890:	jmp    0x40b693
  40b895:	mov    ecx,eax
  40b897:	call   0x40dc88
  40b89c:	mov    rbx,rax
  40b89f:	call   rdi
  40b8a1:	lea    rdx,[rip+0x287e8]        # 0x434090
  40b8a8:	lea    rcx,[rax+0x60]
  40b8ac:	mov    r8,rbx
  40b8af:	call   0x409870
  40b8b4:	mov    ecx,0x1
  40b8b9:	call   0x42df60
  40b8be:	nop
  40b8bf:	nop
  40b8c0:	sub    rsp,0x38
  40b8c4:	mov    QWORD PTR [rsp+0x50],r8
  40b8c9:	lea    r8,[rsp+0x50]
  40b8ce:	mov    QWORD PTR [rsp+0x58],r9
  40b8d3:	mov    QWORD PTR [rsp+0x28],r8
  40b8d8:	call   0x4292e0
  40b8dd:	add    rsp,0x38
  40b8e1:	ret    
  40b8e2:	nop    DWORD PTR [rax+0x0]
  40b8e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b8f0:	push   r15
  40b8f2:	push   r14
  40b8f4:	push   r13
  40b8f6:	push   r12
  40b8f8:	push   rbp
  40b8f9:	push   rdi
  40b8fa:	push   rsi
  40b8fb:	push   rbx
  40b8fc:	sub    rsp,0x78
  40b900:	mov    r14,QWORD PTR [rip+0x3ced9]        # 0x4487e0
  40b907:	mov    rbp,r8
  40b90a:	mov    ebx,ecx
  40b90c:	mov    rdi,rdx
  40b90f:	mov    QWORD PTR [rdx],0x0
  40b916:	mov    DWORD PTR [rsp+0x4c],0x0
  40b91e:	call   r14
  40b921:	lea    rdx,[rip+0x287b8]        # 0x4340e0
  40b928:	lea    rcx,[rax+0x60]
  40b92c:	call   0x40b8c0
  40b931:	mov    rcx,QWORD PTR [rbp+0x8]
  40b935:	test   rcx,rcx
  40b938:	je     0x40bab0
  40b93e:	lea    rdx,[rsp+0x60]
  40b943:	call   0x40e068
  40b948:	test   eax,eax
  40b94a:	js     0x40bae2
  40b950:	lea    rax,[rsp+0x4c]
  40b955:	mov    rbx,QWORD PTR [rsp+0x60]
  40b95a:	mov    r15d,DWORD PTR [rsp+0x68]
  40b95f:	lea    rsi,[rip+0x3779a]        # 0x443100
  40b966:	lea    r13,[rip+0x37f93]        # 0x443900
  40b96d:	lea    r12,[rsp+0x50]
  40b972:	mov    QWORD PTR [rsp+0x38],rax
  40b977:	jmp    0x40b9d0
  40b979:	nop    DWORD PTR [rax+0x0]
  40b980:	add    QWORD PTR [rdi],0x1
  40b984:	cmp    DWORD PTR [rbp+0x1c],0x1
  40b988:	jne    0x40ba70
  40b98e:	lea    rdx,[rip+0x287a6]        # 0x43413b
  40b995:	mov    rcx,rbx
  40b998:	call   0x42de08
  40b99d:	test   rax,rax
  40b9a0:	je     0x40ba70
  40b9a6:	mov    rcx,QWORD PTR [rsp+0x60]
  40b9ab:	lea    rbx,[rax+0x1]
  40b9af:	mov    rax,rcx
  40b9b2:	sub    rax,rbx
  40b9b5:	mov    r15d,eax
  40b9b8:	add    r15d,DWORD PTR [rsp+0x68]
  40b9bd:	js     0x40ba75
  40b9c3:	add    rsi,0x8
  40b9c7:	cmp    rsi,r13
  40b9ca:	je     0x40ba75
  40b9d0:	mov    rcx,rsi
  40b9d3:	call   0x40da30
  40b9d8:	test   eax,eax
  40b9da:	js     0x40bab8
  40b9e0:	mov    DWORD PTR [rsp+0x20],0x0
  40b9e8:	mov    rcx,QWORD PTR [rsi]
  40b9eb:	xor    r9d,r9d
  40b9ee:	mov    r8d,DWORD PTR [rbp+0x1c]
  40b9f2:	mov    rdx,r12
  40b9f5:	mov    QWORD PTR [rsp+0x50],rbx
  40b9fa:	mov    DWORD PTR [rsp+0x58],r15d
  40b9ff:	call   0x40da40
  40ba04:	cmp    eax,0xffffffe8
  40ba07:	je     0x40ba41
  40ba09:	test   eax,eax
  40ba0b:	jns    0x40b980
  40ba11:	cmp    QWORD PTR [rdi],0x0
  40ba15:	jne    0x40ba70
  40ba17:	mov    ecx,eax
  40ba19:	call   0x40dc88
  40ba1e:	mov    rbx,rax
  40ba21:	call   r14
  40ba24:	lea    rdx,[rip+0x286fd]        # 0x434128
  40ba2b:	lea    rcx,[rax+0x60]
  40ba2f:	mov    r8,rbx
  40ba32:	call   0x40b8c0
  40ba37:	mov    ecx,0x1
  40ba3c:	call   0x42df60
  40ba41:	mov    rdx,QWORD PTR [rsp+0x38]
  40ba46:	xor    r8d,r8d
  40ba49:	mov    rcx,rbp
  40ba4c:	call   0x409e60
  40ba51:	mov    r9,rax
  40ba54:	mov    eax,DWORD PTR [rsp+0x4c]
  40ba58:	mov    rcx,QWORD PTR [rsi]
  40ba5b:	mov    rdx,r12
  40ba5e:	mov    DWORD PTR [rsp+0x20],eax
  40ba62:	mov    r8d,DWORD PTR [rbp+0x1c]
  40ba66:	call   0x40da40
  40ba6b:	jmp    0x40ba09
  40ba6d:	nop    DWORD PTR [rax]
  40ba70:	mov    rcx,QWORD PTR [rsp+0x60]
  40ba75:	mov    rax,QWORD PTR [rip+0x31f94]        # 0x43da10
  40ba7c:	call   QWORD PTR [rax]
  40ba7e:	mov    rbx,QWORD PTR [rdi]
  40ba81:	call   r14
  40ba84:	lea    rdx,[rip+0x286b7]        # 0x434142
  40ba8b:	lea    rcx,[rax+0x60]
  40ba8f:	mov    r8d,ebx
  40ba92:	call   0x40b8c0
  40ba97:	lea    rax,[rip+0x37662]        # 0x443100
  40ba9e:	add    rsp,0x78
  40baa2:	pop    rbx
  40baa3:	pop    rsi
  40baa4:	pop    rdi
  40baa5:	pop    rbp
  40baa6:	pop    r12
  40baa8:	pop    r13
  40baaa:	pop    r14
  40baac:	pop    r15
  40baae:	ret    
  40baaf:	nop
  40bab0:	test   ebx,ebx
  40bab2:	jne    0x40bb06
  40bab4:	xor    eax,eax
  40bab6:	jmp    0x40ba9e
  40bab8:	mov    ecx,eax
  40baba:	call   0x40dc88
  40babf:	mov    rbx,rax
  40bac2:	call   r14
  40bac5:	lea    rdx,[rip+0x2864b]        # 0x434117
  40bacc:	lea    rcx,[rax+0x60]
  40bad0:	mov    r8,rbx
  40bad3:	call   0x40b8c0
  40bad8:	mov    ecx,0x1
  40badd:	call   0x42df60
  40bae2:	mov    rbx,QWORD PTR [rbp+0x8]
  40bae6:	call   r14
  40bae9:	lea    rdx,[rip+0x28624]        # 0x434114
  40baf0:	lea    rcx,[rax+0x60]
  40baf4:	mov    r8,rbx
  40baf7:	call   0x40b8c0
  40bafc:	mov    ecx,0x1
  40bb01:	call   0x42df60
  40bb06:	call   r14
  40bb09:	lea    rdx,[rip+0x285ed]        # 0x4340fd
  40bb10:	lea    rcx,[rax+0x60]
  40bb14:	call   0x40b8c0
  40bb19:	mov    ecx,0x1
  40bb1e:	call   0x42df60
  40bb23:	nop
  40bb24:	nop
  40bb25:	nop
  40bb26:	nop
  40bb27:	nop
  40bb28:	nop
  40bb29:	nop
  40bb2a:	nop
  40bb2b:	nop
  40bb2c:	nop
  40bb2d:	nop
  40bb2e:	nop
  40bb2f:	nop
  40bb30:	sub    rsp,0x38
  40bb34:	mov    QWORD PTR [rsp+0x48],rdx
  40bb39:	lea    rdx,[rsp+0x48]
  40bb3e:	mov    QWORD PTR [rsp+0x50],r8
  40bb43:	mov    QWORD PTR [rsp+0x58],r9
  40bb48:	mov    QWORD PTR [rsp+0x28],rdx
  40bb4d:	call   0x429310
  40bb52:	add    rsp,0x38
  40bb56:	ret    
  40bb57:	nop    WORD PTR [rax+rax*1+0x0]
  40bb60:	push   rbx
  40bb61:	sub    rsp,0x20
  40bb65:	mov    rbx,rcx
  40bb68:	lea    rcx,[rip+0x285f1]        # 0x434160
  40bb6f:	call   0x40bb30
  40bb74:	mov    rcx,rbx
  40bb77:	call   0x40e0e0
  40bb7c:	mov    ecx,eax
  40bb7e:	mov    ebx,eax
  40bb80:	call   0x40e0d8
  40bb85:	lea    rcx,[rip+0x285f6]        # 0x434182
  40bb8c:	mov    rdx,rax
  40bb8f:	call   0x40bb30
  40bb94:	mov    ecx,ebx
  40bb96:	call   0x40e0d0
  40bb9b:	lea    rcx,[rip+0x285f4]        # 0x434196
  40bba2:	lea    edx,[rax*8+0x0]
  40bba9:	add    rsp,0x20
  40bbad:	pop    rbx
  40bbae:	jmp    0x40bb30
  40bbb0:	sub    rsp,0x38
  40bbb4:	mov    QWORD PTR [rsp+0x50],r8
  40bbb9:	lea    r8,[rsp+0x50]
  40bbbe:	mov    QWORD PTR [rsp+0x58],r9
  40bbc3:	mov    QWORD PTR [rsp+0x28],r8
  40bbc8:	call   0x4292e0
  40bbcd:	add    rsp,0x38
  40bbd1:	ret    
  40bbd2:	nop    DWORD PTR [rax+0x0]
  40bbd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bbe0:	push   rdi
  40bbe1:	push   rsi
  40bbe2:	push   rbx
  40bbe3:	sub    rsp,0x50
  40bbe7:	mov    rbx,rcx
  40bbea:	lea    rcx,[rip+0x285bf]        # 0x4341b0
  40bbf1:	mov    esi,r8d
  40bbf4:	call   0x40bb30
  40bbf9:	mov    rcx,rbx
  40bbfc:	call   0x40e138
  40bc01:	lea    rcx,[rip+0x285c7]        # 0x4341cf
  40bc08:	mov    edx,eax
  40bc0a:	call   0x40bb30
  40bc0f:	mov    rcx,rbx
  40bc12:	call   0x40e130
  40bc17:	lea    rcx,[rip+0x285ca]        # 0x4341e8
  40bc1e:	mov    edx,eax
  40bc20:	call   0x40bb30
  40bc25:	mov    rcx,rbx
  40bc28:	call   0x40e140
  40bc2d:	lea    rcx,[rip+0x285cc]        # 0x434200
  40bc34:	mov    edx,eax
  40bc36:	call   0x40bb30
  40bc3b:	test   esi,esi
  40bc3d:	jne    0x40bc50
  40bc3f:	add    rsp,0x50
  40bc43:	pop    rbx
  40bc44:	pop    rsi
  40bc45:	pop    rdi
  40bc46:	ret    
  40bc47:	nop    WORD PTR [rax+rax*1+0x0]
  40bc50:	lea    rsi,[rsp+0x40]
  40bc55:	lea    rdi,[rsp+0x30]
  40bc5a:	mov    rcx,rbx
  40bc5d:	mov    QWORD PTR [rsp+0x30],0x0
  40bc66:	mov    DWORD PTR [rsp+0x38],0x0
  40bc6e:	mov    r8,rsi
  40bc71:	mov    rdx,rdi
  40bc74:	mov    QWORD PTR [rsp+0x40],0x0
  40bc7d:	mov    DWORD PTR [rsp+0x48],0x0
  40bc85:	mov    QWORD PTR [rsp+0x20],0x0
  40bc8e:	mov    QWORD PTR [rsp+0x28],0x0
  40bc97:	call   0x40e148
  40bc9c:	test   eax,eax
  40bc9e:	mov    ebx,eax
  40bca0:	jne    0x40bd00
  40bca2:	lea    rcx,[rsp+0x20]
  40bca7:	call   0x40e0f8
  40bcac:	test   eax,eax
  40bcae:	mov    ebx,eax
  40bcb0:	je     0x40bd20
  40bcb2:	call   QWORD PTR [rip+0x3cb28]        # 0x4487e0
  40bcb8:	lea    rdx,[rip+0x28578]        # 0x434237
  40bcbf:	lea    rcx,[rax+0x60]
  40bcc3:	mov    r8d,ebx
  40bcc6:	xor    esi,esi
  40bcc8:	call   0x40bbb0
  40bccd:	mov    rbx,QWORD PTR [rip+0x31d3c]        # 0x43da10
  40bcd4:	mov    rcx,rsi
  40bcd7:	call   QWORD PTR [rbx]
  40bcd9:	mov    rcx,QWORD PTR [rsp+0x40]
  40bcde:	call   QWORD PTR [rbx]
  40bce0:	mov    rcx,QWORD PTR [rsp+0x30]
  40bce5:	call   QWORD PTR [rbx]
  40bce7:	mov    rcx,QWORD PTR [rsp+0x20]
  40bcec:	call   0x40e128
  40bcf1:	nop
  40bcf2:	add    rsp,0x50
  40bcf6:	pop    rbx
  40bcf7:	pop    rsi
  40bcf8:	pop    rdi
  40bcf9:	ret    
  40bcfa:	nop    WORD PTR [rax+rax*1+0x0]
  40bd00:	call   QWORD PTR [rip+0x3cada]        # 0x4487e0
  40bd06:	lea    rdx,[rip+0x28512]        # 0x43421f
  40bd0d:	lea    rcx,[rax+0x60]
  40bd11:	mov    r8d,ebx
  40bd14:	xor    esi,esi
  40bd16:	call   0x40bbb0
  40bd1b:	jmp    0x40bccd
  40bd1d:	nop    DWORD PTR [rax]
  40bd20:	mov    rcx,QWORD PTR [rsp+0x20]
  40bd25:	mov    r8,rdi
  40bd28:	mov    rdx,rsi
  40bd2b:	call   0x40e100
  40bd30:	test   eax,eax
  40bd32:	mov    ebx,eax
  40bd34:	jne    0x40bd80
  40bd36:	lea    rdi,[rsp+0x28]
  40bd3b:	mov    rcx,QWORD PTR [rsp+0x20]
  40bd40:	xor    r8d,r8d
  40bd43:	mov    edx,0x1
  40bd48:	mov    r9,rdi
  40bd4b:	call   0x40e120
  40bd50:	cmp    eax,0xffffffcd
  40bd53:	mov    ebx,eax
  40bd55:	je     0x40bda0
  40bd57:	call   QWORD PTR [rip+0x3ca83]        # 0x4487e0
  40bd5d:	lea    rdx,[rip+0x28514]        # 0x434278
  40bd64:	lea    rcx,[rax+0x60]
  40bd68:	mov    r8d,ebx
  40bd6b:	xor    esi,esi
  40bd6d:	call   0x40bbb0
  40bd72:	jmp    0x40bccd
  40bd77:	nop    WORD PTR [rax+rax*1+0x0]
  40bd80:	call   QWORD PTR [rip+0x3ca5a]        # 0x4487e0
  40bd86:	lea    rdx,[rip+0x284cb]        # 0x434258
  40bd8d:	lea    rcx,[rax+0x60]
  40bd91:	mov    r8d,ebx
  40bd94:	xor    esi,esi
  40bd96:	call   0x40bbb0
  40bd9b:	jmp    0x40bccd
  40bda0:	mov    rax,QWORD PTR [rip+0x31c79]        # 0x43da20
  40bda7:	mov    rcx,QWORD PTR [rsp+0x28]
  40bdac:	call   QWORD PTR [rax]
  40bdae:	test   rax,rax
  40bdb1:	mov    rsi,rax
  40bdb4:	je     0x40be07
  40bdb6:	mov    rcx,QWORD PTR [rsp+0x20]
  40bdbb:	mov    r9,rdi
  40bdbe:	mov    r8,rax
  40bdc1:	mov    edx,0x1
  40bdc6:	call   0x40e120
  40bdcb:	test   eax,eax
  40bdcd:	mov    ebx,eax
  40bdcf:	je     0x40bdef
  40bdd1:	call   QWORD PTR [rip+0x3ca09]        # 0x4487e0
  40bdd7:	lea    rdx,[rip+0x284d2]        # 0x4342b0
  40bdde:	lea    rcx,[rax+0x60]
  40bde2:	mov    r8d,ebx
  40bde5:	call   0x40bbb0
  40bdea:	jmp    0x40bccd
  40bdef:	mov    edx,DWORD PTR [rsp+0x28]
  40bdf3:	lea    rcx,[rip+0x284da]        # 0x4342d4
  40bdfa:	mov    r8,rsi
  40bdfd:	call   0x40bb30
  40be02:	jmp    0x40bccd
  40be07:	call   QWORD PTR [rip+0x3c9d3]        # 0x4487e0
  40be0d:	lea    rdx,[rip+0x28486]        # 0x43429a
  40be14:	lea    rcx,[rax+0x60]
  40be18:	mov    r8d,ebx
  40be1b:	call   0x40bbb0
  40be20:	jmp    0x40bccd
  40be25:	nop
  40be26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be30:	sub    rsp,0x38
  40be34:	lea    rdx,[rip+0x284b2]        # 0x4342ed
  40be3b:	mov    QWORD PTR [rsp+0x50],r8
  40be40:	lea    r8,[rsp+0x50]
  40be45:	mov    QWORD PTR [rsp+0x58],r9
  40be4a:	mov    QWORD PTR [rsp+0x28],r8
  40be4f:	call   0x4293b0
  40be54:	add    rsp,0x38
  40be58:	ret    
  40be59:	nop    DWORD PTR [rax+0x0]
  40be60:	push   r14
  40be62:	push   r13
  40be64:	push   r12
  40be66:	push   rbp
  40be67:	push   rdi
  40be68:	push   rsi
  40be69:	push   rbx
  40be6a:	sub    rsp,0x20
  40be6e:	lea    rax,[rip+0x28482]        # 0x4342f7
  40be75:	test   rdx,rdx
  40be78:	je     0x40beea
  40be7a:	lea    r8,[rdx+rdx*2+0x1]
  40be7f:	lea    rax,[rip+0x28479]        # 0x4342ff
  40be86:	cmp    r8,0x3ff
  40be8d:	ja     0x40beea
  40be8f:	lea    r14,[rdx-0x1]
  40be93:	lea    rsi,[rip+0x37aa6]        # 0x443940
  40be9a:	lea    r13,[rip+0x28453]        # 0x4342f4
  40bea1:	lea    r12,[rip+0x2844d]        # 0x4342f5
  40bea8:	mov    rdi,rdx
  40beab:	mov    rbp,rcx
  40beae:	xor    ebx,ebx
  40beb0:	movzx  r8d,BYTE PTR [rbp+rbx*1+0x0]
  40beb6:	cmp    r14,rbx
  40beb9:	mov    r9,r12
  40bebc:	lea    rdx,[rip+0x2842a]        # 0x4342ed
  40bec3:	cmove  r9,r13
  40bec7:	mov    rcx,rsi
  40beca:	add    rbx,0x1
  40bece:	add    rsi,0x3
  40bed2:	call   0x40be30
  40bed7:	cmp    rbx,rdi
  40beda:	jne    0x40beb0
  40bedc:	lea    rax,[rip+0x37a5d]        # 0x443940
  40bee3:	mov    BYTE PTR [rip+0x37e55],0x0        # 0x443d3f
  40beea:	add    rsp,0x20
  40beee:	pop    rbx
  40beef:	pop    rsi
  40bef0:	pop    rdi
  40bef1:	pop    rbp
  40bef2:	pop    r12
  40bef4:	pop    r13
  40bef6:	pop    r14
  40bef8:	ret    
  40bef9:	nop    DWORD PTR [rax+0x0]
  40bf00:	push   rdi
  40bf01:	push   rbx
  40bf02:	sub    rsp,0x78
  40bf06:	xor    eax,eax
  40bf08:	lea    r10,[rsp+0x40]
  40bf0d:	mov    rbx,rcx
  40bf10:	test   rdx,rdx
  40bf13:	mov    ecx,0x6
  40bf18:	mov    DWORD PTR [rsp+0x2c],0x0
  40bf20:	mov    rdi,r10
  40bf23:	rep stos QWORD PTR es:[rdi],rax
  40bf26:	je     0x40bff0
  40bf2c:	mov    DWORD PTR [rsp+0x40],0x1
  40bf34:	mov    QWORD PTR [rsp+0x48],rdx
  40bf39:	mov    al,0x1
  40bf3b:	test   r8,r8
  40bf3e:	je     0x40bf5b
  40bf40:	mov    edx,eax
  40bf42:	add    eax,0x1
  40bf45:	lea    r9,[rdx+rdx*2]
  40bf49:	shl    r9,0x3
  40bf4d:	mov    DWORD PTR [rsp+r9*1+0x40],0x2
  40bf56:	mov    QWORD PTR [rsp+r9*1+0x48],r8
  40bf5b:	lea    r9,[rsp+0x2c]
  40bf60:	mov    r8d,eax
  40bf63:	mov    rdx,r10
  40bf66:	mov    rcx,rbx
  40bf69:	call   0x40e188
  40bf6e:	cmp    eax,0xffffffcf
  40bf71:	je     0x40c020
  40bf77:	test   eax,eax
  40bf79:	js     0x40bfd0
  40bf7b:	mov    rcx,rbx
  40bf7e:	call   0x40e1a8
  40bf83:	mov    ecx,DWORD PTR [rsp+0x2c]
  40bf87:	lea    r8,[rsp+0x30]
  40bf8c:	xor    r9d,r9d
  40bf8f:	mov    edx,eax
  40bf91:	call   0x40e190
  40bf96:	test   eax,eax
  40bf98:	js     0x40c000
  40bf9a:	mov    rdx,QWORD PTR [rsp+0x30]
  40bf9f:	lea    rcx,[rip+0x283f2]        # 0x434398
  40bfa6:	call   0x40bb30
  40bfab:	mov    rax,QWORD PTR [rip+0x31a5e]        # 0x43da10
  40bfb2:	mov    rcx,QWORD PTR [rsp+0x30]
  40bfb7:	call   QWORD PTR [rax]
  40bfb9:	mov    edx,DWORD PTR [rsp+0x2c]
  40bfbd:	xor    eax,eax
  40bfbf:	test   edx,edx
  40bfc1:	sete   al
  40bfc4:	add    rsp,0x78
  40bfc8:	pop    rbx
  40bfc9:	pop    rdi
  40bfca:	ret    
  40bfcb:	nop    DWORD PTR [rax+rax*1+0x0]
  40bfd0:	mov    ecx,eax
  40bfd2:	call   0x40dc88
  40bfd7:	lea    rcx,[rip+0x2835a]        # 0x434338
  40bfde:	mov    rdx,rax
  40bfe1:	call   0x40bb30
  40bfe6:	xor    eax,eax
  40bfe8:	add    rsp,0x78
  40bfec:	pop    rbx
  40bfed:	pop    rdi
  40bfee:	ret    
  40bfef:	nop
  40bff0:	xor    eax,eax
  40bff2:	jmp    0x40bf3b
  40bff7:	nop    WORD PTR [rax+rax*1+0x0]
  40c000:	mov    ecx,eax
  40c002:	call   0x40dc88
  40c007:	lea    rcx,[rip+0x2835a]        # 0x434368
  40c00e:	mov    rdx,rax
  40c011:	call   0x40bb30
  40c016:	xor    eax,eax
  40c018:	add    rsp,0x78
  40c01c:	pop    rbx
  40c01d:	pop    rdi
  40c01e:	ret    
  40c01f:	nop
  40c020:	lea    rcx,[rip+0x282e9]        # 0x434310
  40c027:	call   0x40bb30
  40c02c:	xor    eax,eax
  40c02e:	jmp    0x40bfc4
  40c030:	push   r15
  40c032:	push   r14
  40c034:	push   r13
  40c036:	push   r12
  40c038:	push   rbp
  40c039:	push   rdi
  40c03a:	push   rsi
  40c03b:	push   rbx
  40c03c:	sub    rsp,0x68
  40c040:	cmp    edx,0x1
  40c043:	mov    rbx,rcx
  40c046:	mov    rsi,r8
  40c049:	sbb    edi,edi
  40c04b:	mov    r12d,r9d
  40c04e:	and    edi,0x3
  40c051:	call   0x40e1c0
  40c056:	test   eax,eax
  40c058:	jne    0x40c300
  40c05e:	mov    rcx,rbx
  40c061:	call   0x40e1a8
  40c066:	cmp    eax,0x1
  40c069:	je     0x40c170
  40c06f:	cmp    eax,0x2
  40c072:	je     0x40c092
  40c074:	lea    rcx,[rip+0x28435]        # 0x4344b0
  40c07b:	call   0x40bb30
  40c080:	nop
  40c081:	add    rsp,0x68
  40c085:	pop    rbx
  40c086:	pop    rsi
  40c087:	pop    rdi
  40c088:	pop    rbp
  40c089:	pop    r12
  40c08b:	pop    r13
  40c08d:	pop    r14
  40c08f:	pop    r15
  40c091:	ret    
  40c092:	lea    rdx,[rip+0x283f4]        # 0x43448d
  40c099:	mov    rcx,rsi
  40c09c:	mov    DWORD PTR [rsp+0x3c],0x0
  40c0a4:	call   0x40bbb0
  40c0a9:	lea    rdx,[rsp+0x3c]
  40c0ae:	mov    rcx,rbx
  40c0b1:	call   0x40e1b0
  40c0b6:	mov    rbx,rax
  40c0b9:	mov    eax,DWORD PTR [rsp+0x3c]
  40c0bd:	test   eax,eax
  40c0bf:	je     0x40c081
  40c0c1:	lea    rcx,[rsp+0x40]
  40c0c6:	call   0x40e028
  40c0cb:	mov    rcx,QWORD PTR [rsp+0x40]
  40c0d0:	xor    r8d,r8d
  40c0d3:	mov    rdx,rbx
  40c0d6:	call   0x40e030
  40c0db:	test   eax,eax
  40c0dd:	js     0x40c370
  40c0e3:	mov    rcx,QWORD PTR [rsp+0x40]
  40c0e8:	lea    r8,[rsp+0x50]
  40c0ed:	mov    edx,edi
  40c0ef:	call   0x40e020
  40c0f4:	test   eax,eax
  40c0f6:	je     0x40c3c8
  40c0fc:	test   r12d,r12d
  40c0ff:	je     0x40c15b
  40c101:	lea    rdi,[rsp+0x48]
  40c106:	mov    rcx,QWORD PTR [rsp+0x40]
  40c10b:	xor    r8d,r8d
  40c10e:	mov    edx,0x1
  40c113:	mov    QWORD PTR [rsp+0x48],0x0
  40c11c:	xor    ebx,ebx
  40c11e:	mov    r9,rdi
  40c121:	call   0x40e038
  40c126:	cmp    eax,0xffffffcd
  40c129:	je     0x40c3ef
  40c12f:	test   eax,eax
  40c131:	js     0x40c3a0
  40c137:	mov    rdx,rsi
  40c13a:	mov    rcx,rbx
  40c13d:	call   0x42df18
  40c142:	mov    ecx,0xa
  40c147:	mov    rdx,rsi
  40c14a:	call   0x42df20
  40c14f:	mov    rax,QWORD PTR [rip+0x318ba]        # 0x43da10
  40c156:	mov    rcx,rbx
  40c159:	call   QWORD PTR [rax]
  40c15b:	mov    rcx,QWORD PTR [rsp+0x40]
  40c160:	call   0x40e040
  40c165:	jmp    0x40c081
  40c16a:	nop    WORD PTR [rax+rax*1+0x0]
  40c170:	lea    rdx,[rsp+0x3c]
  40c175:	mov    rcx,rbx
  40c178:	mov    DWORD PTR [rsp+0x3c],0x0
  40c180:	call   0x40e1b0
  40c185:	mov    ecx,DWORD PTR [rsp+0x3c]
  40c189:	mov    r13,rax
  40c18c:	test   ecx,ecx
  40c18e:	je     0x40c311
  40c194:	lea    rdx,[rip+0x2824c]        # 0x4343e7
  40c19b:	mov    rcx,rsi
  40c19e:	call   0x40bbb0
  40c1a3:	mov    r8d,DWORD PTR [rsp+0x3c]
  40c1a8:	lea    rdx,[rip+0x28259]        # 0x434408
  40c1af:	mov    rcx,rsi
  40c1b2:	call   0x40bbb0
  40c1b7:	mov    edx,DWORD PTR [rsp+0x3c]
  40c1bb:	test   edx,edx
  40c1bd:	je     0x40c081
  40c1c3:	lea    rax,[rsp+0x48]
  40c1c8:	xor    ebx,ebx
  40c1ca:	lea    r14,[rsp+0x40]
  40c1cf:	lea    r15,[rsp+0x50]
  40c1d4:	mov    QWORD PTR [rsp+0x20],rax
  40c1d9:	mov    rax,QWORD PTR [rip+0x31830]        # 0x43da10
  40c1e0:	mov    QWORD PTR [rsp+0x28],rax
  40c1e5:	jmp    0x40c278
  40c1ea:	nop    WORD PTR [rax+rax*1+0x0]
  40c1f0:	test   r12d,r12d
  40c1f3:	je     0x40c261
  40c1f5:	mov    r9,QWORD PTR [rsp+0x20]
  40c1fa:	mov    rcx,QWORD PTR [rsp+0x40]
  40c1ff:	xor    r8d,r8d
  40c202:	mov    edx,0x1
  40c207:	mov    QWORD PTR [rsp+0x48],0x0
  40c210:	xor    ebp,ebp
  40c212:	call   0x40db88
  40c217:	cmp    eax,0xffffffcd
  40c21a:	je     0x40c334
  40c220:	test   eax,eax
  40c222:	js     0x40c3a0
  40c228:	mov    rax,QWORD PTR [rsp+0x48]
  40c22d:	mov    rdx,rsi
  40c230:	mov    ecx,0xa
  40c235:	mov    BYTE PTR [rbp+rax*1+0x0],0x0
  40c23a:	call   0x42df20
  40c23f:	mov    rdx,rsi
  40c242:	mov    rcx,rbp
  40c245:	call   0x42df18
  40c24a:	mov    ecx,0xa
  40c24f:	mov    rdx,rsi
  40c252:	call   0x42df20
  40c257:	mov    rax,QWORD PTR [rsp+0x28]
  40c25c:	mov    rcx,rbp
  40c25f:	call   QWORD PTR [rax]
  40c261:	mov    rcx,QWORD PTR [rsp+0x40]
  40c266:	add    ebx,0x1
  40c269:	call   0x40db90
  40c26e:	cmp    ebx,DWORD PTR [rsp+0x3c]
  40c272:	jae    0x40c081
  40c278:	mov    rcx,r14
  40c27b:	call   0x40db40
  40c280:	mov    edx,ebx
  40c282:	mov    rcx,QWORD PTR [rsp+0x40]
  40c287:	xor    r8d,r8d
  40c28a:	shl    rdx,0x4
  40c28e:	add    rdx,r13
  40c291:	call   0x40db48
  40c296:	test   eax,eax
  40c298:	js     0x40c370
  40c29e:	lea    rdx,[rip+0x281a5]        # 0x43444a
  40c2a5:	mov    r8d,ebx
  40c2a8:	mov    rcx,rsi
  40c2ab:	call   0x40bbb0
  40c2b0:	test   ebx,ebx
  40c2b2:	je     0x40c330
  40c2b4:	cmp    edi,0x3
  40c2b7:	jne    0x40c330
  40c2b9:	mov    edx,0x1
  40c2be:	mov    edi,0x1
  40c2c3:	mov    rcx,QWORD PTR [rsp+0x40]
  40c2c8:	mov    r8,r15
  40c2cb:	call   0x40db28
  40c2d0:	test   eax,eax
  40c2d2:	jne    0x40c1f0
  40c2d8:	mov    r8,QWORD PTR [rsp+0x50]
  40c2dd:	lea    rdx,[rip+0x28182]        # 0x434466
  40c2e4:	mov    rcx,rsi
  40c2e7:	call   0x40bbb0
  40c2ec:	mov    rax,QWORD PTR [rip+0x3171d]        # 0x43da10
  40c2f3:	mov    rcx,QWORD PTR [rsp+0x50]
  40c2f8:	call   QWORD PTR [rax]
  40c2fa:	jmp    0x40c1f0
  40c2ff:	nop
  40c300:	lea    rcx,[rip+0x280a1]        # 0x4343a8
  40c307:	call   0x40bb30
  40c30c:	jmp    0x40c05e
  40c311:	call   QWORD PTR [rip+0x3c4c9]        # 0x4487e0
  40c317:	lea    rdx,[rip+0x280b1]        # 0x4343cf
  40c31e:	lea    rcx,[rax+0x60]
  40c322:	call   0x40bbb0
  40c327:	jmp    0x40c081
  40c32c:	nop    DWORD PTR [rax+0x0]
  40c330:	mov    edx,edi
  40c332:	jmp    0x40c2c3
  40c334:	mov    rax,QWORD PTR [rsp+0x48]
  40c339:	lea    rcx,[rax+0x1]
  40c33d:	call   0x412940
  40c342:	test   rax,rax
  40c345:	mov    rbp,rax
  40c348:	je     0x40c41b
  40c34e:	mov    r9,QWORD PTR [rsp+0x20]
  40c353:	mov    rcx,QWORD PTR [rsp+0x40]
  40c358:	mov    r8,rax
  40c35b:	mov    edx,0x1
  40c360:	call   0x40db88
  40c365:	jmp    0x40c220
  40c36a:	nop    WORD PTR [rax+rax*1+0x0]
  40c370:	mov    ecx,eax
  40c372:	call   0x40dc88
  40c377:	mov    rbx,rax
  40c37a:	call   QWORD PTR [rip+0x3c460]        # 0x4487e0
  40c380:	lea    rdx,[rip+0x280af]        # 0x434436
  40c387:	lea    rcx,[rax+0x60]
  40c38b:	mov    r8,rbx
  40c38e:	call   0x40bbb0
  40c393:	jmp    0x40c081
  40c398:	nop    DWORD PTR [rax+rax*1+0x0]
  40c3a0:	mov    ecx,eax
  40c3a2:	call   0x40dc88
  40c3a7:	mov    rbx,rax
  40c3aa:	call   QWORD PTR [rip+0x3c430]        # 0x4487e0
  40c3b0:	lea    rdx,[rip+0x280c2]        # 0x434479
  40c3b7:	lea    rcx,[rax+0x60]
  40c3bb:	mov    r8,rbx
  40c3be:	call   0x40bbb0
  40c3c3:	jmp    0x40c081
  40c3c8:	mov    r8,QWORD PTR [rsp+0x50]
  40c3cd:	lea    rdx,[rip+0x280d6]        # 0x4344aa
  40c3d4:	mov    rcx,rsi
  40c3d7:	call   0x40bbb0
  40c3dc:	mov    rax,QWORD PTR [rip+0x3162d]        # 0x43da10
  40c3e3:	mov    rcx,QWORD PTR [rsp+0x50]
  40c3e8:	call   QWORD PTR [rax]
  40c3ea:	jmp    0x40c0fc
  40c3ef:	mov    rcx,QWORD PTR [rsp+0x48]
  40c3f4:	call   0x412940
  40c3f9:	test   rax,rax
  40c3fc:	mov    rbx,rax
  40c3ff:	je     0x40c41b
  40c401:	mov    rcx,QWORD PTR [rsp+0x40]
  40c406:	mov    r9,rdi
  40c409:	mov    r8,rax
  40c40c:	mov    edx,0x1
  40c411:	call   0x40e038
  40c416:	jmp    0x40c12f
  40c41b:	call   QWORD PTR [rip+0x3c3bf]        # 0x4487e0
  40c421:	lea    rdx,[rip+0x28042]        # 0x43446a
  40c428:	lea    rcx,[rax+0x60]
  40c42c:	call   0x40bbb0
  40c431:	mov    ecx,0x1
  40c436:	call   0x42df60
  40c43b:	nop
  40c43c:	nop    DWORD PTR [rax+0x0]
  40c440:	push   rdi
  40c441:	push   rsi
  40c442:	push   rbx
  40c443:	sub    rsp,0x20
  40c447:	mov    edi,r8d
  40c44a:	mov    rbx,rcx
  40c44d:	mov    esi,edx
  40c44f:	call   QWORD PTR [rip+0x3c38b]        # 0x4487e0
  40c455:	lea    r8,[rax+0x30]
  40c459:	mov    r9d,edi
  40c45c:	mov    edx,esi
  40c45e:	mov    rcx,rbx
  40c461:	add    rsp,0x20
  40c465:	pop    rbx
  40c466:	pop    rsi
  40c467:	pop    rdi
  40c468:	jmp    0x40c030
  40c46d:	nop    DWORD PTR [rax]
  40c470:	push   r14
  40c472:	push   r13
  40c474:	push   r12
  40c476:	push   rbp
  40c477:	push   rdi
  40c478:	push   rsi
  40c479:	push   rbx
  40c47a:	sub    rsp,0x180
  40c481:	mov    rbx,rcx
  40c484:	mov    ebp,r8d
  40c487:	mov    edi,edx
  40c489:	mov    QWORD PTR [rsp+0x38],0x21
  40c492:	call   0x40dcd0
  40c497:	lea    rcx,[rip+0x28032]        # 0x4344d0
  40c49e:	mov    rdx,rax
  40c4a1:	mov    rsi,rax
  40c4a4:	call   0x40bb30
  40c4a9:	mov    rax,QWORD PTR [rip+0x31560]        # 0x43da10
  40c4b0:	mov    rcx,rsi
  40c4b3:	lea    rsi,[rsp+0x50]
  40c4b8:	call   QWORD PTR [rax]
  40c4ba:	lea    r8,[rsp+0x38]
  40c4bf:	mov    rdx,rsi
  40c4c2:	mov    rcx,rbx
  40c4c5:	call   0x40dcc8
  40c4ca:	mov    rdx,QWORD PTR [rsp+0x38]
  40c4cf:	mov    rcx,rsi
  40c4d2:	call   0x40be60
  40c4d7:	lea    rcx,[rip+0x28005]        # 0x4344e3
  40c4de:	mov    rdx,rax
  40c4e1:	call   0x40bb30
  40c4e6:	mov    rcx,rbx
  40c4e9:	call   0x40e080
  40c4ee:	mov    rcx,rbx
  40c4f1:	mov    esi,eax
  40c4f3:	call   0x40e1c8
  40c4f8:	cmp    eax,0x5
  40c4fb:	ja     0x40c51d
  40c4fd:	lea    r10,[rip+0x28234]        # 0x434738
  40c504:	mov    r9d,eax
  40c507:	movsxd rax,DWORD PTR [r10+r9*4]
  40c50b:	add    r10,rax
  40c50e:	jmp    r10
  40c511:	lea    rcx,[rip+0x28074]        # 0x43458c
  40c518:	call   0x40bb30
  40c51d:	lea    r13,[rsp+0x34]
  40c522:	lea    r12,[rsp+0x40]
  40c527:	mov    rcx,rbx
  40c52a:	call   0x40dd98
  40c52f:	mov    ecx,eax
  40c531:	call   0x40dda0
  40c536:	test   rax,rax
  40c539:	lea    rdx,[rip+0x27f7e]        # 0x4344be
  40c540:	je     0x40c554
  40c542:	mov    rcx,rbx
  40c545:	call   0x40dd98
  40c54a:	mov    ecx,eax
  40c54c:	call   0x40dda0
  40c551:	mov    rdx,rax
  40c554:	lea    rcx,[rip+0x28090]        # 0x4345eb
  40c55b:	call   0x40bb30
  40c560:	mov    ecx,esi
  40c562:	call   0x40e078
  40c567:	test   rax,rax
  40c56a:	lea    rdx,[rip+0x27f4d]        # 0x4344be
  40c571:	je     0x40c57d
  40c573:	mov    ecx,esi
  40c575:	call   0x40e078
  40c57a:	mov    rdx,rax
  40c57d:	lea    rcx,[rip+0x28076]        # 0x4345fa
  40c584:	call   0x40bb30
  40c589:	mov    rcx,rbx
  40c58c:	call   0x40dcc0
  40c591:	test   eax,eax
  40c593:	jne    0x40c851
  40c599:	mov    rcx,rbx
  40c59c:	call   0x40dcb8
  40c5a1:	test   eax,eax
  40c5a3:	jne    0x40c813
  40c5a9:	mov    rcx,rbx
  40c5ac:	call   0x40e180
  40c5b1:	mov    ecx,eax
  40c5b3:	call   0x40e178
  40c5b8:	test   rax,rax
  40c5bb:	lea    rdx,[rip+0x27efc]        # 0x4344be
  40c5c2:	je     0x40c5d6
  40c5c4:	mov    rcx,rbx
  40c5c7:	call   0x40e180
  40c5cc:	mov    ecx,eax
  40c5ce:	call   0x40e178
  40c5d3:	mov    rdx,rax
  40c5d6:	lea    rcx,[rip+0x28061]        # 0x43463e
  40c5dd:	call   0x40bb30
  40c5e2:	mov    rcx,rbx
  40c5e5:	call   0x40e060
  40c5ea:	mov    ecx,eax
  40c5ec:	call   0x40e058
  40c5f1:	test   rax,rax
  40c5f4:	lea    rdx,[rip+0x27ec3]        # 0x4344be
  40c5fb:	je     0x40c60f
  40c5fd:	mov    rcx,rbx
  40c600:	call   0x40e060
  40c605:	mov    ecx,eax
  40c607:	call   0x40e058
  40c60c:	mov    rdx,rax
  40c60f:	lea    rcx,[rip+0x28036]        # 0x43464c
  40c616:	call   0x40bb30
  40c61b:	mov    rcx,rbx
  40c61e:	call   0x40e160
  40c623:	mov    ecx,eax
  40c625:	call   0x40e158
  40c62a:	test   rax,rax
  40c62d:	lea    rdx,[rip+0x27e8a]        # 0x4344be
  40c634:	je     0x40c648
  40c636:	mov    rcx,rbx
  40c639:	call   0x40e160
  40c63e:	mov    ecx,eax
  40c640:	call   0x40e158
  40c645:	mov    rdx,rax
  40c648:	lea    rcx,[rip+0x28008]        # 0x434657
  40c64f:	call   0x40bb30
  40c654:	lea    rcx,[rip+0x2800f]        # 0x43466a
  40c65b:	call   0x40bb30
  40c660:	mov    rcx,rbx
  40c663:	call   0x40dcd8
  40c668:	test   eax,eax
  40c66a:	jne    0x40c802
  40c670:	mov    rcx,rbx
  40c673:	call   0x40dd08
  40c678:	test   eax,eax
  40c67a:	jne    0x40c7f1
  40c680:	mov    rcx,rbx
  40c683:	call   0x40dce0
  40c688:	test   eax,eax
  40c68a:	jne    0x40c7e0
  40c690:	mov    edx,0x1
  40c695:	mov    rcx,rbx
  40c698:	call   0x40e048
  40c69d:	test   eax,eax
  40c69f:	jne    0x40c7b0
  40c6a5:	lea    rcx,[rip+0x28015]        # 0x4346c1
  40c6ac:	call   0x40bb30
  40c6b1:	mov    rdx,r13
  40c6b4:	mov    rcx,rbx
  40c6b7:	call   0x40dc90
  40c6bc:	test   eax,eax
  40c6be:	je     0x40c790
  40c6c4:	mov    rdx,r12
  40c6c7:	mov    rcx,rbx
  40c6ca:	call   0x40e1d0
  40c6cf:	test   eax,eax
  40c6d1:	je     0x40c774
  40c6d7:	test   edi,edi
  40c6d9:	mov    rsi,QWORD PTR [rip+0x3c100]        # 0x4487e0
  40c6e0:	jne    0x40c701
  40c6e2:	call   rsi
  40c6e4:	lea    rcx,[rax+0x30]
  40c6e8:	call   0x42df48
  40c6ed:	xor    eax,eax
  40c6ef:	add    rsp,0x180
  40c6f6:	pop    rbx
  40c6f7:	pop    rsi
  40c6f8:	pop    rdi
  40c6f9:	pop    rbp
  40c6fa:	pop    r12
  40c6fc:	pop    r13
  40c6fe:	pop    r14
  40c700:	ret    
  40c701:	lea    r8,[rsp+0x80]
  40c709:	xor    edx,edx
  40c70b:	mov    rcx,rbx
  40c70e:	call   0x40dce8
  40c713:	test   eax,eax
  40c715:	jne    0x40c890
  40c71b:	lea    rcx,[rip+0x27fee]        # 0x434710
  40c722:	xor    ebx,ebx
  40c724:	call   0x40bb30
  40c729:	mov    eax,DWORD PTR [rsp+0x88]
  40c730:	test   eax,eax
  40c732:	je     0x40c75c
  40c734:	mov    rax,QWORD PTR [rsp+0x80]
  40c73c:	lea    rcx,[rip+0x27fee]        # 0x434731
  40c743:	movzx  edx,BYTE PTR [rax+rbx*1]
  40c747:	add    rbx,0x1
  40c74b:	call   0x40bb30
  40c750:	mov    eax,DWORD PTR [rsp+0x88]
  40c757:	cmp    rax,rbx
  40c75a:	ja     0x40c734
  40c75c:	lea    rcx,[rip+0x27f5e]        # 0x4346c1
  40c763:	call   0x40bb30
  40c768:	mov    rsi,QWORD PTR [rip+0x3c071]        # 0x4487e0
  40c76f:	jmp    0x40c6e2
  40c774:	mov    r8,QWORD PTR [rsp+0x40]
  40c779:	mov    edx,DWORD PTR [rsp+0x48]
  40c77d:	lea    rcx,[rip+0x27f53]        # 0x4346d7
  40c784:	call   0x40bb30
  40c789:	jmp    0x40c6d7
  40c78e:	xchg   ax,ax
  40c790:	mov    ecx,DWORD PTR [rsp+0x34]
  40c794:	call   0x40dc98
  40c799:	lea    rcx,[rip+0x27f23]        # 0x4346c3
  40c7a0:	mov    rdx,rax
  40c7a3:	call   0x40bb30
  40c7a8:	jmp    0x40c6c4
  40c7ad:	nop    DWORD PTR [rax]
  40c7b0:	xor    edx,edx
  40c7b2:	mov    rcx,rbx
  40c7b5:	call   0x40e048
  40c7ba:	lea    rdx,[rip+0x27d05]        # 0x4344c6
  40c7c1:	test   eax,eax
  40c7c3:	lea    rax,[rip+0x27b2a]        # 0x4342f4
  40c7ca:	lea    rcx,[rip+0x27ed8]        # 0x4346a9
  40c7d1:	cmovne rdx,rax
  40c7d5:	call   0x40bb30
  40c7da:	jmp    0x40c6a5
  40c7df:	nop
  40c7e0:	lea    rcx,[rip+0x27ebc]        # 0x4346a3
  40c7e7:	call   0x40bb30
  40c7ec:	jmp    0x40c690
  40c7f1:	lea    rcx,[rip+0x27e96]        # 0x43468e
  40c7f8:	call   0x40bb30
  40c7fd:	jmp    0x40c680
  40c802:	lea    rcx,[rip+0x27e6c]        # 0x434675
  40c809:	call   0x40bb30
  40c80e:	jmp    0x40c670
  40c813:	mov    rcx,rbx
  40c816:	call   0x40dcb8
  40c81b:	mov    ecx,eax
  40c81d:	call   0x40dcb0
  40c822:	test   rax,rax
  40c825:	lea    rdx,[rip+0x27c92]        # 0x4344be
  40c82c:	je     0x40c840
  40c82e:	mov    rcx,rbx
  40c831:	call   0x40dcb8
  40c836:	mov    ecx,eax
  40c838:	call   0x40dcb0
  40c83d:	mov    rdx,rax
  40c840:	lea    rcx,[rip+0x27ddf]        # 0x434626
  40c847:	call   0x40bb30
  40c84c:	jmp    0x40c5a9
  40c851:	mov    rcx,rbx
  40c854:	call   0x40dcc0
  40c859:	mov    ecx,eax
  40c85b:	call   0x40dcb0
  40c860:	test   rax,rax
  40c863:	lea    rdx,[rip+0x27c54]        # 0x4344be
  40c86a:	je     0x40c87e
  40c86c:	mov    rcx,rbx
  40c86f:	call   0x40dcc0
  40c874:	mov    ecx,eax
  40c876:	call   0x40dcb0
  40c87b:	mov    rdx,rax
  40c87e:	lea    rcx,[rip+0x27d89]        # 0x43460e
  40c885:	call   0x40bb30
  40c88a:	jmp    0x40c599
  40c88f:	nop
  40c890:	mov    ecx,eax
  40c892:	call   0x40dc88
  40c897:	mov    rbx,rax
  40c89a:	call   rsi
  40c89c:	lea    rdx,[rip+0x27e52]        # 0x4346f5
  40c8a3:	lea    rcx,[rax+0x60]
  40c8a7:	mov    r8,rbx
  40c8aa:	call   0x40bbb0
  40c8af:	jmp    0x40c6e2
  40c8b4:	lea    r13,[rsp+0x34]
  40c8b9:	lea    r12,[rsp+0x40]
  40c8be:	lea    r14,[rsp+0x80]
  40c8c6:	mov    DWORD PTR [rsp+0x20],0x0
  40c8ce:	mov    rcx,rbx
  40c8d1:	mov    QWORD PTR [rsp+0x40],0x100
  40c8da:	mov    r9,r13
  40c8dd:	mov    r8,r12
  40c8e0:	mov    rdx,r14
  40c8e3:	call   0x40dcf0
  40c8e8:	test   eax,eax
  40c8ea:	je     0x40ca42
  40c8f0:	test   bpl,0x2
  40c8f4:	jne    0x40ca20
  40c8fa:	and    ebp,0x1
  40c8fd:	jne    0x40ca05
  40c903:	lea    eax,[rsi-0x2]
  40c906:	cmp    eax,0x1
  40c909:	jbe    0x40ca74
  40c90f:	lea    eax,[rsi-0xc]
  40c912:	cmp    eax,0x1
  40c915:	ja     0x40c527
  40c91b:	lea    rdx,[rip+0x27c5f]        # 0x434581
  40c922:	mov    rcx,rbx
  40c925:	call   0x40bb60
  40c92a:	jmp    0x40c527
  40c92f:	nop
  40c930:	cmp    esi,0xb
  40c933:	je     0x40ca60
  40c939:	lea    rdx,[rip+0x27bb5]        # 0x4344f5
  40c940:	mov    r8d,edi
  40c943:	mov    rcx,rbx
  40c946:	lea    r13,[rsp+0x34]
  40c94b:	lea    r12,[rsp+0x40]
  40c950:	call   0x40bbe0
  40c955:	jmp    0x40c527
  40c95a:	nop    WORD PTR [rax+rax*1+0x0]
  40c960:	mov    rcx,rbx
  40c963:	call   0x40dca0
  40c968:	test   rax,rax
  40c96b:	je     0x40c51d
  40c971:	mov    rcx,rbx
  40c974:	lea    r13,[rsp+0x34]
  40c979:	lea    r12,[rsp+0x40]
  40c97e:	call   0x40dca0
  40c983:	lea    rcx,[rip+0x27b76]        # 0x434500
  40c98a:	mov    rdx,rax
  40c98d:	call   0x40bb30
  40c992:	jmp    0x40c527
  40c997:	nop    WORD PTR [rax+rax*1+0x0]
  40c9a0:	mov    rcx,rbx
  40c9a3:	call   0x40dd88
  40c9a8:	test   rax,rax
  40c9ab:	je     0x40c9c4
  40c9ad:	mov    rcx,rbx
  40c9b0:	call   0x40dd88
  40c9b5:	lea    rcx,[rip+0x27b74]        # 0x434530
  40c9bc:	mov    rdx,rax
  40c9bf:	call   0x40bb30
  40c9c4:	mov    rcx,rbx
  40c9c7:	call   0x40dd80
  40c9cc:	test   rax,rax
  40c9cf:	je     0x40c9e8
  40c9d1:	mov    rcx,rbx
  40c9d4:	call   0x40dd80
  40c9d9:	lea    rcx,[rip+0x27b78]        # 0x434558
  40c9e0:	mov    rdx,rax
  40c9e3:	call   0x40bb30
  40c9e8:	cmp    esi,0xa
  40c9eb:	lea    r13,[rsp+0x34]
  40c9f0:	lea    r12,[rsp+0x40]
  40c9f5:	je     0x40ca74
  40c9f7:	cmp    esi,0xe
  40c9fa:	jne    0x40c527
  40ca00:	jmp    0x40c91b
  40ca05:	mov    r8d,0x1
  40ca0b:	mov    edx,edi
  40ca0d:	mov    rcx,rbx
  40ca10:	call   0x40c440
  40ca15:	jmp    0x40c903
  40ca1a:	nop    WORD PTR [rax+rax*1+0x0]
  40ca20:	mov    rcx,rbx
  40ca23:	call   0x40e1b8
  40ca28:	test   rax,rax
  40ca2b:	jne    0x40c8fa
  40ca31:	lea    rcx,[rip+0x27b90]        # 0x4345c8
  40ca38:	call   0x40bb30
  40ca3d:	jmp    0x40c8fa
  40ca42:	mov    edx,DWORD PTR [rsp+0x34]
  40ca46:	lea    rcx,[rip+0x27b58]        # 0x4345a5
  40ca4d:	mov    r8,r14
  40ca50:	call   0x40bb30
  40ca55:	jmp    0x40c8f0
  40ca5a:	nop    WORD PTR [rax+rax*1+0x0]
  40ca60:	lea    rdx,[rip+0x27a8e]        # 0x4344f5
  40ca67:	mov    rcx,rbx
  40ca6a:	call   0x40bb60
  40ca6f:	jmp    0x40c51d
  40ca74:	lea    rdx,[rip+0x27b06]        # 0x434581
  40ca7b:	mov    r8d,edi
  40ca7e:	mov    rcx,rbx
  40ca81:	call   0x40bbe0
  40ca86:	jmp    0x40c527
  40ca8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ca90:	push   rbx
  40ca91:	sub    rsp,0x40
  40ca95:	mov    rbx,rcx
  40ca98:	call   0x40e1c0
  40ca9d:	test   eax,eax
  40ca9f:	jne    0x40cbd0
  40caa5:	mov    rcx,rbx
  40caa8:	call   0x40e1a8
  40caad:	cmp    eax,0x1
  40cab0:	je     0x40cb40
  40cab6:	cmp    eax,0x2
  40cab9:	je     0x40cad0
  40cabb:	lea    rcx,[rip+0x279ee]        # 0x4344b0
  40cac2:	call   0x40bb30
  40cac7:	nop
  40cac8:	add    rsp,0x40
  40cacc:	pop    rbx
  40cacd:	ret    
  40cace:	xchg   ax,ax
  40cad0:	lea    rdx,[rsp+0x24]
  40cad5:	mov    rcx,rbx
  40cad8:	mov    DWORD PTR [rsp+0x24],0x0
  40cae0:	call   0x40e1b0
  40cae5:	mov    rbx,rax
  40cae8:	mov    eax,DWORD PTR [rsp+0x24]
  40caec:	test   eax,eax
  40caee:	je     0x40cac8
  40caf0:	lea    rcx,[rsp+0x28]
  40caf5:	call   0x40e028
  40cafa:	mov    rcx,QWORD PTR [rsp+0x28]
  40caff:	xor    r8d,r8d
  40cb02:	mov    rdx,rbx
  40cb05:	call   0x40e030
  40cb0a:	test   eax,eax
  40cb0c:	js     0x40cc00
  40cb12:	mov    rcx,QWORD PTR [rsp+0x28]
  40cb17:	lea    r8,[rsp+0x30]
  40cb1c:	mov    edx,0x3
  40cb21:	call   0x40e020
  40cb26:	test   eax,eax
  40cb28:	je     0x40cc30
  40cb2e:	mov    rcx,QWORD PTR [rsp+0x28]
  40cb33:	call   0x40e040
  40cb38:	jmp    0x40cac8
  40cb3a:	nop    WORD PTR [rax+rax*1+0x0]
  40cb40:	lea    rdx,[rsp+0x24]
  40cb45:	mov    rcx,rbx
  40cb48:	mov    DWORD PTR [rsp+0x24],0x0
  40cb50:	call   0x40e1b0
  40cb55:	mov    edx,DWORD PTR [rsp+0x24]
  40cb59:	mov    rbx,rax
  40cb5c:	test   edx,edx
  40cb5e:	je     0x40cbe1
  40cb64:	lea    rcx,[rsp+0x28]
  40cb69:	call   0x40db40
  40cb6e:	mov    rcx,QWORD PTR [rsp+0x28]
  40cb73:	xor    r8d,r8d
  40cb76:	mov    rdx,rbx
  40cb79:	call   0x40db48
  40cb7e:	test   eax,eax
  40cb80:	js     0x40cc00
  40cb82:	mov    rcx,QWORD PTR [rsp+0x28]
  40cb87:	lea    r8,[rsp+0x30]
  40cb8c:	mov    edx,0x3
  40cb91:	call   0x40db28
  40cb96:	test   eax,eax
  40cb98:	jne    0x40cbb9
  40cb9a:	mov    rdx,QWORD PTR [rsp+0x30]
  40cb9f:	lea    rcx,[rip+0x27baa]        # 0x434750
  40cba6:	call   0x40bb30
  40cbab:	mov    rax,QWORD PTR [rip+0x30e5e]        # 0x43da10
  40cbb2:	mov    rcx,QWORD PTR [rsp+0x30]
  40cbb7:	call   QWORD PTR [rax]
  40cbb9:	mov    rcx,QWORD PTR [rsp+0x28]
  40cbbe:	call   0x40db90
  40cbc3:	nop
  40cbc4:	add    rsp,0x40
  40cbc8:	pop    rbx
  40cbc9:	ret    
  40cbca:	nop    WORD PTR [rax+rax*1+0x0]
  40cbd0:	lea    rcx,[rip+0x277d1]        # 0x4343a8
  40cbd7:	call   0x40bb30
  40cbdc:	jmp    0x40caa5
  40cbe1:	call   QWORD PTR [rip+0x3bbf9]        # 0x4487e0
  40cbe7:	lea    rdx,[rip+0x277e1]        # 0x4343cf
  40cbee:	lea    rcx,[rax+0x60]
  40cbf2:	call   0x40bbb0
  40cbf7:	nop
  40cbf8:	add    rsp,0x40
  40cbfc:	pop    rbx
  40cbfd:	ret    
  40cbfe:	xchg   ax,ax
  40cc00:	mov    ecx,eax
  40cc02:	call   0x40dc88
  40cc07:	mov    rbx,rax
  40cc0a:	call   QWORD PTR [rip+0x3bbd0]        # 0x4487e0
  40cc10:	lea    rdx,[rip+0x2781f]        # 0x434436
  40cc17:	lea    rcx,[rax+0x60]
  40cc1b:	mov    r8,rbx
  40cc1e:	call   0x40bbb0
  40cc23:	jmp    0x40cac8
  40cc28:	nop    DWORD PTR [rax+rax*1+0x0]
  40cc30:	mov    rdx,QWORD PTR [rsp+0x30]
  40cc35:	lea    rcx,[rip+0x27b26]        # 0x434762
  40cc3c:	call   0x40bb30
  40cc41:	mov    rax,QWORD PTR [rip+0x30dc8]        # 0x43da10
  40cc48:	mov    rcx,QWORD PTR [rsp+0x30]
  40cc4d:	call   QWORD PTR [rax]
  40cc4f:	jmp    0x40cb2e
  40cc54:	xchg   ax,ax
  40cc56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cc60:	push   r15
  40cc62:	push   r14
  40cc64:	push   r13
  40cc66:	push   r12
  40cc68:	push   rbp
  40cc69:	push   rdi
  40cc6a:	push   rsi
  40cc6b:	push   rbx
  40cc6c:	sub    rsp,0x78
  40cc70:	test   rcx,rcx
  40cc73:	mov    rbx,rcx
  40cc76:	mov    ebp,edx
  40cc78:	je     0x40d005
  40cc7e:	mov    rdx,rcx
  40cc81:	lea    rcx,[rip+0x27aee]        # 0x434776
  40cc88:	call   0x40bb30
  40cc8d:	lea    rcx,[rsp+0x60]
  40cc92:	lea    r8,[rsp+0x58]
  40cc97:	mov    rdx,rbx
  40cc9a:	call   0x40dde0
  40cc9f:	test   eax,eax
  40cca1:	js     0x40d4e3
  40cca7:	xor    ebx,ebx
  40cca9:	lea    rdi,[rsp+0x50]
  40ccae:	lea    r12,[rsp+0x40]
  40ccb3:	lea    rbp,[rsp+0x54]
  40ccb8:	jmp    0x40cd1a
  40ccba:	nop    WORD PTR [rax+rax*1+0x0]
  40ccc0:	cmp    eax,0xffffffeb
  40ccc3:	je     0x40cd16
  40ccc5:	mov    ecx,DWORD PTR [rsp+0x50]
  40ccc9:	xor    r9d,r9d
  40cccc:	xor    r8d,r8d
  40cccf:	mov    QWORD PTR [rsp+0x28],rbp
  40ccd4:	mov    QWORD PTR [rsp+0x20],0x0
  40ccdd:	mov    rdx,r12
  40cce0:	call   0x40e168
  40cce5:	test   rax,rax
  40cce8:	mov    rsi,rax
  40cceb:	je     0x40cd16
  40cced:	mov    ecx,DWORD PTR [rsp+0x54]
  40ccf1:	call   0x40dda0
  40ccf6:	movzx  r9d,BYTE PTR [rsp+0x41]
  40ccfc:	movzx  r8d,BYTE PTR [rsp+0x40]
  40cd02:	lea    rcx,[rip+0x27a98]        # 0x4347a1
  40cd09:	mov    QWORD PTR [rsp+0x20],rax
  40cd0e:	mov    rdx,rsi
  40cd11:	call   0x40bb30
  40cd16:	add    rbx,0x1
  40cd1a:	mov    rcx,QWORD PTR [rsp+0x60]
  40cd1f:	mov    r8,rdi
  40cd22:	mov    edx,ebx
  40cd24:	call   0x40dde8
  40cd29:	cmp    eax,0xffffffc8
  40cd2c:	jne    0x40ccc0
  40cd2e:	lea    rcx,[rip+0x2798c]        # 0x4346c1
  40cd35:	lea    rdi,[rsp+0x68]
  40cd3a:	call   0x40bb30
  40cd3f:	mov    rcx,QWORD PTR [rsp+0x60]
  40cd44:	mov    rdx,rdi
  40cd47:	call   0x40de00
  40cd4c:	lea    rcx,[rip+0x27a67]        # 0x4347ba
  40cd53:	mov    esi,eax
  40cd55:	call   0x40bb30
  40cd5a:	test   esi,esi
  40cd5c:	je     0x40cff4
  40cd62:	xor    ebx,ebx
  40cd64:	cmp    rbx,rsi
  40cd67:	jae    0x40cda3
  40cd69:	mov    rax,QWORD PTR [rsp+0x68]
  40cd6e:	mov    ecx,DWORD PTR [rax+rbx*4]
  40cd71:	add    rbx,0x1
  40cd75:	call   0x40e1a0
  40cd7a:	lea    rcx,[rip+0x27a53]        # 0x4347d4
  40cd81:	mov    rdx,rax
  40cd84:	call   0x40bb30
  40cd89:	cmp    rbx,rsi
  40cd8c:	je     0x40cf51
  40cd92:	lea    rcx,[rip+0x27a44]        # 0x4347dd
  40cd99:	call   0x40bb30
  40cd9e:	cmp    rbx,rsi
  40cda1:	jb     0x40cd69
  40cda3:	mov    rcx,QWORD PTR [rsp+0x60]
  40cda8:	mov    rdx,rdi
  40cdab:	call   0x40ddd8
  40cdb0:	lea    rcx,[rip+0x27a29]        # 0x4347e0
  40cdb7:	mov    esi,eax
  40cdb9:	call   0x40bb30
  40cdbe:	test   esi,esi
  40cdc0:	je     0x40cfe3
  40cdc6:	xor    ebx,ebx
  40cdc8:	cmp    rbx,rsi
  40cdcb:	jae    0x40ce07
  40cdcd:	mov    rax,QWORD PTR [rsp+0x68]
  40cdd2:	mov    ecx,DWORD PTR [rax+rbx*4]
  40cdd5:	add    rbx,0x1
  40cdd9:	call   0x40dda0
  40cdde:	lea    rcx,[rip+0x27a07]        # 0x4347ec
  40cde5:	mov    rdx,rax
  40cde8:	call   0x40bb30
  40cded:	cmp    rsi,rbx
  40cdf0:	je     0x40cf62
  40cdf6:	lea    rcx,[rip+0x279e0]        # 0x4347dd
  40cdfd:	call   0x40bb30
  40ce02:	cmp    rbx,rsi
  40ce05:	jb     0x40cdcd
  40ce07:	mov    rcx,QWORD PTR [rsp+0x60]
  40ce0c:	mov    rdx,rdi
  40ce0f:	call   0x40ddf8
  40ce14:	lea    rcx,[rip+0x279d9]        # 0x4347f4
  40ce1b:	mov    esi,eax
  40ce1d:	call   0x40bb30
  40ce22:	test   esi,esi
  40ce24:	je     0x40cfd2
  40ce2a:	xor    ebx,ebx
  40ce2c:	cmp    rbx,rsi
  40ce2f:	jae    0x40ce6b
  40ce31:	mov    rax,QWORD PTR [rsp+0x68]
  40ce36:	mov    ecx,DWORD PTR [rax+rbx*4]
  40ce39:	add    rbx,0x1
  40ce3d:	call   0x40e158
  40ce42:	lea    rcx,[rip+0x279b9]        # 0x434802
  40ce49:	mov    rdx,rax
  40ce4c:	call   0x40bb30
  40ce51:	cmp    rsi,rbx
  40ce54:	je     0x40cf80
  40ce5a:	lea    rcx,[rip+0x2797c]        # 0x4347dd
  40ce61:	call   0x40bb30
  40ce66:	cmp    rbx,rsi
  40ce69:	jb     0x40ce31
  40ce6b:	mov    rcx,QWORD PTR [rsp+0x60]
  40ce70:	mov    rdx,rdi
  40ce73:	call   0x40ddf0
  40ce78:	lea    rcx,[rip+0x2798b]        # 0x43480a
  40ce7f:	mov    esi,eax
  40ce81:	call   0x40bb30
  40ce86:	test   esi,esi
  40ce88:	je     0x40cfc1
  40ce8e:	xor    ebx,ebx
  40ce90:	cmp    rbx,rsi
  40ce93:	jae    0x40cecf
  40ce95:	mov    rax,QWORD PTR [rsp+0x68]
  40ce9a:	mov    ecx,DWORD PTR [rax+rbx*4]
  40ce9d:	add    rbx,0x1
  40cea1:	call   0x40e0d8
  40cea6:	lea    rcx,[rip+0x2796f]        # 0x43481c
  40cead:	mov    rdx,rax
  40ceb0:	call   0x40bb30
  40ceb5:	cmp    rsi,rbx
  40ceb8:	je     0x40cf94
  40cebe:	lea    rcx,[rip+0x27918]        # 0x4347dd
  40cec5:	call   0x40bb30
  40ceca:	cmp    rbx,rsi
  40cecd:	jb     0x40ce95
  40cecf:	mov    rcx,QWORD PTR [rsp+0x60]
  40ced4:	mov    rdx,rdi
  40ced7:	call   0x40ddd0
  40cedc:	lea    rcx,[rip+0x27942]        # 0x434825
  40cee3:	mov    esi,eax
  40cee5:	call   0x40bb30
  40ceea:	test   esi,esi
  40ceec:	je     0x40cfb0
  40cef2:	xor    ebx,ebx
  40cef4:	cmp    rbx,rsi
  40cef7:	jae    0x40cf2f
  40cef9:	mov    rax,QWORD PTR [rsp+0x68]
  40cefe:	mov    ecx,DWORD PTR [rax+rbx*4]
  40cf01:	add    rbx,0x1
  40cf05:	call   0x40dcb0
  40cf0a:	lea    rcx,[rip+0x27924]        # 0x434835
  40cf11:	mov    rdx,rax
  40cf14:	call   0x40bb30
  40cf19:	cmp    rsi,rbx
  40cf1c:	je     0x40cf40
  40cf1e:	lea    rcx,[rip+0x278b8]        # 0x4347dd
  40cf25:	call   0x40bb30
  40cf2a:	cmp    rbx,rsi
  40cf2d:	jb     0x40cef9
  40cf2f:	add    rsp,0x78
  40cf33:	pop    rbx
  40cf34:	pop    rsi
  40cf35:	pop    rdi
  40cf36:	pop    rbp
  40cf37:	pop    r12
  40cf39:	pop    r13
  40cf3b:	pop    r14
  40cf3d:	pop    r15
  40cf3f:	ret    
  40cf40:	lea    rcx,[rip+0x2777a]        # 0x4346c1
  40cf47:	mov    rbx,rsi
  40cf4a:	call   0x40bb30
  40cf4f:	jmp    0x40cef4
  40cf51:	lea    rcx,[rip+0x27769]        # 0x4346c1
  40cf58:	call   0x40bb30
  40cf5d:	jmp    0x40cd64
  40cf62:	lea    rcx,[rip+0x27758]        # 0x4346c1
  40cf69:	mov    rbx,rsi
  40cf6c:	call   0x40bb30
  40cf71:	jmp    0x40cdc8
  40cf76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf80:	lea    rcx,[rip+0x2773a]        # 0x4346c1
  40cf87:	mov    rbx,rsi
  40cf8a:	call   0x40bb30
  40cf8f:	jmp    0x40ce2c
  40cf94:	lea    rcx,[rip+0x27726]        # 0x4346c1
  40cf9b:	mov    rbx,rsi
  40cf9e:	call   0x40bb30
  40cfa3:	jmp    0x40ce90
  40cfa8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cfb0:	lea    rcx,[rip+0x27817]        # 0x4347ce
  40cfb7:	call   0x40bb30
  40cfbc:	jmp    0x40cef2
  40cfc1:	lea    rcx,[rip+0x27806]        # 0x4347ce
  40cfc8:	call   0x40bb30
  40cfcd:	jmp    0x40ce8e
  40cfd2:	lea    rcx,[rip+0x277f5]        # 0x4347ce
  40cfd9:	call   0x40bb30
  40cfde:	jmp    0x40ce2a
  40cfe3:	lea    rcx,[rip+0x277e4]        # 0x4347ce
  40cfea:	call   0x40bb30
  40cfef:	jmp    0x40cdc6
  40cff4:	lea    rcx,[rip+0x277d3]        # 0x4347ce
  40cffb:	call   0x40bb30
  40d000:	jmp    0x40cd62
  40d005:	lea    rcx,[rip+0x27831]        # 0x43483d
  40d00c:	xor    esi,esi
  40d00e:	lea    r15,[rsp+0x58]
  40d013:	lea    r14,[rsp+0x60]
  40d018:	lea    r13,[rsp+0x40]
  40d01d:	lea    r12,[rsp+0x54]
  40d022:	call   0x40bb30
  40d027:	lea    rdi,[rsp+0x68]
  40d02c:	jmp    0x40d034
  40d02e:	xchg   ax,ax
  40d030:	add    rsi,0x1
  40d034:	mov    QWORD PTR [rsp+0x28],r12
  40d039:	mov    QWORD PTR [rsp+0x20],rdi
  40d03e:	mov    r9,r14
  40d041:	mov    r8,r15
  40d044:	mov    rdx,r13
  40d047:	mov    rcx,rsi
  40d04a:	call   0x40e168
  40d04f:	test   rax,rax
  40d052:	mov    rbx,rax
  40d055:	je     0x40d0c3
  40d057:	mov    ecx,DWORD PTR [rsp+0x54]
  40d05b:	call   0x40dda0
  40d060:	movzx  r9d,BYTE PTR [rsp+0x41]
  40d066:	movzx  r8d,BYTE PTR [rsp+0x40]
  40d06c:	lea    rcx,[rip+0x2772e]        # 0x4347a1
  40d073:	mov    QWORD PTR [rsp+0x20],rax
  40d078:	mov    rdx,rbx
  40d07b:	call   0x40bb30
  40d080:	test   ebp,ebp
  40d082:	je     0x40d030
  40d084:	mov    ecx,DWORD PTR [rsp+0x68]
  40d088:	call   0x40e058
  40d08d:	mov    ecx,DWORD PTR [rsp+0x60]
  40d091:	mov    QWORD PTR [rsp+0x38],rax
  40d096:	call   0x40e178
  40d09b:	mov    ecx,DWORD PTR [rsp+0x58]
  40d09f:	mov    rbx,rax
  40d0a2:	call   0x40e078
  40d0a7:	mov    r9,QWORD PTR [rsp+0x38]
  40d0ac:	lea    rcx,[rip+0x2779d]        # 0x434850
  40d0b3:	mov    r8,rbx
  40d0b6:	mov    rdx,rax
  40d0b9:	call   0x40bb30
  40d0be:	jmp    0x40d030
  40d0c3:	lea    rcx,[rip+0x275f7]        # 0x4346c1
  40d0ca:	call   0x40bb30
  40d0cf:	call   0x40e198
  40d0d4:	lea    rcx,[rip+0x276df]        # 0x4347ba
  40d0db:	mov    rbx,rax
  40d0de:	call   0x40bb30
  40d0e3:	mov    ecx,DWORD PTR [rbx]
  40d0e5:	test   ecx,ecx
  40d0e7:	jne    0x40d106
  40d0e9:	jmp    0x40d137
  40d0eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d0f0:	lea    rcx,[rip+0x276e6]        # 0x4347dd
  40d0f7:	add    rbx,0x4
  40d0fb:	call   0x40bb30
  40d100:	mov    ecx,DWORD PTR [rbx]
  40d102:	test   ecx,ecx
  40d104:	je     0x40d137
  40d106:	call   0x40e1a0
  40d10b:	lea    rcx,[rip+0x276c2]        # 0x4347d4
  40d112:	mov    rdx,rax
  40d115:	call   0x40bb30
  40d11a:	mov    ebp,DWORD PTR [rbx+0x4]
  40d11d:	test   ebp,ebp
  40d11f:	jne    0x40d0f0
  40d121:	lea    rcx,[rip+0x27599]        # 0x4346c1
  40d128:	add    rbx,0x4
  40d12c:	call   0x40bb30
  40d131:	mov    ecx,DWORD PTR [rbx]
  40d133:	test   ecx,ecx
  40d135:	jne    0x40d106
  40d137:	call   0x40dd90
  40d13c:	lea    rcx,[rip+0x2769d]        # 0x4347e0
  40d143:	mov    rbx,rax
  40d146:	call   0x40bb30
  40d14b:	mov    ecx,DWORD PTR [rbx]
  40d14d:	test   ecx,ecx
  40d14f:	jne    0x40d169
  40d151:	jmp    0x40d19a
  40d153:	lea    rcx,[rip+0x27683]        # 0x4347dd
  40d15a:	add    rbx,0x4
  40d15e:	call   0x40bb30
  40d163:	mov    ecx,DWORD PTR [rbx]
  40d165:	test   ecx,ecx
  40d167:	je     0x40d19a
  40d169:	call   0x40dda0
  40d16e:	lea    rcx,[rip+0x27677]        # 0x4347ec
  40d175:	mov    rdx,rax
  40d178:	call   0x40bb30
  40d17d:	mov    edi,DWORD PTR [rbx+0x4]
  40d180:	test   edi,edi
  40d182:	jne    0x40d153
  40d184:	lea    rcx,[rip+0x27536]        # 0x4346c1
  40d18b:	add    rbx,0x4
  40d18f:	call   0x40bb30
  40d194:	mov    ecx,DWORD PTR [rbx]
  40d196:	test   ecx,ecx
  40d198:	jne    0x40d169
  40d19a:	call   0x40e170
  40d19f:	lea    rcx,[rip+0x276d3]        # 0x434879
  40d1a6:	mov    rbx,rax
  40d1a9:	call   0x40bb30
  40d1ae:	mov    ecx,DWORD PTR [rbx]
  40d1b0:	test   ecx,ecx
  40d1b2:	jne    0x40d1d6
  40d1b4:	jmp    0x40d207
  40d1b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d1c0:	lea    rcx,[rip+0x27616]        # 0x4347dd
  40d1c7:	add    rbx,0x4
  40d1cb:	call   0x40bb30
  40d1d0:	mov    ecx,DWORD PTR [rbx]
  40d1d2:	test   ecx,ecx
  40d1d4:	je     0x40d207
  40d1d6:	call   0x40e178
  40d1db:	lea    rcx,[rip+0x276a8]        # 0x43488a
  40d1e2:	mov    rdx,rax
  40d1e5:	call   0x40bb30
  40d1ea:	mov    esi,DWORD PTR [rbx+0x4]
  40d1ed:	test   esi,esi
  40d1ef:	jne    0x40d1c0
  40d1f1:	lea    rcx,[rip+0x274c9]        # 0x4346c1
  40d1f8:	add    rbx,0x4
  40d1fc:	call   0x40bb30
  40d201:	mov    ecx,DWORD PTR [rbx]
  40d203:	test   ecx,ecx
  40d205:	jne    0x40d1d6
  40d207:	call   0x40e050
  40d20c:	lea    rcx,[rip+0x27670]        # 0x434883
  40d213:	mov    rbx,rax
  40d216:	call   0x40bb30
  40d21b:	mov    ecx,DWORD PTR [rbx]
  40d21d:	test   ecx,ecx
  40d21f:	jne    0x40d239
  40d221:	jmp    0x40d26c
  40d223:	lea    rcx,[rip+0x275b3]        # 0x4347dd
  40d22a:	add    rbx,0x4
  40d22e:	call   0x40bb30
  40d233:	mov    ecx,DWORD PTR [rbx]
  40d235:	test   ecx,ecx
  40d237:	je     0x40d26c
  40d239:	call   0x40e058
  40d23e:	lea    rcx,[rip+0x27645]        # 0x43488a
  40d245:	mov    rdx,rax
  40d248:	call   0x40bb30
  40d24d:	mov    r11d,DWORD PTR [rbx+0x4]
  40d251:	test   r11d,r11d
  40d254:	jne    0x40d223
  40d256:	lea    rcx,[rip+0x27464]        # 0x4346c1
  40d25d:	add    rbx,0x4
  40d261:	call   0x40bb30
  40d266:	mov    ecx,DWORD PTR [rbx]
  40d268:	test   ecx,ecx
  40d26a:	jne    0x40d239
  40d26c:	call   0x40e0e8
  40d271:	lea    rcx,[rip+0x27615]        # 0x43488d
  40d278:	mov    rbx,rax
  40d27b:	call   0x40bb30
  40d280:	mov    ecx,DWORD PTR [rbx]
  40d282:	test   ecx,ecx
  40d284:	jne    0x40d2a6
  40d286:	jmp    0x40d2d9
  40d288:	nop    DWORD PTR [rax+rax*1+0x0]
  40d290:	lea    rcx,[rip+0x27546]        # 0x4347dd
  40d297:	add    rbx,0x4
  40d29b:	call   0x40bb30
  40d2a0:	mov    ecx,DWORD PTR [rbx]
  40d2a2:	test   ecx,ecx
  40d2a4:	je     0x40d2d9
  40d2a6:	call   0x40e0f0
  40d2ab:	lea    rcx,[rip+0x275d8]        # 0x43488a
  40d2b2:	mov    rdx,rax
  40d2b5:	call   0x40bb30
  40d2ba:	mov    r10d,DWORD PTR [rbx+0x4]
  40d2be:	test   r10d,r10d
  40d2c1:	jne    0x40d290
  40d2c3:	lea    rcx,[rip+0x273f7]        # 0x4346c1
  40d2ca:	add    rbx,0x4
  40d2ce:	call   0x40bb30
  40d2d3:	mov    ecx,DWORD PTR [rbx]
  40d2d5:	test   ecx,ecx
  40d2d7:	jne    0x40d2a6
  40d2d9:	call   0x40e070
  40d2de:	lea    rcx,[rip+0x275b2]        # 0x434897
  40d2e5:	mov    rbx,rax
  40d2e8:	call   0x40bb30
  40d2ed:	mov    ecx,DWORD PTR [rbx]
  40d2ef:	test   ecx,ecx
  40d2f1:	jne    0x40d30b
  40d2f3:	jmp    0x40d33e
  40d2f5:	lea    rcx,[rip+0x274e1]        # 0x4347dd
  40d2fc:	add    rbx,0x4
  40d300:	call   0x40bb30
  40d305:	mov    ecx,DWORD PTR [rbx]
  40d307:	test   ecx,ecx
  40d309:	je     0x40d33e
  40d30b:	call   0x40e078
  40d310:	lea    rcx,[rip+0x27573]        # 0x43488a
  40d317:	mov    rdx,rax
  40d31a:	call   0x40bb30
  40d31f:	mov    r9d,DWORD PTR [rbx+0x4]
  40d323:	test   r9d,r9d
  40d326:	jne    0x40d2f5
  40d328:	lea    rcx,[rip+0x27392]        # 0x4346c1
  40d32f:	add    rbx,0x4
  40d333:	call   0x40bb30
  40d338:	mov    ecx,DWORD PTR [rbx]
  40d33a:	test   ecx,ecx
  40d33c:	jne    0x40d30b
  40d33e:	call   0x40e150
  40d343:	lea    rcx,[rip+0x274aa]        # 0x4347f4
  40d34a:	mov    rbx,rax
  40d34d:	call   0x40bb30
  40d352:	mov    ecx,DWORD PTR [rbx]
  40d354:	test   ecx,ecx
  40d356:	jne    0x40d376
  40d358:	jmp    0x40d3a9
  40d35a:	nop    WORD PTR [rax+rax*1+0x0]
  40d360:	lea    rcx,[rip+0x27476]        # 0x4347dd
  40d367:	add    rbx,0x4
  40d36b:	call   0x40bb30
  40d370:	mov    ecx,DWORD PTR [rbx]
  40d372:	test   ecx,ecx
  40d374:	je     0x40d3a9
  40d376:	call   0x40e158
  40d37b:	lea    rcx,[rip+0x27480]        # 0x434802
  40d382:	mov    rdx,rax
  40d385:	call   0x40bb30
  40d38a:	mov    r8d,DWORD PTR [rbx+0x4]
  40d38e:	test   r8d,r8d
  40d391:	jne    0x40d360
  40d393:	lea    rcx,[rip+0x27327]        # 0x4346c1
  40d39a:	add    rbx,0x4
  40d39e:	call   0x40bb30
  40d3a3:	mov    ecx,DWORD PTR [rbx]
  40d3a5:	test   ecx,ecx
  40d3a7:	jne    0x40d376
  40d3a9:	call   0x40e0c8
  40d3ae:	lea    rcx,[rip+0x27455]        # 0x43480a
  40d3b5:	mov    rbx,rax
  40d3b8:	call   0x40bb30
  40d3bd:	mov    ecx,DWORD PTR [rbx]
  40d3bf:	test   ecx,ecx
  40d3c1:	jne    0x40d3db
  40d3c3:	jmp    0x40d40c
  40d3c5:	lea    rcx,[rip+0x27411]        # 0x4347dd
  40d3cc:	add    rbx,0x4
  40d3d0:	call   0x40bb30
  40d3d5:	mov    ecx,DWORD PTR [rbx]
  40d3d7:	test   ecx,ecx
  40d3d9:	je     0x40d40c
  40d3db:	call   0x40e0d8
  40d3e0:	lea    rcx,[rip+0x27435]        # 0x43481c
  40d3e7:	mov    rdx,rax
  40d3ea:	call   0x40bb30
  40d3ef:	mov    ecx,DWORD PTR [rbx+0x4]
  40d3f2:	test   ecx,ecx
  40d3f4:	jne    0x40d3c5
  40d3f6:	lea    rcx,[rip+0x272c4]        # 0x4346c1
  40d3fd:	add    rbx,0x4
  40d401:	call   0x40bb30
  40d406:	mov    ecx,DWORD PTR [rbx]
  40d408:	test   ecx,ecx
  40d40a:	jne    0x40d3db
  40d40c:	call   0x40df50
  40d411:	lea    rcx,[rip+0x27499]        # 0x4348b1
  40d418:	mov    rbx,rax
  40d41b:	call   0x40bb30
  40d420:	mov    ecx,DWORD PTR [rbx]
  40d422:	test   ecx,ecx
  40d424:	jne    0x40d446
  40d426:	jmp    0x40d477
  40d428:	nop    DWORD PTR [rax+rax*1+0x0]
  40d430:	lea    rcx,[rip+0x273a6]        # 0x4347dd
  40d437:	add    rbx,0x4
  40d43b:	call   0x40bb30
  40d440:	mov    ecx,DWORD PTR [rbx]
  40d442:	test   ecx,ecx
  40d444:	je     0x40d477
  40d446:	call   0x40df60
  40d44b:	lea    rcx,[rip+0x27438]        # 0x43488a
  40d452:	mov    rdx,rax
  40d455:	call   0x40bb30
  40d45a:	mov    edx,DWORD PTR [rbx+0x4]
  40d45d:	test   edx,edx
  40d45f:	jne    0x40d430
  40d461:	lea    rcx,[rip+0x27259]        # 0x4346c1
  40d468:	add    rbx,0x4
  40d46c:	call   0x40bb30
  40d471:	mov    ecx,DWORD PTR [rbx]
  40d473:	test   ecx,ecx
  40d475:	jne    0x40d446
  40d477:	call   0x40dca8
  40d47c:	lea    rcx,[rip+0x273a2]        # 0x434825
  40d483:	mov    rbx,rax
  40d486:	call   0x40bb30
  40d48b:	mov    ecx,DWORD PTR [rbx]
  40d48d:	test   ecx,ecx
  40d48f:	jne    0x40d4ba
  40d491:	jmp    0x40cf2f
  40d496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d4a0:	lea    rcx,[rip+0x27336]        # 0x4347dd
  40d4a7:	call   0x40bb30
  40d4ac:	add    rbx,0x4
  40d4b0:	mov    ecx,DWORD PTR [rbx]
  40d4b2:	test   ecx,ecx
  40d4b4:	je     0x40cf2f
  40d4ba:	call   0x40dcb0
  40d4bf:	lea    rcx,[rip+0x2736f]        # 0x434835
  40d4c6:	mov    rdx,rax
  40d4c9:	call   0x40bb30
  40d4ce:	mov    eax,DWORD PTR [rbx+0x4]
  40d4d1:	test   eax,eax
  40d4d3:	jne    0x40d4a0
  40d4d5:	lea    rcx,[rip+0x271e5]        # 0x4346c1
  40d4dc:	call   0x40bb30
  40d4e1:	jmp    0x40d4ac
  40d4e3:	mov    rbx,QWORD PTR [rsp+0x58]
  40d4e8:	call   QWORD PTR [rip+0x3b2f2]        # 0x4487e0
  40d4ee:	lea    rdx,[rip+0x27297]        # 0x43478c
  40d4f5:	lea    rcx,[rax+0x60]
  40d4f9:	mov    r8,rbx
  40d4fc:	call   0x40bbb0
  40d501:	mov    ecx,0x1
  40d506:	call   0x42df60
  40d50b:	nop
  40d50c:	nop    DWORD PTR [rax+0x0]
  40d510:	push   r12
  40d512:	push   rbp
  40d513:	push   rdi
  40d514:	push   rsi
  40d515:	push   rbx
  40d516:	sub    rsp,0x20
  40d51a:	mov    rbx,rdx
  40d51d:	mov    r12,rcx
  40d520:	mov    edx,0x80
  40d525:	mov    rcx,rbx
  40d528:	call   0x428b00
  40d52d:	mov    rbp,QWORD PTR [rip+0x3b2ac]        # 0x4487e0
  40d534:	mov    rsi,rax
  40d537:	call   rbp
  40d539:	lea    rdx,[rip+0x27388]        # 0x4348c8
  40d540:	lea    rcx,[rax+0x60]
  40d544:	mov    r9,rbx
  40d547:	mov    r8d,esi
  40d54a:	call   0x40bbb0
  40d54f:	cmp    rsi,0x2
  40d553:	jbe    0x40d5d0
  40d555:	movzx  eax,BYTE PTR [rbx]
  40d558:	cmp    al,BYTE PTR [rbx+0x1]
  40d55b:	jne    0x40d5d0
  40d55d:	cmp    al,0x2a
  40d55f:	jne    0x40d5d0
  40d561:	lea    rdi,[rip+0x27385]        # 0x4348ed
  40d568:	mov    ecx,0xf
  40d56d:	mov    rsi,rbx
  40d570:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40d572:	je     0x40d5e0
  40d574:	lea    rdi,[rip+0x273a6]        # 0x434921
  40d57b:	mov    rsi,rbx
  40d57e:	mov    ecx,0xd
  40d583:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40d585:	seta   dl
  40d588:	setb   al
  40d58b:	xor    ebx,ebx
  40d58d:	cmp    dl,al
  40d58f:	jne    0x40d5d2
  40d591:	mov    r9d,0x1
  40d597:	mov    r8d,0x5
  40d59d:	mov    edx,0x12c
  40d5a2:	mov    rcx,r12
  40d5a5:	mov    bl,0x2
  40d5a7:	call   0x40e0a0
  40d5ac:	test   eax,eax
  40d5ae:	jns    0x40d5d2
  40d5b0:	cmp    eax,0xffffffce
  40d5b3:	jne    0x40d601
  40d5b5:	call   rbp
  40d5b7:	lea    rdx,[rip+0x27371]        # 0x43492f
  40d5be:	lea    rcx,[rax+0x60]
  40d5c2:	call   0x40bbb0
  40d5c7:	jmp    0x40d5d2
  40d5c9:	nop    DWORD PTR [rax+0x0]
  40d5d0:	xor    ebx,ebx
  40d5d2:	mov    eax,ebx
  40d5d4:	add    rsp,0x20
  40d5d8:	pop    rbx
  40d5d9:	pop    rsi
  40d5da:	pop    rdi
  40d5db:	pop    rbp
  40d5dc:	pop    r12
  40d5de:	ret    
  40d5df:	nop
  40d5e0:	call   rbp
  40d5e2:	lea    rdx,[rip+0x27317]        # 0x434900
  40d5e9:	lea    rcx,[rax+0x60]
  40d5ed:	mov    ebx,0x1
  40d5f2:	call   0x40bbb0
  40d5f7:	mov    rcx,r12
  40d5fa:	call   0x40dd10
  40d5ff:	jmp    0x40d5d2
  40d601:	mov    ecx,eax
  40d603:	call   0x40dc88
  40d608:	mov    rbx,rax
  40d60b:	call   rbp
  40d60d:	lea    rdx,[rip+0x27339]        # 0x43494d
  40d614:	lea    rcx,[rax+0x60]
  40d618:	mov    r8,rbx
  40d61b:	call   0x40bbb0
  40d620:	mov    ecx,0x1
  40d625:	call   0x42df60
  40d62a:	nop
  40d62b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d630:	push   r15
  40d632:	push   r14
  40d634:	push   r13
  40d636:	push   r12
  40d638:	push   rbp
  40d639:	push   rdi
  40d63a:	push   rsi
  40d63b:	push   rbx
  40d63c:	sub    rsp,0x28
  40d640:	mov    ebx,DWORD PTR [rsp+0x90]
  40d647:	lea    rdx,[rip+0x27328]        # 0x434976
  40d64e:	lea    rbp,[rip+0x27302]        # 0x434957
  40d655:	lea    r12,[rip+0x27309]        # 0x434965
  40d65c:	mov    r15,rcx
  40d65f:	mov    rdi,r8
  40d662:	mov    r14,r9
  40d665:	mov    r13,QWORD PTR [rsp+0x98]
  40d66d:	mov    rsi,QWORD PTR [rsp+0xa0]
  40d675:	mov    eax,ebx
  40d677:	and    eax,0x2
  40d67a:	lea    rax,[rip+0x27300]        # 0x434981
  40d681:	cmove  rbp,rdx
  40d685:	cmove  r12,rax
  40d689:	test   bl,0x4
  40d68c:	mov    eax,0x5
  40d691:	jne    0x40d874
  40d697:	test   bl,0x8
  40d69a:	jne    0x40d805
  40d6a0:	and    ebx,0x20
  40d6a3:	jne    0x40d81a
  40d6a9:	test   eax,eax
  40d6ab:	je     0x40d6ce
  40d6ad:	test   rdi,rdi
  40d6b0:	mov    rcx,QWORD PTR [rip+0x36269]        # 0x443920
  40d6b7:	je     0x40d6ce
  40d6b9:	test   rcx,rcx
  40d6bc:	je     0x40d6ce
  40d6be:	mov    rdx,rdi
  40d6c1:	call   0x42de50
  40d6c6:	test   eax,eax
  40d6c8:	je     0x40d790
  40d6ce:	lea    rcx,[rip+0x27335]        # 0x434a0a
  40d6d5:	mov    r8,rdi
  40d6d8:	mov    rdx,r14
  40d6db:	call   0x40bb30
  40d6e0:	lea    rcx,[rip+0x2733d]        # 0x434a24
  40d6e7:	mov    rdx,r12
  40d6ea:	call   0x40bb30
  40d6ef:	mov    rcx,rbp
  40d6f2:	call   0x42ded0
  40d6f7:	test   rax,rax
  40d6fa:	mov    rbp,rax
  40d6fd:	je     0x40d8c0
  40d703:	movzx  eax,BYTE PTR [rbp+0x0]
  40d707:	test   al,al
  40d709:	je     0x40d980
  40d70f:	cmp    al,0xa
  40d711:	je     0x40d980
  40d717:	mov    rcx,rbp
  40d71a:	call   0x42de30
  40d71f:	lea    rdx,[rsi-0x1]
  40d723:	sub    esi,0x1
  40d726:	mov    rcx,r13
  40d729:	cmp    rdx,rax
  40d72c:	mov    rdx,rbp
  40d72f:	cmovae esi,eax
  40d732:	mov    ebx,esi
  40d734:	mov    r8,rbx
  40d737:	call   0x42de98
  40d73c:	cmp    esi,0x1f
  40d73f:	mov    BYTE PTR [r13+rbx*1+0x0],0x0
  40d745:	jbe    0x40d8a0
  40d74b:	mov    BYTE PTR [rip+0x361ae],0x0        # 0x443900
  40d752:	mov    rcx,QWORD PTR [rip+0x361c7]        # 0x443920
  40d759:	call   0x42df08
  40d75e:	test   rdi,rdi
  40d761:	je     0x40d890
  40d767:	mov    rcx,rdi
  40d76a:	call   0x415d00
  40d76f:	mov    QWORD PTR [rip+0x361aa],rax        # 0x443920
  40d776:	xor    eax,eax
  40d778:	add    rsp,0x28
  40d77c:	pop    rbx
  40d77d:	pop    rsi
  40d77e:	pop    rdi
  40d77f:	pop    rbp
  40d780:	pop    r12
  40d782:	pop    r13
  40d784:	pop    r14
  40d786:	pop    r15
  40d788:	ret    
  40d789:	nop    DWORD PTR [rax+0x0]
  40d790:	lea    r8,[rip+0x36169]        # 0x443900
  40d797:	mov    rdx,r8
  40d79a:	mov    ecx,DWORD PTR [rdx]
  40d79c:	add    rdx,0x4
  40d7a0:	lea    eax,[rcx-0x1010101]
  40d7a6:	not    ecx
  40d7a8:	and    eax,ecx
  40d7aa:	and    eax,0x80808080
  40d7af:	je     0x40d79a
  40d7b1:	mov    ecx,eax
  40d7b3:	shr    ecx,0x10
  40d7b6:	test   eax,0x8080
  40d7bb:	cmove  eax,ecx
  40d7be:	lea    rcx,[rdx+0x2]
  40d7c2:	cmove  rdx,rcx
  40d7c6:	add    al,al
  40d7c8:	sbb    rdx,0x3
  40d7cc:	sub    rdx,r8
  40d7cf:	cmp    rdx,rsi
  40d7d2:	jae    0x40d9ba
  40d7d8:	call   QWORD PTR [rip+0x3b002]        # 0x4487e0
  40d7de:	lea    rdx,[rip+0x2726b]        # 0x434a50
  40d7e5:	lea    rcx,[rax+0x60]
  40d7e9:	mov    r8,r14
  40d7ec:	call   0x40bbb0
  40d7f1:	lea    rdx,[rip+0x36108]        # 0x443900
  40d7f8:	mov    rcx,r13
  40d7fb:	call   0x42de48
  40d800:	jmp    0x40d776
  40d805:	lea    rcx,[rip+0x271ac]        # 0x4349b8
  40d80c:	call   0x40bb30
  40d811:	and    ebx,0x20
  40d814:	je     0x40d6ce
  40d81a:	lea    rcx,[rip+0x271c7]        # 0x4349e8
  40d821:	call   0x40bb30
  40d826:	lea    rcx,[rip+0x271dd]        # 0x434a0a
  40d82d:	mov    r8,rdi
  40d830:	mov    rdx,r14
  40d833:	call   0x40bb30
  40d838:	lea    rcx,[rip+0x271e5]        # 0x434a24
  40d83f:	mov    rdx,r12
  40d842:	call   0x40bb30
  40d847:	mov    rcx,rbp
  40d84a:	call   0x42ded0
  40d84f:	test   rax,rax
  40d852:	je     0x40d8c2
  40d854:	call   QWORD PTR [rip+0x3af86]        # 0x4487e0
  40d85a:	lea    rdx,[rip+0x27227]        # 0x434a88
  40d861:	lea    rcx,[rax+0x60]
  40d865:	call   0x40bbb0
  40d86a:	mov    ecx,0x1
  40d86f:	call   0x42df60
  40d874:	lea    rcx,[rip+0x2710d]        # 0x434988
  40d87b:	call   0x40bb30
  40d880:	xor    eax,eax
  40d882:	jmp    0x40d697
  40d887:	nop    WORD PTR [rax+rax*1+0x0]
  40d890:	mov    QWORD PTR [rip+0x36085],0x0        # 0x443920
  40d89b:	jmp    0x40d776
  40d8a0:	lea    r9,[rip+0x36059]        # 0x443900
  40d8a7:	mov    r8,rbx
  40d8aa:	mov    rdx,r13
  40d8ad:	mov    rcx,r9
  40d8b0:	call   0x42de98
  40d8b5:	mov    BYTE PTR [rax+rbx*1],0x0
  40d8b9:	jmp    0x40d752
  40d8be:	xchg   ax,ax
  40d8c0:	xor    ebx,ebx
  40d8c2:	lea    rcx,[rip+0x270ad]        # 0x434976
  40d8c9:	call   0x42ded0
  40d8ce:	test   rax,rax
  40d8d1:	mov    rbp,rax
  40d8d4:	jne    0x40d931
  40d8d6:	test   r15,r15
  40d8d9:	je     0x40d950
  40d8db:	mov    eax,DWORD PTR [r15+0xa0]
  40d8e2:	test   eax,eax
  40d8e4:	jne    0x40d940
  40d8e6:	lea    rcx,[rip+0x2723a]        # 0x434b27
  40d8ed:	call   0x412430
  40d8f2:	test   rax,rax
  40d8f5:	mov    rbp,rax
  40d8f8:	jne    0x40d703
  40d8fe:	xchg   ax,ax
  40d900:	mov    rbx,QWORD PTR [rip+0x3aed9]        # 0x4487e0
  40d907:	call   rbx
  40d909:	lea    rdx,[rip+0x27164]        # 0x434a74
  40d910:	lea    rcx,[rax+0x60]
  40d914:	call   0x40bbb0
  40d919:	cmp    DWORD PTR [r15+0xa0],0x0
  40d921:	jne    0x40d9a3
  40d927:	mov    ecx,0x1
  40d92c:	call   0x42df60
  40d931:	test   ebx,ebx
  40d933:	je     0x40d703
  40d939:	jmp    0x40d854
  40d93e:	xchg   ax,ax
  40d940:	test   ebx,ebx
  40d942:	je     0x40d900
  40d944:	jmp    0x40d854
  40d949:	nop    DWORD PTR [rax+0x0]
  40d950:	lea    rcx,[rip+0x271d0]        # 0x434b27
  40d957:	call   0x412430
  40d95c:	test   rax,rax
  40d95f:	mov    rbp,rax
  40d962:	jne    0x40d703
  40d968:	call   QWORD PTR [rip+0x3ae72]        # 0x4487e0
  40d96e:	lea    rdx,[rip+0x270ff]        # 0x434a74
  40d975:	lea    rcx,[rax+0x60]
  40d979:	call   0x40bbb0
  40d97e:	jmp    0x40d927
  40d980:	mov    rbx,QWORD PTR [rip+0x3ae59]        # 0x4487e0
  40d987:	call   rbx
  40d989:	lea    rdx,[rip+0x270e4]        # 0x434a74
  40d990:	lea    rcx,[rax+0x60]
  40d994:	call   0x40bbb0
  40d999:	test   r15,r15
  40d99c:	je     0x40d927
  40d99e:	jmp    0x40d919
  40d9a3:	call   rbx
  40d9a5:	lea    rdx,[rip+0x2711c]        # 0x434ac8
  40d9ac:	lea    rcx,[rax+0x60]
  40d9b0:	call   0x40bbb0
  40d9b5:	jmp    0x40d927
  40d9ba:	call   QWORD PTR [rip+0x3ae20]        # 0x4487e0
  40d9c0:	lea    rdx,[rip+0x2706e]        # 0x434a35
  40d9c7:	lea    rcx,[rax+0x60]
  40d9cb:	call   0x40bbb0
  40d9d0:	mov    ecx,0x1
  40d9d5:	call   0x42df60
  40d9da:	nop
  40d9db:	nop
  40d9dc:	nop
  40d9dd:	nop
  40d9de:	nop
  40d9df:	nop
  40d9e0:	jmp    QWORD PTR [rip+0x3acc2]        # 0x4486a8
  40d9e6:	nop
  40d9e7:	nop
  40d9e8:	jmp    QWORD PTR [rip+0x3acb2]        # 0x4486a0
  40d9ee:	nop
  40d9ef:	nop
  40d9f0:	jmp    QWORD PTR [rip+0x3aca2]        # 0x448698
  40d9f6:	nop
  40d9f7:	nop
  40d9f8:	jmp    QWORD PTR [rip+0x3ac92]        # 0x448690
  40d9fe:	nop
  40d9ff:	nop
  40da00:	jmp    QWORD PTR [rip+0x3ac82]        # 0x448688
  40da06:	nop
  40da07:	nop
  40da08:	jmp    QWORD PTR [rip+0x3ac72]        # 0x448680
  40da0e:	nop
  40da0f:	nop
  40da10:	jmp    QWORD PTR [rip+0x3ac62]        # 0x448678
  40da16:	nop
  40da17:	nop
  40da18:	jmp    QWORD PTR [rip+0x3ac52]        # 0x448670
  40da1e:	nop
  40da1f:	nop
  40da20:	jmp    QWORD PTR [rip+0x3ac42]        # 0x448668
  40da26:	nop
  40da27:	nop
  40da28:	jmp    QWORD PTR [rip+0x3ac32]        # 0x448660
  40da2e:	nop
  40da2f:	nop
  40da30:	jmp    QWORD PTR [rip+0x3ac22]        # 0x448658
  40da36:	nop
  40da37:	nop
  40da38:	jmp    QWORD PTR [rip+0x3ac12]        # 0x448650
  40da3e:	nop
  40da3f:	nop
  40da40:	jmp    QWORD PTR [rip+0x3ac02]        # 0x448648
  40da46:	nop
  40da47:	nop
  40da48:	jmp    QWORD PTR [rip+0x3abf2]        # 0x448640
  40da4e:	nop
  40da4f:	nop
  40da50:	jmp    QWORD PTR [rip+0x3abe2]        # 0x448638
  40da56:	nop
  40da57:	nop
  40da58:	jmp    QWORD PTR [rip+0x3abd2]        # 0x448630
  40da5e:	nop
  40da5f:	nop
  40da60:	jmp    QWORD PTR [rip+0x3abc2]        # 0x448628
  40da66:	nop
  40da67:	nop
  40da68:	jmp    QWORD PTR [rip+0x3abb2]        # 0x448620
  40da6e:	nop
  40da6f:	nop
  40da70:	jmp    QWORD PTR [rip+0x3aba2]        # 0x448618
  40da76:	nop
  40da77:	nop
  40da78:	jmp    QWORD PTR [rip+0x3ab92]        # 0x448610
  40da7e:	nop
  40da7f:	nop
  40da80:	jmp    QWORD PTR [rip+0x3ab82]        # 0x448608
  40da86:	nop
  40da87:	nop
  40da88:	jmp    QWORD PTR [rip+0x3ab72]        # 0x448600
  40da8e:	nop
  40da8f:	nop
  40da90:	jmp    QWORD PTR [rip+0x3ab42]        # 0x4485d8
  40da96:	nop
  40da97:	nop
  40da98:	jmp    QWORD PTR [rip+0x3ab32]        # 0x4485d0
  40da9e:	nop
  40da9f:	nop
  40daa0:	jmp    QWORD PTR [rip+0x3ab22]        # 0x4485c8
  40daa6:	nop
  40daa7:	nop
  40daa8:	jmp    QWORD PTR [rip+0x3ab12]        # 0x4485c0
  40daae:	nop
  40daaf:	nop
  40dab0:	jmp    QWORD PTR [rip+0x3ab02]        # 0x4485b8
  40dab6:	nop
  40dab7:	nop
  40dab8:	jmp    QWORD PTR [rip+0x3aaea]        # 0x4485a8
  40dabe:	nop
  40dabf:	nop
  40dac0:	jmp    QWORD PTR [rip+0x3aad2]        # 0x448598
  40dac6:	nop
  40dac7:	nop
  40dac8:	jmp    QWORD PTR [rip+0x3aac2]        # 0x448590
  40dace:	nop
  40dacf:	nop
  40dad0:	jmp    QWORD PTR [rip+0x3aab2]        # 0x448588
  40dad6:	nop
  40dad7:	nop
  40dad8:	jmp    QWORD PTR [rip+0x3aaa2]        # 0x448580
  40dade:	nop
  40dadf:	nop
  40dae0:	jmp    QWORD PTR [rip+0x3aa82]        # 0x448568
  40dae6:	nop
  40dae7:	nop
  40dae8:	jmp    QWORD PTR [rip+0x3aa72]        # 0x448560
  40daee:	nop
  40daef:	nop
  40daf0:	jmp    QWORD PTR [rip+0x3aa5a]        # 0x448550
  40daf6:	nop
  40daf7:	nop
  40daf8:	jmp    QWORD PTR [rip+0x3aa3a]        # 0x448538
  40dafe:	nop
  40daff:	nop
  40db00:	jmp    QWORD PTR [rip+0x3aa2a]        # 0x448530
  40db06:	nop
  40db07:	nop
  40db08:	jmp    QWORD PTR [rip+0x3aa12]        # 0x448520
  40db0e:	nop
  40db0f:	nop
  40db10:	jmp    QWORD PTR [rip+0x3aa02]        # 0x448518
  40db16:	nop
  40db17:	nop
  40db18:	jmp    QWORD PTR [rip+0x3a9ea]        # 0x448508
  40db1e:	nop
  40db1f:	nop
  40db20:	jmp    QWORD PTR [rip+0x3a9da]        # 0x448500
  40db26:	nop
  40db27:	nop
  40db28:	jmp    QWORD PTR [rip+0x3a9ca]        # 0x4484f8
  40db2e:	nop
  40db2f:	nop
  40db30:	jmp    QWORD PTR [rip+0x3a9ba]        # 0x4484f0
  40db36:	nop
  40db37:	nop
  40db38:	jmp    QWORD PTR [rip+0x3a9aa]        # 0x4484e8
  40db3e:	nop
  40db3f:	nop
  40db40:	jmp    QWORD PTR [rip+0x3a99a]        # 0x4484e0
  40db46:	nop
  40db47:	nop
  40db48:	jmp    QWORD PTR [rip+0x3a98a]        # 0x4484d8
  40db4e:	nop
  40db4f:	nop
  40db50:	jmp    QWORD PTR [rip+0x3a97a]        # 0x4484d0
  40db56:	nop
  40db57:	nop
  40db58:	jmp    QWORD PTR [rip+0x3a96a]        # 0x4484c8
  40db5e:	nop
  40db5f:	nop
  40db60:	jmp    QWORD PTR [rip+0x3a95a]        # 0x4484c0
  40db66:	nop
  40db67:	nop
  40db68:	jmp    QWORD PTR [rip+0x3a94a]        # 0x4484b8
  40db6e:	nop
  40db6f:	nop
  40db70:	jmp    QWORD PTR [rip+0x3a93a]        # 0x4484b0
  40db76:	nop
  40db77:	nop
  40db78:	jmp    QWORD PTR [rip+0x3a92a]        # 0x4484a8
  40db7e:	nop
  40db7f:	nop
  40db80:	jmp    QWORD PTR [rip+0x3a91a]        # 0x4484a0
  40db86:	nop
  40db87:	nop
  40db88:	jmp    QWORD PTR [rip+0x3a90a]        # 0x448498
  40db8e:	nop
  40db8f:	nop
  40db90:	jmp    QWORD PTR [rip+0x3a8fa]        # 0x448490
  40db96:	nop
  40db97:	nop
  40db98:	jmp    QWORD PTR [rip+0x3a8ea]        # 0x448488
  40db9e:	nop
  40db9f:	nop
  40dba0:	jmp    QWORD PTR [rip+0x3a8da]        # 0x448480
  40dba6:	nop
  40dba7:	nop
  40dba8:	jmp    QWORD PTR [rip+0x3a8c2]        # 0x448470
  40dbae:	nop
  40dbaf:	nop
  40dbb0:	jmp    QWORD PTR [rip+0x3a8b2]        # 0x448468
  40dbb6:	nop
  40dbb7:	nop
  40dbb8:	jmp    QWORD PTR [rip+0x3a8a2]        # 0x448460
  40dbbe:	nop
  40dbbf:	nop
  40dbc0:	jmp    QWORD PTR [rip+0x3a882]        # 0x448448
  40dbc6:	nop
  40dbc7:	nop
  40dbc8:	jmp    QWORD PTR [rip+0x3a872]        # 0x448440
  40dbce:	nop
  40dbcf:	nop
  40dbd0:	jmp    QWORD PTR [rip+0x3a862]        # 0x448438
  40dbd6:	nop
  40dbd7:	nop
  40dbd8:	jmp    QWORD PTR [rip+0x3a852]        # 0x448430
  40dbde:	nop
  40dbdf:	nop
  40dbe0:	jmp    QWORD PTR [rip+0x3a842]        # 0x448428
  40dbe6:	nop
  40dbe7:	nop
  40dbe8:	jmp    QWORD PTR [rip+0x3a832]        # 0x448420
  40dbee:	nop
  40dbef:	nop
  40dbf0:	jmp    QWORD PTR [rip+0x3a822]        # 0x448418
  40dbf6:	nop
  40dbf7:	nop
  40dbf8:	jmp    QWORD PTR [rip+0x3a812]        # 0x448410
  40dbfe:	nop
  40dbff:	nop
  40dc00:	jmp    QWORD PTR [rip+0x3a802]        # 0x448408
  40dc06:	nop
  40dc07:	nop
  40dc08:	jmp    QWORD PTR [rip+0x3a7f2]        # 0x448400
  40dc0e:	nop
  40dc0f:	nop
  40dc10:	jmp    QWORD PTR [rip+0x3a7e2]        # 0x4483f8
  40dc16:	nop
  40dc17:	nop
  40dc18:	jmp    QWORD PTR [rip+0x3a7d2]        # 0x4483f0
  40dc1e:	nop
  40dc1f:	nop
  40dc20:	jmp    QWORD PTR [rip+0x3a7c2]        # 0x4483e8
  40dc26:	nop
  40dc27:	nop
  40dc28:	jmp    QWORD PTR [rip+0x3a7b2]        # 0x4483e0
  40dc2e:	nop
  40dc2f:	nop
  40dc30:	jmp    QWORD PTR [rip+0x3a7a2]        # 0x4483d8
  40dc36:	nop
  40dc37:	nop
  40dc38:	jmp    QWORD PTR [rip+0x3a792]        # 0x4483d0
  40dc3e:	nop
  40dc3f:	nop
  40dc40:	jmp    QWORD PTR [rip+0x3a782]        # 0x4483c8
  40dc46:	nop
  40dc47:	nop
  40dc48:	jmp    QWORD PTR [rip+0x3a772]        # 0x4483c0
  40dc4e:	nop
  40dc4f:	nop
  40dc50:	jmp    QWORD PTR [rip+0x3a762]        # 0x4483b8
  40dc56:	nop
  40dc57:	nop
  40dc58:	jmp    QWORD PTR [rip+0x3a752]        # 0x4483b0
  40dc5e:	nop
  40dc5f:	nop
  40dc60:	jmp    QWORD PTR [rip+0x3a742]        # 0x4483a8
  40dc66:	nop
  40dc67:	nop
  40dc68:	jmp    QWORD PTR [rip+0x3a732]        # 0x4483a0
  40dc6e:	nop
  40dc6f:	nop
  40dc70:	jmp    QWORD PTR [rip+0x3a722]        # 0x448398
  40dc76:	nop
  40dc77:	nop
  40dc78:	jmp    QWORD PTR [rip+0x3a712]        # 0x448390
  40dc7e:	nop
  40dc7f:	nop
  40dc80:	jmp    QWORD PTR [rip+0x3a702]        # 0x448388
  40dc86:	nop
  40dc87:	nop
  40dc88:	jmp    QWORD PTR [rip+0x3a6f2]        # 0x448380
  40dc8e:	nop
  40dc8f:	nop
  40dc90:	jmp    QWORD PTR [rip+0x3a6e2]        # 0x448378
  40dc96:	nop
  40dc97:	nop
  40dc98:	jmp    QWORD PTR [rip+0x3a6d2]        # 0x448370
  40dc9e:	nop
  40dc9f:	nop
  40dca0:	jmp    QWORD PTR [rip+0x3a6c2]        # 0x448368
  40dca6:	nop
  40dca7:	nop
  40dca8:	jmp    QWORD PTR [rip+0x3a662]        # 0x448310
  40dcae:	nop
  40dcaf:	nop
  40dcb0:	jmp    QWORD PTR [rip+0x3a652]        # 0x448308
  40dcb6:	nop
  40dcb7:	nop
  40dcb8:	jmp    QWORD PTR [rip+0x3a642]        # 0x448300
  40dcbe:	nop
  40dcbf:	nop
  40dcc0:	jmp    QWORD PTR [rip+0x3a632]        # 0x4482f8
  40dcc6:	nop
  40dcc7:	nop
  40dcc8:	jmp    QWORD PTR [rip+0x3a622]        # 0x4482f0
  40dcce:	nop
  40dccf:	nop
  40dcd0:	jmp    QWORD PTR [rip+0x3a612]        # 0x4482e8
  40dcd6:	nop
  40dcd7:	nop
  40dcd8:	jmp    QWORD PTR [rip+0x3a602]        # 0x4482e0
  40dcde:	nop
  40dcdf:	nop
  40dce0:	jmp    QWORD PTR [rip+0x3a5f2]        # 0x4482d8
  40dce6:	nop
  40dce7:	nop
  40dce8:	jmp    QWORD PTR [rip+0x3a5e2]        # 0x4482d0
  40dcee:	nop
  40dcef:	nop
  40dcf0:	jmp    QWORD PTR [rip+0x3a5d2]        # 0x4482c8
  40dcf6:	nop
  40dcf7:	nop
  40dcf8:	jmp    QWORD PTR [rip+0x3a5c2]        # 0x4482c0
  40dcfe:	nop
  40dcff:	nop
  40dd00:	jmp    QWORD PTR [rip+0x3a5b2]        # 0x4482b8
  40dd06:	nop
  40dd07:	nop
  40dd08:	jmp    QWORD PTR [rip+0x3a5a2]        # 0x4482b0
  40dd0e:	nop
  40dd0f:	nop
  40dd10:	jmp    QWORD PTR [rip+0x3a58a]        # 0x4482a0
  40dd16:	nop
  40dd17:	nop
  40dd18:	jmp    QWORD PTR [rip+0x3a57a]        # 0x448298
  40dd1e:	nop
  40dd1f:	nop
  40dd20:	jmp    QWORD PTR [rip+0x3a56a]        # 0x448290
  40dd26:	nop
  40dd27:	nop
  40dd28:	jmp    QWORD PTR [rip+0x3a55a]        # 0x448288
  40dd2e:	nop
  40dd2f:	nop
  40dd30:	jmp    QWORD PTR [rip+0x3a54a]        # 0x448280
  40dd36:	nop
  40dd37:	nop
  40dd38:	jmp    QWORD PTR [rip+0x3a53a]        # 0x448278
  40dd3e:	nop
  40dd3f:	nop
  40dd40:	jmp    QWORD PTR [rip+0x3a52a]        # 0x448270
  40dd46:	nop
  40dd47:	nop
  40dd48:	jmp    QWORD PTR [rip+0x3a51a]        # 0x448268
  40dd4e:	nop
  40dd4f:	nop
  40dd50:	jmp    QWORD PTR [rip+0x3a50a]        # 0x448260
  40dd56:	nop
  40dd57:	nop
  40dd58:	jmp    QWORD PTR [rip+0x3a4fa]        # 0x448258
  40dd5e:	nop
  40dd5f:	nop
  40dd60:	jmp    QWORD PTR [rip+0x3a4ea]        # 0x448250
  40dd66:	nop
  40dd67:	nop
  40dd68:	jmp    QWORD PTR [rip+0x3a4da]        # 0x448248
  40dd6e:	nop
  40dd6f:	nop
  40dd70:	jmp    QWORD PTR [rip+0x3a4ca]        # 0x448240
  40dd76:	nop
  40dd77:	nop
  40dd78:	jmp    QWORD PTR [rip+0x3a4ba]        # 0x448238
  40dd7e:	nop
  40dd7f:	nop
  40dd80:	jmp    QWORD PTR [rip+0x3a4aa]        # 0x448230
  40dd86:	nop
  40dd87:	nop
  40dd88:	jmp    QWORD PTR [rip+0x3a49a]        # 0x448228
  40dd8e:	nop
  40dd8f:	nop
  40dd90:	jmp    QWORD PTR [rip+0x3a48a]        # 0x448220
  40dd96:	nop
  40dd97:	nop
  40dd98:	jmp    QWORD PTR [rip+0x3a47a]        # 0x448218
  40dd9e:	nop
  40dd9f:	nop
  40dda0:	jmp    QWORD PTR [rip+0x3a46a]        # 0x448210
  40dda6:	nop
  40dda7:	nop
  40dda8:	jmp    QWORD PTR [rip+0x3a45a]        # 0x448208
  40ddae:	nop
  40ddaf:	nop
  40ddb0:	jmp    QWORD PTR [rip+0x3a44a]        # 0x448200
  40ddb6:	nop
  40ddb7:	nop
  40ddb8:	jmp    QWORD PTR [rip+0x3a43a]        # 0x4481f8
  40ddbe:	nop
  40ddbf:	nop
  40ddc0:	jmp    QWORD PTR [rip+0x3a42a]        # 0x4481f0
  40ddc6:	nop
  40ddc7:	nop
  40ddc8:	jmp    QWORD PTR [rip+0x3a41a]        # 0x4481e8
  40ddce:	nop
  40ddcf:	nop
  40ddd0:	jmp    QWORD PTR [rip+0x3a40a]        # 0x4481e0
  40ddd6:	nop
  40ddd7:	nop
  40ddd8:	jmp    QWORD PTR [rip+0x3a3fa]        # 0x4481d8
  40ddde:	nop
  40dddf:	nop
  40dde0:	jmp    QWORD PTR [rip+0x3a3ea]        # 0x4481d0
  40dde6:	nop
  40dde7:	nop
  40dde8:	jmp    QWORD PTR [rip+0x3a3da]        # 0x4481c8
  40ddee:	nop
  40ddef:	nop
  40ddf0:	jmp    QWORD PTR [rip+0x3a3ca]        # 0x4481c0
  40ddf6:	nop
  40ddf7:	nop
  40ddf8:	jmp    QWORD PTR [rip+0x3a3ba]        # 0x4481b8
  40ddfe:	nop
  40ddff:	nop
  40de00:	jmp    QWORD PTR [rip+0x3a3aa]        # 0x4481b0
  40de06:	nop
  40de07:	nop
  40de08:	jmp    QWORD PTR [rip+0x3a39a]        # 0x4481a8
  40de0e:	nop
  40de0f:	nop
  40de10:	jmp    QWORD PTR [rip+0x3a38a]        # 0x4481a0
  40de16:	nop
  40de17:	nop
  40de18:	jmp    QWORD PTR [rip+0x3a37a]        # 0x448198
  40de1e:	nop
  40de1f:	nop
  40de20:	jmp    QWORD PTR [rip+0x3a36a]        # 0x448190
  40de26:	nop
  40de27:	nop
  40de28:	jmp    QWORD PTR [rip+0x3a35a]        # 0x448188
  40de2e:	nop
  40de2f:	nop
  40de30:	jmp    QWORD PTR [rip+0x3a34a]        # 0x448180
  40de36:	nop
  40de37:	nop
  40de38:	jmp    QWORD PTR [rip+0x3a33a]        # 0x448178
  40de3e:	nop
  40de3f:	nop
  40de40:	jmp    QWORD PTR [rip+0x3a32a]        # 0x448170
  40de46:	nop
  40de47:	nop
  40de48:	jmp    QWORD PTR [rip+0x3a31a]        # 0x448168
  40de4e:	nop
  40de4f:	nop
  40de50:	jmp    QWORD PTR [rip+0x3a30a]        # 0x448160
  40de56:	nop
  40de57:	nop
  40de58:	jmp    QWORD PTR [rip+0x3a2fa]        # 0x448158
  40de5e:	nop
  40de5f:	nop
  40de60:	jmp    QWORD PTR [rip+0x3a2ea]        # 0x448150
  40de66:	nop
  40de67:	nop
  40de68:	jmp    QWORD PTR [rip+0x3a2da]        # 0x448148
  40de6e:	nop
  40de6f:	nop
  40de70:	jmp    QWORD PTR [rip+0x3a2ca]        # 0x448140
  40de76:	nop
  40de77:	nop
  40de78:	jmp    QWORD PTR [rip+0x3a2ba]        # 0x448138
  40de7e:	nop
  40de7f:	nop
  40de80:	jmp    QWORD PTR [rip+0x3a2aa]        # 0x448130
  40de86:	nop
  40de87:	nop
  40de88:	jmp    QWORD PTR [rip+0x3a29a]        # 0x448128
  40de8e:	nop
  40de8f:	nop
  40de90:	jmp    QWORD PTR [rip+0x3a28a]        # 0x448120
  40de96:	nop
  40de97:	nop
  40de98:	jmp    QWORD PTR [rip+0x3a27a]        # 0x448118
  40de9e:	nop
  40de9f:	nop
  40dea0:	jmp    QWORD PTR [rip+0x3a26a]        # 0x448110
  40dea6:	nop
  40dea7:	nop
  40dea8:	jmp    QWORD PTR [rip+0x3a25a]        # 0x448108
  40deae:	nop
  40deaf:	nop
  40deb0:	jmp    QWORD PTR [rip+0x3a24a]        # 0x448100
  40deb6:	nop
  40deb7:	nop
  40deb8:	jmp    QWORD PTR [rip+0x3a23a]        # 0x4480f8
  40debe:	nop
  40debf:	nop
  40dec0:	jmp    QWORD PTR [rip+0x3a22a]        # 0x4480f0
  40dec6:	nop
  40dec7:	nop
  40dec8:	jmp    QWORD PTR [rip+0x3a21a]        # 0x4480e8
  40dece:	nop
  40decf:	nop
  40ded0:	jmp    QWORD PTR [rip+0x3a20a]        # 0x4480e0
  40ded6:	nop
  40ded7:	nop
  40ded8:	jmp    QWORD PTR [rip+0x3a1fa]        # 0x4480d8
  40dede:	nop
  40dedf:	nop
  40dee0:	jmp    QWORD PTR [rip+0x3a1ea]        # 0x4480d0
  40dee6:	nop
  40dee7:	nop
  40dee8:	jmp    QWORD PTR [rip+0x3a1da]        # 0x4480c8
  40deee:	nop
  40deef:	nop
  40def0:	jmp    QWORD PTR [rip+0x3a1ca]        # 0x4480c0
  40def6:	nop
  40def7:	nop
  40def8:	jmp    QWORD PTR [rip+0x3a1ba]        # 0x4480b8
  40defe:	nop
  40deff:	nop
  40df00:	jmp    QWORD PTR [rip+0x3a1aa]        # 0x4480b0
  40df06:	nop
  40df07:	nop
  40df08:	jmp    QWORD PTR [rip+0x3a19a]        # 0x4480a8
  40df0e:	nop
  40df0f:	nop
  40df10:	jmp    QWORD PTR [rip+0x3a18a]        # 0x4480a0
  40df16:	nop
  40df17:	nop
  40df18:	jmp    QWORD PTR [rip+0x3a17a]        # 0x448098
  40df1e:	nop
  40df1f:	nop
  40df20:	jmp    QWORD PTR [rip+0x3a16a]        # 0x448090
  40df26:	nop
  40df27:	nop
  40df28:	jmp    QWORD PTR [rip+0x3a15a]        # 0x448088
  40df2e:	nop
  40df2f:	nop
  40df30:	jmp    QWORD PTR [rip+0x3a14a]        # 0x448080
  40df36:	nop
  40df37:	nop
  40df38:	jmp    QWORD PTR [rip+0x3a13a]        # 0x448078
  40df3e:	nop
  40df3f:	nop
  40df40:	jmp    QWORD PTR [rip+0x3a12a]        # 0x448070
  40df46:	nop
  40df47:	nop
  40df48:	jmp    QWORD PTR [rip+0x3a11a]        # 0x448068
  40df4e:	nop
  40df4f:	nop
  40df50:	jmp    QWORD PTR [rip+0x3a10a]        # 0x448060
  40df56:	nop
  40df57:	nop
  40df58:	jmp    QWORD PTR [rip+0x3a0fa]        # 0x448058
  40df5e:	nop
  40df5f:	nop
  40df60:	jmp    QWORD PTR [rip+0x3a0ea]        # 0x448050
  40df66:	nop
  40df67:	nop
  40df68:	jmp    QWORD PTR [rip+0x3a0da]        # 0x448048
  40df6e:	nop
  40df6f:	nop
  40df70:	jmp    QWORD PTR [rip+0x3a0ca]        # 0x448040
  40df76:	nop
  40df77:	nop
  40df78:	jmp    QWORD PTR [rip+0x3a0ba]        # 0x448038
  40df7e:	nop
  40df7f:	nop
  40df80:	jmp    QWORD PTR [rip+0x3a0aa]        # 0x448030
  40df86:	nop
  40df87:	nop
  40df88:	jmp    QWORD PTR [rip+0x3a09a]        # 0x448028
  40df8e:	nop
  40df8f:	nop
  40df90:	jmp    QWORD PTR [rip+0x3a08a]        # 0x448020
  40df96:	nop
  40df97:	nop
  40df98:	jmp    QWORD PTR [rip+0x3a07a]        # 0x448018
  40df9e:	nop
  40df9f:	nop
  40dfa0:	jmp    QWORD PTR [rip+0x3a06a]        # 0x448010
  40dfa6:	nop
  40dfa7:	nop
  40dfa8:	jmp    QWORD PTR [rip+0x3a05a]        # 0x448008
  40dfae:	nop
  40dfaf:	nop
  40dfb0:	jmp    QWORD PTR [rip+0x3a04a]        # 0x448000
  40dfb6:	nop
  40dfb7:	nop
  40dfb8:	jmp    QWORD PTR [rip+0x3a03a]        # 0x447ff8
  40dfbe:	nop
  40dfbf:	nop
  40dfc0:	jmp    QWORD PTR [rip+0x3a02a]        # 0x447ff0
  40dfc6:	nop
  40dfc7:	nop
  40dfc8:	jmp    QWORD PTR [rip+0x3a01a]        # 0x447fe8
  40dfce:	nop
  40dfcf:	nop
  40dfd0:	jmp    QWORD PTR [rip+0x3a00a]        # 0x447fe0
  40dfd6:	nop
  40dfd7:	nop
  40dfd8:	jmp    QWORD PTR [rip+0x39ffa]        # 0x447fd8
  40dfde:	nop
  40dfdf:	nop
  40dfe0:	jmp    QWORD PTR [rip+0x39fea]        # 0x447fd0
  40dfe6:	nop
  40dfe7:	nop
  40dfe8:	jmp    QWORD PTR [rip+0x39fda]        # 0x447fc8
  40dfee:	nop
  40dfef:	nop
  40dff0:	jmp    QWORD PTR [rip+0x39fca]        # 0x447fc0
  40dff6:	nop
  40dff7:	nop
  40dff8:	jmp    QWORD PTR [rip+0x39fba]        # 0x447fb8
  40dffe:	nop
  40dfff:	nop
  40e000:	jmp    QWORD PTR [rip+0x39faa]        # 0x447fb0
  40e006:	nop
  40e007:	nop
  40e008:	jmp    QWORD PTR [rip+0x39f9a]        # 0x447fa8
  40e00e:	nop
  40e00f:	nop
  40e010:	jmp    QWORD PTR [rip+0x39f8a]        # 0x447fa0
  40e016:	nop
  40e017:	nop
  40e018:	jmp    QWORD PTR [rip+0x39f7a]        # 0x447f98
  40e01e:	nop
  40e01f:	nop
  40e020:	jmp    QWORD PTR [rip+0x39f6a]        # 0x447f90
  40e026:	nop
  40e027:	nop
  40e028:	jmp    QWORD PTR [rip+0x39f5a]        # 0x447f88
  40e02e:	nop
  40e02f:	nop
  40e030:	jmp    QWORD PTR [rip+0x39f4a]        # 0x447f80
  40e036:	nop
  40e037:	nop
  40e038:	jmp    QWORD PTR [rip+0x39f3a]        # 0x447f78
  40e03e:	nop
  40e03f:	nop
  40e040:	jmp    QWORD PTR [rip+0x39f2a]        # 0x447f70
  40e046:	nop
  40e047:	nop
  40e048:	jmp    QWORD PTR [rip+0x39f1a]        # 0x447f68
  40e04e:	nop
  40e04f:	nop
  40e050:	jmp    QWORD PTR [rip+0x39f02]        # 0x447f58
  40e056:	nop
  40e057:	nop
  40e058:	jmp    QWORD PTR [rip+0x39ef2]        # 0x447f50
  40e05e:	nop
  40e05f:	nop
  40e060:	jmp    QWORD PTR [rip+0x39ee2]        # 0x447f48
  40e066:	nop
  40e067:	nop
  40e068:	jmp    QWORD PTR [rip+0x39ed2]        # 0x447f40
  40e06e:	nop
  40e06f:	nop
  40e070:	jmp    QWORD PTR [rip+0x39ec2]        # 0x447f38
  40e076:	nop
  40e077:	nop
  40e078:	jmp    QWORD PTR [rip+0x39eb2]        # 0x447f30
  40e07e:	nop
  40e07f:	nop
  40e080:	jmp    QWORD PTR [rip+0x39ea2]        # 0x447f28
  40e086:	nop
  40e087:	nop
  40e088:	jmp    QWORD PTR [rip+0x39e92]        # 0x447f20
  40e08e:	nop
  40e08f:	nop
  40e090:	jmp    QWORD PTR [rip+0x39e82]        # 0x447f18
  40e096:	nop
  40e097:	nop
  40e098:	jmp    QWORD PTR [rip+0x39e6a]        # 0x447f08
  40e09e:	nop
  40e09f:	nop
  40e0a0:	jmp    QWORD PTR [rip+0x39e5a]        # 0x447f00
  40e0a6:	nop
  40e0a7:	nop
  40e0a8:	jmp    QWORD PTR [rip+0x39e4a]        # 0x447ef8
  40e0ae:	nop
  40e0af:	nop
  40e0b0:	jmp    QWORD PTR [rip+0x39e3a]        # 0x447ef0
  40e0b6:	nop
  40e0b7:	nop
  40e0b8:	jmp    QWORD PTR [rip+0x39e2a]        # 0x447ee8
  40e0be:	nop
  40e0bf:	nop
  40e0c0:	jmp    QWORD PTR [rip+0x39e1a]        # 0x447ee0
  40e0c6:	nop
  40e0c7:	nop
  40e0c8:	jmp    QWORD PTR [rip+0x39e02]        # 0x447ed0
  40e0ce:	nop
  40e0cf:	nop
  40e0d0:	jmp    QWORD PTR [rip+0x39df2]        # 0x447ec8
  40e0d6:	nop
  40e0d7:	nop
  40e0d8:	jmp    QWORD PTR [rip+0x39de2]        # 0x447ec0
  40e0de:	nop
  40e0df:	nop
  40e0e0:	jmp    QWORD PTR [rip+0x39dd2]        # 0x447eb8
  40e0e6:	nop
  40e0e7:	nop
  40e0e8:	jmp    QWORD PTR [rip+0x39dc2]        # 0x447eb0
  40e0ee:	nop
  40e0ef:	nop
  40e0f0:	jmp    QWORD PTR [rip+0x39db2]        # 0x447ea8
  40e0f6:	nop
  40e0f7:	nop
  40e0f8:	jmp    QWORD PTR [rip+0x39da2]        # 0x447ea0
  40e0fe:	nop
  40e0ff:	nop
  40e100:	jmp    QWORD PTR [rip+0x39d92]        # 0x447e98
  40e106:	nop
  40e107:	nop
  40e108:	jmp    QWORD PTR [rip+0x39d82]        # 0x447e90
  40e10e:	nop
  40e10f:	nop
  40e110:	jmp    QWORD PTR [rip+0x39d72]        # 0x447e88
  40e116:	nop
  40e117:	nop
  40e118:	jmp    QWORD PTR [rip+0x39d62]        # 0x447e80
  40e11e:	nop
  40e11f:	nop
  40e120:	jmp    QWORD PTR [rip+0x39d52]        # 0x447e78
  40e126:	nop
  40e127:	nop
  40e128:	jmp    QWORD PTR [rip+0x39d42]        # 0x447e70
  40e12e:	nop
  40e12f:	nop
  40e130:	jmp    QWORD PTR [rip+0x39d32]        # 0x447e68
  40e136:	nop
  40e137:	nop
  40e138:	jmp    QWORD PTR [rip+0x39d22]        # 0x447e60
  40e13e:	nop
  40e13f:	nop
  40e140:	jmp    QWORD PTR [rip+0x39d12]        # 0x447e58
  40e146:	nop
  40e147:	nop
  40e148:	jmp    QWORD PTR [rip+0x39d02]        # 0x447e50
  40e14e:	nop
  40e14f:	nop
  40e150:	jmp    QWORD PTR [rip+0x39cf2]        # 0x447e48
  40e156:	nop
  40e157:	nop
  40e158:	jmp    QWORD PTR [rip+0x39ce2]        # 0x447e40
  40e15e:	nop
  40e15f:	nop
  40e160:	jmp    QWORD PTR [rip+0x39cd2]        # 0x447e38
  40e166:	nop
  40e167:	nop
  40e168:	jmp    QWORD PTR [rip+0x39cc2]        # 0x447e30
  40e16e:	nop
  40e16f:	nop
  40e170:	jmp    QWORD PTR [rip+0x39cb2]        # 0x447e28
  40e176:	nop
  40e177:	nop
  40e178:	jmp    QWORD PTR [rip+0x39ca2]        # 0x447e20
  40e17e:	nop
  40e17f:	nop
  40e180:	jmp    QWORD PTR [rip+0x39c92]        # 0x447e18
  40e186:	nop
  40e187:	nop
  40e188:	jmp    QWORD PTR [rip+0x39c82]        # 0x447e10
  40e18e:	nop
  40e18f:	nop
  40e190:	jmp    QWORD PTR [rip+0x39c72]        # 0x447e08
  40e196:	nop
  40e197:	nop
  40e198:	jmp    QWORD PTR [rip+0x39c62]        # 0x447e00
  40e19e:	nop
  40e19f:	nop
  40e1a0:	jmp    QWORD PTR [rip+0x39c52]        # 0x447df8
  40e1a6:	nop
  40e1a7:	nop
  40e1a8:	jmp    QWORD PTR [rip+0x39c42]        # 0x447df0
  40e1ae:	nop
  40e1af:	nop
  40e1b0:	jmp    QWORD PTR [rip+0x39c32]        # 0x447de8
  40e1b6:	nop
  40e1b7:	nop
  40e1b8:	jmp    QWORD PTR [rip+0x39c22]        # 0x447de0
  40e1be:	nop
  40e1bf:	nop
  40e1c0:	jmp    QWORD PTR [rip+0x39c12]        # 0x447dd8
  40e1c6:	nop
  40e1c7:	nop
  40e1c8:	jmp    QWORD PTR [rip+0x39c02]        # 0x447dd0
  40e1ce:	nop
  40e1cf:	nop
  40e1d0:	jmp    QWORD PTR [rip+0x39bf2]        # 0x447dc8
  40e1d6:	nop
  40e1d7:	nop
  40e1d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e1e0:	sub    rsp,0x28
  40e1e4:	lea    rcx,[rip+0x20e55]        # 0x42f040
  40e1eb:	xor    edx,edx
  40e1ed:	call   0x4253e0
  40e1f2:	mov    ecx,0x1
  40e1f7:	call   0x42df60
  40e1fc:	nop
  40e1fd:	nop    DWORD PTR [rax]
  40e200:	mov    DWORD PTR [rip+0x35b36],0x0        # 0x443d40
  40e20a:	mov    r9,QWORD PTR [rip+0x35b2f]        # 0x443d40
  40e211:	mov    r8d,0x1
  40e217:	jmp    0x41fb20
  40e21c:	nop    DWORD PTR [rax+0x0]
  40e220:	push   rsi
  40e221:	push   rbx
  40e222:	sub    rsp,0x28
  40e226:	cmp    rcx,0xf
  40e22a:	mov    rbx,rcx
  40e22d:	mov    rsi,rdx
  40e230:	ja     0x40e250
  40e232:	lea    r8,[rip+0x26907]        # 0x434b40
  40e239:	mov    r9d,0x1
  40e23f:	mov    rdx,rsi
  40e242:	mov    rcx,rbx
  40e245:	add    rsp,0x28
  40e249:	pop    rbx
  40e24a:	pop    rsi
  40e24b:	jmp    0x420ad0
  40e250:	call   0x419420
  40e255:	cmp    DWORD PTR [rsi+0x18],0x270f
  40e25c:	jbe    0x40e274
  40e25e:	call   QWORD PTR [rip+0x3a57c]        # 0x4487e0
  40e264:	mov    rdx,QWORD PTR [rip+0x2f8e5]        # 0x43db50
  40e26b:	add    rax,0x60
  40e26f:	mov    QWORD PTR [rdx],rax
  40e272:	jmp    0x40e232
  40e274:	add    rsp,0x28
  40e278:	pop    rbx
  40e279:	pop    rsi
  40e27a:	ret    
  40e27b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e280:	push   rbx
  40e281:	sub    rsp,0x20
  40e285:	mov    r8d,0x44
  40e28b:	mov    rbx,rcx
  40e28e:	call   0x41de60
  40e293:	test   eax,eax
  40e295:	je     0x40e29d
  40e297:	test   BYTE PTR [rbx+0x10],0x4
  40e29b:	jne    0x40e2a3
  40e29d:	add    rsp,0x20
  40e2a1:	pop    rbx
  40e2a2:	ret    
  40e2a3:	mov    rax,QWORD PTR [rip+0x20e2e]        # 0x42f0d8
  40e2aa:	lea    rcx,[rip+0x20d8f]        # 0x42f040
  40e2b1:	mov    edx,0x40
  40e2b6:	add    rsp,0x20
  40e2ba:	pop    rbx
  40e2bb:	rex.W jmp rax
  40e2be:	xchg   ax,ax
  40e2c0:	push   rbx
  40e2c1:	sub    rsp,0x20
  40e2c5:	mov    r8d,0x42
  40e2cb:	mov    rbx,rcx
  40e2ce:	call   0x41de60
  40e2d3:	test   eax,eax
  40e2d5:	je     0x40e2dd
  40e2d7:	test   BYTE PTR [rbx+0x10],0x4
  40e2db:	jne    0x40e2e3
  40e2dd:	add    rsp,0x20
  40e2e1:	pop    rbx
  40e2e2:	ret    
  40e2e3:	mov    rax,QWORD PTR [rip+0x20dee]        # 0x42f0d8
  40e2ea:	lea    rcx,[rip+0x20d4f]        # 0x42f040
  40e2f1:	mov    edx,0x40
  40e2f6:	add    rsp,0x20
  40e2fa:	pop    rbx
  40e2fb:	rex.W jmp rax
  40e2fe:	xchg   ax,ax
  40e300:	push   rbx
  40e301:	sub    rsp,0x20
  40e305:	mov    r8d,0x3f
  40e30b:	mov    rbx,rcx
  40e30e:	call   0x41de60
  40e313:	test   eax,eax
  40e315:	je     0x40e31d
  40e317:	test   BYTE PTR [rbx+0x10],0x4
  40e31b:	jne    0x40e323
  40e31d:	add    rsp,0x20
  40e321:	pop    rbx
  40e322:	ret    
  40e323:	mov    rax,QWORD PTR [rip+0x20dae]        # 0x42f0d8
  40e32a:	lea    rcx,[rip+0x20d0f]        # 0x42f040
  40e331:	mov    edx,0x40
  40e336:	add    rsp,0x20
  40e33a:	pop    rbx
  40e33b:	rex.W jmp rax
  40e33e:	nop
  40e33f:	nop
  40e340:	sub    rsp,0x38
  40e344:	mov    QWORD PTR [rsp+0x50],r8
  40e349:	lea    r8,[rsp+0x50]
  40e34e:	mov    QWORD PTR [rsp+0x58],r9
  40e353:	mov    QWORD PTR [rsp+0x28],r8
  40e358:	call   0x4292e0
  40e35d:	add    rsp,0x38
  40e361:	ret    
  40e362:	nop    DWORD PTR [rax+0x0]
  40e366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e370:	push   rbx
  40e371:	sub    rsp,0x20
  40e375:	movsxd rbx,ecx
  40e378:	xor    ecx,ecx
  40e37a:	call   QWORD PTR [rip+0x3a540]        # 0x4488c0
  40e380:	cmp    rbx,0xffffffffffffffff
  40e384:	je     0x40e3ac
  40e386:	imul   rbx,rbx,0x15180
  40e38d:	test   rax,rax
  40e390:	js     0x40e3b5
  40e392:	movabs rdx,0x7fffffffffffffff
  40e39c:	sub    rdx,rax
  40e39f:	cmp    rbx,rdx
  40e3a2:	setg   dl
  40e3a5:	test   dl,dl
  40e3a7:	jne    0x40e3ca
  40e3a9:	add    rbx,rax
  40e3ac:	mov    rax,rbx
  40e3af:	add    rsp,0x20
  40e3b3:	pop    rbx
  40e3b4:	ret    
  40e3b5:	movabs rdx,0x8000000000000000
  40e3bf:	sub    rdx,rax
  40e3c2:	cmp    rbx,rdx
  40e3c5:	setl   dl
  40e3c8:	jmp    0x40e3a5
  40e3ca:	call   QWORD PTR [rip+0x3a410]        # 0x4487e0
  40e3d0:	lea    rdx,[rip+0x280e9]        # 0x4364c0
  40e3d7:	lea    rcx,[rax+0x60]
  40e3db:	call   0x40e340
  40e3e0:	mov    ecx,0x1
  40e3e5:	call   0x42df60
  40e3ea:	nop
  40e3eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e3f0:	push   rbp
  40e3f1:	push   rdi
  40e3f2:	push   rsi
  40e3f3:	push   rbx
  40e3f4:	sub    rsp,0x38
  40e3f8:	mov    rsi,QWORD PTR [rip+0x3a3e1]        # 0x4487e0
  40e3ff:	mov    rdi,rcx
  40e402:	movsxd rbx,edx
  40e405:	call   rsi
  40e407:	lea    rcx,[rax+0x60]
  40e40b:	mov    r8d,ebx
  40e40e:	mov    rdx,rdi
  40e411:	call   0x40e340
  40e416:	call   rsi
  40e418:	lea    rcx,[rip+0x359e1]        # 0x443e00
  40e41f:	mov    r8,rax
  40e422:	mov    edx,0x80
  40e427:	call   0x42df38
  40e42c:	test   rax,rax
  40e42f:	je     0x40e490
  40e431:	movzx  eax,BYTE PTR [rip+0x359c8]        # 0x443e00
  40e438:	lea    rdi,[rip+0x359c1]        # 0x443e00
  40e43f:	cmp    al,0xd
  40e441:	je     0x40e490
  40e443:	cmp    al,0xa
  40e445:	je     0x40e490
  40e447:	lea    rdx,[rsp+0x28]
  40e44c:	xor    r8d,r8d
  40e44f:	mov    rcx,rdi
  40e452:	call   0x428b40
  40e457:	mov    rbp,QWORD PTR [rsp+0x28]
  40e45c:	movzx  edx,BYTE PTR [rbp+0x0]
  40e460:	cmp    dl,0xd
  40e463:	setne  r8b
  40e467:	test   dl,dl
  40e469:	setne  cl
  40e46c:	test   r8b,cl
  40e46f:	je     0x40e4a0
  40e471:	cmp    dl,0xa
  40e474:	je     0x40e4a0
  40e476:	call   rsi
  40e478:	lea    rdx,[rip+0x28061]        # 0x4364e0
  40e47f:	lea    rcx,[rax+0x60]
  40e483:	mov    r8,rbp
  40e486:	call   0x40e340
  40e48b:	xor    eax,eax
  40e48d:	jmp    0x40e493
  40e48f:	nop
  40e490:	movsxd rax,ebx
  40e493:	add    rsp,0x38
  40e497:	pop    rbx
  40e498:	pop    rsi
  40e499:	pop    rdi
  40e49a:	pop    rbp
  40e49b:	ret    
  40e49c:	nop    DWORD PTR [rax+0x0]
  40e4a0:	movabs rdx,0x7fffffffffffffff
  40e4aa:	mov    BYTE PTR [rbp+0x0],0x0
  40e4ae:	add    rdx,rax
  40e4b1:	cmp    rdx,0xfffffffffffffffd
  40e4b5:	ja     0x40e4d0
  40e4b7:	cmp    QWORD PTR [rsp+0x28],rdi
  40e4bc:	cmove  rax,rbx
  40e4c0:	add    rsp,0x38
  40e4c4:	pop    rbx
  40e4c5:	pop    rsi
  40e4c6:	pop    rdi
  40e4c7:	pop    rbp
  40e4c8:	ret    
  40e4c9:	nop    DWORD PTR [rax+0x0]
  40e4d0:	call   rsi
  40e4d2:	lea    r8,[rip+0x35927]        # 0x443e00
  40e4d9:	lea    rcx,[rax+0x60]
  40e4dd:	lea    rdx,[rip+0x2801c]        # 0x436500
  40e4e4:	movabs r9,0x7ffffffffffffffe
  40e4ee:	call   0x40e340
  40e4f3:	xor    eax,eax
  40e4f5:	jmp    0x40e493
  40e4f7:	nop    WORD PTR [rax+rax*1+0x0]
  40e500:	push   r12
  40e502:	push   rbp
  40e503:	push   rdi
  40e504:	push   rsi
  40e505:	push   rbx
  40e506:	sub    rsp,0x140
  40e50d:	mov    rbx,rcx
  40e510:	lea    rcx,[rsp+0x30]
  40e515:	mov    rsi,rdx
  40e518:	mov    rdi,r8
  40e51b:	mov    rbp,r9
  40e51e:	call   0x4124f0
  40e523:	cmp    QWORD PTR [rsi],0xb
  40e527:	jbe    0x40e641
  40e52d:	mov    rax,QWORD PTR [rip+0x2f4ac]        # 0x43d9e0
  40e534:	mov    eax,DWORD PTR [rax]
  40e536:	test   eax,eax
  40e538:	je     0x40e5a0
  40e53a:	mov    rax,rdi
  40e53d:	shr    rax,0x20
  40e541:	test   rdi,rdi
  40e544:	mov    rcx,rax
  40e547:	mov    eax,edi
  40e549:	js     0x40e5e0
  40e54f:	mov    edx,ecx
  40e551:	mov    BYTE PTR [rbx+0x3],cl
  40e554:	mov    BYTE PTR [rbx+0x7],al
  40e557:	shr    edx,0x10
  40e55a:	mov    BYTE PTR [rbx+0x1],dl
  40e55d:	mov    edx,ecx
  40e55f:	shr    ecx,0x18
  40e562:	shr    edx,0x8
  40e565:	and    ecx,0x7f
  40e568:	mov    BYTE PTR [rbx+0x2],dl
  40e56b:	mov    edx,eax
  40e56d:	mov    BYTE PTR [rbx],cl
  40e56f:	shr    edx,0x18
  40e572:	mov    BYTE PTR [rbx+0x4],dl
  40e575:	mov    edx,eax
  40e577:	shr    edx,0x10
  40e57a:	mov    BYTE PTR [rbx+0x5],dl
  40e57d:	mov    edx,eax
  40e57f:	shr    edx,0x8
  40e582:	mov    BYTE PTR [rbx+0x6],dl
  40e585:	mov    QWORD PTR [rsi],0x8
  40e58c:	add    rsp,0x140
  40e593:	pop    rbx
  40e594:	pop    rsi
  40e595:	pop    rdi
  40e596:	pop    rbp
  40e597:	pop    r12
  40e599:	ret    
  40e59a:	nop    WORD PTR [rax+rax*1+0x0]
  40e5a0:	mov    r12,QWORD PTR [rsp+0x30]
  40e5a5:	lea    rdi,[rsp+0x40]
  40e5aa:	lea    r8,[rip+0x27f8f]        # 0x436540
  40e5b1:	mov    r9,rbp
  40e5b4:	mov    edx,0x100
  40e5b9:	mov    rcx,rdi
  40e5bc:	mov    QWORD PTR [rsp+0x20],r12
  40e5c1:	call   0x415c60
  40e5c6:	mov    rcx,rdi
  40e5c9:	mov    edx,r12d
  40e5cc:	call   0x40e3f0
  40e5d1:	mov    rdi,rax
  40e5d4:	shr    rdi,0x20
  40e5d8:	mov    rcx,rdi
  40e5db:	jmp    0x40e54f
  40e5e0:	mov    rax,QWORD PTR [rsp+0x30]
  40e5e5:	mov    r8d,0x4
  40e5eb:	mov    rdx,rax
  40e5ee:	mov    BYTE PTR [rbx+0x3],al
  40e5f1:	sar    rdx,0x10
  40e5f5:	mov    BYTE PTR [rbx+0x1],dl
  40e5f8:	mov    rdx,rax
  40e5fb:	sar    rax,0x18
  40e5ff:	sar    rdx,0x8
  40e603:	and    eax,0x7f
  40e606:	mov    BYTE PTR [rbx+0x2],dl
  40e609:	mov    edx,DWORD PTR [rsp+0x38]
  40e60d:	mov    BYTE PTR [rbx],al
  40e60f:	mov    ecx,edx
  40e611:	mov    BYTE PTR [rbx+0x7],dl
  40e614:	shr    ecx,0x18
  40e617:	mov    BYTE PTR [rbx+0x4],cl
  40e61a:	mov    ecx,edx
  40e61c:	sar    ecx,0x10
  40e61f:	mov    BYTE PTR [rbx+0x5],cl
  40e622:	mov    ecx,edx
  40e624:	lea    rdx,[rbx+0x8]
  40e628:	sar    ecx,0x8
  40e62b:	mov    BYTE PTR [rbx+0x6],cl
  40e62e:	xor    ecx,ecx
  40e630:	call   0x426e90
  40e635:	mov    QWORD PTR [rsi],0xc
  40e63c:	jmp    0x40e58c
  40e641:	call   QWORD PTR [rip+0x3a199]        # 0x4487e0
  40e647:	lea    rdx,[rip+0x27eda]        # 0x436528
  40e64e:	lea    rcx,[rax+0x60]
  40e652:	call   0x40e340
  40e657:	mov    ecx,0x1
  40e65c:	call   0x42df60
  40e661:	nop
  40e662:	nop    DWORD PTR [rax+0x0]
  40e666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e670:	push   rbx
  40e671:	sub    rsp,0x30
  40e675:	test   rcx,rcx
  40e678:	mov    rbx,rcx
  40e67b:	je     0x40e69c
  40e67d:	lea    rcx,[rsp+0x20]
  40e682:	xor    r8d,r8d
  40e685:	mov    rdx,rbx
  40e688:	call   0x414960
  40e68d:	test   al,al
  40e68f:	je     0x40e69c
  40e691:	mov    rax,QWORD PTR [rsp+0x20]
  40e696:	add    rsp,0x30
  40e69a:	pop    rbx
  40e69b:	ret    
  40e69c:	call   QWORD PTR [rip+0x3a13e]        # 0x4487e0
  40e6a2:	lea    rdx,[rip+0x27eac]        # 0x436555
  40e6a9:	lea    rcx,[rax+0x60]
  40e6ad:	mov    r8,rbx
  40e6b0:	call   0x40e340
  40e6b5:	mov    ecx,0x1
  40e6ba:	call   0x42df60
  40e6bf:	nop
  40e6c0:	push   rdi
  40e6c1:	push   rsi
  40e6c2:	push   rbx
  40e6c3:	sub    rsp,0x20
  40e6c7:	mov    rbx,rdx
  40e6ca:	mov    rdi,rcx
  40e6cd:	mov    rcx,rdx
  40e6d0:	call   0x42de30
  40e6d5:	mov    edx,0x3a
  40e6da:	mov    rsi,rax
  40e6dd:	mov    rcx,rbx
  40e6e0:	call   0x42de58
  40e6e5:	cmp    esi,0x10
  40e6e8:	mov    r8,rdi
  40e6eb:	mov    rdx,rbx
  40e6ee:	jg     0x40e6f5
  40e6f0:	test   rax,rax
  40e6f3:	je     0x40e710
  40e6f5:	mov    ecx,0x17
  40e6fa:	call   0x4126f0
  40e6ff:	test   eax,eax
  40e701:	jle    0x40e725
  40e703:	mov    eax,0x10
  40e708:	add    rsp,0x20
  40e70c:	pop    rbx
  40e70d:	pop    rsi
  40e70e:	pop    rdi
  40e70f:	ret    
  40e710:	mov    ecx,0x2
  40e715:	call   0x4126f0
  40e71a:	test   eax,eax
  40e71c:	jle    0x40e748
  40e71e:	mov    eax,0x4
  40e723:	jmp    0x40e708
  40e725:	call   QWORD PTR [rip+0x3a0b5]        # 0x4487e0
  40e72b:	lea    rdx,[rip+0x27e3a]        # 0x43656c
  40e732:	lea    rcx,[rax+0x60]
  40e736:	mov    r8,rbx
  40e739:	call   0x40e340
  40e73e:	mov    ecx,0x1
  40e743:	call   0x42df60
  40e748:	call   QWORD PTR [rip+0x3a092]        # 0x4487e0
  40e74e:	lea    rdx,[rip+0x27e31]        # 0x436586
  40e755:	lea    rcx,[rax+0x60]
  40e759:	mov    r8,rbx
  40e75c:	call   0x40e340
  40e761:	mov    ecx,0x1
  40e766:	call   0x42df60
  40e76b:	nop
  40e76c:	nop    DWORD PTR [rax+0x0]
  40e770:	sub    rsp,0x28
  40e774:	mov    rax,QWORD PTR [rip+0x2f265]        # 0x43d9e0
  40e77b:	mov    eax,DWORD PTR [rax]
  40e77d:	test   eax,eax
  40e77f:	je     0x40e790
  40e781:	test   rcx,rcx
  40e784:	je     0x40e7b0
  40e786:	add    rsp,0x28
  40e78a:	jmp    0x40e670
  40e78f:	nop
  40e790:	lea    rcx,[rip+0x27e09]        # 0x4365a0
  40e797:	xor    edx,edx
  40e799:	call   0x40e3f0
  40e79e:	test   eax,eax
  40e7a0:	je     0x40e790
  40e7a2:	mov    ecx,eax
  40e7a4:	add    rsp,0x28
  40e7a8:	jmp    0x40e370
  40e7ad:	nop    DWORD PTR [rax]
  40e7b0:	cmp    edx,0xfffffffe
  40e7b3:	jl     0x40e7c4
  40e7b5:	test   edx,edx
  40e7b7:	je     0x40e7c4
  40e7b9:	mov    ecx,edx
  40e7bb:	add    rsp,0x28
  40e7bf:	jmp    0x40e370
  40e7c4:	mov    ecx,0x16d
  40e7c9:	add    rsp,0x28
  40e7cd:	jmp    0x40e370
  40e7d2:	nop    DWORD PTR [rax+0x0]
  40e7d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e7e0:	push   rdi
  40e7e1:	lea    rdx,[rip+0x377d8]        # 0x445fc0
  40e7e8:	xor    eax,eax
  40e7ea:	mov    ecx,0x48
  40e7ef:	mov    rdi,rdx
  40e7f2:	rep stos QWORD PTR es:[rdi],rax
  40e7f5:	mov    rax,0xffffffffffffffff
  40e7fc:	mov    DWORD PTR [rip+0x3798a],0xffffffff        # 0x446190
  40e806:	mov    QWORD PTR [rip+0x379cb],rax        # 0x4461d8
  40e80d:	mov    QWORD PTR [rip+0x3796c],rax        # 0x446180
  40e814:	pop    rdi
  40e815:	ret    
  40e816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e820:	push   r15
  40e822:	push   r14
  40e824:	push   r13
  40e826:	push   r12
  40e828:	push   rbp
  40e829:	push   rdi
  40e82a:	push   rsi
  40e82b:	push   rbx
  40e82c:	sub    rsp,0x338
  40e833:	mov    rbx,rcx
  40e836:	call   0x424240
  40e83b:	test   rax,rax
  40e83e:	mov    r12,rax
  40e841:	je     0x40ff40
  40e847:	xor    edx,edx
  40e849:	mov    rcx,rax
  40e84c:	lea    r14,[rip+0x22a6d]        # 0x4312c0
  40e853:	call   0x41e080
  40e858:	test   rax,rax
  40e85b:	mov    rdi,rax
  40e85e:	je     0x40e938
  40e864:	mov    rax,QWORD PTR [rip+0x39f75]        # 0x4487e0
  40e86b:	mov    rbp,QWORD PTR [rip+0x3a03e]        # 0x4488b0
  40e872:	mov    r13,QWORD PTR [rip+0x3a03f]        # 0x4488b8
  40e879:	mov    QWORD PTR [rsp+0x28],rax
  40e87e:	xchg   ax,ax
  40e880:	lea    rsi,[rip+0x22a39]        # 0x4312c0
  40e887:	xor    ebx,ebx
  40e889:	jmp    0x40e8ad
  40e88b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e890:	mov    rcx,QWORD PTR [rdi+0x8]
  40e894:	mov    rdx,r15
  40e897:	call   rbp
  40e899:	test   eax,eax
  40e89b:	je     0x40e8e0
  40e89d:	add    ebx,0x1
  40e8a0:	add    rsi,0x10
  40e8a4:	cmp    ebx,0x38
  40e8a7:	je     0x40f0f0
  40e8ad:	mov    r15,QWORD PTR [rsi]
  40e8b0:	mov    rcx,r15
  40e8b3:	call   0x42de30
  40e8b8:	cmp    eax,0x2
  40e8bb:	jbe    0x40e890
  40e8bd:	lea    r8d,[rax-0x1]
  40e8c1:	cmp    BYTE PTR [r15+r8*1],0x2a
  40e8c6:	jne    0x40e890
  40e8c8:	mov    rcx,QWORD PTR [rdi+0x8]
  40e8cc:	mov    rdx,r15
  40e8cf:	call   r13
  40e8d2:	test   eax,eax
  40e8d4:	jne    0x40e89d
  40e8d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e8e0:	mov    rax,rbx
  40e8e3:	shl    rax,0x4
  40e8e7:	add    rax,r14
  40e8ea:	cmp    DWORD PTR [rax+0x8],0x3
  40e8ee:	je     0x40e914
  40e8f0:	mov    edx,DWORD PTR [rax+0xc]
  40e8f3:	test   edx,edx
  40e8f5:	je     0x40e914
  40e8f7:	mov    rsi,QWORD PTR [rax]
  40e8fa:	mov    rax,QWORD PTR [rsp+0x28]
  40e8ff:	call   rax
  40e901:	lea    rdx,[rip+0x27cf0]        # 0x4365f8
  40e908:	lea    rcx,[rax+0x60]
  40e90c:	mov    r8,rsi
  40e90f:	call   0x40e340
  40e914:	shl    rbx,0x4
  40e918:	mov    DWORD PTR [r14+rbx*1+0xc],0x1
  40e921:	mov    rdx,rdi
  40e924:	mov    rcx,r12
  40e927:	call   0x41e1d0
  40e92c:	test   rax,rax
  40e92f:	mov    rdi,rax
  40e932:	jne    0x40e880
  40e938:	lea    rdx,[rip+0x27cb4]        # 0x4365f3
  40e93f:	mov    rcx,r12
  40e942:	call   0x41e080
  40e947:	test   rax,rax
  40e94a:	mov    rbx,rax
  40e94d:	je     0x40e958
  40e94f:	cmp    DWORD PTR [rax],0x1
  40e952:	je     0x40f884
  40e958:	cmp    QWORD PTR [rip+0x37668],0x0        # 0x445fc8
  40e960:	je     0x40fd80
  40e966:	lea    rdx,[rip+0x27ce4]        # 0x436651
  40e96d:	mov    rcx,r12
  40e970:	call   0x41e080
  40e975:	test   rax,rax
  40e978:	mov    rbx,rax
  40e97b:	je     0x40e986
  40e97d:	cmp    DWORD PTR [rax],0x1
  40e980:	je     0x40f800
  40e986:	cmp    QWORD PTR [rip+0x37632],0x0        # 0x445fc0
  40e98e:	je     0x40fe30
  40e994:	lea    rdx,[rip+0x27cc5]        # 0x436660
  40e99b:	mov    rcx,r12
  40e99e:	call   0x41e080
  40e9a3:	test   rax,rax
  40e9a6:	je     0x40e9b1
  40e9a8:	cmp    DWORD PTR [rax],0x1
  40e9ab:	je     0x40fb9e
  40e9b1:	lea    rdx,[rip+0x27cb1]        # 0x436669
  40e9b8:	mov    rcx,r12
  40e9bb:	call   0x41e080
  40e9c0:	test   rax,rax
  40e9c3:	je     0x40e9ce
  40e9c5:	cmp    DWORD PTR [rax],0x1
  40e9c8:	je     0x40fbb3
  40e9ce:	lea    rdx,[rip+0x27c9a]        # 0x43666f
  40e9d5:	mov    rcx,r12
  40e9d8:	call   0x41e080
  40e9dd:	test   rax,rax
  40e9e0:	je     0x40e9eb
  40e9e2:	cmp    DWORD PTR [rax],0x1
  40e9e5:	je     0x40fc46
  40e9eb:	lea    rdx,[rip+0x27c80]        # 0x436672
  40e9f2:	mov    rcx,r12
  40e9f5:	call   0x41e080
  40e9fa:	test   rax,rax
  40e9fd:	je     0x40ea08
  40e9ff:	cmp    DWORD PTR [rax],0x1
  40ea02:	je     0x40fc07
  40ea08:	lea    rdx,[rip+0x27c66]        # 0x436675
  40ea0f:	mov    rcx,r12
  40ea12:	call   0x41e080
  40ea17:	test   rax,rax
  40ea1a:	je     0x40ea25
  40ea1c:	cmp    DWORD PTR [rax],0x1
  40ea1f:	je     0x40fc1c
  40ea25:	lea    rdx,[rip+0x27c4d]        # 0x436679
  40ea2c:	mov    rcx,r12
  40ea2f:	lea    rsi,[rsp+0x30]
  40ea34:	call   0x41e080
  40ea39:	test   rax,rax
  40ea3c:	je     0x40ea47
  40ea3e:	cmp    DWORD PTR [rax],0x1
  40ea41:	je     0x40fb02
  40ea47:	lea    rdx,[rip+0x27c51]        # 0x43669f
  40ea4e:	mov    rcx,r12
  40ea51:	call   0x41e080
  40ea56:	test   rax,rax
  40ea59:	je     0x40ea64
  40ea5b:	cmp    DWORD PTR [rax],0x1
  40ea5e:	je     0x40fb50
  40ea64:	lea    rdx,[rip+0x27c46]        # 0x4366b1
  40ea6b:	mov    rcx,r12
  40ea6e:	call   0x41e080
  40ea73:	test   rax,rax
  40ea76:	je     0x40ea81
  40ea78:	cmp    DWORD PTR [rax],0x1
  40ea7b:	je     0x40fcaf
  40ea81:	lea    rdx,[rip+0x27c3c]        # 0x4366c4
  40ea88:	mov    rcx,r12
  40ea8b:	call   0x41e080
  40ea90:	test   rax,rax
  40ea93:	je     0x40ea9e
  40ea95:	cmp    DWORD PTR [rax],0x1
  40ea98:	je     0x40fcc4
  40ea9e:	lea    rdx,[rip+0x27c28]        # 0x4366cd
  40eaa5:	mov    rcx,r12
  40eaa8:	call   0x41e080
  40eaad:	test   rax,rax
  40eab0:	je     0x40eabb
  40eab2:	cmp    DWORD PTR [rax],0x1
  40eab5:	je     0x40fcd9
  40eabb:	lea    rdx,[rip+0x27c17]        # 0x4366d9
  40eac2:	mov    rcx,r12
  40eac5:	call   0x41e080
  40eaca:	test   rax,rax
  40eacd:	je     0x40ead8
  40eacf:	cmp    DWORD PTR [rax],0x1
  40ead2:	je     0x40fbf2
  40ead8:	lea    rdx,[rip+0x27c02]        # 0x4366e1
  40eadf:	mov    rcx,r12
  40eae2:	call   0x41e080
  40eae7:	test   rax,rax
  40eaea:	je     0x40eaf5
  40eaec:	cmp    DWORD PTR [rax],0x1
  40eaef:	je     0x40fc5b
  40eaf5:	lea    rdx,[rip+0x27bf5]        # 0x4366f1
  40eafc:	mov    rcx,r12
  40eaff:	call   0x41e080
  40eb04:	test   rax,rax
  40eb07:	je     0x40eb12
  40eb09:	cmp    DWORD PTR [rax],0x1
  40eb0c:	je     0x40fc70
  40eb12:	lea    rdx,[rip+0x27be8]        # 0x436701
  40eb19:	mov    rcx,r12
  40eb1c:	call   0x41e080
  40eb21:	test   rax,rax
  40eb24:	je     0x40eb2f
  40eb26:	cmp    DWORD PTR [rax],0x1
  40eb29:	je     0x40fc85
  40eb2f:	lea    rdx,[rip+0x27bdf]        # 0x436715
  40eb36:	mov    rcx,r12
  40eb39:	call   0x41e080
  40eb3e:	test   rax,rax
  40eb41:	je     0x40eb4c
  40eb43:	cmp    DWORD PTR [rax],0x1
  40eb46:	je     0x40fc9a
  40eb4c:	lea    rdx,[rip+0x27bd7]        # 0x43672a
  40eb53:	mov    rcx,r12
  40eb56:	call   0x41e080
  40eb5b:	test   rax,rax
  40eb5e:	je     0x40eb69
  40eb60:	cmp    DWORD PTR [rax],0x1
  40eb63:	je     0x40fbc8
  40eb69:	lea    rbp,[rip+0x37450]        # 0x445fc0
  40eb70:	xor    ebx,ebx
  40eb72:	mov    rdi,rbp
  40eb75:	add    ebx,0x1
  40eb78:	lea    r8,[rip+0x27bc0]        # 0x43673f
  40eb7f:	mov    edx,0x100
  40eb84:	mov    r9d,ebx
  40eb87:	mov    rcx,rsi
  40eb8a:	call   0x415c60
  40eb8f:	mov    rdx,rsi
  40eb92:	mov    rcx,r12
  40eb95:	call   0x41e080
  40eb9a:	test   rax,rax
  40eb9d:	je     0x40eba8
  40eb9f:	cmp    DWORD PTR [rax],0x1
  40eba2:	je     0x40f112
  40eba8:	mov    rax,QWORD PTR [rdi+0x70]
  40ebac:	test   rax,rax
  40ebaf:	je     0x40ec11
  40ebb1:	lea    r8,[rip+0x27b90]        # 0x436748
  40ebb8:	mov    r9d,ebx
  40ebbb:	mov    edx,0x100
  40ebc0:	mov    rcx,rsi
  40ebc3:	call   0x415c60
  40ebc8:	mov    rdx,rsi
  40ebcb:	mov    rcx,r12
  40ebce:	call   0x41e080
  40ebd3:	test   rax,rax
  40ebd6:	je     0x40ebe1
  40ebd8:	cmp    DWORD PTR [rax],0x1
  40ebdb:	je     0x40f124
  40ebe1:	lea    r8,[rip+0x27b6d]        # 0x436755
  40ebe8:	mov    r9d,ebx
  40ebeb:	mov    edx,0x100
  40ebf0:	mov    rcx,rsi
  40ebf3:	call   0x415c60
  40ebf8:	mov    rdx,rsi
  40ebfb:	mov    rcx,r12
  40ebfe:	call   0x41e080
  40ec03:	test   rax,rax
  40ec06:	je     0x40ec11
  40ec08:	cmp    DWORD PTR [rax],0x1
  40ec0b:	je     0x40f139
  40ec11:	add    rdi,0x8
  40ec15:	cmp    ebx,0x8
  40ec18:	jne    0x40eb75
  40ec1e:	lea    rdx,[rip+0x27b3d]        # 0x436762
  40ec25:	mov    rcx,r12
  40ec28:	call   0x41e080
  40ec2d:	test   rax,rax
  40ec30:	mov    rbx,rax
  40ec33:	je     0x40ec3e
  40ec35:	cmp    DWORD PTR [rax],0x1
  40ec38:	je     0x40f770
  40ec3e:	lea    rdx,[rip+0x27b20]        # 0x436765
  40ec45:	mov    rcx,r12
  40ec48:	call   0x41e080
  40ec4d:	test   rax,rax
  40ec50:	mov    rbx,rax
  40ec53:	je     0x40ec5e
  40ec55:	cmp    DWORD PTR [rax],0x1
  40ec58:	je     0x40f6e0
  40ec5e:	lea    rdx,[rip+0x27b09]        # 0x43676e
  40ec65:	mov    rcx,r12
  40ec68:	call   0x41e080
  40ec6d:	test   rax,rax
  40ec70:	mov    rbx,rax
  40ec73:	je     0x40ec7e
  40ec75:	cmp    DWORD PTR [rax],0x1
  40ec78:	je     0x40f650
  40ec7e:	lea    rdx,[rip+0x27aed]        # 0x436772
  40ec85:	mov    rcx,r12
  40ec88:	call   0x41e080
  40ec8d:	test   rax,rax
  40ec90:	mov    rbx,rax
  40ec93:	je     0x40ec9e
  40ec95:	cmp    DWORD PTR [rax],0x1
  40ec98:	je     0x40f5c0
  40ec9e:	lea    rdx,[rip+0x27ad8]        # 0x43677d
  40eca5:	mov    rcx,r12
  40eca8:	call   0x41e080
  40ecad:	test   rax,rax
  40ecb0:	mov    rbx,rax
  40ecb3:	je     0x40ecbe
  40ecb5:	cmp    DWORD PTR [rax],0x1
  40ecb8:	je     0x40f530
  40ecbe:	lea    rdx,[rip+0x27abe]        # 0x436783
  40ecc5:	mov    rcx,r12
  40ecc8:	call   0x41e080
  40eccd:	test   rax,rax
  40ecd0:	mov    rbx,rax
  40ecd3:	je     0x40ecde
  40ecd5:	cmp    DWORD PTR [rax],0x1
  40ecd8:	je     0x40f4a0
  40ecde:	lea    rdx,[rip+0x27aae]        # 0x436793
  40ece5:	mov    rcx,r12
  40ece8:	call   0x41e080
  40eced:	test   rax,rax
  40ecf0:	mov    rbx,rax
  40ecf3:	je     0x40ecfe
  40ecf5:	cmp    DWORD PTR [rax],0x1
  40ecf8:	je     0x40f410
  40ecfe:	lea    rdx,[rip+0x27a9d]        # 0x4367a2
  40ed05:	mov    rcx,r12
  40ed08:	call   0x41e080
  40ed0d:	test   rax,rax
  40ed10:	mov    rbx,rax
  40ed13:	je     0x40ed1e
  40ed15:	cmp    DWORD PTR [rax],0x1
  40ed18:	je     0x40f380
  40ed1e:	lea    rdx,[rip+0x27a8e]        # 0x4367b3
  40ed25:	mov    rcx,r12
  40ed28:	call   0x41e080
  40ed2d:	test   rax,rax
  40ed30:	mov    rbx,rax
  40ed33:	je     0x40ed3e
  40ed35:	cmp    DWORD PTR [rax],0x1
  40ed38:	je     0x40f2f0
  40ed3e:	lea    rdx,[rip+0x27a7c]        # 0x4367c1
  40ed45:	mov    rcx,r12
  40ed48:	call   0x41e080
  40ed4d:	test   rax,rax
  40ed50:	mov    rbx,rax
  40ed53:	je     0x40ed5e
  40ed55:	cmp    DWORD PTR [rax],0x1
  40ed58:	je     0x40f265
  40ed5e:	lea    rdx,[rip+0x27a6c]        # 0x4367d1
  40ed65:	mov    rcx,r12
  40ed68:	call   0x41e080
  40ed6d:	test   rax,rax
  40ed70:	mov    r14,rax
  40ed73:	je     0x40ed7e
  40ed75:	cmp    DWORD PTR [rax],0x1
  40ed78:	je     0x40f14e
  40ed7e:	lea    rdx,[rip+0x27a7b]        # 0x436800
  40ed85:	mov    rcx,r12
  40ed88:	call   0x41e080
  40ed8d:	test   rax,rax
  40ed90:	mov    rbx,rax
  40ed93:	je     0x40ed9e
  40ed95:	cmp    DWORD PTR [rax],0x1
  40ed98:	je     0x40fa7a
  40ed9e:	lea    rdx,[rip+0x27a6b]        # 0x436810
  40eda5:	mov    rcx,r12
  40eda8:	call   0x41e080
  40edad:	test   rax,rax
  40edb0:	je     0x40edbb
  40edb2:	cmp    DWORD PTR [rax],0x1
  40edb5:	je     0x40fbdd
  40edbb:	lea    rdx,[rip+0x27a5e]        # 0x436820
  40edc2:	mov    rcx,r12
  40edc5:	call   0x41e080
  40edca:	test   rax,rax
  40edcd:	je     0x40ede3
  40edcf:	mov    edx,DWORD PTR [rax]
  40edd1:	cmp    edx,0x5
  40edd4:	je     0x40fa6a
  40edda:	cmp    edx,0x1
  40eddd:	je     0x40fcee
  40ede3:	mov    rax,QWORD PTR [rip+0x37396]        # 0x446180
  40edea:	cmp    rax,0x7fffffff
  40edf0:	je     0x40ff20
  40edf6:	lea    rdx,[rip+0x27a3e]        # 0x43683b
  40edfd:	mov    rcx,r12
  40ee00:	call   0x41e080
  40ee05:	test   rax,rax
  40ee08:	je     0x40ee1e
  40ee0a:	mov    edx,DWORD PTR [rax]
  40ee0c:	cmp    edx,0x5
  40ee0f:	je     0x40fa5c
  40ee15:	cmp    edx,0x1
  40ee18:	je     0x40fd29
  40ee1e:	lea    rdx,[rip+0x27a26]        # 0x43684b
  40ee25:	mov    rcx,r12
  40ee28:	call   0x41e080
  40ee2d:	test   rax,rax
  40ee30:	je     0x40ee46
  40ee32:	mov    edx,DWORD PTR [rax]
  40ee34:	cmp    edx,0x5
  40ee37:	je     0x40fa4e
  40ee3d:	cmp    edx,0x1
  40ee40:	je     0x40fd45
  40ee46:	lea    rdx,[rip+0x27a0e]        # 0x43685b
  40ee4d:	mov    rcx,r12
  40ee50:	call   0x41e080
  40ee55:	test   rax,rax
  40ee58:	je     0x40ee6e
  40ee5a:	mov    edx,DWORD PTR [rax]
  40ee5c:	cmp    edx,0x5
  40ee5f:	je     0x40fa3e
  40ee65:	cmp    edx,0x1
  40ee68:	je     0x40fd61
  40ee6e:	mov    rax,QWORD PTR [rip+0x37363]        # 0x4461d8
  40ee75:	cmp    rax,0x7fffffff
  40ee7b:	je     0x40ff20
  40ee81:	lea    rdx,[rip+0x279de]        # 0x436866
  40ee88:	mov    rcx,r12
  40ee8b:	call   0x41e080
  40ee90:	test   rax,rax
  40ee93:	je     0x40eea9
  40ee95:	mov    edx,DWORD PTR [rax]
  40ee97:	cmp    edx,0x5
  40ee9a:	je     0x40fa30
  40eea0:	cmp    edx,0x1
  40eea3:	je     0x40fd0d
  40eea9:	lea    rdx,[rip+0x279bf]        # 0x43686f
  40eeb0:	mov    rcx,r12
  40eeb3:	call   0x41e080
  40eeb8:	test   rax,rax
  40eebb:	je     0x40eec6
  40eebd:	cmp    DWORD PTR [rax],0x1
  40eec0:	je     0x40fc31
  40eec6:	lea    rdx,[rip+0x279b8]        # 0x436885
  40eecd:	mov    rcx,r12
  40eed0:	call   0x41e080
  40eed5:	test   rax,rax
  40eed8:	mov    rbx,rax
  40eedb:	je     0x40eee6
  40eedd:	cmp    DWORD PTR [rax],0x1
  40eee0:	je     0x40f9a0
  40eee6:	lea    rdx,[rip+0x279a1]        # 0x43688e
  40eeed:	mov    rcx,r12
  40eef0:	call   0x41e080
  40eef5:	test   rax,rax
  40eef8:	mov    rbx,rax
  40eefb:	je     0x40ef06
  40eefd:	cmp    DWORD PTR [rax],0x1
  40ef00:	je     0x40f910
  40ef06:	lea    rdx,[rip+0x27990]        # 0x43689d
  40ef0d:	mov    rcx,r12
  40ef10:	call   0x41e080
  40ef15:	test   rax,rax
  40ef18:	je     0x40ef24
  40ef1a:	mov    DWORD PTR [rip+0x37268],0x1        # 0x44618c
  40ef24:	lea    rdx,[rip+0x27975]        # 0x4368a0
  40ef2b:	mov    rcx,r12
  40ef2e:	call   0x41e080
  40ef33:	test   rax,rax
  40ef36:	je     0x40ef42
  40ef38:	mov    DWORD PTR [rip+0x3729e],0x1        # 0x4461e0
  40ef42:	lea    rdx,[rip+0x2796c]        # 0x4368b5
  40ef49:	mov    rcx,r12
  40ef4c:	call   0x41e080
  40ef51:	test   rax,rax
  40ef54:	je     0x40ef60
  40ef56:	mov    DWORD PTR [rip+0x37234],0x1        # 0x446194
  40ef60:	lea    rdx,[rip+0x2795d]        # 0x4368c4
  40ef67:	mov    rcx,r12
  40ef6a:	call   0x41e080
  40ef6f:	test   rax,rax
  40ef72:	je     0x40ef7e
  40ef74:	mov    DWORD PTR [rip+0x3721a],0x1        # 0x446198
  40ef7e:	lea    rdx,[rip+0x2794e]        # 0x4368d3
  40ef85:	mov    rcx,r12
  40ef88:	call   0x41e080
  40ef8d:	test   rax,rax
  40ef90:	je     0x40ef9c
  40ef92:	mov    DWORD PTR [rip+0x37200],0x1        # 0x44619c
  40ef9c:	lea    rdx,[rip+0x2793c]        # 0x4368df
  40efa3:	mov    rcx,r12
  40efa6:	call   0x41e080
  40efab:	test   rax,rax
  40efae:	je     0x40efba
  40efb0:	mov    DWORD PTR [rip+0x371e6],0x1        # 0x4461a0
  40efba:	lea    rdx,[rip+0x2792d]        # 0x4368ee
  40efc1:	mov    rcx,r12
  40efc4:	call   0x41e080
  40efc9:	test   rax,rax
  40efcc:	je     0x40efd8
  40efce:	mov    DWORD PTR [rip+0x371cc],0x1        # 0x4461a4
  40efd8:	lea    rdx,[rip+0x27920]        # 0x4368ff
  40efdf:	mov    rcx,r12
  40efe2:	call   0x41e080
  40efe7:	test   rax,rax
  40efea:	je     0x40eff6
  40efec:	mov    DWORD PTR [rip+0x371b2],0x1        # 0x4461a8
  40eff6:	lea    rdx,[rip+0x27912]        # 0x43690f
  40effd:	mov    rcx,r12
  40f000:	call   0x41e080
  40f005:	test   rax,rax
  40f008:	je     0x40f014
  40f00a:	mov    DWORD PTR [rip+0x371a4],0x1        # 0x4461b8
  40f014:	lea    rdx,[rip+0x27905]        # 0x436920
  40f01b:	mov    rcx,r12
  40f01e:	call   0x41e080
  40f023:	test   rax,rax
  40f026:	je     0x40f032
  40f028:	mov    DWORD PTR [rip+0x3718a],0x1        # 0x4461bc
  40f032:	lea    rdx,[rip+0x278f8]        # 0x436931
  40f039:	mov    rcx,r12
  40f03c:	call   0x41e080
  40f041:	test   rax,rax
  40f044:	je     0x40f050
  40f046:	mov    DWORD PTR [rip+0x37170],0x1        # 0x4461c0
  40f050:	lea    rdx,[rip+0x278ec]        # 0x436943
  40f057:	mov    rcx,r12
  40f05a:	call   0x41e080
  40f05f:	test   rax,rax
  40f062:	je     0x40f06e
  40f064:	mov    DWORD PTR [rip+0x37156],0x1        # 0x4461c4
  40f06e:	lea    rdx,[rip+0x278dc]        # 0x436951
  40f075:	mov    rcx,r12
  40f078:	call   0x41e080
  40f07d:	test   rax,rax
  40f080:	je     0x40f08c
  40f082:	mov    DWORD PTR [rip+0x37124],0x1        # 0x4461b0
  40f08c:	lea    rdx,[rip+0x278d0]        # 0x436963
  40f093:	mov    rcx,r12
  40f096:	call   0x41e080
  40f09b:	test   rax,rax
  40f09e:	je     0x40f0aa
  40f0a0:	mov    DWORD PTR [rip+0x3710a],0x1        # 0x4461b4
  40f0aa:	lea    rdx,[rip+0x278c0]        # 0x436971
  40f0b1:	mov    rcx,r12
  40f0b4:	call   0x41e080
  40f0b9:	test   rax,rax
  40f0bc:	je     0x40f0c8
  40f0be:	mov    DWORD PTR [rip+0x370e4],0x1        # 0x4461ac
  40f0c8:	mov    rcx,r12
  40f0cb:	call   0x4209f0
  40f0d0:	xor    eax,eax
  40f0d2:	add    rsp,0x338
  40f0d9:	pop    rbx
  40f0da:	pop    rsi
  40f0db:	pop    rdi
  40f0dc:	pop    rbp
  40f0dd:	pop    r12
  40f0df:	pop    r13
  40f0e1:	pop    r14
  40f0e3:	pop    r15
  40f0e5:	ret    
  40f0e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f0f0:	mov    rbx,QWORD PTR [rdi+0x8]
  40f0f4:	call   QWORD PTR [rip+0x396e6]        # 0x4487e0
  40f0fa:	lea    rdx,[rip+0x27887]        # 0x436988
  40f101:	lea    rcx,[rax+0x60]
  40f105:	mov    r8,rbx
  40f108:	call   0x40e340
  40f10d:	jmp    0x40e921
  40f112:	lea    rcx,[rax+0x10]
  40f116:	call   0x415d00
  40f11b:	mov    QWORD PTR [rdi+0x70],rax
  40f11f:	jmp    0x40ebac
  40f124:	lea    rcx,[rax+0x10]
  40f128:	call   0x415d00
  40f12d:	mov    QWORD PTR [rdi+0xf0],rax
  40f134:	jmp    0x40ebe1
  40f139:	lea    rcx,[rax+0x10]
  40f13d:	call   0x415d00
  40f142:	mov    QWORD PTR [rdi+0xb0],rax
  40f149:	jmp    0x40ec11
  40f14e:	cmp    QWORD PTR [rip+0x36fc2],0x0        # 0x446118
  40f156:	jne    0x40ed7e
  40f15c:	mov    ecx,0x400
  40f161:	lea    r15,[rip+0x27669]        # 0x4367d1
  40f168:	lea    r13,[rsp+0x130]
  40f170:	call   0x412940
  40f175:	xor    ebx,ebx
  40f177:	mov    QWORD PTR [rip+0x36f9a],rax        # 0x446118
  40f17e:	mov    rsi,QWORD PTR [r14+0x8]
  40f182:	mov    rdi,r15
  40f185:	mov    ecx,0x7
  40f18a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f18c:	jne    0x40f23a
  40f192:	lea    rdx,[r14+0x10]
  40f196:	mov    r8d,0x1ff
  40f19c:	mov    rcx,r13
  40f19f:	call   0x42de20
  40f1a4:	mov    edx,0x20
  40f1a9:	mov    rcx,r13
  40f1ac:	mov    BYTE PTR [rsp+0x32f],0x0
  40f1b4:	call   0x42de58
  40f1b9:	test   rax,rax
  40f1bc:	mov    rdi,rax
  40f1bf:	je     0x40fee0
  40f1c5:	mov    rdx,QWORD PTR [rbp+0x158]
  40f1cc:	mov    eax,ebx
  40f1ce:	mov    rcx,r13
  40f1d1:	mov    BYTE PTR [rdi],0x0
  40f1d4:	lea    rsi,[rdi+0x1]
  40f1d8:	lea    rdx,[rdx+rax*8]
  40f1dc:	mov    QWORD PTR [rsp+0x28],rdx
  40f1e1:	call   0x415d00
  40f1e6:	mov    rdx,QWORD PTR [rsp+0x28]
  40f1eb:	mov    QWORD PTR [rdx],rax
  40f1ee:	movzx  ecx,BYTE PTR [rdi+0x1]
  40f1f2:	cmp    cl,0x9
  40f1f5:	jne    0x40f20c
  40f1f7:	nop    WORD PTR [rax+rax*1+0x0]
  40f200:	add    rsi,0x1
  40f204:	movzx  ecx,BYTE PTR [rsi]
  40f207:	cmp    cl,0x9
  40f20a:	je     0x40f200
  40f20c:	cmp    cl,0x20
  40f20f:	je     0x40f200
  40f211:	test   cl,cl
  40f213:	je     0x40ff6f
  40f219:	mov    rax,QWORD PTR [rbp+0x158]
  40f220:	lea    edx,[rbx+0x1]
  40f223:	mov    rcx,rsi
  40f226:	add    ebx,0x2
  40f229:	lea    rdi,[rax+rdx*8]
  40f22d:	call   0x415d00
  40f232:	cmp    ebx,0x7f
  40f235:	mov    QWORD PTR [rdi],rax
  40f238:	ja     0x40f251
  40f23a:	mov    rdx,r14
  40f23d:	mov    rcx,r12
  40f240:	call   0x41e1d0
  40f245:	test   rax,rax
  40f248:	mov    r14,rax
  40f24b:	jne    0x40f17e
  40f251:	mov    rax,QWORD PTR [rip+0x36ec0]        # 0x446118
  40f258:	mov    QWORD PTR [rax+rbx*8],0x0
  40f260:	jmp    0x40ed7e
  40f265:	cmp    QWORD PTR [rip+0x36ec3],0x0        # 0x446130
  40f26d:	jne    0x40ed5e
  40f273:	mov    ecx,0x400
  40f278:	lea    r15,[rip+0x27542]        # 0x4367c1
  40f27f:	xor    r13d,r13d
  40f282:	call   0x412940
  40f287:	mov    r14d,0x10
  40f28d:	mov    QWORD PTR [rip+0x36e9c],rax        # 0x446130
  40f294:	mov    rsi,QWORD PTR [rbx+0x8]
  40f298:	mov    rdi,r15
  40f29b:	mov    rcx,r14
  40f29e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f2a0:	jne    0x40f2c6
  40f2a2:	mov    rax,QWORD PTR [rbp+0x170]
  40f2a9:	mov    edx,r13d
  40f2ac:	lea    rcx,[rbx+0x10]
  40f2b0:	add    r13d,0x1
  40f2b4:	lea    rsi,[rax+rdx*8]
  40f2b8:	call   0x415d00
  40f2bd:	cmp    r13d,0x7f
  40f2c1:	mov    QWORD PTR [rsi],rax
  40f2c4:	ja     0x40f2d9
  40f2c6:	mov    rdx,rbx
  40f2c9:	mov    rcx,r12
  40f2cc:	call   0x41e1d0
  40f2d1:	test   rax,rax
  40f2d4:	mov    rbx,rax
  40f2d7:	jne    0x40f294
  40f2d9:	mov    rax,QWORD PTR [rip+0x36e50]        # 0x446130
  40f2e0:	mov    QWORD PTR [rax+r13*8],0x0
  40f2e8:	jmp    0x40ed5e
  40f2ed:	nop    DWORD PTR [rax]
  40f2f0:	cmp    QWORD PTR [rip+0x36e28],0x0        # 0x446120
  40f2f8:	jne    0x40ed3e
  40f2fe:	mov    ecx,0x400
  40f303:	lea    r15,[rip+0x274a9]        # 0x4367b3
  40f30a:	xor    r13d,r13d
  40f30d:	call   0x412940
  40f312:	mov    r14d,0xe
  40f318:	mov    QWORD PTR [rip+0x36e01],rax        # 0x446120
  40f31f:	mov    rsi,QWORD PTR [rbx+0x8]
  40f323:	mov    rdi,r15
  40f326:	mov    rcx,r14
  40f329:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f32b:	jne    0x40f351
  40f32d:	mov    rax,QWORD PTR [rbp+0x160]
  40f334:	mov    edx,r13d
  40f337:	lea    rcx,[rbx+0x10]
  40f33b:	add    r13d,0x1
  40f33f:	lea    rsi,[rax+rdx*8]
  40f343:	call   0x415d00
  40f348:	cmp    r13d,0x7f
  40f34c:	mov    QWORD PTR [rsi],rax
  40f34f:	ja     0x40f364
  40f351:	mov    rdx,rbx
  40f354:	mov    rcx,r12
  40f357:	call   0x41e1d0
  40f35c:	test   rax,rax
  40f35f:	mov    rbx,rax
  40f362:	jne    0x40f31f
  40f364:	mov    rax,QWORD PTR [rip+0x36db5]        # 0x446120
  40f36b:	mov    QWORD PTR [rax+r13*8],0x0
  40f373:	jmp    0x40ed3e
  40f378:	nop    DWORD PTR [rax+rax*1+0x0]
  40f380:	cmp    QWORD PTR [rip+0x36db0],0x0        # 0x446138
  40f388:	jne    0x40ed1e
  40f38e:	mov    ecx,0x400
  40f393:	lea    r15,[rip+0x27408]        # 0x4367a2
  40f39a:	xor    r13d,r13d
  40f39d:	call   0x412940
  40f3a2:	mov    r14d,0x11
  40f3a8:	mov    QWORD PTR [rip+0x36d89],rax        # 0x446138
  40f3af:	mov    rsi,QWORD PTR [rbx+0x8]
  40f3b3:	mov    rdi,r15
  40f3b6:	mov    rcx,r14
  40f3b9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f3bb:	jne    0x40f3e1
  40f3bd:	mov    rax,QWORD PTR [rbp+0x178]
  40f3c4:	mov    edx,r13d
  40f3c7:	lea    rcx,[rbx+0x10]
  40f3cb:	add    r13d,0x1
  40f3cf:	lea    rsi,[rax+rdx*8]
  40f3d3:	call   0x415d00
  40f3d8:	cmp    r13d,0x7f
  40f3dc:	mov    QWORD PTR [rsi],rax
  40f3df:	ja     0x40f3f4
  40f3e1:	mov    rdx,rbx
  40f3e4:	mov    rcx,r12
  40f3e7:	call   0x41e1d0
  40f3ec:	test   rax,rax
  40f3ef:	mov    rbx,rax
  40f3f2:	jne    0x40f3af
  40f3f4:	mov    rax,QWORD PTR [rip+0x36d3d]        # 0x446138
  40f3fb:	mov    QWORD PTR [rax+r13*8],0x0
  40f403:	jmp    0x40ed1e
  40f408:	nop    DWORD PTR [rax+rax*1+0x0]
  40f410:	cmp    QWORD PTR [rip+0x36d10],0x0        # 0x446128
  40f418:	jne    0x40ecfe
  40f41e:	mov    ecx,0x400
  40f423:	lea    r15,[rip+0x27369]        # 0x436793
  40f42a:	xor    r13d,r13d
  40f42d:	call   0x412940
  40f432:	mov    r14d,0xf
  40f438:	mov    QWORD PTR [rip+0x36ce9],rax        # 0x446128
  40f43f:	mov    rsi,QWORD PTR [rbx+0x8]
  40f443:	mov    rdi,r15
  40f446:	mov    rcx,r14
  40f449:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f44b:	jne    0x40f471
  40f44d:	mov    rax,QWORD PTR [rbp+0x168]
  40f454:	mov    edx,r13d
  40f457:	lea    rcx,[rbx+0x10]
  40f45b:	add    r13d,0x1
  40f45f:	lea    rsi,[rax+rdx*8]
  40f463:	call   0x415d00
  40f468:	cmp    r13d,0x7f
  40f46c:	mov    QWORD PTR [rsi],rax
  40f46f:	ja     0x40f484
  40f471:	mov    rdx,rbx
  40f474:	mov    rcx,r12
  40f477:	call   0x41e1d0
  40f47c:	test   rax,rax
  40f47f:	mov    rbx,rax
  40f482:	jne    0x40f43f
  40f484:	mov    rax,QWORD PTR [rip+0x36c9d]        # 0x446128
  40f48b:	mov    QWORD PTR [rax+r13*8],0x0
  40f493:	jmp    0x40ecfe
  40f498:	nop    DWORD PTR [rax+rax*1+0x0]
  40f4a0:	cmp    QWORD PTR [rip+0x36d20],0x0        # 0x4461c8
  40f4a8:	jne    0x40ecde
  40f4ae:	mov    ecx,0x400
  40f4b3:	lea    r15,[rip+0x272c9]        # 0x436783
  40f4ba:	xor    r13d,r13d
  40f4bd:	call   0x412940
  40f4c2:	mov    r14d,0x10
  40f4c8:	mov    QWORD PTR [rip+0x36cf9],rax        # 0x4461c8
  40f4cf:	mov    rsi,QWORD PTR [rbx+0x8]
  40f4d3:	mov    rdi,r15
  40f4d6:	mov    rcx,r14
  40f4d9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f4db:	jne    0x40f501
  40f4dd:	mov    rax,QWORD PTR [rbp+0x208]
  40f4e4:	mov    edx,r13d
  40f4e7:	lea    rcx,[rbx+0x10]
  40f4eb:	add    r13d,0x1
  40f4ef:	lea    rsi,[rax+rdx*8]
  40f4f3:	call   0x415d00
  40f4f8:	cmp    r13d,0x7f
  40f4fc:	mov    QWORD PTR [rsi],rax
  40f4ff:	ja     0x40f514
  40f501:	mov    rdx,rbx
  40f504:	mov    rcx,r12
  40f507:	call   0x41e1d0
  40f50c:	test   rax,rax
  40f50f:	mov    rbx,rax
  40f512:	jne    0x40f4cf
  40f514:	mov    rax,QWORD PTR [rip+0x36cad]        # 0x4461c8
  40f51b:	mov    QWORD PTR [rax+r13*8],0x0
  40f523:	jmp    0x40ecde
  40f528:	nop    DWORD PTR [rax+rax*1+0x0]
  40f530:	cmp    QWORD PTR [rip+0x36bd8],0x0        # 0x446110
  40f538:	jne    0x40ecbe
  40f53e:	mov    ecx,0x400
  40f543:	lea    r15,[rip+0x27233]        # 0x43677d
  40f54a:	xor    r13d,r13d
  40f54d:	call   0x412940
  40f552:	mov    r14d,0x6
  40f558:	mov    QWORD PTR [rip+0x36bb1],rax        # 0x446110
  40f55f:	mov    rsi,QWORD PTR [rbx+0x8]
  40f563:	mov    rdi,r15
  40f566:	mov    rcx,r14
  40f569:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f56b:	jne    0x40f591
  40f56d:	mov    rax,QWORD PTR [rbp+0x150]
  40f574:	mov    edx,r13d
  40f577:	lea    rcx,[rbx+0x10]
  40f57b:	add    r13d,0x1
  40f57f:	lea    rsi,[rax+rdx*8]
  40f583:	call   0x415d00
  40f588:	cmp    r13d,0x7f
  40f58c:	mov    QWORD PTR [rsi],rax
  40f58f:	ja     0x40f5a4
  40f591:	mov    rdx,rbx
  40f594:	mov    rcx,r12
  40f597:	call   0x41e1d0
  40f59c:	test   rax,rax
  40f59f:	mov    rbx,rax
  40f5a2:	jne    0x40f55f
  40f5a4:	mov    rax,QWORD PTR [rip+0x36b65]        # 0x446110
  40f5ab:	mov    QWORD PTR [rax+r13*8],0x0
  40f5b3:	jmp    0x40ecbe
  40f5b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f5c0:	cmp    QWORD PTR [rip+0x36b40],0x0        # 0x446108
  40f5c8:	jne    0x40ec9e
  40f5ce:	mov    ecx,0x400
  40f5d3:	lea    r15,[rip+0x27198]        # 0x436772
  40f5da:	xor    r13d,r13d
  40f5dd:	call   0x412940
  40f5e2:	mov    r14d,0xb
  40f5e8:	mov    QWORD PTR [rip+0x36b19],rax        # 0x446108
  40f5ef:	mov    rsi,QWORD PTR [rbx+0x8]
  40f5f3:	mov    rdi,r15
  40f5f6:	mov    rcx,r14
  40f5f9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f5fb:	jne    0x40f621
  40f5fd:	mov    rax,QWORD PTR [rbp+0x148]
  40f604:	mov    edx,r13d
  40f607:	lea    rcx,[rbx+0x10]
  40f60b:	add    r13d,0x1
  40f60f:	lea    rsi,[rax+rdx*8]
  40f613:	call   0x415d00
  40f618:	cmp    r13d,0x7f
  40f61c:	mov    QWORD PTR [rsi],rax
  40f61f:	ja     0x40f634
  40f621:	mov    rdx,rbx
  40f624:	mov    rcx,r12
  40f627:	call   0x41e1d0
  40f62c:	test   rax,rax
  40f62f:	mov    rbx,rax
  40f632:	jne    0x40f5ef
  40f634:	mov    rax,QWORD PTR [rip+0x36acd]        # 0x446108
  40f63b:	mov    QWORD PTR [rax+r13*8],0x0
  40f643:	jmp    0x40ec9e
  40f648:	nop    DWORD PTR [rax+rax*1+0x0]
  40f650:	cmp    QWORD PTR [rip+0x36aa8],0x0        # 0x446100
  40f658:	jne    0x40ec7e
  40f65e:	mov    ecx,0x400
  40f663:	lea    r15,[rip+0x27104]        # 0x43676e
  40f66a:	xor    r13d,r13d
  40f66d:	call   0x412940
  40f672:	mov    r14d,0x4
  40f678:	mov    QWORD PTR [rip+0x36a81],rax        # 0x446100
  40f67f:	mov    rsi,QWORD PTR [rbx+0x8]
  40f683:	mov    rdi,r15
  40f686:	mov    rcx,r14
  40f689:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f68b:	jne    0x40f6b1
  40f68d:	mov    rax,QWORD PTR [rbp+0x140]
  40f694:	mov    edx,r13d
  40f697:	lea    rcx,[rbx+0x10]
  40f69b:	add    r13d,0x1
  40f69f:	lea    rsi,[rax+rdx*8]
  40f6a3:	call   0x415d00
  40f6a8:	cmp    r13d,0x7f
  40f6ac:	mov    QWORD PTR [rsi],rax
  40f6af:	ja     0x40f6c4
  40f6b1:	mov    rdx,rbx
  40f6b4:	mov    rcx,r12
  40f6b7:	call   0x41e1d0
  40f6bc:	test   rax,rax
  40f6bf:	mov    rbx,rax
  40f6c2:	jne    0x40f67f
  40f6c4:	mov    rax,QWORD PTR [rip+0x36a35]        # 0x446100
  40f6cb:	mov    QWORD PTR [rax+r13*8],0x0
  40f6d3:	jmp    0x40ec7e
  40f6d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f6e0:	cmp    QWORD PTR [rip+0x36a10],0x0        # 0x4460f8
  40f6e8:	jne    0x40ec5e
  40f6ee:	mov    ecx,0x400
  40f6f3:	lea    r15,[rip+0x2706b]        # 0x436765
  40f6fa:	xor    r13d,r13d
  40f6fd:	call   0x412940
  40f702:	mov    r14d,0x9
  40f708:	mov    QWORD PTR [rip+0x369e9],rax        # 0x4460f8
  40f70f:	mov    rsi,QWORD PTR [rbx+0x8]
  40f713:	mov    rdi,r15
  40f716:	mov    rcx,r14
  40f719:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f71b:	jne    0x40f741
  40f71d:	mov    rax,QWORD PTR [rbp+0x138]
  40f724:	mov    edx,r13d
  40f727:	lea    rcx,[rbx+0x10]
  40f72b:	add    r13d,0x1
  40f72f:	lea    rsi,[rax+rdx*8]
  40f733:	call   0x415d00
  40f738:	cmp    r13d,0x7f
  40f73c:	mov    QWORD PTR [rsi],rax
  40f73f:	ja     0x40f754
  40f741:	mov    rdx,rbx
  40f744:	mov    rcx,r12
  40f747:	call   0x41e1d0
  40f74c:	test   rax,rax
  40f74f:	mov    rbx,rax
  40f752:	jne    0x40f70f
  40f754:	mov    rax,QWORD PTR [rip+0x3699d]        # 0x4460f8
  40f75b:	mov    QWORD PTR [rax+r13*8],0x0
  40f763:	jmp    0x40ec5e
  40f768:	nop    DWORD PTR [rax+rax*1+0x0]
  40f770:	cmp    QWORD PTR [rip+0x36978],0x0        # 0x4460f0
  40f778:	jne    0x40ec3e
  40f77e:	mov    ecx,0x400
  40f783:	lea    r15,[rip+0x26fd8]        # 0x436762
  40f78a:	xor    r13d,r13d
  40f78d:	call   0x412940
  40f792:	mov    r14d,0x3
  40f798:	mov    QWORD PTR [rip+0x36951],rax        # 0x4460f0
  40f79f:	mov    rsi,QWORD PTR [rbx+0x8]
  40f7a3:	mov    rdi,r15
  40f7a6:	mov    rcx,r14
  40f7a9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f7ab:	jne    0x40f7d1
  40f7ad:	mov    rax,QWORD PTR [rbp+0x130]
  40f7b4:	mov    edx,r13d
  40f7b7:	lea    rcx,[rbx+0x10]
  40f7bb:	add    r13d,0x1
  40f7bf:	lea    rsi,[rax+rdx*8]
  40f7c3:	call   0x415d00
  40f7c8:	cmp    r13d,0x7f
  40f7cc:	mov    QWORD PTR [rsi],rax
  40f7cf:	ja     0x40f7e4
  40f7d1:	mov    rdx,rbx
  40f7d4:	mov    rcx,r12
  40f7d7:	call   0x41e1d0
  40f7dc:	test   rax,rax
  40f7df:	mov    rbx,rax
  40f7e2:	jne    0x40f79f
  40f7e4:	mov    rax,QWORD PTR [rip+0x36905]        # 0x4460f0
  40f7eb:	mov    QWORD PTR [rax+r13*8],0x0
  40f7f3:	jmp    0x40ec3e
  40f7f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f800:	cmp    QWORD PTR [rip+0x367b8],0x0        # 0x445fc0
  40f808:	jne    0x40e994
  40f80e:	mov    ecx,0x400
  40f813:	lea    r14,[rip+0x26e37]        # 0x436651
  40f81a:	xor    ebp,ebp
  40f81c:	call   0x412940
  40f821:	mov    r13d,0xd
  40f827:	mov    QWORD PTR [rip+0x36792],rax        # 0x445fc0
  40f82e:	mov    rsi,QWORD PTR [rbx+0x8]
  40f832:	mov    rdi,r14
  40f835:	mov    rcx,r13
  40f838:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f83a:	jne    0x40f85d
  40f83c:	mov    rax,QWORD PTR [rip+0x3677d]        # 0x445fc0
  40f843:	mov    edx,ebp
  40f845:	lea    rcx,[rbx+0x10]
  40f849:	add    ebp,0x1
  40f84c:	lea    rsi,[rax+rdx*8]
  40f850:	call   0x415d00
  40f855:	cmp    ebp,0x7f
  40f858:	mov    QWORD PTR [rsi],rax
  40f85b:	ja     0x40f870
  40f85d:	mov    rdx,rbx
  40f860:	mov    rcx,r12
  40f863:	call   0x41e1d0
  40f868:	test   rax,rax
  40f86b:	mov    rbx,rax
  40f86e:	jne    0x40f82e
  40f870:	mov    rax,QWORD PTR [rip+0x36749]        # 0x445fc0
  40f877:	mov    QWORD PTR [rax+rbp*8],0x0
  40f87f:	jmp    0x40e986
  40f884:	cmp    QWORD PTR [rip+0x3673c],0x0        # 0x445fc8
  40f88c:	jne    0x40e966
  40f892:	mov    ecx,0x400
  40f897:	lea    r14,[rip+0x26d55]        # 0x4365f3
  40f89e:	xor    ebp,ebp
  40f8a0:	call   0x412940
  40f8a5:	mov    r13d,0x5
  40f8ab:	mov    QWORD PTR [rip+0x36716],rax        # 0x445fc8
  40f8b2:	mov    rsi,QWORD PTR [rbx+0x8]
  40f8b6:	mov    rdi,r14
  40f8b9:	mov    rcx,r13
  40f8bc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f8be:	jne    0x40f8e1
  40f8c0:	mov    rax,QWORD PTR [rip+0x36701]        # 0x445fc8
  40f8c7:	mov    edx,ebp
  40f8c9:	lea    rcx,[rbx+0x10]
  40f8cd:	add    ebp,0x1
  40f8d0:	lea    rsi,[rax+rdx*8]
  40f8d4:	call   0x415d00
  40f8d9:	cmp    ebp,0x7f
  40f8dc:	mov    QWORD PTR [rsi],rax
  40f8df:	ja     0x40f8f4
  40f8e1:	mov    rdx,rbx
  40f8e4:	mov    rcx,r12
  40f8e7:	call   0x41e1d0
  40f8ec:	test   rax,rax
  40f8ef:	mov    rbx,rax
  40f8f2:	jne    0x40f8b2
  40f8f4:	mov    rax,QWORD PTR [rip+0x366cd]        # 0x445fc8
  40f8fb:	mov    QWORD PTR [rax+rbp*8],0x0
  40f903:	jmp    0x40e958
  40f908:	nop    DWORD PTR [rax+rax*1+0x0]
  40f910:	cmp    QWORD PTR [rip+0x368e0],0x0        # 0x4461f8
  40f918:	jne    0x40ef06
  40f91e:	mov    ecx,0x400
  40f923:	lea    r15,[rip+0x26f64]        # 0x43688e
  40f92a:	xor    r13d,r13d
  40f92d:	call   0x412940
  40f932:	mov    r14d,0xf
  40f938:	mov    QWORD PTR [rip+0x368b9],rax        # 0x4461f8
  40f93f:	mov    rsi,QWORD PTR [rbx+0x8]
  40f943:	mov    rdi,r15
  40f946:	mov    rcx,r14
  40f949:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f94b:	jne    0x40f971
  40f94d:	mov    rax,QWORD PTR [rbp+0x238]
  40f954:	mov    edx,r13d
  40f957:	lea    rcx,[rbx+0x10]
  40f95b:	add    r13d,0x1
  40f95f:	lea    rsi,[rax+rdx*8]
  40f963:	call   0x415d00
  40f968:	cmp    r13d,0x7f
  40f96c:	mov    QWORD PTR [rsi],rax
  40f96f:	ja     0x40f984
  40f971:	mov    rdx,rbx
  40f974:	mov    rcx,r12
  40f977:	call   0x41e1d0
  40f97c:	test   rax,rax
  40f97f:	mov    rbx,rax
  40f982:	jne    0x40f93f
  40f984:	mov    rax,QWORD PTR [rip+0x3686d]        # 0x4461f8
  40f98b:	mov    QWORD PTR [rax+r13*8],0x0
  40f993:	jmp    0x40ef06
  40f998:	nop    DWORD PTR [rax+rax*1+0x0]
  40f9a0:	cmp    QWORD PTR [rip+0x36848],0x0        # 0x4461f0
  40f9a8:	jne    0x40eee6
  40f9ae:	mov    ecx,0x400
  40f9b3:	lea    r15,[rip+0x26ecb]        # 0x436885
  40f9ba:	xor    r13d,r13d
  40f9bd:	call   0x412940
  40f9c2:	mov    r14d,0x9
  40f9c8:	mov    QWORD PTR [rip+0x36821],rax        # 0x4461f0
  40f9cf:	mov    rsi,QWORD PTR [rbx+0x8]
  40f9d3:	mov    rdi,r15
  40f9d6:	mov    rcx,r14
  40f9d9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f9db:	jne    0x40fa01
  40f9dd:	mov    rax,QWORD PTR [rbp+0x230]
  40f9e4:	mov    edx,r13d
  40f9e7:	lea    rcx,[rbx+0x10]
  40f9eb:	add    r13d,0x1
  40f9ef:	lea    rsi,[rax+rdx*8]
  40f9f3:	call   0x415d00
  40f9f8:	cmp    r13d,0x7f
  40f9fc:	mov    QWORD PTR [rsi],rax
  40f9ff:	ja     0x40fa14
  40fa01:	mov    rdx,rbx
  40fa04:	mov    rcx,r12
  40fa07:	call   0x41e1d0
  40fa0c:	test   rax,rax
  40fa0f:	mov    rbx,rax
  40fa12:	jne    0x40f9cf
  40fa14:	mov    rax,QWORD PTR [rip+0x367d5]        # 0x4461f0
  40fa1b:	mov    QWORD PTR [rax+r13*8],0x0
  40fa23:	jmp    0x40eee6
  40fa28:	nop    DWORD PTR [rax+rax*1+0x0]
  40fa30:	mov    eax,DWORD PTR [rax+0x10]
  40fa33:	mov    DWORD PTR [rip+0x36757],eax        # 0x446190
  40fa39:	jmp    0x40eea9
  40fa3e:	movsxd rax,DWORD PTR [rax+0x10]
  40fa42:	mov    QWORD PTR [rip+0x3678f],rax        # 0x4461d8
  40fa49:	jmp    0x40ee75
  40fa4e:	mov    eax,DWORD PTR [rax+0x10]
  40fa51:	mov    DWORD PTR [rip+0x36779],eax        # 0x4461d0
  40fa57:	jmp    0x40ee46
  40fa5c:	mov    eax,DWORD PTR [rax+0x10]
  40fa5f:	mov    DWORD PTR [rip+0x36723],eax        # 0x446188
  40fa65:	jmp    0x40ee1e
  40fa6a:	movsxd rax,DWORD PTR [rax+0x10]
  40fa6e:	mov    QWORD PTR [rip+0x3670b],rax        # 0x446180
  40fa75:	jmp    0x40edea
  40fa7a:	cmp    QWORD PTR [rip+0x366be],0x0        # 0x446140
  40fa82:	jne    0x40ed9e
  40fa88:	mov    ecx,0x400
  40fa8d:	lea    r15,[rip+0x26d6c]        # 0x436800
  40fa94:	xor    r13d,r13d
  40fa97:	call   0x412940
  40fa9c:	mov    r14d,0x10
  40faa2:	mov    QWORD PTR [rip+0x36697],rax        # 0x446140
  40faa9:	mov    rsi,QWORD PTR [rbx+0x8]
  40faad:	mov    rdi,r15
  40fab0:	mov    rcx,r14
  40fab3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40fab5:	jne    0x40fadb
  40fab7:	mov    rax,QWORD PTR [rbp+0x180]
  40fabe:	mov    edx,r13d
  40fac1:	lea    rcx,[rbx+0x10]
  40fac5:	add    r13d,0x1
  40fac9:	lea    rsi,[rax+rdx*8]
  40facd:	call   0x415d00
  40fad2:	cmp    r13d,0x7f
  40fad6:	mov    QWORD PTR [rsi],rax
  40fad9:	ja     0x40faee
  40fadb:	mov    rdx,rbx
  40fade:	mov    rcx,r12
  40fae1:	call   0x41e1d0
  40fae6:	test   rax,rax
  40fae9:	mov    rbx,rax
  40faec:	jne    0x40faa9
  40faee:	mov    rax,QWORD PTR [rip+0x3664b]        # 0x446140
  40faf5:	mov    QWORD PTR [rax+r13*8],0x0
  40fafd:	jmp    0x40ed9e
  40fb02:	lea    rbx,[rax+0x10]
  40fb06:	mov    rcx,rbx
  40fb09:	mov    QWORD PTR [rsp+0x30],rbx
  40fb0e:	call   0x42de30
  40fb13:	lea    rdx,[rsp+0x130]
  40fb1b:	mov    rcx,rsi
  40fb1e:	mov    DWORD PTR [rsp+0x38],eax
  40fb22:	call   0x426e98
  40fb27:	test   eax,eax
  40fb29:	js     0x40ff96
  40fb2f:	mov    rax,QWORD PTR [rsp+0x130]
  40fb37:	mov    QWORD PTR [rip+0x364ca],rax        # 0x446008
  40fb3e:	mov    eax,DWORD PTR [rsp+0x138]
  40fb45:	mov    DWORD PTR [rip+0x364c5],eax        # 0x446010
  40fb4b:	jmp    0x40ea47
  40fb50:	lea    rbx,[rax+0x10]
  40fb54:	mov    rcx,rbx
  40fb57:	mov    QWORD PTR [rsp+0x30],rbx
  40fb5c:	call   0x42de30
  40fb61:	lea    rdx,[rsp+0x130]
  40fb69:	mov    rcx,rsi
  40fb6c:	mov    DWORD PTR [rsp+0x38],eax
  40fb70:	call   0x426e98
  40fb75:	test   eax,eax
  40fb77:	js     0x40ff96
  40fb7d:	mov    rax,QWORD PTR [rsp+0x130]
  40fb85:	mov    QWORD PTR [rip+0x3646c],rax        # 0x445ff8
  40fb8c:	mov    eax,DWORD PTR [rsp+0x138]
  40fb93:	mov    DWORD PTR [rip+0x36467],eax        # 0x446000
  40fb99:	jmp    0x40ea64
  40fb9e:	lea    rcx,[rax+0x10]
  40fba2:	call   0x415d00
  40fba7:	mov    QWORD PTR [rip+0x36422],rax        # 0x445fd0
  40fbae:	jmp    0x40e9b1
  40fbb3:	lea    rcx,[rax+0x10]
  40fbb7:	call   0x415d00
  40fbbc:	mov    QWORD PTR [rip+0x36415],rax        # 0x445fd8
  40fbc3:	jmp    0x40e9ce
  40fbc8:	lea    rcx,[rax+0x10]
  40fbcc:	call   0x415d00
  40fbd1:	mov    QWORD PTR [rip+0x365a0],rax        # 0x446178
  40fbd8:	jmp    0x40eb69
  40fbdd:	lea    rcx,[rax+0x10]
  40fbe1:	call   0x415d00
  40fbe6:	mov    QWORD PTR [rip+0x36563],rax        # 0x446150
  40fbed:	jmp    0x40edbb
  40fbf2:	lea    rcx,[rax+0x10]
  40fbf6:	call   0x415d00
  40fbfb:	mov    QWORD PTR [rip+0x36426],rax        # 0x446028
  40fc02:	jmp    0x40ead8
  40fc07:	lea    rcx,[rax+0x10]
  40fc0b:	call   0x415d00
  40fc10:	mov    QWORD PTR [rip+0x363d1],rax        # 0x445fe8
  40fc17:	jmp    0x40ea08
  40fc1c:	lea    rcx,[rax+0x10]
  40fc20:	call   0x415d00
  40fc25:	mov    QWORD PTR [rip+0x363c4],rax        # 0x445ff0
  40fc2c:	jmp    0x40ea25
  40fc31:	lea    rcx,[rax+0x10]
  40fc35:	call   0x415d00
  40fc3a:	mov    QWORD PTR [rip+0x365a7],rax        # 0x4461e8
  40fc41:	jmp    0x40eec6
  40fc46:	lea    rcx,[rax+0x10]
  40fc4a:	call   0x415d00
  40fc4f:	mov    QWORD PTR [rip+0x3638a],rax        # 0x445fe0
  40fc56:	jmp    0x40e9eb
  40fc5b:	lea    rcx,[rax+0x10]
  40fc5f:	call   0x415d00
  40fc64:	mov    QWORD PTR [rip+0x364ed],rax        # 0x446158
  40fc6b:	jmp    0x40eaf5
  40fc70:	lea    rcx,[rax+0x10]
  40fc74:	call   0x415d00
  40fc79:	mov    QWORD PTR [rip+0x364e0],rax        # 0x446160
  40fc80:	jmp    0x40eb12
  40fc85:	lea    rcx,[rax+0x10]
  40fc89:	call   0x415d00
  40fc8e:	mov    QWORD PTR [rip+0x364d3],rax        # 0x446168
  40fc95:	jmp    0x40eb2f
  40fc9a:	lea    rcx,[rax+0x10]
  40fc9e:	call   0x415d00
  40fca3:	mov    QWORD PTR [rip+0x364c6],rax        # 0x446170
  40fcaa:	jmp    0x40eb4c
  40fcaf:	lea    rcx,[rax+0x10]
  40fcb3:	call   0x415d00
  40fcb8:	mov    QWORD PTR [rip+0x36359],rax        # 0x446018
  40fcbf:	jmp    0x40ea81
  40fcc4:	lea    rcx,[rax+0x10]
  40fcc8:	call   0x415d00
  40fccd:	mov    QWORD PTR [rip+0x36474],rax        # 0x446148
  40fcd4:	jmp    0x40ea9e
  40fcd9:	lea    rcx,[rax+0x10]
  40fcdd:	call   0x415d00
  40fce2:	mov    QWORD PTR [rip+0x36337],rax        # 0x446020
  40fce9:	jmp    0x40eabb
  40fcee:	lea    rcx,[rax+0x10]
  40fcf2:	mov    r8d,0xa
  40fcf8:	xor    edx,edx
  40fcfa:	call   0x42de00
  40fcff:	cdqe   
  40fd01:	mov    QWORD PTR [rip+0x36478],rax        # 0x446180
  40fd08:	jmp    0x40edea
  40fd0d:	lea    rcx,[rax+0x10]
  40fd11:	mov    r8d,0xa
  40fd17:	xor    edx,edx
  40fd19:	call   0x42de00
  40fd1e:	mov    DWORD PTR [rip+0x3646c],eax        # 0x446190
  40fd24:	jmp    0x40eea9
  40fd29:	lea    rcx,[rax+0x10]
  40fd2d:	mov    r8d,0xa
  40fd33:	xor    edx,edx
  40fd35:	call   0x42de00
  40fd3a:	mov    DWORD PTR [rip+0x36448],eax        # 0x446188
  40fd40:	jmp    0x40ee1e
  40fd45:	lea    rcx,[rax+0x10]
  40fd49:	mov    r8d,0xa
  40fd4f:	xor    edx,edx
  40fd51:	call   0x42de00
  40fd56:	mov    DWORD PTR [rip+0x36474],eax        # 0x4461d0
  40fd5c:	jmp    0x40ee46
  40fd61:	lea    rcx,[rax+0x10]
  40fd65:	mov    r8d,0xa
  40fd6b:	xor    edx,edx
  40fd6d:	call   0x42de00
  40fd72:	cdqe   
  40fd74:	mov    QWORD PTR [rip+0x3645d],rax        # 0x4461d8
  40fd7b:	jmp    0x40ee75
  40fd80:	lea    rdx,[rip+0x268c7]        # 0x43664e
  40fd87:	mov    rcx,r12
  40fd8a:	call   0x41e080
  40fd8f:	test   rax,rax
  40fd92:	mov    rbp,rax
  40fd95:	je     0x40e966
  40fd9b:	cmp    DWORD PTR [rax],0x1
  40fd9e:	jne    0x40e966
  40fda4:	cmp    QWORD PTR [rip+0x3621c],0x0        # 0x445fc8
  40fdac:	jne    0x40e966
  40fdb2:	mov    ecx,0x400
  40fdb7:	xor    ebx,ebx
  40fdb9:	lea    r14,[rip+0x2688e]        # 0x43664e
  40fdc0:	call   0x412940
  40fdc5:	mov    r13d,0x3
  40fdcb:	mov    QWORD PTR [rip+0x361f6],rax        # 0x445fc8
  40fdd2:	jmp    0x40fde7
  40fdd4:	mov    rdx,rbp
  40fdd7:	mov    rcx,r12
  40fdda:	call   0x41e1d0
  40fddf:	test   rax,rax
  40fde2:	mov    rbp,rax
  40fde5:	je     0x40fe16
  40fde7:	mov    rsi,QWORD PTR [rbp+0x8]
  40fdeb:	mov    rdi,r14
  40fdee:	mov    rcx,r13
  40fdf1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40fdf3:	jne    0x40fdd4
  40fdf5:	mov    rax,QWORD PTR [rip+0x361cc]        # 0x445fc8
  40fdfc:	mov    edx,ebx
  40fdfe:	lea    rcx,[rbp+0x10]
  40fe02:	add    ebx,0x1
  40fe05:	lea    rsi,[rax+rdx*8]
  40fe09:	call   0x415d00
  40fe0e:	cmp    ebx,0x7f
  40fe11:	mov    QWORD PTR [rsi],rax
  40fe14:	jbe    0x40fdd4
  40fe16:	mov    rax,QWORD PTR [rip+0x361ab]        # 0x445fc8
  40fe1d:	mov    QWORD PTR [rax+rbx*8],0x0
  40fe25:	jmp    0x40e966
  40fe2a:	nop    WORD PTR [rax+rax*1+0x0]
  40fe30:	lea    rdx,[rip+0x26827]        # 0x43665e
  40fe37:	mov    rcx,r12
  40fe3a:	call   0x41e080
  40fe3f:	test   rax,rax
  40fe42:	mov    rbp,rax
  40fe45:	je     0x40e994
  40fe4b:	cmp    DWORD PTR [rax],0x1
  40fe4e:	jne    0x40e994
  40fe54:	cmp    QWORD PTR [rip+0x36164],0x0        # 0x445fc0
  40fe5c:	jne    0x40e994
  40fe62:	mov    ecx,0x400
  40fe67:	xor    ebx,ebx
  40fe69:	lea    r14,[rip+0x267ee]        # 0x43665e
  40fe70:	call   0x412940
  40fe75:	mov    r13d,0x2
  40fe7b:	mov    QWORD PTR [rip+0x3613e],rax        # 0x445fc0
  40fe82:	jmp    0x40fe97
  40fe84:	mov    rdx,rbp
  40fe87:	mov    rcx,r12
  40fe8a:	call   0x41e1d0
  40fe8f:	test   rax,rax
  40fe92:	mov    rbp,rax
  40fe95:	je     0x40fec6
  40fe97:	mov    rsi,QWORD PTR [rbp+0x8]
  40fe9b:	mov    rdi,r14
  40fe9e:	mov    rcx,r13
  40fea1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40fea3:	jne    0x40fe84
  40fea5:	mov    rax,QWORD PTR [rip+0x36114]        # 0x445fc0
  40feac:	mov    edx,ebx
  40feae:	lea    rcx,[rbp+0x10]
  40feb2:	add    ebx,0x1
  40feb5:	lea    rsi,[rax+rdx*8]
  40feb9:	call   0x415d00
  40febe:	cmp    ebx,0x7f
  40fec1:	mov    QWORD PTR [rsi],rax
  40fec4:	jbe    0x40fe84
  40fec6:	mov    rax,QWORD PTR [rip+0x360f3]        # 0x445fc0
  40fecd:	mov    QWORD PTR [rax+rbx*8],0x0
  40fed5:	jmp    0x40e994
  40feda:	nop    WORD PTR [rax+rax*1+0x0]
  40fee0:	mov    edx,0x9
  40fee5:	mov    rcx,r13
  40fee8:	call   0x42de58
  40feed:	test   rax,rax
  40fef0:	mov    rdi,rax
  40fef3:	jne    0x40f1c5
  40fef9:	call   QWORD PTR [rip+0x388e1]        # 0x4487e0
  40feff:	lea    r8,[rip+0x268cb]        # 0x4367d1
  40ff06:	lea    rcx,[rax+0x60]
  40ff0a:	lea    rdx,[rip+0x268c7]        # 0x4367d8
  40ff11:	call   0x40e340
  40ff16:	mov    ecx,0x1
  40ff1b:	call   0x42df60
  40ff20:	call   QWORD PTR [rip+0x388ba]        # 0x4487e0
  40ff26:	lea    rdx,[rip+0x268fa]        # 0x436827
  40ff2d:	lea    rcx,[rax+0x60]
  40ff31:	call   0x40e340
  40ff36:	mov    ecx,0x1
  40ff3b:	call   0x42df60
  40ff40:	lea    rcx,[rip+0x26681]        # 0x4365c8
  40ff47:	call   0x42de80
  40ff4c:	call   QWORD PTR [rip+0x3888e]        # 0x4487e0
  40ff52:	lea    rdx,[rip+0x2667e]        # 0x4365d7
  40ff59:	lea    rcx,[rax+0x60]
  40ff5d:	mov    r8,rbx
  40ff60:	call   0x40e340
  40ff65:	mov    ecx,0x1
  40ff6a:	call   0x42df60
  40ff6f:	call   QWORD PTR [rip+0x3886b]        # 0x4487e0
  40ff75:	lea    r8,[rip+0x26855]        # 0x4367d1
  40ff7c:	lea    rcx,[rax+0x60]
  40ff80:	lea    rdx,[rip+0x26863]        # 0x4367ea
  40ff87:	call   0x40e340
  40ff8c:	mov    ecx,0x1
  40ff91:	call   0x42df60
  40ff96:	call   QWORD PTR [rip+0x38844]        # 0x4487e0
  40ff9c:	lea    rdx,[rip+0x266e7]        # 0x43668a
  40ffa3:	lea    rcx,[rax+0x60]
  40ffa7:	mov    r8,rbx
  40ffaa:	call   0x40e340
  40ffaf:	mov    ecx,0x1
  40ffb4:	call   0x42df60
  40ffb9:	nop
  40ffba:	nop    WORD PTR [rax+rax*1+0x0]
  40ffc0:	push   rbp
  40ffc1:	push   rdi
  40ffc2:	push   rsi
  40ffc3:	push   rbx
  40ffc4:	sub    rsp,0xb8
  40ffcb:	mov    rbx,QWORD PTR [rip+0x3880e]        # 0x4487e0
  40ffd2:	mov    rsi,rdx
  40ffd5:	mov    rbp,r8
  40ffd8:	mov    rdi,rcx
  40ffdb:	call   rbx
  40ffdd:	mov    rcx,rsi
  40ffe0:	lea    rdx,[rax+0x60]
  40ffe4:	lea    rsi,[rsp+0x30]
  40ffe9:	call   0x42df18
  40ffee:	call   rbx
  40fff0:	mov    edx,0x80
  40fff5:	mov    r8,rax
  40fff8:	mov    rcx,rsi
  40fffb:	call   0x42df38
  410000:	test   rax,rax
  410003:	je     0x410012
  410005:	movzx  eax,BYTE PTR [rsp+0x30]
  41000a:	cmp    al,0xa
  41000c:	je     0x410012
  41000e:	cmp    al,0xd
  410010:	jne    0x410020
  410012:	add    rsp,0xb8
  410019:	pop    rbx
  41001a:	pop    rsi
  41001b:	pop    rdi
  41001c:	pop    rbp
  41001d:	ret    
  41001e:	xchg   ax,ax
  410020:	mov    rdx,rsi
  410023:	mov    ecx,DWORD PTR [rdx]
  410025:	add    rdx,0x4
  410029:	lea    eax,[rcx-0x1010101]
  41002f:	not    ecx
  410031:	and    eax,ecx
  410033:	and    eax,0x80808080
  410038:	je     0x410023
  41003a:	mov    ecx,eax
  41003c:	mov    r9,rsi
  41003f:	shr    ecx,0x10
  410042:	test   eax,0x8080
  410047:	cmove  eax,ecx
  41004a:	lea    rcx,[rdx+0x2]
  41004e:	cmove  rdx,rcx
  410052:	add    al,al
  410054:	mov    rcx,rdi
  410057:	sbb    rdx,0x3
  41005b:	xor    r8d,r8d
  41005e:	sub    rdx,rsi
  410061:	sub    edx,0x1
  410064:	mov    DWORD PTR [rsp+0x20],edx
  410068:	mov    rdx,rbp
  41006b:	call   0x426e58
  410070:	test   eax,eax
  410072:	jns    0x410012
  410074:	mov    ecx,eax
  410076:	call   0x40dc88
  41007b:	mov    rsi,rax
  41007e:	call   rbx
  410080:	lea    rdx,[rip+0x26928]        # 0x4369af
  410087:	lea    rcx,[rax+0x60]
  41008b:	mov    r8,rsi
  41008e:	call   0x40e340
  410093:	mov    ecx,0x1
  410098:	call   0x42df60
  41009d:	nop
  41009e:	xchg   ax,ax
  4100a0:	push   rbp
  4100a1:	push   rdi
  4100a2:	push   rsi
  4100a3:	push   rbx
  4100a4:	sub    rsp,0xb8
  4100ab:	mov    rbx,QWORD PTR [rip+0x3872e]        # 0x4487e0
  4100b2:	mov    rsi,rdx
  4100b5:	mov    rbp,r8
  4100b8:	mov    rdi,rcx
  4100bb:	call   rbx
  4100bd:	mov    rcx,rsi
  4100c0:	lea    rdx,[rax+0x60]
  4100c4:	lea    rsi,[rsp+0x30]
  4100c9:	call   0x42df18
  4100ce:	call   rbx
  4100d0:	mov    edx,0x80
  4100d5:	mov    r8,rax
  4100d8:	mov    rcx,rsi
  4100db:	call   0x42df38
  4100e0:	test   rax,rax
  4100e3:	je     0x4100f2
  4100e5:	movzx  eax,BYTE PTR [rsp+0x30]
  4100ea:	cmp    al,0xa
  4100ec:	je     0x4100f2
  4100ee:	cmp    al,0xd
  4100f0:	jne    0x410100
  4100f2:	add    rsp,0xb8
  4100f9:	pop    rbx
  4100fa:	pop    rsi
  4100fb:	pop    rdi
  4100fc:	pop    rbp
  4100fd:	ret    
  4100fe:	xchg   ax,ax
  410100:	mov    rdx,rsi
  410103:	mov    ecx,DWORD PTR [rdx]
  410105:	add    rdx,0x4
  410109:	lea    eax,[rcx-0x1010101]
  41010f:	not    ecx
  410111:	and    eax,ecx
  410113:	and    eax,0x80808080
  410118:	je     0x410103
  41011a:	mov    ecx,eax
  41011c:	mov    r9,rsi
  41011f:	shr    ecx,0x10
  410122:	test   eax,0x8080
  410127:	cmove  eax,ecx
  41012a:	lea    rcx,[rdx+0x2]
  41012e:	cmove  rdx,rcx
  410132:	add    al,al
  410134:	mov    rcx,rdi
  410137:	sbb    rdx,0x3
  41013b:	xor    r8d,r8d
  41013e:	sub    rdx,rsi
  410141:	sub    edx,0x1
  410144:	mov    DWORD PTR [rsp+0x20],edx
  410148:	mov    rdx,rbp
  41014b:	call   0x426e80
  410150:	test   eax,eax
  410152:	jns    0x4100f2
  410154:	mov    ecx,eax
  410156:	call   0x40dc88
  41015b:	mov    rsi,rax
  41015e:	call   rbx
  410160:	lea    rdx,[rip+0x26848]        # 0x4369af
  410167:	lea    rcx,[rax+0x60]
  41016b:	mov    r8,rsi
  41016e:	call   0x40e340
  410173:	mov    ecx,0x1
  410178:	call   0x42df60
  41017d:	nop
  41017e:	xchg   ax,ax
  410180:	xor    edx,edx
  410182:	jmp    0x40e3f0
  410187:	nop    WORD PTR [rax+rax*1+0x0]
  410190:	push   rsi
  410191:	push   rbx
  410192:	sub    rsp,0x28
  410196:	mov    rbx,QWORD PTR [rip+0x38643]        # 0x4487e0
  41019d:	mov    rsi,rcx
  4101a0:	call   rbx
  4101a2:	lea    rdx,[rax+0x60]
  4101a6:	mov    rcx,rsi
  4101a9:	call   0x42df18
  4101ae:	call   rbx
  4101b0:	lea    rcx,[rip+0x33bc9]        # 0x443d80
  4101b7:	mov    r8,rax
  4101ba:	mov    edx,0x80
  4101bf:	call   0x42df38
  4101c4:	test   rax,rax
  4101c7:	je     0x410244
  4101c9:	movzx  r8d,BYTE PTR [rip+0x33baf]        # 0x443d80
  4101d1:	lea    r9,[rip+0x33ba8]        # 0x443d80
  4101d8:	mov    r10,r9
  4101db:	cmp    r8b,0xd
  4101df:	je     0x410244
  4101e1:	cmp    r8b,0xa
  4101e5:	je     0x410244
  4101e7:	mov    rax,r9
  4101ea:	mov    ecx,DWORD PTR [rax]
  4101ec:	add    rax,0x4
  4101f0:	lea    edx,[rcx-0x1010101]
  4101f6:	not    ecx
  4101f8:	and    edx,ecx
  4101fa:	and    edx,0x80808080
  410200:	je     0x4101ea
  410202:	mov    ecx,edx
  410204:	shr    ecx,0x10
  410207:	test   edx,0x8080
  41020d:	cmove  edx,ecx
  410210:	lea    rcx,[rax+0x2]
  410214:	cmove  rax,rcx
  410218:	add    dl,dl
  41021a:	sbb    rax,0x3
  41021e:	sub    rax,r10
  410221:	test   eax,eax
  410223:	jle    0x410231
  410225:	sub    eax,0x1
  410228:	cdqe   
  41022a:	cmp    BYTE PTR [r9+rax*1],0xa
  41022f:	je     0x410250
  410231:	test   r8b,r8b
  410234:	je     0x410244
  410236:	lea    rax,[rip+0x33b43]        # 0x443d80
  41023d:	add    rsp,0x28
  410241:	pop    rbx
  410242:	pop    rsi
  410243:	ret    
  410244:	xor    eax,eax
  410246:	add    rsp,0x28
  41024a:	pop    rbx
  41024b:	pop    rsi
  41024c:	ret    
  41024d:	nop    DWORD PTR [rax]
  410250:	lea    rdx,[rip+0x33b29]        # 0x443d80
  410257:	mov    BYTE PTR [rdx+rax*1],0x0
  41025b:	movzx  r8d,BYTE PTR [rip+0x33b1d]        # 0x443d80
  410263:	jmp    0x410231
  410265:	nop
  410266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410270:	push   rbp
  410271:	push   rdi
  410272:	push   rsi
  410273:	push   rbx
  410274:	sub    rsp,0xa8
  41027b:	mov    rbx,QWORD PTR [rip+0x3855e]        # 0x4487e0
  410282:	mov    rdi,rcx
  410285:	mov    ebp,edx
  410287:	lea    rsi,[rsp+0x20]
  41028c:	jmp    0x4102b2
  41028e:	xchg   ax,ax
  410290:	movzx  r8d,BYTE PTR [rsp+0x20]
  410296:	cmp    r8b,0xd
  41029a:	je     0x4102d7
  41029c:	cmp    r8b,0xa
  4102a0:	je     0x4102d7
  4102a2:	and    r8d,0xffffffdf
  4102a6:	cmp    r8b,0x59
  4102aa:	je     0x4102e5
  4102ac:	cmp    r8b,0x4e
  4102b0:	je     0x410300
  4102b2:	call   rbx
  4102b4:	lea    rdx,[rax+0x60]
  4102b8:	mov    rcx,rdi
  4102bb:	call   0x42df18
  4102c0:	call   rbx
  4102c2:	mov    edx,0x80
  4102c7:	mov    r8,rax
  4102ca:	mov    rcx,rsi
  4102cd:	call   0x42df38
  4102d2:	test   rax,rax
  4102d5:	jne    0x410290
  4102d7:	mov    eax,ebp
  4102d9:	add    rsp,0xa8
  4102e0:	pop    rbx
  4102e1:	pop    rsi
  4102e2:	pop    rdi
  4102e3:	pop    rbp
  4102e4:	ret    
  4102e5:	mov    eax,0x1
  4102ea:	add    rsp,0xa8
  4102f1:	pop    rbx
  4102f2:	pop    rsi
  4102f3:	pop    rdi
  4102f4:	pop    rbp
  4102f5:	ret    
  4102f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410300:	xor    eax,eax
  410302:	add    rsp,0xa8
  410309:	pop    rbx
  41030a:	pop    rsi
  41030b:	pop    rdi
  41030c:	pop    rbp
  41030d:	ret    
  41030e:	xchg   ax,ax
  410310:	mov    rax,QWORD PTR [rip+0x2d6c9]        # 0x43d9e0
  410317:	mov    edx,DWORD PTR [rax]
  410319:	test   edx,edx
  41031b:	je     0x41032a
  41031d:	mov    rax,QWORD PTR [rip+0x2d6ac]        # 0x43d9d0
  410324:	mov    eax,DWORD PTR [rax]
  410326:	test   eax,eax
  410328:	je     0x410340
  41032a:	lea    rcx,[rip+0x2668a]        # 0x4369bb
  410331:	jmp    0x412430
  410336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410340:	mov    rax,QWORD PTR [rip+0x35e01]        # 0x446148
  410347:	ret    
  410348:	nop    DWORD PTR [rax+rax*1+0x0]
  410350:	push   rbp
  410351:	push   rdi
  410352:	push   rsi
  410353:	push   rbx
  410354:	sub    rsp,0x28
  410358:	mov    rax,QWORD PTR [rip+0x2d681]        # 0x43d9e0
  41035f:	xor    ebx,ebx
  410361:	mov    edi,ecx
  410363:	mov    edx,DWORD PTR [rax]
  410365:	test   edx,edx
  410367:	je     0x410376
  410369:	mov    rax,QWORD PTR [rip+0x2d660]        # 0x43d9d0
  410370:	mov    eax,DWORD PTR [rax]
  410372:	test   eax,eax
  410374:	je     0x4103f4
  410376:	mov    rbp,QWORD PTR [rip+0x38463]        # 0x4487e0
  41037d:	mov    rcx,rbx
  410380:	call   0x42df08
  410385:	lea    rcx,[rip+0x2662f]        # 0x4369bb
  41038c:	call   0x412430
  410391:	mov    rcx,rax
  410394:	call   0x415d00
  410399:	lea    rcx,[rip+0x2664f]        # 0x4369ef
  4103a0:	mov    rbx,rax
  4103a3:	call   0x412430
  4103a8:	mov    rdx,rbx
  4103ab:	mov    rcx,rax
  4103ae:	mov    rsi,rax
  4103b1:	call   0x42de50
  4103b6:	test   eax,eax
  4103b8:	je     0x4103e0
  4103ba:	test   dil,dil
  4103bd:	je     0x4103c4
  4103bf:	cmp    BYTE PTR [rsi],0x0
  4103c2:	je     0x4103e0
  4103c4:	call   rbp
  4103c6:	lea    rdx,[rip+0x26603]        # 0x4369d0
  4103cd:	lea    rcx,[rax+0x60]
  4103d1:	call   0x40e340
  4103d6:	jmp    0x41037d
  4103d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4103e0:	mov    rcx,rbx
  4103e3:	call   0x42df08
  4103e8:	mov    rax,rsi
  4103eb:	add    rsp,0x28
  4103ef:	pop    rbx
  4103f0:	pop    rsi
  4103f1:	pop    rdi
  4103f2:	pop    rbp
  4103f3:	ret    
  4103f4:	mov    rax,QWORD PTR [rip+0x35d4d]        # 0x446148
  4103fb:	add    rsp,0x28
  4103ff:	pop    rbx
  410400:	pop    rsi
  410401:	pop    rdi
  410402:	pop    rbp
  410403:	ret    
  410404:	xchg   ax,ax
  410406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410410:	mov    rax,QWORD PTR [rip+0x2d5c9]        # 0x43d9e0
  410417:	mov    edx,DWORD PTR [rax]
  410419:	test   edx,edx
  41041b:	je     0x41042a
  41041d:	mov    rax,QWORD PTR [rip+0x2d5ac]        # 0x43d9d0
  410424:	mov    eax,DWORD PTR [rax]
  410426:	test   eax,eax
  410428:	je     0x410440
  41042a:	lea    rcx,[rip+0x265d1]        # 0x436a02
  410431:	jmp    0x412430
  410436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410440:	mov    rax,QWORD PTR [rip+0x35bd1]        # 0x446018
  410447:	ret    
  410448:	nop    DWORD PTR [rax+rax*1+0x0]
  410450:	push   rsi
  410451:	push   rbx
  410452:	sub    rsp,0x28
  410456:	mov    rax,QWORD PTR [rip+0x2d583]        # 0x43d9e0
  41045d:	mov    rsi,rcx
  410460:	mov    eax,DWORD PTR [rax]
  410462:	test   eax,eax
  410464:	je     0x4104f5
  41046a:	mov    rax,QWORD PTR [rip+0x35ccf]        # 0x446140
  410471:	test   rax,rax
  410474:	je     0x410509
  41047a:	mov    r8,QWORD PTR [rax]
  41047d:	test   r8,r8
  410480:	je     0x410509
  410486:	mov    ebx,0x8
  41048b:	jmp    0x4104a4
  41048d:	nop    DWORD PTR [rax]
  410490:	mov    rax,QWORD PTR [rip+0x35ca9]        # 0x446140
  410497:	mov    r8,QWORD PTR [rax+rbx*1]
  41049b:	add    rbx,0x8
  41049f:	test   r8,r8
  4104a2:	je     0x410509
  4104a4:	xor    r9d,r9d
  4104a7:	mov    edx,0x3
  4104ac:	mov    rcx,rsi
  4104af:	call   0x426e68
  4104b4:	test   eax,eax
  4104b6:	jns    0x410490
  4104b8:	mov    ecx,eax
  4104ba:	call   0x40dc88
  4104bf:	mov    rbx,rax
  4104c2:	call   QWORD PTR [rip+0x38318]        # 0x4487e0
  4104c8:	lea    rdx,[rip+0x26581]        # 0x436a50
  4104cf:	lea    rcx,[rax+0x60]
  4104d3:	mov    r8,rbx
  4104d6:	call   0x40e340
  4104db:	mov    ecx,0x1
  4104e0:	call   0x42df60
  4104e5:	xor    r9d,r9d
  4104e8:	mov    edx,0x3
  4104ed:	mov    rcx,rsi
  4104f0:	call   0x426e68
  4104f5:	lea    rcx,[rip+0x26524]        # 0x436a20
  4104fc:	call   0x410190
  410501:	test   rax,rax
  410504:	mov    r8,rax
  410507:	jne    0x4104e5
  410509:	add    rsp,0x28
  41050d:	pop    rbx
  41050e:	pop    rsi
  41050f:	ret    
  410510:	push   rsi
  410511:	push   rbx
  410512:	sub    rsp,0x38
  410516:	mov    rax,QWORD PTR [rip+0x2d4c3]        # 0x43d9e0
  41051d:	mov    eax,DWORD PTR [rax]
  41051f:	test   eax,eax
  410521:	je     0x410560
  410523:	mov    rsi,QWORD PTR [rip+0x35afe]        # 0x446028
  41052a:	test   rsi,rsi
  41052d:	je     0x410557
  41052f:	mov    rbx,rcx
  410532:	mov    rcx,rsi
  410535:	call   0x42de30
  41053a:	lea    rdx,[rip+0x26538]        # 0x436a79
  410541:	xor    r8d,r8d
  410544:	mov    DWORD PTR [rsp+0x20],eax
  410548:	mov    r9,rsi
  41054b:	mov    rcx,rbx
  41054e:	call   0x426e58
  410553:	test   eax,eax
  410555:	js     0x410579
  410557:	add    rsp,0x38
  41055b:	pop    rbx
  41055c:	pop    rsi
  41055d:	ret    
  41055e:	xchg   ax,ax
  410560:	lea    r8,[rip+0x26512]        # 0x436a79
  410567:	lea    rdx,[rip+0x26513]        # 0x436a81
  41056e:	add    rsp,0x38
  410572:	pop    rbx
  410573:	pop    rsi
  410574:	jmp    0x40ffc0
  410579:	mov    ecx,eax
  41057b:	call   0x40dc88
  410580:	mov    rbx,rax
  410583:	call   QWORD PTR [rip+0x38257]        # 0x4487e0
  410589:	lea    rdx,[rip+0x2641f]        # 0x4369af
  410590:	lea    rcx,[rax+0x60]
  410594:	mov    r8,rbx
  410597:	call   0x40e340
  41059c:	mov    ecx,0x1
  4105a1:	call   0x42df60
  4105a6:	nop
  4105a7:	nop    WORD PTR [rax+rax*1+0x0]
  4105b0:	push   rdi
  4105b1:	push   rsi
  4105b2:	push   rbx
  4105b3:	sub    rsp,0x30
  4105b7:	mov    rax,QWORD PTR [rip+0x2d422]        # 0x43d9e0
  4105be:	mov    eax,DWORD PTR [rax]
  4105c0:	test   eax,eax
  4105c2:	je     0x410623
  4105c4:	mov    rax,QWORD PTR [rip+0x359f5]        # 0x445fc0
  4105cb:	test   rax,rax
  4105ce:	je     0x41061b
  4105d0:	mov    rbx,QWORD PTR [rax]
  4105d3:	test   rbx,rbx
  4105d6:	je     0x41061b
  4105d8:	mov    rdi,rcx
  4105db:	xor    esi,esi
  4105dd:	nop    DWORD PTR [rax]
  4105e0:	mov    rcx,rbx
  4105e3:	call   0x42de30
  4105e8:	lea    rdx,[rip+0x264ab]        # 0x436a9a
  4105ef:	xor    r8d,r8d
  4105f2:	mov    DWORD PTR [rsp+0x20],eax
  4105f6:	mov    r9,rbx
  4105f9:	mov    rcx,rdi
  4105fc:	call   0x426e58
  410601:	test   eax,eax
  410603:	js     0x41063d
  410605:	mov    rax,QWORD PTR [rip+0x359b4]        # 0x445fc0
  41060c:	lea    edx,[rsi+0x1]
  41060f:	mov    rsi,rdx
  410612:	mov    rbx,QWORD PTR [rax+rdx*8]
  410616:	test   rbx,rbx
  410619:	jne    0x4105e0
  41061b:	add    rsp,0x30
  41061f:	pop    rbx
  410620:	pop    rsi
  410621:	pop    rdi
  410622:	ret    
  410623:	lea    r8,[rip+0x26470]        # 0x436a9a
  41062a:	lea    rdx,[rip+0x26472]        # 0x436aa3
  410631:	add    rsp,0x30
  410635:	pop    rbx
  410636:	pop    rsi
  410637:	pop    rdi
  410638:	jmp    0x40ffc0
  41063d:	mov    ecx,eax
  41063f:	call   0x40dc88
  410644:	mov    rbx,rax
  410647:	call   QWORD PTR [rip+0x38193]        # 0x4487e0
  41064d:	lea    rdx,[rip+0x2635b]        # 0x4369af
  410654:	lea    rcx,[rax+0x60]
  410658:	mov    r8,rbx
  41065b:	call   0x40e340
  410660:	mov    ecx,0x1
  410665:	call   0x42df60
  41066a:	nop
  41066b:	nop    DWORD PTR [rax+rax*1+0x0]
  410670:	push   rdi
  410671:	push   rsi
  410672:	push   rbx
  410673:	sub    rsp,0x30
  410677:	mov    rax,QWORD PTR [rip+0x2d362]        # 0x43d9e0
  41067e:	mov    eax,DWORD PTR [rax]
  410680:	test   eax,eax
  410682:	je     0x4106e3
  410684:	mov    rax,QWORD PTR [rip+0x3593d]        # 0x445fc8
  41068b:	test   rax,rax
  41068e:	je     0x4106db
  410690:	mov    rbx,QWORD PTR [rax]
  410693:	test   rbx,rbx
  410696:	je     0x4106db
  410698:	mov    rdi,rcx
  41069b:	xor    esi,esi
  41069d:	nop    DWORD PTR [rax]
  4106a0:	mov    rcx,rbx
  4106a3:	call   0x42de30
  4106a8:	lea    rdx,[rip+0x26408]        # 0x436ab7
  4106af:	xor    r8d,r8d
  4106b2:	mov    DWORD PTR [rsp+0x20],eax
  4106b6:	mov    r9,rbx
  4106b9:	mov    rcx,rdi
  4106bc:	call   0x426e58
  4106c1:	test   eax,eax
  4106c3:	js     0x4106fd
  4106c5:	mov    rax,QWORD PTR [rip+0x358fc]        # 0x445fc8
  4106cc:	lea    edx,[rsi+0x1]
  4106cf:	mov    rsi,rdx
  4106d2:	mov    rbx,QWORD PTR [rax+rdx*8]
  4106d6:	test   rbx,rbx
  4106d9:	jne    0x4106a0
  4106db:	add    rsp,0x30
  4106df:	pop    rbx
  4106e0:	pop    rsi
  4106e1:	pop    rdi
  4106e2:	ret    
  4106e3:	lea    r8,[rip+0x263cd]        # 0x436ab7
  4106ea:	lea    rdx,[rip+0x263cf]        # 0x436ac0
  4106f1:	add    rsp,0x30
  4106f5:	pop    rbx
  4106f6:	pop    rsi
  4106f7:	pop    rdi
  4106f8:	jmp    0x40ffc0
  4106fd:	mov    ecx,eax
  4106ff:	call   0x40dc88
  410704:	mov    rbx,rax
  410707:	call   QWORD PTR [rip+0x380d3]        # 0x4487e0
  41070d:	lea    rdx,[rip+0x2629b]        # 0x4369af
  410714:	lea    rcx,[rax+0x60]
  410718:	mov    r8,rbx
  41071b:	call   0x40e340
  410720:	mov    ecx,0x1
  410725:	call   0x42df60
  41072a:	nop
  41072b:	nop    DWORD PTR [rax+rax*1+0x0]
  410730:	push   rsi
  410731:	push   rbx
  410732:	sub    rsp,0x38
  410736:	mov    rax,QWORD PTR [rip+0x2d2a3]        # 0x43d9e0
  41073d:	mov    eax,DWORD PTR [rax]
  41073f:	test   eax,eax
  410741:	je     0x410780
  410743:	mov    rsi,QWORD PTR [rip+0x3588e]        # 0x445fd8
  41074a:	test   rsi,rsi
  41074d:	je     0x410777
  41074f:	mov    rbx,rcx
  410752:	mov    rcx,rsi
  410755:	call   0x42de30
  41075a:	lea    rdx,[rip+0x2637a]        # 0x436adb
  410761:	xor    r8d,r8d
  410764:	mov    DWORD PTR [rsp+0x20],eax
  410768:	mov    r9,rsi
  41076b:	mov    rcx,rbx
  41076e:	call   0x426e58
  410773:	test   eax,eax
  410775:	js     0x410799
  410777:	add    rsp,0x38
  41077b:	pop    rbx
  41077c:	pop    rsi
  41077d:	ret    
  41077e:	xchg   ax,ax
  410780:	lea    r8,[rip+0x26354]        # 0x436adb
  410787:	lea    rdx,[rip+0x26355]        # 0x436ae3
  41078e:	add    rsp,0x38
  410792:	pop    rbx
  410793:	pop    rsi
  410794:	jmp    0x40ffc0
  410799:	mov    ecx,eax
  41079b:	call   0x40dc88
  4107a0:	mov    rbx,rax
  4107a3:	call   QWORD PTR [rip+0x38037]        # 0x4487e0
  4107a9:	lea    rdx,[rip+0x261ff]        # 0x4369af
  4107b0:	lea    rcx,[rax+0x60]
  4107b4:	mov    r8,rbx
  4107b7:	call   0x40e340
  4107bc:	mov    ecx,0x1
  4107c1:	call   0x42df60
  4107c6:	nop
  4107c7:	nop    WORD PTR [rax+rax*1+0x0]
  4107d0:	push   rsi
  4107d1:	push   rbx
  4107d2:	sub    rsp,0x38
  4107d6:	mov    rax,QWORD PTR [rip+0x2d203]        # 0x43d9e0
  4107dd:	mov    eax,DWORD PTR [rax]
  4107df:	test   eax,eax
  4107e1:	je     0x410820
  4107e3:	mov    rsi,QWORD PTR [rip+0x357e6]        # 0x445fd0
  4107ea:	test   rsi,rsi
  4107ed:	je     0x410817
  4107ef:	mov    rbx,rcx
  4107f2:	mov    rcx,rsi
  4107f5:	call   0x42de30
  4107fa:	lea    rdx,[rip+0x262fb]        # 0x436afc
  410801:	xor    r8d,r8d
  410804:	mov    DWORD PTR [rsp+0x20],eax
  410808:	mov    r9,rsi
  41080b:	mov    rcx,rbx
  41080e:	call   0x426e58
  410813:	test   eax,eax
  410815:	js     0x410839
  410817:	add    rsp,0x38
  41081b:	pop    rbx
  41081c:	pop    rsi
  41081d:	ret    
  41081e:	xchg   ax,ax
  410820:	lea    r8,[rip+0x262d5]        # 0x436afc
  410827:	lea    rdx,[rip+0x262d6]        # 0x436b04
  41082e:	add    rsp,0x38
  410832:	pop    rbx
  410833:	pop    rsi
  410834:	jmp    0x40ffc0
  410839:	mov    ecx,eax
  41083b:	call   0x40dc88
  410840:	mov    rbx,rax
  410843:	call   QWORD PTR [rip+0x37f97]        # 0x4487e0
  410849:	lea    rdx,[rip+0x2615f]        # 0x4369af
  410850:	lea    rcx,[rax+0x60]
  410854:	mov    r8,rbx
  410857:	call   0x40e340
  41085c:	mov    ecx,0x1
  410861:	call   0x42df60
  410866:	nop
  410867:	nop    WORD PTR [rax+rax*1+0x0]
  410870:	push   rsi
  410871:	push   rbx
  410872:	sub    rsp,0x38
  410876:	mov    rax,QWORD PTR [rip+0x2d163]        # 0x43d9e0
  41087d:	mov    eax,DWORD PTR [rax]
  41087f:	test   eax,eax
  410881:	je     0x4108c0
  410883:	mov    rsi,QWORD PTR [rip+0x3575e]        # 0x445fe8
  41088a:	test   rsi,rsi
  41088d:	je     0x4108b7
  41088f:	mov    rbx,rcx
  410892:	mov    rcx,rsi
  410895:	call   0x42de30
  41089a:	lea    rdx,[rip+0x26273]        # 0x436b14
  4108a1:	xor    r8d,r8d
  4108a4:	mov    DWORD PTR [rsp+0x20],eax
  4108a8:	mov    r9,rsi
  4108ab:	mov    rcx,rbx
  4108ae:	call   0x426e58
  4108b3:	test   eax,eax
  4108b5:	js     0x4108d9
  4108b7:	add    rsp,0x38
  4108bb:	pop    rbx
  4108bc:	pop    rsi
  4108bd:	ret    
  4108be:	xchg   ax,ax
  4108c0:	lea    r8,[rip+0x2624d]        # 0x436b14
  4108c7:	lea    rdx,[rip+0x26261]        # 0x436b2f
  4108ce:	add    rsp,0x38
  4108d2:	pop    rbx
  4108d3:	pop    rsi
  4108d4:	jmp    0x40ffc0
  4108d9:	mov    ecx,eax
  4108db:	call   0x40dc88
  4108e0:	mov    rbx,rax
  4108e3:	call   QWORD PTR [rip+0x37ef7]        # 0x4487e0
  4108e9:	lea    rdx,[rip+0x2622c]        # 0x436b1c
  4108f0:	lea    rcx,[rax+0x60]
  4108f4:	mov    r8,rbx
  4108f7:	call   0x40e340
  4108fc:	mov    ecx,0x1
  410901:	call   0x42df60
  410906:	nop
  410907:	nop    WORD PTR [rax+rax*1+0x0]
  410910:	push   rsi
  410911:	push   rbx
  410912:	sub    rsp,0x38
  410916:	mov    rax,QWORD PTR [rip+0x2d0c3]        # 0x43d9e0
  41091d:	mov    eax,DWORD PTR [rax]
  41091f:	test   eax,eax
  410921:	je     0x41093d
  410923:	mov    rdx,QWORD PTR [rip+0x356b6]        # 0x445fe0
  41092a:	test   rdx,rdx
  41092d:	je     0x41093d
  41092f:	lea    r8,[rsp+0x28]
  410934:	call   0x426e60
  410939:	test   eax,eax
  41093b:	js     0x410944
  41093d:	add    rsp,0x38
  410941:	pop    rbx
  410942:	pop    rsi
  410943:	ret    
  410944:	mov    rsi,QWORD PTR [rsp+0x28]
  410949:	mov    ecx,eax
  41094b:	call   0x40dc88
  410950:	mov    rbx,rax
  410953:	call   QWORD PTR [rip+0x37e87]        # 0x4487e0
  410959:	lea    rdx,[rip+0x261dd]        # 0x436b3d
  410960:	lea    rcx,[rax+0x60]
  410964:	mov    r9,rsi
  410967:	mov    r8,rbx
  41096a:	call   0x40e340
  41096f:	mov    ecx,0x1
  410974:	call   0x42df60
  410979:	nop
  41097a:	nop    WORD PTR [rax+rax*1+0x0]
  410980:	push   rdi
  410981:	push   rsi
  410982:	push   rbx
  410983:	sub    rsp,0x40
  410987:	mov    rax,QWORD PTR [rip+0x2d052]        # 0x43d9e0
  41098e:	mov    eax,DWORD PTR [rax]
  410990:	test   eax,eax
  410992:	je     0x410b60
  410998:	cmp    QWORD PTR [rip+0x35780],0x0        # 0x446120
  4109a0:	je     0x410b70
  4109a6:	mov    rdi,rcx
  4109a9:	lea    rcx,[rsp+0x28]
  4109ae:	call   0x426e10
  4109b3:	test   eax,eax
  4109b5:	js     0x410bcd
  4109bb:	mov    rax,QWORD PTR [rip+0x3575e]        # 0x446120
  4109c2:	test   rax,rax
  4109c5:	je     0x410a1e
  4109c7:	mov    rcx,QWORD PTR [rax]
  4109ca:	test   rcx,rcx
  4109cd:	je     0x410a1e
  4109cf:	lea    rbx,[rsp+0x30]
  4109d4:	xor    esi,esi
  4109d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4109e0:	mov    QWORD PTR [rsp+0x30],rcx
  4109e5:	call   0x42de30
  4109ea:	mov    rcx,QWORD PTR [rsp+0x28]
  4109ef:	mov    r8,rbx
  4109f2:	mov    edx,0x1
  4109f7:	mov    DWORD PTR [rsp+0x38],eax
  4109fb:	call   0x426e20
  410a00:	test   eax,eax
  410a02:	js     0x410ba0
  410a08:	mov    rax,QWORD PTR [rip+0x35711]        # 0x446120
  410a0f:	lea    edx,[rsi+0x1]
  410a12:	mov    rsi,rdx
  410a15:	mov    rcx,QWORD PTR [rax+rdx*8]
  410a19:	test   rcx,rcx
  410a1c:	jne    0x4109e0
  410a1e:	mov    rax,QWORD PTR [rip+0x35703]        # 0x446128
  410a25:	test   rax,rax
  410a28:	je     0x410a7e
  410a2a:	mov    rcx,QWORD PTR [rax]
  410a2d:	test   rcx,rcx
  410a30:	je     0x410a7e
  410a32:	lea    rbx,[rsp+0x30]
  410a37:	xor    esi,esi
  410a39:	nop    DWORD PTR [rax+0x0]
  410a40:	mov    QWORD PTR [rsp+0x30],rcx
  410a45:	call   0x42de30
  410a4a:	mov    rcx,QWORD PTR [rsp+0x28]
  410a4f:	mov    r8,rbx
  410a52:	mov    edx,0x1
  410a57:	mov    DWORD PTR [rsp+0x38],eax
  410a5b:	call   0x426e28
  410a60:	test   eax,eax
  410a62:	js     0x410ba0
  410a68:	mov    rax,QWORD PTR [rip+0x356b9]        # 0x446128
  410a6f:	lea    edx,[rsi+0x1]
  410a72:	mov    rsi,rdx
  410a75:	mov    rcx,QWORD PTR [rax+rdx*8]
  410a79:	test   rcx,rcx
  410a7c:	jne    0x410a40
  410a7e:	mov    rax,QWORD PTR [rip+0x356ab]        # 0x446130
  410a85:	test   rax,rax
  410a88:	je     0x410ade
  410a8a:	mov    rcx,QWORD PTR [rax]
  410a8d:	test   rcx,rcx
  410a90:	je     0x410ade
  410a92:	lea    rbx,[rsp+0x30]
  410a97:	xor    esi,esi
  410a99:	nop    DWORD PTR [rax+0x0]
  410aa0:	mov    QWORD PTR [rsp+0x30],rcx
  410aa5:	call   0x42de30
  410aaa:	mov    rcx,QWORD PTR [rsp+0x28]
  410aaf:	mov    r8,rbx
  410ab2:	mov    edx,0x2
  410ab7:	mov    DWORD PTR [rsp+0x38],eax
  410abb:	call   0x426e20
  410ac0:	test   eax,eax
  410ac2:	js     0x410ba0
  410ac8:	mov    rax,QWORD PTR [rip+0x35661]        # 0x446130
  410acf:	lea    edx,[rsi+0x1]
  410ad2:	mov    rsi,rdx
  410ad5:	mov    rcx,QWORD PTR [rax+rdx*8]
  410ad9:	test   rcx,rcx
  410adc:	jne    0x410aa0
  410ade:	mov    rax,QWORD PTR [rip+0x35653]        # 0x446138
  410ae5:	test   rax,rax
  410ae8:	je     0x410b3a
  410aea:	mov    rcx,QWORD PTR [rax]
  410aed:	test   rcx,rcx
  410af0:	je     0x410b3a
  410af2:	lea    rbx,[rsp+0x30]
  410af7:	xor    esi,esi
  410af9:	nop    DWORD PTR [rax+0x0]
  410b00:	mov    QWORD PTR [rsp+0x30],rcx
  410b05:	call   0x42de30
  410b0a:	mov    rcx,QWORD PTR [rsp+0x28]
  410b0f:	mov    r8,rbx
  410b12:	mov    edx,0x2
  410b17:	mov    DWORD PTR [rsp+0x38],eax
  410b1b:	call   0x426e28
  410b20:	test   eax,eax
  410b22:	js     0x410ba0
  410b24:	mov    rax,QWORD PTR [rip+0x3560d]        # 0x446138
  410b2b:	lea    edx,[rsi+0x1]
  410b2e:	mov    rsi,rdx
  410b31:	mov    rcx,QWORD PTR [rax+rdx*8]
  410b35:	test   rcx,rcx
  410b38:	jne    0x410b00
  410b3a:	mov    rdx,QWORD PTR [rsp+0x28]
  410b3f:	mov    r8d,0x1
  410b45:	mov    rcx,rdi
  410b48:	call   0x426e48
  410b4d:	test   eax,eax
  410b4f:	js     0x410bfa
  410b55:	mov    rcx,QWORD PTR [rsp+0x28]
  410b5a:	call   0x426e18
  410b5f:	nop
  410b60:	add    rsp,0x40
  410b64:	pop    rbx
  410b65:	pop    rsi
  410b66:	pop    rdi
  410b67:	ret    
  410b68:	nop    DWORD PTR [rax+rax*1+0x0]
  410b70:	cmp    QWORD PTR [rip+0x355b8],0x0        # 0x446130
  410b78:	jne    0x4109a6
  410b7e:	cmp    QWORD PTR [rip+0x355a2],0x0        # 0x446128
  410b86:	jne    0x4109a6
  410b8c:	cmp    QWORD PTR [rip+0x355a4],0x0        # 0x446138
  410b94:	jne    0x4109a6
  410b9a:	jmp    0x410b60
  410b9c:	nop    DWORD PTR [rax+0x0]
  410ba0:	mov    ecx,eax
  410ba2:	call   0x40dc88
  410ba7:	mov    rbx,rax
  410baa:	call   QWORD PTR [rip+0x37c30]        # 0x4487e0
  410bb0:	lea    rdx,[rip+0x25fa6]        # 0x436b5d
  410bb7:	lea    rcx,[rax+0x60]
  410bbb:	mov    r8,rbx
  410bbe:	call   0x40e340
  410bc3:	mov    ecx,0x1
  410bc8:	call   0x42df60
  410bcd:	mov    ecx,eax
  410bcf:	call   0x40dc88
  410bd4:	mov    rbx,rax
  410bd7:	call   QWORD PTR [rip+0x37c03]        # 0x4487e0
  410bdd:	lea    rdx,[rip+0x25f6c]        # 0x436b50
  410be4:	lea    rcx,[rax+0x60]
  410be8:	mov    r8,rbx
  410beb:	call   0x40e340
  410bf0:	mov    ecx,0x1
  410bf5:	call   0x42df60
  410bfa:	mov    ecx,eax
  410bfc:	call   0x40dc88
  410c01:	mov    rbx,rax
  410c04:	call   QWORD PTR [rip+0x37bd6]        # 0x4487e0
  410c0a:	lea    rdx,[rip+0x25f6f]        # 0x436b80
  410c11:	lea    rcx,[rax+0x60]
  410c15:	mov    r8,rbx
  410c18:	call   0x40e340
  410c1d:	mov    ecx,0x1
  410c22:	call   0x42df60
  410c27:	nop
  410c28:	nop    DWORD PTR [rax+rax*1+0x0]
  410c30:	push   rbx
  410c31:	sub    rsp,0x20
  410c35:	mov    rax,QWORD PTR [rip+0x2cda4]        # 0x43d9e0
  410c3c:	mov    eax,DWORD PTR [rax]
  410c3e:	test   eax,eax
  410c40:	je     0x410c80
  410c42:	mov    rdx,QWORD PTR [rip+0x353af]        # 0x445ff8
  410c49:	mov    rbx,rcx
  410c4c:	test   rdx,rdx
  410c4f:	je     0x410c61
  410c51:	mov    r8d,DWORD PTR [rip+0x353a8]        # 0x446000
  410c58:	call   0x426e30
  410c5d:	test   eax,eax
  410c5f:	js     0x410cb3
  410c61:	mov    rdx,QWORD PTR [rip+0x353a0]        # 0x446008
  410c68:	test   rdx,rdx
  410c6b:	je     0x410c80
  410c6d:	mov    r8d,DWORD PTR [rip+0x3539c]        # 0x446010
  410c74:	mov    rcx,rbx
  410c77:	call   0x426e50
  410c7c:	test   eax,eax
  410c7e:	js     0x410c86
  410c80:	add    rsp,0x20
  410c84:	pop    rbx
  410c85:	ret    
  410c86:	mov    ecx,eax
  410c88:	call   0x40dc88
  410c8d:	mov    rbx,rax
  410c90:	call   QWORD PTR [rip+0x37b4a]        # 0x4487e0
  410c96:	lea    rdx,[rip+0x25f2b]        # 0x436bc8
  410c9d:	lea    rcx,[rax+0x60]
  410ca1:	mov    r8,rbx
  410ca4:	call   0x40e340
  410ca9:	mov    ecx,0x1
  410cae:	call   0x42df60
  410cb3:	mov    ecx,eax
  410cb5:	call   0x40dc88
  410cba:	mov    rbx,rax
  410cbd:	call   QWORD PTR [rip+0x37b1d]        # 0x4487e0
  410cc3:	lea    rdx,[rip+0x25ed6]        # 0x436ba0
  410cca:	lea    rcx,[rax+0x60]
  410cce:	mov    r8,rbx
  410cd1:	call   0x40e340
  410cd6:	mov    ecx,0x1
  410cdb:	call   0x42df60
  410ce0:	nop
  410ce1:	nop    DWORD PTR [rax+rax*1+0x0]
  410ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410cf0:	push   rsi
  410cf1:	push   rbx
  410cf2:	sub    rsp,0x38
  410cf6:	mov    rax,QWORD PTR [rip+0x2cce3]        # 0x43d9e0
  410cfd:	mov    eax,DWORD PTR [rax]
  410cff:	test   eax,eax
  410d01:	je     0x410d40
  410d03:	mov    rsi,QWORD PTR [rip+0x352e6]        # 0x445ff0
  410d0a:	test   rsi,rsi
  410d0d:	je     0x410d37
  410d0f:	mov    rbx,rcx
  410d12:	mov    rcx,rsi
  410d15:	call   0x42de30
  410d1a:	lea    rdx,[rip+0x25ecb]        # 0x436bec
  410d21:	xor    r8d,r8d
  410d24:	mov    DWORD PTR [rsp+0x20],eax
  410d28:	mov    r9,rsi
  410d2b:	mov    rcx,rbx
  410d2e:	call   0x426e58
  410d33:	test   eax,eax
  410d35:	js     0x410d59
  410d37:	add    rsp,0x38
  410d3b:	pop    rbx
  410d3c:	pop    rsi
  410d3d:	ret    
  410d3e:	xchg   ax,ax
  410d40:	lea    r8,[rip+0x25ea5]        # 0x436bec
  410d47:	lea    rdx,[rip+0x25eb8]        # 0x436c06
  410d4e:	add    rsp,0x38
  410d52:	pop    rbx
  410d53:	pop    rsi
  410d54:	jmp    0x40ffc0
  410d59:	mov    ecx,eax
  410d5b:	call   0x40dc88
  410d60:	mov    rbx,rax
  410d63:	call   QWORD PTR [rip+0x37a77]        # 0x4487e0
  410d69:	lea    rdx,[rip+0x25c3f]        # 0x4369af
  410d70:	lea    rcx,[rax+0x60]
  410d74:	mov    r8,rbx
  410d77:	call   0x40e340
  410d7c:	mov    ecx,0x1
  410d81:	call   0x42df60
  410d86:	nop
  410d87:	nop    WORD PTR [rax+rax*1+0x0]
  410d90:	push   rbp
  410d91:	push   rdi
  410d92:	push   rsi
  410d93:	push   rbx
  410d94:	sub    rsp,0x38
  410d98:	mov    rax,QWORD PTR [rip+0x2cc41]        # 0x43d9e0
  410d9f:	mov    eax,DWORD PTR [rax]
  410da1:	test   eax,eax
  410da3:	je     0x410e0f
  410da5:	mov    rax,QWORD PTR [rip+0x3536c]        # 0x446118
  410dac:	test   rax,rax
  410daf:	je     0x410e0f
  410db1:	mov    rdi,QWORD PTR [rax]
  410db4:	test   rdi,rdi
  410db7:	je     0x410e0f
  410db9:	mov    rbx,QWORD PTR [rax+0x8]
  410dbd:	mov    rbp,rcx
  410dc0:	test   rbx,rbx
  410dc3:	je     0x410e18
  410dc5:	mov    esi,0x18
  410dca:	jmp    0x410ddd
  410dcc:	nop    DWORD PTR [rax+0x0]
  410dd0:	mov    rbx,QWORD PTR [rax+rsi*1]
  410dd4:	add    rsi,0x10
  410dd8:	test   rbx,rbx
  410ddb:	je     0x410e18
  410ddd:	mov    rcx,rbx
  410de0:	call   0x42de30
  410de5:	xor    r8d,r8d
  410de8:	mov    DWORD PTR [rsp+0x20],eax
  410dec:	mov    r9,rbx
  410def:	mov    rdx,rdi
  410df2:	mov    rcx,rbp
  410df5:	call   0x426e58
  410dfa:	test   eax,eax
  410dfc:	js     0x410e3b
  410dfe:	mov    rax,QWORD PTR [rip+0x35313]        # 0x446118
  410e05:	mov    rdi,QWORD PTR [rax+rsi*1-0x8]
  410e0a:	test   rdi,rdi
  410e0d:	jne    0x410dd0
  410e0f:	add    rsp,0x38
  410e13:	pop    rbx
  410e14:	pop    rsi
  410e15:	pop    rdi
  410e16:	pop    rbp
  410e17:	ret    
  410e18:	call   QWORD PTR [rip+0x379c2]        # 0x4487e0
  410e1e:	lea    rdx,[rip+0x25deb]        # 0x436c10
  410e25:	lea    rcx,[rax+0x60]
  410e29:	mov    r8,rdi
  410e2c:	call   0x40e340
  410e31:	mov    ecx,0x1
  410e36:	call   0x42df60
  410e3b:	mov    ecx,eax
  410e3d:	call   0x40dc88
  410e42:	mov    rbx,rax
  410e45:	call   QWORD PTR [rip+0x37995]        # 0x4487e0
  410e4b:	lea    rdx,[rip+0x25de5]        # 0x436c37
  410e52:	lea    rcx,[rax+0x60]
  410e56:	mov    r8,rbx
  410e59:	call   0x40e340
  410e5e:	mov    ecx,0x1
  410e63:	call   0x42df60
  410e68:	nop
  410e69:	nop    DWORD PTR [rax+0x0]
  410e70:	push   rdi
  410e71:	push   rsi
  410e72:	push   rbx
  410e73:	sub    rsp,0x20
  410e77:	mov    rax,QWORD PTR [rip+0x2cb62]        # 0x43d9e0
  410e7e:	mov    rdi,rdx
  410e81:	mov    eax,DWORD PTR [rax]
  410e83:	test   eax,eax
  410e85:	je     0x410ed0
  410e87:	mov    rax,QWORD PTR [rip+0x3533a]        # 0x4461c8
  410e8e:	test   rax,rax
  410e91:	je     0x410ed0
  410e93:	mov    rdx,QWORD PTR [rax]
  410e96:	test   rdx,rdx
  410e99:	je     0x410ed0
  410e9b:	mov    esi,ecx
  410e9d:	xor    ebx,ebx
  410e9f:	jmp    0x410ebe
  410ea1:	call   0x40dbb8
  410ea6:	test   eax,eax
  410ea8:	js     0x410ed8
  410eaa:	mov    rax,QWORD PTR [rip+0x35317]        # 0x4461c8
  410eb1:	add    rbx,0x8
  410eb5:	mov    rdx,QWORD PTR [rax+rbx*1]
  410eb9:	test   rdx,rdx
  410ebc:	je     0x410ed0
  410ebe:	xor    r8d,r8d
  410ec1:	cmp    esi,0x1
  410ec4:	mov    rcx,rdi
  410ec7:	jne    0x410ea1
  410ec9:	call   0x40dae8
  410ece:	jmp    0x410ea6
  410ed0:	add    rsp,0x20
  410ed4:	pop    rbx
  410ed5:	pop    rsi
  410ed6:	pop    rdi
  410ed7:	ret    
  410ed8:	mov    ecx,eax
  410eda:	call   0x40dc88
  410edf:	mov    rsi,rax
  410ee2:	mov    rax,QWORD PTR [rip+0x352df]        # 0x4461c8
  410ee9:	mov    rbx,QWORD PTR [rax+rbx*1]
  410eed:	call   QWORD PTR [rip+0x378ed]        # 0x4487e0
  410ef3:	lea    rdx,[rip+0x25d4d]        # 0x436c47
  410efa:	lea    rcx,[rax+0x60]
  410efe:	mov    r9,rsi
  410f01:	mov    r8,rbx
  410f04:	call   0x40e340
  410f09:	mov    ecx,0x1
  410f0e:	call   0x42df60
  410f13:	nop
  410f14:	xchg   ax,ax
  410f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410f20:	push   rdi
  410f21:	push   rsi
  410f22:	push   rbx
  410f23:	sub    rsp,0x30
  410f27:	mov    rax,QWORD PTR [rip+0x2cab2]        # 0x43d9e0
  410f2e:	mov    eax,DWORD PTR [rax]
  410f30:	test   eax,eax
  410f32:	je     0x410f8d
  410f34:	mov    rax,QWORD PTR [rip+0x352b5]        # 0x4461f0
  410f3b:	test   rax,rax
  410f3e:	je     0x410f8d
  410f40:	mov    rdx,QWORD PTR [rax]
  410f43:	test   rdx,rdx
  410f46:	je     0x410f8d
  410f48:	lea    rdi,[rsp+0x20]
  410f4d:	mov    rsi,rcx
  410f50:	xor    ebx,ebx
  410f52:	mov    QWORD PTR [rsp+0x20],rdx
  410f57:	mov    rcx,QWORD PTR [rax]
  410f5a:	call   0x42de30
  410f5f:	mov    r8,rdi
  410f62:	mov    edx,0x2716
  410f67:	mov    rcx,rsi
  410f6a:	mov    DWORD PTR [rsp+0x28],eax
  410f6e:	call   0x426e70
  410f73:	test   eax,eax
  410f75:	js     0x410f95
  410f77:	add    rbx,0x8
  410f7b:	mov    rax,rbx
  410f7e:	add    rax,QWORD PTR [rip+0x3526b]        # 0x4461f0
  410f85:	mov    rdx,QWORD PTR [rax]
  410f88:	test   rdx,rdx
  410f8b:	jne    0x410f52
  410f8d:	add    rsp,0x30
  410f91:	pop    rbx
  410f92:	pop    rsi
  410f93:	pop    rdi
  410f94:	ret    
  410f95:	mov    ecx,eax
  410f97:	call   0x40dc88
  410f9c:	mov    rsi,rax
  410f9f:	mov    rax,QWORD PTR [rip+0x3524a]        # 0x4461f0
  410fa6:	mov    rbx,QWORD PTR [rax+rbx*1]
  410faa:	call   QWORD PTR [rip+0x37830]        # 0x4487e0
  410fb0:	lea    rdx,[rip+0x25cae]        # 0x436c65
  410fb7:	lea    rcx,[rax+0x60]
  410fbb:	mov    r9,rsi
  410fbe:	mov    r8,rbx
  410fc1:	call   0x40e340
  410fc6:	mov    ecx,0x1
  410fcb:	call   0x42df60
  410fd0:	nop
  410fd1:	nop    DWORD PTR [rax+rax*1+0x0]
  410fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410fe0:	push   rdi
  410fe1:	push   rsi
  410fe2:	push   rbx
  410fe3:	sub    rsp,0x30
  410fe7:	mov    rax,QWORD PTR [rip+0x2c9f2]        # 0x43d9e0
  410fee:	mov    eax,DWORD PTR [rax]
  410ff0:	test   eax,eax
  410ff2:	je     0x41104d
  410ff4:	mov    rax,QWORD PTR [rip+0x351fd]        # 0x4461f8
  410ffb:	test   rax,rax
  410ffe:	je     0x41104d
  411000:	mov    rdx,QWORD PTR [rax]
  411003:	test   rdx,rdx
  411006:	je     0x41104d
  411008:	lea    rdi,[rsp+0x20]
  41100d:	mov    rsi,rcx
  411010:	xor    ebx,ebx
  411012:	mov    QWORD PTR [rsp+0x20],rdx
  411017:	mov    rcx,QWORD PTR [rax]
  41101a:	call   0x42de30
  41101f:	mov    r8,rdi
  411022:	mov    edx,0x277a
  411027:	mov    rcx,rsi
  41102a:	mov    DWORD PTR [rsp+0x28],eax
  41102e:	call   0x426e70
  411033:	test   eax,eax
  411035:	js     0x411055
  411037:	add    rbx,0x8
  41103b:	mov    rax,rbx
  41103e:	add    rax,QWORD PTR [rip+0x351b3]        # 0x4461f8
  411045:	mov    rdx,QWORD PTR [rax]
  411048:	test   rdx,rdx
  41104b:	jne    0x411012
  41104d:	add    rsp,0x30
  411051:	pop    rbx
  411052:	pop    rsi
  411053:	pop    rdi
  411054:	ret    
  411055:	mov    ecx,eax
  411057:	call   0x40dc88
  41105c:	mov    rsi,rax
  41105f:	mov    rax,QWORD PTR [rip+0x35192]        # 0x4461f8
  411066:	mov    rbx,QWORD PTR [rax+rbx*1]
  41106a:	call   QWORD PTR [rip+0x37770]        # 0x4487e0
  411070:	lea    rdx,[rip+0x25c05]        # 0x436c7c
  411077:	lea    rcx,[rax+0x60]
  41107b:	mov    r9,rsi
  41107e:	mov    r8,rbx
  411081:	call   0x40e340
  411086:	mov    ecx,0x1
  41108b:	call   0x42df60
  411090:	nop
  411091:	nop    DWORD PTR [rax+rax*1+0x0]
  411096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4110a0:	push   rsi
  4110a1:	push   rbx
  4110a2:	sub    rsp,0x38
  4110a6:	mov    rax,QWORD PTR [rip+0x2c933]        # 0x43d9e0
  4110ad:	mov    eax,DWORD PTR [rax]
  4110af:	test   eax,eax
  4110b1:	je     0x4110f0
  4110b3:	mov    rsi,QWORD PTR [rip+0x34f66]        # 0x446020
  4110ba:	test   rsi,rsi
  4110bd:	je     0x4110e7
  4110bf:	mov    rbx,rcx
  4110c2:	mov    rcx,rsi
  4110c5:	call   0x42de30
  4110ca:	lea    rdx,[rip+0x25bc8]        # 0x436c99
  4110d1:	xor    r8d,r8d
  4110d4:	mov    DWORD PTR [rsp+0x20],eax
  4110d8:	mov    r9,rsi
  4110db:	mov    rcx,rbx
  4110de:	call   0x426e58
  4110e3:	test   eax,eax
  4110e5:	js     0x411109
  4110e7:	add    rsp,0x38
  4110eb:	pop    rbx
  4110ec:	pop    rsi
  4110ed:	ret    
  4110ee:	xchg   ax,ax
  4110f0:	lea    r8,[rip+0x25ba2]        # 0x436c99
  4110f7:	lea    rdx,[rip+0x25bb0]        # 0x436cae
  4110fe:	add    rsp,0x38
  411102:	pop    rbx
  411103:	pop    rsi
  411104:	jmp    0x40ffc0
  411109:	mov    ecx,eax
  41110b:	call   0x40dc88
  411110:	mov    rbx,rax
  411113:	call   QWORD PTR [rip+0x376c7]        # 0x4487e0
  411119:	lea    rdx,[rip+0x2588f]        # 0x4369af
  411120:	lea    rcx,[rax+0x60]
  411124:	mov    r8,rbx
  411127:	call   0x40e340
  41112c:	mov    ecx,0x1
  411131:	call   0x42df60
  411136:	nop
  411137:	nop    WORD PTR [rax+rax*1+0x0]
  411140:	mov    r8,QWORD PTR [rip+0x35039]        # 0x446180
  411147:	lea    r9,[rip+0x25b6a]        # 0x436cb8
  41114e:	jmp    0x40e500
  411153:	nop    DWORD PTR [rax]
  411156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411160:	mov    rax,QWORD PTR [rip+0x2c879]        # 0x43d9e0
  411167:	mov    eax,DWORD PTR [rax]
  411169:	test   eax,eax
  41116b:	je     0x411180
  41116d:	mov    rcx,QWORD PTR [rip+0x34fec]        # 0x446160
  411174:	test   rcx,rcx
  411177:	je     0x411180
  411179:	jmp    0x40e670
  41117e:	xchg   ax,ax
  411180:	mov    rax,QWORD PTR [rip+0x37739]        # 0x4488c0
  411187:	xor    ecx,ecx
  411189:	rex.W jmp rax
  41118c:	nop    DWORD PTR [rax+0x0]
  411190:	mov    rax,QWORD PTR [rip+0x2c849]        # 0x43d9e0
  411197:	mov    eax,DWORD PTR [rax]
  411199:	test   eax,eax
  41119b:	je     0x4111b0
  41119d:	mov    rcx,QWORD PTR [rip+0x34fc4]        # 0x446168
  4111a4:	test   rcx,rcx
  4111a7:	je     0x4111b0
  4111a9:	jmp    0x40e670
  4111ae:	xchg   ax,ax
  4111b0:	mov    rax,QWORD PTR [rip+0x37709]        # 0x4488c0
  4111b7:	xor    ecx,ecx
  4111b9:	rex.W jmp rax
  4111bc:	nop    DWORD PTR [rax+0x0]
  4111c0:	mov    rax,QWORD PTR [rip+0x2c819]        # 0x43d9e0
  4111c7:	mov    eax,DWORD PTR [rax]
  4111c9:	test   eax,eax
  4111cb:	je     0x4111e0
  4111cd:	mov    rcx,QWORD PTR [rip+0x34f9c]        # 0x446170
  4111d4:	test   rcx,rcx
  4111d7:	je     0x4111e0
  4111d9:	jmp    0x40e670
  4111de:	xchg   ax,ax
  4111e0:	mov    rax,QWORD PTR [rip+0x376d9]        # 0x4488c0
  4111e7:	xor    ecx,ecx
  4111e9:	rex.W jmp rax
  4111ec:	nop    DWORD PTR [rax+0x0]
  4111f0:	mov    edx,DWORD PTR [rip+0x34f92]        # 0x446188
  4111f6:	mov    rcx,QWORD PTR [rip+0x34f5b]        # 0x446158
  4111fd:	jmp    0x40e770
  411202:	nop    DWORD PTR [rax+0x0]
  411206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411210:	mov    rax,QWORD PTR [rip+0x2c7c9]        # 0x43d9e0
  411217:	mov    eax,DWORD PTR [rax]
  411219:	test   eax,eax
  41121b:	je     0x411224
  41121d:	mov    eax,DWORD PTR [rip+0x34f69]        # 0x44618c
  411223:	ret    
  411224:	lea    rcx,[rip+0x25ac5]        # 0x436cf0
  41122b:	xor    edx,edx
  41122d:	jmp    0x410270
  411232:	nop    DWORD PTR [rax+0x0]
  411236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411240:	mov    rax,QWORD PTR [rip+0x2c799]        # 0x43d9e0
  411247:	mov    eax,DWORD PTR [rax]
  411249:	test   eax,eax
  41124b:	je     0x411254
  41124d:	mov    eax,DWORD PTR [rip+0x34f8d]        # 0x4461e0
  411253:	ret    
  411254:	lea    rcx,[rip+0x25acd]        # 0x436d28
  41125b:	xor    edx,edx
  41125d:	jmp    0x410270
  411262:	nop    DWORD PTR [rax+0x0]
  411266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411270:	mov    r8,QWORD PTR [rip+0x34f61]        # 0x4461d8
  411277:	lea    r9,[rip+0x25ae9]        # 0x436d67
  41127e:	jmp    0x40e500
  411283:	nop    DWORD PTR [rax]
  411286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411290:	sub    rsp,0x28
  411294:	mov    rax,QWORD PTR [rip+0x2c745]        # 0x43d9e0
  41129b:	mov    eax,DWORD PTR [rax]
  41129d:	test   eax,eax
  41129f:	je     0x4112b0
  4112a1:	mov    eax,DWORD PTR [rip+0x34ee9]        # 0x446190
  4112a7:	add    rsp,0x28
  4112ab:	ret    
  4112ac:	nop    DWORD PTR [rax+0x0]
  4112b0:	lea    rcx,[rip+0x25ac1]        # 0x436d78
  4112b7:	mov    edx,0xffffffff
  4112bc:	call   0x40e3f0
  4112c1:	add    rsp,0x28
  4112c5:	ret    
  4112c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4112d0:	sub    rsp,0x28
  4112d4:	mov    rax,QWORD PTR [rip+0x2c705]        # 0x43d9e0
  4112db:	mov    eax,DWORD PTR [rax]
  4112dd:	test   eax,eax
  4112df:	je     0x411300
  4112e1:	mov    rax,QWORD PTR [rip+0x34e68]        # 0x446150
  4112e8:	lea    rdx,[rip+0x25ac2]        # 0x436db1
  4112ef:	test   rax,rax
  4112f2:	cmove  rax,rdx
  4112f6:	add    rsp,0x28
  4112fa:	ret    
  4112fb:	nop    DWORD PTR [rax+rax*1+0x0]
  411300:	lea    rcx,[rip+0x25ab4]        # 0x436dbb
  411307:	call   0x410190
  41130c:	test   rax,rax
  41130f:	je     0x411300
  411311:	jmp    0x4112f6
  411313:	nop    DWORD PTR [rax]
  411316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411320:	mov    rax,QWORD PTR [rip+0x2c6b9]        # 0x43d9e0
  411327:	mov    eax,DWORD PTR [rax]
  411329:	test   eax,eax
  41132b:	je     0x411334
  41132d:	mov    eax,DWORD PTR [rip+0x34e61]        # 0x446194
  411333:	ret    
  411334:	lea    rcx,[rip+0x25a9d]        # 0x436dd8
  41133b:	xor    edx,edx
  41133d:	jmp    0x410270
  411342:	nop    DWORD PTR [rax+0x0]
  411346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411350:	mov    rax,QWORD PTR [rip+0x2c689]        # 0x43d9e0
  411357:	mov    eax,DWORD PTR [rax]
  411359:	test   eax,eax
  41135b:	je     0x411364
  41135d:	mov    eax,DWORD PTR [rip+0x34e35]        # 0x446198
  411363:	ret    
  411364:	lea    rcx,[rip+0x25a9d]        # 0x436e08
  41136b:	xor    edx,edx
  41136d:	jmp    0x410270
  411372:	nop    DWORD PTR [rax+0x0]
  411376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411380:	push   rbp
  411381:	push   rdi
  411382:	push   rsi
  411383:	push   rbx
  411384:	sub    rsp,0x48
  411388:	mov    rax,QWORD PTR [rip+0x2c651]        # 0x43d9e0
  41138f:	mov    ebp,ecx
  411391:	mov    rdi,rdx
  411394:	mov    eax,DWORD PTR [rax]
  411396:	test   eax,eax
  411398:	je     0x411445
  41139e:	mov    rax,QWORD PTR [rip+0x34d63]        # 0x446108
  4113a5:	test   rax,rax
  4113a8:	je     0x411491
  4113ae:	mov    rdx,QWORD PTR [rax]
  4113b1:	test   rdx,rdx
  4113b4:	je     0x411491
  4113ba:	xor    ebx,ebx
  4113bc:	lea    rsi,[rsp+0x30]
  4113c1:	jmp    0x4113e4
  4113c3:	call   0x426e78
  4113c8:	test   eax,eax
  4113ca:	js     0x411418
  4113cc:	mov    rax,QWORD PTR [rip+0x34d35]        # 0x446108
  4113d3:	add    rbx,0x8
  4113d7:	mov    rdx,QWORD PTR [rax+rbx*1]
  4113db:	test   rdx,rdx
  4113de:	je     0x411491
  4113e4:	mov    rcx,rsi
  4113e7:	call   0x40e6c0
  4113ec:	test   eax,eax
  4113ee:	mov    r9d,eax
  4113f1:	jle    0x4114a1
  4113f7:	cmp    ebp,0x1
  4113fa:	mov    DWORD PTR [rsp+0x20],0x1
  411402:	mov    r8,rsi
  411405:	mov    edx,0x4
  41140a:	mov    rcx,rdi
  41140d:	jne    0x4113c3
  41140f:	call   0x426e38
  411414:	test   eax,eax
  411416:	jns    0x4113cc
  411418:	mov    ecx,eax
  41141a:	call   0x40dc88
  41141f:	mov    rbx,rax
  411422:	call   QWORD PTR [rip+0x373b8]        # 0x4487e0
  411428:	lea    rdx,[rip+0x25a62]        # 0x436e91
  41142f:	lea    rcx,[rax+0x60]
  411433:	mov    r8,rbx
  411436:	call   0x40e340
  41143b:	mov    ecx,0x1
  411440:	call   0x42df60
  411445:	lea    rcx,[rip+0x25a0c]        # 0x436e58
  41144c:	call   0x410190
  411451:	test   rax,rax
  411454:	mov    rbx,rax
  411457:	je     0x411491
  411459:	lea    rsi,[rsp+0x30]
  41145e:	mov    rdx,rax
  411461:	mov    rcx,rsi
  411464:	call   0x40e6c0
  411469:	test   eax,eax
  41146b:	mov    r9d,eax
  41146e:	jle    0x4114ac
  411470:	cmp    ebp,0x1
  411473:	mov    DWORD PTR [rsp+0x20],0x1
  41147b:	mov    r8,rsi
  41147e:	mov    edx,0x4
  411483:	mov    rcx,rdi
  411486:	je     0x41149a
  411488:	call   0x426e78
  41148d:	test   eax,eax
  41148f:	js     0x411418
  411491:	add    rsp,0x48
  411495:	pop    rbx
  411496:	pop    rsi
  411497:	pop    rdi
  411498:	pop    rbp
  411499:	ret    
  41149a:	call   0x426e38
  41149f:	jmp    0x41148d
  4114a1:	mov    rax,QWORD PTR [rip+0x34c60]        # 0x446108
  4114a8:	mov    rbx,QWORD PTR [rax+rbx*1]
  4114ac:	call   QWORD PTR [rip+0x3732e]        # 0x4487e0
  4114b2:	lea    rdx,[rip+0x2597d]        # 0x436e36
  4114b9:	lea    rcx,[rax+0x60]
  4114bd:	mov    r8,rbx
  4114c0:	call   0x40e340
  4114c5:	mov    ecx,0x1
  4114ca:	call   0x42df60
  4114cf:	nop
  4114d0:	push   rbp
  4114d1:	push   rdi
  4114d2:	push   rsi
  4114d3:	push   rbx
  4114d4:	sub    rsp,0x38
  4114d8:	mov    rax,QWORD PTR [rip+0x2c501]        # 0x43d9e0
  4114df:	mov    edi,ecx
  4114e1:	mov    rbp,rdx
  4114e4:	mov    eax,DWORD PTR [rax]
  4114e6:	test   eax,eax
  4114e8:	je     0x4115b0
  4114ee:	mov    rax,QWORD PTR [rip+0x34c1b]        # 0x446110
  4114f5:	test   rax,rax
  4114f8:	je     0x4115f0
  4114fe:	mov    rbx,QWORD PTR [rax]
  411501:	test   rbx,rbx
  411504:	je     0x4115f0
  41150a:	mov    esi,0x8
  41150f:	jmp    0x41154d
  411511:	call   0x42de30
  411516:	mov    DWORD PTR [rsp+0x20],0x1
  41151e:	mov    r9d,eax
  411521:	mov    r8,rbx
  411524:	mov    edx,0x2
  411529:	mov    rcx,rbp
  41152c:	call   0x426e78
  411531:	test   eax,eax
  411533:	js     0x411579
  411535:	mov    rax,QWORD PTR [rip+0x34bd4]        # 0x446110
  41153c:	mov    rbx,QWORD PTR [rax+rsi*1]
  411540:	add    rsi,0x8
  411544:	test   rbx,rbx
  411547:	je     0x4115f0
  41154d:	cmp    edi,0x1
  411550:	mov    rcx,rbx
  411553:	jne    0x411511
  411555:	call   0x42de30
  41155a:	mov    DWORD PTR [rsp+0x20],0x1
  411562:	mov    r9d,eax
  411565:	mov    r8,rbx
  411568:	mov    edx,0x2
  41156d:	mov    rcx,rbp
  411570:	call   0x426e38
  411575:	test   eax,eax
  411577:	jns    0x411535
  411579:	mov    ecx,eax
  41157b:	call   0x40dc88
  411580:	mov    rbx,rax
  411583:	call   QWORD PTR [rip+0x37257]        # 0x4487e0
  411589:	lea    rdx,[rip+0x25901]        # 0x436e91
  411590:	lea    rcx,[rax+0x60]
  411594:	mov    r8,rbx
  411597:	call   0x40e340
  41159c:	mov    ecx,0x1
  4115a1:	call   0x42df60
  4115a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4115b0:	lea    rcx,[rip+0x258f9]        # 0x436eb0
  4115b7:	call   0x410190
  4115bc:	test   rax,rax
  4115bf:	mov    rbx,rax
  4115c2:	je     0x4115f0
  4115c4:	cmp    edi,0x1
  4115c7:	mov    rcx,rax
  4115ca:	je     0x411600
  4115cc:	call   0x42de30
  4115d1:	mov    DWORD PTR [rsp+0x20],0x1
  4115d9:	mov    r9d,eax
  4115dc:	mov    r8,rbx
  4115df:	mov    edx,0x2
  4115e4:	mov    rcx,rbp
  4115e7:	call   0x426e78
  4115ec:	test   eax,eax
  4115ee:	js     0x411579
  4115f0:	add    rsp,0x38
  4115f4:	pop    rbx
  4115f5:	pop    rsi
  4115f6:	pop    rdi
  4115f7:	pop    rbp
  4115f8:	ret    
  4115f9:	nop    DWORD PTR [rax+0x0]
  411600:	call   0x42de30
  411605:	mov    DWORD PTR [rsp+0x20],0x1
  41160d:	mov    r9d,eax
  411610:	mov    r8,rbx
  411613:	mov    edx,0x2
  411618:	mov    rcx,rbp
  41161b:	call   0x426e38
  411620:	jmp    0x4115ec
  411622:	nop    DWORD PTR [rax+0x0]
  411626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411630:	push   rbp
  411631:	push   rdi
  411632:	push   rsi
  411633:	push   rbx
  411634:	sub    rsp,0x38
  411638:	mov    rax,QWORD PTR [rip+0x2c3a1]        # 0x43d9e0
  41163f:	mov    edi,ecx
  411641:	mov    rbp,rdx
  411644:	mov    eax,DWORD PTR [rax]
  411646:	test   eax,eax
  411648:	je     0x411720
  41164e:	mov    rax,QWORD PTR [rip+0x34a9b]        # 0x4460f0
  411655:	test   rax,rax
  411658:	je     0x411760
  41165e:	mov    rbx,QWORD PTR [rax]
  411661:	test   rbx,rbx
  411664:	je     0x411760
  41166a:	mov    esi,0x8
  41166f:	jmp    0x4116ab
  411671:	call   0x42de30
  411676:	lea    rdx,[rip+0x25868]        # 0x436ee5
  41167d:	xor    r8d,r8d
  411680:	mov    DWORD PTR [rsp+0x20],eax
  411684:	mov    r9,rbx
  411687:	mov    rcx,rbp
  41168a:	call   0x426e80
  41168f:	test   eax,eax
  411691:	js     0x4116d5
  411693:	mov    rax,QWORD PTR [rip+0x34a56]        # 0x4460f0
  41169a:	mov    rbx,QWORD PTR [rax+rsi*1]
  41169e:	add    rsi,0x8
  4116a2:	test   rbx,rbx
  4116a5:	je     0x411760
  4116ab:	cmp    edi,0x1
  4116ae:	mov    rcx,rbx
  4116b1:	jne    0x411671
  4116b3:	call   0x42de30
  4116b8:	lea    rdx,[rip+0x25826]        # 0x436ee5
  4116bf:	xor    r8d,r8d
  4116c2:	mov    DWORD PTR [rsp+0x20],eax
  4116c6:	mov    r9,rbx
  4116c9:	mov    rcx,rbp
  4116cc:	call   0x426e58
  4116d1:	test   eax,eax
  4116d3:	jns    0x411693
  4116d5:	mov    ecx,eax
  4116d7:	call   0x40dc88
  4116dc:	mov    rbx,rax
  4116df:	call   QWORD PTR [rip+0x370fb]        # 0x4487e0
  4116e5:	lea    rdx,[rip+0x25430]        # 0x436b1c
  4116ec:	lea    rcx,[rax+0x60]
  4116f0:	mov    r8,rbx
  4116f3:	call   0x40e340
  4116f8:	mov    ecx,0x1
  4116fd:	call   0x42df60
  411702:	call   0x42de30
  411707:	lea    rdx,[rip+0x257d7]        # 0x436ee5
  41170e:	mov    DWORD PTR [rsp+0x20],eax
  411712:	mov    r9,rbx
  411715:	xor    r8d,r8d
  411718:	mov    rcx,rbp
  41171b:	call   0x426e58
  411720:	lea    rcx,[rip+0x257d9]        # 0x436f00
  411727:	call   0x410190
  41172c:	test   rax,rax
  41172f:	mov    rbx,rax
  411732:	je     0x411760
  411734:	cmp    edi,0x1
  411737:	mov    rcx,rax
  41173a:	je     0x411702
  41173c:	call   0x42de30
  411741:	lea    rdx,[rip+0x2579d]        # 0x436ee5
  411748:	mov    DWORD PTR [rsp+0x20],eax
  41174c:	mov    r9,rbx
  41174f:	xor    r8d,r8d
  411752:	mov    rcx,rbp
  411755:	call   0x426e80
  41175a:	jmp    0x411720
  41175c:	nop    DWORD PTR [rax+0x0]
  411760:	add    rsp,0x38
  411764:	pop    rbx
  411765:	pop    rsi
  411766:	pop    rdi
  411767:	pop    rbp
  411768:	ret    
  411769:	nop    DWORD PTR [rax+0x0]
  411770:	push   rbp
  411771:	push   rdi
  411772:	push   rsi
  411773:	push   rbx
  411774:	sub    rsp,0x38
  411778:	mov    rax,QWORD PTR [rip+0x2c261]        # 0x43d9e0
  41177f:	mov    edi,ecx
  411781:	mov    rbp,rdx
  411784:	mov    eax,DWORD PTR [rax]
  411786:	test   eax,eax
  411788:	je     0x411870
  41178e:	mov    rax,QWORD PTR [rip+0x34963]        # 0x4460f8
  411795:	test   rax,rax
  411798:	je     0x4118b0
  41179e:	mov    rbx,QWORD PTR [rax]
  4117a1:	test   rbx,rbx
  4117a4:	je     0x4118b0
  4117aa:	mov    esi,0x8
  4117af:	jmp    0x4117ed
  4117b1:	call   0x42de30
  4117b6:	mov    DWORD PTR [rsp+0x20],0x1
  4117be:	mov    r9d,eax
  4117c1:	mov    r8,rbx
  4117c4:	mov    edx,0x1
  4117c9:	mov    rcx,rbp
  4117cc:	call   0x426e78
  4117d1:	test   eax,eax
  4117d3:	js     0x411819
  4117d5:	mov    rax,QWORD PTR [rip+0x3491c]        # 0x4460f8
  4117dc:	mov    rbx,QWORD PTR [rax+rsi*1]
  4117e0:	add    rsi,0x8
  4117e4:	test   rbx,rbx
  4117e7:	je     0x4118b0
  4117ed:	cmp    edi,0x1
  4117f0:	mov    rcx,rbx
  4117f3:	jne    0x4117b1
  4117f5:	call   0x42de30
  4117fa:	mov    DWORD PTR [rsp+0x20],0x1
  411802:	mov    r9d,eax
  411805:	mov    r8,rbx
  411808:	mov    edx,0x1
  41180d:	mov    rcx,rbp
  411810:	call   0x426e38
  411815:	test   eax,eax
  411817:	jns    0x4117d5
  411819:	mov    ecx,eax
  41181b:	call   0x40dc88
  411820:	mov    rbx,rax
  411823:	call   QWORD PTR [rip+0x36fb7]        # 0x4487e0
  411829:	lea    rdx,[rip+0x25661]        # 0x436e91
  411830:	lea    rcx,[rax+0x60]
  411834:	mov    r8,rbx
  411837:	call   0x40e340
  41183c:	mov    ecx,0x1
  411841:	call   0x42df60
  411846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411850:	call   0x42de30
  411855:	mov    DWORD PTR [rsp+0x20],0x1
  41185d:	mov    r9d,eax
  411860:	mov    r8,rbx
  411863:	mov    edx,0x1
  411868:	mov    rcx,rbp
  41186b:	call   0x426e38
  411870:	lea    rcx,[rip+0x256b9]        # 0x436f30
  411877:	call   0x410190
  41187c:	test   rax,rax
  41187f:	mov    rbx,rax
  411882:	je     0x4118b0
  411884:	cmp    edi,0x1
  411887:	mov    rcx,rax
  41188a:	je     0x411850
  41188c:	call   0x42de30
  411891:	mov    DWORD PTR [rsp+0x20],0x1
  411899:	mov    r9d,eax
  41189c:	mov    r8,rbx
  41189f:	mov    edx,0x1
  4118a4:	mov    rcx,rbp
  4118a7:	call   0x426e78
  4118ac:	jmp    0x411870
  4118ae:	xchg   ax,ax
  4118b0:	add    rsp,0x38
  4118b4:	pop    rbx
  4118b5:	pop    rsi
  4118b6:	pop    rdi
  4118b7:	pop    rbp
  4118b8:	ret    
  4118b9:	nop    DWORD PTR [rax+0x0]
  4118c0:	push   r14
  4118c2:	push   r13
  4118c4:	push   r12
  4118c6:	push   rbp
  4118c7:	push   rdi
  4118c8:	push   rsi
  4118c9:	push   rbx
  4118ca:	sub    rsp,0xf0
  4118d1:	mov    rax,QWORD PTR [rip+0x2c108]        # 0x43d9e0
  4118d8:	mov    eax,DWORD PTR [rax]
  4118da:	test   eax,eax
  4118dc:	je     0x4119e0
  4118e2:	mov    rdx,QWORD PTR [rip+0x34747]        # 0x446030
  4118e9:	test   rdx,rdx
  4118ec:	je     0x4119e0
  4118f2:	mov    r13,rcx
  4118f5:	lea    rsi,[rip+0x346c4]        # 0x445fc0
  4118fc:	lea    rbp,[rsp+0x20]
  411901:	xor    r14d,r14d
  411904:	mov    r12d,0x1a
  41190a:	jmp    0x411921
  41190c:	nop    DWORD PTR [rax+0x0]
  411910:	add    rsi,0x8
  411914:	mov    rdx,QWORD PTR [rsi+0x70]
  411918:	test   rdx,rdx
  41191b:	je     0x4119e0
  411921:	mov    rdi,rbp
  411924:	mov    rcx,r12
  411927:	mov    rax,r14
  41192a:	rep stos QWORD PTR es:[rdi],rax
  41192d:	mov    rcx,QWORD PTR [rsi+0xb0]
  411934:	mov    QWORD PTR [rsp+0x20],rdx
  411939:	test   rcx,rcx
  41193c:	je     0x41195c
  41193e:	mov    DWORD PTR [rsp+0x30],0x2
  411946:	mov    QWORD PTR [rsp+0x38],rcx
  41194b:	call   0x42de30
  411950:	mov    DWORD PTR [rsp+0x28],0x1
  411958:	mov    DWORD PTR [rsp+0x40],eax
  41195c:	mov    rcx,QWORD PTR [rsi+0xf0]
  411963:	test   rcx,rcx
  411966:	je     0x411994
  411968:	mov    eax,DWORD PTR [rsp+0x28]
  41196c:	lea    rbx,[rax+rax*2]
  411970:	mov    rdi,rax
  411973:	add    edi,0x1
  411976:	shl    rbx,0x3
  41197a:	mov    DWORD PTR [rsp+rbx*1+0x30],0x1
  411982:	mov    QWORD PTR [rsp+rbx*1+0x38],rcx
  411987:	call   0x42de30
  41198c:	mov    DWORD PTR [rsp+0x28],edi
  411990:	mov    DWORD PTR [rsp+rbx*1+0x40],eax
  411994:	xor    r8d,r8d
  411997:	mov    rdx,rbp
  41199a:	mov    rcx,r13
  41199d:	call   0x426e40
  4119a2:	test   eax,eax
  4119a4:	jns    0x411910
  4119aa:	mov    ecx,eax
  4119ac:	call   0x40dc88
  4119b1:	mov    rbx,rax
  4119b4:	call   QWORD PTR [rip+0x36e26]        # 0x4487e0
  4119ba:	lea    rdx,[rip+0x255a3]        # 0x436f64
  4119c1:	lea    rcx,[rax+0x60]
  4119c5:	mov    r8,rbx
  4119c8:	call   0x40e340
  4119cd:	mov    ecx,0x1
  4119d2:	call   0x42df60
  4119d7:	nop
  4119d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4119e0:	add    rsp,0xf0
  4119e7:	pop    rbx
  4119e8:	pop    rsi
  4119e9:	pop    rdi
  4119ea:	pop    rbp
  4119eb:	pop    r12
  4119ed:	pop    r13
  4119ef:	pop    r14
  4119f1:	ret    
  4119f2:	nop    DWORD PTR [rax+0x0]
  4119f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411a00:	push   rbp
  411a01:	push   rdi
  411a02:	push   rsi
  411a03:	push   rbx
  411a04:	sub    rsp,0x38
  411a08:	mov    rax,QWORD PTR [rip+0x2bfd1]        # 0x43d9e0
  411a0f:	mov    edi,ecx
  411a11:	mov    rbp,rdx
  411a14:	mov    eax,DWORD PTR [rax]
  411a16:	test   eax,eax
  411a18:	je     0x411b00
  411a1e:	mov    rax,QWORD PTR [rip+0x346db]        # 0x446100
  411a25:	test   rax,rax
  411a28:	je     0x411b40
  411a2e:	mov    rbx,QWORD PTR [rax]
  411a31:	test   rbx,rbx
  411a34:	je     0x411b40
  411a3a:	mov    esi,0x8
  411a3f:	jmp    0x411a7d
  411a41:	call   0x42de30
  411a46:	mov    DWORD PTR [rsp+0x20],0x1
  411a4e:	mov    r9d,eax
  411a51:	mov    r8,rbx
  411a54:	mov    edx,0x3
  411a59:	mov    rcx,rbp
  411a5c:	call   0x426e78
  411a61:	test   eax,eax
  411a63:	js     0x411aa9
  411a65:	mov    rax,QWORD PTR [rip+0x34694]        # 0x446100
  411a6c:	mov    rbx,QWORD PTR [rax+rsi*1]
  411a70:	add    rsi,0x8
  411a74:	test   rbx,rbx
  411a77:	je     0x411b40
  411a7d:	cmp    edi,0x1
  411a80:	mov    rcx,rbx
  411a83:	jne    0x411a41
  411a85:	call   0x42de30
  411a8a:	mov    DWORD PTR [rsp+0x20],0x1
  411a92:	mov    r9d,eax
  411a95:	mov    r8,rbx
  411a98:	mov    edx,0x3
  411a9d:	mov    rcx,rbp
  411aa0:	call   0x426e38
  411aa5:	test   eax,eax
  411aa7:	jns    0x411a65
  411aa9:	mov    ecx,eax
  411aab:	call   0x40dc88
  411ab0:	mov    rbx,rax
  411ab3:	call   QWORD PTR [rip+0x36d27]        # 0x4487e0
  411ab9:	lea    rdx,[rip+0x253d1]        # 0x436e91
  411ac0:	lea    rcx,[rax+0x60]
  411ac4:	mov    r8,rbx
  411ac7:	call   0x40e340
  411acc:	mov    ecx,0x1
  411ad1:	call   0x42df60
  411ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411ae0:	call   0x42de30
  411ae5:	mov    DWORD PTR [rsp+0x20],0x1
  411aed:	mov    r9d,eax
  411af0:	mov    r8,rbx
  411af3:	mov    edx,0x3
  411af8:	mov    rcx,rbp
  411afb:	call   0x426e38
  411b00:	lea    rcx,[rip+0x25471]        # 0x436f78
  411b07:	call   0x410190
  411b0c:	test   rax,rax
  411b0f:	mov    rbx,rax
  411b12:	je     0x411b40
  411b14:	cmp    edi,0x1
  411b17:	mov    rcx,rax
  411b1a:	je     0x411ae0
  411b1c:	call   0x42de30
  411b21:	mov    DWORD PTR [rsp+0x20],0x1
  411b29:	mov    r9d,eax
  411b2c:	mov    r8,rbx
  411b2f:	mov    edx,0x3
  411b34:	mov    rcx,rbp
  411b37:	call   0x426e78
  411b3c:	jmp    0x411b00
  411b3e:	xchg   ax,ax
  411b40:	add    rsp,0x38
  411b44:	pop    rbx
  411b45:	pop    rsi
  411b46:	pop    rdi
  411b47:	pop    rbp
  411b48:	ret    
  411b49:	nop    DWORD PTR [rax+0x0]
  411b50:	mov    rax,QWORD PTR [rip+0x2be89]        # 0x43d9e0
  411b57:	mov    eax,DWORD PTR [rax]
  411b59:	test   eax,eax
  411b5b:	jne    0x411b80
  411b5d:	test   ecx,ecx
  411b5f:	lea    rax,[rip+0x25442]        # 0x436fa8
  411b66:	lea    rcx,[rip+0x25483]        # 0x436ff0
  411b6d:	mov    edx,0x1
  411b72:	cmovne rcx,rax
  411b76:	jmp    0x410270
  411b7b:	nop    DWORD PTR [rax+rax*1+0x0]
  411b80:	mov    eax,DWORD PTR [rip+0x34616]        # 0x44619c
  411b86:	ret    
  411b87:	nop    WORD PTR [rax+rax*1+0x0]
  411b90:	mov    rax,QWORD PTR [rip+0x2be49]        # 0x43d9e0
  411b97:	mov    eax,DWORD PTR [rax]
  411b99:	test   eax,eax
  411b9b:	jne    0x411bc0
  411b9d:	test   ecx,ecx
  411b9f:	lea    rax,[rip+0x25492]        # 0x437038
  411ba6:	lea    rcx,[rip+0x254d3]        # 0x437080
  411bad:	mov    edx,0x1
  411bb2:	cmovne rcx,rax
  411bb6:	jmp    0x410270
  411bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  411bc0:	mov    eax,DWORD PTR [rip+0x345da]        # 0x4461a0
  411bc6:	ret    
  411bc7:	nop    WORD PTR [rax+rax*1+0x0]
  411bd0:	mov    rax,QWORD PTR [rip+0x2be09]        # 0x43d9e0
  411bd7:	mov    eax,DWORD PTR [rax]
  411bd9:	test   eax,eax
  411bdb:	je     0x411be4
  411bdd:	mov    eax,DWORD PTR [rip+0x345c1]        # 0x4461a4
  411be3:	ret    
  411be4:	lea    rcx,[rip+0x254e5]        # 0x4370d0
  411beb:	xor    edx,edx
  411bed:	jmp    0x410270
  411bf2:	nop    DWORD PTR [rax+0x0]
  411bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411c00:	mov    rax,QWORD PTR [rip+0x2bdd9]        # 0x43d9e0
  411c07:	mov    eax,DWORD PTR [rax]
  411c09:	test   eax,eax
  411c0b:	je     0x411c14
  411c0d:	mov    eax,DWORD PTR [rip+0x34595]        # 0x4461a8
  411c13:	ret    
  411c14:	lea    rcx,[rip+0x254fd]        # 0x437118
  411c1b:	xor    edx,edx
  411c1d:	jmp    0x410270
  411c22:	nop    DWORD PTR [rax+0x0]
  411c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411c30:	mov    rax,QWORD PTR [rip+0x2bda9]        # 0x43d9e0
  411c37:	mov    eax,DWORD PTR [rax]
  411c39:	test   eax,eax
  411c3b:	je     0x411c43
  411c3d:	mov    eax,DWORD PTR [rip+0x34571]        # 0x4461b4
  411c43:	repz ret 
  411c45:	nop
  411c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411c50:	mov    rax,QWORD PTR [rip+0x2bd89]        # 0x43d9e0
  411c57:	mov    eax,DWORD PTR [rax]
  411c59:	test   eax,eax
  411c5b:	je     0x411c63
  411c5d:	mov    eax,DWORD PTR [rip+0x34549]        # 0x4461ac
  411c63:	repz ret 
  411c65:	nop
  411c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411c70:	mov    rax,QWORD PTR [rip+0x2bd69]        # 0x43d9e0
  411c77:	mov    eax,DWORD PTR [rax]
  411c79:	test   eax,eax
  411c7b:	je     0x411c83
  411c7d:	mov    eax,DWORD PTR [rip+0x3452d]        # 0x4461b0
  411c83:	repz ret 
  411c85:	nop
  411c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411c90:	mov    rax,QWORD PTR [rip+0x2bd49]        # 0x43d9e0
  411c97:	mov    eax,DWORD PTR [rax]
  411c99:	test   eax,eax
  411c9b:	je     0x411ca4
  411c9d:	mov    eax,DWORD PTR [rip+0x34515]        # 0x4461b8
  411ca3:	ret    
  411ca4:	lea    rcx,[rip+0x254a5]        # 0x437150
  411cab:	xor    edx,edx
  411cad:	jmp    0x410270
  411cb2:	nop    DWORD PTR [rax+0x0]
  411cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411cc0:	mov    rax,QWORD PTR [rip+0x2bd19]        # 0x43d9e0
  411cc7:	mov    eax,DWORD PTR [rax]
  411cc9:	test   eax,eax
  411ccb:	je     0x411cd4
  411ccd:	mov    eax,DWORD PTR [rip+0x344e9]        # 0x4461bc
  411cd3:	ret    
  411cd4:	lea    rcx,[rip+0x254ad]        # 0x437188
  411cdb:	xor    edx,edx
  411cdd:	jmp    0x410270
  411ce2:	nop    DWORD PTR [rax+0x0]
  411ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411cf0:	mov    rax,QWORD PTR [rip+0x2bce9]        # 0x43d9e0
  411cf7:	mov    eax,DWORD PTR [rax]
  411cf9:	test   eax,eax
  411cfb:	je     0x411d04
  411cfd:	mov    eax,DWORD PTR [rip+0x344bd]        # 0x4461c0
  411d03:	ret    
  411d04:	lea    rcx,[rip+0x254bd]        # 0x4371c8
  411d0b:	xor    edx,edx
  411d0d:	jmp    0x410270
  411d12:	nop    DWORD PTR [rax+0x0]
  411d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411d20:	mov    rax,QWORD PTR [rip+0x2bcb9]        # 0x43d9e0
  411d27:	mov    eax,DWORD PTR [rax]
  411d29:	test   eax,eax
  411d2b:	je     0x411d34
  411d2d:	mov    eax,DWORD PTR [rip+0x34491]        # 0x4461c4
  411d33:	ret    
  411d34:	lea    rcx,[rip+0x254c5]        # 0x437200
  411d3b:	xor    edx,edx
  411d3d:	jmp    0x410270
  411d42:	nop    DWORD PTR [rax+0x0]
  411d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411d50:	mov    edx,DWORD PTR [rip+0x3447a]        # 0x4461d0
  411d56:	mov    rcx,QWORD PTR [rip+0x3441b]        # 0x446178
  411d5d:	jmp    0x40e770
  411d62:	nop    DWORD PTR [rax+0x0]
  411d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411d70:	push   rdi
  411d71:	push   rsi
  411d72:	push   rbx
  411d73:	sub    rsp,0x20
  411d77:	mov    rax,QWORD PTR [rip+0x2bc62]        # 0x43d9e0
  411d7e:	mov    rsi,rcx
  411d81:	mov    rdi,rdx
  411d84:	mov    eax,DWORD PTR [rax]
  411d86:	test   eax,eax
  411d88:	je     0x411dd5
  411d8a:	mov    rbx,QWORD PTR [rip+0x34457]        # 0x4461e8
  411d91:	test   rbx,rbx
  411d94:	je     0x411e11
  411d96:	mov    QWORD PTR [rsi],0x0
  411d9d:	mov    QWORD PTR [rdi],0x0
  411da4:	lea    rdi,[rip+0x25494]        # 0x43723f
  411dab:	mov    ecx,0x13
  411db0:	mov    rsi,rbx
  411db3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411db5:	je     0x411dca
  411db7:	lea    rdi,[rip+0x254c7]        # 0x437285
  411dbe:	mov    ecx,0x13
  411dc3:	mov    rsi,rbx
  411dc6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411dc8:	jne    0x411df0
  411dca:	mov    rax,rbx
  411dcd:	add    rsp,0x20
  411dd1:	pop    rbx
  411dd2:	pop    rsi
  411dd3:	pop    rdi
  411dd4:	ret    
  411dd5:	lea    rcx,[rip+0x2547c]        # 0x437258
  411ddc:	call   0x410190
  411de1:	test   rax,rax
  411de4:	mov    rbx,rax
  411de7:	je     0x411dd5
  411de9:	jmp    0x411d96
  411deb:	nop    DWORD PTR [rax+rax*1+0x0]
  411df0:	call   QWORD PTR [rip+0x369ea]        # 0x4487e0
  411df6:	lea    rdx,[rip+0x2549b]        # 0x437298
  411dfd:	lea    rcx,[rax+0x60]
  411e01:	call   0x40e340
  411e06:	mov    rax,rbx
  411e09:	add    rsp,0x20
  411e0d:	pop    rbx
  411e0e:	pop    rsi
  411e0f:	pop    rdi
  411e10:	ret    
  411e11:	mov    QWORD PTR [rcx],0x0
  411e18:	lea    rbx,[rip+0x25420]        # 0x43723f
  411e1f:	mov    QWORD PTR [rdx],0x0
  411e26:	jmp    0x411dca
  411e28:	nop    DWORD PTR [rax+rax*1+0x0]
  411e30:	push   rsi
  411e31:	push   rbx
  411e32:	sub    rsp,0x38
  411e36:	mov    rax,QWORD PTR [rip+0x2bba3]        # 0x43d9e0
  411e3d:	mov    eax,DWORD PTR [rax]
  411e3f:	test   eax,eax
  411e41:	je     0x411e80
  411e43:	mov    rsi,QWORD PTR [rip+0x341de]        # 0x446028
  411e4a:	test   rsi,rsi
  411e4d:	je     0x411e77
  411e4f:	mov    rbx,rcx
  411e52:	mov    rcx,rsi
  411e55:	call   0x42de30
  411e5a:	lea    rdx,[rip+0x24c18]        # 0x436a79
  411e61:	xor    r8d,r8d
  411e64:	mov    DWORD PTR [rsp+0x20],eax
  411e68:	mov    r9,rsi
  411e6b:	mov    rcx,rbx
  411e6e:	call   0x426e80
  411e73:	test   eax,eax
  411e75:	js     0x411e99
  411e77:	add    rsp,0x38
  411e7b:	pop    rbx
  411e7c:	pop    rsi
  411e7d:	ret    
  411e7e:	xchg   ax,ax
  411e80:	lea    r8,[rip+0x24bf2]        # 0x436a79
  411e87:	lea    rdx,[rip+0x24bf3]        # 0x436a81
  411e8e:	add    rsp,0x38
  411e92:	pop    rbx
  411e93:	pop    rsi
  411e94:	jmp    0x4100a0
  411e99:	mov    ecx,eax
  411e9b:	call   0x40dc88
  411ea0:	mov    rbx,rax
  411ea3:	call   QWORD PTR [rip+0x36937]        # 0x4487e0
  411ea9:	lea    rdx,[rip+0x24aff]        # 0x4369af
  411eb0:	lea    rcx,[rax+0x60]
  411eb4:	mov    r8,rbx
  411eb7:	call   0x40e340
  411ebc:	mov    ecx,0x1
  411ec1:	call   0x42df60
  411ec6:	nop
  411ec7:	nop    WORD PTR [rax+rax*1+0x0]
  411ed0:	push   rdi
  411ed1:	push   rsi
  411ed2:	push   rbx
  411ed3:	sub    rsp,0x30
  411ed7:	mov    rax,QWORD PTR [rip+0x2bb02]        # 0x43d9e0
  411ede:	mov    eax,DWORD PTR [rax]
  411ee0:	test   eax,eax
  411ee2:	je     0x411f43
  411ee4:	mov    rax,QWORD PTR [rip+0x340d5]        # 0x445fc0
  411eeb:	test   rax,rax
  411eee:	je     0x411f3b
  411ef0:	mov    rbx,QWORD PTR [rax]
  411ef3:	test   rbx,rbx
  411ef6:	je     0x411f3b
  411ef8:	mov    rdi,rcx
  411efb:	xor    esi,esi
  411efd:	nop    DWORD PTR [rax]
  411f00:	mov    rcx,rbx
  411f03:	call   0x42de30
  411f08:	lea    rdx,[rip+0x24b8b]        # 0x436a9a
  411f0f:	xor    r8d,r8d
  411f12:	mov    DWORD PTR [rsp+0x20],eax
  411f16:	mov    r9,rbx
  411f19:	mov    rcx,rdi
  411f1c:	call   0x426e80
  411f21:	test   eax,eax
  411f23:	js     0x411f5d
  411f25:	mov    rax,QWORD PTR [rip+0x34094]        # 0x445fc0
  411f2c:	lea    edx,[rsi+0x1]
  411f2f:	mov    rsi,rdx
  411f32:	mov    rbx,QWORD PTR [rax+rdx*8]
  411f36:	test   rbx,rbx
  411f39:	jne    0x411f00
  411f3b:	add    rsp,0x30
  411f3f:	pop    rbx
  411f40:	pop    rsi
  411f41:	pop    rdi
  411f42:	ret    
  411f43:	lea    r8,[rip+0x24b50]        # 0x436a9a
  411f4a:	lea    rdx,[rip+0x24b52]        # 0x436aa3
  411f51:	add    rsp,0x30
  411f55:	pop    rbx
  411f56:	pop    rsi
  411f57:	pop    rdi
  411f58:	jmp    0x4100a0
  411f5d:	mov    ecx,eax
  411f5f:	call   0x40dc88
  411f64:	mov    rbx,rax
  411f67:	call   QWORD PTR [rip+0x36873]        # 0x4487e0
  411f6d:	lea    rdx,[rip+0x24a3b]        # 0x4369af
  411f74:	lea    rcx,[rax+0x60]
  411f78:	mov    r8,rbx
  411f7b:	call   0x40e340
  411f80:	mov    ecx,0x1
  411f85:	call   0x42df60
  411f8a:	nop
  411f8b:	nop    DWORD PTR [rax+rax*1+0x0]
  411f90:	push   rdi
  411f91:	push   rsi
  411f92:	push   rbx
  411f93:	sub    rsp,0x30
  411f97:	mov    rax,QWORD PTR [rip+0x2ba42]        # 0x43d9e0
  411f9e:	mov    eax,DWORD PTR [rax]
  411fa0:	test   eax,eax
  411fa2:	je     0x412003
  411fa4:	mov    rax,QWORD PTR [rip+0x3401d]        # 0x445fc8
  411fab:	test   rax,rax
  411fae:	je     0x411ffb
  411fb0:	mov    rbx,QWORD PTR [rax]
  411fb3:	test   rbx,rbx
  411fb6:	je     0x411ffb
  411fb8:	mov    rdi,rcx
  411fbb:	xor    esi,esi
  411fbd:	nop    DWORD PTR [rax]
  411fc0:	mov    rcx,rbx
  411fc3:	call   0x42de30
  411fc8:	lea    rdx,[rip+0x24ae8]        # 0x436ab7
  411fcf:	xor    r8d,r8d
  411fd2:	mov    DWORD PTR [rsp+0x20],eax
  411fd6:	mov    r9,rbx
  411fd9:	mov    rcx,rdi
  411fdc:	call   0x426e80
  411fe1:	test   eax,eax
  411fe3:	js     0x41201d
  411fe5:	mov    rax,QWORD PTR [rip+0x33fdc]        # 0x445fc8
  411fec:	lea    edx,[rsi+0x1]
  411fef:	mov    rsi,rdx
  411ff2:	mov    rbx,QWORD PTR [rax+rdx*8]
  411ff6:	test   rbx,rbx
  411ff9:	jne    0x411fc0
  411ffb:	add    rsp,0x30
  411fff:	pop    rbx
  412000:	pop    rsi
  412001:	pop    rdi
  412002:	ret    
  412003:	lea    r8,[rip+0x24aad]        # 0x436ab7
  41200a:	lea    rdx,[rip+0x24aaf]        # 0x436ac0
  412011:	add    rsp,0x30
  412015:	pop    rbx
  412016:	pop    rsi
  412017:	pop    rdi
  412018:	jmp    0x4100a0
  41201d:	mov    ecx,eax
  41201f:	call   0x40dc88
  412024:	mov    rbx,rax
  412027:	call   QWORD PTR [rip+0x367b3]        # 0x4487e0
  41202d:	lea    rdx,[rip+0x2497b]        # 0x4369af
  412034:	lea    rcx,[rax+0x60]
  412038:	mov    r8,rbx
  41203b:	call   0x40e340
  412040:	mov    ecx,0x1
  412045:	call   0x42df60
  41204a:	nop
  41204b:	nop    DWORD PTR [rax+rax*1+0x0]
  412050:	push   rsi
  412051:	push   rbx
  412052:	sub    rsp,0x38
  412056:	mov    rax,QWORD PTR [rip+0x2b983]        # 0x43d9e0
  41205d:	mov    eax,DWORD PTR [rax]
  41205f:	test   eax,eax
  412061:	je     0x4120a0
  412063:	mov    rsi,QWORD PTR [rip+0x33f6e]        # 0x445fd8
  41206a:	test   rsi,rsi
  41206d:	je     0x412097
  41206f:	mov    rbx,rcx
  412072:	mov    rcx,rsi
  412075:	call   0x42de30
  41207a:	lea    rdx,[rip+0x24a5a]        # 0x436adb
  412081:	xor    r8d,r8d
  412084:	mov    DWORD PTR [rsp+0x20],eax
  412088:	mov    r9,rsi
  41208b:	mov    rcx,rbx
  41208e:	call   0x426e80
  412093:	test   eax,eax
  412095:	js     0x4120b9
  412097:	add    rsp,0x38
  41209b:	pop    rbx
  41209c:	pop    rsi
  41209d:	ret    
  41209e:	xchg   ax,ax
  4120a0:	lea    r8,[rip+0x24a34]        # 0x436adb
  4120a7:	lea    rdx,[rip+0x24a35]        # 0x436ae3
  4120ae:	add    rsp,0x38
  4120b2:	pop    rbx
  4120b3:	pop    rsi
  4120b4:	jmp    0x4100a0
  4120b9:	mov    ecx,eax
  4120bb:	call   0x40dc88
  4120c0:	mov    rbx,rax
  4120c3:	call   QWORD PTR [rip+0x36717]        # 0x4487e0
  4120c9:	lea    rdx,[rip+0x248df]        # 0x4369af
  4120d0:	lea    rcx,[rax+0x60]
  4120d4:	mov    r8,rbx
  4120d7:	call   0x40e340
  4120dc:	mov    ecx,0x1
  4120e1:	call   0x42df60
  4120e6:	nop
  4120e7:	nop    WORD PTR [rax+rax*1+0x0]
  4120f0:	push   rsi
  4120f1:	push   rbx
  4120f2:	sub    rsp,0x38
  4120f6:	mov    rax,QWORD PTR [rip+0x2b8e3]        # 0x43d9e0
  4120fd:	mov    eax,DWORD PTR [rax]
  4120ff:	test   eax,eax
  412101:	je     0x412140
  412103:	mov    rsi,QWORD PTR [rip+0x33ec6]        # 0x445fd0
  41210a:	test   rsi,rsi
  41210d:	je     0x412137
  41210f:	mov    rbx,rcx
  412112:	mov    rcx,rsi
  412115:	call   0x42de30
  41211a:	lea    rdx,[rip+0x249db]        # 0x436afc
  412121:	xor    r8d,r8d
  412124:	mov    DWORD PTR [rsp+0x20],eax
  412128:	mov    r9,rsi
  41212b:	mov    rcx,rbx
  41212e:	call   0x426e80
  412133:	test   eax,eax
  412135:	js     0x412159
  412137:	add    rsp,0x38
  41213b:	pop    rbx
  41213c:	pop    rsi
  41213d:	ret    
  41213e:	xchg   ax,ax
  412140:	lea    r8,[rip+0x249b5]        # 0x436afc
  412147:	lea    rdx,[rip+0x249b6]        # 0x436b04
  41214e:	add    rsp,0x38
  412152:	pop    rbx
  412153:	pop    rsi
  412154:	jmp    0x4100a0
  412159:	mov    ecx,eax
  41215b:	call   0x40dc88
  412160:	mov    rbx,rax
  412163:	call   QWORD PTR [rip+0x36677]        # 0x4487e0
  412169:	lea    rdx,[rip+0x2483f]        # 0x4369af
  412170:	lea    rcx,[rax+0x60]
  412174:	mov    r8,rbx
  412177:	call   0x40e340
  41217c:	mov    ecx,0x1
  412181:	call   0x42df60
  412186:	nop
  412187:	nop    WORD PTR [rax+rax*1+0x0]
  412190:	push   rsi
  412191:	push   rbx
  412192:	sub    rsp,0x38
  412196:	mov    rax,QWORD PTR [rip+0x2b843]        # 0x43d9e0
  41219d:	mov    eax,DWORD PTR [rax]
  41219f:	test   eax,eax
  4121a1:	je     0x4121bd
  4121a3:	mov    rdx,QWORD PTR [rip+0x33e36]        # 0x445fe0
  4121aa:	test   rdx,rdx
  4121ad:	je     0x4121bd
  4121af:	lea    r8,[rsp+0x28]
  4121b4:	call   0x426e88
  4121b9:	test   eax,eax
  4121bb:	js     0x4121c4
  4121bd:	add    rsp,0x38
  4121c1:	pop    rbx
  4121c2:	pop    rsi
  4121c3:	ret    
  4121c4:	mov    rsi,QWORD PTR [rsp+0x28]
  4121c9:	mov    ecx,eax
  4121cb:	call   0x40dc88
  4121d0:	mov    rbx,rax
  4121d3:	call   QWORD PTR [rip+0x36607]        # 0x4487e0
  4121d9:	lea    rdx,[rip+0x2495d]        # 0x436b3d
  4121e0:	lea    rcx,[rax+0x60]
  4121e4:	mov    r9,rsi
  4121e7:	mov    r8,rbx
  4121ea:	call   0x40e340
  4121ef:	mov    ecx,0x1
  4121f4:	call   0x42df60
  4121f9:	nop
  4121fa:	nop    WORD PTR [rax+rax*1+0x0]
  412200:	push   rsi
  412201:	push   rbx
  412202:	sub    rsp,0x38
  412206:	mov    rax,QWORD PTR [rip+0x2b7d3]        # 0x43d9e0
  41220d:	mov    eax,DWORD PTR [rax]
  41220f:	test   eax,eax
  412211:	je     0x412250
  412213:	mov    rsi,QWORD PTR [rip+0x33dce]        # 0x445fe8
  41221a:	test   rsi,rsi
  41221d:	je     0x412247
  41221f:	mov    rbx,rcx
  412222:	mov    rcx,rsi
  412225:	call   0x42de30
  41222a:	lea    rdx,[rip+0x248e3]        # 0x436b14
  412231:	xor    r8d,r8d
  412234:	mov    DWORD PTR [rsp+0x20],eax
  412238:	mov    r9,rsi
  41223b:	mov    rcx,rbx
  41223e:	call   0x426e80
  412243:	test   eax,eax
  412245:	js     0x412269
  412247:	add    rsp,0x38
  41224b:	pop    rbx
  41224c:	pop    rsi
  41224d:	ret    
  41224e:	xchg   ax,ax
  412250:	lea    r8,[rip+0x248bd]        # 0x436b14
  412257:	lea    rdx,[rip+0x248d1]        # 0x436b2f
  41225e:	add    rsp,0x38
  412262:	pop    rbx
  412263:	pop    rsi
  412264:	jmp    0x4100a0
  412269:	mov    ecx,eax
  41226b:	call   0x40dc88
  412270:	mov    rbx,rax
  412273:	call   QWORD PTR [rip+0x36567]        # 0x4487e0
  412279:	lea    rdx,[rip+0x2472f]        # 0x4369af
  412280:	lea    rcx,[rax+0x60]
  412284:	mov    r8,rbx
  412287:	call   0x40e340
  41228c:	mov    ecx,0x1
  412291:	call   0x42df60
  412296:	nop
  412297:	nop    WORD PTR [rax+rax*1+0x0]
  4122a0:	push   rsi
  4122a1:	push   rbx
  4122a2:	sub    rsp,0x38
  4122a6:	mov    rax,QWORD PTR [rip+0x2b733]        # 0x43d9e0
  4122ad:	mov    eax,DWORD PTR [rax]
  4122af:	test   eax,eax
  4122b1:	je     0x4122f0
  4122b3:	mov    rsi,QWORD PTR [rip+0x33d36]        # 0x445ff0
  4122ba:	test   rsi,rsi
  4122bd:	je     0x4122e7
  4122bf:	mov    rbx,rcx
  4122c2:	mov    rcx,rsi
  4122c5:	call   0x42de30
  4122ca:	lea    rdx,[rip+0x2491b]        # 0x436bec
  4122d1:	xor    r8d,r8d
  4122d4:	mov    DWORD PTR [rsp+0x20],eax
  4122d8:	mov    r9,rsi
  4122db:	mov    rcx,rbx
  4122de:	call   0x426e80
  4122e3:	test   eax,eax
  4122e5:	js     0x412309
  4122e7:	add    rsp,0x38
  4122eb:	pop    rbx
  4122ec:	pop    rsi
  4122ed:	ret    
  4122ee:	xchg   ax,ax
  4122f0:	lea    r8,[rip+0x248f5]        # 0x436bec
  4122f7:	lea    rdx,[rip+0x24908]        # 0x436c06
  4122fe:	add    rsp,0x38
  412302:	pop    rbx
  412303:	pop    rsi
  412304:	jmp    0x4100a0
  412309:	mov    ecx,eax
  41230b:	call   0x40dc88
  412310:	mov    rbx,rax
  412313:	call   QWORD PTR [rip+0x364c7]        # 0x4487e0
  412319:	lea    rdx,[rip+0x2468f]        # 0x4369af
  412320:	lea    rcx,[rax+0x60]
  412324:	mov    r8,rbx
  412327:	call   0x40e340
  41232c:	mov    ecx,0x1
  412331:	call   0x42df60
  412336:	nop
  412337:	nop    WORD PTR [rax+rax*1+0x0]
  412340:	push   rbp
  412341:	push   rdi
  412342:	push   rsi
  412343:	push   rbx
  412344:	sub    rsp,0x38
  412348:	mov    rax,QWORD PTR [rip+0x2b691]        # 0x43d9e0
  41234f:	mov    eax,DWORD PTR [rax]
  412351:	test   eax,eax
  412353:	je     0x4123bf
  412355:	mov    rax,QWORD PTR [rip+0x33dbc]        # 0x446118
  41235c:	test   rax,rax
  41235f:	je     0x4123bf
  412361:	mov    rdi,QWORD PTR [rax]
  412364:	test   rdi,rdi
  412367:	je     0x4123bf
  412369:	mov    rbx,QWORD PTR [rax+0x8]
  41236d:	mov    rbp,rcx
  412370:	test   rbx,rbx
  412373:	je     0x4123c8
  412375:	mov    esi,0x18
  41237a:	jmp    0x41238d
  41237c:	nop    DWORD PTR [rax+0x0]
  412380:	mov    rbx,QWORD PTR [rax+rsi*1]
  412384:	add    rsi,0x10
  412388:	test   rbx,rbx
  41238b:	je     0x4123c8
  41238d:	mov    rcx,rbx
  412390:	call   0x42de30
  412395:	xor    r8d,r8d
  412398:	mov    DWORD PTR [rsp+0x20],eax
  41239c:	mov    r9,rbx
  41239f:	mov    rdx,rdi
  4123a2:	mov    rcx,rbp
  4123a5:	call   0x426e80
  4123aa:	test   eax,eax
  4123ac:	js     0x4123eb
  4123ae:	mov    rax,QWORD PTR [rip+0x33d63]        # 0x446118
  4123b5:	mov    rdi,QWORD PTR [rax+rsi*1-0x8]
  4123ba:	test   rdi,rdi
  4123bd:	jne    0x412380
  4123bf:	add    rsp,0x38
  4123c3:	pop    rbx
  4123c4:	pop    rsi
  4123c5:	pop    rdi
  4123c6:	pop    rbp
  4123c7:	ret    
  4123c8:	call   QWORD PTR [rip+0x36412]        # 0x4487e0
  4123ce:	lea    rdx,[rip+0x2483b]        # 0x436c10
  4123d5:	lea    rcx,[rax+0x60]
  4123d9:	mov    r8,rdi
  4123dc:	call   0x40e340
  4123e1:	mov    ecx,0x1
  4123e6:	call   0x42df60
  4123eb:	mov    ecx,eax
  4123ed:	call   0x40dc88
  4123f2:	mov    rbx,rax
  4123f5:	call   QWORD PTR [rip+0x363e5]        # 0x4487e0
  4123fb:	lea    rdx,[rip+0x24835]        # 0x436c37
  412402:	lea    rcx,[rax+0x60]
  412406:	mov    r8,rbx
  412409:	call   0x40e340
  41240e:	mov    ecx,0x1
  412413:	call   0x42df60
  412418:	nop
  412419:	nop
  41241a:	nop
  41241b:	nop
  41241c:	nop
  41241d:	nop
  41241e:	nop
  41241f:	nop
  412420:	mov    r9,r8
  412423:	mov    r8d,0xa
  412429:	jmp    0x417e00
  41242e:	nop
  41242f:	nop
  412430:	push   rbp
  412431:	push   rdi
  412432:	push   rsi
  412433:	push   rbx
  412434:	sub    rsp,0x238
  41243b:	test   rcx,rcx
  41243e:	mov    rbp,rcx
  412441:	je     0x412463
  412443:	mov    rbx,QWORD PTR [rip+0x36396]        # 0x4487e0
  41244a:	call   rbx
  41244c:	lea    rdx,[rax+0x60]
  412450:	mov    rcx,rbp
  412453:	call   0x42df18
  412458:	call   rbx
  41245a:	lea    rcx,[rax+0x60]
  41245e:	call   0x42df48
  412463:	mov    rsi,QWORD PTR [rip+0x36406]        # 0x448870
  41246a:	lea    rdi,[rsp+0x1f]
  41246f:	xor    ebx,ebx
  412471:	call   rsi
  412473:	cmp    eax,0xd
  412476:	je     0x412492
  412478:	add    rbx,0x1
  41247c:	cmp    rbx,0x200
  412483:	mov    BYTE PTR [rdi+rbx*1],al
  412486:	jne    0x412471
  412488:	mov    BYTE PTR [rsp+0x220],0x0
  412490:	jmp    0x412497
  412492:	mov    BYTE PTR [rsp+rbx*1+0x20],0x0
  412497:	test   rbp,rbp
  41249a:	je     0x4124cb
  41249c:	mov    rbx,QWORD PTR [rip+0x3633d]        # 0x4487e0
  4124a3:	call   rbx
  4124a5:	lea    rcx,[rip+0x24e34]        # 0x4372e0
  4124ac:	lea    r9,[rax+0x60]
  4124b0:	mov    r8d,0x2
  4124b6:	mov    edx,0x1
  4124bb:	call   0x42dee0
  4124c0:	call   rbx
  4124c2:	lea    rcx,[rax+0x60]
  4124c6:	call   0x42df48
  4124cb:	lea    rcx,[rsp+0x20]
  4124d0:	call   0x415d00
  4124d5:	add    rsp,0x238
  4124dc:	pop    rbx
  4124dd:	pop    rsi
  4124de:	pop    rdi
  4124df:	pop    rbp
  4124e0:	ret    
  4124e1:	nop
  4124e2:	nop
  4124e3:	nop
  4124e4:	nop
  4124e5:	nop
  4124e6:	nop
  4124e7:	nop
  4124e8:	nop
  4124e9:	nop
  4124ea:	nop
  4124eb:	nop
  4124ec:	nop
  4124ed:	nop
  4124ee:	nop
  4124ef:	nop
  4124f0:	push   rbx
  4124f1:	sub    rsp,0x30
  4124f5:	xor    edx,edx
  4124f7:	mov    rbx,rcx
  4124fa:	lea    rcx,[rsp+0x20]
  4124ff:	call   0x412580
  412504:	mov    rax,QWORD PTR [rsp+0x20]
  412509:	mov    QWORD PTR [rbx],rax
  41250c:	imul   eax,DWORD PTR [rsp+0x28],0x3e8
  412514:	mov    DWORD PTR [rbx+0x8],eax
  412517:	add    rsp,0x30
  41251b:	pop    rbx
  41251c:	ret    
  41251d:	nop
  41251e:	nop
  41251f:	nop
  412520:	sub    rsp,0x28
  412524:	call   QWORD PTR [rip+0x3635e]        # 0x448888
  41252a:	lea    rdx,[rip+0x3194f]        # 0x443e80
  412531:	cmp    QWORD PTR [rip+0x1f108],rdx        # 0x431640
  412538:	je     0x412540
  41253a:	add    rsp,0x28
  41253e:	ret    
  41253f:	nop
  412540:	mov    QWORD PTR [rip+0x1f0f9],rax        # 0x431640
  412547:	add    rsp,0x28
  41254b:	ret    
  41254c:	nop    DWORD PTR [rax+0x0]
  412550:	sub    rsp,0x28
  412554:	call   QWORD PTR [rip+0x3631e]        # 0x448878
  41255a:	lea    rdx,[rip+0x3191f]        # 0x443e80
  412561:	cmp    QWORD PTR [rip+0x1f0d8],rdx        # 0x431640
  412568:	je     0x412570
  41256a:	add    rsp,0x28
  41256e:	ret    
  41256f:	nop
  412570:	mov    QWORD PTR [rip+0x1f0c9],rax        # 0x431640
  412577:	add    rsp,0x28
  41257b:	ret    
  41257c:	nop    DWORD PTR [rax+0x0]
  412580:	push   r15
  412582:	push   r14
  412584:	push   r13
  412586:	push   r12
  412588:	push   rbp
  412589:	push   rdi
  41258a:	push   rsi
  41258b:	push   rbx
  41258c:	sub    rsp,0x48
  412590:	mov    rax,QWORD PTR [rip+0x1f0a9]        # 0x431640
  412597:	mov    rbx,rcx
  41259a:	lea    rcx,[rsp+0x30]
  41259f:	mov    r8d,DWORD PTR [rax]
  4125a2:	mov    r9d,DWORD PTR [rax+0x20]
  4125a6:	mov    r15d,DWORD PTR [rax+0x4]
  4125aa:	mov    r14d,DWORD PTR [rax+0x8]
  4125ae:	mov    r13d,DWORD PTR [rax+0xc]
  4125b2:	mov    r12d,DWORD PTR [rax+0x10]
  4125b6:	mov    DWORD PTR [rsp+0x2c],r8d
  4125bb:	mov    DWORD PTR [rsp+0x28],r9d
  4125c0:	mov    ebp,DWORD PTR [rax+0x14]
  4125c3:	mov    edi,DWORD PTR [rax+0x18]
  4125c6:	mov    esi,DWORD PTR [rax+0x1c]
  4125c9:	call   0x428a60
  4125ce:	test   eax,eax
  4125d0:	mov    r9d,DWORD PTR [rsp+0x28]
  4125d5:	mov    r8d,DWORD PTR [rsp+0x2c]
  4125da:	jne    0x4125eb
  4125dc:	movsxd rdx,DWORD PTR [rsp+0x30]
  4125e1:	mov    QWORD PTR [rbx],rdx
  4125e4:	mov    edx,DWORD PTR [rsp+0x34]
  4125e8:	mov    DWORD PTR [rbx+0x8],edx
  4125eb:	mov    rdx,QWORD PTR [rip+0x1f04e]        # 0x431640
  4125f2:	mov    DWORD PTR [rdx],r8d
  4125f5:	mov    DWORD PTR [rdx+0x4],r15d
  4125f9:	mov    DWORD PTR [rdx+0x8],r14d
  4125fd:	mov    DWORD PTR [rdx+0xc],r13d
  412601:	mov    DWORD PTR [rdx+0x10],r12d
  412605:	mov    DWORD PTR [rdx+0x14],ebp
  412608:	mov    DWORD PTR [rdx+0x18],edi
  41260b:	mov    DWORD PTR [rdx+0x1c],esi
  41260e:	mov    DWORD PTR [rdx+0x20],r9d
  412612:	add    rsp,0x48
  412616:	pop    rbx
  412617:	pop    rsi
  412618:	pop    rdi
  412619:	pop    rbp
  41261a:	pop    r12
  41261c:	pop    r13
  41261e:	pop    r14
  412620:	pop    r15
  412622:	ret    
  412623:	nop
  412624:	nop
  412625:	nop
  412626:	nop
  412627:	nop
  412628:	nop
  412629:	nop
  41262a:	nop
  41262b:	nop
  41262c:	nop
  41262d:	nop
  41262e:	nop
  41262f:	nop
  412630:	push   rbx
  412631:	sub    rsp,0x10
  412635:	xor    ebx,ebx
  412637:	xor    r8d,r8d
  41263a:	mov    BYTE PTR [rsp],0x0
  41263e:	mov    r10,rsp
  412641:	add    rcx,0x1
  412645:	movsx  eax,BYTE PTR [rcx-0x1]
  412649:	test   eax,eax
  41264b:	je     0x412697
  41264d:	lea    r9d,[rax-0x30]
  412651:	cmp    r9d,0x9
  412655:	ja     0x4126b0
  412657:	movzx  r11d,BYTE PTR [r10]
  41265b:	mov    eax,r11d
  41265e:	lea    r11d,[r11+r11*4]
  412662:	test   al,al
  412664:	lea    r9d,[r9+r11*2]
  412668:	jne    0x41266f
  41266a:	test   r8d,r8d
  41266d:	jne    0x4126e0
  41266f:	cmp    r9d,0xff
  412676:	ja     0x4126e0
  412678:	test   r8d,r8d
  41267b:	mov    BYTE PTR [r10],r9b
  41267e:	jne    0x4126d5
  412680:	add    ebx,0x1
  412683:	cmp    ebx,0x4
  412686:	jg     0x4126e0
  412688:	add    rcx,0x1
  41268c:	movsx  eax,BYTE PTR [rcx-0x1]
  412690:	mov    r8b,0x1
  412693:	test   eax,eax
  412695:	jne    0x41264d
  412697:	cmp    ebx,0x3
  41269a:	jle    0x4126e0
  41269c:	mov    eax,DWORD PTR [rsp]
  41269f:	mov    DWORD PTR [rdx],eax
  4126a1:	mov    eax,0x1
  4126a6:	add    rsp,0x10
  4126aa:	pop    rbx
  4126ab:	ret    
  4126ac:	nop    DWORD PTR [rax+0x0]
  4126b0:	cmp    eax,0x2e
  4126b3:	sete   al
  4126b6:	and    r8d,eax
  4126b9:	cmp    ebx,0x4
  4126bc:	sete   al
  4126bf:	cmp    r8b,al
  4126c2:	jbe    0x4126e0
  4126c4:	mov    BYTE PTR [r10+0x1],0x0
  4126c9:	xor    r8d,r8d
  4126cc:	add    r10,0x1
  4126d0:	jmp    0x412641
  4126d5:	mov    r8d,0x1
  4126db:	jmp    0x412641
  4126e0:	xor    eax,eax
  4126e2:	add    rsp,0x10
  4126e6:	pop    rbx
  4126e7:	ret    
  4126e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4126f0:	push   r15
  4126f2:	push   r14
  4126f4:	push   r13
  4126f6:	push   r12
  4126f8:	push   rbp
  4126f9:	push   rdi
  4126fa:	push   rsi
  4126fb:	push   rbx
  4126fc:	sub    rsp,0x58
  412700:	cmp    ecx,0x2
  412703:	mov    r15,rdx
  412706:	je     0x4127e2
  41270c:	cmp    ecx,0x17
  41270f:	jne    0x4127c0
  412715:	movsx  eax,BYTE PTR [rdx]
  412718:	lea    rdi,[rsp+0x40]
  41271d:	mov    QWORD PTR [rsp+0x40],0x0
  412726:	mov    QWORD PTR [rsp+0x48],0x0
  41272f:	lea    r12,[rsp+0x50]
  412734:	cmp    al,0x3a
  412736:	je     0x412840
  41273c:	lea    rbx,[rip+0x24bad]        # 0x4372f0
  412743:	mov    QWORD PTR [rsp+0x38],r15
  412748:	mov    rbp,rdi
  41274b:	xor    r14d,r14d
  41274e:	xor    esi,esi
  412750:	mov    QWORD PTR [rsp+0x30],0x0
  412759:	lea    edx,[rax-0x41]
  41275c:	lea    r10d,[rax+0x20]
  412760:	add    r15,0x1
  412764:	cmp    edx,0x19
  412767:	cmovbe eax,r10d
  41276b:	test   eax,eax
  41276d:	mov    r13d,eax
  412770:	je     0x412870
  412776:	lea    rcx,[rip+0x24b73]        # 0x4372f0
  41277d:	mov    edx,r13d
  412780:	mov    QWORD PTR [rsp+0x28],r8
  412785:	call   0x42de58
  41278a:	test   rax,rax
  41278d:	mov    r8,QWORD PTR [rsp+0x28]
  412792:	je     0x412804
  412794:	mov    r9d,r14d
  412797:	sub    rax,rbx
  41279a:	shl    r9d,0x4
  41279e:	mov    r14d,r9d
  4127a1:	or     r14d,eax
  4127a4:	cmp    r14d,0xffff
  4127ab:	ja     0x412800
  4127ad:	mov    esi,0x1
  4127b2:	movsx  eax,BYTE PTR [r15]
  4127b6:	jmp    0x412759
  4127b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4127c0:	call   QWORD PTR [rip+0x3606a]        # 0x448830
  4127c6:	mov    DWORD PTR [rax],0x66
  4127cc:	mov    eax,0xffffffff
  4127d1:	add    rsp,0x58
  4127d5:	pop    rbx
  4127d6:	pop    rsi
  4127d7:	pop    rdi
  4127d8:	pop    rbp
  4127d9:	pop    r12
  4127db:	pop    r13
  4127dd:	pop    r14
  4127df:	pop    r15
  4127e1:	ret    
  4127e2:	mov    rdx,r8
  4127e5:	mov    rcx,r15
  4127e8:	call   0x412630
  4127ed:	jmp    0x4127d1
  4127ef:	cmp    r12,rbp
  4127f2:	je     0x4128dd
  4127f8:	nop    DWORD PTR [rax+rax*1+0x0]
  412800:	xor    eax,eax
  412802:	jmp    0x4127d1
  412804:	cmp    r13d,0x3a
  412808:	jne    0x4128f8
  41280e:	test   esi,esi
  412810:	je     0x412850
  412812:	cmp    BYTE PTR [r15],0x0
  412816:	je     0x412800
  412818:	lea    rax,[rbp+0x2]
  41281c:	cmp    r12,rax
  41281f:	jb     0x412800
  412821:	mov    edx,r14d
  412824:	mov    BYTE PTR [rbp+0x1],r14b
  412828:	mov    QWORD PTR [rsp+0x38],r15
  41282d:	shr    edx,0x8
  412830:	xor    r14d,r14d
  412833:	xor    esi,esi
  412835:	mov    BYTE PTR [rbp+0x0],dl
  412838:	mov    rbp,rax
  41283b:	jmp    0x4127b2
  412840:	cmp    BYTE PTR [rdx+0x1],0x3a
  412844:	jne    0x412800
  412846:	add    r15,0x1
  41284a:	jmp    0x41273c
  41284f:	nop
  412850:	cmp    QWORD PTR [rsp+0x30],0x0
  412856:	jne    0x412800
  412858:	mov    QWORD PTR [rsp+0x38],r15
  41285d:	mov    QWORD PTR [rsp+0x30],rbp
  412862:	jmp    0x4127b2
  412867:	nop    WORD PTR [rax+rax*1+0x0]
  412870:	test   esi,esi
  412872:	mov    rax,rbp
  412875:	je     0x412890
  412877:	lea    rdx,[rbp+0x2]
  41287b:	cmp    r12,rdx
  41287e:	jb     0x412800
  412880:	mov    ecx,r14d
  412883:	shr    ecx,0x8
  412886:	mov    BYTE PTR [rbp+0x0],cl
  412889:	mov    rbp,rdx
  41288c:	mov    BYTE PTR [rax+0x1],r14b
  412890:	mov    rsi,QWORD PTR [rsp+0x30]
  412895:	test   rsi,rsi
  412898:	je     0x4127ef
  41289e:	mov    rax,rbp
  4128a1:	sub    rax,rsi
  4128a4:	cmp    r12,rbp
  4128a7:	movsxd rdx,eax
  4128aa:	je     0x412800
  4128b0:	test   eax,eax
  4128b2:	jle    0x4128dd
  4128b4:	mov    r13,QWORD PTR [rsp+0x30]
  4128b9:	lea    ecx,[rax-0x1]
  4128bc:	xor    eax,eax
  4128be:	not    rcx
  4128c1:	add    r13,rdx
  4128c4:	movzx  edx,BYTE PTR [r13+rax*1-0x1]
  4128ca:	mov    BYTE PTR [rdi+rax*1+0xf],dl
  4128ce:	mov    BYTE PTR [r13+rax*1-0x1],0x0
  4128d4:	sub    rax,0x1
  4128d8:	cmp    rax,rcx
  4128db:	jne    0x4128c4
  4128dd:	mov    rax,QWORD PTR [rsp+0x40]
  4128e2:	mov    rdx,QWORD PTR [rsp+0x48]
  4128e7:	mov    QWORD PTR [r8],rax
  4128ea:	mov    QWORD PTR [r8+0x8],rdx
  4128ee:	mov    eax,0x1
  4128f3:	jmp    0x4127d1
  4128f8:	cmp    r13d,0x2e
  4128fc:	jne    0x412800
  412902:	lea    rbx,[rbp+0x4]
  412906:	cmp    r12,rbx
  412909:	jb     0x412800
  41290f:	mov    rcx,QWORD PTR [rsp+0x38]
  412914:	mov    rdx,rbp
  412917:	mov    QWORD PTR [rsp+0x28],r8
  41291c:	mov    rbp,rbx
  41291f:	call   0x412630
  412924:	test   eax,eax
  412926:	mov    r8,QWORD PTR [rsp+0x28]
  41292b:	jg     0x412890
  412931:	xor    eax,eax
  412933:	jmp    0x4127d1
  412938:	nop
  412939:	nop
  41293a:	nop
  41293b:	nop
  41293c:	nop
  41293d:	nop
  41293e:	nop
  41293f:	nop
  412940:	push   rbx
  412941:	sub    rsp,0x20
  412945:	call   0x42dea8
  41294a:	test   rax,rax
  41294d:	mov    rbx,rax
  412950:	je     0x412960
  412952:	mov    rax,rbx
  412955:	add    rsp,0x20
  412959:	pop    rbx
  41295a:	ret    
  41295b:	nop    DWORD PTR [rax+rax*1+0x0]
  412960:	call   QWORD PTR [rip+0x35eca]        # 0x448830
  412966:	mov    DWORD PTR [rax],0xc
  41296c:	mov    rax,rbx
  41296f:	add    rsp,0x20
  412973:	pop    rbx
  412974:	ret    
  412975:	nop
  412976:	nop
  412977:	nop
  412978:	nop
  412979:	nop
  41297a:	nop
  41297b:	nop
  41297c:	nop
  41297d:	nop
  41297e:	nop
  41297f:	nop
  412980:	push   rbx
  412981:	mov    r9,QWORD PTR [rdx]
  412984:	mov    rax,QWORD PTR [rcx+0x80]
  41298b:	mov    r11,QWORD PTR [rdx+0x8]
  41298f:	mov    r8,r9
  412992:	sar    r8,0x20
  412996:	test   rax,rax
  412999:	je     0x4129a2
  41299b:	cmp    QWORD PTR [rcx+0x28],0x0
  4129a0:	je     0x4129f4
  4129a2:	cmp    r11,0x4
  4129a6:	ja     0x412a30
  4129ac:	add    QWORD PTR [rcx+0xa0],0x1
  4129b4:	cmp    r11,0x2
  4129b8:	jbe    0x412a1d
  4129ba:	mov    eax,r8d
  4129bd:	mov    edx,0x51eb851f
  4129c2:	imul   edx
  4129c4:	mov    eax,r8d
  4129c7:	sar    eax,0x1f
  4129ca:	sar    edx,0x5
  4129cd:	sub    edx,eax
  4129cf:	mov    DWORD PTR [rcx+0x38],edx
  4129d2:	imul   edx,edx,0x64
  4129d5:	sub    r8d,edx
  4129d8:	mov    DWORD PTR [rcx+0x3c],r8d
  4129dc:	mov    QWORD PTR [rcx+0x40],0x0
  4129e4:	mov    DWORD PTR [rcx+0x48],0x0
  4129eb:	mov    DWORD PTR [rcx+0x18],0x2
  4129f2:	pop    rbx
  4129f3:	ret    
  4129f4:	cmp    BYTE PTR [rcx+0x79],0x0
  4129f8:	jne    0x4129a2
  4129fa:	cmp    QWORD PTR [rcx+0xa0],0x0
  412a02:	jne    0x412aa0
  412a08:	cmp    r11,0x2
  412a0c:	ja     0x412aa0
  412a12:	mov    QWORD PTR [rcx+0xa0],0x1
  412a1d:	mov    DWORD PTR [rcx+0x38],r8d
  412a21:	mov    DWORD PTR [rcx+0x3c],0x0
  412a28:	jmp    0x4129dc
  412a2a:	nop    WORD PTR [rax+rax*1+0x0]
  412a30:	add    rax,0x1
  412a34:	mov    r10d,0x51eb851f
  412a3a:	mov    ebx,r8d
  412a3d:	mov    QWORD PTR [rcx+0x80],rax
  412a44:	mov    eax,r8d
  412a47:	sar    ebx,0x1f
  412a4a:	imul   r10d
  412a4d:	sub    r11,0x4
  412a51:	mov    QWORD PTR [rcx+0x28],r11
  412a55:	sar    edx,0x5
  412a58:	mov    r9d,edx
  412a5b:	mov    edx,r8d
  412a5e:	sub    r9d,ebx
  412a61:	imul   eax,r9d,0x64
  412a65:	sub    edx,eax
  412a67:	mov    eax,r9d
  412a6a:	mov    DWORD PTR [rcx+0x34],edx
  412a6d:	imul   r10d
  412a70:	mov    eax,r9d
  412a73:	sar    eax,0x1f
  412a76:	sar    edx,0x5
  412a79:	sub    edx,eax
  412a7b:	mov    eax,r8d
  412a7e:	imul   edx,edx,0x64
  412a81:	sub    r9d,edx
  412a84:	mov    edx,0x68db8bad
  412a89:	imul   edx
  412a8b:	mov    DWORD PTR [rcx+0x30],r9d
  412a8f:	sar    edx,0xc
  412a92:	sub    edx,ebx
  412a94:	mov    DWORD PTR [rcx+0x24],edx
  412a97:	pop    rbx
  412a98:	ret    
  412a99:	nop    DWORD PTR [rax+0x0]
  412aa0:	mov    QWORD PTR [rcx+0x20],r9
  412aa4:	mov    QWORD PTR [rcx+0x28],r11
  412aa8:	pop    rbx
  412aa9:	ret    
  412aaa:	nop    WORD PTR [rax+rax*1+0x0]
  412ab0:	push   rbx
  412ab1:	sub    rsp,0x20
  412ab5:	cmp    r8,0xffffffffffffffff
  412ab9:	mov    rbx,rcx
  412abc:	mov    QWORD PTR [rsp+0x40],r8
  412ac1:	je     0x412b00
  412ac3:	mov    eax,DWORD PTR [rdx+0x4]
  412ac6:	xor    eax,DWORD PTR [rbx+0x4]
  412ac9:	mov    ecx,DWORD PTR [rdx]
  412acb:	mov    r8d,eax
  412ace:	mov    eax,DWORD PTR [rbx]
  412ad0:	xor    eax,ecx
  412ad2:	mov    ecx,DWORD PTR [rdx+0x8]
  412ad5:	xor    ecx,DWORD PTR [rbx+0x8]
  412ad8:	or     eax,r8d
  412adb:	or     eax,ecx
  412add:	mov    ecx,DWORD PTR [rdx+0xc]
  412ae0:	xor    ecx,DWORD PTR [rbx+0xc]
  412ae3:	or     eax,ecx
  412ae5:	mov    ecx,DWORD PTR [rdx+0x10]
  412ae8:	xor    ecx,DWORD PTR [rbx+0x10]
  412aeb:	mov    edx,DWORD PTR [rdx+0x14]
  412aee:	xor    edx,DWORD PTR [rbx+0x14]
  412af1:	or     eax,ecx
  412af3:	or     eax,edx
  412af5:	sete   al
  412af8:	add    rsp,0x20
  412afc:	pop    rbx
  412afd:	ret    
  412afe:	xchg   ax,ax
  412b00:	lea    rcx,[rsp+0x40]
  412b05:	call   0x412520
  412b0a:	test   rax,rax
  412b0d:	mov    rdx,rax
  412b10:	jne    0x412ac3
  412b12:	xor    eax,eax
  412b14:	jmp    0x412af8
  412b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412b20:	push   rsi
  412b21:	push   rbx
  412b22:	sub    rsp,0x28
  412b26:	mov    rsi,rcx
  412b29:	lea    rcx,[rip+0x24810]        # 0x437340
  412b30:	call   0x42ded0
  412b35:	test   rax,rax
  412b38:	mov    rbx,rax
  412b3b:	je     0x412b71
  412b3d:	mov    rcx,rax
  412b40:	call   0x42de30
  412b45:	lea    r8,[rax+0x1]
  412b49:	cmp    r8,0x64
  412b4d:	ja     0x412b60
  412b4f:	mov    rdx,rbx
  412b52:	mov    rcx,rsi
  412b55:	add    rsp,0x28
  412b59:	pop    rbx
  412b5a:	pop    rsi
  412b5b:	jmp    0x42de98
  412b60:	mov    rdx,r8
  412b63:	mov    rcx,rbx
  412b66:	add    rsp,0x28
  412b6a:	pop    rbx
  412b6b:	pop    rsi
  412b6c:	jmp    0x417d80
  412b71:	xor    eax,eax
  412b73:	add    rsp,0x28
  412b77:	pop    rbx
  412b78:	pop    rsi
  412b79:	ret    
  412b7a:	nop    WORD PTR [rax+rax*1+0x0]
  412b80:	mov    eax,DWORD PTR [rsp+0x48]
  412b84:	mov    r10d,DWORD PTR [rsp+0x40]
  412b89:	mov    BYTE PTR [rcx+0x79],0x1
  412b8d:	imul   r10d,eax
  412b91:	add    DWORD PTR [rcx+0x70],r10d
  412b95:	movsxd r10,eax
  412b98:	imul   r10,QWORD PTR [rsp+0x38]
  412b9e:	imul   r9d,eax
  412ba2:	add    DWORD PTR [rcx+0x58],r9d
  412ba6:	add    QWORD PTR [rcx+0x68],r10
  412baa:	mov    r10d,DWORD PTR [rsp+0x30]
  412baf:	imul   r8d,eax
  412bb3:	add    DWORD PTR [rcx+0x54],r8d
  412bb7:	imul   edx,eax
  412bba:	add    DWORD PTR [rcx+0x50],edx
  412bbd:	imul   r10d,eax
  412bc1:	add    DWORD PTR [rcx+0x60],r10d
  412bc5:	mov    r10d,DWORD PTR [rsp+0x28]
  412bca:	imul   r10d,eax
  412bce:	add    DWORD PTR [rcx+0x5c],r10d
  412bd2:	ret    
  412bd3:	nop    DWORD PTR [rax]
  412bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412be0:	mov    r10d,DWORD PTR [rsp+0x28]
  412be5:	cmp    r9,0x2
  412be9:	ja     0x412c21
  412beb:	test   r10d,r10d
  412bee:	js     0x412c44
  412bf0:	movzx  edx,dl
  412bf3:	mov    eax,edx
  412bf5:	imul   r8d,r8d,0x3c
  412bf9:	neg    eax
  412bfb:	xor    eax,r10d
  412bfe:	add    edx,eax
  412c00:	lea    eax,[r8+rdx*1]
  412c04:	mov    r8d,eax
  412c07:	sar    r8d,0x1f
  412c0b:	mov    edx,r8d
  412c0e:	xor    edx,eax
  412c10:	sub    edx,r8d
  412c13:	cmp    edx,0x5a0
  412c19:	jle    0x412c1f
  412c1b:	add    QWORD PTR [rcx],0x1
  412c1f:	repz ret 
  412c21:	test   r10d,r10d
  412c24:	jns    0x412bf0
  412c26:	mov    eax,r8d
  412c29:	mov    edx,0x51eb851f
  412c2e:	imul   edx
  412c30:	mov    eax,r8d
  412c33:	sar    eax,0x1f
  412c36:	sar    edx,0x5
  412c39:	sub    edx,eax
  412c3b:	imul   edx,edx,0xffffffd8
  412c3e:	lea    eax,[rdx+r8*1]
  412c42:	jmp    0x412c04
  412c44:	imul   r8d,r8d,0x64
  412c48:	jmp    0x412c26
  412c4a:	nop    WORD PTR [rax+rax*1+0x0]
  412c50:	push   rdi
  412c51:	push   rsi
  412c52:	push   rbx
  412c53:	sub    rsp,0x20
  412c57:	lea    rbx,[rip+0x24ea2]        # 0x437b00
  412c5e:	mov    rsi,rdx
  412c61:	mov    rdi,rcx
  412c64:	lea    rdx,[rip+0x246d8]        # 0x437343
  412c6b:	jmp    0x412c7c
  412c6d:	nop    DWORD PTR [rax]
  412c70:	add    rbx,0x10
  412c74:	mov    rdx,QWORD PTR [rbx]
  412c77:	test   rdx,rdx
  412c7a:	je     0x412c93
  412c7c:	mov    rcx,rsi
  412c7f:	call   0x42de50
  412c84:	test   eax,eax
  412c86:	jne    0x412c70
  412c88:	mov    rax,rbx
  412c8b:	add    rsp,0x20
  412c8f:	pop    rbx
  412c90:	pop    rsi
  412c91:	pop    rdi
  412c92:	ret    
  412c93:	mov    rdx,QWORD PTR [rdi+0xb0]
  412c9a:	lea    rbx,[rdi+0xb0]
  412ca1:	test   rdx,rdx
  412ca4:	jne    0x412cec
  412ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412cb0:	lea    rbx,[rip+0x24b09]        # 0x4377c0
  412cb7:	lea    rdx,[rip+0x24689]        # 0x437347
  412cbe:	jmp    0x412ccc
  412cc0:	add    rbx,0x10
  412cc4:	mov    rdx,QWORD PTR [rbx]
  412cc7:	test   rdx,rdx
  412cca:	je     0x412d00
  412ccc:	mov    rcx,rsi
  412ccf:	call   0x42de50
  412cd4:	test   eax,eax
  412cd6:	jne    0x412cc0
  412cd8:	jmp    0x412c88
  412cda:	nop    WORD PTR [rax+rax*1+0x0]
  412ce0:	add    rbx,0x10
  412ce4:	mov    rdx,QWORD PTR [rbx]
  412ce7:	test   rdx,rdx
  412cea:	je     0x412cb0
  412cec:	mov    rcx,rsi
  412cef:	call   0x42de50
  412cf4:	test   eax,eax
  412cf6:	jne    0x412ce0
  412cf8:	jmp    0x412c88
  412cfa:	nop    WORD PTR [rax+rax*1+0x0]
  412d00:	xor    eax,eax
  412d02:	add    rsp,0x20
  412d06:	pop    rbx
  412d07:	pop    rsi
  412d08:	pop    rdi
  412d09:	ret    
  412d0a:	nop    WORD PTR [rax+rax*1+0x0]
  412d10:	sub    rsp,0x38
  412d14:	lea    rdx,[rip+0x24630]        # 0x43734b
  412d1b:	mov    QWORD PTR [rsp+0x50],r8
  412d20:	lea    r8,[rsp+0x50]
  412d25:	mov    QWORD PTR [rsp+0x58],r9
  412d2a:	mov    QWORD PTR [rsp+0x28],r8
  412d2f:	call   0x4293b0
  412d34:	add    rsp,0x38
  412d38:	ret    
  412d39:	nop    DWORD PTR [rax+0x0]
  412d40:	push   r15
  412d42:	push   r14
  412d44:	push   r13
  412d46:	push   r12
  412d48:	push   rbp
  412d49:	push   rdi
  412d4a:	push   rsi
  412d4b:	push   rbx
  412d4c:	sub    rsp,0x478
  412d53:	lea    r12,[rip+0x256a6]        # 0x438400
  412d5a:	xor    r13d,r13d
  412d5d:	mov    edi,0xfffffffe
  412d62:	lea    rax,[rsp+0x90]
  412d6a:	lea    r11,[rsp+0xf0]
  412d72:	mov    r15,rcx
  412d75:	lea    rbp,[rsp+0x150]
  412d7d:	xor    ecx,ecx
  412d7f:	mov    DWORD PTR [rsp+0x80],0x0
  412d8a:	mov    QWORD PTR [rsp+0x70],rax
  412d8f:	lea    rax,[rsp+0xa0]
  412d97:	mov    WORD PTR [rsp+0xf0],cx
  412d9f:	mov    rbx,r11
  412da2:	mov    r14,r11
  412da5:	mov    QWORD PTR [rsp+0x68],rax
  412daa:	lea    rax,[rsp+0xb3]
  412db2:	mov    QWORD PTR [rsp+0x78],rax
  412db7:	movsx  r9d,BYTE PTR [r12+r13*1]
  412dbc:	cmp    r9d,0xffffffa3
  412dc0:	je     0x412e04
  412dc2:	cmp    edi,0xfffffffe
  412dc5:	je     0x413260
  412dcb:	test   edi,edi
  412dcd:	jle    0x4131c1
  412dd3:	cmp    edi,0x115
  412dd9:	mov    eax,0x2
  412dde:	jle    0x4131a0
  412de4:	add    r9d,eax
  412de7:	cmp    r9d,0x70
  412deb:	ja     0x412e04
  412ded:	lea    rdx,[rip+0x2544c]        # 0x438240
  412df4:	movsxd r9,r9d
  412df7:	movsx  edx,BYTE PTR [rdx+r9*1]
  412dfc:	cmp    edx,eax
  412dfe:	je     0x4131e3
  412e04:	lea    rax,[rip+0x25575]        # 0x438380
  412e0b:	movzx  edx,BYTE PTR [rax+r13*1]
  412e10:	test   edx,edx
  412e12:	mov    eax,edx
  412e14:	je     0x412fe0
  412e1a:	lea    r8,[rip+0x2531f]        # 0x438140
  412e21:	movsxd rcx,edx
  412e24:	sub    eax,0x4
  412e27:	movzx  r8d,BYTE PTR [r8+rcx*1]
  412e2c:	mov    ecx,0x1
  412e31:	sub    ecx,r8d
  412e34:	mov    BYTE PTR [rsp+0x60],r8b
  412e39:	cmp    al,0x57
  412e3b:	movsxd rcx,ecx
  412e3e:	lea    rcx,[rcx+rcx*4]
  412e42:	lea    rcx,[rbp+rcx*8+0x0]
  412e47:	mov    r8,QWORD PTR [rcx]
  412e4a:	mov    rsi,QWORD PTR [rcx+0x18]
  412e4e:	mov    r13d,DWORD PTR [rcx+0x8]
  412e52:	mov    r11d,DWORD PTR [rcx+0xc]
  412e56:	mov    r10d,DWORD PTR [rcx+0x10]
  412e5a:	mov    QWORD PTR [rsp+0x120],r8
  412e62:	mov    r8,QWORD PTR [rcx+0x8]
  412e66:	mov    QWORD PTR [rsp+0x138],rsi
  412e6e:	mov    QWORD PTR [rsp+0x128],r8
  412e76:	mov    r8,QWORD PTR [rcx+0x10]
  412e7a:	mov    QWORD PTR [rsp+0x130],r8
  412e82:	mov    r8,QWORD PTR [rcx+0x20]
  412e86:	mov    ecx,DWORD PTR [rcx+0x20]
  412e89:	mov    QWORD PTR [rsp+0x140],r8
  412e91:	mov    DWORD PTR [rsp+0x58],ecx
  412e95:	ja     0x412ee1
  412e97:	lea    rcx,[rip+0x244da]        # 0x437378
  412e9e:	movzx  eax,al
  412ea1:	movsxd rax,DWORD PTR [rcx+rax*4]
  412ea5:	add    rcx,rax
  412ea8:	jmp    rcx
  412eaa:	cmp    QWORD PTR [rbp-0x98],0x3
  412eb2:	jbe    0x4145e8
  412eb8:	mov    rax,QWORD PTR [rbp-0xa0]
  412ebf:	mov    rdx,QWORD PTR [rbp-0x98]
  412ec6:	mov    QWORD PTR [r15+0x20],rax
  412eca:	mov    eax,DWORD PTR [rbp-0x4c]
  412ecd:	mov    QWORD PTR [r15+0x28],rdx
  412ed1:	mov    edx,0x2a
  412ed6:	mov    DWORD PTR [r15+0x30],eax
  412eda:	mov    eax,DWORD PTR [rbp+0x4]
  412edd:	mov    DWORD PTR [r15+0x34],eax
  412ee1:	movzx  eax,BYTE PTR [rsp+0x60]
  412ee6:	mov    r8,QWORD PTR [rsp+0x120]
  412eee:	movsxd rdx,edx
  412ef1:	mov    DWORD PTR [rsp+0x128],r13d
  412ef9:	mov    DWORD PTR [rsp+0x12c],r11d
  412f01:	mov    DWORD PTR [rsp+0x130],r10d
  412f09:	mov    QWORD PTR [rsp+0x138],rsi
  412f11:	lea    rcx,[rax+rax*4]
  412f15:	add    rax,rax
  412f18:	sub    rbx,rax
  412f1b:	shl    rcx,0x3
  412f1f:	mov    rax,rbx
  412f22:	mov    ebx,DWORD PTR [rsp+0x58]
  412f26:	sub    rbp,rcx
  412f29:	mov    rcx,rbp
  412f2c:	lea    rbp,[rbp+0x28]
  412f30:	mov    QWORD PTR [rcx+0x28],r8
  412f34:	mov    r8,QWORD PTR [rsp+0x128]
  412f3c:	mov    DWORD PTR [rsp+0x140],ebx
  412f43:	mov    QWORD PTR [rcx+0x40],rsi
  412f47:	mov    QWORD PTR [rcx+0x30],r8
  412f4b:	mov    r8,QWORD PTR [rsp+0x130]
  412f53:	mov    QWORD PTR [rcx+0x38],r8
  412f57:	mov    r8,QWORD PTR [rsp+0x140]
  412f5f:	mov    QWORD PTR [rcx+0x48],r8
  412f63:	lea    rcx,[rip+0x25256]        # 0x4381c0
  412f6a:	movzx  r8d,WORD PTR [rax]
  412f6e:	movzx  edx,BYTE PTR [rcx+rdx*1]
  412f72:	lea    rcx,[rip+0x253e7]        # 0x438360
  412f79:	sub    edx,0x1c
  412f7c:	movsxd rdx,edx
  412f7f:	movsx  r9d,BYTE PTR [rcx+rdx*1]
  412f84:	movsx  ecx,r8w
  412f88:	add    ecx,r9d
  412f8b:	cmp    ecx,0x70
  412f8e:	ja     0x412faa
  412f90:	lea    r9,[rip+0x252a9]        # 0x438240
  412f97:	movsxd rcx,ecx
  412f9a:	movsx  r9w,BYTE PTR [r9+rcx*1]
  412fa0:	cmp    r8w,r9w
  412fa4:	je     0x413350
  412faa:	lea    rcx,[rip+0x2538f]        # 0x438340
  412fb1:	movsx  r13,BYTE PTR [rcx+rdx*1]
  412fb6:	lea    rbx,[rax+0x2]
  412fba:	mov    WORD PTR [rax+0x2],r13w
  412fbf:	lea    rax,[r14+0x26]
  412fc3:	cmp    rbx,rax
  412fc6:	jae    0x414510
  412fcc:	cmp    r13d,0xc
  412fd0:	jne    0x412db7
  412fd6:	xor    eax,eax
  412fd8:	jmp    0x413098
  412fdd:	nop    DWORD PTR [rax]
  412fe0:	cmp    DWORD PTR [rsp+0x80],0x3
  412fe8:	jne    0x413005
  412fea:	jmp    0x4131d0
  412fef:	nop
  412ff0:	cmp    rbx,r14
  412ff3:	je     0x413093
  412ff9:	sub    rbx,0x2
  412ffd:	movsx  r13,WORD PTR [rbx]
  413001:	sub    rbp,0x28
  413005:	movsx  eax,BYTE PTR [r12+r13*1]
  41300a:	cmp    eax,0xffffffa3
  41300d:	je     0x412ff0
  41300f:	add    eax,0x1
  413012:	cmp    eax,0x70
  413015:	ja     0x412ff0
  413017:	lea    rdx,[rip+0x25222]        # 0x438240
  41301e:	cdqe   
  413020:	cmp    BYTE PTR [rdx+rax*1],0x1
  413024:	jne    0x412ff0
  413026:	lea    rdx,[rip+0x25293]        # 0x4382c0
  41302d:	movzx  r13d,BYTE PTR [rdx+rax*1]
  413032:	test   r13d,r13d
  413035:	je     0x412ff0
  413037:	mov    rcx,QWORD PTR [rsp+0xc0]
  41303f:	mov    rdx,rbp
  413042:	mov    rax,rbx
  413045:	add    rbp,0x28
  413049:	mov    DWORD PTR [rsp+0x80],0x3
  413054:	mov    QWORD PTR [rdx+0x28],rcx
  413058:	mov    rcx,QWORD PTR [rsp+0xc8]
  413060:	mov    QWORD PTR [rdx+0x30],rcx
  413064:	mov    rcx,QWORD PTR [rsp+0xd0]
  41306c:	mov    QWORD PTR [rdx+0x38],rcx
  413070:	mov    rcx,QWORD PTR [rsp+0xd8]
  413078:	mov    QWORD PTR [rdx+0x40],rcx
  41307c:	mov    rcx,QWORD PTR [rsp+0xe0]
  413084:	mov    QWORD PTR [rdx+0x48],rcx
  413088:	jmp    0x412fb6
  41308d:	jne    0x413005
  413093:	mov    eax,0x1
  413098:	add    rsp,0x478
  41309f:	pop    rbx
  4130a0:	pop    rsi
  4130a1:	pop    rdi
  4130a2:	pop    rbp
  4130a3:	pop    r12
  4130a5:	pop    r13
  4130a7:	pop    r14
  4130a9:	pop    r15
  4130ab:	ret    
  4130ac:	nop    DWORD PTR [rax+0x0]
  4130b0:	movzx  r11d,BYTE PTR [rcx+0x1]
  4130b5:	xor    eax,eax
  4130b7:	lea    r10,[rcx+0x1]
  4130bb:	lea    esi,[r11-0x30]
  4130bf:	mov    edx,r11d
  4130c2:	cmp    esi,0x9
  4130c5:	jbe    0x41455b
  4130cb:	and    edx,0xfffffffd
  4130ce:	cmp    dl,0x2c
  4130d1:	jne    0x41457c
  4130d7:	movsx  edx,BYTE PTR [r10+0x1]
  4130dc:	lea    r11d,[rdx-0x30]
  4130e0:	cmp    r11d,0x9
  4130e4:	ja     0x41457c
  4130ea:	cmp    eax,0xffffffff
  4130ed:	mov    esi,r8d
  4130f0:	je     0x414638
  4130f6:	movsx  r11d,BYTE PTR [r10+0x2]
  4130fb:	lea    rcx,[r10+0x2]
  4130ff:	sub    edx,0x30
  413102:	mov    r10d,0x8
  413108:	mov    edi,r11d
  41310b:	lea    edx,[rdx+rdx*4]
  41310e:	lea    r8d,[r11-0x30]
  413112:	add    edx,edx
  413114:	cmp    r8d,0x9
  413118:	ja     0x41312d
  41311a:	movsx  r11d,BYTE PTR [rcx+0x1]
  41311f:	add    edx,r8d
  413122:	add    rcx,0x1
  413126:	lea    r8d,[r11-0x30]
  41312a:	mov    edi,r11d
  41312d:	sub    r10d,0x1
  413131:	jne    0x41310b
  413133:	cmp    eax,0xffffffff
  413136:	mov    r10d,edx
  413139:	je     0x414650
  41313f:	cmp    r8d,0x9
  413143:	ja     0x413154
  413145:	add    rcx,0x1
  413149:	movsx  edx,BYTE PTR [rcx]
  41314c:	sub    edx,0x30
  41314f:	cmp    edx,0x9
  413152:	jbe    0x413145
  413154:	test   r10d,r10d
  413157:	je     0x414613
  41315d:	mov    edx,eax
  41315f:	shr    edx,0x1f
  413162:	test   dl,dl
  413164:	je     0x414613
  41316a:	test   rsi,rsi
  41316d:	jne    0x414564
  413173:	mov    eax,0x3b9aca00
  413178:	mov    QWORD PTR [rsp+0xc0],0xffffffffffffffff
  413184:	mov    QWORD PTR [r15],rcx
  413187:	sub    eax,r10d
  41318a:	mov    edi,0x114
  41318f:	mov    DWORD PTR [rsp+0xc8],eax
  413196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4131a0:	lea    rdx,[rip+0x252d9]        # 0x438480
  4131a7:	movsxd rax,edi
  4131aa:	movzx  eax,BYTE PTR [rdx+rax*1]
  4131ae:	jmp    0x412de4
  4131b3:	lea    rax,[rcx+0x1]
  4131b7:	mov    QWORD PTR [r15],rax
  4131ba:	movzx  edi,BYTE PTR [rcx]
  4131bd:	test   edi,edi
  4131bf:	jne    0x4131a0
  4131c1:	xor    eax,eax
  4131c3:	xor    edi,edi
  4131c5:	jmp    0x412de4
  4131ca:	nop    WORD PTR [rax+rax*1+0x0]
  4131d0:	cmp    edi,0x0
  4131d3:	jle    0x41308d
  4131d9:	mov    edi,0xfffffffe
  4131de:	jmp    0x413005
  4131e3:	lea    rax,[rip+0x250d6]        # 0x4382c0
  4131ea:	movzx  r13d,BYTE PTR [rax+r9*1]
  4131ef:	test   r13d,r13d
  4131f2:	je     0x413361
  4131f8:	mov    eax,DWORD PTR [rsp+0x80]
  4131ff:	mov    edi,0xfffffffe
  413204:	cmp    eax,0x1
  413207:	adc    eax,0xffffffff
  41320a:	add    rbp,0x28
  41320e:	mov    DWORD PTR [rsp+0x80],eax
  413215:	mov    rax,QWORD PTR [rsp+0xc0]
  41321d:	mov    QWORD PTR [rbp+0x0],rax
  413221:	mov    rax,QWORD PTR [rsp+0xc8]
  413229:	mov    QWORD PTR [rbp+0x8],rax
  41322d:	mov    rax,QWORD PTR [rsp+0xd0]
  413235:	mov    QWORD PTR [rbp+0x10],rax
  413239:	mov    rax,QWORD PTR [rsp+0xd8]
  413241:	mov    QWORD PTR [rbp+0x18],rax
  413245:	mov    rax,QWORD PTR [rsp+0xe0]
  41324d:	mov    QWORD PTR [rbp+0x20],rax
  413251:	mov    rax,rbx
  413254:	jmp    0x412fb6
  413259:	nop    DWORD PTR [rax+0x0]
  413260:	mov    rcx,QWORD PTR [r15]
  413263:	movzx  eax,BYTE PTR [rcx]
  413266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413270:	lea    edx,[rax-0x9]
  413273:	mov    r10d,eax
  413276:	cmp    dl,0x4
  413279:	jbe    0x4132f4
  41327b:	cmp    al,0x20
  41327d:	je     0x4132f4
  41327f:	lea    r11d,[rax-0x2b]
  413283:	movzx  edx,al
  413286:	lea    r8d,[rdx-0x30]
  41328a:	and    r11d,0xfd
  413291:	je     0x413303
  413293:	cmp    r8d,0x9
  413297:	jbe    0x4130b0
  41329d:	and    edx,0xffffffdf
  4132a0:	sub    edx,0x41
  4132a3:	cmp    edx,0x19
  4132a6:	jbe    0x41444e
  4132ac:	cmp    al,0x28
  4132ae:	jne    0x4131b3
  4132b4:	xor    r8d,r8d
  4132b7:	jmp    0x4132d7
  4132b9:	nop    DWORD PTR [rax+0x0]
  4132c0:	cmp    al,0x29
  4132c2:	sete   al
  4132c5:	movzx  eax,al
  4132c8:	sub    r8,rax
  4132cb:	test   r8,r8
  4132ce:	je     0x4133bc
  4132d4:	mov    rcx,rdx
  4132d7:	lea    rdx,[rcx+0x1]
  4132db:	mov    QWORD PTR [r15],rdx
  4132de:	movzx  eax,BYTE PTR [rdx-0x1]
  4132e2:	test   al,al
  4132e4:	je     0x4131c1
  4132ea:	cmp    al,0x28
  4132ec:	jne    0x4132c0
  4132ee:	add    r8,0x1
  4132f2:	jmp    0x4132cb
  4132f4:	add    rcx,0x1
  4132f8:	mov    QWORD PTR [r15],rcx
  4132fb:	movzx  eax,BYTE PTR [rcx]
  4132fe:	jmp    0x413270
  413303:	cmp    al,0x2d
  413305:	setne  al
  413308:	movzx  eax,al
  41330b:	lea    eax,[rax+rax*1-0x1]
  41330f:	add    rcx,0x1
  413313:	mov    QWORD PTR [r15],rcx
  413316:	movzx  edx,BYTE PTR [rcx]
  413319:	cmp    edx,0x9
  41331c:	mov    r10d,edx
  41331f:	je     0x41330f
  413321:	cmp    edx,0x20
  413324:	je     0x41330f
  413326:	lea    r8d,[rdx-0xa]
  41332a:	cmp    r8b,0x3
  41332e:	jbe    0x41330f
  413330:	lea    r8d,[rdx-0x30]
  413334:	cmp    r8d,0x9
  413338:	jbe    0x41451a
  41333e:	mov    eax,r10d
  413341:	jmp    0x413270
  413346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413350:	lea    rdx,[rip+0x24f69]        # 0x4382c0
  413357:	movzx  r13d,BYTE PTR [rdx+rcx*1]
  41335c:	jmp    0x412fb6
  413361:	mov    rax,QWORD PTR [rbp+0x28]
  413365:	mov    rsi,QWORD PTR [rbp+0x40]
  413369:	xor    edx,edx
  41336b:	mov    r13d,DWORD PTR [rbp+0x30]
  41336f:	mov    r11d,DWORD PTR [rbp+0x34]
  413373:	mov    r10d,DWORD PTR [rbp+0x38]
  413377:	mov    BYTE PTR [rsp+0x60],0x0
  41337c:	mov    QWORD PTR [rsp+0x120],rax
  413384:	mov    rax,QWORD PTR [rbp+0x30]
  413388:	mov    QWORD PTR [rsp+0x138],rsi
  413390:	mov    QWORD PTR [rsp+0x128],rax
  413398:	mov    rax,QWORD PTR [rbp+0x38]
  41339c:	mov    QWORD PTR [rsp+0x130],rax
  4133a4:	mov    rax,QWORD PTR [rbp+0x48]
  4133a8:	mov    QWORD PTR [rsp+0x140],rax
  4133b0:	mov    eax,DWORD PTR [rbp+0x48]
  4133b3:	mov    DWORD PTR [rsp+0x58],eax
  4133b7:	jmp    0x412ee1
  4133bc:	movzx  eax,BYTE PTR [rcx+0x1]
  4133c0:	mov    rcx,rdx
  4133c3:	jmp    0x413270
  4133c8:	mov    eax,DWORD PTR [rbp-0x28]
  4133cb:	mov    DWORD PTR [r15+0x8],0x0
  4133d3:	mov    edx,0x26
  4133d8:	mov    DWORD PTR [r15+0xc],eax
  4133dc:	jmp    0x412ee1
  4133e1:	mov    eax,DWORD PTR [rbp+0x0]
  4133e4:	mov    DWORD PTR [r15+0x8],0x0
  4133ec:	mov    edx,0x25
  4133f1:	mov    DWORD PTR [r15+0xc],eax
  4133f5:	jmp    0x412ee1
  4133fa:	mov    eax,DWORD PTR [rbp-0x28]
  4133fd:	mov    edx,0x24
  413402:	add    eax,0x3c
  413405:	mov    DWORD PTR [r15+0x14],eax
  413409:	jmp    0x412ee1
  41340e:	mov    eax,DWORD PTR [rbp+0x0]
  413411:	mov    edx,0x23
  413416:	add    eax,0x3c
  413419:	mov    DWORD PTR [r15+0x14],eax
  41341d:	jmp    0x412ee1
  413422:	mov    eax,DWORD PTR [rbp-0x50]
  413425:	movzx  edx,BYTE PTR [rbp-0x28]
  413429:	lea    rcx,[r15+0xa8]
  413430:	mov    r9,QWORD PTR [rbp-0x20]
  413434:	mov    r8d,DWORD PTR [rbp-0x24]
  413438:	mov    DWORD PTR [rsp+0x8c],r11d
  413440:	mov    DWORD PTR [rsp+0x88],r10d
  413448:	mov    DWORD PTR [rsp+0x84],eax
  41344f:	mov    eax,DWORD PTR [rbp+0x0]
  413452:	mov    DWORD PTR [rsp+0x20],eax
  413456:	call   0x412be0
  41345b:	add    eax,DWORD PTR [rsp+0x84]
  413462:	mov    edx,0x22
  413467:	mov    r10d,DWORD PTR [rsp+0x88]
  41346f:	mov    r11d,DWORD PTR [rsp+0x8c]
  413477:	mov    DWORD PTR [r15+0x14],eax
  41347b:	jmp    0x412ee1
  413480:	mov    r9d,DWORD PTR [rbp+0x8]
  413484:	mov    r8d,DWORD PTR [rbp+0x4]
  413488:	mov    rcx,r15
  41348b:	mov    DWORD PTR [rsp+0x40],0x1
  413493:	mov    eax,DWORD PTR [rbp+0x20]
  413496:	mov    DWORD PTR [r15+0x14],0x1a4
  41349e:	mov    DWORD PTR [rsp+0x88],r11d
  4134a6:	mov    DWORD PTR [rsp+0x84],r10d
  4134ae:	mov    DWORD PTR [rsp+0x38],eax
  4134b2:	mov    rax,QWORD PTR [rbp+0x18]
  4134b6:	mov    QWORD PTR [rsp+0x30],rax
  4134bb:	mov    eax,DWORD PTR [rbp+0x10]
  4134be:	mov    DWORD PTR [rsp+0x28],eax
  4134c2:	mov    eax,DWORD PTR [rbp+0xc]
  4134c5:	mov    DWORD PTR [rsp+0x20],eax
  4134c9:	mov    edx,DWORD PTR [rbp+0x0]
  4134cc:	call   0x412b80
  4134d1:	mov    edx,0x21
  4134d6:	mov    r10d,DWORD PTR [rsp+0x84]
  4134de:	mov    r11d,DWORD PTR [rsp+0x88]
  4134e6:	jmp    0x412ee1
  4134eb:	mov    eax,DWORD PTR [rbp-0x28]
  4134ee:	mov    r9d,DWORD PTR [rbp+0x8]
  4134f2:	mov    rcx,r15
  4134f5:	mov    r8d,DWORD PTR [rbp+0x4]
  4134f9:	mov    DWORD PTR [rsp+0x40],0x1
  413501:	mov    DWORD PTR [rsp+0x88],r11d
  413509:	mov    DWORD PTR [rsp+0x84],r10d
  413511:	mov    DWORD PTR [r15+0x14],eax
  413515:	mov    eax,DWORD PTR [rbp+0x20]
  413518:	mov    DWORD PTR [rsp+0x38],eax
  41351c:	mov    rax,QWORD PTR [rbp+0x18]
  413520:	mov    QWORD PTR [rsp+0x30],rax
  413525:	mov    eax,DWORD PTR [rbp+0x10]
  413528:	mov    DWORD PTR [rsp+0x28],eax
  41352c:	mov    eax,DWORD PTR [rbp+0xc]
  41352f:	mov    DWORD PTR [rsp+0x20],eax
  413533:	mov    edx,DWORD PTR [rbp+0x0]
  413536:	call   0x412b80
  41353b:	mov    edx,0x20
  413540:	mov    r10d,DWORD PTR [rsp+0x84]
  413548:	mov    r11d,DWORD PTR [rsp+0x88]
  413550:	jmp    0x412ee1
  413555:	mov    DWORD PTR [r15+0x14],0x1a4
  41355d:	mov    edx,0x1f
  413562:	jmp    0x412ee1
  413567:	mov    eax,DWORD PTR [rbp+0x0]
  41356a:	mov    edx,0x1e
  41356f:	mov    DWORD PTR [r15+0x14],eax
  413573:	jmp    0x412ee1
  413578:	mov    r13d,DWORD PTR [rbp-0x24]
  41357c:	mov    QWORD PTR [rsp+0x120],0x0
  413588:	mov    edx,0x4d
  41358d:	mov    QWORD PTR [rsp+0x128],0x0
  413599:	mov    QWORD PTR [rsp+0x130],0x0
  4135a5:	xor    esi,esi
  4135a7:	mov    QWORD PTR [rsp+0x138],0x0
  4135b3:	mov    QWORD PTR [rsp+0x140],0x0
  4135bf:	xor    r10d,r10d
  4135c2:	imul   r13d,DWORD PTR [rbp+0x0]
  4135c7:	mov    DWORD PTR [rsp+0x58],0x0
  4135cf:	xor    r11d,r11d
  4135d2:	jmp    0x412ee1
  4135d7:	mov    QWORD PTR [rsp+0x120],0x0
  4135e3:	mov    QWORD PTR [rsp+0x128],0x0
  4135ef:	mov    edx,0x4f
  4135f4:	mov    QWORD PTR [rsp+0x130],0x0
  413600:	mov    QWORD PTR [rsp+0x138],0x0
  41360c:	xor    esi,esi
  41360e:	mov    QWORD PTR [rsp+0x140],0x0
  41361a:	mov    r10d,DWORD PTR [rbp-0x24]
  41361e:	xor    r11d,r11d
  413621:	mov    DWORD PTR [rsp+0x58],0x0
  413629:	xor    r13d,r13d
  41362c:	jmp    0x412ee1
  413631:	mov    QWORD PTR [rsp+0x120],0x0
  41363d:	mov    QWORD PTR [rsp+0x128],0x0
  413649:	mov    edx,0x4e
  41364e:	mov    QWORD PTR [rsp+0x130],0x0
  41365a:	mov    QWORD PTR [rsp+0x138],0x0
  413666:	xor    esi,esi
  413668:	mov    QWORD PTR [rsp+0x140],0x0
  413674:	mov    r11d,DWORD PTR [rbp-0x24]
  413678:	xor    r10d,r10d
  41367b:	mov    DWORD PTR [rsp+0x58],0x0
  413683:	xor    r13d,r13d
  413686:	jmp    0x412ee1
  41368b:	movsxd rax,DWORD PTR [rbp+0x4]
  41368f:	mov    edx,0x57
  413694:	xor    r13d,r13d
  413697:	mov    QWORD PTR [rsp+0x120],rax
  41369f:	jmp    0x412ee1
  4136a4:	movsxd rax,DWORD PTR [rbp+0x4]
  4136a8:	mov    edx,0x55
  4136ad:	xor    r13d,r13d
  4136b0:	mov    QWORD PTR [rsp+0x120],rax
  4136b8:	jmp    0x412ee1
  4136bd:	mov    QWORD PTR [rsp+0x120],0x0
  4136c9:	mov    QWORD PTR [rsp+0x128],0x0
  4136d5:	mov    edx,0x51
  4136da:	mov    QWORD PTR [rsp+0x130],0x0
  4136e6:	mov    QWORD PTR [rsp+0x138],0x0
  4136f2:	xor    esi,esi
  4136f4:	mov    QWORD PTR [rsp+0x140],0x0
  413700:	mov    r13d,DWORD PTR [rbp+0x0]
  413704:	xor    r10d,r10d
  413707:	mov    DWORD PTR [rsp+0x58],0x0
  41370f:	xor    r11d,r11d
  413712:	jmp    0x412ee1
  413717:	mov    QWORD PTR [rsp+0x120],0x0
  413723:	mov    QWORD PTR [rsp+0x128],0x0
  41372f:	mov    edx,0x50
  413734:	mov    QWORD PTR [rsp+0x130],0x0
  413740:	mov    QWORD PTR [rsp+0x138],0x0
  41374c:	xor    r10d,r10d
  41374f:	mov    QWORD PTR [rsp+0x140],0x0
  41375b:	movsxd rsi,DWORD PTR [rbp-0x24]
  41375f:	xor    r11d,r11d
  413762:	mov    DWORD PTR [rsp+0x58],0x0
  41376a:	xor    r13d,r13d
  41376d:	jmp    0x412ee1
  413772:	mov    eax,DWORD PTR [rbp-0x28]
  413775:	mov    edx,0x2d
  41377a:	mov    DWORD PTR [r15+0x30],eax
  41377e:	mov    eax,DWORD PTR [rbp+0x4]
  413781:	mov    DWORD PTR [r15+0x34],eax
  413785:	jmp    0x412ee1
  41378a:	mov    eax,DWORD PTR [rbp-0x50]
  41378d:	mov    edx,0x2c
  413792:	mov    DWORD PTR [r15+0x30],eax
  413796:	mov    eax,DWORD PTR [rbp-0x24]
  413799:	neg    eax
  41379b:	mov    DWORD PTR [r15+0x34],eax
  41379f:	mov    eax,DWORD PTR [rbp+0x4]
  4137a2:	neg    eax
  4137a4:	mov    DWORD PTR [r15+0x24],eax
  4137a8:	mov    rax,QWORD PTR [rbp+0x8]
  4137ac:	mov    QWORD PTR [r15+0x28],rax
  4137b0:	jmp    0x412ee1
  4137b5:	mov    eax,DWORD PTR [rbp-0x4c]
  4137b8:	mov    edx,0x2b
  4137bd:	mov    DWORD PTR [r15+0x34],eax
  4137c1:	mov    eax,DWORD PTR [rbp-0x28]
  4137c4:	mov    DWORD PTR [r15+0x30],eax
  4137c8:	mov    eax,DWORD PTR [rbp+0x4]
  4137cb:	neg    eax
  4137cd:	mov    DWORD PTR [r15+0x24],eax
  4137d1:	mov    rax,QWORD PTR [rbp+0x8]
  4137d5:	mov    QWORD PTR [r15+0x28],rax
  4137d9:	jmp    0x412ee1
  4137de:	mov    eax,DWORD PTR [rbp-0x4c]
  4137e1:	mov    edx,0x29
  4137e6:	mov    DWORD PTR [r15+0x30],eax
  4137ea:	mov    eax,DWORD PTR [rbp+0x4]
  4137ed:	mov    DWORD PTR [r15+0x34],eax
  4137f1:	jmp    0x412ee1
  4137f6:	mov    eax,DWORD PTR [rbp-0x28]
  4137f9:	mov    edx,0x27
  4137fe:	mov    DWORD PTR [r15+0x8],eax
  413802:	mov    eax,DWORD PTR [rbp+0x0]
  413805:	mov    DWORD PTR [r15+0xc],eax
  413809:	jmp    0x412ee1
  41380e:	mov    rdx,QWORD PTR [rbp+0x8]
  413812:	mov    rax,QWORD PTR [rbp+0x0]
  413816:	mov    rcx,r15
  413819:	mov    DWORD PTR [rsp+0x88],r11d
  413821:	mov    DWORD PTR [rsp+0x84],r10d
  413829:	mov    QWORD PTR [rsp+0x98],rdx
  413831:	mov    rdx,QWORD PTR [rsp+0x70]
  413836:	mov    QWORD PTR [rsp+0x90],rax
  41383e:	call   0x412980
  413843:	mov    edx,0x58
  413848:	mov    r10d,DWORD PTR [rsp+0x84]
  413850:	mov    r11d,DWORD PTR [rsp+0x88]
  413858:	jmp    0x412ee1
  41385d:	mov    eax,DWORD PTR [rbp-0x24]
  413860:	mov    edx,0x28
  413865:	mov    DWORD PTR [r15+0x8],eax
  413869:	mov    eax,DWORD PTR [rbp+0x0]
  41386c:	mov    DWORD PTR [r15+0xc],eax
  413870:	jmp    0x412ee1
  413875:	mov    eax,DWORD PTR [rbp-0x24]
  413878:	mov    DWORD PTR [r15+0x3c],0x0
  413880:	mov    edx,0x12
  413885:	mov    QWORD PTR [r15+0x40],0x0
  41388d:	mov    DWORD PTR [r15+0x48],0x0
  413895:	mov    DWORD PTR [r15+0x38],eax
  413899:	mov    eax,DWORD PTR [rbp+0x0]
  41389c:	mov    DWORD PTR [r15+0x18],eax
  4138a0:	jmp    0x412ee1
  4138a5:	add    QWORD PTR [r15+0x88],0x1
  4138ad:	mov    edx,0xc
  4138b2:	jmp    0x412ee1
  4138b7:	add    QWORD PTR [r15+0x80],0x1
  4138bf:	mov    edx,0xb
  4138c4:	jmp    0x412ee1
  4138c9:	add    QWORD PTR [r15+0xa8],0x1
  4138d1:	mov    edx,0xa
  4138d6:	jmp    0x412ee1
  4138db:	add    QWORD PTR [r15+0x90],0x1
  4138e3:	mov    edx,0x9
  4138e8:	jmp    0x412ee1
  4138ed:	add    QWORD PTR [r15+0xa0],0x1
  4138f5:	mov    edx,0x8
  4138fa:	jmp    0x412ee1
  4138ff:	add    QWORD PTR [r15+0xa0],0x1
  413907:	add    QWORD PTR [r15+0x80],0x1
  41390f:	mov    edx,0x7
  413914:	jmp    0x412ee1
  413919:	mov    eax,DWORD PTR [rbp-0x24]
  41391c:	mov    QWORD PTR [rsp+0x120],0x0
  413928:	mov    edx,0x37
  41392d:	mov    QWORD PTR [rsp+0x128],0x0
  413939:	mov    QWORD PTR [rsp+0x130],0x0
  413945:	mov    QWORD PTR [rsp+0x138],0x0
  413951:	mov    QWORD PTR [rsp+0x140],0x0
  41395d:	mov    DWORD PTR [rsp+0x120],eax
  413964:	mov    DWORD PTR [rsp+0x58],0x0
  41396c:	xor    esi,esi
  41396e:	xor    r10d,r10d
  413971:	xor    r11d,r11d
  413974:	xor    r13d,r13d
  413977:	jmp    0x412ee1
  41397c:	mov    eax,DWORD PTR [rbp-0x28]
  41397f:	mov    QWORD PTR [rsp+0x120],0x0
  41398b:	mov    edx,0x36
  413990:	mov    QWORD PTR [rsp+0x128],0x0
  41399c:	mov    QWORD PTR [rsp+0x130],0x0
  4139a8:	mov    QWORD PTR [rsp+0x138],0x0
  4139b4:	mov    QWORD PTR [rsp+0x140],0x0
  4139c0:	mov    DWORD PTR [rsp+0x120],eax
  4139c7:	jmp    0x413964
  4139c9:	mov    r9d,DWORD PTR [rbp+0x8]
  4139cd:	mov    r8d,DWORD PTR [rbp+0x4]
  4139d1:	mov    rcx,r15
  4139d4:	mov    DWORD PTR [rsp+0x40],0x1
  4139dc:	mov    eax,DWORD PTR [rbp+0x20]
  4139df:	mov    DWORD PTR [rsp+0x88],r11d
  4139e7:	mov    DWORD PTR [rsp+0x84],r10d
  4139ef:	mov    DWORD PTR [rsp+0x38],eax
  4139f3:	mov    rax,QWORD PTR [rbp+0x18]
  4139f7:	mov    QWORD PTR [rsp+0x30],rax
  4139fc:	mov    eax,DWORD PTR [rbp+0x10]
  4139ff:	mov    DWORD PTR [rsp+0x28],eax
  413a03:	mov    eax,DWORD PTR [rbp+0xc]
  413a06:	mov    DWORD PTR [rsp+0x20],eax
  413a0a:	mov    edx,DWORD PTR [rbp+0x0]
  413a0d:	call   0x412b80
  413a12:	mov    edx,0x35
  413a17:	mov    r10d,DWORD PTR [rsp+0x84]
  413a1f:	mov    r11d,DWORD PTR [rsp+0x88]
  413a27:	jmp    0x412ee1
  413a2c:	mov    r9d,DWORD PTR [rbp+0x8]
  413a30:	mov    r8d,DWORD PTR [rbp+0x4]
  413a34:	mov    rcx,r15
  413a37:	mov    DWORD PTR [rsp+0x40],0x1
  413a3f:	mov    eax,DWORD PTR [rbp+0x20]
  413a42:	mov    DWORD PTR [rsp+0x88],r11d
  413a4a:	mov    DWORD PTR [rsp+0x84],r10d
  413a52:	mov    DWORD PTR [rsp+0x38],eax
  413a56:	mov    rax,QWORD PTR [rbp+0x18]
  413a5a:	mov    QWORD PTR [rsp+0x30],rax
  413a5f:	mov    eax,DWORD PTR [rbp+0x10]
  413a62:	mov    DWORD PTR [rsp+0x28],eax
  413a66:	mov    eax,DWORD PTR [rbp+0xc]
  413a69:	mov    DWORD PTR [rsp+0x20],eax
  413a6d:	mov    edx,DWORD PTR [rbp+0x0]
  413a70:	call   0x412b80
  413a75:	mov    edx,0x34
  413a7a:	mov    r10d,DWORD PTR [rsp+0x84]
  413a82:	mov    r11d,DWORD PTR [rsp+0x88]
  413a8a:	jmp    0x412ee1
  413a8f:	mov    eax,DWORD PTR [rbp+0x0]
  413a92:	mov    edx,DWORD PTR [rbp-0x28]
  413a95:	mov    rcx,r15
  413a98:	mov    r9d,DWORD PTR [rbp-0x20]
  413a9c:	mov    r8d,DWORD PTR [rbp-0x24]
  413aa0:	mov    DWORD PTR [rsp+0x88],r11d
  413aa8:	mov    DWORD PTR [rsp+0x84],r10d
  413ab0:	mov    DWORD PTR [rsp+0x40],eax
  413ab4:	mov    eax,DWORD PTR [rbp-0x8]
  413ab7:	mov    DWORD PTR [rsp+0x38],eax
  413abb:	mov    rax,QWORD PTR [rbp-0x10]
  413abf:	mov    QWORD PTR [rsp+0x30],rax
  413ac4:	mov    eax,DWORD PTR [rbp-0x18]
  413ac7:	mov    DWORD PTR [rsp+0x28],eax
  413acb:	mov    eax,DWORD PTR [rbp-0x1c]
  413ace:	mov    DWORD PTR [rsp+0x20],eax
  413ad2:	call   0x412b80
  413ad7:	mov    edx,0x33
  413adc:	mov    r10d,DWORD PTR [rsp+0x84]
  413ae4:	mov    r11d,DWORD PTR [rsp+0x88]
  413aec:	jmp    0x412ee1
  413af1:	mov    rax,QWORD PTR [rbp-0x50]
  413af5:	mov    rdx,QWORD PTR [rbp-0x48]
  413af9:	mov    QWORD PTR [r15+0x20],rax
  413afd:	mov    eax,DWORD PTR [rbp-0x24]
  413b00:	mov    QWORD PTR [r15+0x28],rdx
  413b04:	mov    edx,0x32
  413b09:	neg    eax
  413b0b:	mov    DWORD PTR [r15+0x30],eax
  413b0f:	mov    eax,DWORD PTR [rbp+0x4]
  413b12:	neg    eax
  413b14:	mov    DWORD PTR [r15+0x34],eax
  413b18:	jmp    0x412ee1
  413b1d:	mov    eax,DWORD PTR [rbp-0x4c]
  413b20:	mov    rdx,QWORD PTR [rbp+0x8]
  413b24:	mov    DWORD PTR [r15+0x34],eax
  413b28:	mov    eax,DWORD PTR [rbp-0x28]
  413b2b:	mov    QWORD PTR [r15+0x28],rdx
  413b2f:	mov    edx,0x30
  413b34:	mov    DWORD PTR [r15+0x30],eax
  413b38:	mov    rax,QWORD PTR [rbp+0x0]
  413b3c:	mov    QWORD PTR [r15+0x20],rax
  413b40:	jmp    0x412ee1
  413b45:	mov    eax,DWORD PTR [rbp-0x24]
  413b48:	mov    edx,0x2f
  413b4d:	mov    DWORD PTR [r15+0x34],eax
  413b51:	mov    eax,DWORD PTR [rbp+0x0]
  413b54:	mov    DWORD PTR [r15+0x30],eax
  413b58:	jmp    0x412ee1
  413b5d:	mov    eax,DWORD PTR [rbp-0x78]
  413b60:	mov    rdx,QWORD PTR [rbp+0x8]
  413b64:	mov    DWORD PTR [r15+0x30],eax
  413b68:	mov    eax,DWORD PTR [rbp-0x4c]
  413b6b:	mov    QWORD PTR [r15+0x28],rdx
  413b6f:	mov    edx,0x2e
  413b74:	mov    DWORD PTR [r15+0x34],eax
  413b78:	mov    rax,QWORD PTR [rbp+0x0]
  413b7c:	mov    QWORD PTR [r15+0x20],rax
  413b80:	jmp    0x412ee1
  413b85:	mov    edx,DWORD PTR [rbp-0x28]
  413b88:	xor    eax,eax
  413b8a:	mov    DWORD PTR [r15+0x10],0x1
  413b92:	test   edx,edx
  413b94:	mov    edx,0x1d
  413b99:	setg   al
  413b9c:	add    rax,0x1
  413ba0:	add    QWORD PTR [r15+0x98],rax
  413ba7:	jmp    0x412ee1
  413bac:	mov    eax,DWORD PTR [rbp+0x0]
  413baf:	mov    edx,0x1c
  413bb4:	test   eax,eax
  413bb6:	mov    DWORD PTR [r15+0x10],eax
  413bba:	setg   al
  413bbd:	movzx  eax,al
  413bc0:	add    QWORD PTR [r15+0x98],rax
  413bc7:	jmp    0x412ee1
  413bcc:	movzx  edx,BYTE PTR [rbp-0x28]
  413bd0:	mov    eax,DWORD PTR [rbp+0x0]
  413bd3:	lea    rcx,[r15+0xa8]
  413bda:	add    QWORD PTR [r15+0xa8],0x1
  413be2:	mov    r9,QWORD PTR [rbp-0x20]
  413be6:	mov    r8d,DWORD PTR [rbp-0x24]
  413bea:	mov    DWORD PTR [rsp+0x88],r11d
  413bf2:	mov    DWORD PTR [rsp+0x20],eax
  413bf6:	mov    DWORD PTR [rsp+0x84],r10d
  413bfe:	call   0x412be0
  413c03:	mov    edx,0x1b
  413c08:	mov    DWORD PTR [r15+0x14],eax
  413c0c:	mov    r10d,DWORD PTR [rsp+0x84]
  413c14:	mov    r11d,DWORD PTR [rsp+0x88]
  413c1c:	jmp    0x412ee1
  413c21:	mov    edx,DWORD PTR [rbp-0x74]
  413c24:	mov    r8d,DWORD PTR [rbp-0x20]
  413c28:	mov    rax,QWORD PTR [rbp-0x28]
  413c2c:	mov    ecx,DWORD PTR [rbp-0xc4]
  413c32:	mov    DWORD PTR [r15+0x18],0x2
  413c3a:	mov    DWORD PTR [r15+0x3c],edx
  413c3e:	mov    DWORD PTR [r15+0x48],r8d
  413c42:	mov    edx,0x18
  413c47:	mov    DWORD PTR [r15+0x38],ecx
  413c4b:	mov    QWORD PTR [r15+0x40],rax
  413c4f:	jmp    0x412ee1
  413c54:	mov    edx,DWORD PTR [rbp-0x74]
  413c57:	mov    eax,DWORD PTR [rbp-0x24]
  413c5a:	mov    QWORD PTR [r15+0x40],0x0
  413c62:	mov    DWORD PTR [r15+0x48],0x0
  413c6a:	mov    DWORD PTR [r15+0x18],0x2
  413c72:	mov    DWORD PTR [r15+0x38],edx
  413c76:	mov    DWORD PTR [r15+0x3c],eax
  413c7a:	mov    edx,0x17
  413c7f:	jmp    0x412ee1
  413c84:	mov    eax,DWORD PTR [rbp-0x24]
  413c87:	mov    DWORD PTR [r15+0x3c],0x0
  413c8f:	mov    edx,0x16
  413c94:	mov    QWORD PTR [r15+0x40],0x0
  413c9c:	mov    DWORD PTR [r15+0x48],0x0
  413ca4:	mov    DWORD PTR [r15+0x18],0x2
  413cac:	mov    DWORD PTR [r15+0x38],eax
  413cb0:	jmp    0x412ee1
  413cb5:	mov    rax,QWORD PTR [rbp-0x28]
  413cb9:	mov    edx,DWORD PTR [rbp-0x74]
  413cbc:	mov    r8d,DWORD PTR [rbp-0x20]
  413cc0:	mov    ecx,DWORD PTR [rbp-0xc4]
  413cc6:	mov    QWORD PTR [r15+0x40],rax
  413cca:	mov    eax,DWORD PTR [rbp+0x0]
  413ccd:	mov    DWORD PTR [r15+0x3c],edx
  413cd1:	mov    DWORD PTR [r15+0x38],ecx
  413cd5:	mov    edx,0x14
  413cda:	mov    DWORD PTR [r15+0x48],r8d
  413cde:	mov    DWORD PTR [r15+0x18],eax
  413ce2:	jmp    0x412ee1
  413ce7:	mov    eax,DWORD PTR [rbp-0x20]
  413cea:	mov    QWORD PTR [rsp+0x120],0x0
  413cf6:	mov    edx,0x47
  413cfb:	mov    QWORD PTR [rsp+0x128],0x0
  413d07:	mov    QWORD PTR [rsp+0x130],0x0
  413d13:	xor    r10d,r10d
  413d16:	mov    QWORD PTR [rsp+0x138],0x0
  413d22:	mov    QWORD PTR [rsp+0x140],0x0
  413d2e:	xor    r11d,r11d
  413d31:	mov    rsi,QWORD PTR [rbp-0x28]
  413d35:	mov    DWORD PTR [rsp+0x58],eax
  413d39:	xor    r13d,r13d
  413d3c:	jmp    0x412ee1
  413d41:	mov    QWORD PTR [rsp+0x120],0x0
  413d4d:	mov    QWORD PTR [rsp+0x128],0x0
  413d59:	mov    edx,0x46
  413d5e:	mov    QWORD PTR [rsp+0x130],0x0
  413d6a:	mov    QWORD PTR [rsp+0x138],0x0
  413d76:	xor    r10d,r10d
  413d79:	mov    QWORD PTR [rsp+0x140],0x0
  413d85:	movsxd rsi,DWORD PTR [rbp-0x24]
  413d89:	xor    r11d,r11d
  413d8c:	mov    DWORD PTR [rsp+0x58],0x0
  413d94:	xor    r13d,r13d
  413d97:	jmp    0x412ee1
  413d9c:	mov    QWORD PTR [rsp+0x120],0x0
  413da8:	mov    QWORD PTR [rsp+0x128],0x0
  413db4:	mov    edx,0x45
  413db9:	mov    QWORD PTR [rsp+0x130],0x0
  413dc5:	mov    QWORD PTR [rsp+0x138],0x0
  413dd1:	xor    r10d,r10d
  413dd4:	mov    QWORD PTR [rsp+0x140],0x0
  413de0:	movsxd rsi,DWORD PTR [rbp-0x28]
  413de4:	xor    r11d,r11d
  413de7:	mov    DWORD PTR [rsp+0x58],0x0
  413def:	xor    r13d,r13d
  413df2:	jmp    0x412ee1
  413df7:	mov    QWORD PTR [rsp+0x120],0x0
  413e03:	mov    QWORD PTR [rsp+0x130],0x0
  413e0f:	mov    edx,0x44
  413e14:	mov    QWORD PTR [rsp+0x140],0x0
  413e20:	mov    DWORD PTR [rsp+0x58],0x0
  413e28:	xor    esi,esi
  413e2a:	mov    r10d,0x1
  413e30:	xor    r11d,r11d
  413e33:	xor    r13d,r13d
  413e36:	jmp    0x412ee1
  413e3b:	mov    QWORD PTR [rsp+0x120],0x0
  413e47:	mov    QWORD PTR [rsp+0x128],0x0
  413e53:	mov    edx,0x43
  413e58:	mov    QWORD PTR [rsp+0x130],0x0
  413e64:	mov    QWORD PTR [rsp+0x138],0x0
  413e70:	xor    esi,esi
  413e72:	mov    QWORD PTR [rsp+0x140],0x0
  413e7e:	mov    r10d,DWORD PTR [rbp-0x24]
  413e82:	xor    r11d,r11d
  413e85:	mov    DWORD PTR [rsp+0x58],0x0
  413e8d:	xor    r13d,r13d
  413e90:	jmp    0x412ee1
  413e95:	mov    QWORD PTR [rsp+0x120],0x0
  413ea1:	mov    QWORD PTR [rsp+0x128],0x0
  413ead:	mov    edx,0x42
  413eb2:	mov    QWORD PTR [rsp+0x130],0x0
  413ebe:	mov    QWORD PTR [rsp+0x138],0x0
  413eca:	xor    esi,esi
  413ecc:	mov    QWORD PTR [rsp+0x140],0x0
  413ed8:	mov    r10d,DWORD PTR [rbp-0x28]
  413edc:	xor    r11d,r11d
  413edf:	mov    DWORD PTR [rsp+0x58],0x0
  413ee7:	xor    r13d,r13d
  413eea:	jmp    0x412ee1
  413eef:	mov    QWORD PTR [rsp+0x120],0x0
  413efb:	mov    QWORD PTR [rsp+0x130],0x0
  413f07:	mov    edx,0x41
  413f0c:	mov    QWORD PTR [rsp+0x140],0x0
  413f18:	mov    DWORD PTR [rsp+0x58],0x0
  413f20:	xor    esi,esi
  413f22:	xor    r10d,r10d
  413f25:	mov    r11d,0x1
  413f2b:	xor    r13d,r13d
  413f2e:	jmp    0x412ee1
  413f33:	mov    QWORD PTR [rsp+0x120],0x0
  413f3f:	mov    QWORD PTR [rsp+0x128],0x0
  413f4b:	mov    edx,0x40
  413f50:	mov    QWORD PTR [rsp+0x130],0x0
  413f5c:	mov    QWORD PTR [rsp+0x138],0x0
  413f68:	xor    esi,esi
  413f6a:	mov    QWORD PTR [rsp+0x140],0x0
  413f76:	mov    r11d,DWORD PTR [rbp-0x24]
  413f7a:	xor    r10d,r10d
  413f7d:	mov    DWORD PTR [rsp+0x58],0x0
  413f85:	xor    r13d,r13d
  413f88:	jmp    0x412ee1
  413f8d:	mov    QWORD PTR [rsp+0x120],0x0
  413f99:	mov    QWORD PTR [rsp+0x128],0x0
  413fa5:	mov    edx,0x3f
  413faa:	mov    QWORD PTR [rsp+0x130],0x0
  413fb6:	mov    QWORD PTR [rsp+0x138],0x0
  413fc2:	xor    esi,esi
  413fc4:	mov    QWORD PTR [rsp+0x140],0x0
  413fd0:	mov    r11d,DWORD PTR [rbp-0x28]
  413fd4:	xor    r10d,r10d
  413fd7:	mov    DWORD PTR [rsp+0x58],0x0
  413fdf:	xor    r13d,r13d
  413fe2:	jmp    0x412ee1
  413fe7:	mov    QWORD PTR [rsp+0x120],0x0
  413ff3:	mov    QWORD PTR [rsp+0x128],0x0
  413fff:	mov    edx,0x3e
  414004:	mov    QWORD PTR [rsp+0x130],0x0
  414010:	mov    QWORD PTR [rsp+0x138],0x0
  41401c:	xor    esi,esi
  41401e:	mov    QWORD PTR [rsp+0x140],0x0
  41402a:	mov    r13d,DWORD PTR [rbp+0x0]
  41402e:	xor    r10d,r10d
  414031:	mov    DWORD PTR [rsp+0x58],0x0
  414039:	xor    r11d,r11d
  41403c:	jmp    0x412ee1
  414041:	mov    r13d,DWORD PTR [rbp-0x24]
  414045:	mov    QWORD PTR [rsp+0x120],0x0
  414051:	mov    edx,0x3d
  414056:	mov    QWORD PTR [rsp+0x128],0x0
  414062:	mov    QWORD PTR [rsp+0x130],0x0
  41406e:	xor    esi,esi
  414070:	mov    QWORD PTR [rsp+0x138],0x0
  41407c:	mov    QWORD PTR [rsp+0x140],0x0
  414088:	xor    r10d,r10d
  41408b:	imul   r13d,DWORD PTR [rbp+0x0]
  414090:	mov    DWORD PTR [rsp+0x58],0x0
  414098:	xor    r11d,r11d
  41409b:	jmp    0x412ee1
  4140a0:	mov    r13d,DWORD PTR [rbp-0x28]
  4140a4:	mov    QWORD PTR [rsp+0x120],0x0
  4140b0:	mov    edx,0x3c
  4140b5:	mov    QWORD PTR [rsp+0x128],0x0
  4140c1:	mov    QWORD PTR [rsp+0x130],0x0
  4140cd:	xor    esi,esi
  4140cf:	mov    QWORD PTR [rsp+0x138],0x0
  4140db:	mov    QWORD PTR [rsp+0x140],0x0
  4140e7:	xor    r10d,r10d
  4140ea:	imul   r13d,DWORD PTR [rbp+0x0]
  4140ef:	mov    DWORD PTR [rsp+0x58],0x0
  4140f7:	xor    r11d,r11d
  4140fa:	jmp    0x412ee1
  4140ff:	mov    QWORD PTR [rsp+0x120],0x0
  41410b:	mov    QWORD PTR [rsp+0x130],0x0
  414117:	mov    edx,0x3b
  41411c:	mov    QWORD PTR [rsp+0x140],0x0
  414128:	mov    DWORD PTR [rsp+0x124],0x1
  414133:	jmp    0x413964
  414138:	mov    eax,DWORD PTR [rbp-0x24]
  41413b:	mov    QWORD PTR [rsp+0x120],0x0
  414147:	mov    edx,0x3a
  41414c:	mov    QWORD PTR [rsp+0x128],0x0
  414158:	mov    QWORD PTR [rsp+0x130],0x0
  414164:	mov    QWORD PTR [rsp+0x138],0x0
  414170:	mov    QWORD PTR [rsp+0x140],0x0
  41417c:	mov    DWORD PTR [rsp+0x124],eax
  414183:	jmp    0x413964
  414188:	mov    eax,DWORD PTR [rbp-0x28]
  41418b:	mov    QWORD PTR [rsp+0x120],0x0
  414197:	mov    edx,0x39
  41419c:	mov    QWORD PTR [rsp+0x128],0x0
  4141a8:	mov    QWORD PTR [rsp+0x130],0x0
  4141b4:	mov    QWORD PTR [rsp+0x138],0x0
  4141c0:	mov    QWORD PTR [rsp+0x140],0x0
  4141cc:	mov    DWORD PTR [rsp+0x124],eax
  4141d3:	jmp    0x413964
  4141d8:	mov    QWORD PTR [rsp+0x120],0x0
  4141e4:	mov    QWORD PTR [rsp+0x130],0x0
  4141f0:	mov    edx,0x38
  4141f5:	mov    QWORD PTR [rsp+0x140],0x0
  414201:	mov    DWORD PTR [rsp+0x120],0x1
  41420c:	jmp    0x413964
  414211:	mov    eax,DWORD PTR [rbp-0x24]
  414214:	mov    QWORD PTR [rsp+0x120],0x0
  414220:	mov    edx,0x4c
  414225:	mov    QWORD PTR [rsp+0x128],0x0
  414231:	mov    QWORD PTR [rsp+0x130],0x0
  41423d:	mov    QWORD PTR [rsp+0x138],0x0
  414249:	mov    QWORD PTR [rsp+0x140],0x0
  414255:	mov    DWORD PTR [rsp+0x124],eax
  41425c:	jmp    0x413964
  414261:	mov    eax,DWORD PTR [rbp-0x24]
  414264:	mov    QWORD PTR [rsp+0x120],0x0
  414270:	mov    edx,0x4b
  414275:	mov    QWORD PTR [rsp+0x128],0x0
  414281:	mov    QWORD PTR [rsp+0x130],0x0
  41428d:	mov    QWORD PTR [rsp+0x138],0x0
  414299:	mov    QWORD PTR [rsp+0x140],0x0
  4142a5:	mov    DWORD PTR [rsp+0x120],eax
  4142ac:	jmp    0x413964
  4142b1:	mov    QWORD PTR [rsp+0x120],0x0
  4142bd:	mov    QWORD PTR [rsp+0x130],0x0
  4142c9:	mov    edx,0x49
  4142ce:	mov    QWORD PTR [rsp+0x140],0x0
  4142da:	mov    DWORD PTR [rsp+0x58],0x0
  4142e2:	mov    esi,0x1
  4142e7:	xor    r10d,r10d
  4142ea:	xor    r11d,r11d
  4142ed:	xor    r13d,r13d
  4142f0:	jmp    0x412ee1
  4142f5:	mov    eax,DWORD PTR [rbp-0x20]
  4142f8:	mov    QWORD PTR [rsp+0x120],0x0
  414304:	mov    edx,0x48
  414309:	mov    QWORD PTR [rsp+0x128],0x0
  414315:	mov    QWORD PTR [rsp+0x130],0x0
  414321:	xor    r10d,r10d
  414324:	mov    QWORD PTR [rsp+0x138],0x0
  414330:	mov    QWORD PTR [rsp+0x140],0x0
  41433c:	xor    r11d,r11d
  41433f:	mov    rsi,QWORD PTR [rbp-0x28]
  414343:	mov    DWORD PTR [rsp+0x58],eax
  414347:	xor    r13d,r13d
  41434a:	jmp    0x412ee1
  41434f:	mov    DWORD PTR [rsp+0x120],0xffffffff
  41435a:	mov    edx,0x5a
  41435f:	jmp    0x412ee1
  414364:	mov    rdx,QWORD PTR [rbp-0x20]
  414368:	mov    rax,QWORD PTR [rbp-0x28]
  41436c:	mov    rcx,r15
  41436f:	mov    DWORD PTR [rsp+0x88],r11d
  414377:	mov    DWORD PTR [rsp+0x84],r10d
  41437f:	mov    QWORD PTR [rsp+0x98],rdx
  414387:	mov    rdx,QWORD PTR [rsp+0x70]
  41438c:	mov    QWORD PTR [rsp+0x90],rax
  414394:	call   0x412980
  414399:	mov    r9d,DWORD PTR [rbp+0x8]
  41439d:	mov    r8d,DWORD PTR [rbp+0x4]
  4143a1:	mov    rcx,r15
  4143a4:	mov    DWORD PTR [rsp+0x40],0x1
  4143ac:	mov    eax,DWORD PTR [rbp+0x20]
  4143af:	mov    DWORD PTR [rsp+0x38],eax
  4143b3:	mov    rax,QWORD PTR [rbp+0x18]
  4143b7:	mov    QWORD PTR [rsp+0x30],rax
  4143bc:	mov    eax,DWORD PTR [rbp+0x10]
  4143bf:	mov    DWORD PTR [rsp+0x28],eax
  4143c3:	mov    eax,DWORD PTR [rbp+0xc]
  4143c6:	mov    DWORD PTR [rsp+0x20],eax
  4143ca:	mov    edx,DWORD PTR [rbp+0x0]
  4143cd:	call   0x412b80
  4143d2:	mov    edx,0x59
  4143d7:	mov    r10d,DWORD PTR [rsp+0x84]
  4143df:	mov    r11d,DWORD PTR [rsp+0x88]
  4143e7:	jmp    0x412ee1
  4143ec:	mov    eax,DWORD PTR [rbp+0x4]
  4143ef:	mov    edx,0x5b
  4143f4:	mov    DWORD PTR [rsp+0x120],eax
  4143fb:	jmp    0x412ee1
  414400:	mov    rdx,QWORD PTR [rbp+0x8]
  414404:	mov    rax,QWORD PTR [rbp+0x0]
  414408:	mov    BYTE PTR [r15+0x78],0x1
  41440d:	mov    QWORD PTR [r15+0x48],rdx
  414411:	mov    QWORD PTR [r15+0x40],rax
  414415:	mov    edx,0x4
  41441a:	jmp    0x412ee1
  41441f:	mov    eax,DWORD PTR [rbp-0x24]
  414422:	mov    edx,DWORD PTR [rbp-0x74]
  414425:	mov    QWORD PTR [r15+0x40],0x0
  41442d:	mov    DWORD PTR [r15+0x48],0x0
  414435:	mov    DWORD PTR [r15+0x3c],eax
  414439:	mov    eax,DWORD PTR [rbp+0x0]
  41443c:	mov    DWORD PTR [r15+0x38],edx
  414440:	mov    edx,0x13
  414445:	mov    DWORD PTR [r15+0x18],eax
  414449:	jmp    0x412ee1
  41444e:	add    rcx,0x1
  414452:	mov    rdx,QWORD PTR [rsp+0x68]
  414457:	mov    r8,QWORD PTR [rsp+0x78]
  41445c:	jmp    0x414464
  41445e:	xchg   ax,ax
  414460:	add    rcx,0x1
  414464:	cmp    rdx,r8
  414467:	jae    0x414470
  414469:	mov    BYTE PTR [rdx],r10b
  41446c:	add    rdx,0x1
  414470:	mov    QWORD PTR [r15],rcx
  414473:	movzx  r10d,BYTE PTR [rcx]
  414477:	mov    eax,r10d
  41447a:	and    eax,0xdf
  41447f:	sub    eax,0x41
  414482:	cmp    eax,0x19
  414485:	jbe    0x414460
  414487:	cmp    r10b,0x2e
  41448b:	je     0x414460
  41448d:	mov    BYTE PTR [rdx],0x0
  414490:	movzx  eax,BYTE PTR [rsp+0xa0]
  414498:	mov    rcx,QWORD PTR [rsp+0x68]
  41449d:	test   al,al
  41449f:	je     0x4144bd
  4144a1:	lea    r8d,[rax-0x61]
  4144a5:	lea    edx,[rax-0x20]
  4144a8:	cmp    r8d,0x19
  4144ac:	cmovbe eax,edx
  4144af:	add    rcx,0x1
  4144b3:	mov    BYTE PTR [rcx-0x1],al
  4144b6:	movzx  eax,BYTE PTR [rcx]
  4144b9:	test   al,al
  4144bb:	jne    0x4144a1
  4144bd:	lea    rsi,[rip+0x23bfc]        # 0x4380c0
  4144c4:	lea    rdx,[rip+0x22e8e]        # 0x437359
  4144cb:	mov    edi,r9d
  4144ce:	jmp    0x4144e0
  4144d0:	add    rsi,0x10
  4144d4:	mov    rdx,QWORD PTR [rsi]
  4144d7:	test   rdx,rdx
  4144da:	je     0x4146ae
  4144e0:	mov    rcx,QWORD PTR [rsp+0x68]
  4144e5:	call   0x42de50
  4144ea:	test   eax,eax
  4144ec:	jne    0x4144d0
  4144ee:	mov    r9d,edi
  4144f1:	mov    rax,rsi
  4144f4:	mov    edx,DWORD PTR [rax+0xc]
  4144f7:	mov    edi,DWORD PTR [rax+0x8]
  4144fa:	mov    DWORD PTR [rsp+0xc0],edx
  414501:	jmp    0x412dcb
  414506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414510:	mov    eax,0x2
  414515:	jmp    0x413098
  41451a:	movzx  r11d,BYTE PTR [rcx+0x1]
  41451f:	lea    r10,[rcx+0x1]
  414523:	lea    esi,[r11-0x30]
  414527:	mov    edx,r11d
  41452a:	cmp    esi,0x9
  41452d:	ja     0x4130cb
  414533:	lea    edx,[r8+r8*4]
  414537:	add    edx,edx
  414539:	lea    r8d,[rdx+r11*1-0x30]
  41453e:	cmp    r8d,edx
  414541:	jb     0x414564
  414543:	add    r10,0x1
  414547:	movzx  r11d,BYTE PTR [r10]
  41454b:	lea    esi,[r11-0x30]
  41454f:	mov    edx,r11d
  414552:	cmp    esi,0x9
  414555:	ja     0x4130cb
  41455b:	cmp    r8d,0x19999999
  414562:	jbe    0x414533
  414564:	mov    edi,0x3f
  414569:	lea    rdx,[rip+0x23f10]        # 0x438480
  414570:	movsxd rax,edi
  414573:	movzx  eax,BYTE PTR [rdx+rax*1]
  414577:	jmp    0x412de4
  41457c:	mov    edx,eax
  41457e:	shr    edx,0x1f
  414581:	cmp    eax,0xffffffff
  414584:	mov    BYTE PTR [rsp+0xc0],dl
  41458b:	je     0x4145bd
  41458d:	test   r8d,r8d
  414590:	mov    DWORD PTR [rsp+0xc4],r8d
  414598:	js     0x414564
  41459a:	mov    rdx,r10
  41459d:	mov    QWORD PTR [r15],r10
  4145a0:	sub    rdx,rcx
  4145a3:	cmp    eax,0x1
  4145a6:	sbb    edi,edi
  4145a8:	mov    QWORD PTR [rsp+0xc8],rdx
  4145b0:	not    edi
  4145b2:	add    edi,0x113
  4145b8:	jmp    0x4131a0
  4145bd:	neg    r8d
  4145c0:	test   r8d,r8d
  4145c3:	mov    DWORD PTR [rsp+0xc4],r8d
  4145cb:	jg     0x414564
  4145cd:	mov    rax,r10
  4145d0:	mov    QWORD PTR [r15],r10
  4145d3:	mov    edi,0x112
  4145d8:	sub    rax,rcx
  4145db:	mov    QWORD PTR [rsp+0xc8],rax
  4145e3:	jmp    0x4131a0
  4145e8:	mov    eax,DWORD PTR [rbp-0x9c]
  4145ee:	mov    rdx,QWORD PTR [rbp+0x8]
  4145f2:	mov    DWORD PTR [r15+0x30],eax
  4145f6:	mov    eax,DWORD PTR [rbp-0x4c]
  4145f9:	mov    QWORD PTR [r15+0x28],rdx
  4145fd:	mov    edx,0x2a
  414602:	mov    DWORD PTR [r15+0x34],eax
  414606:	mov    rax,QWORD PTR [rbp+0x0]
  41460a:	mov    QWORD PTR [r15+0x20],rax
  41460e:	jmp    0x412ee1
  414613:	cmp    eax,0x1
  414616:	mov    QWORD PTR [rsp+0xc0],rsi
  41461e:	mov    DWORD PTR [rsp+0xc8],r10d
  414626:	sbb    edi,edi
  414628:	mov    QWORD PTR [r15],rcx
  41462b:	not    edi
  41462d:	add    edi,0x115
  414633:	jmp    0x4131a0
  414638:	test   r8d,r8d
  41463b:	jne    0x414564
  414641:	xor    esi,esi
  414643:	jmp    0x4130f6
  414648:	nop    DWORD PTR [rax+rax*1+0x0]
  414650:	cmp    r8d,0x9
  414654:	ja     0x41313f
  41465a:	cmp    dil,0x30
  41465e:	je     0x414668
  414660:	jmp    0x4146a5
  414662:	cmp    r11b,0x30
  414666:	jne    0x4146a5
  414668:	add    rcx,0x1
  41466c:	movsx  r8d,BYTE PTR [rcx]
  414670:	mov    r11d,r8d
  414673:	sub    r8d,0x30
  414677:	cmp    r8d,0x9
  41467b:	jbe    0x414662
  41467d:	test   edx,edx
  41467f:	jne    0x41316a
  414685:	mov    QWORD PTR [rsp+0xc0],rsi
  41468d:	mov    DWORD PTR [rsp+0xc8],0x0
  414698:	mov    edi,0x114
  41469d:	mov    QWORD PTR [r15],rcx
  4146a0:	jmp    0x4131a0
  4146a5:	lea    r10d,[rdx+0x1]
  4146a9:	jmp    0x41313f
  4146ae:	mov    r10,QWORD PTR [rsp+0x68]
  4146b3:	mov    r9d,edi
  4146b6:	mov    edx,DWORD PTR [r10]
  4146b9:	add    r10,0x4
  4146bd:	lea    eax,[rdx-0x1010101]
  4146c3:	not    edx
  4146c5:	and    eax,edx
  4146c7:	and    eax,0x80808080
  4146cc:	je     0x4146b6
  4146ce:	mov    edx,eax
  4146d0:	mov    edi,0x1
  4146d5:	shr    edx,0x10
  4146d8:	test   eax,0x8080
  4146dd:	cmove  eax,edx
  4146e0:	lea    rdx,[r10+0x2]
  4146e4:	cmove  r10,rdx
  4146e8:	add    al,al
  4146ea:	sbb    r10,0x3
  4146ee:	sub    r10,QWORD PTR [rsp+0x68]
  4146f3:	cmp    r10,0x3
  4146f7:	je     0x414702
  4146f9:	xor    dil,dil
  4146fc:	cmp    r10,0x4
  414700:	je     0x414760
  414702:	lea    rsi,[rip+0x237f7]        # 0x437f00
  414709:	mov    QWORD PTR [rsp+0x58],rbx
  41470e:	lea    rdx,[rip+0x22c47]        # 0x43735c
  414715:	mov    DWORD PTR [rsp+0x60],r9d
  41471a:	mov    rbx,rsi
  41471d:	mov    rsi,r10
  414720:	jmp    0x41474b
  414722:	mov    rcx,QWORD PTR [rsp+0x68]
  414727:	mov    r8d,0x3
  41472d:	call   0x42de28
  414732:	test   eax,eax
  414734:	sete   al
  414737:	test   al,al
  414739:	jne    0x4147f9
  41473f:	add    rbx,0x10
  414743:	mov    rdx,QWORD PTR [rbx]
  414746:	test   rdx,rdx
  414749:	je     0x414770
  41474b:	test   edi,edi
  41474d:	jne    0x414722
  41474f:	mov    rcx,QWORD PTR [rsp+0x68]
  414754:	call   0x42de50
  414759:	test   eax,eax
  41475b:	sete   al
  41475e:	jmp    0x414737
  414760:	xor    edi,edi
  414762:	cmp    BYTE PTR [rsp+0xa3],0x2e
  41476a:	sete   dil
  41476e:	jmp    0x414702
  414770:	mov    rdx,QWORD PTR [rsp+0x68]
  414775:	mov    rcx,r15
  414778:	mov    rbx,QWORD PTR [rsp+0x58]
  41477d:	mov    QWORD PTR [rsp+0x58],rsi
  414782:	call   0x412c50
  414787:	test   rax,rax
  41478a:	mov    r10,QWORD PTR [rsp+0x58]
  41478f:	mov    r9d,DWORD PTR [rsp+0x60]
  414794:	jne    0x4144f4
  41479a:	mov    rsi,QWORD PTR [rsp+0x68]
  41479f:	lea    rdi,[rip+0x22bcc]        # 0x437372
  4147a6:	mov    ecx,0x4
  4147ab:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4147ad:	je     0x4148a4
  4147b3:	lea    rsi,[rip+0x235c6]        # 0x437d80
  4147ba:	lea    rdx,[rip+0x22ba3]        # 0x437364
  4147c1:	mov    edi,r9d
  4147c4:	jmp    0x4147e1
  4147c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4147d0:	add    rsi,0x10
  4147d4:	mov    rdx,QWORD PTR [rsi]
  4147d7:	mov    r10,QWORD PTR [rsp+0x58]
  4147dc:	test   rdx,rdx
  4147df:	je     0x41480e
  4147e1:	mov    rcx,QWORD PTR [rsp+0x68]
  4147e6:	mov    QWORD PTR [rsp+0x58],r10
  4147eb:	call   0x42de50
  4147f0:	test   eax,eax
  4147f2:	jne    0x4147d0
  4147f4:	jmp    0x4144ee
  4147f9:	mov    rsi,rbx
  4147fc:	mov    r9d,DWORD PTR [rsp+0x60]
  414801:	mov    rbx,QWORD PTR [rsp+0x58]
  414806:	mov    rax,rsi
  414809:	jmp    0x4144f4
  41480e:	mov    rax,QWORD PTR [rsp+0x68]
  414813:	mov    r9d,edi
  414816:	lea    rdi,[rax+r10*1-0x1]
  41481b:	cmp    BYTE PTR [rdi],0x53
  41481e:	je     0x4148b0
  414824:	lea    rsi,[rip+0x23395]        # 0x437bc0
  41482b:	lea    rdx,[rip+0x22b37]        # 0x437369
  414832:	mov    edi,r9d
  414835:	mov    rcx,QWORD PTR [rsp+0x68]
  41483a:	mov    QWORD PTR [rsp+0x58],r10
  41483f:	call   0x42de50
  414844:	test   eax,eax
  414846:	je     0x4144ee
  41484c:	add    rsi,0x10
  414850:	mov    rdx,QWORD PTR [rsi]
  414853:	mov    r10,QWORD PTR [rsp+0x58]
  414858:	test   rdx,rdx
  41485b:	jne    0x414835
  41485d:	cmp    r10,0x1
  414861:	mov    r9d,edi
  414864:	movzx  edx,BYTE PTR [rsp+0xa0]
  41486c:	je     0x414934
  414872:	test   dl,dl
  414874:	je     0x414564
  41487a:	mov    rax,QWORD PTR [rsp+0x68]
  41487f:	xor    r8d,r8d
  414882:	mov    rcx,rax
  414885:	cmp    dl,0x2e
  414888:	je     0x414929
  41488e:	add    rcx,0x1
  414892:	add    rax,0x1
  414896:	movzx  edx,BYTE PTR [rax]
  414899:	test   dl,dl
  41489b:	mov    BYTE PTR [rcx],dl
  41489d:	je     0x4148fb
  41489f:	movzx  edx,BYTE PTR [rax]
  4148a2:	jmp    0x414885
  4148a4:	lea    rax,[rip+0x237e5]        # 0x438090
  4148ab:	jmp    0x4144f4
  4148b0:	lea    rsi,[rip+0x234c9]        # 0x437d80
  4148b7:	lea    rdx,[rip+0x22aa6]        # 0x437364
  4148be:	mov    BYTE PTR [rdi],0x0
  4148c1:	mov    rcx,QWORD PTR [rsp+0x68]
  4148c6:	mov    DWORD PTR [rsp+0x58],r9d
  4148cb:	mov    QWORD PTR [rsp+0x60],r10
  4148d0:	call   0x42de50
  4148d5:	test   eax,eax
  4148d7:	mov    r9d,DWORD PTR [rsp+0x58]
  4148dc:	je     0x4144f1
  4148e2:	add    rsi,0x10
  4148e6:	mov    rdx,QWORD PTR [rsi]
  4148e9:	mov    r10,QWORD PTR [rsp+0x60]
  4148ee:	test   rdx,rdx
  4148f1:	jne    0x4148c1
  4148f3:	mov    BYTE PTR [rdi],0x53
  4148f6:	jmp    0x414824
  4148fb:	test   r8b,r8b
  4148fe:	je     0x414564
  414904:	mov    rdx,QWORD PTR [rsp+0x68]
  414909:	mov    rcx,r15
  41490c:	mov    DWORD PTR [rsp+0x58],r9d
  414911:	call   0x412c50
  414916:	test   rax,rax
  414919:	mov    r9d,DWORD PTR [rsp+0x58]
  41491e:	jne    0x4144f4
  414924:	jmp    0x414564
  414929:	mov    r8d,0x1
  41492f:	jmp    0x414892
  414934:	cmp    dl,0x41
  414937:	lea    rax,[rip+0x22c02]        # 0x437540
  41493e:	je     0x4144f4
  414944:	add    rax,0x10
  414948:	mov    rcx,QWORD PTR [rax]
  41494b:	test   rcx,rcx
  41494e:	je     0x414872
  414954:	cmp    BYTE PTR [rcx],dl
  414956:	jne    0x414944
  414958:	jmp    0x4144f4
  41495d:	nop    DWORD PTR [rax]
  414960:	push   r15
  414962:	push   r14
  414964:	push   r13
  414966:	push   r12
  414968:	push   rbp
  414969:	push   rdi
  41496a:	push   rsi
  41496b:	push   rbx
  41496c:	sub    rsp,0x228
  414973:	test   r8,r8
  414976:	mov    rdi,rcx
  414979:	mov    r12,rdx
  41497c:	je     0x414fe1
  414982:	mov    rcx,r8
  414985:	mov    r13d,DWORD PTR [r8+0x8]
  414989:	call   0x412520
  41498e:	test   rax,rax
  414991:	mov    r14,rax
  414994:	je     0x414fc0
  41499a:	nop    WORD PTR [rax+rax*1+0x0]
  4149a0:	movzx  ebx,BYTE PTR [r12]
  4149a5:	lea    eax,[rbx-0x9]
  4149a8:	cmp    al,0x4
  4149aa:	jbe    0x414c20
  4149b0:	cmp    bl,0x20
  4149b3:	je     0x414c20
  4149b9:	lea    rdx,[rip+0x22b1c]        # 0x4374dc
  4149c0:	mov    r8d,0x4
  4149c6:	mov    rcx,r12
  4149c9:	call   0x42de28
  4149ce:	test   eax,eax
  4149d0:	je     0x414c29
  4149d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4149e0:	lea    rsi,[rsp+0xd0]
  4149e8:	mov    edx,ebx
  4149ea:	xor    ebp,ebp
  4149ec:	xor    ebx,ebx
  4149ee:	lea    rax,[rip+0x22ae3]        # 0x4374d8
  4149f5:	test   dl,dl
  4149f7:	cmove  r12,rax
  4149fb:	mov    eax,DWORD PTR [r14+0x14]
  4149ff:	mov    QWORD PTR [rsp+0x168],0x0
  414a0b:	mov    QWORD PTR [rsp+0x140],r12
  414a13:	add    eax,0x76c
  414a18:	mov    DWORD PTR [rsp+0x164],eax
  414a1f:	mov    eax,DWORD PTR [r14+0x10]
  414a23:	add    eax,0x1
  414a26:	mov    DWORD PTR [rsp+0x170],eax
  414a2d:	mov    eax,DWORD PTR [r14+0xc]
  414a31:	mov    DWORD PTR [rsp+0x174],eax
  414a38:	mov    eax,DWORD PTR [r14+0x8]
  414a3c:	mov    DWORD PTR [rsp+0x178],eax
  414a43:	mov    eax,DWORD PTR [r14+0x4]
  414a47:	mov    DWORD PTR [rsp+0x17c],eax
  414a4e:	movsxd rax,DWORD PTR [r14]
  414a51:	mov    DWORD PTR [rsp+0x188],r13d
  414a59:	mov    QWORD PTR [rsp+0x180],rax
  414a61:	mov    eax,DWORD PTR [r14+0x20]
  414a65:	mov    DWORD PTR [rsp+0x158],0x2
  414a70:	mov    QWORD PTR [rsp+0x190],0x0
  414a7c:	mov    QWORD PTR [rsp+0x198],0x0
  414a88:	mov    QWORD PTR [rsp+0x1a0],0x0
  414a94:	mov    DWORD PTR [rsp+0x90],eax
  414a9b:	mov    rax,QWORD PTR [rip+0x33fee]        # 0x448a90
  414aa2:	mov    QWORD PTR [rsp+0x1a8],0x0
  414aae:	mov    QWORD PTR [rsp+0x1b0],0x0
  414aba:	mov    BYTE PTR [rsp+0x1b8],0x0
  414ac2:	mov    BYTE PTR [rsp+0x1b9],0x0
  414aca:	mov    rcx,QWORD PTR [rax]
  414acd:	mov    QWORD PTR [rsp+0x1c0],0x0
  414ad9:	mov    QWORD PTR [rsp+0x1c8],0x0
  414ae5:	mov    QWORD PTR [rsp+0x1e0],0x0
  414af1:	mov    QWORD PTR [rsp+0x1d0],0x0
  414afd:	mov    QWORD PTR [rsp+0x1d8],0x0
  414b09:	mov    QWORD PTR [rsp+0x1e8],0x0
  414b15:	mov    QWORD PTR [rsp+0x1f0],rcx
  414b1d:	test   rcx,rcx
  414b20:	mov    rdx,QWORD PTR [rax+0x8]
  414b24:	mov    DWORD PTR [rsp+0x1f8],0x10d
  414b2f:	mov    DWORD PTR [rsp+0x1fc],0x0
  414b3a:	mov    DWORD PTR [rsp+0x208],0x10d
  414b45:	mov    DWORD PTR [rsp+0x20c],0x1
  414b50:	mov    QWORD PTR [rsp+0x210],0x0
  414b5c:	mov    QWORD PTR [rsp+0x200],rdx
  414b64:	je     0x414b8b
  414b66:	test   rdx,rdx
  414b69:	je     0x414b8b
  414b6b:	call   0x42de50
  414b70:	test   eax,eax
  414b72:	jne    0x414b8b
  414b74:	mov    DWORD PTR [rsp+0x1fc],0xffffffff
  414b7f:	mov    QWORD PTR [rsp+0x200],0x0
  414b8b:	lea    rcx,[rsp+0x140]
  414b93:	xor    r15d,r15d
  414b96:	call   0x412d40
  414b9b:	test   eax,eax
  414b9d:	jne    0x414bca
  414b9f:	cmp    BYTE PTR [rsp+0x1b8],0x0
  414ba7:	je     0x414c90
  414bad:	mov    rax,QWORD PTR [rsp+0x180]
  414bb5:	mov    rdx,QWORD PTR [rsp+0x188]
  414bbd:	mov    r15d,0x1
  414bc3:	mov    QWORD PTR [rdi],rax
  414bc6:	mov    QWORD PTR [rdi+0x8],rdx
  414bca:	test   bpl,bpl
  414bcd:	je     0x414bf8
  414bcf:	test   rbx,rbx
  414bd2:	je     0x414fc8
  414bd8:	lea    rcx,[rip+0x22761]        # 0x437340
  414bdf:	mov    r8d,0x1
  414be5:	mov    rdx,rbx
  414be8:	call   0x415bb0
  414bed:	test   eax,eax
  414bef:	sete   al
  414bf2:	movzx  eax,al
  414bf5:	and    r15d,eax
  414bf8:	cmp    rbx,rsi
  414bfb:	je     0x414c05
  414bfd:	mov    rcx,rbx
  414c00:	call   0x42df08
  414c05:	mov    eax,r15d
  414c08:	add    rsp,0x228
  414c0f:	pop    rbx
  414c10:	pop    rsi
  414c11:	pop    rdi
  414c12:	pop    rbp
  414c13:	pop    r12
  414c15:	pop    r13
  414c17:	pop    r14
  414c19:	pop    r15
  414c1b:	ret    
  414c1c:	nop    DWORD PTR [rax+0x0]
  414c20:	add    r12,0x1
  414c24:	jmp    0x4149a0
  414c29:	movzx  edx,BYTE PTR [r12+0x4]
  414c2f:	lea    rbp,[r12+0x4]
  414c34:	test   dl,dl
  414c36:	je     0x4149e0
  414c3c:	mov    r8,rbp
  414c3f:	mov    r9d,0x1
  414c45:	jmp    0x414c70
  414c47:	nop    WORD PTR [rax+rax*1+0x0]
  414c50:	cmp    dl,0x22
  414c53:	je     0x414ee0
  414c59:	mov    rax,r8
  414c5c:	movzx  edx,BYTE PTR [rax+0x1]
  414c60:	add    r9,0x1
  414c64:	lea    r8,[rax+0x1]
  414c68:	test   dl,dl
  414c6a:	je     0x4149e0
  414c70:	cmp    dl,0x5c
  414c73:	jne    0x414c50
  414c75:	movzx  edx,BYTE PTR [r8+0x1]
  414c7a:	lea    rax,[r8+0x1]
  414c7e:	cmp    dl,0x22
  414c81:	je     0x414c5c
  414c83:	cmp    dl,0x5c
  414c86:	je     0x414c5c
  414c88:	jmp    0x4149e0
  414c8d:	nop    DWORD PTR [rax]
  414c90:	mov    r11,QWORD PTR [rsp+0x1c0]
  414c98:	mov    r8,QWORD PTR [rsp+0x1e0]
  414ca0:	mov    r10,QWORD PTR [rsp+0x1c8]
  414ca8:	mov    r9,QWORD PTR [rsp+0x1d0]
  414cb0:	mov    rax,r11
  414cb3:	or     rax,r8
  414cb6:	mov    rdx,r9
  414cb9:	add    rdx,QWORD PTR [rsp+0x1e8]
  414cc1:	or     rax,r10
  414cc4:	mov    rcx,rax
  414cc7:	or     rcx,QWORD PTR [rsp+0x1d8]
  414ccf:	or     rdx,rcx
  414cd2:	cmp    rdx,0x1
  414cd6:	ja     0x414bca
  414cdc:	mov    edx,DWORD PTR [rsp+0x164]
  414ce3:	mov    rcx,QWORD PTR [rsp+0x168]
  414ceb:	test   edx,edx
  414ced:	js     0x414ff6
  414cf3:	cmp    rcx,0x2
  414cf7:	je     0x41538b
  414cfd:	mov    ecx,DWORD PTR [rsp+0x170]
  414d04:	sub    edx,0x76c
  414d0a:	test   r8,r8
  414d0d:	mov    DWORD PTR [rsp+0x84],edx
  414d14:	lea    edx,[rcx-0x1]
  414d17:	mov    DWORD PTR [rsp+0x80],edx
  414d1e:	mov    edx,DWORD PTR [rsp+0x174]
  414d25:	mov    DWORD PTR [rsp+0x7c],edx
  414d29:	jne    0x414d4d
  414d2b:	test   r11,r11
  414d2e:	sete   cl
  414d31:	test   r10,r10
  414d34:	sete   dl
  414d37:	test   cl,dl
  414d39:	je     0x415340
  414d3f:	cmp    BYTE PTR [rsp+0x1b9],0x0
  414d47:	je     0x415340
  414d4d:	mov    edx,DWORD PTR [rsp+0x158]
  414d54:	mov    ecx,DWORD PTR [rsp+0x178]
  414d5b:	test   edx,edx
  414d5d:	je     0x415368
  414d63:	cmp    edx,0x1
  414d66:	je     0x4153a3
  414d6c:	cmp    ecx,0x17
  414d6f:	mov    edx,ecx
  414d71:	ja     0x41537b
  414d77:	mov    DWORD PTR [rsp+0x78],edx
  414d7b:	mov    edx,DWORD PTR [rsp+0x17c]
  414d82:	mov    DWORD PTR [rsp+0x74],edx
  414d86:	mov    rdx,QWORD PTR [rsp+0x180]
  414d8e:	mov    DWORD PTR [rsp+0x70],edx
  414d92:	test   rax,rax
  414d95:	je     0x414da2
  414d97:	mov    DWORD PTR [rsp+0x90],0xffffffff
  414da2:	test   r9,r9
  414da5:	je     0x414db5
  414da7:	mov    eax,DWORD PTR [rsp+0x150]
  414dae:	mov    DWORD PTR [rsp+0x90],eax
  414db5:	mov    rax,QWORD PTR [rsp+0x70]
  414dba:	lea    r13,[rsp+0x70]
  414dbf:	lea    r14,[rsp+0xa0]
  414dc7:	mov    rcx,r13
  414dca:	mov    QWORD PTR [rsp+0xa0],rax
  414dd2:	mov    rax,QWORD PTR [rsp+0x78]
  414dd7:	mov    QWORD PTR [rsp+0xa8],rax
  414ddf:	mov    rax,QWORD PTR [rsp+0x80]
  414de7:	mov    QWORD PTR [rsp+0xb0],rax
  414def:	mov    rax,QWORD PTR [rsp+0x88]
  414df7:	mov    QWORD PTR [rsp+0xb8],rax
  414dff:	mov    eax,DWORD PTR [rsp+0x90]
  414e06:	mov    DWORD PTR [rsp+0xc0],eax
  414e0d:	call   0x4264b0
  414e12:	mov    rdx,r13
  414e15:	mov    r8,rax
  414e18:	mov    rcx,r14
  414e1b:	mov    r12,rax
  414e1e:	call   0x412ab0
  414e23:	test   al,al
  414e25:	jne    0x4150bc
  414e2b:	xor    r15d,r15d
  414e2e:	cmp    QWORD PTR [rsp+0x1e8],0x0
  414e37:	je     0x414bca
  414e3d:	mov    r8d,DWORD PTR [rsp+0x154]
  414e45:	mov    edx,0x88888889
  414e4a:	mov    eax,r8d
  414e4d:	sar    eax,0x1f
  414e50:	mov    r15d,eax
  414e53:	xor    r15d,r8d
  414e56:	sub    r15d,eax
  414e59:	mov    eax,r15d
  414e5c:	imul   edx
  414e5e:	mov    eax,r15d
  414e61:	sar    eax,0x1f
  414e64:	lea    r12d,[rdx+r15*1]
  414e68:	sar    r12d,0x5
  414e6c:	sub    r12d,eax
  414e6f:	imul   eax,r12d,0x3c
  414e73:	sub    r15d,eax
  414e76:	test   bpl,bpl
  414e79:	mov    DWORD PTR [rsp+0x30],r15d
  414e7e:	je     0x4154fe
  414e84:	mov    eax,r8d
  414e87:	mov    ecx,DWORD PTR [rsp+0x30]
  414e8b:	lea    rdx,[rip+0x22648]        # 0x4374da
  414e92:	shr    eax,0x1f
  414e95:	lea    r15,[rsp+0x50]
  414e9a:	mov    r9d,r12d
  414e9d:	cdqe   
  414e9f:	lea    r8,[rdx+rax*1]
  414ea3:	lea    rdx,[rip+0x224a1]        # 0x43734b
  414eaa:	mov    DWORD PTR [rsp+0x20],ecx
  414eae:	mov    rcx,r15
  414eb1:	call   0x412d10
  414eb6:	lea    rcx,[rip+0x22483]        # 0x437340
  414ebd:	mov    r8d,0x1
  414ec3:	mov    rdx,r15
  414ec6:	call   0x415bb0
  414ecb:	test   eax,eax
  414ecd:	je     0x41504e
  414ed3:	xor    r15d,r15d
  414ed6:	jmp    0x414bca
  414edb:	nop    DWORD PTR [rax+rax*1+0x0]
  414ee0:	lea    rsi,[rsp+0xd0]
  414ee8:	cmp    r9,0x64
  414eec:	mov    QWORD PTR [rsp+0x30],r9
  414ef1:	seta   r15b
  414ef5:	mov    rcx,rsi
  414ef8:	call   0x412b20
  414efd:	test   r15b,r15b
  414f00:	mov    rbx,rax
  414f03:	mov    r9,QWORD PTR [rsp+0x30]
  414f08:	jne    0x414ffd
  414f0e:	movzx  eax,BYTE PTR [r12+0x4]
  414f14:	lea    r9,[rsp+0x140]
  414f1c:	cmp    al,0x22
  414f1e:	je     0x415518
  414f24:	mov    rdx,r9
  414f27:	nop    WORD PTR [rax+rax*1+0x0]
  414f30:	add    rdx,0x1
  414f34:	xor    r8d,r8d
  414f37:	cmp    al,0x5c
  414f39:	sete   r8b
  414f3d:	add    r8,rbp
  414f40:	movzx  eax,BYTE PTR [r8]
  414f44:	lea    rbp,[r8+0x1]
  414f48:	mov    BYTE PTR [rdx-0x1],al
  414f4b:	movzx  eax,BYTE PTR [r8+0x1]
  414f50:	cmp    al,0x22
  414f52:	jne    0x414f30
  414f54:	lea    rcx,[rip+0x223e5]        # 0x437340
  414f5b:	mov    BYTE PTR [rdx],0x0
  414f5e:	mov    r8d,0x1
  414f64:	mov    rdx,r9
  414f67:	mov    QWORD PTR [rsp+0x30],r9
  414f6c:	call   0x415bb0
  414f71:	test   r15b,r15b
  414f74:	mov    r9,QWORD PTR [rsp+0x30]
  414f79:	jne    0x415039
  414f7f:	xor    r15d,r15d
  414f82:	test   eax,eax
  414f84:	lea    r12,[rbp+0x1]
  414f88:	jne    0x414bf8
  414f8e:	xchg   ax,ax
  414f90:	movzx  edx,BYTE PTR [r12]
  414f95:	lea    eax,[rdx-0x9]
  414f98:	cmp    al,0x4
  414f9a:	jbe    0x414fb0
  414f9c:	cmp    dl,0x20
  414f9f:	je     0x414fb0
  414fa1:	mov    ebp,0x1
  414fa6:	jmp    0x4149ee
  414fab:	nop    DWORD PTR [rax+rax*1+0x0]
  414fb0:	add    r12,0x1
  414fb4:	jmp    0x414f90
  414fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414fc0:	xor    r15d,r15d
  414fc3:	jmp    0x414c05
  414fc8:	lea    rcx,[rip+0x22371]        # 0x437340
  414fcf:	call   0x415d40
  414fd4:	test   eax,eax
  414fd6:	sete   al
  414fd9:	movzx  eax,al
  414fdc:	jmp    0x414bf5
  414fe1:	lea    rbx,[rsp+0x40]
  414fe6:	mov    rcx,rbx
  414fe9:	call   0x4124f0
  414fee:	mov    r8,rbx
  414ff1:	jmp    0x414982
  414ff6:	neg    edx
  414ff8:	jmp    0x414cfd
  414ffd:	mov    rcx,r9
  415000:	call   0x417bb0
  415005:	mov    r9,rax
  415008:	movzx  eax,BYTE PTR [r12+0x4]
  41500e:	cmp    al,0x22
  415010:	jne    0x414f24
  415016:	lea    rcx,[rip+0x22323]        # 0x437340
  41501d:	mov    BYTE PTR [r9],0x0
  415021:	mov    rdx,r9
  415024:	mov    r8d,0x1
  41502a:	mov    QWORD PTR [rsp+0x30],r9
  41502f:	call   0x415bb0
  415034:	mov    r9,QWORD PTR [rsp+0x30]
  415039:	mov    rcx,r9
  41503c:	mov    DWORD PTR [rsp+0x30],eax
  415040:	call   0x42df08
  415045:	mov    eax,DWORD PTR [rsp+0x30]
  415049:	jmp    0x414f7f
  41504e:	mov    rax,QWORD PTR [rsp+0xa0]
  415056:	mov    rcx,r13
  415059:	mov    ebp,0x1
  41505e:	mov    QWORD PTR [rsp+0x70],rax
  415063:	mov    rax,QWORD PTR [rsp+0xa8]
  41506b:	mov    QWORD PTR [rsp+0x78],rax
  415070:	mov    rax,QWORD PTR [rsp+0xb0]
  415078:	mov    QWORD PTR [rsp+0x80],rax
  415080:	mov    rax,QWORD PTR [rsp+0xb8]
  415088:	mov    QWORD PTR [rsp+0x88],rax
  415090:	mov    eax,DWORD PTR [rsp+0xc0]
  415097:	mov    DWORD PTR [rsp+0x90],eax
  41509e:	call   0x4264b0
  4150a3:	mov    rdx,r13
  4150a6:	mov    r8,rax
  4150a9:	mov    rcx,r14
  4150ac:	mov    r12,rax
  4150af:	call   0x412ab0
  4150b4:	test   al,al
  4150b6:	je     0x414ed3
  4150bc:	cmp    QWORD PTR [rsp+0x1c8],0x0
  4150c5:	je     0x41515c
  4150cb:	cmp    QWORD PTR [rsp+0x1c0],0x0
  4150d4:	jne    0x41515c
  4150da:	mov    r10d,DWORD PTR [rsp+0x14c]
  4150e2:	mov    r9d,DWORD PTR [rsp+0x88]
  4150ea:	mov    edx,0x92492493
  4150ef:	mov    r8d,DWORD PTR [rsp+0x148]
  4150f7:	mov    DWORD PTR [rsp+0x90],0xffffffff
  415102:	mov    ecx,r10d
  415105:	sub    ecx,r9d
  415108:	add    ecx,0x7
  41510b:	mov    eax,ecx
  41510d:	imul   edx
  41510f:	mov    eax,ecx
  415111:	sar    eax,0x1f
  415114:	add    edx,ecx
  415116:	sar    edx,0x2
  415119:	sub    edx,eax
  41511b:	lea    eax,[rdx*8+0x0]
  415122:	sub    eax,edx
  415124:	sub    ecx,eax
  415126:	test   r8d,r8d
  415129:	setg   al
  41512c:	xor    edx,edx
  41512e:	cmp    r10d,r9d
  415131:	setne  dl
  415134:	xor    r15d,r15d
  415137:	and    eax,edx
  415139:	sub    r8d,eax
  41513c:	lea    eax,[rcx+r8*8]
  415140:	mov    rcx,r13
  415143:	sub    eax,r8d
  415146:	add    DWORD PTR [rsp+0x7c],eax
  41514a:	call   0x4264b0
  41514f:	cmp    rax,0xffffffffffffffff
  415153:	mov    r12,rax
  415156:	je     0x414bca
  41515c:	mov    edx,DWORD PTR [rsp+0x194]
  415163:	mov    eax,DWORD PTR [rsp+0x190]
  41516a:	mov    ecx,DWORD PTR [rsp+0x198]
  415171:	mov    r8d,edx
  415174:	or     r8d,eax
  415177:	or     r8d,ecx
  41517a:	je     0x415232
  415180:	mov    r14d,DWORD PTR [rsp+0x80]
  415188:	mov    r12d,DWORD PTR [rsp+0x84]
  415190:	mov    r11d,DWORD PTR [rsp+0x7c]
  415195:	lea    r9d,[rdx+r14*1]
  415199:	lea    r10d,[rax+r12*1]
  41519d:	lea    r8d,[rcx+r11*1]
  4151a1:	cmp    r14d,r9d
  4151a4:	setg   r14b
  4151a8:	shr    edx,0x1f
  4151ab:	xor    edx,r14d
  4151ae:	cmp    r12d,r10d
  4151b1:	setg   r12b
  4151b5:	shr    eax,0x1f
  4151b8:	xor    eax,r12d
  4151bb:	or     dl,al
  4151bd:	jne    0x414ed3
  4151c3:	cmp    r11d,r8d
  4151c6:	mov    eax,ecx
  4151c8:	setg   dl
  4151cb:	shr    eax,0x1f
  4151ce:	cmp    dl,al
  4151d0:	jne    0x414ed3
  4151d6:	mov    eax,DWORD PTR [rsp+0xa8]
  4151dd:	mov    rcx,r13
  4151e0:	mov    DWORD PTR [rsp+0x84],r10d
  4151e8:	mov    DWORD PTR [rsp+0x80],r9d
  4151f0:	mov    DWORD PTR [rsp+0x7c],r8d
  4151f5:	xor    r15d,r15d
  4151f8:	mov    DWORD PTR [rsp+0x78],eax
  4151fc:	mov    eax,DWORD PTR [rsp+0xa4]
  415203:	mov    DWORD PTR [rsp+0x74],eax
  415207:	mov    eax,DWORD PTR [rsp+0xa0]
  41520e:	mov    DWORD PTR [rsp+0x70],eax
  415212:	mov    eax,DWORD PTR [rsp+0xc0]
  415219:	mov    DWORD PTR [rsp+0x90],eax
  415220:	call   0x4264b0
  415225:	cmp    rax,0xffffffffffffffff
  415229:	mov    r12,rax
  41522c:	je     0x414bca
  415232:	cmp    QWORD PTR [rsp+0x1e8],0x0
  41523b:	jne    0x4153c9
  415241:	mov    r8d,DWORD PTR [rsp+0x1b0]
  415249:	add    r8d,DWORD PTR [rsp+0x188]
  415251:	mov    ecx,0x44b82fa1
  415256:	imul   r11d,DWORD PTR [rsp+0x1a0],0x3c
  41525f:	mov    eax,r8d
  415262:	mov    r10d,r8d
  415265:	imul   ecx
  415267:	movsxd r13,r11d
  41526a:	mov    eax,edx
  41526c:	mov    edx,r8d
  41526f:	sar    edx,0x1f
  415272:	sar    eax,0x1c
  415275:	sub    eax,edx
  415277:	imul   eax,eax,0x3b9aca00
  41527d:	sub    r10d,eax
  415280:	add    r10d,0x3b9aca00
  415287:	mov    eax,r10d
  41528a:	imul   ecx
  41528c:	mov    eax,r10d
  41528f:	sar    eax,0x1f
  415292:	sar    edx,0x1c
  415295:	sub    edx,eax
  415297:	imul   r9d,edx,0x3b9aca00
  41529e:	sub    r10d,r9d
  4152a1:	mov    r9d,r10d
  4152a4:	imul   r10d,DWORD PTR [rsp+0x19c],0xe10
  4152b0:	sub    r8d,r9d
  4152b3:	mov    eax,r8d
  4152b6:	sar    r8d,0x1f
  4152ba:	imul   ecx
  4152bc:	movsxd r14,r10d
  4152bf:	add    r14,r12
  4152c2:	mov    eax,edx
  4152c4:	add    r13,r14
  4152c7:	sar    eax,0x1c
  4152ca:	mov    r15,r13
  4152cd:	add    r15,QWORD PTR [rsp+0x1a8]
  4152d5:	sub    eax,r8d
  4152d8:	movsxd rcx,eax
  4152db:	add    rcx,r15
  4152de:	cmp    r13,r14
  4152e1:	setl   dl
  4152e4:	shr    r11d,0x1f
  4152e8:	mov    r8d,r11d
  4152eb:	xor    r8d,edx
  4152ee:	cmp    r12,r14
  4152f1:	setg   dl
  4152f4:	shr    r10d,0x1f
  4152f8:	xor    edx,r10d
  4152fb:	or     edx,r8d
  4152fe:	mov    r8,QWORD PTR [rsp+0x1a8]
  415306:	cmp    r15,r13
  415309:	setl   r10b
  41530d:	shr    r8,0x3f
  415311:	xor    r8d,r10d
  415314:	or     dl,r8b
  415317:	jne    0x414ed3
  41531d:	cmp    rcx,r15
  415320:	setl   dl
  415323:	shr    eax,0x1f
  415326:	cmp    dl,al
  415328:	jne    0x414ed3
  41532e:	mov    QWORD PTR [rdi],rcx
  415331:	mov    DWORD PTR [rdi+0x8],r9d
  415335:	mov    r15d,0x1
  41533b:	jmp    0x414bca
  415340:	mov    DWORD PTR [rsp+0x70],0x0
  415348:	mov    DWORD PTR [rsp+0x74],0x0
  415350:	mov    DWORD PTR [rsp+0x78],0x0
  415358:	mov    DWORD PTR [rsp+0x188],0x0
  415363:	jmp    0x414d92
  415368:	lea    r8d,[rcx-0x1]
  41536c:	cmp    r8d,0xa
  415370:	jbe    0x4153c2
  415372:	cmp    ecx,0xc
  415375:	je     0x414d77
  41537b:	mov    DWORD PTR [rsp+0x78],0xffffffff
  415383:	xor    r15d,r15d
  415386:	jmp    0x414bca
  41538b:	cmp    edx,0x45
  41538e:	mov    r12d,0x76c
  415394:	mov    cx,0x7d0
  415398:	cmovge ecx,r12d
  41539c:	add    edx,ecx
  41539e:	jmp    0x414cfd
  4153a3:	lea    edx,[rcx-0x1]
  4153a6:	cmp    edx,0xa
  4153a9:	ja     0x4153b3
  4153ab:	lea    edx,[rcx+0xc]
  4153ae:	jmp    0x414d77
  4153b3:	cmp    ecx,0xc
  4153b6:	jne    0x41537b
  4153b8:	mov    edx,0xc
  4153bd:	jmp    0x414d77
  4153c2:	mov    edx,ecx
  4153c4:	jmp    0x414d77
  4153c9:	lea    rcx,[rsp+0x50]
  4153ce:	mov    QWORD PTR [rsp+0x50],r12
  4153d3:	imul   r13d,DWORD PTR [rsp+0x154],0x3c
  4153dc:	call   0x412550
  4153e1:	test   rax,rax
  4153e4:	mov    r8,rax
  4153e7:	je     0x414ed3
  4153ed:	mov    r10d,DWORD PTR [rsp+0x84]
  4153f5:	mov    r15d,DWORD PTR [r8+0x14]
  4153f9:	xor    eax,eax
  4153fb:	mov    r9d,0x51eb851f
  415401:	mov    r11d,r10d
  415404:	mov    r14d,r15d
  415407:	sar    r11d,0x2
  41540b:	add    r11d,0x1db
  415412:	test   r10b,0x3
  415416:	sete   al
  415419:	sar    r14d,0x2
  41541d:	sub    r11d,eax
  415420:	add    r14d,0x1db
  415427:	xor    eax,eax
  415429:	test   r15b,0x3
  41542d:	sete   al
  415430:	sub    r14d,eax
  415433:	mov    eax,r11d
  415436:	imul   r9d
  415439:	mov    eax,r11d
  41543c:	sar    eax,0x1f
  41543f:	mov    ecx,edx
  415441:	mov    edx,r11d
  415444:	sub    r11d,r14d
  415447:	sar    ecx,0x3
  41544a:	sub    ecx,eax
  41544c:	lea    eax,[rcx+rcx*4]
  41544f:	lea    eax,[rax+rax*4]
  415452:	sub    edx,eax
  415454:	mov    eax,edx
  415456:	shr    eax,0x1f
  415459:	sub    ecx,eax
  41545b:	mov    eax,r14d
  41545e:	imul   r9d
  415461:	mov    eax,r14d
  415464:	sar    eax,0x1f
  415467:	sar    edx,0x3
  41546a:	mov    r9d,edx
  41546d:	mov    edx,r14d
  415470:	sub    r9d,eax
  415473:	lea    eax,[r9+r9*4]
  415477:	lea    eax,[rax+rax*4]
  41547a:	sub    edx,eax
  41547c:	mov    eax,edx
  41547e:	mov    edx,r10d
  415481:	shr    eax,0x1f
  415484:	sub    edx,r15d
  415487:	sub    r9d,eax
  41548a:	mov    eax,r9d
  41548d:	sar    r9d,0x2
  415491:	sub    eax,ecx
  415493:	add    r11d,eax
  415496:	mov    eax,ecx
  415498:	mov    rcx,r12
  41549b:	sar    eax,0x2
  41549e:	imul   edx,edx,0x16d
  4154a4:	sub    eax,r9d
  4154a7:	add    eax,r11d
  4154aa:	add    edx,eax
  4154ac:	add    edx,DWORD PTR [rsp+0x8c]
  4154b3:	mov    eax,DWORD PTR [rsp+0x78]
  4154b7:	sub    edx,DWORD PTR [r8+0x1c]
  4154bb:	sub    eax,DWORD PTR [r8+0x8]
  4154bf:	lea    edx,[rdx+rdx*2]
  4154c2:	lea    eax,[rax+rdx*8]
  4154c5:	imul   eax,eax,0x3c
  4154c8:	add    eax,DWORD PTR [rsp+0x74]
  4154cc:	sub    eax,DWORD PTR [r8+0x4]
  4154d0:	imul   eax,eax,0x3c
  4154d3:	add    eax,DWORD PTR [rsp+0x70]
  4154d7:	sub    eax,DWORD PTR [r8]
  4154da:	sub    r13d,eax
  4154dd:	movsxd rax,r13d
  4154e0:	sub    rcx,rax
  4154e3:	cmp    r12,rcx
  4154e6:	setl   dl
  4154e9:	shr    r13d,0x1f
  4154ed:	cmp    dl,r13b
  4154f0:	jne    0x414ed3
  4154f6:	mov    r12,rcx
  4154f9:	jmp    0x415241
  4154fe:	mov    rcx,rsi
  415501:	mov    DWORD PTR [rsp+0x3c],r8d
  415506:	call   0x412b20
  41550b:	mov    r8d,DWORD PTR [rsp+0x3c]
  415510:	mov    rbx,rax
  415513:	jmp    0x414e84
  415518:	lea    rcx,[rip+0x21e21]        # 0x437340
  41551f:	mov    r8d,0x1
  415525:	mov    rdx,r9
  415528:	mov    BYTE PTR [rsp+0x140],0x0
  415530:	call   0x415bb0
  415535:	jmp    0x414f7f
  41553a:	nop
  41553b:	nop
  41553c:	nop
  41553d:	nop
  41553e:	nop
  41553f:	nop
  415540:	push   r15
  415542:	push   r14
  415544:	push   r13
  415546:	push   r12
  415548:	push   rbp
  415549:	push   rdi
  41554a:	push   rsi
  41554b:	push   rbx
  41554c:	sub    rsp,0x68
  415550:	mov    rbp,rcx
  415553:	mov    r12,rdx
  415556:	call   0x42dd80
  41555b:	lea    rdx,[rsp+0x20]
  415560:	mov    ecx,eax
  415562:	call   0x417dd0
  415567:	test   eax,eax
  415569:	js     0x41557e
  41556b:	movzx  eax,WORD PTR [rsp+0x26]
  415570:	and    ax,0xf000
  415574:	cmp    ax,0x8000
  415578:	je     0x415695
  41557e:	mov    ebx,0x200
  415583:	mov    rcx,rbx
  415586:	call   0x412940
  41558b:	test   rax,rax
  41558e:	mov    rdi,rax
  415591:	je     0x4156c6
  415597:	xor    esi,esi
  415599:	mov    r13,0xffffffffffffffff
  4155a0:	jmp    0x4155dc
  4155a2:	cmp    rbx,0xffffffffffffffff
  4155a6:	je     0x415641
  4155ac:	mov    r8,rbx
  4155af:	mov    rcx,rdi
  4155b2:	shr    r8,1
  4155b5:	mov    rax,r8
  4155b8:	add    r8,rbx
  4155bb:	not    rax
  4155be:	cmp    rbx,rax
  4155c1:	mov    rbx,r8
  4155c4:	cmovae rbx,r13
  4155c8:	mov    rdx,rbx
  4155cb:	call   0x415780
  4155d0:	test   rax,rax
  4155d3:	je     0x415660
  4155d9:	mov    rdi,rax
  4155dc:	mov    r14,rbx
  4155df:	lea    rcx,[rdi+rsi*1]
  4155e3:	mov    r9,rbp
  4155e6:	sub    r14,rsi
  4155e9:	mov    edx,0x1
  4155ee:	mov    r8,r14
  4155f1:	call   0x42df10
  4155f6:	add    rsi,rax
  4155f9:	cmp    rax,r14
  4155fc:	je     0x4155a2
  4155fe:	mov    r14,QWORD PTR [rip+0x3322b]        # 0x448830
  415605:	mov    r13,rdi
  415608:	call   r14
  41560b:	mov    rcx,rbp
  41560e:	mov    r15d,DWORD PTR [rax]
  415611:	call   0x42df50
  415616:	test   eax,eax
  415618:	jne    0x41564e
  41561a:	sub    rbx,0x1
  41561e:	cmp    rsi,rbx
  415621:	jb     0x415680
  415623:	mov    BYTE PTR [r13+rsi*1+0x0],0x0
  415629:	mov    rax,r13
  41562c:	mov    QWORD PTR [r12],rsi
  415630:	add    rsp,0x68
  415634:	pop    rbx
  415635:	pop    rsi
  415636:	pop    rdi
  415637:	pop    rbp
  415638:	pop    r12
  41563a:	pop    r13
  41563c:	pop    r14
  41563e:	pop    r15
  415640:	ret    
  415641:	mov    r14,QWORD PTR [rip+0x331e8]        # 0x448830
  415648:	mov    r15d,0xc
  41564e:	mov    rcx,rdi
  415651:	call   0x42df08
  415656:	call   r14
  415659:	mov    DWORD PTR [rax],r15d
  41565c:	xor    eax,eax
  41565e:	jmp    0x415630
  415660:	mov    r14,QWORD PTR [rip+0x331c9]        # 0x448830
  415667:	call   r14
  41566a:	mov    r15d,DWORD PTR [rax]
  41566d:	mov    rcx,rdi
  415670:	call   0x42df08
  415675:	call   r14
  415678:	mov    DWORD PTR [rax],r15d
  41567b:	xor    eax,eax
  41567d:	jmp    0x415630
  41567f:	nop
  415680:	lea    rdx,[rsi+0x1]
  415684:	mov    rcx,rdi
  415687:	call   0x415780
  41568c:	test   rax,rax
  41568f:	cmovne r13,rax
  415693:	jmp    0x415623
  415695:	mov    rcx,rbp
  415698:	call   0x4292a0
  41569d:	test   rax,rax
  4156a0:	js     0x41557e
  4156a6:	mov    rbx,QWORD PTR [rsp+0x38]
  4156ab:	cmp    rax,rbx
  4156ae:	jge    0x41557e
  4156b4:	sub    rbx,rax
  4156b7:	cmp    rbx,0xffffffffffffffff
  4156bb:	je     0x4156cd
  4156bd:	add    rbx,0x1
  4156c1:	jmp    0x415583
  4156c6:	xor    eax,eax
  4156c8:	jmp    0x415630
  4156cd:	call   QWORD PTR [rip+0x3315d]        # 0x448830
  4156d3:	mov    DWORD PTR [rax],0xc
  4156d9:	xor    eax,eax
  4156db:	jmp    0x415630
  4156e0:	push   rbp
  4156e1:	push   rdi
  4156e2:	push   rsi
  4156e3:	push   rbx
  4156e4:	sub    rsp,0x28
  4156e8:	mov    rsi,rdx
  4156eb:	mov    rdx,r8
  4156ee:	call   0x42df30
  4156f3:	test   rax,rax
  4156f6:	mov    rbx,rax
  4156f9:	je     0x415750
  4156fb:	mov    rdx,rsi
  4156fe:	mov    rcx,rax
  415701:	call   0x415540
  415706:	mov    rsi,QWORD PTR [rip+0x33123]        # 0x448830
  41570d:	mov    rdi,rax
  415710:	call   rsi
  415712:	mov    rcx,rbx
  415715:	mov    ebp,DWORD PTR [rax]
  415717:	call   0x42df58
  41571c:	test   eax,eax
  41571e:	mov    rdx,rdi
  415721:	jne    0x415730
  415723:	mov    rax,rdx
  415726:	add    rsp,0x28
  41572a:	pop    rbx
  41572b:	pop    rsi
  41572c:	pop    rdi
  41572d:	pop    rbp
  41572e:	ret    
  41572f:	nop
  415730:	test   rdi,rdi
  415733:	je     0x415741
  415735:	call   rsi
  415737:	mov    rcx,rdi
  41573a:	mov    ebp,DWORD PTR [rax]
  41573c:	call   0x42df08
  415741:	call   rsi
  415743:	xor    edx,edx
  415745:	mov    DWORD PTR [rax],ebp
  415747:	jmp    0x415723
  415749:	nop    DWORD PTR [rax+0x0]
  415750:	xor    edx,edx
  415752:	jmp    0x415723
  415754:	xchg   ax,ax
  415756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415760:	lea    r8,[rip+0x22e59]        # 0x4385c0
  415767:	jmp    0x4156e0
  41576c:	nop    DWORD PTR [rax+0x0]
  415770:	lea    r8,[rip+0x22e4b]        # 0x4385c2
  415777:	jmp    0x4156e0
  41577c:	nop
  41577d:	nop
  41577e:	nop
  41577f:	nop
  415780:	push   rbx
  415781:	sub    rsp,0x20
  415785:	test   rcx,rcx
  415788:	je     0x4157a0
  41578a:	call   0x42de68
  41578f:	mov    rbx,rax
  415792:	test   rbx,rbx
  415795:	je     0x4157b0
  415797:	mov    rax,rbx
  41579a:	add    rsp,0x20
  41579e:	pop    rbx
  41579f:	ret    
  4157a0:	mov    rcx,rdx
  4157a3:	call   0x42dea8
  4157a8:	mov    rbx,rax
  4157ab:	test   rbx,rbx
  4157ae:	jne    0x415797
  4157b0:	call   QWORD PTR [rip+0x3307a]        # 0x448830
  4157b6:	mov    DWORD PTR [rax],0xc
  4157bc:	mov    rax,rbx
  4157bf:	add    rsp,0x20
  4157c3:	pop    rbx
  4157c4:	ret    
  4157c5:	nop
  4157c6:	nop
  4157c7:	nop
  4157c8:	nop
  4157c9:	nop
  4157ca:	nop
  4157cb:	nop
  4157cc:	nop
  4157cd:	nop
  4157ce:	nop
  4157cf:	nop
  4157d0:	push   rbp
  4157d1:	push   r15
  4157d3:	push   r14
  4157d5:	push   r13
  4157d7:	push   r12
  4157d9:	push   rdi
  4157da:	push   rsi
  4157db:	push   rbx
  4157dc:	sub    rsp,0x38
  4157e0:	lea    rbp,[rsp+0x80]
  4157e8:	mov    r12,rdx
  4157eb:	mov    rdi,rcx
  4157ee:	mov    r14,r8
  4157f1:	mov    DWORD PTR [rbp+0x18],r9d
  4157f5:	call   0x42de30
  4157fa:	test   r12,r12
  4157fd:	mov    rsi,rax
  415800:	je     0x415930
  415806:	mov    rcx,r12
  415809:	call   0x42de30
  41580e:	add    rax,0x1
  415812:	mov    QWORD PTR [rbp-0x58],rax
  415816:	mov    rax,QWORD PTR [rip+0x28093]        # 0x43d8b0
  41581d:	mov    rax,QWORD PTR [rax]
  415820:	mov    r15,QWORD PTR [rax]
  415823:	test   r15,r15
  415826:	je     0x415920
  41582c:	mov    r13,QWORD PTR [r15]
  41582f:	test   r13,r13
  415832:	je     0x415920
  415838:	xor    ebx,ebx
  41583a:	nop    WORD PTR [rax+rax*1+0x0]
  415840:	mov    r8,rsi
  415843:	mov    rdx,rdi
  415846:	mov    rcx,r13
  415849:	call   0x42de28
  41584e:	test   eax,eax
  415850:	mov    r11d,eax
  415853:	jne    0x415861
  415855:	cmp    BYTE PTR [r13+rsi*1+0x0],0x3d
  41585b:	je     0x415903
  415861:	add    r15,0x8
  415865:	mov    r13,QWORD PTR [r15]
  415868:	add    rbx,0x1
  41586c:	test   r13,r13
  41586f:	jne    0x415840
  415871:	lea    rdx,[rbx*8+0x10]
  415879:	mov    r15,QWORD PTR [rip+0x2e640]        # 0x443ec0
  415880:	test   r15,r15
  415883:	je     0x4159dc
  415889:	mov    rcx,r15
  41588c:	call   0x42de68
  415891:	mov    r9,rax
  415894:	test   r9,r9
  415897:	je     0x415b6c
  41589d:	test   r14,r14
  4158a0:	je     0x415a06
  4158a6:	mov    QWORD PTR [r9+rbx*8],r14
  4158aa:	mov    rax,QWORD PTR [rip+0x27fff]        # 0x43d8b0
  4158b1:	mov    rax,QWORD PTR [rax]
  4158b4:	mov    rdx,QWORD PTR [rax]
  4158b7:	cmp    rdx,r15
  4158ba:	je     0x4158cf
  4158bc:	lea    r8,[rbx*8+0x0]
  4158c4:	mov    rcx,r9
  4158c7:	call   0x42de98
  4158cc:	mov    r9,rax
  4158cf:	mov    rax,QWORD PTR [rip+0x27fda]        # 0x43d8b0
  4158d6:	mov    QWORD PTR [r9+rbx*8+0x8],0x0
  4158df:	xor    r11d,r11d
  4158e2:	mov    QWORD PTR [rip+0x2e5d7],r9        # 0x443ec0
  4158e9:	mov    rax,QWORD PTR [rax]
  4158ec:	mov    QWORD PTR [rax],r9
  4158ef:	mov    eax,r11d
  4158f2:	lea    rsp,[rbp-0x48]
  4158f6:	pop    rbx
  4158f7:	pop    rsi
  4158f8:	pop    rdi
  4158f9:	pop    r12
  4158fb:	pop    r13
  4158fd:	pop    r14
  4158ff:	pop    r15
  415901:	pop    rbp
  415902:	ret    
  415903:	cmp    QWORD PTR [r15],0x0
  415907:	je     0x415871
  41590d:	mov    eax,DWORD PTR [rbp+0x18]
  415910:	test   eax,eax
  415912:	je     0x4158ef
  415914:	test   r14,r14
  415917:	je     0x41593d
  415919:	mov    QWORD PTR [r15],r14
  41591c:	jmp    0x4158ef
  41591e:	xchg   ax,ax
  415920:	mov    edx,0x10
  415925:	xor    ebx,ebx
  415927:	jmp    0x415879
  41592c:	nop    DWORD PTR [rax+0x0]
  415930:	mov    QWORD PTR [rbp-0x58],0x0
  415938:	jmp    0x415816
  41593d:	mov    rax,QWORD PTR [rbp-0x58]
  415941:	add    rax,rsi
  415944:	lea    r13,[rax+0x1]
  415948:	cmp    r13,0xfaf
  41594f:	jbe    0x4159ec
  415955:	mov    rcx,r13
  415958:	mov    DWORD PTR [rbp-0x60],r11d
  41595c:	call   0x425b10
  415961:	mov    r11d,DWORD PTR [rbp-0x60]
  415965:	mov    rbx,rax
  415968:	test   rbx,rbx
  41596b:	je     0x415b6c
  415971:	mov    r8,rsi
  415974:	mov    rdx,rdi
  415977:	mov    rcx,rbx
  41597a:	mov    DWORD PTR [rbp-0x60],r11d
  41597e:	call   0x42de98
  415983:	mov    r8,QWORD PTR [rbp-0x58]
  415987:	lea    rcx,[rbx+rsi*1+0x1]
  41598c:	mov    rdx,r12
  41598f:	mov    BYTE PTR [rbx+rsi*1],0x3d
  415993:	call   0x42de98
  415998:	lea    r8,[rip+0x184b1]        # 0x42de50
  41599f:	lea    rdx,[rip+0x2e522]        # 0x443ec8
  4159a6:	mov    rcx,rbx
  4159a9:	call   0x428da0
  4159ae:	test   rax,rax
  4159b1:	mov    r11d,DWORD PTR [rbp-0x60]
  4159b5:	je     0x415ad2
  4159bb:	mov    r14,QWORD PTR [rax]
  4159be:	test   r14,r14
  4159c1:	je     0x415ad2
  4159c7:	mov    rcx,rbx
  4159ca:	mov    DWORD PTR [rbp-0x58],r11d
  4159ce:	call   0x425b90
  4159d3:	mov    r11d,DWORD PTR [rbp-0x58]
  4159d7:	jmp    0x415919
  4159dc:	mov    rcx,rdx
  4159df:	call   0x42dea8
  4159e4:	mov    r9,rax
  4159e7:	jmp    0x415894
  4159ec:	add    rax,0x2f
  4159f0:	and    rax,0xfffffffffffffff0
  4159f4:	call   0x4283e0
  4159f9:	sub    rsp,rax
  4159fc:	lea    rbx,[rsp+0x30]
  415a01:	jmp    0x415968
  415a06:	mov    rax,QWORD PTR [rbp-0x58]
  415a0a:	add    rax,rsi
  415a0d:	lea    r15,[rax+0x1]
  415a11:	cmp    r15,0xfaf
  415a18:	ja     0x415aba
  415a1e:	add    rax,0x2f
  415a22:	and    rax,0xfffffffffffffff0
  415a26:	call   0x4283e0
  415a2b:	sub    rsp,rax
  415a2e:	lea    r14,[rsp+0x30]
  415a33:	test   r14,r14
  415a36:	je     0x415b6c
  415a3c:	mov    r8,rsi
  415a3f:	mov    rdx,rdi
  415a42:	mov    rcx,r14
  415a45:	mov    QWORD PTR [rbp-0x60],r9
  415a49:	call   0x42de98
  415a4e:	mov    r8,QWORD PTR [rbp-0x58]
  415a52:	lea    rcx,[r14+rsi*1+0x1]
  415a57:	mov    BYTE PTR [r14+rsi*1],0x3d
  415a5c:	mov    rdx,r12
  415a5f:	call   0x42de98
  415a64:	mov    r9,QWORD PTR [rbp-0x60]
  415a68:	lea    r8,[rip+0x183e1]        # 0x42de50
  415a6f:	lea    rdx,[rip+0x2e452]        # 0x443ec8
  415a76:	mov    rcx,r14
  415a79:	lea    rsi,[r9+rbx*8]
  415a7d:	mov    QWORD PTR [rbp-0x58],r9
  415a81:	call   0x428da0
  415a86:	test   rax,rax
  415a89:	mov    r9,QWORD PTR [rbp-0x58]
  415a8d:	je     0x415b1b
  415a93:	mov    rax,QWORD PTR [rax]
  415a96:	test   rax,rax
  415a99:	mov    QWORD PTR [rsi],rax
  415a9c:	je     0x415b1b
  415a9e:	mov    rcx,r14
  415aa1:	mov    QWORD PTR [rbp-0x58],r9
  415aa5:	call   0x425b90
  415aaa:	mov    r15,QWORD PTR [rip+0x2e40f]        # 0x443ec0
  415ab1:	mov    r9,QWORD PTR [rbp-0x58]
  415ab5:	jmp    0x4158aa
  415aba:	mov    rcx,r15
  415abd:	mov    QWORD PTR [rbp-0x60],r9
  415ac1:	call   0x425b10
  415ac6:	mov    r9,QWORD PTR [rbp-0x60]
  415aca:	mov    r14,rax
  415acd:	jmp    0x415a33
  415ad2:	mov    rcx,r13
  415ad5:	mov    DWORD PTR [rbp-0x58],r11d
  415ad9:	call   0x42dea8
  415ade:	test   rax,rax
  415ae1:	mov    r14,rax
  415ae4:	mov    r11d,DWORD PTR [rbp-0x58]
  415ae8:	je     0x415b64
  415aea:	mov    r8,r13
  415aed:	mov    rdx,rbx
  415af0:	mov    rcx,rax
  415af3:	mov    DWORD PTR [rbp-0x58],r11d
  415af7:	call   0x42de98
  415afc:	lea    r8,[rip+0x1834d]        # 0x42de50
  415b03:	lea    rdx,[rip+0x2e3be]        # 0x443ec8
  415b0a:	mov    rcx,r14
  415b0d:	call   0x428e00
  415b12:	mov    r11d,DWORD PTR [rbp-0x58]
  415b16:	jmp    0x4159c7
  415b1b:	mov    rcx,r15
  415b1e:	mov    QWORD PTR [rbp-0x58],r9
  415b22:	call   0x42dea8
  415b27:	test   rax,rax
  415b2a:	mov    QWORD PTR [rsi],rax
  415b2d:	mov    r9,QWORD PTR [rbp-0x58]
  415b31:	je     0x415b83
  415b33:	mov    r8,r15
  415b36:	mov    rdx,r14
  415b39:	mov    rcx,rax
  415b3c:	mov    QWORD PTR [rbp-0x58],r9
  415b40:	call   0x42de98
  415b45:	mov    rcx,QWORD PTR [rsi]
  415b48:	lea    r8,[rip+0x18301]        # 0x42de50
  415b4f:	lea    rdx,[rip+0x2e372]        # 0x443ec8
  415b56:	call   0x428e00
  415b5b:	mov    r9,QWORD PTR [rbp-0x58]
  415b5f:	jmp    0x415a9e
  415b64:	mov    rcx,rbx
  415b67:	call   0x425b90
  415b6c:	call   QWORD PTR [rip+0x32cbe]        # 0x448830
  415b72:	mov    r11d,0xffffffff
  415b78:	mov    DWORD PTR [rax],0xc
  415b7e:	jmp    0x4158ef
  415b83:	mov    rcx,r14
  415b86:	call   0x425b90
  415b8b:	call   QWORD PTR [rip+0x32c9f]        # 0x448830
  415b91:	mov    r11d,0xffffffff
  415b97:	mov    DWORD PTR [rax],0xc
  415b9d:	jmp    0x4158ef
  415ba2:	nop    DWORD PTR [rax+0x0]
  415ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415bb0:	push   rdi
  415bb1:	push   rsi
  415bb2:	push   rbx
  415bb3:	sub    rsp,0x20
  415bb7:	test   rcx,rcx
  415bba:	mov    rbx,rcx
  415bbd:	mov    rsi,rdx
  415bc0:	mov    edi,r8d
  415bc3:	je     0x415bf1
  415bc5:	cmp    BYTE PTR [rcx],0x0
  415bc8:	je     0x415bf1
  415bca:	mov    edx,0x3d
  415bcf:	call   0x42de58
  415bd4:	test   rax,rax
  415bd7:	jne    0x415bf1
  415bd9:	mov    r9d,edi
  415bdc:	xor    r8d,r8d
  415bdf:	mov    rdx,rsi
  415be2:	mov    rcx,rbx
  415be5:	add    rsp,0x20
  415be9:	pop    rbx
  415bea:	pop    rsi
  415beb:	pop    rdi
  415bec:	jmp    0x4157d0
  415bf1:	call   QWORD PTR [rip+0x32c39]        # 0x448830
  415bf7:	mov    DWORD PTR [rax],0x16
  415bfd:	mov    eax,0xffffffff
  415c02:	add    rsp,0x20
  415c06:	pop    rbx
  415c07:	pop    rsi
  415c08:	pop    rdi
  415c09:	ret    
  415c0a:	nop    WORD PTR [rax+rax*1+0x0]
  415c10:	push   rbx
  415c11:	sub    rsp,0x20
  415c15:	mov    rbx,QWORD PTR [rip+0x27c94]        # 0x43d8b0
  415c1c:	mov    rax,QWORD PTR [rbx]
  415c1f:	mov    rcx,QWORD PTR [rax]
  415c22:	cmp    rcx,QWORD PTR [rip+0x2e297]        # 0x443ec0
  415c29:	jne    0x415c43
  415c2b:	test   rcx,rcx
  415c2e:	je     0x415c43
  415c30:	call   0x42df08
  415c35:	mov    rax,QWORD PTR [rbx]
  415c38:	mov    QWORD PTR [rip+0x2e27d],0x0        # 0x443ec0
  415c43:	mov    QWORD PTR [rax],0x0
  415c4a:	xor    eax,eax
  415c4c:	add    rsp,0x20
  415c50:	pop    rbx
  415c51:	ret    
  415c52:	nop
  415c53:	nop
  415c54:	nop
  415c55:	nop
  415c56:	nop
  415c57:	nop
  415c58:	nop
  415c59:	nop
  415c5a:	nop
  415c5b:	nop
  415c5c:	nop
  415c5d:	nop
  415c5e:	nop
  415c5f:	nop
  415c60:	push   rbp
  415c61:	push   rdi
  415c62:	push   rsi
  415c63:	push   rbx
  415c64:	sub    rsp,0x38
  415c68:	mov    QWORD PTR [rsp+0x78],r9
  415c6d:	mov    QWORD PTR [rsp+0x20],rdx
  415c72:	lea    r9,[rsp+0x78]
  415c77:	mov    rbp,rdx
  415c7a:	lea    rdx,[rsp+0x20]
  415c7f:	mov    rdi,rcx
  415c82:	mov    QWORD PTR [rsp+0x28],r9
  415c87:	call   0x415e20
  415c8c:	test   rax,rax
  415c8f:	mov    rsi,rax
  415c92:	mov    rbx,QWORD PTR [rsp+0x20]
  415c97:	je     0x415cf5
  415c99:	cmp    rax,rdi
  415c9c:	je     0x415cab
  415c9e:	test   rbp,rbp
  415ca1:	jne    0x415cc0
  415ca3:	mov    rcx,rsi
  415ca6:	call   0x42df08
  415cab:	cmp    rbx,0x7fffffff
  415cb2:	ja     0x415ce2
  415cb4:	mov    eax,ebx
  415cb6:	add    rsp,0x38
  415cba:	pop    rbx
  415cbb:	pop    rsi
  415cbc:	pop    rdi
  415cbd:	pop    rbp
  415cbe:	ret    
  415cbf:	nop
  415cc0:	lea    rax,[rbp-0x1]
  415cc4:	cmp    rbp,rbx
  415cc7:	mov    rdx,rsi
  415cca:	mov    rcx,rdi
  415ccd:	cmova  rax,rbx
  415cd1:	mov    rbp,rax
  415cd4:	mov    r8,rax
  415cd7:	call   0x42de98
  415cdc:	mov    BYTE PTR [rdi+rbp*1],0x0
  415ce0:	jmp    0x415ca3
  415ce2:	call   QWORD PTR [rip+0x32b48]        # 0x448830
  415ce8:	mov    DWORD PTR [rax],0x84
  415cee:	mov    eax,0xffffffff
  415cf3:	jmp    0x415cb6
  415cf5:	mov    eax,0xffffffff
  415cfa:	jmp    0x415cb6
  415cfc:	nop
  415cfd:	nop
  415cfe:	nop
  415cff:	nop
  415d00:	push   rsi
  415d01:	push   rbx
  415d02:	sub    rsp,0x28
  415d06:	mov    rsi,rcx
  415d09:	call   0x42de30
  415d0e:	lea    rbx,[rax+0x1]
  415d12:	mov    rcx,rbx
  415d15:	call   0x412940
  415d1a:	test   rax,rax
  415d1d:	je     0x415d33
  415d1f:	mov    r8,rbx
  415d22:	mov    rdx,rsi
  415d25:	mov    rcx,rax
  415d28:	add    rsp,0x28
  415d2c:	pop    rbx
  415d2d:	pop    rsi
  415d2e:	jmp    0x42de98
  415d33:	xor    eax,eax
  415d35:	add    rsp,0x28
  415d39:	pop    rbx
  415d3a:	pop    rsi
  415d3b:	ret    
  415d3c:	nop
  415d3d:	nop
  415d3e:	nop
  415d3f:	nop
  415d40:	push   rbp
  415d41:	push   rdi
  415d42:	push   rsi
  415d43:	push   rbx
  415d44:	sub    rsp,0x28
  415d48:	test   rcx,rcx
  415d4b:	mov    rdi,rcx
  415d4e:	je     0x415de0
  415d54:	cmp    BYTE PTR [rcx],0x0
  415d57:	je     0x415de0
  415d5d:	mov    edx,0x3d
  415d62:	call   0x42de58
  415d67:	test   rax,rax
  415d6a:	jne    0x415de0
  415d6c:	mov    rcx,rdi
  415d6f:	call   0x42de30
  415d74:	mov    rbp,rax
  415d77:	mov    rax,QWORD PTR [rip+0x27b32]        # 0x43d8b0
  415d7e:	mov    rax,QWORD PTR [rax]
  415d81:	mov    rsi,QWORD PTR [rax]
  415d84:	mov    rbx,QWORD PTR [rsi]
  415d87:	test   rbx,rbx
  415d8a:	je     0x415db0
  415d8c:	mov    r8,rbp
  415d8f:	mov    rdx,rdi
  415d92:	mov    rcx,rbx
  415d95:	call   0x42de28
  415d9a:	test   eax,eax
  415d9c:	jne    0x415da4
  415d9e:	cmp    BYTE PTR [rbx+rbp*1],0x3d
  415da2:	je     0x415dc0
  415da4:	add    rsi,0x8
  415da8:	mov    rbx,QWORD PTR [rsi]
  415dab:	test   rbx,rbx
  415dae:	jne    0x415d8c
  415db0:	xor    eax,eax
  415db2:	add    rsp,0x28
  415db6:	pop    rbx
  415db7:	pop    rsi
  415db8:	pop    rdi
  415db9:	pop    rbp
  415dba:	ret    
  415dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  415dc0:	mov    r9,rsi
  415dc3:	mov    r10,QWORD PTR [r9+0x8]
  415dc7:	add    r9,0x8
  415dcb:	mov    QWORD PTR [r9-0x8],r10
  415dcf:	test   r10,r10
  415dd2:	jne    0x415dc3
  415dd4:	jmp    0x415d84
  415dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415de0:	call   QWORD PTR [rip+0x32a4a]        # 0x448830
  415de6:	mov    DWORD PTR [rax],0x16
  415dec:	mov    eax,0xffffffff
  415df1:	add    rsp,0x28
  415df5:	pop    rbx
  415df6:	pop    rsi
  415df7:	pop    rdi
  415df8:	pop    rbp
  415df9:	ret    
  415dfa:	nop
  415dfb:	nop
  415dfc:	nop
  415dfd:	nop
  415dfe:	nop
  415dff:	nop
  415e00:	sub    rsp,0x38
  415e04:	mov    QWORD PTR [rsp+0x58],r9
  415e09:	lea    r9,[rsp+0x58]
  415e0e:	mov    QWORD PTR [rsp+0x28],r9
  415e13:	call   0x429350
  415e18:	add    rsp,0x38
  415e1c:	ret    
  415e1d:	nop    DWORD PTR [rax]
  415e20:	push   rbp
  415e21:	push   r15
  415e23:	push   r14
  415e25:	push   r13
  415e27:	push   r12
  415e29:	push   rdi
  415e2a:	push   rsi
  415e2b:	push   rbx
  415e2c:	sub    rsp,0x518
  415e33:	lea    rbp,[rsp+0x80]
  415e3b:	lea    rax,[rbp+0x110]
  415e42:	lea    rdi,[rbp+0x200]
  415e49:	mov    rbx,r8
  415e4c:	mov    QWORD PTR [rbp+0x4e0],rcx
  415e53:	mov    QWORD PTR [rbp+0x4e8],rdx
  415e5a:	mov    rcx,rbx
  415e5d:	mov    rdx,rdi
  415e60:	mov    r8,rax
  415e63:	mov    QWORD PTR [rbp+0x60],rdi
  415e67:	mov    rsi,r9
  415e6a:	mov    QWORD PTR [rbp+0x58],rax
  415e6e:	mov    rdi,rax
  415e71:	call   0x4186f0
  415e76:	test   eax,eax
  415e78:	js     0x416ec0
  415e7e:	mov    rdx,rdi
  415e81:	mov    rcx,rsi
  415e84:	call   0x418600
  415e89:	test   eax,eax
  415e8b:	js     0x417200
  415e91:	mov    rax,QWORD PTR [rbp+0x210]
  415e98:	mov    rdx,0xffffffffffffffff
  415e9f:	add    rax,0x7
  415ea3:	cmp    rax,0x7
  415ea7:	cmovb  rax,rdx
  415eab:	add    rax,QWORD PTR [rbp+0x218]
  415eb2:	jb     0x4162f0
  415eb8:	lea    rcx,[rax+0x6]
  415ebc:	cmp    rax,rcx
  415ebf:	ja     0x4162f0
  415ec5:	cmp    rcx,0xf9f
  415ecc:	ja     0x416c30
  415ed2:	add    rax,0x24
  415ed6:	and    rax,0xfffffffffffffff0
  415eda:	call   0x4283e0
  415edf:	sub    rsp,rax
  415ee2:	cmp    QWORD PTR [rbp+0x4e0],0x0
  415eea:	mov    QWORD PTR [rbp+0x50],0x0
  415ef2:	lea    rax,[rsp+0x40]
  415ef7:	mov    QWORD PTR [rbp+0x90],rax
  415efe:	je     0x416c68
  415f04:	mov    rax,QWORD PTR [rbp+0x4e8]
  415f0b:	mov    r12,QWORD PTR [rax]
  415f0e:	mov    rax,QWORD PTR [rbp+0x4e0]
  415f15:	mov    r13,QWORD PTR [rbp+0x208]
  415f1c:	mov    rdi,rbx
  415f1f:	xor    r15d,r15d
  415f22:	mov    QWORD PTR [rbp+0x80],0x0
  415f2d:	mov    QWORD PTR [rbp+0x98],rax
  415f34:	lea    rax,[rbp+0xbc]
  415f3b:	mov    rsi,QWORD PTR [r13+0x0]
  415f3f:	mov    QWORD PTR [rbp+0x70],rax
  415f43:	lea    rax,[rbp+0xa0]
  415f4a:	cmp    rsi,rdi
  415f4d:	mov    QWORD PTR [rbp+0x40],rax
  415f51:	lea    rax,[rbp+0xd0]
  415f58:	mov    QWORD PTR [rbp+0x48],rax
  415f5c:	lea    rax,[rbp+0xb4]
  415f63:	mov    QWORD PTR [rbp+0x38],rax
  415f67:	je     0x416433
  415f6d:	sub    rsi,rdi
  415f70:	mov    rax,0xffffffffffffffff
  415f77:	mov    r14,rsi
  415f7a:	add    r14,r15
  415f7d:	cmovb  r14,rax
  415f81:	cmp    r12,r14
  415f84:	jae    0x416442
  415f8a:	test   r12,r12
  415f8d:	je     0x416350
  415f93:	js     0x416d60
  415f99:	add    r12,r12
  415f9c:	cmp    r12,r14
  415f9f:	cmovb  r12,r14
  415fa3:	cmp    r12,0xffffffffffffffff
  415fa7:	je     0x416d60
  415fad:	mov    rax,QWORD PTR [rbp+0x98]
  415fb4:	cmp    rax,QWORD PTR [rbp+0x4e0]
  415fbb:	sete   r8b
  415fbf:	test   rax,rax
  415fc2:	mov    BYTE PTR [rbp+0x88],r8b
  415fc9:	je     0x416360
  415fcf:	test   r8b,r8b
  415fd2:	jne    0x416360
  415fd8:	mov    rcx,QWORD PTR [rbp+0x98]
  415fdf:	mov    rdx,r12
  415fe2:	call   0x415780
  415fe7:	movzx  r8d,BYTE PTR [rbp+0x88]
  415fef:	mov    rbx,rax
  415ff2:	test   rbx,rbx
  415ff5:	je     0x416d60
  415ffb:	test   r15,r15
  415ffe:	je     0x416017
  416000:	test   r8b,r8b
  416003:	je     0x416017
  416005:	mov    rdx,QWORD PTR [rbp+0x98]
  41600c:	mov    r8,r15
  41600f:	mov    rcx,rbx
  416012:	call   0x42de98
  416017:	lea    rcx,[rbx+r15*1]
  41601b:	mov    r8,rsi
  41601e:	mov    rdx,rdi
  416021:	call   0x42de98
  416026:	mov    rax,QWORD PTR [rbp+0x80]
  41602d:	cmp    QWORD PTR [rbp+0x200],rax
  416034:	je     0x417245
  41603a:	movzx  edx,BYTE PTR [r13+0x48]
  41603f:	cmp    dl,0x25
  416042:	je     0x416380
  416048:	mov    rax,QWORD PTR [r13+0x50]
  41604c:	cmp    rax,0xffffffffffffffff
  416050:	je     0x416b70
  416056:	cmp    dl,0x6e
  416059:	je     0x416450
  41605f:	shl    rax,0x5
  416063:	cmp    dl,0x73
  416066:	mov    r10,QWORD PTR [rbp+0x118]
  41606d:	je     0x416631
  416073:	mov    eax,DWORD PTR [r10+rax*1]
  416077:	mov    DWORD PTR [rbp+0x88],eax
  41607d:	mov    rcx,QWORD PTR [r13+0x18]
  416081:	mov    r9,QWORD PTR [r13+0x20]
  416085:	mov    r8d,DWORD PTR [r13+0x10]
  416089:	cmp    rcx,r9
  41608c:	je     0x416e90
  416092:	mov    rax,QWORD PTR [r13+0x28]
  416096:	cmp    rax,0xffffffffffffffff
  41609a:	je     0x416d70
  4160a0:	shl    rax,0x5
  4160a4:	add    rax,r10
  4160a7:	cmp    DWORD PTR [rax],0x5
  4160aa:	jne    0x416b70
  4160b0:	movsxd r15,DWORD PTR [rax+0x10]
  4160b4:	test   r15d,r15d
  4160b7:	js     0x416e80
  4160bd:	mov    rdx,QWORD PTR [r13+0x30]
  4160c1:	mov    rcx,QWORD PTR [r13+0x38]
  4160c5:	cmp    rdx,rcx
  4160c8:	je     0x416620
  4160ce:	mov    rax,QWORD PTR [r13+0x40]
  4160d2:	cmp    rax,0xffffffffffffffff
  4160d6:	je     0x416dc0
  4160dc:	shl    rax,0x5
  4160e0:	add    r10,rax
  4160e3:	cmp    DWORD PTR [r10],0x5
  4160e7:	jne    0x416b70
  4160ed:	movsxd rsi,DWORD PTR [r10+0x10]
  4160f1:	test   esi,esi
  4160f3:	js     0x416620
  4160f9:	mov    DWORD PTR [rbp+0x28],0x1
  416100:	mov    rax,QWORD PTR [rbp+0x90]
  416107:	test   r8b,0x1
  41610b:	mov    BYTE PTR [rax],0x25
  41610e:	lea    rdi,[rax+0x1]
  416112:	je     0x416123
  416114:	mov    rax,QWORD PTR [rbp+0x90]
  41611b:	lea    rdi,[rax+0x2]
  41611f:	mov    BYTE PTR [rax+0x1],0x27
  416123:	test   r8b,0x2
  416127:	je     0x416130
  416129:	mov    BYTE PTR [rdi],0x2d
  41612c:	add    rdi,0x1
  416130:	test   r8b,0x4
  416134:	je     0x41613d
  416136:	mov    BYTE PTR [rdi],0x2b
  416139:	add    rdi,0x1
  41613d:	test   r8b,0x8
  416141:	je     0x41614a
  416143:	mov    BYTE PTR [rdi],0x20
  416146:	add    rdi,0x1
  41614a:	test   r8b,0x10
  41614e:	je     0x416157
  416150:	mov    BYTE PTR [rdi],0x23
  416153:	add    rdi,0x1
  416157:	and    r8d,0x20
  41615b:	je     0x416164
  41615d:	mov    BYTE PTR [rdi],0x30
  416160:	add    rdi,0x1
  416164:	mov    rdx,QWORD PTR [r13+0x18]
  416168:	mov    r8,QWORD PTR [r13+0x20]
  41616c:	cmp    rdx,r8
  41616f:	je     0x416193
  416171:	mov    r9,r8
  416174:	mov    rcx,rdi
  416177:	sub    r9,rdx
  41617a:	mov    r8,r9
  41617d:	mov    QWORD PTR [rbp+0x98],r9
  416184:	call   0x42de98
  416189:	mov    r9,QWORD PTR [rbp+0x98]
  416190:	add    rdi,r9
  416193:	mov    rdx,QWORD PTR [r13+0x30]
  416197:	mov    r8,QWORD PTR [r13+0x38]
  41619b:	cmp    rdx,r8
  41619e:	je     0x4161c2
  4161a0:	mov    r9,r8
  4161a3:	mov    rcx,rdi
  4161a6:	sub    r9,rdx
  4161a9:	mov    r8,r9
  4161ac:	mov    QWORD PTR [rbp+0x98],r9
  4161b3:	call   0x42de98
  4161b8:	mov    r9,QWORD PTR [rbp+0x98]
  4161bf:	add    rdi,r9
  4161c2:	mov    eax,DWORD PTR [rbp+0x88]
  4161c8:	lea    ecx,[rax-0x7]
  4161cb:	cmp    ecx,0x9
  4161ce:	ja     0x4161f3
  4161d0:	mov    eax,0x1
  4161d5:	shl    rax,cl
  4161d8:	test   eax,0x283
  4161dd:	jne    0x4167d4
  4161e3:	test   al,0x20
  4161e5:	jne    0x416ed0
  4161eb:	test   al,0xc
  4161ed:	jne    0x416f40
  4161f3:	movzx  eax,BYTE PTR [r13+0x48]
  4161f8:	mov    BYTE PTR [rdi+0x1],0x0
  4161fc:	mov    BYTE PTR [rdi],al
  4161fe:	mov    rax,QWORD PTR [r13+0x28]
  416202:	cmp    rax,0xffffffffffffffff
  416206:	je     0x416bf0
  41620c:	shl    rax,0x5
  416210:	add    rax,QWORD PTR [rbp+0x118]
  416217:	cmp    DWORD PTR [rax],0x5
  41621a:	jne    0x416b70
  416220:	mov    eax,DWORD PTR [rax+0x10]
  416223:	mov    edx,0x1
  416228:	mov    DWORD PTR [rbp+0xc0],eax
  41622e:	mov    rax,QWORD PTR [r13+0x40]
  416232:	cmp    rax,0xffffffffffffffff
  416236:	je     0x416be0
  41623c:	shl    rax,0x5
  416240:	add    rax,QWORD PTR [rbp+0x118]
  416247:	cmp    DWORD PTR [rax],0x5
  41624a:	jne    0x416b70
  416250:	mov    eax,DWORD PTR [rax+0x10]
  416253:	lea    ecx,[rdx+0x1]
  416256:	mov    DWORD PTR [rbp+0x78],ecx
  416259:	mov    DWORD PTR [rbp+rdx*4+0xc0],eax
  416260:	lea    rax,[r14+0x2]
  416264:	mov    rdx,0xffffffffffffffff
  41626b:	cmp    r14,rax
  41626e:	cmovbe rdx,rax
  416272:	cmp    r12,rdx
  416275:	jae    0x416bd0
  41627b:	test   r12,r12
  41627e:	je     0x416480
  416284:	js     0x4162a1
  416286:	add    r12,r12
  416289:	cmp    r14,rax
  41628c:	ja     0x4162a1
  41628e:	cmp    r12,rax
  416291:	jae    0x416498
  416297:	cmp    rax,0xffffffffffffffff
  41629b:	jne    0x417ba5
  4162a1:	mov    rax,QWORD PTR [rip+0x32588]        # 0x448830
  4162a8:	mov    r15,rbx
  4162ab:	mov    QWORD PTR [rbp+0x68],rax
  4162af:	mov    QWORD PTR [rbp+0x98],r15
  4162b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4162c0:	mov    rax,QWORD PTR [rbp+0x98]
  4162c7:	test   rax,rax
  4162ca:	je     0x4162d9
  4162cc:	cmp    rax,QWORD PTR [rbp+0x4e0]
  4162d3:	jne    0x416fa0
  4162d9:	mov    rax,QWORD PTR [rbp+0x50]
  4162dd:	test   rax,rax
  4162e0:	je     0x4162fb
  4162e2:	mov    rcx,rax
  4162e5:	call   0x42df08
  4162ea:	jmp    0x4162fb
  4162ec:	nop    DWORD PTR [rax+0x0]
  4162f0:	mov    rax,QWORD PTR [rip+0x32539]        # 0x448830
  4162f7:	mov    QWORD PTR [rbp+0x68],rax
  4162fb:	mov    rax,QWORD PTR [rbp+0x60]
  4162ff:	mov    rcx,QWORD PTR [rbp+0x208]
  416306:	add    rax,0x20
  41630a:	cmp    rcx,rax
  41630d:	je     0x416314
  41630f:	call   0x42df08
  416314:	mov    rax,QWORD PTR [rbp+0x58]
  416318:	mov    rcx,QWORD PTR [rbp+0x118]
  41631f:	add    rax,0x10
  416323:	cmp    rcx,rax
  416326:	je     0x41632d
  416328:	call   0x42df08
  41632d:	mov    rax,QWORD PTR [rbp+0x68]
  416331:	call   rax
  416333:	mov    DWORD PTR [rax],0xc
  416339:	xor    eax,eax
  41633b:	lea    rsp,[rbp+0x498]
  416342:	pop    rbx
  416343:	pop    rsi
  416344:	pop    rdi
  416345:	pop    r12
  416347:	pop    r13
  416349:	pop    r14
  41634b:	pop    r15
  41634d:	pop    rbp
  41634e:	ret    
  41634f:	nop
  416350:	mov    r12d,0xc
  416356:	jmp    0x415f9c
  41635b:	nop    DWORD PTR [rax+rax*1+0x0]
  416360:	mov    rcx,r12
  416363:	call   0x412940
  416368:	movzx  r8d,BYTE PTR [rbp+0x88]
  416370:	mov    rbx,rax
  416373:	jmp    0x415ff2
  416378:	nop    DWORD PTR [rax+rax*1+0x0]
  416380:	cmp    QWORD PTR [r13+0x50],0xffffffffffffffff
  416385:	jne    0x416b70
  41638b:	lea    r15,[r14+0x1]
  41638f:	mov    rax,0xffffffffffffffff
  416396:	cmp    r14,r15
  416399:	cmova  r15,rax
  41639d:	cmp    r12,r15
  4163a0:	jae    0x41640a
  4163a2:	test   r12,r12
  4163a5:	je     0x416ea0
  4163ab:	js     0x416d50
  4163b1:	add    r12,r12
  4163b4:	cmp    r12,r15
  4163b7:	cmovb  r12,r15
  4163bb:	cmp    r12,0xffffffffffffffff
  4163bf:	je     0x416d50
  4163c5:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  4163cc:	sete   sil
  4163d0:	test   rbx,rbx
  4163d3:	je     0x416eb0
  4163d9:	test   sil,sil
  4163dc:	jne    0x416eb0
  4163e2:	mov    rdx,r12
  4163e5:	mov    rcx,rbx
  4163e8:	call   0x415780
  4163ed:	mov    r9,rax
  4163f0:	test   r9,r9
  4163f3:	je     0x416d50
  4163f9:	test   r14,r14
  4163fc:	je     0x416407
  4163fe:	test   sil,sil
  416401:	jne    0x416ee0
  416407:	mov    rbx,r9
  41640a:	mov    BYTE PTR [rbx+r14*1],0x25
  41640f:	mov    QWORD PTR [rbp+0x98],rbx
  416416:	mov    rdi,QWORD PTR [r13+0x8]
  41641a:	add    r13,0x58
  41641e:	mov    rsi,QWORD PTR [r13+0x0]
  416422:	add    QWORD PTR [rbp+0x80],0x1
  41642a:	cmp    rsi,rdi
  41642d:	jne    0x415f6d
  416433:	mov    r14,r15
  416436:	mov    rbx,QWORD PTR [rbp+0x98]
  41643d:	jmp    0x416026
  416442:	mov    rbx,QWORD PTR [rbp+0x98]
  416449:	jmp    0x416017
  41644e:	xchg   ax,ax
  416450:	shl    rax,0x5
  416454:	add    rax,QWORD PTR [rbp+0x118]
  41645b:	mov    edi,DWORD PTR [rax]
  41645d:	lea    edx,[rdi-0x12]
  416460:	cmp    edx,0x4
  416463:	ja     0x416b70
  416469:	lea    rcx,[rip+0x22160]        # 0x4385d0
  416470:	mov    rax,QWORD PTR [rax+0x10]
  416474:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  416478:	add    rcx,rdx
  41647b:	jmp    rcx
  41647d:	nop    DWORD PTR [rax]
  416480:	cmp    r14,rax
  416483:	ja     0x4162a1
  416489:	mov    r12d,0xc
  41648f:	cmp    r12,rax
  416492:	jb     0x416297
  416498:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  41649f:	sete   r8b
  4164a3:	test   rbx,rbx
  4164a6:	mov    BYTE PTR [rbp+0x68],r8b
  4164aa:	je     0x416bb0
  4164b0:	test   r8b,r8b
  4164b3:	jne    0x416bb0
  4164b9:	mov    rdx,r12
  4164bc:	mov    rcx,rbx
  4164bf:	call   0x415780
  4164c4:	movzx  r8d,BYTE PTR [rbp+0x68]
  4164c9:	mov    QWORD PTR [rbp+0x98],rax
  4164d0:	cmp    QWORD PTR [rbp+0x98],0x0
  4164d8:	je     0x4162a1
  4164de:	test   r14,r14
  4164e1:	je     0x4164fa
  4164e3:	test   r8b,r8b
  4164e6:	je     0x4164fa
  4164e8:	mov    rcx,QWORD PTR [rbp+0x98]
  4164ef:	mov    r8,r14
  4164f2:	mov    rdx,rbx
  4164f5:	call   0x42de98
  4164fa:	mov    rax,QWORD PTR [rbp+0x98]
  416501:	mov    BYTE PTR [rax+r14*1],0x0
  416506:	mov    rax,QWORD PTR [rip+0x32323]        # 0x448830
  41650d:	mov    QWORD PTR [rbp+0x68],rax
  416511:	call   rax
  416513:	mov    ebx,DWORD PTR [rbp+0x88]
  416519:	mov    eax,DWORD PTR [rax]
  41651b:	mov    QWORD PTR [rbp-0x10],rsi
  41651f:	lea    edx,[rbx-0x9]
  416522:	mov    DWORD PTR [rbp+0x30],eax
  416525:	cmp    edx,0x2
  416528:	sbb    rax,rax
  41652b:	and    eax,0xa
  41652e:	add    rax,0xa
  416532:	cmp    rsi,rax
  416535:	cmovae rax,rsi
  416539:	mov    QWORD PTR [rbp-0x38],rax
  41653d:	add    rax,rax
  416540:	mov    QWORD PTR [rbp+0x20],rax
  416544:	add    rax,0x1
  416548:	cmp    edx,0x2
  41654b:	mov    QWORD PTR [rbp+0x18],rax
  41654f:	sbb    rax,rax
  416552:	and    eax,0xb
  416555:	add    rax,0xb
  416559:	cmp    rsi,rax
  41655c:	cmovae rax,rsi
  416560:	mov    QWORD PTR [rbp-0x18],rax
  416564:	add    rax,0x1
  416568:	cmp    edx,0x2
  41656b:	mov    QWORD PTR [rbp+0x10],rax
  41656f:	sbb    rax,rax
  416572:	mov    edx,0x2693
  416577:	and    eax,0x8
  41657a:	add    rax,0x9
  41657e:	cmp    rsi,rax
  416581:	cmovae rax,rsi
  416585:	mov    QWORD PTR [rbp-0x20],rax
  416589:	add    rax,0x2
  41658d:	cmp    ebx,0xc
  416590:	mov    QWORD PTR [rbp+0x8],rax
  416594:	mov    eax,0x273
  416599:	cmove  rax,rdx
  41659d:	mov    QWORD PTR [rbp-0x28],rax
  4165a1:	add    rax,rsi
  4165a4:	cmp    ebx,0xc
  4165a7:	mov    QWORD PTR [rbp+0x0],rax
  4165ab:	sete   al
  4165ae:	movzx  eax,al
  4165b1:	lea    rax,[rax+rax*1+0xd]
  4165b6:	cmp    rsi,rax
  4165b9:	cmovae rax,rsi
  4165bd:	mov    rsi,r12
  4165c0:	mov    QWORD PTR [rbp-0x30],rax
  4165c4:	add    rax,0xc
  4165c8:	mov    QWORD PTR [rbp-0x8],rax
  4165cc:	mov    rax,rsi
  4165cf:	mov    ebx,0x7fffffff
  4165d4:	mov    DWORD PTR [rbp+0xbc],0xffffffff
  4165de:	sub    rax,r14
  4165e1:	cmp    rax,0x7fffffff
  4165e7:	cmovbe rbx,rax
  4165eb:	call   QWORD PTR [rip+0x3223f]        # 0x448830
  4165f1:	mov    DWORD PTR [rax],0x0
  4165f7:	mov    eax,DWORD PTR [rbp+0x88]
  4165fd:	cmp    eax,0x11
  416600:	ja     0x416b70
  416606:	mov    edx,eax
  416608:	lea    rax,[rip+0x21fd5]        # 0x4385e4
  41660f:	movsxd rdx,DWORD PTR [rax+rdx*4]
  416613:	add    rax,rdx
  416616:	jmp    rax
  416618:	nop    DWORD PTR [rax+rax*1+0x0]
  416620:	mov    esi,0x6
  416625:	mov    DWORD PTR [rbp+0x28],0x0
  41662c:	jmp    0x416100
  416631:	add    rax,r10
  416634:	mov    edi,DWORD PTR [rax]
  416636:	cmp    edi,0x10
  416639:	mov    DWORD PTR [rbp+0x88],edi
  41663f:	jne    0x41607d
  416645:	mov    r8,QWORD PTR [r13+0x18]
  416649:	mov    r9,QWORD PTR [r13+0x20]
  41664d:	cmp    r8,r9
  416650:	je     0x416c8c
  416656:	mov    rdx,QWORD PTR [r13+0x28]
  41665a:	cmp    rdx,0xffffffffffffffff
  41665e:	je     0x4178dd
  416664:	shl    rdx,0x5
  416668:	add    rdx,r10
  41666b:	cmp    DWORD PTR [rdx],0x5
  41666e:	jne    0x416b70
  416674:	movsxd rdx,DWORD PTR [rdx+0x10]
  416678:	mov    rcx,rdx
  41667b:	shr    rcx,0x3f
  41667f:	mov    r8,rcx
  416682:	neg    r8
  416685:	xor    rdx,r8
  416688:	lea    rdi,[rdx+rcx*1]
  41668c:	mov    QWORD PTR [rbp+0x68],rdi
  416690:	mov    r8,QWORD PTR [r13+0x30]
  416694:	mov    r11,QWORD PTR [r13+0x38]
  416698:	mov    DWORD PTR [rbp+0x88],0x1
  4166a2:	cmp    r8,r11
  4166a5:	je     0x417b9c
  4166ab:	mov    rdx,QWORD PTR [r13+0x40]
  4166af:	cmp    rdx,0xffffffffffffffff
  4166b3:	je     0x41787e
  4166b9:	shl    rdx,0x5
  4166bd:	add    r10,rdx
  4166c0:	cmp    DWORD PTR [r10],0x5
  4166c4:	jne    0x416b70
  4166ca:	mov    r9d,DWORD PTR [r10+0x10]
  4166ce:	test   r9d,r9d
  4166d1:	movsxd r15,r9d
  4166d4:	js     0x41780d
  4166da:	test   r15,r15
  4166dd:	mov    rsi,QWORD PTR [rax+0x10]
  4166e1:	mov    DWORD PTR [rbp+0xc0],0x0
  4166eb:	je     0x417b70
  4166f1:	movzx  edx,WORD PTR [rsi]
  4166f4:	test   dx,dx
  4166f7:	je     0x417b70
  4166fd:	lea    rax,[rbp+0xc0]
  416704:	mov    rcx,rsi
  416707:	mov    QWORD PTR [rbp+0x98],r13
  41670e:	mov    QWORD PTR [rbp+0x78],r12
  416712:	mov    QWORD PTR [rbp+0x30],rsi
  416716:	xor    edi,edi
  416718:	mov    rsi,r15
  41671b:	mov    r12,rcx
  41671e:	mov    r13,rax
  416721:	mov    r15,QWORD PTR [rbp+0x48]
  416725:	jmp    0x416759
  416727:	nop    WORD PTR [rax+rax*1+0x0]
  416730:	cdqe   
  416732:	cmp    rax,rsi
  416735:	ja     0x417600
  41673b:	add    r12,0x2
  41673f:	add    rdi,rax
  416742:	sub    rsi,rax
  416745:	je     0x417600
  41674b:	movzx  edx,WORD PTR [r12]
  416750:	test   dx,dx
  416753:	je     0x417600
  416759:	mov    r8,r13
  41675c:	mov    rcx,r15
  41675f:	call   0x429100
  416764:	test   eax,eax
  416766:	jns    0x416730
  416768:	test   rbx,rbx
  41676b:	je     0x41677e
  41676d:	cmp    QWORD PTR [rbp+0x4e0],rbx
  416774:	je     0x41677e
  416776:	mov    rcx,rbx
  416779:	call   0x42df08
  41677e:	mov    rax,QWORD PTR [rbp+0x50]
  416782:	test   rax,rax
  416785:	je     0x41678f
  416787:	mov    rcx,rax
  41678a:	call   0x42df08
  41678f:	mov    rax,QWORD PTR [rbp+0x60]
  416793:	mov    rcx,QWORD PTR [rbp+0x208]
  41679a:	add    rax,0x20
  41679e:	cmp    rcx,rax
  4167a1:	je     0x4167a8
  4167a3:	call   0x42df08
  4167a8:	mov    rax,QWORD PTR [rbp+0x58]
  4167ac:	mov    rcx,QWORD PTR [rbp+0x118]
  4167b3:	add    rax,0x10
  4167b7:	cmp    rcx,rax
  4167ba:	je     0x4167c1
  4167bc:	call   0x42df08
  4167c1:	call   QWORD PTR [rip+0x32069]        # 0x448830
  4167c7:	mov    DWORD PTR [rax],0x2a
  4167cd:	xor    eax,eax
  4167cf:	jmp    0x41633b
  4167d4:	mov    BYTE PTR [rdi],0x6c
  4167d7:	add    rdi,0x1
  4167db:	jmp    0x4161f3
  4167e0:	mov    DWORD PTR [rax],r14d
  4167e3:	mov    r15,r14
  4167e6:	mov    QWORD PTR [rbp+0x98],rbx
  4167ed:	jmp    0x416416
  4167f2:	mov    rax,QWORD PTR [r13+0x50]
  4167f6:	shl    rax,0x5
  4167fa:	add    rax,QWORD PTR [rbp+0x118]
  416801:	mov    r9d,DWORD PTR [rax+0x10]
  416805:	mov    eax,DWORD PTR [rbp+0x78]
  416808:	cmp    eax,0x1
  41680b:	je     0x416a00
  416811:	cmp    eax,0x2
  416814:	mov    rax,QWORD PTR [rbp+0x98]
  41681b:	lea    r12,[rax+r14*1]
  41681f:	mov    rax,QWORD PTR [rbp+0x70]
  416823:	jne    0x416b75
  416829:	mov    QWORD PTR [rsp+0x30],rax
  41682e:	mov    eax,DWORD PTR [rbp+0xc4]
  416834:	mov    rdx,rbx
  416837:	mov    DWORD PTR [rsp+0x28],r9d
  41683c:	mov    r8,QWORD PTR [rbp+0x90]
  416843:	mov    rcx,r12
  416846:	mov    r9d,DWORD PTR [rbp+0xc0]
  41684d:	mov    DWORD PTR [rsp+0x20],eax
  416851:	call   0x415e00
  416856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416860:	movsxd rdx,DWORD PTR [rbp+0xbc]
  416867:	test   edx,edx
  416869:	js     0x4169c3
  41686f:	movsxd rcx,edx
  416872:	cmp    rcx,rbx
  416875:	jae    0x416882
  416877:	cmp    BYTE PTR [r12+rcx*1],0x0
  41687c:	jne    0x416b70
  416882:	cmp    eax,edx
  416884:	jle    0x41688f
  416886:	mov    DWORD PTR [rbp+0xbc],eax
  41688c:	movsxd rdx,eax
  41688f:	lea    eax,[rdx+0x1]
  416892:	cmp    rax,rbx
  416895:	jb     0x4173f0
  41689b:	cmp    rbx,0x7fffffff
  4168a2:	je     0x417410
  4168a8:	lea    rcx,[rsi+rsi*1]
  4168ac:	test   rsi,rsi
  4168af:	mov    rax,0xffffffffffffffff
  4168b6:	cmovs  rcx,rax
  4168ba:	add    edx,0x2
  4168bd:	add    rdx,r14
  4168c0:	jb     0x4168cc
  4168c2:	cmp    rcx,rdx
  4168c5:	mov    rax,rdx
  4168c8:	cmovae rax,rcx
  4168cc:	cmp    rsi,rax
  4168cf:	jae    0x4165cc
  4168d5:	test   rsi,rsi
  4168d8:	je     0x416b91
  4168de:	js     0x417490
  4168e4:	add    rsi,rsi
  4168e7:	cmp    rsi,rax
  4168ea:	cmovb  rsi,rax
  4168ee:	cmp    rsi,0xffffffffffffffff
  4168f2:	je     0x417490
  4168f8:	mov    rax,QWORD PTR [rbp+0x98]
  4168ff:	cmp    rax,QWORD PTR [rbp+0x4e0]
  416906:	sete   bl
  416909:	test   rax,rax
  41690c:	je     0x416ba0
  416912:	test   bl,bl
  416914:	jne    0x416ba0
  41691a:	mov    rcx,QWORD PTR [rbp+0x98]
  416921:	mov    rdx,rsi
  416924:	call   0x415780
  416929:	mov    r9,rax
  41692c:	test   r9,r9
  41692f:	je     0x417490
  416935:	test   bl,bl
  416937:	je     0x416942
  416939:	test   r14,r14
  41693c:	jne    0x416e20
  416942:	mov    QWORD PTR [rbp+0x98],r9
  416949:	jmp    0x4165cc
  41694e:	xchg   ax,ax
  416950:	mov    rax,QWORD PTR [r13+0x50]
  416954:	shl    rax,0x5
  416958:	add    rax,QWORD PTR [rbp+0x118]
  41695f:	mov    r9,QWORD PTR [rax+0x10]
  416963:	mov    eax,DWORD PTR [rbp+0x78]
  416966:	cmp    eax,0x1
  416969:	je     0x416e40
  41696f:	cmp    eax,0x2
  416972:	mov    rax,QWORD PTR [rbp+0x98]
  416979:	lea    r12,[rax+r14*1]
  41697d:	mov    rax,QWORD PTR [rbp+0x70]
  416981:	jne    0x416c70
  416987:	mov    QWORD PTR [rsp+0x30],rax
  41698c:	mov    QWORD PTR [rsp+0x28],r9
  416991:	mov    eax,DWORD PTR [rbp+0xc4]
  416997:	mov    r9d,DWORD PTR [rbp+0xc0]
  41699e:	mov    rdx,rbx
  4169a1:	mov    r8,QWORD PTR [rbp+0x90]
  4169a8:	mov    rcx,r12
  4169ab:	mov    DWORD PTR [rsp+0x20],eax
  4169af:	call   0x415e00
  4169b4:	movsxd rdx,DWORD PTR [rbp+0xbc]
  4169bb:	test   edx,edx
  4169bd:	jns    0x41686f
  4169c3:	cmp    BYTE PTR [rdi+0x1],0x0
  4169c7:	je     0x416c00
  4169cd:	mov    BYTE PTR [rdi+0x1],0x0
  4169d1:	jmp    0x4165cc
  4169d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4169e0:	mov    rax,QWORD PTR [r13+0x50]
  4169e4:	shl    rax,0x5
  4169e8:	add    rax,QWORD PTR [rbp+0x118]
  4169ef:	movzx  r9d,WORD PTR [rax+0x10]
  4169f4:	mov    eax,DWORD PTR [rbp+0x78]
  4169f7:	cmp    eax,0x1
  4169fa:	jne    0x416811
  416a00:	mov    rax,QWORD PTR [rbp+0x98]
  416a07:	mov    DWORD PTR [rsp+0x20],r9d
  416a0c:	mov    rdx,rbx
  416a0f:	mov    r9d,DWORD PTR [rbp+0xc0]
  416a16:	mov    r8,QWORD PTR [rbp+0x90]
  416a1d:	lea    r12,[rax+r14*1]
  416a21:	mov    rax,QWORD PTR [rbp+0x70]
  416a25:	mov    rcx,r12
  416a28:	mov    QWORD PTR [rsp+0x28],rax
  416a2d:	call   0x415e00
  416a32:	jmp    0x416860
  416a37:	nop    WORD PTR [rax+rax*1+0x0]
  416a40:	mov    rax,QWORD PTR [r13+0x50]
  416a44:	shl    rax,0x5
  416a48:	add    rax,QWORD PTR [rbp+0x118]
  416a4f:	movsx  r9d,BYTE PTR [rax+0x10]
  416a54:	mov    eax,DWORD PTR [rbp+0x78]
  416a57:	cmp    eax,0x1
  416a5a:	jne    0x416811
  416a60:	jmp    0x416a00
  416a62:	mov    rax,QWORD PTR [r13+0x50]
  416a66:	shl    rax,0x5
  416a6a:	add    rax,QWORD PTR [rbp+0x118]
  416a71:	movsd  xmm0,QWORD PTR [rax+0x10]
  416a76:	mov    eax,DWORD PTR [rbp+0x78]
  416a79:	cmp    eax,0x1
  416a7c:	je     0x4173b2
  416a82:	cmp    eax,0x2
  416a85:	mov    rax,QWORD PTR [rbp+0x98]
  416a8c:	lea    r12,[rax+r14*1]
  416a90:	mov    rax,QWORD PTR [rbp+0x70]
  416a94:	jne    0x416f74
  416a9a:	mov    QWORD PTR [rsp+0x30],rax
  416a9f:	mov    eax,DWORD PTR [rbp+0xc4]
  416aa5:	movsd  QWORD PTR [rsp+0x28],xmm0
  416aab:	mov    r9d,DWORD PTR [rbp+0xc0]
  416ab2:	mov    r8,QWORD PTR [rbp+0x90]
  416ab9:	mov    rdx,rbx
  416abc:	mov    rcx,r12
  416abf:	mov    DWORD PTR [rsp+0x20],eax
  416ac3:	call   0x415e00
  416ac8:	jmp    0x416860
  416acd:	nop    DWORD PTR [rax]
  416ad0:	mov    rax,QWORD PTR [r13+0x50]
  416ad4:	shl    rax,0x5
  416ad8:	add    rax,QWORD PTR [rbp+0x118]
  416adf:	fld    TBYTE PTR [rax+0x10]
  416ae2:	mov    eax,DWORD PTR [rbp+0x78]
  416ae5:	cmp    eax,0x1
  416ae8:	fstp   TBYTE PTR [rbp+0xa0]
  416aee:	je     0x417390
  416af4:	cmp    eax,0x2
  416af7:	mov    rax,QWORD PTR [rbp+0x98]
  416afe:	lea    r12,[rax+r14*1]
  416b02:	mov    rax,QWORD PTR [rbp+0x70]
  416b06:	jne    0x416f54
  416b0c:	mov    QWORD PTR [rsp+0x30],rax
  416b11:	mov    rax,QWORD PTR [rbp+0x40]
  416b15:	mov    QWORD PTR [rsp+0x28],rax
  416b1a:	jmp    0x416991
  416b1f:	nop
  416b20:	mov    rax,QWORD PTR [r13+0x50]
  416b24:	shl    rax,0x5
  416b28:	add    rax,QWORD PTR [rbp+0x118]
  416b2f:	movsx  r9d,WORD PTR [rax+0x10]
  416b34:	mov    eax,DWORD PTR [rbp+0x78]
  416b37:	cmp    eax,0x1
  416b3a:	jne    0x416811
  416b40:	jmp    0x416a00
  416b45:	mov    rax,QWORD PTR [r13+0x50]
  416b49:	shl    rax,0x5
  416b4d:	add    rax,QWORD PTR [rbp+0x118]
  416b54:	movzx  r9d,BYTE PTR [rax+0x10]
  416b59:	mov    eax,DWORD PTR [rbp+0x78]
  416b5c:	cmp    eax,0x1
  416b5f:	jne    0x416811
  416b65:	jmp    0x416a00
  416b6a:	nop    WORD PTR [rax+rax*1+0x0]
  416b70:	call   0x42df78
  416b75:	mov    r8,QWORD PTR [rbp+0x90]
  416b7c:	mov    QWORD PTR [rsp+0x20],rax
  416b81:	mov    rdx,rbx
  416b84:	mov    rcx,r12
  416b87:	call   0x415e00
  416b8c:	jmp    0x416860
  416b91:	mov    esi,0xc
  416b96:	jmp    0x4168e7
  416b9b:	nop    DWORD PTR [rax+rax*1+0x0]
  416ba0:	mov    rcx,rsi
  416ba3:	call   0x412940
  416ba8:	mov    r9,rax
  416bab:	jmp    0x41692c
  416bb0:	mov    rcx,r12
  416bb3:	call   0x412940
  416bb8:	movzx  r8d,BYTE PTR [rbp+0x68]
  416bbd:	mov    QWORD PTR [rbp+0x98],rax
  416bc4:	jmp    0x4164d0
  416bc9:	nop    DWORD PTR [rax+0x0]
  416bd0:	mov    QWORD PTR [rbp+0x98],rbx
  416bd7:	jmp    0x4164fa
  416bdc:	nop    DWORD PTR [rax+0x0]
  416be0:	mov    DWORD PTR [rbp+0x78],edx
  416be3:	jmp    0x416260
  416be8:	nop    DWORD PTR [rax+rax*1+0x0]
  416bf0:	xor    edx,edx
  416bf2:	jmp    0x41622e
  416bf7:	nop    WORD PTR [rax+rax*1+0x0]
  416c00:	test   eax,eax
  416c02:	jns    0x416886
  416c08:	movzx  eax,BYTE PTR [r13+0x48]
  416c0d:	mov    rcx,QWORD PTR [r13+0x50]
  416c11:	sub    eax,0x41
  416c14:	cmp    al,0x37
  416c16:	ja     0x416b70
  416c1c:	lea    rdx,[rip+0x21a09]        # 0x43862c
  416c23:	movzx  eax,al
  416c26:	movsxd rax,DWORD PTR [rdx+rax*4]
  416c2a:	add    rdx,rax
  416c2d:	jmp    rdx
  416c2f:	nop
  416c30:	cmp    rcx,0xffffffffffffffff
  416c34:	je     0x4162f0
  416c3a:	call   0x412940
  416c3f:	test   rax,rax
  416c42:	mov    QWORD PTR [rbp+0x90],rax
  416c49:	je     0x4162f0
  416c4f:	cmp    QWORD PTR [rbp+0x4e0],0x0
  416c57:	mov    rax,QWORD PTR [rbp+0x90]
  416c5e:	mov    QWORD PTR [rbp+0x50],rax
  416c62:	jne    0x415f04
  416c68:	xor    r12d,r12d
  416c6b:	jmp    0x415f0e
  416c70:	mov    r8,QWORD PTR [rbp+0x90]
  416c77:	mov    QWORD PTR [rsp+0x20],rax
  416c7c:	mov    rdx,rbx
  416c7f:	mov    rcx,r12
  416c82:	call   0x415e00
  416c87:	jmp    0x416860
  416c8c:	mov    r8,QWORD PTR [r13+0x30]
  416c90:	mov    r11,QWORD PTR [r13+0x38]
  416c94:	mov    QWORD PTR [rbp+0x68],0x0
  416c9c:	mov    DWORD PTR [rbp+0x88],0x0
  416ca6:	cmp    r8,r11
  416ca9:	jne    0x4166ab
  416caf:	mov    rsi,QWORD PTR [rax+0x10]
  416cb3:	mov    rcx,rsi
  416cb6:	xor    edi,edi
  416cb8:	xor    r15d,r15d
  416cbb:	call   0x42ddd0
  416cc0:	lea    rax,[rsi+rax*2]
  416cc4:	mov    QWORD PTR [rbp+0x98],rax
  416ccb:	xor    r9d,r9d
  416cce:	mov    QWORD PTR [rbp+0x30],0x0
  416cd6:	mov    rcx,QWORD PTR [rbp+0x68]
  416cda:	cmp    QWORD PTR [rbp+0x30],rcx
  416cde:	jae    0x4171a1
  416ce4:	test   BYTE PTR [r13+0x10],0x2
  416ce9:	jne    0x4171a1
  416cef:	mov    r11,QWORD PTR [rbp+0x68]
  416cf3:	sub    r11,QWORD PTR [rbp+0x30]
  416cf7:	mov    rax,r11
  416cfa:	add    rax,r14
  416cfd:	mov    rcx,rax
  416d00:	mov    QWORD PTR [rbp+0x88],rax
  416d07:	mov    rax,0xffffffffffffffff
  416d0e:	cmovae rax,rcx
  416d12:	cmp    r12,rax
  416d15:	jae    0x417ad7
  416d1b:	test   r12,r12
  416d1e:	je     0x417aa2
  416d24:	js     0x416d50
  416d26:	add    r12,r12
  416d29:	cmp    r14,rcx
  416d2c:	ja     0x416d50
  416d2e:	cmp    r12,QWORD PTR [rbp+0x88]
  416d35:	jae    0x4170fe
  416d3b:	mov    rax,QWORD PTR [rbp+0x88]
  416d42:	mov    r12,rax
  416d45:	add    rax,0x1
  416d49:	jne    0x4170fe
  416d4f:	nop
  416d50:	mov    QWORD PTR [rbp+0x98],rbx
  416d57:	nop    WORD PTR [rax+rax*1+0x0]
  416d60:	mov    rax,QWORD PTR [rip+0x31ac9]        # 0x448830
  416d67:	mov    QWORD PTR [rbp+0x68],rax
  416d6b:	jmp    0x4162c0
  416d70:	xor    r15d,r15d
  416d73:	movabs r11,0x1999999999999999
  416d7d:	nop    DWORD PTR [rax]
  416d80:	add    rcx,0x1
  416d84:	movsx  eax,BYTE PTR [rcx-0x1]
  416d88:	mov    rdx,0xffffffffffffffff
  416d8f:	sub    eax,0x30
  416d92:	cmp    r15,r11
  416d95:	cdqe   
  416d97:	ja     0x416da0
  416d99:	lea    rdx,[r15+r15*4]
  416d9d:	add    rdx,rdx
  416da0:	add    rdx,rax
  416da3:	mov    rax,0xffffffffffffffff
  416daa:	mov    r15,rdx
  416dad:	cmovb  r15,rax
  416db1:	cmp    rcx,r9
  416db4:	jne    0x416d80
  416db6:	jmp    0x4160bd
  416dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  416dc0:	add    rdx,0x1
  416dc4:	xor    esi,esi
  416dc6:	cmp    rcx,rdx
  416dc9:	je     0x4160f9
  416dcf:	movabs r9,0x1999999999999999
  416dd9:	nop    DWORD PTR [rax+0x0]
  416de0:	add    rdx,0x1
  416de4:	movsx  eax,BYTE PTR [rdx-0x1]
  416de8:	mov    r10,0xffffffffffffffff
  416def:	sub    eax,0x30
  416df2:	cmp    rsi,r9
  416df5:	cdqe   
  416df7:	ja     0x416e00
  416df9:	lea    r10,[rsi+rsi*4]
  416dfd:	add    r10,r10
  416e00:	mov    rsi,r10
  416e03:	add    rsi,rax
  416e06:	mov    rax,0xffffffffffffffff
  416e0d:	cmovb  rsi,rax
  416e11:	cmp    rdx,rcx
  416e14:	jne    0x416de0
  416e16:	jmp    0x4160f9
  416e1b:	nop    DWORD PTR [rax+rax*1+0x0]
  416e20:	mov    rdx,QWORD PTR [rbp+0x98]
  416e27:	mov    r8,r14
  416e2a:	mov    rcx,r9
  416e2d:	call   0x42de98
  416e32:	mov    QWORD PTR [rbp+0x98],rax
  416e39:	jmp    0x4165cc
  416e3e:	xchg   ax,ax
  416e40:	mov    rax,QWORD PTR [rbp+0x98]
  416e47:	mov    QWORD PTR [rsp+0x20],r9
  416e4c:	lea    r12,[rax+r14*1]
  416e50:	mov    rax,QWORD PTR [rbp+0x70]
  416e54:	mov    QWORD PTR [rsp+0x28],rax
  416e59:	mov    r9d,DWORD PTR [rbp+0xc0]
  416e60:	mov    r8,QWORD PTR [rbp+0x90]
  416e67:	mov    rdx,rbx
  416e6a:	mov    rcx,r12
  416e6d:	call   0x415e00
  416e72:	jmp    0x416860
  416e77:	nop    WORD PTR [rax+rax*1+0x0]
  416e80:	or     r8d,0x2
  416e84:	neg    r15
  416e87:	jmp    0x4160bd
  416e8c:	nop    DWORD PTR [rax+0x0]
  416e90:	xor    r15d,r15d
  416e93:	jmp    0x4160bd
  416e98:	nop    DWORD PTR [rax+rax*1+0x0]
  416ea0:	mov    r12d,0xc
  416ea6:	jmp    0x4163b4
  416eab:	nop    DWORD PTR [rax+rax*1+0x0]
  416eb0:	mov    rcx,r12
  416eb3:	call   0x412940
  416eb8:	mov    r9,rax
  416ebb:	jmp    0x4163f0
  416ec0:	xor    eax,eax
  416ec2:	jmp    0x41633b
  416ec7:	nop    WORD PTR [rax+rax*1+0x0]
  416ed0:	mov    BYTE PTR [rdi],0x4c
  416ed3:	add    rdi,0x1
  416ed7:	jmp    0x4161f3
  416edc:	nop    DWORD PTR [rax+0x0]
  416ee0:	mov    rdx,rbx
  416ee3:	mov    r8,r14
  416ee6:	mov    rcx,r9
  416ee9:	call   0x42de98
  416eee:	mov    rbx,rax
  416ef1:	jmp    0x41640a
  416ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416f00:	mov    QWORD PTR [rax],r14
  416f03:	mov    r15,r14
  416f06:	mov    QWORD PTR [rbp+0x98],rbx
  416f0d:	jmp    0x416416
  416f12:	mov    WORD PTR [rax],r14w
  416f16:	mov    r15,r14
  416f19:	mov    QWORD PTR [rbp+0x98],rbx
  416f20:	jmp    0x416416
  416f25:	mov    BYTE PTR [rax],r14b
  416f28:	mov    r15,r14
  416f2b:	mov    QWORD PTR [rbp+0x98],rbx
  416f32:	jmp    0x416416
  416f37:	nop    WORD PTR [rax+rax*1+0x0]
  416f40:	mov    BYTE PTR [rdi],0x49
  416f43:	mov    BYTE PTR [rdi+0x1],0x36
  416f47:	add    rdi,0x3
  416f4b:	mov    BYTE PTR [rdi-0x1],0x34
  416f4f:	jmp    0x4161f3
  416f54:	mov    r9,QWORD PTR [rbp+0x40]
  416f58:	mov    r8,QWORD PTR [rbp+0x90]
  416f5f:	mov    rdx,rbx
  416f62:	mov    QWORD PTR [rsp+0x20],rax
  416f67:	mov    rcx,r12
  416f6a:	call   0x415e00
  416f6f:	jmp    0x416860
  416f74:	mov    r8,QWORD PTR [rbp+0x90]
  416f7b:	movapd xmm3,xmm0
  416f7f:	movq   r9,xmm0
  416f84:	mov    QWORD PTR [rsp+0x20],rax
  416f89:	mov    rdx,rbx
  416f8c:	mov    rcx,r12
  416f8f:	call   0x415e00
  416f94:	jmp    0x416860
  416f99:	nop    DWORD PTR [rax+0x0]
  416fa0:	mov    rcx,rax
  416fa3:	call   0x42df08
  416fa8:	jmp    0x4162d9
  416fad:	cmp    DWORD PTR [rbp+0x88],0x10
  416fb4:	je     0x416b70
  416fba:	mov    rax,rcx
  416fbd:	mov    edx,DWORD PTR [rbp+0x28]
  416fc0:	shl    rax,0x5
  416fc4:	add    rax,QWORD PTR [rbp+0x118]
  416fcb:	test   edx,edx
  416fcd:	mov    rcx,QWORD PTR [rax+0x10]
  416fd1:	jne    0x417b7e
  416fd7:	call   0x42de30
  416fdc:	cmp    r15,rax
  416fdf:	jbe    0x417ae7
  416fe5:	lea    rdx,[r15+0x1]
  416fe9:	mov    rax,r15
  416fec:	cmp    rdx,rax
  416fef:	jae    0x417987
  416ff5:	mov    rdx,0xffffffffffffffff
  416ffc:	add    rdx,r14
  416fff:	mov    rax,0xffffffffffffffff
  417006:	cmovb  rdx,rax
  41700a:	test   rsi,rsi
  41700d:	js     0x417adf
  417013:	lea    r8,[rsi+rsi*1]
  417017:	lea    rcx,[r8+0xc]
  41701b:	cmp    r8,rcx
  41701e:	ja     0x4168d5
  417024:	cmp    rdx,rcx
  417027:	cmovb  rdx,rcx
  41702b:	cmp    rsi,rdx
  41702e:	mov    rax,rdx
  417031:	jae    0x4165cc
  417037:	jmp    0x4168d5
  41703c:	mov    eax,0x13
  417041:	jmp    0x416fdc
  417043:	mov    rcx,QWORD PTR [rbp+0x10]
  417047:	cmp    QWORD PTR [rbp-0x18],rcx
  41704b:	ja     0x4170dd
  417051:	mov    rax,QWORD PTR [rbp+0x10]
  417055:	jmp    0x416fdc
  417057:	xor    edx,edx
  417059:	mov    r11,QWORD PTR [rbp-0x38]
  41705d:	cmp    QWORD PTR [rbp+0x20],r11
  417061:	mov    rax,0xffffffffffffffff
  417068:	jb     0x416fec
  41706a:	mov    r11,QWORD PTR [rbp+0x18]
  41706e:	cmp    QWORD PTR [rbp+0x20],r11
  417072:	ja     0x416fec
  417078:	mov    rax,QWORD PTR [rbp+0x18]
  41707c:	jmp    0x416fdc
  417081:	cmp    DWORD PTR [rbp+0x88],0xe
  417088:	mov    eax,0x1
  41708d:	jne    0x416fdc
  417093:	mov    rax,QWORD PTR [rip+0x267f6]        # 0x43d890
  41709a:	mov    rax,QWORD PTR [rax]
  41709d:	movsxd rax,DWORD PTR [rax]
  4170a0:	jmp    0x416fdc
  4170a5:	mov    rcx,QWORD PTR [rbp+0x8]
  4170a9:	cmp    QWORD PTR [rbp-0x20],rcx
  4170ad:	ja     0x4170dd
  4170af:	mov    rax,QWORD PTR [rbp+0x8]
  4170b3:	jmp    0x416fdc
  4170b8:	mov    rcx,QWORD PTR [rbp+0x0]
  4170bc:	cmp    QWORD PTR [rbp-0x28],rcx
  4170c0:	ja     0x4170dd
  4170c2:	mov    rax,QWORD PTR [rbp+0x0]
  4170c6:	jmp    0x416fdc
  4170cb:	mov    rax,QWORD PTR [rbp-0x10]
  4170cf:	add    rax,0xc
  4170d3:	cmp    rax,0xb
  4170d7:	ja     0x416fdc
  4170dd:	xor    edx,edx
  4170df:	mov    rax,0xffffffffffffffff
  4170e6:	jmp    0x416fec
  4170eb:	mov    rcx,QWORD PTR [rbp-0x30]
  4170ef:	cmp    QWORD PTR [rbp-0x8],rcx
  4170f3:	jb     0x4170dd
  4170f5:	mov    rax,QWORD PTR [rbp-0x8]
  4170f9:	jmp    0x416fdc
  4170fe:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  417105:	mov    DWORD PTR [rbp+0x20],r9d
  417109:	mov    QWORD PTR [rbp+0x78],r11
  41710d:	sete   r8b
  417111:	test   rbx,rbx
  417114:	mov    BYTE PTR [rbp+0x28],r8b
  417118:	je     0x417aba
  41711e:	test   r8b,r8b
  417121:	jne    0x417aba
  417127:	mov    rdx,r12
  41712a:	mov    rcx,rbx
  41712d:	call   0x415780
  417132:	movzx  r8d,BYTE PTR [rbp+0x28]
  417137:	mov    r9d,DWORD PTR [rbp+0x20]
  41713b:	mov    r10,rax
  41713e:	mov    r11,QWORD PTR [rbp+0x78]
  417142:	test   r10,r10
  417145:	je     0x416d50
  41714b:	test   r14,r14
  41714e:	je     0x417176
  417150:	test   r8b,r8b
  417153:	je     0x417176
  417155:	mov    rcx,r10
  417158:	mov    r8,r14
  41715b:	mov    rdx,rbx
  41715e:	mov    DWORD PTR [rbp+0x28],r9d
  417162:	mov    QWORD PTR [rbp+0x78],r11
  417166:	call   0x42de98
  41716b:	mov    r11,QWORD PTR [rbp+0x78]
  41716f:	mov    r9d,DWORD PTR [rbp+0x28]
  417173:	mov    r10,rax
  417176:	lea    rcx,[r10+r14*1]
  41717a:	mov    r8,r11
  41717d:	mov    edx,0x20
  417182:	mov    DWORD PTR [rbp+0x28],r9d
  417186:	mov    QWORD PTR [rbp+0x78],r10
  41718a:	call   0x42de88
  41718f:	mov    r10,QWORD PTR [rbp+0x78]
  417193:	mov    r14,QWORD PTR [rbp+0x88]
  41719a:	mov    r9d,DWORD PTR [rbp+0x28]
  41719e:	mov    rbx,r10
  4171a1:	or     r9d,r15d
  4171a4:	je     0x4174a0
  4171aa:	mov    rdx,rdi
  4171ad:	mov    rax,0xffffffffffffffff
  4171b4:	mov    DWORD PTR [rbp+0xb4],0x0
  4171be:	add    rdx,r14
  4171c1:	cmovae rax,rdx
  4171c5:	cmp    rax,r12
  4171c8:	jbe    0x4176a5
  4171ce:	test   r12,r12
  4171d1:	je     0x41763f
  4171d7:	js     0x4171e5
  4171d9:	add    r12,r12
  4171dc:	cmp    rdx,r14
  4171df:	jae    0x41764e
  4171e5:	mov    rax,QWORD PTR [rip+0x31644]        # 0x448830
  4171ec:	mov    QWORD PTR [rbp+0x98],rbx
  4171f3:	mov    QWORD PTR [rbp+0x68],rax
  4171f7:	jmp    0x4162c0
  4171fc:	nop    DWORD PTR [rax+0x0]
  417200:	mov    rax,QWORD PTR [rbp+0x60]
  417204:	mov    rcx,QWORD PTR [rbp+0x208]
  41720b:	add    rax,0x20
  41720f:	cmp    rcx,rax
  417212:	je     0x417219
  417214:	call   0x42df08
  417219:	mov    rax,QWORD PTR [rbp+0x58]
  41721d:	mov    rcx,QWORD PTR [rbp+0x118]
  417224:	add    rax,0x10
  417228:	cmp    rcx,rax
  41722b:	je     0x417232
  41722d:	call   0x42df08
  417232:	call   QWORD PTR [rip+0x315f8]        # 0x448830
  417238:	mov    DWORD PTR [rax],0x16
  41723e:	xor    eax,eax
  417240:	jmp    0x41633b
  417245:	mov    rax,rbx
  417248:	lea    rsi,[r14+0x1]
  41724c:	mov    r15,rbx
  41724f:	mov    QWORD PTR [rbp+0x98],rax
  417256:	mov    rax,0xffffffffffffffff
  41725d:	mov    rbx,r12
  417260:	cmp    rsi,r14
  417263:	mov    rdx,rax
  417266:	cmovae rdx,rsi
  41726a:	cmp    rdx,r12
  41726d:	jbe    0x4172f8
  417273:	test   r12,r12
  417276:	je     0x41796a
  41727c:	js     0x417b36
  417282:	add    rbx,rbx
  417285:	cmp    rsi,r14
  417288:	mov    rax,rsi
  41728b:	jae    0x417294
  41728d:	mov    rax,0xffffffffffffffff
  417294:	cmp    rax,rbx
  417297:	jbe    0x4172a5
  417299:	cmp    rsi,r14
  41729c:	jb     0x416d60
  4172a2:	mov    rbx,rsi
  4172a5:	cmp    rbx,0xffffffffffffffff
  4172a9:	je     0x416d60
  4172af:	cmp    QWORD PTR [rbp+0x4e0],r15
  4172b6:	sete   dil
  4172ba:	test   r15,r15
  4172bd:	je     0x417a2e
  4172c3:	test   dil,dil
  4172c6:	jne    0x417a2e
  4172cc:	mov    rdx,rbx
  4172cf:	mov    rcx,r15
  4172d2:	call   0x415780
  4172d7:	mov    r9,rax
  4172da:	test   r9,r9
  4172dd:	je     0x416d60
  4172e3:	test   r14,r14
  4172e6:	je     0x4172f1
  4172e8:	test   dil,dil
  4172eb:	jne    0x417a88
  4172f1:	mov    QWORD PTR [rbp+0x98],r9
  4172f8:	mov    rax,QWORD PTR [rbp+0x98]
  4172ff:	cmp    rax,QWORD PTR [rbp+0x4e0]
  417306:	mov    BYTE PTR [rax+r14*1],0x0
  41730b:	je     0x41732e
  41730d:	cmp    rbx,rsi
  417310:	jbe    0x41732e
  417312:	mov    rdx,rsi
  417315:	mov    rcx,rax
  417318:	mov    rdi,rax
  41731b:	call   0x415780
  417320:	test   rax,rax
  417323:	cmove  rax,rdi
  417327:	mov    QWORD PTR [rbp+0x98],rax
  41732e:	mov    rax,QWORD PTR [rbp+0x50]
  417332:	test   rax,rax
  417335:	je     0x41733f
  417337:	mov    rcx,rax
  41733a:	call   0x42df08
  41733f:	mov    rax,QWORD PTR [rbp+0x60]
  417343:	mov    rcx,QWORD PTR [rbp+0x208]
  41734a:	add    rax,0x20
  41734e:	cmp    rcx,rax
  417351:	je     0x417358
  417353:	call   0x42df08
  417358:	mov    rax,QWORD PTR [rbp+0x58]
  41735c:	mov    rcx,QWORD PTR [rbp+0x118]
  417363:	add    rax,0x10
  417367:	cmp    rcx,rax
  41736a:	je     0x417371
  41736c:	call   0x42df08
  417371:	mov    rax,QWORD PTR [rbp+0x4e8]
  417378:	mov    QWORD PTR [rax],r14
  41737b:	mov    rax,QWORD PTR [rbp+0x98]
  417382:	jmp    0x41633b
  417387:	nop    WORD PTR [rax+rax*1+0x0]
  417390:	mov    rax,QWORD PTR [rbp+0x98]
  417397:	lea    r12,[rax+r14*1]
  41739b:	mov    rax,QWORD PTR [rbp+0x70]
  41739f:	mov    QWORD PTR [rsp+0x28],rax
  4173a4:	mov    rax,QWORD PTR [rbp+0x40]
  4173a8:	mov    QWORD PTR [rsp+0x20],rax
  4173ad:	jmp    0x416e59
  4173b2:	mov    rax,QWORD PTR [rbp+0x98]
  4173b9:	mov    r9d,DWORD PTR [rbp+0xc0]
  4173c0:	movsd  QWORD PTR [rsp+0x20],xmm0
  4173c6:	mov    r8,QWORD PTR [rbp+0x90]
  4173cd:	mov    rdx,rbx
  4173d0:	lea    r12,[rax+r14*1]
  4173d4:	mov    rax,QWORD PTR [rbp+0x70]
  4173d8:	mov    rcx,r12
  4173db:	mov    QWORD PTR [rsp+0x28],rax
  4173e0:	call   0x415e00
  4173e5:	jmp    0x416860
  4173ea:	nop    WORD PTR [rax+rax*1+0x0]
  4173f0:	lea    r15,[rdx+r14*1]
  4173f4:	mov    r12,rsi
  4173f7:	call   QWORD PTR [rip+0x31433]        # 0x448830
  4173fd:	mov    edi,DWORD PTR [rbp+0x30]
  417400:	mov    DWORD PTR [rax],edi
  417402:	jmp    0x416416
  417407:	nop    WORD PTR [rax+rax*1+0x0]
  417410:	mov    rax,QWORD PTR [rbp+0x98]
  417417:	test   rax,rax
  41741a:	je     0x417431
  41741c:	cmp    QWORD PTR [rbp+0x4e0],rax
  417423:	je     0x417431
  417425:	mov    rcx,QWORD PTR [rbp+0x98]
  41742c:	call   0x42df08
  417431:	mov    rax,QWORD PTR [rbp+0x50]
  417435:	test   rax,rax
  417438:	je     0x417442
  41743a:	mov    rcx,rax
  41743d:	call   0x42df08
  417442:	mov    rax,QWORD PTR [rbp+0x60]
  417446:	mov    rcx,QWORD PTR [rbp+0x208]
  41744d:	add    rax,0x20
  417451:	cmp    rcx,rax
  417454:	je     0x41745b
  417456:	call   0x42df08
  41745b:	mov    rax,QWORD PTR [rbp+0x58]
  41745f:	mov    rcx,QWORD PTR [rbp+0x118]
  417466:	add    rax,0x10
  41746a:	cmp    rcx,rax
  41746d:	je     0x417474
  41746f:	call   0x42df08
  417474:	call   QWORD PTR [rip+0x313b6]        # 0x448830
  41747a:	mov    DWORD PTR [rax],0x84
  417480:	xor    eax,eax
  417482:	jmp    0x41633b
  417487:	nop    WORD PTR [rax+rax*1+0x0]
  417490:	mov    rax,QWORD PTR [rbp+0x98]
  417497:	mov    r15,rax
  41749a:	jmp    0x4162af
  41749f:	nop
  4174a0:	cmp    rsi,QWORD PTR [rbp+0x98]
  4174a7:	mov    DWORD PTR [rbp+0xb8],0x0
  4174b1:	jae    0x417b94
  4174b7:	movzx  edx,WORD PTR [rsi]
  4174ba:	test   dx,dx
  4174bd:	je     0x416b70
  4174c3:	lea    rax,[rbp+0xb8]
  4174ca:	mov    rdi,QWORD PTR [rbp+0x48]
  4174ce:	mov    QWORD PTR [rbp+0x28],r13
  4174d2:	mov    QWORD PTR [rbp+0x88],rax
  4174d9:	nop    DWORD PTR [rax+0x0]
  4174e0:	mov    r8,QWORD PTR [rbp+0x88]
  4174e7:	mov    rcx,rdi
  4174ea:	call   0x429100
  4174ef:	test   eax,eax
  4174f1:	jle    0x417a3e
  4174f7:	movsxd r13,eax
  4174fa:	mov    rax,0xffffffffffffffff
  417501:	mov    r15,r13
  417504:	add    r15,r14
  417507:	cmovae rax,r15
  41750b:	cmp    rax,r12
  41750e:	jbe    0x41759e
  417514:	test   r12,r12
  417517:	je     0x417540
  417519:	js     0x417523
  41751b:	add    r12,r12
  41751e:	cmp    r15,r14
  417521:	jae    0x41754b
  417523:	mov    rax,QWORD PTR [rip+0x31306]        # 0x448830
  41752a:	mov    QWORD PTR [rbp+0x98],rbx
  417531:	mov    QWORD PTR [rbp+0x68],rax
  417535:	jmp    0x4162c0
  41753a:	nop    WORD PTR [rax+rax*1+0x0]
  417540:	cmp    r15,r14
  417543:	jb     0x417523
  417545:	mov    r12d,0xc
  41754b:	cmp    r12,r15
  41754e:	jae    0x417560
  417550:	cmp    r15,0xffffffffffffffff
  417554:	mov    r12,r15
  417557:	je     0x417523
  417559:	nop    DWORD PTR [rax+0x0]
  417560:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  417567:	sete   r8b
  41756b:	test   rbx,rbx
  41756e:	mov    BYTE PTR [rbp+0x78],r8b
  417572:	je     0x4175d2
  417574:	test   r8b,r8b
  417577:	jne    0x4175d2
  417579:	mov    rdx,r12
  41757c:	mov    rcx,rbx
  41757f:	call   0x415780
  417584:	movzx  r8d,BYTE PTR [rbp+0x78]
  417589:	mov    r10,rax
  41758c:	test   r10,r10
  41758f:	je     0x417523
  417591:	test   r14,r14
  417594:	je     0x41759b
  417596:	test   r8b,r8b
  417599:	jne    0x4175e4
  41759b:	mov    rbx,r10
  41759e:	lea    rcx,[rbx+r14*1]
  4175a2:	mov    r8,r13
  4175a5:	mov    rdx,rdi
  4175a8:	add    rsi,0x2
  4175ac:	call   0x42de98
  4175b1:	cmp    rsi,QWORD PTR [rbp+0x98]
  4175b8:	jae    0x417a68
  4175be:	movzx  edx,WORD PTR [rsi]
  4175c1:	test   dx,dx
  4175c4:	je     0x416b70
  4175ca:	mov    r14,r15
  4175cd:	jmp    0x4174e0
  4175d2:	mov    rcx,r12
  4175d5:	call   0x412940
  4175da:	movzx  r8d,BYTE PTR [rbp+0x78]
  4175df:	mov    r10,rax
  4175e2:	jmp    0x41758c
  4175e4:	mov    rdx,rbx
  4175e7:	mov    r8,r14
  4175ea:	mov    rcx,r10
  4175ed:	call   0x42de98
  4175f2:	mov    rbx,rax
  4175f5:	jmp    0x41759e
  4175f7:	nop    WORD PTR [rax+rax*1+0x0]
  417600:	mov    r13,QWORD PTR [rbp+0x98]
  417607:	mov    rsi,QWORD PTR [rbp+0x30]
  41760b:	mov    QWORD PTR [rbp+0x98],r12
  417612:	mov    r12,QWORD PTR [rbp+0x78]
  417616:	mov    ecx,DWORD PTR [rbp+0x88]
  41761c:	mov    r15d,0x1
  417622:	test   ecx,ecx
  417624:	je     0x416ccb
  41762a:	mov    QWORD PTR [rbp+0x30],rdi
  41762e:	mov    r9d,0x1
  417634:	mov    r15d,0x1
  41763a:	jmp    0x416cd6
  41763f:	cmp    rdx,r14
  417642:	jb     0x4171e5
  417648:	mov    r12d,0xc
  41764e:	cmp    r12,rdx
  417651:	jae    0x417660
  417653:	cmp    rdx,0xffffffffffffffff
  417657:	je     0x4171e5
  41765d:	mov    r12,rdx
  417660:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  417667:	sete   r15b
  41766b:	test   rbx,rbx
  41766e:	je     0x417a78
  417674:	test   r15b,r15b
  417677:	jne    0x417a78
  41767d:	mov    rdx,r12
  417680:	mov    rcx,rbx
  417683:	call   0x415780
  417688:	mov    r9,rax
  41768b:	test   r9,r9
  41768e:	je     0x4171e5
  417694:	test   r14,r14
  417697:	je     0x4176a2
  417699:	test   r15b,r15b
  41769c:	jne    0x417af0
  4176a2:	mov    rbx,r9
  4176a5:	test   rdi,rdi
  4176a8:	je     0x417b8c
  4176ae:	movzx  edx,WORD PTR [rsi]
  4176b1:	test   dx,dx
  4176b4:	je     0x416b70
  4176ba:	mov    r15,r14
  4176bd:	mov    QWORD PTR [rbp+0x88],r13
  4176c4:	mov    QWORD PTR [rbp+0x78],r12
  4176c8:	mov    r13,QWORD PTR [rbp+0x48]
  4176cc:	mov    r14,QWORD PTR [rbp+0x38]
  4176d0:	jmp    0x4176de
  4176d2:	movzx  edx,WORD PTR [rsi]
  4176d5:	test   dx,dx
  4176d8:	je     0x416b70
  4176de:	mov    r8,r14
  4176e1:	mov    rcx,r13
  4176e4:	call   0x429100
  4176e9:	test   eax,eax
  4176eb:	jle    0x416b70
  4176f1:	movsxd r12,eax
  4176f4:	lea    rcx,[rbx+r15*1]
  4176f8:	mov    rdx,r13
  4176fb:	mov    r8,r12
  4176fe:	add    r15,r12
  417701:	add    rsi,0x2
  417705:	call   0x42de98
  41770a:	sub    rdi,r12
  41770d:	jne    0x4176d2
  41770f:	mov    r13,QWORD PTR [rbp+0x88]
  417716:	mov    r12,QWORD PTR [rbp+0x78]
  41771a:	cmp    rsi,QWORD PTR [rbp+0x98]
  417721:	jne    0x416b70
  417727:	mov    QWORD PTR [rbp+0x98],rbx
  41772e:	mov    rdi,QWORD PTR [rbp+0x68]
  417732:	cmp    QWORD PTR [rbp+0x30],rdi
  417736:	jae    0x416416
  41773c:	test   BYTE PTR [r13+0x10],0x2
  417741:	je     0x416416
  417747:	sub    rdi,QWORD PTR [rbp+0x30]
  41774b:	mov    rax,0xffffffffffffffff
  417752:	mov    rbx,rdi
  417755:	add    rbx,r15
  417758:	cmovae rax,rbx
  41775c:	cmp    r12,rax
  41775f:	jae    0x417b2a
  417765:	test   r12,r12
  417768:	je     0x417b06
  41776e:	js     0x416d60
  417774:	add    r12,r12
  417777:	cmp    r15,rbx
  41777a:	ja     0x416d60
  417780:	cmp    r12,rbx
  417783:	jae    0x417792
  417785:	cmp    rbx,0xffffffffffffffff
  417789:	mov    r12,rbx
  41778c:	je     0x416d60
  417792:	mov    rax,QWORD PTR [rbp+0x98]
  417799:	cmp    rax,QWORD PTR [rbp+0x4e0]
  4177a0:	sete   sil
  4177a4:	test   rax,rax
  4177a7:	je     0x417b1a
  4177ad:	test   sil,sil
  4177b0:	jne    0x417b1a
  4177b6:	mov    rcx,QWORD PTR [rbp+0x98]
  4177bd:	mov    rdx,r12
  4177c0:	call   0x415780
  4177c5:	mov    r14,rax
  4177c8:	test   r14,r14
  4177cb:	je     0x416d60
  4177d1:	test   r15,r15
  4177d4:	je     0x4177ed
  4177d6:	test   sil,sil
  4177d9:	je     0x4177ed
  4177db:	mov    rdx,QWORD PTR [rbp+0x98]
  4177e2:	mov    r8,r15
  4177e5:	mov    rcx,r14
  4177e8:	call   0x42de98
  4177ed:	lea    rcx,[r14+r15*1]
  4177f1:	mov    r8,rdi
  4177f4:	mov    edx,0x20
  4177f9:	mov    r15,rbx
  4177fc:	call   0x42de88
  417801:	mov    QWORD PTR [rbp+0x98],r14
  417808:	jmp    0x416416
  41780d:	mov    rsi,QWORD PTR [rax+0x10]
  417811:	mov    eax,DWORD PTR [rbp+0x88]
  417817:	test   eax,eax
  417819:	je     0x416cb3
  41781f:	movzx  edx,WORD PTR [rsi]
  417822:	mov    DWORD PTR [rbp+0xc0],0x0
  41782c:	test   dx,dx
  41782f:	je     0x417b5c
  417835:	lea    rax,[rbp+0xc0]
  41783c:	mov    QWORD PTR [rbp+0x98],r13
  417843:	xor    edi,edi
  417845:	mov    QWORD PTR [rbp+0x88],rsi
  41784c:	mov    r15,QWORD PTR [rbp+0x48]
  417850:	mov    r13,rax
  417853:	jmp    0x41786a
  417855:	add    rsi,0x2
  417859:	movzx  edx,WORD PTR [rsi]
  41785c:	cdqe   
  41785e:	add    rdi,rax
  417861:	test   dx,dx
  417864:	je     0x417931
  41786a:	mov    r8,r13
  41786d:	mov    rcx,r15
  417870:	call   0x429100
  417875:	test   eax,eax
  417877:	jns    0x417855
  417879:	jmp    0x416768
  41787e:	add    r8,0x1
  417882:	cmp    r11,r8
  417885:	je     0x417b47
  41788b:	xor    r15d,r15d
  41788e:	movabs r10,0x1999999999999999
  417898:	nop    DWORD PTR [rax+rax*1+0x0]
  4178a0:	add    r8,0x1
  4178a4:	movsx  edx,BYTE PTR [r8-0x1]
  4178a9:	mov    rcx,0xffffffffffffffff
  4178b0:	sub    edx,0x30
  4178b3:	cmp    r15,r10
  4178b6:	movsxd rdx,edx
  4178b9:	ja     0x4178c2
  4178bb:	lea    rcx,[r15+r15*4]
  4178bf:	add    rcx,rcx
  4178c2:	add    rcx,rdx
  4178c5:	mov    rdx,0xffffffffffffffff
  4178cc:	mov    r15,rcx
  4178cf:	cmovb  r15,rdx
  4178d3:	cmp    r8,r11
  4178d6:	jne    0x4178a0
  4178d8:	jmp    0x4166da
  4178dd:	xor    esi,esi
  4178df:	movabs r11,0x1999999999999999
  4178e9:	nop    DWORD PTR [rax+0x0]
  4178f0:	add    r8,0x1
  4178f4:	movsx  edx,BYTE PTR [r8-0x1]
  4178f9:	mov    rcx,0xffffffffffffffff
  417900:	sub    edx,0x30
  417903:	cmp    rsi,r11
  417906:	movsxd rdx,edx
  417909:	ja     0x417912
  41790b:	lea    rcx,[rsi+rsi*4]
  41790f:	add    rcx,rcx
  417912:	mov    rsi,rcx
  417915:	add    rsi,rdx
  417918:	mov    rdx,0xffffffffffffffff
  41791f:	cmovb  rsi,rdx
  417923:	cmp    r8,r9
  417926:	jne    0x4178f0
  417928:	mov    QWORD PTR [rbp+0x68],rsi
  41792c:	jmp    0x416690
  417931:	mov    r13,QWORD PTR [rbp+0x98]
  417938:	mov    QWORD PTR [rbp+0x98],rsi
  41793f:	mov    rsi,QWORD PTR [rbp+0x88]
  417946:	mov    QWORD PTR [rbp+0x30],rdi
  41794a:	mov    rdi,QWORD PTR [rbp+0x68]
  41794e:	cmp    QWORD PTR [rbp+0x30],rdi
  417952:	mov    rdi,QWORD PTR [rbp+0x30]
  417956:	jae    0x4171aa
  41795c:	xor    r15d,r15d
  41795f:	mov    r9d,0x1
  417965:	jmp    0x416ce4
  41796a:	cmp    rsi,r14
  41796d:	jb     0x416d60
  417973:	cmp    rsi,0xc
  417977:	mov    ebx,0xc
  41797c:	jbe    0x4172af
  417982:	jmp    0x4172a2
  417987:	cmp    rdx,rbx
  41798a:	ja     0x416ffc
  417990:	movsxd rdx,DWORD PTR [rbp+0xbc]
  417997:	test   edx,edx
  417999:	jns    0x41688f
  41799f:	call   QWORD PTR [rip+0x30e8b]        # 0x448830
  4179a5:	mov    ebx,DWORD PTR [rax]
  4179a7:	test   ebx,ebx
  4179a9:	jne    0x4179bf
  4179ab:	movzx  eax,BYTE PTR [r13+0x48]
  4179b0:	mov    bl,0x2a
  4179b2:	and    eax,0xffffffef
  4179b5:	cmp    al,0x63
  4179b7:	mov    eax,0x16
  4179bc:	cmovne ebx,eax
  4179bf:	mov    rax,QWORD PTR [rbp+0x98]
  4179c6:	test   rax,rax
  4179c9:	je     0x4179dc
  4179cb:	cmp    QWORD PTR [rbp+0x4e0],rax
  4179d2:	je     0x4179dc
  4179d4:	mov    rcx,rax
  4179d7:	call   0x42df08
  4179dc:	mov    rax,QWORD PTR [rbp+0x50]
  4179e0:	test   rax,rax
  4179e3:	je     0x4179ed
  4179e5:	mov    rcx,rax
  4179e8:	call   0x42df08
  4179ed:	mov    rax,QWORD PTR [rbp+0x60]
  4179f1:	mov    rcx,QWORD PTR [rbp+0x208]
  4179f8:	add    rax,0x20
  4179fc:	cmp    rcx,rax
  4179ff:	je     0x417a06
  417a01:	call   0x42df08
  417a06:	mov    rax,QWORD PTR [rbp+0x58]
  417a0a:	mov    rcx,QWORD PTR [rbp+0x118]
  417a11:	add    rax,0x10
  417a15:	cmp    rcx,rax
  417a18:	je     0x417a1f
  417a1a:	call   0x42df08
  417a1f:	call   QWORD PTR [rip+0x30e0b]        # 0x448830
  417a25:	mov    DWORD PTR [rax],ebx
  417a27:	xor    eax,eax
  417a29:	jmp    0x41633b
  417a2e:	mov    rcx,rbx
  417a31:	call   0x412940
  417a36:	mov    r9,rax
  417a39:	jmp    0x4172da
  417a3e:	test   rbx,rbx
  417a41:	mov    QWORD PTR [rbp+0x98],rbx
  417a48:	je     0x41677e
  417a4e:	cmp    QWORD PTR [rbp+0x4e0],rbx
  417a55:	je     0x41677e
  417a5b:	mov    rcx,rbx
  417a5e:	call   0x42df08
  417a63:	jmp    0x41677e
  417a68:	mov    r13,QWORD PTR [rbp+0x28]
  417a6c:	mov    QWORD PTR [rbp+0x98],rbx
  417a73:	jmp    0x41772e
  417a78:	mov    rcx,r12
  417a7b:	call   0x412940
  417a80:	mov    r9,rax
  417a83:	jmp    0x41768b
  417a88:	mov    r8,r14
  417a8b:	mov    rdx,r15
  417a8e:	mov    rcx,r9
  417a91:	call   0x42de98
  417a96:	mov    QWORD PTR [rbp+0x98],rax
  417a9d:	jmp    0x4172f8
  417aa2:	cmp    r14,QWORD PTR [rbp+0x88]
  417aa9:	ja     0x416d50
  417aaf:	mov    r12d,0xc
  417ab5:	jmp    0x416d2e
  417aba:	mov    rcx,r12
  417abd:	call   0x412940
  417ac2:	mov    r11,QWORD PTR [rbp+0x78]
  417ac6:	mov    r10,rax
  417ac9:	movzx  r8d,BYTE PTR [rbp+0x28]
  417ace:	mov    r9d,DWORD PTR [rbp+0x20]
  417ad2:	jmp    0x417142
  417ad7:	mov    r10,rbx
  417ada:	jmp    0x417176
  417adf:	mov    rdx,rax
  417ae2:	jmp    0x41702b
  417ae7:	lea    rdx,[rax+0x1]
  417aeb:	jmp    0x416fec
  417af0:	mov    rdx,rbx
  417af3:	mov    r8,r14
  417af6:	mov    rcx,r9
  417af9:	call   0x42de98
  417afe:	mov    rbx,rax
  417b01:	jmp    0x4176a5
  417b06:	cmp    r15,rbx
  417b09:	ja     0x416d60
  417b0f:	mov    r12d,0xc
  417b15:	jmp    0x417780
  417b1a:	mov    rcx,r12
  417b1d:	call   0x412940
  417b22:	mov    r14,rax
  417b25:	jmp    0x4177c8
  417b2a:	mov    r14,QWORD PTR [rbp+0x98]
  417b31:	jmp    0x4177ed
  417b36:	cmp    rsi,r14
  417b39:	jae    0x416d60
  417b3f:	mov    rbx,rax
  417b42:	jmp    0x41728d
  417b47:	mov    rax,QWORD PTR [rax+0x10]
  417b4b:	xor    edi,edi
  417b4d:	mov    QWORD PTR [rbp+0x98],rax
  417b54:	mov    rsi,rax
  417b57:	jmp    0x417616
  417b5c:	mov    QWORD PTR [rbp+0x98],rsi
  417b63:	mov    QWORD PTR [rbp+0x30],0x0
  417b6b:	jmp    0x41794a
  417b70:	mov    QWORD PTR [rbp+0x98],rsi
  417b77:	xor    edi,edi
  417b79:	jmp    0x417616
  417b7e:	mov    rdx,QWORD PTR [rbp-0x10]
  417b82:	call   0x428b00
  417b87:	jmp    0x416fdc
  417b8c:	mov    r15,r14
  417b8f:	jmp    0x41771a
  417b94:	mov    r15,r14
  417b97:	jmp    0x417727
  417b9c:	mov    rsi,QWORD PTR [rax+0x10]
  417ba0:	jmp    0x41781f
  417ba5:	mov    r12,rax
  417ba8:	jmp    0x416498
  417bad:	nop
  417bae:	nop
  417baf:	nop
  417bb0:	push   rbx
  417bb1:	sub    rsp,0x20
  417bb5:	mov    rbx,rcx
  417bb8:	call   0x412940
  417bbd:	test   rax,rax
  417bc0:	jne    0x417bc7
  417bc2:	test   rbx,rbx
  417bc5:	jne    0x417bcd
  417bc7:	add    rsp,0x20
  417bcb:	pop    rbx
  417bcc:	ret    
  417bcd:	call   0x426550
  417bd2:	nop
  417bd3:	nop    DWORD PTR [rax]
  417bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417be0:	sub    rsp,0x28
  417be4:	mov    rax,0xffffffffffffffff
  417beb:	mov    r8,rdx
  417bee:	xor    edx,edx
  417bf0:	div    r8
  417bf3:	cmp    rax,rcx
  417bf6:	jb     0x417c02
  417bf8:	imul   rcx,r8
  417bfc:	add    rsp,0x28
  417c00:	jmp    0x417bb0
  417c02:	call   0x426550
  417c07:	nop
  417c08:	nop    DWORD PTR [rax+rax*1+0x0]
  417c10:	jmp    0x417bb0
  417c12:	nop    DWORD PTR [rax+0x0]
  417c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417c20:	push   rbx
  417c21:	sub    rsp,0x20
  417c25:	test   rdx,rdx
  417c28:	mov    rbx,rdx
  417c2b:	jne    0x417c32
  417c2d:	test   rcx,rcx
  417c30:	jne    0x417c50
  417c32:	mov    rdx,rbx
  417c35:	call   0x415780
  417c3a:	test   rax,rax
  417c3d:	jne    0x417c44
  417c3f:	test   rbx,rbx
  417c42:	jne    0x417c5d
  417c44:	add    rsp,0x20
  417c48:	pop    rbx
  417c49:	ret    
  417c4a:	nop    WORD PTR [rax+rax*1+0x0]
  417c50:	call   0x42df08
  417c55:	xor    eax,eax
  417c57:	add    rsp,0x20
  417c5b:	pop    rbx
  417c5c:	ret    
  417c5d:	call   0x426550
  417c62:	nop
  417c63:	nop    DWORD PTR [rax]
  417c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417c70:	sub    rsp,0x28
  417c74:	mov    rax,0xffffffffffffffff
  417c7b:	mov    r9,rdx
  417c7e:	xor    edx,edx
  417c80:	div    r8
  417c83:	cmp    rax,r9
  417c86:	jb     0x417c95
  417c88:	mov    rdx,r8
  417c8b:	imul   rdx,r9
  417c8f:	add    rsp,0x28
  417c93:	jmp    0x417c20
  417c95:	call   0x426550
  417c9a:	nop
  417c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  417ca0:	sub    rsp,0x28
  417ca4:	mov    r9,QWORD PTR [rdx]
  417ca7:	test   rcx,rcx
  417caa:	mov    r10,rdx
  417cad:	je     0x417ce1
  417caf:	xor    edx,edx
  417cb1:	movabs rax,0xaaaaaaaaaaaaaaaa
  417cbb:	div    r8
  417cbe:	cmp    r9,rax
  417cc1:	jae    0x417cff
  417cc3:	mov    rax,r9
  417cc6:	shr    rax,1
  417cc9:	lea    r9,[r9+rax*1+0x1]
  417cce:	mov    rdx,r9
  417cd1:	mov    QWORD PTR [r10],r9
  417cd4:	imul   rdx,r8
  417cd8:	add    rsp,0x28
  417cdc:	jmp    0x417c20
  417ce1:	test   r9,r9
  417ce4:	jne    0x417cce
  417ce6:	xor    edx,edx
  417ce8:	mov    eax,0x80
  417ced:	xor    r9d,r9d
  417cf0:	div    r8
  417cf3:	test   rax,rax
  417cf6:	sete   r9b
  417cfa:	add    r9,rax
  417cfd:	jmp    0x417cce
  417cff:	call   0x426550
  417d04:	nop
  417d05:	nop
  417d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417d10:	mov    r8d,0x1
  417d16:	jmp    0x417ca0
  417d18:	nop    DWORD PTR [rax+rax*1+0x0]
  417d20:	push   rbx
  417d21:	sub    rsp,0x20
  417d25:	mov    rbx,rcx
  417d28:	call   0x417bb0
  417d2d:	mov    r8,rbx
  417d30:	xor    edx,edx
  417d32:	mov    rcx,rax
  417d35:	add    rsp,0x20
  417d39:	pop    rbx
  417d3a:	jmp    0x42de88
  417d3f:	nop
  417d40:	push   rbx
  417d41:	sub    rsp,0x20
  417d45:	mov    rax,0xffffffffffffffff
  417d4c:	mov    r8,rdx
  417d4f:	xor    edx,edx
  417d51:	mov    rbx,rcx
  417d54:	div    r8
  417d57:	cmp    rax,rcx
  417d5a:	jb     0x417d74
  417d5c:	mov    rdx,r8
  417d5f:	call   0x42df68
  417d64:	test   rax,rax
  417d67:	jne    0x417d6e
  417d69:	test   rbx,rbx
  417d6c:	jne    0x417d74
  417d6e:	add    rsp,0x20
  417d72:	pop    rbx
  417d73:	ret    
  417d74:	call   0x426550
  417d79:	nop
  417d7a:	nop    WORD PTR [rax+rax*1+0x0]
  417d80:	push   rsi
  417d81:	push   rbx
  417d82:	sub    rsp,0x28
  417d86:	mov    rbx,rdx
  417d89:	mov    rsi,rcx
  417d8c:	mov    rcx,rdx
  417d8f:	call   0x417bb0
  417d94:	mov    r8,rbx
  417d97:	mov    rdx,rsi
  417d9a:	mov    rcx,rax
  417d9d:	add    rsp,0x28
  417da1:	pop    rbx
  417da2:	pop    rsi
  417da3:	jmp    0x42de98
  417da8:	nop    DWORD PTR [rax+rax*1+0x0]
  417db0:	push   rbx
  417db1:	sub    rsp,0x20
  417db5:	mov    rbx,rcx
  417db8:	call   0x42de30
  417dbd:	lea    rdx,[rax+0x1]
  417dc1:	mov    rcx,rbx
  417dc4:	add    rsp,0x20
  417dc8:	pop    rbx
  417dc9:	jmp    0x417d80
  417dcb:	nop
  417dcc:	nop
  417dcd:	nop
  417dce:	nop
  417dcf:	nop
  417dd0:	push   rsi
  417dd1:	push   rbx
  417dd2:	sub    rsp,0x28
  417dd6:	mov    ebx,ecx
  417dd8:	mov    rsi,rdx
  417ddb:	call   0x4185d0
  417de0:	mov    rax,QWORD PTR [rip+0x30a71]        # 0x448858
  417de7:	mov    rdx,rsi
  417dea:	mov    ecx,ebx
  417dec:	add    rsp,0x28
  417df0:	pop    rbx
  417df1:	pop    rsi
  417df2:	rex.W jmp rax
  417df5:	nop
  417df6:	nop
  417df7:	nop
  417df8:	nop
  417df9:	nop
  417dfa:	nop
  417dfb:	nop
  417dfc:	nop
  417dfd:	nop
  417dfe:	nop
  417dff:	nop
  417e00:	push   r15
  417e02:	push   r14
  417e04:	push   r13
  417e06:	push   r12
  417e08:	push   rbp
  417e09:	push   rdi
  417e0a:	push   rsi
  417e0b:	push   rbx
  417e0c:	sub    rsp,0x28
  417e10:	test   rdx,rdx
  417e13:	mov    rdi,rdx
  417e16:	mov    rsi,rcx
  417e19:	sete   dl
  417e1c:	test   r9,r9
  417e1f:	mov    DWORD PTR [rsp+0x80],r8d
  417e27:	sete   al
  417e2a:	mov    rbp,r9
  417e2d:	or     dl,al
  417e2f:	jne    0x417f23
  417e35:	test   rcx,rcx
  417e38:	je     0x417f23
  417e3e:	mov    rcx,QWORD PTR [rcx]
  417e41:	test   rcx,rcx
  417e44:	je     0x417ef0
  417e4a:	cmp    QWORD PTR [rdi],0x0
  417e4e:	je     0x417ef0
  417e54:	xor    r13d,r13d
  417e57:	movabs r12,0x8000000000000000
  417e61:	jmp    0x417e76
  417e63:	cmp    ebx,DWORD PTR [rsp+0x80]
  417e6a:	mov    rax,QWORD PTR [rsi]
  417e6d:	mov    BYTE PTR [rax+r13*1],bl
  417e71:	mov    r13,r14
  417e74:	je     0x417ec8
  417e76:	mov    rcx,rbp
  417e79:	call   0x42ded8
  417e7e:	cmp    eax,0xffffffff
  417e81:	mov    ebx,eax
  417e83:	je     0x417ec8
  417e85:	mov    rax,QWORD PTR [rdi]
  417e88:	lea    r14,[r13+0x1]
  417e8c:	cmp    r14,rax
  417e8f:	jb     0x417e63
  417e91:	lea    r15,[rax+rax*1+0x1]
  417e96:	cmp    r15,r12
  417e99:	cmova  r15,r12
  417e9d:	cmp    r14,r15
  417ea0:	jae    0x417f15
  417ea2:	mov    rcx,QWORD PTR [rsi]
  417ea5:	mov    rdx,r15
  417ea8:	call   0x415780
  417ead:	test   rax,rax
  417eb0:	je     0x417ed5
  417eb2:	cmp    ebx,DWORD PTR [rsp+0x80]
  417eb9:	mov    QWORD PTR [rsi],rax
  417ebc:	mov    QWORD PTR [rdi],r15
  417ebf:	mov    BYTE PTR [rax+r13*1],bl
  417ec3:	mov    r13,r14
  417ec6:	jne    0x417e76
  417ec8:	mov    rax,QWORD PTR [rsi]
  417ecb:	test   r13,r13
  417ece:	mov    BYTE PTR [rax+r13*1],0x0
  417ed3:	jne    0x417f10
  417ed5:	mov    rax,0xffffffffffffffff
  417edc:	add    rsp,0x28
  417ee0:	pop    rbx
  417ee1:	pop    rsi
  417ee2:	pop    rdi
  417ee3:	pop    rbp
  417ee4:	pop    r12
  417ee6:	pop    r13
  417ee8:	pop    r14
  417eea:	pop    r15
  417eec:	ret    
  417eed:	nop    DWORD PTR [rax]
  417ef0:	mov    QWORD PTR [rdi],0x78
  417ef7:	mov    edx,0x78
  417efc:	call   0x415780
  417f01:	test   rax,rax
  417f04:	je     0x417ed5
  417f06:	mov    QWORD PTR [rsi],rax
  417f09:	jmp    0x417e54
  417f0e:	xchg   ax,ax
  417f10:	mov    rax,r13
  417f13:	jmp    0x417edc
  417f15:	call   QWORD PTR [rip+0x30915]        # 0x448830
  417f1b:	mov    DWORD PTR [rax],0x84
  417f21:	jmp    0x417ed5
  417f23:	call   QWORD PTR [rip+0x30907]        # 0x448830
  417f29:	mov    DWORD PTR [rax],0x16
  417f2f:	mov    rax,0xffffffffffffffff
  417f36:	jmp    0x417edc
  417f38:	nop
  417f39:	nop
  417f3a:	nop
  417f3b:	nop
  417f3c:	nop
  417f3d:	nop
  417f3e:	nop
  417f3f:	nop
  417f40:	push   rdi
  417f41:	push   rsi
  417f42:	push   rbx
  417f43:	mov    esi,0x1
  417f48:	mov    r10d,0x1
  417f4e:	xor    r11d,r11d
  417f51:	mov    rax,0xffffffffffffffff
  417f58:	nop    DWORD PTR [rax+rax*1+0x0]
  417f60:	lea    r9,[r11+r10*1]
  417f64:	cmp    r9,rdx
  417f67:	jae    0x417f94
  417f69:	lea    rbx,[rcx+rax*1]
  417f6d:	movzx  edi,BYTE PTR [rbx+r10*1]
  417f72:	cmp    BYTE PTR [rcx+r9*1],dil
  417f76:	jae    0x418000
  417f7c:	mov    r11,r9
  417f7f:	mov    r10d,0x1
  417f85:	mov    rsi,r9
  417f88:	lea    r9,[r11+r10*1]
  417f8c:	sub    rsi,rax
  417f8f:	cmp    r9,rdx
  417f92:	jb     0x417f69
  417f94:	mov    QWORD PTR [r8],rsi
  417f97:	mov    edi,0x1
  417f9c:	mov    r10d,0x1
  417fa2:	xor    r11d,r11d
  417fa5:	mov    rbx,0xffffffffffffffff
  417fac:	nop    DWORD PTR [rax+0x0]
  417fb0:	lea    r9,[r11+r10*1]
  417fb4:	cmp    rdx,r9
  417fb7:	jbe    0x417fe0
  417fb9:	lea    rsi,[rcx+rbx*1]
  417fbd:	movzx  esi,BYTE PTR [rsi+r10*1]
  417fc2:	cmp    BYTE PTR [rcx+r9*1],sil
  417fc6:	jbe    0x418020
  417fc8:	mov    r11,r9
  417fcb:	mov    r10d,0x1
  417fd1:	mov    rdi,r9
  417fd4:	lea    r9,[r11+r10*1]
  417fd8:	sub    rdi,rbx
  417fdb:	cmp    rdx,r9
  417fde:	ja     0x417fb9
  417fe0:	add    rbx,0x1
  417fe4:	add    rax,0x1
  417fe8:	cmp    rbx,rax
  417feb:	jb     0x417ff3
  417fed:	mov    QWORD PTR [r8],rdi
  417ff0:	mov    rax,rbx
  417ff3:	pop    rbx
  417ff4:	pop    rsi
  417ff5:	pop    rdi
  417ff6:	ret    
  417ff7:	nop    WORD PTR [rax+rax*1+0x0]
  418000:	je     0x418040
  418002:	mov    rax,r11
  418005:	mov    esi,0x1
  41800a:	add    r11,0x1
  41800e:	mov    r10d,0x1
  418014:	jmp    0x417f60
  418019:	nop    DWORD PTR [rax+0x0]
  418020:	je     0x418050
  418022:	mov    rbx,r11
  418025:	mov    edi,0x1
  41802a:	add    r11,0x1
  41802e:	mov    r10d,0x1
  418034:	jmp    0x417fb0
  418039:	nop    DWORD PTR [rax+0x0]
  418040:	cmp    r10,rsi
  418043:	je     0x418060
  418045:	add    r10,0x1
  418049:	jmp    0x417f60
  41804e:	xchg   ax,ax
  418050:	cmp    r10,rdi
  418053:	je     0x418071
  418055:	add    r10,0x1
  418059:	jmp    0x417fb0
  41805e:	xchg   ax,ax
  418060:	mov    rsi,r10
  418063:	mov    r11,r9
  418066:	mov    r10d,0x1
  41806c:	jmp    0x417f60
  418071:	mov    rdi,r10
  418074:	mov    r11,r9
  418077:	mov    r10d,0x1
  41807d:	jmp    0x417fb0
  418082:	nop    DWORD PTR [rax+0x0]
  418086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418090:	push   r15
  418092:	push   r14
  418094:	push   r13
  418096:	push   r12
  418098:	push   rbp
  418099:	push   rdi
  41809a:	push   rsi
  41809b:	push   rbx
  41809c:	sub    rsp,0x848
  4180a3:	cmp    r9,0x2
  4180a7:	mov    rbp,rcx
  4180aa:	mov    r13,rdx
  4180ad:	mov    rbx,r8
  4180b0:	mov    rdi,r9
  4180b3:	ja     0x4182f5
  4180b9:	lea    r12,[r9-0x1]
  4180bd:	mov    QWORD PTR [rsp+0x38],0x1
  4180c6:	mov    r14d,0x1
  4180cc:	mov    rsi,r12
  4180cf:	lea    r10,[rsp+0x40]
  4180d4:	lea    rax,[rsp+0x840]
  4180dc:	nop    DWORD PTR [rax+0x0]
  4180e0:	mov    QWORD PTR [r10],rdi
  4180e3:	add    r10,0x8
  4180e7:	cmp    r10,rax
  4180ea:	jne    0x4180e0
  4180ec:	xor    eax,eax
  4180ee:	test   rdi,rdi
  4180f1:	je     0x41810b
  4180f3:	movzx  edx,BYTE PTR [rbx+rax*1]
  4180f7:	mov    rcx,rsi
  4180fa:	sub    rcx,rax
  4180fd:	add    rax,0x1
  418101:	cmp    rax,rdi
  418104:	mov    QWORD PTR [rsp+rdx*8+0x40],rcx
  418109:	jne    0x4180f3
  41810b:	lea    rdx,[rbx+r14*1]
  41810f:	mov    r8,r12
  418112:	mov    rcx,rbx
  418115:	call   0x42dea0
  41811a:	test   eax,eax
  41811c:	jne    0x41821a
  418122:	lea    rcx,[r12-0x1]
  418127:	mov    r11d,0x1
  41812d:	mov    r8,rdi
  418130:	sub    r11,r12
  418133:	xor    eax,eax
  418135:	xor    edx,edx
  418137:	sub    r8,r14
  41813a:	lea    r15,[rbp+rcx*1+0x0]
  41813f:	mov    QWORD PTR [rsp+0x28],r11
  418144:	sub    r13,rdi
  418147:	jmp    0x41816a
  418149:	nop    DWORD PTR [rax+0x0]
  418150:	cmp    r14,r9
  418153:	jbe    0x41815c
  418155:	test   rax,rax
  418158:	cmovne r9,r8
  41815c:	add    rdx,r9
  41815f:	xor    eax,eax
  418161:	cmp    r13,rdx
  418164:	jb     0x418206
  41816a:	lea    r10,[rbp+rdx*1+0x0]
  41816f:	movzx  r9d,BYTE PTR [r10+rsi*1]
  418174:	mov    r9,QWORD PTR [rsp+r9*8+0x40]
  418179:	test   r9,r9
  41817c:	jne    0x418150
  41817e:	cmp    rax,r12
  418181:	mov    r9,r12
  418184:	cmovae r9,rax
  418188:	cmp    r9,rsi
  41818b:	jae    0x4181b4
  41818d:	lea    rdi,[rbp+r9*1+0x0]
  418192:	movzx  edi,BYTE PTR [rdi+rdx*1]
  418196:	cmp    BYTE PTR [rbx+r9*1],dil
  41819a:	je     0x4181ab
  41819c:	jmp    0x418210
  41819e:	xchg   ax,ax
  4181a0:	movzx  edi,BYTE PTR [r10+r9*1]
  4181a5:	cmp    BYTE PTR [rbx+r9*1],dil
  4181a9:	jne    0x418210
  4181ab:	add    r9,0x1
  4181af:	cmp    r9,rsi
  4181b2:	jb     0x4181a0
  4181b4:	cmp    r12,rax
  4181b7:	jbe    0x418316
  4181bd:	movzx  edi,BYTE PTR [r15+rdx*1]
  4181c2:	cmp    BYTE PTR [rbx+rcx*1],dil
  4181c6:	jne    0x418316
  4181cc:	mov    r9,rcx
  4181cf:	jmp    0x4181e5
  4181d1:	movzx  r11d,BYTE PTR [r10+r9*1-0x1]
  4181d7:	lea    rdi,[r9-0x1]
  4181db:	cmp    BYTE PTR [rbx+r9*1-0x1],r11b
  4181e0:	jne    0x4181ea
  4181e2:	mov    r9,rdi
  4181e5:	cmp    r9,rax
  4181e8:	jne    0x4181d1
  4181ea:	add    rax,0x1
  4181ee:	cmp    rax,r9
  4181f1:	ja     0x4182b5
  4181f7:	add    rdx,r14
  4181fa:	mov    rax,r8
  4181fd:	cmp    r13,rdx
  418200:	jae    0x41816a
  418206:	xor    eax,eax
  418208:	jmp    0x4182b8
  41820d:	nop    DWORD PTR [rax]
  418210:	add    rdx,QWORD PTR [rsp+0x28]
  418215:	jmp    0x41815c
  41821a:	mov    rax,rdi
  41821d:	lea    rcx,[r12-0x1]
  418222:	mov    r11d,0x1
  418228:	sub    rax,r12
  41822b:	cmp    rax,r12
  41822e:	lea    r14,[rbp+rcx*1+0x0]
  418233:	cmovb  rax,r12
  418237:	sub    r11,r12
  41823a:	sub    r13,rdi
  41823d:	lea    r8,[rax+0x1]
  418241:	xor    eax,eax
  418243:	lea    r10,[rbp+rax*1+0x0]
  418248:	movzx  edx,BYTE PTR [r10+rsi*1]
  41824d:	mov    rdx,QWORD PTR [rsp+rdx*8+0x40]
  418252:	test   rdx,rdx
  418255:	jne    0x4182d0
  418257:	cmp    r12,rsi
  41825a:	jae    0x418284
  41825c:	movzx  edx,BYTE PTR [r10+r12*1]
  418261:	mov    r9,r12
  418264:	cmp    BYTE PTR [rbx+r12*1],dl
  418268:	je     0x41827b
  41826a:	jmp    0x4182e0
  41826c:	nop    DWORD PTR [rax+0x0]
  418270:	movzx  edx,BYTE PTR [r10+r9*1]
  418275:	cmp    BYTE PTR [rbx+r9*1],dl
  418279:	jne    0x4182e0
  41827b:	add    r9,0x1
  41827f:	cmp    r9,rsi
  418282:	jb     0x418270
  418284:	cmp    rcx,0xffffffffffffffff
  418288:	mov    r9,rcx
  41828b:	je     0x4182b5
  41828d:	movzx  edx,BYTE PTR [r14+rax*1]
  418292:	cmp    BYTE PTR [rbx+rcx*1],dl
  418295:	je     0x4182ab
  418297:	jmp    0x4182f0
  418299:	nop    DWORD PTR [rax+0x0]
  4182a0:	movzx  edx,BYTE PTR [r10+r9*1]
  4182a5:	cmp    BYTE PTR [rbx+r9*1],dl
  4182a9:	jne    0x4182f0
  4182ab:	sub    r9,0x1
  4182af:	cmp    r9,0xffffffffffffffff
  4182b3:	jne    0x4182a0
  4182b5:	mov    rax,r10
  4182b8:	add    rsp,0x848
  4182bf:	pop    rbx
  4182c0:	pop    rsi
  4182c1:	pop    rdi
  4182c2:	pop    rbp
  4182c3:	pop    r12
  4182c5:	pop    r13
  4182c7:	pop    r14
  4182c9:	pop    r15
  4182cb:	ret    
  4182cc:	nop    DWORD PTR [rax+0x0]
  4182d0:	add    rax,rdx
  4182d3:	cmp    r13,rax
  4182d6:	jae    0x418243
  4182dc:	xor    eax,eax
  4182de:	jmp    0x4182b8
  4182e0:	add    rax,r11
  4182e3:	add    rax,r9
  4182e6:	jmp    0x4182d3
  4182e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4182f0:	add    rax,r8
  4182f3:	jmp    0x4182d3
  4182f5:	lea    r8,[rsp+0x38]
  4182fa:	mov    rdx,r9
  4182fd:	mov    rcx,rbx
  418300:	lea    rsi,[rdi-0x1]
  418304:	call   0x417f40
  418309:	mov    r14,QWORD PTR [rsp+0x38]
  41830e:	mov    r12,rax
  418311:	jmp    0x4180cf
  418316:	mov    r9,r12
  418319:	jmp    0x4181ea
  41831e:	xchg   ax,ax
  418320:	push   r15
  418322:	push   r14
  418324:	push   r13
  418326:	push   r12
  418328:	push   rbp
  418329:	push   rdi
  41832a:	push   rsi
  41832b:	push   rbx
  41832c:	sub    rsp,0x48
  418330:	test   r9,r9
  418333:	mov    rax,rcx
  418336:	je     0x4184a0
  41833c:	cmp    r9,rdx
  41833f:	ja     0x418495
  418345:	cmp    r9,0x1f
  418349:	mov    rsi,r9
  41834c:	mov    rbx,r8
  41834f:	mov    rbp,rdx
  418352:	mov    r12,rcx
  418355:	ja     0x4184b1
  41835b:	movzx  edx,BYTE PTR [r8]
  41835f:	mov    r8,rbp
  418362:	call   0x425c10
  418367:	test   rax,rax
  41836a:	mov    rdi,rax
  41836d:	je     0x4184d0
  418373:	cmp    rsi,0x1
  418377:	je     0x4184d0
  41837d:	mov    rcx,r12
  418380:	sub    rcx,rax
  418383:	xor    eax,eax
  418385:	lea    r12,[rcx+rbp*1]
  418389:	cmp    rsi,r12
  41838c:	ja     0x4184a0
  418392:	cmp    rsi,0x2
  418396:	ja     0x41858f
  41839c:	lea    rbp,[rsi-0x1]
  4183a0:	mov    QWORD PTR [rsp+0x38],0x1
  4183a9:	mov    r13d,0x1
  4183af:	lea    rdx,[rbx+r13*1]
  4183b3:	mov    r8,rbp
  4183b6:	mov    rcx,rbx
  4183b9:	call   0x42dea0
  4183be:	test   eax,eax
  4183c0:	jne    0x4184d5
  4183c6:	lea    r9,[rbp-0x1]
  4183ca:	mov    r15,rsi
  4183cd:	mov    r11d,0x1
  4183d3:	xor    ecx,ecx
  4183d5:	xor    r8d,r8d
  4183d8:	sub    r15,r13
  4183db:	lea    rax,[rdi+r9*1]
  4183df:	sub    r11,rbp
  4183e2:	sub    r12,rsi
  4183e5:	mov    QWORD PTR [rsp+0x28],rax
  4183ea:	nop    WORD PTR [rax+rax*1+0x0]
  4183f0:	cmp    r8,rbp
  4183f3:	mov    r10,rbp
  4183f6:	cmovae r10,r8
  4183fa:	cmp    rsi,r10
  4183fd:	jbe    0x418438
  4183ff:	lea    rax,[rdi+r10*1]
  418403:	movzx  eax,BYTE PTR [rax+rcx*1]
  418407:	cmp    BYTE PTR [rbx+r10*1],al
  41840b:	jne    0x4184c0
  418411:	lea    rax,[rdi+rcx*1]
  418415:	jmp    0x41842f
  418417:	nop    WORD PTR [rax+rax*1+0x0]
  418420:	movzx  edx,BYTE PTR [rax+r10*1]
  418425:	cmp    BYTE PTR [rbx+r10*1],dl
  418429:	jne    0x4184c0
  41842f:	add    r10,0x1
  418433:	cmp    rsi,r10
  418436:	ja     0x418420
  418438:	cmp    rbp,r8
  41843b:	jbe    0x418587
  418441:	mov    rax,QWORD PTR [rsp+0x28]
  418446:	movzx  eax,BYTE PTR [rax+rcx*1]
  41844a:	cmp    BYTE PTR [rbx+r9*1],al
  41844e:	jne    0x418587
  418454:	mov    rdx,r9
  418457:	lea    r10,[rdi+rcx*1]
  41845b:	jmp    0x418474
  41845d:	nop    DWORD PTR [rax]
  418460:	movzx  r14d,BYTE PTR [rdx+r10*1-0x1]
  418466:	lea    rax,[rdx-0x1]
  41846a:	cmp    BYTE PTR [rbx+rdx*1-0x1],r14b
  41846f:	jne    0x418479
  418471:	mov    rdx,rax
  418474:	cmp    rdx,r8
  418477:	jne    0x418460
  418479:	add    r8,0x1
  41847d:	cmp    r8,rdx
  418480:	ja     0x4185ac
  418486:	add    rcx,r13
  418489:	mov    r8,r15
  41848c:	cmp    r12,rcx
  41848f:	jae    0x4183f0
  418495:	xor    eax,eax
  418497:	nop    WORD PTR [rax+rax*1+0x0]
  4184a0:	add    rsp,0x48
  4184a4:	pop    rbx
  4184a5:	pop    rsi
  4184a6:	pop    rdi
  4184a7:	pop    rbp
  4184a8:	pop    r12
  4184aa:	pop    r13
  4184ac:	pop    r14
  4184ae:	pop    r15
  4184b0:	ret    
  4184b1:	call   0x418090
  4184b6:	jmp    0x4184a0
  4184b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4184c0:	add    rcx,r11
  4184c3:	xor    r8d,r8d
  4184c6:	add    rcx,r10
  4184c9:	jmp    0x41848c
  4184cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4184d0:	mov    rax,rdi
  4184d3:	jmp    0x4184a0
  4184d5:	mov    rax,rsi
  4184d8:	lea    r8,[rbp-0x1]
  4184dc:	mov    r13d,0x1
  4184e2:	sub    rax,rbp
  4184e5:	lea    r9,[rdi+rbp*1]
  4184e9:	cmp    rax,rbp
  4184ec:	lea    r14,[rdi+r8*1]
  4184f0:	cmovb  rax,rbp
  4184f4:	sub    r13,rbp
  4184f7:	sub    r12,rsi
  4184fa:	lea    r11,[rax+0x1]
  4184fe:	xor    eax,eax
  418500:	mov    QWORD PTR [rsp+0x38],r11
  418505:	cmp    rsi,rbp
  418508:	jbe    0x418534
  41850a:	movzx  ecx,BYTE PTR [r9+rax*1]
  41850f:	mov    r10,rbp
  418512:	lea    rdx,[rdi+rax*1]
  418516:	cmp    BYTE PTR [rbx+rbp*1],cl
  418519:	je     0x41852b
  41851b:	jmp    0x418570
  41851d:	nop    DWORD PTR [rax]
  418520:	movzx  ecx,BYTE PTR [rdx+r10*1]
  418525:	cmp    BYTE PTR [rbx+r10*1],cl
  418529:	jne    0x418570
  41852b:	add    r10,0x1
  41852f:	cmp    rsi,r10
  418532:	ja     0x418520
  418534:	cmp    r8,0xffffffffffffffff
  418538:	mov    rdx,r8
  41853b:	je     0x4185b5
  41853d:	movzx  ecx,BYTE PTR [r14+rax*1]
  418542:	cmp    BYTE PTR [rbx+r8*1],cl
  418546:	jne    0x418582
  418548:	lea    rcx,[rdi+rax*1]
  41854c:	jmp    0x41855b
  41854e:	xchg   ax,ax
  418550:	movzx  r15d,BYTE PTR [rcx+rdx*1]
  418555:	cmp    BYTE PTR [rbx+rdx*1],r15b
  418559:	jne    0x418582
  41855b:	sub    rdx,0x1
  41855f:	cmp    rdx,0xffffffffffffffff
  418563:	jne    0x418550
  418565:	mov    rax,rcx
  418568:	jmp    0x4184a0
  41856d:	nop    DWORD PTR [rax]
  418570:	add    rax,r13
  418573:	add    rax,r10
  418576:	cmp    r12,rax
  418579:	jae    0x418505
  41857b:	xor    eax,eax
  41857d:	jmp    0x4184a0
  418582:	add    rax,r11
  418585:	jmp    0x418576
  418587:	mov    rdx,rbp
  41858a:	jmp    0x418479
  41858f:	lea    r8,[rsp+0x38]
  418594:	mov    rdx,rsi
  418597:	mov    rcx,rbx
  41859a:	call   0x417f40
  41859f:	mov    r13,QWORD PTR [rsp+0x38]
  4185a4:	mov    rbp,rax
  4185a7:	jmp    0x4183af
  4185ac:	lea    rax,[rdi+rcx*1]
  4185b0:	jmp    0x4184a0
  4185b5:	lea    rcx,[rdi+rax*1]
  4185b9:	jmp    0x418565
  4185bb:	nop
  4185bc:	nop
  4185bd:	nop
  4185be:	nop
  4185bf:	nop
  4185c0:	ret    
  4185c1:	nop    DWORD PTR [rax+rax*1+0x0]
  4185c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4185d0:	sub    rsp,0x28
  4185d4:	mov    eax,DWORD PTR [rip+0x2b8f6]        # 0x443ed0
  4185da:	test   eax,eax
  4185dc:	jne    0x4185f5
  4185de:	lea    rcx,[rip+0xffffffffffffffdb]        # 0x4185c0
  4185e5:	call   QWORD PTR [rip+0x1992d]        # 0x431f18
  4185eb:	mov    DWORD PTR [rip+0x2b8db],0x1        # 0x443ed0
  4185f5:	add    rsp,0x28
  4185f9:	ret    
  4185fa:	nop
  4185fb:	nop
  4185fc:	nop
  4185fd:	nop
  4185fe:	nop
  4185ff:	nop
  418600:	xor    r9d,r9d
  418603:	cmp    QWORD PTR [rdx],0x0
  418607:	mov    rax,QWORD PTR [rdx+0x8]
  41860b:	lea    r10,[rip+0x20106]        # 0x438718
  418612:	je     0x418648
  418614:	cmp    DWORD PTR [rax],0x16
  418617:	ja     0x4186e4
  41861d:	mov    r8d,DWORD PTR [rax]
  418620:	movsxd r8,DWORD PTR [r10+r8*4]
  418624:	add    r8,r10
  418627:	jmp    r8
  41862a:	nop    WORD PTR [rax+rax*1+0x0]
  418630:	mov    r8,QWORD PTR [rcx]
  418633:	add    rcx,0x8
  418637:	mov    QWORD PTR [rax+0x10],r8
  41863b:	add    r9,0x1
  41863f:	add    rax,0x20
  418643:	cmp    QWORD PTR [rdx],r9
  418646:	ja     0x418614
  418648:	xor    eax,eax
  41864a:	ret    
  41864b:	nop    DWORD PTR [rax+rax*1+0x0]
  418650:	mov    r8d,DWORD PTR [rcx]
  418653:	add    rcx,0x8
  418657:	mov    DWORD PTR [rax+0x10],r8d
  41865b:	jmp    0x41863b
  41865d:	nop    DWORD PTR [rax]
  418660:	mov    r8d,DWORD PTR [rcx]
  418663:	add    rcx,0x8
  418667:	mov    WORD PTR [rax+0x10],r8w
  41866c:	jmp    0x41863b
  41866e:	xchg   ax,ax
  418670:	mov    r8d,DWORD PTR [rcx]
  418673:	add    rcx,0x8
  418677:	mov    BYTE PTR [rax+0x10],r8b
  41867b:	jmp    0x41863b
  41867d:	nop    DWORD PTR [rax]
  418680:	movsd  xmm0,QWORD PTR [rcx]
  418684:	add    rcx,0x8
  418688:	movsd  QWORD PTR [rax+0x10],xmm0
  41868d:	jmp    0x41863b
  41868f:	nop
  418690:	mov    r8,QWORD PTR [rcx]
  418693:	add    rcx,0x8
  418697:	fld    TBYTE PTR [r8]
  41869a:	fstp   TBYTE PTR [rax+0x10]
  41869d:	jmp    0x41863b
  41869f:	nop
  4186a0:	mov    r8,QWORD PTR [rcx]
  4186a3:	add    rcx,0x8
  4186a7:	test   r8,r8
  4186aa:	mov    QWORD PTR [rax+0x10],r8
  4186ae:	jne    0x41863b
  4186b0:	lea    r11,[rip+0x20059]        # 0x438710
  4186b7:	mov    QWORD PTR [rax+0x10],r11
  4186bb:	jmp    0x41863b
  4186c0:	mov    r8,QWORD PTR [rcx]
  4186c3:	add    rcx,0x8
  4186c7:	test   r8,r8
  4186ca:	mov    QWORD PTR [rax+0x10],r8
  4186ce:	jne    0x41863b
  4186d4:	lea    r11,[rip+0x20099]        # 0x438774
  4186db:	mov    QWORD PTR [rax+0x10],r11
  4186df:	jmp    0x41863b
  4186e4:	mov    eax,0xffffffff
  4186e9:	ret    
  4186ea:	nop
  4186eb:	nop
  4186ec:	nop
  4186ed:	nop
  4186ee:	nop
  4186ef:	nop
  4186f0:	push   r15
  4186f2:	push   r14
  4186f4:	push   r13
  4186f6:	push   r12
  4186f8:	push   rbp
  4186f9:	push   rdi
  4186fa:	push   rsi
  4186fb:	push   rbx
  4186fc:	sub    rsp,0x58
  418700:	xor    r10d,r10d
  418703:	mov    r14d,0x7
  418709:	lea    rax,[rdx+0x20]
  41870d:	lea    r15,[r8+0x10]
  418711:	mov    QWORD PTR [rdx],0x0
  418718:	mov    rbx,rcx
  41871b:	mov    r12,rdx
  41871e:	mov    r13,r8
  418721:	mov    QWORD PTR [rdx+0x8],rax
  418725:	mov    QWORD PTR [rsp+0x30],rax
  41872a:	mov    QWORD PTR [r8],0x0
  418731:	mov    QWORD PTR [r8+0x8],r15
  418735:	mov    r9,QWORD PTR [rdx+0x8]
  418739:	mov    rcx,QWORD PTR [rdx]
  41873c:	mov    QWORD PTR [rsp+0x20],0x0
  418745:	mov    QWORD PTR [rsp+0x28],0x7
  41874e:	mov    QWORD PTR [rsp+0x38],0x0
  418757:	jmp    0x41876b
  418759:	nop    DWORD PTR [rax+0x0]
  418760:	cmp    al,0x25
  418762:	lea    r11,[rbx+0x1]
  418766:	je     0x4187a0
  418768:	mov    rbx,r11
  41876b:	movzx  eax,BYTE PTR [rbx]
  41876e:	test   al,al
  418770:	jne    0x418760
  418772:	lea    rax,[rcx+rcx*4]
  418776:	lea    rax,[rcx+rax*2]
  41877a:	mov    QWORD PTR [r9+rax*8],rbx
  41877e:	mov    rax,QWORD PTR [rsp+0x20]
  418783:	mov    QWORD PTR [r12+0x10],r10
  418788:	mov    QWORD PTR [r12+0x18],rax
  41878d:	xor    eax,eax
  41878f:	add    rsp,0x58
  418793:	pop    rbx
  418794:	pop    rsi
  418795:	pop    rdi
  418796:	pop    rbp
  418797:	pop    r12
  418799:	pop    r13
  41879b:	pop    r14
  41879d:	pop    r15
  41879f:	ret    
  4187a0:	lea    rax,[rcx+rcx*4]
  4187a4:	lea    rax,[rcx+rax*2]
  4187a8:	lea    rsi,[r9+rax*8]
  4187ac:	mov    QWORD PTR [rsi],rbx
  4187af:	mov    DWORD PTR [rsi+0x10],0x0
  4187b6:	mov    QWORD PTR [rsi+0x18],0x0
  4187be:	mov    QWORD PTR [rsi+0x20],0x0
  4187c6:	mov    QWORD PTR [rsi+0x28],0xffffffffffffffff
  4187ce:	mov    QWORD PTR [rsi+0x30],0x0
  4187d6:	mov    QWORD PTR [rsi+0x38],0x0
  4187de:	mov    QWORD PTR [rsi+0x40],0xffffffffffffffff
  4187e6:	mov    QWORD PTR [rsi+0x50],0xffffffffffffffff
  4187ee:	movsx  eax,BYTE PTR [rbx+0x1]
  4187f2:	lea    edx,[rax-0x30]
  4187f5:	cmp    dl,0x9
  4187f8:	jbe    0x4189f4
  4187fe:	mov    rdi,0xffffffffffffffff
  418805:	lea    rcx,[r11+0x1]
  418809:	jmp    0x418837
  41880b:	nop    DWORD PTR [rax+rax*1+0x0]
  418810:	cmp    al,0x2d
  418812:	je     0x418845
  418814:	cmp    al,0x2b
  418816:	je     0x418850
  418818:	cmp    al,0x20
  41881a:	je     0x418860
  41881c:	cmp    al,0x23
  41881e:	je     0x418870
  418820:	cmp    al,0x30
  418822:	jne    0x418876
  418824:	or     DWORD PTR [rsi+0x10],0x20
  418828:	nop    DWORD PTR [rax+rax*1+0x0]
  418830:	movzx  eax,BYTE PTR [rcx]
  418833:	add    rcx,0x1
  418837:	cmp    al,0x27
  418839:	lea    rbx,[rcx-0x1]
  41883d:	jne    0x418810
  41883f:	or     DWORD PTR [rsi+0x10],0x1
  418843:	jmp    0x418830
  418845:	or     DWORD PTR [rsi+0x10],0x2
  418849:	jmp    0x418830
  41884b:	nop    DWORD PTR [rax+rax*1+0x0]
  418850:	or     DWORD PTR [rsi+0x10],0x4
  418854:	jmp    0x418830
  418856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418860:	or     DWORD PTR [rsi+0x10],0x8
  418864:	jmp    0x418830
  418866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418870:	or     DWORD PTR [rsi+0x10],0x10
  418874:	jmp    0x418830
  418876:	cmp    al,0x2a
  418878:	mov    rdx,rbx
  41887b:	je     0x418af1
  418881:	lea    ecx,[rax-0x30]
  418884:	cmp    cl,0x9
  418887:	jbe    0x418a93
  41888d:	cmp    al,0x2e
  41888f:	je     0x418929
  418895:	xor    edx,edx
  418897:	mov    r8d,0x1
  41889d:	jmp    0x4188e3
  41889f:	nop
  4188a0:	cmp    al,0x4c
  4188a2:	je     0x418910
  4188a4:	cmp    al,0x6c
  4188a6:	je     0x418920
  4188a8:	cmp    al,0x6a
  4188aa:	je     0x418900
  4188ac:	mov    ecx,eax
  4188ae:	and    ecx,0xffffffdf
  4188b1:	cmp    cl,0x5a
  4188b4:	je     0x418900
  4188b6:	cmp    al,0x74
  4188b8:	je     0x418900
  4188ba:	cmp    al,0x49
  4188bc:	jne    0x418acc
  4188c2:	cmp    BYTE PTR [rbx+0x1],0x36
  4188c6:	jne    0x4189bf
  4188cc:	cmp    BYTE PTR [rbx+0x2],0x34
  4188d0:	jne    0x4189bf
  4188d6:	add    edx,0x10
  4188d9:	add    rbx,0x3
  4188dd:	nop    DWORD PTR [rax]
  4188e0:	movzx  eax,BYTE PTR [rbx]
  4188e3:	cmp    al,0x68
  4188e5:	jne    0x4188a0
  4188e7:	mov    ecx,edx
  4188e9:	mov    eax,r8d
  4188ec:	add    rbx,0x1
  4188f0:	and    ecx,0x1
  4188f3:	shl    eax,cl
  4188f5:	or     edx,eax
  4188f7:	jmp    0x4188e0
  4188f9:	nop    DWORD PTR [rax+0x0]
  418900:	add    edx,0x10
  418903:	add    rbx,0x1
  418907:	jmp    0x4188e0
  418909:	nop    DWORD PTR [rax+0x0]
  418910:	or     edx,0x4
  418913:	add    rbx,0x1
  418917:	jmp    0x4188e0
  418919:	nop    DWORD PTR [rax+0x0]
  418920:	add    edx,0x8
  418923:	add    rbx,0x1
  418927:	jmp    0x4188e0
  418929:	cmp    BYTE PTR [rbx+0x1],0x2a
  41892d:	jne    0x418b97
  418933:	lea    rbp,[rbx+0x2]
  418937:	mov    QWORD PTR [rsi+0x30],rbx
  41893b:	cmp    QWORD PTR [rsp+0x20],0x1
  418941:	mov    QWORD PTR [rsi+0x38],rbp
  418945:	movsx  eax,BYTE PTR [rbx+0x2]
  418949:	lea    edx,[rax-0x30]
  41894c:	jbe    0x418df0
  418952:	cmp    dl,0x9
  418955:	ja     0x418e02
  41895b:	mov    rdx,rbp
  41895e:	add    rdx,0x1
  418962:	movzx  ecx,BYTE PTR [rdx]
  418965:	lea    r8d,[rcx-0x30]
  418969:	cmp    r8b,0x9
  41896d:	jbe    0x41895e
  41896f:	cmp    cl,0x24
  418972:	jne    0x418e02
  418978:	xor    ebx,ebx
  41897a:	movabs rcx,0x1999999999999999
  418984:	sub    eax,0x30
  418987:	mov    rdx,0xffffffffffffffff
  41898e:	cmp    rbx,rcx
  418991:	cdqe   
  418993:	ja     0x41899c
  418995:	lea    rdx,[rbx+rbx*4]
  418999:	add    rdx,rdx
  41899c:	add    rdx,rax
  41899f:	mov    rbx,rdx
  4189a2:	jae    0x41917e
  4189a8:	add    rbp,0x1
  4189ac:	movsx  eax,BYTE PTR [rbp+0x0]
  4189b0:	mov    rbx,0xffffffffffffffff
  4189b7:	lea    edx,[rax-0x30]
  4189ba:	cmp    dl,0x9
  4189bd:	jbe    0x41897a
  4189bf:	mov    rcx,QWORD PTR [r13+0x8]
  4189c3:	cmp    r15,rcx
  4189c6:	je     0x4189cd
  4189c8:	call   0x42df08
  4189cd:	mov    rcx,QWORD PTR [r12+0x8]
  4189d2:	cmp    QWORD PTR [rsp+0x30],rcx
  4189d7:	je     0x4189de
  4189d9:	call   0x42df08
  4189de:	call   QWORD PTR [rip+0x2fe4c]        # 0x448830
  4189e4:	mov    DWORD PTR [rax],0x16
  4189ea:	mov    eax,0xffffffff
  4189ef:	jmp    0x41878f
  4189f4:	mov    rdx,r11
  4189f7:	nop    WORD PTR [rax+rax*1+0x0]
  418a00:	add    rdx,0x1
  418a04:	movzx  r8d,BYTE PTR [rdx]
  418a08:	lea    ecx,[r8-0x30]
  418a0c:	cmp    cl,0x9
  418a0f:	jbe    0x418a00
  418a11:	cmp    r8b,0x24
  418a15:	jne    0x4187fe
  418a1b:	mov    rcx,r11
  418a1e:	xor    edi,edi
  418a20:	jmp    0x418a3c
  418a22:	movsx  eax,BYTE PTR [rcx+0x1]
  418a26:	lea    rdx,[rcx+0x1]
  418a2a:	mov    rdi,0xffffffffffffffff
  418a31:	lea    ecx,[rax-0x30]
  418a34:	cmp    cl,0x9
  418a37:	ja     0x4189bf
  418a39:	mov    rcx,rdx
  418a3c:	movabs rbx,0x1999999999999999
  418a46:	sub    eax,0x30
  418a49:	mov    rdx,0xffffffffffffffff
  418a50:	cmp    rdi,rbx
  418a53:	cdqe   
  418a55:	ja     0x418a5e
  418a57:	lea    rdx,[rdi+rdi*4]
  418a5b:	add    rdx,rdx
  418a5e:	mov    rdi,rdx
  418a61:	add    rdi,rax
  418a64:	jb     0x418a22
  418a66:	movsx  eax,BYTE PTR [rcx+0x1]
  418a6a:	lea    rdx,[rcx+0x1]
  418a6e:	lea    r8d,[rax-0x30]
  418a72:	cmp    r8b,0x9
  418a76:	jbe    0x418a39
  418a78:	sub    rdi,0x1
  418a7c:	cmp    rdi,0xfffffffffffffffd
  418a80:	ja     0x4189bf
  418a86:	lea    r11,[rcx+0x2]
  418a8a:	movzx  eax,BYTE PTR [rcx+0x2]
  418a8e:	jmp    0x418805
  418a93:	mov    QWORD PTR [rsi+0x18],rbx
  418a97:	movzx  eax,BYTE PTR [rbx]
  418a9a:	sub    eax,0x30
  418a9d:	cmp    al,0x9
  418a9f:	ja     0x4191dc
  418aa5:	add    rbx,0x1
  418aa9:	movzx  eax,BYTE PTR [rbx]
  418aac:	sub    eax,0x30
  418aaf:	cmp    al,0x9
  418ab1:	jbe    0x418aa5
  418ab3:	mov    rax,rbx
  418ab6:	sub    rax,rdx
  418ab9:	cmp    r10,rax
  418abc:	mov    QWORD PTR [rsi+0x20],rbx
  418ac0:	cmovb  r10,rax
  418ac4:	movzx  eax,BYTE PTR [rbx]
  418ac7:	jmp    0x41888d
  418acc:	lea    ecx,[rax-0x25]
  418acf:	add    rbx,0x1
  418ad3:	mov    ebp,eax
  418ad5:	cmp    cl,0x53
  418ad8:	ja     0x4189bf
  418ade:	lea    r9,[rip+0x1fcab]        # 0x438790
  418ae5:	movzx  ecx,cl
  418ae8:	movsxd rcx,DWORD PTR [r9+rcx*4]
  418aec:	add    rcx,r9
  418aef:	jmp    rcx
  418af1:	mov    QWORD PTR [rsi+0x18],rbx
  418af5:	mov    QWORD PTR [rsi+0x20],rcx
  418af9:	test   r10,r10
  418afc:	movsx  eax,BYTE PTR [rdx+0x1]
  418b00:	mov    rbx,rcx
  418b03:	lea    edx,[rax-0x30]
  418b06:	jne    0x418c56
  418b0c:	cmp    dl,0x9
  418b0f:	jbe    0x418be4
  418b15:	mov    r10d,0x1
  418b1b:	mov    rbp,QWORD PTR [rsp+0x38]
  418b20:	mov    rax,rbp
  418b23:	mov    QWORD PTR [rsi+0x28],rbp
  418b27:	add    rax,0x1
  418b2b:	cmp    rbp,0xffffffffffffffff
  418b2f:	je     0x4189bf
  418b35:	mov    QWORD PTR [rsp+0x38],rax
  418b3a:	cmp    r14,rbp
  418b3d:	jbe    0x418f09
  418b43:	mov    rcx,QWORD PTR [r13+0x8]
  418b47:	mov    rax,QWORD PTR [r13+0x0]
  418b4b:	mov    rdx,rax
  418b4e:	shl    rdx,0x5
  418b52:	add    rdx,rcx
  418b55:	cmp    rbp,rax
  418b58:	jb     0x418b77
  418b5a:	nop    WORD PTR [rax+rax*1+0x0]
  418b60:	add    rax,0x1
  418b64:	mov    DWORD PTR [rdx],0x0
  418b6a:	add    rdx,0x20
  418b6e:	cmp    rax,rbp
  418b71:	jbe    0x418b60
  418b73:	mov    QWORD PTR [r13+0x0],rax
  418b77:	shl    rbp,0x5
  418b7b:	lea    rax,[rcx+rbp*1]
  418b7f:	mov    edx,DWORD PTR [rax]
  418b81:	test   edx,edx
  418b83:	jne    0x419038
  418b89:	mov    DWORD PTR [rax],0x5
  418b8f:	movzx  eax,BYTE PTR [rbx]
  418b92:	jmp    0x41888d
  418b97:	mov    QWORD PTR [rsi+0x30],rbx
  418b9b:	movzx  eax,BYTE PTR [rbx+0x1]
  418b9f:	lea    rdx,[rbx+0x1]
  418ba3:	sub    eax,0x30
  418ba6:	cmp    al,0x9
  418ba8:	ja     0x418bbe
  418baa:	nop    WORD PTR [rax+rax*1+0x0]
  418bb0:	add    rdx,0x1
  418bb4:	movzx  eax,BYTE PTR [rdx]
  418bb7:	sub    eax,0x30
  418bba:	cmp    al,0x9
  418bbc:	jbe    0x418bb0
  418bbe:	mov    rax,rdx
  418bc1:	mov    QWORD PTR [rsi+0x38],rdx
  418bc5:	sub    rax,rbx
  418bc8:	mov    rbx,QWORD PTR [rsp+0x20]
  418bcd:	cmp    rbx,rax
  418bd0:	cmovae rax,rbx
  418bd4:	mov    rbx,rdx
  418bd7:	mov    QWORD PTR [rsp+0x20],rax
  418bdc:	movzx  eax,BYTE PTR [rdx]
  418bdf:	jmp    0x418895
  418be4:	mov    r10b,0x1
  418be7:	nop    WORD PTR [rax+rax*1+0x0]
  418bf0:	add    rcx,0x1
  418bf4:	movzx  edx,BYTE PTR [rcx]
  418bf7:	lea    r8d,[rdx-0x30]
  418bfb:	cmp    r8b,0x9
  418bff:	jbe    0x418bf0
  418c01:	cmp    dl,0x24
  418c04:	jne    0x418b1b
  418c0a:	xor    ebp,ebp
  418c0c:	movabs rcx,0x1999999999999999
  418c16:	sub    eax,0x30
  418c19:	mov    rdx,0xffffffffffffffff
  418c20:	cmp    rbp,rcx
  418c23:	cdqe   
  418c25:	ja     0x418c2f
  418c27:	lea    rdx,[rbp+rbp*4+0x0]
  418c2c:	add    rdx,rdx
  418c2f:	add    rdx,rax
  418c32:	mov    rbp,rdx
  418c35:	jae    0x419150
  418c3b:	add    rbx,0x1
  418c3f:	movsx  eax,BYTE PTR [rbx]
  418c42:	mov    rbp,0xffffffffffffffff
  418c49:	lea    edx,[rax-0x30]
  418c4c:	cmp    dl,0x9
  418c4f:	jbe    0x418c0c
  418c51:	jmp    0x4189bf
  418c56:	cmp    dl,0x9
  418c59:	jbe    0x418bf0
  418c5b:	jmp    0x418b1b
  418c60:	cmp    edx,0xf
  418c63:	mov    r9d,0xc
  418c69:	jle    0x4190dd
  418c6f:	cmp    rdi,0xffffffffffffffff
  418c73:	je     0x419050
  418c79:	mov    QWORD PTR [rsi+0x50],rdi
  418c7d:	cmp    r14,rdi
  418c80:	jbe    0x418f5c
  418c86:	mov    rcx,QWORD PTR [r13+0x8]
  418c8a:	mov    rax,QWORD PTR [r13+0x0]
  418c8e:	mov    rdx,rax
  418c91:	shl    rdx,0x5
  418c95:	add    rdx,rcx
  418c98:	cmp    rdi,rax
  418c9b:	jb     0x418cb7
  418c9d:	nop    DWORD PTR [rax]
  418ca0:	add    rax,0x1
  418ca4:	mov    DWORD PTR [rdx],0x0
  418caa:	add    rdx,0x20
  418cae:	cmp    rax,rdi
  418cb1:	jbe    0x418ca0
  418cb3:	mov    QWORD PTR [r13+0x0],rax
  418cb7:	shl    rdi,0x5
  418cbb:	lea    rax,[rcx+rdi*1]
  418cbf:	mov    edx,DWORD PTR [rax]
  418cc1:	test   edx,edx
  418cc3:	jne    0x418fd0
  418cc9:	mov    DWORD PTR [rax],r9d
  418ccc:	mov    BYTE PTR [rsi+0x48],bpl
  418cd0:	mov    rax,QWORD PTR [r12]
  418cd4:	mov    QWORD PTR [rsi+0x8],rbx
  418cd8:	lea    rcx,[rax+0x1]
  418cdc:	cmp    rcx,QWORD PTR [rsp+0x28]
  418ce1:	mov    QWORD PTR [r12],rcx
  418ce5:	jae    0x418e90
  418ceb:	mov    r9,QWORD PTR [r12+0x8]
  418cf0:	jmp    0x41876b
  418cf5:	xor    r9d,r9d
  418cf8:	cmp    edx,0x7
  418cfb:	mov    ebp,eax
  418cfd:	setg   r9b
  418d01:	add    r9d,0xf
  418d05:	jmp    0x418c6f
  418d0a:	cmp    edx,0xf
  418d0d:	jg     0x418d40
  418d0f:	test   dl,0x4
  418d12:	jne    0x418d40
  418d14:	cmp    edx,0x7
  418d17:	jg     0x419288
  418d1d:	test   dl,0x2
  418d20:	jne    0x41927b
  418d26:	and    edx,0x1
  418d29:	mov    ebp,eax
  418d2b:	neg    edx
  418d2d:	mov    r9d,edx
  418d30:	add    r9d,0x14
  418d34:	jmp    0x418c6f
  418d39:	nop    DWORD PTR [rax+0x0]
  418d40:	mov    ebp,eax
  418d42:	mov    r9d,0x16
  418d48:	jmp    0x418c6f
  418d4d:	cmp    edx,0xf
  418d50:	mov    r9d,0x9
  418d56:	jg     0x418c6f
  418d5c:	test   dl,0x4
  418d5f:	jne    0x418c6f
  418d65:	cmp    edx,0x7
  418d68:	mov    r9b,0x7
  418d6b:	jg     0x418c6f
  418d71:	test   dl,0x2
  418d74:	mov    r9b,0x1
  418d77:	jne    0x418c6f
  418d7d:	and    edx,0x1
  418d80:	cmp    edx,0x1
  418d83:	sbb    r9d,r9d
  418d86:	and    r9d,0x2
  418d8a:	add    r9d,0x3
  418d8e:	jmp    0x418c6f
  418d93:	xor    r9d,r9d
  418d96:	cmp    edx,0x7
  418d99:	mov    ebp,eax
  418d9b:	setg   r9b
  418d9f:	add    r9d,0xd
  418da3:	jmp    0x418c6f
  418da8:	cmp    edx,0xf
  418dab:	mov    r9d,0xa
  418db1:	jg     0x418c6f
  418db7:	test   dl,0x4
  418dba:	jne    0x418c6f
  418dc0:	cmp    edx,0x7
  418dc3:	mov    r9b,0x8
  418dc6:	jg     0x418c6f
  418dcc:	test   dl,0x2
  418dcf:	mov    r9b,0x2
  418dd2:	jne    0x418c6f
  418dd8:	and    edx,0x1
  418ddb:	cmp    edx,0x1
  418dde:	sbb    r9d,r9d
  418de1:	and    r9d,0x2
  418de5:	add    r9d,0x4
  418de9:	jmp    0x418c6f
  418dee:	xchg   ax,ax
  418df0:	cmp    dl,0x9
  418df3:	mov    QWORD PTR [rsp+0x20],0x2
  418dfc:	jbe    0x41895b
  418e02:	mov    rbx,QWORD PTR [rsi+0x40]
  418e06:	cmp    rbx,0xffffffffffffffff
  418e0a:	je     0x419123
  418e10:	cmp    r14,rbx
  418e13:	ja     0x419089
  418e19:	test   r14,r14
  418e1c:	js     0x418f27
  418e22:	add    r14,r14
  418e25:	cmp    r14,rbx
  418e28:	ja     0x418e37
  418e2a:	lea    r14,[rbx+0x1]
  418e2e:	cmp    r14,rbx
  418e31:	jb     0x418f27
  418e37:	movabs rax,0x7ffffffffffffff
  418e41:	cmp    r14,rax
  418e44:	ja     0x418f27
  418e4a:	mov    rcx,QWORD PTR [r13+0x8]
  418e4e:	mov    rdx,r14
  418e51:	mov    QWORD PTR [rsp+0x40],r10
  418e56:	shl    rdx,0x5
  418e5a:	cmp    r15,rcx
  418e5d:	je     0x4192ba
  418e63:	call   0x415780
  418e68:	mov    r10,QWORD PTR [rsp+0x40]
  418e6d:	mov    r9,rax
  418e70:	test   r9,r9
  418e73:	je     0x418f27
  418e79:	cmp    r15,QWORD PTR [r13+0x8]
  418e7d:	je     0x419295
  418e83:	mov    QWORD PTR [r13+0x8],r9
  418e87:	mov    rcx,r9
  418e8a:	jmp    0x41908d
  418e8f:	nop
  418e90:	mov    rax,QWORD PTR [rsp+0x28]
  418e95:	test   rax,rax
  418e98:	js     0x418f27
  418e9e:	add    rax,rax
  418ea1:	mov    rdi,rax
  418ea4:	mov    QWORD PTR [rsp+0x28],rax
  418ea9:	movabs rax,0x2e8ba2e8ba2e8ba
  418eb3:	cmp    rdi,rax
  418eb6:	ja     0x418f27
  418eb8:	lea    rax,[rdi+rdi*4]
  418ebc:	mov    rcx,QWORD PTR [r12+0x8]
  418ec1:	mov    QWORD PTR [rsp+0x40],r10
  418ec6:	lea    rdx,[rdi+rax*2]
  418eca:	shl    rdx,0x3
  418ece:	cmp    QWORD PTR [rsp+0x30],rcx
  418ed3:	je     0x419074
  418ed9:	call   0x415780
  418ede:	mov    r10,QWORD PTR [rsp+0x40]
  418ee3:	mov    r9,rax
  418ee6:	test   r9,r9
  418ee9:	je     0x418f27
  418eeb:	mov    rax,QWORD PTR [rsp+0x30]
  418ef0:	cmp    rax,QWORD PTR [r12+0x8]
  418ef5:	je     0x4191e3
  418efb:	mov    QWORD PTR [r12+0x8],r9
  418f00:	mov    rcx,QWORD PTR [r12]
  418f04:	jmp    0x41876b
  418f09:	test   r14,r14
  418f0c:	js     0x418f27
  418f0e:	add    r14,r14
  418f11:	cmp    r14,rbp
  418f14:	ja     0x418fe0
  418f1a:	lea    r14,[rbp+0x1]
  418f1e:	cmp    r14,rbp
  418f21:	jae    0x418fe0
  418f27:	mov    rcx,QWORD PTR [r13+0x8]
  418f2b:	cmp    r15,rcx
  418f2e:	je     0x418f35
  418f30:	call   0x42df08
  418f35:	mov    rcx,QWORD PTR [r12+0x8]
  418f3a:	cmp    QWORD PTR [rsp+0x30],rcx
  418f3f:	je     0x418f46
  418f41:	call   0x42df08
  418f46:	call   QWORD PTR [rip+0x2f8e4]        # 0x448830
  418f4c:	mov    DWORD PTR [rax],0xc
  418f52:	mov    eax,0xffffffff
  418f57:	jmp    0x41878f
  418f5c:	test   r14,r14
  418f5f:	js     0x418f27
  418f61:	add    r14,r14
  418f64:	cmp    r14,rdi
  418f67:	ja     0x418f72
  418f69:	lea    r14,[rdi+0x1]
  418f6d:	cmp    r14,rdi
  418f70:	jb     0x418f27
  418f72:	movabs rax,0x7ffffffffffffff
  418f7c:	cmp    r14,rax
  418f7f:	ja     0x418f27
  418f81:	mov    rcx,QWORD PTR [r13+0x8]
  418f85:	mov    rdx,r14
  418f88:	mov    QWORD PTR [rsp+0x48],r10
  418f8d:	shl    rdx,0x5
  418f91:	mov    DWORD PTR [rsp+0x40],r9d
  418f96:	cmp    r15,rcx
  418f99:	je     0x4191ad
  418f9f:	call   0x415780
  418fa4:	mov    r9d,DWORD PTR [rsp+0x40]
  418fa9:	mov    r10,QWORD PTR [rsp+0x48]
  418fae:	mov    r11,rax
  418fb1:	test   r11,r11
  418fb4:	je     0x418f27
  418fba:	cmp    r15,QWORD PTR [r13+0x8]
  418fbe:	je     0x41924c
  418fc4:	mov    QWORD PTR [r13+0x8],r11
  418fc8:	mov    rcx,r11
  418fcb:	jmp    0x418c8a
  418fd0:	cmp    r9d,edx
  418fd3:	je     0x418ccc
  418fd9:	jmp    0x4189c3
  418fde:	xchg   ax,ax
  418fe0:	movabs rax,0x7ffffffffffffff
  418fea:	cmp    r14,rax
  418fed:	ja     0x418f27
  418ff3:	mov    rcx,QWORD PTR [r13+0x8]
  418ff7:	mov    rdx,r14
  418ffa:	mov    QWORD PTR [rsp+0x40],r10
  418fff:	shl    rdx,0x5
  419003:	cmp    r15,rcx
  419006:	je     0x419212
  41900c:	call   0x415780
  419011:	mov    r10,QWORD PTR [rsp+0x40]
  419016:	mov    r9,rax
  419019:	test   r9,r9
  41901c:	je     0x418f27
  419022:	cmp    r15,QWORD PTR [r13+0x8]
  419026:	je     0x419227
  41902c:	mov    QWORD PTR [r13+0x8],r9
  419030:	mov    rcx,r9
  419033:	jmp    0x418b47
  419038:	cmp    edx,0x5
  41903b:	je     0x418ac4
  419041:	jmp    0x4189c3
  419046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419050:	mov    rdi,QWORD PTR [rsp+0x38]
  419055:	mov    rax,rdi
  419058:	mov    QWORD PTR [rsi+0x50],rdi
  41905c:	add    rax,0x1
  419060:	cmp    rdi,0xffffffffffffffff
  419064:	je     0x4189bf
  41906a:	mov    QWORD PTR [rsp+0x38],rax
  41906f:	jmp    0x418c7d
  419074:	mov    rcx,rdx
  419077:	call   0x412940
  41907c:	mov    r10,QWORD PTR [rsp+0x40]
  419081:	mov    r9,rax
  419084:	jmp    0x418ee6
  419089:	mov    rcx,QWORD PTR [r13+0x8]
  41908d:	mov    rax,QWORD PTR [r13+0x0]
  419091:	mov    rdx,rax
  419094:	shl    rdx,0x5
  419098:	add    rdx,rcx
  41909b:	cmp    rbx,rax
  41909e:	jb     0x4190b7
  4190a0:	add    rax,0x1
  4190a4:	mov    DWORD PTR [rdx],0x0
  4190aa:	add    rdx,0x20
  4190ae:	cmp    rax,rbx
  4190b1:	jbe    0x4190a0
  4190b3:	mov    QWORD PTR [r13+0x0],rax
  4190b7:	mov    rax,rbx
  4190ba:	shl    rax,0x5
  4190be:	add    rax,rcx
  4190c1:	mov    edx,DWORD PTR [rax]
  4190c3:	test   edx,edx
  4190c5:	jne    0x4191c7
  4190cb:	mov    DWORD PTR [rax],0x5
  4190d1:	mov    rbx,rbp
  4190d4:	movzx  eax,BYTE PTR [rbp+0x0]
  4190d8:	jmp    0x418895
  4190dd:	and    edx,0x4
  4190e0:	cmp    edx,0x1
  4190e3:	sbb    r9d,r9d
  4190e6:	add    r9d,0xc
  4190ea:	jmp    0x418c6f
  4190ef:	mov    r9d,0xe
  4190f5:	mov    ebp,0x63
  4190fa:	jmp    0x418c6f
  4190ff:	mov    ebp,eax
  419101:	jmp    0x418ccc
  419106:	mov    ebp,eax
  419108:	mov    r9d,0x11
  41910e:	jmp    0x418c6f
  419113:	mov    r9d,0x10
  419119:	mov    ebp,0x73
  41911e:	jmp    0x418c6f
  419123:	mov    rbx,QWORD PTR [rsp+0x38]
  419128:	mov    rax,rbx
  41912b:	mov    QWORD PTR [rsi+0x40],rbx
  41912f:	add    rax,0x1
  419133:	cmp    rbx,0xffffffffffffffff
  419137:	je     0x4189bf
  41913d:	mov    QWORD PTR [rsp+0x38],rax
  419142:	jmp    0x418e10
  419147:	nop    WORD PTR [rax+rax*1+0x0]
  419150:	add    rbx,0x1
  419154:	movsx  eax,BYTE PTR [rbx]
  419157:	lea    edx,[rax-0x30]
  41915a:	cmp    dl,0x9
  41915d:	jbe    0x418c0c
  419163:	sub    rbp,0x1
  419167:	cmp    rbp,0xfffffffffffffffd
  41916b:	ja     0x4189bf
  419171:	mov    QWORD PTR [rsi+0x28],rbp
  419175:	add    rbx,0x1
  419179:	jmp    0x418b3a
  41917e:	add    rbp,0x1
  419182:	movsx  eax,BYTE PTR [rbp+0x0]
  419186:	lea    edx,[rax-0x30]
  419189:	cmp    dl,0x9
  41918c:	jbe    0x41897a
  419192:	sub    rbx,0x1
  419196:	cmp    rbx,0xfffffffffffffffd
  41919a:	ja     0x4189bf
  4191a0:	mov    QWORD PTR [rsi+0x40],rbx
  4191a4:	add    rbp,0x1
  4191a8:	jmp    0x418e10
  4191ad:	mov    rcx,rdx
  4191b0:	call   0x412940
  4191b5:	mov    r10,QWORD PTR [rsp+0x48]
  4191ba:	mov    r11,rax
  4191bd:	mov    r9d,DWORD PTR [rsp+0x40]
  4191c2:	jmp    0x418fb1
  4191c7:	cmp    edx,0x5
  4191ca:	jne    0x4189c3
  4191d0:	movzx  eax,BYTE PTR [rbp+0x0]
  4191d4:	mov    rbx,rbp
  4191d7:	jmp    0x418895
  4191dc:	xor    eax,eax
  4191de:	jmp    0x418ab9
  4191e3:	mov    rax,QWORD PTR [r12]
  4191e7:	mov    rcx,r9
  4191ea:	mov    QWORD PTR [rsp+0x40],r10
  4191ef:	lea    rdx,[rax+rax*4]
  4191f3:	lea    r8,[rax+rdx*2]
  4191f7:	mov    rdx,QWORD PTR [rsp+0x30]
  4191fc:	shl    r8,0x3
  419200:	call   0x42de98
  419205:	mov    r10,QWORD PTR [rsp+0x40]
  41920a:	mov    r9,rax
  41920d:	jmp    0x418efb
  419212:	mov    rcx,rdx
  419215:	call   0x412940
  41921a:	mov    r10,QWORD PTR [rsp+0x40]
  41921f:	mov    r9,rax
  419222:	jmp    0x419019
  419227:	mov    r8,QWORD PTR [r13+0x0]
  41922b:	mov    rcx,r9
  41922e:	mov    rdx,r15
  419231:	mov    QWORD PTR [rsp+0x40],r10
  419236:	shl    r8,0x5
  41923a:	call   0x42de98
  41923f:	mov    r10,QWORD PTR [rsp+0x40]
  419244:	mov    r9,rax
  419247:	jmp    0x41902c
  41924c:	mov    r8,QWORD PTR [r13+0x0]
  419250:	mov    rcx,r11
  419253:	mov    rdx,r15
  419256:	mov    QWORD PTR [rsp+0x48],r10
  41925b:	mov    DWORD PTR [rsp+0x40],r9d
  419260:	shl    r8,0x5
  419264:	call   0x42de98
  419269:	mov    r10,QWORD PTR [rsp+0x48]
  41926e:	mov    r11,rax
  419271:	mov    r9d,DWORD PTR [rsp+0x40]
  419276:	jmp    0x418fc4
  41927b:	mov    ebp,eax
  41927d:	mov    r9d,0x12
  419283:	jmp    0x418c6f
  419288:	mov    ebp,eax
  41928a:	mov    r9d,0x15
  419290:	jmp    0x418c6f
  419295:	mov    r8,QWORD PTR [r13+0x0]
  419299:	mov    rcx,r9
  41929c:	mov    rdx,r15
  41929f:	mov    QWORD PTR [rsp+0x40],r10
  4192a4:	shl    r8,0x5
  4192a8:	call   0x42de98
  4192ad:	mov    r10,QWORD PTR [rsp+0x40]
  4192b2:	mov    r9,rax
  4192b5:	jmp    0x418e83
  4192ba:	mov    rcx,rdx
  4192bd:	call   0x412940
  4192c2:	mov    r10,QWORD PTR [rsp+0x40]
  4192c7:	mov    r9,rax
  4192ca:	jmp    0x418e70
  4192cf:	nop
  4192d0:	push   rsi
  4192d1:	push   rbx
  4192d2:	sub    rsp,0x28
  4192d6:	mov    eax,DWORD PTR [rdx+0x10]
  4192d9:	mov    r8,QWORD PTR [rdx+0x38]
  4192dd:	mov    rsi,rcx
  4192e0:	mov    rbx,rdx
  4192e3:	and    eax,0xfffff00
  4192e8:	or     eax,0x8
  4192eb:	test   r8,r8
  4192ee:	mov    DWORD PTR [rdx+0x10],eax
  4192f1:	je     0x4192f9
  4192f3:	call   r8
  4192f6:	mov    eax,DWORD PTR [rbx+0x10]
  4192f9:	movzx  edx,WORD PTR [rbx]
  4192fc:	mov    rcx,QWORD PTR [rsi+0xc8]
  419303:	and    eax,0xfffff00
  419308:	mov    rcx,QWORD PTR [rcx+rdx*8]
  41930c:	mov    QWORD PTR [rbx+0x18],rcx
  419310:	mov    rcx,QWORD PTR [rsi+0xd0]
  419317:	mov    rdx,QWORD PTR [rcx+rdx*8]
  41931b:	mov    DWORD PTR [rbx+0x10],eax
  41931e:	mov    QWORD PTR [rbx+0x20],rdx
  419322:	add    rsp,0x28
  419326:	pop    rbx
  419327:	pop    rsi
  419328:	ret    
  419329:	nop    DWORD PTR [rax+0x0]
  419330:	push   rbp
  419331:	push   rdi
  419332:	push   rsi
  419333:	push   rbx
  419334:	sub    rsp,0x28
  419338:	mov    eax,DWORD PTR [rcx]
  41933a:	lea    rbx,[rcx+0x8]
  41933e:	mov    rbp,rcx
  419341:	lea    edx,[rax-0x1]
  419344:	test   eax,eax
  419346:	lea    rdi,[rbx+rdx*8+0x8]
  41934b:	jg     0x41935d
  41934d:	jmp    0x419380
  41934f:	nop
  419350:	mov    rcx,rsi
  419353:	call   0x42df08
  419358:	cmp    rbx,rdi
  41935b:	je     0x419380
  41935d:	add    rbx,0x8
  419361:	mov    rsi,QWORD PTR [rbx-0x8]
  419365:	cmp    DWORD PTR [rsi],0x6
  419368:	jne    0x419350
  41936a:	mov    rcx,QWORD PTR [rsi+0x10]
  41936e:	call   0x419330
  419373:	mov    rcx,rsi
  419376:	call   0x42df08
  41937b:	cmp    rbx,rdi
  41937e:	jne    0x41935d
  419380:	mov    rcx,rbp
  419383:	add    rsp,0x28
  419387:	pop    rbx
  419388:	pop    rsi
  419389:	pop    rdi
  41938a:	pop    rbp
  41938b:	jmp    0x42df08
  419390:	push   rdi
  419391:	push   rsi
  419392:	push   rbx
  419393:	sub    rsp,0x20
  419397:	mov    rdi,QWORD PTR [rip+0x2f5ea]        # 0x448988
  41939e:	mov    rsi,rcx
  4193a1:	jmp    0x4193a7
  4193a3:	add    rsi,0x1
  4193a7:	movzx  ecx,BYTE PTR [rsi]
  4193aa:	call   rdi
  4193ac:	test   eax,eax
  4193ae:	jne    0x4193a3
  4193b0:	mov    rcx,rsi
  4193b3:	call   0x42de30
  4193b8:	lea    rbx,[rsi+rax*1]
  4193bc:	cmp    rbx,rsi
  4193bf:	ja     0x4193cc
  4193c1:	jmp    0x4193d6
  4193c3:	sub    rbx,0x1
  4193c7:	cmp    rbx,rsi
  4193ca:	je     0x4193d6
  4193cc:	movzx  ecx,BYTE PTR [rbx-0x1]
  4193d0:	call   rdi
  4193d2:	test   eax,eax
  4193d4:	jne    0x4193c3
  4193d6:	mov    rax,rsi
  4193d9:	mov    BYTE PTR [rbx],0x0
  4193dc:	add    rsp,0x20
  4193e0:	pop    rbx
  4193e1:	pop    rsi
  4193e2:	pop    rdi
  4193e3:	ret    
  4193e4:	xchg   ax,ax
  4193e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4193f0:	sub    rsp,0x38
  4193f4:	mov    QWORD PTR [rsp+0x50],r8
  4193f9:	lea    r8,[rsp+0x50]
  4193fe:	mov    QWORD PTR [rsp+0x58],r9
  419403:	mov    QWORD PTR [rsp+0x28],r8
  419408:	call   0x4292e0
  41940d:	add    rsp,0x38
  419411:	ret    
  419412:	nop    DWORD PTR [rax+0x0]
  419416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419420:	push   r13
  419422:	push   r12
  419424:	push   rbp
  419425:	push   rdi
  419426:	push   rsi
  419427:	push   rbx
  419428:	sub    rsp,0x38
  41942c:	cmp    rcx,0xf
  419430:	jbe    0x41943d
  419432:	test   rdx,rdx
  419435:	je     0x41943d
  419437:	test   BYTE PTR [rdx+0x10],0x8
  41943b:	je     0x419450
  41943d:	add    rsp,0x38
  419441:	pop    rbx
  419442:	pop    rsi
  419443:	pop    rdi
  419444:	pop    rbp
  419445:	pop    r12
  419447:	pop    r13
  419449:	ret    
  41944a:	nop    WORD PTR [rax+rax*1+0x0]
  419450:	cmp    QWORD PTR [rdx+0x18],0x0
  419455:	je     0x41943d
  419457:	mov    rbx,rdx
  41945a:	mov    rsi,rcx
  41945d:	mov    rdi,QWORD PTR [rip+0x2f3cc]        # 0x448830
  419464:	call   rdi
  419466:	mov    DWORD PTR [rax],0x0
  41946c:	mov    rcx,QWORD PTR [rbx+0x18]
  419470:	lea    rdx,[rsp+0x28]
  419475:	xor    r8d,r8d
  419478:	call   0x42de00
  41947d:	mov    rbp,QWORD PTR [rbx+0x18]
  419481:	cmp    rbp,QWORD PTR [rsp+0x28]
  419486:	mov    r12d,eax
  419489:	je     0x4194c4
  41948b:	call   rdi
  41948d:	mov    eax,DWORD PTR [rax]
  41948f:	test   eax,eax
  419491:	jne    0x4194c0
  419493:	mov    eax,DWORD PTR [rbx+0x10]
  419496:	test   eax,0x1000000
  41949b:	jne    0x41950f
  41949d:	mov    rdx,QWORD PTR [rsp+0x28]
  4194a2:	cmp    BYTE PTR [rdx],0x0
  4194a5:	jne    0x4194c0
  4194a7:	test   al,0x40
  4194a9:	jne    0x419580
  4194af:	mov    DWORD PTR [rbx+0x18],r12d
  4194b3:	jmp    0x41943d
  4194b5:	cmp    cl,0x67
  4194b8:	je     0x419566
  4194be:	xchg   ax,ax
  4194c0:	mov    rbp,QWORD PTR [rbx+0x18]
  4194c4:	mov    r13,QWORD PTR [rsi+0x28]
  4194c8:	mov    r12,QWORD PTR [rip+0x187c9]        # 0x431c98
  4194cf:	call   QWORD PTR [rip+0x2f30b]        # 0x4487e0
  4194d5:	lea    rcx,[rax+0x60]
  4194d9:	mov    r9,rbp
  4194dc:	mov    r8,r13
  4194df:	mov    rdx,r12
  4194e2:	call   0x4193f0
  4194e7:	test   BYTE PTR [rsi+0x10],0x4
  4194eb:	je     0x4194fb
  4194ed:	mov    edx,0x1
  4194f2:	mov    rcx,rsi
  4194f5:	call   QWORD PTR [rsi+0x98]
  4194fb:	call   rdi
  4194fd:	mov    DWORD PTR [rax],0x16
  419503:	mov    DWORD PTR [rbx+0x18],0xffffffff
  41950a:	jmp    0x41943d
  41950f:	mov    r8,QWORD PTR [rsp+0x28]
  419514:	lea    rdx,[r8+0x1]
  419518:	mov    QWORD PTR [rsp+0x28],rdx
  41951d:	movzx  ecx,BYTE PTR [r8]
  419521:	cmp    cl,0x54
  419524:	je     0x419592
  419526:	jg     0x419546
  419528:	cmp    cl,0x47
  41952b:	je     0x419596
  41952d:	jle    0x41959c
  41952f:	cmp    cl,0x4b
  419532:	je     0x41953d
  419534:	cmp    cl,0x4d
  419537:	jne    0x4194c0
  419539:	shl    r12d,0xa
  41953d:	shl    r12d,0xa
  419541:	jmp    0x4194a2
  419546:	cmp    cl,0x6b
  419549:	je     0x419574
  41954b:	jle    0x4194b5
  419551:	cmp    cl,0x6d
  419554:	je     0x41956d
  419556:	imul   r12d,r12d,0x3e8
  41955d:	cmp    cl,0x74
  419560:	jne    0x4194c0
  419566:	imul   r12d,r12d,0x3e8
  41956d:	imul   r12d,r12d,0x3e8
  419574:	imul   r12d,r12d,0x3e8
  41957b:	jmp    0x4194a2
  419580:	mov    rcx,QWORD PTR [rbx+0x18]
  419584:	call   0x42df08
  419589:	and    DWORD PTR [rbx+0x10],0xffffffbf
  41958d:	jmp    0x4194af
  419592:	shl    r12d,0xa
  419596:	shl    r12d,0xa
  41959a:	jmp    0x419539
  41959c:	test   cl,cl
  41959e:	jne    0x4194c0
  4195a4:	mov    QWORD PTR [rsp+0x28],r8
  4195a9:	mov    rdx,r8
  4195ac:	jmp    0x4194a2
  4195b1:	nop    DWORD PTR [rax+rax*1+0x0]
  4195b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4195c0:	push   rsi
  4195c1:	push   rbx
  4195c2:	sub    rsp,0x28
  4195c6:	test   rdx,rdx
  4195c9:	mov    rsi,rcx
  4195cc:	mov    rbx,rdx
  4195cf:	je     0x419610
  4195d1:	mov    edx,0xa
  4195d6:	mov    rcx,rbx
  4195d9:	call   0x42de58
  4195de:	test   rax,rax
  4195e1:	je     0x419624
  4195e3:	sub    rax,rbx
  4195e6:	mov    r9,rsi
  4195e9:	mov    edx,0x1
  4195ee:	mov    r8,rax
  4195f1:	mov    rcx,rbx
  4195f4:	call   0x42dee0
  4195f9:	mov    rdx,rsi
  4195fc:	mov    ecx,0xa
  419601:	add    rsp,0x28
  419605:	pop    rbx
  419606:	pop    rsi
  419607:	jmp    0x42df20
  41960c:	nop    DWORD PTR [rax+0x0]
  419610:	test   r8,r8
  419613:	mov    rbx,r8
  419616:	jne    0x4195d1
  419618:	test   r9,r9
  41961b:	jne    0x419631
  41961d:	add    rsp,0x28
  419621:	pop    rbx
  419622:	pop    rsi
  419623:	ret    
  419624:	mov    rdx,rsi
  419627:	mov    rcx,rbx
  41962a:	call   0x42df18
  41962f:	jmp    0x4195f9
  419631:	mov    rbx,r9
  419634:	jmp    0x4195d1
  419636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419640:	push   rsi
  419641:	push   rbx
  419642:	sub    rsp,0x28
  419646:	cmp    BYTE PTR [rcx],0x27
  419649:	mov    rbx,rcx
  41964c:	jne    0x41967b
  41964e:	mov    rsi,QWORD PTR [rip+0x2f18b]        # 0x4487e0
  419655:	call   rsi
  419657:	lea    rcx,[rip+0x20933]        # 0x439f91
  41965e:	lea    r9,[rax+0x30]
  419662:	mov    r8d,0x2
  419668:	mov    edx,0x1
  41966d:	add    rbx,0x1
  419671:	call   0x42dee0
  419676:	cmp    BYTE PTR [rbx],0x27
  419679:	je     0x419655
  41967b:	mov    rax,rbx
  41967e:	add    rsp,0x28
  419682:	pop    rbx
  419683:	pop    rsi
  419684:	ret    
  419685:	nop
  419686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419690:	push   r12
  419692:	push   rbp
  419693:	push   rdi
  419694:	push   rsi
  419695:	push   rbx
  419696:	sub    rsp,0x20
  41969a:	test   BYTE PTR [rdx+0x10],0x20
  41969e:	mov    rdi,rcx
  4196a1:	mov    r12,rdx
  4196a4:	mov    rbx,r8
  4196a7:	je     0x4196b5
  4196a9:	cmp    WORD PTR [rdx+0x8],0x8000
  4196af:	je     0x4197c0
  4196b5:	mov    rsi,QWORD PTR [r12+0x50]
  4196ba:	mov    rcx,rsi
  4196bd:	mov    ebp,0x11
  4196c2:	call   0x42de30
  4196c7:	mov    rdx,rdi
  4196ca:	mov    rcx,rsi
  4196cd:	sub    ebp,eax
  4196cf:	call   0x42df18
  4196d4:	test   rbx,rbx
  4196d7:	je     0x4197a0
  4196dd:	lea    rcx,[rip+0x1f21c]        # 0x438900
  4196e4:	mov    r9,rdi
  4196e7:	mov    r8d,0x3
  4196ed:	mov    edx,0x1
  4196f2:	lea    esi,[rbp-0x1]
  4196f5:	call   0x42dee0
  4196fa:	test   ebp,ebp
  4196fc:	jle    0x419715
  4196fe:	xchg   ax,ax
  419700:	mov    rdx,rdi
  419703:	mov    ecx,0x20
  419708:	sub    esi,0x1
  41970b:	call   0x42df20
  419710:	cmp    esi,0xffffffff
  419713:	jne    0x419700
  419715:	mov    eax,DWORD PTR [r12+0x10]
  41971a:	and    eax,0xf000
  41971f:	cmp    eax,0x5000
  419724:	jne    0x419765
  419726:	jmp    0x4197c9
  41972b:	nop    DWORD PTR [rax+rax*1+0x0]
  419730:	mov    rdx,rax
  419733:	mov    rcx,rbx
  419736:	mov    r9,rdi
  419739:	sub    rdx,rbx
  41973c:	mov    r8d,0x1
  419742:	lea    rbx,[rsi+0x1]
  419746:	call   0x42dee0
  41974b:	lea    rcx,[rip+0x1f1b5]        # 0x438907
  419752:	mov    r9,rdi
  419755:	mov    r8d,0x2
  41975b:	mov    edx,0x1
  419760:	call   0x42dee0
  419765:	mov    edx,0xa
  41976a:	mov    rcx,rbx
  41976d:	call   0x42de58
  419772:	test   rax,rax
  419775:	mov    rsi,rax
  419778:	jne    0x419730
  41977a:	mov    rdx,rdi
  41977d:	mov    rcx,rbx
  419780:	call   0x42df18
  419785:	mov    rdx,rdi
  419788:	mov    ecx,0xa
  41978d:	add    rsp,0x20
  419791:	pop    rbx
  419792:	pop    rsi
  419793:	pop    rdi
  419794:	pop    rbp
  419795:	pop    r12
  419797:	jmp    0x42df20
  41979c:	nop    DWORD PTR [rax+0x0]
  4197a0:	mov    eax,DWORD PTR [r12+0x10]
  4197a5:	and    eax,0xf000
  4197aa:	cmp    eax,0x5000
  4197af:	jne    0x419785
  4197b1:	jmp    0x4196dd
  4197b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4197c0:	mov    rsi,QWORD PTR [rdx+0x58]
  4197c4:	jmp    0x4196ba
  4197c9:	lea    rdx,[rip+0x1f134]        # 0x438904
  4197d0:	mov    r8d,ebx
  4197d3:	mov    rcx,rdi
  4197d6:	call   0x4193f0
  4197db:	jmp    0x419785
  4197dd:	nop    DWORD PTR [rax]
  4197e0:	sub    rsp,0x38
  4197e4:	mov    QWORD PTR [rsp+0x58],r9
  4197e9:	lea    r9,[rsp+0x58]
  4197ee:	mov    QWORD PTR [rsp+0x28],r9
  4197f3:	call   0x429350
  4197f8:	add    rsp,0x38
  4197fc:	ret    
  4197fd:	nop    DWORD PTR [rax]
  419800:	sub    rsp,0x38
  419804:	mov    QWORD PTR [rsp+0x48],rdx
  419809:	lea    rdx,[rsp+0x48]
  41980e:	mov    QWORD PTR [rsp+0x50],r8
  419813:	mov    QWORD PTR [rsp+0x58],r9
  419818:	mov    QWORD PTR [rsp+0x28],rdx
  41981d:	call   0x429310
  419822:	add    rsp,0x38
  419826:	ret    
  419827:	nop    WORD PTR [rax+rax*1+0x0]
  419830:	push   rbx
  419831:	sub    rsp,0x20
  419835:	cmp    BYTE PTR [rip+0x2a6f8],0x0        # 0x443f34
  41983c:	mov    ebx,ecx
  41983e:	jne    0x419847
  419840:	mov    ecx,ebx
  419842:	call   0x42df60
  419847:	mov    edx,ecx
  419849:	lea    rcx,[rip+0x1f0ba]        # 0x43890a
  419850:	call   0x419800
  419855:	jmp    0x419840
  419857:	nop    WORD PTR [rax+rax*1+0x0]
  419860:	push   rsi
  419861:	push   rbx
  419862:	sub    rsp,0x28
  419866:	mov    rbx,QWORD PTR [rip+0x182f3]        # 0x431b60
  41986d:	mov    rsi,rcx
  419870:	call   QWORD PTR [rip+0x2ef6a]        # 0x4487e0
  419876:	lea    rcx,[rax+0x60]
  41987a:	mov    r8,rsi
  41987d:	mov    rdx,rbx
  419880:	call   0x4193f0
  419885:	mov    ecx,0x46
  41988a:	call   0x419830
  41988f:	nop
  419890:	push   r15
  419892:	push   r14
  419894:	push   r13
  419896:	push   r12
  419898:	push   rbp
  419899:	push   rdi
  41989a:	push   rsi
  41989b:	push   rbx
  41989c:	sub    rsp,0x58
  4198a0:	cmp    rcx,0xf
  4198a4:	mov    QWORD PTR [rsp+0xa0],rcx
  4198ac:	mov    r13,rdx
  4198af:	mov    rbx,r8
  4198b2:	mov    ebp,r9d
  4198b5:	ja     0x419b33
  4198bb:	mov    r8,QWORD PTR [r13+0x50]
  4198bf:	mov    rdx,QWORD PTR [rip+0x1858a]        # 0x431e50
  4198c6:	mov    rcx,QWORD PTR [rip+0x2a63b]        # 0x443f08
  4198cd:	call   0x4193f0
  4198d2:	mov    rdi,QWORD PTR [rbx]
  4198d5:	mov    DWORD PTR [rsp+0x38],0x0
  4198dd:	cmp    BYTE PTR [rdi],0x7f
  4198e0:	je     0x419b70
  4198e6:	mov    rcx,rdi
  4198e9:	mov    r12,rbx
  4198ec:	mov    r14d,ebp
  4198ef:	xor    esi,esi
  4198f1:	xor    r15d,r15d
  4198f4:	jmp    0x419904
  4198f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419900:	mov    rcx,QWORD PTR [r12]
  419904:	call   0x42de30
  419909:	add    rax,0x1
  41990d:	add    r12,0x8
  419911:	cmp    r15,rax
  419914:	cmovb  r15,rax
  419918:	sub    r14d,0x1
  41991c:	add    rsi,rax
  41991f:	test   r14d,r14d
  419922:	jg     0x419900
  419924:	cmp    r15,0x23
  419928:	jbe    0x4199b0
  41992e:	mov    esi,ebp
  419930:	jmp    0x419935
  419932:	mov    rdi,QWORD PTR [rbx]
  419935:	mov    rcx,QWORD PTR [rip+0x2a5cc]        # 0x443f08
  41993c:	lea    rdx,[rip+0x2052d]        # 0x439e70
  419943:	mov    r8,rdi
  419946:	sub    esi,0x1
  419949:	add    rbx,0x8
  41994d:	call   0x4193f0
  419952:	test   esi,esi
  419954:	jg     0x419932
  419956:	cmp    QWORD PTR [rsp+0xa0],0xf
  41995f:	ja     0x419abf
  419965:	mov    eax,DWORD PTR [r13+0x10]
  419969:	and    eax,0xf000
  41996e:	cmp    eax,0x4000
  419973:	je     0x419b05
  419979:	mov    eax,DWORD PTR [rsp+0x38]
  41997d:	mov    rdx,QWORD PTR [rip+0x18284]        # 0x431c08
  419984:	mov    rcx,QWORD PTR [rip+0x2a57d]        # 0x443f08
  41998b:	lea    r9d,[rax+rbp*1-0x1]
  419990:	mov    r8d,eax
  419993:	call   0x4193f0
  419998:	nop
  419999:	add    rsp,0x58
  41999d:	pop    rbx
  41999e:	pop    rsi
  41999f:	pop    rdi
  4199a0:	pop    rbp
  4199a1:	pop    r12
  4199a3:	pop    r13
  4199a5:	pop    r14
  4199a7:	pop    r15
  4199a9:	ret    
  4199aa:	nop    WORD PTR [rax+rax*1+0x0]
  4199b0:	cmp    rsi,0x4b
  4199b4:	jbe    0x419a60
  4199ba:	lea    r12,[rsp+0x40]
  4199bf:	lea    r8,[rip+0x204b0]        # 0x439e76
  4199c6:	mov    r9d,r15d
  4199c9:	mov    edx,0x10
  4199ce:	mov    rcx,r12
  4199d1:	call   0x4197e0
  4199d6:	cmp    eax,0xf
  4199d9:	jg     0x419bac
  4199df:	mov    eax,0x4e
  4199e4:	xor    edx,edx
  4199e6:	mov    r9,QWORD PTR [rip+0x2a51b]        # 0x443f08
  4199ed:	div    r15
  4199f0:	lea    rcx,[rip+0x20447]        # 0x439e3e
  4199f7:	mov    r8d,0x2
  4199fd:	mov    edx,0x1
  419a02:	add    rbx,0x8
  419a06:	mov    r15d,ebp
  419a09:	xor    esi,esi
  419a0b:	mov    rdi,rax
  419a0e:	call   0x42dee0
  419a13:	jmp    0x419a28
  419a15:	mov    rcx,QWORD PTR [rip+0x2a4ec]        # 0x443f08
  419a1c:	mov    rdx,r12
  419a1f:	call   0x4193f0
  419a24:	add    rbx,0x8
  419a28:	sub    r15d,0x1
  419a2c:	test   r15d,r15d
  419a2f:	jle    0x419b90
  419a35:	lea    eax,[rsi+0x1]
  419a38:	mov    r8,QWORD PTR [rbx-0x8]
  419a3c:	cmp    rax,rdi
  419a3f:	mov    rsi,rax
  419a42:	jne    0x419a15
  419a44:	mov    rcx,QWORD PTR [rip+0x2a4bd]        # 0x443f08
  419a4b:	lea    rdx,[rip+0x204b5]        # 0x439f07
  419a52:	xor    esi,esi
  419a54:	call   0x4193f0
  419a59:	jmp    0x419a24
  419a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  419a60:	mov    rdx,QWORD PTR [rip+0x2a4a1]        # 0x443f08
  419a67:	mov    ecx,0x20
  419a6c:	mov    esi,ebp
  419a6e:	call   0x42df20
  419a73:	mov    rdx,QWORD PTR [rip+0x2a48e]        # 0x443f08
  419a7a:	mov    ecx,0x20
  419a7f:	add    rbx,0x8
  419a83:	sub    esi,0x1
  419a86:	call   0x42df20
  419a8b:	mov    rcx,QWORD PTR [rbx-0x8]
  419a8f:	mov    rdx,QWORD PTR [rip+0x2a472]        # 0x443f08
  419a96:	call   0x42df18
  419a9b:	test   esi,esi
  419a9d:	jg     0x419a73
  419a9f:	mov    rdx,QWORD PTR [rip+0x2a462]        # 0x443f08
  419aa6:	mov    ecx,0xa
  419aab:	call   0x42df20
  419ab0:	cmp    QWORD PTR [rsp+0xa0],0xf
  419ab9:	jbe    0x419965
  419abf:	mov    eax,DWORD PTR [rsp+0x38]
  419ac3:	mov    rdx,QWORD PTR [rip+0x1813e]        # 0x431c08
  419aca:	mov    rcx,QWORD PTR [rip+0x2a437]        # 0x443f08
  419ad1:	lea    r9d,[rax+rbp*1-0x1]
  419ad6:	mov    r8d,eax
  419ad9:	call   0x4193f0
  419ade:	mov    rcx,QWORD PTR [rsp+0xa0]
  419ae6:	mov    edx,0x1
  419aeb:	call   QWORD PTR [rcx+0x98]
  419af1:	mov    eax,DWORD PTR [r13+0x10]
  419af5:	and    eax,0xf000
  419afa:	cmp    eax,0x4000
  419aff:	jne    0x419979
  419b05:	mov    rdx,QWORD PTR [rip+0x18244]        # 0x431d50
  419b0c:	mov    rcx,QWORD PTR [rip+0x2a3f5]        # 0x443f08
  419b13:	mov    r8d,ebp
  419b16:	call   0x4193f0
  419b1b:	mov    rdx,QWORD PTR [rip+0x2a3e6]        # 0x443f08
  419b22:	mov    rcx,QWORD PTR [rip+0x18317]        # 0x431e40
  419b29:	call   0x42df18
  419b2e:	jmp    0x419999
  419b33:	mov    rax,QWORD PTR [rcx+0x28]
  419b37:	mov    rcx,QWORD PTR [rip+0x2a3ca]        # 0x443f08
  419b3e:	mov    QWORD PTR [rsp+0x38],rax
  419b43:	mov    rax,QWORD PTR [rdx+0x50]
  419b47:	mov    r8,QWORD PTR [rsp+0x38]
  419b4c:	mov    QWORD PTR [rsp+0x20],rax
  419b51:	mov    r9,QWORD PTR [rdx+0x18]
  419b55:	mov    rdx,QWORD PTR [rip+0x2a3fc]        # 0x443f58
  419b5c:	call   0x4193f0
  419b61:	jmp    0x4198bb
  419b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419b70:	mov    rdi,QWORD PTR [rbx+0x8]
  419b74:	sub    ebp,0x1
  419b77:	add    rbx,0x8
  419b7b:	mov    DWORD PTR [rsp+0x38],0x1
  419b83:	jmp    0x4198e6
  419b88:	nop    DWORD PTR [rax+rax*1+0x0]
  419b90:	mov    r8,QWORD PTR [rbx-0x8]
  419b94:	mov    rcx,QWORD PTR [rip+0x2a36d]        # 0x443f08
  419b9b:	lea    rdx,[rip+0x20361]        # 0x439f03
  419ba2:	call   0x4193f0
  419ba7:	jmp    0x419956
  419bac:	mov    ecx,0x1
  419bb1:	call   0x419830
  419bb6:	nop
  419bb7:	nop    WORD PTR [rax+rax*1+0x0]
  419bc0:	push   r15
  419bc2:	push   r14
  419bc4:	push   r13
  419bc6:	push   r12
  419bc8:	push   rbp
  419bc9:	push   rdi
  419bca:	push   rsi
  419bcb:	push   rbx
  419bcc:	sub    rsp,0x38
  419bd0:	mov    ebx,DWORD PTR [rsp+0xa0]
  419bd7:	mov    rdi,rcx
  419bda:	mov    QWORD PTR [rsp+0x88],rdx
  419be2:	mov    QWORD PTR [rsp+0x90],r8
  419bea:	mov    rbp,r9
  419bed:	call   0x42de30
  419bf2:	mov    rsi,rax
  419bf5:	movzx  eax,BYTE PTR [rdi]
  419bf8:	cmp    al,0x7f
  419bfa:	ja     0x419c59
  419bfc:	lea    rdx,[rip+0x22d3d]        # 0x43c940
  419c03:	movzx  ecx,al
  419c06:	mov    edx,DWORD PTR [rdx+rcx*4]
  419c09:	test   edx,0x30000
  419c0f:	je     0x419c50
  419c11:	lea    rdx,[rsp+0x28]
  419c16:	xor    r8d,r8d
  419c19:	mov    rcx,rdi
  419c1c:	mov    QWORD PTR [rsp+0x28],rdi
  419c21:	call   0x42ddf8
  419c26:	cmp    DWORD PTR [rsp+0xa0],eax
  419c2d:	jbe    0x419c3f
  419c2f:	mov    rdx,QWORD PTR [rsp+0x28]
  419c34:	mov    eax,eax
  419c36:	cmp    BYTE PTR [rdx],0x0
  419c39:	je     0x419cf4
  419c3f:	mov    rax,QWORD PTR [rip+0x1805a]        # 0x431ca0
  419c46:	jmp    0x419cb9
  419c48:	nop    DWORD PTR [rax+rax*1+0x0]
  419c50:	and    dh,0x80
  419c53:	jne    0x419d05
  419c59:	xor    r14d,r14d
  419c5c:	test   rbx,rbx
  419c5f:	mov    r12,rbx
  419c62:	mov    r13,0xffffffffffffffff
  419c69:	je     0x419d17
  419c6f:	nop
  419c70:	mov    r15,QWORD PTR [rbp+r14*8+0x0]
  419c75:	mov    r8,rsi
  419c78:	mov    rdx,rdi
  419c7b:	mov    rcx,r15
  419c7e:	call   0x42de28
  419c83:	test   eax,eax
  419c85:	jne    0x419c9c
  419c87:	cmp    BYTE PTR [r15+rsi*1],0x0
  419c8c:	je     0x419d20
  419c92:	cmp    r12,rbx
  419c95:	mov    r12,r13
  419c98:	cmove  r12,r14
  419c9c:	add    r14,0x1
  419ca0:	cmp    rbx,r14
  419ca3:	jne    0x419c70
  419ca5:	cmp    rbx,r12
  419ca8:	mov    rax,r12
  419cab:	ja     0x419cf4
  419cad:	cmp    r12,rbx
  419cb0:	je     0x419d17
  419cb2:	mov    rax,QWORD PTR [rip+0x17edf]        # 0x431b98
  419cb9:	mov    QWORD PTR [rip+0x2a298],rax        # 0x443f58
  419cc0:	call   QWORD PTR [rip+0x2eb1a]        # 0x4487e0
  419cc6:	mov    r9d,DWORD PTR [rsp+0xa0]
  419cce:	mov    rdx,QWORD PTR [rsp+0x90]
  419cd6:	add    rax,0x60
  419cda:	mov    rcx,QWORD PTR [rsp+0x88]
  419ce2:	mov    r8,rbp
  419ce5:	mov    QWORD PTR [rip+0x2a21c],rax        # 0x443f08
  419cec:	call   0x419890
  419cf1:	mov    rax,rbx
  419cf4:	add    rsp,0x38
  419cf8:	pop    rbx
  419cf9:	pop    rsi
  419cfa:	pop    rdi
  419cfb:	pop    rbp
  419cfc:	pop    r12
  419cfe:	pop    r13
  419d00:	pop    r14
  419d02:	pop    r15
  419d04:	ret    
  419d05:	cmp    BYTE PTR [rdi+0x2],0x0
  419d09:	jne    0x419c59
  419d0f:	cmp    al,0x7e
  419d11:	je     0x419d25
  419d13:	cmp    al,0x2d
  419d15:	je     0x419d37
  419d17:	mov    rax,QWORD PTR [rip+0x17f32]        # 0x431c50
  419d1e:	jmp    0x419cb9
  419d20:	mov    rax,r14
  419d23:	jmp    0x419cf4
  419d25:	cmp    BYTE PTR [rdi+0x1],0x30
  419d29:	jne    0x419d17
  419d2b:	mov    eax,DWORD PTR [rsp+0xa0]
  419d32:	sub    eax,0x1
  419d35:	jmp    0x419cf4
  419d37:	cmp    BYTE PTR [rdi+0x1],0x31
  419d3b:	jne    0x419d17
  419d3d:	jmp    0x419d2b
  419d3f:	nop
  419d40:	push   r13
  419d42:	push   r12
  419d44:	push   rbp
  419d45:	push   rdi
  419d46:	push   rsi
  419d47:	push   rbx
  419d48:	sub    rsp,0x48
  419d4c:	mov    rbx,QWORD PTR [rip+0x2eadd]        # 0x448830
  419d53:	mov    r12,rdx
  419d56:	mov    r13,r8
  419d59:	mov    rsi,rcx
  419d5c:	call   rbx
  419d5e:	mov    ecx,DWORD PTR [rax]
  419d60:	call   0x42de40
  419d65:	mov    rbp,rax
  419d68:	call   rbx
  419d6a:	mov    rbx,QWORD PTR [rip+0x17e4f]        # 0x431bc0
  419d71:	mov    edi,DWORD PTR [rax]
  419d73:	call   QWORD PTR [rip+0x2ea67]        # 0x4487e0
  419d79:	lea    rcx,[rax+0x60]
  419d7d:	mov    QWORD PTR [rsp+0x30],r13
  419d82:	mov    QWORD PTR [rsp+0x28],r12
  419d87:	mov    QWORD PTR [rsp+0x20],rbp
  419d8c:	mov    r9d,edi
  419d8f:	mov    r8,rsi
  419d92:	mov    rdx,rbx
  419d95:	call   0x4193f0
  419d9a:	nop
  419d9b:	add    rsp,0x48
  419d9f:	pop    rbx
  419da0:	pop    rsi
  419da1:	pop    rdi
  419da2:	pop    rbp
  419da3:	pop    r12
  419da5:	pop    r13
  419da7:	ret    
  419da8:	nop    DWORD PTR [rax+rax*1+0x0]
  419db0:	sub    rsp,0x28
  419db4:	call   0x419d40
  419db9:	mov    ecx,0x1
  419dbe:	call   0x419830
  419dc3:	nop
  419dc4:	xchg   ax,ax
  419dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419dd0:	sub    rsp,0x38
  419dd4:	mov    QWORD PTR [rsp+0x50],r8
  419dd9:	lea    r8,[rsp+0x50]
  419dde:	mov    QWORD PTR [rsp+0x58],r9
  419de3:	mov    QWORD PTR [rsp+0x28],r8
  419de8:	call   0x4293b0
  419ded:	add    rsp,0x38
  419df1:	ret    
  419df2:	nop    DWORD PTR [rax+0x0]
  419df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419e00:	push   r12
  419e02:	push   rbp
  419e03:	push   rdi
  419e04:	push   rsi
  419e05:	push   rbx
  419e06:	sub    rsp,0x20
  419e0a:	mov    ebx,edx
  419e0c:	mov    rsi,rcx
  419e0f:	mov    rbp,r8
  419e12:	sub    ebx,0x1
  419e15:	mov    rdi,r9
  419e18:	js     0x419e42
  419e1a:	nop    WORD PTR [rax+rax*1+0x0]
  419e20:	mov    rdx,rsi
  419e23:	mov    ecx,0x20
  419e28:	sub    ebx,0x1
  419e2b:	call   0x42de78
  419e30:	mov    rdx,rsi
  419e33:	mov    ecx,0x20
  419e38:	call   0x42de78
  419e3d:	cmp    ebx,0xffffffff
  419e40:	jne    0x419e20
  419e42:	mov    edx,DWORD PTR [rdi]
  419e44:	cmp    edx,0x6
  419e47:	ja     0x41a044
  419e4d:	lea    rax,[rip+0x1eaec]        # 0x438940
  419e54:	mov    ecx,edx
  419e56:	movsxd rcx,DWORD PTR [rax+rcx*4]
  419e5a:	add    rax,rcx
  419e5d:	jmp    rax
  419e5f:	nop
  419e60:	mov    r9d,DWORD PTR [rdi+0x10]
  419e64:	mov    r8,QWORD PTR [rdi+0x8]
  419e68:	lea    rdx,[rip+0x20347]        # 0x43a1b6
  419e6f:	mov    rcx,rsi
  419e72:	add    rsp,0x20
  419e76:	pop    rbx
  419e77:	pop    rsi
  419e78:	pop    rdi
  419e79:	pop    rbp
  419e7a:	pop    r12
  419e7c:	jmp    0x4193f0
  419e81:	mov    rbx,QWORD PTR [rdi+0x10]
  419e85:	mov    rbp,QWORD PTR [rdi+0x8]
  419e89:	test   rbx,rbx
  419e8c:	je     0x41a0d5
  419e92:	mov    edi,DWORD PTR [rbx]
  419e94:	mov    r8,rbp
  419e97:	lea    rdx,[rip+0x20081]        # 0x439f1f
  419e9e:	test   edi,edi
  419ea0:	jle    0x419f78
  419ea6:	lea    rdx,[rip+0x20044]        # 0x439ef1
  419ead:	mov    rcx,rsi
  419eb0:	add    rbx,0x8
  419eb4:	call   0x4193f0
  419eb9:	mov    eax,DWORD PTR [rip+0x177c1]        # 0x431680
  419ebf:	lea    edx,[rax+0x1]
  419ec2:	lea    eax,[rdi-0x1]
  419ec5:	mov    DWORD PTR [rip+0x177b5],edx        # 0x431680
  419ecb:	lea    rdi,[rbx+rax*8+0x8]
  419ed0:	jmp    0x419ed8
  419ed2:	mov    edx,DWORD PTR [rip+0x177a8]        # 0x431680
  419ed8:	add    rbx,0x8
  419edc:	mov    r9,QWORD PTR [rbx-0x8]
  419ee0:	xor    r8d,r8d
  419ee3:	mov    rcx,rsi
  419ee6:	call   0x419e00
  419eeb:	cmp    rbx,rdi
  419eee:	jne    0x419ed2
  419ef0:	mov    ebx,DWORD PTR [rip+0x1778a]        # 0x431680
  419ef6:	lea    eax,[rbx-0x1]
  419ef9:	sub    ebx,0x2
  419efc:	mov    DWORD PTR [rip+0x1777e],eax        # 0x431680
  419f02:	js     0x419f26
  419f04:	mov    rdx,rsi
  419f07:	mov    ecx,0x20
  419f0c:	sub    ebx,0x1
  419f0f:	call   0x42de78
  419f14:	mov    rdx,rsi
  419f17:	mov    ecx,0x20
  419f1c:	call   0x42de78
  419f21:	cmp    ebx,0xffffffff
  419f24:	jne    0x419f04
  419f26:	mov    r8,rbp
  419f29:	lea    rdx,[rip+0x1ea06]        # 0x438936
  419f30:	jmp    0x419f78
  419f32:	mov    r12,QWORD PTR [rdi+0x8]
  419f36:	lea    rbp,[rdi+0x10]
  419f3a:	lea    rdx,[rip+0x1fff9]        # 0x439f3a
  419f41:	lea    rdi,[rip+0x1f438]        # 0x439380
  419f48:	mov    rcx,rsi
  419f4b:	mov    r8,r12
  419f4e:	call   0x4193f0
  419f53:	movzx  ebx,BYTE PTR [rbp+0x0]
  419f57:	cmp    ebx,0x26
  419f5a:	je     0x41a080
  419f60:	jg     0x41a054
  419f66:	test   ebx,ebx
  419f68:	jne    0x41a0c0
  419f6e:	lea    rdx,[rip+0x1fef4]        # 0x439e69
  419f75:	mov    r8,r12
  419f78:	mov    rcx,rsi
  419f7b:	add    rsp,0x20
  419f7f:	pop    rbx
  419f80:	pop    rsi
  419f81:	pop    rdi
  419f82:	pop    rbp
  419f83:	pop    r12
  419f85:	jmp    0x4193f0
  419f8a:	nop    WORD PTR [rax+rax*1+0x0]
  419f90:	test   rbp,rbp
  419f93:	je     0x419e60
  419f99:	lea    rax,[rip+0x1e97c]        # 0x43891c
  419fa0:	mov    r8,QWORD PTR [rdi+0x8]
  419fa4:	lea    r9,[rip+0x1e969]        # 0x438914
  419fab:	cmp    edx,0x2
  419fae:	lea    rdx,[rip+0x2005f]        # 0x43a014
  419fb5:	mov    rcx,rsi
  419fb8:	cmovne r9,rax
  419fbc:	mov    ebx,DWORD PTR [rbp+0x10]
  419fbf:	mov    r12,QWORD PTR [rbp+0x18]
  419fc3:	call   0x4193f0
  419fc8:	mov    ecx,0x3
  419fcd:	mov    rdx,rbp
  419fd0:	call   QWORD PTR [rbp+0x38]
  419fd3:	mov    rcx,QWORD PTR [rbp+0x18]
  419fd7:	test   rcx,rcx
  419fda:	je     0x419ff2
  419fdc:	mov    rdx,rsi
  419fdf:	call   0x42df18
  419fe4:	cmp    DWORD PTR [rdi],0x2
  419fe7:	je     0x419ff2
  419fe9:	mov    rcx,QWORD PTR [rbp+0x18]
  419fed:	call   0x42df08
  419ff2:	mov    QWORD PTR [rbp+0x18],r12
  419ff6:	mov    DWORD PTR [rbp+0x10],ebx
  419ff9:	lea    rdx,[rip+0x1fe69]        # 0x439e69
  41a000:	mov    r8,QWORD PTR [rdi+0x8]
  41a004:	jmp    0x419f78
  41a009:	nop    DWORD PTR [rax+0x0]
  41a010:	mov    eax,DWORD PTR [rdi+0x10]
  41a013:	lea    r9,[rip+0x1e911]        # 0x43892b
  41a01a:	mov    r8,QWORD PTR [rdi+0x8]
  41a01e:	lea    rdx,[rip+0x200ac]        # 0x43a0d1
  41a025:	mov    rcx,rsi
  41a028:	test   eax,eax
  41a02a:	lea    rax,[rip+0x1e8ff]        # 0x438930
  41a031:	cmove  r9,rax
  41a035:	add    rsp,0x20
  41a039:	pop    rbx
  41a03a:	pop    rsi
  41a03b:	pop    rdi
  41a03c:	pop    rbp
  41a03d:	pop    r12
  41a03f:	jmp    0x4193f0
  41a044:	mov    r8,QWORD PTR [rdi+0x8]
  41a048:	lea    rdx,[rip+0x1fed0]        # 0x439f1f
  41a04f:	jmp    0x419f78
  41a054:	cmp    ebx,0x3e
  41a057:	je     0x41a080
  41a059:	jg     0x41a073
  41a05b:	cmp    ebx,0x3c
  41a05e:	je     0x41a080
  41a060:	mov    rdx,rsi
  41a063:	mov    ecx,ebx
  41a065:	call   0x42de78
  41a06a:	add    rbp,0x1
  41a06e:	jmp    0x419f53
  41a073:	lea    eax,[rbx-0x7f]
  41a076:	cmp    eax,0x80
  41a07b:	ja     0x41a060
  41a07d:	nop    DWORD PTR [rax]
  41a080:	mov    rdx,rsi
  41a083:	mov    ecx,0x26
  41a088:	call   0x42de78
  41a08d:	cmp    ebx,0x26
  41a090:	lea    rax,[rip+0x1f2a9]        # 0x439340
  41a097:	je     0x41a0c7
  41a099:	add    rax,0x10
  41a09d:	cmp    ebx,DWORD PTR [rax]
  41a09f:	je     0x41a0c7
  41a0a1:	cmp    rax,rdi
  41a0a4:	jne    0x41a099
  41a0a6:	lea    rdx,[rip+0x1ff7c]        # 0x43a029
  41a0ad:	mov    r8d,ebx
  41a0b0:	mov    rcx,rsi
  41a0b3:	call   0x4193f0
  41a0b8:	jmp    0x41a06a
  41a0ba:	nop    WORD PTR [rax+rax*1+0x0]
  41a0c0:	cmp    ebx,0x1f
  41a0c3:	jg     0x41a060
  41a0c5:	jmp    0x41a080
  41a0c7:	lea    rcx,[rax+0x8]
  41a0cb:	mov    rdx,rsi
  41a0ce:	call   0x42df18
  41a0d3:	jmp    0x41a06a
  41a0d5:	add    rsp,0x20
  41a0d9:	pop    rbx
  41a0da:	pop    rsi
  41a0db:	pop    rdi
  41a0dc:	pop    rbp
  41a0dd:	pop    r12
  41a0df:	ret    
  41a0e0:	test   BYTE PTR [rdx+0x10],0x8
  41a0e4:	je     0x41a0f0
  41a0e6:	repz ret 
  41a0e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a0f0:	mov    rax,QWORD PTR [rcx+0x98]
  41a0f7:	xor    edx,edx
  41a0f9:	rex.W jmp rax
  41a0fc:	nop    DWORD PTR [rax+0x0]
  41a100:	mov    rax,QWORD PTR [rip+0x17c81]        # 0x431d88
  41a107:	lea    r10,[rip+0x1fc6b]        # 0x439d79
  41a10e:	lea    r11,[rip+0x1fc81]        # 0x439d96
  41a115:	and    ecx,0x3
  41a118:	cmp    ecx,0x2
  41a11b:	mov    QWORD PTR [rdx],rax
  41a11e:	mov    QWORD PTR [rip+0x29ec3],r10        # 0x443fe8
  41a125:	lea    r10,[rip+0x1fc47]        # 0x439d73
  41a12c:	mov    QWORD PTR [rip+0x29efd],r11        # 0x444030
  41a133:	lea    r11,[rip+0x1fc44]        # 0x439d7e
  41a13a:	lea    rdx,[rip+0x1ede0]        # 0x438f21
  41a141:	mov    QWORD PTR [rip+0x29e90],r10        # 0x443fd8
  41a148:	lea    r10,[rip+0x1fc35]        # 0x439d84
  41a14f:	mov    rax,QWORD PTR [rip+0x179ca]        # 0x431b20
  41a156:	mov    QWORD PTR [rip+0x29e9b],r11        # 0x443ff8
  41a15d:	lea    r11,[rip+0x1edbd]        # 0x438f21
  41a164:	mov    QWORD PTR [rip+0x29e5d],rdx        # 0x443fc8
  41a16b:	mov    QWORD PTR [rip+0x29e8e],r10        # 0x444000
  41a172:	lea    r10,[rip+0x1fbf4]        # 0x439d6d
  41a179:	mov    rdx,QWORD PTR [rip+0x17998]        # 0x431b18
  41a180:	mov    r8,QWORD PTR [rip+0x17989]        # 0x431b10
  41a187:	mov    r9,QWORD PTR [rip+0x1797a]        # 0x431b08
  41a18e:	mov    QWORD PTR [rip+0x29e73],r11        # 0x444008
  41a195:	mov    QWORD PTR [rip+0x29e74],r10        # 0x444010
  41a19c:	lea    r11,[rip+0x1fc8a]        # 0x439e2d
  41a1a3:	lea    r10,[rip+0x1fc90]        # 0x439e3a
  41a1aa:	mov    QWORD PTR [rip+0x29e0f],rax        # 0x443fc0
  41a1b1:	mov    QWORD PTR [rip+0x29e18],rdx        # 0x443fd0
  41a1b8:	mov    QWORD PTR [rip+0x29e21],r8        # 0x443fe0
  41a1bf:	mov    QWORD PTR [rip+0x29e2a],r9        # 0x443ff0
  41a1c6:	mov    QWORD PTR [rip+0x29e4b],r11        # 0x444018
  41a1cd:	mov    QWORD PTR [rip+0x29e4c],r10        # 0x444020
  41a1d4:	je     0x41a210
  41a1d6:	cmp    ecx,0x3
  41a1d9:	je     0x41a1f4
  41a1db:	cmp    ecx,0x1
  41a1de:	je     0x41a1f4
  41a1e0:	lea    rax,[rip+0x1fba6]        # 0x439d8d
  41a1e7:	mov    QWORD PTR [rip+0x29e3a],rax        # 0x444028
  41a1ee:	mov    eax,0x16
  41a1f3:	ret    
  41a1f4:	lea    rax,[rip+0x1fb90]        # 0x439d8b
  41a1fb:	mov    QWORD PTR [rip+0x29e26],rax        # 0x444028
  41a202:	mov    eax,0x16
  41a207:	ret    
  41a208:	nop    DWORD PTR [rax+rax*1+0x0]
  41a210:	lea    rcx,[rip+0x1fbbd]        # 0x439dd4
  41a217:	mov    QWORD PTR [rip+0x29e0a],rcx        # 0x444028
  41a21e:	mov    BYTE PTR [r9],0x20
  41a222:	mov    BYTE PTR [r8],0x20
  41a226:	mov    BYTE PTR [rdx],0x20
  41a229:	mov    BYTE PTR [rax],0x20
  41a22c:	lea    rax,[rip+0x1e729]        # 0x43895c
  41a233:	mov    QWORD PTR [rip+0x29dc6],rax        # 0x444000
  41a23a:	mov    eax,0x8
  41a23f:	ret    
  41a240:	lea    rax,[rip+0x1fbbc]        # 0x439e03
  41a247:	and    ecx,0x12
  41a24a:	mov    QWORD PTR [rip+0x29d6f],rax        # 0x443fc0
  41a251:	lea    rax,[rip+0x1fba7]        # 0x439dff
  41a258:	cmp    ecx,0x2
  41a25b:	mov    QWORD PTR [rip+0x29d66],rax        # 0x443fc8
  41a262:	lea    rax,[rip+0x1fb8e]        # 0x439df7
  41a269:	mov    QWORD PTR [rip+0x29d60],rax        # 0x443fd0
  41a270:	lea    rax,[rip+0x1fb70]        # 0x439de7
  41a277:	mov    QWORD PTR [rip+0x29d62],rax        # 0x443fe0
  41a27e:	lea    rax,[rip+0x1fb66]        # 0x439deb
  41a285:	mov    QWORD PTR [rip+0x29d5c],rax        # 0x443fe8
  41a28c:	lea    rax,[rip+0x1fb74]        # 0x439e07
  41a293:	mov    QWORD PTR [rip+0x29d96],rax        # 0x444030
  41a29a:	lea    rax,[rip+0x1fb42]        # 0x439de3
  41a2a1:	mov    QWORD PTR [rip+0x29d30],rax        # 0x443fd8
  41a2a8:	lea    rax,[rip+0x1fb28]        # 0x439dd7
  41a2af:	mov    QWORD PTR [rip+0x29d3a],rax        # 0x443ff0
  41a2b6:	lea    rax,[rip+0x1fb32]        # 0x439def
  41a2bd:	mov    QWORD PTR [rip+0x29d34],rax        # 0x443ff8
  41a2c4:	lea    rax,[rip+0x1fb30]        # 0x439dfb
  41a2cb:	mov    QWORD PTR [rip+0x29d2e],rax        # 0x444000
  41a2d2:	lea    rax,[rip+0x1fb1a]        # 0x439df3
  41a2d9:	mov    QWORD PTR [rip+0x29d28],rax        # 0x444008
  41a2e0:	lea    rax,[rip+0x1faf4]        # 0x439ddb
  41a2e7:	mov    QWORD PTR [rip+0x29d22],rax        # 0x444010
  41a2ee:	lea    rax,[rip+0x1fb3f]        # 0x439e34
  41a2f5:	mov    QWORD PTR [rip+0x29d1c],rax        # 0x444018
  41a2fc:	lea    rax,[rip+0x1fb3b]        # 0x439e3e
  41a303:	mov    QWORD PTR [rip+0x29d16],rax        # 0x444020
  41a30a:	je     0x41a385
  41a30c:	jbe    0x41a360
  41a30e:	cmp    ecx,0x10
  41a311:	je     0x41a340
  41a313:	cmp    ecx,0x12
  41a316:	jne    0x41a382
  41a318:	mov    rax,QWORD PTR [rip+0x17a69]        # 0x431d88
  41a31f:	mov    QWORD PTR [rdx],rax
  41a322:	mov    rax,QWORD PTR [rip+0x17a67]        # 0x431d90
  41a329:	mov    QWORD PTR [rip+0x29cf8],rax        # 0x444028
  41a330:	mov    eax,0x13
  41a335:	ret    
  41a336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a340:	mov    rax,QWORD PTR [rip+0x17a39]        # 0x431d80
  41a347:	mov    QWORD PTR [rdx],rax
  41a34a:	mov    rax,QWORD PTR [rip+0x17a3f]        # 0x431d90
  41a351:	mov    QWORD PTR [rip+0x29cd0],rax        # 0x444028
  41a358:	mov    eax,0x13
  41a35d:	ret    
  41a35e:	xchg   ax,ax
  41a360:	test   ecx,ecx
  41a362:	jne    0x41a382
  41a364:	mov    rax,QWORD PTR [rip+0x17ac5]        # 0x431e30
  41a36b:	mov    QWORD PTR [rdx],rax
  41a36e:	lea    rax,[rip+0x1fa51]        # 0x439dc6
  41a375:	mov    QWORD PTR [rip+0x29cac],rax        # 0x444028
  41a37c:	mov    eax,0x18
  41a381:	ret    
  41a382:	xor    eax,eax
  41a384:	ret    
  41a385:	mov    rax,QWORD PTR [rip+0x17aac]        # 0x431e38
  41a38c:	mov    QWORD PTR [rdx],rax
  41a38f:	lea    rax,[rip+0x1fa30]        # 0x439dc6
  41a396:	mov    QWORD PTR [rip+0x29c8b],rax        # 0x444028
  41a39d:	mov    eax,0x18
  41a3a2:	ret    
  41a3a3:	nop    DWORD PTR [rax]
  41a3a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a3b0:	push   rsi
  41a3b1:	push   rbx
  41a3b2:	sub    rsp,0x38
  41a3b6:	cmp    rcx,0xffffffffffffffff
  41a3ba:	mov    r9,rdx
  41a3bd:	je     0x41a3f3
  41a3bf:	movabs r10,0x7fffffffffffffff
  41a3c9:	movsxd r8,r8d
  41a3cc:	mov    rax,r10
  41a3cf:	cqo    
  41a3d1:	idiv   r8
  41a3d4:	cmp    rax,r9
  41a3d7:	jl     0x41a420
  41a3d9:	imul   r8,r9
  41a3dd:	sub    r10,r8
  41a3e0:	cmp    rcx,r10
  41a3e3:	jg     0x41a420
  41a3e5:	lea    rsi,[rcx+r8*1]
  41a3e9:	mov    rax,rsi
  41a3ec:	add    rsp,0x38
  41a3f0:	pop    rbx
  41a3f1:	pop    rsi
  41a3f2:	ret    
  41a3f3:	mov    QWORD PTR [rsp+0x28],rcx
  41a3f8:	mov    rbx,QWORD PTR [rip+0x2e431]        # 0x448830
  41a3ff:	call   rbx
  41a401:	mov    eax,DWORD PTR [rax]
  41a403:	mov    rcx,QWORD PTR [rsp+0x28]
  41a408:	test   eax,eax
  41a40a:	mov    rsi,rcx
  41a40d:	jne    0x41a3e9
  41a40f:	call   rbx
  41a411:	mov    DWORD PTR [rax],0x16
  41a417:	jmp    0x41a3e9
  41a419:	nop    DWORD PTR [rax+0x0]
  41a420:	call   QWORD PTR [rip+0x2e40a]        # 0x448830
  41a426:	mov    rsi,0xffffffffffffffff
  41a42d:	mov    DWORD PTR [rax],0x22
  41a433:	jmp    0x41a3e9
  41a435:	nop
  41a436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a440:	push   r15
  41a442:	push   r14
  41a444:	push   r13
  41a446:	push   r12
  41a448:	push   rbp
  41a449:	push   rdi
  41a44a:	push   rsi
  41a44b:	push   rbx
  41a44c:	sub    rsp,0x48
  41a450:	mov    rax,QWORD PTR [rdx]
  41a453:	cmp    rcx,0xffffffffffffffff
  41a457:	mov    QWORD PTR [rsp+0x38],rax
  41a45c:	je     0x41a4e9
  41a462:	mov    r13d,r9d
  41a465:	mov    r12,r8
  41a468:	mov    rbp,rdx
  41a46b:	mov    QWORD PTR [rsp+0x28],rcx
  41a470:	mov    r15,QWORD PTR [rip+0x2e3b9]        # 0x448830
  41a477:	call   r15
  41a47a:	mov    rcx,QWORD PTR [rsp+0x38]
  41a47f:	lea    rdx,[rsp+0x38]
  41a484:	mov    r8d,0xa
  41a48a:	mov    DWORD PTR [rax],0x0
  41a490:	call   0x42ddf8
  41a495:	mov    r14d,eax
  41a498:	call   r15
  41a49b:	mov    eax,DWORD PTR [rax]
  41a49d:	test   eax,eax
  41a49f:	jne    0x41a4e9
  41a4a1:	mov    rdi,QWORD PTR [rsp+0x38]
  41a4a6:	mov    rsi,QWORD PTR [rip+0x2e4db]        # 0x448988
  41a4ad:	jmp    0x41a4b5
  41a4af:	nop
  41a4b0:	mov    QWORD PTR [rsp+0x38],rdi
  41a4b5:	movzx  ecx,BYTE PTR [rdi]
  41a4b8:	mov    rbx,rdi
  41a4bb:	add    rdi,0x1
  41a4bf:	call   rsi
  41a4c1:	test   eax,eax
  41a4c3:	jne    0x41a4b0
  41a4c5:	cmp    r12,rbx
  41a4c8:	jne    0x41a4e0
  41a4ca:	mov    rcx,QWORD PTR [rsp+0x28]
  41a4cf:	mov    QWORD PTR [rbp+0x0],r12
  41a4d3:	mov    r8d,r13d
  41a4d6:	mov    rdx,r14
  41a4d9:	call   0x41a3b0
  41a4de:	jmp    0x41a4f0
  41a4e0:	call   r15
  41a4e3:	mov    DWORD PTR [rax],0x16
  41a4e9:	mov    rax,0xffffffffffffffff
  41a4f0:	add    rsp,0x48
  41a4f4:	pop    rbx
  41a4f5:	pop    rsi
  41a4f6:	pop    rdi
  41a4f7:	pop    rbp
  41a4f8:	pop    r12
  41a4fa:	pop    r13
  41a4fc:	pop    r14
  41a4fe:	pop    r15
  41a500:	ret    
  41a501:	nop    DWORD PTR [rax+rax*1+0x0]
  41a506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a510:	push   rbp
  41a511:	push   rdi
  41a512:	push   rsi
  41a513:	push   rbx
  41a514:	sub    rsp,0x38
  41a518:	mov    edx,0x3a
  41a51d:	mov    rbx,rcx
  41a520:	call   0x42de58
  41a525:	test   rax,rax
  41a528:	je     0x41a5c0
  41a52e:	lea    rsi,[rsp+0x20]
  41a533:	mov    r8,rax
  41a536:	xor    ecx,ecx
  41a538:	mov    r9d,0xe10
  41a53e:	mov    QWORD PTR [rsp+0x20],rbx
  41a543:	mov    rdx,rsi
  41a546:	call   0x41a440
  41a54b:	mov    rbx,rax
  41a54e:	mov    rax,QWORD PTR [rsp+0x20]
  41a553:	mov    edx,0x3a
  41a558:	lea    rcx,[rax+0x1]
  41a55c:	mov    QWORD PTR [rsp+0x20],rcx
  41a561:	call   0x42de58
  41a566:	test   rax,rax
  41a569:	mov    r8,rax
  41a56c:	je     0x41a6af
  41a572:	mov    r9d,0x3c
  41a578:	mov    rdx,rsi
  41a57b:	mov    rcx,rbx
  41a57e:	call   0x41a440
  41a583:	mov    rdi,rax
  41a586:	mov    rax,QWORD PTR [rsp+0x20]
  41a58b:	lea    rbx,[rax+0x1]
  41a58f:	mov    rcx,rbx
  41a592:	mov    QWORD PTR [rsp+0x20],rbx
  41a597:	call   0x42de30
  41a59c:	lea    r8,[rbx+rax*1]
  41a5a0:	mov    r9d,0x1
  41a5a6:	mov    rdx,rsi
  41a5a9:	mov    rcx,rdi
  41a5ac:	call   0x41a440
  41a5b1:	mov    rbp,rax
  41a5b4:	mov    rax,rbp
  41a5b7:	add    rsp,0x38
  41a5bb:	pop    rbx
  41a5bc:	pop    rsi
  41a5bd:	pop    rdi
  41a5be:	pop    rbp
  41a5bf:	ret    
  41a5c0:	lea    rdx,[rip+0x1e39c]        # 0x438963
  41a5c7:	mov    rcx,rbx
  41a5ca:	call   0x42de18
  41a5cf:	test   rax,rax
  41a5d2:	je     0x41a6d0
  41a5d8:	mov    edx,0x48
  41a5dd:	mov    rcx,rbx
  41a5e0:	mov    QWORD PTR [rsp+0x28],rbx
  41a5e5:	xor    ebp,ebp
  41a5e7:	call   0x42de58
  41a5ec:	test   rax,rax
  41a5ef:	je     0x41a617
  41a5f1:	lea    rdx,[rsp+0x28]
  41a5f6:	mov    r9d,0xe10
  41a5fc:	mov    r8,rax
  41a5ff:	xor    ecx,ecx
  41a601:	call   0x41a440
  41a606:	mov    rbp,rax
  41a609:	mov    rax,QWORD PTR [rsp+0x28]
  41a60e:	lea    rbx,[rax+0x1]
  41a612:	mov    QWORD PTR [rsp+0x28],rbx
  41a617:	mov    edx,0x4d
  41a61c:	mov    rcx,rbx
  41a61f:	call   0x42de58
  41a624:	test   rax,rax
  41a627:	je     0x41a650
  41a629:	lea    rdx,[rsp+0x28]
  41a62e:	mov    rcx,rbp
  41a631:	mov    r9d,0x3c
  41a637:	mov    r8,rax
  41a63a:	call   0x41a440
  41a63f:	mov    rbp,rax
  41a642:	mov    rax,QWORD PTR [rsp+0x28]
  41a647:	lea    rbx,[rax+0x1]
  41a64b:	mov    QWORD PTR [rsp+0x28],rbx
  41a650:	mov    edx,0x53
  41a655:	mov    rcx,rbx
  41a658:	call   0x42de58
  41a65d:	test   rax,rax
  41a660:	je     0x41a689
  41a662:	lea    rdx,[rsp+0x28]
  41a667:	mov    rcx,rbp
  41a66a:	mov    r9d,0x1
  41a670:	mov    r8,rax
  41a673:	call   0x41a440
  41a678:	mov    rbp,rax
  41a67b:	mov    rax,QWORD PTR [rsp+0x28]
  41a680:	lea    rbx,[rax+0x1]
  41a684:	mov    QWORD PTR [rsp+0x28],rbx
  41a689:	mov    rdi,QWORD PTR [rip+0x2e2f8]        # 0x448988
  41a690:	jmp    0x41a697
  41a692:	mov    QWORD PTR [rsp+0x28],rbx
  41a697:	movzx  ecx,BYTE PTR [rbx]
  41a69a:	add    rbx,0x1
  41a69e:	mov    esi,ecx
  41a6a0:	call   rdi
  41a6a2:	test   eax,eax
  41a6a4:	jne    0x41a692
  41a6a6:	test   sil,sil
  41a6a9:	je     0x41a5b4
  41a6af:	call   QWORD PTR [rip+0x2e17b]        # 0x448830
  41a6b5:	mov    rbp,0xffffffffffffffff
  41a6bc:	mov    DWORD PTR [rax],0x16
  41a6c2:	jmp    0x41a5b4
  41a6c7:	nop    WORD PTR [rax+rax*1+0x0]
  41a6d0:	mov    rcx,rbx
  41a6d3:	call   0x42de30
  41a6d8:	cmp    rax,0x6
  41a6dc:	jne    0x41a6af
  41a6de:	movzx  eax,WORD PTR [rbx]
  41a6e1:	lea    rbp,[rsp+0x22]
  41a6e6:	lea    rdi,[rsp+0x28]
  41a6eb:	lea    rsi,[rsp+0x20]
  41a6f0:	mov    r9d,0xe10
  41a6f6:	xor    ecx,ecx
  41a6f8:	mov    r8,rbp
  41a6fb:	mov    rdx,rdi
  41a6fe:	mov    BYTE PTR [rsp+0x22],0x0
  41a703:	mov    QWORD PTR [rsp+0x28],rsi
  41a708:	mov    WORD PTR [rsp+0x20],ax
  41a70d:	call   0x41a440
  41a712:	movzx  edx,WORD PTR [rbx+0x2]
  41a716:	mov    r8,rbp
  41a719:	mov    r9d,0x3c
  41a71f:	mov    rcx,rax
  41a722:	mov    BYTE PTR [rsp+0x22],0x0
  41a727:	mov    QWORD PTR [rsp+0x28],rsi
  41a72c:	mov    WORD PTR [rsp+0x20],dx
  41a731:	mov    rdx,rdi
  41a734:	call   0x41a440
  41a739:	movzx  edx,WORD PTR [rbx+0x4]
  41a73d:	mov    r8,rbp
  41a740:	mov    r9d,0x1
  41a746:	mov    rcx,rax
  41a749:	mov    BYTE PTR [rsp+0x22],0x0
  41a74e:	mov    QWORD PTR [rsp+0x28],rsi
  41a753:	mov    WORD PTR [rsp+0x20],dx
  41a758:	mov    rdx,rdi
  41a75b:	call   0x41a440
  41a760:	mov    rbp,rax
  41a763:	jmp    0x41a5b4
  41a768:	nop    DWORD PTR [rax+rax*1+0x0]
  41a770:	push   r13
  41a772:	push   r12
  41a774:	push   rbp
  41a775:	push   rdi
  41a776:	push   rsi
  41a777:	push   rbx
  41a778:	sub    rsp,0x38
  41a77c:	mov    r12,QWORD PTR [rip+0x1759d]        # 0x431d20
  41a783:	mov    r13,QWORD PTR [rcx+0x28]
  41a787:	lea    rsi,[rip+0x20fc1]        # 0x43b74f
  41a78e:	cmp    WORD PTR [rdx+0x8],0x8000
  41a794:	mov    rdi,rdx
  41a797:	mov    rbx,rcx
  41a79a:	cmovne rsi,QWORD PTR [rip+0x17446]        # 0x431be8
  41a7a2:	mov    rbp,QWORD PTR [rip+0x2e037]        # 0x4487e0
  41a7a9:	call   rbp
  41a7ab:	lea    rcx,[rax+0x60]
  41a7af:	mov    rdx,r12
  41a7b2:	mov    r8,r13
  41a7b5:	call   0x4193f0
  41a7ba:	movzx  r12d,WORD PTR [rdi+0xc]
  41a7bf:	cmp    r12w,0x1
  41a7c4:	jbe    0x41a810
  41a7c6:	mov    r13,QWORD PTR [rdi+0x50]
  41a7ca:	mov    rdi,QWORD PTR [rip+0x173e7]        # 0x431bb8
  41a7d1:	call   rbp
  41a7d3:	lea    rcx,[rax+0x60]
  41a7d7:	mov    QWORD PTR [rsp+0x20],rsi
  41a7dc:	movzx  r8d,r12w
  41a7e0:	mov    r9,r13
  41a7e3:	mov    rdx,rdi
  41a7e6:	call   0x4193f0
  41a7eb:	mov    edx,0x1
  41a7f0:	mov    rcx,rbx
  41a7f3:	call   QWORD PTR [rbx+0x98]
  41a7f9:	add    rsp,0x38
  41a7fd:	pop    rbx
  41a7fe:	pop    rsi
  41a7ff:	pop    rdi
  41a800:	pop    rbp
  41a801:	pop    r12
  41a803:	pop    r13
  41a805:	ret    
  41a806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a810:	mov    r12,QWORD PTR [rdi+0x50]
  41a814:	mov    rdi,QWORD PTR [rip+0x17495]        # 0x431cb0
  41a81b:	call   rbp
  41a81d:	lea    rcx,[rax+0x60]
  41a821:	mov    r9,rsi
  41a824:	mov    r8,r12
  41a827:	mov    rdx,rdi
  41a82a:	call   0x4193f0
  41a82f:	jmp    0x41a7eb
  41a831:	nop    DWORD PTR [rax+rax*1+0x0]
  41a836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a840:	push   rbp
  41a841:	push   rdi
  41a842:	push   rsi
  41a843:	push   rbx
  41a844:	sub    rsp,0x48
  41a848:	mov    rbx,QWORD PTR [rdx]
  41a84b:	mov    rsi,rcx
  41a84e:	mov    r8d,DWORD PTR [rbx+0x10]
  41a852:	mov    rdi,QWORD PTR [rbx+0x38]
  41a856:	test   r8b,0x40
  41a85a:	jne    0x41a960
  41a860:	mov    rcx,QWORD PTR [rdx+0x8]
  41a864:	mov    QWORD PTR [rbx+0x18],rcx
  41a868:	test   BYTE PTR [rsi+0x12],0x8
  41a86c:	je     0x41a880
  41a86e:	test   r8d,0x100
  41a875:	mov    ebp,0x1
  41a87a:	jne    0x41a920
  41a880:	movzx  eax,WORD PTR [rbx+0x8]
  41a884:	cmp    ax,0x8000
  41a888:	je     0x41a980
  41a88e:	lea    r10,[rax+rax*2]
  41a892:	mov    r9,QWORD PTR [rsi+0x78]
  41a896:	and    r8d,0x4
  41a89a:	lea    rax,[rax+r10*4]
  41a89e:	lea    r10,[r9+rax*8]
  41a8a2:	jne    0x41a930
  41a8a8:	mov    eax,0xffff8000
  41a8ad:	mov    WORD PTR [r10+0x4],ax
  41a8b2:	movzx  eax,WORD PTR [rbx]
  41a8b5:	cmp    ax,0x8000
  41a8b9:	je     0x41a93a
  41a8bb:	movzx  r8d,WORD PTR [rbx+0x2]
  41a8c0:	mov    WORD PTR [r10+0x4],ax
  41a8c5:	mov    eax,DWORD PTR [rdx+0x10]
  41a8c8:	or     eax,0x10
  41a8cb:	mov    WORD PTR [r10+0x6],r8w
  41a8d0:	mov    DWORD PTR [rdx+0x10],eax
  41a8d3:	mov    r8d,DWORD PTR [r10+0x10]
  41a8d7:	mov    QWORD PTR [r10+0x18],rcx
  41a8db:	and    eax,0xf00000ff
  41a8e0:	and    r8d,0xfffff00
  41a8e7:	or     r8d,eax
  41a8ea:	mov    DWORD PTR [r10+0x10],r8d
  41a8ee:	and    r8d,0x4
  41a8f2:	je     0x41a940
  41a8f4:	movzx  eax,WORD PTR [r10+0xe]
  41a8f9:	add    eax,0x1
  41a8fc:	cmp    ax,WORD PTR [r10+0xc]
  41a901:	mov    WORD PTR [r10+0xe],ax
  41a906:	jbe    0x41a940
  41a908:	test   BYTE PTR [rsi+0x10],0x4
  41a90c:	mov    ebp,0xffffffff
  41a911:	je     0x41a920
  41a913:	mov    rdx,r10
  41a916:	mov    rcx,rsi
  41a919:	call   0x41a770
  41a91e:	xchg   ax,ax
  41a920:	mov    eax,ebp
  41a922:	add    rsp,0x48
  41a926:	pop    rbx
  41a927:	pop    rsi
  41a928:	pop    rdi
  41a929:	pop    rbp
  41a92a:	ret    
  41a92b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a930:	movzx  eax,WORD PTR [r10+0x4]
  41a935:	cmp    ax,WORD PTR [rbx]
  41a938:	jne    0x41a9a0
  41a93a:	mov    eax,DWORD PTR [rdx+0x10]
  41a93d:	jmp    0x41a8d3
  41a93f:	nop
  41a940:	xor    ebp,ebp
  41a942:	test   rdi,rdi
  41a945:	je     0x41a920
  41a947:	mov    rdx,r10
  41a94a:	mov    rcx,rsi
  41a94d:	call   rdi
  41a94f:	mov    eax,ebp
  41a951:	add    rsp,0x48
  41a955:	pop    rbx
  41a956:	pop    rsi
  41a957:	pop    rdi
  41a958:	pop    rbp
  41a959:	ret    
  41a95a:	nop    WORD PTR [rax+rax*1+0x0]
  41a960:	mov    rcx,QWORD PTR [rbx+0x18]
  41a964:	mov    QWORD PTR [rsp+0x38],rdx
  41a969:	call   0x42df08
  41a96e:	mov    r8d,DWORD PTR [rbx+0x10]
  41a972:	mov    rdx,QWORD PTR [rsp+0x38]
  41a977:	jmp    0x41a860
  41a97c:	nop    DWORD PTR [rax+0x0]
  41a980:	movzx  eax,WORD PTR [rbx+0x2]
  41a984:	mov    r10,rbx
  41a987:	mov    WORD PTR [rbx+0x6],ax
  41a98b:	movzx  eax,WORD PTR [rbx]
  41a98e:	mov    WORD PTR [rbx+0x4],ax
  41a992:	mov    eax,DWORD PTR [rdx+0x10]
  41a995:	jmp    0x41a8db
  41a99a:	nop    WORD PTR [rax+rax*1+0x0]
  41a9a0:	lea    rdx,[rax+rax*2]
  41a9a4:	mov    rdi,QWORD PTR [rbx+0x50]
  41a9a8:	mov    rsi,QWORD PTR [r10+0x50]
  41a9ac:	mov    rbx,QWORD PTR [rip+0x17275]        # 0x431c28
  41a9b3:	lea    rax,[rax+rdx*4]
  41a9b7:	mov    rbp,QWORD PTR [r9+rax*8+0x50]
  41a9bc:	call   QWORD PTR [rip+0x2de1e]        # 0x4487e0
  41a9c2:	lea    rcx,[rax+0x60]
  41a9c6:	mov    r9,rdi
  41a9c9:	mov    r8,rsi
  41a9cc:	mov    QWORD PTR [rsp+0x20],rbp
  41a9d1:	mov    rdx,rbx
  41a9d4:	mov    ebp,0xffffffff
  41a9d9:	call   0x4193f0
  41a9de:	jmp    0x41a920
  41a9e3:	nop    DWORD PTR [rax]
  41a9e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a9f0:	push   r13
  41a9f2:	push   r12
  41a9f4:	push   rbp
  41a9f5:	push   rdi
  41a9f6:	push   rsi
  41a9f7:	push   rbx
  41a9f8:	sub    rsp,0x38
  41a9fc:	mov    rsi,rcx
  41a9ff:	mov    rcx,QWORD PTR [rcx+0x78]
  41aa03:	mov    eax,DWORD PTR [rsi+0xb0]
  41aa09:	mov    rbx,rcx
  41aa0c:	movzx  r10d,WORD PTR [rbx+0x2]
  41aa11:	cmp    r10d,edx
  41aa14:	je     0x41aa60
  41aa16:	sub    eax,0x1
  41aa19:	add    rbx,0x68
  41aa1d:	test   eax,eax
  41aa1f:	jg     0x41aa0c
  41aa21:	movzx  eax,dl
  41aa24:	cmp    eax,0x7f
  41aa27:	ja     0x41aa40
  41aa29:	lea    r10,[rip+0x21f10]        # 0x43c940
  41aa30:	test   DWORD PTR [r10+rax*4],0x30000
  41aa38:	jne    0x41aaf9
  41aa3e:	xchg   ax,ax
  41aa40:	test   BYTE PTR [rsi+0x10],0x4
  41aa44:	jne    0x41ab2c
  41aa4a:	mov    eax,0xffffffff
  41aa4f:	add    rsp,0x38
  41aa53:	pop    rbx
  41aa54:	pop    rsi
  41aa55:	pop    rdi
  41aa56:	pop    rbp
  41aa57:	pop    r12
  41aa59:	pop    r13
  41aa5b:	ret    
  41aa5c:	nop    DWORD PTR [rax+0x0]
  41aa60:	mov    eax,DWORD PTR [rbx+0x10]
  41aa63:	test   eax,0x280000
  41aa68:	je     0x41aae0
  41aa6a:	cmp    eax,0x80100
  41aa6f:	jne    0x41aa40
  41aa71:	mov    r13,QWORD PTR [rbx+0x50]
  41aa75:	test   r13,r13
  41aa78:	je     0x41aa40
  41aa7a:	test   BYTE PTR [rsi+0x10],0x4
  41aa7e:	je     0x41aa4a
  41aa80:	mov    r12,QWORD PTR [rsi+0x20]
  41aa84:	mov    rbp,QWORD PTR [rip+0x17155]        # 0x431be0
  41aa8b:	mov    rdi,QWORD PTR [rip+0x2dd4e]        # 0x4487e0
  41aa92:	call   rdi
  41aa94:	lea    rcx,[rax+0x60]
  41aa98:	mov    r9,r13
  41aa9b:	mov    r8,r12
  41aa9e:	mov    rdx,rbp
  41aaa1:	call   0x4193f0
  41aaa6:	mov    rbx,QWORD PTR [rbx+0x40]
  41aaaa:	test   rbx,rbx
  41aaad:	je     0x41aac4
  41aaaf:	call   rdi
  41aab1:	lea    rdx,[rip+0x1f4e1]        # 0x439f99
  41aab8:	lea    rcx,[rax+0x60]
  41aabc:	mov    r8,rbx
  41aabf:	call   0x4193f0
  41aac4:	call   rdi
  41aac6:	lea    rdx,[rax+0x60]
  41aaca:	mov    ecx,0xa
  41aacf:	call   0x42df20
  41aad4:	jmp    0x41ab57
  41aad9:	nop    DWORD PTR [rax+0x0]
  41aae0:	xor    eax,eax
  41aae2:	mov    QWORD PTR [r8],rbx
  41aae5:	mov    DWORD PTR [r9],0x1
  41aaec:	add    rsp,0x38
  41aaf0:	pop    rbx
  41aaf1:	pop    rsi
  41aaf2:	pop    rdi
  41aaf3:	pop    rbp
  41aaf4:	pop    r12
  41aaf6:	pop    r13
  41aaf8:	ret    
  41aaf9:	movzx  eax,WORD PTR [rsi+0xac]
  41ab00:	cmp    ax,0x8000
  41ab04:	je     0x41aa40
  41ab0a:	lea    rdx,[rax+rax*2]
  41ab0e:	lea    rax,[rax+rdx*4]
  41ab12:	lea    rax,[rcx+rax*8]
  41ab16:	mov    QWORD PTR [r8],rax
  41ab19:	xor    eax,eax
  41ab1b:	sub    QWORD PTR [rsi+0x18],0x1
  41ab20:	mov    DWORD PTR [r9],0x1
  41ab27:	jmp    0x41aa4f
  41ab2c:	mov    DWORD PTR [rsp+0x2c],edx
  41ab30:	mov    rdi,QWORD PTR [rsi+0x20]
  41ab34:	mov    rbx,QWORD PTR [rip+0x170b5]        # 0x431bf0
  41ab3b:	call   QWORD PTR [rip+0x2dc9f]        # 0x4487e0
  41ab41:	mov    edx,DWORD PTR [rsp+0x2c]
  41ab45:	lea    rcx,[rax+0x60]
  41ab49:	mov    r8,rdi
  41ab4c:	mov    r9d,edx
  41ab4f:	mov    rdx,rbx
  41ab52:	call   0x4193f0
  41ab57:	mov    rcx,rsi
  41ab5a:	mov    edx,0x1
  41ab5f:	call   QWORD PTR [rsi+0x98]
  41ab65:	mov    ecx,0x1
  41ab6a:	call   0x42e008
  41ab6f:	nop
  41ab70:	push   rdi
  41ab71:	push   rsi
  41ab72:	push   rbx
  41ab73:	sub    rsp,0x20
  41ab77:	test   rcx,rcx
  41ab7a:	je     0x41ab81
  41ab7c:	cmp    BYTE PTR [rcx],0x0
  41ab7f:	jne    0x41abb0
  41ab81:	call   QWORD PTR [rip+0x2dc59]        # 0x4487e0
  41ab87:	lea    rcx,[rip+0x1f2c7]        # 0x439e55
  41ab8e:	lea    r9,[rax+0x30]
  41ab92:	mov    r8d,0x2
  41ab98:	mov    edx,0x1
  41ab9d:	add    rsp,0x20
  41aba1:	pop    rbx
  41aba2:	pop    rsi
  41aba3:	pop    rdi
  41aba4:	jmp    0x42dee0
  41aba9:	nop    DWORD PTR [rax+0x0]
  41abb0:	call   0x419640
  41abb5:	cmp    BYTE PTR [rax],0x0
  41abb8:	mov    rbx,rax
  41abbb:	jne    0x41abc5
  41abbd:	add    rsp,0x20
  41abc1:	pop    rbx
  41abc2:	pop    rsi
  41abc3:	pop    rdi
  41abc4:	ret    
  41abc5:	mov    rdi,QWORD PTR [rip+0x2dc14]        # 0x4487e0
  41abcc:	jmp    0x41ac0a
  41abce:	xchg   ax,ax
  41abd0:	call   rdi
  41abd2:	mov    rdx,rsi
  41abd5:	lea    r9,[rax+0x30]
  41abd9:	mov    r8d,0x1
  41abdf:	sub    rdx,rbx
  41abe2:	mov    rcx,rbx
  41abe5:	call   0x42dee0
  41abea:	call   rdi
  41abec:	lea    rdx,[rax+0x30]
  41abf0:	mov    ecx,0x27
  41abf5:	call   0x42df20
  41abfa:	mov    rcx,rsi
  41abfd:	call   0x419640
  41ac02:	cmp    BYTE PTR [rax],0x0
  41ac05:	mov    rbx,rax
  41ac08:	je     0x41abbd
  41ac0a:	call   rdi
  41ac0c:	lea    rdx,[rax+0x30]
  41ac10:	mov    ecx,0x27
  41ac15:	call   0x42df20
  41ac1a:	mov    edx,0x27
  41ac1f:	mov    rcx,rbx
  41ac22:	call   0x42de58
  41ac27:	test   rax,rax
  41ac2a:	mov    rsi,rax
  41ac2d:	jne    0x41abd0
  41ac2f:	call   rdi
  41ac31:	lea    rdx,[rax+0x30]
  41ac35:	mov    rcx,rbx
  41ac38:	call   0x42df18
  41ac3d:	call   rdi
  41ac3f:	lea    rdx,[rax+0x30]
  41ac43:	mov    ecx,0x27
  41ac48:	add    rsp,0x20
  41ac4c:	pop    rbx
  41ac4d:	pop    rsi
  41ac4e:	pop    rdi
  41ac4f:	jmp    0x42df20
  41ac54:	xchg   ax,ax
  41ac56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ac60:	push   rsi
  41ac61:	push   rbx
  41ac62:	sub    rsp,0x28
  41ac66:	mov    eax,DWORD PTR [rcx]
  41ac68:	test   al,0x2
  41ac6a:	je     0x41ace1
  41ac6c:	mov    rbx,rcx
  41ac6f:	movzx  ecx,WORD PTR [rdx]
  41ac72:	mov    rsi,r8
  41ac75:	movzx  edx,cl
  41ac78:	cmp    dl,0x7f
  41ac7b:	ja     0x41acc0
  41ac7d:	lea    r9,[rip+0x21cbc]        # 0x43c940
  41ac84:	test   BYTE PTR [r9+rdx*4+0x1],0x40
  41ac8a:	je     0x41acc0
  41ac8c:	movzx  r8d,cx
  41ac90:	mov    rcx,QWORD PTR [rip+0x29271]        # 0x443f08
  41ac97:	lea    rdx,[rip+0x1dccc]        # 0x43896a
  41ac9e:	call   0x4193f0
  41aca3:	mov    eax,DWORD PTR [rbx]
  41aca5:	and    eax,0x1001
  41acaa:	cmp    eax,0x1001
  41acaf:	je     0x41ad13
  41acb1:	add    rsp,0x28
  41acb5:	pop    rbx
  41acb6:	pop    rsi
  41acb7:	ret    
  41acb8:	nop    DWORD PTR [rax+rax*1+0x0]
  41acc0:	and    eax,0x1001
  41acc5:	cmp    eax,0x1001
  41acca:	je     0x41ad00
  41accc:	mov    rdx,QWORD PTR [rip+0x29235]        # 0x443f08
  41acd3:	mov    rcx,QWORD PTR [rsi]
  41acd6:	add    rsp,0x28
  41acda:	pop    rbx
  41acdb:	pop    rsi
  41acdc:	jmp    0x42df18
  41ace1:	mov    rdx,QWORD PTR [rip+0x29220]        # 0x443f08
  41ace8:	mov    rcx,QWORD PTR [r9]
  41aceb:	add    rsp,0x28
  41acef:	pop    rbx
  41acf0:	pop    rsi
  41acf1:	jmp    0x42df18
  41acf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad00:	mov    rdx,QWORD PTR [rip+0x29201]        # 0x443f08
  41ad07:	mov    ecx,0x20
  41ad0c:	call   0x42df20
  41ad11:	jmp    0x41accc
  41ad13:	mov    r9,QWORD PTR [rip+0x291ee]        # 0x443f08
  41ad1a:	lea    rcx,[rip+0x1dc46]        # 0x438967
  41ad21:	mov    r8d,0x2
  41ad27:	mov    edx,0x1
  41ad2c:	add    rsp,0x28
  41ad30:	pop    rbx
  41ad31:	pop    rsi
  41ad32:	jmp    0x42dee0
  41ad37:	nop    WORD PTR [rax+rax*1+0x0]
  41ad40:	push   rdi
  41ad41:	push   rsi
  41ad42:	push   rbx
  41ad43:	sub    rsp,0x20
  41ad47:	lea    rax,[rip+0x21b32]        # 0x43c880
  41ad4e:	mov    esi,ecx
  41ad50:	mov    ecx,0x100
  41ad55:	mov    ebx,DWORD PTR [rax+rsi*4]
  41ad58:	call   0x42dea8
  41ad5d:	test   rax,rax
  41ad60:	mov    r8,rax
  41ad63:	je     0x41adab
  41ad65:	mov    ecx,0x20
  41ad6a:	xor    eax,eax
  41ad6c:	mov    rdi,r8
  41ad6f:	rep stos QWORD PTR es:[rdi],rax
  41ad72:	lea    rcx,[rip+0x21bcb]        # 0x43c944
  41ad79:	xor    edx,edx
  41ad7b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ad80:	test   DWORD PTR [rcx+rdx*4],ebx
  41ad83:	je     0x41ad8b
  41ad85:	mov    BYTE PTR [r8+rdx*1+0x1],0x1
  41ad8b:	add    rdx,0x1
  41ad8f:	cmp    rdx,0x7f
  41ad93:	jne    0x41ad80
  41ad95:	lea    rax,[rip+0x292a4]        # 0x444040
  41ad9c:	mov    QWORD PTR [rax+rsi*8],r8
  41ada0:	mov    rax,r8
  41ada3:	add    rsp,0x20
  41ada7:	pop    rbx
  41ada8:	pop    rsi
  41ada9:	pop    rdi
  41adaa:	ret    
  41adab:	call   QWORD PTR [rip+0x2da2f]        # 0x4487e0
  41adb1:	lea    rcx,[rip+0x1dbc0]        # 0x438978
  41adb8:	lea    r9,[rax+0x60]
  41adbc:	mov    r8d,0x23
  41adc2:	mov    edx,0x1
  41adc7:	call   0x42dee0
  41adcc:	mov    ecx,0x1
  41add1:	call   0x42df60
  41add6:	nop
  41add7:	nop    WORD PTR [rax+rax*1+0x0]
  41ade0:	push   rdi
  41ade1:	push   rsi
  41ade2:	push   rbx
  41ade3:	sub    rsp,0x20
  41ade7:	mov    r8,QWORD PTR [rdx]
  41adea:	mov    eax,DWORD PTR [r8+0x10]
  41adee:	and    eax,0xfffff00
  41adf3:	or     eax,DWORD PTR [rdx+0x10]
  41adf6:	test   al,0x20
  41adf8:	mov    DWORD PTR [rdx+0x10],eax
  41adfb:	jne    0x41ae60
  41adfd:	test   ah,0xf0
  41ae00:	je     0x41ae60
  41ae02:	test   eax,0x10000
  41ae07:	mov    eax,DWORD PTR [rdx+0x14]
  41ae0a:	jne    0x41aeb4
  41ae10:	cmp    eax,0x1
  41ae13:	je     0x41ae92
  41ae15:	cmp    eax,0x2
  41ae18:	jne    0x41ae25
  41ae1a:	cmp    QWORD PTR [rdx+0x8],0x0
  41ae1f:	je     0x41af74
  41ae25:	mov    eax,DWORD PTR [rcx+0x14]
  41ae28:	cmp    eax,DWORD PTR [rcx+0x4]
  41ae2b:	jbe    0x41ae71
  41ae2d:	mov    rdi,QWORD PTR [r8+0x50]
  41ae31:	mov    rsi,QWORD PTR [rcx+0x20]
  41ae35:	mov    rbx,QWORD PTR [rip+0x16de4]        # 0x431c20
  41ae3c:	nop    DWORD PTR [rax+0x0]
  41ae40:	call   QWORD PTR [rip+0x2d99a]        # 0x4487e0
  41ae46:	lea    rcx,[rax+0x60]
  41ae4a:	mov    r9,rdi
  41ae4d:	mov    r8,rsi
  41ae50:	mov    rdx,rbx
  41ae53:	call   0x4193f0
  41ae58:	mov    eax,0xffffffff
  41ae5d:	jmp    0x41ae7b
  41ae5f:	nop
  41ae60:	cmp    DWORD PTR [rdx+0x14],0x1
  41ae64:	je     0x41ae83
  41ae66:	cmp    QWORD PTR [rdx+0x8],0x0
  41ae6b:	jne    0x41af60
  41ae71:	mov    QWORD PTR [rcx+0x18],0x0
  41ae79:	xor    eax,eax
  41ae7b:	add    rsp,0x20
  41ae7f:	pop    rbx
  41ae80:	pop    rsi
  41ae81:	pop    rdi
  41ae82:	ret    
  41ae83:	add    QWORD PTR [rcx+0x18],0x1
  41ae88:	xor    eax,eax
  41ae8a:	add    rsp,0x20
  41ae8e:	pop    rbx
  41ae8f:	pop    rsi
  41ae90:	pop    rdi
  41ae91:	ret    
  41ae92:	mov    rax,QWORD PTR [rcx+0x18]
  41ae96:	lea    r9,[rax+0x1]
  41ae9a:	mov    QWORD PTR [rcx+0x18],r9
  41ae9e:	cmp    BYTE PTR [rax+0x1],0x0
  41aea2:	je     0x41af40
  41aea8:	mov    eax,DWORD PTR [rcx+0x14]
  41aeab:	mov    QWORD PTR [rdx+0x8],r9
  41aeaf:	jmp    0x41ae28
  41aeb4:	cmp    eax,0x1
  41aeb7:	je     0x41aef0
  41aeb9:	cmp    eax,0x2
  41aebc:	jne    0x41af30
  41aebe:	cmp    QWORD PTR [rdx+0x8],0x0
  41aec3:	jne    0x41ae71
  41aec5:	test   BYTE PTR [rcx+0x10],0x3
  41aec9:	je     0x41ae71
  41aecb:	mov    r9d,DWORD PTR [rcx+0x14]
  41aecf:	mov    r8,QWORD PTR [rcx+0x8]
  41aed3:	mov    r8,QWORD PTR [r8+r9*8]
  41aed7:	mov    rax,r9
  41aeda:	test   r8,r8
  41aedd:	je     0x41ae71
  41aedf:	cmp    BYTE PTR [r8],0x2d
  41aee3:	jne    0x41af1c
  41aee5:	jmp    0x41ae71
  41aee7:	nop    WORD PTR [rax+rax*1+0x0]
  41aef0:	mov    rax,QWORD PTR [rcx+0x18]
  41aef4:	lea    r8,[rax+0x1]
  41aef8:	mov    QWORD PTR [rcx+0x18],r8
  41aefc:	cmp    BYTE PTR [rax+0x1],0x0
  41af00:	jne    0x41af22
  41af02:	mov    r9d,DWORD PTR [rcx+0x14]
  41af06:	mov    r8,QWORD PTR [rcx+0x8]
  41af0a:	mov    r8,QWORD PTR [r8+r9*8]
  41af0e:	mov    rax,r9
  41af11:	test   r8,r8
  41af14:	je     0x41af90
  41af16:	cmp    BYTE PTR [r8],0x2d
  41af1a:	je     0x41af90
  41af1c:	add    eax,0x1
  41af1f:	mov    DWORD PTR [rcx+0x14],eax
  41af22:	mov    QWORD PTR [rdx+0x8],r8
  41af26:	jmp    0x41ae71
  41af2b:	nop    DWORD PTR [rax+rax*1+0x0]
  41af30:	mov    rcx,QWORD PTR [rip+0x16c51]        # 0x431b88
  41af37:	call   0x419860
  41af3c:	nop    DWORD PTR [rax+0x0]
  41af40:	mov    r9d,DWORD PTR [rcx+0x14]
  41af44:	mov    r10,QWORD PTR [rcx+0x8]
  41af48:	lea    eax,[r9+0x1]
  41af4c:	mov    r9,QWORD PTR [r10+r9*8]
  41af50:	mov    DWORD PTR [rcx+0x14],eax
  41af53:	mov    QWORD PTR [rcx+0x18],r9
  41af57:	jmp    0x41aeab
  41af5c:	nop    DWORD PTR [rax+0x0]
  41af60:	mov    rdi,QWORD PTR [r8+0x50]
  41af64:	mov    rsi,QWORD PTR [rcx+0x20]
  41af68:	mov    rbx,QWORD PTR [rip+0x16cc9]        # 0x431c38
  41af6f:	jmp    0x41ae40
  41af74:	mov    r9d,DWORD PTR [rcx+0x14]
  41af78:	mov    r10,QWORD PTR [rcx+0x8]
  41af7c:	lea    eax,[r9+0x1]
  41af80:	mov    r9,QWORD PTR [r10+r9*8]
  41af84:	mov    DWORD PTR [rcx+0x14],eax
  41af87:	jmp    0x41aeab
  41af8c:	nop    DWORD PTR [rax+0x0]
  41af90:	mov    QWORD PTR [rdx+0x8],0x0
  41af98:	jmp    0x41ae71
  41af9d:	nop    DWORD PTR [rax]
  41afa0:	push   rdi
  41afa1:	push   rbx
  41afa2:	sub    rsp,0x28
  41afa6:	mov    rdi,rcx
  41afa9:	call   0x42dd98
  41afae:	test   rax,rax
  41afb1:	je     0x41afba
  41afb3:	add    rsp,0x28
  41afb7:	pop    rbx
  41afb8:	pop    rdi
  41afb9:	ret    
  41afba:	or     rcx,0xffffffffffffffff
  41afbe:	mov    rbx,QWORD PTR [rip+0x16b63]        # 0x431b28
  41afc5:	repnz scas al,BYTE PTR es:[rdi]
  41afc7:	mov    rax,rcx
  41afca:	not    rax
  41afcd:	lea    rdi,[rax-0x1]
  41afd1:	call   QWORD PTR [rip+0x2d809]        # 0x4487e0
  41afd7:	lea    rcx,[rax+0x60]
  41afdb:	mov    r8d,edi
  41afde:	mov    rdx,rbx
  41afe1:	call   0x4193f0
  41afe6:	mov    ecx,0x1
  41afeb:	call   0x419830
  41aff0:	nop
  41aff1:	nop    DWORD PTR [rax+rax*1+0x0]
  41aff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b000:	push   r12
  41b002:	push   rbp
  41b003:	push   rdi
  41b004:	push   rsi
  41b005:	push   rbx
  41b006:	sub    rsp,0x20
  41b00a:	mov    eax,DWORD PTR [rcx+0xb0]
  41b010:	mov    rbp,QWORD PTR [rcx+0x90]
  41b017:	mov    rbx,QWORD PTR [rcx+0x78]
  41b01b:	test   eax,eax
  41b01d:	jle    0x41b0b4
  41b023:	sub    eax,0x1
  41b026:	mov    rsi,rcx
  41b029:	add    rax,0x1
  41b02d:	lea    rdx,[rax+rax*2]
  41b031:	lea    rax,[rax+rdx*4]
  41b035:	lea    rdi,[rbx+rax*8]
  41b039:	jmp    0x41b062
  41b03b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b040:	cmp    eax,0x6
  41b043:	jne    0x41b059
  41b045:	mov    rax,rbx
  41b048:	sub    rax,QWORD PTR [rsi+0x78]
  41b04c:	mov    rdx,QWORD PTR [rbp+0x78]
  41b050:	mov    QWORD PTR [rdx+rax*1+0x20],0x0
  41b059:	add    rbx,0x68
  41b05d:	cmp    rbx,rdi
  41b060:	je     0x41b0b4
  41b062:	mov    edx,DWORD PTR [rbx+0x10]
  41b065:	mov    eax,edx
  41b067:	and    eax,0xf000
  41b06c:	shr    eax,0xc
  41b06f:	cmp    eax,0x1
  41b072:	jne    0x41b040
  41b074:	test   dh,0x4
  41b077:	je     0x41b08d
  41b079:	mov    rax,rbx
  41b07c:	sub    rax,QWORD PTR [rsi+0x78]
  41b080:	mov    rcx,QWORD PTR [rbp+0x78]
  41b084:	mov    QWORD PTR [rcx+rax*1+0x20],0x0
  41b08d:	and    edx,0x40
  41b090:	je     0x41b059
  41b092:	mov    r12,rbx
  41b095:	sub    r12,QWORD PTR [rsi+0x78]
  41b099:	mov    rcx,QWORD PTR [rbx+0x18]
  41b09d:	add    r12,QWORD PTR [rbp+0x78]
  41b0a1:	add    rbx,0x68
  41b0a5:	call   0x41afa0
  41b0aa:	cmp    rbx,rdi
  41b0ad:	mov    QWORD PTR [r12+0x18],rax
  41b0b2:	jne    0x41b062
  41b0b4:	add    rsp,0x20
  41b0b8:	pop    rbx
  41b0b9:	pop    rsi
  41b0ba:	pop    rdi
  41b0bb:	pop    rbp
  41b0bc:	pop    r12
  41b0be:	ret    
  41b0bf:	nop
  41b0c0:	push   r13
  41b0c2:	push   r12
  41b0c4:	push   rbp
  41b0c5:	push   rdi
  41b0c6:	push   rsi
  41b0c7:	push   rbx
  41b0c8:	sub    rsp,0x28
  41b0cc:	mov    r13,rcx
  41b0cf:	mov    rcx,rdx
  41b0d2:	mov    r12,r8
  41b0d5:	mov    ebp,r9d
  41b0d8:	call   0x42ded0
  41b0dd:	test   rax,rax
  41b0e0:	mov    QWORD PTR [r13+0x8],rax
  41b0e4:	je     0x41b1c0
  41b0ea:	mov    rdx,QWORD PTR [r13+0x0]
  41b0ee:	mov    ecx,DWORD PTR [rdx+0x10]
  41b0f1:	mov    rbx,QWORD PTR [rdx+0x60]
  41b0f5:	mov    DWORD PTR [r13+0x14],0x0
  41b0fd:	mov    r8d,ecx
  41b100:	or     r8d,0x42
  41b104:	test   rbx,rbx
  41b107:	mov    DWORD PTR [r13+0x10],r8d
  41b10b:	je     0x41b152
  41b10d:	mov    rsi,rax
  41b110:	add    rsi,0x1
  41b114:	add    rbx,0x1
  41b118:	movzx  r11d,BYTE PTR [rsi-0x1]
  41b11d:	movzx  r10d,BYTE PTR [rbx-0x1]
  41b122:	cmp    r11b,r10b
  41b125:	je     0x41b13c
  41b127:	lea    rdx,[rip+0x16592]        # 0x4316c0
  41b12e:	movzx  edi,r11b
  41b132:	movzx  edi,BYTE PTR [rdx+rdi*1]
  41b136:	cmp    BYTE PTR [rdx+r10*1],dil
  41b13a:	jne    0x41b152
  41b13c:	test   r11b,r11b
  41b13f:	jne    0x41b110
  41b141:	or     ecx,0x62
  41b144:	mov    QWORD PTR [r13+0x8],0x0
  41b14c:	mov    DWORD PTR [r13+0x10],ecx
  41b150:	jmp    0x41b182
  41b152:	cmp    ebp,0x1
  41b155:	je     0x41b1a0
  41b157:	cmp    ebp,0x2
  41b15a:	jne    0x41b164
  41b15c:	test   ecx,0x20020
  41b162:	jne    0x41b1d0
  41b164:	test   ch,0xf0
  41b167:	je     0x41b17a
  41b169:	cmp    BYTE PTR [rax],0x0
  41b16c:	jne    0x41b210
  41b172:	and    ecx,0x10000
  41b178:	je     0x41b1c0
  41b17a:	mov    QWORD PTR [r13+0x8],0x0
  41b182:	mov    rdx,r13
  41b185:	mov    rcx,r12
  41b188:	add    rsp,0x28
  41b18c:	pop    rbx
  41b18d:	pop    rsi
  41b18e:	pop    rdi
  41b18f:	pop    rbp
  41b190:	pop    r12
  41b192:	pop    r13
  41b194:	jmp    0x41a840
  41b199:	nop    DWORD PTR [rax+0x0]
  41b1a0:	mov    edx,ecx
  41b1a2:	and    edx,0x20020
  41b1a8:	cmp    edx,0x20000
  41b1ae:	je     0x41b164
  41b1b0:	mov    edx,ecx
  41b1b2:	and    edx,0x40020
  41b1b8:	cmp    edx,0x40020
  41b1be:	je     0x41b164
  41b1c0:	add    rsp,0x28
  41b1c4:	pop    rbx
  41b1c5:	pop    rsi
  41b1c6:	pop    rdi
  41b1c7:	pop    rbp
  41b1c8:	pop    r12
  41b1ca:	pop    r13
  41b1cc:	ret    
  41b1cd:	nop    DWORD PTR [rax]
  41b1d0:	mov    edx,ecx
  41b1d2:	and    edx,0x40020
  41b1d8:	cmp    edx,0x20
  41b1db:	je     0x41b164
  41b1dd:	mov    edx,ecx
  41b1df:	and    edx,0x400020
  41b1e5:	cmp    edx,0x400000
  41b1eb:	je     0x41b164
  41b1f1:	mov    edx,ecx
  41b1f3:	and    edx,0x800020
  41b1f9:	cmp    edx,0x800020
  41b1ff:	jne    0x41b1c0
  41b201:	jmp    0x41b164
  41b206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b210:	mov    rcx,rax
  41b213:	call   0x41afa0
  41b218:	or     DWORD PTR [r13+0x10],0x40
  41b21d:	mov    QWORD PTR [r13+0x8],rax
  41b221:	jmp    0x41b182
  41b226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b230:	push   rsi
  41b231:	push   rbx
  41b232:	sub    rsp,0x28
  41b236:	mov    rbx,rcx
  41b239:	call   0x42dea8
  41b23e:	test   rax,rax
  41b241:	je     0x41b24a
  41b243:	add    rsp,0x28
  41b247:	pop    rbx
  41b248:	pop    rsi
  41b249:	ret    
  41b24a:	mov    rsi,QWORD PTR [rip+0x168d7]        # 0x431b28
  41b251:	call   QWORD PTR [rip+0x2d589]        # 0x4487e0
  41b257:	lea    rcx,[rax+0x60]
  41b25b:	mov    r8d,ebx
  41b25e:	mov    rdx,rsi
  41b261:	call   0x4193f0
  41b266:	mov    ecx,0x1
  41b26b:	call   0x419830
  41b270:	nop
  41b271:	nop    DWORD PTR [rax+rax*1+0x0]
  41b276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b280:	push   rbp
  41b281:	push   rdi
  41b282:	push   rsi
  41b283:	push   rbx
  41b284:	sub    rsp,0x28
  41b288:	mov    rbx,QWORD PTR [rcx]
  41b28b:	mov    rsi,rcx
  41b28e:	mov    rdi,rdx
  41b291:	test   rbx,rbx
  41b294:	je     0x41b2e4
  41b296:	movsxd r8,DWORD PTR [rbx]
  41b299:	mov    eax,DWORD PTR [rbx+0x4]
  41b29c:	cmp    r8d,eax
  41b29f:	lea    edx,[r8+0x1]
  41b2a3:	jge    0x41b2b5
  41b2a5:	mov    DWORD PTR [rbx],edx
  41b2a7:	mov    QWORD PTR [rbx+r8*8+0x8],rdi
  41b2ac:	add    rsp,0x28
  41b2b0:	pop    rbx
  41b2b1:	pop    rsi
  41b2b2:	pop    rdi
  41b2b3:	pop    rbp
  41b2b4:	ret    
  41b2b5:	add    eax,0x8
  41b2b8:	mov    rcx,rbx
  41b2bb:	mov    DWORD PTR [rbx+0x4],eax
  41b2be:	cdqe   
  41b2c0:	lea    rbp,[rax*8+0x8]
  41b2c8:	mov    rdx,rbp
  41b2cb:	call   0x42de68
  41b2d0:	test   rax,rax
  41b2d3:	je     0x41b310
  41b2d5:	movsxd r8,DWORD PTR [rax]
  41b2d8:	mov    QWORD PTR [rsi],rax
  41b2db:	mov    rbx,rax
  41b2de:	lea    edx,[r8+0x1]
  41b2e2:	jmp    0x41b2a5
  41b2e4:	mov    ecx,0x38
  41b2e9:	call   0x41b230
  41b2ee:	test   rax,rax
  41b2f1:	mov    rbx,rax
  41b2f4:	je     0x41b2ac
  41b2f6:	mov    DWORD PTR [rax],0x0
  41b2fc:	mov    DWORD PTR [rax+0x4],0x6
  41b303:	mov    edx,0x1
  41b308:	mov    QWORD PTR [rsi],rax
  41b30b:	xor    r8d,r8d
  41b30e:	jmp    0x41b2a5
  41b310:	mov    rsi,QWORD PTR [rip+0x16831]        # 0x431b48
  41b317:	call   QWORD PTR [rip+0x2d4c3]        # 0x4487e0
  41b31d:	lea    rcx,[rax+0x60]
  41b321:	mov    r9,rbx
  41b324:	mov    r8d,ebp
  41b327:	mov    rdx,rsi
  41b32a:	call   0x4193f0
  41b32f:	mov    ecx,0x1
  41b334:	call   0x419830
  41b339:	nop
  41b33a:	nop    WORD PTR [rax+rax*1+0x0]
  41b340:	push   r15
  41b342:	push   r14
  41b344:	push   r13
  41b346:	push   r12
  41b348:	push   rbp
  41b349:	push   rdi
  41b34a:	push   rsi
  41b34b:	push   rbx
  41b34c:	sub    rsp,0x58
  41b350:	mov    rbp,QWORD PTR [rsp+0xc0]
  41b358:	mov    QWORD PTR [rsp+0xa0],rcx
  41b360:	mov    r15,r9
  41b363:	mov    r14,rdx
  41b366:	mov    r12,r8
  41b369:	lea    rcx,[r8+rbp*1+0x18]
  41b36e:	call   0x41b230
  41b373:	test   r15,r15
  41b376:	mov    r13,rax
  41b379:	je     0x41b520
  41b37f:	test   rbp,rbp
  41b382:	mov    DWORD PTR [rax],0x1
  41b388:	je     0x41b470
  41b38e:	lea    rsi,[rax+0x10]
  41b392:	lea    rax,[rsp+0x48]
  41b397:	mov    ebx,ebp
  41b399:	lea    r10,[rip+0x1dfe0]        # 0x439380
  41b3a0:	mov    QWORD PTR [rsp+0x30],rax
  41b3a5:	jmp    0x41b3c5
  41b3a7:	nop    WORD PTR [rax+rax*1+0x0]
  41b3b0:	sub    ebx,0x1
  41b3b3:	add    rsi,0x1
  41b3b7:	mov    r15,rdi
  41b3ba:	test   ebx,ebx
  41b3bc:	mov    BYTE PTR [rsi-0x1],al
  41b3bf:	jle    0x41b4b5
  41b3c5:	movzx  eax,BYTE PTR [r15]
  41b3c9:	lea    rdi,[r15+0x1]
  41b3cd:	test   eax,eax
  41b3cf:	je     0x41b4b5
  41b3d5:	cmp    eax,0x26
  41b3d8:	jne    0x41b3b0
  41b3da:	cmp    ebx,0x2
  41b3dd:	mov    QWORD PTR [rsp+0x48],rdi
  41b3e2:	mov    eax,0x26
  41b3e7:	jle    0x41b3b0
  41b3e9:	cmp    BYTE PTR [r15+0x1],0x23
  41b3ee:	lea    r9,[rip+0x1df4b]        # 0x439340
  41b3f5:	je     0x41b4c0
  41b3fb:	mov    r15,r9
  41b3fe:	mov    QWORD PTR [rsp+0xc0],rbp
  41b406:	mov    QWORD PTR [rsp+0x38],rsi
  41b40b:	mov    ebp,DWORD PTR [r15+0x4]
  41b40f:	mov    esi,ebx
  41b411:	cmp    ebp,esi
  41b413:	jg     0x41b439
  41b415:	movsxd rbx,ebp
  41b418:	lea    rdx,[r15+0x8]
  41b41c:	mov    rcx,rdi
  41b41f:	mov    r8,rbx
  41b422:	mov    QWORD PTR [rsp+0x28],r10
  41b427:	call   0x42de28
  41b42c:	test   eax,eax
  41b42e:	mov    r10,QWORD PTR [rsp+0x28]
  41b433:	je     0x41b541
  41b439:	cmp    r15,r10
  41b43c:	je     0x41b44f
  41b43e:	add    r15,0x10
  41b442:	mov    ebp,DWORD PTR [r15+0x4]
  41b446:	cmp    ebp,esi
  41b448:	jle    0x41b415
  41b44a:	cmp    r15,r10
  41b44d:	jne    0x41b43e
  41b44f:	mov    ebx,esi
  41b451:	mov    rbp,QWORD PTR [rsp+0xc0]
  41b459:	mov    rsi,QWORD PTR [rsp+0x38]
  41b45e:	mov    eax,0x26
  41b463:	jmp    0x41b3b0
  41b468:	nop    DWORD PTR [rax+rax*1+0x0]
  41b470:	mov    BYTE PTR [rax+0x10],0x0
  41b474:	lea    rcx,[r13+rbp*1+0x11]
  41b479:	mov    QWORD PTR [r13+0x8],rcx
  41b47d:	mov    r8,r12
  41b480:	mov    rdx,r14
  41b483:	call   0x42de98
  41b488:	mov    rax,QWORD PTR [r13+0x8]
  41b48c:	mov    rcx,QWORD PTR [rsp+0xa0]
  41b494:	mov    rdx,r13
  41b497:	mov    BYTE PTR [rax+r12*1],0x0
  41b49c:	call   0x41b280
  41b4a1:	mov    rax,r13
  41b4a4:	add    rsp,0x58
  41b4a8:	pop    rbx
  41b4a9:	pop    rsi
  41b4aa:	pop    rdi
  41b4ab:	pop    rbp
  41b4ac:	pop    r12
  41b4ae:	pop    r13
  41b4b0:	pop    r14
  41b4b2:	pop    r15
  41b4b4:	ret    
  41b4b5:	mov    BYTE PTR [rsi],0x0
  41b4b8:	jmp    0x41b474
  41b4ba:	nop    WORD PTR [rax+rax*1+0x0]
  41b4c0:	lea    rcx,[r15+0x2]
  41b4c4:	mov    r8d,0xa
  41b4ca:	mov    QWORD PTR [rsp+0x48],rcx
  41b4cf:	cmp    BYTE PTR [r15+0x2],0x78
  41b4d4:	je     0x41b533
  41b4d6:	mov    rdx,QWORD PTR [rsp+0x30]
  41b4db:	mov    QWORD PTR [rsp+0x28],r10
  41b4e0:	call   0x42ddf8
  41b4e5:	mov    rdx,QWORD PTR [rsp+0x48]
  41b4ea:	mov    ecx,eax
  41b4ec:	mov    r10,QWORD PTR [rsp+0x28]
  41b4f1:	mov    eax,0x26
  41b4f6:	cmp    BYTE PTR [rdx],0x3b
  41b4f9:	jne    0x41b3b0
  41b4ff:	add    rdx,0x1
  41b503:	mov    r8,rdx
  41b506:	sub    r8,rdi
  41b509:	cmp    r8d,ebx
  41b50c:	jg     0x41b3b0
  41b512:	sub    ebx,r8d
  41b515:	mov    eax,ecx
  41b517:	mov    rdi,rdx
  41b51a:	jmp    0x41b3b0
  41b51f:	nop
  41b520:	lea    rcx,[rax+0x10]
  41b524:	mov    DWORD PTR [rax],0x0
  41b52a:	mov    QWORD PTR [rax+0x8],rcx
  41b52e:	jmp    0x41b47d
  41b533:	lea    rcx,[r15+0x3]
  41b537:	mov    r8b,0x10
  41b53a:	mov    QWORD PTR [rsp+0x48],rcx
  41b53f:	jmp    0x41b4d6
  41b541:	mov    rax,rbx
  41b544:	mov    r9,r15
  41b547:	mov    ebx,esi
  41b549:	mov    r15d,ebp
  41b54c:	add    rdi,rax
  41b54f:	mov    rsi,QWORD PTR [rsp+0x38]
  41b554:	mov    rbp,QWORD PTR [rsp+0xc0]
  41b55c:	sub    ebx,r15d
  41b55f:	movzx  eax,BYTE PTR [r9]
  41b563:	jmp    0x41b3b0
  41b568:	nop    DWORD PTR [rax+rax*1+0x0]
  41b570:	push   rsi
  41b571:	push   rbx
  41b572:	sub    rsp,0x28
  41b576:	mov    rax,QWORD PTR [rdx+0x38]
  41b57a:	mov    rbx,rdx
  41b57d:	lea    rdx,[rip+0x7b2c]        # 0x4230b0
  41b584:	mov    rsi,rcx
  41b587:	cmp    rax,rdx
  41b58a:	je     0x41b6e0
  41b590:	lea    rdx,[rip+0xffffffffffffeb49]        # 0x41a0e0
  41b597:	cmp    rax,rdx
  41b59a:	je     0x41b700
  41b5a0:	lea    rdx,[rip+0x8bf9]        # 0x4241a0
  41b5a7:	cmp    rax,rdx
  41b5aa:	je     0x41b714
  41b5b0:	mov    r8,QWORD PTR [rbx+0x48]
  41b5b4:	test   r8,r8
  41b5b7:	je     0x41b6a0
  41b5bd:	movzx  r9d,WORD PTR [rbx+0xc]
  41b5c2:	cmp    r9w,0x1
  41b5c7:	je     0x41b6c4
  41b5cd:	cmp    r9w,0xffff
  41b5d2:	je     0x41b5e7
  41b5d4:	mov    rdx,QWORD PTR [rcx]
  41b5d7:	lea    rcx,[rip+0x1ed1a]        # 0x43a2f8
  41b5de:	call   0x419800
  41b5e3:	mov    r8,QWORD PTR [rbx+0x48]
  41b5e7:	mov    rdx,QWORD PTR [rsi]
  41b5ea:	lea    rcx,[rip+0x1f5df]        # 0x43abd0
  41b5f1:	call   0x419800
  41b5f6:	mov    eax,DWORD PTR [rbx+0x10]
  41b5f9:	test   ah,0xf0
  41b5fc:	je     0x41b670
  41b5fe:	test   eax,0x10000
  41b603:	jne    0x41b640
  41b605:	lea    rdx,[rip+0x1ea25]        # 0x43a031
  41b60c:	lea    rcx,[rip+0x1e8c3]        # 0x439ed6
  41b613:	call   0x419800
  41b618:	call   QWORD PTR [rip+0x2d1c2]        # 0x4487e0
  41b61e:	lea    rcx,[rip+0x1ea69]        # 0x43a08e
  41b625:	lea    r9,[rax+0x30]
  41b629:	mov    r8d,0x10
  41b62f:	mov    edx,0x1
  41b634:	add    rsp,0x28
  41b638:	pop    rbx
  41b639:	pop    rsi
  41b63a:	jmp    0x42dee0
  41b63f:	nop
  41b640:	mov    rdx,QWORD PTR [rsi]
  41b643:	mov    r8,QWORD PTR [rbx+0x48]
  41b647:	lea    rcx,[rip+0x1fe3c]        # 0x43b48a
  41b64e:	call   0x419800
  41b653:	lea    rdx,[rip+0x1e8cc]        # 0x439f26
  41b65a:	lea    rcx,[rip+0x1e875]        # 0x439ed6
  41b661:	call   0x419800
  41b666:	jmp    0x41b618
  41b668:	nop    DWORD PTR [rax+rax*1+0x0]
  41b670:	mov    rdx,QWORD PTR [rsi]
  41b673:	mov    r8,QWORD PTR [rbx+0x48]
  41b677:	lea    rcx,[rip+0x1fe0c]        # 0x43b48a
  41b67e:	call   0x419800
  41b683:	lea    rdx,[rip+0x1e883]        # 0x439f0d
  41b68a:	lea    rcx,[rip+0x1e845]        # 0x439ed6
  41b691:	call   0x419800
  41b696:	jmp    0x41b618
  41b698:	nop    DWORD PTR [rax+rax*1+0x0]
  41b6a0:	test   rax,rax
  41b6a3:	je     0x41b740
  41b6a9:	mov    rdx,QWORD PTR [rcx]
  41b6ac:	lea    r8,[rip+0x1e819]        # 0x439ecc
  41b6b3:	lea    rcx,[rip+0x1edaa]        # 0x43a464
  41b6ba:	call   0x419800
  41b6bf:	jmp    0x41b618
  41b6c4:	mov    rdx,QWORD PTR [rcx]
  41b6c7:	lea    rcx,[rip+0x1fe16]        # 0x43b4e4
  41b6ce:	call   0x419800
  41b6d3:	jmp    0x41b5f6
  41b6d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b6e0:	mov    rdx,QWORD PTR [rcx]
  41b6e3:	lea    r8,[rip+0x1e937]        # 0x43a021
  41b6ea:	lea    rcx,[rip+0x1ed73]        # 0x43a464
  41b6f1:	call   0x419800
  41b6f6:	jmp    0x41b618
  41b6fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41b700:	mov    rdx,QWORD PTR [rcx]
  41b703:	lea    rcx,[rip+0x1fccc]        # 0x43b3d6
  41b70a:	call   0x419800
  41b70f:	jmp    0x41b618
  41b714:	lea    rdx,[rip+0x1e9fb]        # 0x43a116
  41b71b:	lea    rcx,[rip+0x1e7b4]        # 0x439ed6
  41b722:	call   0x419800
  41b727:	lea    rdx,[rip+0x1e903]        # 0x43a031
  41b72e:	lea    rcx,[rip+0x1e7a1]        # 0x439ed6
  41b735:	call   0x419800
  41b73a:	jmp    0x41b618
  41b73f:	nop
  41b740:	lea    rdx,[rip+0x1e9fe]        # 0x43a145
  41b747:	lea    rcx,[rip+0x1e788]        # 0x439ed6
  41b74e:	call   0x419800
  41b753:	lea    rdx,[rip+0x1e7cc]        # 0x439f26
  41b75a:	lea    rcx,[rip+0x1e775]        # 0x439ed6
  41b761:	call   0x419800
  41b766:	jmp    0x41b618
  41b76b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b770:	push   rbp
  41b771:	push   rdi
  41b772:	push   rsi
  41b773:	push   rbx
  41b774:	sub    rsp,0x28
  41b778:	mov    esi,DWORD PTR [rcx+0xb0]
  41b77e:	mov    rbx,QWORD PTR [rcx+0x78]
  41b782:	mov    rdi,rcx
  41b785:	call   QWORD PTR [rip+0x2d055]        # 0x4487e0
  41b78b:	lea    rcx,[rip+0x1eb47]        # 0x43a2d9
  41b792:	lea    r9,[rax+0x30]
  41b796:	mov    r8d,0x1e
  41b79c:	mov    edx,0x1
  41b7a1:	call   0x42dee0
  41b7a6:	test   esi,esi
  41b7a8:	jle    0x41b809
  41b7aa:	lea    eax,[rsi-0x1]
  41b7ad:	lea    rbp,[rdi+0x30]
  41b7b1:	add    rax,0x1
  41b7b5:	lea    rdx,[rax+rax*2]
  41b7b9:	lea    rax,[rax+rdx*4]
  41b7bd:	lea    rsi,[rbx+rax*8]
  41b7c1:	test   DWORD PTR [rbx+0x10],0x280000
  41b7c8:	jne    0x41b800
  41b7ca:	movzx  edx,WORD PTR [rbx+0x2]
  41b7ce:	movzx  eax,dl
  41b7d1:	cmp    al,0x7f
  41b7d3:	ja     0x41b800
  41b7d5:	lea    rcx,[rip+0x21164]        # 0x43c940
  41b7dc:	test   BYTE PTR [rcx+rax*4+0x1],0x40
  41b7e1:	je     0x41b800
  41b7e3:	lea    rcx,[rip+0x1e8b5]        # 0x43a09f
  41b7ea:	call   0x419800
  41b7ef:	mov    rdx,rbx
  41b7f2:	mov    rcx,rbp
  41b7f5:	call   0x41b570
  41b7fa:	nop    WORD PTR [rax+rax*1+0x0]
  41b800:	add    rbx,0x68
  41b804:	cmp    rbx,rsi
  41b807:	jne    0x41b7c1
  41b809:	mov    r8,QWORD PTR [rdi+0x30]
  41b80d:	lea    rdx,[rip+0x1e68b]        # 0x439e9f
  41b814:	lea    rcx,[rip+0x1fea2]        # 0x43b6bd
  41b81b:	add    rsp,0x28
  41b81f:	pop    rbx
  41b820:	pop    rsi
  41b821:	pop    rdi
  41b822:	pop    rbp
  41b823:	jmp    0x419800
  41b828:	nop    DWORD PTR [rax+rax*1+0x0]
  41b830:	push   r15
  41b832:	push   r14
  41b834:	push   r13
  41b836:	push   r12
  41b838:	push   rbp
  41b839:	push   rdi
  41b83a:	push   rsi
  41b83b:	push   rbx
  41b83c:	sub    rsp,0x58
  41b840:	mov    rdi,rcx
  41b843:	mov    QWORD PTR [rsp+0xa8],rdx
  41b84b:	mov    rsi,r8
  41b84e:	mov    rbx,r9
  41b851:	call   0x42de30
  41b856:	sub    eax,0x1
  41b859:	cmp    eax,0x1e
  41b85c:	mov    DWORD PTR [rsp+0x2c],eax
  41b860:	ja     0x41b924
  41b866:	mov    eax,DWORD PTR [rbx]
  41b868:	mov    rbp,QWORD PTR [rsi]
  41b86b:	test   eax,eax
  41b86d:	jle    0x41b9ee
  41b873:	sub    eax,0x1
  41b876:	mov    rbx,QWORD PTR [rip+0x2d1e3]        # 0x448a60
  41b87d:	mov    r12d,0x2
  41b883:	add    rax,0x1
  41b887:	lea    rdx,[rax+rax*2]
  41b88b:	lea    rax,[rax+rdx*4]
  41b88f:	lea    rax,[rbp+rax*8+0x0]
  41b894:	mov    QWORD PTR [rsp+0x20],rax
  41b899:	nop    DWORD PTR [rax+0x0]
  41b8a0:	cmp    rbp,QWORD PTR [rsp+0xa8]
  41b8a8:	je     0x41b912
  41b8aa:	test   DWORD PTR [rbp+0x10],0x280000
  41b8b1:	jne    0x41b912
  41b8b3:	mov    r15,QWORD PTR [rbp+0x50]
  41b8b7:	xor    r14d,r14d
  41b8ba:	jmp    0x41b8c4
  41b8bc:	nop    DWORD PTR [rax+0x0]
  41b8c0:	add    r14d,0x1
  41b8c4:	mov    r13d,r14d
  41b8c7:	movzx  ecx,BYTE PTR [r15+r13*1]
  41b8cc:	call   rbx
  41b8ce:	movzx  ecx,BYTE PTR [rdi+r13*1]
  41b8d3:	mov    esi,eax
  41b8d5:	call   rbx
  41b8d7:	cmp    esi,eax
  41b8d9:	je     0x41b8c0
  41b8db:	mov    r15,QWORD PTR [rbp+0x58]
  41b8df:	cmp    r12d,r14d
  41b8e2:	cmovb  r12d,r14d
  41b8e6:	test   r15,r15
  41b8e9:	je     0x41b912
  41b8eb:	xor    r14d,r14d
  41b8ee:	jmp    0x41b8f4
  41b8f0:	add    r14d,0x1
  41b8f4:	mov    r13d,r14d
  41b8f7:	movsx  ecx,BYTE PTR [r15+r13*1]
  41b8fc:	call   rbx
  41b8fe:	movsx  ecx,BYTE PTR [rdi+r13*1]
  41b903:	mov    esi,eax
  41b905:	call   rbx
  41b907:	cmp    esi,eax
  41b909:	je     0x41b8f0
  41b90b:	cmp    r12d,r14d
  41b90e:	cmovb  r12d,r14d
  41b912:	add    rbp,0x68
  41b916:	cmp    rbp,QWORD PTR [rsp+0x20]
  41b91b:	jne    0x41b8a0
  41b91d:	cmp    DWORD PTR [rsp+0x2c],r12d
  41b922:	ja     0x41b945
  41b924:	lea    rcx,[rip+0x1e784]        # 0x43a0af
  41b92b:	mov    rdx,rdi
  41b92e:	call   0x419800
  41b933:	nop
  41b934:	add    rsp,0x58
  41b938:	pop    rbx
  41b939:	pop    rsi
  41b93a:	pop    rdi
  41b93b:	pop    rbp
  41b93c:	pop    r12
  41b93e:	pop    r13
  41b940:	pop    r14
  41b942:	pop    r15
  41b944:	ret    
  41b945:	lea    rbp,[rsp+0x30]
  41b94a:	mov    ebx,r12d
  41b94d:	cmp    r12d,0x8
  41b951:	mov    rax,rdi
  41b954:	lea    rsi,[rbp+rbx*1+0x0]
  41b959:	mov    rcx,rbp
  41b95c:	jae    0x41b9c7
  41b95e:	xor    edx,edx
  41b960:	test   r12b,0x4
  41b964:	je     0x41b96f
  41b966:	mov    edx,DWORD PTR [rax]
  41b968:	mov    DWORD PTR [rcx],edx
  41b96a:	mov    edx,0x4
  41b96f:	test   r12b,0x2
  41b973:	je     0x41b983
  41b975:	movzx  r8d,WORD PTR [rax+rdx*1]
  41b97a:	mov    WORD PTR [rcx+rdx*1],r8w
  41b97f:	add    rdx,0x2
  41b983:	and    r12d,0x1
  41b987:	je     0x41b990
  41b989:	movzx  eax,BYTE PTR [rax+rdx*1]
  41b98d:	mov    BYTE PTR [rcx+rdx*1],al
  41b990:	add    rbx,rdi
  41b993:	jmp    0x41b998
  41b995:	mov    rsi,rax
  41b998:	lea    rcx,[rip+0x1e720]        # 0x43a0bf
  41b99f:	mov    BYTE PTR [rsi],0x0
  41b9a2:	mov    rdx,rbp
  41b9a5:	add    rbx,0x1
  41b9a9:	call   0x419800
  41b9ae:	movzx  ecx,BYTE PTR [rbx-0x1]
  41b9b2:	cmp    BYTE PTR [rbx],0x0
  41b9b5:	lea    rax,[rsi+0x1]
  41b9b9:	mov    BYTE PTR [rax-0x1],cl
  41b9bc:	jne    0x41b995
  41b9be:	mov    BYTE PTR [rsi+0x1],0x0
  41b9c2:	jmp    0x41b924
  41b9c7:	mov    ecx,r12d
  41b9ca:	xor    eax,eax
  41b9cc:	and    ecx,0xfffffff8
  41b9cf:	mov    edx,eax
  41b9d1:	add    eax,0x8
  41b9d4:	mov    r8,QWORD PTR [rdi+rdx*1]
  41b9d8:	cmp    eax,ecx
  41b9da:	mov    QWORD PTR [rbp+rdx*1+0x0],r8
  41b9df:	jb     0x41b9cf
  41b9e1:	lea    rcx,[rbp+rax*1+0x0]
  41b9e6:	add    rax,rdi
  41b9e9:	jmp    0x41b95e
  41b9ee:	mov    r12d,0x2
  41b9f4:	jmp    0x41b91d
  41b9f9:	nop    DWORD PTR [rax+0x0]
  41ba00:	push   r14
  41ba02:	push   r13
  41ba04:	push   r12
  41ba06:	push   rbp
  41ba07:	push   rdi
  41ba08:	push   rsi
  41ba09:	push   rbx
  41ba0a:	sub    rsp,0x20
  41ba0e:	mov    r13,QWORD PTR [rip+0x2cdcb]        # 0x4487e0
  41ba15:	mov    rbx,QWORD PTR [rcx+0x78]
  41ba19:	mov    rdi,rcx
  41ba1c:	mov    esi,DWORD PTR [rcx+0xb0]
  41ba22:	call   r13
  41ba25:	lea    rcx,[rip+0x1e8ad]        # 0x43a2d9
  41ba2c:	lea    r9,[rax+0x30]
  41ba30:	mov    r8d,0x1e
  41ba36:	mov    edx,0x1
  41ba3b:	lea    r12,[rdi+0x78]
  41ba3f:	lea    rbp,[rdi+0xb0]
  41ba46:	call   0x42dee0
  41ba4b:	lea    r14,[rdi+0x30]
  41ba4f:	jmp    0x41ba60
  41ba51:	sub    esi,0x1
  41ba54:	add    rbx,0x68
  41ba58:	test   esi,esi
  41ba5a:	jle    0x41bb0d
  41ba60:	test   DWORD PTR [rbx+0x10],0x280000
  41ba67:	jne    0x41ba51
  41ba69:	mov    rcx,QWORD PTR [rbx+0x50]
  41ba6d:	mov    r9,rbp
  41ba70:	mov    r8,r12
  41ba73:	mov    rdx,rbx
  41ba76:	call   0x41b830
  41ba7b:	mov    rcx,r14
  41ba7e:	mov    rdx,rbx
  41ba81:	call   0x41b570
  41ba86:	mov    rcx,QWORD PTR [rbx+0x58]
  41ba8a:	test   rcx,rcx
  41ba8d:	je     0x41ba51
  41ba8f:	mov    r9,rbp
  41ba92:	mov    r8,r12
  41ba95:	mov    rdx,rbx
  41ba98:	call   0x41b830
  41ba9d:	lea    rax,[rip+0x86fc]        # 0x4241a0
  41baa4:	cmp    QWORD PTR [rbx+0x38],rax
  41baa8:	je     0x41bb40
  41baae:	cmp    WORD PTR [rbx+0xc],0x1
  41bab3:	mov    rdx,QWORD PTR [rdi+0x30]
  41bab7:	mov    r9,QWORD PTR [rbx+0x60]
  41babb:	mov    r8,QWORD PTR [rbx+0x48]
  41babf:	je     0x41bb32
  41bac1:	lea    rcx,[rip+0x1f25b]        # 0x43ad23
  41bac8:	call   0x419800
  41bacd:	lea    rdx,[rip+0x1e439]        # 0x439f0d
  41bad4:	lea    rcx,[rip+0x1e3fb]        # 0x439ed6
  41badb:	sub    esi,0x1
  41bade:	add    rbx,0x68
  41bae2:	call   0x419800
  41bae7:	call   r13
  41baea:	lea    rcx,[rip+0x1e59d]        # 0x43a08e
  41baf1:	lea    r9,[rax+0x30]
  41baf5:	mov    r8d,0x10
  41bafb:	mov    edx,0x1
  41bb00:	call   0x42dee0
  41bb05:	test   esi,esi
  41bb07:	jg     0x41ba60
  41bb0d:	mov    r8,QWORD PTR [rdi+0x30]
  41bb11:	lea    rdx,[rip+0x1e427]        # 0x439f3f
  41bb18:	lea    rcx,[rip+0x1fb9e]        # 0x43b6bd
  41bb1f:	add    rsp,0x20
  41bb23:	pop    rbx
  41bb24:	pop    rsi
  41bb25:	pop    rdi
  41bb26:	pop    rbp
  41bb27:	pop    r12
  41bb29:	pop    r13
  41bb2b:	pop    r14
  41bb2d:	jmp    0x419800
  41bb32:	lea    rcx,[rip+0x1f277]        # 0x43adb0
  41bb39:	call   0x419800
  41bb3e:	jmp    0x41bacd
  41bb40:	lea    rdx,[rip+0x1e62d]        # 0x43a174
  41bb47:	lea    rcx,[rip+0x1e388]        # 0x439ed6
  41bb4e:	call   0x419800
  41bb53:	jmp    0x41bacd
  41bb58:	nop    DWORD PTR [rax+rax*1+0x0]
  41bb60:	push   r15
  41bb62:	push   r14
  41bb64:	push   r13
  41bb66:	push   r12
  41bb68:	push   rbp
  41bb69:	push   rdi
  41bb6a:	push   rsi
  41bb6b:	push   rbx
  41bb6c:	sub    rsp,0x68
  41bb70:	mov    eax,DWORD PTR [rcx+0x10]
  41bb73:	test   al,0x8
  41bb75:	jne    0x41bc80
  41bb7b:	mov    rdi,QWORD PTR [rcx+0x20]
  41bb7f:	test   rdi,rdi
  41bb82:	je     0x41bcc0
  41bb88:	mov    rdx,QWORD PTR [rcx+0x18]
  41bb8c:	lea    r13,[rsp+0x40]
  41bb91:	mov    rbp,rcx
  41bb94:	mov    r8d,0x20
  41bb9a:	mov    rcx,r13
  41bb9d:	call   0x426eb0
  41bba2:	test   eax,eax
  41bba4:	jne    0x41bc80
  41bbaa:	mov    eax,DWORD PTR [rdi]
  41bbac:	test   eax,eax
  41bbae:	jle    0x41bc47
  41bbb4:	lea    r15d,[rax-0x1]
  41bbb8:	xor    ebx,ebx
  41bbba:	xor    r12d,r12d
  41bbbd:	lea    rax,[r15+0x1]
  41bbc1:	mov    QWORD PTR [rsp+0x38],rax
  41bbc6:	jmp    0x41bbf0
  41bbc8:	nop    DWORD PTR [rax+rax*1+0x0]
  41bbd0:	mov    BYTE PTR [r15],0x3d
  41bbd4:	cmp    r14d,r12d
  41bbd7:	je     0x41bbe1
  41bbd9:	movsxd rax,r12d
  41bbdc:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
  41bbe1:	add    r12d,0x1
  41bbe5:	add    rbx,0x1
  41bbe9:	cmp    rbx,QWORD PTR [rsp+0x38]
  41bbee:	je     0x41bc47
  41bbf0:	mov    rsi,QWORD PTR [rdi+rbx*8+0x8]
  41bbf5:	mov    edx,0x3d
  41bbfa:	mov    r14d,ebx
  41bbfd:	mov    rcx,rsi
  41bc00:	call   0x42de58
  41bc05:	test   rax,rax
  41bc08:	mov    r15,rax
  41bc0b:	je     0x41bc91
  41bc11:	mov    BYTE PTR [rax],0x0
  41bc14:	xor    r9d,r9d
  41bc17:	xor    r8d,r8d
  41bc1a:	mov    DWORD PTR [rsp+0x20],0x0
  41bc22:	mov    rdx,rsi
  41bc25:	mov    rcx,r13
  41bc28:	call   0x426ea8
  41bc2d:	test   eax,eax
  41bc2f:	jne    0x41bbd0
  41bc31:	mov    rcx,rsi
  41bc34:	add    rbx,0x1
  41bc38:	call   0x42df08
  41bc3d:	sub    DWORD PTR [rdi],0x1
  41bc40:	cmp    rbx,QWORD PTR [rsp+0x38]
  41bc45:	jne    0x41bbf0
  41bc47:	mov    rcx,r13
  41bc4a:	call   0x426ea0
  41bc4f:	mov    eax,DWORD PTR [rdi]
  41bc51:	test   eax,eax
  41bc53:	jne    0x41bc80
  41bc55:	mov    eax,DWORD PTR [rbp+0x10]
  41bc58:	mov    edx,eax
  41bc5a:	and    edx,0xfffff00
  41bc60:	test   ah,0x8
  41bc63:	jne    0x41bc68
  41bc65:	or     edx,0x20
  41bc68:	mov    DWORD PTR [rbp+0x10],edx
  41bc6b:	mov    rcx,rdi
  41bc6e:	call   0x42df08
  41bc73:	mov    QWORD PTR [rbp+0x20],0x0
  41bc7b:	nop    DWORD PTR [rax+rax*1+0x0]
  41bc80:	add    rsp,0x68
  41bc84:	pop    rbx
  41bc85:	pop    rsi
  41bc86:	pop    rdi
  41bc87:	pop    rbp
  41bc88:	pop    r12
  41bc8a:	pop    r13
  41bc8c:	pop    r14
  41bc8e:	pop    r15
  41bc90:	ret    
  41bc91:	xor    r9d,r9d
  41bc94:	xor    r8d,r8d
  41bc97:	mov    DWORD PTR [rsp+0x20],0x0
  41bc9f:	mov    rdx,rsi
  41bca2:	mov    rcx,r13
  41bca5:	call   0x426ea8
  41bcaa:	test   eax,eax
  41bcac:	jne    0x41bbd4
  41bcb2:	jmp    0x41bc31
  41bcb7:	nop    WORD PTR [rax+rax*1+0x0]
  41bcc0:	mov    edx,eax
  41bcc2:	and    edx,0xfffff00
  41bcc8:	test   ah,0x8
  41bccb:	jne    0x41bcd0
  41bccd:	or     edx,0x20
  41bcd0:	mov    DWORD PTR [rcx+0x10],edx
  41bcd3:	jmp    0x41bc80
  41bcd5:	nop
  41bcd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bce0:	push   rsi
  41bce1:	push   rbx
  41bce2:	sub    rsp,0x28
  41bce6:	test   BYTE PTR [rdx+0x10],0x4
  41bcea:	je     0x41bcf5
  41bcec:	mov    rax,QWORD PTR [rdx]
  41bcef:	test   BYTE PTR [rax+0x13],0x2
  41bcf3:	jne    0x41bd00
  41bcf5:	add    rsp,0x28
  41bcf9:	pop    rbx
  41bcfa:	pop    rsi
  41bcfb:	jmp    0x41ade0
  41bd00:	mov    rsi,QWORD PTR [rax+0x50]
  41bd04:	mov    rbx,QWORD PTR [rip+0x15f65]        # 0x431c70
  41bd0b:	call   QWORD PTR [rip+0x2cacf]        # 0x4487e0
  41bd11:	lea    rcx,[rax+0x60]
  41bd15:	mov    r8,rsi
  41bd18:	mov    rdx,rbx
  41bd1b:	call   0x4193f0
  41bd20:	mov    eax,0xffffffff
  41bd25:	add    rsp,0x28
  41bd29:	pop    rbx
  41bd2a:	pop    rsi
  41bd2b:	ret    
  41bd2c:	nop    DWORD PTR [rax+0x0]
  41bd30:	push   r15
  41bd32:	push   r14
  41bd34:	push   r13
  41bd36:	push   r12
  41bd38:	push   rbp
  41bd39:	push   rdi
  41bd3a:	push   rsi
  41bd3b:	push   rbx
  41bd3c:	sub    rsp,0x188
  41bd43:	movzx  eax,WORD PTR [rcx+0xaa]
  41bd4a:	test   ax,0x7fff
  41bd4e:	je     0x41bfa8
  41bd54:	mov    r12,rdx
  41bd57:	lea    rdx,[rax+rax*2]
  41bd5b:	mov    rbp,rcx
  41bd5e:	mov    rcx,QWORD PTR [rcx+0x78]
  41bd62:	lea    rax,[rax+rdx*4]
  41bd66:	lea    rax,[rcx+rax*8]
  41bd6a:	mov    rbx,QWORD PTR [rax+0x18]
  41bd6e:	test   rbx,rbx
  41bd71:	je     0x41bd7c
  41bd73:	cmp    BYTE PTR [rbx],0x0
  41bd76:	jne    0x41be20
  41bd7c:	mov    rax,QWORD PTR [rbp+0x58]
  41bd80:	test   rax,rax
  41bd83:	jne    0x41bd94
  41bd85:	jmp    0x41bfa8
  41bd8a:	nop    WORD PTR [rax+rax*1+0x0]
  41bd90:	add    rax,0x8
  41bd94:	cmp    QWORD PTR [rax+0x8],0x0
  41bd99:	jne    0x41bd90
  41bd9b:	mov    rbx,QWORD PTR [rax]
  41bd9e:	xor    edi,edi
  41bda0:	cmp    BYTE PTR [rbx],0x24
  41bda3:	je     0x41be24
  41bda5:	lea    r13,[rsp+0x30]
  41bdaa:	mov    rcx,rbx
  41bdad:	mov    rsi,QWORD PTR [rip+0x2cccc]        # 0x448a80
  41bdb4:	mov    rdx,r13
  41bdb7:	call   rsi
  41bdb9:	test   eax,eax
  41bdbb:	jne    0x41bfb0
  41bdc1:	movzx  eax,WORD PTR [rsp+0x36]
  41bdc6:	and    ax,0xf000
  41bdca:	cmp    ax,0x4000
  41bdce:	je     0x41bf00
  41bdd4:	cmp    ax,0x8000
  41bdd8:	je     0x41c01d
  41bdde:	mov    rbp,QWORD PTR [rbp+0x28]
  41bde2:	mov    rsi,QWORD PTR [rip+0x15ef7]        # 0x431ce0
  41bde9:	call   QWORD PTR [rip+0x2c9f1]        # 0x4487e0
  41bdef:	lea    rcx,[rax+0x60]
  41bdf3:	mov    r9,rbx
  41bdf6:	mov    r8,rbp
  41bdf9:	mov    rdx,rsi
  41bdfc:	call   0x4193f0
  41be01:	xor    eax,eax
  41be03:	test   edi,edi
  41be05:	jne    0x41bfa0
  41be0b:	add    rsp,0x188
  41be12:	pop    rbx
  41be13:	pop    rsi
  41be14:	pop    rdi
  41be15:	pop    rbp
  41be16:	pop    r12
  41be18:	pop    r13
  41be1a:	pop    r14
  41be1c:	pop    r15
  41be1e:	ret    
  41be1f:	nop
  41be20:	xor    edi,edi
  41be22:	jmp    0x41bda5
  41be24:	lea    r13,[rbx+0x1]
  41be28:	mov    edx,0x5c
  41be2d:	mov    rcx,r13
  41be30:	call   0x42de58
  41be35:	test   rax,rax
  41be38:	mov    r14,rax
  41be3b:	je     0x41c0c8
  41be41:	sub    rax,r13
  41be44:	cmp    rax,0x7f
  41be48:	jg     0x41bfa8
  41be4e:	lea    r8,[rsp+0x70]
  41be53:	cmp    rax,0x8
  41be57:	mov    rsi,r13
  41be5a:	mov    rdi,r8
  41be5d:	jb     0x41be69
  41be5f:	mov    rcx,rax
  41be62:	shr    rcx,0x3
  41be66:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41be69:	xor    edx,edx
  41be6b:	test   al,0x4
  41be6d:	je     0x41be78
  41be6f:	mov    edx,DWORD PTR [rsi]
  41be71:	mov    DWORD PTR [rdi],edx
  41be73:	mov    edx,0x4
  41be78:	test   al,0x2
  41be7a:	je     0x41be88
  41be7c:	movzx  ecx,WORD PTR [rsi+rdx*1]
  41be80:	mov    WORD PTR [rdi+rdx*1],cx
  41be84:	add    rdx,0x2
  41be88:	test   al,0x1
  41be8a:	je     0x41be93
  41be8c:	movzx  ecx,BYTE PTR [rsi+rdx*1]
  41be90:	mov    BYTE PTR [rdi+rdx*1],cl
  41be93:	mov    rcx,r8
  41be96:	mov    BYTE PTR [rsp+rax*1+0x70],0x0
  41be9b:	call   0x42ded0
  41bea0:	test   rax,rax
  41bea3:	mov    rdi,rax
  41bea6:	je     0x41c0dc
  41beac:	mov    rcx,rax
  41beaf:	call   0x42de30
  41beb4:	mov    rcx,r14
  41beb7:	mov    rsi,rax
  41beba:	call   0x42de30
  41bebf:	lea    rcx,[rsi+rax*1+0x2]
  41bec4:	mov    r13,rax
  41bec7:	call   0x41b230
  41becc:	mov    rbx,rax
  41becf:	mov    r8,rsi
  41bed2:	mov    rdx,rdi
  41bed5:	mov    rcx,rax
  41bed8:	add    rsi,rbx
  41bedb:	mov    edi,0x1
  41bee0:	call   0x42de98
  41bee5:	lea    rcx,[rsi+0x1]
  41bee9:	lea    r8,[r13+0x1]
  41beed:	mov    BYTE PTR [rsi],0x2f
  41bef0:	mov    rdx,r14
  41bef3:	call   0x42de98
  41bef8:	jmp    0x41bda5
  41befd:	nop    DWORD PTR [rax]
  41bf00:	mov    rcx,rbx
  41bf03:	call   0x42de30
  41bf08:	mov    rcx,QWORD PTR [rbp+0x38]
  41bf0c:	mov    r14,rax
  41bf0f:	call   0x42de30
  41bf14:	lea    r14,[r14+rax*1+0x2]
  41bf19:	mov    rcx,r14
  41bf1c:	call   0x41b230
  41bf21:	mov    r15,rax
  41bf24:	mov    rax,QWORD PTR [rbp+0x38]
  41bf28:	lea    r8,[rip+0x1ca6d]        # 0x43899c
  41bf2f:	mov    r9,rbx
  41bf32:	mov    rdx,r14
  41bf35:	mov    rcx,r15
  41bf38:	mov    QWORD PTR [rsp+0x20],rax
  41bf3d:	call   0x4197e0
  41bf42:	cdqe   
  41bf44:	cmp    r14,rax
  41bf47:	jbe    0x41c18d
  41bf4d:	test   edi,edi
  41bf4f:	jne    0x41c096
  41bf55:	mov    rdx,r13
  41bf58:	mov    rcx,r15
  41bf5b:	call   rsi
  41bf5d:	test   eax,eax
  41bf5f:	jne    0x41c0a3
  41bf65:	movzx  eax,WORD PTR [rsp+0x36]
  41bf6a:	and    ax,0xf000
  41bf6e:	cmp    ax,0x8000
  41bf72:	je     0x41c180
  41bf78:	mov    rbx,QWORD PTR [rip+0x15d61]        # 0x431ce0
  41bf7f:	mov    rsi,QWORD PTR [rbp+0x28]
  41bf83:	call   QWORD PTR [rip+0x2c857]        # 0x4487e0
  41bf89:	lea    rcx,[rax+0x60]
  41bf8d:	mov    r9,r15
  41bf90:	mov    rdx,rbx
  41bf93:	mov    r8,rsi
  41bf96:	mov    rbx,r15
  41bf99:	call   0x4193f0
  41bf9e:	xchg   ax,ax
  41bfa0:	mov    rcx,rbx
  41bfa3:	call   0x42df08
  41bfa8:	xor    eax,eax
  41bfaa:	jmp    0x41be0b
  41bfaf:	nop
  41bfb0:	mov    r15,QWORD PTR [rip+0x2c879]        # 0x448830
  41bfb7:	call   r15
  41bfba:	cmp    DWORD PTR [rax],0x2
  41bfbd:	jne    0x41c031
  41bfbf:	mov    edx,0x5c
  41bfc4:	mov    rcx,rbx
  41bfc7:	call   0x42de10
  41bfcc:	test   rax,rax
  41bfcf:	je     0x41c013
  41bfd1:	sub    rax,rbx
  41bfd4:	cmp    rax,0x103
  41bfda:	mov    r14,rax
  41bfdd:	ja     0x41c031
  41bfdf:	lea    r9,[rsp+0x70]
  41bfe4:	mov    r8,rax
  41bfe7:	mov    rdx,rbx
  41bfea:	mov    rcx,r9
  41bfed:	call   0x42de98
  41bff2:	mov    BYTE PTR [rsp+r14*1+0x70],0x0
  41bff8:	mov    rdx,r13
  41bffb:	mov    rcx,rax
  41bffe:	call   rsi
  41c000:	test   eax,eax
  41c002:	jne    0x41c031
  41c004:	movzx  eax,WORD PTR [rsp+0x36]
  41c009:	and    ax,0xf000
  41c00d:	cmp    ax,0x4000
  41c011:	jne    0x41c031
  41c013:	mov    edx,0xffff8000
  41c018:	mov    WORD PTR [rsp+0x36],dx
  41c01d:	mov    rcx,rbx
  41c020:	call   0x42dda8
  41c025:	mov    DWORD PTR [r12],edi
  41c029:	mov    rax,rbx
  41c02c:	jmp    0x41be0b
  41c031:	mov    r12,QWORD PTR [rbp+0x28]
  41c035:	mov    rbp,QWORD PTR [rip+0x15ca4]        # 0x431ce0
  41c03c:	mov    rsi,QWORD PTR [rip+0x2c79d]        # 0x4487e0
  41c043:	call   rsi
  41c045:	lea    rcx,[rax+0x60]
  41c049:	mov    r8,r12
  41c04c:	mov    rdx,rbp
  41c04f:	call   0x4193f0
  41c054:	call   r15
  41c057:	mov    ecx,DWORD PTR [rax]
  41c059:	call   0x42de40
  41c05e:	mov    r13,rax
  41c061:	call   r15
  41c064:	mov    rbp,QWORD PTR [rip+0x15bf5]        # 0x431c60
  41c06b:	mov    r12d,DWORD PTR [rax]
  41c06e:	call   rsi
  41c070:	lea    rcx,[rax+0x60]
  41c074:	mov    QWORD PTR [rsp+0x20],rbx
  41c079:	mov    r9,r13
  41c07c:	mov    r8d,r12d
  41c07f:	mov    rdx,rbp
  41c082:	call   0x4193f0
  41c087:	test   edi,edi
  41c089:	jne    0x41bfa0
  41c08f:	xor    eax,eax
  41c091:	jmp    0x41be0b
  41c096:	mov    rcx,rbx
  41c099:	call   0x42df08
  41c09e:	jmp    0x41bf55
  41c0a3:	mov    rbx,QWORD PTR [rip+0x2c786]        # 0x448830
  41c0aa:	call   rbx
  41c0ac:	cmp    DWORD PTR [rax],0x2
  41c0af:	jne    0x41c11e
  41c0b1:	mov    eax,0xffff8000
  41c0b6:	mov    rbx,r15
  41c0b9:	mov    edi,0x1
  41c0be:	mov    WORD PTR [rsp+0x36],ax
  41c0c3:	jmp    0x41c01d
  41c0c8:	mov    rcx,r13
  41c0cb:	call   0x42ded0
  41c0d0:	test   rax,rax
  41c0d3:	mov    rbx,rax
  41c0d6:	jne    0x41bda5
  41c0dc:	mov    rsi,QWORD PTR [rip+0x15bfd]        # 0x431ce0
  41c0e3:	mov    rdi,QWORD PTR [rbp+0x28]
  41c0e7:	mov    rbx,QWORD PTR [rip+0x2c6f2]        # 0x4487e0
  41c0ee:	call   rbx
  41c0f0:	lea    rcx,[rax+0x60]
  41c0f4:	mov    rdx,rsi
  41c0f7:	mov    r8,rdi
  41c0fa:	call   0x4193f0
  41c0ff:	mov    rsi,QWORD PTR [rip+0x15b7a]        # 0x431c80
  41c106:	call   rbx
  41c108:	lea    rcx,[rax+0x60]
  41c10c:	mov    r8,r13
  41c10f:	mov    rdx,rsi
  41c112:	call   0x4193f0
  41c117:	xor    eax,eax
  41c119:	jmp    0x41be0b
  41c11e:	mov    rbp,QWORD PTR [rbp+0x28]
  41c122:	mov    rdi,QWORD PTR [rip+0x15bb7]        # 0x431ce0
  41c129:	mov    rsi,QWORD PTR [rip+0x2c6b0]        # 0x4487e0
  41c130:	call   rsi
  41c132:	lea    rcx,[rax+0x60]
  41c136:	mov    r8,rbp
  41c139:	mov    rdx,rdi
  41c13c:	call   0x4193f0
  41c141:	call   rbx
  41c143:	mov    ecx,DWORD PTR [rax]
  41c145:	call   0x42de40
  41c14a:	mov    rbp,rax
  41c14d:	call   rbx
  41c14f:	mov    rbx,QWORD PTR [rip+0x15b0a]        # 0x431c60
  41c156:	mov    edi,DWORD PTR [rax]
  41c158:	call   rsi
  41c15a:	lea    rcx,[rax+0x60]
  41c15e:	mov    r9,rbp
  41c161:	mov    QWORD PTR [rsp+0x20],r15
  41c166:	mov    r8d,edi
  41c169:	mov    rdx,rbx
  41c16c:	call   0x4193f0
  41c171:	mov    rcx,r15
  41c174:	call   0x42df08
  41c179:	xor    eax,eax
  41c17b:	jmp    0x41be0b
  41c180:	mov    rbx,r15
  41c183:	mov    edi,0x1
  41c188:	jmp    0x41c01d
  41c18d:	mov    ecx,0x1
  41c192:	call   0x419830
  41c197:	nop
  41c198:	nop    DWORD PTR [rax+rax*1+0x0]
  41c1a0:	push   r15
  41c1a2:	push   r14
  41c1a4:	push   r13
  41c1a6:	push   r12
  41c1a8:	push   rbp
  41c1a9:	push   rdi
  41c1aa:	push   rsi
  41c1ab:	push   rbx
  41c1ac:	sub    rsp,0x148
  41c1b3:	test   rcx,rcx
  41c1b6:	mov    rsi,rcx
  41c1b9:	mov    rbx,rdx
  41c1bc:	je     0x41c269
  41c1c2:	lea    r12,[rsp+0x30]
  41c1c7:	xor    r13d,r13d
  41c1ca:	mov    rcx,rsi
  41c1cd:	call   0x42de30
  41c1d2:	mov    edx,r13d
  41c1d5:	cmp    rdx,rax
  41c1d8:	jae    0x41c269
  41c1de:	movsxd rax,r13d
  41c1e1:	add    rax,rsi
  41c1e4:	movzx  edx,BYTE PTR [rax]
  41c1e7:	cmp    dl,0x3a
  41c1ea:	jne    0x41c1fc
  41c1ec:	nop    DWORD PTR [rax+0x0]
  41c1f0:	add    rax,0x1
  41c1f4:	movzx  edx,BYTE PTR [rax]
  41c1f7:	cmp    dl,0x3a
  41c1fa:	je     0x41c1f0
  41c1fc:	mov    rcx,r12
  41c1ff:	add    rax,0x1
  41c203:	test   dl,dl
  41c205:	mov    BYTE PTR [rcx],dl
  41c207:	je     0x41c211
  41c209:	cmp    dl,0x3a
  41c20c:	jne    0x41c271
  41c20e:	mov    BYTE PTR [rcx],0x0
  41c211:	mov    r13d,eax
  41c214:	sub    r13d,esi
  41c217:	cmp    BYTE PTR [rsp+0x30],0x0
  41c21c:	je     0x41c269
  41c21e:	mov    rcx,r12
  41c221:	call   0x428420
  41c226:	test   rax,rax
  41c229:	mov    rdi,rax
  41c22c:	jne    0x41c240
  41c22e:	jmp    0x41c1ca
  41c230:	lea    rcx,[rax+0x8]
  41c234:	mov    rdx,rbx
  41c237:	call   0x42de50
  41c23c:	test   eax,eax
  41c23e:	je     0x41c290
  41c240:	mov    rcx,rdi
  41c243:	call   0x428600
  41c248:	test   rax,rax
  41c24b:	jne    0x41c230
  41c24d:	mov    rcx,rdi
  41c250:	call   0x428820
  41c255:	mov    rcx,rsi
  41c258:	call   0x42de30
  41c25d:	mov    edx,r13d
  41c260:	cmp    rdx,rax
  41c263:	jb     0x41c1de
  41c269:	xor    r14d,r14d
  41c26c:	jmp    0x41c46e
  41c271:	add    rcx,0x1
  41c275:	mov    rdx,rcx
  41c278:	sub    rdx,r12
  41c27b:	cmp    edx,0x103
  41c281:	ja     0x41c211
  41c283:	movzx  edx,BYTE PTR [rax]
  41c286:	jmp    0x41c1ff
  41c28b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c290:	cmp    BYTE PTR [rbx],0x2f
  41c293:	je     0x41c4ab
  41c299:	cmp    BYTE PTR [rsp+0x30],0x0
  41c29e:	jne    0x41c4bb
  41c2a4:	mov    rcx,rbx
  41c2a7:	call   0x42de30
  41c2ac:	lea    rcx,[rax+0x3]
  41c2b0:	call   0x42dea8
  41c2b5:	lea    rcx,[rax+0x2]
  41c2b9:	mov    rbp,rax
  41c2bc:	mov    BYTE PTR [rax],0x2e
  41c2bf:	mov    BYTE PTR [rax+0x1],0x2f
  41c2c3:	mov    BYTE PTR [rax+0x2],0x0
  41c2c7:	mov    rdx,rbx
  41c2ca:	call   0x42de48
  41c2cf:	mov    rcx,rbp
  41c2d2:	mov    edx,0x5
  41c2d7:	call   0x42dd70
  41c2dc:	test   eax,eax
  41c2de:	mov    rcx,rbp
  41c2e1:	js     0x41c491
  41c2e7:	call   0x42dd98
  41c2ec:	cmp    BYTE PTR [rbp+0x0],0x2f
  41c2f0:	mov    r14,rax
  41c2f3:	sete   BYTE PTR [rsp+0x2f]
  41c2f8:	movzx  eax,BYTE PTR [rsp+0x2f]
  41c2fd:	xor    r15d,r15d
  41c300:	xor    r13d,r13d
  41c303:	add    eax,0x2e
  41c306:	mov    BYTE PTR [rsp+0x2f],al
  41c30a:	movzx  eax,BYTE PTR [r14]
  41c30e:	xchg   ax,ax
  41c310:	test   al,al
  41c312:	mov    rbx,r13
  41c315:	je     0x41c447
  41c31b:	cmp    al,0x2f
  41c31d:	je     0x41c485
  41c323:	add    rbx,0x1
  41c327:	mov    esi,r15d
  41c32a:	jmp    0x41c337
  41c32c:	nop    DWORD PTR [rax+0x0]
  41c330:	test   dl,dl
  41c332:	je     0x41c348
  41c334:	mov    rbx,rcx
  41c337:	movzx  edx,BYTE PTR [r14+rbx*1]
  41c33c:	add    esi,0x1
  41c33f:	lea    rcx,[rbx+0x1]
  41c343:	cmp    dl,0x2f
  41c346:	jne    0x41c330
  41c348:	test   dl,dl
  41c34a:	lea    r15d,[rsi+0x1]
  41c34e:	je     0x41c447
  41c354:	movsxd r13,r15d
  41c357:	lea    r12,[r14+r13*1]
  41c35b:	movzx  eax,BYTE PTR [r12]
  41c360:	cmp    al,0x2f
  41c362:	jne    0x41c396
  41c364:	lea    r8,[r14+r13*1+0x1]
  41c369:	mov    r9d,r15d
  41c36c:	nop    DWORD PTR [rax+0x0]
  41c370:	mov    rdx,r8
  41c373:	add    r8,0x1
  41c377:	add    r9d,0x1
  41c37b:	cmp    BYTE PTR [r8-0x1],0x2f
  41c380:	je     0x41c370
  41c382:	cmp    r15d,r9d
  41c385:	je     0x41c396
  41c387:	lea    rcx,[r14+rbx*1+0x1]
  41c38c:	call   0x42de48
  41c391:	movzx  eax,BYTE PTR [r12]
  41c396:	test   esi,esi
  41c398:	je     0x41c3ae
  41c39a:	cmp    BYTE PTR [r14+rbx*1-0x1],0x5c
  41c3a0:	je     0x41c310
  41c3a6:	test   al,al
  41c3a8:	je     0x41c539
  41c3ae:	cmp    al,0x2e
  41c3b0:	jne    0x41c310
  41c3b6:	lea    rdx,[r14+r13*1+0x1]
  41c3bb:	movzx  ecx,BYTE PTR [rdx]
  41c3be:	test   cl,cl
  41c3c0:	je     0x41c539
  41c3c6:	cmp    cl,0x2f
  41c3c9:	je     0x41c4a3
  41c3cf:	cmp    cl,0x2e
  41c3d2:	jne    0x41c310
  41c3d8:	lea    rdx,[r14+r13*1+0x2]
  41c3dd:	movzx  ecx,BYTE PTR [rdx]
  41c3e0:	test   cl,cl
  41c3e2:	je     0x41c3ed
  41c3e4:	cmp    cl,0x2f
  41c3e7:	jne    0x41c310
  41c3ed:	movsxd rcx,esi
  41c3f0:	sub    rcx,0x1
  41c3f4:	jmp    0x41c40f
  41c3f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c400:	lea    rax,[rcx-0x1]
  41c404:	cmp    BYTE PTR [r14+rax*1+0x1],0x2f
  41c40a:	je     0x41c41e
  41c40c:	mov    rcx,rax
  41c40f:	sub    esi,0x1
  41c412:	cmp    esi,0xffffffff
  41c415:	jne    0x41c400
  41c417:	mov    rcx,0xffffffffffffffff
  41c41e:	lea    rcx,[r14+rcx*1+0x1]
  41c423:	call   0x42de48
  41c428:	mov    r15d,0x0
  41c42e:	test   esi,esi
  41c430:	cmovns r15d,esi
  41c434:	movsxd r13,r15d
  41c437:	movzx  eax,BYTE PTR [r14+r13*1]
  41c43c:	mov    rbx,r13
  41c43f:	test   al,al
  41c441:	jne    0x41c31b
  41c447:	cmp    BYTE PTR [r14],0x0
  41c44b:	jne    0x41c54e
  41c451:	movzx  eax,BYTE PTR [rsp+0x2f]
  41c456:	mov    rcx,rbp
  41c459:	mov    BYTE PTR [r14+0x1],0x0
  41c45e:	mov    BYTE PTR [r14],al
  41c461:	call   0x42df08
  41c466:	mov    rcx,rdi
  41c469:	call   0x428820
  41c46e:	mov    rax,r14
  41c471:	add    rsp,0x148
  41c478:	pop    rbx
  41c479:	pop    rsi
  41c47a:	pop    rdi
  41c47b:	pop    rbp
  41c47c:	pop    r12
  41c47e:	pop    r13
  41c480:	pop    r14
  41c482:	pop    r15
  41c484:	ret    
  41c485:	mov    esi,r15d
  41c488:	add    r15d,0x1
  41c48c:	jmp    0x41c354
  41c491:	call   0x42df08
  41c496:	mov    rcx,rdi
  41c499:	call   0x428820
  41c49e:	jmp    0x41c255
  41c4a3:	mov    rcx,r12
  41c4a6:	jmp    0x41c423
  41c4ab:	mov    rcx,rbx
  41c4ae:	call   0x42dd98
  41c4b3:	mov    rbp,rax
  41c4b6:	jmp    0x41c2cf
  41c4bb:	mov    r14,r12
  41c4be:	mov    edx,DWORD PTR [r14]
  41c4c1:	add    r14,0x4
  41c4c5:	lea    eax,[rdx-0x1010101]
  41c4cb:	not    edx
  41c4cd:	and    eax,edx
  41c4cf:	and    eax,0x80808080
  41c4d4:	je     0x41c4be
  41c4d6:	mov    edx,eax
  41c4d8:	mov    rcx,rbx
  41c4db:	shr    edx,0x10
  41c4de:	test   eax,0x8080
  41c4e3:	cmove  eax,edx
  41c4e6:	lea    rdx,[r14+0x2]
  41c4ea:	cmove  r14,rdx
  41c4ee:	add    al,al
  41c4f0:	sbb    r14,0x3
  41c4f4:	sub    r14,r12
  41c4f7:	call   0x42de30
  41c4fc:	lea    rcx,[r14+rax*1+0x2]
  41c501:	call   0x42dea8
  41c506:	lea    r8,[r14+0x1]
  41c50a:	mov    rcx,rax
  41c50d:	mov    rdx,r12
  41c510:	mov    rbp,rax
  41c513:	call   0x42de98
  41c518:	movsxd rcx,r14d
  41c51b:	cmp    BYTE PTR [rbp+rcx*1-0x1],0x2f
  41c520:	je     0x41c563
  41c522:	mov    BYTE PTR [rbp+rcx*1+0x0],0x2f
  41c527:	lea    ecx,[r14+0x1]
  41c52b:	movsxd rcx,ecx
  41c52e:	add    rcx,rbp
  41c531:	mov    BYTE PTR [rcx],0x0
  41c534:	jmp    0x41c2c7
  41c539:	lea    eax,[r15-0x1]
  41c53d:	cdqe   
  41c53f:	mov    BYTE PTR [r14+rax*1],0x0
  41c544:	cmp    BYTE PTR [r14],0x0
  41c548:	je     0x41c451
  41c54e:	mov    rcx,rbp
  41c551:	call   0x42df08
  41c556:	mov    rcx,rdi
  41c559:	call   0x428820
  41c55e:	jmp    0x41c46e
  41c563:	add    rcx,rbp
  41c566:	jmp    0x41c2c7
  41c56b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c570:	push   r12
  41c572:	push   rbp
  41c573:	push   rdi
  41c574:	push   rsi
  41c575:	push   rbx
  41c576:	sub    rsp,0x30
  41c57a:	test   rcx,rcx
  41c57d:	mov    rbx,rcx
  41c580:	mov    rdi,rdx
  41c583:	je     0x41c708
  41c589:	mov    r9d,DWORD PTR [rcx+0x10]
  41c58d:	mov    eax,r9d
  41c590:	shr    eax,0x15
  41c593:	and    eax,0x1
  41c596:	test   r9d,0x2000
  41c59d:	mov    BYTE PTR [rip+0x27991],al        # 0x443f34
  41c5a3:	je     0x41c5d2
  41c5a5:	mov    rax,QWORD PTR [rcx+0xa0]
  41c5ac:	test   rax,rax
  41c5af:	je     0x41c5d2
  41c5b1:	mov    edx,DWORD PTR [rip+0x15549]        # 0x431b00
  41c5b7:	test   edx,edx
  41c5b9:	je     0x41c5d2
  41c5bb:	mov    edx,r9d
  41c5be:	and    edx,0x30000
  41c5c4:	cmp    edx,0x20000
  41c5ca:	je     0x41c661
  41c5d0:	call   rax
  41c5d2:	mov    esi,DWORD PTR [rbx]
  41c5d4:	lea    eax,[rsi-0x19000]
  41c5da:	cmp    eax,0x10001
  41c5df:	ja     0x41c679
  41c5e5:	cmp    QWORD PTR [rbx+0x28],0x0
  41c5ea:	je     0x41c600
  41c5ec:	xor    eax,eax
  41c5ee:	add    rsp,0x30
  41c5f2:	pop    rbx
  41c5f3:	pop    rsi
  41c5f4:	pop    rdi
  41c5f5:	pop    rbp
  41c5f6:	pop    r12
  41c5f8:	ret    
  41c5f9:	nop    DWORD PTR [rax+0x0]
  41c600:	mov    edx,0x5c
  41c605:	mov    rcx,rdi
  41c608:	call   0x42de10
  41c60d:	test   rax,rax
  41c610:	je     0x41c673
  41c612:	add    rax,0x1
  41c616:	mov    QWORD PTR [rbx+0x28],rax
  41c61a:	lea    rcx,[rip+0x1c381]        # 0x4389a2
  41c621:	call   0x42ded0
  41c626:	mov    rdx,rdi
  41c629:	mov    rcx,rax
  41c62c:	call   0x41c1a0
  41c631:	test   rax,rax
  41c634:	lea    rdx,[rip+0x1d705]        # 0x439d40
  41c63b:	lea    rcx,[rip+0x1507e]        # 0x4316c0
  41c642:	cmove  rax,rdi
  41c646:	mov    QWORD PTR [rbx+0x20],rax
  41c64a:	mov    eax,0x2d
  41c64f:	nop
  41c650:	add    rdx,0x1
  41c654:	mov    BYTE PTR [rcx+rax*1],0x2d
  41c658:	movzx  eax,BYTE PTR [rdx]
  41c65b:	test   al,al
  41c65d:	jne    0x41c650
  41c65f:	jmp    0x41c5ec
  41c661:	or     r9d,0x10000
  41c668:	mov    DWORD PTR [rcx+0x10],r9d
  41c66c:	call   rax
  41c66e:	jmp    0x41c5d2
  41c673:	mov    QWORD PTR [rbx+0x28],rdi
  41c677:	jmp    0x41c61a
  41c679:	mov    r12,QWORD PTR [rip+0x154c0]        # 0x431b40
  41c680:	mov    rbp,QWORD PTR [rip+0x2c159]        # 0x4487e0
  41c687:	call   rbp
  41c689:	lea    rcx,[rax+0x60]
  41c68d:	mov    eax,esi
  41c68f:	mov    r8,rdi
  41c692:	and    eax,0x7f
  41c695:	mov    rdx,r12
  41c698:	mov    DWORD PTR [rsp+0x28],eax
  41c69c:	mov    eax,esi
  41c69e:	sar    esi,0xc
  41c6a1:	sar    eax,0x7
  41c6a4:	mov    r9d,esi
  41c6a7:	and    eax,0x1f
  41c6aa:	mov    DWORD PTR [rsp+0x20],eax
  41c6ae:	call   0x4193f0
  41c6b3:	cmp    DWORD PTR [rbx],0x29001
  41c6b9:	jle    0x41c6f4
  41c6bb:	call   rbp
  41c6bd:	mov    rcx,QWORD PTR [rip+0x15474]        # 0x431b38
  41c6c4:	lea    rdx,[rax+0x60]
  41c6c8:	call   0x42df18
  41c6cd:	call   rbp
  41c6cf:	lea    rcx,[rip+0x20167]        # 0x43c83d
  41c6d6:	lea    r9,[rax+0x60]
  41c6da:	mov    r8d,0x1
  41c6e0:	mov    edx,0x8
  41c6e5:	call   0x42dee0
  41c6ea:	mov    eax,0xffffffff
  41c6ef:	jmp    0x41c5ee
  41c6f4:	call   rbp
  41c6f6:	mov    rcx,QWORD PTR [rip+0x15453]        # 0x431b50
  41c6fd:	lea    rdx,[rax+0x60]
  41c701:	call   0x42df18
  41c706:	jmp    0x41c6cd
  41c708:	call   QWORD PTR [rip+0x2c0d2]        # 0x4487e0
  41c70e:	mov    rcx,QWORD PTR [rip+0x1541b]        # 0x431b30
  41c715:	lea    rdx,[rax+0x60]
  41c719:	call   0x42df18
  41c71e:	mov    eax,0xffffffff
  41c723:	jmp    0x41c5ee
  41c728:	nop    DWORD PTR [rax+rax*1+0x0]
  41c730:	push   r15
  41c732:	push   r14
  41c734:	push   r13
  41c736:	push   r12
  41c738:	push   rbp
  41c739:	push   rdi
  41c73a:	push   rsi
  41c73b:	push   rbx
  41c73c:	sub    rsp,0x98
  41c743:	test   BYTE PTR [rcx+0x12],0x4
  41c747:	mov    rbx,rcx
  41c74a:	mov    rdi,rdx
  41c74d:	mov    rbp,r8
  41c750:	je     0x41c75d
  41c752:	cmp    WORD PTR [rdx+0x6],0x57
  41c757:	je     0x41cb6e
  41c75d:	cmp    QWORD PTR [rdi+0x28],0x0
  41c762:	je     0x41ca50
  41c768:	mov    eax,DWORD PTR [rip+0x277c2]        # 0x443f30
  41c76e:	lea    rsi,[rip+0x1d5cb]        # 0x439d40
  41c775:	mov    rdx,QWORD PTR [rip+0x2778c]        # 0x443f08
  41c77c:	lea    rcx,[rsi+rax*1+0xcb]
  41c784:	call   0x42df18
  41c789:	mov    rbp,QWORD PTR [rdi+0x28]
  41c78d:	test   rbp,rbp
  41c790:	je     0x41c822
  41c796:	cmp    DWORD PTR [rbp+0x4],0x8000
  41c79d:	je     0x41ca60
  41c7a3:	mov    rdx,QWORD PTR [rip+0x2775e]        # 0x443f08
  41c7aa:	mov    rcx,QWORD PTR [rip+0x15677]        # 0x431e28
  41c7b1:	call   0x42df18
  41c7b6:	movsxd rax,DWORD PTR [rbp+0x0]
  41c7ba:	nop    WORD PTR [rax+rax*1+0x0]
  41c7c0:	lea    rdx,[rax+rax*2]
  41c7c4:	mov    r9,QWORD PTR [rbx+0x78]
  41c7c8:	mov    rcx,QWORD PTR [rip+0x27739]        # 0x443f08
  41c7cf:	add    rbp,0x4
  41c7d3:	lea    rax,[rax+rdx*4]
  41c7d7:	mov    edx,DWORD PTR [rip+0x27753]        # 0x443f30
  41c7dd:	lea    rax,[r9+rax*8]
  41c7e1:	mov    r8,QWORD PTR [rax+0x50]
  41c7e5:	lea    rdx,[rsi+rdx*1+0xe5]
  41c7ed:	call   0x4193f0
  41c7f2:	movsxd rax,DWORD PTR [rbp+0x0]
  41c7f6:	cmp    eax,0x8000
  41c7fb:	jne    0x41c7c0
  41c7fd:	cmp    QWORD PTR [rdi+0x30],0x0
  41c802:	je     0x41c88d
  41c808:	mov    eax,DWORD PTR [rip+0x27722]        # 0x443f30
  41c80e:	mov    rdx,QWORD PTR [rip+0x276f3]        # 0x443f08
  41c815:	lea    rcx,[rsi+rax*1+0xd9]
  41c81d:	call   0x42df18
  41c822:	mov    rbp,QWORD PTR [rdi+0x30]
  41c826:	test   rbp,rbp
  41c829:	je     0x41c88d
  41c82b:	cmp    DWORD PTR [rbp+0x4],0x8000
  41c832:	je     0x41caf2
  41c838:	mov    rdx,QWORD PTR [rip+0x276c9]        # 0x443f08
  41c83f:	mov    rcx,QWORD PTR [rip+0x15582]        # 0x431dc8
  41c846:	call   0x42df18
  41c84b:	movsxd rax,DWORD PTR [rbp+0x0]
  41c84f:	nop
  41c850:	lea    rdx,[rax+rax*2]
  41c854:	mov    rcx,QWORD PTR [rbx+0x78]
  41c858:	add    rbp,0x4
  41c85c:	lea    rax,[rax+rdx*4]
  41c860:	mov    edx,DWORD PTR [rip+0x276ca]        # 0x443f30
  41c866:	lea    rax,[rcx+rax*8]
  41c86a:	mov    rcx,QWORD PTR [rip+0x27697]        # 0x443f08
  41c871:	mov    r8,QWORD PTR [rax+0x50]
  41c875:	lea    rdx,[rsi+rdx*1+0xe5]
  41c87d:	call   0x4193f0
  41c882:	movsxd rax,DWORD PTR [rbp+0x0]
  41c886:	cmp    eax,0x8000
  41c88b:	jne    0x41c850
  41c88d:	mov    r8,QWORD PTR [rdi+0x58]
  41c891:	test   r8,r8
  41c894:	je     0x41c8af
  41c896:	mov    edx,DWORD PTR [rip+0x27694]        # 0x443f30
  41c89c:	mov    rcx,QWORD PTR [rip+0x27665]        # 0x443f08
  41c8a3:	add    rdx,QWORD PTR [rip+0x15456]        # 0x431d00
  41c8aa:	call   0x4193f0
  41c8af:	mov    edx,DWORD PTR [rdi+0x10]
  41c8b2:	mov    eax,edx
  41c8b4:	and    eax,0xf000
  41c8b9:	shr    eax,0xc
  41c8bc:	cmp    eax,0x5
  41c8bf:	je     0x41ca20
  41c8c5:	cmp    eax,0x7
  41c8c8:	je     0x41c9a0
  41c8ce:	and    dh,0x8
  41c8d1:	jne    0x41c9b7
  41c8d7:	movzx  eax,WORD PTR [rdi+0x8]
  41c8db:	cmp    ax,0x8000
  41c8df:	je     0x41c8eb
  41c8e1:	cmp    ax,WORD PTR [rdi+0x4]
  41c8e5:	jne    0x41c9d5
  41c8eb:	mov    eax,DWORD PTR [rdi+0x10]
  41c8ee:	test   ah,0x1
  41c8f1:	je     0x41c90d
  41c8f3:	cmp    QWORD PTR [rbx+0x58],0x0
  41c8f8:	je     0x41cb5e
  41c8fe:	movzx  edx,WORD PTR [rdi]
  41c901:	cmp    edx,DWORD PTR [rbx+0xb4]
  41c907:	jl     0x41cad1
  41c90d:	and    eax,0xf000
  41c912:	cmp    eax,0x4000
  41c917:	je     0x41cb40
  41c91d:	movzx  r8d,WORD PTR [rdi+0xa]
  41c922:	cmp    r8w,0x1
  41c927:	ja     0x41ca90
  41c92d:	movzx  r8d,WORD PTR [rdi+0xc]
  41c932:	cmp    r8w,0x1
  41c937:	je     0x41c963
  41c939:	jb     0x41cb22
  41c93f:	cmp    r8w,0xffff
  41c944:	jne    0x41cab3
  41c94a:	mov    ecx,DWORD PTR [rip+0x275e0]        # 0x443f30
  41c950:	mov    rdx,QWORD PTR [rip+0x275b1]        # 0x443f08
  41c957:	add    rcx,QWORD PTR [rip+0x15412]        # 0x431d70
  41c95e:	call   0x42df18
  41c963:	test   BYTE PTR [rbx+0x10],0x3
  41c967:	jne    0x41ca03
  41c96d:	movzx  eax,WORD PTR [rdi]
  41c970:	cmp    WORD PTR [rbx+0xae],ax
  41c977:	jne    0x41ca03
  41c97d:	mov    ecx,DWORD PTR [rip+0x275ad]        # 0x443f30
  41c983:	mov    rdx,QWORD PTR [rip+0x2757e]        # 0x443f08
  41c98a:	add    rcx,QWORD PTR [rip+0x15367]        # 0x431cf8
  41c991:	call   0x42df18
  41c996:	jmp    0x41ca03
  41c998:	nop    DWORD PTR [rax+rax*1+0x0]
  41c9a0:	mov    rdx,rdi
  41c9a3:	mov    ecx,0x1
  41c9a8:	call   QWORD PTR [rdi+0x38]
  41c9ab:	mov    edx,DWORD PTR [rdi+0x10]
  41c9ae:	and    dh,0x8
  41c9b1:	je     0x41c8d7
  41c9b7:	mov    ecx,DWORD PTR [rip+0x27573]        # 0x443f30
  41c9bd:	mov    rdx,QWORD PTR [rip+0x27544]        # 0x443f08
  41c9c4:	add    rcx,QWORD PTR [rip+0x1534d]        # 0x431d18
  41c9cb:	call   0x42df18
  41c9d0:	jmp    0x41c8d7
  41c9d5:	lea    rdx,[rax+rax*2]
  41c9d9:	mov    rcx,QWORD PTR [rip+0x27528]        # 0x443f08
  41c9e0:	lea    rax,[rax+rdx*4]
  41c9e4:	mov    rdx,QWORD PTR [rbx+0x78]
  41c9e8:	lea    rax,[rdx+rax*8]
  41c9ec:	mov    edx,DWORD PTR [rip+0x2753e]        # 0x443f30
  41c9f2:	add    rdx,QWORD PTR [rip+0x152ef]        # 0x431ce8
  41c9f9:	mov    r8,QWORD PTR [rax+0x50]
  41c9fd:	call   0x4193f0
  41ca02:	nop
  41ca03:	add    rsp,0x98
  41ca0a:	pop    rbx
  41ca0b:	pop    rsi
  41ca0c:	pop    rdi
  41ca0d:	pop    rbp
  41ca0e:	pop    r12
  41ca10:	pop    r13
  41ca12:	pop    r14
  41ca14:	pop    r15
  41ca16:	ret    
  41ca17:	nop    WORD PTR [rax+rax*1+0x0]
  41ca20:	mov    rax,QWORD PTR [rdi+0x38]
  41ca24:	test   rax,rax
  41ca27:	je     0x41c8ce
  41ca2d:	lea    rcx,[rip+0xffffffffffffc9ec]        # 0x419420
  41ca34:	cmp    rax,rcx
  41ca37:	je     0x41c8ce
  41ca3d:	mov    rdx,rdi
  41ca40:	mov    ecx,0x1
  41ca45:	call   rax
  41ca47:	mov    edx,DWORD PTR [rdi+0x10]
  41ca4a:	jmp    0x41c8ce
  41ca4f:	nop
  41ca50:	cmp    QWORD PTR [rdi+0x30],0x0
  41ca55:	jne    0x41c768
  41ca5b:	jmp    0x41c88d
  41ca60:	movsxd rax,DWORD PTR [rbp+0x0]
  41ca64:	mov    r10,QWORD PTR [rbx+0x78]
  41ca68:	mov    rcx,QWORD PTR [rip+0x27499]        # 0x443f08
  41ca6f:	lea    rdx,[rax+rax*2]
  41ca73:	lea    rax,[rax+rdx*4]
  41ca77:	mov    rdx,QWORD PTR [rip+0x153a2]        # 0x431e20
  41ca7e:	lea    rax,[r10+rax*8]
  41ca82:	mov    r8,QWORD PTR [rax+0x50]
  41ca86:	call   0x4193f0
  41ca8b:	jmp    0x41c7fd
  41ca90:	mov    edx,DWORD PTR [rip+0x2749a]        # 0x443f30
  41ca96:	movzx  r9d,WORD PTR [rdi+0xc]
  41ca9b:	add    rdx,QWORD PTR [rip+0x152be]        # 0x431d60
  41caa2:	mov    rcx,QWORD PTR [rip+0x2745f]        # 0x443f08
  41caa9:	call   0x4193f0
  41caae:	jmp    0x41c963
  41cab3:	mov    edx,DWORD PTR [rip+0x27477]        # 0x443f30
  41cab9:	mov    rcx,QWORD PTR [rip+0x27448]        # 0x443f08
  41cac0:	add    rdx,QWORD PTR [rip+0x15381]        # 0x431e48
  41cac7:	call   0x4193f0
  41cacc:	jmp    0x41c963
  41cad1:	mov    ecx,DWORD PTR [rip+0x27459]        # 0x443f30
  41cad7:	mov    rdx,QWORD PTR [rip+0x2742a]        # 0x443f08
  41cade:	add    rcx,QWORD PTR [rip+0x15293]        # 0x431d78
  41cae5:	call   0x42df18
  41caea:	mov    eax,DWORD PTR [rdi+0x10]
  41caed:	jmp    0x41c90d
  41caf2:	movsxd rax,DWORD PTR [rbp+0x0]
  41caf6:	mov    r8,QWORD PTR [rbx+0x78]
  41cafa:	mov    rcx,QWORD PTR [rip+0x27407]        # 0x443f08
  41cb01:	lea    rdx,[rax+rax*2]
  41cb05:	lea    rax,[rax+rdx*4]
  41cb09:	mov    rdx,QWORD PTR [rip+0x152c0]        # 0x431dd0
  41cb10:	lea    rax,[r8+rax*8]
  41cb14:	mov    r8,QWORD PTR [rax+0x50]
  41cb18:	call   0x4193f0
  41cb1d:	jmp    0x41c88d
  41cb22:	mov    ecx,DWORD PTR [rip+0x27408]        # 0x443f30
  41cb28:	mov    rdx,QWORD PTR [rip+0x273d9]        # 0x443f08
  41cb2f:	add    rcx,QWORD PTR [rip+0x15282]        # 0x431db8
  41cb36:	call   0x42df18
  41cb3b:	jmp    0x41c963
  41cb40:	mov    ecx,DWORD PTR [rip+0x273ea]        # 0x443f30
  41cb46:	mov    rdx,QWORD PTR [rip+0x273bb]        # 0x443f08
  41cb4d:	add    rcx,QWORD PTR [rip+0x15204]        # 0x431d58
  41cb54:	call   0x42df18
  41cb59:	jmp    0x41c963
  41cb5e:	cmp    QWORD PTR [rbx+0x30],0x0
  41cb63:	jne    0x41c8fe
  41cb69:	jmp    0x41c90d
  41cb6e:	mov    eax,DWORD PTR [rip+0x273bc]        # 0x443f30
  41cb74:	lea    rdx,[rip+0x1d1c5]        # 0x439d40
  41cb7b:	mov    edi,DWORD PTR [rcx+0xb4]
  41cb81:	mov    rsi,QWORD PTR [rcx+0x78]
  41cb85:	mov    r8,QWORD PTR [rip+0x152d4]        # 0x431e60
  41cb8c:	xor    r12d,r12d
  41cb8f:	mov    rcx,QWORD PTR [rip+0x27372]        # 0x443f08
  41cb96:	lea    rdx,[rdx+rax*1+0xe5]
  41cb9e:	call   0x4193f0
  41cba3:	test   DWORD PTR [rsi+0x10],0x6280000
  41cbaa:	jne    0x41cbd2
  41cbac:	movzx  eax,BYTE PTR [rsi+0x2]
  41cbb0:	cmp    al,0x7f
  41cbb2:	ja     0x41cbc2
  41cbb4:	lea    rdx,[rip+0x1fd85]        # 0x43c940
  41cbbb:	test   BYTE PTR [rdx+rax*4+0x1],0x40
  41cbc0:	jne    0x41cbd2
  41cbc2:	mov    rcx,QWORD PTR [rsi+0x50]
  41cbc6:	call   0x42de30
  41cbcb:	cmp    r12,rax
  41cbce:	cmovb  r12,rax
  41cbd2:	sub    edi,0x1
  41cbd5:	add    rsi,0x68
  41cbd9:	test   edi,edi
  41cbdb:	jg     0x41cba3
  41cbdd:	lea    r14,[rsp+0x30]
  41cbe2:	lea    r9d,[r12+0x4]
  41cbe7:	lea    r8,[rip+0x1c327]        # 0x438f15
  41cbee:	mov    edx,0xc
  41cbf3:	mov    rcx,r14
  41cbf6:	call   0x4197e0
  41cbfb:	mov    eax,DWORD PTR [rip+0x2732f]        # 0x443f30
  41cc01:	test   eax,eax
  41cc03:	je     0x41cc0e
  41cc05:	sub    eax,0x1
  41cc08:	mov    DWORD PTR [rip+0x27322],eax        # 0x443f30
  41cc0e:	mov    r15d,DWORD PTR [rbx+0xb4]
  41cc15:	mov    rsi,QWORD PTR [rbx+0x78]
  41cc19:	lea    r12,[rbx+0x10]
  41cc1d:	lea    r13,[rsp+0x40]
  41cc22:	test   DWORD PTR [rsi+0x10],0x6280000
  41cc29:	jne    0x41cd00
  41cc2f:	movzx  eax,BYTE PTR [rsi+0x2]
  41cc33:	cmp    al,0x7f
  41cc35:	ja     0x41cc49
  41cc37:	lea    rdx,[rip+0x1fd02]        # 0x43c940
  41cc3e:	test   BYTE PTR [rdx+rax*4+0x1],0x40
  41cc43:	jne    0x41cd00
  41cc49:	lea    rdx,[rsi+0x2]
  41cc4d:	lea    r9,[rip+0x273cc]        # 0x444020
  41cc54:	lea    r8,[rip+0x273bd]        # 0x444018
  41cc5b:	mov    rcx,r12
  41cc5e:	call   0x41ac60
  41cc63:	mov    eax,DWORD PTR [rsi+0x10]
  41cc66:	test   eax,0x10000
  41cc6b:	je     0x41cd32
  41cc71:	mov    rdi,QWORD PTR [rip+0x27388]        # 0x444000
  41cc78:	mov    rax,QWORD PTR [rip+0x27421]        # 0x4440a0
  41cc7f:	test   rax,rax
  41cc82:	jne    0x41cc94
  41cc84:	jmp    0x41cddd
  41cc89:	nop    DWORD PTR [rax+0x0]
  41cc90:	add    rdi,0x1
  41cc94:	movzx  ecx,BYTE PTR [rdi]
  41cc97:	cmp    BYTE PTR [rax+rcx*1],0x0
  41cc9b:	jne    0x41cc90
  41cc9d:	test   cl,cl
  41cc9f:	mov    r9,QWORD PTR [rsi+0x50]
  41cca3:	jne    0x41cdbf
  41cca9:	lea    r8,[rip+0x1bcf7]        # 0x4389a7
  41ccb0:	mov    edx,0x50
  41ccb5:	mov    rcx,r13
  41ccb8:	call   0x4197e0
  41ccbd:	mov    r9,QWORD PTR [rsi+0x40]
  41ccc1:	mov    rcx,QWORD PTR [rip+0x27240]        # 0x443f08
  41ccc8:	mov    r8,r13
  41cccb:	mov    rdx,r14
  41ccce:	call   0x4193f0
  41ccd3:	mov    eax,DWORD PTR [rsi+0x10]
  41ccd6:	and    eax,0xf000
  41ccdb:	shr    eax,0xc
  41ccde:	cmp    eax,0x2
  41cce1:	je     0x41cd16
  41cce3:	cmp    eax,0x4
  41cce6:	je     0x41cd16
  41cce8:	mov    r8,rbp
  41cceb:	mov    rdx,rsi
  41ccee:	mov    rcx,rbx
  41ccf1:	call   0x41c730
  41ccf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cd00:	sub    r15d,0x1
  41cd04:	add    rsi,0x68
  41cd08:	test   r15d,r15d
  41cd0b:	jg     0x41cc22
  41cd11:	jmp    0x41ca03
  41cd16:	movzx  eax,BYTE PTR [rip+0x27243]        # 0x443f60
  41cd1d:	cmp    QWORD PTR [rsi+0x38],0x0
  41cd22:	mov    edx,0x1
  41cd27:	cmovne eax,edx
  41cd2a:	mov    BYTE PTR [rip+0x27230],al        # 0x443f60
  41cd30:	jmp    0x41cce8
  41cd32:	and    eax,0xf000
  41cd37:	shr    eax,0xc
  41cd3a:	cmp    eax,0x8
  41cd3d:	ja     0x41cdec
  41cd43:	lea    rdi,[rip+0x1bc66]        # 0x4389b0
  41cd4a:	movsxd rax,DWORD PTR [rdi+rax*4]
  41cd4e:	add    rax,rdi
  41cd51:	jmp    rax
  41cd53:	mov    rdi,QWORD PTR [rip+0x2727e]        # 0x443fd8
  41cd5a:	jmp    0x41cc78
  41cd5f:	mov    rdi,QWORD PTR [rip+0x27292]        # 0x443ff8
  41cd66:	jmp    0x41cc78
  41cd6b:	mov    rdi,QWORD PTR [rip+0x2725e]        # 0x443fd0
  41cd72:	jmp    0x41cc78
  41cd77:	mov    rdi,QWORD PTR [rip+0x2726a]        # 0x443fe8
  41cd7e:	jmp    0x41cc78
  41cd83:	mov    rdi,QWORD PTR [rip+0x27266]        # 0x443ff0
  41cd8a:	jmp    0x41cc78
  41cd8f:	mov    rdi,QWORD PTR [rip+0x2724a]        # 0x443fe0
  41cd96:	jmp    0x41cc78
  41cd9b:	mov    rdi,QWORD PTR [rip+0x2721e]        # 0x443fc0
  41cda2:	jmp    0x41cc78
  41cda7:	mov    rdi,QWORD PTR [rip+0x2725a]        # 0x444008
  41cdae:	jmp    0x41cc78
  41cdb3:	mov    rdi,QWORD PTR [rip+0x27276]        # 0x444030
  41cdba:	jmp    0x41cc78
  41cdbf:	lea    r8,[rip+0x1bbe4]        # 0x4389aa
  41cdc6:	mov    QWORD PTR [rsp+0x20],rdi
  41cdcb:	mov    edx,0x50
  41cdd0:	mov    rcx,r13
  41cdd3:	call   0x4197e0
  41cdd8:	jmp    0x41ccbd
  41cddd:	mov    ecx,0xc
  41cde2:	call   0x41ad40
  41cde7:	jmp    0x41cc94
  41cdec:	mov    rdi,QWORD PTR [rsi+0x50]
  41cdf0:	mov    rsi,QWORD PTR [rbx+0x28]
  41cdf4:	mov    rbx,QWORD PTR [rip+0x14e15]        # 0x431c10
  41cdfb:	call   QWORD PTR [rip+0x2b9df]        # 0x4487e0
  41ce01:	lea    rcx,[rax+0x60]
  41ce05:	mov    r9,rdi
  41ce08:	mov    r8,rsi
  41ce0b:	mov    rdx,rbx
  41ce0e:	call   0x4193f0
  41ce13:	mov    rcx,QWORD PTR [rip+0x14d66]        # 0x431b80
  41ce1a:	call   0x419860
  41ce1f:	nop
  41ce20:	push   r15
  41ce22:	push   r14
  41ce24:	push   r13
  41ce26:	push   r12
  41ce28:	push   rbp
  41ce29:	push   rdi
  41ce2a:	push   rsi
  41ce2b:	push   rbx
  41ce2c:	sub    rsp,0x98
  41ce33:	mov    rax,QWORD PTR [rcx+0x78]
  41ce37:	mov    r13d,DWORD PTR [rcx+0xb0]
  41ce3e:	xor    r15d,r15d
  41ce41:	mov    rdi,rcx
  41ce44:	mov    ebp,edx
  41ce46:	mov    QWORD PTR [rsp+0xf0],r8
  41ce4e:	xor    r14d,r14d
  41ce51:	lea    rbx,[rax+0x2]
  41ce55:	lea    rax,[rcx+0x10]
  41ce59:	mov    QWORD PTR [rsp+0x38],rax
  41ce5e:	lea    rax,[rsp+0x40]
  41ce63:	mov    QWORD PTR [rsp+0x30],rax
  41ce68:	mov    eax,r15d
  41ce6b:	mov    r15d,r13d
  41ce6e:	mov    r13d,eax
  41ce71:	jmp    0x41ce93
  41ce73:	cmp    eax,0x80100
  41ce78:	je     0x41d042
  41ce7e:	sub    r15d,0x1
  41ce82:	add    r13d,0x1
  41ce86:	add    rbx,0x68
  41ce8a:	test   r15d,r15d
  41ce8d:	jle    0x41d0c0
  41ce93:	mov    eax,DWORD PTR [rbx+0xe]
  41ce96:	lea    rsi,[rbx-0x2]
  41ce9a:	test   eax,0x6080000
  41ce9f:	jne    0x41ce73
  41cea1:	test   eax,0x200000
  41cea6:	je     0x41ced1
  41cea8:	test   ebp,ebp
  41ceaa:	jne    0x41ce7e
  41ceac:	mov    r9,QWORD PTR [rsp+0xf0]
  41ceb4:	mov    r8,QWORD PTR [rbx+0x3e]
  41ceb8:	add    r14d,0x1
  41cebc:	mov    rdx,QWORD PTR [rip+0x2714d]        # 0x444010
  41cec3:	mov    rcx,QWORD PTR [rip+0x2703e]        # 0x443f08
  41ceca:	call   0x4193f0
  41cecf:	jmp    0x41ce7e
  41ced1:	mov    eax,DWORD PTR [rdi+0x10]
  41ced4:	and    eax,0x40000
  41ced9:	je     0x41cef1
  41cedb:	movzx  edx,BYTE PTR [rbx]
  41cede:	cmp    dl,0x7f
  41cee1:	ja     0x41ce7e
  41cee3:	lea    rcx,[rip+0x1fa56]        # 0x43c940
  41ceea:	test   BYTE PTR [rcx+rdx*4+0x1],0x40
  41ceef:	je     0x41ce7e
  41cef1:	test   ebp,ebp
  41cef3:	sete   r12b
  41cef7:	test   r14d,r14d
  41cefa:	jle    0x41cf40
  41cefc:	test   r12b,r12b
  41ceff:	je     0x41cf40
  41cf01:	cmp    DWORD PTR [rdi+0xb4],r13d
  41cf08:	je     0x41d0f0
  41cf0e:	cmp    r15d,0x1
  41cf12:	jne    0x41cf40
  41cf14:	test   eax,eax
  41cf16:	je     0x41cf40
  41cf18:	mov    r9,QWORD PTR [rsp+0xf0]
  41cf20:	mov    r8,QWORD PTR [rip+0x14f31]        # 0x431e58
  41cf27:	mov    rdx,QWORD PTR [rip+0x270e2]        # 0x444010
  41cf2e:	mov    rcx,QWORD PTR [rip+0x26fd3]        # 0x443f08
  41cf35:	call   0x4193f0
  41cf3a:	nop    WORD PTR [rax+rax*1+0x0]
  41cf40:	mov    rcx,QWORD PTR [rsp+0x38]
  41cf45:	lea    r9,[rip+0x270d4]        # 0x444020
  41cf4c:	lea    r8,[rip+0x270c5]        # 0x444018
  41cf53:	mov    rdx,rbx
  41cf56:	call   0x41ac60
  41cf5b:	mov    eax,DWORD PTR [rbx+0xe]
  41cf5e:	mov    r9,QWORD PTR [rip+0x2709b]        # 0x444000
  41cf65:	test   eax,0x10000
  41cf6a:	jne    0x41cf94
  41cf6c:	and    eax,0xf000
  41cf71:	shr    eax,0xc
  41cf74:	cmp    eax,0x8
  41cf77:	ja     0x41d1d7
  41cf7d:	lea    rdx,[rip+0x1ba5c]        # 0x4389e0
  41cf84:	movsxd rax,DWORD PTR [rdx+rax*4]
  41cf88:	add    rdx,rax
  41cf8b:	jmp    rdx
  41cf8d:	mov    r9,QWORD PTR [rip+0x2709c]        # 0x444030
  41cf94:	mov    r8,QWORD PTR [rip+0x2708d]        # 0x444028
  41cf9b:	lea    rax,[rip+0x1cde9]        # 0x439d8b
  41cfa2:	cmp    r8,rax
  41cfa5:	je     0x41d181
  41cfab:	lea    rax,[rip+0x1cddb]        # 0x439d8d
  41cfb2:	cmp    r8,rax
  41cfb5:	je     0x41d1b0
  41cfbb:	cmp    WORD PTR [rbx+0x8],0x0
  41cfc0:	mov    rax,QWORD PTR [rip+0x27039]        # 0x444000
  41cfc7:	mov    edx,0x50
  41cfcc:	cmovne rax,QWORD PTR [rip+0x26ff4]        # 0x443fc8
  41cfd4:	mov    rcx,QWORD PTR [rsp+0x30]
  41cfd9:	mov    QWORD PTR [rsp+0x28],rax
  41cfde:	mov    rax,QWORD PTR [rbx+0x4e]
  41cfe2:	mov    QWORD PTR [rsp+0x20],rax
  41cfe7:	call   0x4197e0
  41cfec:	mov    r9,QWORD PTR [rbx+0x3e]
  41cff0:	mov    r8,QWORD PTR [rsp+0x30]
  41cff5:	lea    rdx,[rip+0x26f84]        # 0x443f80
  41cffc:	mov    rcx,QWORD PTR [rip+0x26f05]        # 0x443f08
  41d003:	call   0x4193f0
  41d008:	mov    eax,DWORD PTR [rbx+0xe]
  41d00b:	and    eax,0xf000
  41d010:	shr    eax,0xc
  41d013:	cmp    eax,0x2
  41d016:	je     0x41d0a0
  41d01c:	cmp    eax,0x4
  41d01f:	je     0x41d0a0
  41d021:	test   r12b,r12b
  41d024:	je     0x41ce7e
  41d02a:	mov    r8,QWORD PTR [rsp+0xf0]
  41d032:	mov    rdx,rsi
  41d035:	mov    rcx,rdi
  41d038:	call   0x41c730
  41d03d:	jmp    0x41ce7e
  41d042:	cmp    QWORD PTR [rbx+0x4e],0x0
  41d047:	je     0x41ce7e
  41d04d:	test   ebp,ebp
  41d04f:	jne    0x41ce7e
  41d055:	mov    rsi,QWORD PTR [rbx+0x3e]
  41d059:	mov    rcx,QWORD PTR [rsp+0x38]
  41d05e:	lea    r9,[rip+0x26fbb]        # 0x444020
  41d065:	lea    r8,[rip+0x26fac]        # 0x444018
  41d06c:	mov    rdx,rbx
  41d06f:	test   rsi,rsi
  41d072:	cmove  rsi,QWORD PTR [rip+0x14c96]        # 0x431d10
  41d07a:	call   0x41ac60
  41d07f:	mov    r8,QWORD PTR [rbx+0x4e]
  41d083:	mov    rdx,QWORD PTR [rip+0x14c7e]        # 0x431d08
  41d08a:	mov    rcx,QWORD PTR [rip+0x26e77]        # 0x443f08
  41d091:	mov    r9,rsi
  41d094:	call   0x4193f0
  41d099:	jmp    0x41ce7e
  41d09e:	xchg   ax,ax
  41d0a0:	movzx  eax,BYTE PTR [rip+0x26eb9]        # 0x443f60
  41d0a7:	cmp    QWORD PTR [rbx+0x36],0x0
  41d0ac:	mov    edx,0x1
  41d0b1:	cmovne eax,edx
  41d0b4:	mov    BYTE PTR [rip+0x26ea6],al        # 0x443f60
  41d0ba:	jmp    0x41d021
  41d0bf:	nop
  41d0c0:	mov    rdx,QWORD PTR [rip+0x26e41]        # 0x443f08
  41d0c7:	mov    ecx,0xa
  41d0cc:	call   0x42df20
  41d0d1:	nop
  41d0d2:	add    rsp,0x98
  41d0d9:	pop    rbx
  41d0da:	pop    rsi
  41d0db:	pop    rdi
  41d0dc:	pop    rbp
  41d0dd:	pop    r12
  41d0df:	pop    r13
  41d0e1:	pop    r14
  41d0e3:	pop    r15
  41d0e5:	ret    
  41d0e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d0f0:	test   BYTE PTR [rbx-0x58],0x20
  41d0f4:	jne    0x41cf40
  41d0fa:	mov    r9,QWORD PTR [rsp+0xf0]
  41d102:	mov    r8,QWORD PTR [rip+0x14be7]        # 0x431cf0
  41d109:	mov    rdx,QWORD PTR [rip+0x26f00]        # 0x444010
  41d110:	mov    rcx,QWORD PTR [rip+0x26df1]        # 0x443f08
  41d117:	call   0x4193f0
  41d11c:	jmp    0x41cf40
  41d121:	mov    r9,QWORD PTR [rip+0x26eb0]        # 0x443fd8
  41d128:	jmp    0x41cf94
  41d12d:	mov    r9,QWORD PTR [rip+0x26ed4]        # 0x444008
  41d134:	jmp    0x41cf94
  41d139:	mov    r9,QWORD PTR [rip+0x26e80]        # 0x443fc0
  41d140:	jmp    0x41cf94
  41d145:	mov    r9,QWORD PTR [rip+0x26e94]        # 0x443fe0
  41d14c:	jmp    0x41cf94
  41d151:	mov    r9,QWORD PTR [rip+0x26e98]        # 0x443ff0
  41d158:	jmp    0x41cf94
  41d15d:	mov    r9,QWORD PTR [rip+0x26e84]        # 0x443fe8
  41d164:	jmp    0x41cf94
  41d169:	mov    r9,QWORD PTR [rip+0x26e60]        # 0x443fd0
  41d170:	jmp    0x41cf94
  41d175:	mov    r9,QWORD PTR [rip+0x26e7c]        # 0x443ff8
  41d17c:	jmp    0x41cf94
  41d181:	mov    rax,QWORD PTR [rbx+0x4e]
  41d185:	mov    rcx,QWORD PTR [rsp+0x30]
  41d18a:	lea    r8,[rip+0x1b843]        # 0x4389d4
  41d191:	mov    QWORD PTR [rsp+0x20],r9
  41d196:	mov    edx,0x50
  41d19b:	mov    r9,rax
  41d19e:	call   0x4197e0
  41d1a3:	jmp    0x41cfec
  41d1a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d1b0:	mov    rax,QWORD PTR [rbx+0x4e]
  41d1b4:	mov    rcx,QWORD PTR [rsp+0x30]
  41d1b9:	lea    r8,[rip+0x1b81b]        # 0x4389db
  41d1c0:	mov    QWORD PTR [rsp+0x20],r9
  41d1c5:	mov    edx,0x50
  41d1ca:	mov    r9,rax
  41d1cd:	call   0x4197e0
  41d1d2:	jmp    0x41cfec
  41d1d7:	mov    rbp,QWORD PTR [rsi+0x50]
  41d1db:	mov    rbx,QWORD PTR [rip+0x14a2e]        # 0x431c10
  41d1e2:	mov    rsi,QWORD PTR [rdi+0x28]
  41d1e6:	call   QWORD PTR [rip+0x2b5f4]        # 0x4487e0
  41d1ec:	lea    rcx,[rax+0x60]
  41d1f0:	mov    r9,rbp
  41d1f3:	mov    rdx,rbx
  41d1f6:	mov    r8,rsi
  41d1f9:	call   0x4193f0
  41d1fe:	mov    ecx,0x46
  41d203:	call   0x419830
  41d208:	nop
  41d209:	nop    DWORD PTR [rax+0x0]
  41d210:	push   r15
  41d212:	push   r14
  41d214:	push   r13
  41d216:	push   r12
  41d218:	push   rbp
  41d219:	push   rdi
  41d21a:	push   rsi
  41d21b:	push   rbx
  41d21c:	sub    rsp,0x38
  41d220:	lea    r13,[rip+0x1c8d9]        # 0x439b00
  41d227:	lea    r12,[rip+0x1b7d6]        # 0x438a04
  41d22e:	mov    rbx,rcx
  41d231:	mov    QWORD PTR [rsp+0x88],rdx
  41d239:	mov    r14,r8
  41d23c:	mov    rax,QWORD PTR [rip+0x26ea5]        # 0x4440e8
  41d243:	test   rax,rax
  41d246:	je     0x41d5f5
  41d24c:	movzx  edx,BYTE PTR [rbx]
  41d24f:	cmp    BYTE PTR [rax+rdx*1],0x0
  41d253:	mov    rcx,rdx
  41d256:	je     0x41d2f8
  41d25c:	mov    rsi,rbx
  41d25f:	nop
  41d260:	add    rsi,0x1
  41d264:	movzx  edx,BYTE PTR [rsi]
  41d267:	cmp    BYTE PTR [rax+rdx*1],0x0
  41d26b:	mov    rdi,rdx
  41d26e:	jne    0x41d260
  41d270:	mov    r10,rsi
  41d273:	mov    rbp,rsi
  41d276:	sub    r10,rbx
  41d279:	lea    eax,[r10-0x4]
  41d27d:	cmp    eax,0x4
  41d280:	ja     0x41d2f8
  41d282:	lea    rdx,[rip+0x1beb7]        # 0x439140
  41d289:	movzx  eax,cl
  41d28c:	movzx  r9d,BYTE PTR [rdx+rax*1]
  41d291:	add    r9d,r10d
  41d294:	cmp    r9d,0x9
  41d298:	ja     0x41d2f8
  41d29a:	movsxd r9,r9d
  41d29d:	shl    r9,0x4
  41d2a1:	lea    r15,[r13+r9*1+0x0]
  41d2a6:	mov    r11,QWORD PTR [r15]
  41d2a9:	cmp    cl,BYTE PTR [r11]
  41d2ac:	jne    0x41d2f8
  41d2ae:	lea    rdx,[r11+0x1]
  41d2b2:	lea    rcx,[rbx+0x1]
  41d2b6:	lea    r8d,[r10-0x1]
  41d2ba:	mov    QWORD PTR [rsp+0x28],r11
  41d2bf:	mov    QWORD PTR [rsp+0x20],r10
  41d2c4:	call   0x42de28
  41d2c9:	test   eax,eax
  41d2cb:	jne    0x41d2f8
  41d2cd:	mov    r10,QWORD PTR [rsp+0x20]
  41d2d2:	mov    r11,QWORD PTR [rsp+0x28]
  41d2d7:	mov    r10d,r10d
  41d2da:	cmp    BYTE PTR [r11+r10*1],0x0
  41d2df:	jne    0x41d2f8
  41d2e1:	cmp    DWORD PTR [r15+0x8],0x6
  41d2e6:	ja     0x41d2f8
  41d2e8:	mov    eax,DWORD PTR [r15+0x8]
  41d2ec:	movsxd rax,DWORD PTR [r12+rax*4]
  41d2f0:	add    rax,r12
  41d2f3:	jmp    rax
  41d2f5:	mov    rbx,rsi
  41d2f8:	mov    rax,QWORD PTR [rip+0x26e49]        # 0x444148
  41d2ff:	mov    DWORD PTR [r14],0x0
  41d306:	test   rax,rax
  41d309:	jne    0x41d32a
  41d30b:	mov    ecx,0x21
  41d310:	call   0x41ad40
  41d315:	jmp    0x41d32a
  41d317:	nop    WORD PTR [rax+rax*1+0x0]
  41d320:	cmp    BYTE PTR [rax+rdx*1],0x0
  41d324:	jne    0x41d34b
  41d326:	add    rbx,0x1
  41d32a:	movzx  edx,BYTE PTR [rbx]
  41d32d:	test   dl,dl
  41d32f:	jne    0x41d320
  41d331:	xor    eax,eax
  41d333:	add    rsp,0x38
  41d337:	pop    rbx
  41d338:	pop    rsi
  41d339:	pop    rdi
  41d33a:	pop    rbp
  41d33b:	pop    r12
  41d33d:	pop    r13
  41d33f:	pop    r14
  41d341:	pop    r15
  41d343:	ret    
  41d344:	mov    DWORD PTR [r14],0x0
  41d34b:	mov    rax,rbx
  41d34e:	jmp    0x41d333
  41d350:	cmp    dil,0x7f
  41d354:	ja     0x41d2f5
  41d356:	lea    rax,[rip+0x1f5e3]        # 0x43c940
  41d35d:	test   DWORD PTR [rax+rdi*4],0x1000c01
  41d364:	je     0x41d2f5
  41d366:	mov    rax,QWORD PTR [rsp+0x88]
  41d36e:	mov    rbx,rsi
  41d371:	mov    DWORD PTR [rax],0x2
  41d377:	mov    rax,QWORD PTR [rip+0x26d22]        # 0x4440a0
  41d37e:	test   rax,rax
  41d381:	jne    0x41d394
  41d383:	jmp    0x41d604
  41d388:	nop    DWORD PTR [rax+rax*1+0x0]
  41d390:	add    rbx,0x1
  41d394:	movzx  ecx,BYTE PTR [rbx]
  41d397:	cmp    BYTE PTR [rax+rcx*1],0x0
  41d39b:	jne    0x41d390
  41d39d:	cmp    cl,0x2f
  41d3a0:	je     0x41d344
  41d3a2:	cmp    cl,0x3e
  41d3a5:	je     0x41d34b
  41d3a7:	cmp    cl,0x7f
  41d3aa:	ja     0x41d331
  41d3ac:	lea    rax,[rip+0x1f58d]        # 0x43c940
  41d3b3:	test   BYTE PTR [rax+rcx*4+0x2],0x8
  41d3b8:	jne    0x41d23c
  41d3be:	jmp    0x41d331
  41d3c3:	cmp    dil,0x3d
  41d3c7:	lea    rbp,[rsi+0x1]
  41d3cb:	je     0x41d4f4
  41d3d1:	xor    edi,edi
  41d3d3:	mov    rax,QWORD PTR [rip+0x26d6e]        # 0x444148
  41d3da:	add    rbp,rdi
  41d3dd:	mov    DWORD PTR [r14],0x0
  41d3e4:	test   rax,rax
  41d3e7:	je     0x41d679
  41d3ed:	movzx  edx,BYTE PTR [rbp+0x0]
  41d3f1:	test   dl,dl
  41d3f3:	jne    0x41d410
  41d3f5:	jmp    0x41d331
  41d3fa:	nop    WORD PTR [rax+rax*1+0x0]
  41d400:	add    rbp,0x1
  41d404:	movzx  edx,BYTE PTR [rbp+0x0]
  41d408:	test   dl,dl
  41d40a:	je     0x41d331
  41d410:	cmp    BYTE PTR [rax+rdx*1],0x0
  41d414:	je     0x41d400
  41d416:	mov    rbx,rbp
  41d419:	jmp    0x41d377
  41d41e:	xchg   ax,ax
  41d420:	mov    rax,QWORD PTR [rip+0x26d21]        # 0x444148
  41d427:	test   rax,rax
  41d42a:	je     0x41d66a
  41d430:	movzx  edx,BYTE PTR [rsi]
  41d433:	test   dl,dl
  41d435:	jne    0x41d450
  41d437:	jmp    0x41d331
  41d43c:	nop    DWORD PTR [rax+0x0]
  41d440:	add    rbp,0x1
  41d444:	movzx  edx,BYTE PTR [rbp+0x0]
  41d448:	test   dl,dl
  41d44a:	je     0x41d331
  41d450:	cmp    BYTE PTR [rax+rdx*1],0x0
  41d454:	je     0x41d440
  41d456:	jmp    0x41d416
  41d458:	mov    rax,QWORD PTR [rip+0x26ce9]        # 0x444148
  41d45f:	test   rax,rax
  41d462:	je     0x41d65b
  41d468:	movzx  edx,BYTE PTR [rsi]
  41d46b:	test   dl,dl
  41d46d:	jne    0x41d484
  41d46f:	jmp    0x41d331
  41d474:	add    rbp,0x1
  41d478:	movzx  edx,BYTE PTR [rbp+0x0]
  41d47c:	test   dl,dl
  41d47e:	je     0x41d331
  41d484:	cmp    BYTE PTR [rax+rdx*1],0x0
  41d488:	je     0x41d474
  41d48a:	jmp    0x41d416
  41d48c:	cmp    dil,0x7f
  41d490:	ja     0x41d2f5
  41d496:	lea    rax,[rip+0x1f4a3]        # 0x43c940
  41d49d:	test   DWORD PTR [rax+rdi*4],0x1000c01
  41d4a4:	je     0x41d2f5
  41d4aa:	mov    rax,QWORD PTR [rsp+0x88]
  41d4b2:	mov    rbx,rsi
  41d4b5:	mov    DWORD PTR [rax],0x0
  41d4bb:	jmp    0x41d377
  41d4c0:	cmp    dil,0x7f
  41d4c4:	ja     0x41d2f5
  41d4ca:	lea    rax,[rip+0x1f46f]        # 0x43c940
  41d4d1:	test   DWORD PTR [rax+rdi*4],0x1000c01
  41d4d8:	je     0x41d2f5
  41d4de:	mov    rax,QWORD PTR [rsp+0x88]
  41d4e6:	mov    rbx,rsi
  41d4e9:	mov    DWORD PTR [rax],0x1
  41d4ef:	jmp    0x41d377
  41d4f4:	mov    rax,QWORD PTR [rip+0x26c1d]        # 0x444118
  41d4fb:	test   rax,rax
  41d4fe:	je     0x41d688
  41d504:	movzx  edx,BYTE PTR [rsi+0x1]
  41d508:	cmp    BYTE PTR [rax+rdx*1],0x0
  41d50c:	mov    r8,rdx
  41d50f:	je     0x41d3d1
  41d515:	mov    rbx,rbp
  41d518:	nop    DWORD PTR [rax+rax*1+0x0]
  41d520:	add    rbx,0x1
  41d524:	movzx  ecx,BYTE PTR [rbx]
  41d527:	cmp    BYTE PTR [rax+rcx*1],0x0
  41d52b:	jne    0x41d520
  41d52d:	mov    rdi,rbx
  41d530:	sub    rdi,rbp
  41d533:	je     0x41d3d1
  41d539:	cmp    cl,0x7f
  41d53c:	ja     0x41d3d3
  41d542:	lea    rax,[rip+0x1f3f7]        # 0x43c940
  41d549:	test   DWORD PTR [rax+rcx*4],0x1000c01
  41d550:	je     0x41d3d3
  41d556:	lea    eax,[rdi-0x3]
  41d559:	mov    r11d,edi
  41d55c:	cmp    eax,0xb
  41d55f:	ja     0x41d3d3
  41d565:	lea    rdx,[rip+0x1bcd4]        # 0x439240
  41d56c:	movzx  eax,r8b
  41d570:	movzx  eax,BYTE PTR [rdx+rax*1]
  41d574:	add    eax,edi
  41d576:	cmp    eax,0x11
  41d579:	ja     0x41d3d3
  41d57f:	movsxd r9,eax
  41d582:	lea    rax,[rip+0x1c677]        # 0x439c00
  41d589:	shl    r9,0x4
  41d58d:	add    r9,rax
  41d590:	mov    r10,QWORD PTR [r9]
  41d593:	mov    QWORD PTR [rsp+0x28],r9
  41d598:	cmp    BYTE PTR [r10],r8b
  41d59b:	jne    0x41d3d3
  41d5a1:	lea    rdx,[r10+0x1]
  41d5a5:	lea    rcx,[rsi+0x2]
  41d5a9:	lea    r8d,[r11-0x1]
  41d5ad:	mov    QWORD PTR [rsp+0x20],r10
  41d5b2:	call   0x42de28
  41d5b7:	test   eax,eax
  41d5b9:	jne    0x41d3d3
  41d5bf:	mov    r10,QWORD PTR [rsp+0x20]
  41d5c4:	mov    eax,edi
  41d5c6:	cmp    BYTE PTR [r10+rax*1],0x0
  41d5cb:	jne    0x41d3d3
  41d5d1:	mov    r9,QWORD PTR [rsp+0x28]
  41d5d6:	cmp    DWORD PTR [r9+0x8],0x9
  41d5db:	ja     0x41d3d3
  41d5e1:	mov    edx,DWORD PTR [r9+0x8]
  41d5e5:	lea    rax,[rip+0x1b434]        # 0x438a20
  41d5ec:	movsxd rdx,DWORD PTR [rax+rdx*4]
  41d5f0:	add    rax,rdx
  41d5f3:	jmp    rax
  41d5f5:	mov    ecx,0x15
  41d5fa:	call   0x41ad40
  41d5ff:	jmp    0x41d24c
  41d604:	mov    ecx,0xc
  41d609:	call   0x41ad40
  41d60e:	jmp    0x41d394
  41d613:	mov    DWORD PTR [r14],0x6
  41d61a:	jmp    0x41d377
  41d61f:	mov    DWORD PTR [r14],0x4
  41d626:	jmp    0x41d377
  41d62b:	mov    DWORD PTR [r14],0x2
  41d632:	jmp    0x41d377
  41d637:	mov    DWORD PTR [r14],0x3
  41d63e:	jmp    0x41d377
  41d643:	mov    DWORD PTR [r14],0x5
  41d64a:	jmp    0x41d377
  41d64f:	mov    DWORD PTR [r14],0x1
  41d656:	jmp    0x41d377
  41d65b:	mov    ecx,0x21
  41d660:	call   0x41ad40
  41d665:	jmp    0x41d468
  41d66a:	mov    ecx,0x21
  41d66f:	call   0x41ad40
  41d674:	jmp    0x41d430
  41d679:	mov    ecx,0x21
  41d67e:	call   0x41ad40
  41d683:	jmp    0x41d3ed
  41d688:	mov    ecx,0x1b
  41d68d:	call   0x41ad40
  41d692:	jmp    0x41d504
  41d697:	nop    WORD PTR [rax+rax*1+0x0]
  41d6a0:	push   r15
  41d6a2:	push   r14
  41d6a4:	push   r13
  41d6a6:	push   r12
  41d6a8:	push   rbp
  41d6a9:	push   rdi
  41d6aa:	push   rsi
  41d6ab:	push   rbx
  41d6ac:	sub    rsp,0x48
  41d6b0:	mov    rsi,QWORD PTR [rip+0x2b2d1]        # 0x448988
  41d6b7:	mov    rbx,rcx
  41d6ba:	jmp    0x41d6c4
  41d6bc:	nop    DWORD PTR [rax+0x0]
  41d6c0:	add    rbx,0x1
  41d6c4:	movzx  ebp,BYTE PTR [rbx]
  41d6c7:	mov    ecx,ebp
  41d6c9:	call   rsi
  41d6cb:	test   eax,eax
  41d6cd:	jne    0x41d6c0
  41d6cf:	cmp    bpl,0x50
  41d6d3:	je     0x41d860
  41d6d9:	cmp    bpl,0x54
  41d6dd:	je     0x41d804
  41d6e3:	sub    ebp,0x30
  41d6e6:	cmp    ebp,0x9
  41d6e9:	ja     0x41dd03
  41d6ef:	mov    rbp,QWORD PTR [rip+0x2b13a]        # 0x448830
  41d6f6:	lea    r13,[rsp+0x30]
  41d6fb:	mov    QWORD PTR [rsp+0x30],rbx
  41d700:	xor    edi,edi
  41d702:	xor    r12d,r12d
  41d705:	call   rbp
  41d707:	mov    rcx,QWORD PTR [rsp+0x30]
  41d70c:	mov    r8d,0xa
  41d712:	mov    rdx,r13
  41d715:	mov    DWORD PTR [rax],0x0
  41d71b:	call   0x42de00
  41d720:	movsxd r14,eax
  41d723:	call   rbp
  41d725:	mov    ecx,DWORD PTR [rax]
  41d727:	test   ecx,ecx
  41d729:	jne    0x41d7f3
  41d72f:	mov    rbx,QWORD PTR [rsp+0x30]
  41d734:	movzx  r15d,BYTE PTR [rbx]
  41d738:	cmp    r15b,0x3a
  41d73c:	jne    0x41d74c
  41d73e:	jmp    0x41db8b
  41d743:	mov    QWORD PTR [rsp+0x30],rbx
  41d748:	movzx  r15d,BYTE PTR [rbx]
  41d74c:	add    rbx,0x1
  41d750:	movzx  ecx,r15b
  41d754:	call   rsi
  41d756:	test   eax,eax
  41d758:	jne    0x41d743
  41d75a:	cmp    r15b,0x59
  41d75e:	je     0x41d9eb
  41d764:	jle    0x41d820
  41d76a:	cmp    r15b,0x6d
  41d76e:	je     0x41da1d
  41d774:	jg     0x41d990
  41d77a:	cmp    r15b,0x64
  41d77e:	je     0x41da02
  41d784:	cmp    r15b,0x68
  41d788:	jne    0x41d7f3
  41d78a:	cmp    r12d,0x4
  41d78e:	ja     0x41d7f3
  41d790:	mov    r8d,0xe10
  41d796:	mov    r12d,0x5
  41d79c:	nop    DWORD PTR [rax+0x0]
  41d7a0:	mov    rcx,rdi
  41d7a3:	mov    rdx,r14
  41d7a6:	call   0x41a3b0
  41d7ab:	mov    rdi,rax
  41d7ae:	mov    rax,QWORD PTR [rsp+0x30]
  41d7b3:	lea    rbx,[rax+0x1]
  41d7b7:	mov    QWORD PTR [rsp+0x30],rbx
  41d7bc:	jmp    0x41d7c5
  41d7be:	xchg   ax,ax
  41d7c0:	mov    QWORD PTR [rsp+0x30],rbx
  41d7c5:	movzx  r14d,BYTE PTR [rbx]
  41d7c9:	add    rbx,0x1
  41d7cd:	mov    ecx,r14d
  41d7d0:	call   rsi
  41d7d2:	test   eax,eax
  41d7d4:	jne    0x41d7c0
  41d7d6:	test   r14b,r14b
  41d7d9:	je     0x41dcfb
  41d7df:	sub    r14d,0x30
  41d7e3:	cmp    r14d,0x9
  41d7e7:	ja     0x41d7f3
  41d7e9:	cmp    r12d,0x7
  41d7ed:	jne    0x41d705
  41d7f3:	call   rbp
  41d7f5:	mov    DWORD PTR [rax],0x16
  41d7fb:	mov    rax,0xffffffffffffffff
  41d802:	jmp    0x41d80d
  41d804:	lea    rcx,[rbx+0x1]
  41d808:	call   0x41a510
  41d80d:	add    rsp,0x48
  41d811:	pop    rbx
  41d812:	pop    rsi
  41d813:	pop    rdi
  41d814:	pop    rbp
  41d815:	pop    r12
  41d817:	pop    r13
  41d819:	pop    r14
  41d81b:	pop    r15
  41d81d:	ret    
  41d81e:	xchg   ax,ax
  41d820:	cmp    r15b,0x44
  41d824:	je     0x41da02
  41d82a:	jle    0x41d9c2
  41d830:	cmp    r15b,0x4d
  41d834:	je     0x41d9a7
  41d83a:	cmp    r15b,0x57
  41d83e:	jne    0x41d7f3
  41d840:	cmp    r12d,0x2
  41d844:	ja     0x41d7f3
  41d846:	mov    r8d,0x93a80
  41d84c:	mov    r12d,0x3
  41d852:	jmp    0x41d7a0
  41d857:	nop    WORD PTR [rax+rax*1+0x0]
  41d860:	lea    rcx,[rbx+0x1]
  41d864:	call   0x42dd98
  41d869:	test   rax,rax
  41d86c:	mov    r13,rax
  41d86f:	je     0x41dd36
  41d875:	mov    edx,0x54
  41d87a:	mov    rcx,rax
  41d87d:	call   0x42de58
  41d882:	test   rax,rax
  41d885:	mov    r12,rax
  41d888:	je     0x41db80
  41d88e:	lea    rdi,[rax+0x1]
  41d892:	mov    rcx,r13
  41d895:	mov    BYTE PTR [rax],0x0
  41d898:	call   0x419390
  41d89d:	mov    rcx,rdi
  41d8a0:	mov    rbx,rax
  41d8a3:	call   0x419390
  41d8a8:	test   rax,rax
  41d8ab:	mov    r12,rax
  41d8ae:	setne  r14b
  41d8b2:	mov    edx,0x2d
  41d8b7:	mov    rcx,rbx
  41d8ba:	call   0x42de58
  41d8bf:	test   rax,rax
  41d8c2:	je     0x41da38
  41d8c8:	lea    rsi,[rsp+0x20]
  41d8cd:	mov    r8,rax
  41d8d0:	xor    ecx,ecx
  41d8d2:	mov    r9d,0x1e13380
  41d8d8:	mov    QWORD PTR [rsp+0x20],rbx
  41d8dd:	mov    rdx,rsi
  41d8e0:	call   0x41a440
  41d8e5:	mov    rbx,rax
  41d8e8:	mov    rax,QWORD PTR [rsp+0x20]
  41d8ed:	mov    edx,0x2d
  41d8f2:	lea    rcx,[rax+0x1]
  41d8f6:	mov    QWORD PTR [rsp+0x20],rcx
  41d8fb:	call   0x42de58
  41d900:	test   rax,rax
  41d903:	mov    r8,rax
  41d906:	je     0x41dd1b
  41d90c:	mov    r9d,0x278d00
  41d912:	mov    rdx,rsi
  41d915:	mov    rcx,rbx
  41d918:	call   0x41a440
  41d91d:	mov    rdi,rax
  41d920:	mov    rax,QWORD PTR [rsp+0x20]
  41d925:	lea    rbx,[rax+0x1]
  41d929:	mov    rcx,rbx
  41d92c:	mov    QWORD PTR [rsp+0x20],rbx
  41d931:	call   0x42de30
  41d936:	lea    r8,[rbx+rax*1]
  41d93a:	mov    rcx,rdi
  41d93d:	mov    r9d,0x15180
  41d943:	mov    rdx,rsi
  41d946:	call   0x41a440
  41d94b:	mov    rbp,QWORD PTR [rip+0x2aede]        # 0x448830
  41d952:	mov    rdi,rax
  41d955:	call   rbp
  41d957:	mov    r8d,DWORD PTR [rax]
  41d95a:	test   r8d,r8d
  41d95d:	jne    0x41d980
  41d95f:	test   r14b,r14b
  41d962:	je     0x41d980
  41d964:	mov    rcx,r12
  41d967:	call   0x41a510
  41d96c:	mov    rcx,rdi
  41d96f:	mov    r8d,0x1
  41d975:	mov    rdx,rax
  41d978:	call   0x41a3b0
  41d97d:	mov    rdi,rax
  41d980:	mov    rcx,r13
  41d983:	call   0x42df08
  41d988:	mov    rax,rdi
  41d98b:	jmp    0x41d80d
  41d990:	cmp    r15b,0x73
  41d994:	jne    0x41d9e1
  41d996:	mov    r8d,0x1
  41d99c:	mov    r12d,0x7
  41d9a2:	jmp    0x41d7a0
  41d9a7:	cmp    r12d,0x1
  41d9ab:	ja     0x41d7f3
  41d9b1:	mov    r8d,0x278d00
  41d9b7:	mov    r12d,0x2
  41d9bd:	jmp    0x41d7a0
  41d9c2:	test   r15b,r15b
  41d9c5:	jne    0x41d7f3
  41d9cb:	mov    r8d,0x1
  41d9d1:	mov    rdx,r14
  41d9d4:	mov    rcx,rdi
  41d9d7:	call   0x41a3b0
  41d9dc:	jmp    0x41d80d
  41d9e1:	cmp    r15b,0x79
  41d9e5:	jne    0x41d7f3
  41d9eb:	test   r12d,r12d
  41d9ee:	jne    0x41d7f3
  41d9f4:	mov    r8d,0x1e13380
  41d9fa:	mov    r12b,0x1
  41d9fd:	jmp    0x41d7a0
  41da02:	cmp    r12d,0x3
  41da06:	ja     0x41d7f3
  41da0c:	mov    r8d,0x15180
  41da12:	mov    r12d,0x4
  41da18:	jmp    0x41d7a0
  41da1d:	cmp    r12d,0x6
  41da21:	je     0x41d7f3
  41da27:	mov    r8d,0x3c
  41da2d:	mov    r12d,0x6
  41da33:	jmp    0x41d7a0
  41da38:	lea    rdx,[rip+0x1b009]        # 0x438a48
  41da3f:	mov    rcx,rbx
  41da42:	call   0x42de18
  41da47:	test   rax,rax
  41da4a:	je     0x41dc59
  41da50:	mov    edx,0x59
  41da55:	mov    rcx,rbx
  41da58:	mov    QWORD PTR [rsp+0x28],rbx
  41da5d:	xor    edi,edi
  41da5f:	call   0x42de58
  41da64:	test   rax,rax
  41da67:	je     0x41da8f
  41da69:	lea    rdx,[rsp+0x28]
  41da6e:	mov    r9d,0x1e13380
  41da74:	mov    r8,rax
  41da77:	xor    ecx,ecx
  41da79:	call   0x41a440
  41da7e:	mov    rdi,rax
  41da81:	mov    rax,QWORD PTR [rsp+0x28]
  41da86:	lea    rbx,[rax+0x1]
  41da8a:	mov    QWORD PTR [rsp+0x28],rbx
  41da8f:	mov    edx,0x4d
  41da94:	mov    rcx,rbx
  41da97:	call   0x42de58
  41da9c:	test   rax,rax
  41da9f:	je     0x41dac8
  41daa1:	lea    rdx,[rsp+0x28]
  41daa6:	mov    rcx,rdi
  41daa9:	mov    r9d,0x278d00
  41daaf:	mov    r8,rax
  41dab2:	call   0x41a440
  41dab7:	mov    rdi,rax
  41daba:	mov    rax,QWORD PTR [rsp+0x28]
  41dabf:	lea    rbx,[rax+0x1]
  41dac3:	mov    QWORD PTR [rsp+0x28],rbx
  41dac8:	mov    edx,0x57
  41dacd:	mov    rcx,rbx
  41dad0:	call   0x42de58
  41dad5:	test   rax,rax
  41dad8:	je     0x41db01
  41dada:	lea    rdx,[rsp+0x28]
  41dadf:	mov    rcx,rdi
  41dae2:	mov    r9d,0x93a80
  41dae8:	mov    r8,rax
  41daeb:	call   0x41a440
  41daf0:	mov    rdi,rax
  41daf3:	mov    rax,QWORD PTR [rsp+0x28]
  41daf8:	lea    rbx,[rax+0x1]
  41dafc:	mov    QWORD PTR [rsp+0x28],rbx
  41db01:	mov    edx,0x44
  41db06:	mov    rcx,rbx
  41db09:	call   0x42de58
  41db0e:	test   rax,rax
  41db11:	je     0x41db45
  41db13:	lea    rdx,[rsp+0x28]
  41db18:	mov    rcx,rdi
  41db1b:	mov    r9d,0x15180
  41db21:	mov    r8,rax
  41db24:	call   0x41a440
  41db29:	mov    rdi,rax
  41db2c:	mov    rax,QWORD PTR [rsp+0x28]
  41db31:	lea    rbx,[rax+0x1]
  41db35:	mov    QWORD PTR [rsp+0x28],rbx
  41db3a:	jmp    0x41db45
  41db3c:	nop    DWORD PTR [rax+0x0]
  41db40:	mov    QWORD PTR [rsp+0x28],rbx
  41db45:	movzx  ecx,BYTE PTR [rbx]
  41db48:	add    rbx,0x1
  41db4c:	mov    ebp,ecx
  41db4e:	call   rsi
  41db50:	test   eax,eax
  41db52:	jne    0x41db40
  41db54:	test   bpl,bpl
  41db57:	mov    rbp,QWORD PTR [rip+0x2acd2]        # 0x448830
  41db5e:	je     0x41d955
  41db64:	call   rbp
  41db66:	mov    rdi,0xffffffffffffffff
  41db6d:	mov    DWORD PTR [rax],0x16
  41db73:	jmp    0x41d955
  41db78:	nop    DWORD PTR [rax+rax*1+0x0]
  41db80:	mov    rbx,r13
  41db83:	xor    r14d,r14d
  41db86:	jmp    0x41d8b2
  41db8b:	cmp    r12d,0x6
  41db8f:	je     0x41d7f3
  41db95:	lea    r15,[rsp+0x38]
  41db9a:	mov    QWORD PTR [rsp+0x38],rbx
  41db9f:	mov    r13d,0x3
  41dba5:	call   rbp
  41dba7:	mov    DWORD PTR [rax],0x0
  41dbad:	mov    rbx,QWORD PTR [rsp+0x38]
  41dbb2:	movzx  eax,BYTE PTR [rbx]
  41dbb5:	cmp    al,0x3a
  41dbb7:	jne    0x41dc10
  41dbb9:	sub    r13d,0x1
  41dbbd:	je     0x41dc10
  41dbbf:	lea    rcx,[rbx+0x1]
  41dbc3:	mov    rdx,r15
  41dbc6:	mov    r8d,0xa
  41dbcc:	call   0x42ddf8
  41dbd1:	mov    ebx,eax
  41dbd3:	call   rbp
  41dbd5:	mov    edx,DWORD PTR [rax]
  41dbd7:	test   edx,edx
  41dbd9:	jne    0x41dbf6
  41dbdb:	mov    rdx,r14
  41dbde:	mov    ecx,ebx
  41dbe0:	mov    r8d,0x3c
  41dbe6:	call   0x41a3b0
  41dbeb:	mov    r14,rax
  41dbee:	call   rbp
  41dbf0:	mov    eax,DWORD PTR [rax]
  41dbf2:	test   eax,eax
  41dbf4:	je     0x41dbad
  41dbf6:	mov    rdx,0xffffffffffffffff
  41dbfd:	mov    r8d,0x1
  41dc03:	mov    rcx,rdi
  41dc06:	call   0x41a3b0
  41dc0b:	jmp    0x41d80d
  41dc10:	add    rbx,0x1
  41dc14:	mov    r13d,eax
  41dc17:	jmp    0x41dc2e
  41dc19:	nop    DWORD PTR [rax+0x0]
  41dc20:	mov    QWORD PTR [rsp+0x38],rbx
  41dc25:	add    rbx,0x1
  41dc29:	movzx  r13d,BYTE PTR [rbx-0x1]
  41dc2e:	movzx  ecx,r13b
  41dc32:	call   rsi
  41dc34:	test   eax,eax
  41dc36:	jne    0x41dc20
  41dc38:	test   r13b,r13b
  41dc3b:	jne    0x41dd4e
  41dc41:	cmp    r14,0xe0f
  41dc48:	jle    0x41dc54
  41dc4a:	cmp    r12d,0x5
  41dc4e:	je     0x41d7f3
  41dc54:	mov    rdx,r14
  41dc57:	jmp    0x41dbfd
  41dc59:	mov    rcx,rbx
  41dc5c:	call   0x42de30
  41dc61:	cmp    rax,0x8
  41dc65:	jne    0x41dd1b
  41dc6b:	mov    eax,DWORD PTR [rbx]
  41dc6d:	lea    rdi,[rsp+0x38]
  41dc72:	lea    rsi,[rsp+0x30]
  41dc77:	lea    r8,[rsp+0x34]
  41dc7c:	mov    r9d,0x1e13380
  41dc82:	xor    ecx,ecx
  41dc84:	mov    rdx,rdi
  41dc87:	mov    BYTE PTR [rsp+0x34],0x0
  41dc8c:	mov    QWORD PTR [rsp+0x38],rsi
  41dc91:	mov    DWORD PTR [rsp+0x30],eax
  41dc95:	lea    rbp,[rsi+0x2]
  41dc99:	call   0x41a440
  41dc9e:	movzx  edx,WORD PTR [rbx+0x4]
  41dca2:	mov    r8,rbp
  41dca5:	mov    r9d,0x278d00
  41dcab:	mov    rcx,rax
  41dcae:	mov    BYTE PTR [rsp+0x32],0x0
  41dcb3:	mov    QWORD PTR [rsp+0x38],rsi
  41dcb8:	mov    WORD PTR [rsp+0x30],dx
  41dcbd:	mov    rdx,rdi
  41dcc0:	call   0x41a440
  41dcc5:	movzx  edx,WORD PTR [rbx+0x6]
  41dcc9:	mov    r8,rbp
  41dccc:	mov    r9d,0x15180
  41dcd2:	mov    rcx,rax
  41dcd5:	mov    BYTE PTR [rsp+0x32],0x0
  41dcda:	mov    QWORD PTR [rsp+0x38],rsi
  41dcdf:	mov    WORD PTR [rsp+0x30],dx
  41dce4:	mov    rdx,rdi
  41dce7:	call   0x41a440
  41dcec:	mov    rbp,QWORD PTR [rip+0x2ab3d]        # 0x448830
  41dcf3:	mov    rdi,rax
  41dcf6:	jmp    0x41d955
  41dcfb:	mov    rax,rdi
  41dcfe:	jmp    0x41d80d
  41dd03:	call   QWORD PTR [rip+0x2ab27]        # 0x448830
  41dd09:	mov    DWORD PTR [rax],0x16
  41dd0f:	mov    rax,0xffffffffffffffff
  41dd16:	jmp    0x41d80d
  41dd1b:	mov    rbp,QWORD PTR [rip+0x2ab0e]        # 0x448830
  41dd22:	mov    rdi,0xffffffffffffffff
  41dd29:	call   rbp
  41dd2b:	mov    DWORD PTR [rax],0x16
  41dd31:	jmp    0x41d955
  41dd36:	call   QWORD PTR [rip+0x2aaf4]        # 0x448830
  41dd3c:	mov    DWORD PTR [rax],0xc
  41dd42:	mov    rax,0xffffffffffffffff
  41dd49:	jmp    0x41d80d
  41dd4e:	call   rbp
  41dd50:	mov    DWORD PTR [rax],0x16
  41dd56:	jmp    0x41dbf6
  41dd5b:	nop    DWORD PTR [rax+rax*1+0x0]
  41dd60:	push   rbp
  41dd61:	push   rdi
  41dd62:	push   rsi
  41dd63:	push   rbx
  41dd64:	sub    rsp,0x28
  41dd68:	lea    eax,[rdx-0x3]
  41dd6b:	mov    rsi,rdx
  41dd6e:	cmp    eax,0xb
  41dd71:	ja     0x41ddd0
  41dd73:	movzx  eax,BYTE PTR [rcx]
  41dd76:	lea    r8,[rip+0x1b4c3]        # 0x439240
  41dd7d:	mov    rdx,rax
  41dd80:	movzx  eax,BYTE PTR [r8+rax*1]
  41dd85:	add    eax,esi
  41dd87:	cmp    eax,0x11
  41dd8a:	ja     0x41ddd0
  41dd8c:	cdqe   
  41dd8e:	lea    rbx,[rip+0x1be6b]        # 0x439c00
  41dd95:	xor    ebp,ebp
  41dd97:	shl    rax,0x4
  41dd9b:	add    rbx,rax
  41dd9e:	mov    rdi,QWORD PTR [rbx]
  41dda1:	cmp    dl,BYTE PTR [rdi]
  41dda3:	jne    0x41ddc5
  41dda5:	lea    rdx,[rdi+0x1]
  41dda9:	lea    r8d,[rsi-0x1]
  41ddad:	add    rcx,0x1
  41ddb1:	call   0x42de28
  41ddb6:	test   eax,eax
  41ddb8:	jne    0x41ddc5
  41ddba:	mov    esi,esi
  41ddbc:	cmp    BYTE PTR [rdi+rsi*1],0x0
  41ddc0:	jne    0x41ddc5
  41ddc2:	mov    ebp,DWORD PTR [rbx+0x8]
  41ddc5:	mov    eax,ebp
  41ddc7:	add    rsp,0x28
  41ddcb:	pop    rbx
  41ddcc:	pop    rsi
  41ddcd:	pop    rdi
  41ddce:	pop    rbp
  41ddcf:	ret    
  41ddd0:	xor    ebp,ebp
  41ddd2:	mov    eax,ebp
  41ddd4:	add    rsp,0x28
  41ddd8:	pop    rbx
  41ddd9:	pop    rsi
  41ddda:	pop    rdi
  41dddb:	pop    rbp
  41dddc:	ret    
  41dddd:	nop    DWORD PTR [rax]
  41dde0:	push   rbp
  41dde1:	push   rdi
  41dde2:	push   rsi
  41dde3:	push   rbx
  41dde4:	sub    rsp,0x28
  41dde8:	lea    eax,[rdx-0x4]
  41ddeb:	mov    rsi,rdx
  41ddee:	cmp    eax,0x4
  41ddf1:	ja     0x41de50
  41ddf3:	movzx  eax,BYTE PTR [rcx]
  41ddf6:	lea    r8,[rip+0x1b343]        # 0x439140
  41ddfd:	mov    rdx,rax
  41de00:	movzx  eax,BYTE PTR [r8+rax*1]
  41de05:	add    eax,esi
  41de07:	cmp    eax,0x9
  41de0a:	ja     0x41de50
  41de0c:	cdqe   
  41de0e:	lea    rbx,[rip+0x1bceb]        # 0x439b00
  41de15:	xor    ebp,ebp
  41de17:	shl    rax,0x4
  41de1b:	add    rbx,rax
  41de1e:	mov    rdi,QWORD PTR [rbx]
  41de21:	cmp    dl,BYTE PTR [rdi]
  41de23:	jne    0x41de45
  41de25:	lea    rdx,[rdi+0x1]
  41de29:	lea    r8d,[rsi-0x1]
  41de2d:	add    rcx,0x1
  41de31:	call   0x42de28
  41de36:	test   eax,eax
  41de38:	jne    0x41de45
  41de3a:	mov    esi,esi
  41de3c:	cmp    BYTE PTR [rdi+rsi*1],0x0
  41de40:	jne    0x41de45
  41de42:	mov    ebp,DWORD PTR [rbx+0x8]
  41de45:	mov    eax,ebp
  41de47:	add    rsp,0x28
  41de4b:	pop    rbx
  41de4c:	pop    rsi
  41de4d:	pop    rdi
  41de4e:	pop    rbp
  41de4f:	ret    
  41de50:	xor    ebp,ebp
  41de52:	mov    eax,ebp
  41de54:	add    rsp,0x28
  41de58:	pop    rbx
  41de59:	pop    rsi
  41de5a:	pop    rdi
  41de5b:	pop    rbp
  41de5c:	ret    
  41de5d:	nop    DWORD PTR [rax]
  41de60:	push   rbx
  41de61:	sub    rsp,0x20
  41de65:	cmp    rcx,0xf
  41de69:	jbe    0x41decc
  41de6b:	mov    eax,r8d
  41de6e:	mov    r9,rdx
  41de71:	cmp    r8d,DWORD PTR [rcx+0xb0]
  41de78:	lea    rdx,[rax+rax*2]
  41de7c:	lea    rdx,[rax+rdx*4]
  41de80:	mov    rax,QWORD PTR [rcx+0x78]
  41de84:	lea    rdx,[rax+rdx*8]
  41de88:	jae    0x41df03
  41de8a:	mov    eax,DWORD PTR [rdx+0x10]
  41de8d:	and    eax,0xfffff00
  41de92:	mov    DWORD PTR [rdx+0x10],eax
  41de95:	mov    r8d,DWORD PTR [r9+0x10]
  41de99:	and    r8d,0xf00000ff
  41dea0:	or     eax,r8d
  41dea3:	mov    r8,QWORD PTR [r9+0x18]
  41dea7:	test   al,0x4
  41dea9:	mov    DWORD PTR [rdx+0x10],eax
  41deac:	mov    QWORD PTR [rdx+0x18],r8
  41deb0:	jne    0x41dee0
  41deb2:	xor    eax,eax
  41deb4:	and    DWORD PTR [r9+0x10],0xfffff00
  41debc:	mov    WORD PTR [r9+0xe],ax
  41dec1:	mov    rax,QWORD PTR [rdx+0x38]
  41dec5:	test   rax,rax
  41dec8:	je     0x41decc
  41deca:	call   rax
  41decc:	xor    ebx,ebx
  41dece:	mov    eax,ebx
  41ded0:	add    rsp,0x20
  41ded4:	pop    rbx
  41ded5:	ret    
  41ded6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dee0:	movzx  eax,WORD PTR [rdx+0xe]
  41dee4:	add    eax,0x1
  41dee7:	cmp    ax,WORD PTR [rdx+0xc]
  41deeb:	mov    WORD PTR [rdx+0xe],ax
  41deef:	jbe    0x41deb2
  41def1:	test   BYTE PTR [rcx+0x10],0x4
  41def5:	mov    ebx,0xffffffff
  41defa:	je     0x41dece
  41defc:	call   0x41a770
  41df01:	jmp    0x41dece
  41df03:	call   QWORD PTR [rip+0x2a8d7]        # 0x4487e0
  41df09:	mov    rcx,QWORD PTR [rip+0x13c80]        # 0x431b90
  41df10:	lea    rdx,[rax+0x60]
  41df14:	call   0x42df18
  41df19:	mov    ecx,0x1
  41df1e:	call   0x419830
  41df23:	nop
  41df24:	xchg   ax,ax
  41df26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41df30:	push   rsi
  41df31:	push   rbx
  41df32:	sub    rsp,0x38
  41df36:	cmp    rcx,0xf
  41df3a:	jbe    0x41df8b
  41df3c:	test   rdx,rdx
  41df3f:	je     0x41df8b
  41df41:	mov    eax,DWORD PTR [rdx+0x10]
  41df44:	mov    esi,eax
  41df46:	and    esi,0x8
  41df49:	jne    0x41df8b
  41df4b:	mov    rcx,QWORD PTR [rdx+0x18]
  41df4f:	test   rcx,rcx
  41df52:	je     0x41dfd0
  41df54:	mov    rbx,rdx
  41df57:	movzx  edx,BYTE PTR [rcx]
  41df5a:	cmp    dl,0x46
  41df5d:	je     0x41df84
  41df5f:	jg     0x41dfa1
  41df61:	cmp    dl,0x23
  41df64:	je     0x41dfb2
  41df66:	cmp    dl,0x30
  41df69:	jne    0x41dfe0
  41df6b:	lea    rdx,[rsp+0x28]
  41df70:	xor    r8d,r8d
  41df73:	call   0x42de00
  41df78:	test   eax,eax
  41df7a:	mov    eax,DWORD PTR [rbx+0x10]
  41df7d:	je     0x41dfc0
  41df7f:	mov    esi,0x1
  41df84:	test   al,0x40
  41df86:	jne    0x41df92
  41df88:	mov    DWORD PTR [rbx+0x18],esi
  41df8b:	add    rsp,0x38
  41df8f:	pop    rbx
  41df90:	pop    rsi
  41df91:	ret    
  41df92:	mov    rcx,QWORD PTR [rbx+0x18]
  41df96:	call   0x42df08
  41df9b:	and    DWORD PTR [rbx+0x10],0xffffffbf
  41df9f:	jmp    0x41df88
  41dfa1:	cmp    dl,0x66
  41dfa4:	je     0x41df84
  41dfa6:	cmp    dl,0x6e
  41dfa9:	je     0x41df84
  41dfab:	cmp    dl,0x4e
  41dfae:	jne    0x41df7f
  41dfb0:	jmp    0x41df84
  41dfb2:	xor    esi,esi
  41dfb4:	cmp    BYTE PTR [rcx+0x1],0x66
  41dfb8:	setne  sil
  41dfbc:	jmp    0x41df84
  41dfbe:	xchg   ax,ax
  41dfc0:	mov    rdx,QWORD PTR [rsp+0x28]
  41dfc5:	xor    esi,esi
  41dfc7:	cmp    BYTE PTR [rdx],0x0
  41dfca:	setne  sil
  41dfce:	jmp    0x41df84
  41dfd0:	mov    DWORD PTR [rdx+0x18],0x0
  41dfd7:	jmp    0x41df8b
  41dfd9:	nop    DWORD PTR [rax+0x0]
  41dfe0:	test   dl,dl
  41dfe2:	jne    0x41df7f
  41dfe4:	jmp    0x41df84
  41dfe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dff0:	sub    rsp,0x28
  41dff4:	test   rcx,rcx
  41dff7:	je     0x41e060
  41dff9:	mov    eax,DWORD PTR [rcx+0x10]
  41dffc:	and    eax,0xf000
  41e001:	cmp    eax,0x6000
  41e006:	jne    0x41e060
  41e008:	mov    rcx,QWORD PTR [rcx+0x20]
  41e00c:	test   rcx,rcx
  41e00f:	je     0x41e03a
  41e011:	mov    r8d,DWORD PTR [rcx]
  41e014:	xor    r9d,r9d
  41e017:	add    rcx,0x8
  41e01b:	jmp    0x41e034
  41e01d:	nop    DWORD PTR [rax]
  41e020:	add    rcx,0x8
  41e024:	test   r9b,r9b
  41e027:	mov    rax,QWORD PTR [rcx-0x8]
  41e02b:	jne    0x41e050
  41e02d:	cmp    rax,rdx
  41e030:	sete   r9b
  41e034:	sub    r8d,0x1
  41e038:	jns    0x41e020
  41e03a:	call   QWORD PTR [rip+0x2a7f0]        # 0x448830
  41e040:	mov    DWORD PTR [rax],0x2
  41e046:	xor    eax,eax
  41e048:	jmp    0x41e055
  41e04a:	nop    WORD PTR [rax+rax*1+0x0]
  41e050:	test   rax,rax
  41e053:	je     0x41e03a
  41e055:	add    rsp,0x28
  41e059:	ret    
  41e05a:	nop    WORD PTR [rax+rax*1+0x0]
  41e060:	call   QWORD PTR [rip+0x2a7ca]        # 0x448830
  41e066:	mov    DWORD PTR [rax],0x16
  41e06c:	xor    eax,eax
  41e06e:	add    rsp,0x28
  41e072:	ret    
  41e073:	nop    DWORD PTR [rax]
  41e076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e080:	push   rbp
  41e081:	push   rdi
  41e082:	push   rsi
  41e083:	push   rbx
  41e084:	sub    rsp,0x28
  41e088:	test   rcx,rcx
  41e08b:	mov    rdi,rdx
  41e08e:	je     0x41e0e0
  41e090:	cmp    DWORD PTR [rcx],0x6
  41e093:	jne    0x41e0e0
  41e095:	mov    rax,QWORD PTR [rcx+0x10]
  41e099:	mov    edx,DWORD PTR [rax]
  41e09b:	test   edx,edx
  41e09d:	jle    0x41e110
  41e09f:	test   rdi,rdi
  41e0a2:	lea    rbx,[rax+0x8]
  41e0a6:	je     0x41e100
  41e0a8:	lea    eax,[rdx-0x1]
  41e0ab:	lea    rbp,[rbx+rax*8+0x8]
  41e0b0:	jmp    0x41e0b7
  41e0b2:	cmp    rbx,rbp
  41e0b5:	je     0x41e110
  41e0b7:	add    rbx,0x8
  41e0bb:	mov    rsi,QWORD PTR [rbx-0x8]
  41e0bf:	mov    rdx,rdi
  41e0c2:	mov    rcx,QWORD PTR [rsi+0x8]
  41e0c6:	call   0x42de50
  41e0cb:	test   eax,eax
  41e0cd:	jne    0x41e0b2
  41e0cf:	mov    rax,rsi
  41e0d2:	add    rsp,0x28
  41e0d6:	pop    rbx
  41e0d7:	pop    rsi
  41e0d8:	pop    rdi
  41e0d9:	pop    rbp
  41e0da:	ret    
  41e0db:	nop    DWORD PTR [rax+rax*1+0x0]
  41e0e0:	xor    esi,esi
  41e0e2:	call   QWORD PTR [rip+0x2a748]        # 0x448830
  41e0e8:	mov    DWORD PTR [rax],0x16
  41e0ee:	mov    rax,rsi
  41e0f1:	add    rsp,0x28
  41e0f5:	pop    rbx
  41e0f6:	pop    rsi
  41e0f7:	pop    rdi
  41e0f8:	pop    rbp
  41e0f9:	ret    
  41e0fa:	nop    WORD PTR [rax+rax*1+0x0]
  41e100:	mov    rsi,QWORD PTR [rax+0x8]
  41e104:	test   rsi,rsi
  41e107:	jne    0x41e0cf
  41e109:	nop    DWORD PTR [rax+0x0]
  41e110:	call   QWORD PTR [rip+0x2a71a]        # 0x448830
  41e116:	xor    esi,esi
  41e118:	mov    DWORD PTR [rax],0x2
  41e11e:	jmp    0x41e0cf
  41e120:	push   r12
  41e122:	push   rbp
  41e123:	push   rdi
  41e124:	push   rsi
  41e125:	push   rbx
  41e126:	sub    rsp,0x20
  41e12a:	test   rcx,rcx
  41e12d:	mov    rbp,rdx
  41e130:	mov    r12,r8
  41e133:	je     0x41e1b0
  41e135:	mov    eax,DWORD PTR [rcx+0x10]
  41e138:	and    eax,0xf000
  41e13d:	cmp    eax,0x6000
  41e142:	jne    0x41e1b0
  41e144:	mov    rax,QWORD PTR [rcx+0x20]
  41e148:	test   rax,rax
  41e14b:	je     0x41e195
  41e14d:	mov    ebx,DWORD PTR [rax]
  41e14f:	lea    rsi,[rax+0x8]
  41e153:	test   ebx,ebx
  41e155:	je     0x41e195
  41e157:	test   rdx,rdx
  41e15a:	je     0x41e1c9
  41e15c:	nop    DWORD PTR [rax+0x0]
  41e160:	sub    ebx,0x1
  41e163:	js     0x41e195
  41e165:	add    rsi,0x8
  41e169:	mov    rdi,QWORD PTR [rsi-0x8]
  41e16d:	mov    rdx,rbp
  41e170:	mov    rcx,rdi
  41e173:	call   0x41e080
  41e178:	test   rax,rax
  41e17b:	je     0x41e160
  41e17d:	test   r12,r12
  41e180:	jne    0x41e160
  41e182:	test   rdi,rdi
  41e185:	mov    rax,rdi
  41e188:	je     0x41e195
  41e18a:	add    rsp,0x20
  41e18e:	pop    rbx
  41e18f:	pop    rsi
  41e190:	pop    rdi
  41e191:	pop    rbp
  41e192:	pop    r12
  41e194:	ret    
  41e195:	call   QWORD PTR [rip+0x2a695]        # 0x448830
  41e19b:	mov    DWORD PTR [rax],0x2
  41e1a1:	xor    eax,eax
  41e1a3:	add    rsp,0x20
  41e1a7:	pop    rbx
  41e1a8:	pop    rsi
  41e1a9:	pop    rdi
  41e1aa:	pop    rbp
  41e1ab:	pop    r12
  41e1ad:	ret    
  41e1ae:	xchg   ax,ax
  41e1b0:	call   QWORD PTR [rip+0x2a67a]        # 0x448830
  41e1b6:	mov    DWORD PTR [rax],0x16
  41e1bc:	xor    eax,eax
  41e1be:	add    rsp,0x20
  41e1c2:	pop    rbx
  41e1c3:	pop    rsi
  41e1c4:	pop    rdi
  41e1c5:	pop    rbp
  41e1c6:	pop    r12
  41e1c8:	ret    
  41e1c9:	mov    rax,QWORD PTR [rax+0x8]
  41e1cd:	jmp    0x41e18a
  41e1cf:	nop
  41e1d0:	push   rbx
  41e1d1:	sub    rsp,0x20
  41e1d5:	test   rcx,rcx
  41e1d8:	je     0x41e230
  41e1da:	cmp    DWORD PTR [rcx],0x6
  41e1dd:	jne    0x41e230
  41e1df:	mov    r8,QWORD PTR [rcx+0x10]
  41e1e3:	mov    eax,DWORD PTR [r8]
  41e1e6:	add    r8,0x8
  41e1ea:	jmp    0x41e1fd
  41e1ec:	nop    DWORD PTR [rax+0x0]
  41e1f0:	lea    rcx,[r8+0x8]
  41e1f4:	cmp    QWORD PTR [rcx-0x8],rdx
  41e1f8:	je     0x41e220
  41e1fa:	mov    r8,rcx
  41e1fd:	sub    eax,0x1
  41e200:	lea    ecx,[rax+0x1]
  41e203:	test   ecx,ecx
  41e205:	jg     0x41e1f0
  41e207:	mov    ebx,0x16
  41e20c:	call   QWORD PTR [rip+0x2a61e]        # 0x448830
  41e212:	mov    DWORD PTR [rax],ebx
  41e214:	xor    eax,eax
  41e216:	add    rsp,0x20
  41e21a:	pop    rbx
  41e21b:	ret    
  41e21c:	nop    DWORD PTR [rax+0x0]
  41e220:	test   eax,eax
  41e222:	jne    0x41e244
  41e224:	mov    ebx,0x2
  41e229:	jmp    0x41e20c
  41e22b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e230:	call   QWORD PTR [rip+0x2a5fa]        # 0x448830
  41e236:	mov    DWORD PTR [rax],0x16
  41e23c:	xor    eax,eax
  41e23e:	add    rsp,0x20
  41e242:	pop    rbx
  41e243:	ret    
  41e244:	mov    rax,QWORD PTR [r8+0x8]
  41e248:	add    rsp,0x20
  41e24c:	pop    rbx
  41e24d:	ret    
  41e24e:	xchg   ax,ax
  41e250:	push   rsi
  41e251:	push   rbx
  41e252:	sub    rsp,0x38
  41e256:	movzx  eax,BYTE PTR [rcx]
  41e259:	mov    rsi,rdx
  41e25c:	cmp    al,0x78
  41e25e:	mov    BYTE PTR [rdx],al
  41e260:	ja     0x41e3b3
  41e266:	lea    r9,[rip+0x1a7e3]        # 0x438a50
  41e26d:	movsxd rax,DWORD PTR [r9+rax*4]
  41e271:	add    r9,rax
  41e274:	jmp    r9
  41e277:	nop    WORD PTR [rax+rax*1+0x0]
  41e280:	mov    ebx,0x1
  41e285:	mov    BYTE PTR [rsi],r8b
  41e288:	nop    DWORD PTR [rax+rax*1+0x0]
  41e290:	mov    eax,ebx
  41e292:	add    rsp,0x38
  41e296:	pop    rbx
  41e297:	pop    rsi
  41e298:	ret    
  41e299:	nop    DWORD PTR [rax+0x0]
  41e2a0:	xor    ebx,ebx
  41e2a2:	jmp    0x41e290
  41e2a4:	mov    BYTE PTR [rdx],0xb
  41e2a7:	mov    ebx,0x1
  41e2ac:	jmp    0x41e290
  41e2ae:	xchg   ax,ax
  41e2b0:	mov    BYTE PTR [rdx],0xd
  41e2b3:	mov    ebx,0x1
  41e2b8:	jmp    0x41e290
  41e2ba:	nop    WORD PTR [rax+rax*1+0x0]
  41e2c0:	mov    BYTE PTR [rdx],0x9
  41e2c3:	mov    ebx,0x1
  41e2c8:	jmp    0x41e290
  41e2ca:	nop    WORD PTR [rax+rax*1+0x0]
  41e2d0:	cmp    BYTE PTR [rcx+0x1],0xa
  41e2d4:	mov    ebx,0x1
  41e2d9:	jne    0x41e290
  41e2db:	mov    bl,0x2
  41e2dd:	jmp    0x41e285
  41e2df:	nop
  41e2e0:	movzx  eax,BYTE PTR [rcx]
  41e2e3:	mov    ebx,0x1
  41e2e8:	mov    BYTE PTR [rsp+0x20],al
  41e2ec:	mov    eax,ebx
  41e2ee:	movzx  edx,BYTE PTR [rcx+rax*1]
  41e2f2:	cmp    dl,0x7f
  41e2f5:	ja     0x41e3fa
  41e2fb:	lea    r9,[rip+0x1e63e]        # 0x43c940
  41e302:	movzx  r8d,dl
  41e306:	test   BYTE PTR [r9+r8*4+0x2],0x1
  41e30c:	je     0x41e3fa
  41e312:	cmp    ebx,0x2
  41e315:	mov    BYTE PTR [rsp+rax*1+0x20],dl
  41e319:	je     0x41e3f0
  41e31f:	mov    ebx,0x2
  41e324:	jmp    0x41e2ec
  41e326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e330:	movzx  eax,BYTE PTR [rcx+0x1]
  41e334:	mov    ebx,0x1
  41e339:	cmp    al,0x7f
  41e33b:	ja     0x41e290
  41e341:	lea    rdx,[rip+0x1e5f8]        # 0x43c940
  41e348:	movzx  r8d,al
  41e34c:	test   DWORD PTR [rdx+r8*4],0x70000
  41e354:	je     0x41e290
  41e35a:	movzx  ecx,BYTE PTR [rcx+0x2]
  41e35e:	mov    BYTE PTR [rsp+0x20],al
  41e362:	cmp    cl,0x7f
  41e365:	movzx  eax,cl
  41e368:	ja     0x41e425
  41e36e:	test   DWORD PTR [rdx+rax*4],0x70000
  41e375:	je     0x41e425
  41e37b:	mov    BYTE PTR [rsp+0x21],cl
  41e37f:	mov    ebx,0x3
  41e384:	mov    eax,0x2
  41e389:	lea    rcx,[rsp+0x20]
  41e38e:	mov    r8d,0x10
  41e394:	xor    edx,edx
  41e396:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  41e39b:	call   0x42ddf8
  41e3a0:	mov    BYTE PTR [rsi],al
  41e3a2:	jmp    0x41e290
  41e3a7:	nop    WORD PTR [rax+rax*1+0x0]
  41e3b0:	mov    BYTE PTR [rdx],0x7
  41e3b3:	mov    ebx,0x1
  41e3b8:	mov    eax,ebx
  41e3ba:	add    rsp,0x38
  41e3be:	pop    rbx
  41e3bf:	pop    rsi
  41e3c0:	ret    
  41e3c1:	mov    BYTE PTR [rdx],0x8
  41e3c4:	mov    ebx,0x1
  41e3c9:	jmp    0x41e290
  41e3ce:	xchg   ax,ax
  41e3d0:	mov    BYTE PTR [rdx],0xc
  41e3d3:	mov    ebx,0x1
  41e3d8:	jmp    0x41e290
  41e3dd:	nop    DWORD PTR [rax]
  41e3e0:	mov    BYTE PTR [rdx],0xa
  41e3e3:	mov    ebx,0x1
  41e3e8:	jmp    0x41e290
  41e3ed:	nop    DWORD PTR [rax]
  41e3f0:	mov    ebx,0x3
  41e3f5:	mov    eax,0x3
  41e3fa:	lea    rcx,[rsp+0x20]
  41e3ff:	xor    edx,edx
  41e401:	mov    r8d,0x8
  41e407:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  41e40c:	call   0x42ddf8
  41e411:	mov    edx,0xff
  41e416:	cmp    eax,0xff
  41e41b:	cmova  eax,edx
  41e41e:	mov    BYTE PTR [rsi],al
  41e420:	jmp    0x41e290
  41e425:	mov    ebx,0x2
  41e42a:	mov    eax,0x1
  41e42f:	jmp    0x41e389
  41e434:	xchg   ax,ax
  41e436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e440:	push   r14
  41e442:	push   r13
  41e444:	push   r12
  41e446:	push   rbp
  41e447:	push   rdi
  41e448:	push   rsi
  41e449:	push   rbx
  41e44a:	sub    rsp,0x30
  41e44e:	movzx  esi,BYTE PTR [rcx]
  41e451:	movzx  r8d,BYTE PTR [rcx+0x1]
  41e456:	mov    r13d,0x1
  41e45c:	lea    rax,[rsp+0x2c]
  41e461:	mov    rbp,rdx
  41e464:	test   rdx,rdx
  41e467:	lea    r9,[rcx+0x1]
  41e46b:	mov    rbx,rcx
  41e46e:	mov    DWORD PTR [rsp+0x2c],0x0
  41e476:	cmove  rbp,rax
  41e47a:	movabs r12,0x200000000000011
  41e484:	cmp    sil,r8b
  41e487:	je     0x41e4b9
  41e489:	cmp    r8b,0xa
  41e48d:	lea    r14,[rbx+0x1]
  41e491:	lea    rdi,[r9+0x1]
  41e495:	mov    BYTE PTR [rbx],r8b
  41e498:	je     0x41e560
  41e49e:	cmp    r8b,0x5c
  41e4a2:	je     0x41e522
  41e4a4:	test   r8b,r8b
  41e4a7:	je     0x41e511
  41e4a9:	movzx  r8d,BYTE PTR [r9+0x1]
  41e4ae:	mov    rbx,r14
  41e4b1:	mov    r9,rdi
  41e4b4:	cmp    sil,r8b
  41e4b7:	jne    0x41e489
  41e4b9:	lea    rdi,[r9+0x1]
  41e4bd:	mov    BYTE PTR [rbx],0x0
  41e4c0:	movzx  esi,BYTE PTR [rdi]
  41e4c3:	cmp    sil,0x7f
  41e4c7:	ja     0x41e4e1
  41e4c9:	lea    rdx,[rip+0x1e470]        # 0x43c940
  41e4d0:	movzx  eax,sil
  41e4d4:	test   DWORD PTR [rdx+rax*4],0xc01
  41e4db:	jne    0x41e570
  41e4e1:	cmp    sil,0x27
  41e4e5:	je     0x41e5d0
  41e4eb:	cmp    sil,0x2f
  41e4ef:	je     0x41e5f1
  41e4f5:	cmp    sil,0x22
  41e4f9:	je     0x41e5d0
  41e4ff:	mov    rax,rdi
  41e502:	add    rsp,0x30
  41e506:	pop    rbx
  41e507:	pop    rsi
  41e508:	pop    rdi
  41e509:	pop    rbp
  41e50a:	pop    r12
  41e50c:	pop    r13
  41e50e:	pop    r14
  41e510:	ret    
  41e511:	xor    eax,eax
  41e513:	add    rsp,0x30
  41e517:	pop    rbx
  41e518:	pop    rsi
  41e519:	pop    rdi
  41e51a:	pop    rbp
  41e51b:	pop    r12
  41e51d:	pop    r13
  41e51f:	pop    r14
  41e521:	ret    
  41e522:	movzx  r8d,BYTE PTR [r9+0x1]
  41e527:	cmp    r8b,0xa
  41e52b:	je     0x41e5e0
  41e531:	cmp    sil,0x27
  41e535:	je     0x41e590
  41e537:	mov    r8d,0xa
  41e53d:	mov    rdx,rbx
  41e540:	mov    rcx,rdi
  41e543:	call   0x41e250
  41e548:	test   eax,eax
  41e54a:	je     0x41e511
  41e54c:	mov    eax,eax
  41e54e:	mov    rbx,r14
  41e551:	lea    r9,[rdi+rax*1]
  41e555:	movzx  r8d,BYTE PTR [r9]
  41e559:	jmp    0x41e484
  41e55e:	xchg   ax,ax
  41e560:	add    DWORD PTR [rbp+0x0],0x1
  41e564:	jmp    0x41e4a9
  41e569:	nop    DWORD PTR [rax+0x0]
  41e570:	add    rdi,0x1
  41e574:	cmp    sil,0xa
  41e578:	jne    0x41e4c0
  41e57e:	add    DWORD PTR [rbp+0x0],0x1
  41e582:	jmp    0x41e4c0
  41e587:	nop    WORD PTR [rax+rax*1+0x0]
  41e590:	lea    ecx,[r8-0x23]
  41e594:	cmp    cl,0x39
  41e597:	ja     0x41e5c0
  41e599:	mov    rax,r13
  41e59c:	shl    rax,cl
  41e59f:	test   rax,r12
  41e5a2:	je     0x41e5c0
  41e5a4:	mov    BYTE PTR [rbx],r8b
  41e5a7:	add    r9,0x2
  41e5ab:	movzx  r8d,BYTE PTR [r9]
  41e5af:	mov    rbx,r14
  41e5b2:	jmp    0x41e484
  41e5b7:	nop    WORD PTR [rax+rax*1+0x0]
  41e5c0:	mov    r9,rdi
  41e5c3:	mov    rbx,r14
  41e5c6:	jmp    0x41e484
  41e5cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41e5d0:	lea    r9,[rdi+0x1]
  41e5d4:	movzx  r8d,BYTE PTR [rdi+0x1]
  41e5d9:	jmp    0x41e484
  41e5de:	xchg   ax,ax
  41e5e0:	add    DWORD PTR [rbp+0x0],0x1
  41e5e4:	add    r9,0x2
  41e5e8:	movzx  r8d,BYTE PTR [r9]
  41e5ec:	jmp    0x41e484
  41e5f1:	movzx  eax,BYTE PTR [rdi+0x1]
  41e5f5:	cmp    al,0x2a
  41e5f7:	je     0x41e620
  41e5f9:	cmp    al,0x2f
  41e5fb:	jne    0x41e660
  41e5fd:	mov    rcx,rdi
  41e600:	mov    edx,0xa
  41e605:	call   0x42de58
  41e60a:	test   rax,rax
  41e60d:	mov    rdi,rax
  41e610:	jne    0x41e4c0
  41e616:	jmp    0x41e4ff
  41e61b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e620:	lea    rcx,[rdi+0x2]
  41e624:	lea    rdx,[rip+0x1a609]        # 0x438c34
  41e62b:	call   0x42de08
  41e630:	test   rax,rax
  41e633:	je     0x41e660
  41e635:	cmp    rdi,rax
  41e638:	jae    0x41e670
  41e63a:	mov    edx,0x2f
  41e63f:	jmp    0x41e649
  41e641:	cmp    rdi,rax
  41e644:	je     0x41e670
  41e646:	movzx  edx,BYTE PTR [rdi]
  41e649:	add    rdi,0x1
  41e64d:	cmp    dl,0xa
  41e650:	jne    0x41e641
  41e652:	add    DWORD PTR [rbp+0x0],0x1
  41e656:	jmp    0x41e641
  41e658:	nop    DWORD PTR [rax+rax*1+0x0]
  41e660:	xor    edi,edi
  41e662:	jmp    0x41e4ff
  41e667:	nop    WORD PTR [rax+rax*1+0x0]
  41e670:	lea    rdi,[rax+0x2]
  41e674:	jmp    0x41e4c0
  41e679:	nop    DWORD PTR [rax+0x0]
  41e680:	push   r15
  41e682:	push   r14
  41e684:	push   r13
  41e686:	push   r12
  41e688:	push   rbp
  41e689:	push   rdi
  41e68a:	push   rsi
  41e68b:	push   rbx
  41e68c:	sub    rsp,0xe8
  41e693:	test   rcx,rcx
  41e696:	mov    rbx,rcx
  41e699:	mov    rbp,rdx
  41e69c:	mov    rdi,r8
  41e69f:	je     0x41f22a
  41e6a5:	mov    rax,QWORD PTR [rip+0x259f4]        # 0x4440a0
  41e6ac:	test   rax,rax
  41e6af:	je     0x41ed6c
  41e6b5:	movzx  r8d,BYTE PTR [rbx]
  41e6b9:	cmp    BYTE PTR [rax+r8*1],0x0
  41e6be:	mov    rcx,r8
  41e6c1:	je     0x41e6d3
  41e6c3:	add    rbx,0x1
  41e6c7:	movzx  edx,BYTE PTR [rbx]
  41e6ca:	cmp    BYTE PTR [rax+rdx*1],0x0
  41e6ce:	mov    rcx,rdx
  41e6d1:	jne    0x41e6c3
  41e6d3:	test   cl,cl
  41e6d5:	je     0x41ebd3
  41e6db:	lea    rcx,[rdi+0x19]
  41e6df:	call   0x41b230
  41e6e4:	lea    rcx,[rax+0x18]
  41e6e8:	mov    rsi,rax
  41e6eb:	mov    rdx,rbp
  41e6ee:	mov    r8,rdi
  41e6f1:	mov    DWORD PTR [rax],0x6
  41e6f7:	lea    rbp,[rsp+0x90]
  41e6ff:	mov    QWORD PTR [rax+0x8],rcx
  41e703:	lea    r13,[rsi+0x10]
  41e707:	call   0x42de98
  41e70c:	mov    BYTE PTR [rsi+rdi*1+0x18],0x0
  41e711:	mov    ecx,0x38
  41e716:	lea    r12,[rbp+0x2]
  41e71a:	call   0x41b230
  41e71f:	mov    QWORD PTR [rsi+0x10],rax
  41e723:	mov    DWORD PTR [rax],0x0
  41e729:	mov    DWORD PTR [rax+0x4],0x6
  41e730:	lea    rax,[rsp+0x70]
  41e735:	mov    QWORD PTR [rsp+0x48],rax
  41e73a:	lea    rax,[rsp+0x98]
  41e742:	mov    QWORD PTR [rsp+0x38],rax
  41e747:	mov    rax,QWORD PTR [rip+0x25952]        # 0x4440a0
  41e74e:	test   rax,rax
  41e751:	jne    0x41e764
  41e753:	jmp    0x41eb35
  41e758:	nop    DWORD PTR [rax+rax*1+0x0]
  41e760:	add    rbx,0x1
  41e764:	movzx  ecx,BYTE PTR [rbx]
  41e767:	cmp    BYTE PTR [rax+rcx*1],0x0
  41e76b:	mov    rdx,rcx
  41e76e:	jne    0x41e760
  41e770:	cmp    cl,0x7f
  41e773:	ja     0x41e810
  41e779:	movzx  eax,cl
  41e77c:	lea    rcx,[rip+0x1e1bd]        # 0x43c940
  41e783:	test   DWORD PTR [rcx+rax*4],0x180040
  41e78a:	je     0x41e810
  41e790:	mov    rax,QWORD PTR [rip+0x25989]        # 0x444120
  41e797:	lea    rdi,[rbx+0x1]
  41e79b:	test   rax,rax
  41e79e:	je     0x41f18a
  41e7a4:	movzx  edx,BYTE PTR [rbx+0x1]
  41e7a8:	cmp    BYTE PTR [rax+rdx*1],0x0
  41e7ac:	je     0x41e7bd
  41e7ae:	xchg   ax,ax
  41e7b0:	add    rdi,0x1
  41e7b4:	movzx  edx,BYTE PTR [rdi]
  41e7b7:	cmp    BYTE PTR [rax+rdx*1],0x0
  41e7bb:	jne    0x41e7b0
  41e7bd:	xor    eax,eax
  41e7bf:	cmp    BYTE PTR [rdi-0x1],0x3a
  41e7c3:	sete   al
  41e7c6:	sub    rdi,rax
  41e7c9:	mov    rax,QWORD PTR [rip+0x258c0]        # 0x444090
  41e7d0:	mov    r8,rdi
  41e7d3:	sub    r8,rbx
  41e7d6:	test   rax,rax
  41e7d9:	jne    0x41e7e4
  41e7db:	jmp    0x41f171
  41e7e0:	add    rdi,0x1
  41e7e4:	movzx  ecx,BYTE PTR [rdi]
  41e7e7:	cmp    BYTE PTR [rax+rcx*1],0x0
  41e7eb:	mov    rdx,rcx
  41e7ee:	jne    0x41e7e0
  41e7f0:	lea    r14,[rip+0x1a445]        # 0x438c3c
  41e7f7:	cmp    dl,0x3d
  41e7fa:	ja     0x41ea42
  41e800:	movzx  eax,dl
  41e803:	movsxd rax,DWORD PTR [r14+rax*4]
  41e807:	add    rax,r14
  41e80a:	jmp    rax
  41e80c:	nop    DWORD PTR [rax+0x0]
  41e810:	cmp    dl,0x23
  41e813:	je     0x41e904
  41e819:	cmp    dl,0x3c
  41e81c:	je     0x41e920
  41e822:	test   dl,dl
  41e824:	je     0x41e874
  41e826:	mov    rcx,QWORD PTR [rsi+0x10]
  41e82a:	call   0x42df08
  41e82f:	mov    rcx,rsi
  41e832:	call   0x42df08
  41e837:	xor    eax,eax
  41e839:	add    rsp,0xe8
  41e840:	pop    rbx
  41e841:	pop    rsi
  41e842:	pop    rdi
  41e843:	pop    rbp
  41e844:	pop    r12
  41e846:	pop    r13
  41e848:	pop    r14
  41e84a:	pop    r15
  41e84c:	ret    
  41e84d:	add    rdi,0x1
  41e851:	mov    rdx,rbx
  41e854:	mov    QWORD PTR [rsp+0x20],0x0
  41e85d:	xor    r9d,r9d
  41e860:	mov    rcx,r13
  41e863:	mov    rbx,rdi
  41e866:	call   0x41b340
  41e86b:	test   rbx,rbx
  41e86e:	jne    0x41e747
  41e874:	mov    r15,QWORD PTR [rsi+0x10]
  41e878:	mov    edx,DWORD PTR [r15]
  41e87b:	test   edx,edx
  41e87d:	je     0x41f23d
  41e883:	cmp    edx,0x1
  41e886:	mov    rax,rsi
  41e889:	jle    0x41e839
  41e88b:	lea    r12d,[rdx-0x2]
  41e88f:	xor    edi,edi
  41e891:	add    r12,0x1
  41e895:	mov    rbp,QWORD PTR [r15+rdi*8+0x10]
  41e89a:	mov    ebx,edi
  41e89c:	mov    r14,QWORD PTR [r15+rdi*8+0x8]
  41e8a1:	mov    r13,QWORD PTR [rbp+0x8]
  41e8a5:	jmp    0x41e8ca
  41e8a7:	nop    WORD PTR [rax+rax*1+0x0]
  41e8b0:	lea    eax,[rbx+0x1]
  41e8b3:	sub    ebx,0x1
  41e8b6:	cmp    ebx,0xffffffff
  41e8b9:	cdqe   
  41e8bb:	mov    QWORD PTR [r15+rax*8+0x8],r14
  41e8c0:	movsxd rax,ebx
  41e8c3:	mov    r14,QWORD PTR [r15+rax*8+0x8]
  41e8c8:	je     0x41e900
  41e8ca:	mov    rcx,QWORD PTR [r14+0x8]
  41e8ce:	mov    rdx,r13
  41e8d1:	call   0x42de50
  41e8d6:	test   eax,eax
  41e8d8:	jg     0x41e8b0
  41e8da:	add    ebx,0x1
  41e8dd:	add    rdi,0x1
  41e8e1:	movsxd rbx,ebx
  41e8e4:	cmp    rdi,r12
  41e8e7:	mov    QWORD PTR [r15+rbx*8+0x8],rbp
  41e8ec:	jne    0x41e895
  41e8ee:	mov    rax,rsi
  41e8f1:	jmp    0x41e839
  41e8f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e900:	xor    ebx,ebx
  41e902:	jmp    0x41e8dd
  41e904:	mov    rcx,rbx
  41e907:	mov    edx,0xa
  41e90c:	call   0x42de58
  41e911:	mov    rbx,rax
  41e914:	jmp    0x41e86b
  41e919:	nop    DWORD PTR [rax+0x0]
  41e920:	mov    eax,DWORD PTR [rip+0x131aa]        # 0x431ad0
  41e926:	mov    DWORD PTR [rsp+0x54],eax
  41e92a:	lea    rax,[rbx+0x1]
  41e92e:	mov    QWORD PTR [rsp+0x40],rax
  41e933:	movzx  eax,BYTE PTR [rbx+0x1]
  41e937:	cmp    al,0x7f
  41e939:	ja     0x41e9b0
  41e93b:	lea    r10,[rip+0x1dffe]        # 0x43c940
  41e942:	movzx  edx,al
  41e945:	test   DWORD PTR [r10+rdx*4],0x180040
  41e94d:	je     0x41e9b0
  41e94f:	mov    rax,QWORD PTR [rip+0x257ca]        # 0x444120
  41e956:	lea    rdi,[rbx+0x2]
  41e95a:	test   rax,rax
  41e95d:	je     0x41f287
  41e963:	movzx  edx,BYTE PTR [rbx+0x2]
  41e967:	cmp    BYTE PTR [rax+rdx*1],0x0
  41e96b:	je     0x41e97d
  41e96d:	nop    DWORD PTR [rax]
  41e970:	add    rdi,0x1
  41e974:	movzx  edx,BYTE PTR [rdi]
  41e977:	cmp    BYTE PTR [rax+rdx*1],0x0
  41e97b:	jne    0x41e970
  41e97d:	mov    r14,rdi
  41e980:	sub    r14,QWORD PTR [rsp+0x40]
  41e985:	cmp    r14,0x40
  41e989:	ja     0x41e9a1
  41e98b:	mov    DWORD PTR [rsp+0x70],0x1
  41e993:	movzx  eax,BYTE PTR [rdi]
  41e996:	cmp    al,0x7f
  41e998:	movzx  edx,al
  41e99b:	jbe    0x41ec80
  41e9a1:	mov    eax,DWORD PTR [rsp+0x54]
  41e9a5:	mov    DWORD PTR [rip+0x13125],eax        # 0x431ad0
  41e9ab:	jmp    0x41e826
  41e9b0:	cmp    al,0x21
  41e9b2:	je     0x41ebe6
  41e9b8:	cmp    al,0x3f
  41e9ba:	jne    0x41e826
  41e9c0:	mov    rcx,QWORD PTR [rsp+0x40]
  41e9c5:	mov    edx,0x3e
  41e9ca:	call   0x42de58
  41e9cf:	test   rax,rax
  41e9d2:	je     0x41e826
  41e9d8:	lea    rbx,[rax+0x1]
  41e9dc:	test   rbx,rbx
  41e9df:	je     0x41e826
  41e9e5:	cmp    BYTE PTR [rbx],0x2c
  41e9e8:	jne    0x41e747
  41e9ee:	add    rbx,0x1
  41e9f2:	jmp    0x41e86b
  41e9f7:	mov    rax,QWORD PTR [rip+0x25692]        # 0x444090
  41e9fe:	lea    r15,[rdi+0x1]
  41ea02:	test   rax,rax
  41ea05:	je     0x41f2a0
  41ea0b:	movzx  edx,BYTE PTR [rdi+0x1]
  41ea0f:	mov    rdi,r15
  41ea12:	cmp    BYTE PTR [rax+rdx*1],0x0
  41ea16:	mov    rcx,rdx
  41ea19:	je     0x41ea30
  41ea1b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ea20:	add    rdi,0x1
  41ea24:	movzx  edx,BYTE PTR [rdi]
  41ea27:	cmp    BYTE PTR [rax+rdx*1],0x0
  41ea2b:	mov    rcx,rdx
  41ea2e:	jne    0x41ea20
  41ea30:	cmp    cl,0x3a
  41ea33:	mov    edx,ecx
  41ea35:	je     0x41ea40
  41ea37:	cmp    cl,0x3d
  41ea3a:	jne    0x41e7f7
  41ea40:	mov    edx,ecx
  41ea42:	mov    r15,rdi
  41ea45:	cmp    dl,0xa
  41ea48:	lea    rax,[rdi+0x2]
  41ea4c:	lea    r14,[r15+0x1]
  41ea50:	je     0x41ea73
  41ea52:	cmp    dl,0x2c
  41ea55:	je     0x41eb44
  41ea5b:	test   dl,dl
  41ea5d:	je     0x41ed42
  41ea63:	movzx  edx,BYTE PTR [r14]
  41ea67:	mov    r15,r14
  41ea6a:	lea    r14,[r15+0x1]
  41ea6e:	cmp    dl,0xa
  41ea71:	jne    0x41ea52
  41ea73:	cmp    r14,rax
  41ea76:	jbe    0x41eb44
  41ea7c:	cmp    BYTE PTR [r14-0x2],0x5c
  41ea81:	jne    0x41ea89
  41ea83:	cmp    BYTE PTR [r14],0x0
  41ea87:	jne    0x41ea63
  41ea89:	mov    rax,r14
  41ea8c:	mov    rdx,rbx
  41ea8f:	mov    r9,rdi
  41ea92:	sub    rax,rdi
  41ea95:	mov    rcx,r13
  41ea98:	mov    rbx,r14
  41ea9b:	sub    rax,0x1
  41ea9f:	mov    QWORD PTR [rsp+0x20],rax
  41eaa4:	call   0x41b340
  41eaa9:	test   rax,rax
  41eaac:	jne    0x41eb6d
  41eab2:	jmp    0x41e747
  41eab7:	nop    WORD PTR [rax+rax*1+0x0]
  41eac0:	lea    r15,[rdi+0x1]
  41eac4:	jmp    0x41eae3
  41eac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ead0:	cmp    al,dl
  41ead2:	je     0x41ec09
  41ead8:	cmp    al,0x5c
  41eada:	je     0x41ec40
  41eae0:	mov    r15,r14
  41eae3:	lea    r14,[r15+0x1]
  41eae7:	movzx  eax,BYTE PTR [r14-0x1]
  41eaec:	test   al,al
  41eaee:	jne    0x41ead0
  41eaf0:	mov    rax,r15
  41eaf3:	mov    rdx,rbx
  41eaf6:	mov    r9,rdi
  41eaf9:	sub    rax,rdi
  41eafc:	mov    rcx,r13
  41eaff:	mov    rbx,r15
  41eb02:	mov    QWORD PTR [rsp+0x20],rax
  41eb07:	call   0x41b340
  41eb0c:	test   rax,rax
  41eb0f:	je     0x41e747
  41eb15:	mov    r8d,DWORD PTR [rip+0x12fb4]        # 0x431ad0
  41eb1c:	test   r8d,r8d
  41eb1f:	jne    0x41e86b
  41eb25:	lea    rcx,[rax+0x10]
  41eb29:	xor    edx,edx
  41eb2b:	call   0x41e440
  41eb30:	jmp    0x41e86b
  41eb35:	mov    ecx,0xc
  41eb3a:	call   0x41ad40
  41eb3f:	jmp    0x41e764
  41eb44:	mov    rax,r14
  41eb47:	mov    rdx,rbx
  41eb4a:	mov    r9,rdi
  41eb4d:	sub    rax,rdi
  41eb50:	mov    rcx,r13
  41eb53:	mov    rbx,r14
  41eb56:	sub    rax,0x1
  41eb5a:	mov    QWORD PTR [rsp+0x20],rax
  41eb5f:	call   0x41b340
  41eb64:	test   rax,rax
  41eb67:	je     0x41e86b
  41eb6d:	add    rax,0x10
  41eb71:	jmp    0x41eb77
  41eb73:	add    rax,0x1
  41eb77:	cmp    BYTE PTR [rax],0xa
  41eb7a:	je     0x41eb73
  41eb7c:	mov    edx,0xa
  41eb81:	mov    rcx,rax
  41eb84:	call   0x42de58
  41eb89:	test   rax,rax
  41eb8c:	je     0x41e86b
  41eb92:	cmp    BYTE PTR [rax-0x1],0x5c
  41eb96:	jne    0x41eb77
  41eb98:	movzx  ecx,BYTE PTR [rax]
  41eb9b:	lea    rdx,[rax-0x1]
  41eb9f:	lea    r8,[rdx+0x1]
  41eba3:	test   cl,cl
  41eba5:	mov    BYTE PTR [rdx],cl
  41eba7:	je     0x41e86b
  41ebad:	cmp    cl,0x5c
  41ebb0:	jne    0x41ebba
  41ebb2:	cmp    BYTE PTR [rax+0x1],0xa
  41ebb6:	cmove  r8,rdx
  41ebba:	add    rax,0x1
  41ebbe:	movzx  ecx,BYTE PTR [rax]
  41ebc1:	mov    rdx,r8
  41ebc4:	lea    r8,[rdx+0x1]
  41ebc8:	test   cl,cl
  41ebca:	mov    BYTE PTR [rdx],cl
  41ebcc:	jne    0x41ebad
  41ebce:	jmp    0x41e86b
  41ebd3:	call   QWORD PTR [rip+0x29c57]        # 0x448830
  41ebd9:	mov    DWORD PTR [rax],0x2
  41ebdf:	xor    eax,eax
  41ebe1:	jmp    0x41e839
  41ebe6:	mov    rcx,QWORD PTR [rsp+0x40]
  41ebeb:	lea    rdx,[rip+0x1a045]        # 0x438c37
  41ebf2:	call   0x42de08
  41ebf7:	test   rax,rax
  41ebfa:	je     0x41e826
  41ec00:	lea    rbx,[rax+0x3]
  41ec04:	jmp    0x41e9dc
  41ec09:	mov    rax,r14
  41ec0c:	mov    r9,rdi
  41ec0f:	mov    rdx,rbx
  41ec12:	sub    rax,rdi
  41ec15:	mov    rcx,r13
  41ec18:	mov    QWORD PTR [rsp+0x20],rax
  41ec1d:	call   0x41b340
  41ec22:	test   rax,rax
  41ec25:	je     0x41ec35
  41ec27:	mov    edx,DWORD PTR [rip+0x12ea3]        # 0x431ad0
  41ec2d:	test   edx,edx
  41ec2f:	je     0x41f21d
  41ec35:	mov    rbx,r14
  41ec38:	jmp    0x41e747
  41ec3d:	nop    DWORD PTR [rax]
  41ec40:	mov    rcx,r15
  41ec43:	add    r15,0x2
  41ec47:	movzx  eax,BYTE PTR [rcx+0x1]
  41ec4b:	test   al,al
  41ec4d:	je     0x41f34e
  41ec53:	cmp    al,0x5c
  41ec55:	je     0x41ec5f
  41ec57:	cmp    al,dl
  41ec59:	jne    0x41eae3
  41ec5f:	cmp    BYTE PTR [rcx+0x2],0x0
  41ec63:	mov    rax,r15
  41ec66:	lea    r15,[rcx+0x3]
  41ec6a:	jne    0x41eae3
  41ec70:	mov    r15,rax
  41ec73:	jmp    0x41eaf0
  41ec78:	nop    DWORD PTR [rax+rax*1+0x0]
  41ec80:	movzx  ecx,al
  41ec83:	mov    ecx,DWORD PTR [r10+rcx*4]
  41ec87:	test   ecx,0xc01
  41ec8d:	je     0x41eceb
  41ec8f:	mov    rax,QWORD PTR [rip+0x2540a]        # 0x4440a0
  41ec96:	test   rax,rax
  41ec99:	jne    0x41eca7
  41ec9b:	jmp    0x41f30f
  41eca0:	add    rdi,0x1
  41eca4:	movzx  edx,BYTE PTR [rdi]
  41eca7:	cmp    BYTE PTR [rax+rdx*1],0x0
  41ecab:	jne    0x41eca0
  41ecad:	mov    r8,QWORD PTR [rsp+0x48]
  41ecb2:	lea    rdx,[rip+0x12e17]        # 0x431ad0
  41ecb9:	mov    rcx,rdi
  41ecbc:	mov    QWORD PTR [rsp+0x58],r10
  41ecc1:	call   0x41d210
  41ecc6:	test   rax,rax
  41ecc9:	mov    rdi,rax
  41eccc:	je     0x41e9a1
  41ecd2:	movzx  edx,BYTE PTR [rax]
  41ecd5:	cmp    dl,0x7f
  41ecd8:	mov    eax,edx
  41ecda:	ja     0x41e9a1
  41ece0:	mov    r10,QWORD PTR [rsp+0x58]
  41ece5:	mov    edx,edx
  41ece7:	mov    ecx,DWORD PTR [r10+rdx*4]
  41eceb:	and    ecx,0x1000c01
  41ecf1:	je     0x41e9a1
  41ecf7:	cmp    al,0x2f
  41ecf9:	je     0x41f1ff
  41ecff:	mov    r15,rdi
  41ed02:	add    r15,0x1
  41ed06:	je     0x41e9a1
  41ed0c:	mov    ecx,DWORD PTR [rsp+0x70]
  41ed10:	test   ecx,ecx
  41ed12:	jne    0x41ed7b
  41ed14:	mov    rdx,QWORD PTR [rsp+0x40]
  41ed19:	mov    QWORD PTR [rsp+0x20],0x0
  41ed22:	xor    r9d,r9d
  41ed25:	mov    r8,r14
  41ed28:	mov    rcx,r13
  41ed2b:	mov    rbx,r15
  41ed2e:	call   0x41b340
  41ed33:	mov    eax,DWORD PTR [rsp+0x54]
  41ed37:	mov    DWORD PTR [rip+0x12d93],eax        # 0x431ad0
  41ed3d:	jmp    0x41e9e5
  41ed42:	mov    rax,r15
  41ed45:	mov    rdx,rbx
  41ed48:	mov    r9,rdi
  41ed4b:	sub    rax,rdi
  41ed4e:	mov    rcx,r13
  41ed51:	mov    rbx,r15
  41ed54:	mov    QWORD PTR [rsp+0x20],rax
  41ed59:	call   0x41b340
  41ed5e:	test   rax,rax
  41ed61:	jne    0x41eb6d
  41ed67:	jmp    0x41e747
  41ed6c:	mov    ecx,0xc
  41ed71:	call   0x41ad40
  41ed76:	jmp    0x41e6b5
  41ed7b:	cmp    DWORD PTR [rip+0x12d4e],0x2        # 0x431ad0
  41ed82:	je     0x41edae
  41ed84:	mov    rax,QWORD PTR [rip+0x25315]        # 0x4440a0
  41ed8b:	test   rax,rax
  41ed8e:	je     0x41f2f6
  41ed94:	movzx  edx,BYTE PTR [rdi+0x1]
  41ed98:	cmp    BYTE PTR [rax+rdx*1],0x0
  41ed9c:	je     0x41edae
  41ed9e:	xchg   ax,ax
  41eda0:	add    r15,0x1
  41eda4:	movzx  edx,BYTE PTR [r15]
  41eda8:	cmp    BYTE PTR [rax+rdx*1],0x0
  41edac:	jne    0x41eda0
  41edae:	mov    rdi,QWORD PTR [rsp+0x38]
  41edb3:	mov    ecx,0x8
  41edb8:	xor    eax,eax
  41edba:	mov    QWORD PTR [rsp+0x90],0x2f3c
  41edc6:	rep stos QWORD PTR es:[rdi],rax
  41edc9:	nop    DWORD PTR [rax+0x0]
  41edd0:	movzx  edx,BYTE PTR [rbx+rax*1+0x1]
  41edd5:	mov    BYTE PTR [r12+rax*1],dl
  41edd9:	add    rax,0x1
  41eddd:	cmp    r14,rax
  41ede0:	jne    0x41edd0
  41ede2:	lea    rax,[r12+r14*1-0x1]
  41ede7:	mov    rdx,rbp
  41edea:	mov    rcx,r15
  41eded:	mov    QWORD PTR [rsp+0x58],r10
  41edf2:	mov    BYTE PTR [rax+0x1],0x3e
  41edf6:	mov    BYTE PTR [rax+0x2],0x0
  41edfa:	lea    rdi,[rax+0x2]
  41edfe:	call   0x42de08
  41ee03:	test   rax,rax
  41ee06:	mov    rbx,rax
  41ee09:	je     0x41e9a1
  41ee0f:	cmp    DWORD PTR [rip+0x12cba],0x2        # 0x431ad0
  41ee16:	mov    r10,QWORD PTR [rsp+0x58]
  41ee1b:	jne    0x41f199
  41ee21:	mov    rax,QWORD PTR [rip+0x25278]        # 0x4440a0
  41ee28:	mov    r9,rbx
  41ee2b:	sub    rdi,rbp
  41ee2e:	sub    r9,r15
  41ee31:	add    rbx,rdi
  41ee34:	test   rax,rax
  41ee37:	jne    0x41ee44
  41ee39:	jmp    0x41f2c6
  41ee3e:	xchg   ax,ax
  41ee40:	add    rbx,0x1
  41ee44:	movzx  edx,BYTE PTR [rbx]
  41ee47:	cmp    BYTE PTR [rax+rdx*1],0x0
  41ee4b:	jne    0x41ee40
  41ee4d:	cmp    DWORD PTR [rsp+0x70],0x6
  41ee52:	ja     0x41ed33
  41ee58:	mov    edx,DWORD PTR [rsp+0x70]
  41ee5c:	lea    rax,[rip+0x19ed1]        # 0x438d34
  41ee63:	movsxd rdx,DWORD PTR [rax+rdx*4]
  41ee67:	add    rax,rdx
  41ee6a:	jmp    rax
  41ee6c:	lea    rcx,[r9+0x1]
  41ee70:	mov    QWORD PTR [rsp+0x58],r9
  41ee75:	call   0x41b230
  41ee7a:	mov    r9,QWORD PTR [rsp+0x58]
  41ee7f:	mov    rdx,r15
  41ee82:	mov    rcx,rax
  41ee85:	mov    rdi,rax
  41ee88:	mov    r8,r9
  41ee8b:	call   0x42de98
  41ee90:	mov    r9,QWORD PTR [rsp+0x58]
  41ee95:	test   r9,r9
  41ee98:	mov    BYTE PTR [rdi+r9*1],0x0
  41ee9d:	jne    0x41f24e
  41eea3:	lea    rcx,[r14+0x19]
  41eea7:	call   0x41b230
  41eeac:	mov    rdx,QWORD PTR [rsp+0x40]
  41eeb1:	lea    rcx,[rax+0x18]
  41eeb5:	mov    r15,rax
  41eeb8:	mov    QWORD PTR [rax+0x10],0x0
  41eec0:	mov    DWORD PTR [rax],0x6
  41eec6:	mov    r8,r14
  41eec9:	mov    QWORD PTR [rax+0x8],rcx
  41eecd:	call   0x42de98
  41eed2:	mov    BYTE PTR [r15+r14*1+0x18],0x0
  41eed8:	mov    rdx,r15
  41eedb:	mov    rcx,r13
  41eede:	call   0x41b280
  41eee3:	mov    rcx,rdi
  41eee6:	call   0x42df08
  41eeeb:	jmp    0x41ed33
  41eef0:	lea    rcx,[r14+0x19]
  41eef4:	mov    QWORD PTR [rsp+0x60],r10
  41eef9:	mov    QWORD PTR [rsp+0x58],r9
  41eefe:	call   0x41b230
  41ef03:	mov    rdi,rax
  41ef06:	movzx  eax,BYTE PTR [r15]
  41ef0a:	mov    r9,QWORD PTR [rsp+0x58]
  41ef0f:	mov    r10,QWORD PTR [rsp+0x60]
  41ef14:	cmp    al,0x7f
  41ef16:	jbe    0x41ef70
  41ef18:	test   r9,r9
  41ef1b:	je     0x41ef7f
  41ef1d:	xor    r8d,r8d
  41ef20:	xor    edx,edx
  41ef22:	mov    rcx,r15
  41ef25:	call   0x42de00
  41ef2a:	mov    DWORD PTR [rdi+0x10],eax
  41ef2d:	lea    rcx,[rdi+0x18]
  41ef31:	mov    rdx,QWORD PTR [rsp+0x40]
  41ef36:	mov    DWORD PTR [rdi],0x5
  41ef3c:	mov    r8,r14
  41ef3f:	mov    QWORD PTR [rdi+0x8],rcx
  41ef43:	call   0x42de98
  41ef48:	mov    BYTE PTR [rdi+r14*1+0x18],0x0
  41ef4e:	mov    rdx,rdi
  41ef51:	mov    rcx,r13
  41ef54:	call   0x41b280
  41ef59:	jmp    0x41ed33
  41ef5e:	xchg   ax,ax
  41ef60:	add    r15,0x1
  41ef64:	movzx  eax,BYTE PTR [r15]
  41ef68:	sub    r9,0x1
  41ef6c:	cmp    al,0x7f
  41ef6e:	ja     0x41ef18
  41ef70:	test   DWORD PTR [r10+rax*4],0xc01
  41ef78:	je     0x41ef18
  41ef7a:	test   r9,r9
  41ef7d:	jne    0x41ef60
  41ef7f:	mov    DWORD PTR [rdi+0x10],0x0
  41ef86:	jmp    0x41ef2d
  41ef88:	lea    rcx,[r14+0x19]
  41ef8c:	mov    QWORD PTR [rsp+0x60],r10
  41ef91:	mov    QWORD PTR [rsp+0x58],r9
  41ef96:	call   0x41b230
  41ef9b:	movzx  edx,BYTE PTR [r15]
  41ef9f:	mov    rdi,rax
  41efa2:	mov    r9,QWORD PTR [rsp+0x58]
  41efa7:	mov    r10,QWORD PTR [rsp+0x60]
  41efac:	cmp    dl,0x7f
  41efaf:	jbe    0x41f021
  41efb1:	test   r9,r9
  41efb4:	je     0x41f032
  41efb6:	cmp    edx,0x7f
  41efb9:	ja     0x41f2b9
  41efbf:	mov    edx,edx
  41efc1:	mov    eax,DWORD PTR [r10+rdx*4]
  41efc5:	test   eax,0x30000
  41efca:	je     0x41f2e9
  41efd0:	mov    rcx,r15
  41efd3:	call   0x42df70
  41efd8:	mov    DWORD PTR [rdi+0x10],eax
  41efdb:	lea    rcx,[rdi+0x18]
  41efdf:	mov    rdx,QWORD PTR [rsp+0x40]
  41efe4:	mov    DWORD PTR [rdi],0x3
  41efea:	mov    r8,r14
  41efed:	mov    QWORD PTR [rdi+0x8],rcx
  41eff1:	call   0x42de98
  41eff6:	mov    rax,QWORD PTR [rdi+0x8]
  41effa:	mov    rdx,rdi
  41effd:	mov    rcx,r13
  41f000:	mov    BYTE PTR [rax+r14*1],0x0
  41f005:	call   0x41b280
  41f00a:	jmp    0x41ed33
  41f00f:	nop
  41f010:	add    r15,0x1
  41f014:	movzx  edx,BYTE PTR [r15]
  41f018:	sub    r9,0x1
  41f01c:	cmp    dl,0x7f
  41f01f:	ja     0x41efb1
  41f021:	mov    eax,edx
  41f023:	test   DWORD PTR [r10+rax*4],0xc01
  41f02b:	je     0x41efb1
  41f02d:	test   r9,r9
  41f030:	jne    0x41f010
  41f032:	mov    DWORD PTR [rdi+0x10],0x0
  41f039:	jmp    0x41efdb
  41f03b:	mov    rdx,QWORD PTR [rsp+0x40]
  41f040:	mov    QWORD PTR [rsp+0x20],r9
  41f045:	mov    r8,r14
  41f048:	mov    r9,r15
  41f04b:	mov    rcx,r13
  41f04e:	mov    QWORD PTR [rsp+0x58],r10
  41f053:	call   0x41b340
  41f058:	mov    r15d,DWORD PTR [rip+0x12a71]        # 0x431ad0
  41f05f:	mov    r14,rax
  41f062:	cmp    r15d,0x2
  41f066:	je     0x41ed33
  41f06c:	lea    rdi,[rax+0x10]
  41f070:	movzx  eax,BYTE PTR [rax+0x10]
  41f074:	mov    r10,QWORD PTR [rsp+0x58]
  41f079:	cmp    al,0x7f
  41f07b:	ja     0x41f26f
  41f081:	test   DWORD PTR [r10+rax*4],0xc01
  41f089:	je     0x41f26f
  41f08f:	mov    rax,QWORD PTR [rip+0x2500a]        # 0x4440a0
  41f096:	test   rax,rax
  41f099:	je     0x41f356
  41f09f:	mov    r9,rax
  41f0a2:	movzx  ecx,BYTE PTR [r14+0x11]
  41f0a7:	lea    rdx,[r14+0x11]
  41f0ab:	cmp    BYTE PTR [rax+rcx*1],0x0
  41f0af:	je     0x41f0be
  41f0b1:	add    rdx,0x1
  41f0b5:	movzx  ecx,BYTE PTR [rdx]
  41f0b8:	cmp    BYTE PTR [rax+rcx*1],0x0
  41f0bc:	jne    0x41f0b1
  41f0be:	mov    rcx,rdx
  41f0c1:	mov    QWORD PTR [rsp+0x60],r9
  41f0c6:	mov    QWORD PTR [rsp+0x58],rdx
  41f0cb:	call   0x42de30
  41f0d0:	mov    rdx,QWORD PTR [rsp+0x58]
  41f0d5:	lea    r8,[rax+0x1]
  41f0d9:	mov    rcx,rdi
  41f0dc:	mov    QWORD PTR [rsp+0x40],rax
  41f0e1:	call   0x42de90
  41f0e6:	mov    r10,QWORD PTR [rsp+0x40]
  41f0eb:	mov    r9,QWORD PTR [rsp+0x60]
  41f0f0:	lea    rdx,[rdi+r10*1]
  41f0f4:	test   r9,r9
  41f0f7:	je     0x41f36c
  41f0fd:	cmp    rdi,rdx
  41f100:	jb     0x41f129
  41f102:	mov    rcx,rdi
  41f105:	mov    QWORD PTR [rsp+0x40],r9
  41f10a:	call   0x42de30
  41f10f:	lea    rdx,[rdi+rax*1]
  41f113:	mov    r9,QWORD PTR [rsp+0x40]
  41f118:	cmp    rdi,rdx
  41f11b:	jb     0x41f129
  41f11d:	jmp    0x41f134
  41f11f:	nop
  41f120:	sub    rdx,0x1
  41f124:	cmp    rdi,rdx
  41f127:	jae    0x41f134
  41f129:	movzx  eax,BYTE PTR [rdx-0x1]
  41f12d:	cmp    BYTE PTR [r9+rax*1],0x0
  41f132:	jne    0x41f120
  41f134:	cmp    r15d,0x1
  41f138:	mov    BYTE PTR [rdx],0x0
  41f13b:	je     0x41ed33
  41f141:	movzx  eax,BYTE PTR [r14+0x10]
  41f146:	cmp    al,0x22
  41f148:	je     0x41f152
  41f14a:	cmp    al,0x27
  41f14c:	jne    0x41ed33
  41f152:	movzx  eax,BYTE PTR [rdx-0x1]
  41f156:	cmp    al,0x22
  41f158:	je     0x41f162
  41f15a:	cmp    al,0x27
  41f15c:	jne    0x41ed33
  41f162:	xor    edx,edx
  41f164:	mov    rcx,rdi
  41f167:	call   0x41e440
  41f16c:	jmp    0x41ed33
  41f171:	mov    ecx,0xa
  41f176:	mov    QWORD PTR [rsp+0x40],r8
  41f17b:	call   0x41ad40
  41f180:	mov    r8,QWORD PTR [rsp+0x40]
  41f185:	jmp    0x41e7e4
  41f18a:	mov    ecx,0x1c
  41f18f:	call   0x41ad40
  41f194:	jmp    0x41e7a4
  41f199:	mov    r8,QWORD PTR [rip+0x24f00]        # 0x4440a0
  41f1a0:	test   r8,r8
  41f1a3:	mov    rdx,r8
  41f1a6:	je     0x41f32b
  41f1ac:	cmp    r15,rbx
  41f1af:	jb     0x41f225
  41f1b1:	mov    rcx,r15
  41f1b4:	mov    QWORD PTR [rsp+0x68],r10
  41f1b9:	mov    QWORD PTR [rsp+0x60],rdx
  41f1be:	mov    QWORD PTR [rsp+0x58],r8
  41f1c3:	call   0x42de30
  41f1c8:	lea    r9,[r15+rax*1]
  41f1cc:	mov    r8,QWORD PTR [rsp+0x58]
  41f1d1:	mov    rdx,QWORD PTR [rsp+0x60]
  41f1d6:	mov    r10,QWORD PTR [rsp+0x68]
  41f1db:	cmp    r15,r9
  41f1de:	jb     0x41f1eb
  41f1e0:	jmp    0x41f1f7
  41f1e2:	sub    r9,0x1
  41f1e6:	cmp    r15,r9
  41f1e9:	jae    0x41f1f7
  41f1eb:	movzx  eax,BYTE PTR [r9-0x1]
  41f1f0:	cmp    BYTE PTR [r8+rax*1],0x0
  41f1f5:	jne    0x41f1e2
  41f1f7:	mov    rax,rdx
  41f1fa:	jmp    0x41ee2b
  41f1ff:	cmp    BYTE PTR [rdi+0x1],0x3e
  41f203:	lea    rax,[rdi+0x1]
  41f207:	jne    0x41e9a1
  41f20d:	mov    DWORD PTR [rsp+0x70],0x0
  41f215:	mov    rdi,rax
  41f218:	jmp    0x41ecff
  41f21d:	mov    rbx,r14
  41f220:	jmp    0x41eb25
  41f225:	mov    r9,rbx
  41f228:	jmp    0x41f1eb
  41f22a:	call   QWORD PTR [rip+0x29600]        # 0x448830
  41f230:	mov    DWORD PTR [rax],0x16
  41f236:	xor    eax,eax
  41f238:	jmp    0x41e839
  41f23d:	call   QWORD PTR [rip+0x295ed]        # 0x448830
  41f243:	mov    DWORD PTR [rax],0x2
  41f249:	jmp    0x41e826
  41f24e:	mov    rdx,QWORD PTR [rsp+0x40]
  41f253:	mov    r8,r14
  41f256:	mov    rcx,rdi
  41f259:	call   0x41e680
  41f25e:	test   rax,rax
  41f261:	mov    r15,rax
  41f264:	jne    0x41eed8
  41f26a:	jmp    0x41eee3
  41f26f:	mov    rcx,rdi
  41f272:	call   0x42de30
  41f277:	mov    r9,QWORD PTR [rip+0x24e22]        # 0x4440a0
  41f27e:	lea    rdx,[rdi+rax*1]
  41f282:	jmp    0x41f0f4
  41f287:	mov    ecx,0x1c
  41f28c:	mov    QWORD PTR [rsp+0x58],r10
  41f291:	call   0x41ad40
  41f296:	mov    r10,QWORD PTR [rsp+0x58]
  41f29b:	jmp    0x41e963
  41f2a0:	mov    ecx,0xa
  41f2a5:	mov    QWORD PTR [rsp+0x40],r8
  41f2aa:	call   0x41ad40
  41f2af:	mov    r8,QWORD PTR [rsp+0x40]
  41f2b4:	jmp    0x41ea0b
  41f2b9:	mov    eax,0x1
  41f2be:	mov    DWORD PTR [rdi+0x10],eax
  41f2c1:	jmp    0x41efdb
  41f2c6:	mov    ecx,0xc
  41f2cb:	mov    QWORD PTR [rsp+0x60],r10
  41f2d0:	mov    QWORD PTR [rsp+0x58],r9
  41f2d5:	call   0x41ad40
  41f2da:	mov    r10,QWORD PTR [rsp+0x60]
  41f2df:	mov    r9,QWORD PTR [rsp+0x58]
  41f2e4:	jmp    0x41ee44
  41f2e9:	test   eax,0x8000002
  41f2ee:	sete   al
  41f2f1:	movzx  eax,al
  41f2f4:	jmp    0x41f2be
  41f2f6:	mov    ecx,0xc
  41f2fb:	mov    QWORD PTR [rsp+0x58],r10
  41f300:	call   0x41ad40
  41f305:	mov    r10,QWORD PTR [rsp+0x58]
  41f30a:	jmp    0x41ed94
  41f30f:	mov    ecx,0xc
  41f314:	mov    QWORD PTR [rsp+0x58],r10
  41f319:	call   0x41ad40
  41f31e:	movzx  edx,BYTE PTR [rdi]
  41f321:	mov    r10,QWORD PTR [rsp+0x58]
  41f326:	jmp    0x41eca7
  41f32b:	mov    ecx,0xc
  41f330:	mov    QWORD PTR [rsp+0x58],r10
  41f335:	call   0x41ad40
  41f33a:	mov    rdx,QWORD PTR [rip+0x24d5f]        # 0x4440a0
  41f341:	mov    r8,rax
  41f344:	mov    r10,QWORD PTR [rsp+0x58]
  41f349:	jmp    0x41f1ac
  41f34e:	mov    r15,rcx
  41f351:	jmp    0x41eaf0
  41f356:	mov    ecx,0xc
  41f35b:	call   0x41ad40
  41f360:	mov    r9,QWORD PTR [rip+0x24d39]        # 0x4440a0
  41f367:	jmp    0x41f0a2
  41f36c:	mov    ecx,0xc
  41f371:	mov    QWORD PTR [rsp+0x40],rdx
  41f376:	call   0x41ad40
  41f37b:	mov    rdx,QWORD PTR [rsp+0x40]
  41f380:	mov    r9,rax
  41f383:	jmp    0x41f0fd
  41f388:	mov    r15,rbx
  41f38b:	jmp    0x41ed14
  41f390:	push   rdi
  41f391:	sub    rsp,0x90
  41f398:	xor    eax,eax
  41f39a:	lea    rdi,[rsp+0x20]
  41f39f:	mov    r9,rcx
  41f3a2:	mov    ecx,0xd
  41f3a7:	rep stos QWORD PTR es:[rdi],rax
  41f3aa:	mov    eax,edx
  41f3ac:	lea    rdx,[rsp+0x20]
  41f3b1:	mov    QWORD PTR [rsp+0x38],rax
  41f3b6:	mov    cl,0x3
  41f3b8:	call   QWORD PTR [r9+0x38]
  41f3bc:	mov    rax,QWORD PTR [rsp+0x38]
  41f3c1:	add    rsp,0x90
  41f3c8:	pop    rdi
  41f3c9:	ret    
  41f3ca:	nop    WORD PTR [rax+rax*1+0x0]
  41f3d0:	push   rbx
  41f3d1:	sub    rsp,0x40
  41f3d5:	cmp    rcx,0x2
  41f3d9:	mov    rbx,rdx
  41f3dc:	je     0x41f430
  41f3de:	cmp    rcx,0x3
  41f3e2:	je     0x41f410
  41f3e4:	cmp    rcx,0x1
  41f3e8:	je     0x41f400
  41f3ea:	xor    eax,eax
  41f3ec:	test   BYTE PTR [rdx+0x10],0x8
  41f3f0:	je     0x41f490
  41f3f6:	add    rsp,0x40
  41f3fa:	pop    rbx
  41f3fb:	ret    
  41f3fc:	nop    DWORD PTR [rax+0x0]
  41f400:	call   0x419890
  41f405:	xor    eax,eax
  41f407:	add    rsp,0x40
  41f40b:	pop    rbx
  41f40c:	ret    
  41f40d:	nop    DWORD PTR [rax]
  41f410:	mov    rax,QWORD PTR [rdx+0x18]
  41f414:	cmp    r9d,eax
  41f417:	jbe    0x41f480
  41f419:	mov    eax,eax
  41f41b:	mov    rax,QWORD PTR [r8+rax*8]
  41f41f:	mov    QWORD PTR [rdx+0x18],rax
  41f423:	xor    eax,eax
  41f425:	add    rsp,0x40
  41f429:	pop    rbx
  41f42a:	ret    
  41f42b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f430:	mov    rbx,QWORD PTR [rdx+0x18]
  41f434:	cmp    r9d,ebx
  41f437:	ja     0x41f450
  41f439:	lea    rcx,[rip+0x1aa64]        # 0x439ea4
  41f440:	mov    edx,ebx
  41f442:	call   0x419800
  41f447:	xor    eax,eax
  41f449:	add    rsp,0x40
  41f44d:	pop    rbx
  41f44e:	ret    
  41f44f:	nop
  41f450:	mov    QWORD PTR [rsp+0x38],r8
  41f455:	mov    ebx,ebx
  41f457:	call   QWORD PTR [rip+0x29383]        # 0x4487e0
  41f45d:	mov    r8,QWORD PTR [rsp+0x38]
  41f462:	lea    rdx,[rax+0x30]
  41f466:	mov    rcx,QWORD PTR [r8+rbx*8]
  41f46a:	call   0x42df18
  41f46f:	xor    eax,eax
  41f471:	add    rsp,0x40
  41f475:	pop    rbx
  41f476:	ret    
  41f477:	nop    WORD PTR [rax+rax*1+0x0]
  41f480:	lea    rax,[rip+0x1aa28]        # 0x439eaf
  41f487:	jmp    0x41f3f6
  41f48c:	nop    DWORD PTR [rax+0x0]
  41f490:	mov    DWORD PTR [rsp+0x20],r9d
  41f495:	mov    r9,r8
  41f498:	mov    r8,rdx
  41f49b:	mov    rdx,rcx
  41f49e:	mov    rcx,QWORD PTR [rbx+0x18]
  41f4a2:	call   0x419bc0
  41f4a7:	test   BYTE PTR [rbx+0x10],0x40
  41f4ab:	je     0x41f3f6
  41f4b1:	mov    rcx,QWORD PTR [rbx+0x18]
  41f4b5:	mov    QWORD PTR [rsp+0x38],rax
  41f4ba:	call   0x42df08
  41f4bf:	and    DWORD PTR [rbx+0x10],0xffffffbf
  41f4c3:	mov    QWORD PTR [rbx+0x18],0x0
  41f4cb:	mov    rax,QWORD PTR [rsp+0x38]
  41f4d0:	jmp    0x41f3f6
  41f4d5:	nop
  41f4d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f4e0:	push   rsi
  41f4e1:	push   rbx
  41f4e2:	sub    rsp,0x28
  41f4e6:	mov    rsi,QWORD PTR [rcx+0x18]
  41f4ea:	mov    rbx,rcx
  41f4ed:	mov    rdx,rcx
  41f4f0:	mov    ecx,0x3
  41f4f5:	call   QWORD PTR [rbx+0x38]
  41f4f8:	mov    rax,QWORD PTR [rbx+0x18]
  41f4fc:	mov    QWORD PTR [rbx+0x18],rsi
  41f500:	add    rsp,0x28
  41f504:	pop    rbx
  41f505:	pop    rsi
  41f506:	ret    
  41f507:	nop    WORD PTR [rax+rax*1+0x0]
  41f510:	push   r15
  41f512:	push   r14
  41f514:	push   r13
  41f516:	push   r12
  41f518:	push   rbp
  41f519:	push   rdi
  41f51a:	push   rsi
  41f51b:	push   rbx
  41f51c:	sub    rsp,0xe8
  41f523:	cmp    rcx,0x2
  41f527:	mov    r13,rcx
  41f52a:	mov    r12,rdx
  41f52d:	mov    rbx,r8
  41f530:	mov    ebp,r9d
  41f533:	je     0x41f7d1
  41f539:	cmp    rcx,0x3
  41f53d:	je     0x41f700
  41f543:	cmp    rcx,0x1
  41f547:	je     0x41f6e0
  41f54d:	test   BYTE PTR [rdx+0x10],0x8
  41f551:	jne    0x41f6eb
  41f557:	mov    rax,QWORD PTR [rip+0x24b42]        # 0x4440a0
  41f55e:	mov    r15,QWORD PTR [rdx+0x18]
  41f562:	mov    rsi,QWORD PTR [rdx+0x20]
  41f566:	test   rax,rax
  41f569:	jne    0x41f574
  41f56b:	jmp    0x41faf0
  41f570:	add    r15,0x1
  41f574:	movzx  ecx,BYTE PTR [r15]
  41f578:	cmp    BYTE PTR [rax+rcx*1],0x0
  41f57c:	jne    0x41f570
  41f57e:	test   cl,cl
  41f580:	je     0x41f8c0
  41f586:	cmp    cl,0x3d
  41f589:	mov    QWORD PTR [rsp+0x30],rsi
  41f58e:	je     0x41fa80
  41f594:	cmp    cl,0x5e
  41f597:	je     0x41f874
  41f59d:	cmp    cl,0x2c
  41f5a0:	je     0x41f8c0
  41f5a6:	mov    BYTE PTR [rsp+0x4f],0x0
  41f5ab:	lea    rax,[rsp+0x58]
  41f5b0:	movzx  edx,BYTE PTR [r15]
  41f5b4:	mov    QWORD PTR [rsp+0x38],rax
  41f5b9:	lea    rax,[rsp+0x60]
  41f5be:	mov    QWORD PTR [rsp+0x40],rax
  41f5c3:	test   dl,dl
  41f5c5:	je     0x41fa31
  41f5cb:	cmp    dl,0x2c
  41f5ce:	je     0x41f970
  41f5d4:	jg     0x41f950
  41f5da:	cmp    dl,0x21
  41f5dd:	je     0x41f9c0
  41f5e3:	cmp    dl,0x2b
  41f5e6:	jne    0x41f95e
  41f5ec:	xor    r14d,r14d
  41f5ef:	mov    rax,QWORD PTR [rip+0x24aaa]        # 0x4440a0
  41f5f6:	lea    rsi,[r15+0x1]
  41f5fa:	test   rax,rax
  41f5fd:	je     0x41fa67
  41f603:	movzx  edx,BYTE PTR [r15+0x1]
  41f608:	mov    r15,rsi
  41f60b:	cmp    BYTE PTR [rax+rdx*1],0x0
  41f60f:	je     0x41f61f
  41f611:	add    r15,0x1
  41f615:	movzx  edx,BYTE PTR [r15]
  41f619:	cmp    BYTE PTR [rax+rdx*1],0x0
  41f61d:	jne    0x41f611
  41f61f:	mov    rax,QWORD PTR [rip+0x24b6a]        # 0x444190
  41f626:	test   rax,rax
  41f629:	je     0x41fa13
  41f62f:	movzx  edx,BYTE PTR [r15]
  41f633:	test   dl,dl
  41f635:	je     0x41fa31
  41f63b:	cmp    BYTE PTR [rax+rdx*1],0x0
  41f63f:	jne    0x41fa31
  41f645:	mov    rcx,r15
  41f648:	jmp    0x41f656
  41f64a:	nop    WORD PTR [rax+rax*1+0x0]
  41f650:	cmp    BYTE PTR [rax+rdx*1],0x0
  41f654:	jne    0x41f661
  41f656:	add    rcx,0x1
  41f65a:	movzx  edx,BYTE PTR [rcx]
  41f65d:	test   dl,dl
  41f65f:	jne    0x41f650
  41f661:	mov    r11d,ecx
  41f664:	sub    r11d,r15d
  41f667:	test   r11d,r11d
  41f66a:	je     0x41fa31
  41f670:	cmp    r11d,0x3
  41f674:	je     0x41f9e0
  41f67a:	cmp    r11d,0x4
  41f67e:	jne    0x41f8d0
  41f684:	lea    rdi,[rip+0x1a710]        # 0x439d9b
  41f68b:	mov    ecx,0x4
  41f690:	mov    rsi,r15
  41f693:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41f695:	jne    0x41f8d0
  41f69b:	add    r15,0x4
  41f69f:	test   r14b,r14b
  41f6a2:	jne    0x41f6b0
  41f6a4:	mov    QWORD PTR [rsp+0x30],0x0
  41f6ad:	nop    DWORD PTR [rax]
  41f6b0:	mov    rax,QWORD PTR [rip+0x249e9]        # 0x4440a0
  41f6b7:	test   rax,rax
  41f6ba:	jne    0x41f6c5
  41f6bc:	jmp    0x41fa22
  41f6c1:	add    r15,0x1
  41f6c5:	movzx  ecx,BYTE PTR [r15]
  41f6c9:	cmp    BYTE PTR [rax+rcx*1],0x0
  41f6cd:	mov    rdx,rcx
  41f6d0:	jne    0x41f6c1
  41f6d2:	jmp    0x41f5c3
  41f6d7:	nop    WORD PTR [rax+rax*1+0x0]
  41f6e0:	mov    ecx,0x1
  41f6e5:	call   0x419890
  41f6ea:	nop
  41f6eb:	add    rsp,0xe8
  41f6f2:	pop    rbx
  41f6f3:	pop    rsi
  41f6f4:	pop    rdi
  41f6f5:	pop    rbp
  41f6f6:	pop    r12
  41f6f8:	pop    r13
  41f6fa:	pop    r14
  41f6fc:	pop    r15
  41f6fe:	ret    
  41f6ff:	nop
  41f700:	mov    eax,0x1
  41f705:	mov    ecx,r9d
  41f708:	shl    eax,cl
  41f70a:	lea    r13d,[rax-0x1]
  41f70e:	mov    r14,r13
  41f711:	and    r14,QWORD PTR [rdx+0x20]
  41f715:	je     0x41fa76
  41f71b:	mov    rsi,r8
  41f71e:	mov    edi,0x1
  41f723:	xor    r15d,r15d
  41f726:	jmp    0x41f739
  41f728:	nop    DWORD PTR [rax+rax*1+0x0]
  41f730:	add    rsi,0x8
  41f734:	shr    r14,1
  41f737:	je     0x41f755
  41f739:	test   r14b,0x1
  41f73d:	je     0x41f74c
  41f73f:	mov    rcx,QWORD PTR [rsi]
  41f742:	call   0x42de30
  41f747:	lea    rdi,[rdi+rax*1+0x4]
  41f74c:	add    r15d,0x1
  41f750:	cmp    ebp,r15d
  41f753:	ja     0x41f730
  41f755:	mov    rcx,rdi
  41f758:	mov    rbp,r13
  41f75b:	call   0x41b230
  41f760:	and    rbp,QWORD PTR [r12+0x20]
  41f765:	mov    r14,rax
  41f768:	mov    QWORD PTR [r12+0x18],rax
  41f76d:	je     0x41f860
  41f773:	xor    r12d,r12d
  41f776:	jmp    0x41f794
  41f778:	nop    DWORD PTR [rax+rax*1+0x0]
  41f780:	mov    edx,0x2b20
  41f785:	lea    r14,[rax+0x3]
  41f789:	mov    BYTE PTR [rax+0x2],0x20
  41f78d:	mov    WORD PTR [rax],dx
  41f790:	add    r12d,0x1
  41f794:	mov    eax,ebp
  41f796:	shr    rbp,1
  41f799:	and    eax,0x1
  41f79c:	test   eax,eax
  41f79e:	je     0x41f790
  41f7a0:	mov    eax,r12d
  41f7a3:	mov    r13,QWORD PTR [rbx+rax*8]
  41f7a7:	mov    rcx,r13
  41f7aa:	call   0x42de30
  41f7af:	mov    rdx,r13
  41f7b2:	mov    r8,rax
  41f7b5:	mov    rcx,r14
  41f7b8:	mov    rsi,rax
  41f7bb:	call   0x42de98
  41f7c0:	test   rbp,rbp
  41f7c3:	lea    rax,[r14+rsi*1]
  41f7c7:	jne    0x41f780
  41f7c9:	mov    BYTE PTR [rax],0x0
  41f7cc:	jmp    0x41f6eb
  41f7d1:	mov    eax,0x1
  41f7d6:	mov    ecx,r9d
  41f7d9:	xor    r13d,r13d
  41f7dc:	shl    rax,cl
  41f7df:	xor    edx,edx
  41f7e1:	mov    rsi,QWORD PTR [rip+0x28ff8]        # 0x4487e0
  41f7e8:	sub    rax,0x1
  41f7ec:	and    rax,QWORD PTR [r12+0x20]
  41f7f1:	mov    r14,rsi
  41f7f4:	mov    r12,rax
  41f7f7:	jne    0x41f82b
  41f7f9:	jmp    0x41f6eb
  41f7fe:	xchg   ax,ax
  41f800:	call   rdi
  41f802:	mov    rcx,QWORD PTR [rbx]
  41f805:	lea    rdx,[rax+0x30]
  41f809:	call   0x42df18
  41f80e:	mov    rdx,r15
  41f811:	add    r13d,0x1
  41f815:	cmp    ebp,r13d
  41f818:	jbe    0x41f6eb
  41f81e:	add    rbx,0x8
  41f822:	shr    r12,1
  41f825:	je     0x41f6eb
  41f82b:	test   r12b,0x1
  41f82f:	je     0x41f811
  41f831:	test   rdx,rdx
  41f834:	lea    r15,[rdx+0x1]
  41f838:	mov    rdi,rsi
  41f83b:	je     0x41f800
  41f83d:	call   r14
  41f840:	lea    rcx,[rip+0x1a715]        # 0x439f5c
  41f847:	lea    r9,[rax+0x30]
  41f84b:	mov    r8d,0x3
  41f851:	mov    edx,0x1
  41f856:	mov    rdi,r14
  41f859:	call   0x42dee0
  41f85e:	jmp    0x41f800
  41f860:	mov    BYTE PTR [rax],0x0
  41f863:	jmp    0x41f6eb
  41f868:	mov    r15,rsi
  41f86b:	mov    QWORD PTR [rsp+0x30],0x0
  41f874:	mov    rax,QWORD PTR [rip+0x24825]        # 0x4440a0
  41f87b:	lea    rsi,[r15+0x1]
  41f87f:	test   rax,rax
  41f882:	je     0x41faff
  41f888:	movzx  ecx,BYTE PTR [r15+0x1]
  41f88d:	mov    r15,rsi
  41f890:	cmp    BYTE PTR [rax+rcx*1],0x0
  41f894:	mov    rdx,rcx
  41f897:	je     0x41f8b1
  41f899:	nop    DWORD PTR [rax+0x0]
  41f8a0:	add    r15,0x1
  41f8a4:	movzx  ecx,BYTE PTR [r15]
  41f8a8:	cmp    BYTE PTR [rax+rcx*1],0x0
  41f8ac:	mov    rdx,rcx
  41f8af:	jne    0x41f8a0
  41f8b1:	cmp    dl,0x2c
  41f8b4:	mov    BYTE PTR [rsp+0x4f],0x1
  41f8b9:	jne    0x41f5ab
  41f8bf:	nop
  41f8c0:	mov    QWORD PTR [r12+0x20],0x0
  41f8c9:	jmp    0x41f6eb
  41f8ce:	xchg   ax,ax
  41f8d0:	mov    rdx,QWORD PTR [rsp+0x38]
  41f8d5:	xor    r8d,r8d
  41f8d8:	mov    rcx,r15
  41f8db:	mov    DWORD PTR [rsp+0x48],r11d
  41f8e0:	call   0x42ddf8
  41f8e5:	movsxd rdi,DWORD PTR [rsp+0x48]
  41f8ea:	mov    rdx,QWORD PTR [rsp+0x58]
  41f8ef:	mov    eax,eax
  41f8f1:	lea    rsi,[r15+rdi*1]
  41f8f5:	cmp    rsi,rdx
  41f8f8:	je     0x41f937
  41f8fa:	mov    r15,QWORD PTR [rsp+0x40]
  41f8ff:	mov    r8,rdi
  41f902:	mov    rcx,r15
  41f905:	call   0x42de98
  41f90a:	mov    BYTE PTR [rsp+rdi*1+0x60],0x0
  41f90f:	mov    r9,rbx
  41f912:	mov    DWORD PTR [rsp+0x20],ebp
  41f916:	mov    r8,r12
  41f919:	mov    rdx,r13
  41f91c:	mov    rcx,r15
  41f91f:	call   0x419bc0
  41f924:	cmp    ebp,eax
  41f926:	jbe    0x41f8c0
  41f928:	mov    ecx,eax
  41f92a:	mov    edx,0x1
  41f92f:	shl    edx,cl
  41f931:	test   edx,edx
  41f933:	mov    eax,edx
  41f935:	je     0x41f8c0
  41f937:	test   r14b,r14b
  41f93a:	je     0x41f9d0
  41f940:	not    rax
  41f943:	and    QWORD PTR [rsp+0x30],rax
  41f948:	mov    r15,rsi
  41f94b:	jmp    0x41f6b0
  41f950:	cmp    dl,0x2d
  41f953:	je     0x41f9c0
  41f955:	cmp    dl,0x7c
  41f958:	je     0x41f5ec
  41f95e:	xor    r14d,r14d
  41f961:	jmp    0x41f61f
  41f966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f970:	mov    rax,QWORD PTR [rip+0x24729]        # 0x4440a0
  41f977:	lea    rsi,[r15+0x1]
  41f97b:	test   rax,rax
  41f97e:	je     0x41fae1
  41f984:	movzx  ecx,BYTE PTR [r15+0x1]
  41f989:	cmp    BYTE PTR [rax+rcx*1],0x0
  41f98d:	mov    rdx,rcx
  41f990:	je     0x41f9a2
  41f992:	add    rsi,0x1
  41f996:	movzx  ecx,BYTE PTR [rsi]
  41f999:	cmp    BYTE PTR [rax+rcx*1],0x0
  41f99d:	mov    rdx,rcx
  41f9a0:	jne    0x41f992
  41f9a2:	cmp    dl,0x7c
  41f9a5:	je     0x41f8c0
  41f9ab:	cmp    dl,0x2c
  41f9ae:	je     0x41f8c0
  41f9b4:	movzx  edx,BYTE PTR [rsi]
  41f9b7:	mov    r15,rsi
  41f9ba:	jmp    0x41f5c3
  41f9bf:	nop
  41f9c0:	mov    r14d,0x1
  41f9c6:	jmp    0x41f5ef
  41f9cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f9d0:	or     QWORD PTR [rsp+0x30],rax
  41f9d5:	jmp    0x41f948
  41f9da:	nop    WORD PTR [rax+rax*1+0x0]
  41f9e0:	lea    rdi,[rip+0x1a45a]        # 0x439e41
  41f9e7:	mov    ecx,0x3
  41f9ec:	mov    rsi,r15
  41f9ef:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41f9f1:	jne    0x41f8d0
  41f9f7:	add    r15,0x3
  41f9fb:	test   r14b,r14b
  41f9fe:	jne    0x41f6a4
  41fa04:	mov    eax,0xffffffff
  41fa09:	mov    QWORD PTR [rsp+0x30],rax
  41fa0e:	jmp    0x41f6b0
  41fa13:	mov    ecx,0x2a
  41fa18:	call   0x41ad40
  41fa1d:	jmp    0x41f62f
  41fa22:	mov    ecx,0xc
  41fa27:	call   0x41ad40
  41fa2c:	jmp    0x41f6c5
  41fa31:	cmp    BYTE PTR [rsp+0x4f],0x0
  41fa36:	je     0x41fa42
  41fa38:	mov    eax,0xffffffff
  41fa3d:	xor    QWORD PTR [rsp+0x30],rax
  41fa42:	cmp    ebp,0x3f
  41fa45:	ja     0x41fa58
  41fa47:	mov    eax,0x1
  41fa4c:	mov    ecx,ebp
  41fa4e:	shl    eax,cl
  41fa50:	sub    eax,0x1
  41fa53:	and    QWORD PTR [rsp+0x30],rax
  41fa58:	mov    rax,QWORD PTR [rsp+0x30]
  41fa5d:	mov    QWORD PTR [r12+0x20],rax
  41fa62:	jmp    0x41f6eb
  41fa67:	mov    ecx,0xc
  41fa6c:	call   0x41ad40
  41fa71:	jmp    0x41f603
  41fa76:	mov    edi,0x1
  41fa7b:	jmp    0x41f755
  41fa80:	mov    rax,QWORD PTR [rip+0x24619]        # 0x4440a0
  41fa87:	lea    rsi,[r15+0x1]
  41fa8b:	test   rax,rax
  41fa8e:	je     0x41fb0e
  41fa90:	movzx  ecx,BYTE PTR [r15+0x1]
  41fa95:	cmp    BYTE PTR [rax+rcx*1],0x0
  41fa99:	mov    rdx,rcx
  41fa9c:	je     0x41fab0
  41fa9e:	xchg   ax,ax
  41faa0:	add    rsi,0x1
  41faa4:	movzx  ecx,BYTE PTR [rsi]
  41faa7:	cmp    BYTE PTR [rax+rcx*1],0x0
  41faab:	mov    rdx,rcx
  41faae:	jne    0x41faa0
  41fab0:	cmp    dl,0x3d
  41fab3:	je     0x41f8c0
  41fab9:	cmp    dl,0x5e
  41fabc:	je     0x41f868
  41fac2:	cmp    dl,0x2c
  41fac5:	je     0x41f8c0
  41facb:	mov    r15,rsi
  41face:	mov    BYTE PTR [rsp+0x4f],0x0
  41fad3:	mov    QWORD PTR [rsp+0x30],0x0
  41fadc:	jmp    0x41f5ab
  41fae1:	mov    ecx,0xc
  41fae6:	call   0x41ad40
  41faeb:	jmp    0x41f984
  41faf0:	mov    ecx,0xc
  41faf5:	call   0x41ad40
  41fafa:	jmp    0x41f574
  41faff:	mov    ecx,0xc
  41fb04:	call   0x41ad40
  41fb09:	jmp    0x41f888
  41fb0e:	mov    ecx,0xc
  41fb13:	call   0x41ad40
  41fb18:	jmp    0x41fa90
  41fb1d:	nop    DWORD PTR [rax]
  41fb20:	push   r15
  41fb22:	push   r14
  41fb24:	push   r13
  41fb26:	push   r12
  41fb28:	push   rbp
  41fb29:	push   rdi
  41fb2a:	push   rsi
  41fb2b:	push   rbx
  41fb2c:	sub    rsp,0x68
  41fb30:	cmp    rcx,0xf
  41fb34:	mov    rsi,rcx
  41fb37:	mov    rbx,rdx
  41fb3a:	mov    edi,r8d
  41fb3d:	mov    rbp,r9
  41fb40:	ja     0x41fb60
  41fb42:	cmp    rcx,0x1
  41fb46:	je     0x41fc70
  41fb4c:	add    rsp,0x68
  41fb50:	pop    rbx
  41fb51:	pop    rsi
  41fb52:	pop    rdi
  41fb53:	pop    rbp
  41fb54:	pop    r12
  41fb56:	pop    r13
  41fb58:	pop    r14
  41fb5a:	pop    r15
  41fb5c:	ret    
  41fb5d:	nop    DWORD PTR [rax]
  41fb60:	test   BYTE PTR [rdx+0x10],0x8
  41fb64:	je     0x41fb80
  41fb66:	mov    rcx,QWORD PTR [rdx+0x20]
  41fb6a:	test   rcx,rcx
  41fb6d:	je     0x41fb4c
  41fb6f:	call   0x42df08
  41fb74:	jmp    0x41fb4c
  41fb76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fb80:	mov    r13,QWORD PTR [rdx+0x18]
  41fb84:	mov    r14,QWORD PTR [rip+0x28ca5]        # 0x448830
  41fb8b:	call   r14
  41fb8e:	mov    DWORD PTR [rax],0x0
  41fb94:	mov    eax,edi
  41fb96:	and    eax,0x3
  41fb99:	cmp    eax,0x1
  41fb9c:	je     0x41fce5
  41fba2:	cmp    eax,0x2
  41fba5:	je     0x41fca3
  41fbab:	mov    edx,0x5c
  41fbb0:	mov    rcx,r13
  41fbb3:	call   0x42de10
  41fbb8:	test   rax,rax
  41fbbb:	je     0x41fc1c
  41fbbd:	sub    rax,r13
  41fbc0:	lea    rcx,[rax+0x1]
  41fbc4:	mov    r12,rax
  41fbc7:	call   0x41b230
  41fbcc:	mov    r8,r12
  41fbcf:	mov    r15,rax
  41fbd2:	mov    rdx,r13
  41fbd5:	mov    rcx,rax
  41fbd8:	call   0x42de98
  41fbdd:	mov    BYTE PTR [r15+r12*1],0x0
  41fbe2:	lea    rdx,[rsp+0x20]
  41fbe7:	mov    rcx,r15
  41fbea:	call   QWORD PTR [rip+0x28e90]        # 0x448a80
  41fbf0:	test   eax,eax
  41fbf2:	jne    0x41fda6
  41fbf8:	call   r14
  41fbfb:	mov    DWORD PTR [rax],0x16
  41fc01:	movzx  eax,WORD PTR [rsp+0x26]
  41fc06:	and    ax,0xf000
  41fc0a:	cmp    ax,0x4000
  41fc0e:	jne    0x41fda6
  41fc14:	mov    rcx,r15
  41fc17:	call   0x42df08
  41fc1c:	and    edi,0x30
  41fc1f:	cmp    edi,0x10
  41fc22:	je     0x41fd15
  41fc28:	cmp    edi,0x20
  41fc2b:	jne    0x41fb4c
  41fc31:	mov    rcx,QWORD PTR [rbx+0x18]
  41fc35:	mov    rdx,rbp
  41fc38:	call   0x42df30
  41fc3d:	test   rax,rax
  41fc40:	mov    rdi,rax
  41fc43:	je     0x41fdb9
  41fc49:	mov    edx,DWORD PTR [rbx+0x10]
  41fc4c:	test   dl,0x40
  41fc4f:	je     0x41fd62
  41fc55:	mov    rax,QWORD PTR [rbx+0x18]
  41fc59:	mov    QWORD PTR [rbx+0x20],rax
  41fc5d:	and    edx,0xffffffbf
  41fc60:	mov    QWORD PTR [rbx+0x18],rdi
  41fc64:	mov    DWORD PTR [rbx+0x10],edx
  41fc67:	jmp    0x41fb4c
  41fc6c:	nop    DWORD PTR [rax+0x0]
  41fc70:	and    edi,0x3
  41fc73:	cmp    edi,0x1
  41fc76:	je     0x41fd44
  41fc7c:	cmp    edi,0x2
  41fc7f:	jne    0x41fb4c
  41fc85:	mov    ecx,DWORD PTR [rip+0x242a5]        # 0x443f30
  41fc8b:	mov    rdx,QWORD PTR [rip+0x24276]        # 0x443f08
  41fc92:	add    rcx,QWORD PTR [rip+0x12097]        # 0x431d30
  41fc99:	call   0x42df18
  41fc9e:	jmp    0x41fb4c
  41fca3:	lea    rdx,[rsp+0x20]
  41fca8:	mov    rcx,r13
  41fcab:	call   QWORD PTR [rip+0x28dcf]        # 0x448a80
  41fcb1:	test   eax,eax
  41fcb3:	je     0x41fcc1
  41fcb5:	call   r14
  41fcb8:	cmp    DWORD PTR [rax],0x2
  41fcbb:	je     0x41fbab
  41fcc1:	call   r14
  41fcc4:	cmp    DWORD PTR [rax],0x0
  41fcc7:	jne    0x41fcd2
  41fcc9:	call   r14
  41fccc:	mov    DWORD PTR [rax],0x16
  41fcd2:	mov    rcx,QWORD PTR [rsi+0x28]
  41fcd6:	lea    rdx,[rip+0x19073]        # 0x438d50
  41fcdd:	mov    r8,r13
  41fce0:	call   0x419db0
  41fce5:	lea    rdx,[rsp+0x20]
  41fcea:	mov    rcx,r13
  41fced:	call   QWORD PTR [rip+0x28d8d]        # 0x448a80
  41fcf3:	test   eax,eax
  41fcf5:	jne    0x41fcd2
  41fcf7:	call   r14
  41fcfa:	mov    DWORD PTR [rax],0x16
  41fd00:	movzx  eax,WORD PTR [rsp+0x26]
  41fd05:	and    ax,0xf000
  41fd09:	cmp    ax,0x8000
  41fd0d:	je     0x41fc1c
  41fd13:	jmp    0x41fcd2
  41fd15:	mov    rcx,QWORD PTR [rbx+0x18]
  41fd19:	mov    edx,ebp
  41fd1b:	call   0x42dd88
  41fd20:	test   eax,eax
  41fd22:	mov    edi,eax
  41fd24:	js     0x41fd92
  41fd26:	mov    edx,DWORD PTR [rbx+0x10]
  41fd29:	test   dl,0x40
  41fd2c:	je     0x41fd80
  41fd2e:	mov    rax,QWORD PTR [rbx+0x18]
  41fd32:	mov    QWORD PTR [rbx+0x20],rax
  41fd36:	and    edx,0xffffffbf
  41fd39:	mov    DWORD PTR [rbx+0x18],edi
  41fd3c:	mov    DWORD PTR [rbx+0x10],edx
  41fd3f:	jmp    0x41fb4c
  41fd44:	mov    ecx,DWORD PTR [rip+0x241e6]        # 0x443f30
  41fd4a:	mov    rdx,QWORD PTR [rip+0x241b7]        # 0x443f08
  41fd51:	add    rcx,QWORD PTR [rip+0x11fe0]        # 0x431d38
  41fd58:	call   0x42df18
  41fd5d:	jmp    0x41fb4c
  41fd62:	mov    rcx,QWORD PTR [rbx+0x18]
  41fd66:	call   0x41afa0
  41fd6b:	mov    edx,DWORD PTR [rbx+0x10]
  41fd6e:	mov    QWORD PTR [rbx+0x20],rax
  41fd72:	jmp    0x41fc5d
  41fd77:	nop    WORD PTR [rax+rax*1+0x0]
  41fd80:	mov    rcx,QWORD PTR [rbx+0x18]
  41fd84:	call   0x41afa0
  41fd89:	mov    edx,DWORD PTR [rbx+0x10]
  41fd8c:	mov    QWORD PTR [rbx+0x20],rax
  41fd90:	jmp    0x41fd36
  41fd92:	mov    rcx,QWORD PTR [rsi+0x28]
  41fd96:	mov    r8,QWORD PTR [rbx+0x18]
  41fd9a:	lea    rdx,[rip+0x18fb4]        # 0x438d55
  41fda1:	call   0x419db0
  41fda6:	mov    rcx,QWORD PTR [rsi+0x28]
  41fdaa:	lea    rdx,[rip+0x18f9f]        # 0x438d50
  41fdb1:	mov    r8,r15
  41fdb4:	call   0x419db0
  41fdb9:	mov    rcx,QWORD PTR [rsi+0x28]
  41fdbd:	mov    r8,QWORD PTR [rbx+0x18]
  41fdc1:	lea    rdx,[rip+0x18f92]        # 0x438d5a
  41fdc8:	call   0x419db0
  41fdcd:	nop
  41fdce:	xchg   ax,ax
  41fdd0:	push   r15
  41fdd2:	push   r14
  41fdd4:	push   r13
  41fdd6:	push   r12
  41fdd8:	push   rbp
  41fdd9:	push   rdi
  41fdda:	push   rsi
  41fddb:	push   rbx
  41fddc:	sub    rsp,0x38
  41fde0:	mov    edi,edx
  41fde2:	mov    rbp,rcx
  41fde5:	mov    rcx,r8
  41fde8:	mov    rbx,r8
  41fdeb:	mov    r12,r9
  41fdee:	call   0x42de30
  41fdf3:	movsxd rdx,edi
  41fdf6:	cmp    rax,rdx
  41fdf9:	setae  sil
  41fdfd:	test   rax,rax
  41fe00:	sete   al
  41fe03:	or     sil,al
  41fe06:	jne    0x41fe45
  41fe08:	movzx  r10d,BYTE PTR [rbx]
  41fe0c:	cmp    r10b,0x24
  41fe10:	je     0x41fe60
  41fe12:	mov    r9d,r10d
  41fe15:	xor    eax,eax
  41fe17:	jmp    0x41fe34
  41fe19:	nop    DWORD PTR [rax+0x0]
  41fe20:	add    rax,0x1
  41fe24:	mov    r8d,edi
  41fe27:	sub    r8d,eax
  41fe2a:	test   r8d,r8d
  41fe2d:	jle    0x41fe45
  41fe2f:	movzx  r9d,BYTE PTR [rbx+rax*1]
  41fe34:	test   r9b,r9b
  41fe37:	mov    BYTE PTR [rbp+rax*1+0x0],r9b
  41fe3c:	jne    0x41fe20
  41fe3e:	mov    esi,0x1
  41fe43:	jmp    0x41fe47
  41fe45:	xor    esi,esi
  41fe47:	mov    eax,esi
  41fe49:	add    rsp,0x38
  41fe4d:	pop    rbx
  41fe4e:	pop    rsi
  41fe4f:	pop    rdi
  41fe50:	pop    rbp
  41fe51:	pop    r12
  41fe53:	pop    r13
  41fe55:	pop    r14
  41fe57:	pop    r15
  41fe59:	ret    
  41fe5a:	nop    WORD PTR [rax+rax*1+0x0]
  41fe60:	movzx  eax,BYTE PTR [rbx+0x1]
  41fe64:	cmp    al,0x24
  41fe66:	je     0x41ff5e
  41fe6c:	cmp    al,0x40
  41fe6e:	je     0x41ff2a
  41fe74:	test   al,al
  41fe76:	je     0x41fe47
  41fe78:	cmp    al,0x7f
  41fe7a:	ja     0x41fe47
  41fe7c:	lea    rcx,[rip+0x1cabd]        # 0x43c940
  41fe83:	movzx  edx,al
  41fe86:	test   DWORD PTR [rcx+rdx*4],0x3b0060
  41fe8d:	je     0x41fe47
  41fe8f:	add    rbx,0x1
  41fe93:	mov    r8,rbp
  41fe96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fea0:	add    r8,0x1
  41fea4:	add    rbx,0x1
  41fea8:	mov    BYTE PTR [r8-0x1],al
  41feac:	movzx  eax,BYTE PTR [rbx]
  41feaf:	cmp    al,0x7f
  41feb1:	ja     0x41febf
  41feb3:	movzx  edx,al
  41feb6:	test   DWORD PTR [rcx+rdx*4],0x3b0060
  41febd:	jne    0x41fea0
  41febf:	cmp    r8,rbp
  41fec2:	je     0x41fe47
  41fec4:	mov    BYTE PTR [r8],0x0
  41fec8:	mov    rcx,rbp
  41fecb:	call   0x42ded0
  41fed0:	test   rax,rax
  41fed3:	mov    r14,rax
  41fed6:	je     0x41fe47
  41fedc:	mov    rcx,rax
  41fedf:	mov    edi,edi
  41fee1:	call   0x42de30
  41fee6:	mov    rcx,rbx
  41fee9:	mov    r13,rax
  41feec:	call   0x42de30
  41fef1:	lea    r12,[rax+0x1]
  41fef5:	lea    rax,[r12+r13*1]
  41fef9:	cmp    rax,rdi
  41fefc:	jae    0x41fe47
  41ff02:	mov    r8,r13
  41ff05:	mov    rdx,r14
  41ff08:	mov    rcx,rbp
  41ff0b:	call   0x42de98
  41ff10:	lea    rcx,[rbp+r13*1+0x0]
  41ff15:	mov    r8,r12
  41ff18:	mov    rdx,rbx
  41ff1b:	mov    esi,0x1
  41ff20:	call   0x42de98
  41ff25:	jmp    0x41fe47
  41ff2a:	mov    r9,QWORD PTR [rip+0x11b97]        # 0x431ac8
  41ff31:	cmp    BYTE PTR [r9],0x0
  41ff35:	je     0x41fe45
  41ff3b:	add    rbx,0x2
  41ff3f:	lea    r8,[rip+0x18a95]        # 0x4389db
  41ff46:	mov    rcx,rbp
  41ff49:	mov    QWORD PTR [rsp+0x20],rbx
  41ff4e:	call   0x4197e0
  41ff53:	cmp    edi,eax
  41ff55:	setg   sil
  41ff59:	jmp    0x41fe47
  41ff5e:	movzx  eax,BYTE PTR [rbx+0x2]
  41ff62:	test   al,al
  41ff64:	je     0x420006
  41ff6a:	cmp    al,0x5c
  41ff6c:	mov    r15d,0x3
  41ff72:	jne    0x41fe47
  41ff78:	mov    edx,0x5c
  41ff7d:	mov    rcx,r12
  41ff80:	mov    r14,r12
  41ff83:	call   0x42de58
  41ff88:	test   rax,rax
  41ff8b:	je     0x420011
  41ff91:	mov    edx,0x5c
  41ff96:	mov    rcx,r14
  41ff99:	call   0x42de10
  41ff9e:	test   rax,rax
  41ffa1:	mov    r13,rax
  41ffa4:	je     0x41fe47
  41ffaa:	movsxd rax,r15d
  41ffad:	sub    r13,r14
  41ffb0:	mov    edi,edi
  41ffb2:	add    rbx,rax
  41ffb5:	add    r13,0x1
  41ffb9:	mov    rcx,rbx
  41ffbc:	call   0x42de30
  41ffc1:	lea    r15,[rax+0x1]
  41ffc5:	lea    rax,[r15+r13*1]
  41ffc9:	cmp    rax,rdi
  41ffcc:	ja     0x41fe47
  41ffd2:	mov    r8,r13
  41ffd5:	mov    rdx,r14
  41ffd8:	mov    rcx,rbp
  41ffdb:	call   0x42de98
  41ffe0:	lea    rcx,[rbp+r13*1+0x0]
  41ffe5:	mov    r8,r15
  41ffe8:	mov    rdx,rbx
  41ffeb:	call   0x42de98
  41fff0:	cmp    r12,r14
  41fff3:	je     0x41fe3e
  41fff9:	mov    rcx,r14
  41fffc:	call   0x42df08
  420001:	jmp    0x41fe3e
  420006:	mov    r15d,0x2
  42000c:	jmp    0x41ff78
  420011:	lea    rcx,[rip+0x1898a]        # 0x4389a2
  420018:	call   0x42ded0
  42001d:	mov    rdx,r12
  420020:	mov    rcx,rax
  420023:	call   0x41c1a0
  420028:	test   rax,rax
  42002b:	mov    r14,rax
  42002e:	jne    0x41ff91
  420034:	jmp    0x41fe47
  420039:	nop    DWORD PTR [rax+0x0]
  420040:	push   r15
  420042:	push   r14
  420044:	push   r13
  420046:	push   r12
  420048:	push   rbp
  420049:	push   rdi
  42004a:	push   rsi
  42004b:	push   rbx
  42004c:	sub    rsp,0x178
  420053:	mov    rbx,rcx
  420056:	mov    r12,rdx
  420059:	mov    rcx,QWORD PTR [rip+0x11d60]        # 0x431dc0
  420060:	mov    rdx,QWORD PTR [rip+0x23ea1]        # 0x443f08
  420067:	mov    r13,r8
  42006a:	lea    rsi,[rbx+0x8]
  42006e:	lea    rbp,[rsp+0x60]
  420073:	call   0x42df18
  420078:	mov    rbx,QWORD PTR [rbx]
  42007b:	test   rbx,rbx
  42007e:	je     0x420150
  420084:	lea    r15,[rsp+0x20]
  420089:	mov    r14,QWORD PTR [rip+0x289f0]        # 0x448a80
  420090:	jmp    0x4200b4
  420092:	mov    rdx,QWORD PTR [rip+0x23e6f]        # 0x443f08
  420099:	add    rsi,0x8
  42009d:	mov    ecx,0xa
  4200a2:	call   0x42df20
  4200a7:	mov    rbx,QWORD PTR [rsi-0x8]
  4200ab:	test   rbx,rbx
  4200ae:	je     0x420150
  4200b4:	mov    r9,r13
  4200b7:	mov    r8,rbx
  4200ba:	mov    edx,0x105
  4200bf:	mov    rcx,rbp
  4200c2:	mov    rdi,rbx
  4200c5:	call   0x41fdd0
  4200ca:	test   al,al
  4200cc:	je     0x4200d6
  4200ce:	cmp    BYTE PTR [rbx],0x24
  4200d1:	mov    rdi,rbp
  4200d4:	je     0x420134
  4200d6:	mov    rdx,QWORD PTR [rip+0x11ccb]        # 0x431da8
  4200dd:	mov    rcx,QWORD PTR [rip+0x23e24]        # 0x443f08
  4200e4:	mov    r8,rbx
  4200e7:	call   0x4193f0
  4200ec:	cmp    BYTE PTR [r12],0x0
  4200f1:	je     0x420092
  4200f3:	mov    rdx,r15
  4200f6:	mov    rcx,rdi
  4200f9:	call   r14
  4200fc:	test   eax,eax
  4200fe:	jne    0x420092
  420100:	movzx  eax,WORD PTR [rsp+0x26]
  420105:	and    ax,0xf000
  420109:	cmp    ax,0x4000
  42010d:	jne    0x420092
  42010f:	mov    rdx,QWORD PTR [rip+0x23df2]        # 0x443f08
  420116:	mov    ecx,0x5c
  42011b:	call   0x42df20
  420120:	mov    rdx,QWORD PTR [rip+0x23de1]        # 0x443f08
  420127:	mov    rcx,r12
  42012a:	call   0x42df18
  42012f:	jmp    0x420092
  420134:	movzx  eax,BYTE PTR [rbx+0x1]
  420138:	cmp    al,0x40
  42013a:	je     0x420140
  42013c:	cmp    al,0x24
  42013e:	jne    0x4200d6
  420140:	mov    rdi,rbp
  420143:	mov    rbx,rbp
  420146:	jmp    0x4200d6
  420148:	nop    DWORD PTR [rax+rax*1+0x0]
  420150:	add    rsp,0x178
  420157:	pop    rbx
  420158:	pop    rsi
  420159:	pop    rdi
  42015a:	pop    rbp
  42015b:	pop    r12
  42015d:	pop    r13
  42015f:	pop    r14
  420161:	pop    r15
  420163:	ret    
  420164:	xchg   ax,ax
  420166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420170:	push   r15
  420172:	push   r14
  420174:	push   r13
  420176:	push   r12
  420178:	push   rbp
  420179:	push   rdi
  42017a:	push   rsi
  42017b:	push   rbx
  42017c:	sub    rsp,0xc8
  420183:	mov    rax,QWORD PTR [rip+0x116ae]        # 0x431838
  42018a:	mov    rsi,rcx
  42018d:	mov    edx,DWORD PTR [rax+0x78]
  420190:	test   dl,0xf
  420193:	je     0x420550
  420199:	mov    rdx,QWORD PTR [rax+0x80]
  4201a0:	mov    QWORD PTR [rip+0x23da9],rdx        # 0x443f50
  4201a7:	test   BYTE PTR [rax+0x10],0xf
  4201ab:	mov    r12,QWORD PTR [rip+0x2862e]        # 0x4487e0
  4201b2:	jne    0x420575
  4201b8:	cmp    QWORD PTR [rip+0x23d88],0x0        # 0x443f48
  4201c0:	je     0x4201d5
  4201c2:	call   r12
  4201c5:	mov    rcx,QWORD PTR [rip+0x23d7c]        # 0x443f48
  4201cc:	lea    rdx,[rax+0x30]
  4201d0:	call   0x42df18
  4201d5:	lea    rdi,[rsp+0x40]
  4201da:	xor    ecx,ecx
  4201dc:	call   QWORD PTR [rip+0x286de]        # 0x4488c0
  4201e2:	lea    rcx,[rsp+0x38]
  4201e7:	mov    QWORD PTR [rsp+0x38],rax
  4201ec:	call   QWORD PTR [rip+0x28696]        # 0x448888
  4201f2:	lea    r8,[rip+0x19de8]        # 0x439fe1
  4201f9:	mov    r9,rax
  4201fc:	mov    edx,0x80
  420201:	mov    rcx,rdi
  420204:	call   0x42de38
  420209:	mov    rax,QWORD PTR [rip+0x11628]        # 0x431838
  420210:	lea    r8,[rip+0x19dc3]        # 0x439fda
  420217:	test   BYTE PTR [rax+0x10],0xf
  42021b:	je     0x420221
  42021d:	mov    r8,QWORD PTR [rax+0x18]
  420221:	cmp    QWORD PTR [rip+0x23d1f],0x0        # 0x443f48
  420229:	je     0x420954
  42022f:	lea    rdx,[rip+0x1b434]        # 0x43b66a
  420236:	lea    rcx,[rip+0x1b1e3]        # 0x43b420
  42023d:	mov    r9,rdi
  420240:	xor    ebx,ebx
  420242:	call   0x419800
  420247:	mov    rdx,QWORD PTR [rsi+0x30]
  42024b:	lea    rcx,[rip+0x19e9f]        # 0x43a0f1
  420252:	call   0x419800
  420257:	mov    rbp,QWORD PTR [rsi+0x30]
  42025b:	mov    r13,QWORD PTR [rip+0x287f6]        # 0x448a58
  420262:	movsx  ecx,BYTE PTR [rbp+rbx*1+0x0]
  420267:	call   r13
  42026a:	mov    BYTE PTR [rdi+rbx*1],al
  42026d:	add    rbx,0x1
  420271:	test   al,al
  420273:	jne    0x420262
  420275:	lea    r8,[rip+0x18ca7]        # 0x438f23
  42027c:	lea    rcx,[rip+0x19f56]        # 0x43a1d9
  420283:	mov    rdx,rbp
  420286:	mov    QWORD PTR [rsi+0x20],rdi
  42028a:	mov    QWORD PTR [rsi+0x28],rdi
  42028e:	call   0x419800
  420293:	mov    rdx,QWORD PTR [rsi+0x30]
  420297:	lea    r8,[rip+0x18c8f]        # 0x438f2d
  42029e:	lea    rcx,[rip+0x19f34]        # 0x43a1d9
  4202a5:	call   0x419800
  4202aa:	mov    rbx,QWORD PTR [rsi+0x78]
  4202ae:	lea    rdx,[rip+0x2dfb]        # 0x4230b0
  4202b5:	mov    eax,DWORD PTR [rsi+0xb0]
  4202bb:	cmp    QWORD PTR [rbx+0x38],rdx
  4202bf:	je     0x4202ef
  4202c1:	cmp    eax,0x1
  4202c4:	jle    0x42030a
  4202c6:	sub    eax,0x2
  4202c9:	add    rax,0x1
  4202cd:	lea    rcx,[rax+rax*2]
  4202d1:	lea    rax,[rax+rcx*4]
  4202d5:	lea    rcx,[rbx+rax*8]
  4202d9:	mov    rax,rbx
  4202dc:	jmp    0x4202e5
  4202de:	xchg   ax,ax
  4202e0:	cmp    rax,rcx
  4202e3:	je     0x42030a
  4202e5:	add    rax,0x68
  4202e9:	cmp    QWORD PTR [rax+0x38],rdx
  4202ed:	jne    0x4202e0
  4202ef:	mov    rdx,QWORD PTR [rsi+0x30]
  4202f3:	lea    r8,[rip+0x18c39]        # 0x438f33
  4202fa:	lea    rcx,[rip+0x19ed8]        # 0x43a1d9
  420301:	call   0x419800
  420306:	mov    rbx,QWORD PTR [rsi+0x78]
  42030a:	mov    eax,DWORD PTR [rsi+0xb4]
  420310:	test   eax,eax
  420312:	jle    0x4203e0
  420318:	sub    eax,0x1
  42031b:	lea    r14,[rip+0x1a92a]        # 0x43ac4c
  420322:	lea    r13,[rip+0x1b2be]        # 0x43b5e7
  420329:	add    rax,0x1
  42032d:	lea    rdx,[rax+rax*2]
  420331:	lea    rax,[rax+rdx*4]
  420335:	lea    rbp,[rbx+rax*8]
  420339:	jmp    0x420386
  42033b:	nop    DWORD PTR [rax+rax*1+0x0]
  420340:	cmp    eax,0x4
  420343:	je     0x420540
  420349:	cmp    eax,0x5
  42034c:	jne    0x420520
  420352:	mov    r9d,DWORD PTR [rbx+0x18]
  420356:	lea    r8,[rip+0x185a7]        # 0x438904
  42035d:	mov    edx,0x20
  420362:	mov    rcx,rdi
  420365:	call   0x4197e0
  42036a:	mov    r8,QWORD PTR [rbx+0x48]
  42036e:	mov    r9,rdi
  420371:	mov    rdx,QWORD PTR [rsi+0x30]
  420375:	mov    rcx,r15
  420378:	call   0x419800
  42037d:	add    rbx,0x68
  420381:	cmp    rbx,rbp
  420384:	je     0x4203e0
  420386:	mov    eax,DWORD PTR [rbx+0x10]
  420389:	test   eax,0x280000
  42038e:	jne    0x42037d
  420390:	mov    r8,QWORD PTR [rbx+0x48]
  420394:	test   r8,r8
  420397:	je     0x42037d
  420399:	cmp    WORD PTR [rbx+0xc],0x1
  42039e:	mov    r15,r13
  4203a1:	cmova  r15,r14
  4203a5:	and    eax,0xf000
  4203aa:	shr    eax,0xc
  4203ad:	cmp    eax,0x3
  4203b0:	je     0x420500
  4203b6:	ja     0x420340
  4203b8:	cmp    eax,0x2
  4203bb:	jne    0x420520
  4203c1:	mov    rdx,rbx
  4203c4:	mov    ecx,0x2
  4203c9:	call   QWORD PTR [rbx+0x38]
  4203cc:	mov    r9,QWORD PTR [rbx+0x18]
  4203d0:	mov    r8,QWORD PTR [rbx+0x48]
  4203d4:	jmp    0x420371
  4203d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4203e0:	mov    eax,DWORD PTR [rsi+0x10]
  4203e3:	and    eax,0x3
  4203e6:	cmp    eax,0x2
  4203e9:	je     0x420914
  4203ef:	cmp    eax,0x3
  4203f2:	je     0x420830
  4203f8:	cmp    eax,0x1
  4203fb:	je     0x4206b0
  420401:	call   r12
  420404:	lea    rcx,[rip+0x1aae2]        # 0x43aeed
  42040b:	lea    r9,[rax+0x30]
  42040f:	mov    r8d,0x66
  420415:	mov    edx,0x1
  42041a:	call   0x42dee0
  42041f:	call   r12
  420422:	lea    rcx,[rip+0x1a25d]        # 0x43a686
  420429:	lea    r9,[rax+0x30]
  42042d:	mov    edx,0x1
  420432:	mov    r8d,0xfa
  420438:	call   0x42dee0
  42043d:	mov    rcx,rsi
  420440:	call   0x41ba00
  420445:	mov    rdx,QWORD PTR [rsi+0x30]
  420449:	lea    rcx,[rip+0x1a475]        # 0x43a8c5
  420450:	call   0x419800
  420455:	mov    edi,DWORD PTR [rsi+0xb4]
  42045b:	mov    rdx,QWORD PTR [rsi+0x30]
  42045f:	lea    rcx,[rip+0x1a0a5]        # 0x43a50b
  420466:	mov    rbx,QWORD PTR [rsi+0x78]
  42046a:	call   0x419800
  42046f:	test   edi,edi
  420471:	jle    0x420763
  420477:	lea    eax,[rdi-0x1]
  42047a:	lea    rbp,[rip+0x19f36]        # 0x43a3b7
  420481:	lea    rdi,[rip+0x19f8b]        # 0x43a413
  420488:	add    rax,0x1
  42048c:	lea    rdx,[rax+rax*2]
  420490:	lea    rax,[rax+rdx*4]
  420494:	lea    r13,[rbx+rax*8]
  420498:	jmp    0x4204cf
  42049a:	nop    WORD PTR [rax+rax*1+0x0]
  4204a0:	test   eax,0x100000
  4204a5:	je     0x4204c2
  4204a7:	cmp    WORD PTR [rbx+0xc],0x2
  4204ac:	mov    rcx,rbp
  4204af:	mov    r9d,0x1
  4204b5:	cmovb  rcx,rdi
  4204b9:	mov    rdx,QWORD PTR [rsi+0x30]
  4204bd:	call   0x419800
  4204c2:	add    rbx,0x68
  4204c6:	cmp    rbx,r13
  4204c9:	je     0x420763
  4204cf:	mov    eax,DWORD PTR [rbx+0x10]
  4204d2:	test   eax,0x280000
  4204d7:	jne    0x4204c2
  4204d9:	mov    r8,QWORD PTR [rbx+0x48]
  4204dd:	test   r8,r8
  4204e0:	je     0x4204c2
  4204e2:	movzx  r9d,WORD PTR [rbx+0xa]
  4204e7:	test   r9w,r9w
  4204eb:	je     0x4204a0
  4204ed:	cmp    WORD PTR [rbx+0xc],0x1
  4204f2:	mov    rcx,rdi
  4204f5:	cmova  rcx,rbp
  4204f9:	jmp    0x4204b9
  4204fb:	nop    DWORD PTR [rax+rax*1+0x0]
  420500:	mov    eax,DWORD PTR [rbx+0x18]
  420503:	lea    r9,[rip+0x19985]        # 0x439e8f
  42050a:	test   eax,eax
  42050c:	lea    rax,[rip+0x19afc]        # 0x43a00f
  420513:	cmovne r9,rax
  420517:	jmp    0x420371
  42051c:	nop    DWORD PTR [rax+0x0]
  420520:	mov    r9,QWORD PTR [rbx+0x18]
  420524:	test   r9,r9
  420527:	jne    0x420371
  42052d:	lea    rax,[rip+0x1b0f8]        # 0x43b62c
  420534:	cmp    r15,r13
  420537:	cmove  r15,rax
  42053b:	jmp    0x420371
  420540:	mov    r9d,DWORD PTR [rbx+0x18]
  420544:	lea    r8,[rip+0x18837]        # 0x438d82
  42054b:	jmp    0x42035d
  420550:	and    edx,0x20
  420553:	je     0x420930
  420559:	test   BYTE PTR [rax+0x10],0xf
  42055d:	mov    QWORD PTR [rip+0x239e8],0x0        # 0x443f50
  420568:	mov    r12,QWORD PTR [rip+0x28271]        # 0x4487e0
  42056f:	je     0x4201b8
  420575:	mov    r13,QWORD PTR [rax+0x18]
  420579:	lea    rdx,[rip+0x187f0]        # 0x438d70
  420580:	mov    rbp,QWORD PTR [rsi+0x28]
  420584:	mov    rcx,r13
  420587:	call   0x42df30
  42058c:	test   rax,rax
  42058f:	mov    rdi,rax
  420592:	je     0x4209b4
  420598:	mov    rcx,rax
  42059b:	call   0x42dd80
  4205a0:	lea    rdx,[rsp+0x40]
  4205a5:	mov    ecx,eax
  4205a7:	call   QWORD PTR [rip+0x282ab]        # 0x448858
  4205ad:	test   eax,eax
  4205af:	jne    0x4209c4
  4205b5:	movzx  eax,WORD PTR [rsp+0x46]
  4205ba:	and    ax,0xf000
  4205be:	cmp    ax,0x8000
  4205c2:	jne    0x4209c4
  4205c8:	mov    rax,QWORD PTR [rsp+0x58]
  4205cd:	lea    rcx,[rax+0x1]
  4205d1:	call   0x41b230
  4205d6:	mov    r8,QWORD PTR [rsp+0x58]
  4205db:	mov    r12,rax
  4205de:	mov    rbx,rax
  4205e1:	jmp    0x4205f8
  4205e3:	mov    r8,QWORD PTR [rsp+0x58]
  4205e8:	sub    r8,rax
  4205eb:	test   r8,r8
  4205ee:	mov    QWORD PTR [rsp+0x58],r8
  4205f3:	je     0x42060d
  4205f5:	add    rbx,rax
  4205f8:	mov    r9,rdi
  4205fb:	mov    edx,0x1
  420600:	mov    rcx,rbx
  420603:	call   0x42df10
  420608:	test   rax,rax
  42060b:	jne    0x4205e3
  42060d:	mov    BYTE PTR [rbx],0x0
  420610:	mov    rcx,rdi
  420613:	call   0x42df58
  420618:	test   r12,r12
  42061b:	mov    QWORD PTR [rip+0x23916],r12        # 0x443f38
  420622:	je     0x42066a
  420624:	lea    rdx,[rip+0x1b03f]        # 0x43b66a
  42062b:	mov    rcx,r12
  42062e:	call   0x42de08
  420633:	test   rax,rax
  420636:	je     0x420998
  42063c:	lea    rcx,[rax+0x1]
  420640:	lea    rdx,[rip+0x19e50]        # 0x43a497
  420647:	mov    BYTE PTR [rax],0x0
  42064a:	call   0x42de08
  42064f:	test   rax,rax
  420652:	je     0x42097f
  420658:	add    rax,0x73
  42065c:	mov    QWORD PTR [rip+0x238e5],r12        # 0x443f48
  420663:	mov    QWORD PTR [rip+0x238d6],rax        # 0x443f40
  42066a:	mov    r12,QWORD PTR [rip+0x2816f]        # 0x4487e0
  420671:	call   r12
  420674:	lea    rdx,[rip+0x186fd]        # 0x438d78
  42067b:	lea    r8,[rax+0x30]
  42067f:	mov    rcx,r13
  420682:	call   0x42df00
  420687:	mov    rbx,rax
  42068a:	call   r12
  42068d:	lea    rdx,[rax+0x30]
  420691:	cmp    rbx,rdx
  420694:	je     0x4201b8
  42069a:	lea    rdx,[rip+0x186d9]        # 0x438d7a
  4206a1:	mov    r8,r13
  4206a4:	mov    rcx,rbp
  4206a7:	call   0x419db0
  4206ac:	nop    DWORD PTR [rax+0x0]
  4206b0:	call   r12
  4206b3:	lea    rcx,[rip+0x1a13c]        # 0x43a7f6
  4206ba:	lea    r9,[rax+0x30]
  4206be:	mov    r8d,0xce
  4206c4:	mov    edx,0x1
  4206c9:	call   0x42dee0
  4206ce:	call   r12
  4206d1:	lea    rcx,[rip+0x197e6]        # 0x439ebe
  4206d8:	lea    r9,[rax+0x30]
  4206dc:	mov    r8d,0xa
  4206e2:	mov    edx,0x1
  4206e7:	call   0x42dee0
  4206ec:	call   r12
  4206ef:	lea    rcx,[rip+0x19f90]        # 0x43a686
  4206f6:	lea    r9,[rax+0x30]
  4206fa:	mov    edx,0x1
  4206ff:	mov    r8d,0xfa
  420705:	call   0x42dee0
  42070a:	mov    rcx,rsi
  42070d:	call   0x41ba00
  420712:	mov    rdx,QWORD PTR [rsi+0x30]
  420716:	lea    rcx,[rip+0x1a1a8]        # 0x43a8c5
  42071d:	call   0x419800
  420722:	call   r12
  420725:	lea    rcx,[rip+0x1972c]        # 0x439e58
  42072c:	lea    r9,[rax+0x30]
  420730:	mov    r8d,0xc
  420736:	mov    edx,0x1
  42073b:	call   0x42dee0
  420740:	call   r12
  420743:	lea    rcx,[rip+0x1a5a0]        # 0x43acea
  42074a:	lea    r9,[rax+0x30]
  42074e:	mov    r8d,0x38
  420754:	mov    edx,0x1
  420759:	call   0x42dee0
  42075e:	jmp    0x420455
  420763:	call   r12
  420766:	lea    rcx,[rip+0x19d2a]        # 0x43a497
  42076d:	lea    r9,[rax+0x30]
  420771:	mov    r8d,0x73
  420777:	mov    edx,0x1
  42077c:	call   0x42dee0
  420781:	mov    rax,QWORD PTR [rip+0x237b8]        # 0x443f40
  420788:	test   rax,rax
  42078b:	je     0x420792
  42078d:	cmp    BYTE PTR [rax],0x0
  420790:	jne    0x420800
  420792:	mov    rax,QWORD PTR [rip+0x1109f]        # 0x431838
  420799:	test   BYTE PTR [rax+0x78],0x20
  42079d:	je     0x420815
  42079f:	call   r12
  4207a2:	lea    rcx,[rax+0x30]
  4207a6:	call   0x42df58
  4207ab:	call   r12
  4207ae:	lea    rcx,[rax+0x30]
  4207b2:	call   0x42df50
  4207b7:	test   eax,eax
  4207b9:	jne    0x4209d6
  4207bf:	mov    rcx,QWORD PTR [rip+0x23772]        # 0x443f38
  4207c6:	call   0x42df08
  4207cb:	mov    QWORD PTR [rip+0x23772],0x0        # 0x443f48
  4207d6:	mov    QWORD PTR [rip+0x2375f],0x0        # 0x443f40
  4207e1:	mov    QWORD PTR [rip+0x2374c],0x0        # 0x443f38
  4207ec:	add    rsp,0xc8
  4207f3:	pop    rbx
  4207f4:	pop    rsi
  4207f5:	pop    rdi
  4207f6:	pop    rbp
  4207f7:	pop    r12
  4207f9:	pop    r13
  4207fb:	pop    r14
  4207fd:	pop    r15
  4207ff:	ret    
  420800:	call   r12
  420803:	mov    rcx,QWORD PTR [rip+0x23736]        # 0x443f40
  42080a:	lea    rdx,[rax+0x30]
  42080e:	call   0x42df18
  420813:	jmp    0x42079f
  420815:	mov    rdx,QWORD PTR [rsi+0x30]
  420819:	lea    rcx,[rip+0x19794]        # 0x439fb4
  420820:	call   0x419800
  420825:	jmp    0x42079f
  42082a:	nop    WORD PTR [rax+rax*1+0x0]
  420830:	call   r12
  420833:	lea    rcx,[rip+0x19fbc]        # 0x43a7f6
  42083a:	lea    r9,[rax+0x30]
  42083e:	mov    r8d,0xce
  420844:	mov    edx,0x1
  420849:	call   0x42dee0
  42084e:	call   r12
  420851:	lea    rcx,[rip+0x19666]        # 0x439ebe
  420858:	lea    r9,[rax+0x30]
  42085c:	mov    r8d,0xa
  420862:	mov    edx,0x1
  420867:	call   0x42dee0
  42086c:	call   r12
  42086f:	lea    rcx,[rip+0x19e10]        # 0x43a686
  420876:	lea    r9,[rax+0x30]
  42087a:	mov    r8d,0xfa
  420880:	mov    edx,0x1
  420885:	call   0x42dee0
  42088a:	mov    rcx,rsi
  42088d:	call   0x41ba00
  420892:	mov    rdx,QWORD PTR [rsi+0x30]
  420896:	lea    rcx,[rip+0x1a028]        # 0x43a8c5
  42089d:	call   0x419800
  4208a2:	call   r12
  4208a5:	lea    rcx,[rip+0x195ac]        # 0x439e58
  4208ac:	lea    r9,[rax+0x30]
  4208b0:	mov    r8d,0xc
  4208b6:	mov    edx,0x1
  4208bb:	call   0x42dee0
  4208c0:	call   r12
  4208c3:	lea    rcx,[rip+0x195cb]        # 0x439e95
  4208ca:	lea    r9,[rax+0x30]
  4208ce:	mov    r8d,0x9
  4208d4:	mov    edx,0x1
  4208d9:	call   0x42dee0
  4208de:	call   r12
  4208e1:	lea    rcx,[rip+0x19e99]        # 0x43a781
  4208e8:	lea    r9,[rax+0x30]
  4208ec:	mov    edx,0x1
  4208f1:	mov    r8d,0x74
  4208f7:	call   0x42dee0
  4208fc:	mov    rcx,rsi
  4208ff:	call   0x41b770
  420904:	mov    rdx,QWORD PTR [rsi+0x30]
  420908:	lea    rcx,[rip+0x1a645]        # 0x43af54
  42090f:	jmp    0x42071d
  420914:	call   r12
  420917:	mov    r8d,0xce
  42091d:	lea    r9,[rax+0x30]
  420921:	mov    edx,0x1
  420926:	lea    rcx,[rip+0x19ec9]        # 0x43a7f6
  42092d:	jmp    0x4208bb
  42092f:	nop
  420930:	lea    rcx,[rip+0x18429]        # 0x438d60
  420937:	call   0x42ded0
  42093c:	test   rax,rax
  42093f:	mov    QWORD PTR [rip+0x2360a],rax        # 0x443f50
  420946:	je     0x4209a4
  420948:	mov    rax,QWORD PTR [rip+0x10ee9]        # 0x431838
  42094f:	jmp    0x4201a7
  420954:	mov    rdx,QWORD PTR [rip+0x235f5]        # 0x443f50
  42095b:	test   rdx,rdx
  42095e:	je     0x42022f
  420964:	lea    rcx,[rip+0x19642]        # 0x439fad
  42096b:	mov    QWORD PTR [rsp+0x28],r8
  420970:	call   0x419800
  420975:	mov    r8,QWORD PTR [rsp+0x28]
  42097a:	jmp    0x42022f
  42097f:	mov    rcx,r12
  420982:	call   0x42de30
  420987:	lea    rax,[r12+rax*1+0x53]
  42098c:	mov    QWORD PTR [rip+0x235ad],rax        # 0x443f40
  420993:	jmp    0x42066a
  420998:	mov    QWORD PTR [rip+0x235a1],r12        # 0x443f40
  42099f:	jmp    0x42066a
  4209a4:	lea    rax,[rip+0x183bb]        # 0x438d66
  4209ab:	mov    QWORD PTR [rip+0x2359e],rax        # 0x443f50
  4209b2:	jmp    0x420948
  4209b4:	mov    QWORD PTR [rip+0x23579],0x0        # 0x443f38
  4209bf:	jmp    0x42066a
  4209c4:	lea    rdx,[rip+0x183a7]        # 0x438d72
  4209cb:	mov    r8,r13
  4209ce:	mov    rcx,rbp
  4209d1:	call   0x419db0
  4209d6:	mov    rcx,QWORD PTR [rsi+0x28]
  4209da:	mov    r8,QWORD PTR [rip+0x112d7]        # 0x431cb8
  4209e1:	mov    rdx,QWORD PTR [rip+0x112e0]        # 0x431cc8
  4209e8:	call   0x419db0
  4209ed:	nop
  4209ee:	xchg   ax,ax
  4209f0:	push   rbx
  4209f1:	sub    rsp,0x20
  4209f5:	test   rcx,rcx
  4209f8:	je     0x420a0e
  4209fa:	cmp    DWORD PTR [rcx],0x6
  4209fd:	mov    rbx,rcx
  420a00:	je     0x420a14
  420a02:	call   QWORD PTR [rip+0x27e28]        # 0x448830
  420a08:	mov    DWORD PTR [rax],0x16
  420a0e:	add    rsp,0x20
  420a12:	pop    rbx
  420a13:	ret    
  420a14:	mov    rcx,QWORD PTR [rcx+0x10]
  420a18:	call   0x419330
  420a1d:	mov    rcx,rbx
  420a20:	add    rsp,0x20
  420a24:	pop    rbx
  420a25:	jmp    0x42df08
  420a2a:	nop    WORD PTR [rax+rax*1+0x0]
  420a30:	push   rdi
  420a31:	push   rsi
  420a32:	push   rbx
  420a33:	sub    rsp,0x20
  420a37:	cmp    rcx,0xe
  420a3b:	jbe    0x420a83
  420a3d:	test   BYTE PTR [rdx+0x10],0x8
  420a41:	mov    rsi,rdx
  420a44:	je     0x420a90
  420a46:	mov    rcx,QWORD PTR [rdx+0x20]
  420a4a:	test   rcx,rcx
  420a4d:	je     0x420a83
  420a4f:	mov    eax,DWORD PTR [rcx]
  420a51:	lea    rbx,[rcx+0x8]
  420a55:	test   eax,eax
  420a57:	jle    0x420a77
  420a59:	sub    eax,0x1
  420a5c:	lea    rdi,[rbx+rax*8+0x8]
  420a61:	add    rbx,0x8
  420a65:	mov    rcx,QWORD PTR [rbx-0x8]
  420a69:	call   0x4209f0
  420a6e:	cmp    rbx,rdi
  420a71:	jne    0x420a61
  420a73:	mov    rcx,QWORD PTR [rsi+0x20]
  420a77:	add    rsp,0x20
  420a7b:	pop    rbx
  420a7c:	pop    rsi
  420a7d:	pop    rdi
  420a7e:	jmp    0x42df08
  420a83:	add    rsp,0x20
  420a87:	pop    rbx
  420a88:	pop    rsi
  420a89:	pop    rdi
  420a8a:	ret    
  420a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  420a90:	mov    rbx,QWORD PTR [rdx+0x50]
  420a94:	mov    rcx,rbx
  420a97:	call   0x42de30
  420a9c:	mov    rcx,QWORD PTR [rsi+0x18]
  420aa0:	mov    r8,rax
  420aa3:	mov    rdx,rbx
  420aa6:	call   0x41e680
  420aab:	test   rax,rax
  420aae:	je     0x420a83
  420ab0:	lea    rcx,[rsi+0x20]
  420ab4:	mov    rdx,rax
  420ab7:	add    rsp,0x20
  420abb:	pop    rbx
  420abc:	pop    rsi
  420abd:	pop    rdi
  420abe:	jmp    0x41b280
  420ac3:	nop    DWORD PTR [rax]
  420ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420ad0:	push   r12
  420ad2:	push   rbp
  420ad3:	push   rdi
  420ad4:	push   rsi
  420ad5:	push   rbx
  420ad6:	sub    rsp,0x30
  420ada:	mov    eax,DWORD PTR [rip+0x23450]        # 0x443f30
  420ae0:	mov    rdi,rdx
  420ae3:	lea    rdx,[rip+0x19256]        # 0x439d40
  420aea:	cmp    rcx,0x1
  420aee:	mov    rbp,rcx
  420af1:	mov    rbx,r8
  420af4:	mov    esi,r9d
  420af7:	lea    r12,[rdx+rax*1+0xcb]
  420aff:	je     0x420b3b
  420b01:	cmp    rcx,0xf
  420b05:	ja     0x420b12
  420b07:	add    rsp,0x30
  420b0b:	pop    rbx
  420b0c:	pop    rsi
  420b0d:	pop    rdi
  420b0e:	pop    rbp
  420b0f:	pop    r12
  420b11:	ret    
  420b12:	mov    eax,DWORD PTR [rdi+0x18]
  420b15:	mov    rdx,QWORD PTR [rip+0x111b4]        # 0x431cd0
  420b1c:	lea    r12,[rip+0x18263]        # 0x438d86
  420b23:	mov    DWORD PTR [rsp+0x20],eax
  420b27:	mov    r8,QWORD PTR [rcx+0x28]
  420b2b:	mov    r9,QWORD PTR [rdi+0x50]
  420b2f:	mov    rcx,QWORD PTR [rip+0x233d2]        # 0x443f08
  420b36:	call   0x4193f0
  420b3b:	test   BYTE PTR [rdi+0x13],0x1
  420b3f:	jne    0x420c70
  420b45:	cmp    esi,0x1
  420b48:	jle    0x420c8f
  420b4e:	mov    rdx,QWORD PTR [rip+0x1129b]        # 0x431df0
  420b55:	mov    rcx,QWORD PTR [rip+0x233ac]        # 0x443f08
  420b5c:	mov    r8,r12
  420b5f:	lea    rdi,[rip+0x193d2]        # 0x439f38
  420b66:	call   0x4193f0
  420b6b:	cmp    rbp,0x1
  420b6f:	jne    0x420bb8
  420b71:	jmp    0x420ca0
  420b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420b80:	mov    rdx,QWORD PTR [rip+0x11251]        # 0x431dd8
  420b87:	mov    rcx,QWORD PTR [rip+0x2337a]        # 0x443f08
  420b8e:	mov    r8,rdi
  420b91:	mov    DWORD PTR [rsp+0x20],eax
  420b95:	call   0x4193f0
  420b9a:	sub    esi,0x1
  420b9d:	mov    rdx,QWORD PTR [rip+0x23364]        # 0x443f08
  420ba4:	test   esi,esi
  420ba6:	jle    0x420bfd
  420ba8:	mov    rcx,QWORD PTR [rip+0x11251]        # 0x431e00
  420baf:	add    rbx,0x8
  420bb3:	call   0x42df18
  420bb8:	mov    eax,DWORD PTR [rbx+0x4]
  420bbb:	mov    r9d,DWORD PTR [rbx]
  420bbe:	cmp    eax,0x80000000
  420bc3:	je     0x420c30
  420bc5:	cmp    r9d,0x80000000
  420bcc:	je     0x420c50
  420bd2:	cmp    eax,0x7fffffff
  420bd7:	jne    0x420b80
  420bd9:	mov    rdx,QWORD PTR [rip+0x11200]        # 0x431de0
  420be0:	mov    rcx,QWORD PTR [rip+0x23321]        # 0x443f08
  420be7:	mov    r8,rdi
  420bea:	sub    esi,0x1
  420bed:	call   0x4193f0
  420bf2:	test   esi,esi
  420bf4:	mov    rdx,QWORD PTR [rip+0x2330d]        # 0x443f08
  420bfb:	jg     0x420ba8
  420bfd:	mov    ecx,0xa
  420c02:	call   0x42df20
  420c07:	cmp    rbp,0xf
  420c0b:	jbe    0x420b07
  420c11:	mov    rax,QWORD PTR [rbp+0x98]
  420c18:	mov    edx,0x1
  420c1d:	mov    rcx,rbp
  420c20:	add    rsp,0x30
  420c24:	pop    rbx
  420c25:	pop    rsi
  420c26:	pop    rdi
  420c27:	pop    rbp
  420c28:	pop    r12
  420c2a:	rex.W jmp rax
  420c2d:	nop    DWORD PTR [rax]
  420c30:	mov    rdx,QWORD PTR [rip+0x111b1]        # 0x431de8
  420c37:	mov    rcx,QWORD PTR [rip+0x232ca]        # 0x443f08
  420c3e:	mov    r8,rdi
  420c41:	call   0x4193f0
  420c46:	jmp    0x420b9a
  420c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  420c50:	mov    rdx,QWORD PTR [rip+0x111b9]        # 0x431e10
  420c57:	mov    rcx,QWORD PTR [rip+0x232aa]        # 0x443f08
  420c5e:	mov    r9d,eax
  420c61:	mov    r8,rdi
  420c64:	call   0x4193f0
  420c69:	jmp    0x420b9a
  420c6e:	xchg   ax,ax
  420c70:	mov    rdx,QWORD PTR [rip+0x11191]        # 0x431e08
  420c77:	mov    rcx,QWORD PTR [rip+0x2328a]        # 0x443f08
  420c7e:	mov    r8,r12
  420c81:	call   0x4193f0
  420c86:	cmp    esi,0x1
  420c89:	jg     0x420b4e
  420c8f:	mov    rdx,QWORD PTR [rip+0x11162]        # 0x431df8
  420c96:	jmp    0x420b55
  420c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  420ca0:	mov    eax,DWORD PTR [rip+0x2328a]        # 0x443f30
  420ca6:	lea    rdx,[rip+0x19093]        # 0x439d40
  420cad:	lea    rdi,[rdx+rax*1+0xd2]
  420cb5:	jmp    0x420bb8
  420cba:	nop    WORD PTR [rax+rax*1+0x0]
  420cc0:	push   r15
  420cc2:	push   r14
  420cc4:	push   r13
  420cc6:	push   r12
  420cc8:	push   rbp
  420cc9:	push   rdi
  420cca:	push   rsi
  420ccb:	push   rbx
  420ccc:	sub    rsp,0x28
  420cd0:	mov    ebx,0x3
  420cd5:	mov    rbp,rcx
  420cd8:	mov    rcx,rdx
  420cdb:	mov    rdi,rdx
  420cde:	call   0x42de30
  420ce3:	mov    r9,rbp
  420ce6:	mov    r12,rax
  420ce9:	mov    eax,0x1
  420cee:	xchg   ax,ax
  420cf0:	add    r9,0x1
  420cf4:	movzx  ecx,BYTE PTR [r9-0x1]
  420cf9:	lea    r10d,[rcx-0x20]
  420cfd:	cmp    r10b,0x5e
  420d01:	ja     0x420d20
  420d03:	cmp    cl,0x5c
  420d06:	je     0x420d50
  420d08:	cmp    cl,0x22
  420d0b:	mov    r10d,0x1
  420d11:	je     0x420d50
  420d13:	add    rbx,r10
  420d16:	jmp    0x420cf0
  420d18:	nop    DWORD PTR [rax+rax*1+0x0]
  420d20:	cmp    cl,0xd
  420d23:	ja     0x420d43
  420d25:	mov    r10,rax
  420d28:	shl    r10,cl
  420d2b:	test   r10d,0x3b80
  420d32:	jne    0x420d60
  420d34:	test   r10d,0x400
  420d3b:	jne    0x420d70
  420d3d:	and    r10d,0x1
  420d41:	jne    0x420d78
  420d43:	add    rbx,0x4
  420d47:	jmp    0x420cf0
  420d49:	nop    DWORD PTR [rax+0x0]
  420d50:	mov    r10d,0x2
  420d56:	jmp    0x420d13
  420d58:	nop    DWORD PTR [rax+rax*1+0x0]
  420d60:	add    rbx,0x2
  420d64:	jmp    0x420cf0
  420d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420d70:	add    rbx,r12
  420d73:	jmp    0x420cf0
  420d78:	mov    rcx,rbx
  420d7b:	lea    r14,[rip+0x18006]        # 0x438d88
  420d82:	call   0x41b230
  420d87:	mov    r13,rax
  420d8a:	lea    rsi,[rax+0x1]
  420d8e:	mov    BYTE PTR [rax],0x22
  420d91:	jmp    0x420db2
  420d93:	cmp    r8b,0x5c
  420d97:	je     0x420eb4
  420d9d:	cmp    r8b,0x22
  420da1:	je     0x420eb4
  420da7:	mov    BYTE PTR [rsi],r8b
  420daa:	add    rsi,0x1
  420dae:	add    rbp,0x1
  420db2:	movzx  r8d,BYTE PTR [rbp+0x0]
  420db7:	lea    ecx,[r8-0x20]
  420dbb:	cmp    cl,0x5e
  420dbe:	jbe    0x420d93
  420dc0:	cmp    r8b,0xd
  420dc4:	ja     0x420e9b
  420dca:	movzx  eax,r8b
  420dce:	movsxd rcx,DWORD PTR [r14+rax*4]
  420dd2:	add    rcx,r14
  420dd5:	jmp    rcx
  420dd7:	movzx  eax,BYTE PTR [rbp+0x1]
  420ddb:	lea    r15,[rbp+0x1]
  420ddf:	cmp    al,0xa
  420de1:	jne    0x420dfa
  420de3:	mov    BYTE PTR [rsi],0x5c
  420de6:	add    r15,0x1
  420dea:	add    rsi,0x2
  420dee:	mov    BYTE PTR [rsi-0x1],0x6e
  420df2:	movzx  eax,BYTE PTR [r15]
  420df6:	cmp    al,0xa
  420df8:	je     0x420de3
  420dfa:	test   al,al
  420dfc:	jne    0x420ec0
  420e02:	mov    rax,rsi
  420e05:	mov    BYTE PTR [rsi],0x5c
  420e08:	add    rsi,0x2
  420e0c:	mov    BYTE PTR [rax+0x1],0x6e
  420e10:	mov    BYTE PTR [rsi],0x22
  420e13:	mov    BYTE PTR [rsi+0x1],0x0
  420e17:	add    rsi,0x2
  420e1b:	sub    rsi,r13
  420e1e:	cmp    rsi,rbx
  420e21:	ja     0x420ed9
  420e27:	mov    rax,r13
  420e2a:	add    rsp,0x28
  420e2e:	pop    rbx
  420e2f:	pop    rsi
  420e30:	pop    rdi
  420e31:	pop    rbp
  420e32:	pop    r12
  420e34:	pop    r13
  420e36:	pop    r14
  420e38:	pop    r15
  420e3a:	ret    
  420e3b:	mov    BYTE PTR [rsi],0x5c
  420e3e:	mov    BYTE PTR [rsi+0x1],0x72
  420e42:	add    rsi,0x2
  420e46:	jmp    0x420dae
  420e4b:	mov    BYTE PTR [rsi],0x5c
  420e4e:	mov    BYTE PTR [rsi+0x1],0x66
  420e52:	add    rsi,0x2
  420e56:	jmp    0x420dae
  420e5b:	mov    BYTE PTR [rsi],0x5c
  420e5e:	mov    BYTE PTR [rsi+0x1],0x76
  420e62:	add    rsi,0x2
  420e66:	jmp    0x420dae
  420e6b:	mov    BYTE PTR [rsi],0x5c
  420e6e:	mov    BYTE PTR [rsi+0x1],0x74
  420e72:	add    rsi,0x2
  420e76:	jmp    0x420dae
  420e7b:	mov    BYTE PTR [rsi],0x5c
  420e7e:	mov    BYTE PTR [rsi+0x1],0x62
  420e82:	add    rsi,0x2
  420e86:	jmp    0x420dae
  420e8b:	mov    BYTE PTR [rsi],0x5c
  420e8e:	mov    BYTE PTR [rsi+0x1],0x61
  420e92:	add    rsi,0x2
  420e96:	jmp    0x420dae
  420e9b:	lea    rdx,[rip+0x19044]        # 0x439ee6
  420ea2:	mov    rcx,rsi
  420ea5:	call   0x419dd0
  420eaa:	cdqe   
  420eac:	add    rsi,rax
  420eaf:	jmp    0x420dae
  420eb4:	mov    BYTE PTR [rsi],0x5c
  420eb7:	add    rsi,0x1
  420ebb:	jmp    0x420da7
  420ec0:	mov    rcx,rsi
  420ec3:	mov    r8,r12
  420ec6:	mov    rdx,rdi
  420ec9:	call   0x42de98
  420ece:	add    rsi,r12
  420ed1:	mov    rbp,r15
  420ed4:	jmp    0x420db2
  420ed9:	call   QWORD PTR [rip+0x27901]        # 0x4487e0
  420edf:	lea    rcx,[rip+0x19169]        # 0x43a04f
  420ee6:	lea    r9,[rax+0x60]
  420eea:	mov    r8d,0x24
  420ef0:	mov    edx,0x1
  420ef5:	call   0x42dee0
  420efa:	mov    ecx,0x1
  420eff:	call   0x419830
  420f04:	nop
  420f05:	nop
  420f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420f10:	push   rsi
  420f11:	push   rbx
  420f12:	sub    rsp,0x28
  420f16:	test   dl,dl
  420f18:	mov    rbx,r8
  420f1b:	jne    0x420f50
  420f1d:	lea    rdx,[rip+0x18f95]        # 0x439eb9
  420f24:	call   0x420cc0
  420f29:	lea    rdx,[rip+0x19051]        # 0x439f81
  420f30:	mov    rsi,rax
  420f33:	mov    rcx,rbx
  420f36:	mov    r8,rax
  420f39:	call   0x4193f0
  420f3e:	mov    rcx,rsi
  420f41:	add    rsp,0x28
  420f45:	pop    rbx
  420f46:	pop    rsi
  420f47:	jmp    0x42df08
  420f4c:	nop    DWORD PTR [rax+0x0]
  420f50:	mov    rdx,r8
  420f53:	add    rsp,0x28
  420f57:	pop    rbx
  420f58:	pop    rsi
  420f59:	jmp    0x42df18
  420f5e:	xchg   ax,ax
  420f60:	push   r15
  420f62:	push   r14
  420f64:	push   r13
  420f66:	push   r12
  420f68:	push   rbp
  420f69:	push   rdi
  420f6a:	push   rsi
  420f6b:	push   rbx
  420f6c:	sub    rsp,0x38
  420f70:	mov    eax,DWORD PTR [rcx+0x14]
  420f73:	xor    r13d,r13d
  420f76:	xor    r12d,r12d
  420f79:	mov    rbp,rcx
  420f7c:	lea    rcx,[rip+0x192ec]        # 0x43a26f
  420f83:	lea    edx,[rax-0x1]
  420f86:	call   0x419800
  420f8b:	mov    rsi,QWORD PTR [rip+0x2784e]        # 0x4487e0
  420f92:	jmp    0x420fa9
  420f94:	add    r12d,0x1
  420f98:	add    r13,0x68
  420f9c:	cmp    r12d,DWORD PTR [rbp+0xb4]
  420fa3:	jge    0x421111
  420fa9:	mov    rdx,QWORD PTR [rbp+0x78]
  420fad:	lea    rdi,[rdx+r13*1]
  420fb1:	mov    eax,DWORD PTR [rdi+0x10]
  420fb4:	test   eax,0x8280000
  420fb9:	jne    0x420f94
  420fbb:	cmp    WORD PTR [rdi+0x8],0x8000
  420fc1:	jne    0x420f94
  420fc3:	movzx  r8d,WORD PTR [rdi+0x4]
  420fc8:	cmp    r8d,r12d
  420fcb:	je     0x421018
  420fcd:	lea    rax,[r8+r8*2]
  420fd1:	lea    rcx,[rip+0x19220]        # 0x43a1f8
  420fd8:	lea    rax,[r8+rax*4]
  420fdc:	mov    r8,QWORD PTR [rdi+0x48]
  420fe0:	lea    rbx,[rdx+rax*8]
  420fe4:	mov    rax,QWORD PTR [rdi+0x18]
  420fe8:	mov    r9,QWORD PTR [rbx+0x48]
  420fec:	mov    QWORD PTR [rbx+0x18],rax
  420ff0:	mov    eax,DWORD PTR [rbx+0x10]
  420ff3:	and    eax,0xfffff00
  420ff8:	mov    DWORD PTR [rbx+0x10],eax
  420ffb:	mov    edx,DWORD PTR [rdi+0x10]
  420ffe:	mov    rdi,rbx
  421001:	and    edx,0xf00000ff
  421007:	or     eax,edx
  421009:	mov    rdx,QWORD PTR [rbp+0x30]
  42100d:	mov    DWORD PTR [rbx+0x10],eax
  421010:	call   0x419800
  421015:	mov    eax,DWORD PTR [rbx+0x10]
  421018:	mov    edx,eax
  42101a:	and    edx,0xf000
  421020:	shr    edx,0xc
  421023:	cmp    edx,0x4
  421026:	je     0x4211d9
  42102c:	mov    ecx,DWORD PTR [rdi+0x10]
  42102f:	and    ecx,0x2f
  421032:	cmp    ecx,0x20
  421035:	je     0x420f94
  42103b:	test   ah,0x4
  42103e:	je     0x4210c2
  421044:	mov    r14,QWORD PTR [rdi+0x20]
  421048:	test   r14,r14
  42104b:	je     0x4210c2
  42104d:	mov    ebx,DWORD PTR [r14]
  421050:	mov    rdx,QWORD PTR [rbp+0x30]
  421054:	lea    rcx,[rip+0x191ed]        # 0x43a248
  42105b:	mov    r8,QWORD PTR [rdi+0x48]
  42105f:	lea    r15,[r14+0x8]
  421063:	mov    r9d,ebx
  421066:	call   0x419800
  42106b:	sub    ebx,0x1
  42106e:	js     0x420f94
  421074:	mov    r9d,DWORD PTR [r14]
  421077:	mov    rdx,QWORD PTR [rbp+0x30]
  42107b:	lea    rcx,[rip+0x18dc9]        # 0x439e4b
  421082:	mov    r8,QWORD PTR [rdi+0x48]
  421086:	add    r15,0x8
  42108a:	sub    r9d,ebx
  42108d:	call   0x419800
  421092:	mov    rcx,QWORD PTR [r15-0x8]
  421096:	call   0x41ab70
  42109b:	mov    r9d,DWORD PTR [r14]
  42109e:	mov    rdx,QWORD PTR [rbp+0x30]
  4210a2:	lea    rcx,[rip+0x18dd4]        # 0x439e7d
  4210a9:	mov    r8,QWORD PTR [rdi+0x48]
  4210ad:	sub    r9d,ebx
  4210b0:	sub    ebx,0x1
  4210b3:	call   0x419800
  4210b8:	cmp    ebx,0xffffffff
  4210bb:	jne    0x421074
  4210bd:	jmp    0x420f94
  4210c2:	test   al,0x20
  4210c4:	jne    0x42113a
  4210c6:	cmp    edx,0x5
  4210c9:	je     0x4213dd
  4210cf:	cmp    edx,0x2
  4210d2:	je     0x4213fa
  4210d8:	cmp    edx,0x3
  4210db:	je     0x4212d9
  4210e1:	mov    rax,QWORD PTR [rdi+0x18]
  4210e5:	test   rax,rax
  4210e8:	je     0x4210f3
  4210ea:	cmp    BYTE PTR [rax],0x0
  4210ed:	jne    0x4213a7
  4210f3:	movzx  r9d,WORD PTR [rdi+0xe]
  4210f8:	mov    rdx,QWORD PTR [rbp+0x30]
  4210fc:	lea    rcx,[rip+0x191ac]        # 0x43a2af
  421103:	mov    r8,QWORD PTR [rdi+0x48]
  421107:	call   0x419800
  42110c:	jmp    0x420f94
  421111:	test   BYTE PTR [rbp+0x11],0x8
  421115:	je     0x42111f
  421117:	mov    eax,DWORD PTR [rbp+0x4]
  42111a:	cmp    DWORD PTR [rbp+0x14],eax
  42111d:	jb     0x421165
  42111f:	call   rsi
  421121:	lea    rcx,[rax+0x30]
  421125:	add    rsp,0x38
  421129:	pop    rbx
  42112a:	pop    rsi
  42112b:	pop    rdi
  42112c:	pop    rbp
  42112d:	pop    r12
  42112f:	pop    r13
  421131:	pop    r14
  421133:	pop    r15
  421135:	jmp    0x42df48
  42113a:	mov    r9,QWORD PTR [rdi+0x60]
  42113e:	mov    rdx,QWORD PTR [rbp+0x30]
  421142:	lea    rax,[rip+0x177e7]        # 0x438930
  421149:	mov    r8,QWORD PTR [rdi+0x48]
  42114d:	lea    rcx,[rip+0x1913a]        # 0x43a28e
  421154:	test   r9,r9
  421157:	cmove  r9,rax
  42115b:	call   0x419800
  421160:	jmp    0x420f94
  421165:	call   rsi
  421167:	lea    rcx,[rip+0x18f14]        # 0x43a082
  42116e:	lea    r9,[rax+0x30]
  421172:	mov    r8d,0x6
  421178:	mov    edx,0x1
  42117d:	call   0x42dee0
  421182:	mov    ebx,DWORD PTR [rbp+0x14]
  421185:	cmp    ebx,DWORD PTR [rbp+0x4]
  421188:	jae    0x4211b7
  42118a:	nop    WORD PTR [rax+rax*1+0x0]
  421190:	call   rsi
  421192:	lea    rdx,[rax+0x30]
  421196:	mov    ecx,0x20
  42119b:	call   0x42df20
  4211a0:	mov    rax,QWORD PTR [rbp+0x8]
  4211a4:	mov    edx,ebx
  4211a6:	add    ebx,0x1
  4211a9:	mov    rcx,QWORD PTR [rax+rdx*8]
  4211ad:	call   0x41ab70
  4211b2:	cmp    ebx,DWORD PTR [rbp+0x4]
  4211b5:	jb     0x421190
  4211b7:	call   rsi
  4211b9:	lea    rcx,[rip+0x18eb4]        # 0x43a074
  4211c0:	lea    r9,[rax+0x30]
  4211c4:	mov    r8d,0xd
  4211ca:	mov    edx,0x1
  4211cf:	call   0x42dee0
  4211d4:	jmp    0x42111f
  4211d9:	mov    rax,QWORD PTR [rdi+0x18]
  4211dd:	mov    rdx,QWORD PTR [rbp+0x30]
  4211e1:	lea    rcx,[rip+0x190c7]        # 0x43a2af
  4211e8:	mov    r9d,DWORD PTR [rdi+0x20]
  4211ec:	mov    r8,QWORD PTR [rdi+0x48]
  4211f0:	mov    QWORD PTR [rsp+0x28],rax
  4211f5:	call   0x419800
  4211fa:	mov    eax,0xffffffff
  4211ff:	mov    rdx,rdi
  421202:	mov    ecx,0x3
  421207:	mov    QWORD PTR [rdi+0x20],rax
  42120b:	call   QWORD PTR [rdi+0x38]
  42120e:	mov    r14,QWORD PTR [rdi+0x18]
  421212:	cmp    BYTE PTR [r14],0x0
  421216:	je     0x4213a2
  42121c:	mov    QWORD PTR [rsp+0x20],0x1
  421225:	mov    rdx,QWORD PTR [rdi+0x48]
  421229:	lea    rcx,[rip+0x17b90]        # 0x438dc0
  421230:	call   0x419800
  421235:	mov    r9,QWORD PTR [rip+0x22f14]        # 0x444150
  42123c:	test   r9,r9
  42123f:	je     0x421390
  421245:	movzx  eax,BYTE PTR [r14]
  421249:	cmp    BYTE PTR [r9+rax*1],0x0
  42124e:	je     0x421385
  421254:	mov    rdx,r14
  421257:	nop    WORD PTR [rax+rax*1+0x0]
  421260:	add    rdx,0x1
  421264:	movzx  ecx,BYTE PTR [rdx]
  421267:	cmp    BYTE PTR [r9+rcx*1],0x0
  42126c:	mov    rax,rcx
  42126f:	jne    0x421260
  421271:	cmp    al,0x7f
  421273:	lea    r14,[rdx+0x1]
  421277:	movsx  r15d,al
  42127b:	ja     0x4212be
  42127d:	nop    DWORD PTR [rax]
  421280:	lea    r9,[rip+0x1b6b9]        # 0x43c940
  421287:	mov    eax,DWORD PTR [r9+rax*4]
  42128b:	test   eax,0x80000
  421290:	je     0x421310
  421292:	call   rsi
  421294:	mov    rbx,rax
  421297:	mov    ecx,r15d
  42129a:	call   QWORD PTR [rip+0x277c0]        # 0x448a60
  4212a0:	lea    rdx,[rbx+0x30]
  4212a4:	mov    ecx,eax
  4212a6:	call   0x42df20
  4212ab:	movzx  eax,BYTE PTR [r14]
  4212af:	mov    rdx,r14
  4212b2:	cmp    al,0x7f
  4212b4:	lea    r14,[rdx+0x1]
  4212b8:	movsx  r15d,al
  4212bc:	jbe    0x421280
  4212be:	test   r15d,r15d
  4212c1:	je     0x421380
  4212c7:	call   rsi
  4212c9:	lea    rdx,[rax+0x30]
  4212cd:	mov    ecx,0x5f
  4212d2:	call   0x42df20
  4212d7:	jmp    0x4212ab
  4212d9:	mov    eax,DWORD PTR [rdi+0x18]
  4212dc:	mov    rdx,QWORD PTR [rbp+0x30]
  4212e0:	lea    r9,[rip+0x17644]        # 0x43892b
  4212e7:	mov    r8,QWORD PTR [rdi+0x48]
  4212eb:	lea    rcx,[rip+0x18f33]        # 0x43a225
  4212f2:	test   eax,eax
  4212f4:	lea    rax,[rip+0x17635]        # 0x438930
  4212fb:	cmove  r9,rax
  4212ff:	call   0x419800
  421304:	jmp    0x420f94
  421309:	nop    DWORD PTR [rax+0x0]
  421310:	test   eax,0x100000
  421315:	je     0x421330
  421317:	call   rsi
  421319:	lea    rdx,[rax+0x30]
  42131d:	mov    ecx,r15d
  421320:	call   0x42df20
  421325:	jmp    0x4212ab
  421327:	nop    WORD PTR [rax+rax*1+0x0]
  421330:	test   eax,0xc81
  421335:	je     0x4212be
  421337:	mov    rbx,QWORD PTR [rsp+0x20]
  42133c:	lea    rcx,[rip+0x18c85]        # 0x439fc8
  421343:	mov    edx,ebx
  421345:	call   0x419800
  42134a:	mov    rax,rbx
  42134d:	add    rax,rax
  421350:	cmp    BYTE PTR [r14],0x0
  421354:	mov    QWORD PTR [rsp+0x20],rax
  421359:	jne    0x421225
  42135f:	mov    rcx,QWORD PTR [rdi+0x18]
  421363:	call   0x42df08
  421368:	mov    rax,QWORD PTR [rsp+0x28]
  42136d:	mov    QWORD PTR [rdi+0x18],rax
  421371:	jmp    0x420f94
  421376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421380:	mov    r14,rdx
  421383:	jmp    0x421337
  421385:	movzx  eax,al
  421388:	mov    rdx,r14
  42138b:	jmp    0x4212b2
  421390:	mov    ecx,0x22
  421395:	call   0x41ad40
  42139a:	mov    r9,rax
  42139d:	jmp    0x421245
  4213a2:	mov    rcx,r14
  4213a5:	jmp    0x421363
  4213a7:	mov    rdx,QWORD PTR [rbp+0x30]
  4213ab:	mov    r8,QWORD PTR [rdi+0x48]
  4213af:	lea    rcx,[rip+0x18b9f]        # 0x439f55
  4213b6:	call   0x419800
  4213bb:	mov    rcx,QWORD PTR [rdi+0x18]
  4213bf:	call   0x41ab70
  4213c4:	mov    rdx,QWORD PTR [rbp+0x30]
  4213c8:	mov    r8,QWORD PTR [rdi+0x48]
  4213cc:	lea    rcx,[rip+0x18b73]        # 0x439f46
  4213d3:	call   0x419800
  4213d8:	jmp    0x420f94
  4213dd:	mov    rdx,QWORD PTR [rbp+0x30]
  4213e1:	mov    r9d,DWORD PTR [rdi+0x18]
  4213e5:	lea    rcx,[rip+0x18ec3]        # 0x43a2af
  4213ec:	mov    r8,QWORD PTR [rdi+0x48]
  4213f0:	call   0x419800
  4213f5:	jmp    0x420f94
  4213fa:	mov    r8,QWORD PTR [rdi+0x48]
  4213fe:	mov    rdx,QWORD PTR [rbp+0x30]
  421402:	lea    rcx,[rip+0x18b4c]        # 0x439f55
  421409:	mov    rbx,QWORD PTR [rdi+0x18]
  42140d:	call   0x419800
  421412:	mov    rdx,rdi
  421415:	mov    ecx,0x3
  42141a:	call   QWORD PTR [rdi+0x38]
  42141d:	mov    rdx,QWORD PTR [rdi+0x18]
  421421:	lea    rcx,[rip+0x18b6c]        # 0x439f94
  421428:	call   0x419800
  42142d:	test   BYTE PTR [rdi+0x10],0x40
  421431:	je     0x42143c
  421433:	mov    rcx,QWORD PTR [rdi+0x18]
  421437:	call   0x42df08
  42143c:	mov    QWORD PTR [rdi+0x18],rbx
  421440:	mov    r8,QWORD PTR [rdi+0x48]
  421444:	lea    rcx,[rip+0x18afb]        # 0x439f46
  42144b:	mov    rdx,QWORD PTR [rbp+0x30]
  42144f:	call   0x419800
  421454:	jmp    0x420f94
  421459:	nop    DWORD PTR [rax+0x0]
  421460:	push   rdi
  421461:	push   rsi
  421462:	push   rbx
  421463:	sub    rsp,0x20
  421467:	mov    rax,QWORD PTR [rcx+0x90]
  42146e:	mov    rbx,rcx
  421471:	test   rax,rax
  421474:	je     0x4214e1
  421476:	mov    rdx,QWORD PTR [rbx]
  421479:	lea    rdi,[rax+0x8]
  42147d:	mov    rsi,rbx
  421480:	lea    r9,[rax+0xe8]
  421487:	and    rdi,0xfffffffffffffff8
  42148b:	mov    QWORD PTR [rax],rdx
  42148e:	mov    rdx,QWORD PTR [rbx+0xe0]
  421495:	mov    QWORD PTR [rax+0xe0],rdx
  42149c:	mov    rdx,rax
  42149f:	sub    rdx,rdi
  4214a2:	sub    rsi,rdx
  4214a5:	add    edx,0xe8
  4214ab:	shr    edx,0x3
  4214ae:	mov    ecx,edx
  4214b0:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4214b3:	mov    rcx,r9
  4214b6:	movsxd rax,DWORD PTR [rax+0xb0]
  4214bd:	lea    rdx,[rax+rax*2]
  4214c1:	lea    r8,[rax+rdx*4]
  4214c5:	mov    rdx,QWORD PTR [rbx+0x78]
  4214c9:	shl    r8,0x3
  4214cd:	call   0x42de98
  4214d2:	mov    rcx,rbx
  4214d5:	add    rsp,0x20
  4214d9:	pop    rbx
  4214da:	pop    rsi
  4214db:	pop    rdi
  4214dc:	jmp    0x41b000
  4214e1:	movsxd rax,DWORD PTR [rcx+0xb0]
  4214e8:	lea    rdx,[rax+rax*2]
  4214ec:	lea    rax,[rax+rdx*4]
  4214f0:	lea    rcx,[rax*8+0xe8]
  4214f8:	call   0x41b230
  4214fd:	mov    QWORD PTR [rbx+0x90],rax
  421504:	jmp    0x421476
  421509:	nop    DWORD PTR [rax+0x0]
  421510:	push   r14
  421512:	push   r13
  421514:	push   r12
  421516:	push   rbp
  421517:	push   rdi
  421518:	push   rsi
  421519:	push   rbx
  42151a:	sub    rsp,0x20
  42151e:	lea    r12,[rcx+0x8]
  421522:	mov    r14,rcx
  421525:	mov    rbp,rcx
  421528:	and    r12,0xfffffffffffffff8
  42152c:	sub    r14,r12
  42152f:	lea    r13d,[r14+0xe8]
  421536:	shr    r13d,0x3
  42153a:	nop    WORD PTR [rax+rax*1+0x0]
  421540:	mov    rbx,QWORD PTR [rbp+0x78]
  421544:	mov    esi,DWORD PTR [rbp+0xb0]
  42154a:	jmp    0x421576
  42154c:	nop    DWORD PTR [rax+0x0]
  421550:	cmp    eax,0x6
  421553:	jne    0x421563
  421555:	mov    rcx,QWORD PTR [rbx+0x20]
  421559:	test   rcx,rcx
  42155c:	je     0x421563
  42155e:	call   0x419330
  421563:	sub    esi,0x1
  421566:	mov    QWORD PTR [rbx+0x20],0x0
  42156e:	add    rbx,0x68
  421572:	test   esi,esi
  421574:	jle    0x4215d0
  421576:	mov    edx,DWORD PTR [rbx+0x10]
  421579:	test   dl,0x40
  42157c:	jne    0x4215b4
  42157e:	mov    eax,edx
  421580:	and    eax,0xf000
  421585:	shr    eax,0xc
  421588:	cmp    eax,0x1
  42158b:	jne    0x421550
  42158d:	and    dh,0x4
  421590:	je     0x421563
  421592:	cmp    QWORD PTR [rbx+0x20],0x0
  421597:	je     0x421563
  421599:	lea    rax,[rip+0x1782d]        # 0x438dcd
  4215a0:	cmp    rbp,0xf
  4215a4:	mov    QWORD PTR [rbx+0x18],rax
  4215a8:	jbe    0x421563
  4215aa:	mov    rcx,rbx
  4215ad:	call   0x41bb60
  4215b2:	jmp    0x421563
  4215b4:	mov    rcx,QWORD PTR [rbx+0x18]
  4215b8:	call   0x42df08
  4215bd:	mov    edx,DWORD PTR [rbx+0x10]
  4215c0:	mov    QWORD PTR [rbx+0x18],0x0
  4215c8:	and    edx,0xffffffbf
  4215cb:	mov    DWORD PTR [rbx+0x10],edx
  4215ce:	jmp    0x42157e
  4215d0:	mov    rax,QWORD PTR [rbp+0x90]
  4215d7:	test   rax,rax
  4215da:	je     0x42163f
  4215dc:	mov    rdx,QWORD PTR [rax]
  4215df:	mov    rsi,rax
  4215e2:	mov    rdi,r12
  4215e5:	sub    rsi,r14
  4215e8:	mov    QWORD PTR [rbp+0x0],rdx
  4215ec:	mov    rcx,QWORD PTR [rax+0xe0]
  4215f3:	lea    rdx,[rax+0xe8]
  4215fa:	mov    QWORD PTR [rbp+0xe0],rcx
  421601:	mov    ecx,r13d
  421604:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  421607:	movsxd rax,DWORD PTR [rax+0xb0]
  42160e:	mov    rcx,QWORD PTR [rbp+0x78]
  421612:	lea    r8,[rax+rax*2]
  421616:	lea    r8,[rax+r8*4]
  42161a:	shl    r8,0x3
  42161e:	call   0x42de98
  421623:	mov    rcx,QWORD PTR [rbp+0x90]
  42162a:	call   0x42df08
  42162f:	mov    QWORD PTR [rbp+0x90],0x0
  42163a:	jmp    0x421540
  42163f:	add    rsp,0x20
  421643:	pop    rbx
  421644:	pop    rsi
  421645:	pop    rdi
  421646:	pop    rbp
  421647:	pop    r12
  421649:	pop    r13
  42164b:	pop    r14
  42164d:	ret    
  42164e:	xchg   ax,ax
  421650:	push   rbp
  421651:	push   rdi
  421652:	push   rsi
  421653:	push   rbx
  421654:	sub    rsp,0x28
  421658:	mov    rbp,QWORD PTR [rcx+0x90]
  42165f:	mov    rbx,rcx
  421662:	test   rbp,rbp
  421665:	je     0x4216eb
  42166b:	mov    QWORD PTR [rcx+0x90],0x0
  421676:	lea    rdi,[rbx+0x8]
  42167a:	mov    rsi,rbp
  42167d:	call   0x421510
  421682:	mov    rax,QWORD PTR [rbp+0x0]
  421686:	and    rdi,0xfffffffffffffff8
  42168a:	lea    rdx,[rbp+0xe8]
  421691:	mov    QWORD PTR [rbx],rax
  421694:	mov    rax,QWORD PTR [rbp+0xe0]
  42169b:	mov    QWORD PTR [rbx+0xe0],rax
  4216a2:	mov    rax,rbx
  4216a5:	sub    rax,rdi
  4216a8:	sub    rsi,rax
  4216ab:	add    eax,0xe8
  4216b0:	shr    eax,0x3
  4216b3:	mov    ecx,eax
  4216b5:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4216b8:	movsxd rax,DWORD PTR [rbp+0xb0]
  4216bf:	mov    rcx,QWORD PTR [rbx+0x78]
  4216c3:	lea    r8,[rax+rax*2]
  4216c7:	lea    r8,[rax+r8*4]
  4216cb:	shl    r8,0x3
  4216cf:	call   0x42de98
  4216d4:	mov    rcx,rbx
  4216d7:	mov    QWORD PTR [rbx+0x90],rbp
  4216de:	add    rsp,0x28
  4216e2:	pop    rbx
  4216e3:	pop    rsi
  4216e4:	pop    rdi
  4216e5:	pop    rbp
  4216e6:	jmp    0x41b000
  4216eb:	mov    rsi,QWORD PTR [rcx+0x28]
  4216ef:	test   rsi,rsi
  4216f2:	je     0x42171a
  4216f4:	mov    rbx,QWORD PTR [rip+0x1056d]        # 0x431c68
  4216fb:	call   QWORD PTR [rip+0x270df]        # 0x4487e0
  421701:	lea    rcx,[rax+0x60]
  421705:	mov    r8,rsi
  421708:	mov    rdx,rbx
  42170b:	call   0x4193f0
  421710:	mov    ecx,0x1
  421715:	call   0x419830
  42171a:	mov    rsi,QWORD PTR [rcx+0x30]
  42171e:	lea    rax,[rip+0x1a02a]        # 0x43b74f
  421725:	test   rsi,rsi
  421728:	cmove  rsi,rax
  42172c:	jmp    0x4216f4
  42172e:	xchg   ax,ax
  421730:	push   r15
  421732:	push   r14
  421734:	push   r13
  421736:	push   r12
  421738:	push   rbp
  421739:	push   rdi
  42173a:	push   rsi
  42173b:	push   rbx
  42173c:	sub    rsp,0x58
  421740:	lea    rdi,[rsp+0x48]
  421745:	mov    r13,rcx
  421748:	mov    DWORD PTR [rsp+0x48],0x0
  421750:	mov    rdx,rdi
  421753:	call   0x41bd30
  421758:	test   rax,rax
  42175b:	mov    rbx,rax
  42175e:	je     0x421839
  421764:	lea    rdx,[rip+0x1760d]        # 0x438d78
  42176b:	mov    rcx,rax
  42176e:	call   0x42df30
  421773:	test   rax,rax
  421776:	mov    rsi,rax
  421779:	je     0x421ae3
  42177f:	mov    edx,DWORD PTR [rsp+0x48]
  421783:	test   edx,edx
  421785:	jne    0x421890
  42178b:	lea    rcx,[rip+0x1763e]        # 0x438dd0
  421792:	mov    r9,rsi
  421795:	mov    r8d,0x3
  42179b:	mov    edx,0x1
  4217a0:	call   0x42dee0
  4217a5:	mov    rbx,QWORD PTR [r13+0x60]
  4217a9:	mov    edx,0xa
  4217ae:	mov    rcx,rbx
  4217b1:	call   0x42de58
  4217b6:	test   rax,rax
  4217b9:	je     0x4217d2
  4217bb:	lea    r8,[rax+0x1]
  4217bf:	mov    r9,rsi
  4217c2:	mov    edx,0x1
  4217c7:	mov    rcx,rbx
  4217ca:	sub    r8,rbx
  4217cd:	call   0x42dee0
  4217d2:	xor    ecx,ecx
  4217d4:	call   QWORD PTR [rip+0x270e6]        # 0x4488c0
  4217da:	mov    rcx,rdi
  4217dd:	mov    QWORD PTR [rsp+0x48],rax
  4217e2:	call   QWORD PTR [rip+0x27038]        # 0x448820
  4217e8:	lea    rdx,[rip+0x185b1]        # 0x439da0
  4217ef:	mov    r8,rax
  4217f2:	mov    rcx,rsi
  4217f5:	call   0x4193f0
  4217fa:	mov    r15d,DWORD PTR [r13+0xb4]
  421801:	mov    rbx,QWORD PTR [r13+0x78]
  421805:	mov    eax,DWORD PTR [rbx+0x10]
  421808:	test   al,0xf
  42180a:	je     0x421823
  42180c:	test   eax,0x280100
  421811:	jne    0x421823
  421813:	movzx  edx,WORD PTR [rbx+0x8]
  421817:	cmp    dx,0x8000
  42181c:	je     0x421850
  42181e:	cmp    dx,WORD PTR [rbx]
  421821:	je     0x421850
  421823:	sub    r15d,0x1
  421827:	add    rbx,0x68
  42182b:	test   r15d,r15d
  42182e:	jg     0x421805
  421830:	mov    rcx,rsi
  421833:	call   0x42df58
  421838:	nop
  421839:	add    rsp,0x58
  42183d:	pop    rbx
  42183e:	pop    rsi
  42183f:	pop    rdi
  421840:	pop    rbp
  421841:	pop    r12
  421843:	pop    r13
  421845:	pop    r14
  421847:	pop    r15
  421849:	ret    
  42184a:	nop    WORD PTR [rax+rax*1+0x0]
  421850:	test   al,0x10
  421852:	mov    rdi,rbx
  421855:	je     0x42186b
  421857:	movzx  edx,WORD PTR [rbx+0x4]
  42185b:	lea    rcx,[rdx+rdx*2]
  42185f:	lea    rcx,[rdx+rcx*4]
  421863:	mov    rdx,QWORD PTR [r13+0x78]
  421867:	lea    rdi,[rdx+rcx*8]
  42186b:	and    eax,0xf000
  421870:	shr    eax,0xc
  421873:	cmp    eax,0x7
  421876:	ja     0x421823
  421878:	lea    rcx,[rip+0x17559]        # 0x438dd8
  42187f:	movsxd rax,DWORD PTR [rcx+rax*4]
  421883:	add    rax,rcx
  421886:	jmp    rax
  421888:	nop    DWORD PTR [rax+rax*1+0x0]
  421890:	mov    rcx,rbx
  421893:	call   0x42df08
  421898:	jmp    0x42178b
  42189d:	nop    DWORD PTR [rax]
  4218a0:	mov    r12,QWORD PTR [rdi+0x20]
  4218a4:	test   r12,r12
  4218a7:	je     0x421823
  4218ad:	mov    eax,DWORD PTR [r12]
  4218b1:	add    r12,0x8
  4218b5:	test   eax,eax
  4218b7:	jle    0x421823
  4218bd:	sub    eax,0x1
  4218c0:	lea    rax,[r12+rax*8+0x8]
  4218c5:	mov    QWORD PTR [rsp+0x38],rax
  4218ca:	nop    WORD PTR [rax+rax*1+0x0]
  4218d0:	add    r12,0x8
  4218d4:	mov    rbp,QWORD PTR [r12-0x8]
  4218d9:	xor    edx,edx
  4218db:	mov    rcx,rbp
  4218de:	call   0x41e080
  4218e3:	test   rax,rax
  4218e6:	mov    r14,rax
  4218e9:	je     0x421939
  4218eb:	mov    r8,QWORD PTR [rdi+0x50]
  4218ef:	lea    rdx,[rip+0x185fb]        # 0x439ef1
  4218f6:	mov    rcx,rsi
  4218f9:	call   0x4193f0
  4218fe:	xchg   ax,ax
  421900:	mov    r9,r14
  421903:	mov    r8,rdi
  421906:	mov    edx,0x1
  42190b:	mov    rcx,rsi
  42190e:	call   0x419e00
  421913:	mov    rdx,r14
  421916:	mov    rcx,rbp
  421919:	call   0x41e1d0
  42191e:	test   rax,rax
  421921:	mov    r14,rax
  421924:	jne    0x421900
  421926:	mov    r8,QWORD PTR [rdi+0x50]
  42192a:	lea    rdx,[rip+0x17005]        # 0x438936
  421931:	mov    rcx,rsi
  421934:	call   0x4193f0
  421939:	cmp    r12,QWORD PTR [rsp+0x38]
  42193e:	jne    0x4218d0
  421940:	jmp    0x421823
  421945:	mov    r8,QWORD PTR [rdi+0x20]
  421949:	test   r8,r8
  42194c:	je     0x421ab8
  421952:	mov    rdx,rdi
  421955:	mov    rcx,rsi
  421958:	call   0x419690
  42195d:	jmp    0x421823
  421962:	test   BYTE PTR [rdi+0x10],0x20
  421966:	mov    r8,QWORD PTR [rbx+0x50]
  42196a:	mov    rax,r8
  42196d:	je     0x421973
  42196f:	mov    rax,QWORD PTR [rbx+0x58]
  421973:	test   rax,rax
  421976:	lea    rdx,[rip+0x17457]        # 0x438dd4
  42197d:	mov    rcx,rsi
  421980:	cmovne r8,rax
  421984:	call   0x4193f0
  421989:	jmp    0x421823
  42198e:	xchg   ax,ax
  421990:	mov    eax,DWORD PTR [rdi+0x10]
  421993:	test   ah,0x4
  421996:	je     0x421b56
  42199c:	mov    rbp,QWORD PTR [rdi+0x20]
  4219a0:	mov    edx,DWORD PTR [rbp+0x0]
  4219a3:	add    rbp,0x8
  4219a7:	cmp    edx,0x1
  4219aa:	jle    0x421b6a
  4219b0:	and    eax,0xffffffdf
  4219b3:	mov    DWORD PTR [rdi+0x10],eax
  4219b6:	lea    eax,[rdx-0x1]
  4219b9:	lea    r12,[rbp+rax*8+0x8]
  4219be:	xchg   ax,ax
  4219c0:	add    rbp,0x8
  4219c4:	mov    r8,QWORD PTR [rbp-0x8]
  4219c8:	mov    rdx,rdi
  4219cb:	mov    rcx,rsi
  4219ce:	call   0x419690
  4219d3:	cmp    rbp,r12
  4219d6:	jne    0x4219c0
  4219d8:	jmp    0x421823
  4219dd:	nop    DWORD PTR [rax]
  4219e0:	mov    rbp,QWORD PTR [rdi+0x18]
  4219e4:	mov    rdx,rdi
  4219e7:	mov    ecx,0x3
  4219ec:	call   QWORD PTR [rdi+0x38]
  4219ef:	mov    r8,QWORD PTR [rdi+0x18]
  4219f3:	mov    rdx,rdi
  4219f6:	mov    rcx,rsi
  4219f9:	call   0x419690
  4219fe:	mov    QWORD PTR [rdi+0x18],rbp
  421a02:	jmp    0x421823
  421a07:	nop    WORD PTR [rax+rax*1+0x0]
  421a10:	mov    eax,DWORD PTR [rdi+0x18]
  421a13:	lea    r8,[rip+0x16f11]        # 0x43892b
  421a1a:	mov    rdx,rdi
  421a1d:	mov    rcx,rsi
  421a20:	test   eax,eax
  421a22:	lea    rax,[rip+0x16f07]        # 0x438930
  421a29:	cmove  r8,rax
  421a2d:	call   0x419690
  421a32:	jmp    0x421823
  421a37:	nop    WORD PTR [rax+rax*1+0x0]
  421a40:	mov    rdx,rdi
  421a43:	mov    rbp,QWORD PTR [rdi+0x18]
  421a47:	mov    ecx,0x3
  421a4c:	call   QWORD PTR [rdi+0x38]
  421a4f:	mov    r12,QWORD PTR [rdi+0x18]
  421a53:	mov    QWORD PTR [rdi+0x18],rbp
  421a57:	mov    rcx,r12
  421a5a:	call   0x42de30
  421a5f:	lea    rcx,[rax+0x3]
  421a63:	mov    r14,rax
  421a66:	call   0x41b230
  421a6b:	lea    r8,[r14+0x1]
  421a6f:	lea    rcx,[rax+0x1]
  421a73:	mov    rbp,rax
  421a76:	mov    rdx,r12
  421a79:	mov    BYTE PTR [rax],0x3d
  421a7c:	call   0x42de98
  421a81:	mov    r8,rbp
  421a84:	mov    rdx,rdi
  421a87:	mov    rcx,rsi
  421a8a:	call   0x419690
  421a8f:	mov    rcx,rbp
  421a92:	call   0x42df08
  421a97:	mov    rcx,r12
  421a9a:	call   0x42df08
  421a9f:	jmp    0x421823
  421aa4:	movsxd r8,DWORD PTR [rdi+0x18]
  421aa8:	mov    rdx,rdi
  421aab:	mov    rcx,rsi
  421aae:	call   0x419690
  421ab3:	jmp    0x421823
  421ab8:	cmp    DWORD PTR [r13+0x0],0x1ffff
  421ac0:	jle    0x421823
  421ac6:	movzx  edx,WORD PTR [rdi]
  421ac9:	mov    rax,QWORD PTR [r13+0xc8]
  421ad0:	mov    r8,QWORD PTR [rdi+0x18]
  421ad4:	cmp    QWORD PTR [rax+rdx*8],r8
  421ad8:	jne    0x421952
  421ade:	jmp    0x421823
  421ae3:	mov    rbp,QWORD PTR [r13+0x28]
  421ae7:	mov    rdi,QWORD PTR [rip+0x101f2]        # 0x431ce0
  421aee:	mov    rsi,QWORD PTR [rip+0x26ceb]        # 0x4487e0
  421af5:	call   rsi
  421af7:	lea    rcx,[rax+0x60]
  421afb:	mov    r8,rbp
  421afe:	mov    rdx,rdi
  421b01:	call   0x4193f0
  421b06:	mov    rdi,QWORD PTR [rip+0x26d23]        # 0x448830
  421b0d:	call   rdi
  421b0f:	mov    ecx,DWORD PTR [rax]
  421b11:	call   0x42de40
  421b16:	mov    r12,rax
  421b19:	call   rdi
  421b1b:	mov    rdi,QWORD PTR [rip+0x10126]        # 0x431c48
  421b22:	mov    ebp,DWORD PTR [rax]
  421b24:	call   rsi
  421b26:	lea    rcx,[rax+0x60]
  421b2a:	mov    QWORD PTR [rsp+0x20],rbx
  421b2f:	mov    r9,r12
  421b32:	mov    r8d,ebp
  421b35:	mov    rdx,rdi
  421b38:	call   0x4193f0
  421b3d:	mov    ecx,DWORD PTR [rsp+0x48]
  421b41:	test   ecx,ecx
  421b43:	je     0x421839
  421b49:	mov    rcx,rbx
  421b4c:	call   0x42df08
  421b51:	jmp    0x421839
  421b56:	mov    r8,QWORD PTR [rdi+0x18]
  421b5a:	mov    rdx,rdi
  421b5d:	mov    rcx,rsi
  421b60:	call   0x419690
  421b65:	jmp    0x421823
  421b6a:	test   edx,edx
  421b6c:	jg     0x4219b6
  421b72:	jmp    0x421823
  421b77:	nop    WORD PTR [rax+rax*1+0x0]
  421b80:	cmp    rcx,0xf
  421b84:	jbe    0x421b93
  421b86:	test   rdx,rdx
  421b89:	je     0x421b93
  421b8b:	mov    rcx,rdx
  421b8e:	jmp    0x41bb60
  421b93:	repz ret 
  421b95:	nop
  421b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421ba0:	push   rbx
  421ba1:	sub    rsp,0x20
  421ba5:	cmp    rcx,0xf
  421ba9:	jbe    0x421be0
  421bab:	test   rdx,rdx
  421bae:	je     0x421be0
  421bb0:	test   BYTE PTR [rdx+0x10],0x8
  421bb4:	jne    0x421be0
  421bb6:	mov    rcx,QWORD PTR [rdx+0x18]
  421bba:	test   rcx,rcx
  421bbd:	je     0x421be0
  421bbf:	mov    rbx,rdx
  421bc2:	call   0x41afa0
  421bc7:	lea    rcx,[rbx+0x20]
  421bcb:	mov    rdx,rax
  421bce:	add    rsp,0x20
  421bd2:	pop    rbx
  421bd3:	jmp    0x41b280
  421bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  421be0:	add    rsp,0x20
  421be4:	pop    rbx
  421be5:	ret    
  421be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421bf0:	push   rbx
  421bf1:	test   r8d,r8d
  421bf4:	jle    0x421c3a
  421bf6:	lea    ebx,[r8-0x1]
  421bfa:	xor    r8d,r8d
  421bfd:	add    rbx,0x1
  421c01:	jmp    0x421c0c
  421c03:	add    r8,0x1
  421c07:	cmp    r8,rbx
  421c0a:	je     0x421c3a
  421c0c:	movzx  r10d,BYTE PTR [rcx+r8*1]
  421c11:	movzx  r9d,BYTE PTR [rdx+r8*1]
  421c16:	cmp    r10b,r9b
  421c19:	je     0x421c35
  421c1b:	lea    r11,[rip+0xfa9e]        # 0x4316c0
  421c22:	movzx  eax,r10b
  421c26:	movzx  eax,BYTE PTR [r11+rax*1]
  421c2b:	movzx  r9d,BYTE PTR [r11+r9*1]
  421c30:	sub    eax,r9d
  421c33:	jne    0x421c3c
  421c35:	test   r10b,r10b
  421c38:	jne    0x421c03
  421c3a:	xor    eax,eax
  421c3c:	pop    rbx
  421c3d:	ret    
  421c3e:	xchg   ax,ax
  421c40:	push   r15
  421c42:	push   r14
  421c44:	push   r13
  421c46:	push   r12
  421c48:	push   rbp
  421c49:	push   rdi
  421c4a:	push   rsi
  421c4b:	push   rbx
  421c4c:	sub    rsp,0xd8
  421c53:	mov    rbx,rdx
  421c56:	lea    rdx,[rdx+0x80]
  421c5d:	mov    QWORD PTR [rsp+0x120],rcx
  421c65:	mov    QWORD PTR [rsp+0x130],r8
  421c6d:	mov    r12,rbx
  421c70:	mov    esi,r12d
  421c73:	add    r12,0x1
  421c77:	movzx  eax,BYTE PTR [r12-0x1]
  421c7d:	sub    esi,ebx
  421c7f:	test   al,al
  421c81:	je     0x421ee0
  421c87:	cmp    al,0x3d
  421c89:	jne    0x421e60
  421c8f:	lea    r9,[rsp+0x50]
  421c94:	movsxd rdi,esi
  421c97:	mov    rdx,rbx
  421c9a:	mov    r8,rdi
  421c9d:	mov    rcx,r9
  421ca0:	call   0x42de98
  421ca5:	mov    BYTE PTR [rsp+rdi*1+0x50],0x0
  421caa:	mov    rbx,rax
  421cad:	cmp    esi,0x1
  421cb0:	jle    0x421e70
  421cb6:	mov    rax,QWORD PTR [rsp+0x120]
  421cbe:	mov    rcx,QWORD PTR [rsp+0x120]
  421cc6:	xor    r15d,r15d
  421cc9:	mov    QWORD PTR [rsp+0x40],r12
  421cce:	mov    BYTE PTR [rsp+0x3f],0x0
  421cd3:	mov    r12d,r15d
  421cd6:	mov    DWORD PTR [rsp+0x38],0x0
  421cde:	xor    ebp,ebp
  421ce0:	mov    rax,QWORD PTR [rax+0x78]
  421ce4:	mov    edi,DWORD PTR [rcx+0xb0]
  421cea:	mov    r14,rax
  421ced:	mov    QWORD PTR [rsp+0x48],rax
  421cf2:	movsxd rax,esi
  421cf5:	mov    r15,r14
  421cf8:	mov    r13,rax
  421cfb:	jmp    0x421d14
  421cfd:	nop    DWORD PTR [rax]
  421d00:	cmp    eax,0x80100
  421d05:	je     0x421d28
  421d07:	add    r12d,0x1
  421d0b:	add    r15,0x68
  421d0f:	cmp    edi,r12d
  421d12:	jle    0x421d5e
  421d14:	mov    r14,QWORD PTR [r15+0x50]
  421d18:	test   r14,r14
  421d1b:	je     0x421d07
  421d1d:	mov    eax,DWORD PTR [r15+0x10]
  421d21:	test   eax,0x280000
  421d26:	jne    0x421d00
  421d28:	mov    r8d,esi
  421d2b:	mov    rdx,r14
  421d2e:	mov    rcx,rbx
  421d31:	call   0x421bf0
  421d36:	test   eax,eax
  421d38:	jne    0x421ea0
  421d3e:	cmp    BYTE PTR [r14+r13*1],0x0
  421d43:	je     0x421f24
  421d49:	mov    DWORD PTR [rsp+0x38],r12d
  421d4e:	add    r12d,0x1
  421d52:	add    ebp,0x1
  421d55:	add    r15,0x68
  421d59:	cmp    edi,r12d
  421d5c:	jg     0x421d14
  421d5e:	test   ebp,ebp
  421d60:	mov    r12,QWORD PTR [rsp+0x40]
  421d65:	je     0x421ef0
  421d6b:	cmp    ebp,0x1
  421d6e:	je     0x421ff0
  421d74:	mov    rax,QWORD PTR [rsp+0x120]
  421d7c:	test   BYTE PTR [rax+0x10],0x4
  421d80:	je     0x421e82
  421d86:	mov    r12,QWORD PTR [rax+0x20]
  421d8a:	mov    rdi,QWORD PTR [rip+0xfe17]        # 0x431ba8
  421d91:	mov    rsi,QWORD PTR [rip+0x26a48]        # 0x4487e0
  421d98:	call   rsi
  421d9a:	lea    rcx,[rax+0x60]
  421d9e:	mov    DWORD PTR [rsp+0x20],ebp
  421da2:	mov    r9,rbx
  421da5:	mov    r8,r12
  421da8:	mov    rdx,rdi
  421dab:	call   0x4193f0
  421db0:	cmp    ebp,0x4
  421db3:	jg     0x422082
  421db9:	mov    rcx,rbx
  421dbc:	lea    rbp,[rip+0x16fc3]        # 0x438d86
  421dc3:	call   0x42de30
  421dc8:	mov    r12d,eax
  421dcb:	mov    rax,QWORD PTR [rsp+0x120]
  421dd3:	test   BYTE PTR [rax+0x10],0x3
  421dd7:	lea    rax,[rip+0x180eb]        # 0x439ec9
  421dde:	cmovne rbp,rax
  421de2:	mov    rax,QWORD PTR [rsp+0x120]
  421dea:	xor    r13d,r13d
  421ded:	mov    rdi,QWORD PTR [rax+0x78]
  421df1:	call   rsi
  421df3:	mov    rcx,QWORD PTR [rip+0xfda6]        # 0x431ba0
  421dfa:	lea    rdx,[rax+0x60]
  421dfe:	call   0x42df18
  421e03:	mov    r14,QWORD PTR [rdi+0x50]
  421e07:	test   r14,r14
  421e0a:	je     0x421e41
  421e0c:	mov    r8d,r12d
  421e0f:	mov    rdx,r14
  421e12:	mov    rcx,rbx
  421e15:	call   0x421bf0
  421e1a:	test   eax,eax
  421e1c:	je     0x42209f
  421e22:	mov    r14,QWORD PTR [rdi+0x58]
  421e26:	test   r14,r14
  421e29:	je     0x421e41
  421e2b:	mov    r8d,r12d
  421e2e:	mov    rdx,r14
  421e31:	mov    rcx,rbx
  421e34:	call   0x421bf0
  421e39:	test   eax,eax
  421e3b:	je     0x42209f
  421e41:	mov    rax,QWORD PTR [rsp+0x120]
  421e49:	add    rdi,0x68
  421e4d:	add    r13d,0x1
  421e51:	cmp    r13d,DWORD PTR [rax+0xb0]
  421e58:	jl     0x421e03
  421e5a:	jmp    0x422082
  421e5f:	nop
  421e60:	cmp    r12,rdx
  421e63:	jne    0x421c70
  421e69:	nop    DWORD PTR [rax+0x0]
  421e70:	mov    rax,QWORD PTR [rsp+0x120]
  421e78:	test   BYTE PTR [rax+0x10],0x4
  421e7c:	jne    0x42205f
  421e82:	mov    eax,0xffffffff
  421e87:	add    rsp,0xd8
  421e8e:	pop    rbx
  421e8f:	pop    rsi
  421e90:	pop    rdi
  421e91:	pop    rbp
  421e92:	pop    r12
  421e94:	pop    r13
  421e96:	pop    r14
  421e98:	pop    r15
  421e9a:	ret    
  421e9b:	nop    DWORD PTR [rax+rax*1+0x0]
  421ea0:	mov    r14,QWORD PTR [r15+0x58]
  421ea4:	test   r14,r14
  421ea7:	je     0x421d07
  421ead:	mov    r8d,esi
  421eb0:	mov    rdx,r14
  421eb3:	mov    rcx,rbx
  421eb6:	call   0x421bf0
  421ebb:	test   eax,eax
  421ebd:	jne    0x421d07
  421ec3:	cmp    BYTE PTR [r14+r13*1],0x0
  421ec8:	je     0x421ffa
  421ece:	mov    BYTE PTR [rsp+0x3f],0x1
  421ed3:	jmp    0x421d49
  421ed8:	nop    DWORD PTR [rax+rax*1+0x0]
  421ee0:	xor    r12d,r12d
  421ee3:	jmp    0x421cad
  421ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  421ef0:	mov    rax,QWORD PTR [rsp+0x120]
  421ef8:	test   r12,r12
  421efb:	mov    eax,DWORD PTR [rax+0x10]
  421efe:	je     0x42200c
  421f04:	test   al,0x4
  421f06:	je     0x421e82
  421f0c:	mov    rax,QWORD PTR [rsp+0x120]
  421f14:	mov    rsi,QWORD PTR [rip+0xfcdd]        # 0x431bf8
  421f1b:	mov    rdi,QWORD PTR [rax+0x20]
  421f1f:	jmp    0x42206a
  421f24:	mov    r15d,r12d
  421f27:	mov    r12,QWORD PTR [rsp+0x40]
  421f2c:	movsxd r10,r15d
  421f2f:	mov    rcx,QWORD PTR [rsp+0x48]
  421f34:	lea    rax,[r10+r10*2]
  421f38:	lea    rax,[r10+rax*4]
  421f3c:	lea    rbx,[rcx+rax*8]
  421f40:	test   DWORD PTR [rbx+0x10],0x280000
  421f47:	je     0x421fc0
  421f49:	mov    rax,QWORD PTR [rsp+0x120]
  421f51:	test   BYTE PTR [rax+0x10],0x4
  421f55:	je     0x421e82
  421f5b:	mov    r12,QWORD PTR [rbx+0x50]
  421f5f:	mov    rbp,QWORD PTR [rax+0x28]
  421f63:	mov    rdi,QWORD PTR [rip+0xfc76]        # 0x431be0
  421f6a:	mov    rsi,QWORD PTR [rip+0x2686f]        # 0x4487e0
  421f71:	call   rsi
  421f73:	lea    rcx,[rax+0x60]
  421f77:	mov    r9,r12
  421f7a:	mov    r8,rbp
  421f7d:	mov    rdx,rdi
  421f80:	call   0x4193f0
  421f85:	mov    rbx,QWORD PTR [rbx+0x40]
  421f89:	test   rbx,rbx
  421f8c:	je     0x421fa3
  421f8e:	call   rsi
  421f90:	lea    rdx,[rip+0x18002]        # 0x439f99
  421f97:	lea    rcx,[rax+0x60]
  421f9b:	mov    r8,rbx
  421f9e:	call   0x4193f0
  421fa3:	call   rsi
  421fa5:	lea    rdx,[rax+0x60]
  421fa9:	mov    ecx,0xa
  421fae:	call   0x42df20
  421fb3:	jmp    0x422082
  421fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  421fc0:	cmp    BYTE PTR [rsp+0x3f],0x0
  421fc5:	je     0x421fd3
  421fc7:	mov    rax,QWORD PTR [rsp+0x130]
  421fcf:	or     DWORD PTR [rax+0x10],0x20
  421fd3:	mov    rax,QWORD PTR [rsp+0x130]
  421fdb:	mov    QWORD PTR [rax],rbx
  421fde:	mov    QWORD PTR [rax+0x8],r12
  421fe2:	mov    DWORD PTR [rax+0x14],0x2
  421fe9:	xor    eax,eax
  421feb:	jmp    0x421e87
  421ff0:	mov    r15d,DWORD PTR [rsp+0x38]
  421ff5:	jmp    0x421f2c
  421ffa:	mov    r15d,r12d
  421ffd:	mov    BYTE PTR [rsp+0x3f],0x1
  422002:	mov    r12,QWORD PTR [rsp+0x40]
  422007:	jmp    0x421f2c
  42200c:	test   al,0x3
  42200e:	jne    0x421f04
  422014:	mov    rcx,QWORD PTR [rsp+0x120]
  42201c:	movzx  edx,WORD PTR [rcx+0xae]
  422023:	cmp    dx,0x8000
  422028:	je     0x421f04
  42202e:	movzx  eax,dx
  422031:	mov    rcx,QWORD PTR [rsp+0x48]
  422036:	lea    rdx,[rax+rax*2]
  42203a:	lea    rax,[rax+rdx*4]
  42203e:	lea    rax,[rcx+rax*8]
  422042:	mov    rcx,QWORD PTR [rsp+0x130]
  42204a:	mov    QWORD PTR [rcx],rax
  42204d:	mov    QWORD PTR [rcx+0x8],rbx
  422051:	xor    eax,eax
  422053:	mov    DWORD PTR [rcx+0x14],0x3
  42205a:	jmp    0x421e87
  42205f:	mov    rdi,QWORD PTR [rax+0x28]
  422063:	mov    rsi,QWORD PTR [rip+0xfbae]        # 0x431c18
  42206a:	call   QWORD PTR [rip+0x26770]        # 0x4487e0
  422070:	lea    rcx,[rax+0x60]
  422074:	mov    r9,rbx
  422077:	mov    r8,rdi
  42207a:	mov    rdx,rsi
  42207d:	call   0x4193f0
  422082:	mov    rcx,QWORD PTR [rsp+0x120]
  42208a:	mov    edx,0x1
  42208f:	call   QWORD PTR [rcx+0x98]
  422095:	mov    ecx,0x1
  42209a:	call   0x42e008
  42209f:	call   rsi
  4220a1:	lea    rdx,[rip+0x17c9c]        # 0x439d44
  4220a8:	lea    rcx,[rax+0x60]
  4220ac:	mov    r9,r14
  4220af:	mov    r8,rbp
  4220b2:	call   0x4193f0
  4220b7:	jmp    0x421e41
  4220bc:	nop    DWORD PTR [rax+0x0]
  4220c0:	push   rsi
  4220c1:	push   rbx
  4220c2:	sub    rsp,0x38
  4220c6:	mov    rax,QWORD PTR [rcx+0x18]
  4220ca:	test   rax,rax
  4220cd:	je     0x4220da
  4220cf:	movzx  eax,BYTE PTR [rax]
  4220d2:	test   al,al
  4220d4:	jne    0x4221a0
  4220da:	mov    eax,DWORD PTR [rcx+0x14]
  4220dd:	cmp    eax,DWORD PTR [rcx+0x4]
  4220e0:	jae    0x42214f
  4220e2:	mov    rbx,rcx
  4220e5:	mov    r8,rdx
  4220e8:	mov    ecx,eax
  4220ea:	mov    rdx,QWORD PTR [rbx+0x8]
  4220ee:	mov    rdx,QWORD PTR [rdx+rcx*8]
  4220f2:	mov    ecx,DWORD PTR [rbx+0x10]
  4220f5:	test   cl,0x3
  4220f8:	mov    QWORD PTR [rbx+0x18],rdx
  4220fc:	jne    0x422142
  4220fe:	add    eax,0x1
  422101:	mov    DWORD PTR [rbx+0x14],eax
  422104:	cmp    BYTE PTR [rdx],0x2d
  422107:	jne    0x422190
  42210d:	nop    DWORD PTR [rax]
  422110:	add    rdx,0x1
  422114:	cmp    BYTE PTR [rdx],0x2d
  422117:	je     0x422110
  422119:	movzx  esi,WORD PTR [rbx+0xae]
  422120:	mov    eax,0xffff8000
  422125:	mov    rcx,rbx
  422128:	mov    WORD PTR [rbx+0xae],ax
  42212f:	call   0x421c40
  422134:	mov    WORD PTR [rbx+0xae],si
  42213b:	add    rsp,0x38
  42213f:	pop    rbx
  422140:	pop    rsi
  422141:	ret    
  422142:	lea    r9,[rdx+0x1]
  422146:	mov    QWORD PTR [rbx+0x18],r9
  42214a:	cmp    BYTE PTR [rdx],0x2d
  42214d:	je     0x422160
  42214f:	mov    eax,0x1
  422154:	add    rsp,0x38
  422158:	pop    rbx
  422159:	pop    rsi
  42215a:	ret    
  42215b:	nop    DWORD PTR [rax+rax*1+0x0]
  422160:	cmp    BYTE PTR [rdx+0x1],0x0
  422164:	je     0x42214f
  422166:	add    eax,0x1
  422169:	mov    DWORD PTR [rbx+0x14],eax
  42216c:	movzx  eax,BYTE PTR [rdx+0x1]
  422170:	cmp    al,0x2d
  422172:	jne    0x4221b4
  422174:	lea    rax,[rdx+0x2]
  422178:	mov    QWORD PTR [rbx+0x18],rax
  42217c:	cmp    BYTE PTR [rdx+0x2],0x0
  422180:	je     0x42214f
  422182:	and    ecx,0x1
  422185:	je     0x4221ca
  422187:	mov    rdx,rax
  42218a:	nop    WORD PTR [rax+rax*1+0x0]
  422190:	mov    rcx,rbx
  422193:	add    rsp,0x38
  422197:	pop    rbx
  422198:	pop    rsi
  422199:	jmp    0x421c40
  42219e:	xchg   ax,ax
  4221a0:	lea    r9,[rdx+0x14]
  4221a4:	mov    r8,rdx
  4221a7:	mov    edx,eax
  4221a9:	add    rsp,0x38
  4221ad:	pop    rbx
  4221ae:	pop    rsi
  4221af:	jmp    0x41a9f0
  4221b4:	and    ecx,0x2
  4221b7:	jne    0x4221be
  4221b9:	mov    rdx,r9
  4221bc:	jmp    0x422190
  4221be:	movzx  edx,al
  4221c1:	lea    r9,[r8+0x14]
  4221c5:	mov    rcx,rbx
  4221c8:	jmp    0x4221a9
  4221ca:	mov    rsi,QWORD PTR [rbx+0x20]
  4221ce:	mov    QWORD PTR [rsp+0x28],rdx
  4221d3:	mov    rbx,QWORD PTR [rip+0xfa1e]        # 0x431bf8
  4221da:	call   QWORD PTR [rip+0x26600]        # 0x4487e0
  4221e0:	mov    rdx,QWORD PTR [rsp+0x28]
  4221e5:	lea    rcx,[rax+0x60]
  4221e9:	mov    r8,rsi
  4221ec:	mov    r9,rdx
  4221ef:	mov    rdx,rbx
  4221f2:	call   0x4193f0
  4221f7:	or     eax,0xffffffff
  4221fa:	jmp    0x422154
  4221ff:	nop
  422200:	push   rdi
  422201:	push   rsi
  422202:	push   rbx
  422203:	sub    rsp,0x50
  422207:	or     DWORD PTR [rcx+0x10],0x8000
  42220e:	lea    rdi,[rsp+0x30]
  422213:	mov    rbx,rcx
  422216:	mov    DWORD PTR [rcx+0x14],0x1
  42221d:	mov    QWORD PTR [rcx+0x18],0x0
  422225:	mov    rdx,rdi
  422228:	mov    rcx,rbx
  42222b:	mov    QWORD PTR [rsp+0x30],0x0
  422234:	mov    QWORD PTR [rsp+0x38],0x0
  42223d:	mov    DWORD PTR [rsp+0x40],0x2
  422245:	mov    DWORD PTR [rsp+0x44],0x0
  42224d:	call   0x4220c0
  422252:	test   eax,eax
  422254:	mov    esi,eax
  422256:	jne    0x422265
  422258:	mov    rdx,rdi
  42225b:	mov    rcx,rbx
  42225e:	call   0x41bce0
  422263:	mov    esi,eax
  422265:	cmp    esi,0xffffffff
  422268:	je     0x4222a0
  42226a:	cmp    esi,0x1
  42226d:	je     0x4222c0
  42226f:	mov    eax,DWORD PTR [rsp+0x40]
  422273:	mov    edx,eax
  422275:	and    edx,0x20020
  42227b:	cmp    edx,0x20000
  422281:	je     0x42228f
  422283:	and    eax,0x40020
  422288:	cmp    eax,0x40020
  42228d:	jne    0x422225
  42228f:	mov    rdx,rdi
  422292:	mov    rcx,rbx
  422295:	call   0x41a840
  42229a:	test   eax,eax
  42229c:	je     0x422225
  42229e:	xchg   ax,ax
  4222a0:	mov    edx,DWORD PTR [rbx+0x10]
  4222a3:	mov    eax,esi
  4222a5:	test   dl,0x4
  4222a8:	jne    0x4222d3
  4222aa:	and    dh,0x7f
  4222ad:	mov    DWORD PTR [rbx+0x10],edx
  4222b0:	add    rsp,0x50
  4222b4:	pop    rbx
  4222b5:	pop    rsi
  4222b6:	pop    rdi
  4222b7:	ret    
  4222b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4222c0:	mov    edx,DWORD PTR [rbx+0x10]
  4222c3:	xor    eax,eax
  4222c5:	and    dh,0x7f
  4222c8:	mov    DWORD PTR [rbx+0x10],edx
  4222cb:	add    rsp,0x50
  4222cf:	pop    rbx
  4222d0:	pop    rsi
  4222d1:	pop    rdi
  4222d2:	ret    
  4222d3:	mov    DWORD PTR [rsp+0x2c],esi
  4222d7:	mov    edx,0x1
  4222dc:	mov    rcx,rbx
  4222df:	call   QWORD PTR [rbx+0x98]
  4222e5:	mov    edx,DWORD PTR [rbx+0x10]
  4222e8:	mov    eax,DWORD PTR [rsp+0x2c]
  4222ec:	and    dh,0x7f
  4222ef:	mov    DWORD PTR [rbx+0x10],edx
  4222f2:	add    rsp,0x50
  4222f6:	pop    rbx
  4222f7:	pop    rsi
  4222f8:	pop    rdi
  4222f9:	ret    
  4222fa:	nop    WORD PTR [rax+rax*1+0x0]
  422300:	push   rsi
  422301:	push   rbx
  422302:	sub    rsp,0x58
  422306:	lea    rsi,[rsp+0x30]
  42230b:	mov    rbx,rcx
  42230e:	mov    rdx,rsi
  422311:	mov    rcx,rbx
  422314:	mov    QWORD PTR [rsp+0x30],0x0
  42231d:	mov    QWORD PTR [rsp+0x38],0x0
  422326:	mov    DWORD PTR [rsp+0x40],0x4
  42232e:	mov    DWORD PTR [rsp+0x44],0x0
  422336:	call   0x4220c0
  42233b:	test   eax,eax
  42233d:	jne    0x42234a
  42233f:	mov    rdx,rsi
  422342:	mov    rcx,rbx
  422345:	call   0x41bce0
  42234a:	cmp    eax,0xffffffff
  42234d:	je     0x4223a5
  42234f:	cmp    eax,0x1
  422352:	je     0x4223c0
  422354:	mov    eax,DWORD PTR [rsp+0x40]
  422358:	test   eax,0x20020
  42235d:	je     0x422392
  42235f:	mov    edx,eax
  422361:	and    edx,0x40020
  422367:	cmp    edx,0x20
  42236a:	je     0x422392
  42236c:	mov    edx,eax
  42236e:	and    edx,0x400020
  422374:	cmp    edx,0x400000
  42237a:	je     0x422388
  42237c:	and    eax,0x800020
  422381:	cmp    eax,0x800020
  422386:	jne    0x42230e
  422388:	mov    rax,QWORD PTR [rsp+0x30]
  42238d:	sub    WORD PTR [rax+0xe],0x1
  422392:	mov    rdx,rsi
  422395:	mov    rcx,rbx
  422398:	call   0x41a840
  42239d:	test   eax,eax
  42239f:	je     0x42230e
  4223a5:	test   BYTE PTR [rbx+0x10],0x4
  4223a9:	mov    eax,0xffffffff
  4223ae:	jne    0x4223d0
  4223b0:	add    rsp,0x58
  4223b4:	pop    rbx
  4223b5:	pop    rsi
  4223b6:	ret    
  4223b7:	nop    WORD PTR [rax+rax*1+0x0]
  4223c0:	xor    al,al
  4223c2:	add    rsp,0x58
  4223c6:	pop    rbx
  4223c7:	pop    rsi
  4223c8:	ret    
  4223c9:	nop    DWORD PTR [rax+0x0]
  4223d0:	mov    DWORD PTR [rsp+0x2c],eax
  4223d4:	mov    edx,0x1
  4223d9:	mov    rcx,rbx
  4223dc:	call   QWORD PTR [rbx+0x98]
  4223e2:	mov    eax,DWORD PTR [rsp+0x2c]
  4223e6:	add    rsp,0x58
  4223ea:	pop    rbx
  4223eb:	pop    rsi
  4223ec:	ret    
  4223ed:	nop    DWORD PTR [rax]
  4223f0:	push   r14
  4223f2:	push   r13
  4223f4:	push   r12
  4223f6:	push   rbp
  4223f7:	push   rdi
  4223f8:	push   rsi
  4223f9:	push   rbx
  4223fa:	sub    rsp,0x20
  4223fe:	mov    rax,QWORD PTR [rip+0x21da3]        # 0x4441a8
  422405:	mov    rbp,rcx
  422408:	mov    rdi,rdx
  42240b:	mov    rbx,r8
  42240e:	mov    r12d,r9d
  422411:	test   rax,rax
  422414:	je     0x4226e4
  42241a:	movzx  edx,BYTE PTR [rbx]
  42241d:	cmp    BYTE PTR [rax+rdx*1],0x0
  422421:	je     0x422432
  422423:	add    rbx,0x1
  422427:	movzx  r10d,BYTE PTR [rbx]
  42242b:	cmp    BYTE PTR [rax+r10*1],0x0
  422430:	jne    0x422423
  422432:	lea    rdx,[rip+0x17a0c]        # 0x439e45
  422439:	mov    rcx,rbx
  42243c:	call   0x42de18
  422441:	test   rax,rax
  422444:	mov    r13,rax
  422447:	je     0x422697
  42244d:	cmp    DWORD PTR [rsp+0x80],0x2
  422455:	je     0x422660
  42245b:	movzx  eax,BYTE PTR [rax]
  42245e:	xor    r14d,r14d
  422461:	cmp    al,0x7f
  422463:	jbe    0x422540
  422469:	mov    rdx,QWORD PTR [rip+0x21c30]        # 0x4440a0
  422470:	lea    rsi,[r13+0x1]
  422474:	mov    BYTE PTR [r13+0x0],0x0
  422479:	test   rdx,rdx
  42247c:	je     0x422717
  422482:	movzx  eax,BYTE PTR [r13+0x1]
  422487:	cmp    BYTE PTR [rdx+rax*1],0x0
  42248b:	mov    r10,rax
  42248e:	je     0x4224a2
  422490:	add    rsi,0x1
  422494:	movzx  r11d,BYTE PTR [rsi]
  422498:	cmp    BYTE PTR [rdx+r11*1],0x0
  42249d:	mov    r10,r11
  4224a0:	jne    0x422490
  4224a2:	test   r14d,r14d
  4224a5:	mov    r13,rsi
  4224a8:	je     0x4224be
  4224aa:	cmp    r10b,0x3d
  4224ae:	je     0x4225d0
  4224b4:	cmp    r10b,0x3a
  4224b8:	je     0x4225d0
  4224be:	movzx  eax,BYTE PTR [rbx+0x1]
  4224c2:	cmp    al,0x7f
  4224c4:	ja     0x422515
  4224c6:	lea    rdx,[rip+0x1a473]        # 0x43c940
  4224cd:	test   DWORD PTR [rdx+rax*4],0x3b0040
  4224d4:	je     0x422515
  4224d6:	mov    r8,rdi
  4224d9:	mov    rdx,rbx
  4224dc:	mov    rcx,rbp
  4224df:	call   0x421c40
  4224e4:	test   eax,eax
  4224e6:	jne    0x42252b
  4224e8:	test   r12d,r12d
  4224eb:	je     0x422560
  4224ed:	mov    eax,DWORD PTR [rdi+0x10]
  4224f0:	test   ah,0x1
  4224f3:	jne    0x42252b
  4224f5:	movzx  edx,BYTE PTR [r13+0x0]
  4224fa:	cmp    dl,0x22
  4224fd:	je     0x422610
  422503:	cmp    dl,0x27
  422506:	je     0x422610
  42250c:	mov    QWORD PTR [rdi+0x8],r13
  422510:	jmp    0x422621
  422515:	movsx  edx,BYTE PTR [rbx]
  422518:	lea    r9,[rdi+0x14]
  42251c:	mov    r8,rdi
  42251f:	mov    rcx,rbp
  422522:	call   0x41a9f0
  422527:	test   eax,eax
  422529:	je     0x4224e8
  42252b:	add    rsp,0x20
  42252f:	pop    rbx
  422530:	pop    rsi
  422531:	pop    rdi
  422532:	pop    rbp
  422533:	pop    r12
  422535:	pop    r13
  422537:	pop    r14
  422539:	ret    
  42253a:	nop    WORD PTR [rax+rax*1+0x0]
  422540:	lea    rdx,[rip+0x1a3f9]        # 0x43c940
  422547:	xor    r14d,r14d
  42254a:	test   DWORD PTR [rdx+rax*4],0xc01
  422551:	setne  r14b
  422555:	jmp    0x422469
  42255a:	nop    WORD PTR [rax+rax*1+0x0]
  422560:	movzx  eax,BYTE PTR [r13+0x0]
  422565:	cmp    al,0x22
  422567:	je     0x4226be
  42256d:	cmp    al,0x27
  42256f:	je     0x4226be
  422575:	mov    QWORD PTR [rdi+0x8],r13
  422579:	mov    rax,QWORD PTR [rdi]
  42257c:	mov    eax,DWORD PTR [rax+0x10]
  42257f:	test   ah,0xf0
  422582:	jne    0x422670
  422588:	cmp    BYTE PTR [r13+0x0],0x0
  42258d:	jne    0x42252b
  42258f:	mov    QWORD PTR [rdi+0x8],0x0
  422597:	mov    ebx,DWORD PTR [rip+0xf533]        # 0x431ad0
  42259d:	mov    eax,DWORD PTR [rsp+0x80]
  4225a4:	mov    rdx,rdi
  4225a7:	mov    rcx,rbp
  4225aa:	mov    DWORD PTR [rip+0xf520],eax        # 0x431ad0
  4225b0:	call   0x41a840
  4225b5:	mov    DWORD PTR [rip+0xf515],ebx        # 0x431ad0
  4225bb:	add    rsp,0x20
  4225bf:	pop    rbx
  4225c0:	pop    rsi
  4225c1:	pop    rdi
  4225c2:	pop    rbp
  4225c3:	pop    r12
  4225c5:	pop    r13
  4225c7:	pop    r14
  4225c9:	ret    
  4225ca:	nop    WORD PTR [rax+rax*1+0x0]
  4225d0:	mov    rax,QWORD PTR [rip+0x21ac9]        # 0x4440a0
  4225d7:	lea    r13,[rsi+0x1]
  4225db:	test   rax,rax
  4225de:	je     0x422729
  4225e4:	movzx  edx,BYTE PTR [rsi+0x1]
  4225e8:	cmp    BYTE PTR [rax+rdx*1],0x0
  4225ec:	je     0x4224be
  4225f2:	add    r13,0x1
  4225f6:	movzx  edx,BYTE PTR [r13+0x0]
  4225fb:	cmp    BYTE PTR [rax+rdx*1],0x0
  4225ff:	jne    0x4225f2
  422601:	jmp    0x4224be
  422606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422610:	xor    edx,edx
  422612:	mov    rcx,r13
  422615:	call   0x41e440
  42261a:	mov    eax,DWORD PTR [rdi+0x10]
  42261d:	mov    QWORD PTR [rdi+0x8],r13
  422621:	mov    edx,eax
  422623:	and    edx,0x60000
  422629:	cmp    edx,0x20000
  42262f:	je     0x4226f3
  422635:	jbe    0x4226a8
  422637:	cmp    edx,0x40000
  42263d:	je     0x422705
  422643:	cmp    edx,0x60000
  422649:	jne    0x422579
  42264f:	test   r12d,r12d
  422652:	jg     0x42252b
  422658:	jmp    0x422579
  42265d:	nop    DWORD PTR [rax]
  422660:	mov    BYTE PTR [rax],0x0
  422663:	add    r13,0x1
  422667:	jmp    0x4224be
  42266c:	nop    DWORD PTR [rax+0x0]
  422670:	test   eax,0x10000
  422675:	je     0x4226cd
  422677:	cmp    BYTE PTR [r13+0x0],0x0
  42267c:	je     0x42258f
  422682:	mov    rcx,r13
  422685:	call   0x41afa0
  42268a:	or     DWORD PTR [rdi+0x10],0x40
  42268e:	mov    QWORD PTR [rdi+0x8],rax
  422692:	jmp    0x422597
  422697:	mov    rcx,rbx
  42269a:	call   0x42de30
  42269f:	lea    r13,[rbx+rax*1]
  4226a3:	jmp    0x4224be
  4226a8:	test   edx,edx
  4226aa:	jne    0x422579
  4226b0:	test   r12d,r12d
  4226b3:	jns    0x422579
  4226b9:	jmp    0x42252b
  4226be:	xor    edx,edx
  4226c0:	mov    rcx,r13
  4226c3:	call   0x41e440
  4226c8:	jmp    0x422575
  4226cd:	cmp    BYTE PTR [r13+0x0],0x0
  4226d2:	jne    0x422682
  4226d4:	lea    rax,[rip+0x19074]        # 0x43b74f
  4226db:	mov    QWORD PTR [rdi+0x8],rax
  4226df:	jmp    0x422597
  4226e4:	mov    ecx,0x2d
  4226e9:	call   0x41ad40
  4226ee:	jmp    0x42241a
  4226f3:	test   r12d,r12d
  4226f6:	js     0x42270a
  4226f8:	test   al,0x20
  4226fa:	je     0x422579
  422700:	jmp    0x42252b
  422705:	test   r12d,r12d
  422708:	js     0x4226f8
  42270a:	test   al,0x20
  42270c:	jne    0x422579
  422712:	jmp    0x42252b
  422717:	mov    ecx,0xc
  42271c:	call   0x41ad40
  422721:	mov    rdx,rax
  422724:	jmp    0x422482
  422729:	mov    ecx,0xc
  42272e:	call   0x41ad40
  422733:	jmp    0x4225e4
  422738:	nop    DWORD PTR [rax+rax*1+0x0]
  422740:	push   rdi
  422741:	push   rsi
  422742:	push   rbx
  422743:	sub    rsp,0x50
  422747:	mov    esi,DWORD PTR [rcx+0x10]
  42274a:	mov    rbx,rcx
  42274d:	mov    QWORD PTR [rsp+0x30],0x0
  422756:	mov    QWORD PTR [rsp+0x38],0x0
  42275f:	mov    DWORD PTR [rsp+0x40],0x1
  422767:	mov    DWORD PTR [rsp+0x44],0x0
  42276f:	mov    eax,esi
  422771:	and    eax,0xfffffffb
  422774:	mov    DWORD PTR [rcx+0x10],eax
  422777:	mov    rcx,rdx
  42277a:	call   0x41afa0
  42277f:	lea    rdx,[rsp+0x30]
  422784:	mov    rdi,rax
  422787:	xor    r9d,r9d
  42278a:	mov    r8,rax
  42278d:	mov    rcx,rbx
  422790:	mov    DWORD PTR [rsp+0x20],0x0
  422798:	call   0x4223f0
  42279d:	mov    rcx,rdi
  4227a0:	call   0x42df08
  4227a5:	mov    DWORD PTR [rbx+0x10],esi
  4227a8:	add    rsp,0x50
  4227ac:	pop    rbx
  4227ad:	pop    rsi
  4227ae:	pop    rdi
  4227af:	ret    
  4227b0:	push   rbp
  4227b1:	push   rdi
  4227b2:	push   rsi
  4227b3:	push   rbx
  4227b4:	sub    rsp,0x48
  4227b8:	mov    rsi,QWORD PTR [rdx+0x18]
  4227bc:	cmp    rcx,0xf
  4227c0:	mov    QWORD PTR [rsp+0x20],0x0
  4227c9:	mov    QWORD PTR [rsp+0x28],0x0
  4227d2:	mov    DWORD PTR [rsp+0x30],0x2
  4227da:	mov    DWORD PTR [rsp+0x34],0x0
  4227e2:	jbe    0x4227eb
  4227e4:	mov    eax,DWORD PTR [rdx+0x10]
  4227e7:	test   al,0x8
  4227e9:	je     0x4227f4
  4227eb:	add    rsp,0x48
  4227ef:	pop    rbx
  4227f0:	pop    rsi
  4227f1:	pop    rdi
  4227f2:	pop    rbp
  4227f3:	ret    
  4227f4:	test   ah,0x80
  4227f7:	je     0x422890
  4227fd:	test   BYTE PTR [rcx+0x12],0x4
  422801:	mov    rbx,rcx
  422804:	je     0x4228c2
  42280a:	lea    rdi,[rsp+0x20]
  42280f:	mov    rdx,rsi
  422812:	mov    r8,rdi
  422815:	call   0x421c40
  42281a:	test   eax,eax
  42281c:	jne    0x4228c2
  422822:	mov    rdx,rdi
  422825:	mov    rcx,rbx
  422828:	call   0x41ade0
  42282d:	test   eax,eax
  42282f:	jne    0x4228c2
  422835:	test   BYTE PTR [rbx+0x11],0x80
  422839:	mov    eax,DWORD PTR [rsp+0x30]
  42283d:	jne    0x4228a0
  42283f:	test   eax,0x20020
  422844:	je     0x422873
  422846:	mov    edx,eax
  422848:	and    edx,0x40020
  42284e:	cmp    edx,0x20
  422851:	je     0x422873
  422853:	mov    edx,eax
  422855:	and    edx,0x400020
  42285b:	cmp    edx,0x400000
  422861:	je     0x422873
  422863:	and    eax,0x800020
  422868:	cmp    eax,0x800020
  42286d:	jne    0x4227eb
  422873:	mov    rdx,rdi
  422876:	mov    rcx,rbx
  422879:	call   0x41a840
  42287e:	nop
  42287f:	add    rsp,0x48
  422883:	pop    rbx
  422884:	pop    rsi
  422885:	pop    rdi
  422886:	pop    rbp
  422887:	ret    
  422888:	nop    DWORD PTR [rax+rax*1+0x0]
  422890:	mov    DWORD PTR [rsp+0x30],0x4
  422898:	jmp    0x4227fd
  42289d:	nop    DWORD PTR [rax]
  4228a0:	mov    edx,eax
  4228a2:	and    edx,0x20020
  4228a8:	cmp    edx,0x20000
  4228ae:	je     0x422873
  4228b0:	and    eax,0x40020
  4228b5:	cmp    eax,0x40020
  4228ba:	jne    0x4227eb
  4228c0:	jmp    0x422873
  4228c2:	mov    rbp,QWORD PTR [rbx+0x28]
  4228c6:	mov    rdi,QWORD PTR [rip+0xf333]        # 0x431c00
  4228cd:	call   QWORD PTR [rip+0x25f0d]        # 0x4487e0
  4228d3:	lea    rcx,[rax+0x60]
  4228d7:	mov    r9,rsi
  4228da:	mov    r8,rbp
  4228dd:	mov    rdx,rdi
  4228e0:	call   0x4193f0
  4228e5:	mov    rcx,rbx
  4228e8:	mov    edx,0x1
  4228ed:	call   QWORD PTR [rbx+0x98]
  4228f3:	mov    ecx,0x1
  4228f8:	call   0x42e008
  4228fd:	nop
  4228fe:	xchg   ax,ax
  422900:	push   r12
  422902:	push   rbp
  422903:	push   rdi
  422904:	push   rsi
  422905:	push   rbx
  422906:	sub    rsp,0x40
  42290a:	mov    rsi,QWORD PTR [rdx+0x18]
  42290e:	cmp    rcx,0xf
  422912:	mov    QWORD PTR [rsp+0x20],0x0
  42291b:	mov    QWORD PTR [rsp+0x28],0x0
  422924:	mov    DWORD PTR [rsp+0x30],0x4
  42292c:	mov    DWORD PTR [rsp+0x34],0x0
  422934:	jbe    0x422a4f
  42293a:	cmp    BYTE PTR [rip+0x215cf],0x0        # 0x443f10
  422941:	jne    0x422a4f
  422947:	cmp    DWORD PTR [rcx],0x1ffff
  42294d:	mov    rbx,rcx
  422950:	jle    0x422aeb
  422956:	cmp    QWORD PTR [rcx+0xd0],0x0
  42295e:	je     0x422aeb
  422964:	test   rsi,rsi
  422967:	je     0x42296e
  422969:	cmp    BYTE PTR [rsi],0x0
  42296c:	jne    0x4229bc
  42296e:	mov    r12,QWORD PTR [rdx+0x50]
  422972:	mov    rbp,QWORD PTR [rbx+0x28]
  422976:	mov    rdi,QWORD PTR [rip+0xf2db]        # 0x431c58
  42297d:	call   QWORD PTR [rip+0x25e5d]        # 0x4487e0
  422983:	lea    rcx,[rax+0x60]
  422987:	mov    r8,rbp
  42298a:	mov    r9,r12
  42298d:	mov    rdx,rdi
  422990:	call   0x4193f0
  422995:	mov    edx,0x1
  42299a:	mov    rcx,rbx
  42299d:	call   QWORD PTR [rbx+0x98]
  4229a3:	lea    rdx,[rip+0x1644e]        # 0x438df8
  4229aa:	lea    rcx,[rip+0x1644f]        # 0x438e00
  4229b1:	mov    r8d,0x60
  4229b7:	call   0x428fc0
  4229bc:	cmp    BYTE PTR [rsi+0x1],0x0
  4229c0:	mov    BYTE PTR [rip+0x21549],0x1        # 0x443f10
  4229c7:	jne    0x422a60
  4229cd:	movzx  edx,BYTE PTR [rsi]
  4229d0:	cmp    dl,0x2a
  4229d3:	je     0x422ac3
  4229d9:	lea    r8,[rsp+0x20]
  4229de:	mov    rcx,rbx
  4229e1:	lea    r9,[r8+0x14]
  4229e5:	call   0x41a9f0
  4229ea:	test   eax,eax
  4229ec:	je     0x422a3b
  4229ee:	movsx  ebp,BYTE PTR [rsi]
  4229f1:	mov    rdi,QWORD PTR [rbx+0x20]
  4229f5:	mov    rsi,QWORD PTR [rip+0xf1f4]        # 0x431bf0
  4229fc:	call   QWORD PTR [rip+0x25dde]        # 0x4487e0
  422a02:	lea    rcx,[rax+0x60]
  422a06:	mov    r8,rdi
  422a09:	mov    r9d,ebp
  422a0c:	mov    rdx,rsi
  422a0f:	call   0x4193f0
  422a14:	mov    edx,0x1
  422a19:	mov    rcx,rbx
  422a1c:	call   QWORD PTR [rbx+0x98]
  422a22:	lea    rdx,[rip+0x163cf]        # 0x438df8
  422a29:	lea    rcx,[rip+0x163d0]        # 0x438e00
  422a30:	mov    r8d,0x71
  422a36:	call   0x428fc0
  422a3b:	mov    rdx,QWORD PTR [rsp+0x20]
  422a40:	mov    rcx,rbx
  422a43:	call   0x4192d0
  422a48:	mov    BYTE PTR [rip+0x214c1],0x0        # 0x443f10
  422a4f:	add    rsp,0x40
  422a53:	pop    rbx
  422a54:	pop    rsi
  422a55:	pop    rdi
  422a56:	pop    rbp
  422a57:	pop    r12
  422a59:	ret    
  422a5a:	nop    WORD PTR [rax+rax*1+0x0]
  422a60:	lea    r8,[rsp+0x20]
  422a65:	mov    rdx,rsi
  422a68:	mov    rcx,rbx
  422a6b:	call   0x421c40
  422a70:	test   eax,eax
  422a72:	je     0x422a3b
  422a74:	mov    rbp,QWORD PTR [rbx+0x20]
  422a78:	mov    rdi,QWORD PTR [rip+0xf179]        # 0x431bf8
  422a7f:	call   QWORD PTR [rip+0x25d5b]        # 0x4487e0
  422a85:	lea    rcx,[rax+0x60]
  422a89:	mov    r9,rsi
  422a8c:	mov    r8,rbp
  422a8f:	mov    rdx,rdi
  422a92:	call   0x4193f0
  422a97:	mov    rcx,rbx
  422a9a:	mov    edx,0x1
  422a9f:	call   QWORD PTR [rbx+0x98]
  422aa5:	lea    rdx,[rip+0x1634c]        # 0x438df8
  422aac:	lea    rcx,[rip+0x1634d]        # 0x438e00
  422ab3:	mov    r8d,0x79
  422ab9:	call   0x428fc0
  422abe:	jmp    0x422a3b
  422ac3:	mov    rdi,QWORD PTR [rbx+0x78]
  422ac7:	mov    esi,DWORD PTR [rbx+0xb4]
  422acd:	jmp    0x422ad4
  422acf:	nop
  422ad0:	add    rdi,0x68
  422ad4:	mov    rdx,rdi
  422ad7:	mov    rcx,rbx
  422ada:	sub    esi,0x1
  422add:	call   0x4192d0
  422ae2:	test   esi,esi
  422ae4:	jg     0x422ad0
  422ae6:	jmp    0x422a48
  422aeb:	mov    rcx,QWORD PTR [rip+0xf076]        # 0x431b68
  422af2:	call   0x419860
  422af7:	nop
  422af8:	nop    DWORD PTR [rax+rax*1+0x0]
  422b00:	push   r13
  422b02:	push   r12
  422b04:	push   rbp
  422b05:	push   rdi
  422b06:	push   rsi
  422b07:	push   rbx
  422b08:	sub    rsp,0x28
  422b0c:	mov    rbp,rcx
  422b0f:	mov    ecx,0xa
  422b14:	mov    rsi,rdx
  422b17:	call   0x41b230
  422b1c:	mov    rcx,QWORD PTR [rbp+0x28]
  422b20:	mov    rdi,rax
  422b23:	call   0x42de30
  422b28:	mov    r13,rax
  422b2b:	mov    eax,0x3f3c
  422b30:	mov    WORD PTR [rdi],ax
  422b33:	movabs rax,0x6d6172676f7270
  422b3d:	mov    r12d,r13d
  422b40:	mov    QWORD PTR [rdi+0x2],rax
  422b44:	mov    r10,QWORD PTR [rip+0x21555]        # 0x4440a0
  422b4b:	lea    rbx,[rsi+0x1]
  422b4f:	test   r10,r10
  422b52:	je     0x422bc8
  422b54:	movzx  eax,BYTE PTR [rsi+0x1]
  422b58:	cmp    BYTE PTR [r10+rax*1],0x0
  422b5d:	je     0x422b6f
  422b5f:	nop
  422b60:	add    rbx,0x1
  422b64:	movzx  r9d,BYTE PTR [rbx]
  422b68:	cmp    BYTE PTR [r10+r9*1],0x0
  422b6d:	jne    0x422b60
  422b6f:	mov    rdx,QWORD PTR [rbp+0x28]
  422b73:	mov    r8d,r12d
  422b76:	mov    rcx,rbx
  422b79:	call   0x421bf0
  422b7e:	test   eax,eax
  422b80:	jne    0x422b9d
  422b82:	lea    rsi,[rbx+r13*1]
  422b86:	movzx  eax,BYTE PTR [rsi]
  422b89:	cmp    al,0x7f
  422b8b:	ja     0x422b9d
  422b8d:	lea    rdx,[rip+0x19dac]        # 0x43c940
  422b94:	test   DWORD PTR [rdx+rax*4],0x1000c01
  422b9b:	jne    0x422bda
  422b9d:	mov    rdx,rdi
  422ba0:	mov    rcx,rbx
  422ba3:	call   0x42de08
  422ba8:	test   rax,rax
  422bab:	mov    rsi,rax
  422bae:	jne    0x422b44
  422bb0:	mov    rcx,rdi
  422bb3:	call   0x42df08
  422bb8:	mov    rax,rsi
  422bbb:	add    rsp,0x28
  422bbf:	pop    rbx
  422bc0:	pop    rsi
  422bc1:	pop    rdi
  422bc2:	pop    rbp
  422bc3:	pop    r12
  422bc5:	pop    r13
  422bc7:	ret    
  422bc8:	mov    ecx,0xc
  422bcd:	call   0x41ad40
  422bd2:	mov    r10,rax
  422bd5:	jmp    0x422b54
  422bda:	mov    rcx,rdi
  422bdd:	call   0x42df08
  422be2:	jmp    0x422bec
  422be4:	add    rsi,0x1
  422be8:	cmp    al,0x3e
  422bea:	je     0x422bb8
  422bec:	movzx  eax,BYTE PTR [rsi]
  422bef:	test   al,al
  422bf1:	jne    0x422be4
  422bf3:	xor    esi,esi
  422bf5:	mov    rax,rsi
  422bf8:	add    rsp,0x28
  422bfc:	pop    rbx
  422bfd:	pop    rsi
  422bfe:	pop    rdi
  422bff:	pop    rbp
  422c00:	pop    r12
  422c02:	pop    r13
  422c04:	ret    
  422c05:	nop
  422c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422c10:	push   r14
  422c12:	push   r13
  422c14:	push   r12
  422c16:	push   rbp
  422c17:	push   rdi
  422c18:	push   rsi
  422c19:	push   rbx
  422c1a:	sub    rsp,0x20
  422c1e:	test   rdx,rdx
  422c21:	mov    rbp,rcx
  422c24:	mov    rbx,rdx
  422c27:	je     0x422ca0
  422c29:	mov    rax,QWORD PTR [rip+0x21470]        # 0x4440a0
  422c30:	test   rax,rax
  422c33:	je     0x422d62
  422c39:	movzx  ecx,BYTE PTR [rbx]
  422c3c:	cmp    BYTE PTR [rax+rcx*1],0x0
  422c40:	mov    rdx,rcx
  422c43:	je     0x422c57
  422c45:	add    rbx,0x1
  422c49:	movzx  r8d,BYTE PTR [rbx]
  422c4d:	cmp    BYTE PTR [rax+r8*1],0x0
  422c52:	mov    rdx,r8
  422c55:	jne    0x422c45
  422c57:	test   dl,dl
  422c59:	je     0x422c91
  422c5b:	xor    esi,esi
  422c5d:	mov    r14d,0x1
  422c63:	lea    rdi,[rip+0x16316]        # 0x438f80
  422c6a:	xor    r12d,r12d
  422c6d:	mov    r13,QWORD PTR [rdi]
  422c70:	mov    rdx,QWORD PTR [rdi+0x10]
  422c74:	mov    rcx,rbx
  422c77:	mov    r8d,r13d
  422c7a:	call   0x421bf0
  422c7f:	test   eax,eax
  422c81:	je     0x422cc0
  422c83:	add    r12d,0x1
  422c87:	add    rdi,0x18
  422c8b:	cmp    r12d,0x5
  422c8f:	jne    0x422c6d
  422c91:	add    rsp,0x20
  422c95:	pop    rbx
  422c96:	pop    rsi
  422c97:	pop    rdi
  422c98:	pop    rbp
  422c99:	pop    r12
  422c9b:	pop    r13
  422c9d:	pop    r14
  422c9f:	ret    
  422ca0:	lea    rcx,[rip+0x16160]        # 0x438e07
  422ca7:	call   0x42ded0
  422cac:	test   rax,rax
  422caf:	mov    rbx,rax
  422cb2:	jne    0x422c29
  422cb8:	jmp    0x422c91
  422cba:	nop    WORD PTR [rax+rax*1+0x0]
  422cc0:	add    rbx,r13
  422cc3:	movzx  r8d,BYTE PTR [rbx]
  422cc7:	cmp    r8b,0x7f
  422ccb:	ja     0x422c91
  422ccd:	lea    rdx,[rip+0x19c6c]        # 0x43c940
  422cd4:	movzx  eax,r8b
  422cd8:	test   DWORD PTR [rdx+rax*4],0xc13
  422cdf:	je     0x422c91
  422ce1:	mov    eax,r14d
  422ce4:	mov    ecx,r12d
  422ce7:	shl    eax,cl
  422ce9:	or     esi,eax
  422ceb:	mov    rax,QWORD PTR [rip+0x213ae]        # 0x4440a0
  422cf2:	test   rax,rax
  422cf5:	je     0x422dc2
  422cfb:	mov    edx,r8d
  422cfe:	cmp    BYTE PTR [rax+r8*1],0x0
  422d03:	je     0x422d15
  422d05:	add    rbx,0x1
  422d09:	movzx  ecx,BYTE PTR [rbx]
  422d0c:	cmp    BYTE PTR [rax+rcx*1],0x0
  422d10:	mov    rdx,rcx
  422d13:	jne    0x422d05
  422d15:	test   dl,dl
  422d17:	je     0x422d71
  422d19:	cmp    dl,0x2c
  422d1c:	jne    0x422c63
  422d22:	mov    rax,QWORD PTR [rip+0x21377]        # 0x4440a0
  422d29:	lea    rdi,[rbx+0x1]
  422d2d:	test   rax,rax
  422d30:	je     0x422dd8
  422d36:	movzx  edx,BYTE PTR [rbx+0x1]
  422d3a:	mov    rbx,rdi
  422d3d:	cmp    BYTE PTR [rax+rdx*1],0x0
  422d41:	je     0x422c63
  422d47:	nop    WORD PTR [rax+rax*1+0x0]
  422d50:	add    rbx,0x1
  422d54:	movzx  edx,BYTE PTR [rbx]
  422d57:	cmp    BYTE PTR [rax+rdx*1],0x0
  422d5b:	jne    0x422d50
  422d5d:	jmp    0x422c63
  422d62:	mov    ecx,0xc
  422d67:	call   0x41ad40
  422d6c:	jmp    0x422c39
  422d71:	mov    eax,esi
  422d73:	and    eax,0x3
  422d76:	cmp    eax,0x3
  422d79:	je     0x422c91
  422d7f:	mov    eax,esi
  422d81:	and    eax,0xc
  422d84:	cmp    eax,0xc
  422d87:	je     0x422c91
  422d8d:	lea    rax,[rip+0x161ec]        # 0x438f80
  422d94:	jmp    0x422daf
  422d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422da0:	and    DWORD PTR [rbp+0x0],edx
  422da3:	shr    esi,1
  422da5:	je     0x422c91
  422dab:	add    rax,0x18
  422daf:	test   sil,0x1
  422db3:	je     0x422da3
  422db5:	mov    edx,DWORD PTR [rax+0x8]
  422db8:	test   dl,0x1
  422dbb:	jne    0x422da0
  422dbd:	or     DWORD PTR [rbp+0x0],edx
  422dc0:	jmp    0x422da3
  422dc2:	mov    ecx,0xc
  422dc7:	call   0x41ad40
  422dcc:	movzx  edx,BYTE PTR [rbx]
  422dcf:	movzx  r8d,dl
  422dd3:	jmp    0x422cfe
  422dd8:	mov    ecx,0xc
  422ddd:	call   0x41ad40
  422de2:	jmp    0x422d36
  422de7:	nop    WORD PTR [rax+rax*1+0x0]
  422df0:	push   r12
  422df2:	push   rbp
  422df3:	push   rdi
  422df4:	push   rsi
  422df5:	push   rbx
  422df6:	sub    rsp,0x30
  422dfa:	mov    rax,QWORD PTR [rip+0x2129f]        # 0x4440a0
  422e01:	mov    rbp,rcx
  422e04:	lea    rbx,[rdx+0x1]
  422e08:	test   rax,rax
  422e0b:	je     0x422e8e
  422e11:	movzx  edx,BYTE PTR [rdx+0x1]
  422e15:	cmp    BYTE PTR [rax+rdx*1],0x0
  422e19:	je     0x422e2d
  422e1b:	nop    DWORD PTR [rax+rax*1+0x0]
  422e20:	add    rbx,0x1
  422e24:	movzx  edx,BYTE PTR [rbx]
  422e27:	cmp    BYTE PTR [rax+rdx*1],0x0
  422e2b:	jne    0x422e20
  422e2d:	mov    edx,0x3e
  422e32:	mov    rcx,rbx
  422e35:	call   0x42de58
  422e3a:	test   rax,rax
  422e3d:	mov    rsi,rax
  422e40:	je     0x422e80
  422e42:	mov    r12d,eax
  422e45:	add    rsi,0x1
  422e49:	sub    r12d,ebx
  422e4c:	lea    rcx,[r12+0x1]
  422e51:	call   0x41b230
  422e56:	mov    r8,r12
  422e59:	mov    rdx,rbx
  422e5c:	mov    rcx,rax
  422e5f:	mov    rdi,rax
  422e62:	call   0x42de98
  422e67:	lea    rcx,[rbp+0x10]
  422e6b:	mov    rdx,rdi
  422e6e:	mov    BYTE PTR [rdi+r12*1],0x0
  422e73:	call   0x422c10
  422e78:	mov    rcx,rdi
  422e7b:	call   0x42df08
  422e80:	mov    rax,rsi
  422e83:	add    rsp,0x30
  422e87:	pop    rbx
  422e88:	pop    rsi
  422e89:	pop    rdi
  422e8a:	pop    rbp
  422e8b:	pop    r12
  422e8d:	ret    
  422e8e:	mov    ecx,0xc
  422e93:	mov    QWORD PTR [rsp+0x28],rdx
  422e98:	call   0x41ad40
  422e9d:	mov    rdx,QWORD PTR [rsp+0x28]
  422ea2:	jmp    0x422e11
  422ea7:	nop    WORD PTR [rax+rax*1+0x0]
  422eb0:	push   rbp
  422eb1:	push   rdi
  422eb2:	push   rsi
  422eb3:	push   rbx
  422eb4:	sub    rsp,0x28
  422eb8:	test   BYTE PTR [rdx+0x12],0x1
  422ebc:	mov    rbx,rcx
  422ebf:	mov    rsi,r8
  422ec2:	mov    ebp,r9d
  422ec5:	je     0x422f00
  422ec7:	mov    rax,QWORD PTR [rdx+0x18]
  422ecb:	test   rax,rax
  422ece:	je     0x422f00
  422ed0:	movzx  edi,BYTE PTR [rax]
  422ed3:	test   dil,dil
  422ed6:	je     0x422f00
  422ed8:	lea    eax,[rdi-0x43]
  422edb:	cmp    al,0x33
  422edd:	ja     0x423020
  422ee3:	lea    rdx,[rip+0x15f2e]        # 0x438e18
  422eea:	movzx  eax,al
  422eed:	movsxd rax,DWORD PTR [rdx+rax*4]
  422ef1:	add    rdx,rax
  422ef4:	jmp    rdx
  422ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422f00:	lea    rcx,[rbx+0x10]
  422f04:	xor    edx,edx
  422f06:	call   0x422c10
  422f0b:	test   BYTE PTR [rbx+0x11],0x10
  422f0f:	jne    0x422f50
  422f11:	mov    rdx,QWORD PTR [rbx+0x50]
  422f15:	mov    r9,QWORD PTR [rbx+0x60]
  422f19:	mov    rcx,rsi
  422f1c:	mov    r8,QWORD PTR [rbx+0x40]
  422f20:	call   0x4195c0
  422f25:	mov    rcx,rsi
  422f28:	call   0x42df48
  422f2d:	mov    rcx,rsi
  422f30:	call   0x42df50
  422f35:	test   eax,eax
  422f37:	jne    0x423074
  422f3d:	test   bpl,bpl
  422f40:	jne    0x4230a0
  422f46:	add    rsp,0x28
  422f4a:	pop    rbx
  422f4b:	pop    rsi
  422f4c:	pop    rdi
  422f4d:	pop    rbp
  422f4e:	ret    
  422f4f:	nop
  422f50:	mov    rcx,QWORD PTR [rbx+0x40]
  422f54:	test   rcx,rcx
  422f57:	je     0x423050
  422f5d:	mov    rdx,rsi
  422f60:	call   0x42df18
  422f65:	cmp    DWORD PTR [rbx],0x21fff
  422f6b:	jle    0x422fe2
  422f6d:	cmp    QWORD PTR [rbx+0xe0],0x0
  422f75:	je     0x422fe2
  422f77:	mov    rdx,rsi
  422f7a:	mov    ecx,0xa
  422f7f:	call   0x42df20
  422f84:	mov    rcx,QWORD PTR [rbx+0xe0]
  422f8b:	mov    rdx,rsi
  422f8e:	call   0x42df18
  422f93:	jmp    0x422f25
  422f95:	mov    rcx,QWORD PTR [rcx+0x40]
  422f99:	test   rcx,rcx
  422f9c:	je     0x422fa6
  422f9e:	mov    rdx,r8
  422fa1:	call   0x42df18
  422fa6:	mov    rcx,QWORD PTR [rbx+0x48]
  422faa:	test   rcx,rcx
  422fad:	je     0x422fb7
  422faf:	mov    rdx,rsi
  422fb2:	call   0x42df18
  422fb7:	mov    rdx,rsi
  422fba:	mov    ecx,0xa
  422fbf:	call   0x42df20
  422fc4:	mov    rdx,QWORD PTR [rip+0xeb8d]        # 0x431b58
  422fcb:	lea    r8,[rip+0x15f3e]        # 0x438f10
  422fd2:	mov    rcx,rsi
  422fd5:	call   0x4193f0
  422fda:	cmp    DWORD PTR [rbx],0x21fff
  422fe0:	jg     0x422f6d
  422fe2:	cmp    QWORD PTR [rbx+0x80],0x0
  422fea:	je     0x422f25
  422ff0:	mov    rdx,rsi
  422ff3:	mov    ecx,0xa
  422ff8:	call   0x42df20
  422ffd:	mov    r8,QWORD PTR [rbx+0x80]
  423004:	mov    rdx,QWORD PTR [rip+0xeda5]        # 0x431db0
  42300b:	mov    rcx,rsi
  42300e:	call   0x4193f0
  423013:	jmp    0x422f25
  423018:	nop    DWORD PTR [rax+rax*1+0x0]
  423020:	mov    rbx,QWORD PTR [rip+0xeba9]        # 0x431bd0
  423027:	call   QWORD PTR [rip+0x257b3]        # 0x4487e0
  42302d:	lea    rcx,[rax+0x60]
  423031:	movsx  r8d,dil
  423035:	mov    rdx,rbx
  423038:	call   0x4193f0
  42303d:	mov    ecx,0x1
  423042:	call   0x419830
  423047:	nop    WORD PTR [rax+rax*1+0x0]
  423050:	mov    rcx,QWORD PTR [rbx+0x50]
  423054:	test   rcx,rcx
  423057:	jne    0x422f5d
  42305d:	mov    rdx,QWORD PTR [rbx+0x60]
  423061:	xor    r9d,r9d
  423064:	xor    r8d,r8d
  423067:	mov    rcx,rsi
  42306a:	call   0x4195c0
  42306f:	jmp    0x422f65
  423074:	call   QWORD PTR [rip+0x25766]        # 0x4487e0
  42307a:	add    rax,0x30
  42307e:	mov    r8,QWORD PTR [rip+0xec3b]        # 0x431cc0
  423085:	mov    rcx,QWORD PTR [rbx+0x28]
  423089:	cmp    rsi,rax
  42308c:	cmove  r8,QWORD PTR [rip+0xec24]        # 0x431cb8
  423094:	mov    rdx,QWORD PTR [rip+0xec2d]        # 0x431cc8
  42309b:	call   0x419db0
  4230a0:	xor    ecx,ecx
  4230a2:	call   0x419830
  4230a7:	nop
  4230a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4230b0:	push   rsi
  4230b1:	push   rbx
  4230b2:	sub    rsp,0x28
  4230b6:	cmp    BYTE PTR [rip+0x20e77],0x0        # 0x443f34
  4230bd:	mov    rbx,rcx
  4230c0:	mov    rsi,rdx
  4230c3:	je     0x4230e0
  4230c5:	call   QWORD PTR [rip+0x25715]        # 0x4487e0
  4230cb:	cmp    rbx,0xf
  4230cf:	lea    r8,[rax+0x60]
  4230d3:	ja     0x4230f0
  4230d5:	add    rsp,0x28
  4230d9:	pop    rbx
  4230da:	pop    rsi
  4230db:	ret    
  4230dc:	nop    DWORD PTR [rax+0x0]
  4230e0:	call   QWORD PTR [rip+0x256fa]        # 0x4487e0
  4230e6:	cmp    rbx,0xf
  4230ea:	lea    r8,[rax+0x30]
  4230ee:	jbe    0x4230d5
  4230f0:	mov    r9d,0x1
  4230f6:	mov    rdx,rsi
  4230f9:	mov    rcx,rbx
  4230fc:	add    rsp,0x28
  423100:	pop    rbx
  423101:	pop    rsi
  423102:	jmp    0x422eb0
  423107:	nop    WORD PTR [rax+rax*1+0x0]
  423110:	add    rcx,0x1
  423114:	add    rdx,0x1
  423118:	movzx  r9d,BYTE PTR [rcx-0x1]
  42311d:	movzx  r8d,BYTE PTR [rdx-0x1]
  423122:	cmp    r9b,r8b
  423125:	je     0x423141
  423127:	lea    r10,[rip+0xe592]        # 0x4316c0
  42312e:	movzx  eax,r9b
  423132:	movzx  eax,BYTE PTR [r10+rax*1]
  423137:	movzx  r8d,BYTE PTR [r10+r8*1]
  42313c:	sub    eax,r8d
  42313f:	jne    0x423148
  423141:	test   r9b,r9b
  423144:	jne    0x423110
  423146:	xor    eax,eax
  423148:	repz ret 
  42314a:	nop    WORD PTR [rax+rax*1+0x0]
  423150:	test   r8d,r8d
  423153:	jne    0x423171
  423155:	lea    rdx,[rip+0xe663]        # 0x4317bf
  42315c:	mov    eax,0xff
  423161:	mov    BYTE PTR [rdx],al
  423163:	sub    eax,0x1
  423166:	sub    rdx,0x1
  42316a:	cmp    eax,0xffffffff
  42316d:	jne    0x423161
  42316f:	repz ret 
  423171:	lea    r9,[rip+0xe548]        # 0x4316c0
  423178:	movzx  eax,dl
  42317b:	movzx  edx,cl
  42317e:	xchg   ax,ax
  423180:	mov    ecx,edx
  423182:	add    edx,0x1
  423185:	mov    BYTE PTR [r9+rcx*1],al
  423189:	add    eax,0x1
  42318c:	cmp    eax,0xff
  423191:	ja     0x4231a4
  423193:	cmp    edx,0xff
  423199:	ja     0x4231a4
  42319b:	sub    r8d,0x1
  42319f:	test   r8d,r8d
  4231a2:	jg     0x423180
  4231a4:	repz ret 
  4231a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4231b0:	test   rcx,rcx
  4231b3:	je     0x4231df
  4231b5:	movzx  eax,BYTE PTR [rcx]
  4231b8:	test   al,al
  4231ba:	je     0x4231df
  4231bc:	lea    rdx,[rip+0xe4fd]        # 0x4316c0
  4231c3:	mov    r8d,eax
  4231c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4231d0:	add    rcx,0x1
  4231d4:	mov    BYTE PTR [rdx+rax*1],r8b
  4231d8:	movzx  eax,BYTE PTR [rcx]
  4231db:	test   al,al
  4231dd:	jne    0x4231d0
  4231df:	repz ret 
  4231e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4231e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4231f0:	lea    r8,[rip+0xe4c9]        # 0x4316c0
  4231f7:	nop    WORD PTR [rax+rax*1+0x0]
  423200:	movzx  eax,BYTE PTR [rdx]
  423203:	add    rcx,0x1
  423207:	add    rdx,0x1
  42320b:	movzx  eax,BYTE PTR [r8+rax*1]
  423210:	mov    BYTE PTR [rcx-0x1],al
  423213:	cmp    BYTE PTR [rdx-0x1],0x0
  423217:	jne    0x423200
  423219:	ret    
  42321a:	nop    WORD PTR [rax+rax*1+0x0]
  423220:	push   rbp
  423221:	push   rdi
  423222:	push   rsi
  423223:	push   rbx
  423224:	sub    rsp,0x68
  423228:	xor    eax,eax
  42322a:	lea    rdi,[r9+0x8]
  42322e:	mov    QWORD PTR [r9],0x0
  423235:	mov    QWORD PTR [r9+0x28],0x0
  42323d:	mov    rbx,r9
  423240:	mov    rbp,rcx
  423243:	and    rdi,0xfffffffffffffff8
  423247:	sub    r9,rdi
  42324a:	add    r9d,0x30
  42324e:	shr    r9d,0x3
  423252:	mov    ecx,r9d
  423255:	rep stos QWORD PTR es:[rdi],rax
  423258:	mov    DWORD PTR [rbx+0x24],edx
  42325b:	and    edx,0x2
  42325e:	mov    DWORD PTR [rbx+0x18],0xffffffff
  423265:	mov    DWORD PTR [rbx+0x28],r8d
  423269:	mov    ax,0x8000
  42326d:	je     0x423295
  42326f:	mov    eax,r8d
  423272:	and    eax,0x3
  423275:	cmp    eax,0x1
  423278:	sete   dl
  42327b:	movzx  eax,dl
  42327e:	movzx  edx,dl
  423281:	add    edx,edx
  423283:	and    r8d,0x1
  423287:	lea    eax,[rax+rax*1+0x8000]
  42328e:	jne    0x423295
  423290:	mov    eax,edx
  423292:	or     ah,0x84
  423295:	mov    edx,eax
  423297:	mov    rcx,rbp
  42329a:	call   0x42dd88
  42329f:	test   eax,eax
  4232a1:	mov    DWORD PTR [rbx+0x18],eax
  4232a4:	js     0x423400
  4232aa:	lea    rdx,[rsp+0x20]
  4232af:	mov    ecx,eax
  4232b1:	call   QWORD PTR [rip+0x255a1]        # 0x448858
  4232b7:	test   eax,eax
  4232b9:	jne    0x4233e0
  4232bf:	movzx  eax,WORD PTR [rsp+0x26]
  4232c4:	and    ax,0xf000
  4232c8:	cmp    ax,0x8000
  4232cc:	je     0x423300
  4232ce:	call   QWORD PTR [rip+0x2555c]        # 0x448830
  4232d4:	mov    DWORD PTR [rax],0x16
  4232da:	mov    ecx,DWORD PTR [rbx+0x18]
  4232dd:	mov    DWORD PTR [rbx+0x20],0x16
  4232e4:	call   0x42dd78
  4232e9:	mov    edx,DWORD PTR [rbx+0x20]
  4232ec:	test   edx,edx
  4232ee:	mov    rax,0xffffffffffffffff
  4232f5:	je     0x423320
  4232f7:	add    rsp,0x68
  4232fb:	pop    rbx
  4232fc:	pop    rsi
  4232fd:	pop    rdi
  4232fe:	pop    rbp
  4232ff:	ret    
  423300:	cmp    DWORD PTR [rbx+0x18],0xffffffff
  423304:	mov    rax,QWORD PTR [rsp+0x38]
  423309:	mov    QWORD PTR [rbx+0x8],rax
  42330d:	jne    0x4232e9
  42330f:	call   QWORD PTR [rip+0x2551b]        # 0x448830
  423315:	mov    edx,DWORD PTR [rax]
  423317:	mov    DWORD PTR [rbx+0x20],edx
  42331a:	jmp    0x4232ec
  42331c:	nop    DWORD PTR [rax+0x0]
  423320:	mov    rax,QWORD PTR [rbx+0x8]
  423324:	lea    rcx,[rax+0x1]
  423328:	call   0x41b230
  42332d:	test   rax,rax
  423330:	mov    rdi,rax
  423333:	mov    QWORD PTR [rbx],rax
  423336:	je     0x423440
  42333c:	mov    rsi,QWORD PTR [rbx+0x8]
  423340:	test   rsi,rsi
  423343:	jne    0x42335f
  423345:	jmp    0x423420
  42334a:	nop    WORD PTR [rax+rax*1+0x0]
  423350:	movsxd r10,eax
  423353:	add    rdi,r10
  423356:	sub    rsi,r10
  423359:	je     0x423420
  42335f:	mov    ecx,DWORD PTR [rbx+0x18]
  423362:	mov    r8d,esi
  423365:	mov    rdx,rdi
  423368:	call   0x42dd90
  42336d:	test   eax,eax
  42336f:	jg     0x423350
  423371:	mov    rsi,QWORD PTR [rip+0x254b8]        # 0x448830
  423378:	call   rsi
  42337a:	mov    eax,DWORD PTR [rax]
  42337c:	lea    rdx,[rip+0x15b65]        # 0x438ee8
  423383:	lea    rcx,[rip+0x15b63]        # 0x438eed
  42338a:	mov    r8,rbp
  42338d:	mov    DWORD PTR [rbx+0x20],eax
  423390:	call   0x419d40
  423395:	mov    rcx,QWORD PTR [rbx]
  423398:	call   0x42df08
  42339d:	mov    eax,DWORD PTR [rbx+0x20]
  4233a0:	test   eax,eax
  4233a2:	je     0x42342a
  4233a8:	mov    ecx,DWORD PTR [rbx+0x18]
  4233ab:	cmp    ecx,0xffffffff
  4233ae:	je     0x4233bc
  4233b0:	call   0x42dd78
  4233b5:	mov    DWORD PTR [rbx+0x18],0xffffffff
  4233bc:	call   rsi
  4233be:	mov    edx,DWORD PTR [rbx+0x20]
  4233c1:	mov    DWORD PTR [rax],edx
  4233c3:	mov    rax,0xffffffffffffffff
  4233ca:	mov    QWORD PTR [rbx],0xffffffffffffffff
  4233d1:	add    rsp,0x68
  4233d5:	pop    rbx
  4233d6:	pop    rsi
  4233d7:	pop    rdi
  4233d8:	pop    rbp
  4233d9:	ret    
  4233da:	nop    WORD PTR [rax+rax*1+0x0]
  4233e0:	call   QWORD PTR [rip+0x2544a]        # 0x448830
  4233e6:	mov    eax,DWORD PTR [rax]
  4233e8:	mov    ecx,DWORD PTR [rbx+0x18]
  4233eb:	mov    DWORD PTR [rbx+0x20],eax
  4233ee:	call   0x42dd78
  4233f3:	jmp    0x4232e9
  4233f8:	nop    DWORD PTR [rax+rax*1+0x0]
  423400:	call   QWORD PTR [rip+0x2542a]        # 0x448830
  423406:	mov    edx,DWORD PTR [rax]
  423408:	mov    DWORD PTR [rbx+0x18],0xffffffff
  42340f:	mov    DWORD PTR [rbx+0x20],edx
  423412:	jmp    0x4232ec
  423417:	nop    WORD PTR [rax+rax*1+0x0]
  423420:	mov    BYTE PTR [rdi],0x0
  423423:	mov    DWORD PTR [rbx+0x20],0x0
  42342a:	mov    rax,QWORD PTR [rbx]
  42342d:	add    rsp,0x68
  423431:	pop    rbx
  423432:	pop    rsi
  423433:	pop    rdi
  423434:	pop    rbp
  423435:	ret    
  423436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423440:	mov    DWORD PTR [rbx+0x20],0xc
  423447:	mov    rsi,QWORD PTR [rip+0x253e2]        # 0x448830
  42344e:	jmp    0x4233a8
  423453:	nop    DWORD PTR [rax]
  423456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423460:	push   rsi
  423461:	push   rbx
  423462:	sub    rsp,0x28
  423466:	mov    rsi,QWORD PTR [rip+0x253c3]        # 0x448830
  42346d:	mov    rbx,rcx
  423470:	call   rsi
  423472:	mov    DWORD PTR [rax],0x0
  423478:	test   BYTE PTR [rbx+0x24],0x2
  42347c:	je     0x423489
  42347e:	mov    eax,DWORD PTR [rbx+0x28]
  423481:	and    eax,0x3
  423484:	cmp    eax,0x1
  423487:	je     0x4234c0
  423489:	mov    rcx,QWORD PTR [rbx]
  42348c:	call   0x42df08
  423491:	call   rsi
  423493:	mov    ecx,DWORD PTR [rbx+0x18]
  423496:	mov    eax,DWORD PTR [rax]
  423498:	cmp    ecx,0xffffffff
  42349b:	mov    DWORD PTR [rbx+0x20],eax
  42349e:	je     0x4234af
  4234a0:	call   0x42dd78
  4234a5:	mov    eax,DWORD PTR [rbx+0x20]
  4234a8:	mov    DWORD PTR [rbx+0x18],0xffffffff
  4234af:	add    rsp,0x28
  4234b3:	pop    rbx
  4234b4:	pop    rsi
  4234b5:	ret    
  4234b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4234c0:	mov    ecx,DWORD PTR [rbx+0x18]
  4234c3:	xor    r8d,r8d
  4234c6:	xor    edx,edx
  4234c8:	call   0x4292d0
  4234cd:	test   rax,rax
  4234d0:	js     0x423489
  4234d2:	mov    ecx,DWORD PTR [rbx+0x18]
  4234d5:	mov    r8d,DWORD PTR [rbx+0x8]
  4234d9:	mov    rdx,QWORD PTR [rbx]
  4234dc:	call   0x42ddb0
  4234e1:	jmp    0x423489
  4234e3:	nop    DWORD PTR [rax]
  4234e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4234f0:	push   r15
  4234f2:	push   r14
  4234f4:	push   r13
  4234f6:	push   r12
  4234f8:	push   rbp
  4234f9:	push   rdi
  4234fa:	push   rsi
  4234fb:	push   rbx
  4234fc:	sub    rsp,0x158
  423503:	mov    r13,rcx
  423506:	mov    r14d,r8d
  423509:	mov    rcx,rdx
  42350c:	mov    eax,DWORD PTR [r13+0x10]
  423510:	mov    r8d,0x2
  423516:	mov    edx,0x3
  42351b:	mov    QWORD PTR [rsp+0xa0],0x0
  423527:	mov    QWORD PTR [rsp+0xa8],0x0
  423533:	mov    DWORD PTR [rsp+0xb0],0x2
  42353e:	mov    DWORD PTR [rsp+0xb4],0x0
  423549:	mov    DWORD PTR [rsp+0x34],eax
  42354d:	lea    rax,[rsp+0xe0]
  423555:	mov    r9,rax
  423558:	mov    QWORD PTR [rsp+0x38],rax
  42355d:	call   0x423220
  423562:	cmp    rax,0xffffffffffffffff
  423566:	mov    rbx,rax
  423569:	je     0x4236d6
  42356f:	mov    eax,DWORD PTR [r13+0x10]
  423573:	mov    esi,0x2
  423578:	mov    edx,eax
  42357a:	and    edx,0xfffffffb
  42357d:	test   r14d,r14d
  423580:	mov    DWORD PTR [r13+0x10],edx
  423584:	je     0x423a69
  42358a:	test   eax,0x80000
  42358f:	mov    eax,0x1
  423594:	cmove  esi,eax
  423597:	lea    rax,[rsp+0x110]
  42359f:	mov    QWORD PTR [rsp+0x48],rax
  4235a4:	lea    rax,[rsp+0x111]
  4235ac:	mov    QWORD PTR [rsp+0x50],rax
  4235b1:	lea    rax,[rsp+0xa0]
  4235b9:	mov    QWORD PTR [rsp+0x40],rax
  4235be:	lea    rax,[rsp+0x90]
  4235c6:	mov    QWORD PTR [rsp+0x58],rax
  4235cb:	lea    rax,[rsp+0xc0]
  4235d3:	mov    QWORD PTR [rsp+0x60],rax
  4235d8:	lea    rax,[rsp+0x9c]
  4235e0:	mov    QWORD PTR [rsp+0x68],rax
  4235e5:	mov    rax,QWORD PTR [rip+0x20ab4]        # 0x4440a0
  4235ec:	mov    DWORD PTR [rsp+0xb0],esi
  4235f3:	test   rax,rax
  4235f6:	jne    0x423604
  4235f8:	jmp    0x423aad
  4235fd:	nop    DWORD PTR [rax]
  423600:	add    rbx,0x1
  423604:	movzx  ecx,BYTE PTR [rbx]
  423607:	cmp    BYTE PTR [rax+rcx*1],0x0
  42360b:	mov    rdx,rcx
  42360e:	jne    0x423600
  423610:	cmp    cl,0x7f
  423613:	ja     0x4236f0
  423619:	lea    rdi,[rip+0x19320]        # 0x43c940
  423620:	movzx  eax,cl
  423623:	test   DWORD PTR [rdi+rax*4],0x180040
  42362a:	je     0x4236f0
  423630:	lea    rbp,[rbx+0x1]
  423634:	mov    edx,0xa
  423639:	mov    rcx,rbp
  42363c:	call   0x42de58
  423641:	test   rax,rax
  423644:	mov    r12,rax
  423647:	je     0x423abc
  42364d:	mov    rcx,QWORD PTR [rip+0x20acc]        # 0x444120
  423654:	test   rcx,rcx
  423657:	je     0x423cc6
  42365d:	movzx  eax,BYTE PTR [rbx+0x1]
  423661:	cmp    BYTE PTR [rcx+rax*1],0x0
  423665:	je     0x42367e
  423667:	nop    WORD PTR [rax+rax*1+0x0]
  423670:	add    rbp,0x1
  423674:	movzx  eax,BYTE PTR [rbp+0x0]
  423678:	cmp    BYTE PTR [rcx+rax*1],0x0
  42367c:	jne    0x423670
  42367e:	mov    r8,QWORD PTR [rip+0x20a1b]        # 0x4440a0
  423685:	test   r8,r8
  423688:	jne    0x423694
  42368a:	jmp    0x423cd5
  42368f:	nop
  423690:	add    rbp,0x1
  423694:	movzx  eax,BYTE PTR [rbp+0x0]
  423698:	cmp    BYTE PTR [r8+rax*1],0x0
  42369d:	jne    0x423690
  42369f:	cmp    rbp,r12
  4236a2:	ja     0x423a3c
  4236a8:	cmp    al,0x3a
  4236aa:	je     0x423a09
  4236b0:	cmp    al,0x3d
  4236b2:	je     0x423a09
  4236b8:	movzx  eax,BYTE PTR [rbp-0x1]
  4236bc:	cmp    al,0x7f
  4236be:	jbe    0x423a96
  4236c4:	mov    rcx,QWORD PTR [rsp+0x38]
  4236c9:	call   0x423460
  4236ce:	mov    eax,DWORD PTR [rsp+0x34]
  4236d2:	mov    DWORD PTR [r13+0x10],eax
  4236d6:	add    rsp,0x158
  4236dd:	pop    rbx
  4236de:	pop    rsi
  4236df:	pop    rdi
  4236e0:	pop    rbp
  4236e1:	pop    r12
  4236e3:	pop    r13
  4236e5:	pop    r14
  4236e7:	pop    r15
  4236e9:	ret    
  4236ea:	nop    WORD PTR [rax+rax*1+0x0]
  4236f0:	cmp    dl,0x3c
  4236f3:	je     0x4237c0
  4236f9:	cmp    dl,0x5b
  4236fc:	je     0x423720
  4236fe:	cmp    dl,0x23
  423701:	jne    0x4236c4
  423703:	lea    rcx,[rbx+0x1]
  423707:	mov    edx,0xa
  42370c:	call   0x42de58
  423711:	mov    rbx,rax
  423714:	test   rbx,rbx
  423717:	jne    0x4235e5
  42371d:	jmp    0x4236c4
  42371f:	nop
  423720:	mov    rbp,QWORD PTR [r13+0x30]
  423724:	mov    rcx,rbp
  423727:	call   0x42de30
  42372c:	lea    rcx,[rbx+0x1]
  423730:	mov    r8,rax
  423733:	mov    rdx,rbp
  423736:	mov    rdi,rax
  423739:	call   0x42de28
  42373e:	test   eax,eax
  423740:	je     0x423a74
  423746:	cmp    rdi,0x10
  42374a:	ja     0x4236c4
  423750:	mov    rcx,QWORD PTR [rsp+0x50]
  423755:	mov    r8,rdi
  423758:	mov    rdx,rbp
  42375b:	mov    QWORD PTR [rsp+0x110],0x5b
  423767:	mov    QWORD PTR [rsp+0x118],0x0
  423773:	mov    QWORD PTR [rsp+0x120],0x0
  42377f:	call   0x42de98
  423784:	mov    rdx,QWORD PTR [rsp+0x48]
  423789:	mov    rcx,rbx
  42378c:	mov    BYTE PTR [rsp+rdi*1+0x111],0x5d
  423794:	mov    BYTE PTR [rsp+rdi*1+0x112],0x0
  42379c:	call   0x42de08
  4237a1:	test   rax,rax
  4237a4:	je     0x4236c4
  4237aa:	mov    edx,0xa
  4237af:	mov    rcx,rax
  4237b2:	call   0x42de58
  4237b7:	mov    rbx,rax
  4237ba:	jmp    0x423714
  4237bf:	nop
  4237c0:	movzx  eax,BYTE PTR [rbx+0x1]
  4237c4:	cmp    al,0x7f
  4237c6:	ja     0x4239d0
  4237cc:	lea    rdi,[rip+0x1916d]        # 0x43c940
  4237d3:	movzx  edx,al
  4237d6:	test   DWORD PTR [rdi+rdx*4],0x180040
  4237dd:	je     0x4239d0
  4237e3:	mov    eax,DWORD PTR [rip+0xe2e7]        # 0x431ad0
  4237e9:	mov    DWORD PTR [rsp+0x9c],eax
  4237f0:	lea    rax,[rbx+0x1]
  4237f4:	mov    QWORD PTR [rsp+0x70],rax
  4237f9:	mov    rax,QWORD PTR [rip+0x20920]        # 0x444120
  423800:	test   rax,rax
  423803:	je     0x423d99
  423809:	movzx  edx,BYTE PTR [rbx+0x1]
  42380d:	mov    r15,QWORD PTR [rsp+0x70]
  423812:	cmp    BYTE PTR [rax+rdx*1],0x0
  423816:	je     0x42382e
  423818:	nop    DWORD PTR [rax+rax*1+0x0]
  423820:	add    r15,0x1
  423824:	movzx  edx,BYTE PTR [r15]
  423828:	cmp    BYTE PTR [rax+rdx*1],0x0
  42382c:	jne    0x423820
  42382e:	mov    DWORD PTR [rsp+0xc0],0x1
  423839:	movzx  edx,BYTE PTR [r15]
  42383d:	cmp    dl,0x20
  423840:	je     0x423c36
  423846:	jle    0x423b56
  42384c:	cmp    dl,0x2f
  42384f:	je     0x423c8e
  423855:	cmp    dl,0x3e
  423858:	mov    rbp,r15
  42385b:	jne    0x423b5f
  423861:	mov    BYTE PTR [r15],0x0
  423865:	mov    rcx,QWORD PTR [rsp+0x70]
  42386a:	lea    r12,[rbp+0x1]
  42386e:	mov    eax,DWORD PTR [rsp+0x9c]
  423875:	mov    DWORD PTR [rsp+0x80],eax
  42387c:	call   0x42de30
  423881:	lea    rcx,[rax+0x4]
  423885:	mov    rbx,rax
  423888:	cmp    rcx,0x3f
  42388c:	ja     0x423ce7
  423892:	mov    rax,QWORD PTR [rsp+0x48]
  423897:	mov    rdx,QWORD PTR [rsp+0x70]
  42389c:	mov    r8,rbx
  42389f:	mov    BYTE PTR [rsp+0x110],0x3c
  4238a7:	mov    BYTE PTR [rsp+0x111],0x2f
  4238af:	lea    rcx,[rax+0x2]
  4238b3:	call   0x42de98
  4238b8:	lea    rcx,[rbx+0x3]
  4238bc:	mov    rdx,QWORD PTR [rsp+0x48]
  4238c1:	mov    BYTE PTR [rsp+rbx*1+0x112],0x3e
  4238c9:	mov    BYTE PTR [rsp+rbx*1+0x113],0x0
  4238d1:	mov    BYTE PTR [rbp+0x1],0x20
  4238d5:	mov    QWORD PTR [rsp+0x78],rcx
  4238da:	mov    rcx,r12
  4238dd:	call   0x42de08
  4238e2:	mov    rdx,rax
  4238e5:	test   rdx,rdx
  4238e8:	je     0x4236c4
  4238ee:	mov    rbx,QWORD PTR [rsp+0x78]
  4238f3:	add    rbx,rdx
  4238f6:	cmp    DWORD PTR [rsp+0x80],0x1
  4238fe:	je     0x423946
  423900:	mov    r8,QWORD PTR [rip+0x20799]        # 0x4440a0
  423907:	test   r8,r8
  42390a:	je     0x423eac
  423910:	cmp    r12,rdx
  423913:	jb     0x42393b
  423915:	mov    rcx,r12
  423918:	mov    QWORD PTR [rsp+0x78],r8
  42391d:	call   0x42de30
  423922:	lea    rdx,[r12+rax*1]
  423926:	mov    r8,QWORD PTR [rsp+0x78]
  42392b:	cmp    r12,rdx
  42392e:	jb     0x42393b
  423930:	jmp    0x423946
  423932:	sub    rdx,0x1
  423936:	cmp    r12,rdx
  423939:	jae    0x423946
  42393b:	movzx  eax,BYTE PTR [rdx-0x1]
  42393f:	cmp    BYTE PTR [r8+rax*1],0x0
  423944:	jne    0x423932
  423946:	test   rbx,rbx
  423949:	mov    BYTE PTR [rdx],0x0
  42394c:	je     0x4236c4
  423952:	mov    r8,r12
  423955:	mov    edx,0x20
  42395a:	mov    rcx,r15
  42395d:	sub    r8,r15
  423960:	call   0x42de88
  423965:	cmp    DWORD PTR [rsp+0xc0],0x1
  42396d:	mov    eax,DWORD PTR [rsp+0x9c]
  423974:	jne    0x423ca8
  42397a:	test   eax,eax
  42397c:	jne    0x423ca8
  423982:	mov    BYTE PTR [rsp+0x92],0x0
  42398a:	add    rbp,0x2
  42398e:	lea    rax,[rbp-0x1]
  423992:	lea    r9,[r12+0x1]
  423997:	mov    QWORD PTR [rsp+0x78],rax
  42399c:	movzx  eax,BYTE PTR [r12]
  4239a1:	cmp    eax,0x25
  4239a4:	je     0x423e50
  4239aa:	cmp    eax,0x26
  4239ad:	je     0x423dc4
  4239b3:	test   eax,eax
  4239b5:	je     0x423db7
  4239bb:	mov    r12,r9
  4239be:	mov    BYTE PTR [rbp-0x1],al
  4239c1:	add    rbp,0x1
  4239c5:	jmp    0x42398e
  4239c7:	nop    WORD PTR [rax+rax*1+0x0]
  4239d0:	cmp    al,0x2f
  4239d2:	je     0x423af3
  4239d8:	cmp    al,0x3f
  4239da:	je     0x423b7e
  4239e0:	cmp    al,0x21
  4239e2:	jne    0x4236c4
  4239e8:	lea    rdx,[rip+0x15248]        # 0x438c37
  4239ef:	mov    rcx,rbx
  4239f2:	call   0x42de08
  4239f7:	test   rax,rax
  4239fa:	je     0x4236c4
  423a00:	lea    rbx,[rax+0x3]
  423a04:	jmp    0x423714
  423a09:	mov    rax,QWORD PTR [rip+0x20690]        # 0x4440a0
  423a10:	lea    rdi,[rbp+0x1]
  423a14:	test   rax,rax
  423a17:	je     0x423da8
  423a1d:	movzx  edx,BYTE PTR [rbp+0x1]
  423a21:	cmp    BYTE PTR [rax+rdx*1],0x0
  423a25:	jne    0x423ad0
  423a2b:	cmp    r12,rdi
  423a2e:	jb     0x423a3c
  423a30:	cmp    BYTE PTR [r12-0x1],0x5c
  423a36:	je     0x423b13
  423a3c:	lea    rdi,[r12+0x1]
  423a41:	mov    BYTE PTR [r12],0x0
  423a46:	mov    rdx,QWORD PTR [rsp+0x40]
  423a4b:	mov    r8,rbx
  423a4e:	mov    DWORD PTR [rsp+0x20],0x1
  423a56:	mov    r9d,r14d
  423a59:	mov    rcx,r13
  423a5c:	mov    rbx,rdi
  423a5f:	call   0x4223f0
  423a64:	jmp    0x423714
  423a69:	mov    sil,0x4
  423a6c:	mov    r14b,0x1
  423a6f:	jmp    0x42358a
  423a74:	cmp    BYTE PTR [rbx+rdi*1+0x1],0x5d
  423a79:	jne    0x423746
  423a7f:	lea    rcx,[rbx+rdi*1+0x2]
  423a84:	mov    edx,0xa
  423a89:	call   0x42de58
  423a8e:	mov    rbx,rax
  423a91:	jmp    0x423714
  423a96:	test   DWORD PTR [rdi+rax*4],0xc01
  423a9d:	je     0x4236c4
  423aa3:	cmp    BYTE PTR [r12-0x1],0x5c
  423aa9:	jne    0x423a3c
  423aab:	jmp    0x423b13
  423aad:	mov    ecx,0xc
  423ab2:	call   0x41ad40
  423ab7:	jmp    0x423604
  423abc:	mov    rcx,rbp
  423abf:	call   0x42de30
  423ac4:	lea    rbx,[rbp+rax*1+0x0]
  423ac9:	jmp    0x423714
  423ace:	xchg   ax,ax
  423ad0:	add    rdi,0x1
  423ad4:	movzx  edx,BYTE PTR [rdi]
  423ad7:	cmp    BYTE PTR [rax+rdx*1],0x0
  423adb:	je     0x423a2b
  423ae1:	add    rdi,0x1
  423ae5:	movzx  edx,BYTE PTR [rdi]
  423ae8:	cmp    BYTE PTR [rax+rdx*1],0x0
  423aec:	jne    0x423ad0
  423aee:	jmp    0x423a2b
  423af3:	lea    rcx,[rbx+0x2]
  423af7:	mov    edx,0x3e
  423afc:	call   0x42de58
  423b01:	test   rax,rax
  423b04:	lea    rbx,[rax+0x1]
  423b08:	jne    0x423714
  423b0e:	jmp    0x4236c4
  423b13:	movzx  eax,BYTE PTR [r12]
  423b18:	lea    rdx,[r12-0x1]
  423b1d:	lea    rdi,[r12+0x1]
  423b22:	cmp    al,0xa
  423b24:	je     0x423b4e
  423b26:	cmp    al,0x5c
  423b28:	je     0x423c1b
  423b2e:	test   al,al
  423b30:	je     0x423c14
  423b36:	add    rdx,0x1
  423b3a:	mov    r12,rdi
  423b3d:	mov    BYTE PTR [rdx-0x1],al
  423b40:	movzx  eax,BYTE PTR [r12]
  423b45:	lea    rdi,[r12+0x1]
  423b4a:	cmp    al,0xa
  423b4c:	jne    0x423b26
  423b4e:	mov    BYTE PTR [rdx],0x0
  423b51:	jmp    0x423a46
  423b56:	cmp    dl,0x9
  423b59:	je     0x423c36
  423b5f:	mov    edx,0x3e
  423b64:	mov    rcx,r15
  423b67:	call   0x42de58
  423b6c:	test   rax,rax
  423b6f:	je     0x4236c4
  423b75:	lea    rbx,[rax+0x1]
  423b79:	jmp    0x423714
  423b7e:	mov    rdi,QWORD PTR [rip+0x2039b]        # 0x443f20
  423b85:	test   rdi,rdi
  423b88:	je     0x423d6b
  423b8e:	mov    rcx,rdi
  423b91:	call   0x42de30
  423b96:	mov    r12,rax
  423b99:	lea    r15,[rbx+0x2]
  423b9d:	mov    rdx,rdi
  423ba0:	xor    ebp,ebp
  423ba2:	mov    rdi,rbx
  423ba5:	mov    r8,r12
  423ba8:	mov    rcx,r15
  423bab:	mov    ebx,ebp
  423bad:	call   0x42de28
  423bb2:	test   eax,eax
  423bb4:	jne    0x423bd2
  423bb6:	lea    rdx,[rdi+r12*1+0x2]
  423bbb:	movzx  eax,BYTE PTR [rdx]
  423bbe:	cmp    al,0x7f
  423bc0:	ja     0x423bfb
  423bc2:	lea    rcx,[rip+0x18d77]        # 0x43c940
  423bc9:	test   DWORD PTR [rcx+rax*4],0x3b0060
  423bd0:	je     0x423bfb
  423bd2:	cmp    rbp,0x1
  423bd6:	je     0x423b5f
  423bd8:	mov    rdx,QWORD PTR [rip+0x20349]        # 0x443f28
  423bdf:	mov    ebp,0x1
  423be4:	mov    rcx,rdx
  423be7:	mov    QWORD PTR [rsp+0x70],rdx
  423bec:	call   0x42de30
  423bf1:	mov    rdx,QWORD PTR [rsp+0x70]
  423bf6:	mov    r12,rax
  423bf9:	jmp    0x423ba5
  423bfb:	lea    rax,[rip+0x153fe]        # 0x439000
  423c02:	movsxd r12,ebx
  423c05:	mov    rcx,r13
  423c08:	call   QWORD PTR [rax+r12*8]
  423c0c:	mov    rbx,rax
  423c0f:	jmp    0x423714
  423c14:	xor    edi,edi
  423c16:	jmp    0x423b4e
  423c1b:	cmp    BYTE PTR [r12+0x1],0xa
  423c21:	jne    0x423b36
  423c27:	lea    rdi,[r12+0x2]
  423c2c:	mov    eax,0xa
  423c31:	jmp    0x423b36
  423c36:	mov    rax,QWORD PTR [rip+0x20463]        # 0x4440a0
  423c3d:	test   rax,rax
  423c40:	je     0x423e99
  423c46:	cmp    BYTE PTR [rax+rdx*1],0x0
  423c4a:	mov    rcx,r15
  423c4d:	je     0x423c5d
  423c4f:	nop
  423c50:	add    rcx,0x1
  423c54:	movzx  edx,BYTE PTR [rcx]
  423c57:	cmp    BYTE PTR [rax+rdx*1],0x0
  423c5b:	jne    0x423c50
  423c5d:	mov    r8,QWORD PTR [rsp+0x60]
  423c62:	mov    rdx,QWORD PTR [rsp+0x68]
  423c67:	call   0x41d210
  423c6c:	test   rax,rax
  423c6f:	mov    rbp,rax
  423c72:	je     0x4236c4
  423c78:	movzx  eax,BYTE PTR [rax]
  423c7b:	cmp    al,0x3e
  423c7d:	je     0x423861
  423c83:	cmp    al,0x2f
  423c85:	jne    0x4236c4
  423c8b:	mov    r15,rbp
  423c8e:	cmp    BYTE PTR [r15+0x1],0x3e
  423c93:	jne    0x4236c4
  423c99:	lea    rbx,[r15+0x2]
  423c9d:	mov    BYTE PTR [r15],0x0
  423ca1:	mov    eax,DWORD PTR [rsp+0x9c]
  423ca8:	mov    r8,QWORD PTR [rsp+0x70]
  423cad:	mov    rdx,QWORD PTR [rsp+0x40]
  423cb2:	mov    r9d,r14d
  423cb5:	mov    DWORD PTR [rsp+0x20],eax
  423cb9:	mov    rcx,r13
  423cbc:	call   0x4223f0
  423cc1:	jmp    0x423714
  423cc6:	mov    cl,0x1c
  423cc8:	call   0x41ad40
  423ccd:	mov    rcx,rax
  423cd0:	jmp    0x42365d
  423cd5:	mov    ecx,0xc
  423cda:	call   0x41ad40
  423cdf:	mov    r8,rax
  423ce2:	jmp    0x423694
  423ce7:	call   0x41b230
  423cec:	mov    rdx,QWORD PTR [rsp+0x70]
  423cf1:	lea    rcx,[rax+0x2]
  423cf5:	mov    r8,rbx
  423cf8:	mov    BYTE PTR [rax],0x3c
  423cfb:	mov    BYTE PTR [rax+0x1],0x2f
  423cff:	mov    QWORD PTR [rsp+0x88],rax
  423d07:	call   0x42de98
  423d0c:	mov    r11,QWORD PTR [rsp+0x88]
  423d14:	lea    rax,[rbx+0x3]
  423d18:	mov    rcx,r12
  423d1b:	mov    QWORD PTR [rsp+0x78],rax
  423d20:	mov    BYTE PTR [r11+rbx*1+0x2],0x3e
  423d26:	mov    BYTE PTR [r11+rbx*1+0x3],0x0
  423d2c:	mov    rdx,r11
  423d2f:	mov    BYTE PTR [rbp+0x1],0x20
  423d33:	call   0x42de08
  423d38:	mov    r11,QWORD PTR [rsp+0x88]
  423d40:	cmp    r11,QWORD PTR [rsp+0x48]
  423d45:	mov    rdx,rax
  423d48:	je     0x4238e5
  423d4e:	mov    rcx,r11
  423d51:	mov    QWORD PTR [rsp+0x88],rax
  423d59:	call   0x42df08
  423d5e:	mov    rdx,QWORD PTR [rsp+0x88]
  423d66:	jmp    0x4238e5
  423d6b:	lea    rax,[rip+0x15fe7]        # 0x439d59
  423d72:	mov    r12d,0x7
  423d78:	lea    rdi,[rip+0x15fda]        # 0x439d59
  423d7f:	mov    QWORD PTR [rip+0x2019a],rax        # 0x443f20
  423d86:	lea    rax,[rip+0x15fbf]        # 0x439d4c
  423d8d:	mov    QWORD PTR [rip+0x20194],rax        # 0x443f28
  423d94:	jmp    0x423b99
  423d99:	mov    ecx,0x1c
  423d9e:	call   0x41ad40
  423da3:	jmp    0x423809
  423da8:	mov    ecx,0xc
  423dad:	call   0x41ad40
  423db2:	jmp    0x423a1d
  423db7:	mov    rax,QWORD PTR [rsp+0x78]
  423dbc:	mov    BYTE PTR [rax],0x0
  423dbf:	jmp    0x423ca1
  423dc4:	mov    QWORD PTR [rsp+0x110],r9
  423dcc:	movzx  eax,BYTE PTR [r12+0x1]
  423dd2:	cmp    al,0x23
  423dd4:	je     0x423f6a
  423dda:	movzx  edx,al
  423ddd:	cmp    edx,0x7f
  423de0:	ja     0x423ef7
  423de6:	test   DWORD PTR [rdi+rdx*4],0x30000
  423ded:	je     0x423ef7
  423df3:	mov    rcx,r9
  423df6:	cmp    al,0x58
  423df8:	je     0x423ee0
  423dfe:	cmp    al,0x78
  423e00:	je     0x423ee0
  423e06:	cmp    al,0x30
  423e08:	mov    r8d,0xa
  423e0e:	je     0x423ec8
  423e14:	mov    rdx,QWORD PTR [rsp+0x48]
  423e19:	call   0x42ddf8
  423e1e:	cmp    eax,0x7f
  423e21:	mov    r12,QWORD PTR [rsp+0x110]
  423e29:	ja     0x423db7
  423e2b:	cmp    BYTE PTR [r12],0x3b
  423e30:	jne    0x423db7
  423e32:	add    r12,0x1
  423e36:	test   eax,eax
  423e38:	mov    BYTE PTR [rbp-0x1],al
  423e3b:	jne    0x4239c1
  423e41:	jmp    0x423ca1
  423e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423e50:	movzx  edx,BYTE PTR [r12+0x1]
  423e56:	lea    r15,[r12+0x3]
  423e5b:	mov    BYTE PTR [rsp+0x90],dl
  423e62:	movzx  eax,BYTE PTR [r12+0x2]
  423e68:	test   dl,dl
  423e6a:	mov    BYTE PTR [rsp+0x91],al
  423e71:	je     0x423db7
  423e77:	test   al,al
  423e79:	je     0x423db7
  423e7f:	mov    rcx,QWORD PTR [rsp+0x58]
  423e84:	mov    r8d,0x10
  423e8a:	xor    edx,edx
  423e8c:	mov    r12,r15
  423e8f:	call   0x42ddf8
  423e94:	jmp    0x4239be
  423e99:	mov    ecx,0xc
  423e9e:	call   0x41ad40
  423ea3:	movzx  edx,BYTE PTR [r15]
  423ea7:	jmp    0x423c46
  423eac:	mov    ecx,0xc
  423eb1:	mov    QWORD PTR [rsp+0x78],rdx
  423eb6:	call   0x41ad40
  423ebb:	mov    rdx,QWORD PTR [rsp+0x78]
  423ec0:	mov    r8,rax
  423ec3:	jmp    0x423910
  423ec8:	cmp    BYTE PTR [rcx+0x1],0x30
  423ecc:	mov    r8d,0x10
  423ed2:	mov    eax,0xa
  423ed7:	cmovne r8d,eax
  423edb:	jmp    0x423e14
  423ee0:	add    rcx,0x1
  423ee4:	mov    r8d,0x10
  423eea:	mov    QWORD PTR [rsp+0x110],rcx
  423ef2:	jmp    0x423e14
  423ef7:	lea    r12,[rip+0x1518a]        # 0x439088
  423efe:	xor    r15d,r15d
  423f01:	jmp    0x423f15
  423f03:	add    r15d,0x1
  423f07:	add    r12,0x10
  423f0b:	cmp    r15d,0xc
  423f0f:	je     0x423db7
  423f15:	movzx  r10d,WORD PTR [r12]
  423f1a:	mov    rdx,QWORD PTR [r12-0x8]
  423f1f:	mov    rcx,r9
  423f22:	mov    QWORD PTR [rsp+0x80],r9
  423f2a:	mov    r8,r10
  423f2d:	mov    QWORD PTR [rsp+0x88],r10
  423f35:	call   0x42de28
  423f3a:	test   eax,eax
  423f3c:	mov    r9,QWORD PTR [rsp+0x80]
  423f44:	mov    r10,QWORD PTR [rsp+0x88]
  423f4c:	jne    0x423f03
  423f4e:	movsxd rax,r15d
  423f51:	lea    rcx,[rip+0x15128]        # 0x439080
  423f58:	lea    r12,[r9+r10*1]
  423f5c:	shl    rax,0x4
  423f60:	movsx  eax,WORD PTR [rcx+rax*1+0xa]
  423f65:	jmp    0x423e36
  423f6a:	lea    rcx,[r12+0x2]
  423f6f:	mov    QWORD PTR [rsp+0x110],rcx
  423f77:	movzx  eax,BYTE PTR [r12+0x2]
  423f7d:	jmp    0x423df6
  423f82:	nop    DWORD PTR [rax+0x0]
  423f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423f90:	push   r15
  423f92:	push   r14
  423f94:	push   r13
  423f96:	push   r12
  423f98:	push   rbp
  423f99:	push   rdi
  423f9a:	push   rsi
  423f9b:	push   rbx
  423f9c:	sub    rsp,0x188
  423fa3:	mov    rdx,QWORD PTR [rcx+0x58]
  423fa7:	test   rdx,rdx
  423faa:	je     0x424049
  423fb0:	mov    r15d,DWORD PTR [rcx+0x10]
  423fb4:	mov    eax,r15d
  423fb7:	and    eax,0xfffffffb
  423fba:	cmp    QWORD PTR [rdx+0x8],0x0
  423fbf:	mov    DWORD PTR [rcx+0x10],eax
  423fc2:	je     0x424153
  423fc8:	lea    rax,[rdx+0x10]
  423fcc:	xor    ebx,ebx
  423fce:	xchg   ax,ax
  423fd0:	add    rax,0x8
  423fd4:	add    ebx,0x1
  423fd7:	cmp    QWORD PTR [rax-0x8],0x0
  423fdc:	jne    0x423fd0
  423fde:	mov    rsi,rcx
  423fe1:	mov    ebp,0xffffffff
  423fe6:	lea    r12,[rsp+0x70]
  423feb:	lea    r14,[rsp+0x30]
  423ff0:	mov    r13,QWORD PTR [rip+0x24a89]        # 0x448a80
  423ff7:	jmp    0x42402e
  423ff9:	nop    DWORD PTR [rax+0x0]
  424000:	movsxd rax,ebx
  424003:	mov    edi,ebx
  424005:	shl    rax,0x3
  424009:	mov    r8,QWORD PTR [rdx+rax*1]
  42400d:	test   r8,r8
  424010:	je     0x424045
  424012:	mov    r9,QWORD PTR [rsi+0x20]
  424016:	mov    edx,0x105
  42401b:	mov    rcx,r12
  42401e:	lea    ebx,[rdi+rbp*1]
  424021:	call   0x41fdd0
  424026:	test   al,al
  424028:	jne    0x424060
  42402a:	mov    rdx,QWORD PTR [rsi+0x58]
  42402e:	cmp    ebx,0xffffffff
  424031:	jne    0x424000
  424033:	xor    eax,eax
  424035:	xor    edi,edi
  424037:	mov    ebp,0x1
  42403c:	mov    r8,QWORD PTR [rdx+rax*1]
  424040:	test   r8,r8
  424043:	jne    0x424012
  424045:	mov    DWORD PTR [rsi+0x10],r15d
  424049:	add    rsp,0x188
  424050:	pop    rbx
  424051:	pop    rsi
  424052:	pop    rdi
  424053:	pop    rbp
  424054:	pop    r12
  424056:	pop    r13
  424058:	pop    r14
  42405a:	pop    r15
  42405c:	ret    
  42405d:	nop    DWORD PTR [rax]
  424060:	mov    rdx,r14
  424063:	mov    rcx,r12
  424066:	call   r13
  424069:	test   eax,eax
  42406b:	jne    0x42402a
  42406d:	movzx  eax,WORD PTR [rsp+0x36]
  424072:	and    ax,0xf000
  424076:	cmp    ax,0x4000
  42407a:	jne    0x424108
  424080:	mov    r9,r12
  424083:	mov    edx,DWORD PTR [r9]
  424086:	add    r9,0x4
  42408a:	lea    eax,[rdx-0x1010101]
  424090:	not    edx
  424092:	and    eax,edx
  424094:	and    eax,0x80808080
  424099:	je     0x424083
  42409b:	mov    edx,eax
  42409d:	shr    edx,0x10
  4240a0:	test   eax,0x8080
  4240a5:	cmove  eax,edx
  4240a8:	lea    rdx,[r9+0x2]
  4240ac:	cmove  r9,rdx
  4240b0:	mov    rdx,QWORD PTR [rsi+0x38]
  4240b4:	add    al,al
  4240b6:	sbb    r9,0x3
  4240ba:	sub    r9,r12
  4240bd:	mov    rcx,rdx
  4240c0:	mov    QWORD PTR [rsp+0x28],r9
  4240c5:	mov    QWORD PTR [rsp+0x20],rdx
  4240ca:	call   0x42de30
  4240cf:	mov    r9,QWORD PTR [rsp+0x28]
  4240d4:	lea    r8,[rax+0x1]
  4240d8:	mov    rdx,QWORD PTR [rsp+0x20]
  4240dd:	lea    rax,[r9+r8*1+0x1]
  4240e2:	cmp    rax,0x104
  4240e8:	ja     0x42402a
  4240ee:	add    r9,r12
  4240f1:	cmp    BYTE PTR [r9-0x1],0x5c
  4240f6:	mov    rcx,r9
  4240f9:	je     0x424103
  4240fb:	add    rcx,0x1
  4240ff:	mov    BYTE PTR [r9],0x5c
  424103:	call   0x42de98
  424108:	mov    r8d,ebp
  42410b:	mov    rdx,r12
  42410e:	mov    rcx,rsi
  424111:	call   0x4234f0
  424116:	cmp    ebp,0xffffffff
  424119:	jne    0x42402a
  42411f:	movzx  eax,WORD PTR [rsi+0xaa]
  424126:	add    rax,0x1
  42412a:	lea    rdx,[rax+rax*2]
  42412e:	lea    rax,[rax+rdx*4]
  424132:	mov    rdx,QWORD PTR [rsi+0x78]
  424136:	lea    rax,[rdx+rax*8]
  42413a:	mov    eax,DWORD PTR [rax+0x10]
  42413d:	shr    eax,0x5
  424140:	and    eax,0x1
  424143:	mov    eax,0x1
  424148:	cmovne ebx,edi
  42414b:	cmovne ebp,eax
  42414e:	jmp    0x42402a
  424153:	xor    ebx,ebx
  424155:	jmp    0x423fde
  42415a:	nop    WORD PTR [rax+rax*1+0x0]
  424160:	push   rdi
  424161:	push   rsi
  424162:	push   rbx
  424163:	sub    rsp,0x20
  424167:	mov    rbx,rcx
  42416a:	mov    rdi,rdx
  42416d:	call   0x41c570
  424172:	test   eax,eax
  424174:	mov    esi,eax
  424176:	jne    0x424190
  424178:	mov    QWORD PTR [rbx+0x28],rdi
  42417c:	mov    rcx,rbx
  42417f:	call   0x423f90
  424184:	mov    eax,esi
  424186:	add    rsp,0x20
  42418a:	pop    rbx
  42418b:	pop    rsi
  42418c:	pop    rdi
  42418d:	ret    
  42418e:	xchg   ax,ax
  424190:	mov    esi,0xffffffff
  424195:	jmp    0x424184
  424197:	nop    WORD PTR [rax+rax*1+0x0]
  4241a0:	push   rsi
  4241a1:	push   rbx
  4241a2:	sub    rsp,0x68
  4241a6:	cmp    rcx,0xf
  4241aa:	jbe    0x4241b2
  4241ac:	test   BYTE PTR [rdx+0x10],0x28
  4241b0:	je     0x4241c0
  4241b2:	add    rsp,0x68
  4241b6:	pop    rbx
  4241b7:	pop    rsi
  4241b8:	ret    
  4241b9:	nop    DWORD PTR [rax+0x0]
  4241c0:	mov    rsi,rdx
  4241c3:	mov    rbx,rcx
  4241c6:	lea    rdx,[rsp+0x20]
  4241cb:	mov    rcx,QWORD PTR [rsi+0x18]
  4241cf:	call   QWORD PTR [rip+0x248ab]        # 0x448a80
  4241d5:	test   eax,eax
  4241d7:	je     0x4241f3
  4241d9:	test   BYTE PTR [rbx+0x10],0x4
  4241dd:	je     0x4241b2
  4241df:	mov    rcx,QWORD PTR [rbx+0x28]
  4241e3:	mov    r8,QWORD PTR [rsi+0x18]
  4241e7:	lea    rdx,[rip+0x14b62]        # 0x438d50
  4241ee:	call   0x419db0
  4241f3:	movzx  eax,WORD PTR [rsp+0x26]
  4241f8:	and    ax,0xf000
  4241fc:	cmp    ax,0x8000
  424200:	je     0x424220
  424202:	test   BYTE PTR [rbx+0x10],0x4
  424206:	je     0x4241b2
  424208:	call   QWORD PTR [rip+0x24622]        # 0x448830
  42420e:	mov    DWORD PTR [rax],0x16
  424214:	jmp    0x4241df
  424216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424220:	mov    rdx,QWORD PTR [rsi+0x18]
  424224:	xor    r8d,r8d
  424227:	mov    rcx,rbx
  42422a:	call   0x4234f0
  42422f:	jmp    0x4241b2
  424231:	nop    DWORD PTR [rax+rax*1+0x0]
  424236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424240:	push   r12
  424242:	push   rbp
  424243:	push   rdi
  424244:	push   rsi
  424245:	push   rbx
  424246:	sub    rsp,0x50
  42424a:	mov    r8d,0x2
  424250:	mov    edx,0x1
  424255:	mov    ebp,DWORD PTR [rip+0xd875]        # 0x431ad0
  42425b:	lea    rsi,[rsp+0x20]
  424260:	mov    rbx,rcx
  424263:	mov    r9,rsi
  424266:	call   0x423220
  42426b:	cmp    rax,0xffffffffffffffff
  42426f:	mov    rdi,rax
  424272:	je     0x4242e0
  424274:	mov    rcx,rbx
  424277:	mov    DWORD PTR [rip+0xd84f],0x0        # 0x431ad0
  424281:	call   0x42de30
  424286:	mov    rdx,rbx
  424289:	mov    r8,rax
  42428c:	mov    rcx,rdi
  42428f:	call   0x41e680
  424294:	test   rax,rax
  424297:	mov    rbx,rax
  42429a:	je     0x4242c0
  42429c:	mov    rcx,rsi
  42429f:	call   0x423460
  4242a4:	mov    DWORD PTR [rip+0xd826],ebp        # 0x431ad0
  4242aa:	mov    rax,rbx
  4242ad:	add    rsp,0x50
  4242b1:	pop    rbx
  4242b2:	pop    rsi
  4242b3:	pop    rdi
  4242b4:	pop    rbp
  4242b5:	pop    r12
  4242b7:	ret    
  4242b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4242c0:	mov    rdi,QWORD PTR [rip+0x24569]        # 0x448830
  4242c7:	call   rdi
  4242c9:	mov    r12d,DWORD PTR [rax]
  4242cc:	mov    rcx,rsi
  4242cf:	call   0x423460
  4242d4:	call   rdi
  4242d6:	mov    DWORD PTR [rax],r12d
  4242d9:	jmp    0x4242a4
  4242db:	nop    DWORD PTR [rax+rax*1+0x0]
  4242e0:	xor    eax,eax
  4242e2:	jmp    0x4242ad
  4242e4:	xchg   ax,ax
  4242e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4242f0:	push   r13
  4242f2:	push   r12
  4242f4:	push   rbp
  4242f5:	push   rdi
  4242f6:	push   rsi
  4242f7:	push   rbx
  4242f8:	sub    rsp,0x28
  4242fc:	cmp    rcx,0xf
  424300:	jbe    0x42430d
  424302:	test   rdx,rdx
  424305:	je     0x42430d
  424307:	test   BYTE PTR [rdx+0x10],0x8
  42430b:	je     0x424320
  42430d:	add    rsp,0x28
  424311:	pop    rbx
  424312:	pop    rsi
  424313:	pop    rdi
  424314:	pop    rbp
  424315:	pop    r12
  424317:	pop    r13
  424319:	ret    
  42431a:	nop    WORD PTR [rax+rax*1+0x0]
  424320:	mov    rsi,rcx
  424323:	mov    rcx,QWORD PTR [rdx+0x18]
  424327:	mov    rbx,rdx
  42432a:	call   0x41d6a0
  42432f:	cmp    rax,0xffffffffffffffff
  424333:	mov    rdi,rax
  424336:	je     0x424360
  424338:	test   BYTE PTR [rbx+0x10],0x40
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR [rbx+0x18],edi
  424341:	add    rsp,0x28
  424345:	pop    rbx
  424346:	pop    rsi
  424347:	pop    rdi
  424348:	pop    rbp
  424349:	pop    r12
  42434b:	pop    r13
  42434d:	ret    
  42434e:	xchg   ax,ax
  424350:	mov    rcx,QWORD PTR [rbx+0x18]
  424354:	call   0x42df08
  424359:	and    DWORD PTR [rbx+0x10],0xffffffbf
  42435d:	jmp    0x42433e
  42435f:	nop
  424360:	mov    r13,QWORD PTR [rbx+0x18]
  424364:	mov    r12,QWORD PTR [rsi+0x28]
  424368:	mov    rbp,QWORD PTR [rip+0xd919]        # 0x431c88
  42436f:	call   QWORD PTR [rip+0x2446b]        # 0x4487e0
  424375:	lea    rcx,[rax+0x60]
  424379:	mov    r9,r13
  42437c:	mov    r8,r12
  42437f:	mov    rdx,rbp
  424382:	call   0x4193f0
  424387:	test   BYTE PTR [rsi+0x10],0x4
  42438b:	je     0x424338
  42438d:	mov    edx,0x1
  424392:	mov    rcx,rsi
  424395:	call   QWORD PTR [rsi+0x98]
  42439b:	jmp    0x424338
  42439d:	nop    DWORD PTR [rax]
  4243a0:	push   rbx
  4243a1:	sub    rsp,0x20
  4243a5:	mov    rbx,rdx
  4243a8:	call   0x4242f0
  4243ad:	cmp    DWORD PTR [rbx+0x18],0xffffffff
  4243b1:	je     0x4243be
  4243b3:	xor    ecx,ecx
  4243b5:	call   QWORD PTR [rip+0x24505]        # 0x4488c0
  4243bb:	add    DWORD PTR [rbx+0x18],eax
  4243be:	add    rsp,0x20
  4243c2:	pop    rbx
  4243c3:	ret    
  4243c4:	xchg   ax,ax
  4243c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4243d0:	push   r12
  4243d2:	push   rbp
  4243d3:	push   rdi
  4243d4:	push   rsi
  4243d5:	push   rbx
  4243d6:	sub    rsp,0x30
  4243da:	test   rcx,rcx
  4243dd:	mov    rdi,rcx
  4243e0:	je     0x42477e
  4243e6:	mov    rax,QWORD PTR [rip+0x1fcb3]        # 0x4440a0
  4243ed:	test   rax,rax
  4243f0:	je     0x4247a6
  4243f6:	movzx  ecx,BYTE PTR [rdi]
  4243f9:	mov    rbp,rdi
  4243fc:	cmp    BYTE PTR [rax+rcx*1],0x0
  424400:	mov    rdx,rcx
  424403:	je     0x424416
  424405:	add    rbp,0x1
  424409:	movzx  ecx,BYTE PTR [rbp+0x0]
  42440d:	cmp    BYTE PTR [rax+rcx*1],0x0
  424411:	mov    rdx,rcx
  424414:	jne    0x424405
  424416:	test   dl,dl
  424418:	je     0x42477e
  42441e:	mov    rsi,rbp
  424421:	mov    r12d,0x2
  424427:	nop    WORD PTR [rax+rax*1+0x0]
  424430:	mov    rax,QWORD PTR [rip+0x1fc69]        # 0x4440a0
  424437:	add    r12d,0x1
  42443b:	lea    rbx,[rsi+0x1]
  42443f:	test   rax,rax
  424442:	je     0x4246e7
  424448:	movzx  edx,BYTE PTR [rsi+0x1]
  42444c:	test   dl,dl
  42444e:	je     0x424758
  424454:	cmp    BYTE PTR [rax+rdx*1],0x0
  424458:	mov    rcx,rax
  42445b:	je     0x424466
  42445d:	jmp    0x42447d
  42445f:	nop
  424460:	cmp    BYTE PTR [rax+rdx*1],0x0
  424464:	jne    0x424471
  424466:	add    rbx,0x1
  42446a:	movzx  edx,BYTE PTR [rbx]
  42446d:	test   dl,dl
  42446f:	jne    0x424460
  424471:	test   rcx,rcx
  424474:	je     0x424710
  42447a:	mov    rax,rcx
  42447d:	movzx  edx,BYTE PTR [rbx]
  424480:	movzx  ecx,dl
  424483:	cmp    BYTE PTR [rax+rcx*1],0x0
  424487:	je     0x4246d7
  42448d:	mov    rsi,rbx
  424490:	add    rsi,0x1
  424494:	movzx  ecx,BYTE PTR [rsi]
  424497:	cmp    BYTE PTR [rax+rcx*1],0x0
  42449b:	mov    rdx,rcx
  42449e:	jne    0x424490
  4244a0:	test   dl,dl
  4244a2:	jne    0x424430
  4244a4:	sub    rsi,rbp
  4244a7:	movsxd r12,r12d
  4244aa:	lea    rcx,[rsi+r12*8+0x10]
  4244af:	call   0x41b230
  4244b4:	test   rax,rax
  4244b7:	mov    rbp,rax
  4244ba:	je     0x4247b5
  4244c0:	lea    rbx,[rax+r12*8]
  4244c4:	lea    rsi,[rsp+0x2f]
  4244c9:	mov    QWORD PTR [rax+0x8],rbx
  4244cd:	xor    eax,eax
  4244cf:	nop
  4244d0:	lea    edx,[rax+0x1]
  4244d3:	mov    DWORD PTR [rbp+0x0],edx
  4244d6:	mov    QWORD PTR [rbp+rax*8+0x8],rbx
  4244db:	movzx  r8d,BYTE PTR [rdi]
  4244df:	cmp    r8b,0x7f
  4244e3:	ja     0x4244fd
  4244e5:	lea    rdx,[rip+0x18454]        # 0x43c940
  4244ec:	movzx  eax,r8b
  4244f0:	test   DWORD PTR [rdx+rax*4],0xc01
  4244f7:	jne    0x42459d
  4244fd:	cmp    r8b,0x22
  424501:	je     0x4245f0
  424507:	cmp    r8b,0x27
  42450b:	je     0x424530
  42450d:	test   r8b,r8b
  424510:	je     0x4245d0
  424516:	mov    BYTE PTR [rbx],r8b
  424519:	movzx  r8d,BYTE PTR [rdi+0x1]
  42451e:	add    rbx,0x1
  424522:	add    rdi,0x1
  424526:	cmp    r8b,0x7f
  42452a:	ja     0x4244fd
  42452c:	jmp    0x4244e5
  42452e:	xchg   ax,ax
  424530:	movzx  r8d,BYTE PTR [rdi+0x1]
  424535:	lea    rax,[rdi+0x1]
  424539:	cmp    r8b,0x27
  42453d:	lea    rdi,[rax+0x1]
  424541:	je     0x42456e
  424543:	cmp    r8b,0x5c
  424547:	je     0x424670
  42454d:	test   r8b,r8b
  424550:	je     0x424720
  424556:	mov    BYTE PTR [rbx],r8b
  424559:	movzx  r8d,BYTE PTR [rdi]
  42455d:	mov    rax,rdi
  424560:	add    rbx,0x1
  424564:	lea    rdi,[rax+0x1]
  424568:	cmp    r8b,0x27
  42456c:	jne    0x424543
  42456e:	test   rdi,rdi
  424571:	je     0x424720
  424577:	movzx  r8d,BYTE PTR [rdi]
  42457b:	cmp    r8b,0x7f
  42457f:	ja     0x4244df
  424585:	lea    rdx,[rip+0x183b4]        # 0x43c940
  42458c:	movzx  eax,r8b
  424590:	test   DWORD PTR [rdx+rax*4],0xc01
  424597:	je     0x4244df
  42459d:	mov    rax,QWORD PTR [rip+0x1fafc]        # 0x4440a0
  4245a4:	lea    r12,[rdi+0x1]
  4245a8:	test   rax,rax
  4245ab:	je     0x424797
  4245b1:	movzx  edx,BYTE PTR [rdi+0x1]
  4245b5:	mov    rdi,r12
  4245b8:	cmp    BYTE PTR [rax+rdx*1],0x0
  4245bc:	je     0x4245d0
  4245be:	xchg   ax,ax
  4245c0:	add    rdi,0x1
  4245c4:	movzx  edx,BYTE PTR [rdi]
  4245c7:	cmp    BYTE PTR [rax+rdx*1],0x0
  4245cb:	jne    0x4245c0
  4245cd:	nop    DWORD PTR [rax]
  4245d0:	mov    BYTE PTR [rbx],0x0
  4245d3:	cmp    BYTE PTR [rdi],0x0
  4245d6:	lea    rdx,[rbx+0x1]
  4245da:	mov    eax,DWORD PTR [rbp+0x0]
  4245dd:	je     0x424741
  4245e3:	mov    rbx,rdx
  4245e6:	jmp    0x4244d0
  4245eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4245f0:	add    rdi,0x1
  4245f4:	movzx  r8d,BYTE PTR [rdi]
  4245f8:	lea    r12,[rdi+0x1]
  4245fc:	cmp    r8b,0x22
  424600:	mov    BYTE PTR [rsp+0x2f],r8b
  424605:	je     0x424622
  424607:	cmp    r8b,0x5c
  42460b:	je     0x424642
  42460d:	test   r8b,r8b
  424610:	je     0x424720
  424616:	mov    BYTE PTR [rbx],r8b
  424619:	mov    rdi,r12
  42461c:	add    rbx,0x1
  424620:	jmp    0x4245f4
  424622:	test   r12,r12
  424625:	mov    rdi,r12
  424628:	je     0x424720
  42462e:	movzx  r8d,BYTE PTR [r12]
  424633:	cmp    r8b,0x7f
  424637:	ja     0x4244df
  42463d:	jmp    0x424585
  424642:	mov    r8d,0x7f
  424648:	mov    rcx,r12
  42464b:	mov    rdx,rsi
  42464e:	call   0x41e250
  424653:	movzx  r8d,BYTE PTR [rsp+0x2f]
  424659:	mov    eax,eax
  42465b:	add    r12,rax
  42465e:	mov    rdi,r12
  424661:	cmp    r8b,0x7f
  424665:	jne    0x424616
  424667:	jmp    0x4245f4
  424669:	nop    DWORD PTR [rax+0x0]
  424670:	movzx  edx,BYTE PTR [rax+0x1]
  424674:	cmp    dl,0xd
  424677:	je     0x4246b7
  424679:	ja     0x4246a0
  42467b:	test   dl,dl
  42467d:	je     0x424720
  424683:	cmp    dl,0xa
  424686:	jne    0x424556
  42468c:	movzx  r8d,BYTE PTR [rax+0x2]
  424691:	add    rax,0x2
  424695:	jmp    0x424539
  42469a:	nop    WORD PTR [rax+rax*1+0x0]
  4246a0:	cmp    dl,0x27
  4246a3:	je     0x4246cf
  4246a5:	cmp    dl,0x5c
  4246a8:	jne    0x424556
  4246ae:	lea    rdi,[rax+0x2]
  4246b2:	jmp    0x424556
  4246b7:	movzx  r8d,BYTE PTR [rax+0x2]
  4246bc:	cmp    r8b,0xa
  4246c0:	je     0x424770
  4246c6:	add    rax,0x2
  4246ca:	jmp    0x424539
  4246cf:	mov    r8d,0x27
  4246d5:	jmp    0x4246ae
  4246d7:	test   dl,dl
  4246d9:	mov    rsi,rbx
  4246dc:	jne    0x424430
  4246e2:	jmp    0x4244a4
  4246e7:	mov    ecx,0xc
  4246ec:	call   0x41ad40
  4246f1:	movzx  edx,BYTE PTR [rsi+0x1]
  4246f5:	mov    rcx,QWORD PTR [rip+0x1f9a4]        # 0x4440a0
  4246fc:	test   dl,dl
  4246fe:	jne    0x424460
  424704:	jmp    0x424471
  424709:	nop    DWORD PTR [rax+0x0]
  424710:	mov    ecx,0xc
  424715:	call   0x41ad40
  42471a:	jmp    0x42447d
  42471f:	nop
  424720:	mov    rcx,rbp
  424723:	call   0x42df08
  424728:	call   QWORD PTR [rip+0x24102]        # 0x448830
  42472e:	mov    DWORD PTR [rax],0x16
  424734:	xor    eax,eax
  424736:	add    rsp,0x30
  42473a:	pop    rbx
  42473b:	pop    rsi
  42473c:	pop    rdi
  42473d:	pop    rbp
  42473e:	pop    r12
  424740:	ret    
  424741:	mov    QWORD PTR [rbp+rax*8+0x8],0x0
  42474a:	mov    rax,rbp
  42474d:	add    rsp,0x30
  424751:	pop    rbx
  424752:	pop    rsi
  424753:	pop    rdi
  424754:	pop    rbp
  424755:	pop    r12
  424757:	ret    
  424758:	cmp    BYTE PTR [rax],0x0
  42475b:	jne    0x42448d
  424761:	mov    rsi,rbx
  424764:	jmp    0x4244a4
  424769:	nop    DWORD PTR [rax+0x0]
  424770:	movzx  r8d,BYTE PTR [rax+0x3]
  424775:	add    rax,0x3
  424779:	jmp    0x424539
  42477e:	call   QWORD PTR [rip+0x240ac]        # 0x448830
  424784:	mov    DWORD PTR [rax],0x2
  42478a:	xor    eax,eax
  42478c:	add    rsp,0x30
  424790:	pop    rbx
  424791:	pop    rsi
  424792:	pop    rdi
  424793:	pop    rbp
  424794:	pop    r12
  424796:	ret    
  424797:	mov    ecx,0xc
  42479c:	call   0x41ad40
  4247a1:	jmp    0x4245b1
  4247a6:	mov    ecx,0xc
  4247ab:	call   0x41ad40
  4247b0:	jmp    0x4243f6
  4247b5:	call   QWORD PTR [rip+0x24075]        # 0x448830
  4247bb:	mov    DWORD PTR [rax],0xc
  4247c1:	xor    eax,eax
  4247c3:	jmp    0x42478c
  4247c5:	nop
  4247c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4247d0:	push   r15
  4247d2:	push   r14
  4247d4:	push   r13
  4247d6:	push   r12
  4247d8:	push   rbp
  4247d9:	push   rdi
  4247da:	push   rsi
  4247db:	push   rbx
  4247dc:	sub    rsp,0xd8
  4247e3:	test   BYTE PTR [rcx+0x11],0x1
  4247e7:	jne    0x424800
  4247e9:	add    rsp,0xd8
  4247f0:	pop    rbx
  4247f1:	pop    rsi
  4247f2:	pop    rdi
  4247f3:	pop    rbp
  4247f4:	pop    r12
  4247f6:	pop    r13
  4247f8:	pop    r14
  4247fa:	pop    r15
  4247fc:	ret    
  4247fd:	nop    DWORD PTR [rax]
  424800:	mov    rdi,rcx
  424803:	mov    rcx,QWORD PTR [rcx+0x30]
  424807:	mov    ebp,edx
  424809:	call   0x42ded0
  42480e:	test   rax,rax
  424811:	je     0x424880
  424813:	mov    rcx,rax
  424816:	call   0x4243d0
  42481b:	test   rax,rax
  42481e:	mov    rbx,rax
  424821:	je     0x424880
  424823:	mov    r13,QWORD PTR [rdi+0x8]
  424827:	mov    QWORD PTR [rdi+0x8],rax
  42482b:	mov    eax,DWORD PTR [rax]
  42482d:	mov    esi,DWORD PTR [rdi+0x10]
  424830:	mov    r12d,DWORD PTR [rdi+0x4]
  424834:	mov    DWORD PTR [rdi+0x14],0x1
  42483b:	mov    QWORD PTR [rdi+0x18],0x0
  424843:	add    eax,0x1
  424846:	mov    DWORD PTR [rdi+0x4],eax
  424849:	mov    eax,esi
  42484b:	and    eax,0xfffffffb
  42484e:	cmp    ebp,0x1
  424851:	mov    DWORD PTR [rdi+0x10],eax
  424854:	je     0x4249b0
  42485a:	jb     0x4249c0
  424860:	cmp    ebp,0x2
  424863:	jne    0x42486d
  424865:	mov    rcx,rdi
  424868:	call   0x422300
  42486d:	mov    rcx,rbx
  424870:	call   0x42df08
  424875:	mov    QWORD PTR [rdi+0x8],r13
  424879:	mov    DWORD PTR [rdi+0x4],r12d
  42487d:	mov    DWORD PTR [rdi+0x10],esi
  424880:	lea    r14,[rsp+0x50]
  424885:	mov    rax,QWORD PTR [rdi+0x78]
  424889:	mov    r9,QWORD PTR [rdi+0x30]
  42488d:	lea    r8,[rip+0x14661]        # 0x438ef5
  424894:	mov    edx,0x80
  424899:	mov    r15d,DWORD PTR [rdi+0xb4]
  4248a0:	mov    rcx,r14
  4248a3:	mov    r13d,0x7f
  4248a9:	mov    QWORD PTR [rsp+0x30],rax
  4248ae:	call   0x4197e0
  4248b3:	movsxd r12,eax
  4248b6:	lea    esi,[r15-0x1]
  4248ba:	mov    rbx,QWORD PTR [rsp+0x30]
  4248bf:	add    r12,r14
  4248c2:	mov    eax,r12d
  4248c5:	sub    eax,r14d
  4248c8:	sub    r13,rax
  4248cb:	lea    rax,[rsp+0x30]
  4248d0:	test   r15d,r15d
  4248d3:	mov    QWORD PTR [rsp+0x28],rax
  4248d8:	jg     0x4248f1
  4248da:	jmp    0x424940
  4248dc:	nop    DWORD PTR [rax+0x0]
  4248e0:	sub    esi,0x1
  4248e3:	add    rbx,0x68
  4248e7:	cmp    esi,0xffffffff
  4248ea:	mov    QWORD PTR [rsp+0x30],rbx
  4248ef:	je     0x424940
  4248f1:	test   BYTE PTR [rbx+0x11],0x1
  4248f5:	jne    0x4248e0
  4248f7:	cmp    WORD PTR [rbx+0x8],0x8000
  4248fd:	jne    0x4248e0
  4248ff:	mov    r15,QWORD PTR [rbx+0x48]
  424903:	mov    rcx,r15
  424906:	call   0x42de30
  42490b:	lea    r8,[rax+0x1]
  42490f:	cmp    r13,r8
  424912:	jb     0x4248e0
  424914:	mov    rdx,r15
  424917:	mov    rcx,r12
  42491a:	call   0x42de98
  42491f:	mov    rcx,QWORD PTR [rsp+0x28]
  424924:	mov    r9d,ebp
  424927:	mov    r8,rdi
  42492a:	mov    rdx,r14
  42492d:	call   0x41b0c0
  424932:	mov    rbx,QWORD PTR [rsp+0x30]
  424937:	jmp    0x4248e0
  424939:	nop    DWORD PTR [rax+0x0]
  424940:	movzx  eax,WORD PTR [rdi+0xaa]
  424947:	test   ax,0x7fff
  42494b:	je     0x4247e9
  424951:	add    rax,0x1
  424955:	lea    rdx,[rax+rax*2]
  424959:	lea    rdx,[rax+rdx*4]
  42495d:	mov    rax,QWORD PTR [rdi+0x78]
  424961:	lea    rax,[rax+rdx*8]
  424965:	mov    rbx,QWORD PTR [rax+0x48]
  424969:	mov    QWORD PTR [rsp+0x30],rax
  42496e:	test   rbx,rbx
  424971:	je     0x4247e9
  424977:	mov    rcx,rbx
  42497a:	call   0x42de30
  42497f:	lea    r8,[rax+0x1]
  424983:	cmp    r13,r8
  424986:	jb     0x4247e9
  42498c:	mov    rdx,rbx
  42498f:	mov    rcx,r12
  424992:	call   0x42de98
  424997:	lea    rcx,[rsp+0x30]
  42499c:	mov    r9d,ebp
  42499f:	mov    r8,rdi
  4249a2:	mov    rdx,r14
  4249a5:	call   0x41b0c0
  4249aa:	jmp    0x4247e9
  4249af:	nop
  4249b0:	mov    rcx,rdi
  4249b3:	call   0x422200
  4249b8:	jmp    0x42486d
  4249bd:	nop    DWORD PTR [rax]
  4249c0:	mov    rcx,rdi
  4249c3:	call   0x422200
  4249c8:	mov    DWORD PTR [rdi+0x14],0x1
  4249cf:	mov    QWORD PTR [rdi+0x18],0x0
  4249d7:	jmp    0x424865
  4249dc:	nop    DWORD PTR [rax+0x0]
  4249e0:	push   r15
  4249e2:	push   r14
  4249e4:	push   r13
  4249e6:	push   r12
  4249e8:	push   rbp
  4249e9:	push   rdi
  4249ea:	push   rsi
  4249eb:	push   rbx
  4249ec:	sub    rsp,0x68
  4249f0:	mov    ebp,edx
  4249f2:	mov    rdx,QWORD PTR [r8]
  4249f5:	mov    rbx,rcx
  4249f8:	mov    rdi,r8
  4249fb:	call   0x41c570
  424a00:	test   eax,eax
  424a02:	mov    esi,eax
  424a04:	jne    0x4250f9
  424a0a:	mov    eax,DWORD PTR [rbx+0x10]
  424a0d:	test   al,0x40
  424a0f:	jne    0x424b90
  424a15:	or     eax,0x40
  424a18:	cmp    DWORD PTR [rbx],0x21fff
  424a1e:	mov    DWORD PTR [rbx+0x4],ebp
  424a21:	mov    QWORD PTR [rbx+0x8],rdi
  424a25:	mov    DWORD PTR [rbx+0x10],eax
  424a28:	jg     0x424b24
  424a2e:	mov    rcx,rbx
  424a31:	call   0x422200
  424a36:	test   eax,eax
  424a38:	jne    0x424b11
  424a3e:	movzx  eax,WORD PTR [rbx+0xaa]
  424a45:	test   ax,0x7fff
  424a49:	jne    0x424b40
  424a4f:	or     DWORD PTR [rbx+0x10],0x80000
  424a56:	cmp    QWORD PTR [rbx+0x58],0x0
  424a5b:	je     0x424e60
  424a61:	mov    edx,0x1
  424a66:	mov    rcx,rbx
  424a69:	call   0x4247d0
  424a6e:	xchg   ax,ax
  424a70:	mov    edx,0x2
  424a75:	mov    rcx,rbx
  424a78:	call   0x4247d0
  424a7d:	mov    eax,DWORD PTR [rbx+0x10]
  424a80:	and    eax,0xfff7ffff
  424a85:	mov    DWORD PTR [rbx+0x10],eax
  424a88:	test   ah,0x20
  424a8b:	je     0x424aad
  424a8d:	mov    rdx,QWORD PTR [rbx+0xa0]
  424a94:	test   rdx,rdx
  424a97:	je     0x424aad
  424a99:	mov    ecx,eax
  424a9b:	and    ecx,0x30000
  424aa1:	cmp    ecx,0x10000
  424aa7:	je     0x424e6f
  424aad:	test   ah,0x8
  424ab0:	jne    0x424bc0
  424ab6:	mov    DWORD PTR [rbx+0x14],0x1
  424abd:	mov    QWORD PTR [rbx+0x18],0x0
  424ac5:	mov    rcx,rbx
  424ac8:	call   0x422300
  424acd:	test   eax,eax
  424acf:	jne    0x424ba0
  424ad5:	movzx  eax,WORD PTR [rbx+0xaa]
  424adc:	test   ax,ax
  424adf:	je     0x424b01
  424ae1:	cmp    ax,0x8000
  424ae5:	je     0x424b01
  424ae7:	lea    rdx,[rax+rax*2]
  424aeb:	lea    rax,[rax+rdx*4]
  424aef:	mov    rdx,QWORD PTR [rbx+0x78]
  424af3:	lea    rax,[rdx+rax*8]
  424af7:	test   BYTE PTR [rax+0x10],0x5
  424afb:	jne    0x42518b
  424b01:	mov    esi,DWORD PTR [rbx+0x10]
  424b04:	test   sil,0x4
  424b08:	jne    0x424cd0
  424b0e:	mov    esi,DWORD PTR [rbx+0x14]
  424b11:	mov    eax,esi
  424b13:	add    rsp,0x68
  424b17:	pop    rbx
  424b18:	pop    rsi
  424b19:	pop    rdi
  424b1a:	pop    rbp
  424b1b:	pop    r12
  424b1d:	pop    r13
  424b1f:	pop    r14
  424b21:	pop    r15
  424b23:	ret    
  424b24:	mov    rax,QWORD PTR [rbx+0xd8]
  424b2b:	mov    QWORD PTR [rip+0xcf96],rax        # 0x431ac8
  424b32:	jmp    0x424a2e
  424b37:	nop    WORD PTR [rax+rax*1+0x0]
  424b40:	add    rax,0x1
  424b44:	lea    rdx,[rax+rax*2]
  424b48:	lea    rdx,[rax+rdx*4]
  424b4c:	mov    rax,QWORD PTR [rbx+0x78]
  424b50:	lea    rsi,[rax+rdx*8]
  424b54:	test   BYTE PTR [rsi+0x10],0x20
  424b58:	jne    0x424bb0
  424b5a:	or     DWORD PTR [rbx+0x10],0x80000
  424b61:	cmp    QWORD PTR [rbx+0x58],0x0
  424b66:	je     0x424e60
  424b6c:	mov    edx,0x1
  424b71:	mov    rcx,rbx
  424b74:	call   0x4247d0
  424b79:	test   BYTE PTR [rsi+0x10],0x20
  424b7d:	jne    0x424a70
  424b83:	mov    rcx,rbx
  424b86:	call   0x423f90
  424b8b:	jmp    0x424a70
  424b90:	mov    eax,DWORD PTR [rbx+0x14]
  424b93:	test   eax,eax
  424b95:	je     0x424ab6
  424b9b:	jmp    0x424ac5
  424ba0:	mov    esi,DWORD PTR [rbx+0x4]
  424ba3:	jmp    0x424b11
  424ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  424bb0:	mov    eax,DWORD PTR [rbx+0x10]
  424bb3:	jmp    0x424a88
  424bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  424bc0:	lea    rcx,[rip+0x14332]        # 0x438ef9
  424bc7:	mov    QWORD PTR [rsp+0x40],0x0
  424bd0:	mov    QWORD PTR [rsp+0x48],0x0
  424bd9:	mov    DWORD PTR [rsp+0x50],0x4
  424be1:	mov    DWORD PTR [rsp+0x54],0x0
  424be9:	call   0x42ded0
  424bee:	test   rax,rax
  424bf1:	jne    0x424ab6
  424bf7:	test   BYTE PTR [rbx+0x10],0x3
  424bfb:	je     0x424ab6
  424c01:	mov    ecx,DWORD PTR [rbx+0x4]
  424c04:	shl    rcx,0x3
  424c08:	call   0x41b230
  424c0d:	test   rax,rax
  424c10:	mov    r12,rax
  424c13:	je     0x42505f
  424c19:	mov    ecx,DWORD PTR [rbx+0x4]
  424c1c:	shl    rcx,0x3
  424c20:	call   0x41b230
  424c25:	test   rax,rax
  424c28:	mov    rbp,rax
  424c2b:	je     0x425057
  424c31:	lea    r13,[rsp+0x40]
  424c36:	mov    r8d,DWORD PTR [rbx+0x4]
  424c3a:	mov    DWORD PTR [rbx+0x14],0x1
  424c41:	mov    QWORD PTR [rbx+0x18],0x0
  424c49:	mov    eax,0x1
  424c4e:	xor    edi,edi
  424c50:	lea    rcx,[r13+0x14]
  424c54:	xor    esi,esi
  424c56:	mov    QWORD PTR [rsp+0x38],rcx
  424c5b:	cmp    r8d,eax
  424c5e:	jbe    0x424c89
  424c60:	mov    rcx,QWORD PTR [rbx+0x8]
  424c64:	mov    edx,eax
  424c66:	mov    r14,QWORD PTR [rcx+rdx*8]
  424c6a:	cmp    BYTE PTR [r14],0x2d
  424c6e:	je     0x424ebe
  424c74:	add    eax,0x1
  424c77:	mov    edx,esi
  424c79:	add    esi,0x1
  424c7c:	cmp    r8d,eax
  424c7f:	mov    DWORD PTR [rbx+0x14],eax
  424c82:	mov    QWORD PTR [rbp+rdx*8+0x0],r14
  424c87:	ja     0x424c60
  424c89:	call   QWORD PTR [rip+0x23ba1]        # 0x448830
  424c8f:	mov    DWORD PTR [rax],0x0
  424c95:	test   edi,edi
  424c97:	jne    0x4250dd
  424c9d:	test   esi,esi
  424c9f:	je     0x424cb9
  424ca1:	mov    rax,QWORD PTR [rbx+0x8]
  424ca5:	mov    r8d,esi
  424ca8:	mov    rdx,rbp
  424cab:	shl    r8,0x3
  424caf:	lea    rcx,[rax+rdi*8+0x8]
  424cb4:	call   0x42de98
  424cb9:	mov    rcx,r12
  424cbc:	call   0x42df08
  424cc1:	mov    rcx,rbp
  424cc4:	call   0x42df08
  424cc9:	jmp    0x424ab6
  424cce:	xchg   ax,ax
  424cd0:	mov    r9,QWORD PTR [rbx+0x78]
  424cd4:	mov    r10d,DWORD PTR [rbx+0xb4]
  424cdb:	mov    rcx,r9
  424cde:	jmp    0x424d08
  424ce0:	movzx  eax,WORD PTR [rcx+0x8]
  424ce4:	cmp    ax,0x8000
  424ce8:	je     0x424db3
  424cee:	cmp    ax,WORD PTR [rcx]
  424cf1:	je     0x424db3
  424cf7:	sub    r10d,0x1
  424cfb:	test   r10d,r10d
  424cfe:	jle    0x424e81
  424d04:	add    rcx,0x68
  424d08:	mov    r11d,DWORD PTR [rcx+0x10]
  424d0c:	test   r11b,0x5
  424d10:	je     0x424ce0
  424d12:	mov    rdx,QWORD PTR [rcx+0x28]
  424d16:	test   rdx,rdx
  424d19:	jne    0x424d3a
  424d1b:	jmp    0x424d44
  424d1d:	nop    DWORD PTR [rax]
  424d20:	lea    r8,[rax+rax*2]
  424d24:	add    rdx,0x4
  424d28:	lea    rax,[rax+r8*4]
  424d2c:	lea    rax,[r9+rax*8]
  424d30:	test   BYTE PTR [rax+0x10],0xf
  424d34:	je     0x424e10
  424d3a:	movsxd rax,DWORD PTR [rdx]
  424d3d:	cmp    eax,0x8000
  424d42:	jne    0x424d20
  424d44:	mov    rdx,QWORD PTR [rcx+0x30]
  424d48:	test   rdx,rdx
  424d4b:	je     0x424ce0
  424d4d:	nop    DWORD PTR [rax]
  424d50:	movsxd rax,DWORD PTR [rdx]
  424d53:	cmp    eax,0x8000
  424d58:	je     0x424ce0
  424d5a:	lea    r8,[rax+rax*2]
  424d5e:	add    rdx,0x4
  424d62:	lea    rax,[rax+r8*4]
  424d66:	lea    rax,[r9+rax*8]
  424d6a:	test   BYTE PTR [rax+0x10],0x5
  424d6e:	je     0x424d50
  424d70:	mov    r12,QWORD PTR [rax+0x50]
  424d74:	mov    rbp,QWORD PTR [rcx+0x50]
  424d78:	mov    rdi,QWORD PTR [rbx+0x28]
  424d7c:	mov    rsi,QWORD PTR [rip+0xce55]        # 0x431bd8
  424d83:	call   QWORD PTR [rip+0x23a57]        # 0x4487e0
  424d89:	lea    rcx,[rax+0x60]
  424d8d:	mov    QWORD PTR [rsp+0x20],r12
  424d92:	mov    r9,rbp
  424d95:	mov    r8,rdi
  424d98:	mov    rdx,rsi
  424d9b:	call   0x4193f0
  424da0:	mov    edx,0x1
  424da5:	mov    rcx,rbx
  424da8:	call   QWORD PTR [rbx+0x98]
  424dae:	jmp    0x424b0e
  424db3:	movzx  edi,WORD PTR [rcx+0xa]
  424db7:	cmp    WORD PTR [rcx+0xe],di
  424dbb:	jae    0x424cf7
  424dc1:	test   r11d,0x100000
  424dc8:	je     0x424dd4
  424dca:	and    r11d,0x3
  424dce:	jne    0x424cf7
  424dd4:	cmp    di,0x1
  424dd8:	jbe    0x424e30
  424dda:	mov    r12,QWORD PTR [rcx+0x50]
  424dde:	mov    rbp,QWORD PTR [rbx+0x28]
  424de2:	mov    rsi,QWORD PTR [rip+0xcea7]        # 0x431c90
  424de9:	call   QWORD PTR [rip+0x239f1]        # 0x4487e0
  424def:	lea    rcx,[rax+0x60]
  424df3:	mov    DWORD PTR [rsp+0x20],edi
  424df7:	mov    r9,r12
  424dfa:	mov    r8,rbp
  424dfd:	mov    rdx,rsi
  424e00:	call   0x4193f0
  424e05:	jmp    0x424da0
  424e07:	nop    WORD PTR [rax+rax*1+0x0]
  424e10:	mov    r12,QWORD PTR [rax+0x50]
  424e14:	mov    rbp,QWORD PTR [rcx+0x50]
  424e18:	mov    rdi,QWORD PTR [rbx+0x28]
  424e1c:	mov    rsi,QWORD PTR [rip+0xceb5]        # 0x431cd8
  424e23:	jmp    0x424d83
  424e28:	nop    DWORD PTR [rax+rax*1+0x0]
  424e30:	mov    rbp,QWORD PTR [rcx+0x50]
  424e34:	mov    rdi,QWORD PTR [rbx+0x28]
  424e38:	mov    rsi,QWORD PTR [rip+0xcdf1]        # 0x431c30
  424e3f:	call   QWORD PTR [rip+0x2399b]        # 0x4487e0
  424e45:	lea    rcx,[rax+0x60]
  424e49:	mov    r9,rbp
  424e4c:	mov    r8,rdi
  424e4f:	mov    rdx,rsi
  424e52:	call   0x4193f0
  424e57:	jmp    0x424da0
  424e5c:	nop    DWORD PTR [rax+0x0]
  424e60:	xor    edx,edx
  424e62:	mov    rcx,rbx
  424e65:	call   0x4247d0
  424e6a:	jmp    0x424a7d
  424e6f:	and    eax,0xfffeffff
  424e74:	mov    DWORD PTR [rbx+0x10],eax
  424e77:	call   rdx
  424e79:	mov    eax,DWORD PTR [rbx+0x10]
  424e7c:	jmp    0x424aad
  424e81:	test   esi,0x200
  424e87:	je     0x424f3a
  424e8d:	mov    esi,DWORD PTR [rbx+0x14]
  424e90:	cmp    DWORD PTR [rbx+0x4],esi
  424e93:	jbe    0x424b11
  424e99:	mov    rdi,QWORD PTR [rbx+0x28]
  424e9d:	mov    rsi,QWORD PTR [rip+0xcd9c]        # 0x431c40
  424ea4:	call   QWORD PTR [rip+0x23936]        # 0x4487e0
  424eaa:	lea    rcx,[rax+0x60]
  424eae:	mov    r8,rdi
  424eb1:	mov    rdx,rsi
  424eb4:	call   0x4193f0
  424eb9:	jmp    0x424da0
  424ebe:	movzx  edx,BYTE PTR [r14+0x1]
  424ec3:	test   dl,dl
  424ec5:	je     0x424c74
  424ecb:	cmp    dl,0x2d
  424ece:	jne    0x424fc0
  424ed4:	cmp    BYTE PTR [r14+0x2],0x0
  424ed9:	je     0x42519a
  424edf:	lea    rdx,[r14+0x2]
  424ee3:	mov    r8,r13
  424ee6:	mov    rcx,rbx
  424ee9:	call   0x421c40
  424eee:	test   eax,eax
  424ef0:	js     0x4250cc
  424ef6:	mov    r8d,DWORD PTR [rbx+0x14]
  424efa:	mov    rcx,QWORD PTR [rbx+0x8]
  424efe:	lea    r15d,[rdi+0x1]
  424f02:	lea    eax,[r8+0x1]
  424f06:	mov    rdx,r8
  424f09:	mov    r8,QWORD PTR [rcx+r8*8]
  424f0d:	mov    ecx,edi
  424f0f:	mov    DWORD PTR [rbx+0x14],eax
  424f12:	mov    QWORD PTR [r12+rcx*8],r8
  424f16:	mov    rcx,QWORD PTR [rsp+0x40]
  424f1b:	mov    ecx,DWORD PTR [rcx+0x10]
  424f1e:	test   ch,0xf0
  424f21:	jne    0x424f62
  424f23:	cmp    DWORD PTR [rsp+0x54],0x1
  424f28:	je     0x425070
  424f2e:	mov    r8d,DWORD PTR [rbx+0x4]
  424f32:	mov    edi,r15d
  424f35:	jmp    0x424c5b
  424f3a:	and    esi,0x400
  424f40:	je     0x424b0e
  424f46:	mov    esi,DWORD PTR [rbx+0x14]
  424f49:	cmp    DWORD PTR [rbx+0x4],esi
  424f4c:	ja     0x424b11
  424f52:	mov    rdi,QWORD PTR [rbx+0x28]
  424f56:	mov    rsi,QWORD PTR [rip+0xcc53]        # 0x431bb0
  424f5d:	jmp    0x424ea4
  424f62:	and    ecx,0x10000
  424f68:	mov    r8,QWORD PTR [rsp+0x48]
  424f6d:	mov    ecx,DWORD PTR [rsp+0x54]
  424f71:	je     0x424fef
  424f73:	cmp    ecx,0x1
  424f76:	je     0x42503b
  424f7c:	cmp    ecx,0x2
  424f7f:	jne    0x42502a
  424f85:	test   r8,r8
  424f88:	jne    0x424f2e
  424f8a:	mov    r8d,DWORD PTR [rbx+0x4]
  424f8e:	cmp    eax,r8d
  424f91:	jae    0x425177
  424f97:	mov    r9,QWORD PTR [rbx+0x8]
  424f9b:	mov    ecx,eax
  424f9d:	mov    rcx,QWORD PTR [r9+rcx*8]
  424fa1:	cmp    BYTE PTR [rcx],0x2d
  424fa4:	je     0x424f32
  424fa6:	lea    eax,[rdx+0x2]
  424fa9:	mov    r10d,r15d
  424fac:	lea    r15d,[rdi+0x2]
  424fb0:	mov    DWORD PTR [rbx+0x14],eax
  424fb3:	mov    QWORD PTR [r12+r10*8],rcx
  424fb7:	jmp    0x424f32
  424fbc:	nop    DWORD PTR [rax+0x0]
  424fc0:	test   BYTE PTR [rbx+0x10],0x2
  424fc4:	jne    0x424fda
  424fc6:	lea    rdx,[r14+0x1]
  424fca:	mov    r8,r13
  424fcd:	mov    rcx,rbx
  424fd0:	call   0x421c40
  424fd5:	jmp    0x424eee
  424fda:	mov    r9,QWORD PTR [rsp+0x38]
  424fdf:	mov    r8,r13
  424fe2:	mov    rcx,rbx
  424fe5:	call   0x41a9f0
  424fea:	jmp    0x424eee
  424fef:	cmp    ecx,0x1
  424ff2:	je     0x42504b
  424ff4:	cmp    ecx,0x2
  424ff7:	jne    0x42502a
  424ff9:	test   r8,r8
  424ffc:	jne    0x424f2e
  425002:	mov    r8d,DWORD PTR [rbx+0x4]
  425006:	cmp    eax,r8d
  425009:	jae    0x42502a
  42500b:	mov    rcx,QWORD PTR [rbx+0x8]
  42500f:	add    edx,0x2
  425012:	mov    r10d,r15d
  425015:	mov    DWORD PTR [rbx+0x14],edx
  425018:	add    edi,0x2
  42501b:	mov    rax,QWORD PTR [rcx+rax*8]
  42501f:	mov    QWORD PTR [r12+r10*8],rax
  425023:	mov    eax,edx
  425025:	jmp    0x424c5b
  42502a:	call   QWORD PTR [rip+0x23800]        # 0x448830
  425030:	mov    DWORD PTR [rax],0x5
  425036:	jmp    0x424cb9
  42503b:	cmp    BYTE PTR [r14+0x2],0x0
  425040:	je     0x424f8a
  425046:	jmp    0x424f2e
  42504b:	cmp    BYTE PTR [r14+0x2],0x0
  425050:	je     0x425002
  425052:	jmp    0x424f2e
  425057:	mov    rcx,r12
  42505a:	call   0x42df08
  42505f:	call   QWORD PTR [rip+0x237cb]        # 0x448830
  425065:	mov    DWORD PTR [rax],0xc
  42506b:	jmp    0x424ab6
  425070:	movzx  eax,BYTE PTR [r14+0x2]
  425075:	lea    r11,[r14+0x2]
  425079:	lea    r14,[r13+0x14]
  42507d:	test   al,al
  42507f:	jne    0x4250b2
  425081:	jmp    0x42516f
  425086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425090:	mov    rax,QWORD PTR [rsp+0x40]
  425095:	mov    r11,QWORD PTR [rsp+0x30]
  42509a:	mov    eax,DWORD PTR [rax+0x10]
  42509d:	test   ah,0xf0
  4250a0:	jne    0x425105
  4250a2:	add    r11,0x1
  4250a6:	movzx  eax,BYTE PTR [r11]
  4250aa:	test   al,al
  4250ac:	je     0x42516f
  4250b2:	movzx  edx,al
  4250b5:	mov    r9,r14
  4250b8:	mov    r8,r13
  4250bb:	mov    rcx,rbx
  4250be:	mov    QWORD PTR [rsp+0x30],r11
  4250c3:	call   0x41a9f0
  4250c8:	test   eax,eax
  4250ca:	jns    0x425090
  4250cc:	call   QWORD PTR [rip+0x2375e]        # 0x448830
  4250d2:	mov    DWORD PTR [rax],0x16
  4250d8:	jmp    0x424cb9
  4250dd:	mov    rax,QWORD PTR [rbx+0x8]
  4250e1:	mov    r8d,edi
  4250e4:	mov    rdx,r12
  4250e7:	shl    r8,0x3
  4250eb:	lea    rcx,[rax+0x8]
  4250ef:	call   0x42de98
  4250f4:	jmp    0x424c9d
  4250f9:	mov    rcx,QWORD PTR [rip+0xca78]        # 0x431b78
  425100:	call   0x419860
  425105:	test   eax,0x10000
  42510a:	je     0x425143
  42510c:	cmp    BYTE PTR [r11+0x1],0x0
  425111:	jne    0x42516f
  425113:	mov    ecx,DWORD PTR [rbx+0x14]
  425116:	mov    rdx,QWORD PTR [rbx+0x8]
  42511a:	mov    rdx,QWORD PTR [rdx+rcx*8]
  42511e:	mov    rax,rcx
  425121:	cmp    BYTE PTR [rdx],0x2d
  425124:	je     0x424f2e
  42512a:	add    eax,0x1
  42512d:	mov    r10d,r15d
  425130:	lea    r15d,[rdi+0x2]
  425134:	mov    DWORD PTR [rbx+0x14],eax
  425137:	mov    QWORD PTR [r12+r10*8],rdx
  42513b:	mov    eax,DWORD PTR [rbx+0x14]
  42513e:	jmp    0x424f2e
  425143:	cmp    BYTE PTR [r11+0x1],0x0
  425148:	jne    0x42516f
  42514a:	mov    eax,DWORD PTR [rbx+0x14]
  42514d:	cmp    eax,DWORD PTR [rbx+0x4]
  425150:	jae    0x4250cc
  425156:	mov    rdx,QWORD PTR [rbx+0x8]
  42515a:	lea    ecx,[rax+0x1]
  42515d:	mov    r10d,r15d
  425160:	lea    r15d,[rdi+0x2]
  425164:	mov    DWORD PTR [rbx+0x14],ecx
  425167:	mov    rax,QWORD PTR [rdx+rax*8]
  42516b:	mov    QWORD PTR [r12+r10*8],rax
  42516f:	mov    eax,DWORD PTR [rbx+0x14]
  425172:	jmp    0x424f2e
  425177:	call   QWORD PTR [rip+0x236b3]        # 0x448830
  42517d:	mov    edi,r15d
  425180:	mov    DWORD PTR [rax],0x0
  425186:	jmp    0x424c95
  42518b:	mov    rcx,rbx
  42518e:	call   0x421730
  425193:	xor    ecx,ecx
  425195:	call   0x419830
  42519a:	lea    ecx,[rax+0x1]
  42519d:	mov    edx,edi
  42519f:	add    edi,0x1
  4251a2:	mov    r9d,esi
  4251a5:	cmp    ecx,r8d
  4251a8:	mov    DWORD PTR [rbx+0x14],ecx
  4251ab:	mov    QWORD PTR [r12+rdx*8],r14
  4251af:	mov    edx,ecx
  4251b1:	jae    0x424c95
  4251b7:	mov    r10,QWORD PTR [rbx+0x8]
  4251bb:	mov    r11d,edx
  4251be:	add    edx,0x1
  4251c1:	mov    r11,QWORD PTR [r10+r11*8]
  4251c5:	mov    r10d,esi
  4251c8:	add    esi,0x1
  4251cb:	cmp    edx,r8d
  4251ce:	mov    QWORD PTR [rbp+r10*8+0x0],r11
  4251d3:	jne    0x4251b7
  4251d5:	lea    esi,[rdx+r9*1-0x1]
  4251da:	lea    edx,[rdx+rcx*1-0x1]
  4251de:	sub    edx,eax
  4251e0:	sub    esi,eax
  4251e2:	mov    DWORD PTR [rbx+0x14],edx
  4251e5:	jmp    0x424c95
  4251ea:	nop    WORD PTR [rax+rax*1+0x0]
  4251f0:	push   rsi
  4251f1:	push   rbx
  4251f2:	sub    rsp,0x38
  4251f6:	mov    rbx,rcx
  4251f9:	lea    rcx,[rcx+0x10]
  4251fd:	mov    esi,edx
  4251ff:	xor    edx,edx
  425201:	mov    QWORD PTR [rsp+0x28],0x0
  42520a:	call   0x422c10
  42520f:	test   esi,esi
  425211:	mov    ecx,DWORD PTR [rbx+0x10]
  425214:	je     0x425222
  425216:	test   ch,0x40
  425219:	je     0x425222
  42521b:	add    rsp,0x38
  42521f:	pop    rbx
  425220:	pop    rsi
  425221:	ret    
  425222:	test   ch,0x10
  425225:	lea    rdx,[rsp+0x28]
  42522a:	jne    0x425290
  42522c:	call   0x41a240
  425231:	mov    r8,QWORD PTR [rsp+0x28]
  425236:	mov    edx,esi
  425238:	mov    rcx,rbx
  42523b:	call   0x41ce20
  425240:	mov    rcx,QWORD PTR [rip+0x1ecc1]        # 0x443f08
  425247:	call   0x42df48
  42524c:	mov    rcx,QWORD PTR [rip+0x1ecb5]        # 0x443f08
  425253:	call   0x42df50
  425258:	test   eax,eax
  42525a:	je     0x42521b
  42525c:	call   QWORD PTR [rip+0x2357e]        # 0x4487e0
  425262:	add    rax,0x60
  425266:	cmp    QWORD PTR [rip+0x1ec9b],rax        # 0x443f08
  42526d:	mov    r8,QWORD PTR [rip+0xca44]        # 0x431cb8
  425274:	cmove  r8,QWORD PTR [rip+0xca44]        # 0x431cc0
  42527c:	mov    rcx,QWORD PTR [rbx+0x28]
  425280:	mov    rdx,QWORD PTR [rip+0xca41]        # 0x431cc8
  425287:	call   0x419db0
  42528c:	nop    DWORD PTR [rax+0x0]
  425290:	call   0x41a100
  425295:	jmp    0x425231
  425297:	nop    WORD PTR [rax+rax*1+0x0]
  4252a0:	push   r15
  4252a2:	push   r14
  4252a4:	push   r13
  4252a6:	push   r12
  4252a8:	push   rbp
  4252a9:	push   rdi
  4252aa:	push   rsi
  4252ab:	push   rbx
  4252ac:	sub    rsp,0x28
  4252b0:	mov    rbx,rcx
  4252b3:	mov    esi,edx
  4252b5:	mov    r12,r8
  4252b8:	call   0x42de30
  4252bd:	cmp    rax,0xff
  4252c3:	mov    rbp,rax
  4252c6:	jbe    0x4253b5
  4252cc:	test   sil,sil
  4252cf:	jne    0x4253b5
  4252d5:	mov    rcx,rbx
  4252d8:	call   0x41afa0
  4252dd:	mov    rdi,QWORD PTR [rip+0x236a4]        # 0x448988
  4252e4:	mov    r13,rax
  4252e7:	mov    rsi,rax
  4252ea:	mov    r14,rsi
  4252ed:	nop    DWORD PTR [rax]
  4252f0:	mov    edx,0xa
  4252f5:	mov    rcx,r14
  4252f8:	call   0x42de58
  4252fd:	test   rax,rax
  425300:	mov    rbx,rax
  425303:	je     0x425390
  425309:	sub    rax,rsi
  42530c:	lea    r14,[rbx+0x1]
  425310:	cmp    rax,0x27
  425314:	jle    0x4252f0
  425316:	movsx  ecx,BYTE PTR [rbx+0x1]
  42531a:	mov    r15d,ecx
  42531d:	call   rdi
  42531f:	test   eax,eax
  425321:	je     0x4252f0
  425323:	cmp    r15b,0x9
  425327:	je     0x4252f0
  425329:	cmp    r15b,0xa
  42532d:	je     0x425353
  42532f:	cmp    r15b,0x20
  425333:	jne    0x425361
  425335:	add    rbx,0x8
  425339:	mov    rdx,r14
  42533c:	nop    DWORD PTR [rax+0x0]
  425340:	add    rdx,0x1
  425344:	cmp    BYTE PTR [rdx],0x20
  425347:	jne    0x425361
  425349:	cmp    rdx,rbx
  42534c:	jne    0x425340
  42534e:	mov    r14,rdx
  425351:	jmp    0x4252f0
  425353:	add    r14,0x1
  425357:	movzx  r15d,BYTE PTR [r14]
  42535b:	cmp    r15b,0xa
  42535f:	je     0x425353
  425361:	xor    edx,edx
  425363:	mov    rcx,rsi
  425366:	mov    BYTE PTR [r14],0x0
  42536a:	mov    r8,r12
  42536d:	sub    rsi,r14
  425370:	call   0x420f10
  425375:	add    rbp,rsi
  425378:	je     0x42539d
  42537a:	cmp    rbp,0xff
  425381:	mov    BYTE PTR [r14],r15b
  425384:	mov    rsi,r14
  425387:	ja     0x4252ea
  42538d:	nop    DWORD PTR [rax]
  425390:	mov    r8,r12
  425393:	xor    edx,edx
  425395:	mov    rcx,rsi
  425398:	call   0x420f10
  42539d:	mov    rcx,r13
  4253a0:	add    rsp,0x28
  4253a4:	pop    rbx
  4253a5:	pop    rsi
  4253a6:	pop    rdi
  4253a7:	pop    rbp
  4253a8:	pop    r12
  4253aa:	pop    r13
  4253ac:	pop    r14
  4253ae:	pop    r15
  4253b0:	jmp    0x42df08
  4253b5:	movzx  edx,sil
  4253b9:	mov    r8,r12
  4253bc:	mov    rcx,rbx
  4253bf:	add    rsp,0x28
  4253c3:	pop    rbx
  4253c4:	pop    rsi
  4253c5:	pop    rdi
  4253c6:	pop    rbp
  4253c7:	pop    r12
  4253c9:	pop    r13
  4253cb:	pop    r14
  4253cd:	pop    r15
  4253cf:	jmp    0x420f10
  4253d4:	xchg   ax,ax
  4253d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4253e0:	push   rbp
  4253e1:	push   rdi
  4253e2:	push   rsi
  4253e3:	push   rbx
  4253e4:	sub    rsp,0x58
  4253e8:	mov    BYTE PTR [rip+0x1eb71],0x0        # 0x443f60
  4253ef:	mov    ebp,edx
  4253f1:	xor    edx,edx
  4253f3:	mov    rbx,rcx
  4253f6:	cmp    ebp,0x2750
  4253fc:	lea    rcx,[rcx+0x10]
  425400:	je     0x425444
  425402:	call   0x422c10
  425407:	test   ebp,ebp
  425409:	je     0x425449
  42540b:	cmp    DWORD PTR [rbx],0x1dfff
  425411:	jle    0x425666
  425417:	cmp    QWORD PTR [rip+0x1eae9],0x0        # 0x443f08
  42541f:	mov    rcx,QWORD PTR [rbx+0xc0]
  425426:	je     0x42590e
  42542c:	test   rcx,rcx
  42542f:	mov    eax,DWORD PTR [rbx+0x10]
  425432:	je     0x425674
  425438:	test   eax,0x100000
  42543d:	je     0x42547f
  42543f:	jmp    0x425674
  425444:	call   0x422c10
  425449:	cmp    DWORD PTR [rbx],0x1dfff
  42544f:	jle    0x4254e9
  425455:	cmp    QWORD PTR [rip+0x1eaab],0x0        # 0x443f08
  42545d:	mov    rcx,QWORD PTR [rbx+0xb8]
  425464:	je     0x425857
  42546a:	test   rcx,rcx
  42546d:	mov    eax,DWORD PTR [rbx+0x10]
  425470:	je     0x4254f7
  425476:	test   eax,0x100000
  42547b:	jne    0x4254f7
  42547d:	xor    ebp,ebp
  42547f:	test   ah,0x20
  425482:	je     0x42573e
  425488:	mov    r8,QWORD PTR [rip+0x1ea79]        # 0x443f08
  42548f:	mov    edx,0x1
  425494:	call   0x4252a0
  425499:	mov    rcx,QWORD PTR [rip+0x1ea68]        # 0x443f08
  4254a0:	call   0x42df48
  4254a5:	mov    rcx,QWORD PTR [rip+0x1ea5c]        # 0x443f08
  4254ac:	call   0x42df50
  4254b1:	test   eax,eax
  4254b3:	je     0x425737
  4254b9:	call   QWORD PTR [rip+0x23321]        # 0x4487e0
  4254bf:	add    rax,0x30
  4254c3:	cmp    QWORD PTR [rip+0x1ea3e],rax        # 0x443f08
  4254ca:	mov    r8,QWORD PTR [rip+0xc7ef]        # 0x431cc0
  4254d1:	cmove  r8,QWORD PTR [rip+0xc7df]        # 0x431cb8
  4254d9:	mov    rcx,QWORD PTR [rbx+0x28]
  4254dd:	mov    rdx,QWORD PTR [rip+0xc7e4]        # 0x431cc8
  4254e4:	call   0x419db0
  4254e9:	cmp    QWORD PTR [rip+0x1ea17],0x0        # 0x443f08
  4254f1:	je     0x425855
  4254f7:	mov    rcx,QWORD PTR [rip+0x1ea0a]        # 0x443f08
  4254fe:	mov    rdx,QWORD PTR [rbx+0x60]
  425502:	xor    edi,edi
  425504:	mov    r8,QWORD PTR [rbx+0x28]
  425508:	call   0x4193f0
  42550d:	mov    ecx,DWORD PTR [rbx+0x10]
  425510:	test   ch,0x10
  425513:	mov    QWORD PTR [rsp+0x30],0x0
  42551c:	lea    rdx,[rsp+0x30]
  425521:	jne    0x42574f
  425527:	call   0x41a240
  42552c:	lea    rdx,[rip+0x1482e]        # 0x439d61
  425533:	lea    rcx,[rip+0x1ea46]        # 0x443f80
  42553a:	mov    r8d,eax
  42553d:	mov    esi,eax
  42553f:	call   0x419dd0
  425544:	test   ebp,ebp
  425546:	jne    0x425552
  425548:	mov    rax,QWORD PTR [rbx+0x78]
  42554c:	test   BYTE PTR [rax+0x12],0x20
  425550:	jne    0x425563
  425552:	mov    rdx,QWORD PTR [rip+0x1e9af]        # 0x443f08
  425559:	mov    rcx,QWORD PTR [rsp+0x30]
  42555e:	call   0x42df18
  425563:	lea    eax,[rsi+0xf]
  425566:	mov    ecx,0x8
  42556b:	cdq    
  42556c:	idiv   ecx
  42556e:	neg    eax
  425570:	add    eax,0x4
  425573:	test   eax,eax
  425575:	jle    0x42557d
  425577:	mov    DWORD PTR [rip+0x1e9b3],eax        # 0x443f30
  42557d:	mov    r8,QWORD PTR [rsp+0x30]
  425582:	mov    edx,ebp
  425584:	mov    rcx,rbx
  425587:	call   0x41ce20
  42558c:	mov    eax,DWORD PTR [rbx+0x10]
  42558f:	mov    edx,eax
  425591:	and    edx,0x3
  425594:	cmp    edx,0x1
  425597:	je     0x42583a
  42559d:	jb     0x42581f
  4255a3:	cmp    edx,0x3
  4255a6:	jne    0x4255be
  4255a8:	mov    rdx,QWORD PTR [rip+0x1e959]        # 0x443f08
  4255af:	mov    rcx,QWORD PTR [rip+0xc78a]        # 0x431d40
  4255b6:	call   0x42df18
  4255bb:	mov    eax,DWORD PTR [rbx+0x10]
  4255be:	test   al,0x20
  4255c0:	jne    0x4257c2
  4255c6:	test   ah,0x8
  4255c9:	jne    0x4257aa
  4255cf:	mov    rcx,QWORD PTR [rbx+0x68]
  4255d3:	test   rcx,rcx
  4255d6:	je     0x4255e4
  4255d8:	mov    rdx,QWORD PTR [rip+0x1e929]        # 0x443f08
  4255df:	call   0x42df18
  4255e4:	test   ebp,ebp
  4255e6:	je     0x4257dd
  4255ec:	cmp    DWORD PTR [rbx],0x21fff
  4255f2:	jle    0x425782
  4255f8:	mov    rcx,QWORD PTR [rbx+0xe0]
  4255ff:	test   rcx,rcx
  425602:	je     0x425782
  425608:	mov    rdx,QWORD PTR [rip+0x1e8f9]        # 0x443f08
  42560f:	call   0x42df18
  425614:	mov    rcx,QWORD PTR [rip+0x1e8ed]        # 0x443f08
  42561b:	mov    ebp,edi
  42561d:	call   0x42df48
  425622:	mov    rcx,QWORD PTR [rip+0x1e8df]        # 0x443f08
  425629:	call   0x42df50
  42562e:	test   eax,eax
  425630:	je     0x425499
  425636:	call   QWORD PTR [rip+0x231a4]        # 0x4487e0
  42563c:	add    rax,0x60
  425640:	cmp    QWORD PTR [rip+0x1e8c1],rax        # 0x443f08
  425647:	mov    r8,QWORD PTR [rip+0xc66a]        # 0x431cb8
  42564e:	cmove  r8,QWORD PTR [rip+0xc66a]        # 0x431cc0
  425656:	mov    rcx,QWORD PTR [rbx+0x28]
  42565a:	mov    rdx,QWORD PTR [rip+0xc667]        # 0x431cc8
  425661:	call   0x419db0
  425666:	cmp    QWORD PTR [rip+0x1e89a],0x0        # 0x443f08
  42566e:	je     0x42590c
  425674:	mov    rcx,QWORD PTR [rip+0x1e88d]        # 0x443f08
  42567b:	mov    rdx,QWORD PTR [rbx+0x60]
  42567f:	mov    edi,ebp
  425681:	mov    r8,QWORD PTR [rbx+0x28]
  425685:	call   0x4193f0
  42568a:	mov    ecx,DWORD PTR [rbx+0x10]
  42568d:	test   ch,0x40
  425690:	je     0x425510
  425696:	cmp    DWORD PTR [rbx],0x25fff
  42569c:	jle    0x425880
  4256a2:	movsxd rax,DWORD PTR [rbx+0xb4]
  4256a9:	mov    r8,rax
  4256ac:	imul   rax,rax,0x68
  4256b0:	add    rax,QWORD PTR [rbx+0x78]
  4256b4:	cmp    DWORD PTR [rax+0x14],0x3
  4256b8:	je     0x4256f3
  4256ba:	mov    edx,DWORD PTR [rbx+0xb0]
  4256c0:	lea    r9d,[r8+0x1]
  4256c4:	cmp    r9d,edx
  4256c7:	jge    0x425a1f
  4256cd:	sub    edx,0x2
  4256d0:	sub    edx,r8d
  4256d3:	add    rdx,0x1
  4256d7:	imul   rdx,rdx,0x68
  4256db:	add    rdx,rax
  4256de:	jmp    0x4256e9
  4256e0:	cmp    rax,rdx
  4256e3:	je     0x425a1f
  4256e9:	add    rax,0x68
  4256ed:	cmp    DWORD PTR [rax+0x14],0x3
  4256f1:	jne    0x4256e0
  4256f3:	and    ecx,0x3
  4256f6:	cmp    ecx,0x2
  4256f9:	je     0x425a03
  4256ff:	cmp    ecx,0x3
  425702:	je     0x4259d1
  425708:	sub    ecx,0x1
  42570b:	je     0x4259d1
  425711:	lea    r9,[rsp+0x30]
  425716:	mov    rdx,QWORD PTR [rax+0x50]
  42571a:	mov    r8d,0x14
  425720:	mov    rcx,r9
  425723:	mov    QWORD PTR [rsp+0x28],r9
  425728:	call   0x42de20
  42572d:	mov    r9,QWORD PTR [rsp+0x28]
  425732:	jmp    0x4258b0
  425737:	mov    ecx,ebp
  425739:	call   0x419830
  42573e:	mov    rdx,QWORD PTR [rip+0x1e7c3]        # 0x443f08
  425745:	call   0x42df18
  42574a:	jmp    0x425499
  42574f:	call   0x41a100
  425754:	lea    rdx,[rip+0x14606]        # 0x439d61
  42575b:	lea    rcx,[rip+0x1e81e]        # 0x443f80
  425762:	mov    r8d,eax
  425765:	mov    esi,eax
  425767:	call   0x419dd0
  42576c:	mov    rdx,QWORD PTR [rip+0x1e795]        # 0x443f08
  425773:	mov    ecx,0xa
  425778:	call   0x42df20
  42577d:	jmp    0x425563
  425782:	mov    r8,QWORD PTR [rbx+0x80]
  425789:	test   r8,r8
  42578c:	je     0x425614
  425792:	mov    rdx,QWORD PTR [rip+0xc617]        # 0x431db0
  425799:	mov    rcx,QWORD PTR [rip+0x1e768]        # 0x443f08
  4257a0:	call   0x4193f0
  4257a5:	jmp    0x425614
  4257aa:	mov    rdx,QWORD PTR [rip+0x1e757]        # 0x443f08
  4257b1:	mov    rcx,QWORD PTR [rip+0xc660]        # 0x431e18
  4257b8:	call   0x42df18
  4257bd:	jmp    0x4255cf
  4257c2:	mov    rdx,QWORD PTR [rip+0x1e73f]        # 0x443f08
  4257c9:	mov    rcx,QWORD PTR [rip+0xc5c8]        # 0x431d98
  4257d0:	call   0x42df18
  4257d5:	mov    eax,DWORD PTR [rbx+0x10]
  4257d8:	jmp    0x4255c6
  4257dd:	mov    rcx,QWORD PTR [rbx+0x58]
  4257e1:	test   rcx,rcx
  4257e4:	jne    0x42592e
  4257ea:	test   BYTE PTR [rbx+0x11],0x1
  4257ee:	jne    0x4258dd
  4257f4:	cmp    BYTE PTR [rip+0x1e765],0x0        # 0x443f60
  4257fb:	jne    0x425946
  425801:	mov    rcx,QWORD PTR [rbx+0x70]
  425805:	test   rcx,rcx
  425808:	je     0x4255ec
  42580e:	mov    rdx,QWORD PTR [rip+0x1e6f3]        # 0x443f08
  425815:	call   0x42df18
  42581a:	jmp    0x4255ec
  42581f:	mov    rdx,QWORD PTR [rip+0x1e6e2]        # 0x443f08
  425826:	mov    rcx,QWORD PTR [rip+0xc573]        # 0x431da0
  42582d:	call   0x42df18
  425832:	mov    eax,DWORD PTR [rbx+0x10]
  425835:	jmp    0x4255be
  42583a:	mov    rdx,QWORD PTR [rip+0x1e6c7]        # 0x443f08
  425841:	mov    rcx,QWORD PTR [rip+0xc520]        # 0x431d68
  425848:	call   0x42df18
  42584d:	mov    eax,DWORD PTR [rbx+0x10]
  425850:	jmp    0x4255be
  425855:	xor    ecx,ecx
  425857:	cmp    BYTE PTR [rip+0x1e6d6],0x0        # 0x443f34
  42585e:	mov    QWORD PTR [rsp+0x28],rcx
  425863:	jne    0x4258cc
  425865:	call   QWORD PTR [rip+0x22f75]        # 0x4487e0
  42586b:	mov    rcx,QWORD PTR [rsp+0x28]
  425870:	add    rax,0x30
  425874:	mov    QWORD PTR [rip+0x1e68d],rax        # 0x443f08
  42587b:	jmp    0x42546a
  425880:	and    ecx,0x3
  425883:	cmp    ecx,0x2
  425886:	je     0x4259bb
  42588c:	cmp    ecx,0x3
  42588f:	je     0x4259a0
  425895:	sub    ecx,0x1
  425898:	je     0x4259a0
  42589e:	lea    r9,[rsp+0x30]
  4258a3:	mov    DWORD PTR [rsp+0x30],0x706c6568
  4258ab:	mov    BYTE PTR [rsp+0x34],0x0
  4258b0:	mov    r8,QWORD PTR [rbx+0x28]
  4258b4:	mov    rdx,QWORD PTR [rip+0xc3ed]        # 0x431ca8
  4258bb:	mov    rcx,QWORD PTR [rip+0x1e646]        # 0x443f08
  4258c2:	call   0x4193f0
  4258c7:	jmp    0x425499
  4258cc:	call   QWORD PTR [rip+0x22f0e]        # 0x4487e0
  4258d2:	mov    rcx,QWORD PTR [rsp+0x28]
  4258d7:	add    rax,0x60
  4258db:	jmp    0x425874
  4258dd:	mov    rdx,QWORD PTR [rip+0x1e624]        # 0x443f08
  4258e4:	mov    rcx,QWORD PTR [rip+0xc4d5]        # 0x431dc0
  4258eb:	call   0x42df18
  4258f0:	mov    r8,QWORD PTR [rbx+0x30]
  4258f4:	mov    rdx,QWORD PTR [rip+0xc42d]        # 0x431d28
  4258fb:	mov    rcx,QWORD PTR [rip+0x1e606]        # 0x443f08
  425902:	call   0x4193f0
  425907:	jmp    0x4257f4
  42590c:	xor    ecx,ecx
  42590e:	mov    QWORD PTR [rsp+0x28],rcx
  425913:	call   QWORD PTR [rip+0x22ec7]        # 0x4487e0
  425919:	add    rax,0x60
  42591d:	mov    rcx,QWORD PTR [rsp+0x28]
  425922:	mov    QWORD PTR [rip+0x1e5df],rax        # 0x443f08
  425929:	jmp    0x42542c
  42592e:	mov    rdx,QWORD PTR [rbx+0x38]
  425932:	mov    r8,QWORD PTR [rbx+0x20]
  425936:	call   0x420040
  42593b:	test   BYTE PTR [rbx+0x11],0x1
  42593f:	jne    0x4258f0
  425941:	jmp    0x4257f4
  425946:	mov    rdx,QWORD PTR [rip+0x1e5bb]        # 0x443f08
  42594d:	mov    ecx,0xa
  425952:	mov    ebp,DWORD PTR [rbx+0xb0]
  425958:	mov    rsi,QWORD PTR [rbx+0x78]
  42595c:	call   0x42df20
  425961:	mov    rcx,QWORD PTR [rip+0x1e5a0]        # 0x443f08
  425968:	call   0x42df48
  42596d:	jmp    0x425983
  42596f:	cmp    eax,0x4
  425972:	je     0x425993
  425974:	sub    ebp,0x1
  425977:	add    rsi,0x68
  42597b:	test   ebp,ebp
  42597d:	jle    0x425801
  425983:	mov    eax,DWORD PTR [rsi+0x10]
  425986:	and    eax,0xf000
  42598b:	shr    eax,0xc
  42598e:	cmp    eax,0x2
  425991:	jne    0x42596f
  425993:	mov    rdx,rsi
  425996:	mov    ecx,0x1
  42599b:	call   QWORD PTR [rsi+0x38]
  42599e:	jmp    0x425974
  4259a0:	lea    r9,[rsp+0x30]
  4259a5:	lea    rsi,[rip+0x1355d]        # 0x438f09
  4259ac:	mov    ecx,0x7
  4259b1:	mov    rdi,r9
  4259b4:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4259b6:	jmp    0x4258b0
  4259bb:	mov    WORD PTR [rsp+0x30],0x682d
  4259c2:	mov    BYTE PTR [rsp+0x32],0x0
  4259c7:	lea    r9,[rsp+0x30]
  4259cc:	jmp    0x4258b0
  4259d1:	mov    BYTE PTR [rsp+0x31],0x2d
  4259d6:	mov    BYTE PTR [rsp+0x30],0x2d
  4259db:	lea    r9,[rsp+0x30]
  4259e0:	mov    rdx,QWORD PTR [rax+0x50]
  4259e4:	lea    rcx,[rsp+0x32]
  4259e9:	mov    r8d,0x14
  4259ef:	mov    QWORD PTR [rsp+0x28],r9
  4259f4:	call   0x42de20
  4259f9:	mov    r9,QWORD PTR [rsp+0x28]
  4259fe:	jmp    0x4258b0
  425a03:	mov    BYTE PTR [rsp+0x30],0x2d
  425a08:	movzx  eax,WORD PTR [rax+0x2]
  425a0c:	lea    r9,[rsp+0x30]
  425a11:	mov    BYTE PTR [rsp+0x32],0x0
  425a16:	mov    BYTE PTR [rsp+0x31],al
  425a1a:	jmp    0x4258b0
  425a1f:	mov    rcx,QWORD PTR [rip+0xc14a]        # 0x431b70
  425a26:	call   0x419860
  425a2b:	nop
  425a2c:	nop    DWORD PTR [rax+0x0]
  425a30:	sub    rsp,0x28
  425a34:	call   0x4253e0
  425a39:	nop
  425a3a:	nop    WORD PTR [rax+rax*1+0x0]
  425a40:	sub    rsp,0x28
  425a44:	lea    rcx,[rip+0xbd75]        # 0x4317c0
  425a4b:	xor    edx,edx
  425a4d:	call   0x4253e0
  425a52:	nop
  425a53:	nop    DWORD PTR [rax]
  425a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425a60:	lea    rax,[rip+0x134a9]        # 0x438f10
  425a67:	ret    
  425a68:	nop    DWORD PTR [rax+rax*1+0x0]
  425a70:	push   rsi
  425a71:	push   rbx
  425a72:	sub    rsp,0x28
  425a76:	cmp    BYTE PTR [rip+0x1e4b7],0x0        # 0x443f34
  425a7d:	mov    rbx,rcx
  425a80:	mov    rsi,rdx
  425a83:	je     0x425aa0
  425a85:	call   QWORD PTR [rip+0x22d55]        # 0x4487e0
  425a8b:	cmp    rbx,0xf
  425a8f:	lea    r8,[rax+0x60]
  425a93:	ja     0x425ab0
  425a95:	add    rsp,0x28
  425a99:	pop    rbx
  425a9a:	pop    rsi
  425a9b:	ret    
  425a9c:	nop    DWORD PTR [rax+0x0]
  425aa0:	call   QWORD PTR [rip+0x22d3a]        # 0x4487e0
  425aa6:	cmp    rbx,0xf
  425aaa:	lea    r8,[rax+0x30]
  425aae:	jbe    0x425a95
  425ab0:	xor    r9d,r9d
  425ab3:	mov    rdx,rsi
  425ab6:	mov    rcx,rbx
  425ab9:	add    rsp,0x28
  425abd:	pop    rbx
  425abe:	pop    rsi
  425abf:	jmp    0x422eb0
  425ac4:	xchg   ax,ax
  425ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425ad0:	push   rsi
  425ad1:	push   rbx
  425ad2:	sub    rsp,0x28
  425ad6:	mov    rbx,rcx
  425ad9:	mov    rsi,rdx
  425adc:	call   QWORD PTR [rip+0x22cfe]        # 0x4487e0
  425ae2:	cmp    rbx,0xf
  425ae6:	ja     0x425af0
  425ae8:	add    rsp,0x28
  425aec:	pop    rbx
  425aed:	pop    rsi
  425aee:	ret    
  425aef:	nop
  425af0:	lea    r8,[rax+0x60]
  425af4:	mov    r9d,0x1
  425afa:	mov    rdx,rsi
  425afd:	mov    rcx,rbx
  425b00:	add    rsp,0x28
  425b04:	pop    rbx
  425b05:	pop    rsi
  425b06:	jmp    0x422eb0
  425b0b:	nop
  425b0c:	nop
  425b0d:	nop
  425b0e:	nop
  425b0f:	nop
  425b10:	sub    rsp,0x28
  425b14:	mov    rax,rcx
  425b17:	lea    rcx,[rcx+0x10]
  425b1b:	cmp    rax,rcx
  425b1e:	ja     0x425b80
  425b20:	call   0x42dea8
  425b25:	test   rax,rax
  425b28:	mov    r8,rax
  425b2b:	je     0x425b80
  425b2d:	lea    rcx,[rax+0x10]
  425b31:	mov    DWORD PTR [rax+0xc],0x1415fb4a
  425b38:	movabs rdx,0xff00ff00ff00ff01
  425b42:	mov    rax,rcx
  425b45:	mul    rdx
  425b48:	shr    rdx,0x8
  425b4c:	mov    rax,rdx
  425b4f:	shl    rax,0x8
  425b53:	add    rdx,rax
  425b56:	mov    rax,rcx
  425b59:	sub    rax,rdx
  425b5c:	mov    rdx,rax
  425b5f:	lea    rax,[rip+0x1e65a]        # 0x4441c0
  425b66:	mov    r9,QWORD PTR [rax+rdx*8]
  425b6a:	mov    QWORD PTR [rax+rdx*8],rcx
  425b6e:	mov    rax,rcx
  425b71:	mov    QWORD PTR [r8],r9
  425b74:	add    rsp,0x28
  425b78:	ret    
  425b79:	nop    DWORD PTR [rax+0x0]
  425b80:	xor    eax,eax
  425b82:	add    rsp,0x28
  425b86:	ret    
  425b87:	nop    WORD PTR [rax+rax*1+0x0]
  425b90:	test   rcx,rcx
  425b93:	je     0x425b9e
  425b95:	cmp    DWORD PTR [rcx-0x4],0x1415fb4a
  425b9c:	je     0x425ba0
  425b9e:	repz ret 
  425ba0:	mov    rax,rcx
  425ba3:	movabs rdx,0xff00ff00ff00ff01
  425bad:	mul    rdx
  425bb0:	shr    rdx,0x8
  425bb4:	mov    rax,rdx
  425bb7:	shl    rax,0x8
  425bbb:	add    rdx,rax
  425bbe:	mov    rax,rcx
  425bc1:	sub    rax,rdx
  425bc4:	mov    rdx,rax
  425bc7:	lea    rax,[rip+0x1e5f2]        # 0x4441c0
  425bce:	mov    r8,QWORD PTR [rax+rdx*8]
  425bd2:	test   r8,r8
  425bd5:	je     0x425b9e
  425bd7:	cmp    rcx,r8
  425bda:	jne    0x425be8
  425bdc:	jmp    0x425c07
  425bde:	xchg   ax,ax
  425be0:	cmp    rcx,rdx
  425be3:	je     0x425bf3
  425be5:	mov    r8,rdx
  425be8:	mov    rdx,QWORD PTR [r8-0x10]
  425bec:	test   rdx,rdx
  425bef:	jne    0x425be0
  425bf1:	jmp    0x425b9e
  425bf3:	sub    r8,0x10
  425bf7:	mov    rax,QWORD PTR [rcx-0x10]
  425bfb:	sub    rcx,0x10
  425bff:	mov    QWORD PTR [r8],rax
  425c02:	jmp    0x42df08
  425c07:	lea    r8,[rax+rdx*8]
  425c0b:	jmp    0x425bf7
  425c0d:	nop
  425c0e:	nop
  425c0f:	nop
  425c10:	test   r8,r8
  425c13:	mov    r9d,edx
  425c16:	je     0x425c37
  425c18:	test   cl,0x3
  425c1b:	je     0x425c44
  425c1d:	cmp    BYTE PTR [rcx],dl
  425c1f:	jne    0x425c2d
  425c21:	jmp    0x425c40
  425c23:	test   cl,0x3
  425c26:	je     0x425c44
  425c28:	cmp    BYTE PTR [rcx],r9b
  425c2b:	je     0x425c40
  425c2d:	add    rcx,0x1
  425c31:	sub    r8,0x1
  425c35:	jne    0x425c23
  425c37:	xor    eax,eax
  425c39:	ret    
  425c3a:	nop    WORD PTR [rax+rax*1+0x0]
  425c40:	mov    rax,rcx
  425c43:	ret    
  425c44:	movzx  eax,dl
  425c47:	mov    r11d,eax
  425c4a:	shl    r11d,0x8
  425c4e:	or     r11d,eax
  425c51:	mov    eax,r11d
  425c54:	shl    eax,0x10
  425c57:	or     r11d,eax
  425c5a:	cmp    r8,0x3
  425c5e:	ja     0x425c70
  425c60:	jmp    0x425c88
  425c62:	sub    r8,0x4
  425c66:	add    rcx,0x4
  425c6a:	cmp    r8,0x3
  425c6e:	jbe    0x425cb0
  425c70:	mov    eax,DWORD PTR [rcx]
  425c72:	xor    eax,r11d
  425c75:	lea    r10d,[rax-0x1010101]
  425c7c:	not    eax
  425c7e:	and    eax,r10d
  425c81:	test   eax,0x80808080
  425c86:	je     0x425c62
  425c88:	add    r8,rcx
  425c8b:	cmp    BYTE PTR [rcx],dl
  425c8d:	lea    rax,[rcx+0x1]
  425c91:	jne    0x425c9f
  425c93:	jmp    0x425c40
  425c95:	add    rax,0x1
  425c99:	cmp    BYTE PTR [rax-0x1],r9b
  425c9d:	je     0x425c40
  425c9f:	cmp    rax,r8
  425ca2:	mov    rcx,rax
  425ca5:	jne    0x425c95
  425ca7:	xor    eax,eax
  425ca9:	ret    
  425caa:	nop    WORD PTR [rax+rax*1+0x0]
  425cb0:	test   r8,r8
  425cb3:	jne    0x425c88
  425cb5:	jmp    0x425c37
  425cb7:	nop
  425cb8:	nop
  425cb9:	nop
  425cba:	nop
  425cbb:	nop
  425cbc:	nop
  425cbd:	nop
  425cbe:	nop
  425cbf:	nop
  425cc0:	push   rbp
  425cc1:	push   rdi
  425cc2:	push   rsi
  425cc3:	push   rbx
  425cc4:	movsxd rbp,DWORD PTR [rsp+0x50]
  425cc9:	xor    eax,eax
  425ccb:	mov    r11d,0x51eb851f
  425cd1:	mov    rbx,rcx
  425cd4:	mov    rdi,rdx
  425cd7:	movsxd r8,r8d
  425cda:	sar    rbx,0x2
  425cde:	movsxd r9,r9d
  425ce1:	add    ebx,0x1db
  425ce7:	test   cl,0x3
  425cea:	mov    esi,ebp
  425cec:	sete   al
  425cef:	sar    esi,0x2
  425cf2:	sub    ebx,eax
  425cf4:	xor    eax,eax
  425cf6:	add    esi,0x1db
  425cfc:	test   bpl,0x3
  425d00:	sete   al
  425d03:	sub    rcx,rbp
  425d06:	sub    esi,eax
  425d08:	mov    eax,ebx
  425d0a:	imul   r11d
  425d0d:	mov    eax,ebx
  425d0f:	sar    eax,0x1f
  425d12:	sar    edx,0x3
  425d15:	mov    r10d,edx
  425d18:	mov    edx,ebx
  425d1a:	sub    ebx,esi
  425d1c:	sub    r10d,eax
  425d1f:	lea    eax,[r10+r10*4]
  425d23:	lea    eax,[rax+rax*4]
  425d26:	sub    edx,eax
  425d28:	mov    eax,edx
  425d2a:	shr    eax,0x1f
  425d2d:	sub    r10d,eax
  425d30:	mov    eax,esi
  425d32:	imul   r11d
  425d35:	mov    eax,esi
  425d37:	sar    eax,0x1f
  425d3a:	sar    edx,0x3
  425d3d:	mov    r11d,edx
  425d40:	mov    edx,esi
  425d42:	sub    r11d,eax
  425d45:	lea    eax,[r11+r11*4]
  425d49:	lea    eax,[rax+rax*4]
  425d4c:	sub    edx,eax
  425d4e:	mov    eax,edx
  425d50:	shr    eax,0x1f
  425d53:	sub    r11d,eax
  425d56:	lea    rax,[rcx+rcx*8]
  425d5a:	lea    rax,[rcx+rax*8]
  425d5e:	lea    rdx,[rax+rax*4]
  425d62:	movsxd rax,DWORD PTR [rsp+0x58]
  425d67:	add    rdi,rdx
  425d6a:	mov    edx,r11d
  425d6d:	sar    r11d,0x2
  425d71:	sub    edx,r10d
  425d74:	sar    r10d,0x2
  425d78:	add    ebx,edx
  425d7a:	sub    r10d,r11d
  425d7d:	sub    rdi,rax
  425d80:	add    r10d,ebx
  425d83:	movsxd r10,r10d
  425d86:	lea    rdx,[rdi+r10*1]
  425d8a:	lea    rax,[rdx+rdx*2]
  425d8e:	movsxd rdx,DWORD PTR [rsp+0x60]
  425d93:	lea    rax,[r8+rax*8]
  425d97:	sub    rax,rdx
  425d9a:	lea    rdx,[rax*4+0x0]
  425da2:	shl    rax,0x6
  425da6:	sub    rax,rdx
  425da9:	movsxd rdx,DWORD PTR [rsp+0x70]
  425dae:	add    r9,rax
  425db1:	movsxd rax,DWORD PTR [rsp+0x68]
  425db6:	sub    r9,rax
  425db9:	lea    rax,[r9*4+0x0]
  425dc1:	shl    r9,0x6
  425dc5:	sub    r9,rax
  425dc8:	movsxd rax,DWORD PTR [rsp+0x48]
  425dcd:	add    rax,r9
  425dd0:	sub    rax,rdx
  425dd3:	pop    rbx
  425dd4:	pop    rsi
  425dd5:	pop    rdi
  425dd6:	pop    rbp
  425dd7:	ret    
  425dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  425de0:	push   r13
  425de2:	push   r12
  425de4:	push   rbp
  425de5:	push   rdi
  425de6:	push   rsi
  425de7:	push   rbx
  425de8:	sub    rsp,0x28
  425dec:	mov    rsi,rdx
  425def:	mov    rdi,rcx
  425df2:	mov    rbp,r8
  425df5:	mov    rdx,r8
  425df8:	mov    rcx,rsi
  425dfb:	call   rdi
  425dfd:	test   rax,rax
  425e00:	je     0x425e10
  425e02:	add    rsp,0x28
  425e06:	pop    rbx
  425e07:	pop    rsi
  425e08:	pop    rdi
  425e09:	pop    rbp
  425e0a:	pop    r12
  425e0c:	pop    r13
  425e0e:	ret    
  425e0f:	nop
  425e10:	mov    r12,QWORD PTR [rsi]
  425e13:	xor    r13d,r13d
  425e16:	test   r12,r12
  425e19:	jne    0x425e33
  425e1b:	jmp    0x425e02
  425e1d:	nop    DWORD PTR [rax]
  425e20:	mov    r12,rbx
  425e23:	mov    rbx,r13
  425e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425e30:	mov    r13,rbx
  425e33:	mov    r9,r12
  425e36:	sar    r9,0x3f
  425e3a:	or     r9,0x1
  425e3e:	add    r9,r13
  425e41:	cmp    r9,r12
  425e44:	je     0x425e73
  425e46:	mov    rbx,r13
  425e49:	mov    rax,r12
  425e4c:	mov    rdx,rbp
  425e4f:	sar    rbx,1
  425e52:	sar    rax,1
  425e55:	mov    rcx,rsi
  425e58:	add    rax,rbx
  425e5b:	mov    rbx,r12
  425e5e:	and    rbx,r13
  425e61:	and    ebx,0x1
  425e64:	add    rbx,rax
  425e67:	mov    QWORD PTR [rsi],rbx
  425e6a:	call   rdi
  425e6c:	test   rax,rax
  425e6f:	jne    0x425e30
  425e71:	jmp    0x425e20
  425e73:	test   r13,r13
  425e76:	je     0x425e02
  425e78:	test   rax,rax
  425e7b:	jne    0x425e02
  425e7d:	mov    rdx,rbp
  425e80:	mov    rcx,rsi
  425e83:	mov    rax,rdi
  425e86:	mov    QWORD PTR [rsi],r13
  425e89:	add    rsp,0x28
  425e8d:	pop    rbx
  425e8e:	pop    rsi
  425e8f:	pop    rdi
  425e90:	pop    rbp
  425e91:	pop    r12
  425e93:	pop    r13
  425e95:	rex.W jmp rax
  425e98:	nop    DWORD PTR [rax+rax*1+0x0]
  425ea0:	push   rbx
  425ea1:	sub    rsp,0x50
  425ea5:	mov    rax,QWORD PTR [rsp+0x90]
  425ead:	mov    rbx,QWORD PTR [rsp+0x88]
  425eb5:	test   rax,rax
  425eb8:	je     0x425f30
  425eba:	mov    r10d,DWORD PTR [rax]
  425ebd:	mov    DWORD PTR [rsp+0x48],r10d
  425ec2:	mov    r10d,DWORD PTR [rax+0x4]
  425ec6:	mov    DWORD PTR [rsp+0x40],r10d
  425ecb:	mov    r10d,DWORD PTR [rax+0x8]
  425ecf:	mov    DWORD PTR [rsp+0x38],r10d
  425ed4:	mov    r10d,DWORD PTR [rax+0x1c]
  425ed8:	mov    DWORD PTR [rsp+0x30],r10d
  425edd:	mov    eax,DWORD PTR [rax+0x14]
  425ee0:	mov    DWORD PTR [rsp+0x28],eax
  425ee4:	mov    eax,DWORD PTR [rsp+0x80]
  425eeb:	mov    DWORD PTR [rsp+0x20],eax
  425eef:	call   0x425cc0
  425ef4:	mov    rcx,rbx
  425ef7:	mov    rdx,rax
  425efa:	sar    rdx,1
  425efd:	sar    rcx,1
  425f00:	add    rcx,rdx
  425f03:	mov    rdx,rbx
  425f06:	and    edx,0x1
  425f09:	and    rdx,rax
  425f0c:	add    rdx,rcx
  425f0f:	movabs rcx,0x4000000000000000
  425f19:	add    rdx,rcx
  425f1c:	js     0x425f30
  425f1e:	add    rax,rbx
  425f21:	add    rsp,0x50
  425f25:	pop    rbx
  425f26:	ret    
  425f27:	nop    WORD PTR [rax+rax*1+0x0]
  425f30:	test   rbx,rbx
  425f33:	js     0x425f52
  425f35:	lea    rdx,[rbx-0x1]
  425f39:	movabs rax,0x7ffffffffffffffd
  425f43:	cmp    rbx,rax
  425f46:	mov    al,0xff
  425f48:	cmovg  rax,rdx
  425f4c:	add    rsp,0x50
  425f50:	pop    rbx
  425f51:	ret    
  425f52:	lea    rdx,[rbx+0x1]
  425f56:	movabs rax,0x8000000000000002
  425f60:	cmp    rbx,rax
  425f63:	mov    al,0x0
  425f65:	cmovl  rax,rdx
  425f69:	add    rsp,0x50
  425f6d:	pop    rbx
  425f6e:	ret    
  425f6f:	nop
  425f70:	push   r15
  425f72:	push   r14
  425f74:	push   r13
  425f76:	push   r12
  425f78:	push   rbp
  425f79:	push   rdi
  425f7a:	push   rsi
  425f7b:	push   rbx
  425f7c:	sub    rsp,0x128
  425f83:	mov    eax,DWORD PTR [rcx]
  425f85:	mov    r14d,DWORD PTR [rcx+0x4]
  425f89:	mov    QWORD PTR [rsp+0x180],r8
  425f91:	mov    r8d,DWORD PTR [rcx+0x10]
  425f95:	mov    r12,rdx
  425f98:	mov    edx,0x2aaaaaab
  425f9d:	mov    rbp,rcx
  425fa0:	movsxd r9,DWORD PTR [rcx+0xc]
  425fa4:	mov    DWORD PTR [rsp+0x88],eax
  425fab:	mov    eax,DWORD PTR [rcx+0x8]
  425fae:	mov    DWORD PTR [rsp+0x5c],eax
  425fb2:	mov    eax,DWORD PTR [rcx+0x20]
  425fb5:	mov    DWORD PTR [rsp+0x80],eax
  425fbc:	mov    eax,r8d
  425fbf:	imul   edx
  425fc1:	mov    eax,r8d
  425fc4:	sar    eax,0x1f
  425fc7:	sar    edx,1
  425fc9:	mov    ecx,edx
  425fcb:	sub    ecx,eax
  425fcd:	lea    eax,[rcx+rcx*2]
  425fd0:	mov    esi,ecx
  425fd2:	mov    ecx,r8d
  425fd5:	shl    eax,0x2
  425fd8:	sub    ecx,eax
  425fda:	movsxd rax,DWORD PTR [rbp+0x14]
  425fde:	mov    r8d,ecx
  425fe1:	shr    r8d,0x1f
  425fe5:	sub    esi,r8d
  425fe8:	movsxd rsi,esi
  425feb:	add    rsi,rax
  425fee:	xor    eax,eax
  425ff0:	test   sil,0x3
  425ff4:	jne    0x426031
  425ff6:	mov    rax,rsi
  425ff9:	movabs rdx,0xa3d70a3d70a3d70b
  426003:	imul   rdx
  426006:	mov    rax,rsi
  426009:	sar    rax,0x3f
  42600d:	add    rdx,rsi
  426010:	sar    rdx,0x6
  426014:	sub    rdx,rax
  426017:	lea    rax,[rdx+rdx*4]
  42601b:	lea    r10,[rax+rax*4]
  42601f:	mov    eax,0x1
  426024:	shl    r10,0x2
  426028:	cmp    rsi,r10
  42602b:	je     0x426201
  426031:	lea    edx,[r8+r8*1]
  426035:	xor    edi,edi
  426037:	add    r8d,edx
  42603a:	lea    edx,[rcx+r8*4]
  42603e:	lea    rcx,[rax+rax*1]
  426042:	add    rcx,rax
  426045:	movsxd rdx,edx
  426048:	lea    rax,[rax+rcx*4]
  42604c:	add    rax,rdx
  42604f:	lea    rdx,[rip+0x16aea]        # 0x43cb40
  426056:	movzx  eax,WORD PTR [rdx+rax*2]
  42605a:	sub    eax,0x1
  42605d:	cdqe   
  42605f:	add    rax,r9
  426062:	mov    QWORD PTR [rsp+0x60],rax
  426067:	mov    rax,QWORD PTR [rsp+0x180]
  42606f:	mov    rax,QWORD PTR [rax]
  426072:	mov    QWORD PTR [rsp+0x78],rax
  426077:	mov    eax,DWORD PTR [rsp+0x88]
  42607e:	test   eax,eax
  426080:	js     0x42608b
  426082:	cmp    eax,0x3b
  426085:	mov    dil,0x3b
  426088:	cmovle edi,eax
  42608b:	mov    eax,DWORD PTR [rsp+0x78]
  42608f:	mov    r8d,DWORD PTR [rsp+0x5c]
  426094:	mov    rcx,rsi
  426097:	mov    rdx,QWORD PTR [rsp+0x60]
  42609c:	mov    DWORD PTR [rsp+0x40],0x0
  4260a4:	mov    r9d,r14d
  4260a7:	mov    DWORD PTR [rsp+0x38],0x0
  4260af:	mov    DWORD PTR [rsp+0x30],0x0
  4260b7:	mov    ebx,0x6
  4260bc:	neg    eax
  4260be:	mov    DWORD PTR [rsp+0x28],0x46
  4260c6:	mov    DWORD PTR [rsp+0x20],edi
  4260ca:	mov    DWORD PTR [rsp+0x48],eax
  4260ce:	call   0x425cc0
  4260d3:	mov    r15,rax
  4260d6:	mov    QWORD PTR [rsp+0x90],rax
  4260de:	mov    QWORD PTR [rsp+0xb0],rax
  4260e6:	mov    QWORD PTR [rsp+0xa8],rax
  4260ee:	lea    rax,[rsp+0xc0]
  4260f6:	xor    ecx,ecx
  4260f8:	mov    QWORD PTR [rsp+0x170],rbp
  426100:	mov    rbp,r15
  426103:	mov    r15d,ecx
  426106:	mov    QWORD PTR [rsp+0x68],rax
  42610b:	lea    rax,[rsp+0xa8]
  426113:	mov    QWORD PTR [rsp+0x70],rax
  426118:	jmp    0x426151
  42611a:	nop    WORD PTR [rax+rax*1+0x0]
  426120:	sub    ebx,0x1
  426123:	je     0x4261e3
  426129:	mov    QWORD PTR [rsp+0xa8],rax
  426131:	mov    eax,DWORD PTR [rsp+0xe0]
  426138:	xor    r15d,r15d
  42613b:	mov    rbp,QWORD PTR [rsp+0xb0]
  426143:	mov    QWORD PTR [rsp+0xb0],r13
  42614b:	test   eax,eax
  42614d:	setne  r15b
  426151:	mov    r8,QWORD PTR [rsp+0x68]
  426156:	mov    rdx,QWORD PTR [rsp+0x70]
  42615b:	mov    rcx,r12
  42615e:	call   0x425de0
  426163:	mov    r13,QWORD PTR [rsp+0xa8]
  42616b:	mov    r8d,DWORD PTR [rsp+0x5c]
  426170:	mov    r9d,r14d
  426173:	mov    rdx,QWORD PTR [rsp+0x60]
  426178:	mov    QWORD PTR [rsp+0x30],rax
  42617d:	mov    rcx,rsi
  426180:	mov    DWORD PTR [rsp+0x20],edi
  426184:	mov    QWORD PTR [rsp+0x28],r13
  426189:	call   0x425ea0
  42618e:	cmp    r13,rax
  426191:	je     0x426225
  426197:	cmp    rbp,r13
  42619a:	jne    0x426120
  42619c:	cmp    rbp,QWORD PTR [rsp+0xb0]
  4261a4:	je     0x426120
  4261aa:	mov    edx,DWORD PTR [rsp+0xe0]
  4261b1:	test   edx,edx
  4261b3:	js     0x4261d0
  4261b5:	mov    ecx,DWORD PTR [rsp+0x80]
  4261bc:	test   ecx,ecx
  4261be:	js     0x426212
  4261c0:	setne  cl
  4261c3:	test   edx,edx
  4261c5:	setne  dl
  4261c8:	cmp    cl,dl
  4261ca:	je     0x426120
  4261d0:	mov    r15,rbp
  4261d3:	mov    rbp,QWORD PTR [rsp+0x170]
  4261db:	mov    rdx,r15
  4261de:	jmp    0x426395
  4261e3:	mov    rdx,0xffffffffffffffff
  4261ea:	mov    rax,rdx
  4261ed:	add    rsp,0x128
  4261f4:	pop    rbx
  4261f5:	pop    rsi
  4261f6:	pop    rdi
  4261f7:	pop    rbp
  4261f8:	pop    r12
  4261fa:	pop    r13
  4261fc:	pop    r14
  4261fe:	pop    r15
  426200:	ret    
  426201:	and    edx,0x3
  426204:	xor    eax,eax
  426206:	cmp    rdx,0x1
  42620a:	sete   al
  42620d:	jmp    0x426031
  426212:	test   edx,edx
  426214:	setne  dl
  426217:	movzx  edx,dl
  42621a:	cmp    r15d,edx
  42621d:	jg     0x426120
  426223:	jmp    0x4261d0
  426225:	mov    r10d,DWORD PTR [rsp+0x80]
  42622d:	mov    ecx,DWORD PTR [rsp+0xe0]
  426234:	mov    rdx,r13
  426237:	mov    rbp,QWORD PTR [rsp+0x170]
  42623f:	test   r10d,r10d
  426242:	sete   BYTE PTR [rsp+0x8f]
  42624a:	movzx  ebx,BYTE PTR [rsp+0x8f]
  426252:	test   ecx,ecx
  426254:	sete   r8b
  426258:	cmp    bl,r8b
  42625b:	je     0x426395
  426261:	test   ecx,ecx
  426263:	js     0x4264a4
  426269:	test   r10d,r10d
  42626c:	mov    r15d,0x92c70
  426272:	js     0x4264a4
  426278:	lea    rax,[rsp+0xf0]
  426280:	mov    r13d,r15d
  426283:	mov    QWORD PTR [rsp+0x80],rax
  42628b:	lea    rax,[rsp+0xb8]
  426293:	mov    QWORD PTR [rsp+0x98],rax
  42629b:	jmp    0x4262b4
  42629d:	nop    DWORD PTR [rax]
  4262a0:	add    r13d,0x92c70
  4262a7:	cmp    r13d,0x100dc400
  4262ae:	je     0x426395
  4262b4:	mov    r15d,0x2
  4262ba:	mov    ebx,0xffffffff
  4262bf:	mov    ecx,r13d
  4262c2:	mov    r8,rdx
  4262c5:	movabs r11,0x4000000000000000
  4262cf:	imul   ecx,ebx
  4262d2:	sar    r8,1
  4262d5:	mov    eax,ecx
  4262d7:	sar    eax,1
  4262d9:	cdqe   
  4262db:	add    rax,r8
  4262de:	add    r11,rax
  4262e1:	js     0x42632a
  4262e3:	movsxd rcx,ecx
  4262e6:	mov    r8,QWORD PTR [rsp+0x80]
  4262ee:	add    rcx,rdx
  4262f1:	mov    rdx,QWORD PTR [rsp+0x98]
  4262f9:	mov    QWORD PTR [rsp+0xb8],rcx
  426301:	mov    rcx,r12
  426304:	call   0x425de0
  426309:	mov    eax,DWORD PTR [rsp+0x110]
  426310:	test   eax,eax
  426312:	sete   dl
  426315:	cmp    BYTE PTR [rsp+0x8f],dl
  42631c:	je     0x426340
  42631e:	test   eax,eax
  426320:	js     0x426340
  426322:	mov    rdx,QWORD PTR [rsp+0xa8]
  42632a:	add    ebx,0x2
  42632d:	cmp    r15d,0x1
  426331:	je     0x4262a0
  426337:	mov    r15d,0x1
  42633d:	jmp    0x4262bf
  42633f:	nop
  426340:	mov    rax,QWORD PTR [rsp+0x80]
  426348:	mov    r8d,DWORD PTR [rsp+0x5c]
  42634d:	mov    r9d,r14d
  426350:	mov    rdx,QWORD PTR [rsp+0x60]
  426355:	mov    rcx,rsi
  426358:	mov    DWORD PTR [rsp+0x20],edi
  42635c:	mov    QWORD PTR [rsp+0x30],rax
  426361:	mov    rax,QWORD PTR [rsp+0xb8]
  426369:	mov    QWORD PTR [rsp+0x28],rax
  42636e:	call   0x425ea0
  426373:	mov    rdx,QWORD PTR [rsp+0x70]
  426378:	mov    r8,QWORD PTR [rsp+0x68]
  42637d:	mov    rcx,r12
  426380:	mov    QWORD PTR [rsp+0xa8],rax
  426388:	call   0x425de0
  42638d:	mov    rdx,QWORD PTR [rsp+0xa8]
  426395:	mov    rax,QWORD PTR [rsp+0x78]
  42639a:	mov    rbx,QWORD PTR [rsp+0x180]
  4263a2:	mov    ecx,DWORD PTR [rsp+0xc0]
  4263a9:	add    rax,rdx
  4263ac:	sub    rax,QWORD PTR [rsp+0x90]
  4263b4:	mov    QWORD PTR [rbx],rax
  4263b7:	mov    ebx,DWORD PTR [rsp+0x88]
  4263be:	cmp    ebx,ecx
  4263c0:	je     0x426465
  4263c6:	test   edi,edi
  4263c8:	mov    r10d,ebx
  4263cb:	mov    r9,rdx
  4263ce:	sete   al
  4263d1:	xor    r11d,r11d
  4263d4:	cmp    ecx,0x3c
  4263d7:	mov    ecx,ebx
  4263d9:	sete   r11b
  4263dd:	sar    r10d,1
  4263e0:	and    ecx,0x1
  4263e3:	sar    r9,1
  4263e6:	and    eax,r11d
  4263e9:	and    ecx,edx
  4263eb:	sub    eax,edi
  4263ed:	lea    ecx,[r10+rcx*1]
  4263f1:	movsxd rcx,ecx
  4263f4:	add    rcx,r9
  4263f7:	movabs r9,0x4000000000000000
  426401:	add    rcx,r9
  426404:	js     0x4261e3
  42640a:	movsxd r11,ebx
  42640d:	mov    ecx,eax
  42640f:	mov    r10d,eax
  426412:	add    r11,rdx
  426415:	and    ecx,0x1
  426418:	sar    r10d,1
  42641b:	and    ecx,r11d
  42641e:	mov    rdx,r11
  426421:	lea    ecx,[r10+rcx*1]
  426425:	sar    rdx,1
  426428:	movsxd rcx,ecx
  42642b:	add    rcx,rdx
  42642e:	add    rcx,r9
  426431:	js     0x4261e3
  426437:	cdqe   
  426439:	lea    rcx,[rsp+0xb0]
  426441:	mov    rdx,QWORD PTR [rsp+0x68]
  426446:	add    r11,rax
  426449:	mov    QWORD PTR [rsp+0xb0],r11
  426451:	call   r12
  426454:	test   rax,rax
  426457:	je     0x4261e3
  42645d:	mov    rdx,QWORD PTR [rsp+0xb0]
  426465:	mov    rax,QWORD PTR [rsp+0xc0]
  42646d:	mov    QWORD PTR [rbp+0x0],rax
  426471:	mov    rax,QWORD PTR [rsp+0xc8]
  426479:	mov    QWORD PTR [rbp+0x8],rax
  42647d:	mov    rax,QWORD PTR [rsp+0xd0]
  426485:	mov    QWORD PTR [rbp+0x10],rax
  426489:	mov    rax,QWORD PTR [rsp+0xd8]
  426491:	mov    QWORD PTR [rbp+0x18],rax
  426495:	mov    eax,DWORD PTR [rsp+0xe0]
  42649c:	mov    DWORD PTR [rbp+0x20],eax
  42649f:	jmp    0x4261ea
  4264a4:	mov    rdx,rax
  4264a7:	jmp    0x426395
  4264ac:	nop    DWORD PTR [rax+0x0]
  4264b0:	lea    r8,[rip+0x1e549]        # 0x444a00
  4264b7:	lea    rdx,[rip+0x52]        # 0x426510
  4264be:	jmp    0x425f70
  4264c3:	nop
  4264c4:	nop
  4264c5:	nop
  4264c6:	nop
  4264c7:	nop
  4264c8:	nop
  4264c9:	nop
  4264ca:	nop
  4264cb:	nop
  4264cc:	nop
  4264cd:	nop
  4264ce:	nop
  4264cf:	nop
  4264d0:	push   rbx
  4264d1:	sub    rsp,0x20
  4264d5:	mov    rbx,rdx
  4264d8:	call   0x412550
  4264dd:	test   rax,rax
  4264e0:	je     0x426509
  4264e2:	mov    rdx,QWORD PTR [rax]
  4264e5:	mov    QWORD PTR [rbx],rdx
  4264e8:	mov    rdx,QWORD PTR [rax+0x8]
  4264ec:	mov    QWORD PTR [rbx+0x8],rdx
  4264f0:	mov    rdx,QWORD PTR [rax+0x10]
  4264f4:	mov    QWORD PTR [rbx+0x10],rdx
  4264f8:	mov    rdx,QWORD PTR [rax+0x18]
  4264fc:	mov    QWORD PTR [rbx+0x18],rdx
  426500:	mov    eax,DWORD PTR [rax+0x20]
  426503:	mov    DWORD PTR [rbx+0x20],eax
  426506:	mov    rax,rbx
  426509:	add    rsp,0x20
  42650d:	pop    rbx
  42650e:	ret    
  42650f:	nop
  426510:	push   rbx
  426511:	sub    rsp,0x20
  426515:	mov    rbx,rdx
  426518:	call   0x412520
  42651d:	test   rax,rax
  426520:	je     0x426549
  426522:	mov    rdx,QWORD PTR [rax]
  426525:	mov    QWORD PTR [rbx],rdx
  426528:	mov    rdx,QWORD PTR [rax+0x8]
  42652c:	mov    QWORD PTR [rbx+0x8],rdx
  426530:	mov    rdx,QWORD PTR [rax+0x10]
  426534:	mov    QWORD PTR [rbx+0x10],rdx
  426538:	mov    rdx,QWORD PTR [rax+0x18]
  42653c:	mov    QWORD PTR [rbx+0x18],rdx
  426540:	mov    eax,DWORD PTR [rax+0x20]
  426543:	mov    DWORD PTR [rbx+0x20],eax
  426546:	mov    rax,rbx
  426549:	add    rsp,0x20
  42654d:	pop    rbx
  42654e:	ret    
  42654f:	nop
  426550:	sub    rsp,0x28
  426554:	mov    rax,QWORD PTR [rip+0x174a5]        # 0x43da00
  42655b:	lea    r9,[rip+0x1661e]        # 0x43cb80
  426562:	lea    r8,[rip+0x16628]        # 0x43cb91
  426569:	xor    edx,edx
  42656b:	mov    ecx,DWORD PTR [rax]
  42656d:	call   0x4266b0
  426572:	call   0x42df78
  426577:	nop
  426578:	nop
  426579:	nop
  42657a:	nop
  42657b:	nop
  42657c:	nop
  42657d:	nop
  42657e:	nop
  42657f:	nop
  426580:	sub    rsp,0x38
  426584:	mov    QWORD PTR [rsp+0x50],r8
  426589:	lea    r8,[rsp+0x50]
  42658e:	mov    QWORD PTR [rsp+0x58],r9
  426593:	mov    QWORD PTR [rsp+0x28],r8
  426598:	call   0x4292e0
  42659d:	add    rsp,0x38
  4265a1:	ret    
  4265a2:	nop    DWORD PTR [rax+0x0]
  4265a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4265b0:	push   r12
  4265b2:	push   rbp
  4265b3:	push   rdi
  4265b4:	push   rsi
  4265b5:	push   rbx
  4265b6:	sub    rsp,0x20
  4265ba:	mov    rbx,QWORD PTR [rip+0x2221f]        # 0x4487e0
  4265c1:	mov    edi,edx
  4265c3:	mov    rbp,r8
  4265c6:	mov    r12,r9
  4265c9:	mov    esi,ecx
  4265cb:	mov    QWORD PTR [rsp+0x68],r9
  4265d0:	call   rbx
  4265d2:	lea    rcx,[rax+0x60]
  4265d6:	mov    r8,r12
  4265d9:	mov    rdx,rbp
  4265dc:	call   0x4292e0
  4265e1:	add    DWORD PTR [rip+0x1fc18],0x1        # 0x446200
  4265e8:	test   edi,edi
  4265ea:	jne    0x426620
  4265ec:	call   rbx
  4265ee:	lea    rdx,[rax+0x60]
  4265f2:	mov    ecx,0xa
  4265f7:	call   0x42de78
  4265fc:	call   rbx
  4265fe:	lea    rcx,[rax+0x60]
  426602:	call   0x42df48
  426607:	test   esi,esi
  426609:	jne    0x42664f
  42660b:	add    rsp,0x20
  42660f:	pop    rbx
  426610:	pop    rsi
  426611:	pop    rdi
  426612:	pop    rbp
  426613:	pop    r12
  426615:	ret    
  426616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426620:	mov    ecx,edi
  426622:	call   0x426930
  426627:	test   rax,rax
  42662a:	mov    rdi,rax
  42662d:	lea    rax,[rip+0x1656c]        # 0x43cba0
  426634:	cmove  rdi,rax
  426638:	call   rbx
  42663a:	lea    rdx,[rip+0x16574]        # 0x43cbb5
  426641:	lea    rcx,[rax+0x60]
  426645:	mov    r8,rdi
  426648:	call   0x426580
  42664d:	jmp    0x4265ec
  42664f:	mov    ecx,esi
  426651:	call   0x42df60
  426656:	nop
  426657:	nop    WORD PTR [rax+rax*1+0x0]
  426660:	push   rbx
  426661:	sub    rsp,0x20
  426665:	mov    rbx,QWORD PTR [rip+0x22174]        # 0x4487e0
  42666c:	call   rbx
  42666e:	lea    rcx,[rax+0x30]
  426672:	call   0x42dd80
  426677:	test   eax,eax
  426679:	js     0x4266a0
  42667b:	mov    ecx,eax
  42667d:	call   0x426840
  426682:	cmp    rax,0xffffffffffffffff
  426686:	je     0x4266a0
  426688:	call   rbx
  42668a:	lea    rcx,[rax+0x30]
  42668e:	add    rsp,0x20
  426692:	pop    rbx
  426693:	jmp    0x42df48
  426698:	nop    DWORD PTR [rax+rax*1+0x0]
  4266a0:	add    rsp,0x20
  4266a4:	pop    rbx
  4266a5:	ret    
  4266a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4266b0:	push   rbp
  4266b1:	push   rdi
  4266b2:	push   rsi
  4266b3:	push   rbx
  4266b4:	sub    rsp,0x38
  4266b8:	mov    ebx,ecx
  4266ba:	mov    esi,edx
  4266bc:	mov    QWORD PTR [rsp+0x78],r9
  4266c1:	mov    rdi,r8
  4266c4:	call   0x426660
  4266c9:	mov    rax,QWORD PTR [rip+0x1fb38]        # 0x446208
  4266d0:	test   rax,rax
  4266d3:	je     0x426700
  4266d5:	call   rax
  4266d7:	lea    r9,[rsp+0x78]
  4266dc:	mov    r8,rdi
  4266df:	mov    edx,esi
  4266e1:	mov    ecx,ebx
  4266e3:	mov    QWORD PTR [rsp+0x28],r9
  4266e8:	call   0x4265b0
  4266ed:	nop
  4266ee:	add    rsp,0x38
  4266f2:	pop    rbx
  4266f3:	pop    rsi
  4266f4:	pop    rdi
  4266f5:	pop    rbp
  4266f6:	ret    
  4266f7:	nop    WORD PTR [rax+rax*1+0x0]
  426700:	mov    rax,QWORD PTR [rip+0x17459]        # 0x43db60
  426707:	mov    rbp,QWORD PTR [rax]
  42670a:	call   QWORD PTR [rip+0x220d0]        # 0x4487e0
  426710:	lea    rdx,[rip+0x164a3]        # 0x43cbba
  426717:	lea    rcx,[rax+0x60]
  42671b:	mov    r8,rbp
  42671e:	call   0x426580
  426723:	jmp    0x4266d7
  426725:	nop
  426726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426730:	push   r13
  426732:	push   r12
  426734:	push   rbp
  426735:	push   rdi
  426736:	push   rsi
  426737:	push   rbx
  426738:	sub    rsp,0x38
  42673c:	mov    eax,DWORD PTR [rip+0x1face]        # 0x446210
  426742:	mov    ebp,ecx
  426744:	mov    r12d,edx
  426747:	mov    rbx,r8
  42674a:	mov    edi,r9d
  42674d:	test   eax,eax
  42674f:	je     0x42676b
  426751:	cmp    DWORD PTR [rip+0x1e2c0],r9d        # 0x444a18
  426758:	je     0x4267e0
  42675e:	mov    QWORD PTR [rip+0x1e2ab],rbx        # 0x444a10
  426765:	mov    DWORD PTR [rip+0x1e2ad],edi        # 0x444a18
  42676b:	call   0x426660
  426770:	mov    rax,QWORD PTR [rip+0x1fa91]        # 0x446208
  426777:	test   rax,rax
  42677a:	je     0x426810
  426780:	call   rax
  426782:	mov    r13,QWORD PTR [rip+0x22057]        # 0x4487e0
  426789:	lea    rax,[rip+0x1642f]        # 0x43cbbf
  426790:	lea    rsi,[rip+0x16430]        # 0x43cbc7
  426797:	test   rbx,rbx
  42679a:	cmovne rsi,rax
  42679e:	call   r13
  4267a1:	lea    rcx,[rax+0x60]
  4267a5:	mov    r9d,edi
  4267a8:	mov    r8,rbx
  4267ab:	mov    rdx,rsi
  4267ae:	call   0x426580
  4267b3:	mov    r8,QWORD PTR [rsp+0x90]
  4267bb:	lea    r9,[rsp+0x98]
  4267c3:	mov    edx,r12d
  4267c6:	mov    ecx,ebp
  4267c8:	mov    QWORD PTR [rsp+0x28],r9
  4267cd:	call   0x4265b0
  4267d2:	nop
  4267d3:	add    rsp,0x38
  4267d7:	pop    rbx
  4267d8:	pop    rsi
  4267d9:	pop    rdi
  4267da:	pop    rbp
  4267db:	pop    r12
  4267dd:	pop    r13
  4267df:	ret    
  4267e0:	mov    rcx,QWORD PTR [rip+0x1e229]        # 0x444a10
  4267e7:	cmp    r8,rcx
  4267ea:	je     0x4267d3
  4267ec:	test   r8,r8
  4267ef:	je     0x42675e
  4267f5:	test   rcx,rcx
  4267f8:	je     0x42675e
  4267fe:	mov    rdx,r8
  426801:	call   0x42de50
  426806:	test   eax,eax
  426808:	je     0x4267d3
  42680a:	jmp    0x42675e
  42680f:	nop
  426810:	mov    rax,QWORD PTR [rip+0x17349]        # 0x43db60
  426817:	mov    r13,QWORD PTR [rip+0x21fc2]        # 0x4487e0
  42681e:	mov    rsi,QWORD PTR [rax]
  426821:	call   r13
  426824:	lea    rdx,[rip+0x1639e]        # 0x43cbc9
  42682b:	lea    rcx,[rax+0x60]
  42682f:	mov    r8,rsi
  426832:	call   0x426580
  426837:	jmp    0x426789
  42683c:	nop
  42683d:	nop
  42683e:	nop
  42683f:	nop
  426840:	push   rbx
  426841:	sub    rsp,0x20
  426845:	mov    ebx,ecx
  426847:	call   0x4185d0
  42684c:	mov    rax,QWORD PTR [rip+0x22015]        # 0x448868
  426853:	mov    ecx,ebx
  426855:	add    rsp,0x20
  426859:	pop    rbx
  42685a:	rex.W jmp rax
  42685d:	nop
  42685e:	nop
  42685f:	nop
  426860:	push   rdi
  426861:	push   rsi
  426862:	push   rbx
  426863:	sub    rsp,0x20
  426867:	test   rcx,rcx
  42686a:	mov    rbx,rcx
  42686d:	je     0x4268d7
  42686f:	mov    edx,0x2f
  426874:	call   0x42de10
  426879:	test   rax,rax
  42687c:	je     0x4268c8
  42687e:	lea    rdx,[rax+0x1]
  426882:	mov    rcx,rdx
  426885:	sub    rcx,rbx
  426888:	cmp    rcx,0x6
  42688c:	jle    0x4268c8
  42688e:	lea    rsi,[rax-0x6]
  426892:	lea    rdi,[rip+0x1636f]        # 0x43cc08
  426899:	mov    ecx,0x7
  42689e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4268a0:	jne    0x4268c8
  4268a2:	lea    rdi,[rip+0x16367]        # 0x43cc10
  4268a9:	mov    ecx,0x3
  4268ae:	mov    rsi,rdx
  4268b1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4268b3:	seta   r8b
  4268b7:	setb   cl
  4268ba:	add    rax,0x4
  4268be:	cmp    r8b,cl
  4268c1:	cmovne rax,rdx
  4268c5:	mov    rbx,rax
  4268c8:	mov    QWORD PTR [rip+0x1e151],rbx        # 0x444a20
  4268cf:	add    rsp,0x20
  4268d3:	pop    rbx
  4268d4:	pop    rsi
  4268d5:	pop    rdi
  4268d6:	ret    
  4268d7:	call   QWORD PTR [rip+0x21f03]        # 0x4487e0
  4268dd:	lea    rcx,[rip+0x162ec]        # 0x43cbd0
  4268e4:	lea    r9,[rax+0x60]
  4268e8:	mov    r8d,0x37
  4268ee:	mov    edx,0x1
  4268f3:	call   0x42dee0
  4268f8:	call   0x42df78
  4268fd:	nop
  4268fe:	nop
  4268ff:	nop
  426900:	sub    rsp,0x38
  426904:	lea    rdx,[rip+0x16315]        # 0x43cc20
  42690b:	lea    rcx,[rip+0x1e12e]        # 0x444a40
  426912:	mov    QWORD PTR [rsp+0x50],r8
  426917:	lea    r8,[rsp+0x50]
  42691c:	mov    QWORD PTR [rsp+0x58],r9
  426921:	mov    QWORD PTR [rsp+0x28],r8
  426926:	call   0x4293b0
  42692b:	add    rsp,0x38
  42692f:	ret    
  426930:	push   rdi
  426931:	push   rsi
  426932:	push   rbx
  426933:	sub    rsp,0x20
  426937:	mov    ebx,ecx
  426939:	call   0x426a20
  42693e:	test   rax,rax
  426941:	je     0x426950
  426943:	add    rsp,0x20
  426947:	pop    rbx
  426948:	pop    rsi
  426949:	pop    rdi
  42694a:	ret    
  42694b:	nop    DWORD PTR [rax+rax*1+0x0]
  426950:	mov    ecx,ebx
  426952:	call   0x42de40
  426957:	test   rax,rax
  42695a:	mov    rsi,rax
  42695d:	je     0x4269e0
  426963:	cmp    BYTE PTR [rax],0x0
  426966:	je     0x4269e0
  426968:	mov    rcx,rax
  42696b:	call   0x42de30
  426970:	cmp    rax,0xff
  426976:	ja     0x426a0e
  42697c:	add    rax,0x1
  426980:	lea    rdi,[rip+0x1e0b9]        # 0x444a40
  426987:	cmp    eax,0x8
  42698a:	jae    0x4269d0
  42698c:	xor    edx,edx
  42698e:	test   al,0x4
  426990:	jne    0x4269c0
  426992:	test   al,0x2
  426994:	jne    0x4269b0
  426996:	test   al,0x1
  426998:	jne    0x4269a3
  42699a:	lea    rax,[rip+0x1e09f]        # 0x444a40
  4269a1:	jmp    0x426943
  4269a3:	movzx  eax,BYTE PTR [rsi+rdx*1]
  4269a7:	mov    BYTE PTR [rdi+rdx*1],al
  4269aa:	jmp    0x42699a
  4269ac:	nop    DWORD PTR [rax+0x0]
  4269b0:	movzx  ecx,WORD PTR [rsi+rdx*1]
  4269b4:	mov    WORD PTR [rdi+rdx*1],cx
  4269b8:	add    rdx,0x2
  4269bc:	jmp    0x426996
  4269be:	xchg   ax,ax
  4269c0:	mov    edx,DWORD PTR [rsi]
  4269c2:	mov    DWORD PTR [rdi],edx
  4269c4:	mov    edx,0x4
  4269c9:	jmp    0x426992
  4269cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4269d0:	mov    ecx,eax
  4269d2:	shr    ecx,0x3
  4269d5:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4269d8:	jmp    0x42698c
  4269da:	nop    WORD PTR [rax+rax*1+0x0]
  4269e0:	lea    rdx,[rip+0x16239]        # 0x43cc20
  4269e7:	lea    rcx,[rip+0x1e052]        # 0x444a40
  4269ee:	mov    r8d,ebx
  4269f1:	call   0x426900
  4269f6:	call   QWORD PTR [rip+0x21e34]        # 0x448830
  4269fc:	mov    DWORD PTR [rax],0x16
  426a02:	lea    rax,[rip+0x1e037]        # 0x444a40
  426a09:	jmp    0x426943
  426a0e:	call   0x42df78
  426a13:	nop
  426a14:	nop
  426a15:	nop
  426a16:	nop
  426a17:	nop
  426a18:	nop
  426a19:	nop
  426a1a:	nop
  426a1b:	nop
  426a1c:	nop
  426a1d:	nop
  426a1e:	nop
  426a1f:	nop
  426a20:	cmp    ecx,0x2754
  426a26:	je     0x426dd0
  426a2c:	jg     0x426a82
  426a2e:	cmp    ecx,0x89
  426a34:	je     0x426db0
  426a3a:	jg     0x426ae3
  426a40:	cmp    ecx,0x79
  426a43:	je     0x426de0
  426a49:	jle    0x426c11
  426a4f:	cmp    ecx,0x7d
  426a52:	lea    rax,[rip+0x16229]        # 0x43cc82
  426a59:	je     0x426a80
  426a5b:	jle    0x426d20
  426a61:	cmp    ecx,0x7f
  426a64:	lea    rax,[rip+0x16615]        # 0x43d080
  426a6b:	je     0x426a80
  426a6d:	cmp    ecx,0x83
  426a73:	lea    rax,[rip+0x1622a]        # 0x43cca4
  426a7a:	jne    0x426ae0
  426a7c:	nop    DWORD PTR [rax+0x0]
  426a80:	repz ret 
  426a82:	cmp    ecx,0x2779
  426a88:	je     0x426dc0
  426a8e:	jg     0x426b32
  426a94:	cmp    ecx,0x276c
  426a9a:	je     0x426da1
  426aa0:	jg     0x426c50
  426aa6:	cmp    ecx,0x2756
  426aac:	lea    rax,[rip+0x162cb]        # 0x43cd7e
  426ab3:	je     0x426a80
  426ab5:	lea    rax,[rip+0x162ae]        # 0x43cd6a
  426abc:	jl     0x426a80
  426abe:	cmp    ecx,0x2757
  426ac4:	lea    rax,[rip+0x162c9]        # 0x43cd94
  426acb:	je     0x426a80
  426acd:	cmp    ecx,0x276b
  426ad3:	lea    rax,[rip+0x16356]        # 0x43ce30
  426ada:	je     0x426a80
  426adc:	nop    DWORD PTR [rax+0x0]
  426ae0:	xor    eax,eax
  426ae2:	ret    
  426ae3:	cmp    ecx,0x273c
  426ae9:	je     0x426e00
  426aef:	jle    0x426b85
  426af5:	cmp    ecx,0x274b
  426afb:	lea    rax,[rip+0x16216]        # 0x43cd18
  426b02:	je     0x426a80
  426b08:	jle    0x426c90
  426b0e:	cmp    ecx,0x2750
  426b14:	lea    rax,[rip+0x16220]        # 0x43cd3b
  426b1b:	je     0x426a80
  426b21:	cmp    ecx,0x2753
  426b27:	lea    rax,[rip+0x1621a]        # 0x43cd48
  426b2e:	jne    0x426ae0
  426b30:	repz ret 
  426b32:	cmp    ecx,0x277f
  426b38:	je     0x426df0
  426b3e:	jle    0x426bd0
  426b44:	cmp    ecx,0x2afa
  426b4a:	lea    rax,[rip+0x16467]        # 0x43cfb8
  426b51:	je     0x426a80
  426b57:	jle    0x426cf0
  426b5d:	cmp    ecx,0x2afb
  426b63:	lea    rax,[rip+0x1646e]        # 0x43cfd8
  426b6a:	je     0x426a80
  426b70:	cmp    ecx,0x2afc
  426b76:	lea    rax,[rip+0x16473]        # 0x43cff0
  426b7d:	jne    0x426ae0
  426b83:	repz ret 
  426b85:	cmp    ecx,0x3e4
  426b8b:	lea    rax,[rip+0x16236]        # 0x43cdc8
  426b92:	je     0x426a80
  426b98:	jle    0x426cc0
  426b9e:	cmp    ecx,0x3e5
  426ba4:	lea    rax,[rip+0x16255]        # 0x43ce00
  426bab:	je     0x426a80
  426bb1:	cmp    ecx,0x7d4
  426bb7:	lea    rax,[rip+0x164a3]        # 0x43d061
  426bbe:	jne    0x426ae0
  426bc4:	repz ret 
  426bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426bd0:	cmp    ecx,0x277c
  426bd6:	lea    rax,[rip+0x16385]        # 0x43cf62
  426bdd:	je     0x426a80
  426be3:	jg     0x426d63
  426be9:	cmp    ecx,0x277a
  426bef:	lea    rax,[rip+0x16332]        # 0x43cf28
  426bf6:	je     0x426a80
  426bfc:	cmp    ecx,0x277b
  426c02:	lea    rax,[rip+0x16345]        # 0x43cf4e
  426c09:	jne    0x426ae0
  426c0f:	repz ret 
  426c11:	cmp    ecx,0x68
  426c14:	lea    rax,[rip+0x16459]        # 0x43d074
  426c1b:	je     0x426a80
  426c21:	jle    0x426d90
  426c27:	cmp    ecx,0x6f
  426c2a:	lea    rax,[rip+0x16407]        # 0x43d038
  426c31:	je     0x426a80
  426c37:	cmp    ecx,0x78
  426c3a:	lea    rax,[rip+0x16016]        # 0x43cc57
  426c41:	jne    0x426ae0
  426c47:	repz ret 
  426c49:	nop    DWORD PTR [rax+0x0]
  426c50:	cmp    ecx,0x2776
  426c56:	je     0x426d82
  426c5c:	jg     0x426d42
  426c62:	cmp    ecx,0x276d
  426c68:	lea    rax,[rip+0x16211]        # 0x43ce80
  426c6f:	je     0x426a80
  426c75:	cmp    ecx,0x2775
  426c7b:	lea    rax,[rip+0x16226]        # 0x43cea8
  426c82:	jne    0x426ae0
  426c88:	repz ret 
  426c8a:	nop    WORD PTR [rax+rax*1+0x0]
  426c90:	cmp    ecx,0x273e
  426c96:	lea    rax,[rip+0x1602d]        # 0x43ccca
  426c9d:	je     0x426a80
  426ca3:	cmp    ecx,0x274a
  426ca9:	lea    rax,[rip+0x16038]        # 0x43cce8
  426cb0:	jne    0x426ae0
  426cb6:	repz ret 
  426cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  426cc0:	cmp    ecx,0x8b
  426cc6:	lea    rax,[rip+0x15f7b]        # 0x43cc48
  426ccd:	je     0x426a80
  426cd3:	cmp    ecx,0x3e3
  426cd9:	lea    rax,[rip+0x160c5]        # 0x43cda5
  426ce0:	jne    0x426ae0
  426ce6:	repz ret 
  426ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  426cf0:	cmp    ecx,0x2780
  426cf6:	lea    rax,[rip+0x1628c]        # 0x43cf89
  426cfd:	je     0x426a80
  426d03:	cmp    ecx,0x2af9
  426d09:	lea    rax,[rip+0x16294]        # 0x43cfa4
  426d10:	jne    0x426ae0
  426d16:	repz ret 
  426d18:	nop    DWORD PTR [rax+rax*1+0x0]
  426d20:	cmp    ecx,0x7a
  426d23:	lea    rax,[rip+0x162f3]        # 0x43d01d
  426d2a:	je     0x426a80
  426d30:	cmp    ecx,0x7c
  426d33:	lea    rax,[rip+0x15f2f]        # 0x43cc69
  426d3a:	jne    0x426ae0
  426d40:	repz ret 
  426d42:	cmp    ecx,0x2777
  426d48:	je     0x426df0
  426d4e:	cmp    ecx,0x2778
  426d54:	lea    rax,[rip+0x1618d]        # 0x43cee8
  426d5b:	jne    0x426ae0
  426d61:	repz ret 
  426d63:	cmp    ecx,0x277d
  426d69:	lea    rax,[rip+0x16204]        # 0x43cf74
  426d70:	je     0x426a80
  426d76:	cmp    ecx,0x277e
  426d7c:	jne    0x426ae0
  426d82:	lea    rax,[rip+0x1613d]        # 0x43cec6
  426d89:	ret    
  426d8a:	nop    WORD PTR [rax+rax*1+0x0]
  426d90:	test   ecx,ecx
  426d92:	lea    rax,[rip+0x15ea7]        # 0x43cc40
  426d99:	jne    0x426ae0
  426d9f:	repz ret 
  426da1:	lea    rax,[rip+0x160b0]        # 0x43ce58
  426da8:	ret    
  426da9:	nop    DWORD PTR [rax+0x0]
  426db0:	lea    rax,[rip+0x15edf]        # 0x43cc96
  426db7:	ret    
  426db8:	nop    DWORD PTR [rax+rax*1+0x0]
  426dc0:	lea    rax,[rip+0x16141]        # 0x43cf08
  426dc7:	ret    
  426dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  426dd0:	lea    rax,[rip+0x15f84]        # 0x43cd5b
  426dd7:	ret    
  426dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  426de0:	lea    rax,[rip+0x16264]        # 0x43d04b
  426de7:	ret    
  426de8:	nop    DWORD PTR [rax+rax*1+0x0]
  426df0:	lea    rax,[rip+0x160df]        # 0x43ced6
  426df7:	ret    
  426df8:	nop    DWORD PTR [rax+rax*1+0x0]
  426e00:	lea    rax,[rip+0x15ea9]        # 0x43ccb0
  426e07:	ret    
  426e08:	nop
  426e09:	nop
  426e0a:	nop
  426e0b:	nop
  426e0c:	nop
  426e0d:	nop
  426e0e:	nop
  426e0f:	nop
  426e10:	jmp    QWORD PTR [rip+0x217e2]        # 0x4485f8
  426e16:	nop
  426e17:	nop
  426e18:	jmp    QWORD PTR [rip+0x217d2]        # 0x4485f0
  426e1e:	nop
  426e1f:	nop
  426e20:	jmp    QWORD PTR [rip+0x217c2]        # 0x4485e8
  426e26:	nop
  426e27:	nop
  426e28:	jmp    QWORD PTR [rip+0x217b2]        # 0x4485e0
  426e2e:	nop
  426e2f:	nop
  426e30:	jmp    QWORD PTR [rip+0x2177a]        # 0x4485b0
  426e36:	nop
  426e37:	nop
  426e38:	jmp    QWORD PTR [rip+0x21762]        # 0x4485a0
  426e3e:	nop
  426e3f:	nop
  426e40:	jmp    QWORD PTR [rip+0x21732]        # 0x448578
  426e46:	nop
  426e47:	nop
  426e48:	jmp    QWORD PTR [rip+0x21722]        # 0x448570
  426e4e:	nop
  426e4f:	nop
  426e50:	jmp    QWORD PTR [rip+0x21702]        # 0x448558
  426e56:	nop
  426e57:	nop
  426e58:	jmp    QWORD PTR [rip+0x216ea]        # 0x448548
  426e5e:	nop
  426e5f:	nop
  426e60:	jmp    QWORD PTR [rip+0x216da]        # 0x448540
  426e66:	nop
  426e67:	nop
  426e68:	jmp    QWORD PTR [rip+0x216ba]        # 0x448528
  426e6e:	nop
  426e6f:	nop
  426e70:	jmp    QWORD PTR [rip+0x2169a]        # 0x448510
  426e76:	nop
  426e77:	nop
  426e78:	jmp    QWORD PTR [rip+0x215fa]        # 0x448478
  426e7e:	nop
  426e7f:	nop
  426e80:	jmp    QWORD PTR [rip+0x215d2]        # 0x448458
  426e86:	nop
  426e87:	nop
  426e88:	jmp    QWORD PTR [rip+0x215c2]        # 0x448450
  426e8e:	nop
  426e8f:	nop
  426e90:	jmp    QWORD PTR [rip+0x21412]        # 0x4482a8
  426e96:	nop
  426e97:	nop
  426e98:	jmp    QWORD PTR [rip+0x21072]        # 0x447f10
  426e9e:	nop
  426e9f:	nop
  426ea0:	jmp    QWORD PTR [rip+0x21c52]        # 0x448af8
  426ea6:	nop
  426ea7:	nop
  426ea8:	jmp    QWORD PTR [rip+0x21c42]        # 0x448af0
  426eae:	nop
  426eaf:	nop
  426eb0:	jmp    QWORD PTR [rip+0x21c32]        # 0x448ae8
  426eb6:	nop
  426eb7:	nop
  426eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  426ec0:	push   rbx
  426ec1:	sub    rsp,0x30
  426ec5:	mov    rbx,rcx
  426ec8:	mov    rcx,QWORD PTR [rip+0x1f349]        # 0x446218
  426ecf:	call   0x427470
  426ed4:	cmp    rax,0xffffffffffffffff
  426ed8:	mov    QWORD PTR [rsp+0x20],rax
  426edd:	je     0x426f55
  426edf:	mov    ecx,0x8
  426ee4:	call   0x42dfb8
  426ee9:	mov    rcx,QWORD PTR [rip+0x1f328]        # 0x446218
  426ef0:	call   0x427470
  426ef5:	mov    rcx,QWORD PTR [rip+0x1f324]        # 0x446220
  426efc:	mov    QWORD PTR [rsp+0x20],rax
  426f01:	call   0x427470
  426f06:	lea    rdx,[rsp+0x20]
  426f0b:	lea    r8,[rsp+0x28]
  426f10:	mov    rcx,rbx
  426f13:	mov    QWORD PTR [rsp+0x28],rax
  426f18:	call   0x42e058
  426f1d:	mov    rcx,QWORD PTR [rsp+0x20]
  426f22:	mov    rbx,rax
  426f25:	call   0x427480
  426f2a:	mov    rcx,QWORD PTR [rsp+0x28]
  426f2f:	mov    QWORD PTR [rip+0x1f2e2],rax        # 0x446218
  426f36:	call   0x427480
  426f3b:	mov    ecx,0x8
  426f40:	mov    QWORD PTR [rip+0x1f2d9],rax        # 0x446220
  426f47:	call   0x42df80
  426f4c:	mov    rax,rbx
  426f4f:	add    rsp,0x30
  426f53:	pop    rbx
  426f54:	ret    
  426f55:	mov    rax,QWORD PTR [rip+0x16974]        # 0x43d8d0
  426f5c:	mov    rcx,rbx
  426f5f:	call   QWORD PTR [rax]
  426f61:	add    rsp,0x30
  426f65:	pop    rbx
  426f66:	ret    
  426f67:	nop    WORD PTR [rax+rax*1+0x0]
  426f70:	sub    rsp,0x28
  426f74:	call   0x426ec0
  426f79:	test   rax,rax
  426f7c:	sete   al
  426f7f:	movzx  eax,al
  426f82:	neg    eax
  426f84:	add    rsp,0x28
  426f88:	ret    
  426f89:	nop
  426f8a:	nop
  426f8b:	nop
  426f8c:	nop
  426f8d:	nop
  426f8e:	nop
  426f8f:	nop
  426f90:	sub    rsp,0x28
  426f94:	mov    rax,QWORD PTR [rip+0xaef5]        # 0x431e90
  426f9b:	mov    rax,QWORD PTR [rax]
  426f9e:	test   rax,rax
  426fa1:	je     0x426fc0
  426fa3:	call   rax
  426fa5:	mov    rax,QWORD PTR [rip+0xaee4]        # 0x431e90
  426fac:	lea    rdx,[rax+0x8]
  426fb0:	mov    rax,QWORD PTR [rax+0x8]
  426fb4:	mov    QWORD PTR [rip+0xaed5],rdx        # 0x431e90
  426fbb:	test   rax,rax
  426fbe:	jne    0x426fa3
  426fc0:	add    rsp,0x28
  426fc4:	ret    
  426fc5:	nop
  426fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426fd0:	push   rsi
  426fd1:	push   rbx
  426fd2:	sub    rsp,0x28
  426fd6:	mov    rsi,QWORD PTR [rip+0x16853]        # 0x43d830
  426fdd:	mov    rax,QWORD PTR [rsi]
  426fe0:	cmp    eax,0xffffffff
  426fe3:	mov    ebx,eax
  426fe5:	je     0x427010
  426fe7:	test   ebx,ebx
  426fe9:	je     0x426ffa
  426feb:	nop    DWORD PTR [rax+rax*1+0x0]
  426ff0:	mov    eax,ebx
  426ff2:	call   QWORD PTR [rsi+rax*8]
  426ff5:	sub    ebx,0x1
  426ff8:	jne    0x426ff0
  426ffa:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x426f90
  427001:	add    rsp,0x28
  427005:	pop    rbx
  427006:	pop    rsi
  427007:	jmp    0x426f70
  42700c:	nop    DWORD PTR [rax+0x0]
  427010:	xor    ebx,ebx
  427012:	jmp    0x427016
  427014:	mov    ebx,eax
  427016:	lea    edx,[rbx+0x1]
  427019:	cmp    QWORD PTR [rsi+rdx*8],0x0
  42701e:	mov    rax,rdx
  427021:	jne    0x427014
  427023:	jmp    0x426fe7
  427025:	nop
  427026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427030:	mov    eax,DWORD PTR [rip+0x1db0a]        # 0x444b40
  427036:	test   eax,eax
  427038:	je     0x427040
  42703a:	repz ret 
  42703c:	nop    DWORD PTR [rax+0x0]
  427040:	mov    DWORD PTR [rip+0x1daf6],0x1        # 0x444b40
  42704a:	jmp    0x426fd0
  42704c:	nop
  42704d:	nop
  42704e:	nop
  42704f:	nop
  427050:	mov    rax,QWORD PTR [rip+0x21791]        # 0x4487e8
  427057:	rex.W jmp rax
  42705a:	nop
  42705b:	nop
  42705c:	nop
  42705d:	nop
  42705e:	nop
  42705f:	nop
  427060:	xor    eax,eax
  427062:	ret    
  427063:	nop
  427064:	nop
  427065:	nop
  427066:	nop
  427067:	nop
  427068:	nop
  427069:	nop
  42706a:	nop
  42706b:	nop
  42706c:	nop
  42706d:	nop
  42706e:	nop
  42706f:	nop
  427070:	push   r12
  427072:	push   rbp
  427073:	push   rdi
  427074:	push   rsi
  427075:	push   rbx
  427076:	sub    rsp,0x40
  42707a:	mov    rbx,QWORD PTR [rip+0xaeaf]        # 0x431f30
  427081:	movabs rax,0x2b992ddfa232
  42708b:	mov    QWORD PTR [rsp+0x20],0x0
  427094:	cmp    rbx,rax
  427097:	je     0x4270b0
  427099:	not    rbx
  42709c:	mov    QWORD PTR [rip+0xae9d],rbx        # 0x431f40
  4270a3:	add    rsp,0x40
  4270a7:	pop    rbx
  4270a8:	pop    rsi
  4270a9:	pop    rdi
  4270aa:	pop    rbp
  4270ab:	pop    r12
  4270ad:	ret    
  4270ae:	xchg   ax,ax
  4270b0:	lea    rcx,[rsp+0x20]
  4270b5:	call   QWORD PTR [rip+0x21655]        # 0x448710
  4270bb:	mov    r12,QWORD PTR [rsp+0x20]
  4270c0:	call   QWORD PTR [rip+0x2160a]        # 0x4486d0
  4270c6:	mov    ebp,eax
  4270c8:	call   QWORD PTR [rip+0x2160a]        # 0x4486d8
  4270ce:	mov    edi,eax
  4270d0:	call   QWORD PTR [rip+0x21642]        # 0x448718
  4270d6:	lea    rcx,[rsp+0x30]
  4270db:	mov    esi,eax
  4270dd:	call   QWORD PTR [rip+0x21665]        # 0x448748
  4270e3:	xor    r12,QWORD PTR [rsp+0x30]
  4270e8:	mov    edx,edi
  4270ea:	movabs rax,0xffffffffffff
  4270f4:	xor    rbp,r12
  4270f7:	mov    rdi,rbp
  4270fa:	xor    rdi,rdx
  4270fd:	mov    edx,esi
  4270ff:	xor    rdi,rdx
  427102:	mov    rsi,rdi
  427105:	and    rsi,rax
  427108:	cmp    rsi,rbx
  42710b:	je     0x427130
  42710d:	mov    rax,rsi
  427110:	not    rax
  427113:	mov    QWORD PTR [rip+0xae16],rsi        # 0x431f30
  42711a:	mov    QWORD PTR [rip+0xae1f],rax        # 0x431f40
  427121:	add    rsp,0x40
  427125:	pop    rbx
  427126:	pop    rsi
  427127:	pop    rdi
  427128:	pop    rbp
  427129:	pop    r12
  42712b:	ret    
  42712c:	nop    DWORD PTR [rax+0x0]
  427130:	movabs rax,0xffffd466d2205dcc
  42713a:	movabs rsi,0x2b992ddfa233
  427144:	jmp    0x427113
  427146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427150:	push   rbp
  427151:	push   rsi
  427152:	push   rbx
  427153:	mov    rbp,rsp
  427156:	sub    rsp,0x70
  42715a:	mov    rsi,rcx
  42715d:	lea    rcx,[rip+0x1da1c]        # 0x444b80
  427164:	call   QWORD PTR [rip+0x215ee]        # 0x448758
  42716a:	mov    rbx,QWORD PTR [rip+0x1db07]        # 0x444c78
  427171:	xor    r8d,r8d
  427174:	lea    rdx,[rbp-0x28]
  427178:	mov    rcx,rbx
  42717b:	call   QWORD PTR [rip+0x215df]        # 0x448760
  427181:	test   rax,rax
  427184:	mov    r9,rax
  427187:	je     0x427230
  42718d:	lea    rax,[rbp-0x20]
  427191:	mov    QWORD PTR [rsp+0x38],0x0
  42719a:	mov    r8,rbx
  42719d:	mov    rdx,QWORD PTR [rbp-0x28]
  4271a1:	xor    ecx,ecx
  4271a3:	mov    QWORD PTR [rsp+0x30],rax
  4271a8:	lea    rax,[rbp-0x18]
  4271ac:	mov    QWORD PTR [rsp+0x28],rax
  4271b1:	lea    rax,[rip+0x1d9c8]        # 0x444b80
  4271b8:	mov    QWORD PTR [rsp+0x20],rax
  4271bd:	call   QWORD PTR [rip+0x215a5]        # 0x448768
  4271c3:	mov    rax,QWORD PTR [rip+0x1daae]        # 0x444c78
  4271ca:	xor    ecx,ecx
  4271cc:	mov    QWORD PTR [rip+0x1da2d],rsi        # 0x444c00
  4271d3:	mov    DWORD PTR [rip+0x1dea3],0xc0000409        # 0x445080
  4271dd:	mov    DWORD PTR [rip+0x1de9d],0x1        # 0x445084
  4271e7:	mov    QWORD PTR [rip+0x1dea2],rax        # 0x445090
  4271ee:	mov    rax,QWORD PTR [rip+0xad3b]        # 0x431f30
  4271f5:	mov    QWORD PTR [rbp-0x10],rax
  4271f9:	mov    rax,QWORD PTR [rip+0xad40]        # 0x431f40
  427200:	mov    QWORD PTR [rbp-0x8],rax
  427204:	call   QWORD PTR [rip+0x21566]        # 0x448770
  42720a:	lea    rcx,[rip+0x15e8f]        # 0x43d0a0
  427211:	call   QWORD PTR [rip+0x21579]        # 0x448790
  427217:	call   QWORD PTR [rip+0x214ab]        # 0x4486c8
  42721d:	mov    edx,0xc0000409
  427222:	mov    rcx,rax
  427225:	call   QWORD PTR [rip+0x21555]        # 0x448780
  42722b:	call   0x42df78
  427230:	mov    rax,QWORD PTR [rbp+0x18]
  427234:	mov    QWORD PTR [rip+0x1da3d],rax        # 0x444c78
  42723b:	lea    rax,[rbp+0x8]
  42723f:	mov    QWORD PTR [rip+0x1d9d2],rax        # 0x444c18
  427246:	jmp    0x4271c3
  42724b:	nop
  42724c:	nop
  42724d:	nop
  42724e:	nop
  42724f:	nop
  427250:	sub    rsp,0x28
  427254:	test   edx,edx
  427256:	je     0x427270
  427258:	cmp    edx,0x3
  42725b:	je     0x427270
  42725d:	mov    eax,0x1
  427262:	add    rsp,0x28
  427266:	ret    
  427267:	nop    WORD PTR [rax+rax*1+0x0]
  427270:	call   0x427f60
  427275:	mov    eax,0x1
  42727a:	add    rsp,0x28
  42727e:	ret    
  42727f:	nop
  427280:	push   rsi
  427281:	push   rbx
  427282:	sub    rsp,0x28
  427286:	mov    rax,QWORD PTR [rip+0x16583]        # 0x43d810
  42728d:	cmp    DWORD PTR [rax],0x2
  427290:	je     0x427298
  427292:	mov    DWORD PTR [rax],0x2
  427298:	cmp    edx,0x2
  42729b:	je     0x4272b0
  42729d:	cmp    edx,0x1
  4272a0:	je     0x4272e2
  4272a2:	mov    eax,0x1
  4272a7:	add    rsp,0x28
  4272ab:	pop    rbx
  4272ac:	pop    rsi
  4272ad:	ret    
  4272ae:	xchg   ax,ax
  4272b0:	lea    rbx,[rip+0x24da9]        # 0x44c060
  4272b7:	lea    rsi,[rip+0x24da2]        # 0x44c060
  4272be:	cmp    rbx,rsi
  4272c1:	je     0x4272a2
  4272c3:	mov    rax,QWORD PTR [rbx]
  4272c6:	test   rax,rax
  4272c9:	je     0x4272cd
  4272cb:	call   rax
  4272cd:	add    rbx,0x8
  4272d1:	cmp    rbx,rsi
  4272d4:	jne    0x4272c3
  4272d6:	mov    eax,0x1
  4272db:	add    rsp,0x28
  4272df:	pop    rbx
  4272e0:	pop    rsi
  4272e1:	ret    
  4272e2:	call   0x427f60
  4272e7:	jmp    0x4272a2
  4272e9:	nop    DWORD PTR [rax+0x0]
  4272f0:	xor    eax,eax
  4272f2:	ret    
  4272f3:	nop
  4272f4:	nop
  4272f5:	nop
  4272f6:	nop
  4272f7:	nop
  4272f8:	nop
  4272f9:	nop
  4272fa:	nop
  4272fb:	nop
  4272fc:	nop
  4272fd:	nop
  4272fe:	nop
  4272ff:	nop
  427300:	sub    rsp,0x58
  427304:	mov    rax,QWORD PTR [rip+0x1de55]        # 0x445160
  42730b:	test   rax,rax
  42730e:	je     0x42733c
  427310:	movsd  xmm0,QWORD PTR [rsp+0x80]
  427319:	mov    DWORD PTR [rsp+0x20],ecx
  42731d:	lea    rcx,[rsp+0x20]
  427322:	mov    QWORD PTR [rsp+0x28],rdx
  427327:	movsd  QWORD PTR [rsp+0x30],xmm2
  42732d:	movsd  QWORD PTR [rsp+0x38],xmm3
  427333:	movsd  QWORD PTR [rsp+0x40],xmm0
  427339:	call   rax
  42733b:	nop
  42733c:	add    rsp,0x58
  427340:	ret    
  427341:	nop    DWORD PTR [rax+rax*1+0x0]
  427346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427350:	mov    QWORD PTR [rip+0x1de09],rcx        # 0x445160
  427357:	jmp    0x42e030
  42735c:	nop    DWORD PTR [rax+0x0]
  427360:	push   rsi
  427361:	push   rbx
  427362:	sub    rsp,0x78
  427366:	movaps XMMWORD PTR [rsp+0x40],xmm6
  42736b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  427370:	movaps XMMWORD PTR [rsp+0x60],xmm8
  427376:	cmp    DWORD PTR [rcx],0x6
  427379:	ja     0x427450
  42737f:	mov    edx,DWORD PTR [rcx]
  427381:	lea    rax,[rip+0x15e5c]        # 0x43d1e4
  427388:	movsxd rdx,DWORD PTR [rax+rdx*4]
  42738c:	add    rax,rdx
  42738f:	jmp    rax
  427391:	lea    rbx,[rip+0x15d28]        # 0x43d0c0
  427398:	nop    DWORD PTR [rax+rax*1+0x0]
  4273a0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  4273a6:	mov    rsi,QWORD PTR [rcx+0x8]
  4273aa:	movsd  xmm7,QWORD PTR [rcx+0x18]
  4273af:	movsd  xmm6,QWORD PTR [rcx+0x10]
  4273b4:	call   0x42e048
  4273b9:	movsd  QWORD PTR [rsp+0x30],xmm8
  4273c0:	lea    rcx,[rax+0x60]
  4273c4:	lea    rdx,[rip+0x15ded]        # 0x43d1b8
  4273cb:	movsd  QWORD PTR [rsp+0x28],xmm7
  4273d1:	mov    r9,rsi
  4273d4:	mov    r8,rbx
  4273d7:	movsd  QWORD PTR [rsp+0x20],xmm6
  4273dd:	call   0x42df28
  4273e2:	nop
  4273e3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4273e8:	xor    eax,eax
  4273ea:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4273ef:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4273f5:	add    rsp,0x78
  4273f9:	pop    rbx
  4273fa:	pop    rsi
  4273fb:	ret    
  4273fc:	nop    DWORD PTR [rax+0x0]
  427400:	lea    rbx,[rip+0x15cd8]        # 0x43d0df
  427407:	jmp    0x4273a0
  427409:	nop    DWORD PTR [rax+0x0]
  427410:	lea    rbx,[rip+0x15ce9]        # 0x43d100
  427417:	jmp    0x4273a0
  427419:	nop    DWORD PTR [rax+0x0]
  427420:	lea    rbx,[rip+0x15d49]        # 0x43d170
  427427:	jmp    0x4273a0
  42742c:	nop    DWORD PTR [rax+0x0]
  427430:	lea    rbx,[rip+0x15d11]        # 0x43d148
  427437:	jmp    0x4273a0
  42743c:	nop    DWORD PTR [rax+0x0]
  427440:	lea    rbx,[rip+0x15cd9]        # 0x43d120
  427447:	jmp    0x4273a0
  42744c:	nop    DWORD PTR [rax+0x0]
  427450:	lea    rbx,[rip+0x15d4f]        # 0x43d1a6
  427457:	jmp    0x4273a0
  42745c:	nop
  42745d:	nop
  42745e:	nop
  42745f:	nop
  427460:	fninit 
  427462:	ret    
  427463:	nop
  427464:	nop
  427465:	nop
  427466:	nop
  427467:	nop
  427468:	nop
  427469:	nop
  42746a:	nop
  42746b:	nop
  42746c:	nop
  42746d:	nop
  42746e:	nop
  42746f:	nop
  427470:	mov    rax,rcx
  427473:	ret    
  427474:	xchg   ax,ax
  427476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427480:	mov    rax,rcx
  427483:	ret    
  427484:	nop
  427485:	nop
  427486:	nop
  427487:	nop
  427488:	nop
  427489:	nop
  42748a:	nop
  42748b:	nop
  42748c:	nop
  42748d:	nop
  42748e:	nop
  42748f:	nop
  427490:	push   rsi
  427491:	push   rbx
  427492:	sub    rsp,0x38
  427496:	lea    rax,[rsp+0x58]
  42749b:	mov    rbx,rcx
  42749e:	mov    QWORD PTR [rsp+0x58],rdx
  4274a3:	mov    QWORD PTR [rsp+0x60],r8
  4274a8:	mov    QWORD PTR [rsp+0x68],r9
  4274ad:	mov    QWORD PTR [rsp+0x28],rax
  4274b2:	call   0x42e048
  4274b7:	lea    rcx,[rip+0x15d42]        # 0x43d200
  4274be:	lea    r9,[rax+0x60]
  4274c2:	mov    r8d,0x1b
  4274c8:	mov    edx,0x1
  4274cd:	call   0x42dee0
  4274d2:	mov    rsi,QWORD PTR [rsp+0x28]
  4274d7:	call   0x42e048
  4274dc:	lea    rcx,[rax+0x60]
  4274e0:	mov    rdx,rbx
  4274e3:	mov    r8,rsi
  4274e6:	call   0x42dde0
  4274eb:	call   0x42df78
  4274f0:	nop
  4274f1:	nop    DWORD PTR [rax+rax*1+0x0]
  4274f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427500:	push   r13
  427502:	push   r12
  427504:	push   rbp
  427505:	push   rdi
  427506:	push   rsi
  427507:	push   rbx
  427508:	sub    rsp,0x58
  42750c:	movsxd rbp,DWORD PTR [rip+0x1dc71]        # 0x445184
  427513:	mov    rbx,rcx
  427516:	mov    rsi,rdx
  427519:	mov    rdi,r8
  42751c:	test   ebp,ebp
  42751e:	jle    0x42761a
  427524:	mov    rax,QWORD PTR [rip+0x1dc5d]        # 0x445188
  42752b:	xor    r9d,r9d
  42752e:	add    rax,0x8
  427532:	mov    r10,QWORD PTR [rax]
  427535:	cmp    rbx,r10
  427538:	jb     0x42754e
  42753a:	mov    rdx,QWORD PTR [rax+0x8]
  42753e:	mov    r11d,DWORD PTR [rdx+0x8]
  427542:	add    r10,r11
  427545:	cmp    rbx,r10
  427548:	jb     0x427600
  42754e:	add    r9d,0x1
  427552:	add    rax,0x18
  427556:	cmp    r9d,ebp
  427559:	jne    0x427532
  42755b:	mov    rcx,rbx
  42755e:	call   0x428170
  427563:	test   rax,rax
  427566:	mov    r12,rax
  427569:	je     0x427652
  42756f:	lea    rbp,[rbp+rbp*2+0x0]
  427574:	shl    rbp,0x3
  427578:	mov    r13,rbp
  42757b:	add    r13,QWORD PTR [rip+0x1dc06]        # 0x445188
  427582:	mov    QWORD PTR [r13+0x10],rax
  427586:	mov    DWORD PTR [r13+0x0],0x0
  42758e:	call   0x428290
  427593:	mov    edx,DWORD PTR [r12+0xc]
  427598:	mov    r8d,0x30
  42759e:	add    rax,rdx
  4275a1:	lea    rdx,[rsp+0x20]
  4275a6:	mov    QWORD PTR [r13+0x8],rax
  4275aa:	mov    rax,QWORD PTR [rip+0x1dbd7]        # 0x445188
  4275b1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  4275b6:	call   QWORD PTR [rip+0x211e4]        # 0x4487a0
  4275bc:	test   rax,rax
  4275bf:	je     0x427635
  4275c1:	mov    eax,DWORD PTR [rsp+0x44]
  4275c5:	lea    edx,[rax-0x4]
  4275c8:	and    edx,0xfffffffb
  4275cb:	je     0x4275f9
  4275cd:	sub    eax,0x40
  4275d0:	and    eax,0xffffffbf
  4275d3:	je     0x4275f9
  4275d5:	mov    r9,rbp
  4275d8:	add    r9,QWORD PTR [rip+0x1dba9]        # 0x445188
  4275df:	mov    r8d,0x40
  4275e5:	mov    rdx,QWORD PTR [rsp+0x38]
  4275ea:	mov    rcx,QWORD PTR [rsp+0x20]
  4275ef:	call   QWORD PTR [rip+0x211a3]        # 0x448798
  4275f5:	test   eax,eax
  4275f7:	je     0x427621
  4275f9:	add    DWORD PTR [rip+0x1db84],0x1        # 0x445184
  427600:	mov    r8,rdi
  427603:	mov    rdx,rsi
  427606:	mov    rcx,rbx
  427609:	add    rsp,0x58
  42760d:	pop    rbx
  42760e:	pop    rsi
  42760f:	pop    rdi
  427610:	pop    rbp
  427611:	pop    r12
  427613:	pop    r13
  427615:	jmp    0x42de98
  42761a:	xor    ebp,ebp
  42761c:	jmp    0x42755b
  427621:	call   QWORD PTR [rip+0x210c1]        # 0x4486e8
  427627:	lea    rcx,[rip+0x15c4a]        # 0x43d278
  42762e:	mov    edx,eax
  427630:	call   0x427490
  427635:	mov    rax,QWORD PTR [rip+0x1db4c]        # 0x445188
  42763c:	mov    edx,DWORD PTR [r12+0x8]
  427641:	lea    rcx,[rip+0x15bf8]        # 0x43d240
  427648:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  42764d:	call   0x427490
  427652:	lea    rcx,[rip+0x15bc7]        # 0x43d220
  427659:	mov    rdx,rbx
  42765c:	call   0x427490
  427661:	nop
  427662:	nop    DWORD PTR [rax+0x0]
  427666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427670:	push   rbp
  427671:	push   r14
  427673:	push   r13
  427675:	push   r12
  427677:	push   rdi
  427678:	push   rsi
  427679:	push   rbx
  42767a:	mov    rbp,rsp
  42767d:	sub    rsp,0x60
  427681:	mov    ebx,DWORD PTR [rip+0x1daf9]        # 0x445180
  427687:	test   ebx,ebx
  427689:	je     0x4276a0
  42768b:	mov    rsp,rbp
  42768e:	pop    rbx
  42768f:	pop    rsi
  427690:	pop    rdi
  427691:	pop    r12
  427693:	pop    r13
  427695:	pop    r14
  427697:	pop    rbp
  427698:	ret    
  427699:	nop    DWORD PTR [rax+0x0]
  4276a0:	mov    DWORD PTR [rip+0x1dad6],0x1        # 0x445180
  4276aa:	call   0x4281c0
  4276af:	cdqe   
  4276b1:	lea    rax,[rax+rax*2]
  4276b5:	lea    rax,[rax*8+0x1e]
  4276bd:	and    rax,0xfffffffffffffff0
  4276c1:	call   0x4283e0
  4276c6:	mov    rsi,QWORD PTR [rip+0x16173]        # 0x43d840
  4276cd:	mov    rbx,QWORD PTR [rip+0x1617c]        # 0x43d850
  4276d4:	sub    rsp,rax
  4276d7:	mov    DWORD PTR [rip+0x1daa3],0x0        # 0x445184
  4276e1:	lea    rax,[rsp+0x20]
  4276e6:	mov    QWORD PTR [rip+0x1da9b],rax        # 0x445188
  4276ed:	mov    rax,rsi
  4276f0:	sub    rax,rbx
  4276f3:	cmp    rax,0x7
  4276f7:	jle    0x42768b
  4276f9:	cmp    rax,0xb
  4276fd:	jle    0x427725
  4276ff:	mov    r11d,DWORD PTR [rbx]
  427702:	test   r11d,r11d
  427705:	jne    0x427850
  42770b:	mov    r10d,DWORD PTR [rbx+0x4]
  42770f:	test   r10d,r10d
  427712:	jne    0x427850
  427718:	mov    r9d,DWORD PTR [rbx+0x8]
  42771c:	test   r9d,r9d
  42771f:	jne    0x42773c
  427721:	add    rbx,0xc
  427725:	mov    r8d,DWORD PTR [rbx]
  427728:	test   r8d,r8d
  42772b:	jne    0x427850
  427731:	mov    ecx,DWORD PTR [rbx+0x4]
  427734:	test   ecx,ecx
  427736:	jne    0x427850
  42773c:	mov    edx,DWORD PTR [rbx+0x8]
  42773f:	cmp    edx,0x1
  427742:	jne    0x42795c
  427748:	add    rbx,0xc
  42774c:	cmp    rbx,rsi
  42774f:	jae    0x42768b
  427755:	mov    r12,QWORD PTR [rip+0x16114]        # 0x43d870
  42775c:	lea    r13,[rbp-0x30]
  427760:	movabs r14,0xffffffff00000000
  42776a:	mov    ecx,DWORD PTR [rbx+0x4]
  42776d:	mov    eax,DWORD PTR [rbx]
  42776f:	movzx  edx,BYTE PTR [rbx+0x8]
  427773:	add    rax,r12
  427776:	add    rcx,r12
  427779:	cmp    edx,0x10
  42777c:	mov    r8,QWORD PTR [rax]
  42777f:	je     0x4278c6
  427785:	jbe    0x42788d
  42778b:	cmp    edx,0x20
  42778e:	je     0x42790f
  427794:	cmp    edx,0x40
  427797:	jne    0x4278fb
  42779d:	sub    r8,rax
  4277a0:	mov    rdx,r13
  4277a3:	mov    rdi,r13
  4277a6:	mov    rax,r8
  4277a9:	add    rax,QWORD PTR [rcx]
  4277ac:	mov    r8d,0x8
  4277b2:	mov    QWORD PTR [rbp-0x30],rax
  4277b6:	call   0x427500
  4277bb:	add    rbx,0xc
  4277bf:	cmp    rbx,rsi
  4277c2:	jb     0x42776a
  4277c4:	mov    eax,DWORD PTR [rip+0x1d9ba]        # 0x445184
  4277ca:	xor    ebx,ebx
  4277cc:	xor    esi,esi
  4277ce:	test   eax,eax
  4277d0:	jle    0x42768b
  4277d6:	mov    r14,QWORD PTR [rip+0x20fc3]        # 0x4487a0
  4277dd:	lea    r13,[rbp-0x34]
  4277e1:	mov    r12,QWORD PTR [rip+0x20fb0]        # 0x448798
  4277e8:	jmp    0x427803
  4277ea:	nop    WORD PTR [rax+rax*1+0x0]
  4277f0:	add    esi,0x1
  4277f3:	add    rbx,0x18
  4277f7:	cmp    esi,DWORD PTR [rip+0x1d987]        # 0x445184
  4277fd:	jge    0x42768b
  427803:	mov    rax,rbx
  427806:	add    rax,QWORD PTR [rip+0x1d97b]        # 0x445188
  42780d:	mov    edx,DWORD PTR [rax]
  42780f:	test   edx,edx
  427811:	je     0x4277f0
  427813:	mov    rcx,QWORD PTR [rax+0x8]
  427817:	mov    r8d,0x30
  42781d:	mov    rdx,rdi
  427820:	call   r14
  427823:	test   rax,rax
  427826:	je     0x42793e
  42782c:	mov    rax,QWORD PTR [rip+0x1d955]        # 0x445188
  427833:	mov    r9,r13
  427836:	mov    rdx,QWORD PTR [rbp-0x18]
  42783a:	mov    rcx,QWORD PTR [rbp-0x30]
  42783e:	mov    r8d,DWORD PTR [rax+rbx*1]
  427842:	call   r12
  427845:	jmp    0x4277f0
  427847:	nop    WORD PTR [rax+rax*1+0x0]
  427850:	cmp    rbx,rsi
  427853:	jae    0x42768b
  427859:	mov    r12,QWORD PTR [rip+0x16010]        # 0x43d870
  427860:	lea    rdi,[rbp-0x30]
  427864:	mov    ecx,DWORD PTR [rbx+0x4]
  427867:	mov    eax,DWORD PTR [rbx]
  427869:	mov    r8d,0x4
  42786f:	mov    rdx,rdi
  427872:	add    rbx,0x8
  427876:	add    rcx,r12
  427879:	add    eax,DWORD PTR [rcx]
  42787b:	mov    DWORD PTR [rbp-0x30],eax
  42787e:	call   0x427500
  427883:	cmp    rbx,rsi
  427886:	jb     0x427864
  427888:	jmp    0x4277c4
  42788d:	cmp    edx,0x8
  427890:	jne    0x4278fb
  427892:	movzx  edx,BYTE PTR [rcx]
  427895:	mov    rdi,r13
  427898:	mov    r10,rdx
  42789b:	or     r10,0xffffffffffffff00
  4278a2:	test   dl,dl
  4278a4:	cmovs  rdx,r10
  4278a8:	sub    rdx,rax
  4278ab:	lea    rax,[r8+rdx*1]
  4278af:	mov    r8d,0x1
  4278b5:	mov    rdx,r13
  4278b8:	mov    QWORD PTR [rbp-0x30],rax
  4278bc:	call   0x427500
  4278c1:	jmp    0x4277bb
  4278c6:	movzx  edx,WORD PTR [rcx]
  4278c9:	mov    rdi,r13
  4278cc:	mov    r10,rdx
  4278cf:	or     r10,0xffffffffffff0000
  4278d6:	test   dx,dx
  4278d9:	cmovs  rdx,r10
  4278dd:	sub    rdx,rax
  4278e0:	lea    rax,[r8+rdx*1]
  4278e4:	mov    r8d,0x2
  4278ea:	mov    rdx,r13
  4278ed:	mov    QWORD PTR [rbp-0x30],rax
  4278f1:	call   0x427500
  4278f6:	jmp    0x4277bb
  4278fb:	lea    rcx,[rip+0x159d6]        # 0x43d2d8
  427902:	mov    QWORD PTR [rbp-0x30],0x0
  42790a:	call   0x427490
  42790f:	mov    edx,DWORD PTR [rcx]
  427911:	mov    rdi,r13
  427914:	mov    r10,rdx
  427917:	or     r10,r14
  42791a:	test   edx,edx
  42791c:	cmovs  rdx,r10
  427920:	sub    rdx,rax
  427923:	lea    rax,[r8+rdx*1]
  427927:	mov    r8d,0x4
  42792d:	mov    rdx,r13
  427930:	mov    QWORD PTR [rbp-0x30],rax
  427934:	call   0x427500
  427939:	jmp    0x4277bb
  42793e:	add    rbx,QWORD PTR [rip+0x1d843]        # 0x445188
  427945:	lea    rcx,[rip+0x158f4]        # 0x43d240
  42794c:	mov    rax,QWORD PTR [rbx+0x10]
  427950:	mov    r8,QWORD PTR [rbx+0x8]
  427954:	mov    edx,DWORD PTR [rax+0x8]
  427957:	call   0x427490
  42795c:	lea    rcx,[rip+0x1593d]        # 0x43d2a0
  427963:	call   0x427490
  427968:	nop
  427969:	nop
  42796a:	nop
  42796b:	nop
  42796c:	nop
  42796d:	nop
  42796e:	nop
  42796f:	nop
  427970:	sub    rsp,0x28
  427974:	mov    eax,DWORD PTR [rcx]
  427976:	cmp    eax,0xc0000091
  42797b:	ja     0x4279e0
  42797d:	cmp    eax,0xc000008d
  427982:	jae    0x4279ff
  427984:	cmp    eax,0xc0000008
  427989:	je     0x427aa0
  42798f:	ja     0x427a70
  427995:	cmp    eax,0x80000002
  42799a:	je     0x427aa0
  4279a0:	cmp    eax,0xc0000005
  4279a5:	jne    0x427a7e
  4279ab:	xor    edx,edx
  4279ad:	mov    ecx,0xb
  4279b2:	call   0x42de60
  4279b7:	cmp    rax,0x1
  4279bb:	je     0x427b00
  4279c1:	test   rax,rax
  4279c4:	je     0x427ae0
  4279ca:	mov    ecx,0xb
  4279cf:	call   rax
  4279d1:	xor    eax,eax
  4279d3:	add    rsp,0x28
  4279d7:	ret    
  4279d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4279e0:	cmp    eax,0xc0000094
  4279e5:	je     0x427ab0
  4279eb:	ja     0x427a30
  4279ed:	cmp    eax,0xc0000092
  4279f2:	je     0x427aa0
  4279f8:	cmp    eax,0xc0000093
  4279fd:	jne    0x427a7e
  4279ff:	xor    edx,edx
  427a01:	mov    ecx,0x8
  427a06:	call   0x42de60
  427a0b:	cmp    rax,0x1
  427a0f:	mov    rdx,rax
  427a12:	je     0x427a88
  427a14:	test   rdx,rdx
  427a17:	mov    eax,0x1
  427a1c:	je     0x4279d3
  427a1e:	mov    ecx,0x8
  427a23:	call   rdx
  427a25:	xor    eax,eax
  427a27:	add    rsp,0x28
  427a2b:	ret    
  427a2c:	nop    DWORD PTR [rax+0x0]
  427a30:	cmp    eax,0xc0000095
  427a35:	je     0x427aa0
  427a37:	cmp    eax,0xc0000096
  427a3c:	jne    0x427a7e
  427a3e:	xor    edx,edx
  427a40:	mov    ecx,0x4
  427a45:	call   0x42de60
  427a4a:	cmp    rax,0x1
  427a4e:	je     0x427aea
  427a54:	test   rax,rax
  427a57:	je     0x427ae0
  427a5d:	mov    ecx,0x4
  427a62:	call   rax
  427a64:	xor    eax,eax
  427a66:	jmp    0x4279d3
  427a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  427a70:	cmp    eax,0xc000001d
  427a75:	je     0x427a3e
  427a77:	cmp    eax,0xc000008c
  427a7c:	je     0x427aa0
  427a7e:	mov    eax,0x1
  427a83:	add    rsp,0x28
  427a87:	ret    
  427a88:	mov    edx,0x1
  427a8d:	mov    ecx,0x8
  427a92:	call   0x42de60
  427a97:	call   0x427460
  427a9c:	nop    DWORD PTR [rax+0x0]
  427aa0:	xor    eax,eax
  427aa2:	add    rsp,0x28
  427aa6:	ret    
  427aa7:	nop    WORD PTR [rax+rax*1+0x0]
  427ab0:	xor    edx,edx
  427ab2:	mov    ecx,0x8
  427ab7:	call   0x42de60
  427abc:	cmp    rax,0x1
  427ac0:	mov    rdx,rax
  427ac3:	jne    0x427a14
  427ac9:	mov    edx,0x1
  427ace:	mov    ecx,0x8
  427ad3:	call   0x42de60
  427ad8:	xor    eax,eax
  427ada:	jmp    0x4279d3
  427adf:	nop
  427ae0:	mov    eax,0x4
  427ae5:	add    rsp,0x28
  427ae9:	ret    
  427aea:	mov    edx,0x1
  427aef:	mov    ecx,0x4
  427af4:	call   0x42de60
  427af9:	xor    eax,eax
  427afb:	jmp    0x4279d3
  427b00:	mov    edx,0x1
  427b05:	mov    ecx,0xb
  427b0a:	call   0x42de60
  427b0f:	xor    eax,eax
  427b11:	jmp    0x4279d3
  427b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427b20:	push   r12
  427b22:	push   rbp
  427b23:	push   rdi
  427b24:	push   rsi
  427b25:	push   rbx
  427b26:	sub    rsp,0x20
  427b2a:	call   0x428290
  427b2f:	mov    rbp,rax
  427b32:	mov    eax,DWORD PTR [rip+0x1d690]        # 0x4451c8
  427b38:	test   eax,eax
  427b3a:	jne    0x427b61
  427b3c:	test   rbp,rbp
  427b3f:	je     0x427b61
  427b41:	lea    rcx,[rip+0x157c8]        # 0x43d310
  427b48:	mov    DWORD PTR [rip+0x1d676],0x1        # 0x4451c8
  427b52:	call   0x4280d0
  427b57:	test   rax,rax
  427b5a:	je     0x427b70
  427b5c:	mov    eax,0x1
  427b61:	add    rsp,0x20
  427b65:	pop    rbx
  427b66:	pop    rsi
  427b67:	pop    rdi
  427b68:	pop    rbp
  427b69:	pop    r12
  427b6b:	ret    
  427b6c:	nop    DWORD PTR [rax+0x0]
  427b70:	lea    rbx,[rip+0x1d789]        # 0x445300
  427b77:	mov    ecx,0x30
  427b7c:	lea    rdx,[rip+0x1d67d]        # 0x445200
  427b83:	lea    r12,[rip+0xfffffffffffffde6]        # 0x427970
  427b8a:	xor    esi,esi
  427b8c:	mov    rdi,rbx
  427b8f:	rep stos QWORD PTR es:[rdi],rax
  427b92:	mov    rdi,rdx
  427b95:	sub    r12,rbp
  427b98:	mov    cl,0x20
  427b9a:	rep stos QWORD PTR es:[rdi],rax
  427b9d:	mov    rdi,rdx
  427ba0:	jmp    0x427bd0
  427ba2:	mov    BYTE PTR [rdi],0x9
  427ba5:	mov    DWORD PTR [rdi+0x4],r12d
  427ba9:	add    rsi,0x1
  427bad:	mov    edx,DWORD PTR [rax+0xc]
  427bb0:	add    rbx,0xc
  427bb4:	mov    DWORD PTR [rbx-0xc],edx
  427bb7:	add    edx,DWORD PTR [rax+0x8]
  427bba:	mov    rax,rdi
  427bbd:	sub    rax,rbp
  427bc0:	add    rdi,0x8
  427bc4:	mov    DWORD PTR [rbx-0x4],eax
  427bc7:	mov    DWORD PTR [rbx-0x8],edx
  427bca:	cmp    rsi,0x20
  427bce:	je     0x427c05
  427bd0:	mov    rcx,rsi
  427bd3:	call   0x428200
  427bd8:	test   rax,rax
  427bdb:	jne    0x427ba2
  427bdd:	test   rsi,rsi
  427be0:	je     0x427b5c
  427be6:	mov    edx,esi
  427be8:	nop    DWORD PTR [rax+rax*1+0x0]
  427bf0:	mov    r8,rbp
  427bf3:	lea    rcx,[rip+0x1d706]        # 0x445300
  427bfa:	call   QWORD PTR [rip+0x20b50]        # 0x448750
  427c00:	jmp    0x427b5c
  427c05:	mov    edx,0x20
  427c0a:	jmp    0x427bf0
  427c0c:	nop    DWORD PTR [rax+0x0]
  427c10:	push   rbx
  427c11:	sub    rsp,0x20
  427c15:	mov    rdx,QWORD PTR [rcx]
  427c18:	mov    eax,DWORD PTR [rdx]
  427c1a:	mov    r8d,eax
  427c1d:	and    r8d,0x20ffffff
  427c24:	cmp    r8d,0x20474343
  427c2b:	je     0x427d30
  427c31:	cmp    eax,0xc0000091
  427c36:	mov    rbx,rcx
  427c39:	ja     0x427cc0
  427c3f:	cmp    eax,0xc000008d
  427c44:	jae    0x427cd7
  427c4a:	cmp    eax,0xc0000008
  427c4f:	je     0x427c83
  427c51:	ja     0x427c90
  427c53:	cmp    eax,0x80000002
  427c58:	je     0x427c83
  427c5a:	cmp    eax,0xc0000005
  427c5f:	jne    0x427ca2
  427c61:	xor    edx,edx
  427c63:	mov    ecx,0xb
  427c68:	call   0x42de60
  427c6d:	cmp    rax,0x1
  427c71:	je     0x427da0
  427c77:	test   rax,rax
  427c7a:	je     0x427ca2
  427c7c:	mov    ecx,0xb
  427c81:	call   rax
  427c83:	mov    eax,0xffffffff
  427c88:	add    rsp,0x20
  427c8c:	pop    rbx
  427c8d:	ret    
  427c8e:	xchg   ax,ax
  427c90:	cmp    eax,0xc000001d
  427c95:	je     0x427d56
  427c9b:	cmp    eax,0xc000008c
  427ca0:	je     0x427c83
  427ca2:	mov    rax,QWORD PTR [rip+0x1d517]        # 0x4451c0
  427ca9:	test   rax,rax
  427cac:	je     0x427c88
  427cae:	mov    rcx,rbx
  427cb1:	add    rsp,0x20
  427cb5:	pop    rbx
  427cb6:	rex.W jmp rax
  427cb9:	nop    DWORD PTR [rax+0x0]
  427cc0:	cmp    eax,0xc0000094
  427cc5:	je     0x427d02
  427cc7:	ja     0x427d40
  427cc9:	cmp    eax,0xc0000092
  427cce:	je     0x427c83
  427cd0:	cmp    eax,0xc0000093
  427cd5:	jne    0x427ca2
  427cd7:	xor    edx,edx
  427cd9:	mov    ecx,0x8
  427cde:	call   0x42de60
  427ce3:	cmp    rax,0x1
  427ce7:	jne    0x427d14
  427ce9:	mov    edx,0x1
  427cee:	mov    ecx,0x8
  427cf3:	call   0x42de60
  427cf8:	call   0x427460
  427cfd:	jmp    0x427c83
  427d02:	xor    edx,edx
  427d04:	mov    ecx,0x8
  427d09:	call   0x42de60
  427d0e:	cmp    rax,0x1
  427d12:	je     0x427d82
  427d14:	test   rax,rax
  427d17:	je     0x427ca2
  427d19:	mov    ecx,0x8
  427d1e:	call   rax
  427d20:	mov    eax,0xffffffff
  427d25:	jmp    0x427c88
  427d2a:	nop    WORD PTR [rax+rax*1+0x0]
  427d30:	test   BYTE PTR [rdx+0x4],0x1
  427d34:	jne    0x427c31
  427d3a:	jmp    0x427c83
  427d3f:	nop
  427d40:	cmp    eax,0xc0000095
  427d45:	je     0x427c83
  427d4b:	cmp    eax,0xc0000096
  427d50:	jne    0x427ca2
  427d56:	xor    edx,edx
  427d58:	mov    ecx,0x4
  427d5d:	call   0x42de60
  427d62:	cmp    rax,0x1
  427d66:	je     0x427db4
  427d68:	test   rax,rax
  427d6b:	je     0x427ca2
  427d71:	mov    ecx,0x4
  427d76:	call   rax
  427d78:	mov    eax,0xffffffff
  427d7d:	jmp    0x427c88
  427d82:	mov    edx,0x1
  427d87:	mov    ecx,0x8
  427d8c:	call   0x42de60
  427d91:	jmp    0x427c83
  427d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427da0:	mov    edx,0x1
  427da5:	mov    ecx,0xb
  427daa:	call   0x42de60
  427daf:	jmp    0x427c83
  427db4:	mov    edx,0x1
  427db9:	mov    ecx,0x4
  427dbe:	call   0x42de60
  427dc3:	jmp    0x427c83
  427dc8:	nop
  427dc9:	nop
  427dca:	nop
  427dcb:	nop
  427dcc:	nop
  427dcd:	nop
  427dce:	nop
  427dcf:	nop
  427dd0:	push   rbp
  427dd1:	push   rdi
  427dd2:	push   rsi
  427dd3:	push   rbx
  427dd4:	sub    rsp,0x28
  427dd8:	lea    rcx,[rip+0x1d6c1]        # 0x4454a0
  427ddf:	call   QWORD PTR [rip+0x208db]        # 0x4486c0
  427de5:	mov    rbx,QWORD PTR [rip+0x1d694]        # 0x445480
  427dec:	test   rbx,rbx
  427def:	je     0x427e24
  427df1:	mov    rbp,QWORD PTR [rip+0x20990]        # 0x448788
  427df8:	mov    rdi,QWORD PTR [rip+0x208e9]        # 0x4486e8
  427dff:	nop
  427e00:	mov    ecx,DWORD PTR [rbx]
  427e02:	call   rbp
  427e04:	mov    rsi,rax
  427e07:	call   rdi
  427e09:	test   eax,eax
  427e0b:	jne    0x427e1b
  427e0d:	test   rsi,rsi
  427e10:	je     0x427e1b
  427e12:	mov    rax,QWORD PTR [rbx+0x8]
  427e16:	mov    rcx,rsi
  427e19:	call   rax
  427e1b:	mov    rbx,QWORD PTR [rbx+0x10]
  427e1f:	test   rbx,rbx
  427e22:	jne    0x427e00
  427e24:	mov    rax,QWORD PTR [rip+0x2090d]        # 0x448738
  427e2b:	lea    rcx,[rip+0x1d66e]        # 0x4454a0
  427e32:	add    rsp,0x28
  427e36:	pop    rbx
  427e37:	pop    rsi
  427e38:	pop    rdi
  427e39:	pop    rbp
  427e3a:	rex.W jmp rax
  427e3d:	nop    DWORD PTR [rax]
  427e40:	push   rdi
  427e41:	push   rsi
  427e42:	push   rbx
  427e43:	sub    rsp,0x20
  427e47:	mov    eax,DWORD PTR [rip+0x1d63b]        # 0x445488
  427e4d:	test   eax,eax
  427e4f:	jne    0x427e60
  427e51:	add    rsp,0x20
  427e55:	pop    rbx
  427e56:	pop    rsi
  427e57:	pop    rdi
  427e58:	ret    
  427e59:	nop    DWORD PTR [rax+0x0]
  427e60:	mov    rsi,rdx
  427e63:	mov    edi,ecx
  427e65:	mov    edx,0x18
  427e6a:	mov    ecx,0x1
  427e6f:	call   0x42df68
  427e74:	test   rax,rax
  427e77:	mov    rbx,rax
  427e7a:	je     0x427eb8
  427e7c:	mov    DWORD PTR [rax],edi
  427e7e:	mov    QWORD PTR [rax+0x8],rsi
  427e82:	lea    rcx,[rip+0x1d617]        # 0x4454a0
  427e89:	call   QWORD PTR [rip+0x20831]        # 0x4486c0
  427e8f:	mov    rax,QWORD PTR [rip+0x1d5ea]        # 0x445480
  427e96:	lea    rcx,[rip+0x1d603]        # 0x4454a0
  427e9d:	mov    QWORD PTR [rip+0x1d5dc],rbx        # 0x445480
  427ea4:	mov    QWORD PTR [rbx+0x10],rax
  427ea8:	call   QWORD PTR [rip+0x2088a]        # 0x448738
  427eae:	xor    eax,eax
  427eb0:	add    rsp,0x20
  427eb4:	pop    rbx
  427eb5:	pop    rsi
  427eb6:	pop    rdi
  427eb7:	ret    
  427eb8:	mov    eax,0xffffffff
  427ebd:	jmp    0x427e51
  427ebf:	nop
  427ec0:	push   rbx
  427ec1:	sub    rsp,0x20
  427ec5:	mov    eax,DWORD PTR [rip+0x1d5bd]        # 0x445488
  427ecb:	test   eax,eax
  427ecd:	jne    0x427ee0
  427ecf:	xor    eax,eax
  427ed1:	add    rsp,0x20
  427ed5:	pop    rbx
  427ed6:	ret    
  427ed7:	nop    WORD PTR [rax+rax*1+0x0]
  427ee0:	mov    ebx,ecx
  427ee2:	lea    rcx,[rip+0x1d5b7]        # 0x4454a0
  427ee9:	call   QWORD PTR [rip+0x207d1]        # 0x4486c0
  427eef:	mov    rdx,QWORD PTR [rip+0x1d58a]        # 0x445480
  427ef6:	test   rdx,rdx
  427ef9:	je     0x427f17
  427efb:	mov    eax,DWORD PTR [rdx]
  427efd:	cmp    eax,ebx
  427eff:	jne    0x427f0e
  427f01:	jmp    0x427f4f
  427f03:	mov    r8d,DWORD PTR [rax]
  427f06:	cmp    r8d,ebx
  427f09:	je     0x427f30
  427f0b:	mov    rdx,rax
  427f0e:	mov    rax,QWORD PTR [rdx+0x10]
  427f12:	test   rax,rax
  427f15:	jne    0x427f03
  427f17:	lea    rcx,[rip+0x1d582]        # 0x4454a0
  427f1e:	call   QWORD PTR [rip+0x20814]        # 0x448738
  427f24:	xor    eax,eax
  427f26:	add    rsp,0x20
  427f2a:	pop    rbx
  427f2b:	ret    
  427f2c:	nop    DWORD PTR [rax+0x0]
  427f30:	mov    rcx,rax
  427f33:	mov    rax,QWORD PTR [rax+0x10]
  427f37:	mov    QWORD PTR [rdx+0x10],rax
  427f3b:	call   0x42df08
  427f40:	lea    rcx,[rip+0x1d559]        # 0x4454a0
  427f47:	call   QWORD PTR [rip+0x207eb]        # 0x448738
  427f4d:	jmp    0x427f24
  427f4f:	mov    rax,QWORD PTR [rdx+0x10]
  427f53:	mov    rcx,rdx
  427f56:	mov    QWORD PTR [rip+0x1d523],rax        # 0x445480
  427f5d:	jmp    0x427f3b
  427f5f:	nop
  427f60:	push   rbx
  427f61:	sub    rsp,0x20
  427f65:	cmp    edx,0x1
  427f68:	je     0x428000
  427f6e:	jb     0x427fa0
  427f70:	cmp    edx,0x2
  427f73:	je     0x427f90
  427f75:	cmp    edx,0x3
  427f78:	jne    0x427f95
  427f7a:	mov    eax,DWORD PTR [rip+0x1d508]        # 0x445488
  427f80:	test   eax,eax
  427f82:	je     0x427f95
  427f84:	call   0x427dd0
  427f89:	jmp    0x427f95
  427f8b:	nop    DWORD PTR [rax+rax*1+0x0]
  427f90:	call   0x427460
  427f95:	mov    eax,0x1
  427f9a:	add    rsp,0x20
  427f9e:	pop    rbx
  427f9f:	ret    
  427fa0:	mov    eax,DWORD PTR [rip+0x1d4e2]        # 0x445488
  427fa6:	test   eax,eax
  427fa8:	jne    0x428030
  427fae:	mov    eax,DWORD PTR [rip+0x1d4d4]        # 0x445488
  427fb4:	cmp    eax,0x1
  427fb7:	jne    0x427f95
  427fb9:	mov    rcx,QWORD PTR [rip+0x1d4c0]        # 0x445480
  427fc0:	test   rcx,rcx
  427fc3:	je     0x427fd6
  427fc5:	mov    rbx,QWORD PTR [rcx+0x10]
  427fc9:	call   0x42df08
  427fce:	test   rbx,rbx
  427fd1:	mov    rcx,rbx
  427fd4:	jne    0x427fc5
  427fd6:	lea    rcx,[rip+0x1d4c3]        # 0x4454a0
  427fdd:	mov    QWORD PTR [rip+0x1d498],0x0        # 0x445480
  427fe8:	mov    DWORD PTR [rip+0x1d496],0x0        # 0x445488
  427ff2:	call   QWORD PTR [rip+0x206c0]        # 0x4486b8
  427ff8:	jmp    0x427f95
  427ffa:	nop    WORD PTR [rax+rax*1+0x0]
  428000:	mov    eax,DWORD PTR [rip+0x1d482]        # 0x445488
  428006:	test   eax,eax
  428008:	je     0x428020
  42800a:	mov    eax,0x1
  42800f:	mov    DWORD PTR [rip+0x1d46f],0x1        # 0x445488
  428019:	add    rsp,0x20
  42801d:	pop    rbx
  42801e:	ret    
  42801f:	nop
  428020:	lea    rcx,[rip+0x1d479]        # 0x4454a0
  428027:	call   QWORD PTR [rip+0x206fb]        # 0x448728
  42802d:	jmp    0x42800a
  42802f:	nop
  428030:	call   0x427dd0
  428035:	jmp    0x427fae
  42803a:	nop
  42803b:	nop
  42803c:	nop
  42803d:	nop
  42803e:	nop
  42803f:	nop
  428040:	movsxd rax,DWORD PTR [rcx+0x3c]
  428044:	add    rcx,rax
  428047:	xor    eax,eax
  428049:	cmp    DWORD PTR [rcx],0x4550
  42804f:	je     0x428053
  428051:	repz ret 
  428053:	xor    eax,eax
  428055:	cmp    WORD PTR [rcx+0x18],0x20b
  42805b:	sete   al
  42805e:	ret    
  42805f:	nop
  428060:	cmp    WORD PTR [rcx],0x5a4d
  428065:	je     0x428070
  428067:	xor    eax,eax
  428069:	ret    
  42806a:	nop    WORD PTR [rax+rax*1+0x0]
  428070:	jmp    0x428040
  428072:	nop    DWORD PTR [rax+0x0]
  428076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428080:	movsxd rax,DWORD PTR [rcx+0x3c]
  428084:	add    rcx,rax
  428087:	movzx  eax,WORD PTR [rcx+0x14]
  42808b:	lea    rax,[rcx+rax*1+0x18]
  428090:	movzx  ecx,WORD PTR [rcx+0x6]
  428094:	test   ecx,ecx
  428096:	je     0x4280c1
  428098:	sub    ecx,0x1
  42809b:	lea    rcx,[rcx+rcx*4]
  42809f:	lea    r9,[rax+rcx*8+0x28]
  4280a4:	mov    r8d,DWORD PTR [rax+0xc]
  4280a8:	cmp    r8,rdx
  4280ab:	mov    rcx,r8
  4280ae:	ja     0x4280b8
  4280b0:	add    ecx,DWORD PTR [rax+0x8]
  4280b3:	cmp    rdx,rcx
  4280b6:	jb     0x4280c3
  4280b8:	add    rax,0x28
  4280bc:	cmp    rax,r9
  4280bf:	jne    0x4280a4
  4280c1:	xor    eax,eax
  4280c3:	repz ret 
  4280c5:	nop
  4280c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4280d0:	push   rdi
  4280d1:	push   rsi
  4280d2:	push   rbx
  4280d3:	sub    rsp,0x20
  4280d7:	mov    rsi,rcx
  4280da:	call   0x42de30
  4280df:	cmp    rax,0x8
  4280e3:	ja     0x428100
  4280e5:	mov    rbx,QWORD PTR [rip+0x15784]        # 0x43d870
  4280ec:	xor    edi,edi
  4280ee:	cmp    WORD PTR [rbx],0x5a4d
  4280f3:	je     0x428110
  4280f5:	mov    rax,rdi
  4280f8:	add    rsp,0x20
  4280fc:	pop    rbx
  4280fd:	pop    rsi
  4280fe:	pop    rdi
  4280ff:	ret    
  428100:	xor    edi,edi
  428102:	mov    rax,rdi
  428105:	add    rsp,0x20
  428109:	pop    rbx
  42810a:	pop    rsi
  42810b:	pop    rdi
  42810c:	ret    
  42810d:	nop    DWORD PTR [rax]
  428110:	mov    rcx,rbx
  428113:	call   0x428040
  428118:	test   eax,eax
  42811a:	je     0x4280f5
  42811c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  428120:	add    rdx,rbx
  428123:	movzx  eax,WORD PTR [rdx+0x14]
  428127:	lea    rbx,[rdx+rax*1+0x18]
  42812c:	movzx  eax,WORD PTR [rdx+0x6]
  428130:	test   eax,eax
  428132:	je     0x4280f5
  428134:	sub    eax,0x1
  428137:	lea    rax,[rax+rax*4]
  42813b:	lea    rdi,[rbx+rax*8+0x28]
  428140:	jmp    0x42814b
  428142:	add    rbx,0x28
  428146:	cmp    rbx,rdi
  428149:	je     0x428100
  42814b:	mov    r8d,0x8
  428151:	mov    rdx,rsi
  428154:	mov    rcx,rbx
  428157:	call   0x42de28
  42815c:	test   eax,eax
  42815e:	jne    0x428142
  428160:	mov    rdi,rbx
  428163:	mov    rax,rdi
  428166:	add    rsp,0x20
  42816a:	pop    rbx
  42816b:	pop    rsi
  42816c:	pop    rdi
  42816d:	ret    
  42816e:	xchg   ax,ax
  428170:	push   rsi
  428171:	push   rbx
  428172:	sub    rsp,0x28
  428176:	mov    rbx,QWORD PTR [rip+0x156f3]        # 0x43d870
  42817d:	cmp    WORD PTR [rbx],0x5a4d
  428182:	je     0x428190
  428184:	xor    eax,eax
  428186:	add    rsp,0x28
  42818a:	pop    rbx
  42818b:	pop    rsi
  42818c:	ret    
  42818d:	nop    DWORD PTR [rax]
  428190:	mov    rsi,rcx
  428193:	mov    rcx,rbx
  428196:	call   0x428040
  42819b:	test   eax,eax
  42819d:	je     0x428184
  42819f:	sub    rsi,rbx
  4281a2:	mov    rcx,rbx
  4281a5:	mov    rdx,rsi
  4281a8:	add    rsp,0x28
  4281ac:	pop    rbx
  4281ad:	pop    rsi
  4281ae:	jmp    0x428080
  4281b3:	nop    DWORD PTR [rax]
  4281b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4281c0:	push   rbx
  4281c1:	sub    rsp,0x20
  4281c5:	mov    rbx,QWORD PTR [rip+0x156a4]        # 0x43d870
  4281cc:	xor    eax,eax
  4281ce:	cmp    WORD PTR [rbx],0x5a4d
  4281d3:	je     0x4281e0
  4281d5:	add    rsp,0x20
  4281d9:	pop    rbx
  4281da:	ret    
  4281db:	nop    DWORD PTR [rax+rax*1+0x0]
  4281e0:	mov    rcx,rbx
  4281e3:	call   0x428040
  4281e8:	test   eax,eax
  4281ea:	je     0x4281d5
  4281ec:	movsxd rax,DWORD PTR [rbx+0x3c]
  4281f0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4281f5:	add    rsp,0x20
  4281f9:	pop    rbx
  4281fa:	ret    
  4281fb:	nop    DWORD PTR [rax+rax*1+0x0]
  428200:	push   rdi
  428201:	push   rsi
  428202:	push   rbx
  428203:	sub    rsp,0x20
  428207:	mov    rsi,QWORD PTR [rip+0x15662]        # 0x43d870
  42820e:	xor    edi,edi
  428210:	mov    rbx,rcx
  428213:	cmp    WORD PTR [rsi],0x5a4d
  428218:	je     0x428225
  42821a:	mov    rax,rdi
  42821d:	add    rsp,0x20
  428221:	pop    rbx
  428222:	pop    rsi
  428223:	pop    rdi
  428224:	ret    
  428225:	mov    rcx,rsi
  428228:	call   0x428040
  42822d:	test   eax,eax
  42822f:	je     0x42821a
  428231:	movsxd rax,DWORD PTR [rsi+0x3c]
  428235:	add    rsi,rax
  428238:	movzx  eax,WORD PTR [rsi+0x14]
  42823c:	lea    rdx,[rsi+rax*1+0x18]
  428241:	movzx  eax,WORD PTR [rsi+0x6]
  428245:	test   eax,eax
  428247:	je     0x42821a
  428249:	sub    eax,0x1
  42824c:	lea    rax,[rax+rax*4]
  428250:	lea    rax,[rdx+rax*8+0x28]
  428255:	test   BYTE PTR [rdx+0x27],0x20
  428259:	je     0x428264
  42825b:	test   rbx,rbx
  42825e:	je     0x428280
  428260:	sub    rbx,0x1
  428264:	add    rdx,0x28
  428268:	cmp    rdx,rax
  42826b:	jne    0x428255
  42826d:	xor    edi,edi
  42826f:	mov    rax,rdi
  428272:	add    rsp,0x20
  428276:	pop    rbx
  428277:	pop    rsi
  428278:	pop    rdi
  428279:	ret    
  42827a:	nop    WORD PTR [rax+rax*1+0x0]
  428280:	mov    rdi,rdx
  428283:	mov    rax,rdi
  428286:	add    rsp,0x20
  42828a:	pop    rbx
  42828b:	pop    rsi
  42828c:	pop    rdi
  42828d:	ret    
  42828e:	xchg   ax,ax
  428290:	push   rsi
  428291:	push   rbx
  428292:	sub    rsp,0x28
  428296:	mov    rsi,QWORD PTR [rip+0x155d3]        # 0x43d870
  42829d:	xor    ebx,ebx
  42829f:	cmp    WORD PTR [rsi],0x5a4d
  4282a4:	je     0x4282b0
  4282a6:	mov    rax,rbx
  4282a9:	add    rsp,0x28
  4282ad:	pop    rbx
  4282ae:	pop    rsi
  4282af:	ret    
  4282b0:	mov    rcx,rsi
  4282b3:	call   0x428040
  4282b8:	test   eax,eax
  4282ba:	cmovne rbx,rsi
  4282be:	mov    rax,rbx
  4282c1:	add    rsp,0x28
  4282c5:	pop    rbx
  4282c6:	pop    rsi
  4282c7:	ret    
  4282c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4282d0:	push   rsi
  4282d1:	push   rbx
  4282d2:	sub    rsp,0x28
  4282d6:	mov    rbx,QWORD PTR [rip+0x15593]        # 0x43d870
  4282dd:	xor    eax,eax
  4282df:	cmp    WORD PTR [rbx],0x5a4d
  4282e4:	je     0x4282f0
  4282e6:	add    rsp,0x28
  4282ea:	pop    rbx
  4282eb:	pop    rsi
  4282ec:	ret    
  4282ed:	nop    DWORD PTR [rax]
  4282f0:	mov    rsi,rcx
  4282f3:	mov    rcx,rbx
  4282f6:	call   0x428040
  4282fb:	test   eax,eax
  4282fd:	je     0x4282e6
  4282ff:	sub    rsi,rbx
  428302:	mov    rcx,rbx
  428305:	mov    rdx,rsi
  428308:	call   0x428080
  42830d:	test   rax,rax
  428310:	je     0x428321
  428312:	mov    eax,DWORD PTR [rax+0x24]
  428315:	not    eax
  428317:	shr    eax,0x1f
  42831a:	add    rsp,0x28
  42831e:	pop    rbx
  42831f:	pop    rsi
  428320:	ret    
  428321:	xor    eax,eax
  428323:	jmp    0x4282e6
  428325:	nop
  428326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428330:	push   rbp
  428331:	push   rdi
  428332:	push   rsi
  428333:	push   rbx
  428334:	sub    rsp,0x28
  428338:	mov    rdi,QWORD PTR [rip+0x15531]        # 0x43d870
  42833f:	xor    ebp,ebp
  428341:	mov    esi,ecx
  428343:	cmp    WORD PTR [rdi],0x5a4d
  428348:	je     0x428360
  42834a:	mov    rax,rbp
  42834d:	add    rsp,0x28
  428351:	pop    rbx
  428352:	pop    rsi
  428353:	pop    rdi
  428354:	pop    rbp
  428355:	ret    
  428356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428360:	mov    rcx,rdi
  428363:	call   0x428040
  428368:	test   eax,eax
  42836a:	je     0x42834a
  42836c:	movsxd rax,DWORD PTR [rdi+0x3c]
  428370:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  428377:	test   edx,edx
  428379:	je     0x42834a
  42837b:	mov    ebx,edx
  42837d:	mov    rcx,rdi
  428380:	mov    rdx,rbx
  428383:	call   0x428080
  428388:	test   rax,rax
  42838b:	je     0x42834a
  42838d:	add    rbx,rdi
  428390:	mov    rdx,rbx
  428393:	jne    0x4283a7
  428395:	jmp    0x42834a
  428397:	nop    WORD PTR [rax+rax*1+0x0]
  4283a0:	sub    esi,0x1
  4283a3:	add    rdx,0x14
  4283a7:	mov    ecx,DWORD PTR [rdx+0x4]
  4283aa:	test   ecx,ecx
  4283ac:	jne    0x4283b5
  4283ae:	mov    eax,DWORD PTR [rdx+0xc]
  4283b1:	test   eax,eax
  4283b3:	je     0x4283d0
  4283b5:	test   esi,esi
  4283b7:	jg     0x4283a0
  4283b9:	mov    ebp,DWORD PTR [rdx+0xc]
  4283bc:	add    rbp,rdi
  4283bf:	mov    rax,rbp
  4283c2:	add    rsp,0x28
  4283c6:	pop    rbx
  4283c7:	pop    rsi
  4283c8:	pop    rdi
  4283c9:	pop    rbp
  4283ca:	ret    
  4283cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4283d0:	xor    ebp,ebp
  4283d2:	mov    rax,rbp
  4283d5:	add    rsp,0x28
  4283d9:	pop    rbx
  4283da:	pop    rsi
  4283db:	pop    rdi
  4283dc:	pop    rbp
  4283dd:	ret    
  4283de:	nop
  4283df:	nop
  4283e0:	push   rcx
  4283e1:	push   rax
  4283e2:	cmp    rax,0x1000
  4283e8:	lea    rcx,[rsp+0x18]
  4283ed:	jb     0x428408
  4283ef:	sub    rcx,0x1000
  4283f6:	or     QWORD PTR [rcx],0x0
  4283fa:	sub    rax,0x1000
  428400:	cmp    rax,0x1000
  428406:	ja     0x4283ef
  428408:	sub    rcx,rax
  42840b:	or     QWORD PTR [rcx],0x0
  42840f:	pop    rax
  428410:	pop    rcx
  428411:	ret    
  428412:	nop
  428413:	nop
  428414:	nop
  428415:	nop
  428416:	nop
  428417:	nop
  428418:	nop
  428419:	nop
  42841a:	nop
  42841b:	nop
  42841c:	nop
  42841d:	nop
  42841e:	nop
  42841f:	nop
  428420:	push   rdi
  428421:	push   rsi
  428422:	push   rbx
  428423:	sub    rsp,0x130
  42842a:	mov    rbx,rcx
  42842d:	call   0x42e010
  428432:	test   rbx,rbx
  428435:	mov    DWORD PTR [rax],0x0
  42843b:	je     0x4285ee
  428441:	cmp    BYTE PTR [rbx],0x0
  428444:	je     0x4285b0
  42844a:	mov    rcx,rbx
  42844d:	call   QWORD PTR [rip+0x2028d]        # 0x4486e0
  428453:	cmp    eax,0xffffffff
  428456:	je     0x4285d0
  42845c:	test   al,0x10
  42845e:	je     0x4285b0
  428464:	lea    rdi,[rsp+0x20]
  428469:	mov    rdx,rbx
  42846c:	mov    r8d,0x104
  428472:	mov    rcx,rdi
  428475:	mov    rbx,rdi
  428478:	call   0x42dfe8
  42847d:	mov    r8d,DWORD PTR [rbx]
  428480:	add    rbx,0x4
  428484:	lea    eax,[r8-0x1010101]
  42848b:	not    r8d
  42848e:	and    eax,r8d
  428491:	and    eax,0x80808080
  428496:	je     0x42847d
  428498:	mov    edx,eax
  42849a:	shr    edx,0x10
  42849d:	test   eax,0x8080
  4284a2:	cmove  eax,edx
  4284a5:	lea    rdx,[rbx+0x2]
  4284a9:	cmove  rbx,rdx
  4284ad:	add    al,al
  4284af:	sbb    rbx,0x3
  4284b3:	sub    rbx,rdi
  4284b6:	lea    rcx,[rbx+0x24b]
  4284bd:	call   0x42dea8
  4284c2:	test   rax,rax
  4284c5:	mov    rsi,rax
  4284c8:	je     0x4285df
  4284ce:	lea    r9,[rax+0x244]
  4284d5:	lea    r8,[rbx+0x1]
  4284d9:	mov    rdx,rdi
  4284dc:	mov    rcx,r9
  4284df:	call   0x42de98
  4284e4:	cmp    BYTE PTR [rsi+0x244],0x0
  4284eb:	mov    r9,rax
  4284ee:	je     0x428510
  4284f0:	movzx  eax,BYTE PTR [rsi+rbx*1+0x243]
  4284f8:	cmp    al,0x2f
  4284fa:	je     0x428510
  4284fc:	cmp    al,0x5c
  4284fe:	je     0x428510
  428500:	mov    r8d,0x5c
  428506:	mov    WORD PTR [r9+rbx*1],r8w
  42850b:	nop    DWORD PTR [rax+rax*1+0x0]
  428510:	mov    rcx,r9
  428513:	mov    eax,DWORD PTR [rcx]
  428515:	add    rcx,0x4
  428519:	lea    edx,[rax-0x1010101]
  42851f:	not    eax
  428521:	and    edx,eax
  428523:	and    edx,0x80808080
  428529:	je     0x428513
  42852b:	mov    eax,edx
  42852d:	shr    eax,0x10
  428530:	test   edx,0x8080
  428536:	cmove  edx,eax
  428539:	lea    rax,[rcx+0x2]
  42853d:	cmove  rcx,rax
  428541:	add    dl,dl
  428543:	mov    eax,0x2a
  428548:	sbb    rcx,0x3
  42854c:	xor    edx,edx
  42854e:	mov    WORD PTR [rcx],ax
  428551:	mov    WORD PTR [rsi+0x12c],dx
  428558:	lea    rdx,[rsi+0x130]
  42855f:	xor    ecx,ecx
  428561:	xor    eax,eax
  428563:	mov    QWORD PTR [rsi+0x238],0xffffffffffffffff
  42856e:	mov    WORD PTR [rsi+0x12e],cx
  428575:	mov    rdi,rdx
  428578:	mov    ecx,0x20
  42857d:	mov    DWORD PTR [rsi+0x240],0x0
  428587:	mov    DWORD PTR [rsi+0x128],0x0
  428591:	rep stos QWORD PTR es:[rdi],rax
  428594:	mov    rax,rsi
  428597:	mov    DWORD PTR [rdi],0x0
  42859d:	add    rsp,0x130
  4285a4:	pop    rbx
  4285a5:	pop    rsi
  4285a6:	pop    rdi
  4285a7:	ret    
  4285a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4285b0:	call   0x42e010
  4285b5:	mov    DWORD PTR [rax],0x14
  4285bb:	xor    eax,eax
  4285bd:	add    rsp,0x130
  4285c4:	pop    rbx
  4285c5:	pop    rsi
  4285c6:	pop    rdi
  4285c7:	ret    
  4285c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4285d0:	call   0x42e010
  4285d5:	mov    DWORD PTR [rax],0x2
  4285db:	xor    eax,eax
  4285dd:	jmp    0x42859d
  4285df:	call   0x42e010
  4285e4:	mov    DWORD PTR [rax],0xc
  4285ea:	xor    eax,eax
  4285ec:	jmp    0x42859d
  4285ee:	call   0x42e010
  4285f3:	mov    DWORD PTR [rax],0xe
  4285f9:	xor    eax,eax
  4285fb:	jmp    0x42859d
  4285fd:	nop    DWORD PTR [rax]
  428600:	push   rbp
  428601:	push   rdi
  428602:	push   rsi
  428603:	push   rbx
  428604:	sub    rsp,0x158
  42860b:	mov    rbx,rcx
  42860e:	call   0x42e010
  428613:	test   rbx,rbx
  428616:	mov    DWORD PTR [rax],0x0
  42861c:	je     0x42880d
  428622:	mov    eax,DWORD PTR [rbx+0x240]
  428628:	test   eax,eax
  42862a:	js     0x4287af
  428630:	lea    rdi,[rsp+0x20]
  428635:	je     0x4286e4
  42863b:	mov    rcx,QWORD PTR [rbx+0x238]
  428642:	mov    rdx,rdi
  428645:	call   0x42ddc0
  42864a:	cmp    eax,0xffffffff
  42864d:	mov    ebp,eax
  42864f:	je     0x428755
  428655:	mov    eax,DWORD PTR [rsp+0x20]
  428659:	lea    rsi,[rbx+0x24]
  42865d:	lea    rdx,[rdi+0x28]
  428661:	mov    r8d,0x104
  428667:	mov    rcx,rsi
  42866a:	mov    DWORD PTR [rbx],eax
  42866c:	mov    rax,QWORD PTR [rsp+0x28]
  428671:	mov    QWORD PTR [rbx+0x8],rax
  428675:	mov    rax,QWORD PTR [rsp+0x30]
  42867a:	mov    QWORD PTR [rbx+0x10],rax
  42867e:	mov    rax,QWORD PTR [rsp+0x38]
  428683:	mov    QWORD PTR [rbx+0x18],rax
  428687:	mov    rax,QWORD PTR [rsp+0x40]
  42868c:	mov    DWORD PTR [rbx+0x20],eax
  42868f:	call   0x42de20
  428694:	test   ebp,ebp
  428696:	jne    0x428783
  42869c:	mov    eax,DWORD PTR [rbx+0x240]
  4286a2:	add    eax,0x1
  4286a5:	test   eax,eax
  4286a7:	mov    DWORD PTR [rbx+0x240],eax
  4286ad:	jle    0x4287af
  4286b3:	mov    rcx,rsi
  4286b6:	call   0x42de30
  4286bb:	lea    rcx,[rbx+0x130]
  4286c2:	mov    WORD PTR [rbx+0x12e],ax
  4286c9:	mov    rdx,rsi
  4286cc:	call   0x42de48
  4286d1:	lea    rax,[rbx+0x128]
  4286d8:	add    rsp,0x158
  4286df:	pop    rbx
  4286e0:	pop    rsi
  4286e1:	pop    rdi
  4286e2:	pop    rbp
  4286e3:	ret    
  4286e4:	lea    rcx,[rbx+0x244]
  4286eb:	mov    rdx,rdi
  4286ee:	call   0x42dff8
  4286f3:	cmp    rax,0xffffffffffffffff
  4286f7:	mov    rbp,rax
  4286fa:	je     0x4287c0
  428700:	mov    eax,DWORD PTR [rsp+0x20]
  428704:	lea    rsi,[rbx+0x24]
  428708:	lea    rdx,[rdi+0x28]
  42870c:	mov    r8d,0x104
  428712:	mov    rcx,rsi
  428715:	mov    DWORD PTR [rbx],eax
  428717:	mov    rax,QWORD PTR [rsp+0x28]
  42871c:	mov    QWORD PTR [rbx+0x8],rax
  428720:	mov    rax,QWORD PTR [rsp+0x30]
  428725:	mov    QWORD PTR [rbx+0x10],rax
  428729:	mov    rax,QWORD PTR [rsp+0x38]
  42872e:	mov    QWORD PTR [rbx+0x18],rax
  428732:	mov    rax,QWORD PTR [rsp+0x40]
  428737:	mov    DWORD PTR [rbx+0x20],eax
  42873a:	call   0x42de20
  42873f:	mov    QWORD PTR [rbx+0x238],rbp
  428746:	mov    DWORD PTR [rbx+0x240],0x1
  428750:	jmp    0x4286b3
  428755:	lea    rdi,[rbx+0x8]
  428759:	mov    rcx,rbx
  42875c:	xor    eax,eax
  42875e:	mov    QWORD PTR [rbx],0x0
  428765:	mov    QWORD PTR [rbx+0x120],0x0
  428770:	and    rdi,0xfffffffffffffff8
  428774:	sub    rcx,rdi
  428777:	add    ecx,0x128
  42877d:	shr    ecx,0x3
  428780:	rep stos QWORD PTR es:[rdi],rax
  428783:	call   QWORD PTR [rip+0x1ff5f]        # 0x4486e8
  428789:	cmp    eax,0x12
  42878c:	je     0x428800
  42878e:	mov    rcx,QWORD PTR [rbx+0x238]
  428795:	call   0x42e000
  42879a:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  4287a5:	mov    DWORD PTR [rbx+0x240],0xffffffff
  4287af:	xor    eax,eax
  4287b1:	add    rsp,0x158
  4287b8:	pop    rbx
  4287b9:	pop    rsi
  4287ba:	pop    rdi
  4287bb:	pop    rbp
  4287bc:	ret    
  4287bd:	nop    DWORD PTR [rax]
  4287c0:	lea    rdi,[rbx+0x8]
  4287c4:	mov    rcx,rbx
  4287c7:	xor    eax,eax
  4287c9:	mov    QWORD PTR [rbx],0x0
  4287d0:	mov    QWORD PTR [rbx+0x120],0x0
  4287db:	and    rdi,0xfffffffffffffff8
  4287df:	sub    rcx,rdi
  4287e2:	add    ecx,0x128
  4287e8:	shr    ecx,0x3
  4287eb:	rep stos QWORD PTR es:[rdi],rax
  4287ee:	mov    QWORD PTR [rbx+0x238],rbp
  4287f5:	mov    DWORD PTR [rbx+0x240],ebp
  4287fb:	xor    eax,eax
  4287fd:	jmp    0x4287b1
  4287ff:	nop
  428800:	call   0x42e010
  428805:	mov    DWORD PTR [rax],0x0
  42880b:	jmp    0x42878e
  42880d:	call   0x42e010
  428812:	mov    DWORD PTR [rax],0xe
  428818:	xor    eax,eax
  42881a:	jmp    0x4286d8
  42881f:	nop
  428820:	push   rsi
  428821:	push   rbx
  428822:	sub    rsp,0x28
  428826:	mov    rsi,rcx
  428829:	call   0x42e010
  42882e:	test   rsi,rsi
  428831:	mov    DWORD PTR [rax],0x0
  428837:	je     0x428860
  428839:	mov    rcx,QWORD PTR [rsi+0x238]
  428840:	xor    ebx,ebx
  428842:	cmp    rcx,0xffffffffffffffff
  428846:	je     0x42884f
  428848:	call   0x42e000
  42884d:	mov    ebx,eax
  42884f:	mov    rcx,rsi
  428852:	call   0x42df08
  428857:	mov    eax,ebx
  428859:	add    rsp,0x28
  42885d:	pop    rbx
  42885e:	pop    rsi
  42885f:	ret    
  428860:	call   0x42e010
  428865:	mov    DWORD PTR [rax],0xe
  42886b:	mov    eax,0xffffffff
  428870:	jmp    0x428859
  428872:	nop    DWORD PTR [rax+0x0]
  428876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428880:	push   rbx
  428881:	sub    rsp,0x20
  428885:	mov    rbx,rcx
  428888:	call   0x42e010
  42888d:	test   rbx,rbx
  428890:	mov    DWORD PTR [rax],0x0
  428896:	je     0x4288c5
  428898:	mov    rcx,QWORD PTR [rbx+0x238]
  42889f:	cmp    rcx,0xffffffffffffffff
  4288a3:	je     0x4288aa
  4288a5:	call   0x42e000
  4288aa:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  4288b5:	mov    DWORD PTR [rbx+0x240],0x0
  4288bf:	add    rsp,0x20
  4288c3:	pop    rbx
  4288c4:	ret    
  4288c5:	call   0x42e010
  4288ca:	mov    DWORD PTR [rax],0xe
  4288d0:	jmp    0x4288bf
  4288d2:	nop    DWORD PTR [rax+0x0]
  4288d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4288e0:	push   rbx
  4288e1:	sub    rsp,0x20
  4288e5:	mov    rbx,rcx
  4288e8:	call   0x42e010
  4288ed:	test   rbx,rbx
  4288f0:	mov    DWORD PTR [rax],0x0
  4288f6:	je     0x428904
  4288f8:	mov    eax,DWORD PTR [rbx+0x240]
  4288fe:	add    rsp,0x20
  428902:	pop    rbx
  428903:	ret    
  428904:	call   0x42e010
  428909:	mov    DWORD PTR [rax],0xe
  42890f:	mov    eax,0xffffffff
  428914:	jmp    0x4288fe
  428916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428920:	push   rsi
  428921:	push   rbx
  428922:	sub    rsp,0x28
  428926:	mov    rbx,rcx
  428929:	mov    esi,edx
  42892b:	call   0x42e010
  428930:	test   rbx,rbx
  428933:	mov    DWORD PTR [rax],0x0
  428939:	je     0x4289ad
  42893b:	cmp    esi,0xffffffff
  42893e:	jl     0x4289a0
  428940:	je     0x428970
  428942:	mov    rcx,rbx
  428945:	call   0x428880
  42894a:	jmp    0x42895d
  42894c:	nop    DWORD PTR [rax+0x0]
  428950:	mov    rcx,rbx
  428953:	call   0x428600
  428958:	test   rax,rax
  42895b:	je     0x428997
  42895d:	cmp    esi,DWORD PTR [rbx+0x240]
  428963:	jg     0x428950
  428965:	add    rsp,0x28
  428969:	pop    rbx
  42896a:	pop    rsi
  42896b:	ret    
  42896c:	nop    DWORD PTR [rax+0x0]
  428970:	mov    rcx,QWORD PTR [rbx+0x238]
  428977:	cmp    rcx,0xffffffffffffffff
  42897b:	je     0x428982
  42897d:	call   0x42e000
  428982:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  42898d:	mov    DWORD PTR [rbx+0x240],0xffffffff
  428997:	add    rsp,0x28
  42899b:	pop    rbx
  42899c:	pop    rsi
  42899d:	ret    
  42899e:	xchg   ax,ax
  4289a0:	call   0x42e010
  4289a5:	mov    DWORD PTR [rax],0x16
  4289ab:	jmp    0x428997
  4289ad:	call   0x42e010
  4289b2:	mov    DWORD PTR [rax],0xe
  4289b8:	jmp    0x428997
  4289ba:	nop
  4289bb:	nop
  4289bc:	nop
  4289bd:	nop
  4289be:	nop
  4289bf:	nop
  4289c0:	push   rsi
  4289c1:	push   rbx
  4289c2:	sub    rsp,0xe8
  4289c9:	test   rdx,rdx
  4289cc:	mov    rbx,rcx
  4289cf:	mov    rsi,rdx
  4289d2:	je     0x4289f6
  4289d4:	lea    rcx,[rsp+0x30]
  4289d9:	call   QWORD PTR [rip+0x1fd41]        # 0x448720
  4289df:	cmp    eax,0xffffffff
  4289e2:	je     0x428a50
  4289e4:	mov    edx,DWORD PTR [rsp+0x30]
  4289e8:	cmp    eax,0x2
  4289eb:	sete   al
  4289ee:	movzx  eax,al
  4289f1:	mov    DWORD PTR [rsi],edx
  4289f3:	mov    DWORD PTR [rsi+0x4],eax
  4289f6:	test   rbx,rbx
  4289f9:	je     0x428a3e
  4289fb:	lea    rcx,[rsp+0x20]
  428a00:	call   QWORD PTR [rip+0x1fd0a]        # 0x448710
  428a06:	movabs r8,0xfe624e212ac18000
  428a10:	add    r8,QWORD PTR [rsp+0x20]
  428a15:	movabs rdx,0xd6bf94d5e57a42bd
  428a1f:	mov    rax,r8
  428a22:	mul    rdx
  428a25:	shr    rdx,0x17
  428a29:	mov    QWORD PTR [rbx],rdx
  428a2c:	imul   rdx,rdx,0x989680
  428a33:	sub    r8,rdx
  428a36:	imul   r8d,r8d,0x64
  428a3a:	mov    DWORD PTR [rbx+0x8],r8d
  428a3e:	xor    eax,eax
  428a40:	add    rsp,0xe8
  428a47:	pop    rbx
  428a48:	pop    rsi
  428a49:	ret    
  428a4a:	nop    WORD PTR [rax+rax*1+0x0]
  428a50:	mov    DWORD PTR [rsi],0x0
  428a56:	mov    DWORD PTR [rsi+0x4],0x0
  428a5d:	jmp    0x4289f6
  428a5f:	nop
  428a60:	push   rbx
  428a61:	sub    rsp,0x30
  428a65:	mov    rbx,rcx
  428a68:	lea    rcx,[rsp+0x20]
  428a6d:	call   0x4289c0
  428a72:	test   eax,eax
  428a74:	mov    r9d,eax
  428a77:	jne    0x428aa5
  428a79:	mov    rax,QWORD PTR [rsp+0x20]
  428a7e:	mov    r8d,DWORD PTR [rsp+0x28]
  428a83:	mov    edx,0x10624dd3
  428a88:	mov    DWORD PTR [rbx],eax
  428a8a:	mov    eax,r8d
  428a8d:	sar    r8d,0x1f
  428a91:	imul   edx
  428a93:	sar    edx,0x6
  428a96:	sub    edx,r8d
  428a99:	mov    DWORD PTR [rbx+0x4],edx
  428a9c:	mov    eax,r9d
  428a9f:	add    rsp,0x30
  428aa3:	pop    rbx
  428aa4:	ret    
  428aa5:	mov    r9d,0xffffffff
  428aab:	jmp    0x428a9c
  428aad:	nop    DWORD PTR [rax]
  428ab0:	push   rbx
  428ab1:	sub    rsp,0x30
  428ab5:	mov    rbx,rcx
  428ab8:	lea    rcx,[rsp+0x20]
  428abd:	call   0x4289c0
  428ac2:	test   eax,eax
  428ac4:	mov    r9d,eax
  428ac7:	jne    0x428af5
  428ac9:	mov    rax,QWORD PTR [rsp+0x20]
  428ace:	mov    r8d,DWORD PTR [rsp+0x28]
  428ad3:	mov    edx,0x10624dd3
  428ad8:	mov    DWORD PTR [rbx],eax
  428ada:	mov    eax,r8d
  428add:	sar    r8d,0x1f
  428ae1:	imul   edx
  428ae3:	sar    edx,0x6
  428ae6:	sub    edx,r8d
  428ae9:	mov    DWORD PTR [rbx+0x4],edx
  428aec:	mov    eax,r9d
  428aef:	add    rsp,0x30
  428af3:	pop    rbx
  428af4:	ret    
  428af5:	mov    r9d,0xffffffff
  428afb:	jmp    0x428aec
  428afd:	nop
  428afe:	nop
  428aff:	nop
  428b00:	test   rdx,rdx
  428b03:	mov    r8,rcx
  428b06:	je     0x428b32
  428b08:	cmp    BYTE PTR [rcx],0x0
  428b0b:	jne    0x428b15
  428b0d:	jmp    0x428b32
  428b0f:	nop
  428b10:	cmp    BYTE PTR [rcx],0x0
  428b13:	je     0x428b30
  428b15:	add    rcx,0x1
  428b19:	mov    rax,rcx
  428b1c:	sub    rax,r8
  428b1f:	cmp    rax,rdx
  428b22:	jb     0x428b10
  428b24:	repz ret 
  428b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428b30:	repz ret 
  428b32:	xor    eax,eax
  428b34:	ret    
  428b35:	nop
  428b36:	nop
  428b37:	nop
  428b38:	nop
  428b39:	nop
  428b3a:	nop
  428b3b:	nop
  428b3c:	nop
  428b3d:	nop
  428b3e:	nop
  428b3f:	nop
  428b40:	push   r15
  428b42:	push   r14
  428b44:	push   r13
  428b46:	push   r12
  428b48:	push   rbp
  428b49:	push   rdi
  428b4a:	push   rsi
  428b4b:	push   rbx
  428b4c:	sub    rsp,0x28
  428b50:	test   rdx,rdx
  428b53:	mov    rsi,rcx
  428b56:	mov    r12,rdx
  428b59:	mov    edi,r8d
  428b5c:	je     0x428b62
  428b5e:	mov    QWORD PTR [r12],rcx
  428b62:	cmp    edi,0x24
  428b65:	ja     0x428c43
  428b6b:	cmp    edi,0x1
  428b6e:	jne    0x428b79
  428b70:	jmp    0x428c43
  428b75:	add    rsi,0x1
  428b79:	movsx  ecx,BYTE PTR [rsi]
  428b7c:	mov    ebx,ecx
  428b7e:	call   0x42dec0
  428b83:	test   eax,eax
  428b85:	jne    0x428b75
  428b87:	lea    edx,[rbx-0x2b]
  428b8a:	mov    rcx,rsi
  428b8d:	mov    eax,ebx
  428b8f:	and    edx,0xfd
  428b95:	jne    0x428b9f
  428b97:	movzx  eax,BYTE PTR [rcx+0x1]
  428b9b:	add    rsi,0x1
  428b9f:	test   edi,edi
  428ba1:	jne    0x428ce1
  428ba7:	cmp    al,0x30
  428ba9:	mov    dil,0xa
  428bac:	je     0x428d32
  428bb2:	movsx  r15d,al
  428bb6:	lea    edx,[r15-0x30]
  428bba:	cmp    edx,0x9
  428bbd:	ja     0x428cb0
  428bc3:	movsx  ecx,al
  428bc6:	sub    ecx,0x30
  428bc9:	cmp    edi,ecx
  428bcb:	jle    0x428d60
  428bd1:	mov    eax,ecx
  428bd3:	shr    eax,0x1f
  428bd6:	test   al,al
  428bd8:	jne    0x428d60
  428bde:	lea    r14,[rsi+0x1]
  428be2:	movsxd r15,ecx
  428be5:	xor    r13d,r13d
  428be8:	movsxd rsi,edi
  428beb:	nop    DWORD PTR [rax+rax*1+0x0]
  428bf0:	movsx  ebp,BYTE PTR [r14]
  428bf4:	lea    r9d,[rbp-0x30]
  428bf8:	cmp    r9d,0x9
  428bfc:	mov    ecx,r9d
  428bff:	jbe    0x428c64
  428c01:	mov    ecx,ebp
  428c03:	call   0x42deb8
  428c08:	test   eax,eax
  428c0a:	lea    ecx,[rbp-0x37]
  428c0d:	jne    0x428c64
  428c0f:	mov    ecx,ebp
  428c11:	call   0x42dec8
  428c16:	test   eax,eax
  428c18:	jne    0x428c61
  428c1a:	test   r12,r12
  428c1d:	je     0x428c23
  428c1f:	mov    QWORD PTR [r12],r14
  428c23:	cmp    bl,0x2d
  428c26:	je     0x428d10
  428c2c:	test   r15,r15
  428c2f:	js     0x428d80
  428c35:	test   r13d,r13d
  428c38:	jne    0x428d80
  428c3e:	mov    rax,r15
  428c41:	jmp    0x428c50
  428c43:	call   0x42e010
  428c48:	mov    DWORD PTR [rax],0x21
  428c4e:	xor    eax,eax
  428c50:	add    rsp,0x28
  428c54:	pop    rbx
  428c55:	pop    rsi
  428c56:	pop    rdi
  428c57:	pop    rbp
  428c58:	pop    r12
  428c5a:	pop    r13
  428c5c:	pop    r14
  428c5e:	pop    r15
  428c60:	ret    
  428c61:	lea    ecx,[rbp-0x57]
  428c64:	cmp    edi,ecx
  428c66:	jle    0x428c1a
  428c68:	test   ecx,ecx
  428c6a:	js     0x428c1a
  428c6c:	movabs rax,0x7fffffffffffffff
  428c76:	cqo    
  428c78:	idiv   rsi
  428c7b:	add    rax,0x2
  428c7f:	cmp    r15,rax
  428c82:	ja     0x428ca0
  428c84:	imul   r15,rsi
  428c88:	movsxd rcx,ecx
  428c8b:	add    r15,rcx
  428c8e:	add    r14,0x1
  428c92:	jmp    0x428bf0
  428c97:	nop    WORD PTR [rax+rax*1+0x0]
  428ca0:	mov    r13d,0x1
  428ca6:	jmp    0x428c8e
  428ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  428cb0:	mov    ecx,r15d
  428cb3:	call   0x42deb8
  428cb8:	test   eax,eax
  428cba:	lea    ecx,[r15-0x37]
  428cbe:	jne    0x428bc9
  428cc4:	mov    ecx,r15d
  428cc7:	call   0x42dec8
  428ccc:	mov    edx,eax
  428cce:	xor    eax,eax
  428cd0:	test   edx,edx
  428cd2:	je     0x428c50
  428cd8:	lea    ecx,[r15-0x57]
  428cdc:	jmp    0x428bc9
  428ce1:	cmp    edi,0x10
  428ce4:	jne    0x428bb2
  428cea:	cmp    al,0x30
  428cec:	jne    0x428bb2
  428cf2:	movzx  eax,BYTE PTR [rsi+0x1]
  428cf6:	and    eax,0xffffffdf
  428cf9:	cmp    al,0x58
  428cfb:	je     0x428d45
  428cfd:	mov    eax,0x30
  428d02:	jmp    0x428bc3
  428d07:	nop    WORD PTR [rax+rax*1+0x0]
  428d10:	movabs rbx,0x8000000000000000
  428d1a:	cmp    r15,rbx
  428d1d:	jbe    0x428d70
  428d1f:	call   0x42e010
  428d24:	mov    DWORD PTR [rax],0x22
  428d2a:	mov    rax,rbx
  428d2d:	jmp    0x428c50
  428d32:	movzx  edx,BYTE PTR [rsi+0x1]
  428d36:	mov    dil,0x8
  428d39:	and    edx,0xffffffdf
  428d3c:	cmp    dl,0x58
  428d3f:	jne    0x428bb2
  428d45:	movzx  eax,BYTE PTR [rsi+0x2]
  428d49:	mov    edi,0x10
  428d4e:	add    rsi,0x2
  428d52:	jmp    0x428bb2
  428d57:	nop    WORD PTR [rax+rax*1+0x0]
  428d60:	xor    eax,eax
  428d62:	jmp    0x428c50
  428d67:	nop    WORD PTR [rax+rax*1+0x0]
  428d70:	test   r13d,r13d
  428d73:	jne    0x428d1f
  428d75:	mov    rax,r15
  428d78:	neg    rax
  428d7b:	jmp    0x428c50
  428d80:	call   0x42e010
  428d85:	mov    DWORD PTR [rax],0x22
  428d8b:	movabs rax,0x7fffffffffffffff
  428d95:	jmp    0x428c50
  428d9a:	nop
  428d9b:	nop
  428d9c:	nop
  428d9d:	nop
  428d9e:	nop
  428d9f:	nop
  428da0:	push   rdi
  428da1:	push   rsi
  428da2:	push   rbx
  428da3:	sub    rsp,0x20
  428da7:	mov    rdi,rcx
  428daa:	mov    rbx,rdx
  428dad:	mov    rsi,r8
  428db0:	mov    rax,QWORD PTR [rbx]
  428db3:	test   rax,rax
  428db6:	je     0x428dd5
  428db8:	mov    rdx,QWORD PTR [rax]
  428dbb:	mov    rcx,rdi
  428dbe:	call   rsi
  428dc0:	test   eax,eax
  428dc2:	je     0x428df0
  428dc4:	mov    rbx,QWORD PTR [rbx]
  428dc7:	js     0x428de0
  428dc9:	add    rbx,0x10
  428dcd:	mov    rax,QWORD PTR [rbx]
  428dd0:	test   rax,rax
  428dd3:	jne    0x428db8
  428dd5:	add    rsp,0x20
  428dd9:	pop    rbx
  428dda:	pop    rsi
  428ddb:	pop    rdi
  428ddc:	ret    
  428ddd:	nop    DWORD PTR [rax]
  428de0:	add    rbx,0x8
  428de4:	jmp    0x428db0
  428de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428df0:	mov    rax,QWORD PTR [rbx]
  428df3:	add    rsp,0x20
  428df7:	pop    rbx
  428df8:	pop    rsi
  428df9:	pop    rdi
  428dfa:	ret    
  428dfb:	nop
  428dfc:	nop
  428dfd:	nop
  428dfe:	nop
  428dff:	nop
  428e00:	push   rdi
  428e01:	push   rsi
  428e02:	push   rbx
  428e03:	sub    rsp,0x20
  428e07:	mov    rsi,rcx
  428e0a:	mov    rbx,rdx
  428e0d:	mov    rdi,r8
  428e10:	jmp    0x428e1f
  428e12:	lea    rbx,[rax+0x10]
  428e16:	mov    rax,QWORD PTR [rax+0x10]
  428e1a:	test   rax,rax
  428e1d:	je     0x428e45
  428e1f:	mov    rax,QWORD PTR [rbx]
  428e22:	test   rax,rax
  428e25:	je     0x428e45
  428e27:	mov    rdx,QWORD PTR [rax]
  428e2a:	mov    rcx,rsi
  428e2d:	call   rdi
  428e2f:	test   eax,eax
  428e31:	mov    rax,QWORD PTR [rbx]
  428e34:	je     0x428e6a
  428e36:	jns    0x428e12
  428e38:	lea    rbx,[rax+0x8]
  428e3c:	mov    rax,QWORD PTR [rax+0x8]
  428e40:	test   rax,rax
  428e43:	jne    0x428e1f
  428e45:	mov    ecx,0x18
  428e4a:	call   0x42dea8
  428e4f:	test   rax,rax
  428e52:	je     0x428e72
  428e54:	mov    QWORD PTR [rbx],rax
  428e57:	mov    QWORD PTR [rax],rsi
  428e5a:	mov    QWORD PTR [rax+0x10],0x0
  428e62:	mov    QWORD PTR [rax+0x8],0x0
  428e6a:	add    rsp,0x20
  428e6e:	pop    rbx
  428e6f:	pop    rsi
  428e70:	pop    rdi
  428e71:	ret    
  428e72:	xor    eax,eax
  428e74:	jmp    0x428e6a
  428e76:	nop
  428e77:	nop
  428e78:	nop
  428e79:	nop
  428e7a:	nop
  428e7b:	nop
  428e7c:	nop
  428e7d:	nop
  428e7e:	nop
  428e7f:	nop
  428e80:	push   r12
  428e82:	push   rbp
  428e83:	push   rdi
  428e84:	push   rsi
  428e85:	push   rbx
  428e86:	sub    rsp,0x250
  428e8d:	mov    rbx,rdx
  428e90:	mov    rsi,rcx
  428e93:	mov    ecx,0x4000
  428e98:	mov    r12d,r8d
  428e9b:	call   0x42dea8
  428ea0:	test   rbx,rbx
  428ea3:	mov    rbp,rax
  428ea6:	je     0x428f70
  428eac:	cmp    WORD PTR [rbx],0x0
  428eb0:	lea    rax,[rip+0x14469]        # 0x43d320
  428eb7:	cmove  rbx,rax
  428ebb:	test   rsi,rsi
  428ebe:	je     0x428f61
  428ec4:	cmp    WORD PTR [rsi],0x0
  428ec8:	lea    rax,[rip+0x14465]        # 0x43d334
  428ecf:	cmove  rsi,rax
  428ed3:	lea    rdi,[rsp+0x40]
  428ed8:	xor    ecx,ecx
  428eda:	mov    r8d,0x104
  428ee0:	mov    rdx,rdi
  428ee3:	call   QWORD PTR [rip+0x1f807]        # 0x4486f0
  428ee9:	test   eax,eax
  428eeb:	je     0x428f50
  428eed:	lea    r8,[rip+0x14444]        # 0x43d338
  428ef4:	mov    QWORD PTR [rsp+0x30],rsi
  428ef9:	mov    DWORD PTR [rsp+0x28],r12d
  428efe:	mov    QWORD PTR [rsp+0x20],rbx
  428f03:	mov    r9,rdi
  428f06:	mov    edx,0x1fff
  428f0b:	mov    rcx,rbp
  428f0e:	call   0x42dfa0
  428f13:	mov    rax,QWORD PTR [rip+0x14be6]        # 0x43db00
  428f1a:	mov    eax,DWORD PTR [rax]
  428f1c:	test   eax,eax
  428f1e:	je     0x428f95
  428f20:	xor    ecx,ecx
  428f22:	mov    r9d,0x12012
  428f28:	lea    r8,[rip+0x144a1]        # 0x43d3d0
  428f2f:	mov    rdx,rbp
  428f32:	call   QWORD PTR [rip+0x1fbd0]        # 0x448b08
  428f38:	cmp    eax,0x3
  428f3b:	je     0x428f81
  428f3d:	cmp    eax,0x5
  428f40:	jne    0x428f7c
  428f42:	add    rsp,0x250
  428f49:	pop    rbx
  428f4a:	pop    rsi
  428f4b:	pop    rdi
  428f4c:	pop    rbp
  428f4d:	pop    r12
  428f4f:	ret    
  428f50:	lea    rdx,[rip+0x143c9]        # 0x43d320
  428f57:	mov    rcx,rdi
  428f5a:	call   0x42ddd8
  428f5f:	jmp    0x428eed
  428f61:	lea    rsi,[rip+0x143cc]        # 0x43d334
  428f68:	jmp    0x428ed3
  428f6d:	nop    DWORD PTR [rax]
  428f70:	lea    rbx,[rip+0x143a9]        # 0x43d320
  428f77:	jmp    0x428ebb
  428f7c:	call   0x42df78
  428f81:	mov    ecx,0x16
  428f86:	call   0x42de70
  428f8b:	mov    ecx,0x3
  428f90:	call   0x42e008
  428f95:	call   0x42e048
  428f9a:	lea    rdx,[rip+0x1441f]        # 0x43d3c0
  428fa1:	lea    rcx,[rax+0x60]
  428fa5:	mov    r8,rbp
  428fa8:	call   0x42dee8
  428fad:	call   0x42df78
  428fb2:	nop
  428fb3:	nop    DWORD PTR [rax]
  428fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428fc0:	push   rbp
  428fc1:	push   rdi
  428fc2:	push   rsi
  428fc3:	push   rbx
  428fc4:	sub    rsp,0x38
  428fc8:	mov    rdi,rdx
  428fcb:	mov    DWORD PTR [rsp+0x2c],r8d
  428fd0:	mov    rbp,rcx
  428fd3:	call   0x42de30
  428fd8:	lea    rcx,[rax+rax*1+0x2]
  428fdd:	call   0x42dea8
  428fe2:	mov    rcx,rdi
  428fe5:	mov    rsi,rax
  428fe8:	call   0x42de30
  428fed:	lea    rcx,[rax+rax*1+0x2]
  428ff2:	call   0x42dea8
  428ff7:	movzx  r9d,BYTE PTR [rbp+0x0]
  428ffc:	xor    r10d,r10d
  428fff:	mov    rbx,rax
  429002:	mov    r8d,DWORD PTR [rsp+0x2c]
  429007:	test   r9b,r9b
  42900a:	je     0x429027
  42900c:	nop    DWORD PTR [rax+0x0]
  429010:	mov    WORD PTR [rsi+r10*2],r9w
  429015:	add    r10,0x1
  429019:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  42901f:	test   r9b,r9b
  429022:	jne    0x429010
  429024:	add    r10,r10
  429027:	movzx  r9d,BYTE PTR [rdi]
  42902b:	xor    edx,edx
  42902d:	mov    WORD PTR [rsi+r10*1],dx
  429032:	xor    r10d,r10d
  429035:	test   r9b,r9b
  429038:	je     0x429056
  42903a:	nop    WORD PTR [rax+rax*1+0x0]
  429040:	mov    WORD PTR [rbx+r10*2],r9w
  429045:	add    r10,0x1
  429049:	movzx  r9d,BYTE PTR [rdi+r10*1]
  42904e:	test   r9b,r9b
  429051:	jne    0x429040
  429053:	add    r10,r10
  429056:	xor    eax,eax
  429058:	mov    rdx,rbx
  42905b:	mov    rcx,rsi
  42905e:	mov    WORD PTR [rbx+r10*1],ax
  429063:	call   0x428e80
  429068:	mov    rcx,rsi
  42906b:	call   0x42df08
  429070:	mov    rcx,rbx
  429073:	add    rsp,0x38
  429077:	pop    rbx
  429078:	pop    rsi
  429079:	pop    rdi
  42907a:	pop    rbp
  42907b:	jmp    0x42df08
  429080:	sub    rsp,0x58
  429084:	test   r8d,r8d
  429087:	mov    eax,r8d
  42908a:	mov    WORD PTR [rsp+0x68],dx
  42908f:	jne    0x4290a4
  429091:	cmp    dx,0xff
  429096:	ja     0x4290ea
  429098:	mov    BYTE PTR [rcx],dl
  42909a:	mov    eax,0x1
  42909f:	add    rsp,0x58
  4290a3:	ret    
  4290a4:	lea    rdx,[rsp+0x4c]
  4290a9:	mov    DWORD PTR [rsp+0x28],r9d
  4290ae:	mov    QWORD PTR [rsp+0x20],rcx
  4290b3:	mov    DWORD PTR [rsp+0x4c],0x0
  4290bb:	mov    QWORD PTR [rsp+0x30],0x0
  4290c4:	mov    r9d,0x1
  4290ca:	mov    QWORD PTR [rsp+0x38],rdx
  4290cf:	lea    r8,[rsp+0x68]
  4290d4:	xor    edx,edx
  4290d6:	mov    ecx,eax
  4290d8:	call   QWORD PTR [rip+0x1f6ca]        # 0x4487a8
  4290de:	test   eax,eax
  4290e0:	je     0x4290ea
  4290e2:	mov    edx,DWORD PTR [rsp+0x4c]
  4290e6:	test   edx,edx
  4290e8:	je     0x42909f
  4290ea:	call   0x42e010
  4290ef:	mov    DWORD PTR [rax],0x2a
  4290f5:	mov    eax,0xffffffff
  4290fa:	add    rsp,0x58
  4290fe:	ret    
  4290ff:	nop
  429100:	push   rdi
  429101:	push   rsi
  429102:	push   rbx
  429103:	sub    rsp,0x30
  429107:	lea    rax,[rsp+0x20]
  42910c:	test   rcx,rcx
  42910f:	mov    rbx,rcx
  429112:	mov    esi,edx
  429114:	cmove  rbx,rax
  429118:	mov    rax,QWORD PTR [rip+0x14771]        # 0x43d890
  42911f:	mov    rax,QWORD PTR [rax]
  429122:	mov    edi,DWORD PTR [rax]
  429124:	call   0x42e060
  429129:	movzx  edx,si
  42912c:	mov    r8d,eax
  42912f:	mov    rcx,rbx
  429132:	mov    r9d,edi
  429135:	call   0x429080
  42913a:	cdqe   
  42913c:	add    rsp,0x30
  429140:	pop    rbx
  429141:	pop    rsi
  429142:	pop    rdi
  429143:	ret    
  429144:	xchg   ax,ax
  429146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429150:	push   r14
  429152:	push   r13
  429154:	push   r12
  429156:	push   rbp
  429157:	push   rdi
  429158:	push   rsi
  429159:	push   rbx
  42915a:	sub    rsp,0x30
  42915e:	mov    r13,rdx
  429161:	mov    rbx,rcx
  429164:	mov    rdi,r8
  429167:	call   0x42e060
  42916c:	mov    ebp,eax
  42916e:	mov    rax,QWORD PTR [rip+0x1471b]        # 0x43d890
  429175:	mov    r14,QWORD PTR [r13+0x0]
  429179:	mov    rax,QWORD PTR [rax]
  42917c:	test   r14,r14
  42917f:	mov    r12d,DWORD PTR [rax]
  429182:	je     0x429270
  429188:	xor    esi,esi
  42918a:	test   rbx,rbx
  42918d:	je     0x429220
  429193:	test   rdi,rdi
  429196:	jne    0x4291b8
  429198:	jmp    0x4291e4
  42919a:	nop    WORD PTR [rax+rax*1+0x0]
  4291a0:	movsxd r10,eax
  4291a3:	add    rbx,r10
  4291a6:	add    rsi,r10
  4291a9:	cmp    BYTE PTR [rbx-0x1],0x0
  4291ad:	je     0x429200
  4291af:	add    r14,0x2
  4291b3:	cmp    rdi,rsi
  4291b6:	jbe    0x4291e4
  4291b8:	movzx  edx,WORD PTR [r14]
  4291bc:	mov    r9d,r12d
  4291bf:	mov    r8d,ebp
  4291c2:	mov    rcx,rbx
  4291c5:	call   0x429080
  4291ca:	test   eax,eax
  4291cc:	jg     0x4291a0
  4291ce:	mov    rax,0xffffffffffffffff
  4291d5:	add    rsp,0x30
  4291d9:	pop    rbx
  4291da:	pop    rsi
  4291db:	pop    rdi
  4291dc:	pop    rbp
  4291dd:	pop    r12
  4291df:	pop    r13
  4291e1:	pop    r14
  4291e3:	ret    
  4291e4:	mov    rax,rsi
  4291e7:	mov    QWORD PTR [r13+0x0],r14
  4291eb:	add    rsp,0x30
  4291ef:	pop    rbx
  4291f0:	pop    rsi
  4291f1:	pop    rdi
  4291f2:	pop    rbp
  4291f3:	pop    r12
  4291f5:	pop    r13
  4291f7:	pop    r14
  4291f9:	ret    
  4291fa:	nop    WORD PTR [rax+rax*1+0x0]
  429200:	lea    rax,[rsi-0x1]
  429204:	mov    QWORD PTR [r13+0x0],0x0
  42920c:	add    rsp,0x30
  429210:	pop    rbx
  429211:	pop    rsi
  429212:	pop    rdi
  429213:	pop    rbp
  429214:	pop    r12
  429216:	pop    r13
  429218:	pop    r14
  42921a:	ret    
  42921b:	nop    DWORD PTR [rax+rax*1+0x0]
  429220:	test   rdi,rdi
  429223:	lea    rbx,[rsp+0x20]
  429228:	jne    0x42924b
  42922a:	jmp    0x429281
  42922c:	nop    DWORD PTR [rax+0x0]
  429230:	movsxd rdx,eax
  429233:	sub    eax,0x1
  429236:	cdqe   
  429238:	add    rsi,rdx
  42923b:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  429240:	je     0x429289
  429242:	add    r14,0x2
  429246:	cmp    rdi,rsi
  429249:	jbe    0x429281
  42924b:	movzx  edx,WORD PTR [r14]
  42924f:	mov    r9d,r12d
  429252:	mov    r8d,ebp
  429255:	mov    rcx,rbx
  429258:	call   0x429080
  42925d:	test   eax,eax
  42925f:	jg     0x429230
  429261:	jmp    0x4291ce
  429266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429270:	xor    eax,eax
  429272:	add    rsp,0x30
  429276:	pop    rbx
  429277:	pop    rsi
  429278:	pop    rdi
  429279:	pop    rbp
  42927a:	pop    r12
  42927c:	pop    r13
  42927e:	pop    r14
  429280:	ret    
  429281:	mov    rax,rsi
  429284:	jmp    0x4291d5
  429289:	lea    rax,[rsi-0x1]
  42928d:	jmp    0x4291d5
  429292:	nop
  429293:	nop
  429294:	nop
  429295:	nop
  429296:	nop
  429297:	nop
  429298:	nop
  429299:	nop
  42929a:	nop
  42929b:	nop
  42929c:	nop
  42929d:	nop
  42929e:	nop
  42929f:	nop
  4292a0:	sub    rsp,0x38
  4292a4:	lea    rdx,[rsp+0x28]
  4292a9:	call   0x42df40
  4292ae:	test   eax,eax
  4292b0:	mov    rax,0xffffffffffffffff
  4292b7:	cmove  rax,QWORD PTR [rsp+0x28]
  4292bd:	add    rsp,0x38
  4292c1:	ret    
  4292c2:	nop
  4292c3:	nop
  4292c4:	nop
  4292c5:	nop
  4292c6:	nop
  4292c7:	nop
  4292c8:	nop
  4292c9:	nop
  4292ca:	nop
  4292cb:	nop
  4292cc:	nop
  4292cd:	nop
  4292ce:	nop
  4292cf:	nop
  4292d0:	jmp    0x42dfb0
  4292d5:	nop
  4292d6:	nop
  4292d7:	nop
  4292d8:	nop
  4292d9:	nop
  4292da:	nop
  4292db:	nop
  4292dc:	nop
  4292dd:	nop
  4292de:	nop
  4292df:	nop
  4292e0:	sub    rsp,0x38
  4292e4:	mov    r9,rdx
  4292e7:	mov    QWORD PTR [rsp+0x20],r8
  4292ec:	mov    rdx,rcx
  4292ef:	xor    r8d,r8d
  4292f2:	mov    ecx,0x6000
  4292f7:	call   0x42ac90
  4292fc:	add    rsp,0x38
  429300:	ret    
  429301:	nop
  429302:	nop
  429303:	nop
  429304:	nop
  429305:	nop
  429306:	nop
  429307:	nop
  429308:	nop
  429309:	nop
  42930a:	nop
  42930b:	nop
  42930c:	nop
  42930d:	nop
  42930e:	nop
  42930f:	nop
  429310:	push   rsi
  429311:	push   rbx
  429312:	sub    rsp,0x38
  429316:	mov    rbx,rcx
  429319:	mov    rsi,rdx
  42931c:	call   0x42e048
  429321:	lea    rdx,[rax+0x30]
  429325:	mov    QWORD PTR [rsp+0x20],rsi
  42932a:	mov    r9,rbx
  42932d:	xor    r8d,r8d
  429330:	mov    ecx,0x6000
  429335:	call   0x42ac90
  42933a:	add    rsp,0x38
  42933e:	pop    rbx
  42933f:	pop    rsi
  429340:	ret    
  429341:	nop
  429342:	nop
  429343:	nop
  429344:	nop
  429345:	nop
  429346:	nop
  429347:	nop
  429348:	nop
  429349:	nop
  42934a:	nop
  42934b:	nop
  42934c:	nop
  42934d:	nop
  42934e:	nop
  42934f:	nop
  429350:	push   rsi
  429351:	push   rbx
  429352:	sub    rsp,0x38
  429356:	test   rdx,rdx
  429359:	mov    rsi,rcx
  42935c:	je     0x429390
  42935e:	lea    rbx,[rdx-0x1]
  429362:	mov    QWORD PTR [rsp+0x20],r9
  429367:	mov    rdx,rcx
  42936a:	mov    r9,r8
  42936d:	xor    ecx,ecx
  42936f:	mov    r8d,ebx
  429372:	call   0x42ac90
  429377:	cmp    eax,ebx
  429379:	cmovle ebx,eax
  42937c:	movsxd rbx,ebx
  42937f:	mov    BYTE PTR [rsi+rbx*1],0x0
  429383:	add    rsp,0x38
  429387:	pop    rbx
  429388:	pop    rsi
  429389:	ret    
  42938a:	nop    WORD PTR [rax+rax*1+0x0]
  429390:	mov    QWORD PTR [rsp+0x20],r9
  429395:	mov    rdx,rcx
  429398:	mov    r9,r8
  42939b:	xor    ecx,ecx
  42939d:	xor    r8d,r8d
  4293a0:	call   0x42ac90
  4293a5:	add    rsp,0x38
  4293a9:	pop    rbx
  4293aa:	pop    rsi
  4293ab:	ret    
  4293ac:	nop
  4293ad:	nop
  4293ae:	nop
  4293af:	nop
  4293b0:	push   rbx
  4293b1:	sub    rsp,0x30
  4293b5:	mov    rbx,rcx
  4293b8:	mov    r9,rdx
  4293bb:	mov    QWORD PTR [rsp+0x20],r8
  4293c0:	mov    rdx,rcx
  4293c3:	xor    r8d,r8d
  4293c6:	mov    ecx,0x4000
  4293cb:	call   0x42ac90
  4293d0:	movsxd rdx,eax
  4293d3:	mov    BYTE PTR [rbx+rdx*1],0x0
  4293d7:	add    rsp,0x30
  4293db:	pop    rbx
  4293dc:	ret    
  4293dd:	nop
  4293de:	nop
  4293df:	nop
  4293e0:	push   r12
  4293e2:	push   rbp
  4293e3:	push   rdi
  4293e4:	push   rsi
  4293e5:	push   rbx
  4293e6:	sub    rsp,0x20
  4293ea:	mov    r9,r8
  4293ed:	mov    r12,rcx
  4293f0:	mov    rdi,rdx
  4293f3:	xor    ecx,ecx
  4293f5:	mov    rbp,r8
  4293f8:	mov    r8,rdx
  4293fb:	xor    edx,edx
  4293fd:	call   0x429350
  429402:	test   eax,eax
  429404:	mov    ebx,eax
  429406:	js     0x429450
  429408:	lea    esi,[rax+0x1]
  42940b:	movsxd rsi,esi
  42940e:	mov    rcx,rsi
  429411:	call   0x42dea8
  429416:	test   rax,rax
  429419:	mov    QWORD PTR [r12],rax
  42941d:	je     0x429450
  42941f:	mov    rdx,rsi
  429422:	mov    r9,rbp
  429425:	mov    r8,rdi
  429428:	mov    rcx,rax
  42942b:	call   0x429350
  429430:	mov    rdx,QWORD PTR [r12]
  429434:	movsxd rax,ebx
  429437:	mov    BYTE PTR [rdx+rax*1],0x0
  42943b:	mov    eax,ebx
  42943d:	add    rsp,0x20
  429441:	pop    rbx
  429442:	pop    rsi
  429443:	pop    rdi
  429444:	pop    rbp
  429445:	pop    r12
  429447:	ret    
  429448:	nop    DWORD PTR [rax+rax*1+0x0]
  429450:	mov    eax,0xffffffff
  429455:	jmp    0x42943d
  429457:	nop
  429458:	nop
  429459:	nop
  42945a:	nop
  42945b:	nop
  42945c:	nop
  42945d:	nop
  42945e:	nop
  42945f:	nop
  429460:	sub    rsp,0x58
  429464:	mov    rax,QWORD PTR [rdx]
  429467:	mov    r11,rdx
  42946a:	mov    edx,DWORD PTR [rdx+0x8]
  42946d:	mov    r10,rdx
  429470:	and    r10w,0x7fff
  429476:	jne    0x429494
  429478:	mov    rdx,rax
  42947b:	shr    rdx,0x20
  42947f:	or     eax,edx
  429481:	jne    0x429500
  429483:	mov    DWORD PTR [rsp+0x44],0x0
  42948b:	movzx  eax,WORD PTR [r11+0x8]
  429490:	xor    edx,edx
  429492:	jmp    0x4294bb
  429494:	cmp    r10w,0x7fff
  42949a:	je     0x429520
  4294a0:	movzx  eax,WORD PTR [r11+0x8]
  4294a5:	mov    DWORD PTR [rsp+0x44],0x1
  4294ad:	mov    edx,eax
  4294af:	and    edx,0x7fff
  4294b5:	sub    edx,0x403e
  4294bb:	and    eax,0x8000
  4294c0:	mov    r10,QWORD PTR [rsp+0x80]
  4294c8:	mov    DWORD PTR [r10],eax
  4294cb:	lea    rax,[rsp+0x48]
  4294d0:	mov    QWORD PTR [rsp+0x30],r9
  4294d5:	mov    DWORD PTR [rsp+0x20],ecx
  4294d9:	lea    r9,[rsp+0x44]
  4294de:	lea    rcx,[rip+0x89fb]        # 0x431ee0
  4294e5:	mov    DWORD PTR [rsp+0x28],r8d
  4294ea:	mov    QWORD PTR [rsp+0x38],rax
  4294ef:	mov    r8,r11
  4294f2:	call   0x42b910
  4294f7:	add    rsp,0x58
  4294fb:	ret    
  4294fc:	nop    DWORD PTR [rax+0x0]
  429500:	test   edx,edx
  429502:	js     0x4294a0
  429504:	mov    DWORD PTR [rsp+0x44],0x2
  42950c:	movzx  eax,WORD PTR [r11+0x8]
  429511:	mov    edx,0xffffbfc3
  429516:	jmp    0x4294bb
  429518:	nop    DWORD PTR [rax+rax*1+0x0]
  429520:	mov    rdx,rax
  429523:	shr    rdx,0x20
  429527:	and    edx,0x7fffffff
  42952d:	or     edx,eax
  42952f:	jne    0x429545
  429531:	mov    DWORD PTR [rsp+0x44],0x3
  429539:	movzx  eax,WORD PTR [r11+0x8]
  42953e:	xor    edx,edx
  429540:	jmp    0x4294bb
  429545:	mov    DWORD PTR [rsp+0x44],0x4
  42954d:	xor    edx,edx
  42954f:	xor    eax,eax
  429551:	jmp    0x4294c0
  429556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429560:	push   rbx
  429561:	sub    rsp,0x20
  429565:	mov    rbx,rdx
  429568:	mov    edx,DWORD PTR [rdx+0x8]
  42956b:	test   dh,0x40
  42956e:	jne    0x429578
  429570:	mov    eax,DWORD PTR [rbx+0x24]
  429573:	cmp    DWORD PTR [rbx+0x28],eax
  429576:	jle    0x42958a
  429578:	and    dh,0x20
  42957b:	jne    0x4295a0
  42957d:	movsxd rax,DWORD PTR [rbx+0x24]
  429581:	mov    rdx,QWORD PTR [rbx]
  429584:	mov    BYTE PTR [rdx+rax*1],cl
  429587:	mov    eax,DWORD PTR [rbx+0x24]
  42958a:	add    eax,0x1
  42958d:	mov    DWORD PTR [rbx+0x24],eax
  429590:	add    rsp,0x20
  429594:	pop    rbx
  429595:	ret    
  429596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4295a0:	mov    rdx,QWORD PTR [rbx]
  4295a3:	call   0x42df20
  4295a8:	mov    eax,DWORD PTR [rbx+0x24]
  4295ab:	add    eax,0x1
  4295ae:	mov    DWORD PTR [rbx+0x24],eax
  4295b1:	add    rsp,0x20
  4295b5:	pop    rbx
  4295b6:	ret    
  4295b7:	nop    WORD PTR [rax+rax*1+0x0]
  4295c0:	push   r14
  4295c2:	push   r13
  4295c4:	push   r12
  4295c6:	push   rbp
  4295c7:	push   rdi
  4295c8:	push   rsi
  4295c9:	push   rbx
  4295ca:	sub    rsp,0x40
  4295ce:	lea    r14,[rsp+0x2c]
  4295d3:	lea    r13,[rsp+0x30]
  4295d8:	mov    ebx,edx
  4295da:	mov    rsi,r8
  4295dd:	xor    edx,edx
  4295df:	mov    r12,rcx
  4295e2:	mov    r8,r14
  4295e5:	mov    rcx,r13
  4295e8:	call   0x429100
  4295ed:	mov    ebp,DWORD PTR [rsi+0x10]
  4295f0:	cmp    ebp,ebx
  4295f2:	jge    0x429699
  4295f8:	test   ebp,ebp
  4295fa:	js     0x429699
  429600:	mov    eax,DWORD PTR [rsi+0xc]
  429603:	cmp    ebp,eax
  429605:	jge    0x4296a6
  42960b:	sub    eax,ebp
  42960d:	test   eax,eax
  42960f:	mov    DWORD PTR [rsi+0xc],eax
  429612:	jle    0x429620
  429614:	test   BYTE PTR [rsi+0x9],0x4
  429618:	je     0x4296b2
  42961e:	xchg   ax,ax
  429620:	test   ebp,ebp
  429622:	jle    0x42967d
  429624:	add    r12,0x2
  429628:	movzx  edx,WORD PTR [r12-0x2]
  42962e:	mov    r8,r14
  429631:	mov    rcx,r13
  429634:	call   0x429100
  429639:	test   eax,eax
  42963b:	jle    0x42967d
  42963d:	sub    eax,0x1
  429640:	mov    rbx,r13
  429643:	lea    rdi,[r13+rax*1+0x1]
  429648:	nop    DWORD PTR [rax+rax*1+0x0]
  429650:	add    rbx,0x1
  429654:	movsx  ecx,BYTE PTR [rbx-0x1]
  429658:	mov    rdx,rsi
  42965b:	call   0x429560
  429660:	cmp    rbx,rdi
  429663:	jne    0x429650
  429665:	sub    ebp,0x1
  429668:	jmp    0x429620
  42966a:	nop    WORD PTR [rax+rax*1+0x0]
  429670:	mov    rdx,rsi
  429673:	mov    ecx,0x20
  429678:	call   0x429560
  42967d:	mov    eax,DWORD PTR [rsi+0xc]
  429680:	lea    edx,[rax-0x1]
  429683:	test   eax,eax
  429685:	mov    DWORD PTR [rsi+0xc],edx
  429688:	jg     0x429670
  42968a:	add    rsp,0x40
  42968e:	pop    rbx
  42968f:	pop    rsi
  429690:	pop    rdi
  429691:	pop    rbp
  429692:	pop    r12
  429694:	pop    r13
  429696:	pop    r14
  429698:	ret    
  429699:	mov    eax,DWORD PTR [rsi+0xc]
  42969c:	mov    ebp,ebx
  42969e:	cmp    ebp,eax
  4296a0:	jl     0x42960b
  4296a6:	mov    DWORD PTR [rsi+0xc],0xffffffff
  4296ad:	jmp    0x429620
  4296b2:	sub    eax,0x1
  4296b5:	mov    DWORD PTR [rsi+0xc],eax
  4296b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4296c0:	mov    rdx,rsi
  4296c3:	mov    ecx,0x20
  4296c8:	call   0x429560
  4296cd:	mov    eax,DWORD PTR [rsi+0xc]
  4296d0:	lea    edx,[rax-0x1]
  4296d3:	test   eax,eax
  4296d5:	mov    DWORD PTR [rsi+0xc],edx
  4296d8:	jne    0x4296c0
  4296da:	jmp    0x429620
  4296df:	nop
  4296e0:	push   rdi
  4296e1:	push   rsi
  4296e2:	push   rbx
  4296e3:	sub    rsp,0x20
  4296e7:	mov    edi,DWORD PTR [r8+0x10]
  4296eb:	mov    rsi,rcx
  4296ee:	mov    rbx,r8
  4296f1:	cmp    edi,edx
  4296f3:	jge    0x429770
  4296f5:	test   edi,edi
  4296f7:	js     0x429770
  4296f9:	mov    eax,DWORD PTR [rbx+0xc]
  4296fc:	cmp    edi,eax
  4296fe:	jge    0x429779
  429700:	sub    eax,edi
  429702:	test   eax,eax
  429704:	mov    DWORD PTR [rbx+0xc],eax
  429707:	jle    0x4297d2
  42970d:	test   BYTE PTR [rbx+0x9],0x4
  429711:	jne    0x4297a0
  429717:	sub    eax,0x1
  42971a:	mov    DWORD PTR [rbx+0xc],eax
  42971d:	nop    DWORD PTR [rax]
  429720:	mov    rdx,rbx
  429723:	mov    ecx,0x20
  429728:	call   0x429560
  42972d:	mov    eax,DWORD PTR [rbx+0xc]
  429730:	mov    edx,eax
  429732:	sub    eax,0x1
  429735:	test   edx,edx
  429737:	mov    DWORD PTR [rbx+0xc],eax
  42973a:	jne    0x429720
  42973c:	test   edi,edi
  42973e:	lea    edx,[rdi-0x1]
  429741:	je     0x4297c0
  429743:	lea    rdi,[rsi+rdx*1+0x1]
  429748:	nop    DWORD PTR [rax+rax*1+0x0]
  429750:	add    rsi,0x1
  429754:	movsx  ecx,BYTE PTR [rsi-0x1]
  429758:	mov    rdx,rbx
  42975b:	call   0x429560
  429760:	cmp    rsi,rdi
  429763:	jne    0x429750
  429765:	jmp    0x4297bd
  429767:	nop    WORD PTR [rax+rax*1+0x0]
  429770:	mov    eax,DWORD PTR [rbx+0xc]
  429773:	mov    edi,edx
  429775:	cmp    edi,eax
  429777:	jl     0x429700
  429779:	test   edi,edi
  42977b:	mov    DWORD PTR [rbx+0xc],0xffffffff
  429782:	lea    edx,[rdi-0x1]
  429785:	jne    0x429743
  429787:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  42978e:	add    rsp,0x20
  429792:	pop    rbx
  429793:	pop    rsi
  429794:	pop    rdi
  429795:	ret    
  429796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4297a0:	test   edi,edi
  4297a2:	lea    edx,[rdi-0x1]
  4297a5:	jne    0x429743
  4297a7:	sub    eax,0x1
  4297aa:	mov    DWORD PTR [rbx+0xc],eax
  4297ad:	nop    DWORD PTR [rax]
  4297b0:	mov    rdx,rbx
  4297b3:	mov    ecx,0x20
  4297b8:	call   0x429560
  4297bd:	mov    eax,DWORD PTR [rbx+0xc]
  4297c0:	lea    edx,[rax-0x1]
  4297c3:	test   eax,eax
  4297c5:	mov    DWORD PTR [rbx+0xc],edx
  4297c8:	jg     0x4297b0
  4297ca:	add    rsp,0x20
  4297ce:	pop    rbx
  4297cf:	pop    rsi
  4297d0:	pop    rdi
  4297d1:	ret    
  4297d2:	test   edi,edi
  4297d4:	lea    edx,[rdi-0x1]
  4297d7:	jne    0x429743
  4297dd:	sub    eax,0x1
  4297e0:	mov    DWORD PTR [rbx+0xc],eax
  4297e3:	jmp    0x42978e
  4297e5:	nop
  4297e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4297f0:	sub    rsp,0x38
  4297f4:	test   ecx,ecx
  4297f6:	mov    DWORD PTR [r8+0x10],0xffffffff
  4297fe:	je     0x429844
  429800:	lea    rcx,[rsp+0x20]
  429805:	mov    r11d,DWORD PTR [r8+0x8]
  429809:	mov    BYTE PTR [rsp+0x20],0x2d
  42980e:	lea    r10,[rcx+0x1]
  429812:	and    r11d,0x20
  429816:	xor    r9d,r9d
  429819:	movzx  eax,BYTE PTR [rdx+r9*1]
  42981e:	and    eax,0xffffffdf
  429821:	or     eax,r11d
  429824:	mov    BYTE PTR [r10+r9*1],al
  429828:	add    r9,0x1
  42982c:	cmp    r9,0x3
  429830:	jne    0x429819
  429832:	lea    rdx,[r10+0x3]
  429836:	sub    rdx,rcx
  429839:	call   0x4296e0
  42983e:	nop
  42983f:	add    rsp,0x38
  429843:	ret    
  429844:	mov    r11d,DWORD PTR [r8+0x8]
  429848:	test   r11d,0x100
  42984f:	je     0x429861
  429851:	lea    rcx,[rsp+0x20]
  429856:	mov    BYTE PTR [rsp+0x20],0x2b
  42985b:	lea    r10,[rcx+0x1]
  42985f:	jmp    0x429812
  429861:	test   r11b,0x40
  429865:	je     0x429880
  429867:	lea    rcx,[rsp+0x20]
  42986c:	mov    BYTE PTR [rsp+0x20],0x20
  429871:	lea    r10,[rcx+0x1]
  429875:	jmp    0x429812
  429877:	nop    WORD PTR [rax+rax*1+0x0]
  429880:	lea    rcx,[rsp+0x20]
  429885:	mov    r10,rcx
  429888:	jmp    0x429812
  42988a:	nop    WORD PTR [rax+rax*1+0x0]
  429890:	push   rbp
  429891:	push   r12
  429893:	push   rdi
  429894:	push   rsi
  429895:	push   rbx
  429896:	mov    rbp,rsp
  429899:	sub    rsp,0x30
  42989d:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  4298a1:	mov    rsi,rcx
  4298a4:	je     0x429940
  4298aa:	movzx  edx,WORD PTR [rcx+0x18]
  4298ae:	test   dx,dx
  4298b1:	je     0x429912
  4298b3:	movsxd rax,DWORD PTR [rsi+0x14]
  4298b7:	mov    r12,rsp
  4298ba:	add    rax,0xf
  4298be:	and    rax,0xfffffffffffffff0
  4298c2:	call   0x4283e0
  4298c7:	sub    rsp,rax
  4298ca:	lea    r8,[rbp-0x4]
  4298ce:	mov    DWORD PTR [rbp-0x4],0x0
  4298d5:	lea    rbx,[rsp+0x20]
  4298da:	mov    rcx,rbx
  4298dd:	call   0x429100
  4298e2:	test   eax,eax
  4298e4:	jle    0x429930
  4298e6:	sub    eax,0x1
  4298e9:	lea    rdi,[rbx+rax*1+0x1]
  4298ee:	xchg   ax,ax
  4298f0:	add    rbx,0x1
  4298f4:	movsx  ecx,BYTE PTR [rbx-0x1]
  4298f8:	mov    rdx,rsi
  4298fb:	call   0x429560
  429900:	cmp    rbx,rdi
  429903:	jne    0x4298f0
  429905:	mov    rsp,r12
  429908:	mov    rsp,rbp
  42990b:	pop    rbx
  42990c:	pop    rsi
  42990d:	pop    rdi
  42990e:	pop    r12
  429910:	pop    rbp
  429911:	ret    
  429912:	mov    rdx,rsi
  429915:	mov    ecx,0x2e
  42991a:	call   0x429560
  42991f:	nop
  429920:	mov    rsp,rbp
  429923:	pop    rbx
  429924:	pop    rsi
  429925:	pop    rdi
  429926:	pop    r12
  429928:	pop    rbp
  429929:	ret    
  42992a:	nop    WORD PTR [rax+rax*1+0x0]
  429930:	mov    rdx,rsi
  429933:	mov    ecx,0x2e
  429938:	call   0x429560
  42993d:	jmp    0x429905
  42993f:	nop
  429940:	mov    DWORD PTR [rbp-0x4],0x0
  429947:	call   0x42deb0
  42994c:	mov    rdx,QWORD PTR [rax]
  42994f:	lea    rcx,[rbp-0x6]
  429953:	lea    r9,[rbp-0x4]
  429957:	mov    r8d,0x10
  42995d:	call   0x42db70
  429962:	test   eax,eax
  429964:	jle    0x429976
  429966:	movzx  edx,WORD PTR [rbp-0x6]
  42996a:	mov    WORD PTR [rsi+0x18],dx
  42996e:	mov    DWORD PTR [rsi+0x14],eax
  429971:	jmp    0x4298ae
  429976:	movzx  edx,WORD PTR [rsi+0x18]
  42997a:	jmp    0x42996e
  42997c:	nop    DWORD PTR [rax+0x0]
  429980:	push   r12
  429982:	push   rbp
  429983:	push   rdi
  429984:	push   rsi
  429985:	push   rbx
  429986:	sub    rsp,0x20
  42998a:	mov    esi,r8d
  42998d:	mov    ebp,ecx
  42998f:	mov    rdi,rdx
  429992:	test   esi,esi
  429994:	mov    rbx,r9
  429997:	mov    r8d,DWORD PTR [r9+0xc]
  42999b:	jle    0x429b72
  4299a1:	cmp    esi,r8d
  4299a4:	jg     0x429ae0
  4299aa:	sub    r8d,esi
  4299ad:	mov    DWORD PTR [r9+0xc],r8d
  4299b1:	test   r8d,r8d
  4299b4:	js     0x429ae0
  4299ba:	mov    eax,DWORD PTR [rbx+0x10]
  4299bd:	cmp    eax,r8d
  4299c0:	jge    0x429ae0
  4299c6:	sub    r8d,eax
  4299c9:	test   r8d,r8d
  4299cc:	mov    DWORD PTR [rbx+0xc],r8d
  4299d0:	jle    0x429aed
  4299d6:	test   eax,eax
  4299d8:	jle    0x429c25
  4299de:	sub    r8d,0x1
  4299e2:	test   esi,esi
  4299e4:	mov    DWORD PTR [rbx+0xc],r8d
  4299e8:	jle    0x4299f4
  4299ea:	test   BYTE PTR [rbx+0x9],0x10
  4299ee:	jne    0x429aff
  4299f4:	test   r8d,r8d
  4299f7:	jle    0x429a3d
  4299f9:	test   ebp,ebp
  4299fb:	jne    0x429a0b
  4299fd:	mov    eax,DWORD PTR [rbx+0x8]
  429a00:	test   eax,0x1c0
  429a05:	je     0x429c05
  429a0b:	sub    r8d,0x1
  429a0f:	test   r8d,r8d
  429a12:	mov    DWORD PTR [rbx+0xc],r8d
  429a16:	jle    0x429a3d
  429a18:	test   DWORD PTR [rbx+0x8],0x600
  429a1f:	jne    0x429a3d
  429a21:	jmp    0x429a30
  429a23:	mov    rdx,rbx
  429a26:	mov    ecx,0x20
  429a2b:	call   0x429560
  429a30:	mov    eax,DWORD PTR [rbx+0xc]
  429a33:	lea    edx,[rax-0x1]
  429a36:	test   eax,eax
  429a38:	mov    DWORD PTR [rbx+0xc],edx
  429a3b:	jg     0x429a23
  429a3d:	test   ebp,ebp
  429a3f:	jne    0x429b60
  429a45:	mov    eax,DWORD PTR [rbx+0x8]
  429a48:	test   ah,0x1
  429a4b:	jne    0x429b90
  429a51:	test   al,0x40
  429a53:	jne    0x429c13
  429a59:	mov    edx,DWORD PTR [rbx+0xc]
  429a5c:	test   edx,edx
  429a5e:	jle    0x429a73
  429a60:	mov    eax,DWORD PTR [rbx+0x8]
  429a63:	and    eax,0x600
  429a68:	cmp    eax,0x200
  429a6d:	je     0x429ba2
  429a73:	test   esi,esi
  429a75:	jle    0x429bd2
  429a7b:	lea    r12,[rbx+0x20]
  429a7f:	mov    ebp,0x55555556
  429a84:	movzx  eax,BYTE PTR [rdi]
  429a87:	mov    ecx,0x30
  429a8c:	test   al,al
  429a8e:	je     0x429a97
  429a90:	add    rdi,0x1
  429a94:	movsx  ecx,al
  429a97:	mov    rdx,rbx
  429a9a:	call   0x429560
  429a9f:	sub    esi,0x1
  429aa2:	je     0x429cc0
  429aa8:	test   BYTE PTR [rbx+0x9],0x10
  429aac:	je     0x429a84
  429aae:	cmp    WORD PTR [rbx+0x20],0x0
  429ab3:	je     0x429a84
  429ab5:	mov    eax,esi
  429ab7:	imul   ebp
  429ab9:	mov    eax,esi
  429abb:	sar    eax,0x1f
  429abe:	sub    edx,eax
  429ac0:	lea    eax,[rdx+rdx*2]
  429ac3:	cmp    esi,eax
  429ac5:	jne    0x429a84
  429ac7:	mov    r8,rbx
  429aca:	mov    edx,0x1
  429acf:	mov    rcx,r12
  429ad2:	call   0x4295c0
  429ad7:	jmp    0x429a84
  429ad9:	nop    DWORD PTR [rax+0x0]
  429ae0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  429ae7:	mov    r8d,0xffffffff
  429aed:	test   esi,esi
  429aef:	jle    0x429a3d
  429af5:	test   BYTE PTR [rbx+0x9],0x10
  429af9:	je     0x429a3d
  429aff:	cmp    WORD PTR [rbx+0x20],0x0
  429b04:	je     0x4299f4
  429b0a:	lea    ecx,[rsi+0x2]
  429b0d:	mov    edx,0x55555556
  429b12:	mov    eax,ecx
  429b14:	sar    ecx,0x1f
  429b17:	imul   edx
  429b19:	sub    edx,ecx
  429b1b:	cmp    edx,0x1
  429b1e:	jle    0x4299f4
  429b24:	test   r8d,r8d
  429b27:	jle    0x429a3d
  429b2d:	mov    eax,r8d
  429b30:	sub    eax,edx
  429b32:	add    eax,0x1
  429b35:	jmp    0x429b49
  429b37:	nop    WORD PTR [rax+rax*1+0x0]
  429b40:	test   r8d,r8d
  429b43:	je     0x429cb4
  429b49:	sub    r8d,0x1
  429b4d:	cmp    r8d,eax
  429b50:	jne    0x429b40
  429b52:	mov    DWORD PTR [rbx+0xc],r8d
  429b56:	jmp    0x4299f4
  429b5b:	nop    DWORD PTR [rax+rax*1+0x0]
  429b60:	mov    rdx,rbx
  429b63:	mov    ecx,0x2d
  429b68:	call   0x429560
  429b6d:	jmp    0x429a59
  429b72:	test   r8d,r8d
  429b75:	jle    0x4299b1
  429b7b:	sub    r8d,0x1
  429b7f:	mov    DWORD PTR [r9+0xc],r8d
  429b83:	jmp    0x4299ba
  429b88:	nop    DWORD PTR [rax+rax*1+0x0]
  429b90:	mov    rdx,rbx
  429b93:	mov    ecx,0x2b
  429b98:	call   0x429560
  429b9d:	jmp    0x429a59
  429ba2:	sub    edx,0x1
  429ba5:	mov    DWORD PTR [rbx+0xc],edx
  429ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  429bb0:	mov    rdx,rbx
  429bb3:	mov    ecx,0x30
  429bb8:	call   0x429560
  429bbd:	mov    eax,DWORD PTR [rbx+0xc]
  429bc0:	lea    edx,[rax-0x1]
  429bc3:	test   eax,eax
  429bc5:	mov    DWORD PTR [rbx+0xc],edx
  429bc8:	jg     0x429bb0
  429bca:	test   esi,esi
  429bcc:	jg     0x429a7b
  429bd2:	mov    rdx,rbx
  429bd5:	mov    ecx,0x30
  429bda:	call   0x429560
  429bdf:	mov    eax,DWORD PTR [rbx+0x10]
  429be2:	test   eax,eax
  429be4:	jg     0x429c52
  429be6:	test   BYTE PTR [rbx+0x9],0x8
  429bea:	jne    0x429c52
  429bec:	test   esi,esi
  429bee:	jne    0x429c96
  429bf4:	sub    eax,0x1
  429bf7:	mov    DWORD PTR [rbx+0x10],eax
  429bfa:	add    rsp,0x20
  429bfe:	pop    rbx
  429bff:	pop    rsi
  429c00:	pop    rdi
  429c01:	pop    rbp
  429c02:	pop    r12
  429c04:	ret    
  429c05:	test   ah,0x6
  429c08:	je     0x429a30
  429c0e:	jmp    0x429a48
  429c13:	mov    rdx,rbx
  429c16:	mov    ecx,0x20
  429c1b:	call   0x429560
  429c20:	jmp    0x429a59
  429c25:	mov    eax,DWORD PTR [rbx+0x8]
  429c28:	test   ah,0x8
  429c2b:	jne    0x4299de
  429c31:	test   esi,esi
  429c33:	jle    0x4299f9
  429c39:	test   ah,0x10
  429c3c:	je     0x4299f9
  429c42:	cmp    WORD PTR [rbx+0x20],0x0
  429c47:	jne    0x429b0a
  429c4d:	jmp    0x4299f9
  429c52:	mov    rcx,rbx
  429c55:	call   0x429890
  429c5a:	test   esi,esi
  429c5c:	je     0x429c7b
  429c5e:	jmp    0x429c93
  429c60:	movzx  eax,BYTE PTR [rdi]
  429c63:	mov    ecx,0x30
  429c68:	test   al,al
  429c6a:	je     0x429c73
  429c6c:	add    rdi,0x1
  429c70:	movsx  ecx,al
  429c73:	mov    rdx,rbx
  429c76:	call   0x429560
  429c7b:	mov    eax,DWORD PTR [rbx+0x10]
  429c7e:	lea    edx,[rax-0x1]
  429c81:	test   eax,eax
  429c83:	mov    DWORD PTR [rbx+0x10],edx
  429c86:	jg     0x429c60
  429c88:	add    rsp,0x20
  429c8c:	pop    rbx
  429c8d:	pop    rsi
  429c8e:	pop    rdi
  429c8f:	pop    rbp
  429c90:	pop    r12
  429c92:	ret    
  429c93:	mov    eax,DWORD PTR [rbx+0x10]
  429c96:	add    eax,esi
  429c98:	mov    DWORD PTR [rbx+0x10],eax
  429c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  429ca0:	mov    rdx,rbx
  429ca3:	mov    ecx,0x30
  429ca8:	call   0x429560
  429cad:	add    esi,0x1
  429cb0:	jne    0x429ca0
  429cb2:	jmp    0x429c7b
  429cb4:	mov    DWORD PTR [rbx+0xc],0x0
  429cbb:	jmp    0x429a3d
  429cc0:	mov    eax,DWORD PTR [rbx+0x10]
  429cc3:	test   eax,eax
  429cc5:	jle    0x429cd1
  429cc7:	mov    rcx,rbx
  429cca:	call   0x429890
  429ccf:	jmp    0x429c7b
  429cd1:	test   BYTE PTR [rbx+0x9],0x8
  429cd5:	jne    0x429cc7
  429cd7:	jmp    0x429bf4
  429cdc:	nop    DWORD PTR [rax+0x0]
  429ce0:	push   rsi
  429ce1:	push   rbx
  429ce2:	sub    rsp,0x68
  429ce6:	mov    r8d,DWORD PTR [rdx+0x10]
  429cea:	fld    TBYTE PTR [rcx]
  429cec:	mov    rbx,rdx
  429cef:	test   r8d,r8d
  429cf2:	js     0x429d90
  429cf8:	lea    rdx,[rsp+0x30]
  429cfd:	lea    r9,[rsp+0x4c]
  429d02:	mov    ecx,0x3
  429d07:	fstp   TBYTE PTR [rsp+0x50]
  429d0b:	mov    rax,QWORD PTR [rsp+0x50]
  429d10:	mov    QWORD PTR [rsp+0x30],rax
  429d15:	mov    rax,QWORD PTR [rsp+0x58]
  429d1a:	mov    QWORD PTR [rsp+0x38],rax
  429d1f:	lea    rax,[rsp+0x48]
  429d24:	mov    QWORD PTR [rsp+0x20],rax
  429d29:	call   0x429460
  429d2e:	mov    r8d,DWORD PTR [rsp+0x4c]
  429d33:	mov    rsi,rax
  429d36:	cmp    r8d,0xffff8000
  429d3d:	je     0x429da2
  429d3f:	mov    ecx,DWORD PTR [rsp+0x48]
  429d43:	mov    rdx,rax
  429d46:	mov    r9,rbx
  429d49:	call   0x429980
  429d4e:	mov    eax,DWORD PTR [rbx+0xc]
  429d51:	lea    edx,[rax-0x1]
  429d54:	test   eax,eax
  429d56:	mov    DWORD PTR [rbx+0xc],edx
  429d59:	jle    0x429d7e
  429d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  429d60:	mov    rdx,rbx
  429d63:	mov    ecx,0x20
  429d68:	call   0x429560
  429d6d:	mov    r8d,DWORD PTR [rbx+0xc]
  429d71:	lea    r9d,[r8-0x1]
  429d75:	test   r8d,r8d
  429d78:	mov    DWORD PTR [rbx+0xc],r9d
  429d7c:	jg     0x429d60
  429d7e:	mov    rcx,rsi
  429d81:	call   0x42b770
  429d86:	nop
  429d87:	add    rsp,0x68
  429d8b:	pop    rbx
  429d8c:	pop    rsi
  429d8d:	ret    
  429d8e:	xchg   ax,ax
  429d90:	mov    DWORD PTR [rdx+0x10],0x6
  429d97:	mov    r8d,0x6
  429d9d:	jmp    0x429cf8
  429da2:	mov    ecx,DWORD PTR [rsp+0x48]
  429da6:	mov    r8,rbx
  429da9:	mov    rdx,rax
  429dac:	call   0x4297f0
  429db1:	mov    rcx,rsi
  429db4:	call   0x42b770
  429db9:	nop
  429dba:	add    rsp,0x68
  429dbe:	pop    rbx
  429dbf:	pop    rsi
  429dc0:	ret    
  429dc1:	nop    DWORD PTR [rax+rax*1+0x0]
  429dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429dd0:	push   rbp
  429dd1:	push   r13
  429dd3:	push   r12
  429dd5:	push   rdi
  429dd6:	push   rsi
  429dd7:	push   rbx
  429dd8:	sub    rsp,0x28
  429ddc:	lea    rbp,[rsp+0x80]
  429de4:	mov    ebx,DWORD PTR [rdx+0x10]
  429de7:	mov    r11d,DWORD PTR [rdx+0x8]
  429deb:	mov    r8d,0x0
  429df1:	mov    rsi,rdx
  429df4:	test   ebx,ebx
  429df6:	cmovns r8d,ebx
  429dfa:	add    r8d,0x17
  429dfe:	test   r11d,0x1000
  429e05:	je     0x429e12
  429e07:	cmp    WORD PTR [rdx+0x20],0x0
  429e0c:	jne    0x42a002
  429e12:	movsxd r13,DWORD PTR [rsi+0xc]
  429e16:	movsxd rax,r8d
  429e19:	cmp    r8d,r13d
  429e1c:	cmovl  rax,r13
  429e20:	add    rax,0x1e
  429e24:	and    rax,0xfffffffffffffff0
  429e28:	call   0x4283e0
  429e2d:	sub    rsp,rax
  429e30:	test   r11b,0x80
  429e34:	lea    r12,[rsp+0x20]
  429e39:	je     0x429e4c
  429e3b:	test   rcx,rcx
  429e3e:	js     0x42a090
  429e44:	and    r11b,0x7f
  429e48:	mov    DWORD PTR [rsi+0x8],r11d
  429e4c:	test   rcx,rcx
  429e4f:	je     0x42a098
  429e55:	mov    r10d,r11d
  429e58:	mov    r8,r12
  429e5b:	movabs r9,0xcccccccccccccccd
  429e65:	and    r10d,0x1000
  429e6c:	jmp    0x429ea3
  429e6e:	xchg   ax,ax
  429e70:	cmp    r12,rdi
  429e73:	je     0x429ea0
  429e75:	test   r10d,r10d
  429e78:	je     0x429ea0
  429e7a:	cmp    WORD PTR [rsi+0x20],0x0
  429e7f:	je     0x429ea0
  429e81:	mov    rax,rdi
  429e84:	sub    rax,r12
  429e87:	cqo    
  429e89:	shr    rdx,0x3e
  429e8d:	add    rax,rdx
  429e90:	and    eax,0x3
  429e93:	sub    rax,rdx
  429e96:	cmp    rax,0x3
  429e9a:	je     0x429fe0
  429ea0:	mov    r8,rdi
  429ea3:	mov    rax,rcx
  429ea6:	lea    rdi,[r8+0x1]
  429eaa:	mul    r9
  429ead:	shr    rdx,0x3
  429eb1:	lea    rax,[rdx+rdx*4]
  429eb5:	add    rax,rax
  429eb8:	sub    rcx,rax
  429ebb:	add    ecx,0x30
  429ebe:	test   rdx,rdx
  429ec1:	mov    BYTE PTR [r8],cl
  429ec4:	mov    rcx,rdx
  429ec7:	jne    0x429e70
  429ec9:	test   ebx,ebx
  429ecb:	jle    0x429f05
  429ecd:	mov    rax,r12
  429ed0:	sub    rax,rdi
  429ed3:	add    eax,ebx
  429ed5:	test   eax,eax
  429ed7:	jle    0x429f05
  429ed9:	sub    eax,0x1
  429edc:	mov    rdx,rax
  429edf:	lea    rcx,[rdi+rax*1+0x1]
  429ee4:	mov    rax,rdi
  429ee7:	nop    WORD PTR [rax+rax*1+0x0]
  429ef0:	add    rax,0x1
  429ef4:	mov    BYTE PTR [rax-0x1],0x30
  429ef8:	cmp    rax,rcx
  429efb:	jne    0x429ef0
  429efd:	movsxd rax,edx
  429f00:	lea    rdi,[rdi+rax*1+0x1]
  429f05:	cmp    r12,rdi
  429f08:	jne    0x429f15
  429f0a:	test   ebx,ebx
  429f0c:	je     0x429f15
  429f0e:	mov    BYTE PTR [rdi],0x30
  429f11:	add    rdi,0x1
  429f15:	test   r13d,r13d
  429f18:	jle    0x429f7e
  429f1a:	mov    rax,r12
  429f1d:	sub    rax,rdi
  429f20:	add    r13d,eax
  429f23:	test   r13d,r13d
  429f26:	mov    DWORD PTR [rsi+0xc],r13d
  429f2a:	jle    0x429f7e
  429f2c:	test   r11d,0x1c0
  429f33:	je     0x429f3d
  429f35:	sub    r13d,0x1
  429f39:	mov    DWORD PTR [rsi+0xc],r13d
  429f3d:	test   ebx,ebx
  429f3f:	js     0x42a040
  429f45:	test   r11d,0x400
  429f4c:	jne    0x429f7e
  429f4e:	mov    eax,DWORD PTR [rsi+0xc]
  429f51:	lea    edx,[rax-0x1]
  429f54:	test   eax,eax
  429f56:	mov    DWORD PTR [rsi+0xc],edx
  429f59:	jle    0x429f7e
  429f5b:	nop    DWORD PTR [rax+rax*1+0x0]
  429f60:	mov    rdx,rsi
  429f63:	mov    ecx,0x20
  429f68:	call   0x429560
  429f6d:	mov    eax,DWORD PTR [rsi+0xc]
  429f70:	lea    edx,[rax-0x1]
  429f73:	test   eax,eax
  429f75:	mov    DWORD PTR [rsi+0xc],edx
  429f78:	jg     0x429f60
  429f7a:	mov    r11d,DWORD PTR [rsi+0x8]
  429f7e:	test   r11b,0x80
  429f82:	je     0x429ff0
  429f84:	lea    rbx,[rdi+0x1]
  429f88:	mov    BYTE PTR [rdi],0x2d
  429f8b:	cmp    r12,rbx
  429f8e:	jae    0x429fbe
  429f90:	sub    rbx,0x1
  429f94:	movsx  ecx,BYTE PTR [rbx]
  429f97:	mov    rdx,rsi
  429f9a:	call   0x429560
  429f9f:	cmp    rbx,r12
  429fa2:	jne    0x429f90
  429fa4:	mov    eax,DWORD PTR [rsi+0xc]
  429fa7:	lea    edx,[rax-0x1]
  429faa:	test   eax,eax
  429fac:	mov    DWORD PTR [rsi+0xc],edx
  429faf:	jle    0x429fcb
  429fb1:	mov    rdx,rsi
  429fb4:	mov    ecx,0x20
  429fb9:	call   0x429560
  429fbe:	mov    eax,DWORD PTR [rsi+0xc]
  429fc1:	lea    edx,[rax-0x1]
  429fc4:	test   eax,eax
  429fc6:	mov    DWORD PTR [rsi+0xc],edx
  429fc9:	jg     0x429fb1
  429fcb:	lea    rsp,[rbp-0x58]
  429fcf:	pop    rbx
  429fd0:	pop    rsi
  429fd1:	pop    rdi
  429fd2:	pop    r12
  429fd4:	pop    r13
  429fd6:	pop    rbp
  429fd7:	ret    
  429fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  429fe0:	lea    rdi,[r8+0x2]
  429fe4:	mov    BYTE PTR [r8+0x1],0x2c
  429fe9:	jmp    0x429ea0
  429fee:	xchg   ax,ax
  429ff0:	test   r11d,0x100
  429ff7:	je     0x42a020
  429ff9:	lea    rbx,[rdi+0x1]
  429ffd:	mov    BYTE PTR [rdi],0x2b
  42a000:	jmp    0x429f8b
  42a002:	mov    eax,r8d
  42a005:	mov    edx,0x55555556
  42a00a:	imul   edx
  42a00c:	mov    eax,r8d
  42a00f:	sar    eax,0x1f
  42a012:	sub    edx,eax
  42a014:	add    r8d,edx
  42a017:	jmp    0x429e12
  42a01c:	nop    DWORD PTR [rax+0x0]
  42a020:	and    r11d,0x40
  42a024:	mov    rbx,rdi
  42a027:	je     0x429f8b
  42a02d:	add    rbx,0x1
  42a031:	mov    BYTE PTR [rdi],0x20
  42a034:	jmp    0x429f8b
  42a039:	nop    DWORD PTR [rax+0x0]
  42a040:	mov    eax,r11d
  42a043:	and    eax,0x600
  42a048:	cmp    eax,0x200
  42a04d:	jne    0x429f45
  42a053:	mov    eax,DWORD PTR [rsi+0xc]
  42a056:	lea    ecx,[rax-0x1]
  42a059:	test   eax,eax
  42a05b:	mov    DWORD PTR [rsi+0xc],ecx
  42a05e:	jle    0x429f7e
  42a064:	lea    rdx,[rdi+rcx*1+0x1]
  42a069:	mov    rax,rdi
  42a06c:	nop    DWORD PTR [rax+0x0]
  42a070:	add    rax,0x1
  42a074:	mov    BYTE PTR [rax-0x1],0x30
  42a078:	cmp    rax,rdx
  42a07b:	jne    0x42a070
  42a07d:	lea    rdi,[rdi+rcx*1+0x1]
  42a082:	mov    DWORD PTR [rsi+0xc],0xffffffff
  42a089:	jmp    0x429f7e
  42a08e:	xchg   ax,ax
  42a090:	neg    rcx
  42a093:	jmp    0x429e4c
  42a098:	mov    rdi,r12
  42a09b:	jmp    0x429ec9
  42a0a0:	push   rdi
  42a0a1:	push   rsi
  42a0a2:	push   rbx
  42a0a3:	sub    rsp,0x20
  42a0a7:	mov    rsi,r9
  42a0aa:	lea    r9d,[r8-0x1]
  42a0ae:	mov    r8d,0x66666667
  42a0b4:	mov    r10,rdx
  42a0b7:	mov    eax,r9d
  42a0ba:	movsxd rbx,r9d
  42a0bd:	sar    r9d,0x1f
  42a0c1:	imul   r8d
  42a0c4:	sar    edx,0x2
  42a0c7:	mov    r8d,edx
  42a0ca:	sub    r8d,r9d
  42a0cd:	mov    r9d,0x1
  42a0d3:	je     0x42a0fb
  42a0d5:	mov    r11d,0x66666667
  42a0db:	nop    DWORD PTR [rax+rax*1+0x0]
  42a0e0:	mov    eax,r8d
  42a0e3:	sar    r8d,0x1f
  42a0e7:	add    r9d,0x1
  42a0eb:	imul   r11d
  42a0ee:	mov    eax,edx
  42a0f0:	sar    eax,0x2
  42a0f3:	sub    eax,r8d
  42a0f6:	mov    r8d,eax
  42a0f9:	jne    0x42a0e0
  42a0fb:	mov    edi,DWORD PTR [rsi+0x2c]
  42a0fe:	mov    eax,DWORD PTR [rsi+0xc]
  42a101:	cmp    r9d,edi
  42a104:	cmovge edi,r9d
  42a108:	lea    edx,[rdi+0x2]
  42a10b:	cmp    eax,edx
  42a10d:	jg     0x42a162
  42a10f:	mov    DWORD PTR [rsi+0xc],0xffffffff
  42a116:	mov    r9,rsi
  42a119:	mov    rdx,r10
  42a11c:	mov    r8d,0x1
  42a122:	call   0x429980
  42a127:	mov    ecx,DWORD PTR [rsi+0x8]
  42a12a:	mov    eax,DWORD PTR [rsi+0x2c]
  42a12d:	mov    rdx,rsi
  42a130:	mov    DWORD PTR [rsi+0x10],eax
  42a133:	mov    eax,ecx
  42a135:	and    ecx,0x20
  42a138:	or     eax,0x1c0
  42a13d:	or     ecx,0x45
  42a140:	mov    DWORD PTR [rsi+0x8],eax
  42a143:	call   0x429560
  42a148:	lea    r9d,[rdi+0x1]
  42a14c:	add    DWORD PTR [rsi+0xc],r9d
  42a150:	mov    rdx,rsi
  42a153:	mov    rcx,rbx
  42a156:	add    rsp,0x20
  42a15a:	pop    rbx
  42a15b:	pop    rsi
  42a15c:	pop    rdi
  42a15d:	jmp    0x429dd0
  42a162:	sub    eax,edx
  42a164:	mov    DWORD PTR [rsi+0xc],eax
  42a167:	jmp    0x42a116
  42a169:	nop    DWORD PTR [rax+0x0]
  42a170:	push   rsi
  42a171:	push   rbx
  42a172:	sub    rsp,0x68
  42a176:	mov    eax,DWORD PTR [rdx+0x10]
  42a179:	fld    TBYTE PTR [rcx]
  42a17b:	mov    rbx,rdx
  42a17e:	test   eax,eax
  42a180:	lea    r8d,[rax+0x1]
  42a184:	js     0x42a1f0
  42a186:	lea    rdx,[rsp+0x30]
  42a18b:	lea    r9,[rsp+0x4c]
  42a190:	mov    ecx,0x2
  42a195:	fstp   TBYTE PTR [rsp+0x50]
  42a199:	mov    rax,QWORD PTR [rsp+0x50]
  42a19e:	mov    QWORD PTR [rsp+0x30],rax
  42a1a3:	mov    rax,QWORD PTR [rsp+0x58]
  42a1a8:	mov    QWORD PTR [rsp+0x38],rax
  42a1ad:	lea    rax,[rsp+0x48]
  42a1b2:	mov    QWORD PTR [rsp+0x20],rax
  42a1b7:	call   0x429460
  42a1bc:	mov    r8d,DWORD PTR [rsp+0x4c]
  42a1c1:	mov    rsi,rax
  42a1c4:	cmp    r8d,0xffff8000
  42a1cb:	je     0x42a200
  42a1cd:	mov    ecx,DWORD PTR [rsp+0x48]
  42a1d1:	mov    r9,rbx
  42a1d4:	mov    rdx,rax
  42a1d7:	call   0x42a0a0
  42a1dc:	mov    rcx,rsi
  42a1df:	call   0x42b770
  42a1e4:	nop
  42a1e5:	add    rsp,0x68
  42a1e9:	pop    rbx
  42a1ea:	pop    rsi
  42a1eb:	ret    
  42a1ec:	nop    DWORD PTR [rax+0x0]
  42a1f0:	mov    DWORD PTR [rdx+0x10],0x6
  42a1f7:	mov    r8d,0x7
  42a1fd:	jmp    0x42a186
  42a1ff:	nop
  42a200:	mov    ecx,DWORD PTR [rsp+0x48]
  42a204:	mov    r8,rbx
  42a207:	mov    rdx,rax
  42a20a:	call   0x4297f0
  42a20f:	mov    rcx,rsi
  42a212:	call   0x42b770
  42a217:	nop
  42a218:	add    rsp,0x68
  42a21c:	pop    rbx
  42a21d:	pop    rsi
  42a21e:	ret    
  42a21f:	nop
  42a220:	push   rsi
  42a221:	push   rbx
  42a222:	sub    rsp,0x78
  42a226:	mov    r8d,DWORD PTR [rdx+0x10]
  42a22a:	fld    TBYTE PTR [rcx]
  42a22c:	mov    rbx,rdx
  42a22f:	test   r8d,r8d
  42a232:	js     0x42a370
  42a238:	je     0x42a350
  42a23e:	lea    rdx,[rsp+0x40]
  42a243:	lea    r9,[rsp+0x5c]
  42a248:	mov    ecx,0x2
  42a24d:	fstp   TBYTE PTR [rsp+0x60]
  42a251:	mov    rax,QWORD PTR [rsp+0x60]
  42a256:	mov    QWORD PTR [rsp+0x40],rax
  42a25b:	mov    rax,QWORD PTR [rsp+0x68]
  42a260:	mov    QWORD PTR [rsp+0x48],rax
  42a265:	lea    rax,[rsp+0x58]
  42a26a:	mov    QWORD PTR [rsp+0x20],rax
  42a26f:	call   0x429460
  42a274:	mov    r8d,DWORD PTR [rsp+0x5c]
  42a279:	mov    rsi,rax
  42a27c:	cmp    r8d,0xffff8000
  42a283:	je     0x42a390
  42a289:	cmp    r8d,0xfffffffd
  42a28d:	jl     0x42a310
  42a293:	mov    eax,DWORD PTR [rbx+0x10]
  42a296:	cmp    r8d,eax
  42a299:	jg     0x42a310
  42a29b:	test   BYTE PTR [rbx+0x9],0x8
  42a29f:	jne    0x42a382
  42a2a5:	mov    rcx,rsi
  42a2a8:	mov    DWORD PTR [rsp+0x3c],r8d
  42a2ad:	call   0x42de30
  42a2b2:	mov    r8d,DWORD PTR [rsp+0x3c]
  42a2b7:	sub    eax,r8d
  42a2ba:	test   eax,eax
  42a2bc:	mov    DWORD PTR [rbx+0x10],eax
  42a2bf:	js     0x42a3a1
  42a2c5:	mov    ecx,DWORD PTR [rsp+0x58]
  42a2c9:	mov    rdx,rsi
  42a2cc:	mov    r9,rbx
  42a2cf:	call   0x429980
  42a2d4:	mov    eax,DWORD PTR [rbx+0xc]
  42a2d7:	lea    edx,[rax-0x1]
  42a2da:	test   eax,eax
  42a2dc:	mov    DWORD PTR [rbx+0xc],edx
  42a2df:	jle    0x42a33d
  42a2e1:	mov    rdx,rbx
  42a2e4:	mov    ecx,0x20
  42a2e9:	call   0x429560
  42a2ee:	mov    r8d,DWORD PTR [rbx+0xc]
  42a2f2:	lea    r9d,[r8-0x1]
  42a2f6:	test   r8d,r8d
  42a2f9:	mov    DWORD PTR [rbx+0xc],r9d
  42a2fd:	jg     0x42a2e1
  42a2ff:	mov    rcx,rsi
  42a302:	call   0x42b770
  42a307:	nop
  42a308:	add    rsp,0x78
  42a30c:	pop    rbx
  42a30d:	pop    rsi
  42a30e:	ret    
  42a30f:	nop
  42a310:	test   BYTE PTR [rbx+0x9],0x8
  42a314:	jne    0x42a362
  42a316:	mov    rcx,rsi
  42a319:	mov    DWORD PTR [rsp+0x3c],r8d
  42a31e:	call   0x42de30
  42a323:	mov    r8d,DWORD PTR [rsp+0x3c]
  42a328:	sub    eax,0x1
  42a32b:	mov    DWORD PTR [rbx+0x10],eax
  42a32e:	mov    ecx,DWORD PTR [rsp+0x58]
  42a332:	mov    r9,rbx
  42a335:	mov    rdx,rsi
  42a338:	call   0x42a0a0
  42a33d:	mov    rcx,rsi
  42a340:	call   0x42b770
  42a345:	nop
  42a346:	add    rsp,0x78
  42a34a:	pop    rbx
  42a34b:	pop    rsi
  42a34c:	ret    
  42a34d:	nop    DWORD PTR [rax]
  42a350:	mov    DWORD PTR [rdx+0x10],0x1
  42a357:	mov    r8d,0x1
  42a35d:	jmp    0x42a23e
  42a362:	sub    DWORD PTR [rbx+0x10],0x1
  42a366:	jmp    0x42a32e
  42a368:	nop    DWORD PTR [rax+rax*1+0x0]
  42a370:	mov    DWORD PTR [rdx+0x10],0x6
  42a377:	mov    r8d,0x6
  42a37d:	jmp    0x42a23e
  42a382:	sub    eax,r8d
  42a385:	mov    DWORD PTR [rbx+0x10],eax
  42a388:	jmp    0x42a2c5
  42a38d:	nop    DWORD PTR [rax]
  42a390:	mov    ecx,DWORD PTR [rsp+0x58]
  42a394:	mov    r8,rbx
  42a397:	mov    rdx,rax
  42a39a:	call   0x4297f0
  42a39f:	jmp    0x42a33d
  42a3a1:	mov    edx,DWORD PTR [rbx+0xc]
  42a3a4:	test   edx,edx
  42a3a6:	jle    0x42a2c5
  42a3ac:	add    eax,edx
  42a3ae:	mov    DWORD PTR [rbx+0xc],eax
  42a3b1:	jmp    0x42a2c5
  42a3b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a3c0:	push   rbp
  42a3c1:	push   r14
  42a3c3:	push   r13
  42a3c5:	push   r12
  42a3c7:	push   rdi
  42a3c8:	push   rsi
  42a3c9:	push   rbx
  42a3ca:	mov    rbp,rsp
  42a3cd:	sub    rsp,0x20
  42a3d1:	mov    r10d,0x12
  42a3d7:	mov    eax,0x18
  42a3dc:	cmp    ecx,0x6f
  42a3df:	mov    rbx,r8
  42a3e2:	mov    r8d,DWORD PTR [r8+0x10]
  42a3e6:	mov    r11d,ecx
  42a3e9:	setne  cl
  42a3ec:	mov    edi,DWORD PTR [rbx+0x8]
  42a3ef:	movzx  ecx,cl
  42a3f2:	cmovne eax,r10d
  42a3f6:	mov    r10b,0x0
  42a3f9:	add    ecx,0x3
  42a3fc:	test   r8d,r8d
  42a3ff:	mov    r9,rdx
  42a402:	cmovns r10d,r8d
  42a406:	add    r10d,eax
  42a409:	test   edi,0x1000
  42a40f:	je     0x42a41c
  42a411:	cmp    WORD PTR [rbx+0x20],0x0
  42a416:	jne    0x42a5e3
  42a41c:	movsxd r12,DWORD PTR [rbx+0xc]
  42a420:	movsxd rax,r10d
  42a423:	cmp    r10d,r12d
  42a426:	cmovl  rax,r12
  42a42a:	add    rax,0x1e
  42a42e:	and    rax,0xfffffffffffffff0
  42a432:	call   0x4283e0
  42a437:	xor    edx,edx
  42a439:	sub    rsp,rax
  42a43c:	cmp    r11d,0x6f
  42a440:	lea    rsi,[rsp+0x20]
  42a445:	setne  dl
  42a448:	test   r9,r9
  42a44b:	lea    edx,[rdx*8+0x7]
  42a452:	mov    r10,rsi
  42a455:	je     0x42a702
  42a45b:	mov    r13d,r11d
  42a45e:	and    r13d,0x20
  42a462:	jmp    0x42a470
  42a464:	shr    r9,cl
  42a467:	mov    BYTE PTR [r10-0x1],r14b
  42a46b:	test   r9,r9
  42a46e:	je     0x42a495
  42a470:	mov    eax,edx
  42a472:	add    r10,0x1
  42a476:	and    eax,r9d
  42a479:	lea    r14d,[rax+0x30]
  42a47d:	cmp    r14b,0x39
  42a481:	jbe    0x42a464
  42a483:	add    eax,0x37
  42a486:	shr    r9,cl
  42a489:	or     eax,r13d
  42a48c:	test   r9,r9
  42a48f:	mov    BYTE PTR [r10-0x1],al
  42a493:	jne    0x42a470
  42a495:	cmp    rsi,r10
  42a498:	je     0x42a702
  42a49e:	test   r8d,r8d
  42a4a1:	jle    0x42a662
  42a4a7:	mov    rax,rsi
  42a4aa:	sub    rax,r10
  42a4ad:	add    eax,r8d
  42a4b0:	test   eax,eax
  42a4b2:	jle    0x42a662
  42a4b8:	sub    eax,0x1
  42a4bb:	mov    rdx,rax
  42a4be:	lea    rcx,[r10+rax*1+0x1]
  42a4c3:	mov    rax,r10
  42a4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a4d0:	add    rax,0x1
  42a4d4:	mov    BYTE PTR [rax-0x1],0x30
  42a4d8:	cmp    rax,rcx
  42a4db:	jne    0x42a4d0
  42a4dd:	movsxd rax,edx
  42a4e0:	lea    r10,[r10+rax*1+0x1]
  42a4e5:	cmp    rsi,r10
  42a4e8:	jne    0x42a500
  42a4ea:	test   r8d,r8d
  42a4ed:	je     0x42a500
  42a4ef:	mov    BYTE PTR [r10],0x30
  42a4f3:	add    r10,0x1
  42a4f7:	nop    WORD PTR [rax+rax*1+0x0]
  42a500:	mov    rax,r10
  42a503:	sub    rax,rsi
  42a506:	cmp    r12d,eax
  42a509:	jle    0x42a630
  42a50f:	sub    r12d,eax
  42a512:	test   r12d,r12d
  42a515:	mov    DWORD PTR [rbx+0xc],r12d
  42a519:	jle    0x42a767
  42a51f:	cmp    r11d,0x6f
  42a523:	mov    edx,DWORD PTR [rbx+0x8]
  42a526:	je     0x42a6f0
  42a52c:	test   dh,0x8
  42a52f:	je     0x42a6b0
  42a535:	lea    r13d,[r12-0x2]
  42a53a:	test   r13d,r13d
  42a53d:	jle    0x42a548
  42a53f:	test   r8d,r8d
  42a542:	js     0x42a5fd
  42a548:	test   r13d,r13d
  42a54b:	mov    BYTE PTR [r10],r11b
  42a54e:	lea    rdi,[r10+0x2]
  42a552:	mov    BYTE PTR [r10+0x1],0x30
  42a557:	jle    0x42a658
  42a55d:	and    dh,0x4
  42a560:	jne    0x42a683
  42a566:	lea    r14d,[r13-0x1]
  42a56a:	mov    r12d,r14d
  42a56d:	nop    DWORD PTR [rax]
  42a570:	sub    r12d,0x1
  42a574:	mov    rdx,rbx
  42a577:	mov    ecx,0x20
  42a57c:	call   0x429560
  42a581:	lea    eax,[r12+0x1]
  42a586:	test   eax,eax
  42a588:	jg     0x42a570
  42a58a:	test   r14d,r14d
  42a58d:	lea    r13d,[r14-0x1]
  42a591:	mov    r12d,0x0
  42a597:	cmovns r12d,r14d
  42a59b:	sub    r13d,r12d
  42a59e:	cmp    rsi,rdi
  42a5a1:	jb     0x42a690
  42a5a7:	nop    WORD PTR [rax+rax*1+0x0]
  42a5b0:	test   r13d,r13d
  42a5b3:	lea    esi,[r13-0x1]
  42a5b7:	jle    0x42a5d5
  42a5b9:	nop    DWORD PTR [rax+0x0]
  42a5c0:	mov    rdx,rbx
  42a5c3:	mov    ecx,0x20
  42a5c8:	sub    esi,0x1
  42a5cb:	call   0x429560
  42a5d0:	cmp    esi,0xffffffff
  42a5d3:	jne    0x42a5c0
  42a5d5:	mov    rsp,rbp
  42a5d8:	pop    rbx
  42a5d9:	pop    rsi
  42a5da:	pop    rdi
  42a5db:	pop    r12
  42a5dd:	pop    r13
  42a5df:	pop    r14
  42a5e1:	pop    rbp
  42a5e2:	ret    
  42a5e3:	mov    eax,r10d
  42a5e6:	mov    edx,0x55555556
  42a5eb:	imul   edx
  42a5ed:	mov    eax,r10d
  42a5f0:	sar    eax,0x1f
  42a5f3:	sub    edx,eax
  42a5f5:	add    r10d,edx
  42a5f8:	jmp    0x42a41c
  42a5fd:	mov    eax,edx
  42a5ff:	and    eax,0x600
  42a604:	cmp    eax,0x200
  42a609:	je     0x42a710
  42a60f:	mov    r12d,r13d
  42a612:	test   dh,0x8
  42a615:	mov    r13d,r12d
  42a618:	mov    rdi,r10
  42a61b:	je     0x42a55d
  42a621:	mov    r13d,r12d
  42a624:	jmp    0x42a548
  42a629:	nop    DWORD PTR [rax+0x0]
  42a630:	mov    DWORD PTR [rbx+0xc],0xffffffff
  42a637:	mov    r13d,0xffffffff
  42a63d:	cmp    r11d,0x6f
  42a641:	je     0x42a655
  42a643:	mov    edx,DWORD PTR [rbx+0x8]
  42a646:	mov    eax,edx
  42a648:	and    eax,0x800
  42a64d:	test   eax,eax
  42a64f:	jne    0x42a548
  42a655:	mov    rdi,r10
  42a658:	cmp    rsi,rdi
  42a65b:	jb     0x42a690
  42a65d:	jmp    0x42a5d5
  42a662:	cmp    r11d,0x6f
  42a666:	jne    0x42a4e5
  42a66c:	test   BYTE PTR [rbx+0x9],0x8
  42a670:	je     0x42a4e5
  42a676:	mov    BYTE PTR [r10],0x30
  42a67a:	add    r10,0x1
  42a67e:	jmp    0x42a4e5
  42a683:	cmp    rsi,rdi
  42a686:	jae    0x42a76f
  42a68c:	nop    DWORD PTR [rax+0x0]
  42a690:	sub    rdi,0x1
  42a694:	movsx  ecx,BYTE PTR [rdi]
  42a697:	mov    rdx,rbx
  42a69a:	call   0x429560
  42a69f:	cmp    rsi,rdi
  42a6a2:	jb     0x42a690
  42a6a4:	jmp    0x42a5b0
  42a6a9:	nop    DWORD PTR [rax+0x0]
  42a6b0:	test   r8d,r8d
  42a6b3:	jns    0x42a612
  42a6b9:	mov    eax,edx
  42a6bb:	and    eax,0x600
  42a6c0:	cmp    eax,0x200
  42a6c5:	je     0x42a75e
  42a6cb:	cmp    r11d,0x6f
  42a6cf:	jne    0x42a612
  42a6d5:	and    dh,0x4
  42a6d8:	jne    0x42a6fa
  42a6da:	lea    r14d,[r12-0x1]
  42a6df:	mov    rdi,r10
  42a6e2:	jmp    0x42a56a
  42a6e7:	nop    WORD PTR [rax+rax*1+0x0]
  42a6f0:	test   r8d,r8d
  42a6f3:	js     0x42a6b9
  42a6f5:	and    dh,0x4
  42a6f8:	je     0x42a6da
  42a6fa:	mov    rdi,r10
  42a6fd:	mov    r13d,r12d
  42a700:	jmp    0x42a69f
  42a702:	and    edi,0xfffff7ff
  42a708:	mov    DWORD PTR [rbx+0x8],edi
  42a70b:	jmp    0x42a49e
  42a710:	lea    r8d,[r12-0x3]
  42a715:	mov    r12d,r8d
  42a718:	mov    eax,r12d
  42a71b:	lea    rcx,[r10+rax*1+0x1]
  42a720:	mov    rax,r10
  42a723:	add    rax,0x1
  42a727:	mov    BYTE PTR [rax-0x1],0x30
  42a72b:	cmp    rax,rcx
  42a72e:	jne    0x42a723
  42a730:	movsxd rax,r8d
  42a733:	cmp    r11d,0x6f
  42a737:	lea    r10,[r10+rax*1+0x1]
  42a73c:	je     0x42a750
  42a73e:	mov    eax,edx
  42a740:	mov    r13d,0xffffffff
  42a746:	and    eax,0x800
  42a74b:	jmp    0x42a64d
  42a750:	mov    rdi,r10
  42a753:	mov    r13d,0xffffffff
  42a759:	jmp    0x42a658
  42a75e:	sub    r12d,0x1
  42a762:	mov    r8d,r12d
  42a765:	jmp    0x42a718
  42a767:	mov    r13d,r12d
  42a76a:	jmp    0x42a63d
  42a76f:	lea    esi,[r13-0x1]
  42a773:	jmp    0x42a5c0
  42a778:	nop    DWORD PTR [rax+rax*1+0x0]
  42a780:	push   r13
  42a782:	push   r12
  42a784:	push   rbp
  42a785:	push   rdi
  42a786:	push   rsi
  42a787:	push   rbx
  42a788:	sub    rsp,0x68
  42a78c:	mov    r9,QWORD PTR [rcx]
  42a78f:	mov    r10d,DWORD PTR [rcx+0x8]
  42a793:	mov    rbx,rdx
  42a796:	mov    rax,r9
  42a799:	mov    QWORD PTR [rsp+0x30],r9
  42a79e:	mov    DWORD PTR [rsp+0x38],r10d
  42a7a3:	shr    rax,0x20
  42a7a7:	mov    r8,r10
  42a7aa:	and    eax,0x7fffffff
  42a7af:	or     r9d,eax
  42a7b2:	lea    eax,[r10+r10*1]
  42a7b6:	mov    edx,r9d
  42a7b9:	neg    edx
  42a7bb:	and    eax,0xfffe
  42a7c0:	or     edx,r9d
  42a7c3:	shr    edx,0x1f
  42a7c6:	or     edx,eax
  42a7c8:	mov    eax,0xfffe
  42a7cd:	sub    eax,edx
  42a7cf:	sar    eax,0x10
  42a7d2:	test   eax,eax
  42a7d4:	jne    0x42abc0
  42a7da:	movzx  esi,WORD PTR [rsp+0x38]
  42a7df:	mov    ecx,esi
  42a7e1:	and    ecx,0x8000
  42a7e7:	je     0x42a7f0
  42a7e9:	or     DWORD PTR [rbx+0x8],0x80
  42a7f0:	and    r8w,0x7fff
  42a7f6:	cmp    r8w,0x7fff
  42a7fc:	jne    0x42a820
  42a7fe:	test   r9d,r9d
  42a801:	jne    0x42a820
  42a803:	lea    rdx,[rip+0x12bfa]        # 0x43d404
  42a80a:	mov    r8,rbx
  42a80d:	call   0x4297f0
  42a812:	jmp    0x42ab95
  42a817:	nop    WORD PTR [rax+rax*1+0x0]
  42a820:	and    si,0x7fff
  42a825:	jne    0x42a950
  42a82b:	mov    rax,QWORD PTR [rsp+0x30]
  42a830:	test   rax,rax
  42a833:	jne    0x42abdf
  42a839:	mov    r9d,DWORD PTR [rbx+0x10]
  42a83d:	cmp    r9d,0xe
  42a841:	jbe    0x42ac5c
  42a847:	xor    esi,esi
  42a849:	mov    r8d,DWORD PTR [rbx+0x8]
  42a84d:	lea    rbp,[rsp+0x40]
  42a852:	test   r9d,r9d
  42a855:	jle    0x42ac6c
  42a85b:	lea    rax,[rbp+0x1]
  42a85f:	mov    BYTE PTR [rsp+0x40],0x2e
  42a864:	mov    r10d,DWORD PTR [rbx+0xc]
  42a868:	lea    rdi,[rax+0x1]
  42a86c:	mov    BYTE PTR [rax],0x30
  42a86f:	mov    r12d,0x2
  42a875:	test   r10d,r10d
  42a878:	jg     0x42aa7c
  42a87e:	xchg   ax,ax
  42a880:	test   r8b,0x80
  42a884:	jne    0x42ab40
  42a88a:	test   r8d,0x100
  42a891:	jne    0x42ac30
  42a897:	and    r8d,0x40
  42a89b:	jne    0x42ac42
  42a8a1:	mov    rdx,rbx
  42a8a4:	mov    ecx,0x30
  42a8a9:	call   0x429560
  42a8ae:	mov    ecx,DWORD PTR [rbx+0x8]
  42a8b1:	mov    rdx,rbx
  42a8b4:	and    ecx,0x20
  42a8b7:	or     ecx,0x58
  42a8ba:	call   0x429560
  42a8bf:	mov    eax,DWORD PTR [rbx+0xc]
  42a8c2:	test   eax,eax
  42a8c4:	jle    0x42a8ec
  42a8c6:	test   BYTE PTR [rbx+0x9],0x2
  42a8ca:	je     0x42a8ec
  42a8cc:	sub    eax,0x1
  42a8cf:	mov    DWORD PTR [rbx+0xc],eax
  42a8d2:	mov    rdx,rbx
  42a8d5:	mov    ecx,0x30
  42a8da:	call   0x429560
  42a8df:	mov    eax,DWORD PTR [rbx+0xc]
  42a8e2:	lea    edx,[rax-0x1]
  42a8e5:	test   eax,eax
  42a8e7:	mov    DWORD PTR [rbx+0xc],edx
  42a8ea:	jg     0x42a8d2
  42a8ec:	cmp    rdi,rbp
  42a8ef:	lea    r13,[rsp+0x2e]
  42a8f4:	ja     0x42a929
  42a8f6:	jmp    0x42ab5f
  42a8fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42a900:	movzx  eax,WORD PTR [rbx+0x20]
  42a904:	test   ax,ax
  42a907:	mov    WORD PTR [rsp+0x2e],ax
  42a90c:	je     0x42a920
  42a90e:	mov    r8,rbx
  42a911:	mov    edx,0x1
  42a916:	mov    rcx,r13
  42a919:	call   0x4295c0
  42a91e:	xchg   ax,ax
  42a920:	cmp    rdi,rbp
  42a923:	je     0x42ab5f
  42a929:	sub    rdi,0x1
  42a92d:	movsx  ecx,BYTE PTR [rdi]
  42a930:	cmp    ecx,0x2e
  42a933:	je     0x42aba2
  42a939:	cmp    ecx,0x2c
  42a93c:	je     0x42a900
  42a93e:	mov    rdx,rbx
  42a941:	call   0x429560
  42a946:	jmp    0x42a920
  42a948:	nop    DWORD PTR [rax+rax*1+0x0]
  42a950:	mov    r9d,DWORD PTR [rbx+0x10]
  42a954:	sub    si,0x3fff
  42a959:	mov    rax,QWORD PTR [rsp+0x30]
  42a95e:	cmp    r9d,0xe
  42a962:	ja     0x42ac0d
  42a968:	test   rax,rax
  42a96b:	js     0x42a975
  42a96d:	nop    DWORD PTR [rax]
  42a970:	add    rax,rax
  42a973:	jns    0x42a970
  42a975:	mov    ecx,0xe
  42a97a:	mov    edx,0x4
  42a97f:	shr    rax,1
  42a982:	sub    ecx,r9d
  42a985:	shl    ecx,0x2
  42a988:	shl    rdx,cl
  42a98b:	add    rax,rdx
  42a98e:	js     0x42ac54
  42a994:	add    rax,rax
  42a997:	mov    ecx,0xf
  42a99c:	sub    ecx,r9d
  42a99f:	shl    ecx,0x2
  42a9a2:	shr    rax,cl
  42a9a5:	mov    r8d,DWORD PTR [rbx+0x8]
  42a9a9:	lea    rbp,[rsp+0x40]
  42a9ae:	mov    rdi,rbp
  42a9b1:	mov    r11d,r8d
  42a9b4:	mov    r10d,r8d
  42a9b7:	and    r11d,0x800
  42a9be:	and    r10d,0x20
  42a9c2:	jmp    0x42a9f3
  42a9c4:	mov    ecx,DWORD PTR [rbx+0x10]
  42a9c7:	test   ecx,ecx
  42a9c9:	jle    0x42a9d1
  42a9cb:	sub    ecx,0x1
  42a9ce:	mov    DWORD PTR [rbx+0x10],ecx
  42a9d1:	shr    rax,0x4
  42a9d5:	mov    r9,rdi
  42a9d8:	test   edx,edx
  42a9da:	je     0x42aa44
  42a9dc:	cmp    edx,0x9
  42a9df:	lea    rdi,[r9+0x1]
  42a9e3:	jle    0x42aa57
  42a9e5:	add    edx,0x37
  42a9e8:	or     edx,r10d
  42a9eb:	mov    BYTE PTR [r9],dl
  42a9ee:	test   rax,rax
  42a9f1:	je     0x42aa60
  42a9f3:	mov    edx,eax
  42a9f5:	and    edx,0xf
  42a9f8:	cmp    edx,eax
  42a9fa:	jne    0x42a9c4
  42a9fc:	cmp    rdi,rbp
  42a9ff:	ja     0x42aa12
  42aa01:	test   r11d,r11d
  42aa04:	jne    0x42aa12
  42aa06:	mov    r12d,DWORD PTR [rbx+0x10]
  42aa0a:	mov    r9,rdi
  42aa0d:	test   r12d,r12d
  42aa10:	jle    0x42aa19
  42aa12:	lea    r9,[rdi+0x1]
  42aa16:	mov    BYTE PTR [rdi],0x2e
  42aa19:	cmp    rax,0x1
  42aa1d:	jbe    0x42ac29
  42aa23:	lea    ecx,[rsi-0x1]
  42aa26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aa30:	shr    rax,1
  42aa33:	mov    esi,ecx
  42aa35:	cmp    rax,0x1
  42aa39:	lea    ecx,[rsi-0x1]
  42aa3c:	jne    0x42aa30
  42aa3e:	xor    al,al
  42aa40:	test   edx,edx
  42aa42:	jne    0x42a9dc
  42aa44:	cmp    r9,rbp
  42aa47:	ja     0x42aa53
  42aa49:	mov    ecx,DWORD PTR [rbx+0x10]
  42aa4c:	mov    rdi,r9
  42aa4f:	test   ecx,ecx
  42aa51:	js     0x42a9ee
  42aa53:	lea    rdi,[r9+0x1]
  42aa57:	add    edx,0x30
  42aa5a:	jmp    0x42a9eb
  42aa5c:	nop    DWORD PTR [rax+0x0]
  42aa60:	cmp    rdi,rbp
  42aa63:	je     0x42ac63
  42aa69:	mov    r10d,DWORD PTR [rbx+0xc]
  42aa6d:	mov    r12d,0x2
  42aa73:	test   r10d,r10d
  42aa76:	jle    0x42a880
  42aa7c:	mov    edx,DWORD PTR [rbx+0x10]
  42aa7f:	mov    rax,rdi
  42aa82:	movsx  r11d,si
  42aa86:	sub    rax,rbp
  42aa89:	lea    ecx,[rdx+rax*1]
  42aa8c:	test   edx,edx
  42aa8e:	mov    edx,r8d
  42aa91:	cmovg  eax,ecx
  42aa94:	and    edx,0x1c0
  42aa9a:	mov    ecx,0x66666667
  42aa9f:	cmp    edx,0x1
  42aaa2:	sbb    edx,edx
  42aaa4:	lea    r9d,[rax+rdx*1+0x6]
  42aaa9:	mov    eax,r11d
  42aaac:	imul   ecx
  42aaae:	mov    eax,r11d
  42aab1:	sar    eax,0x1f
  42aab4:	mov    ecx,edx
  42aab6:	sar    ecx,0x2
  42aab9:	sub    ecx,eax
  42aabb:	je     0x42aae0
  42aabd:	mov    r11d,0x66666667
  42aac3:	mov    eax,ecx
  42aac5:	sar    ecx,0x1f
  42aac8:	add    r9d,0x1
  42aacc:	imul   r11d
  42aacf:	add    r12d,0x1
  42aad3:	sar    edx,0x2
  42aad6:	sub    edx,ecx
  42aad8:	mov    ecx,edx
  42aada:	jne    0x42aac3
  42aadc:	movsx  r12d,r12w
  42aae0:	cmp    r10d,r9d
  42aae3:	jle    0x42abb0
  42aae9:	sub    r10d,r9d
  42aaec:	test   r8d,0x600
  42aaf3:	jne    0x42ac20
  42aaf9:	lea    eax,[r10-0x1]
  42aafd:	test   r10d,r10d
  42ab00:	mov    DWORD PTR [rbx+0xc],eax
  42ab03:	jle    0x42a880
  42ab09:	nop    DWORD PTR [rax+0x0]
  42ab10:	mov    rdx,rbx
  42ab13:	mov    ecx,0x20
  42ab18:	call   0x429560
  42ab1d:	mov    eax,DWORD PTR [rbx+0xc]
  42ab20:	lea    edx,[rax-0x1]
  42ab23:	test   eax,eax
  42ab25:	mov    DWORD PTR [rbx+0xc],edx
  42ab28:	jg     0x42ab10
  42ab2a:	mov    r8d,DWORD PTR [rbx+0x8]
  42ab2e:	test   r8b,0x80
  42ab32:	je     0x42a88a
  42ab38:	nop    DWORD PTR [rax+rax*1+0x0]
  42ab40:	mov    rdx,rbx
  42ab43:	mov    ecx,0x2d
  42ab48:	call   0x429560
  42ab4d:	jmp    0x42a8a1
  42ab52:	mov    rdx,rbx
  42ab55:	mov    ecx,0x30
  42ab5a:	call   0x429560
  42ab5f:	mov    eax,DWORD PTR [rbx+0x10]
  42ab62:	lea    edx,[rax-0x1]
  42ab65:	test   eax,eax
  42ab67:	mov    DWORD PTR [rbx+0x10],edx
  42ab6a:	jg     0x42ab52
  42ab6c:	mov    ecx,DWORD PTR [rbx+0x8]
  42ab6f:	mov    rdx,rbx
  42ab72:	and    ecx,0x20
  42ab75:	or     ecx,0x50
  42ab78:	call   0x429560
  42ab7d:	add    DWORD PTR [rbx+0xc],r12d
  42ab81:	or     DWORD PTR [rbx+0x8],0x1c0
  42ab88:	movsx  rcx,si
  42ab8c:	mov    rdx,rbx
  42ab8f:	call   0x429dd0
  42ab94:	nop
  42ab95:	add    rsp,0x68
  42ab99:	pop    rbx
  42ab9a:	pop    rsi
  42ab9b:	pop    rdi
  42ab9c:	pop    rbp
  42ab9d:	pop    r12
  42ab9f:	pop    r13
  42aba1:	ret    
  42aba2:	mov    rcx,rbx
  42aba5:	call   0x429890
  42abaa:	jmp    0x42a920
  42abaf:	nop
  42abb0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  42abb7:	jmp    0x42a880
  42abbc:	nop    DWORD PTR [rax+0x0]
  42abc0:	lea    rdx,[rip+0x12839]        # 0x43d400
  42abc7:	mov    r8,rbx
  42abca:	xor    ecx,ecx
  42abcc:	call   0x4297f0
  42abd1:	nop
  42abd2:	add    rsp,0x68
  42abd6:	pop    rbx
  42abd7:	pop    rsi
  42abd8:	pop    rdi
  42abd9:	pop    rbp
  42abda:	pop    r12
  42abdc:	pop    r13
  42abde:	ret    
  42abdf:	js     0x42ac81
  42abe5:	mov    edx,0xffffc001
  42abea:	nop    WORD PTR [rax+rax*1+0x0]
  42abf0:	mov    esi,edx
  42abf2:	sub    edx,0x1
  42abf5:	add    rax,rax
  42abf8:	jns    0x42abf0
  42abfa:	mov    r9d,DWORD PTR [rbx+0x10]
  42abfe:	cmp    r9d,0xe
  42ac02:	jbe    0x42a975
  42ac08:	jmp    0x42a9a5
  42ac0d:	test   rax,rax
  42ac10:	jne    0x42a9a5
  42ac16:	jmp    0x42a849
  42ac1b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ac20:	mov    DWORD PTR [rbx+0xc],r10d
  42ac24:	jmp    0x42a880
  42ac29:	xor    eax,eax
  42ac2b:	jmp    0x42a9d8
  42ac30:	mov    rdx,rbx
  42ac33:	mov    ecx,0x2b
  42ac38:	call   0x429560
  42ac3d:	jmp    0x42a8a1
  42ac42:	mov    rdx,rbx
  42ac45:	mov    ecx,0x20
  42ac4a:	call   0x429560
  42ac4f:	jmp    0x42a8a1
  42ac54:	add    esi,0x1
  42ac57:	jmp    0x42a997
  42ac5c:	xor    eax,eax
  42ac5e:	jmp    0x42a970
  42ac63:	mov    r9d,DWORD PTR [rbx+0x10]
  42ac67:	jmp    0x42a852
  42ac6c:	test   r8d,0x800
  42ac73:	mov    rax,rbp
  42ac76:	je     0x42a864
  42ac7c:	jmp    0x42a85b
  42ac81:	mov    esi,0xffffc002
  42ac86:	jmp    0x42abfa
  42ac8b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ac90:	push   r15
  42ac92:	push   r14
  42ac94:	push   r13
  42ac96:	push   r12
  42ac98:	push   rbp
  42ac99:	push   rdi
  42ac9a:	push   rsi
  42ac9b:	push   rbx
  42ac9c:	sub    rsp,0xb8
  42aca3:	mov    r13,QWORD PTR [rsp+0x120]
  42acab:	mov    r15d,ecx
  42acae:	mov    rdi,rdx
  42acb1:	mov    esi,r8d
  42acb4:	mov    rbx,r9
  42acb7:	and    r15d,0x6000
  42acbe:	call   0x42e010
  42acc3:	mov    eax,DWORD PTR [rax]
  42acc5:	lea    rcx,[rip+0x12751]        # 0x43d41d
  42accc:	xor    edx,edx
  42acce:	mov    QWORD PTR [rsp+0x80],rdi
  42acd6:	mov    DWORD PTR [rsp+0x88],r15d
  42acde:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  42ace9:	mov    DWORD PTR [rsp+0x90],0xffffffff
  42acf4:	mov    DWORD PTR [rsp+0x34],eax
  42acf8:	xor    eax,eax
  42acfa:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  42ad05:	mov    WORD PTR [rsp+0x98],ax
  42ad0d:	mov    DWORD PTR [rsp+0x9c],0x0
  42ad18:	mov    WORD PTR [rsp+0xa0],dx
  42ad20:	mov    DWORD PTR [rsp+0xa4],0x0
  42ad2b:	mov    DWORD PTR [rsp+0xa8],esi
  42ad32:	call   0x42ded0
  42ad37:	test   rax,rax
  42ad3a:	je     0x42ad4c
  42ad3c:	movsx  edx,BYTE PTR [rax]
  42ad3f:	mov    eax,0x2
  42ad44:	sub    edx,0x30
  42ad47:	cmp    edx,0x2
  42ad4a:	jbe    0x42ad59
  42ad4c:	call   0x42e150
  42ad51:	and    eax,0x1
  42ad54:	neg    eax
  42ad56:	add    eax,0x3
  42ad59:	lea    rdi,[rsp+0x70]
  42ad5e:	mov    DWORD PTR [rsp+0xac],eax
  42ad65:	movzx  eax,BYTE PTR [rbx]
  42ad68:	lea    rsi,[rsp+0x6e]
  42ad6d:	lea    r12,[rsp+0x80]
  42ad75:	lea    rbp,[rip+0x126b8]        # 0x43d434
  42ad7c:	mov    QWORD PTR [rsp+0x28],rdi
  42ad81:	lea    rdi,[rsp+0x50]
  42ad86:	mov    QWORD PTR [rsp+0x38],rsi
  42ad8b:	mov    QWORD PTR [rsp+0x20],rdi
  42ad90:	mov    edi,r15d
  42ad93:	or     edi,0x200
  42ad99:	mov    DWORD PTR [rsp+0x48],edi
  42ad9d:	nop    DWORD PTR [rax]
  42ada0:	movsx  ecx,al
  42ada3:	lea    rsi,[rbx+0x1]
  42ada7:	test   ecx,ecx
  42ada9:	je     0x42ae2a
  42adab:	cmp    ecx,0x25
  42adae:	jne    0x42ae10
  42adb0:	movzx  eax,BYTE PTR [rbx+0x1]
  42adb4:	xor    r10d,r10d
  42adb7:	xor    r14d,r14d
  42adba:	mov    DWORD PTR [rsp+0x88],r15d
  42adc2:	mov    DWORD PTR [rsp+0x90],0xffffffff
  42adcd:	mov    rdi,rsi
  42add0:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  42addb:	lea    r11,[r12+0xc]
  42ade0:	test   al,al
  42ade2:	je     0x42af8b
  42ade8:	lea    edx,[rax-0x20]
  42adeb:	lea    rbx,[rdi+0x1]
  42adef:	movsx  ecx,al
  42adf2:	cmp    dl,0x5a
  42adf5:	ja     0x42b400
  42adfb:	movzx  edx,dl
  42adfe:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  42ae03:	add    rdx,rbp
  42ae06:	jmp    rdx
  42ae08:	nop    DWORD PTR [rax+rax*1+0x0]
  42ae10:	mov    rdx,r12
  42ae13:	call   0x429560
  42ae18:	movzx  eax,BYTE PTR [rbx+0x1]
  42ae1c:	mov    rbx,rsi
  42ae1f:	lea    rsi,[rbx+0x1]
  42ae23:	movsx  ecx,al
  42ae26:	test   ecx,ecx
  42ae28:	jne    0x42adab
  42ae2a:	mov    eax,DWORD PTR [rsp+0xa4]
  42ae31:	add    rsp,0xb8
  42ae38:	pop    rbx
  42ae39:	pop    rsi
  42ae3a:	pop    rdi
  42ae3b:	pop    rbp
  42ae3c:	pop    r12
  42ae3e:	pop    r13
  42ae40:	pop    r14
  42ae42:	pop    r15
  42ae44:	ret    
  42ae45:	sub    r10d,0x2
  42ae49:	mov    rax,r13
  42ae4c:	cmp    r10d,0x1
  42ae50:	jbe    0x42b443
  42ae56:	mov    rsi,QWORD PTR [rax]
  42ae59:	add    r13,0x8
  42ae5d:	test   rsi,rsi
  42ae60:	je     0x42af25
  42ae66:	mov    rcx,rsi
  42ae69:	call   0x42de30
  42ae6e:	mov    edx,eax
  42ae70:	mov    r8,r12
  42ae73:	mov    rcx,rsi
  42ae76:	call   0x4296e0
  42ae7b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ae80:	movzx  eax,BYTE PTR [rbx]
  42ae83:	jmp    0x42ada0
  42ae88:	nop    DWORD PTR [rax+rax*1+0x0]
  42ae90:	test   r14d,r14d
  42ae93:	jne    0x42aea3
  42ae95:	cmp    DWORD PTR [rsp+0x88],r15d
  42ae9d:	je     0x42b60b
  42aea3:	mov    rdx,QWORD PTR [r13+0x0]
  42aea7:	lea    rsi,[r13+0x8]
  42aeab:	mov    r8,r12
  42aeae:	mov    ecx,0x78
  42aeb3:	mov    QWORD PTR [rsp+0x78],0x0
  42aebc:	mov    r13,rsi
  42aebf:	mov    QWORD PTR [rsp+0x70],rdx
  42aec4:	call   0x42a3c0
  42aec9:	jmp    0x42ae80
  42aecb:	nop    DWORD PTR [rax+rax*1+0x0]
  42aed0:	cmp    r10d,0x5
  42aed4:	mov    rax,QWORD PTR [r13+0x0]
  42aed8:	je     0x42b54a
  42aede:	cmp    r10d,0x1
  42aee2:	je     0x42b5d4
  42aee8:	cmp    r10d,0x2
  42aeec:	je     0x42aef8
  42aeee:	cmp    r10d,0x3
  42aef2:	je     0x42b67c
  42aef8:	mov    edx,DWORD PTR [rsp+0xa4]
  42aeff:	add    r13,0x8
  42af03:	mov    DWORD PTR [rax],edx
  42af05:	jmp    0x42ae80
  42af0a:	nop    WORD PTR [rax+rax*1+0x0]
  42af10:	mov    ecx,DWORD PTR [rsp+0x34]
  42af14:	call   0x42de40
  42af19:	test   rax,rax
  42af1c:	mov    rsi,rax
  42af1f:	jne    0x42ae66
  42af25:	mov    edx,0x6
  42af2a:	lea    rsi,[rip+0x124e5]        # 0x43d416
  42af31:	jmp    0x42ae70
  42af36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42af40:	movzx  eax,BYTE PTR [rdi+0x1]
  42af44:	mov    r10d,0x2
  42af4a:	mov    r14d,0x4
  42af50:	cmp    al,0x6c
  42af52:	jne    0x42af80
  42af54:	lea    rbx,[rdi+0x2]
  42af58:	movzx  eax,BYTE PTR [rdi+0x2]
  42af5c:	mov    r10d,0x3
  42af62:	mov    r14d,0x4
  42af68:	jmp    0x42af80
  42af6a:	nop    WORD PTR [rax+rax*1+0x0]
  42af70:	movzx  eax,BYTE PTR [rdi+0x1]
  42af74:	mov    r10d,0x3
  42af7a:	mov    r14d,0x4
  42af80:	test   al,al
  42af82:	mov    rdi,rbx
  42af85:	jne    0x42ade8
  42af8b:	mov    rbx,rdi
  42af8e:	jmp    0x42ada0
  42af93:	mov    eax,DWORD PTR [rsp+0x88]
  42af9a:	mov    rdx,r13
  42af9d:	add    r13,0x8
  42afa1:	or     eax,0x20
  42afa4:	test   al,0x4
  42afa6:	mov    DWORD PTR [rsp+0x88],eax
  42afad:	je     0x42b20b
  42afb3:	mov    rax,QWORD PTR [rdx]
  42afb6:	mov    rcx,QWORD PTR [rsp+0x20]
  42afbb:	mov    rdx,r12
  42afbe:	fld    TBYTE PTR [rax]
  42afc0:	fstp   TBYTE PTR [rsp+0x50]
  42afc4:	call   0x42a220
  42afc9:	jmp    0x42ae80
  42afce:	xchg   ax,ax
  42afd0:	movzx  eax,BYTE PTR [rdi+0x1]
  42afd4:	mov    r10d,0x1
  42afda:	mov    r14d,0x4
  42afe0:	cmp    al,0x68
  42afe2:	jne    0x42af80
  42afe4:	lea    rbx,[rdi+0x2]
  42afe8:	movzx  eax,BYTE PTR [rdi+0x2]
  42afec:	mov    r10d,0x5
  42aff2:	mov    r14d,0x4
  42aff8:	jmp    0x42af80
  42affa:	nop    WORD PTR [rax+rax*1+0x0]
  42b000:	mov    eax,DWORD PTR [rsp+0x88]
  42b007:	mov    rdx,r13
  42b00a:	add    r13,0x8
  42b00e:	or     eax,0x20
  42b011:	test   al,0x4
  42b013:	mov    DWORD PTR [rsp+0x88],eax
  42b01a:	je     0x42b239
  42b020:	mov    rax,QWORD PTR [rdx]
  42b023:	mov    rcx,QWORD PTR [rsp+0x20]
  42b028:	mov    rdx,r12
  42b02b:	fld    TBYTE PTR [rax]
  42b02d:	fstp   TBYTE PTR [rsp+0x50]
  42b031:	call   0x429ce0
  42b036:	jmp    0x42ae80
  42b03b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b040:	mov    eax,DWORD PTR [rsp+0x88]
  42b047:	mov    rdx,r13
  42b04a:	add    r13,0x8
  42b04e:	or     eax,0x20
  42b051:	test   al,0x4
  42b053:	mov    DWORD PTR [rsp+0x88],eax
  42b05a:	je     0x42b267
  42b060:	mov    rax,QWORD PTR [rdx]
  42b063:	mov    rcx,QWORD PTR [rsp+0x20]
  42b068:	mov    rdx,r12
  42b06b:	fld    TBYTE PTR [rax]
  42b06d:	fstp   TBYTE PTR [rsp+0x50]
  42b071:	call   0x42a170
  42b076:	jmp    0x42ae80
  42b07b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b080:	cmp    r10d,0x3
  42b084:	je     0x42b55c
  42b08a:	cmp    r10d,0x2
  42b08e:	je     0x42b5f9
  42b094:	mov    eax,DWORD PTR [r13+0x0]
  42b098:	cmp    r10d,0x1
  42b09c:	lea    rdx,[r13+0x8]
  42b0a0:	mov    QWORD PTR [rsp+0x70],rax
  42b0a5:	je     0x42b63b
  42b0ab:	cmp    r10d,0x5
  42b0af:	mov    r13,rdx
  42b0b2:	je     0x42b690
  42b0b8:	cmp    ecx,0x75
  42b0bb:	je     0x42b59c
  42b0c1:	mov    r8,r12
  42b0c4:	mov    rdx,rax
  42b0c7:	call   0x42a3c0
  42b0cc:	jmp    0x42ae80
  42b0d1:	sub    r10d,0x2
  42b0d5:	mov    rax,r13
  42b0d8:	mov    DWORD PTR [rsp+0x90],0xffffffff
  42b0e3:	cmp    r10d,0x1
  42b0e7:	jbe    0x42b28b
  42b0ed:	mov    eax,DWORD PTR [rax]
  42b0ef:	mov    rcx,QWORD PTR [rsp+0x28]
  42b0f4:	mov    r8,r12
  42b0f7:	mov    edx,0x1
  42b0fc:	add    r13,0x8
  42b100:	mov    BYTE PTR [rsp+0x70],al
  42b104:	call   0x4296e0
  42b109:	jmp    0x42ae80
  42b10e:	xchg   ax,ax
  42b110:	mov    eax,DWORD PTR [rsp+0x88]
  42b117:	mov    rdx,r13
  42b11a:	add    r13,0x8
  42b11e:	or     eax,0x20
  42b121:	test   al,0x4
  42b123:	mov    DWORD PTR [rsp+0x88],eax
  42b12a:	je     0x42b2c8
  42b130:	mov    rax,QWORD PTR [rdx]
  42b133:	mov    rcx,QWORD PTR [rsp+0x20]
  42b138:	mov    rdx,r12
  42b13b:	fld    TBYTE PTR [rax]
  42b13d:	fstp   TBYTE PTR [rsp+0x50]
  42b141:	call   0x42a780
  42b146:	jmp    0x42ae80
  42b14b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b150:	or     DWORD PTR [rsp+0x88],0x80
  42b15b:	cmp    r10d,0x3
  42b15f:	je     0x42b538
  42b165:	cmp    r10d,0x2
  42b169:	je     0x42b5e7
  42b16f:	movsxd rcx,DWORD PTR [r13+0x0]
  42b173:	cmp    r10d,0x1
  42b177:	lea    rax,[r13+0x8]
  42b17b:	mov    QWORD PTR [rsp+0x70],rcx
  42b180:	je     0x42b64d
  42b186:	cmp    r10d,0x5
  42b18a:	mov    r13,rax
  42b18d:	je     0x42b69f
  42b193:	mov    rax,rcx
  42b196:	mov    rdx,r12
  42b199:	sar    rax,0x3f
  42b19d:	mov    QWORD PTR [rsp+0x78],rax
  42b1a2:	call   0x429dd0
  42b1a7:	jmp    0x42ae80
  42b1ac:	nop    DWORD PTR [rax+0x0]
  42b1b0:	or     DWORD PTR [rsp+0x88],0x4
  42b1b8:	movzx  eax,BYTE PTR [rdi+0x1]
  42b1bc:	mov    r14d,0x4
  42b1c2:	jmp    0x42af80
  42b1c7:	nop    WORD PTR [rax+rax*1+0x0]
  42b1d0:	movzx  eax,BYTE PTR [rdi+0x1]
  42b1d4:	cmp    al,0x36
  42b1d6:	je     0x42b518
  42b1dc:	cmp    al,0x33
  42b1de:	je     0x42b5ac
  42b1e4:	mov    r10d,0x3
  42b1ea:	mov    r14d,0x4
  42b1f0:	jmp    0x42af80
  42b1f5:	mov    eax,DWORD PTR [rsp+0x88]
  42b1fc:	mov    rdx,r13
  42b1ff:	add    r13,0x8
  42b203:	test   al,0x4
  42b205:	jne    0x42afb3
  42b20b:	mov    rcx,QWORD PTR [rsp+0x20]
  42b210:	fld    QWORD PTR [rdx]
  42b212:	mov    rdx,r12
  42b215:	fstp   TBYTE PTR [rsp+0x50]
  42b219:	call   0x42a220
  42b21e:	jmp    0x42ae80
  42b223:	mov    eax,DWORD PTR [rsp+0x88]
  42b22a:	mov    rdx,r13
  42b22d:	add    r13,0x8
  42b231:	test   al,0x4
  42b233:	jne    0x42b020
  42b239:	mov    rcx,QWORD PTR [rsp+0x20]
  42b23e:	fld    QWORD PTR [rdx]
  42b240:	mov    rdx,r12
  42b243:	fstp   TBYTE PTR [rsp+0x50]
  42b247:	call   0x429ce0
  42b24c:	jmp    0x42ae80
  42b251:	mov    eax,DWORD PTR [rsp+0x88]
  42b258:	mov    rdx,r13
  42b25b:	add    r13,0x8
  42b25f:	test   al,0x4
  42b261:	jne    0x42b060
  42b267:	mov    rcx,QWORD PTR [rsp+0x20]
  42b26c:	fld    QWORD PTR [rdx]
  42b26e:	mov    rdx,r12
  42b271:	fstp   TBYTE PTR [rsp+0x50]
  42b275:	call   0x42a170
  42b27a:	jmp    0x42ae80
  42b27f:	nop
  42b280:	mov    DWORD PTR [rsp+0x90],0xffffffff
  42b28b:	mov    eax,DWORD PTR [r13+0x0]
  42b28f:	mov    rcx,QWORD PTR [rsp+0x28]
  42b294:	lea    rsi,[r13+0x8]
  42b298:	mov    r8,r12
  42b29b:	mov    edx,0x1
  42b2a0:	mov    r13,rsi
  42b2a3:	mov    WORD PTR [rsp+0x70],ax
  42b2a8:	call   0x4295c0
  42b2ad:	jmp    0x42ae80
  42b2b2:	mov    eax,DWORD PTR [rsp+0x88]
  42b2b9:	mov    rdx,r13
  42b2bc:	add    r13,0x8
  42b2c0:	test   al,0x4
  42b2c2:	jne    0x42b130
  42b2c8:	mov    rcx,QWORD PTR [rsp+0x20]
  42b2cd:	fld    QWORD PTR [rdx]
  42b2cf:	mov    rdx,r12
  42b2d2:	fstp   TBYTE PTR [rsp+0x50]
  42b2d6:	call   0x42a780
  42b2db:	jmp    0x42ae80
  42b2e0:	test   r14d,r14d
  42b2e3:	jne    0x42b480
  42b2e9:	or     DWORD PTR [rsp+0x88],0x200
  42b2f4:	movzx  eax,BYTE PTR [rdi+0x1]
  42b2f8:	jmp    0x42af80
  42b2fd:	nop    DWORD PTR [rax]
  42b300:	cmp    r14d,0x1
  42b304:	jbe    0x42b56e
  42b30a:	movzx  eax,BYTE PTR [rdi+0x1]
  42b30e:	mov    r14d,0x4
  42b314:	jmp    0x42af80
  42b319:	nop    DWORD PTR [rax+0x0]
  42b320:	test   r14d,r14d
  42b323:	jne    0x42b3a9
  42b329:	or     DWORD PTR [rsp+0x88],0x400
  42b334:	movzx  eax,BYTE PTR [rdi+0x1]
  42b338:	jmp    0x42af80
  42b33d:	nop    DWORD PTR [rax]
  42b340:	test   r14d,r14d
  42b343:	jne    0x42b3a9
  42b345:	or     DWORD PTR [rsp+0x88],0x100
  42b350:	movzx  eax,BYTE PTR [rdi+0x1]
  42b354:	jmp    0x42af80
  42b359:	nop    DWORD PTR [rax+0x0]
  42b360:	test   r14d,r14d
  42b363:	jne    0x42b3a9
  42b365:	or     DWORD PTR [rsp+0x88],0x800
  42b370:	movzx  eax,BYTE PTR [rdi+0x1]
  42b374:	jmp    0x42af80
  42b379:	nop    DWORD PTR [rax+0x0]
  42b380:	test   r14d,r14d
  42b383:	jne    0x42b3a9
  42b385:	or     DWORD PTR [rsp+0x88],0x40
  42b38d:	movzx  eax,BYTE PTR [rdi+0x1]
  42b391:	jmp    0x42af80
  42b396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b3a0:	test   r14d,r14d
  42b3a3:	je     0x42b4b2
  42b3a9:	movzx  eax,BYTE PTR [rdi+0x1]
  42b3ad:	jmp    0x42af80
  42b3b2:	mov    rdx,r12
  42b3b5:	call   0x429560
  42b3ba:	jmp    0x42ae80
  42b3bf:	nop
  42b3c0:	test   r11,r11
  42b3c3:	je     0x42b30a
  42b3c9:	test   r14d,0xfffffffd
  42b3d0:	jne    0x42b4a0
  42b3d6:	mov    eax,DWORD PTR [r13+0x0]
  42b3da:	lea    rdx,[r13+0x8]
  42b3de:	test   eax,eax
  42b3e0:	mov    DWORD PTR [r11],eax
  42b3e3:	js     0x42b660
  42b3e9:	movzx  eax,BYTE PTR [rdi+0x1]
  42b3ed:	mov    r13,rdx
  42b3f0:	xor    r11d,r11d
  42b3f3:	jmp    0x42af80
  42b3f8:	nop    DWORD PTR [rax+rax*1+0x0]
  42b400:	sub    eax,0x30
  42b403:	cmp    al,0x9
  42b405:	ja     0x42b626
  42b40b:	cmp    r14d,0x3
  42b40f:	ja     0x42b626
  42b415:	test   r14d,r14d
  42b418:	jne    0x42b48a
  42b41a:	mov    r14d,0x1
  42b420:	test   r11,r11
  42b423:	je     0x42b3a9
  42b425:	mov    eax,DWORD PTR [r11]
  42b428:	test   eax,eax
  42b42a:	js     0x42b58d
  42b430:	lea    eax,[rax+rax*4]
  42b433:	lea    eax,[rcx+rax*2-0x30]
  42b437:	mov    DWORD PTR [r11],eax
  42b43a:	movzx  eax,BYTE PTR [rdi+0x1]
  42b43e:	jmp    0x42af80
  42b443:	mov    rsi,QWORD PTR [r13+0x0]
  42b447:	lea    rax,[rip+0x11fba]        # 0x43d408
  42b44e:	lea    rdi,[r13+0x8]
  42b452:	mov    r13,rdi
  42b455:	test   rsi,rsi
  42b458:	cmove  rsi,rax
  42b45c:	mov    rcx,rsi
  42b45f:	call   0x42ddd0
  42b464:	mov    r8,r12
  42b467:	mov    edx,eax
  42b469:	mov    rcx,rsi
  42b46c:	call   0x4295c0
  42b471:	jmp    0x42ae80
  42b476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b480:	cmp    r14d,0x3
  42b484:	ja     0x42b626
  42b48a:	cmp    r14d,0x2
  42b48e:	mov    eax,0x3
  42b493:	cmove  r14d,eax
  42b497:	jmp    0x42b420
  42b499:	nop    DWORD PTR [rax+0x0]
  42b4a0:	movzx  eax,BYTE PTR [rdi+0x1]
  42b4a4:	xor    r11d,r11d
  42b4a7:	mov    r14d,0x4
  42b4ad:	jmp    0x42af80
  42b4b2:	mov    DWORD PTR [rsp+0x4c],r10d
  42b4b7:	mov    QWORD PTR [rsp+0x40],r11
  42b4bc:	or     DWORD PTR [rsp+0x88],0x1000
  42b4c7:	mov    DWORD PTR [rsp+0x70],0x0
  42b4cf:	call   0x42deb0
  42b4d4:	mov    r9,QWORD PTR [rsp+0x28]
  42b4d9:	mov    rdx,QWORD PTR [rax+0x8]
  42b4dd:	mov    r8d,0x10
  42b4e3:	mov    rcx,QWORD PTR [rsp+0x38]
  42b4e8:	call   0x42db70
  42b4ed:	test   eax,eax
  42b4ef:	mov    r11,QWORD PTR [rsp+0x40]
  42b4f4:	mov    r10d,DWORD PTR [rsp+0x4c]
  42b4f9:	jle    0x42b508
  42b4fb:	movzx  edx,WORD PTR [rsp+0x6e]
  42b500:	mov    WORD PTR [rsp+0xa0],dx
  42b508:	mov    DWORD PTR [rsp+0x9c],eax
  42b50f:	movzx  eax,BYTE PTR [rdi+0x1]
  42b513:	jmp    0x42af80
  42b518:	cmp    BYTE PTR [rdi+0x2],0x34
  42b51c:	je     0x42b6af
  42b522:	mov    eax,0x36
  42b527:	mov    r10d,0x3
  42b52d:	mov    r14d,0x4
  42b533:	jmp    0x42af80
  42b538:	mov    rcx,QWORD PTR [r13+0x0]
  42b53c:	add    r13,0x8
  42b540:	mov    QWORD PTR [rsp+0x70],rcx
  42b545:	jmp    0x42b193
  42b54a:	mov    edx,DWORD PTR [rsp+0xa4]
  42b551:	add    r13,0x8
  42b555:	mov    BYTE PTR [rax],dl
  42b557:	jmp    0x42ae80
  42b55c:	mov    rax,QWORD PTR [r13+0x0]
  42b560:	add    r13,0x8
  42b564:	mov    QWORD PTR [rsp+0x70],rax
  42b569:	jmp    0x42b0b8
  42b56e:	mov    DWORD PTR [rsp+0x90],0x0
  42b579:	movzx  eax,BYTE PTR [rdi+0x1]
  42b57d:	lea    r11,[r12+0x10]
  42b582:	mov    r14d,0x2
  42b588:	jmp    0x42af80
  42b58d:	sub    ecx,0x30
  42b590:	movzx  eax,BYTE PTR [rdi+0x1]
  42b594:	mov    DWORD PTR [r11],ecx
  42b597:	jmp    0x42af80
  42b59c:	mov    rdx,r12
  42b59f:	mov    rcx,rax
  42b5a2:	call   0x429dd0
  42b5a7:	jmp    0x42ae80
  42b5ac:	cmp    BYTE PTR [rdi+0x2],0x32
  42b5b0:	mov    eax,0x33
  42b5b5:	jne    0x42b1e4
  42b5bb:	lea    rbx,[rdi+0x3]
  42b5bf:	movzx  eax,BYTE PTR [rdi+0x3]
  42b5c3:	mov    r10d,0x2
  42b5c9:	mov    r14d,0x4
  42b5cf:	jmp    0x42af80
  42b5d4:	mov    edx,DWORD PTR [rsp+0xa4]
  42b5db:	add    r13,0x8
  42b5df:	mov    WORD PTR [rax],dx
  42b5e2:	jmp    0x42ae80
  42b5e7:	movsxd rcx,DWORD PTR [r13+0x0]
  42b5eb:	add    r13,0x8
  42b5ef:	mov    QWORD PTR [rsp+0x70],rcx
  42b5f4:	jmp    0x42b193
  42b5f9:	mov    eax,DWORD PTR [r13+0x0]
  42b5fd:	add    r13,0x8
  42b601:	mov    QWORD PTR [rsp+0x70],rax
  42b606:	jmp    0x42b0b8
  42b60b:	mov    eax,DWORD PTR [rsp+0x48]
  42b60f:	mov    DWORD PTR [rsp+0x90],0x10
  42b61a:	mov    DWORD PTR [rsp+0x88],eax
  42b621:	jmp    0x42aea3
  42b626:	mov    rdx,r12
  42b629:	mov    ecx,0x25
  42b62e:	mov    rbx,rsi
  42b631:	call   0x429560
  42b636:	jmp    0x42ae80
  42b63b:	movzx  eax,WORD PTR [rsp+0x70]
  42b640:	mov    r13,rdx
  42b643:	mov    QWORD PTR [rsp+0x70],rax
  42b648:	jmp    0x42b0b8
  42b64d:	movsx  rcx,WORD PTR [rsp+0x70]
  42b653:	mov    r13,rax
  42b656:	mov    QWORD PTR [rsp+0x70],rcx
  42b65b:	jmp    0x42b193
  42b660:	test   r14d,r14d
  42b663:	jne    0x42b6c8
  42b665:	or     DWORD PTR [rsp+0x88],0x400
  42b670:	neg    DWORD PTR [rsp+0x8c]
  42b677:	jmp    0x42b3e9
  42b67c:	movsxd rdx,DWORD PTR [rsp+0xa4]
  42b684:	add    r13,0x8
  42b688:	mov    QWORD PTR [rax],rdx
  42b68b:	jmp    0x42ae80
  42b690:	movzx  eax,BYTE PTR [rsp+0x70]
  42b695:	mov    QWORD PTR [rsp+0x70],rax
  42b69a:	jmp    0x42b0b8
  42b69f:	movsx  rcx,BYTE PTR [rsp+0x70]
  42b6a5:	mov    QWORD PTR [rsp+0x70],rcx
  42b6aa:	jmp    0x42b193
  42b6af:	lea    rbx,[rdi+0x3]
  42b6b3:	movzx  eax,BYTE PTR [rdi+0x3]
  42b6b7:	mov    r10d,0x3
  42b6bd:	mov    r14d,0x4
  42b6c3:	jmp    0x42af80
  42b6c8:	mov    DWORD PTR [rsp+0x90],0xffffffff
  42b6d3:	movzx  eax,BYTE PTR [rdi+0x1]
  42b6d7:	mov    r13,rdx
  42b6da:	xor    r11d,r11d
  42b6dd:	jmp    0x42af80
  42b6e2:	nop
  42b6e3:	nop
  42b6e4:	nop
  42b6e5:	nop
  42b6e6:	nop
  42b6e7:	nop
  42b6e8:	nop
  42b6e9:	nop
  42b6ea:	nop
  42b6eb:	nop
  42b6ec:	nop
  42b6ed:	nop
  42b6ee:	nop
  42b6ef:	nop
  42b6f0:	push   rbx
  42b6f1:	sub    rsp,0x20
  42b6f5:	xor    ebx,ebx
  42b6f7:	cmp    ecx,0x1b
  42b6fa:	jle    0x42b70d
  42b6fc:	mov    eax,0x4
  42b701:	add    eax,eax
  42b703:	add    ebx,0x1
  42b706:	lea    edx,[rax+0x17]
  42b709:	cmp    edx,ecx
  42b70b:	jl     0x42b701
  42b70d:	mov    ecx,ebx
  42b70f:	call   0x42cfe0
  42b714:	mov    DWORD PTR [rax],ebx
  42b716:	add    rax,0x4
  42b71a:	add    rsp,0x20
  42b71e:	pop    rbx
  42b71f:	ret    
  42b720:	push   rsi
  42b721:	push   rbx
  42b722:	sub    rsp,0x28
  42b726:	mov    rbx,rcx
  42b729:	mov    ecx,r8d
  42b72c:	mov    rsi,rdx
  42b72f:	call   0x42b6f0
  42b734:	movzx  ecx,BYTE PTR [rbx]
  42b737:	lea    r8,[rbx+0x1]
  42b73b:	test   cl,cl
  42b73d:	mov    BYTE PTR [rax],cl
  42b73f:	mov    rcx,rax
  42b742:	je     0x42b759
  42b744:	add    r8,0x1
  42b748:	movzx  r9d,BYTE PTR [r8-0x1]
  42b74d:	add    rcx,0x1
  42b751:	test   r9b,r9b
  42b754:	mov    BYTE PTR [rcx],r9b
  42b757:	jne    0x42b744
  42b759:	test   rsi,rsi
  42b75c:	je     0x42b761
  42b75e:	mov    QWORD PTR [rsi],rcx
  42b761:	add    rsp,0x28
  42b765:	pop    rbx
  42b766:	pop    rsi
  42b767:	ret    
  42b768:	nop    DWORD PTR [rax+rax*1+0x0]
  42b770:	mov    edx,0x1
  42b775:	mov    rax,rcx
  42b778:	mov    ecx,DWORD PTR [rcx-0x4]
  42b77b:	shl    edx,cl
  42b77d:	mov    DWORD PTR [rax+0x4],ecx
  42b780:	lea    rcx,[rax-0x4]
  42b784:	mov    DWORD PTR [rax+0x8],edx
  42b787:	jmp    0x42d0f0
  42b78c:	nop    DWORD PTR [rax+0x0]
  42b790:	push   r15
  42b792:	push   r14
  42b794:	push   r13
  42b796:	push   r12
  42b798:	push   rbp
  42b799:	push   rdi
  42b79a:	push   rsi
  42b79b:	push   rbx
  42b79c:	sub    rsp,0x38
  42b7a0:	xor    eax,eax
  42b7a2:	mov    edi,DWORD PTR [rdx+0x14]
  42b7a5:	cmp    edi,DWORD PTR [rcx+0x14]
  42b7a8:	mov    r15,rdx
  42b7ab:	jg     0x42b8f9
  42b7b1:	sub    edi,0x1
  42b7b4:	lea    rbx,[rdx+0x18]
  42b7b8:	lea    r12,[rcx+0x18]
  42b7bc:	movsxd r13,edi
  42b7bf:	xor    edx,edx
  42b7c1:	shl    r13,0x2
  42b7c5:	lea    rbp,[rbx+r13*1]
  42b7c9:	add    r13,r12
  42b7cc:	mov    eax,DWORD PTR [rbp+0x0]
  42b7cf:	lea    r8d,[rax+0x1]
  42b7d3:	mov    eax,DWORD PTR [r13+0x0]
  42b7d7:	div    r8d
  42b7da:	test   eax,eax
  42b7dc:	mov    r14d,eax
  42b7df:	mov    DWORD PTR [rsp+0x2c],eax
  42b7e3:	je     0x42b877
  42b7e9:	mov    edx,eax
  42b7eb:	mov    rsi,rbx
  42b7ee:	mov    r11,r12
  42b7f1:	xor    eax,eax
  42b7f3:	xor    r10d,r10d
  42b7f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b800:	add    rsi,0x4
  42b804:	mov    r8d,DWORD PTR [rsi-0x4]
  42b808:	mov    r9d,DWORD PTR [r11]
  42b80b:	add    r11,0x4
  42b80f:	imul   r8,rdx
  42b813:	add    r8,rax
  42b816:	mov    rax,r8
  42b819:	mov    r8d,r8d
  42b81c:	sub    r9,r8
  42b81f:	shr    rax,0x20
  42b823:	sub    r9,r10
  42b826:	mov    r10,r9
  42b829:	mov    DWORD PTR [r11-0x4],r9d
  42b82d:	shr    r10,0x20
  42b831:	and    r10d,0x1
  42b835:	cmp    rbp,rsi
  42b838:	jae    0x42b800
  42b83a:	mov    r11d,DWORD PTR [r13+0x0]
  42b83e:	test   r11d,r11d
  42b841:	jne    0x42b877
  42b843:	lea    rax,[r13-0x4]
  42b847:	cmp    r12,rax
  42b84a:	jae    0x42b874
  42b84c:	mov    r10d,DWORD PTR [r13-0x4]
  42b850:	test   r10d,r10d
  42b853:	je     0x42b868
  42b855:	jmp    0x42b874
  42b857:	nop    WORD PTR [rax+rax*1+0x0]
  42b860:	mov    r9d,DWORD PTR [rax]
  42b863:	test   r9d,r9d
  42b866:	jne    0x42b874
  42b868:	sub    rax,0x4
  42b86c:	sub    edi,0x1
  42b86f:	cmp    r12,rax
  42b872:	jb     0x42b860
  42b874:	mov    DWORD PTR [rcx+0x14],edi
  42b877:	mov    rdx,r15
  42b87a:	mov    rsi,rcx
  42b87d:	call   0x42d610
  42b882:	test   eax,eax
  42b884:	js     0x42b8f5
  42b886:	lea    eax,[r14+0x1]
  42b88a:	mov    rcx,r12
  42b88d:	xor    edx,edx
  42b88f:	mov    DWORD PTR [rsp+0x2c],eax
  42b893:	add    rbx,0x4
  42b897:	mov    eax,DWORD PTR [rcx]
  42b899:	mov    r8d,DWORD PTR [rbx-0x4]
  42b89d:	add    rcx,0x4
  42b8a1:	sub    rax,r8
  42b8a4:	sub    rax,rdx
  42b8a7:	mov    rdx,rax
  42b8aa:	mov    DWORD PTR [rcx-0x4],eax
  42b8ad:	shr    rdx,0x20
  42b8b1:	and    edx,0x1
  42b8b4:	cmp    rbp,rbx
  42b8b7:	jae    0x42b893
  42b8b9:	movsxd rax,edi
  42b8bc:	lea    rdx,[r12+rax*4]
  42b8c0:	mov    r8d,DWORD PTR [rdx]
  42b8c3:	test   r8d,r8d
  42b8c6:	jne    0x42b8f5
  42b8c8:	lea    rax,[rdx-0x4]
  42b8cc:	cmp    r12,rax
  42b8cf:	jae    0x42b8f2
  42b8d1:	mov    ecx,DWORD PTR [rdx-0x4]
  42b8d4:	test   ecx,ecx
  42b8d6:	je     0x42b8e6
  42b8d8:	jmp    0x42b8f2
  42b8da:	nop    WORD PTR [rax+rax*1+0x0]
  42b8e0:	mov    edx,DWORD PTR [rax]
  42b8e2:	test   edx,edx
  42b8e4:	jne    0x42b8f2
  42b8e6:	sub    rax,0x4
  42b8ea:	sub    edi,0x1
  42b8ed:	cmp    r12,rax
  42b8f0:	jb     0x42b8e0
  42b8f2:	mov    DWORD PTR [rsi+0x14],edi
  42b8f5:	mov    eax,DWORD PTR [rsp+0x2c]
  42b8f9:	add    rsp,0x38
  42b8fd:	pop    rbx
  42b8fe:	pop    rsi
  42b8ff:	pop    rdi
  42b900:	pop    rbp
  42b901:	pop    r12
  42b903:	pop    r13
  42b905:	pop    r14
  42b907:	pop    r15
  42b909:	ret    
  42b90a:	nop
  42b90b:	nop
  42b90c:	nop
  42b90d:	nop
  42b90e:	nop
  42b90f:	nop
  42b910:	push   r15
  42b912:	push   r14
  42b914:	push   r13
  42b916:	push   r12
  42b918:	push   rbp
  42b919:	push   rdi
  42b91a:	push   rsi
  42b91b:	push   rbx
  42b91c:	sub    rsp,0xb8
  42b923:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  42b92b:	mov    r12d,DWORD PTR [r9]
  42b92e:	mov    eax,r12d
  42b931:	and    eax,0xffffffcf
  42b934:	mov    DWORD PTR [r9],eax
  42b937:	mov    eax,r12d
  42b93a:	and    eax,0x7
  42b93d:	cmp    eax,0x4
  42b940:	ja     0x42cd73
  42b946:	mov    r13d,edx
  42b949:	lea    rdx,[rip+0x11c60]        # 0x43d5b0
  42b950:	mov    QWORD PTR [rsp+0x28],r9
  42b955:	mov    r15,r8
  42b958:	mov    rbp,rcx
  42b95b:	movsxd rax,DWORD PTR [rdx+rax*4]
  42b95f:	add    rdx,rax
  42b962:	jmp    rdx
  42b964:	mov    edi,DWORD PTR [rcx]
  42b966:	xor    ecx,ecx
  42b968:	cmp    edi,0x20
  42b96b:	jle    0x42b97b
  42b96d:	mov    eax,0x20
  42b972:	add    eax,eax
  42b974:	add    ecx,0x1
  42b977:	cmp    edi,eax
  42b979:	jg     0x42b972
  42b97b:	call   0x42cfe0
  42b980:	mov    rsi,rax
  42b983:	lea    eax,[rdi-0x1]
  42b986:	lea    r9,[rsi+0x18]
  42b98a:	sar    eax,0x5
  42b98d:	cdqe   
  42b98f:	mov    rdx,r9
  42b992:	lea    r11,[r15+rax*4]
  42b996:	mov    rax,r15
  42b999:	nop    DWORD PTR [rax+0x0]
  42b9a0:	mov    ecx,DWORD PTR [rax]
  42b9a2:	add    rax,0x4
  42b9a6:	add    rdx,0x4
  42b9aa:	cmp    r11,rax
  42b9ad:	mov    DWORD PTR [rdx-0x4],ecx
  42b9b0:	jae    0x42b9a0
  42b9b2:	sub    rdx,r9
  42b9b5:	sar    rdx,0x2
  42b9b9:	mov    r14d,edx
  42b9bc:	movsxd rdx,edx
  42b9bf:	lea    rax,[r9+rdx*4-0x4]
  42b9c4:	jmp    0x42b9df
  42b9c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b9d0:	sub    rax,0x4
  42b9d4:	test   edx,edx
  42b9d6:	mov    r14d,edx
  42b9d9:	je     0x42bee0
  42b9df:	mov    r8d,DWORD PTR [rax]
  42b9e2:	lea    edx,[r14-0x1]
  42b9e6:	test   r8d,r8d
  42b9e9:	je     0x42b9d0
  42b9eb:	movsxd rdx,edx
  42b9ee:	mov    DWORD PTR [rsi+0x14],r14d
  42b9f2:	shl    r14d,0x5
  42b9f6:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  42b9fb:	xor    eax,0x1f
  42b9fe:	sub    r14d,eax
  42ba01:	mov    rcx,rsi
  42ba04:	call   0x42ce80
  42ba09:	test   eax,eax
  42ba0b:	mov    DWORD PTR [rsp+0x9c],eax
  42ba12:	mov    r11d,r13d
  42ba15:	jne    0x42bef0
  42ba1b:	mov    ecx,DWORD PTR [rsi+0x14]
  42ba1e:	test   ecx,ecx
  42ba20:	jne    0x42bad0
  42ba26:	mov    rcx,rsi
  42ba29:	call   0x42d0f0
  42ba2e:	mov    rax,QWORD PTR [rsp+0x130]
  42ba36:	mov    rdx,QWORD PTR [rsp+0x138]
  42ba3e:	lea    rcx,[rip+0x11b68]        # 0x43d5ad
  42ba45:	mov    r8d,0x1
  42ba4b:	mov    DWORD PTR [rax],0x1
  42ba51:	call   0x42b720
  42ba56:	nop
  42ba57:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  42ba5f:	add    rsp,0xb8
  42ba66:	pop    rbx
  42ba67:	pop    rsi
  42ba68:	pop    rdi
  42ba69:	pop    rbp
  42ba6a:	pop    r12
  42ba6c:	pop    r13
  42ba6e:	pop    r14
  42ba70:	pop    r15
  42ba72:	ret    
  42ba73:	mov    rax,QWORD PTR [rsp+0x130]
  42ba7b:	mov    rdx,QWORD PTR [rsp+0x138]
  42ba83:	lea    rcx,[rip+0x11b1f]        # 0x43d5a9
  42ba8a:	mov    r8d,0x3
  42ba90:	mov    DWORD PTR [rax],0xffff8000
  42ba96:	call   0x42b720
  42ba9b:	jmp    0x42ba57
  42ba9d:	nop    DWORD PTR [rax]
  42baa0:	mov    rax,QWORD PTR [rsp+0x130]
  42baa8:	mov    rdx,QWORD PTR [rsp+0x138]
  42bab0:	lea    rcx,[rip+0x11ae9]        # 0x43d5a0
  42bab7:	mov    r8d,0x8
  42babd:	mov    DWORD PTR [rax],0xffff8000
  42bac3:	call   0x42b720
  42bac8:	jmp    0x42ba57
  42baca:	nop    WORD PTR [rax+rax*1+0x0]
  42bad0:	lea    rdx,[rsp+0x9c]
  42bad8:	mov    rcx,rsi
  42badb:	mov    DWORD PTR [rsp+0x30],r11d
  42bae0:	call   0x42d7a0
  42bae5:	movq   rdx,xmm0
  42baea:	movq   r9,xmm0
  42baef:	mov    r11d,DWORD PTR [rsp+0x30]
  42baf4:	pxor   xmm0,xmm0
  42baf8:	shr    rdx,0x20
  42bafc:	mov    r9d,r9d
  42baff:	and    edx,0xfffff
  42bb05:	lea    ecx,[r11+r14*1-0x1]
  42bb0a:	or     edx,0x3ff00000
  42bb10:	mov    rax,rdx
  42bb13:	cvtsi2sd xmm0,ecx
  42bb17:	shl    rax,0x20
  42bb1b:	mov    ebx,ecx
  42bb1d:	or     r9,rax
  42bb20:	sar    ebx,0x1f
  42bb23:	mov    QWORD PTR [rsp+0x30],r9
  42bb28:	mov    eax,ebx
  42bb2a:	movsd  xmm1,QWORD PTR [rsp+0x30]
  42bb30:	xor    eax,ecx
  42bb32:	sub    eax,ebx
  42bb34:	subsd  xmm1,QWORD PTR [rip+0x11a8c]        # 0x43d5c8
  42bb3c:	sub    eax,0x435
  42bb41:	test   eax,eax
  42bb43:	mulsd  xmm0,QWORD PTR [rip+0x11a95]        # 0x43d5e0
  42bb4b:	mulsd  xmm1,QWORD PTR [rip+0x11a7d]        # 0x43d5d0
  42bb53:	addsd  xmm1,QWORD PTR [rip+0x11a7d]        # 0x43d5d8
  42bb5b:	addsd  xmm1,xmm0
  42bb5f:	jle    0x42bb75
  42bb61:	pxor   xmm0,xmm0
  42bb65:	cvtsi2sd xmm0,eax
  42bb69:	mulsd  xmm0,QWORD PTR [rip+0x11a77]        # 0x43d5e8
  42bb71:	addsd  xmm1,xmm0
  42bb75:	cvttsd2si eax,xmm1
  42bb79:	pxor   xmm6,xmm6
  42bb7d:	ucomisd xmm6,xmm1
  42bb81:	mov    DWORD PTR [rsp+0x30],eax
  42bb85:	ja     0x42c413
  42bb8b:	mov    eax,ecx
  42bb8d:	mov    r9d,r9d
  42bb90:	mov    DWORD PTR [rsp+0x6c],0x1
  42bb98:	shl    eax,0x14
  42bb9b:	add    eax,edx
  42bb9d:	shl    rax,0x20
  42bba1:	or     r9,rax
  42bba4:	cmp    DWORD PTR [rsp+0x30],0x16
  42bba9:	mov    QWORD PTR [rsp+0x80],r9
  42bbb1:	ja     0x42bbe0
  42bbb3:	movsxd rax,DWORD PTR [rsp+0x30]
  42bbb8:	mov    rdx,QWORD PTR [rip+0x11d71]        # 0x43d930
  42bbbf:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  42bbc4:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  42bbcd:	jbe    0x42bf30
  42bbd3:	sub    DWORD PTR [rsp+0x30],0x1
  42bbd8:	mov    DWORD PTR [rsp+0x6c],0x0
  42bbe0:	mov    eax,r14d
  42bbe3:	mov    DWORD PTR [rsp+0x50],0x0
  42bbeb:	sub    eax,ecx
  42bbed:	sub    eax,0x1
  42bbf0:	mov    DWORD PTR [rsp+0x40],eax
  42bbf4:	js     0x42c400
  42bbfa:	mov    eax,DWORD PTR [rsp+0x30]
  42bbfe:	test   eax,eax
  42bc00:	js     0x42c3e0
  42bc06:	add    DWORD PTR [rsp+0x40],eax
  42bc0a:	mov    DWORD PTR [rsp+0x88],eax
  42bc11:	mov    DWORD PTR [rsp+0x58],0x0
  42bc19:	cmp    DWORD PTR [rsp+0x120],0x9
  42bc21:	ja     0x42bf10
  42bc27:	cmp    DWORD PTR [rsp+0x120],0x5
  42bc2f:	jle    0x42bf1b
  42bc35:	sub    DWORD PTR [rsp+0x120],0x4
  42bc3d:	xor    eax,eax
  42bc3f:	cmp    DWORD PTR [rsp+0x120],0x3
  42bc47:	je     0x42c5d4
  42bc4d:	jle    0x42c333
  42bc53:	cmp    DWORD PTR [rsp+0x120],0x4
  42bc5b:	mov    DWORD PTR [rsp+0x60],0x1
  42bc63:	je     0x42bf40
  42bc69:	cmp    DWORD PTR [rsp+0x120],0x5
  42bc71:	jne    0x42c349
  42bc77:	mov    ebx,DWORD PTR [rsp+0x30]
  42bc7b:	add    ebx,DWORD PTR [rsp+0x128]
  42bc82:	mov    DWORD PTR [rsp+0x8c],ebx
  42bc89:	add    ebx,0x1
  42bc8c:	test   ebx,ebx
  42bc8e:	mov    DWORD PTR [rsp+0x68],ebx
  42bc92:	mov    ecx,ebx
  42bc94:	jle    0x42c810
  42bc9a:	cmp    ebx,0xe
  42bc9d:	mov    DWORD PTR [rsp+0x9c],ebx
  42bca4:	setbe  bl
  42bca7:	and    ebx,eax
  42bca9:	mov    QWORD PTR [rsp+0x78],r9
  42bcae:	mov    DWORD PTR [rsp+0x70],r11d
  42bcb3:	call   0x42b6f0
  42bcb8:	mov    QWORD PTR [rsp+0x48],rax
  42bcbd:	mov    eax,DWORD PTR [rbp+0xc]
  42bcc0:	mov    r11d,DWORD PTR [rsp+0x70]
  42bcc5:	mov    r9,QWORD PTR [rsp+0x78]
  42bcca:	sub    eax,0x1
  42bccd:	mov    DWORD PTR [rsp+0x38],eax
  42bcd1:	je     0x42bcf8
  42bcd3:	mov    ecx,DWORD PTR [rsp+0x38]
  42bcd7:	mov    eax,0x2
  42bcdc:	test   ecx,ecx
  42bcde:	cmovns eax,ecx
  42bce1:	and    r12d,0x8
  42bce5:	mov    DWORD PTR [rsp+0x38],eax
  42bce9:	je     0x42bcf8
  42bceb:	mov    eax,0x3
  42bcf0:	sub    eax,DWORD PTR [rsp+0x38]
  42bcf4:	mov    DWORD PTR [rsp+0x38],eax
  42bcf8:	test   bl,bl
  42bcfa:	je     0x42bff0
  42bd00:	mov    eax,DWORD PTR [rsp+0x38]
  42bd04:	or     eax,DWORD PTR [rsp+0x30]
  42bd08:	jne    0x42bff0
  42bd0e:	mov    eax,DWORD PTR [rsp+0x6c]
  42bd12:	mov    DWORD PTR [rsp+0x9c],0x0
  42bd1d:	movsd  xmm4,QWORD PTR [rsp+0x80]
  42bd26:	test   eax,eax
  42bd28:	je     0x42bd3c
  42bd2a:	movsd  xmm0,QWORD PTR [rip+0x118c6]        # 0x43d5f8
  42bd32:	ucomisd xmm0,xmm4
  42bd36:	ja     0x42cb6b
  42bd3c:	movapd xmm0,xmm4
  42bd40:	mov    r12d,DWORD PTR [rsp+0x68]
  42bd45:	addsd  xmm0,xmm4
  42bd49:	addsd  xmm0,QWORD PTR [rip+0x118bf]        # 0x43d610
  42bd51:	movq   rdx,xmm0
  42bd56:	movq   rax,xmm0
  42bd5b:	shr    rdx,0x20
  42bd5f:	mov    eax,eax
  42bd61:	sub    edx,0x3400000
  42bd67:	shl    rdx,0x20
  42bd6b:	or     rax,rdx
  42bd6e:	test   r12d,r12d
  42bd71:	je     0x42bfa7
  42bd77:	mov    r9d,DWORD PTR [rsp+0x68]
  42bd7c:	movapd xmm0,xmm4
  42bd80:	xor    ecx,ecx
  42bd82:	mov    ebx,DWORD PTR [rsp+0x60]
  42bd86:	lea    edx,[r9-0x1]
  42bd8a:	movsxd rdx,edx
  42bd8d:	test   ebx,ebx
  42bd8f:	je     0x42c8b3
  42bd95:	mov    r10,QWORD PTR [rip+0x11b94]        # 0x43d930
  42bd9c:	movsd  xmm1,QWORD PTR [rip+0x1188c]        # 0x43d630
  42bda4:	mov    QWORD PTR [rsp+0x38],rax
  42bda9:	cvttsd2si eax,xmm0
  42bdad:	pxor   xmm2,xmm2
  42bdb1:	mov    DWORD PTR [rsp+0x9c],0x0
  42bdbc:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  42bdc2:	mov    rdx,QWORD PTR [rsp+0x48]
  42bdc7:	mov    rbx,rdx
  42bdca:	add    rbx,0x1
  42bdce:	cvtsi2sd xmm2,eax
  42bdd2:	add    eax,0x30
  42bdd5:	mov    BYTE PTR [rdx],al
  42bdd7:	movsd  xmm5,QWORD PTR [rsp+0x38]
  42bddd:	subsd  xmm0,xmm2
  42bde1:	subsd  xmm1,xmm5
  42bde5:	ucomisd xmm1,xmm0
  42bde9:	ja     0x42be84
  42bdef:	movsd  xmm5,QWORD PTR [rip+0x11801]        # 0x43d5f8
  42bdf7:	movapd xmm2,xmm5
  42bdfb:	subsd  xmm2,xmm0
  42bdff:	ucomisd xmm1,xmm2
  42be03:	ja     0x42c987
  42be09:	mov    eax,DWORD PTR [rsp+0x9c]
  42be10:	movsd  xmm3,QWORD PTR [rip+0x117e8]        # 0x43d600
  42be18:	add    eax,0x1
  42be1b:	cmp    r9d,eax
  42be1e:	mov    DWORD PTR [rsp+0x9c],eax
  42be25:	jg     0x42be5c
  42be27:	jmp    0x42bfde
  42be2c:	nop    DWORD PTR [rax+0x0]
  42be30:	movapd xmm2,xmm5
  42be34:	subsd  xmm2,xmm0
  42be38:	ucomisd xmm1,xmm2
  42be3c:	ja     0x42c987
  42be42:	mov    eax,DWORD PTR [rsp+0x9c]
  42be49:	add    eax,0x1
  42be4c:	cmp    r9d,eax
  42be4f:	mov    DWORD PTR [rsp+0x9c],eax
  42be56:	jle    0x42bfde
  42be5c:	mulsd  xmm0,xmm3
  42be60:	add    rbx,0x1
  42be64:	pxor   xmm2,xmm2
  42be68:	mulsd  xmm1,xmm3
  42be6c:	cvttsd2si eax,xmm0
  42be70:	cvtsi2sd xmm2,eax
  42be74:	add    eax,0x30
  42be77:	mov    BYTE PTR [rbx-0x1],al
  42be7a:	subsd  xmm0,xmm2
  42be7e:	ucomisd xmm1,xmm0
  42be82:	jbe    0x42be30
  42be84:	ucomisd xmm0,xmm6
  42be88:	lea    ebp,[rcx+0x1]
  42be8b:	jp     0x42be93
  42be8d:	je     0x42c7e7
  42be93:	mov    r15d,0x10
  42be99:	nop    DWORD PTR [rax+0x0]
  42bea0:	mov    rcx,rsi
  42bea3:	call   0x42d0f0
  42bea8:	cmp    QWORD PTR [rsp+0x138],0x0
  42beb1:	mov    rax,QWORD PTR [rsp+0x130]
  42beb9:	mov    BYTE PTR [rbx],0x0
  42bebc:	mov    DWORD PTR [rax],ebp
  42bebe:	je     0x42becb
  42bec0:	mov    rax,QWORD PTR [rsp+0x138]
  42bec8:	mov    QWORD PTR [rax],rbx
  42becb:	mov    rax,QWORD PTR [rsp+0x28]
  42bed0:	or     DWORD PTR [rax],r15d
  42bed3:	mov    rax,QWORD PTR [rsp+0x48]
  42bed8:	jmp    0x42ba57
  42bedd:	nop    DWORD PTR [rax]
  42bee0:	mov    DWORD PTR [rsi+0x14],0x0
  42bee7:	jmp    0x42ba01
  42beec:	nop    DWORD PTR [rax+0x0]
  42bef0:	mov    edx,eax
  42bef2:	mov    rcx,rsi
  42bef5:	call   0x42cd80
  42befa:	mov    eax,DWORD PTR [rsp+0x9c]
  42bf01:	lea    r11d,[r13+rax*1+0x0]
  42bf06:	sub    r14d,eax
  42bf09:	jmp    0x42ba1b
  42bf0e:	xchg   ax,ax
  42bf10:	mov    DWORD PTR [rsp+0x120],0x0
  42bf1b:	add    ecx,0x3fe
  42bf21:	cmp    ecx,0x7f7
  42bf27:	setbe  al
  42bf2a:	jmp    0x42bc3f
  42bf2f:	nop
  42bf30:	mov    DWORD PTR [rsp+0x6c],0x0
  42bf38:	jmp    0x42bbe0
  42bf3d:	nop    DWORD PTR [rax]
  42bf40:	mov    edx,DWORD PTR [rsp+0x128]
  42bf47:	test   edx,edx
  42bf49:	jle    0x42c7fb
  42bf4f:	cmp    DWORD PTR [rsp+0x128],0xe
  42bf57:	setbe  bl
  42bf5a:	mov    ecx,DWORD PTR [rsp+0x128]
  42bf61:	and    ebx,eax
  42bf63:	mov    DWORD PTR [rsp+0x9c],ecx
  42bf6a:	mov    DWORD PTR [rsp+0x8c],ecx
  42bf71:	mov    DWORD PTR [rsp+0x68],ecx
  42bf75:	jmp    0x42bca9
  42bf7a:	movapd xmm0,xmm4
  42bf7e:	addsd  xmm0,xmm4
  42bf82:	addsd  xmm0,QWORD PTR [rip+0x11686]        # 0x43d610
  42bf8a:	movq   rdx,xmm0
  42bf8f:	movq   rax,xmm0
  42bf94:	shr    rdx,0x20
  42bf98:	mov    eax,eax
  42bf9a:	sub    edx,0x3400000
  42bfa0:	shl    rdx,0x20
  42bfa4:	or     rax,rdx
  42bfa7:	movapd xmm1,xmm4
  42bfab:	mov    QWORD PTR [rsp+0x38],rax
  42bfb0:	movsd  xmm0,QWORD PTR [rsp+0x38]
  42bfb6:	subsd  xmm1,QWORD PTR [rip+0x1165a]        # 0x43d618
  42bfbe:	ucomisd xmm1,xmm0
  42bfc2:	ja     0x42c8a4
  42bfc8:	movsd  xmm2,QWORD PTR [rip+0x11650]        # 0x43d620
  42bfd0:	xorpd  xmm0,xmm2
  42bfd4:	ucomisd xmm0,xmm1
  42bfd8:	ja     0x42c3bd
  42bfde:	movq   r9,xmm4
  42bfe3:	mov    DWORD PTR [rsp+0x38],0x0
  42bfeb:	nop    DWORD PTR [rax+rax*1+0x0]
  42bff0:	test   r11d,r11d
  42bff3:	js     0x42c092
  42bff9:	movsxd rax,DWORD PTR [rsp+0x30]
  42bffe:	cmp    eax,DWORD PTR [rbp+0x14]
  42c001:	jg     0x42c092
  42c007:	mov    ebx,DWORD PTR [rsp+0x68]
  42c00b:	mov    rdx,QWORD PTR [rip+0x1191e]        # 0x43d930
  42c012:	test   ebx,ebx
  42c014:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  42c019:	jg     0x42c723
  42c01f:	mov    eax,DWORD PTR [rsp+0x128]
  42c026:	shr    eax,0x1f
  42c029:	test   al,al
  42c02b:	je     0x42c723
  42c031:	test   ebx,ebx
  42c033:	jne    0x42c3bd
  42c039:	mulsd  xmm2,QWORD PTR [rip+0x115d7]        # 0x43d618
  42c041:	mov    QWORD PTR [rsp+0x38],r9
  42c046:	movsd  xmm5,QWORD PTR [rsp+0x38]
  42c04c:	ucomisd xmm2,xmm5
  42c050:	jae    0x42c3bd
  42c056:	mov    ebp,DWORD PTR [rsp+0x30]
  42c05a:	xor    r12d,r12d
  42c05d:	xor    edi,edi
  42c05f:	add    ebp,0x2
  42c062:	mov    rax,QWORD PTR [rsp+0x48]
  42c067:	mov    r15d,0x20
  42c06d:	lea    rbx,[rax+0x1]
  42c071:	mov    BYTE PTR [rax],0x31
  42c074:	mov    rcx,r12
  42c077:	call   0x42d0f0
  42c07c:	test   rdi,rdi
  42c07f:	je     0x42bea0
  42c085:	mov    rcx,rdi
  42c088:	call   0x42d0f0
  42c08d:	jmp    0x42bea0
  42c092:	mov    r9d,DWORD PTR [rsp+0x60]
  42c097:	test   r9d,r9d
  42c09a:	je     0x42c5a0
  42c0a0:	mov    edx,DWORD PTR [rbp+0x4]
  42c0a3:	sub    edi,r14d
  42c0a6:	mov    ecx,r11d
  42c0a9:	lea    eax,[rdi+0x1]
  42c0ac:	sub    ecx,edi
  42c0ae:	cmp    ecx,edx
  42c0b0:	mov    DWORD PTR [rsp+0x9c],eax
  42c0b7:	jge    0x42c0ec
  42c0b9:	mov    ebx,DWORD PTR [rsp+0x120]
  42c0c0:	lea    ecx,[rbx-0x3]
  42c0c3:	and    ecx,0xfffffffd
  42c0c6:	je     0x42c0ec
  42c0c8:	mov    ebx,DWORD PTR [rsp+0x68]
  42c0cc:	sub    r11d,edx
  42c0cf:	lea    eax,[r11+0x1]
  42c0d3:	test   ebx,ebx
  42c0d5:	mov    DWORD PTR [rsp+0x9c],eax
  42c0dc:	setg   cl
  42c0df:	cmp    ebx,eax
  42c0e1:	setl   dl
  42c0e4:	test   cl,dl
  42c0e6:	je     0x42c82f
  42c0ec:	cmp    DWORD PTR [rsp+0x120],0x1
  42c0f4:	jle    0x42c82f
  42c0fa:	mov    ebx,DWORD PTR [rsp+0x58]
  42c0fe:	mov    eax,DWORD PTR [rsp+0x68]
  42c102:	mov    r12d,ebx
  42c105:	sub    eax,0x1
  42c108:	sub    r12d,eax
  42c10b:	cmp    ebx,eax
  42c10d:	jge    0x42c123
  42c10f:	mov    edx,eax
  42c111:	sub    edx,DWORD PTR [rsp+0x58]
  42c115:	xor    r12d,r12d
  42c118:	add    DWORD PTR [rsp+0x88],edx
  42c11f:	mov    DWORD PTR [rsp+0x58],eax
  42c123:	mov    eax,DWORD PTR [rsp+0x68]
  42c127:	test   eax,eax
  42c129:	js     0x42cac2
  42c12f:	mov    ebx,DWORD PTR [rsp+0x50]
  42c133:	mov    DWORD PTR [rsp+0x9c],eax
  42c13a:	mov    ecx,0x1
  42c13f:	add    DWORD PTR [rsp+0x50],eax
  42c143:	add    DWORD PTR [rsp+0x40],eax
  42c147:	call   0x42d220
  42c14c:	mov    rdi,rax
  42c14f:	mov    ecx,DWORD PTR [rsp+0x40]
  42c153:	test   ecx,ecx
  42c155:	mov    eax,ecx
  42c157:	jle    0x42c175
  42c159:	test   ebx,ebx
  42c15b:	jle    0x42c175
  42c15d:	cmp    ecx,ebx
  42c15f:	cmovg  eax,ebx
  42c162:	sub    DWORD PTR [rsp+0x50],eax
  42c166:	sub    ecx,eax
  42c168:	mov    DWORD PTR [rsp+0x9c],eax
  42c16f:	sub    ebx,eax
  42c171:	mov    DWORD PTR [rsp+0x40],ecx
  42c175:	mov    r8d,DWORD PTR [rsp+0x58]
  42c17a:	test   r8d,r8d
  42c17d:	jle    0x42c1cb
  42c17f:	mov    ecx,DWORD PTR [rsp+0x60]
  42c183:	test   ecx,ecx
  42c185:	je     0x42c5c0
  42c18b:	test   r12d,r12d
  42c18e:	jle    0x42c1be
  42c190:	mov    rcx,rdi
  42c193:	mov    edx,r12d
  42c196:	call   0x42d380
  42c19b:	mov    rdx,rsi
  42c19e:	mov    rcx,rax
  42c1a1:	mov    rdi,rax
  42c1a4:	call   0x42d250
  42c1a9:	mov    rcx,rsi
  42c1ac:	mov    QWORD PTR [rsp+0x70],rax
  42c1b1:	call   0x42d0f0
  42c1b6:	mov    rax,QWORD PTR [rsp+0x70]
  42c1bb:	mov    rsi,rax
  42c1be:	mov    edx,DWORD PTR [rsp+0x58]
  42c1c2:	sub    edx,r12d
  42c1c5:	jne    0x42c5c4
  42c1cb:	mov    ecx,0x1
  42c1d0:	call   0x42d220
  42c1d5:	mov    r12,rax
  42c1d8:	mov    eax,DWORD PTR [rsp+0x88]
  42c1df:	test   eax,eax
  42c1e1:	jle    0x42c310
  42c1e7:	mov    rcx,r12
  42c1ea:	mov    edx,eax
  42c1ec:	call   0x42d380
  42c1f1:	cmp    DWORD PTR [rsp+0x120],0x1
  42c1f9:	mov    r12,rax
  42c1fc:	jg     0x42c208
  42c1fe:	cmp    r14d,0x1
  42c202:	je     0x42c2cc
  42c208:	xor    ebp,ebp
  42c20a:	mov    eax,DWORD PTR [r12+0x14]
  42c20f:	sub    eax,0x1
  42c212:	cdqe   
  42c214:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  42c21a:	xor    eax,0x1f
  42c21d:	sub    eax,DWORD PTR [rsp+0x40]
  42c221:	mov    edx,DWORD PTR [rsp+0x50]
  42c225:	sub    eax,0x4
  42c228:	and    eax,0x1f
  42c22b:	add    edx,eax
  42c22d:	mov    r13d,eax
  42c230:	mov    DWORD PTR [rsp+0x9c],eax
  42c237:	test   edx,edx
  42c239:	mov    ecx,eax
  42c23b:	jle    0x42c24f
  42c23d:	mov    rcx,rsi
  42c240:	call   0x42d4f0
  42c245:	mov    ecx,DWORD PTR [rsp+0x9c]
  42c24c:	mov    rsi,rax
  42c24f:	mov    edx,DWORD PTR [rsp+0x40]
  42c253:	add    edx,ecx
  42c255:	test   edx,edx
  42c257:	jle    0x42c264
  42c259:	mov    rcx,r12
  42c25c:	call   0x42d4f0
  42c261:	mov    r12,rax
  42c264:	mov    eax,DWORD PTR [rsp+0x6c]
  42c268:	test   eax,eax
  42c26a:	jne    0x42c5e1
  42c270:	mov    r14d,DWORD PTR [rsp+0x68]
  42c275:	test   r14d,r14d
  42c278:	jg     0x42c431
  42c27e:	cmp    DWORD PTR [rsp+0x120],0x2
  42c286:	jle    0x42c431
  42c28c:	mov    r11d,DWORD PTR [rsp+0x68]
  42c291:	test   r11d,r11d
  42c294:	jne    0x42c3c2
  42c29a:	xor    r8d,r8d
  42c29d:	mov    rcx,r12
  42c2a0:	mov    edx,0x5
  42c2a5:	call   0x42d160
  42c2aa:	mov    rcx,rsi
  42c2ad:	mov    rdx,rax
  42c2b0:	mov    r12,rax
  42c2b3:	call   0x42d610
  42c2b8:	test   eax,eax
  42c2ba:	jle    0x42c3c2
  42c2c0:	mov    ebp,DWORD PTR [rsp+0x30]
  42c2c4:	add    ebp,0x2
  42c2c7:	jmp    0x42c062
  42c2cc:	mov    eax,DWORD PTR [rbp+0x4]
  42c2cf:	add    eax,0x1
  42c2d2:	cmp    r13d,eax
  42c2d5:	jle    0x42c208
  42c2db:	add    DWORD PTR [rsp+0x50],0x1
  42c2e0:	add    DWORD PTR [rsp+0x40],0x1
  42c2e5:	mov    ebp,0x1
  42c2ea:	nop    WORD PTR [rax+rax*1+0x0]
  42c2f0:	mov    edx,DWORD PTR [rsp+0x88]
  42c2f7:	mov    eax,0x1f
  42c2fc:	test   edx,edx
  42c2fe:	je     0x42c21d
  42c304:	jmp    0x42c20a
  42c309:	nop    DWORD PTR [rax+0x0]
  42c310:	cmp    DWORD PTR [rsp+0x120],0x1
  42c318:	jg     0x42c320
  42c31a:	cmp    r14d,0x1
  42c31e:	je     0x42c324
  42c320:	xor    ebp,ebp
  42c322:	jmp    0x42c2f0
  42c324:	mov    eax,DWORD PTR [rbp+0x4]
  42c327:	xor    ebp,ebp
  42c329:	add    eax,0x1
  42c32c:	cmp    r13d,eax
  42c32f:	jle    0x42c2f0
  42c331:	jmp    0x42c2db
  42c333:	cmp    DWORD PTR [rsp+0x120],0x2
  42c33b:	mov    DWORD PTR [rsp+0x60],0x0
  42c343:	je     0x42bf40
  42c349:	pxor   xmm0,xmm0
  42c34d:	mov    QWORD PTR [rsp+0x60],r9
  42c352:	mov    DWORD PTR [rsp+0x68],r11d
  42c357:	cvtsi2sd xmm0,edi
  42c35b:	mulsd  xmm0,QWORD PTR [rip+0x1128d]        # 0x43d5f0
  42c363:	cvttsd2si ecx,xmm0
  42c367:	add    ecx,0x3
  42c36a:	mov    DWORD PTR [rsp+0x9c],ecx
  42c371:	call   0x42b6f0
  42c376:	mov    QWORD PTR [rsp+0x48],rax
  42c37b:	mov    eax,DWORD PTR [rbp+0xc]
  42c37e:	mov    r11d,DWORD PTR [rsp+0x68]
  42c383:	mov    r9,QWORD PTR [rsp+0x60]
  42c388:	sub    eax,0x1
  42c38b:	mov    DWORD PTR [rsp+0x38],eax
  42c38f:	jne    0x42c83d
  42c395:	mov    eax,0xffffffff
  42c39a:	mov    DWORD PTR [rsp+0x60],0x1
  42c3a2:	mov    DWORD PTR [rsp+0x128],0x0
  42c3ad:	mov    DWORD PTR [rsp+0x8c],eax
  42c3b4:	mov    DWORD PTR [rsp+0x68],eax
  42c3b8:	jmp    0x42bff0
  42c3bd:	xor    r12d,r12d
  42c3c0:	xor    edi,edi
  42c3c2:	mov    ebp,DWORD PTR [rsp+0x128]
  42c3c9:	mov    rbx,QWORD PTR [rsp+0x48]
  42c3ce:	mov    r15d,0x10
  42c3d4:	neg    ebp
  42c3d6:	jmp    0x42c074
  42c3db:	nop    DWORD PTR [rax+rax*1+0x0]
  42c3e0:	mov    eax,DWORD PTR [rsp+0x30]
  42c3e4:	sub    DWORD PTR [rsp+0x50],eax
  42c3e8:	mov    DWORD PTR [rsp+0x88],0x0
  42c3f3:	neg    eax
  42c3f5:	mov    DWORD PTR [rsp+0x58],eax
  42c3f9:	jmp    0x42bc19
  42c3fe:	xchg   ax,ax
  42c400:	neg    eax
  42c402:	mov    DWORD PTR [rsp+0x40],0x0
  42c40a:	mov    DWORD PTR [rsp+0x50],eax
  42c40e:	jmp    0x42bbfa
  42c413:	pxor   xmm0,xmm0
  42c417:	cvtsi2sd xmm0,eax
  42c41b:	ucomisd xmm0,xmm1
  42c41f:	jp     0x42c427
  42c421:	je     0x42bb8b
  42c427:	sub    DWORD PTR [rsp+0x30],0x1
  42c42c:	jmp    0x42bb8b
  42c431:	mov    r10d,DWORD PTR [rsp+0x60]
  42c436:	test   r10d,r10d
  42c439:	je     0x42c640
  42c43f:	lea    edx,[rbx+r13*1]
  42c443:	test   edx,edx
  42c445:	jle    0x42c452
  42c447:	mov    rcx,rdi
  42c44a:	call   0x42d4f0
  42c44f:	mov    rdi,rax
  42c452:	test   ebp,ebp
  42c454:	mov    r13,rdi
  42c457:	jne    0x42caf5
  42c45d:	mov    DWORD PTR [rsp+0x9c],0x1
  42c468:	mov    rbx,QWORD PTR [rsp+0x48]
  42c46d:	mov    QWORD PTR [rsp+0x40],r12
  42c472:	mov    QWORD PTR [rsp+0x50],r15
  42c477:	jmp    0x42c53e
  42c47c:	nop    DWORD PTR [rax+0x0]
  42c480:	mov    rcx,r8
  42c483:	call   0x42d0f0
  42c488:	mov    eax,r12d
  42c48b:	or     eax,DWORD PTR [rsp+0x120]
  42c492:	jne    0x42c4aa
  42c494:	mov    ecx,DWORD PTR [rsp+0x38]
  42c498:	test   ecx,ecx
  42c49a:	jne    0x42c4aa
  42c49c:	mov    rax,QWORD PTR [rsp+0x50]
  42c4a1:	test   BYTE PTR [rax],0x1
  42c4a4:	je     0x42cc65
  42c4aa:	test   r14d,r14d
  42c4ad:	js     0x42c9c0
  42c4b3:	or     r14d,DWORD PTR [rsp+0x120]
  42c4bb:	jne    0x42c4cb
  42c4bd:	mov    rax,QWORD PTR [rsp+0x50]
  42c4c2:	test   BYTE PTR [rax],0x1
  42c4c5:	je     0x42c9c0
  42c4cb:	test   r12d,r12d
  42c4ce:	jle    0x42c4db
  42c4d0:	cmp    DWORD PTR [rsp+0x38],0x2
  42c4d5:	jne    0x42cbcf
  42c4db:	add    rbx,0x1
  42c4df:	mov    BYTE PTR [rbx-0x1],bpl
  42c4e3:	mov    eax,DWORD PTR [rsp+0x68]
  42c4e7:	cmp    DWORD PTR [rsp+0x9c],eax
  42c4ee:	je     0x42cb5b
  42c4f4:	xor    r8d,r8d
  42c4f7:	mov    rcx,rsi
  42c4fa:	mov    edx,0xa
  42c4ff:	call   0x42d160
  42c504:	xor    r8d,r8d
  42c507:	cmp    rdi,r13
  42c50a:	mov    rsi,rax
  42c50d:	mov    edx,0xa
  42c512:	mov    rcx,rdi
  42c515:	je     0x42c5b0
  42c51b:	call   0x42d160
  42c520:	mov    rcx,r13
  42c523:	xor    r8d,r8d
  42c526:	mov    edx,0xa
  42c52b:	mov    rdi,rax
  42c52e:	call   0x42d160
  42c533:	mov    r13,rax
  42c536:	add    DWORD PTR [rsp+0x9c],0x1
  42c53e:	mov    r12,QWORD PTR [rsp+0x40]
  42c543:	mov    rcx,rsi
  42c546:	mov    rdx,r12
  42c549:	call   0x42b790
  42c54e:	mov    rdx,rdi
  42c551:	mov    rcx,rsi
  42c554:	mov    r15d,eax
  42c557:	lea    ebp,[rax+0x30]
  42c55a:	call   0x42d610
  42c55f:	mov    rcx,r12
  42c562:	mov    rdx,r13
  42c565:	mov    r14d,eax
  42c568:	call   0x42d660
  42c56d:	mov    r9d,DWORD PTR [rax+0x10]
  42c571:	mov    r8,rax
  42c574:	mov    r12d,0x1
  42c57a:	test   r9d,r9d
  42c57d:	jne    0x42c480
  42c583:	mov    rdx,rax
  42c586:	mov    rcx,rsi
  42c589:	mov    QWORD PTR [rsp+0x58],rax
  42c58e:	call   0x42d610
  42c593:	mov    r8,QWORD PTR [rsp+0x58]
  42c598:	mov    r12d,eax
  42c59b:	jmp    0x42c480
  42c5a0:	mov    r12d,DWORD PTR [rsp+0x58]
  42c5a5:	mov    ebx,DWORD PTR [rsp+0x50]
  42c5a9:	xor    edi,edi
  42c5ab:	jmp    0x42c14f
  42c5b0:	call   0x42d160
  42c5b5:	mov    rdi,rax
  42c5b8:	mov    r13,rax
  42c5bb:	jmp    0x42c536
  42c5c0:	mov    edx,DWORD PTR [rsp+0x58]
  42c5c4:	mov    rcx,rsi
  42c5c7:	call   0x42d380
  42c5cc:	mov    rsi,rax
  42c5cf:	jmp    0x42c1cb
  42c5d4:	mov    DWORD PTR [rsp+0x60],0x0
  42c5dc:	jmp    0x42bc77
  42c5e1:	mov    rdx,r12
  42c5e4:	mov    rcx,rsi
  42c5e7:	call   0x42d610
  42c5ec:	test   eax,eax
  42c5ee:	jns    0x42c270
  42c5f4:	xor    r8d,r8d
  42c5f7:	mov    rcx,rsi
  42c5fa:	mov    edx,0xa
  42c5ff:	sub    DWORD PTR [rsp+0x30],0x1
  42c604:	call   0x42d160
  42c609:	mov    rsi,rax
  42c60c:	mov    eax,DWORD PTR [rsp+0x60]
  42c610:	test   eax,eax
  42c612:	jne    0x42ccd8
  42c618:	mov    eax,DWORD PTR [rsp+0x8c]
  42c61f:	test   eax,eax
  42c621:	jg     0x42c635
  42c623:	cmp    DWORD PTR [rsp+0x120],0x2
  42c62b:	mov    DWORD PTR [rsp+0x68],eax
  42c62f:	jg     0x42c28c
  42c635:	mov    eax,DWORD PTR [rsp+0x8c]
  42c63c:	mov    DWORD PTR [rsp+0x68],eax
  42c640:	mov    DWORD PTR [rsp+0x9c],0x1
  42c64b:	mov    rbx,QWORD PTR [rsp+0x48]
  42c650:	mov    r13d,DWORD PTR [rsp+0x68]
  42c655:	jmp    0x42c67b
  42c657:	nop    WORD PTR [rax+rax*1+0x0]
  42c660:	mov    rcx,rsi
  42c663:	xor    r8d,r8d
  42c666:	mov    edx,0xa
  42c66b:	call   0x42d160
  42c670:	add    DWORD PTR [rsp+0x9c],0x1
  42c678:	mov    rsi,rax
  42c67b:	mov    rdx,r12
  42c67e:	mov    rcx,rsi
  42c681:	add    rbx,0x1
  42c685:	call   0x42b790
  42c68a:	lea    ebp,[rax+0x30]
  42c68d:	mov    BYTE PTR [rbx-0x1],bpl
  42c691:	cmp    DWORD PTR [rsp+0x9c],r13d
  42c699:	jl     0x42c660
  42c69b:	xor    r14d,r14d
  42c69e:	mov    eax,DWORD PTR [rsp+0x38]
  42c6a2:	test   eax,eax
  42c6a4:	je     0x42ca6c
  42c6aa:	cmp    eax,0x2
  42c6ad:	je     0x42ca9c
  42c6b3:	cmp    DWORD PTR [rsi+0x14],0x1
  42c6b7:	jle    0x42cc33
  42c6bd:	movzx  edx,BYTE PTR [rbx-0x1]
  42c6c1:	mov    rcx,QWORD PTR [rsp+0x48]
  42c6c6:	jmp    0x42c6e0
  42c6c8:	nop    DWORD PTR [rax+rax*1+0x0]
  42c6d0:	cmp    rax,rcx
  42c6d3:	je     0x42c88c
  42c6d9:	movzx  edx,BYTE PTR [rax-0x1]
  42c6dd:	mov    rbx,rax
  42c6e0:	cmp    dl,0x39
  42c6e3:	lea    rax,[rbx-0x1]
  42c6e7:	je     0x42c6d0
  42c6e9:	add    edx,0x1
  42c6ec:	mov    r15d,0x20
  42c6f2:	mov    BYTE PTR [rax],dl
  42c6f4:	mov    rcx,r12
  42c6f7:	call   0x42d0f0
  42c6fc:	test   rdi,rdi
  42c6ff:	je     0x42c7ef
  42c705:	cmp    r14,rdi
  42c708:	je     0x42c717
  42c70a:	test   r14,r14
  42c70d:	je     0x42c717
  42c70f:	mov    rcx,r14
  42c712:	call   0x42d0f0
  42c717:	mov    ebp,DWORD PTR [rsp+0x30]
  42c71b:	add    ebp,0x1
  42c71e:	jmp    0x42c085
  42c723:	mov    QWORD PTR [rsp+0x40],r9
  42c728:	mov    rdi,QWORD PTR [rsp+0x48]
  42c72d:	movsd  xmm0,QWORD PTR [rsp+0x40]
  42c733:	mov    DWORD PTR [rsp+0x9c],0x1
  42c73e:	movapd xmm1,xmm0
  42c742:	mov    rbx,rdi
  42c745:	add    rbx,0x1
  42c749:	divsd  xmm1,xmm2
  42c74d:	cvttsd2si eax,xmm1
  42c751:	pxor   xmm1,xmm1
  42c755:	cvtsi2sd xmm1,eax
  42c759:	lea    edx,[rax+0x30]
  42c75c:	mov    BYTE PTR [rdi],dl
  42c75e:	mulsd  xmm1,xmm2
  42c762:	subsd  xmm0,xmm1
  42c766:	ucomisd xmm0,xmm6
  42c76a:	jp     0x42c76e
  42c76c:	je     0x42c7e0
  42c76e:	mov    edx,DWORD PTR [rsp+0x9c]
  42c775:	cmp    DWORD PTR [rsp+0x68],edx
  42c779:	je     0x42c867
  42c77f:	movsd  xmm3,QWORD PTR [rip+0x10e79]        # 0x43d600
  42c787:	movapd xmm4,xmm6
  42c78b:	mov    ecx,DWORD PTR [rsp+0x68]
  42c78f:	jmp    0x42c7a0
  42c791:	mov    edx,DWORD PTR [rsp+0x9c]
  42c798:	cmp    ecx,edx
  42c79a:	je     0x42c867
  42c7a0:	mulsd  xmm0,xmm3
  42c7a4:	add    edx,0x1
  42c7a7:	add    rbx,0x1
  42c7ab:	mov    DWORD PTR [rsp+0x9c],edx
  42c7b2:	movapd xmm1,xmm0
  42c7b6:	divsd  xmm1,xmm2
  42c7ba:	cvttsd2si eax,xmm1
  42c7be:	pxor   xmm1,xmm1
  42c7c2:	cvtsi2sd xmm1,eax
  42c7c6:	lea    edx,[rax+0x30]
  42c7c9:	mov    BYTE PTR [rbx-0x1],dl
  42c7cc:	mulsd  xmm1,xmm2
  42c7d0:	subsd  xmm0,xmm1
  42c7d4:	ucomisd xmm0,xmm6
  42c7d8:	jp     0x42c791
  42c7da:	ucomisd xmm0,xmm4
  42c7de:	jne    0x42c791
  42c7e0:	mov    ebp,DWORD PTR [rsp+0x30]
  42c7e4:	add    ebp,0x1
  42c7e7:	xor    r15d,r15d
  42c7ea:	jmp    0x42bea0
  42c7ef:	mov    ebp,DWORD PTR [rsp+0x30]
  42c7f3:	add    ebp,0x1
  42c7f6:	jmp    0x42bea0
  42c7fb:	mov    ebx,0x1
  42c800:	mov    DWORD PTR [rsp+0x128],0x1
  42c80b:	jmp    0x42bf5a
  42c810:	cmp    DWORD PTR [rsp+0x68],0xe
  42c815:	mov    DWORD PTR [rsp+0x9c],0x1
  42c820:	mov    ecx,0x1
  42c825:	setbe  bl
  42c828:	and    ebx,eax
  42c82a:	jmp    0x42bca9
  42c82f:	mov    r12d,DWORD PTR [rsp+0x58]
  42c834:	mov    ebx,DWORD PTR [rsp+0x50]
  42c838:	jmp    0x42c13a
  42c83d:	mov    eax,0xffffffff
  42c842:	xor    ebx,ebx
  42c844:	mov    DWORD PTR [rsp+0x60],0x1
  42c84c:	mov    DWORD PTR [rsp+0x8c],eax
  42c853:	mov    DWORD PTR [rsp+0x68],eax
  42c857:	mov    DWORD PTR [rsp+0x128],0x0
  42c862:	jmp    0x42bcd3
  42c867:	mov    r10d,DWORD PTR [rsp+0x38]
  42c86c:	test   r10d,r10d
  42c86f:	je     0x42cb2e
  42c875:	cmp    DWORD PTR [rsp+0x38],0x1
  42c87a:	je     0x42cc21
  42c880:	mov    ebp,DWORD PTR [rsp+0x30]
  42c884:	add    ebp,0x1
  42c887:	jmp    0x42be93
  42c88c:	mov    rax,QWORD PTR [rsp+0x48]
  42c891:	add    DWORD PTR [rsp+0x30],0x1
  42c896:	mov    r15d,0x20
  42c89c:	mov    BYTE PTR [rax],0x31
  42c89f:	jmp    0x42c6f4
  42c8a4:	mov    ebp,0x2
  42c8a9:	xor    r12d,r12d
  42c8ac:	xor    edi,edi
  42c8ae:	jmp    0x42c062
  42c8b3:	mov    r10,QWORD PTR [rip+0x11076]        # 0x43d930
  42c8ba:	mov    QWORD PTR [rsp+0x38],rax
  42c8bf:	movsd  xmm3,QWORD PTR [rsp+0x38]
  42c8c5:	mov    DWORD PTR [rsp+0x9c],0x1
  42c8d0:	mov    rbx,QWORD PTR [rsp+0x48]
  42c8d5:	movsd  xmm1,QWORD PTR [rip+0x10d23]        # 0x43d600
  42c8dd:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  42c8e3:	jmp    0x42c8f3
  42c8e5:	mulsd  xmm0,xmm1
  42c8e9:	add    edx,0x1
  42c8ec:	mov    DWORD PTR [rsp+0x9c],edx
  42c8f3:	cvttsd2si eax,xmm0
  42c8f7:	test   eax,eax
  42c8f9:	je     0x42c907
  42c8fb:	pxor   xmm2,xmm2
  42c8ff:	cvtsi2sd xmm2,eax
  42c903:	subsd  xmm0,xmm2
  42c907:	add    rbx,0x1
  42c90b:	add    eax,0x30
  42c90e:	mov    BYTE PTR [rbx-0x1],al
  42c911:	mov    edx,DWORD PTR [rsp+0x9c]
  42c918:	cmp    edx,r9d
  42c91b:	jne    0x42c8e5
  42c91d:	movsd  xmm1,QWORD PTR [rip+0x10d0b]        # 0x43d630
  42c925:	movapd xmm2,xmm3
  42c929:	addsd  xmm2,xmm1
  42c92d:	ucomisd xmm0,xmm2
  42c931:	ja     0x42c987
  42c933:	subsd  xmm1,xmm3
  42c937:	ucomisd xmm1,xmm0
  42c93b:	jbe    0x42bfde
  42c941:	ucomisd xmm0,xmm6
  42c945:	jp     0x42cccd
  42c94b:	jne    0x42cccd
  42c951:	xor    r15d,r15d
  42c954:	jmp    0x42c967
  42c956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c960:	movzx  eax,BYTE PTR [rbx-0x2]
  42c964:	mov    rbx,rdx
  42c967:	cmp    al,0x30
  42c969:	lea    rdx,[rbx-0x1]
  42c96d:	je     0x42c960
  42c96f:	lea    ebp,[rcx+0x1]
  42c972:	jmp    0x42bea0
  42c977:	test   al,0x1
  42c979:	mov    ecx,DWORD PTR [rsp+0x30]
  42c97d:	movzx  eax,BYTE PTR [rbx-0x1]
  42c981:	je     0x42cccd
  42c987:	mov    r8,QWORD PTR [rsp+0x48]
  42c98c:	jmp    0x42c9a0
  42c98e:	xchg   ax,ax
  42c990:	cmp    rdx,r8
  42c993:	je     0x42cadc
  42c999:	movzx  eax,BYTE PTR [rdx-0x1]
  42c99d:	mov    rbx,rdx
  42c9a0:	cmp    al,0x39
  42c9a2:	lea    rdx,[rbx-0x1]
  42c9a6:	je     0x42c990
  42c9a8:	mov    QWORD PTR [rsp+0x48],r8
  42c9ad:	add    eax,0x1
  42c9b0:	mov    BYTE PTR [rdx],al
  42c9b2:	lea    ebp,[rcx+0x1]
  42c9b5:	mov    r15d,0x20
  42c9bb:	jmp    0x42bea0
  42c9c0:	mov    edx,DWORD PTR [rsp+0x38]
  42c9c4:	mov    eax,r12d
  42c9c7:	mov    r14d,ebp
  42c9ca:	mov    r12,QWORD PTR [rsp+0x40]
  42c9cf:	test   edx,edx
  42c9d1:	je     0x42cc01
  42c9d7:	cmp    DWORD PTR [rsi+0x14],0x1
  42c9db:	jle    0x42cbf7
  42c9e1:	cmp    DWORD PTR [rsp+0x38],0x2
  42c9e6:	jne    0x42ca37
  42c9e8:	jmp    0x42cc16
  42c9ed:	nop    DWORD PTR [rax]
  42c9f0:	add    rbx,0x1
  42c9f4:	xor    r8d,r8d
  42c9f7:	mov    rcx,r13
  42c9fa:	mov    BYTE PTR [rbx-0x1],r14b
  42c9fe:	mov    edx,0xa
  42ca03:	call   0x42d160
  42ca08:	cmp    rdi,r13
  42ca0b:	mov    rcx,rsi
  42ca0e:	mov    edx,0xa
  42ca13:	cmove  rdi,rax
  42ca17:	xor    r8d,r8d
  42ca1a:	mov    rbp,rax
  42ca1d:	call   0x42d160
  42ca22:	mov    rdx,r12
  42ca25:	mov    rcx,rax
  42ca28:	mov    rsi,rax
  42ca2b:	call   0x42b790
  42ca30:	lea    r14d,[rax+0x30]
  42ca34:	mov    r13,rbp
  42ca37:	mov    rdx,r13
  42ca3a:	mov    rcx,r12
  42ca3d:	call   0x42d610
  42ca42:	test   eax,eax
  42ca44:	jg     0x42c9f0
  42ca46:	cmp    r14d,0x39
  42ca4a:	je     0x42cc46
  42ca50:	add    r14d,0x1
  42ca54:	mov    r15d,0x20
  42ca5a:	mov    BYTE PTR [rbx],r14b
  42ca5d:	mov    r14,rdi
  42ca60:	add    rbx,0x1
  42ca64:	mov    rdi,r13
  42ca67:	jmp    0x42c6f4
  42ca6c:	mov    rcx,rsi
  42ca6f:	mov    edx,0x1
  42ca74:	call   0x42d4f0
  42ca79:	mov    rdx,r12
  42ca7c:	mov    rcx,rax
  42ca7f:	mov    rsi,rax
  42ca82:	call   0x42d610
  42ca87:	cmp    eax,0x0
  42ca8a:	jg     0x42c6bd
  42ca90:	jne    0x42ca9c
  42ca92:	and    bpl,0x1
  42ca96:	jne    0x42c6bd
  42ca9c:	cmp    DWORD PTR [rsi+0x14],0x1
  42caa0:	mov    r15d,0x10
  42caa6:	jg     0x42cab3
  42caa8:	jmp    0x42cd3d
  42caad:	nop    DWORD PTR [rax]
  42cab0:	mov    rbx,rax
  42cab3:	cmp    BYTE PTR [rbx-0x1],0x30
  42cab7:	lea    rax,[rbx-0x1]
  42cabb:	je     0x42cab0
  42cabd:	jmp    0x42c6f4
  42cac2:	mov    ebx,DWORD PTR [rsp+0x50]
  42cac6:	mov    DWORD PTR [rsp+0x9c],0x0
  42cad1:	xor    eax,eax
  42cad3:	sub    ebx,DWORD PTR [rsp+0x68]
  42cad7:	jmp    0x42c13a
  42cadc:	mov    QWORD PTR [rsp+0x48],r8
  42cae1:	add    ecx,0x1
  42cae4:	mov    BYTE PTR [r8],0x30
  42cae8:	mov    rdx,r8
  42caeb:	mov    eax,0x31
  42caf0:	jmp    0x42c9b0
  42caf5:	mov    ecx,DWORD PTR [rdi+0x8]
  42caf8:	call   0x42cfe0
  42cafd:	lea    rcx,[rax+0x10]
  42cb01:	mov    rbx,rax
  42cb04:	movsxd rax,DWORD PTR [rdi+0x14]
  42cb08:	lea    rdx,[rdi+0x10]
  42cb0c:	lea    r8,[rax*4+0x8]
  42cb14:	call   0x42de98
  42cb19:	mov    edx,0x1
  42cb1e:	mov    rcx,rbx
  42cb21:	call   0x42d4f0
  42cb26:	mov    r13,rax
  42cb29:	jmp    0x42c45d
  42cb2e:	addsd  xmm0,xmm0
  42cb32:	ucomisd xmm0,xmm2
  42cb36:	ja     0x42cc21
  42cb3c:	ucomisd xmm2,xmm0
  42cb40:	jp     0x42cb48
  42cb42:	je     0x42c977
  42cb48:	movzx  eax,BYTE PTR [rbx-0x1]
  42cb4c:	mov    ecx,DWORD PTR [rsp+0x30]
  42cb50:	mov    r15d,0x10
  42cb56:	jmp    0x42c967
  42cb5b:	mov    r14,rdi
  42cb5e:	mov    r12,QWORD PTR [rsp+0x40]
  42cb63:	mov    rdi,r13
  42cb66:	jmp    0x42c69e
  42cb6b:	mov    eax,DWORD PTR [rsp+0x68]
  42cb6f:	test   eax,eax
  42cb71:	je     0x42bf7a
  42cb77:	mov    r9d,DWORD PTR [rsp+0x8c]
  42cb7f:	test   r9d,r9d
  42cb82:	jle    0x42bfde
  42cb88:	movsd  xmm0,QWORD PTR [rip+0x10a70]        # 0x43d600
  42cb90:	mov    ecx,0xffffffff
  42cb95:	movsd  xmm1,QWORD PTR [rip+0x10a6b]        # 0x43d608
  42cb9d:	mulsd  xmm0,xmm4
  42cba1:	mulsd  xmm1,xmm0
  42cba5:	addsd  xmm1,QWORD PTR [rip+0x10a63]        # 0x43d610
  42cbad:	movq   rdx,xmm1
  42cbb2:	movq   rax,xmm1
  42cbb7:	shr    rdx,0x20
  42cbbb:	mov    eax,eax
  42cbbd:	sub    edx,0x3400000
  42cbc3:	shl    rdx,0x20
  42cbc7:	or     rax,rdx
  42cbca:	jmp    0x42bd82
  42cbcf:	cmp    ebp,0x39
  42cbd2:	mov    r12,QWORD PTR [rsp+0x40]
  42cbd7:	mov    rax,rbx
  42cbda:	je     0x42cc49
  42cbdc:	add    ebp,0x1
  42cbdf:	mov    r14,rdi
  42cbe2:	add    rbx,0x1
  42cbe6:	mov    BYTE PTR [rax],bpl
  42cbe9:	mov    rdi,r13
  42cbec:	mov    r15d,0x20
  42cbf2:	jmp    0x42c6f4
  42cbf7:	cmp    DWORD PTR [rsi+0x18],0x0
  42cbfb:	jne    0x42c9e1
  42cc01:	test   eax,eax
  42cc03:	jg     0x42cc99
  42cc09:	xor    r15d,r15d
  42cc0c:	cmp    DWORD PTR [rsi+0x14],0x1
  42cc10:	jle    0x42cd18
  42cc16:	mov    r15d,0x10
  42cc1c:	jmp    0x42ca5a
  42cc21:	movzx  eax,BYTE PTR [rbx-0x1]
  42cc25:	mov    ecx,DWORD PTR [rsp+0x30]
  42cc29:	mov    r8,QWORD PTR [rsp+0x48]
  42cc2e:	jmp    0x42c9a0
  42cc33:	mov    eax,DWORD PTR [rsi+0x18]
  42cc36:	test   eax,eax
  42cc38:	jne    0x42c6bd
  42cc3e:	xor    r15d,r15d
  42cc41:	jmp    0x42cab3
  42cc46:	mov    rax,rbx
  42cc49:	mov    r14,rdi
  42cc4c:	add    rbx,0x1
  42cc50:	mov    rdi,r13
  42cc53:	mov    BYTE PTR [rax],0x39
  42cc56:	mov    edx,0x39
  42cc5b:	mov    rcx,QWORD PTR [rsp+0x48]
  42cc60:	jmp    0x42c6e0
  42cc65:	cmp    ebp,0x39
  42cc68:	mov    r12,QWORD PTR [rsp+0x40]
  42cc6d:	mov    rax,rbx
  42cc70:	je     0x42cc46
  42cc72:	test   r14d,r14d
  42cc75:	jle    0x42cd50
  42cc7b:	mov    ebp,r15d
  42cc7e:	mov    r15d,0x20
  42cc84:	add    ebp,0x31
  42cc87:	mov    r14,rdi
  42cc8a:	add    rbx,0x1
  42cc8e:	mov    BYTE PTR [rax],bpl
  42cc91:	mov    rdi,r13
  42cc94:	jmp    0x42c6f4
  42cc99:	mov    rcx,rsi
  42cc9c:	mov    edx,0x1
  42cca1:	call   0x42d4f0
  42cca6:	mov    rdx,r12
  42cca9:	mov    rcx,rax
  42ccac:	mov    rsi,rax
  42ccaf:	call   0x42d610
  42ccb4:	cmp    eax,0x0
  42ccb7:	jle    0x42cd2a
  42ccb9:	cmp    ebp,0x39
  42ccbc:	je     0x42cc46
  42ccbe:	lea    r14d,[rbp+0x1]
  42ccc2:	mov    r15d,0x20
  42ccc8:	jmp    0x42cc0c
  42cccd:	mov    r15d,0x10
  42ccd3:	jmp    0x42c967
  42ccd8:	xor    r8d,r8d
  42ccdb:	mov    rcx,rdi
  42ccde:	mov    edx,0xa
  42cce3:	call   0x42d160
  42cce8:	mov    rdi,rax
  42cceb:	mov    eax,DWORD PTR [rsp+0x8c]
  42ccf2:	test   eax,eax
  42ccf4:	jg     0x42cd08
  42ccf6:	cmp    DWORD PTR [rsp+0x120],0x2
  42ccfe:	mov    DWORD PTR [rsp+0x68],eax
  42cd02:	jg     0x42c28c
  42cd08:	mov    eax,DWORD PTR [rsp+0x8c]
  42cd0f:	mov    DWORD PTR [rsp+0x68],eax
  42cd13:	jmp    0x42c43f
  42cd18:	cmp    DWORD PTR [rsi+0x18],0x0
  42cd1c:	mov    eax,0x10
  42cd21:	cmovne r15d,eax
  42cd25:	jmp    0x42ca5a
  42cd2a:	jne    0x42cd32
  42cd2c:	test   bpl,0x1
  42cd30:	jne    0x42ccb9
  42cd32:	mov    r15d,0x20
  42cd38:	jmp    0x42cc0c
  42cd3d:	cmp    DWORD PTR [rsi+0x18],0x1
  42cd41:	sbb    r15d,r15d
  42cd44:	not    r15d
  42cd47:	and    r15d,0x10
  42cd4b:	jmp    0x42cab3
  42cd50:	cmp    DWORD PTR [rsi+0x14],0x1
  42cd54:	mov    r15d,0x10
  42cd5a:	jg     0x42cc87
  42cd60:	cmp    DWORD PTR [rsi+0x18],0x1
  42cd64:	sbb    r15d,r15d
  42cd67:	not    r15d
  42cd6a:	and    r15d,0x10
  42cd6e:	jmp    0x42cc87
  42cd73:	xor    eax,eax
  42cd75:	jmp    0x42ba57
  42cd7a:	nop
  42cd7b:	nop
  42cd7c:	nop
  42cd7d:	nop
  42cd7e:	nop
  42cd7f:	nop
  42cd80:	push   rbp
  42cd81:	push   rdi
  42cd82:	push   rsi
  42cd83:	push   rbx
  42cd84:	mov    rsi,rcx
  42cd87:	lea    r10,[rcx+0x18]
  42cd8b:	movsxd rcx,DWORD PTR [rcx+0x14]
  42cd8f:	mov    eax,edx
  42cd91:	sar    eax,0x5
  42cd94:	cmp    eax,ecx
  42cd96:	jge    0x42ce20
  42cd9c:	cdqe   
  42cd9e:	and    edx,0x1f
  42cda1:	lea    rbx,[r10+rcx*4]
  42cda5:	lea    rdi,[r10+rax*4]
  42cda9:	je     0x42ce33
  42cdaf:	mov    r9d,DWORD PTR [rdi]
  42cdb2:	lea    r8,[rdi+0x4]
  42cdb6:	mov    ebp,0x20
  42cdbb:	mov    ecx,edx
  42cdbd:	sub    ebp,edx
  42cdbf:	shr    r9d,cl
  42cdc2:	cmp    rbx,r8
  42cdc5:	jbe    0x42ce78
  42cdcb:	mov    r11,r10
  42cdce:	xchg   ax,ax
  42cdd0:	mov    eax,DWORD PTR [r8]
  42cdd3:	mov    ecx,ebp
  42cdd5:	add    r11,0x4
  42cdd9:	add    r8,0x4
  42cddd:	shl    eax,cl
  42cddf:	mov    ecx,edx
  42cde1:	or     eax,r9d
  42cde4:	mov    DWORD PTR [r11-0x4],eax
  42cde8:	mov    r9d,DWORD PTR [r8-0x4]
  42cdec:	shr    r9d,cl
  42cdef:	cmp    rbx,r8
  42cdf2:	ja     0x42cdd0
  42cdf4:	sub    rbx,rdi
  42cdf7:	lea    rax,[rbx-0x5]
  42cdfb:	shr    rax,0x2
  42cdff:	lea    rax,[r10+rax*4+0x4]
  42ce04:	test   r9d,r9d
  42ce07:	mov    DWORD PTR [rax],r9d
  42ce0a:	je     0x42ce10
  42ce0c:	add    rax,0x4
  42ce10:	sub    rax,r10
  42ce13:	shr    rax,0x2
  42ce17:	jmp    0x42ce6c
  42ce19:	nop    DWORD PTR [rax+0x0]
  42ce20:	mov    DWORD PTR [rsi+0x14],0x0
  42ce27:	mov    DWORD PTR [rsi+0x18],0x0
  42ce2e:	pop    rbx
  42ce2f:	pop    rsi
  42ce30:	pop    rdi
  42ce31:	pop    rbp
  42ce32:	ret    
  42ce33:	cmp    rbx,rdi
  42ce36:	mov    rdx,r10
  42ce39:	mov    rax,rdi
  42ce3c:	jbe    0x42ce20
  42ce3e:	xchg   ax,ax
  42ce40:	add    rax,0x4
  42ce44:	mov    r8d,DWORD PTR [rax-0x4]
  42ce48:	add    rdx,0x4
  42ce4c:	cmp    rbx,rax
  42ce4f:	mov    DWORD PTR [rdx-0x4],r8d
  42ce53:	ja     0x42ce40
  42ce55:	not    rdi
  42ce58:	lea    rax,[rdi+rbx*1]
  42ce5c:	shr    rax,0x2
  42ce60:	lea    rax,[rax*4+0x4]
  42ce68:	shr    rax,0x2
  42ce6c:	test   eax,eax
  42ce6e:	mov    DWORD PTR [rsi+0x14],eax
  42ce71:	je     0x42ce27
  42ce73:	pop    rbx
  42ce74:	pop    rsi
  42ce75:	pop    rdi
  42ce76:	pop    rbp
  42ce77:	ret    
  42ce78:	mov    rax,r10
  42ce7b:	jmp    0x42ce04
  42ce7d:	nop    DWORD PTR [rax]
  42ce80:	movsxd rax,DWORD PTR [rcx+0x14]
  42ce84:	lea    rdx,[rcx+0x18]
  42ce88:	lea    r8,[rdx+rax*4]
  42ce8c:	cmp    rdx,r8
  42ce8f:	jae    0x42cebb
  42ce91:	mov    ecx,DWORD PTR [rcx+0x18]
  42ce94:	xor    eax,eax
  42ce96:	test   ecx,ecx
  42ce98:	je     0x42cea6
  42ce9a:	jmp    0x42ceb4
  42ce9c:	nop    DWORD PTR [rax+0x0]
  42cea0:	mov    ecx,DWORD PTR [rdx]
  42cea2:	test   ecx,ecx
  42cea4:	jne    0x42ceb4
  42cea6:	add    rdx,0x4
  42ceaa:	add    eax,0x20
  42cead:	cmp    r8,rdx
  42ceb0:	ja     0x42cea0
  42ceb2:	repz ret 
  42ceb4:	tzcnt  ecx,ecx
  42ceb8:	add    eax,ecx
  42ceba:	ret    
  42cebb:	xor    eax,eax
  42cebd:	ret    
  42cebe:	nop
  42cebf:	nop
  42cec0:	push   rsi
  42cec1:	push   rbx
  42cec2:	sub    rsp,0x28
  42cec6:	mov    eax,DWORD PTR [rip+0x18fc4]        # 0x445e90
  42cecc:	movsxd rsi,ecx
  42cecf:	cmp    eax,0x2
  42ced2:	je     0x42cf3d
  42ced4:	test   eax,eax
  42ced6:	je     0x42cf02
  42ced8:	cmp    eax,0x1
  42cedb:	jne    0x42cefb
  42cedd:	mov    rbx,QWORD PTR [rip+0x1b894]        # 0x448778
  42cee4:	mov    ecx,0x1
  42cee9:	call   rbx
  42ceeb:	mov    eax,DWORD PTR [rip+0x18f9f]        # 0x445e90
  42cef1:	cmp    eax,0x1
  42cef4:	je     0x42cee4
  42cef6:	cmp    eax,0x2
  42cef9:	je     0x42cf3d
  42cefb:	add    rsp,0x28
  42ceff:	pop    rbx
  42cf00:	pop    rsi
  42cf01:	ret    
  42cf02:	mov    al,0x1
  42cf04:	xchg   DWORD PTR [rip+0x18f86],eax        # 0x445e90
  42cf0a:	test   eax,eax
  42cf0c:	jne    0x42cf60
  42cf0e:	lea    rcx,[rip+0x18fab]        # 0x445ec0
  42cf15:	mov    rbx,QWORD PTR [rip+0x1b80c]        # 0x448728
  42cf1c:	call   rbx
  42cf1e:	lea    rcx,[rip+0x18fc3]        # 0x445ee8
  42cf25:	call   rbx
  42cf27:	lea    rcx,[rip+0x62]        # 0x42cf90
  42cf2e:	call   0x426f70
  42cf33:	mov    DWORD PTR [rip+0x18f53],0x2        # 0x445e90
  42cf3d:	lea    rdx,[rsi+rsi*4]
  42cf41:	lea    rax,[rip+0x18f78]        # 0x445ec0
  42cf48:	lea    rcx,[rax+rdx*8]
  42cf4c:	mov    rax,QWORD PTR [rip+0x1b76d]        # 0x4486c0
  42cf53:	add    rsp,0x28
  42cf57:	pop    rbx
  42cf58:	pop    rsi
  42cf59:	rex.W jmp rax
  42cf5c:	nop    DWORD PTR [rax+0x0]
  42cf60:	cmp    eax,0x2
  42cf63:	je     0x42cf80
  42cf65:	mov    eax,DWORD PTR [rip+0x18f25]        # 0x445e90
  42cf6b:	cmp    eax,0x1
  42cf6e:	je     0x42cedd
  42cf74:	jmp    0x42cef6
  42cf76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cf80:	mov    DWORD PTR [rip+0x18f06],0x2        # 0x445e90
  42cf8a:	jmp    0x42cf3d
  42cf8c:	nop    DWORD PTR [rax+0x0]
  42cf90:	push   rbx
  42cf91:	sub    rsp,0x20
  42cf95:	mov    eax,0x3
  42cf9a:	xchg   DWORD PTR [rip+0x18ef0],eax        # 0x445e90
  42cfa0:	cmp    eax,0x2
  42cfa3:	je     0x42cfb0
  42cfa5:	add    rsp,0x20
  42cfa9:	pop    rbx
  42cfaa:	ret    
  42cfab:	nop    DWORD PTR [rax+rax*1+0x0]
  42cfb0:	mov    rbx,QWORD PTR [rip+0x1b701]        # 0x4486b8
  42cfb7:	lea    rcx,[rip+0x18f02]        # 0x445ec0
  42cfbe:	call   rbx
  42cfc0:	lea    rcx,[rip+0x18f21]        # 0x445ee8
  42cfc7:	mov    rax,rbx
  42cfca:	add    rsp,0x20
  42cfce:	pop    rbx
  42cfcf:	rex.W jmp rax
  42cfd2:	nop    DWORD PTR [rax+0x0]
  42cfd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cfe0:	push   rdi
  42cfe1:	push   rsi
  42cfe2:	push   rbx
  42cfe3:	sub    rsp,0x20
  42cfe7:	mov    ebx,ecx
  42cfe9:	xor    ecx,ecx
  42cfeb:	call   0x42cec0
  42cff0:	cmp    ebx,0x9
  42cff3:	jg     0x42d030
  42cff5:	lea    rdx,[rip+0x18e44]        # 0x445e40
  42cffc:	movsxd rcx,ebx
  42cfff:	mov    rdi,QWORD PTR [rdx+rcx*8]
  42d003:	test   rdi,rdi
  42d006:	je     0x42d090
  42d00c:	cmp    DWORD PTR [rip+0x18e7d],0x2        # 0x445e90
  42d013:	mov    r8,QWORD PTR [rdi]
  42d016:	mov    QWORD PTR [rdx+rcx*8],r8
  42d01a:	jne    0x42d076
  42d01c:	lea    rcx,[rip+0x18e9d]        # 0x445ec0
  42d023:	call   QWORD PTR [rip+0x1b70f]        # 0x448738
  42d029:	jmp    0x42d076
  42d02b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d030:	mov    eax,0x1
  42d035:	mov    ecx,ebx
  42d037:	shl    eax,cl
  42d039:	mov    esi,eax
  42d03b:	lea    eax,[rax-0x1]
  42d03e:	cdqe   
  42d040:	lea    rdx,[rax*4+0x27]
  42d048:	shr    rdx,0x3
  42d04c:	mov    edx,edx
  42d04e:	lea    rcx,[rdx*8+0x0]
  42d056:	call   0x42dea8
  42d05b:	test   rax,rax
  42d05e:	mov    rdi,rax
  42d061:	je     0x42d0ea
  42d067:	cmp    DWORD PTR [rip+0x18e22],0x2        # 0x445e90
  42d06e:	mov    DWORD PTR [rdi+0x8],ebx
  42d071:	mov    DWORD PTR [rdi+0xc],esi
  42d074:	je     0x42d01c
  42d076:	mov    DWORD PTR [rdi+0x14],0x0
  42d07d:	mov    DWORD PTR [rdi+0x10],0x0
  42d084:	mov    rax,rdi
  42d087:	add    rsp,0x20
  42d08b:	pop    rbx
  42d08c:	pop    rsi
  42d08d:	pop    rdi
  42d08e:	ret    
  42d08f:	nop
  42d090:	mov    ecx,ebx
  42d092:	mov    eax,0x1
  42d097:	mov    rdi,QWORD PTR [rip+0x4e62]        # 0x431f00
  42d09e:	shl    eax,cl
  42d0a0:	lea    rcx,[rip+0x18499]        # 0x445540
  42d0a7:	lea    edx,[rax-0x1]
  42d0aa:	mov    esi,eax
  42d0ac:	mov    rax,rdi
  42d0af:	movsxd rdx,edx
  42d0b2:	sub    rax,rcx
  42d0b5:	lea    rdx,[rdx*4+0x27]
  42d0bd:	mov    rcx,rax
  42d0c0:	sar    rcx,0x3
  42d0c4:	shr    rdx,0x3
  42d0c8:	mov    edx,edx
  42d0ca:	add    rcx,rdx
  42d0cd:	cmp    rcx,0x120
  42d0d4:	ja     0x42d04e
  42d0da:	lea    rdx,[rdi+rdx*8]
  42d0de:	mov    QWORD PTR [rip+0x4e1b],rdx        # 0x431f00
  42d0e5:	jmp    0x42d067
  42d0ea:	xor    eax,eax
  42d0ec:	jmp    0x42d087
  42d0ee:	xchg   ax,ax
  42d0f0:	push   rbx
  42d0f1:	sub    rsp,0x20
  42d0f5:	test   rcx,rcx
  42d0f8:	je     0x42d129
  42d0fa:	cmp    DWORD PTR [rcx+0x8],0x9
  42d0fe:	jg     0x42d130
  42d100:	mov    rbx,rcx
  42d103:	xor    ecx,ecx
  42d105:	call   0x42cec0
  42d10a:	movsxd rdx,DWORD PTR [rbx+0x8]
  42d10e:	lea    rax,[rip+0x18d2b]        # 0x445e40
  42d115:	cmp    DWORD PTR [rip+0x18d74],0x2        # 0x445e90
  42d11c:	mov    rcx,QWORD PTR [rax+rdx*8]
  42d120:	mov    QWORD PTR [rax+rdx*8],rbx
  42d124:	mov    QWORD PTR [rbx],rcx
  42d127:	je     0x42d140
  42d129:	add    rsp,0x20
  42d12d:	pop    rbx
  42d12e:	ret    
  42d12f:	nop
  42d130:	add    rsp,0x20
  42d134:	pop    rbx
  42d135:	jmp    0x42df08
  42d13a:	nop    WORD PTR [rax+rax*1+0x0]
  42d140:	mov    rax,QWORD PTR [rip+0x1b5f1]        # 0x448738
  42d147:	lea    rcx,[rip+0x18d72]        # 0x445ec0
  42d14e:	add    rsp,0x20
  42d152:	pop    rbx
  42d153:	rex.W jmp rax
  42d156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d160:	push   rbp
  42d161:	push   rdi
  42d162:	push   rsi
  42d163:	push   rbx
  42d164:	sub    rsp,0x28
  42d168:	mov    esi,DWORD PTR [rcx+0x14]
  42d16b:	xor    r9d,r9d
  42d16e:	lea    r10,[rcx+0x18]
  42d172:	mov    rdi,rcx
  42d175:	movsxd rbx,r8d
  42d178:	movsxd rdx,edx
  42d17b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d180:	mov    eax,DWORD PTR [r10+r9*4]
  42d184:	imul   rax,rdx
  42d188:	add    rax,rbx
  42d18b:	mov    rbx,rax
  42d18e:	mov    DWORD PTR [r10+r9*4],eax
  42d192:	add    r9,0x1
  42d196:	shr    rbx,0x20
  42d19a:	cmp    esi,r9d
  42d19d:	jg     0x42d180
  42d19f:	test   rbx,rbx
  42d1a2:	mov    rax,rdi
  42d1a5:	je     0x42d1bc
  42d1a7:	cmp    esi,DWORD PTR [rdi+0xc]
  42d1aa:	jge    0x42d1c5
  42d1ac:	movsxd rax,esi
  42d1af:	add    esi,0x1
  42d1b2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  42d1b6:	mov    DWORD PTR [rdi+0x14],esi
  42d1b9:	mov    rax,rdi
  42d1bc:	add    rsp,0x28
  42d1c0:	pop    rbx
  42d1c1:	pop    rsi
  42d1c2:	pop    rdi
  42d1c3:	pop    rbp
  42d1c4:	ret    
  42d1c5:	mov    eax,DWORD PTR [rdi+0x8]
  42d1c8:	lea    ecx,[rax+0x1]
  42d1cb:	call   0x42cfe0
  42d1d0:	test   rax,rax
  42d1d3:	mov    rbp,rax
  42d1d6:	je     0x42d20e
  42d1d8:	lea    rcx,[rax+0x10]
  42d1dc:	movsxd rax,DWORD PTR [rdi+0x14]
  42d1e0:	lea    rdx,[rdi+0x10]
  42d1e4:	lea    r8,[rax*4+0x8]
  42d1ec:	call   0x42de98
  42d1f1:	mov    rcx,rdi
  42d1f4:	mov    rdi,rbp
  42d1f7:	call   0x42d0f0
  42d1fc:	movsxd rax,esi
  42d1ff:	add    esi,0x1
  42d202:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  42d206:	mov    DWORD PTR [rdi+0x14],esi
  42d209:	mov    rax,rdi
  42d20c:	jmp    0x42d1bc
  42d20e:	xor    eax,eax
  42d210:	jmp    0x42d1bc
  42d212:	nop    DWORD PTR [rax+0x0]
  42d216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d220:	push   rbx
  42d221:	sub    rsp,0x20
  42d225:	mov    ebx,ecx
  42d227:	mov    ecx,0x1
  42d22c:	call   0x42cfe0
  42d231:	test   rax,rax
  42d234:	je     0x42d240
  42d236:	mov    DWORD PTR [rax+0x18],ebx
  42d239:	mov    DWORD PTR [rax+0x14],0x1
  42d240:	add    rsp,0x20
  42d244:	pop    rbx
  42d245:	ret    
  42d246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d250:	push   r14
  42d252:	push   r13
  42d254:	push   r12
  42d256:	push   rbp
  42d257:	push   rdi
  42d258:	push   rsi
  42d259:	push   rbx
  42d25a:	sub    rsp,0x20
  42d25e:	movsxd r13,DWORD PTR [rcx+0x14]
  42d262:	movsxd rbx,DWORD PTR [rdx+0x14]
  42d266:	mov    r12,rcx
  42d269:	mov    r14,rdx
  42d26c:	cmp    r13d,ebx
  42d26f:	jl     0x42d371
  42d275:	mov    eax,ebx
  42d277:	movsxd rbx,r13d
  42d27a:	movsxd r13,eax
  42d27d:	xor    eax,eax
  42d27f:	lea    esi,[rbx+r13*1]
  42d283:	cmp    esi,DWORD PTR [r12+0xc]
  42d288:	setg   al
  42d28b:	add    eax,DWORD PTR [r12+0x8]
  42d290:	mov    ecx,eax
  42d292:	call   0x42cfe0
  42d297:	test   rax,rax
  42d29a:	je     0x42d37c
  42d2a0:	lea    rdi,[rax+0x18]
  42d2a4:	movsxd rdx,esi
  42d2a7:	lea    rbp,[rdi+rdx*4]
  42d2ab:	mov    r8,rdi
  42d2ae:	cmp    rdi,rbp
  42d2b1:	jae    0x42d2c3
  42d2b3:	mov    DWORD PTR [r8],0x0
  42d2ba:	add    r8,0x4
  42d2be:	cmp    rbp,r8
  42d2c1:	ja     0x42d2b3
  42d2c3:	lea    rdx,[r14+0x18]
  42d2c7:	add    r12,0x18
  42d2cb:	lea    rbx,[r12+rbx*4]
  42d2cf:	lea    r13,[rdx+r13*4]
  42d2d3:	cmp    rdx,r13
  42d2d6:	jae    0x42d339
  42d2d8:	nop    DWORD PTR [rax+rax*1+0x0]
  42d2e0:	add    rdx,0x4
  42d2e4:	mov    r11d,DWORD PTR [rdx-0x4]
  42d2e8:	test   r11d,r11d
  42d2eb:	je     0x42d330
  42d2ed:	mov    r9,rdi
  42d2f0:	mov    r8,r12
  42d2f3:	xor    r10d,r10d
  42d2f6:	jmp    0x42d303
  42d2f8:	nop    DWORD PTR [rax+rax*1+0x0]
  42d300:	mov    r9,r14
  42d303:	add    r8,0x4
  42d307:	mov    ecx,DWORD PTR [r8-0x4]
  42d30b:	mov    r14d,DWORD PTR [r9]
  42d30e:	imul   rcx,r11
  42d312:	add    rcx,r14
  42d315:	lea    r14,[r9+0x4]
  42d319:	add    rcx,r10
  42d31c:	mov    r10,rcx
  42d31f:	mov    DWORD PTR [r14-0x4],ecx
  42d323:	shr    r10,0x20
  42d327:	cmp    rbx,r8
  42d32a:	ja     0x42d300
  42d32c:	mov    DWORD PTR [r9+0x4],r10d
  42d330:	add    rdi,0x4
  42d334:	cmp    r13,rdx
  42d337:	ja     0x42d2e0
  42d339:	test   esi,esi
  42d33b:	jle    0x42d35f
  42d33d:	mov    r8d,DWORD PTR [rbp-0x4]
  42d341:	lea    rdx,[rbp-0x4]
  42d345:	test   r8d,r8d
  42d348:	je     0x42d35a
  42d34a:	jmp    0x42d35f
  42d34c:	nop    DWORD PTR [rax+0x0]
  42d350:	sub    rdx,0x4
  42d354:	mov    ecx,DWORD PTR [rdx]
  42d356:	test   ecx,ecx
  42d358:	jne    0x42d35f
  42d35a:	sub    esi,0x1
  42d35d:	jne    0x42d350
  42d35f:	mov    DWORD PTR [rax+0x14],esi
  42d362:	add    rsp,0x20
  42d366:	pop    rbx
  42d367:	pop    rsi
  42d368:	pop    rdi
  42d369:	pop    rbp
  42d36a:	pop    r12
  42d36c:	pop    r13
  42d36e:	pop    r14
  42d370:	ret    
  42d371:	mov    r12,rdx
  42d374:	mov    r14,rcx
  42d377:	jmp    0x42d27d
  42d37c:	xor    eax,eax
  42d37e:	jmp    0x42d362
  42d380:	push   rbp
  42d381:	push   rdi
  42d382:	push   rsi
  42d383:	push   rbx
  42d384:	sub    rsp,0x28
  42d388:	mov    eax,edx
  42d38a:	mov    rbp,rcx
  42d38d:	mov    ebx,edx
  42d38f:	and    eax,0x3
  42d392:	jne    0x42d420
  42d398:	sar    ebx,0x2
  42d39b:	mov    rax,rbp
  42d39e:	test   ebx,ebx
  42d3a0:	je     0x42d3ec
  42d3a2:	mov    rdi,QWORD PTR [rip+0x18157]        # 0x445500
  42d3a9:	test   rdi,rdi
  42d3ac:	jne    0x42d3c2
  42d3ae:	jmp    0x42d46d
  42d3b3:	sar    ebx,1
  42d3b5:	je     0x42d3e9
  42d3b7:	mov    rsi,QWORD PTR [rdi]
  42d3ba:	test   rsi,rsi
  42d3bd:	je     0x42d3f5
  42d3bf:	mov    rdi,rsi
  42d3c2:	test   bl,0x1
  42d3c5:	je     0x42d3b3
  42d3c7:	mov    rdx,rdi
  42d3ca:	mov    rcx,rbp
  42d3cd:	call   0x42d250
  42d3d2:	test   rax,rax
  42d3d5:	mov    rsi,rax
  42d3d8:	je     0x42d443
  42d3da:	mov    rcx,rbp
  42d3dd:	mov    rbp,rsi
  42d3e0:	call   0x42d0f0
  42d3e5:	sar    ebx,1
  42d3e7:	jne    0x42d3b7
  42d3e9:	mov    rax,rbp
  42d3ec:	add    rsp,0x28
  42d3f0:	pop    rbx
  42d3f1:	pop    rsi
  42d3f2:	pop    rdi
  42d3f3:	pop    rbp
  42d3f4:	ret    
  42d3f5:	mov    ecx,0x1
  42d3fa:	call   0x42cec0
  42d3ff:	mov    rsi,QWORD PTR [rdi]
  42d402:	test   rsi,rsi
  42d405:	je     0x42d44e
  42d407:	cmp    DWORD PTR [rip+0x18a82],0x2        # 0x445e90
  42d40e:	jne    0x42d3bf
  42d410:	lea    rcx,[rip+0x18ad1]        # 0x445ee8
  42d417:	call   QWORD PTR [rip+0x1b31b]        # 0x448738
  42d41d:	jmp    0x42d3bf
  42d41f:	nop
  42d420:	sub    eax,0x1
  42d423:	lea    rdx,[rip+0x10216]        # 0x43d640
  42d42a:	xor    r8d,r8d
  42d42d:	cdqe   
  42d42f:	mov    edx,DWORD PTR [rdx+rax*4]
  42d432:	call   0x42d160
  42d437:	test   rax,rax
  42d43a:	mov    rbp,rax
  42d43d:	jne    0x42d398
  42d443:	xor    eax,eax
  42d445:	add    rsp,0x28
  42d449:	pop    rbx
  42d44a:	pop    rsi
  42d44b:	pop    rdi
  42d44c:	pop    rbp
  42d44d:	ret    
  42d44e:	mov    rdx,rdi
  42d451:	mov    rcx,rdi
  42d454:	call   0x42d250
  42d459:	test   rax,rax
  42d45c:	mov    rsi,rax
  42d45f:	mov    QWORD PTR [rdi],rax
  42d462:	je     0x42d443
  42d464:	mov    QWORD PTR [rax],0x0
  42d46b:	jmp    0x42d407
  42d46d:	mov    ecx,0x1
  42d472:	call   0x42cec0
  42d477:	mov    rdi,QWORD PTR [rip+0x18082]        # 0x445500
  42d47e:	test   rdi,rdi
  42d481:	je     0x42d4a2
  42d483:	cmp    DWORD PTR [rip+0x18a06],0x2        # 0x445e90
  42d48a:	jne    0x42d3c2
  42d490:	lea    rcx,[rip+0x18a51]        # 0x445ee8
  42d497:	call   QWORD PTR [rip+0x1b29b]        # 0x448738
  42d49d:	jmp    0x42d3c2
  42d4a2:	mov    ecx,0x1
  42d4a7:	call   0x42cfe0
  42d4ac:	test   rax,rax
  42d4af:	mov    rdi,rax
  42d4b2:	je     0x42d4d2
  42d4b4:	mov    DWORD PTR [rax+0x18],0x271
  42d4bb:	mov    DWORD PTR [rax+0x14],0x1
  42d4c2:	mov    QWORD PTR [rip+0x18037],rax        # 0x445500
  42d4c9:	mov    QWORD PTR [rax],0x0
  42d4d0:	jmp    0x42d483
  42d4d2:	mov    QWORD PTR [rip+0x18023],0x0        # 0x445500
  42d4dd:	xor    eax,eax
  42d4df:	jmp    0x42d445
  42d4e4:	xchg   ax,ax
  42d4e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d4f0:	push   r13
  42d4f2:	push   r12
  42d4f4:	push   rbp
  42d4f5:	push   rdi
  42d4f6:	push   rsi
  42d4f7:	push   rbx
  42d4f8:	sub    rsp,0x28
  42d4fc:	mov    rdi,rcx
  42d4ff:	mov    ebp,edx
  42d501:	mov    esi,edx
  42d503:	mov    r12d,DWORD PTR [rdi+0x14]
  42d507:	sar    ebp,0x5
  42d50a:	mov    eax,DWORD PTR [rdi+0xc]
  42d50d:	mov    ecx,DWORD PTR [rcx+0x8]
  42d510:	add    r12d,ebp
  42d513:	lea    ebx,[r12+0x1]
  42d518:	cmp    ebx,eax
  42d51a:	jle    0x42d529
  42d51c:	nop    DWORD PTR [rax+0x0]
  42d520:	add    eax,eax
  42d522:	add    ecx,0x1
  42d525:	cmp    ebx,eax
  42d527:	jg     0x42d520
  42d529:	call   0x42cfe0
  42d52e:	test   rax,rax
  42d531:	mov    r13,rax
  42d534:	je     0x42d5ff
  42d53a:	test   ebp,ebp
  42d53c:	lea    r8,[rax+0x18]
  42d540:	jle    0x42d5f7
  42d546:	lea    eax,[rbp-0x1]
  42d549:	lea    r9,[r8+rax*4+0x4]
  42d54e:	xchg   ax,ax
  42d550:	add    r8,0x4
  42d554:	mov    DWORD PTR [r8-0x4],0x0
  42d55c:	cmp    r8,r9
  42d55f:	jne    0x42d550
  42d561:	movsxd rax,DWORD PTR [rdi+0x14]
  42d565:	lea    r8,[rdi+0x18]
  42d569:	mov    edx,esi
  42d56b:	and    edx,0x1f
  42d56e:	lea    rbp,[r8+rax*4]
  42d572:	je     0x42d5e0
  42d574:	mov    eax,0x20
  42d579:	xor    r11d,r11d
  42d57c:	sub    eax,edx
  42d57e:	jmp    0x42d583
  42d580:	mov    r9,rsi
  42d583:	mov    r10d,DWORD PTR [r8]
  42d586:	mov    ecx,edx
  42d588:	lea    rsi,[r9+0x4]
  42d58c:	add    r8,0x4
  42d590:	shl    r10d,cl
  42d593:	mov    ecx,eax
  42d595:	or     r10d,r11d
  42d598:	mov    DWORD PTR [rsi-0x4],r10d
  42d59c:	mov    r11d,DWORD PTR [r8-0x4]
  42d5a0:	shr    r11d,cl
  42d5a3:	cmp    rbp,r8
  42d5a6:	ja     0x42d580
  42d5a8:	add    r12d,0x2
  42d5ac:	test   r11d,r11d
  42d5af:	mov    DWORD PTR [r9+0x4],r11d
  42d5b3:	cmovne ebx,r12d
  42d5b7:	sub    ebx,0x1
  42d5ba:	mov    rcx,rdi
  42d5bd:	mov    DWORD PTR [r13+0x14],ebx
  42d5c1:	call   0x42d0f0
  42d5c6:	mov    rax,r13
  42d5c9:	add    rsp,0x28
  42d5cd:	pop    rbx
  42d5ce:	pop    rsi
  42d5cf:	pop    rdi
  42d5d0:	pop    rbp
  42d5d1:	pop    r12
  42d5d3:	pop    r13
  42d5d5:	ret    
  42d5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d5e0:	add    r8,0x4
  42d5e4:	mov    edx,DWORD PTR [r8-0x4]
  42d5e8:	add    r9,0x4
  42d5ec:	cmp    rbp,r8
  42d5ef:	mov    DWORD PTR [r9-0x4],edx
  42d5f3:	ja     0x42d5e0
  42d5f5:	jmp    0x42d5b7
  42d5f7:	mov    r9,r8
  42d5fa:	jmp    0x42d561
  42d5ff:	xor    eax,eax
  42d601:	jmp    0x42d5c9
  42d603:	nop    DWORD PTR [rax]
  42d606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d610:	movsxd r8,DWORD PTR [rdx+0x14]
  42d614:	mov    eax,DWORD PTR [rcx+0x14]
  42d617:	sub    eax,r8d
  42d61a:	test   eax,eax
  42d61c:	jne    0x42d652
  42d61e:	shl    r8,0x2
  42d622:	add    rcx,0x18
  42d626:	lea    rax,[rcx+r8*1]
  42d62a:	lea    rdx,[rdx+r8*1+0x18]
  42d62f:	jmp    0x42d636
  42d631:	cmp    rcx,rax
  42d634:	jae    0x42d650
  42d636:	sub    rdx,0x4
  42d63a:	sub    rax,0x4
  42d63e:	mov    r9d,DWORD PTR [rdx]
  42d641:	cmp    DWORD PTR [rax],r9d
  42d644:	je     0x42d631
  42d646:	sbb    eax,eax
  42d648:	or     eax,0x1
  42d64b:	ret    
  42d64c:	nop    DWORD PTR [rax+0x0]
  42d650:	xor    eax,eax
  42d652:	repz ret 
  42d654:	xchg   ax,ax
  42d656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d660:	push   rdi
  42d661:	push   rsi
  42d662:	push   rbx
  42d663:	sub    rsp,0x20
  42d667:	mov    rsi,rcx
  42d66a:	mov    rdi,rdx
  42d66d:	call   0x42d610
  42d672:	test   eax,eax
  42d674:	je     0x42d760
  42d67a:	mov    ebx,0x0
  42d67f:	js     0x42d782
  42d685:	mov    ecx,DWORD PTR [rsi+0x8]
  42d688:	call   0x42cfe0
  42d68d:	test   rax,rax
  42d690:	je     0x42d792
  42d696:	movsxd rdx,DWORD PTR [rsi+0x14]
  42d69a:	lea    rcx,[rsi+0x18]
  42d69e:	mov    DWORD PTR [rax+0x10],ebx
  42d6a1:	lea    r10,[rdi+0x18]
  42d6a5:	xor    r9d,r9d
  42d6a8:	mov    rbx,rdx
  42d6ab:	lea    rsi,[rcx+rdx*4]
  42d6af:	movsxd rdx,DWORD PTR [rdi+0x14]
  42d6b3:	lea    rdi,[r10+rdx*4]
  42d6b7:	lea    rdx,[rax+0x18]
  42d6bb:	nop    DWORD PTR [rax+rax*1+0x0]
  42d6c0:	add    rcx,0x4
  42d6c4:	add    r10,0x4
  42d6c8:	mov    r11d,DWORD PTR [r10-0x4]
  42d6cc:	mov    r8d,DWORD PTR [rcx-0x4]
  42d6d0:	add    rdx,0x4
  42d6d4:	sub    r8,r11
  42d6d7:	sub    r8,r9
  42d6da:	mov    r9,r8
  42d6dd:	mov    r11d,r8d
  42d6e0:	mov    DWORD PTR [rdx-0x4],r8d
  42d6e4:	shr    r9,0x20
  42d6e8:	and    r9d,0x1
  42d6ec:	cmp    rdi,r10
  42d6ef:	ja     0x42d6c0
  42d6f1:	cmp    rsi,rcx
  42d6f4:	mov    rdi,rdx
  42d6f7:	mov    r10,rcx
  42d6fa:	jbe    0x42d736
  42d6fc:	nop    DWORD PTR [rax+0x0]
  42d700:	add    rcx,0x4
  42d704:	mov    r8d,DWORD PTR [rcx-0x4]
  42d708:	add    rdx,0x4
  42d70c:	sub    r8,r9
  42d70f:	mov    r9,r8
  42d712:	mov    r11d,r8d
  42d715:	mov    DWORD PTR [rdx-0x4],r8d
  42d719:	shr    r9,0x20
  42d71d:	and    r9d,0x1
  42d721:	cmp    rsi,rcx
  42d724:	ja     0x42d700
  42d726:	not    r10
  42d729:	lea    rdx,[r10+rsi*1]
  42d72d:	shr    rdx,0x2
  42d731:	lea    rdx,[rdi+rdx*4+0x4]
  42d736:	sub    rdx,0x4
  42d73a:	test   r11d,r11d
  42d73d:	jne    0x42d74d
  42d73f:	nop
  42d740:	sub    rdx,0x4
  42d744:	mov    ecx,DWORD PTR [rdx]
  42d746:	sub    ebx,0x1
  42d749:	test   ecx,ecx
  42d74b:	je     0x42d740
  42d74d:	mov    DWORD PTR [rax+0x14],ebx
  42d750:	add    rsp,0x20
  42d754:	pop    rbx
  42d755:	pop    rsi
  42d756:	pop    rdi
  42d757:	ret    
  42d758:	nop    DWORD PTR [rax+rax*1+0x0]
  42d760:	xor    ecx,ecx
  42d762:	call   0x42cfe0
  42d767:	test   rax,rax
  42d76a:	je     0x42d792
  42d76c:	mov    DWORD PTR [rax+0x14],0x1
  42d773:	mov    DWORD PTR [rax+0x18],0x0
  42d77a:	add    rsp,0x20
  42d77e:	pop    rbx
  42d77f:	pop    rsi
  42d780:	pop    rdi
  42d781:	ret    
  42d782:	mov    rax,rsi
  42d785:	mov    bl,0x1
  42d787:	mov    rsi,rdi
  42d78a:	mov    rdi,rax
  42d78d:	jmp    0x42d685
  42d792:	xor    eax,eax
  42d794:	jmp    0x42d750
  42d796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d7a0:	push   rsi
  42d7a1:	push   rbx
  42d7a2:	sub    rsp,0x18
  42d7a6:	movsxd rax,DWORD PTR [rcx+0x14]
  42d7aa:	lea    r10,[rcx+0x18]
  42d7ae:	mov    ecx,0x20
  42d7b3:	lea    r9,[r10+rax*4]
  42d7b7:	mov    eax,DWORD PTR [r9-0x4]
  42d7bb:	lea    rbx,[r9-0x4]
  42d7bf:	bsr    r8d,eax
  42d7c3:	xor    r8d,0x1f
  42d7c7:	sub    ecx,r8d
  42d7ca:	cmp    r8d,0xa
  42d7ce:	mov    DWORD PTR [rdx],ecx
  42d7d0:	jg     0x42d820
  42d7d2:	mov    ecx,0xb
  42d7d7:	mov    r11d,eax
  42d7da:	xor    esi,esi
  42d7dc:	sub    ecx,r8d
  42d7df:	shr    r11d,cl
  42d7e2:	or     r11d,0x3ff00000
  42d7e9:	shl    r11,0x20
  42d7ed:	cmp    r10,rbx
  42d7f0:	jae    0x42d7f8
  42d7f2:	mov    esi,DWORD PTR [r9-0x8]
  42d7f6:	shr    esi,cl
  42d7f8:	lea    ecx,[r8+0x15]
  42d7fc:	shl    eax,cl
  42d7fe:	mov    edx,eax
  42d800:	mov    eax,esi
  42d802:	or     eax,edx
  42d804:	or     rax,r11
  42d807:	mov    QWORD PTR [rsp+0x8],rax
  42d80c:	movsd  xmm0,QWORD PTR [rsp+0x8]
  42d812:	add    rsp,0x18
  42d816:	pop    rbx
  42d817:	pop    rsi
  42d818:	ret    
  42d819:	nop    DWORD PTR [rax+0x0]
  42d820:	cmp    r10,rbx
  42d823:	jae    0x42d880
  42d825:	mov    r11d,r8d
  42d828:	lea    rsi,[r9-0x8]
  42d82c:	mov    edx,DWORD PTR [r9-0x8]
  42d830:	sub    r11d,0xb
  42d834:	je     0x42d8a2
  42d836:	mov    ebx,0x2b
  42d83b:	mov    ecx,r11d
  42d83e:	sub    ebx,r8d
  42d841:	shl    eax,cl
  42d843:	mov    r8d,edx
  42d846:	mov    ecx,ebx
  42d848:	shr    r8d,cl
  42d84b:	or     eax,r8d
  42d84e:	xor    r8d,r8d
  42d851:	or     eax,0x3ff00000
  42d856:	shl    rax,0x20
  42d85a:	cmp    r10,rsi
  42d85d:	jae    0x42d866
  42d85f:	mov    r8d,DWORD PTR [r9-0xc]
  42d863:	shr    r8d,cl
  42d866:	mov    ecx,r11d
  42d869:	shl    edx,cl
  42d86b:	or     r8d,edx
  42d86e:	movabs rdx,0xffffffff00000000
  42d878:	and    rax,rdx
  42d87b:	or     rax,r8
  42d87e:	jmp    0x42d807
  42d880:	mov    r11d,r8d
  42d883:	sub    r11d,0xb
  42d887:	je     0x42d8a0
  42d889:	mov    ecx,r11d
  42d88c:	xor    r8d,r8d
  42d88f:	xor    edx,edx
  42d891:	shl    eax,cl
  42d893:	or     eax,0x3ff00000
  42d898:	shl    rax,0x20
  42d89c:	jmp    0x42d866
  42d89e:	xchg   ax,ax
  42d8a0:	xor    edx,edx
  42d8a2:	or     eax,0x3ff00000
  42d8a7:	shl    rax,0x20
  42d8ab:	or     rax,rdx
  42d8ae:	jmp    0x42d807
  42d8b3:	nop    DWORD PTR [rax]
  42d8b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d8c0:	push   rdi
  42d8c1:	push   rsi
  42d8c2:	push   rbx
  42d8c3:	sub    rsp,0x20
  42d8c7:	mov    ecx,0x1
  42d8cc:	movq   rbx,xmm0
  42d8d1:	mov    rdi,rdx
  42d8d4:	mov    rsi,r8
  42d8d7:	call   0x42cfe0
  42d8dc:	test   rax,rax
  42d8df:	je     0x42d9c5
  42d8e5:	mov    r9,rbx
  42d8e8:	shr    r9,0x20
  42d8ec:	mov    r10d,r9d
  42d8ef:	and    r9d,0x7fffffff
  42d8f6:	and    r10d,0xfffff
  42d8fd:	shr    r9d,0x14
  42d901:	mov    edx,r10d
  42d904:	or     edx,0x100000
  42d90a:	test   r9d,r9d
  42d90d:	cmovne r10d,edx
  42d911:	test   ebx,ebx
  42d913:	jne    0x42d954
  42d915:	xor    ecx,ecx
  42d917:	mov    DWORD PTR [rax+0x14],0x1
  42d91e:	mov    edx,0x1
  42d923:	tzcnt  ecx,r10d
  42d928:	shr    r10d,cl
  42d92b:	test   r9d,r9d
  42d92e:	lea    r11d,[rcx+0x20]
  42d932:	mov    DWORD PTR [rax+0x18],r10d
  42d936:	je     0x42d993
  42d938:	lea    edx,[r11+r9*1-0x433]
  42d940:	mov    DWORD PTR [rdi],edx
  42d942:	mov    edx,0x35
  42d947:	sub    edx,r11d
  42d94a:	mov    DWORD PTR [rsi],edx
  42d94c:	add    rsp,0x20
  42d950:	pop    rbx
  42d951:	pop    rsi
  42d952:	pop    rdi
  42d953:	ret    
  42d954:	xor    r11d,r11d
  42d957:	tzcnt  r11d,ebx
  42d95c:	mov    ecx,r11d
  42d95f:	shr    ebx,cl
  42d961:	test   r11d,r11d
  42d964:	je     0x42d9c0
  42d966:	mov    ecx,0x20
  42d96b:	mov    edx,r10d
  42d96e:	sub    ecx,r11d
  42d971:	shl    edx,cl
  42d973:	mov    ecx,r11d
  42d976:	or     ebx,edx
  42d978:	shr    r10d,cl
  42d97b:	mov    DWORD PTR [rax+0x18],ebx
  42d97e:	cmp    r10d,0x1
  42d982:	mov    DWORD PTR [rax+0x1c],r10d
  42d986:	sbb    edx,edx
  42d988:	add    edx,0x2
  42d98b:	test   r9d,r9d
  42d98e:	mov    DWORD PTR [rax+0x14],edx
  42d991:	jne    0x42d938
  42d993:	movsxd rcx,edx
  42d996:	shl    edx,0x5
  42d999:	sub    r11d,0x432
  42d9a0:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  42d9a5:	mov    DWORD PTR [rdi],r11d
  42d9a8:	xor    ecx,0x1f
  42d9ab:	sub    edx,ecx
  42d9ad:	mov    DWORD PTR [rsi],edx
  42d9af:	add    rsp,0x20
  42d9b3:	pop    rbx
  42d9b4:	pop    rsi
  42d9b5:	pop    rdi
  42d9b6:	ret    
  42d9b7:	nop    WORD PTR [rax+rax*1+0x0]
  42d9c0:	mov    DWORD PTR [rax+0x18],ebx
  42d9c3:	jmp    0x42d97e
  42d9c5:	xor    eax,eax
  42d9c7:	jmp    0x42d94c
  42d9c9:	nop    DWORD PTR [rax+0x0]
  42d9d0:	mov    rax,rcx
  42d9d3:	lea    rcx,[rdx+0x1]
  42d9d7:	movzx  edx,BYTE PTR [rdx]
  42d9da:	test   dl,dl
  42d9dc:	mov    BYTE PTR [rax],dl
  42d9de:	je     0x42d9f2
  42d9e0:	add    rcx,0x1
  42d9e4:	movzx  edx,BYTE PTR [rcx-0x1]
  42d9e8:	add    rax,0x1
  42d9ec:	test   dl,dl
  42d9ee:	mov    BYTE PTR [rax],dl
  42d9f0:	jne    0x42d9e0
  42d9f2:	repz ret 
  42d9f4:	nop
  42d9f5:	nop
  42d9f6:	nop
  42d9f7:	nop
  42d9f8:	nop
  42d9f9:	nop
  42d9fa:	nop
  42d9fb:	nop
  42d9fc:	nop
  42d9fd:	nop
  42d9fe:	nop
  42d9ff:	nop
  42da00:	push   rbp
  42da01:	push   rdi
  42da02:	push   rsi
  42da03:	push   rbx
  42da04:	sub    rsp,0x48
  42da08:	test   rdx,rdx
  42da0b:	je     0x42db33
  42da11:	test   r8,r8
  42da14:	je     0x42db40
  42da1a:	mov    eax,DWORD PTR [r9]
  42da1d:	mov    DWORD PTR [r9],0x0
  42da24:	mov    DWORD PTR [rsp+0x30],eax
  42da28:	movzx  eax,BYTE PTR [rdx]
  42da2b:	test   al,al
  42da2d:	je     0x42dad0
  42da33:	cmp    DWORD PTR [rsp+0x98],0x1
  42da3b:	mov    rsi,r9
  42da3e:	mov    rdi,r8
  42da41:	mov    rbx,rdx
  42da44:	mov    rbp,rcx
  42da47:	jbe    0x42dab0
  42da49:	cmp    BYTE PTR [rsp+0x30],0x0
  42da4e:	jne    0x42dae0
  42da54:	movzx  edx,al
  42da57:	mov    ecx,DWORD PTR [rsp+0x90]
  42da5e:	call   QWORD PTR [rip+0x1accc]        # 0x448730
  42da64:	test   eax,eax
  42da66:	je     0x42dab0
  42da68:	cmp    rdi,0x1
  42da6c:	jbe    0x42db5c
  42da72:	mov    DWORD PTR [rsp+0x28],0x1
  42da7a:	mov    QWORD PTR [rsp+0x20],rbp
  42da7f:	mov    r9d,0x2
  42da85:	mov    r8,rbx
  42da88:	mov    edx,0x8
  42da8d:	mov    ecx,DWORD PTR [rsp+0x90]
  42da94:	call   QWORD PTR [rip+0x1aca6]        # 0x448740
  42da9a:	test   eax,eax
  42da9c:	je     0x42db47
  42daa2:	mov    eax,0x2
  42daa7:	add    rsp,0x48
  42daab:	pop    rbx
  42daac:	pop    rsi
  42daad:	pop    rdi
  42daae:	pop    rbp
  42daaf:	ret    
  42dab0:	mov    eax,DWORD PTR [rsp+0x90]
  42dab7:	test   eax,eax
  42dab9:	jne    0x42db00
  42dabb:	movzx  eax,BYTE PTR [rbx]
  42dabe:	mov    WORD PTR [rbp+0x0],ax
  42dac2:	mov    eax,0x1
  42dac7:	add    rsp,0x48
  42dacb:	pop    rbx
  42dacc:	pop    rsi
  42dacd:	pop    rdi
  42dace:	pop    rbp
  42dacf:	ret    
  42dad0:	xor    edx,edx
  42dad2:	xor    eax,eax
  42dad4:	mov    WORD PTR [rcx],dx
  42dad7:	add    rsp,0x48
  42dadb:	pop    rbx
  42dadc:	pop    rsi
  42dadd:	pop    rdi
  42dade:	pop    rbp
  42dadf:	ret    
  42dae0:	mov    BYTE PTR [rsp+0x31],al
  42dae4:	mov    DWORD PTR [rsp+0x28],0x1
  42daec:	mov    r9d,0x2
  42daf2:	mov    QWORD PTR [rsp+0x20],rcx
  42daf7:	lea    r8,[rsp+0x30]
  42dafc:	jmp    0x42da88
  42dafe:	xchg   ax,ax
  42db00:	mov    DWORD PTR [rsp+0x28],0x1
  42db08:	mov    QWORD PTR [rsp+0x20],rbp
  42db0d:	mov    r9d,0x1
  42db13:	mov    r8,rbx
  42db16:	mov    edx,0x8
  42db1b:	mov    ecx,DWORD PTR [rsp+0x90]
  42db22:	call   QWORD PTR [rip+0x1ac18]        # 0x448740
  42db28:	test   eax,eax
  42db2a:	je     0x42db47
  42db2c:	mov    eax,0x1
  42db31:	jmp    0x42dad7
  42db33:	xor    eax,eax
  42db35:	add    rsp,0x48
  42db39:	pop    rbx
  42db3a:	pop    rsi
  42db3b:	pop    rdi
  42db3c:	pop    rbp
  42db3d:	ret    
  42db3e:	xchg   ax,ax
  42db40:	mov    eax,0xfffffffe
  42db45:	jmp    0x42dad7
  42db47:	call   0x42e010
  42db4c:	mov    DWORD PTR [rax],0x2a
  42db52:	mov    eax,0xffffffff
  42db57:	jmp    0x42dad7
  42db5c:	movzx  eax,BYTE PTR [rbx]
  42db5f:	mov    BYTE PTR [rsi],al
  42db61:	mov    eax,0xfffffffe
  42db66:	jmp    0x42dad7
  42db6b:	nop    DWORD PTR [rax+rax*1+0x0]
  42db70:	push   rbp
  42db71:	push   rdi
  42db72:	push   rsi
  42db73:	push   rbx
  42db74:	sub    rsp,0x58
  42db78:	xor    eax,eax
  42db7a:	mov    WORD PTR [rsp+0x4e],ax
  42db7f:	lea    rax,[rsp+0x4e]
  42db84:	test   rcx,rcx
  42db87:	mov    rbx,rcx
  42db8a:	mov    rsi,r9
  42db8d:	mov    rdi,rdx
  42db90:	cmove  rbx,rax
  42db94:	mov    rax,QWORD PTR [rip+0xfcf5]        # 0x43d890
  42db9b:	mov    QWORD PTR [rsp+0x38],r8
  42dba0:	mov    rax,QWORD PTR [rax]
  42dba3:	mov    ebp,DWORD PTR [rax]
  42dba5:	call   0x42e060
  42dbaa:	mov    r8,QWORD PTR [rsp+0x38]
  42dbaf:	lea    r9,[rip+0x18392]        # 0x445f48
  42dbb6:	test   rsi,rsi
  42dbb9:	mov    DWORD PTR [rsp+0x28],ebp
  42dbbd:	mov    DWORD PTR [rsp+0x20],eax
  42dbc1:	mov    rdx,rdi
  42dbc4:	cmovne r9,rsi
  42dbc8:	mov    rcx,rbx
  42dbcb:	call   0x42da00
  42dbd0:	cdqe   
  42dbd2:	add    rsp,0x58
  42dbd6:	pop    rbx
  42dbd7:	pop    rsi
  42dbd8:	pop    rdi
  42dbd9:	pop    rbp
  42dbda:	ret    
  42dbdb:	nop    DWORD PTR [rax+rax*1+0x0]
  42dbe0:	push   r15
  42dbe2:	push   r14
  42dbe4:	push   r13
  42dbe6:	push   r12
  42dbe8:	push   rbp
  42dbe9:	push   rdi
  42dbea:	push   rsi
  42dbeb:	push   rbx
  42dbec:	sub    rsp,0x48
  42dbf0:	lea    rax,[rip+0x1834d]        # 0x445f44
  42dbf7:	test   r9,r9
  42dbfa:	mov    rdi,r9
  42dbfd:	mov    r13,rdx
  42dc00:	cmove  rdi,rax
  42dc04:	mov    r14,rcx
  42dc07:	mov    rsi,r8
  42dc0a:	call   0x42e060
  42dc0f:	mov    r12d,eax
  42dc12:	mov    rax,QWORD PTR [rip+0xfc77]        # 0x43d890
  42dc19:	test   r13,r13
  42dc1c:	mov    rax,QWORD PTR [rax]
  42dc1f:	mov    ebp,DWORD PTR [rax]
  42dc21:	je     0x42dca5
  42dc27:	mov    rdx,QWORD PTR [r13+0x0]
  42dc2b:	test   rdx,rdx
  42dc2e:	je     0x42dca5
  42dc30:	test   r14,r14
  42dc33:	je     0x42dcb0
  42dc35:	xor    ebx,ebx
  42dc37:	test   rsi,rsi
  42dc3a:	jne    0x42dc5a
  42dc3c:	jmp    0x42dca5
  42dc3e:	xchg   ax,ax
  42dc40:	movsxd r10,eax
  42dc43:	add    r14,0x2
  42dc47:	mov    rdx,r10
  42dc4a:	add    rdx,QWORD PTR [r13+0x0]
  42dc4e:	add    rbx,r10
  42dc51:	cmp    rsi,rbx
  42dc54:	mov    QWORD PTR [r13+0x0],rdx
  42dc58:	jbe    0x42dca0
  42dc5a:	mov    r8,rsi
  42dc5d:	mov    DWORD PTR [rsp+0x28],ebp
  42dc61:	mov    DWORD PTR [rsp+0x20],r12d
  42dc66:	sub    r8,rbx
  42dc69:	mov    r9,rdi
  42dc6c:	mov    rcx,r14
  42dc6f:	call   0x42da00
  42dc74:	cmp    eax,0x0
  42dc77:	jg     0x42dc40
  42dc79:	jne    0x42dca0
  42dc7b:	cmp    rbx,rsi
  42dc7e:	jae    0x42dca0
  42dc80:	mov    QWORD PTR [r13+0x0],0x0
  42dc88:	mov    rax,rbx
  42dc8b:	add    rsp,0x48
  42dc8f:	pop    rbx
  42dc90:	pop    rsi
  42dc91:	pop    rdi
  42dc92:	pop    rbp
  42dc93:	pop    r12
  42dc95:	pop    r13
  42dc97:	pop    r14
  42dc99:	pop    r15
  42dc9b:	ret    
  42dc9c:	xor    ebx,ebx
  42dc9e:	xchg   ax,ax
  42dca0:	mov    rax,rbx
  42dca3:	jmp    0x42dc8b
  42dca5:	xor    eax,eax
  42dca7:	jmp    0x42dc8b
  42dca9:	nop    DWORD PTR [rax+0x0]
  42dcb0:	xor    eax,eax
  42dcb2:	test   rsi,rsi
  42dcb5:	mov    WORD PTR [rsp+0x3e],ax
  42dcba:	je     0x42dc9c
  42dcbc:	mov    r15d,ebp
  42dcbf:	xor    ebx,ebx
  42dcc1:	lea    r14,[rsp+0x3e]
  42dcc6:	jmp    0x42dce5
  42dcc8:	nop    DWORD PTR [rax+rax*1+0x0]
  42dcd0:	cdqe   
  42dcd2:	mov    rdx,rax
  42dcd5:	add    rdx,QWORD PTR [r13+0x0]
  42dcd9:	add    rbx,rax
  42dcdc:	cmp    rsi,rbx
  42dcdf:	mov    QWORD PTR [r13+0x0],rdx
  42dce3:	jbe    0x42dca0
  42dce5:	mov    DWORD PTR [rsp+0x28],ebp
  42dce9:	mov    DWORD PTR [rsp+0x20],r12d
  42dcee:	mov    r9,rdi
  42dcf1:	mov    r8,r15
  42dcf4:	mov    rcx,r14
  42dcf7:	call   0x42da00
  42dcfc:	test   eax,eax
  42dcfe:	jg     0x42dcd0
  42dd00:	jmp    0x42dca0
  42dd02:	nop    DWORD PTR [rax+0x0]
  42dd06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dd10:	push   rbp
  42dd11:	push   rdi
  42dd12:	push   rsi
  42dd13:	push   rbx
  42dd14:	sub    rsp,0x48
  42dd18:	xor    eax,eax
  42dd1a:	mov    WORD PTR [rsp+0x3e],ax
  42dd1f:	mov    rax,QWORD PTR [rip+0xfb6a]        # 0x43d890
  42dd26:	mov    rbx,r8
  42dd29:	mov    rsi,rcx
  42dd2c:	mov    rdi,rdx
  42dd2f:	mov    rax,QWORD PTR [rax]
  42dd32:	mov    ebp,DWORD PTR [rax]
  42dd34:	call   0x42e060
  42dd39:	lea    r9,[rip+0x18200]        # 0x445f40
  42dd40:	test   rbx,rbx
  42dd43:	lea    rcx,[rsp+0x3e]
  42dd48:	mov    DWORD PTR [rsp+0x28],ebp
  42dd4c:	mov    DWORD PTR [rsp+0x20],eax
  42dd50:	mov    r8,rdi
  42dd53:	cmovne r9,rbx
  42dd57:	mov    rdx,rsi
  42dd5a:	call   0x42da00
  42dd5f:	cdqe   
  42dd61:	add    rsp,0x48
  42dd65:	pop    rbx
  42dd66:	pop    rsi
  42dd67:	pop    rdi
  42dd68:	pop    rbp
  42dd69:	ret    
  42dd6a:	nop
  42dd6b:	nop
  42dd6c:	nop
  42dd6d:	nop
  42dd6e:	nop
  42dd6f:	nop
  42dd70:	jmp    QWORD PTR [rip+0x1ad62]        # 0x448ad8
  42dd76:	nop
  42dd77:	nop
  42dd78:	jmp    QWORD PTR [rip+0x1ad52]        # 0x448ad0
  42dd7e:	nop
  42dd7f:	nop
  42dd80:	jmp    QWORD PTR [rip+0x1ad42]        # 0x448ac8
  42dd86:	nop
  42dd87:	nop
  42dd88:	jmp    QWORD PTR [rip+0x1ad32]        # 0x448ac0
  42dd8e:	nop
  42dd8f:	nop
  42dd90:	jmp    QWORD PTR [rip+0x1ad22]        # 0x448ab8
  42dd96:	nop
  42dd97:	nop
  42dd98:	jmp    QWORD PTR [rip+0x1ad12]        # 0x448ab0
  42dd9e:	nop
  42dd9f:	nop
  42dda0:	jmp    QWORD PTR [rip+0x1ad02]        # 0x448aa8
  42dda6:	nop
  42dda7:	nop
  42dda8:	jmp    QWORD PTR [rip+0x1acf2]        # 0x448aa0
  42ddae:	nop
  42ddaf:	nop
  42ddb0:	jmp    QWORD PTR [rip+0x1ace2]        # 0x448a98
  42ddb6:	nop
  42ddb7:	nop
  42ddb8:	jmp    QWORD PTR [rip+0x1acd2]        # 0x448a90
  42ddbe:	nop
  42ddbf:	nop
  42ddc0:	jmp    QWORD PTR [rip+0x1acc2]        # 0x448a88
  42ddc6:	nop
  42ddc7:	nop
  42ddc8:	jmp    QWORD PTR [rip+0x1acb2]        # 0x448a80
  42ddce:	nop
  42ddcf:	nop
  42ddd0:	jmp    QWORD PTR [rip+0x1aca2]        # 0x448a78
  42ddd6:	nop
  42ddd7:	nop
  42ddd8:	jmp    QWORD PTR [rip+0x1ac92]        # 0x448a70
  42ddde:	nop
  42dddf:	nop
  42dde0:	jmp    QWORD PTR [rip+0x1ac82]        # 0x448a68
  42dde6:	nop
  42dde7:	nop
  42dde8:	jmp    QWORD PTR [rip+0x1ac72]        # 0x448a60
  42ddee:	nop
  42ddef:	nop
  42ddf0:	jmp    QWORD PTR [rip+0x1ac62]        # 0x448a58
  42ddf6:	nop
  42ddf7:	nop
  42ddf8:	jmp    QWORD PTR [rip+0x1ac52]        # 0x448a50
  42ddfe:	nop
  42ddff:	nop
  42de00:	jmp    QWORD PTR [rip+0x1ac42]        # 0x448a48
  42de06:	nop
  42de07:	nop
  42de08:	jmp    QWORD PTR [rip+0x1ac32]        # 0x448a40
  42de0e:	nop
  42de0f:	nop
  42de10:	jmp    QWORD PTR [rip+0x1ac22]        # 0x448a38
  42de16:	nop
  42de17:	nop
  42de18:	jmp    QWORD PTR [rip+0x1ac12]        # 0x448a30
  42de1e:	nop
  42de1f:	nop
  42de20:	jmp    QWORD PTR [rip+0x1ac02]        # 0x448a28
  42de26:	nop
  42de27:	nop
  42de28:	jmp    QWORD PTR [rip+0x1abf2]        # 0x448a20
  42de2e:	nop
  42de2f:	nop
  42de30:	jmp    QWORD PTR [rip+0x1abe2]        # 0x448a18
  42de36:	nop
  42de37:	nop
  42de38:	jmp    QWORD PTR [rip+0x1abd2]        # 0x448a10
  42de3e:	nop
  42de3f:	nop
  42de40:	jmp    QWORD PTR [rip+0x1abc2]        # 0x448a08
  42de46:	nop
  42de47:	nop
  42de48:	jmp    QWORD PTR [rip+0x1abb2]        # 0x448a00
  42de4e:	nop
  42de4f:	nop
  42de50:	jmp    QWORD PTR [rip+0x1aba2]        # 0x4489f8
  42de56:	nop
  42de57:	nop
  42de58:	jmp    QWORD PTR [rip+0x1ab92]        # 0x4489f0
  42de5e:	nop
  42de5f:	nop
  42de60:	jmp    QWORD PTR [rip+0x1ab82]        # 0x4489e8
  42de66:	nop
  42de67:	nop
  42de68:	jmp    QWORD PTR [rip+0x1ab72]        # 0x4489e0
  42de6e:	nop
  42de6f:	nop
  42de70:	jmp    QWORD PTR [rip+0x1ab62]        # 0x4489d8
  42de76:	nop
  42de77:	nop
  42de78:	jmp    QWORD PTR [rip+0x1ab52]        # 0x4489d0
  42de7e:	nop
  42de7f:	nop
  42de80:	jmp    QWORD PTR [rip+0x1ab42]        # 0x4489c8
  42de86:	nop
  42de87:	nop
  42de88:	jmp    QWORD PTR [rip+0x1ab32]        # 0x4489c0
  42de8e:	nop
  42de8f:	nop
  42de90:	jmp    QWORD PTR [rip+0x1ab22]        # 0x4489b8
  42de96:	nop
  42de97:	nop
  42de98:	jmp    QWORD PTR [rip+0x1ab12]        # 0x4489b0
  42de9e:	nop
  42de9f:	nop
  42dea0:	jmp    QWORD PTR [rip+0x1ab02]        # 0x4489a8
  42dea6:	nop
  42dea7:	nop
  42dea8:	jmp    QWORD PTR [rip+0x1aaf2]        # 0x4489a0
  42deae:	nop
  42deaf:	nop
  42deb0:	jmp    QWORD PTR [rip+0x1aae2]        # 0x448998
  42deb6:	nop
  42deb7:	nop
  42deb8:	jmp    QWORD PTR [rip+0x1aad2]        # 0x448990
  42debe:	nop
  42debf:	nop
  42dec0:	jmp    QWORD PTR [rip+0x1aac2]        # 0x448988
  42dec6:	nop
  42dec7:	nop
  42dec8:	jmp    QWORD PTR [rip+0x1aab2]        # 0x448980
  42dece:	nop
  42decf:	nop
  42ded0:	jmp    QWORD PTR [rip+0x1aaa2]        # 0x448978
  42ded6:	nop
  42ded7:	nop
  42ded8:	jmp    QWORD PTR [rip+0x1aa92]        # 0x448970
  42dede:	nop
  42dedf:	nop
  42dee0:	jmp    QWORD PTR [rip+0x1aa82]        # 0x448968
  42dee6:	nop
  42dee7:	nop
  42dee8:	jmp    QWORD PTR [rip+0x1aa72]        # 0x448960
  42deee:	nop
  42deef:	nop
  42def0:	jmp    QWORD PTR [rip+0x1aa62]        # 0x448958
  42def6:	nop
  42def7:	nop
  42def8:	jmp    QWORD PTR [rip+0x1aa52]        # 0x448950
  42defe:	nop
  42deff:	nop
  42df00:	jmp    QWORD PTR [rip+0x1aa42]        # 0x448948
  42df06:	nop
  42df07:	nop
  42df08:	jmp    QWORD PTR [rip+0x1aa32]        # 0x448940
  42df0e:	nop
  42df0f:	nop
  42df10:	jmp    QWORD PTR [rip+0x1aa22]        # 0x448938
  42df16:	nop
  42df17:	nop
  42df18:	jmp    QWORD PTR [rip+0x1aa12]        # 0x448930
  42df1e:	nop
  42df1f:	nop
  42df20:	jmp    QWORD PTR [rip+0x1aa02]        # 0x448928
  42df26:	nop
  42df27:	nop
  42df28:	jmp    QWORD PTR [rip+0x1a9f2]        # 0x448920
  42df2e:	nop
  42df2f:	nop
  42df30:	jmp    QWORD PTR [rip+0x1a9e2]        # 0x448918
  42df36:	nop
  42df37:	nop
  42df38:	jmp    QWORD PTR [rip+0x1a9d2]        # 0x448910
  42df3e:	nop
  42df3f:	nop
  42df40:	jmp    QWORD PTR [rip+0x1a9c2]        # 0x448908
  42df46:	nop
  42df47:	nop
  42df48:	jmp    QWORD PTR [rip+0x1a9b2]        # 0x448900
  42df4e:	nop
  42df4f:	nop
  42df50:	jmp    QWORD PTR [rip+0x1a9a2]        # 0x4488f8
  42df56:	nop
  42df57:	nop
  42df58:	jmp    QWORD PTR [rip+0x1a992]        # 0x4488f0
  42df5e:	nop
  42df5f:	nop
  42df60:	jmp    QWORD PTR [rip+0x1a982]        # 0x4488e8
  42df66:	nop
  42df67:	nop
  42df68:	jmp    QWORD PTR [rip+0x1a972]        # 0x4488e0
  42df6e:	nop
  42df6f:	nop
  42df70:	jmp    QWORD PTR [rip+0x1a962]        # 0x4488d8
  42df76:	nop
  42df77:	nop
  42df78:	jmp    QWORD PTR [rip+0x1a952]        # 0x4488d0
  42df7e:	nop
  42df7f:	nop
  42df80:	jmp    QWORD PTR [rip+0x1a942]        # 0x4488c8
  42df86:	nop
  42df87:	nop
  42df88:	jmp    QWORD PTR [rip+0x1a932]        # 0x4488c0
  42df8e:	nop
  42df8f:	nop
  42df90:	jmp    QWORD PTR [rip+0x1a922]        # 0x4488b8
  42df96:	nop
  42df97:	nop
  42df98:	jmp    QWORD PTR [rip+0x1a912]        # 0x4488b0
  42df9e:	nop
  42df9f:	nop
  42dfa0:	jmp    QWORD PTR [rip+0x1a902]        # 0x4488a8
  42dfa6:	nop
  42dfa7:	nop
  42dfa8:	jmp    QWORD PTR [rip+0x1a8f2]        # 0x4488a0
  42dfae:	nop
  42dfaf:	nop
  42dfb0:	jmp    QWORD PTR [rip+0x1a8e2]        # 0x448898
  42dfb6:	nop
  42dfb7:	nop
  42dfb8:	jmp    QWORD PTR [rip+0x1a8d2]        # 0x448890
  42dfbe:	nop
  42dfbf:	nop
  42dfc0:	jmp    QWORD PTR [rip+0x1a8c2]        # 0x448888
  42dfc6:	nop
  42dfc7:	nop
  42dfc8:	jmp    QWORD PTR [rip+0x1a8b2]        # 0x448880
  42dfce:	nop
  42dfcf:	nop
  42dfd0:	jmp    QWORD PTR [rip+0x1a8a2]        # 0x448878
  42dfd6:	nop
  42dfd7:	nop
  42dfd8:	jmp    QWORD PTR [rip+0x1a892]        # 0x448870
  42dfde:	nop
  42dfdf:	nop
  42dfe0:	jmp    QWORD PTR [rip+0x1a882]        # 0x448868
  42dfe6:	nop
  42dfe7:	nop
  42dfe8:	jmp    QWORD PTR [rip+0x1a872]        # 0x448860
  42dfee:	nop
  42dfef:	nop
  42dff0:	jmp    QWORD PTR [rip+0x1a862]        # 0x448858
  42dff6:	nop
  42dff7:	nop
  42dff8:	jmp    QWORD PTR [rip+0x1a84a]        # 0x448848
  42dffe:	nop
  42dfff:	nop
  42e000:	jmp    QWORD PTR [rip+0x1a83a]        # 0x448840
  42e006:	nop
  42e007:	nop
  42e008:	jmp    QWORD PTR [rip+0x1a82a]        # 0x448838
  42e00e:	nop
  42e00f:	nop
  42e010:	jmp    QWORD PTR [rip+0x1a81a]        # 0x448830
  42e016:	nop
  42e017:	nop
  42e018:	jmp    QWORD PTR [rip+0x1a802]        # 0x448820
  42e01e:	nop
  42e01f:	nop
  42e020:	jmp    QWORD PTR [rip+0x1a7f2]        # 0x448818
  42e026:	nop
  42e027:	nop
  42e028:	jmp    QWORD PTR [rip+0x1a7e2]        # 0x448810
  42e02e:	nop
  42e02f:	nop
  42e030:	jmp    QWORD PTR [rip+0x1a7ca]        # 0x448800
  42e036:	nop
  42e037:	nop
  42e038:	jmp    QWORD PTR [rip+0x1a7ba]        # 0x4487f8
  42e03e:	nop
  42e03f:	nop
  42e040:	jmp    QWORD PTR [rip+0x1a7a2]        # 0x4487e8
  42e046:	nop
  42e047:	nop
  42e048:	jmp    QWORD PTR [rip+0x1a792]        # 0x4487e0
  42e04e:	nop
  42e04f:	nop
  42e050:	jmp    QWORD PTR [rip+0x1a77a]        # 0x4487d0
  42e056:	nop
  42e057:	nop
  42e058:	jmp    QWORD PTR [rip+0x1a76a]        # 0x4487c8
  42e05e:	nop
  42e05f:	nop
  42e060:	jmp    QWORD PTR [rip+0x1a75a]        # 0x4487c0
  42e066:	nop
  42e067:	nop
  42e068:	jmp    QWORD PTR [rip+0x1a74a]        # 0x4487b8
  42e06e:	nop
  42e06f:	nop
  42e070:	mov    rax,QWORD PTR [rip+0x17ed9]        # 0x445f50
  42e077:	ret    
  42e078:	nop    DWORD PTR [rax+rax*1+0x0]
  42e080:	mov    rax,rcx
  42e083:	xchg   QWORD PTR [rip+0x17ec6],rax        # 0x445f50
  42e08a:	ret    
  42e08b:	nop
  42e08c:	nop
  42e08d:	nop
  42e08e:	nop
  42e08f:	nop
  42e090:	mov    eax,DWORD PTR [rip+0x17eca]        # 0x445f60
  42e096:	ret    
  42e097:	nop    WORD PTR [rax+rax*1+0x0]
  42e0a0:	mov    eax,ecx
  42e0a2:	xchg   DWORD PTR [rip+0x17eb8],eax        # 0x445f60
  42e0a8:	ret    
  42e0a9:	nop    DWORD PTR [rax+0x0]
  42e0b0:	push   rbx
  42e0b1:	sub    rsp,0x20
  42e0b5:	mov    ebx,ecx
  42e0b7:	lea    rcx,[rip+0xf702]        # 0x43d7c0
  42e0be:	call   QWORD PTR [rip+0x1a634]        # 0x4486f8
  42e0c4:	lea    rdx,[rip+0xf70b]        # 0x43d7d6
  42e0cb:	mov    rcx,rax
  42e0ce:	call   QWORD PTR [rip+0x1a62c]        # 0x448700
  42e0d4:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x42e0a0
  42e0db:	test   rax,rax
  42e0de:	mov    ecx,ebx
  42e0e0:	cmove  rax,rdx
  42e0e4:	mov    QWORD PTR [rip+0x3e3d],rax        # 0x431f28
  42e0eb:	add    rsp,0x20
  42e0ef:	pop    rbx
  42e0f0:	rex.W jmp rax
  42e0f3:	nop    DWORD PTR [rax]
  42e0f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e100:	sub    rsp,0x28
  42e104:	lea    rcx,[rip+0xf6b5]        # 0x43d7c0
  42e10b:	call   QWORD PTR [rip+0x1a5e7]        # 0x4486f8
  42e111:	lea    rdx,[rip+0xf6d1]        # 0x43d7e9
  42e118:	mov    rcx,rax
  42e11b:	call   QWORD PTR [rip+0x1a5df]        # 0x448700
  42e121:	lea    rdx,[rip+0xffffffffffffff68]        # 0x42e090
  42e128:	test   rax,rax
  42e12b:	cmove  rax,rdx
  42e12f:	mov    QWORD PTR [rip+0x3dea],rax        # 0x431f20
  42e136:	add    rsp,0x28
  42e13a:	rex.W jmp rax
  42e13d:	nop    DWORD PTR [rax]
  42e140:	mov    rax,QWORD PTR [rip+0x3de1]        # 0x431f28
  42e147:	rex.W jmp rax
  42e14a:	nop    WORD PTR [rax+rax*1+0x0]
  42e150:	mov    rax,QWORD PTR [rip+0x3dc9]        # 0x431f20
  42e157:	rex.W jmp rax
  42e15a:	nop
  42e15b:	nop
  42e15c:	nop
  42e15d:	nop
  42e15e:	nop
  42e15f:	nop
  42e160:	jmp    QWORD PTR [rip+0x1a9a2]        # 0x448b08
  42e166:	nop
  42e167:	nop
  42e168:	nop    DWORD PTR [rax+rax*1+0x0]
  42e170:	jmp    QWORD PTR [rip+0x1a632]        # 0x4487a8
  42e176:	nop
  42e177:	nop
  42e178:	jmp    QWORD PTR [rip+0x1a622]        # 0x4487a0
  42e17e:	nop
  42e17f:	nop
  42e180:	jmp    QWORD PTR [rip+0x1a612]        # 0x448798
  42e186:	nop
  42e187:	nop
  42e188:	jmp    QWORD PTR [rip+0x1a602]        # 0x448790
  42e18e:	nop
  42e18f:	nop
  42e190:	jmp    QWORD PTR [rip+0x1a5f2]        # 0x448788
  42e196:	nop
  42e197:	nop
  42e198:	jmp    QWORD PTR [rip+0x1a5e2]        # 0x448780
  42e19e:	nop
  42e19f:	nop
  42e1a0:	jmp    QWORD PTR [rip+0x1a5d2]        # 0x448778
  42e1a6:	nop
  42e1a7:	nop
  42e1a8:	jmp    QWORD PTR [rip+0x1a5c2]        # 0x448770
  42e1ae:	nop
  42e1af:	nop
  42e1b0:	jmp    QWORD PTR [rip+0x1a5b2]        # 0x448768
  42e1b6:	nop
  42e1b7:	nop
  42e1b8:	jmp    QWORD PTR [rip+0x1a5a2]        # 0x448760
  42e1be:	nop
  42e1bf:	nop
  42e1c0:	jmp    QWORD PTR [rip+0x1a592]        # 0x448758
  42e1c6:	nop
  42e1c7:	nop
  42e1c8:	jmp    QWORD PTR [rip+0x1a582]        # 0x448750
  42e1ce:	nop
  42e1cf:	nop
  42e1d0:	jmp    QWORD PTR [rip+0x1a572]        # 0x448748
  42e1d6:	nop
  42e1d7:	nop
  42e1d8:	jmp    QWORD PTR [rip+0x1a562]        # 0x448740
  42e1de:	nop
  42e1df:	nop
  42e1e0:	jmp    QWORD PTR [rip+0x1a552]        # 0x448738
  42e1e6:	nop
  42e1e7:	nop
  42e1e8:	jmp    QWORD PTR [rip+0x1a542]        # 0x448730
  42e1ee:	nop
  42e1ef:	nop
  42e1f0:	jmp    QWORD PTR [rip+0x1a532]        # 0x448728
  42e1f6:	nop
  42e1f7:	nop
  42e1f8:	jmp    QWORD PTR [rip+0x1a522]        # 0x448720
  42e1fe:	nop
  42e1ff:	nop
  42e200:	jmp    QWORD PTR [rip+0x1a512]        # 0x448718
  42e206:	nop
  42e207:	nop
  42e208:	jmp    QWORD PTR [rip+0x1a502]        # 0x448710
  42e20e:	nop
  42e20f:	nop
  42e210:	jmp    QWORD PTR [rip+0x1a4f2]        # 0x448708
  42e216:	nop
  42e217:	nop
  42e218:	jmp    QWORD PTR [rip+0x1a4e2]        # 0x448700
  42e21e:	nop
  42e21f:	nop
  42e220:	jmp    QWORD PTR [rip+0x1a4d2]        # 0x4486f8
  42e226:	nop
  42e227:	nop
  42e228:	jmp    QWORD PTR [rip+0x1a4c2]        # 0x4486f0
  42e22e:	nop
  42e22f:	nop
  42e230:	jmp    QWORD PTR [rip+0x1a4b2]        # 0x4486e8
  42e236:	nop
  42e237:	nop
  42e238:	jmp    QWORD PTR [rip+0x1a4a2]        # 0x4486e0
  42e23e:	nop
  42e23f:	nop
  42e240:	jmp    QWORD PTR [rip+0x1a492]        # 0x4486d8
  42e246:	nop
  42e247:	nop
  42e248:	jmp    QWORD PTR [rip+0x1a482]        # 0x4486d0
  42e24e:	nop
  42e24f:	nop
  42e250:	jmp    QWORD PTR [rip+0x1a472]        # 0x4486c8
  42e256:	nop
  42e257:	nop
  42e258:	jmp    QWORD PTR [rip+0x1a462]        # 0x4486c0
  42e25e:	nop
  42e25f:	nop
  42e260:	jmp    QWORD PTR [rip+0x1a452]        # 0x4486b8
  42e266:	nop
  42e267:	nop
  42e268:	nop    DWORD PTR [rax+rax*1+0x0]
  42e270:	push   rsi
  42e271:	push   rbx
  42e272:	sub    rsp,0x28
  42e276:	mov    ebx,ecx
  42e278:	mov    rsi,rdx
  42e27b:	call   0x427030
  42e280:	call   0x40e7e0
  42e285:	mov    rdx,rsi
  42e288:	mov    ecx,ebx
  42e28a:	call   0x408150
  42e28f:	xor    eax,eax
  42e291:	add    rsp,0x28
  42e295:	pop    rbx
  42e296:	pop    rsi
  42e297:	ret    
  42e298:	nop
  42e299:	nop
  42e29a:	nop
  42e29b:	nop
  42e29c:	nop
  42e29d:	nop
  42e29e:	nop
  42e29f:	nop
  42e2a0:	(bad)  
  42e2a1:	(bad)  
  42e2a2:	(bad)  
  42e2a3:	(bad)  
  42e2a4:	(bad)  
  42e2a5:	(bad)  
  42e2a6:	(bad)  
  42e2a7:	inc    DWORD PTR [rax]
  42e2a9:	add    BYTE PTR [rax],al
  42e2ab:	add    BYTE PTR [rax],al
  42e2ad:	add    BYTE PTR [rax],al
  42e2af:	add    bh,bh
  42e2b1:	(bad)  
  42e2b2:	(bad)  
  42e2b3:	(bad)  
  42e2b4:	(bad)  
  42e2b5:	(bad)  
  42e2b6:	(bad)  
  42e2b7:	inc    DWORD PTR [rax]
  42e2b9:	add    BYTE PTR [rax],al
  42e2bb:	add    BYTE PTR [rax],al
  42e2bd:	add    BYTE PTR [rax],al
	...
