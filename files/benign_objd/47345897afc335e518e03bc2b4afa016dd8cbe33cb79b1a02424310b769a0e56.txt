
47345897afc335e518e03bc2b4afa016dd8cbe33cb79b1a02424310b769a0e56.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0xd515]        # 0x40e530
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0xd516]        # 0x40e540
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0xd519]        # 0x40e550
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0xd4dc]        # 0x40e520
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0xd36f]        # 0x40e3c0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0xd4b1]        # 0x40e510
  40105f:	mov    DWORD PTR [rip+0xffa3],edx        # 0x411008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x406d90
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401d50
  401081:	mov    rdx,QWORD PTR [rip+0xd3c8]        # 0x40e450
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0xd3ae]        # 0x40e440
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0xd434]        # 0x40e4d0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0xd34b]        # 0x40e3f0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401930
  4010af:	mov    rax,QWORD PTR [rip+0xd29a]        # 0x40e350
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x406d90
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xb09]        # 0x401c30
  401127:	call   0x401c20
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0xd395]        # 0x40e500
  40116b:	lea    r8,[rip+0xfea6]        # 0x411018
  401172:	lea    rdx,[rip+0xfea7]        # 0x411020
  401179:	lea    rcx,[rip+0xfea8]        # 0x411028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xfe78],eax        # 0x411000
  401188:	lea    rax,[rip+0xfe71]        # 0x411000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0xd325]        # 0x40e4c0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x406da8
  4011a3:	mov    DWORD PTR [rip+0xfe67],eax        # 0x411010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0xd34a]        # 0x40e510
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0xd22b]        # 0x40e420
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x12566]        # 0x413768
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0xd207]        # 0x40e430
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0xfdba],0x1        # 0x411004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0xd13c]        # 0x40e3a0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401f40
  40127d:	lea    rcx,[rip+0x125c]        # 0x4024e0
  401284:	call   QWORD PTR [rip+0x124d6]        # 0x413760
  40128a:	mov    rdx,QWORD PTR [rip+0xd17f]        # 0x40e410
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x4023f0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x406dd0
  4012a5:	call   0x401d30
  4012aa:	mov    rax,QWORD PTR [rip+0xd10f]        # 0x40e3c0
  4012b1:	mov    QWORD PTR [rip+0x111a0],rax        # 0x412458
  4012b8:	mov    rax,QWORD PTR [rip+0xd121]        # 0x40e3e0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x11139],rax        # 0x412450
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x8cca],eax        # 0x40a000
  401336:	mov    r12d,DWORD PTR [rip+0xfceb]        # 0x411028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x406d10
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xfcc2]        # 0x411020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x406ce8
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x406d10
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x406d08
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xfc6a],rbp        # 0x411020
  4013b6:	call   0x401900
  4013bb:	mov    rax,QWORD PTR [rip+0xd00e]        # 0x40e3d0
  4013c2:	mov    rdx,QWORD PTR [rip+0xfc4f]        # 0x411018
  4013c9:	mov    ecx,DWORD PTR [rip+0xfc59]        # 0x411028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xfc3c]        # 0x411018
  4013dc:	mov    rdx,QWORD PTR [rip+0xfc3d]        # 0x411020
  4013e3:	call   0x406ee0
  4013e8:	mov    ecx,DWORD PTR [rip+0xfc1a]        # 0x411008
  4013ee:	mov    DWORD PTR [rip+0xfc18],eax        # 0x41100c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0xfc02]        # 0x411004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x406d78
  40140b:	mov    eax,DWORD PTR [rip+0xfbfb]        # 0x41100c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0xcff9]        # 0x40e430
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x406d80
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0xd02d]        # 0x40e490
  401463:	mov    rcx,QWORD PTR [rip+0xd016]        # 0x40e480
  40146a:	call   0x406d68
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x12277]        # 0x413710
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0xd009]        # 0x40e4b0
  4014a7:	mov    rcx,QWORD PTR [rip+0xcff2]        # 0x40e4a0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x406d68
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x406d38
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0xd035]        # 0x40e510
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401940
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0xd005]        # 0x40e510
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401940
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	jmp    QWORD PTR [rip+0x1219a]        # 0x4136d0
  401536:	nop
  401537:	nop
  401538:	jmp    QWORD PTR [rip+0x1218a]        # 0x4136c8
  40153e:	nop
  40153f:	nop
  401540:	jmp    QWORD PTR [rip+0x1217a]        # 0x4136c0
  401546:	nop
  401547:	nop
  401548:	jmp    QWORD PTR [rip+0x1216a]        # 0x4136b8
  40154e:	nop
  40154f:	nop
  401550:	jmp    QWORD PTR [rip+0x1215a]        # 0x4136b0
  401556:	nop
  401557:	nop
  401558:	jmp    QWORD PTR [rip+0x1214a]        # 0x4136a8
  40155e:	nop
  40155f:	nop
  401560:	jmp    QWORD PTR [rip+0x1213a]        # 0x4136a0
  401566:	nop
  401567:	nop
  401568:	jmp    QWORD PTR [rip+0x1212a]        # 0x413698
  40156e:	nop
  40156f:	nop
  401570:	jmp    QWORD PTR [rip+0x1211a]        # 0x413690
  401576:	nop
  401577:	nop
  401578:	jmp    QWORD PTR [rip+0x1210a]        # 0x413688
  40157e:	nop
  40157f:	nop
  401580:	jmp    QWORD PTR [rip+0x120fa]        # 0x413680
  401586:	nop
  401587:	nop
  401588:	jmp    QWORD PTR [rip+0x120ea]        # 0x413678
  40158e:	nop
  40158f:	nop
  401590:	jmp    QWORD PTR [rip+0x120da]        # 0x413670
  401596:	nop
  401597:	nop
  401598:	jmp    QWORD PTR [rip+0x120ca]        # 0x413668
  40159e:	nop
  40159f:	nop
  4015a0:	jmp    QWORD PTR [rip+0x120ba]        # 0x413660
  4015a6:	nop
  4015a7:	nop
  4015a8:	jmp    QWORD PTR [rip+0x120aa]        # 0x413658
  4015ae:	nop
  4015af:	nop
  4015b0:	jmp    QWORD PTR [rip+0x1209a]        # 0x413650
  4015b6:	nop
  4015b7:	nop
  4015b8:	jmp    QWORD PTR [rip+0x1208a]        # 0x413648
  4015be:	nop
  4015bf:	nop
  4015c0:	jmp    QWORD PTR [rip+0x1207a]        # 0x413640
  4015c6:	nop
  4015c7:	nop
  4015c8:	jmp    QWORD PTR [rip+0x1206a]        # 0x413638
  4015ce:	nop
  4015cf:	nop
  4015d0:	jmp    QWORD PTR [rip+0x1205a]        # 0x413630
  4015d6:	nop
  4015d7:	nop
  4015d8:	jmp    QWORD PTR [rip+0x1204a]        # 0x413628
  4015de:	nop
  4015df:	nop
  4015e0:	jmp    QWORD PTR [rip+0x1203a]        # 0x413620
  4015e6:	nop
  4015e7:	nop
  4015e8:	jmp    QWORD PTR [rip+0x1202a]        # 0x413618
  4015ee:	nop
  4015ef:	nop
  4015f0:	jmp    QWORD PTR [rip+0x1201a]        # 0x413610
  4015f6:	nop
  4015f7:	nop
  4015f8:	jmp    QWORD PTR [rip+0x1200a]        # 0x413608
  4015fe:	nop
  4015ff:	nop
  401600:	jmp    QWORD PTR [rip+0x11ffa]        # 0x413600
  401606:	nop
  401607:	nop
  401608:	jmp    QWORD PTR [rip+0x11fea]        # 0x4135f8
  40160e:	nop
  40160f:	nop
  401610:	jmp    QWORD PTR [rip+0x11fda]        # 0x4135f0
  401616:	nop
  401617:	nop
  401618:	jmp    QWORD PTR [rip+0x11fca]        # 0x4135e8
  40161e:	nop
  40161f:	nop
  401620:	jmp    QWORD PTR [rip+0x11fba]        # 0x4135e0
  401626:	nop
  401627:	nop
  401628:	jmp    QWORD PTR [rip+0x11faa]        # 0x4135d8
  40162e:	nop
  40162f:	nop
  401630:	jmp    QWORD PTR [rip+0x11f9a]        # 0x4135d0
  401636:	nop
  401637:	nop
  401638:	jmp    QWORD PTR [rip+0x11f8a]        # 0x4135c8
  40163e:	nop
  40163f:	nop
  401640:	jmp    QWORD PTR [rip+0x11f7a]        # 0x4135c0
  401646:	nop
  401647:	nop
  401648:	jmp    QWORD PTR [rip+0x11f6a]        # 0x4135b8
  40164e:	nop
  40164f:	nop
  401650:	jmp    QWORD PTR [rip+0x11f5a]        # 0x4135b0
  401656:	nop
  401657:	nop
  401658:	jmp    QWORD PTR [rip+0x11f4a]        # 0x4135a8
  40165e:	nop
  40165f:	nop
  401660:	jmp    QWORD PTR [rip+0x11f3a]        # 0x4135a0
  401666:	nop
  401667:	nop
  401668:	jmp    QWORD PTR [rip+0x11f2a]        # 0x413598
  40166e:	nop
  40166f:	nop
  401670:	jmp    QWORD PTR [rip+0x11f1a]        # 0x413590
  401676:	nop
  401677:	nop
  401678:	jmp    QWORD PTR [rip+0x11f0a]        # 0x413588
  40167e:	nop
  40167f:	nop
  401680:	jmp    QWORD PTR [rip+0x11efa]        # 0x413580
  401686:	nop
  401687:	nop
  401688:	jmp    QWORD PTR [rip+0x11eea]        # 0x413578
  40168e:	nop
  40168f:	nop
  401690:	jmp    QWORD PTR [rip+0x11eda]        # 0x413570
  401696:	nop
  401697:	nop
  401698:	jmp    QWORD PTR [rip+0x11eca]        # 0x413568
  40169e:	nop
  40169f:	nop
  4016a0:	jmp    QWORD PTR [rip+0x11eba]        # 0x413560
  4016a6:	nop
  4016a7:	nop
  4016a8:	jmp    QWORD PTR [rip+0x11eaa]        # 0x413558
  4016ae:	nop
  4016af:	nop
  4016b0:	jmp    QWORD PTR [rip+0x11e9a]        # 0x413550
  4016b6:	nop
  4016b7:	nop
  4016b8:	jmp    QWORD PTR [rip+0x11e8a]        # 0x413548
  4016be:	nop
  4016bf:	nop
  4016c0:	jmp    QWORD PTR [rip+0x11e7a]        # 0x413540
  4016c6:	nop
  4016c7:	nop
  4016c8:	jmp    QWORD PTR [rip+0x11e6a]        # 0x413538
  4016ce:	nop
  4016cf:	nop
  4016d0:	jmp    QWORD PTR [rip+0x11e5a]        # 0x413530
  4016d6:	nop
  4016d7:	nop
  4016d8:	jmp    QWORD PTR [rip+0x11e4a]        # 0x413528
  4016de:	nop
  4016df:	nop
  4016e0:	jmp    QWORD PTR [rip+0x11e3a]        # 0x413520
  4016e6:	nop
  4016e7:	nop
  4016e8:	jmp    QWORD PTR [rip+0x11e2a]        # 0x413518
  4016ee:	nop
  4016ef:	nop
  4016f0:	jmp    QWORD PTR [rip+0x11e1a]        # 0x413510
  4016f6:	nop
  4016f7:	nop
  4016f8:	jmp    QWORD PTR [rip+0x11e0a]        # 0x413508
  4016fe:	nop
  4016ff:	nop
  401700:	jmp    QWORD PTR [rip+0x11dfa]        # 0x413500
  401706:	nop
  401707:	nop
  401708:	jmp    QWORD PTR [rip+0x11dea]        # 0x4134f8
  40170e:	nop
  40170f:	nop
  401710:	jmp    QWORD PTR [rip+0x11dda]        # 0x4134f0
  401716:	nop
  401717:	nop
  401718:	jmp    QWORD PTR [rip+0x11dca]        # 0x4134e8
  40171e:	nop
  40171f:	nop
  401720:	jmp    QWORD PTR [rip+0x11dba]        # 0x4134e0
  401726:	nop
  401727:	nop
  401728:	jmp    QWORD PTR [rip+0x11daa]        # 0x4134d8
  40172e:	nop
  40172f:	nop
  401730:	jmp    QWORD PTR [rip+0x11d9a]        # 0x4134d0
  401736:	nop
  401737:	nop
  401738:	jmp    QWORD PTR [rip+0x11d8a]        # 0x4134c8
  40173e:	nop
  40173f:	nop
  401740:	jmp    QWORD PTR [rip+0x11d7a]        # 0x4134c0
  401746:	nop
  401747:	nop
  401748:	jmp    QWORD PTR [rip+0x11d6a]        # 0x4134b8
  40174e:	nop
  40174f:	nop
  401750:	jmp    QWORD PTR [rip+0x11d5a]        # 0x4134b0
  401756:	nop
  401757:	nop
  401758:	jmp    QWORD PTR [rip+0x11d4a]        # 0x4134a8
  40175e:	nop
  40175f:	nop
  401760:	jmp    QWORD PTR [rip+0x11d3a]        # 0x4134a0
  401766:	nop
  401767:	nop
  401768:	jmp    QWORD PTR [rip+0x11d2a]        # 0x413498
  40176e:	nop
  40176f:	nop
  401770:	jmp    QWORD PTR [rip+0x11d1a]        # 0x413490
  401776:	nop
  401777:	nop
  401778:	jmp    QWORD PTR [rip+0x11d0a]        # 0x413488
  40177e:	nop
  40177f:	nop
  401780:	jmp    QWORD PTR [rip+0x11cfa]        # 0x413480
  401786:	nop
  401787:	nop
  401788:	nop    DWORD PTR [rax+rax*1+0x0]
  401790:	push   rbx
  401791:	sub    rsp,0x30
  401795:	mov    rbx,rcx
  401798:	mov    rcx,QWORD PTR [rip+0x10cc1]        # 0x412460
  40179f:	call   0x401d40
  4017a4:	cmp    rax,0xffffffffffffffff
  4017a8:	mov    QWORD PTR [rsp+0x20],rax
  4017ad:	je     0x401825
  4017af:	mov    ecx,0x8
  4017b4:	call   0x406d60
  4017b9:	mov    rcx,QWORD PTR [rip+0x10ca0]        # 0x412460
  4017c0:	call   0x401d40
  4017c5:	mov    rcx,QWORD PTR [rip+0x10c9c]        # 0x412468
  4017cc:	mov    QWORD PTR [rsp+0x20],rax
  4017d1:	call   0x401d40
  4017d6:	lea    rdx,[rsp+0x20]
  4017db:	lea    r8,[rsp+0x28]
  4017e0:	mov    rcx,rbx
  4017e3:	mov    QWORD PTR [rsp+0x28],rax
  4017e8:	call   0x406db0
  4017ed:	mov    rcx,QWORD PTR [rsp+0x20]
  4017f2:	mov    rbx,rax
  4017f5:	call   0x401d50
  4017fa:	mov    rcx,QWORD PTR [rsp+0x28]
  4017ff:	mov    QWORD PTR [rip+0x10c5a],rax        # 0x412460
  401806:	call   0x401d50
  40180b:	mov    ecx,0x8
  401810:	mov    QWORD PTR [rip+0x10c51],rax        # 0x412468
  401817:	call   0x406d50
  40181c:	mov    rax,rbx
  40181f:	add    rsp,0x30
  401823:	pop    rbx
  401824:	ret    
  401825:	mov    rax,QWORD PTR [rip+0xcbd4]        # 0x40e400
  40182c:	mov    rcx,rbx
  40182f:	call   QWORD PTR [rax]
  401831:	add    rsp,0x30
  401835:	pop    rbx
  401836:	ret    
  401837:	nop    WORD PTR [rax+rax*1+0x0]
  401840:	sub    rsp,0x28
  401844:	call   0x401790
  401849:	test   rax,rax
  40184c:	sete   al
  40184f:	movzx  eax,al
  401852:	neg    eax
  401854:	add    rsp,0x28
  401858:	ret    
  401859:	nop
  40185a:	nop
  40185b:	nop
  40185c:	nop
  40185d:	nop
  40185e:	nop
  40185f:	nop
  401860:	sub    rsp,0x28
  401864:	mov    rax,QWORD PTR [rip+0x87a5]        # 0x40a010
  40186b:	mov    rax,QWORD PTR [rax]
  40186e:	test   rax,rax
  401871:	je     0x401890
  401873:	call   rax
  401875:	mov    rax,QWORD PTR [rip+0x8794]        # 0x40a010
  40187c:	lea    rdx,[rax+0x8]
  401880:	mov    rax,QWORD PTR [rax+0x8]
  401884:	mov    QWORD PTR [rip+0x8785],rdx        # 0x40a010
  40188b:	test   rax,rax
  40188e:	jne    0x401873
  401890:	add    rsp,0x28
  401894:	ret    
  401895:	nop
  401896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4018a0:	push   rsi
  4018a1:	push   rbx
  4018a2:	sub    rsp,0x28
  4018a6:	mov    rsi,QWORD PTR [rip+0xcab3]        # 0x40e360
  4018ad:	mov    rax,QWORD PTR [rsi]
  4018b0:	cmp    eax,0xffffffff
  4018b3:	mov    ebx,eax
  4018b5:	je     0x4018e0
  4018b7:	test   ebx,ebx
  4018b9:	je     0x4018ca
  4018bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4018c0:	mov    eax,ebx
  4018c2:	call   QWORD PTR [rsi+rax*8]
  4018c5:	sub    ebx,0x1
  4018c8:	jne    0x4018c0
  4018ca:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401860
  4018d1:	add    rsp,0x28
  4018d5:	pop    rbx
  4018d6:	pop    rsi
  4018d7:	jmp    0x401840
  4018dc:	nop    DWORD PTR [rax+0x0]
  4018e0:	xor    ebx,ebx
  4018e2:	jmp    0x4018e6
  4018e4:	mov    ebx,eax
  4018e6:	lea    edx,[rbx+0x1]
  4018e9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4018ee:	mov    rax,rdx
  4018f1:	jne    0x4018e4
  4018f3:	jmp    0x4018b7
  4018f5:	nop
  4018f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401900:	mov    eax,DWORD PTR [rip+0xf72a]        # 0x411030
  401906:	test   eax,eax
  401908:	je     0x401910
  40190a:	repz ret 
  40190c:	nop    DWORD PTR [rax+0x0]
  401910:	mov    DWORD PTR [rip+0xf716],0x1        # 0x411030
  40191a:	jmp    0x4018a0
  40191c:	nop
  40191d:	nop
  40191e:	nop
  40191f:	nop
  401920:	mov    rax,QWORD PTR [rip+0x11ea1]        # 0x4137c8
  401927:	rex.W jmp rax
  40192a:	nop
  40192b:	nop
  40192c:	nop
  40192d:	nop
  40192e:	nop
  40192f:	nop
  401930:	xor    eax,eax
  401932:	ret    
  401933:	nop
  401934:	nop
  401935:	nop
  401936:	nop
  401937:	nop
  401938:	nop
  401939:	nop
  40193a:	nop
  40193b:	nop
  40193c:	nop
  40193d:	nop
  40193e:	nop
  40193f:	nop
  401940:	push   r12
  401942:	push   rbp
  401943:	push   rdi
  401944:	push   rsi
  401945:	push   rbx
  401946:	sub    rsp,0x40
  40194a:	mov    rbx,QWORD PTR [rip+0x874f]        # 0x40a0a0
  401951:	movabs rax,0x2b992ddfa232
  40195b:	mov    QWORD PTR [rsp+0x20],0x0
  401964:	cmp    rbx,rax
  401967:	je     0x401980
  401969:	not    rbx
  40196c:	mov    QWORD PTR [rip+0x873d],rbx        # 0x40a0b0
  401973:	add    rsp,0x40
  401977:	pop    rbx
  401978:	pop    rsi
  401979:	pop    rdi
  40197a:	pop    rbp
  40197b:	pop    r12
  40197d:	ret    
  40197e:	xchg   ax,ax
  401980:	lea    rcx,[rsp+0x20]
  401985:	call   QWORD PTR [rip+0x11d8d]        # 0x413718
  40198b:	mov    r12,QWORD PTR [rsp+0x20]
  401990:	call   QWORD PTR [rip+0x11d62]        # 0x4136f8
  401996:	mov    ebp,eax
  401998:	call   QWORD PTR [rip+0x11d62]        # 0x413700
  40199e:	mov    edi,eax
  4019a0:	call   QWORD PTR [rip+0x11d7a]        # 0x413720
  4019a6:	lea    rcx,[rsp+0x30]
  4019ab:	mov    esi,eax
  4019ad:	call   QWORD PTR [rip+0x11d85]        # 0x413738
  4019b3:	xor    r12,QWORD PTR [rsp+0x30]
  4019b8:	mov    edx,edi
  4019ba:	movabs rax,0xffffffffffff
  4019c4:	xor    rbp,r12
  4019c7:	mov    rdi,rbp
  4019ca:	xor    rdi,rdx
  4019cd:	mov    edx,esi
  4019cf:	xor    rdi,rdx
  4019d2:	mov    rsi,rdi
  4019d5:	and    rsi,rax
  4019d8:	cmp    rsi,rbx
  4019db:	je     0x401a00
  4019dd:	mov    rax,rsi
  4019e0:	not    rax
  4019e3:	mov    QWORD PTR [rip+0x86b6],rsi        # 0x40a0a0
  4019ea:	mov    QWORD PTR [rip+0x86bf],rax        # 0x40a0b0
  4019f1:	add    rsp,0x40
  4019f5:	pop    rbx
  4019f6:	pop    rsi
  4019f7:	pop    rdi
  4019f8:	pop    rbp
  4019f9:	pop    r12
  4019fb:	ret    
  4019fc:	nop    DWORD PTR [rax+0x0]
  401a00:	movabs rax,0xffffd466d2205dcc
  401a0a:	movabs rsi,0x2b992ddfa233
  401a14:	jmp    0x4019e3
  401a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a20:	push   rbp
  401a21:	push   rsi
  401a22:	push   rbx
  401a23:	mov    rbp,rsp
  401a26:	sub    rsp,0x70
  401a2a:	mov    rsi,rcx
  401a2d:	lea    rcx,[rip+0xf64c]        # 0x411080
  401a34:	call   QWORD PTR [rip+0x11d0e]        # 0x413748
  401a3a:	mov    rbx,QWORD PTR [rip+0xf737]        # 0x411178
  401a41:	xor    r8d,r8d
  401a44:	lea    rdx,[rbp-0x28]
  401a48:	mov    rcx,rbx
  401a4b:	call   QWORD PTR [rip+0x11cff]        # 0x413750
  401a51:	test   rax,rax
  401a54:	mov    r9,rax
  401a57:	je     0x401b00
  401a5d:	lea    rax,[rbp-0x20]
  401a61:	mov    QWORD PTR [rsp+0x38],0x0
  401a6a:	mov    r8,rbx
  401a6d:	mov    rdx,QWORD PTR [rbp-0x28]
  401a71:	xor    ecx,ecx
  401a73:	mov    QWORD PTR [rsp+0x30],rax
  401a78:	lea    rax,[rbp-0x18]
  401a7c:	mov    QWORD PTR [rsp+0x28],rax
  401a81:	lea    rax,[rip+0xf5f8]        # 0x411080
  401a88:	mov    QWORD PTR [rsp+0x20],rax
  401a8d:	call   QWORD PTR [rip+0x11cc5]        # 0x413758
  401a93:	mov    rax,QWORD PTR [rip+0xf6de]        # 0x411178
  401a9a:	xor    ecx,ecx
  401a9c:	mov    QWORD PTR [rip+0xf65d],rsi        # 0x411100
  401aa3:	mov    DWORD PTR [rip+0xfad3],0xc0000409        # 0x411580
  401aad:	mov    DWORD PTR [rip+0xfacd],0x1        # 0x411584
  401ab7:	mov    QWORD PTR [rip+0xfad2],rax        # 0x411590
  401abe:	mov    rax,QWORD PTR [rip+0x85db]        # 0x40a0a0
  401ac5:	mov    QWORD PTR [rbp-0x10],rax
  401ac9:	mov    rax,QWORD PTR [rip+0x85e0]        # 0x40a0b0
  401ad0:	mov    QWORD PTR [rbp-0x8],rax
  401ad4:	call   QWORD PTR [rip+0x11c86]        # 0x413760
  401ada:	lea    rcx,[rip+0xc21f]        # 0x40dd00
  401ae1:	call   QWORD PTR [rip+0x11c99]        # 0x413780
  401ae7:	call   QWORD PTR [rip+0x11c03]        # 0x4136f0
  401aed:	mov    edx,0xc0000409
  401af2:	mov    rcx,rax
  401af5:	call   QWORD PTR [rip+0x11c75]        # 0x413770
  401afb:	call   0x406d48
  401b00:	mov    rax,QWORD PTR [rbp+0x18]
  401b04:	mov    QWORD PTR [rip+0xf66d],rax        # 0x411178
  401b0b:	lea    rax,[rbp+0x8]
  401b0f:	mov    QWORD PTR [rip+0xf602],rax        # 0x411118
  401b16:	jmp    0x401a93
  401b1b:	nop
  401b1c:	nop
  401b1d:	nop
  401b1e:	nop
  401b1f:	nop
  401b20:	sub    rsp,0x28
  401b24:	test   edx,edx
  401b26:	je     0x401b40
  401b28:	cmp    edx,0x3
  401b2b:	je     0x401b40
  401b2d:	mov    eax,0x1
  401b32:	add    rsp,0x28
  401b36:	ret    
  401b37:	nop    WORD PTR [rax+rax*1+0x0]
  401b40:	call   0x402830
  401b45:	mov    eax,0x1
  401b4a:	add    rsp,0x28
  401b4e:	ret    
  401b4f:	nop
  401b50:	push   rsi
  401b51:	push   rbx
  401b52:	sub    rsp,0x28
  401b56:	mov    rax,QWORD PTR [rip+0xc7e3]        # 0x40e340
  401b5d:	cmp    DWORD PTR [rax],0x2
  401b60:	je     0x401b68
  401b62:	mov    DWORD PTR [rax],0x2
  401b68:	cmp    edx,0x2
  401b6b:	je     0x401b80
  401b6d:	cmp    edx,0x1
  401b70:	je     0x401bb2
  401b72:	mov    eax,0x1
  401b77:	add    rsp,0x28
  401b7b:	pop    rbx
  401b7c:	pop    rsi
  401b7d:	ret    
  401b7e:	xchg   ax,ax
  401b80:	lea    rbx,[rip+0x134d9]        # 0x415060
  401b87:	lea    rsi,[rip+0x134d2]        # 0x415060
  401b8e:	cmp    rbx,rsi
  401b91:	je     0x401b72
  401b93:	mov    rax,QWORD PTR [rbx]
  401b96:	test   rax,rax
  401b99:	je     0x401b9d
  401b9b:	call   rax
  401b9d:	add    rbx,0x8
  401ba1:	cmp    rbx,rsi
  401ba4:	jne    0x401b93
  401ba6:	mov    eax,0x1
  401bab:	add    rsp,0x28
  401baf:	pop    rbx
  401bb0:	pop    rsi
  401bb1:	ret    
  401bb2:	call   0x402830
  401bb7:	jmp    0x401b72
  401bb9:	nop    DWORD PTR [rax+0x0]
  401bc0:	xor    eax,eax
  401bc2:	ret    
  401bc3:	nop
  401bc4:	nop
  401bc5:	nop
  401bc6:	nop
  401bc7:	nop
  401bc8:	nop
  401bc9:	nop
  401bca:	nop
  401bcb:	nop
  401bcc:	nop
  401bcd:	nop
  401bce:	nop
  401bcf:	nop
  401bd0:	sub    rsp,0x58
  401bd4:	mov    rax,QWORD PTR [rip+0xfa85]        # 0x411660
  401bdb:	test   rax,rax
  401bde:	je     0x401c0c
  401be0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401be9:	mov    DWORD PTR [rsp+0x20],ecx
  401bed:	lea    rcx,[rsp+0x20]
  401bf2:	mov    QWORD PTR [rsp+0x28],rdx
  401bf7:	movsd  QWORD PTR [rsp+0x30],xmm2
  401bfd:	movsd  QWORD PTR [rsp+0x38],xmm3
  401c03:	movsd  QWORD PTR [rsp+0x40],xmm0
  401c09:	call   rax
  401c0b:	nop
  401c0c:	add    rsp,0x58
  401c10:	ret    
  401c11:	nop    DWORD PTR [rax+rax*1+0x0]
  401c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c20:	mov    QWORD PTR [rip+0xfa39],rcx        # 0x411660
  401c27:	jmp    0x406d88
  401c2c:	nop    DWORD PTR [rax+0x0]
  401c30:	push   rsi
  401c31:	push   rbx
  401c32:	sub    rsp,0x78
  401c36:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401c3b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401c40:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401c46:	cmp    DWORD PTR [rcx],0x6
  401c49:	ja     0x401d20
  401c4f:	mov    edx,DWORD PTR [rcx]
  401c51:	lea    rax,[rip+0xc1ec]        # 0x40de44
  401c58:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401c5c:	add    rax,rdx
  401c5f:	jmp    rax
  401c61:	lea    rbx,[rip+0xc0b8]        # 0x40dd20
  401c68:	nop    DWORD PTR [rax+rax*1+0x0]
  401c70:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401c76:	mov    rsi,QWORD PTR [rcx+0x8]
  401c7a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401c7f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401c84:	call   0x406da0
  401c89:	movsd  QWORD PTR [rsp+0x30],xmm8
  401c90:	lea    rcx,[rax+0x60]
  401c94:	lea    rdx,[rip+0xc17d]        # 0x40de18
  401c9b:	movsd  QWORD PTR [rsp+0x28],xmm7
  401ca1:	mov    r9,rsi
  401ca4:	mov    r8,rbx
  401ca7:	movsd  QWORD PTR [rsp+0x20],xmm6
  401cad:	call   0x406d30
  401cb2:	nop
  401cb3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401cb8:	xor    eax,eax
  401cba:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401cbf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401cc5:	add    rsp,0x78
  401cc9:	pop    rbx
  401cca:	pop    rsi
  401ccb:	ret    
  401ccc:	nop    DWORD PTR [rax+0x0]
  401cd0:	lea    rbx,[rip+0xc068]        # 0x40dd3f
  401cd7:	jmp    0x401c70
  401cd9:	nop    DWORD PTR [rax+0x0]
  401ce0:	lea    rbx,[rip+0xc079]        # 0x40dd60
  401ce7:	jmp    0x401c70
  401ce9:	nop    DWORD PTR [rax+0x0]
  401cf0:	lea    rbx,[rip+0xc0d9]        # 0x40ddd0
  401cf7:	jmp    0x401c70
  401cfc:	nop    DWORD PTR [rax+0x0]
  401d00:	lea    rbx,[rip+0xc0a1]        # 0x40dda8
  401d07:	jmp    0x401c70
  401d0c:	nop    DWORD PTR [rax+0x0]
  401d10:	lea    rbx,[rip+0xc069]        # 0x40dd80
  401d17:	jmp    0x401c70
  401d1c:	nop    DWORD PTR [rax+0x0]
  401d20:	lea    rbx,[rip+0xc0df]        # 0x40de06
  401d27:	jmp    0x401c70
  401d2c:	nop
  401d2d:	nop
  401d2e:	nop
  401d2f:	nop
  401d30:	fninit 
  401d32:	ret    
  401d33:	nop
  401d34:	nop
  401d35:	nop
  401d36:	nop
  401d37:	nop
  401d38:	nop
  401d39:	nop
  401d3a:	nop
  401d3b:	nop
  401d3c:	nop
  401d3d:	nop
  401d3e:	nop
  401d3f:	nop
  401d40:	mov    rax,rcx
  401d43:	ret    
  401d44:	xchg   ax,ax
  401d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d50:	mov    rax,rcx
  401d53:	ret    
  401d54:	nop
  401d55:	nop
  401d56:	nop
  401d57:	nop
  401d58:	nop
  401d59:	nop
  401d5a:	nop
  401d5b:	nop
  401d5c:	nop
  401d5d:	nop
  401d5e:	nop
  401d5f:	nop
  401d60:	push   rsi
  401d61:	push   rbx
  401d62:	sub    rsp,0x38
  401d66:	lea    rax,[rsp+0x58]
  401d6b:	mov    rbx,rcx
  401d6e:	mov    QWORD PTR [rsp+0x58],rdx
  401d73:	mov    QWORD PTR [rsp+0x60],r8
  401d78:	mov    QWORD PTR [rsp+0x68],r9
  401d7d:	mov    QWORD PTR [rsp+0x28],rax
  401d82:	call   0x406da0
  401d87:	lea    rcx,[rip+0xc0d2]        # 0x40de60
  401d8e:	lea    r9,[rax+0x60]
  401d92:	mov    r8d,0x1b
  401d98:	mov    edx,0x1
  401d9d:	call   0x406d20
  401da2:	mov    rsi,QWORD PTR [rsp+0x28]
  401da7:	call   0x406da0
  401dac:	lea    rcx,[rax+0x60]
  401db0:	mov    rdx,rbx
  401db3:	mov    r8,rsi
  401db6:	call   0x406cd0
  401dbb:	call   0x406d48
  401dc0:	nop
  401dc1:	nop    DWORD PTR [rax+rax*1+0x0]
  401dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401dd0:	push   r13
  401dd2:	push   r12
  401dd4:	push   rbp
  401dd5:	push   rdi
  401dd6:	push   rsi
  401dd7:	push   rbx
  401dd8:	sub    rsp,0x58
  401ddc:	movsxd rbp,DWORD PTR [rip+0xf8a1]        # 0x411684
  401de3:	mov    rbx,rcx
  401de6:	mov    rsi,rdx
  401de9:	mov    rdi,r8
  401dec:	test   ebp,ebp
  401dee:	jle    0x401eea
  401df4:	mov    rax,QWORD PTR [rip+0xf88d]        # 0x411688
  401dfb:	xor    r9d,r9d
  401dfe:	add    rax,0x8
  401e02:	mov    r10,QWORD PTR [rax]
  401e05:	cmp    rbx,r10
  401e08:	jb     0x401e1e
  401e0a:	mov    rdx,QWORD PTR [rax+0x8]
  401e0e:	mov    r11d,DWORD PTR [rdx+0x8]
  401e12:	add    r10,r11
  401e15:	cmp    rbx,r10
  401e18:	jb     0x401ed0
  401e1e:	add    r9d,0x1
  401e22:	add    rax,0x18
  401e26:	cmp    r9d,ebp
  401e29:	jne    0x401e02
  401e2b:	mov    rcx,rbx
  401e2e:	call   0x402a40
  401e33:	test   rax,rax
  401e36:	mov    r12,rax
  401e39:	je     0x401f22
  401e3f:	lea    rbp,[rbp+rbp*2+0x0]
  401e44:	shl    rbp,0x3
  401e48:	mov    r13,rbp
  401e4b:	add    r13,QWORD PTR [rip+0xf836]        # 0x411688
  401e52:	mov    QWORD PTR [r13+0x10],rax
  401e56:	mov    DWORD PTR [r13+0x0],0x0
  401e5e:	call   0x402b60
  401e63:	mov    edx,DWORD PTR [r12+0xc]
  401e68:	mov    r8d,0x30
  401e6e:	add    rax,rdx
  401e71:	lea    rdx,[rsp+0x20]
  401e76:	mov    QWORD PTR [r13+0x8],rax
  401e7a:	mov    rax,QWORD PTR [rip+0xf807]        # 0x411688
  401e81:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401e86:	call   QWORD PTR [rip+0x11904]        # 0x413790
  401e8c:	test   rax,rax
  401e8f:	je     0x401f05
  401e91:	mov    eax,DWORD PTR [rsp+0x44]
  401e95:	lea    edx,[rax-0x4]
  401e98:	and    edx,0xfffffffb
  401e9b:	je     0x401ec9
  401e9d:	sub    eax,0x40
  401ea0:	and    eax,0xffffffbf
  401ea3:	je     0x401ec9
  401ea5:	mov    r9,rbp
  401ea8:	add    r9,QWORD PTR [rip+0xf7d9]        # 0x411688
  401eaf:	mov    r8d,0x40
  401eb5:	mov    rdx,QWORD PTR [rsp+0x38]
  401eba:	mov    rcx,QWORD PTR [rsp+0x20]
  401ebf:	call   QWORD PTR [rip+0x118c3]        # 0x413788
  401ec5:	test   eax,eax
  401ec7:	je     0x401ef1
  401ec9:	add    DWORD PTR [rip+0xf7b4],0x1        # 0x411684
  401ed0:	mov    r8,rdi
  401ed3:	mov    rdx,rsi
  401ed6:	mov    rcx,rbx
  401ed9:	add    rsp,0x58
  401edd:	pop    rbx
  401ede:	pop    rsi
  401edf:	pop    rdi
  401ee0:	pop    rbp
  401ee1:	pop    r12
  401ee3:	pop    r13
  401ee5:	jmp    0x406d08
  401eea:	xor    ebp,ebp
  401eec:	jmp    0x401e2b
  401ef1:	call   QWORD PTR [rip+0x11811]        # 0x413708
  401ef7:	lea    rcx,[rip+0xbfda]        # 0x40ded8
  401efe:	mov    edx,eax
  401f00:	call   0x401d60
  401f05:	mov    rax,QWORD PTR [rip+0xf77c]        # 0x411688
  401f0c:	mov    edx,DWORD PTR [r12+0x8]
  401f11:	lea    rcx,[rip+0xbf88]        # 0x40dea0
  401f18:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401f1d:	call   0x401d60
  401f22:	lea    rcx,[rip+0xbf57]        # 0x40de80
  401f29:	mov    rdx,rbx
  401f2c:	call   0x401d60
  401f31:	nop
  401f32:	nop    DWORD PTR [rax+0x0]
  401f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f40:	push   rbp
  401f41:	push   r14
  401f43:	push   r13
  401f45:	push   r12
  401f47:	push   rdi
  401f48:	push   rsi
  401f49:	push   rbx
  401f4a:	mov    rbp,rsp
  401f4d:	sub    rsp,0x60
  401f51:	mov    ebx,DWORD PTR [rip+0xf729]        # 0x411680
  401f57:	test   ebx,ebx
  401f59:	je     0x401f70
  401f5b:	mov    rsp,rbp
  401f5e:	pop    rbx
  401f5f:	pop    rsi
  401f60:	pop    rdi
  401f61:	pop    r12
  401f63:	pop    r13
  401f65:	pop    r14
  401f67:	pop    rbp
  401f68:	ret    
  401f69:	nop    DWORD PTR [rax+0x0]
  401f70:	mov    DWORD PTR [rip+0xf706],0x1        # 0x411680
  401f7a:	call   0x402a90
  401f7f:	cdqe   
  401f81:	lea    rax,[rax+rax*2]
  401f85:	lea    rax,[rax*8+0x1e]
  401f8d:	and    rax,0xfffffffffffffff0
  401f91:	call   0x402cb0
  401f96:	mov    rsi,QWORD PTR [rip+0xc3d3]        # 0x40e370
  401f9d:	mov    rbx,QWORD PTR [rip+0xc3dc]        # 0x40e380
  401fa4:	sub    rsp,rax
  401fa7:	mov    DWORD PTR [rip+0xf6d3],0x0        # 0x411684
  401fb1:	lea    rax,[rsp+0x20]
  401fb6:	mov    QWORD PTR [rip+0xf6cb],rax        # 0x411688
  401fbd:	mov    rax,rsi
  401fc0:	sub    rax,rbx
  401fc3:	cmp    rax,0x7
  401fc7:	jle    0x401f5b
  401fc9:	cmp    rax,0xb
  401fcd:	jle    0x401ff5
  401fcf:	mov    r11d,DWORD PTR [rbx]
  401fd2:	test   r11d,r11d
  401fd5:	jne    0x402120
  401fdb:	mov    r10d,DWORD PTR [rbx+0x4]
  401fdf:	test   r10d,r10d
  401fe2:	jne    0x402120
  401fe8:	mov    r9d,DWORD PTR [rbx+0x8]
  401fec:	test   r9d,r9d
  401fef:	jne    0x40200c
  401ff1:	add    rbx,0xc
  401ff5:	mov    r8d,DWORD PTR [rbx]
  401ff8:	test   r8d,r8d
  401ffb:	jne    0x402120
  402001:	mov    ecx,DWORD PTR [rbx+0x4]
  402004:	test   ecx,ecx
  402006:	jne    0x402120
  40200c:	mov    edx,DWORD PTR [rbx+0x8]
  40200f:	cmp    edx,0x1
  402012:	jne    0x40222c
  402018:	add    rbx,0xc
  40201c:	cmp    rbx,rsi
  40201f:	jae    0x401f5b
  402025:	mov    r12,QWORD PTR [rip+0xc394]        # 0x40e3c0
  40202c:	lea    r13,[rbp-0x30]
  402030:	movabs r14,0xffffffff00000000
  40203a:	mov    ecx,DWORD PTR [rbx+0x4]
  40203d:	mov    eax,DWORD PTR [rbx]
  40203f:	movzx  edx,BYTE PTR [rbx+0x8]
  402043:	add    rax,r12
  402046:	add    rcx,r12
  402049:	cmp    edx,0x10
  40204c:	mov    r8,QWORD PTR [rax]
  40204f:	je     0x402196
  402055:	jbe    0x40215d
  40205b:	cmp    edx,0x20
  40205e:	je     0x4021df
  402064:	cmp    edx,0x40
  402067:	jne    0x4021cb
  40206d:	sub    r8,rax
  402070:	mov    rdx,r13
  402073:	mov    rdi,r13
  402076:	mov    rax,r8
  402079:	add    rax,QWORD PTR [rcx]
  40207c:	mov    r8d,0x8
  402082:	mov    QWORD PTR [rbp-0x30],rax
  402086:	call   0x401dd0
  40208b:	add    rbx,0xc
  40208f:	cmp    rbx,rsi
  402092:	jb     0x40203a
  402094:	mov    eax,DWORD PTR [rip+0xf5ea]        # 0x411684
  40209a:	xor    ebx,ebx
  40209c:	xor    esi,esi
  40209e:	test   eax,eax
  4020a0:	jle    0x401f5b
  4020a6:	mov    r14,QWORD PTR [rip+0x116e3]        # 0x413790
  4020ad:	lea    r13,[rbp-0x34]
  4020b1:	mov    r12,QWORD PTR [rip+0x116d0]        # 0x413788
  4020b8:	jmp    0x4020d3
  4020ba:	nop    WORD PTR [rax+rax*1+0x0]
  4020c0:	add    esi,0x1
  4020c3:	add    rbx,0x18
  4020c7:	cmp    esi,DWORD PTR [rip+0xf5b7]        # 0x411684
  4020cd:	jge    0x401f5b
  4020d3:	mov    rax,rbx
  4020d6:	add    rax,QWORD PTR [rip+0xf5ab]        # 0x411688
  4020dd:	mov    edx,DWORD PTR [rax]
  4020df:	test   edx,edx
  4020e1:	je     0x4020c0
  4020e3:	mov    rcx,QWORD PTR [rax+0x8]
  4020e7:	mov    r8d,0x30
  4020ed:	mov    rdx,rdi
  4020f0:	call   r14
  4020f3:	test   rax,rax
  4020f6:	je     0x40220e
  4020fc:	mov    rax,QWORD PTR [rip+0xf585]        # 0x411688
  402103:	mov    r9,r13
  402106:	mov    rdx,QWORD PTR [rbp-0x18]
  40210a:	mov    rcx,QWORD PTR [rbp-0x30]
  40210e:	mov    r8d,DWORD PTR [rax+rbx*1]
  402112:	call   r12
  402115:	jmp    0x4020c0
  402117:	nop    WORD PTR [rax+rax*1+0x0]
  402120:	cmp    rbx,rsi
  402123:	jae    0x401f5b
  402129:	mov    r12,QWORD PTR [rip+0xc290]        # 0x40e3c0
  402130:	lea    rdi,[rbp-0x30]
  402134:	mov    ecx,DWORD PTR [rbx+0x4]
  402137:	mov    eax,DWORD PTR [rbx]
  402139:	mov    r8d,0x4
  40213f:	mov    rdx,rdi
  402142:	add    rbx,0x8
  402146:	add    rcx,r12
  402149:	add    eax,DWORD PTR [rcx]
  40214b:	mov    DWORD PTR [rbp-0x30],eax
  40214e:	call   0x401dd0
  402153:	cmp    rbx,rsi
  402156:	jb     0x402134
  402158:	jmp    0x402094
  40215d:	cmp    edx,0x8
  402160:	jne    0x4021cb
  402162:	movzx  edx,BYTE PTR [rcx]
  402165:	mov    rdi,r13
  402168:	mov    r10,rdx
  40216b:	or     r10,0xffffffffffffff00
  402172:	test   dl,dl
  402174:	cmovs  rdx,r10
  402178:	sub    rdx,rax
  40217b:	lea    rax,[r8+rdx*1]
  40217f:	mov    r8d,0x1
  402185:	mov    rdx,r13
  402188:	mov    QWORD PTR [rbp-0x30],rax
  40218c:	call   0x401dd0
  402191:	jmp    0x40208b
  402196:	movzx  edx,WORD PTR [rcx]
  402199:	mov    rdi,r13
  40219c:	mov    r10,rdx
  40219f:	or     r10,0xffffffffffff0000
  4021a6:	test   dx,dx
  4021a9:	cmovs  rdx,r10
  4021ad:	sub    rdx,rax
  4021b0:	lea    rax,[r8+rdx*1]
  4021b4:	mov    r8d,0x2
  4021ba:	mov    rdx,r13
  4021bd:	mov    QWORD PTR [rbp-0x30],rax
  4021c1:	call   0x401dd0
  4021c6:	jmp    0x40208b
  4021cb:	lea    rcx,[rip+0xbd66]        # 0x40df38
  4021d2:	mov    QWORD PTR [rbp-0x30],0x0
  4021da:	call   0x401d60
  4021df:	mov    edx,DWORD PTR [rcx]
  4021e1:	mov    rdi,r13
  4021e4:	mov    r10,rdx
  4021e7:	or     r10,r14
  4021ea:	test   edx,edx
  4021ec:	cmovs  rdx,r10
  4021f0:	sub    rdx,rax
  4021f3:	lea    rax,[r8+rdx*1]
  4021f7:	mov    r8d,0x4
  4021fd:	mov    rdx,r13
  402200:	mov    QWORD PTR [rbp-0x30],rax
  402204:	call   0x401dd0
  402209:	jmp    0x40208b
  40220e:	add    rbx,QWORD PTR [rip+0xf473]        # 0x411688
  402215:	lea    rcx,[rip+0xbc84]        # 0x40dea0
  40221c:	mov    rax,QWORD PTR [rbx+0x10]
  402220:	mov    r8,QWORD PTR [rbx+0x8]
  402224:	mov    edx,DWORD PTR [rax+0x8]
  402227:	call   0x401d60
  40222c:	lea    rcx,[rip+0xbccd]        # 0x40df00
  402233:	call   0x401d60
  402238:	nop
  402239:	nop
  40223a:	nop
  40223b:	nop
  40223c:	nop
  40223d:	nop
  40223e:	nop
  40223f:	nop
  402240:	sub    rsp,0x28
  402244:	mov    eax,DWORD PTR [rcx]
  402246:	cmp    eax,0xc0000091
  40224b:	ja     0x4022b0
  40224d:	cmp    eax,0xc000008d
  402252:	jae    0x4022cf
  402254:	cmp    eax,0xc0000008
  402259:	je     0x402370
  40225f:	ja     0x402340
  402265:	cmp    eax,0x80000002
  40226a:	je     0x402370
  402270:	cmp    eax,0xc0000005
  402275:	jne    0x40234e
  40227b:	xor    edx,edx
  40227d:	mov    ecx,0xb
  402282:	call   0x406cf8
  402287:	cmp    rax,0x1
  40228b:	je     0x4023d0
  402291:	test   rax,rax
  402294:	je     0x4023b0
  40229a:	mov    ecx,0xb
  40229f:	call   rax
  4022a1:	xor    eax,eax
  4022a3:	add    rsp,0x28
  4022a7:	ret    
  4022a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4022b0:	cmp    eax,0xc0000094
  4022b5:	je     0x402380
  4022bb:	ja     0x402300
  4022bd:	cmp    eax,0xc0000092
  4022c2:	je     0x402370
  4022c8:	cmp    eax,0xc0000093
  4022cd:	jne    0x40234e
  4022cf:	xor    edx,edx
  4022d1:	mov    ecx,0x8
  4022d6:	call   0x406cf8
  4022db:	cmp    rax,0x1
  4022df:	mov    rdx,rax
  4022e2:	je     0x402358
  4022e4:	test   rdx,rdx
  4022e7:	mov    eax,0x1
  4022ec:	je     0x4022a3
  4022ee:	mov    ecx,0x8
  4022f3:	call   rdx
  4022f5:	xor    eax,eax
  4022f7:	add    rsp,0x28
  4022fb:	ret    
  4022fc:	nop    DWORD PTR [rax+0x0]
  402300:	cmp    eax,0xc0000095
  402305:	je     0x402370
  402307:	cmp    eax,0xc0000096
  40230c:	jne    0x40234e
  40230e:	xor    edx,edx
  402310:	mov    ecx,0x4
  402315:	call   0x406cf8
  40231a:	cmp    rax,0x1
  40231e:	je     0x4023ba
  402324:	test   rax,rax
  402327:	je     0x4023b0
  40232d:	mov    ecx,0x4
  402332:	call   rax
  402334:	xor    eax,eax
  402336:	jmp    0x4022a3
  40233b:	nop    DWORD PTR [rax+rax*1+0x0]
  402340:	cmp    eax,0xc000001d
  402345:	je     0x40230e
  402347:	cmp    eax,0xc000008c
  40234c:	je     0x402370
  40234e:	mov    eax,0x1
  402353:	add    rsp,0x28
  402357:	ret    
  402358:	mov    edx,0x1
  40235d:	mov    ecx,0x8
  402362:	call   0x406cf8
  402367:	call   0x401d30
  40236c:	nop    DWORD PTR [rax+0x0]
  402370:	xor    eax,eax
  402372:	add    rsp,0x28
  402376:	ret    
  402377:	nop    WORD PTR [rax+rax*1+0x0]
  402380:	xor    edx,edx
  402382:	mov    ecx,0x8
  402387:	call   0x406cf8
  40238c:	cmp    rax,0x1
  402390:	mov    rdx,rax
  402393:	jne    0x4022e4
  402399:	mov    edx,0x1
  40239e:	mov    ecx,0x8
  4023a3:	call   0x406cf8
  4023a8:	xor    eax,eax
  4023aa:	jmp    0x4022a3
  4023af:	nop
  4023b0:	mov    eax,0x4
  4023b5:	add    rsp,0x28
  4023b9:	ret    
  4023ba:	mov    edx,0x1
  4023bf:	mov    ecx,0x4
  4023c4:	call   0x406cf8
  4023c9:	xor    eax,eax
  4023cb:	jmp    0x4022a3
  4023d0:	mov    edx,0x1
  4023d5:	mov    ecx,0xb
  4023da:	call   0x406cf8
  4023df:	xor    eax,eax
  4023e1:	jmp    0x4022a3
  4023e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4023f0:	push   r12
  4023f2:	push   rbp
  4023f3:	push   rdi
  4023f4:	push   rsi
  4023f5:	push   rbx
  4023f6:	sub    rsp,0x20
  4023fa:	call   0x402b60
  4023ff:	mov    rbp,rax
  402402:	mov    eax,DWORD PTR [rip+0xf2c0]        # 0x4116c8
  402408:	test   eax,eax
  40240a:	jne    0x402431
  40240c:	test   rbp,rbp
  40240f:	je     0x402431
  402411:	lea    rcx,[rip+0xbb58]        # 0x40df70
  402418:	mov    DWORD PTR [rip+0xf2a6],0x1        # 0x4116c8
  402422:	call   0x4029a0
  402427:	test   rax,rax
  40242a:	je     0x402440
  40242c:	mov    eax,0x1
  402431:	add    rsp,0x20
  402435:	pop    rbx
  402436:	pop    rsi
  402437:	pop    rdi
  402438:	pop    rbp
  402439:	pop    r12
  40243b:	ret    
  40243c:	nop    DWORD PTR [rax+0x0]
  402440:	lea    rbx,[rip+0xf3b9]        # 0x411800
  402447:	mov    ecx,0x30
  40244c:	lea    rdx,[rip+0xf2ad]        # 0x411700
  402453:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402240
  40245a:	xor    esi,esi
  40245c:	mov    rdi,rbx
  40245f:	rep stos QWORD PTR es:[rdi],rax
  402462:	mov    rdi,rdx
  402465:	sub    r12,rbp
  402468:	mov    cl,0x20
  40246a:	rep stos QWORD PTR es:[rdi],rax
  40246d:	mov    rdi,rdx
  402470:	jmp    0x4024a0
  402472:	mov    BYTE PTR [rdi],0x9
  402475:	mov    DWORD PTR [rdi+0x4],r12d
  402479:	add    rsi,0x1
  40247d:	mov    edx,DWORD PTR [rax+0xc]
  402480:	add    rbx,0xc
  402484:	mov    DWORD PTR [rbx-0xc],edx
  402487:	add    edx,DWORD PTR [rax+0x8]
  40248a:	mov    rax,rdi
  40248d:	sub    rax,rbp
  402490:	add    rdi,0x8
  402494:	mov    DWORD PTR [rbx-0x4],eax
  402497:	mov    DWORD PTR [rbx-0x8],edx
  40249a:	cmp    rsi,0x20
  40249e:	je     0x4024d5
  4024a0:	mov    rcx,rsi
  4024a3:	call   0x402ad0
  4024a8:	test   rax,rax
  4024ab:	jne    0x402472
  4024ad:	test   rsi,rsi
  4024b0:	je     0x40242c
  4024b6:	mov    edx,esi
  4024b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4024c0:	mov    r8,rbp
  4024c3:	lea    rcx,[rip+0xf336]        # 0x411800
  4024ca:	call   QWORD PTR [rip+0x11270]        # 0x413740
  4024d0:	jmp    0x40242c
  4024d5:	mov    edx,0x20
  4024da:	jmp    0x4024c0
  4024dc:	nop    DWORD PTR [rax+0x0]
  4024e0:	push   rbx
  4024e1:	sub    rsp,0x20
  4024e5:	mov    rdx,QWORD PTR [rcx]
  4024e8:	mov    eax,DWORD PTR [rdx]
  4024ea:	mov    r8d,eax
  4024ed:	and    r8d,0x20ffffff
  4024f4:	cmp    r8d,0x20474343
  4024fb:	je     0x402600
  402501:	cmp    eax,0xc0000091
  402506:	mov    rbx,rcx
  402509:	ja     0x402590
  40250f:	cmp    eax,0xc000008d
  402514:	jae    0x4025a7
  40251a:	cmp    eax,0xc0000008
  40251f:	je     0x402553
  402521:	ja     0x402560
  402523:	cmp    eax,0x80000002
  402528:	je     0x402553
  40252a:	cmp    eax,0xc0000005
  40252f:	jne    0x402572
  402531:	xor    edx,edx
  402533:	mov    ecx,0xb
  402538:	call   0x406cf8
  40253d:	cmp    rax,0x1
  402541:	je     0x402670
  402547:	test   rax,rax
  40254a:	je     0x402572
  40254c:	mov    ecx,0xb
  402551:	call   rax
  402553:	mov    eax,0xffffffff
  402558:	add    rsp,0x20
  40255c:	pop    rbx
  40255d:	ret    
  40255e:	xchg   ax,ax
  402560:	cmp    eax,0xc000001d
  402565:	je     0x402626
  40256b:	cmp    eax,0xc000008c
  402570:	je     0x402553
  402572:	mov    rax,QWORD PTR [rip+0xf147]        # 0x4116c0
  402579:	test   rax,rax
  40257c:	je     0x402558
  40257e:	mov    rcx,rbx
  402581:	add    rsp,0x20
  402585:	pop    rbx
  402586:	rex.W jmp rax
  402589:	nop    DWORD PTR [rax+0x0]
  402590:	cmp    eax,0xc0000094
  402595:	je     0x4025d2
  402597:	ja     0x402610
  402599:	cmp    eax,0xc0000092
  40259e:	je     0x402553
  4025a0:	cmp    eax,0xc0000093
  4025a5:	jne    0x402572
  4025a7:	xor    edx,edx
  4025a9:	mov    ecx,0x8
  4025ae:	call   0x406cf8
  4025b3:	cmp    rax,0x1
  4025b7:	jne    0x4025e4
  4025b9:	mov    edx,0x1
  4025be:	mov    ecx,0x8
  4025c3:	call   0x406cf8
  4025c8:	call   0x401d30
  4025cd:	jmp    0x402553
  4025d2:	xor    edx,edx
  4025d4:	mov    ecx,0x8
  4025d9:	call   0x406cf8
  4025de:	cmp    rax,0x1
  4025e2:	je     0x402652
  4025e4:	test   rax,rax
  4025e7:	je     0x402572
  4025e9:	mov    ecx,0x8
  4025ee:	call   rax
  4025f0:	mov    eax,0xffffffff
  4025f5:	jmp    0x402558
  4025fa:	nop    WORD PTR [rax+rax*1+0x0]
  402600:	test   BYTE PTR [rdx+0x4],0x1
  402604:	jne    0x402501
  40260a:	jmp    0x402553
  40260f:	nop
  402610:	cmp    eax,0xc0000095
  402615:	je     0x402553
  40261b:	cmp    eax,0xc0000096
  402620:	jne    0x402572
  402626:	xor    edx,edx
  402628:	mov    ecx,0x4
  40262d:	call   0x406cf8
  402632:	cmp    rax,0x1
  402636:	je     0x402684
  402638:	test   rax,rax
  40263b:	je     0x402572
  402641:	mov    ecx,0x4
  402646:	call   rax
  402648:	mov    eax,0xffffffff
  40264d:	jmp    0x402558
  402652:	mov    edx,0x1
  402657:	mov    ecx,0x8
  40265c:	call   0x406cf8
  402661:	jmp    0x402553
  402666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402670:	mov    edx,0x1
  402675:	mov    ecx,0xb
  40267a:	call   0x406cf8
  40267f:	jmp    0x402553
  402684:	mov    edx,0x1
  402689:	mov    ecx,0x4
  40268e:	call   0x406cf8
  402693:	jmp    0x402553
  402698:	nop
  402699:	nop
  40269a:	nop
  40269b:	nop
  40269c:	nop
  40269d:	nop
  40269e:	nop
  40269f:	nop
  4026a0:	push   rbp
  4026a1:	push   rdi
  4026a2:	push   rsi
  4026a3:	push   rbx
  4026a4:	sub    rsp,0x28
  4026a8:	lea    rcx,[rip+0xf2f1]        # 0x4119a0
  4026af:	call   QWORD PTR [rip+0x11033]        # 0x4136e8
  4026b5:	mov    rbx,QWORD PTR [rip+0xf2c4]        # 0x411980
  4026bc:	test   rbx,rbx
  4026bf:	je     0x4026f4
  4026c1:	mov    rbp,QWORD PTR [rip+0x110b0]        # 0x413778
  4026c8:	mov    rdi,QWORD PTR [rip+0x11039]        # 0x413708
  4026cf:	nop
  4026d0:	mov    ecx,DWORD PTR [rbx]
  4026d2:	call   rbp
  4026d4:	mov    rsi,rax
  4026d7:	call   rdi
  4026d9:	test   eax,eax
  4026db:	jne    0x4026eb
  4026dd:	test   rsi,rsi
  4026e0:	je     0x4026eb
  4026e2:	mov    rax,QWORD PTR [rbx+0x8]
  4026e6:	mov    rcx,rsi
  4026e9:	call   rax
  4026eb:	mov    rbx,QWORD PTR [rbx+0x10]
  4026ef:	test   rbx,rbx
  4026f2:	jne    0x4026d0
  4026f4:	mov    rax,QWORD PTR [rip+0x11035]        # 0x413730
  4026fb:	lea    rcx,[rip+0xf29e]        # 0x4119a0
  402702:	add    rsp,0x28
  402706:	pop    rbx
  402707:	pop    rsi
  402708:	pop    rdi
  402709:	pop    rbp
  40270a:	rex.W jmp rax
  40270d:	nop    DWORD PTR [rax]
  402710:	push   rdi
  402711:	push   rsi
  402712:	push   rbx
  402713:	sub    rsp,0x20
  402717:	mov    eax,DWORD PTR [rip+0xf26b]        # 0x411988
  40271d:	test   eax,eax
  40271f:	jne    0x402730
  402721:	add    rsp,0x20
  402725:	pop    rbx
  402726:	pop    rsi
  402727:	pop    rdi
  402728:	ret    
  402729:	nop    DWORD PTR [rax+0x0]
  402730:	mov    rsi,rdx
  402733:	mov    edi,ecx
  402735:	mov    edx,0x18
  40273a:	mov    ecx,0x1
  40273f:	call   0x406d40
  402744:	test   rax,rax
  402747:	mov    rbx,rax
  40274a:	je     0x402788
  40274c:	mov    DWORD PTR [rax],edi
  40274e:	mov    QWORD PTR [rax+0x8],rsi
  402752:	lea    rcx,[rip+0xf247]        # 0x4119a0
  402759:	call   QWORD PTR [rip+0x10f89]        # 0x4136e8
  40275f:	mov    rax,QWORD PTR [rip+0xf21a]        # 0x411980
  402766:	lea    rcx,[rip+0xf233]        # 0x4119a0
  40276d:	mov    QWORD PTR [rip+0xf20c],rbx        # 0x411980
  402774:	mov    QWORD PTR [rbx+0x10],rax
  402778:	call   QWORD PTR [rip+0x10fb2]        # 0x413730
  40277e:	xor    eax,eax
  402780:	add    rsp,0x20
  402784:	pop    rbx
  402785:	pop    rsi
  402786:	pop    rdi
  402787:	ret    
  402788:	mov    eax,0xffffffff
  40278d:	jmp    0x402721
  40278f:	nop
  402790:	push   rbx
  402791:	sub    rsp,0x20
  402795:	mov    eax,DWORD PTR [rip+0xf1ed]        # 0x411988
  40279b:	test   eax,eax
  40279d:	jne    0x4027b0
  40279f:	xor    eax,eax
  4027a1:	add    rsp,0x20
  4027a5:	pop    rbx
  4027a6:	ret    
  4027a7:	nop    WORD PTR [rax+rax*1+0x0]
  4027b0:	mov    ebx,ecx
  4027b2:	lea    rcx,[rip+0xf1e7]        # 0x4119a0
  4027b9:	call   QWORD PTR [rip+0x10f29]        # 0x4136e8
  4027bf:	mov    rdx,QWORD PTR [rip+0xf1ba]        # 0x411980
  4027c6:	test   rdx,rdx
  4027c9:	je     0x4027e7
  4027cb:	mov    eax,DWORD PTR [rdx]
  4027cd:	cmp    eax,ebx
  4027cf:	jne    0x4027de
  4027d1:	jmp    0x40281f
  4027d3:	mov    r8d,DWORD PTR [rax]
  4027d6:	cmp    r8d,ebx
  4027d9:	je     0x402800
  4027db:	mov    rdx,rax
  4027de:	mov    rax,QWORD PTR [rdx+0x10]
  4027e2:	test   rax,rax
  4027e5:	jne    0x4027d3
  4027e7:	lea    rcx,[rip+0xf1b2]        # 0x4119a0
  4027ee:	call   QWORD PTR [rip+0x10f3c]        # 0x413730
  4027f4:	xor    eax,eax
  4027f6:	add    rsp,0x20
  4027fa:	pop    rbx
  4027fb:	ret    
  4027fc:	nop    DWORD PTR [rax+0x0]
  402800:	mov    rcx,rax
  402803:	mov    rax,QWORD PTR [rax+0x10]
  402807:	mov    QWORD PTR [rdx+0x10],rax
  40280b:	call   0x406d28
  402810:	lea    rcx,[rip+0xf189]        # 0x4119a0
  402817:	call   QWORD PTR [rip+0x10f13]        # 0x413730
  40281d:	jmp    0x4027f4
  40281f:	mov    rax,QWORD PTR [rdx+0x10]
  402823:	mov    rcx,rdx
  402826:	mov    QWORD PTR [rip+0xf153],rax        # 0x411980
  40282d:	jmp    0x40280b
  40282f:	nop
  402830:	push   rbx
  402831:	sub    rsp,0x20
  402835:	cmp    edx,0x1
  402838:	je     0x4028d0
  40283e:	jb     0x402870
  402840:	cmp    edx,0x2
  402843:	je     0x402860
  402845:	cmp    edx,0x3
  402848:	jne    0x402865
  40284a:	mov    eax,DWORD PTR [rip+0xf138]        # 0x411988
  402850:	test   eax,eax
  402852:	je     0x402865
  402854:	call   0x4026a0
  402859:	jmp    0x402865
  40285b:	nop    DWORD PTR [rax+rax*1+0x0]
  402860:	call   0x401d30
  402865:	mov    eax,0x1
  40286a:	add    rsp,0x20
  40286e:	pop    rbx
  40286f:	ret    
  402870:	mov    eax,DWORD PTR [rip+0xf112]        # 0x411988
  402876:	test   eax,eax
  402878:	jne    0x402900
  40287e:	mov    eax,DWORD PTR [rip+0xf104]        # 0x411988
  402884:	cmp    eax,0x1
  402887:	jne    0x402865
  402889:	mov    rcx,QWORD PTR [rip+0xf0f0]        # 0x411980
  402890:	test   rcx,rcx
  402893:	je     0x4028a6
  402895:	mov    rbx,QWORD PTR [rcx+0x10]
  402899:	call   0x406d28
  40289e:	test   rbx,rbx
  4028a1:	mov    rcx,rbx
  4028a4:	jne    0x402895
  4028a6:	lea    rcx,[rip+0xf0f3]        # 0x4119a0
  4028ad:	mov    QWORD PTR [rip+0xf0c8],0x0        # 0x411980
  4028b8:	mov    DWORD PTR [rip+0xf0c6],0x0        # 0x411988
  4028c2:	call   QWORD PTR [rip+0x10e18]        # 0x4136e0
  4028c8:	jmp    0x402865
  4028ca:	nop    WORD PTR [rax+rax*1+0x0]
  4028d0:	mov    eax,DWORD PTR [rip+0xf0b2]        # 0x411988
  4028d6:	test   eax,eax
  4028d8:	je     0x4028f0
  4028da:	mov    eax,0x1
  4028df:	mov    DWORD PTR [rip+0xf09f],0x1        # 0x411988
  4028e9:	add    rsp,0x20
  4028ed:	pop    rbx
  4028ee:	ret    
  4028ef:	nop
  4028f0:	lea    rcx,[rip+0xf0a9]        # 0x4119a0
  4028f7:	call   QWORD PTR [rip+0x10e2b]        # 0x413728
  4028fd:	jmp    0x4028da
  4028ff:	nop
  402900:	call   0x4026a0
  402905:	jmp    0x40287e
  40290a:	nop
  40290b:	nop
  40290c:	nop
  40290d:	nop
  40290e:	nop
  40290f:	nop
  402910:	movsxd rax,DWORD PTR [rcx+0x3c]
  402914:	add    rcx,rax
  402917:	xor    eax,eax
  402919:	cmp    DWORD PTR [rcx],0x4550
  40291f:	je     0x402923
  402921:	repz ret 
  402923:	xor    eax,eax
  402925:	cmp    WORD PTR [rcx+0x18],0x20b
  40292b:	sete   al
  40292e:	ret    
  40292f:	nop
  402930:	cmp    WORD PTR [rcx],0x5a4d
  402935:	je     0x402940
  402937:	xor    eax,eax
  402939:	ret    
  40293a:	nop    WORD PTR [rax+rax*1+0x0]
  402940:	jmp    0x402910
  402942:	nop    DWORD PTR [rax+0x0]
  402946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402950:	movsxd rax,DWORD PTR [rcx+0x3c]
  402954:	add    rcx,rax
  402957:	movzx  eax,WORD PTR [rcx+0x14]
  40295b:	lea    rax,[rcx+rax*1+0x18]
  402960:	movzx  ecx,WORD PTR [rcx+0x6]
  402964:	test   ecx,ecx
  402966:	je     0x402991
  402968:	sub    ecx,0x1
  40296b:	lea    rcx,[rcx+rcx*4]
  40296f:	lea    r9,[rax+rcx*8+0x28]
  402974:	mov    r8d,DWORD PTR [rax+0xc]
  402978:	cmp    r8,rdx
  40297b:	mov    rcx,r8
  40297e:	ja     0x402988
  402980:	add    ecx,DWORD PTR [rax+0x8]
  402983:	cmp    rdx,rcx
  402986:	jb     0x402993
  402988:	add    rax,0x28
  40298c:	cmp    rax,r9
  40298f:	jne    0x402974
  402991:	xor    eax,eax
  402993:	repz ret 
  402995:	nop
  402996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029a0:	push   rdi
  4029a1:	push   rsi
  4029a2:	push   rbx
  4029a3:	sub    rsp,0x20
  4029a7:	mov    rsi,rcx
  4029aa:	call   0x406ce8
  4029af:	cmp    rax,0x8
  4029b3:	ja     0x4029d0
  4029b5:	mov    rbx,QWORD PTR [rip+0xba04]        # 0x40e3c0
  4029bc:	xor    edi,edi
  4029be:	cmp    WORD PTR [rbx],0x5a4d
  4029c3:	je     0x4029e0
  4029c5:	mov    rax,rdi
  4029c8:	add    rsp,0x20
  4029cc:	pop    rbx
  4029cd:	pop    rsi
  4029ce:	pop    rdi
  4029cf:	ret    
  4029d0:	xor    edi,edi
  4029d2:	mov    rax,rdi
  4029d5:	add    rsp,0x20
  4029d9:	pop    rbx
  4029da:	pop    rsi
  4029db:	pop    rdi
  4029dc:	ret    
  4029dd:	nop    DWORD PTR [rax]
  4029e0:	mov    rcx,rbx
  4029e3:	call   0x402910
  4029e8:	test   eax,eax
  4029ea:	je     0x4029c5
  4029ec:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4029f0:	add    rdx,rbx
  4029f3:	movzx  eax,WORD PTR [rdx+0x14]
  4029f7:	lea    rbx,[rdx+rax*1+0x18]
  4029fc:	movzx  eax,WORD PTR [rdx+0x6]
  402a00:	test   eax,eax
  402a02:	je     0x4029c5
  402a04:	sub    eax,0x1
  402a07:	lea    rax,[rax+rax*4]
  402a0b:	lea    rdi,[rbx+rax*8+0x28]
  402a10:	jmp    0x402a1b
  402a12:	add    rbx,0x28
  402a16:	cmp    rbx,rdi
  402a19:	je     0x4029d0
  402a1b:	mov    r8d,0x8
  402a21:	mov    rdx,rsi
  402a24:	mov    rcx,rbx
  402a27:	call   0x406ce0
  402a2c:	test   eax,eax
  402a2e:	jne    0x402a12
  402a30:	mov    rdi,rbx
  402a33:	mov    rax,rdi
  402a36:	add    rsp,0x20
  402a3a:	pop    rbx
  402a3b:	pop    rsi
  402a3c:	pop    rdi
  402a3d:	ret    
  402a3e:	xchg   ax,ax
  402a40:	push   rsi
  402a41:	push   rbx
  402a42:	sub    rsp,0x28
  402a46:	mov    rbx,QWORD PTR [rip+0xb973]        # 0x40e3c0
  402a4d:	cmp    WORD PTR [rbx],0x5a4d
  402a52:	je     0x402a60
  402a54:	xor    eax,eax
  402a56:	add    rsp,0x28
  402a5a:	pop    rbx
  402a5b:	pop    rsi
  402a5c:	ret    
  402a5d:	nop    DWORD PTR [rax]
  402a60:	mov    rsi,rcx
  402a63:	mov    rcx,rbx
  402a66:	call   0x402910
  402a6b:	test   eax,eax
  402a6d:	je     0x402a54
  402a6f:	sub    rsi,rbx
  402a72:	mov    rcx,rbx
  402a75:	mov    rdx,rsi
  402a78:	add    rsp,0x28
  402a7c:	pop    rbx
  402a7d:	pop    rsi
  402a7e:	jmp    0x402950
  402a83:	nop    DWORD PTR [rax]
  402a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a90:	push   rbx
  402a91:	sub    rsp,0x20
  402a95:	mov    rbx,QWORD PTR [rip+0xb924]        # 0x40e3c0
  402a9c:	xor    eax,eax
  402a9e:	cmp    WORD PTR [rbx],0x5a4d
  402aa3:	je     0x402ab0
  402aa5:	add    rsp,0x20
  402aa9:	pop    rbx
  402aaa:	ret    
  402aab:	nop    DWORD PTR [rax+rax*1+0x0]
  402ab0:	mov    rcx,rbx
  402ab3:	call   0x402910
  402ab8:	test   eax,eax
  402aba:	je     0x402aa5
  402abc:	movsxd rax,DWORD PTR [rbx+0x3c]
  402ac0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402ac5:	add    rsp,0x20
  402ac9:	pop    rbx
  402aca:	ret    
  402acb:	nop    DWORD PTR [rax+rax*1+0x0]
  402ad0:	push   rdi
  402ad1:	push   rsi
  402ad2:	push   rbx
  402ad3:	sub    rsp,0x20
  402ad7:	mov    rsi,QWORD PTR [rip+0xb8e2]        # 0x40e3c0
  402ade:	xor    edi,edi
  402ae0:	mov    rbx,rcx
  402ae3:	cmp    WORD PTR [rsi],0x5a4d
  402ae8:	je     0x402af5
  402aea:	mov    rax,rdi
  402aed:	add    rsp,0x20
  402af1:	pop    rbx
  402af2:	pop    rsi
  402af3:	pop    rdi
  402af4:	ret    
  402af5:	mov    rcx,rsi
  402af8:	call   0x402910
  402afd:	test   eax,eax
  402aff:	je     0x402aea
  402b01:	movsxd rax,DWORD PTR [rsi+0x3c]
  402b05:	add    rsi,rax
  402b08:	movzx  eax,WORD PTR [rsi+0x14]
  402b0c:	lea    rdx,[rsi+rax*1+0x18]
  402b11:	movzx  eax,WORD PTR [rsi+0x6]
  402b15:	test   eax,eax
  402b17:	je     0x402aea
  402b19:	sub    eax,0x1
  402b1c:	lea    rax,[rax+rax*4]
  402b20:	lea    rax,[rdx+rax*8+0x28]
  402b25:	test   BYTE PTR [rdx+0x27],0x20
  402b29:	je     0x402b34
  402b2b:	test   rbx,rbx
  402b2e:	je     0x402b50
  402b30:	sub    rbx,0x1
  402b34:	add    rdx,0x28
  402b38:	cmp    rdx,rax
  402b3b:	jne    0x402b25
  402b3d:	xor    edi,edi
  402b3f:	mov    rax,rdi
  402b42:	add    rsp,0x20
  402b46:	pop    rbx
  402b47:	pop    rsi
  402b48:	pop    rdi
  402b49:	ret    
  402b4a:	nop    WORD PTR [rax+rax*1+0x0]
  402b50:	mov    rdi,rdx
  402b53:	mov    rax,rdi
  402b56:	add    rsp,0x20
  402b5a:	pop    rbx
  402b5b:	pop    rsi
  402b5c:	pop    rdi
  402b5d:	ret    
  402b5e:	xchg   ax,ax
  402b60:	push   rsi
  402b61:	push   rbx
  402b62:	sub    rsp,0x28
  402b66:	mov    rsi,QWORD PTR [rip+0xb853]        # 0x40e3c0
  402b6d:	xor    ebx,ebx
  402b6f:	cmp    WORD PTR [rsi],0x5a4d
  402b74:	je     0x402b80
  402b76:	mov    rax,rbx
  402b79:	add    rsp,0x28
  402b7d:	pop    rbx
  402b7e:	pop    rsi
  402b7f:	ret    
  402b80:	mov    rcx,rsi
  402b83:	call   0x402910
  402b88:	test   eax,eax
  402b8a:	cmovne rbx,rsi
  402b8e:	mov    rax,rbx
  402b91:	add    rsp,0x28
  402b95:	pop    rbx
  402b96:	pop    rsi
  402b97:	ret    
  402b98:	nop    DWORD PTR [rax+rax*1+0x0]
  402ba0:	push   rsi
  402ba1:	push   rbx
  402ba2:	sub    rsp,0x28
  402ba6:	mov    rbx,QWORD PTR [rip+0xb813]        # 0x40e3c0
  402bad:	xor    eax,eax
  402baf:	cmp    WORD PTR [rbx],0x5a4d
  402bb4:	je     0x402bc0
  402bb6:	add    rsp,0x28
  402bba:	pop    rbx
  402bbb:	pop    rsi
  402bbc:	ret    
  402bbd:	nop    DWORD PTR [rax]
  402bc0:	mov    rsi,rcx
  402bc3:	mov    rcx,rbx
  402bc6:	call   0x402910
  402bcb:	test   eax,eax
  402bcd:	je     0x402bb6
  402bcf:	sub    rsi,rbx
  402bd2:	mov    rcx,rbx
  402bd5:	mov    rdx,rsi
  402bd8:	call   0x402950
  402bdd:	test   rax,rax
  402be0:	je     0x402bf1
  402be2:	mov    eax,DWORD PTR [rax+0x24]
  402be5:	not    eax
  402be7:	shr    eax,0x1f
  402bea:	add    rsp,0x28
  402bee:	pop    rbx
  402bef:	pop    rsi
  402bf0:	ret    
  402bf1:	xor    eax,eax
  402bf3:	jmp    0x402bb6
  402bf5:	nop
  402bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c00:	push   rbp
  402c01:	push   rdi
  402c02:	push   rsi
  402c03:	push   rbx
  402c04:	sub    rsp,0x28
  402c08:	mov    rdi,QWORD PTR [rip+0xb7b1]        # 0x40e3c0
  402c0f:	xor    ebp,ebp
  402c11:	mov    esi,ecx
  402c13:	cmp    WORD PTR [rdi],0x5a4d
  402c18:	je     0x402c30
  402c1a:	mov    rax,rbp
  402c1d:	add    rsp,0x28
  402c21:	pop    rbx
  402c22:	pop    rsi
  402c23:	pop    rdi
  402c24:	pop    rbp
  402c25:	ret    
  402c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c30:	mov    rcx,rdi
  402c33:	call   0x402910
  402c38:	test   eax,eax
  402c3a:	je     0x402c1a
  402c3c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402c40:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402c47:	test   edx,edx
  402c49:	je     0x402c1a
  402c4b:	mov    ebx,edx
  402c4d:	mov    rcx,rdi
  402c50:	mov    rdx,rbx
  402c53:	call   0x402950
  402c58:	test   rax,rax
  402c5b:	je     0x402c1a
  402c5d:	add    rbx,rdi
  402c60:	mov    rdx,rbx
  402c63:	jne    0x402c77
  402c65:	jmp    0x402c1a
  402c67:	nop    WORD PTR [rax+rax*1+0x0]
  402c70:	sub    esi,0x1
  402c73:	add    rdx,0x14
  402c77:	mov    ecx,DWORD PTR [rdx+0x4]
  402c7a:	test   ecx,ecx
  402c7c:	jne    0x402c85
  402c7e:	mov    eax,DWORD PTR [rdx+0xc]
  402c81:	test   eax,eax
  402c83:	je     0x402ca0
  402c85:	test   esi,esi
  402c87:	jg     0x402c70
  402c89:	mov    ebp,DWORD PTR [rdx+0xc]
  402c8c:	add    rbp,rdi
  402c8f:	mov    rax,rbp
  402c92:	add    rsp,0x28
  402c96:	pop    rbx
  402c97:	pop    rsi
  402c98:	pop    rdi
  402c99:	pop    rbp
  402c9a:	ret    
  402c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  402ca0:	xor    ebp,ebp
  402ca2:	mov    rax,rbp
  402ca5:	add    rsp,0x28
  402ca9:	pop    rbx
  402caa:	pop    rsi
  402cab:	pop    rdi
  402cac:	pop    rbp
  402cad:	ret    
  402cae:	nop
  402caf:	nop
  402cb0:	push   rcx
  402cb1:	push   rax
  402cb2:	cmp    rax,0x1000
  402cb8:	lea    rcx,[rsp+0x18]
  402cbd:	jb     0x402cd8
  402cbf:	sub    rcx,0x1000
  402cc6:	or     QWORD PTR [rcx],0x0
  402cca:	sub    rax,0x1000
  402cd0:	cmp    rax,0x1000
  402cd6:	ja     0x402cbf
  402cd8:	sub    rcx,rax
  402cdb:	or     QWORD PTR [rcx],0x0
  402cdf:	pop    rax
  402ce0:	pop    rcx
  402ce1:	ret    
  402ce2:	nop
  402ce3:	nop
  402ce4:	nop
  402ce5:	nop
  402ce6:	nop
  402ce7:	nop
  402ce8:	nop
  402ce9:	nop
  402cea:	nop
  402ceb:	nop
  402cec:	nop
  402ced:	nop
  402cee:	nop
  402cef:	nop
  402cf0:	push   rbx
  402cf1:	sub    rsp,0x60
  402cf5:	lea    r8,[rip+0x7354]        # 0x40a050
  402cfc:	lea    rax,[rsp+0x50]
  402d01:	lea    r9,[rsp+0x4c]
  402d06:	mov    QWORD PTR [rsp+0x20],rax
  402d0b:	call   0x403370
  402d10:	mov    edx,eax
  402d12:	and    edx,0x7
  402d15:	cmp    edx,0x6
  402d18:	ja     0x402d45
  402d1a:	lea    rcx,[rip+0xb25f]        # 0x40df80
  402d21:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  402d25:	add    rcx,rdx
  402d28:	jmp    rcx
  402d2a:	nop    WORD PTR [rax+rax*1+0x0]
  402d30:	mov    ebx,DWORD PTR [rsp+0x54]
  402d34:	mov    edx,DWORD PTR [rsp+0x50]
  402d38:	or     ebx,0x7ff00000
  402d3e:	shl    rbx,0x20
  402d42:	or     rbx,rdx
  402d45:	test   al,0x8
  402d47:	je     0x402d5e
  402d49:	mov    rax,rbx
  402d4c:	mov    ebx,ebx
  402d4e:	shr    rax,0x20
  402d52:	or     eax,0x80000000
  402d57:	shl    rax,0x20
  402d5b:	or     rbx,rax
  402d5e:	mov    QWORD PTR [rsp+0x38],rbx
  402d63:	movsd  xmm0,QWORD PTR [rsp+0x38]
  402d69:	add    rsp,0x60
  402d6d:	pop    rbx
  402d6e:	ret    
  402d6f:	nop
  402d70:	movabs rbx,0x7ff8000000000000
  402d7a:	jmp    0x402d45
  402d7c:	nop    DWORD PTR [rax+0x0]
  402d80:	xor    ebx,ebx
  402d82:	jmp    0x402d45
  402d84:	mov    ebx,DWORD PTR [rsp+0x4c]
  402d88:	mov    edx,DWORD PTR [rsp+0x54]
  402d8c:	add    ebx,0x433
  402d92:	and    edx,0xffefffff
  402d98:	shl    ebx,0x14
  402d9b:	or     ebx,edx
  402d9d:	mov    edx,DWORD PTR [rsp+0x50]
  402da1:	shl    rbx,0x20
  402da5:	or     rbx,rdx
  402da8:	jmp    0x402d45
  402daa:	nop    WORD PTR [rax+rax*1+0x0]
  402db0:	mov    ebx,DWORD PTR [rsp+0x54]
  402db4:	mov    edx,DWORD PTR [rsp+0x50]
  402db8:	shl    rbx,0x20
  402dbc:	or     rbx,rdx
  402dbf:	jmp    0x402d45
  402dc1:	movabs rbx,0x7ff0000000000000
  402dcb:	jmp    0x402d45
  402dd0:	sub    rsp,0x18
  402dd4:	movsd  QWORD PTR [rsp+0x8],xmm0
  402dda:	fld    QWORD PTR [rsp+0x8]
  402dde:	movsd  QWORD PTR [rsp+0x8],xmm1
  402de4:	fld    QWORD PTR [rsp+0x8]
  402de8:	fxch   st(1)
  402dea:	fprem  
  402dec:	fstsw  ax
  402def:	sahf   
  402df0:	jp     0x402dea
  402df2:	fstp   st(1)
  402df4:	fstp   QWORD PTR [rsp+0x8]
  402df8:	movsd  xmm0,QWORD PTR [rsp+0x8]
  402dfe:	add    rsp,0x18
  402e02:	ret    
  402e03:	nop
  402e04:	nop
  402e05:	nop
  402e06:	nop
  402e07:	nop
  402e08:	nop
  402e09:	nop
  402e0a:	nop
  402e0b:	nop
  402e0c:	nop
  402e0d:	nop
  402e0e:	nop
  402e0f:	nop
  402e10:	push   rsi
  402e11:	push   rbx
  402e12:	sub    rsp,0x28
  402e16:	movsxd rax,DWORD PTR [rcx+0x14]
  402e1a:	lea    rdx,[rcx+0x18]
  402e1e:	mov    rbx,rcx
  402e21:	lea    r9,[rdx+rax*4]
  402e25:	mov    rcx,rax
  402e28:	jmp    0x402e40
  402e2a:	nop    WORD PTR [rax+rax*1+0x0]
  402e30:	add    rdx,0x4
  402e34:	mov    DWORD PTR [rdx-0x4],0x0
  402e3b:	cmp    r9,rdx
  402e3e:	jbe    0x402e60
  402e40:	mov    r8d,DWORD PTR [rdx]
  402e43:	cmp    r8d,0xffffffff
  402e47:	je     0x402e30
  402e49:	add    r8d,0x1
  402e4d:	mov    rax,rbx
  402e50:	mov    DWORD PTR [rdx],r8d
  402e53:	add    rsp,0x28
  402e57:	pop    rbx
  402e58:	pop    rsi
  402e59:	ret    
  402e5a:	nop    WORD PTR [rax+rax*1+0x0]
  402e60:	cmp    ecx,DWORD PTR [rbx+0xc]
  402e63:	jge    0x402e80
  402e65:	add    ecx,0x1
  402e68:	mov    DWORD PTR [rbx+0x14],ecx
  402e6b:	mov    DWORD PTR [rbx+rax*4+0x18],0x1
  402e73:	mov    rax,rbx
  402e76:	add    rsp,0x28
  402e7a:	pop    rbx
  402e7b:	pop    rsi
  402e7c:	ret    
  402e7d:	nop    DWORD PTR [rax]
  402e80:	mov    eax,DWORD PTR [rbx+0x8]
  402e83:	lea    ecx,[rax+0x1]
  402e86:	call   0x405fa0
  402e8b:	mov    rsi,rax
  402e8e:	lea    rcx,[rax+0x10]
  402e92:	movsxd rax,DWORD PTR [rbx+0x14]
  402e96:	lea    rdx,[rbx+0x10]
  402e9a:	lea    r8,[rax*4+0x8]
  402ea2:	call   0x406d08
  402ea7:	mov    rcx,rbx
  402eaa:	mov    rbx,rsi
  402ead:	call   0x4060b0
  402eb2:	movsxd rax,DWORD PTR [rsi+0x14]
  402eb6:	mov    rcx,rax
  402eb9:	jmp    0x402e65
  402ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  402ec0:	push   r15
  402ec2:	push   r14
  402ec4:	push   r13
  402ec6:	push   r12
  402ec8:	push   rbp
  402ec9:	push   rdi
  402eca:	push   rsi
  402ecb:	push   rbx
  402ecc:	sub    rsp,0x48
  402ed0:	mov    rdi,rdx
  402ed3:	mov    r12,r8
  402ed6:	lea    rdx,[rsp+0x3c]
  402edb:	lea    r8,[rsp+0x38]
  402ee0:	movsd  xmm0,QWORD PTR [rcx]
  402ee4:	mov    r13,r9
  402ee7:	call   0x406880
  402eec:	mov    r10d,DWORD PTR [rsp+0x38]
  402ef1:	mov    esi,DWORD PTR [rdi]
  402ef3:	mov    rbx,rax
  402ef6:	mov    edx,DWORD PTR [rsp+0x3c]
  402efa:	sub    r10d,esi
  402efd:	add    edx,r10d
  402f00:	test   r10d,r10d
  402f03:	mov    DWORD PTR [rsp+0x38],r10d
  402f08:	mov    DWORD PTR [rsp+0x3c],edx
  402f0c:	jle    0x4030d0
  402f12:	cmp    esi,0x35
  402f15:	je     0x403100
  402f1b:	cmp    DWORD PTR [rsp+0xb8],0x1
  402f23:	je     0x402fd4
  402f29:	cmp    DWORD PTR [rsp+0xb8],0x2
  402f31:	je     0x402f60
  402f33:	mov    eax,r10d
  402f36:	sub    eax,0x1
  402f39:	jne    0x4031d0
  402f3f:	mov    ecx,DWORD PTR [rsp+0xb0]
  402f46:	xor    r15d,r15d
  402f49:	test   ecx,ecx
  402f4b:	je     0x403057
  402f51:	test   BYTE PTR [rbx+0x18],0x2
  402f55:	je     0x40311e
  402f5b:	nop    DWORD PTR [rax+rax*1+0x0]
  402f60:	mov    edx,r10d
  402f63:	mov    rcx,rbx
  402f66:	call   0x406c40
  402f6b:	mov    edx,DWORD PTR [rsp+0x38]
  402f6f:	mov    rcx,rbx
  402f72:	mov    r14d,eax
  402f75:	call   0x4058f0
  402f7a:	mov    rcx,rbx
  402f7d:	call   0x402e10
  402f82:	mov    edx,esi
  402f84:	mov    rbx,rax
  402f87:	and    edx,0x1f
  402f8a:	jne    0x4031c0
  402f90:	mov    eax,DWORD PTR [rbx+0x14]
  402f93:	sub    eax,0x1
  402f96:	cdqe   
  402f98:	bsr    eax,DWORD PTR [rbx+rax*4+0x18]
  402f9d:	xor    eax,0x1f
  402fa0:	cmp    edx,eax
  402fa2:	je     0x403250
  402fa8:	test   r14d,r14d
  402fab:	jne    0x402fb5
  402fad:	mov    r14d,DWORD PTR [rbx+0x18]
  402fb1:	and    r14d,0x1
  402fb5:	mov    edx,0x1
  402fba:	mov    rcx,rbx
  402fbd:	mov    ebp,0x20
  402fc2:	call   0x4058f0
  402fc7:	mov    eax,DWORD PTR [rsp+0x3c]
  402fcb:	lea    edx,[rax+0x1]
  402fce:	mov    DWORD PTR [rsp+0x3c],edx
  402fd2:	jmp    0x402fff
  402fd4:	mov    edx,r10d
  402fd7:	mov    rcx,rax
  402fda:	call   0x406c40
  402fdf:	test   eax,eax
  402fe1:	mov    r14d,eax
  402fe4:	jne    0x403073
  402fea:	mov    edx,DWORD PTR [rsp+0x38]
  402fee:	mov    rcx,rbx
  402ff1:	xor    r14d,r14d
  402ff4:	xor    ebp,ebp
  402ff6:	call   0x4058f0
  402ffb:	mov    edx,DWORD PTR [rsp+0x3c]
  402fff:	mov    eax,DWORD PTR [rdi+0x4]
  403002:	cmp    eax,edx
  403004:	jle    0x403090
  40300a:	mov    r8d,eax
  40300d:	mov    DWORD PTR [rsp+0x3c],eax
  403011:	sub    r8d,edx
  403014:	cmp    esi,r8d
  403017:	jge    0x403150
  40301d:	mov    rdi,QWORD PTR [rsp+0xc0]
  403025:	mov    DWORD PTR [rbx+0x14],0x0
  40302c:	mov    edx,eax
  40302e:	xor    ebp,ebp
  403030:	mov    DWORD PTR [rdi],0x50
  403036:	mov    DWORD PTR [r12],edx
  40303a:	mov    r8,rbx
  40303d:	mov    edx,esi
  40303f:	mov    rcx,r13
  403042:	mov    r15d,0x1
  403048:	call   0x406bd0
  40304d:	mov    rax,QWORD PTR [rsp+0xc0]
  403055:	or     DWORD PTR [rax],ebp
  403057:	mov    rcx,rbx
  40305a:	call   0x4060b0
  40305f:	mov    eax,r15d
  403062:	add    rsp,0x48
  403066:	pop    rbx
  403067:	pop    rsi
  403068:	pop    rdi
  403069:	pop    rbp
  40306a:	pop    r12
  40306c:	pop    r13
  40306e:	pop    r14
  403070:	pop    r15
  403072:	ret    
  403073:	mov    edx,DWORD PTR [rsp+0x38]
  403077:	mov    rcx,rbx
  40307a:	mov    ebp,0x10
  40307f:	call   0x4058f0
  403084:	jmp    0x402ffb
  403089:	nop    DWORD PTR [rax+0x0]
  403090:	mov    eax,DWORD PTR [rdi+0x8]
  403093:	cmp    eax,edx
  403095:	jge    0x403036
  403097:	add    eax,0x1
  40309a:	xor    ebp,ebp
  40309c:	mov    DWORD PTR [rsp+0x3c],eax
  4030a0:	mov    rax,QWORD PTR [rsp+0xc0]
  4030a8:	mov    DWORD PTR [rax],0xa3
  4030ae:	call   0x406d70
  4030b3:	mov    DWORD PTR [rax],0x22
  4030b9:	mov    DWORD PTR [rbx+0x14],0x0
  4030c0:	mov    edx,DWORD PTR [rsp+0x3c]
  4030c4:	jmp    0x403036
  4030c9:	nop    DWORD PTR [rax+0x0]
  4030d0:	mov    r9d,DWORD PTR [rsp+0xb0]
  4030d8:	xor    r15d,r15d
  4030db:	test   r9d,r9d
  4030de:	je     0x403057
  4030e4:	test   r10d,r10d
  4030e7:	jne    0x403230
  4030ed:	xor    r14d,r14d
  4030f0:	xor    ebp,ebp
  4030f2:	jmp    0x402fff
  4030f7:	nop    WORD PTR [rax+rax*1+0x0]
  403100:	mov    r8d,DWORD PTR [rsp+0xb0]
  403108:	xor    r15d,r15d
  40310b:	test   r8d,r8d
  40310e:	je     0x403057
  403114:	cmp    DWORD PTR [rdi+0xc],0x1
  403118:	jne    0x403057
  40311e:	mov    edx,r10d
  403121:	mov    rcx,rbx
  403124:	call   0x406c40
  403129:	test   eax,eax
  40312b:	mov    r14d,eax
  40312e:	je     0x402fea
  403134:	mov    edx,DWORD PTR [rsp+0x38]
  403138:	mov    rcx,rbx
  40313b:	mov    ebp,0x10
  403140:	call   0x4058f0
  403145:	mov    edx,DWORD PTR [rsp+0x3c]
  403149:	jmp    0x402fff
  40314e:	xchg   ax,ax
  403150:	mov    edx,DWORD PTR [rdi+0x10]
  403153:	test   edx,edx
  403155:	jne    0x40301d
  40315b:	lea    edi,[r8-0x1]
  40315f:	test   r14d,r14d
  403162:	sete   al
  403165:	test   edi,edi
  403167:	jle    0x40320c
  40316d:	test   al,al
  40316f:	jne    0x4031f0
  403171:	mov    ecx,edi
  403173:	sar    edi,0x5
  403176:	mov    eax,0x1
  40317b:	movsxd rdi,edi
  40317e:	shl    eax,cl
  403180:	mov    edx,r8d
  403183:	and    eax,DWORD PTR [rbx+rdi*4+0x18]
  403187:	mov    rcx,rbx
  40318a:	mov    edi,eax
  40318c:	call   0x4058f0
  403191:	mov    rax,QWORD PTR [rsp+0xc0]
  403199:	test   edi,edi
  40319b:	mov    DWORD PTR [rax],0x2
  4031a1:	jne    0x403260
  4031a7:	test   r14d,r14d
  4031aa:	mov    edx,DWORD PTR [rsp+0x3c]
  4031ae:	je     0x403036
  4031b4:	mov    ebp,0x50
  4031b9:	jmp    0x403036
  4031be:	xchg   ax,ax
  4031c0:	mov    eax,0x20
  4031c5:	sub    eax,edx
  4031c7:	mov    edx,eax
  4031c9:	jmp    0x402f90
  4031ce:	xchg   ax,ax
  4031d0:	mov    edx,eax
  4031d2:	sar    edx,0x5
  4031d5:	movsxd rdx,edx
  4031d8:	mov    edx,DWORD PTR [rbx+rdx*4+0x18]
  4031dc:	bt     edx,eax
  4031df:	jb     0x402f60
  4031e5:	jmp    0x40311e
  4031ea:	nop    WORD PTR [rax+rax*1+0x0]
  4031f0:	mov    edx,edi
  4031f2:	mov    rcx,rbx
  4031f5:	mov    DWORD PTR [rsp+0x2c],r8d
  4031fa:	call   0x406c40
  4031ff:	mov    r8d,DWORD PTR [rsp+0x2c]
  403204:	test   eax,eax
  403206:	mov    r14d,eax
  403209:	sete   al
  40320c:	test   al,al
  40320e:	je     0x403171
  403214:	mov    eax,DWORD PTR [rsp+0xb0]
  40321b:	xor    r15d,r15d
  40321e:	test   eax,eax
  403220:	je     0x403057
  403226:	jmp    0x403171
  40322b:	nop    DWORD PTR [rax+rax*1+0x0]
  403230:	mov    edx,r10d
  403233:	mov    rcx,rbx
  403236:	neg    edx
  403238:	call   0x4064b0
  40323d:	mov    edx,DWORD PTR [rsp+0x3c]
  403241:	mov    rbx,rax
  403244:	jmp    0x4030ed
  403249:	nop    DWORD PTR [rax+0x0]
  403250:	mov    edx,DWORD PTR [rsp+0x3c]
  403254:	mov    ebp,0x20
  403259:	jmp    0x402fff
  40325e:	xchg   ax,ax
  403260:	mov    rcx,rbx
  403263:	mov    ebp,0x60
  403268:	call   0x402e10
  40326d:	mov    edx,DWORD PTR [rsp+0x3c]
  403271:	mov    rbx,rax
  403274:	jmp    0x403036
  403279:	nop    DWORD PTR [rax+0x0]
  403280:	movsxd rdx,DWORD PTR [rcx+0x14]
  403284:	lea    rax,[rcx+0x18]
  403288:	lea    rcx,[rax+rdx*4]
  40328c:	jmp    0x4032a0
  40328e:	xchg   ax,ax
  403290:	add    rax,0x4
  403294:	mov    DWORD PTR [rax-0x4],0xffffffff
  40329b:	cmp    rcx,rax
  40329e:	jbe    0x4032b0
  4032a0:	mov    edx,DWORD PTR [rax]
  4032a2:	test   edx,edx
  4032a4:	je     0x403290
  4032a6:	sub    edx,0x1
  4032a9:	mov    DWORD PTR [rax],edx
  4032ab:	ret    
  4032ac:	nop    DWORD PTR [rax+0x0]
  4032b0:	repz ret 
  4032b2:	nop    DWORD PTR [rax+0x0]
  4032b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032c0:	push   rbx
  4032c1:	sub    rsp,0x30
  4032c5:	lea    ebx,[rdx+0x1f]
  4032c8:	mov    rax,rcx
  4032cb:	sar    ebx,0x5
  4032ce:	cmp    ebx,DWORD PTR [rcx+0x8]
  4032d1:	jg     0x403350
  4032d3:	mov    r9d,edx
  4032d6:	sar    r9d,0x5
  4032da:	and    edx,0x1f
  4032dd:	je     0x403330
  4032df:	add    r9d,0x1
  4032e3:	lea    r8,[rax+0x18]
  4032e7:	mov    DWORD PTR [rax+0x14],r9d
  4032eb:	movsxd r9,r9d
  4032ee:	lea    r9,[r8+r9*4]
  4032f2:	cmp    r8,r9
  4032f5:	jae    0x403315
  4032f7:	nop    WORD PTR [rax+rax*1+0x0]
  403300:	add    r8,0x4
  403304:	mov    DWORD PTR [r8-0x4],0xffffffff
  40330c:	cmp    r8,r9
  40330f:	jb     0x403300
  403311:	test   edx,edx
  403313:	je     0x403320
  403315:	mov    ecx,0x20
  40331a:	sub    ecx,edx
  40331c:	shr    DWORD PTR [r8-0x4],cl
  403320:	add    rsp,0x30
  403324:	pop    rbx
  403325:	ret    
  403326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403330:	lea    r8,[rax+0x18]
  403334:	mov    DWORD PTR [rax+0x14],r9d
  403338:	movsxd r9,r9d
  40333b:	lea    r9,[r8+r9*4]
  40333f:	cmp    r8,r9
  403342:	jb     0x403300
  403344:	jmp    0x403320
  403346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403350:	mov    DWORD PTR [rsp+0x2c],edx
  403354:	call   0x4060b0
  403359:	mov    ecx,ebx
  40335b:	call   0x405fa0
  403360:	mov    edx,DWORD PTR [rsp+0x2c]
  403364:	jmp    0x4032d3
  403369:	nop    DWORD PTR [rax+0x0]
  403370:	push   r15
  403372:	push   r14
  403374:	push   r13
  403376:	push   r12
  403378:	push   rbp
  403379:	push   rdi
  40337a:	push   rsi
  40337b:	push   rbx
  40337c:	sub    rsp,0x138
  403383:	movaps XMMWORD PTR [rsp+0xd0],xmm6
  40338b:	movaps XMMWORD PTR [rsp+0xe0],xmm7
  403393:	movaps XMMWORD PTR [rsp+0xf0],xmm8
  40339c:	movaps XMMWORD PTR [rsp+0x100],xmm9
  4033a5:	movaps XMMWORD PTR [rsp+0x110],xmm10
  4033ae:	movaps XMMWORD PTR [rsp+0x120],xmm11
  4033b7:	mov    rdi,rcx
  4033ba:	mov    QWORD PTR [rsp+0x190],r8
  4033c2:	mov    QWORD PTR [rsp+0x188],rdx
  4033ca:	mov    QWORD PTR [rsp+0x198],r9
  4033d2:	call   0x406d18
  4033d7:	mov    rbp,QWORD PTR [rax]
  4033da:	mov    rcx,rbp
  4033dd:	call   0x406ce8
  4033e2:	mov    r14,rax
  4033e5:	mov    rax,QWORD PTR [rsp+0x190]
  4033ed:	mov    DWORD PTR [rsp+0xa4],0x0
  4033f8:	mov    QWORD PTR [rsp+0xb0],0x0
  403404:	mov    QWORD PTR [rsp+0xc8],0x0
  403410:	lea    rcx,[rip+0xabb5]        # 0x40dfcc
  403417:	mov    QWORD PTR [rsp+0xc0],rdi
  40341f:	mov    eax,DWORD PTR [rax]
  403421:	mov    DWORD PTR [rsp+0x40],eax
  403425:	mov    rax,rdi
  403428:	movzx  r8d,BYTE PTR [rax]
  40342c:	cmp    r8b,0x2d
  403430:	ja     0x4035e0
  403436:	movzx  edx,r8b
  40343a:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  40343e:	add    rdx,rcx
  403441:	jmp    rdx
  403443:	mov    DWORD PTR [rsp+0xa4],0x6
  40344e:	mov    QWORD PTR [rsp+0xc0],rdi
  403456:	xor    r8d,r8d
  403459:	mov    DWORD PTR [rsp+0x58],0x0
  403461:	cmp    QWORD PTR [rsp+0x188],0x0
  40346a:	je     0x40347f
  40346c:	mov    rax,QWORD PTR [rsp+0xc0]
  403474:	mov    rsi,QWORD PTR [rsp+0x188]
  40347c:	mov    QWORD PTR [rsi],rax
  40347f:	mov    eax,DWORD PTR [rsp+0x58]
  403483:	test   eax,eax
  403485:	jne    0x403500
  403487:	test   r8,r8
  40348a:	je     0x4034aa
  40348c:	mov    rcx,QWORD PTR [rsp+0x1a0]
  403494:	mov    edx,DWORD PTR [rsp+0x40]
  403498:	call   0x406bd0
  40349d:	mov    rcx,QWORD PTR [rsp+0xc8]
  4034a5:	call   0x4060b0
  4034aa:	mov    eax,DWORD PTR [rsp+0xa4]
  4034b1:	movaps xmm6,XMMWORD PTR [rsp+0xd0]
  4034b9:	movaps xmm7,XMMWORD PTR [rsp+0xe0]
  4034c1:	movaps xmm8,XMMWORD PTR [rsp+0xf0]
  4034ca:	movaps xmm9,XMMWORD PTR [rsp+0x100]
  4034d3:	movaps xmm10,XMMWORD PTR [rsp+0x110]
  4034dc:	movaps xmm11,XMMWORD PTR [rsp+0x120]
  4034e5:	add    rsp,0x138
  4034ec:	pop    rbx
  4034ed:	pop    rsi
  4034ee:	pop    rdi
  4034ef:	pop    rbp
  4034f0:	pop    r12
  4034f2:	pop    r13
  4034f4:	pop    r14
  4034f6:	pop    r15
  4034f8:	ret    
  4034f9:	nop    DWORD PTR [rax+0x0]
  403500:	or     DWORD PTR [rsp+0xa4],0x8
  403508:	jmp    0x403487
  40350d:	nop    DWORD PTR [rax]
  403510:	mov    rdx,rax
  403513:	mov    DWORD PTR [rsp+0x58],0x0
  40351b:	add    rax,0x1
  40351f:	mov    QWORD PTR [rsp+0xc0],rax
  403527:	movzx  r8d,BYTE PTR [rdx+0x1]
  40352c:	test   r8b,r8b
  40352f:	je     0x403443
  403535:	xor    r12d,r12d
  403538:	cmp    r8b,0x30
  40353c:	mov    r15,rax
  40353f:	je     0x4035f8
  403545:	mov    rax,QWORD PTR [rsp+0x190]
  40354d:	mov    eax,DWORD PTR [rax+0x10]
  403550:	mov    DWORD PTR [rsp+0x84],eax
  403557:	movsx  eax,r8b
  40355b:	lea    edx,[rax-0x30]
  40355e:	cmp    edx,0x9
  403561:	ja     0x403653
  403567:	lea    rcx,[r15+0x1]
  40356b:	xor    edx,edx
  40356d:	xor    esi,esi
  40356f:	xor    ebx,ebx
  403571:	jmp    0x4035a5
  403573:	lea    eax,[rsi+rsi*4]
  403576:	movsx  r8d,r8b
  40357a:	lea    esi,[r8+rax*2-0x30]
  40357f:	mov    QWORD PTR [rsp+0xc0],rcx
  403587:	movsx  eax,BYTE PTR [rcx]
  40358a:	add    ebx,0x1
  40358d:	mov    r9,rcx
  403590:	lea    rcx,[rcx+0x1]
  403594:	lea    r10d,[rax-0x30]
  403598:	mov    r8d,eax
  40359b:	cmp    r10d,0x9
  40359f:	ja     0x403660
  4035a5:	cmp    ebx,0x8
  4035a8:	jle    0x403573
  4035aa:	cmp    ebx,0xf
  4035ad:	jg     0x40357f
  4035af:	lea    eax,[rdx+rdx*4]
  4035b2:	movsx  r8d,r8b
  4035b6:	lea    edx,[r8+rax*2-0x30]
  4035bb:	jmp    0x40357f
  4035bd:	nop    DWORD PTR [rax]
  4035c0:	add    rax,0x1
  4035c4:	mov    QWORD PTR [rsp+0xc0],rax
  4035cc:	movzx  r8d,BYTE PTR [rax]
  4035d0:	cmp    r8b,0x2d
  4035d4:	jbe    0x403436
  4035da:	nop    WORD PTR [rax+rax*1+0x0]
  4035e0:	xor    r12d,r12d
  4035e3:	cmp    r8b,0x30
  4035e7:	mov    DWORD PTR [rsp+0x58],0x0
  4035ef:	mov    r15,rax
  4035f2:	jne    0x403545
  4035f8:	movzx  edx,BYTE PTR [rax+0x1]
  4035fc:	cmp    dl,0x58
  4035ff:	je     0x4047bf
  403605:	add    rax,0x1
  403609:	cmp    dl,0x78
  40360c:	je     0x4047bf
  403612:	mov    r15,rax
  403615:	mov    QWORD PTR [rsp+0xc0],rax
  40361d:	add    rax,0x1
  403621:	movzx  edx,BYTE PTR [rax-0x1]
  403625:	cmp    dl,0x30
  403628:	je     0x403612
  40362a:	xor    r8d,r8d
  40362d:	test   dl,dl
  40362f:	je     0x403461
  403635:	mov    r8d,edx
  403638:	mov    r12d,0x1
  40363e:	jmp    0x403545
  403643:	mov    rdx,rax
  403646:	mov    DWORD PTR [rsp+0x58],0x1
  40364e:	jmp    0x40351b
  403653:	mov    r9,r15
  403656:	xor    edx,edx
  403658:	xor    esi,esi
  40365a:	xor    ebx,ebx
  40365c:	nop    DWORD PTR [rax+0x0]
  403660:	movsx  ecx,BYTE PTR [rbp+0x0]
  403664:	cmp    ecx,eax
  403666:	je     0x403a64
  40366c:	mov    ebp,ebx
  40366e:	xor    ecx,ecx
  403670:	xor    r13d,r13d
  403673:	xor    r11d,r11d
  403676:	mov    r8d,eax
  403679:	and    r8d,0xffffffdf
  40367d:	cmp    r8d,0x45
  403681:	je     0x403780
  403687:	xor    r8d,r8d
  40368a:	test   ebp,ebp
  40368c:	jne    0x4038f5
  403692:	or     ecx,r12d
  403695:	jne    0x4038e8
  40369b:	test   r11d,r11d
  40369e:	jne    0x4038b3
  4036a4:	cmp    eax,0x4e
  4036a7:	je     0x4036c1
  4036a9:	jle    0x4038aa
  4036af:	cmp    eax,0x69
  4036b2:	je     0x404a4a
  4036b8:	cmp    eax,0x6e
  4036bb:	jne    0x4038b3
  4036c1:	lea    rbx,[rsp+0xc0]
  4036c9:	lea    rdx,[rip+0xa8f9]        # 0x40dfc9
  4036d0:	mov    rcx,rbx
  4036d3:	call   0x406b80
  4036d8:	test   eax,eax
  4036da:	je     0x4038b3
  4036e0:	mov    rax,QWORD PTR [rsp+0x190]
  4036e8:	mov    rsi,QWORD PTR [rsp+0x198]
  4036f0:	xor    ebp,ebp
  4036f2:	mov    rdx,QWORD PTR [rsp+0xc0]
  4036fa:	mov    DWORD PTR [rsp+0xa4],0x4
  403705:	mov    eax,DWORD PTR [rax+0x8]
  403708:	mov    DWORD PTR [rsp+0x44],eax
  40370c:	add    eax,0x1
  40370f:	mov    DWORD PTR [rsi],eax
  403711:	cmp    BYTE PTR [rdx],0x28
  403714:	je     0x404e26
  40371a:	nop    WORD PTR [rax+rax*1+0x0]
  403720:	mov    rsi,QWORD PTR [rsp+0x198]
  403728:	mov    DWORD PTR [rsi],eax
  40372a:	mov    r8,QWORD PTR [rsp+0xc8]
  403732:	test   ebp,ebp
  403734:	je     0x403461
  40373a:	mov    r9d,DWORD PTR [rsp+0x84]
  403742:	test   r9d,r9d
  403745:	jne    0x403e74
  40374b:	mov    eax,DWORD PTR [rsp+0xa4]
  403752:	mov    ecx,DWORD PTR [r8+0x14]
  403756:	xor    edx,edx
  403758:	and    eax,0xfffffff8
  40375b:	test   ecx,ecx
  40375d:	setg   dl
  403760:	add    edx,edx
  403762:	or     eax,edx
  403764:	test   al,0x30
  403766:	jne    0x4038d3
  40376c:	mov    DWORD PTR [rsp+0xa4],eax
  403773:	jmp    0x403461
  403778:	nop    DWORD PTR [rax+rax*1+0x0]
  403780:	mov    eax,ebp
  403782:	or     eax,ecx
  403784:	or     eax,r12d
  403787:	je     0x4038b3
  40378d:	mov    rdi,QWORD PTR [rsp+0xc0]
  403795:	lea    rax,[rdi+0x1]
  403799:	mov    QWORD PTR [rsp+0xc0],rax
  4037a1:	movsx  eax,BYTE PTR [rdi+0x1]
  4037a5:	cmp    al,0x2b
  4037a7:	je     0x404968
  4037ad:	cmp    al,0x2d
  4037af:	je     0x403d71
  4037b5:	mov    DWORD PTR [rsp+0x44],0x0
  4037bd:	lea    r8d,[rax-0x30]
  4037c1:	cmp    r8d,0x9
  4037c5:	ja     0x403ea0
  4037cb:	cmp    eax,0x30
  4037ce:	jne    0x4037f5
  4037d0:	mov    rax,QWORD PTR [rsp+0xc0]
  4037d8:	lea    r8,[rax+0x1]
  4037dc:	nop    DWORD PTR [rax+0x0]
  4037e0:	mov    QWORD PTR [rsp+0xc0],r8
  4037e8:	movsx  eax,BYTE PTR [r8]
  4037ec:	add    r8,0x1
  4037f0:	cmp    eax,0x30
  4037f3:	je     0x4037e0
  4037f5:	lea    r9d,[rax-0x31]
  4037f9:	xor    r8d,r8d
  4037fc:	cmp    r9d,0x8
  403800:	ja     0x40368a
  403806:	lea    r9d,[rax-0x30]
  40380a:	mov    rax,QWORD PTR [rsp+0xc0]
  403812:	lea    r10,[rax+0x1]
  403816:	mov    QWORD PTR [rsp+0x50],rax
  40381b:	mov    QWORD PTR [rsp+0xc0],r10
  403823:	mov    QWORD PTR [rsp+0x48],r10
  403828:	mov    r10,rax
  40382b:	movsx  eax,BYTE PTR [rax+0x1]
  40382f:	lea    r8d,[rax-0x30]
  403833:	cmp    r8d,0x9
  403837:	ja     0x403873
  403839:	lea    r8,[r10+0x2]
  40383d:	mov    DWORD PTR [rsp+0x5c],r11d
  403842:	lea    r9d,[r9+r9*4]
  403846:	mov    QWORD PTR [rsp+0xc0],r8
  40384e:	mov    r11,r8
  403851:	add    r8,0x1
  403855:	lea    r9d,[rax+r9*2-0x30]
  40385a:	movsx  eax,BYTE PTR [r8-0x1]
  40385f:	lea    r10d,[rax-0x30]
  403863:	cmp    r10d,0x9
  403867:	jbe    0x403842
  403869:	mov    QWORD PTR [rsp+0x48],r11
  40386e:	mov    r11d,DWORD PTR [rsp+0x5c]
  403873:	mov    r8,QWORD PTR [rsp+0x48]
  403878:	sub    r8,QWORD PTR [rsp+0x50]
  40387d:	cmp    r8,0x8
  403881:	jg     0x404a3f
  403887:	cmp    r9d,0x4e1f
  40388e:	jg     0x404a3f
  403894:	mov    r10d,DWORD PTR [rsp+0x44]
  403899:	mov    r8d,r10d
  40389c:	neg    r8d
  40389f:	xor    r8d,r9d
  4038a2:	add    r8d,r10d
  4038a5:	jmp    0x40368a
  4038aa:	cmp    eax,0x49
  4038ad:	je     0x404a4a
  4038b3:	mov    DWORD PTR [rsp+0xa4],0x6
  4038be:	mov    QWORD PTR [rsp+0xc0],rdi
  4038c6:	mov    r8,QWORD PTR [rsp+0xc8]
  4038ce:	jmp    0x403461
  4038d3:	or     eax,0x40
  4038d6:	mov    DWORD PTR [rsp+0xa4],eax
  4038dd:	call   0x406d70
  4038e2:	mov    DWORD PTR [rax],0x22
  4038e8:	mov    r8,QWORD PTR [rsp+0xc8]
  4038f0:	jmp    0x403461
  4038f5:	mov    rax,QWORD PTR [rsp+0x190]
  4038fd:	mov    ecx,DWORD PTR [rsp+0x58]
  403901:	sub    r8d,r13d
  403904:	mov    DWORD PTR [rsp+0xa4],0x1
  40390f:	mov    DWORD PTR [rsp+0x68],r8d
  403914:	mov    eax,DWORD PTR [rax+0xc]
  403917:	mov    DWORD PTR [rsp+0x44],eax
  40391b:	and    eax,0x3
  40391e:	mov    edi,eax
  403920:	sub    edi,ecx
  403922:	cmp    eax,0x2
  403925:	mov    DWORD PTR [rsp+0x6c],edi
  403929:	je     0x403943
  40392b:	lea    edi,[rcx+0x1]
  40392e:	cmp    eax,0x3
  403931:	mov    DWORD PTR [rsp+0x6c],edi
  403935:	je     0x403943
  403937:	test   eax,eax
  403939:	sete   al
  40393c:	movzx  eax,al
  40393f:	mov    DWORD PTR [rsp+0x6c],eax
  403943:	pxor   xmm0,xmm0
  403947:	mov    eax,esi
  403949:	test   ebx,ebx
  40394b:	cmove  ebx,ebp
  40394e:	mov    edi,0x10
  403953:	cmp    ebp,0x10
  403956:	cmovle edi,ebp
  403959:	cvtsi2sd xmm0,rax
  40395e:	cmp    edi,0x9
  403961:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40396a:	jle    0x403993
  40396c:	pxor   xmm1,xmm1
  403970:	lea    eax,[rdi-0x9]
  403973:	mov    rcx,QWORD PTR [rip+0xaae6]        # 0x40e460
  40397a:	cdqe   
  40397c:	cvtsi2sd xmm1,rdx
  403981:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  403986:	addsd  xmm0,xmm1
  40398a:	movsd  QWORD PTR [rsp+0xb0],xmm0
  403993:	cmp    ebp,0xf
  403996:	jg     0x403b05
  40399c:	cmp    DWORD PTR [rsp+0x40],0x35
  4039a1:	jg     0x403b05
  4039a7:	cmp    DWORD PTR [rsp+0x68],0x0
  4039ac:	je     0x404990
  4039b2:	jle    0x403e19
  4039b8:	cmp    DWORD PTR [rsp+0x68],0x16
  4039bd:	jg     0x4049ba
  4039c3:	movsxd rcx,DWORD PTR [rsp+0x68]
  4039c8:	mov    edx,DWORD PTR [rsp+0xb0]
  4039cf:	lea    rax,[rip+0xa6ea]        # 0x40e0c0
  4039d6:	test   edx,edx
  4039d8:	mov    r8d,DWORD PTR [rax+rcx*4]
  4039dc:	je     0x404aae
  4039e2:	tzcnt  edx,edx
  4039e6:	mov    eax,0x35
  4039eb:	sub    eax,edx
  4039ed:	mov    rdx,QWORD PTR [rip+0xaa6c]        # 0x40e460
  4039f4:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  4039fd:	add    eax,r8d
  403a00:	cmp    eax,0x35
  403a03:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  403a08:	lea    rdx,[rsp+0xa4]
  403a10:	setle  al
  403a13:	movzx  eax,al
  403a16:	lea    rcx,[rsp+0xb0]
  403a1e:	mov    QWORD PTR [rsp+0x30],rdx
  403a23:	mov    edx,DWORD PTR [rsp+0x6c]
  403a27:	mov    DWORD PTR [rsp+0x20],eax
  403a2b:	mov    DWORD PTR [rsp+0x28],edx
  403a2f:	movsd  QWORD PTR [rsp+0xb0],xmm0
  403a38:	mov    r9,QWORD PTR [rsp+0x1a0]
  403a40:	mov    r8,QWORD PTR [rsp+0x198]
  403a48:	mov    rdx,QWORD PTR [rsp+0x190]
  403a50:	call   0x402ec0
  403a55:	test   eax,eax
  403a57:	jne    0x4038e8
  403a5d:	xor    eax,eax
  403a5f:	jmp    0x403b09
  403a64:	movzx  r8d,BYTE PTR [rbp+0x1]
  403a69:	test   r8b,r8b
  403a6c:	je     0x404ced
  403a72:	cmp    r8b,BYTE PTR [r9+0x1]
  403a76:	jne    0x40366c
  403a7c:	mov    eax,0x2
  403a81:	jmp    0x403a92
  403a83:	add    rax,0x1
  403a87:	cmp    r8b,BYTE PTR [r9+rax*1-0x1]
  403a8c:	jne    0x403c90
  403a92:	movzx  r8d,BYTE PTR [rbp+rax*1+0x0]
  403a98:	test   r8b,r8b
  403a9b:	jne    0x403a83
  403a9d:	lea    r8,[r9+rax*1]
  403aa1:	test   ebx,ebx
  403aa3:	mov    QWORD PTR [rsp+0xc0],r8
  403aab:	movsx  eax,BYTE PTR [r8]
  403aaf:	je     0x403d8e
  403ab5:	lea    r8d,[rax-0x30]
  403ab9:	xor    ecx,ecx
  403abb:	xor    r13d,r13d
  403abe:	mov    ebp,ebx
  403ac0:	cmp    r8d,0x9
  403ac4:	ja     0x403afa
  403ac6:	test   r8d,r8d
  403ac9:	lea    eax,[rcx+0x1]
  403acc:	mov    r9d,r8d
  403acf:	jne    0x404c6d
  403ad5:	mov    r8,QWORD PTR [rsp+0xc0]
  403add:	mov    ecx,eax
  403adf:	lea    rax,[r8+0x1]
  403ae3:	mov    QWORD PTR [rsp+0xc0],rax
  403aeb:	movsx  eax,BYTE PTR [r8+0x1]
  403af0:	lea    r8d,[rax-0x30]
  403af4:	cmp    r8d,0x9
  403af8:	jbe    0x403ac6
  403afa:	mov    r11d,0x1
  403b00:	jmp    0x403676
  403b05:	mov    eax,DWORD PTR [rsp+0x68]
  403b09:	mov    edx,ebp
  403b0b:	sub    edx,edi
  403b0d:	add    edx,eax
  403b0f:	cmp    edx,0x0
  403b12:	jle    0x40484a
  403b18:	mov    eax,edx
  403b1a:	and    eax,0xf
  403b1d:	je     0x403b3f
  403b1f:	mov    rcx,QWORD PTR [rip+0xa93a]        # 0x40e460
  403b26:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  403b2f:	cdqe   
  403b31:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  403b36:	movsd  QWORD PTR [rsp+0xb0],xmm0
  403b3f:	and    edx,0xfffffff0
  403b42:	jne    0x403ca1
  403b48:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  403b51:	xor    edi,edi
  403b53:	lea    rdx,[rsp+0xac]
  403b5b:	lea    r8,[rsp+0xa8]
  403b63:	call   0x406880
  403b68:	mov    edx,DWORD PTR [rsp+0xa8]
  403b6f:	mov    r13d,DWORD PTR [rsp+0x40]
  403b74:	add    edi,DWORD PTR [rsp+0xac]
  403b7b:	mov    QWORD PTR [rsp+0xc8],rax
  403b83:	mov    r12d,edx
  403b86:	sub    r12d,r13d
  403b89:	test   r12d,r12d
  403b8c:	mov    DWORD PTR [rsp+0xac],edi
  403b93:	jle    0x403bbc
  403b95:	mov    edx,r12d
  403b98:	mov    rcx,rax
  403b9b:	call   0x4058f0
  403ba0:	mov    edi,DWORD PTR [rsp+0xac]
  403ba7:	mov    DWORD PTR [rsp+0xa8],r13d
  403baf:	mov    edx,r13d
  403bb2:	add    edi,r12d
  403bb5:	mov    DWORD PTR [rsp+0xac],edi
  403bbc:	lea    eax,[rdi+rdx*1]
  403bbf:	sub    eax,DWORD PTR [rsp+0x40]
  403bc3:	mov    ecx,eax
  403bc5:	mov    DWORD PTR [rsp+0x8c],eax
  403bcc:	mov    rax,QWORD PTR [rsp+0x190]
  403bd4:	mov    eax,DWORD PTR [rax+0x8]
  403bd7:	mov    DWORD PTR [rsp+0x44],eax
  403bdb:	add    eax,0x1
  403bde:	cmp    ecx,eax
  403be0:	jg     0x404785
  403be6:	mov    rax,QWORD PTR [rsp+0x190]
  403bee:	mov    eax,DWORD PTR [rax+0x4]
  403bf1:	cmp    ecx,eax
  403bf3:	mov    DWORD PTR [rsp+0x50],eax
  403bf7:	jge    0x404983
  403bfd:	sub    edi,eax
  403bff:	cmp    edi,0x0
  403c02:	jle    0x403dec
  403c08:	mov    rcx,QWORD PTR [rsp+0xc8]
  403c10:	mov    edx,edi
  403c12:	call   0x4064b0
  403c17:	add    DWORD PTR [rsp+0xa8],edi
  403c1e:	mov    QWORD PTR [rsp+0xc8],rax
  403c26:	mov    eax,DWORD PTR [rsp+0x50]
  403c2a:	mov    DWORD PTR [rsp+0xac],eax
  403c31:	mov    eax,DWORD PTR [rsp+0x84]
  403c38:	test   eax,eax
  403c3a:	je     0x403eb0
  403c40:	mov    eax,DWORD PTR [rsp+0x8c]
  403c47:	add    eax,0x1
  403c4a:	cmp    DWORD PTR [rsp+0x50],eax
  403c4e:	jle    0x403eb0
  403c54:	mov    r8,QWORD PTR [rsp+0xc8]
  403c5c:	mov    rax,QWORD PTR [rsp+0x198]
  403c64:	mov    esi,DWORD PTR [rsp+0x50]
  403c68:	mov    DWORD PTR [rsp+0xa4],0x50
  403c73:	mov    DWORD PTR [r8+0x14],0x0
  403c7b:	mov    DWORD PTR [r8+0x18],0x0
  403c83:	mov    DWORD PTR [rax],esi
  403c85:	jmp    0x40373a
  403c8a:	nop    WORD PTR [rax+rax*1+0x0]
  403c90:	mov    eax,ecx
  403c92:	mov    ebp,ebx
  403c94:	xor    ecx,ecx
  403c96:	xor    r13d,r13d
  403c99:	xor    r11d,r11d
  403c9c:	jmp    0x403676
  403ca1:	sar    edx,0x4
  403ca4:	cmp    edx,0xf
  403ca7:	jle    0x404d73
  403cad:	mov    rax,QWORD PTR [rip+0xa6dc]        # 0x40e390
  403cb4:	mov    ecx,edx
  403cb6:	xor    r8d,r8d
  403cb9:	movsd  xmm1,QWORD PTR [rax+0x20]
  403cbe:	xchg   ax,ax
  403cc0:	mov    eax,DWORD PTR [rsp+0xb4]
  403cc7:	sub    ecx,0x10
  403cca:	mov    r9d,eax
  403ccd:	and    eax,0x800fffff
  403cd2:	or     eax,0x3ff00000
  403cd7:	and    r9d,0x7ff00000
  403cde:	mov    DWORD PTR [rsp+0xb4],eax
  403ce5:	shr    r9d,0x14
  403ce9:	cmp    ecx,0xf
  403cec:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  403cf5:	lea    r8d,[r8+r9*1-0x3ff]
  403cfd:	mulsd  xmm0,xmm1
  403d01:	movsd  QWORD PTR [rsp+0xb0],xmm0
  403d0a:	jg     0x403cc0
  403d0c:	and    edx,0xf
  403d0f:	mov    eax,DWORD PTR [rsp+0xb4]
  403d16:	mov    ecx,eax
  403d18:	and    eax,0x800fffff
  403d1d:	or     eax,0x3ff00000
  403d22:	and    ecx,0x7ff00000
  403d28:	shr    ecx,0x14
  403d2b:	mov    DWORD PTR [rsp+0xb4],eax
  403d32:	test   edx,edx
  403d34:	lea    edi,[r8+rcx*1-0x3ff]
  403d3c:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  403d45:	mov    rax,QWORD PTR [rip+0xa644]        # 0x40e390
  403d4c:	je     0x403b53
  403d52:	test   dl,0x1
  403d55:	je     0x403d5b
  403d57:	mulsd  xmm0,QWORD PTR [rax]
  403d5b:	add    rax,0x8
  403d5f:	sar    edx,1
  403d61:	jne    0x403d52
  403d63:	movsd  QWORD PTR [rsp+0xb0],xmm0
  403d6c:	jmp    0x403b53
  403d71:	mov    DWORD PTR [rsp+0x44],0x1
  403d79:	lea    rax,[rdi+0x2]
  403d7d:	mov    QWORD PTR [rsp+0xc0],rax
  403d85:	movsx  eax,BYTE PTR [rdi+0x2]
  403d89:	jmp    0x4037bd
  403d8e:	cmp    eax,0x30
  403d91:	jne    0x404dd5
  403d97:	add    r8,0x1
  403d9b:	xor    ecx,ecx
  403d9d:	nop    DWORD PTR [rax]
  403da0:	mov    QWORD PTR [rsp+0xc0],r8
  403da8:	movsx  eax,BYTE PTR [r8]
  403dac:	add    ecx,0x1
  403daf:	add    r8,0x1
  403db3:	cmp    eax,0x30
  403db6:	je     0x403da0
  403db8:	lea    r8d,[rax-0x31]
  403dbc:	cmp    r8d,0x8
  403dc0:	ja     0x404a35
  403dc6:	mov    r15,QWORD PTR [rsp+0xc0]
  403dce:	lea    r9d,[rax-0x30]
  403dd2:	lea    r13d,[rcx+0x1]
  403dd6:	mov    ebp,0x1
  403ddb:	mov    r8,r15
  403dde:	lea    eax,[rsi+rsi*4]
  403de1:	xor    ecx,ecx
  403de3:	lea    esi,[r9+rax*2]
  403de7:	jmp    0x403adf
  403dec:	je     0x403c26
  403df2:	add    edx,edi
  403df4:	test   edx,edx
  403df6:	mov    DWORD PTR [rsp+0xa8],edx
  403dfd:	jle    0x404d96
  403e03:	mov    rcx,QWORD PTR [rsp+0xc8]
  403e0b:	neg    edi
  403e0d:	mov    edx,edi
  403e0f:	call   0x4058f0
  403e14:	jmp    0x403c26
  403e19:	mov    edx,DWORD PTR [rsp+0x68]
  403e1d:	cmp    edx,0xffffffea
  403e20:	mov    eax,edx
  403e22:	jl     0x403b09
  403e28:	mov    rdx,QWORD PTR [rip+0xa631]        # 0x40e460
  403e2f:	neg    eax
  403e31:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  403e3a:	cdqe   
  403e3c:	divsd  xmm0,QWORD PTR [rdx+rax*8]
  403e41:	lea    rax,[rsp+0xa4]
  403e49:	movsd  QWORD PTR [rsp+0xb0],xmm0
  403e52:	lea    rcx,[rsp+0xb0]
  403e5a:	mov    DWORD PTR [rsp+0x20],0x0
  403e62:	mov    QWORD PTR [rsp+0x30],rax
  403e67:	mov    eax,DWORD PTR [rsp+0x6c]
  403e6b:	mov    DWORD PTR [rsp+0x28],eax
  403e6f:	jmp    0x403a38
  403e74:	mov    DWORD PTR [r8+0x14],0x0
  403e7c:	mov    DWORD PTR [rsp+0xa4],0x50
  403e87:	call   0x406d70
  403e8c:	mov    r8,QWORD PTR [rsp+0xc8]
  403e94:	mov    DWORD PTR [rax],0x22
  403e9a:	jmp    0x403461
  403e9f:	nop
  403ea0:	mov    QWORD PTR [rsp+0xc0],rdi
  403ea8:	xor    r8d,r8d
  403eab:	jmp    0x40368a
  403eb0:	mov    eax,DWORD PTR [rsp+0x50]
  403eb4:	mov    DWORD PTR [rsp+0x44],0x1
  403ebc:	mov    DWORD PTR [rsp+0x8c],eax
  403ec3:	mov    r8d,ebp
  403ec6:	mov    edx,ebx
  403ec8:	mov    DWORD PTR [rsp+0x20],r14d
  403ecd:	mov    r9d,esi
  403ed0:	mov    rcx,r15
  403ed3:	call   0x4069c0
  403ed8:	mov    QWORD PTR [rsp+0x70],rax
  403edd:	add    rax,0x10
  403ee1:	mov    QWORD PTR [rsp+0x78],rax
  403ee6:	mov    eax,DWORD PTR [rsp+0x40]
  403eea:	movsd  xmm8,QWORD PTR [rip+0xa22d]        # 0x40e120
  403ef3:	movsd  xmm9,QWORD PTR [rip+0xa234]        # 0x40e130
  403efc:	add    eax,0x1
  403eff:	movapd xmm11,xmm8
  403f04:	mov    DWORD PTR [rsp+0x80],eax
  403f0b:	mov    eax,DWORD PTR [rsp+0x68]
  403f0f:	movsd  xmm10,QWORD PTR [rip+0xa238]        # 0x40e150
  403f18:	mov    edx,eax
  403f1a:	neg    edx
  403f1c:	test   eax,eax
  403f1e:	mov    eax,0x0
  403f23:	cmovs  eax,edx
  403f26:	xor    ebp,ebp
  403f28:	mov    DWORD PTR [rsp+0x5c],eax
  403f2c:	jmp    0x404170
  403f31:	mov    rcx,rsi
  403f34:	call   0x4064b0
  403f39:	mov    rsi,rax
  403f3c:	test   r15d,r15d
  403f3f:	je     0x403f4f
  403f41:	mov    rcx,rdi
  403f44:	mov    edx,r15d
  403f47:	call   0x406340
  403f4c:	mov    rdi,rax
  403f4f:	test   r12d,r12d
  403f52:	jle    0x403f62
  403f54:	mov    rcx,rdi
  403f57:	mov    edx,r12d
  403f5a:	call   0x4064b0
  403f5f:	mov    rdi,rax
  403f62:	test   r14d,r14d
  403f65:	jle    0x403f75
  403f67:	mov    rcx,r13
  403f6a:	mov    edx,r14d
  403f6d:	call   0x4064b0
  403f72:	mov    r13,rax
  403f75:	mov    rdx,rdi
  403f78:	mov    rcx,rsi
  403f7b:	call   0x406620
  403f80:	cmp    DWORD PTR [rax+0x14],0x1
  403f84:	mov    rbx,rax
  403f87:	jle    0x404320
  403f8d:	mov    ebp,DWORD PTR [rbx+0x10]
  403f90:	mov    rdx,r13
  403f93:	mov    DWORD PTR [rbx+0x10],0x0
  403f9a:	mov    rcx,rbx
  403f9d:	call   0x4065d0
  403fa2:	test   eax,eax
  403fa4:	jg     0x4042b0
  403faa:	mov    ecx,DWORD PTR [rsp+0x6c]
  403fae:	test   ecx,ecx
  403fb0:	je     0x4042b0
  403fb6:	mov    eax,ecx
  403fb8:	and    eax,0x1
  403fbb:	xor    eax,ebp
  403fbd:	mov    DWORD PTR [rsp+0x60],eax
  403fc1:	je     0x404acb
  403fc7:	test   ebp,ebp
  403fc9:	je     0x404521
  403fcf:	movsd  xmm6,QWORD PTR [rip+0xa149]        # 0x40e120
  403fd7:	mov    DWORD PTR [rsp+0xa4],0x21
  403fe2:	xor    r12d,r12d
  403fe5:	mov    DWORD PTR [rsp+0x88],0x20
  403ff0:	xor    r14d,r14d
  403ff3:	movapd xmm7,xmm6
  403ff7:	mov    eax,DWORD PTR [rsp+0xa8]
  403ffe:	mov    edx,DWORD PTR [rsp+0xac]
  404005:	mov    r8d,DWORD PTR [rsp+0x44]
  40400a:	add    edx,eax
  40400c:	test   r8d,r8d
  40400f:	mov    DWORD PTR [rsp+0x48],edx
  404013:	jne    0x40401f
  404015:	cmp    DWORD PTR [rsp+0x40],eax
  404019:	jg     0x4046d5
  40401f:	lea    rdx,[rsp+0x9c]
  404027:	lea    r8,[rsp+0xa0]
  40402f:	movapd xmm0,xmm6
  404033:	call   0x406880
  404038:	mov    edx,DWORD PTR [rsp+0x9c]
  40403f:	mov    r15,rax
  404042:	test   edx,edx
  404044:	js     0x404710
  40404a:	je     0x404057
  40404c:	mov    rcx,rax
  40404f:	call   0x4064b0
  404054:	mov    r15,rax
  404057:	mov    rbp,QWORD PTR [rsp+0xc8]
  40405f:	test   r14d,r14d
  404062:	mov    rdx,r15
  404065:	mov    rcx,rbp
  404068:	je     0x404450
  40406e:	call   0x406620
  404073:	mov    ecx,DWORD PTR [rsp+0x44]
  404077:	mov    QWORD PTR [rsp+0xc8],rax
  40407f:	mov    edx,DWORD PTR [rbp+0x14]
  404082:	test   ecx,ecx
  404084:	jne    0x4045f0
  40408a:	sub    edx,0x1
  40408d:	cmp    edx,DWORD PTR [rax+0x14]
  404090:	jge    0x4040ad
  404092:	movsxd rdx,edx
  404095:	add    rdx,0x4
  404099:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  40409e:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  4040a3:	xor    ecx,0x1f
  4040a6:	xor    edx,0x1f
  4040a9:	cmp    ecx,edx
  4040ab:	jle    0x4040d0
  4040ad:	mov    ecx,DWORD PTR [rsp+0x50]
  4040b1:	cmp    DWORD PTR [rsp+0x8c],ecx
  4040b8:	jne    0x4044d0
  4040be:	sub    DWORD PTR [rsp+0xa8],0x1
  4040c6:	mov    DWORD PTR [rsp+0x44],0x1
  4040ce:	xchg   ax,ax
  4040d0:	mov    rcx,r15
  4040d3:	call   0x4060b0
  4040d8:	mov    rcx,rbp
  4040db:	call   0x4060b0
  4040e0:	mov    r14d,DWORD PTR [rsp+0x60]
  4040e5:	test   r14d,r14d
  4040e8:	jne    0x404330
  4040ee:	test   r12d,r12d
  4040f1:	je     0x404138
  4040f3:	mov    eax,DWORD PTR [rsp+0xa8]
  4040fa:	add    eax,DWORD PTR [rsp+0xac]
  404101:	cmp    DWORD PTR [rsp+0x48],eax
  404105:	jne    0x404138
  404107:	mulsd  xmm6,QWORD PTR [rip+0xa039]        # 0x40e148
  40410f:	movapd xmm0,xmm7
  404113:	subsd  xmm0,QWORD PTR [rip+0xa01d]        # 0x40e138
  40411b:	movapd xmm1,xmm6
  40411f:	xorpd  xmm1,xmm10
  404124:	ucomisd xmm1,xmm0
  404128:	jbe    0x4046a2
  40412e:	ucomisd xmm7,xmm6
  404132:	ja     0x4046c2
  404138:	mov    r12d,DWORD PTR [rsp+0x44]
  40413d:	test   r12d,r12d
  404140:	je     0x404505
  404146:	mov    DWORD PTR [rsp+0x44],0x1
  40414e:	xor    ebp,ebp
  404150:	mov    rcx,rsi
  404153:	call   0x4060b0
  404158:	mov    rcx,rdi
  40415b:	call   0x4060b0
  404160:	mov    rcx,r13
  404163:	call   0x4060b0
  404168:	mov    rcx,rbx
  40416b:	call   0x4060b0
  404170:	mov    rsi,QWORD PTR [rsp+0x70]
  404175:	mov    r15d,0x0
  40417b:	mov    ecx,DWORD PTR [rsi+0x8]
  40417e:	call   0x405fa0
  404183:	lea    rcx,[rax+0x10]
  404187:	mov    rdi,rax
  40418a:	movsxd rax,DWORD PTR [rsi+0x14]
  40418e:	mov    rdx,QWORD PTR [rsp+0x78]
  404193:	lea    r8,[rax*4+0x8]
  40419b:	call   0x406d08
  4041a0:	mov    rax,QWORD PTR [rsp+0xc8]
  4041a8:	mov    ecx,DWORD PTR [rax+0x8]
  4041ab:	call   0x405fa0
  4041b0:	mov    rdx,QWORD PTR [rsp+0xc8]
  4041b8:	lea    rcx,[rax+0x10]
  4041bc:	mov    rsi,rax
  4041bf:	movsxd rax,DWORD PTR [rdx+0x14]
  4041c3:	add    rdx,0x10
  4041c7:	lea    r8,[rax*4+0x8]
  4041cf:	call   0x406d08
  4041d4:	mov    eax,DWORD PTR [rsp+0xa8]
  4041db:	mov    ecx,0x1
  4041e0:	mov    ebx,DWORD PTR [rsp+0xac]
  4041e7:	sub    eax,ebp
  4041e9:	add    ebx,ebp
  4041eb:	mov    DWORD PTR [rsp+0x48],eax
  4041ef:	call   0x4061e0
  4041f4:	mov    r13,rax
  4041f7:	mov    eax,DWORD PTR [rsp+0x68]
  4041fb:	test   eax,eax
  4041fd:	cmovg  r15d,eax
  404201:	test   ebx,ebx
  404203:	js     0x4044c0
  404209:	mov    eax,DWORD PTR [rsp+0x5c]
  40420d:	mov    edx,r15d
  404210:	lea    r14d,[rax+rbx*1]
  404214:	mov    ecx,DWORD PTR [rsp+0x48]
  404218:	mov    eax,DWORD PTR [rsp+0x80]
  40421f:	add    ebx,ecx
  404221:	sub    ebx,DWORD PTR [rsp+0x40]
  404225:	sub    eax,ecx
  404227:	cmp    DWORD PTR [rsp+0x50],ebx
  40422b:	jle    0x404233
  40422d:	sub    ebx,DWORD PTR [rsp+0x50]
  404231:	add    eax,ebx
  404233:	lea    ebx,[r14+rax*1]
  404237:	lea    r12d,[rdx+rax*1]
  40423b:	cmp    ebx,r12d
  40423e:	mov    eax,r12d
  404241:	cmovle eax,ebx
  404244:	cmp    eax,r14d
  404247:	cmovg  eax,r14d
  40424b:	test   eax,eax
  40424d:	jle    0x404257
  40424f:	sub    ebx,eax
  404251:	sub    r12d,eax
  404254:	sub    r14d,eax
  404257:	mov    eax,DWORD PTR [rsp+0x5c]
  40425b:	test   eax,eax
  40425d:	je     0x40428c
  40425f:	mov    rcx,r13
  404262:	mov    edx,eax
  404264:	call   0x406340
  404269:	mov    rdx,rsi
  40426c:	mov    rcx,rax
  40426f:	mov    r13,rax
  404272:	call   0x406210
  404277:	mov    rcx,rsi
  40427a:	mov    QWORD PTR [rsp+0x60],rax
  40427f:	call   0x4060b0
  404284:	mov    rax,QWORD PTR [rsp+0x60]
  404289:	mov    rsi,rax
  40428c:	sub    ebx,ebp
  40428e:	cmp    ebx,0x0
  404291:	mov    edx,ebx
  404293:	jg     0x403f31
  404299:	je     0x403f3c
  40429f:	neg    edx
  4042a1:	mov    rcx,rsi
  4042a4:	call   0x4058f0
  4042a9:	jmp    0x403f3c
  4042ae:	xchg   ax,ax
  4042b0:	test   eax,eax
  4042b2:	js     0x404ae2
  4042b8:	je     0x404bae
  4042be:	mov    rdx,r13
  4042c1:	mov    rcx,rbx
  4042c4:	call   0x406ac0
  4042c9:	ucomisd xmm9,xmm0
  4042ce:	jb     0x404600
  4042d4:	test   ebp,ebp
  4042d6:	jne    0x404730
  4042dc:	mov    DWORD PTR [rsp+0x60],0x0
  4042e4:	cmp    DWORD PTR [rsp+0x48],0x1
  4042e9:	jg     0x4042f9
  4042eb:	mov    r9d,DWORD PTR [rsp+0x44]
  4042f0:	test   r9d,r9d
  4042f3:	jne    0x404cba
  4042f9:	movapd xmm6,xmm8
  4042fe:	xor    r12d,r12d
  404301:	mov    DWORD PTR [rsp+0x88],0x10
  40430c:	movapd xmm7,xmm8
  404311:	mov    r14d,0x1
  404317:	jmp    0x403ff7
  40431c:	nop    DWORD PTR [rax+0x0]
  404320:	mov    r15d,DWORD PTR [rax+0x18]
  404324:	test   r15d,r15d
  404327:	jne    0x403f8d
  40432d:	nop    DWORD PTR [rax]
  404330:	mov    ebp,DWORD PTR [rsp+0x44]
  404334:	test   ebp,ebp
  404336:	je     0x404828
  40433c:	mov    eax,DWORD PTR [rsp+0xac]
  404343:	mov    ebp,0x1
  404348:	mov    rdx,QWORD PTR [rsp+0x198]
  404350:	mov    rcx,rsi
  404353:	mov    DWORD PTR [rdx],eax
  404355:	call   0x4060b0
  40435a:	mov    rcx,rdi
  40435d:	call   0x4060b0
  404362:	mov    rcx,r13
  404365:	call   0x4060b0
  40436a:	mov    rcx,QWORD PTR [rsp+0x70]
  40436f:	call   0x4060b0
  404374:	mov    rcx,rbx
  404377:	call   0x4060b0
  40437c:	mov    rax,QWORD PTR [rsp+0x190]
  404384:	mov    esi,DWORD PTR [rsp+0xac]
  40438b:	cmp    DWORD PTR [rax+0x8],esi
  40438e:	jge    0x40372a
  404394:	mov    rax,QWORD PTR [rsp+0x190]
  40439c:	mov    eax,DWORD PTR [rax+0xc]
  40439f:	mov    DWORD PTR [rsp+0x44],eax
  4043a3:	and    eax,0x3
  4043a6:	cmp    eax,0x2
  4043a9:	je     0x404b9b
  4043af:	cmp    eax,0x3
  4043b2:	je     0x404b88
  4043b8:	cmp    eax,0x1
  4043bb:	je     0x404787
  4043c1:	mov    rcx,QWORD PTR [rsp+0xc8]
  4043c9:	call   0x4060b0
  4043ce:	mov    rax,QWORD PTR [rsp+0x190]
  4043d6:	mov    rsi,QWORD PTR [rsp+0x198]
  4043de:	mov    QWORD PTR [rsp+0xc8],0x0
  4043ea:	mov    DWORD PTR [rsp+0xa4],0x11
  4043f5:	mov    eax,DWORD PTR [rax+0x8]
  4043f8:	mov    DWORD PTR [rsi],eax
  4043fa:	mov    rax,QWORD PTR [rsp+0x190]
  404402:	mov    rsi,QWORD PTR [rsp+0x1a0]
  40440a:	mov    ecx,DWORD PTR [rax]
  40440c:	lea    eax,[rcx+0x1f]
  40440f:	sar    eax,0x5
  404412:	cdqe   
  404414:	lea    rdx,[rsi+rax*4]
  404418:	mov    rax,rsi
  40441b:	cmp    rsi,rdx
  40441e:	jae    0x404430
  404420:	add    rax,0x4
  404424:	mov    DWORD PTR [rax-0x4],0xffffffff
  40442b:	cmp    rdx,rax
  40442e:	ja     0x404420
  404430:	and    ecx,0x1f
  404433:	je     0x404441
  404435:	mov    eax,0x20
  40443a:	sub    eax,ecx
  40443c:	mov    ecx,eax
  40443e:	shr    DWORD PTR [rdx-0x4],cl
  404441:	xor    r8d,r8d
  404444:	jmp    0x403732
  404449:	nop    DWORD PTR [rax+0x0]
  404450:	call   0x404ec0
  404455:	mov    edx,DWORD PTR [rax+0x14]
  404458:	mov    QWORD PTR [rsp+0xc8],rax
  404460:	sub    edx,0x1
  404463:	cmp    edx,DWORD PTR [rbp+0x14]
  404466:	jge    0x404487
  404468:	movsxd rdx,edx
  40446b:	add    rdx,0x4
  40446f:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  404474:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  404479:	xor    ecx,0x1f
  40447c:	xor    edx,0x1f
  40447f:	cmp    ecx,edx
  404481:	jge    0x4040d0
  404487:	mov    edx,DWORD PTR [rsp+0x44]
  40448b:	test   edx,edx
  40448d:	je     0x404760
  404493:	mov    eax,DWORD PTR [rsp+0xa8]
  40449a:	add    eax,0x1
  40449d:	cmp    DWORD PTR [rsp+0x40],eax
  4044a1:	mov    DWORD PTR [rsp+0xa8],eax
  4044a8:	setne  al
  4044ab:	movzx  eax,al
  4044ae:	mov    DWORD PTR [rsp+0x44],eax
  4044b2:	jmp    0x4040d0
  4044b7:	nop    WORD PTR [rax+rax*1+0x0]
  4044c0:	mov    edx,r15d
  4044c3:	mov    r14d,DWORD PTR [rsp+0x5c]
  4044c8:	sub    edx,ebx
  4044ca:	jmp    0x404214
  4044cf:	nop
  4044d0:	mov    edx,0x1
  4044d5:	mov    rcx,rax
  4044d8:	call   0x4064b0
  4044dd:	mov    rcx,r15
  4044e0:	mov    QWORD PTR [rsp+0xc8],rax
  4044e8:	sub    DWORD PTR [rsp+0xac],0x1
  4044f0:	sub    DWORD PTR [rsp+0x8c],0x1
  4044f8:	call   0x4060b0
  4044fd:	mov    rcx,rbp
  404500:	call   0x4060b0
  404505:	mov    rcx,QWORD PTR [rsp+0xc8]
  40450d:	call   0x4059f0
  404512:	mov    DWORD PTR [rsp+0x44],0x0
  40451a:	mov    ebp,eax
  40451c:	jmp    0x404150
  404521:	mov    edx,DWORD PTR [rsp+0x50]
  404525:	cmp    DWORD PTR [rsp+0x8c],edx
  40452c:	mov    DWORD PTR [rsp+0xa4],0x11
  404537:	je     0x4042e4
  40453d:	xor    ecx,ecx
  40453f:	cmp    DWORD PTR [rsp+0x40],0x1f
  404544:	mov    r9,QWORD PTR [rsp+0xc8]
  40454c:	mov    eax,DWORD PTR [rsp+0x40]
  404550:	jle    0x40458c
  404552:	mov    r14d,DWORD PTR [r9+0x18]
  404556:	test   r14d,r14d
  404559:	jne    0x4042e4
  40455f:	lea    rdx,[r9+0x1c]
  404563:	mov    eax,DWORD PTR [rsp+0x40]
  404567:	xor    ecx,ecx
  404569:	jmp    0x404581
  40456b:	nop    DWORD PTR [rax+rax*1+0x0]
  404570:	add    rdx,0x4
  404574:	mov    r12d,DWORD PTR [rdx-0x4]
  404578:	test   r12d,r12d
  40457b:	jne    0x4042e4
  404581:	sub    eax,0x20
  404584:	add    ecx,0x1
  404587:	cmp    eax,0x1f
  40458a:	jg     0x404570
  40458c:	cmp    eax,0x1
  40458f:	jle    0x4045b3
  404591:	movsxd rcx,ecx
  404594:	sub    eax,0x1
  404597:	lea    r8,[r9+rcx*4]
  40459b:	xor    ecx,ecx
  40459d:	mov    edx,DWORD PTR [r8+0x18]
  4045a1:	tzcnt  ecx,edx
  4045a5:	shr    edx,cl
  4045a7:	cmp    eax,ecx
  4045a9:	mov    DWORD PTR [r8+0x18],edx
  4045ad:	jg     0x4042e4
  4045b3:	mov    eax,DWORD PTR [rsp+0x8c]
  4045ba:	mov    rcx,r9
  4045bd:	sub    eax,0x1
  4045c0:	mov    DWORD PTR [rsp+0xac],eax
  4045c7:	mov    eax,DWORD PTR [rsp+0x40]
  4045cb:	mov    edx,eax
  4045cd:	mov    DWORD PTR [rsp+0xa8],eax
  4045d4:	call   0x4032c0
  4045d9:	mov    QWORD PTR [rsp+0xc8],rax
  4045e1:	jmp    0x404330
  4045e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4045f0:	mov    DWORD PTR [rsp+0x44],0x1
  4045f8:	jmp    0x4040d0
  4045fd:	nop    DWORD PTR [rax]
  404600:	movapd xmm7,xmm0
  404604:	cmp    ebp,0x1
  404607:	movsd  xmm1,QWORD PTR [rip+0x9b29]        # 0x40e138
  40460f:	sbb    eax,eax
  404611:	and    eax,0x10
  404614:	movsd  xmm0,QWORD PTR [rip+0x9b24]        # 0x40e140
  40461c:	mulsd  xmm7,xmm1
  404620:	add    eax,0x10
  404623:	xor    r14d,r14d
  404626:	cmp    ebp,0x1
  404629:	mov    DWORD PTR [rsp+0x88],eax
  404630:	setb   r14b
  404634:	ucomisd xmm0,xmm7
  404638:	jbe    0x404720
  40463e:	cvttsd2si r12d,xmm7
  404643:	pxor   xmm6,xmm6
  404647:	mov    eax,DWORD PTR [rsp+0x6c]
  40464b:	cmp    eax,0x1
  40464e:	cvtsi2sd xmm6,r12d
  404653:	subsd  xmm7,xmm6
  404657:	je     0x404975
  40465d:	cmp    eax,0x2
  404660:	jne    0x404819
  404666:	test   r14d,r14d
  404669:	jne    0x404695
  40466b:	ucomisd xmm7,QWORD PTR [rip+0x9ab5]        # 0x40e128
  404673:	jbe    0x404695
  404675:	pxor   xmm6,xmm6
  404679:	add    r12d,0x1
  40467d:	mov    eax,0x30
  404682:	sub    eax,DWORD PTR [rsp+0x88]
  404689:	cvtsi2sd xmm6,r12d
  40468e:	mov    DWORD PTR [rsp+0x88],eax
  404695:	mov    DWORD PTR [rsp+0x60],0x0
  40469d:	jmp    0x403ff7
  4046a2:	ucomisd xmm0,xmm6
  4046a6:	jbe    0x404138
  4046ac:	movsd  xmm0,QWORD PTR [rip+0x9a6c]        # 0x40e120
  4046b4:	subsd  xmm0,xmm6
  4046b8:	ucomisd xmm0,xmm7
  4046bc:	jbe    0x404138
  4046c2:	mov    eax,DWORD PTR [rsp+0x88]
  4046c9:	or     DWORD PTR [rsp+0xa4],eax
  4046d0:	jmp    0x404330
  4046d5:	mov    r15d,DWORD PTR [rsp+0x40]
  4046da:	mov    rcx,QWORD PTR [rsp+0xc8]
  4046e2:	mov    ebp,r15d
  4046e5:	sub    ebp,eax
  4046e7:	mov    edx,ebp
  4046e9:	call   0x4064b0
  4046ee:	sub    DWORD PTR [rsp+0xac],ebp
  4046f5:	mov    QWORD PTR [rsp+0xc8],rax
  4046fd:	mov    DWORD PTR [rsp+0xa8],r15d
  404705:	jmp    0x40401f
  40470a:	nop    WORD PTR [rax+rax*1+0x0]
  404710:	neg    edx
  404712:	mov    rcx,rax
  404715:	call   0x4058f0
  40471a:	jmp    0x404057
  40471f:	nop
  404720:	movapd xmm6,xmm7
  404724:	xor    r12d,r12d
  404727:	jmp    0x404695
  40472c:	nop    DWORD PTR [rax+0x0]
  404730:	movapd xmm6,xmm11
  404735:	xor    r12d,r12d
  404738:	movapd xmm7,xmm11
  40473d:	mov    DWORD PTR [rsp+0x88],0x20
  404748:	mov    DWORD PTR [rsp+0x60],0x0
  404750:	xor    r14d,r14d
  404753:	jmp    0x403ff7
  404758:	nop    DWORD PTR [rax+rax*1+0x0]
  404760:	mov    edx,0x1
  404765:	mov    rcx,rax
  404768:	xor    r12d,r12d
  40476b:	call   0x4058f0
  404770:	add    DWORD PTR [rsp+0xac],0x1
  404778:	add    DWORD PTR [rsp+0x8c],0x1
  404780:	jmp    0x4040d0
  404785:	xor    ebp,ebp
  404787:	mov    rax,QWORD PTR [rsp+0xc8]
  40478f:	mov    DWORD PTR [rsp+0xa4],0xa3
  40479a:	mov    DWORD PTR [rax+0x14],0x0
  4047a1:	call   0x406d70
  4047a6:	mov    DWORD PTR [rax],0x22
  4047ac:	mov    rax,QWORD PTR [rsp+0x190]
  4047b4:	mov    eax,DWORD PTR [rax+0x8]
  4047b7:	add    eax,0x1
  4047ba:	jmp    0x403720
  4047bf:	mov    eax,DWORD PTR [rsp+0x58]
  4047c3:	mov    r8,QWORD PTR [rsp+0x198]
  4047cb:	lea    rcx,[rsp+0xc0]
  4047d3:	mov    rdx,QWORD PTR [rsp+0x190]
  4047db:	lea    r9,[rsp+0xc8]
  4047e3:	mov    DWORD PTR [rsp+0x20],eax
  4047e7:	call   0x405020
  4047ec:	cmp    eax,0x6
  4047ef:	mov    DWORD PTR [rsp+0xa4],eax
  4047f6:	mov    r8,QWORD PTR [rsp+0xc8]
  4047fe:	jne    0x403461
  404804:	mov    QWORD PTR [rsp+0xc0],rdi
  40480c:	mov    DWORD PTR [rsp+0x58],0x0
  404814:	jmp    0x403461
  404819:	ucomisd xmm7,xmm1
  40481d:	jae    0x404675
  404823:	jmp    0x404695
  404828:	mov    eax,DWORD PTR [rsp+0xa8]
  40482f:	mov    ebp,DWORD PTR [rsp+0x40]
  404833:	sub    ebp,eax
  404835:	cmp    ebp,0x0
  404838:	jne    0x404a01
  40483e:	mov    eax,DWORD PTR [rsp+0xac]
  404845:	jmp    0x404348
  40484a:	je     0x403b48
  404850:	neg    edx
  404852:	mov    eax,edx
  404854:	and    eax,0xf
  404857:	je     0x404879
  404859:	mov    rcx,QWORD PTR [rip+0x9c00]        # 0x40e460
  404860:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  404869:	cdqe   
  40486b:	divsd  xmm0,QWORD PTR [rcx+rax*8]
  404870:	movsd  QWORD PTR [rsp+0xb0],xmm0
  404879:	and    edx,0xfffffff0
  40487c:	je     0x403b48
  404882:	mov    eax,edx
  404884:	sar    eax,0x4
  404887:	cmp    eax,0xf
  40488a:	jle    0x404e58
  404890:	mov    rdx,QWORD PTR [rip+0x9bd9]        # 0x40e470
  404897:	mov    ecx,eax
  404899:	xor    r8d,r8d
  40489c:	movsd  xmm1,QWORD PTR [rdx+0x20]
  4048a1:	mov    edx,DWORD PTR [rsp+0xb4]
  4048a8:	sub    ecx,0x10
  4048ab:	mov    r9d,edx
  4048ae:	and    edx,0x800fffff
  4048b4:	or     edx,0x3ff00000
  4048ba:	and    r9d,0x7ff00000
  4048c1:	mov    DWORD PTR [rsp+0xb4],edx
  4048c8:	shr    r9d,0x14
  4048cc:	cmp    ecx,0xf
  4048cf:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  4048d8:	lea    r8d,[r8+r9*1-0x3ff]
  4048e0:	mulsd  xmm0,xmm1
  4048e4:	movsd  QWORD PTR [rsp+0xb0],xmm0
  4048ed:	jg     0x4048a1
  4048ef:	and    eax,0xf
  4048f2:	mov    edx,DWORD PTR [rsp+0xb4]
  4048f9:	mov    ecx,edx
  4048fb:	and    edx,0x800fffff
  404901:	and    ecx,0x7ff00000
  404907:	or     edx,0x3ff00000
  40490d:	shr    ecx,0x14
  404910:	mov    DWORD PTR [rsp+0xb4],edx
  404917:	test   eax,eax
  404919:	lea    edi,[r8+rcx*1-0x3ff]
  404921:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40492a:	jle    0x403b53
  404930:	movsd  xmm1,QWORD PTR [rsp+0xb0]
  404939:	mov    rdx,QWORD PTR [rip+0x9b30]        # 0x40e470
  404940:	movapd xmm0,xmm1
  404944:	test   al,0x1
  404946:	je     0x404950
  404948:	mulsd  xmm1,QWORD PTR [rdx]
  40494c:	movapd xmm0,xmm1
  404950:	sar    eax,1
  404952:	add    rdx,0x8
  404956:	test   eax,eax
  404958:	jg     0x404944
  40495a:	movsd  QWORD PTR [rsp+0xb0],xmm1
  404963:	jmp    0x403b53
  404968:	mov    DWORD PTR [rsp+0x44],0x0
  404970:	jmp    0x403d79
  404975:	test   r14d,r14d
  404978:	je     0x404695
  40497e:	jmp    0x40466b
  404983:	mov    DWORD PTR [rsp+0x44],0x0
  40498b:	jmp    0x403ec3
  404990:	lea    rax,[rsp+0xa4]
  404998:	lea    rcx,[rsp+0xb0]
  4049a0:	mov    DWORD PTR [rsp+0x20],0x1
  4049a8:	mov    QWORD PTR [rsp+0x30],rax
  4049ad:	mov    eax,DWORD PTR [rsp+0x6c]
  4049b1:	mov    DWORD PTR [rsp+0x28],eax
  4049b5:	jmp    0x403a38
  4049ba:	mov    ecx,DWORD PTR [rsp+0x68]
  4049be:	mov    edx,0x25
  4049c3:	sub    edx,ebp
  4049c5:	cmp    ecx,edx
  4049c7:	mov    eax,ecx
  4049c9:	jg     0x403b09
  4049cf:	mov    rdx,QWORD PTR [rip+0x9a8a]        # 0x40e460
  4049d6:	mov    eax,0xf
  4049db:	sub    eax,ebp
  4049dd:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  4049e6:	movsxd rcx,eax
  4049e9:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  4049ee:	mov    ecx,DWORD PTR [rsp+0x68]
  4049f2:	sub    ecx,eax
  4049f4:	movsxd rax,ecx
  4049f7:	mulsd  xmm0,QWORD PTR [rdx+rax*8]
  4049fc:	jmp    0x403e41
  404a01:	mov    edx,ebp
  404a03:	jle    0x404d5f
  404a09:	mov    rcx,QWORD PTR [rsp+0xc8]
  404a11:	call   0x4064b0
  404a16:	mov    QWORD PTR [rsp+0xc8],rax
  404a1e:	mov    eax,DWORD PTR [rsp+0xac]
  404a25:	sub    eax,ebp
  404a27:	xor    ebp,ebp
  404a29:	mov    DWORD PTR [rsp+0xac],eax
  404a30:	jmp    0x404348
  404a35:	xor    ebp,ebp
  404a37:	xor    r13d,r13d
  404a3a:	jmp    0x403afa
  404a3f:	mov    r9d,0x4e1f
  404a45:	jmp    0x403894
  404a4a:	lea    rbx,[rsp+0xc0]
  404a52:	lea    rdx,[rip+0x9567]        # 0x40dfc0
  404a59:	mov    rcx,rbx
  404a5c:	call   0x406b80
  404a61:	test   eax,eax
  404a63:	je     0x4038b3
  404a69:	lea    rdx,[rip+0x9553]        # 0x40dfc3
  404a70:	mov    rcx,rbx
  404a73:	sub    QWORD PTR [rsp+0xc0],0x1
  404a7c:	call   0x406b80
  404a81:	test   eax,eax
  404a83:	jne    0x404a8e
  404a85:	add    QWORD PTR [rsp+0xc0],0x1
  404a8e:	mov    rax,QWORD PTR [rsp+0x190]
  404a96:	mov    DWORD PTR [rsp+0xa4],0x3
  404aa1:	xor    ebp,ebp
  404aa3:	mov    eax,DWORD PTR [rax+0x8]
  404aa6:	add    eax,0x1
  404aa9:	jmp    0x403720
  404aae:	mov    edx,DWORD PTR [rsp+0xb4]
  404ab5:	mov    eax,0x15
  404aba:	or     edx,0x100000
  404ac0:	tzcnt  edx,edx
  404ac4:	sub    eax,edx
  404ac6:	jmp    0x4039ed
  404acb:	cmp    ebp,0x1
  404ace:	sbb    eax,eax
  404ad0:	and    eax,0x10
  404ad3:	add    eax,0x11
  404ad6:	mov    DWORD PTR [rsp+0xa4],eax
  404add:	jmp    0x404330
  404ae2:	cmp    ebp,0x1
  404ae5:	sbb    eax,eax
  404ae7:	and    eax,0x10
  404aea:	add    eax,0x11
  404aed:	test   ebp,ebp
  404aef:	mov    DWORD PTR [rsp+0xa4],eax
  404af6:	jne    0x404330
  404afc:	cmp    DWORD PTR [rsp+0x48],0x1
  404b01:	jg     0x404330
  404b07:	mov    ebp,DWORD PTR [rsp+0x44]
  404b0b:	test   ebp,ebp
  404b0d:	jne    0x404330
  404b13:	mov    edx,DWORD PTR [rsp+0x8c]
  404b1a:	cmp    DWORD PTR [rsp+0x50],edx
  404b1e:	je     0x404330
  404b24:	mov    rcx,rbx
  404b27:	mov    edx,0x1
  404b2c:	call   0x4064b0
  404b31:	mov    rdx,r13
  404b34:	mov    rcx,rax
  404b37:	mov    rbx,rax
  404b3a:	call   0x4065d0
  404b3f:	test   eax,eax
  404b41:	jle    0x404828
  404b47:	mov    DWORD PTR [rsp+0xa4],0x11
  404b52:	mov    DWORD PTR [rsp+0x44],0x0
  404b5a:	mov    eax,DWORD PTR [rsp+0x40]
  404b5e:	mov    rcx,QWORD PTR [rsp+0xc8]
  404b66:	sub    DWORD PTR [rsp+0xac],eax
  404b6d:	mov    edx,eax
  404b6f:	mov    DWORD PTR [rsp+0xa8],eax
  404b76:	call   0x4032c0
  404b7b:	mov    QWORD PTR [rsp+0xc8],rax
  404b83:	jmp    0x404330
  404b88:	mov    r10d,DWORD PTR [rsp+0x58]
  404b8d:	test   r10d,r10d
  404b90:	jne    0x404787
  404b96:	jmp    0x4043c1
  404b9b:	mov    r11d,DWORD PTR [rsp+0x58]
  404ba0:	test   r11d,r11d
  404ba3:	je     0x404787
  404ba9:	jmp    0x4043c1
  404bae:	test   ebp,ebp
  404bb0:	je     0x404cf7
  404bb6:	mov    r11d,DWORD PTR [rsp+0x44]
  404bbb:	test   r11d,r11d
  404bbe:	je     0x404dc5
  404bc4:	mov    ecx,DWORD PTR [rsp+0xa8]
  404bcb:	mov    r8,QWORD PTR [rsp+0xc8]
  404bd3:	mov    edx,ecx
  404bd5:	lea    rax,[r8+0x18]
  404bd9:	sar    edx,0x5
  404bdc:	movsxd rdx,edx
  404bdf:	lea    rdx,[rax+rdx*4]
  404be3:	cmp    rax,rdx
  404be6:	jae    0x404c13
  404be8:	cmp    DWORD PTR [r8+0x18],0xffffffff
  404bed:	lea    rax,[r8+0x1c]
  404bf1:	je     0x404c0e
  404bf3:	jmp    0x404dc5
  404bf8:	nop    DWORD PTR [rax+rax*1+0x0]
  404c00:	add    rax,0x4
  404c04:	cmp    DWORD PTR [rax-0x4],0xffffffff
  404c08:	jne    0x404dc5
  404c0e:	cmp    rdx,rax
  404c11:	ja     0x404c00
  404c13:	and    ecx,0x1f
  404c16:	je     0x404c2a
  404c18:	or     edx,0xffffffff
  404c1b:	shl    edx,cl
  404c1d:	or     edx,DWORD PTR [rax]
  404c1f:	mov    eax,edx
  404c21:	add    eax,0x1
  404c24:	jne    0x404dc5
  404c2a:	mov    eax,DWORD PTR [rsp+0x40]
  404c2e:	mov    edx,DWORD PTR [rsp+0x50]
  404c32:	mov    DWORD PTR [r8+0x14],0x1
  404c3a:	mov    DWORD PTR [r8+0x18],0x1
  404c42:	mov    DWORD PTR [rsp+0xa8],0x1
  404c4d:	mov    DWORD PTR [rsp+0xa4],0x21
  404c58:	lea    eax,[rax+rdx*1-0x1]
  404c5c:	mov    DWORD PTR [rsp+0xac],eax
  404c63:	mov    eax,0x1
  404c68:	jmp    0x40482f
  404c6d:	add    r13d,eax
  404c70:	cmp    eax,0x1
  404c73:	je     0x404c9c
  404c75:	add    ecx,ebp
  404c77:	mov    r10d,ecx
  404c7a:	jmp    0x404c85
  404c7c:	lea    esi,[rsi+rsi*4]
  404c7f:	add    esi,esi
  404c81:	cmp    ebp,ecx
  404c83:	je     0x404c9f
  404c85:	add    ebp,0x1
  404c88:	lea    eax,[rbp-0x1]
  404c8b:	cmp    eax,0x8
  404c8e:	jle    0x404c7c
  404c90:	cmp    ebp,0x10
  404c93:	jg     0x404c81
  404c95:	lea    edx,[rdx+rdx*4]
  404c98:	add    edx,edx
  404c9a:	jmp    0x404c81
  404c9c:	mov    r10d,ebp
  404c9f:	cmp    r10d,0x8
  404ca3:	lea    ebp,[r10+0x1]
  404ca7:	jg     0x404d7b
  404cad:	mov    r8,QWORD PTR [rsp+0xc0]
  404cb5:	jmp    0x403dde
  404cba:	mov    r9,QWORD PTR [rsp+0xc8]
  404cc2:	mov    DWORD PTR [rsp+0x44],0x1
  404cca:	mov    eax,DWORD PTR [rsp+0x50]
  404cce:	mov    DWORD PTR [r9+0x14],0x0
  404cd6:	mov    DWORD PTR [rsp+0xa4],0x50
  404ce1:	mov    DWORD PTR [rsp+0xac],eax
  404ce8:	jmp    0x404330
  404ced:	mov    eax,0x1
  404cf2:	jmp    0x403a9d
  404cf7:	cmp    DWORD PTR [rsp+0x48],0x1
  404cfc:	je     0x404ddc
  404d02:	mov    DWORD PTR [rsp+0xa4],0x21
  404d0d:	mov    r10d,DWORD PTR [rsp+0x44]
  404d12:	test   r10d,r10d
  404d15:	jne    0x404d25
  404d17:	mov    edx,DWORD PTR [rsp+0x40]
  404d1b:	cmp    DWORD PTR [rsp+0x48],edx
  404d1f:	jl     0x404828
  404d25:	mov    r9,QWORD PTR [rsp+0xc8]
  404d2d:	mov    eax,DWORD PTR [r9+0x18]
  404d31:	test   al,0x1
  404d33:	je     0x404330
  404d39:	test   ebp,ebp
  404d3b:	jne    0x404e60
  404d41:	cmp    DWORD PTR [rsp+0x48],0x1
  404d46:	je     0x404cca
  404d48:	sub    eax,0x1
  404d4b:	mov    DWORD PTR [rsp+0xa4],0x11
  404d56:	mov    DWORD PTR [r9+0x18],eax
  404d5a:	jmp    0x404330
  404d5f:	mov    rcx,QWORD PTR [rsp+0xc8]
  404d67:	neg    edx
  404d69:	call   0x4058f0
  404d6e:	jmp    0x404a1e
  404d73:	xor    r8d,r8d
  404d76:	jmp    0x403d0f
  404d7b:	cmp    ebp,0x10
  404d7e:	jg     0x404d87
  404d80:	lea    eax,[rdx+rdx*4]
  404d83:	lea    edx,[r8+rax*2]
  404d87:	mov    r8,QWORD PTR [rsp+0xc0]
  404d8f:	xor    ecx,ecx
  404d91:	jmp    0x403adf
  404d96:	cmp    edx,0xffffffff
  404d99:	jl     0x403c54
  404d9f:	mov    rax,QWORD PTR [rsp+0xc8]
  404da7:	mov    DWORD PTR [rsp+0xa8],0x1
  404db2:	mov    DWORD PTR [rax+0x14],0x1
  404db9:	mov    DWORD PTR [rax+0x18],0x1
  404dc0:	jmp    0x403c26
  404dc5:	mov    DWORD PTR [rsp+0xa4],0x11
  404dd0:	jmp    0x404d0d
  404dd5:	xor    ecx,ecx
  404dd7:	jmp    0x403db8
  404ddc:	mov    edx,DWORD PTR [rsp+0x8c]
  404de3:	cmp    DWORD PTR [rsp+0x50],edx
  404de7:	jne    0x404ead
  404ded:	mov    rax,QWORD PTR [rsp+0xc8]
  404df5:	mov    DWORD PTR [rsp+0xa4],0x21
  404e00:	cmp    DWORD PTR [rax+0x14],0x1
  404e04:	jne    0x404330
  404e0a:	cmp    DWORD PTR [rax+0x18],0x1
  404e0e:	mov    eax,DWORD PTR [rsp+0x48]
  404e12:	cmovne eax,DWORD PTR [rsp+0x84]
  404e1a:	mov    DWORD PTR [rsp+0x84],eax
  404e21:	jmp    0x404330
  404e26:	mov    r8,QWORD PTR [rsp+0x1a0]
  404e2e:	mov    rdx,QWORD PTR [rsp+0x190]
  404e36:	mov    rcx,rbx
  404e39:	call   0x405ac0
  404e3e:	mov    DWORD PTR [rsp+0xa4],eax
  404e45:	mov    rax,QWORD PTR [rsp+0x190]
  404e4d:	mov    eax,DWORD PTR [rax+0x8]
  404e50:	add    eax,0x1
  404e53:	jmp    0x403720
  404e58:	xor    r8d,r8d
  404e5b:	jmp    0x4048f2
  404e60:	mov    rcx,r9
  404e63:	call   0x402e10
  404e68:	mov    edx,DWORD PTR [rax+0x14]
  404e6b:	mov    ecx,DWORD PTR [rsp+0xa8]
  404e72:	mov    QWORD PTR [rsp+0xc8],rax
  404e7a:	sub    edx,0x1
  404e7d:	movsxd rdx,edx
  404e80:	bsr    edx,DWORD PTR [rax+rdx*4+0x18]
  404e85:	mov    eax,ecx
  404e87:	neg    eax
  404e89:	and    eax,0x1f
  404e8c:	xor    edx,0x1f
  404e8f:	cmp    edx,eax
  404e91:	je     0x404e9d
  404e93:	add    ecx,0x1
  404e96:	mov    DWORD PTR [rsp+0xa8],ecx
  404e9d:	mov    DWORD PTR [rsp+0xa4],0x21
  404ea8:	jmp    0x404330
  404ead:	mov    DWORD PTR [rsp+0xa4],0x1
  404eb8:	jmp    0x404b5a
  404ebd:	nop
  404ebe:	nop
  404ebf:	nop
  404ec0:	push   r13
  404ec2:	push   r12
  404ec4:	push   rbp
  404ec5:	push   rdi
  404ec6:	push   rsi
  404ec7:	push   rbx
  404ec8:	sub    rsp,0x28
  404ecc:	mov    eax,DWORD PTR [rdx+0x14]
  404ecf:	cmp    DWORD PTR [rcx+0x14],eax
  404ed2:	mov    rsi,rcx
  404ed5:	mov    rdi,rdx
  404ed8:	jge    0x404ee0
  404eda:	mov    rsi,rdx
  404edd:	mov    rdi,rcx
  404ee0:	mov    ecx,DWORD PTR [rsi+0x8]
  404ee3:	xor    r12d,r12d
  404ee6:	call   0x405fa0
  404eeb:	movsxd rcx,DWORD PTR [rsi+0x14]
  404eef:	mov    rbx,rax
  404ef2:	lea    r11,[rdi+0x18]
  404ef6:	lea    r8,[rbx+0x18]
  404efa:	mov    DWORD PTR [rax+0x14],ecx
  404efd:	movsxd rdx,DWORD PTR [rdi+0x14]
  404f01:	lea    rax,[rsi+0x18]
  404f05:	lea    rdi,[r8+rdx*4]
  404f09:	mov    rbp,rdx
  404f0c:	nop    DWORD PTR [rax+0x0]
  404f10:	mov    r10d,DWORD PTR [rax]
  404f13:	mov    r9d,DWORD PTR [r11]
  404f16:	add    r8,0x4
  404f1a:	add    rax,0x4
  404f1e:	add    r11,0x4
  404f22:	movzx  r13d,r9w
  404f26:	movzx  edx,r10w
  404f2a:	shr    r9d,0x10
  404f2e:	add    edx,r13d
  404f31:	shr    r10d,0x10
  404f35:	add    edx,r12d
  404f38:	add    r10d,r9d
  404f3b:	mov    r9d,edx
  404f3e:	mov    WORD PTR [r8-0x4],dx
  404f43:	and    r9d,0x10000
  404f4a:	shr    r9d,0x10
  404f4e:	add    r9d,r10d
  404f51:	mov    r12d,r9d
  404f54:	mov    WORD PTR [r8-0x2],r9w
  404f59:	and    r12d,0x10000
  404f60:	shr    r12d,0x10
  404f64:	cmp    rdi,r8
  404f67:	ja     0x404f10
  404f69:	mov    edx,DWORD PTR [rsi+0x14]
  404f6c:	sub    edx,ebp
  404f6e:	movsxd rdx,edx
  404f71:	lea    r11,[rdi+rdx*4]
  404f75:	cmp    r11,r8
  404f78:	jbe    0x404fbb
  404f7a:	nop    WORD PTR [rax+rax*1+0x0]
  404f80:	mov    r9d,DWORD PTR [rax]
  404f83:	add    r8,0x4
  404f87:	add    rax,0x4
  404f8b:	movzx  r10d,r9w
  404f8f:	shr    r9d,0x10
  404f93:	add    r10d,r12d
  404f96:	mov    edx,r10d
  404f99:	mov    WORD PTR [r8-0x4],r10w
  404f9e:	and    edx,0x10000
  404fa4:	shr    edx,0x10
  404fa7:	add    edx,r9d
  404faa:	mov    WORD PTR [r8-0x2],dx
  404faf:	mov    r12d,edx
  404fb2:	shr    r12d,0x10
  404fb6:	cmp    r11,r8
  404fb9:	ja     0x404f80
  404fbb:	test   r12d,r12d
  404fbe:	je     0x404fd3
  404fc0:	cmp    ecx,DWORD PTR [rbx+0xc]
  404fc3:	je     0x404fe3
  404fc5:	lea    eax,[rcx+0x1]
  404fc8:	mov    DWORD PTR [rbx+0x14],eax
  404fcb:	mov    DWORD PTR [rbx+rcx*4+0x18],0x1
  404fd3:	mov    rax,rbx
  404fd6:	add    rsp,0x28
  404fda:	pop    rbx
  404fdb:	pop    rsi
  404fdc:	pop    rdi
  404fdd:	pop    rbp
  404fde:	pop    r12
  404fe0:	pop    r13
  404fe2:	ret    
  404fe3:	mov    eax,DWORD PTR [rbx+0x8]
  404fe6:	lea    ecx,[rax+0x1]
  404fe9:	call   0x405fa0
  404fee:	mov    rsi,rax
  404ff1:	lea    rcx,[rax+0x10]
  404ff5:	movsxd rax,DWORD PTR [rbx+0x14]
  404ff9:	lea    rdx,[rbx+0x10]
  404ffd:	lea    r8,[rax*4+0x8]
  405005:	call   0x406d08
  40500a:	mov    rcx,rbx
  40500d:	mov    rbx,rsi
  405010:	call   0x4060b0
  405015:	movsxd rcx,DWORD PTR [rsi+0x14]
  405019:	jmp    0x404fc5
  40501b:	nop
  40501c:	nop
  40501d:	nop
  40501e:	nop
  40501f:	nop
  405020:	push   r15
  405022:	push   r14
  405024:	push   r13
  405026:	push   r12
  405028:	push   rbp
  405029:	push   rdi
  40502a:	push   rsi
  40502b:	push   rbx
  40502c:	sub    rsp,0x28
  405030:	mov    r14,rcx
  405033:	mov    r13,rdx
  405036:	mov    QWORD PTR [rsp+0x80],r8
  40503e:	mov    QWORD PTR [rsp+0x88],r9
  405046:	call   0x406d18
  40504b:	mov    rdi,QWORD PTR [rip+0x935e]        # 0x40e3b0
  405052:	mov    rsi,QWORD PTR [rax]
  405055:	cmp    BYTE PTR [rdi+0x30],0x0
  405059:	je     0x405480
  40505f:	mov    rax,QWORD PTR [rsp+0x88]
  405067:	xor    r8d,r8d
  40506a:	mov    QWORD PTR [rax],0x0
  405071:	mov    rbx,QWORD PTR [r14]
  405074:	movzx  edx,BYTE PTR [rbx+0x2]
  405078:	lea    rax,[rbx+0x3]
  40507c:	add    rbx,0x2
  405080:	cmp    dl,0x30
  405083:	jne    0x405099
  405085:	mov    rbx,rax
  405088:	add    rax,0x1
  40508c:	movzx  edx,BYTE PTR [rax-0x1]
  405090:	add    r8d,0x1
  405094:	cmp    dl,0x30
  405097:	je     0x405085
  405099:	cmp    BYTE PTR [rdi+rdx*1],0x0
  40509d:	jne    0x4051f0
  4050a3:	movzx  r9d,BYTE PTR [rsi]
  4050a7:	test   r9b,r9b
  4050aa:	je     0x4056ea
  4050b0:	movzx  edx,BYTE PTR [rbx]
  4050b3:	cmp    r9b,dl
  4050b6:	jne    0x405493
  4050bc:	mov    eax,0x1
  4050c1:	jmp    0x4050d1
  4050c3:	add    rax,0x1
  4050c7:	cmp    dl,BYTE PTR [rbx+rax*1-0x1]
  4050cb:	jne    0x405490
  4050d1:	movzx  edx,BYTE PTR [rsi+rax*1]
  4050d5:	test   dl,dl
  4050d7:	jne    0x4050c3
  4050d9:	add    rax,rbx
  4050dc:	movzx  ecx,BYTE PTR [rax]
  4050df:	movzx  r10d,BYTE PTR [rdi+rcx*1]
  4050e4:	mov    rdx,rcx
  4050e7:	test   r10b,r10b
  4050ea:	jne    0x405570
  4050f0:	cmp    dl,0x50
  4050f3:	je     0x4053a0
  4050f9:	cmp    dl,0x70
  4050fc:	je     0x4053a0
  405102:	mov    rbp,rax
  405105:	mov    r11d,0x1
  40510b:	xor    r12d,r12d
  40510e:	xor    r15d,r15d
  405111:	xor    r10d,r10d
  405114:	test   r8d,r8d
  405117:	jne    0x40511d
  405119:	lea    rax,[rbx-0x1]
  40511d:	test   r11d,r11d
  405120:	mov    QWORD PTR [r14],rax
  405123:	jne    0x405450
  405129:	test   r10d,r10d
  40512c:	je     0x405260
  405132:	test   r15d,r15d
  405135:	mov    eax,DWORD PTR [r13+0xc]
  405139:	jne    0x4054e0
  40513f:	cmp    eax,0x2
  405142:	je     0x405788
  405148:	cmp    eax,0x3
  40514b:	je     0x405772
  405151:	cmp    eax,0x1
  405154:	je     0x405558
  40515a:	mov    esi,DWORD PTR [r13+0x0]
  40515e:	mov    ebx,esi
  405160:	and    esi,0x1f
  405163:	sar    ebx,0x5
  405166:	cmp    esi,0x1
  405169:	mov    edi,ebx
  40516b:	sbb    edi,0xffffffff
  40516e:	xor    ecx,ecx
  405170:	mov    eax,edi
  405172:	sar    eax,1
  405174:	je     0x405187
  405176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405180:	add    ecx,0x1
  405183:	sar    eax,1
  405185:	jne    0x405180
  405187:	call   0x405fa0
  40518c:	mov    rcx,QWORD PTR [rsp+0x88]
  405194:	test   ebx,ebx
  405196:	mov    QWORD PTR [rcx],rax
  405199:	mov    DWORD PTR [rax+0x14],edi
  40519c:	jle    0x4058a8
  4051a2:	lea    ecx,[rbx-0x1]
  4051a5:	lea    rdx,[rax+0x18]
  4051a9:	lea    rcx,[rax+rcx*4+0x1c]
  4051ae:	xchg   ax,ax
  4051b0:	mov    DWORD PTR [rdx],0xffffffff
  4051b6:	add    rdx,0x4
  4051ba:	cmp    rdx,rcx
  4051bd:	jne    0x4051b0
  4051bf:	mov    edx,ebx
  4051c1:	cmp    edi,ebx
  4051c3:	jle    0x4051d8
  4051c5:	movsxd r8,edx
  4051c8:	mov    edx,0x20
  4051cd:	mov    ecx,edx
  4051cf:	sub    ecx,esi
  4051d1:	sar    edx,cl
  4051d3:	mov    DWORD PTR [rax+r8*4+0x18],edx
  4051d8:	mov    eax,DWORD PTR [r13+0x4]
  4051dc:	mov    rdi,QWORD PTR [rsp+0x80]
  4051e4:	mov    DWORD PTR [rdi],eax
  4051e6:	mov    eax,0x11
  4051eb:	jmp    0x405452
  4051f0:	movzx  eax,BYTE PTR [rbx]
  4051f3:	movzx  r9d,BYTE PTR [rsi]
  4051f7:	add    r8d,0x1
  4051fb:	xor    r11d,r11d
  4051fe:	xor    r12d,r12d
  405201:	movzx  r10d,BYTE PTR [rdi+rax*1]
  405206:	mov    rdx,rax
  405209:	test   r10b,r10b
  40520c:	mov    rax,rbx
  40520f:	je     0x405221
  405211:	add    rax,0x1
  405215:	movzx  ecx,BYTE PTR [rax]
  405218:	cmp    BYTE PTR [rdi+rcx*1],0x0
  40521c:	mov    rdx,rcx
  40521f:	jne    0x405211
  405221:	cmp    dl,r9b
  405224:	je     0x4054a0
  40522a:	test   r12,r12
  40522d:	movzx  edx,BYTE PTR [rax]
  405230:	je     0x405239
  405232:	sub    r12d,eax
  405235:	shl    r12d,0x2
  405239:	cmp    dl,0x50
  40523c:	je     0x4053a9
  405242:	cmp    dl,0x70
  405245:	je     0x4053a9
  40524b:	test   r11d,r11d
  40524e:	mov    QWORD PTR [r14],rax
  405251:	mov    rbp,rax
  405254:	jne    0x405450
  40525a:	nop    WORD PTR [rax+rax*1+0x0]
  405260:	mov    rax,rbp
  405263:	xor    ecx,ecx
  405265:	sub    rax,rbx
  405268:	sub    eax,0x1
  40526b:	cmp    eax,0x7
  40526e:	jle    0x40527a
  405270:	sar    eax,1
  405272:	add    ecx,0x1
  405275:	cmp    eax,0x7
  405278:	jg     0x405270
  40527a:	call   0x405fa0
  40527f:	cmp    BYTE PTR [rsi+0x1],0x0
  405283:	mov    r14,rax
  405286:	lea    r15,[rax+0x18]
  40528a:	je     0x40579e
  405290:	mov    edx,0x1
  405295:	jmp    0x4052a3
  405297:	nop    WORD PTR [rax+rax*1+0x0]
  4052a0:	mov    rdx,rax
  4052a3:	cmp    BYTE PTR [rsi+rdx*1+0x1],0x0
  4052a8:	lea    rax,[rdx+0x1]
  4052ac:	jne    0x4052a0
  4052ae:	cmp    rbx,rbp
  4052b1:	jae    0x4057a5
  4052b7:	add    rsi,rdx
  4052ba:	mov    rax,r15
  4052bd:	xor    r9d,r9d
  4052c0:	xor    r8d,r8d
  4052c3:	jmp    0x4052f1
  4052c5:	cmp    r8d,0x20
  4052c9:	je     0x405463
  4052cf:	movzx  r10d,cl
  4052d3:	mov    ecx,r8d
  4052d6:	add    r8d,0x4
  4052da:	movzx  r10d,BYTE PTR [rdi+r10*1]
  4052df:	mov    rbp,r11
  4052e2:	and    r10d,0xf
  4052e6:	shl    r10d,cl
  4052e9:	or     r9d,r10d
  4052ec:	cmp    rbx,rbp
  4052ef:	jae    0x405308
  4052f1:	movzx  ecx,BYTE PTR [rbp-0x1]
  4052f5:	lea    r11,[rbp-0x1]
  4052f9:	cmp    cl,BYTE PTR [rsi]
  4052fb:	jne    0x4052c5
  4052fd:	sub    r11,rdx
  405300:	mov    rbp,r11
  405303:	cmp    rbx,rbp
  405306:	jb     0x4052f1
  405308:	bsr    edx,r9d
  40530c:	xor    edx,0x1f
  40530f:	mov    DWORD PTR [rax],r9d
  405312:	add    rax,0x4
  405316:	mov    esi,DWORD PTR [r13+0x0]
  40531a:	sub    rax,r15
  40531d:	sar    rax,0x2
  405321:	mov    DWORD PTR [r14+0x14],eax
  405325:	shl    eax,0x5
  405328:	sub    eax,edx
  40532a:	cmp    eax,esi
  40532c:	jg     0x4055d8
  405332:	mov    edi,0x0
  405337:	jl     0x4055ae
  40533d:	cmp    r12d,DWORD PTR [r13+0x8]
  405341:	jg     0x405550
  405347:	mov    eax,DWORD PTR [r13+0x4]
  40534b:	cmp    r12d,eax
  40534e:	jge    0x405639
  405354:	mov    ebx,eax
  405356:	sub    ebx,r12d
  405359:	cmp    esi,ebx
  40535b:	jg     0x405697
  405361:	mov    edx,DWORD PTR [r13+0xc]
  405365:	cmp    edx,0x2
  405368:	je     0x405872
  40536e:	cmp    edx,0x3
  405371:	je     0x40584f
  405377:	cmp    edx,0x1
  40537a:	je     0x405882
  405380:	mov    rcx,r14
  405383:	call   0x4060b0
  405388:	call   0x406d70
  40538d:	mov    DWORD PTR [rax],0x22
  405393:	mov    eax,0x50
  405398:	jmp    0x405452
  40539d:	nop    DWORD PTR [rax]
  4053a0:	xor    r12d,r12d
  4053a3:	mov    r11d,0x1
  4053a9:	movzx  edx,BYTE PTR [rax+0x1]
  4053ad:	cmp    dl,0x2b
  4053b0:	je     0x4055d0
  4053b6:	cmp    dl,0x2d
  4053b9:	je     0x4054b1
  4053bf:	movzx  edx,BYTE PTR [rdi+rdx*1]
  4053c3:	xor    r15d,r15d
  4053c6:	lea    r9,[rax+0x1]
  4053ca:	lea    ecx,[rdx-0x1]
  4053cd:	cmp    cl,0x18
  4053d0:	ja     0x4054cf
  4053d6:	lea    rcx,[r9+0x1]
  4053da:	movzx  r9d,BYTE PTR [r9+0x1]
  4053df:	sub    edx,0x10
  4053e2:	xor    r10d,r10d
  4053e5:	movzx  ebp,BYTE PTR [rdi+r9*1]
  4053ea:	mov    r9d,ebp
  4053ed:	sub    r9d,0x1
  4053f1:	cmp    r9b,0x18
  4053f5:	ja     0x405431
  4053f7:	nop    WORD PTR [rax+rax*1+0x0]
  405400:	test   edx,0xf8000000
  405406:	mov    r9d,0x1
  40540c:	lea    edx,[rdx+rdx*4]
  40540f:	cmovne r10d,r9d
  405413:	add    rcx,0x1
  405417:	movzx  r9d,BYTE PTR [rcx]
  40541b:	lea    edx,[rbp+rdx*2-0x10]
  40541f:	movzx  ebp,BYTE PTR [rdi+r9*1]
  405424:	mov    r9d,ebp
  405427:	sub    r9d,0x1
  40542b:	cmp    r9b,0x18
  40542f:	jbe    0x405400
  405431:	mov    r9d,r15d
  405434:	mov    rbp,rax
  405437:	mov    rax,rcx
  40543a:	neg    r9d
  40543d:	xor    edx,r9d
  405440:	add    edx,r15d
  405443:	add    r12d,edx
  405446:	jmp    0x405114
  40544b:	nop    DWORD PTR [rax+rax*1+0x0]
  405450:	xor    eax,eax
  405452:	add    rsp,0x28
  405456:	pop    rbx
  405457:	pop    rsi
  405458:	pop    rdi
  405459:	pop    rbp
  40545a:	pop    r12
  40545c:	pop    r13
  40545e:	pop    r14
  405460:	pop    r15
  405462:	ret    
  405463:	mov    DWORD PTR [rax],r9d
  405466:	mov    r8d,0x4
  40546c:	movzx  r10d,BYTE PTR [rbp-0x1]
  405471:	add    rax,0x4
  405475:	xor    r9d,r9d
  405478:	xor    ecx,ecx
  40547a:	jmp    0x4052da
  40547f:	nop
  405480:	call   0x405a30
  405485:	jmp    0x40505f
  40548a:	nop    WORD PTR [rax+rax*1+0x0]
  405490:	mov    edx,r9d
  405493:	mov    rax,rbx
  405496:	jmp    0x4050f0
  40549b:	nop    DWORD PTR [rax+rax*1+0x0]
  4054a0:	test   r12,r12
  4054a3:	je     0x4057b5
  4054a9:	movzx  edx,BYTE PTR [rax]
  4054ac:	jmp    0x405232
  4054b1:	mov    r15d,0x1
  4054b7:	movzx  edx,BYTE PTR [rax+0x2]
  4054bb:	lea    r9,[rax+0x2]
  4054bf:	movzx  edx,BYTE PTR [rdi+rdx*1]
  4054c3:	lea    ecx,[rdx-0x1]
  4054c6:	cmp    cl,0x18
  4054c9:	jbe    0x4053d6
  4054cf:	mov    rbp,rax
  4054d2:	xor    r10d,r10d
  4054d5:	jmp    0x405114
  4054da:	nop    WORD PTR [rax+rax*1+0x0]
  4054e0:	cmp    eax,0x2
  4054e3:	je     0x405681
  4054e9:	cmp    eax,0x3
  4054ec:	jne    0x405388
  4054f2:	mov    r10d,DWORD PTR [rsp+0x90]
  4054fa:	test   r10d,r10d
  4054fd:	je     0x405388
  405503:	xor    ecx,ecx
  405505:	call   0x405fa0
  40550a:	mov    r14,rax
  40550d:	mov    DWORD PTR [rax+0x14],0x1
  405514:	mov    DWORD PTR [rax+0x18],0x1
  40551b:	mov    eax,DWORD PTR [r13+0x4]
  40551f:	mov    rdi,QWORD PTR [rsp+0x88]
  405527:	mov    QWORD PTR [rdi],r14
  40552a:	mov    rdi,QWORD PTR [rsp+0x80]
  405532:	mov    DWORD PTR [rdi],eax
  405534:	call   0x406d70
  405539:	mov    DWORD PTR [rax],0x22
  40553f:	mov    eax,0x62
  405544:	jmp    0x405452
  405549:	nop    DWORD PTR [rax+0x0]
  405550:	mov    rcx,r14
  405553:	call   0x4060b0
  405558:	call   0x406d70
  40555d:	mov    DWORD PTR [rax],0x22
  405563:	mov    eax,0xa3
  405568:	jmp    0x405452
  40556d:	nop    DWORD PTR [rax]
  405570:	cmp    cl,0x30
  405573:	mov    rbx,rax
  405576:	jne    0x405596
  405578:	nop    DWORD PTR [rax+rax*1+0x0]
  405580:	add    rbx,0x1
  405584:	movzx  ecx,BYTE PTR [rbx]
  405587:	cmp    cl,0x30
  40558a:	je     0x405580
  40558c:	movzx  edx,cl
  40558f:	movzx  r10d,BYTE PTR [rdi+rdx*1]
  405594:	mov    edx,ecx
  405596:	xor    r11d,r11d
  405599:	test   r10b,r10b
  40559c:	mov    r12,rax
  40559f:	sete   r11b
  4055a3:	mov    r8d,0x1
  4055a9:	jmp    0x405209
  4055ae:	mov    ebx,esi
  4055b0:	mov    rcx,r14
  4055b3:	sub    ebx,eax
  4055b5:	mov    edx,ebx
  4055b7:	sub    r12d,ebx
  4055ba:	call   0x4064b0
  4055bf:	mov    r14,rax
  4055c2:	lea    r15,[rax+0x18]
  4055c6:	jmp    0x40533d
  4055cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4055d0:	xor    r15d,r15d
  4055d3:	jmp    0x4054b7
  4055d8:	mov    ebx,eax
  4055da:	mov    rcx,r14
  4055dd:	xor    edi,edi
  4055df:	sub    ebx,esi
  4055e1:	mov    edx,ebx
  4055e3:	call   0x406c40
  4055e8:	test   eax,eax
  4055ea:	je     0x405627
  4055ec:	lea    ecx,[rbx-0x1]
  4055ef:	mov    r8d,0x1
  4055f5:	mov    dil,0x1
  4055f8:	mov    eax,ecx
  4055fa:	shl    r8d,cl
  4055fd:	sar    eax,0x5
  405600:	cdqe   
  405602:	test   DWORD PTR [r15+rax*4],r8d
  405606:	je     0x405627
  405608:	test   ecx,ecx
  40560a:	jle    0x40581f
  405610:	mov    edx,ecx
  405612:	mov    rcx,r14
  405615:	call   0x406c40
  40561a:	test   eax,eax
  40561c:	je     0x40581f
  405622:	mov    edi,0x3
  405627:	mov    edx,ebx
  405629:	mov    rcx,r14
  40562c:	add    r12d,ebx
  40562f:	call   0x4058f0
  405634:	jmp    0x40533d
  405639:	mov    ebx,0x1
  40563e:	test   edi,edi
  405640:	je     0x405664
  405642:	mov    eax,DWORD PTR [r13+0xc]
  405646:	cmp    eax,0x2
  405649:	je     0x4056f1
  40564f:	cmp    eax,0x3
  405652:	je     0x405704
  405658:	cmp    eax,0x1
  40565b:	je     0x405829
  405661:	or     ebx,0x10
  405664:	mov    rax,QWORD PTR [rsp+0x88]
  40566c:	mov    QWORD PTR [rax],r14
  40566f:	mov    rax,QWORD PTR [rsp+0x80]
  405677:	mov    DWORD PTR [rax],r12d
  40567a:	mov    eax,ebx
  40567c:	jmp    0x405452
  405681:	mov    r11d,DWORD PTR [rsp+0x90]
  405689:	test   r11d,r11d
  40568c:	jne    0x405388
  405692:	jmp    0x405503
  405697:	test   edi,edi
  405699:	lea    ebp,[rbx-0x1]
  40569c:	jne    0x405815
  4056a2:	test   ebp,ebp
  4056a4:	jle    0x4056b2
  4056a6:	mov    edx,ebp
  4056a8:	mov    rcx,r14
  4056ab:	call   0x406c40
  4056b0:	mov    edi,eax
  4056b2:	mov    eax,ebp
  4056b4:	mov    ecx,ebp
  4056b6:	mov    edx,edi
  4056b8:	sar    eax,0x5
  4056bb:	mov    r8d,0x1
  4056c1:	or     edx,0x2
  4056c4:	cdqe   
  4056c6:	shl    r8d,cl
  4056c9:	mov    rcx,r14
  4056cc:	test   DWORD PTR [r15+rax*4],r8d
  4056d0:	cmovne edi,edx
  4056d3:	mov    edx,ebx
  4056d5:	sub    esi,ebx
  4056d7:	call   0x4058f0
  4056dc:	mov    ebx,0x2
  4056e1:	mov    r12d,DWORD PTR [r13+0x4]
  4056e5:	jmp    0x40563e
  4056ea:	xor    eax,eax
  4056ec:	jmp    0x4050d9
  4056f1:	mov    eax,0x1
  4056f6:	sub    eax,DWORD PTR [rsp+0x90]
  4056fd:	mov    DWORD PTR [rsp+0x90],eax
  405704:	mov    eax,DWORD PTR [rsp+0x90]
  40570b:	test   eax,eax
  40570d:	je     0x405661
  405713:	mov    rcx,r14
  405716:	movsxd rdi,DWORD PTR [r14+0x14]
  40571a:	call   0x402e10
  40571f:	cmp    ebx,0x2
  405722:	mov    r14,rax
  405725:	lea    r8,[rax+0x18]
  405729:	je     0x4058af
  40572f:	cmp    edi,DWORD PTR [rax+0x14]
  405732:	jl     0x40574d
  405734:	and    esi,0x1f
  405737:	je     0x405768
  405739:	bsr    eax,DWORD PTR [r8+rdi*4-0x4]
  40573f:	mov    edx,0x20
  405744:	sub    edx,esi
  405746:	xor    eax,0x1f
  405749:	cmp    edx,eax
  40574b:	jle    0x405768
  40574d:	mov    edx,0x1
  405752:	mov    rcx,r14
  405755:	add    r12d,0x1
  405759:	call   0x4058f0
  40575e:	cmp    r12d,DWORD PTR [r13+0x8]
  405762:	jg     0x405550
  405768:	mov    ebx,0x21
  40576d:	jmp    0x405664
  405772:	mov    r8d,DWORD PTR [rsp+0x90]
  40577a:	test   r8d,r8d
  40577d:	jne    0x405558
  405783:	jmp    0x40515a
  405788:	mov    r9d,DWORD PTR [rsp+0x90]
  405790:	test   r9d,r9d
  405793:	je     0x405558
  405799:	jmp    0x40515a
  40579e:	xor    edx,edx
  4057a0:	jmp    0x4052ae
  4057a5:	mov    rax,r15
  4057a8:	mov    edx,0x20
  4057ad:	xor    r9d,r9d
  4057b0:	jmp    0x40530f
  4057b5:	movzx  edx,BYTE PTR [rsi+0x1]
  4057b9:	test   dl,dl
  4057bb:	je     0x4058e4
  4057c1:	cmp    dl,BYTE PTR [rax+0x1]
  4057c4:	jne    0x405844
  4057c6:	mov    r12d,0x2
  4057cc:	jmp    0x4057db
  4057ce:	xchg   ax,ax
  4057d0:	add    r12,0x1
  4057d4:	cmp    dl,BYTE PTR [rax+r12*1-0x1]
  4057d9:	jne    0x405844
  4057db:	movzx  edx,BYTE PTR [rsi+r12*1]
  4057e0:	test   dl,dl
  4057e2:	jne    0x4057d0
  4057e4:	add    r12,rax
  4057e7:	movzx  eax,BYTE PTR [r12]
  4057ec:	cmp    BYTE PTR [rdi+rax*1],0x0
  4057f0:	mov    rdx,rax
  4057f3:	mov    rax,r12
  4057f6:	je     0x405232
  4057fc:	nop    DWORD PTR [rax+0x0]
  405800:	add    rax,0x1
  405804:	movzx  ecx,BYTE PTR [rax]
  405807:	cmp    BYTE PTR [rdi+rcx*1],0x0
  40580b:	mov    rdx,rcx
  40580e:	jne    0x405800
  405810:	jmp    0x405232
  405815:	mov    edi,0x1
  40581a:	jmp    0x4056b2
  40581f:	mov    edi,0x2
  405824:	jmp    0x405627
  405829:	test   dil,0x2
  40582d:	je     0x405661
  405833:	or     edi,DWORD PTR [r15]
  405836:	and    edi,0x1
  405839:	jne    0x405713
  40583f:	jmp    0x405661
  405844:	movzx  edx,BYTE PTR [rax]
  405847:	xor    r12d,r12d
  40584a:	jmp    0x405239
  40584f:	mov    edx,DWORD PTR [rsp+0x90]
  405856:	test   edx,edx
  405858:	je     0x405380
  40585e:	mov    DWORD PTR [r14+0x14],0x1
  405866:	mov    DWORD PTR [r15],0x1
  40586d:	jmp    0x40551f
  405872:	mov    ecx,DWORD PTR [rsp+0x90]
  405879:	test   ecx,ecx
  40587b:	je     0x40585e
  40587d:	jmp    0x405380
  405882:	cmp    ebx,esi
  405884:	jne    0x405380
  40588a:	cmp    esi,0x1
  40588d:	jle    0x40585e
  40588f:	lea    edx,[rsi-0x1]
  405892:	mov    rcx,r14
  405895:	call   0x406c40
  40589a:	test   eax,eax
  40589c:	je     0x405380
  4058a2:	mov    eax,DWORD PTR [r13+0x4]
  4058a6:	jmp    0x40585e
  4058a8:	xor    edx,edx
  4058aa:	jmp    0x4051c1
  4058af:	mov    eax,DWORD PTR [r13+0x0]
  4058b3:	mov    bl,0x22
  4058b5:	sub    eax,0x1
  4058b8:	cmp    eax,esi
  4058ba:	jne    0x405664
  4058c0:	mov    edx,esi
  4058c2:	mov    eax,0x1
  4058c7:	mov    ecx,esi
  4058c9:	sar    edx,0x5
  4058cc:	shl    eax,cl
  4058ce:	movsxd rdx,edx
  4058d1:	and    eax,DWORD PTR [r8+rdx*4]
  4058d5:	cmp    eax,0x1
  4058d8:	sbb    ebx,ebx
  4058da:	not    ebx
  4058dc:	add    ebx,0x22
  4058df:	jmp    0x405664
  4058e4:	mov    r12d,0x1
  4058ea:	jmp    0x4057e4
  4058ef:	nop
  4058f0:	push   rbp
  4058f1:	push   rdi
  4058f2:	push   rsi
  4058f3:	push   rbx
  4058f4:	mov    rsi,rcx
  4058f7:	lea    r10,[rcx+0x18]
  4058fb:	movsxd rcx,DWORD PTR [rcx+0x14]
  4058ff:	mov    eax,edx
  405901:	sar    eax,0x5
  405904:	cmp    eax,ecx
  405906:	jge    0x405990
  40590c:	cdqe   
  40590e:	and    edx,0x1f
  405911:	lea    rbx,[r10+rcx*4]
  405915:	lea    rdi,[r10+rax*4]
  405919:	je     0x4059a3
  40591f:	mov    r9d,DWORD PTR [rdi]
  405922:	lea    r8,[rdi+0x4]
  405926:	mov    ebp,0x20
  40592b:	mov    ecx,edx
  40592d:	sub    ebp,edx
  40592f:	shr    r9d,cl
  405932:	cmp    rbx,r8
  405935:	jbe    0x4059e8
  40593b:	mov    r11,r10
  40593e:	xchg   ax,ax
  405940:	mov    eax,DWORD PTR [r8]
  405943:	mov    ecx,ebp
  405945:	add    r11,0x4
  405949:	add    r8,0x4
  40594d:	shl    eax,cl
  40594f:	mov    ecx,edx
  405951:	or     eax,r9d
  405954:	mov    DWORD PTR [r11-0x4],eax
  405958:	mov    r9d,DWORD PTR [r8-0x4]
  40595c:	shr    r9d,cl
  40595f:	cmp    rbx,r8
  405962:	ja     0x405940
  405964:	sub    rbx,rdi
  405967:	lea    rax,[rbx-0x5]
  40596b:	shr    rax,0x2
  40596f:	lea    rax,[r10+rax*4+0x4]
  405974:	test   r9d,r9d
  405977:	mov    DWORD PTR [rax],r9d
  40597a:	je     0x405980
  40597c:	add    rax,0x4
  405980:	sub    rax,r10
  405983:	shr    rax,0x2
  405987:	jmp    0x4059dc
  405989:	nop    DWORD PTR [rax+0x0]
  405990:	mov    DWORD PTR [rsi+0x14],0x0
  405997:	mov    DWORD PTR [rsi+0x18],0x0
  40599e:	pop    rbx
  40599f:	pop    rsi
  4059a0:	pop    rdi
  4059a1:	pop    rbp
  4059a2:	ret    
  4059a3:	cmp    rbx,rdi
  4059a6:	mov    rdx,r10
  4059a9:	mov    rax,rdi
  4059ac:	jbe    0x405990
  4059ae:	xchg   ax,ax
  4059b0:	add    rax,0x4
  4059b4:	mov    r8d,DWORD PTR [rax-0x4]
  4059b8:	add    rdx,0x4
  4059bc:	cmp    rbx,rax
  4059bf:	mov    DWORD PTR [rdx-0x4],r8d
  4059c3:	ja     0x4059b0
  4059c5:	not    rdi
  4059c8:	lea    rax,[rdi+rbx*1]
  4059cc:	shr    rax,0x2
  4059d0:	lea    rax,[rax*4+0x4]
  4059d8:	shr    rax,0x2
  4059dc:	test   eax,eax
  4059de:	mov    DWORD PTR [rsi+0x14],eax
  4059e1:	je     0x405997
  4059e3:	pop    rbx
  4059e4:	pop    rsi
  4059e5:	pop    rdi
  4059e6:	pop    rbp
  4059e7:	ret    
  4059e8:	mov    rax,r10
  4059eb:	jmp    0x405974
  4059ed:	nop    DWORD PTR [rax]
  4059f0:	movsxd rax,DWORD PTR [rcx+0x14]
  4059f4:	lea    rdx,[rcx+0x18]
  4059f8:	lea    r8,[rdx+rax*4]
  4059fc:	cmp    rdx,r8
  4059ff:	jae    0x405a2b
  405a01:	mov    ecx,DWORD PTR [rcx+0x18]
  405a04:	xor    eax,eax
  405a06:	test   ecx,ecx
  405a08:	je     0x405a16
  405a0a:	jmp    0x405a24
  405a0c:	nop    DWORD PTR [rax+0x0]
  405a10:	mov    ecx,DWORD PTR [rdx]
  405a12:	test   ecx,ecx
  405a14:	jne    0x405a24
  405a16:	add    rdx,0x4
  405a1a:	add    eax,0x20
  405a1d:	cmp    r8,rdx
  405a20:	ja     0x405a10
  405a22:	repz ret 
  405a24:	tzcnt  ecx,ecx
  405a28:	add    eax,ecx
  405a2a:	ret    
  405a2b:	xor    eax,eax
  405a2d:	ret    
  405a2e:	nop
  405a2f:	nop
  405a30:	lea    r8,[rip+0x8757]        # 0x40e18e
  405a37:	lea    rdx,[rip+0xca82]        # 0x4124c0
  405a3e:	mov    ecx,0x10
  405a43:	mov    eax,0x30
  405a48:	nop    DWORD PTR [rax+rax*1+0x0]
  405a50:	mov    BYTE PTR [rdx+rax*1],cl
  405a53:	movzx  eax,BYTE PTR [r8+0x1]
  405a58:	add    ecx,0x1
  405a5b:	add    r8,0x1
  405a5f:	test   al,al
  405a61:	jne    0x405a50
  405a63:	lea    r8,[rip+0x871d]        # 0x40e187
  405a6a:	mov    ecx,0x1a
  405a6f:	mov    eax,0x61
  405a74:	mov    BYTE PTR [rdx+rax*1],cl
  405a77:	movzx  eax,BYTE PTR [r8+0x1]
  405a7c:	add    ecx,0x1
  405a7f:	add    r8,0x1
  405a83:	test   al,al
  405a85:	jne    0x405a74
  405a87:	lea    r8,[rip+0x86f2]        # 0x40e180
  405a8e:	mov    ecx,0x1a
  405a93:	mov    eax,0x41
  405a98:	nop    DWORD PTR [rax+rax*1+0x0]
  405aa0:	mov    BYTE PTR [rdx+rax*1],cl
  405aa3:	movzx  eax,BYTE PTR [r8+0x1]
  405aa8:	add    ecx,0x1
  405aab:	add    r8,0x1
  405aaf:	test   al,al
  405ab1:	jne    0x405aa0
  405ab3:	ret    
  405ab4:	nop
  405ab5:	nop
  405ab6:	nop
  405ab7:	nop
  405ab8:	nop
  405ab9:	nop
  405aba:	nop
  405abb:	nop
  405abc:	nop
  405abd:	nop
  405abe:	nop
  405abf:	nop
  405ac0:	push   r15
  405ac2:	push   r14
  405ac4:	push   r13
  405ac6:	push   r12
  405ac8:	push   rbp
  405ac9:	push   rdi
  405aca:	push   rsi
  405acb:	push   rbx
  405acc:	sub    rsp,0x48
  405ad0:	mov    r14,QWORD PTR [rip+0x88d9]        # 0x40e3b0
  405ad7:	mov    QWORD PTR [rsp+0x90],rcx
  405adf:	cmp    BYTE PTR [r14+0x30],0x0
  405ae4:	je     0x405db6
  405aea:	mov    eax,DWORD PTR [rdx]
  405aec:	mov    edx,eax
  405aee:	sar    edx,0x5
  405af1:	and    eax,0x1f
  405af4:	movsxd rdx,edx
  405af7:	mov    DWORD PTR [rsp+0x3c],eax
  405afb:	mov    rax,QWORD PTR [rsp+0x90]
  405b03:	lea    rdi,[r8+rdx*4]
  405b07:	lea    rdx,[rdi+0x4]
  405b0b:	mov    rax,QWORD PTR [rax]
  405b0e:	cmove  rdx,rdi
  405b12:	mov    QWORD PTR [rsp+0x30],rdx
  405b17:	lea    rsi,[rdx-0x4]
  405b1b:	mov    DWORD PTR [rdx-0x4],0x0
  405b22:	jmp    0x405b28
  405b24:	add    rax,0x1
  405b28:	movzx  edx,BYTE PTR [rax+0x1]
  405b2c:	mov    ecx,edx
  405b2e:	sub    edx,0x1
  405b31:	cmp    edx,0x1f
  405b34:	jbe    0x405b24
  405b36:	cmp    cl,0x30
  405b39:	je     0x405dd4
  405b3f:	movzx  edx,BYTE PTR [rax+0x1]
  405b43:	xor    r9d,r9d
  405b46:	xor    r15d,r15d
  405b49:	xor    r12d,r12d
  405b4c:	test   edx,edx
  405b4e:	mov    rbp,rsi
  405b51:	mov    r11,rsi
  405b54:	lea    rbx,[rax+0x1]
  405b58:	je     0x405c00
  405b5e:	xchg   ax,ax
  405b60:	mov    ecx,edx
  405b62:	movzx  ecx,BYTE PTR [r14+rcx*1]
  405b67:	test   cl,cl
  405b69:	jne    0x405cd4
  405b6f:	cmp    edx,0x20
  405b72:	ja     0x405d85
  405b78:	cmp    r12d,r15d
  405b7b:	jle    0x405d15
  405b81:	cmp    r9d,0x7
  405b85:	jg     0x405bda
  405b87:	cmp    r11,rbp
  405b8a:	jae    0x405bda
  405b8c:	mov    edi,0x8
  405b91:	mov    edx,DWORD PTR [r11]
  405b94:	mov    r13d,0x20
  405b9a:	sub    edi,r9d
  405b9d:	mov    QWORD PTR [rsp+0x28],rax
  405ba2:	mov    r9,r11
  405ba5:	shl    edi,0x2
  405ba8:	sub    r13d,edi
  405bab:	nop    DWORD PTR [rax+rax*1+0x0]
  405bb0:	mov    r10d,DWORD PTR [r9+0x4]
  405bb4:	mov    ecx,r13d
  405bb7:	add    r9,0x4
  405bbb:	mov    eax,r10d
  405bbe:	shl    eax,cl
  405bc0:	mov    ecx,edi
  405bc2:	or     edx,eax
  405bc4:	mov    DWORD PTR [r9-0x4],edx
  405bc8:	mov    edx,r10d
  405bcb:	shr    edx,cl
  405bcd:	mov    DWORD PTR [r9],edx
  405bd0:	cmp    rbp,r9
  405bd3:	ja     0x405bb0
  405bd5:	mov    rax,QWORD PTR [rsp+0x28]
  405bda:	cmp    r11,r8
  405bdd:	ja     0x405d00
  405be3:	mov    rax,rbx
  405be6:	mov    r9d,0x8
  405bec:	nop    DWORD PTR [rax+0x0]
  405bf0:	movzx  edx,BYTE PTR [rax+0x1]
  405bf4:	lea    rbx,[rax+0x1]
  405bf8:	test   edx,edx
  405bfa:	jne    0x405b60
  405c00:	test   r12d,r12d
  405c03:	mov    eax,0x4
  405c08:	je     0x405cc3
  405c0e:	mov    r10,r11
  405c11:	cmp    r9d,0x7
  405c15:	jg     0x405c63
  405c17:	cmp    rbp,r11
  405c1a:	jbe    0x405c63
  405c1c:	mov    edi,0x8
  405c21:	mov    eax,DWORD PTR [r11]
  405c24:	mov    r12d,0x20
  405c2a:	sub    edi,r9d
  405c2d:	mov    r9,r11
  405c30:	shl    edi,0x2
  405c33:	sub    r12d,edi
  405c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c40:	mov    ebx,DWORD PTR [r9+0x4]
  405c44:	mov    ecx,r12d
  405c47:	add    r9,0x4
  405c4b:	mov    edx,ebx
  405c4d:	shl    edx,cl
  405c4f:	mov    ecx,edi
  405c51:	or     eax,edx
  405c53:	mov    DWORD PTR [r9-0x4],eax
  405c57:	mov    eax,ebx
  405c59:	shr    eax,cl
  405c5b:	mov    DWORD PTR [r9],eax
  405c5e:	cmp    rbp,r9
  405c61:	ja     0x405c40
  405c63:	cmp    r8,r11
  405c66:	jae    0x405e04
  405c6c:	mov    rax,r8
  405c6f:	nop
  405c70:	add    r10,0x4
  405c74:	mov    edx,DWORD PTR [r10-0x4]
  405c78:	add    rax,0x4
  405c7c:	cmp    rsi,r10
  405c7f:	mov    DWORD PTR [rax-0x4],edx
  405c82:	jae    0x405c70
  405c84:	add    rax,0x4
  405c88:	mov    DWORD PTR [rax-0x4],0x0
  405c8f:	cmp    rsi,rax
  405c92:	jae    0x405c84
  405c94:	mov    rax,QWORD PTR [rsp+0x30]
  405c99:	mov    eax,DWORD PTR [rax-0x4]
  405c9c:	test   eax,eax
  405c9e:	je     0x405cb3
  405ca0:	jmp    0x405dfa
  405ca5:	sub    rsi,0x4
  405ca9:	mov    eax,DWORD PTR [rsi]
  405cab:	test   eax,eax
  405cad:	jne    0x405dfa
  405cb3:	cmp    r8,rsi
  405cb6:	jne    0x405ca5
  405cb8:	mov    DWORD PTR [rsi],0x1
  405cbe:	mov    eax,0x5
  405cc3:	add    rsp,0x48
  405cc7:	pop    rbx
  405cc8:	pop    rsi
  405cc9:	pop    rdi
  405cca:	pop    rbp
  405ccb:	pop    r12
  405ccd:	pop    r13
  405ccf:	pop    r14
  405cd1:	pop    r15
  405cd3:	ret    
  405cd4:	add    r9d,0x1
  405cd8:	add    r12d,0x1
  405cdc:	cmp    r9d,0x8
  405ce0:	jg     0x405d60
  405ce2:	mov    eax,DWORD PTR [r11]
  405ce5:	shl    eax,0x4
  405ce8:	and    ecx,0xf
  405ceb:	or     ecx,eax
  405ced:	mov    rax,rbx
  405cf0:	mov    DWORD PTR [r11],ecx
  405cf3:	jmp    0x405bf0
  405cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  405d00:	lea    rbp,[r11-0x4]
  405d04:	mov    DWORD PTR [r11-0x4],0x0
  405d0c:	mov    r15d,r12d
  405d0f:	xor    r9d,r9d
  405d12:	mov    r11,rbp
  405d15:	movzx  edx,BYTE PTR [rax+0x2]
  405d19:	mov    rax,rbx
  405d1c:	cmp    dl,0x20
  405d1f:	ja     0x405d2e
  405d21:	add    rax,0x1
  405d25:	movzx  edx,BYTE PTR [rax+0x1]
  405d29:	cmp    dl,0x20
  405d2c:	jbe    0x405d21
  405d2e:	cmp    dl,0x30
  405d31:	jne    0x405bf0
  405d37:	movzx  edx,BYTE PTR [rax+0x2]
  405d3b:	and    edx,0xffffffdf
  405d3e:	cmp    dl,0x58
  405d41:	jne    0x405bf0
  405d47:	cmp    BYTE PTR [rax+0x3],0x21
  405d4b:	lea    rdx,[rax+0x2]
  405d4f:	cmovae rax,rdx
  405d53:	jmp    0x405bf0
  405d58:	nop    DWORD PTR [rax+rax*1+0x0]
  405d60:	cmp    r11,r8
  405d63:	mov    rax,rbx
  405d66:	jbe    0x405bf0
  405d6c:	mov    DWORD PTR [r11-0x4],0x0
  405d74:	xor    eax,eax
  405d76:	sub    r11,0x4
  405d7a:	mov    r9d,0x1
  405d80:	jmp    0x405ce8
  405d85:	cmp    edx,0x29
  405d88:	mov    rcx,rbx
  405d8b:	sete   dl
  405d8e:	test   r12d,r12d
  405d91:	je     0x405e30
  405d97:	test   dl,dl
  405d99:	je     0x405e34
  405d9f:	mov    rbx,QWORD PTR [rsp+0x90]
  405da7:	add    rax,0x2
  405dab:	mov    r10,r11
  405dae:	mov    QWORD PTR [rbx],rax
  405db1:	jmp    0x405c11
  405db6:	mov    QWORD PTR [rsp+0x30],r8
  405dbb:	mov    QWORD PTR [rsp+0x28],rdx
  405dc0:	call   0x405a30
  405dc5:	mov    r8,QWORD PTR [rsp+0x30]
  405dca:	mov    rdx,QWORD PTR [rsp+0x28]
  405dcf:	jmp    0x405aea
  405dd4:	movzx  edx,BYTE PTR [rax+0x2]
  405dd8:	and    edx,0xffffffdf
  405ddb:	cmp    dl,0x58
  405dde:	jne    0x405b3f
  405de4:	movzx  edx,BYTE PTR [rax+0x3]
  405de8:	cmp    dl,0x20
  405deb:	jbe    0x405b3f
  405df1:	add    rax,0x2
  405df5:	jmp    0x405b43
  405dfa:	mov    eax,0x5
  405dff:	jmp    0x405cc3
  405e04:	mov    edx,DWORD PTR [rsp+0x3c]
  405e08:	test   edx,edx
  405e0a:	je     0x405c94
  405e10:	mov    ecx,0x20
  405e15:	sub    ecx,DWORD PTR [rsp+0x3c]
  405e19:	mov    rbx,QWORD PTR [rsp+0x30]
  405e1e:	mov    eax,0xffffffff
  405e23:	shr    eax,cl
  405e25:	and    eax,DWORD PTR [rbx-0x4]
  405e28:	mov    DWORD PTR [rbx-0x4],eax
  405e2b:	jmp    0x405c9c
  405e30:	test   dl,dl
  405e32:	jne    0x405e52
  405e34:	movsx  eax,BYTE PTR [rbx+0x1]
  405e38:	lea    rcx,[rbx+0x1]
  405e3c:	test   eax,eax
  405e3e:	jne    0x405e4d
  405e40:	jmp    0x405e6b
  405e42:	add    rcx,0x1
  405e46:	movsx  eax,BYTE PTR [rcx]
  405e49:	test   eax,eax
  405e4b:	je     0x405e6b
  405e4d:	cmp    eax,0x29
  405e50:	jne    0x405e42
  405e52:	mov    rax,QWORD PTR [rsp+0x90]
  405e5a:	add    rcx,0x1
  405e5e:	mov    QWORD PTR [rax],rcx
  405e61:	mov    eax,0x4
  405e66:	jmp    0x405cc3
  405e6b:	mov    al,0x4
  405e6d:	jmp    0x405cc3
  405e72:	nop
  405e73:	nop
  405e74:	nop
  405e75:	nop
  405e76:	nop
  405e77:	nop
  405e78:	nop
  405e79:	nop
  405e7a:	nop
  405e7b:	nop
  405e7c:	nop
  405e7d:	nop
  405e7e:	nop
  405e7f:	nop
  405e80:	push   rsi
  405e81:	push   rbx
  405e82:	sub    rsp,0x28
  405e86:	mov    eax,DWORD PTR [rip+0xc504]        # 0x412390
  405e8c:	movsxd rsi,ecx
  405e8f:	cmp    eax,0x2
  405e92:	je     0x405efd
  405e94:	test   eax,eax
  405e96:	je     0x405ec2
  405e98:	cmp    eax,0x1
  405e9b:	jne    0x405ebb
  405e9d:	mov    rbx,QWORD PTR [rip+0xd8c4]        # 0x413768
  405ea4:	mov    ecx,0x1
  405ea9:	call   rbx
  405eab:	mov    eax,DWORD PTR [rip+0xc4df]        # 0x412390
  405eb1:	cmp    eax,0x1
  405eb4:	je     0x405ea4
  405eb6:	cmp    eax,0x2
  405eb9:	je     0x405efd
  405ebb:	add    rsp,0x28
  405ebf:	pop    rbx
  405ec0:	pop    rsi
  405ec1:	ret    
  405ec2:	mov    al,0x1
  405ec4:	xchg   DWORD PTR [rip+0xc4c6],eax        # 0x412390
  405eca:	test   eax,eax
  405ecc:	jne    0x405f20
  405ece:	lea    rcx,[rip+0xc4eb]        # 0x4123c0
  405ed5:	mov    rbx,QWORD PTR [rip+0xd84c]        # 0x413728
  405edc:	call   rbx
  405ede:	lea    rcx,[rip+0xc503]        # 0x4123e8
  405ee5:	call   rbx
  405ee7:	lea    rcx,[rip+0x62]        # 0x405f50
  405eee:	call   0x401840
  405ef3:	mov    DWORD PTR [rip+0xc493],0x2        # 0x412390
  405efd:	lea    rdx,[rsi+rsi*4]
  405f01:	lea    rax,[rip+0xc4b8]        # 0x4123c0
  405f08:	lea    rcx,[rax+rdx*8]
  405f0c:	mov    rax,QWORD PTR [rip+0xd7d5]        # 0x4136e8
  405f13:	add    rsp,0x28
  405f17:	pop    rbx
  405f18:	pop    rsi
  405f19:	rex.W jmp rax
  405f1c:	nop    DWORD PTR [rax+0x0]
  405f20:	cmp    eax,0x2
  405f23:	je     0x405f40
  405f25:	mov    eax,DWORD PTR [rip+0xc465]        # 0x412390
  405f2b:	cmp    eax,0x1
  405f2e:	je     0x405e9d
  405f34:	jmp    0x405eb6
  405f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f40:	mov    DWORD PTR [rip+0xc446],0x2        # 0x412390
  405f4a:	jmp    0x405efd
  405f4c:	nop    DWORD PTR [rax+0x0]
  405f50:	push   rbx
  405f51:	sub    rsp,0x20
  405f55:	mov    eax,0x3
  405f5a:	xchg   DWORD PTR [rip+0xc430],eax        # 0x412390
  405f60:	cmp    eax,0x2
  405f63:	je     0x405f70
  405f65:	add    rsp,0x20
  405f69:	pop    rbx
  405f6a:	ret    
  405f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  405f70:	mov    rbx,QWORD PTR [rip+0xd769]        # 0x4136e0
  405f77:	lea    rcx,[rip+0xc442]        # 0x4123c0
  405f7e:	call   rbx
  405f80:	lea    rcx,[rip+0xc461]        # 0x4123e8
  405f87:	mov    rax,rbx
  405f8a:	add    rsp,0x20
  405f8e:	pop    rbx
  405f8f:	rex.W jmp rax
  405f92:	nop    DWORD PTR [rax+0x0]
  405f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405fa0:	push   rdi
  405fa1:	push   rsi
  405fa2:	push   rbx
  405fa3:	sub    rsp,0x20
  405fa7:	mov    ebx,ecx
  405fa9:	xor    ecx,ecx
  405fab:	call   0x405e80
  405fb0:	cmp    ebx,0x9
  405fb3:	jg     0x405ff0
  405fb5:	lea    rdx,[rip+0xc384]        # 0x412340
  405fbc:	movsxd rcx,ebx
  405fbf:	mov    rdi,QWORD PTR [rdx+rcx*8]
  405fc3:	test   rdi,rdi
  405fc6:	je     0x406050
  405fcc:	cmp    DWORD PTR [rip+0xc3bd],0x2        # 0x412390
  405fd3:	mov    r8,QWORD PTR [rdi]
  405fd6:	mov    QWORD PTR [rdx+rcx*8],r8
  405fda:	jne    0x406036
  405fdc:	lea    rcx,[rip+0xc3dd]        # 0x4123c0
  405fe3:	call   QWORD PTR [rip+0xd747]        # 0x413730
  405fe9:	jmp    0x406036
  405feb:	nop    DWORD PTR [rax+rax*1+0x0]
  405ff0:	mov    eax,0x1
  405ff5:	mov    ecx,ebx
  405ff7:	shl    eax,cl
  405ff9:	mov    esi,eax
  405ffb:	lea    eax,[rax-0x1]
  405ffe:	cdqe   
  406000:	lea    rdx,[rax*4+0x27]
  406008:	shr    rdx,0x3
  40600c:	mov    edx,edx
  40600e:	lea    rcx,[rdx*8+0x0]
  406016:	call   0x406d10
  40601b:	test   rax,rax
  40601e:	mov    rdi,rax
  406021:	je     0x4060aa
  406027:	cmp    DWORD PTR [rip+0xc362],0x2        # 0x412390
  40602e:	mov    DWORD PTR [rdi+0x8],ebx
  406031:	mov    DWORD PTR [rdi+0xc],esi
  406034:	je     0x405fdc
  406036:	mov    DWORD PTR [rdi+0x14],0x0
  40603d:	mov    DWORD PTR [rdi+0x10],0x0
  406044:	mov    rax,rdi
  406047:	add    rsp,0x20
  40604b:	pop    rbx
  40604c:	pop    rsi
  40604d:	pop    rdi
  40604e:	ret    
  40604f:	nop
  406050:	mov    ecx,ebx
  406052:	mov    eax,0x1
  406057:	mov    rdi,QWORD PTR [rip+0x4022]        # 0x40a080
  40605e:	shl    eax,cl
  406060:	lea    rcx,[rip+0xb9d9]        # 0x411a40
  406067:	lea    edx,[rax-0x1]
  40606a:	mov    esi,eax
  40606c:	mov    rax,rdi
  40606f:	movsxd rdx,edx
  406072:	sub    rax,rcx
  406075:	lea    rdx,[rdx*4+0x27]
  40607d:	mov    rcx,rax
  406080:	sar    rcx,0x3
  406084:	shr    rdx,0x3
  406088:	mov    edx,edx
  40608a:	add    rcx,rdx
  40608d:	cmp    rcx,0x120
  406094:	ja     0x40600e
  40609a:	lea    rdx,[rdi+rdx*8]
  40609e:	mov    QWORD PTR [rip+0x3fdb],rdx        # 0x40a080
  4060a5:	jmp    0x406027
  4060aa:	xor    eax,eax
  4060ac:	jmp    0x406047
  4060ae:	xchg   ax,ax
  4060b0:	push   rbx
  4060b1:	sub    rsp,0x20
  4060b5:	test   rcx,rcx
  4060b8:	je     0x4060e9
  4060ba:	cmp    DWORD PTR [rcx+0x8],0x9
  4060be:	jg     0x4060f0
  4060c0:	mov    rbx,rcx
  4060c3:	xor    ecx,ecx
  4060c5:	call   0x405e80
  4060ca:	movsxd rdx,DWORD PTR [rbx+0x8]
  4060ce:	lea    rax,[rip+0xc26b]        # 0x412340
  4060d5:	cmp    DWORD PTR [rip+0xc2b4],0x2        # 0x412390
  4060dc:	mov    rcx,QWORD PTR [rax+rdx*8]
  4060e0:	mov    QWORD PTR [rax+rdx*8],rbx
  4060e4:	mov    QWORD PTR [rbx],rcx
  4060e7:	je     0x406100
  4060e9:	add    rsp,0x20
  4060ed:	pop    rbx
  4060ee:	ret    
  4060ef:	nop
  4060f0:	add    rsp,0x20
  4060f4:	pop    rbx
  4060f5:	jmp    0x406d28
  4060fa:	nop    WORD PTR [rax+rax*1+0x0]
  406100:	mov    rax,QWORD PTR [rip+0xd629]        # 0x413730
  406107:	lea    rcx,[rip+0xc2b2]        # 0x4123c0
  40610e:	add    rsp,0x20
  406112:	pop    rbx
  406113:	rex.W jmp rax
  406116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406120:	push   rbp
  406121:	push   rdi
  406122:	push   rsi
  406123:	push   rbx
  406124:	sub    rsp,0x28
  406128:	mov    esi,DWORD PTR [rcx+0x14]
  40612b:	xor    r9d,r9d
  40612e:	lea    r10,[rcx+0x18]
  406132:	mov    rdi,rcx
  406135:	movsxd rbx,r8d
  406138:	movsxd rdx,edx
  40613b:	nop    DWORD PTR [rax+rax*1+0x0]
  406140:	mov    eax,DWORD PTR [r10+r9*4]
  406144:	imul   rax,rdx
  406148:	add    rax,rbx
  40614b:	mov    rbx,rax
  40614e:	mov    DWORD PTR [r10+r9*4],eax
  406152:	add    r9,0x1
  406156:	shr    rbx,0x20
  40615a:	cmp    esi,r9d
  40615d:	jg     0x406140
  40615f:	test   rbx,rbx
  406162:	mov    rax,rdi
  406165:	je     0x40617c
  406167:	cmp    esi,DWORD PTR [rdi+0xc]
  40616a:	jge    0x406185
  40616c:	movsxd rax,esi
  40616f:	add    esi,0x1
  406172:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  406176:	mov    DWORD PTR [rdi+0x14],esi
  406179:	mov    rax,rdi
  40617c:	add    rsp,0x28
  406180:	pop    rbx
  406181:	pop    rsi
  406182:	pop    rdi
  406183:	pop    rbp
  406184:	ret    
  406185:	mov    eax,DWORD PTR [rdi+0x8]
  406188:	lea    ecx,[rax+0x1]
  40618b:	call   0x405fa0
  406190:	test   rax,rax
  406193:	mov    rbp,rax
  406196:	je     0x4061ce
  406198:	lea    rcx,[rax+0x10]
  40619c:	movsxd rax,DWORD PTR [rdi+0x14]
  4061a0:	lea    rdx,[rdi+0x10]
  4061a4:	lea    r8,[rax*4+0x8]
  4061ac:	call   0x406d08
  4061b1:	mov    rcx,rdi
  4061b4:	mov    rdi,rbp
  4061b7:	call   0x4060b0
  4061bc:	movsxd rax,esi
  4061bf:	add    esi,0x1
  4061c2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  4061c6:	mov    DWORD PTR [rdi+0x14],esi
  4061c9:	mov    rax,rdi
  4061cc:	jmp    0x40617c
  4061ce:	xor    eax,eax
  4061d0:	jmp    0x40617c
  4061d2:	nop    DWORD PTR [rax+0x0]
  4061d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4061e0:	push   rbx
  4061e1:	sub    rsp,0x20
  4061e5:	mov    ebx,ecx
  4061e7:	mov    ecx,0x1
  4061ec:	call   0x405fa0
  4061f1:	test   rax,rax
  4061f4:	je     0x406200
  4061f6:	mov    DWORD PTR [rax+0x18],ebx
  4061f9:	mov    DWORD PTR [rax+0x14],0x1
  406200:	add    rsp,0x20
  406204:	pop    rbx
  406205:	ret    
  406206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406210:	push   r14
  406212:	push   r13
  406214:	push   r12
  406216:	push   rbp
  406217:	push   rdi
  406218:	push   rsi
  406219:	push   rbx
  40621a:	sub    rsp,0x20
  40621e:	movsxd r13,DWORD PTR [rcx+0x14]
  406222:	movsxd rbx,DWORD PTR [rdx+0x14]
  406226:	mov    r12,rcx
  406229:	mov    r14,rdx
  40622c:	cmp    r13d,ebx
  40622f:	jl     0x406331
  406235:	mov    eax,ebx
  406237:	movsxd rbx,r13d
  40623a:	movsxd r13,eax
  40623d:	xor    eax,eax
  40623f:	lea    esi,[rbx+r13*1]
  406243:	cmp    esi,DWORD PTR [r12+0xc]
  406248:	setg   al
  40624b:	add    eax,DWORD PTR [r12+0x8]
  406250:	mov    ecx,eax
  406252:	call   0x405fa0
  406257:	test   rax,rax
  40625a:	je     0x40633c
  406260:	lea    rdi,[rax+0x18]
  406264:	movsxd rdx,esi
  406267:	lea    rbp,[rdi+rdx*4]
  40626b:	mov    r8,rdi
  40626e:	cmp    rdi,rbp
  406271:	jae    0x406283
  406273:	mov    DWORD PTR [r8],0x0
  40627a:	add    r8,0x4
  40627e:	cmp    rbp,r8
  406281:	ja     0x406273
  406283:	lea    rdx,[r14+0x18]
  406287:	add    r12,0x18
  40628b:	lea    rbx,[r12+rbx*4]
  40628f:	lea    r13,[rdx+r13*4]
  406293:	cmp    rdx,r13
  406296:	jae    0x4062f9
  406298:	nop    DWORD PTR [rax+rax*1+0x0]
  4062a0:	add    rdx,0x4
  4062a4:	mov    r11d,DWORD PTR [rdx-0x4]
  4062a8:	test   r11d,r11d
  4062ab:	je     0x4062f0
  4062ad:	mov    r9,rdi
  4062b0:	mov    r8,r12
  4062b3:	xor    r10d,r10d
  4062b6:	jmp    0x4062c3
  4062b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4062c0:	mov    r9,r14
  4062c3:	add    r8,0x4
  4062c7:	mov    ecx,DWORD PTR [r8-0x4]
  4062cb:	mov    r14d,DWORD PTR [r9]
  4062ce:	imul   rcx,r11
  4062d2:	add    rcx,r14
  4062d5:	lea    r14,[r9+0x4]
  4062d9:	add    rcx,r10
  4062dc:	mov    r10,rcx
  4062df:	mov    DWORD PTR [r14-0x4],ecx
  4062e3:	shr    r10,0x20
  4062e7:	cmp    rbx,r8
  4062ea:	ja     0x4062c0
  4062ec:	mov    DWORD PTR [r9+0x4],r10d
  4062f0:	add    rdi,0x4
  4062f4:	cmp    r13,rdx
  4062f7:	ja     0x4062a0
  4062f9:	test   esi,esi
  4062fb:	jle    0x40631f
  4062fd:	mov    r8d,DWORD PTR [rbp-0x4]
  406301:	lea    rdx,[rbp-0x4]
  406305:	test   r8d,r8d
  406308:	je     0x40631a
  40630a:	jmp    0x40631f
  40630c:	nop    DWORD PTR [rax+0x0]
  406310:	sub    rdx,0x4
  406314:	mov    ecx,DWORD PTR [rdx]
  406316:	test   ecx,ecx
  406318:	jne    0x40631f
  40631a:	sub    esi,0x1
  40631d:	jne    0x406310
  40631f:	mov    DWORD PTR [rax+0x14],esi
  406322:	add    rsp,0x20
  406326:	pop    rbx
  406327:	pop    rsi
  406328:	pop    rdi
  406329:	pop    rbp
  40632a:	pop    r12
  40632c:	pop    r13
  40632e:	pop    r14
  406330:	ret    
  406331:	mov    r12,rdx
  406334:	mov    r14,rcx
  406337:	jmp    0x40623d
  40633c:	xor    eax,eax
  40633e:	jmp    0x406322
  406340:	push   rbp
  406341:	push   rdi
  406342:	push   rsi
  406343:	push   rbx
  406344:	sub    rsp,0x28
  406348:	mov    eax,edx
  40634a:	mov    rbp,rcx
  40634d:	mov    ebx,edx
  40634f:	and    eax,0x3
  406352:	jne    0x4063e0
  406358:	sar    ebx,0x2
  40635b:	mov    rax,rbp
  40635e:	test   ebx,ebx
  406360:	je     0x4063ac
  406362:	mov    rdi,QWORD PTR [rip+0xb697]        # 0x411a00
  406369:	test   rdi,rdi
  40636c:	jne    0x406382
  40636e:	jmp    0x40642d
  406373:	sar    ebx,1
  406375:	je     0x4063a9
  406377:	mov    rsi,QWORD PTR [rdi]
  40637a:	test   rsi,rsi
  40637d:	je     0x4063b5
  40637f:	mov    rdi,rsi
  406382:	test   bl,0x1
  406385:	je     0x406373
  406387:	mov    rdx,rdi
  40638a:	mov    rcx,rbp
  40638d:	call   0x406210
  406392:	test   rax,rax
  406395:	mov    rsi,rax
  406398:	je     0x406403
  40639a:	mov    rcx,rbp
  40639d:	mov    rbp,rsi
  4063a0:	call   0x4060b0
  4063a5:	sar    ebx,1
  4063a7:	jne    0x406377
  4063a9:	mov    rax,rbp
  4063ac:	add    rsp,0x28
  4063b0:	pop    rbx
  4063b1:	pop    rsi
  4063b2:	pop    rdi
  4063b3:	pop    rbp
  4063b4:	ret    
  4063b5:	mov    ecx,0x1
  4063ba:	call   0x405e80
  4063bf:	mov    rsi,QWORD PTR [rdi]
  4063c2:	test   rsi,rsi
  4063c5:	je     0x40640e
  4063c7:	cmp    DWORD PTR [rip+0xbfc2],0x2        # 0x412390
  4063ce:	jne    0x40637f
  4063d0:	lea    rcx,[rip+0xc011]        # 0x4123e8
  4063d7:	call   QWORD PTR [rip+0xd353]        # 0x413730
  4063dd:	jmp    0x40637f
  4063df:	nop
  4063e0:	sub    eax,0x1
  4063e3:	lea    rdx,[rip+0x7dd6]        # 0x40e1c0
  4063ea:	xor    r8d,r8d
  4063ed:	cdqe   
  4063ef:	mov    edx,DWORD PTR [rdx+rax*4]
  4063f2:	call   0x406120
  4063f7:	test   rax,rax
  4063fa:	mov    rbp,rax
  4063fd:	jne    0x406358
  406403:	xor    eax,eax
  406405:	add    rsp,0x28
  406409:	pop    rbx
  40640a:	pop    rsi
  40640b:	pop    rdi
  40640c:	pop    rbp
  40640d:	ret    
  40640e:	mov    rdx,rdi
  406411:	mov    rcx,rdi
  406414:	call   0x406210
  406419:	test   rax,rax
  40641c:	mov    rsi,rax
  40641f:	mov    QWORD PTR [rdi],rax
  406422:	je     0x406403
  406424:	mov    QWORD PTR [rax],0x0
  40642b:	jmp    0x4063c7
  40642d:	mov    ecx,0x1
  406432:	call   0x405e80
  406437:	mov    rdi,QWORD PTR [rip+0xb5c2]        # 0x411a00
  40643e:	test   rdi,rdi
  406441:	je     0x406462
  406443:	cmp    DWORD PTR [rip+0xbf46],0x2        # 0x412390
  40644a:	jne    0x406382
  406450:	lea    rcx,[rip+0xbf91]        # 0x4123e8
  406457:	call   QWORD PTR [rip+0xd2d3]        # 0x413730
  40645d:	jmp    0x406382
  406462:	mov    ecx,0x1
  406467:	call   0x405fa0
  40646c:	test   rax,rax
  40646f:	mov    rdi,rax
  406472:	je     0x406492
  406474:	mov    DWORD PTR [rax+0x18],0x271
  40647b:	mov    DWORD PTR [rax+0x14],0x1
  406482:	mov    QWORD PTR [rip+0xb577],rax        # 0x411a00
  406489:	mov    QWORD PTR [rax],0x0
  406490:	jmp    0x406443
  406492:	mov    QWORD PTR [rip+0xb563],0x0        # 0x411a00
  40649d:	xor    eax,eax
  40649f:	jmp    0x406405
  4064a4:	xchg   ax,ax
  4064a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4064b0:	push   r13
  4064b2:	push   r12
  4064b4:	push   rbp
  4064b5:	push   rdi
  4064b6:	push   rsi
  4064b7:	push   rbx
  4064b8:	sub    rsp,0x28
  4064bc:	mov    rdi,rcx
  4064bf:	mov    ebp,edx
  4064c1:	mov    esi,edx
  4064c3:	mov    r12d,DWORD PTR [rdi+0x14]
  4064c7:	sar    ebp,0x5
  4064ca:	mov    eax,DWORD PTR [rdi+0xc]
  4064cd:	mov    ecx,DWORD PTR [rcx+0x8]
  4064d0:	add    r12d,ebp
  4064d3:	lea    ebx,[r12+0x1]
  4064d8:	cmp    ebx,eax
  4064da:	jle    0x4064e9
  4064dc:	nop    DWORD PTR [rax+0x0]
  4064e0:	add    eax,eax
  4064e2:	add    ecx,0x1
  4064e5:	cmp    ebx,eax
  4064e7:	jg     0x4064e0
  4064e9:	call   0x405fa0
  4064ee:	test   rax,rax
  4064f1:	mov    r13,rax
  4064f4:	je     0x4065bf
  4064fa:	test   ebp,ebp
  4064fc:	lea    r8,[rax+0x18]
  406500:	jle    0x4065b7
  406506:	lea    eax,[rbp-0x1]
  406509:	lea    r9,[r8+rax*4+0x4]
  40650e:	xchg   ax,ax
  406510:	add    r8,0x4
  406514:	mov    DWORD PTR [r8-0x4],0x0
  40651c:	cmp    r8,r9
  40651f:	jne    0x406510
  406521:	movsxd rax,DWORD PTR [rdi+0x14]
  406525:	lea    r8,[rdi+0x18]
  406529:	mov    edx,esi
  40652b:	and    edx,0x1f
  40652e:	lea    rbp,[r8+rax*4]
  406532:	je     0x4065a0
  406534:	mov    eax,0x20
  406539:	xor    r11d,r11d
  40653c:	sub    eax,edx
  40653e:	jmp    0x406543
  406540:	mov    r9,rsi
  406543:	mov    r10d,DWORD PTR [r8]
  406546:	mov    ecx,edx
  406548:	lea    rsi,[r9+0x4]
  40654c:	add    r8,0x4
  406550:	shl    r10d,cl
  406553:	mov    ecx,eax
  406555:	or     r10d,r11d
  406558:	mov    DWORD PTR [rsi-0x4],r10d
  40655c:	mov    r11d,DWORD PTR [r8-0x4]
  406560:	shr    r11d,cl
  406563:	cmp    rbp,r8
  406566:	ja     0x406540
  406568:	add    r12d,0x2
  40656c:	test   r11d,r11d
  40656f:	mov    DWORD PTR [r9+0x4],r11d
  406573:	cmovne ebx,r12d
  406577:	sub    ebx,0x1
  40657a:	mov    rcx,rdi
  40657d:	mov    DWORD PTR [r13+0x14],ebx
  406581:	call   0x4060b0
  406586:	mov    rax,r13
  406589:	add    rsp,0x28
  40658d:	pop    rbx
  40658e:	pop    rsi
  40658f:	pop    rdi
  406590:	pop    rbp
  406591:	pop    r12
  406593:	pop    r13
  406595:	ret    
  406596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4065a0:	add    r8,0x4
  4065a4:	mov    edx,DWORD PTR [r8-0x4]
  4065a8:	add    r9,0x4
  4065ac:	cmp    rbp,r8
  4065af:	mov    DWORD PTR [r9-0x4],edx
  4065b3:	ja     0x4065a0
  4065b5:	jmp    0x406577
  4065b7:	mov    r9,r8
  4065ba:	jmp    0x406521
  4065bf:	xor    eax,eax
  4065c1:	jmp    0x406589
  4065c3:	nop    DWORD PTR [rax]
  4065c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4065d0:	movsxd r8,DWORD PTR [rdx+0x14]
  4065d4:	mov    eax,DWORD PTR [rcx+0x14]
  4065d7:	sub    eax,r8d
  4065da:	test   eax,eax
  4065dc:	jne    0x406612
  4065de:	shl    r8,0x2
  4065e2:	add    rcx,0x18
  4065e6:	lea    rax,[rcx+r8*1]
  4065ea:	lea    rdx,[rdx+r8*1+0x18]
  4065ef:	jmp    0x4065f6
  4065f1:	cmp    rcx,rax
  4065f4:	jae    0x406610
  4065f6:	sub    rdx,0x4
  4065fa:	sub    rax,0x4
  4065fe:	mov    r9d,DWORD PTR [rdx]
  406601:	cmp    DWORD PTR [rax],r9d
  406604:	je     0x4065f1
  406606:	sbb    eax,eax
  406608:	or     eax,0x1
  40660b:	ret    
  40660c:	nop    DWORD PTR [rax+0x0]
  406610:	xor    eax,eax
  406612:	repz ret 
  406614:	xchg   ax,ax
  406616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406620:	push   rdi
  406621:	push   rsi
  406622:	push   rbx
  406623:	sub    rsp,0x20
  406627:	mov    rsi,rcx
  40662a:	mov    rdi,rdx
  40662d:	call   0x4065d0
  406632:	test   eax,eax
  406634:	je     0x406720
  40663a:	mov    ebx,0x0
  40663f:	js     0x406742
  406645:	mov    ecx,DWORD PTR [rsi+0x8]
  406648:	call   0x405fa0
  40664d:	test   rax,rax
  406650:	je     0x406752
  406656:	movsxd rdx,DWORD PTR [rsi+0x14]
  40665a:	lea    rcx,[rsi+0x18]
  40665e:	mov    DWORD PTR [rax+0x10],ebx
  406661:	lea    r10,[rdi+0x18]
  406665:	xor    r9d,r9d
  406668:	mov    rbx,rdx
  40666b:	lea    rsi,[rcx+rdx*4]
  40666f:	movsxd rdx,DWORD PTR [rdi+0x14]
  406673:	lea    rdi,[r10+rdx*4]
  406677:	lea    rdx,[rax+0x18]
  40667b:	nop    DWORD PTR [rax+rax*1+0x0]
  406680:	add    rcx,0x4
  406684:	add    r10,0x4
  406688:	mov    r11d,DWORD PTR [r10-0x4]
  40668c:	mov    r8d,DWORD PTR [rcx-0x4]
  406690:	add    rdx,0x4
  406694:	sub    r8,r11
  406697:	sub    r8,r9
  40669a:	mov    r9,r8
  40669d:	mov    r11d,r8d
  4066a0:	mov    DWORD PTR [rdx-0x4],r8d
  4066a4:	shr    r9,0x20
  4066a8:	and    r9d,0x1
  4066ac:	cmp    rdi,r10
  4066af:	ja     0x406680
  4066b1:	cmp    rsi,rcx
  4066b4:	mov    rdi,rdx
  4066b7:	mov    r10,rcx
  4066ba:	jbe    0x4066f6
  4066bc:	nop    DWORD PTR [rax+0x0]
  4066c0:	add    rcx,0x4
  4066c4:	mov    r8d,DWORD PTR [rcx-0x4]
  4066c8:	add    rdx,0x4
  4066cc:	sub    r8,r9
  4066cf:	mov    r9,r8
  4066d2:	mov    r11d,r8d
  4066d5:	mov    DWORD PTR [rdx-0x4],r8d
  4066d9:	shr    r9,0x20
  4066dd:	and    r9d,0x1
  4066e1:	cmp    rsi,rcx
  4066e4:	ja     0x4066c0
  4066e6:	not    r10
  4066e9:	lea    rdx,[r10+rsi*1]
  4066ed:	shr    rdx,0x2
  4066f1:	lea    rdx,[rdi+rdx*4+0x4]
  4066f6:	sub    rdx,0x4
  4066fa:	test   r11d,r11d
  4066fd:	jne    0x40670d
  4066ff:	nop
  406700:	sub    rdx,0x4
  406704:	mov    ecx,DWORD PTR [rdx]
  406706:	sub    ebx,0x1
  406709:	test   ecx,ecx
  40670b:	je     0x406700
  40670d:	mov    DWORD PTR [rax+0x14],ebx
  406710:	add    rsp,0x20
  406714:	pop    rbx
  406715:	pop    rsi
  406716:	pop    rdi
  406717:	ret    
  406718:	nop    DWORD PTR [rax+rax*1+0x0]
  406720:	xor    ecx,ecx
  406722:	call   0x405fa0
  406727:	test   rax,rax
  40672a:	je     0x406752
  40672c:	mov    DWORD PTR [rax+0x14],0x1
  406733:	mov    DWORD PTR [rax+0x18],0x0
  40673a:	add    rsp,0x20
  40673e:	pop    rbx
  40673f:	pop    rsi
  406740:	pop    rdi
  406741:	ret    
  406742:	mov    rax,rsi
  406745:	mov    bl,0x1
  406747:	mov    rsi,rdi
  40674a:	mov    rdi,rax
  40674d:	jmp    0x406645
  406752:	xor    eax,eax
  406754:	jmp    0x406710
  406756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406760:	push   rsi
  406761:	push   rbx
  406762:	sub    rsp,0x18
  406766:	movsxd rax,DWORD PTR [rcx+0x14]
  40676a:	lea    r10,[rcx+0x18]
  40676e:	mov    ecx,0x20
  406773:	lea    r9,[r10+rax*4]
  406777:	mov    eax,DWORD PTR [r9-0x4]
  40677b:	lea    rbx,[r9-0x4]
  40677f:	bsr    r8d,eax
  406783:	xor    r8d,0x1f
  406787:	sub    ecx,r8d
  40678a:	cmp    r8d,0xa
  40678e:	mov    DWORD PTR [rdx],ecx
  406790:	jg     0x4067e0
  406792:	mov    ecx,0xb
  406797:	mov    r11d,eax
  40679a:	xor    esi,esi
  40679c:	sub    ecx,r8d
  40679f:	shr    r11d,cl
  4067a2:	or     r11d,0x3ff00000
  4067a9:	shl    r11,0x20
  4067ad:	cmp    r10,rbx
  4067b0:	jae    0x4067b8
  4067b2:	mov    esi,DWORD PTR [r9-0x8]
  4067b6:	shr    esi,cl
  4067b8:	lea    ecx,[r8+0x15]
  4067bc:	shl    eax,cl
  4067be:	mov    edx,eax
  4067c0:	mov    eax,esi
  4067c2:	or     eax,edx
  4067c4:	or     rax,r11
  4067c7:	mov    QWORD PTR [rsp+0x8],rax
  4067cc:	movsd  xmm0,QWORD PTR [rsp+0x8]
  4067d2:	add    rsp,0x18
  4067d6:	pop    rbx
  4067d7:	pop    rsi
  4067d8:	ret    
  4067d9:	nop    DWORD PTR [rax+0x0]
  4067e0:	cmp    r10,rbx
  4067e3:	jae    0x406840
  4067e5:	mov    r11d,r8d
  4067e8:	lea    rsi,[r9-0x8]
  4067ec:	mov    edx,DWORD PTR [r9-0x8]
  4067f0:	sub    r11d,0xb
  4067f4:	je     0x406862
  4067f6:	mov    ebx,0x2b
  4067fb:	mov    ecx,r11d
  4067fe:	sub    ebx,r8d
  406801:	shl    eax,cl
  406803:	mov    r8d,edx
  406806:	mov    ecx,ebx
  406808:	shr    r8d,cl
  40680b:	or     eax,r8d
  40680e:	xor    r8d,r8d
  406811:	or     eax,0x3ff00000
  406816:	shl    rax,0x20
  40681a:	cmp    r10,rsi
  40681d:	jae    0x406826
  40681f:	mov    r8d,DWORD PTR [r9-0xc]
  406823:	shr    r8d,cl
  406826:	mov    ecx,r11d
  406829:	shl    edx,cl
  40682b:	or     r8d,edx
  40682e:	movabs rdx,0xffffffff00000000
  406838:	and    rax,rdx
  40683b:	or     rax,r8
  40683e:	jmp    0x4067c7
  406840:	mov    r11d,r8d
  406843:	sub    r11d,0xb
  406847:	je     0x406860
  406849:	mov    ecx,r11d
  40684c:	xor    r8d,r8d
  40684f:	xor    edx,edx
  406851:	shl    eax,cl
  406853:	or     eax,0x3ff00000
  406858:	shl    rax,0x20
  40685c:	jmp    0x406826
  40685e:	xchg   ax,ax
  406860:	xor    edx,edx
  406862:	or     eax,0x3ff00000
  406867:	shl    rax,0x20
  40686b:	or     rax,rdx
  40686e:	jmp    0x4067c7
  406873:	nop    DWORD PTR [rax]
  406876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406880:	push   rdi
  406881:	push   rsi
  406882:	push   rbx
  406883:	sub    rsp,0x20
  406887:	mov    ecx,0x1
  40688c:	movq   rbx,xmm0
  406891:	mov    rdi,rdx
  406894:	mov    rsi,r8
  406897:	call   0x405fa0
  40689c:	test   rax,rax
  40689f:	je     0x406985
  4068a5:	mov    r9,rbx
  4068a8:	shr    r9,0x20
  4068ac:	mov    r10d,r9d
  4068af:	and    r9d,0x7fffffff
  4068b6:	and    r10d,0xfffff
  4068bd:	shr    r9d,0x14
  4068c1:	mov    edx,r10d
  4068c4:	or     edx,0x100000
  4068ca:	test   r9d,r9d
  4068cd:	cmovne r10d,edx
  4068d1:	test   ebx,ebx
  4068d3:	jne    0x406914
  4068d5:	xor    ecx,ecx
  4068d7:	mov    DWORD PTR [rax+0x14],0x1
  4068de:	mov    edx,0x1
  4068e3:	tzcnt  ecx,r10d
  4068e8:	shr    r10d,cl
  4068eb:	test   r9d,r9d
  4068ee:	lea    r11d,[rcx+0x20]
  4068f2:	mov    DWORD PTR [rax+0x18],r10d
  4068f6:	je     0x406953
  4068f8:	lea    edx,[r11+r9*1-0x433]
  406900:	mov    DWORD PTR [rdi],edx
  406902:	mov    edx,0x35
  406907:	sub    edx,r11d
  40690a:	mov    DWORD PTR [rsi],edx
  40690c:	add    rsp,0x20
  406910:	pop    rbx
  406911:	pop    rsi
  406912:	pop    rdi
  406913:	ret    
  406914:	xor    r11d,r11d
  406917:	tzcnt  r11d,ebx
  40691c:	mov    ecx,r11d
  40691f:	shr    ebx,cl
  406921:	test   r11d,r11d
  406924:	je     0x406980
  406926:	mov    ecx,0x20
  40692b:	mov    edx,r10d
  40692e:	sub    ecx,r11d
  406931:	shl    edx,cl
  406933:	mov    ecx,r11d
  406936:	or     ebx,edx
  406938:	shr    r10d,cl
  40693b:	mov    DWORD PTR [rax+0x18],ebx
  40693e:	cmp    r10d,0x1
  406942:	mov    DWORD PTR [rax+0x1c],r10d
  406946:	sbb    edx,edx
  406948:	add    edx,0x2
  40694b:	test   r9d,r9d
  40694e:	mov    DWORD PTR [rax+0x14],edx
  406951:	jne    0x4068f8
  406953:	movsxd rcx,edx
  406956:	shl    edx,0x5
  406959:	sub    r11d,0x432
  406960:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  406965:	mov    DWORD PTR [rdi],r11d
  406968:	xor    ecx,0x1f
  40696b:	sub    edx,ecx
  40696d:	mov    DWORD PTR [rsi],edx
  40696f:	add    rsp,0x20
  406973:	pop    rbx
  406974:	pop    rsi
  406975:	pop    rdi
  406976:	ret    
  406977:	nop    WORD PTR [rax+rax*1+0x0]
  406980:	mov    DWORD PTR [rax+0x18],ebx
  406983:	jmp    0x40693e
  406985:	xor    eax,eax
  406987:	jmp    0x40690c
  406989:	nop    DWORD PTR [rax+0x0]
  406990:	mov    rax,rcx
  406993:	lea    rcx,[rdx+0x1]
  406997:	movzx  edx,BYTE PTR [rdx]
  40699a:	test   dl,dl
  40699c:	mov    BYTE PTR [rax],dl
  40699e:	je     0x4069b2
  4069a0:	add    rcx,0x1
  4069a4:	movzx  edx,BYTE PTR [rcx-0x1]
  4069a8:	add    rax,0x1
  4069ac:	test   dl,dl
  4069ae:	mov    BYTE PTR [rax],dl
  4069b0:	jne    0x4069a0
  4069b2:	repz ret 
  4069b4:	nop
  4069b5:	nop
  4069b6:	nop
  4069b7:	nop
  4069b8:	nop
  4069b9:	nop
  4069ba:	nop
  4069bb:	nop
  4069bc:	nop
  4069bd:	nop
  4069be:	nop
  4069bf:	nop
  4069c0:	push   r13
  4069c2:	push   r12
  4069c4:	push   rbp
  4069c5:	push   rdi
  4069c6:	push   rsi
  4069c7:	push   rbx
  4069c8:	sub    rsp,0x28
  4069cc:	mov    rsi,rcx
  4069cf:	lea    ecx,[r8+0x8]
  4069d3:	mov    ebp,edx
  4069d5:	mov    edx,0x38e38e39
  4069da:	mov    edi,r8d
  4069dd:	mov    ebx,r9d
  4069e0:	mov    eax,ecx
  4069e2:	sar    ecx,0x1f
  4069e5:	imul   edx
  4069e7:	sar    edx,1
  4069e9:	sub    edx,ecx
  4069eb:	cmp    edx,0x1
  4069ee:	jle    0x406ab4
  4069f4:	mov    eax,0x1
  4069f9:	xor    ecx,ecx
  4069fb:	nop    DWORD PTR [rax+rax*1+0x0]
  406a00:	add    eax,eax
  406a02:	add    ecx,0x1
  406a05:	cmp    edx,eax
  406a07:	jg     0x406a00
  406a09:	call   0x405fa0
  406a0e:	cmp    ebp,0x9
  406a11:	mov    DWORD PTR [rax+0x18],ebx
  406a14:	mov    DWORD PTR [rax+0x14],0x1
  406a1b:	jle    0x406aa0
  406a21:	lea    rbx,[rsi+0x9]
  406a25:	lea    r12d,[rbp-0xa]
  406a29:	lea    r13,[rsi+r12*1+0xa]
  406a2e:	mov    rsi,rbx
  406a31:	add    rsi,0x1
  406a35:	movsx  r8d,BYTE PTR [rsi-0x1]
  406a3a:	mov    edx,0xa
  406a3f:	mov    rcx,rax
  406a42:	sub    r8d,0x30
  406a46:	call   0x406120
  406a4b:	cmp    rsi,r13
  406a4e:	jne    0x406a31
  406a50:	movsxd rdx,DWORD PTR [rsp+0x80]
  406a58:	lea    r9,[r12+rdx*1+0x1]
  406a5d:	add    rbx,r9
  406a60:	cmp    edi,ebp
  406a62:	jle    0x406a8f
  406a64:	sub    edi,0x1
  406a67:	sub    edi,ebp
  406a69:	lea    rsi,[rbx+rdi*1+0x1]
  406a6e:	xchg   ax,ax
  406a70:	add    rbx,0x1
  406a74:	movsx  r8d,BYTE PTR [rbx-0x1]
  406a79:	mov    edx,0xa
  406a7e:	mov    rcx,rax
  406a81:	sub    r8d,0x30
  406a85:	call   0x406120
  406a8a:	cmp    rbx,rsi
  406a8d:	jne    0x406a70
  406a8f:	add    rsp,0x28
  406a93:	pop    rbx
  406a94:	pop    rsi
  406a95:	pop    rdi
  406a96:	pop    rbp
  406a97:	pop    r12
  406a99:	pop    r13
  406a9b:	ret    
  406a9c:	nop    DWORD PTR [rax+0x0]
  406aa0:	movsxd rdx,DWORD PTR [rsp+0x80]
  406aa8:	mov    ebp,0x9
  406aad:	lea    rbx,[rsi+rdx*1+0x9]
  406ab2:	jmp    0x406a60
  406ab4:	xor    ecx,ecx
  406ab6:	jmp    0x406a09
  406abb:	nop    DWORD PTR [rax+rax*1+0x0]
  406ac0:	push   rdi
  406ac1:	push   rsi
  406ac2:	push   rbx
  406ac3:	sub    rsp,0x50
  406ac7:	movaps XMMWORD PTR [rsp+0x40],xmm6
  406acc:	mov    rsi,rdx
  406acf:	lea    rdx,[rsp+0x38]
  406ad4:	mov    rdi,rcx
  406ad7:	call   0x406760
  406adc:	lea    rdx,[rsp+0x3c]
  406ae1:	mov    rcx,rsi
  406ae4:	movq   rbx,xmm0
  406ae9:	movapd xmm6,xmm0
  406aed:	call   0x406760
  406af2:	mov    eax,DWORD PTR [rsp+0x38]
  406af6:	sub    eax,DWORD PTR [rsp+0x3c]
  406afa:	movq   rcx,xmm0
  406aff:	mov    r8d,eax
  406b02:	mov    eax,DWORD PTR [rdi+0x14]
  406b05:	sub    eax,DWORD PTR [rsi+0x14]
  406b08:	shl    eax,0x5
  406b0b:	add    eax,r8d
  406b0e:	test   eax,eax
  406b10:	jle    0x406b50
  406b12:	movq   rdx,xmm6
  406b17:	shl    eax,0x14
  406b1a:	shr    rdx,0x20
  406b1e:	add    eax,edx
  406b20:	shl    rax,0x20
  406b24:	mov    rdx,rax
  406b27:	mov    eax,ebx
  406b29:	or     rax,rdx
  406b2c:	mov    QWORD PTR [rsp+0x28],rax
  406b31:	movsd  xmm6,QWORD PTR [rsp+0x28]
  406b37:	divsd  xmm6,xmm0
  406b3b:	movapd xmm0,xmm6
  406b3f:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  406b44:	add    rsp,0x50
  406b48:	pop    rbx
  406b49:	pop    rsi
  406b4a:	pop    rdi
  406b4b:	ret    
  406b4c:	nop    DWORD PTR [rax+0x0]
  406b50:	movq   rdx,xmm0
  406b55:	shl    eax,0x14
  406b58:	shr    rdx,0x20
  406b5c:	mov    ebx,edx
  406b5e:	sub    ebx,eax
  406b60:	mov    rax,rbx
  406b63:	shl    rax,0x20
  406b67:	mov    rdx,rax
  406b6a:	mov    eax,ecx
  406b6c:	or     rax,rdx
  406b6f:	mov    QWORD PTR [rsp+0x28],rax
  406b74:	movsd  xmm0,QWORD PTR [rsp+0x28]
  406b7a:	jmp    0x406b37
  406b7c:	nop    DWORD PTR [rax+0x0]
  406b80:	mov    r8,QWORD PTR [rcx]
  406b83:	jmp    0x406b9e
  406b85:	movsx  eax,BYTE PTR [r8]
  406b89:	lea    r11d,[rax-0x41]
  406b8d:	lea    r10d,[rax+0x20]
  406b91:	cmp    r11d,0x19
  406b95:	cmovbe eax,r10d
  406b99:	cmp    eax,r9d
  406b9c:	jne    0x406bc0
  406b9e:	add    rdx,0x1
  406ba2:	movsx  r9d,BYTE PTR [rdx-0x1]
  406ba7:	add    r8,0x1
  406bab:	test   r9d,r9d
  406bae:	jne    0x406b85
  406bb0:	mov    QWORD PTR [rcx],r8
  406bb3:	mov    eax,0x1
  406bb8:	ret    
  406bb9:	nop    DWORD PTR [rax+0x0]
  406bc0:	xor    eax,eax
  406bc2:	ret    
  406bc3:	nop    DWORD PTR [rax]
  406bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406bd0:	sub    edx,0x1
  406bd3:	lea    rax,[r8+0x18]
  406bd7:	sar    edx,0x5
  406bda:	movsxd rdx,edx
  406bdd:	lea    r11,[rcx+rdx*4+0x4]
  406be2:	movsxd rdx,DWORD PTR [r8+0x14]
  406be6:	lea    r10,[rax+rdx*4]
  406bea:	cmp    rax,r10
  406bed:	jae    0x406c2b
  406bef:	mov    rdx,rcx
  406bf2:	add    rax,0x4
  406bf6:	mov    r9d,DWORD PTR [rax-0x4]
  406bfa:	add    rdx,0x4
  406bfe:	cmp    r10,rax
  406c01:	mov    DWORD PTR [rdx-0x4],r9d
  406c05:	ja     0x406bf2
  406c07:	sub    r10,r8
  406c0a:	lea    rax,[r10-0x19]
  406c0e:	shr    rax,0x2
  406c12:	lea    rcx,[rcx+rax*4+0x4]
  406c17:	cmp    r11,rcx
  406c1a:	jbe    0x406c30
  406c1c:	nop    DWORD PTR [rax+0x0]
  406c20:	add    rcx,0x4
  406c24:	mov    DWORD PTR [rcx-0x4],0x0
  406c2b:	cmp    r11,rcx
  406c2e:	ja     0x406c20
  406c30:	repz ret 
  406c32:	nop    DWORD PTR [rax+0x0]
  406c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c40:	movsxd rax,DWORD PTR [rcx+0x14]
  406c44:	mov    r9d,edx
  406c47:	lea    r8,[rcx+0x18]
  406c4b:	sar    r9d,0x5
  406c4f:	cmp    eax,r9d
  406c52:	jge    0x406c81
  406c54:	lea    r9,[r8+rax*4]
  406c58:	cmp    r8,r9
  406c5b:	jae    0x406cc6
  406c5d:	mov    eax,DWORD PTR [r9-0x4]
  406c61:	lea    rdx,[r9-0x4]
  406c65:	test   eax,eax
  406c67:	je     0x406c7a
  406c69:	jmp    0x406cc0
  406c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  406c70:	sub    rdx,0x4
  406c74:	mov    ecx,DWORD PTR [rdx]
  406c76:	test   ecx,ecx
  406c78:	jne    0x406cc0
  406c7a:	cmp    r8,rdx
  406c7d:	jb     0x406c70
  406c7f:	repz ret 
  406c81:	jle    0x406cb0
  406c83:	mov    ecx,edx
  406c85:	movsxd r9,r9d
  406c88:	and    ecx,0x1f
  406c8b:	lea    r9,[r8+r9*4]
  406c8f:	je     0x406c58
  406c91:	mov    r10d,DWORD PTR [r9]
  406c94:	mov    eax,r10d
  406c97:	shr    eax,cl
  406c99:	shl    eax,cl
  406c9b:	mov    edx,eax
  406c9d:	mov    eax,0x1
  406ca2:	cmp    edx,r10d
  406ca5:	je     0x406c58
  406ca7:	repz ret 
  406ca9:	nop    DWORD PTR [rax+0x0]
  406cb0:	movsxd r9,r9d
  406cb3:	lea    r9,[r8+r9*4]
  406cb7:	jmp    0x406c58
  406cb9:	nop    DWORD PTR [rax+0x0]
  406cc0:	mov    eax,0x1
  406cc5:	ret    
  406cc6:	xor    eax,eax
  406cc8:	ret    
  406cc9:	nop
  406cca:	nop
  406ccb:	nop
  406ccc:	nop
  406ccd:	nop
  406cce:	nop
  406ccf:	nop
  406cd0:	jmp    QWORD PTR [rip+0xcbca]        # 0x4138a0
  406cd6:	nop
  406cd7:	nop
  406cd8:	jmp    QWORD PTR [rip+0xcbba]        # 0x413898
  406cde:	nop
  406cdf:	nop
  406ce0:	jmp    QWORD PTR [rip+0xcbaa]        # 0x413890
  406ce6:	nop
  406ce7:	nop
  406ce8:	jmp    QWORD PTR [rip+0xcb9a]        # 0x413888
  406cee:	nop
  406cef:	nop
  406cf0:	jmp    QWORD PTR [rip+0xcb8a]        # 0x413880
  406cf6:	nop
  406cf7:	nop
  406cf8:	jmp    QWORD PTR [rip+0xcb7a]        # 0x413878
  406cfe:	nop
  406cff:	nop
  406d00:	jmp    QWORD PTR [rip+0xcb6a]        # 0x413870
  406d06:	nop
  406d07:	nop
  406d08:	jmp    QWORD PTR [rip+0xcb5a]        # 0x413868
  406d0e:	nop
  406d0f:	nop
  406d10:	jmp    QWORD PTR [rip+0xcb4a]        # 0x413860
  406d16:	nop
  406d17:	nop
  406d18:	jmp    QWORD PTR [rip+0xcb3a]        # 0x413858
  406d1e:	nop
  406d1f:	nop
  406d20:	jmp    QWORD PTR [rip+0xcb2a]        # 0x413850
  406d26:	nop
  406d27:	nop
  406d28:	jmp    QWORD PTR [rip+0xcb1a]        # 0x413848
  406d2e:	nop
  406d2f:	nop
  406d30:	jmp    QWORD PTR [rip+0xcb0a]        # 0x413840
  406d36:	nop
  406d37:	nop
  406d38:	jmp    QWORD PTR [rip+0xcafa]        # 0x413838
  406d3e:	nop
  406d3f:	nop
  406d40:	jmp    QWORD PTR [rip+0xcaea]        # 0x413830
  406d46:	nop
  406d47:	nop
  406d48:	jmp    QWORD PTR [rip+0xcada]        # 0x413828
  406d4e:	nop
  406d4f:	nop
  406d50:	jmp    QWORD PTR [rip+0xcaca]        # 0x413820
  406d56:	nop
  406d57:	nop
  406d58:	jmp    QWORD PTR [rip+0xcaba]        # 0x413818
  406d5e:	nop
  406d5f:	nop
  406d60:	jmp    QWORD PTR [rip+0xcaaa]        # 0x413810
  406d66:	nop
  406d67:	nop
  406d68:	jmp    QWORD PTR [rip+0xca9a]        # 0x413808
  406d6e:	nop
  406d6f:	nop
  406d70:	jmp    QWORD PTR [rip+0xca82]        # 0x4137f8
  406d76:	nop
  406d77:	nop
  406d78:	jmp    QWORD PTR [rip+0xca72]        # 0x4137f0
  406d7e:	nop
  406d7f:	nop
  406d80:	jmp    QWORD PTR [rip+0xca62]        # 0x4137e8
  406d86:	nop
  406d87:	nop
  406d88:	jmp    QWORD PTR [rip+0xca4a]        # 0x4137d8
  406d8e:	nop
  406d8f:	nop
  406d90:	jmp    QWORD PTR [rip+0xca3a]        # 0x4137d0
  406d96:	nop
  406d97:	nop
  406d98:	jmp    QWORD PTR [rip+0xca2a]        # 0x4137c8
  406d9e:	nop
  406d9f:	nop
  406da0:	jmp    QWORD PTR [rip+0xca1a]        # 0x4137c0
  406da6:	nop
  406da7:	nop
  406da8:	jmp    QWORD PTR [rip+0xca02]        # 0x4137b0
  406dae:	nop
  406daf:	nop
  406db0:	jmp    QWORD PTR [rip+0xc9f2]        # 0x4137a8
  406db6:	nop
  406db7:	nop
  406db8:	jmp    QWORD PTR [rip+0xc9e2]        # 0x4137a0
  406dbe:	nop
  406dbf:	nop
  406dc0:	mov    rax,QWORD PTR [rip+0xb679]        # 0x412440
  406dc7:	ret    
  406dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  406dd0:	mov    rax,rcx
  406dd3:	xchg   QWORD PTR [rip+0xb666],rax        # 0x412440
  406dda:	ret    
  406ddb:	nop
  406ddc:	nop
  406ddd:	nop
  406dde:	nop
  406ddf:	nop
  406de0:	jmp    QWORD PTR [rip+0xc9aa]        # 0x413790
  406de6:	nop
  406de7:	nop
  406de8:	jmp    QWORD PTR [rip+0xc99a]        # 0x413788
  406dee:	nop
  406def:	nop
  406df0:	jmp    QWORD PTR [rip+0xc98a]        # 0x413780
  406df6:	nop
  406df7:	nop
  406df8:	jmp    QWORD PTR [rip+0xc97a]        # 0x413778
  406dfe:	nop
  406dff:	nop
  406e00:	jmp    QWORD PTR [rip+0xc96a]        # 0x413770
  406e06:	nop
  406e07:	nop
  406e08:	jmp    QWORD PTR [rip+0xc95a]        # 0x413768
  406e0e:	nop
  406e0f:	nop
  406e10:	jmp    QWORD PTR [rip+0xc94a]        # 0x413760
  406e16:	nop
  406e17:	nop
  406e18:	jmp    QWORD PTR [rip+0xc93a]        # 0x413758
  406e1e:	nop
  406e1f:	nop
  406e20:	jmp    QWORD PTR [rip+0xc92a]        # 0x413750
  406e26:	nop
  406e27:	nop
  406e28:	jmp    QWORD PTR [rip+0xc91a]        # 0x413748
  406e2e:	nop
  406e2f:	nop
  406e30:	jmp    QWORD PTR [rip+0xc90a]        # 0x413740
  406e36:	nop
  406e37:	nop
  406e38:	jmp    QWORD PTR [rip+0xc8fa]        # 0x413738
  406e3e:	nop
  406e3f:	nop
  406e40:	jmp    QWORD PTR [rip+0xc8ea]        # 0x413730
  406e46:	nop
  406e47:	nop
  406e48:	jmp    QWORD PTR [rip+0xc8da]        # 0x413728
  406e4e:	nop
  406e4f:	nop
  406e50:	jmp    QWORD PTR [rip+0xc8ca]        # 0x413720
  406e56:	nop
  406e57:	nop
  406e58:	jmp    QWORD PTR [rip+0xc8ba]        # 0x413718
  406e5e:	nop
  406e5f:	nop
  406e60:	jmp    QWORD PTR [rip+0xc8aa]        # 0x413710
  406e66:	nop
  406e67:	nop
  406e68:	jmp    QWORD PTR [rip+0xc89a]        # 0x413708
  406e6e:	nop
  406e6f:	nop
  406e70:	jmp    QWORD PTR [rip+0xc88a]        # 0x413700
  406e76:	nop
  406e77:	nop
  406e78:	jmp    QWORD PTR [rip+0xc87a]        # 0x4136f8
  406e7e:	nop
  406e7f:	nop
  406e80:	jmp    QWORD PTR [rip+0xc86a]        # 0x4136f0
  406e86:	nop
  406e87:	nop
  406e88:	jmp    QWORD PTR [rip+0xc85a]        # 0x4136e8
  406e8e:	nop
  406e8f:	nop
  406e90:	jmp    QWORD PTR [rip+0xc84a]        # 0x4136e0
  406e96:	nop
  406e97:	nop
  406e98:	nop    DWORD PTR [rax+rax*1+0x0]
  406ea0:	push   rbx
  406ea1:	sub    rsp,0x30
  406ea5:	mov    r8d,0xa
  406eab:	mov    rbx,rdx
  406eae:	lea    rdx,[rsp+0x28]
  406eb3:	call   0x406cd8
  406eb8:	mov    r8,QWORD PTR [rsp+0x28]
  406ebd:	mov    ecx,0x2
  406ec2:	cmp    BYTE PTR [r8],0x0
  406ec6:	jne    0x406ecc
  406ec8:	mov    DWORD PTR [rbx],eax
  406eca:	xor    cl,cl
  406ecc:	mov    eax,ecx
  406ece:	add    rsp,0x30
  406ed2:	pop    rbx
  406ed3:	ret    
  406ed4:	nop
  406ed5:	nop
  406ed6:	nop
  406ed7:	nop
  406ed8:	nop
  406ed9:	nop
  406eda:	nop
  406edb:	nop
  406edc:	nop
  406edd:	nop
  406ede:	nop
  406edf:	nop
  406ee0:	push   r15
  406ee2:	push   r14
  406ee4:	push   r13
  406ee6:	push   r12
  406ee8:	push   rbp
  406ee9:	push   rdi
  406eea:	push   rsi
  406eeb:	push   rbx
  406eec:	sub    rsp,0x778
  406ef3:	movaps XMMWORD PTR [rsp+0x760],xmm6
  406efb:	mov    r15d,ecx
  406efe:	lea    rbx,[rsp+0x70]
  406f03:	mov    r14,rdx
  406f06:	call   0x401900
  406f0b:	call   0x401748
  406f10:	lea    rdx,[rsp+0x78]
  406f15:	mov    rcx,rax
  406f18:	mov    QWORD PTR [rsp+0x70],rax
  406f1d:	mov    QWORD PTR [rsp+0x50],rbx
  406f22:	call   0x401708
  406f27:	lea    rcx,[rbx+0x180]
  406f2e:	call   0x4016b8
  406f33:	lea    rcx,[rbx+0x2f0]
  406f3a:	mov    DWORD PTR [rsp+0x238],0x1
  406f45:	call   0x4016c0
  406f4a:	lea    rcx,[rbx+0x478]
  406f51:	call   0x4016c8
  406f56:	cmp    r15d,0x1
  406f5a:	mov    DWORD PTR [rsp+0x548],0x1
  406f65:	mov    QWORD PTR [rsp+0x630],0x0
  406f71:	mov    QWORD PTR [rsp+0x638],0x0
  406f7d:	mov    DWORD PTR [rsp+0x640],0x2
  406f88:	mov    QWORD PTR [rsp+0x648],0x0
  406f94:	mov    DWORD PTR [rsp+0x650],0x0
  406f9f:	mov    QWORD PTR [rsp+0x6b0],0x0
  406fab:	mov    DWORD PTR [rsp+0x6b8],0x1
  406fb6:	mov    DWORD PTR [rsp+0x6bc],0x1
  406fc1:	mov    QWORD PTR [rsp+0x6c0],0x0
  406fcd:	mov    DWORD PTR [rsp+0x6c8],0x0
  406fd8:	mov    DWORD PTR [rsp+0x6cc],0x1
  406fe3:	mov    QWORD PTR [rsp+0x6d0],0x0
  406fef:	mov    QWORD PTR [rsp+0x6d8],0x0
  406ffb:	mov    QWORD PTR [rsp+0x6e0],0x0
  407007:	mov    DWORD PTR [rsp+0x6e8],0x0
  407012:	mov    QWORD PTR [rsp+0x6f0],0x0
  40701e:	mov    QWORD PTR [rsp+0x6f8],0x0
  40702a:	mov    QWORD PTR [rsp+0x700],0x0
  407036:	mov    QWORD PTR [rsp+0x708],0x0
  407042:	mov    QWORD PTR [rsp+0x710],0x0
  40704e:	mov    QWORD PTR [rsp+0x718],0x0
  40705a:	mov    QWORD PTR [rsp+0x720],0x0
  407066:	mov    DWORD PTR [rsp+0x728],0x2
  407071:	mov    QWORD PTR [rsp+0x730],0x0
  40707d:	mov    DWORD PTR [rsp+0x738],0x0
  407088:	mov    DWORD PTR [rsp+0x73c],0x0
  407093:	mov    DWORD PTR [rsp+0x740],0x0
  40709e:	mov    DWORD PTR [rsp+0x744],0x0
  4070a9:	mov    DWORD PTR [rsp+0x748],0x0
  4070b4:	mov    DWORD PTR [rsp+0x74c],0x0
  4070bf:	mov    QWORD PTR [rsp+0x750],0x0
  4070cb:	jle    0x4078ee
  4070d1:	lea    rax,[rsp+0x68]
  4070d6:	mov    ebx,0x1
  4070db:	lea    r13,[rip+0x3f1e]        # 0x40b000
  4070e2:	mov    QWORD PTR [rsp+0x48],rax
  4070e7:	jmp    0x407103
  4070e9:	nop    DWORD PTR [rax+0x0]
  4070f0:	mov    DWORD PTR [rsp+0x640],0x1
  4070fb:	add    ebx,0x1
  4070fe:	cmp    r15d,ebx
  407101:	jle    0x40714b
  407103:	movsxd r12,ebx
  407106:	mov    ecx,0x6
  40710b:	mov    rdi,r13
  40710e:	mov    rbp,QWORD PTR [r14+r12*8]
  407112:	lea    r9,[r12*8+0x0]
  40711a:	mov    rsi,rbp
  40711d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40711f:	je     0x4070f0
  407121:	lea    rdi,[rip+0x3ede]        # 0x40b006
  407128:	mov    ecx,0xa
  40712d:	mov    rsi,rbp
  407130:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407132:	jne    0x4072a0
  407138:	add    ebx,0x1
  40713b:	mov    DWORD PTR [rsp+0x640],0x2
  407146:	cmp    r15d,ebx
  407149:	jg     0x407103
  40714b:	mov    rcx,QWORD PTR [rsp+0x6b0]
  407153:	test   rcx,rcx
  407156:	je     0x40715d
  407158:	call   0x406d00
  40715d:	mov    rcx,QWORD PTR [rsp+0x6d0]
  407165:	test   rcx,rcx
  407168:	je     0x40716f
  40716a:	call   0x406d00
  40716f:	mov    rcx,QWORD PTR [rsp+0x6d8]
  407177:	test   rcx,rcx
  40717a:	je     0x407181
  40717c:	call   0x406d00
  407181:	mov    rcx,QWORD PTR [rsp+0x6e0]
  407189:	test   rcx,rcx
  40718c:	je     0x407193
  40718e:	call   0x406d00
  407193:	mov    rcx,QWORD PTR [rsp+0x6f8]
  40719b:	test   rcx,rcx
  40719e:	je     0x4071a5
  4071a0:	call   0x406d00
  4071a5:	mov    rcx,QWORD PTR [rsp+0x700]
  4071ad:	test   rcx,rcx
  4071b0:	je     0x4071b7
  4071b2:	call   0x406d00
  4071b7:	mov    rcx,QWORD PTR [rsp+0x708]
  4071bf:	test   rcx,rcx
  4071c2:	je     0x4071c9
  4071c4:	call   0x406d00
  4071c9:	mov    rcx,QWORD PTR [rsp+0x710]
  4071d1:	test   rcx,rcx
  4071d4:	je     0x4071db
  4071d6:	call   0x406d00
  4071db:	mov    rcx,QWORD PTR [rsp+0x718]
  4071e3:	test   rcx,rcx
  4071e6:	je     0x4071ed
  4071e8:	call   0x406d00
  4071ed:	mov    rcx,QWORD PTR [rsp+0x720]
  4071f5:	test   rcx,rcx
  4071f8:	je     0x407219
  4071fa:	call   0x406d00
  4071ff:	mov    rcx,QWORD PTR [rsp+0x720]
  407207:	test   rcx,rcx
  40720a:	je     0x407219
  40720c:	call   0x401620
  407211:	test   eax,eax
  407213:	jne    0x40777f
  407219:	call   0x401568
  40721e:	lea    rcx,[rip+0x5ee3]        # 0x40d108
  407225:	mov    rdx,rax
  407228:	call   0x4015f8
  40722d:	cmp    r15d,0x1
  407231:	jle    0x407448
  407237:	lea    rcx,[rip+0x641a]        # 0x40d658
  40723e:	lea    rbx,[r14+0x8]
  407242:	mov    esi,0x7fffffff
  407247:	call   0x4015f8
  40724c:	lea    eax,[r15-0x2]
  407250:	lea    rdi,[r14+rax*8+0x10]
  407255:	jmp    0x407289
  407257:	nop    WORD PTR [rax+rax*1+0x0]
  407260:	mov    rdx,QWORD PTR [rbx]
  407263:	lea    rcx,[rip+0x641a]        # 0x40d684
  40726a:	add    rbx,0x8
  40726e:	call   0x4015f8
  407273:	mov    rcx,QWORD PTR [rbx-0x8]
  407277:	call   0x406ce8
  40727c:	cmp    rbx,rdi
  40727f:	lea    esi,[rsi+rax*1+0x1]
  407283:	je     0x40743c
  407289:	cmp    esi,0x48
  40728c:	jle    0x407260
  40728e:	lea    rcx,[rip+0x4334]        # 0x40b5c9
  407295:	xor    esi,esi
  407297:	call   0x4015f8
  40729c:	jmp    0x407260
  40729e:	xchg   ax,ax
  4072a0:	lea    rdi,[rip+0x3d69]        # 0x40b010
  4072a7:	mov    ecx,0x5
  4072ac:	mov    rsi,rbp
  4072af:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4072b1:	je     0x4072f0
  4072b3:	lea    rdi,[rip+0x3d5b]        # 0x40b015
  4072ba:	mov    ecx,0x8
  4072bf:	mov    rsi,rbp
  4072c2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4072c4:	je     0x4072f0
  4072c6:	lea    rdi,[rip+0x3d50]        # 0x40b01d
  4072cd:	mov    ecx,0x6
  4072d2:	mov    rsi,rbp
  4072d5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4072d7:	jne    0x407300
  4072d9:	mov    DWORD PTR [rsp+0x640],0x4
  4072e4:	jmp    0x4070fb
  4072e9:	nop    DWORD PTR [rax+0x0]
  4072f0:	mov    DWORD PTR [rsp+0x640],0x3
  4072fb:	jmp    0x4070fb
  407300:	lea    rdi,[rip+0x3d1c]        # 0x40b023
  407307:	mov    ecx,0x7
  40730c:	mov    rsi,rbp
  40730f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407311:	je     0x407326
  407313:	lea    rdi,[rip+0x3d10]        # 0x40b02a
  40731a:	mov    ecx,0x3
  40731f:	mov    rsi,rbp
  407322:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407324:	jne    0x407336
  407326:	mov    DWORD PTR [rsp+0x640],0x5
  407331:	jmp    0x4070fb
  407336:	lea    rdx,[rip+0x3cf0]        # 0x40b02d
  40733d:	mov    rcx,rbp
  407340:	mov    QWORD PTR [rsp+0x58],r9
  407345:	call   0x406cf0
  40734a:	test   eax,eax
  40734c:	mov    r9,QWORD PTR [rsp+0x58]
  407351:	je     0x407326
  407353:	lea    rdx,[rip+0x3cdb]        # 0x40b035
  40735a:	mov    rcx,rbp
  40735d:	mov    QWORD PTR [rsp+0x58],r9
  407362:	call   0x406cf0
  407367:	test   eax,eax
  407369:	mov    r9,QWORD PTR [rsp+0x58]
  40736e:	je     0x407732
  407374:	lea    rdx,[rip+0x3cbd]        # 0x40b038
  40737b:	mov    rcx,rbp
  40737e:	call   0x406cf0
  407383:	test   eax,eax
  407385:	mov    r9,QWORD PTR [rsp+0x58]
  40738a:	je     0x407732
  407390:	lea    rdx,[rip+0x3ce1]        # 0x40b078
  407397:	mov    rcx,rbp
  40739a:	mov    QWORD PTR [rsp+0x58],r9
  40739f:	call   0x406cf0
  4073a4:	test   eax,eax
  4073a6:	mov    r9,QWORD PTR [rsp+0x58]
  4073ab:	je     0x407857
  4073b1:	lea    rdx,[rip+0x3cc3]        # 0x40b07b
  4073b8:	mov    rcx,rbp
  4073bb:	call   0x406cf0
  4073c0:	test   eax,eax
  4073c2:	mov    r9,QWORD PTR [rsp+0x58]
  4073c7:	je     0x407857
  4073cd:	lea    rdx,[rip+0x3d02]        # 0x40b0d6
  4073d4:	mov    rcx,rbp
  4073d7:	mov    QWORD PTR [rsp+0x58],r9
  4073dc:	call   0x406cf0
  4073e1:	test   eax,eax
  4073e3:	mov    r9,QWORD PTR [rsp+0x58]
  4073e8:	jne    0x407c99
  4073ee:	add    ebx,0x1
  4073f1:	cmp    r15d,ebx
  4073f4:	je     0x408190
  4073fa:	lea    rdi,[r14+r9*1+0x8]
  4073ff:	mov    rsi,QWORD PTR [rdi]
  407402:	movzx  eax,BYTE PTR [rsi]
  407405:	test   al,al
  407407:	je     0x408190
  40740d:	cmp    al,0x2d
  40740f:	je     0x408180
  407415:	lea    rdx,[rip+0x3cda]        # 0x40b0f6
  40741c:	mov    rcx,rsi
  40741f:	call   0x406cf0
  407424:	test   eax,eax
  407426:	jne    0x408150
  40742c:	mov    DWORD PTR [rsp+0x6b8],0x80000000
  407437:	jmp    0x4070fb
  40743c:	lea    rcx,[rip+0x4186]        # 0x40b5c9
  407443:	call   0x4015f8
  407448:	mov    r8,QWORD PTR [rsp+0x648]
  407450:	test   r8,r8
  407453:	je     0x407be8
  407459:	mov    eax,DWORD PTR [rsp+0x640]
  407460:	cmp    eax,0x1
  407463:	je     0x4078fd
  407469:	cmp    eax,0x2
  40746c:	je     0x407935
  407472:	cmp    eax,0x3
  407475:	je     0x407953
  40747b:	cmp    eax,0x4
  40747e:	je     0x407a5f
  407484:	cmp    eax,0x5
  407487:	je     0x407b24
  40748d:	cmp    eax,0x6
  407490:	je     0x407a8e
  407496:	cmp    eax,0x7
  407499:	je     0x407c06
  40749f:	cmp    eax,0x8
  4074a2:	je     0x407898
  4074a8:	lea    rdx,[rip+0x62c9]        # 0x40d778
  4074af:	lea    rcx,[rip+0x630c]        # 0x40d7c2
  4074b6:	mov    r8d,0x47f
  4074bc:	call   0x401778
  4074c1:	lea    rsi,[rsp+0x64]
  4074c6:	mov    rdx,QWORD PTR [rsp+0x6f0]
  4074ce:	test   rdx,rdx
  4074d1:	je     0x4074dd
  4074d3:	mov    rcx,QWORD PTR [rsp+0x70]
  4074d8:	call   0x401590
  4074dd:	mov    edx,DWORD PTR [rsp+0x6c8]
  4074e4:	test   edx,edx
  4074e6:	jne    0x4078c9
  4074ec:	mov    rcx,QWORD PTR [rsp+0x70]
  4074f1:	call   0x401580
  4074f6:	mov    r9,QWORD PTR [rsp+0x6f8]
  4074fe:	test   r9,r9
  407501:	je     0x40751d
  407503:	mov    rcx,QWORD PTR [rsp+0x70]
  407508:	xor    r8d,r8d
  40750b:	mov    edx,0x1
  407510:	call   0x401540
  407515:	test   eax,eax
  407517:	jne    0x4078d8
  40751d:	mov    r9,QWORD PTR [rsp+0x700]
  407525:	test   r9,r9
  407528:	je     0x407544
  40752a:	mov    rcx,QWORD PTR [rsp+0x70]
  40752f:	xor    r8d,r8d
  407532:	mov    edx,0x2
  407537:	call   0x401540
  40753c:	test   eax,eax
  40753e:	jne    0x407982
  407544:	mov    r8,QWORD PTR [rsp+0x708]
  40754c:	test   r8,r8
  40754f:	je     0x407565
  407551:	mov    rcx,QWORD PTR [rsp+0x70]
  407556:	xor    edx,edx
  407558:	call   0x401550
  40755d:	test   eax,eax
  40755f:	jne    0x407998
  407565:	mov    r8,QWORD PTR [rsp+0x710]
  40756d:	test   r8,r8
  407570:	je     0x407586
  407572:	mov    rcx,QWORD PTR [rsp+0x70]
  407577:	xor    edx,edx
  407579:	call   0x401538
  40757e:	test   eax,eax
  407580:	jne    0x4079ae
  407586:	mov    rdx,QWORD PTR [rsp+0x718]
  40758e:	test   rdx,rdx
  407591:	je     0x4075a5
  407593:	mov    rcx,QWORD PTR [rsp+0x70]
  407598:	call   0x401560
  40759d:	test   eax,eax
  40759f:	jne    0x407d49
  4075a5:	cmp    DWORD PTR [rsp+0x6e8],0x0
  4075ad:	jne    0x4079c4
  4075b3:	cmp    DWORD PTR [rsp+0x740],0x0
  4075bb:	je     0x407eb1
  4075c1:	mov    rdx,QWORD PTR [rsp+0x6c0]
  4075c9:	test   rdx,rdx
  4075cc:	je     0x407db5
  4075d2:	mov    eax,DWORD PTR [rsp+0x6bc]
  4075d9:	cmp    eax,0x1
  4075dc:	je     0x4084c3
  4075e2:	cmp    eax,0x2
  4075e5:	je     0x40841f
  4075eb:	cmp    eax,0x3
  4075ee:	je     0x407d8d
  4075f4:	lea    rdx,[rip+0x617d]        # 0x40d778
  4075fb:	lea    rcx,[rip+0x61c0]        # 0x40d7c2
  407602:	mov    r8d,0x4ff
  407608:	call   0x401778
  40760d:	cmp    QWORD PTR [rsp+0x630],0x0
  407616:	je     0x408418
  40761c:	mov    eax,DWORD PTR [rsp+0x6bc]
  407623:	cmp    eax,0x1
  407626:	je     0x4083d9
  40762c:	cmp    eax,0x2
  40762f:	je     0x4081a1
  407635:	cmp    eax,0x3
  407638:	je     0x407d5f
  40763e:	lea    rdx,[rip+0x6133]        # 0x40d778
  407645:	lea    rcx,[rip+0x6176]        # 0x40d7c2
  40764c:	mov    r8d,0x58b
  407652:	call   0x401778
  407657:	xor    eax,eax
  407659:	mov    rdx,QWORD PTR [rsp+0x6d0]
  407661:	test   rdx,rdx
  407664:	je     0x4076b1
  407666:	mov    ecx,DWORD PTR [rsp+0x6bc]
  40766d:	cmp    ecx,0x1
  407670:	je     0x408328
  407676:	cmp    ecx,0x2
  407679:	je     0x408319
  40767f:	cmp    ecx,0x3
  407682:	je     0x408337
  407688:	lea    rdx,[rip+0x60e9]        # 0x40d778
  40768f:	lea    rcx,[rip+0x612c]        # 0x40d7c2
  407696:	mov    r8d,0x59c
  40769c:	mov    DWORD PTR [rsp+0x50],eax
  4076a0:	call   0x401778
  4076a5:	mov    eax,DWORD PTR [rsp+0x50]
  4076a9:	test   eax,eax
  4076ab:	jne    0x408303
  4076b1:	mov    rdx,QWORD PTR [rsp+0x6d8]
  4076b9:	test   rdx,rdx
  4076bc:	je     0x407709
  4076be:	mov    ecx,DWORD PTR [rsp+0x6bc]
  4076c5:	cmp    ecx,0x1
  4076c8:	je     0x4082a5
  4076ce:	cmp    ecx,0x2
  4076d1:	je     0x408296
  4076d7:	cmp    ecx,0x3
  4076da:	je     0x408227
  4076e0:	lea    rdx,[rip+0x6091]        # 0x40d778
  4076e7:	lea    rcx,[rip+0x60d4]        # 0x40d7c2
  4076ee:	mov    r8d,0x5ac
  4076f4:	mov    DWORD PTR [rsp+0x50],eax
  4076f8:	call   0x401778
  4076fd:	mov    eax,DWORD PTR [rsp+0x50]
  407701:	test   eax,eax
  407703:	jne    0x408303
  407709:	cmp    QWORD PTR [rsp+0x6e0],0x0
  407712:	je     0x40772e
  407714:	cmp    DWORD PTR [rsp+0x6bc],0x1
  40771c:	je     0x408274
  407722:	lea    rcx,[rip+0x652f]        # 0x40dc58
  407729:	call   0x4015f8
  40772e:	xor    ebx,ebx
  407730:	jmp    0x407795
  407732:	add    ebx,0x1
  407735:	cmp    r15d,ebx
  407738:	je     0x407c63
  40773e:	mov    rdx,QWORD PTR [r14+r9*1+0x8]
  407743:	movzx  eax,BYTE PTR [rdx]
  407746:	test   al,al
  407748:	je     0x407c63
  40774e:	cmp    al,0x2d
  407750:	je     0x407c63
  407756:	mov    eax,DWORD PTR [rsp+0x650]
  40775d:	cmp    eax,0xa
  407760:	je     0x407cc6
  407766:	add    eax,0x1
  407769:	mov    DWORD PTR [rsp+0x650],eax
  407770:	cdqe   
  407772:	mov    QWORD PTR [rsp+rax*8+0x658],rdx
  40777a:	jmp    0x4070fb
  40777f:	lea    rcx,[rip+0x5eb7]        # 0x40d63d
  407786:	lea    rsi,[rsp+0x64]
  40778b:	mov    ebx,0x1
  407790:	call   0x4015f8
  407795:	mov    rcx,QWORD PTR [rsp+0x70]
  40779a:	test   rcx,rcx
  40779d:	je     0x4077a4
  40779f:	call   0x401738
  4077a4:	mov    rcx,QWORD PTR [rsp+0x630]
  4077ac:	test   rcx,rcx
  4077af:	je     0x4077b6
  4077b1:	call   0x401650
  4077b6:	mov    rcx,QWORD PTR [rsp+0x638]
  4077be:	test   rcx,rcx
  4077c1:	je     0x4077c8
  4077c3:	call   0x401740
  4077c8:	cmp    QWORD PTR [rsp+0x720],0x0
  4077d1:	je     0x4077d8
  4077d3:	call   0x401760
  4077d8:	mov    r8,QWORD PTR [rsp+0x48]
  4077dd:	xor    r9d,r9d
  4077e0:	xor    edx,edx
  4077e2:	mov    rcx,rsi
  4077e5:	call   0x401680
  4077ea:	mov    eax,DWORD PTR [rsp+0x64]
  4077ee:	test   eax,eax
  4077f0:	jne    0x407837
  4077f2:	cmp    QWORD PTR [rsp+0x68],0x0
  4077f8:	je     0x407813
  4077fa:	lea    rdx,[rip+0x5f77]        # 0x40d778
  407801:	lea    rcx,[rip+0x64c5]        # 0x40dccd
  407808:	mov    r8d,0x5f4
  40780e:	call   0x401778
  407813:	call   0x401710
  407818:	nop
  407819:	movaps xmm6,XMMWORD PTR [rsp+0x760]
  407821:	mov    eax,ebx
  407823:	add    rsp,0x778
  40782a:	pop    rbx
  40782b:	pop    rsi
  40782c:	pop    rdi
  40782d:	pop    rbp
  40782e:	pop    r12
  407830:	pop    r13
  407832:	pop    r14
  407834:	pop    r15
  407836:	ret    
  407837:	lea    rcx,[rip+0x5f3a]        # 0x40d778
  40783e:	mov    edx,0x5f3
  407843:	call   0x401728
  407848:	mov    edx,DWORD PTR [rsp+0x64]
  40784c:	lea    rcx,[rip+0x6455]        # 0x40dca8
  407853:	call   rax
  407855:	jmp    0x4077f2
  407857:	add    ebx,0x1
  40785a:	cmp    r15d,ebx
  40785d:	je     0x408247
  407863:	mov    rax,QWORD PTR [r14+r9*1+0x8]
  407868:	movzx  edx,BYTE PTR [rax]
  40786b:	test   dl,dl
  40786d:	je     0x408247
  407873:	cmp    dl,0x2d
  407876:	je     0x408247
  40787c:	cmp    QWORD PTR [rsp+0x6b0],0x0
  407885:	jne    0x408236
  40788b:	mov    QWORD PTR [rsp+0x6b0],rax
  407893:	jmp    0x4070fb
  407898:	mov    rcx,QWORD PTR [rsp+0x70]
  40789d:	mov    rdx,r8
  4078a0:	call   0x4015f0
  4078a5:	test   eax,eax
  4078a7:	jne    0x407c7e
  4078ad:	mov    rdx,QWORD PTR [rsp+0x648]
  4078b5:	mov    rcx,QWORD PTR [rsp+0x70]
  4078ba:	lea    rsi,[rsp+0x64]
  4078bf:	call   0x401590
  4078c4:	jmp    0x4074c6
  4078c9:	mov    rcx,QWORD PTR [rsp+0x70]
  4078ce:	call   0x401598
  4078d3:	jmp    0x4074ec
  4078d8:	lea    rcx,[rip+0x5ef1]        # 0x40d7d0
  4078df:	mov    ebx,0x1
  4078e4:	call   0x4015f8
  4078e9:	jmp    0x407795
  4078ee:	lea    rax,[rsp+0x68]
  4078f3:	mov    QWORD PTR [rsp+0x48],rax
  4078f8:	jmp    0x40714b
  4078fd:	mov    rcx,QWORD PTR [rsp+0x70]
  407902:	mov    r9,r8
  407905:	mov    edx,0x1
  40790a:	xor    r8d,r8d
  40790d:	call   0x4015c0
  407912:	test   eax,eax
  407914:	je     0x4074c1
  40791a:	lea    rcx,[rip+0x5d97]        # 0x40d6b8
  407921:	mov    ebx,0x1
  407926:	lea    rsi,[rsp+0x64]
  40792b:	call   0x4015f8
  407930:	jmp    0x407795
  407935:	mov    rcx,QWORD PTR [rsp+0x70]
  40793a:	mov    r9,r8
  40793d:	mov    edx,0x2
  407942:	xor    r8d,r8d
  407945:	call   0x4015c0
  40794a:	test   eax,eax
  40794c:	jne    0x40791a
  40794e:	jmp    0x4074c1
  407953:	mov    rcx,QWORD PTR [rsp+0x70]
  407958:	xor    edx,edx
  40795a:	lea    rsi,[rsp+0x64]
  40795f:	call   0x4015e0
  407964:	test   eax,eax
  407966:	je     0x4074c6
  40796c:	lea    rcx,[rip+0x5d65]        # 0x40d6d8
  407973:	mov    ebx,0x1
  407978:	call   0x4015f8
  40797d:	jmp    0x407795
  407982:	lea    rcx,[rip+0x5e77]        # 0x40d800
  407989:	mov    ebx,0x1
  40798e:	call   0x4015f8
  407993:	jmp    0x407795
  407998:	lea    rcx,[rip+0x5e91]        # 0x40d830
  40799f:	mov    ebx,0x1
  4079a4:	call   0x4015f8
  4079a9:	jmp    0x407795
  4079ae:	lea    rcx,[rip+0x5eab]        # 0x40d860
  4079b5:	mov    ebx,0x1
  4079ba:	call   0x4015f8
  4079bf:	jmp    0x407795
  4079c4:	lea    rcx,[rip+0x5ef5]        # 0x40d8c0
  4079cb:	xor    edi,edi
  4079cd:	pxor   xmm6,xmm6
  4079d1:	call   0x4015f8
  4079d6:	mov    rcx,QWORD PTR [rsp+0x70]
  4079db:	call   0x4016e0
  4079e0:	lea    rcx,[rip+0x5f01]        # 0x40d8e8
  4079e7:	mov    edx,eax
  4079e9:	call   0x4015f8
  4079ee:	mov    rcx,QWORD PTR [rsp+0x70]
  4079f3:	call   0x4016f8
  4079f8:	lea    rcx,[rip+0x5f11]        # 0x40d910
  4079ff:	mov    edx,eax
  407a01:	call   0x4015f8
  407a06:	mov    rcx,QWORD PTR [rsp+0x70]
  407a0b:	call   0x4016e8
  407a10:	lea    rcx,[rip+0x5f21]        # 0x40d938
  407a17:	mov    edx,eax
  407a19:	call   0x4015f8
  407a1e:	mov    rcx,QWORD PTR [rsp+0x70]
  407a23:	call   0x4016f8
  407a28:	mov    ebx,eax
  407a2a:	jmp    0x407a46
  407a2c:	mov    rcx,QWORD PTR [rsp+0x70]
  407a31:	mov    edx,ebx
  407a33:	call   0x4016d8
  407a38:	ucomisd xmm0,xmm6
  407a3c:	jp     0x407a40
  407a3e:	je     0x407a43
  407a40:	add    edi,0x1
  407a43:	sub    ebx,0x1
  407a46:	test   ebx,ebx
  407a48:	jg     0x407a2c
  407a4a:	lea    rcx,[rip+0x5f0f]        # 0x40d960
  407a51:	mov    edx,edi
  407a53:	xor    ebx,ebx
  407a55:	call   0x4015f8
  407a5a:	jmp    0x407795
  407a5f:	mov    rcx,QWORD PTR [rsp+0x70]
  407a64:	xor    edx,edx
  407a66:	lea    rsi,[rsp+0x64]
  407a6b:	call   0x4015b8
  407a70:	test   eax,eax
  407a72:	je     0x4074c6
  407a78:	lea    rcx,[rip+0x5c79]        # 0x40d6f8
  407a7f:	mov    ebx,0x1
  407a84:	call   0x4015f8
  407a89:	jmp    0x407795
  407a8e:	mov    edx,0x20
  407a93:	mov    ecx,0x10
  407a98:	call   0x401750
  407a9d:	mov    rdx,QWORD PTR [rsp+0x648]
  407aa5:	xor    r8d,r8d
  407aa8:	mov    DWORD PTR [rsp+0x20],0x10
  407ab0:	mov    r9d,0x8
  407ab6:	mov    rcx,rax
  407ab9:	mov    QWORD PTR [rsp+0x638],rax
  407ac1:	mov    QWORD PTR [rsp+0x28],rdx
  407ac6:	xor    edx,edx
  407ac8:	call   0x4015d0
  407acd:	test   eax,eax
  407acf:	jne    0x407c7e
  407ad5:	mov    rdx,QWORD PTR [rsp+0x638]
  407add:	mov    rcx,QWORD PTR [rsp+0x70]
  407ae2:	xor    r9d,r9d
  407ae5:	mov    r8d,0x1
  407aeb:	mov    DWORD PTR [rsp+0x30],0x10
  407af3:	mov    DWORD PTR [rsp+0x28],0x8
  407afb:	mov    DWORD PTR [rsp+0x20],0x0
  407b03:	lea    rsi,[rsp+0x64]
  407b08:	call   0x401678
  407b0d:	mov    rdx,QWORD PTR [rsp+0x648]
  407b15:	mov    rcx,QWORD PTR [rsp+0x70]
  407b1a:	call   0x401590
  407b1f:	jmp    0x4074c6
  407b24:	call   0x401660
  407b29:	cmp    DWORD PTR [rsp+0x6b8],0x80000000
  407b34:	mov    QWORD PTR [rsp+0x630],rax
  407b3c:	je     0x4081f9
  407b42:	mov    edx,DWORD PTR [rsp+0x6b8]
  407b49:	mov    rcx,QWORD PTR [rsp+0x630]
  407b51:	call   0x401640
  407b56:	xor    r8d,r8d
  407b59:	cmp    DWORD PTR [rsp+0x650],0x0
  407b61:	mov    rdx,QWORD PTR [rsp+0x648]
  407b69:	mov    rcx,QWORD PTR [rsp+0x630]
  407b71:	setg   r8b
  407b75:	xor    ebx,ebx
  407b77:	call   0x401628
  407b7c:	test   eax,eax
  407b7e:	je     0x407ba4
  407b80:	jmp    0x407bcd
  407b82:	mov    rax,QWORD PTR [rsp+0x50]
  407b87:	mov    rcx,QWORD PTR [rsp+0x630]
  407b8f:	mov    rdx,QWORD PTR [rax+rbx*8+0x5f0]
  407b97:	add    rbx,0x1
  407b9b:	call   0x401630
  407ba0:	test   eax,eax
  407ba2:	jne    0x407bcd
  407ba4:	lea    eax,[rbx+0x1]
  407ba7:	cmp    DWORD PTR [rsp+0x650],eax
  407bae:	jge    0x407b82
  407bb0:	mov    rdx,QWORD PTR [rsp+0x6b0]
  407bb8:	mov    rcx,QWORD PTR [rsp+0x630]
  407bc0:	call   0x401648
  407bc5:	test   eax,eax
  407bc7:	je     0x408258
  407bcd:	lea    rcx,[rip+0x5b64]        # 0x40d738
  407bd4:	mov    ebx,0x1
  407bd9:	lea    rsi,[rsp+0x64]
  407bde:	call   0x4015f8
  407be3:	jmp    0x407795
  407be8:	mov    rdx,QWORD PTR [r14]
  407beb:	lea    rcx,[rip+0x5a96]        # 0x40d688
  407bf2:	mov    ebx,0x1
  407bf7:	lea    rsi,[rsp+0x64]
  407bfc:	call   0x4015f8
  407c01:	jmp    0x407795
  407c06:	mov    edx,0x20
  407c0b:	mov    ecx,0x10
  407c10:	lea    rsi,[rsp+0x64]
  407c15:	call   0x401750
  407c1a:	mov    rdx,QWORD PTR [rsp+0x648]
  407c22:	mov    r8,QWORD PTR [rsp+0x48]
  407c27:	mov    r9d,0x8
  407c2d:	mov    rcx,rax
  407c30:	mov    QWORD PTR [rsp+0x638],rax
  407c38:	mov    QWORD PTR [rsp+0x20],rdx
  407c3d:	mov    rdx,rsi
  407c40:	call   0x4015d8
  407c45:	test   eax,eax
  407c47:	je     0x407cd4
  407c4d:	lea    rcx,[rip+0x5b05]        # 0x40d759
  407c54:	mov    ebx,0x1
  407c59:	call   0x4015f8
  407c5e:	jmp    0x407795
  407c63:	lea    rcx,[rip+0x33d5]        # 0x40b03f
  407c6a:	call   0x4015f8
  407c6f:	mov    ebx,0x1
  407c74:	lea    rsi,[rsp+0x64]
  407c79:	jmp    0x407795
  407c7e:	lea    rcx,[rip+0x5ad4]        # 0x40d759
  407c85:	mov    ebx,0x1
  407c8a:	lea    rsi,[rsp+0x64]
  407c8f:	call   0x4015f8
  407c94:	jmp    0x407795
  407c99:	lea    rdx,[rip+0x3471]        # 0x40b111
  407ca0:	mov    rcx,rbp
  407ca3:	mov    QWORD PTR [rsp+0x58],r9
  407ca8:	call   0x406cf0
  407cad:	test   eax,eax
  407caf:	mov    r9,QWORD PTR [rsp+0x58]
  407cb4:	jne    0x407d18
  407cb6:	mov    DWORD PTR [rsp+0x640],0x6
  407cc1:	jmp    0x4070fb
  407cc6:	lea    rcx,[rip+0x3390]        # 0x40b05d
  407ccd:	call   0x4015f8
  407cd2:	jmp    0x407c6f
  407cd4:	mov    eax,DWORD PTR [rsp+0x68]
  407cd8:	mov    rdx,QWORD PTR [rsp+0x638]
  407ce0:	mov    r8d,0x1
  407ce6:	mov    rcx,QWORD PTR [rsp+0x70]
  407ceb:	mov    r9d,DWORD PTR [rsp+0x64]
  407cf0:	mov    DWORD PTR [rsp+0x28],0x8
  407cf8:	mov    DWORD PTR [rsp+0x20],eax
  407cfc:	call   0x401690
  407d01:	mov    rdx,QWORD PTR [rsp+0x648]
  407d09:	mov    rcx,QWORD PTR [rsp+0x70]
  407d0e:	call   0x401590
  407d13:	jmp    0x4074c6
  407d18:	lea    rdx,[rip+0x33fc]        # 0x40b11b
  407d1f:	mov    rcx,rbp
  407d22:	mov    QWORD PTR [rsp+0x58],r9
  407d27:	call   0x406cf0
  407d2c:	test   eax,eax
  407d2e:	mov    r9,QWORD PTR [rsp+0x58]
  407d33:	jne    0x40844b
  407d39:	mov    DWORD PTR [rsp+0x640],0x7
  407d44:	jmp    0x4070fb
  407d49:	lea    rcx,[rip+0x5b38]        # 0x40d888
  407d50:	mov    ebx,0x1
  407d55:	call   0x4015f8
  407d5a:	jmp    0x407795
  407d5f:	mov    rcx,QWORD PTR [rsp+0x70]
  407d64:	call   0x401668
  407d69:	cmp    eax,0x5
  407d6c:	je     0x40842e
  407d72:	mov    rcx,QWORD PTR [rsp+0x70]
  407d77:	call   0x401668
  407d7c:	cmp    eax,0x2
  407d7f:	je     0x40842e
  407d85:	or     eax,0xffffffff
  407d88:	jmp    0x407659
  407d8d:	mov    rcx,QWORD PTR [rsp+0x70]
  407d92:	call   0x4015c8
  407d97:	test   eax,eax
  407d99:	je     0x40760d
  407d9f:	lea    rcx,[rip+0x5c2a]        # 0x40d9d0
  407da6:	mov    ebx,0x1
  407dab:	call   0x4015f8
  407db0:	jmp    0x407795
  407db5:	cmp    DWORD PTR [rsp+0x6bc],0x3
  407dbd:	je     0x407efb
  407dc3:	cmp    DWORD PTR [rsp+0x6cc],0x0
  407dcb:	mov    eax,DWORD PTR [rsp+0x6bc]
  407dd2:	je     0x407f52
  407dd8:	cmp    eax,0x1
  407ddb:	je     0x408388
  407de1:	cmp    eax,0x2
  407de4:	je     0x407f3c
  407dea:	cmp    eax,0x3
  407ded:	je     0x407f2e
  407df3:	call   0x401570
  407df8:	mov    eax,DWORD PTR [rsp+0x6bc]
  407dff:	movapd xmm6,xmm0
  407e03:	cmp    eax,0x1
  407e06:	je     0x40807f
  407e0c:	cmp    eax,0x2
  407e0f:	je     0x408046
  407e15:	cmp    eax,0x3
  407e18:	je     0x407fd1
  407e1e:	lea    rdx,[rip+0x5953]        # 0x40d778
  407e25:	lea    rcx,[rip+0x5996]        # 0x40d7c2
  407e2c:	mov    r8d,0x55f
  407e32:	call   0x401778
  407e37:	call   0x401570
  407e3c:	movapd xmm1,xmm6
  407e40:	call   0x401730
  407e45:	lea    rcx,[rip+0x5c88]        # 0x40dad4
  407e4c:	movq   rdx,xmm0
  407e51:	movapd xmm1,xmm0
  407e55:	call   0x4015f8
  407e5a:	mov    r9,QWORD PTR [rsp+0x48]
  407e5f:	xor    edx,edx
  407e61:	xor    r8d,r8d
  407e64:	xor    ecx,ecx
  407e66:	call   0x401680
  407e6b:	mov    rdx,QWORD PTR [rsp+0x68]
  407e70:	test   rdx,rdx
  407e73:	js     0x408478
  407e79:	pxor   xmm0,xmm0
  407e7d:	cvtsi2sd xmm0,rdx
  407e82:	movsd  xmm3,QWORD PTR [rip+0x5e66]        # 0x40dcf0
  407e8a:	movapd xmm2,xmm0
  407e8e:	movq   r8,xmm0
  407e93:	lea    rcx,[rip+0x5c56]        # 0x40daf0
  407e9a:	mulsd  xmm3,xmm0
  407e9e:	movapd xmm1,xmm3
  407ea2:	movq   rdx,xmm3
  407ea7:	call   0x4015f8
  407eac:	jmp    0x40760d
  407eb1:	mov    rcx,QWORD PTR [rsp+0x70]
  407eb6:	call   0x4016f0
  407ebb:	mov    rcx,QWORD PTR [rsp+0x70]
  407ec0:	mov    ebx,eax
  407ec2:	call   0x401700
  407ec7:	add    eax,ebx
  407ec9:	test   eax,eax
  407ecb:	jle    0x4075c1
  407ed1:	cmp    DWORD PTR [rsp+0x6bc],0x2
  407ed9:	je     0x407fbb
  407edf:	mov    rdx,QWORD PTR [rsp+0x6c0]
  407ee7:	mov    DWORD PTR [rsp+0x6bc],0x3
  407ef2:	test   rdx,rdx
  407ef5:	jne    0x407d8d
  407efb:	mov    rdx,QWORD PTR [rsp+0x750]
  407f03:	test   rdx,rdx
  407f06:	je     0x4083bf
  407f0c:	mov    rcx,QWORD PTR [rsp+0x70]
  407f11:	call   0x4015c8
  407f16:	test   eax,eax
  407f18:	jne    0x4083a9
  407f1e:	mov    DWORD PTR [rsp+0x560],0x1
  407f29:	jmp    0x407dc3
  407f2e:	cmp    DWORD PTR [rsp+0x548],0x0
  407f36:	jne    0x407df3
  407f3c:	mov    rcx,QWORD PTR [rsp+0x70]
  407f41:	mov    edx,0x80
  407f46:	call   0x4015a8
  407f4b:	mov    eax,DWORD PTR [rsp+0x6bc]
  407f52:	cmp    eax,0x1
  407f55:	je     0x408396
  407f5b:	cmp    eax,0x3
  407f5e:	jne    0x407df3
  407f64:	cmp    DWORD PTR [rsp+0x548],0x0
  407f6c:	jne    0x407df3
  407f72:	mov    eax,DWORD PTR [rsp+0x728]
  407f79:	cmp    eax,0x1
  407f7c:	je     0x40853e
  407f82:	cmp    eax,0x2
  407f85:	je     0x40854d
  407f8b:	cmp    eax,0x3
  407f8e:	je     0x40852f
  407f94:	cmp    eax,0x4
  407f97:	je     0x4084d2
  407f9d:	lea    rdx,[rip+0x57d4]        # 0x40d778
  407fa4:	lea    rcx,[rip+0x5817]        # 0x40d7c2
  407fab:	mov    r8d,0x52f
  407fb1:	call   0x401778
  407fb6:	jmp    0x407df3
  407fbb:	lea    rcx,[rip+0x59c6]        # 0x40d988
  407fc2:	mov    ebx,0x1
  407fc7:	call   0x4015f8
  407fcc:	jmp    0x407795
  407fd1:	cmp    DWORD PTR [rsp+0x744],0x0
  407fd9:	jne    0x408029
  407fdb:	mov    rax,QWORD PTR [rsp+0x50]
  407fe0:	mov    rcx,QWORD PTR [rsp+0x70]
  407fe5:	lea    rdx,[rax+0x8]
  407fe9:	call   0x4015a0
  407fee:	cmp    DWORD PTR [rsp+0x548],0x0
  407ff6:	jne    0x40800e
  407ff8:	mov    rax,QWORD PTR [rsp+0x50]
  407ffd:	mov    rcx,QWORD PTR [rsp+0x70]
  408002:	lea    rdx,[rax+0x180]
  408009:	call   0x401588
  40800e:	mov    rdx,QWORD PTR [rsp+0x50]
  408013:	mov    rcx,QWORD PTR [rsp+0x70]
  408018:	add    rdx,0x478
  40801f:	call   0x4016a0
  408024:	jmp    0x407e37
  408029:	mov    rcx,QWORD PTR [rsp+0x70]
  40802e:	call   0x401768
  408033:	test   eax,eax
  408035:	jne    0x408061
  408037:	mov    rcx,QWORD PTR [rsp+0x70]
  40803c:	call   0x401670
  408041:	jmp    0x407e37
  408046:	mov    rdx,QWORD PTR [rsp+0x50]
  40804b:	mov    rcx,QWORD PTR [rsp+0x70]
  408050:	add    rdx,0x2f0
  408057:	call   0x4016b0
  40805c:	jmp    0x407e37
  408061:	mov    r8d,DWORD PTR [rsp+0x74c]
  408069:	mov    edx,DWORD PTR [rsp+0x748]
  408070:	mov    rcx,QWORD PTR [rsp+0x70]
  408075:	call   0x4016a8
  40807a:	jmp    0x407e37
  40807f:	cmp    DWORD PTR [rsp+0x738],0x0
  408087:	jne    0x408125
  40808d:	mov    rbx,QWORD PTR [rsp+0x50]
  408092:	mov    rcx,QWORD PTR [rsp+0x70]
  408097:	lea    rdx,[rbx+0x8]
  40809b:	call   0x4015a0
  4080a0:	mov    rcx,QWORD PTR [rsp+0x70]
  4080a5:	lea    rdx,[rbx+0x180]
  4080ac:	call   0x401588
  4080b1:	cmp    DWORD PTR [rsp+0x73c],0x0
  4080b9:	je     0x4080e8
  4080bb:	cmp    DWORD PTR [rsp+0x238],0x0
  4080c3:	je     0x40836d
  4080c9:	mov    rcx,QWORD PTR [rsp+0x70]
  4080ce:	call   0x4016d0
  4080d3:	cmp    eax,0x5
  4080d6:	je     0x40836d
  4080dc:	lea    rcx,[rip+0x595d]        # 0x40da40
  4080e3:	call   0x4015f8
  4080e8:	cmp    QWORD PTR [rsp+0x6d0],0x0
  4080f1:	je     0x408140
  4080f3:	cmp    DWORD PTR [rsp+0x238],0x0
  4080fb:	je     0x407e37
  408101:	mov    rcx,QWORD PTR [rsp+0x70]
  408106:	call   0x4016d0
  40810b:	cmp    eax,0x5
  40810e:	je     0x407e37
  408114:	lea    rcx,[rip+0x5975]        # 0x40da90
  40811b:	call   0x4015f8
  408120:	jmp    0x407e37
  408125:	mov    rdx,QWORD PTR [rsp+0x50]
  40812a:	mov    rcx,QWORD PTR [rsp+0x70]
  40812f:	add    rdx,0x180
  408136:	call   0x401720
  40813b:	jmp    0x407e37
  408140:	cmp    QWORD PTR [rsp+0x6d8],0x0
  408149:	jne    0x4080f3
  40814b:	jmp    0x407e37
  408150:	mov    rax,QWORD PTR [rsp+0x50]
  408155:	mov    rcx,rsi
  408158:	lea    rdx,[rax+0x648]
  40815f:	call   0x406ea0
  408164:	test   eax,eax
  408166:	je     0x4070fb
  40816c:	mov    rdx,QWORD PTR [rdi]
  40816f:	lea    rcx,[rip+0x2f82]        # 0x40b0f8
  408176:	call   0x4015f8
  40817b:	jmp    0x407c6f
  408180:	movzx  eax,BYTE PTR [rsi+0x1]
  408184:	sub    eax,0x30
  408187:	cmp    eax,0x9
  40818a:	jbe    0x407415
  408190:	lea    rcx,[rip+0x2f46]        # 0x40b0dd
  408197:	call   0x4015f8
  40819c:	jmp    0x407c6f
  4081a1:	mov    rcx,QWORD PTR [rsp+0x70]
  4081a6:	call   0x401698
  4081ab:	cmp    eax,0x5
  4081ae:	je     0x4081c3
  4081b0:	mov    rcx,QWORD PTR [rsp+0x70]
  4081b5:	call   0x401698
  4081ba:	cmp    eax,0x2
  4081bd:	jne    0x407d85
  4081c3:	mov    rdx,QWORD PTR [rsp+0x70]
  4081c8:	mov    rcx,QWORD PTR [rsp+0x630]
  4081d0:	mov    r8d,0x2
  4081d6:	call   0x401638
  4081db:	test   eax,eax
  4081dd:	jle    0x407659
  4081e3:	lea    rcx,[rip+0x5929]        # 0x40db13
  4081ea:	mov    ebx,0x1
  4081ef:	call   0x4015f8
  4081f4:	jmp    0x407795
  4081f9:	call   0x401570
  4081fe:	movsd  xmm1,QWORD PTR [rip+0x5ae2]        # 0x40dce8
  408206:	call   0x402dd0
  40820b:	cvttsd2si edx,xmm0
  40820f:	lea    rcx,[rip+0x5505]        # 0x40d71b
  408216:	mov    DWORD PTR [rsp+0x6b8],edx
  40821d:	call   0x4015f8
  408222:	jmp    0x407b42
  408227:	mov    rcx,QWORD PTR [rsp+0x70]
  40822c:	call   0x401548
  408231:	jmp    0x407701
  408236:	lea    rcx,[rip+0x2e73]        # 0x40b0b0
  40823d:	call   0x4015f8
  408242:	jmp    0x407c6f
  408247:	lea    rcx,[rip+0x2e3a]        # 0x40b088
  40824e:	call   0x4015f8
  408253:	jmp    0x407c6f
  408258:	mov    rdx,QWORD PTR [rsp+0x70]
  40825d:	mov    rcx,QWORD PTR [rsp+0x630]
  408265:	lea    rsi,[rsp+0x64]
  40826a:	call   0x401658
  40826f:	jmp    0x4074c6
  408274:	mov    rcx,QWORD PTR [rsp+0x70]
  408279:	call   0x4016d0
  40827e:	cmp    eax,0x5
  408281:	je     0x4082b4
  408283:	lea    rcx,[rip+0x597e]        # 0x40dc08
  40828a:	xor    ebx,ebx
  40828c:	call   0x4015f8
  408291:	jmp    0x407795
  408296:	mov    rcx,QWORD PTR [rsp+0x70]
  40829b:	call   0x401558
  4082a0:	jmp    0x407701
  4082a5:	mov    rcx,QWORD PTR [rsp+0x70]
  4082aa:	call   0x401530
  4082af:	jmp    0x407701
  4082b4:	mov    rcx,QWORD PTR [rsp+0x70]
  4082b9:	call   0x401770
  4082be:	test   eax,eax
  4082c0:	je     0x408346
  4082c6:	mov    rax,QWORD PTR [rsp+0x6e0]
  4082ce:	mov    rcx,QWORD PTR [rsp+0x70]
  4082d3:	xor    r9d,r9d
  4082d6:	xor    r8d,r8d
  4082d9:	xor    edx,edx
  4082db:	mov    QWORD PTR [rsp+0x20],rax
  4082e0:	call   0x401608
  4082e5:	test   eax,eax
  4082e7:	je     0x40772e
  4082ed:	lea    rcx,[rip+0x5864]        # 0x40db58
  4082f4:	mov    ebx,0x1
  4082f9:	call   0x4015f8
  4082fe:	jmp    0x407795
  408303:	lea    rcx,[rip+0x5826]        # 0x40db30
  40830a:	mov    ebx,0x1
  40830f:	call   0x4015f8
  408314:	jmp    0x407795
  408319:	mov    rcx,QWORD PTR [rsp+0x70]
  40831e:	call   0x401618
  408323:	jmp    0x4076a9
  408328:	mov    rcx,QWORD PTR [rsp+0x70]
  40832d:	call   0x401600
  408332:	jmp    0x4076a9
  408337:	mov    rcx,QWORD PTR [rsp+0x70]
  40833c:	call   0x401610
  408341:	jmp    0x4076a9
  408346:	mov    rcx,QWORD PTR [rsp+0x70]
  40834b:	call   0x401718
  408350:	test   eax,eax
  408352:	je     0x4082c6
  408358:	lea    rcx,[rip+0x5829]        # 0x40db88
  40835f:	mov    edx,eax
  408361:	xor    ebx,ebx
  408363:	call   0x4015f8
  408368:	jmp    0x407795
  40836d:	mov    rdx,QWORD PTR [rsp+0x50]
  408372:	mov    rcx,QWORD PTR [rsp+0x70]
  408377:	add    rdx,0x180
  40837e:	call   0x401720
  408383:	jmp    0x4080e8
  408388:	cmp    DWORD PTR [rsp+0x238],0x0
  408390:	je     0x407f3c
  408396:	cmp    DWORD PTR [rsp+0x238],0x0
  40839e:	jne    0x407df3
  4083a4:	jmp    0x407f72
  4083a9:	lea    rcx,[rip+0x5648]        # 0x40d9f8
  4083b0:	mov    ebx,0x1
  4083b5:	call   0x4015f8
  4083ba:	jmp    0x407795
  4083bf:	cmp    DWORD PTR [rsp+0x6cc],0x0
  4083c7:	jne    0x407f2e
  4083cd:	mov    eax,DWORD PTR [rsp+0x6bc]
  4083d4:	jmp    0x407f52
  4083d9:	mov    rcx,QWORD PTR [rsp+0x70]
  4083de:	call   0x4016d0
  4083e3:	cmp    eax,0x5
  4083e6:	je     0x4083fb
  4083e8:	mov    rcx,QWORD PTR [rsp+0x70]
  4083ed:	call   0x4016d0
  4083f2:	cmp    eax,0x2
  4083f5:	jne    0x407d85
  4083fb:	mov    rdx,QWORD PTR [rsp+0x70]
  408400:	mov    rcx,QWORD PTR [rsp+0x630]
  408408:	mov    r8d,0x1
  40840e:	call   0x401638
  408413:	jmp    0x4081db
  408418:	xor    eax,eax
  40841a:	jmp    0x407659
  40841f:	mov    rcx,QWORD PTR [rsp+0x70]
  408424:	call   0x4015e8
  408429:	jmp    0x407d97
  40842e:	mov    rdx,QWORD PTR [rsp+0x70]
  408433:	mov    rcx,QWORD PTR [rsp+0x630]
  40843b:	mov    r8d,0x3
  408441:	call   0x401638
  408446:	jmp    0x4081db
  40844b:	lea    rdx,[rip+0x2cd3]        # 0x40b125
  408452:	mov    rcx,rbp
  408455:	mov    QWORD PTR [rsp+0x58],r9
  40845a:	call   0x406cf0
  40845f:	test   eax,eax
  408461:	mov    r9,QWORD PTR [rsp+0x58]
  408466:	jne    0x408496
  408468:	mov    DWORD PTR [rsp+0x640],0x8
  408473:	jmp    0x4070fb
  408478:	mov    rax,rdx
  40847b:	pxor   xmm0,xmm0
  40847f:	shr    rax,1
  408482:	and    edx,0x1
  408485:	or     rax,rdx
  408488:	cvtsi2sd xmm0,rax
  40848d:	addsd  xmm0,xmm0
  408491:	jmp    0x407e82
  408496:	lea    rdx,[rip+0x2c8e]        # 0x40b12b
  40849d:	mov    rcx,rbp
  4084a0:	mov    QWORD PTR [rsp+0x58],r9
  4084a5:	call   0x406cf0
  4084aa:	test   eax,eax
  4084ac:	mov    r9,QWORD PTR [rsp+0x58]
  4084b1:	jne    0x408502
  4084b3:	mov    DWORD PTR [rsp+0x6bc],0x1
  4084be:	jmp    0x4070fb
  4084c3:	mov    rcx,QWORD PTR [rsp+0x70]
  4084c8:	call   0x4015b0
  4084cd:	jmp    0x407d97
  4084d2:	mov    rdx,QWORD PTR [rsp+0x730]
  4084da:	mov    rcx,QWORD PTR [rsp+0x70]
  4084df:	call   0x4015b0
  4084e4:	test   eax,eax
  4084e6:	je     0x407df3
  4084ec:	lea    rcx,[rip+0x552a]        # 0x40da1d
  4084f3:	mov    ebx,0x1
  4084f8:	call   0x4015f8
  4084fd:	jmp    0x407795
  408502:	lea    rdx,[rip+0x2c2c]        # 0x40b135
  408509:	mov    rcx,rbp
  40850c:	mov    QWORD PTR [rsp+0x58],r9
  408511:	call   0x406cf0
  408516:	test   eax,eax
  408518:	mov    r9,QWORD PTR [rsp+0x58]
  40851d:	jne    0x40855e
  40851f:	mov    DWORD PTR [rsp+0x6bc],0x2
  40852a:	jmp    0x4070fb
  40852f:	mov    rcx,QWORD PTR [rsp+0x70]
  408534:	call   0x401758
  408539:	jmp    0x407df3
  40853e:	mov    rcx,QWORD PTR [rsp+0x70]
  408543:	call   0x401578
  408548:	jmp    0x407df3
  40854d:	mov    rcx,QWORD PTR [rsp+0x70]
  408552:	xor    edx,edx
  408554:	call   0x401780
  408559:	jmp    0x407df3
  40855e:	lea    rdx,[rip+0x2bdb]        # 0x40b140
  408565:	mov    rcx,rbp
  408568:	mov    QWORD PTR [rsp+0x58],r9
  40856d:	call   0x406cf0
  408572:	test   eax,eax
  408574:	mov    r9,QWORD PTR [rsp+0x58]
  408579:	jne    0x40858b
  40857b:	mov    DWORD PTR [rsp+0x570],0x1
  408586:	jmp    0x4070fb
  40858b:	lea    rdx,[rip+0x2bb6]        # 0x40b148
  408592:	mov    rcx,rbp
  408595:	mov    QWORD PTR [rsp+0x58],r9
  40859a:	call   0x406cf0
  40859f:	test   eax,eax
  4085a1:	mov    r9,QWORD PTR [rsp+0x58]
  4085a6:	je     0x4085c0
  4085a8:	lea    rdx,[rip+0x2b9c]        # 0x40b14b
  4085af:	mov    rcx,rbp
  4085b2:	call   0x406cf0
  4085b7:	test   eax,eax
  4085b9:	mov    r9,QWORD PTR [rsp+0x58]
  4085be:	jne    0x4085f1
  4085c0:	add    ebx,0x1
  4085c3:	cmp    r15d,ebx
  4085c6:	je     0x40862f
  4085c8:	mov    rax,QWORD PTR [r14+r9*1+0x8]
  4085cd:	movzx  edx,BYTE PTR [rax]
  4085d0:	test   dl,dl
  4085d2:	je     0x40862f
  4085d4:	cmp    dl,0x2d
  4085d7:	je     0x40862f
  4085d9:	cmp    QWORD PTR [rsp+0x6c0],0x0
  4085e2:	jne    0x40861e
  4085e4:	mov    QWORD PTR [rsp+0x6c0],rax
  4085ec:	jmp    0x4070fb
  4085f1:	lea    rdx,[rip+0x2bae]        # 0x40b1a6
  4085f8:	mov    rcx,rbp
  4085fb:	mov    QWORD PTR [rsp+0x58],r9
  408600:	call   0x406cf0
  408605:	test   eax,eax
  408607:	mov    r9,QWORD PTR [rsp+0x58]
  40860c:	jne    0x408640
  40860e:	mov    DWORD PTR [rsp+0x6c8],0x1
  408619:	jmp    0x4070fb
  40861e:	lea    rcx,[rip+0x2b5b]        # 0x40b180
  408625:	call   0x4015f8
  40862a:	jmp    0x407c6f
  40862f:	lea    rcx,[rip+0x2b22]        # 0x40b158
  408636:	call   0x4015f8
  40863b:	jmp    0x407c6f
  408640:	lea    rdx,[rip+0x2b65]        # 0x40b1ac
  408647:	mov    rcx,rbp
  40864a:	mov    QWORD PTR [rsp+0x58],r9
  40864f:	call   0x406cf0
  408654:	test   eax,eax
  408656:	mov    r9,QWORD PTR [rsp+0x58]
  40865b:	jne    0x40866d
  40865d:	mov    DWORD PTR [rsp+0x6c8],0x2
  408668:	jmp    0x4070fb
  40866d:	lea    rdx,[rip+0x2b3e]        # 0x40b1b2
  408674:	mov    rcx,rbp
  408677:	mov    QWORD PTR [rsp+0x58],r9
  40867c:	call   0x406cf0
  408681:	test   eax,eax
  408683:	mov    r9,QWORD PTR [rsp+0x58]
  408688:	jne    0x40869a
  40868a:	mov    DWORD PTR [rsp+0x6cc],0x1
  408695:	jmp    0x4070fb
  40869a:	lea    rdx,[rip+0x2b19]        # 0x40b1ba
  4086a1:	mov    rcx,rbp
  4086a4:	mov    QWORD PTR [rsp+0x58],r9
  4086a9:	call   0x406cf0
  4086ae:	test   eax,eax
  4086b0:	mov    r9,QWORD PTR [rsp+0x58]
  4086b5:	jne    0x4086c7
  4086b7:	mov    DWORD PTR [rsp+0x6cc],0x0
  4086c2:	jmp    0x4070fb
  4086c7:	lea    rdx,[rip+0x2af6]        # 0x40b1c4
  4086ce:	mov    rcx,rbp
  4086d1:	mov    QWORD PTR [rsp+0x58],r9
  4086d6:	call   0x406cf0
  4086db:	test   eax,eax
  4086dd:	mov    r9,QWORD PTR [rsp+0x58]
  4086e2:	je     0x4086fc
  4086e4:	lea    rdx,[rip+0x2adc]        # 0x40b1c7
  4086eb:	mov    rcx,rbp
  4086ee:	call   0x406cf0
  4086f3:	test   eax,eax
  4086f5:	mov    r9,QWORD PTR [rsp+0x58]
  4086fa:	jne    0x40873d
  4086fc:	add    ebx,0x1
  4086ff:	cmp    r15d,ebx
  408702:	je     0x4088de
  408708:	mov    rax,QWORD PTR [r14+r9*1+0x8]
  40870d:	movzx  edx,BYTE PTR [rax]
  408710:	test   dl,dl
  408712:	je     0x4088de
  408718:	cmp    dl,0x2d
  40871b:	je     0x4088de
  408721:	cmp    QWORD PTR [rsp+0x6d0],0x0
  40872a:	jne    0x4088cd
  408730:	mov    QWORD PTR [rsp+0x6d0],rax
  408738:	jmp    0x4070fb
  40873d:	lea    rdx,[rip+0x2adb]        # 0x40b21f
  408744:	mov    rcx,rbp
  408747:	mov    QWORD PTR [rsp+0x58],r9
  40874c:	call   0x406cf0
  408751:	test   eax,eax
  408753:	mov    r9,QWORD PTR [rsp+0x58]
  408758:	je     0x408772
  40875a:	lea    rdx,[rip+0x2ac1]        # 0x40b222
  408761:	mov    rcx,rbp
  408764:	call   0x406cf0
  408769:	test   eax,eax
  40876b:	mov    r9,QWORD PTR [rsp+0x58]
  408770:	jne    0x4087b3
  408772:	add    ebx,0x1
  408775:	cmp    r15d,ebx
  408778:	je     0x4088de
  40877e:	mov    rax,QWORD PTR [r14+r9*1+0x8]
  408783:	movzx  edx,BYTE PTR [rax]
  408786:	test   dl,dl
  408788:	je     0x4088de
  40878e:	cmp    dl,0x2d
  408791:	je     0x4088de
  408797:	cmp    QWORD PTR [rsp+0x6d8],0x0
  4087a0:	jne    0x4088cd
  4087a6:	mov    QWORD PTR [rsp+0x6d8],rax
  4087ae:	jmp    0x4070fb
  4087b3:	lea    rdx,[rip+0x2a70]        # 0x40b22a
  4087ba:	mov    rcx,rbp
  4087bd:	mov    QWORD PTR [rsp+0x58],r9
  4087c2:	call   0x406cf0
  4087c7:	test   eax,eax
  4087c9:	mov    r9,QWORD PTR [rsp+0x58]
  4087ce:	je     0x4087e8
  4087d0:	lea    rdx,[rip+0x2a5c]        # 0x40b233
  4087d7:	mov    rcx,rbp
  4087da:	call   0x406cf0
  4087df:	test   eax,eax
  4087e1:	mov    r9,QWORD PTR [rsp+0x58]
  4087e6:	jne    0x408829
  4087e8:	add    ebx,0x1
  4087eb:	cmp    r15d,ebx
  4087ee:	je     0x4088bc
  4087f4:	mov    rax,QWORD PTR [r14+r9*1+0x8]
  4087f9:	movzx  edx,BYTE PTR [rax]
  4087fc:	test   dl,dl
  4087fe:	je     0x4088bc
  408804:	cmp    dl,0x2d
  408807:	je     0x4088bc
  40880d:	cmp    QWORD PTR [rsp+0x6e0],0x0
  408816:	jne    0x4088ab
  40881c:	mov    QWORD PTR [rsp+0x6e0],rax
  408824:	jmp    0x4070fb
  408829:	lea    rdx,[rip+0x2a93]        # 0x40b2c3
  408830:	mov    rcx,rbp
  408833:	mov    QWORD PTR [rsp+0x58],r9
  408838:	call   0x406cf0
  40883d:	test   eax,eax
  40883f:	mov    r9,QWORD PTR [rsp+0x58]
  408844:	jne    0x40892f
  40884a:	add    ebx,0x1
  40884d:	cmp    r15d,ebx
  408850:	je     0x40891e
  408856:	lea    rsi,[r14+r9*1+0x8]
  40885b:	mov    rcx,QWORD PTR [rsi]
  40885e:	movzx  eax,BYTE PTR [rcx]
  408861:	test   al,al
  408863:	je     0x40891e
  408869:	cmp    al,0x2d
  40886b:	je     0x40891e
  408871:	mov    rdx,QWORD PTR [rsp+0x48]
  408876:	call   0x406ea0
  40887b:	test   eax,eax
  40887d:	jne    0x40890a
  408883:	mov    eax,DWORD PTR [rsp+0x68]
  408887:	test   eax,eax
  408889:	js     0x40890a
  40888b:	cmp    eax,0x20c49b
  408890:	jg     0x4088ef
  408892:	imul   eax,eax,0x3e8
  408898:	mov    DWORD PTR [rsp+0x508],eax
  40889f:	mov    DWORD PTR [rsp+0x22c],eax
  4088a6:	jmp    0x4070fb
  4088ab:	lea    rcx,[rip+0x29ce]        # 0x40b280
  4088b2:	call   0x4015f8
  4088b7:	jmp    0x407c6f
  4088bc:	lea    rcx,[rip+0x297d]        # 0x40b240
  4088c3:	call   0x4015f8
  4088c8:	jmp    0x407c6f
  4088cd:	lea    rcx,[rip+0x2924]        # 0x40b1f8
  4088d4:	call   0x4015f8
  4088d9:	jmp    0x407c6f
  4088de:	lea    rcx,[rip+0x28eb]        # 0x40b1d0
  4088e5:	call   0x4015f8
  4088ea:	jmp    0x407c6f
  4088ef:	mov    DWORD PTR [rsp+0x508],0x7fffffff
  4088fa:	mov    DWORD PTR [rsp+0x22c],0x7fffffff
  408905:	jmp    0x4070fb
  40890a:	mov    rdx,QWORD PTR [rsi]
  40890d:	lea    rcx,[rip+0x29d0]        # 0x40b2e4
  408914:	call   0x4015f8
  408919:	jmp    0x407c6f
  40891e:	lea    rcx,[rip+0x29a6]        # 0x40b2cb
  408925:	call   0x4015f8
  40892a:	jmp    0x407c6f
  40892f:	lea    rdx,[rip+0x29c7]        # 0x40b2fd
  408936:	mov    rcx,rbp
  408939:	mov    QWORD PTR [rsp+0x58],r9
  40893e:	call   0x406cf0
  408943:	test   eax,eax
  408945:	mov    r9,QWORD PTR [rsp+0x58]
  40894a:	jne    0x408987
  40894c:	add    ebx,0x1
  40894f:	cmp    r15d,ebx
  408952:	je     0x4089c8
  408954:	lea    rsi,[r14+r9*1+0x8]
  408959:	mov    rcx,QWORD PTR [rsi]
  40895c:	movzx  eax,BYTE PTR [rcx]
  40895f:	test   al,al
  408961:	je     0x4089c8
  408963:	cmp    al,0x2d
  408965:	je     0x4089c8
  408967:	mov    rdx,QWORD PTR [rsp+0x48]
  40896c:	call   0x406ea0
  408971:	test   eax,eax
  408973:	jne    0x4089b4
  408975:	mov    ecx,DWORD PTR [rsp+0x68]
  408979:	test   ecx,ecx
  40897b:	jle    0x4089b4
  40897d:	call   0x401688
  408982:	jmp    0x4070fb
  408987:	lea    rdx,[rip+0x29ae]        # 0x40b33c
  40898e:	mov    rcx,rbp
  408991:	mov    QWORD PTR [rsp+0x58],r9
  408996:	call   0x406cf0
  40899b:	test   eax,eax
  40899d:	mov    r9,QWORD PTR [rsp+0x58]
  4089a2:	jne    0x4089d9
  4089a4:	mov    DWORD PTR [rsp+0x6e8],0x1
  4089af:	jmp    0x4070fb
  4089b4:	mov    rdx,QWORD PTR [rsi]
  4089b7:	lea    rcx,[rip+0x2963]        # 0x40b321
  4089be:	call   0x4015f8
  4089c3:	jmp    0x407c6f
  4089c8:	lea    rcx,[rip+0x2937]        # 0x40b306
  4089cf:	call   0x4015f8
  4089d4:	jmp    0x407c6f
  4089d9:	lea    rdx,[rip+0x2964]        # 0x40b344
  4089e0:	mov    rcx,rbp
  4089e3:	mov    QWORD PTR [rsp+0x58],r9
  4089e8:	call   0x406cf0
  4089ed:	test   eax,eax
  4089ef:	mov    r9,QWORD PTR [rsp+0x58]
  4089f4:	jne    0x408a2b
  4089f6:	add    ebx,0x1
  4089f9:	cmp    r15d,ebx
  4089fc:	je     0x408a8a
  408a02:	mov    rax,QWORD PTR [r14+r9*1+0x8]
  408a07:	movzx  edx,BYTE PTR [rax]
  408a0a:	test   dl,dl
  408a0c:	je     0x408a8a
  408a0e:	cmp    dl,0x2d
  408a11:	je     0x408a8a
  408a13:	cmp    QWORD PTR [rsp+0x6f0],0x0
  408a1c:	jne    0x408a79
  408a1e:	mov    QWORD PTR [rsp+0x6f0],rax
  408a26:	jmp    0x4070fb
  408a2b:	lea    rdx,[rip+0x2955]        # 0x40b387
  408a32:	mov    rcx,rbp
  408a35:	mov    QWORD PTR [rsp+0x58],r9
  408a3a:	call   0x406cf0
  408a3f:	test   eax,eax
  408a41:	mov    r9,QWORD PTR [rsp+0x58]
  408a46:	jne    0x408abd
  408a48:	add    ebx,0x1
  408a4b:	cmp    r15d,ebx
  408a4e:	je     0x408aac
  408a50:	mov    rax,QWORD PTR [r14+r9*1+0x8]
  408a55:	movzx  edx,BYTE PTR [rax]
  408a58:	test   dl,dl
  408a5a:	je     0x408aac
  408a5c:	cmp    dl,0x2d
  408a5f:	je     0x408aac
  408a61:	cmp    QWORD PTR [rsp+0x6f8],0x0
  408a6a:	jne    0x408a9b
  408a6c:	mov    QWORD PTR [rsp+0x6f8],rax
  408a74:	jmp    0x4070fb
  408a79:	lea    rcx,[rip+0x28e8]        # 0x40b368
  408a80:	call   0x4015f8
  408a85:	jmp    0x407c6f
  408a8a:	lea    rcx,[rip+0x28ba]        # 0x40b34b
  408a91:	call   0x4015f8
  408a96:	jmp    0x407c6f
  408a9b:	lea    rcx,[rip+0x2916]        # 0x40b3b8
  408aa2:	call   0x4015f8
  408aa7:	jmp    0x407c6f
  408aac:	lea    rcx,[rip+0x28dd]        # 0x40b390
  408ab3:	call   0x4015f8
  408ab8:	jmp    0x407c6f
  408abd:	lea    rdx,[rip+0x291c]        # 0x40b3e0
  408ac4:	mov    rcx,rbp
  408ac7:	mov    QWORD PTR [rsp+0x58],r9
  408acc:	call   0x406cf0
  408ad1:	test   eax,eax
  408ad3:	mov    r9,QWORD PTR [rsp+0x58]
  408ad8:	jne    0x408b1b
  408ada:	add    ebx,0x1
  408add:	cmp    r15d,ebx
  408ae0:	je     0x408c19
  408ae6:	mov    rax,QWORD PTR [r14+r9*1+0x8]
  408aeb:	movzx  edx,BYTE PTR [rax]
  408aee:	test   dl,dl
  408af0:	je     0x408c19
  408af6:	cmp    dl,0x2d
  408af9:	je     0x408c19
  408aff:	cmp    QWORD PTR [rsp+0x700],0x0
  408b08:	jne    0x408c08
  408b0e:	mov    QWORD PTR [rsp+0x700],rax
  408b16:	jmp    0x4070fb
  408b1b:	lea    rdx,[rip+0x291d]        # 0x40b43f
  408b22:	mov    rcx,rbp
  408b25:	mov    QWORD PTR [rsp+0x58],r9
  408b2a:	call   0x406cf0
  408b2f:	test   eax,eax
  408b31:	mov    r9,QWORD PTR [rsp+0x58]
  408b36:	je     0x408b68
  408b38:	lea    rdx,[rip+0x2906]        # 0x40b445
  408b3f:	mov    rcx,rbp
  408b42:	call   0x406cf0
  408b47:	test   eax,eax
  408b49:	mov    r9,QWORD PTR [rsp+0x58]
  408b4e:	je     0x408b68
  408b50:	lea    rdx,[rip+0x28f7]        # 0x40b44e
  408b57:	mov    rcx,rbp
  408b5a:	call   0x406cf0
  408b5f:	test   eax,eax
  408b61:	mov    r9,QWORD PTR [rsp+0x58]
  408b66:	jne    0x408ba5
  408b68:	add    ebx,0x1
  408b6b:	cmp    r15d,ebx
  408b6e:	je     0x408c2a
  408b74:	mov    rax,QWORD PTR [r14+r9*1+0x8]
  408b79:	movzx  edx,BYTE PTR [rax]
  408b7c:	test   dl,dl
  408b7e:	je     0x408c2a
  408b84:	cmp    dl,0x2d
  408b87:	je     0x408c2a
  408b8d:	cmp    QWORD PTR [rsp+0x708],0x0
  408b96:	jne    0x408bf7
  408b98:	mov    QWORD PTR [rsp+0x708],rax
  408ba0:	jmp    0x4070fb
  408ba5:	lea    rdx,[rip+0x28fb]        # 0x40b4a7
  408bac:	mov    rcx,rbp
  408baf:	mov    QWORD PTR [rsp+0x58],r9
  408bb4:	call   0x406cf0
  408bb9:	test   eax,eax
  408bbb:	mov    r9,QWORD PTR [rsp+0x58]
  408bc0:	jne    0x408c5d
  408bc6:	add    ebx,0x1
  408bc9:	cmp    r15d,ebx
  408bcc:	je     0x408c4c
  408bce:	mov    rax,QWORD PTR [r14+r9*1+0x8]
  408bd3:	movzx  edx,BYTE PTR [rax]
  408bd6:	test   dl,dl
  408bd8:	je     0x408c4c
  408bda:	cmp    dl,0x2d
  408bdd:	je     0x408c4c
  408bdf:	cmp    QWORD PTR [rsp+0x710],0x0
  408be8:	jne    0x408c3b
  408bea:	mov    QWORD PTR [rsp+0x710],rax
  408bf2:	jmp    0x4070fb
  408bf7:	lea    rcx,[rip+0x2882]        # 0x40b480
  408bfe:	call   0x4015f8
  408c03:	jmp    0x407c6f
  408c08:	lea    rcx,[rip+0x2809]        # 0x40b418
  408c0f:	call   0x4015f8
  408c14:	jmp    0x407c6f
  408c19:	lea    rcx,[rip+0x27d0]        # 0x40b3f0
  408c20:	call   0x4015f8
  408c25:	jmp    0x407c6f
  408c2a:	lea    rcx,[rip+0x2827]        # 0x40b458
  408c31:	call   0x4015f8
  408c36:	jmp    0x407c6f
  408c3b:	lea    rcx,[rip+0x2896]        # 0x40b4d8
  408c42:	call   0x4015f8
  408c47:	jmp    0x407c6f
  408c4c:	lea    rcx,[rip+0x285d]        # 0x40b4b0
  408c53:	call   0x4015f8
  408c58:	jmp    0x407c6f
  408c5d:	lea    rdx,[rip+0x289e]        # 0x40b502
  408c64:	mov    rcx,rbp
  408c67:	mov    QWORD PTR [rsp+0x58],r9
  408c6c:	call   0x406cf0
  408c71:	test   eax,eax
  408c73:	mov    r9,QWORD PTR [rsp+0x58]
  408c78:	jne    0x408caf
  408c7a:	add    ebx,0x1
  408c7d:	cmp    r15d,ebx
  408c80:	je     0x408d0e
  408c86:	mov    rax,QWORD PTR [r14+r9*1+0x8]
  408c8b:	movzx  edx,BYTE PTR [rax]
  408c8e:	test   dl,dl
  408c90:	je     0x408d0e
  408c92:	cmp    dl,0x2d
  408c95:	je     0x408d0e
  408c97:	cmp    QWORD PTR [rsp+0x718],0x0
  408ca0:	jne    0x408cfd
  408ca2:	mov    QWORD PTR [rsp+0x718],rax
  408caa:	jmp    0x4070fb
  408caf:	lea    rdx,[rip+0x28af]        # 0x40b565
  408cb6:	mov    rcx,rbp
  408cb9:	mov    QWORD PTR [rsp+0x58],r9
  408cbe:	call   0x406cf0
  408cc3:	test   eax,eax
  408cc5:	mov    r9,QWORD PTR [rsp+0x58]
  408cca:	jne    0x408d41
  408ccc:	add    ebx,0x1
  408ccf:	cmp    r15d,ebx
  408cd2:	je     0x408d30
  408cd4:	mov    rax,QWORD PTR [r14+r9*1+0x8]
  408cd9:	movzx  edx,BYTE PTR [rax]
  408cdc:	test   dl,dl
  408cde:	je     0x408d30
  408ce0:	cmp    dl,0x2d
  408ce3:	je     0x408d30
  408ce5:	cmp    QWORD PTR [rsp+0x720],0x0
  408cee:	jne    0x408d1f
  408cf0:	mov    QWORD PTR [rsp+0x720],rax
  408cf8:	jmp    0x4070fb
  408cfd:	lea    rcx,[rip+0x2834]        # 0x40b538
  408d04:	call   0x4015f8
  408d09:	jmp    0x407c6f
  408d0e:	lea    rcx,[rip+0x27fb]        # 0x40b510
  408d15:	call   0x4015f8
  408d1a:	jmp    0x407c6f
  408d1f:	lea    rcx,[rip+0x285c]        # 0x40b582
  408d26:	call   0x4015f8
  408d2b:	jmp    0x407c6f
  408d30:	lea    rcx,[rip+0x2834]        # 0x40b56b
  408d37:	call   0x4015f8
  408d3c:	jmp    0x407c6f
  408d41:	lea    rdx,[rip+0x2855]        # 0x40b59d
  408d48:	mov    rcx,rbp
  408d4b:	call   0x406cf0
  408d50:	test   eax,eax
  408d52:	je     0x408db6
  408d54:	lea    rdx,[rip+0x2845]        # 0x40b5a0
  408d5b:	mov    rcx,rbp
  408d5e:	call   0x406cf0
  408d63:	test   eax,eax
  408d65:	je     0x408db6
  408d67:	lea    rdx,[rip+0x438d]        # 0x40d0fb
  408d6e:	mov    rcx,rbp
  408d71:	call   0x406cf0
  408d76:	test   eax,eax
  408d78:	je     0x4093d7
  408d7e:	lea    rdx,[rip+0x4379]        # 0x40d0fe
  408d85:	mov    rcx,rbp
  408d88:	call   0x406cf0
  408d8d:	test   eax,eax
  408d8f:	je     0x4093d7
  408d95:	lea    rdx,[rip+0x4503]        # 0x40d29f
  408d9c:	mov    rcx,rbp
  408d9f:	call   0x406cf0
  408da4:	test   eax,eax
  408da6:	jne    0x4093ad
  408dac:	and    DWORD PTR [rsp+0x7c],0xf
  408db1:	jmp    0x4070fb
  408db6:	mov    rdx,QWORD PTR [r14]
  408db9:	lea    rcx,[rip+0x27e8]        # 0x40b5a8
  408dc0:	call   0x4015f8
  408dc5:	lea    rcx,[rip+0x27fd]        # 0x40b5c9
  408dcc:	call   0x4015f8
  408dd1:	lea    rcx,[rip+0x27f3]        # 0x40b5cb
  408dd8:	call   0x4015f8
  408ddd:	lea    rcx,[rip+0x27fc]        # 0x40b5e0
  408de4:	call   0x4015f8
  408de9:	lea    rcx,[rip+0x2830]        # 0x40b620
  408df0:	call   0x4015f8
  408df5:	lea    rcx,[rip+0x286c]        # 0x40b668
  408dfc:	call   0x4015f8
  408e01:	lea    rcx,[rip+0x28a0]        # 0x40b6a8
  408e08:	call   0x4015f8
  408e0d:	lea    rcx,[rip+0x28d4]        # 0x40b6e8
  408e14:	call   0x4015f8
  408e19:	lea    rcx,[rip+0x2918]        # 0x40b738
  408e20:	call   0x4015f8
  408e25:	lea    rcx,[rip+0x292c]        # 0x40b758
  408e2c:	call   0x4015f8
  408e31:	lea    rcx,[rip+0x2948]        # 0x40b780
  408e38:	call   0x4015f8
  408e3d:	lea    rcx,[rip+0x2984]        # 0x40b7c8
  408e44:	call   0x4015f8
  408e49:	lea    rcx,[rip+0x29a8]        # 0x40b7f8
  408e50:	call   0x4015f8
  408e55:	lea    rcx,[rip+0x29c4]        # 0x40b820
  408e5c:	call   0x4015f8
  408e61:	lea    rcx,[rip+0x2a08]        # 0x40b870
  408e68:	call   0x4015f8
  408e6d:	lea    rcx,[rip+0x2a4c]        # 0x40b8c0
  408e74:	call   0x4015f8
  408e79:	lea    rcx,[rip+0x2a68]        # 0x40b8e8
  408e80:	call   0x4015f8
  408e85:	lea    rcx,[rip+0x2aac]        # 0x40b938
  408e8c:	call   0x4015f8
  408e91:	lea    rcx,[rip+0x2ae0]        # 0x40b978
  408e98:	call   0x4015f8
  408e9d:	lea    rcx,[rip+0x2b1c]        # 0x40b9c0
  408ea4:	call   0x4015f8
  408ea9:	lea    rcx,[rip+0x2b58]        # 0x40ba08
  408eb0:	call   0x4015f8
  408eb5:	lea    rcx,[rip+0x2b94]        # 0x40ba50
  408ebc:	call   0x4015f8
  408ec1:	lea    rcx,[rip+0x2bd0]        # 0x40ba98
  408ec8:	call   0x4015f8
  408ecd:	lea    rcx,[rip+0x2c0c]        # 0x40bae0
  408ed4:	call   0x4015f8
  408ed9:	lea    rcx,[rip+0x2c40]        # 0x40bb20
  408ee0:	call   0x4015f8
  408ee5:	lea    rcx,[rip+0x2c6c]        # 0x40bb58
  408eec:	call   0x4015f8
  408ef1:	lea    rcx,[rip+0x2ca0]        # 0x40bb98
  408ef8:	call   0x4015f8
  408efd:	lea    rcx,[rip+0x2cbc]        # 0x40bbc0
  408f04:	call   0x4015f8
  408f09:	lea    rcx,[rip+0x2d00]        # 0x40bc10
  408f10:	call   0x4015f8
  408f15:	lea    rcx,[rip+0x2d1c]        # 0x40bc38
  408f1c:	call   0x4015f8
  408f21:	lea    rcx,[rip+0x2d38]        # 0x40bc60
  408f28:	call   0x4015f8
  408f2d:	lea    rcx,[rip+0x2d54]        # 0x40bc88
  408f34:	call   0x4015f8
  408f39:	lea    rcx,[rip+0x2d78]        # 0x40bcb8
  408f40:	call   0x4015f8
  408f45:	lea    rcx,[rip+0x2d9c]        # 0x40bce8
  408f4c:	call   0x4015f8
  408f51:	lea    rcx,[rip+0x2db8]        # 0x40bd10
  408f58:	call   0x4015f8
  408f5d:	lea    rcx,[rip+0x2df4]        # 0x40bd58
  408f64:	call   0x4015f8
  408f69:	lea    rcx,[rip+0x2e10]        # 0x40bd80
  408f70:	call   0x4015f8
  408f75:	lea    rcx,[rip+0x2e4a]        # 0x40bdc6
  408f7c:	call   0x4015f8
  408f81:	lea    rcx,[rip+0x2e58]        # 0x40bde0
  408f88:	call   0x4015f8
  408f8d:	lea    rcx,[rip+0x2e94]        # 0x40be28
  408f94:	call   0x4015f8
  408f99:	lea    rcx,[rip+0x2ec0]        # 0x40be60
  408fa0:	call   0x4015f8
  408fa5:	lea    rcx,[rip+0x2ef4]        # 0x40bea0
  408fac:	call   0x4015f8
  408fb1:	lea    rcx,[rip+0x2f28]        # 0x40bee0
  408fb8:	call   0x4015f8
  408fbd:	lea    rcx,[rip+0x2f64]        # 0x40bf28
  408fc4:	call   0x4015f8
  408fc9:	lea    rcx,[rip+0x2f90]        # 0x40bf60
  408fd0:	call   0x4015f8
  408fd5:	lea    rcx,[rip+0x2fc8]        # 0x40bfa4
  408fdc:	call   0x4015f8
  408fe1:	lea    rcx,[rip+0x2fd8]        # 0x40bfc0
  408fe8:	call   0x4015f8
  408fed:	lea    rcx,[rip+0x3014]        # 0x40c008
  408ff4:	call   0x4015f8
  408ff9:	lea    rcx,[rip+0x3050]        # 0x40c050
  409000:	call   0x4015f8
  409005:	lea    rcx,[rip+0x3084]        # 0x40c090
  40900c:	call   0x4015f8
  409011:	lea    rcx,[rip+0x30c8]        # 0x40c0e0
  409018:	call   0x4015f8
  40901d:	lea    rcx,[rip+0x30fc]        # 0x40c120
  409024:	call   0x4015f8
  409029:	lea    rcx,[rip+0x3130]        # 0x40c160
  409030:	call   0x4015f8
  409035:	lea    rcx,[rip+0x258d]        # 0x40b5c9
  40903c:	call   0x4015f8
  409041:	lea    rcx,[rip+0x3150]        # 0x40c198
  409048:	call   0x4015f8
  40904d:	lea    rcx,[rip+0x316c]        # 0x40c1c0
  409054:	call   0x4015f8
  409059:	lea    rcx,[rip+0x3198]        # 0x40c1f8
  409060:	call   0x4015f8
  409065:	lea    rcx,[rip+0x31c4]        # 0x40c230
  40906c:	call   0x4015f8
  409071:	lea    rcx,[rip+0x3200]        # 0x40c278
  409078:	call   0x4015f8
  40907d:	lea    rcx,[rip+0x3234]        # 0x40c2b8
  409084:	call   0x4015f8
  409089:	lea    rcx,[rip+0x2539]        # 0x40b5c9
  409090:	call   0x4015f8
  409095:	lea    rcx,[rip+0x325c]        # 0x40c2f8
  40909c:	call   0x4015f8
  4090a1:	lea    rcx,[rip+0x3278]        # 0x40c320
  4090a8:	call   0x4015f8
  4090ad:	lea    rcx,[rip+0x32a4]        # 0x40c358
  4090b4:	call   0x4015f8
  4090b9:	lea    rcx,[rip+0x32c0]        # 0x40c380
  4090c0:	call   0x4015f8
  4090c5:	lea    rcx,[rip+0x32f4]        # 0x40c3c0
  4090cc:	call   0x4015f8
  4090d1:	lea    rcx,[rip+0x3328]        # 0x40c400
  4090d8:	call   0x4015f8
  4090dd:	lea    rcx,[rip+0x334c]        # 0x40c430
  4090e4:	call   0x4015f8
  4090e9:	lea    rcx,[rip+0x3388]        # 0x40c478
  4090f0:	call   0x4015f8
  4090f5:	lea    rcx,[rip+0x33ac]        # 0x40c4a8
  4090fc:	call   0x4015f8
  409101:	lea    rcx,[rip+0x33e0]        # 0x40c4e8
  409108:	call   0x4015f8
  40910d:	lea    rcx,[rip+0x340c]        # 0x40c520
  409114:	call   0x4015f8
  409119:	lea    rcx,[rip+0x3440]        # 0x40c560
  409120:	call   0x4015f8
  409125:	lea    rcx,[rip+0x3474]        # 0x40c5a0
  40912c:	call   0x4015f8
  409131:	lea    rcx,[rip+0x34a8]        # 0x40c5e0
  409138:	call   0x4015f8
  40913d:	lea    rcx,[rip+0x34ec]        # 0x40c630
  409144:	call   0x4015f8
  409149:	lea    rcx,[rip+0x3510]        # 0x40c660
  409150:	call   0x4015f8
  409155:	lea    rcx,[rip+0x354c]        # 0x40c6a8
  40915c:	call   0x4015f8
  409161:	lea    rcx,[rip+0x2461]        # 0x40b5c9
  409168:	call   0x4015f8
  40916d:	lea    rcx,[rip+0x3574]        # 0x40c6e8
  409174:	call   0x4015f8
  409179:	lea    rcx,[rip+0x3598]        # 0x40c718
  409180:	call   0x4015f8
  409185:	lea    rcx,[rip+0x35c4]        # 0x40c750
  40918c:	call   0x4015f8
  409191:	lea    rcx,[rip+0x35f8]        # 0x40c790
  409198:	call   0x4015f8
  40919d:	lea    rcx,[rip+0x3634]        # 0x40c7d8
  4091a4:	call   0x4015f8
  4091a9:	lea    rcx,[rip+0x2419]        # 0x40b5c9
  4091b0:	call   0x4015f8
  4091b5:	lea    rcx,[rip+0x365c]        # 0x40c818
  4091bc:	call   0x4015f8
  4091c1:	lea    rcx,[rip+0x3678]        # 0x40c840
  4091c8:	call   0x4015f8
  4091cd:	lea    rcx,[rip+0x36b4]        # 0x40c888
  4091d4:	call   0x4015f8
  4091d9:	lea    rcx,[rip+0x36e0]        # 0x40c8c0
  4091e0:	call   0x4015f8
  4091e5:	lea    rcx,[rip+0x370c]        # 0x40c8f8
  4091ec:	call   0x4015f8
  4091f1:	lea    rcx,[rip+0x3738]        # 0x40c930
  4091f8:	call   0x4015f8
  4091fd:	lea    rcx,[rip+0x376c]        # 0x40c970
  409204:	call   0x4015f8
  409209:	lea    rcx,[rip+0x37a8]        # 0x40c9b8
  409210:	call   0x4015f8
  409215:	lea    rcx,[rip+0x37bc]        # 0x40c9d8
  40921c:	call   0x4015f8
  409221:	lea    rcx,[rip+0x37f8]        # 0x40ca20
  409228:	call   0x4015f8
  40922d:	lea    rcx,[rip+0x3824]        # 0x40ca58
  409234:	call   0x4015f8
  409239:	lea    rcx,[rip+0x3858]        # 0x40ca98
  409240:	call   0x4015f8
  409245:	lea    rcx,[rip+0x388c]        # 0x40cad8
  40924c:	call   0x4015f8
  409251:	lea    rcx,[rip+0x38c8]        # 0x40cb20
  409258:	call   0x4015f8
  40925d:	lea    rcx,[rip+0x3754]        # 0x40c9b8
  409264:	call   0x4015f8
  409269:	lea    rcx,[rip+0x38f8]        # 0x40cb68
  409270:	call   0x4015f8
  409275:	lea    rcx,[rip+0x3924]        # 0x40cba0
  40927c:	call   0x4015f8
  409281:	lea    rcx,[rip+0x3948]        # 0x40cbd0
  409288:	call   0x4015f8
  40928d:	lea    rcx,[rip+0x3984]        # 0x40cc18
  409294:	call   0x4015f8
  409299:	lea    rcx,[rip+0x39a8]        # 0x40cc48
  4092a0:	call   0x4015f8
  4092a5:	lea    rcx,[rip+0x39d4]        # 0x40cc80
  4092ac:	call   0x4015f8
  4092b1:	lea    rcx,[rip+0x3a18]        # 0x40ccd0
  4092b8:	call   0x4015f8
  4092bd:	lea    rcx,[rip+0x3a44]        # 0x40cd08
  4092c4:	call   0x4015f8
  4092c9:	lea    rcx,[rip+0x3a78]        # 0x40cd48
  4092d0:	call   0x4015f8
  4092d5:	lea    rcx,[rip+0x3ab4]        # 0x40cd90
  4092dc:	call   0x4015f8
  4092e1:	lea    rcx,[rip+0x3ad8]        # 0x40cdc0
  4092e8:	call   0x4015f8
  4092ed:	lea    rcx,[rip+0x3afc]        # 0x40cdf0
  4092f4:	call   0x4015f8
  4092f9:	lea    rcx,[rip+0x3b20]        # 0x40ce20
  409300:	call   0x4015f8
  409305:	lea    rcx,[rip+0x3b54]        # 0x40ce60
  40930c:	call   0x4015f8
  409311:	lea    rcx,[rip+0x3b90]        # 0x40cea8
  409318:	call   0x4015f8
  40931d:	lea    rcx,[rip+0x3bbc]        # 0x40cee0
  409324:	call   0x4015f8
  409329:	lea    rcx,[rip+0x3bf8]        # 0x40cf28
  409330:	call   0x4015f8
  409335:	lea    rcx,[rip+0x3c3c]        # 0x40cf78
  40933c:	call   0x4015f8
  409341:	lea    rcx,[rip+0x2281]        # 0x40b5c9
  409348:	call   0x4015f8
  40934d:	lea    rcx,[rip+0x3c5c]        # 0x40cfb0
  409354:	call   0x4015f8
  409359:	lea    rcx,[rip+0x3c98]        # 0x40cff8
  409360:	call   0x4015f8
  409365:	lea    rcx,[rip+0x3cd4]        # 0x40d040
  40936c:	call   0x4015f8
  409371:	lea    rcx,[rip+0x2251]        # 0x40b5c9
  409378:	call   0x4015f8
  40937d:	lea    rcx,[rip+0x3d04]        # 0x40d088
  409384:	call   0x4015f8
  409389:	lea    rcx,[rip+0x2239]        # 0x40b5c9
  409390:	call   0x4015f8
  409395:	lea    rcx,[rip+0x3d34]        # 0x40d0d0
  40939c:	call   0x4015f8
  4093a1:	xor    ebx,ebx
  4093a3:	lea    rsi,[rsp+0x64]
  4093a8:	jmp    0x407795
  4093ad:	lea    rdx,[rip+0x3ef1]        # 0x40d2a5
  4093b4:	mov    rcx,rbp
  4093b7:	call   0x406cf0
  4093bc:	test   eax,eax
  4093be:	jne    0x40945c
  4093c4:	mov    eax,DWORD PTR [rsp+0x7c]
  4093c8:	and    eax,0xf
  4093cb:	or     eax,0x10
  4093ce:	mov    DWORD PTR [rsp+0x7c],eax
  4093d2:	jmp    0x4070fb
  4093d7:	call   0x401568
  4093dc:	lea    rcx,[rip+0x3d25]        # 0x40d108
  4093e3:	mov    rdx,rax
  4093e6:	call   0x4015f8
  4093eb:	lea    rcx,[rip+0x21d7]        # 0x40b5c9
  4093f2:	call   0x4015f8
  4093f7:	lea    rcx,[rip+0x3d32]        # 0x40d130
  4093fe:	call   0x4015f8
  409403:	lea    rcx,[rip+0x3d6e]        # 0x40d178
  40940a:	call   0x4015f8
  40940f:	lea    rcx,[rip+0x3daa]        # 0x40d1c0
  409416:	call   0x4015f8
  40941b:	lea    rcx,[rip+0x21a7]        # 0x40b5c9
  409422:	call   0x4015f8
  409427:	lea    rcx,[rip+0x3dba]        # 0x40d1e8
  40942e:	call   0x4015f8
  409433:	lea    rcx,[rip+0x218f]        # 0x40b5c9
  40943a:	call   0x4015f8
  40943f:	lea    rcx,[rip+0x3dd2]        # 0x40d218
  409446:	call   0x4015f8
  40944b:	lea    rcx,[rip+0x3e16]        # 0x40d268
  409452:	call   0x4015f8
  409457:	jmp    0x4093a1
  40945c:	lea    rdx,[rip+0x3e48]        # 0x40d2ab
  409463:	mov    rcx,rbp
  409466:	call   0x406cf0
  40946b:	test   eax,eax
  40946d:	jne    0x409484
  40946f:	mov    eax,DWORD PTR [rsp+0x7c]
  409473:	and    eax,0xf0
  409478:	or     eax,0x1
  40947b:	mov    DWORD PTR [rsp+0x7c],eax
  40947f:	jmp    0x4070fb
  409484:	lea    rdx,[rip+0x3e25]        # 0x40d2b0
  40948b:	mov    rcx,rbp
  40948e:	call   0x406cf0
  409493:	test   eax,eax
  409495:	jne    0x4094ac
  409497:	mov    eax,DWORD PTR [rsp+0x7c]
  40949b:	and    eax,0xf0
  4094a0:	or     eax,0x2
  4094a3:	mov    DWORD PTR [rsp+0x7c],eax
  4094a7:	jmp    0x4070fb
  4094ac:	lea    rdx,[rip+0x3e03]        # 0x40d2b6
  4094b3:	mov    rcx,rbp
  4094b6:	call   0x406cf0
  4094bb:	test   eax,eax
  4094bd:	jne    0x4094d4
  4094bf:	mov    eax,DWORD PTR [rsp+0x7c]
  4094c3:	and    eax,0xf0
  4094c8:	or     eax,0x3
  4094cb:	mov    DWORD PTR [rsp+0x7c],eax
  4094cf:	jmp    0x4070fb
  4094d4:	lea    rdx,[rip+0x3de1]        # 0x40d2bc
  4094db:	mov    rcx,rbp
  4094de:	call   0x406cf0
  4094e3:	test   eax,eax
  4094e5:	jne    0x4094f7
  4094e7:	mov    DWORD PTR [rsp+0x1f4],0x1
  4094f2:	jmp    0x4070fb
  4094f7:	lea    rdx,[rip+0x3dc7]        # 0x40d2c5
  4094fe:	mov    rcx,rbp
  409501:	call   0x406cf0
  409506:	test   eax,eax
  409508:	jne    0x40951a
  40950a:	mov    DWORD PTR [rsp+0x1f4],0x3
  409515:	jmp    0x4070fb
  40951a:	lea    rdx,[rip+0x3dab]        # 0x40d2cc
  409521:	mov    rcx,rbp
  409524:	call   0x406cf0
  409529:	test   eax,eax
  40952b:	jne    0x40953d
  40952d:	mov    DWORD PTR [rsp+0x728],0x1
  409538:	jmp    0x4070fb
  40953d:	lea    rdx,[rip+0x3d8e]        # 0x40d2d2
  409544:	mov    rcx,rbp
  409547:	call   0x406cf0
  40954c:	test   eax,eax
  40954e:	jne    0x409560
  409550:	mov    DWORD PTR [rsp+0x728],0x2
  40955b:	jmp    0x4070fb
  409560:	lea    rdx,[rip+0x3d71]        # 0x40d2d8
  409567:	mov    rcx,rbp
  40956a:	call   0x406cf0
  40956f:	test   eax,eax
  409571:	jne    0x409583
  409573:	mov    DWORD PTR [rsp+0x728],0x3
  40957e:	jmp    0x4070fb
  409583:	lea    rdx,[rip+0x3d54]        # 0x40d2de
  40958a:	mov    rcx,rbp
  40958d:	call   0x406cf0
  409592:	test   eax,eax
  409594:	jne    0x4095df
  409596:	add    ebx,0x1
  409599:	mov    DWORD PTR [rsp+0x728],0x4
  4095a4:	mov    DWORD PTR [rsp+0x238],0x0
  4095af:	cmp    r15d,ebx
  4095b2:	je     0x409613
  4095b4:	movsxd rax,ebx
  4095b7:	mov    rax,QWORD PTR [r14+rax*8]
  4095bb:	movzx  edx,BYTE PTR [rax]
  4095be:	test   dl,dl
  4095c0:	je     0x409613
  4095c2:	cmp    dl,0x2d
  4095c5:	je     0x409613
  4095c7:	cmp    QWORD PTR [rsp+0x730],0x0
  4095d0:	jne    0x409602
  4095d2:	mov    QWORD PTR [rsp+0x730],rax
  4095da:	jmp    0x4070fb
  4095df:	lea    rdx,[rip+0x3d4f]        # 0x40d335
  4095e6:	mov    rcx,rbp
  4095e9:	call   0x406cf0
  4095ee:	test   eax,eax
  4095f0:	jne    0x409624
  4095f2:	mov    DWORD PTR [rsp+0x1f8],0x22
  4095fd:	jmp    0x4070fb
  409602:	lea    rcx,[rip+0x3d07]        # 0x40d310
  409609:	call   0x4015f8
  40960e:	jmp    0x407c6f
  409613:	lea    rcx,[rip+0x3cce]        # 0x40d2e8
  40961a:	call   0x4015f8
  40961f:	jmp    0x407c6f
  409624:	lea    rdx,[rip+0x3d12]        # 0x40d33d
  40962b:	mov    rcx,rbp
  40962e:	call   0x406cf0
  409633:	test   eax,eax
  409635:	jne    0x409647
  409637:	mov    DWORD PTR [rsp+0x1f8],0x11
  409642:	jmp    0x4070fb
  409647:	lea    rdx,[rip+0x3cf9]        # 0x40d347
  40964e:	mov    rcx,rbp
  409651:	call   0x406cf0
  409656:	test   eax,eax
  409658:	jne    0x40966a
  40965a:	mov    DWORD PTR [rsp+0x1fc],0x22
  409665:	jmp    0x4070fb
  40966a:	lea    rdx,[rip+0x3cde]        # 0x40d34f
  409671:	mov    rcx,rbp
  409674:	call   0x406cf0
  409679:	test   eax,eax
  40967b:	jne    0x40968d
  40967d:	mov    DWORD PTR [rsp+0x1fc],0x11
  409688:	jmp    0x4070fb
  40968d:	lea    rdx,[rip+0x3cc5]        # 0x40d359
  409694:	mov    rcx,rbp
  409697:	call   0x406cf0
  40969c:	test   eax,eax
  40969e:	jne    0x4096c6
  4096a0:	mov    DWORD PTR [rsp+0x1f4],0x3
  4096ab:	mov    DWORD PTR [rsp+0x1fc],0x33
  4096b6:	mov    DWORD PTR [rsp+0x574],0x1
  4096c1:	jmp    0x4070fb
  4096c6:	lea    rdx,[rip+0x3c93]        # 0x40d360
  4096cd:	mov    rcx,rbp
  4096d0:	call   0x406cf0
  4096d5:	test   eax,eax
  4096d7:	jne    0x4096e9
  4096d9:	mov    DWORD PTR [rsp+0x238],0x1
  4096e4:	jmp    0x4070fb
  4096e9:	lea    rdx,[rip+0x3c79]        # 0x40d369
  4096f0:	mov    rcx,rbp
  4096f3:	call   0x406cf0
  4096f8:	test   eax,eax
  4096fa:	jne    0x40970c
  4096fc:	mov    DWORD PTR [rsp+0x238],0x0
  409707:	jmp    0x4070fb
  40970c:	lea    rdx,[rip+0x3c61]        # 0x40d374
  409713:	mov    rcx,rbp
  409716:	call   0x406cf0
  40971b:	test   eax,eax
  40971d:	jne    0x40972f
  40971f:	mov    DWORD PTR [rsp+0x738],0x1
  40972a:	jmp    0x4070fb
  40972f:	lea    rdx,[rip+0x3c46]        # 0x40d37c
  409736:	mov    rcx,rbp
  409739:	call   0x406cf0
  40973e:	test   eax,eax
  409740:	jne    0x409752
  409742:	mov    DWORD PTR [rsp+0x73c],0x1
  40974d:	jmp    0x4070fb
  409752:	lea    rdx,[rip+0x3c2c]        # 0x40d385
  409759:	mov    rcx,rbp
  40975c:	call   0x406cf0
  409761:	test   eax,eax
  409763:	jne    0x409775
  409765:	mov    DWORD PTR [rsp+0x364],0x0
  409770:	jmp    0x4070fb
  409775:	lea    rdx,[rip+0x3c10]        # 0x40d38c
  40977c:	mov    rcx,rbp
  40977f:	call   0x406cf0
  409784:	test   eax,eax
  409786:	jne    0x409798
  409788:	mov    DWORD PTR [rsp+0x364],0x1
  409793:	jmp    0x4070fb
  409798:	lea    rdx,[rip+0x3bf3]        # 0x40d392
  40979f:	mov    rcx,rbp
  4097a2:	call   0x406cf0
  4097a7:	test   eax,eax
  4097a9:	jne    0x4097bb
  4097ab:	mov    DWORD PTR [rsp+0x364],0x2
  4097b6:	jmp    0x4070fb
  4097bb:	lea    rdx,[rip+0x3bd6]        # 0x40d398
  4097c2:	mov    rcx,rbp
  4097c5:	call   0x406cf0
  4097ca:	test   eax,eax
  4097cc:	jne    0x4097de
  4097ce:	mov    DWORD PTR [rsp+0x364],0x3
  4097d9:	jmp    0x4070fb
  4097de:	lea    rdx,[rip+0x3bbc]        # 0x40d3a1
  4097e5:	mov    rcx,rbp
  4097e8:	call   0x406cf0
  4097ed:	test   eax,eax
  4097ef:	jne    0x409801
  4097f1:	mov    DWORD PTR [rsp+0x740],0x1
  4097fc:	jmp    0x4070fb
  409801:	lea    rdx,[rip+0x3ba1]        # 0x40d3a9
  409808:	mov    rcx,rbp
  40980b:	call   0x406cf0
  409810:	test   eax,eax
  409812:	jne    0x409824
  409814:	mov    DWORD PTR [rsp+0x4ec],0x1
  40981f:	jmp    0x4070fb
  409824:	lea    rdx,[rip+0x3b86]        # 0x40d3b1
  40982b:	mov    rcx,rbp
  40982e:	call   0x406cf0
  409833:	test   eax,eax
  409835:	jne    0x409847
  409837:	mov    DWORD PTR [rsp+0x4ec],0x2
  409842:	jmp    0x4070fb
  409847:	lea    rdx,[rip+0x3b6a]        # 0x40d3b8
  40984e:	mov    rcx,rbp
  409851:	call   0x406cf0
  409856:	test   eax,eax
  409858:	jne    0x40986a
  40985a:	mov    DWORD PTR [rsp+0x4ec],0x4
  409865:	jmp    0x4070fb
  40986a:	lea    rdx,[rip+0x3b4f]        # 0x40d3c0
  409871:	mov    rcx,rbp
  409874:	call   0x406cf0
  409879:	test   eax,eax
  40987b:	jne    0x40988d
  40987d:	mov    DWORD PTR [rsp+0x4ec],0x3
  409888:	jmp    0x4070fb
  40988d:	lea    rdx,[rip+0x3b34]        # 0x40d3c8
  409894:	mov    rcx,rbp
  409897:	call   0x406cf0
  40989c:	test   eax,eax
  40989e:	jne    0x4098b0
  4098a0:	mov    DWORD PTR [rsp+0x4ec],0x5
  4098ab:	jmp    0x4070fb
  4098b0:	lea    rdx,[rip+0x3b19]        # 0x40d3d0
  4098b7:	mov    rcx,rbp
  4098ba:	call   0x406cf0
  4098bf:	test   eax,eax
  4098c1:	jne    0x4098d3
  4098c3:	mov    DWORD PTR [rsp+0x4f0],0x1
  4098ce:	jmp    0x4070fb
  4098d3:	lea    rdx,[rip+0x3afc]        # 0x40d3d6
  4098da:	mov    rcx,rbp
  4098dd:	call   0x406cf0
  4098e2:	test   eax,eax
  4098e4:	jne    0x4098f6
  4098e6:	mov    DWORD PTR [rsp+0x4f0],0x2
  4098f1:	jmp    0x4070fb
  4098f6:	lea    rdx,[rip+0x3adf]        # 0x40d3dc
  4098fd:	mov    rcx,rbp
  409900:	call   0x406cf0
  409905:	test   eax,eax
  409907:	jne    0x409919
  409909:	mov    DWORD PTR [rsp+0x4f0],0x4
  409914:	jmp    0x4070fb
  409919:	lea    rdx,[rip+0x3ac4]        # 0x40d3e4
  409920:	mov    rcx,rbp
  409923:	call   0x406cf0
  409928:	test   eax,eax
  40992a:	jne    0x40993c
  40992c:	mov    DWORD PTR [rsp+0x4f0],0x3
  409937:	jmp    0x4070fb
  40993c:	lea    rdx,[rip+0x3aa9]        # 0x40d3ec
  409943:	mov    rcx,rbp
  409946:	call   0x406cf0
  40994b:	test   eax,eax
  40994d:	je     0x409990
  40994f:	lea    rdx,[rip+0x3a9f]        # 0x40d3f5
  409956:	mov    rcx,rbp
  409959:	call   0x406cf0
  40995e:	test   eax,eax
  409960:	jne    0x409972
  409962:	mov    DWORD PTR [rsp+0x548],0x0
  40996d:	jmp    0x4070fb
  409972:	lea    rdx,[rip+0x3a87]        # 0x40d400
  409979:	mov    rcx,rbp
  40997c:	call   0x406cf0
  409981:	test   eax,eax
  409983:	jne    0x4099a0
  409985:	mov    DWORD PTR [rsp+0x54c],0x1
  409990:	mov    DWORD PTR [rsp+0x548],0x1
  40999b:	jmp    0x4070fb
  4099a0:	lea    rdx,[rip+0x3a64]        # 0x40d40b
  4099a7:	mov    rcx,rbp
  4099aa:	call   0x406cf0
  4099af:	test   eax,eax
  4099b1:	jne    0x4099c3
  4099b3:	mov    DWORD PTR [rsp+0x550],0x1
  4099be:	jmp    0x4070fb
  4099c3:	lea    rdx,[rip+0x3a49]        # 0x40d413
  4099ca:	mov    rcx,rbp
  4099cd:	call   0x406cf0
  4099d2:	test   eax,eax
  4099d4:	jne    0x409a2c
  4099d6:	lea    rsi,[r14+r12*8+0x8]
  4099db:	mov    DWORD PTR [rsp+0x554],0x1
  4099e6:	mov    rcx,QWORD PTR [rsi]
  4099e9:	test   rcx,rcx
  4099ec:	je     0x4070fb
  4099f2:	movzx  eax,BYTE PTR [rcx]
  4099f5:	sub    eax,0x30
  4099f8:	cmp    eax,0x9
  4099fb:	ja     0x4070fb
  409a01:	mov    rdx,QWORD PTR [rsp+0x48]
  409a06:	add    ebx,0x1
  409a09:	call   0x406ea0
  409a0e:	test   eax,eax
  409a10:	jne    0x409a66
  409a12:	mov    eax,DWORD PTR [rsp+0x68]
  409a16:	test   eax,eax
  409a18:	jle    0x409a66
  409a1a:	imul   eax,eax,0x3e8
  409a20:	mov    DWORD PTR [rsp+0x558],eax
  409a27:	jmp    0x4070fb
  409a2c:	lea    rdx,[rip+0x3a0c]        # 0x40d43f
  409a33:	mov    rcx,rbp
  409a36:	call   0x406cf0
  409a3b:	test   eax,eax
  409a3d:	je     0x409ad1
  409a43:	lea    rdx,[rip+0x39fe]        # 0x40d448
  409a4a:	mov    rcx,rbp
  409a4d:	call   0x406cf0
  409a52:	test   eax,eax
  409a54:	jne    0x409a7a
  409a56:	mov    DWORD PTR [rsp+0x538],0x1
  409a61:	jmp    0x4070fb
  409a66:	mov    rdx,QWORD PTR [rsi]
  409a69:	lea    rcx,[rip+0x39b0]        # 0x40d420
  409a70:	call   0x4015f8
  409a75:	jmp    0x407c6f
  409a7a:	lea    rdx,[rip+0x39cd]        # 0x40d44e
  409a81:	mov    rcx,rbp
  409a84:	call   0x406cf0
  409a89:	test   eax,eax
  409a8b:	jne    0x409ae1
  409a8d:	mov    DWORD PTR [rsp+0x540],0x1
  409a98:	jmp    0x4070fb
  409a9d:	lea    rdx,[rip+0x39bb]        # 0x40d45f
  409aa4:	mov    rcx,rbp
  409aa7:	call   0x406cf0
  409aac:	test   eax,eax
  409aae:	jne    0x409b04
  409ab0:	mov    DWORD PTR [rsp+0x544],0x1
  409abb:	mov    DWORD PTR [rsp+0x540],0x1
  409ac6:	mov    DWORD PTR [rsp+0x538],0x1
  409ad1:	mov    DWORD PTR [rsp+0x53c],0x1
  409adc:	jmp    0x4070fb
  409ae1:	lea    rdx,[rip+0x396e]        # 0x40d456
  409ae8:	mov    rcx,rbp
  409aeb:	call   0x406cf0
  409af0:	test   eax,eax
  409af2:	jne    0x409a9d
  409af4:	mov    DWORD PTR [rsp+0x544],0x1
  409aff:	jmp    0x4070fb
  409b04:	lea    rdx,[rip+0x395b]        # 0x40d466
  409b0b:	mov    rcx,rbp
  409b0e:	call   0x406cf0
  409b13:	test   eax,eax
  409b15:	jne    0x409b60
  409b17:	add    ebx,0x1
  409b1a:	cmp    r15d,ebx
  409b1d:	je     0x409bb3
  409b23:	movsxd rax,ebx
  409b26:	lea    rsi,[r14+rax*8]
  409b2a:	mov    rcx,QWORD PTR [rsi]
  409b2d:	movzx  eax,BYTE PTR [rcx]
  409b30:	test   al,al
  409b32:	je     0x409bb3
  409b34:	cmp    al,0x2d
  409b36:	je     0x409bb3
  409b38:	mov    rdx,QWORD PTR [rsp+0x48]
  409b3d:	call   0x402cf0
  409b42:	mov    rax,QWORD PTR [rsp+0x68]
  409b47:	cmp    BYTE PTR [rax],0x0
  409b4a:	je     0x409b83
  409b4c:	mov    rdx,QWORD PTR [rsi]
  409b4f:	lea    rcx,[rip+0x3942]        # 0x40d498
  409b56:	call   0x4015f8
  409b5b:	jmp    0x407c6f
  409b60:	lea    rdx,[rip+0x395a]        # 0x40d4c1
  409b67:	mov    rcx,rbp
  409b6a:	call   0x406cf0
  409b6f:	test   eax,eax
  409b71:	jne    0x409bc4
  409b73:	mov    DWORD PTR [rsp+0x744],0x1
  409b7e:	jmp    0x4070fb
  409b83:	ucomisd xmm0,QWORD PTR [rip+0x414d]        # 0x40dcd8
  409b8b:	jb     0x409b4c
  409b8d:	movsd  xmm4,QWORD PTR [rip+0x414b]        # 0x40dce0
  409b95:	ucomisd xmm4,xmm0
  409b99:	jb     0x409b4c
  409b9b:	pxor   xmm5,xmm5
  409b9f:	ucomisd xmm5,xmm0
  409ba3:	ja     0x409b4c
  409ba5:	movsd  QWORD PTR [rsp+0x530],xmm0
  409bae:	jmp    0x4070fb
  409bb3:	lea    rcx,[rip+0x38b6]        # 0x40d470
  409bba:	call   0x4015f8
  409bbf:	jmp    0x407c6f
  409bc4:	lea    rdx,[rip+0x3900]        # 0x40d4cb
  409bcb:	mov    rcx,rbp
  409bce:	call   0x406cf0
  409bd3:	test   eax,eax
  409bd5:	jne    0x409c54
  409bd7:	add    ebx,0x1
  409bda:	cmp    r15d,ebx
  409bdd:	je     0x409c43
  409bdf:	movsxd rax,ebx
  409be2:	lea    rsi,[r14+rax*8]
  409be6:	mov    rcx,QWORD PTR [rsi]
  409be9:	movzx  eax,BYTE PTR [rcx]
  409bec:	test   al,al
  409bee:	je     0x409c43
  409bf0:	cmp    al,0x2d
  409bf2:	jne    0x409c00
  409bf4:	movzx  eax,BYTE PTR [rcx+0x1]
  409bf8:	sub    eax,0x30
  409bfb:	cmp    eax,0x9
  409bfe:	ja     0x409c43
  409c00:	mov    rax,QWORD PTR [rsp+0x50]
  409c05:	mov    DWORD PTR [rsp+0x744],0x1
  409c10:	mov    DWORD PTR [rsp+0x748],0x1
  409c1b:	lea    rdx,[rax+0x6dc]
  409c22:	call   0x406ea0
  409c27:	test   eax,eax
  409c29:	je     0x4070fb
  409c2f:	mov    rdx,QWORD PTR [rsi]
  409c32:	lea    rcx,[rip+0x38bf]        # 0x40d4f8
  409c39:	call   0x4015f8
  409c3e:	jmp    0x407c6f
  409c43:	lea    rcx,[rip+0x388a]        # 0x40d4d4
  409c4a:	call   0x4015f8
  409c4f:	jmp    0x407c6f
  409c54:	lea    rdx,[rip+0x38d5]        # 0x40d530
  409c5b:	mov    rcx,rbp
  409c5e:	call   0x406cf0
  409c63:	test   eax,eax
  409c65:	jne    0x409c9e
  409c67:	add    ebx,0x1
  409c6a:	cmp    r15d,ebx
  409c6d:	je     0x409cf5
  409c73:	movsxd rax,ebx
  409c76:	mov    rax,QWORD PTR [r14+rax*8]
  409c7a:	movzx  edx,BYTE PTR [rax]
  409c7d:	test   dl,dl
  409c7f:	je     0x409cf5
  409c81:	cmp    dl,0x2d
  409c84:	je     0x409cf5
  409c86:	cmp    QWORD PTR [rsp+0x750],0x0
  409c8f:	jne    0x409ce4
  409c91:	mov    QWORD PTR [rsp+0x750],rax
  409c99:	jmp    0x4070fb
  409c9e:	lea    rdx,[rip+0x38e5]        # 0x40d58a
  409ca5:	mov    rcx,rbp
  409ca8:	call   0x406cf0
  409cad:	test   eax,eax
  409caf:	jne    0x409d28
  409cb1:	add    ebx,0x1
  409cb4:	cmp    r15d,ebx
  409cb7:	je     0x409d17
  409cb9:	movsxd rax,ebx
  409cbc:	mov    rax,QWORD PTR [r14+rax*8]
  409cc0:	movzx  edx,BYTE PTR [rax]
  409cc3:	test   dl,dl
  409cc5:	je     0x409d17
  409cc7:	cmp    dl,0x2d
  409cca:	je     0x409d17
  409ccc:	cmp    QWORD PTR [rsp+0x568],0x0
  409cd5:	jne    0x409d06
  409cd7:	mov    QWORD PTR [rsp+0x568],rax
  409cdf:	jmp    0x4070fb
  409ce4:	lea    rcx,[rip+0x3875]        # 0x40d560
  409ceb:	call   0x4015f8
  409cf0:	jmp    0x407c6f
  409cf5:	lea    rcx,[rip+0x383c]        # 0x40d538
  409cfc:	call   0x4015f8
  409d01:	jmp    0x407c6f
  409d06:	lea    rcx,[rip+0x38b3]        # 0x40d5c0
  409d0d:	call   0x4015f8
  409d12:	jmp    0x407c6f
  409d17:	lea    rcx,[rip+0x387a]        # 0x40d598
  409d1e:	call   0x4015f8
  409d23:	jmp    0x407c6f
  409d28:	cmp    BYTE PTR [rbp+0x0],0x2d
  409d2c:	je     0x409d46
  409d2e:	cmp    QWORD PTR [rsp+0x648],0x0
  409d37:	jne    0x409d5d
  409d39:	mov    QWORD PTR [rsp+0x648],rbp
  409d41:	jmp    0x4070fb
  409d46:	mov    r8,QWORD PTR [r14]
  409d49:	lea    rcx,[rip+0x38a0]        # 0x40d5f0
  409d50:	mov    rdx,rbp
  409d53:	call   0x4015f8
  409d58:	jmp    0x407c6f
  409d5d:	lea    rcx,[rip+0x38b4]        # 0x40d618
  409d64:	call   0x4015f8
  409d69:	jmp    0x407c6f
  409d6e:	nop
  409d6f:	nop
  409d70:	(bad)  
  409d71:	(bad)  
  409d72:	(bad)  
  409d73:	(bad)  
  409d74:	(bad)  
  409d75:	(bad)  
  409d76:	(bad)  
  409d77:	inc    DWORD PTR [rax]
  409d79:	add    BYTE PTR [rax],al
  409d7b:	add    BYTE PTR [rax],al
  409d7d:	add    BYTE PTR [rax],al
  409d7f:	add    bh,bh
  409d81:	(bad)  
  409d82:	(bad)  
  409d83:	(bad)  
  409d84:	(bad)  
  409d85:	(bad)  
  409d86:	(bad)  
  409d87:	inc    DWORD PTR [rax]
  409d89:	add    BYTE PTR [rax],al
  409d8b:	add    BYTE PTR [rax],al
  409d8d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

000000000040a000 <.data>:
  40a000:	or     al,BYTE PTR [rax]
	...
  40a00e:	add    BYTE PTR [rax],al
  40a010:	mov    BYTE PTR [rbp+0x40],bl
	...
  40a01e:	add    BYTE PTR [rax],al
  40a020:	(bad)  
  40a021:	(bad)  
  40a022:	(bad)  
  40a023:	(bad)  
  40a024:	(bad)  
  40a025:	(bad)  
  40a026:	(bad)  
  40a027:	inc    DWORD PTR [rax]
  40a029:	add    BYTE PTR [rax],al
  40a02b:	add    BYTE PTR [rax],al
  40a02d:	add    BYTE PTR [rax],al
  40a02f:	add    bh,bh
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rdx],al
	...
  40a04d:	add    BYTE PTR [rax],al
  40a04f:	add    BYTE PTR [rip+0xffffffffce000000],dh        # 0xffffffffce40a055
  40a055:	sti    
  40a056:	(bad)  
  40a057:	dec    ebx
  40a059:	add    eax,DWORD PTR [rax]
  40a05b:	add    BYTE PTR [rcx],al
  40a05d:	add    BYTE PTR [rax],al
  40a05f:	add    BYTE PTR [rax],al
  40a061:	add    BYTE PTR [rax],al
  40a063:	add    BYTE PTR [rsi],cl
	...
  40a06d:	add    BYTE PTR [rax],al
  40a06f:	add    bh,bh
  40a071:	(bad)  
  40a072:	(bad)  
  40a073:	inc    DWORD PTR [rax]
	...
  40a07d:	add    BYTE PTR [rax],al
  40a07f:	add    BYTE PTR [rax+0x1a],al
  40a082:	add    BYTE PTR [r8],al
	...
  40a08d:	add    BYTE PTR [rax],al
  40a08f:	add    al,al
  40a091:	ins    DWORD PTR es:[rdi],dx
  40a092:	add    BYTE PTR [rax],al
  40a095:	add    BYTE PTR [rax],al
  40a097:	add    al,dl
  40a099:	ins    DWORD PTR es:[rdi],dx
  40a09a:	add    BYTE PTR [rax],al
  40a09d:	add    BYTE PTR [rax],al
  40a09f:	add    BYTE PTR [rdx],dh
  40a0a1:	movabs ds:0x2b992ddf,al
  40a0aa:	add    BYTE PTR [rax],al
  40a0ac:	add    BYTE PTR [rax],al
  40a0ae:	add    BYTE PTR [rax],al
  40a0b0:	int    0x5d
  40a0b2:	and    dl,dl
  40a0b4:	data16 (bad) 
  40a0b6:	(bad)  
  40a0b7:	inc    DWORD PTR [rax]
  40a0b9:	add    BYTE PTR [rax],al
  40a0bb:	add    BYTE PTR [rax],al
  40a0bd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

000000000040b000 <.rdata>:
  40b000:	sub    eax,0x73706d2d
  40b005:	add    BYTE PTR [rip+0x6572662d],ch        # 0x65b31638
  40b00b:	gs ins DWORD PTR es:[rdi],dx
  40b00d:	jo     0x40b082
  40b00f:	add    BYTE PTR [rip+0x706c2d],ch        # 0xb11c42
  40b015:	sub    eax,0x7870632d
  40b01a:	ins    BYTE PTR es:[rdi],dx
  40b01b:	jo     0x40b01d
  40b01d:	sub    eax,0x706c672d
  40b022:	add    BYTE PTR [rip+0x74616d2d],ch        # 0x74a21d55
  40b028:	push   0x6d2d00
  40b02d:	sub    eax,0x646f6d2d
  40b032:	gs ins BYTE PTR es:[rdi],dx
  40b034:	add    BYTE PTR [rip+0x2d2d0064],ch        # 0x2d6db09e
  40b03a:	fs (bad) 
  40b03c:	je     0x40b09f
  40b03e:	add    BYTE PTR [rsi+0x6f],cl
  40b041:	and    BYTE PTR [rcx+0x6e],ch
  40b044:	jo     0x40b0bb
  40b046:	je     0x40b068
  40b048:	fs (bad) 
  40b04a:	je     0x40b0ad
  40b04c:	and    BYTE PTR [rsi+0x69],ah
  40b04f:	ins    BYTE PTR es:[rdi],dx
  40b050:	and    BYTE PTR gs:[rbx+0x70],dh
  40b054:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40b058:	imul   esp,DWORD PTR [rbp+0x64],0x6f54000a
  40b05f:	outs   dx,DWORD PTR ds:[rsi]
  40b060:	and    BYTE PTR [rbp+0x61],ch
  40b063:	outs   dx,BYTE PTR ds:[rsi]
  40b064:	jns    0x40b086
  40b066:	imul   ebp,DWORD PTR [rsi+0x70],0x64207475
  40b06d:	(bad)  
  40b06e:	je     0x40b0d1
  40b070:	and    BYTE PTR [rsi+0x69],ah
  40b073:	ins    BYTE PTR es:[rdi],dx
  40b074:	gs jae 0x40b081
  40b077:	add    BYTE PTR [rip+0x2d2d0079],ch        # 0x2d6db0f6
  40b07d:	imul   esi,DWORD PTR fs:[rbx+0x70],0x79616c
  40b085:	add    BYTE PTR [rax],al
  40b087:	add    BYTE PTR [rsi+0x6f],cl
  40b08a:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  40b08e:	jo     0x40b0fc
  40b090:	(bad)  
  40b091:	jns    0x40b0b3
  40b093:	outs   dx,DWORD PTR ds:[rsi]
  40b094:	jne    0x40b10a
  40b096:	jo     0x40b10d
  40b098:	je     0x40b0ba
  40b09a:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7073
  40b0a1:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40b0a5:	imul   esp,DWORD PTR [rbp+0x64],0xa
  40b0ac:	add    BYTE PTR [rax],al
  40b0ae:	add    BYTE PTR [rax],al
  40b0b0:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  40b0b2:	ins    BYTE PTR es:[rdi],dx
  40b0b3:	jns    0x40b0d5
  40b0b5:	outs   dx,DWORD PTR ds:[rsi]
  40b0b6:	outs   dx,BYTE PTR ds:[rsi]
  40b0b7:	and    BYTE PTR gs:[rcx+rbp*2+0x73],ah
  40b0bc:	jo     0x40b12a
  40b0be:	(bad)  
  40b0bf:	jns    0x40b0e1
  40b0c1:	outs   dx,DWORD PTR ds:[rsi]
  40b0c2:	jne    0x40b138
  40b0c4:	jo     0x40b13b
  40b0c6:	je     0x40b0e8
  40b0c8:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6c61
  40b0cf:	ins    BYTE PTR es:[rdi],dx
  40b0d0:	outs   dx,DWORD PTR ds:[rsi]
  40b0d1:	ja     0x40b138
  40b0d3:	or     al,BYTE PTR fs:[rax]
  40b0d6:	sub    eax,0x6565732d
  40b0db:	add    BYTE PTR fs:[rsi+0x6f],cl
  40b0df:	and    BYTE PTR [rbx+0x65],dh
  40b0e2:	gs and BYTE PTR fs:[rsi+0x61],dh
  40b0e7:	ins    BYTE PTR es:[rdi],dx
  40b0e8:	jne    0x40b14f
  40b0ea:	and    BYTE PTR [rbx+0x70],dh
  40b0ed:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40b0f1:	imul   esp,DWORD PTR [rbp+0x64],0x3f000a
  40b0f8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40b0fa:	jbe    0x40b15d
  40b0fc:	ins    BYTE PTR es:[rdi],dx
  40b0fd:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x20646565
  40b105:	jbe    0x40b168
  40b107:	ins    BYTE PTR es:[rdi],dx
  40b108:	jne    0x40b16f
  40b10a:	and    BYTE PTR [rdi],ah
  40b10c:	and    eax,0xa2773
  40b111:	sub    eax,0x6e696d2d
  40b116:	movsxd ebp,DWORD PTR [rdi+0x73]
  40b119:	je     0x40b11b
  40b11b:	sub    eax,0x78616d2d
  40b120:	data16 ins BYTE PTR es:[rdi],dx
  40b122:	outs   dx,DWORD PTR ds:[rsi]
  40b123:	ja     0x40b125
  40b125:	sub    eax,0x666e632d
  40b12a:	add    BYTE PTR [rip+0x6d69732d],ch        # 0x6daa245d
  40b130:	jo     0x40b19e
  40b132:	gs js  0x40b135
  40b135:	sub    eax,0x746e692d
  40b13a:	gs jb  0x40b1a6
  40b13d:	outs   dx,DWORD PTR ds:[rsi]
  40b13e:	jb     0x40b140
  40b140:	sub    eax,0x696c612d
  40b145:	outs   dx,BYTE PTR gs:[rsi]
  40b147:	add    BYTE PTR [rip+0x2d2d0072],ch        # 0x2d6db1bf
  40b14d:	jb     0x40b1b4
  40b14f:	(bad)  
  40b150:	add    BYTE PTR fs:[rax],al
  40b153:	add    BYTE PTR [rax],al
  40b155:	add    BYTE PTR [rax],al
  40b157:	add    BYTE PTR [rsi+0x6f],cl
  40b15a:	and    BYTE PTR [rcx+0x6e],ch
  40b15d:	jo     0x40b1d4
  40b15f:	je     0x40b181
  40b161:	jae    0x40b1d2
  40b163:	ins    BYTE PTR es:[rdi],dx
  40b164:	jne    0x40b1da
  40b166:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c696620
  40b16d:	and    BYTE PTR gs:[rbx+0x70],dh
  40b171:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40b175:	imul   esp,DWORD PTR [rbp+0x64],0xa
  40b17c:	add    BYTE PTR [rax],al
  40b17e:	add    BYTE PTR [rax],al
  40b180:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  40b182:	ins    BYTE PTR es:[rdi],dx
  40b183:	jns    0x40b1a5
  40b185:	outs   dx,DWORD PTR ds:[rsi]
  40b186:	outs   dx,BYTE PTR ds:[rsi]
  40b187:	and    BYTE PTR gs:[rcx+0x6e],ch
  40b18b:	jo     0x40b202
  40b18d:	je     0x40b1af
  40b18f:	jae    0x40b200
  40b191:	ins    BYTE PTR es:[rdi],dx
  40b192:	jne    0x40b208
  40b194:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c696620
  40b19b:	and    BYTE PTR gs:[rcx+0x6c],ah
  40b19f:	ins    BYTE PTR es:[rdi],dx
  40b1a0:	outs   dx,DWORD PTR ds:[rsi]
  40b1a1:	ja     0x40b208
  40b1a3:	or     al,BYTE PTR fs:[rax]
  40b1a6:	sub    eax,0x6e696d2d
  40b1ab:	add    BYTE PTR [rip+0x78616d2d],ch        # 0x78a21ede
  40b1b1:	add    BYTE PTR [rip+0x6163732d],ch        # 0x61a424e4
  40b1b7:	ins    BYTE PTR es:[rdi],dx
  40b1b8:	add    BYTE PTR gs:[rip+0x736f6e2d],ch        # 0x73b01fec
  40b1bf:	movsxd esp,DWORD PTR [rcx+0x6c]
  40b1c2:	add    BYTE PTR gs:[rip+0x2d2d006f],ch        # 0x2d6db238
  40b1c9:	outs   dx,DWORD PTR ds:[rsi]
  40b1ca:	jne    0x40b240
  40b1cc:	jo     0x40b243
  40b1ce:	je     0x40b1d0
  40b1d0:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  40b1d2:	and    BYTE PTR [rdi+0x75],ch
  40b1d5:	je     0x40b247
  40b1d7:	jne    0x40b24d
  40b1d9:	and    BYTE PTR [rbx+0x6f],dh
  40b1dc:	ins    BYTE PTR es:[rdi],dx
  40b1dd:	jne    0x40b253
  40b1df:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c696620
  40b1e6:	and    BYTE PTR gs:[rbx+0x70],dh
  40b1ea:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40b1ee:	imul   esp,DWORD PTR [rbp+0x64],0xa
  40b1f5:	add    BYTE PTR [rax],al
  40b1f7:	add    BYTE PTR [rdi+0x6e],cl
  40b1fa:	ins    BYTE PTR es:[rdi],dx
  40b1fb:	jns    0x40b21d
  40b1fd:	outs   dx,DWORD PTR ds:[rsi]
  40b1fe:	outs   dx,BYTE PTR ds:[rsi]
  40b1ff:	and    BYTE PTR gs:[rdi+0x75],ch
  40b203:	je     0x40b275
  40b205:	jne    0x40b27b
  40b207:	and    BYTE PTR [rbx+0x6f],dh
  40b20a:	ins    BYTE PTR es:[rdi],dx
  40b20b:	jne    0x40b281
  40b20d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c696620
  40b214:	and    BYTE PTR gs:[rcx+0x6c],ah
  40b218:	ins    BYTE PTR es:[rdi],dx
  40b219:	outs   dx,DWORD PTR ds:[rsi]
  40b21a:	ja     0x40b281
  40b21c:	or     al,BYTE PTR fs:[rax]
  40b21f:	sub    eax,0x2d2d0077
  40b224:	ja     0x40b298
  40b226:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x61722d2d
  40b22e:	outs   dx,BYTE PTR ds:[rsi]
  40b22f:	addr32 gs jae 0x40b233
  40b233:	sub    eax,0x756f622d
  40b238:	outs   dx,BYTE PTR ds:[rsi]
  40b239:	fs jae 0x40b23c
  40b23c:	add    BYTE PTR [rax],al
  40b23e:	add    BYTE PTR [rax],al
  40b240:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  40b242:	and    BYTE PTR [rdi+0x75],ch
  40b245:	je     0x40b2b7
  40b247:	jne    0x40b2bd
  40b249:	and    BYTE PTR [rsi+0x69],ah
  40b24c:	ins    BYTE PTR es:[rdi],dx
  40b24d:	and    BYTE PTR gs:[rbx+0x70],dh
  40b251:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40b255:	imul   esp,DWORD PTR [rbp+0x64],0x206f7420
  40b25c:	ja     0x40b2d0
  40b25e:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x736e6573
  40b266:	imul   esi,DWORD PTR [rcx+rbp*2+0x76],0x20797469
  40b26e:	(bad)  
  40b26f:	outs   dx,BYTE PTR ds:[rsi]
  40b270:	(bad)  
  40b271:	ins    BYTE PTR es:[rdi],dx
  40b272:	jns    0x40b2e7
  40b274:	imul   esi,DWORD PTR [rbx+0x20],0x6f706572
  40b27b:	jb     0x40b2f1
  40b27d:	or     al,BYTE PTR [rax]
  40b27f:	add    BYTE PTR [rdi+0x6e],cl
  40b282:	ins    BYTE PTR es:[rdi],dx
  40b283:	jns    0x40b2a5
  40b285:	outs   dx,DWORD PTR ds:[rsi]
  40b286:	outs   dx,BYTE PTR ds:[rsi]
  40b287:	and    BYTE PTR gs:[rdi+0x75],ch
  40b28b:	je     0x40b2fd
  40b28d:	jne    0x40b303
  40b28f:	and    BYTE PTR [rsi+0x69],ah
  40b292:	ins    BYTE PTR es:[rdi],dx
  40b293:	and    BYTE PTR gs:[rcx+0x6c],ah
  40b297:	ins    BYTE PTR es:[rdi],dx
  40b298:	outs   dx,DWORD PTR ds:[rsi]
  40b299:	ja     0x40b300
  40b29b:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  40b2a0:	ja     0x40b314
  40b2a2:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x736e6573
  40b2aa:	imul   esi,DWORD PTR [rcx+rbp*2+0x76],0x20797469
  40b2b2:	(bad)  
  40b2b3:	outs   dx,BYTE PTR ds:[rsi]
  40b2b4:	(bad)  
  40b2b5:	ins    BYTE PTR es:[rdi],dx
  40b2b6:	jns    0x40b32b
  40b2b8:	imul   esi,DWORD PTR [rbx+0x20],0x6f706572
  40b2bf:	jb     0x40b335
  40b2c1:	or     al,BYTE PTR [rax]
  40b2c3:	sub    eax,0x6c6d742d
  40b2c8:	imul   ebp,DWORD PTR [rbp+0x0],0x74206f4e
  40b2cf:	imul   ebp,DWORD PTR [rbp+0x65],0x6d696c20
  40b2d6:	imul   esi,DWORD PTR [rax+riz*1+0x73],0x69636570
  40b2de:	imul   sp,WORD PTR [rbp+0x64],0xa
  40b2e4:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40b2e6:	jbe    0x40b349
  40b2e8:	ins    BYTE PTR es:[rdi],dx
  40b2e9:	imul   esp,DWORD PTR [rax+riz*1+0x74],0x20656d69
  40b2f1:	ins    BYTE PTR es:[rdi],dx
  40b2f2:	imul   ebp,DWORD PTR [rbp+0x69],0x25272074
  40b2f9:	jae    0x40b322
  40b2fb:	or     al,BYTE PTR [rax]
  40b2fd:	sub    eax,0x6d656d2d
  40b302:	ins    BYTE PTR es:[rdi],dx
  40b303:	imul   ebp,DWORD PTR [rbp+0x0],0x6d206f4e
  40b30a:	gs ins DWORD PTR es:[rdi],dx
  40b30c:	outs   dx,DWORD PTR ds:[rsi]
  40b30d:	jb     0x40b388
  40b30f:	and    BYTE PTR [rcx+rbp*2+0x6d],ch
  40b313:	imul   esi,DWORD PTR [rax+riz*1+0x73],0x69636570
  40b31b:	imul   sp,WORD PTR [rbp+0x64],0xa
  40b321:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40b323:	jbe    0x40b386
  40b325:	ins    BYTE PTR es:[rdi],dx
  40b326:	imul   esp,DWORD PTR [rax+riz*1+0x6d],0x726f6d65
  40b32e:	jns    0x40b350
  40b330:	ins    BYTE PTR es:[rdi],dx
  40b331:	imul   ebp,DWORD PTR [rbp+0x69],0x25272074
  40b338:	jae    0x40b361
  40b33a:	or     al,BYTE PTR [rax]
  40b33c:	sub    eax,0x6568632d
  40b341:	movsxd ebp,DWORD PTR [rbx+0x0]
  40b344:	sub    eax,0x6d616e2d
  40b349:	add    BYTE PTR gs:[rsi+0x6f],cl
  40b34d:	and    BYTE PTR [rax+0x72],dh
  40b350:	outs   dx,DWORD PTR ds:[rsi]
  40b351:	(bad)  
  40b352:	ins    BYTE PTR es:[rdi],dx
  40b353:	gs ins DWORD PTR es:[rdi],dx
  40b355:	and    BYTE PTR [rsi+0x61],ch
  40b358:	ins    DWORD PTR es:[rdi],dx
  40b359:	and    BYTE PTR gs:[rbx+0x70],dh
  40b35d:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40b361:	imul   esp,DWORD PTR [rbp+0x64],0xa
  40b368:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  40b36a:	ins    BYTE PTR es:[rdi],dx
  40b36b:	jns    0x40b38d
  40b36d:	outs   dx,DWORD PTR ds:[rsi]
  40b36e:	outs   dx,BYTE PTR ds:[rsi]
  40b36f:	and    BYTE PTR gs:[rax+0x72],dh
  40b373:	outs   dx,DWORD PTR ds:[rsi]
  40b374:	(bad)  
  40b375:	ins    BYTE PTR es:[rdi],dx
  40b376:	gs ins DWORD PTR es:[rdi],dx
  40b378:	and    BYTE PTR [rsi+0x61],ch
  40b37b:	ins    DWORD PTR es:[rdi],dx
  40b37c:	and    BYTE PTR gs:[rcx+0x6c],ah
  40b380:	ins    BYTE PTR es:[rdi],dx
  40b381:	outs   dx,DWORD PTR ds:[rsi]
  40b382:	ja     0x40b3e9
  40b384:	or     al,BYTE PTR fs:[rax]
  40b387:	sub    eax,0x706d772d
  40b38c:	jae    0x40b38e
  40b38e:	add    BYTE PTR [rax],al
  40b390:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  40b392:	and    BYTE PTR [rsi+0x69],ah
  40b395:	js     0x40b3fc
  40b397:	and    BYTE PTR fs:[rbp+0x50],cl
  40b39b:	push   rbx
  40b39c:	and    BYTE PTR [rdi+0x75],ch
  40b39f:	je     0x40b411
  40b3a1:	jne    0x40b417
  40b3a3:	and    BYTE PTR [rsi+0x69],ah
  40b3a6:	ins    BYTE PTR es:[rdi],dx
  40b3a7:	and    BYTE PTR gs:[rbx+0x70],dh
  40b3ab:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40b3af:	imul   esp,DWORD PTR [rbp+0x64],0xa
  40b3b6:	add    BYTE PTR [rax],al
  40b3b8:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  40b3ba:	ins    BYTE PTR es:[rdi],dx
  40b3bb:	jns    0x40b3dd
  40b3bd:	outs   dx,DWORD PTR ds:[rsi]
  40b3be:	outs   dx,BYTE PTR ds:[rsi]
  40b3bf:	and    BYTE PTR gs:[rsi+0x69],ah
  40b3c3:	js     0x40b42a
  40b3c5:	and    BYTE PTR fs:[rbp+0x50],cl
  40b3c9:	push   rbx
  40b3ca:	and    BYTE PTR [rdi+0x75],ch
  40b3cd:	je     0x40b43f
  40b3cf:	jne    0x40b445
  40b3d1:	and    BYTE PTR [rsi+0x69],ah
  40b3d4:	ins    BYTE PTR es:[rdi],dx
  40b3d5:	and    BYTE PTR gs:[rcx+0x6c],ah
  40b3d9:	ins    BYTE PTR es:[rdi],dx
  40b3da:	outs   dx,DWORD PTR ds:[rsi]
  40b3db:	ja     0x40b442
  40b3dd:	or     al,BYTE PTR fs:[rax]
  40b3e0:	sub    eax,0x7266772d
  40b3e5:	gs gs ins DWORD PTR es:[rdi],dx
  40b3e8:	jo     0x40b45d
  40b3ea:	add    BYTE PTR [rax],al
  40b3ec:	add    BYTE PTR [rax],al
  40b3ee:	add    BYTE PTR [rax],al
  40b3f0:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  40b3f2:	and    BYTE PTR [rsi+0x72],ah
  40b3f5:	gs and BYTE PTR gs:[rbp+0x50],cl
  40b3fa:	push   rbx
  40b3fb:	and    BYTE PTR [rdi+0x75],ch
  40b3fe:	je     0x40b470
  40b400:	jne    0x40b476
  40b402:	and    BYTE PTR [rsi+0x69],ah
  40b405:	ins    BYTE PTR es:[rdi],dx
  40b406:	and    BYTE PTR gs:[rbx+0x70],dh
  40b40a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40b40e:	imul   esp,DWORD PTR [rbp+0x64],0xa
  40b415:	add    BYTE PTR [rax],al
  40b417:	add    BYTE PTR [rdi+0x6e],cl
  40b41a:	ins    BYTE PTR es:[rdi],dx
  40b41b:	jns    0x40b43d
  40b41d:	outs   dx,DWORD PTR ds:[rsi]
  40b41e:	outs   dx,BYTE PTR ds:[rsi]
  40b41f:	and    BYTE PTR gs:[rsi+0x72],ah
  40b423:	gs and BYTE PTR gs:[rbp+0x50],cl
  40b428:	push   rbx
  40b429:	and    BYTE PTR [rdi+0x75],ch
  40b42c:	je     0x40b49e
  40b42e:	jne    0x40b4a4
  40b430:	and    BYTE PTR [rsi+0x69],ah
  40b433:	ins    BYTE PTR es:[rdi],dx
  40b434:	and    BYTE PTR gs:[rcx+0x6c],ah
  40b438:	ins    BYTE PTR es:[rdi],dx
  40b439:	outs   dx,DWORD PTR ds:[rsi]
  40b43a:	ja     0x40b4a1
  40b43c:	or     al,BYTE PTR fs:[rax]
  40b43f:	sub    eax,0x706c772d
  40b444:	add    BYTE PTR [rip+0x7063772d],ch        # 0x70a42b77
  40b44a:	js     0x40b4b8
  40b44c:	jo     0x40b44e
  40b44e:	sub    eax,0x706c772d
  40b453:	je     0x40b455
  40b455:	add    BYTE PTR [rax],al
  40b457:	add    BYTE PTR [rsi+0x6f],cl
  40b45a:	and    BYTE PTR [rbx+0x50],al
  40b45d:	rex.WR
  40b45e:	rex.RB pop r8
  40b460:	and    BYTE PTR [rax+rdx*2+0x20],cl
  40b464:	outs   dx,DWORD PTR ds:[rsi]
  40b465:	jne    0x40b4db
  40b467:	jo     0x40b4de
  40b469:	je     0x40b48b
  40b46b:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7073
  40b472:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40b476:	imul   esp,DWORD PTR [rbp+0x64],0xa
  40b47d:	add    BYTE PTR [rax],al
  40b47f:	add    BYTE PTR [rdi+0x6e],cl
  40b482:	ins    BYTE PTR es:[rdi],dx
  40b483:	jns    0x40b4a5
  40b485:	outs   dx,DWORD PTR ds:[rsi]
  40b486:	outs   dx,BYTE PTR ds:[rsi]
  40b487:	and    BYTE PTR gs:[rbx+0x50],al
  40b48b:	rex.WR
  40b48c:	rex.RB pop r8
  40b48e:	and    BYTE PTR [rax+rdx*2+0x20],cl
  40b492:	outs   dx,DWORD PTR ds:[rsi]
  40b493:	jne    0x40b509
  40b495:	jo     0x40b50c
  40b497:	je     0x40b4b9
  40b499:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6c61
  40b4a0:	ins    BYTE PTR es:[rdi],dx
  40b4a1:	outs   dx,DWORD PTR ds:[rsi]
  40b4a2:	ja     0x40b509
  40b4a4:	or     al,BYTE PTR fs:[rax]
  40b4a7:	sub    eax,0x6c67772d
  40b4ac:	jo     0x40b4ae
  40b4ae:	add    BYTE PTR [rax],al
  40b4b0:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  40b4b2:	and    BYTE PTR [rdi+0x4c],al
  40b4b5:	push   rax
  40b4b6:	rex.WXB and BYTE PTR [r8+r10*2+0x2f],cl
  40b4bb:	rex.WRB
  40b4bc:	rex.WB push r8
  40b4be:	and    BYTE PTR [rdi+0x75],ch
  40b4c1:	je     0x40b533
  40b4c3:	jne    0x40b539
  40b4c5:	and    BYTE PTR [rsi+0x69],ah
  40b4c8:	ins    BYTE PTR es:[rdi],dx
  40b4c9:	and    BYTE PTR gs:[rbx+0x70],dh
  40b4cd:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40b4d1:	imul   esp,DWORD PTR [rbp+0x64],0xa
  40b4d8:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  40b4da:	ins    BYTE PTR es:[rdi],dx
  40b4db:	jns    0x40b4fd
  40b4dd:	outs   dx,DWORD PTR ds:[rsi]
  40b4de:	outs   dx,BYTE PTR ds:[rsi]
  40b4df:	and    BYTE PTR gs:[rdi+0x4c],al
  40b4e3:	push   rax
  40b4e4:	rex.WXB and BYTE PTR [r8+r10*2+0x2f],cl
  40b4e9:	rex.WRB
  40b4ea:	rex.WB push r8
  40b4ec:	and    BYTE PTR [rdi+0x75],ch
  40b4ef:	je     0x40b561
  40b4f1:	jne    0x40b567
  40b4f3:	and    BYTE PTR [rsi+0x69],ah
  40b4f6:	ins    BYTE PTR es:[rdi],dx
  40b4f7:	and    BYTE PTR gs:[rcx+0x6c],ah
  40b4fb:	ins    BYTE PTR es:[rdi],dx
  40b4fc:	outs   dx,DWORD PTR ds:[rsi]
  40b4fd:	ja     0x40b564
  40b4ff:	or     al,BYTE PTR fs:[rax]
  40b502:	sub    eax,0x6e63772d
  40b507:	data16 add BYTE PTR [rax],al
  40b50a:	add    BYTE PTR [rax],al
  40b50c:	add    BYTE PTR [rax],al
  40b50e:	add    BYTE PTR [rax],al
  40b510:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  40b512:	and    BYTE PTR [rax+0x72],dh
  40b515:	outs   dx,DWORD PTR ds:[rsi]
  40b516:	(bad)  
  40b517:	ins    BYTE PTR es:[rdi],dx
  40b518:	gs ins DWORD PTR es:[rdi],dx
  40b51a:	and    BYTE PTR [rdi+0x75],ch
  40b51d:	je     0x40b58f
  40b51f:	jne    0x40b595
  40b521:	and    BYTE PTR [rsi+0x69],ah
  40b524:	ins    BYTE PTR es:[rdi],dx
  40b525:	and    BYTE PTR gs:[rbx+0x70],dh
  40b529:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40b52d:	imul   esp,DWORD PTR [rbp+0x64],0xa
  40b534:	add    BYTE PTR [rax],al
  40b536:	add    BYTE PTR [rax],al
  40b538:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  40b53a:	ins    BYTE PTR es:[rdi],dx
  40b53b:	jns    0x40b55d
  40b53d:	outs   dx,DWORD PTR ds:[rsi]
  40b53e:	outs   dx,BYTE PTR ds:[rsi]
  40b53f:	and    BYTE PTR gs:[rdi+0x75],ch
  40b543:	je     0x40b5b5
  40b545:	jne    0x40b5bb
  40b547:	and    BYTE PTR [rcx+rcx*2+0x4d],al
  40b54b:	rex.B
  40b54c:	rex.XB push r11
  40b54e:	and    BYTE PTR [rbx+0x4e],al
  40b551:	rex.RX sub eax,0x20544153
  40b557:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6c61
  40b55e:	ins    BYTE PTR es:[rdi],dx
  40b55f:	outs   dx,DWORD PTR ds:[rsi]
  40b560:	ja     0x40b5c7
  40b562:	or     al,BYTE PTR fs:[rax]
  40b565:	sub    eax,0x676f6c2d
  40b56a:	add    BYTE PTR [rsi+0x6f],cl
  40b56d:	and    BYTE PTR [rdi+rbp*2+0x67],ch
  40b571:	and    BYTE PTR [rsi+0x69],ah
  40b574:	ins    BYTE PTR es:[rdi],dx
  40b575:	and    BYTE PTR gs:[rbx+0x70],dh
  40b579:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40b57d:	imul   esp,DWORD PTR [rbp+0x64],0x6e4f000a
  40b584:	ins    BYTE PTR es:[rdi],dx
  40b585:	jns    0x40b5a7
  40b587:	outs   dx,DWORD PTR ds:[rsi]
  40b588:	outs   dx,BYTE PTR ds:[rsi]
  40b589:	and    BYTE PTR gs:[rdi+rbp*2+0x67],ch
  40b58e:	and    BYTE PTR [rsi+0x69],ah
  40b591:	ins    BYTE PTR es:[rdi],dx
  40b592:	and    BYTE PTR gs:[rcx+0x6c],ah
  40b596:	ins    BYTE PTR es:[rdi],dx
  40b597:	outs   dx,DWORD PTR ds:[rsi]
  40b598:	ja     0x40b5ff
  40b59a:	or     al,BYTE PTR fs:[rax]
  40b59d:	sub    eax,0x2d2d0068
  40b5a2:	push   0x706c65
  40b5a7:	add    BYTE PTR [rbp+0x73],dl
  40b5aa:	(bad)  
  40b5ab:	cmp    ah,BYTE PTR gs:[eax]
  40b5af:	and    eax,0x6f5b2073
  40b5b4:	jo     0x40b62a
  40b5b6:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e2e2e73
  40b5bd:	pop    rbp
  40b5be:	and    BYTE PTR [rsi+0x69],ah
  40b5c1:	ins    BYTE PTR es:[rdi],dx
  40b5c2:	outs   dx,BYTE PTR gs:[rsi]
  40b5c4:	(bad)  
  40b5c5:	ins    DWORD PTR es:[rdi],dx
  40b5c6:	or     al,BYTE PTR gs:[rax]
  40b5c9:	or     al,BYTE PTR [rax]
  40b5cb:	rex.RXB
  40b5cc:	outs   dx,BYTE PTR gs:[rsi]
  40b5ce:	gs jb  0x40b632
  40b5d1:	ins    BYTE PTR es:[rdi],dx
  40b5d2:	and    BYTE PTR [rdi+0x70],ch
  40b5d5:	je     0x40b640
  40b5d7:	outs   dx,DWORD PTR ds:[rsi]
  40b5d8:	outs   dx,BYTE PTR ds:[rsi]
  40b5d9:	jae    0x40b615
  40b5db:	or     al,BYTE PTR [rax]
  40b5dd:	add    BYTE PTR [rax],al
  40b5df:	add    BYTE PTR [rax],ah
  40b5e1:	and    BYTE PTR [rax],ah
  40b5e3:	sub    eax,0x73706d2d
  40b5e8:	and    BYTE PTR [rax],ah
  40b5ea:	and    BYTE PTR [rax],ah
  40b5ec:	and    BYTE PTR [rax],ah
  40b5ee:	and    BYTE PTR [rax],ah
  40b5f0:	and    BYTE PTR [rax],ah
  40b5f2:	and    BYTE PTR [rax],ah
  40b5f4:	and    BYTE PTR [rdx+0x65],dh
  40b5f7:	(bad)  
  40b5f8:	and    BYTE PTR fs:[rax+rdx*2+0x2f],cl
  40b5fd:	rex.WRB
  40b5fe:	rex.WB push r8
  40b600:	and    BYTE PTR [rax+0x72],dh
  40b603:	outs   dx,DWORD PTR ds:[rsi]
  40b604:	(bad)  
  40b605:	ins    BYTE PTR es:[rdi],dx
  40b606:	gs ins DWORD PTR es:[rdi],dx
  40b608:	and    BYTE PTR [rcx+0x6e],ch
  40b60b:	and    BYTE PTR [rsi+0x69],ah
  40b60e:	js     0x40b675
  40b610:	and    BYTE PTR fs:[rbp+0x50],cl
  40b614:	push   rbx
  40b615:	and    BYTE PTR [rsi+0x6f],ah
  40b618:	jb     0x40b687
  40b61a:	(bad)  
  40b61b:	je     0x40b627
  40b61d:	add    BYTE PTR [rax],al
  40b61f:	add    BYTE PTR [rax],ah
  40b621:	and    BYTE PTR [rax],ah
  40b623:	sub    eax,0x6572662d
  40b628:	gs ins DWORD PTR es:[rdi],dx
  40b62a:	jo     0x40b69f
  40b62c:	and    BYTE PTR [rax],ah
  40b62e:	and    BYTE PTR [rax],ah
  40b630:	and    BYTE PTR [rax],ah
  40b632:	and    BYTE PTR [rax],ah
  40b634:	and    BYTE PTR [rdx+0x65],dh
  40b637:	(bad)  
  40b638:	and    BYTE PTR fs:[rax+rdx*2+0x2f],cl
  40b63d:	rex.WRB
  40b63e:	rex.WB push r8
  40b640:	and    BYTE PTR [rax+0x72],dh
  40b643:	outs   dx,DWORD PTR ds:[rsi]
  40b644:	(bad)  
  40b645:	ins    BYTE PTR es:[rdi],dx
  40b646:	gs ins DWORD PTR es:[rdi],dx
  40b648:	and    BYTE PTR [rcx+0x6e],ch
  40b64b:	and    BYTE PTR [rsi+0x72],ah
  40b64e:	gs and BYTE PTR gs:[rbp+0x50],cl
  40b653:	push   rbx
  40b654:	and    BYTE PTR [rsi+0x6f],ah
  40b657:	jb     0x40b6c6
  40b659:	(bad)  
  40b65a:	je     0x40b67c
  40b65c:	sub    BYTE PTR [rbp+riz*2+0x66],ah
  40b660:	(bad)  
  40b661:	jne    0x40b6cf
  40b663:	je     0x40b68e
  40b665:	or     al,BYTE PTR [rax]
  40b667:	add    BYTE PTR [rax],ah
  40b669:	and    BYTE PTR [rax],ah
  40b66b:	sub    eax,0x20706c2d
  40b670:	and    BYTE PTR [rax],ah
  40b672:	and    BYTE PTR [rax],ah
  40b674:	and    BYTE PTR [rax],ah
  40b676:	and    BYTE PTR [rax],ah
  40b678:	and    BYTE PTR [rax],ah
  40b67a:	and    BYTE PTR [rax],ah
  40b67c:	and    BYTE PTR [rdx+0x65],dh
  40b67f:	(bad)  
  40b680:	and    BYTE PTR fs:[rax+rdx*2+0x2f],cl
  40b685:	rex.WRB
  40b686:	rex.WB push r8
  40b688:	and    BYTE PTR [rax+0x72],dh
  40b68b:	outs   dx,DWORD PTR ds:[rsi]
  40b68c:	(bad)  
  40b68d:	ins    BYTE PTR es:[rdi],dx
  40b68e:	gs ins DWORD PTR es:[rdi],dx
  40b690:	and    BYTE PTR [rcx+0x6e],ch
  40b693:	and    BYTE PTR [rbx+0x50],al
  40b696:	rex.WR
  40b697:	rex.RB pop r8
  40b699:	and    BYTE PTR [rax+rdx*2+0x20],cl
  40b69d:	outs   dx,WORD PTR ds:[rsi]
  40b69f:	jb     0x40b70e
  40b6a1:	(bad)  
  40b6a2:	je     0x40b6ae
  40b6a4:	add    BYTE PTR [rax],al
  40b6a6:	add    BYTE PTR [rax],al
  40b6a8:	and    BYTE PTR [rax],ah
  40b6aa:	and    BYTE PTR [rip+0x706c672d],ch        # 0x70ad1ddd
  40b6b0:	and    BYTE PTR [rax],ah
  40b6b2:	and    BYTE PTR [rax],ah
  40b6b4:	and    BYTE PTR [rax],ah
  40b6b6:	and    BYTE PTR [rax],ah
  40b6b8:	and    BYTE PTR [rax],ah
  40b6ba:	and    BYTE PTR [rax],ah
  40b6bc:	and    BYTE PTR [rdx+0x65],dh
  40b6bf:	(bad)  
  40b6c0:	and    BYTE PTR fs:[rax+rdx*2+0x2f],cl
  40b6c5:	rex.WRB
  40b6c6:	rex.WB push r8
  40b6c8:	and    BYTE PTR [rax+0x72],dh
  40b6cb:	outs   dx,DWORD PTR ds:[rsi]
  40b6cc:	(bad)  
  40b6cd:	ins    BYTE PTR es:[rdi],dx
  40b6ce:	gs ins DWORD PTR es:[rdi],dx
  40b6d0:	and    BYTE PTR [rcx+0x6e],ch
  40b6d3:	and    BYTE PTR [rdi+0x4c],al
  40b6d6:	push   rax
  40b6d7:	rex.WXB and BYTE PTR [r14+0x6f],spl
  40b6db:	jb     0x40b74a
  40b6dd:	(bad)  
  40b6de:	je     0x40b700
  40b6e0:	or     al,BYTE PTR [rax]
  40b6e2:	add    BYTE PTR [rax],al
  40b6e4:	add    BYTE PTR [rax],al
  40b6e6:	add    BYTE PTR [rax],al
  40b6e8:	and    BYTE PTR [rax],ah
  40b6ea:	and    BYTE PTR [rip+0x74616d2d],ch        # 0x74a2241d
  40b6f0:	push   0x20202020
  40b6f5:	and    BYTE PTR [rax],ah
  40b6f7:	and    BYTE PTR [rax],ah
  40b6f9:	and    BYTE PTR [rax],ah
  40b6fb:	and    BYTE PTR [rax],ah
  40b6fd:	jb     0x40b764
  40b6ff:	(bad)  
  40b700:	and    BYTE PTR fs:[rax+rdx*2+0x2f],cl
  40b705:	rex.WRB
  40b706:	rex.WB push r8
  40b708:	and    BYTE PTR [rbp+0x6f],ch
  40b70b:	fs gs ins BYTE PTR es:[rdi],dx
  40b70e:	and    BYTE PTR [rdi+0x72],dh
  40b711:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6e69206e
  40b719:	and    BYTE PTR [rdi+0x4e],al
  40b71c:	push   rbp
  40b71d:	and    BYTE PTR [rbp+0x61],cl
  40b720:	je     0x40b78a
  40b722:	push   rax
  40b723:	jb     0x40b794
  40b725:	and    BYTE PTR [ebp+0x6f],ch
  40b729:	fs gs ins BYTE PTR es:[rdi],dx
  40b72c:	imul   ebp,DWORD PTR [rsi+0x67],0xa
  40b733:	add    BYTE PTR [rax],al
  40b735:	add    BYTE PTR [rax],al
  40b737:	add    BYTE PTR [rax],ah
  40b739:	and    BYTE PTR [rax],ah
  40b73b:	and    BYTE PTR [rax],ah
  40b73d:	and    BYTE PTR [rax],ah
  40b73f:	and    BYTE PTR [rax],ah
  40b741:	and    BYTE PTR [rax],ah
  40b743:	and    BYTE PTR [rax],ah
  40b745:	and    BYTE PTR [rax],ah
  40b747:	and    BYTE PTR [rax],ah
  40b749:	and    BYTE PTR [rax],ah
  40b74b:	and    BYTE PTR [rax],ah
  40b74d:	ins    BYTE PTR es:[rdi],dx
  40b74e:	(bad)  
  40b74f:	outs   dx,BYTE PTR ds:[rsi]
  40b750:	addr32 jne 0x40b7b4
  40b753:	or     al,BYTE PTR gs:[eax]
  40b757:	add    BYTE PTR [rax],ah
  40b759:	and    BYTE PTR [rax],ah
  40b75b:	sub    eax,0x6966206d
  40b760:	ins    BYTE PTR es:[rdi],dx
  40b761:	outs   dx,BYTE PTR gs:[rsi]
  40b763:	(bad)  
  40b764:	ins    DWORD PTR es:[rdi],dx
  40b765:	gs sub al,0x20
  40b768:	sub    eax,0x646f6d2d
  40b76d:	gs ins BYTE PTR es:[rdi],dx
  40b76f:	and    BYTE PTR [rsi+0x69],ah
  40b772:	ins    BYTE PTR es:[rdi],dx
  40b773:	outs   dx,BYTE PTR gs:[rsi]
  40b775:	(bad)  
  40b776:	ins    DWORD PTR es:[rdi],dx
  40b777:	or     al,BYTE PTR gs:[rax]
  40b77a:	add    BYTE PTR [rax],al
  40b77c:	add    BYTE PTR [rax],al
  40b77e:	add    BYTE PTR [rax],al
  40b780:	and    BYTE PTR [rax],ah
  40b782:	and    BYTE PTR [rax],ah
  40b784:	and    BYTE PTR [rax],ah
  40b786:	and    BYTE PTR [rax],ah
  40b788:	and    BYTE PTR [rax],ah
  40b78a:	and    BYTE PTR [rax],ah
  40b78c:	and    BYTE PTR [rax],ah
  40b78e:	and    BYTE PTR [rax],ah
  40b790:	and    BYTE PTR [rax],ah
  40b792:	and    BYTE PTR [rax],ah
  40b794:	and    BYTE PTR [rdx+0x65],dh
  40b797:	(bad)  
  40b798:	and    BYTE PTR fs:[rbp+0x6f],ch
  40b79c:	fs gs ins BYTE PTR es:[rdi],dx
  40b79f:	and    BYTE PTR [rbx+0x65],dh
  40b7a2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40b7a6:	outs   dx,BYTE PTR ds:[rsi]
  40b7a7:	and    BYTE PTR [rcx+0x6e],ah
  40b7aa:	and    BYTE PTR fs:[rdi+0x70],ch
  40b7ae:	je     0x40b819
  40b7b0:	outs   dx,DWORD PTR ds:[rsi]
  40b7b1:	outs   dx,BYTE PTR ds:[rsi]
  40b7b2:	(bad)  
  40b7b3:	ins    BYTE PTR es:[rdi],dx
  40b7b4:	and    BYTE PTR [rcx+riz*2+0x74],ah
  40b7b8:	(bad)  
  40b7b9:	and    BYTE PTR [rbx+0x65],dh
  40b7bc:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40b7c0:	outs   dx,BYTE PTR ds:[rsi]
  40b7c1:	and    BYTE PTR [rsi+0x72],ah
  40b7c4:	outs   dx,DWORD PTR ds:[rsi]
  40b7c5:	ins    DWORD PTR es:[rdi],dx
  40b7c6:	or     al,BYTE PTR [rax]
  40b7c8:	and    BYTE PTR [rax],ah
  40b7ca:	and    BYTE PTR [rax],ah
  40b7cc:	and    BYTE PTR [rax],ah
  40b7ce:	and    BYTE PTR [rax],ah
  40b7d0:	and    BYTE PTR [rax],ah
  40b7d2:	and    BYTE PTR [rax],ah
  40b7d4:	and    BYTE PTR [rax],ah
  40b7d6:	and    BYTE PTR [rax],ah
  40b7d8:	and    BYTE PTR [rax],ah
  40b7da:	and    BYTE PTR [rax],ah
  40b7dc:	and    BYTE PTR [rsi+0x69],ah
  40b7df:	ins    BYTE PTR es:[rdi],dx
  40b7e0:	outs   dx,BYTE PTR gs:[rsi]
  40b7e2:	(bad)  
  40b7e3:	ins    DWORD PTR es:[rdi],dx
  40b7e4:	and    BYTE PTR gs:[rax],ch
  40b7e7:	jae    0x40b84a
  40b7e9:	ins    DWORD PTR es:[rdi],dx
  40b7ea:	and    BYTE PTR gs:[rcx+0x73],ah
  40b7ee:	and    BYTE PTR [rip+0x74616d2d],ch        # 0x74a22521
  40b7f4:	push   0x20000a29
  40b7f9:	and    BYTE PTR [rax],ah
  40b7fb:	sub    eax,0x69662064
  40b800:	ins    BYTE PTR es:[rdi],dx
  40b801:	outs   dx,BYTE PTR gs:[rsi]
  40b803:	(bad)  
  40b804:	ins    DWORD PTR es:[rdi],dx
  40b805:	gs sub al,0x20
  40b808:	sub    eax,0x7461642d
  40b80d:	(bad)  
  40b80e:	and    BYTE PTR [rsi+0x69],ah
  40b811:	ins    BYTE PTR es:[rdi],dx
  40b812:	outs   dx,BYTE PTR gs:[rsi]
  40b814:	(bad)  
  40b815:	ins    DWORD PTR es:[rdi],dx
  40b816:	or     al,BYTE PTR gs:[rax]
  40b819:	add    BYTE PTR [rax],al
  40b81b:	add    BYTE PTR [rax],al
  40b81d:	add    BYTE PTR [rax],al
  40b81f:	add    BYTE PTR [rax],ah
  40b821:	and    BYTE PTR [rax],ah
  40b823:	and    BYTE PTR [rax],ah
  40b825:	and    BYTE PTR [rax],ah
  40b827:	and    BYTE PTR [rax],ah
  40b829:	and    BYTE PTR [rax],ah
  40b82b:	and    BYTE PTR [rax],ah
  40b82d:	and    BYTE PTR [rax],ah
  40b82f:	and    BYTE PTR [rax],ah
  40b831:	and    BYTE PTR [rax],ah
  40b833:	and    BYTE PTR [rax],ah
  40b835:	jb     0x40b89c
  40b837:	(bad)  
  40b838:	and    BYTE PTR fs:[rcx+riz*2+0x74],ah
  40b83d:	(bad)  
  40b83e:	and    BYTE PTR [rbx+0x65],dh
  40b841:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40b845:	outs   dx,BYTE PTR ds:[rsi]
  40b846:	and    BYTE PTR [rsi+0x72],ah
  40b849:	outs   dx,DWORD PTR ds:[rsi]
  40b84a:	ins    DWORD PTR es:[rdi],dx
  40b84b:	and    BYTE PTR [rsi+0x69],ah
  40b84e:	ins    BYTE PTR es:[rdi],dx
  40b84f:	outs   dx,BYTE PTR gs:[rsi]
  40b851:	(bad)  
  40b852:	ins    DWORD PTR es:[rdi],dx
  40b853:	and    BYTE PTR gs:[rax],ch
  40b856:	outs   dx,WORD PTR ds:[rsi]
  40b858:	jb     0x40b87a
  40b85a:	sub    eax,0x74616d2d
  40b85f:	push   0x6c6e6f20
  40b864:	jns    0x40b88f
  40b866:	cmp    ecx,DWORD PTR [rdx]
	...
  40b870:	and    BYTE PTR [rax],ah
  40b872:	and    BYTE PTR [rax],ah
  40b874:	and    BYTE PTR [rax],ah
  40b876:	and    BYTE PTR [rax],ah
  40b878:	and    BYTE PTR [rax],ah
  40b87a:	and    BYTE PTR [rax],ah
  40b87c:	and    BYTE PTR [rax],ah
  40b87e:	and    BYTE PTR [rax],ah
  40b880:	and    BYTE PTR [rax],ah
  40b882:	and    BYTE PTR [rax],ah
  40b884:	and    BYTE PTR [rcx+0x66],ch
  40b887:	and    BYTE PTR [rbp+0x6f],ch
  40b88a:	fs gs ins BYTE PTR es:[rdi],dx
  40b88d:	and    BYTE PTR [rsi+0x69],ah
  40b890:	ins    BYTE PTR es:[rdi],dx
  40b891:	and    BYTE PTR gs:[rcx+0x6c],ah
  40b895:	jae    0x40b906
  40b897:	and    BYTE PTR [rax+0x61],ch
  40b89a:	jae    0x40b8bc
  40b89c:	fs (bad) 
  40b89e:	je     0x40b901
  40b8a0:	and    BYTE PTR [rbx+0x65],dh
  40b8a3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40b8a7:	outs   dx,BYTE PTR ds:[rsi]
  40b8a8:	sub    al,0x20
  40b8aa:	imul   esi,DWORD PTR [rax+riz*1+0x69],0x67692073
  40b8b2:	outs   dx,BYTE PTR ds:[rsi]
  40b8b3:	outs   dx,DWORD PTR ds:[rsi]
  40b8b4:	jb     0x40b91b
  40b8b6:	or     al,BYTE PTR fs:[rax]
  40b8b9:	add    BYTE PTR [rax],al
  40b8bb:	add    BYTE PTR [rax],al
  40b8bd:	add    BYTE PTR [rax],al
  40b8bf:	add    BYTE PTR [rax],ah
  40b8c1:	and    BYTE PTR [rax],ah
  40b8c3:	sub    eax,0x69662079
  40b8c8:	ins    BYTE PTR es:[rdi],dx
  40b8c9:	outs   dx,BYTE PTR gs:[rsi]
  40b8cb:	(bad)  
  40b8cc:	ins    DWORD PTR es:[rdi],dx
  40b8cd:	gs sub al,0x20
  40b8d0:	sub    eax,0x7369642d
  40b8d5:	jo     0x40b943
  40b8d7:	(bad)  
  40b8d8:	jns    0x40b8fa
  40b8da:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  40b8e1:	or     al,BYTE PTR gs:[rax]
  40b8e4:	add    BYTE PTR [rax],al
  40b8e6:	add    BYTE PTR [rax],al
  40b8e8:	and    BYTE PTR [rax],ah
  40b8ea:	and    BYTE PTR [rax],ah
  40b8ec:	and    BYTE PTR [rax],ah
  40b8ee:	and    BYTE PTR [rax],ah
  40b8f0:	and    BYTE PTR [rax],ah
  40b8f2:	and    BYTE PTR [rax],ah
  40b8f4:	and    BYTE PTR [rax],ah
  40b8f6:	and    BYTE PTR [rax],ah
  40b8f8:	and    BYTE PTR [rax],ah
  40b8fa:	and    BYTE PTR [rax],ah
  40b8fc:	and    BYTE PTR [rbx+0x65],dh
  40b8ff:	outs   dx,BYTE PTR ds:[rsi]
  40b900:	and    BYTE PTR fs:[rcx+rbp*2+0x73],ah
  40b905:	jo     0x40b973
  40b907:	(bad)  
  40b908:	jns    0x40b92a
  40b90a:	outs   dx,DWORD PTR ds:[rsi]
  40b90b:	jne    0x40b981
  40b90d:	jo     0x40b984
  40b90f:	je     0x40b931
  40b911:	je     0x40b982
  40b913:	and    BYTE PTR [rsi+0x69],ah
  40b916:	ins    BYTE PTR es:[rdi],dx
  40b917:	outs   dx,BYTE PTR gs:[rsi]
  40b919:	(bad)  
  40b91a:	ins    DWORD PTR es:[rdi],dx
  40b91b:	and    BYTE PTR gs:[rax],ch
  40b91e:	outs   dx,WORD PTR ds:[rsi]
  40b920:	jb     0x40b942
  40b922:	sub    eax,0x74616d2d
  40b927:	push   0x6c6e6f20
  40b92c:	jns    0x40b957
  40b92e:	cmp    ecx,DWORD PTR [rdx]
	...
  40b938:	and    BYTE PTR [rax],ah
  40b93a:	and    BYTE PTR [rax],ah
  40b93c:	and    BYTE PTR [rax],ah
  40b93e:	and    BYTE PTR [rax],ah
  40b940:	and    BYTE PTR [rax],ah
  40b942:	and    BYTE PTR [rax],ah
  40b944:	and    BYTE PTR [rax],ah
  40b946:	and    BYTE PTR [rax],ah
  40b948:	and    BYTE PTR [rax],ah
  40b94a:	and    BYTE PTR [rax],ah
  40b94c:	and    BYTE PTR [rdx+0x79],ah
  40b94f:	and    BYTE PTR [rbp+riz*2+0x66],ah
  40b953:	(bad)  
  40b954:	jne    0x40b9c2
  40b956:	je     0x40b978
  40b958:	je     0x40b9c2
  40b95a:	and    BYTE PTR gs:[rdi+0x75],ch
  40b95e:	je     0x40b9d0
  40b960:	jne    0x40b9d6
  40b962:	and    BYTE PTR [rcx+0x73],ch
  40b965:	and    BYTE PTR [rbx+0x65],dh
  40b968:	outs   dx,BYTE PTR ds:[rsi]
  40b969:	je     0x40b98b
  40b96b:	je     0x40b9dc
  40b96d:	and    BYTE PTR [rbp+riz*2+0x72],dh
  40b971:	ins    DWORD PTR es:[rdi],dx
  40b972:	imul   ebp,DWORD PTR [rsi+0x61],0x20000a6c
  40b979:	and    BYTE PTR [rax],ah
  40b97b:	sub    eax,0x6565732d
  40b980:	and    BYTE PTR fs:[rsi+0x61],dh
  40b984:	ins    BYTE PTR es:[rdi],dx
  40b985:	jne    0x40b9ec
  40b987:	and    BYTE PTR [rax],ah
  40b989:	and    BYTE PTR [rax],ah
  40b98b:	and    BYTE PTR [rax],ah
  40b98d:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  40b994:	imul   edi,DWORD PTR [rdx+0x65],0x65737020
  40b99b:	jne    0x40ba01
  40b99d:	outs   dx,DWORD PTR ds:[rsi]
  40b99e:	sub    eax,0x646e6172
  40b9a3:	outs   dx,DWORD PTR ds:[rsi]
  40b9a4:	ins    DWORD PTR es:[rdi],dx
  40b9a5:	and    BYTE PTR [rsi+0x75],ch
  40b9a8:	ins    DWORD PTR es:[rdi],dx
  40b9a9:	(bad)  
  40b9aa:	gs jb  0x40b9cd
  40b9ad:	outs   dx,BYTE PTR gs:[esi]
  40b9b0:	gs jb  0x40ba14
  40b9b3:	je     0x40ba24
  40b9b5:	jb     0x40b9d7
  40b9b7:	jne    0x40ba2c
  40b9b9:	gs and BYTE PTR fs:[rcx+0x6e],ch
  40b9be:	or     al,BYTE PTR [rax]
  40b9c0:	and    BYTE PTR [rax],ah
  40b9c2:	and    BYTE PTR [rax],ah
  40b9c4:	and    BYTE PTR [rax],ah
  40b9c6:	and    BYTE PTR [rax],ah
  40b9c8:	and    BYTE PTR [rax],ah
  40b9ca:	and    BYTE PTR [rax],ah
  40b9cc:	and    BYTE PTR [rax],ah
  40b9ce:	and    BYTE PTR [rax],ah
  40b9d0:	and    BYTE PTR [rax],ah
  40b9d2:	and    BYTE PTR [rax],ah
  40b9d4:	and    BYTE PTR [rbp+0x61],cl
  40b9d7:	je     0x40ba41
  40b9d9:	push   rax
  40b9da:	jb     0x40ba4b
  40b9dc:	and    BYTE PTR [ebp+0x6f],ch
  40b9e0:	fs gs ins BYTE PTR es:[rdi],dx
  40b9e3:	and    BYTE PTR [rdi+0x69],dh
  40b9e6:	je     0x40ba50
  40b9e8:	and    BYTE PTR [rbx+0x70],dh
  40b9eb:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40b9ef:	imul   esp,DWORD PTR [rbp+0x64],0x65657320
  40b9f6:	and    BYTE PTR fs:[rax],ch
  40b9f9:	(bad)  
  40b9fa:	outs   dx,BYTE PTR ds:[rsi]
  40b9fb:	jns    0x40ba1d
  40b9fd:	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
  40ba04:	sub    DWORD PTR [rbx],edi
  40ba06:	or     al,BYTE PTR [rax]
  40ba08:	and    BYTE PTR [rax],ah
  40ba0a:	and    BYTE PTR [rax],ah
  40ba0c:	and    BYTE PTR [rax],ah
  40ba0e:	and    BYTE PTR [rax],ah
  40ba10:	and    BYTE PTR [rax],ah
  40ba12:	and    BYTE PTR [rax],ah
  40ba14:	and    BYTE PTR [rax],ah
  40ba16:	and    BYTE PTR [rax],ah
  40ba18:	and    BYTE PTR [rax],ah
  40ba1a:	and    BYTE PTR [rax],ah
  40ba1c:	and    BYTE PTR [rcx+0x66],ch
  40ba1f:	and    BYTE PTR [rbx+0x65],dh
  40ba22:	gs and BYTE PTR fs:[rsi+0x61],dh
  40ba27:	ins    BYTE PTR es:[rdi],dx
  40ba28:	jne    0x40ba8f
  40ba2a:	and    BYTE PTR [rcx+0x73],ch
  40ba2d:	and    BYTE PTR [rdi],bh
  40ba2f:	sub    al,0x20
  40ba31:	jae    0x40baa2
  40ba33:	ins    DWORD PTR es:[rdi],dx
  40ba34:	and    BYTE PTR gs:[rdx+0x61],dh
  40ba38:	outs   dx,BYTE PTR ds:[rsi]
  40ba39:	outs   dx,DWORD PTR fs:[rsi]
  40ba3b:	ins    DWORD PTR es:[rdi],dx
  40ba3c:	and    BYTE PTR [rbx+0x65],dh
  40ba3f:	gs and BYTE PTR fs:[rdi+0x69],dh
  40ba44:	ins    BYTE PTR es:[rdi],dx
  40ba45:	ins    BYTE PTR es:[rdi],dx
  40ba46:	and    BYTE PTR [rdx+0x65],ah
  40ba49:	and    BYTE PTR [rbp+0x73],dh
  40ba4c:	gs or  al,BYTE PTR fs:[rax]
  40ba50:	and    BYTE PTR [rax],ah
  40ba52:	and    BYTE PTR [rip+0x6e696d2d],ch        # 0x6eaa2785
  40ba58:	movsxd ebp,DWORD PTR [rdi+0x73]
  40ba5b:	je     0x40ba7d
  40ba5d:	and    BYTE PTR [rax],ah
  40ba5f:	and    BYTE PTR [rax],ah
  40ba61:	and    BYTE PTR [rax],ah
  40ba63:	and    BYTE PTR [rax],ah
  40ba65:	jb     0x40bacc
  40ba67:	(bad)  
  40ba68:	and    BYTE PTR fs:[rbp+0x69],ch
  40ba6c:	outs   dx,BYTE PTR ds:[rsi]
  40ba6d:	sub    eax,0x74736f63
  40ba72:	and    BYTE PTR [rsi+0x6c],ah
  40ba75:	outs   dx,DWORD PTR ds:[rsi]
  40ba76:	ja     0x40ba98
  40ba78:	jo     0x40baec
  40ba7a:	outs   dx,DWORD PTR ds:[rsi]
  40ba7b:	(bad)  
  40ba7c:	ins    BYTE PTR es:[rdi],dx
  40ba7d:	gs ins DWORD PTR es:[rdi],dx
  40ba7f:	and    BYTE PTR [rcx+0x6e],ch
  40ba82:	and    BYTE PTR [rcx+rcx*2+0x4d],al
  40ba86:	rex.B
  40ba87:	rex.XB push r11
  40ba89:	and    BYTE PTR [rsi+0x6f],ah
  40ba8c:	jb     0x40bafb
  40ba8e:	(bad)  
  40ba8f:	je     0x40ba9b
  40ba91:	add    BYTE PTR [rax],al
  40ba93:	add    BYTE PTR [rax],al
  40ba95:	add    BYTE PTR [rax],al
  40ba97:	add    BYTE PTR [rax],ah
  40ba99:	and    BYTE PTR [rax],ah
  40ba9b:	sub    eax,0x78616d2d
  40baa0:	data16 ins BYTE PTR es:[rdi],dx
  40baa2:	outs   dx,DWORD PTR ds:[rsi]
  40baa3:	ja     0x40bac5
  40baa5:	and    BYTE PTR [rax],ah
  40baa7:	and    BYTE PTR [rax],ah
  40baa9:	and    BYTE PTR [rax],ah
  40baab:	and    BYTE PTR [rax],ah
  40baad:	jb     0x40bb14
  40baaf:	(bad)  
  40bab0:	and    BYTE PTR fs:[rbp+0x61],ch
  40bab4:	js     0x40bb1f
  40bab6:	ins    DWORD PTR es:[rdi],dx
  40bab7:	jne    0x40bb26
  40bab9:	and    BYTE PTR [rsi+0x6c],ah
  40babc:	outs   dx,DWORD PTR ds:[rsi]
  40babd:	ja     0x40badf
  40babf:	jo     0x40bb33
  40bac1:	outs   dx,DWORD PTR ds:[rsi]
  40bac2:	(bad)  
  40bac3:	ins    BYTE PTR es:[rdi],dx
  40bac4:	gs ins DWORD PTR es:[rdi],dx
  40bac6:	and    BYTE PTR [rcx+0x6e],ch
  40bac9:	and    BYTE PTR [rcx+rcx*2+0x4d],al
  40bacd:	rex.B
  40bace:	rex.XB push r11
  40bad0:	and    BYTE PTR [rsi+0x6f],ah
  40bad3:	jb     0x40bb42
  40bad5:	(bad)  
  40bad6:	je     0x40bae2
	...
  40bae0:	and    BYTE PTR [rax],ah
  40bae2:	and    BYTE PTR [rip+0x666e632d],ch        # 0x66af1e15
  40bae8:	and    BYTE PTR [rax],ah
  40baea:	and    BYTE PTR [rax],ah
  40baec:	and    BYTE PTR [rax],ah
  40baee:	and    BYTE PTR [rax],ah
  40baf0:	and    BYTE PTR [rax],ah
  40baf2:	and    BYTE PTR [rax],ah
  40baf4:	and    BYTE PTR [rdx+0x65],dh
  40baf7:	(bad)  
  40baf8:	and    BYTE PTR fs:[rbx+0x4e],al
  40bafc:	rex.RX sub eax,0x20544153
  40bb02:	jo     0x40bb76
  40bb04:	outs   dx,DWORD PTR ds:[rsi]
  40bb05:	(bad)  
  40bb06:	ins    BYTE PTR es:[rdi],dx
  40bb07:	gs ins DWORD PTR es:[rdi],dx
  40bb09:	and    BYTE PTR [rcx+0x6e],ch
  40bb0c:	and    BYTE PTR [rcx+rcx*2+0x4d],al
  40bb10:	rex.B
  40bb11:	rex.XB push r11
  40bb13:	and    BYTE PTR [rsi+0x6f],ah
  40bb16:	jb     0x40bb85
  40bb18:	(bad)  
  40bb19:	je     0x40bb25
  40bb1b:	add    BYTE PTR [rax],al
  40bb1d:	add    BYTE PTR [rax],al
  40bb1f:	add    BYTE PTR [rax],ah
  40bb21:	and    BYTE PTR [rax],ah
  40bb23:	sub    eax,0x6d69732d
  40bb28:	jo     0x40bb96
  40bb2a:	gs js  0x40bb4d
  40bb2d:	and    BYTE PTR [rax],ah
  40bb2f:	and    BYTE PTR [rax],ah
  40bb31:	and    BYTE PTR [rax],ah
  40bb33:	and    BYTE PTR [rax],ah
  40bb35:	jne    0x40bbaa
  40bb37:	and    BYTE PTR gs:[rbx+0x69],dh
  40bb3b:	ins    DWORD PTR es:[rdi],dx
  40bb3c:	jo     0x40bbaa
  40bb3e:	gs js  0x40bb61
  40bb41:	ins    DWORD PTR es:[rdi],dx
  40bb42:	gs je  0x40bbad
  40bb45:	outs   dx,DWORD PTR ds:[rsi]
  40bb46:	and    BYTE PTR fs:[rax],ch
  40bb49:	fs gs data16 (bad) 
  40bb4d:	jne    0x40bbbb
  40bb4f:	je     0x40bb7a
  40bb51:	or     al,BYTE PTR [rax]
  40bb53:	add    BYTE PTR [rax],al
  40bb55:	add    BYTE PTR [rax],al
  40bb57:	add    BYTE PTR [rax],ah
  40bb59:	and    BYTE PTR [rax],ah
  40bb5b:	sub    eax,0x746e692d
  40bb60:	gs jb  0x40bbcc
  40bb63:	outs   dx,DWORD PTR ds:[rsi]
  40bb64:	jb     0x40bb86
  40bb66:	and    BYTE PTR [rax],ah
  40bb68:	and    BYTE PTR [rax],ah
  40bb6a:	and    BYTE PTR [rax],ah
  40bb6c:	and    BYTE PTR [rbp+0x73],dh
  40bb6f:	and    BYTE PTR gs:[rcx+0x6e],ch
  40bb73:	je     0x40bbda
  40bb75:	jb     0x40bbe0
  40bb77:	outs   dx,DWORD PTR ds:[rsi]
  40bb78:	jb     0x40bb9a
  40bb7a:	jo     0x40bbeb
  40bb7c:	imul   ebp,DWORD PTR [rsi+0x74],0x74656d20
  40bb83:	push   0x2820646f
  40bb88:	rex.WR push rax
  40bb8a:	and    BYTE PTR [rdi+0x6e],ch
  40bb8d:	ins    BYTE PTR es:[rdi],dx
  40bb8e:	jns    0x40bbb9
  40bb90:	or     al,BYTE PTR [rax]
  40bb92:	add    BYTE PTR [rax],al
  40bb94:	add    BYTE PTR [rax],al
  40bb96:	add    BYTE PTR [rax],al
  40bb98:	and    BYTE PTR [rax],ah
  40bb9a:	and    BYTE PTR [rip+0x69662072],ch        # 0x69a6dc12
  40bba0:	ins    BYTE PTR es:[rdi],dx
  40bba1:	outs   dx,BYTE PTR gs:[rsi]
  40bba3:	(bad)  
  40bba4:	ins    DWORD PTR es:[rdi],dx
  40bba5:	gs sub al,0x20
  40bba8:	sub    eax,0x6165722d
  40bbad:	and    BYTE PTR fs:[rsi+0x69],ah
  40bbb1:	ins    BYTE PTR es:[rdi],dx
  40bbb2:	outs   dx,BYTE PTR gs:[rsi]
  40bbb4:	(bad)  
  40bbb5:	ins    DWORD PTR es:[rdi],dx
  40bbb6:	or     al,BYTE PTR gs:[rax]
  40bbb9:	add    BYTE PTR [rax],al
  40bbbb:	add    BYTE PTR [rax],al
  40bbbd:	add    BYTE PTR [rax],al
  40bbbf:	add    BYTE PTR [rax],ah
  40bbc1:	and    BYTE PTR [rax],ah
  40bbc3:	and    BYTE PTR [rax],ah
  40bbc5:	and    BYTE PTR [rax],ah
  40bbc7:	and    BYTE PTR [rax],ah
  40bbc9:	and    BYTE PTR [rax],ah
  40bbcb:	and    BYTE PTR [rax],ah
  40bbcd:	and    BYTE PTR [rax],ah
  40bbcf:	and    BYTE PTR [rax],ah
  40bbd1:	and    BYTE PTR [rax],ah
  40bbd3:	and    BYTE PTR [rax],ah
  40bbd5:	jb     0x40bc3c
  40bbd7:	(bad)  
  40bbd8:	and    BYTE PTR fs:[rbx+0x6f],dh
  40bbdc:	ins    BYTE PTR es:[rdi],dx
  40bbdd:	jne    0x40bc53
  40bbdf:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f726620
  40bbe6:	ins    DWORD PTR es:[rdi],dx
  40bbe7:	and    BYTE PTR [rsi+0x69],ah
  40bbea:	ins    BYTE PTR es:[rdi],dx
  40bbeb:	outs   dx,BYTE PTR gs:[rsi]
  40bbed:	(bad)  
  40bbee:	ins    DWORD PTR es:[rdi],dx
  40bbef:	and    BYTE PTR gs:[rdx+0x61],dh
  40bbf3:	je     0x40bc5d
  40bbf5:	gs jb  0x40bc18
  40bbf8:	je     0x40bc69
  40bbfa:	and    BYTE PTR [rsi+0x69],ah
  40bbfd:	outs   dx,BYTE PTR ds:[rsi]
  40bbfe:	and    BYTE PTR fs:[rcx+0x74],ch
  40bc02:	and    BYTE PTR [rdi+0x69],dh
  40bc05:	je     0x40bc6f
  40bc07:	or     al,BYTE PTR [rax]
  40bc09:	add    BYTE PTR [rax],al
  40bc0b:	add    BYTE PTR [rax],al
  40bc0d:	add    BYTE PTR [rax],al
  40bc0f:	add    BYTE PTR [rax],ah
  40bc11:	and    BYTE PTR [rax],ah
  40bc13:	and    BYTE PTR [rax],ah
  40bc15:	and    BYTE PTR [rax],ah
  40bc17:	and    BYTE PTR [rax],ah
  40bc19:	and    BYTE PTR [rax],ah
  40bc1b:	and    BYTE PTR [rax],ah
  40bc1d:	and    BYTE PTR [rax],ah
  40bc1f:	and    BYTE PTR [rax],ah
  40bc21:	and    BYTE PTR [rax],ah
  40bc23:	and    BYTE PTR [rax],ah
  40bc25:	je     0x40bc8f
  40bc27:	and    BYTE PTR gs:[rbx+0x6f],dh
  40bc2b:	ins    BYTE PTR es:[rdi],dx
  40bc2c:	jbe    0x40bc93
  40bc2e:	jb     0x40bc3a
	...
  40bc38:	and    BYTE PTR [rax],ah
  40bc3a:	and    BYTE PTR [rip+0x6e696d2d],ch        # 0x6eaa296d
  40bc40:	and    BYTE PTR [rax],ah
  40bc42:	and    BYTE PTR [rax],ah
  40bc44:	and    BYTE PTR [rax],ah
  40bc46:	and    BYTE PTR [rax],ah
  40bc48:	and    BYTE PTR [rax],ah
  40bc4a:	and    BYTE PTR [rax],ah
  40bc4c:	and    BYTE PTR [rbp+0x69],ch
  40bc4f:	outs   dx,BYTE PTR ds:[rsi]
  40bc50:	imul   ebp,DWORD PTR [rbp+0x69],0x6974617a
  40bc57:	outs   dx,DWORD PTR ds:[rsi]
  40bc58:	outs   dx,BYTE PTR ds:[rsi]
  40bc59:	or     al,BYTE PTR [rax]
  40bc5b:	add    BYTE PTR [rax],al
  40bc5d:	add    BYTE PTR [rax],al
  40bc5f:	add    BYTE PTR [rax],ah
  40bc61:	and    BYTE PTR [rax],ah
  40bc63:	sub    eax,0x78616d2d
  40bc68:	and    BYTE PTR [rax],ah
  40bc6a:	and    BYTE PTR [rax],ah
  40bc6c:	and    BYTE PTR [rax],ah
  40bc6e:	and    BYTE PTR [rax],ah
  40bc70:	and    BYTE PTR [rax],ah
  40bc72:	and    BYTE PTR [rax],ah
  40bc74:	and    BYTE PTR [rbp+0x61],ch
  40bc77:	js     0x40bce2
  40bc79:	ins    DWORD PTR es:[rdi],dx
  40bc7a:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  40bc81:	or     al,BYTE PTR [rax]
  40bc83:	add    BYTE PTR [rax],al
  40bc85:	add    BYTE PTR [rax],al
  40bc87:	add    BYTE PTR [rax],ah
  40bc89:	and    BYTE PTR [rax],ah
  40bc8b:	sub    eax,0x6163732d
  40bc90:	ins    BYTE PTR es:[rdi],dx
  40bc91:	and    BYTE PTR gs:[rax],ah
  40bc94:	and    BYTE PTR [rax],ah
  40bc96:	and    BYTE PTR [rax],ah
  40bc98:	and    BYTE PTR [rax],ah
  40bc9a:	and    BYTE PTR [rax],ah
  40bc9c:	and    BYTE PTR [rbx+0x63],dh
  40bc9f:	(bad)  
  40bca0:	ins    BYTE PTR es:[rdi],dx
  40bca1:	and    BYTE PTR gs:[rax+0x72],dh
  40bca5:	outs   dx,DWORD PTR ds:[rsi]
  40bca6:	(bad)  
  40bca7:	ins    BYTE PTR es:[rdi],dx
  40bca8:	gs ins DWORD PTR es:[rdi],dx
  40bcaa:	and    BYTE PTR [rax],ch
  40bcac:	fs gs data16 (bad) 
  40bcb0:	jne    0x40bd1e
  40bcb2:	je     0x40bcdd
  40bcb4:	or     al,BYTE PTR [rax]
  40bcb6:	add    BYTE PTR [rax],al
  40bcb8:	and    BYTE PTR [rax],ah
  40bcba:	and    BYTE PTR [rip+0x736f6e2d],ch        # 0x73b02aed
  40bcc0:	movsxd esp,DWORD PTR [rcx+0x6c]
  40bcc3:	and    BYTE PTR gs:[rax],ah
  40bcc6:	and    BYTE PTR [rax],ah
  40bcc8:	and    BYTE PTR [rax],ah
  40bcca:	and    BYTE PTR [rax],ah
  40bccc:	and    BYTE PTR [rdi+rbp*2+0x20],ah
  40bcd0:	outs   dx,BYTE PTR ds:[rsi]
  40bcd1:	outs   dx,DWORD PTR ds:[rsi]
  40bcd2:	je     0x40bcf4
  40bcd4:	jae    0x40bd39
  40bcd6:	(bad)  
  40bcd7:	ins    BYTE PTR es:[rdi],dx
  40bcd8:	and    BYTE PTR gs:[rax+0x72],dh
  40bcdc:	outs   dx,DWORD PTR ds:[rsi]
  40bcdd:	(bad)  
  40bcde:	ins    BYTE PTR es:[rdi],dx
  40bcdf:	gs ins DWORD PTR es:[rdi],dx
  40bce1:	or     al,BYTE PTR [rax]
  40bce3:	add    BYTE PTR [rax],al
  40bce5:	add    BYTE PTR [rax],al
  40bce7:	add    BYTE PTR [rax],ah
  40bce9:	and    BYTE PTR [rax],ah
  40bceb:	sub    eax,0x6966206f
  40bcf0:	ins    BYTE PTR es:[rdi],dx
  40bcf1:	outs   dx,BYTE PTR gs:[rsi]
  40bcf3:	(bad)  
  40bcf4:	ins    DWORD PTR es:[rdi],dx
  40bcf5:	gs sub al,0x20
  40bcf8:	sub    eax,0x74756f2d
  40bcfd:	jo     0x40bd74
  40bcff:	je     0x40bd21
  40bd01:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  40bd08:	or     al,BYTE PTR gs:[rax]
  40bd0b:	add    BYTE PTR [rax],al
  40bd0d:	add    BYTE PTR [rax],al
  40bd0f:	add    BYTE PTR [rax],ah
  40bd11:	and    BYTE PTR [rax],ah
  40bd13:	and    BYTE PTR [rax],ah
  40bd15:	and    BYTE PTR [rax],ah
  40bd17:	and    BYTE PTR [rax],ah
  40bd19:	and    BYTE PTR [rax],ah
  40bd1b:	and    BYTE PTR [rax],ah
  40bd1d:	and    BYTE PTR [rax],ah
  40bd1f:	and    BYTE PTR [rax],ah
  40bd21:	and    BYTE PTR [rax],ah
  40bd23:	and    BYTE PTR [rax],ah
  40bd25:	ja     0x40bd99
  40bd27:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x756c6f73
  40bd2f:	je     0x40bd9a
  40bd31:	outs   dx,DWORD PTR ds:[rsi]
  40bd32:	outs   dx,BYTE PTR ds:[rsi]
  40bd33:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40bd37:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  40bd3e:	and    BYTE PTR gs:[rcx+0x6e],ch
  40bd42:	and    BYTE PTR [rax+0x72],dh
  40bd45:	imul   ebp,DWORD PTR [rsi+0x74],0x656c6261
  40bd4c:	and    BYTE PTR [rsi+0x6f],ah
  40bd4f:	jb     0x40bdbe
  40bd51:	(bad)  
  40bd52:	je     0x40bd5e
  40bd54:	add    BYTE PTR [rax],al
  40bd56:	add    BYTE PTR [rax],al
  40bd58:	and    BYTE PTR [rax],ah
  40bd5a:	and    BYTE PTR [rip+0x69662077],ch        # 0x69a6ddd7
  40bd60:	ins    BYTE PTR es:[rdi],dx
  40bd61:	outs   dx,BYTE PTR gs:[rsi]
  40bd63:	(bad)  
  40bd64:	ins    DWORD PTR es:[rdi],dx
  40bd65:	gs sub al,0x20
  40bd68:	sub    eax,0x6972772d
  40bd6d:	je     0x40bdd4
  40bd6f:	and    BYTE PTR [rsi+0x69],ah
  40bd72:	ins    BYTE PTR es:[rdi],dx
  40bd73:	outs   dx,BYTE PTR gs:[rsi]
  40bd75:	(bad)  
  40bd76:	ins    DWORD PTR es:[rdi],dx
  40bd77:	or     al,BYTE PTR gs:[rax]
  40bd7a:	add    BYTE PTR [rax],al
  40bd7c:	add    BYTE PTR [rax],al
  40bd7e:	add    BYTE PTR [rax],al
  40bd80:	and    BYTE PTR [rax],ah
  40bd82:	and    BYTE PTR [rax],ah
  40bd84:	and    BYTE PTR [rax],ah
  40bd86:	and    BYTE PTR [rax],ah
  40bd88:	and    BYTE PTR [rax],ah
  40bd8a:	and    BYTE PTR [rax],ah
  40bd8c:	and    BYTE PTR [rax],ah
  40bd8e:	and    BYTE PTR [rax],ah
  40bd90:	and    BYTE PTR [rax],ah
  40bd92:	and    BYTE PTR [rax],ah
  40bd94:	and    BYTE PTR [rdi+0x72],dh
  40bd97:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x756c6f73
  40bd9f:	je     0x40be0a
  40bda1:	outs   dx,DWORD PTR ds:[rsi]
  40bda2:	outs   dx,BYTE PTR ds:[rsi]
  40bda3:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40bda7:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  40bdae:	and    BYTE PTR gs:[rcx+0x6e],ch
  40bdb2:	and    BYTE PTR [rax+0x6c],dh
  40bdb5:	(bad)  
  40bdb6:	imul   ebp,DWORD PTR [rsi+0x20],0x74786574
  40bdbd:	and    BYTE PTR [rsi+0x6f],ah
  40bdc0:	jb     0x40be2f
  40bdc2:	(bad)  
  40bdc3:	je     0x40bdcf
  40bdc5:	add    BYTE PTR [rax],ah
  40bdc7:	and    BYTE PTR [rax],ah
  40bdc9:	sub    eax,0x6e61722d
  40bdce:	addr32 gs jae 0x40bdf2
  40bdd2:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  40bdd9:	or     al,BYTE PTR gs:[rax]
  40bddc:	add    BYTE PTR [rax],al
  40bdde:	add    BYTE PTR [rax],al
  40bde0:	and    BYTE PTR [rax],ah
  40bde2:	and    BYTE PTR [rax],ah
  40bde4:	and    BYTE PTR [rax],ah
  40bde6:	and    BYTE PTR [rax],ah
  40bde8:	and    BYTE PTR [rax],ah
  40bdea:	and    BYTE PTR [rax],ah
  40bdec:	and    BYTE PTR [rax],ah
  40bdee:	and    BYTE PTR [rax],ah
  40bdf0:	and    BYTE PTR [rax],ah
  40bdf2:	and    BYTE PTR [rax],ah
  40bdf4:	and    BYTE PTR [rdi+0x72],dh
  40bdf7:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x736e6573
  40bdff:	imul   esi,DWORD PTR [rcx+rbp*2+0x76],0x20797469
  40be07:	(bad)  
  40be08:	outs   dx,BYTE PTR ds:[rsi]
  40be09:	(bad)  
  40be0a:	ins    BYTE PTR es:[rdi],dx
  40be0b:	jns    0x40be80
  40be0d:	imul   esi,DWORD PTR [rbx+0x20],0x6f706572
  40be14:	jb     0x40be8a
  40be16:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40be1a:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  40be21:	and    BYTE PTR gs:[rcx+0x6e],ch
  40be25:	or     al,BYTE PTR [rax]
  40be27:	add    BYTE PTR [rax],ah
  40be29:	and    BYTE PTR [rax],ah
  40be2b:	and    BYTE PTR [rax],ah
  40be2d:	and    BYTE PTR [rax],ah
  40be2f:	and    BYTE PTR [rax],ah
  40be31:	and    BYTE PTR [rax],ah
  40be33:	and    BYTE PTR [rax],ah
  40be35:	and    BYTE PTR [rax],ah
  40be37:	and    BYTE PTR [rax],ah
  40be39:	and    BYTE PTR [rax],ah
  40be3b:	and    BYTE PTR [rax],ah
  40be3d:	jo     0x40beb1
  40be3f:	imul   ebp,DWORD PTR [rsi+0x74],0x656c6261
  40be46:	and    BYTE PTR [rsi+0x6f],ah
  40be49:	jb     0x40beb8
  40be4b:	(bad)  
  40be4c:	je     0x40be6e
  40be4e:	sub    BYTE PTR [rbx+0x69],dh
  40be51:	ins    DWORD PTR es:[rdi],dx
  40be52:	jo     0x40bec0
  40be54:	gs js  0x40be77
  40be57:	outs   dx,DWORD PTR ds:[rsi]
  40be58:	outs   dx,BYTE PTR ds:[rsi]
  40be59:	ins    BYTE PTR es:[rdi],dx
  40be5a:	jns    0x40be85
  40be5c:	or     al,BYTE PTR [rax]
  40be5e:	add    BYTE PTR [rax],al
  40be60:	and    BYTE PTR [rax],ah
  40be62:	and    BYTE PTR [rip+0x6c6d742d],ch        # 0x6cae3295
  40be68:	imul   ebp,DWORD PTR [rbp+0x20],0x206e6e6e
  40be6f:	and    BYTE PTR [rax],ah
  40be71:	and    BYTE PTR [rax],ah
  40be73:	and    BYTE PTR [rax],ah
  40be75:	ins    BYTE PTR es:[rdi],dx
  40be76:	imul   ebp,DWORD PTR [rbp+0x69],0x6f732074
  40be7d:	ins    BYTE PTR es:[rdi],dx
  40be7e:	jne    0x40bef4
  40be80:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d697420
  40be87:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40be8c:	outs   dx,BYTE PTR ds:[rsi]
  40be8d:	outs   dx,BYTE PTR ds:[rsi]
  40be8e:	outs   dx,BYTE PTR ds:[rsi]
  40be8f:	and    BYTE PTR [rbx+0x65],dh
  40be92:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40be95:	fs jae 0x40beb8
  40be98:	or     al,BYTE PTR [rax]
  40be9a:	add    BYTE PTR [rax],al
  40be9c:	add    BYTE PTR [rax],al
  40be9e:	add    BYTE PTR [rax],al
  40bea0:	and    BYTE PTR [rax],ah
  40bea2:	and    BYTE PTR [rip+0x6d656d2d],ch        # 0x6da62bd5
  40bea8:	ins    BYTE PTR es:[rdi],dx
  40bea9:	imul   ebp,DWORD PTR [rbp+0x20],0x206e6e6e
  40beb0:	and    BYTE PTR [rax],ah
  40beb2:	and    BYTE PTR [rax],ah
  40beb4:	and    BYTE PTR [rcx+rbp*2+0x6d],ch
  40beb8:	imul   esi,DWORD PTR [rax+riz*1+0x61],0x6c696176
  40bec0:	(bad)  
  40bec1:	(bad)  
  40bec2:	ins    BYTE PTR es:[rdi],dx
  40bec3:	and    BYTE PTR gs:[rbp+0x65],ch
  40bec7:	ins    DWORD PTR es:[rdi],dx
  40bec8:	outs   dx,DWORD PTR ds:[rsi]
  40bec9:	jb     0x40bf44
  40becb:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40becf:	outs   dx,BYTE PTR ds:[rsi]
  40bed0:	outs   dx,BYTE PTR ds:[rsi]
  40bed1:	outs   dx,BYTE PTR ds:[rsi]
  40bed2:	and    BYTE PTR [rbp+0x65],ch
  40bed5:	addr32 (bad) 
  40bed7:	(bad)  
  40bed8:	jns    0x40bf4e
  40beda:	gs jae 0x40bee7
  40bedd:	add    BYTE PTR [rax],al
  40bedf:	add    BYTE PTR [rax],ah
  40bee1:	and    BYTE PTR [rax],ah
  40bee3:	sub    eax,0x6568632d
  40bee8:	movsxd ebp,DWORD PTR [rbx+0x20]
  40beeb:	and    BYTE PTR [rax],ah
  40beed:	and    BYTE PTR [rax],ah
  40beef:	and    BYTE PTR [rax],ah
  40bef1:	and    BYTE PTR [rax],ah
  40bef3:	and    BYTE PTR [rax],ah
  40bef5:	outs   dx,DWORD PTR fs:[rsi]
  40bef7:	and    BYTE PTR [rsi+0x6f],ch
  40befa:	je     0x40bf1c
  40befc:	jae    0x40bf6d
  40befe:	ins    BYTE PTR es:[rdi],dx
  40beff:	jbe    0x40bf66
  40bf01:	and    BYTE PTR [rax+0x72],dh
  40bf04:	outs   dx,DWORD PTR ds:[rsi]
  40bf05:	(bad)  
  40bf06:	ins    BYTE PTR es:[rdi],dx
  40bf07:	gs ins DWORD PTR es:[rdi],dx
  40bf09:	sub    al,0x20
  40bf0b:	movsxd ebp,DWORD PTR [rax+0x65]
  40bf0e:	movsxd ebp,DWORD PTR [rbx+0x20]
  40bf11:	imul   ebp,DWORD PTR [rsi+0x70],0x64207475
  40bf18:	(bad)  
  40bf19:	je     0x40bf7c
  40bf1b:	and    BYTE PTR [rdi+0x6e],ch
  40bf1e:	ins    BYTE PTR es:[rdi],dx
  40bf1f:	jns    0x40bf2b
  40bf21:	add    BYTE PTR [rax],al
  40bf23:	add    BYTE PTR [rax],al
  40bf25:	add    BYTE PTR [rax],al
  40bf27:	add    BYTE PTR [rax],ah
  40bf29:	and    BYTE PTR [rax],ah
  40bf2b:	sub    eax,0x6d616e2d
  40bf30:	and    BYTE PTR gs:[rax+0x72],dh
  40bf34:	outs   dx,DWORD PTR ds:[rsi]
  40bf35:	(bad)  
  40bf36:	outs   dx,BYTE PTR ds:[rsi]
  40bf37:	(bad)  
  40bf38:	ins    DWORD PTR es:[rdi],dx
  40bf39:	and    BYTE PTR gs:[rax],ah
  40bf3c:	and    BYTE PTR [rbx+0x68],ah
  40bf3f:	(bad)  
  40bf40:	outs   dx,BYTE PTR ds:[rsi]
  40bf41:	and    BYTE PTR gs:[eax+0x72],dh
  40bf46:	outs   dx,DWORD PTR ds:[rsi]
  40bf47:	(bad)  
  40bf48:	ins    BYTE PTR es:[rdi],dx
  40bf49:	gs ins DWORD PTR es:[rdi],dx
  40bf4b:	and    BYTE PTR [rsi+0x61],ch
  40bf4e:	ins    DWORD PTR es:[rdi],dx
  40bf4f:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40bf54:	jo     0x40bfc8
  40bf56:	outs   dx,DWORD PTR ds:[rsi]
  40bf57:	(bad)  
  40bf58:	outs   dx,BYTE PTR ds:[rsi]
  40bf59:	(bad)  
  40bf5a:	ins    DWORD PTR es:[rdi],dx
  40bf5b:	or     al,BYTE PTR gs:[rax]
  40bf5e:	add    BYTE PTR [rax],al
  40bf60:	and    BYTE PTR [rax],ah
  40bf62:	and    BYTE PTR [rip+0x706d772d],ch        # 0x70ae3695
  40bf68:	jae    0x40bf8a
  40bf6a:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  40bf71:	and    BYTE PTR gs:[rax],ah
  40bf74:	and    BYTE PTR [rdi+0x72],dh
  40bf77:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x626f7270
  40bf7f:	ins    BYTE PTR es:[rdi],dx
  40bf80:	gs ins DWORD PTR es:[rdi],dx
  40bf82:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40bf86:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  40bf8d:	and    BYTE PTR gs:[rcx+0x6e],ch
  40bf91:	and    BYTE PTR [rsi+0x69],ah
  40bf94:	js     0x40bffb
  40bf96:	and    BYTE PTR fs:[rbp+0x50],cl
  40bf9a:	push   rbx
  40bf9b:	and    BYTE PTR [rsi+0x6f],ah
  40bf9e:	jb     0x40c00d
  40bfa0:	(bad)  
  40bfa1:	je     0x40bfad
  40bfa3:	add    BYTE PTR [rax],ah
  40bfa5:	and    BYTE PTR [rax],ah
  40bfa7:	sub    eax,0x7266772d
  40bfac:	gs gs ins DWORD PTR es:[rdi],dx
  40bfaf:	jo     0x40c024
  40bfb1:	and    BYTE PTR [rsi+0x69],ah
  40bfb4:	ins    BYTE PTR es:[rdi],dx
  40bfb5:	outs   dx,BYTE PTR gs:[rsi]
  40bfb7:	(bad)  
  40bfb8:	ins    DWORD PTR es:[rdi],dx
  40bfb9:	or     al,BYTE PTR gs:[rax]
  40bfbc:	add    BYTE PTR [rax],al
  40bfbe:	add    BYTE PTR [rax],al
  40bfc0:	and    BYTE PTR [rax],ah
  40bfc2:	and    BYTE PTR [rax],ah
  40bfc4:	and    BYTE PTR [rax],ah
  40bfc6:	and    BYTE PTR [rax],ah
  40bfc8:	and    BYTE PTR [rax],ah
  40bfca:	and    BYTE PTR [rax],ah
  40bfcc:	and    BYTE PTR [rax],ah
  40bfce:	and    BYTE PTR [rax],ah
  40bfd0:	and    BYTE PTR [rax],ah
  40bfd2:	and    BYTE PTR [rax],ah
  40bfd4:	and    BYTE PTR [rdi+0x72],dh
  40bfd7:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x626f7270
  40bfdf:	ins    BYTE PTR es:[rdi],dx
  40bfe0:	gs ins DWORD PTR es:[rdi],dx
  40bfe2:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40bfe6:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  40bfed:	and    BYTE PTR gs:[rcx+0x6e],ch
  40bff1:	and    BYTE PTR [rsi+0x72],ah
  40bff4:	gs and BYTE PTR gs:[rbp+0x50],cl
  40bff9:	push   rbx
  40bffa:	and    BYTE PTR [rsi+0x6f],ah
  40bffd:	jb     0x40c06c
  40bfff:	(bad)  
  40c000:	je     0x40c00c
  40c002:	add    BYTE PTR [rax],al
  40c004:	add    BYTE PTR [rax],al
  40c006:	add    BYTE PTR [rax],al
  40c008:	and    BYTE PTR [rax],ah
  40c00a:	and    BYTE PTR [rip+0x706c772d],ch        # 0x70ad373d
  40c010:	and    BYTE PTR [rsi+0x69],ah
  40c013:	ins    BYTE PTR es:[rdi],dx
  40c014:	outs   dx,BYTE PTR gs:[rsi]
  40c016:	(bad)  
  40c017:	ins    DWORD PTR es:[rdi],dx
  40c018:	and    BYTE PTR gs:[rax],ah
  40c01b:	and    BYTE PTR [rax],ah
  40c01d:	ja     0x40c091
  40c01f:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x626f7270
  40c027:	ins    BYTE PTR es:[rdi],dx
  40c028:	gs ins DWORD PTR es:[rdi],dx
  40c02a:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40c02e:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  40c035:	and    BYTE PTR gs:[rcx+0x6e],ch
  40c039:	and    BYTE PTR [rbx+0x50],al
  40c03c:	rex.WR
  40c03d:	rex.RB pop r8
  40c03f:	and    BYTE PTR [rax+rdx*2+0x20],cl
  40c043:	outs   dx,WORD PTR ds:[rsi]
  40c045:	jb     0x40c0b4
  40c047:	(bad)  
  40c048:	je     0x40c054
  40c04a:	add    BYTE PTR [rax],al
  40c04c:	add    BYTE PTR [rax],al
  40c04e:	add    BYTE PTR [rax],al
  40c050:	and    BYTE PTR [rax],ah
  40c052:	and    BYTE PTR [rip+0x6c67772d],ch        # 0x6ca83785
  40c058:	jo     0x40c07a
  40c05a:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  40c061:	and    BYTE PTR gs:[rax],ah
  40c064:	and    BYTE PTR [rdi+0x72],dh
  40c067:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x626f7270
  40c06f:	ins    BYTE PTR es:[rdi],dx
  40c070:	gs ins DWORD PTR es:[rdi],dx
  40c072:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40c076:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  40c07d:	and    BYTE PTR gs:[rcx+0x6e],ch
  40c081:	and    BYTE PTR [rdi+0x4c],al
  40c084:	push   rax
  40c085:	rex.WXB and BYTE PTR [r14+0x6f],spl
  40c089:	jb     0x40c0f8
  40c08b:	(bad)  
  40c08c:	je     0x40c098
  40c08e:	add    BYTE PTR [rax],al
  40c090:	and    BYTE PTR [rax],ah
  40c092:	and    BYTE PTR [rip+0x6e63772d],ch        # 0x6ea437c5
  40c098:	data16 and BYTE PTR [rsi+0x69],ah
  40c09c:	ins    BYTE PTR es:[rdi],dx
  40c09d:	outs   dx,BYTE PTR gs:[rsi]
  40c09f:	(bad)  
  40c0a0:	ins    DWORD PTR es:[rdi],dx
  40c0a1:	and    BYTE PTR gs:[rax],ah
  40c0a4:	and    BYTE PTR [rdi+0x72],dh
  40c0a7:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x626f7270
  40c0af:	ins    BYTE PTR es:[rdi],dx
  40c0b0:	gs ins DWORD PTR es:[rdi],dx
  40c0b2:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40c0b6:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  40c0bd:	and    BYTE PTR gs:[rcx+0x6e],ch
  40c0c1:	and    BYTE PTR [rcx+rcx*2+0x4d],al
  40c0c5:	rex.B
  40c0c6:	rex.XB push r11
  40c0c8:	and    BYTE PTR [rbx+0x4e],al
  40c0cb:	rex.RX sub eax,0x20544153
  40c0d1:	outs   dx,WORD PTR ds:[rsi]
  40c0d3:	jb     0x40c142
  40c0d5:	(bad)  
  40c0d6:	je     0x40c0e2
	...
  40c0e0:	and    BYTE PTR [rax],ah
  40c0e2:	and    BYTE PTR [rip+0x676f6c2d],ch        # 0x67b02d15
  40c0e8:	and    BYTE PTR [rsi+0x69],ah
  40c0eb:	ins    BYTE PTR es:[rdi],dx
  40c0ec:	outs   dx,BYTE PTR gs:[rsi]
  40c0ee:	(bad)  
  40c0ef:	ins    DWORD PTR es:[rdi],dx
  40c0f0:	and    BYTE PTR gs:[rax],ah
  40c0f3:	and    BYTE PTR [rax],ah
  40c0f5:	ja     0x40c169
  40c0f7:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x79706f63
  40c0ff:	and    BYTE PTR [rdi+0x66],ch
  40c102:	and    BYTE PTR [rbp+riz*2+0x72],dh
  40c106:	ins    DWORD PTR es:[rdi],dx
  40c107:	imul   ebp,DWORD PTR [rsi+0x61],0x756f206c
  40c10e:	je     0x40c180
  40c110:	jne    0x40c186
  40c112:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40c116:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  40c11d:	or     al,BYTE PTR gs:[rax]
  40c120:	and    BYTE PTR [rax],ah
  40c122:	and    BYTE PTR [rip+0x2d202c68],ch        # 0x2d60ed90
  40c128:	sub    eax,0x706c6568
  40c12d:	and    BYTE PTR [rax],ah
  40c12f:	and    BYTE PTR [rax],ah
  40c131:	and    BYTE PTR [rax],ah
  40c133:	and    BYTE PTR [rax],ah
  40c135:	imul   esi,DWORD PTR fs:[rbx+0x70],0x2079616c
  40c13d:	je     0x40c1a7
  40c13f:	imul   esi,DWORD PTR [rbx+0x20],0x706c6568
  40c146:	and    BYTE PTR [rcx+0x6e],ch
  40c149:	outs   dx,WORD PTR ds:[rsi]
  40c14b:	jb     0x40c1ba
  40c14d:	(bad)  
  40c14e:	je     0x40c1b9
  40c150:	outs   dx,DWORD PTR ds:[rsi]
  40c151:	outs   dx,BYTE PTR ds:[rsi]
  40c152:	and    BYTE PTR [rcx+0x6e],ah
  40c155:	and    BYTE PTR fs:[rbp+0x78],ah
  40c159:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x20000000
  40c161:	and    BYTE PTR [rax],ah
  40c163:	sub    eax,0x2d202c76
  40c168:	sub    eax,0x73726576
  40c16d:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202020
  40c174:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  40c178:	jo     0x40c1e6
  40c17a:	(bad)  
  40c17b:	jns    0x40c19d
  40c17d:	jo     0x40c1f1
  40c17f:	outs   dx,DWORD PTR ds:[rsi]
  40c180:	addr32 jb 0x40c1e4
  40c183:	ins    DWORD PTR es:[rdi],dx
  40c184:	and    BYTE PTR [rsi+0x65],dh
  40c187:	jb     0x40c1fc
  40c189:	imul   ebp,DWORD PTR [rdi+0x6e],0x646e6120
  40c190:	and    BYTE PTR [rbp+0x78],ah
  40c193:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x20504c00
  40c19b:	(bad)  
  40c19d:	jae    0x40c208
  40c19f:	jae    0x40c1c1
  40c1a1:	data16 (bad) 
  40c1a3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  40c1a7:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  40c1ae:	and    BYTE PTR [rdi+0x70],ch
  40c1b1:	je     0x40c21c
  40c1b3:	outs   dx,DWORD PTR ds:[rsi]
  40c1b4:	outs   dx,BYTE PTR ds:[rsi]
  40c1b5:	jae    0x40c1f1
  40c1b7:	or     al,BYTE PTR [rax]
  40c1b9:	add    BYTE PTR [rax],al
  40c1bb:	add    BYTE PTR [rax],al
  40c1bd:	add    BYTE PTR [rax],al
  40c1bf:	add    BYTE PTR [rax],ah
  40c1c1:	and    BYTE PTR [rax],ah
  40c1c3:	sub    eax,0x66756c2d
  40c1c8:	and    BYTE PTR [rax],ah
  40c1ca:	and    BYTE PTR [rax],ah
  40c1cc:	and    BYTE PTR [rax],ah
  40c1ce:	and    BYTE PTR [rax],ah
  40c1d0:	and    BYTE PTR [rax],ah
  40c1d2:	and    BYTE PTR [rax],ah
  40c1d4:	and    BYTE PTR [rax+0x6c],dh
  40c1d7:	(bad)  
  40c1d8:	imul   ebp,DWORD PTR [rsi+0x20],0x662d554c
  40c1df:	(bad)  
  40c1e0:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  40c1e4:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  40c1eb:	and    BYTE PTR [rax],ch
  40c1ed:	fs gs data16 (bad) 
  40c1f1:	jne    0x40c25f
  40c1f3:	je     0x40c21e
  40c1f5:	or     al,BYTE PTR [rax]
  40c1f7:	add    BYTE PTR [rax],ah
  40c1f9:	and    BYTE PTR [rax],ah
  40c1fb:	sub    eax,0x6674622d
  40c200:	and    BYTE PTR [rax],ah
  40c202:	and    BYTE PTR [rax],ah
  40c204:	and    BYTE PTR [rax],ah
  40c206:	and    BYTE PTR [rax],ah
  40c208:	and    BYTE PTR [rax],ah
  40c20a:	and    BYTE PTR [rax],ah
  40c20c:	and    BYTE PTR [rdx+0x6c],ah
  40c20f:	outs   dx,DWORD PTR ds:[rsi]
  40c210:	movsxd ebp,DWORD PTR [rbx+0x20]
  40c213:	je     0x40c287
  40c215:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  40c21c:	jb     0x40c23e
  40c21e:	rex.WR push rbp
  40c220:	sub    eax,0x74636166
  40c225:	outs   dx,DWORD PTR ds:[rsi]
  40c226:	jb     0x40c291
  40c228:	jp     0x40c28b
  40c22a:	je     0x40c295
  40c22c:	outs   dx,DWORD PTR ds:[rsi]
  40c22d:	outs   dx,BYTE PTR ds:[rsi]
  40c22e:	or     al,BYTE PTR [rax]
  40c230:	and    BYTE PTR [rax],ah
  40c232:	and    BYTE PTR [rip+0x2074662d],ch        # 0x20b52865
  40c238:	and    BYTE PTR [rax],ah
  40c23a:	and    BYTE PTR [rax],ah
  40c23c:	and    BYTE PTR [rax],ah
  40c23e:	and    BYTE PTR [rax],ah
  40c240:	and    BYTE PTR [rax],ah
  40c242:	and    BYTE PTR [rax],ah
  40c244:	and    BYTE PTR [rsi+0x6f],al
  40c247:	jb     0x40c2bb
  40c249:	gs jae 0x40c2c0
  40c24c:	sub    eax,0x6c6d6f54
  40c251:	imul   ebp,DWORD PTR [rsi+0x20],0x61647075
  40c258:	je     0x40c2bf
  40c25a:	and    BYTE PTR [rax],ch
  40c25c:	jb     0x40c2c3
  40c25e:	jno    0x40c2d5
  40c260:	imul   esi,DWORD PTR [rdx+0x65],0x2d2d2073
  40c267:	ins    BYTE PTR es:[rdi],dx
  40c268:	jne    0x40c2d0
  40c26a:	cmp    esp,DWORD PTR [rax]
  40c26c:	fs gs data16 (bad) 
  40c270:	jne    0x40c2de
  40c272:	je     0x40c29d
  40c274:	or     al,BYTE PTR [rax]
  40c276:	add    BYTE PTR [rax],al
  40c278:	and    BYTE PTR [rax],ah
  40c27a:	and    BYTE PTR [rip+0x6762632d],ch        # 0x67a325ad
  40c280:	and    BYTE PTR [rax],ah
  40c282:	and    BYTE PTR [rax],ah
  40c284:	and    BYTE PTR [rax],ah
  40c286:	and    BYTE PTR [rax],ah
  40c288:	and    BYTE PTR [rax],ah
  40c28a:	and    BYTE PTR [rax],ah
  40c28c:	and    BYTE PTR [rbx+0x63],dl
  40c28f:	push   0x63207275
  40c294:	outs   dx,DWORD PTR ds:[rsi]
  40c295:	ins    DWORD PTR es:[rdi],dx
  40c296:	jo     0x40c304
  40c298:	gs ins DWORD PTR es:[rdi],dx
  40c29a:	outs   dx,BYTE PTR gs:[rsi]
  40c29c:	je     0x40c2be
  40c29e:	sub    esp,DWORD PTR [rax]
  40c2a0:	rex.X (bad) 
  40c2a2:	jb     0x40c318
  40c2a4:	gs ins BYTE PTR es:[rdi],dx
  40c2a6:	jae    0x40c2d5
  40c2a8:	rex.RXB outs dx,DWORD PTR ds:[rsi]
  40c2aa:	ins    BYTE PTR es:[rdi],dx
  40c2ab:	jne    0x40c30f
  40c2ad:	and    BYTE PTR [rbp+0x70],dh
  40c2b0:	fs (bad) 
  40c2b2:	je     0x40c319
  40c2b4:	or     al,BYTE PTR [rax]
  40c2b6:	add    BYTE PTR [rax],al
  40c2b8:	and    BYTE PTR [rax],ah
  40c2ba:	and    BYTE PTR [rip+0x7267632d],ch        # 0x72a825ed
  40c2c0:	and    BYTE PTR [rax],ah
  40c2c2:	and    BYTE PTR [rax],ah
  40c2c4:	and    BYTE PTR [rax],ah
  40c2c6:	and    BYTE PTR [rax],ah
  40c2c8:	and    BYTE PTR [rax],ah
  40c2ca:	and    BYTE PTR [rax],ah
  40c2cc:	and    BYTE PTR [rbx+0x63],dl
  40c2cf:	push   0x63207275
  40c2d4:	outs   dx,DWORD PTR ds:[rsi]
  40c2d5:	ins    DWORD PTR es:[rdi],dx
  40c2d6:	jo     0x40c344
  40c2d8:	gs ins DWORD PTR es:[rdi],dx
  40c2da:	outs   dx,BYTE PTR gs:[rsi]
  40c2dc:	je     0x40c2fe
  40c2de:	sub    esp,DWORD PTR [rax]
  40c2e0:	rex.RXB imul r14d,DWORD PTR [r14+0x65],0x7220736e
  40c2e8:	outs   dx,DWORD PTR ds:[rsi]
  40c2e9:	je     0x40c34c
  40c2eb:	je     0x40c356
  40c2ed:	outs   dx,DWORD PTR ds:[rsi]
  40c2ee:	outs   dx,BYTE PTR ds:[rsi]
  40c2ef:	and    BYTE PTR [rbp+0x70],dh
  40c2f2:	fs (bad) 
  40c2f4:	je     0x40c35b
  40c2f6:	or     al,BYTE PTR [rax]
  40c2f8:	rex.WRXB jo 0x40c36f
  40c2fb:	imul   ebp,DWORD PTR [rdi+0x6e],0x70732073
  40c302:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40c306:	imul   esp,DWORD PTR [rbx+0x20],0x73206f74
  40c30d:	imul   ebp,DWORD PTR [rbp+0x70],0x2078656c
  40c314:	jae    0x40c385
  40c316:	ins    BYTE PTR es:[rdi],dx
  40c317:	jbe    0x40c37e
  40c319:	jb     0x40c355
  40c31b:	or     al,BYTE PTR [rax]
  40c31d:	add    BYTE PTR [rax],al
  40c31f:	add    BYTE PTR [rax],ah
  40c321:	and    BYTE PTR [rax],ah
  40c323:	sub    eax,0x6972702d
  40c328:	ins    DWORD PTR es:[rdi],dx
  40c329:	(bad)  
  40c32a:	ins    BYTE PTR es:[rdi],dx
  40c32b:	and    BYTE PTR [rax],ah
  40c32d:	and    BYTE PTR [rax],ah
  40c32f:	and    BYTE PTR [rax],ah
  40c331:	and    BYTE PTR [rax],ah
  40c333:	and    BYTE PTR [rax],ah
  40c335:	jne    0x40c3aa
  40c337:	and    BYTE PTR gs:[rax+0x72],dh
  40c33b:	imul   ebp,DWORD PTR [rbp+0x61],0x6973206c
  40c342:	ins    DWORD PTR es:[rdi],dx
  40c343:	jo     0x40c3b1
  40c345:	gs js  0x40c368
  40c348:	sub    BYTE PTR [rbp+riz*2+0x66],ah
  40c34c:	(bad)  
  40c34d:	jne    0x40c3bb
  40c34f:	je     0x40c37a
  40c351:	or     al,BYTE PTR [rax]
  40c353:	add    BYTE PTR [rax],al
  40c355:	add    BYTE PTR [rax],al
  40c357:	add    BYTE PTR [rax],ah
  40c359:	and    BYTE PTR [rax],ah
  40c35b:	sub    eax,0x6175642d
  40c360:	ins    BYTE PTR es:[rdi],dx
  40c361:	and    BYTE PTR [rax],ah
  40c363:	and    BYTE PTR [rax],ah
  40c365:	and    BYTE PTR [rax],ah
  40c367:	and    BYTE PTR [rax],ah
  40c369:	and    BYTE PTR [rax],ah
  40c36b:	and    BYTE PTR [rax],ah
  40c36d:	jne    0x40c3e2
  40c36f:	and    BYTE PTR gs:[rbp+rsi*2+0x61],ah
  40c374:	ins    BYTE PTR es:[rdi],dx
  40c375:	and    BYTE PTR [rbx+0x69],dh
  40c378:	ins    DWORD PTR es:[rdi],dx
  40c379:	jo     0x40c3e7
  40c37b:	gs js  0x40c388
  40c37e:	add    BYTE PTR [rax],al
  40c380:	and    BYTE PTR [rax],ah
  40c382:	and    BYTE PTR [rip+0x6474732d],ch        # 0x64b536b5
  40c388:	and    BYTE PTR [rax],ah
  40c38a:	and    BYTE PTR [rax],ah
  40c38c:	and    BYTE PTR [rax],ah
  40c38e:	and    BYTE PTR [rax],ah
  40c390:	and    BYTE PTR [rax],ah
  40c392:	and    BYTE PTR [rax],ah
  40c394:	and    BYTE PTR [rbp+0x73],dh
  40c397:	and    BYTE PTR gs:[rbx+0x74],dh
  40c39b:	(bad)  
  40c39c:	outs   dx,BYTE PTR ds:[rsi]
  40c39d:	fs (bad) 
  40c39f:	jb     0x40c405
  40c3a1:	and    BYTE PTR [rcx+0x6e],ch
  40c3a4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x6162206c
  40c3ac:	jae    0x40c417
  40c3ae:	jae    0x40c3d0
  40c3b0:	outs   dx,DWORD PTR ds:[rsi]
  40c3b1:	data16 and BYTE PTR [rcx+0x6c],ah
  40c3b5:	ins    BYTE PTR es:[rdi],dx
  40c3b6:	and    BYTE PTR [rbx+0x6c],dh
  40c3b9:	(bad)  
  40c3ba:	movsxd ebp,DWORD PTR [rbx+0x73]
  40c3bd:	or     al,BYTE PTR [rax]
  40c3bf:	add    BYTE PTR [rax],ah
  40c3c1:	and    BYTE PTR [rax],ah
  40c3c3:	sub    eax,0x7664612d
  40c3c8:	and    BYTE PTR [rax],ah
  40c3ca:	and    BYTE PTR [rax],ah
  40c3cc:	and    BYTE PTR [rax],ah
  40c3ce:	and    BYTE PTR [rax],ah
  40c3d0:	and    BYTE PTR [rax],ah
  40c3d2:	and    BYTE PTR [rax],ah
  40c3d4:	and    BYTE PTR [rbp+0x73],dh
  40c3d7:	and    BYTE PTR gs:[rcx+0x64],ah
  40c3db:	jbe    0x40c43e
  40c3dd:	outs   dx,BYTE PTR ds:[rsi]
  40c3de:	movsxd esp,DWORD PTR [rbp+0x64]
  40c3e1:	and    BYTE PTR [rcx+0x6e],ch
  40c3e4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x6162206c
  40c3ec:	jae    0x40c457
  40c3ee:	jae    0x40c410
  40c3f0:	sub    BYTE PTR [rbp+riz*2+0x66],ah
  40c3f4:	(bad)  
  40c3f5:	jne    0x40c463
  40c3f7:	je     0x40c422
  40c3f9:	or     al,BYTE PTR [rax]
  40c3fb:	add    BYTE PTR [rax],al
  40c3fd:	add    BYTE PTR [rax],al
  40c3ff:	add    BYTE PTR [rax],ah
  40c401:	and    BYTE PTR [rax],ah
  40c403:	sub    eax,0x6269622d
  40c408:	and    BYTE PTR [rax],ah
  40c40a:	and    BYTE PTR [rax],ah
  40c40c:	and    BYTE PTR [rax],ah
  40c40e:	and    BYTE PTR [rax],ah
  40c410:	and    BYTE PTR [rax],ah
  40c412:	and    BYTE PTR [rax],ah
  40c414:	and    BYTE PTR [rbp+0x73],dh
  40c417:	and    BYTE PTR gs:[rdx+0x69],al
  40c41b:	js     0x40c47f
  40c41d:	jns    0x40c446
  40c41f:	jae    0x40c441
  40c421:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  40c428:	and    BYTE PTR [rdx+0x61],ah
  40c42b:	jae    0x40c496
  40c42d:	jae    0x40c439
  40c42f:	add    BYTE PTR [rax],ah
  40c431:	and    BYTE PTR [rax],ah
  40c433:	sub    eax,0x696e692d
  40c438:	and    BYTE PTR [rsi+0x69],ah
  40c43b:	ins    BYTE PTR es:[rdi],dx
  40c43c:	outs   dx,BYTE PTR gs:[rsi]
  40c43e:	(bad)  
  40c43f:	ins    DWORD PTR es:[rdi],dx
  40c440:	and    BYTE PTR gs:[rax],ah
  40c443:	and    BYTE PTR [rax],ah
  40c445:	jne    0x40c4ba
  40c447:	and    BYTE PTR gs:[rcx+0x73],ah
  40c44b:	and    BYTE PTR [rcx+0x6e],ch
  40c44e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x6162206c
  40c456:	jae    0x40c4c1
  40c458:	jae    0x40c47a
  40c45a:	jo     0x40c4ce
  40c45c:	gs jbe 0x40c4c8
  40c45f:	outs   dx,DWORD PTR ds:[rsi]
  40c460:	jne    0x40c4d5
  40c462:	ins    BYTE PTR es:[rdi],dx
  40c463:	jns    0x40c485
  40c465:	jae    0x40c4c8
  40c467:	jbe    0x40c4ce
  40c469:	and    BYTE PTR fs:[rdi+0x69],dh
  40c46d:	je     0x40c4d7
  40c46f:	and    BYTE PTR [rip+0xa77],ch        # 0x40ceec
  40c475:	add    BYTE PTR [rax],al
  40c477:	add    BYTE PTR [rax],ah
  40c479:	and    BYTE PTR [rax],ah
  40c47b:	and    BYTE PTR [rax],ah
  40c47d:	and    BYTE PTR [rax],ah
  40c47f:	and    BYTE PTR [rax],ah
  40c481:	and    BYTE PTR [rax],ah
  40c483:	and    BYTE PTR [rax],ah
  40c485:	and    BYTE PTR [rax],ah
  40c487:	and    BYTE PTR [rax],ah
  40c489:	and    BYTE PTR [rax],ah
  40c48b:	and    BYTE PTR [rax],ah
  40c48d:	sub    BYTE PTR [rcx+rbp*2+0x73],ah
  40c491:	(bad)  
  40c492:	(bad)  
  40c493:	ins    BYTE PTR es:[rdi],dx
  40c494:	gs jae 0x40c4b7
  40c497:	rex.WR push rax
  40c499:	and    BYTE PTR [rax+0x72],dh
  40c49c:	gs jae 0x40c50e
  40c49f:	ins    BYTE PTR es:[rdi],dx
  40c4a0:	jbe    0x40c507
  40c4a2:	jb     0x40c4cd
  40c4a4:	or     al,BYTE PTR [rax]
  40c4a6:	add    BYTE PTR [rax],al
  40c4a8:	and    BYTE PTR [rax],ah
  40c4aa:	and    BYTE PTR [rip+0x6574732d],ch        # 0x65b537dd
  40c4b0:	gs jo  0x40c4d3
  40c4b3:	and    BYTE PTR [rax],ah
  40c4b5:	and    BYTE PTR [rax],ah
  40c4b7:	and    BYTE PTR [rax],ah
  40c4b9:	and    BYTE PTR [rax],ah
  40c4bb:	and    BYTE PTR [rax],ah
  40c4bd:	jne    0x40c532
  40c4bf:	and    BYTE PTR gs:[rbx+0x74],dh
  40c4c3:	gs gs jo 0x40c52c
  40c4c7:	jae    0x40c53d
  40c4c9:	and    BYTE PTR [rbp+0x64],ah
  40c4cc:	and    BYTE PTR gs:[ebp+eiz*2+0x63],dh
  40c4d2:	push   0x7571696e
  40c4d7:	and    BYTE PTR gs:[rax],ch
  40c4da:	fs gs data16 (bad) 
  40c4de:	jne    0x40c54c
  40c4e0:	je     0x40c50b
  40c4e2:	or     al,BYTE PTR [rax]
  40c4e4:	add    BYTE PTR [rax],al
  40c4e6:	add    BYTE PTR [rax],al
  40c4e8:	and    BYTE PTR [rax],ah
  40c4ea:	and    BYTE PTR [rip+0x736f6e2d],ch        # 0x73b0331d
  40c4f0:	je     0x40c557
  40c4f2:	gs jo  0x40c515
  40c4f5:	and    BYTE PTR [rax],ah
  40c4f7:	and    BYTE PTR [rax],ah
  40c4f9:	and    BYTE PTR [rax],ah
  40c4fb:	and    BYTE PTR [rax],ah
  40c4fd:	jne    0x40c572
  40c4ff:	and    BYTE PTR gs:[rbx+0x74],dh
  40c503:	(bad)  
  40c504:	outs   dx,BYTE PTR ds:[rsi]
  40c505:	fs (bad) 
  40c507:	jb     0x40c56d
  40c509:	and    BYTE PTR [rdx],ah
  40c50b:	je     0x40c572
  40c50d:	js     0x40c583
  40c50f:	(bad)  
  40c510:	outs   dx,DWORD PTR ds:[rsi]
  40c511:	outs   dx,DWORD PTR ds:[rsi]
  40c512:	imul   esp,DWORD PTR [rdx],0x20
  40c515:	jo     0x40c589
  40c517:	imul   esp,DWORD PTR [rbx+0x69],0xa676e
  40c51e:	add    BYTE PTR [rax],al
  40c520:	and    BYTE PTR [rax],ah
  40c522:	and    BYTE PTR [rip+0x6c65722d],ch        # 0x6ca63755
  40c528:	(bad)  
  40c529:	js     0x40c54b
  40c52b:	and    BYTE PTR [rax],ah
  40c52d:	and    BYTE PTR [rax],ah
  40c52f:	and    BYTE PTR [rax],ah
  40c531:	and    BYTE PTR [rax],ah
  40c533:	and    BYTE PTR [rax],ah
  40c535:	jne    0x40c5aa
  40c537:	and    BYTE PTR gs:[rax+0x61],cl
  40c53b:	jb     0x40c5af
  40c53d:	imul   esi,DWORD PTR [rbx+0x27],0x6f777420
  40c544:	sub    eax,0x73736170
  40c549:	and    BYTE PTR [rdx+0x61],dh
  40c54c:	je     0x40c5b7
  40c54e:	outs   dx,DWORD PTR ds:[rsi]
  40c54f:	and    BYTE PTR [rbp+riz*2+0x73],dh
  40c553:	je     0x40c575
  40c555:	sub    BYTE PTR [rbp+riz*2+0x66],ah
  40c559:	(bad)  
  40c55a:	jne    0x40c5c8
  40c55c:	je     0x40c587
  40c55e:	or     al,BYTE PTR [rax]
  40c560:	and    BYTE PTR [rax],ah
  40c562:	and    BYTE PTR [rip+0x726f6e2d],ch        # 0x72b03395
  40c568:	gs ins BYTE PTR es:[rdi],dx
  40c56a:	(bad)  
  40c56b:	js     0x40c58d
  40c56d:	and    BYTE PTR [rax],ah
  40c56f:	and    BYTE PTR [rax],ah
  40c571:	and    BYTE PTR [rax],ah
  40c573:	and    BYTE PTR [rax],ah
  40c575:	jne    0x40c5ea
  40c577:	and    BYTE PTR gs:[rbx+0x74],dh
  40c57b:	(bad)  
  40c57c:	outs   dx,BYTE PTR ds:[rsi]
  40c57d:	fs (bad) 
  40c57f:	jb     0x40c5e5
  40c581:	and    BYTE PTR [rdx],ah
  40c583:	je     0x40c5ea
  40c585:	js     0x40c5fb
  40c587:	(bad)  
  40c588:	outs   dx,DWORD PTR ds:[rsi]
  40c589:	outs   dx,DWORD PTR ds:[rsi]
  40c58a:	imul   esp,DWORD PTR [rdx],0x20
  40c58d:	jb     0x40c5f0
  40c58f:	je     0x40c5fa
  40c591:	outs   dx,DWORD PTR ds:[rsi]
  40c592:	and    BYTE PTR [rbp+riz*2+0x73],dh
  40c596:	je     0x40c5a2
	...
  40c5a0:	and    BYTE PTR [rax],ah
  40c5a2:	and    BYTE PTR [rip+0x696c662d],ch        # 0x69ad2bd5
  40c5a8:	jo     0x40c5ca
  40c5aa:	and    BYTE PTR [rax],ah
  40c5ac:	and    BYTE PTR [rax],ah
  40c5ae:	and    BYTE PTR [rax],ah
  40c5b0:	and    BYTE PTR [rax],ah
  40c5b2:	and    BYTE PTR [rax],ah
  40c5b4:	and    BYTE PTR [rbp+0x73],dh
  40c5b7:	and    BYTE PTR gs:[rsi+0x6c],ah
  40c5bb:	imul   esi,DWORD PTR [rax+0x2d],0x706f6c66
  40c5c2:	and    BYTE PTR [rdx+0x61],dh
  40c5c5:	je     0x40c630
  40c5c7:	outs   dx,DWORD PTR ds:[rsi]
  40c5c8:	and    BYTE PTR [rbp+riz*2+0x73],dh
  40c5cc:	je     0x40c5ee
  40c5ce:	sub    BYTE PTR [rcx+0x73],ah
  40c5d1:	jae    0x40c648
  40c5d3:	ins    DWORD PTR es:[rdi],dx
  40c5d4:	gs jae 0x40c5f7
  40c5d7:	sub    eax,0x6175642d
  40c5dc:	ins    BYTE PTR es:[rdi],dx
  40c5dd:	sub    DWORD PTR [rdx],ecx
  40c5df:	add    BYTE PTR [rax],ah
  40c5e1:	and    BYTE PTR [rax],ah
  40c5e3:	sub    eax,0x6572702d
  40c5e8:	jae    0x40c659
  40c5ea:	ins    BYTE PTR es:[rdi],dx
  40c5eb:	and    BYTE PTR [rax],ah
  40c5ed:	and    BYTE PTR [rax],ah
  40c5ef:	and    BYTE PTR [rax],ah
  40c5f1:	and    BYTE PTR [rax],ah
  40c5f3:	and    BYTE PTR [rax],ah
  40c5f5:	jne    0x40c66a
  40c5f7:	and    BYTE PTR gs:[rax+0x72],dh
  40c5fb:	gs jae 0x40c66d
  40c5fe:	ins    BYTE PTR es:[rdi],dx
  40c5ff:	jbe    0x40c666
  40c601:	jb     0x40c623
  40c603:	sub    BYTE PTR [rbp+riz*2+0x66],ah
  40c607:	(bad)  
  40c608:	jne    0x40c676
  40c60a:	je     0x40c647
  40c60c:	and    BYTE PTR [rcx+0x73],ah
  40c60f:	jae    0x40c686
  40c611:	ins    DWORD PTR es:[rdi],dx
  40c612:	gs jae 0x40c635
  40c615:	sub    eax,0x6163732d
  40c61a:	ins    BYTE PTR es:[rdi],dx
  40c61b:	and    BYTE PTR gs:[rcx+0x6e],ah
  40c61f:	and    BYTE PTR fs:[rip+0x7664612d],ch        # 0x76a52753
  40c626:	sub    DWORD PTR [rdx],ecx
	...
  40c630:	and    BYTE PTR [rax],ah
  40c632:	and    BYTE PTR [rip+0x706f6e2d],ch        # 0x70b03465
  40c638:	jb     0x40c69f
  40c63a:	jae    0x40c6ab
  40c63c:	ins    BYTE PTR es:[rdi],dx
  40c63d:	and    BYTE PTR [rax],ah
  40c63f:	and    BYTE PTR [rax],ah
  40c641:	and    BYTE PTR [rax],ah
  40c643:	and    BYTE PTR [rax],ah
  40c645:	outs   dx,DWORD PTR fs:[rsi]
  40c647:	and    BYTE PTR [rsi+0x6f],ch
  40c64a:	je     0x40c66c
  40c64c:	jne    0x40c6c1
  40c64e:	and    BYTE PTR gs:[rax+0x72],dh
  40c652:	gs jae 0x40c6c4
  40c655:	ins    BYTE PTR es:[rdi],dx
  40c656:	jbe    0x40c6bd
  40c658:	jb     0x40c664
  40c65a:	add    BYTE PTR [rax],al
  40c65c:	add    BYTE PTR [rax],al
  40c65e:	add    BYTE PTR [rax],al
  40c660:	and    BYTE PTR [rax],ah
  40c662:	and    BYTE PTR [rip+0x6178652d],ch        # 0x61b92b95
  40c668:	movsxd esi,DWORD PTR [rax+riz*1+0x20]
  40c66c:	and    BYTE PTR [rax],ah
  40c66e:	and    BYTE PTR [rax],ah
  40c670:	and    BYTE PTR [rax],ah
  40c672:	and    BYTE PTR [rax],ah
  40c674:	and    BYTE PTR [rbp+0x73],dh
  40c677:	and    BYTE PTR gs:[rbx+0x69],dh
  40c67b:	ins    DWORD PTR es:[rdi],dx
  40c67c:	jo     0x40c6ea
  40c67e:	gs js  0x40c6a1
  40c681:	ins    DWORD PTR es:[rdi],dx
  40c682:	gs je  0x40c6ed
  40c685:	outs   dx,DWORD PTR ds:[rsi]
  40c686:	and    BYTE PTR fs:[rdx+0x61],ah
  40c68a:	jae    0x40c6f1
  40c68c:	and    BYTE PTR fs:[rdi+0x6e],ch
  40c690:	and    BYTE PTR [rbp+0x78],ah
  40c693:	(bad)  
  40c694:	movsxd esi,DWORD PTR [rax+riz*1+0x61]
  40c698:	jb     0x40c703
  40c69a:	je     0x40c704
  40c69c:	ins    DWORD PTR es:[rdi],dx
  40c69d:	gs je  0x40c709
  40c6a0:	movsxd ecx,DWORD PTR [rdx]
  40c6a2:	add    BYTE PTR [rax],al
  40c6a4:	add    BYTE PTR [rax],al
  40c6a6:	add    BYTE PTR [rax],al
  40c6a8:	and    BYTE PTR [rax],ah
  40c6aa:	and    BYTE PTR [rip+0x6863782d],ch        # 0x68a43edd
  40c6b0:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
  40c6b4:	and    BYTE PTR [rax],ah
  40c6b6:	and    BYTE PTR [rax],ah
  40c6b8:	and    BYTE PTR [rax],ah
  40c6ba:	and    BYTE PTR [rax],ah
  40c6bc:	and    BYTE PTR [rbx+0x68],ah
  40c6bf:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
  40c6c3:	imul   bp,WORD PTR [rsi+0x61],0x206c
  40c6c9:	(bad)  
  40c6cb:	jae    0x40c736
  40c6cd:	jae    0x40c6ef
  40c6cf:	jne    0x40c744
  40c6d1:	imul   ebp,DWORD PTR [rsi+0x67],0x61786520
  40c6d8:	movsxd esi,DWORD PTR [rax+riz*1+0x61]
  40c6dc:	jb     0x40c747
  40c6de:	je     0x40c748
  40c6e0:	ins    DWORD PTR es:[rdi],dx
  40c6e1:	gs je  0x40c74d
  40c6e4:	movsxd ecx,DWORD PTR [rdx]
  40c6e6:	add    BYTE PTR [rax],al
  40c6e8:	rex.WRXB jo 0x40c75f
  40c6eb:	imul   ebp,DWORD PTR [rdi+0x6e],0x70732073
  40c6f2:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40c6f6:	imul   esp,DWORD PTR [rbx+0x20],0x69206f74
  40c6fd:	outs   dx,BYTE PTR ds:[rsi]
  40c6fe:	je     0x40c765
  40c700:	jb     0x40c76b
  40c702:	outs   dx,DWORD PTR ds:[rsi]
  40c703:	jb     0x40c732
  40c705:	jo     0x40c776
  40c707:	imul   ebp,DWORD PTR [rsi+0x74],0x6c6f7320
  40c70e:	jbe    0x40c775
  40c710:	jb     0x40c74c
  40c712:	or     al,BYTE PTR [rax]
  40c714:	add    BYTE PTR [rax],al
  40c716:	add    BYTE PTR [rax],al
  40c718:	and    BYTE PTR [rax],ah
  40c71a:	and    BYTE PTR [rip+0x726f6e2d],ch        # 0x72b0354d
  40c720:	and    BYTE PTR fs:[rax],ah
  40c723:	and    BYTE PTR [rax],ah
  40c725:	and    BYTE PTR [rax],ah
  40c727:	and    BYTE PTR [rax],ah
  40c729:	and    BYTE PTR [rax],ah
  40c72b:	and    BYTE PTR [rax],ah
  40c72d:	jne    0x40c7a2
  40c72f:	and    BYTE PTR gs:[rsi+0x61],ch
  40c733:	je     0x40c7aa
  40c735:	jb     0x40c798
  40c737:	ins    BYTE PTR es:[rdi],dx
  40c738:	and    BYTE PTR [rax],ch
  40c73a:	outs   dx,DWORD PTR ds:[rsi]
  40c73b:	jb     0x40c7a6
  40c73d:	imul   ebp,DWORD PTR [esi+0x61],0x6f20296c
  40c745:	jb     0x40c7ab
  40c747:	gs jb  0x40c7b3
  40c74a:	outs   dx,BYTE PTR ds:[rsi]
  40c74b:	or     al,BYTE PTR [eax]
  40c74e:	add    BYTE PTR [rax],al
  40c750:	and    BYTE PTR [rax],ah
  40c752:	and    BYTE PTR [rip+0x646d712d],ch        # 0x64ae3885
  40c758:	and    BYTE PTR [rax],ah
  40c75a:	and    BYTE PTR [rax],ah
  40c75c:	and    BYTE PTR [rax],ah
  40c75e:	and    BYTE PTR [rax],ah
  40c760:	and    BYTE PTR [rax],ah
  40c762:	and    BYTE PTR [rax],ah
  40c764:	and    BYTE PTR [rbp+0x73],dh
  40c767:	and    BYTE PTR gs:[rcx+0x75],dh
  40c76b:	outs   dx,DWORD PTR ds:[rsi]
  40c76c:	je     0x40c7d7
  40c76e:	outs   dx,BYTE PTR gs:[rsi]
  40c770:	je     0x40c792
  40c772:	ins    DWORD PTR es:[rdi],dx
  40c773:	imul   ebp,DWORD PTR [rsi+0x69],0x206d756d
  40c77a:	fs gs addr32 jb 0x40c7e4
  40c77f:	and    BYTE PTR gs:[rdi+0x72],ch
  40c783:	fs gs jb 0x40c7f0
  40c787:	outs   dx,BYTE PTR ds:[rsi]
  40c788:	or     al,BYTE PTR [eax]
  40c78b:	add    BYTE PTR [rax],al
  40c78d:	add    BYTE PTR [rax],al
  40c78f:	add    BYTE PTR [rax],ah
  40c791:	and    BYTE PTR [rax],ah
  40c793:	sub    eax,0x646d612d
  40c798:	and    BYTE PTR [rax],ah
  40c79a:	and    BYTE PTR [rax],ah
  40c79c:	and    BYTE PTR [rax],ah
  40c79e:	and    BYTE PTR [rax],ah
  40c7a0:	and    BYTE PTR [rax],ah
  40c7a2:	and    BYTE PTR [rax],ah
  40c7a4:	and    BYTE PTR [rbp+0x73],dh
  40c7a7:	and    BYTE PTR gs:[rcx+0x70],ah
  40c7ab:	jo     0x40c81f
  40c7ad:	outs   dx,DWORD PTR ds:[rsi]
  40c7ae:	js     0x40c819
  40c7b0:	ins    DWORD PTR es:[rdi],dx
  40c7b1:	(bad)  
  40c7b2:	je     0x40c819
  40c7b4:	and    BYTE PTR [rbp+0x69],ch
  40c7b7:	outs   dx,BYTE PTR ds:[rsi]
  40c7b8:	imul   ebp,DWORD PTR [rbp+0x75],0x6564206d
  40c7bf:	addr32 jb 0x40c827
  40c7c2:	and    BYTE PTR gs:[rdi+0x72],ch
  40c7c6:	fs gs jb 0x40c833
  40c7ca:	outs   dx,BYTE PTR ds:[rsi]
  40c7cb:	and    BYTE PTR [eax],ch
  40c7ce:	fs gs data16 (bad) 
  40c7d2:	jne    0x40c840
  40c7d4:	je     0x40c7ff
  40c7d6:	or     al,BYTE PTR [rax]
  40c7d8:	and    BYTE PTR [rax],ah
  40c7da:	and    BYTE PTR [rip+0x6d79732d],ch        # 0x6dba3b0d
  40c7e0:	(bad)  
  40c7e1:	ins    DWORD PTR es:[rdi],dx
  40c7e2:	and    BYTE PTR fs:[rax],ah
  40c7e5:	and    BYTE PTR [rax],ah
  40c7e7:	and    BYTE PTR [rax],ah
  40c7e9:	and    BYTE PTR [rax],ah
  40c7eb:	and    BYTE PTR [rax],ah
  40c7ed:	jne    0x40c862
  40c7ef:	and    BYTE PTR gs:[rcx+0x70],ah
  40c7f3:	jo     0x40c867
  40c7f5:	outs   dx,DWORD PTR ds:[rsi]
  40c7f6:	js     0x40c861
  40c7f8:	ins    DWORD PTR es:[rdi],dx
  40c7f9:	(bad)  
  40c7fa:	je     0x40c861
  40c7fc:	and    BYTE PTR [rbp+0x69],ch
  40c7ff:	outs   dx,BYTE PTR ds:[rsi]
  40c800:	imul   ebp,DWORD PTR [rbp+0x75],0x6564206d
  40c807:	addr32 jb 0x40c86f
  40c80a:	and    BYTE PTR gs:[rdi+0x72],ch
  40c80e:	fs gs jb 0x40c87b
  40c812:	outs   dx,BYTE PTR ds:[rsi]
  40c813:	or     al,BYTE PTR [eax]
  40c816:	add    BYTE PTR [rax],al
  40c818:	rex.WRXB jo 0x40c88f
  40c81b:	imul   ebp,DWORD PTR [rdi+0x6e],0x70732073
  40c822:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40c826:	imul   esp,DWORD PTR [rbx+0x20],0x4d206f74
  40c82d:	rex.WB push r8
  40c82f:	and    BYTE PTR [rbx+0x6f],dh
  40c832:	ins    BYTE PTR es:[rdi],dx
  40c833:	jbe    0x40c89a
  40c835:	jb     0x40c871
  40c837:	or     al,BYTE PTR [rax]
  40c839:	add    BYTE PTR [rax],al
  40c83b:	add    BYTE PTR [rax],al
  40c83d:	add    BYTE PTR [rax],al
  40c83f:	add    BYTE PTR [rax],ah
  40c841:	and    BYTE PTR [rax],ah
  40c843:	sub    eax,0x6d6f6e2d
  40c848:	imul   esi,DWORD PTR [rax+0x20],0x20202020
  40c84f:	and    BYTE PTR [rax],ah
  40c851:	and    BYTE PTR [rax],ah
  40c853:	and    BYTE PTR [rax],ah
  40c855:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40c858:	jae    0x40c8c3
  40c85a:	fs gs jb 0x40c87e
  40c85e:	(bad)  
  40c85f:	ins    BYTE PTR es:[rdi],dx
  40c860:	ins    BYTE PTR es:[rdi],dx
  40c861:	and    BYTE PTR [rcx+0x6e],ch
  40c864:	je     0x40c8cb
  40c866:	addr32 gs jb 0x40c88a
  40c86a:	jbe    0x40c8cd
  40c86c:	jb     0x40c8d7
  40c86e:	(bad)  
  40c86f:	(bad)  
  40c870:	ins    BYTE PTR es:[rdi],dx
  40c871:	gs jae 0x40c894
  40c874:	(bad)  
  40c875:	jae    0x40c897
  40c877:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40c87a:	je     0x40c8e5
  40c87c:	outs   dx,BYTE PTR ds:[rsi]
  40c87d:	jne    0x40c8ee
  40c87f:	jne    0x40c8f4
  40c881:	or     al,BYTE PTR [rax]
  40c883:	add    BYTE PTR [rax],al
  40c885:	add    BYTE PTR [rax],al
  40c887:	add    BYTE PTR [rax],ah
  40c889:	and    BYTE PTR [rax],ah
  40c88b:	and    BYTE PTR [rax],ah
  40c88d:	and    BYTE PTR [rax],ah
  40c88f:	and    BYTE PTR [rax],ah
  40c891:	and    BYTE PTR [rax],ah
  40c893:	and    BYTE PTR [rax],ah
  40c895:	and    BYTE PTR [rax],ah
  40c897:	and    BYTE PTR [rax],ah
  40c899:	and    BYTE PTR [rax],ah
  40c89b:	and    BYTE PTR [rax],ah
  40c89d:	sub    BYTE PTR [rcx+0x6c],ah
  40c8a0:	ins    BYTE PTR es:[rdi],dx
  40c8a1:	outs   dx,DWORD PTR ds:[rsi]
  40c8a2:	ja     0x40c917
  40c8a4:	and    BYTE PTR [rbx+0x6f],dh
  40c8a7:	ins    BYTE PTR es:[rdi],dx
  40c8a8:	jbe    0x40c913
  40c8aa:	outs   dx,BYTE PTR ds:[rsi]
  40c8ab:	and    BYTE PTR [ebp+0x49],cl
  40c8af:	push   rax
  40c8b0:	and    BYTE PTR [rcx+0x73],ah
  40c8b3:	and    BYTE PTR [rax+0x75],dh
  40c8b6:	jb     0x40c91d
  40c8b8:	and    BYTE PTR [rax+rdx*2+0x29],cl
  40c8bc:	or     al,BYTE PTR [rax]
  40c8be:	add    BYTE PTR [rax],al
  40c8c0:	and    BYTE PTR [rax],ah
  40c8c2:	and    BYTE PTR [rip+0x7269662d],ch        # 0x72aa2ef5
  40c8c8:	jae    0x40c93e
  40c8ca:	and    BYTE PTR [rax],ah
  40c8cc:	and    BYTE PTR [rax],ah
  40c8ce:	and    BYTE PTR [rax],ah
  40c8d0:	and    BYTE PTR [rax],ah
  40c8d2:	and    BYTE PTR [rax],ah
  40c8d4:	and    BYTE PTR [rdx+0x72],ah
  40c8d7:	(bad)  
  40c8d8:	outs   dx,BYTE PTR ds:[rsi]
  40c8d9:	movsxd ebp,DWORD PTR [rax+0x20]
  40c8dc:	outs   dx,DWORD PTR ds:[rsi]
  40c8dd:	outs   dx,BYTE PTR ds:[rsi]
  40c8de:	and    BYTE PTR [rsi+0x69],ah
  40c8e1:	jb     0x40c956
  40c8e3:	je     0x40c905
  40c8e5:	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
  40c8ec:	and    BYTE PTR [rsi+0x61],dh
  40c8ef:	jb     0x40c95a
  40c8f1:	(bad)  
  40c8f2:	(bad)  
  40c8f3:	ins    BYTE PTR es:[rdi],dx
  40c8f4:	or     al,BYTE PTR gs:[rax]
  40c8f7:	add    BYTE PTR [rax],ah
  40c8f9:	and    BYTE PTR [rax],ah
  40c8fb:	sub    eax,0x73616c2d
  40c900:	je     0x40c922
  40c902:	and    BYTE PTR [rax],ah
  40c904:	and    BYTE PTR [rax],ah
  40c906:	and    BYTE PTR [rax],ah
  40c908:	and    BYTE PTR [rax],ah
  40c90a:	and    BYTE PTR [rax],ah
  40c90c:	and    BYTE PTR [rdx+0x72],ah
  40c90f:	(bad)  
  40c910:	outs   dx,BYTE PTR ds:[rsi]
  40c911:	movsxd ebp,DWORD PTR [rax+0x20]
  40c914:	outs   dx,DWORD PTR ds:[rsi]
  40c915:	outs   dx,BYTE PTR ds:[rsi]
  40c916:	and    BYTE PTR [rcx+riz*2+0x73],ch
  40c91a:	je     0x40c93c
  40c91c:	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
  40c923:	and    BYTE PTR [rsi+0x61],dh
  40c926:	jb     0x40c991
  40c928:	(bad)  
  40c929:	(bad)  
  40c92a:	ins    BYTE PTR es:[rdi],dx
  40c92b:	or     al,BYTE PTR gs:[rax]
  40c92e:	add    BYTE PTR [rax],al
  40c930:	and    BYTE PTR [rax],ah
  40c932:	and    BYTE PTR [rip+0x736f6d2d],ch        # 0x73b03665
  40c938:	je     0x40c9a0
  40c93a:	and    BYTE PTR [rax],ah
  40c93c:	and    BYTE PTR [rax],ah
  40c93e:	and    BYTE PTR [rax],ah
  40c940:	and    BYTE PTR [rax],ah
  40c942:	and    BYTE PTR [rax],ah
  40c944:	and    BYTE PTR [rdx+0x72],ah
  40c947:	(bad)  
  40c948:	outs   dx,BYTE PTR ds:[rsi]
  40c949:	movsxd ebp,DWORD PTR [rax+0x20]
  40c94c:	outs   dx,DWORD PTR ds:[rsi]
  40c94d:	outs   dx,BYTE PTR ds:[rsi]
  40c94e:	and    BYTE PTR [rbp+0x6f],ch
  40c951:	jae    0x40c9c7
  40c953:	and    BYTE PTR [rsi+0x72],ah
  40c956:	(bad)  
  40c957:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40c95b:	outs   dx,BYTE PTR ds:[rsi]
  40c95c:	(bad)  
  40c95d:	ins    BYTE PTR es:[rdi],dx
  40c95e:	and    BYTE PTR [rsi+0x61],dh
  40c961:	jb     0x40c9cc
  40c963:	(bad)  
  40c964:	(bad)  
  40c965:	ins    BYTE PTR es:[rdi],dx
  40c966:	and    BYTE PTR gs:[rdx],cl
  40c969:	add    BYTE PTR [rax],al
  40c96b:	add    BYTE PTR [rax],al
  40c96d:	add    BYTE PTR [rax],al
  40c96f:	add    BYTE PTR [rax],ah
  40c971:	and    BYTE PTR [rax],ah
  40c973:	sub    eax,0x7472642d
  40c978:	outs   dx,DWORD PTR ds:[rsi]
  40c979:	ins    DWORD PTR es:[rdi],dx
  40c97a:	and    BYTE PTR [rax],ah
  40c97c:	and    BYTE PTR [rax],ah
  40c97e:	and    BYTE PTR [rax],ah
  40c980:	and    BYTE PTR [rax],ah
  40c982:	and    BYTE PTR [rax],ah
  40c984:	and    BYTE PTR [rdx+0x72],ah
  40c987:	(bad)  
  40c988:	outs   dx,BYTE PTR ds:[rsi]
  40c989:	movsxd ebp,DWORD PTR [rax+0x20]
  40c98c:	jne    0x40ca01
  40c98e:	imul   ebp,DWORD PTR [rsi+0x67],0x75656820
  40c995:	jb     0x40ca00
  40c997:	jae    0x40ca0d
  40c999:	imul   esp,DWORD PTR [rbx+0x20],0x44207962
  40c9a0:	jb     0x40ca0b
  40c9a2:	gs (bad) 
  40c9a4:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
  40c9a8:	(bad)  
  40c9a9:	outs   dx,BYTE PTR ds:[rsi]
  40c9aa:	and    BYTE PTR fs:[rdi+rbp*2+0x6d],dl
  40c9af:	ins    BYTE PTR es:[rdi],dx
  40c9b0:	imul   ebp,DWORD PTR [rsi+0xa],0x0
  40c9b7:	add    BYTE PTR [rax],ah
  40c9b9:	and    BYTE PTR [rax],ah
  40c9bb:	and    BYTE PTR [rax],ah
  40c9bd:	and    BYTE PTR [rax],ah
  40c9bf:	and    BYTE PTR [rax],ah
  40c9c1:	and    BYTE PTR [rax],ah
  40c9c3:	and    BYTE PTR [rax],ah
  40c9c5:	and    BYTE PTR [rax],ah
  40c9c7:	and    BYTE PTR [rax],ah
  40c9c9:	and    BYTE PTR [rax],ah
  40c9cb:	and    BYTE PTR [rax],ah
  40c9cd:	sub    BYTE PTR [rbp+riz*2+0x66],ah
  40c9d1:	(bad)  
  40c9d2:	jne    0x40ca40
  40c9d4:	je     0x40c9ff
  40c9d6:	or     al,BYTE PTR [rax]
  40c9d8:	and    BYTE PTR [rax],ah
  40c9da:	and    BYTE PTR [rip+0x6f63702d],ch        # 0x6fa43a0d
  40c9e0:	jae    0x40ca56
  40c9e2:	and    BYTE PTR [rax],ah
  40c9e4:	and    BYTE PTR [rax],ah
  40c9e6:	and    BYTE PTR [rax],ah
  40c9e8:	and    BYTE PTR [rax],ah
  40c9ea:	and    BYTE PTR [rax],ah
  40c9ec:	and    BYTE PTR [rdx+0x72],ah
  40c9ef:	(bad)  
  40c9f0:	outs   dx,BYTE PTR ds:[rsi]
  40c9f1:	movsxd ebp,DWORD PTR [rax+0x20]
  40c9f4:	jne    0x40ca69
  40c9f6:	imul   ebp,DWORD PTR [rsi+0x67],0x62796820
  40c9fd:	jb     0x40ca68
  40c9ff:	and    BYTE PTR fs:[rax+0x73],dh
  40ca03:	gs jne 0x40ca6a
  40ca06:	outs   dx,DWORD PTR ds:[rsi]
  40ca07:	movsxd ebp,DWORD PTR [rdi+0x73]
  40ca0a:	je     0x40ca2c
  40ca0c:	push   0x69727565
  40ca11:	jae    0x40ca87
  40ca13:	imul   esp,DWORD PTR [rbx+0x20],0x79616d28
  40ca1a:	and    BYTE PTR [rdx+0x65],ah
  40ca1d:	or     al,BYTE PTR [rax]
  40ca1f:	add    BYTE PTR [rax],ah
  40ca21:	and    BYTE PTR [rax],ah
  40ca23:	and    BYTE PTR [rax],ah
  40ca25:	and    BYTE PTR [rax],ah
  40ca27:	and    BYTE PTR [rax],ah
  40ca29:	and    BYTE PTR [rax],ah
  40ca2b:	and    BYTE PTR [rax],ah
  40ca2d:	and    BYTE PTR [rax],ah
  40ca2f:	and    BYTE PTR [rax],ah
  40ca31:	and    BYTE PTR [rax],ah
  40ca33:	and    BYTE PTR [rax],ah
  40ca35:	jne    0x40caaa
  40ca37:	gs data16 jne 0x40caa7
  40ca3b:	and    BYTE PTR [rsi+0x6f],ah
  40ca3e:	jb     0x40ca60
  40ca40:	push   0x20647261
  40ca45:	imul   ebp,DWORD PTR [rsi+0x73],0x636e6174
  40ca4c:	gs jae 0x40ca78
  40ca4f:	or     al,BYTE PTR [rax]
  40ca51:	add    BYTE PTR [rax],al
  40ca53:	add    BYTE PTR [rax],al
  40ca55:	add    BYTE PTR [rax],al
  40ca57:	add    BYTE PTR [rax],ah
  40ca59:	and    BYTE PTR [rax],ah
  40ca5b:	sub    eax,0x7366642d
  40ca60:	and    BYTE PTR [rax],ah
  40ca62:	and    BYTE PTR [rax],ah
  40ca64:	and    BYTE PTR [rax],ah
  40ca66:	and    BYTE PTR [rax],ah
  40ca68:	and    BYTE PTR [rax],ah
  40ca6a:	and    BYTE PTR [rax],ah
  40ca6c:	and    BYTE PTR [rdx+0x61],ah
  40ca6f:	movsxd ebp,DWORD PTR [rbx+0x74]
  40ca72:	jb     0x40cad5
  40ca74:	movsxd ebp,DWORD PTR [rbx+0x20]
  40ca77:	jne    0x40caec
  40ca79:	imul   ebp,DWORD PTR [rsi+0x67],0x70656420
  40ca80:	je     0x40caea
  40ca82:	and    BYTE PTR [rsi+0x69],ah
  40ca85:	jb     0x40cafa
  40ca87:	je     0x40caa9
  40ca89:	jae    0x40caf0
  40ca8b:	(bad)  
  40ca8c:	jb     0x40caf1
  40ca8e:	push   0xa20
  40ca93:	add    BYTE PTR [rax],al
  40ca95:	add    BYTE PTR [rax],al
  40ca97:	add    BYTE PTR [rax],ah
  40ca99:	and    BYTE PTR [rax],ah
  40ca9b:	sub    eax,0x7366622d
  40caa0:	and    BYTE PTR [rax],ah
  40caa2:	and    BYTE PTR [rax],ah
  40caa4:	and    BYTE PTR [rax],ah
  40caa6:	and    BYTE PTR [rax],ah
  40caa8:	and    BYTE PTR [rax],ah
  40caaa:	and    BYTE PTR [rax],ah
  40caac:	and    BYTE PTR [rdx+0x61],ah
  40caaf:	movsxd ebp,DWORD PTR [rbx+0x74]
  40cab2:	jb     0x40cb15
  40cab4:	movsxd ebp,DWORD PTR [rbx+0x20]
  40cab7:	jne    0x40cb2c
  40cab9:	imul   ebp,DWORD PTR [rsi+0x67],0x65726220
  40cac0:	(bad)  
  40cac1:	fs je  0x40cb2c
  40cac4:	and    BYTE PTR [rsi+0x69],ah
  40cac7:	jb     0x40cb3c
  40cac9:	je     0x40caeb
  40cacb:	jae    0x40cb32
  40cacd:	(bad)  
  40cace:	jb     0x40cb33
  40cad0:	push   0xa
  40cad5:	add    BYTE PTR [rax],al
  40cad7:	add    BYTE PTR [rax],ah
  40cad9:	and    BYTE PTR [rax],ah
  40cadb:	sub    eax,0x7365622d
  40cae0:	je     0x40cb52
  40cae2:	and    BYTE PTR [rax],ah
  40cae4:	and    BYTE PTR [rax],ah
  40cae6:	and    BYTE PTR [rax],ah
  40cae8:	and    BYTE PTR [rax],ah
  40caea:	and    BYTE PTR [rax],ah
  40caec:	and    BYTE PTR [rdx+0x61],ah
  40caef:	movsxd ebp,DWORD PTR [rbx+0x74]
  40caf2:	jb     0x40cb55
  40caf4:	movsxd ebp,DWORD PTR [rbx+0x20]
  40caf7:	jne    0x40cb6c
  40caf9:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  40cb00:	and    BYTE PTR [rdx+0x65],ah
  40cb03:	jae    0x40cb79
  40cb05:	and    BYTE PTR [rax+0x72],dh
  40cb08:	outs   dx,DWORD PTR ds:[rsi]
  40cb09:	push   0x65
  40cb0b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40cb0f:	outs   dx,BYTE PTR ds:[rsi]
  40cb10:	and    BYTE PTR [rax+0x65],ch
  40cb13:	jne    0x40cb87
  40cb15:	imul   esi,DWORD PTR [rbx+0x74],0xa6369
  40cb1c:	add    BYTE PTR [rax],al
  40cb1e:	add    BYTE PTR [rax],al
  40cb20:	and    BYTE PTR [rax],ah
  40cb22:	and    BYTE PTR [rip+0x7365622d],ch        # 0x73a62d55
  40cb28:	je     0x40cb8c
  40cb2a:	and    BYTE PTR [rax],ah
  40cb2c:	and    BYTE PTR [rax],ah
  40cb2e:	and    BYTE PTR [rax],ah
  40cb30:	and    BYTE PTR [rax],ah
  40cb32:	and    BYTE PTR [rax],ah
  40cb34:	and    BYTE PTR [rdx+0x61],ah
  40cb37:	movsxd ebp,DWORD PTR [rbx+0x74]
  40cb3a:	jb     0x40cb9d
  40cb3c:	movsxd ebp,DWORD PTR [rbx+0x20]
  40cb3f:	jne    0x40cbb4
  40cb41:	imul   ebp,DWORD PTR [rsi+0x67],0x646f6e20
  40cb48:	and    BYTE PTR gs:[rdi+0x69],dh
  40cb4c:	je     0x40cbb6
  40cb4e:	and    BYTE PTR [rdx+0x65],ah
  40cb51:	jae    0x40cbc7
  40cb53:	and    BYTE PTR [rdi+rbp*2+0x63],ch
  40cb57:	(bad)  
  40cb58:	ins    BYTE PTR es:[rdi],dx
  40cb59:	and    BYTE PTR [rdx+0x6f],ah
  40cb5c:	jne    0x40cbcc
  40cb5e:	or     al,BYTE PTR fs:[rax]
  40cb61:	add    BYTE PTR [rax],al
  40cb63:	add    BYTE PTR [rax],al
  40cb65:	add    BYTE PTR [rax],al
  40cb67:	add    BYTE PTR [rax],ah
  40cb69:	and    BYTE PTR [rax],ah
  40cb6b:	sub    eax,0x746e692d
  40cb70:	outs   dx,DWORD PTR ds:[rsi]
  40cb71:	jo     0x40cbe7
  40cb73:	and    BYTE PTR [rax],ah
  40cb75:	and    BYTE PTR [rax],ah
  40cb77:	and    BYTE PTR [rax],ah
  40cb79:	and    BYTE PTR [rax],ah
  40cb7b:	and    BYTE PTR [rax],ah
  40cb7d:	jne    0x40cbf2
  40cb7f:	and    BYTE PTR gs:[rbp+0x49],cl
  40cb83:	push   rax
  40cb84:	and    BYTE PTR [rax+0x72],dh
  40cb87:	gs jae 0x40cbf9
  40cb8a:	ins    BYTE PTR es:[rdi],dx
  40cb8b:	jbe    0x40cbf2
  40cb8d:	jb     0x40cbaf
  40cb8f:	sub    BYTE PTR [rbp+riz*2+0x66],ah
  40cb93:	(bad)  
  40cb94:	jne    0x40cc02
  40cb96:	je     0x40cbc1
  40cb98:	or     al,BYTE PTR [rax]
  40cb9a:	add    BYTE PTR [rax],al
  40cb9c:	add    BYTE PTR [rax],al
  40cb9e:	add    BYTE PTR [rax],al
  40cba0:	and    BYTE PTR [rax],ah
  40cba2:	and    BYTE PTR [rip+0x696f6e2d],ch        # 0x69b039d5
  40cba8:	outs   dx,BYTE PTR ds:[rsi]
  40cba9:	je     0x40cc1a
  40cbab:	jo     0x40cc21
  40cbad:	and    BYTE PTR [rax],ah
  40cbaf:	and    BYTE PTR [rax],ah
  40cbb1:	and    BYTE PTR [rax],ah
  40cbb3:	and    BYTE PTR [rax],ah
  40cbb5:	outs   dx,DWORD PTR fs:[rsi]
  40cbb7:	and    BYTE PTR [rsi+0x6f],ch
  40cbba:	je     0x40cbdc
  40cbbc:	jne    0x40cc31
  40cbbe:	and    BYTE PTR gs:[rbp+0x49],cl
  40cbc2:	push   rax
  40cbc3:	and    BYTE PTR [rax+0x72],dh
  40cbc6:	gs jae 0x40cc38
  40cbc9:	ins    BYTE PTR es:[rdi],dx
  40cbca:	jbe    0x40cc31
  40cbcc:	jb     0x40cbd8
  40cbce:	add    BYTE PTR [rax],al
  40cbd0:	and    BYTE PTR [rax],ah
  40cbd2:	and    BYTE PTR [rip+0x6e69622d],ch        # 0x6eaa2e05
  40cbd8:	(bad)  
  40cbd9:	jb     0x40cc44
  40cbdb:	jp     0x40cc42
  40cbdd:	and    BYTE PTR [rax],ah
  40cbdf:	and    BYTE PTR [rax],ah
  40cbe1:	and    BYTE PTR [rax],ah
  40cbe3:	and    BYTE PTR [rax],ah
  40cbe5:	jb     0x40cc4c
  40cbe7:	jo     0x40cc55
  40cbe9:	(bad)  
  40cbea:	movsxd esp,DWORD PTR [rbp+0x20]
  40cbed:	outs   dx,BYTE PTR gs:[esi]
  40cbf0:	gs jb  0x40cc54
  40cbf3:	ins    BYTE PTR es:[rdi],dx
  40cbf4:	and    BYTE PTR [rcx+0x6e],ch
  40cbf7:	je     0x40cc5e
  40cbf9:	addr32 gs jb 0x40cc1d
  40cbfd:	jbe    0x40cc60
  40cbff:	jb     0x40cc6a
  40cc01:	(bad)  
  40cc02:	(bad)  
  40cc03:	ins    BYTE PTR es:[rdi],dx
  40cc04:	gs jae 0x40cc27
  40cc07:	(bad)  
  40cc08:	jns    0x40cc2a
  40cc0a:	(bad)  
  40cc0b:	imul   ebp,DWORD PTR [rsi+0x61],0x6f207972
  40cc12:	outs   dx,BYTE PTR ds:[rsi]
  40cc13:	gs jae 0x40cc20
  40cc16:	add    BYTE PTR [rax],al
  40cc18:	and    BYTE PTR [rax],ah
  40cc1a:	and    BYTE PTR [rax],ah
  40cc1c:	and    BYTE PTR [rax],ah
  40cc1e:	and    BYTE PTR [rax],ah
  40cc20:	and    BYTE PTR [rax],ah
  40cc22:	and    BYTE PTR [rax],ah
  40cc24:	and    BYTE PTR [rax],ah
  40cc26:	and    BYTE PTR [rax],ah
  40cc28:	and    BYTE PTR [rax],ah
  40cc2a:	and    BYTE PTR [rax],ah
  40cc2c:	and    BYTE PTR [rax],ch
  40cc2e:	(bad)  
  40cc2f:	jae    0x40cca4
  40cc31:	jne    0x40cca0
  40cc33:	gs jae 0x40cc56
  40cc36:	sub    eax,0x746e692d
  40cc3b:	outs   dx,DWORD PTR ds:[rsi]
  40cc3c:	jo     0x40ccb2
  40cc3e:	sub    DWORD PTR [rdx],ecx
	...
  40cc48:	and    BYTE PTR [rax],ah
  40cc4a:	and    BYTE PTR [rip+0x7570662d],ch        # 0x75b1327d
  40cc50:	ins    DWORD PTR es:[rdi],dx
  40cc51:	jo     0x40cc73
  40cc53:	and    BYTE PTR [rax],ah
  40cc55:	and    BYTE PTR [rax],ah
  40cc57:	and    BYTE PTR [rax],ah
  40cc59:	and    BYTE PTR [rax],ah
  40cc5b:	and    BYTE PTR [rax],ah
  40cc5d:	(bad)  
  40cc5e:	jo     0x40ccd0
  40cc60:	ins    BYTE PTR es:[rdi],dx
  40cc61:	jns    0x40cc83
  40cc63:	data16 gs (bad) 
  40cc66:	jae    0x40ccd1
  40cc68:	(bad)  
  40cc69:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x75702079
  40cc71:	ins    DWORD PTR es:[rdi],dx
  40cc72:	jo     0x40cc94
  40cc74:	push   0x69727565
  40cc79:	jae    0x40ccef
  40cc7b:	imul   esp,DWORD PTR [rbx+0xa],0x20200000
  40cc82:	and    BYTE PTR [rip+0x6f72702d],ch        # 0x6fb33cb5
  40cc88:	js     0x40cd03
  40cc8a:	and    BYTE PTR [rbx+0x6e],bl
  40cc8d:	outs   dx,BYTE PTR ds:[rsi]
  40cc8e:	outs   dx,BYTE PTR ds:[rsi]
  40cc8f:	pop    rbp
  40cc90:	and    BYTE PTR [rax],ah
  40cc92:	and    BYTE PTR [rax],ah
  40cc94:	and    BYTE PTR [rcx+0x70],ah
  40cc97:	jo     0x40cd05
  40cc99:	jns    0x40ccbb
  40cc9b:	jo     0x40cd0f
  40cc9d:	outs   dx,DWORD PTR ds:[rsi]
  40cc9e:	js     0x40cd09
  40cca0:	ins    DWORD PTR es:[rdi],dx
  40cca1:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x72616573
  40cca9:	movsxd ebp,DWORD PTR [rax+0x20]
  40ccac:	push   0x69727565
  40ccb1:	jae    0x40cd27
  40ccb3:	imul   esp,DWORD PTR [rbx+0x20],0x6e6e6e28
  40ccba:	and    BYTE PTR [rcx+0x73],ch
  40ccbd:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  40ccc1:	and    BYTE PTR gs:[rcx+rbp*2+0x6d],ch
  40ccc6:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x0
  40ccce:	add    BYTE PTR [rax],al
  40ccd0:	and    BYTE PTR [rax],ah
  40ccd2:	and    BYTE PTR [rax],ah
  40ccd4:	and    BYTE PTR [rax],ah
  40ccd6:	and    BYTE PTR [rax],ah
  40ccd8:	and    BYTE PTR [rax],ah
  40ccda:	and    BYTE PTR [rax],ah
  40ccdc:	and    BYTE PTR [rax],ah
  40ccde:	and    BYTE PTR [rax],ah
  40cce0:	and    BYTE PTR [rax],ah
  40cce2:	and    BYTE PTR [rax],ah
  40cce4:	and    BYTE PTR [rcx+0x6e],ch
  40cce7:	and    BYTE PTR [rbx+0x65],dh
  40ccea:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40cced:	fs jae 0x40cd2b
  40ccf0:	and    BYTE PTR [rbp+riz*2+0x66],ah
  40ccf4:	(bad)  
  40ccf5:	jne    0x40cd63
  40ccf7:	je     0x40cd19
  40ccf9:	imul   esi,DWORD PTR [rbx+0x20],0xa293036
	...
  40cd08:	and    BYTE PTR [rax],ah
  40cd0a:	and    BYTE PTR [rip+0x6d6f672d],ch        # 0x6db0343d
  40cd10:	outs   dx,DWORD PTR ds:[rsi]
  40cd11:	jb     0x40cd8c
  40cd13:	and    BYTE PTR [rax],ah
  40cd15:	and    BYTE PTR [rax],ah
  40cd17:	and    BYTE PTR [rax],ah
  40cd19:	and    BYTE PTR [rax],ah
  40cd1b:	and    BYTE PTR [rax],ah
  40cd1d:	outs   dx,BYTE PTR gs:[esi]
  40cd20:	gs jb  0x40cd84
  40cd23:	je     0x40cd8a
  40cd25:	and    BYTE PTR [rdi+0x6f],al
  40cd28:	ins    DWORD PTR es:[rdi],dx
  40cd29:	outs   dx,DWORD PTR ds:[rsi]
  40cd2a:	jb     0x40cda5
  40cd2c:	(bad)  
  40cd2d:	jae    0x40cd4f
  40cd2f:	ins    DWORD PTR es:[rdi],dx
  40cd30:	imul   edi,DWORD PTR [rax+0x65],0x6e692064
  40cd37:	je     0x40cd9e
  40cd39:	addr32 gs jb 0x40cd5d
  40cd3d:	movsxd esi,DWORD PTR [rbp+0x74]
  40cd40:	jae    0x40cd4c
  40cd42:	add    BYTE PTR [rax],al
  40cd44:	add    BYTE PTR [rax],al
  40cd46:	add    BYTE PTR [rax],al
  40cd48:	and    BYTE PTR [rax],ah
  40cd4a:	and    BYTE PTR [rip+0x72696d2d],ch        # 0x72aa3a7d
  40cd50:	and    BYTE PTR [rax],ah
  40cd52:	and    BYTE PTR [rax],ah
  40cd54:	and    BYTE PTR [rax],ah
  40cd56:	and    BYTE PTR [rax],ah
  40cd58:	and    BYTE PTR [rax],ah
  40cd5a:	and    BYTE PTR [rax],ah
  40cd5c:	and    BYTE PTR [rdi+0x65],ah
  40cd5f:	outs   dx,BYTE PTR ds:[rsi]
  40cd60:	gs jb  0x40cdc4
  40cd63:	je     0x40cdca
  40cd65:	and    BYTE PTR [rbp+0x49],cl
  40cd68:	push   rdx
  40cd69:	and    BYTE PTR [rax],ch
  40cd6b:	ins    DWORD PTR es:[rdi],dx
  40cd6c:	imul   edi,DWORD PTR [rax+0x65],0x6e692064
  40cd73:	je     0x40cdda
  40cd75:	addr32 gs jb 0x40cd99
  40cd79:	jb     0x40cdea
  40cd7b:	jne    0x40cdeb
  40cd7d:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x75632029
  40cd85:	je     0x40cdfa
  40cd87:	or     al,BYTE PTR [rax]
  40cd89:	add    BYTE PTR [rax],al
  40cd8b:	add    BYTE PTR [rax],al
  40cd8d:	add    BYTE PTR [rax],al
  40cd8f:	add    BYTE PTR [rax],ah
  40cd91:	and    BYTE PTR [rax],ah
  40cd93:	sub    eax,0x766f632d
  40cd98:	gs jb  0x40cdbb
  40cd9b:	and    BYTE PTR [rax],ah
  40cd9d:	and    BYTE PTR [rax],ah
  40cd9f:	and    BYTE PTR [rax],ah
  40cda1:	and    BYTE PTR [rax],ah
  40cda3:	and    BYTE PTR [rax],ah
  40cda5:	outs   dx,BYTE PTR gs:[esi]
  40cda8:	gs jb  0x40ce0c
  40cdab:	je     0x40ce12
  40cdad:	and    BYTE PTR [rbp+0x69],ch
  40cdb0:	js     0x40ce17
  40cdb2:	and    BYTE PTR fs:[rbx+0x6f],ah
  40cdb6:	jbe    0x40ce1d
  40cdb8:	jb     0x40cdda
  40cdba:	movsxd esi,DWORD PTR [rbp+0x74]
  40cdbd:	jae    0x40cdc9
  40cdbf:	add    BYTE PTR [rax],ah
  40cdc1:	and    BYTE PTR [rax],ah
  40cdc3:	sub    eax,0x696c632d
  40cdc8:	jno    0x40ce3f
  40cdca:	and    BYTE PTR gs:[rax],ah
  40cdcd:	and    BYTE PTR [rax],ah
  40cdcf:	and    BYTE PTR [rax],ah
  40cdd1:	and    BYTE PTR [rax],ah
  40cdd3:	and    BYTE PTR [rax],ah
  40cdd5:	outs   dx,BYTE PTR gs:[esi]
  40cdd8:	gs jb  0x40ce3c
  40cddb:	je     0x40ce42
  40cddd:	and    BYTE PTR [rbx+0x6c],ah
  40cde0:	imul   esi,DWORD PTR [rcx+0x75],0x75632065
  40cde7:	je     0x40ce5c
  40cde9:	or     al,BYTE PTR [rax]
  40cdeb:	add    BYTE PTR [rax],al
  40cded:	add    BYTE PTR [rax],al
  40cdef:	add    BYTE PTR [rax],ah
  40cdf1:	and    BYTE PTR [rax],ah
  40cdf3:	sub    eax,0x7475632d
  40cdf8:	jae    0x40ce1a
  40cdfa:	and    BYTE PTR [rax],ah
  40cdfc:	and    BYTE PTR [rax],ah
  40cdfe:	and    BYTE PTR [rax],ah
  40ce00:	and    BYTE PTR [rax],ah
  40ce02:	and    BYTE PTR [rax],ah
  40ce04:	and    BYTE PTR [rdi+0x65],ah
  40ce07:	outs   dx,BYTE PTR ds:[rsi]
  40ce08:	gs jb  0x40ce6c
  40ce0b:	je     0x40ce72
  40ce0d:	and    BYTE PTR [rcx+0x6c],ah
  40ce10:	ins    BYTE PTR es:[rdi],dx
  40ce11:	and    BYTE PTR [rbx+0x75],ah
  40ce14:	je     0x40ce89
  40ce16:	and    BYTE PTR [rcx+0x62],ah
  40ce19:	outs   dx,DWORD PTR ds:[rsi]
  40ce1a:	jbe    0x40ce81
  40ce1c:	or     al,BYTE PTR [rax]
  40ce1e:	add    BYTE PTR [rax],al
  40ce20:	and    BYTE PTR [rax],ah
  40ce22:	and    BYTE PTR [rip+0x70696d2d],ch        # 0x70aa3b55
  40ce28:	addr32 (bad) 
  40ce2a:	jo     0x40ce4c
  40ce2c:	je     0x40ce9d
  40ce2e:	ins    BYTE PTR es:[rdi],dx
  40ce2f:	and    BYTE PTR [rax],ah
  40ce31:	and    BYTE PTR [rax],ah
  40ce33:	and    BYTE PTR [rax],ah
  40ce35:	jae    0x40ce9c
  40ce37:	je     0x40ce59
  40ce39:	jb     0x40cea0
  40ce3b:	ins    BYTE PTR es:[rdi],dx
  40ce3c:	(bad)  
  40ce3d:	je     0x40cea8
  40ce3f:	jbe    0x40cea6
  40ce41:	and    BYTE PTR [rbp+0x69],ch
  40ce44:	jo     0x40ce66
  40ce46:	addr32 (bad) 
  40ce48:	jo     0x40ce6a
  40ce4a:	je     0x40cebb
  40ce4c:	ins    BYTE PTR es:[rdi],dx
  40ce4d:	gs jb  0x40ceb1
  40ce50:	outs   dx,BYTE PTR ds:[rsi]
  40ce51:	movsxd esp,DWORD PTR [rbp+0x20]
  40ce54:	je     0x40cec5
  40ce56:	and    BYTE PTR [rdi+rbp*2+0x6c],dh
  40ce5a:	or     al,BYTE PTR [rax]
  40ce5c:	add    BYTE PTR [rax],al
  40ce5e:	add    BYTE PTR [rax],al
  40ce60:	and    BYTE PTR [rax],ah
  40ce62:	and    BYTE PTR [rip+0x6e696d2d],ch        # 0x6eaa3b95
  40ce68:	imul   esi,DWORD PTR [rbx+0x61],0x20202074
  40ce6f:	and    BYTE PTR [rax],ah
  40ce71:	and    BYTE PTR [rax],ah
  40ce73:	and    BYTE PTR [rax],ah
  40ce75:	je     0x40cee9
  40ce77:	(bad)  
  40ce78:	outs   dx,BYTE PTR ds:[rsi]
  40ce79:	jae    0x40cee7
  40ce7b:	(bad)  
  40ce7c:	je     0x40cee3
  40ce7e:	and    BYTE PTR [rcx+0x6e],ch
  40ce81:	je     0x40cee8
  40ce83:	addr32 gs jb 0x40cea7
  40ce87:	data16 gs (bad) 
  40ce8a:	jae    0x40cef5
  40ce8c:	(bad)  
  40ce8d:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x72702079
  40ce95:	outs   dx,DWORD PTR ds:[rsi]
  40ce96:	(bad)  
  40ce97:	ins    BYTE PTR es:[rdi],dx
  40ce98:	gs ins DWORD PTR es:[rdi],dx
  40ce9a:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40ce9e:	rex.XB
  40ce9f:	rex.WRX
  40cea0:	rex.RX sub eax,0xa544153
  40cea6:	add    BYTE PTR [rax],al
  40cea8:	and    BYTE PTR [rax],ah
  40ceaa:	and    BYTE PTR [rax],ah
  40ceac:	and    BYTE PTR [rax],ah
  40ceae:	and    BYTE PTR [rax],ah
  40ceb0:	and    BYTE PTR [rax],ah
  40ceb2:	and    BYTE PTR [rax],ah
  40ceb4:	and    BYTE PTR [rax],ah
  40ceb6:	and    BYTE PTR [rax],ah
  40ceb8:	and    BYTE PTR [rax],ah
  40ceba:	and    BYTE PTR [rax],ah
  40cebc:	and    BYTE PTR [rcx+0x6e],ah
  40cebf:	and    BYTE PTR fs:[rbx+0x6f],dh
  40cec3:	ins    BYTE PTR es:[rdi],dx
  40cec4:	jbe    0x40cf2b
  40cec6:	and    BYTE PTR [rcx+0x74],ch
  40cec9:	and    BYTE PTR [rdi+0x69],dh
  40cecc:	je     0x40cf36
  40cece:	and    BYTE PTR [rbp+0x69],cl
  40ced1:	outs   dx,BYTE PTR ds:[rsi]
  40ced2:	imul   edx,DWORD PTR [rbx+0x61],0x6f732074
  40ced9:	ins    BYTE PTR es:[rdi],dx
  40ceda:	jbe    0x40cf41
  40cedc:	jb     0x40cee8
  40cede:	add    BYTE PTR [rax],al
  40cee0:	and    BYTE PTR [rax],ah
  40cee2:	and    BYTE PTR [rip+0x6a626f2d],ch        # 0x6aa33e15
  40cee8:	(bad)  
  40cee9:	outs   dx,BYTE PTR ds:[rsi]
  40ceea:	and    BYTE PTR fs:[rdx+0x6f],ah
  40ceee:	jne    0x40cf5e
  40cef0:	and    BYTE PTR fs:[rax],ah
  40cef3:	and    BYTE PTR [rax],ah
  40cef5:	(bad)  
  40cef6:	fs and BYTE PTR fs:[rcx+0x6e],ch
  40cefb:	gs jno 0x40cf73
  40cefe:	(bad)  
  40ceff:	ins    BYTE PTR es:[rdi],dx
  40cf00:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x206a626f
  40cf08:	cmp    al,0x3d
  40cf0a:	and    BYTE PTR [rdx+0x6f],ah
  40cf0d:	jne    0x40cf7d
  40cf0f:	and    BYTE PTR fs:[rax],ch
  40cf12:	ins    DWORD PTR es:[rdi],dx
  40cf13:	imul   ebp,DWORD PTR [rsi+0x69],0x617a696d
  40cf1a:	je     0x40cf85
  40cf1c:	outs   dx,DWORD PTR ds:[rsi]
  40cf1d:	outs   dx,BYTE PTR ds:[rsi]
  40cf1e:	sub    DWORD PTR [rax],esp
  40cf20:	outs   dx,DWORD PTR ds:[rsi]
  40cf21:	jb     0x40cf2d
  40cf23:	add    BYTE PTR [rax],al
  40cf25:	add    BYTE PTR [rax],al
  40cf27:	add    BYTE PTR [rax],ah
  40cf29:	and    BYTE PTR [rax],ah
  40cf2b:	and    BYTE PTR [rax],ah
  40cf2d:	and    BYTE PTR [rax],ah
  40cf2f:	and    BYTE PTR [rax],ah
  40cf31:	and    BYTE PTR [rax],ah
  40cf33:	and    BYTE PTR [rax],ah
  40cf35:	and    BYTE PTR [rax],ah
  40cf37:	and    BYTE PTR [rax],ah
  40cf39:	and    BYTE PTR [rax],ah
  40cf3b:	and    BYTE PTR [rax],ah
  40cf3d:	outs   dx,DWORD PTR ds:[rsi]
  40cf3e:	(bad)  
  40cf3f:	push   0x20
  40cf41:	ds cmp eax,0x756f6220
  40cf47:	outs   dx,BYTE PTR ds:[rsi]
  40cf48:	and    BYTE PTR fs:[rax],ch
  40cf4b:	ins    DWORD PTR es:[rdi],dx
  40cf4c:	(bad)  
  40cf4d:	js     0x40cfb8
  40cf4f:	ins    DWORD PTR es:[rdi],dx
  40cf50:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  40cf57:	sub    DWORD PTR [rax],esp
  40cf59:	je     0x40cfca
  40cf5b:	and    BYTE PTR [rcx+0x6e],ch
  40cf5e:	je     0x40cfc5
  40cf60:	addr32 gs jb 0x40cf84
  40cf64:	data16 gs (bad) 
  40cf67:	jae    0x40cfd2
  40cf69:	(bad)  
  40cf6a:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0xa79
  40cf72:	add    BYTE PTR [rax],al
  40cf74:	add    BYTE PTR [rax],al
  40cf76:	add    BYTE PTR [rax],al
  40cf78:	and    BYTE PTR [rax],ah
  40cf7a:	and    BYTE PTR [rax],ah
  40cf7c:	and    BYTE PTR [rax],ah
  40cf7e:	and    BYTE PTR [rax],ah
  40cf80:	and    BYTE PTR [rax],ah
  40cf82:	and    BYTE PTR [rax],ah
  40cf84:	and    BYTE PTR [rax],ah
  40cf86:	and    BYTE PTR [rax],ah
  40cf88:	and    BYTE PTR [rax],ah
  40cf8a:	and    BYTE PTR [rax],ah
  40cf8c:	and    BYTE PTR [rax+0x72],dh
  40cf8f:	outs   dx,DWORD PTR ds:[rsi]
  40cf90:	(bad)  
  40cf91:	ins    BYTE PTR es:[rdi],dx
  40cf92:	gs ins DWORD PTR es:[rdi],dx
  40cf94:	and    BYTE PTR [rax],ch
  40cf96:	(bad)  
  40cf97:	jae    0x40d00c
  40cf99:	jne    0x40d008
  40cf9b:	gs jae 0x40cfbe
  40cf9e:	sub    eax,0x6e696d2d
  40cfa3:	imul   esi,DWORD PTR [rbx+0x61],0xa2974
  40cfaa:	add    BYTE PTR [rax],al
  40cfac:	add    BYTE PTR [rax],al
  40cfae:	add    BYTE PTR [rax],al
  40cfb0:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40cfb2:	jb     0x40cfd4
  40cfb4:	fs gs jae 0x40d01b
  40cfb8:	jb     0x40d023
  40cfba:	jo     0x40d030
  40cfbc:	imul   ebp,DWORD PTR [rdi+0x6e],0x20666f20
  40cfc3:	je     0x40d02d
  40cfc5:	and    BYTE PTR gs:[rbp+0x50],cl
  40cfc9:	push   rbx
  40cfca:	and    BYTE PTR [rcx+0x6e],ah
  40cfcd:	and    BYTE PTR fs:[rbx+0x50],al
  40cfd1:	rex.WR
  40cfd2:	rex.RB pop r8
  40cfd4:	and    BYTE PTR [rax+rdx*2+0x20],cl
  40cfd8:	outs   dx,WORD PTR ds:[rsi]
  40cfda:	jb     0x40d049
  40cfdc:	(bad)  
  40cfdd:	je     0x40d052
  40cfdf:	and    BYTE PTR [rbx+0x65],dh
  40cfe2:	and    BYTE PTR gs:[rdx+0x65],dl
  40cfe6:	data16 gs jb 0x40d04f
  40cfea:	outs   dx,BYTE PTR ds:[rsi]
  40cfeb:	movsxd esp,DWORD PTR [rbp+0x20]
  40cfee:	rex.WRB (bad) 
  40cff0:	outs   dx,BYTE PTR ds:[rsi]
  40cff1:	jne    0x40d054
  40cff3:	ins    BYTE PTR es:[rdi],dx
  40cff4:	or     al,BYTE PTR cs:[rax]
  40cff7:	add    BYTE PTR [rsi+0x6f],al
  40cffa:	jb     0x40d01c
  40cffc:	fs gs jae 0x40d063
  40d000:	jb     0x40d06b
  40d002:	jo     0x40d078
  40d004:	imul   ebp,DWORD PTR [rdi+0x6e],0x20666f20
  40d00b:	je     0x40d075
  40d00d:	and    BYTE PTR gs:[rbp+0x6f],ch
  40d011:	fs gs ins BYTE PTR es:[rdi],dx
  40d014:	imul   ebp,DWORD PTR [rsi+0x67],0x6e616c20
  40d01b:	addr32 jne 0x40d07f
  40d01e:	and    BYTE PTR gs:[ebx+0x65],dh
  40d023:	and    BYTE PTR gs:[rdx],ah
  40d026:	rex.RXB
  40d027:	rex.WR push rax
  40d029:	rex.WXB cmp spl,BYTE PTR [r8]
  40d02c:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  40d02e:	fs gs ins BYTE PTR es:[rdi],dx
  40d031:	imul   ebp,DWORD PTR [rsi+0x67],0x6e614c20
  40d038:	addr32 jne 0x40d09c
  40d03b:	or     al,BYTE PTR gs:[eax]
  40d03f:	add    BYTE PTR [rdi+0x4e],al
  40d042:	push   rbp
  40d043:	and    BYTE PTR [rbp+0x61],cl
  40d046:	je     0x40d0b0
  40d048:	push   rax
  40d049:	jb     0x40d0ba
  40d04b:	and    ch,BYTE PTR [esi]
  40d04e:	and    BYTE PTR [rdx+0x6f],al
  40d051:	je     0x40d0bb
  40d053:	and    BYTE PTR [rdi+rbp*2+0x63],ah
  40d057:	jne    0x40d0c6
  40d059:	outs   dx,BYTE PTR gs:[rsi]
  40d05b:	je     0x40d0d0
  40d05d:	and    BYTE PTR [rcx+0x72],ah
  40d060:	and    BYTE PTR gs:[rcx+0x6e],ch
  40d064:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  40d068:	gs and BYTE PTR fs:[rcx+0x6e],ch
  40d06d:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40d071:	and    BYTE PTR [rdi+0x4c],al
  40d074:	push   rax
  40d075:	rex.WXB and BYTE PTR [r9+r13*2+0x73],spl
  40d07a:	je     0x40d0ee
  40d07c:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  40d083:	or     al,BYTE PTR cs:[rax]
  40d086:	add    BYTE PTR [rax],al
  40d088:	push   rbx
  40d089:	gs and BYTE PTR gs:[rdi+0x4c],al
  40d08e:	push   rax
  40d08f:	rex.WXB and BYTE PTR [r15+0x65],sil
  40d093:	(bad)  
  40d094:	and    BYTE PTR [rax+0x61],dh
  40d097:	and    BYTE PTR gs:[ecx+0x74],ah
  40d09c:	and    BYTE PTR [rax+rbp*2],bh
  40d09f:	je     0x40d115
  40d0a1:	jo     0x40d0dd
  40d0a3:	(bad)  
  40d0a4:	(bad)  
  40d0a5:	ja     0x40d11e
  40d0a7:	ja     0x40d0d7
  40d0a9:	outs   dx,BYTE PTR ds:[esi]
  40d0ab:	jne    0x40d0db
  40d0ad:	outs   dx,DWORD PTR ds:[rsi]
  40d0ae:	jb     0x40d117
  40d0b0:	(bad)  
  40d0b1:	jae    0x40d122
  40d0b3:	data16 je 0x40d12d
  40d0b6:	(bad)  
  40d0b7:	jb     0x40d11e
  40d0b9:	(bad)  
  40d0ba:	ins    BYTE PTR es:[edi],dx
  40d0bc:	jo     0x40d129
  40d0be:	(bad)  
  40d0bf:	ins    BYTE PTR es:[edi],dx
  40d0c1:	jo     0x40d12e
  40d0c3:	cs push 0x3e6c6d74
  40d0c9:	or     al,BYTE PTR cs:[rax]
  40d0cc:	add    BYTE PTR [rax],al
  40d0ce:	add    BYTE PTR [rax],al
  40d0d0:	push   rax
  40d0d1:	ins    BYTE PTR es:[rdi],dx
  40d0d2:	gs (bad) 
  40d0d4:	jae    0x40d13b
  40d0d6:	and    BYTE PTR [rdx+0x65],dh
  40d0d9:	jo     0x40d14a
  40d0db:	jb     0x40d151
  40d0dd:	and    BYTE PTR [rdx+0x75],ah
  40d0e0:	addr32 jae 0x40d103
  40d0e3:	je     0x40d154
  40d0e5:	and    BYTE PTR [rdx+riz*2],bh
  40d0e8:	jne    0x40d151
  40d0ea:	sub    eax,0x6b706c67
  40d0ef:	rex
  40d0f0:	outs   dx,BYTE PTR ds:[esi]
  40d0f2:	jne    0x40d122
  40d0f4:	outs   dx,DWORD PTR ds:[rsi]
  40d0f5:	jb     0x40d15e
  40d0f7:	ds or  al,BYTE PTR cs:[rax]
  40d0fb:	sub    eax,0x2d2d0076
  40d100:	jbe    0x40d167
  40d102:	jb     0x40d177
  40d104:	imul   ebp,DWORD PTR [rdi+0x6e],0x504c4700
  40d10b:	push   rbx
  40d10c:	rex.WRXB
  40d10d:	rex.WR cmp r12b,BYTE PTR [rax]
  40d110:	rex.RXB
  40d111:	rex.WR push rax
  40d113:	rex.WXB and BYTE PTR [r8+r10*2+0x2f],cl
  40d118:	rex.WRB
  40d119:	rex.WB push r8
  40d11b:	and    BYTE PTR [rbx+0x6f],dl
  40d11e:	ins    BYTE PTR es:[rdi],dx
  40d11f:	jbe    0x40d186
  40d121:	jb     0x40d14f
  40d123:	and    BYTE PTR [rsi+0x25],dh
  40d126:	jae    0x40d132
	...
  40d130:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40d132:	jo     0x40d1ad
  40d134:	jb     0x40d19f
  40d136:	addr32 push 0x43282074
  40d13c:	sub    DWORD PTR [rax],esp
  40d13e:	xor    dh,BYTE PTR [rax]
  40d140:	xor    BYTE PTR [rax],dh
  40d142:	sub    eax,0x35313032
  40d147:	and    BYTE PTR [rcx+0x6e],al
  40d14a:	fs jb  0x40d1b2
  40d14d:	ja     0x40d16f
  40d14f:	rex.WRB (bad) 
  40d151:	imul   ebp,DWORD PTR [rax+0x6f],0x72
  40d155:	imul   ebp,DWORD PTR [rsi+0x2c],0x70654420
  40d15c:	(bad)  
  40d15d:	jb     0x40d1d3
  40d15f:	ins    DWORD PTR es:[rdi],dx
  40d160:	outs   dx,BYTE PTR gs:[rsi]
  40d162:	je     0x40d184
  40d164:	outs   dx,WORD PTR ds:[rsi]
  40d166:	jb     0x40d188
  40d168:	rex.B jo 0x40d1db
  40d16b:	ins    BYTE PTR es:[rdi],dx
  40d16c:	imul   esp,DWORD PTR [rbp+0x64],0xa
  40d173:	add    BYTE PTR [rax],al
  40d175:	add    BYTE PTR [rax],al
  40d177:	add    BYTE PTR [rcx+0x6e],cl
  40d17a:	outs   dx,WORD PTR ds:[rsi]
  40d17c:	jb     0x40d1eb
  40d17e:	(bad)  
  40d17f:	je     0x40d1ea
  40d181:	movsxd esi,DWORD PTR [rbx+0x2c]
  40d184:	and    BYTE PTR [rbp+0x6f],cl
  40d187:	jae    0x40d1ec
  40d189:	outs   dx,DWORD PTR ds:[rsi]
  40d18a:	ja     0x40d1ac
  40d18c:	rex.B jbe 0x40d1f8
  40d18f:	(bad)  
  40d190:	je     0x40d1fb
  40d192:	outs   dx,DWORD PTR ds:[rsi]
  40d193:	outs   dx,BYTE PTR ds:[rsi]
  40d194:	and    BYTE PTR [rcx+0x6e],cl
  40d197:	jae    0x40d20d
  40d199:	imul   esi,DWORD PTR [rbp+rsi*2+0x74],0x4d202c65
  40d1a1:	outs   dx,DWORD PTR ds:[rsi]
  40d1a2:	jae    0x40d207
  40d1a4:	outs   dx,DWORD PTR ds:[rsi]
  40d1a5:	ja     0x40d1d3
  40d1a7:	and    BYTE PTR [rdx+0x75],dl
  40d1aa:	jae    0x40d21f
  40d1ac:	imul   esp,DWORD PTR [rcx+0x2e],0x6c6c4120
  40d1b3:	and    BYTE PTR [rdx+0x69],dh
  40d1b6:	addr32 push 0xa7374
  40d1bc:	add    BYTE PTR [rax],al
  40d1be:	add    BYTE PTR [rax],al
  40d1c0:	jb     0x40d227
  40d1c2:	jae    0x40d229
  40d1c4:	jb     0x40d23c
  40d1c6:	gs fs and BYTE PTR cs:[rbp+0x2d],al
  40d1cc:	ins    DWORD PTR es:[rdi],dx
  40d1cd:	(bad)  
  40d1ce:	imul   ebp,DWORD PTR [rdx+rdi*1+0x20],0x6f616d3c
  40d1d6:	rex
  40d1d7:	outs   dx,BYTE PTR ds:[esi]
  40d1d9:	jne    0x40d209
  40d1db:	outs   dx,DWORD PTR ds:[rsi]
  40d1dc:	jb     0x40d245
  40d1de:	ds or  al,BYTE PTR cs:[rax]
  40d1e2:	add    BYTE PTR [rax],al
  40d1e4:	add    BYTE PTR [rax],al
  40d1e6:	add    BYTE PTR [rax],al
  40d1e8:	push   rsp
  40d1e9:	push   0x70207369
  40d1ee:	jb     0x40d25f
  40d1f0:	addr32 jb 0x40d254
  40d1f3:	ins    DWORD PTR es:[rdi],dx
  40d1f4:	and    BYTE PTR [rax+0x61],ch
  40d1f7:	jae    0x40d219
  40d1f9:	rex.B
  40d1fa:	rex.X push rbx
  40d1fc:	rex.WRXB
  40d1fd:	rex.WR push rbp
  40d1ff:	push   rsp
  40d200:	rex.RB
  40d201:	rex.WR pop rcx
  40d203:	and    BYTE PTR [rsi+0x4f],cl
  40d206:	and    BYTE PTR [rdi+0x41],dl
  40d209:	push   rdx
  40d20a:	push   rdx
  40d20b:	rex.B
  40d20c:	rex.WRX push rsp
  40d20e:	pop    rcx
  40d20f:	or     al,BYTE PTR cs:[rax]
  40d212:	add    BYTE PTR [rax],al
  40d214:	add    BYTE PTR [rax],al
  40d216:	add    BYTE PTR [rax],al
  40d218:	push   rsp
  40d219:	push   0x70207369
  40d21e:	jb     0x40d28f
  40d220:	addr32 jb 0x40d284
  40d223:	ins    DWORD PTR es:[rdi],dx
  40d224:	and    BYTE PTR [rcx+0x73],ch
  40d227:	and    BYTE PTR [rsi+0x72],ah
  40d22a:	gs and BYTE PTR gs:[rbx+0x6f],dh
  40d22f:	data16 je 0x40d2a9
  40d232:	(bad)  
  40d233:	jb     0x40d29a
  40d235:	cmp    esp,DWORD PTR [rax]
  40d237:	jns    0x40d2a8
  40d239:	jne    0x40d25b
  40d23b:	ins    DWORD PTR es:[rdi],dx
  40d23c:	(bad)  
  40d23d:	jns    0x40d25f
  40d23f:	jb     0x40d2a6
  40d241:	sub    eax,0x74736964
  40d246:	jb     0x40d2b1
  40d248:	(bad)  
  40d249:	jne    0x40d2bf
  40d24b:	and    BYTE PTR gs:[rcx+0x74],ch
  40d24f:	and    BYTE PTR [rbp+0x6e],dh
  40d252:	fs gs jb 0x40d276
  40d256:	je     0x40d2c0
  40d258:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  40d25d:	ins    DWORD PTR es:[rdi],dx
  40d25e:	jae    0x40d26a
	...
  40d268:	outs   dx,DWORD PTR ds:[rsi]
  40d269:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  40d26e:	and    BYTE PTR [rdi+0x4e],al
  40d271:	push   rbp
  40d272:	and    BYTE PTR [rdi+0x65],al
  40d275:	outs   dx,BYTE PTR ds:[rsi]
  40d276:	gs jb  0x40d2da
  40d279:	ins    BYTE PTR es:[rdi],dx
  40d27a:	and    BYTE PTR [rax+0x75],dl
  40d27d:	(bad)  
  40d27e:	ins    BYTE PTR es:[rdi],dx
  40d27f:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  40d286:	outs   dx,BYTE PTR ds:[rsi]
  40d287:	jae    0x40d2ee
  40d289:	and    BYTE PTR [rsi+0x65],dh
  40d28c:	jb     0x40d301
  40d28e:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203320
  40d295:	jb     0x40d2b7
  40d297:	ins    BYTE PTR es:[rdi],dx
  40d298:	(bad)  
  40d299:	je     0x40d300
  40d29b:	jb     0x40d2cb
  40d29d:	or     al,BYTE PTR [rax]
  40d29f:	sub    eax,0x66756c2d
  40d2a4:	add    BYTE PTR [rip+0x6674622d],ch        # 0x66b534d7
  40d2aa:	add    BYTE PTR [rip+0x74662d],ch        # 0xb538dd
  40d2b0:	sub    eax,0x6762632d
  40d2b5:	add    BYTE PTR [rip+0x7267632d],ch        # 0x72a835e8
  40d2bb:	add    BYTE PTR [rip+0x6972702d],ch        # 0x69b342ee
  40d2c1:	ins    DWORD PTR es:[rdi],dx
  40d2c2:	(bad)  
  40d2c3:	ins    BYTE PTR es:[rdi],dx
  40d2c4:	add    BYTE PTR [rip+0x6175642d],ch        # 0x61b636f7
  40d2ca:	ins    BYTE PTR es:[rdi],dx
  40d2cb:	add    BYTE PTR [rip+0x6474732d],ch        # 0x64b545fe
  40d2d1:	add    BYTE PTR [rip+0x7664612d],ch        # 0x76a53404
  40d2d7:	add    BYTE PTR [rip+0x6269622d],ch        # 0x62aa350a
  40d2dd:	add    BYTE PTR [rip+0x696e692d],ch        # 0x69af3c10
  40d2e3:	add    BYTE PTR [rax],al
  40d2e5:	add    BYTE PTR [rax],al
  40d2e7:	add    BYTE PTR [rsi+0x6f],cl
  40d2ea:	and    BYTE PTR [rcx+0x6e],ch
  40d2ed:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x6162206c
  40d2f5:	jae    0x40d360
  40d2f7:	jae    0x40d319
  40d2f9:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7073
  40d300:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40d304:	imul   esp,DWORD PTR [rbp+0x64],0xa
  40d30b:	add    BYTE PTR [rax],al
  40d30d:	add    BYTE PTR [rax],al
  40d30f:	add    BYTE PTR [rdi+0x6e],cl
  40d312:	ins    BYTE PTR es:[rdi],dx
  40d313:	jns    0x40d335
  40d315:	outs   dx,DWORD PTR ds:[rsi]
  40d316:	outs   dx,BYTE PTR ds:[rsi]
  40d317:	and    BYTE PTR gs:[rcx+0x6e],ch
  40d31b:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x6162206c
  40d323:	jae    0x40d38e
  40d325:	jae    0x40d347
  40d327:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6c61
  40d32e:	ins    BYTE PTR es:[rdi],dx
  40d32f:	outs   dx,DWORD PTR ds:[rsi]
  40d330:	ja     0x40d397
  40d332:	or     al,BYTE PTR fs:[rax]
  40d335:	sub    eax,0x6574732d
  40d33a:	gs jo  0x40d33d
  40d33d:	sub    eax,0x736f6e2d
  40d342:	je     0x40d3a9
  40d344:	gs jo  0x40d347
  40d347:	sub    eax,0x6c65722d
  40d34c:	(bad)  
  40d34d:	js     0x40d34f
  40d34f:	sub    eax,0x726f6e2d
  40d354:	gs ins BYTE PTR es:[rdi],dx
  40d356:	(bad)  
  40d357:	js     0x40d359
  40d359:	sub    eax,0x696c662d
  40d35e:	jo     0x40d360
  40d360:	sub    eax,0x6572702d
  40d365:	jae    0x40d3d6
  40d367:	ins    BYTE PTR es:[rdi],dx
  40d368:	add    BYTE PTR [rip+0x706f6e2d],ch        # 0x70b0419b
  40d36e:	jb     0x40d3d5
  40d370:	jae    0x40d3e1
  40d372:	ins    BYTE PTR es:[rdi],dx
  40d373:	add    BYTE PTR [rip+0x6178652d],ch        # 0x61b938a6
  40d379:	movsxd esi,DWORD PTR [rax+rax*1+0x2d]
  40d37d:	sub    eax,0x65686378
  40d382:	movsxd ebp,DWORD PTR [rbx+0x0]
  40d385:	sub    eax,0x726f6e2d
  40d38a:	add    BYTE PTR fs:[rip+0x646d712d],ch        # 0x64ae44be
  40d391:	add    BYTE PTR [rip+0x646d612d],ch        # 0x64ae34c4
  40d397:	add    BYTE PTR [rip+0x6d79732d],ch        # 0x6dba46ca
  40d39d:	(bad)  
  40d39e:	ins    DWORD PTR es:[rdi],dx
  40d39f:	add    BYTE PTR fs:[rip+0x6d6f6e2d],ch        # 0x6db041d3
  40d3a6:	imul   esi,DWORD PTR [rax+0x0],0x69662d2d
  40d3ad:	jb     0x40d422
  40d3af:	je     0x40d3b1
  40d3b1:	sub    eax,0x73616c2d
  40d3b6:	je     0x40d3b8
  40d3b8:	sub    eax,0x7472642d
  40d3bd:	outs   dx,DWORD PTR ds:[rsi]
  40d3be:	ins    DWORD PTR es:[rdi],dx
  40d3bf:	add    BYTE PTR [rip+0x736f6d2d],ch        # 0x73b040f2
  40d3c5:	je     0x40d42d
  40d3c7:	add    BYTE PTR [rip+0x6f63702d],ch        # 0x6fa443fa
  40d3cd:	jae    0x40d443
  40d3cf:	add    BYTE PTR [rip+0x7366642d],ch        # 0x73a73802
  40d3d5:	add    BYTE PTR [rip+0x7366622d],ch        # 0x73a73608
  40d3db:	add    BYTE PTR [rip+0x7365622d],ch        # 0x73a6360e
  40d3e1:	je     0x40d453
  40d3e3:	add    BYTE PTR [rip+0x7365622d],ch        # 0x73a63616
  40d3e9:	je     0x40d44d
  40d3eb:	add    BYTE PTR [rip+0x746e692d],ch        # 0x74af3d1e
  40d3f1:	outs   dx,DWORD PTR ds:[rsi]
  40d3f2:	jo     0x40d468
  40d3f4:	add    BYTE PTR [rip+0x696f6e2d],ch        # 0x69b04227
  40d3fa:	outs   dx,BYTE PTR ds:[rsi]
  40d3fb:	je     0x40d46c
  40d3fd:	jo     0x40d473
  40d3ff:	add    BYTE PTR [rip+0x6e69622d],ch        # 0x6eaa3632
  40d405:	(bad)  
  40d406:	jb     0x40d471
  40d408:	jp     0x40d46f
  40d40a:	add    BYTE PTR [rip+0x7570662d],ch        # 0x75b13a3d
  40d410:	ins    DWORD PTR es:[rdi],dx
  40d411:	jo     0x40d413
  40d413:	sub    eax,0x6f72702d
  40d418:	js     0x40d493
  40d41a:	add    BYTE PTR [rax],al
  40d41c:	add    BYTE PTR [rax],al
  40d41e:	add    BYTE PTR [rax],al
  40d420:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40d422:	jbe    0x40d485
  40d424:	ins    BYTE PTR es:[rdi],dx
  40d425:	imul   esp,DWORD PTR [rax+riz*1+0x70],0x79786f72
  40d42d:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  40d431:	and    BYTE PTR gs:[rcx+rbp*2+0x6d],ch
  40d436:	imul   esi,DWORD PTR [rax+riz*1+0x27],0xa277325
  40d43e:	add    BYTE PTR [rip+0x6d6f672d],ch        # 0x6db03b71
  40d444:	outs   dx,DWORD PTR ds:[rsi]
  40d445:	jb     0x40d4c0
  40d447:	add    BYTE PTR [rip+0x72696d2d],ch        # 0x72aa417a
  40d44d:	add    BYTE PTR [rip+0x766f632d],ch        # 0x76b03780
  40d453:	gs jb  0x40d456
  40d456:	sub    eax,0x696c632d
  40d45b:	jno    0x40d4d2
  40d45d:	add    BYTE PTR gs:[rip+0x7475632d],ch        # 0x74b63791
  40d464:	jae    0x40d466
  40d466:	sub    eax,0x70696d2d
  40d46b:	addr32 (bad) 
  40d46d:	jo     0x40d46f
  40d46f:	add    BYTE PTR [rsi+0x6f],cl
  40d472:	and    BYTE PTR [rdx+0x65],dh
  40d475:	ins    BYTE PTR es:[rdi],dx
  40d476:	(bad)  
  40d477:	je     0x40d4e2
  40d479:	jbe    0x40d4e0
  40d47b:	and    BYTE PTR [rdi+0x61],ah
  40d47e:	jo     0x40d4a0
  40d480:	je     0x40d4f1
  40d482:	ins    BYTE PTR es:[rdi],dx
  40d483:	gs jb  0x40d4e7
  40d486:	outs   dx,BYTE PTR ds:[rsi]
  40d487:	movsxd esp,DWORD PTR [rbp+0x20]
  40d48a:	jae    0x40d4fc
  40d48c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40d490:	imul   esp,DWORD PTR [rbp+0x64],0xa
  40d497:	add    BYTE PTR [rcx+0x6e],cl
  40d49a:	jbe    0x40d4fd
  40d49c:	ins    BYTE PTR es:[rdi],dx
  40d49d:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x74616c65
  40d4a5:	imul   esi,DWORD PTR [rsi+0x65],0x70696d20
  40d4ac:	and    BYTE PTR [rdi+0x61],ah
  40d4af:	jo     0x40d4d1
  40d4b1:	je     0x40d522
  40d4b3:	ins    BYTE PTR es:[rdi],dx
  40d4b4:	gs jb  0x40d518
  40d4b7:	outs   dx,BYTE PTR ds:[rsi]
  40d4b8:	movsxd esp,DWORD PTR [rbp+0x20]
  40d4bb:	(bad)  
  40d4bc:	and    eax,0xa2773
  40d4c1:	sub    eax,0x6e696d2d
  40d4c6:	imul   esi,DWORD PTR [rbx+0x61],0x2d2d0074
  40d4cd:	outs   dx,DWORD PTR ds:[rsi]
  40d4ce:	(bad)  
  40d4cf:	push   0x62
  40d4d1:	outs   dx,BYTE PTR ds:[rsi]
  40d4d2:	add    BYTE PTR fs:[rsi+0x6f],cl
  40d4d6:	and    BYTE PTR [rdi+0x62],ch
  40d4d9:	push   0x65
  40d4db:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
  40d4df:	and    BYTE PTR gs:[rdx+0x6f],ah
  40d4e3:	jne    0x40d553
  40d4e5:	and    BYTE PTR fs:[rbx+0x70],dh
  40d4e9:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40d4ed:	imul   esp,DWORD PTR [rbp+0x64],0xa
  40d4f4:	add    BYTE PTR [rax],al
  40d4f6:	add    BYTE PTR [rax],al
  40d4f8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40d4fa:	jbe    0x40d55d
  40d4fc:	ins    BYTE PTR es:[rdi],dx
  40d4fd:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x63656a62
  40d505:	je     0x40d570
  40d507:	jbe    0x40d56e
  40d509:	and    BYTE PTR [rdx+0x6f],ah
  40d50c:	jne    0x40d57c
  40d50e:	and    BYTE PTR fs:[rdi],ah
  40d511:	and    eax,0x28202773
  40d516:	jae    0x40d580
  40d518:	outs   dx,DWORD PTR ds:[rsi]
  40d519:	jne    0x40d587
  40d51b:	and    BYTE PTR fs:[rdx+0x65],ah
  40d51f:	and    BYTE PTR [rcx+0x6e],ch
  40d522:	je     0x40d589
  40d524:	addr32 gs jb 0x40d548
  40d528:	jbe    0x40d58b
  40d52a:	ins    BYTE PTR es:[rdi],dx
  40d52b:	jne    0x40d592
  40d52d:	sub    DWORD PTR [rdx],ecx
  40d52f:	add    BYTE PTR [rip+0x6573752d],ch        # 0x65b44a62
  40d535:	add    BYTE PTR [rax],al
  40d537:	add    BYTE PTR [rsi+0x6f],cl
  40d53a:	and    BYTE PTR [rcx+0x6e],ch
  40d53d:	jo     0x40d5b4
  40d53f:	je     0x40d561
  40d541:	rex.WRB
  40d542:	rex.WB push r8
  40d544:	and    BYTE PTR [rbx+0x6f],dh
  40d547:	ins    BYTE PTR es:[rdi],dx
  40d548:	jne    0x40d5be
  40d54a:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c696620
  40d551:	and    BYTE PTR gs:[rbx+0x70],dh
  40d555:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40d559:	imul   esp,DWORD PTR [rbp+0x64],0xa
  40d560:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  40d562:	ins    BYTE PTR es:[rdi],dx
  40d563:	jns    0x40d585
  40d565:	outs   dx,DWORD PTR ds:[rsi]
  40d566:	outs   dx,BYTE PTR ds:[rsi]
  40d567:	and    BYTE PTR gs:[rcx+0x6e],ch
  40d56b:	jo     0x40d5e2
  40d56d:	je     0x40d58f
  40d56f:	rex.WRB
  40d570:	rex.WB push r8
  40d572:	and    BYTE PTR [rbx+0x6f],dh
  40d575:	ins    BYTE PTR es:[rdi],dx
  40d576:	jne    0x40d5ec
  40d578:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c696620
  40d57f:	and    BYTE PTR gs:[rcx+0x6c],ah
  40d583:	ins    BYTE PTR es:[rdi],dx
  40d584:	outs   dx,DWORD PTR ds:[rsi]
  40d585:	ja     0x40d5ec
  40d587:	or     al,BYTE PTR fs:[rax]
  40d58a:	sub    eax,0x7661732d
  40d58f:	add    BYTE PTR gs:[rax],al
  40d592:	add    BYTE PTR [rax],al
  40d594:	add    BYTE PTR [rax],al
  40d596:	add    BYTE PTR [rax],al
  40d598:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  40d59a:	and    BYTE PTR [rdi+0x75],ch
  40d59d:	je     0x40d60f
  40d59f:	jne    0x40d615
  40d5a1:	and    BYTE PTR [rbp+0x49],cl
  40d5a4:	push   rax
  40d5a5:	and    BYTE PTR [rbx+0x6f],dh
  40d5a8:	ins    BYTE PTR es:[rdi],dx
  40d5a9:	jne    0x40d61f
  40d5ab:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c696620
  40d5b2:	and    BYTE PTR gs:[rbx+0x70],dh
  40d5b6:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40d5ba:	imul   esp,DWORD PTR [rbp+0x64],0x4f00000a
  40d5c1:	outs   dx,BYTE PTR ds:[rsi]
  40d5c2:	ins    BYTE PTR es:[rdi],dx
  40d5c3:	jns    0x40d5e5
  40d5c5:	outs   dx,DWORD PTR ds:[rsi]
  40d5c6:	outs   dx,BYTE PTR ds:[rsi]
  40d5c7:	and    BYTE PTR gs:[rdi+0x75],ch
  40d5cb:	je     0x40d63d
  40d5cd:	jne    0x40d643
  40d5cf:	and    BYTE PTR [rbp+0x49],cl
  40d5d2:	push   rax
  40d5d3:	and    BYTE PTR [rbx+0x6f],dh
  40d5d6:	ins    BYTE PTR es:[rdi],dx
  40d5d7:	jne    0x40d64d
  40d5d9:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c696620
  40d5e0:	and    BYTE PTR gs:[rcx+0x6c],ah
  40d5e4:	ins    BYTE PTR es:[rdi],dx
  40d5e5:	outs   dx,DWORD PTR ds:[rsi]
  40d5e6:	ja     0x40d64d
  40d5e8:	or     al,BYTE PTR fs:[rax]
  40d5eb:	add    BYTE PTR [rax],al
  40d5ed:	add    BYTE PTR [rax],al
  40d5ef:	add    BYTE PTR [rcx+0x6e],cl
  40d5f2:	jbe    0x40d655
  40d5f4:	ins    BYTE PTR es:[rdi],dx
  40d5f5:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x6f697470
  40d5fd:	outs   dx,BYTE PTR ds:[rsi]
  40d5fe:	and    BYTE PTR [rdi],ah
  40d600:	and    eax,0x203b2773
  40d605:	je     0x40d679
  40d607:	jns    0x40d629
  40d609:	and    eax,0x2d2d2073
  40d60e:	push   0xa706c65
  40d613:	add    BYTE PTR [rax],al
  40d615:	add    BYTE PTR [rax],al
  40d617:	add    BYTE PTR [rdi+0x6e],cl
  40d61a:	ins    BYTE PTR es:[rdi],dx
  40d61b:	jns    0x40d63d
  40d61d:	outs   dx,DWORD PTR ds:[rsi]
  40d61e:	outs   dx,BYTE PTR ds:[rsi]
  40d61f:	and    BYTE PTR gs:[rcx+0x6e],ch
  40d623:	jo     0x40d69a
  40d625:	je     0x40d647
  40d627:	jo     0x40d69b
  40d629:	outs   dx,DWORD PTR ds:[rsi]
  40d62a:	(bad)  
  40d62b:	ins    BYTE PTR es:[rdi],dx
  40d62c:	gs ins DWORD PTR es:[rdi],dx
  40d62e:	and    BYTE PTR [rsi+0x69],ah
  40d631:	ins    BYTE PTR es:[rdi],dx
  40d632:	and    BYTE PTR gs:[rcx+0x6c],ah
  40d636:	ins    BYTE PTR es:[rdi],dx
  40d637:	outs   dx,DWORD PTR ds:[rsi]
  40d638:	ja     0x40d69f
  40d63a:	or     al,BYTE PTR fs:[rax]
  40d63d:	push   rbp
  40d63e:	outs   dx,BYTE PTR ds:[rsi]
  40d63f:	(bad)  
  40d640:	(bad)  
  40d641:	ins    BYTE PTR es:[rdi],dx
  40d642:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40d647:	movsxd esi,DWORD PTR [rdx+0x65]
  40d64a:	(bad)  
  40d64b:	je     0x40d6b2
  40d64d:	and    BYTE PTR [rdi+rbp*2+0x67],ch
  40d651:	and    BYTE PTR [rsi+0x69],ah
  40d654:	ins    BYTE PTR es:[rdi],dx
  40d655:	or     al,BYTE PTR gs:[rax]
  40d658:	push   rax
  40d659:	(bad)  
  40d65a:	jb     0x40d6bd
  40d65c:	ins    DWORD PTR es:[rdi],dx
  40d65d:	gs je  0x40d6c5
  40d660:	jb     0x40d68a
  40d662:	jae    0x40d68d
  40d664:	and    BYTE PTR [rbx+0x70],dh
  40d667:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40d66b:	imul   esp,DWORD PTR [rbp+0x64],0x206e6920
  40d672:	je     0x40d6dc
  40d674:	and    BYTE PTR gs:[rbx+0x6f],ah
  40d678:	ins    DWORD PTR es:[rdi],dx
  40d679:	ins    DWORD PTR es:[rdi],dx
  40d67a:	(bad)  
  40d67b:	outs   dx,BYTE PTR ds:[rsi]
  40d67c:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  40d681:	cmp    al,BYTE PTR gs:[rax]
  40d684:	and    BYTE PTR [rip+0x6f4e0073],ah        # 0x6f8ed6fd
  40d68a:	and    BYTE PTR [rcx+0x6e],ch
  40d68d:	jo     0x40d704
  40d68f:	je     0x40d6b1
  40d691:	jo     0x40d705
  40d693:	outs   dx,DWORD PTR ds:[rsi]
  40d694:	(bad)  
  40d695:	ins    BYTE PTR es:[rdi],dx
  40d696:	gs ins DWORD PTR es:[rdi],dx
  40d698:	and    BYTE PTR [rsi+0x69],ah
  40d69b:	ins    BYTE PTR es:[rdi],dx
  40d69c:	and    BYTE PTR gs:[rbx+0x70],dh
  40d6a0:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40d6a4:	imul   esp,DWORD PTR [rbp+0x64],0x7274203b
  40d6ab:	jns    0x40d6cd
  40d6ad:	and    eax,0x2d2d2073
  40d6b2:	push   0xa706c65
  40d6b7:	add    BYTE PTR [rbp+0x50],cl
  40d6ba:	push   rbx
  40d6bb:	and    BYTE PTR [rsi+0x69],ah
  40d6be:	ins    BYTE PTR es:[rdi],dx
  40d6bf:	and    BYTE PTR gs:[rax+0x72],dh
  40d6c3:	outs   dx,DWORD PTR ds:[rsi]
  40d6c4:	movsxd esp,DWORD PTR [rbp+0x73]
  40d6c7:	jae    0x40d732
  40d6c9:	outs   dx,BYTE PTR ds:[rsi]
  40d6ca:	and    BYTE PTR [ebp+0x72],ah
  40d6ce:	jb     0x40d73f
  40d6d0:	jb     0x40d6dc
  40d6d2:	add    BYTE PTR [rax],al
  40d6d4:	add    BYTE PTR [rax],al
  40d6d6:	add    BYTE PTR [rax],al
  40d6d8:	rex.XB push r8
  40d6da:	rex.WR
  40d6db:	rex.RB pop r8
  40d6dd:	and    BYTE PTR [rax+rdx*2+0x20],cl
  40d6e1:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7270
  40d6e8:	outs   dx,DWORD PTR ds:[rsi]
  40d6e9:	movsxd esp,DWORD PTR [rbp+0x73]
  40d6ec:	jae    0x40d757
  40d6ee:	outs   dx,BYTE PTR ds:[rsi]
  40d6ef:	and    BYTE PTR [ebp+0x72],ah
  40d6f3:	jb     0x40d764
  40d6f5:	jb     0x40d701
  40d6f7:	add    BYTE PTR [rdi+0x4c],al
  40d6fa:	push   rax
  40d6fb:	rex.WXB and BYTE PTR [r8+r10*2+0x2f],cl
  40d700:	rex.WRB
  40d701:	rex.WB push r8
  40d703:	and    BYTE PTR [rsi+0x69],ah
  40d706:	ins    BYTE PTR es:[rdi],dx
  40d707:	and    BYTE PTR gs:[rax+0x72],dh
  40d70b:	outs   dx,DWORD PTR ds:[rsi]
  40d70c:	movsxd esp,DWORD PTR [rbp+0x73]
  40d70f:	jae    0x40d77a
  40d711:	outs   dx,BYTE PTR ds:[rsi]
  40d712:	and    BYTE PTR [ebp+0x72],ah
  40d716:	jb     0x40d787
  40d718:	jb     0x40d724
  40d71a:	add    BYTE PTR [rbx+0x65],dl
  40d71d:	gs and BYTE PTR fs:[rsi+0x61],dh
  40d722:	ins    BYTE PTR es:[rdi],dx
  40d723:	jne    0x40d78a
  40d725:	and    BYTE PTR [rip+0x69772064],ah        # 0x69b7f78f
  40d72b:	ins    BYTE PTR es:[rdi],dx
  40d72c:	ins    BYTE PTR es:[rdi],dx
  40d72d:	and    BYTE PTR [rdx+0x65],ah
  40d730:	and    BYTE PTR [rbp+0x73],dh
  40d733:	gs or  al,BYTE PTR fs:[rax]
  40d737:	add    BYTE PTR [rbp+0x61],cl
  40d73a:	je     0x40d7a4
  40d73c:	push   rax
  40d73d:	jb     0x40d7ae
  40d73f:	and    BYTE PTR [ebp+0x6f],ch
  40d743:	fs gs ins BYTE PTR es:[rdi],dx
  40d746:	and    BYTE PTR [rax+0x72],dh
  40d749:	outs   dx,DWORD PTR ds:[rsi]
  40d74a:	movsxd esp,DWORD PTR [rbp+0x73]
  40d74d:	jae    0x40d7b8
  40d74f:	outs   dx,BYTE PTR ds:[rsi]
  40d750:	and    BYTE PTR [ebp+0x72],ah
  40d754:	jb     0x40d7c5
  40d756:	jb     0x40d762
  40d758:	add    BYTE PTR [rcx+rcx*2+0x4d],al
  40d75c:	rex.B
  40d75d:	rex.XB push r11
  40d75f:	and    BYTE PTR [rsi+0x69],ah
  40d762:	ins    BYTE PTR es:[rdi],dx
  40d763:	and    BYTE PTR gs:[rax+0x72],dh
  40d767:	outs   dx,DWORD PTR ds:[rsi]
  40d768:	movsxd esp,DWORD PTR [rbp+0x73]
  40d76b:	jae    0x40d7d6
  40d76d:	outs   dx,BYTE PTR ds:[rsi]
  40d76e:	and    BYTE PTR [ebp+0x72],ah
  40d772:	jb     0x40d7e3
  40d774:	jb     0x40d780
  40d776:	add    BYTE PTR [rax],al
  40d778:	(bad)  
  40d779:	jae    0x40d7de
  40d77b:	jb     0x40d7de
  40d77d:	je     0x40d7e2
  40d77f:	push   0x65776a2f
  40d784:	(bad)  
  40d785:	ins    DWORD PTR es:[rdi],dx
  40d786:	js     0x40d7ed
  40d788:	sub    eax,0x6174636f
  40d78d:	jbe    0x40d7f4
  40d78f:	(bad)  
  40d790:	xor    al,0x2e
  40d792:	xor    ch,BYTE PTR [rsi]
  40d794:	xor    DWORD PTR [rdi],ebp
  40d796:	ja     0x40d7ce
  40d798:	xor    al,0x2d
  40d79a:	xor    esi,DWORD PTR [rdx]
  40d79c:	(bad)  
  40d79d:	je     0x40d80c
  40d79f:	jo     0x40d7ce
  40d7a1:	ins    BYTE PTR es:[edi],dx
  40d7a3:	jo     0x40d810
  40d7a5:	(bad)  
  40d7a6:	ins    BYTE PTR es:[edi],dx
  40d7a8:	jo     0x40d815
  40d7aa:	sub    eax,0x30362e34
  40d7af:	(bad)  
  40d7b0:	gs js  0x40d814
  40d7b3:	ins    DWORD PTR es:[rdi],dx
  40d7b4:	jo     0x40d822
  40d7b6:	gs jae 0x40d7e8
  40d7b9:	ins    BYTE PTR es:[edi],dx
  40d7bb:	jo     0x40d830
  40d7bd:	outs   dx,DWORD PTR ds:[rsi]
  40d7be:	ins    BYTE PTR es:[rdi],dx
  40d7bf:	movsxd eax,DWORD PTR cs:[rax]
  40d7c2:	movsxd esi,DWORD PTR [rbx+0x61]
  40d7c5:	and    BYTE PTR [rcx],ah
  40d7c7:	cmp    eax,0x61736320
  40d7cc:	add    BYTE PTR [rax],al
  40d7ce:	add    BYTE PTR [rax],al
  40d7d0:	push   rbp
  40d7d1:	outs   dx,BYTE PTR ds:[rsi]
  40d7d2:	(bad)  
  40d7d3:	(bad)  
  40d7d4:	ins    BYTE PTR es:[rdi],dx
  40d7d5:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40d7da:	ja     0x40d84e
  40d7dc:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x626f7270
  40d7e4:	ins    BYTE PTR es:[rdi],dx
  40d7e5:	gs ins DWORD PTR es:[rdi],dx
  40d7e7:	and    BYTE PTR [rcx+0x6e],ch
  40d7ea:	and    BYTE PTR [rsi+0x69],ah
  40d7ed:	js     0x40d854
  40d7ef:	and    BYTE PTR fs:[rbp+0x50],cl
  40d7f3:	push   rbx
  40d7f4:	and    BYTE PTR [rsi+0x6f],ah
  40d7f7:	jb     0x40d866
  40d7f9:	(bad)  
  40d7fa:	je     0x40d806
  40d7fc:	add    BYTE PTR [rax],al
  40d7fe:	add    BYTE PTR [rax],al
  40d800:	push   rbp
  40d801:	outs   dx,BYTE PTR ds:[rsi]
  40d802:	(bad)  
  40d803:	(bad)  
  40d804:	ins    BYTE PTR es:[rdi],dx
  40d805:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40d80a:	ja     0x40d87e
  40d80c:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x626f7270
  40d814:	ins    BYTE PTR es:[rdi],dx
  40d815:	gs ins DWORD PTR es:[rdi],dx
  40d817:	and    BYTE PTR [rcx+0x6e],ch
  40d81a:	and    BYTE PTR [rsi+0x72],ah
  40d81d:	gs and BYTE PTR gs:[rbp+0x50],cl
  40d822:	push   rbx
  40d823:	and    BYTE PTR [rsi+0x6f],ah
  40d826:	jb     0x40d895
  40d828:	(bad)  
  40d829:	je     0x40d835
  40d82b:	add    BYTE PTR [rax],al
  40d82d:	add    BYTE PTR [rax],al
  40d82f:	add    BYTE PTR [rbp+0x6e],dl
  40d832:	(bad)  
  40d833:	(bad)  
  40d834:	ins    BYTE PTR es:[rdi],dx
  40d835:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40d83a:	ja     0x40d8ae
  40d83c:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x626f7270
  40d844:	ins    BYTE PTR es:[rdi],dx
  40d845:	gs ins DWORD PTR es:[rdi],dx
  40d847:	and    BYTE PTR [rcx+0x6e],ch
  40d84a:	and    BYTE PTR [rbx+0x50],al
  40d84d:	rex.WR
  40d84e:	rex.RB pop r8
  40d850:	and    BYTE PTR [rax+rdx*2+0x20],cl
  40d854:	outs   dx,WORD PTR ds:[rsi]
  40d856:	jb     0x40d8c5
  40d858:	(bad)  
  40d859:	je     0x40d865
  40d85b:	add    BYTE PTR [rax],al
  40d85d:	add    BYTE PTR [rax],al
  40d85f:	add    BYTE PTR [rbp+0x6e],dl
  40d862:	(bad)  
  40d863:	(bad)  
  40d864:	ins    BYTE PTR es:[rdi],dx
  40d865:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40d86a:	ja     0x40d8de
  40d86c:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x626f7270
  40d874:	ins    BYTE PTR es:[rdi],dx
  40d875:	gs ins DWORD PTR es:[rdi],dx
  40d877:	and    BYTE PTR [rcx+0x6e],ch
  40d87a:	and    BYTE PTR [rdi+0x4c],al
  40d87d:	push   rax
  40d87e:	rex.WXB and BYTE PTR [r14+0x6f],spl
  40d882:	jb     0x40d8f1
  40d884:	(bad)  
  40d885:	je     0x40d891
  40d887:	add    BYTE PTR [rbp+0x6e],dl
  40d88a:	(bad)  
  40d88b:	(bad)  
  40d88c:	ins    BYTE PTR es:[rdi],dx
  40d88d:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40d892:	ja     0x40d906
  40d894:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x626f7270
  40d89c:	ins    BYTE PTR es:[rdi],dx
  40d89d:	gs ins DWORD PTR es:[rdi],dx
  40d89f:	and    BYTE PTR [rcx+0x6e],ch
  40d8a2:	and    BYTE PTR [rcx+rcx*2+0x4d],al
  40d8a6:	rex.B
  40d8a7:	rex.XB push r11
  40d8a9:	and    BYTE PTR [rbx+0x4e],al
  40d8ac:	rex.RX sub eax,0x20544153
  40d8b2:	outs   dx,WORD PTR ds:[rsi]
  40d8b4:	jb     0x40d923
  40d8b6:	(bad)  
  40d8b7:	je     0x40d8c3
  40d8b9:	add    BYTE PTR [rax],al
  40d8bb:	add    BYTE PTR [rax],al
  40d8bd:	add    BYTE PTR [rax],al
  40d8bf:	add    BYTE PTR [rip+0x50202d2d],ch        # 0x506105f2
  40d8c5:	jb     0x40d936
  40d8c7:	(bad)  
  40d8c8:	ins    BYTE PTR es:[rdi],dx
  40d8c9:	gs ins DWORD PTR es:[rdi],dx
  40d8cb:	and    BYTE PTR [rbx+0x68],al
  40d8ce:	(bad)  
  40d8cf:	jb     0x40d932
  40d8d1:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  40d8d5:	imul   esi,DWORD PTR [rbx+0x74],0x20736369
  40d8dc:	sub    eax,0xa2d2d
  40d8e1:	add    BYTE PTR [rax],al
  40d8e3:	add    BYTE PTR [rax],al
  40d8e5:	add    BYTE PTR [rax],al
  40d8e7:	add    BYTE PTR [rsi+0x75],cl
  40d8ea:	ins    DWORD PTR es:[rdi],dx
  40d8eb:	(bad)  
  40d8ec:	gs jb  0x40d90f
  40d8ef:	outs   dx,DWORD PTR ds:[rsi]
  40d8f0:	data16 and BYTE PTR [rdx+0x6f],dh
  40d8f4:	ja     0x40d969
  40d8f6:	and    BYTE PTR [rax],ah
  40d8f8:	and    BYTE PTR [rax],ah
  40d8fa:	and    BYTE PTR [rax],ah
  40d8fc:	and    BYTE PTR [rax],ah
  40d8fe:	and    BYTE PTR [rax],ah
  40d900:	and    BYTE PTR [rax],ah
  40d902:	and    BYTE PTR [rax],ah
  40d904:	and    BYTE PTR [rip+0x64382520],bh        # 0x6478fe2a
  40d90a:	or     al,BYTE PTR [rax]
  40d90c:	add    BYTE PTR [rax],al
  40d90e:	add    BYTE PTR [rax],al
  40d910:	rex.WRX jne 0x40d980
  40d913:	(bad)  
  40d914:	gs jb  0x40d937
  40d917:	outs   dx,DWORD PTR ds:[rsi]
  40d918:	data16 and BYTE PTR [rbx+0x6f],ah
  40d91c:	ins    BYTE PTR es:[rdi],dx
  40d91d:	jne    0x40d98c
  40d91f:	outs   dx,BYTE PTR ds:[rsi]
  40d920:	jae    0x40d942
  40d922:	and    BYTE PTR [rax],ah
  40d924:	and    BYTE PTR [rax],ah
  40d926:	and    BYTE PTR [rax],ah
  40d928:	and    BYTE PTR [rax],ah
  40d92a:	and    BYTE PTR [rax],ah
  40d92c:	and    BYTE PTR [rip+0x64382520],bh        # 0x6478fe52
  40d932:	or     al,BYTE PTR [rax]
  40d934:	add    BYTE PTR [rax],al
  40d936:	add    BYTE PTR [rax],al
  40d938:	rex.WRX jne 0x40d9a8
  40d93b:	(bad)  
  40d93c:	gs jb  0x40d95f
  40d93f:	outs   dx,DWORD PTR ds:[rsi]
  40d940:	data16 and BYTE PTR [rsi+0x6f],ch
  40d944:	outs   dx,BYTE PTR ds:[rsi]
  40d945:	sub    eax,0x6f72657a
  40d94a:	jae    0x40d96c
  40d94c:	sub    BYTE PTR [rbp+0x61],ch
  40d94f:	je     0x40d9c3
  40d951:	imul   edi,DWORD PTR [rax+0x29],0x25203d20
  40d958:	cmp    BYTE PTR [rdx+rcx*1+0x0],ah
  40d95c:	add    BYTE PTR [rax],al
  40d95e:	add    BYTE PTR [rax],al
  40d960:	rex.WRX jne 0x40d9d0
  40d963:	(bad)  
  40d964:	gs jb  0x40d987
  40d967:	outs   dx,DWORD PTR ds:[rsi]
  40d968:	data16 and BYTE PTR [rsi+0x6f],ch
  40d96c:	outs   dx,BYTE PTR ds:[rsi]
  40d96d:	sub    eax,0x6f72657a
  40d972:	jae    0x40d994
  40d974:	sub    BYTE PTR [rdi+0x62],ch
  40d977:	push   0x72
  40d979:	outs   dx,DWORD PTR ds:[rsi]
  40d97a:	ja     0x40d9a5
  40d97c:	and    BYTE PTR [rip+0x64382520],bh        # 0x6478fea2
  40d982:	or     al,BYTE PTR [rax]
  40d984:	add    BYTE PTR [rax],al
  40d986:	add    BYTE PTR [rax],al
  40d988:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40d98a:	je     0x40d9f1
  40d98c:	jb     0x40d9f7
  40d98e:	outs   dx,DWORD PTR ds:[rsi]
  40d98f:	jb     0x40d9be
  40d991:	jo     0x40da02
  40d993:	imul   ebp,DWORD PTR [rsi+0x74],0x74656d20
  40d99a:	push   0x6920646f
  40d99f:	jae    0x40d9c1
  40d9a1:	outs   dx,BYTE PTR ds:[rsi]
  40d9a2:	outs   dx,DWORD PTR ds:[rsi]
  40d9a3:	je     0x40d9c5
  40d9a5:	(bad)  
  40d9a6:	(bad)  
  40d9a7:	ins    BYTE PTR es:[rdi],dx
  40d9a8:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40d9ad:	jae    0x40da1e
  40d9af:	ins    BYTE PTR es:[rdi],dx
  40d9b0:	jbe    0x40da17
  40d9b2:	and    BYTE PTR [rbp+0x49],cl
  40d9b5:	push   rax
  40d9b6:	and    BYTE PTR [rax+0x72],dh
  40d9b9:	outs   dx,DWORD PTR ds:[rsi]
  40d9ba:	(bad)  
  40d9bb:	ins    BYTE PTR es:[rdi],dx
  40d9bc:	gs ins DWORD PTR es:[rdi],dx
  40d9be:	cmp    esp,DWORD PTR [rax]
  40d9c0:	jne    0x40da35
  40d9c2:	and    BYTE PTR gs:[rip+0x6d69732d],ch        # 0x6daa4cf6
  40d9c9:	jo     0x40da37
  40d9cb:	gs js  0x40d9d8
  40d9ce:	add    BYTE PTR [rax],al
  40d9d0:	push   rbp
  40d9d1:	outs   dx,BYTE PTR ds:[rsi]
  40d9d2:	(bad)  
  40d9d3:	(bad)  
  40d9d4:	ins    BYTE PTR es:[rdi],dx
  40d9d5:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40d9da:	jb     0x40da41
  40d9dc:	(bad)  
  40d9dd:	and    BYTE PTR fs:[rax+0x72],dh
  40d9e1:	outs   dx,DWORD PTR ds:[rsi]
  40d9e2:	(bad)  
  40d9e3:	ins    BYTE PTR es:[rdi],dx
  40d9e4:	gs ins DWORD PTR es:[rdi],dx
  40d9e6:	and    BYTE PTR [rbx+0x6f],dh
  40d9e9:	ins    BYTE PTR es:[rdi],dx
  40d9ea:	jne    0x40da60
  40d9ec:	imul   ebp,DWORD PTR [rdi+0x6e],0xa
  40d9f3:	add    BYTE PTR [rax],al
  40d9f5:	add    BYTE PTR [rax],al
  40d9f7:	add    BYTE PTR [rbp+0x6e],dl
  40d9fa:	(bad)  
  40d9fb:	(bad)  
  40d9fc:	ins    BYTE PTR es:[rdi],dx
  40d9fd:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40da02:	jb     0x40da69
  40da04:	(bad)  
  40da05:	and    BYTE PTR fs:[rcx+0x6e],ch
  40da09:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x494d206c
  40da11:	push   rax
  40da12:	and    BYTE PTR [rbx+0x6f],dh
  40da15:	ins    BYTE PTR es:[rdi],dx
  40da16:	jne    0x40da8c
  40da18:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e55000a
  40da1f:	(bad)  
  40da20:	(bad)  
  40da21:	ins    BYTE PTR es:[rdi],dx
  40da22:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40da27:	jb     0x40da8e
  40da29:	(bad)  
  40da2a:	and    BYTE PTR fs:[rcx+0x6e],ch
  40da2e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x6162206c
  40da36:	jae    0x40daa1
  40da38:	jae    0x40da44
  40da3a:	add    BYTE PTR [rax],al
  40da3c:	add    BYTE PTR [rax],al
  40da3e:	add    BYTE PTR [rax],al
  40da40:	rex.WB
  40da41:	data16 and BYTE PTR [rcx+0x6f],bh
  40da45:	jne    0x40da67
  40da47:	outs   dx,BYTE PTR ds:[rsi]
  40da48:	gs gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  40da4f:	movsxd ebp,DWORD PTR [rax+0x65]
  40da52:	movsxd ebp,DWORD PTR [rbx+0x20]
  40da55:	imul   bp,WORD PTR [rsi+0x61],0x206c
  40da5b:	(bad)  
  40da5d:	jae    0x40dac8
  40da5f:	jae    0x40da81
  40da61:	outs   dx,WORD PTR ds:[rsi]
  40da63:	jb     0x40da85
  40da65:	outs   dx,BYTE PTR ds:[rsi]
  40da66:	outs   dx,DWORD PTR ds:[rsi]
  40da67:	outs   dx,BYTE PTR ds:[rsi]
  40da68:	sub    eax,0x6974706f
  40da6d:	ins    DWORD PTR es:[rdi],dx
  40da6e:	(bad)  
  40da6f:	ins    BYTE PTR es:[rdi],dx
  40da70:	and    BYTE PTR [rbx+0x6f],dh
  40da73:	ins    BYTE PTR es:[rdi],dx
  40da74:	jne    0x40daea
  40da76:	imul   ebp,DWORD PTR [rdi+0x6e],0x7375202c
  40da7d:	and    BYTE PTR gs:[rip+0x706f6e2d],ch        # 0x70b048b1
  40da84:	jb     0x40daeb
  40da86:	jae    0x40daf7
  40da88:	ins    BYTE PTR es:[rdi],dx
  40da89:	or     al,BYTE PTR [rax]
  40da8b:	add    BYTE PTR [rax],al
  40da8d:	add    BYTE PTR [rax],al
  40da8f:	add    BYTE PTR [rcx+0x66],cl
  40da92:	and    BYTE PTR [rcx+0x6f],bh
  40da95:	jne    0x40dab7
  40da97:	outs   dx,BYTE PTR ds:[rsi]
  40da98:	gs gs and BYTE PTR fs:[rcx+0x63],ah
  40da9e:	je     0x40db15
  40daa0:	(bad)  
  40daa1:	ins    BYTE PTR es:[rdi],dx
  40daa2:	and    BYTE PTR [rdi+0x75],ch
  40daa5:	je     0x40db17
  40daa7:	jne    0x40db1d
  40daa9:	and    BYTE PTR [rsi+0x6f],ah
  40daac:	jb     0x40dace
  40daae:	outs   dx,BYTE PTR ds:[rsi]
  40daaf:	outs   dx,DWORD PTR ds:[rsi]
  40dab0:	outs   dx,BYTE PTR ds:[rsi]
  40dab1:	sub    eax,0x6974706f
  40dab6:	ins    DWORD PTR es:[rdi],dx
  40dab7:	(bad)  
  40dab8:	ins    BYTE PTR es:[rdi],dx
  40dab9:	and    BYTE PTR [rbx+0x6f],dh
  40dabc:	ins    BYTE PTR es:[rdi],dx
  40dabd:	jne    0x40db33
  40dabf:	imul   ebp,DWORD PTR [rdi+0x6e],0x7375202c
  40dac6:	and    BYTE PTR gs:[rip+0x706f6e2d],ch        # 0x70b048fa
  40dacd:	jb     0x40db34
  40dacf:	jae    0x40db40
  40dad1:	ins    BYTE PTR es:[rdi],dx
  40dad2:	or     al,BYTE PTR [rax]
  40dad4:	push   rsp
  40dad5:	imul   ebp,DWORD PTR [rbp+0x65],0x65737520
  40dadc:	cmp    ah,BYTE PTR fs:[rax]
  40dadf:	and    BYTE PTR [rax],ah
  40dae1:	and    eax,0x2066312e
  40dae6:	jae    0x40db4d
  40dae8:	movsxd esi,DWORD PTR [rbx+0xa]
  40daeb:	add    BYTE PTR [rax],al
  40daed:	add    BYTE PTR [rax],al
  40daef:	add    BYTE PTR [rbp+0x65],cl
  40daf2:	ins    DWORD PTR es:[rdi],dx
  40daf3:	outs   dx,DWORD PTR ds:[rsi]
  40daf4:	jb     0x40db6f
  40daf6:	and    BYTE PTR [rbp+0x73],dh
  40daf9:	gs cmp ah,BYTE PTR fs:[rax]
  40dafd:	and    eax,0x2066312e
  40db02:	rex.WRB (bad) 
  40db04:	and    BYTE PTR [rax],ch
  40db06:	and    eax,0x2066302e
  40db0b:	(bad)  
  40db0c:	jns    0x40db82
  40db0e:	gs jae 0x40db3a
  40db11:	or     al,BYTE PTR [rax]
  40db13:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  40db15:	fs gs ins BYTE PTR es:[rdi],dx
  40db18:	and    BYTE PTR [rax+0x6f],dh
  40db1b:	jae    0x40db91
  40db1d:	jae    0x40db8e
  40db1f:	ins    BYTE PTR es:[rdi],dx
  40db20:	jbe    0x40db8b
  40db22:	outs   dx,BYTE PTR ds:[rsi]
  40db23:	and    BYTE PTR [ebp+0x72],ah
  40db27:	jb     0x40db98
  40db29:	jb     0x40db35
  40db2b:	add    BYTE PTR [rax],al
  40db2d:	add    BYTE PTR [rax],al
  40db2f:	add    BYTE PTR [rbp+0x6e],dl
  40db32:	(bad)  
  40db33:	(bad)  
  40db34:	ins    BYTE PTR es:[rdi],dx
  40db35:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40db3a:	ja     0x40dbae
  40db3c:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x626f7270
  40db44:	ins    BYTE PTR es:[rdi],dx
  40db45:	gs ins DWORD PTR es:[rdi],dx
  40db47:	and    BYTE PTR [rbx+0x6f],dh
  40db4a:	ins    BYTE PTR es:[rdi],dx
  40db4b:	jne    0x40dbc1
  40db4d:	imul   ebp,DWORD PTR [rdi+0x6e],0xa
  40db54:	add    BYTE PTR [rax],al
  40db56:	add    BYTE PTR [rax],al
  40db58:	push   rbp
  40db59:	outs   dx,BYTE PTR ds:[rsi]
  40db5a:	(bad)  
  40db5b:	(bad)  
  40db5c:	ins    BYTE PTR es:[rdi],dx
  40db5d:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40db62:	ja     0x40dbd6
  40db64:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x736e6573
  40db6c:	imul   esi,DWORD PTR [rcx+rbp*2+0x76],0x20797469
  40db74:	(bad)  
  40db75:	outs   dx,BYTE PTR ds:[rsi]
  40db76:	(bad)  
  40db77:	ins    BYTE PTR es:[rdi],dx
  40db78:	jns    0x40dbed
  40db7a:	imul   esi,DWORD PTR [rbx+0x20],0x6f706572
  40db81:	jb     0x40dbf7
  40db83:	or     al,BYTE PTR [rax]
  40db85:	add    BYTE PTR [rax],al
  40db87:	add    BYTE PTR [rbx+0x61],al
  40db8a:	outs   dx,BYTE PTR ds:[rsi]
  40db8b:	outs   dx,BYTE PTR ds:[rsi]
  40db8c:	outs   dx,DWORD PTR ds:[rsi]
  40db8d:	je     0x40dbaf
  40db8f:	jo     0x40dc03
  40db91:	outs   dx,DWORD PTR ds:[rsi]
  40db92:	fs jne 0x40dbf8
  40db95:	and    BYTE PTR gs:[rbx+0x65],dh
  40db99:	outs   dx,BYTE PTR ds:[rsi]
  40db9a:	jae    0x40dc05
  40db9c:	je     0x40dc07
  40db9e:	jbe    0x40dc09
  40dba0:	je     0x40dc1b
  40dba2:	and    BYTE PTR [rcx+0x6e],ah
  40dba5:	(bad)  
  40dba6:	ins    BYTE PTR es:[rdi],dx
  40dba7:	jns    0x40dc1c
  40dba9:	imul   esi,DWORD PTR [rbx+0x20],0x6f706572
  40dbb0:	jb     0x40dc26
  40dbb2:	and    BYTE PTR [rbp+rsi*2+0x65],ah
  40dbb6:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40dbba:	gs jb  0x40dc2f
  40dbbd:	outs   dx,DWORD PTR ds:[rsi]
  40dbbe:	jb     0x40dbe0
  40dbc0:	imul   ebp,DWORD PTR [rsi+0x20],0x69736162
  40dbc7:	jae    0x40dbe9
  40dbc9:	data16 (bad) 
  40dbcb:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  40dbcf:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  40dbd6:	and    BYTE PTR [rax],ch
  40dbd8:	ins    BYTE PTR es:[edi],dx
  40dbda:	jo     0x40dc3b
  40dbdc:	data16 (bad) 
  40dbde:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  40dbe2:	imul   edi,DWORD PTR [rdx+0x65],0x74657220
  40dbe9:	jne    0x40dc5d
  40dbeb:	outs   dx,BYTE PTR ds:[rsi]
  40dbec:	gs and BYTE PTR fs:[rip+0x203b2964],ah        # 0x207c0558
  40dbf4:	je     0x40dc68
  40dbf6:	jns    0x40dc18
  40dbf8:	sub    eax,0x706f6e2d
  40dbfd:	jb     0x40dc64
  40dbff:	jae    0x40dc70
  40dc01:	ins    BYTE PTR es:[rdi],dx
  40dc02:	or     al,BYTE PTR [rax]
  40dc04:	add    BYTE PTR [rax],al
  40dc06:	add    BYTE PTR [rax],al
  40dc08:	rex.XB (bad) 
  40dc0a:	outs   dx,BYTE PTR ds:[rsi]
  40dc0b:	outs   dx,BYTE PTR ds:[rsi]
  40dc0c:	outs   dx,DWORD PTR ds:[rsi]
  40dc0d:	je     0x40dc2f
  40dc0f:	jo     0x40dc83
  40dc11:	outs   dx,DWORD PTR ds:[rsi]
  40dc12:	fs jne 0x40dc78
  40dc15:	and    BYTE PTR gs:[rbx+0x65],dh
  40dc19:	outs   dx,BYTE PTR ds:[rsi]
  40dc1a:	jae    0x40dc85
  40dc1c:	je     0x40dc87
  40dc1e:	jbe    0x40dc89
  40dc20:	je     0x40dc9b
  40dc22:	and    BYTE PTR [rcx+0x6e],ah
  40dc25:	(bad)  
  40dc26:	ins    BYTE PTR es:[rdi],dx
  40dc27:	jns    0x40dc9c
  40dc29:	imul   esi,DWORD PTR [rbx+0x20],0x6f706572
  40dc30:	jb     0x40dca6
  40dc32:	and    BYTE PTR [rsi+0x6f],ah
  40dc35:	jb     0x40dc57
  40dc37:	outs   dx,BYTE PTR ds:[rsi]
  40dc38:	outs   dx,DWORD PTR ds:[rsi]
  40dc39:	outs   dx,BYTE PTR ds:[rsi]
  40dc3a:	sub    eax,0x6974706f
  40dc3f:	ins    DWORD PTR es:[rdi],dx
  40dc40:	(bad)  
  40dc41:	ins    BYTE PTR es:[rdi],dx
  40dc42:	and    BYTE PTR [rdx+0x61],ah
  40dc45:	jae    0x40dcb0
  40dc47:	movsxd esp,DWORD PTR [rax]
  40dc49:	jae    0x40dcba
  40dc4b:	ins    BYTE PTR es:[rdi],dx
  40dc4c:	jne    0x40dcc2
  40dc4e:	imul   ebp,DWORD PTR [rdi+0x6e],0xa
  40dc55:	add    BYTE PTR [rax],al
  40dc57:	add    BYTE PTR [rbx+0x61],al
  40dc5a:	outs   dx,BYTE PTR ds:[rsi]
  40dc5b:	outs   dx,BYTE PTR ds:[rsi]
  40dc5c:	outs   dx,DWORD PTR ds:[rsi]
  40dc5d:	je     0x40dc7f
  40dc5f:	jo     0x40dcd3
  40dc61:	outs   dx,DWORD PTR ds:[rsi]
  40dc62:	fs jne 0x40dcc8
  40dc65:	and    BYTE PTR gs:[rbx+0x65],dh
  40dc69:	outs   dx,BYTE PTR ds:[rsi]
  40dc6a:	jae    0x40dcd5
  40dc6c:	je     0x40dcd7
  40dc6e:	jbe    0x40dcd9
  40dc70:	je     0x40dceb
  40dc72:	and    BYTE PTR [rcx+0x6e],ah
  40dc75:	(bad)  
  40dc76:	ins    BYTE PTR es:[rdi],dx
  40dc77:	jns    0x40dcec
  40dc79:	imul   esi,DWORD PTR [rbx+0x20],0x6f706572
  40dc80:	jb     0x40dcf6
  40dc82:	and    BYTE PTR [rsi+0x6f],ah
  40dc85:	jb     0x40dca7
  40dc87:	imul   ebp,DWORD PTR [rsi+0x74],0x6f697265
  40dc8e:	jb     0x40dcbd
  40dc90:	jo     0x40dd01
  40dc92:	imul   ebp,DWORD PTR [rsi+0x74],0x20726f20
  40dc99:	rex.WRB
  40dc9a:	rex.WB push r8
  40dc9c:	and    BYTE PTR [rbx+0x6f],dh
  40dc9f:	ins    BYTE PTR es:[rdi],dx
  40dca0:	jne    0x40dd16
  40dca2:	imul   ebp,DWORD PTR [rdi+0x6e],0x4500000a
  40dca9:	jb     0x40dd1d
  40dcab:	outs   dx,DWORD PTR ds:[rsi]
  40dcac:	jb     0x40dce8
  40dcae:	and    BYTE PTR [rip+0x656d2064],ah        # 0x65adfd18
  40dcb4:	ins    DWORD PTR es:[rdi],dx
  40dcb5:	outs   dx,DWORD PTR ds:[rsi]
  40dcb6:	jb     0x40dd31
  40dcb8:	and    BYTE PTR [rdx+0x6c],ah
  40dcbb:	outs   dx,DWORD PTR ds:[rsi]
  40dcbc:	movsxd ebp,DWORD PTR [rbx+0x28]
  40dcbf:	jae    0x40dcea
  40dcc1:	and    BYTE PTR [rdi+0x65],dh
  40dcc4:	jb     0x40dd2b
  40dcc6:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  40dcca:	je     0x40dcd6
  40dccc:	add    BYTE PTR [rdi+rbp*2+0x74],dh
  40dcd0:	(bad)  
  40dcd1:	ins    BYTE PTR es:[rdi],dx
  40dcd2:	and    BYTE PTR [rip+0x30203d],bh        # 0x70fd15
  40dcd8:	(bad)  
  40dcd9:	(bad)  
  40dcda:	(bad)  
  40dcdb:	(bad)  
  40dcdc:	(bad)  
  40dcdd:	(bad)  
  40dcde:	out    dx,eax
  40dcdf:	(bad)  
  40dce0:	(bad)  
  40dce1:	(bad)  
  40dce2:	(bad)  
  40dce3:	(bad)  
  40dce4:	(bad)  
  40dce5:	(bad)  
  40dce6:	out    dx,eax
  40dce7:	jg     0x40dce9
  40dce9:	add    BYTE PTR [rax],al
  40dceb:	add    BYTE PTR [rbp-0x33],ah
  40dcee:	int    0x41
  40dcf0:	add    BYTE PTR [rax],al
  40dcf2:	add    BYTE PTR [rax],al
  40dcf4:	add    BYTE PTR [rax],al
  40dcf6:	mov    al,0x3e
	...
  40dd00:	adc    BYTE PTR [rip+0x41],0x0        # 0x40dd48
  40dd07:	add    BYTE PTR [rax+0x4110],al
  40dd0d:	add    BYTE PTR [rax],al
  40dd0f:	add    BYTE PTR [rax+0x1b],dl
  40dd12:	add    BYTE PTR [rax],al
	...
  40dd1d:	add    BYTE PTR [rax],al
  40dd1f:	add    BYTE PTR [rcx+0x72],al
  40dd22:	addr32 jne 0x40dd92
  40dd25:	outs   dx,BYTE PTR gs:[rsi]
  40dd27:	je     0x40dd49
  40dd29:	outs   dx,DWORD PTR fs:[rsi]
  40dd2b:	ins    DWORD PTR es:[rdi],dx
  40dd2c:	(bad)  
  40dd2d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  40dd34:	jb     0x40dd56
  40dd36:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40dd3a:	rex.B
  40dd3b:	rex.WB
  40dd3c:	rex.WRX sub QWORD PTR [rax],r8
  40dd3f:	rex.B jb 0x40dda9
  40dd42:	jne    0x40ddb1
  40dd44:	outs   dx,BYTE PTR gs:[rsi]
  40dd46:	je     0x40dd68
  40dd48:	jae    0x40ddb3
  40dd4a:	outs   dx,BYTE PTR ds:[rsi]
  40dd4b:	addr32 jne 0x40ddba
  40dd4e:	(bad)  
  40dd4f:	jb     0x40ddba
  40dd51:	je     0x40ddcc
  40dd53:	and    BYTE PTR [rax],ch
  40dd55:	push   rbx
  40dd56:	rex.WB
  40dd57:	rex.RXB
  40dd58:	rex.WRX sub QWORD PTR [rax],r8
  40dd5b:	add    BYTE PTR [rax],al
  40dd5d:	add    BYTE PTR [rax],al
  40dd5f:	add    BYTE PTR [rdi+0x76],cl
  40dd62:	gs jb  0x40ddcb
  40dd65:	ins    BYTE PTR es:[rdi],dx
  40dd66:	outs   dx,DWORD PTR ds:[rsi]
  40dd67:	ja     0x40dd89
  40dd69:	jb     0x40ddcc
  40dd6b:	outs   dx,BYTE PTR ds:[rsi]
  40dd6c:	and    BYTE PTR gs:[ebp+0x72],ah
  40dd71:	jb     0x40dde2
  40dd73:	jb     0x40dd95
  40dd75:	sub    BYTE PTR [rdi+0x56],cl
  40dd78:	rex.RB push r10
  40dd7a:	rex.RX
  40dd7b:	rex.WR
  40dd7c:	rex.WRXB push r15
  40dd7e:	sub    DWORD PTR [rax],eax
  40dd80:	push   rax
  40dd81:	(bad)  
  40dd82:	jb     0x40ddf8
  40dd84:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40dd8b:	jae    0x40ddad
  40dd8d:	outs   dx,DWORD PTR ds:[rsi]
  40dd8e:	data16 and BYTE PTR [rbx+0x69],dh
  40dd92:	outs   dx,BYTE PTR ds:[esi]
  40dd94:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40dd9b:	and    BYTE PTR gs:[rax],ch
  40dd9e:	push   rax
  40dd9f:	rex.WR
  40dda0:	rex.WRXB push r11
  40dda2:	push   rbx
  40dda3:	sub    DWORD PTR [rax],eax
  40dda5:	add    BYTE PTR [rax],al
  40dda7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40ddab:	(bad)  
  40ddac:	ins    BYTE PTR es:[rdi],dx
  40ddad:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  40ddb1:	jae    0x40ddd3
  40ddb3:	outs   dx,DWORD PTR ds:[rsi]
  40ddb4:	data16 and BYTE PTR [rbx+0x69],dh
  40ddb8:	outs   dx,BYTE PTR ds:[esi]
  40ddba:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40ddc1:	and    BYTE PTR gs:[rax],ch
  40ddc4:	push   rsp
  40ddc5:	rex.WR
  40ddc6:	rex.WRXB push r11
  40ddc8:	push   rbx
  40ddc9:	sub    DWORD PTR [rax],eax
  40ddcb:	add    BYTE PTR [rax],al
  40ddcd:	add    BYTE PTR [rax],al
  40ddcf:	add    BYTE PTR [rax+rbp*2+0x65],dl
  40ddd3:	and    BYTE PTR [rdx+0x65],dh
  40ddd6:	jae    0x40de4d
  40ddd8:	ins    BYTE PTR es:[rdi],dx
  40ddd9:	je     0x40ddfb
  40dddb:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  40dde2:	jae    0x40de51
  40dde4:	(bad)  
  40dde5:	ins    BYTE PTR es:[rdi],dx
  40dde6:	ins    BYTE PTR es:[rdi],dx
  40dde7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40ddeb:	(bad)  
  40ddec:	and    BYTE PTR gs:[rdx+0x65],dh
  40ddf0:	jo     0x40de64
  40ddf2:	gs jae 0x40de5a
  40ddf5:	outs   dx,BYTE PTR ds:[rsi]
  40ddf6:	je     0x40de5d
  40ddf8:	and    BYTE PTR fs:[rax],ch
  40ddfb:	push   rbp
  40ddfc:	rex.WRX
  40ddfd:	rex.R
  40ddfe:	rex.RB push r10
  40de00:	rex.RX
  40de01:	rex.WR
  40de02:	rex.WRXB push r15
  40de04:	sub    DWORD PTR [rax],eax
  40de06:	push   rbp
  40de07:	outs   dx,BYTE PTR ds:[rsi]
  40de08:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40de0c:	outs   dx,BYTE PTR ds:[rsi]
  40de0d:	and    BYTE PTR [rbp+0x72],ah
  40de10:	jb     0x40de81
  40de12:	jb     0x40de14
  40de14:	add    BYTE PTR [rax],al
  40de16:	add    BYTE PTR [rax],al
  40de18:	pop    rdi
  40de19:	ins    DWORD PTR es:[rdi],dx
  40de1a:	(bad)  
  40de1b:	je     0x40de85
  40de1d:	gs jb  0x40de92
  40de20:	sub    BYTE PTR [rcx],ch
  40de22:	cmp    ah,BYTE PTR [rax]
  40de24:	and    eax,0x6e692073
  40de29:	and    BYTE PTR [rip+0x67252873],ah        # 0x676606a2
  40de2f:	sub    al,0x20
  40de31:	and    eax,0x20202967
  40de36:	sub    BYTE PTR [rdx+0x65],dh
  40de39:	je     0x40deb1
  40de3b:	(bad)  
  40de3c:	ins    BYTE PTR es:[rdi],dx
  40de3d:	cmp    eax,0xa296725
  40de42:	add    BYTE PTR [rax],al
  40de44:	fdivr  QWORD PTR [rsi]
  40de46:	(bad)  
  40de47:	call   FWORD PTR [rip+0xffffffff8cffff3e]        # 0xffffffff8d40dd8b
  40de4d:	ds (bad) 
  40de4f:	call   FWORD PTR [rsi+rdi*1+0x3eacffff]
  40de56:	(bad)  
  40de57:	(bad)  
  40de58:	mov    esp,0xccffff3e
  40de5d:	ds (bad) 
  40de5f:	dec    DWORD PTR [rbp+0x69]
  40de62:	outs   dx,BYTE PTR ds:[rsi]
  40de63:	addr32 ja 0x40de93
  40de66:	ja     0x40de9e
  40de68:	xor    al,0x20
  40de6a:	jb     0x40dee1
  40de6c:	outs   dx,BYTE PTR ds:[rsi]
  40de6d:	je     0x40ded8
  40de6f:	ins    DWORD PTR es:[rdi],dx
  40de70:	and    BYTE PTR gs:[rsi+0x61],ah
  40de74:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40de7c:	add    BYTE PTR [rax],al
  40de7e:	add    BYTE PTR [rax],al
  40de80:	rex.B
  40de81:	fs fs jb 0x40deea
  40de85:	jae    0x40defa
  40de87:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8fefd
  40de8d:	jae    0x40deaf
  40de8f:	outs   dx,BYTE PTR ds:[rsi]
  40de90:	outs   dx,DWORD PTR ds:[rsi]
  40de91:	and    BYTE PTR [rcx+0x6d],ch
  40de94:	(bad)  
  40de95:	addr32 gs sub eax,0x74636573
  40de9c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  40dea3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40deaa:	jne    0x40df11
  40deac:	jb     0x40df27
  40deae:	and    BYTE PTR [rsi+0x61],ah
  40deb1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  40deb9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a2ff23
  40debf:	je     0x40df26
  40dec1:	jae    0x40dee3
  40dec3:	(bad)  
  40dec4:	je     0x40dee6
  40dec6:	(bad)  
  40dec7:	fs fs jb 0x40df30
  40decb:	jae    0x40df40
  40decd:	and    BYTE PTR [rip+0x70],ah        # 0x40df43
  40ded3:	add    BYTE PTR [rax],al
  40ded5:	add    BYTE PTR [rax],al
  40ded7:	add    BYTE PTR [rax],ah
  40ded9:	and    BYTE PTR [rsi+0x69],dl
  40dedc:	jb     0x40df52
  40dede:	jne    0x40df41
  40dee0:	ins    BYTE PTR es:[rdi],dx
  40dee1:	push   rax
  40dee2:	jb     0x40df53
  40dee4:	je     0x40df4b
  40dee6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40deea:	(bad)  
  40deeb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  40def3:	push   0x646f6320
  40def8:	and    BYTE PTR gs:[rax],dh
  40defb:	js     0x40df22
  40defd:	js     0x40deff
  40deff:	add    BYTE PTR [rax],ah
  40df01:	and    BYTE PTR [rbp+0x6e],dl
  40df04:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40df08:	outs   dx,BYTE PTR ds:[rsi]
  40df09:	and    BYTE PTR [rax+0x73],dh
  40df0c:	gs jne 0x40df73
  40df0f:	outs   dx,DWORD PTR ds:[rsi]
  40df10:	and    BYTE PTR [rdx+0x65],dh
  40df13:	ins    BYTE PTR es:[rdi],dx
  40df14:	outs   dx,DWORD PTR ds:[rsi]
  40df15:	movsxd esp,DWORD PTR [rcx+0x74]
  40df18:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40df1f:	je     0x40df90
  40df21:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40df24:	and    BYTE PTR [rsi+0x65],dh
  40df27:	jb     0x40df9c
  40df29:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  40df30:	or     al,BYTE PTR [rax]
  40df32:	add    BYTE PTR [rax],al
  40df34:	add    BYTE PTR [rax],al
  40df36:	add    BYTE PTR [rax],al
  40df38:	and    BYTE PTR [rax],ah
  40df3a:	push   rbp
  40df3b:	outs   dx,BYTE PTR ds:[rsi]
  40df3c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40df40:	outs   dx,BYTE PTR ds:[rsi]
  40df41:	and    BYTE PTR [rax+0x73],dh
  40df44:	gs jne 0x40dfab
  40df47:	outs   dx,DWORD PTR ds:[rsi]
  40df48:	and    BYTE PTR [rdx+0x65],dh
  40df4b:	ins    BYTE PTR es:[rdi],dx
  40df4c:	outs   dx,DWORD PTR ds:[rsi]
  40df4d:	movsxd esp,DWORD PTR [rcx+0x74]
  40df50:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  40df57:	and    BYTE PTR [rbx+0x69],dh
  40df5a:	jp     0x40dfc1
  40df5c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4b0dc6
	...
  40df6e:	add    BYTE PTR [rax],al
  40df70:	cs jo  0x40dfd7
  40df73:	(bad)  
  40df74:	je     0x40dfd7
	...
  40df7e:	add    BYTE PTR [rax],al
  40df80:	add    BYTE PTR [rsi-0x1],cl
  40df83:	inc    DWORD PTR [rsi+rcx*2]
  40df86:	(bad)  
  40df87:	push   QWORD PTR [rax]
  40df89:	rex.WRX (bad) 
  40df8b:	inc    DWORD PTR [rcx+0x4e]
  40df8e:	(bad)  
  40df8f:	push   rax
  40df91:	rex.WRB (bad) 
  40df93:	push   QWORD PTR [rax+0xffff4d]
  40df99:	rex.WRX (bad) 
  40df9b:	inc    DWORD PTR [rax]
	...
  40dfbd:	add    BYTE PTR [rax],al
  40dfbf:	add    BYTE PTR [rsi+0x66],ch
  40dfc2:	add    BYTE PTR [rcx+0x6e],ch
  40dfc5:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x77006e61
  40dfcd:	push   rsp
  40dfce:	(bad)  
  40dfcf:	call   QWORD PTR [rsi+rdx*2]
  40dfd2:	(bad)  
  40dfd3:	call   QWORD PTR [rsi+rdx*2]
  40dfd6:	(bad)  
  40dfd7:	call   QWORD PTR [rsi+rdx*2]
  40dfda:	(bad)  
  40dfdb:	call   QWORD PTR [rsi+rdx*2]
  40dfde:	(bad)  
  40dfdf:	call   QWORD PTR [rsi+rdx*2]
  40dfe2:	(bad)  
  40dfe3:	call   QWORD PTR [rsi+rdx*2]
  40dfe6:	(bad)  
  40dfe7:	call   QWORD PTR [rsi+rdx*2]
  40dfea:	(bad)  
  40dfeb:	call   QWORD PTR [rsi+rdx*2]
  40dfee:	(bad)  
  40dfef:	push   rsp
  40dff1:	push   rbp
  40dff2:	(bad)  
  40dff3:	push   rsp
  40dff5:	push   rbp
  40dff6:	(bad)  
  40dff7:	push   rsp
  40dff9:	push   rbp
  40dffa:	(bad)  
  40dffb:	push   rsp
  40dffd:	push   rbp
  40dffe:	(bad)  
  40dfff:	push   rsp
  40e001:	push   rbp
  40e002:	(bad)  
  40e003:	call   QWORD PTR [rsi+rdx*2]
  40e006:	(bad)  
  40e007:	call   QWORD PTR [rsi+rdx*2]
  40e00a:	(bad)  
  40e00b:	call   QWORD PTR [rsi+rdx*2]
  40e00e:	(bad)  
  40e00f:	call   QWORD PTR [rsi+rdx*2]
  40e012:	(bad)  
  40e013:	call   QWORD PTR [rsi+rdx*2]
  40e016:	(bad)  
  40e017:	call   QWORD PTR [rsi+rdx*2]
  40e01a:	(bad)  
  40e01b:	call   QWORD PTR [rsi+rdx*2]
  40e01e:	(bad)  
  40e01f:	call   QWORD PTR [rsi+rdx*2]
  40e022:	(bad)  
  40e023:	call   QWORD PTR [rsi+rdx*2]
  40e026:	(bad)  
  40e027:	call   QWORD PTR [rsi+rdx*2]
  40e02a:	(bad)  
  40e02b:	call   QWORD PTR [rsi+rdx*2]
  40e02e:	(bad)  
  40e02f:	call   QWORD PTR [rsi+rdx*2]
  40e032:	(bad)  
  40e033:	call   QWORD PTR [rsi+rdx*2]
  40e036:	(bad)  
  40e037:	call   QWORD PTR [rsi+rdx*2]
  40e03a:	(bad)  
  40e03b:	call   QWORD PTR [rsi+rdx*2]
  40e03e:	(bad)  
  40e03f:	call   QWORD PTR [rsi+rdx*2]
  40e042:	(bad)  
  40e043:	call   QWORD PTR [rsi+rdx*2]
  40e046:	(bad)  
  40e047:	call   QWORD PTR [rsi+rdx*2]
  40e04a:	(bad)  
  40e04b:	push   rsp
  40e04d:	push   rbp
  40e04e:	(bad)  
  40e04f:	call   QWORD PTR [rsi+rdx*2]
  40e052:	(bad)  
  40e053:	call   QWORD PTR [rsi+rdx*2]
  40e056:	(bad)  
  40e057:	call   QWORD PTR [rsi+rdx*2]
  40e05a:	(bad)  
  40e05b:	call   QWORD PTR [rsi+rdx*2]
  40e05e:	(bad)  
  40e05f:	call   QWORD PTR [rsi+rdx*2]
  40e062:	(bad)  
  40e063:	call   QWORD PTR [rsi+rdx*2]
  40e066:	(bad)  
  40e067:	call   QWORD PTR [rsi+rdx*2]
  40e06a:	(bad)  
  40e06b:	call   QWORD PTR [rsi+rdx*2]
  40e06e:	(bad)  
  40e06f:	call   QWORD PTR [rsi+rdx*2]
  40e072:	(bad)  
  40e073:	call   QWORD PTR [rsi+rdx*2]
  40e076:	(bad)  
  40e077:	inc    DWORD PTR [rbp+rdx*2-0x1]
  40e07b:	call   QWORD PTR [rsi+rdx*2]
  40e07e:	(bad)  
  40e07f:	push   QWORD PTR [rdi+0x56]
  40e082:	(bad)  
  40e083:	inc    DWORD PTR [rax]
	...
  40e0c1:	add    BYTE PTR [rax],al
  40e0c3:	add    BYTE PTR [rbx],al
  40e0c5:	add    BYTE PTR [rax],al
  40e0c7:	add    BYTE PTR [rip+0x7000000],al        # 0x740e0cd
  40e0cd:	add    BYTE PTR [rax],al
  40e0cf:	add    BYTE PTR [rdx],cl
  40e0d1:	add    BYTE PTR [rax],al
  40e0d3:	add    BYTE PTR [rax+rax*1],cl
  40e0d6:	add    BYTE PTR [rax],al
  40e0d8:	(bad)  
  40e0d9:	add    BYTE PTR [rax],al
  40e0db:	add    BYTE PTR [rcx],dl
  40e0dd:	add    BYTE PTR [rax],al
  40e0df:	add    BYTE PTR [rbx],dl
  40e0e1:	add    BYTE PTR [rax],al
  40e0e3:	add    BYTE PTR [rip+0x18000000],dl        # 0x1840e0e9
  40e0e9:	add    BYTE PTR [rax],al
  40e0eb:	add    BYTE PTR [rdx],bl
  40e0ed:	add    BYTE PTR [rax],al
  40e0ef:	add    BYTE PTR [rax+rax*1],bl
  40e0f2:	add    BYTE PTR [rax],al
  40e0f4:	(bad)  
  40e0f5:	add    BYTE PTR [rax],al
  40e0f7:	add    BYTE PTR [rcx],ah
  40e0f9:	add    BYTE PTR [rax],al
  40e0fb:	add    BYTE PTR [rbx],ah
  40e0fd:	add    BYTE PTR [rax],al
  40e0ff:	add    BYTE PTR [rsi],ah
  40e101:	add    BYTE PTR [rax],al
  40e103:	add    BYTE PTR [rax],ch
  40e105:	add    BYTE PTR [rax],al
  40e107:	add    BYTE PTR [rdx],ch
  40e109:	add    BYTE PTR [rax],al
  40e10b:	add    BYTE PTR [rip+0x2f000000],ch        # 0x2f40e111
  40e111:	add    BYTE PTR [rax],al
  40e113:	add    BYTE PTR [rcx],dh
  40e115:	add    BYTE PTR [rax],al
  40e117:	add    BYTE PTR [rax+rax*1],dh
	...
  40e126:	lock (bad) 
	...
  40e134:	add    BYTE PTR [rax],al
  40e136:	add    BYTE PTR [rax+0x0],al
  40e139:	add    BYTE PTR [rax],al
  40e13b:	add    BYTE PTR [rax],al
  40e13d:	add    al,ah
  40e13f:	(bad)  
  40e140:	add    BYTE PTR [rax],al
  40e142:	sar    bh,0xff
  40e145:	(bad)  
  40e146:	fild   WORD PTR [rcx+0x16]
  40e149:	push   rsi
  40e14a:	out    0x9e,eax
  40e14c:	scas   eax,DWORD PTR es:[rdi]
  40e14d:	add    eax,edx
  40e14f:	cmp    al,0x0
  40e151:	add    BYTE PTR [rax],al
  40e153:	add    BYTE PTR [rax],al
  40e155:	add    BYTE PTR [rax],al
  40e157:	add    BYTE PTR [rax],0x0
	...
  40e17e:	add    BYTE PTR [rax],al
  40e180:	rex.B
  40e181:	rex.X
  40e182:	rex.XB
  40e183:	rex.R
  40e184:	rex.RB
  40e185:	rex.RX add BYTE PTR [rcx+0x62],r12b
  40e189:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
  40e18d:	add    BYTE PTR [rax],dh
  40e18f:	xor    DWORD PTR [rdx],esi
  40e191:	xor    esi,DWORD PTR [rsi*1+0x39383736]
	...
  40e1c0:	add    eax,0x19000000
  40e1c5:	add    BYTE PTR [rax],al
  40e1c7:	add    BYTE PTR [rbp+0x0],bh
	...
  40e206:	lock (bad) 
  40e208:	add    BYTE PTR [rax],al
  40e20a:	add    BYTE PTR [rax],al
  40e20c:	add    BYTE PTR [rax],al
  40e20e:	and    al,0x40
  40e210:	add    BYTE PTR [rax],al
  40e212:	add    BYTE PTR [rax],al
  40e214:	add    BYTE PTR [rax],al
  40e216:	pop    rcx
  40e217:	add    BYTE PTR [rax],al
  40e21a:	add    BYTE PTR [rax],al
  40e21c:	add    BYTE PTR [rax-0x71],al
  40e21f:	add    BYTE PTR [rax],al
  40e222:	add    BYTE PTR [rax],al
  40e224:	add    BYTE PTR [rax+0x40c3],cl
  40e22a:	add    BYTE PTR [rax],al
  40e22c:	add    BYTE PTR [rdx-0x8],ch
  40e22f:	add    BYTE PTR [rax],al
  40e232:	add    BYTE PTR [rax],al
  40e234:	add    BYTE PTR [rsi+rbp*1+0x41],0x0
  40e23c:	rcl    BYTE PTR [rdx],1
  40e23e:	movsxd eax,DWORD PTR [rcx+0x0]
  40e241:	add    BYTE PTR [rax],al
  40e243:	add    BYTE PTR [rdi+rdx*8+0x4197],al
  40e24a:	add    BYTE PTR [rax],al
  40e24c:	gs int 0xcd
  40e24f:	add    BYTE PTR [r8],al
  40e252:	add    BYTE PTR [rax],ah
  40e254:	pop    rdi
  40e255:	movabs al,ds:0x4876e80000004202
  40e25e:	(bad)  
  40e25f:	rex.X add BYTE PTR [rax],al
  40e262:	add    BYTE PTR [rdx+0x426d1a94],ah
  40e268:	add    BYTE PTR [rax],al
  40e26a:	rex in eax,0x9c
  40e26d:	xor    BYTE PTR [rdx-0x6fffffbe],ah
  40e273:	(bad)  
  40e274:	(bad)  
  40e275:	mov    esp,0x42d6
  40e27a:	xor    al,0x26
  40e27c:	cmc    
  40e27d:	imul   ecx,DWORD PTR [rbx+rax*2],0x0
  40e281:	and    al,0x37
  40e284:	jns    0x40e249
  40e286:	rex.B
  40e287:	rex.XB add BYTE PTR [r8+0x345785d8],spl
  40e28e:	jbe    0x40e2d3
  40e290:	add    al,cl
  40e292:	rex.WRX
  40e293:	ins    DWORD PTR es:[edi],dx
  40e295:	shr    DWORD PTR [rbx-0x6ec2ffbd],0x60
  40e29c:	in     al,0x58
  40e29e:	loope  0x40e2e3
  40e2a0:	rex mov WORD PTR [rbp+0x15af1d78],?
  40e2a7:	rex.R push rax
  40e2a9:	out    dx,eax
  40e2aa:	loop   0x40e282
  40e2ac:	in     al,0x1a
  40e2ae:	rex.WXB
  40e2af:	rex.R xchg edx,eax
  40e2b1:	(bad)  
  40e2b2:	rex.WRB (bad) 
  40e2b4:	iret   
  40e2b5:	lock add BYTE PTR [rax+rax*1+0x0],0x0
  40e2bb:	add    BYTE PTR [rax],al
  40e2bd:	add    BYTE PTR [rax],al
  40e2bf:	add    BYTE PTR [rcx+rcx*4-0x2d4d6828],bh
  40e2c6:	pushf  
  40e2c7:	cmp    al,0x33
  40e2c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40e2ca:	test   al,0xd5
  40e2cc:	and    esi,esi
  40e2ce:	cmp    QWORD PTR [rip+0xfffffffffd44f4a7],rdi        # 0xfffffffffd85d77c
  40e2d5:	shld   DWORD PTR [rdx],esi,cl
  40e2d8:	popf   
  40e2d9:	xchg   edi,eax
  40e2da:	mov    edi,cs
  40e2dc:	or     BYTE PTR [rdx+0x6f43255b],bh
  40e2e2:	lods   al,BYTE PTR ds:[rsi]
  40e2e3:	sub    BYTE PTR fs:[rsi],al
  40e2e6:	enter  0xa,0x0
	...
  40e2fe:	add    BYTE PTR [rax],al
  40e300:	add    BYTE PTR [rax-0x3c86c820],al
  40e306:	rex.B
  40e307:	rex.XB (bad) 
  40e309:	outs   dx,BYTE PTR ds:[rsi]
  40e30a:	add    eax,0x93b8b5b5
  40e30f:	rex.RX cmc 
  40e311:	stc    
  40e312:	(bad)  
  40e313:	jmp    0x4d79321b
  40e318:	xor    bl,BYTE PTR [rip+0x7748f930]        # 0x7789dc4e
  40e31e:	(bad)  
  40e31f:	pop    rdx
  40e320:	cmp    al,0xbf
  40e322:	jae    0x40e3a3
  40e324:	fisttp QWORD PTR [rdi+0x15]
  40e327:	jne    0x40e329
	...
  40e33d:	add    BYTE PTR [rax],al
  40e33f:	add    BYTE PTR [rax-0x60],al
  40e342:	add    BYTE PTR [rax],al
	...
  40e34d:	add    BYTE PTR [rax],al
  40e34f:	add    BYTE PTR [rax-0x60],dh
  40e352:	add    BYTE PTR [rax],al
	...
  40e35d:	add    BYTE PTR [rax],al
  40e35f:	add    BYTE PTR [rax-0x63],dh
  40e362:	add    BYTE PTR [rax],al
	...
  40e371:	(bad)  
  40e372:	add    BYTE PTR [rax],al
	...
  40e381:	(bad)  
  40e382:	add    BYTE PTR [rax],al
	...
  40e391:	jrcxz  0x40e3d3
	...
  40e39f:	add    BYTE PTR [rax],dl
  40e3a1:	fld    QWORD PTR [rax+0x0]
	...
  40e3b0:	shl    BYTE PTR [rcx+rax*2],0x0
	...
  40e3c0:	add    BYTE PTR [rax],al
  40e3c2:	add    BYTE PTR [rax],al
	...
  40e3cd:	add    BYTE PTR [rax],al
  40e3cf:	add    BYTE PTR [rax+0x4137],bh
	...
  40e3dd:	add    BYTE PTR [rax],al
  40e3df:	add    al,ah
  40e3e1:	(bad)  
  40e3e2:	add    BYTE PTR [r8],al
	...
  40e3f1:	cmp    BYTE PTR [rcx+0x0],al
	...
  40e400:	sbb    BYTE PTR [rax],bh
  40e402:	add    BYTE PTR [r8],al
	...
  40e40d:	add    BYTE PTR [rax],al
  40e40f:	add    al,al
  40e411:	(bad)  
  40e412:	add    BYTE PTR [r8],al
	...
  40e41d:	add    BYTE PTR [rax],al
  40e41f:	add    BYTE PTR [rax+0x24],bh
  40e422:	add    BYTE PTR [r8],al
	...
  40e42d:	add    BYTE PTR [rax],al
  40e42f:	add    BYTE PTR [rax+0x24],dh
  40e432:	add    BYTE PTR [r8],al
	...
  40e43d:	add    BYTE PTR [rax],al
  40e43f:	add    BYTE PTR [rax+0x24],ah
  40e442:	add    BYTE PTR [r8],al
	...
  40e44d:	add    BYTE PTR [rax],al
  40e44f:	add    BYTE PTR [rax+0x24],ch
  40e452:	add    BYTE PTR [r8],al
	...
  40e461:	loop   0x40e4a3
	...
  40e46f:	add    al,al
  40e471:	loop   0x40e4b3
	...
  40e47f:	add    BYTE PTR [rax],al
  40e481:	push   rax
  40e482:	add    BYTE PTR [r8],al
	...
  40e48d:	add    BYTE PTR [rax],al
  40e48f:	add    BYTE PTR [rax],dl
  40e491:	push   rax
  40e492:	add    BYTE PTR [r8],al
	...
  40e49d:	add    BYTE PTR [rax],al
  40e49f:	add    BYTE PTR [rax],bl
  40e4a1:	push   rax
  40e4a2:	add    BYTE PTR [r8],al
	...
  40e4ad:	add    BYTE PTR [rax],al
  40e4af:	add    BYTE PTR [rax],dh
  40e4b1:	push   rax
  40e4b2:	add    BYTE PTR [r8],al
	...
  40e4bd:	add    BYTE PTR [rax],al
  40e4bf:	add    BYTE PTR [rax+0x10],al
  40e4c2:	add    BYTE PTR [r8],al
	...
  40e4cd:	add    BYTE PTR [rax],al
  40e4cf:	add    BYTE PTR [rax+0x4116],dl
	...
  40e4dd:	add    BYTE PTR [rax],al
  40e4df:	add    al,ah
  40e4e1:	and    al,0x40
	...
  40e4ef:	add    BYTE PTR [rax],dh
  40e4f1:	sbb    al,0x40
	...
  40e4ff:	add    BYTE PTR [rax+0x16],al
  40e502:	add    BYTE PTR [r8],al
	...
  40e50d:	add    BYTE PTR [rax],al
  40e50f:	add    BYTE PTR [rax+0x16],dh
  40e512:	add    BYTE PTR [r8],al
	...
  40e51d:	add    BYTE PTR [rax],al
  40e51f:	add    BYTE PTR [rax+0x10],dl
  40e522:	add    BYTE PTR [r8],al
	...
  40e52d:	add    BYTE PTR [rax],al
  40e52f:	add    BYTE PTR [rax+0x16],bl
  40e532:	add    BYTE PTR [r8],al
	...
  40e53d:	add    BYTE PTR [rax],al
  40e53f:	add    BYTE PTR [rsi+rdx*1+0x41],dl
	...
  40e54f:	add    BYTE PTR [rax+0x16],dl
  40e552:	add    BYTE PTR [r8],al
	...
  40e55d:	add    BYTE PTR [rax],al
  40e55f:	add    BYTE PTR [rdi+0x43],al
  40e562:	rex.XB cmp spl,BYTE PTR [r8]
  40e565:	sub    BYTE PTR [rdi+0x4e],al
  40e568:	push   rbp
  40e569:	sub    DWORD PTR [rax],esp
  40e56b:	xor    al,0x2e
  40e56d:	cmp    DWORD PTR [rsi],ebp
  40e56f:	xor    al,0x0
	...
  40e57d:	add    BYTE PTR [rax],al
  40e57f:	add    BYTE PTR [rdi+0x43],al
  40e582:	rex.XB cmp spl,BYTE PTR [r8]
  40e585:	sub    BYTE PTR [rdi+0x4e],al
  40e588:	push   rbp
  40e589:	sub    DWORD PTR [rax],esp
  40e58b:	xor    al,0x2e
  40e58d:	cmp    DWORD PTR [rsi],ebp
  40e58f:	xor    al,0x0
	...
  40e59d:	add    BYTE PTR [rax],al
  40e59f:	add    BYTE PTR [rdi+0x43],al
  40e5a2:	rex.XB cmp spl,BYTE PTR [r8]
  40e5a5:	sub    BYTE PTR [rdi+0x4e],al
  40e5a8:	push   rbp
  40e5a9:	sub    DWORD PTR [rax],esp
  40e5ab:	xor    al,0x2e
  40e5ad:	cmp    DWORD PTR [rsi],ebp
  40e5af:	xor    al,0x0
	...
  40e5bd:	add    BYTE PTR [rax],al
  40e5bf:	add    BYTE PTR [rdi+0x43],al
  40e5c2:	rex.XB cmp spl,BYTE PTR [r8]
  40e5c5:	sub    BYTE PTR [rdi+0x4e],al
  40e5c8:	push   rbp
  40e5c9:	sub    DWORD PTR [rax],esp
  40e5cb:	xor    al,0x2e
  40e5cd:	cmp    DWORD PTR [rsi],ebp
  40e5cf:	xor    al,0x0
	...
  40e5dd:	add    BYTE PTR [rax],al
  40e5df:	add    BYTE PTR [rdi+0x43],al
  40e5e2:	rex.XB cmp spl,BYTE PTR [r8]
  40e5e5:	sub    BYTE PTR [rdi+0x4e],al
  40e5e8:	push   rbp
  40e5e9:	sub    DWORD PTR [rax],esp
  40e5eb:	xor    al,0x2e
  40e5ed:	cmp    DWORD PTR [rsi],ebp
  40e5ef:	xor    al,0x0
	...
  40e5fd:	add    BYTE PTR [rax],al
  40e5ff:	add    BYTE PTR [rdi+0x43],al
  40e602:	rex.XB cmp spl,BYTE PTR [r8]
  40e605:	sub    BYTE PTR [rdi+0x4e],al
  40e608:	push   rbp
  40e609:	sub    DWORD PTR [rax],esp
  40e60b:	xor    al,0x2e
  40e60d:	cmp    DWORD PTR [rsi],ebp
  40e60f:	xor    al,0x0
	...
  40e61d:	add    BYTE PTR [rax],al
  40e61f:	add    BYTE PTR [rdi+0x43],al
  40e622:	rex.XB cmp spl,BYTE PTR [r8]
  40e625:	sub    BYTE PTR [rdi+0x4e],al
  40e628:	push   rbp
  40e629:	sub    DWORD PTR [rax],esp
  40e62b:	xor    al,0x2e
  40e62d:	cmp    DWORD PTR [rsi],ebp
  40e62f:	xor    al,0x0
	...
  40e63d:	add    BYTE PTR [rax],al
  40e63f:	add    BYTE PTR [rdi+0x43],al
  40e642:	rex.XB cmp spl,BYTE PTR [r8]
  40e645:	sub    BYTE PTR [rdi+0x4e],al
  40e648:	push   rbp
  40e649:	sub    DWORD PTR [rax],esp
  40e64b:	xor    al,0x2e
  40e64d:	cmp    DWORD PTR [rsi],ebp
  40e64f:	xor    al,0x0
	...
  40e65d:	add    BYTE PTR [rax],al
  40e65f:	add    BYTE PTR [rdi+0x43],al
  40e662:	rex.XB cmp spl,BYTE PTR [r8]
  40e665:	sub    BYTE PTR [rdi+0x4e],al
  40e668:	push   rbp
  40e669:	sub    DWORD PTR [rax],esp
  40e66b:	xor    al,0x2e
  40e66d:	cmp    DWORD PTR [rsi],ebp
  40e66f:	xor    al,0x0
	...
  40e67d:	add    BYTE PTR [rax],al
  40e67f:	add    BYTE PTR [rdi+0x43],al
  40e682:	rex.XB cmp spl,BYTE PTR [r8]
  40e685:	sub    BYTE PTR [rdi+0x4e],al
  40e688:	push   rbp
  40e689:	sub    DWORD PTR [rax],esp
  40e68b:	xor    al,0x2e
  40e68d:	cmp    DWORD PTR [rsi],ebp
  40e68f:	xor    al,0x0
	...
  40e69d:	add    BYTE PTR [rax],al
  40e69f:	add    BYTE PTR [rdi+0x43],al
  40e6a2:	rex.XB cmp spl,BYTE PTR [r8]
  40e6a5:	sub    BYTE PTR [rdi+0x4e],al
  40e6a8:	push   rbp
  40e6a9:	sub    DWORD PTR [rax],esp
  40e6ab:	xor    al,0x2e
  40e6ad:	cmp    DWORD PTR [rsi],ebp
  40e6af:	xor    al,0x0
	...
  40e6bd:	add    BYTE PTR [rax],al
  40e6bf:	add    BYTE PTR [rdi+0x43],al
  40e6c2:	rex.XB cmp spl,BYTE PTR [r8]
  40e6c5:	sub    BYTE PTR [rdi+0x4e],al
  40e6c8:	push   rbp
  40e6c9:	sub    DWORD PTR [rax],esp
  40e6cb:	xor    al,0x2e
  40e6cd:	cmp    DWORD PTR [rsi],ebp
  40e6cf:	xor    al,0x0
	...
  40e6dd:	add    BYTE PTR [rax],al
  40e6df:	add    BYTE PTR [rdi+0x43],al
  40e6e2:	rex.XB cmp spl,BYTE PTR [r8]
  40e6e5:	sub    BYTE PTR [rdi+0x4e],al
  40e6e8:	push   rbp
  40e6e9:	sub    DWORD PTR [rax],esp
  40e6eb:	xor    al,0x2e
  40e6ed:	cmp    DWORD PTR [rsi],ebp
  40e6ef:	xor    al,0x0
	...
  40e6fd:	add    BYTE PTR [rax],al
  40e6ff:	add    BYTE PTR [rdi+0x43],al
  40e702:	rex.XB cmp spl,BYTE PTR [r8]
  40e705:	sub    BYTE PTR [rdi+0x4e],al
  40e708:	push   rbp
  40e709:	sub    DWORD PTR [rax],esp
  40e70b:	xor    al,0x2e
  40e70d:	cmp    DWORD PTR [rsi],ebp
  40e70f:	xor    al,0x0
	...
  40e71d:	add    BYTE PTR [rax],al
  40e71f:	add    BYTE PTR [rdi+0x43],al
  40e722:	rex.XB cmp spl,BYTE PTR [r8]
  40e725:	sub    BYTE PTR [rdi+0x4e],al
  40e728:	push   rbp
  40e729:	sub    DWORD PTR [rax],esp
  40e72b:	xor    al,0x2e
  40e72d:	cmp    DWORD PTR [rsi],ebp
  40e72f:	xor    al,0x0
	...
  40e73d:	add    BYTE PTR [rax],al
  40e73f:	add    BYTE PTR [rdi+0x43],al
  40e742:	rex.XB cmp spl,BYTE PTR [r8]
  40e745:	sub    BYTE PTR [rdi+0x4e],al
  40e748:	push   rbp
  40e749:	sub    DWORD PTR [rax],esp
  40e74b:	xor    al,0x2e
  40e74d:	cmp    DWORD PTR [rsi],ebp
  40e74f:	xor    al,0x0
	...
  40e75d:	add    BYTE PTR [rax],al
  40e75f:	add    BYTE PTR [rdi+0x43],al
  40e762:	rex.XB cmp spl,BYTE PTR [r8]
  40e765:	sub    BYTE PTR [rdi+0x4e],al
  40e768:	push   rbp
  40e769:	sub    DWORD PTR [rax],esp
  40e76b:	xor    al,0x2e
  40e76d:	cmp    DWORD PTR [rsi],ebp
  40e76f:	xor    al,0x0
	...
  40e77d:	add    BYTE PTR [rax],al
  40e77f:	add    BYTE PTR [rdi+0x43],al
  40e782:	rex.XB cmp spl,BYTE PTR [r8]
  40e785:	sub    BYTE PTR [rdi+0x4e],al
  40e788:	push   rbp
  40e789:	sub    DWORD PTR [rax],esp
  40e78b:	xor    al,0x2e
  40e78d:	cmp    DWORD PTR [rsi],ebp
  40e78f:	xor    al,0x0
	...
  40e79d:	add    BYTE PTR [rax],al
  40e79f:	add    BYTE PTR [rdi+0x43],al
  40e7a2:	rex.XB cmp spl,BYTE PTR [r8]
  40e7a5:	sub    BYTE PTR [rdi+0x4e],al
  40e7a8:	push   rbp
  40e7a9:	sub    DWORD PTR [rax],esp
  40e7ab:	xor    al,0x2e
  40e7ad:	cmp    DWORD PTR [rsi],ebp
  40e7af:	xor    al,0x0
	...
  40e7bd:	add    BYTE PTR [rax],al
  40e7bf:	add    BYTE PTR [rdi+0x43],al
  40e7c2:	rex.XB cmp spl,BYTE PTR [r8]
  40e7c5:	sub    BYTE PTR [rdi+0x4e],al
  40e7c8:	push   rbp
  40e7c9:	sub    DWORD PTR [rax],esp
  40e7cb:	xor    al,0x2e
  40e7cd:	cmp    DWORD PTR [rsi],ebp
  40e7cf:	xor    al,0x0
	...
  40e7dd:	add    BYTE PTR [rax],al
  40e7df:	add    BYTE PTR [rdi+0x43],al
  40e7e2:	rex.XB cmp spl,BYTE PTR [r8]
  40e7e5:	sub    BYTE PTR [rdi+0x4e],al
  40e7e8:	push   rbp
  40e7e9:	sub    DWORD PTR [rax],esp
  40e7eb:	xor    al,0x2e
  40e7ed:	cmp    DWORD PTR [rsi],ebp
  40e7ef:	xor    al,0x0
	...
  40e7fd:	add    BYTE PTR [rax],al
  40e7ff:	add    BYTE PTR [rdi+0x43],al
  40e802:	rex.XB cmp spl,BYTE PTR [r8]
  40e805:	sub    BYTE PTR [rdi+0x4e],al
  40e808:	push   rbp
  40e809:	sub    DWORD PTR [rax],esp
  40e80b:	xor    al,0x2e
  40e80d:	cmp    DWORD PTR [rsi],ebp
  40e80f:	xor    al,0x0
	...
  40e81d:	add    BYTE PTR [rax],al
  40e81f:	add    BYTE PTR [rdi+0x43],al
  40e822:	rex.XB cmp spl,BYTE PTR [r8]
  40e825:	sub    BYTE PTR [rdi+0x4e],al
  40e828:	push   rbp
  40e829:	sub    DWORD PTR [rax],esp
  40e82b:	xor    al,0x2e
  40e82d:	cmp    DWORD PTR [rsi],ebp
  40e82f:	xor    al,0x0
	...
  40e83d:	add    BYTE PTR [rax],al
  40e83f:	add    BYTE PTR [rdi+0x43],al
  40e842:	rex.XB cmp spl,BYTE PTR [r8]
  40e845:	sub    BYTE PTR [rdi+0x4e],al
  40e848:	push   rbp
  40e849:	sub    DWORD PTR [rax],esp
  40e84b:	xor    al,0x2e
  40e84d:	cmp    DWORD PTR [rsi],ebp
  40e84f:	xor    al,0x0
	...
  40e85d:	add    BYTE PTR [rax],al
  40e85f:	add    BYTE PTR [rdi+0x43],al
  40e862:	rex.XB cmp spl,BYTE PTR [r8]
  40e865:	sub    BYTE PTR [rdi+0x4e],al
  40e868:	push   rbp
  40e869:	sub    DWORD PTR [rax],esp
  40e86b:	xor    al,0x2e
  40e86d:	cmp    DWORD PTR [rsi],ebp
  40e86f:	xor    al,0x0
	...
  40e87d:	add    BYTE PTR [rax],al
  40e87f:	add    BYTE PTR [rdi+0x43],al
  40e882:	rex.XB cmp spl,BYTE PTR [r8]
  40e885:	sub    BYTE PTR [rdi+0x4e],al
  40e888:	push   rbp
  40e889:	sub    DWORD PTR [rax],esp
  40e88b:	xor    al,0x2e
  40e88d:	cmp    DWORD PTR [rsi],ebp
  40e88f:	xor    al,0x0
	...
  40e89d:	add    BYTE PTR [rax],al
  40e89f:	add    BYTE PTR [rdi+0x43],al
  40e8a2:	rex.XB cmp spl,BYTE PTR [r8]
  40e8a5:	sub    BYTE PTR [rdi+0x4e],al
  40e8a8:	push   rbp
  40e8a9:	sub    DWORD PTR [rax],esp
  40e8ab:	xor    al,0x2e
  40e8ad:	cmp    DWORD PTR [rsi],ebp
  40e8af:	xor    al,0x0
	...
  40e8bd:	add    BYTE PTR [rax],al
  40e8bf:	add    BYTE PTR [rdi+0x43],al
  40e8c2:	rex.XB cmp spl,BYTE PTR [r8]
  40e8c5:	sub    BYTE PTR [rdi+0x4e],al
  40e8c8:	push   rbp
  40e8c9:	sub    DWORD PTR [rax],esp
  40e8cb:	xor    al,0x2e
  40e8cd:	cmp    DWORD PTR [rsi],ebp
  40e8cf:	xor    al,0x0
	...
  40e8dd:	add    BYTE PTR [rax],al
  40e8df:	add    BYTE PTR [rdi+0x43],al
  40e8e2:	rex.XB cmp spl,BYTE PTR [r8]
  40e8e5:	sub    BYTE PTR [rdi+0x4e],al
  40e8e8:	push   rbp
  40e8e9:	sub    DWORD PTR [rax],esp
  40e8eb:	xor    al,0x2e
  40e8ed:	cmp    DWORD PTR [rsi],ebp
  40e8ef:	xor    al,0x0
	...
  40e8fd:	add    BYTE PTR [rax],al
  40e8ff:	add    BYTE PTR [rdi+0x43],al
  40e902:	rex.XB cmp spl,BYTE PTR [r8]
  40e905:	sub    BYTE PTR [rdi+0x4e],al
  40e908:	push   rbp
  40e909:	sub    DWORD PTR [rax],esp
  40e90b:	xor    al,0x2e
  40e90d:	cmp    DWORD PTR [rsi],ebp
  40e90f:	xor    al,0x0
	...
  40e91d:	add    BYTE PTR [rax],al
  40e91f:	add    BYTE PTR [rdi+0x43],al
  40e922:	rex.XB cmp spl,BYTE PTR [r8]
  40e925:	sub    BYTE PTR [rdi+0x4e],al
  40e928:	push   rbp
  40e929:	sub    DWORD PTR [rax],esp
  40e92b:	xor    al,0x2e
  40e92d:	cmp    DWORD PTR [rsi],ebp
  40e92f:	xor    al,0x0
	...
  40e93d:	add    BYTE PTR [rax],al
  40e93f:	add    BYTE PTR [rdi+0x43],al
  40e942:	rex.XB cmp spl,BYTE PTR [r8]
  40e945:	sub    BYTE PTR [rdi+0x4e],al
  40e948:	push   rbp
  40e949:	sub    DWORD PTR [rax],esp
  40e94b:	xor    al,0x2e
  40e94d:	cmp    DWORD PTR [rsi],ebp
  40e94f:	xor    al,0x0
	...
  40e95d:	add    BYTE PTR [rax],al
  40e95f:	add    BYTE PTR [rdi+0x43],al
  40e962:	rex.XB cmp spl,BYTE PTR [r8]
  40e965:	sub    BYTE PTR [rdi+0x4e],al
  40e968:	push   rbp
  40e969:	sub    DWORD PTR [rax],esp
  40e96b:	xor    al,0x2e
  40e96d:	cmp    DWORD PTR [rsi],ebp
  40e96f:	xor    al,0x0
	...
  40e97d:	add    BYTE PTR [rax],al
  40e97f:	add    BYTE PTR [rdi+0x43],al
  40e982:	rex.XB cmp spl,BYTE PTR [r8]
  40e985:	sub    BYTE PTR [rdi+0x4e],al
  40e988:	push   rbp
  40e989:	sub    DWORD PTR [rax],esp
  40e98b:	xor    al,0x2e
  40e98d:	cmp    DWORD PTR [rsi],ebp
  40e98f:	xor    al,0x0
	...
  40e99d:	add    BYTE PTR [rax],al
  40e99f:	add    BYTE PTR [rdi+0x43],al
  40e9a2:	rex.XB cmp spl,BYTE PTR [r8]
  40e9a5:	sub    BYTE PTR [rdi+0x4e],al
  40e9a8:	push   rbp
  40e9a9:	sub    DWORD PTR [rax],esp
  40e9ab:	xor    al,0x2e
  40e9ad:	cmp    DWORD PTR [rsi],ebp
  40e9af:	xor    al,0x0
	...
  40e9bd:	add    BYTE PTR [rax],al
  40e9bf:	add    BYTE PTR [rdi+0x43],al
  40e9c2:	rex.XB cmp spl,BYTE PTR [r8]
  40e9c5:	sub    BYTE PTR [rdi+0x4e],al
  40e9c8:	push   rbp
  40e9c9:	sub    DWORD PTR [rax],esp
  40e9cb:	xor    al,0x2e
  40e9cd:	cmp    DWORD PTR [rsi],ebp
  40e9cf:	xor    al,0x0
	...
  40e9dd:	add    BYTE PTR [rax],al
  40e9df:	add    BYTE PTR [rdi+0x43],al
  40e9e2:	rex.XB cmp spl,BYTE PTR [r8]
  40e9e5:	sub    BYTE PTR [rdi+0x4e],al
  40e9e8:	push   rbp
  40e9e9:	sub    DWORD PTR [rax],esp
  40e9eb:	xor    al,0x2e
  40e9ed:	cmp    DWORD PTR [rsi],ebp
  40e9ef:	xor    al,0x0
	...

Disassembly of section .pdata:

000000000040f000 <.pdata>:
  40f000:	add    BYTE PTR [rax],dl
  40f002:	add    BYTE PTR [rax],al
  40f004:	add    DWORD PTR [rax],edx
  40f006:	add    BYTE PTR [rax],al
  40f008:	add    BYTE PTR [rax],al
  40f00a:	add    DWORD PTR [rax],eax
  40f00c:	adc    BYTE PTR [rax],dl
  40f00e:	add    BYTE PTR [rax],al
  40f010:	push   rcx
  40f011:	adc    DWORD PTR [rax],eax
  40f013:	add    BYTE PTR [rax+rax*1],al
  40f016:	add    DWORD PTR [rax],eax
  40f018:	(bad)  
  40f019:	adc    DWORD PTR [rax],eax
  40f01b:	add    BYTE PTR [rsi+0xc000011],ch
  40f021:	add    BYTE PTR [rcx],al
  40f023:	add    BYTE PTR [rax-0x31ffffef],dh
  40f029:	adc    al,0x0
  40f02b:	add    BYTE PTR [rax+rax*1],dl
  40f02e:	add    DWORD PTR [rax],eax
  40f030:	rcl    BYTE PTR [rax+rax*1],1
  40f033:	add    dl,dh
  40f035:	adc    al,0x0
  40f037:	add    BYTE PTR [rax],ch
  40f039:	add    BYTE PTR [rcx],al
  40f03b:	add    BYTE PTR [rax],al
  40f03d:	adc    eax,0x15220000
  40f042:	add    BYTE PTR [rax],al
  40f044:	rex.W add BYTE PTR [rcx],al
  40f047:	add    BYTE PTR [rax+0x37000017],dl
  40f04d:	sbb    BYTE PTR [rax],al
  40f04f:	add    BYTE PTR [rax+rax*1+0x18400001],cl
  40f056:	add    BYTE PTR [rax],al
  40f058:	pop    rcx
  40f059:	sbb    BYTE PTR [rax],al
  40f05b:	add    BYTE PTR [rax+rax*1+0x18600001],dl
  40f062:	add    BYTE PTR [rax],al
  40f064:	xchg   ebp,eax
  40f065:	sbb    BYTE PTR [rax],al
  40f067:	add    BYTE PTR [rax+rax*1+0x18a00001],bl
  40f06e:	add    BYTE PTR [rax],al
  40f070:	cmc    
  40f071:	sbb    BYTE PTR [rax],al
  40f073:	add    BYTE PTR [rax+rax*1+0x19000001],ah
  40f07a:	add    BYTE PTR [rax],al
  40f07c:	sbb    al,0x19
  40f07e:	add    BYTE PTR [rax],al
  40f080:	mov    al,0x0
  40f082:	add    DWORD PTR [rax],eax
  40f084:	and    BYTE PTR [rcx],bl
  40f086:	add    BYTE PTR [rax],al
  40f088:	sub    bl,BYTE PTR [rcx]
  40f08a:	add    BYTE PTR [rax],al
  40f08c:	mov    ah,0x0
  40f08e:	add    DWORD PTR [rax],eax
  40f090:	xor    BYTE PTR [rcx],bl
  40f092:	add    BYTE PTR [rax],al
  40f094:	xor    ebx,DWORD PTR [rcx]
  40f096:	add    BYTE PTR [rax],al
  40f098:	mov    eax,0x40000100
  40f09d:	sbb    DWORD PTR [rax],eax
  40f09f:	add    BYTE PTR [rsi],dl
  40f0a1:	sbb    al,BYTE PTR [rax]
  40f0a3:	add    BYTE PTR [rax+rax*1+0x1a200001],bh
  40f0aa:	add    BYTE PTR [rax],al
  40f0ac:	sbb    ebx,DWORD PTR [rbx]
  40f0ae:	add    BYTE PTR [rax],al
  40f0b0:	int3   
  40f0b1:	add    BYTE PTR [rcx],al
  40f0b3:	add    BYTE PTR [rax],ah
  40f0b5:	sbb    eax,DWORD PTR [rax]
  40f0b7:	add    BYTE PTR [rdi+0x1b],cl
  40f0ba:	add    BYTE PTR [rax],al
  40f0bc:	fadd   QWORD PTR [rax]
  40f0be:	add    DWORD PTR [rax],eax
  40f0c0:	push   rax
  40f0c1:	sbb    eax,DWORD PTR [rax]
  40f0c3:	add    BYTE PTR [rcx-0x1bffffe5],bh
  40f0c9:	add    BYTE PTR [rcx],al
  40f0cb:	add    al,al
  40f0cd:	sbb    eax,DWORD PTR [rax]
  40f0cf:	add    bl,al
  40f0d1:	sbb    eax,DWORD PTR [rax]
  40f0d3:	add    al,dh
  40f0d5:	add    BYTE PTR [rcx],al
  40f0d7:	add    al,dl
  40f0d9:	sbb    eax,DWORD PTR [rax]
  40f0db:	add    BYTE PTR [rcx],dl
  40f0dd:	sbb    al,0x0
  40f0df:	add    ah,dh
  40f0e1:	add    BYTE PTR [rcx],al
  40f0e3:	add    BYTE PTR [rax],ah
  40f0e5:	sbb    al,0x0
  40f0e7:	add    BYTE PTR [rsp+rbx*1],ch
  40f0ea:	add    BYTE PTR [rax],al
  40f0ec:	cld    
  40f0ed:	add    BYTE PTR [rcx],al
  40f0ef:	add    BYTE PTR [rax],dh
  40f0f1:	sbb    al,0x0
  40f0f3:	add    BYTE PTR [rbx*1+0x1000000],ch
  40f0fa:	add    DWORD PTR [rax],eax
  40f0fc:	xor    BYTE PTR [rip+0x1d330000],bl        # 0x1d73f102
  40f102:	add    BYTE PTR [rax],al
  40f104:	sbb    BYTE PTR [rcx],al
  40f106:	add    DWORD PTR [rax],eax
  40f108:	rex sbb eax,0x1d440000
  40f10e:	add    BYTE PTR [rax],al
  40f110:	sbb    al,0x1
  40f112:	add    DWORD PTR [rax],eax
  40f114:	push   rax
  40f115:	sbb    eax,0x1d540000
  40f11a:	add    BYTE PTR [rax],al
  40f11c:	and    BYTE PTR [rcx],al
  40f11e:	add    DWORD PTR [rax],eax
  40f120:	(bad)  
  40f121:	sbb    eax,0x1dc10000
  40f126:	add    BYTE PTR [rax],al
  40f128:	and    al,0x1
  40f12a:	add    DWORD PTR [rax],eax
  40f12c:	rcr    BYTE PTR [rip+0x1f320000],1        # 0x1f72f132
  40f132:	add    BYTE PTR [rax],al
  40f134:	xor    BYTE PTR [rcx],al
  40f136:	add    DWORD PTR [rax],eax
  40f138:	rex (bad) 
  40f13a:	add    BYTE PTR [rax],al
  40f13c:	cmp    DWORD PTR [rdx],esp
  40f13e:	add    BYTE PTR [rax],al
  40f140:	add    DWORD PTR [rcx],r8d
  40f143:	add    BYTE PTR [rax+0x22],al
  40f146:	add    BYTE PTR [rax],al
  40f148:	out    0x23,al
  40f14a:	add    BYTE PTR [rax],al
  40f14c:	pop    rsp
  40f14d:	add    DWORD PTR [rcx],eax
  40f14f:	add    al,dh
  40f151:	and    eax,DWORD PTR [rax]
  40f153:	add    ah,bl
  40f155:	and    al,0x0
  40f157:	add    BYTE PTR [rcx+rax*1+0x1],ah
  40f15b:	add    al,ah
  40f15d:	and    al,0x0
  40f15f:	add    BYTE PTR [rax+0x74000026],bl
  40f165:	add    DWORD PTR [rcx],eax
  40f167:	add    BYTE PTR [rax+0xd000026],ah
  40f16d:	(bad)  
  40f16e:	add    BYTE PTR [rax],al
  40f170:	jl     0x40f173
  40f172:	add    DWORD PTR [rax],eax
  40f174:	adc    BYTE PTR [rdi],ah
  40f176:	add    BYTE PTR [rax],al
  40f178:	(bad)  
  40f179:	(bad)  
  40f17a:	add    BYTE PTR [rax],al
  40f17c:	mov    WORD PTR [rcx],es
  40f17e:	add    DWORD PTR [rax],eax
  40f180:	nop
  40f181:	(bad)  
  40f182:	add    BYTE PTR [rax],al
  40f184:	(bad)  
  40f185:	sub    BYTE PTR [rax],al
  40f187:	add    BYTE PTR [rax+0x30000101],bl
  40f18d:	sub    BYTE PTR [rax],al
  40f18f:	add    BYTE PTR [rdx],cl
  40f191:	sub    DWORD PTR [rax],eax
  40f193:	add    BYTE PTR [rax+0x10000101],ah
  40f199:	sub    DWORD PTR [rax],eax
  40f19b:	add    BYTE PTR [rdi],ch
  40f19d:	sub    DWORD PTR [rax],eax
  40f19f:	add    BYTE PTR [rax+0x30000101],ch
  40f1a5:	sub    DWORD PTR [rax],eax
  40f1a7:	add    BYTE PTR [rdx+0x29],al
  40f1aa:	add    BYTE PTR [rax],al
  40f1ac:	lods   al,BYTE PTR ds:[rsi]
  40f1ad:	add    DWORD PTR [rcx],eax
  40f1af:	add    BYTE PTR [rax+0x29],dl
  40f1b2:	add    BYTE PTR [rax],al
  40f1b4:	xchg   ebp,eax
  40f1b5:	sub    DWORD PTR [rax],eax
  40f1b7:	add    BYTE PTR [rax-0x5ffffeff],dh
  40f1bd:	sub    DWORD PTR [rax],eax
  40f1bf:	add    BYTE PTR [rsi],bh
  40f1c1:	sub    al,BYTE PTR [rax]
  40f1c3:	add    BYTE PTR [rcx+rax*1+0x2a400001],dh
  40f1ca:	add    BYTE PTR [rax],al
  40f1cc:	sub    DWORD PTR [rdx],0x0
  40f1cf:	add    al,al
  40f1d1:	add    DWORD PTR [rcx],eax
  40f1d3:	add    BYTE PTR [rax-0x34ffffd6],dl
  40f1d9:	sub    al,BYTE PTR [rax]
  40f1db:	add    ah,cl
  40f1dd:	add    DWORD PTR [rcx],eax
  40f1df:	add    al,dl
  40f1e1:	sub    al,BYTE PTR [rax]
  40f1e3:	add    BYTE PTR [rsi+0x2b],bl
  40f1e6:	add    BYTE PTR [rax],al
  40f1e8:	(bad)  
  40f1e9:	add    DWORD PTR [rcx],eax
  40f1eb:	add    BYTE PTR [rax+0x2b],ah
  40f1ee:	add    BYTE PTR [rax],al
  40f1f0:	cwde   
  40f1f1:	sub    eax,DWORD PTR [rax]
  40f1f3:	add    al,ah
  40f1f5:	add    DWORD PTR [rcx],eax
  40f1f7:	add    BYTE PTR [rax-0xaffffd5],ah
  40f1fd:	sub    eax,DWORD PTR [rax]
  40f1ff:	add    ah,ch
  40f201:	add    DWORD PTR [rcx],eax
  40f203:	add    BYTE PTR [rax],al
  40f205:	sub    al,0x0
  40f207:	add    BYTE PTR [rsi-0x7ffffd4],ch
  40f20d:	add    DWORD PTR [rcx],eax
  40f20f:	add    al,dh
  40f211:	sub    al,0x0
  40f213:	add    al,dl
  40f215:	sub    eax,0x2080000
  40f21a:	add    DWORD PTR [rax],eax
  40f21c:	shr    BYTE PTR [rip+0x2e030000],1        # 0x2e43f222
  40f222:	add    BYTE PTR [rax],al
  40f224:	adc    BYTE PTR [rdx],al
  40f226:	add    DWORD PTR [rax],eax
  40f228:	adc    BYTE PTR [rsi],ch
  40f22a:	add    BYTE PTR [rax],al
  40f22c:	mov    ebx,0x1800002e
  40f231:	add    al,BYTE PTR [rcx]
  40f233:	add    al,al
  40f235:	add    BYTE PTR cs:[rax],al
  40f238:	jns    0x40f26c
  40f23a:	add    BYTE PTR [rax],al
  40f23c:	and    al,0x2
  40f23e:	add    DWORD PTR [rax],eax
  40f240:	xor    BYTE PTR [rdx],0x0
  40f243:	add    BYTE PTR [rdx+0x3c000032],dh
  40f249:	add    al,BYTE PTR [rcx]
  40f24b:	add    al,al
  40f24d:	xor    al,BYTE PTR [rax]
  40f24f:	add    BYTE PTR [rcx+0x33],ch
  40f252:	add    BYTE PTR [rax],al
  40f254:	add    al,BYTE PTR [rcx]
  40f257:	add    BYTE PTR [rax+0x33],dh
  40f25a:	add    BYTE PTR [rax],al
  40f25c:	mov    ebp,0x4800004e
  40f261:	add    al,BYTE PTR [rcx]
  40f263:	add    al,al
  40f265:	rex.WRX add BYTE PTR [rax],r8b
  40f268:	sbb    edx,DWORD PTR [rax+0x0]
  40f26b:	add    BYTE PTR [rax+0x2],bh
  40f26e:	add    DWORD PTR [rax],eax
  40f270:	and    BYTE PTR [rax+0x0],dl
  40f273:	add    bh,ch
  40f275:	pop    rax
  40f276:	add    BYTE PTR [rax],al
  40f278:	mov    WORD PTR [rdx],es
  40f27a:	add    DWORD PTR [rax],eax
  40f27c:	lock pop rax
  40f27e:	add    BYTE PTR [rax],al
  40f280:	in     eax,dx
  40f281:	pop    rcx
  40f282:	add    BYTE PTR [rax],al
  40f284:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40f285:	add    al,BYTE PTR [rcx]
  40f287:	add    al,dh
  40f289:	pop    rcx
  40f28a:	add    BYTE PTR [rax],al
  40f28c:	cs pop rdx
  40f28e:	add    BYTE PTR [rax],al
  40f290:	mov    al,0x2
  40f292:	add    DWORD PTR [rax],eax
  40f294:	xor    BYTE PTR [rdx+0x0],bl
  40f297:	add    BYTE PTR [rdx+rbx*2+0x2b40000],dh
  40f29e:	add    DWORD PTR [rax],eax
  40f2a0:	rcr    BYTE PTR [rdx+0x0],0x0
  40f2a4:	jb     0x40f304
  40f2a6:	add    BYTE PTR [rax],al
  40f2a8:	mov    eax,0x80000102
  40f2ad:	pop    rsi
  40f2ae:	add    BYTE PTR [rax],al
  40f2b0:	rex.WR pop rdi
  40f2b2:	add    BYTE PTR [rax],al
  40f2b4:	rol    BYTE PTR [rdx],1
  40f2b6:	add    DWORD PTR [rax],eax
  40f2b8:	push   rax
  40f2b9:	pop    rdi
  40f2ba:	add    BYTE PTR [rax],al
  40f2bc:	xchg   edx,eax
  40f2bd:	pop    rdi
  40f2be:	add    BYTE PTR [rax],al
  40f2c0:	fadd   QWORD PTR [rdx]
  40f2c2:	add    DWORD PTR [rax],eax
  40f2c4:	movabs al,ds:0xe4000060ae00005f
  40f2cd:	add    al,BYTE PTR [rcx]
  40f2cf:	add    BYTE PTR [rax+0x16000060],dh
  40f2d5:	(bad)  
  40f2d6:	add    BYTE PTR [rax],al
  40f2d8:	lock add al,BYTE PTR [rcx]
  40f2db:	add    BYTE PTR [rax],ah
  40f2dd:	(bad)  
  40f2de:	add    BYTE PTR [rax],al
  40f2e0:	shl    BYTE PTR [rcx+0x0],cl
  40f2e3:	add    al,bh
  40f2e5:	add    al,BYTE PTR [rcx]
  40f2e7:	add    al,ah
  40f2e9:	(bad)  
  40f2ea:	add    BYTE PTR [rax],al
  40f2ec:	(bad)  
  40f2ed:	(bad)  
  40f2ee:	add    BYTE PTR [rax],al
  40f2f0:	or     BYTE PTR [rbx],al
  40f2f2:	add    DWORD PTR [rax],eax
  40f2f4:	adc    BYTE PTR [rdx+0x0],ah
  40f2f7:	add    BYTE PTR [rax+0x63],al
  40f2fa:	add    BYTE PTR [rax],al
  40f2fc:	adc    BYTE PTR [rbx],al
  40f2fe:	add    DWORD PTR [rax],eax
  40f300:	rex movsxd eax,DWORD PTR [rax]
  40f303:	add    BYTE PTR [rsp+riz*2+0x3240000],ah
  40f30a:	add    DWORD PTR [rax],eax
  40f30c:	mov    al,0x64
  40f30e:	add    BYTE PTR [rax],al
  40f310:	ret    
  40f311:	add    BYTE PTR gs:[rax],al
  40f314:	xor    al,0x3
  40f316:	add    DWORD PTR [rax],eax
  40f318:	shl    BYTE PTR [rbp+0x0],1
  40f31b:	add    BYTE PTR [rsi+riz*2],dl
  40f31e:	add    BYTE PTR [rax],al
  40f320:	add    rax,QWORD PTR [rcx]
  40f323:	add    BYTE PTR [rax],ah
  40f325:	data16 add BYTE PTR [rax],al
  40f328:	push   rsi
  40f329:	add    BYTE PTR [eax],al
  40f32c:	add    r8,QWORD PTR [rcx]
  40f32f:	add    BYTE PTR [rax+0x67],ah
  40f332:	add    BYTE PTR [rax],al
  40f334:	jae    0x40f39e
  40f336:	add    BYTE PTR [rax],al
  40f338:	pop    rax
  40f339:	add    eax,DWORD PTR [rcx]
  40f33b:	add    BYTE PTR [rax-0x76ffff98],al
  40f341:	imul   eax,DWORD PTR [rax],0x1036400
  40f347:	add    BYTE PTR [rax-0x4bffff97],dl
  40f34d:	imul   eax,DWORD PTR [rax],0x1037000
  40f353:	add    al,al
  40f355:	imul   eax,DWORD PTR [rax],0x6abb00
  40f35b:	add    BYTE PTR [rbx+rax*1+0x1],dh
  40f35f:	add    al,al
  40f361:	push   0x0
  40f363:	add    BYTE PTR [rbx+rbp*2+0x0],bh
  40f367:	add    BYTE PTR [rax-0x7ffffefd],cl
  40f36d:	imul   eax,DWORD PTR [rax],0x0
  40f370:	ret    
  40f371:	imul   eax,DWORD PTR [rax],0x0
  40f374:	cwde   
  40f375:	add    eax,DWORD PTR [rcx]
  40f377:	add    al,dl
  40f379:	imul   eax,DWORD PTR [rax],0x0
  40f37c:	xor    ch,BYTE PTR [rax+rax*1+0x0]
  40f380:	pushf  
  40f381:	add    eax,DWORD PTR [rcx]
  40f383:	add    BYTE PTR [rax+0x6c],al
  40f386:	add    BYTE PTR [rax],al
  40f388:	leave  
  40f389:	ins    BYTE PTR es:[rdi],dx
  40f38a:	add    BYTE PTR [rax],al
  40f38c:	movabs al,ds:0xc800006dc0000103
  40f395:	ins    DWORD PTR es:[rdi],dx
  40f396:	add    BYTE PTR [rax],al
  40f398:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40f399:	add    eax,DWORD PTR [rcx]
  40f39b:	add    al,dl
  40f39d:	ins    DWORD PTR es:[rdi],dx
  40f39e:	add    BYTE PTR [rax],al
  40f3a0:	fld    TBYTE PTR [rbp+0x0]
  40f3a3:	add    BYTE PTR [rax-0x5ffffefd],ch
  40f3a9:	outs   dx,BYTE PTR ds:[rsi]
  40f3aa:	add    BYTE PTR [rax],al
  40f3ac:	(bad)  
  40f3ad:	outs   dx,BYTE PTR ds:[rsi]
  40f3ae:	add    BYTE PTR [rax],al
  40f3b0:	push   0xffffffffe0000100
  40f3b5:	outs   dx,BYTE PTR ds:[rsi]
  40f3b6:	add    BYTE PTR [rax],al
  40f3b8:	outs   dx,BYTE PTR ds:[rsi]
  40f3b9:	popf   
  40f3ba:	add    BYTE PTR [rax],al
  40f3bc:	jo     0x40f3be
  40f3be:	add    DWORD PTR [rax],eax

Disassembly of section .xdata:

0000000000410000 <.xdata>:
  410000:	add    DWORD PTR [rax],eax
  410002:	add    BYTE PTR [rax],al
  410004:	add    DWORD PTR [rcx+rax*1],eax
  410007:	add    BYTE PTR [rdx+rax*2],al
  41000a:	add    BYTE PTR [rax],al
  41000c:	add    DWORD PTR [rcx+rax*1],eax
  41000f:	add    BYTE PTR [rdx+riz*2],al
  410012:	add    BYTE PTR [rax],al
  410014:	add    DWORD PTR [rdi],ecx
  410016:	or     BYTE PTR [rax],al
  410018:	lgdt   [rbx]
  41001b:	add    BYTE PTR [rax],cl
  41001d:	xor    BYTE PTR [rdi],al
  41001f:	(bad)  
  410020:	(bad)  
  410021:	jo     0x410028
  410023:	push   rax
  410024:	add    al,0xc0
  410026:	add    dl,al
  410028:	or     DWORD PTR [rcx+rax*1],eax
  41002b:	add    BYTE PTR [rdx+rax*2],al
  41002e:	add    BYTE PTR [rax],al
  410030:	mov    eax,0x100006d
  410035:	add    BYTE PTR [rax],al
  410037:	add    ah,dl
  410039:	adc    al,0x0
  41003b:	add    ah,ch
  41003d:	adc    al,0x0
  41003f:	add    al,ah
  410041:	and    al,0x0
  410043:	add    ah,ch
  410045:	adc    al,0x0
  410047:	add    BYTE PTR [rcx],cl
  410049:	add    al,0x1
  41004b:	add    BYTE PTR [rdx+rax*2],al
  41004e:	add    BYTE PTR [rax],al
  410050:	mov    eax,0x100006d
  410055:	add    BYTE PTR [rax],al
  410057:	add    BYTE PTR [rdx*1+0x151c0000],al
  41005e:	add    BYTE PTR [rax],al
  410060:	loopne 0x410086
  410062:	add    BYTE PTR [rax],al
  410064:	sbb    al,0x15
  410066:	add    BYTE PTR [rax],al
  410068:	add    DWORD PTR [rip+0x52050002],eax        # 0x52460070
  41006e:	add    DWORD PTR [rax],esi
  410070:	add    DWORD PTR [rbx],ebx
  410072:	or     al,0x0
  410074:	sbb    ebp,DWORD PTR [rax+0x76]
  410077:	add    BYTE PTR [rbx],dl
  410079:	add    edi,ebp
  41007b:	add    BYTE PTR [rax+rsi*1],cl
  41007e:	or     esp,DWORD PTR [rax+0xa]
  410081:	jo     0x41008c
  410083:	push   rax
  410084:	or     al,al
  410086:	(bad)  
  410087:	rol    BYTE PTR [rax+riz*8],1
  41008a:	add    dh,al
  41008c:	add    DWORD PTR [rip+0x52050002],eax        # 0x52460094
  410092:	add    DWORD PTR [rax],esi
  410094:	add    DWORD PTR [rcx+rax*1],eax
  410097:	add    BYTE PTR [rdx+rax*2],al
  41009a:	add    BYTE PTR [rax],al
  41009c:	add    DWORD PTR [rcx+rax*1],eax
  41009f:	add    BYTE PTR [rdx+rax*2],al
  4100a2:	add    BYTE PTR [rax],al
  4100a4:	add    DWORD PTR [rsi],eax
  4100a6:	add    eax,DWORD PTR [rax]
  4100a8:	(bad)  
  4100a9:	rex.X add sil,BYTE PTR [rax]
  4100ac:	add    DWORD PTR [rax+0x0],esp
  4100af:	add    BYTE PTR [rcx],al
  4100b1:	add    BYTE PTR [rax],al
  4100b3:	add    BYTE PTR [rcx],al
  4100b5:	add    BYTE PTR [rax],al
  4100b7:	add    BYTE PTR [rcx],al
  4100b9:	add    BYTE PTR [rax],al
  4100bb:	add    BYTE PTR [rcx],al
  4100bd:	or     al,BYTE PTR [rsi]
  4100bf:	add    BYTE PTR [rdx],cl
  4100c1:	jb     0x4100c9
  4100c3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b10529
  4100c9:	push   rax
  4100ca:	add    al,al
  4100cc:	add    DWORD PTR [rdx],ecx
  4100ce:	add    eax,0x6d20a05
  4100d3:	add    eax,DWORD PTR [rbx]
  4100d5:	xor    BYTE PTR [rdx],al
  4100d7:	(bad)  
  4100d8:	add    DWORD PTR [rax+0x0],edx
  4100db:	add    BYTE PTR [rcx],al
  4100dd:	add    al,0x1
  4100df:	add    BYTE PTR [rdx+rax*2],al
  4100e2:	add    BYTE PTR [rax],al
  4100e4:	add    DWORD PTR [rsi],eax
  4100e6:	add    eax,DWORD PTR [rax]
  4100e8:	(bad)  
  4100e9:	rex.X add sil,BYTE PTR [rax]
  4100ec:	add    DWORD PTR [rax+0x0],esp
  4100ef:	add    BYTE PTR [rcx],al
  4100f1:	add    BYTE PTR [rax],al
  4100f3:	add    BYTE PTR [rcx],al
  4100f5:	add    al,0x1
  4100f7:	add    BYTE PTR [rdx+riz*4],al
  4100fa:	add    BYTE PTR [rax],al
  4100fc:	add    DWORD PTR [rax],eax
  4100fe:	add    BYTE PTR [rax],al
  410100:	add    DWORD PTR [rsi],edx
  410102:	or     DWORD PTR [rax],eax
  410104:	(bad)  
  410105:	mov    BYTE PTR [rsi],al
  410107:	add    BYTE PTR [rax],dl
  410109:	js     0x410110
  41010b:	add    BYTE PTR [rbx],cl
  41010d:	push   0xffffffffe2060004
  410112:	add    dh,BYTE PTR [rax]
  410114:	add    DWORD PTR [rax+0x0],esp
  410117:	add    BYTE PTR [rcx],al
  410119:	add    BYTE PTR [rax],al
  41011b:	add    BYTE PTR [rcx],al
  41011d:	add    BYTE PTR [rax],al
  41011f:	add    BYTE PTR [rcx],al
  410121:	add    BYTE PTR [rax],al
  410123:	add    BYTE PTR [rcx],al
  410125:	(bad)  
  410126:	add    eax,DWORD PTR [rax]
  410128:	(bad)  
  410129:	(bad)  
  41012b:	xor    BYTE PTR [rcx],al
  41012d:	(bad)  
  41012e:	add    BYTE PTR [rax],al
  410130:	add    DWORD PTR [rdi+rax*1],ecx
  410133:	add    BYTE PTR [rdx+riz*4],cl
  410136:	or     BYTE PTR [rax],dh
  410138:	(bad)  
  410139:	(bad)  
  41013a:	(bad)  
  41013b:	jo     0x410142
  41013d:	push   rax
  41013e:	add    al,0xc0
  410140:	add    dl,al
  410142:	add    BYTE PTR [rax],al
  410144:	add    DWORD PTR [rcx],edx
  410146:	or     DWORD PTR [rip+0x30db211],eax        # 0x34eb35d
  41014c:	or     dh,BYTE PTR [rax]
  41014e:	or     DWORD PTR [rax+0x8],esp
  410151:	jo     0x41015a
  410153:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x221052a
  41015a:	add    BYTE PTR [rax],al
  41015c:	add    DWORD PTR [rcx+rax*1],eax
  41015f:	add    BYTE PTR [rdx+rax*2],al
  410162:	add    BYTE PTR [rax],al
  410164:	add    DWORD PTR [rdx],ecx
  410166:	(bad)  
  410167:	add    BYTE PTR [rdx],cl
  410169:	xor    al,BYTE PTR [rsi]
  41016b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b105d1
  410171:	push   rax
  410172:	add    al,al
  410174:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246017c
  41017a:	add    DWORD PTR [rax],esi
  41017c:	add    DWORD PTR [rax],ecx
  41017e:	add    eax,0x4420800
  410183:	xor    BYTE PTR [rbx],al
  410185:	(bad)  
  410186:	add    dh,BYTE PTR [rax+0x1]
  410189:	push   rax
  41018a:	add    BYTE PTR [rax],al
  41018c:	add    DWORD PTR [rdi],eax
  41018e:	add    al,0x0
  410190:	(bad)  
  410191:	xor    al,BYTE PTR [rbx]
  410193:	xor    BYTE PTR [rdx],al
  410195:	(bad)  
  410196:	add    DWORD PTR [rax+0x1],esi
  410199:	add    eax,0x32050002
  41019e:	add    DWORD PTR [rax],esi
  4101a0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324601a8
  4101a6:	add    DWORD PTR [rax],esi
  4101a8:	add    DWORD PTR [rax],eax
  4101aa:	add    BYTE PTR [rax],al
  4101ac:	add    DWORD PTR [rax],eax
  4101ae:	add    BYTE PTR [rax],al
  4101b0:	add    DWORD PTR [rax],eax
  4101b2:	add    BYTE PTR [rax],al
  4101b4:	add    DWORD PTR [rdi],eax
  4101b6:	add    al,0x0
  4101b8:	(bad)  
  4101b9:	xor    al,BYTE PTR [rbx]
  4101bb:	xor    BYTE PTR [rdx],al
  4101bd:	(bad)  
  4101be:	add    DWORD PTR [rax+0x1],esi
  4101c1:	(bad)  
  4101c2:	add    eax,DWORD PTR [rax]
  4101c4:	(bad)  
  4101c5:	rex.X add sil,BYTE PTR [rax]
  4101c8:	add    DWORD PTR [rax+0x0],esp
  4101cb:	add    BYTE PTR [rcx],al
  4101cd:	add    eax,0x32050002
  4101d2:	add    DWORD PTR [rax],esi
  4101d4:	add    DWORD PTR [rdi],eax
  4101d6:	add    al,0x0
  4101d8:	(bad)  
  4101d9:	xor    al,BYTE PTR [rbx]
  4101db:	xor    BYTE PTR [rdx],al
  4101dd:	(bad)  
  4101de:	add    DWORD PTR [rax+0x1],esi
  4101e1:	(bad)  
  4101e2:	add    eax,DWORD PTR [rax]
  4101e4:	(bad)  
  4101e5:	rex.X add sil,BYTE PTR [rax]
  4101e8:	add    DWORD PTR [rax+0x0],esp
  4101eb:	add    BYTE PTR [rcx],al
  4101ed:	(bad)  
  4101ee:	add    eax,DWORD PTR [rax]
  4101f0:	(bad)  
  4101f1:	rex.X add sil,BYTE PTR [rax]
  4101f4:	add    DWORD PTR [rax+0x0],esp
  4101f7:	add    BYTE PTR [rcx],al
  4101f9:	or     BYTE PTR [rip+0x4420800],al        # 0x48309ff
  4101ff:	xor    BYTE PTR [rbx],al
  410201:	(bad)  
  410202:	add    dh,BYTE PTR [rax+0x1]
  410205:	push   rax
  410206:	add    BYTE PTR [rax],al
  410208:	add    DWORD PTR [rip+0xffffffffb2050002],eax        # 0xffffffffb2460210
  41020e:	add    DWORD PTR [rax],esi
  410210:	add    DWORD PTR [rcx+rax*1],eax
  410213:	add    BYTE PTR [rdx+riz*1],al
  410216:	add    BYTE PTR [rax],al
  410218:	add    DWORD PTR [rsi],eax
  41021a:	add    eax,DWORD PTR [rax]
  41021c:	(bad)  
  41021d:	rex.X add sil,BYTE PTR [rax]
  410220:	add    DWORD PTR [rax+0x0],esp
  410223:	add    BYTE PTR [rcx],al
  410225:	adc    BYTE PTR [rcx],cl
  410227:	add    BYTE PTR [rax],dl
  410229:	(bad)  
  41022a:	or     al,0x30
  41022c:	or     esp,DWORD PTR [rax+0xa]
  41022f:	jo     0x41023a
  410231:	push   rax
  410232:	or     al,al
  410234:	(bad)  
  410235:	rol    BYTE PTR [rax+riz*8],1
  410238:	add    dh,al
  41023a:	add    BYTE PTR [rax],al
  41023c:	add    DWORD PTR [rax],eax
  41023e:	add    BYTE PTR [rax],al
  410240:	add    DWORD PTR [rip+0x52050002],eax        # 0x52460248
  410246:	add    DWORD PTR [rax],esi
  410248:	add    DWORD PTR [rdi+0x16],eax
  41024b:	add    BYTE PTR [rdi-0x48],al
  41024e:	adc    al,BYTE PTR [rax]
  410250:	ds test al,0x11
  410253:	add    BYTE PTR [rip+0x2c001098],dh        # 0x2c4112f1
  410259:	mov    BYTE PTR [rdi],cl
  41025b:	add    BYTE PTR [rbx],ah
  41025d:	js     0x41026d
  41025f:	add    BYTE PTR [rbx],bl
  410261:	push   0x113000d
  410266:	(bad)  
  410267:	add    BYTE PTR [rax+rsi*1],cl
  41026a:	or     esp,DWORD PTR [rax+0xa]
  41026d:	jo     0x410278
  41026f:	push   rax
  410270:	or     al,al
  410272:	(bad)  
  410273:	rol    BYTE PTR [rax+riz*8],1
  410276:	add    dh,al
  410278:	add    DWORD PTR [rdi+rax*1],ecx
  41027b:	add    BYTE PTR [rdx+rax*2],cl
  41027e:	or     BYTE PTR [rax],dh
  410280:	(bad)  
  410281:	(bad)  
  410282:	(bad)  
  410283:	jo     0x41028a
  410285:	push   rax
  410286:	add    al,0xc0
  410288:	add    dl,al
  41028a:	add    BYTE PTR [rax],al
  41028c:	add    DWORD PTR [rax],edx
  41028e:	or     DWORD PTR [rax],eax
  410290:	adc    BYTE PTR [rdx+0xc],al
  410293:	xor    BYTE PTR [rbx],cl
  410295:	(bad)  
  410296:	or     dh,BYTE PTR [rax+0x9]
  410299:	push   rax
  41029a:	or     al,al
  41029c:	(bad)  
  41029d:	rol    BYTE PTR [rax+riz*8],1
  4102a0:	add    dh,al
  4102a2:	add    BYTE PTR [rax],al
  4102a4:	add    DWORD PTR [rsp+rax*1],eax
  4102a7:	add    BYTE PTR [rax+rsi*1],al
  4102aa:	add    esp,DWORD PTR [rax+0x2]
  4102ad:	jo     0x4102b0
  4102af:	push   rax
  4102b0:	add    DWORD PTR [rax],eax
  4102b2:	add    BYTE PTR [rax],al
  4102b4:	add    DWORD PTR [rax],eax
  4102b6:	add    BYTE PTR [rax],al
  4102b8:	add    DWORD PTR [rax],edx
  4102ba:	or     DWORD PTR [rax],eax
  4102bc:	adc    BYTE PTR [rdx+0x600b300c],al
  4102c2:	or     dh,BYTE PTR [rax+0x9]
  4102c5:	push   rax
  4102c6:	or     al,al
  4102c8:	(bad)  
  4102c9:	rol    BYTE PTR [rax+riz*8],1
  4102cc:	add    dh,al
  4102ce:	add    BYTE PTR [rax],al
  4102d0:	add    DWORD PTR [rsi],eax
  4102d2:	add    eax,DWORD PTR [rax]
  4102d4:	(bad)  
  4102d5:	rex.X add sil,BYTE PTR [rax]
  4102d8:	add    DWORD PTR [rax+0x0],esp
  4102db:	add    BYTE PTR [rcx],al
  4102dd:	add    eax,0x32050002
  4102e2:	add    DWORD PTR [rax],esi
  4102e4:	add    DWORD PTR [rdi],eax
  4102e6:	add    al,0x0
  4102e8:	(bad)  
  4102e9:	xor    al,BYTE PTR [rbx]
  4102eb:	xor    BYTE PTR [rdx],al
  4102ed:	(bad)  
  4102ee:	add    DWORD PTR [rax+0x1],esi
  4102f1:	add    eax,0x32050002
  4102f6:	add    DWORD PTR [rax],esi
  4102f8:	add    DWORD PTR [rax],ecx
  4102fa:	add    eax,0x4420800
  4102ff:	xor    BYTE PTR [rbx],al
  410301:	(bad)  
  410302:	add    dh,BYTE PTR [rax+0x1]
  410305:	push   rax
  410306:	add    BYTE PTR [rax],al
  410308:	add    DWORD PTR [rip+0x32050002],eax        # 0x32460310
  41030e:	add    DWORD PTR [rax],esi
  410310:	add    DWORD PTR [rsi],ecx
  410312:	or     BYTE PTR [rax],al
  410314:	(bad)  
  410315:	xor    cl,BYTE PTR [rdx]
  410317:	xor    BYTE PTR [rcx],cl
  410319:	(bad)  
  41031a:	or     BYTE PTR [rax+0x7],dh
  41031d:	push   rax
  41031e:	(bad)  
  41031f:	rol    BYTE PTR [rax+rdx*8],0x2
  410323:	loopne 0x410326
  410325:	or     BYTE PTR [rip+0x4420800],al        # 0x4830b2b
  41032b:	xor    BYTE PTR [rbx],al
  41032d:	(bad)  
  41032e:	add    dh,BYTE PTR [rax+0x1]
  410331:	push   rax
  410332:	add    BYTE PTR [rax],al
  410334:	add    DWORD PTR [rdi+rax*1],ecx
  410337:	add    BYTE PTR [rdx+rax*2],cl
  41033a:	or     BYTE PTR [rax],dh
  41033c:	(bad)  
  41033d:	(bad)  
  41033e:	(bad)  
  41033f:	jo     0x410346
  410341:	push   rax
  410342:	add    al,0xc0
  410344:	add    dl,al
  410346:	add    BYTE PTR [rax],al
  410348:	add    DWORD PTR [rax],eax
  41034a:	add    BYTE PTR [rax],al
  41034c:	add    DWORD PTR [rdi],eax
  41034e:	add    al,0x0
  410350:	(bad)  
  410351:	xor    al,BYTE PTR [rbx]
  410353:	xor    BYTE PTR [rdx],al
  410355:	(bad)  
  410356:	add    DWORD PTR [rax+0x1],esi
  410359:	(bad)  
  41035a:	add    eax,DWORD PTR [rax]
  41035c:	(bad)  
  41035d:	and    al,BYTE PTR [rdx]
  41035f:	xor    BYTE PTR [rcx],al
  410361:	(bad)  
  410362:	add    BYTE PTR [rax],al
  410364:	add    DWORD PTR [rdi],eax
  410366:	add    al,0x0
  410368:	(bad)  
  410369:	xor    al,BYTE PTR [rbx]
  41036b:	xor    BYTE PTR [rdx],al
  41036d:	(bad)  
  41036e:	add    DWORD PTR [rax+0x1],esi
  410371:	add    BYTE PTR [rax],al
  410373:	add    BYTE PTR [rcx],al
  410375:	or     al,0x7
  410377:	add    BYTE PTR [rdx+rax*2],cl
  41037a:	or     BYTE PTR [rax],dh
  41037c:	(bad)  
  41037d:	(bad)  
  41037e:	(bad)  
  41037f:	jo     0x410386
  410381:	push   rax
  410382:	add    al,0xc0
  410384:	add    dl,al
  410386:	add    BYTE PTR [rax],al
  410388:	add    DWORD PTR [rsi+rax*1],ecx
  41038b:	add    BYTE PTR [rax+rbp*2],cl
  41038e:	add    al,0x0
  410390:	(bad)  
  410391:	xchg   edx,eax
  410392:	add    esi,DWORD PTR [rax]
  410394:	add    ah,BYTE PTR [rax+0x1]
  410397:	jo     0x41039a
  410399:	add    BYTE PTR [rax],al
  41039b:	add    BYTE PTR [rcx],al
  41039d:	add    BYTE PTR [rax],al
  41039f:	add    BYTE PTR [rcx],al
  4103a1:	add    BYTE PTR [rax],al
  4103a3:	add    BYTE PTR [rcx],al
  4103a5:	add    BYTE PTR [rax],al
  4103a7:	add    BYTE PTR [rcx],al
  4103a9:	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000411000 <.bss>:
	...

Disassembly of section .idata:

0000000000413000 <.idata>:
  413000:	push   rax
  413001:	xor    BYTE PTR [rcx],al
	...
  41300b:	add    BYTE PTR [rax-0x7ffffebe],cl
  413011:	xor    al,0x1
  413013:	add    BYTE PTR [rax+0x132],dh
  413019:	add    BYTE PTR [rax],al
  41301b:	add    BYTE PTR [rax],al
  41301d:	add    BYTE PTR [rax],al
  41301f:	add    ah,dh
  413021:	rex.X add DWORD PTR [rax],eax
  413024:	loopne 0x41305c
  413026:	add    DWORD PTR [rax],eax
  413028:	jo     0x41305d
  41302a:	add    DWORD PTR [rax],eax
	...
  413034:	mov    BYTE PTR [rbx+0x1],al
  413037:	add    BYTE PTR [rax+0x137],ah
	...
  41304d:	add    BYTE PTR [rax],al
  41304f:	add    BYTE PTR [rax+0x138],dh
  413055:	add    BYTE PTR [rax],al
  413057:	add    al,al
  413059:	cmp    BYTE PTR [rcx],al
  41305b:	add    BYTE PTR [rax],al
  41305d:	add    BYTE PTR [rax],al
  41305f:	add    al,dl
  413061:	cmp    BYTE PTR [rcx],al
  413063:	add    BYTE PTR [rax],al
  413065:	add    BYTE PTR [rax],al
  413067:	add    al,ah
  413069:	cmp    BYTE PTR [rcx],al
  41306b:	add    BYTE PTR [rax],al
  41306d:	add    BYTE PTR [rax],al
  41306f:	add    ah,dh
  413071:	cmp    BYTE PTR [rcx],al
  413073:	add    BYTE PTR [rax],al
  413075:	add    BYTE PTR [rax],al
  413077:	add    BYTE PTR [rcx+rdi*1],al
  41307a:	add    DWORD PTR [rax],eax
  41307c:	add    BYTE PTR [rax],al
  41307e:	add    BYTE PTR [rax],al
  413080:	adc    al,0x39
  413082:	add    DWORD PTR [rax],eax
  413084:	add    BYTE PTR [rax],al
  413086:	add    BYTE PTR [rax],al
  413088:	sub    BYTE PTR [rcx],bh
  41308a:	add    DWORD PTR [rax],eax
  41308c:	add    BYTE PTR [rax],al
  41308e:	add    BYTE PTR [rax],al
  413090:	cmp    al,0x39
  413092:	add    DWORD PTR [rax],eax
  413094:	add    BYTE PTR [rax],al
  413096:	add    BYTE PTR [rax],al
  413098:	push   rax
  413099:	cmp    DWORD PTR [rcx],eax
  41309b:	add    BYTE PTR [rax],al
  41309d:	add    BYTE PTR [rax],al
  41309f:	add    BYTE PTR [rcx+rdi*1+0x1],ah
  4130a3:	add    BYTE PTR [rax],al
  4130a5:	add    BYTE PTR [rax],al
  4130a7:	add    BYTE PTR [rcx+rdi*1+0x1],dh
  4130ab:	add    BYTE PTR [rax],al
  4130ad:	add    BYTE PTR [rax],al
  4130af:	add    BYTE PTR [rcx+rdi*1+0x1],al
  4130b6:	add    BYTE PTR [rax],al
  4130b8:	nop
  4130b9:	cmp    DWORD PTR [rcx],eax
  4130bb:	add    BYTE PTR [rax],al
  4130bd:	add    BYTE PTR [rax],al
  4130bf:	add    BYTE PTR [rax+0x139],ah
  4130c5:	add    BYTE PTR [rax],al
  4130c7:	add    BYTE PTR [rax+0x139],dh
  4130cd:	add    BYTE PTR [rax],al
  4130cf:	add    al,al
  4130d1:	cmp    DWORD PTR [rcx],eax
  4130d3:	add    BYTE PTR [rax],al
  4130d5:	add    BYTE PTR [rax],al
  4130d7:	add    ah,dl
  4130d9:	cmp    DWORD PTR [rcx],eax
  4130db:	add    BYTE PTR [rax],al
  4130dd:	add    BYTE PTR [rax],al
  4130df:	add    al,ch
  4130e1:	cmp    DWORD PTR [rcx],eax
  4130e3:	add    BYTE PTR [rax],al
  4130e5:	add    BYTE PTR [rax],al
  4130e7:	add    ah,bh
  4130e9:	cmp    DWORD PTR [rcx],eax
  4130eb:	add    BYTE PTR [rax],al
  4130ed:	add    BYTE PTR [rax],al
  4130ef:	add    BYTE PTR [rax],dl
  4130f1:	cmp    al,BYTE PTR [rcx]
  4130f3:	add    BYTE PTR [rax],al
  4130f5:	add    BYTE PTR [rax],al
  4130f7:	add    BYTE PTR [rdx+rdi*1],ah
  4130fa:	add    DWORD PTR [rax],eax
  4130fc:	add    BYTE PTR [rax],al
  4130fe:	add    BYTE PTR [rax],al
  413100:	cmp    BYTE PTR [rdx],bh
  413102:	add    DWORD PTR [rax],eax
  413104:	add    BYTE PTR [rax],al
  413106:	add    BYTE PTR [rax],al
  413108:	rex.WR cmp r8b,BYTE PTR [rcx]
  41310b:	add    BYTE PTR [rax],al
  41310d:	add    BYTE PTR [rax],al
  41310f:	add    BYTE PTR [rdx+rdi*1+0x1],bl
  413113:	add    BYTE PTR [rax],al
  413115:	add    BYTE PTR [rax],al
  413117:	add    BYTE PTR [rax+0x3a],dh
  41311a:	add    DWORD PTR [rax],eax
  41311c:	add    BYTE PTR [rax],al
  41311e:	add    BYTE PTR [rax],al
  413120:	cmp    BYTE PTR [rdx],0x1
  413123:	add    BYTE PTR [rax],al
  413125:	add    BYTE PTR [rax],al
  413127:	add    BYTE PTR [rax+0x13a],dl
  41312d:	add    BYTE PTR [rax],al
  41312f:	add    BYTE PTR [rax+0x13a],ah
  413135:	add    BYTE PTR [rax],al
  413137:	add    BYTE PTR [rax+0x13a],dh
  41313d:	add    BYTE PTR [rax],al
  41313f:	add    ah,al
  413141:	cmp    al,BYTE PTR [rcx]
  413143:	add    BYTE PTR [rax],al
  413145:	add    BYTE PTR [rax],al
  413147:	add    al,bl
  413149:	cmp    al,BYTE PTR [rcx]
  41314b:	add    BYTE PTR [rax],al
  41314d:	add    BYTE PTR [rax],al
  41314f:	add    al,ch
  413151:	cmp    al,BYTE PTR [rcx]
  413153:	add    BYTE PTR [rax],al
  413155:	add    BYTE PTR [rax],al
  413157:	add    al,bh
  413159:	cmp    al,BYTE PTR [rcx]
  41315b:	add    BYTE PTR [rax],al
  41315d:	add    BYTE PTR [rax],al
  41315f:	add    BYTE PTR [rbx+rdi*1],cl
  413162:	add    DWORD PTR [rax],eax
  413164:	add    BYTE PTR [rax],al
  413166:	add    BYTE PTR [rax],al
  413168:	sbb    al,0x3b
  41316a:	add    DWORD PTR [rax],eax
  41316c:	add    BYTE PTR [rax],al
  41316e:	add    BYTE PTR [rax],al
  413170:	xor    BYTE PTR [rbx],bh
  413172:	add    DWORD PTR [rax],eax
  413174:	add    BYTE PTR [rax],al
  413176:	add    BYTE PTR [rax],al
  413178:	cmp    rax,QWORD PTR [rcx]
  41317b:	add    BYTE PTR [rax],al
  41317d:	add    BYTE PTR [rax],al
  41317f:	add    BYTE PTR [rax+0x3b],ah
  413182:	add    DWORD PTR [rax],eax
  413184:	add    BYTE PTR [rax],al
  413186:	add    BYTE PTR [rax],al
  413188:	je     0x4131c5
  41318a:	add    DWORD PTR [rax],eax
  41318c:	add    BYTE PTR [rax],al
  41318e:	add    BYTE PTR [rax],al
  413190:	mov    BYTE PTR [rbx],bh
  413192:	add    DWORD PTR [rax],eax
  413194:	add    BYTE PTR [rax],al
  413196:	add    BYTE PTR [rax],al
  413198:	pushf  
  413199:	cmp    eax,DWORD PTR [rcx]
  41319b:	add    BYTE PTR [rax],al
  41319d:	add    BYTE PTR [rax],al
  41319f:	add    BYTE PTR [rax+0x13b],dh
  4131a5:	add    BYTE PTR [rax],al
  4131a7:	add    ah,al
  4131a9:	cmp    eax,DWORD PTR [rcx]
  4131ab:	add    BYTE PTR [rax],al
  4131ad:	add    BYTE PTR [rax],al
  4131af:	add    ah,bl
  4131b1:	cmp    eax,DWORD PTR [rcx]
  4131b3:	add    BYTE PTR [rax],al
  4131b5:	add    BYTE PTR [rax],al
  4131b7:	add    ah,ch
  4131b9:	cmp    eax,DWORD PTR [rcx]
  4131bb:	add    BYTE PTR [rax],al
  4131bd:	add    BYTE PTR [rax],al
  4131bf:	add    ah,bh
  4131c1:	cmp    eax,DWORD PTR [rcx]
  4131c3:	add    BYTE PTR [rax],al
  4131c5:	add    BYTE PTR [rax],al
  4131c7:	add    BYTE PTR [rsp+rdi*1],cl
  4131ca:	add    DWORD PTR [rax],eax
  4131cc:	add    BYTE PTR [rax],al
  4131ce:	add    BYTE PTR [rax],al
  4131d0:	and    BYTE PTR [rcx+rax*1],bh
  4131d3:	add    BYTE PTR [rax],al
  4131d5:	add    BYTE PTR [rax],al
  4131d7:	add    BYTE PTR [rax],dh
  4131d9:	cmp    al,0x1
  4131db:	add    BYTE PTR [rax],al
  4131dd:	add    BYTE PTR [rax],al
  4131df:	add    BYTE PTR [rax+0x3c],al
  4131e2:	add    DWORD PTR [rax],eax
  4131e4:	add    BYTE PTR [rax],al
  4131e6:	add    BYTE PTR [rax],al
  4131e8:	push   rsp
  4131e9:	cmp    al,0x1
  4131eb:	add    BYTE PTR [rax],al
  4131ed:	add    BYTE PTR [rax],al
  4131ef:	add    BYTE PTR [rsp+rdi*1+0x1],ah
  4131f3:	add    BYTE PTR [rax],al
  4131f5:	add    BYTE PTR [rax],al
  4131f7:	add    BYTE PTR [rsp+rdi*1+0x1],dh
  4131fb:	add    BYTE PTR [rax],al
  4131fd:	add    BYTE PTR [rax],al
  4131ff:	add    BYTE PTR [rax+0x13c],cl
  413205:	add    BYTE PTR [rax],al
  413207:	add    BYTE PTR [rsp+rdi*1+0x1],bl
  41320e:	add    BYTE PTR [rax],al
  413210:	lods   al,BYTE PTR ds:[rsi]
  413211:	cmp    al,0x1
  413213:	add    BYTE PTR [rax],al
  413215:	add    BYTE PTR [rax],al
  413217:	add    BYTE PTR [rsp+rdi*1+0x1],bh
  41321e:	add    BYTE PTR [rax],al
  413220:	int3   
  413221:	cmp    al,0x1
  413223:	add    BYTE PTR [rax],al
  413225:	add    BYTE PTR [rax],al
  413227:	add    ah,bl
  413229:	cmp    al,0x1
  41322b:	add    BYTE PTR [rax],al
  41322d:	add    BYTE PTR [rax],al
  41322f:	add    al,dh
  413231:	cmp    al,0x1
  413233:	add    BYTE PTR [rax],al
  413235:	add    BYTE PTR [rax],al
  413237:	add    BYTE PTR [rax],al
  413239:	cmp    eax,0x1
  41323e:	add    BYTE PTR [rax],al
  413240:	adc    al,0x3d
  413242:	add    DWORD PTR [rax],eax
  413244:	add    BYTE PTR [rax],al
  413246:	add    BYTE PTR [rax],al
  413248:	sub    BYTE PTR [rip+0x1],bh        # 0x41324f
  41324e:	add    BYTE PTR [rax],al
  413250:	cmp    BYTE PTR [rip+0x1],bh        # 0x413257
  413256:	add    BYTE PTR [rax],al
  413258:	rex.WR cmp rax,0x1
  41325e:	add    BYTE PTR [rax],al
  413260:	pop    rsp
  413261:	cmp    eax,0x1
  413266:	add    BYTE PTR [rax],al
  413268:	push   0x13d
  41326d:	add    BYTE PTR [rax],al
  41326f:	add    BYTE PTR [rax+0x3d],bh
  413272:	add    DWORD PTR [rax],eax
  413274:	add    BYTE PTR [rax],al
  413276:	add    BYTE PTR [rax],al
  413278:	mov    WORD PTR [rip+0x1],?        # 0x41327f
  41327e:	add    BYTE PTR [rax],al
  413280:	pushf  
  413281:	cmp    eax,0x1
  413286:	add    BYTE PTR [rax],al
  413288:	lods   al,BYTE PTR ds:[rsi]
  413289:	cmp    eax,0x1
  41328e:	add    BYTE PTR [rax],al
  413290:	mov    esp,0x13d
  413295:	add    BYTE PTR [rax],al
  413297:	add    ah,cl
  413299:	cmp    eax,0x1
  41329e:	add    BYTE PTR [rax],al
  4132a0:	loopne 0x4132df
  4132a2:	add    DWORD PTR [rax],eax
	...
  4132b0:	lock cmp eax,0x1
  4132b6:	add    BYTE PTR [rax],al
  4132b8:	or     BYTE PTR [rsi],bh
  4132ba:	add    DWORD PTR [rax],eax
  4132bc:	add    BYTE PTR [rax],al
  4132be:	add    BYTE PTR [rax],al
  4132c0:	and    BYTE PTR [rsi],bh
  4132c2:	add    DWORD PTR [rax],eax
  4132c4:	add    BYTE PTR [rax],al
  4132c6:	add    BYTE PTR [rax],al
  4132c8:	xor    al,0x3e
  4132ca:	add    DWORD PTR [rax],eax
  4132cc:	add    BYTE PTR [rax],al
  4132ce:	add    BYTE PTR [rax],al
  4132d0:	rex.WX
  4132d1:	add    DWORD PTR ds:[rax],eax
  4132d4:	add    BYTE PTR [rax],al
  4132d6:	add    BYTE PTR [rax],al
  4132d8:	(bad)  
  4132d9:	add    DWORD PTR ds:[rax],eax
  4132dc:	add    BYTE PTR [rax],al
  4132de:	add    BYTE PTR [rax],al
  4132e0:	jo     0x413320
  4132e2:	add    DWORD PTR [rax],eax
  4132e4:	add    BYTE PTR [rax],al
  4132e6:	add    BYTE PTR [rax],al
  4132e8:	(bad)  
  4132e9:	add    DWORD PTR ds:[rax],eax
  4132ec:	add    BYTE PTR [rax],al
  4132ee:	add    BYTE PTR [rax],al
  4132f0:	pushf  
  4132f1:	add    DWORD PTR ds:[rax],eax
  4132f4:	add    BYTE PTR [rax],al
  4132f6:	add    BYTE PTR [rax],al
  4132f8:	lods   al,BYTE PTR ds:[rsi]
  4132f9:	add    DWORD PTR ds:[rax],eax
  4132fc:	add    BYTE PTR [rax],al
  4132fe:	add    BYTE PTR [rax],al
  413300:	enter  0x13e,0x0
  413304:	add    BYTE PTR [rax],al
  413306:	add    BYTE PTR [rax],al
  413308:	loopne 0x413348
  41330a:	add    DWORD PTR [rax],eax
  41330c:	add    BYTE PTR [rax],al
  41330e:	add    BYTE PTR [rax],al
  413310:	cli    
  413311:	add    DWORD PTR ds:[rax],eax
  413314:	add    BYTE PTR [rax],al
  413316:	add    BYTE PTR [rax],al
  413318:	adc    BYTE PTR [rdi],bh
  41331a:	add    DWORD PTR [rax],eax
  41331c:	add    BYTE PTR [rax],al
  41331e:	add    BYTE PTR [rax],al
  413320:	and    al,0x3f
  413322:	add    DWORD PTR [rax],eax
  413324:	add    BYTE PTR [rax],al
  413326:	add    BYTE PTR [rax],al
  413328:	ds (bad) 
  41332a:	add    DWORD PTR [rax],eax
  41332c:	add    BYTE PTR [rax],al
  41332e:	add    BYTE PTR [rax],al
  413330:	push   rdx
  413331:	(bad)  
  413332:	add    DWORD PTR [rax],eax
  413334:	add    BYTE PTR [rax],al
  413336:	add    BYTE PTR [rax],al
  413338:	jo     0x413379
  41333a:	add    DWORD PTR [rax],eax
  41333c:	add    BYTE PTR [rax],al
  41333e:	add    BYTE PTR [rax],al
  413340:	js     0x413381
  413342:	add    DWORD PTR [rax],eax
  413344:	add    BYTE PTR [rax],al
  413346:	add    BYTE PTR [rax],al
  413348:	mov    WORD PTR [rdi],?
  41334a:	add    DWORD PTR [rax],eax
  41334c:	add    BYTE PTR [rax],al
  41334e:	add    BYTE PTR [rax],al
  413350:	(bad)  
  413351:	(bad)  
  413352:	add    DWORD PTR [rax],eax
  413354:	add    BYTE PTR [rax],al
  413356:	add    BYTE PTR [rax],al
  413358:	mov    dh,0x3f
  41335a:	add    DWORD PTR [rax],eax
  41335c:	add    BYTE PTR [rax],al
  41335e:	add    BYTE PTR [rax],al
  413360:	enter  0x13f,0x0
	...
  413370:	fdivr  DWORD PTR [rdi]
  413372:	add    DWORD PTR [rax],eax
  413374:	add    BYTE PTR [rax],al
  413376:	add    BYTE PTR [rax],al
  413378:	lock (bad) 
  41337a:	add    DWORD PTR [rax],eax
  41337c:	add    BYTE PTR [rax],al
  41337e:	add    BYTE PTR [rax],al
  413380:	(bad)  
  413381:	(bad)  
  413382:	add    DWORD PTR [rax],eax
  413384:	add    BYTE PTR [rax],al
  413386:	add    BYTE PTR [rax],al
  413388:	(bad)  
  413389:	rex add DWORD PTR [rax],eax
  41338c:	add    BYTE PTR [rax],al
  41338e:	add    BYTE PTR [rax],al
  413390:	sbb    al,BYTE PTR [rax+0x1]
  413393:	add    BYTE PTR [rax],al
  413395:	add    BYTE PTR [rax],al
  413397:	add    BYTE PTR [rax],ch
  413399:	rex add DWORD PTR [rax],eax
  41339c:	add    BYTE PTR [rax],al
  41339e:	add    BYTE PTR [rax],al
  4133a0:	cmp    BYTE PTR [rax+0x1],al
  4133a3:	add    BYTE PTR [rax],al
  4133a5:	add    BYTE PTR [rax],al
  4133a7:	add    BYTE PTR [rdx+0x40],cl
  4133aa:	add    DWORD PTR [rax],eax
  4133ac:	add    BYTE PTR [rax],al
  4133ae:	add    BYTE PTR [rax],al
  4133b0:	pop    rsi
  4133b1:	rex add DWORD PTR [rax],eax
  4133b4:	add    BYTE PTR [rax],al
  4133b6:	add    BYTE PTR [rax],al
  4133b8:	push   0x140
  4133bd:	add    BYTE PTR [rax],al
  4133bf:	add    BYTE PTR [rsi+0x40],dh
  4133c2:	add    DWORD PTR [rax],eax
  4133c4:	add    BYTE PTR [rax],al
  4133c6:	add    BYTE PTR [rax],al
  4133c8:	add    BYTE PTR [rax+0x1],0x0
  4133cc:	add    BYTE PTR [rax],al
  4133ce:	add    BYTE PTR [rax],al
  4133d0:	mov    al,BYTE PTR [rax+0x1]
  4133d3:	add    BYTE PTR [rax],al
  4133d5:	add    BYTE PTR [rax],al
  4133d7:	add    BYTE PTR [rax+rax*2+0x1],dl
  4133de:	add    BYTE PTR [rax],al
  4133e0:	movabs al,ds:0xa800000000000140
  4133e9:	rex add DWORD PTR [rax],eax
  4133ec:	add    BYTE PTR [rax],al
  4133ee:	add    BYTE PTR [rax],al
  4133f0:	mov    dl,0x40
  4133f2:	add    DWORD PTR [rax],eax
  4133f4:	add    BYTE PTR [rax],al
  4133f6:	add    BYTE PTR [rax],al
  4133f8:	mov    esp,0x140
  4133fd:	add    BYTE PTR [rax],al
  4133ff:	add    ah,al
  413401:	rex add DWORD PTR [rax],eax
  413404:	add    BYTE PTR [rax],al
  413406:	add    BYTE PTR [rax],al
  413408:	(bad)  
  413409:	rex add DWORD PTR [rax],eax
  41340c:	add    BYTE PTR [rax],al
  41340e:	add    BYTE PTR [rax],al
  413410:	(bad)  
  413411:	rex add DWORD PTR [rax],eax
  413414:	add    BYTE PTR [rax],al
  413416:	add    BYTE PTR [rax],al
  413418:	loopne 0x41345a
  41341a:	add    DWORD PTR [rax],eax
  41341c:	add    BYTE PTR [rax],al
  41341e:	add    BYTE PTR [rax],al
  413420:	call   0x413565
  413425:	add    BYTE PTR [rax],al
  413427:	add    dl,dh
  413429:	rex add DWORD PTR [rax],eax
  41342c:	add    BYTE PTR [rax],al
  41342e:	add    BYTE PTR [rax],al
  413430:	add    BYTE PTR [rcx+0x1],al
  413433:	add    BYTE PTR [rax],al
  413435:	add    BYTE PTR [rax],al
  413437:	add    BYTE PTR [rdx],cl
  413439:	add    DWORD PTR [r8],eax
  41343c:	add    BYTE PTR [rax],al
  41343e:	add    BYTE PTR [rax],al
  413440:	adc    al,0x41
  413442:	add    DWORD PTR [rax],eax
  413444:	add    BYTE PTR [rax],al
  413446:	add    BYTE PTR [rax],al
  413448:	(bad)  
  413449:	add    DWORD PTR [r8],eax
  41344c:	add    BYTE PTR [rax],al
  41344e:	add    BYTE PTR [rax],al
  413450:	sub    BYTE PTR [rcx+0x1],al
  413453:	add    BYTE PTR [rax],al
  413455:	add    BYTE PTR [rax],al
  413457:	add    BYTE PTR [rdx],dh
  413459:	add    DWORD PTR [r8],eax
  41345c:	add    BYTE PTR [rax],al
  41345e:	add    BYTE PTR [rax],al
  413460:	cmp    al,0x41
  413462:	add    DWORD PTR [rax],eax
  413464:	add    BYTE PTR [rax],al
  413466:	add    BYTE PTR [rax],al
  413468:	rex.RX
  413469:	add    DWORD PTR [r8],eax
  41346c:	add    BYTE PTR [rax],al
  41346e:	add    BYTE PTR [rax],al
  413470:	push   rax
  413471:	add    DWORD PTR [r8],eax
	...
  413480:	mov    al,0x38
  413482:	add    DWORD PTR [rax],eax
  413484:	add    BYTE PTR [rax],al
  413486:	add    BYTE PTR [rax],al
  413488:	sar    BYTE PTR [rax],0x1
  41348b:	add    BYTE PTR [rax],al
  41348d:	add    BYTE PTR [rax],al
  41348f:	add    al,dl
  413491:	cmp    BYTE PTR [rcx],al
  413493:	add    BYTE PTR [rax],al
  413495:	add    BYTE PTR [rax],al
  413497:	add    al,ah
  413499:	cmp    BYTE PTR [rcx],al
  41349b:	add    BYTE PTR [rax],al
  41349d:	add    BYTE PTR [rax],al
  41349f:	add    ah,dh
  4134a1:	cmp    BYTE PTR [rcx],al
  4134a3:	add    BYTE PTR [rax],al
  4134a5:	add    BYTE PTR [rax],al
  4134a7:	add    BYTE PTR [rcx+rdi*1],al
  4134aa:	add    DWORD PTR [rax],eax
  4134ac:	add    BYTE PTR [rax],al
  4134ae:	add    BYTE PTR [rax],al
  4134b0:	adc    al,0x39
  4134b2:	add    DWORD PTR [rax],eax
  4134b4:	add    BYTE PTR [rax],al
  4134b6:	add    BYTE PTR [rax],al
  4134b8:	sub    BYTE PTR [rcx],bh
  4134ba:	add    DWORD PTR [rax],eax
  4134bc:	add    BYTE PTR [rax],al
  4134be:	add    BYTE PTR [rax],al
  4134c0:	cmp    al,0x39
  4134c2:	add    DWORD PTR [rax],eax
  4134c4:	add    BYTE PTR [rax],al
  4134c6:	add    BYTE PTR [rax],al
  4134c8:	push   rax
  4134c9:	cmp    DWORD PTR [rcx],eax
  4134cb:	add    BYTE PTR [rax],al
  4134cd:	add    BYTE PTR [rax],al
  4134cf:	add    BYTE PTR [rcx+rdi*1+0x1],ah
  4134d3:	add    BYTE PTR [rax],al
  4134d5:	add    BYTE PTR [rax],al
  4134d7:	add    BYTE PTR [rcx+rdi*1+0x1],dh
  4134db:	add    BYTE PTR [rax],al
  4134dd:	add    BYTE PTR [rax],al
  4134df:	add    BYTE PTR [rcx+rdi*1+0x1],al
  4134e6:	add    BYTE PTR [rax],al
  4134e8:	nop
  4134e9:	cmp    DWORD PTR [rcx],eax
  4134eb:	add    BYTE PTR [rax],al
  4134ed:	add    BYTE PTR [rax],al
  4134ef:	add    BYTE PTR [rax+0x139],ah
  4134f5:	add    BYTE PTR [rax],al
  4134f7:	add    BYTE PTR [rax+0x139],dh
  4134fd:	add    BYTE PTR [rax],al
  4134ff:	add    al,al
  413501:	cmp    DWORD PTR [rcx],eax
  413503:	add    BYTE PTR [rax],al
  413505:	add    BYTE PTR [rax],al
  413507:	add    ah,dl
  413509:	cmp    DWORD PTR [rcx],eax
  41350b:	add    BYTE PTR [rax],al
  41350d:	add    BYTE PTR [rax],al
  41350f:	add    al,ch
  413511:	cmp    DWORD PTR [rcx],eax
  413513:	add    BYTE PTR [rax],al
  413515:	add    BYTE PTR [rax],al
  413517:	add    ah,bh
  413519:	cmp    DWORD PTR [rcx],eax
  41351b:	add    BYTE PTR [rax],al
  41351d:	add    BYTE PTR [rax],al
  41351f:	add    BYTE PTR [rax],dl
  413521:	cmp    al,BYTE PTR [rcx]
  413523:	add    BYTE PTR [rax],al
  413525:	add    BYTE PTR [rax],al
  413527:	add    BYTE PTR [rdx+rdi*1],ah
  41352a:	add    DWORD PTR [rax],eax
  41352c:	add    BYTE PTR [rax],al
  41352e:	add    BYTE PTR [rax],al
  413530:	cmp    BYTE PTR [rdx],bh
  413532:	add    DWORD PTR [rax],eax
  413534:	add    BYTE PTR [rax],al
  413536:	add    BYTE PTR [rax],al
  413538:	rex.WR cmp r8b,BYTE PTR [rcx]
  41353b:	add    BYTE PTR [rax],al
  41353d:	add    BYTE PTR [rax],al
  41353f:	add    BYTE PTR [rdx+rdi*1+0x1],bl
  413543:	add    BYTE PTR [rax],al
  413545:	add    BYTE PTR [rax],al
  413547:	add    BYTE PTR [rax+0x3a],dh
  41354a:	add    DWORD PTR [rax],eax
  41354c:	add    BYTE PTR [rax],al
  41354e:	add    BYTE PTR [rax],al
  413550:	cmp    BYTE PTR [rdx],0x1
  413553:	add    BYTE PTR [rax],al
  413555:	add    BYTE PTR [rax],al
  413557:	add    BYTE PTR [rax+0x13a],dl
  41355d:	add    BYTE PTR [rax],al
  41355f:	add    BYTE PTR [rax+0x13a],ah
  413565:	add    BYTE PTR [rax],al
  413567:	add    BYTE PTR [rax+0x13a],dh
  41356d:	add    BYTE PTR [rax],al
  41356f:	add    ah,al
  413571:	cmp    al,BYTE PTR [rcx]
  413573:	add    BYTE PTR [rax],al
  413575:	add    BYTE PTR [rax],al
  413577:	add    al,bl
  413579:	cmp    al,BYTE PTR [rcx]
  41357b:	add    BYTE PTR [rax],al
  41357d:	add    BYTE PTR [rax],al
  41357f:	add    al,ch
  413581:	cmp    al,BYTE PTR [rcx]
  413583:	add    BYTE PTR [rax],al
  413585:	add    BYTE PTR [rax],al
  413587:	add    al,bh
  413589:	cmp    al,BYTE PTR [rcx]
  41358b:	add    BYTE PTR [rax],al
  41358d:	add    BYTE PTR [rax],al
  41358f:	add    BYTE PTR [rbx+rdi*1],cl
  413592:	add    DWORD PTR [rax],eax
  413594:	add    BYTE PTR [rax],al
  413596:	add    BYTE PTR [rax],al
  413598:	sbb    al,0x3b
  41359a:	add    DWORD PTR [rax],eax
  41359c:	add    BYTE PTR [rax],al
  41359e:	add    BYTE PTR [rax],al
  4135a0:	xor    BYTE PTR [rbx],bh
  4135a2:	add    DWORD PTR [rax],eax
  4135a4:	add    BYTE PTR [rax],al
  4135a6:	add    BYTE PTR [rax],al
  4135a8:	cmp    rax,QWORD PTR [rcx]
  4135ab:	add    BYTE PTR [rax],al
  4135ad:	add    BYTE PTR [rax],al
  4135af:	add    BYTE PTR [rax+0x3b],ah
  4135b2:	add    DWORD PTR [rax],eax
  4135b4:	add    BYTE PTR [rax],al
  4135b6:	add    BYTE PTR [rax],al
  4135b8:	je     0x4135f5
  4135ba:	add    DWORD PTR [rax],eax
  4135bc:	add    BYTE PTR [rax],al
  4135be:	add    BYTE PTR [rax],al
  4135c0:	mov    BYTE PTR [rbx],bh
  4135c2:	add    DWORD PTR [rax],eax
  4135c4:	add    BYTE PTR [rax],al
  4135c6:	add    BYTE PTR [rax],al
  4135c8:	pushf  
  4135c9:	cmp    eax,DWORD PTR [rcx]
  4135cb:	add    BYTE PTR [rax],al
  4135cd:	add    BYTE PTR [rax],al
  4135cf:	add    BYTE PTR [rax+0x13b],dh
  4135d5:	add    BYTE PTR [rax],al
  4135d7:	add    ah,al
  4135d9:	cmp    eax,DWORD PTR [rcx]
  4135db:	add    BYTE PTR [rax],al
  4135dd:	add    BYTE PTR [rax],al
  4135df:	add    ah,bl
  4135e1:	cmp    eax,DWORD PTR [rcx]
  4135e3:	add    BYTE PTR [rax],al
  4135e5:	add    BYTE PTR [rax],al
  4135e7:	add    ah,ch
  4135e9:	cmp    eax,DWORD PTR [rcx]
  4135eb:	add    BYTE PTR [rax],al
  4135ed:	add    BYTE PTR [rax],al
  4135ef:	add    ah,bh
  4135f1:	cmp    eax,DWORD PTR [rcx]
  4135f3:	add    BYTE PTR [rax],al
  4135f5:	add    BYTE PTR [rax],al
  4135f7:	add    BYTE PTR [rsp+rdi*1],cl
  4135fa:	add    DWORD PTR [rax],eax
  4135fc:	add    BYTE PTR [rax],al
  4135fe:	add    BYTE PTR [rax],al
  413600:	and    BYTE PTR [rcx+rax*1],bh
  413603:	add    BYTE PTR [rax],al
  413605:	add    BYTE PTR [rax],al
  413607:	add    BYTE PTR [rax],dh
  413609:	cmp    al,0x1
  41360b:	add    BYTE PTR [rax],al
  41360d:	add    BYTE PTR [rax],al
  41360f:	add    BYTE PTR [rax+0x3c],al
  413612:	add    DWORD PTR [rax],eax
  413614:	add    BYTE PTR [rax],al
  413616:	add    BYTE PTR [rax],al
  413618:	push   rsp
  413619:	cmp    al,0x1
  41361b:	add    BYTE PTR [rax],al
  41361d:	add    BYTE PTR [rax],al
  41361f:	add    BYTE PTR [rsp+rdi*1+0x1],ah
  413623:	add    BYTE PTR [rax],al
  413625:	add    BYTE PTR [rax],al
  413627:	add    BYTE PTR [rsp+rdi*1+0x1],dh
  41362b:	add    BYTE PTR [rax],al
  41362d:	add    BYTE PTR [rax],al
  41362f:	add    BYTE PTR [rax+0x13c],cl
  413635:	add    BYTE PTR [rax],al
  413637:	add    BYTE PTR [rsp+rdi*1+0x1],bl
  41363e:	add    BYTE PTR [rax],al
  413640:	lods   al,BYTE PTR ds:[rsi]
  413641:	cmp    al,0x1
  413643:	add    BYTE PTR [rax],al
  413645:	add    BYTE PTR [rax],al
  413647:	add    BYTE PTR [rsp+rdi*1+0x1],bh
  41364e:	add    BYTE PTR [rax],al
  413650:	int3   
  413651:	cmp    al,0x1
  413653:	add    BYTE PTR [rax],al
  413655:	add    BYTE PTR [rax],al
  413657:	add    ah,bl
  413659:	cmp    al,0x1
  41365b:	add    BYTE PTR [rax],al
  41365d:	add    BYTE PTR [rax],al
  41365f:	add    al,dh
  413661:	cmp    al,0x1
  413663:	add    BYTE PTR [rax],al
  413665:	add    BYTE PTR [rax],al
  413667:	add    BYTE PTR [rax],al
  413669:	cmp    eax,0x1
  41366e:	add    BYTE PTR [rax],al
  413670:	adc    al,0x3d
  413672:	add    DWORD PTR [rax],eax
  413674:	add    BYTE PTR [rax],al
  413676:	add    BYTE PTR [rax],al
  413678:	sub    BYTE PTR [rip+0x1],bh        # 0x41367f
  41367e:	add    BYTE PTR [rax],al
  413680:	cmp    BYTE PTR [rip+0x1],bh        # 0x413687
  413686:	add    BYTE PTR [rax],al
  413688:	rex.WR cmp rax,0x1
  41368e:	add    BYTE PTR [rax],al
  413690:	pop    rsp
  413691:	cmp    eax,0x1
  413696:	add    BYTE PTR [rax],al
  413698:	push   0x13d
  41369d:	add    BYTE PTR [rax],al
  41369f:	add    BYTE PTR [rax+0x3d],bh
  4136a2:	add    DWORD PTR [rax],eax
  4136a4:	add    BYTE PTR [rax],al
  4136a6:	add    BYTE PTR [rax],al
  4136a8:	mov    WORD PTR [rip+0x1],?        # 0x4136af
  4136ae:	add    BYTE PTR [rax],al
  4136b0:	pushf  
  4136b1:	cmp    eax,0x1
  4136b6:	add    BYTE PTR [rax],al
  4136b8:	lods   al,BYTE PTR ds:[rsi]
  4136b9:	cmp    eax,0x1
  4136be:	add    BYTE PTR [rax],al
  4136c0:	mov    esp,0x13d
  4136c5:	add    BYTE PTR [rax],al
  4136c7:	add    ah,cl
  4136c9:	cmp    eax,0x1
  4136ce:	add    BYTE PTR [rax],al
  4136d0:	loopne 0x41370f
  4136d2:	add    DWORD PTR [rax],eax
	...
  4136e0:	lock cmp eax,0x1
  4136e6:	add    BYTE PTR [rax],al
  4136e8:	or     BYTE PTR [rsi],bh
  4136ea:	add    DWORD PTR [rax],eax
  4136ec:	add    BYTE PTR [rax],al
  4136ee:	add    BYTE PTR [rax],al
  4136f0:	and    BYTE PTR [rsi],bh
  4136f2:	add    DWORD PTR [rax],eax
  4136f4:	add    BYTE PTR [rax],al
  4136f6:	add    BYTE PTR [rax],al
  4136f8:	xor    al,0x3e
  4136fa:	add    DWORD PTR [rax],eax
  4136fc:	add    BYTE PTR [rax],al
  4136fe:	add    BYTE PTR [rax],al
  413700:	rex.WX
  413701:	add    DWORD PTR ds:[rax],eax
  413704:	add    BYTE PTR [rax],al
  413706:	add    BYTE PTR [rax],al
  413708:	(bad)  
  413709:	add    DWORD PTR ds:[rax],eax
  41370c:	add    BYTE PTR [rax],al
  41370e:	add    BYTE PTR [rax],al
  413710:	jo     0x413750
  413712:	add    DWORD PTR [rax],eax
  413714:	add    BYTE PTR [rax],al
  413716:	add    BYTE PTR [rax],al
  413718:	(bad)  
  413719:	add    DWORD PTR ds:[rax],eax
  41371c:	add    BYTE PTR [rax],al
  41371e:	add    BYTE PTR [rax],al
  413720:	pushf  
  413721:	add    DWORD PTR ds:[rax],eax
  413724:	add    BYTE PTR [rax],al
  413726:	add    BYTE PTR [rax],al
  413728:	lods   al,BYTE PTR ds:[rsi]
  413729:	add    DWORD PTR ds:[rax],eax
  41372c:	add    BYTE PTR [rax],al
  41372e:	add    BYTE PTR [rax],al
  413730:	enter  0x13e,0x0
  413734:	add    BYTE PTR [rax],al
  413736:	add    BYTE PTR [rax],al
  413738:	loopne 0x413778
  41373a:	add    DWORD PTR [rax],eax
  41373c:	add    BYTE PTR [rax],al
  41373e:	add    BYTE PTR [rax],al
  413740:	cli    
  413741:	add    DWORD PTR ds:[rax],eax
  413744:	add    BYTE PTR [rax],al
  413746:	add    BYTE PTR [rax],al
  413748:	adc    BYTE PTR [rdi],bh
  41374a:	add    DWORD PTR [rax],eax
  41374c:	add    BYTE PTR [rax],al
  41374e:	add    BYTE PTR [rax],al
  413750:	and    al,0x3f
  413752:	add    DWORD PTR [rax],eax
  413754:	add    BYTE PTR [rax],al
  413756:	add    BYTE PTR [rax],al
  413758:	ds (bad) 
  41375a:	add    DWORD PTR [rax],eax
  41375c:	add    BYTE PTR [rax],al
  41375e:	add    BYTE PTR [rax],al
  413760:	push   rdx
  413761:	(bad)  
  413762:	add    DWORD PTR [rax],eax
  413764:	add    BYTE PTR [rax],al
  413766:	add    BYTE PTR [rax],al
  413768:	jo     0x4137a9
  41376a:	add    DWORD PTR [rax],eax
  41376c:	add    BYTE PTR [rax],al
  41376e:	add    BYTE PTR [rax],al
  413770:	js     0x4137b1
  413772:	add    DWORD PTR [rax],eax
  413774:	add    BYTE PTR [rax],al
  413776:	add    BYTE PTR [rax],al
  413778:	mov    WORD PTR [rdi],?
  41377a:	add    DWORD PTR [rax],eax
  41377c:	add    BYTE PTR [rax],al
  41377e:	add    BYTE PTR [rax],al
  413780:	(bad)  
  413781:	(bad)  
  413782:	add    DWORD PTR [rax],eax
  413784:	add    BYTE PTR [rax],al
  413786:	add    BYTE PTR [rax],al
  413788:	mov    dh,0x3f
  41378a:	add    DWORD PTR [rax],eax
  41378c:	add    BYTE PTR [rax],al
  41378e:	add    BYTE PTR [rax],al
  413790:	enter  0x13f,0x0
	...
  4137a0:	fdivr  DWORD PTR [rdi]
  4137a2:	add    DWORD PTR [rax],eax
  4137a4:	add    BYTE PTR [rax],al
  4137a6:	add    BYTE PTR [rax],al
  4137a8:	lock (bad) 
  4137aa:	add    DWORD PTR [rax],eax
  4137ac:	add    BYTE PTR [rax],al
  4137ae:	add    BYTE PTR [rax],al
  4137b0:	(bad)  
  4137b1:	(bad)  
  4137b2:	add    DWORD PTR [rax],eax
  4137b4:	add    BYTE PTR [rax],al
  4137b6:	add    BYTE PTR [rax],al
  4137b8:	(bad)  
  4137b9:	rex add DWORD PTR [rax],eax
  4137bc:	add    BYTE PTR [rax],al
  4137be:	add    BYTE PTR [rax],al
  4137c0:	sbb    al,BYTE PTR [rax+0x1]
  4137c3:	add    BYTE PTR [rax],al
  4137c5:	add    BYTE PTR [rax],al
  4137c7:	add    BYTE PTR [rax],ch
  4137c9:	rex add DWORD PTR [rax],eax
  4137cc:	add    BYTE PTR [rax],al
  4137ce:	add    BYTE PTR [rax],al
  4137d0:	cmp    BYTE PTR [rax+0x1],al
  4137d3:	add    BYTE PTR [rax],al
  4137d5:	add    BYTE PTR [rax],al
  4137d7:	add    BYTE PTR [rdx+0x40],cl
  4137da:	add    DWORD PTR [rax],eax
  4137dc:	add    BYTE PTR [rax],al
  4137de:	add    BYTE PTR [rax],al
  4137e0:	pop    rsi
  4137e1:	rex add DWORD PTR [rax],eax
  4137e4:	add    BYTE PTR [rax],al
  4137e6:	add    BYTE PTR [rax],al
  4137e8:	push   0x140
  4137ed:	add    BYTE PTR [rax],al
  4137ef:	add    BYTE PTR [rsi+0x40],dh
  4137f2:	add    DWORD PTR [rax],eax
  4137f4:	add    BYTE PTR [rax],al
  4137f6:	add    BYTE PTR [rax],al
  4137f8:	add    BYTE PTR [rax+0x1],0x0
  4137fc:	add    BYTE PTR [rax],al
  4137fe:	add    BYTE PTR [rax],al
  413800:	mov    al,BYTE PTR [rax+0x1]
  413803:	add    BYTE PTR [rax],al
  413805:	add    BYTE PTR [rax],al
  413807:	add    BYTE PTR [rax+rax*2+0x1],dl
  41380e:	add    BYTE PTR [rax],al
  413810:	movabs al,ds:0xa800000000000140
  413819:	rex add DWORD PTR [rax],eax
  41381c:	add    BYTE PTR [rax],al
  41381e:	add    BYTE PTR [rax],al
  413820:	mov    dl,0x40
  413822:	add    DWORD PTR [rax],eax
  413824:	add    BYTE PTR [rax],al
  413826:	add    BYTE PTR [rax],al
  413828:	mov    esp,0x140
  41382d:	add    BYTE PTR [rax],al
  41382f:	add    ah,al
  413831:	rex add DWORD PTR [rax],eax
  413834:	add    BYTE PTR [rax],al
  413836:	add    BYTE PTR [rax],al
  413838:	(bad)  
  413839:	rex add DWORD PTR [rax],eax
  41383c:	add    BYTE PTR [rax],al
  41383e:	add    BYTE PTR [rax],al
  413840:	(bad)  
  413841:	rex add DWORD PTR [rax],eax
  413844:	add    BYTE PTR [rax],al
  413846:	add    BYTE PTR [rax],al
  413848:	loopne 0x41388a
  41384a:	add    DWORD PTR [rax],eax
  41384c:	add    BYTE PTR [rax],al
  41384e:	add    BYTE PTR [rax],al
  413850:	call   0x413995
  413855:	add    BYTE PTR [rax],al
  413857:	add    dl,dh
  413859:	rex add DWORD PTR [rax],eax
  41385c:	add    BYTE PTR [rax],al
  41385e:	add    BYTE PTR [rax],al
  413860:	add    BYTE PTR [rcx+0x1],al
  413863:	add    BYTE PTR [rax],al
  413865:	add    BYTE PTR [rax],al
  413867:	add    BYTE PTR [rdx],cl
  413869:	add    DWORD PTR [r8],eax
  41386c:	add    BYTE PTR [rax],al
  41386e:	add    BYTE PTR [rax],al
  413870:	adc    al,0x41
  413872:	add    DWORD PTR [rax],eax
  413874:	add    BYTE PTR [rax],al
  413876:	add    BYTE PTR [rax],al
  413878:	(bad)  
  413879:	add    DWORD PTR [r8],eax
  41387c:	add    BYTE PTR [rax],al
  41387e:	add    BYTE PTR [rax],al
  413880:	sub    BYTE PTR [rcx+0x1],al
  413883:	add    BYTE PTR [rax],al
  413885:	add    BYTE PTR [rax],al
  413887:	add    BYTE PTR [rdx],dh
  413889:	add    DWORD PTR [r8],eax
  41388c:	add    BYTE PTR [rax],al
  41388e:	add    BYTE PTR [rax],al
  413890:	cmp    al,0x41
  413892:	add    DWORD PTR [rax],eax
  413894:	add    BYTE PTR [rax],al
  413896:	add    BYTE PTR [rax],al
  413898:	rex.RX
  413899:	add    DWORD PTR [r8],eax
  41389c:	add    BYTE PTR [rax],al
  41389e:	add    BYTE PTR [rax],al
  4138a0:	push   rax
  4138a1:	add    DWORD PTR [r8],eax
	...
  4138b0:	add    al,0x0
  4138b2:	ins    BYTE PTR es:[edi],dx
  4138b4:	jo     0x413915
  4138b6:	(bad)  
  4138b7:	fs jbe 0x413919
  4138ba:	(bad)  
  4138bc:	jae    0x413927
  4138be:	jae    0x4138c0
  4138c0:	or     eax,DWORD PTR [rax]
  4138c2:	ins    BYTE PTR es:[edi],dx
  4138c4:	jo     0x413925
  4138c6:	(bad)  
  4138c7:	jae    0x41393c
  4138c9:	gs jb  0x413940
  4138cc:	pop    rdi
  4138cd:	add    BYTE PTR [rax],al
  4138cf:	add    BYTE PTR [rip+0x706c6700],cl        # 0x70ad9fd5
  4138d5:	pop    rdi
  4138d6:	(bad)  
  4138d7:	pop    di
  4138d9:	gs js  0x413945
  4138dc:	jae    0x413952
  4138de:	jae    0x4138e0
  4138e0:	adc    eax,DWORD PTR [rax]
  4138e2:	ins    BYTE PTR es:[edi],dx
  4138e4:	jo     0x413945
  4138e6:	movsxd ebp,DWORD PTR [rax+0x65]
  4138e9:	movsxd ebp,DWORD PTR [rbx+0x5f]
  4138ec:	movsxd ebp,DWORD PTR [rsi+0x66]
  4138ef:	jae    0x413952
  4138f1:	je     0x4138f3
  4138f3:	add    BYTE PTR [rsi],dl
  4138f5:	add    BYTE PTR [rdi+0x6c],ah
  4138f8:	jo     0x413959
  4138fa:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  4138fe:	gs pop rdi
  413900:	je     0x413967
  413902:	add    BYTE PTR gs:[rdx],bl
  413905:	add    BYTE PTR [rdi+0x6c],ah
  413908:	jo     0x413969
  41390a:	movsxd esi,DWORD PTR [rax+0x78]
  41390d:	pop    rdi
  41390e:	(bad)  
  413910:	jae    0x41397b
  413912:	jae    0x413914
  413914:	sbb    eax,DWORD PTR [rax]
  413916:	ins    BYTE PTR es:[edi],dx
  413918:	jo     0x413979
  41391a:	movsxd esi,DWORD PTR [rdx+0x65]
  41391d:	(bad)  
  41391e:	je     0x413985
  413920:	pop    rdi
  413921:	addr32 jb 0x413985
  413924:	jo     0x41398e
  413926:	add    BYTE PTR [rax],al
  413928:	sbb    eax,0x706c6700
  41392d:	pop    rdi
  41392e:	movsxd esi,DWORD PTR [rdx+0x65]
  413931:	(bad)  
  413932:	je     0x413999
  413934:	pop    rdi
  413935:	jo     0x4139a9
  413937:	outs   dx,DWORD PTR ds:[rsi]
  413938:	(bad)  
  413939:	add    BYTE PTR [rax],al
  41393b:	add    BYTE PTR [rbx],ah
  41393d:	add    BYTE PTR [rdi+0x6c],ah
  413940:	jo     0x4139a1
  413942:	fs gs ins BYTE PTR es:[rdi],dx
  413945:	gs je  0x4139ad
  413948:	pop    rdi
  413949:	addr32 jb 0x4139ad
  41394c:	jo     0x4139b6
  41394e:	add    BYTE PTR [rax],al
  413950:	and    eax,0x706c6700
  413955:	pop    rdi
  413956:	fs gs ins BYTE PTR es:[rdi],dx
  413959:	gs je  0x4139c1
  41395c:	pop    rdi
  41395d:	jo     0x4139d1
  41395f:	outs   dx,DWORD PTR ds:[rsi]
  413960:	(bad)  
  413961:	add    BYTE PTR [rax],al
  413963:	add    BYTE PTR [rdi],ah
  413965:	add    BYTE PTR [rdi+0x6c],ah
  413968:	jo     0x4139c9
  41396a:	imul   esp,DWORD PTR fs:[rsi+0x66],0x656d6974
  413972:	add    BYTE PTR [rax],al
  413974:	sub    eax,DWORD PTR [rax]
  413976:	ins    BYTE PTR es:[edi],dx
  413978:	jo     0x4139d9
  41397a:	gs jb  0x4139ef
  41397d:	outs   dx,DWORD PTR ds:[rsi]
  41397e:	jb     0x4139df
  413980:	add    BYTE PTR [rax],al
  413982:	add    BYTE PTR [rax],al
  413984:	(bad)  
  413985:	add    BYTE PTR [rdi+0x6c],ah
  413988:	jo     0x4139e9
  41398a:	gs js  0x4139ee
  41398d:	movsxd esi,DWORD PTR [rax+rax*1+0x30]
  413991:	add    BYTE PTR [rdi+0x6c],ah
  413994:	jo     0x4139f5
  413996:	data16 (bad) 
  413998:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  41399c:	imul   edi,DWORD PTR [rdx+0x65],0x67003500
  4139a3:	ins    BYTE PTR es:[rdi],dx
  4139a4:	jo     0x413a05
  4139a6:	data16 jb 0x413a0e
  4139a9:	gs pop rdi
  4139ab:	outs   dx,BYTE PTR gs:[rsi]
  4139ad:	jbe    0x4139af
  4139af:	add    BYTE PTR [rdi],dh
  4139b1:	add    BYTE PTR [rdi+0x6c],ah
  4139b4:	jo     0x413a15
  4139b6:	addr32 gs je 0x413a19
  4139ba:	(bad)  
  4139bb:	movsxd si,DWORD PTR [rax+0x0]
  4139bf:	add    BYTE PTR [rsi+0x0],al
  4139c2:	ins    BYTE PTR es:[edi],dx
  4139c4:	jo     0x413a25
  4139c6:	addr32 gs je 0x413a29
  4139ca:	outs   dx,BYTE PTR ds:[rsi]
  4139cb:	jne    0x413a3a
  4139cd:	pop    rdi
  4139ce:	(bad)  
  4139cf:	imul   ebp,DWORD PTR [rsi+0x0],0x470000
  4139d6:	ins    BYTE PTR es:[edi],dx
  4139d8:	jo     0x413a39
  4139da:	addr32 gs je 0x413a3d
  4139de:	outs   dx,BYTE PTR ds:[rsi]
  4139df:	jne    0x413a4e
  4139e1:	pop    rdi
  4139e2:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4139e5:	jae    0x4139e7
  4139e7:	add    BYTE PTR [rax+0x0],cl
  4139ea:	ins    BYTE PTR es:[edi],dx
  4139ec:	jo     0x413a4d
  4139ee:	addr32 gs je 0x413a51
  4139f2:	outs   dx,BYTE PTR ds:[rsi]
  4139f3:	jne    0x413a62
  4139f5:	pop    rdi
  4139f6:	imul   ebp,DWORD PTR [rsi+0x74],0x49000000
  4139fd:	add    BYTE PTR [rdi+0x6c],ah
  413a00:	jo     0x413a61
  413a02:	addr32 gs je 0x413a65
  413a06:	outs   dx,BYTE PTR ds:[rsi]
  413a07:	jne    0x413a76
  413a09:	pop    rdi
  413a0a:	outs   dx,BYTE PTR ds:[rsi]
  413a0b:	jp     0x413a0d
  413a0d:	add    BYTE PTR [rax],al
  413a0f:	add    BYTE PTR [rdx+0x0],cl
  413a12:	ins    BYTE PTR es:[edi],dx
  413a14:	jo     0x413a75
  413a16:	addr32 gs je 0x413a79
  413a1a:	outs   dx,BYTE PTR ds:[rsi]
  413a1b:	jne    0x413a8a
  413a1d:	pop    rdi
  413a1e:	jb     0x413a8f
  413a20:	ja     0x413a95
  413a22:	add    BYTE PTR [rax],al
  413a24:	rex.WXB add BYTE PTR [r15+0x6c],spl
  413a28:	jo     0x413a89
  413a2a:	addr32 gs je 0x413a8d
  413a2e:	outs   dx,DWORD PTR ds:[rsi]
  413a2f:	(bad)  
  413a30:	push   0x5f
  413a32:	movsxd ebp,DWORD PTR [rdi+0x65]
  413a35:	data16 add BYTE PTR [rax],al
  413a38:	pop    rbx
  413a39:	add    BYTE PTR [rdi+0x6c],ah
  413a3c:	jo     0x413a9d
  413a3e:	addr32 gs je 0x413aa1
  413a42:	jae    0x413ab8
  413a44:	(bad)  
  413a45:	je     0x413abc
  413a47:	jae    0x413a49
  413a49:	add    BYTE PTR [rax],al
  413a4b:	add    BYTE PTR [rdx+0x0],ah
  413a4e:	ins    BYTE PTR es:[edi],dx
  413a50:	jo     0x413ab1
  413a52:	imul   ebp,DWORD PTR [rsi+0x69],0x6f695f74
  413a59:	movsxd esi,DWORD PTR [rax+0x0]
  413a5c:	movsxd eax,DWORD PTR [rax]
  413a5e:	ins    BYTE PTR es:[edi],dx
  413a60:	jo     0x413ac1
  413a62:	imul   ebp,DWORD PTR [rsi+0x69],0x70695f74
  413a69:	je     0x413ace
  413a6b:	jo     0x413a6d
  413a6d:	add    BYTE PTR [rax],al
  413a6f:	add    BYTE PTR [rbp+0x0],ah
  413a72:	ins    BYTE PTR es:[edi],dx
  413a74:	jo     0x413ad5
  413a76:	imul   ebp,DWORD PTR [rsi+0x69],0x6d735f74
  413a7d:	movsxd esi,DWORD PTR [rax+0x0]
  413a80:	data16 add BYTE PTR [rdi+0x6c],ah
  413a84:	jo     0x413ae5
  413a86:	imul   ebp,DWORD PTR [rsi+0x74],0x6f697265
  413a8d:	jb     0x413a8f
  413a8f:	add    BYTE PTR [rdi+0x0],ah
  413a92:	ins    BYTE PTR es:[edi],dx
  413a94:	jo     0x413af5
  413a96:	imul   ebp,DWORD PTR [rsi+0x74],0x73616566
  413a9d:	xor    DWORD PTR [rax],eax
  413a9f:	add    BYTE PTR [rax+0x0],ch
  413aa2:	ins    BYTE PTR es:[edi],dx
  413aa4:	jo     0x413b05
  413aa6:	imul   ebp,DWORD PTR [rsi+0x74],0x74706f
  413aad:	add    BYTE PTR [rax],al
  413aaf:	add    BYTE PTR [rax+rax*1+0x5f706c67],al
  413ab6:	imul   esi,DWORD PTR [rax+0x74],0x6174735f
  413abd:	je     0x413b34
  413abf:	jae    0x413ac1
  413ac1:	add    BYTE PTR [rax],al
  413ac3:	add    BYTE PTR [rdi+0x706c6700],al
  413ac9:	pop    rdi
  413aca:	ins    DWORD PTR es:[rdi],dx
  413acb:	(bad)  
  413acc:	js     0x413b34
  413ace:	ins    BYTE PTR es:[rdi],dx
  413acf:	outs   dx,DWORD PTR ds:[rsi]
  413ad0:	ja     0x413b31
  413ad2:	ins    BYTE PTR es:[rdi],dx
  413ad3:	jo     0x413ad5
  413ad5:	add    BYTE PTR [rax],al
  413ad7:	add    BYTE PTR [rax+0x706c6700],cl
  413add:	pop    rdi
  413ade:	ins    DWORD PTR es:[rdi],dx
  413adf:	gs ins DWORD PTR es:[rdi],dx
  413ae1:	pop    rdi
  413ae2:	ins    BYTE PTR es:[rdi],dx
  413ae3:	imul   ebp,DWORD PTR [rbp+0x69],0x890074
  413aea:	ins    BYTE PTR es:[edi],dx
  413aec:	jo     0x413b4d
  413aee:	ins    DWORD PTR es:[rdi],dx
  413aef:	gs ins DWORD PTR es:[rdi],dx
  413af1:	pop    rdi
  413af2:	jne    0x413b67
  413af4:	(bad)  
  413af5:	add    BYTE PTR gs:[edx+0x706c6700],cl
  413afd:	pop    rdi
  413afe:	ins    DWORD PTR es:[rdi],dx
  413aff:	imul   ebp,DWORD PTR [rsi+0x63],0x5f74736f
  413b06:	ins    BYTE PTR es:[rdi],dx
  413b07:	jo     0x413b09
  413b09:	add    BYTE PTR [rax],al
  413b0b:	add    BYTE PTR [rbp+0x706c6700],cl
  413b11:	pop    rdi
  413b12:	ins    DWORD PTR es:[rdi],dx
  413b13:	imul   ebp,DWORD PTR [rsi+0x69],0x31746173
  413b1a:	add    BYTE PTR [rax],al
  413b1c:	xchg   ecx,eax
  413b1d:	add    BYTE PTR [rdi+0x6c],ah
  413b20:	jo     0x413b81
  413b22:	ins    DWORD PTR es:[rdi],dx
  413b23:	imul   esi,DWORD PTR [rax+0x5f],0x74617473
  413b2a:	jne    0x413b9f
  413b2c:	add    BYTE PTR [rax],al
  413b2e:	add    BYTE PTR [rax],al
  413b30:	xchg   ebp,eax
  413b31:	add    BYTE PTR [rdi+0x6c],ah
  413b34:	jo     0x413b95
  413b36:	ins    DWORD PTR es:[rdi],dx
  413b37:	jo     0x413ba5
  413b39:	pop    rdi
  413b3a:	(bad)  
  413b3b:	ins    BYTE PTR es:[rdi],dx
  413b3c:	ins    BYTE PTR es:[rdi],dx
  413b3d:	outs   dx,DWORD PTR ds:[rsi]
  413b3e:	movsxd ebx,DWORD PTR [rdi+0x77]
  413b41:	imul   esi,DWORD PTR [rbx+0x70],0x0
  413b45:	add    BYTE PTR [rax],al
  413b47:	add    BYTE PTR [rsi+0x706c6700],dl
  413b4d:	pop    rdi
  413b4e:	ins    DWORD PTR es:[rdi],dx
  413b4f:	jo     0x413bbd
  413b51:	pop    rdi
  413b52:	(bad)  
  413b53:	jne    0x413bbe
  413b55:	ins    BYTE PTR es:[rdi],dx
  413b56:	fs pop rdi
  413b58:	jo     0x413bcc
  413b5a:	outs   dx,DWORD PTR ds:[rsi]
  413b5b:	(bad)  
  413b5c:	add    BYTE PTR [rax],al
  413b5e:	add    BYTE PTR [rax],al
  413b60:	xchg   edi,eax
  413b61:	add    BYTE PTR [rdi+0x6c],ah
  413b64:	jo     0x413bc5
  413b66:	ins    DWORD PTR es:[rdi],dx
  413b67:	jo     0x413bd5
  413b69:	pop    rdi
  413b6a:	data16 jb 0x413bd2
  413b6d:	gs pop rdi
  413b6f:	ja     0x413bdc
  413b71:	jae    0x413be3
  413b73:	add    BYTE PTR [rax+0x706c6700],bl
  413b79:	pop    rdi
  413b7a:	ins    DWORD PTR es:[rdi],dx
  413b7b:	jo     0x413be9
  413b7d:	pop    rdi
  413b7e:	outs   dx,BYTE PTR gs:[esi]
  413b81:	gs jb  0x413be5
  413b84:	je     0x413beb
  413b86:	add    BYTE PTR [rax],al
  413b88:	cdq    
  413b89:	add    BYTE PTR [rdi+0x6c],ah
  413b8c:	jo     0x413bed
  413b8e:	ins    DWORD PTR es:[rdi],dx
  413b8f:	jo     0x413bfd
  413b91:	pop    rdi
  413b92:	imul   ebp,DWORD PTR [rsi+0x69],0x61725f74
  413b99:	outs   dx,BYTE PTR ds:[rsi]
  413b9a:	add    BYTE PTR fs:[rdx+0x706c6700],bl
  413ba1:	pop    rdi
  413ba2:	ins    DWORD PTR es:[rdi],dx
  413ba3:	jo     0x413c11
  413ba5:	pop    rdi
  413ba6:	jo     0x413c17
  413ba8:	jae    0x413c1e
  413baa:	jae    0x413c1b
  413bac:	ins    BYTE PTR es:[rdi],dx
  413bad:	jbe    0x413c14
  413baf:	add    BYTE PTR [rbx+0x706c6700],bl
  413bb5:	pop    rdi
  413bb6:	ins    DWORD PTR es:[rdi],dx
  413bb7:	jo     0x413c25
  413bb9:	pop    rdi
  413bba:	jb     0x413c21
  413bbc:	(bad)  
  413bbd:	fs pop rdi
  413bbf:	fs (bad) 
  413bc1:	je     0x413c24
  413bc3:	add    BYTE PTR [rax+rax*1+0x5f706c67],bl
  413bca:	ins    DWORD PTR es:[rdi],dx
  413bcb:	jo     0x413c39
  413bcd:	pop    rdi
  413bce:	jb     0x413c35
  413bd0:	(bad)  
  413bd1:	fs pop rdi
  413bd3:	ins    DWORD PTR es:[rdi],dx
  413bd4:	outs   dx,DWORD PTR ds:[rsi]
  413bd5:	fs gs ins BYTE PTR es:[rdi],dx
  413bd8:	add    BYTE PTR [rax],al
  413bda:	add    BYTE PTR [rax],al
  413bdc:	lahf   
  413bdd:	add    BYTE PTR [rdi+0x6c],ah
  413be0:	jo     0x413c41
  413be2:	outs   dx,DWORD PTR ds:[rsi]
  413be3:	jo     0x413c4a
  413be5:	outs   dx,BYTE PTR ds:[rsi]
  413be6:	pop    rdi
  413be7:	je     0x413c4e
  413be9:	add    BYTE PTR gs:[rax],al
  413bec:	movabs eax,ds:0x6972705f706c6700
  413bf5:	outs   dx,BYTE PTR ds:[rsi]
  413bf6:	je     0x413c57
  413bf8:	imul   esi,DWORD PTR [rax+0x74],0x6700a200
  413bff:	ins    BYTE PTR es:[rdi],dx
  413c00:	jo     0x413c61
  413c02:	jo     0x413c76
  413c04:	imul   ebp,DWORD PTR [rsi+0x74],0x70696d5f
  413c0b:	add    BYTE PTR [rbx+0x706c6700],ah
  413c11:	pop    rdi
  413c12:	jo     0x413c86
  413c14:	imul   ebp,DWORD PTR [rsi+0x74],0x6e61725f
  413c1b:	addr32 gs jae 0x413c1f
  413c1f:	add    BYTE PTR [rax+rax*1+0x5f706c67],ah
  413c26:	jo     0x413c9a
  413c28:	imul   ebp,DWORD PTR [rsi+0x74],0x6c6f735f
  413c2f:	add    BYTE PTR [rbp+0x706c6700],ah
  413c35:	pop    rdi
  413c36:	jo     0x413caa
  413c38:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  413c3f:	add    BYTE PTR [rcx+0x706c6700],ch
  413c45:	pop    rdi
  413c46:	jb     0x413cad
  413c48:	(bad)  
  413c49:	fs pop rdi
  413c4b:	movsxd ebp,DWORD PTR [rsi+0x66]
  413c4e:	jae    0x413cb1
  413c50:	je     0x413c52
  413c52:	add    BYTE PTR [rax],al
  413c54:	stos   DWORD PTR es:[rdi],eax
  413c55:	add    BYTE PTR [rdi+0x6c],ah
  413c58:	jo     0x413cb9
  413c5a:	jb     0x413cc1
  413c5c:	(bad)  
  413c5d:	fs pop rdi
  413c5f:	imul   esi,DWORD PTR [rax+0x74],0xac0000
  413c66:	ins    BYTE PTR es:[edi],dx
  413c68:	jo     0x413cc9
  413c6a:	jb     0x413cd1
  413c6c:	(bad)  
  413c6d:	fs pop rdi
  413c6f:	ins    BYTE PTR es:[rdi],dx
  413c70:	jo     0x413c72
  413c72:	add    BYTE PTR [rax],al
  413c74:	lods   eax,DWORD PTR ds:[rsi]
  413c75:	add    BYTE PTR [rdi+0x6c],ah
  413c78:	jo     0x413cd9
  413c7a:	jb     0x413ce1
  413c7c:	(bad)  
  413c7d:	fs pop rdi
  413c7f:	ins    DWORD PTR es:[rdi],dx
  413c80:	(bad)  
  413c81:	js     0x413ce9
  413c83:	ins    BYTE PTR es:[rdi],dx
  413c84:	outs   dx,DWORD PTR ds:[rsi]
  413c85:	ja     0x413c87
  413c87:	add    BYTE PTR [rsi+0x706c6700],ch
  413c8d:	pop    rdi
  413c8e:	jb     0x413cf5
  413c90:	(bad)  
  413c91:	fs pop rdi
  413c93:	ins    DWORD PTR es:[rdi],dx
  413c94:	imul   ebp,DWORD PTR [rsi+0x63],0x74736f
  413c9b:	add    BYTE PTR [rdi+0x706c6700],ch
  413ca1:	pop    rdi
  413ca2:	jb     0x413d09
  413ca4:	(bad)  
  413ca5:	fs pop rdi
  413ca7:	ins    DWORD PTR es:[rdi],dx
  413ca8:	imul   esi,DWORD PTR [rax+0x0],0x6700b000
  413caf:	ins    BYTE PTR es:[rdi],dx
  413cb0:	jo     0x413d11
  413cb2:	jb     0x413d19
  413cb4:	(bad)  
  413cb5:	fs pop rdi
  413cb7:	ins    DWORD PTR es:[rdi],dx
  413cb8:	jo     0x413d2d
  413cba:	add    BYTE PTR [rax],al
  413cbc:	mov    cl,0x0
  413cbe:	ins    BYTE PTR es:[edi],dx
  413cc0:	jo     0x413d21
  413cc2:	jb     0x413d29
  413cc4:	(bad)  
  413cc5:	fs pop rdi
  413cc7:	jo     0x413d3b
  413cc9:	outs   dx,DWORD PTR ds:[rsi]
  413cca:	(bad)  
  413ccb:	add    BYTE PTR [rdx+0x706c6700],dh
  413cd1:	pop    rdi
  413cd2:	jb     0x413d39
  413cd4:	(bad)  
  413cd5:	fs pop rdi
  413cd7:	jae    0x413d48
  413cd9:	ins    BYTE PTR es:[rdi],dx
  413cda:	add    BYTE PTR [rax],al
  413cdc:	mov    ch,0x0
  413cde:	ins    BYTE PTR es:[edi],dx
  413ce0:	jo     0x413d41
  413ce2:	jae    0x413d47
  413ce4:	(bad)  
  413ce5:	ins    BYTE PTR es:[rdi],dx
  413ce6:	gs pop rdi
  413ce8:	jo     0x413d5c
  413cea:	outs   dx,DWORD PTR ds:[rsi]
  413ceb:	(bad)  
  413cec:	add    BYTE PTR [rax],al
  413cee:	add    BYTE PTR [rax],al
  413cf0:	mov    dh,0x0
  413cf2:	ins    BYTE PTR es:[edi],dx
  413cf4:	jo     0x413d55
  413cf6:	jae    0x413d5d
  413cf8:	je     0x413d59
  413cfa:	(bad)  
  413cfb:	movsxd si,DWORD PTR [rax+0x0]
  413cff:	add    al,al
  413d01:	add    BYTE PTR [rdi+0x6c],ah
  413d04:	jo     0x413d65
  413d06:	jae    0x413d6d
  413d08:	je     0x413d69
  413d0a:	outs   dx,DWORD PTR ds:[rsi]
  413d0b:	(bad)  
  413d0c:	push   0x5f
  413d0e:	imul   esi,DWORD PTR fs:[rdx+0x0],0xc20000
  413d16:	ins    BYTE PTR es:[edi],dx
  413d18:	jo     0x413d79
  413d1a:	jae    0x413d81
  413d1c:	je     0x413d7d
  413d1e:	jo     0x413d92
  413d20:	outs   dx,DWORD PTR ds:[rsi]
  413d21:	(bad)  
  413d22:	pop    rdi
  413d23:	outs   dx,BYTE PTR ds:[rsi]
  413d24:	(bad)  
  413d25:	ins    DWORD PTR es:[rdi],dx
  413d26:	gs add cl,cl
  413d29:	add    BYTE PTR [rdi+0x6c],ah
  413d2c:	jo     0x413d8d
  413d2e:	jae    0x413d99
  413d30:	ins    DWORD PTR es:[rdi],dx
  413d31:	jo     0x413d9f
  413d33:	gs js  0x413d36
  413d36:	add    BYTE PTR [rax],al
  413d38:	retf   0x6700
  413d3b:	ins    BYTE PTR es:[rdi],dx
  413d3c:	jo     0x413d9d
  413d3e:	jae    0x413daf
  413d40:	jb     0x413db6
  413d42:	pop    rdi
  413d43:	ins    DWORD PTR es:[rdi],dx
  413d44:	(bad)  
  413d45:	je     0x413db9
  413d47:	imul   edi,DWORD PTR [rax+0x0],0xcb0000
  413d4e:	ins    BYTE PTR es:[edi],dx
  413d50:	jo     0x413db1
  413d52:	jae    0x413dc8
  413d54:	fs pop rdi
  413d56:	(bad)  
  413d58:	jae    0x413dc3
  413d5a:	jae    0x413d5c
  413d5c:	iret   
  413d5d:	add    BYTE PTR [rdi+0x6c],ah
  413d60:	jo     0x413dc1
  413d62:	je     0x413dcd
  413d64:	ins    DWORD PTR es:[rdi],dx
  413d65:	add    BYTE PTR gs:[rax],al
  413d68:	(bad)  
  413d69:	add    BYTE PTR [rdi+0x6c],ah
  413d6c:	jo     0x413dcd
  413d6e:	jbe    0x413dd5
  413d70:	jb     0x413de5
  413d72:	imul   ebp,DWORD PTR [rdi+0x6e],0xdb000000
  413d79:	add    BYTE PTR [rdi+0x6c],ah
  413d7c:	jo     0x413ddd
  413d7e:	ja     0x413df2
  413d80:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x73666e63
  413d88:	(bad)  
  413d89:	je     0x413d8b
  413d8b:	add    ch,bl
  413d8d:	add    BYTE PTR [rdi+0x6c],ah
  413d90:	jo     0x413df1
  413d92:	ja     0x413e06
  413d94:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x747069
  413d9c:	fiadd  WORD PTR [rax]
  413d9e:	ins    BYTE PTR es:[edi],dx
  413da0:	jo     0x413e01
  413da2:	ja     0x413e16
  413da4:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x706c
  413dac:	loope  0x413dae
  413dae:	ins    BYTE PTR es:[edi],dx
  413db0:	jo     0x413e11
  413db2:	ja     0x413e26
  413db4:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x70696d
  413dbc:	loop   0x413dbe
  413dbe:	ins    BYTE PTR es:[edi],dx
  413dc0:	jo     0x413e21
  413dc2:	ja     0x413e36
  413dc4:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x73706d
  413dcc:	jrcxz  0x413dce
  413dce:	ins    BYTE PTR es:[edi],dx
  413dd0:	jo     0x413e31
  413dd2:	ja     0x413e46
  413dd4:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x626f7270
  413ddc:	add    BYTE PTR [rax],al
  413dde:	add    BYTE PTR [rax],al
  413de0:	in     al,0x0
  413de2:	ins    BYTE PTR es:[edi],dx
  413de4:	jo     0x413e45
  413de6:	ja     0x413e5a
  413de8:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x6c6f73
  413df0:	fadd   DWORD PTR [rax]
  413df2:	rex.R
  413df3:	gs ins BYTE PTR es:[rdi],dx
  413df5:	gs je  0x413e5d
  413df8:	rex.XB jb 0x413e64
  413dfb:	je     0x413e66
  413dfd:	movsxd esp,DWORD PTR [rcx+0x6c]
  413e00:	push   rbx
  413e01:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  413e06:	outs   dx,BYTE PTR ds:[rsi]
  413e07:	add    al,bh
  413e09:	add    BYTE PTR [rbp+0x6e],al
  413e0c:	je     0x413e73
  413e0e:	jb     0x413e53
  413e10:	jb     0x413e7b
  413e12:	je     0x413e7d
  413e14:	movsxd esp,DWORD PTR [rcx+0x6c]
  413e17:	push   rbx
  413e18:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  413e1d:	outs   dx,BYTE PTR ds:[rsi]
  413e1e:	add    BYTE PTR [rax],al
  413e20:	int    0x1
  413e22:	rex.RXB
  413e23:	gs je  0x413e69
  413e26:	jne    0x413e9a
  413e28:	jb     0x413e8f
  413e2a:	outs   dx,BYTE PTR ds:[rsi]
  413e2b:	je     0x413e7d
  413e2d:	jb     0x413e9e
  413e2f:	movsxd esp,DWORD PTR [rbp+0x73]
  413e32:	jae    0x413e34
  413e34:	(bad)  
  413e35:	add    DWORD PTR [rdi+0x65],eax
  413e38:	je     0x413e7d
  413e3a:	jne    0x413eae
  413e3c:	jb     0x413ea3
  413e3e:	outs   dx,BYTE PTR ds:[rsi]
  413e3f:	je     0x413e91
  413e41:	jb     0x413eb2
  413e43:	movsxd esp,DWORD PTR [rbp+0x73]
  413e46:	jae    0x413e91
  413e48:	fs add dl,dl
  413e4b:	add    DWORD PTR [rdi+0x65],eax
  413e4e:	je     0x413e93
  413e50:	jne    0x413ec4
  413e52:	jb     0x413eb9
  413e54:	outs   dx,BYTE PTR ds:[rsi]
  413e55:	je     0x413eab
  413e57:	push   0x64616572
  413e5c:	rex.WB
  413e5d:	add    BYTE PTR fs:[rax],al
  413e60:	adc    BYTE PTR [rdx],al
  413e62:	rex.RXB
  413e63:	gs je  0x413eb2
  413e66:	(bad)  
  413e67:	jae    0x413edd
  413e69:	rex.RB jb 0x413ede
  413e6c:	outs   dx,DWORD PTR ds:[rsi]
  413e6d:	jb     0x413e6f
  413e6f:	add    BYTE PTR [rbx+0x2],dh
  413e72:	rex.RXB
  413e73:	gs je  0x413ec9
  413e76:	je     0x413ed9
  413e78:	jb     0x413eee
  413e7a:	jne    0x413eec
  413e7c:	rex.WB outs dx,BYTE PTR ds:[rsi]
  413e7e:	outs   dx,WORD PTR ds:[rsi]
  413e80:	add    BYTE PTR [r10+0x74654702],cl
  413e87:	push   rbx
  413e88:	jns    0x413efd
  413e8a:	je     0x413ef1
  413e8c:	ins    DWORD PTR es:[rdi],dx
  413e8d:	push   rsp
  413e8e:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  413e95:	ins    BYTE PTR es:[rdi],dx
  413e96:	gs push rsp
  413e98:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  413e9f:	gs je  0x413ef6
  413ea2:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  413ea9:	je     0x413eab
  413eab:	add    cl,bh
  413ead:	add    cl,BYTE PTR [rcx+0x6e]
  413eb0:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  413eb8:	rex.XB jb 0x413f24
  413ebb:	je     0x413f26
  413ebd:	movsxd esp,DWORD PTR [rcx+0x6c]
  413ec0:	push   rbx
  413ec1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  413ec6:	outs   dx,BYTE PTR ds:[rsi]
  413ec7:	add    BYTE PTR [rbx+0x3],cl
  413eca:	rex.WR
  413ecb:	gs (bad) 
  413ecd:	jbe    0x413f34
  413ecf:	rex.XB jb 0x413f3b
  413ed2:	je     0x413f3d
  413ed4:	movsxd esp,DWORD PTR [rcx+0x6c]
  413ed7:	push   rbx
  413ed8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  413edd:	outs   dx,BYTE PTR ds:[rsi]
  413ede:	add    BYTE PTR [rax],al
  413ee0:	mov    ebx,0x65755103
  413ee5:	jb     0x413f60
  413ee7:	push   rax
  413ee8:	gs jb  0x413f51
  413eeb:	outs   dx,DWORD PTR ds:[rsi]
  413eec:	jb     0x413f5b
  413eee:	(bad)  
  413eef:	outs   dx,BYTE PTR ds:[rsi]
  413ef0:	movsxd esp,DWORD PTR [rbp+0x43]
  413ef3:	outs   dx,DWORD PTR ds:[rsi]
  413ef4:	jne    0x413f64
  413ef6:	je     0x413f5d
  413ef8:	jb     0x413efa
  413efa:	add    DWORD PTR [rdx+rdx*2],eax
  413efd:	je     0x413f6b
  413eff:	rex.B
  413f00:	fs fs rex.RX jne 0x413f73
  413f05:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  413f09:	outs   dx,BYTE PTR ds:[rsi]
  413f0a:	push   rsp
  413f0b:	(bad)  
  413f0c:	(bad)  
  413f0d:	ins    BYTE PTR es:[rdi],dx
  413f0e:	add    BYTE PTR gs:[rdx],al
  413f11:	add    al,0x52
  413f13:	je     0x413f81
  413f15:	rex.XB (bad) 
  413f17:	jo     0x413f8d
  413f19:	jne    0x413f8d
  413f1b:	rex.XB outs dx,DWORD PTR gs:[rsi]
  413f1e:	outs   dx,BYTE PTR ds:[rsi]
  413f1f:	je     0x413f86
  413f21:	js     0x413f97
  413f23:	add    BYTE PTR [rcx],cl
  413f25:	add    al,0x52
  413f27:	je     0x413f95
  413f29:	rex.WR outs dx,DWORD PTR ds:[rsi]
  413f2b:	outs   dx,DWORD PTR ds:[rsi]
  413f2c:	imul   esi,DWORD PTR [rbp+0x70],0x46
  413f30:	jne    0x413fa0
  413f32:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  413f36:	outs   dx,BYTE PTR ds:[rsi]
  413f37:	rex.RB outs dx,BYTE PTR ds:[rsi]
  413f39:	je     0x413fad
  413f3b:	jns    0x413f3d
  413f3d:	add    BYTE PTR [rax],dl
  413f3f:	add    al,0x52
  413f41:	je     0x413faf
  413f43:	push   rsi
  413f44:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  413f4b:	outs   dx,BYTE PTR ds:[rsi]
  413f4c:	ja     0x413fb7
  413f4e:	outs   dx,BYTE PTR ds:[rsi]
  413f4f:	add    BYTE PTR fs:[rax],al
  413f52:	lahf   
  413f53:	add    al,0x53
  413f55:	gs je  0x413fad
  413f58:	outs   dx,BYTE PTR ds:[rsi]
  413f59:	push   0x6c646e61
  413f5e:	gs fs rex.RB js 0x413fc6
  413f63:	gs jo  0x413fda
  413f66:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  413f6d:	gs jb  0x413f70
  413f70:	lods   al,BYTE PTR ds:[rsi]
  413f71:	add    al,0x53
  413f73:	ins    BYTE PTR es:[rdi],dx
  413f74:	gs gs jo 0x413f78
  413f78:	mov    edx,0x72655404
  413f7d:	ins    DWORD PTR es:[rdi],dx
  413f7e:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  413f85:	outs   dx,DWORD PTR ds:[rsi]
  413f86:	movsxd esp,DWORD PTR [rbp+0x73]
  413f89:	jae    0x413f8b
  413f8b:	add    cl,al
  413f8d:	add    al,0x54
  413f8f:	ins    BYTE PTR es:[rdi],dx
  413f90:	jae    0x413fd9
  413f92:	gs je  0x413feb
  413f95:	(bad)  
  413f96:	ins    BYTE PTR es:[rdi],dx
  413f97:	jne    0x413ffe
  413f99:	add    dh,cl
  413f9b:	add    al,0x55
  413f9d:	outs   dx,BYTE PTR ds:[rsi]
  413f9e:	push   0x6c646e61
  413fa3:	gs fs rex.RB js 0x41400b
  413fa8:	gs jo  0x41401f
  413fab:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  413fb2:	gs jb  0x413fb5
  413fb5:	add    ah,ch
  413fb7:	add    al,0x56
  413fb9:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  413fc0:	jb     0x414031
  413fc2:	je     0x414029
  413fc4:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  413fc8:	out    dx,al
  413fc9:	add    al,0x56
  413fcb:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  413fd2:	jne    0x414039
  413fd4:	jb     0x41404f
  413fd6:	add    BYTE PTR [rax],al
  413fd8:	(bad)  
  413fd9:	add    BYTE PTR [rdi+0x5f],bl
  413fdc:	rex.XB pop r15
  413fde:	jae    0x414050
  413fe0:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  413fe4:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  413feb:	ins    BYTE PTR es:[rdi],dx
  413fec:	gs jb  0x413fef
  413fef:	add    BYTE PTR [rsi+0x0],cl
  413ff2:	pop    rdi
  413ff3:	pop    rdi
  413ff4:	fs ins BYTE PTR es:[rdi],dx
  413ff6:	ins    BYTE PTR es:[rdi],dx
  413ff7:	outs   dx,DWORD PTR ds:[rsi]
  413ff8:	outs   dx,BYTE PTR ds:[rsi]
  413ff9:	gs js  0x414065
  413ffc:	je     0x413ffe
  413ffe:	push   rcx
  413fff:	add    BYTE PTR [rdi+0x5f],bl
  414002:	addr32 gs je 0x414073
  414006:	(bad)  
  414007:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  41400e:	push   rdx
  41400f:	add    BYTE PTR [rdi+0x5f],bl
  414012:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  414019:	add    BYTE PTR [rbx+0x0],dl
  41401c:	pop    rdi
  41401d:	pop    rdi
  41401e:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  414025:	movsxd eax,DWORD PTR [rax]
  414027:	add    BYTE PTR [rdx+0x0],bl
  41402a:	pop    rdi
  41402b:	pop    rdi
  41402c:	ins    BYTE PTR es:[rdi],dx
  41402d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  414030:	jbe    0x414091
  414032:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  414039:	add    BYTE PTR [rdi+0x5f],bl
  41403c:	jae    0x4140a3
  41403e:	je     0x41409f
  414040:	(bad)  
  414041:	jo     0x4140b3
  414043:	pop    rdi
  414044:	je     0x4140bf
  414046:	jo     0x4140ad
  414048:	add    BYTE PTR [rax],al
  41404a:	(bad)  
  41404b:	add    BYTE PTR [rdi+0x5f],bl
  41404e:	jae    0x4140b5
  414050:	je     0x4140c7
  414052:	jae    0x4140b9
  414054:	jb     0x4140c3
  414056:	(bad)  
  414057:	je     0x4140c1
  414059:	gs jb  0x4140ce
  41405c:	add    BYTE PTR [rax],al
  41405e:	jno    0x414060
  414060:	pop    rdi
  414061:	(bad)  
  414062:	movsxd ebp,DWORD PTR [rbp+0x64]
  414065:	ins    BYTE PTR es:[rdi],dx
  414066:	outs   dx,BYTE PTR ds:[rsi]
  414067:	add    BYTE PTR [rax+0x0],bh
  41406a:	pop    rdi
  41406b:	(bad)  
  41406c:	ins    DWORD PTR es:[rdi],dx
  41406d:	jae    0x4140d6
  41406f:	pop    rdi
  414070:	gs js  0x4140dc
  414073:	je     0x414075
  414075:	add    BYTE PTR [rdx+0x65635f00],cl
  41407b:	js     0x4140e6
  41407d:	je     0x41407f
  41407f:	add    BYTE PTR [rdx+0x72655f00],bh
  414085:	jb     0x4140f5
  414087:	outs   dx,DWORD PTR ds:[rsi]
  414088:	add    BYTE PTR [rax],al
  41408a:	fiadd  DWORD PTR [rax]
  41408c:	pop    rdi
  41408d:	ins    WORD PTR es:[rdi],dx
  41408f:	outs   dx,DWORD PTR ds:[rsi]
  414090:	fs add BYTE PTR gs:[rax],al
  414094:	sbb    al,BYTE PTR [rcx]
  414096:	pop    rdi
  414097:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  41409e:	ins    DWORD PTR es:[rdi],dx
  41409f:	add    BYTE PTR [rax+0x6f6c5f01],al
  4140a5:	movsxd ebp,DWORD PTR [rbx+0x0]
  4140a8:	and    eax,0x6e6f5f02
  4140ad:	gs js  0x414119
  4140b0:	je     0x4140b2
  4140b2:	(bad)
  4140b6:	outs   dx,BYTE PTR ds:[rsi]
  4140b7:	ins    BYTE PTR es:[rdi],dx
  4140b8:	outs   dx,DWORD PTR ds:[rsi]
  4140b9:	movsxd ebp,DWORD PTR [rbx+0x0]
  4140bc:	jg     0x4140c1
  4140be:	(bad)  
  4140bf:	(bad)  
  4140c0:	outs   dx,DWORD PTR ds:[rsi]
  4140c1:	jb     0x414137
  4140c3:	add    BYTE PTR [rax+0x6c616303],dl
  4140c9:	ins    BYTE PTR es:[rdi],dx
  4140ca:	outs   dx,DWORD PTR ds:[rsi]
  4140cb:	movsxd eax,DWORD PTR [rax]
  4140cd:	add    BYTE PTR [rbp+0x69786503],bl
  4140d3:	je     0x4140d5
  4140d5:	add    BYTE PTR [rax+0x72706603],dh
  4140db:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  4140e2:	data16 jb 0x41414a
  4140e5:	add    BYTE PTR gs:[rax],al
  4140e8:	ret    0x6603
  4140eb:	ja     0x41415f
  4140ed:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6c03ea00
  4140f5:	outs   dx,DWORD PTR ds:[rsi]
  4140f6:	movsxd esp,DWORD PTR [rcx+0x6c]
  4140f9:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  4140fd:	jbe    0x4140ff
  4140ff:	add    al,dh
  414101:	add    ebp,DWORD PTR [rbp+0x61]
  414104:	ins    BYTE PTR es:[rdi],dx
  414105:	ins    BYTE PTR es:[rdi],dx
  414106:	outs   dx,DWORD PTR ds:[rsi]
  414107:	movsxd eax,DWORD PTR [rax]
  414109:	add    al,bh
  41410b:	add    ebp,DWORD PTR [rbp+0x65]
  41410e:	ins    DWORD PTR es:[rdi],dx
  41410f:	movsxd esi,DWORD PTR [rax+0x79]
  414112:	add    BYTE PTR [rax],al
  414114:	or     eax,0x6d657204
  414119:	outs   dx,DWORD PTR ds:[rsi]
  41411a:	jbe    0x414181
  41411c:	add    BYTE PTR [rax],al
  41411e:	(bad)  
  41411f:	add    al,0x73
  414121:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  414128:	and    al,0x4
  41412a:	jae    0x4141a0
  41412c:	jb     0x414191
  41412e:	ins    DWORD PTR es:[rdi],dx
  41412f:	jo     0x414131
  414131:	add    BYTE PTR [rbx],ch
  414133:	add    al,0x73
  414135:	je     0x4141a9
  414137:	ins    BYTE PTR es:[rdi],dx
  414138:	outs   dx,BYTE PTR gs:[rsi]
  41413a:	add    BYTE PTR [rax],al
  41413c:	cs add al,0x73
  41413f:	je     0x4141b3
  414141:	outs   dx,BYTE PTR ds:[rsi]
  414142:	movsxd ebp,DWORD PTR [rbp+0x70]
  414145:	add    BYTE PTR [rax],bh
  414147:	add    al,0x73
  414149:	je     0x4141bd
  41414b:	je     0x4141bc
  41414d:	ins    BYTE PTR es:[rdi],dx
  41414e:	add    BYTE PTR [rax],al
  414150:	rex.WRX add al,0x76
  414153:	data16 jo 0x4141c8
  414156:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  41415d:	xor    BYTE PTR [rcx],al
  41415f:	add    BYTE PTR [rax],al
  414161:	xor    BYTE PTR [rcx],al
  414163:	add    BYTE PTR [rax],al
  414165:	xor    BYTE PTR [rcx],al
  414167:	add    BYTE PTR [rax],al
  414169:	xor    BYTE PTR [rcx],al
  41416b:	add    BYTE PTR [rax],al
  41416d:	xor    BYTE PTR [rcx],al
  41416f:	add    BYTE PTR [rax],al
  414171:	xor    BYTE PTR [rcx],al
  414173:	add    BYTE PTR [rax],al
  414175:	xor    BYTE PTR [rcx],al
  414177:	add    BYTE PTR [rax],al
  414179:	xor    BYTE PTR [rcx],al
  41417b:	add    BYTE PTR [rax],al
  41417d:	xor    BYTE PTR [rcx],al
  41417f:	add    BYTE PTR [rax],al
  414181:	xor    BYTE PTR [rcx],al
  414183:	add    BYTE PTR [rax],al
  414185:	xor    BYTE PTR [rcx],al
  414187:	add    BYTE PTR [rax],al
  414189:	xor    BYTE PTR [rcx],al
  41418b:	add    BYTE PTR [rax],al
  41418d:	xor    BYTE PTR [rcx],al
  41418f:	add    BYTE PTR [rax],al
  414191:	xor    BYTE PTR [rcx],al
  414193:	add    BYTE PTR [rax],al
  414195:	xor    BYTE PTR [rcx],al
  414197:	add    BYTE PTR [rax],al
  414199:	xor    BYTE PTR [rcx],al
  41419b:	add    BYTE PTR [rax],al
  41419d:	xor    BYTE PTR [rcx],al
  41419f:	add    BYTE PTR [rax],al
  4141a1:	xor    BYTE PTR [rcx],al
  4141a3:	add    BYTE PTR [rax],al
  4141a5:	xor    BYTE PTR [rcx],al
  4141a7:	add    BYTE PTR [rax],al
  4141a9:	xor    BYTE PTR [rcx],al
  4141ab:	add    BYTE PTR [rax],al
  4141ad:	xor    BYTE PTR [rcx],al
  4141af:	add    BYTE PTR [rax],al
  4141b1:	xor    BYTE PTR [rcx],al
  4141b3:	add    BYTE PTR [rax],al
  4141b5:	xor    BYTE PTR [rcx],al
  4141b7:	add    BYTE PTR [rax],al
  4141b9:	xor    BYTE PTR [rcx],al
  4141bb:	add    BYTE PTR [rax],al
  4141bd:	xor    BYTE PTR [rcx],al
  4141bf:	add    BYTE PTR [rax],al
  4141c1:	xor    BYTE PTR [rcx],al
  4141c3:	add    BYTE PTR [rax],al
  4141c5:	xor    BYTE PTR [rcx],al
  4141c7:	add    BYTE PTR [rax],al
  4141c9:	xor    BYTE PTR [rcx],al
  4141cb:	add    BYTE PTR [rax],al
  4141cd:	xor    BYTE PTR [rcx],al
  4141cf:	add    BYTE PTR [rax],al
  4141d1:	xor    BYTE PTR [rcx],al
  4141d3:	add    BYTE PTR [rax],al
  4141d5:	xor    BYTE PTR [rcx],al
  4141d7:	add    BYTE PTR [rax],al
  4141d9:	xor    BYTE PTR [rcx],al
  4141db:	add    BYTE PTR [rax],al
  4141dd:	xor    BYTE PTR [rcx],al
  4141df:	add    BYTE PTR [rax],al
  4141e1:	xor    BYTE PTR [rcx],al
  4141e3:	add    BYTE PTR [rax],al
  4141e5:	xor    BYTE PTR [rcx],al
  4141e7:	add    BYTE PTR [rax],al
  4141e9:	xor    BYTE PTR [rcx],al
  4141eb:	add    BYTE PTR [rax],al
  4141ed:	xor    BYTE PTR [rcx],al
  4141ef:	add    BYTE PTR [rax],al
  4141f1:	xor    BYTE PTR [rcx],al
  4141f3:	add    BYTE PTR [rax],al
  4141f5:	xor    BYTE PTR [rcx],al
  4141f7:	add    BYTE PTR [rax],al
  4141f9:	xor    BYTE PTR [rcx],al
  4141fb:	add    BYTE PTR [rax],al
  4141fd:	xor    BYTE PTR [rcx],al
  4141ff:	add    BYTE PTR [rax],al
  414201:	xor    BYTE PTR [rcx],al
  414203:	add    BYTE PTR [rax],al
  414205:	xor    BYTE PTR [rcx],al
  414207:	add    BYTE PTR [rax],al
  414209:	xor    BYTE PTR [rcx],al
  41420b:	add    BYTE PTR [rax],al
  41420d:	xor    BYTE PTR [rcx],al
  41420f:	add    BYTE PTR [rax],al
  414211:	xor    BYTE PTR [rcx],al
  414213:	add    BYTE PTR [rax],al
  414215:	xor    BYTE PTR [rcx],al
  414217:	add    BYTE PTR [rax],al
  414219:	xor    BYTE PTR [rcx],al
  41421b:	add    BYTE PTR [rax],al
  41421d:	xor    BYTE PTR [rcx],al
  41421f:	add    BYTE PTR [rax],al
  414221:	xor    BYTE PTR [rcx],al
  414223:	add    BYTE PTR [rax],al
  414225:	xor    BYTE PTR [rcx],al
  414227:	add    BYTE PTR [rax],al
  414229:	xor    BYTE PTR [rcx],al
  41422b:	add    BYTE PTR [rax],al
  41422d:	xor    BYTE PTR [rcx],al
  41422f:	add    BYTE PTR [rax],al
  414231:	xor    BYTE PTR [rcx],al
  414233:	add    BYTE PTR [rax],al
  414235:	xor    BYTE PTR [rcx],al
  414237:	add    BYTE PTR [rax],al
  414239:	xor    BYTE PTR [rcx],al
  41423b:	add    BYTE PTR [rax],al
  41423d:	xor    BYTE PTR [rcx],al
  41423f:	add    BYTE PTR [rax],al
  414241:	xor    BYTE PTR [rcx],al
  414243:	add    BYTE PTR [rax],al
  414245:	xor    BYTE PTR [rcx],al
  414247:	add    BYTE PTR [rax],al
  414249:	xor    BYTE PTR [rcx],al
  41424b:	add    BYTE PTR [rax],al
  41424d:	xor    BYTE PTR [rcx],al
  41424f:	add    BYTE PTR [rax],al
  414251:	xor    BYTE PTR [rcx],al
  414253:	add    BYTE PTR [rax],al
  414255:	xor    BYTE PTR [rcx],al
  414257:	add    BYTE PTR [rax],al
  414259:	xor    BYTE PTR [rcx],al
  41425b:	add    BYTE PTR [rax],al
  41425d:	xor    BYTE PTR [rcx],al
  41425f:	add    BYTE PTR [rax],al
  414261:	xor    BYTE PTR [rcx],al
  414263:	add    BYTE PTR [rax],al
  414265:	xor    BYTE PTR [rcx],al
  414267:	add    BYTE PTR [rax],al
  414269:	xor    BYTE PTR [rcx],al
  41426b:	add    BYTE PTR [rax],al
  41426d:	xor    BYTE PTR [rcx],al
  41426f:	add    BYTE PTR [rax],al
  414271:	xor    BYTE PTR [rcx],al
  414273:	add    BYTE PTR [rax],al
  414275:	xor    BYTE PTR [rcx],al
  414277:	add    BYTE PTR [rax],al
  414279:	xor    BYTE PTR [rcx],al
  41427b:	add    BYTE PTR [rax],al
  41427d:	xor    BYTE PTR [rcx],al
  41427f:	add    BYTE PTR [rax],al
  414281:	xor    BYTE PTR [rcx],al
  414283:	add    BYTE PTR [rax],al
  414285:	xor    BYTE PTR [rcx],al
  414287:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  41428b:	ins    BYTE PTR es:[edi],dx
  41428d:	jo     0x4142fa
  41428f:	sub    eax,0x642e3034
  414294:	ins    BYTE PTR es:[rdi],dx
  414295:	ins    BYTE PTR es:[rdi],dx
  414296:	add    BYTE PTR [rax],al
  414298:	adc    al,0x30
  41429a:	add    DWORD PTR [rax],eax
  41429c:	adc    al,0x30
  41429e:	add    DWORD PTR [rax],eax
  4142a0:	adc    al,0x30
  4142a2:	add    DWORD PTR [rax],eax
  4142a4:	adc    al,0x30
  4142a6:	add    DWORD PTR [rax],eax
  4142a8:	adc    al,0x30
  4142aa:	add    DWORD PTR [rax],eax
  4142ac:	adc    al,0x30
  4142ae:	add    DWORD PTR [rax],eax
  4142b0:	adc    al,0x30
  4142b2:	add    DWORD PTR [rax],eax
  4142b4:	adc    al,0x30
  4142b6:	add    DWORD PTR [rax],eax
  4142b8:	adc    al,0x30
  4142ba:	add    DWORD PTR [rax],eax
  4142bc:	adc    al,0x30
  4142be:	add    DWORD PTR [rax],eax
  4142c0:	adc    al,0x30
  4142c2:	add    DWORD PTR [rax],eax
  4142c4:	adc    al,0x30
  4142c6:	add    DWORD PTR [rax],eax
  4142c8:	adc    al,0x30
  4142ca:	add    DWORD PTR [rax],eax
  4142cc:	adc    al,0x30
  4142ce:	add    DWORD PTR [rax],eax
  4142d0:	adc    al,0x30
  4142d2:	add    DWORD PTR [rax],eax
  4142d4:	adc    al,0x30
  4142d6:	add    DWORD PTR [rax],eax
  4142d8:	adc    al,0x30
  4142da:	add    DWORD PTR [rax],eax
  4142dc:	adc    al,0x30
  4142de:	add    DWORD PTR [rax],eax
  4142e0:	adc    al,0x30
  4142e2:	add    DWORD PTR [rax],eax
  4142e4:	adc    al,0x30
  4142e6:	add    DWORD PTR [rax],eax
  4142e8:	adc    al,0x30
  4142ea:	add    DWORD PTR [rax],eax
  4142ec:	adc    al,0x30
  4142ee:	add    DWORD PTR [rax],eax
  4142f0:	adc    al,0x30
  4142f2:	add    DWORD PTR [rax],eax
  4142f4:	rex.WXB
  4142f5:	rex.RB push r10
  4142f7:	rex.WRX
  4142f8:	rex.RB
  4142f9:	xor    r14,QWORD PTR [rdx]
  4142fc:	cs fs ins BYTE PTR es:[rdi],dx
  4142ff:	ins    BYTE PTR es:[rdi],dx
  414300:	add    BYTE PTR [rax],al
  414302:	add    BYTE PTR [rax],al
  414304:	sub    BYTE PTR [rax],dh
  414306:	add    DWORD PTR [rax],eax
  414308:	sub    BYTE PTR [rax],dh
  41430a:	add    DWORD PTR [rax],eax
  41430c:	sub    BYTE PTR [rax],dh
  41430e:	add    DWORD PTR [rax],eax
  414310:	sub    BYTE PTR [rax],dh
  414312:	add    DWORD PTR [rax],eax
  414314:	sub    BYTE PTR [rax],dh
  414316:	add    DWORD PTR [rax],eax
  414318:	sub    BYTE PTR [rax],dh
  41431a:	add    DWORD PTR [rax],eax
  41431c:	sub    BYTE PTR [rax],dh
  41431e:	add    DWORD PTR [rax],eax
  414320:	sub    BYTE PTR [rax],dh
  414322:	add    DWORD PTR [rax],eax
  414324:	sub    BYTE PTR [rax],dh
  414326:	add    DWORD PTR [rax],eax
  414328:	sub    BYTE PTR [rax],dh
  41432a:	add    DWORD PTR [rax],eax
  41432c:	sub    BYTE PTR [rax],dh
  41432e:	add    DWORD PTR [rax],eax
  414330:	sub    BYTE PTR [rax],dh
  414332:	add    DWORD PTR [rax],eax
  414334:	sub    BYTE PTR [rax],dh
  414336:	add    DWORD PTR [rax],eax
  414338:	sub    BYTE PTR [rax],dh
  41433a:	add    DWORD PTR [rax],eax
  41433c:	sub    BYTE PTR [rax],dh
  41433e:	add    DWORD PTR [rax],eax
  414340:	sub    BYTE PTR [rax],dh
  414342:	add    DWORD PTR [rax],eax
  414344:	sub    BYTE PTR [rax],dh
  414346:	add    DWORD PTR [rax],eax
  414348:	sub    BYTE PTR [rax],dh
  41434a:	add    DWORD PTR [rax],eax
  41434c:	sub    BYTE PTR [rax],dh
  41434e:	add    DWORD PTR [rax],eax
  414350:	sub    BYTE PTR [rax],dh
  414352:	add    DWORD PTR [rax],eax
  414354:	sub    BYTE PTR [rax],dh
  414356:	add    DWORD PTR [rax],eax
  414358:	sub    BYTE PTR [rax],dh
  41435a:	add    DWORD PTR [rax],eax
  41435c:	sub    BYTE PTR [rax],dh
  41435e:	add    DWORD PTR [rax],eax
  414360:	sub    BYTE PTR [rax],dh
  414362:	add    DWORD PTR [rax],eax
  414364:	sub    BYTE PTR [rax],dh
  414366:	add    DWORD PTR [rax],eax
  414368:	sub    BYTE PTR [rax],dh
  41436a:	add    DWORD PTR [rax],eax
  41436c:	sub    BYTE PTR [rax],dh
  41436e:	add    DWORD PTR [rax],eax
  414370:	sub    BYTE PTR [rax],dh
  414372:	add    DWORD PTR [rax],eax
  414374:	sub    BYTE PTR [rax],dh
  414376:	add    DWORD PTR [rax],eax
  414378:	sub    BYTE PTR [rax],dh
  41437a:	add    DWORD PTR [rax],eax
  41437c:	sub    BYTE PTR [rax],dh
  41437e:	add    DWORD PTR [rax],eax
  414380:	sub    BYTE PTR [rax],dh
  414382:	add    DWORD PTR [rax],eax
  414384:	sub    BYTE PTR [rax],dh
  414386:	add    DWORD PTR [rax],eax
  414388:	ins    DWORD PTR es:[rdi],dx
  414389:	jae    0x414401
  41438b:	movsxd esi,DWORD PTR [rdx+0x74]
  41438e:	cs fs ins BYTE PTR es:[rdi],dx
  414391:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

0000000000415000 <.CRT>:
	...
  415008:	(bad)  
  415009:	adc    DWORD PTR [rax+0x0],eax
	...
  415020:	adc    BYTE PTR [rax],dl
  415022:	add    BYTE PTR [rax],al
  415025:	add    BYTE PTR [rax],al
  415027:	add    BYTE PTR [rax],ah
  415029:	sbb    DWORD PTR [rax+0x0],eax
	...
  415040:	push   rax
  415041:	sbb    eax,DWORD PTR [rax+0x0]
  415044:	add    BYTE PTR [rax],al
  415046:	add    BYTE PTR [rax],al
  415048:	and    BYTE PTR [rbx],bl
  41504a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

0000000000416000 <.tls>:
	...
  416020:	add    BYTE PTR [rax+0x41],ah
  416023:	add    BYTE PTR [rax],al
  416025:	add    BYTE PTR [rax],al
  416027:	add    BYTE PTR [rax+0x60],ah
  41602a:	add    BYTE PTR [r8],al
  41602d:	add    BYTE PTR [rax],al
  41602f:	add    BYTE PTR [rsi+rdx*1+0x41],bl
  416033:	add    BYTE PTR [rax],al
  416035:	add    BYTE PTR [rax],al
  416037:	add    BYTE PTR [rax+0x50],al
  41603a:	add    BYTE PTR [r8],al
	...
