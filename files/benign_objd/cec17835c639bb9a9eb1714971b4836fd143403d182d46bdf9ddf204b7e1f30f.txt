
cec17835c639bb9a9eb1714971b4836fd143403d182d46bdf9ddf204b7e1f30f.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x269d5]        # 0x4279f0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x269d6]        # 0x427a00
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x269d9]        # 0x427a10
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x2699c]        # 0x4279e0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x2681f]        # 0x427870
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x26971]        # 0x4279d0
  40105f:	mov    DWORD PTR [rip+0x29fa3],edx        # 0x42b008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x41d9d0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x417350
  401081:	mov    rdx,QWORD PTR [rip+0x26888]        # 0x427910
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x2686e]        # 0x427900
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x268e4]        # 0x427980
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x2680b]        # 0x4278b0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x416f30
  4010af:	mov    rax,QWORD PTR [rip+0x2676a]        # 0x427820
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x41d9d0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x16109]        # 0x417230
  401127:	call   0x417220
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x26845]        # 0x4279b0
  40116b:	lea    r8,[rip+0x29ea6]        # 0x42b018
  401172:	lea    rdx,[rip+0x29ea7]        # 0x42b020
  401179:	lea    rcx,[rip+0x29ea8]        # 0x42b028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x29e78],eax        # 0x42b000
  401188:	lea    rax,[rip+0x29e71]        # 0x42b000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x267d5]        # 0x427970
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x41d9e8
  4011a3:	mov    DWORD PTR [rip+0x29e67],eax        # 0x42b010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x2680a]        # 0x4279d0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x266eb]        # 0x4278e0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x2e712]        # 0x42f914
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x266c7]        # 0x4278f0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x29dba],0x1        # 0x42b004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x265fc]        # 0x427860
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x417540
  40127d:	lea    rcx,[rip+0x1685c]        # 0x417ae0
  401284:	call   QWORD PTR [rip+0x2e682]        # 0x42f90c
  40128a:	mov    rdx,QWORD PTR [rip+0x2663f]        # 0x4278d0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x4179f0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x41da20
  4012a5:	call   0x417330
  4012aa:	mov    rax,QWORD PTR [rip+0x265bf]        # 0x427870
  4012b1:	mov    QWORD PTR [rip+0x2d540],rax        # 0x42e7f8
  4012b8:	mov    rax,QWORD PTR [rip+0x265e1]        # 0x4278a0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x2d4d9],rax        # 0x42e7f0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x1dcca],eax        # 0x41f000
  401336:	mov    r12d,DWORD PTR [rip+0x29ceb]        # 0x42b028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x41d870
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x29cc2]        # 0x42b020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x41d7f8
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x41d870
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x41d860
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x29c6a],rbp        # 0x42b020
  4013b6:	call   0x416f00
  4013bb:	mov    rax,QWORD PTR [rip+0x264be]        # 0x427880
  4013c2:	mov    rdx,QWORD PTR [rip+0x29c4f]        # 0x42b018
  4013c9:	mov    ecx,DWORD PTR [rip+0x29c59]        # 0x42b028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x29c3c]        # 0x42b018
  4013dc:	mov    rdx,QWORD PTR [rip+0x29c3d]        # 0x42b020
  4013e3:	call   0x41dc70
  4013e8:	mov    ecx,DWORD PTR [rip+0x29c1a]        # 0x42b008
  4013ee:	mov    DWORD PTR [rip+0x29c18],eax        # 0x42b00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x29c02]        # 0x42b004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x41d9b8
  40140b:	mov    eax,DWORD PTR [rip+0x29bfb]        # 0x42b00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x264b9]        # 0x4278f0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x41d9c0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x264dd]        # 0x427940
  401463:	mov    rcx,QWORD PTR [rip+0x264c6]        # 0x427930
  40146a:	call   0x41d968
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x2e403]        # 0x42f89c
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x264b9]        # 0x427960
  4014a7:	mov    rcx,QWORD PTR [rip+0x264a2]        # 0x427950
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x41d968
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x41d8f8
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x264f5]        # 0x4279d0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x416f40
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x264c5]        # 0x4279d0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x416f40
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	sub    rsp,0x38
  401534:	mov    QWORD PTR [rsp+0x50],r8
  401539:	lea    r8,[rsp+0x50]
  40153e:	mov    QWORD PTR [rsp+0x58],r9
  401543:	mov    QWORD PTR [rsp+0x28],r8
  401548:	call   0x418d30
  40154d:	add    rsp,0x38
  401551:	ret    
  401552:	nop    DWORD PTR [rax+0x0]
  401556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401560:	push   rsi
  401561:	push   rbx
  401562:	sub    rsp,0x28
  401566:	mov    ebx,ecx
  401568:	mov    rsi,rdx
  40156b:	call   QWORD PTR [rip+0x2e41b]        # 0x42f98c
  401571:	lea    rdx,[rip+0x1fa88]        # 0x421000
  401578:	lea    rcx,[rax+0x60]
  40157c:	mov    r9,rsi
  40157f:	mov    r8d,ebx
  401582:	add    rsp,0x28
  401586:	pop    rbx
  401587:	pop    rsi
  401588:	jmp    0x401530
  40158a:	nop    WORD PTR [rax+rax*1+0x0]
  401590:	sub    rsp,0x38
  401594:	mov    QWORD PTR [rsp+0x48],rdx
  401599:	lea    rdx,[rsp+0x48]
  40159e:	mov    QWORD PTR [rsp+0x50],r8
  4015a3:	mov    QWORD PTR [rsp+0x58],r9
  4015a8:	mov    QWORD PTR [rsp+0x28],rdx
  4015ad:	call   0x418d60
  4015b2:	add    rsp,0x38
  4015b6:	ret    
  4015b7:	nop    WORD PTR [rax+rax*1+0x0]
  4015c0:	push   rbx
  4015c1:	sub    rsp,0x40
  4015c5:	mov    rbx,rcx
  4015c8:	lea    rcx,[rsp+0x28]
  4015cd:	call   0x403830
  4015d2:	test   eax,eax
  4015d4:	js     0x4016b4
  4015da:	mov    rcx,QWORD PTR [rsp+0x28]
  4015df:	mov    rdx,rbx
  4015e2:	call   0x403838
  4015e7:	test   eax,eax
  4015e9:	js     0x401687
  4015ef:	mov    rax,QWORD PTR [rip+0x2642a]        # 0x427a20
  4015f6:	lea    r8,[rsp+0x30]
  4015fb:	mov    rax,QWORD PTR [rax+0x78]
  4015ff:	test   BYTE PTR [rax+0x78],0x20
  401603:	je     0x40164c
  401605:	mov    rcx,QWORD PTR [rsp+0x28]
  40160a:	mov    edx,0x1
  40160f:	call   0x403828
  401614:	test   eax,eax
  401616:	jne    0x40165a
  401618:	mov    r8,QWORD PTR [rsp+0x30]
  40161d:	mov    edx,DWORD PTR [rsp+0x38]
  401621:	lea    rcx,[rip+0x1fa23]        # 0x42104b
  401628:	call   0x401590
  40162d:	mov    rax,QWORD PTR [rip+0x2638c]        # 0x4279c0
  401634:	mov    rcx,QWORD PTR [rsp+0x30]
  401639:	call   QWORD PTR [rax]
  40163b:	mov    rcx,QWORD PTR [rsp+0x28]
  401640:	call   0x403850
  401645:	nop
  401646:	add    rsp,0x40
  40164a:	pop    rbx
  40164b:	ret    
  40164c:	mov    rcx,QWORD PTR [rsp+0x28]
  401651:	xor    edx,edx
  401653:	call   0x403828
  401658:	jmp    0x401614
  40165a:	mov    ecx,eax
  40165c:	call   0x4037e8
  401661:	mov    rbx,rax
  401664:	call   QWORD PTR [rip+0x2e322]        # 0x42f98c
  40166a:	lea    rdx,[rip+0x1f9c5]        # 0x421036
  401671:	lea    rcx,[rax+0x60]
  401675:	mov    r8,rbx
  401678:	call   0x401530
  40167d:	mov    ecx,0x1
  401682:	call   0x41d8f8
  401687:	mov    ecx,eax
  401689:	call   0x4037e8
  40168e:	mov    rbx,rax
  401691:	call   QWORD PTR [rip+0x2e2f5]        # 0x42f98c
  401697:	lea    rdx,[rip+0x1f980]        # 0x42101e
  40169e:	lea    rcx,[rax+0x60]
  4016a2:	mov    r8,rbx
  4016a5:	call   0x401530
  4016aa:	mov    ecx,0x1
  4016af:	call   0x41d8f8
  4016b4:	mov    ecx,eax
  4016b6:	call   0x4037e8
  4016bb:	mov    rbx,rax
  4016be:	call   QWORD PTR [rip+0x2e2c8]        # 0x42f98c
  4016c4:	lea    rdx,[rip+0x1f93f]        # 0x42100a
  4016cb:	lea    rcx,[rax+0x60]
  4016cf:	mov    r8,rbx
  4016d2:	call   0x401530
  4016d7:	mov    ecx,0x1
  4016dc:	call   0x41d8f8
  4016e1:	nop
  4016e2:	nop    DWORD PTR [rax+0x0]
  4016e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016f0:	push   rsi
  4016f1:	push   rbx
  4016f2:	sub    rsp,0x48
  4016f6:	mov    rbx,QWORD PTR [rip+0x26323]        # 0x427a20
  4016fd:	mov    rax,QWORD PTR [rbx+0x78]
  401701:	test   BYTE PTR [rax+0x420],0xf
  401708:	je     0x40177a
  40170a:	lea    rcx,[rsp+0x20]
  40170f:	call   0x4037d0
  401714:	test   eax,eax
  401716:	js     0x401803
  40171c:	mov    rax,QWORD PTR [rbx+0x78]
  401720:	lea    rdx,[rsp+0x28]
  401725:	mov    rcx,QWORD PTR [rax+0x428]
  40172c:	call   0x4104a0
  401731:	mov    rdx,QWORD PTR [rsp+0x28]
  401736:	test   rax,rax
  401739:	mov    QWORD PTR [rsp+0x30],rax
  40173e:	mov    DWORD PTR [rsp+0x38],edx
  401742:	je     0x4017d5
  401748:	mov    r8d,DWORD PTR [rip+0x298e5]        # 0x42b034
  40174f:	mov    rcx,QWORD PTR [rsp+0x20]
  401754:	lea    rdx,[rsp+0x30]
  401759:	call   0x4037d8
  40175e:	mov    rcx,QWORD PTR [rsp+0x30]
  401763:	mov    esi,eax
  401765:	call   0x41d8a8
  40176a:	test   esi,esi
  40176c:	js     0x40179a
  40176e:	mov    rax,QWORD PTR [rsp+0x20]
  401773:	add    rsp,0x48
  401777:	pop    rbx
  401778:	pop    rsi
  401779:	ret    
  40177a:	call   QWORD PTR [rip+0x2e20c]        # 0x42f98c
  401780:	lea    rdx,[rip+0x1f8c9]        # 0x421050
  401787:	lea    rcx,[rax+0x60]
  40178b:	call   0x401530
  401790:	mov    ecx,0x1
  401795:	call   0x41d8f8
  40179a:	mov    ecx,esi
  40179c:	call   0x4037e8
  4017a1:	mov    rsi,rax
  4017a4:	mov    rax,QWORD PTR [rbx+0x78]
  4017a8:	mov    rbx,QWORD PTR [rax+0x428]
  4017af:	call   QWORD PTR [rip+0x2e1d7]        # 0x42f98c
  4017b5:	lea    rdx,[rip+0x1f8e4]        # 0x4210a0
  4017bc:	lea    rcx,[rax+0x60]
  4017c0:	mov    r9,rsi
  4017c3:	mov    r8,rbx
  4017c6:	call   0x401530
  4017cb:	mov    ecx,0x1
  4017d0:	call   0x41d8f8
  4017d5:	mov    rax,QWORD PTR [rbx+0x78]
  4017d9:	mov    rbx,QWORD PTR [rax+0x428]
  4017e0:	call   QWORD PTR [rip+0x2e1a6]        # 0x42f98c
  4017e6:	lea    rdx,[rip+0x1f88b]        # 0x421078
  4017ed:	lea    rcx,[rax+0x60]
  4017f1:	mov    r8,rbx
  4017f4:	call   0x401530
  4017f9:	mov    ecx,0x1
  4017fe:	call   0x41d8f8
  401803:	mov    ecx,eax
  401805:	call   0x4037e8
  40180a:	mov    rbx,rax
  40180d:	call   QWORD PTR [rip+0x2e179]        # 0x42f98c
  401813:	lea    rdx,[rip+0x1f84d]        # 0x421067
  40181a:	lea    rcx,[rax+0x60]
  40181e:	mov    r8,rbx
  401821:	call   0x401530
  401826:	mov    ecx,0x1
  40182b:	call   0x41d8f8
  401830:	nop
  401831:	nop    DWORD PTR [rax+rax*1+0x0]
  401836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401840:	push   rsi
  401841:	push   rbx
  401842:	sub    rsp,0x48
  401846:	mov    rbx,QWORD PTR [rip+0x261d3]        # 0x427a20
  40184d:	mov    rax,QWORD PTR [rbx+0x78]
  401851:	test   BYTE PTR [rax+0x488],0xf
  401858:	je     0x4018ca
  40185a:	lea    rcx,[rsp+0x20]
  40185f:	call   0x4037d0
  401864:	test   eax,eax
  401866:	js     0x401953
  40186c:	mov    rax,QWORD PTR [rbx+0x78]
  401870:	lea    rdx,[rsp+0x28]
  401875:	mov    rcx,QWORD PTR [rax+0x490]
  40187c:	call   0x4104a0
  401881:	mov    rdx,QWORD PTR [rsp+0x28]
  401886:	test   rax,rax
  401889:	mov    QWORD PTR [rsp+0x30],rax
  40188e:	mov    DWORD PTR [rsp+0x38],edx
  401892:	je     0x401925
  401898:	mov    r8d,DWORD PTR [rip+0x29795]        # 0x42b034
  40189f:	mov    rcx,QWORD PTR [rsp+0x20]
  4018a4:	lea    rdx,[rsp+0x30]
  4018a9:	call   0x4037d8
  4018ae:	mov    rcx,QWORD PTR [rsp+0x30]
  4018b3:	mov    esi,eax
  4018b5:	call   0x41d8a8
  4018ba:	test   esi,esi
  4018bc:	js     0x4018ea
  4018be:	mov    rax,QWORD PTR [rsp+0x20]
  4018c3:	add    rsp,0x48
  4018c7:	pop    rbx
  4018c8:	pop    rsi
  4018c9:	ret    
  4018ca:	call   QWORD PTR [rip+0x2e0bc]        # 0x42f98c
  4018d0:	lea    rdx,[rip+0x1f7f0]        # 0x4210c7
  4018d7:	lea    rcx,[rax+0x60]
  4018db:	call   0x401530
  4018e0:	mov    ecx,0x1
  4018e5:	call   0x41d8f8
  4018ea:	mov    ecx,esi
  4018ec:	call   0x4037e8
  4018f1:	mov    rsi,rax
  4018f4:	mov    rax,QWORD PTR [rbx+0x78]
  4018f8:	mov    rbx,QWORD PTR [rax+0x490]
  4018ff:	call   QWORD PTR [rip+0x2e087]        # 0x42f98c
  401905:	lea    rdx,[rip+0x1f7ec]        # 0x4210f8
  40190c:	lea    rcx,[rax+0x60]
  401910:	mov    r9,rsi
  401913:	mov    r8,rbx
  401916:	call   0x401530
  40191b:	mov    ecx,0x1
  401920:	call   0x41d8f8
  401925:	mov    rax,QWORD PTR [rbx+0x78]
  401929:	mov    rbx,QWORD PTR [rax+0x490]
  401930:	call   QWORD PTR [rip+0x2e056]        # 0x42f98c
  401936:	lea    rdx,[rip+0x1f79f]        # 0x4210dc
  40193d:	lea    rcx,[rax+0x60]
  401941:	mov    r8,rbx
  401944:	call   0x401530
  401949:	mov    ecx,0x1
  40194e:	call   0x41d8f8
  401953:	mov    ecx,eax
  401955:	call   0x4037e8
  40195a:	mov    rbx,rax
  40195d:	call   QWORD PTR [rip+0x2e029]        # 0x42f98c
  401963:	lea    rdx,[rip+0x1f6fd]        # 0x421067
  40196a:	lea    rcx,[rax+0x60]
  40196e:	mov    r8,rbx
  401971:	call   0x401530
  401976:	mov    ecx,0x1
  40197b:	call   0x41d8f8
  401980:	nop
  401981:	nop    DWORD PTR [rax+rax*1+0x0]
  401986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401990:	push   rsi
  401991:	push   rbx
  401992:	sub    rsp,0x48
  401996:	mov    rbx,QWORD PTR [rip+0x26083]        # 0x427a20
  40199d:	mov    rax,QWORD PTR [rbx+0x78]
  4019a1:	test   BYTE PTR [rax+0x558],0xf
  4019a8:	je     0x401a1a
  4019aa:	lea    rcx,[rsp+0x20]
  4019af:	call   0x4037d0
  4019b4:	test   eax,eax
  4019b6:	js     0x401aa3
  4019bc:	mov    rax,QWORD PTR [rbx+0x78]
  4019c0:	lea    rdx,[rsp+0x28]
  4019c5:	mov    rcx,QWORD PTR [rax+0x560]
  4019cc:	call   0x4104a0
  4019d1:	mov    rdx,QWORD PTR [rsp+0x28]
  4019d6:	test   rax,rax
  4019d9:	mov    QWORD PTR [rsp+0x30],rax
  4019de:	mov    DWORD PTR [rsp+0x38],edx
  4019e2:	je     0x401a75
  4019e8:	mov    r8d,DWORD PTR [rip+0x29645]        # 0x42b034
  4019ef:	mov    rcx,QWORD PTR [rsp+0x20]
  4019f4:	lea    rdx,[rsp+0x30]
  4019f9:	call   0x4037d8
  4019fe:	mov    rcx,QWORD PTR [rsp+0x30]
  401a03:	mov    esi,eax
  401a05:	call   0x41d8a8
  401a0a:	test   esi,esi
  401a0c:	js     0x401a3a
  401a0e:	mov    rax,QWORD PTR [rsp+0x20]
  401a13:	add    rsp,0x48
  401a17:	pop    rbx
  401a18:	pop    rsi
  401a19:	ret    
  401a1a:	call   QWORD PTR [rip+0x2df6c]        # 0x42f98c
  401a20:	lea    rdx,[rip+0x1f6f0]        # 0x421117
  401a27:	lea    rcx,[rax+0x60]
  401a2b:	call   0x401530
  401a30:	mov    ecx,0x1
  401a35:	call   0x41d8f8
  401a3a:	mov    ecx,esi
  401a3c:	call   0x4037e8
  401a41:	mov    rsi,rax
  401a44:	mov    rax,QWORD PTR [rbx+0x78]
  401a48:	mov    rbx,QWORD PTR [rax+0x560]
  401a4f:	call   QWORD PTR [rip+0x2df37]        # 0x42f98c
  401a55:	lea    rdx,[rip+0x1f6f4]        # 0x421150
  401a5c:	lea    rcx,[rax+0x60]
  401a60:	mov    r9,rsi
  401a63:	mov    r8,rbx
  401a66:	call   0x401530
  401a6b:	mov    ecx,0x1
  401a70:	call   0x41d8f8
  401a75:	mov    rax,QWORD PTR [rbx+0x78]
  401a79:	mov    rbx,QWORD PTR [rax+0x560]
  401a80:	call   QWORD PTR [rip+0x2df06]        # 0x42f98c
  401a86:	lea    rdx,[rip+0x1f6a1]        # 0x42112e
  401a8d:	lea    rcx,[rax+0x60]
  401a91:	mov    r8,rbx
  401a94:	call   0x401530
  401a99:	mov    ecx,0x1
  401a9e:	call   0x41d8f8
  401aa3:	mov    ecx,eax
  401aa5:	call   0x4037e8
  401aaa:	mov    rbx,rax
  401aad:	call   QWORD PTR [rip+0x2ded9]        # 0x42f98c
  401ab3:	lea    rdx,[rip+0x1f5ad]        # 0x421067
  401aba:	lea    rcx,[rax+0x60]
  401abe:	mov    r8,rbx
  401ac1:	call   0x401530
  401ac6:	mov    ecx,0x1
  401acb:	call   0x41d8f8
  401ad0:	nop
  401ad1:	nop    DWORD PTR [rax+rax*1+0x0]
  401ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ae0:	push   rbp
  401ae1:	push   rdi
  401ae2:	push   rsi
  401ae3:	push   rbx
  401ae4:	sub    rsp,0x88
  401aeb:	mov    rsi,rcx
  401aee:	lea    rcx,[rsp+0x40]
  401af3:	mov    rbx,rdx
  401af6:	mov    rdi,r8
  401af9:	mov    QWORD PTR [rsp+0x50],0x0
  401b02:	mov    DWORD PTR [rsp+0x3c],0x0
  401b0a:	call   0x403830
  401b0f:	test   eax,eax
  401b11:	js     0x401e44
  401b17:	mov    rcx,QWORD PTR [rsp+0x40]
  401b1c:	mov    rdx,rsi
  401b1f:	call   0x403838
  401b24:	test   eax,eax
  401b26:	js     0x401eeb
  401b2c:	test   rbx,rbx
  401b2f:	je     0x401b7d
  401b31:	mov    rcx,QWORD PTR [rsp+0x40]
  401b36:	lea    r8,[rsp+0x70]
  401b3b:	xor    edx,edx
  401b3d:	call   0x403848
  401b42:	test   eax,eax
  401b44:	js     0x401ebe
  401b4a:	mov    r8d,DWORD PTR [rsp+0x78]
  401b4f:	cmp    r8d,DWORD PTR [rbx+0x8]
  401b53:	jne    0x401df7
  401b59:	mov    rsi,QWORD PTR [rsp+0x70]
  401b5e:	mov    rcx,QWORD PTR [rbx]
  401b61:	mov    rdx,rsi
  401b64:	call   0x41d868
  401b69:	test   eax,eax
  401b6b:	jne    0x401df7
  401b71:	mov    rax,QWORD PTR [rip+0x25e48]        # 0x4279c0
  401b78:	mov    rcx,rsi
  401b7b:	call   QWORD PTR [rax]
  401b7d:	mov    rbp,QWORD PTR [rip+0x25e9c]        # 0x427a20
  401b84:	mov    rax,QWORD PTR [rbp+0x78]
  401b88:	test   BYTE PTR [rax+0x4f0],0xf
  401b8f:	jne    0x401c46
  401b95:	test   rdi,rdi
  401b98:	je     0x401e9e
  401b9e:	test   BYTE PTR [rax+0x78],0xf
  401ba2:	lea    rsi,[rsp+0x70]
  401ba7:	je     0x401bf0
  401ba9:	mov    r8,rsi
  401bac:	mov    edx,0x1
  401bb1:	mov    rcx,rdi
  401bb4:	call   0x4037c0
  401bb9:	test   eax,eax
  401bbb:	js     0x401dca
  401bc1:	mov    r8,QWORD PTR [rsp+0x70]
  401bc6:	mov    edx,DWORD PTR [rsp+0x78]
  401bca:	lea    rcx,[rip+0x1f6d4]        # 0x4212a5
  401bd1:	call   0x401590
  401bd6:	mov    rax,QWORD PTR [rip+0x25de3]        # 0x4279c0
  401bdd:	mov    rcx,QWORD PTR [rsp+0x70]
  401be2:	call   QWORD PTR [rax]
  401be4:	lea    rcx,[rip+0x1f63d]        # 0x421228
  401beb:	call   0x401590
  401bf0:	mov    rcx,QWORD PTR [rsp+0x40]
  401bf5:	xor    r9d,r9d
  401bf8:	mov    r8,rsi
  401bfb:	mov    rdx,rdi
  401bfe:	call   0x403818
  401c03:	test   eax,eax
  401c05:	js     0x401e17
  401c0b:	lea    rcx,[rip+0x1f6f5]        # 0x421307
  401c12:	call   0x401590
  401c17:	mov    ecx,DWORD PTR [rsp+0x70]
  401c1b:	call   0x402590
  401c20:	lea    rcx,[rip+0x1f6fa]        # 0x421321
  401c27:	call   0x401590
  401c2c:	mov    rcx,QWORD PTR [rsp+0x40]
  401c31:	call   0x403850
  401c36:	mov    eax,DWORD PTR [rsp+0x70]
  401c3a:	add    rsp,0x88
  401c41:	pop    rbx
  401c42:	pop    rsi
  401c43:	pop    rdi
  401c44:	pop    rbp
  401c45:	ret    
  401c46:	mov    rcx,QWORD PTR [rax+0x4f8]
  401c4d:	lea    rdx,[rsp+0x48]
  401c52:	call   0x4104a0
  401c57:	test   rax,rax
  401c5a:	mov    QWORD PTR [rsp+0x60],rax
  401c5f:	je     0x401f72
  401c65:	mov    rax,QWORD PTR [rsp+0x48]
  401c6a:	lea    rcx,[rsp+0x58]
  401c6f:	xor    edx,edx
  401c71:	mov    DWORD PTR [rsp+0x68],eax
  401c75:	call   0x4037b0
  401c7a:	test   eax,eax
  401c7c:	js     0x401f18
  401c82:	lea    rdx,[rsp+0x3c]
  401c87:	lea    rcx,[rsp+0x50]
  401c8c:	lea    r8,[rsp+0x60]
  401c91:	mov    DWORD PTR [rsp+0x20],0x0
  401c99:	mov    r9d,0x1
  401c9f:	call   0x4037c8
  401ca4:	test   eax,eax
  401ca6:	js     0x401e71
  401cac:	cmp    DWORD PTR [rsp+0x3c],0x0
  401cb1:	je     0x401e71
  401cb7:	mov    rax,QWORD PTR [rbp+0x78]
  401cbb:	test   BYTE PTR [rax+0x78],0xf
  401cbf:	je     0x401d36
  401cc1:	lea    rcx,[rip+0x1f550]        # 0x421218
  401cc8:	call   0x401590
  401ccd:	cmp    DWORD PTR [rsp+0x3c],0x0
  401cd2:	je     0x401d2a
  401cd4:	mov    rdi,QWORD PTR [rip+0x25ce5]        # 0x4279c0
  401cdb:	lea    rsi,[rsp+0x70]
  401ce0:	xor    ebx,ebx
  401ce2:	mov    rdx,QWORD PTR [rsp+0x50]
  401ce7:	mov    eax,ebx
  401ce9:	mov    r8,rsi
  401cec:	mov    rcx,QWORD PTR [rdx+rax*8]
  401cf0:	mov    edx,0x1
  401cf5:	call   0x4037c0
  401cfa:	test   eax,eax
  401cfc:	js     0x401dca
  401d02:	mov    r9,QWORD PTR [rsp+0x70]
  401d07:	mov    r8d,DWORD PTR [rsp+0x78]
  401d0c:	lea    rcx,[rip+0x1f532]        # 0x421245
  401d13:	mov    edx,ebx
  401d15:	add    ebx,0x1
  401d18:	call   0x401590
  401d1d:	mov    rcx,QWORD PTR [rsp+0x70]
  401d22:	call   QWORD PTR [rdi]
  401d24:	cmp    DWORD PTR [rsp+0x3c],ebx
  401d28:	ja     0x401ce2
  401d2a:	lea    rcx,[rip+0x1f4f7]        # 0x421228
  401d31:	call   0x401590
  401d36:	mov    r8d,DWORD PTR [rsp+0x3c]
  401d3b:	mov    rdx,QWORD PTR [rsp+0x50]
  401d40:	xor    r9d,r9d
  401d43:	mov    rcx,QWORD PTR [rsp+0x58]
  401d48:	call   0x4037b8
  401d4d:	test   eax,eax
  401d4f:	js     0x401f45
  401d55:	mov    rax,QWORD PTR [rbp+0x78]
  401d59:	test   BYTE PTR [rax+0x78],0xf
  401d5d:	jne    0x401dab
  401d5f:	mov    rdx,QWORD PTR [rsp+0x58]
  401d64:	mov    rcx,QWORD PTR [rsp+0x40]
  401d69:	lea    r8,[rsp+0x70]
  401d6e:	xor    r9d,r9d
  401d71:	call   0x403820
  401d76:	test   eax,eax
  401d78:	jns    0x401c0b
  401d7e:	mov    ecx,eax
  401d80:	call   0x4037e8
  401d85:	mov    rbx,rax
  401d88:	call   QWORD PTR [rip+0x2dbfe]        # 0x42f98c
  401d8e:	lea    rdx,[rip+0x1f4f3]        # 0x421288
  401d95:	lea    rcx,[rax+0x60]
  401d99:	mov    r8,rbx
  401d9c:	call   0x401530
  401da1:	mov    ecx,0x1
  401da6:	call   0x41d8f8
  401dab:	mov    ebx,DWORD PTR [rsp+0x3c]
  401daf:	call   QWORD PTR [rip+0x2dbd7]        # 0x42f98c
  401db5:	lea    rdx,[rip+0x1f4b3]        # 0x42126f
  401dbc:	lea    rcx,[rax+0x30]
  401dc0:	mov    r8d,ebx
  401dc3:	call   0x401530
  401dc8:	jmp    0x401d5f
  401dca:	mov    ecx,eax
  401dcc:	call   0x4037e8
  401dd1:	mov    rbx,rax
  401dd4:	call   QWORD PTR [rip+0x2dbb2]        # 0x42f98c
  401dda:	lea    rdx,[rip+0x1f449]        # 0x42122a
  401de1:	lea    rcx,[rax+0x60]
  401de5:	mov    r8,rbx
  401de8:	call   0x401530
  401ded:	mov    ecx,0x1
  401df2:	call   0x41d8f8
  401df7:	call   QWORD PTR [rip+0x2db8f]        # 0x42f98c
  401dfd:	lea    rdx,[rip+0x1f39c]        # 0x4211a0
  401e04:	lea    rcx,[rax+0x60]
  401e08:	call   0x401530
  401e0d:	mov    ecx,0x1
  401e12:	call   0x41d8f8
  401e17:	mov    ecx,eax
  401e19:	call   0x4037e8
  401e1e:	mov    rbx,rax
  401e21:	call   QWORD PTR [rip+0x2db65]        # 0x42f98c
  401e27:	lea    rdx,[rip+0x1f48a]        # 0x4212b8
  401e2e:	lea    rcx,[rax+0x60]
  401e32:	mov    r8,rbx
  401e35:	call   0x401530
  401e3a:	mov    ecx,0x1
  401e3f:	call   0x41d8f8
  401e44:	mov    ecx,eax
  401e46:	call   0x4037e8
  401e4b:	mov    rbx,rax
  401e4e:	call   QWORD PTR [rip+0x2db38]        # 0x42f98c
  401e54:	lea    rdx,[rip+0x1f1af]        # 0x42100a
  401e5b:	lea    rcx,[rax+0x60]
  401e5f:	mov    r8,rbx
  401e62:	call   0x401530
  401e67:	mov    ecx,0x1
  401e6c:	call   0x41d8f8
  401e71:	mov    ecx,eax
  401e73:	call   0x4037e8
  401e78:	mov    rbx,rax
  401e7b:	call   QWORD PTR [rip+0x2db0b]        # 0x42f98c
  401e81:	lea    rdx,[rip+0x1f379]        # 0x421201
  401e88:	lea    rcx,[rax+0x60]
  401e8c:	mov    r8,rbx
  401e8f:	call   0x401530
  401e94:	mov    ecx,0x1
  401e99:	call   0x41d8f8
  401e9e:	call   QWORD PTR [rip+0x2dae8]        # 0x42f98c
  401ea4:	lea    rdx,[rip+0x1f435]        # 0x4212e0
  401eab:	lea    rcx,[rax+0x60]
  401eaf:	call   0x401530
  401eb4:	mov    ecx,0x1
  401eb9:	call   0x41d8f8
  401ebe:	mov    ecx,eax
  401ec0:	call   0x4037e8
  401ec5:	mov    rbx,rax
  401ec8:	call   QWORD PTR [rip+0x2dabe]        # 0x42f98c
  401ece:	lea    rdx,[rip+0x1f2a3]        # 0x421178
  401ed5:	lea    rcx,[rax+0x60]
  401ed9:	mov    r8,rbx
  401edc:	call   0x401530
  401ee1:	mov    ecx,0x1
  401ee6:	call   0x41d8f8
  401eeb:	mov    ecx,eax
  401eed:	call   0x4037e8
  401ef2:	mov    rbx,rax
  401ef5:	call   QWORD PTR [rip+0x2da91]        # 0x42f98c
  401efb:	lea    rdx,[rip+0x1f11c]        # 0x42101e
  401f02:	lea    rcx,[rax+0x60]
  401f06:	mov    r8,rbx
  401f09:	call   0x401530
  401f0e:	mov    ecx,0x1
  401f13:	call   0x41d8f8
  401f18:	mov    ecx,eax
  401f1a:	call   0x4037e8
  401f1f:	mov    rbx,rax
  401f22:	call   QWORD PTR [rip+0x2da64]        # 0x42f98c
  401f28:	lea    rdx,[rip+0x1f2b1]        # 0x4211e0
  401f2f:	lea    rcx,[rax+0x60]
  401f33:	mov    r8,rbx
  401f36:	call   0x401530
  401f3b:	mov    ecx,0x1
  401f40:	call   0x41d8f8
  401f45:	mov    ecx,eax
  401f47:	call   0x4037e8
  401f4c:	mov    rbx,rax
  401f4f:	call   QWORD PTR [rip+0x2da37]        # 0x42f98c
  401f55:	lea    rdx,[rip+0x1f2f4]        # 0x421250
  401f5c:	lea    rcx,[rax+0x60]
  401f60:	mov    r8,rbx
  401f63:	call   0x401530
  401f68:	mov    ecx,0x1
  401f6d:	call   0x41d8f8
  401f72:	mov    rax,QWORD PTR [rbp+0x78]
  401f76:	mov    rbx,QWORD PTR [rax+0x4f8]
  401f7d:	call   QWORD PTR [rip+0x2da09]        # 0x42f98c
  401f83:	lea    rdx,[rip+0x1f23b]        # 0x4211c5
  401f8a:	lea    rcx,[rax+0x60]
  401f8e:	mov    r8,rbx
  401f91:	call   0x401530
  401f96:	mov    ecx,0x1
  401f9b:	call   0x41d8f8
  401fa0:	nop
  401fa1:	nop
  401fa2:	nop
  401fa3:	nop
  401fa4:	nop
  401fa5:	nop
  401fa6:	nop
  401fa7:	nop
  401fa8:	nop
  401fa9:	nop
  401faa:	nop
  401fab:	nop
  401fac:	nop
  401fad:	nop
  401fae:	nop
  401faf:	nop
  401fb0:	sub    rsp,0x38
  401fb4:	mov    QWORD PTR [rsp+0x50],r8
  401fb9:	lea    r8,[rsp+0x50]
  401fbe:	mov    QWORD PTR [rsp+0x58],r9
  401fc3:	mov    QWORD PTR [rsp+0x28],r8
  401fc8:	call   0x418d30
  401fcd:	add    rsp,0x38
  401fd1:	ret    
  401fd2:	nop    DWORD PTR [rax+0x0]
  401fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401fe0:	sub    rsp,0x38
  401fe4:	mov    QWORD PTR [rsp+0x48],rdx
  401fe9:	lea    rdx,[rsp+0x48]
  401fee:	mov    QWORD PTR [rsp+0x50],r8
  401ff3:	mov    QWORD PTR [rsp+0x58],r9
  401ff8:	mov    QWORD PTR [rsp+0x28],rdx
  401ffd:	call   0x418d60
  402002:	add    rsp,0x38
  402006:	ret    
  402007:	nop    WORD PTR [rax+rax*1+0x0]
  402010:	push   rbp
  402011:	push   rdi
  402012:	push   rsi
  402013:	push   rbx
  402014:	sub    rsp,0x38
  402018:	mov    rdi,rcx
  40201b:	lea    rcx,[rsp+0x28]
  402020:	mov    rsi,rdx
  402023:	mov    rbp,r8
  402026:	mov    rbx,r9
  402029:	call   0x403870
  40202e:	test   eax,eax
  402030:	js     0x402090
  402032:	mov    rcx,QWORD PTR [rsp+0x28]
  402037:	mov    r9,rdi
  40203a:	mov    r8,rsi
  40203d:	mov    edx,0x3
  402042:	call   0x403890
  402047:	test   eax,eax
  402049:	js     0x4020ea
  40204f:	test   rbx,rbx
  402052:	je     0x40206b
  402054:	mov    rcx,QWORD PTR [rsp+0x28]
  402059:	xor    edx,edx
  40205b:	mov    r8,rbx
  40205e:	call   0x403860
  402063:	test   eax,eax
  402065:	js     0x402117
  40206b:	mov    rcx,QWORD PTR [rsp+0x28]
  402070:	mov    rdx,rbp
  402073:	call   0x403880
  402078:	test   eax,eax
  40207a:	jne    0x4020bd
  40207c:	mov    rcx,QWORD PTR [rsp+0x28]
  402081:	call   0x403888
  402086:	nop
  402087:	add    rsp,0x38
  40208b:	pop    rbx
  40208c:	pop    rsi
  40208d:	pop    rdi
  40208e:	pop    rbp
  40208f:	ret    
  402090:	mov    ecx,eax
  402092:	call   0x4037e8
  402097:	mov    rbx,rax
  40209a:	call   QWORD PTR [rip+0x2d8ec]        # 0x42f98c
  4020a0:	lea    rdx,[rip+0x1f389]        # 0x421430
  4020a7:	lea    rcx,[rax+0x60]
  4020ab:	mov    r8,rbx
  4020ae:	call   0x401fb0
  4020b3:	mov    ecx,0x1
  4020b8:	call   0x41d8f8
  4020bd:	mov    ecx,eax
  4020bf:	call   0x4037e8
  4020c4:	mov    rbx,rax
  4020c7:	call   QWORD PTR [rip+0x2d8bf]        # 0x42f98c
  4020cd:	lea    rdx,[rip+0x1f39b]        # 0x42146f
  4020d4:	lea    rcx,[rax+0x60]
  4020d8:	mov    r8,rbx
  4020db:	call   0x401fb0
  4020e0:	mov    ecx,0x1
  4020e5:	call   0x41d8f8
  4020ea:	mov    ecx,eax
  4020ec:	call   0x4037e8
  4020f1:	mov    rbx,rax
  4020f4:	call   QWORD PTR [rip+0x2d892]        # 0x42f98c
  4020fa:	lea    rdx,[rip+0x1f341]        # 0x421442
  402101:	lea    rcx,[rax+0x60]
  402105:	mov    r8,rbx
  402108:	call   0x401fb0
  40210d:	mov    ecx,0x1
  402112:	call   0x41d8f8
  402117:	mov    ecx,eax
  402119:	call   0x4037e8
  40211e:	mov    rbx,rax
  402121:	call   QWORD PTR [rip+0x2d865]        # 0x42f98c
  402127:	lea    rdx,[rip+0x1f32a]        # 0x421458
  40212e:	lea    rcx,[rax+0x60]
  402132:	mov    r8,rbx
  402135:	call   0x401fb0
  40213a:	mov    ecx,0x1
  40213f:	call   0x41d8f8
  402144:	nop
  402145:	nop
  402146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402150:	push   r15
  402152:	push   r14
  402154:	push   r13
  402156:	push   r12
  402158:	push   rbp
  402159:	push   rdi
  40215a:	push   rsi
  40215b:	push   rbx
  40215c:	sub    rsp,0x4b8
  402163:	mov    r13,rcx
  402166:	mov    rsi,rdx
  402169:	mov    rdi,r8
  40216c:	mov    rbp,r9
  40216f:	lea    rbx,[rsp+0xb0]
  402177:	call   0x4036a0
  40217c:	test   r13,r13
  40217f:	je     0x402424
  402185:	lea    rdx,[rip+0x1f330]        # 0x4214bc
  40218c:	mov    rcx,r13
  40218f:	call   0x41d7d0
  402194:	test   rax,rax
  402197:	je     0x4024b0
  40219d:	lea    r9,[rax+0x7]
  4021a1:	lea    r8,[rip+0x1f31c]        # 0x4214c4
  4021a8:	lea    rcx,[rip+0x28e91]        # 0x42b040
  4021af:	mov    edx,0x200
  4021b4:	lea    r15,[rip+0x1f2c8]        # 0x421483
  4021bb:	call   0x410c30
  4021c0:	lea    rcx,[rip+0x28e79]        # 0x42b040
  4021c7:	mov    edx,0x2f
  4021cc:	call   0x41d820
  4021d1:	test   rax,rax
  4021d4:	je     0x4021dd
  4021d6:	lea    r15,[rax+0x1]
  4021da:	mov    BYTE PTR [rax],0x0
  4021dd:	lea    rcx,[rip+0x28e5c]        # 0x42b040
  4021e4:	mov    edx,0x3a
  4021e9:	call   0x41d820
  4021ee:	test   rax,rax
  4021f1:	je     0x402370
  4021f7:	lea    rcx,[rax+0x1]
  4021fb:	mov    BYTE PTR [rax],0x0
  4021fe:	call   0x41d910
  402203:	test   eax,eax
  402205:	mov    r9d,eax
  402208:	je     0x402370
  40220e:	lea    r14,[rsp+0x50]
  402213:	lea    r8,[rip+0x1f2ad]        # 0x4214c7
  40221a:	lea    r13,[rip+0x28e1f]        # 0x42b040
  402221:	mov    edx,0x10
  402226:	mov    rcx,r14
  402229:	call   0x410c30
  40222e:	mov    r12,QWORD PTR [rip+0x2d757]        # 0x42f98c
  402235:	call   r12
  402238:	lea    rdx,[rip+0x1f291]        # 0x4214d0
  40223f:	lea    rcx,[rax+0x60]
  402243:	mov    r8,r13
  402246:	call   0x401fb0
  40224b:	mov    r9,QWORD PTR [rsp+0x520]
  402253:	lea    r8,[rsp+0x40]
  402258:	mov    rcx,rsi
  40225b:	mov    rdx,rdi
  40225e:	mov    QWORD PTR [rsp+0x30],0x0
  402267:	mov    QWORD PTR [rsp+0x38],0x0
  402270:	mov    rsi,rbx
  402273:	call   0x402010
  402278:	mov    eax,DWORD PTR [rsp+0x48]
  40227c:	lea    r8,[rip+0x1f275]        # 0x4214f8
  402283:	mov    QWORD PTR [rsp+0x20],r13
  402288:	mov    r9,r15
  40228b:	mov    edx,0x400
  402290:	mov    rcx,rbx
  402293:	mov    DWORD PTR [rsp+0x28],eax
  402297:	call   0x410c30
  40229c:	mov    edx,DWORD PTR [rsi]
  40229e:	add    rsi,0x4
  4022a2:	lea    eax,[rdx-0x1010101]
  4022a8:	not    edx
  4022aa:	and    eax,edx
  4022ac:	and    eax,0x80808080
  4022b1:	je     0x40229c
  4022b3:	mov    edx,eax
  4022b5:	lea    rdi,[rsp+0x60]
  4022ba:	mov    r8,r14
  4022bd:	shr    edx,0x10
  4022c0:	test   eax,0x8080
  4022c5:	cmove  eax,edx
  4022c8:	lea    rdx,[rsi+0x2]
  4022cc:	mov    rcx,rdi
  4022cf:	cmove  rsi,rdx
  4022d3:	add    al,al
  4022d5:	lea    rax,[rip+0x1f298]        # 0x421574
  4022dc:	sbb    rsi,0x3
  4022e0:	mov    rdx,r13
  4022e3:	xor    r9d,r9d
  4022e6:	mov    QWORD PTR [rsp+0x20],rax
  4022eb:	sub    rsi,rbx
  4022ee:	call   0x4033d0
  4022f3:	mov    r8d,esi
  4022f6:	mov    rdx,rbx
  4022f9:	mov    rcx,rdi
  4022fc:	call   0x402ee0
  402301:	mov    r8d,DWORD PTR [rsp+0x48]
  402306:	mov    rdx,QWORD PTR [rsp+0x40]
  40230b:	mov    rcx,rdi
  40230e:	call   0x402ee0
  402313:	lea    rdx,[rip+0x28f26]        # 0x42b240
  40231a:	mov    r8d,0x1001
  402320:	mov    rcx,rdi
  402323:	call   0x402d00
  402328:	mov    rbx,rax
  40232b:	test   ebx,ebx
  40232d:	jle    0x402390
  40232f:	mov    esi,DWORD PTR [rsp+0x38]
  402333:	movsxd r14,ebx
  402336:	mov    rcx,QWORD PTR [rsp+0x30]
  40233b:	lea    rdx,[r14+rsi*1]
  40233f:	call   0x410be0
  402344:	test   rax,rax
  402347:	mov    QWORD PTR [rsp+0x30],rax
  40234c:	je     0x402563
  402352:	lea    rcx,[rax+rsi*1]
  402356:	lea    rdx,[rip+0x28ee3]        # 0x42b240
  40235d:	mov    r8,r14
  402360:	add    ebx,esi
  402362:	call   0x41d860
  402367:	mov    DWORD PTR [rsp+0x38],ebx
  40236b:	jmp    0x402313
  40236d:	nop    DWORD PTR [rax]
  402370:	lea    r13,[rip+0x28cc9]        # 0x42b040
  402377:	mov    eax,0x3038
  40237c:	mov    BYTE PTR [rsp+0x52],0x0
  402381:	lea    r14,[rsp+0x50]
  402386:	mov    WORD PTR [rsp+0x50],ax
  40238b:	jmp    0x40222e
  402390:	test   eax,eax
  402392:	jne    0x4024c0
  402398:	mov    r13d,DWORD PTR [rsp+0x38]
  40239d:	test   r13d,r13d
  4023a0:	je     0x4024c0
  4023a6:	mov    rcx,rdi
  4023a9:	call   0x403300
  4023ae:	mov    rsi,QWORD PTR [rsp+0x30]
  4023b3:	lea    r8,[rip+0x1f1f6]        # 0x4215b0
  4023ba:	mov    edx,r13d
  4023bd:	mov    r9d,0x4
  4023c3:	mov    rcx,rsi
  4023c6:	call   0x410900
  4023cb:	test   rax,rax
  4023ce:	je     0x402546
  4023d4:	lea    rbx,[rax+0x4]
  4023d8:	mov    r8,rsi
  4023db:	sub    r8,rbx
  4023de:	lea    ecx,[r8+r13*1]
  4023e2:	mov    DWORD PTR [rbp+0x8],ecx
  4023e5:	call   0x4104e0
  4023ea:	test   rax,rax
  4023ed:	mov    QWORD PTR [rbp+0x0],rax
  4023f1:	je     0x40253c
  4023f7:	mov    r8d,DWORD PTR [rbp+0x8]
  4023fb:	mov    rdx,rbx
  4023fe:	mov    rcx,rax
  402401:	call   0x41d860
  402406:	mov    rcx,rsi
  402409:	call   0x41d8a8
  40240e:	xor    eax,eax
  402410:	add    rsp,0x4b8
  402417:	pop    rbx
  402418:	pop    rsi
  402419:	pop    rdi
  40241a:	pop    rbp
  40241b:	pop    r12
  40241d:	pop    r13
  40241f:	pop    r14
  402421:	pop    r15
  402423:	ret    
  402424:	xor    edx,edx
  402426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402430:	lea    r12d,[rdx+0x1]
  402434:	mov    QWORD PTR [rsp+0x20],0x0
  40243d:	mov    r9,rbx
  402440:	mov    r8d,0x2716
  402446:	mov    rcx,rsi
  402449:	call   0x4037e0
  40244e:	cmp    eax,0xffffff97
  402451:	mov    edx,r12d
  402454:	je     0x402430
  402456:	test   eax,eax
  402458:	js     0x4024d6
  40245a:	mov    eax,DWORD PTR [rsp+0xb8]
  402461:	lea    ecx,[rax+0x1]
  402464:	call   0x4104e0
  402469:	mov    r8d,DWORD PTR [rsp+0xb8]
  402471:	mov    rdx,QWORD PTR [rsp+0xb0]
  402479:	mov    rcx,rax
  40247c:	mov    r13,rax
  40247f:	call   0x41d860
  402484:	mov    eax,DWORD PTR [rsp+0xb8]
  40248b:	mov    BYTE PTR [r13+rax*1+0x0],0x0
  402491:	mov    rax,QWORD PTR [rip+0x25528]        # 0x4279c0
  402498:	mov    rcx,QWORD PTR [rsp+0xb0]
  4024a0:	call   QWORD PTR [rax]
  4024a2:	jmp    0x402185
  4024a7:	nop    WORD PTR [rax+rax*1+0x0]
  4024b0:	lea    r15,[rip+0x1efcc]        # 0x421483
  4024b7:	jmp    0x402377
  4024bc:	nop    DWORD PTR [rax+0x0]
  4024c0:	lea    rcx,[rip+0x1f0e4]        # 0x4215ab
  4024c7:	call   0x41d848
  4024cc:	mov    eax,0xffffffff
  4024d1:	jmp    0x402410
  4024d6:	xor    edx,edx
  4024d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4024e0:	lea    r13d,[rdx+0x1]
  4024e4:	mov    QWORD PTR [rsp+0x20],0x0
  4024ed:	mov    r9,rbx
  4024f0:	mov    r8d,0x2716
  4024f6:	mov    rcx,rdi
  4024f9:	call   0x4037e0
  4024fe:	cmp    eax,0xffffff97
  402501:	mov    r12d,eax
  402504:	mov    edx,r13d
  402507:	je     0x4024e0
  402509:	test   eax,eax
  40250b:	jns    0x40245a
  402511:	mov    ecx,eax
  402513:	call   0x4037e8
  402518:	mov    rbx,rax
  40251b:	call   QWORD PTR [rip+0x2d46b]        # 0x42f98c
  402521:	lea    rdx,[rip+0x1ef60]        # 0x421488
  402528:	lea    rcx,[rax+0x60]
  40252c:	mov    r8,rbx
  40252f:	call   0x401fb0
  402534:	mov    eax,r12d
  402537:	jmp    0x402410
  40253c:	mov    eax,0xffffffff
  402541:	jmp    0x402410
  402546:	call   r12
  402549:	lea    rdx,[rip+0x1f068]        # 0x4215b8
  402550:	lea    rcx,[rax+0x60]
  402554:	call   0x401fb0
  402559:	mov    eax,0xffffffff
  40255e:	jmp    0x402410
  402563:	call   r12
  402566:	lea    rdx,[rip+0x1f01b]        # 0x421588
  40256d:	lea    rcx,[rax+0x60]
  402571:	call   0x401fb0
  402576:	mov    ecx,0x1
  40257b:	call   0x41d8f8
  402580:	nop
  402581:	nop    DWORD PTR [rax+rax*1+0x0]
  402586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402590:	push   rbx
  402591:	sub    rsp,0x20
  402595:	test   ecx,ecx
  402597:	mov    ebx,ecx
  402599:	je     0x402604
  40259b:	lea    rcx,[rip+0x1f036]        # 0x4215d8
  4025a2:	call   0x401fe0
  4025a7:	test   bl,0x1
  4025aa:	je     0x4025c4
  4025ac:	lea    rcx,[rip+0x1f035]        # 0x4215e8
  4025b3:	call   0x401fe0
  4025b8:	lea    rcx,[rip+0x1f02c]        # 0x4215eb
  4025bf:	call   0x401fe0
  4025c4:	test   bl,0x2
  4025c7:	je     0x4025e1
  4025c9:	lea    rcx,[rip+0x1f018]        # 0x4215e8
  4025d0:	call   0x401fe0
  4025d5:	lea    rcx,[rip+0x1f025]        # 0x421601
  4025dc:	call   0x401fe0
  4025e1:	test   bl,0x4
  4025e4:	jne    0x402615
  4025e6:	test   bl,0x8
  4025e9:	jne    0x402632
  4025eb:	test   bl,0x10
  4025ee:	jne    0x40264f
  4025f0:	test   bl,0x20
  4025f3:	jne    0x40266c
  4025f5:	and    ebx,0x40
  4025f8:	jne    0x40268d
  4025fe:	add    rsp,0x20
  402602:	pop    rbx
  402603:	ret    
  402604:	lea    rcx,[rip+0x1efd5]        # 0x4215e0
  40260b:	call   0x401fe0
  402610:	test   bl,0x4
  402613:	je     0x4025e6
  402615:	lea    rcx,[rip+0x1efcc]        # 0x4215e8
  40261c:	call   0x401fe0
  402621:	lea    rcx,[rip+0x1eff4]        # 0x42161c
  402628:	call   0x401fe0
  40262d:	test   bl,0x8
  402630:	je     0x4025eb
  402632:	lea    rcx,[rip+0x1efaf]        # 0x4215e8
  402639:	call   0x401fe0
  40263e:	lea    rcx,[rip+0x1eff2]        # 0x421637
  402645:	call   0x401fe0
  40264a:	test   bl,0x10
  40264d:	je     0x4025f0
  40264f:	lea    rcx,[rip+0x1ef92]        # 0x4215e8
  402656:	call   0x401fe0
  40265b:	lea    rcx,[rip+0x1efe8]        # 0x42164a
  402662:	call   0x401fe0
  402667:	test   bl,0x20
  40266a:	je     0x4025f5
  40266c:	lea    rcx,[rip+0x1ef75]        # 0x4215e8
  402673:	call   0x401fe0
  402678:	lea    rcx,[rip+0x1efdd]        # 0x42165c
  40267f:	call   0x401fe0
  402684:	and    ebx,0x40
  402687:	je     0x4025fe
  40268d:	lea    rcx,[rip+0x1ef54]        # 0x4215e8
  402694:	call   0x401fe0
  402699:	lea    rcx,[rip+0x1efda]        # 0x42167a
  4026a0:	add    rsp,0x20
  4026a4:	pop    rbx
  4026a5:	jmp    0x401fe0
  4026aa:	nop    WORD PTR [rax+rax*1+0x0]
  4026b0:	push   r12
  4026b2:	push   rbp
  4026b3:	push   rdi
  4026b4:	push   rsi
  4026b5:	push   rbx
  4026b6:	sub    rsp,0xa0
  4026bd:	mov    rbp,rdx
  4026c0:	mov    r12,r8
  4026c3:	mov    rsi,r9
  4026c6:	mov    rbx,rcx
  4026c9:	xor    ecx,ecx
  4026cb:	call   QWORD PTR [rip+0x2d38b]        # 0x42fa5c
  4026d1:	lea    rcx,[rsp+0x70]
  4026d6:	mov    rdi,rax
  4026d9:	call   0x403830
  4026de:	test   eax,eax
  4026e0:	js     0x40297f
  4026e6:	mov    rcx,QWORD PTR [rsp+0x70]
  4026eb:	mov    rdx,r12
  4026ee:	call   0x403838
  4026f3:	test   eax,eax
  4026f5:	js     0x4029ac
  4026fb:	mov    rcx,QWORD PTR [rsp+0x70]
  402700:	xor    edx,edx
  402702:	mov    r8,rbx
  402705:	call   0x403858
  40270a:	test   eax,eax
  40270c:	js     0x402860
  402712:	mov    rcx,QWORD PTR [rsp+0x70]
  402717:	lea    r8,[rsp+0x68]
  40271c:	xor    r9d,r9d
  40271f:	mov    rdx,rbp
  402722:	call   0x403818
  402727:	test   eax,eax
  402729:	js     0x402a06
  40272f:	mov    ecx,DWORD PTR [rsp+0x68]
  402733:	test   ecx,ecx
  402735:	jne    0x402880
  40273b:	lea    rax,[rsp+0x6c]
  402740:	lea    rbx,[rsp+0x78]
  402745:	lea    r12,[rsp+0x88]
  40274d:	lea    rbp,[rsp+0x80]
  402755:	mov    rcx,QWORD PTR [rsp+0x70]
  40275a:	xor    r9d,r9d
  40275d:	xor    r8d,r8d
  402760:	xor    edx,edx
  402762:	mov    QWORD PTR [rsp+0x50],0x0
  40276b:	mov    QWORD PTR [rsp+0x48],rbx
  402770:	mov    QWORD PTR [rsp+0x40],r12
  402775:	mov    QWORD PTR [rsp+0x38],rbp
  40277a:	mov    QWORD PTR [rsp+0x30],rax
  40277f:	mov    QWORD PTR [rsp+0x28],0x0
  402788:	mov    QWORD PTR [rsp+0x20],0x0
  402791:	call   0x403840
  402796:	test   eax,eax
  402798:	js     0x4029d9
  40279e:	cmp    DWORD PTR [rsp+0x6c],0x1
  4027a3:	je     0x402930
  4027a9:	mov    rbx,QWORD PTR [rsp+0x88]
  4027b1:	cmp    rbx,0xffffffffffffffff
  4027b5:	je     0x4028d0
  4027bb:	cmp    rbx,rdi
  4027be:	jl     0x40294f
  4027c4:	test   rsi,rsi
  4027c7:	je     0x402827
  4027c9:	mov    rcx,QWORD PTR [rsp+0x70]
  4027ce:	lea    r8,[rsp+0x90]
  4027d6:	xor    edx,edx
  4027d8:	call   0x403848
  4027dd:	cmp    eax,0xffffffc8
  4027e0:	je     0x402902
  4027e6:	test   eax,eax
  4027e8:	js     0x402a53
  4027ee:	mov    r8d,DWORD PTR [rsp+0x98]
  4027f6:	cmp    r8d,DWORD PTR [rsi+0x8]
  4027fa:	jne    0x402a33
  402800:	mov    rbx,QWORD PTR [rsp+0x90]
  402808:	mov    rcx,QWORD PTR [rsi]
  40280b:	mov    rdx,rbx
  40280e:	call   0x41d868
  402813:	test   eax,eax
  402815:	jne    0x402a33
  40281b:	mov    rax,QWORD PTR [rip+0x2519e]        # 0x4279c0
  402822:	mov    rcx,rbx
  402825:	call   QWORD PTR [rax]
  402827:	mov    rcx,rbp
  40282a:	mov    ebx,0x1
  40282f:	call   QWORD PTR [rip+0x2d19f]        # 0x42f9d4
  402835:	lea    rcx,[rip+0x1f094]        # 0x4218d0
  40283c:	mov    rdx,rax
  40283f:	call   0x401fe0
  402844:	mov    rcx,QWORD PTR [rsp+0x70]
  402849:	call   0x403850
  40284e:	mov    eax,ebx
  402850:	add    rsp,0xa0
  402857:	pop    rbx
  402858:	pop    rsi
  402859:	pop    rdi
  40285a:	pop    rbp
  40285b:	pop    r12
  40285d:	ret    
  40285e:	xchg   ax,ax
  402860:	cmp    eax,0xffffffc8
  402863:	je     0x4028b4
  402865:	lea    rcx,[rip+0x1ee7c]        # 0x4216e8
  40286c:	mov    ebx,0xffffffff
  402871:	call   0x401fe0
  402876:	jmp    0x402844
  402878:	nop    DWORD PTR [rax+rax*1+0x0]
  402880:	lea    rcx,[rip+0x1eec4]        # 0x42174b
  402887:	call   0x401fe0
  40288c:	mov    ecx,DWORD PTR [rsp+0x68]
  402890:	call   0x402590
  402895:	lea    rcx,[rip+0x1eecd]        # 0x421769
  40289c:	call   0x401fe0
  4028a1:	mov    edx,DWORD PTR [rsp+0x68]
  4028a5:	test   edx,edx
  4028a7:	je     0x40273b
  4028ad:	mov    ebx,0xffffffff
  4028b2:	jmp    0x402844
  4028b4:	lea    rcx,[rip+0x1edfd]        # 0x4216b8
  4028bb:	mov    ebx,0xffffffff
  4028c0:	call   0x401fe0
  4028c5:	jmp    0x402844
  4028ca:	nop    WORD PTR [rax+rax*1+0x0]
  4028d0:	sub    rdi,QWORD PTR [rsp+0x80]
  4028d8:	cmp    rdi,0x3f480
  4028df:	jle    0x4027c4
  4028e5:	mov    rcx,rbp
  4028e8:	call   QWORD PTR [rip+0x2d0e6]        # 0x42f9d4
  4028ee:	lea    rcx,[rip+0x1eebb]        # 0x4217b0
  4028f5:	mov    rdx,rax
  4028f8:	call   0x401fe0
  4028fd:	jmp    0x402844
  402902:	mov    eax,DWORD PTR [rsp+0xf0]
  402909:	test   eax,eax
  40290b:	je     0x402827
  402911:	call   QWORD PTR [rip+0x2d075]        # 0x42f98c
  402917:	lea    rdx,[rip+0x1ef22]        # 0x421840
  40291e:	lea    rcx,[rax+0x60]
  402922:	call   0x401fb0
  402927:	jmp    0x402827
  40292c:	nop    DWORD PTR [rax+0x0]
  402930:	mov    rcx,rbx
  402933:	xor    ebx,ebx
  402935:	call   QWORD PTR [rip+0x2d099]        # 0x42f9d4
  40293b:	lea    rcx,[rip+0x1ee46]        # 0x421788
  402942:	mov    rdx,rax
  402945:	call   0x401fe0
  40294a:	jmp    0x402844
  40294f:	mov    rbx,QWORD PTR [rip+0x2d07e]        # 0x42f9d4
  402956:	mov    rcx,r12
  402959:	call   rbx
  40295b:	mov    rcx,rbp
  40295e:	mov    rsi,rax
  402961:	call   rbx
  402963:	lea    rcx,[rip+0x1ee86]        # 0x4217f0
  40296a:	mov    rdx,rax
  40296d:	mov    r8,rsi
  402970:	mov    ebx,0xffffffff
  402975:	call   0x401fe0
  40297a:	jmp    0x402844
  40297f:	mov    ecx,eax
  402981:	call   0x4037e8
  402986:	mov    rbx,rax
  402989:	call   QWORD PTR [rip+0x2cffd]        # 0x42f98c
  40298f:	lea    rdx,[rip+0x1ecf8]        # 0x42168e
  402996:	lea    rcx,[rax+0x60]
  40299a:	mov    r8,rbx
  40299d:	call   0x401fb0
  4029a2:	mov    ecx,0x1
  4029a7:	call   0x41d8f8
  4029ac:	mov    ecx,eax
  4029ae:	call   0x4037e8
  4029b3:	mov    rbx,rax
  4029b6:	call   QWORD PTR [rip+0x2cfd0]        # 0x42f98c
  4029bc:	lea    rdx,[rip+0x1ecde]        # 0x4216a1
  4029c3:	lea    rcx,[rax+0x60]
  4029c7:	mov    r8,rbx
  4029ca:	call   0x401fb0
  4029cf:	mov    ecx,0x1
  4029d4:	call   0x41d8f8
  4029d9:	mov    ecx,eax
  4029db:	call   0x4037e8
  4029e0:	mov    rbx,rax
  4029e3:	call   QWORD PTR [rip+0x2cfa3]        # 0x42f98c
  4029e9:	lea    rdx,[rip+0x1ed7c]        # 0x42176c
  4029f0:	lea    rcx,[rax+0x60]
  4029f4:	mov    r8,rbx
  4029f7:	call   0x401fb0
  4029fc:	mov    ecx,0x1
  402a01:	call   0x41d8f8
  402a06:	mov    ecx,eax
  402a08:	call   0x4037e8
  402a0d:	mov    rbx,rax
  402a10:	call   QWORD PTR [rip+0x2cf76]        # 0x42f98c
  402a16:	lea    rdx,[rip+0x1ed0b]        # 0x421728
  402a1d:	lea    rcx,[rax+0x60]
  402a21:	mov    r8,rbx
  402a24:	call   0x401fb0
  402a29:	mov    ecx,0x1
  402a2e:	call   0x41d8f8
  402a33:	call   QWORD PTR [rip+0x2cf53]        # 0x42f98c
  402a39:	lea    rdx,[rip+0x1ee68]        # 0x4218a8
  402a40:	lea    rcx,[rax+0x60]
  402a44:	call   0x401fb0
  402a49:	mov    ecx,0x1
  402a4e:	call   0x41d8f8
  402a53:	mov    ecx,eax
  402a55:	call   0x4037e8
  402a5a:	mov    rbx,rax
  402a5d:	call   QWORD PTR [rip+0x2cf29]        # 0x42f98c
  402a63:	lea    rdx,[rip+0x1ee16]        # 0x421880
  402a6a:	lea    rcx,[rax+0x60]
  402a6e:	mov    r8,rbx
  402a71:	call   0x401fb0
  402a76:	mov    ecx,0x1
  402a7b:	call   0x41d8f8
  402a80:	nop
  402a81:	nop
  402a82:	nop
  402a83:	nop
  402a84:	nop
  402a85:	nop
  402a86:	nop
  402a87:	nop
  402a88:	nop
  402a89:	nop
  402a8a:	nop
  402a8b:	nop
  402a8c:	nop
  402a8d:	nop
  402a8e:	nop
  402a8f:	nop
  402a90:	sub    rsp,0x38
  402a94:	mov    QWORD PTR [rsp+0x50],r8
  402a99:	lea    r8,[rsp+0x50]
  402a9e:	mov    QWORD PTR [rsp+0x58],r9
  402aa3:	mov    QWORD PTR [rsp+0x28],r8
  402aa8:	call   0x418d30
  402aad:	add    rsp,0x38
  402ab1:	ret    
  402ab2:	nop    DWORD PTR [rax+0x0]
  402ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ac0:	sub    rsp,0x38
  402ac4:	mov    QWORD PTR [rsp+0x48],rdx
  402ac9:	lea    rdx,[rsp+0x48]
  402ace:	mov    QWORD PTR [rsp+0x50],r8
  402ad3:	mov    QWORD PTR [rsp+0x58],r9
  402ad8:	mov    QWORD PTR [rsp+0x28],rdx
  402add:	call   0x418d60
  402ae2:	add    rsp,0x38
  402ae6:	ret    
  402ae7:	nop    WORD PTR [rax+rax*1+0x0]
  402af0:	push   rbp
  402af1:	push   rdi
  402af2:	push   rsi
  402af3:	push   rbx
  402af4:	sub    rsp,0x28
  402af8:	mov    ebp,edx
  402afa:	mov    rsi,rcx
  402afd:	mov    rcx,r8
  402b00:	mov    rbx,r8
  402b03:	call   0x41d7f8
  402b08:	test   ebp,ebp
  402b0a:	mov    rdi,rax
  402b0d:	jne    0x402b30
  402b0f:	mov    ecx,DWORD PTR [rsi]
  402b11:	xor    r9d,r9d
  402b14:	movsxd r8,edi
  402b17:	mov    rdx,rbx
  402b1a:	call   0x415120
  402b1f:	cmp    eax,0xffffffff
  402b22:	je     0x402b4b
  402b24:	cdqe   
  402b26:	add    rsp,0x28
  402b2a:	pop    rbx
  402b2b:	pop    rsi
  402b2c:	pop    rdi
  402b2d:	pop    rbp
  402b2e:	ret    
  402b2f:	nop
  402b30:	call   QWORD PTR [rip+0x2ce56]        # 0x42f98c
  402b36:	lea    rdx,[rip+0x1edd3]        # 0x421910
  402b3d:	lea    rcx,[rax+0x60]
  402b41:	mov    r8,rbx
  402b44:	call   0x402a90
  402b49:	jmp    0x402b0f
  402b4b:	call   QWORD PTR [rip+0x2ce3b]        # 0x42f98c
  402b51:	lea    rdx,[rip+0x1edcf]        # 0x421927
  402b58:	lea    rcx,[rax+0x60]
  402b5c:	mov    r8,rbx
  402b5f:	call   0x402a90
  402b64:	mov    ecx,0x1
  402b69:	call   0x41d8f8
  402b6e:	nop
  402b6f:	nop
  402b70:	push   r15
  402b72:	push   r14
  402b74:	push   r13
  402b76:	push   r12
  402b78:	push   rbp
  402b79:	push   rdi
  402b7a:	push   rsi
  402b7b:	push   rbx
  402b7c:	sub    rsp,0x678
  402b83:	test   r8,r8
  402b86:	mov    rdi,rcx
  402b89:	mov    r13,rdx
  402b8c:	mov    rsi,r8
  402b8f:	mov    r12d,r9d
  402b92:	je     0x402bb6
  402b94:	mov    edx,DWORD PTR [rdx]
  402b96:	test   edx,edx
  402b98:	je     0x402bb6
  402b9a:	call   QWORD PTR [rip+0x2cdec]        # 0x42f98c
  402ba0:	lea    rdx,[rip+0x1ed99]        # 0x421940
  402ba7:	lea    rcx,[rax+0x60]
  402bab:	mov    r9,rsi
  402bae:	mov    r8d,r12d
  402bb1:	call   0x402a90
  402bb6:	lea    rax,[rsp+0x60]
  402bbb:	lea    r14,[rsp+0x50]
  402bc0:	lea    rbx,[rsp+0x270]
  402bc8:	mov    ebp,r12d
  402bcb:	mov    QWORD PTR [rsp+0x38],rax
  402bd0:	movsxd rax,DWORD PTR [rdi]
  402bd3:	mov    rdx,QWORD PTR [rsp+0x38]
  402bd8:	xor    r9d,r9d
  402bdb:	xor    r8d,r8d
  402bde:	mov    QWORD PTR [rsp+0x20],r14
  402be3:	mov    DWORD PTR [rsp+0x60],0x1
  402beb:	mov    QWORD PTR [rsp+0x50],0xa
  402bf4:	mov    DWORD PTR [rsp+0x58],0x0
  402bfc:	mov    rcx,rax
  402bff:	mov    QWORD PTR [rsp+0x68],rax
  402c04:	add    ecx,0x1
  402c07:	call   0x414430
  402c0c:	test   eax,eax
  402c0e:	jle    0x402cb0
  402c14:	mov    ecx,DWORD PTR [rdi]
  402c16:	xor    r9d,r9d
  402c19:	mov    r8d,0x3ff
  402c1f:	mov    rdx,rbx
  402c22:	call   0x413c70
  402c27:	cmp    eax,0xffffffff
  402c2a:	mov    r15,rax
  402c2d:	mov    DWORD PTR [rsp+0x44],eax
  402c31:	je     0x402cb0
  402c33:	movsxd r11,eax
  402c36:	test   rsi,rsi
  402c39:	mov    BYTE PTR [rsp+r11*1+0x270],0x0
  402c42:	je     0x402c90
  402c44:	mov    eax,DWORD PTR [r13+0x0]
  402c48:	test   eax,eax
  402c4a:	jne    0x402cd3
  402c50:	mov    r9,rbp
  402c53:	mov    r8,rsi
  402c56:	mov    rdx,r11
  402c59:	mov    rcx,rbx
  402c5c:	call   0x410900
  402c61:	test   rax,rax
  402c64:	je     0x402c71
  402c66:	cmp    rax,rbx
  402c69:	je     0x402c71
  402c6b:	cmp    BYTE PTR [rax-0x1],0xa
  402c6f:	je     0x402c90
  402c71:	cmp    r15d,r12d
  402c74:	jl     0x402bd0
  402c7a:	mov    r8,rbp
  402c7d:	mov    rdx,rsi
  402c80:	mov    rcx,rbx
  402c83:	call   0x41d7f0
  402c88:	test   eax,eax
  402c8a:	jne    0x402bd0
  402c90:	movsxd rax,DWORD PTR [rsp+0x44]
  402c95:	add    rsp,0x678
  402c9c:	pop    rbx
  402c9d:	pop    rsi
  402c9e:	pop    rdi
  402c9f:	pop    rbp
  402ca0:	pop    r12
  402ca2:	pop    r13
  402ca4:	pop    r14
  402ca6:	pop    r15
  402ca8:	ret    
  402ca9:	nop    DWORD PTR [rax+0x0]
  402cb0:	call   QWORD PTR [rip+0x2ccd6]        # 0x42f98c
  402cb6:	lea    rdx,[rip+0x1eca2]        # 0x42195f
  402cbd:	lea    rcx,[rax+0x60]
  402cc1:	mov    r8,rsi
  402cc4:	call   0x402a90
  402cc9:	mov    ecx,0x1
  402cce:	call   0x41d8f8
  402cd3:	mov    QWORD PTR [rsp+0x48],r11
  402cd8:	call   QWORD PTR [rip+0x2ccae]        # 0x42f98c
  402cde:	lea    rdx,[rip+0x1ec8e]        # 0x421973
  402ce5:	lea    rcx,[rax+0x60]
  402ce9:	mov    r8,rbx
  402cec:	call   0x402a90
  402cf1:	mov    r11,QWORD PTR [rsp+0x48]
  402cf6:	jmp    0x402c50
  402cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  402d00:	push   rbp
  402d01:	push   rdi
  402d02:	push   rsi
  402d03:	push   rbx
  402d04:	sub    rsp,0x28
  402d08:	mov    eax,DWORD PTR [rcx+0x10]
  402d0b:	mov    rbx,rcx
  402d0e:	mov    rdi,rdx
  402d11:	movsxd rsi,r8d
  402d14:	test   eax,eax
  402d16:	jne    0x402d60
  402d18:	mov    rbp,QWORD PTR [rip+0x2ccbd]        # 0x42f9dc
  402d1f:	jmp    0x402d28
  402d21:	call   rbp
  402d23:	cmp    DWORD PTR [rax],0x4
  402d26:	jne    0x402d85
  402d28:	mov    ecx,DWORD PTR [rbx]
  402d2a:	xor    r9d,r9d
  402d2d:	mov    r8,rsi
  402d30:	mov    rdx,rdi
  402d33:	call   0x413c70
  402d38:	cmp    eax,0xffffffff
  402d3b:	mov    r9d,eax
  402d3e:	je     0x402d21
  402d40:	movsxd rax,r9d
  402d43:	add    rsp,0x28
  402d47:	pop    rbx
  402d48:	pop    rsi
  402d49:	pop    rdi
  402d4a:	pop    rbp
  402d4b:	ret    
  402d4c:	nop    DWORD PTR [rax+0x0]
  402d50:	mov    rcx,QWORD PTR [rbx+0x8]
  402d54:	xor    edx,edx
  402d56:	call   0x403898
  402d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d60:	mov    rcx,QWORD PTR [rbx+0x8]
  402d64:	mov    r8,rsi
  402d67:	mov    rdx,rdi
  402d6a:	call   0x403810
  402d6f:	cmp    eax,0xfffffedb
  402d74:	mov    r9d,eax
  402d77:	je     0x402d50
  402d79:	cmp    eax,0xffffffe4
  402d7c:	je     0x402d60
  402d7e:	cmp    eax,0xffffffcc
  402d81:	je     0x402d60
  402d83:	jmp    0x402d40
  402d85:	mov    rax,0xffffffffffffffff
  402d8c:	add    rsp,0x28
  402d90:	pop    rbx
  402d91:	pop    rsi
  402d92:	pop    rdi
  402d93:	pop    rbp
  402d94:	ret    
  402d95:	nop
  402d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402da0:	push   rsi
  402da1:	push   rbx
  402da2:	sub    rsp,0x38
  402da6:	mov    rsi,rdx
  402da9:	mov    edx,DWORD PTR [rcx+0x10]
  402dac:	mov    rbx,rcx
  402daf:	test   edx,edx
  402db1:	jne    0x402de0
  402db3:	mov    rdx,rsi
  402db6:	mov    rcx,rbx
  402db9:	call   0x402d00
  402dbe:	mov    rsi,rax
  402dc1:	mov    eax,DWORD PTR [rbx+0x10]
  402dc4:	test   eax,eax
  402dc6:	je     0x402dd3
  402dc8:	mov    rcx,QWORD PTR [rbx+0x8]
  402dcc:	xor    edx,edx
  402dce:	call   0x4037f8
  402dd3:	movsxd rax,esi
  402dd6:	add    rsp,0x38
  402dda:	pop    rbx
  402ddb:	pop    rsi
  402ddc:	ret    
  402ddd:	nop    DWORD PTR [rax]
  402de0:	mov    rcx,QWORD PTR [rcx+0x8]
  402de4:	mov    edx,r9d
  402de7:	mov    DWORD PTR [rsp+0x2c],r8d
  402dec:	call   0x4037f8
  402df1:	mov    r8d,DWORD PTR [rsp+0x2c]
  402df6:	jmp    0x402db3
  402df8:	nop    DWORD PTR [rax+rax*1+0x0]
  402e00:	push   r13
  402e02:	push   r12
  402e04:	push   rbp
  402e05:	push   rdi
  402e06:	push   rsi
  402e07:	push   rbx
  402e08:	sub    rsp,0x28
  402e0c:	mov    rbp,rdx
  402e0f:	mov    edx,DWORD PTR [rcx+0x10]
  402e12:	mov    rdi,rcx
  402e15:	mov    r12d,r8d
  402e18:	mov    rsi,r9
  402e1b:	test   edx,edx
  402e1d:	je     0x402e74
  402e1f:	movsxd r13,r8d
  402e22:	test   rsi,rsi
  402e25:	mov    rcx,QWORD PTR [rdi+0x8]
  402e29:	je     0x402e65
  402e2b:	mov    r9,rsi
  402e2e:	mov    r8,r13
  402e31:	mov    rdx,rbp
  402e34:	call   0x403800
  402e39:	mov    ebx,eax
  402e3b:	cmp    ebx,0xffffffcc
  402e3e:	je     0x402e22
  402e40:	cmp    ebx,0xffffffe4
  402e43:	je     0x402e22
  402e45:	cmp    ebx,r12d
  402e48:	je     0x402e55
  402e4a:	test   ebx,ebx
  402e4c:	jle    0x402e55
  402e4e:	mov    eax,DWORD PTR [rdi+0x40]
  402e51:	test   eax,eax
  402e53:	jne    0x402ea1
  402e55:	movsxd rax,ebx
  402e58:	add    rsp,0x28
  402e5c:	pop    rbx
  402e5d:	pop    rsi
  402e5e:	pop    rdi
  402e5f:	pop    rbp
  402e60:	pop    r12
  402e62:	pop    r13
  402e64:	ret    
  402e65:	mov    r8,r13
  402e68:	mov    rdx,rbp
  402e6b:	call   0x403808
  402e70:	mov    ebx,eax
  402e72:	jmp    0x402e3b
  402e74:	movsxd rsi,r8d
  402e77:	mov    r13,QWORD PTR [rip+0x2cb5e]        # 0x42f9dc
  402e7e:	jmp    0x402e88
  402e80:	call   r13
  402e83:	cmp    DWORD PTR [rax],0x4
  402e86:	jne    0x402ec0
  402e88:	mov    ecx,DWORD PTR [rdi]
  402e8a:	xor    r9d,r9d
  402e8d:	mov    r8,rsi
  402e90:	mov    rdx,rbp
  402e93:	call   0x415120
  402e98:	cmp    eax,0xffffffff
  402e9b:	mov    ebx,eax
  402e9d:	je     0x402e80
  402e9f:	jmp    0x402e45
  402ea1:	call   QWORD PTR [rip+0x2cae5]        # 0x42f98c
  402ea7:	lea    rdx,[rip+0x1eae2]        # 0x421990
  402eae:	lea    rcx,[rax+0x60]
  402eb2:	mov    r9d,r12d
  402eb5:	mov    r8d,ebx
  402eb8:	call   0x402a90
  402ebd:	jmp    0x402e55
  402ebf:	nop
  402ec0:	mov    rax,0xffffffffffffffff
  402ec7:	add    rsp,0x28
  402ecb:	pop    rbx
  402ecc:	pop    rsi
  402ecd:	pop    rdi
  402ece:	pop    rbp
  402ecf:	pop    r12
  402ed1:	pop    r13
  402ed3:	ret    
  402ed4:	xchg   ax,ax
  402ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ee0:	xor    r9d,r9d
  402ee3:	jmp    0x402e00
  402ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  402ef0:	push   rdi
  402ef1:	push   rsi
  402ef2:	push   rbx
  402ef3:	sub    rsp,0x220
  402efa:	test   rdx,rdx
  402efd:	je     0x402f25
  402eff:	mov    r8d,DWORD PTR [rcx+0x10]
  402f03:	test   r8d,r8d
  402f06:	jne    0x402f25
  402f08:	mov    rbx,rdx
  402f0b:	mov    rsi,rcx
  402f0e:	lea    rdx,[rip+0x1eaa2]        # 0x4219b7
  402f15:	mov    rcx,rbx
  402f18:	mov    rdi,QWORD PTR [rip+0x2cb35]        # 0x42fa54
  402f1f:	call   rdi
  402f21:	test   eax,eax
  402f23:	jne    0x402f30
  402f25:	add    rsp,0x220
  402f2c:	pop    rbx
  402f2d:	pop    rsi
  402f2e:	pop    rdi
  402f2f:	ret    
  402f30:	lea    rdx,[rip+0x1ea86]        # 0x4219bd
  402f37:	mov    rcx,rbx
  402f3a:	call   rdi
  402f3c:	test   eax,eax
  402f3e:	jne    0x402ff0
  402f44:	mov    eax,DWORD PTR [rsi+0x40]
  402f47:	test   eax,eax
  402f49:	je     0x402f57
  402f4b:	lea    rcx,[rip+0x1ea7b]        # 0x4219cd
  402f52:	call   0x402ac0
  402f57:	lea    rbx,[rsi+0x40]
  402f5b:	lea    r8,[rip+0x1ea86]        # 0x4219e8
  402f62:	mov    rcx,rsi
  402f65:	mov    r9d,0x4
  402f6b:	lea    rdi,[rsp+0x20]
  402f70:	mov    rdx,rbx
  402f73:	call   0x402b70
  402f78:	mov    r9,QWORD PTR [rsi+0x18]
  402f7c:	lea    r8,[rip+0x1ea6a]        # 0x4219ed
  402f83:	mov    rcx,rdi
  402f86:	mov    edx,0x200
  402f8b:	call   0x410c30
  402f90:	mov    edx,DWORD PTR [rsi+0x40]
  402f93:	mov    r8,rdi
  402f96:	mov    rcx,rsi
  402f99:	call   0x402af0
  402f9e:	lea    r8,[rip+0x1ea51]        # 0x4219f6
  402fa5:	mov    r9d,0x4
  402fab:	mov    rdx,rbx
  402fae:	mov    rcx,rsi
  402fb1:	call   0x402b70
  402fb6:	mov    edx,DWORD PTR [rsi+0x40]
  402fb9:	lea    r8,[rip+0x1ea3b]        # 0x4219fb
  402fc0:	mov    rcx,rsi
  402fc3:	call   0x402af0
  402fc8:	lea    r8,[rip+0x1ea19]        # 0x4219e8
  402fcf:	mov    r9d,0x4
  402fd5:	mov    rdx,rbx
  402fd8:	mov    rcx,rsi
  402fdb:	call   0x402b70
  402fe0:	nop
  402fe1:	add    rsp,0x220
  402fe8:	pop    rbx
  402fe9:	pop    rsi
  402fea:	pop    rdi
  402feb:	ret    
  402fec:	nop    DWORD PTR [rax+0x0]
  402ff0:	lea    rdx,[rip+0x1e9cb]        # 0x4219c2
  402ff7:	mov    rcx,rbx
  402ffa:	call   rdi
  402ffc:	test   eax,eax
  402ffe:	je     0x402f44
  403004:	lea    rdx,[rip+0x1e9fa]        # 0x421a05
  40300b:	mov    rcx,rbx
  40300e:	call   rdi
  403010:	test   eax,eax
  403012:	jne    0x403084
  403014:	mov    edx,DWORD PTR [rsi+0x40]
  403017:	test   edx,edx
  403019:	je     0x40302a
  40301b:	lea    rcx,[rip+0x1e9ee]        # 0x421a10
  403022:	call   0x402ac0
  403027:	mov    edx,DWORD PTR [rsi+0x40]
  40302a:	lea    r8,[rip+0x1e9fa]        # 0x421a2b
  403031:	mov    rcx,rsi
  403034:	lea    rbx,[rsi+0x40]
  403038:	call   0x402af0
  40303d:	lea    r8,[rip+0x1e9f6]        # 0x421a3a
  403044:	mov    r9d,0x4
  40304a:	mov    rdx,rbx
  40304d:	mov    rcx,rsi
  403050:	call   0x402b70
  403055:	mov    edx,DWORD PTR [rsi+0x40]
  403058:	lea    r8,[rip+0x1e9e0]        # 0x421a3f
  40305f:	mov    rcx,rsi
  403062:	call   0x402af0
  403067:	lea    r8,[rip+0x1e9cc]        # 0x421a3a
  40306e:	mov    r9d,0x4
  403074:	mov    rdx,rbx
  403077:	mov    rcx,rsi
  40307a:	call   0x402b70
  40307f:	jmp    0x402f25
  403084:	lea    rdx,[rip+0x1e97f]        # 0x421a0a
  40308b:	mov    rcx,rbx
  40308e:	call   rdi
  403090:	test   eax,eax
  403092:	je     0x403014
  403094:	lea    rdx,[rip+0x1e9b1]        # 0x421a4c
  40309b:	mov    rcx,rbx
  40309e:	call   rdi
  4030a0:	test   eax,eax
  4030a2:	jne    0x403130
  4030a8:	cmp    DWORD PTR [rsi+0x40],0x0
  4030ac:	je     0x4030ba
  4030ae:	lea    rcx,[rip+0x1e99c]        # 0x421a51
  4030b5:	call   0x402ac0
  4030ba:	lea    rbx,[rsp+0x20]
  4030bf:	mov    r9,QWORD PTR [rsi+0x18]
  4030c3:	lea    r8,[rip+0x1e9a6]        # 0x421a70
  4030ca:	mov    edx,0x200
  4030cf:	mov    rcx,rbx
  4030d2:	call   0x410c30
  4030d7:	mov    edx,DWORD PTR [rsi+0x40]
  4030da:	mov    r8,rbx
  4030dd:	mov    rcx,rsi
  4030e0:	lea    rbx,[rsi+0x40]
  4030e4:	call   0x402af0
  4030e9:	lea    r8,[rip+0x1e9ed]        # 0x421add
  4030f0:	mov    r9d,0x2
  4030f6:	mov    rdx,rbx
  4030f9:	mov    rcx,rsi
  4030fc:	call   0x402b70
  403101:	mov    edx,DWORD PTR [rsi+0x40]
  403104:	lea    r8,[rip+0x1e9d5]        # 0x421ae0
  40310b:	mov    rcx,rsi
  40310e:	call   0x402af0
  403113:	lea    r8,[rip+0x1e9fa]        # 0x421b14
  40311a:	mov    r9d,0x8
  403120:	mov    rdx,rbx
  403123:	mov    rcx,rsi
  403126:	call   0x402b70
  40312b:	jmp    0x402f25
  403130:	lea    rdx,[rip+0x1e9e6]        # 0x421b1d
  403137:	mov    rcx,rbx
  40313a:	call   rdi
  40313c:	test   eax,eax
  40313e:	jne    0x403180
  403140:	cmp    DWORD PTR [rsi+0x40],0x0
  403144:	je     0x403152
  403146:	lea    rcx,[rip+0x1e9d5]        # 0x421b22
  40314d:	call   0x402ac0
  403152:	mov    ecx,DWORD PTR [rsi]
  403154:	lea    rdx,[rip+0x1e9e5]        # 0x421b40
  40315b:	xor    r9d,r9d
  40315e:	mov    r8d,0x1f
  403164:	call   0x415120
  403169:	lea    rdx,[rsi+0x40]
  40316d:	xor    r9d,r9d
  403170:	xor    r8d,r8d
  403173:	mov    rcx,rsi
  403176:	call   0x402b70
  40317b:	jmp    0x402f25
  403180:	lea    rdx,[rip+0x1e9d9]        # 0x421b60
  403187:	mov    rcx,rbx
  40318a:	call   rdi
  40318c:	test   eax,eax
  40318e:	jne    0x4031f7
  403190:	cmp    DWORD PTR [rsi+0x40],0x0
  403194:	jne    0x40324b
  40319a:	mov    edx,DWORD PTR [rsi+0x40]
  40319d:	lea    r8,[rip+0x1e9df]        # 0x421b83
  4031a4:	mov    rcx,rsi
  4031a7:	lea    rbx,[rsi+0x40]
  4031ab:	call   0x402af0
  4031b0:	lea    r8,[rip+0x1e9d3]        # 0x421b8a
  4031b7:	mov    r9d,0x4
  4031bd:	mov    rdx,rbx
  4031c0:	mov    rcx,rsi
  4031c3:	call   0x402b70
  4031c8:	mov    edx,DWORD PTR [rsi+0x40]
  4031cb:	lea    r8,[rip+0x1e9bd]        # 0x421b8f
  4031d2:	mov    rcx,rsi
  4031d5:	call   0x402af0
  4031da:	lea    r8,[rip+0x1e9b9]        # 0x421b9a
  4031e1:	mov    r9d,0x3
  4031e7:	mov    rdx,rbx
  4031ea:	mov    rcx,rsi
  4031ed:	call   0x402b70
  4031f2:	jmp    0x402f25
  4031f7:	lea    rdx,[rip+0x1e966]        # 0x421b64
  4031fe:	mov    rcx,rbx
  403201:	call   rdi
  403203:	test   eax,eax
  403205:	je     0x403190
  403207:	movsx  eax,BYTE PTR [rbx]
  40320a:	sub    eax,0x30
  40320d:	cmp    eax,0x9
  403210:	jbe    0x402f25
  403216:	cmp    DWORD PTR [rip+0x29063],0x0        # 0x42c280
  40321d:	jne    0x402f25
  403223:	call   QWORD PTR [rip+0x2c763]        # 0x42f98c
  403229:	lea    rdx,[rip+0x1e96e]        # 0x421b9e
  403230:	lea    rcx,[rax+0x60]
  403234:	mov    r8,rbx
  403237:	call   0x402a90
  40323c:	mov    DWORD PTR [rip+0x2903a],0x1        # 0x42c280
  403246:	jmp    0x402f25
  40324b:	lea    rcx,[rip+0x1e917]        # 0x421b69
  403252:	call   0x402ac0
  403257:	jmp    0x40319a
  40325c:	nop    DWORD PTR [rax+0x0]
  403260:	push   rbx
  403261:	sub    rsp,0x20
  403265:	lea    rdx,[rip+0x1e7e0]        # 0x421a4c
  40326c:	mov    rbx,rcx
  40326f:	call   QWORD PTR [rip+0x2c7df]        # 0x42fa54
  403275:	test   eax,eax
  403277:	lea    rax,[rip+0x1e937]        # 0x421bb5
  40327e:	cmove  rbx,rax
  403282:	xor    edx,edx
  403284:	mov    rcx,rbx
  403287:	call   QWORD PTR [rip+0x2ca7f]        # 0x42fd0c
  40328d:	test   rax,rax
  403290:	mov    edx,0x1bb
  403295:	je     0x40329b
  403297:	movsx  edx,WORD PTR [rax+0x18]
  40329b:	mov    eax,edx
  40329d:	add    rsp,0x20
  4032a1:	pop    rbx
  4032a2:	ret    
  4032a3:	nop    DWORD PTR [rax]
  4032a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032b0:	push   rbx
  4032b1:	sub    rsp,0x20
  4032b5:	lea    rdx,[rip+0x1e790]        # 0x421a4c
  4032bc:	mov    rbx,rcx
  4032bf:	call   QWORD PTR [rip+0x2c78f]        # 0x42fa54
  4032c5:	test   eax,eax
  4032c7:	lea    rax,[rip+0x1e8e7]        # 0x421bb5
  4032ce:	cmove  rbx,rax
  4032d2:	xor    edx,edx
  4032d4:	mov    rcx,rbx
  4032d7:	call   QWORD PTR [rip+0x2ca2f]        # 0x42fd0c
  4032dd:	test   rax,rax
  4032e0:	je     0x4032f0
  4032e2:	mov    rax,QWORD PTR [rax]
  4032e5:	add    rsp,0x20
  4032e9:	pop    rbx
  4032ea:	ret    
  4032eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4032f0:	lea    rax,[rip+0x1e8ca]        # 0x421bc1
  4032f7:	add    rsp,0x20
  4032fb:	pop    rbx
  4032fc:	ret    
  4032fd:	nop    DWORD PTR [rax]
  403300:	push   rsi
  403301:	push   rbx
  403302:	sub    rsp,0x28
  403306:	mov    eax,DWORD PTR [rcx+0x10]
  403309:	mov    rbx,rcx
  40330c:	test   eax,eax
  40330e:	je     0x40333d
  403310:	mov    rcx,QWORD PTR [rbx+0x8]
  403314:	mov    edx,0x1
  403319:	call   0x4038c0
  40331e:	cmp    eax,0xffffffe4
  403321:	je     0x403310
  403323:	cmp    eax,0xffffffcc
  403326:	je     0x403310
  403328:	test   eax,eax
  40332a:	js     0x4033a0
  40332c:	mov    rcx,QWORD PTR [rbx+0x8]
  403330:	call   0x4038b8
  403335:	mov    QWORD PTR [rbx+0x8],0x0
  40333d:	mov    rcx,QWORD PTR [rbx+0x38]
  403341:	call   QWORD PTR [rip+0x2c9ad]        # 0x42fcf4
  403347:	mov    rcx,QWORD PTR [rbx+0x20]
  40334b:	mov    QWORD PTR [rbx+0x30],0x0
  403353:	mov    QWORD PTR [rbx+0x38],0x0
  40335b:	call   0x41d8a8
  403360:	mov    rcx,QWORD PTR [rbx+0x18]
  403364:	call   0x41d8a8
  403369:	mov    rcx,QWORD PTR [rbx+0x28]
  40336d:	call   0x41d8a8
  403372:	mov    ecx,DWORD PTR [rbx]
  403374:	mov    edx,0x2
  403379:	call   0x4154e0
  40337e:	mov    ecx,DWORD PTR [rbx]
  403380:	call   0x413820
  403385:	mov    DWORD PTR [rbx],0xffffffff
  40338b:	mov    DWORD PTR [rbx+0x10],0x0
  403392:	add    rsp,0x28
  403396:	pop    rbx
  403397:	pop    rsi
  403398:	ret    
  403399:	nop    DWORD PTR [rax+0x0]
  4033a0:	mov    ecx,eax
  4033a2:	call   0x4037e8
  4033a7:	mov    rsi,rax
  4033aa:	call   QWORD PTR [rip+0x2c5dc]        # 0x42f98c
  4033b0:	lea    rdx,[rip+0x1e80e]        # 0x421bc5
  4033b7:	lea    rcx,[rax+0x60]
  4033bb:	mov    r8,rsi
  4033be:	call   0x402a90
  4033c3:	jmp    0x40332c
  4033c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4033d0:	push   r15
  4033d2:	push   r14
  4033d4:	mov    eax,0x10a8
  4033d9:	push   r13
  4033db:	push   r12
  4033dd:	push   rbp
  4033de:	push   rdi
  4033df:	push   rsi
  4033e0:	push   rbx
  4033e1:	call   0x4182b0
  4033e6:	sub    rsp,rax
  4033e9:	xor    eax,eax
  4033eb:	lea    rdi,[rcx+0x8]
  4033ef:	mov    QWORD PTR [rsp+0x10f8],rdx
  4033f7:	mov    QWORD PTR [rsp+0x50],0x0
  403400:	mov    QWORD PTR [rsp+0x58],0x0
  403409:	mov    rbx,rcx
  40340c:	mov    QWORD PTR [rcx],0x0
  403413:	and    rdi,0xfffffffffffffff8
  403417:	mov    QWORD PTR [rcx+0x40],0x0
  40341f:	mov    rsi,r8
  403422:	sub    rcx,rdi
  403425:	mov    r13d,r9d
  403428:	add    ecx,0x48
  40342b:	shr    ecx,0x3
  40342e:	rep stos QWORD PTR es:[rdi],rax
  403431:	cmp    QWORD PTR [rsp+0x1110],0x0
  40343a:	je     0x403450
  40343c:	mov    rdx,QWORD PTR [rsp+0x10f8]
  403444:	lea    rcx,[rip+0x1e796]        # 0x421be1
  40344b:	call   0x402ac0
  403450:	lea    r8,[rsp+0x60]
  403455:	xor    eax,eax
  403457:	mov    ecx,0x6
  40345c:	cmp    r13d,0x1
  403460:	lea    r9,[rsp+0x48]
  403465:	mov    rdx,rsi
  403468:	mov    rdi,r8
  40346b:	rep stos QWORD PTR es:[rdi],rax
  40346e:	sbb    eax,eax
  403470:	mov    rcx,QWORD PTR [rsp+0x10f8]
  403478:	add    eax,0x2
  40347b:	mov    DWORD PTR [rsp+0x68],eax
  40347f:	call   QWORD PTR [rip+0x2c877]        # 0x42fcfc
  403485:	test   eax,eax
  403487:	mov    r12d,eax
  40348a:	jne    0x403658
  403490:	mov    rbp,QWORD PTR [rsp+0x48]
  403495:	lea    rdi,[rsp+0x90]
  40349d:	lea    rsi,[rsp+0x50]
  4034a2:	test   rbp,rbp
  4034a5:	je     0x4035f0
  4034ab:	mov    edx,DWORD PTR [rbp+0x8]
  4034ae:	mov    ecx,DWORD PTR [rbp+0x4]
  4034b1:	mov    r8d,DWORD PTR [rbp+0xc]
  4034b5:	call   0x4158b0
  4034ba:	cmp    eax,0xffffffff
  4034bd:	mov    r15d,eax
  4034c0:	je     0x4035c3
  4034c6:	mov    rdx,QWORD PTR [rbp+0x10]
  4034ca:	mov    rcx,QWORD PTR [rbp+0x20]
  4034ce:	mov    r9d,0x1000
  4034d4:	mov    DWORD PTR [rsp+0x30],0xa
  4034dc:	mov    DWORD PTR [rsp+0x28],0x10
  4034e4:	mov    r8,rdi
  4034e7:	mov    QWORD PTR [rsp+0x20],rsi
  4034ec:	mov    r14,rdi
  4034ef:	mov    r13,rsi
  4034f2:	call   QWORD PTR [rip+0x2c80c]        # 0x42fd04
  4034f8:	test   eax,eax
  4034fa:	mov    r12d,eax
  4034fd:	jne    0x4035a0
  403503:	cmp    QWORD PTR [rsp+0x1110],0x0
  40350c:	je     0x403528
  40350e:	mov    rdx,QWORD PTR [rsp+0x1110]
  403516:	lea    rcx,[rip+0x1e729]        # 0x421c46
  40351d:	mov    r9,rsi
  403520:	mov    r8,rdi
  403523:	call   0x402ac0
  403528:	mov    rdx,QWORD PTR [rbp+0x20]
  40352c:	mov    r8d,DWORD PTR [rbp+0x10]
  403530:	mov    ecx,r15d
  403533:	call   0x413830
  403538:	test   eax,eax
  40353a:	mov    r12d,eax
  40353d:	js     0x4035c3
  403543:	jne    0x40361d
  403549:	mov    rcx,QWORD PTR [rsp+0x10f8]
  403551:	mov    DWORD PTR [rbx+0x10],0x0
  403558:	mov    DWORD PTR [rbx],r15d
  40355b:	call   0x415c60
  403560:	mov    rcx,r14
  403563:	mov    QWORD PTR [rbx+0x18],rax
  403567:	call   0x415c60
  40356c:	mov    rcx,r13
  40356f:	mov    QWORD PTR [rbx+0x20],rax
  403573:	call   0x415c60
  403578:	mov    QWORD PTR [rbx+0x28],rax
  40357c:	mov    rax,QWORD PTR [rsp+0x48]
  403581:	mov    QWORD PTR [rbx+0x30],rbp
  403585:	mov    QWORD PTR [rbx+0x38],rax
  403589:	add    rsp,0x10a8
  403590:	pop    rbx
  403591:	pop    rsi
  403592:	pop    rdi
  403593:	pop    rbp
  403594:	pop    r12
  403596:	pop    r13
  403598:	pop    r14
  40359a:	pop    r15
  40359c:	ret    
  40359d:	nop    DWORD PTR [rax]
  4035a0:	mov    ecx,eax
  4035a2:	call   0x413c40
  4035a7:	mov    r13,rax
  4035aa:	call   QWORD PTR [rip+0x2c3dc]        # 0x42f98c
  4035b0:	lea    rdx,[rip+0x1e67c]        # 0x421c33
  4035b7:	lea    rcx,[rax+0x60]
  4035bb:	mov    r8,r13
  4035be:	call   0x402a90
  4035c3:	mov    rbp,QWORD PTR [rbp+0x28]
  4035c7:	test   rbp,rbp
  4035ca:	jne    0x4034ab
  4035d0:	test   r12d,r12d
  4035d3:	jne    0x403610
  4035d5:	cmp    r15d,0xffffffff
  4035d9:	je     0x4035f0
  4035db:	lea    r14,[rsp+0x90]
  4035e3:	lea    r13,[rsp+0x50]
  4035e8:	jmp    0x403549
  4035ed:	nop    DWORD PTR [rax]
  4035f0:	call   QWORD PTR [rip+0x2c396]        # 0x42f98c
  4035f6:	lea    rdx,[rip+0x1e613]        # 0x421c10
  4035fd:	lea    rcx,[rax+0x60]
  403601:	call   0x402a90
  403606:	mov    ecx,0x1
  40360b:	call   0x41d8f8
  403610:	lea    r14,[rsp+0x90]
  403618:	lea    r13,[rsp+0x50]
  40361d:	call   QWORD PTR [rip+0x2c3b9]        # 0x42f9dc
  403623:	mov    ecx,DWORD PTR [rax]
  403625:	call   0x415cd0
  40362a:	mov    rbx,rax
  40362d:	call   QWORD PTR [rip+0x2c359]        # 0x42f98c
  403633:	lea    rdx,[rip+0x1e61e]        # 0x421c58
  40363a:	lea    rcx,[rax+0x60]
  40363e:	mov    QWORD PTR [rsp+0x20],rbx
  403643:	mov    r9,r13
  403646:	mov    r8,r14
  403649:	call   0x402a90
  40364e:	mov    ecx,0x1
  403653:	call   0x41d8f8
  403658:	mov    ecx,eax
  40365a:	call   0x413c40
  40365f:	mov    rbx,rax
  403662:	call   QWORD PTR [rip+0x2c324]        # 0x42f98c
  403668:	mov    r8,QWORD PTR [rsp+0x10f8]
  403670:	lea    rcx,[rax+0x60]
  403674:	lea    rdx,[rip+0x1e579]        # 0x421bf4
  40367b:	mov    QWORD PTR [rsp+0x20],rbx
  403680:	mov    r9,rsi
  403683:	call   0x402a90
  403688:	mov    ecx,0x1
  40368d:	call   0x41d8f8
  403692:	nop
  403693:	nop    DWORD PTR [rax]
  403696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036a0:	sub    rsp,0x1c8
  4036a7:	mov    ecx,0x101
  4036ac:	lea    rdx,[rsp+0x20]
  4036b1:	call   QWORD PTR [rip+0x2c61d]        # 0x42fcd4
  4036b7:	test   eax,eax
  4036b9:	je     0x4036c8
  4036bb:	lea    rcx,[rip+0x1e5b6]        # 0x421c78
  4036c2:	call   0x41d848
  4036c7:	nop
  4036c8:	add    rsp,0x1c8
  4036cf:	ret    
  4036d0:	push   rsi
  4036d1:	push   rbx
  4036d2:	sub    rsp,0x28
  4036d6:	movsx  eax,BYTE PTR [rcx]
  4036d9:	mov    rbx,rcx
  4036dc:	mov    rsi,rdx
  4036df:	sub    eax,0x30
  4036e2:	cmp    eax,0x9
  4036e5:	jbe    0x4036f1
  4036e7:	mov    rax,rbx
  4036ea:	add    rsp,0x28
  4036ee:	pop    rbx
  4036ef:	pop    rsi
  4036f0:	ret    
  4036f1:	call   0x41d910
  4036f6:	test   eax,eax
  4036f8:	je     0x4036e7
  4036fa:	movzx  ecx,ax
  4036fd:	call   QWORD PTR [rip+0x2c619]        # 0x42fd1c
  403703:	mov    rdx,rsi
  403706:	movzx  ecx,ax
  403709:	call   QWORD PTR [rip+0x2c605]        # 0x42fd14
  40370f:	test   rax,rax
  403712:	je     0x40371e
  403714:	mov    rax,QWORD PTR [rax]
  403717:	add    rsp,0x28
  40371b:	pop    rbx
  40371c:	pop    rsi
  40371d:	ret    
  40371e:	call   QWORD PTR [rip+0x2c268]        # 0x42f98c
  403724:	lea    rdx,[rip+0x1e565]        # 0x421c90
  40372b:	lea    rcx,[rax+0x60]
  40372f:	mov    r8,rbx
  403732:	call   0x402a90
  403737:	jmp    0x4036e7
  403739:	nop    DWORD PTR [rax+0x0]
  403740:	push   rsi
  403741:	push   rbx
  403742:	sub    rsp,0x28
  403746:	mov    rbx,rcx
  403749:	mov    rsi,rdx
  40374c:	call   0x41d910
  403751:	test   eax,eax
  403753:	je     0x403760
  403755:	add    rsp,0x28
  403759:	pop    rbx
  40375a:	pop    rsi
  40375b:	ret    
  40375c:	nop    DWORD PTR [rax+0x0]
  403760:	mov    rdx,rsi
  403763:	mov    rcx,rbx
  403766:	call   QWORD PTR [rip+0x2c5a0]        # 0x42fd0c
  40376c:	test   rax,rax
  40376f:	je     0x403785
  403771:	movzx  ecx,WORD PTR [rax+0x18]
  403775:	call   QWORD PTR [rip+0x2c5b1]        # 0x42fd2c
  40377b:	movzx  eax,ax
  40377e:	add    rsp,0x28
  403782:	pop    rbx
  403783:	pop    rsi
  403784:	ret    
  403785:	call   QWORD PTR [rip+0x2c201]        # 0x42f98c
  40378b:	lea    rdx,[rip+0x1e546]        # 0x421cd8
  403792:	lea    rcx,[rax+0x60]
  403796:	call   0x402a90
  40379b:	mov    ecx,0x1
  4037a0:	call   0x41d8f8
  4037a5:	nop
  4037a6:	nop
  4037a7:	nop
  4037a8:	nop
  4037a9:	nop
  4037aa:	nop
  4037ab:	nop
  4037ac:	nop
  4037ad:	nop
  4037ae:	nop
  4037af:	nop
  4037b0:	jmp    QWORD PTR [rip+0x2c056]        # 0x42f80c
  4037b6:	nop
  4037b7:	nop
  4037b8:	jmp    QWORD PTR [rip+0x2c046]        # 0x42f804
  4037be:	nop
  4037bf:	nop
  4037c0:	jmp    QWORD PTR [rip+0x2c036]        # 0x42f7fc
  4037c6:	nop
  4037c7:	nop
  4037c8:	jmp    QWORD PTR [rip+0x2c026]        # 0x42f7f4
  4037ce:	nop
  4037cf:	nop
  4037d0:	jmp    QWORD PTR [rip+0x2c016]        # 0x42f7ec
  4037d6:	nop
  4037d7:	nop
  4037d8:	jmp    QWORD PTR [rip+0x2c006]        # 0x42f7e4
  4037de:	nop
  4037df:	nop
  4037e0:	jmp    QWORD PTR [rip+0x2bff6]        # 0x42f7dc
  4037e6:	nop
  4037e7:	nop
  4037e8:	jmp    QWORD PTR [rip+0x2bfe6]        # 0x42f7d4
  4037ee:	nop
  4037ef:	nop
  4037f0:	jmp    QWORD PTR [rip+0x2bfd6]        # 0x42f7cc
  4037f6:	nop
  4037f7:	nop
  4037f8:	jmp    QWORD PTR [rip+0x2bfc6]        # 0x42f7c4
  4037fe:	nop
  4037ff:	nop
  403800:	jmp    QWORD PTR [rip+0x2bfb6]        # 0x42f7bc
  403806:	nop
  403807:	nop
  403808:	jmp    QWORD PTR [rip+0x2bfa6]        # 0x42f7b4
  40380e:	nop
  40380f:	nop
  403810:	jmp    QWORD PTR [rip+0x2bf96]        # 0x42f7ac
  403816:	nop
  403817:	nop
  403818:	jmp    QWORD PTR [rip+0x2bf86]        # 0x42f7a4
  40381e:	nop
  40381f:	nop
  403820:	jmp    QWORD PTR [rip+0x2bf76]        # 0x42f79c
  403826:	nop
  403827:	nop
  403828:	jmp    QWORD PTR [rip+0x2bf66]        # 0x42f794
  40382e:	nop
  40382f:	nop
  403830:	jmp    QWORD PTR [rip+0x2bf56]        # 0x42f78c
  403836:	nop
  403837:	nop
  403838:	jmp    QWORD PTR [rip+0x2bf46]        # 0x42f784
  40383e:	nop
  40383f:	nop
  403840:	jmp    QWORD PTR [rip+0x2bf36]        # 0x42f77c
  403846:	nop
  403847:	nop
  403848:	jmp    QWORD PTR [rip+0x2bf26]        # 0x42f774
  40384e:	nop
  40384f:	nop
  403850:	jmp    QWORD PTR [rip+0x2bf16]        # 0x42f76c
  403856:	nop
  403857:	nop
  403858:	jmp    QWORD PTR [rip+0x2bf06]        # 0x42f764
  40385e:	nop
  40385f:	nop
  403860:	jmp    QWORD PTR [rip+0x2bef6]        # 0x42f75c
  403866:	nop
  403867:	nop
  403868:	jmp    QWORD PTR [rip+0x2bee6]        # 0x42f754
  40386e:	nop
  40386f:	nop
  403870:	jmp    QWORD PTR [rip+0x2bed6]        # 0x42f74c
  403876:	nop
  403877:	nop
  403878:	jmp    QWORD PTR [rip+0x2bec6]        # 0x42f744
  40387e:	nop
  40387f:	nop
  403880:	jmp    QWORD PTR [rip+0x2beb6]        # 0x42f73c
  403886:	nop
  403887:	nop
  403888:	jmp    QWORD PTR [rip+0x2bea6]        # 0x42f734
  40388e:	nop
  40388f:	nop
  403890:	jmp    QWORD PTR [rip+0x2be96]        # 0x42f72c
  403896:	nop
  403897:	nop
  403898:	jmp    QWORD PTR [rip+0x2be86]        # 0x42f724
  40389e:	nop
  40389f:	nop
  4038a0:	jmp    QWORD PTR [rip+0x2be76]        # 0x42f71c
  4038a6:	nop
  4038a7:	nop
  4038a8:	jmp    QWORD PTR [rip+0x2be66]        # 0x42f714
  4038ae:	nop
  4038af:	nop
  4038b0:	jmp    QWORD PTR [rip+0x2be56]        # 0x42f70c
  4038b6:	nop
  4038b7:	nop
  4038b8:	jmp    QWORD PTR [rip+0x2be3e]        # 0x42f6fc
  4038be:	nop
  4038bf:	nop
  4038c0:	jmp    QWORD PTR [rip+0x2be2e]        # 0x42f6f4
  4038c6:	nop
  4038c7:	nop
  4038c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4038d0:	sub    rsp,0x28
  4038d4:	lea    rcx,[rip+0x1b765]        # 0x41f040
  4038db:	xor    edx,edx
  4038dd:	call   0x40fb40
  4038e2:	mov    ecx,0x1
  4038e7:	call   0x41d8f8
  4038ec:	nop
  4038ed:	nop    DWORD PTR [rax]
  4038f0:	mov    DWORD PTR [rip+0x289c6],0x0        # 0x42c2c0
  4038fa:	mov    r9,QWORD PTR [rip+0x289bf]        # 0x42c2c0
  403901:	mov    r8d,0x1
  403907:	jmp    0x40a280
  40390c:	nop    DWORD PTR [rax+0x0]
  403910:	mov    DWORD PTR [rip+0x2899e],0x0        # 0x42c2b8
  40391a:	mov    r9,QWORD PTR [rip+0x28997]        # 0x42c2b8
  403921:	mov    r8d,0x1
  403927:	jmp    0x40a280
  40392c:	nop    DWORD PTR [rax+0x0]
  403930:	mov    DWORD PTR [rip+0x28976],0x0        # 0x42c2b0
  40393a:	mov    r9,QWORD PTR [rip+0x2896f]        # 0x42c2b0
  403941:	mov    r8d,0x1
  403947:	jmp    0x40a280
  40394c:	nop    DWORD PTR [rax+0x0]
  403950:	mov    DWORD PTR [rip+0x2894e],0x0        # 0x42c2a8
  40395a:	mov    r9,QWORD PTR [rip+0x28947]        # 0x42c2a8
  403961:	mov    r8d,0x1
  403967:	jmp    0x40a280
  40396c:	nop    DWORD PTR [rax+0x0]
  403970:	mov    DWORD PTR [rip+0x28926],0x0        # 0x42c2a0
  40397a:	mov    r9,QWORD PTR [rip+0x2891f]        # 0x42c2a0
  403981:	mov    r8d,0x1
  403987:	jmp    0x40a280
  40398c:	nop    DWORD PTR [rax+0x0]
  403990:	mov    DWORD PTR [rip+0x288fe],0x0        # 0x42c298
  40399a:	mov    r9,QWORD PTR [rip+0x288f7]        # 0x42c298
  4039a1:	mov    r8d,0x1
  4039a7:	jmp    0x40a280
  4039ac:	nop    DWORD PTR [rax+0x0]
  4039b0:	mov    DWORD PTR [rip+0x288d6],0x0        # 0x42c290
  4039ba:	mov    r9,QWORD PTR [rip+0x288cf]        # 0x42c290
  4039c1:	mov    r8d,0x1
  4039c7:	jmp    0x40a280
  4039cc:	nop    DWORD PTR [rax+0x0]
  4039d0:	push   rsi
  4039d1:	push   rbx
  4039d2:	sub    rsp,0x28
  4039d6:	cmp    rcx,0xf
  4039da:	mov    rbx,rcx
  4039dd:	mov    rsi,rdx
  4039e0:	ja     0x403a00
  4039e2:	lea    r8,[rip+0x1e317]        # 0x421d00
  4039e9:	mov    r9d,0x1
  4039ef:	mov    rdx,rsi
  4039f2:	mov    rcx,rbx
  4039f5:	add    rsp,0x28
  4039f9:	pop    rbx
  4039fa:	pop    rsi
  4039fb:	jmp    0x40b230
  403a00:	call   0x403b80
  403a05:	cmp    DWORD PTR [rsi+0x18],0x270f
  403a0c:	jbe    0x403a24
  403a0e:	call   QWORD PTR [rip+0x2bf78]        # 0x42f98c
  403a14:	mov    rdx,QWORD PTR [rip+0x24015]        # 0x427a30
  403a1b:	add    rax,0x60
  403a1f:	mov    QWORD PTR [rdx],rax
  403a22:	jmp    0x4039e2
  403a24:	add    rsp,0x28
  403a28:	pop    rbx
  403a29:	pop    rsi
  403a2a:	ret    
  403a2b:	nop
  403a2c:	nop
  403a2d:	nop
  403a2e:	nop
  403a2f:	nop
  403a30:	push   rsi
  403a31:	push   rbx
  403a32:	sub    rsp,0x28
  403a36:	mov    eax,DWORD PTR [rdx+0x10]
  403a39:	mov    r8,QWORD PTR [rdx+0x38]
  403a3d:	mov    rsi,rcx
  403a40:	mov    rbx,rdx
  403a43:	and    eax,0xfffff00
  403a48:	or     eax,0x8
  403a4b:	test   r8,r8
  403a4e:	mov    DWORD PTR [rdx+0x10],eax
  403a51:	je     0x403a59
  403a53:	call   r8
  403a56:	mov    eax,DWORD PTR [rbx+0x10]
  403a59:	movzx  edx,WORD PTR [rbx]
  403a5c:	mov    rcx,QWORD PTR [rsi+0xc8]
  403a63:	and    eax,0xfffff00
  403a68:	mov    rcx,QWORD PTR [rcx+rdx*8]
  403a6c:	mov    QWORD PTR [rbx+0x18],rcx
  403a70:	mov    rcx,QWORD PTR [rsi+0xd0]
  403a77:	mov    rdx,QWORD PTR [rcx+rdx*8]
  403a7b:	mov    DWORD PTR [rbx+0x10],eax
  403a7e:	mov    QWORD PTR [rbx+0x20],rdx
  403a82:	add    rsp,0x28
  403a86:	pop    rbx
  403a87:	pop    rsi
  403a88:	ret    
  403a89:	nop    DWORD PTR [rax+0x0]
  403a90:	push   rbp
  403a91:	push   rdi
  403a92:	push   rsi
  403a93:	push   rbx
  403a94:	sub    rsp,0x28
  403a98:	mov    eax,DWORD PTR [rcx]
  403a9a:	lea    rbx,[rcx+0x8]
  403a9e:	mov    rbp,rcx
  403aa1:	lea    edx,[rax-0x1]
  403aa4:	test   eax,eax
  403aa6:	lea    rdi,[rbx+rdx*8+0x8]
  403aab:	jg     0x403abd
  403aad:	jmp    0x403ae0
  403aaf:	nop
  403ab0:	mov    rcx,rsi
  403ab3:	call   0x41d8a8
  403ab8:	cmp    rbx,rdi
  403abb:	je     0x403ae0
  403abd:	add    rbx,0x8
  403ac1:	mov    rsi,QWORD PTR [rbx-0x8]
  403ac5:	cmp    DWORD PTR [rsi],0x6
  403ac8:	jne    0x403ab0
  403aca:	mov    rcx,QWORD PTR [rsi+0x10]
  403ace:	call   0x403a90
  403ad3:	mov    rcx,rsi
  403ad6:	call   0x41d8a8
  403adb:	cmp    rbx,rdi
  403ade:	jne    0x403abd
  403ae0:	mov    rcx,rbp
  403ae3:	add    rsp,0x28
  403ae7:	pop    rbx
  403ae8:	pop    rsi
  403ae9:	pop    rdi
  403aea:	pop    rbp
  403aeb:	jmp    0x41d8a8
  403af0:	push   rdi
  403af1:	push   rsi
  403af2:	push   rbx
  403af3:	sub    rsp,0x20
  403af7:	mov    rdi,QWORD PTR [rip+0x2c006]        # 0x42fb04
  403afe:	mov    rsi,rcx
  403b01:	jmp    0x403b07
  403b03:	add    rsi,0x1
  403b07:	movzx  ecx,BYTE PTR [rsi]
  403b0a:	call   rdi
  403b0c:	test   eax,eax
  403b0e:	jne    0x403b03
  403b10:	mov    rcx,rsi
  403b13:	call   0x41d7f8
  403b18:	lea    rbx,[rsi+rax*1]
  403b1c:	cmp    rbx,rsi
  403b1f:	ja     0x403b2c
  403b21:	jmp    0x403b36
  403b23:	sub    rbx,0x1
  403b27:	cmp    rbx,rsi
  403b2a:	je     0x403b36
  403b2c:	movzx  ecx,BYTE PTR [rbx-0x1]
  403b30:	call   rdi
  403b32:	test   eax,eax
  403b34:	jne    0x403b23
  403b36:	mov    rax,rsi
  403b39:	mov    BYTE PTR [rbx],0x0
  403b3c:	add    rsp,0x20
  403b40:	pop    rbx
  403b41:	pop    rsi
  403b42:	pop    rdi
  403b43:	ret    
  403b44:	xchg   ax,ax
  403b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b50:	sub    rsp,0x38
  403b54:	mov    QWORD PTR [rsp+0x50],r8
  403b59:	lea    r8,[rsp+0x50]
  403b5e:	mov    QWORD PTR [rsp+0x58],r9
  403b63:	mov    QWORD PTR [rsp+0x28],r8
  403b68:	call   0x418d30
  403b6d:	add    rsp,0x38
  403b71:	ret    
  403b72:	nop    DWORD PTR [rax+0x0]
  403b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b80:	push   r13
  403b82:	push   r12
  403b84:	push   rbp
  403b85:	push   rdi
  403b86:	push   rsi
  403b87:	push   rbx
  403b88:	sub    rsp,0x38
  403b8c:	cmp    rcx,0xf
  403b90:	jbe    0x403b9d
  403b92:	test   rdx,rdx
  403b95:	je     0x403b9d
  403b97:	test   BYTE PTR [rdx+0x10],0x8
  403b9b:	je     0x403bb0
  403b9d:	add    rsp,0x38
  403ba1:	pop    rbx
  403ba2:	pop    rsi
  403ba3:	pop    rdi
  403ba4:	pop    rbp
  403ba5:	pop    r12
  403ba7:	pop    r13
  403ba9:	ret    
  403baa:	nop    WORD PTR [rax+rax*1+0x0]
  403bb0:	cmp    QWORD PTR [rdx+0x18],0x0
  403bb5:	je     0x403b9d
  403bb7:	mov    rbx,rdx
  403bba:	mov    rsi,rcx
  403bbd:	mov    rdi,QWORD PTR [rip+0x2be18]        # 0x42f9dc
  403bc4:	call   rdi
  403bc6:	mov    DWORD PTR [rax],0x0
  403bcc:	mov    rcx,QWORD PTR [rbx+0x18]
  403bd0:	lea    rdx,[rsp+0x28]
  403bd5:	xor    r8d,r8d
  403bd8:	call   0x41d7c8
  403bdd:	mov    rbp,QWORD PTR [rbx+0x18]
  403be1:	cmp    rbp,QWORD PTR [rsp+0x28]
  403be6:	mov    r12d,eax
  403be9:	je     0x403c24
  403beb:	call   rdi
  403bed:	mov    eax,DWORD PTR [rax]
  403bef:	test   eax,eax
  403bf1:	jne    0x403c20
  403bf3:	mov    eax,DWORD PTR [rbx+0x10]
  403bf6:	test   eax,0x1000000
  403bfb:	jne    0x403c6f
  403bfd:	mov    rdx,QWORD PTR [rsp+0x28]
  403c02:	cmp    BYTE PTR [rdx],0x0
  403c05:	jne    0x403c20
  403c07:	test   al,0x40
  403c09:	jne    0x403ce0
  403c0f:	mov    DWORD PTR [rbx+0x18],r12d
  403c13:	jmp    0x403b9d
  403c15:	cmp    cl,0x67
  403c18:	je     0x403cc6
  403c1e:	xchg   ax,ax
  403c20:	mov    rbp,QWORD PTR [rbx+0x18]
  403c24:	mov    r13,QWORD PTR [rsi+0x28]
  403c28:	mov    r12,QWORD PTR [rip+0x1c3e9]        # 0x420018
  403c2f:	call   QWORD PTR [rip+0x2bd57]        # 0x42f98c
  403c35:	lea    rcx,[rax+0x60]
  403c39:	mov    r9,rbp
  403c3c:	mov    r8,r13
  403c3f:	mov    rdx,r12
  403c42:	call   0x403b50
  403c47:	test   BYTE PTR [rsi+0x10],0x4
  403c4b:	je     0x403c5b
  403c4d:	mov    edx,0x1
  403c52:	mov    rcx,rsi
  403c55:	call   QWORD PTR [rsi+0x98]
  403c5b:	call   rdi
  403c5d:	mov    DWORD PTR [rax],0x16
  403c63:	mov    DWORD PTR [rbx+0x18],0xffffffff
  403c6a:	jmp    0x403b9d
  403c6f:	mov    r8,QWORD PTR [rsp+0x28]
  403c74:	lea    rdx,[r8+0x1]
  403c78:	mov    QWORD PTR [rsp+0x28],rdx
  403c7d:	movzx  ecx,BYTE PTR [r8]
  403c81:	cmp    cl,0x54
  403c84:	je     0x403cf2
  403c86:	jg     0x403ca6
  403c88:	cmp    cl,0x47
  403c8b:	je     0x403cf6
  403c8d:	jle    0x403cfc
  403c8f:	cmp    cl,0x4b
  403c92:	je     0x403c9d
  403c94:	cmp    cl,0x4d
  403c97:	jne    0x403c20
  403c99:	shl    r12d,0xa
  403c9d:	shl    r12d,0xa
  403ca1:	jmp    0x403c02
  403ca6:	cmp    cl,0x6b
  403ca9:	je     0x403cd4
  403cab:	jle    0x403c15
  403cb1:	cmp    cl,0x6d
  403cb4:	je     0x403ccd
  403cb6:	imul   r12d,r12d,0x3e8
  403cbd:	cmp    cl,0x74
  403cc0:	jne    0x403c20
  403cc6:	imul   r12d,r12d,0x3e8
  403ccd:	imul   r12d,r12d,0x3e8
  403cd4:	imul   r12d,r12d,0x3e8
  403cdb:	jmp    0x403c02
  403ce0:	mov    rcx,QWORD PTR [rbx+0x18]
  403ce4:	call   0x41d8a8
  403ce9:	and    DWORD PTR [rbx+0x10],0xffffffbf
  403ced:	jmp    0x403c0f
  403cf2:	shl    r12d,0xa
  403cf6:	shl    r12d,0xa
  403cfa:	jmp    0x403c99
  403cfc:	test   cl,cl
  403cfe:	jne    0x403c20
  403d04:	mov    QWORD PTR [rsp+0x28],r8
  403d09:	mov    rdx,r8
  403d0c:	jmp    0x403c02
  403d11:	nop    DWORD PTR [rax+rax*1+0x0]
  403d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d20:	push   rsi
  403d21:	push   rbx
  403d22:	sub    rsp,0x28
  403d26:	test   rdx,rdx
  403d29:	mov    rsi,rcx
  403d2c:	mov    rbx,rdx
  403d2f:	je     0x403d70
  403d31:	mov    edx,0xa
  403d36:	mov    rcx,rbx
  403d39:	call   0x41d820
  403d3e:	test   rax,rax
  403d41:	je     0x403d84
  403d43:	sub    rax,rbx
  403d46:	mov    r9,rsi
  403d49:	mov    edx,0x1
  403d4e:	mov    r8,rax
  403d51:	mov    rcx,rbx
  403d54:	call   0x41d890
  403d59:	mov    rdx,rsi
  403d5c:	mov    ecx,0xa
  403d61:	add    rsp,0x28
  403d65:	pop    rbx
  403d66:	pop    rsi
  403d67:	jmp    0x41d8c0
  403d6c:	nop    DWORD PTR [rax+0x0]
  403d70:	test   r8,r8
  403d73:	mov    rbx,r8
  403d76:	jne    0x403d31
  403d78:	test   r9,r9
  403d7b:	jne    0x403d91
  403d7d:	add    rsp,0x28
  403d81:	pop    rbx
  403d82:	pop    rsi
  403d83:	ret    
  403d84:	mov    rdx,rsi
  403d87:	mov    rcx,rbx
  403d8a:	call   0x41d8b8
  403d8f:	jmp    0x403d59
  403d91:	mov    rbx,r9
  403d94:	jmp    0x403d31
  403d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403da0:	push   rsi
  403da1:	push   rbx
  403da2:	sub    rsp,0x28
  403da6:	cmp    BYTE PTR [rcx],0x27
  403da9:	mov    rbx,rcx
  403dac:	jne    0x403ddb
  403dae:	mov    rsi,QWORD PTR [rip+0x2bbd7]        # 0x42f98c
  403db5:	call   rsi
  403db7:	lea    rcx,[rip+0x1ff53]        # 0x423d11
  403dbe:	lea    r9,[rax+0x30]
  403dc2:	mov    r8d,0x2
  403dc8:	mov    edx,0x1
  403dcd:	add    rbx,0x1
  403dd1:	call   0x41d890
  403dd6:	cmp    BYTE PTR [rbx],0x27
  403dd9:	je     0x403db5
  403ddb:	mov    rax,rbx
  403dde:	add    rsp,0x28
  403de2:	pop    rbx
  403de3:	pop    rsi
  403de4:	ret    
  403de5:	nop
  403de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403df0:	push   r12
  403df2:	push   rbp
  403df3:	push   rdi
  403df4:	push   rsi
  403df5:	push   rbx
  403df6:	sub    rsp,0x20
  403dfa:	test   BYTE PTR [rdx+0x10],0x20
  403dfe:	mov    rdi,rcx
  403e01:	mov    r12,rdx
  403e04:	mov    rbx,r8
  403e07:	je     0x403e15
  403e09:	cmp    WORD PTR [rdx+0x8],0x8000
  403e0f:	je     0x403f20
  403e15:	mov    rsi,QWORD PTR [r12+0x50]
  403e1a:	mov    rcx,rsi
  403e1d:	mov    ebp,0x11
  403e22:	call   0x41d7f8
  403e27:	mov    rdx,rdi
  403e2a:	mov    rcx,rsi
  403e2d:	sub    ebp,eax
  403e2f:	call   0x41d8b8
  403e34:	test   rbx,rbx
  403e37:	je     0x403f00
  403e3d:	lea    rcx,[rip+0x1e83c]        # 0x422680
  403e44:	mov    r9,rdi
  403e47:	mov    r8d,0x3
  403e4d:	mov    edx,0x1
  403e52:	lea    esi,[rbp-0x1]
  403e55:	call   0x41d890
  403e5a:	test   ebp,ebp
  403e5c:	jle    0x403e75
  403e5e:	xchg   ax,ax
  403e60:	mov    rdx,rdi
  403e63:	mov    ecx,0x20
  403e68:	sub    esi,0x1
  403e6b:	call   0x41d8c0
  403e70:	cmp    esi,0xffffffff
  403e73:	jne    0x403e60
  403e75:	mov    eax,DWORD PTR [r12+0x10]
  403e7a:	and    eax,0xf000
  403e7f:	cmp    eax,0x5000
  403e84:	jne    0x403ec5
  403e86:	jmp    0x403f29
  403e8b:	nop    DWORD PTR [rax+rax*1+0x0]
  403e90:	mov    rdx,rax
  403e93:	mov    rcx,rbx
  403e96:	mov    r9,rdi
  403e99:	sub    rdx,rbx
  403e9c:	mov    r8d,0x1
  403ea2:	lea    rbx,[rsi+0x1]
  403ea6:	call   0x41d890
  403eab:	lea    rcx,[rip+0x1e7d5]        # 0x422687
  403eb2:	mov    r9,rdi
  403eb5:	mov    r8d,0x2
  403ebb:	mov    edx,0x1
  403ec0:	call   0x41d890
  403ec5:	mov    edx,0xa
  403eca:	mov    rcx,rbx
  403ecd:	call   0x41d820
  403ed2:	test   rax,rax
  403ed5:	mov    rsi,rax
  403ed8:	jne    0x403e90
  403eda:	mov    rdx,rdi
  403edd:	mov    rcx,rbx
  403ee0:	call   0x41d8b8
  403ee5:	mov    rdx,rdi
  403ee8:	mov    ecx,0xa
  403eed:	add    rsp,0x20
  403ef1:	pop    rbx
  403ef2:	pop    rsi
  403ef3:	pop    rdi
  403ef4:	pop    rbp
  403ef5:	pop    r12
  403ef7:	jmp    0x41d8c0
  403efc:	nop    DWORD PTR [rax+0x0]
  403f00:	mov    eax,DWORD PTR [r12+0x10]
  403f05:	and    eax,0xf000
  403f0a:	cmp    eax,0x5000
  403f0f:	jne    0x403ee5
  403f11:	jmp    0x403e3d
  403f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f20:	mov    rsi,QWORD PTR [rdx+0x58]
  403f24:	jmp    0x403e1a
  403f29:	lea    rdx,[rip+0x1e754]        # 0x422684
  403f30:	mov    r8d,ebx
  403f33:	mov    rcx,rdi
  403f36:	call   0x403b50
  403f3b:	jmp    0x403ee5
  403f3d:	nop    DWORD PTR [rax]
  403f40:	sub    rsp,0x38
  403f44:	mov    QWORD PTR [rsp+0x58],r9
  403f49:	lea    r9,[rsp+0x58]
  403f4e:	mov    QWORD PTR [rsp+0x28],r9
  403f53:	call   0x418da0
  403f58:	add    rsp,0x38
  403f5c:	ret    
  403f5d:	nop    DWORD PTR [rax]
  403f60:	sub    rsp,0x38
  403f64:	mov    QWORD PTR [rsp+0x48],rdx
  403f69:	lea    rdx,[rsp+0x48]
  403f6e:	mov    QWORD PTR [rsp+0x50],r8
  403f73:	mov    QWORD PTR [rsp+0x58],r9
  403f78:	mov    QWORD PTR [rsp+0x28],rdx
  403f7d:	call   0x418d60
  403f82:	add    rsp,0x38
  403f86:	ret    
  403f87:	nop    WORD PTR [rax+rax*1+0x0]
  403f90:	push   rbx
  403f91:	sub    rsp,0x20
  403f95:	cmp    BYTE PTR [rip+0x28398],0x0        # 0x42c334
  403f9c:	mov    ebx,ecx
  403f9e:	jne    0x403fa7
  403fa0:	mov    ecx,ebx
  403fa2:	call   0x41d8f8
  403fa7:	mov    edx,ecx
  403fa9:	lea    rcx,[rip+0x1e6da]        # 0x42268a
  403fb0:	call   0x403f60
  403fb5:	jmp    0x403fa0
  403fb7:	nop    WORD PTR [rax+rax*1+0x0]
  403fc0:	push   rsi
  403fc1:	push   rbx
  403fc2:	sub    rsp,0x28
  403fc6:	mov    rbx,QWORD PTR [rip+0x1bf13]        # 0x41fee0
  403fcd:	mov    rsi,rcx
  403fd0:	call   QWORD PTR [rip+0x2b9b6]        # 0x42f98c
  403fd6:	lea    rcx,[rax+0x60]
  403fda:	mov    r8,rsi
  403fdd:	mov    rdx,rbx
  403fe0:	call   0x403b50
  403fe5:	mov    ecx,0x46
  403fea:	call   0x403f90
  403fef:	nop
  403ff0:	push   r15
  403ff2:	push   r14
  403ff4:	push   r13
  403ff6:	push   r12
  403ff8:	push   rbp
  403ff9:	push   rdi
  403ffa:	push   rsi
  403ffb:	push   rbx
  403ffc:	sub    rsp,0x58
  404000:	cmp    rcx,0xf
  404004:	mov    QWORD PTR [rsp+0xa0],rcx
  40400c:	mov    r13,rdx
  40400f:	mov    rbx,r8
  404012:	mov    ebp,r9d
  404015:	ja     0x404293
  40401b:	mov    r8,QWORD PTR [r13+0x50]
  40401f:	mov    rdx,QWORD PTR [rip+0x1c1aa]        # 0x4201d0
  404026:	mov    rcx,QWORD PTR [rip+0x282db]        # 0x42c308
  40402d:	call   0x403b50
  404032:	mov    rdi,QWORD PTR [rbx]
  404035:	mov    DWORD PTR [rsp+0x38],0x0
  40403d:	cmp    BYTE PTR [rdi],0x7f
  404040:	je     0x4042d0
  404046:	mov    rcx,rdi
  404049:	mov    r12,rbx
  40404c:	mov    r14d,ebp
  40404f:	xor    esi,esi
  404051:	xor    r15d,r15d
  404054:	jmp    0x404064
  404056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404060:	mov    rcx,QWORD PTR [r12]
  404064:	call   0x41d7f8
  404069:	add    rax,0x1
  40406d:	add    r12,0x8
  404071:	cmp    r15,rax
  404074:	cmovb  r15,rax
  404078:	sub    r14d,0x1
  40407c:	add    rsi,rax
  40407f:	test   r14d,r14d
  404082:	jg     0x404060
  404084:	cmp    r15,0x23
  404088:	jbe    0x404110
  40408e:	mov    esi,ebp
  404090:	jmp    0x404095
  404092:	mov    rdi,QWORD PTR [rbx]
  404095:	mov    rcx,QWORD PTR [rip+0x2826c]        # 0x42c308
  40409c:	lea    rdx,[rip+0x1fb4d]        # 0x423bf0
  4040a3:	mov    r8,rdi
  4040a6:	sub    esi,0x1
  4040a9:	add    rbx,0x8
  4040ad:	call   0x403b50
  4040b2:	test   esi,esi
  4040b4:	jg     0x404092
  4040b6:	cmp    QWORD PTR [rsp+0xa0],0xf
  4040bf:	ja     0x40421f
  4040c5:	mov    eax,DWORD PTR [r13+0x10]
  4040c9:	and    eax,0xf000
  4040ce:	cmp    eax,0x4000
  4040d3:	je     0x404265
  4040d9:	mov    eax,DWORD PTR [rsp+0x38]
  4040dd:	mov    rdx,QWORD PTR [rip+0x1bea4]        # 0x41ff88
  4040e4:	mov    rcx,QWORD PTR [rip+0x2821d]        # 0x42c308
  4040eb:	lea    r9d,[rax+rbp*1-0x1]
  4040f0:	mov    r8d,eax
  4040f3:	call   0x403b50
  4040f8:	nop
  4040f9:	add    rsp,0x58
  4040fd:	pop    rbx
  4040fe:	pop    rsi
  4040ff:	pop    rdi
  404100:	pop    rbp
  404101:	pop    r12
  404103:	pop    r13
  404105:	pop    r14
  404107:	pop    r15
  404109:	ret    
  40410a:	nop    WORD PTR [rax+rax*1+0x0]
  404110:	cmp    rsi,0x4b
  404114:	jbe    0x4041c0
  40411a:	lea    r12,[rsp+0x40]
  40411f:	lea    r8,[rip+0x1fad0]        # 0x423bf6
  404126:	mov    r9d,r15d
  404129:	mov    edx,0x10
  40412e:	mov    rcx,r12
  404131:	call   0x403f40
  404136:	cmp    eax,0xf
  404139:	jg     0x40430c
  40413f:	mov    eax,0x4e
  404144:	xor    edx,edx
  404146:	mov    r9,QWORD PTR [rip+0x281bb]        # 0x42c308
  40414d:	div    r15
  404150:	lea    rcx,[rip+0x1fa67]        # 0x423bbe
  404157:	mov    r8d,0x2
  40415d:	mov    edx,0x1
  404162:	add    rbx,0x8
  404166:	mov    r15d,ebp
  404169:	xor    esi,esi
  40416b:	mov    rdi,rax
  40416e:	call   0x41d890
  404173:	jmp    0x404188
  404175:	mov    rcx,QWORD PTR [rip+0x2818c]        # 0x42c308
  40417c:	mov    rdx,r12
  40417f:	call   0x403b50
  404184:	add    rbx,0x8
  404188:	sub    r15d,0x1
  40418c:	test   r15d,r15d
  40418f:	jle    0x4042f0
  404195:	lea    eax,[rsi+0x1]
  404198:	mov    r8,QWORD PTR [rbx-0x8]
  40419c:	cmp    rax,rdi
  40419f:	mov    rsi,rax
  4041a2:	jne    0x404175
  4041a4:	mov    rcx,QWORD PTR [rip+0x2815d]        # 0x42c308
  4041ab:	lea    rdx,[rip+0x1fad5]        # 0x423c87
  4041b2:	xor    esi,esi
  4041b4:	call   0x403b50
  4041b9:	jmp    0x404184
  4041bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4041c0:	mov    rdx,QWORD PTR [rip+0x28141]        # 0x42c308
  4041c7:	mov    ecx,0x20
  4041cc:	mov    esi,ebp
  4041ce:	call   0x41d8c0
  4041d3:	mov    rdx,QWORD PTR [rip+0x2812e]        # 0x42c308
  4041da:	mov    ecx,0x20
  4041df:	add    rbx,0x8
  4041e3:	sub    esi,0x1
  4041e6:	call   0x41d8c0
  4041eb:	mov    rcx,QWORD PTR [rbx-0x8]
  4041ef:	mov    rdx,QWORD PTR [rip+0x28112]        # 0x42c308
  4041f6:	call   0x41d8b8
  4041fb:	test   esi,esi
  4041fd:	jg     0x4041d3
  4041ff:	mov    rdx,QWORD PTR [rip+0x28102]        # 0x42c308
  404206:	mov    ecx,0xa
  40420b:	call   0x41d8c0
  404210:	cmp    QWORD PTR [rsp+0xa0],0xf
  404219:	jbe    0x4040c5
  40421f:	mov    eax,DWORD PTR [rsp+0x38]
  404223:	mov    rdx,QWORD PTR [rip+0x1bd5e]        # 0x41ff88
  40422a:	mov    rcx,QWORD PTR [rip+0x280d7]        # 0x42c308
  404231:	lea    r9d,[rax+rbp*1-0x1]
  404236:	mov    r8d,eax
  404239:	call   0x403b50
  40423e:	mov    rcx,QWORD PTR [rsp+0xa0]
  404246:	mov    edx,0x1
  40424b:	call   QWORD PTR [rcx+0x98]
  404251:	mov    eax,DWORD PTR [r13+0x10]
  404255:	and    eax,0xf000
  40425a:	cmp    eax,0x4000
  40425f:	jne    0x4040d9
  404265:	mov    rdx,QWORD PTR [rip+0x1be64]        # 0x4200d0
  40426c:	mov    rcx,QWORD PTR [rip+0x28095]        # 0x42c308
  404273:	mov    r8d,ebp
  404276:	call   0x403b50
  40427b:	mov    rdx,QWORD PTR [rip+0x28086]        # 0x42c308
  404282:	mov    rcx,QWORD PTR [rip+0x1bf37]        # 0x4201c0
  404289:	call   0x41d8b8
  40428e:	jmp    0x4040f9
  404293:	mov    rax,QWORD PTR [rcx+0x28]
  404297:	mov    rcx,QWORD PTR [rip+0x2806a]        # 0x42c308
  40429e:	mov    QWORD PTR [rsp+0x38],rax
  4042a3:	mov    rax,QWORD PTR [rdx+0x50]
  4042a7:	mov    r8,QWORD PTR [rsp+0x38]
  4042ac:	mov    QWORD PTR [rsp+0x20],rax
  4042b1:	mov    r9,QWORD PTR [rdx+0x18]
  4042b5:	mov    rdx,QWORD PTR [rip+0x2809c]        # 0x42c358
  4042bc:	call   0x403b50
  4042c1:	jmp    0x40401b
  4042c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4042d0:	mov    rdi,QWORD PTR [rbx+0x8]
  4042d4:	sub    ebp,0x1
  4042d7:	add    rbx,0x8
  4042db:	mov    DWORD PTR [rsp+0x38],0x1
  4042e3:	jmp    0x404046
  4042e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4042f0:	mov    r8,QWORD PTR [rbx-0x8]
  4042f4:	mov    rcx,QWORD PTR [rip+0x2800d]        # 0x42c308
  4042fb:	lea    rdx,[rip+0x1f981]        # 0x423c83
  404302:	call   0x403b50
  404307:	jmp    0x4040b6
  40430c:	mov    ecx,0x1
  404311:	call   0x403f90
  404316:	nop
  404317:	nop    WORD PTR [rax+rax*1+0x0]
  404320:	push   r15
  404322:	push   r14
  404324:	push   r13
  404326:	push   r12
  404328:	push   rbp
  404329:	push   rdi
  40432a:	push   rsi
  40432b:	push   rbx
  40432c:	sub    rsp,0x38
  404330:	mov    ebx,DWORD PTR [rsp+0xa0]
  404337:	mov    rdi,rcx
  40433a:	mov    QWORD PTR [rsp+0x88],rdx
  404342:	mov    QWORD PTR [rsp+0x90],r8
  40434a:	mov    rbp,r9
  40434d:	call   0x41d7f8
  404352:	mov    rsi,rax
  404355:	movzx  eax,BYTE PTR [rdi]
  404358:	cmp    al,0x7f
  40435a:	ja     0x4043b9
  40435c:	lea    rdx,[rip+0x2235d]        # 0x4266c0
  404363:	movzx  ecx,al
  404366:	mov    edx,DWORD PTR [rdx+rcx*4]
  404369:	test   edx,0x30000
  40436f:	je     0x4043b0
  404371:	lea    rdx,[rsp+0x28]
  404376:	xor    r8d,r8d
  404379:	mov    rcx,rdi
  40437c:	mov    QWORD PTR [rsp+0x28],rdi
  404381:	call   0x41d7c0
  404386:	cmp    DWORD PTR [rsp+0xa0],eax
  40438d:	jbe    0x40439f
  40438f:	mov    rdx,QWORD PTR [rsp+0x28]
  404394:	mov    eax,eax
  404396:	cmp    BYTE PTR [rdx],0x0
  404399:	je     0x404454
  40439f:	mov    rax,QWORD PTR [rip+0x1bc7a]        # 0x420020
  4043a6:	jmp    0x404419
  4043a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4043b0:	and    dh,0x80
  4043b3:	jne    0x404465
  4043b9:	xor    r14d,r14d
  4043bc:	test   rbx,rbx
  4043bf:	mov    r12,rbx
  4043c2:	mov    r13,0xffffffffffffffff
  4043c9:	je     0x404477
  4043cf:	nop
  4043d0:	mov    r15,QWORD PTR [rbp+r14*8+0x0]
  4043d5:	mov    r8,rsi
  4043d8:	mov    rdx,rdi
  4043db:	mov    rcx,r15
  4043de:	call   0x41d7f0
  4043e3:	test   eax,eax
  4043e5:	jne    0x4043fc
  4043e7:	cmp    BYTE PTR [r15+rsi*1],0x0
  4043ec:	je     0x404480
  4043f2:	cmp    r12,rbx
  4043f5:	mov    r12,r13
  4043f8:	cmove  r12,r14
  4043fc:	add    r14,0x1
  404400:	cmp    rbx,r14
  404403:	jne    0x4043d0
  404405:	cmp    rbx,r12
  404408:	mov    rax,r12
  40440b:	ja     0x404454
  40440d:	cmp    r12,rbx
  404410:	je     0x404477
  404412:	mov    rax,QWORD PTR [rip+0x1baff]        # 0x41ff18
  404419:	mov    QWORD PTR [rip+0x27f38],rax        # 0x42c358
  404420:	call   QWORD PTR [rip+0x2b566]        # 0x42f98c
  404426:	mov    r9d,DWORD PTR [rsp+0xa0]
  40442e:	mov    rdx,QWORD PTR [rsp+0x90]
  404436:	add    rax,0x60
  40443a:	mov    rcx,QWORD PTR [rsp+0x88]
  404442:	mov    r8,rbp
  404445:	mov    QWORD PTR [rip+0x27ebc],rax        # 0x42c308
  40444c:	call   0x403ff0
  404451:	mov    rax,rbx
  404454:	add    rsp,0x38
  404458:	pop    rbx
  404459:	pop    rsi
  40445a:	pop    rdi
  40445b:	pop    rbp
  40445c:	pop    r12
  40445e:	pop    r13
  404460:	pop    r14
  404462:	pop    r15
  404464:	ret    
  404465:	cmp    BYTE PTR [rdi+0x2],0x0
  404469:	jne    0x4043b9
  40446f:	cmp    al,0x7e
  404471:	je     0x404485
  404473:	cmp    al,0x2d
  404475:	je     0x404497
  404477:	mov    rax,QWORD PTR [rip+0x1bb52]        # 0x41ffd0
  40447e:	jmp    0x404419
  404480:	mov    rax,r14
  404483:	jmp    0x404454
  404485:	cmp    BYTE PTR [rdi+0x1],0x30
  404489:	jne    0x404477
  40448b:	mov    eax,DWORD PTR [rsp+0xa0]
  404492:	sub    eax,0x1
  404495:	jmp    0x404454
  404497:	cmp    BYTE PTR [rdi+0x1],0x31
  40449b:	jne    0x404477
  40449d:	jmp    0x40448b
  40449f:	nop
  4044a0:	push   r13
  4044a2:	push   r12
  4044a4:	push   rbp
  4044a5:	push   rdi
  4044a6:	push   rsi
  4044a7:	push   rbx
  4044a8:	sub    rsp,0x48
  4044ac:	mov    rbx,QWORD PTR [rip+0x2b529]        # 0x42f9dc
  4044b3:	mov    r12,rdx
  4044b6:	mov    r13,r8
  4044b9:	mov    rsi,rcx
  4044bc:	call   rbx
  4044be:	mov    ecx,DWORD PTR [rax]
  4044c0:	call   0x41d808
  4044c5:	mov    rbp,rax
  4044c8:	call   rbx
  4044ca:	mov    rbx,QWORD PTR [rip+0x1ba6f]        # 0x41ff40
  4044d1:	mov    edi,DWORD PTR [rax]
  4044d3:	call   QWORD PTR [rip+0x2b4b3]        # 0x42f98c
  4044d9:	lea    rcx,[rax+0x60]
  4044dd:	mov    QWORD PTR [rsp+0x30],r13
  4044e2:	mov    QWORD PTR [rsp+0x28],r12
  4044e7:	mov    QWORD PTR [rsp+0x20],rbp
  4044ec:	mov    r9d,edi
  4044ef:	mov    r8,rsi
  4044f2:	mov    rdx,rbx
  4044f5:	call   0x403b50
  4044fa:	nop
  4044fb:	add    rsp,0x48
  4044ff:	pop    rbx
  404500:	pop    rsi
  404501:	pop    rdi
  404502:	pop    rbp
  404503:	pop    r12
  404505:	pop    r13
  404507:	ret    
  404508:	nop    DWORD PTR [rax+rax*1+0x0]
  404510:	sub    rsp,0x28
  404514:	call   0x4044a0
  404519:	mov    ecx,0x1
  40451e:	call   0x403f90
  404523:	nop
  404524:	xchg   ax,ax
  404526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404530:	sub    rsp,0x38
  404534:	mov    QWORD PTR [rsp+0x50],r8
  404539:	lea    r8,[rsp+0x50]
  40453e:	mov    QWORD PTR [rsp+0x58],r9
  404543:	mov    QWORD PTR [rsp+0x28],r8
  404548:	call   0x418e00
  40454d:	add    rsp,0x38
  404551:	ret    
  404552:	nop    DWORD PTR [rax+0x0]
  404556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404560:	push   r12
  404562:	push   rbp
  404563:	push   rdi
  404564:	push   rsi
  404565:	push   rbx
  404566:	sub    rsp,0x20
  40456a:	mov    ebx,edx
  40456c:	mov    rsi,rcx
  40456f:	mov    rbp,r8
  404572:	sub    ebx,0x1
  404575:	mov    rdi,r9
  404578:	js     0x4045a2
  40457a:	nop    WORD PTR [rax+rax*1+0x0]
  404580:	mov    rdx,rsi
  404583:	mov    ecx,0x20
  404588:	sub    ebx,0x1
  40458b:	call   0x41d840
  404590:	mov    rdx,rsi
  404593:	mov    ecx,0x20
  404598:	call   0x41d840
  40459d:	cmp    ebx,0xffffffff
  4045a0:	jne    0x404580
  4045a2:	mov    edx,DWORD PTR [rdi]
  4045a4:	cmp    edx,0x6
  4045a7:	ja     0x4047a4
  4045ad:	lea    rax,[rip+0x1e10c]        # 0x4226c0
  4045b4:	mov    ecx,edx
  4045b6:	movsxd rcx,DWORD PTR [rax+rcx*4]
  4045ba:	add    rax,rcx
  4045bd:	jmp    rax
  4045bf:	nop
  4045c0:	mov    r9d,DWORD PTR [rdi+0x10]
  4045c4:	mov    r8,QWORD PTR [rdi+0x8]
  4045c8:	lea    rdx,[rip+0x1f967]        # 0x423f36
  4045cf:	mov    rcx,rsi
  4045d2:	add    rsp,0x20
  4045d6:	pop    rbx
  4045d7:	pop    rsi
  4045d8:	pop    rdi
  4045d9:	pop    rbp
  4045da:	pop    r12
  4045dc:	jmp    0x403b50
  4045e1:	mov    rbx,QWORD PTR [rdi+0x10]
  4045e5:	mov    rbp,QWORD PTR [rdi+0x8]
  4045e9:	test   rbx,rbx
  4045ec:	je     0x404835
  4045f2:	mov    edi,DWORD PTR [rbx]
  4045f4:	mov    r8,rbp
  4045f7:	lea    rdx,[rip+0x1f6a1]        # 0x423c9f
  4045fe:	test   edi,edi
  404600:	jle    0x4046d8
  404606:	lea    rdx,[rip+0x1f664]        # 0x423c71
  40460d:	mov    rcx,rsi
  404610:	add    rbx,0x8
  404614:	call   0x403b50
  404619:	mov    eax,DWORD PTR [rip+0x1b3e1]        # 0x41fa00
  40461f:	lea    edx,[rax+0x1]
  404622:	lea    eax,[rdi-0x1]
  404625:	mov    DWORD PTR [rip+0x1b3d5],edx        # 0x41fa00
  40462b:	lea    rdi,[rbx+rax*8+0x8]
  404630:	jmp    0x404638
  404632:	mov    edx,DWORD PTR [rip+0x1b3c8]        # 0x41fa00
  404638:	add    rbx,0x8
  40463c:	mov    r9,QWORD PTR [rbx-0x8]
  404640:	xor    r8d,r8d
  404643:	mov    rcx,rsi
  404646:	call   0x404560
  40464b:	cmp    rbx,rdi
  40464e:	jne    0x404632
  404650:	mov    ebx,DWORD PTR [rip+0x1b3aa]        # 0x41fa00
  404656:	lea    eax,[rbx-0x1]
  404659:	sub    ebx,0x2
  40465c:	mov    DWORD PTR [rip+0x1b39e],eax        # 0x41fa00
  404662:	js     0x404686
  404664:	mov    rdx,rsi
  404667:	mov    ecx,0x20
  40466c:	sub    ebx,0x1
  40466f:	call   0x41d840
  404674:	mov    rdx,rsi
  404677:	mov    ecx,0x20
  40467c:	call   0x41d840
  404681:	cmp    ebx,0xffffffff
  404684:	jne    0x404664
  404686:	mov    r8,rbp
  404689:	lea    rdx,[rip+0x1e026]        # 0x4226b6
  404690:	jmp    0x4046d8
  404692:	mov    r12,QWORD PTR [rdi+0x8]
  404696:	lea    rbp,[rdi+0x10]
  40469a:	lea    rdx,[rip+0x1f619]        # 0x423cba
  4046a1:	lea    rdi,[rip+0x1ea58]        # 0x423100
  4046a8:	mov    rcx,rsi
  4046ab:	mov    r8,r12
  4046ae:	call   0x403b50
  4046b3:	movzx  ebx,BYTE PTR [rbp+0x0]
  4046b7:	cmp    ebx,0x26
  4046ba:	je     0x4047e0
  4046c0:	jg     0x4047b4
  4046c6:	test   ebx,ebx
  4046c8:	jne    0x404820
  4046ce:	lea    rdx,[rip+0x1f514]        # 0x423be9
  4046d5:	mov    r8,r12
  4046d8:	mov    rcx,rsi
  4046db:	add    rsp,0x20
  4046df:	pop    rbx
  4046e0:	pop    rsi
  4046e1:	pop    rdi
  4046e2:	pop    rbp
  4046e3:	pop    r12
  4046e5:	jmp    0x403b50
  4046ea:	nop    WORD PTR [rax+rax*1+0x0]
  4046f0:	test   rbp,rbp
  4046f3:	je     0x4045c0
  4046f9:	lea    rax,[rip+0x1df9c]        # 0x42269c
  404700:	mov    r8,QWORD PTR [rdi+0x8]
  404704:	lea    r9,[rip+0x1df89]        # 0x422694
  40470b:	cmp    edx,0x2
  40470e:	lea    rdx,[rip+0x1f67f]        # 0x423d94
  404715:	mov    rcx,rsi
  404718:	cmovne r9,rax
  40471c:	mov    ebx,DWORD PTR [rbp+0x10]
  40471f:	mov    r12,QWORD PTR [rbp+0x18]
  404723:	call   0x403b50
  404728:	mov    ecx,0x3
  40472d:	mov    rdx,rbp
  404730:	call   QWORD PTR [rbp+0x38]
  404733:	mov    rcx,QWORD PTR [rbp+0x18]
  404737:	test   rcx,rcx
  40473a:	je     0x404752
  40473c:	mov    rdx,rsi
  40473f:	call   0x41d8b8
  404744:	cmp    DWORD PTR [rdi],0x2
  404747:	je     0x404752
  404749:	mov    rcx,QWORD PTR [rbp+0x18]
  40474d:	call   0x41d8a8
  404752:	mov    QWORD PTR [rbp+0x18],r12
  404756:	mov    DWORD PTR [rbp+0x10],ebx
  404759:	lea    rdx,[rip+0x1f489]        # 0x423be9
  404760:	mov    r8,QWORD PTR [rdi+0x8]
  404764:	jmp    0x4046d8
  404769:	nop    DWORD PTR [rax+0x0]
  404770:	mov    eax,DWORD PTR [rdi+0x10]
  404773:	lea    r9,[rip+0x1df31]        # 0x4226ab
  40477a:	mov    r8,QWORD PTR [rdi+0x8]
  40477e:	lea    rdx,[rip+0x1f6cc]        # 0x423e51
  404785:	mov    rcx,rsi
  404788:	test   eax,eax
  40478a:	lea    rax,[rip+0x1df1f]        # 0x4226b0
  404791:	cmove  r9,rax
  404795:	add    rsp,0x20
  404799:	pop    rbx
  40479a:	pop    rsi
  40479b:	pop    rdi
  40479c:	pop    rbp
  40479d:	pop    r12
  40479f:	jmp    0x403b50
  4047a4:	mov    r8,QWORD PTR [rdi+0x8]
  4047a8:	lea    rdx,[rip+0x1f4f0]        # 0x423c9f
  4047af:	jmp    0x4046d8
  4047b4:	cmp    ebx,0x3e
  4047b7:	je     0x4047e0
  4047b9:	jg     0x4047d3
  4047bb:	cmp    ebx,0x3c
  4047be:	je     0x4047e0
  4047c0:	mov    rdx,rsi
  4047c3:	mov    ecx,ebx
  4047c5:	call   0x41d840
  4047ca:	add    rbp,0x1
  4047ce:	jmp    0x4046b3
  4047d3:	lea    eax,[rbx-0x7f]
  4047d6:	cmp    eax,0x80
  4047db:	ja     0x4047c0
  4047dd:	nop    DWORD PTR [rax]
  4047e0:	mov    rdx,rsi
  4047e3:	mov    ecx,0x26
  4047e8:	call   0x41d840
  4047ed:	cmp    ebx,0x26
  4047f0:	lea    rax,[rip+0x1e8c9]        # 0x4230c0
  4047f7:	je     0x404827
  4047f9:	add    rax,0x10
  4047fd:	cmp    ebx,DWORD PTR [rax]
  4047ff:	je     0x404827
  404801:	cmp    rax,rdi
  404804:	jne    0x4047f9
  404806:	lea    rdx,[rip+0x1f59c]        # 0x423da9
  40480d:	mov    r8d,ebx
  404810:	mov    rcx,rsi
  404813:	call   0x403b50
  404818:	jmp    0x4047ca
  40481a:	nop    WORD PTR [rax+rax*1+0x0]
  404820:	cmp    ebx,0x1f
  404823:	jg     0x4047c0
  404825:	jmp    0x4047e0
  404827:	lea    rcx,[rax+0x8]
  40482b:	mov    rdx,rsi
  40482e:	call   0x41d8b8
  404833:	jmp    0x4047ca
  404835:	add    rsp,0x20
  404839:	pop    rbx
  40483a:	pop    rsi
  40483b:	pop    rdi
  40483c:	pop    rbp
  40483d:	pop    r12
  40483f:	ret    
  404840:	test   BYTE PTR [rdx+0x10],0x8
  404844:	je     0x404850
  404846:	repz ret 
  404848:	nop    DWORD PTR [rax+rax*1+0x0]
  404850:	mov    rax,QWORD PTR [rcx+0x98]
  404857:	xor    edx,edx
  404859:	rex.W jmp rax
  40485c:	nop    DWORD PTR [rax+0x0]
  404860:	mov    rax,QWORD PTR [rip+0x1b8a1]        # 0x420108
  404867:	lea    r10,[rip+0x1f28b]        # 0x423af9
  40486e:	lea    r11,[rip+0x1f2a1]        # 0x423b16
  404875:	and    ecx,0x3
  404878:	cmp    ecx,0x2
  40487b:	mov    QWORD PTR [rdx],rax
  40487e:	mov    QWORD PTR [rip+0x27b63],r10        # 0x42c3e8
  404885:	lea    r10,[rip+0x1f267]        # 0x423af3
  40488c:	mov    QWORD PTR [rip+0x27b9d],r11        # 0x42c430
  404893:	lea    r11,[rip+0x1f264]        # 0x423afe
  40489a:	lea    rdx,[rip+0x1e400]        # 0x422ca1
  4048a1:	mov    QWORD PTR [rip+0x27b30],r10        # 0x42c3d8
  4048a8:	lea    r10,[rip+0x1f255]        # 0x423b04
  4048af:	mov    rax,QWORD PTR [rip+0x1b5ea]        # 0x41fea0
  4048b6:	mov    QWORD PTR [rip+0x27b3b],r11        # 0x42c3f8
  4048bd:	lea    r11,[rip+0x1e3dd]        # 0x422ca1
  4048c4:	mov    QWORD PTR [rip+0x27afd],rdx        # 0x42c3c8
  4048cb:	mov    QWORD PTR [rip+0x27b2e],r10        # 0x42c400
  4048d2:	lea    r10,[rip+0x1f214]        # 0x423aed
  4048d9:	mov    rdx,QWORD PTR [rip+0x1b5b8]        # 0x41fe98
  4048e0:	mov    r8,QWORD PTR [rip+0x1b5a9]        # 0x41fe90
  4048e7:	mov    r9,QWORD PTR [rip+0x1b59a]        # 0x41fe88
  4048ee:	mov    QWORD PTR [rip+0x27b13],r11        # 0x42c408
  4048f5:	mov    QWORD PTR [rip+0x27b14],r10        # 0x42c410
  4048fc:	lea    r11,[rip+0x1f2aa]        # 0x423bad
  404903:	lea    r10,[rip+0x1f2b0]        # 0x423bba
  40490a:	mov    QWORD PTR [rip+0x27aaf],rax        # 0x42c3c0
  404911:	mov    QWORD PTR [rip+0x27ab8],rdx        # 0x42c3d0
  404918:	mov    QWORD PTR [rip+0x27ac1],r8        # 0x42c3e0
  40491f:	mov    QWORD PTR [rip+0x27aca],r9        # 0x42c3f0
  404926:	mov    QWORD PTR [rip+0x27aeb],r11        # 0x42c418
  40492d:	mov    QWORD PTR [rip+0x27aec],r10        # 0x42c420
  404934:	je     0x404970
  404936:	cmp    ecx,0x3
  404939:	je     0x404954
  40493b:	cmp    ecx,0x1
  40493e:	je     0x404954
  404940:	lea    rax,[rip+0x1f1c6]        # 0x423b0d
  404947:	mov    QWORD PTR [rip+0x27ada],rax        # 0x42c428
  40494e:	mov    eax,0x16
  404953:	ret    
  404954:	lea    rax,[rip+0x1f1b0]        # 0x423b0b
  40495b:	mov    QWORD PTR [rip+0x27ac6],rax        # 0x42c428
  404962:	mov    eax,0x16
  404967:	ret    
  404968:	nop    DWORD PTR [rax+rax*1+0x0]
  404970:	lea    rcx,[rip+0x1f1dd]        # 0x423b54
  404977:	mov    QWORD PTR [rip+0x27aaa],rcx        # 0x42c428
  40497e:	mov    BYTE PTR [r9],0x20
  404982:	mov    BYTE PTR [r8],0x20
  404986:	mov    BYTE PTR [rdx],0x20
  404989:	mov    BYTE PTR [rax],0x20
  40498c:	lea    rax,[rip+0x1dd49]        # 0x4226dc
  404993:	mov    QWORD PTR [rip+0x27a66],rax        # 0x42c400
  40499a:	mov    eax,0x8
  40499f:	ret    
  4049a0:	lea    rax,[rip+0x1f1dc]        # 0x423b83
  4049a7:	and    ecx,0x12
  4049aa:	mov    QWORD PTR [rip+0x27a0f],rax        # 0x42c3c0
  4049b1:	lea    rax,[rip+0x1f1c7]        # 0x423b7f
  4049b8:	cmp    ecx,0x2
  4049bb:	mov    QWORD PTR [rip+0x27a06],rax        # 0x42c3c8
  4049c2:	lea    rax,[rip+0x1f1ae]        # 0x423b77
  4049c9:	mov    QWORD PTR [rip+0x27a00],rax        # 0x42c3d0
  4049d0:	lea    rax,[rip+0x1f190]        # 0x423b67
  4049d7:	mov    QWORD PTR [rip+0x27a02],rax        # 0x42c3e0
  4049de:	lea    rax,[rip+0x1f186]        # 0x423b6b
  4049e5:	mov    QWORD PTR [rip+0x279fc],rax        # 0x42c3e8
  4049ec:	lea    rax,[rip+0x1f194]        # 0x423b87
  4049f3:	mov    QWORD PTR [rip+0x27a36],rax        # 0x42c430
  4049fa:	lea    rax,[rip+0x1f162]        # 0x423b63
  404a01:	mov    QWORD PTR [rip+0x279d0],rax        # 0x42c3d8
  404a08:	lea    rax,[rip+0x1f148]        # 0x423b57
  404a0f:	mov    QWORD PTR [rip+0x279da],rax        # 0x42c3f0
  404a16:	lea    rax,[rip+0x1f152]        # 0x423b6f
  404a1d:	mov    QWORD PTR [rip+0x279d4],rax        # 0x42c3f8
  404a24:	lea    rax,[rip+0x1f150]        # 0x423b7b
  404a2b:	mov    QWORD PTR [rip+0x279ce],rax        # 0x42c400
  404a32:	lea    rax,[rip+0x1f13a]        # 0x423b73
  404a39:	mov    QWORD PTR [rip+0x279c8],rax        # 0x42c408
  404a40:	lea    rax,[rip+0x1f114]        # 0x423b5b
  404a47:	mov    QWORD PTR [rip+0x279c2],rax        # 0x42c410
  404a4e:	lea    rax,[rip+0x1f15f]        # 0x423bb4
  404a55:	mov    QWORD PTR [rip+0x279bc],rax        # 0x42c418
  404a5c:	lea    rax,[rip+0x1f15b]        # 0x423bbe
  404a63:	mov    QWORD PTR [rip+0x279b6],rax        # 0x42c420
  404a6a:	je     0x404ae5
  404a6c:	jbe    0x404ac0
  404a6e:	cmp    ecx,0x10
  404a71:	je     0x404aa0
  404a73:	cmp    ecx,0x12
  404a76:	jne    0x404ae2
  404a78:	mov    rax,QWORD PTR [rip+0x1b689]        # 0x420108
  404a7f:	mov    QWORD PTR [rdx],rax
  404a82:	mov    rax,QWORD PTR [rip+0x1b687]        # 0x420110
  404a89:	mov    QWORD PTR [rip+0x27998],rax        # 0x42c428
  404a90:	mov    eax,0x13
  404a95:	ret    
  404a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404aa0:	mov    rax,QWORD PTR [rip+0x1b659]        # 0x420100
  404aa7:	mov    QWORD PTR [rdx],rax
  404aaa:	mov    rax,QWORD PTR [rip+0x1b65f]        # 0x420110
  404ab1:	mov    QWORD PTR [rip+0x27970],rax        # 0x42c428
  404ab8:	mov    eax,0x13
  404abd:	ret    
  404abe:	xchg   ax,ax
  404ac0:	test   ecx,ecx
  404ac2:	jne    0x404ae2
  404ac4:	mov    rax,QWORD PTR [rip+0x1b6e5]        # 0x4201b0
  404acb:	mov    QWORD PTR [rdx],rax
  404ace:	lea    rax,[rip+0x1f071]        # 0x423b46
  404ad5:	mov    QWORD PTR [rip+0x2794c],rax        # 0x42c428
  404adc:	mov    eax,0x18
  404ae1:	ret    
  404ae2:	xor    eax,eax
  404ae4:	ret    
  404ae5:	mov    rax,QWORD PTR [rip+0x1b6cc]        # 0x4201b8
  404aec:	mov    QWORD PTR [rdx],rax
  404aef:	lea    rax,[rip+0x1f050]        # 0x423b46
  404af6:	mov    QWORD PTR [rip+0x2792b],rax        # 0x42c428
  404afd:	mov    eax,0x18
  404b02:	ret    
  404b03:	nop    DWORD PTR [rax]
  404b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b10:	push   rsi
  404b11:	push   rbx
  404b12:	sub    rsp,0x38
  404b16:	cmp    rcx,0xffffffffffffffff
  404b1a:	mov    r9,rdx
  404b1d:	je     0x404b53
  404b1f:	movabs r10,0x7fffffffffffffff
  404b29:	movsxd r8,r8d
  404b2c:	mov    rax,r10
  404b2f:	cqo    
  404b31:	idiv   r8
  404b34:	cmp    rax,r9
  404b37:	jl     0x404b80
  404b39:	imul   r8,r9
  404b3d:	sub    r10,r8
  404b40:	cmp    rcx,r10
  404b43:	jg     0x404b80
  404b45:	lea    rsi,[rcx+r8*1]
  404b49:	mov    rax,rsi
  404b4c:	add    rsp,0x38
  404b50:	pop    rbx
  404b51:	pop    rsi
  404b52:	ret    
  404b53:	mov    QWORD PTR [rsp+0x28],rcx
  404b58:	mov    rbx,QWORD PTR [rip+0x2ae7d]        # 0x42f9dc
  404b5f:	call   rbx
  404b61:	mov    eax,DWORD PTR [rax]
  404b63:	mov    rcx,QWORD PTR [rsp+0x28]
  404b68:	test   eax,eax
  404b6a:	mov    rsi,rcx
  404b6d:	jne    0x404b49
  404b6f:	call   rbx
  404b71:	mov    DWORD PTR [rax],0x16
  404b77:	jmp    0x404b49
  404b79:	nop    DWORD PTR [rax+0x0]
  404b80:	call   QWORD PTR [rip+0x2ae56]        # 0x42f9dc
  404b86:	mov    rsi,0xffffffffffffffff
  404b8d:	mov    DWORD PTR [rax],0x22
  404b93:	jmp    0x404b49
  404b95:	nop
  404b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ba0:	push   r15
  404ba2:	push   r14
  404ba4:	push   r13
  404ba6:	push   r12
  404ba8:	push   rbp
  404ba9:	push   rdi
  404baa:	push   rsi
  404bab:	push   rbx
  404bac:	sub    rsp,0x48
  404bb0:	mov    rax,QWORD PTR [rdx]
  404bb3:	cmp    rcx,0xffffffffffffffff
  404bb7:	mov    QWORD PTR [rsp+0x38],rax
  404bbc:	je     0x404c49
  404bc2:	mov    r13d,r9d
  404bc5:	mov    r12,r8
  404bc8:	mov    rbp,rdx
  404bcb:	mov    QWORD PTR [rsp+0x28],rcx
  404bd0:	mov    r15,QWORD PTR [rip+0x2ae05]        # 0x42f9dc
  404bd7:	call   r15
  404bda:	mov    rcx,QWORD PTR [rsp+0x38]
  404bdf:	lea    rdx,[rsp+0x38]
  404be4:	mov    r8d,0xa
  404bea:	mov    DWORD PTR [rax],0x0
  404bf0:	call   0x41d7c0
  404bf5:	mov    r14d,eax
  404bf8:	call   r15
  404bfb:	mov    eax,DWORD PTR [rax]
  404bfd:	test   eax,eax
  404bff:	jne    0x404c49
  404c01:	mov    rdi,QWORD PTR [rsp+0x38]
  404c06:	mov    rsi,QWORD PTR [rip+0x2aef7]        # 0x42fb04
  404c0d:	jmp    0x404c15
  404c0f:	nop
  404c10:	mov    QWORD PTR [rsp+0x38],rdi
  404c15:	movzx  ecx,BYTE PTR [rdi]
  404c18:	mov    rbx,rdi
  404c1b:	add    rdi,0x1
  404c1f:	call   rsi
  404c21:	test   eax,eax
  404c23:	jne    0x404c10
  404c25:	cmp    r12,rbx
  404c28:	jne    0x404c40
  404c2a:	mov    rcx,QWORD PTR [rsp+0x28]
  404c2f:	mov    QWORD PTR [rbp+0x0],r12
  404c33:	mov    r8d,r13d
  404c36:	mov    rdx,r14
  404c39:	call   0x404b10
  404c3e:	jmp    0x404c50
  404c40:	call   r15
  404c43:	mov    DWORD PTR [rax],0x16
  404c49:	mov    rax,0xffffffffffffffff
  404c50:	add    rsp,0x48
  404c54:	pop    rbx
  404c55:	pop    rsi
  404c56:	pop    rdi
  404c57:	pop    rbp
  404c58:	pop    r12
  404c5a:	pop    r13
  404c5c:	pop    r14
  404c5e:	pop    r15
  404c60:	ret    
  404c61:	nop    DWORD PTR [rax+rax*1+0x0]
  404c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c70:	push   rbp
  404c71:	push   rdi
  404c72:	push   rsi
  404c73:	push   rbx
  404c74:	sub    rsp,0x38
  404c78:	mov    edx,0x3a
  404c7d:	mov    rbx,rcx
  404c80:	call   0x41d820
  404c85:	test   rax,rax
  404c88:	je     0x404d20
  404c8e:	lea    rsi,[rsp+0x20]
  404c93:	mov    r8,rax
  404c96:	xor    ecx,ecx
  404c98:	mov    r9d,0xe10
  404c9e:	mov    QWORD PTR [rsp+0x20],rbx
  404ca3:	mov    rdx,rsi
  404ca6:	call   0x404ba0
  404cab:	mov    rbx,rax
  404cae:	mov    rax,QWORD PTR [rsp+0x20]
  404cb3:	mov    edx,0x3a
  404cb8:	lea    rcx,[rax+0x1]
  404cbc:	mov    QWORD PTR [rsp+0x20],rcx
  404cc1:	call   0x41d820
  404cc6:	test   rax,rax
  404cc9:	mov    r8,rax
  404ccc:	je     0x404e0f
  404cd2:	mov    r9d,0x3c
  404cd8:	mov    rdx,rsi
  404cdb:	mov    rcx,rbx
  404cde:	call   0x404ba0
  404ce3:	mov    rdi,rax
  404ce6:	mov    rax,QWORD PTR [rsp+0x20]
  404ceb:	lea    rbx,[rax+0x1]
  404cef:	mov    rcx,rbx
  404cf2:	mov    QWORD PTR [rsp+0x20],rbx
  404cf7:	call   0x41d7f8
  404cfc:	lea    r8,[rbx+rax*1]
  404d00:	mov    r9d,0x1
  404d06:	mov    rdx,rsi
  404d09:	mov    rcx,rdi
  404d0c:	call   0x404ba0
  404d11:	mov    rbp,rax
  404d14:	mov    rax,rbp
  404d17:	add    rsp,0x38
  404d1b:	pop    rbx
  404d1c:	pop    rsi
  404d1d:	pop    rdi
  404d1e:	pop    rbp
  404d1f:	ret    
  404d20:	lea    rdx,[rip+0x1d9bc]        # 0x4226e3
  404d27:	mov    rcx,rbx
  404d2a:	call   0x41d7e0
  404d2f:	test   rax,rax
  404d32:	je     0x404e30
  404d38:	mov    edx,0x48
  404d3d:	mov    rcx,rbx
  404d40:	mov    QWORD PTR [rsp+0x28],rbx
  404d45:	xor    ebp,ebp
  404d47:	call   0x41d820
  404d4c:	test   rax,rax
  404d4f:	je     0x404d77
  404d51:	lea    rdx,[rsp+0x28]
  404d56:	mov    r9d,0xe10
  404d5c:	mov    r8,rax
  404d5f:	xor    ecx,ecx
  404d61:	call   0x404ba0
  404d66:	mov    rbp,rax
  404d69:	mov    rax,QWORD PTR [rsp+0x28]
  404d6e:	lea    rbx,[rax+0x1]
  404d72:	mov    QWORD PTR [rsp+0x28],rbx
  404d77:	mov    edx,0x4d
  404d7c:	mov    rcx,rbx
  404d7f:	call   0x41d820
  404d84:	test   rax,rax
  404d87:	je     0x404db0
  404d89:	lea    rdx,[rsp+0x28]
  404d8e:	mov    rcx,rbp
  404d91:	mov    r9d,0x3c
  404d97:	mov    r8,rax
  404d9a:	call   0x404ba0
  404d9f:	mov    rbp,rax
  404da2:	mov    rax,QWORD PTR [rsp+0x28]
  404da7:	lea    rbx,[rax+0x1]
  404dab:	mov    QWORD PTR [rsp+0x28],rbx
  404db0:	mov    edx,0x53
  404db5:	mov    rcx,rbx
  404db8:	call   0x41d820
  404dbd:	test   rax,rax
  404dc0:	je     0x404de9
  404dc2:	lea    rdx,[rsp+0x28]
  404dc7:	mov    rcx,rbp
  404dca:	mov    r9d,0x1
  404dd0:	mov    r8,rax
  404dd3:	call   0x404ba0
  404dd8:	mov    rbp,rax
  404ddb:	mov    rax,QWORD PTR [rsp+0x28]
  404de0:	lea    rbx,[rax+0x1]
  404de4:	mov    QWORD PTR [rsp+0x28],rbx
  404de9:	mov    rdi,QWORD PTR [rip+0x2ad14]        # 0x42fb04
  404df0:	jmp    0x404df7
  404df2:	mov    QWORD PTR [rsp+0x28],rbx
  404df7:	movzx  ecx,BYTE PTR [rbx]
  404dfa:	add    rbx,0x1
  404dfe:	mov    esi,ecx
  404e00:	call   rdi
  404e02:	test   eax,eax
  404e04:	jne    0x404df2
  404e06:	test   sil,sil
  404e09:	je     0x404d14
  404e0f:	call   QWORD PTR [rip+0x2abc7]        # 0x42f9dc
  404e15:	mov    rbp,0xffffffffffffffff
  404e1c:	mov    DWORD PTR [rax],0x16
  404e22:	jmp    0x404d14
  404e27:	nop    WORD PTR [rax+rax*1+0x0]
  404e30:	mov    rcx,rbx
  404e33:	call   0x41d7f8
  404e38:	cmp    rax,0x6
  404e3c:	jne    0x404e0f
  404e3e:	movzx  eax,WORD PTR [rbx]
  404e41:	lea    rbp,[rsp+0x22]
  404e46:	lea    rdi,[rsp+0x28]
  404e4b:	lea    rsi,[rsp+0x20]
  404e50:	mov    r9d,0xe10
  404e56:	xor    ecx,ecx
  404e58:	mov    r8,rbp
  404e5b:	mov    rdx,rdi
  404e5e:	mov    BYTE PTR [rsp+0x22],0x0
  404e63:	mov    QWORD PTR [rsp+0x28],rsi
  404e68:	mov    WORD PTR [rsp+0x20],ax
  404e6d:	call   0x404ba0
  404e72:	movzx  edx,WORD PTR [rbx+0x2]
  404e76:	mov    r8,rbp
  404e79:	mov    r9d,0x3c
  404e7f:	mov    rcx,rax
  404e82:	mov    BYTE PTR [rsp+0x22],0x0
  404e87:	mov    QWORD PTR [rsp+0x28],rsi
  404e8c:	mov    WORD PTR [rsp+0x20],dx
  404e91:	mov    rdx,rdi
  404e94:	call   0x404ba0
  404e99:	movzx  edx,WORD PTR [rbx+0x4]
  404e9d:	mov    r8,rbp
  404ea0:	mov    r9d,0x1
  404ea6:	mov    rcx,rax
  404ea9:	mov    BYTE PTR [rsp+0x22],0x0
  404eae:	mov    QWORD PTR [rsp+0x28],rsi
  404eb3:	mov    WORD PTR [rsp+0x20],dx
  404eb8:	mov    rdx,rdi
  404ebb:	call   0x404ba0
  404ec0:	mov    rbp,rax
  404ec3:	jmp    0x404d14
  404ec8:	nop    DWORD PTR [rax+rax*1+0x0]
  404ed0:	push   r13
  404ed2:	push   r12
  404ed4:	push   rbp
  404ed5:	push   rdi
  404ed6:	push   rsi
  404ed7:	push   rbx
  404ed8:	sub    rsp,0x38
  404edc:	mov    r12,QWORD PTR [rip+0x1b1bd]        # 0x4200a0
  404ee3:	mov    r13,QWORD PTR [rcx+0x28]
  404ee7:	lea    rsi,[rip+0x205e1]        # 0x4254cf
  404eee:	cmp    WORD PTR [rdx+0x8],0x8000
  404ef4:	mov    rdi,rdx
  404ef7:	mov    rbx,rcx
  404efa:	cmovne rsi,QWORD PTR [rip+0x1b066]        # 0x41ff68
  404f02:	mov    rbp,QWORD PTR [rip+0x2aa83]        # 0x42f98c
  404f09:	call   rbp
  404f0b:	lea    rcx,[rax+0x60]
  404f0f:	mov    rdx,r12
  404f12:	mov    r8,r13
  404f15:	call   0x403b50
  404f1a:	movzx  r12d,WORD PTR [rdi+0xc]
  404f1f:	cmp    r12w,0x1
  404f24:	jbe    0x404f70
  404f26:	mov    r13,QWORD PTR [rdi+0x50]
  404f2a:	mov    rdi,QWORD PTR [rip+0x1b007]        # 0x41ff38
  404f31:	call   rbp
  404f33:	lea    rcx,[rax+0x60]
  404f37:	mov    QWORD PTR [rsp+0x20],rsi
  404f3c:	movzx  r8d,r12w
  404f40:	mov    r9,r13
  404f43:	mov    rdx,rdi
  404f46:	call   0x403b50
  404f4b:	mov    edx,0x1
  404f50:	mov    rcx,rbx
  404f53:	call   QWORD PTR [rbx+0x98]
  404f59:	add    rsp,0x38
  404f5d:	pop    rbx
  404f5e:	pop    rsi
  404f5f:	pop    rdi
  404f60:	pop    rbp
  404f61:	pop    r12
  404f63:	pop    r13
  404f65:	ret    
  404f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f70:	mov    r12,QWORD PTR [rdi+0x50]
  404f74:	mov    rdi,QWORD PTR [rip+0x1b0b5]        # 0x420030
  404f7b:	call   rbp
  404f7d:	lea    rcx,[rax+0x60]
  404f81:	mov    r9,rsi
  404f84:	mov    r8,r12
  404f87:	mov    rdx,rdi
  404f8a:	call   0x403b50
  404f8f:	jmp    0x404f4b
  404f91:	nop    DWORD PTR [rax+rax*1+0x0]
  404f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404fa0:	push   rbp
  404fa1:	push   rdi
  404fa2:	push   rsi
  404fa3:	push   rbx
  404fa4:	sub    rsp,0x48
  404fa8:	mov    rbx,QWORD PTR [rdx]
  404fab:	mov    rsi,rcx
  404fae:	mov    r8d,DWORD PTR [rbx+0x10]
  404fb2:	mov    rdi,QWORD PTR [rbx+0x38]
  404fb6:	test   r8b,0x40
  404fba:	jne    0x4050c0
  404fc0:	mov    rcx,QWORD PTR [rdx+0x8]
  404fc4:	mov    QWORD PTR [rbx+0x18],rcx
  404fc8:	test   BYTE PTR [rsi+0x12],0x8
  404fcc:	je     0x404fe0
  404fce:	test   r8d,0x100
  404fd5:	mov    ebp,0x1
  404fda:	jne    0x405080
  404fe0:	movzx  eax,WORD PTR [rbx+0x8]
  404fe4:	cmp    ax,0x8000
  404fe8:	je     0x4050e0
  404fee:	lea    r10,[rax+rax*2]
  404ff2:	mov    r9,QWORD PTR [rsi+0x78]
  404ff6:	and    r8d,0x4
  404ffa:	lea    rax,[rax+r10*4]
  404ffe:	lea    r10,[r9+rax*8]
  405002:	jne    0x405090
  405008:	mov    eax,0xffff8000
  40500d:	mov    WORD PTR [r10+0x4],ax
  405012:	movzx  eax,WORD PTR [rbx]
  405015:	cmp    ax,0x8000
  405019:	je     0x40509a
  40501b:	movzx  r8d,WORD PTR [rbx+0x2]
  405020:	mov    WORD PTR [r10+0x4],ax
  405025:	mov    eax,DWORD PTR [rdx+0x10]
  405028:	or     eax,0x10
  40502b:	mov    WORD PTR [r10+0x6],r8w
  405030:	mov    DWORD PTR [rdx+0x10],eax
  405033:	mov    r8d,DWORD PTR [r10+0x10]
  405037:	mov    QWORD PTR [r10+0x18],rcx
  40503b:	and    eax,0xf00000ff
  405040:	and    r8d,0xfffff00
  405047:	or     r8d,eax
  40504a:	mov    DWORD PTR [r10+0x10],r8d
  40504e:	and    r8d,0x4
  405052:	je     0x4050a0
  405054:	movzx  eax,WORD PTR [r10+0xe]
  405059:	add    eax,0x1
  40505c:	cmp    ax,WORD PTR [r10+0xc]
  405061:	mov    WORD PTR [r10+0xe],ax
  405066:	jbe    0x4050a0
  405068:	test   BYTE PTR [rsi+0x10],0x4
  40506c:	mov    ebp,0xffffffff
  405071:	je     0x405080
  405073:	mov    rdx,r10
  405076:	mov    rcx,rsi
  405079:	call   0x404ed0
  40507e:	xchg   ax,ax
  405080:	mov    eax,ebp
  405082:	add    rsp,0x48
  405086:	pop    rbx
  405087:	pop    rsi
  405088:	pop    rdi
  405089:	pop    rbp
  40508a:	ret    
  40508b:	nop    DWORD PTR [rax+rax*1+0x0]
  405090:	movzx  eax,WORD PTR [r10+0x4]
  405095:	cmp    ax,WORD PTR [rbx]
  405098:	jne    0x405100
  40509a:	mov    eax,DWORD PTR [rdx+0x10]
  40509d:	jmp    0x405033
  40509f:	nop
  4050a0:	xor    ebp,ebp
  4050a2:	test   rdi,rdi
  4050a5:	je     0x405080
  4050a7:	mov    rdx,r10
  4050aa:	mov    rcx,rsi
  4050ad:	call   rdi
  4050af:	mov    eax,ebp
  4050b1:	add    rsp,0x48
  4050b5:	pop    rbx
  4050b6:	pop    rsi
  4050b7:	pop    rdi
  4050b8:	pop    rbp
  4050b9:	ret    
  4050ba:	nop    WORD PTR [rax+rax*1+0x0]
  4050c0:	mov    rcx,QWORD PTR [rbx+0x18]
  4050c4:	mov    QWORD PTR [rsp+0x38],rdx
  4050c9:	call   0x41d8a8
  4050ce:	mov    r8d,DWORD PTR [rbx+0x10]
  4050d2:	mov    rdx,QWORD PTR [rsp+0x38]
  4050d7:	jmp    0x404fc0
  4050dc:	nop    DWORD PTR [rax+0x0]
  4050e0:	movzx  eax,WORD PTR [rbx+0x2]
  4050e4:	mov    r10,rbx
  4050e7:	mov    WORD PTR [rbx+0x6],ax
  4050eb:	movzx  eax,WORD PTR [rbx]
  4050ee:	mov    WORD PTR [rbx+0x4],ax
  4050f2:	mov    eax,DWORD PTR [rdx+0x10]
  4050f5:	jmp    0x40503b
  4050fa:	nop    WORD PTR [rax+rax*1+0x0]
  405100:	lea    rdx,[rax+rax*2]
  405104:	mov    rdi,QWORD PTR [rbx+0x50]
  405108:	mov    rsi,QWORD PTR [r10+0x50]
  40510c:	mov    rbx,QWORD PTR [rip+0x1ae95]        # 0x41ffa8
  405113:	lea    rax,[rax+rdx*4]
  405117:	mov    rbp,QWORD PTR [r9+rax*8+0x50]
  40511c:	call   QWORD PTR [rip+0x2a86a]        # 0x42f98c
  405122:	lea    rcx,[rax+0x60]
  405126:	mov    r9,rdi
  405129:	mov    r8,rsi
  40512c:	mov    QWORD PTR [rsp+0x20],rbp
  405131:	mov    rdx,rbx
  405134:	mov    ebp,0xffffffff
  405139:	call   0x403b50
  40513e:	jmp    0x405080
  405143:	nop    DWORD PTR [rax]
  405146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405150:	push   r13
  405152:	push   r12
  405154:	push   rbp
  405155:	push   rdi
  405156:	push   rsi
  405157:	push   rbx
  405158:	sub    rsp,0x38
  40515c:	mov    rsi,rcx
  40515f:	mov    rcx,QWORD PTR [rcx+0x78]
  405163:	mov    eax,DWORD PTR [rsi+0xb0]
  405169:	mov    rbx,rcx
  40516c:	movzx  r10d,WORD PTR [rbx+0x2]
  405171:	cmp    r10d,edx
  405174:	je     0x4051c0
  405176:	sub    eax,0x1
  405179:	add    rbx,0x68
  40517d:	test   eax,eax
  40517f:	jg     0x40516c
  405181:	movzx  eax,dl
  405184:	cmp    eax,0x7f
  405187:	ja     0x4051a0
  405189:	lea    r10,[rip+0x21530]        # 0x4266c0
  405190:	test   DWORD PTR [r10+rax*4],0x30000
  405198:	jne    0x405259
  40519e:	xchg   ax,ax
  4051a0:	test   BYTE PTR [rsi+0x10],0x4
  4051a4:	jne    0x40528c
  4051aa:	mov    eax,0xffffffff
  4051af:	add    rsp,0x38
  4051b3:	pop    rbx
  4051b4:	pop    rsi
  4051b5:	pop    rdi
  4051b6:	pop    rbp
  4051b7:	pop    r12
  4051b9:	pop    r13
  4051bb:	ret    
  4051bc:	nop    DWORD PTR [rax+0x0]
  4051c0:	mov    eax,DWORD PTR [rbx+0x10]
  4051c3:	test   eax,0x280000
  4051c8:	je     0x405240
  4051ca:	cmp    eax,0x80100
  4051cf:	jne    0x4051a0
  4051d1:	mov    r13,QWORD PTR [rbx+0x50]
  4051d5:	test   r13,r13
  4051d8:	je     0x4051a0
  4051da:	test   BYTE PTR [rsi+0x10],0x4
  4051de:	je     0x4051aa
  4051e0:	mov    r12,QWORD PTR [rsi+0x20]
  4051e4:	mov    rbp,QWORD PTR [rip+0x1ad75]        # 0x41ff60
  4051eb:	mov    rdi,QWORD PTR [rip+0x2a79a]        # 0x42f98c
  4051f2:	call   rdi
  4051f4:	lea    rcx,[rax+0x60]
  4051f8:	mov    r9,r13
  4051fb:	mov    r8,r12
  4051fe:	mov    rdx,rbp
  405201:	call   0x403b50
  405206:	mov    rbx,QWORD PTR [rbx+0x40]
  40520a:	test   rbx,rbx
  40520d:	je     0x405224
  40520f:	call   rdi
  405211:	lea    rdx,[rip+0x1eb01]        # 0x423d19
  405218:	lea    rcx,[rax+0x60]
  40521c:	mov    r8,rbx
  40521f:	call   0x403b50
  405224:	call   rdi
  405226:	lea    rdx,[rax+0x60]
  40522a:	mov    ecx,0xa
  40522f:	call   0x41d8c0
  405234:	jmp    0x4052b7
  405239:	nop    DWORD PTR [rax+0x0]
  405240:	xor    eax,eax
  405242:	mov    QWORD PTR [r8],rbx
  405245:	mov    DWORD PTR [r9],0x1
  40524c:	add    rsp,0x38
  405250:	pop    rbx
  405251:	pop    rsi
  405252:	pop    rdi
  405253:	pop    rbp
  405254:	pop    r12
  405256:	pop    r13
  405258:	ret    
  405259:	movzx  eax,WORD PTR [rsi+0xac]
  405260:	cmp    ax,0x8000
  405264:	je     0x4051a0
  40526a:	lea    rdx,[rax+rax*2]
  40526e:	lea    rax,[rax+rdx*4]
  405272:	lea    rax,[rcx+rax*8]
  405276:	mov    QWORD PTR [r8],rax
  405279:	xor    eax,eax
  40527b:	sub    QWORD PTR [rsi+0x18],0x1
  405280:	mov    DWORD PTR [r9],0x1
  405287:	jmp    0x4051af
  40528c:	mov    DWORD PTR [rsp+0x2c],edx
  405290:	mov    rdi,QWORD PTR [rsi+0x20]
  405294:	mov    rbx,QWORD PTR [rip+0x1acd5]        # 0x41ff70
  40529b:	call   QWORD PTR [rip+0x2a6eb]        # 0x42f98c
  4052a1:	mov    edx,DWORD PTR [rsp+0x2c]
  4052a5:	lea    rcx,[rax+0x60]
  4052a9:	mov    r8,rdi
  4052ac:	mov    r9d,edx
  4052af:	mov    rdx,rbx
  4052b2:	call   0x403b50
  4052b7:	mov    rcx,rsi
  4052ba:	mov    edx,0x1
  4052bf:	call   QWORD PTR [rsi+0x98]
  4052c5:	mov    ecx,0x1
  4052ca:	call   0x41d998
  4052cf:	nop
  4052d0:	push   rdi
  4052d1:	push   rsi
  4052d2:	push   rbx
  4052d3:	sub    rsp,0x20
  4052d7:	test   rcx,rcx
  4052da:	je     0x4052e1
  4052dc:	cmp    BYTE PTR [rcx],0x0
  4052df:	jne    0x405310
  4052e1:	call   QWORD PTR [rip+0x2a6a5]        # 0x42f98c
  4052e7:	lea    rcx,[rip+0x1e8e7]        # 0x423bd5
  4052ee:	lea    r9,[rax+0x30]
  4052f2:	mov    r8d,0x2
  4052f8:	mov    edx,0x1
  4052fd:	add    rsp,0x20
  405301:	pop    rbx
  405302:	pop    rsi
  405303:	pop    rdi
  405304:	jmp    0x41d890
  405309:	nop    DWORD PTR [rax+0x0]
  405310:	call   0x403da0
  405315:	cmp    BYTE PTR [rax],0x0
  405318:	mov    rbx,rax
  40531b:	jne    0x405325
  40531d:	add    rsp,0x20
  405321:	pop    rbx
  405322:	pop    rsi
  405323:	pop    rdi
  405324:	ret    
  405325:	mov    rdi,QWORD PTR [rip+0x2a660]        # 0x42f98c
  40532c:	jmp    0x40536a
  40532e:	xchg   ax,ax
  405330:	call   rdi
  405332:	mov    rdx,rsi
  405335:	lea    r9,[rax+0x30]
  405339:	mov    r8d,0x1
  40533f:	sub    rdx,rbx
  405342:	mov    rcx,rbx
  405345:	call   0x41d890
  40534a:	call   rdi
  40534c:	lea    rdx,[rax+0x30]
  405350:	mov    ecx,0x27
  405355:	call   0x41d8c0
  40535a:	mov    rcx,rsi
  40535d:	call   0x403da0
  405362:	cmp    BYTE PTR [rax],0x0
  405365:	mov    rbx,rax
  405368:	je     0x40531d
  40536a:	call   rdi
  40536c:	lea    rdx,[rax+0x30]
  405370:	mov    ecx,0x27
  405375:	call   0x41d8c0
  40537a:	mov    edx,0x27
  40537f:	mov    rcx,rbx
  405382:	call   0x41d820
  405387:	test   rax,rax
  40538a:	mov    rsi,rax
  40538d:	jne    0x405330
  40538f:	call   rdi
  405391:	lea    rdx,[rax+0x30]
  405395:	mov    rcx,rbx
  405398:	call   0x41d8b8
  40539d:	call   rdi
  40539f:	lea    rdx,[rax+0x30]
  4053a3:	mov    ecx,0x27
  4053a8:	add    rsp,0x20
  4053ac:	pop    rbx
  4053ad:	pop    rsi
  4053ae:	pop    rdi
  4053af:	jmp    0x41d8c0
  4053b4:	xchg   ax,ax
  4053b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053c0:	push   rsi
  4053c1:	push   rbx
  4053c2:	sub    rsp,0x28
  4053c6:	mov    eax,DWORD PTR [rcx]
  4053c8:	test   al,0x2
  4053ca:	je     0x405441
  4053cc:	mov    rbx,rcx
  4053cf:	movzx  ecx,WORD PTR [rdx]
  4053d2:	mov    rsi,r8
  4053d5:	movzx  edx,cl
  4053d8:	cmp    dl,0x7f
  4053db:	ja     0x405420
  4053dd:	lea    r9,[rip+0x212dc]        # 0x4266c0
  4053e4:	test   BYTE PTR [r9+rdx*4+0x1],0x40
  4053ea:	je     0x405420
  4053ec:	movzx  r8d,cx
  4053f0:	mov    rcx,QWORD PTR [rip+0x26f11]        # 0x42c308
  4053f7:	lea    rdx,[rip+0x1d2ec]        # 0x4226ea
  4053fe:	call   0x403b50
  405403:	mov    eax,DWORD PTR [rbx]
  405405:	and    eax,0x1001
  40540a:	cmp    eax,0x1001
  40540f:	je     0x405473
  405411:	add    rsp,0x28
  405415:	pop    rbx
  405416:	pop    rsi
  405417:	ret    
  405418:	nop    DWORD PTR [rax+rax*1+0x0]
  405420:	and    eax,0x1001
  405425:	cmp    eax,0x1001
  40542a:	je     0x405460
  40542c:	mov    rdx,QWORD PTR [rip+0x26ed5]        # 0x42c308
  405433:	mov    rcx,QWORD PTR [rsi]
  405436:	add    rsp,0x28
  40543a:	pop    rbx
  40543b:	pop    rsi
  40543c:	jmp    0x41d8b8
  405441:	mov    rdx,QWORD PTR [rip+0x26ec0]        # 0x42c308
  405448:	mov    rcx,QWORD PTR [r9]
  40544b:	add    rsp,0x28
  40544f:	pop    rbx
  405450:	pop    rsi
  405451:	jmp    0x41d8b8
  405456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405460:	mov    rdx,QWORD PTR [rip+0x26ea1]        # 0x42c308
  405467:	mov    ecx,0x20
  40546c:	call   0x41d8c0
  405471:	jmp    0x40542c
  405473:	mov    r9,QWORD PTR [rip+0x26e8e]        # 0x42c308
  40547a:	lea    rcx,[rip+0x1d266]        # 0x4226e7
  405481:	mov    r8d,0x2
  405487:	mov    edx,0x1
  40548c:	add    rsp,0x28
  405490:	pop    rbx
  405491:	pop    rsi
  405492:	jmp    0x41d890
  405497:	nop    WORD PTR [rax+rax*1+0x0]
  4054a0:	push   rdi
  4054a1:	push   rsi
  4054a2:	push   rbx
  4054a3:	sub    rsp,0x20
  4054a7:	lea    rax,[rip+0x21152]        # 0x426600
  4054ae:	mov    esi,ecx
  4054b0:	mov    ecx,0x100
  4054b5:	mov    ebx,DWORD PTR [rax+rsi*4]
  4054b8:	call   0x41d870
  4054bd:	test   rax,rax
  4054c0:	mov    r8,rax
  4054c3:	je     0x40550b
  4054c5:	mov    ecx,0x20
  4054ca:	xor    eax,eax
  4054cc:	mov    rdi,r8
  4054cf:	rep stos QWORD PTR es:[rdi],rax
  4054d2:	lea    rcx,[rip+0x211eb]        # 0x4266c4
  4054d9:	xor    edx,edx
  4054db:	nop    DWORD PTR [rax+rax*1+0x0]
  4054e0:	test   DWORD PTR [rcx+rdx*4],ebx
  4054e3:	je     0x4054eb
  4054e5:	mov    BYTE PTR [r8+rdx*1+0x1],0x1
  4054eb:	add    rdx,0x1
  4054ef:	cmp    rdx,0x7f
  4054f3:	jne    0x4054e0
  4054f5:	lea    rax,[rip+0x26f44]        # 0x42c440
  4054fc:	mov    QWORD PTR [rax+rsi*8],r8
  405500:	mov    rax,r8
  405503:	add    rsp,0x20
  405507:	pop    rbx
  405508:	pop    rsi
  405509:	pop    rdi
  40550a:	ret    
  40550b:	call   QWORD PTR [rip+0x2a47b]        # 0x42f98c
  405511:	lea    rcx,[rip+0x1d1e0]        # 0x4226f8
  405518:	lea    r9,[rax+0x60]
  40551c:	mov    r8d,0x23
  405522:	mov    edx,0x1
  405527:	call   0x41d890
  40552c:	mov    ecx,0x1
  405531:	call   0x41d8f8
  405536:	nop
  405537:	nop    WORD PTR [rax+rax*1+0x0]
  405540:	push   rdi
  405541:	push   rsi
  405542:	push   rbx
  405543:	sub    rsp,0x20
  405547:	mov    r8,QWORD PTR [rdx]
  40554a:	mov    eax,DWORD PTR [r8+0x10]
  40554e:	and    eax,0xfffff00
  405553:	or     eax,DWORD PTR [rdx+0x10]
  405556:	test   al,0x20
  405558:	mov    DWORD PTR [rdx+0x10],eax
  40555b:	jne    0x4055c0
  40555d:	test   ah,0xf0
  405560:	je     0x4055c0
  405562:	test   eax,0x10000
  405567:	mov    eax,DWORD PTR [rdx+0x14]
  40556a:	jne    0x405614
  405570:	cmp    eax,0x1
  405573:	je     0x4055f2
  405575:	cmp    eax,0x2
  405578:	jne    0x405585
  40557a:	cmp    QWORD PTR [rdx+0x8],0x0
  40557f:	je     0x4056d4
  405585:	mov    eax,DWORD PTR [rcx+0x14]
  405588:	cmp    eax,DWORD PTR [rcx+0x4]
  40558b:	jbe    0x4055d1
  40558d:	mov    rdi,QWORD PTR [r8+0x50]
  405591:	mov    rsi,QWORD PTR [rcx+0x20]
  405595:	mov    rbx,QWORD PTR [rip+0x1aa04]        # 0x41ffa0
  40559c:	nop    DWORD PTR [rax+0x0]
  4055a0:	call   QWORD PTR [rip+0x2a3e6]        # 0x42f98c
  4055a6:	lea    rcx,[rax+0x60]
  4055aa:	mov    r9,rdi
  4055ad:	mov    r8,rsi
  4055b0:	mov    rdx,rbx
  4055b3:	call   0x403b50
  4055b8:	mov    eax,0xffffffff
  4055bd:	jmp    0x4055db
  4055bf:	nop
  4055c0:	cmp    DWORD PTR [rdx+0x14],0x1
  4055c4:	je     0x4055e3
  4055c6:	cmp    QWORD PTR [rdx+0x8],0x0
  4055cb:	jne    0x4056c0
  4055d1:	mov    QWORD PTR [rcx+0x18],0x0
  4055d9:	xor    eax,eax
  4055db:	add    rsp,0x20
  4055df:	pop    rbx
  4055e0:	pop    rsi
  4055e1:	pop    rdi
  4055e2:	ret    
  4055e3:	add    QWORD PTR [rcx+0x18],0x1
  4055e8:	xor    eax,eax
  4055ea:	add    rsp,0x20
  4055ee:	pop    rbx
  4055ef:	pop    rsi
  4055f0:	pop    rdi
  4055f1:	ret    
  4055f2:	mov    rax,QWORD PTR [rcx+0x18]
  4055f6:	lea    r9,[rax+0x1]
  4055fa:	mov    QWORD PTR [rcx+0x18],r9
  4055fe:	cmp    BYTE PTR [rax+0x1],0x0
  405602:	je     0x4056a0
  405608:	mov    eax,DWORD PTR [rcx+0x14]
  40560b:	mov    QWORD PTR [rdx+0x8],r9
  40560f:	jmp    0x405588
  405614:	cmp    eax,0x1
  405617:	je     0x405650
  405619:	cmp    eax,0x2
  40561c:	jne    0x405690
  40561e:	cmp    QWORD PTR [rdx+0x8],0x0
  405623:	jne    0x4055d1
  405625:	test   BYTE PTR [rcx+0x10],0x3
  405629:	je     0x4055d1
  40562b:	mov    r9d,DWORD PTR [rcx+0x14]
  40562f:	mov    r8,QWORD PTR [rcx+0x8]
  405633:	mov    r8,QWORD PTR [r8+r9*8]
  405637:	mov    rax,r9
  40563a:	test   r8,r8
  40563d:	je     0x4055d1
  40563f:	cmp    BYTE PTR [r8],0x2d
  405643:	jne    0x40567c
  405645:	jmp    0x4055d1
  405647:	nop    WORD PTR [rax+rax*1+0x0]
  405650:	mov    rax,QWORD PTR [rcx+0x18]
  405654:	lea    r8,[rax+0x1]
  405658:	mov    QWORD PTR [rcx+0x18],r8
  40565c:	cmp    BYTE PTR [rax+0x1],0x0
  405660:	jne    0x405682
  405662:	mov    r9d,DWORD PTR [rcx+0x14]
  405666:	mov    r8,QWORD PTR [rcx+0x8]
  40566a:	mov    r8,QWORD PTR [r8+r9*8]
  40566e:	mov    rax,r9
  405671:	test   r8,r8
  405674:	je     0x4056f0
  405676:	cmp    BYTE PTR [r8],0x2d
  40567a:	je     0x4056f0
  40567c:	add    eax,0x1
  40567f:	mov    DWORD PTR [rcx+0x14],eax
  405682:	mov    QWORD PTR [rdx+0x8],r8
  405686:	jmp    0x4055d1
  40568b:	nop    DWORD PTR [rax+rax*1+0x0]
  405690:	mov    rcx,QWORD PTR [rip+0x1a871]        # 0x41ff08
  405697:	call   0x403fc0
  40569c:	nop    DWORD PTR [rax+0x0]
  4056a0:	mov    r9d,DWORD PTR [rcx+0x14]
  4056a4:	mov    r10,QWORD PTR [rcx+0x8]
  4056a8:	lea    eax,[r9+0x1]
  4056ac:	mov    r9,QWORD PTR [r10+r9*8]
  4056b0:	mov    DWORD PTR [rcx+0x14],eax
  4056b3:	mov    QWORD PTR [rcx+0x18],r9
  4056b7:	jmp    0x40560b
  4056bc:	nop    DWORD PTR [rax+0x0]
  4056c0:	mov    rdi,QWORD PTR [r8+0x50]
  4056c4:	mov    rsi,QWORD PTR [rcx+0x20]
  4056c8:	mov    rbx,QWORD PTR [rip+0x1a8e9]        # 0x41ffb8
  4056cf:	jmp    0x4055a0
  4056d4:	mov    r9d,DWORD PTR [rcx+0x14]
  4056d8:	mov    r10,QWORD PTR [rcx+0x8]
  4056dc:	lea    eax,[r9+0x1]
  4056e0:	mov    r9,QWORD PTR [r10+r9*8]
  4056e4:	mov    DWORD PTR [rcx+0x14],eax
  4056e7:	jmp    0x40560b
  4056ec:	nop    DWORD PTR [rax+0x0]
  4056f0:	mov    QWORD PTR [rdx+0x8],0x0
  4056f8:	jmp    0x4055d1
  4056fd:	nop    DWORD PTR [rax]
  405700:	push   rdi
  405701:	push   rbx
  405702:	sub    rsp,0x28
  405706:	mov    rdi,rcx
  405709:	call   0x41d768
  40570e:	test   rax,rax
  405711:	je     0x40571a
  405713:	add    rsp,0x28
  405717:	pop    rbx
  405718:	pop    rdi
  405719:	ret    
  40571a:	or     rcx,0xffffffffffffffff
  40571e:	mov    rbx,QWORD PTR [rip+0x1a783]        # 0x41fea8
  405725:	repnz scas al,BYTE PTR es:[rdi]
  405727:	mov    rax,rcx
  40572a:	not    rax
  40572d:	lea    rdi,[rax-0x1]
  405731:	call   QWORD PTR [rip+0x2a255]        # 0x42f98c
  405737:	lea    rcx,[rax+0x60]
  40573b:	mov    r8d,edi
  40573e:	mov    rdx,rbx
  405741:	call   0x403b50
  405746:	mov    ecx,0x1
  40574b:	call   0x403f90
  405750:	nop
  405751:	nop    DWORD PTR [rax+rax*1+0x0]
  405756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405760:	push   r12
  405762:	push   rbp
  405763:	push   rdi
  405764:	push   rsi
  405765:	push   rbx
  405766:	sub    rsp,0x20
  40576a:	mov    eax,DWORD PTR [rcx+0xb0]
  405770:	mov    rbp,QWORD PTR [rcx+0x90]
  405777:	mov    rbx,QWORD PTR [rcx+0x78]
  40577b:	test   eax,eax
  40577d:	jle    0x405814
  405783:	sub    eax,0x1
  405786:	mov    rsi,rcx
  405789:	add    rax,0x1
  40578d:	lea    rdx,[rax+rax*2]
  405791:	lea    rax,[rax+rdx*4]
  405795:	lea    rdi,[rbx+rax*8]
  405799:	jmp    0x4057c2
  40579b:	nop    DWORD PTR [rax+rax*1+0x0]
  4057a0:	cmp    eax,0x6
  4057a3:	jne    0x4057b9
  4057a5:	mov    rax,rbx
  4057a8:	sub    rax,QWORD PTR [rsi+0x78]
  4057ac:	mov    rdx,QWORD PTR [rbp+0x78]
  4057b0:	mov    QWORD PTR [rdx+rax*1+0x20],0x0
  4057b9:	add    rbx,0x68
  4057bd:	cmp    rbx,rdi
  4057c0:	je     0x405814
  4057c2:	mov    edx,DWORD PTR [rbx+0x10]
  4057c5:	mov    eax,edx
  4057c7:	and    eax,0xf000
  4057cc:	shr    eax,0xc
  4057cf:	cmp    eax,0x1
  4057d2:	jne    0x4057a0
  4057d4:	test   dh,0x4
  4057d7:	je     0x4057ed
  4057d9:	mov    rax,rbx
  4057dc:	sub    rax,QWORD PTR [rsi+0x78]
  4057e0:	mov    rcx,QWORD PTR [rbp+0x78]
  4057e4:	mov    QWORD PTR [rcx+rax*1+0x20],0x0
  4057ed:	and    edx,0x40
  4057f0:	je     0x4057b9
  4057f2:	mov    r12,rbx
  4057f5:	sub    r12,QWORD PTR [rsi+0x78]
  4057f9:	mov    rcx,QWORD PTR [rbx+0x18]
  4057fd:	add    r12,QWORD PTR [rbp+0x78]
  405801:	add    rbx,0x68
  405805:	call   0x405700
  40580a:	cmp    rbx,rdi
  40580d:	mov    QWORD PTR [r12+0x18],rax
  405812:	jne    0x4057c2
  405814:	add    rsp,0x20
  405818:	pop    rbx
  405819:	pop    rsi
  40581a:	pop    rdi
  40581b:	pop    rbp
  40581c:	pop    r12
  40581e:	ret    
  40581f:	nop
  405820:	push   r13
  405822:	push   r12
  405824:	push   rbp
  405825:	push   rdi
  405826:	push   rsi
  405827:	push   rbx
  405828:	sub    rsp,0x28
  40582c:	mov    r13,rcx
  40582f:	mov    rcx,rdx
  405832:	mov    r12,r8
  405835:	mov    ebp,r9d
  405838:	call   0x41d888
  40583d:	test   rax,rax
  405840:	mov    QWORD PTR [r13+0x8],rax
  405844:	je     0x405920
  40584a:	mov    rdx,QWORD PTR [r13+0x0]
  40584e:	mov    ecx,DWORD PTR [rdx+0x10]
  405851:	mov    rbx,QWORD PTR [rdx+0x60]
  405855:	mov    DWORD PTR [r13+0x14],0x0
  40585d:	mov    r8d,ecx
  405860:	or     r8d,0x42
  405864:	test   rbx,rbx
  405867:	mov    DWORD PTR [r13+0x10],r8d
  40586b:	je     0x4058b2
  40586d:	mov    rsi,rax
  405870:	add    rsi,0x1
  405874:	add    rbx,0x1
  405878:	movzx  r11d,BYTE PTR [rsi-0x1]
  40587d:	movzx  r10d,BYTE PTR [rbx-0x1]
  405882:	cmp    r11b,r10b
  405885:	je     0x40589c
  405887:	lea    rdx,[rip+0x1a1b2]        # 0x41fa40
  40588e:	movzx  edi,r11b
  405892:	movzx  edi,BYTE PTR [rdx+rdi*1]
  405896:	cmp    BYTE PTR [rdx+r10*1],dil
  40589a:	jne    0x4058b2
  40589c:	test   r11b,r11b
  40589f:	jne    0x405870
  4058a1:	or     ecx,0x62
  4058a4:	mov    QWORD PTR [r13+0x8],0x0
  4058ac:	mov    DWORD PTR [r13+0x10],ecx
  4058b0:	jmp    0x4058e2
  4058b2:	cmp    ebp,0x1
  4058b5:	je     0x405900
  4058b7:	cmp    ebp,0x2
  4058ba:	jne    0x4058c4
  4058bc:	test   ecx,0x20020
  4058c2:	jne    0x405930
  4058c4:	test   ch,0xf0
  4058c7:	je     0x4058da
  4058c9:	cmp    BYTE PTR [rax],0x0
  4058cc:	jne    0x405970
  4058d2:	and    ecx,0x10000
  4058d8:	je     0x405920
  4058da:	mov    QWORD PTR [r13+0x8],0x0
  4058e2:	mov    rdx,r13
  4058e5:	mov    rcx,r12
  4058e8:	add    rsp,0x28
  4058ec:	pop    rbx
  4058ed:	pop    rsi
  4058ee:	pop    rdi
  4058ef:	pop    rbp
  4058f0:	pop    r12
  4058f2:	pop    r13
  4058f4:	jmp    0x404fa0
  4058f9:	nop    DWORD PTR [rax+0x0]
  405900:	mov    edx,ecx
  405902:	and    edx,0x20020
  405908:	cmp    edx,0x20000
  40590e:	je     0x4058c4
  405910:	mov    edx,ecx
  405912:	and    edx,0x40020
  405918:	cmp    edx,0x40020
  40591e:	je     0x4058c4
  405920:	add    rsp,0x28
  405924:	pop    rbx
  405925:	pop    rsi
  405926:	pop    rdi
  405927:	pop    rbp
  405928:	pop    r12
  40592a:	pop    r13
  40592c:	ret    
  40592d:	nop    DWORD PTR [rax]
  405930:	mov    edx,ecx
  405932:	and    edx,0x40020
  405938:	cmp    edx,0x20
  40593b:	je     0x4058c4
  40593d:	mov    edx,ecx
  40593f:	and    edx,0x400020
  405945:	cmp    edx,0x400000
  40594b:	je     0x4058c4
  405951:	mov    edx,ecx
  405953:	and    edx,0x800020
  405959:	cmp    edx,0x800020
  40595f:	jne    0x405920
  405961:	jmp    0x4058c4
  405966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405970:	mov    rcx,rax
  405973:	call   0x405700
  405978:	or     DWORD PTR [r13+0x10],0x40
  40597d:	mov    QWORD PTR [r13+0x8],rax
  405981:	jmp    0x4058e2
  405986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405990:	push   rsi
  405991:	push   rbx
  405992:	sub    rsp,0x28
  405996:	mov    rbx,rcx
  405999:	call   0x41d870
  40599e:	test   rax,rax
  4059a1:	je     0x4059aa
  4059a3:	add    rsp,0x28
  4059a7:	pop    rbx
  4059a8:	pop    rsi
  4059a9:	ret    
  4059aa:	mov    rsi,QWORD PTR [rip+0x1a4f7]        # 0x41fea8
  4059b1:	call   QWORD PTR [rip+0x29fd5]        # 0x42f98c
  4059b7:	lea    rcx,[rax+0x60]
  4059bb:	mov    r8d,ebx
  4059be:	mov    rdx,rsi
  4059c1:	call   0x403b50
  4059c6:	mov    ecx,0x1
  4059cb:	call   0x403f90
  4059d0:	nop
  4059d1:	nop    DWORD PTR [rax+rax*1+0x0]
  4059d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4059e0:	push   rbp
  4059e1:	push   rdi
  4059e2:	push   rsi
  4059e3:	push   rbx
  4059e4:	sub    rsp,0x28
  4059e8:	mov    rbx,QWORD PTR [rcx]
  4059eb:	mov    rsi,rcx
  4059ee:	mov    rdi,rdx
  4059f1:	test   rbx,rbx
  4059f4:	je     0x405a44
  4059f6:	movsxd r8,DWORD PTR [rbx]
  4059f9:	mov    eax,DWORD PTR [rbx+0x4]
  4059fc:	cmp    r8d,eax
  4059ff:	lea    edx,[r8+0x1]
  405a03:	jge    0x405a15
  405a05:	mov    DWORD PTR [rbx],edx
  405a07:	mov    QWORD PTR [rbx+r8*8+0x8],rdi
  405a0c:	add    rsp,0x28
  405a10:	pop    rbx
  405a11:	pop    rsi
  405a12:	pop    rdi
  405a13:	pop    rbp
  405a14:	ret    
  405a15:	add    eax,0x8
  405a18:	mov    rcx,rbx
  405a1b:	mov    DWORD PTR [rbx+0x4],eax
  405a1e:	cdqe   
  405a20:	lea    rbp,[rax*8+0x8]
  405a28:	mov    rdx,rbp
  405a2b:	call   0x41d830
  405a30:	test   rax,rax
  405a33:	je     0x405a70
  405a35:	movsxd r8,DWORD PTR [rax]
  405a38:	mov    QWORD PTR [rsi],rax
  405a3b:	mov    rbx,rax
  405a3e:	lea    edx,[r8+0x1]
  405a42:	jmp    0x405a05
  405a44:	mov    ecx,0x38
  405a49:	call   0x405990
  405a4e:	test   rax,rax
  405a51:	mov    rbx,rax
  405a54:	je     0x405a0c
  405a56:	mov    DWORD PTR [rax],0x0
  405a5c:	mov    DWORD PTR [rax+0x4],0x6
  405a63:	mov    edx,0x1
  405a68:	mov    QWORD PTR [rsi],rax
  405a6b:	xor    r8d,r8d
  405a6e:	jmp    0x405a05
  405a70:	mov    rsi,QWORD PTR [rip+0x1a451]        # 0x41fec8
  405a77:	call   QWORD PTR [rip+0x29f0f]        # 0x42f98c
  405a7d:	lea    rcx,[rax+0x60]
  405a81:	mov    r9,rbx
  405a84:	mov    r8d,ebp
  405a87:	mov    rdx,rsi
  405a8a:	call   0x403b50
  405a8f:	mov    ecx,0x1
  405a94:	call   0x403f90
  405a99:	nop
  405a9a:	nop    WORD PTR [rax+rax*1+0x0]
  405aa0:	push   r15
  405aa2:	push   r14
  405aa4:	push   r13
  405aa6:	push   r12
  405aa8:	push   rbp
  405aa9:	push   rdi
  405aaa:	push   rsi
  405aab:	push   rbx
  405aac:	sub    rsp,0x58
  405ab0:	mov    rbp,QWORD PTR [rsp+0xc0]
  405ab8:	mov    QWORD PTR [rsp+0xa0],rcx
  405ac0:	mov    r15,r9
  405ac3:	mov    r14,rdx
  405ac6:	mov    r12,r8
  405ac9:	lea    rcx,[r8+rbp*1+0x18]
  405ace:	call   0x405990
  405ad3:	test   r15,r15
  405ad6:	mov    r13,rax
  405ad9:	je     0x405c80
  405adf:	test   rbp,rbp
  405ae2:	mov    DWORD PTR [rax],0x1
  405ae8:	je     0x405bd0
  405aee:	lea    rsi,[rax+0x10]
  405af2:	lea    rax,[rsp+0x48]
  405af7:	mov    ebx,ebp
  405af9:	lea    r10,[rip+0x1d600]        # 0x423100
  405b00:	mov    QWORD PTR [rsp+0x30],rax
  405b05:	jmp    0x405b25
  405b07:	nop    WORD PTR [rax+rax*1+0x0]
  405b10:	sub    ebx,0x1
  405b13:	add    rsi,0x1
  405b17:	mov    r15,rdi
  405b1a:	test   ebx,ebx
  405b1c:	mov    BYTE PTR [rsi-0x1],al
  405b1f:	jle    0x405c15
  405b25:	movzx  eax,BYTE PTR [r15]
  405b29:	lea    rdi,[r15+0x1]
  405b2d:	test   eax,eax
  405b2f:	je     0x405c15
  405b35:	cmp    eax,0x26
  405b38:	jne    0x405b10
  405b3a:	cmp    ebx,0x2
  405b3d:	mov    QWORD PTR [rsp+0x48],rdi
  405b42:	mov    eax,0x26
  405b47:	jle    0x405b10
  405b49:	cmp    BYTE PTR [r15+0x1],0x23
  405b4e:	lea    r9,[rip+0x1d56b]        # 0x4230c0
  405b55:	je     0x405c20
  405b5b:	mov    r15,r9
  405b5e:	mov    QWORD PTR [rsp+0xc0],rbp
  405b66:	mov    QWORD PTR [rsp+0x38],rsi
  405b6b:	mov    ebp,DWORD PTR [r15+0x4]
  405b6f:	mov    esi,ebx
  405b71:	cmp    ebp,esi
  405b73:	jg     0x405b99
  405b75:	movsxd rbx,ebp
  405b78:	lea    rdx,[r15+0x8]
  405b7c:	mov    rcx,rdi
  405b7f:	mov    r8,rbx
  405b82:	mov    QWORD PTR [rsp+0x28],r10
  405b87:	call   0x41d7f0
  405b8c:	test   eax,eax
  405b8e:	mov    r10,QWORD PTR [rsp+0x28]
  405b93:	je     0x405ca1
  405b99:	cmp    r15,r10
  405b9c:	je     0x405baf
  405b9e:	add    r15,0x10
  405ba2:	mov    ebp,DWORD PTR [r15+0x4]
  405ba6:	cmp    ebp,esi
  405ba8:	jle    0x405b75
  405baa:	cmp    r15,r10
  405bad:	jne    0x405b9e
  405baf:	mov    ebx,esi
  405bb1:	mov    rbp,QWORD PTR [rsp+0xc0]
  405bb9:	mov    rsi,QWORD PTR [rsp+0x38]
  405bbe:	mov    eax,0x26
  405bc3:	jmp    0x405b10
  405bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  405bd0:	mov    BYTE PTR [rax+0x10],0x0
  405bd4:	lea    rcx,[r13+rbp*1+0x11]
  405bd9:	mov    QWORD PTR [r13+0x8],rcx
  405bdd:	mov    r8,r12
  405be0:	mov    rdx,r14
  405be3:	call   0x41d860
  405be8:	mov    rax,QWORD PTR [r13+0x8]
  405bec:	mov    rcx,QWORD PTR [rsp+0xa0]
  405bf4:	mov    rdx,r13
  405bf7:	mov    BYTE PTR [rax+r12*1],0x0
  405bfc:	call   0x4059e0
  405c01:	mov    rax,r13
  405c04:	add    rsp,0x58
  405c08:	pop    rbx
  405c09:	pop    rsi
  405c0a:	pop    rdi
  405c0b:	pop    rbp
  405c0c:	pop    r12
  405c0e:	pop    r13
  405c10:	pop    r14
  405c12:	pop    r15
  405c14:	ret    
  405c15:	mov    BYTE PTR [rsi],0x0
  405c18:	jmp    0x405bd4
  405c1a:	nop    WORD PTR [rax+rax*1+0x0]
  405c20:	lea    rcx,[r15+0x2]
  405c24:	mov    r8d,0xa
  405c2a:	mov    QWORD PTR [rsp+0x48],rcx
  405c2f:	cmp    BYTE PTR [r15+0x2],0x78
  405c34:	je     0x405c93
  405c36:	mov    rdx,QWORD PTR [rsp+0x30]
  405c3b:	mov    QWORD PTR [rsp+0x28],r10
  405c40:	call   0x41d7c0
  405c45:	mov    rdx,QWORD PTR [rsp+0x48]
  405c4a:	mov    ecx,eax
  405c4c:	mov    r10,QWORD PTR [rsp+0x28]
  405c51:	mov    eax,0x26
  405c56:	cmp    BYTE PTR [rdx],0x3b
  405c59:	jne    0x405b10
  405c5f:	add    rdx,0x1
  405c63:	mov    r8,rdx
  405c66:	sub    r8,rdi
  405c69:	cmp    r8d,ebx
  405c6c:	jg     0x405b10
  405c72:	sub    ebx,r8d
  405c75:	mov    eax,ecx
  405c77:	mov    rdi,rdx
  405c7a:	jmp    0x405b10
  405c7f:	nop
  405c80:	lea    rcx,[rax+0x10]
  405c84:	mov    DWORD PTR [rax],0x0
  405c8a:	mov    QWORD PTR [rax+0x8],rcx
  405c8e:	jmp    0x405bdd
  405c93:	lea    rcx,[r15+0x3]
  405c97:	mov    r8b,0x10
  405c9a:	mov    QWORD PTR [rsp+0x48],rcx
  405c9f:	jmp    0x405c36
  405ca1:	mov    rax,rbx
  405ca4:	mov    r9,r15
  405ca7:	mov    ebx,esi
  405ca9:	mov    r15d,ebp
  405cac:	add    rdi,rax
  405caf:	mov    rsi,QWORD PTR [rsp+0x38]
  405cb4:	mov    rbp,QWORD PTR [rsp+0xc0]
  405cbc:	sub    ebx,r15d
  405cbf:	movzx  eax,BYTE PTR [r9]
  405cc3:	jmp    0x405b10
  405cc8:	nop    DWORD PTR [rax+rax*1+0x0]
  405cd0:	push   rsi
  405cd1:	push   rbx
  405cd2:	sub    rsp,0x28
  405cd6:	mov    rax,QWORD PTR [rdx+0x38]
  405cda:	mov    rbx,rdx
  405cdd:	lea    rdx,[rip+0x7b2c]        # 0x40d810
  405ce4:	mov    rsi,rcx
  405ce7:	cmp    rax,rdx
  405cea:	je     0x405e40
  405cf0:	lea    rdx,[rip+0xffffffffffffeb49]        # 0x404840
  405cf7:	cmp    rax,rdx
  405cfa:	je     0x405e60
  405d00:	lea    rdx,[rip+0x8bf9]        # 0x40e900
  405d07:	cmp    rax,rdx
  405d0a:	je     0x405e74
  405d10:	mov    r8,QWORD PTR [rbx+0x48]
  405d14:	test   r8,r8
  405d17:	je     0x405e00
  405d1d:	movzx  r9d,WORD PTR [rbx+0xc]
  405d22:	cmp    r9w,0x1
  405d27:	je     0x405e24
  405d2d:	cmp    r9w,0xffff
  405d32:	je     0x405d47
  405d34:	mov    rdx,QWORD PTR [rcx]
  405d37:	lea    rcx,[rip+0x1e33a]        # 0x424078
  405d3e:	call   0x403f60
  405d43:	mov    r8,QWORD PTR [rbx+0x48]
  405d47:	mov    rdx,QWORD PTR [rsi]
  405d4a:	lea    rcx,[rip+0x1ebff]        # 0x424950
  405d51:	call   0x403f60
  405d56:	mov    eax,DWORD PTR [rbx+0x10]
  405d59:	test   ah,0xf0
  405d5c:	je     0x405dd0
  405d5e:	test   eax,0x10000
  405d63:	jne    0x405da0
  405d65:	lea    rdx,[rip+0x1e045]        # 0x423db1
  405d6c:	lea    rcx,[rip+0x1dee3]        # 0x423c56
  405d73:	call   0x403f60
  405d78:	call   QWORD PTR [rip+0x29c0e]        # 0x42f98c
  405d7e:	lea    rcx,[rip+0x1e089]        # 0x423e0e
  405d85:	lea    r9,[rax+0x30]
  405d89:	mov    r8d,0x10
  405d8f:	mov    edx,0x1
  405d94:	add    rsp,0x28
  405d98:	pop    rbx
  405d99:	pop    rsi
  405d9a:	jmp    0x41d890
  405d9f:	nop
  405da0:	mov    rdx,QWORD PTR [rsi]
  405da3:	mov    r8,QWORD PTR [rbx+0x48]
  405da7:	lea    rcx,[rip+0x1f45c]        # 0x42520a
  405dae:	call   0x403f60
  405db3:	lea    rdx,[rip+0x1deec]        # 0x423ca6
  405dba:	lea    rcx,[rip+0x1de95]        # 0x423c56
  405dc1:	call   0x403f60
  405dc6:	jmp    0x405d78
  405dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  405dd0:	mov    rdx,QWORD PTR [rsi]
  405dd3:	mov    r8,QWORD PTR [rbx+0x48]
  405dd7:	lea    rcx,[rip+0x1f42c]        # 0x42520a
  405dde:	call   0x403f60
  405de3:	lea    rdx,[rip+0x1dea3]        # 0x423c8d
  405dea:	lea    rcx,[rip+0x1de65]        # 0x423c56
  405df1:	call   0x403f60
  405df6:	jmp    0x405d78
  405df8:	nop    DWORD PTR [rax+rax*1+0x0]
  405e00:	test   rax,rax
  405e03:	je     0x405ea0
  405e09:	mov    rdx,QWORD PTR [rcx]
  405e0c:	lea    r8,[rip+0x1de39]        # 0x423c4c
  405e13:	lea    rcx,[rip+0x1e3ca]        # 0x4241e4
  405e1a:	call   0x403f60
  405e1f:	jmp    0x405d78
  405e24:	mov    rdx,QWORD PTR [rcx]
  405e27:	lea    rcx,[rip+0x1f436]        # 0x425264
  405e2e:	call   0x403f60
  405e33:	jmp    0x405d56
  405e38:	nop    DWORD PTR [rax+rax*1+0x0]
  405e40:	mov    rdx,QWORD PTR [rcx]
  405e43:	lea    r8,[rip+0x1df57]        # 0x423da1
  405e4a:	lea    rcx,[rip+0x1e393]        # 0x4241e4
  405e51:	call   0x403f60
  405e56:	jmp    0x405d78
  405e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  405e60:	mov    rdx,QWORD PTR [rcx]
  405e63:	lea    rcx,[rip+0x1f2ec]        # 0x425156
  405e6a:	call   0x403f60
  405e6f:	jmp    0x405d78
  405e74:	lea    rdx,[rip+0x1e01b]        # 0x423e96
  405e7b:	lea    rcx,[rip+0x1ddd4]        # 0x423c56
  405e82:	call   0x403f60
  405e87:	lea    rdx,[rip+0x1df23]        # 0x423db1
  405e8e:	lea    rcx,[rip+0x1ddc1]        # 0x423c56
  405e95:	call   0x403f60
  405e9a:	jmp    0x405d78
  405e9f:	nop
  405ea0:	lea    rdx,[rip+0x1e01e]        # 0x423ec5
  405ea7:	lea    rcx,[rip+0x1dda8]        # 0x423c56
  405eae:	call   0x403f60
  405eb3:	lea    rdx,[rip+0x1ddec]        # 0x423ca6
  405eba:	lea    rcx,[rip+0x1dd95]        # 0x423c56
  405ec1:	call   0x403f60
  405ec6:	jmp    0x405d78
  405ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  405ed0:	push   rbp
  405ed1:	push   rdi
  405ed2:	push   rsi
  405ed3:	push   rbx
  405ed4:	sub    rsp,0x28
  405ed8:	mov    esi,DWORD PTR [rcx+0xb0]
  405ede:	mov    rbx,QWORD PTR [rcx+0x78]
  405ee2:	mov    rdi,rcx
  405ee5:	call   QWORD PTR [rip+0x29aa1]        # 0x42f98c
  405eeb:	lea    rcx,[rip+0x1e167]        # 0x424059
  405ef2:	lea    r9,[rax+0x30]
  405ef6:	mov    r8d,0x1e
  405efc:	mov    edx,0x1
  405f01:	call   0x41d890
  405f06:	test   esi,esi
  405f08:	jle    0x405f69
  405f0a:	lea    eax,[rsi-0x1]
  405f0d:	lea    rbp,[rdi+0x30]
  405f11:	add    rax,0x1
  405f15:	lea    rdx,[rax+rax*2]
  405f19:	lea    rax,[rax+rdx*4]
  405f1d:	lea    rsi,[rbx+rax*8]
  405f21:	test   DWORD PTR [rbx+0x10],0x280000
  405f28:	jne    0x405f60
  405f2a:	movzx  edx,WORD PTR [rbx+0x2]
  405f2e:	movzx  eax,dl
  405f31:	cmp    al,0x7f
  405f33:	ja     0x405f60
  405f35:	lea    rcx,[rip+0x20784]        # 0x4266c0
  405f3c:	test   BYTE PTR [rcx+rax*4+0x1],0x40
  405f41:	je     0x405f60
  405f43:	lea    rcx,[rip+0x1ded5]        # 0x423e1f
  405f4a:	call   0x403f60
  405f4f:	mov    rdx,rbx
  405f52:	mov    rcx,rbp
  405f55:	call   0x405cd0
  405f5a:	nop    WORD PTR [rax+rax*1+0x0]
  405f60:	add    rbx,0x68
  405f64:	cmp    rbx,rsi
  405f67:	jne    0x405f21
  405f69:	mov    r8,QWORD PTR [rdi+0x30]
  405f6d:	lea    rdx,[rip+0x1dcab]        # 0x423c1f
  405f74:	lea    rcx,[rip+0x1f4c2]        # 0x42543d
  405f7b:	add    rsp,0x28
  405f7f:	pop    rbx
  405f80:	pop    rsi
  405f81:	pop    rdi
  405f82:	pop    rbp
  405f83:	jmp    0x403f60
  405f88:	nop    DWORD PTR [rax+rax*1+0x0]
  405f90:	push   r15
  405f92:	push   r14
  405f94:	push   r13
  405f96:	push   r12
  405f98:	push   rbp
  405f99:	push   rdi
  405f9a:	push   rsi
  405f9b:	push   rbx
  405f9c:	sub    rsp,0x58
  405fa0:	mov    rdi,rcx
  405fa3:	mov    QWORD PTR [rsp+0xa8],rdx
  405fab:	mov    rsi,r8
  405fae:	mov    rbx,r9
  405fb1:	call   0x41d7f8
  405fb6:	sub    eax,0x1
  405fb9:	cmp    eax,0x1e
  405fbc:	mov    DWORD PTR [rsp+0x2c],eax
  405fc0:	ja     0x406084
  405fc6:	mov    eax,DWORD PTR [rbx]
  405fc8:	mov    rbp,QWORD PTR [rsi]
  405fcb:	test   eax,eax
  405fcd:	jle    0x40614e
  405fd3:	sub    eax,0x1
  405fd6:	mov    rbx,QWORD PTR [rip+0x29bf7]        # 0x42fbd4
  405fdd:	mov    r12d,0x2
  405fe3:	add    rax,0x1
  405fe7:	lea    rdx,[rax+rax*2]
  405feb:	lea    rax,[rax+rdx*4]
  405fef:	lea    rax,[rbp+rax*8+0x0]
  405ff4:	mov    QWORD PTR [rsp+0x20],rax
  405ff9:	nop    DWORD PTR [rax+0x0]
  406000:	cmp    rbp,QWORD PTR [rsp+0xa8]
  406008:	je     0x406072
  40600a:	test   DWORD PTR [rbp+0x10],0x280000
  406011:	jne    0x406072
  406013:	mov    r15,QWORD PTR [rbp+0x50]
  406017:	xor    r14d,r14d
  40601a:	jmp    0x406024
  40601c:	nop    DWORD PTR [rax+0x0]
  406020:	add    r14d,0x1
  406024:	mov    r13d,r14d
  406027:	movzx  ecx,BYTE PTR [r15+r13*1]
  40602c:	call   rbx
  40602e:	movzx  ecx,BYTE PTR [rdi+r13*1]
  406033:	mov    esi,eax
  406035:	call   rbx
  406037:	cmp    esi,eax
  406039:	je     0x406020
  40603b:	mov    r15,QWORD PTR [rbp+0x58]
  40603f:	cmp    r12d,r14d
  406042:	cmovb  r12d,r14d
  406046:	test   r15,r15
  406049:	je     0x406072
  40604b:	xor    r14d,r14d
  40604e:	jmp    0x406054
  406050:	add    r14d,0x1
  406054:	mov    r13d,r14d
  406057:	movsx  ecx,BYTE PTR [r15+r13*1]
  40605c:	call   rbx
  40605e:	movsx  ecx,BYTE PTR [rdi+r13*1]
  406063:	mov    esi,eax
  406065:	call   rbx
  406067:	cmp    esi,eax
  406069:	je     0x406050
  40606b:	cmp    r12d,r14d
  40606e:	cmovb  r12d,r14d
  406072:	add    rbp,0x68
  406076:	cmp    rbp,QWORD PTR [rsp+0x20]
  40607b:	jne    0x406000
  40607d:	cmp    DWORD PTR [rsp+0x2c],r12d
  406082:	ja     0x4060a5
  406084:	lea    rcx,[rip+0x1dda4]        # 0x423e2f
  40608b:	mov    rdx,rdi
  40608e:	call   0x403f60
  406093:	nop
  406094:	add    rsp,0x58
  406098:	pop    rbx
  406099:	pop    rsi
  40609a:	pop    rdi
  40609b:	pop    rbp
  40609c:	pop    r12
  40609e:	pop    r13
  4060a0:	pop    r14
  4060a2:	pop    r15
  4060a4:	ret    
  4060a5:	lea    rbp,[rsp+0x30]
  4060aa:	mov    ebx,r12d
  4060ad:	cmp    r12d,0x8
  4060b1:	mov    rax,rdi
  4060b4:	lea    rsi,[rbp+rbx*1+0x0]
  4060b9:	mov    rcx,rbp
  4060bc:	jae    0x406127
  4060be:	xor    edx,edx
  4060c0:	test   r12b,0x4
  4060c4:	je     0x4060cf
  4060c6:	mov    edx,DWORD PTR [rax]
  4060c8:	mov    DWORD PTR [rcx],edx
  4060ca:	mov    edx,0x4
  4060cf:	test   r12b,0x2
  4060d3:	je     0x4060e3
  4060d5:	movzx  r8d,WORD PTR [rax+rdx*1]
  4060da:	mov    WORD PTR [rcx+rdx*1],r8w
  4060df:	add    rdx,0x2
  4060e3:	and    r12d,0x1
  4060e7:	je     0x4060f0
  4060e9:	movzx  eax,BYTE PTR [rax+rdx*1]
  4060ed:	mov    BYTE PTR [rcx+rdx*1],al
  4060f0:	add    rbx,rdi
  4060f3:	jmp    0x4060f8
  4060f5:	mov    rsi,rax
  4060f8:	lea    rcx,[rip+0x1dd40]        # 0x423e3f
  4060ff:	mov    BYTE PTR [rsi],0x0
  406102:	mov    rdx,rbp
  406105:	add    rbx,0x1
  406109:	call   0x403f60
  40610e:	movzx  ecx,BYTE PTR [rbx-0x1]
  406112:	cmp    BYTE PTR [rbx],0x0
  406115:	lea    rax,[rsi+0x1]
  406119:	mov    BYTE PTR [rax-0x1],cl
  40611c:	jne    0x4060f5
  40611e:	mov    BYTE PTR [rsi+0x1],0x0
  406122:	jmp    0x406084
  406127:	mov    ecx,r12d
  40612a:	xor    eax,eax
  40612c:	and    ecx,0xfffffff8
  40612f:	mov    edx,eax
  406131:	add    eax,0x8
  406134:	mov    r8,QWORD PTR [rdi+rdx*1]
  406138:	cmp    eax,ecx
  40613a:	mov    QWORD PTR [rbp+rdx*1+0x0],r8
  40613f:	jb     0x40612f
  406141:	lea    rcx,[rbp+rax*1+0x0]
  406146:	add    rax,rdi
  406149:	jmp    0x4060be
  40614e:	mov    r12d,0x2
  406154:	jmp    0x40607d
  406159:	nop    DWORD PTR [rax+0x0]
  406160:	push   r14
  406162:	push   r13
  406164:	push   r12
  406166:	push   rbp
  406167:	push   rdi
  406168:	push   rsi
  406169:	push   rbx
  40616a:	sub    rsp,0x20
  40616e:	mov    r13,QWORD PTR [rip+0x29817]        # 0x42f98c
  406175:	mov    rbx,QWORD PTR [rcx+0x78]
  406179:	mov    rdi,rcx
  40617c:	mov    esi,DWORD PTR [rcx+0xb0]
  406182:	call   r13
  406185:	lea    rcx,[rip+0x1decd]        # 0x424059
  40618c:	lea    r9,[rax+0x30]
  406190:	mov    r8d,0x1e
  406196:	mov    edx,0x1
  40619b:	lea    r12,[rdi+0x78]
  40619f:	lea    rbp,[rdi+0xb0]
  4061a6:	call   0x41d890
  4061ab:	lea    r14,[rdi+0x30]
  4061af:	jmp    0x4061c0
  4061b1:	sub    esi,0x1
  4061b4:	add    rbx,0x68
  4061b8:	test   esi,esi
  4061ba:	jle    0x40626d
  4061c0:	test   DWORD PTR [rbx+0x10],0x280000
  4061c7:	jne    0x4061b1
  4061c9:	mov    rcx,QWORD PTR [rbx+0x50]
  4061cd:	mov    r9,rbp
  4061d0:	mov    r8,r12
  4061d3:	mov    rdx,rbx
  4061d6:	call   0x405f90
  4061db:	mov    rcx,r14
  4061de:	mov    rdx,rbx
  4061e1:	call   0x405cd0
  4061e6:	mov    rcx,QWORD PTR [rbx+0x58]
  4061ea:	test   rcx,rcx
  4061ed:	je     0x4061b1
  4061ef:	mov    r9,rbp
  4061f2:	mov    r8,r12
  4061f5:	mov    rdx,rbx
  4061f8:	call   0x405f90
  4061fd:	lea    rax,[rip+0x86fc]        # 0x40e900
  406204:	cmp    QWORD PTR [rbx+0x38],rax
  406208:	je     0x4062a0
  40620e:	cmp    WORD PTR [rbx+0xc],0x1
  406213:	mov    rdx,QWORD PTR [rdi+0x30]
  406217:	mov    r9,QWORD PTR [rbx+0x60]
  40621b:	mov    r8,QWORD PTR [rbx+0x48]
  40621f:	je     0x406292
  406221:	lea    rcx,[rip+0x1e87b]        # 0x424aa3
  406228:	call   0x403f60
  40622d:	lea    rdx,[rip+0x1da59]        # 0x423c8d
  406234:	lea    rcx,[rip+0x1da1b]        # 0x423c56
  40623b:	sub    esi,0x1
  40623e:	add    rbx,0x68
  406242:	call   0x403f60
  406247:	call   r13
  40624a:	lea    rcx,[rip+0x1dbbd]        # 0x423e0e
  406251:	lea    r9,[rax+0x30]
  406255:	mov    r8d,0x10
  40625b:	mov    edx,0x1
  406260:	call   0x41d890
  406265:	test   esi,esi
  406267:	jg     0x4061c0
  40626d:	mov    r8,QWORD PTR [rdi+0x30]
  406271:	lea    rdx,[rip+0x1da47]        # 0x423cbf
  406278:	lea    rcx,[rip+0x1f1be]        # 0x42543d
  40627f:	add    rsp,0x20
  406283:	pop    rbx
  406284:	pop    rsi
  406285:	pop    rdi
  406286:	pop    rbp
  406287:	pop    r12
  406289:	pop    r13
  40628b:	pop    r14
  40628d:	jmp    0x403f60
  406292:	lea    rcx,[rip+0x1e897]        # 0x424b30
  406299:	call   0x403f60
  40629e:	jmp    0x40622d
  4062a0:	lea    rdx,[rip+0x1dc4d]        # 0x423ef4
  4062a7:	lea    rcx,[rip+0x1d9a8]        # 0x423c56
  4062ae:	call   0x403f60
  4062b3:	jmp    0x40622d
  4062b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4062c0:	push   r15
  4062c2:	push   r14
  4062c4:	push   r13
  4062c6:	push   r12
  4062c8:	push   rbp
  4062c9:	push   rdi
  4062ca:	push   rsi
  4062cb:	push   rbx
  4062cc:	sub    rsp,0x68
  4062d0:	mov    eax,DWORD PTR [rcx+0x10]
  4062d3:	test   al,0x8
  4062d5:	jne    0x4063e0
  4062db:	mov    rdi,QWORD PTR [rcx+0x20]
  4062df:	test   rdi,rdi
  4062e2:	je     0x406420
  4062e8:	mov    rdx,QWORD PTR [rcx+0x18]
  4062ec:	lea    r13,[rsp+0x40]
  4062f1:	mov    rbp,rcx
  4062f4:	mov    r8d,0x20
  4062fa:	mov    rcx,r13
  4062fd:	call   0x416d80
  406302:	test   eax,eax
  406304:	jne    0x4063e0
  40630a:	mov    eax,DWORD PTR [rdi]
  40630c:	test   eax,eax
  40630e:	jle    0x4063a7
  406314:	lea    r15d,[rax-0x1]
  406318:	xor    ebx,ebx
  40631a:	xor    r12d,r12d
  40631d:	lea    rax,[r15+0x1]
  406321:	mov    QWORD PTR [rsp+0x38],rax
  406326:	jmp    0x406350
  406328:	nop    DWORD PTR [rax+rax*1+0x0]
  406330:	mov    BYTE PTR [r15],0x3d
  406334:	cmp    r14d,r12d
  406337:	je     0x406341
  406339:	movsxd rax,r12d
  40633c:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
  406341:	add    r12d,0x1
  406345:	add    rbx,0x1
  406349:	cmp    rbx,QWORD PTR [rsp+0x38]
  40634e:	je     0x4063a7
  406350:	mov    rsi,QWORD PTR [rdi+rbx*8+0x8]
  406355:	mov    edx,0x3d
  40635a:	mov    r14d,ebx
  40635d:	mov    rcx,rsi
  406360:	call   0x41d820
  406365:	test   rax,rax
  406368:	mov    r15,rax
  40636b:	je     0x4063f1
  406371:	mov    BYTE PTR [rax],0x0
  406374:	xor    r9d,r9d
  406377:	xor    r8d,r8d
  40637a:	mov    DWORD PTR [rsp+0x20],0x0
  406382:	mov    rdx,rsi
  406385:	mov    rcx,r13
  406388:	call   0x416d78
  40638d:	test   eax,eax
  40638f:	jne    0x406330
  406391:	mov    rcx,rsi
  406394:	add    rbx,0x1
  406398:	call   0x41d8a8
  40639d:	sub    DWORD PTR [rdi],0x1
  4063a0:	cmp    rbx,QWORD PTR [rsp+0x38]
  4063a5:	jne    0x406350
  4063a7:	mov    rcx,r13
  4063aa:	call   0x416d70
  4063af:	mov    eax,DWORD PTR [rdi]
  4063b1:	test   eax,eax
  4063b3:	jne    0x4063e0
  4063b5:	mov    eax,DWORD PTR [rbp+0x10]
  4063b8:	mov    edx,eax
  4063ba:	and    edx,0xfffff00
  4063c0:	test   ah,0x8
  4063c3:	jne    0x4063c8
  4063c5:	or     edx,0x20
  4063c8:	mov    DWORD PTR [rbp+0x10],edx
  4063cb:	mov    rcx,rdi
  4063ce:	call   0x41d8a8
  4063d3:	mov    QWORD PTR [rbp+0x20],0x0
  4063db:	nop    DWORD PTR [rax+rax*1+0x0]
  4063e0:	add    rsp,0x68
  4063e4:	pop    rbx
  4063e5:	pop    rsi
  4063e6:	pop    rdi
  4063e7:	pop    rbp
  4063e8:	pop    r12
  4063ea:	pop    r13
  4063ec:	pop    r14
  4063ee:	pop    r15
  4063f0:	ret    
  4063f1:	xor    r9d,r9d
  4063f4:	xor    r8d,r8d
  4063f7:	mov    DWORD PTR [rsp+0x20],0x0
  4063ff:	mov    rdx,rsi
  406402:	mov    rcx,r13
  406405:	call   0x416d78
  40640a:	test   eax,eax
  40640c:	jne    0x406334
  406412:	jmp    0x406391
  406417:	nop    WORD PTR [rax+rax*1+0x0]
  406420:	mov    edx,eax
  406422:	and    edx,0xfffff00
  406428:	test   ah,0x8
  40642b:	jne    0x406430
  40642d:	or     edx,0x20
  406430:	mov    DWORD PTR [rcx+0x10],edx
  406433:	jmp    0x4063e0
  406435:	nop
  406436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406440:	push   rsi
  406441:	push   rbx
  406442:	sub    rsp,0x28
  406446:	test   BYTE PTR [rdx+0x10],0x4
  40644a:	je     0x406455
  40644c:	mov    rax,QWORD PTR [rdx]
  40644f:	test   BYTE PTR [rax+0x13],0x2
  406453:	jne    0x406460
  406455:	add    rsp,0x28
  406459:	pop    rbx
  40645a:	pop    rsi
  40645b:	jmp    0x405540
  406460:	mov    rsi,QWORD PTR [rax+0x50]
  406464:	mov    rbx,QWORD PTR [rip+0x19b85]        # 0x41fff0
  40646b:	call   QWORD PTR [rip+0x2951b]        # 0x42f98c
  406471:	lea    rcx,[rax+0x60]
  406475:	mov    r8,rsi
  406478:	mov    rdx,rbx
  40647b:	call   0x403b50
  406480:	mov    eax,0xffffffff
  406485:	add    rsp,0x28
  406489:	pop    rbx
  40648a:	pop    rsi
  40648b:	ret    
  40648c:	nop    DWORD PTR [rax+0x0]
  406490:	push   r15
  406492:	push   r14
  406494:	push   r13
  406496:	push   r12
  406498:	push   rbp
  406499:	push   rdi
  40649a:	push   rsi
  40649b:	push   rbx
  40649c:	sub    rsp,0x188
  4064a3:	movzx  eax,WORD PTR [rcx+0xaa]
  4064aa:	test   ax,0x7fff
  4064ae:	je     0x406708
  4064b4:	mov    r12,rdx
  4064b7:	lea    rdx,[rax+rax*2]
  4064bb:	mov    rbp,rcx
  4064be:	mov    rcx,QWORD PTR [rcx+0x78]
  4064c2:	lea    rax,[rax+rdx*4]
  4064c6:	lea    rax,[rcx+rax*8]
  4064ca:	mov    rbx,QWORD PTR [rax+0x18]
  4064ce:	test   rbx,rbx
  4064d1:	je     0x4064dc
  4064d3:	cmp    BYTE PTR [rbx],0x0
  4064d6:	jne    0x406580
  4064dc:	mov    rax,QWORD PTR [rbp+0x58]
  4064e0:	test   rax,rax
  4064e3:	jne    0x4064f4
  4064e5:	jmp    0x406708
  4064ea:	nop    WORD PTR [rax+rax*1+0x0]
  4064f0:	add    rax,0x8
  4064f4:	cmp    QWORD PTR [rax+0x8],0x0
  4064f9:	jne    0x4064f0
  4064fb:	mov    rbx,QWORD PTR [rax]
  4064fe:	xor    edi,edi
  406500:	cmp    BYTE PTR [rbx],0x24
  406503:	je     0x406584
  406505:	lea    r13,[rsp+0x30]
  40650a:	mov    rcx,rbx
  40650d:	mov    rsi,QWORD PTR [rip+0x296e8]        # 0x42fbfc
  406514:	mov    rdx,r13
  406517:	call   rsi
  406519:	test   eax,eax
  40651b:	jne    0x406710
  406521:	movzx  eax,WORD PTR [rsp+0x36]
  406526:	and    ax,0xf000
  40652a:	cmp    ax,0x4000
  40652e:	je     0x406660
  406534:	cmp    ax,0x8000
  406538:	je     0x40677d
  40653e:	mov    rbp,QWORD PTR [rbp+0x28]
  406542:	mov    rsi,QWORD PTR [rip+0x19b17]        # 0x420060
  406549:	call   QWORD PTR [rip+0x2943d]        # 0x42f98c
  40654f:	lea    rcx,[rax+0x60]
  406553:	mov    r9,rbx
  406556:	mov    r8,rbp
  406559:	mov    rdx,rsi
  40655c:	call   0x403b50
  406561:	xor    eax,eax
  406563:	test   edi,edi
  406565:	jne    0x406700
  40656b:	add    rsp,0x188
  406572:	pop    rbx
  406573:	pop    rsi
  406574:	pop    rdi
  406575:	pop    rbp
  406576:	pop    r12
  406578:	pop    r13
  40657a:	pop    r14
  40657c:	pop    r15
  40657e:	ret    
  40657f:	nop
  406580:	xor    edi,edi
  406582:	jmp    0x406505
  406584:	lea    r13,[rbx+0x1]
  406588:	mov    edx,0x5c
  40658d:	mov    rcx,r13
  406590:	call   0x41d820
  406595:	test   rax,rax
  406598:	mov    r14,rax
  40659b:	je     0x406828
  4065a1:	sub    rax,r13
  4065a4:	cmp    rax,0x7f
  4065a8:	jg     0x406708
  4065ae:	lea    r8,[rsp+0x70]
  4065b3:	cmp    rax,0x8
  4065b7:	mov    rsi,r13
  4065ba:	mov    rdi,r8
  4065bd:	jb     0x4065c9
  4065bf:	mov    rcx,rax
  4065c2:	shr    rcx,0x3
  4065c6:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4065c9:	xor    edx,edx
  4065cb:	test   al,0x4
  4065cd:	je     0x4065d8
  4065cf:	mov    edx,DWORD PTR [rsi]
  4065d1:	mov    DWORD PTR [rdi],edx
  4065d3:	mov    edx,0x4
  4065d8:	test   al,0x2
  4065da:	je     0x4065e8
  4065dc:	movzx  ecx,WORD PTR [rsi+rdx*1]
  4065e0:	mov    WORD PTR [rdi+rdx*1],cx
  4065e4:	add    rdx,0x2
  4065e8:	test   al,0x1
  4065ea:	je     0x4065f3
  4065ec:	movzx  ecx,BYTE PTR [rsi+rdx*1]
  4065f0:	mov    BYTE PTR [rdi+rdx*1],cl
  4065f3:	mov    rcx,r8
  4065f6:	mov    BYTE PTR [rsp+rax*1+0x70],0x0
  4065fb:	call   0x41d888
  406600:	test   rax,rax
  406603:	mov    rdi,rax
  406606:	je     0x40683c
  40660c:	mov    rcx,rax
  40660f:	call   0x41d7f8
  406614:	mov    rcx,r14
  406617:	mov    rsi,rax
  40661a:	call   0x41d7f8
  40661f:	lea    rcx,[rsi+rax*1+0x2]
  406624:	mov    r13,rax
  406627:	call   0x405990
  40662c:	mov    rbx,rax
  40662f:	mov    r8,rsi
  406632:	mov    rdx,rdi
  406635:	mov    rcx,rax
  406638:	add    rsi,rbx
  40663b:	mov    edi,0x1
  406640:	call   0x41d860
  406645:	lea    rcx,[rsi+0x1]
  406649:	lea    r8,[r13+0x1]
  40664d:	mov    BYTE PTR [rsi],0x2f
  406650:	mov    rdx,r14
  406653:	call   0x41d860
  406658:	jmp    0x406505
  40665d:	nop    DWORD PTR [rax]
  406660:	mov    rcx,rbx
  406663:	call   0x41d7f8
  406668:	mov    rcx,QWORD PTR [rbp+0x38]
  40666c:	mov    r14,rax
  40666f:	call   0x41d7f8
  406674:	lea    r14,[r14+rax*1+0x2]
  406679:	mov    rcx,r14
  40667c:	call   0x405990
  406681:	mov    r15,rax
  406684:	mov    rax,QWORD PTR [rbp+0x38]
  406688:	lea    r8,[rip+0x1c08d]        # 0x42271c
  40668f:	mov    r9,rbx
  406692:	mov    rdx,r14
  406695:	mov    rcx,r15
  406698:	mov    QWORD PTR [rsp+0x20],rax
  40669d:	call   0x403f40
  4066a2:	cdqe   
  4066a4:	cmp    r14,rax
  4066a7:	jbe    0x4068ed
  4066ad:	test   edi,edi
  4066af:	jne    0x4067f6
  4066b5:	mov    rdx,r13
  4066b8:	mov    rcx,r15
  4066bb:	call   rsi
  4066bd:	test   eax,eax
  4066bf:	jne    0x406803
  4066c5:	movzx  eax,WORD PTR [rsp+0x36]
  4066ca:	and    ax,0xf000
  4066ce:	cmp    ax,0x8000
  4066d2:	je     0x4068e0
  4066d8:	mov    rbx,QWORD PTR [rip+0x19981]        # 0x420060
  4066df:	mov    rsi,QWORD PTR [rbp+0x28]
  4066e3:	call   QWORD PTR [rip+0x292a3]        # 0x42f98c
  4066e9:	lea    rcx,[rax+0x60]
  4066ed:	mov    r9,r15
  4066f0:	mov    rdx,rbx
  4066f3:	mov    r8,rsi
  4066f6:	mov    rbx,r15
  4066f9:	call   0x403b50
  4066fe:	xchg   ax,ax
  406700:	mov    rcx,rbx
  406703:	call   0x41d8a8
  406708:	xor    eax,eax
  40670a:	jmp    0x40656b
  40670f:	nop
  406710:	mov    r15,QWORD PTR [rip+0x292c5]        # 0x42f9dc
  406717:	call   r15
  40671a:	cmp    DWORD PTR [rax],0x2
  40671d:	jne    0x406791
  40671f:	mov    edx,0x5c
  406724:	mov    rcx,rbx
  406727:	call   0x41d7d8
  40672c:	test   rax,rax
  40672f:	je     0x406773
  406731:	sub    rax,rbx
  406734:	cmp    rax,0x103
  40673a:	mov    r14,rax
  40673d:	ja     0x406791
  40673f:	lea    r9,[rsp+0x70]
  406744:	mov    r8,rax
  406747:	mov    rdx,rbx
  40674a:	mov    rcx,r9
  40674d:	call   0x41d860
  406752:	mov    BYTE PTR [rsp+r14*1+0x70],0x0
  406758:	mov    rdx,r13
  40675b:	mov    rcx,rax
  40675e:	call   rsi
  406760:	test   eax,eax
  406762:	jne    0x406791
  406764:	movzx  eax,WORD PTR [rsp+0x36]
  406769:	and    ax,0xf000
  40676d:	cmp    ax,0x4000
  406771:	jne    0x406791
  406773:	mov    edx,0xffff8000
  406778:	mov    WORD PTR [rsp+0x36],dx
  40677d:	mov    rcx,rbx
  406780:	call   0x41d770
  406785:	mov    DWORD PTR [r12],edi
  406789:	mov    rax,rbx
  40678c:	jmp    0x40656b
  406791:	mov    r12,QWORD PTR [rbp+0x28]
  406795:	mov    rbp,QWORD PTR [rip+0x198c4]        # 0x420060
  40679c:	mov    rsi,QWORD PTR [rip+0x291e9]        # 0x42f98c
  4067a3:	call   rsi
  4067a5:	lea    rcx,[rax+0x60]
  4067a9:	mov    r8,r12
  4067ac:	mov    rdx,rbp
  4067af:	call   0x403b50
  4067b4:	call   r15
  4067b7:	mov    ecx,DWORD PTR [rax]
  4067b9:	call   0x41d808
  4067be:	mov    r13,rax
  4067c1:	call   r15
  4067c4:	mov    rbp,QWORD PTR [rip+0x19815]        # 0x41ffe0
  4067cb:	mov    r12d,DWORD PTR [rax]
  4067ce:	call   rsi
  4067d0:	lea    rcx,[rax+0x60]
  4067d4:	mov    QWORD PTR [rsp+0x20],rbx
  4067d9:	mov    r9,r13
  4067dc:	mov    r8d,r12d
  4067df:	mov    rdx,rbp
  4067e2:	call   0x403b50
  4067e7:	test   edi,edi
  4067e9:	jne    0x406700
  4067ef:	xor    eax,eax
  4067f1:	jmp    0x40656b
  4067f6:	mov    rcx,rbx
  4067f9:	call   0x41d8a8
  4067fe:	jmp    0x4066b5
  406803:	mov    rbx,QWORD PTR [rip+0x291d2]        # 0x42f9dc
  40680a:	call   rbx
  40680c:	cmp    DWORD PTR [rax],0x2
  40680f:	jne    0x40687e
  406811:	mov    eax,0xffff8000
  406816:	mov    rbx,r15
  406819:	mov    edi,0x1
  40681e:	mov    WORD PTR [rsp+0x36],ax
  406823:	jmp    0x40677d
  406828:	mov    rcx,r13
  40682b:	call   0x41d888
  406830:	test   rax,rax
  406833:	mov    rbx,rax
  406836:	jne    0x406505
  40683c:	mov    rsi,QWORD PTR [rip+0x1981d]        # 0x420060
  406843:	mov    rdi,QWORD PTR [rbp+0x28]
  406847:	mov    rbx,QWORD PTR [rip+0x2913e]        # 0x42f98c
  40684e:	call   rbx
  406850:	lea    rcx,[rax+0x60]
  406854:	mov    rdx,rsi
  406857:	mov    r8,rdi
  40685a:	call   0x403b50
  40685f:	mov    rsi,QWORD PTR [rip+0x1979a]        # 0x420000
  406866:	call   rbx
  406868:	lea    rcx,[rax+0x60]
  40686c:	mov    r8,r13
  40686f:	mov    rdx,rsi
  406872:	call   0x403b50
  406877:	xor    eax,eax
  406879:	jmp    0x40656b
  40687e:	mov    rbp,QWORD PTR [rbp+0x28]
  406882:	mov    rdi,QWORD PTR [rip+0x197d7]        # 0x420060
  406889:	mov    rsi,QWORD PTR [rip+0x290fc]        # 0x42f98c
  406890:	call   rsi
  406892:	lea    rcx,[rax+0x60]
  406896:	mov    r8,rbp
  406899:	mov    rdx,rdi
  40689c:	call   0x403b50
  4068a1:	call   rbx
  4068a3:	mov    ecx,DWORD PTR [rax]
  4068a5:	call   0x41d808
  4068aa:	mov    rbp,rax
  4068ad:	call   rbx
  4068af:	mov    rbx,QWORD PTR [rip+0x1972a]        # 0x41ffe0
  4068b6:	mov    edi,DWORD PTR [rax]
  4068b8:	call   rsi
  4068ba:	lea    rcx,[rax+0x60]
  4068be:	mov    r9,rbp
  4068c1:	mov    QWORD PTR [rsp+0x20],r15
  4068c6:	mov    r8d,edi
  4068c9:	mov    rdx,rbx
  4068cc:	call   0x403b50
  4068d1:	mov    rcx,r15
  4068d4:	call   0x41d8a8
  4068d9:	xor    eax,eax
  4068db:	jmp    0x40656b
  4068e0:	mov    rbx,r15
  4068e3:	mov    edi,0x1
  4068e8:	jmp    0x40677d
  4068ed:	mov    ecx,0x1
  4068f2:	call   0x403f90
  4068f7:	nop
  4068f8:	nop    DWORD PTR [rax+rax*1+0x0]
  406900:	push   r15
  406902:	push   r14
  406904:	push   r13
  406906:	push   r12
  406908:	push   rbp
  406909:	push   rdi
  40690a:	push   rsi
  40690b:	push   rbx
  40690c:	sub    rsp,0x148
  406913:	test   rcx,rcx
  406916:	mov    rsi,rcx
  406919:	mov    rbx,rdx
  40691c:	je     0x4069c9
  406922:	lea    r12,[rsp+0x30]
  406927:	xor    r13d,r13d
  40692a:	mov    rcx,rsi
  40692d:	call   0x41d7f8
  406932:	mov    edx,r13d
  406935:	cmp    rdx,rax
  406938:	jae    0x4069c9
  40693e:	movsxd rax,r13d
  406941:	add    rax,rsi
  406944:	movzx  edx,BYTE PTR [rax]
  406947:	cmp    dl,0x3a
  40694a:	jne    0x40695c
  40694c:	nop    DWORD PTR [rax+0x0]
  406950:	add    rax,0x1
  406954:	movzx  edx,BYTE PTR [rax]
  406957:	cmp    dl,0x3a
  40695a:	je     0x406950
  40695c:	mov    rcx,r12
  40695f:	add    rax,0x1
  406963:	test   dl,dl
  406965:	mov    BYTE PTR [rcx],dl
  406967:	je     0x406971
  406969:	cmp    dl,0x3a
  40696c:	jne    0x4069d1
  40696e:	mov    BYTE PTR [rcx],0x0
  406971:	mov    r13d,eax
  406974:	sub    r13d,esi
  406977:	cmp    BYTE PTR [rsp+0x30],0x0
  40697c:	je     0x4069c9
  40697e:	mov    rcx,r12
  406981:	call   0x4182f0
  406986:	test   rax,rax
  406989:	mov    rdi,rax
  40698c:	jne    0x4069a0
  40698e:	jmp    0x40692a
  406990:	lea    rcx,[rax+0x8]
  406994:	mov    rdx,rbx
  406997:	call   0x41d818
  40699c:	test   eax,eax
  40699e:	je     0x4069f0
  4069a0:	mov    rcx,rdi
  4069a3:	call   0x4184d0
  4069a8:	test   rax,rax
  4069ab:	jne    0x406990
  4069ad:	mov    rcx,rdi
  4069b0:	call   0x4186f0
  4069b5:	mov    rcx,rsi
  4069b8:	call   0x41d7f8
  4069bd:	mov    edx,r13d
  4069c0:	cmp    rdx,rax
  4069c3:	jb     0x40693e
  4069c9:	xor    r14d,r14d
  4069cc:	jmp    0x406bce
  4069d1:	add    rcx,0x1
  4069d5:	mov    rdx,rcx
  4069d8:	sub    rdx,r12
  4069db:	cmp    edx,0x103
  4069e1:	ja     0x406971
  4069e3:	movzx  edx,BYTE PTR [rax]
  4069e6:	jmp    0x40695f
  4069eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4069f0:	cmp    BYTE PTR [rbx],0x2f
  4069f3:	je     0x406c0b
  4069f9:	cmp    BYTE PTR [rsp+0x30],0x0
  4069fe:	jne    0x406c1b
  406a04:	mov    rcx,rbx
  406a07:	call   0x41d7f8
  406a0c:	lea    rcx,[rax+0x3]
  406a10:	call   0x41d870
  406a15:	lea    rcx,[rax+0x2]
  406a19:	mov    rbp,rax
  406a1c:	mov    BYTE PTR [rax],0x2e
  406a1f:	mov    BYTE PTR [rax+0x1],0x2f
  406a23:	mov    BYTE PTR [rax+0x2],0x0
  406a27:	mov    rdx,rbx
  406a2a:	call   0x41d810
  406a2f:	mov    rcx,rbp
  406a32:	mov    edx,0x5
  406a37:	call   0x41d740
  406a3c:	test   eax,eax
  406a3e:	mov    rcx,rbp
  406a41:	js     0x406bf1
  406a47:	call   0x41d768
  406a4c:	cmp    BYTE PTR [rbp+0x0],0x2f
  406a50:	mov    r14,rax
  406a53:	sete   BYTE PTR [rsp+0x2f]
  406a58:	movzx  eax,BYTE PTR [rsp+0x2f]
  406a5d:	xor    r15d,r15d
  406a60:	xor    r13d,r13d
  406a63:	add    eax,0x2e
  406a66:	mov    BYTE PTR [rsp+0x2f],al
  406a6a:	movzx  eax,BYTE PTR [r14]
  406a6e:	xchg   ax,ax
  406a70:	test   al,al
  406a72:	mov    rbx,r13
  406a75:	je     0x406ba7
  406a7b:	cmp    al,0x2f
  406a7d:	je     0x406be5
  406a83:	add    rbx,0x1
  406a87:	mov    esi,r15d
  406a8a:	jmp    0x406a97
  406a8c:	nop    DWORD PTR [rax+0x0]
  406a90:	test   dl,dl
  406a92:	je     0x406aa8
  406a94:	mov    rbx,rcx
  406a97:	movzx  edx,BYTE PTR [r14+rbx*1]
  406a9c:	add    esi,0x1
  406a9f:	lea    rcx,[rbx+0x1]
  406aa3:	cmp    dl,0x2f
  406aa6:	jne    0x406a90
  406aa8:	test   dl,dl
  406aaa:	lea    r15d,[rsi+0x1]
  406aae:	je     0x406ba7
  406ab4:	movsxd r13,r15d
  406ab7:	lea    r12,[r14+r13*1]
  406abb:	movzx  eax,BYTE PTR [r12]
  406ac0:	cmp    al,0x2f
  406ac2:	jne    0x406af6
  406ac4:	lea    r8,[r14+r13*1+0x1]
  406ac9:	mov    r9d,r15d
  406acc:	nop    DWORD PTR [rax+0x0]
  406ad0:	mov    rdx,r8
  406ad3:	add    r8,0x1
  406ad7:	add    r9d,0x1
  406adb:	cmp    BYTE PTR [r8-0x1],0x2f
  406ae0:	je     0x406ad0
  406ae2:	cmp    r15d,r9d
  406ae5:	je     0x406af6
  406ae7:	lea    rcx,[r14+rbx*1+0x1]
  406aec:	call   0x41d810
  406af1:	movzx  eax,BYTE PTR [r12]
  406af6:	test   esi,esi
  406af8:	je     0x406b0e
  406afa:	cmp    BYTE PTR [r14+rbx*1-0x1],0x5c
  406b00:	je     0x406a70
  406b06:	test   al,al
  406b08:	je     0x406c99
  406b0e:	cmp    al,0x2e
  406b10:	jne    0x406a70
  406b16:	lea    rdx,[r14+r13*1+0x1]
  406b1b:	movzx  ecx,BYTE PTR [rdx]
  406b1e:	test   cl,cl
  406b20:	je     0x406c99
  406b26:	cmp    cl,0x2f
  406b29:	je     0x406c03
  406b2f:	cmp    cl,0x2e
  406b32:	jne    0x406a70
  406b38:	lea    rdx,[r14+r13*1+0x2]
  406b3d:	movzx  ecx,BYTE PTR [rdx]
  406b40:	test   cl,cl
  406b42:	je     0x406b4d
  406b44:	cmp    cl,0x2f
  406b47:	jne    0x406a70
  406b4d:	movsxd rcx,esi
  406b50:	sub    rcx,0x1
  406b54:	jmp    0x406b6f
  406b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406b60:	lea    rax,[rcx-0x1]
  406b64:	cmp    BYTE PTR [r14+rax*1+0x1],0x2f
  406b6a:	je     0x406b7e
  406b6c:	mov    rcx,rax
  406b6f:	sub    esi,0x1
  406b72:	cmp    esi,0xffffffff
  406b75:	jne    0x406b60
  406b77:	mov    rcx,0xffffffffffffffff
  406b7e:	lea    rcx,[r14+rcx*1+0x1]
  406b83:	call   0x41d810
  406b88:	mov    r15d,0x0
  406b8e:	test   esi,esi
  406b90:	cmovns r15d,esi
  406b94:	movsxd r13,r15d
  406b97:	movzx  eax,BYTE PTR [r14+r13*1]
  406b9c:	mov    rbx,r13
  406b9f:	test   al,al
  406ba1:	jne    0x406a7b
  406ba7:	cmp    BYTE PTR [r14],0x0
  406bab:	jne    0x406cae
  406bb1:	movzx  eax,BYTE PTR [rsp+0x2f]
  406bb6:	mov    rcx,rbp
  406bb9:	mov    BYTE PTR [r14+0x1],0x0
  406bbe:	mov    BYTE PTR [r14],al
  406bc1:	call   0x41d8a8
  406bc6:	mov    rcx,rdi
  406bc9:	call   0x4186f0
  406bce:	mov    rax,r14
  406bd1:	add    rsp,0x148
  406bd8:	pop    rbx
  406bd9:	pop    rsi
  406bda:	pop    rdi
  406bdb:	pop    rbp
  406bdc:	pop    r12
  406bde:	pop    r13
  406be0:	pop    r14
  406be2:	pop    r15
  406be4:	ret    
  406be5:	mov    esi,r15d
  406be8:	add    r15d,0x1
  406bec:	jmp    0x406ab4
  406bf1:	call   0x41d8a8
  406bf6:	mov    rcx,rdi
  406bf9:	call   0x4186f0
  406bfe:	jmp    0x4069b5
  406c03:	mov    rcx,r12
  406c06:	jmp    0x406b83
  406c0b:	mov    rcx,rbx
  406c0e:	call   0x41d768
  406c13:	mov    rbp,rax
  406c16:	jmp    0x406a2f
  406c1b:	mov    r14,r12
  406c1e:	mov    edx,DWORD PTR [r14]
  406c21:	add    r14,0x4
  406c25:	lea    eax,[rdx-0x1010101]
  406c2b:	not    edx
  406c2d:	and    eax,edx
  406c2f:	and    eax,0x80808080
  406c34:	je     0x406c1e
  406c36:	mov    edx,eax
  406c38:	mov    rcx,rbx
  406c3b:	shr    edx,0x10
  406c3e:	test   eax,0x8080
  406c43:	cmove  eax,edx
  406c46:	lea    rdx,[r14+0x2]
  406c4a:	cmove  r14,rdx
  406c4e:	add    al,al
  406c50:	sbb    r14,0x3
  406c54:	sub    r14,r12
  406c57:	call   0x41d7f8
  406c5c:	lea    rcx,[r14+rax*1+0x2]
  406c61:	call   0x41d870
  406c66:	lea    r8,[r14+0x1]
  406c6a:	mov    rcx,rax
  406c6d:	mov    rdx,r12
  406c70:	mov    rbp,rax
  406c73:	call   0x41d860
  406c78:	movsxd rcx,r14d
  406c7b:	cmp    BYTE PTR [rbp+rcx*1-0x1],0x2f
  406c80:	je     0x406cc3
  406c82:	mov    BYTE PTR [rbp+rcx*1+0x0],0x2f
  406c87:	lea    ecx,[r14+0x1]
  406c8b:	movsxd rcx,ecx
  406c8e:	add    rcx,rbp
  406c91:	mov    BYTE PTR [rcx],0x0
  406c94:	jmp    0x406a27
  406c99:	lea    eax,[r15-0x1]
  406c9d:	cdqe   
  406c9f:	mov    BYTE PTR [r14+rax*1],0x0
  406ca4:	cmp    BYTE PTR [r14],0x0
  406ca8:	je     0x406bb1
  406cae:	mov    rcx,rbp
  406cb1:	call   0x41d8a8
  406cb6:	mov    rcx,rdi
  406cb9:	call   0x4186f0
  406cbe:	jmp    0x406bce
  406cc3:	add    rcx,rbp
  406cc6:	jmp    0x406a27
  406ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  406cd0:	push   r12
  406cd2:	push   rbp
  406cd3:	push   rdi
  406cd4:	push   rsi
  406cd5:	push   rbx
  406cd6:	sub    rsp,0x30
  406cda:	test   rcx,rcx
  406cdd:	mov    rbx,rcx
  406ce0:	mov    rdi,rdx
  406ce3:	je     0x406e68
  406ce9:	mov    r9d,DWORD PTR [rcx+0x10]
  406ced:	mov    eax,r9d
  406cf0:	shr    eax,0x15
  406cf3:	and    eax,0x1
  406cf6:	test   r9d,0x2000
  406cfd:	mov    BYTE PTR [rip+0x25631],al        # 0x42c334
  406d03:	je     0x406d32
  406d05:	mov    rax,QWORD PTR [rcx+0xa0]
  406d0c:	test   rax,rax
  406d0f:	je     0x406d32
  406d11:	mov    edx,DWORD PTR [rip+0x19169]        # 0x41fe80
  406d17:	test   edx,edx
  406d19:	je     0x406d32
  406d1b:	mov    edx,r9d
  406d1e:	and    edx,0x30000
  406d24:	cmp    edx,0x20000
  406d2a:	je     0x406dc1
  406d30:	call   rax
  406d32:	mov    esi,DWORD PTR [rbx]
  406d34:	lea    eax,[rsi-0x19000]
  406d3a:	cmp    eax,0x10001
  406d3f:	ja     0x406dd9
  406d45:	cmp    QWORD PTR [rbx+0x28],0x0
  406d4a:	je     0x406d60
  406d4c:	xor    eax,eax
  406d4e:	add    rsp,0x30
  406d52:	pop    rbx
  406d53:	pop    rsi
  406d54:	pop    rdi
  406d55:	pop    rbp
  406d56:	pop    r12
  406d58:	ret    
  406d59:	nop    DWORD PTR [rax+0x0]
  406d60:	mov    edx,0x5c
  406d65:	mov    rcx,rdi
  406d68:	call   0x41d7d8
  406d6d:	test   rax,rax
  406d70:	je     0x406dd3
  406d72:	add    rax,0x1
  406d76:	mov    QWORD PTR [rbx+0x28],rax
  406d7a:	lea    rcx,[rip+0x1b9a1]        # 0x422722
  406d81:	call   0x41d888
  406d86:	mov    rdx,rdi
  406d89:	mov    rcx,rax
  406d8c:	call   0x406900
  406d91:	test   rax,rax
  406d94:	lea    rdx,[rip+0x1cd25]        # 0x423ac0
  406d9b:	lea    rcx,[rip+0x18c9e]        # 0x41fa40
  406da2:	cmove  rax,rdi
  406da6:	mov    QWORD PTR [rbx+0x20],rax
  406daa:	mov    eax,0x2d
  406daf:	nop
  406db0:	add    rdx,0x1
  406db4:	mov    BYTE PTR [rcx+rax*1],0x2d
  406db8:	movzx  eax,BYTE PTR [rdx]
  406dbb:	test   al,al
  406dbd:	jne    0x406db0
  406dbf:	jmp    0x406d4c
  406dc1:	or     r9d,0x10000
  406dc8:	mov    DWORD PTR [rcx+0x10],r9d
  406dcc:	call   rax
  406dce:	jmp    0x406d32
  406dd3:	mov    QWORD PTR [rbx+0x28],rdi
  406dd7:	jmp    0x406d7a
  406dd9:	mov    r12,QWORD PTR [rip+0x190e0]        # 0x41fec0
  406de0:	mov    rbp,QWORD PTR [rip+0x28ba5]        # 0x42f98c
  406de7:	call   rbp
  406de9:	lea    rcx,[rax+0x60]
  406ded:	mov    eax,esi
  406def:	mov    r8,rdi
  406df2:	and    eax,0x7f
  406df5:	mov    rdx,r12
  406df8:	mov    DWORD PTR [rsp+0x28],eax
  406dfc:	mov    eax,esi
  406dfe:	sar    esi,0xc
  406e01:	sar    eax,0x7
  406e04:	mov    r9d,esi
  406e07:	and    eax,0x1f
  406e0a:	mov    DWORD PTR [rsp+0x20],eax
  406e0e:	call   0x403b50
  406e13:	cmp    DWORD PTR [rbx],0x29001
  406e19:	jle    0x406e54
  406e1b:	call   rbp
  406e1d:	mov    rcx,QWORD PTR [rip+0x19094]        # 0x41feb8
  406e24:	lea    rdx,[rax+0x60]
  406e28:	call   0x41d8b8
  406e2d:	call   rbp
  406e2f:	lea    rcx,[rip+0x1f787]        # 0x4265bd
  406e36:	lea    r9,[rax+0x60]
  406e3a:	mov    r8d,0x1
  406e40:	mov    edx,0x8
  406e45:	call   0x41d890
  406e4a:	mov    eax,0xffffffff
  406e4f:	jmp    0x406d4e
  406e54:	call   rbp
  406e56:	mov    rcx,QWORD PTR [rip+0x19073]        # 0x41fed0
  406e5d:	lea    rdx,[rax+0x60]
  406e61:	call   0x41d8b8
  406e66:	jmp    0x406e2d
  406e68:	call   QWORD PTR [rip+0x28b1e]        # 0x42f98c
  406e6e:	mov    rcx,QWORD PTR [rip+0x1903b]        # 0x41feb0
  406e75:	lea    rdx,[rax+0x60]
  406e79:	call   0x41d8b8
  406e7e:	mov    eax,0xffffffff
  406e83:	jmp    0x406d4e
  406e88:	nop    DWORD PTR [rax+rax*1+0x0]
  406e90:	push   r15
  406e92:	push   r14
  406e94:	push   r13
  406e96:	push   r12
  406e98:	push   rbp
  406e99:	push   rdi
  406e9a:	push   rsi
  406e9b:	push   rbx
  406e9c:	sub    rsp,0x98
  406ea3:	test   BYTE PTR [rcx+0x12],0x4
  406ea7:	mov    rbx,rcx
  406eaa:	mov    rdi,rdx
  406ead:	mov    rbp,r8
  406eb0:	je     0x406ebd
  406eb2:	cmp    WORD PTR [rdx+0x6],0x57
  406eb7:	je     0x4072ce
  406ebd:	cmp    QWORD PTR [rdi+0x28],0x0
  406ec2:	je     0x4071b0
  406ec8:	mov    eax,DWORD PTR [rip+0x25462]        # 0x42c330
  406ece:	lea    rsi,[rip+0x1cbeb]        # 0x423ac0
  406ed5:	mov    rdx,QWORD PTR [rip+0x2542c]        # 0x42c308
  406edc:	lea    rcx,[rsi+rax*1+0xcb]
  406ee4:	call   0x41d8b8
  406ee9:	mov    rbp,QWORD PTR [rdi+0x28]
  406eed:	test   rbp,rbp
  406ef0:	je     0x406f82
  406ef6:	cmp    DWORD PTR [rbp+0x4],0x8000
  406efd:	je     0x4071c0
  406f03:	mov    rdx,QWORD PTR [rip+0x253fe]        # 0x42c308
  406f0a:	mov    rcx,QWORD PTR [rip+0x19297]        # 0x4201a8
  406f11:	call   0x41d8b8
  406f16:	movsxd rax,DWORD PTR [rbp+0x0]
  406f1a:	nop    WORD PTR [rax+rax*1+0x0]
  406f20:	lea    rdx,[rax+rax*2]
  406f24:	mov    r9,QWORD PTR [rbx+0x78]
  406f28:	mov    rcx,QWORD PTR [rip+0x253d9]        # 0x42c308
  406f2f:	add    rbp,0x4
  406f33:	lea    rax,[rax+rdx*4]
  406f37:	mov    edx,DWORD PTR [rip+0x253f3]        # 0x42c330
  406f3d:	lea    rax,[r9+rax*8]
  406f41:	mov    r8,QWORD PTR [rax+0x50]
  406f45:	lea    rdx,[rsi+rdx*1+0xe5]
  406f4d:	call   0x403b50
  406f52:	movsxd rax,DWORD PTR [rbp+0x0]
  406f56:	cmp    eax,0x8000
  406f5b:	jne    0x406f20
  406f5d:	cmp    QWORD PTR [rdi+0x30],0x0
  406f62:	je     0x406fed
  406f68:	mov    eax,DWORD PTR [rip+0x253c2]        # 0x42c330
  406f6e:	mov    rdx,QWORD PTR [rip+0x25393]        # 0x42c308
  406f75:	lea    rcx,[rsi+rax*1+0xd9]
  406f7d:	call   0x41d8b8
  406f82:	mov    rbp,QWORD PTR [rdi+0x30]
  406f86:	test   rbp,rbp
  406f89:	je     0x406fed
  406f8b:	cmp    DWORD PTR [rbp+0x4],0x8000
  406f92:	je     0x407252
  406f98:	mov    rdx,QWORD PTR [rip+0x25369]        # 0x42c308
  406f9f:	mov    rcx,QWORD PTR [rip+0x191a2]        # 0x420148
  406fa6:	call   0x41d8b8
  406fab:	movsxd rax,DWORD PTR [rbp+0x0]
  406faf:	nop
  406fb0:	lea    rdx,[rax+rax*2]
  406fb4:	mov    rcx,QWORD PTR [rbx+0x78]
  406fb8:	add    rbp,0x4
  406fbc:	lea    rax,[rax+rdx*4]
  406fc0:	mov    edx,DWORD PTR [rip+0x2536a]        # 0x42c330
  406fc6:	lea    rax,[rcx+rax*8]
  406fca:	mov    rcx,QWORD PTR [rip+0x25337]        # 0x42c308
  406fd1:	mov    r8,QWORD PTR [rax+0x50]
  406fd5:	lea    rdx,[rsi+rdx*1+0xe5]
  406fdd:	call   0x403b50
  406fe2:	movsxd rax,DWORD PTR [rbp+0x0]
  406fe6:	cmp    eax,0x8000
  406feb:	jne    0x406fb0
  406fed:	mov    r8,QWORD PTR [rdi+0x58]
  406ff1:	test   r8,r8
  406ff4:	je     0x40700f
  406ff6:	mov    edx,DWORD PTR [rip+0x25334]        # 0x42c330
  406ffc:	mov    rcx,QWORD PTR [rip+0x25305]        # 0x42c308
  407003:	add    rdx,QWORD PTR [rip+0x19076]        # 0x420080
  40700a:	call   0x403b50
  40700f:	mov    edx,DWORD PTR [rdi+0x10]
  407012:	mov    eax,edx
  407014:	and    eax,0xf000
  407019:	shr    eax,0xc
  40701c:	cmp    eax,0x5
  40701f:	je     0x407180
  407025:	cmp    eax,0x7
  407028:	je     0x407100
  40702e:	and    dh,0x8
  407031:	jne    0x407117
  407037:	movzx  eax,WORD PTR [rdi+0x8]
  40703b:	cmp    ax,0x8000
  40703f:	je     0x40704b
  407041:	cmp    ax,WORD PTR [rdi+0x4]
  407045:	jne    0x407135
  40704b:	mov    eax,DWORD PTR [rdi+0x10]
  40704e:	test   ah,0x1
  407051:	je     0x40706d
  407053:	cmp    QWORD PTR [rbx+0x58],0x0
  407058:	je     0x4072be
  40705e:	movzx  edx,WORD PTR [rdi]
  407061:	cmp    edx,DWORD PTR [rbx+0xb4]
  407067:	jl     0x407231
  40706d:	and    eax,0xf000
  407072:	cmp    eax,0x4000
  407077:	je     0x4072a0
  40707d:	movzx  r8d,WORD PTR [rdi+0xa]
  407082:	cmp    r8w,0x1
  407087:	ja     0x4071f0
  40708d:	movzx  r8d,WORD PTR [rdi+0xc]
  407092:	cmp    r8w,0x1
  407097:	je     0x4070c3
  407099:	jb     0x407282
  40709f:	cmp    r8w,0xffff
  4070a4:	jne    0x407213
  4070aa:	mov    ecx,DWORD PTR [rip+0x25280]        # 0x42c330
  4070b0:	mov    rdx,QWORD PTR [rip+0x25251]        # 0x42c308
  4070b7:	add    rcx,QWORD PTR [rip+0x19032]        # 0x4200f0
  4070be:	call   0x41d8b8
  4070c3:	test   BYTE PTR [rbx+0x10],0x3
  4070c7:	jne    0x407163
  4070cd:	movzx  eax,WORD PTR [rdi]
  4070d0:	cmp    WORD PTR [rbx+0xae],ax
  4070d7:	jne    0x407163
  4070dd:	mov    ecx,DWORD PTR [rip+0x2524d]        # 0x42c330
  4070e3:	mov    rdx,QWORD PTR [rip+0x2521e]        # 0x42c308
  4070ea:	add    rcx,QWORD PTR [rip+0x18f87]        # 0x420078
  4070f1:	call   0x41d8b8
  4070f6:	jmp    0x407163
  4070f8:	nop    DWORD PTR [rax+rax*1+0x0]
  407100:	mov    rdx,rdi
  407103:	mov    ecx,0x1
  407108:	call   QWORD PTR [rdi+0x38]
  40710b:	mov    edx,DWORD PTR [rdi+0x10]
  40710e:	and    dh,0x8
  407111:	je     0x407037
  407117:	mov    ecx,DWORD PTR [rip+0x25213]        # 0x42c330
  40711d:	mov    rdx,QWORD PTR [rip+0x251e4]        # 0x42c308
  407124:	add    rcx,QWORD PTR [rip+0x18f6d]        # 0x420098
  40712b:	call   0x41d8b8
  407130:	jmp    0x407037
  407135:	lea    rdx,[rax+rax*2]
  407139:	mov    rcx,QWORD PTR [rip+0x251c8]        # 0x42c308
  407140:	lea    rax,[rax+rdx*4]
  407144:	mov    rdx,QWORD PTR [rbx+0x78]
  407148:	lea    rax,[rdx+rax*8]
  40714c:	mov    edx,DWORD PTR [rip+0x251de]        # 0x42c330
  407152:	add    rdx,QWORD PTR [rip+0x18f0f]        # 0x420068
  407159:	mov    r8,QWORD PTR [rax+0x50]
  40715d:	call   0x403b50
  407162:	nop
  407163:	add    rsp,0x98
  40716a:	pop    rbx
  40716b:	pop    rsi
  40716c:	pop    rdi
  40716d:	pop    rbp
  40716e:	pop    r12
  407170:	pop    r13
  407172:	pop    r14
  407174:	pop    r15
  407176:	ret    
  407177:	nop    WORD PTR [rax+rax*1+0x0]
  407180:	mov    rax,QWORD PTR [rdi+0x38]
  407184:	test   rax,rax
  407187:	je     0x40702e
  40718d:	lea    rcx,[rip+0xffffffffffffc9ec]        # 0x403b80
  407194:	cmp    rax,rcx
  407197:	je     0x40702e
  40719d:	mov    rdx,rdi
  4071a0:	mov    ecx,0x1
  4071a5:	call   rax
  4071a7:	mov    edx,DWORD PTR [rdi+0x10]
  4071aa:	jmp    0x40702e
  4071af:	nop
  4071b0:	cmp    QWORD PTR [rdi+0x30],0x0
  4071b5:	jne    0x406ec8
  4071bb:	jmp    0x406fed
  4071c0:	movsxd rax,DWORD PTR [rbp+0x0]
  4071c4:	mov    r10,QWORD PTR [rbx+0x78]
  4071c8:	mov    rcx,QWORD PTR [rip+0x25139]        # 0x42c308
  4071cf:	lea    rdx,[rax+rax*2]
  4071d3:	lea    rax,[rax+rdx*4]
  4071d7:	mov    rdx,QWORD PTR [rip+0x18fc2]        # 0x4201a0
  4071de:	lea    rax,[r10+rax*8]
  4071e2:	mov    r8,QWORD PTR [rax+0x50]
  4071e6:	call   0x403b50
  4071eb:	jmp    0x406f5d
  4071f0:	mov    edx,DWORD PTR [rip+0x2513a]        # 0x42c330
  4071f6:	movzx  r9d,WORD PTR [rdi+0xc]
  4071fb:	add    rdx,QWORD PTR [rip+0x18ede]        # 0x4200e0
  407202:	mov    rcx,QWORD PTR [rip+0x250ff]        # 0x42c308
  407209:	call   0x403b50
  40720e:	jmp    0x4070c3
  407213:	mov    edx,DWORD PTR [rip+0x25117]        # 0x42c330
  407219:	mov    rcx,QWORD PTR [rip+0x250e8]        # 0x42c308
  407220:	add    rdx,QWORD PTR [rip+0x18fa1]        # 0x4201c8
  407227:	call   0x403b50
  40722c:	jmp    0x4070c3
  407231:	mov    ecx,DWORD PTR [rip+0x250f9]        # 0x42c330
  407237:	mov    rdx,QWORD PTR [rip+0x250ca]        # 0x42c308
  40723e:	add    rcx,QWORD PTR [rip+0x18eb3]        # 0x4200f8
  407245:	call   0x41d8b8
  40724a:	mov    eax,DWORD PTR [rdi+0x10]
  40724d:	jmp    0x40706d
  407252:	movsxd rax,DWORD PTR [rbp+0x0]
  407256:	mov    r8,QWORD PTR [rbx+0x78]
  40725a:	mov    rcx,QWORD PTR [rip+0x250a7]        # 0x42c308
  407261:	lea    rdx,[rax+rax*2]
  407265:	lea    rax,[rax+rdx*4]
  407269:	mov    rdx,QWORD PTR [rip+0x18ee0]        # 0x420150
  407270:	lea    rax,[r8+rax*8]
  407274:	mov    r8,QWORD PTR [rax+0x50]
  407278:	call   0x403b50
  40727d:	jmp    0x406fed
  407282:	mov    ecx,DWORD PTR [rip+0x250a8]        # 0x42c330
  407288:	mov    rdx,QWORD PTR [rip+0x25079]        # 0x42c308
  40728f:	add    rcx,QWORD PTR [rip+0x18ea2]        # 0x420138
  407296:	call   0x41d8b8
  40729b:	jmp    0x4070c3
  4072a0:	mov    ecx,DWORD PTR [rip+0x2508a]        # 0x42c330
  4072a6:	mov    rdx,QWORD PTR [rip+0x2505b]        # 0x42c308
  4072ad:	add    rcx,QWORD PTR [rip+0x18e24]        # 0x4200d8
  4072b4:	call   0x41d8b8
  4072b9:	jmp    0x4070c3
  4072be:	cmp    QWORD PTR [rbx+0x30],0x0
  4072c3:	jne    0x40705e
  4072c9:	jmp    0x40706d
  4072ce:	mov    eax,DWORD PTR [rip+0x2505c]        # 0x42c330
  4072d4:	lea    rdx,[rip+0x1c7e5]        # 0x423ac0
  4072db:	mov    edi,DWORD PTR [rcx+0xb4]
  4072e1:	mov    rsi,QWORD PTR [rcx+0x78]
  4072e5:	mov    r8,QWORD PTR [rip+0x18ef4]        # 0x4201e0
  4072ec:	xor    r12d,r12d
  4072ef:	mov    rcx,QWORD PTR [rip+0x25012]        # 0x42c308
  4072f6:	lea    rdx,[rdx+rax*1+0xe5]
  4072fe:	call   0x403b50
  407303:	test   DWORD PTR [rsi+0x10],0x6280000
  40730a:	jne    0x407332
  40730c:	movzx  eax,BYTE PTR [rsi+0x2]
  407310:	cmp    al,0x7f
  407312:	ja     0x407322
  407314:	lea    rdx,[rip+0x1f3a5]        # 0x4266c0
  40731b:	test   BYTE PTR [rdx+rax*4+0x1],0x40
  407320:	jne    0x407332
  407322:	mov    rcx,QWORD PTR [rsi+0x50]
  407326:	call   0x41d7f8
  40732b:	cmp    r12,rax
  40732e:	cmovb  r12,rax
  407332:	sub    edi,0x1
  407335:	add    rsi,0x68
  407339:	test   edi,edi
  40733b:	jg     0x407303
  40733d:	lea    r14,[rsp+0x30]
  407342:	lea    r9d,[r12+0x4]
  407347:	lea    r8,[rip+0x1b947]        # 0x422c95
  40734e:	mov    edx,0xc
  407353:	mov    rcx,r14
  407356:	call   0x403f40
  40735b:	mov    eax,DWORD PTR [rip+0x24fcf]        # 0x42c330
  407361:	test   eax,eax
  407363:	je     0x40736e
  407365:	sub    eax,0x1
  407368:	mov    DWORD PTR [rip+0x24fc2],eax        # 0x42c330
  40736e:	mov    r15d,DWORD PTR [rbx+0xb4]
  407375:	mov    rsi,QWORD PTR [rbx+0x78]
  407379:	lea    r12,[rbx+0x10]
  40737d:	lea    r13,[rsp+0x40]
  407382:	test   DWORD PTR [rsi+0x10],0x6280000
  407389:	jne    0x407460
  40738f:	movzx  eax,BYTE PTR [rsi+0x2]
  407393:	cmp    al,0x7f
  407395:	ja     0x4073a9
  407397:	lea    rdx,[rip+0x1f322]        # 0x4266c0
  40739e:	test   BYTE PTR [rdx+rax*4+0x1],0x40
  4073a3:	jne    0x407460
  4073a9:	lea    rdx,[rsi+0x2]
  4073ad:	lea    r9,[rip+0x2506c]        # 0x42c420
  4073b4:	lea    r8,[rip+0x2505d]        # 0x42c418
  4073bb:	mov    rcx,r12
  4073be:	call   0x4053c0
  4073c3:	mov    eax,DWORD PTR [rsi+0x10]
  4073c6:	test   eax,0x10000
  4073cb:	je     0x407492
  4073d1:	mov    rdi,QWORD PTR [rip+0x25028]        # 0x42c400
  4073d8:	mov    rax,QWORD PTR [rip+0x250c1]        # 0x42c4a0
  4073df:	test   rax,rax
  4073e2:	jne    0x4073f4
  4073e4:	jmp    0x40753d
  4073e9:	nop    DWORD PTR [rax+0x0]
  4073f0:	add    rdi,0x1
  4073f4:	movzx  ecx,BYTE PTR [rdi]
  4073f7:	cmp    BYTE PTR [rax+rcx*1],0x0
  4073fb:	jne    0x4073f0
  4073fd:	test   cl,cl
  4073ff:	mov    r9,QWORD PTR [rsi+0x50]
  407403:	jne    0x40751f
  407409:	lea    r8,[rip+0x1b317]        # 0x422727
  407410:	mov    edx,0x50
  407415:	mov    rcx,r13
  407418:	call   0x403f40
  40741d:	mov    r9,QWORD PTR [rsi+0x40]
  407421:	mov    rcx,QWORD PTR [rip+0x24ee0]        # 0x42c308
  407428:	mov    r8,r13
  40742b:	mov    rdx,r14
  40742e:	call   0x403b50
  407433:	mov    eax,DWORD PTR [rsi+0x10]
  407436:	and    eax,0xf000
  40743b:	shr    eax,0xc
  40743e:	cmp    eax,0x2
  407441:	je     0x407476
  407443:	cmp    eax,0x4
  407446:	je     0x407476
  407448:	mov    r8,rbp
  40744b:	mov    rdx,rsi
  40744e:	mov    rcx,rbx
  407451:	call   0x406e90
  407456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407460:	sub    r15d,0x1
  407464:	add    rsi,0x68
  407468:	test   r15d,r15d
  40746b:	jg     0x407382
  407471:	jmp    0x407163
  407476:	movzx  eax,BYTE PTR [rip+0x24ee3]        # 0x42c360
  40747d:	cmp    QWORD PTR [rsi+0x38],0x0
  407482:	mov    edx,0x1
  407487:	cmovne eax,edx
  40748a:	mov    BYTE PTR [rip+0x24ed0],al        # 0x42c360
  407490:	jmp    0x407448
  407492:	and    eax,0xf000
  407497:	shr    eax,0xc
  40749a:	cmp    eax,0x8
  40749d:	ja     0x40754c
  4074a3:	lea    rdi,[rip+0x1b286]        # 0x422730
  4074aa:	movsxd rax,DWORD PTR [rdi+rax*4]
  4074ae:	add    rax,rdi
  4074b1:	jmp    rax
  4074b3:	mov    rdi,QWORD PTR [rip+0x24f1e]        # 0x42c3d8
  4074ba:	jmp    0x4073d8
  4074bf:	mov    rdi,QWORD PTR [rip+0x24f32]        # 0x42c3f8
  4074c6:	jmp    0x4073d8
  4074cb:	mov    rdi,QWORD PTR [rip+0x24efe]        # 0x42c3d0
  4074d2:	jmp    0x4073d8
  4074d7:	mov    rdi,QWORD PTR [rip+0x24f0a]        # 0x42c3e8
  4074de:	jmp    0x4073d8
  4074e3:	mov    rdi,QWORD PTR [rip+0x24f06]        # 0x42c3f0
  4074ea:	jmp    0x4073d8
  4074ef:	mov    rdi,QWORD PTR [rip+0x24eea]        # 0x42c3e0
  4074f6:	jmp    0x4073d8
  4074fb:	mov    rdi,QWORD PTR [rip+0x24ebe]        # 0x42c3c0
  407502:	jmp    0x4073d8
  407507:	mov    rdi,QWORD PTR [rip+0x24efa]        # 0x42c408
  40750e:	jmp    0x4073d8
  407513:	mov    rdi,QWORD PTR [rip+0x24f16]        # 0x42c430
  40751a:	jmp    0x4073d8
  40751f:	lea    r8,[rip+0x1b204]        # 0x42272a
  407526:	mov    QWORD PTR [rsp+0x20],rdi
  40752b:	mov    edx,0x50
  407530:	mov    rcx,r13
  407533:	call   0x403f40
  407538:	jmp    0x40741d
  40753d:	mov    ecx,0xc
  407542:	call   0x4054a0
  407547:	jmp    0x4073f4
  40754c:	mov    rdi,QWORD PTR [rsi+0x50]
  407550:	mov    rsi,QWORD PTR [rbx+0x28]
  407554:	mov    rbx,QWORD PTR [rip+0x18a35]        # 0x41ff90
  40755b:	call   QWORD PTR [rip+0x2842b]        # 0x42f98c
  407561:	lea    rcx,[rax+0x60]
  407565:	mov    r9,rdi
  407568:	mov    r8,rsi
  40756b:	mov    rdx,rbx
  40756e:	call   0x403b50
  407573:	mov    rcx,QWORD PTR [rip+0x18986]        # 0x41ff00
  40757a:	call   0x403fc0
  40757f:	nop
  407580:	push   r15
  407582:	push   r14
  407584:	push   r13
  407586:	push   r12
  407588:	push   rbp
  407589:	push   rdi
  40758a:	push   rsi
  40758b:	push   rbx
  40758c:	sub    rsp,0x98
  407593:	mov    rax,QWORD PTR [rcx+0x78]
  407597:	mov    r13d,DWORD PTR [rcx+0xb0]
  40759e:	xor    r15d,r15d
  4075a1:	mov    rdi,rcx
  4075a4:	mov    ebp,edx
  4075a6:	mov    QWORD PTR [rsp+0xf0],r8
  4075ae:	xor    r14d,r14d
  4075b1:	lea    rbx,[rax+0x2]
  4075b5:	lea    rax,[rcx+0x10]
  4075b9:	mov    QWORD PTR [rsp+0x38],rax
  4075be:	lea    rax,[rsp+0x40]
  4075c3:	mov    QWORD PTR [rsp+0x30],rax
  4075c8:	mov    eax,r15d
  4075cb:	mov    r15d,r13d
  4075ce:	mov    r13d,eax
  4075d1:	jmp    0x4075f3
  4075d3:	cmp    eax,0x80100
  4075d8:	je     0x4077a2
  4075de:	sub    r15d,0x1
  4075e2:	add    r13d,0x1
  4075e6:	add    rbx,0x68
  4075ea:	test   r15d,r15d
  4075ed:	jle    0x407820
  4075f3:	mov    eax,DWORD PTR [rbx+0xe]
  4075f6:	lea    rsi,[rbx-0x2]
  4075fa:	test   eax,0x6080000
  4075ff:	jne    0x4075d3
  407601:	test   eax,0x200000
  407606:	je     0x407631
  407608:	test   ebp,ebp
  40760a:	jne    0x4075de
  40760c:	mov    r9,QWORD PTR [rsp+0xf0]
  407614:	mov    r8,QWORD PTR [rbx+0x3e]
  407618:	add    r14d,0x1
  40761c:	mov    rdx,QWORD PTR [rip+0x24ded]        # 0x42c410
  407623:	mov    rcx,QWORD PTR [rip+0x24cde]        # 0x42c308
  40762a:	call   0x403b50
  40762f:	jmp    0x4075de
  407631:	mov    eax,DWORD PTR [rdi+0x10]
  407634:	and    eax,0x40000
  407639:	je     0x407651
  40763b:	movzx  edx,BYTE PTR [rbx]
  40763e:	cmp    dl,0x7f
  407641:	ja     0x4075de
  407643:	lea    rcx,[rip+0x1f076]        # 0x4266c0
  40764a:	test   BYTE PTR [rcx+rdx*4+0x1],0x40
  40764f:	je     0x4075de
  407651:	test   ebp,ebp
  407653:	sete   r12b
  407657:	test   r14d,r14d
  40765a:	jle    0x4076a0
  40765c:	test   r12b,r12b
  40765f:	je     0x4076a0
  407661:	cmp    DWORD PTR [rdi+0xb4],r13d
  407668:	je     0x407850
  40766e:	cmp    r15d,0x1
  407672:	jne    0x4076a0
  407674:	test   eax,eax
  407676:	je     0x4076a0
  407678:	mov    r9,QWORD PTR [rsp+0xf0]
  407680:	mov    r8,QWORD PTR [rip+0x18b51]        # 0x4201d8
  407687:	mov    rdx,QWORD PTR [rip+0x24d82]        # 0x42c410
  40768e:	mov    rcx,QWORD PTR [rip+0x24c73]        # 0x42c308
  407695:	call   0x403b50
  40769a:	nop    WORD PTR [rax+rax*1+0x0]
  4076a0:	mov    rcx,QWORD PTR [rsp+0x38]
  4076a5:	lea    r9,[rip+0x24d74]        # 0x42c420
  4076ac:	lea    r8,[rip+0x24d65]        # 0x42c418
  4076b3:	mov    rdx,rbx
  4076b6:	call   0x4053c0
  4076bb:	mov    eax,DWORD PTR [rbx+0xe]
  4076be:	mov    r9,QWORD PTR [rip+0x24d3b]        # 0x42c400
  4076c5:	test   eax,0x10000
  4076ca:	jne    0x4076f4
  4076cc:	and    eax,0xf000
  4076d1:	shr    eax,0xc
  4076d4:	cmp    eax,0x8
  4076d7:	ja     0x407937
  4076dd:	lea    rdx,[rip+0x1b07c]        # 0x422760
  4076e4:	movsxd rax,DWORD PTR [rdx+rax*4]
  4076e8:	add    rdx,rax
  4076eb:	jmp    rdx
  4076ed:	mov    r9,QWORD PTR [rip+0x24d3c]        # 0x42c430
  4076f4:	mov    r8,QWORD PTR [rip+0x24d2d]        # 0x42c428
  4076fb:	lea    rax,[rip+0x1c409]        # 0x423b0b
  407702:	cmp    r8,rax
  407705:	je     0x4078e1
  40770b:	lea    rax,[rip+0x1c3fb]        # 0x423b0d
  407712:	cmp    r8,rax
  407715:	je     0x407910
  40771b:	cmp    WORD PTR [rbx+0x8],0x0
  407720:	mov    rax,QWORD PTR [rip+0x24cd9]        # 0x42c400
  407727:	mov    edx,0x50
  40772c:	cmovne rax,QWORD PTR [rip+0x24c94]        # 0x42c3c8
  407734:	mov    rcx,QWORD PTR [rsp+0x30]
  407739:	mov    QWORD PTR [rsp+0x28],rax
  40773e:	mov    rax,QWORD PTR [rbx+0x4e]
  407742:	mov    QWORD PTR [rsp+0x20],rax
  407747:	call   0x403f40
  40774c:	mov    r9,QWORD PTR [rbx+0x3e]
  407750:	mov    r8,QWORD PTR [rsp+0x30]
  407755:	lea    rdx,[rip+0x24c24]        # 0x42c380
  40775c:	mov    rcx,QWORD PTR [rip+0x24ba5]        # 0x42c308
  407763:	call   0x403b50
  407768:	mov    eax,DWORD PTR [rbx+0xe]
  40776b:	and    eax,0xf000
  407770:	shr    eax,0xc
  407773:	cmp    eax,0x2
  407776:	je     0x407800
  40777c:	cmp    eax,0x4
  40777f:	je     0x407800
  407781:	test   r12b,r12b
  407784:	je     0x4075de
  40778a:	mov    r8,QWORD PTR [rsp+0xf0]
  407792:	mov    rdx,rsi
  407795:	mov    rcx,rdi
  407798:	call   0x406e90
  40779d:	jmp    0x4075de
  4077a2:	cmp    QWORD PTR [rbx+0x4e],0x0
  4077a7:	je     0x4075de
  4077ad:	test   ebp,ebp
  4077af:	jne    0x4075de
  4077b5:	mov    rsi,QWORD PTR [rbx+0x3e]
  4077b9:	mov    rcx,QWORD PTR [rsp+0x38]
  4077be:	lea    r9,[rip+0x24c5b]        # 0x42c420
  4077c5:	lea    r8,[rip+0x24c4c]        # 0x42c418
  4077cc:	mov    rdx,rbx
  4077cf:	test   rsi,rsi
  4077d2:	cmove  rsi,QWORD PTR [rip+0x188b6]        # 0x420090
  4077da:	call   0x4053c0
  4077df:	mov    r8,QWORD PTR [rbx+0x4e]
  4077e3:	mov    rdx,QWORD PTR [rip+0x1889e]        # 0x420088
  4077ea:	mov    rcx,QWORD PTR [rip+0x24b17]        # 0x42c308
  4077f1:	mov    r9,rsi
  4077f4:	call   0x403b50
  4077f9:	jmp    0x4075de
  4077fe:	xchg   ax,ax
  407800:	movzx  eax,BYTE PTR [rip+0x24b59]        # 0x42c360
  407807:	cmp    QWORD PTR [rbx+0x36],0x0
  40780c:	mov    edx,0x1
  407811:	cmovne eax,edx
  407814:	mov    BYTE PTR [rip+0x24b46],al        # 0x42c360
  40781a:	jmp    0x407781
  40781f:	nop
  407820:	mov    rdx,QWORD PTR [rip+0x24ae1]        # 0x42c308
  407827:	mov    ecx,0xa
  40782c:	call   0x41d8c0
  407831:	nop
  407832:	add    rsp,0x98
  407839:	pop    rbx
  40783a:	pop    rsi
  40783b:	pop    rdi
  40783c:	pop    rbp
  40783d:	pop    r12
  40783f:	pop    r13
  407841:	pop    r14
  407843:	pop    r15
  407845:	ret    
  407846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407850:	test   BYTE PTR [rbx-0x58],0x20
  407854:	jne    0x4076a0
  40785a:	mov    r9,QWORD PTR [rsp+0xf0]
  407862:	mov    r8,QWORD PTR [rip+0x18807]        # 0x420070
  407869:	mov    rdx,QWORD PTR [rip+0x24ba0]        # 0x42c410
  407870:	mov    rcx,QWORD PTR [rip+0x24a91]        # 0x42c308
  407877:	call   0x403b50
  40787c:	jmp    0x4076a0
  407881:	mov    r9,QWORD PTR [rip+0x24b50]        # 0x42c3d8
  407888:	jmp    0x4076f4
  40788d:	mov    r9,QWORD PTR [rip+0x24b74]        # 0x42c408
  407894:	jmp    0x4076f4
  407899:	mov    r9,QWORD PTR [rip+0x24b20]        # 0x42c3c0
  4078a0:	jmp    0x4076f4
  4078a5:	mov    r9,QWORD PTR [rip+0x24b34]        # 0x42c3e0
  4078ac:	jmp    0x4076f4
  4078b1:	mov    r9,QWORD PTR [rip+0x24b38]        # 0x42c3f0
  4078b8:	jmp    0x4076f4
  4078bd:	mov    r9,QWORD PTR [rip+0x24b24]        # 0x42c3e8
  4078c4:	jmp    0x4076f4
  4078c9:	mov    r9,QWORD PTR [rip+0x24b00]        # 0x42c3d0
  4078d0:	jmp    0x4076f4
  4078d5:	mov    r9,QWORD PTR [rip+0x24b1c]        # 0x42c3f8
  4078dc:	jmp    0x4076f4
  4078e1:	mov    rax,QWORD PTR [rbx+0x4e]
  4078e5:	mov    rcx,QWORD PTR [rsp+0x30]
  4078ea:	lea    r8,[rip+0x1ae63]        # 0x422754
  4078f1:	mov    QWORD PTR [rsp+0x20],r9
  4078f6:	mov    edx,0x50
  4078fb:	mov    r9,rax
  4078fe:	call   0x403f40
  407903:	jmp    0x40774c
  407908:	nop    DWORD PTR [rax+rax*1+0x0]
  407910:	mov    rax,QWORD PTR [rbx+0x4e]
  407914:	mov    rcx,QWORD PTR [rsp+0x30]
  407919:	lea    r8,[rip+0x1ae3b]        # 0x42275b
  407920:	mov    QWORD PTR [rsp+0x20],r9
  407925:	mov    edx,0x50
  40792a:	mov    r9,rax
  40792d:	call   0x403f40
  407932:	jmp    0x40774c
  407937:	mov    rbp,QWORD PTR [rsi+0x50]
  40793b:	mov    rbx,QWORD PTR [rip+0x1864e]        # 0x41ff90
  407942:	mov    rsi,QWORD PTR [rdi+0x28]
  407946:	call   QWORD PTR [rip+0x28040]        # 0x42f98c
  40794c:	lea    rcx,[rax+0x60]
  407950:	mov    r9,rbp
  407953:	mov    rdx,rbx
  407956:	mov    r8,rsi
  407959:	call   0x403b50
  40795e:	mov    ecx,0x46
  407963:	call   0x403f90
  407968:	nop
  407969:	nop    DWORD PTR [rax+0x0]
  407970:	push   r15
  407972:	push   r14
  407974:	push   r13
  407976:	push   r12
  407978:	push   rbp
  407979:	push   rdi
  40797a:	push   rsi
  40797b:	push   rbx
  40797c:	sub    rsp,0x38
  407980:	lea    r13,[rip+0x1bef9]        # 0x423880
  407987:	lea    r12,[rip+0x1adf6]        # 0x422784
  40798e:	mov    rbx,rcx
  407991:	mov    QWORD PTR [rsp+0x88],rdx
  407999:	mov    r14,r8
  40799c:	mov    rax,QWORD PTR [rip+0x24b45]        # 0x42c4e8
  4079a3:	test   rax,rax
  4079a6:	je     0x407d55
  4079ac:	movzx  edx,BYTE PTR [rbx]
  4079af:	cmp    BYTE PTR [rax+rdx*1],0x0
  4079b3:	mov    rcx,rdx
  4079b6:	je     0x407a58
  4079bc:	mov    rsi,rbx
  4079bf:	nop
  4079c0:	add    rsi,0x1
  4079c4:	movzx  edx,BYTE PTR [rsi]
  4079c7:	cmp    BYTE PTR [rax+rdx*1],0x0
  4079cb:	mov    rdi,rdx
  4079ce:	jne    0x4079c0
  4079d0:	mov    r10,rsi
  4079d3:	mov    rbp,rsi
  4079d6:	sub    r10,rbx
  4079d9:	lea    eax,[r10-0x4]
  4079dd:	cmp    eax,0x4
  4079e0:	ja     0x407a58
  4079e2:	lea    rdx,[rip+0x1b4d7]        # 0x422ec0
  4079e9:	movzx  eax,cl
  4079ec:	movzx  r9d,BYTE PTR [rdx+rax*1]
  4079f1:	add    r9d,r10d
  4079f4:	cmp    r9d,0x9
  4079f8:	ja     0x407a58
  4079fa:	movsxd r9,r9d
  4079fd:	shl    r9,0x4
  407a01:	lea    r15,[r13+r9*1+0x0]
  407a06:	mov    r11,QWORD PTR [r15]
  407a09:	cmp    cl,BYTE PTR [r11]
  407a0c:	jne    0x407a58
  407a0e:	lea    rdx,[r11+0x1]
  407a12:	lea    rcx,[rbx+0x1]
  407a16:	lea    r8d,[r10-0x1]
  407a1a:	mov    QWORD PTR [rsp+0x28],r11
  407a1f:	mov    QWORD PTR [rsp+0x20],r10
  407a24:	call   0x41d7f0
  407a29:	test   eax,eax
  407a2b:	jne    0x407a58
  407a2d:	mov    r10,QWORD PTR [rsp+0x20]
  407a32:	mov    r11,QWORD PTR [rsp+0x28]
  407a37:	mov    r10d,r10d
  407a3a:	cmp    BYTE PTR [r11+r10*1],0x0
  407a3f:	jne    0x407a58
  407a41:	cmp    DWORD PTR [r15+0x8],0x6
  407a46:	ja     0x407a58
  407a48:	mov    eax,DWORD PTR [r15+0x8]
  407a4c:	movsxd rax,DWORD PTR [r12+rax*4]
  407a50:	add    rax,r12
  407a53:	jmp    rax
  407a55:	mov    rbx,rsi
  407a58:	mov    rax,QWORD PTR [rip+0x24ae9]        # 0x42c548
  407a5f:	mov    DWORD PTR [r14],0x0
  407a66:	test   rax,rax
  407a69:	jne    0x407a8a
  407a6b:	mov    ecx,0x21
  407a70:	call   0x4054a0
  407a75:	jmp    0x407a8a
  407a77:	nop    WORD PTR [rax+rax*1+0x0]
  407a80:	cmp    BYTE PTR [rax+rdx*1],0x0
  407a84:	jne    0x407aab
  407a86:	add    rbx,0x1
  407a8a:	movzx  edx,BYTE PTR [rbx]
  407a8d:	test   dl,dl
  407a8f:	jne    0x407a80
  407a91:	xor    eax,eax
  407a93:	add    rsp,0x38
  407a97:	pop    rbx
  407a98:	pop    rsi
  407a99:	pop    rdi
  407a9a:	pop    rbp
  407a9b:	pop    r12
  407a9d:	pop    r13
  407a9f:	pop    r14
  407aa1:	pop    r15
  407aa3:	ret    
  407aa4:	mov    DWORD PTR [r14],0x0
  407aab:	mov    rax,rbx
  407aae:	jmp    0x407a93
  407ab0:	cmp    dil,0x7f
  407ab4:	ja     0x407a55
  407ab6:	lea    rax,[rip+0x1ec03]        # 0x4266c0
  407abd:	test   DWORD PTR [rax+rdi*4],0x1000c01
  407ac4:	je     0x407a55
  407ac6:	mov    rax,QWORD PTR [rsp+0x88]
  407ace:	mov    rbx,rsi
  407ad1:	mov    DWORD PTR [rax],0x2
  407ad7:	mov    rax,QWORD PTR [rip+0x249c2]        # 0x42c4a0
  407ade:	test   rax,rax
  407ae1:	jne    0x407af4
  407ae3:	jmp    0x407d64
  407ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  407af0:	add    rbx,0x1
  407af4:	movzx  ecx,BYTE PTR [rbx]
  407af7:	cmp    BYTE PTR [rax+rcx*1],0x0
  407afb:	jne    0x407af0
  407afd:	cmp    cl,0x2f
  407b00:	je     0x407aa4
  407b02:	cmp    cl,0x3e
  407b05:	je     0x407aab
  407b07:	cmp    cl,0x7f
  407b0a:	ja     0x407a91
  407b0c:	lea    rax,[rip+0x1ebad]        # 0x4266c0
  407b13:	test   BYTE PTR [rax+rcx*4+0x2],0x8
  407b18:	jne    0x40799c
  407b1e:	jmp    0x407a91
  407b23:	cmp    dil,0x3d
  407b27:	lea    rbp,[rsi+0x1]
  407b2b:	je     0x407c54
  407b31:	xor    edi,edi
  407b33:	mov    rax,QWORD PTR [rip+0x24a0e]        # 0x42c548
  407b3a:	add    rbp,rdi
  407b3d:	mov    DWORD PTR [r14],0x0
  407b44:	test   rax,rax
  407b47:	je     0x407dd9
  407b4d:	movzx  edx,BYTE PTR [rbp+0x0]
  407b51:	test   dl,dl
  407b53:	jne    0x407b70
  407b55:	jmp    0x407a91
  407b5a:	nop    WORD PTR [rax+rax*1+0x0]
  407b60:	add    rbp,0x1
  407b64:	movzx  edx,BYTE PTR [rbp+0x0]
  407b68:	test   dl,dl
  407b6a:	je     0x407a91
  407b70:	cmp    BYTE PTR [rax+rdx*1],0x0
  407b74:	je     0x407b60
  407b76:	mov    rbx,rbp
  407b79:	jmp    0x407ad7
  407b7e:	xchg   ax,ax
  407b80:	mov    rax,QWORD PTR [rip+0x249c1]        # 0x42c548
  407b87:	test   rax,rax
  407b8a:	je     0x407dca
  407b90:	movzx  edx,BYTE PTR [rsi]
  407b93:	test   dl,dl
  407b95:	jne    0x407bb0
  407b97:	jmp    0x407a91
  407b9c:	nop    DWORD PTR [rax+0x0]
  407ba0:	add    rbp,0x1
  407ba4:	movzx  edx,BYTE PTR [rbp+0x0]
  407ba8:	test   dl,dl
  407baa:	je     0x407a91
  407bb0:	cmp    BYTE PTR [rax+rdx*1],0x0
  407bb4:	je     0x407ba0
  407bb6:	jmp    0x407b76
  407bb8:	mov    rax,QWORD PTR [rip+0x24989]        # 0x42c548
  407bbf:	test   rax,rax
  407bc2:	je     0x407dbb
  407bc8:	movzx  edx,BYTE PTR [rsi]
  407bcb:	test   dl,dl
  407bcd:	jne    0x407be4
  407bcf:	jmp    0x407a91
  407bd4:	add    rbp,0x1
  407bd8:	movzx  edx,BYTE PTR [rbp+0x0]
  407bdc:	test   dl,dl
  407bde:	je     0x407a91
  407be4:	cmp    BYTE PTR [rax+rdx*1],0x0
  407be8:	je     0x407bd4
  407bea:	jmp    0x407b76
  407bec:	cmp    dil,0x7f
  407bf0:	ja     0x407a55
  407bf6:	lea    rax,[rip+0x1eac3]        # 0x4266c0
  407bfd:	test   DWORD PTR [rax+rdi*4],0x1000c01
  407c04:	je     0x407a55
  407c0a:	mov    rax,QWORD PTR [rsp+0x88]
  407c12:	mov    rbx,rsi
  407c15:	mov    DWORD PTR [rax],0x0
  407c1b:	jmp    0x407ad7
  407c20:	cmp    dil,0x7f
  407c24:	ja     0x407a55
  407c2a:	lea    rax,[rip+0x1ea8f]        # 0x4266c0
  407c31:	test   DWORD PTR [rax+rdi*4],0x1000c01
  407c38:	je     0x407a55
  407c3e:	mov    rax,QWORD PTR [rsp+0x88]
  407c46:	mov    rbx,rsi
  407c49:	mov    DWORD PTR [rax],0x1
  407c4f:	jmp    0x407ad7
  407c54:	mov    rax,QWORD PTR [rip+0x248bd]        # 0x42c518
  407c5b:	test   rax,rax
  407c5e:	je     0x407de8
  407c64:	movzx  edx,BYTE PTR [rsi+0x1]
  407c68:	cmp    BYTE PTR [rax+rdx*1],0x0
  407c6c:	mov    r8,rdx
  407c6f:	je     0x407b31
  407c75:	mov    rbx,rbp
  407c78:	nop    DWORD PTR [rax+rax*1+0x0]
  407c80:	add    rbx,0x1
  407c84:	movzx  ecx,BYTE PTR [rbx]
  407c87:	cmp    BYTE PTR [rax+rcx*1],0x0
  407c8b:	jne    0x407c80
  407c8d:	mov    rdi,rbx
  407c90:	sub    rdi,rbp
  407c93:	je     0x407b31
  407c99:	cmp    cl,0x7f
  407c9c:	ja     0x407b33
  407ca2:	lea    rax,[rip+0x1ea17]        # 0x4266c0
  407ca9:	test   DWORD PTR [rax+rcx*4],0x1000c01
  407cb0:	je     0x407b33
  407cb6:	lea    eax,[rdi-0x3]
  407cb9:	mov    r11d,edi
  407cbc:	cmp    eax,0xb
  407cbf:	ja     0x407b33
  407cc5:	lea    rdx,[rip+0x1b2f4]        # 0x422fc0
  407ccc:	movzx  eax,r8b
  407cd0:	movzx  eax,BYTE PTR [rdx+rax*1]
  407cd4:	add    eax,edi
  407cd6:	cmp    eax,0x11
  407cd9:	ja     0x407b33
  407cdf:	movsxd r9,eax
  407ce2:	lea    rax,[rip+0x1bc97]        # 0x423980
  407ce9:	shl    r9,0x4
  407ced:	add    r9,rax
  407cf0:	mov    r10,QWORD PTR [r9]
  407cf3:	mov    QWORD PTR [rsp+0x28],r9
  407cf8:	cmp    BYTE PTR [r10],r8b
  407cfb:	jne    0x407b33
  407d01:	lea    rdx,[r10+0x1]
  407d05:	lea    rcx,[rsi+0x2]
  407d09:	lea    r8d,[r11-0x1]
  407d0d:	mov    QWORD PTR [rsp+0x20],r10
  407d12:	call   0x41d7f0
  407d17:	test   eax,eax
  407d19:	jne    0x407b33
  407d1f:	mov    r10,QWORD PTR [rsp+0x20]
  407d24:	mov    eax,edi
  407d26:	cmp    BYTE PTR [r10+rax*1],0x0
  407d2b:	jne    0x407b33
  407d31:	mov    r9,QWORD PTR [rsp+0x28]
  407d36:	cmp    DWORD PTR [r9+0x8],0x9
  407d3b:	ja     0x407b33
  407d41:	mov    edx,DWORD PTR [r9+0x8]
  407d45:	lea    rax,[rip+0x1aa54]        # 0x4227a0
  407d4c:	movsxd rdx,DWORD PTR [rax+rdx*4]
  407d50:	add    rax,rdx
  407d53:	jmp    rax
  407d55:	mov    ecx,0x15
  407d5a:	call   0x4054a0
  407d5f:	jmp    0x4079ac
  407d64:	mov    ecx,0xc
  407d69:	call   0x4054a0
  407d6e:	jmp    0x407af4
  407d73:	mov    DWORD PTR [r14],0x6
  407d7a:	jmp    0x407ad7
  407d7f:	mov    DWORD PTR [r14],0x4
  407d86:	jmp    0x407ad7
  407d8b:	mov    DWORD PTR [r14],0x2
  407d92:	jmp    0x407ad7
  407d97:	mov    DWORD PTR [r14],0x3
  407d9e:	jmp    0x407ad7
  407da3:	mov    DWORD PTR [r14],0x5
  407daa:	jmp    0x407ad7
  407daf:	mov    DWORD PTR [r14],0x1
  407db6:	jmp    0x407ad7
  407dbb:	mov    ecx,0x21
  407dc0:	call   0x4054a0
  407dc5:	jmp    0x407bc8
  407dca:	mov    ecx,0x21
  407dcf:	call   0x4054a0
  407dd4:	jmp    0x407b90
  407dd9:	mov    ecx,0x21
  407dde:	call   0x4054a0
  407de3:	jmp    0x407b4d
  407de8:	mov    ecx,0x1b
  407ded:	call   0x4054a0
  407df2:	jmp    0x407c64
  407df7:	nop    WORD PTR [rax+rax*1+0x0]
  407e00:	push   r15
  407e02:	push   r14
  407e04:	push   r13
  407e06:	push   r12
  407e08:	push   rbp
  407e09:	push   rdi
  407e0a:	push   rsi
  407e0b:	push   rbx
  407e0c:	sub    rsp,0x48
  407e10:	mov    rsi,QWORD PTR [rip+0x27ced]        # 0x42fb04
  407e17:	mov    rbx,rcx
  407e1a:	jmp    0x407e24
  407e1c:	nop    DWORD PTR [rax+0x0]
  407e20:	add    rbx,0x1
  407e24:	movzx  ebp,BYTE PTR [rbx]
  407e27:	mov    ecx,ebp
  407e29:	call   rsi
  407e2b:	test   eax,eax
  407e2d:	jne    0x407e20
  407e2f:	cmp    bpl,0x50
  407e33:	je     0x407fc0
  407e39:	cmp    bpl,0x54
  407e3d:	je     0x407f64
  407e43:	sub    ebp,0x30
  407e46:	cmp    ebp,0x9
  407e49:	ja     0x408463
  407e4f:	mov    rbp,QWORD PTR [rip+0x27b86]        # 0x42f9dc
  407e56:	lea    r13,[rsp+0x30]
  407e5b:	mov    QWORD PTR [rsp+0x30],rbx
  407e60:	xor    edi,edi
  407e62:	xor    r12d,r12d
  407e65:	call   rbp
  407e67:	mov    rcx,QWORD PTR [rsp+0x30]
  407e6c:	mov    r8d,0xa
  407e72:	mov    rdx,r13
  407e75:	mov    DWORD PTR [rax],0x0
  407e7b:	call   0x41d7c8
  407e80:	movsxd r14,eax
  407e83:	call   rbp
  407e85:	mov    ecx,DWORD PTR [rax]
  407e87:	test   ecx,ecx
  407e89:	jne    0x407f53
  407e8f:	mov    rbx,QWORD PTR [rsp+0x30]
  407e94:	movzx  r15d,BYTE PTR [rbx]
  407e98:	cmp    r15b,0x3a
  407e9c:	jne    0x407eac
  407e9e:	jmp    0x4082eb
  407ea3:	mov    QWORD PTR [rsp+0x30],rbx
  407ea8:	movzx  r15d,BYTE PTR [rbx]
  407eac:	add    rbx,0x1
  407eb0:	movzx  ecx,r15b
  407eb4:	call   rsi
  407eb6:	test   eax,eax
  407eb8:	jne    0x407ea3
  407eba:	cmp    r15b,0x59
  407ebe:	je     0x40814b
  407ec4:	jle    0x407f80
  407eca:	cmp    r15b,0x6d
  407ece:	je     0x40817d
  407ed4:	jg     0x4080f0
  407eda:	cmp    r15b,0x64
  407ede:	je     0x408162
  407ee4:	cmp    r15b,0x68
  407ee8:	jne    0x407f53
  407eea:	cmp    r12d,0x4
  407eee:	ja     0x407f53
  407ef0:	mov    r8d,0xe10
  407ef6:	mov    r12d,0x5
  407efc:	nop    DWORD PTR [rax+0x0]
  407f00:	mov    rcx,rdi
  407f03:	mov    rdx,r14
  407f06:	call   0x404b10
  407f0b:	mov    rdi,rax
  407f0e:	mov    rax,QWORD PTR [rsp+0x30]
  407f13:	lea    rbx,[rax+0x1]
  407f17:	mov    QWORD PTR [rsp+0x30],rbx
  407f1c:	jmp    0x407f25
  407f1e:	xchg   ax,ax
  407f20:	mov    QWORD PTR [rsp+0x30],rbx
  407f25:	movzx  r14d,BYTE PTR [rbx]
  407f29:	add    rbx,0x1
  407f2d:	mov    ecx,r14d
  407f30:	call   rsi
  407f32:	test   eax,eax
  407f34:	jne    0x407f20
  407f36:	test   r14b,r14b
  407f39:	je     0x40845b
  407f3f:	sub    r14d,0x30
  407f43:	cmp    r14d,0x9
  407f47:	ja     0x407f53
  407f49:	cmp    r12d,0x7
  407f4d:	jne    0x407e65
  407f53:	call   rbp
  407f55:	mov    DWORD PTR [rax],0x16
  407f5b:	mov    rax,0xffffffffffffffff
  407f62:	jmp    0x407f6d
  407f64:	lea    rcx,[rbx+0x1]
  407f68:	call   0x404c70
  407f6d:	add    rsp,0x48
  407f71:	pop    rbx
  407f72:	pop    rsi
  407f73:	pop    rdi
  407f74:	pop    rbp
  407f75:	pop    r12
  407f77:	pop    r13
  407f79:	pop    r14
  407f7b:	pop    r15
  407f7d:	ret    
  407f7e:	xchg   ax,ax
  407f80:	cmp    r15b,0x44
  407f84:	je     0x408162
  407f8a:	jle    0x408122
  407f90:	cmp    r15b,0x4d
  407f94:	je     0x408107
  407f9a:	cmp    r15b,0x57
  407f9e:	jne    0x407f53
  407fa0:	cmp    r12d,0x2
  407fa4:	ja     0x407f53
  407fa6:	mov    r8d,0x93a80
  407fac:	mov    r12d,0x3
  407fb2:	jmp    0x407f00
  407fb7:	nop    WORD PTR [rax+rax*1+0x0]
  407fc0:	lea    rcx,[rbx+0x1]
  407fc4:	call   0x41d768
  407fc9:	test   rax,rax
  407fcc:	mov    r13,rax
  407fcf:	je     0x408496
  407fd5:	mov    edx,0x54
  407fda:	mov    rcx,rax
  407fdd:	call   0x41d820
  407fe2:	test   rax,rax
  407fe5:	mov    r12,rax
  407fe8:	je     0x4082e0
  407fee:	lea    rdi,[rax+0x1]
  407ff2:	mov    rcx,r13
  407ff5:	mov    BYTE PTR [rax],0x0
  407ff8:	call   0x403af0
  407ffd:	mov    rcx,rdi
  408000:	mov    rbx,rax
  408003:	call   0x403af0
  408008:	test   rax,rax
  40800b:	mov    r12,rax
  40800e:	setne  r14b
  408012:	mov    edx,0x2d
  408017:	mov    rcx,rbx
  40801a:	call   0x41d820
  40801f:	test   rax,rax
  408022:	je     0x408198
  408028:	lea    rsi,[rsp+0x20]
  40802d:	mov    r8,rax
  408030:	xor    ecx,ecx
  408032:	mov    r9d,0x1e13380
  408038:	mov    QWORD PTR [rsp+0x20],rbx
  40803d:	mov    rdx,rsi
  408040:	call   0x404ba0
  408045:	mov    rbx,rax
  408048:	mov    rax,QWORD PTR [rsp+0x20]
  40804d:	mov    edx,0x2d
  408052:	lea    rcx,[rax+0x1]
  408056:	mov    QWORD PTR [rsp+0x20],rcx
  40805b:	call   0x41d820
  408060:	test   rax,rax
  408063:	mov    r8,rax
  408066:	je     0x40847b
  40806c:	mov    r9d,0x278d00
  408072:	mov    rdx,rsi
  408075:	mov    rcx,rbx
  408078:	call   0x404ba0
  40807d:	mov    rdi,rax
  408080:	mov    rax,QWORD PTR [rsp+0x20]
  408085:	lea    rbx,[rax+0x1]
  408089:	mov    rcx,rbx
  40808c:	mov    QWORD PTR [rsp+0x20],rbx
  408091:	call   0x41d7f8
  408096:	lea    r8,[rbx+rax*1]
  40809a:	mov    rcx,rdi
  40809d:	mov    r9d,0x15180
  4080a3:	mov    rdx,rsi
  4080a6:	call   0x404ba0
  4080ab:	mov    rbp,QWORD PTR [rip+0x2792a]        # 0x42f9dc
  4080b2:	mov    rdi,rax
  4080b5:	call   rbp
  4080b7:	mov    r8d,DWORD PTR [rax]
  4080ba:	test   r8d,r8d
  4080bd:	jne    0x4080e0
  4080bf:	test   r14b,r14b
  4080c2:	je     0x4080e0
  4080c4:	mov    rcx,r12
  4080c7:	call   0x404c70
  4080cc:	mov    rcx,rdi
  4080cf:	mov    r8d,0x1
  4080d5:	mov    rdx,rax
  4080d8:	call   0x404b10
  4080dd:	mov    rdi,rax
  4080e0:	mov    rcx,r13
  4080e3:	call   0x41d8a8
  4080e8:	mov    rax,rdi
  4080eb:	jmp    0x407f6d
  4080f0:	cmp    r15b,0x73
  4080f4:	jne    0x408141
  4080f6:	mov    r8d,0x1
  4080fc:	mov    r12d,0x7
  408102:	jmp    0x407f00
  408107:	cmp    r12d,0x1
  40810b:	ja     0x407f53
  408111:	mov    r8d,0x278d00
  408117:	mov    r12d,0x2
  40811d:	jmp    0x407f00
  408122:	test   r15b,r15b
  408125:	jne    0x407f53
  40812b:	mov    r8d,0x1
  408131:	mov    rdx,r14
  408134:	mov    rcx,rdi
  408137:	call   0x404b10
  40813c:	jmp    0x407f6d
  408141:	cmp    r15b,0x79
  408145:	jne    0x407f53
  40814b:	test   r12d,r12d
  40814e:	jne    0x407f53
  408154:	mov    r8d,0x1e13380
  40815a:	mov    r12b,0x1
  40815d:	jmp    0x407f00
  408162:	cmp    r12d,0x3
  408166:	ja     0x407f53
  40816c:	mov    r8d,0x15180
  408172:	mov    r12d,0x4
  408178:	jmp    0x407f00
  40817d:	cmp    r12d,0x6
  408181:	je     0x407f53
  408187:	mov    r8d,0x3c
  40818d:	mov    r12d,0x6
  408193:	jmp    0x407f00
  408198:	lea    rdx,[rip+0x1a629]        # 0x4227c8
  40819f:	mov    rcx,rbx
  4081a2:	call   0x41d7e0
  4081a7:	test   rax,rax
  4081aa:	je     0x4083b9
  4081b0:	mov    edx,0x59
  4081b5:	mov    rcx,rbx
  4081b8:	mov    QWORD PTR [rsp+0x28],rbx
  4081bd:	xor    edi,edi
  4081bf:	call   0x41d820
  4081c4:	test   rax,rax
  4081c7:	je     0x4081ef
  4081c9:	lea    rdx,[rsp+0x28]
  4081ce:	mov    r9d,0x1e13380
  4081d4:	mov    r8,rax
  4081d7:	xor    ecx,ecx
  4081d9:	call   0x404ba0
  4081de:	mov    rdi,rax
  4081e1:	mov    rax,QWORD PTR [rsp+0x28]
  4081e6:	lea    rbx,[rax+0x1]
  4081ea:	mov    QWORD PTR [rsp+0x28],rbx
  4081ef:	mov    edx,0x4d
  4081f4:	mov    rcx,rbx
  4081f7:	call   0x41d820
  4081fc:	test   rax,rax
  4081ff:	je     0x408228
  408201:	lea    rdx,[rsp+0x28]
  408206:	mov    rcx,rdi
  408209:	mov    r9d,0x278d00
  40820f:	mov    r8,rax
  408212:	call   0x404ba0
  408217:	mov    rdi,rax
  40821a:	mov    rax,QWORD PTR [rsp+0x28]
  40821f:	lea    rbx,[rax+0x1]
  408223:	mov    QWORD PTR [rsp+0x28],rbx
  408228:	mov    edx,0x57
  40822d:	mov    rcx,rbx
  408230:	call   0x41d820
  408235:	test   rax,rax
  408238:	je     0x408261
  40823a:	lea    rdx,[rsp+0x28]
  40823f:	mov    rcx,rdi
  408242:	mov    r9d,0x93a80
  408248:	mov    r8,rax
  40824b:	call   0x404ba0
  408250:	mov    rdi,rax
  408253:	mov    rax,QWORD PTR [rsp+0x28]
  408258:	lea    rbx,[rax+0x1]
  40825c:	mov    QWORD PTR [rsp+0x28],rbx
  408261:	mov    edx,0x44
  408266:	mov    rcx,rbx
  408269:	call   0x41d820
  40826e:	test   rax,rax
  408271:	je     0x4082a5
  408273:	lea    rdx,[rsp+0x28]
  408278:	mov    rcx,rdi
  40827b:	mov    r9d,0x15180
  408281:	mov    r8,rax
  408284:	call   0x404ba0
  408289:	mov    rdi,rax
  40828c:	mov    rax,QWORD PTR [rsp+0x28]
  408291:	lea    rbx,[rax+0x1]
  408295:	mov    QWORD PTR [rsp+0x28],rbx
  40829a:	jmp    0x4082a5
  40829c:	nop    DWORD PTR [rax+0x0]
  4082a0:	mov    QWORD PTR [rsp+0x28],rbx
  4082a5:	movzx  ecx,BYTE PTR [rbx]
  4082a8:	add    rbx,0x1
  4082ac:	mov    ebp,ecx
  4082ae:	call   rsi
  4082b0:	test   eax,eax
  4082b2:	jne    0x4082a0
  4082b4:	test   bpl,bpl
  4082b7:	mov    rbp,QWORD PTR [rip+0x2771e]        # 0x42f9dc
  4082be:	je     0x4080b5
  4082c4:	call   rbp
  4082c6:	mov    rdi,0xffffffffffffffff
  4082cd:	mov    DWORD PTR [rax],0x16
  4082d3:	jmp    0x4080b5
  4082d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4082e0:	mov    rbx,r13
  4082e3:	xor    r14d,r14d
  4082e6:	jmp    0x408012
  4082eb:	cmp    r12d,0x6
  4082ef:	je     0x407f53
  4082f5:	lea    r15,[rsp+0x38]
  4082fa:	mov    QWORD PTR [rsp+0x38],rbx
  4082ff:	mov    r13d,0x3
  408305:	call   rbp
  408307:	mov    DWORD PTR [rax],0x0
  40830d:	mov    rbx,QWORD PTR [rsp+0x38]
  408312:	movzx  eax,BYTE PTR [rbx]
  408315:	cmp    al,0x3a
  408317:	jne    0x408370
  408319:	sub    r13d,0x1
  40831d:	je     0x408370
  40831f:	lea    rcx,[rbx+0x1]
  408323:	mov    rdx,r15
  408326:	mov    r8d,0xa
  40832c:	call   0x41d7c0
  408331:	mov    ebx,eax
  408333:	call   rbp
  408335:	mov    edx,DWORD PTR [rax]
  408337:	test   edx,edx
  408339:	jne    0x408356
  40833b:	mov    rdx,r14
  40833e:	mov    ecx,ebx
  408340:	mov    r8d,0x3c
  408346:	call   0x404b10
  40834b:	mov    r14,rax
  40834e:	call   rbp
  408350:	mov    eax,DWORD PTR [rax]
  408352:	test   eax,eax
  408354:	je     0x40830d
  408356:	mov    rdx,0xffffffffffffffff
  40835d:	mov    r8d,0x1
  408363:	mov    rcx,rdi
  408366:	call   0x404b10
  40836b:	jmp    0x407f6d
  408370:	add    rbx,0x1
  408374:	mov    r13d,eax
  408377:	jmp    0x40838e
  408379:	nop    DWORD PTR [rax+0x0]
  408380:	mov    QWORD PTR [rsp+0x38],rbx
  408385:	add    rbx,0x1
  408389:	movzx  r13d,BYTE PTR [rbx-0x1]
  40838e:	movzx  ecx,r13b
  408392:	call   rsi
  408394:	test   eax,eax
  408396:	jne    0x408380
  408398:	test   r13b,r13b
  40839b:	jne    0x4084ae
  4083a1:	cmp    r14,0xe0f
  4083a8:	jle    0x4083b4
  4083aa:	cmp    r12d,0x5
  4083ae:	je     0x407f53
  4083b4:	mov    rdx,r14
  4083b7:	jmp    0x40835d
  4083b9:	mov    rcx,rbx
  4083bc:	call   0x41d7f8
  4083c1:	cmp    rax,0x8
  4083c5:	jne    0x40847b
  4083cb:	mov    eax,DWORD PTR [rbx]
  4083cd:	lea    rdi,[rsp+0x38]
  4083d2:	lea    rsi,[rsp+0x30]
  4083d7:	lea    r8,[rsp+0x34]
  4083dc:	mov    r9d,0x1e13380
  4083e2:	xor    ecx,ecx
  4083e4:	mov    rdx,rdi
  4083e7:	mov    BYTE PTR [rsp+0x34],0x0
  4083ec:	mov    QWORD PTR [rsp+0x38],rsi
  4083f1:	mov    DWORD PTR [rsp+0x30],eax
  4083f5:	lea    rbp,[rsi+0x2]
  4083f9:	call   0x404ba0
  4083fe:	movzx  edx,WORD PTR [rbx+0x4]
  408402:	mov    r8,rbp
  408405:	mov    r9d,0x278d00
  40840b:	mov    rcx,rax
  40840e:	mov    BYTE PTR [rsp+0x32],0x0
  408413:	mov    QWORD PTR [rsp+0x38],rsi
  408418:	mov    WORD PTR [rsp+0x30],dx
  40841d:	mov    rdx,rdi
  408420:	call   0x404ba0
  408425:	movzx  edx,WORD PTR [rbx+0x6]
  408429:	mov    r8,rbp
  40842c:	mov    r9d,0x15180
  408432:	mov    rcx,rax
  408435:	mov    BYTE PTR [rsp+0x32],0x0
  40843a:	mov    QWORD PTR [rsp+0x38],rsi
  40843f:	mov    WORD PTR [rsp+0x30],dx
  408444:	mov    rdx,rdi
  408447:	call   0x404ba0
  40844c:	mov    rbp,QWORD PTR [rip+0x27589]        # 0x42f9dc
  408453:	mov    rdi,rax
  408456:	jmp    0x4080b5
  40845b:	mov    rax,rdi
  40845e:	jmp    0x407f6d
  408463:	call   QWORD PTR [rip+0x27573]        # 0x42f9dc
  408469:	mov    DWORD PTR [rax],0x16
  40846f:	mov    rax,0xffffffffffffffff
  408476:	jmp    0x407f6d
  40847b:	mov    rbp,QWORD PTR [rip+0x2755a]        # 0x42f9dc
  408482:	mov    rdi,0xffffffffffffffff
  408489:	call   rbp
  40848b:	mov    DWORD PTR [rax],0x16
  408491:	jmp    0x4080b5
  408496:	call   QWORD PTR [rip+0x27540]        # 0x42f9dc
  40849c:	mov    DWORD PTR [rax],0xc
  4084a2:	mov    rax,0xffffffffffffffff
  4084a9:	jmp    0x407f6d
  4084ae:	call   rbp
  4084b0:	mov    DWORD PTR [rax],0x16
  4084b6:	jmp    0x408356
  4084bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4084c0:	push   rbp
  4084c1:	push   rdi
  4084c2:	push   rsi
  4084c3:	push   rbx
  4084c4:	sub    rsp,0x28
  4084c8:	lea    eax,[rdx-0x3]
  4084cb:	mov    rsi,rdx
  4084ce:	cmp    eax,0xb
  4084d1:	ja     0x408530
  4084d3:	movzx  eax,BYTE PTR [rcx]
  4084d6:	lea    r8,[rip+0x1aae3]        # 0x422fc0
  4084dd:	mov    rdx,rax
  4084e0:	movzx  eax,BYTE PTR [r8+rax*1]
  4084e5:	add    eax,esi
  4084e7:	cmp    eax,0x11
  4084ea:	ja     0x408530
  4084ec:	cdqe   
  4084ee:	lea    rbx,[rip+0x1b48b]        # 0x423980
  4084f5:	xor    ebp,ebp
  4084f7:	shl    rax,0x4
  4084fb:	add    rbx,rax
  4084fe:	mov    rdi,QWORD PTR [rbx]
  408501:	cmp    dl,BYTE PTR [rdi]
  408503:	jne    0x408525
  408505:	lea    rdx,[rdi+0x1]
  408509:	lea    r8d,[rsi-0x1]
  40850d:	add    rcx,0x1
  408511:	call   0x41d7f0
  408516:	test   eax,eax
  408518:	jne    0x408525
  40851a:	mov    esi,esi
  40851c:	cmp    BYTE PTR [rdi+rsi*1],0x0
  408520:	jne    0x408525
  408522:	mov    ebp,DWORD PTR [rbx+0x8]
  408525:	mov    eax,ebp
  408527:	add    rsp,0x28
  40852b:	pop    rbx
  40852c:	pop    rsi
  40852d:	pop    rdi
  40852e:	pop    rbp
  40852f:	ret    
  408530:	xor    ebp,ebp
  408532:	mov    eax,ebp
  408534:	add    rsp,0x28
  408538:	pop    rbx
  408539:	pop    rsi
  40853a:	pop    rdi
  40853b:	pop    rbp
  40853c:	ret    
  40853d:	nop    DWORD PTR [rax]
  408540:	push   rbp
  408541:	push   rdi
  408542:	push   rsi
  408543:	push   rbx
  408544:	sub    rsp,0x28
  408548:	lea    eax,[rdx-0x4]
  40854b:	mov    rsi,rdx
  40854e:	cmp    eax,0x4
  408551:	ja     0x4085b0
  408553:	movzx  eax,BYTE PTR [rcx]
  408556:	lea    r8,[rip+0x1a963]        # 0x422ec0
  40855d:	mov    rdx,rax
  408560:	movzx  eax,BYTE PTR [r8+rax*1]
  408565:	add    eax,esi
  408567:	cmp    eax,0x9
  40856a:	ja     0x4085b0
  40856c:	cdqe   
  40856e:	lea    rbx,[rip+0x1b30b]        # 0x423880
  408575:	xor    ebp,ebp
  408577:	shl    rax,0x4
  40857b:	add    rbx,rax
  40857e:	mov    rdi,QWORD PTR [rbx]
  408581:	cmp    dl,BYTE PTR [rdi]
  408583:	jne    0x4085a5
  408585:	lea    rdx,[rdi+0x1]
  408589:	lea    r8d,[rsi-0x1]
  40858d:	add    rcx,0x1
  408591:	call   0x41d7f0
  408596:	test   eax,eax
  408598:	jne    0x4085a5
  40859a:	mov    esi,esi
  40859c:	cmp    BYTE PTR [rdi+rsi*1],0x0
  4085a0:	jne    0x4085a5
  4085a2:	mov    ebp,DWORD PTR [rbx+0x8]
  4085a5:	mov    eax,ebp
  4085a7:	add    rsp,0x28
  4085ab:	pop    rbx
  4085ac:	pop    rsi
  4085ad:	pop    rdi
  4085ae:	pop    rbp
  4085af:	ret    
  4085b0:	xor    ebp,ebp
  4085b2:	mov    eax,ebp
  4085b4:	add    rsp,0x28
  4085b8:	pop    rbx
  4085b9:	pop    rsi
  4085ba:	pop    rdi
  4085bb:	pop    rbp
  4085bc:	ret    
  4085bd:	nop    DWORD PTR [rax]
  4085c0:	push   rbx
  4085c1:	sub    rsp,0x20
  4085c5:	cmp    rcx,0xf
  4085c9:	jbe    0x40862c
  4085cb:	mov    eax,r8d
  4085ce:	mov    r9,rdx
  4085d1:	cmp    r8d,DWORD PTR [rcx+0xb0]
  4085d8:	lea    rdx,[rax+rax*2]
  4085dc:	lea    rdx,[rax+rdx*4]
  4085e0:	mov    rax,QWORD PTR [rcx+0x78]
  4085e4:	lea    rdx,[rax+rdx*8]
  4085e8:	jae    0x408663
  4085ea:	mov    eax,DWORD PTR [rdx+0x10]
  4085ed:	and    eax,0xfffff00
  4085f2:	mov    DWORD PTR [rdx+0x10],eax
  4085f5:	mov    r8d,DWORD PTR [r9+0x10]
  4085f9:	and    r8d,0xf00000ff
  408600:	or     eax,r8d
  408603:	mov    r8,QWORD PTR [r9+0x18]
  408607:	test   al,0x4
  408609:	mov    DWORD PTR [rdx+0x10],eax
  40860c:	mov    QWORD PTR [rdx+0x18],r8
  408610:	jne    0x408640
  408612:	xor    eax,eax
  408614:	and    DWORD PTR [r9+0x10],0xfffff00
  40861c:	mov    WORD PTR [r9+0xe],ax
  408621:	mov    rax,QWORD PTR [rdx+0x38]
  408625:	test   rax,rax
  408628:	je     0x40862c
  40862a:	call   rax
  40862c:	xor    ebx,ebx
  40862e:	mov    eax,ebx
  408630:	add    rsp,0x20
  408634:	pop    rbx
  408635:	ret    
  408636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408640:	movzx  eax,WORD PTR [rdx+0xe]
  408644:	add    eax,0x1
  408647:	cmp    ax,WORD PTR [rdx+0xc]
  40864b:	mov    WORD PTR [rdx+0xe],ax
  40864f:	jbe    0x408612
  408651:	test   BYTE PTR [rcx+0x10],0x4
  408655:	mov    ebx,0xffffffff
  40865a:	je     0x40862e
  40865c:	call   0x404ed0
  408661:	jmp    0x40862e
  408663:	call   QWORD PTR [rip+0x27323]        # 0x42f98c
  408669:	mov    rcx,QWORD PTR [rip+0x178a0]        # 0x41ff10
  408670:	lea    rdx,[rax+0x60]
  408674:	call   0x41d8b8
  408679:	mov    ecx,0x1
  40867e:	call   0x403f90
  408683:	nop
  408684:	xchg   ax,ax
  408686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408690:	push   rsi
  408691:	push   rbx
  408692:	sub    rsp,0x38
  408696:	cmp    rcx,0xf
  40869a:	jbe    0x4086eb
  40869c:	test   rdx,rdx
  40869f:	je     0x4086eb
  4086a1:	mov    eax,DWORD PTR [rdx+0x10]
  4086a4:	mov    esi,eax
  4086a6:	and    esi,0x8
  4086a9:	jne    0x4086eb
  4086ab:	mov    rcx,QWORD PTR [rdx+0x18]
  4086af:	test   rcx,rcx
  4086b2:	je     0x408730
  4086b4:	mov    rbx,rdx
  4086b7:	movzx  edx,BYTE PTR [rcx]
  4086ba:	cmp    dl,0x46
  4086bd:	je     0x4086e4
  4086bf:	jg     0x408701
  4086c1:	cmp    dl,0x23
  4086c4:	je     0x408712
  4086c6:	cmp    dl,0x30
  4086c9:	jne    0x408740
  4086cb:	lea    rdx,[rsp+0x28]
  4086d0:	xor    r8d,r8d
  4086d3:	call   0x41d7c8
  4086d8:	test   eax,eax
  4086da:	mov    eax,DWORD PTR [rbx+0x10]
  4086dd:	je     0x408720
  4086df:	mov    esi,0x1
  4086e4:	test   al,0x40
  4086e6:	jne    0x4086f2
  4086e8:	mov    DWORD PTR [rbx+0x18],esi
  4086eb:	add    rsp,0x38
  4086ef:	pop    rbx
  4086f0:	pop    rsi
  4086f1:	ret    
  4086f2:	mov    rcx,QWORD PTR [rbx+0x18]
  4086f6:	call   0x41d8a8
  4086fb:	and    DWORD PTR [rbx+0x10],0xffffffbf
  4086ff:	jmp    0x4086e8
  408701:	cmp    dl,0x66
  408704:	je     0x4086e4
  408706:	cmp    dl,0x6e
  408709:	je     0x4086e4
  40870b:	cmp    dl,0x4e
  40870e:	jne    0x4086df
  408710:	jmp    0x4086e4
  408712:	xor    esi,esi
  408714:	cmp    BYTE PTR [rcx+0x1],0x66
  408718:	setne  sil
  40871c:	jmp    0x4086e4
  40871e:	xchg   ax,ax
  408720:	mov    rdx,QWORD PTR [rsp+0x28]
  408725:	xor    esi,esi
  408727:	cmp    BYTE PTR [rdx],0x0
  40872a:	setne  sil
  40872e:	jmp    0x4086e4
  408730:	mov    DWORD PTR [rdx+0x18],0x0
  408737:	jmp    0x4086eb
  408739:	nop    DWORD PTR [rax+0x0]
  408740:	test   dl,dl
  408742:	jne    0x4086df
  408744:	jmp    0x4086e4
  408746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408750:	sub    rsp,0x28
  408754:	test   rcx,rcx
  408757:	je     0x4087c0
  408759:	mov    eax,DWORD PTR [rcx+0x10]
  40875c:	and    eax,0xf000
  408761:	cmp    eax,0x6000
  408766:	jne    0x4087c0
  408768:	mov    rcx,QWORD PTR [rcx+0x20]
  40876c:	test   rcx,rcx
  40876f:	je     0x40879a
  408771:	mov    r8d,DWORD PTR [rcx]
  408774:	xor    r9d,r9d
  408777:	add    rcx,0x8
  40877b:	jmp    0x408794
  40877d:	nop    DWORD PTR [rax]
  408780:	add    rcx,0x8
  408784:	test   r9b,r9b
  408787:	mov    rax,QWORD PTR [rcx-0x8]
  40878b:	jne    0x4087b0
  40878d:	cmp    rax,rdx
  408790:	sete   r9b
  408794:	sub    r8d,0x1
  408798:	jns    0x408780
  40879a:	call   QWORD PTR [rip+0x2723c]        # 0x42f9dc
  4087a0:	mov    DWORD PTR [rax],0x2
  4087a6:	xor    eax,eax
  4087a8:	jmp    0x4087b5
  4087aa:	nop    WORD PTR [rax+rax*1+0x0]
  4087b0:	test   rax,rax
  4087b3:	je     0x40879a
  4087b5:	add    rsp,0x28
  4087b9:	ret    
  4087ba:	nop    WORD PTR [rax+rax*1+0x0]
  4087c0:	call   QWORD PTR [rip+0x27216]        # 0x42f9dc
  4087c6:	mov    DWORD PTR [rax],0x16
  4087cc:	xor    eax,eax
  4087ce:	add    rsp,0x28
  4087d2:	ret    
  4087d3:	nop    DWORD PTR [rax]
  4087d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4087e0:	push   rbp
  4087e1:	push   rdi
  4087e2:	push   rsi
  4087e3:	push   rbx
  4087e4:	sub    rsp,0x28
  4087e8:	test   rcx,rcx
  4087eb:	mov    rdi,rdx
  4087ee:	je     0x408840
  4087f0:	cmp    DWORD PTR [rcx],0x6
  4087f3:	jne    0x408840
  4087f5:	mov    rax,QWORD PTR [rcx+0x10]
  4087f9:	mov    edx,DWORD PTR [rax]
  4087fb:	test   edx,edx
  4087fd:	jle    0x408870
  4087ff:	test   rdi,rdi
  408802:	lea    rbx,[rax+0x8]
  408806:	je     0x408860
  408808:	lea    eax,[rdx-0x1]
  40880b:	lea    rbp,[rbx+rax*8+0x8]
  408810:	jmp    0x408817
  408812:	cmp    rbx,rbp
  408815:	je     0x408870
  408817:	add    rbx,0x8
  40881b:	mov    rsi,QWORD PTR [rbx-0x8]
  40881f:	mov    rdx,rdi
  408822:	mov    rcx,QWORD PTR [rsi+0x8]
  408826:	call   0x41d818
  40882b:	test   eax,eax
  40882d:	jne    0x408812
  40882f:	mov    rax,rsi
  408832:	add    rsp,0x28
  408836:	pop    rbx
  408837:	pop    rsi
  408838:	pop    rdi
  408839:	pop    rbp
  40883a:	ret    
  40883b:	nop    DWORD PTR [rax+rax*1+0x0]
  408840:	xor    esi,esi
  408842:	call   QWORD PTR [rip+0x27194]        # 0x42f9dc
  408848:	mov    DWORD PTR [rax],0x16
  40884e:	mov    rax,rsi
  408851:	add    rsp,0x28
  408855:	pop    rbx
  408856:	pop    rsi
  408857:	pop    rdi
  408858:	pop    rbp
  408859:	ret    
  40885a:	nop    WORD PTR [rax+rax*1+0x0]
  408860:	mov    rsi,QWORD PTR [rax+0x8]
  408864:	test   rsi,rsi
  408867:	jne    0x40882f
  408869:	nop    DWORD PTR [rax+0x0]
  408870:	call   QWORD PTR [rip+0x27166]        # 0x42f9dc
  408876:	xor    esi,esi
  408878:	mov    DWORD PTR [rax],0x2
  40887e:	jmp    0x40882f
  408880:	push   r12
  408882:	push   rbp
  408883:	push   rdi
  408884:	push   rsi
  408885:	push   rbx
  408886:	sub    rsp,0x20
  40888a:	test   rcx,rcx
  40888d:	mov    rbp,rdx
  408890:	mov    r12,r8
  408893:	je     0x408910
  408895:	mov    eax,DWORD PTR [rcx+0x10]
  408898:	and    eax,0xf000
  40889d:	cmp    eax,0x6000
  4088a2:	jne    0x408910
  4088a4:	mov    rax,QWORD PTR [rcx+0x20]
  4088a8:	test   rax,rax
  4088ab:	je     0x4088f5
  4088ad:	mov    ebx,DWORD PTR [rax]
  4088af:	lea    rsi,[rax+0x8]
  4088b3:	test   ebx,ebx
  4088b5:	je     0x4088f5
  4088b7:	test   rdx,rdx
  4088ba:	je     0x408929
  4088bc:	nop    DWORD PTR [rax+0x0]
  4088c0:	sub    ebx,0x1
  4088c3:	js     0x4088f5
  4088c5:	add    rsi,0x8
  4088c9:	mov    rdi,QWORD PTR [rsi-0x8]
  4088cd:	mov    rdx,rbp
  4088d0:	mov    rcx,rdi
  4088d3:	call   0x4087e0
  4088d8:	test   rax,rax
  4088db:	je     0x4088c0
  4088dd:	test   r12,r12
  4088e0:	jne    0x4088c0
  4088e2:	test   rdi,rdi
  4088e5:	mov    rax,rdi
  4088e8:	je     0x4088f5
  4088ea:	add    rsp,0x20
  4088ee:	pop    rbx
  4088ef:	pop    rsi
  4088f0:	pop    rdi
  4088f1:	pop    rbp
  4088f2:	pop    r12
  4088f4:	ret    
  4088f5:	call   QWORD PTR [rip+0x270e1]        # 0x42f9dc
  4088fb:	mov    DWORD PTR [rax],0x2
  408901:	xor    eax,eax
  408903:	add    rsp,0x20
  408907:	pop    rbx
  408908:	pop    rsi
  408909:	pop    rdi
  40890a:	pop    rbp
  40890b:	pop    r12
  40890d:	ret    
  40890e:	xchg   ax,ax
  408910:	call   QWORD PTR [rip+0x270c6]        # 0x42f9dc
  408916:	mov    DWORD PTR [rax],0x16
  40891c:	xor    eax,eax
  40891e:	add    rsp,0x20
  408922:	pop    rbx
  408923:	pop    rsi
  408924:	pop    rdi
  408925:	pop    rbp
  408926:	pop    r12
  408928:	ret    
  408929:	mov    rax,QWORD PTR [rax+0x8]
  40892d:	jmp    0x4088ea
  40892f:	nop
  408930:	push   rbx
  408931:	sub    rsp,0x20
  408935:	test   rcx,rcx
  408938:	je     0x408990
  40893a:	cmp    DWORD PTR [rcx],0x6
  40893d:	jne    0x408990
  40893f:	mov    r8,QWORD PTR [rcx+0x10]
  408943:	mov    eax,DWORD PTR [r8]
  408946:	add    r8,0x8
  40894a:	jmp    0x40895d
  40894c:	nop    DWORD PTR [rax+0x0]
  408950:	lea    rcx,[r8+0x8]
  408954:	cmp    QWORD PTR [rcx-0x8],rdx
  408958:	je     0x408980
  40895a:	mov    r8,rcx
  40895d:	sub    eax,0x1
  408960:	lea    ecx,[rax+0x1]
  408963:	test   ecx,ecx
  408965:	jg     0x408950
  408967:	mov    ebx,0x16
  40896c:	call   QWORD PTR [rip+0x2706a]        # 0x42f9dc
  408972:	mov    DWORD PTR [rax],ebx
  408974:	xor    eax,eax
  408976:	add    rsp,0x20
  40897a:	pop    rbx
  40897b:	ret    
  40897c:	nop    DWORD PTR [rax+0x0]
  408980:	test   eax,eax
  408982:	jne    0x4089a4
  408984:	mov    ebx,0x2
  408989:	jmp    0x40896c
  40898b:	nop    DWORD PTR [rax+rax*1+0x0]
  408990:	call   QWORD PTR [rip+0x27046]        # 0x42f9dc
  408996:	mov    DWORD PTR [rax],0x16
  40899c:	xor    eax,eax
  40899e:	add    rsp,0x20
  4089a2:	pop    rbx
  4089a3:	ret    
  4089a4:	mov    rax,QWORD PTR [r8+0x8]
  4089a8:	add    rsp,0x20
  4089ac:	pop    rbx
  4089ad:	ret    
  4089ae:	xchg   ax,ax
  4089b0:	push   rsi
  4089b1:	push   rbx
  4089b2:	sub    rsp,0x38
  4089b6:	movzx  eax,BYTE PTR [rcx]
  4089b9:	mov    rsi,rdx
  4089bc:	cmp    al,0x78
  4089be:	mov    BYTE PTR [rdx],al
  4089c0:	ja     0x408b13
  4089c6:	lea    r9,[rip+0x19e03]        # 0x4227d0
  4089cd:	movsxd rax,DWORD PTR [r9+rax*4]
  4089d1:	add    r9,rax
  4089d4:	jmp    r9
  4089d7:	nop    WORD PTR [rax+rax*1+0x0]
  4089e0:	mov    ebx,0x1
  4089e5:	mov    BYTE PTR [rsi],r8b
  4089e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4089f0:	mov    eax,ebx
  4089f2:	add    rsp,0x38
  4089f6:	pop    rbx
  4089f7:	pop    rsi
  4089f8:	ret    
  4089f9:	nop    DWORD PTR [rax+0x0]
  408a00:	xor    ebx,ebx
  408a02:	jmp    0x4089f0
  408a04:	mov    BYTE PTR [rdx],0xb
  408a07:	mov    ebx,0x1
  408a0c:	jmp    0x4089f0
  408a0e:	xchg   ax,ax
  408a10:	mov    BYTE PTR [rdx],0xd
  408a13:	mov    ebx,0x1
  408a18:	jmp    0x4089f0
  408a1a:	nop    WORD PTR [rax+rax*1+0x0]
  408a20:	mov    BYTE PTR [rdx],0x9
  408a23:	mov    ebx,0x1
  408a28:	jmp    0x4089f0
  408a2a:	nop    WORD PTR [rax+rax*1+0x0]
  408a30:	cmp    BYTE PTR [rcx+0x1],0xa
  408a34:	mov    ebx,0x1
  408a39:	jne    0x4089f0
  408a3b:	mov    bl,0x2
  408a3d:	jmp    0x4089e5
  408a3f:	nop
  408a40:	movzx  eax,BYTE PTR [rcx]
  408a43:	mov    ebx,0x1
  408a48:	mov    BYTE PTR [rsp+0x20],al
  408a4c:	mov    eax,ebx
  408a4e:	movzx  edx,BYTE PTR [rcx+rax*1]
  408a52:	cmp    dl,0x7f
  408a55:	ja     0x408b5a
  408a5b:	lea    r9,[rip+0x1dc5e]        # 0x4266c0
  408a62:	movzx  r8d,dl
  408a66:	test   BYTE PTR [r9+r8*4+0x2],0x1
  408a6c:	je     0x408b5a
  408a72:	cmp    ebx,0x2
  408a75:	mov    BYTE PTR [rsp+rax*1+0x20],dl
  408a79:	je     0x408b50
  408a7f:	mov    ebx,0x2
  408a84:	jmp    0x408a4c
  408a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408a90:	movzx  eax,BYTE PTR [rcx+0x1]
  408a94:	mov    ebx,0x1
  408a99:	cmp    al,0x7f
  408a9b:	ja     0x4089f0
  408aa1:	lea    rdx,[rip+0x1dc18]        # 0x4266c0
  408aa8:	movzx  r8d,al
  408aac:	test   DWORD PTR [rdx+r8*4],0x70000
  408ab4:	je     0x4089f0
  408aba:	movzx  ecx,BYTE PTR [rcx+0x2]
  408abe:	mov    BYTE PTR [rsp+0x20],al
  408ac2:	cmp    cl,0x7f
  408ac5:	movzx  eax,cl
  408ac8:	ja     0x408b85
  408ace:	test   DWORD PTR [rdx+rax*4],0x70000
  408ad5:	je     0x408b85
  408adb:	mov    BYTE PTR [rsp+0x21],cl
  408adf:	mov    ebx,0x3
  408ae4:	mov    eax,0x2
  408ae9:	lea    rcx,[rsp+0x20]
  408aee:	mov    r8d,0x10
  408af4:	xor    edx,edx
  408af6:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  408afb:	call   0x41d7c0
  408b00:	mov    BYTE PTR [rsi],al
  408b02:	jmp    0x4089f0
  408b07:	nop    WORD PTR [rax+rax*1+0x0]
  408b10:	mov    BYTE PTR [rdx],0x7
  408b13:	mov    ebx,0x1
  408b18:	mov    eax,ebx
  408b1a:	add    rsp,0x38
  408b1e:	pop    rbx
  408b1f:	pop    rsi
  408b20:	ret    
  408b21:	mov    BYTE PTR [rdx],0x8
  408b24:	mov    ebx,0x1
  408b29:	jmp    0x4089f0
  408b2e:	xchg   ax,ax
  408b30:	mov    BYTE PTR [rdx],0xc
  408b33:	mov    ebx,0x1
  408b38:	jmp    0x4089f0
  408b3d:	nop    DWORD PTR [rax]
  408b40:	mov    BYTE PTR [rdx],0xa
  408b43:	mov    ebx,0x1
  408b48:	jmp    0x4089f0
  408b4d:	nop    DWORD PTR [rax]
  408b50:	mov    ebx,0x3
  408b55:	mov    eax,0x3
  408b5a:	lea    rcx,[rsp+0x20]
  408b5f:	xor    edx,edx
  408b61:	mov    r8d,0x8
  408b67:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  408b6c:	call   0x41d7c0
  408b71:	mov    edx,0xff
  408b76:	cmp    eax,0xff
  408b7b:	cmova  eax,edx
  408b7e:	mov    BYTE PTR [rsi],al
  408b80:	jmp    0x4089f0
  408b85:	mov    ebx,0x2
  408b8a:	mov    eax,0x1
  408b8f:	jmp    0x408ae9
  408b94:	xchg   ax,ax
  408b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ba0:	push   r14
  408ba2:	push   r13
  408ba4:	push   r12
  408ba6:	push   rbp
  408ba7:	push   rdi
  408ba8:	push   rsi
  408ba9:	push   rbx
  408baa:	sub    rsp,0x30
  408bae:	movzx  esi,BYTE PTR [rcx]
  408bb1:	movzx  r8d,BYTE PTR [rcx+0x1]
  408bb6:	mov    r13d,0x1
  408bbc:	lea    rax,[rsp+0x2c]
  408bc1:	mov    rbp,rdx
  408bc4:	test   rdx,rdx
  408bc7:	lea    r9,[rcx+0x1]
  408bcb:	mov    rbx,rcx
  408bce:	mov    DWORD PTR [rsp+0x2c],0x0
  408bd6:	cmove  rbp,rax
  408bda:	movabs r12,0x200000000000011
  408be4:	cmp    sil,r8b
  408be7:	je     0x408c19
  408be9:	cmp    r8b,0xa
  408bed:	lea    r14,[rbx+0x1]
  408bf1:	lea    rdi,[r9+0x1]
  408bf5:	mov    BYTE PTR [rbx],r8b
  408bf8:	je     0x408cc0
  408bfe:	cmp    r8b,0x5c
  408c02:	je     0x408c82
  408c04:	test   r8b,r8b
  408c07:	je     0x408c71
  408c09:	movzx  r8d,BYTE PTR [r9+0x1]
  408c0e:	mov    rbx,r14
  408c11:	mov    r9,rdi
  408c14:	cmp    sil,r8b
  408c17:	jne    0x408be9
  408c19:	lea    rdi,[r9+0x1]
  408c1d:	mov    BYTE PTR [rbx],0x0
  408c20:	movzx  esi,BYTE PTR [rdi]
  408c23:	cmp    sil,0x7f
  408c27:	ja     0x408c41
  408c29:	lea    rdx,[rip+0x1da90]        # 0x4266c0
  408c30:	movzx  eax,sil
  408c34:	test   DWORD PTR [rdx+rax*4],0xc01
  408c3b:	jne    0x408cd0
  408c41:	cmp    sil,0x27
  408c45:	je     0x408d30
  408c4b:	cmp    sil,0x2f
  408c4f:	je     0x408d51
  408c55:	cmp    sil,0x22
  408c59:	je     0x408d30
  408c5f:	mov    rax,rdi
  408c62:	add    rsp,0x30
  408c66:	pop    rbx
  408c67:	pop    rsi
  408c68:	pop    rdi
  408c69:	pop    rbp
  408c6a:	pop    r12
  408c6c:	pop    r13
  408c6e:	pop    r14
  408c70:	ret    
  408c71:	xor    eax,eax
  408c73:	add    rsp,0x30
  408c77:	pop    rbx
  408c78:	pop    rsi
  408c79:	pop    rdi
  408c7a:	pop    rbp
  408c7b:	pop    r12
  408c7d:	pop    r13
  408c7f:	pop    r14
  408c81:	ret    
  408c82:	movzx  r8d,BYTE PTR [r9+0x1]
  408c87:	cmp    r8b,0xa
  408c8b:	je     0x408d40
  408c91:	cmp    sil,0x27
  408c95:	je     0x408cf0
  408c97:	mov    r8d,0xa
  408c9d:	mov    rdx,rbx
  408ca0:	mov    rcx,rdi
  408ca3:	call   0x4089b0
  408ca8:	test   eax,eax
  408caa:	je     0x408c71
  408cac:	mov    eax,eax
  408cae:	mov    rbx,r14
  408cb1:	lea    r9,[rdi+rax*1]
  408cb5:	movzx  r8d,BYTE PTR [r9]
  408cb9:	jmp    0x408be4
  408cbe:	xchg   ax,ax
  408cc0:	add    DWORD PTR [rbp+0x0],0x1
  408cc4:	jmp    0x408c09
  408cc9:	nop    DWORD PTR [rax+0x0]
  408cd0:	add    rdi,0x1
  408cd4:	cmp    sil,0xa
  408cd8:	jne    0x408c20
  408cde:	add    DWORD PTR [rbp+0x0],0x1
  408ce2:	jmp    0x408c20
  408ce7:	nop    WORD PTR [rax+rax*1+0x0]
  408cf0:	lea    ecx,[r8-0x23]
  408cf4:	cmp    cl,0x39
  408cf7:	ja     0x408d20
  408cf9:	mov    rax,r13
  408cfc:	shl    rax,cl
  408cff:	test   rax,r12
  408d02:	je     0x408d20
  408d04:	mov    BYTE PTR [rbx],r8b
  408d07:	add    r9,0x2
  408d0b:	movzx  r8d,BYTE PTR [r9]
  408d0f:	mov    rbx,r14
  408d12:	jmp    0x408be4
  408d17:	nop    WORD PTR [rax+rax*1+0x0]
  408d20:	mov    r9,rdi
  408d23:	mov    rbx,r14
  408d26:	jmp    0x408be4
  408d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  408d30:	lea    r9,[rdi+0x1]
  408d34:	movzx  r8d,BYTE PTR [rdi+0x1]
  408d39:	jmp    0x408be4
  408d3e:	xchg   ax,ax
  408d40:	add    DWORD PTR [rbp+0x0],0x1
  408d44:	add    r9,0x2
  408d48:	movzx  r8d,BYTE PTR [r9]
  408d4c:	jmp    0x408be4
  408d51:	movzx  eax,BYTE PTR [rdi+0x1]
  408d55:	cmp    al,0x2a
  408d57:	je     0x408d80
  408d59:	cmp    al,0x2f
  408d5b:	jne    0x408dc0
  408d5d:	mov    rcx,rdi
  408d60:	mov    edx,0xa
  408d65:	call   0x41d820
  408d6a:	test   rax,rax
  408d6d:	mov    rdi,rax
  408d70:	jne    0x408c20
  408d76:	jmp    0x408c5f
  408d7b:	nop    DWORD PTR [rax+rax*1+0x0]
  408d80:	lea    rcx,[rdi+0x2]
  408d84:	lea    rdx,[rip+0x19c29]        # 0x4229b4
  408d8b:	call   0x41d7d0
  408d90:	test   rax,rax
  408d93:	je     0x408dc0
  408d95:	cmp    rdi,rax
  408d98:	jae    0x408dd0
  408d9a:	mov    edx,0x2f
  408d9f:	jmp    0x408da9
  408da1:	cmp    rdi,rax
  408da4:	je     0x408dd0
  408da6:	movzx  edx,BYTE PTR [rdi]
  408da9:	add    rdi,0x1
  408dad:	cmp    dl,0xa
  408db0:	jne    0x408da1
  408db2:	add    DWORD PTR [rbp+0x0],0x1
  408db6:	jmp    0x408da1
  408db8:	nop    DWORD PTR [rax+rax*1+0x0]
  408dc0:	xor    edi,edi
  408dc2:	jmp    0x408c5f
  408dc7:	nop    WORD PTR [rax+rax*1+0x0]
  408dd0:	lea    rdi,[rax+0x2]
  408dd4:	jmp    0x408c20
  408dd9:	nop    DWORD PTR [rax+0x0]
  408de0:	push   r15
  408de2:	push   r14
  408de4:	push   r13
  408de6:	push   r12
  408de8:	push   rbp
  408de9:	push   rdi
  408dea:	push   rsi
  408deb:	push   rbx
  408dec:	sub    rsp,0xe8
  408df3:	test   rcx,rcx
  408df6:	mov    rbx,rcx
  408df9:	mov    rbp,rdx
  408dfc:	mov    rdi,r8
  408dff:	je     0x40998a
  408e05:	mov    rax,QWORD PTR [rip+0x23694]        # 0x42c4a0
  408e0c:	test   rax,rax
  408e0f:	je     0x4094cc
  408e15:	movzx  r8d,BYTE PTR [rbx]
  408e19:	cmp    BYTE PTR [rax+r8*1],0x0
  408e1e:	mov    rcx,r8
  408e21:	je     0x408e33
  408e23:	add    rbx,0x1
  408e27:	movzx  edx,BYTE PTR [rbx]
  408e2a:	cmp    BYTE PTR [rax+rdx*1],0x0
  408e2e:	mov    rcx,rdx
  408e31:	jne    0x408e23
  408e33:	test   cl,cl
  408e35:	je     0x409333
  408e3b:	lea    rcx,[rdi+0x19]
  408e3f:	call   0x405990
  408e44:	lea    rcx,[rax+0x18]
  408e48:	mov    rsi,rax
  408e4b:	mov    rdx,rbp
  408e4e:	mov    r8,rdi
  408e51:	mov    DWORD PTR [rax],0x6
  408e57:	lea    rbp,[rsp+0x90]
  408e5f:	mov    QWORD PTR [rax+0x8],rcx
  408e63:	lea    r13,[rsi+0x10]
  408e67:	call   0x41d860
  408e6c:	mov    BYTE PTR [rsi+rdi*1+0x18],0x0
  408e71:	mov    ecx,0x38
  408e76:	lea    r12,[rbp+0x2]
  408e7a:	call   0x405990
  408e7f:	mov    QWORD PTR [rsi+0x10],rax
  408e83:	mov    DWORD PTR [rax],0x0
  408e89:	mov    DWORD PTR [rax+0x4],0x6
  408e90:	lea    rax,[rsp+0x70]
  408e95:	mov    QWORD PTR [rsp+0x48],rax
  408e9a:	lea    rax,[rsp+0x98]
  408ea2:	mov    QWORD PTR [rsp+0x38],rax
  408ea7:	mov    rax,QWORD PTR [rip+0x235f2]        # 0x42c4a0
  408eae:	test   rax,rax
  408eb1:	jne    0x408ec4
  408eb3:	jmp    0x409295
  408eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  408ec0:	add    rbx,0x1
  408ec4:	movzx  ecx,BYTE PTR [rbx]
  408ec7:	cmp    BYTE PTR [rax+rcx*1],0x0
  408ecb:	mov    rdx,rcx
  408ece:	jne    0x408ec0
  408ed0:	cmp    cl,0x7f
  408ed3:	ja     0x408f70
  408ed9:	movzx  eax,cl
  408edc:	lea    rcx,[rip+0x1d7dd]        # 0x4266c0
  408ee3:	test   DWORD PTR [rcx+rax*4],0x180040
  408eea:	je     0x408f70
  408ef0:	mov    rax,QWORD PTR [rip+0x23629]        # 0x42c520
  408ef7:	lea    rdi,[rbx+0x1]
  408efb:	test   rax,rax
  408efe:	je     0x4098ea
  408f04:	movzx  edx,BYTE PTR [rbx+0x1]
  408f08:	cmp    BYTE PTR [rax+rdx*1],0x0
  408f0c:	je     0x408f1d
  408f0e:	xchg   ax,ax
  408f10:	add    rdi,0x1
  408f14:	movzx  edx,BYTE PTR [rdi]
  408f17:	cmp    BYTE PTR [rax+rdx*1],0x0
  408f1b:	jne    0x408f10
  408f1d:	xor    eax,eax
  408f1f:	cmp    BYTE PTR [rdi-0x1],0x3a
  408f23:	sete   al
  408f26:	sub    rdi,rax
  408f29:	mov    rax,QWORD PTR [rip+0x23560]        # 0x42c490
  408f30:	mov    r8,rdi
  408f33:	sub    r8,rbx
  408f36:	test   rax,rax
  408f39:	jne    0x408f44
  408f3b:	jmp    0x4098d1
  408f40:	add    rdi,0x1
  408f44:	movzx  ecx,BYTE PTR [rdi]
  408f47:	cmp    BYTE PTR [rax+rcx*1],0x0
  408f4b:	mov    rdx,rcx
  408f4e:	jne    0x408f40
  408f50:	lea    r14,[rip+0x19a65]        # 0x4229bc
  408f57:	cmp    dl,0x3d
  408f5a:	ja     0x4091a2
  408f60:	movzx  eax,dl
  408f63:	movsxd rax,DWORD PTR [r14+rax*4]
  408f67:	add    rax,r14
  408f6a:	jmp    rax
  408f6c:	nop    DWORD PTR [rax+0x0]
  408f70:	cmp    dl,0x23
  408f73:	je     0x409064
  408f79:	cmp    dl,0x3c
  408f7c:	je     0x409080
  408f82:	test   dl,dl
  408f84:	je     0x408fd4
  408f86:	mov    rcx,QWORD PTR [rsi+0x10]
  408f8a:	call   0x41d8a8
  408f8f:	mov    rcx,rsi
  408f92:	call   0x41d8a8
  408f97:	xor    eax,eax
  408f99:	add    rsp,0xe8
  408fa0:	pop    rbx
  408fa1:	pop    rsi
  408fa2:	pop    rdi
  408fa3:	pop    rbp
  408fa4:	pop    r12
  408fa6:	pop    r13
  408fa8:	pop    r14
  408faa:	pop    r15
  408fac:	ret    
  408fad:	add    rdi,0x1
  408fb1:	mov    rdx,rbx
  408fb4:	mov    QWORD PTR [rsp+0x20],0x0
  408fbd:	xor    r9d,r9d
  408fc0:	mov    rcx,r13
  408fc3:	mov    rbx,rdi
  408fc6:	call   0x405aa0
  408fcb:	test   rbx,rbx
  408fce:	jne    0x408ea7
  408fd4:	mov    r15,QWORD PTR [rsi+0x10]
  408fd8:	mov    edx,DWORD PTR [r15]
  408fdb:	test   edx,edx
  408fdd:	je     0x40999d
  408fe3:	cmp    edx,0x1
  408fe6:	mov    rax,rsi
  408fe9:	jle    0x408f99
  408feb:	lea    r12d,[rdx-0x2]
  408fef:	xor    edi,edi
  408ff1:	add    r12,0x1
  408ff5:	mov    rbp,QWORD PTR [r15+rdi*8+0x10]
  408ffa:	mov    ebx,edi
  408ffc:	mov    r14,QWORD PTR [r15+rdi*8+0x8]
  409001:	mov    r13,QWORD PTR [rbp+0x8]
  409005:	jmp    0x40902a
  409007:	nop    WORD PTR [rax+rax*1+0x0]
  409010:	lea    eax,[rbx+0x1]
  409013:	sub    ebx,0x1
  409016:	cmp    ebx,0xffffffff
  409019:	cdqe   
  40901b:	mov    QWORD PTR [r15+rax*8+0x8],r14
  409020:	movsxd rax,ebx
  409023:	mov    r14,QWORD PTR [r15+rax*8+0x8]
  409028:	je     0x409060
  40902a:	mov    rcx,QWORD PTR [r14+0x8]
  40902e:	mov    rdx,r13
  409031:	call   0x41d818
  409036:	test   eax,eax
  409038:	jg     0x409010
  40903a:	add    ebx,0x1
  40903d:	add    rdi,0x1
  409041:	movsxd rbx,ebx
  409044:	cmp    rdi,r12
  409047:	mov    QWORD PTR [r15+rbx*8+0x8],rbp
  40904c:	jne    0x408ff5
  40904e:	mov    rax,rsi
  409051:	jmp    0x408f99
  409056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409060:	xor    ebx,ebx
  409062:	jmp    0x40903d
  409064:	mov    rcx,rbx
  409067:	mov    edx,0xa
  40906c:	call   0x41d820
  409071:	mov    rbx,rax
  409074:	jmp    0x408fcb
  409079:	nop    DWORD PTR [rax+0x0]
  409080:	mov    eax,DWORD PTR [rip+0x16dca]        # 0x41fe50
  409086:	mov    DWORD PTR [rsp+0x54],eax
  40908a:	lea    rax,[rbx+0x1]
  40908e:	mov    QWORD PTR [rsp+0x40],rax
  409093:	movzx  eax,BYTE PTR [rbx+0x1]
  409097:	cmp    al,0x7f
  409099:	ja     0x409110
  40909b:	lea    r10,[rip+0x1d61e]        # 0x4266c0
  4090a2:	movzx  edx,al
  4090a5:	test   DWORD PTR [r10+rdx*4],0x180040
  4090ad:	je     0x409110
  4090af:	mov    rax,QWORD PTR [rip+0x2346a]        # 0x42c520
  4090b6:	lea    rdi,[rbx+0x2]
  4090ba:	test   rax,rax
  4090bd:	je     0x4099e7
  4090c3:	movzx  edx,BYTE PTR [rbx+0x2]
  4090c7:	cmp    BYTE PTR [rax+rdx*1],0x0
  4090cb:	je     0x4090dd
  4090cd:	nop    DWORD PTR [rax]
  4090d0:	add    rdi,0x1
  4090d4:	movzx  edx,BYTE PTR [rdi]
  4090d7:	cmp    BYTE PTR [rax+rdx*1],0x0
  4090db:	jne    0x4090d0
  4090dd:	mov    r14,rdi
  4090e0:	sub    r14,QWORD PTR [rsp+0x40]
  4090e5:	cmp    r14,0x40
  4090e9:	ja     0x409101
  4090eb:	mov    DWORD PTR [rsp+0x70],0x1
  4090f3:	movzx  eax,BYTE PTR [rdi]
  4090f6:	cmp    al,0x7f
  4090f8:	movzx  edx,al
  4090fb:	jbe    0x4093e0
  409101:	mov    eax,DWORD PTR [rsp+0x54]
  409105:	mov    DWORD PTR [rip+0x16d45],eax        # 0x41fe50
  40910b:	jmp    0x408f86
  409110:	cmp    al,0x21
  409112:	je     0x409346
  409118:	cmp    al,0x3f
  40911a:	jne    0x408f86
  409120:	mov    rcx,QWORD PTR [rsp+0x40]
  409125:	mov    edx,0x3e
  40912a:	call   0x41d820
  40912f:	test   rax,rax
  409132:	je     0x408f86
  409138:	lea    rbx,[rax+0x1]
  40913c:	test   rbx,rbx
  40913f:	je     0x408f86
  409145:	cmp    BYTE PTR [rbx],0x2c
  409148:	jne    0x408ea7
  40914e:	add    rbx,0x1
  409152:	jmp    0x408fcb
  409157:	mov    rax,QWORD PTR [rip+0x23332]        # 0x42c490
  40915e:	lea    r15,[rdi+0x1]
  409162:	test   rax,rax
  409165:	je     0x409a00
  40916b:	movzx  edx,BYTE PTR [rdi+0x1]
  40916f:	mov    rdi,r15
  409172:	cmp    BYTE PTR [rax+rdx*1],0x0
  409176:	mov    rcx,rdx
  409179:	je     0x409190
  40917b:	nop    DWORD PTR [rax+rax*1+0x0]
  409180:	add    rdi,0x1
  409184:	movzx  edx,BYTE PTR [rdi]
  409187:	cmp    BYTE PTR [rax+rdx*1],0x0
  40918b:	mov    rcx,rdx
  40918e:	jne    0x409180
  409190:	cmp    cl,0x3a
  409193:	mov    edx,ecx
  409195:	je     0x4091a0
  409197:	cmp    cl,0x3d
  40919a:	jne    0x408f57
  4091a0:	mov    edx,ecx
  4091a2:	mov    r15,rdi
  4091a5:	cmp    dl,0xa
  4091a8:	lea    rax,[rdi+0x2]
  4091ac:	lea    r14,[r15+0x1]
  4091b0:	je     0x4091d3
  4091b2:	cmp    dl,0x2c
  4091b5:	je     0x4092a4
  4091bb:	test   dl,dl
  4091bd:	je     0x4094a2
  4091c3:	movzx  edx,BYTE PTR [r14]
  4091c7:	mov    r15,r14
  4091ca:	lea    r14,[r15+0x1]
  4091ce:	cmp    dl,0xa
  4091d1:	jne    0x4091b2
  4091d3:	cmp    r14,rax
  4091d6:	jbe    0x4092a4
  4091dc:	cmp    BYTE PTR [r14-0x2],0x5c
  4091e1:	jne    0x4091e9
  4091e3:	cmp    BYTE PTR [r14],0x0
  4091e7:	jne    0x4091c3
  4091e9:	mov    rax,r14
  4091ec:	mov    rdx,rbx
  4091ef:	mov    r9,rdi
  4091f2:	sub    rax,rdi
  4091f5:	mov    rcx,r13
  4091f8:	mov    rbx,r14
  4091fb:	sub    rax,0x1
  4091ff:	mov    QWORD PTR [rsp+0x20],rax
  409204:	call   0x405aa0
  409209:	test   rax,rax
  40920c:	jne    0x4092cd
  409212:	jmp    0x408ea7
  409217:	nop    WORD PTR [rax+rax*1+0x0]
  409220:	lea    r15,[rdi+0x1]
  409224:	jmp    0x409243
  409226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409230:	cmp    al,dl
  409232:	je     0x409369
  409238:	cmp    al,0x5c
  40923a:	je     0x4093a0
  409240:	mov    r15,r14
  409243:	lea    r14,[r15+0x1]
  409247:	movzx  eax,BYTE PTR [r14-0x1]
  40924c:	test   al,al
  40924e:	jne    0x409230
  409250:	mov    rax,r15
  409253:	mov    rdx,rbx
  409256:	mov    r9,rdi
  409259:	sub    rax,rdi
  40925c:	mov    rcx,r13
  40925f:	mov    rbx,r15
  409262:	mov    QWORD PTR [rsp+0x20],rax
  409267:	call   0x405aa0
  40926c:	test   rax,rax
  40926f:	je     0x408ea7
  409275:	mov    r8d,DWORD PTR [rip+0x16bd4]        # 0x41fe50
  40927c:	test   r8d,r8d
  40927f:	jne    0x408fcb
  409285:	lea    rcx,[rax+0x10]
  409289:	xor    edx,edx
  40928b:	call   0x408ba0
  409290:	jmp    0x408fcb
  409295:	mov    ecx,0xc
  40929a:	call   0x4054a0
  40929f:	jmp    0x408ec4
  4092a4:	mov    rax,r14
  4092a7:	mov    rdx,rbx
  4092aa:	mov    r9,rdi
  4092ad:	sub    rax,rdi
  4092b0:	mov    rcx,r13
  4092b3:	mov    rbx,r14
  4092b6:	sub    rax,0x1
  4092ba:	mov    QWORD PTR [rsp+0x20],rax
  4092bf:	call   0x405aa0
  4092c4:	test   rax,rax
  4092c7:	je     0x408fcb
  4092cd:	add    rax,0x10
  4092d1:	jmp    0x4092d7
  4092d3:	add    rax,0x1
  4092d7:	cmp    BYTE PTR [rax],0xa
  4092da:	je     0x4092d3
  4092dc:	mov    edx,0xa
  4092e1:	mov    rcx,rax
  4092e4:	call   0x41d820
  4092e9:	test   rax,rax
  4092ec:	je     0x408fcb
  4092f2:	cmp    BYTE PTR [rax-0x1],0x5c
  4092f6:	jne    0x4092d7
  4092f8:	movzx  ecx,BYTE PTR [rax]
  4092fb:	lea    rdx,[rax-0x1]
  4092ff:	lea    r8,[rdx+0x1]
  409303:	test   cl,cl
  409305:	mov    BYTE PTR [rdx],cl
  409307:	je     0x408fcb
  40930d:	cmp    cl,0x5c
  409310:	jne    0x40931a
  409312:	cmp    BYTE PTR [rax+0x1],0xa
  409316:	cmove  r8,rdx
  40931a:	add    rax,0x1
  40931e:	movzx  ecx,BYTE PTR [rax]
  409321:	mov    rdx,r8
  409324:	lea    r8,[rdx+0x1]
  409328:	test   cl,cl
  40932a:	mov    BYTE PTR [rdx],cl
  40932c:	jne    0x40930d
  40932e:	jmp    0x408fcb
  409333:	call   QWORD PTR [rip+0x266a3]        # 0x42f9dc
  409339:	mov    DWORD PTR [rax],0x2
  40933f:	xor    eax,eax
  409341:	jmp    0x408f99
  409346:	mov    rcx,QWORD PTR [rsp+0x40]
  40934b:	lea    rdx,[rip+0x19665]        # 0x4229b7
  409352:	call   0x41d7d0
  409357:	test   rax,rax
  40935a:	je     0x408f86
  409360:	lea    rbx,[rax+0x3]
  409364:	jmp    0x40913c
  409369:	mov    rax,r14
  40936c:	mov    r9,rdi
  40936f:	mov    rdx,rbx
  409372:	sub    rax,rdi
  409375:	mov    rcx,r13
  409378:	mov    QWORD PTR [rsp+0x20],rax
  40937d:	call   0x405aa0
  409382:	test   rax,rax
  409385:	je     0x409395
  409387:	mov    edx,DWORD PTR [rip+0x16ac3]        # 0x41fe50
  40938d:	test   edx,edx
  40938f:	je     0x40997d
  409395:	mov    rbx,r14
  409398:	jmp    0x408ea7
  40939d:	nop    DWORD PTR [rax]
  4093a0:	mov    rcx,r15
  4093a3:	add    r15,0x2
  4093a7:	movzx  eax,BYTE PTR [rcx+0x1]
  4093ab:	test   al,al
  4093ad:	je     0x409aae
  4093b3:	cmp    al,0x5c
  4093b5:	je     0x4093bf
  4093b7:	cmp    al,dl
  4093b9:	jne    0x409243
  4093bf:	cmp    BYTE PTR [rcx+0x2],0x0
  4093c3:	mov    rax,r15
  4093c6:	lea    r15,[rcx+0x3]
  4093ca:	jne    0x409243
  4093d0:	mov    r15,rax
  4093d3:	jmp    0x409250
  4093d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4093e0:	movzx  ecx,al
  4093e3:	mov    ecx,DWORD PTR [r10+rcx*4]
  4093e7:	test   ecx,0xc01
  4093ed:	je     0x40944b
  4093ef:	mov    rax,QWORD PTR [rip+0x230aa]        # 0x42c4a0
  4093f6:	test   rax,rax
  4093f9:	jne    0x409407
  4093fb:	jmp    0x409a6f
  409400:	add    rdi,0x1
  409404:	movzx  edx,BYTE PTR [rdi]
  409407:	cmp    BYTE PTR [rax+rdx*1],0x0
  40940b:	jne    0x409400
  40940d:	mov    r8,QWORD PTR [rsp+0x48]
  409412:	lea    rdx,[rip+0x16a37]        # 0x41fe50
  409419:	mov    rcx,rdi
  40941c:	mov    QWORD PTR [rsp+0x58],r10
  409421:	call   0x407970
  409426:	test   rax,rax
  409429:	mov    rdi,rax
  40942c:	je     0x409101
  409432:	movzx  edx,BYTE PTR [rax]
  409435:	cmp    dl,0x7f
  409438:	mov    eax,edx
  40943a:	ja     0x409101
  409440:	mov    r10,QWORD PTR [rsp+0x58]
  409445:	mov    edx,edx
  409447:	mov    ecx,DWORD PTR [r10+rdx*4]
  40944b:	and    ecx,0x1000c01
  409451:	je     0x409101
  409457:	cmp    al,0x2f
  409459:	je     0x40995f
  40945f:	mov    r15,rdi
  409462:	add    r15,0x1
  409466:	je     0x409101
  40946c:	mov    ecx,DWORD PTR [rsp+0x70]
  409470:	test   ecx,ecx
  409472:	jne    0x4094db
  409474:	mov    rdx,QWORD PTR [rsp+0x40]
  409479:	mov    QWORD PTR [rsp+0x20],0x0
  409482:	xor    r9d,r9d
  409485:	mov    r8,r14
  409488:	mov    rcx,r13
  40948b:	mov    rbx,r15
  40948e:	call   0x405aa0
  409493:	mov    eax,DWORD PTR [rsp+0x54]
  409497:	mov    DWORD PTR [rip+0x169b3],eax        # 0x41fe50
  40949d:	jmp    0x409145
  4094a2:	mov    rax,r15
  4094a5:	mov    rdx,rbx
  4094a8:	mov    r9,rdi
  4094ab:	sub    rax,rdi
  4094ae:	mov    rcx,r13
  4094b1:	mov    rbx,r15
  4094b4:	mov    QWORD PTR [rsp+0x20],rax
  4094b9:	call   0x405aa0
  4094be:	test   rax,rax
  4094c1:	jne    0x4092cd
  4094c7:	jmp    0x408ea7
  4094cc:	mov    ecx,0xc
  4094d1:	call   0x4054a0
  4094d6:	jmp    0x408e15
  4094db:	cmp    DWORD PTR [rip+0x1696e],0x2        # 0x41fe50
  4094e2:	je     0x40950e
  4094e4:	mov    rax,QWORD PTR [rip+0x22fb5]        # 0x42c4a0
  4094eb:	test   rax,rax
  4094ee:	je     0x409a56
  4094f4:	movzx  edx,BYTE PTR [rdi+0x1]
  4094f8:	cmp    BYTE PTR [rax+rdx*1],0x0
  4094fc:	je     0x40950e
  4094fe:	xchg   ax,ax
  409500:	add    r15,0x1
  409504:	movzx  edx,BYTE PTR [r15]
  409508:	cmp    BYTE PTR [rax+rdx*1],0x0
  40950c:	jne    0x409500
  40950e:	mov    rdi,QWORD PTR [rsp+0x38]
  409513:	mov    ecx,0x8
  409518:	xor    eax,eax
  40951a:	mov    QWORD PTR [rsp+0x90],0x2f3c
  409526:	rep stos QWORD PTR es:[rdi],rax
  409529:	nop    DWORD PTR [rax+0x0]
  409530:	movzx  edx,BYTE PTR [rbx+rax*1+0x1]
  409535:	mov    BYTE PTR [r12+rax*1],dl
  409539:	add    rax,0x1
  40953d:	cmp    r14,rax
  409540:	jne    0x409530
  409542:	lea    rax,[r12+r14*1-0x1]
  409547:	mov    rdx,rbp
  40954a:	mov    rcx,r15
  40954d:	mov    QWORD PTR [rsp+0x58],r10
  409552:	mov    BYTE PTR [rax+0x1],0x3e
  409556:	mov    BYTE PTR [rax+0x2],0x0
  40955a:	lea    rdi,[rax+0x2]
  40955e:	call   0x41d7d0
  409563:	test   rax,rax
  409566:	mov    rbx,rax
  409569:	je     0x409101
  40956f:	cmp    DWORD PTR [rip+0x168da],0x2        # 0x41fe50
  409576:	mov    r10,QWORD PTR [rsp+0x58]
  40957b:	jne    0x4098f9
  409581:	mov    rax,QWORD PTR [rip+0x22f18]        # 0x42c4a0
  409588:	mov    r9,rbx
  40958b:	sub    rdi,rbp
  40958e:	sub    r9,r15
  409591:	add    rbx,rdi
  409594:	test   rax,rax
  409597:	jne    0x4095a4
  409599:	jmp    0x409a26
  40959e:	xchg   ax,ax
  4095a0:	add    rbx,0x1
  4095a4:	movzx  edx,BYTE PTR [rbx]
  4095a7:	cmp    BYTE PTR [rax+rdx*1],0x0
  4095ab:	jne    0x4095a0
  4095ad:	cmp    DWORD PTR [rsp+0x70],0x6
  4095b2:	ja     0x409493
  4095b8:	mov    edx,DWORD PTR [rsp+0x70]
  4095bc:	lea    rax,[rip+0x194f1]        # 0x422ab4
  4095c3:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4095c7:	add    rax,rdx
  4095ca:	jmp    rax
  4095cc:	lea    rcx,[r9+0x1]
  4095d0:	mov    QWORD PTR [rsp+0x58],r9
  4095d5:	call   0x405990
  4095da:	mov    r9,QWORD PTR [rsp+0x58]
  4095df:	mov    rdx,r15
  4095e2:	mov    rcx,rax
  4095e5:	mov    rdi,rax
  4095e8:	mov    r8,r9
  4095eb:	call   0x41d860
  4095f0:	mov    r9,QWORD PTR [rsp+0x58]
  4095f5:	test   r9,r9
  4095f8:	mov    BYTE PTR [rdi+r9*1],0x0
  4095fd:	jne    0x4099ae
  409603:	lea    rcx,[r14+0x19]
  409607:	call   0x405990
  40960c:	mov    rdx,QWORD PTR [rsp+0x40]
  409611:	lea    rcx,[rax+0x18]
  409615:	mov    r15,rax
  409618:	mov    QWORD PTR [rax+0x10],0x0
  409620:	mov    DWORD PTR [rax],0x6
  409626:	mov    r8,r14
  409629:	mov    QWORD PTR [rax+0x8],rcx
  40962d:	call   0x41d860
  409632:	mov    BYTE PTR [r15+r14*1+0x18],0x0
  409638:	mov    rdx,r15
  40963b:	mov    rcx,r13
  40963e:	call   0x4059e0
  409643:	mov    rcx,rdi
  409646:	call   0x41d8a8
  40964b:	jmp    0x409493
  409650:	lea    rcx,[r14+0x19]
  409654:	mov    QWORD PTR [rsp+0x60],r10
  409659:	mov    QWORD PTR [rsp+0x58],r9
  40965e:	call   0x405990
  409663:	mov    rdi,rax
  409666:	movzx  eax,BYTE PTR [r15]
  40966a:	mov    r9,QWORD PTR [rsp+0x58]
  40966f:	mov    r10,QWORD PTR [rsp+0x60]
  409674:	cmp    al,0x7f
  409676:	jbe    0x4096d0
  409678:	test   r9,r9
  40967b:	je     0x4096df
  40967d:	xor    r8d,r8d
  409680:	xor    edx,edx
  409682:	mov    rcx,r15
  409685:	call   0x41d7c8
  40968a:	mov    DWORD PTR [rdi+0x10],eax
  40968d:	lea    rcx,[rdi+0x18]
  409691:	mov    rdx,QWORD PTR [rsp+0x40]
  409696:	mov    DWORD PTR [rdi],0x5
  40969c:	mov    r8,r14
  40969f:	mov    QWORD PTR [rdi+0x8],rcx
  4096a3:	call   0x41d860
  4096a8:	mov    BYTE PTR [rdi+r14*1+0x18],0x0
  4096ae:	mov    rdx,rdi
  4096b1:	mov    rcx,r13
  4096b4:	call   0x4059e0
  4096b9:	jmp    0x409493
  4096be:	xchg   ax,ax
  4096c0:	add    r15,0x1
  4096c4:	movzx  eax,BYTE PTR [r15]
  4096c8:	sub    r9,0x1
  4096cc:	cmp    al,0x7f
  4096ce:	ja     0x409678
  4096d0:	test   DWORD PTR [r10+rax*4],0xc01
  4096d8:	je     0x409678
  4096da:	test   r9,r9
  4096dd:	jne    0x4096c0
  4096df:	mov    DWORD PTR [rdi+0x10],0x0
  4096e6:	jmp    0x40968d
  4096e8:	lea    rcx,[r14+0x19]
  4096ec:	mov    QWORD PTR [rsp+0x60],r10
  4096f1:	mov    QWORD PTR [rsp+0x58],r9
  4096f6:	call   0x405990
  4096fb:	movzx  edx,BYTE PTR [r15]
  4096ff:	mov    rdi,rax
  409702:	mov    r9,QWORD PTR [rsp+0x58]
  409707:	mov    r10,QWORD PTR [rsp+0x60]
  40970c:	cmp    dl,0x7f
  40970f:	jbe    0x409781
  409711:	test   r9,r9
  409714:	je     0x409792
  409716:	cmp    edx,0x7f
  409719:	ja     0x409a19
  40971f:	mov    edx,edx
  409721:	mov    eax,DWORD PTR [r10+rdx*4]
  409725:	test   eax,0x30000
  40972a:	je     0x409a49
  409730:	mov    rcx,r15
  409733:	call   0x41d910
  409738:	mov    DWORD PTR [rdi+0x10],eax
  40973b:	lea    rcx,[rdi+0x18]
  40973f:	mov    rdx,QWORD PTR [rsp+0x40]
  409744:	mov    DWORD PTR [rdi],0x3
  40974a:	mov    r8,r14
  40974d:	mov    QWORD PTR [rdi+0x8],rcx
  409751:	call   0x41d860
  409756:	mov    rax,QWORD PTR [rdi+0x8]
  40975a:	mov    rdx,rdi
  40975d:	mov    rcx,r13
  409760:	mov    BYTE PTR [rax+r14*1],0x0
  409765:	call   0x4059e0
  40976a:	jmp    0x409493
  40976f:	nop
  409770:	add    r15,0x1
  409774:	movzx  edx,BYTE PTR [r15]
  409778:	sub    r9,0x1
  40977c:	cmp    dl,0x7f
  40977f:	ja     0x409711
  409781:	mov    eax,edx
  409783:	test   DWORD PTR [r10+rax*4],0xc01
  40978b:	je     0x409711
  40978d:	test   r9,r9
  409790:	jne    0x409770
  409792:	mov    DWORD PTR [rdi+0x10],0x0
  409799:	jmp    0x40973b
  40979b:	mov    rdx,QWORD PTR [rsp+0x40]
  4097a0:	mov    QWORD PTR [rsp+0x20],r9
  4097a5:	mov    r8,r14
  4097a8:	mov    r9,r15
  4097ab:	mov    rcx,r13
  4097ae:	mov    QWORD PTR [rsp+0x58],r10
  4097b3:	call   0x405aa0
  4097b8:	mov    r15d,DWORD PTR [rip+0x16691]        # 0x41fe50
  4097bf:	mov    r14,rax
  4097c2:	cmp    r15d,0x2
  4097c6:	je     0x409493
  4097cc:	lea    rdi,[rax+0x10]
  4097d0:	movzx  eax,BYTE PTR [rax+0x10]
  4097d4:	mov    r10,QWORD PTR [rsp+0x58]
  4097d9:	cmp    al,0x7f
  4097db:	ja     0x4099cf
  4097e1:	test   DWORD PTR [r10+rax*4],0xc01
  4097e9:	je     0x4099cf
  4097ef:	mov    rax,QWORD PTR [rip+0x22caa]        # 0x42c4a0
  4097f6:	test   rax,rax
  4097f9:	je     0x409ab6
  4097ff:	mov    r9,rax
  409802:	movzx  ecx,BYTE PTR [r14+0x11]
  409807:	lea    rdx,[r14+0x11]
  40980b:	cmp    BYTE PTR [rax+rcx*1],0x0
  40980f:	je     0x40981e
  409811:	add    rdx,0x1
  409815:	movzx  ecx,BYTE PTR [rdx]
  409818:	cmp    BYTE PTR [rax+rcx*1],0x0
  40981c:	jne    0x409811
  40981e:	mov    rcx,rdx
  409821:	mov    QWORD PTR [rsp+0x60],r9
  409826:	mov    QWORD PTR [rsp+0x58],rdx
  40982b:	call   0x41d7f8
  409830:	mov    rdx,QWORD PTR [rsp+0x58]
  409835:	lea    r8,[rax+0x1]
  409839:	mov    rcx,rdi
  40983c:	mov    QWORD PTR [rsp+0x40],rax
  409841:	call   0x41d858
  409846:	mov    r10,QWORD PTR [rsp+0x40]
  40984b:	mov    r9,QWORD PTR [rsp+0x60]
  409850:	lea    rdx,[rdi+r10*1]
  409854:	test   r9,r9
  409857:	je     0x409acc
  40985d:	cmp    rdi,rdx
  409860:	jb     0x409889
  409862:	mov    rcx,rdi
  409865:	mov    QWORD PTR [rsp+0x40],r9
  40986a:	call   0x41d7f8
  40986f:	lea    rdx,[rdi+rax*1]
  409873:	mov    r9,QWORD PTR [rsp+0x40]
  409878:	cmp    rdi,rdx
  40987b:	jb     0x409889
  40987d:	jmp    0x409894
  40987f:	nop
  409880:	sub    rdx,0x1
  409884:	cmp    rdi,rdx
  409887:	jae    0x409894
  409889:	movzx  eax,BYTE PTR [rdx-0x1]
  40988d:	cmp    BYTE PTR [r9+rax*1],0x0
  409892:	jne    0x409880
  409894:	cmp    r15d,0x1
  409898:	mov    BYTE PTR [rdx],0x0
  40989b:	je     0x409493
  4098a1:	movzx  eax,BYTE PTR [r14+0x10]
  4098a6:	cmp    al,0x22
  4098a8:	je     0x4098b2
  4098aa:	cmp    al,0x27
  4098ac:	jne    0x409493
  4098b2:	movzx  eax,BYTE PTR [rdx-0x1]
  4098b6:	cmp    al,0x22
  4098b8:	je     0x4098c2
  4098ba:	cmp    al,0x27
  4098bc:	jne    0x409493
  4098c2:	xor    edx,edx
  4098c4:	mov    rcx,rdi
  4098c7:	call   0x408ba0
  4098cc:	jmp    0x409493
  4098d1:	mov    ecx,0xa
  4098d6:	mov    QWORD PTR [rsp+0x40],r8
  4098db:	call   0x4054a0
  4098e0:	mov    r8,QWORD PTR [rsp+0x40]
  4098e5:	jmp    0x408f44
  4098ea:	mov    ecx,0x1c
  4098ef:	call   0x4054a0
  4098f4:	jmp    0x408f04
  4098f9:	mov    r8,QWORD PTR [rip+0x22ba0]        # 0x42c4a0
  409900:	test   r8,r8
  409903:	mov    rdx,r8
  409906:	je     0x409a8b
  40990c:	cmp    r15,rbx
  40990f:	jb     0x409985
  409911:	mov    rcx,r15
  409914:	mov    QWORD PTR [rsp+0x68],r10
  409919:	mov    QWORD PTR [rsp+0x60],rdx
  40991e:	mov    QWORD PTR [rsp+0x58],r8
  409923:	call   0x41d7f8
  409928:	lea    r9,[r15+rax*1]
  40992c:	mov    r8,QWORD PTR [rsp+0x58]
  409931:	mov    rdx,QWORD PTR [rsp+0x60]
  409936:	mov    r10,QWORD PTR [rsp+0x68]
  40993b:	cmp    r15,r9
  40993e:	jb     0x40994b
  409940:	jmp    0x409957
  409942:	sub    r9,0x1
  409946:	cmp    r15,r9
  409949:	jae    0x409957
  40994b:	movzx  eax,BYTE PTR [r9-0x1]
  409950:	cmp    BYTE PTR [r8+rax*1],0x0
  409955:	jne    0x409942
  409957:	mov    rax,rdx
  40995a:	jmp    0x40958b
  40995f:	cmp    BYTE PTR [rdi+0x1],0x3e
  409963:	lea    rax,[rdi+0x1]
  409967:	jne    0x409101
  40996d:	mov    DWORD PTR [rsp+0x70],0x0
  409975:	mov    rdi,rax
  409978:	jmp    0x40945f
  40997d:	mov    rbx,r14
  409980:	jmp    0x409285
  409985:	mov    r9,rbx
  409988:	jmp    0x40994b
  40998a:	call   QWORD PTR [rip+0x2604c]        # 0x42f9dc
  409990:	mov    DWORD PTR [rax],0x16
  409996:	xor    eax,eax
  409998:	jmp    0x408f99
  40999d:	call   QWORD PTR [rip+0x26039]        # 0x42f9dc
  4099a3:	mov    DWORD PTR [rax],0x2
  4099a9:	jmp    0x408f86
  4099ae:	mov    rdx,QWORD PTR [rsp+0x40]
  4099b3:	mov    r8,r14
  4099b6:	mov    rcx,rdi
  4099b9:	call   0x408de0
  4099be:	test   rax,rax
  4099c1:	mov    r15,rax
  4099c4:	jne    0x409638
  4099ca:	jmp    0x409643
  4099cf:	mov    rcx,rdi
  4099d2:	call   0x41d7f8
  4099d7:	mov    r9,QWORD PTR [rip+0x22ac2]        # 0x42c4a0
  4099de:	lea    rdx,[rdi+rax*1]
  4099e2:	jmp    0x409854
  4099e7:	mov    ecx,0x1c
  4099ec:	mov    QWORD PTR [rsp+0x58],r10
  4099f1:	call   0x4054a0
  4099f6:	mov    r10,QWORD PTR [rsp+0x58]
  4099fb:	jmp    0x4090c3
  409a00:	mov    ecx,0xa
  409a05:	mov    QWORD PTR [rsp+0x40],r8
  409a0a:	call   0x4054a0
  409a0f:	mov    r8,QWORD PTR [rsp+0x40]
  409a14:	jmp    0x40916b
  409a19:	mov    eax,0x1
  409a1e:	mov    DWORD PTR [rdi+0x10],eax
  409a21:	jmp    0x40973b
  409a26:	mov    ecx,0xc
  409a2b:	mov    QWORD PTR [rsp+0x60],r10
  409a30:	mov    QWORD PTR [rsp+0x58],r9
  409a35:	call   0x4054a0
  409a3a:	mov    r10,QWORD PTR [rsp+0x60]
  409a3f:	mov    r9,QWORD PTR [rsp+0x58]
  409a44:	jmp    0x4095a4
  409a49:	test   eax,0x8000002
  409a4e:	sete   al
  409a51:	movzx  eax,al
  409a54:	jmp    0x409a1e
  409a56:	mov    ecx,0xc
  409a5b:	mov    QWORD PTR [rsp+0x58],r10
  409a60:	call   0x4054a0
  409a65:	mov    r10,QWORD PTR [rsp+0x58]
  409a6a:	jmp    0x4094f4
  409a6f:	mov    ecx,0xc
  409a74:	mov    QWORD PTR [rsp+0x58],r10
  409a79:	call   0x4054a0
  409a7e:	movzx  edx,BYTE PTR [rdi]
  409a81:	mov    r10,QWORD PTR [rsp+0x58]
  409a86:	jmp    0x409407
  409a8b:	mov    ecx,0xc
  409a90:	mov    QWORD PTR [rsp+0x58],r10
  409a95:	call   0x4054a0
  409a9a:	mov    rdx,QWORD PTR [rip+0x229ff]        # 0x42c4a0
  409aa1:	mov    r8,rax
  409aa4:	mov    r10,QWORD PTR [rsp+0x58]
  409aa9:	jmp    0x40990c
  409aae:	mov    r15,rcx
  409ab1:	jmp    0x409250
  409ab6:	mov    ecx,0xc
  409abb:	call   0x4054a0
  409ac0:	mov    r9,QWORD PTR [rip+0x229d9]        # 0x42c4a0
  409ac7:	jmp    0x409802
  409acc:	mov    ecx,0xc
  409ad1:	mov    QWORD PTR [rsp+0x40],rdx
  409ad6:	call   0x4054a0
  409adb:	mov    rdx,QWORD PTR [rsp+0x40]
  409ae0:	mov    r9,rax
  409ae3:	jmp    0x40985d
  409ae8:	mov    r15,rbx
  409aeb:	jmp    0x409474
  409af0:	push   rdi
  409af1:	sub    rsp,0x90
  409af8:	xor    eax,eax
  409afa:	lea    rdi,[rsp+0x20]
  409aff:	mov    r9,rcx
  409b02:	mov    ecx,0xd
  409b07:	rep stos QWORD PTR es:[rdi],rax
  409b0a:	mov    eax,edx
  409b0c:	lea    rdx,[rsp+0x20]
  409b11:	mov    QWORD PTR [rsp+0x38],rax
  409b16:	mov    cl,0x3
  409b18:	call   QWORD PTR [r9+0x38]
  409b1c:	mov    rax,QWORD PTR [rsp+0x38]
  409b21:	add    rsp,0x90
  409b28:	pop    rdi
  409b29:	ret    
  409b2a:	nop    WORD PTR [rax+rax*1+0x0]
  409b30:	push   rbx
  409b31:	sub    rsp,0x40
  409b35:	cmp    rcx,0x2
  409b39:	mov    rbx,rdx
  409b3c:	je     0x409b90
  409b3e:	cmp    rcx,0x3
  409b42:	je     0x409b70
  409b44:	cmp    rcx,0x1
  409b48:	je     0x409b60
  409b4a:	xor    eax,eax
  409b4c:	test   BYTE PTR [rdx+0x10],0x8
  409b50:	je     0x409bf0
  409b56:	add    rsp,0x40
  409b5a:	pop    rbx
  409b5b:	ret    
  409b5c:	nop    DWORD PTR [rax+0x0]
  409b60:	call   0x403ff0
  409b65:	xor    eax,eax
  409b67:	add    rsp,0x40
  409b6b:	pop    rbx
  409b6c:	ret    
  409b6d:	nop    DWORD PTR [rax]
  409b70:	mov    rax,QWORD PTR [rdx+0x18]
  409b74:	cmp    r9d,eax
  409b77:	jbe    0x409be0
  409b79:	mov    eax,eax
  409b7b:	mov    rax,QWORD PTR [r8+rax*8]
  409b7f:	mov    QWORD PTR [rdx+0x18],rax
  409b83:	xor    eax,eax
  409b85:	add    rsp,0x40
  409b89:	pop    rbx
  409b8a:	ret    
  409b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  409b90:	mov    rbx,QWORD PTR [rdx+0x18]
  409b94:	cmp    r9d,ebx
  409b97:	ja     0x409bb0
  409b99:	lea    rcx,[rip+0x1a084]        # 0x423c24
  409ba0:	mov    edx,ebx
  409ba2:	call   0x403f60
  409ba7:	xor    eax,eax
  409ba9:	add    rsp,0x40
  409bad:	pop    rbx
  409bae:	ret    
  409baf:	nop
  409bb0:	mov    QWORD PTR [rsp+0x38],r8
  409bb5:	mov    ebx,ebx
  409bb7:	call   QWORD PTR [rip+0x25dcf]        # 0x42f98c
  409bbd:	mov    r8,QWORD PTR [rsp+0x38]
  409bc2:	lea    rdx,[rax+0x30]
  409bc6:	mov    rcx,QWORD PTR [r8+rbx*8]
  409bca:	call   0x41d8b8
  409bcf:	xor    eax,eax
  409bd1:	add    rsp,0x40
  409bd5:	pop    rbx
  409bd6:	ret    
  409bd7:	nop    WORD PTR [rax+rax*1+0x0]
  409be0:	lea    rax,[rip+0x1a048]        # 0x423c2f
  409be7:	jmp    0x409b56
  409bec:	nop    DWORD PTR [rax+0x0]
  409bf0:	mov    DWORD PTR [rsp+0x20],r9d
  409bf5:	mov    r9,r8
  409bf8:	mov    r8,rdx
  409bfb:	mov    rdx,rcx
  409bfe:	mov    rcx,QWORD PTR [rbx+0x18]
  409c02:	call   0x404320
  409c07:	test   BYTE PTR [rbx+0x10],0x40
  409c0b:	je     0x409b56
  409c11:	mov    rcx,QWORD PTR [rbx+0x18]
  409c15:	mov    QWORD PTR [rsp+0x38],rax
  409c1a:	call   0x41d8a8
  409c1f:	and    DWORD PTR [rbx+0x10],0xffffffbf
  409c23:	mov    QWORD PTR [rbx+0x18],0x0
  409c2b:	mov    rax,QWORD PTR [rsp+0x38]
  409c30:	jmp    0x409b56
  409c35:	nop
  409c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c40:	push   rsi
  409c41:	push   rbx
  409c42:	sub    rsp,0x28
  409c46:	mov    rsi,QWORD PTR [rcx+0x18]
  409c4a:	mov    rbx,rcx
  409c4d:	mov    rdx,rcx
  409c50:	mov    ecx,0x3
  409c55:	call   QWORD PTR [rbx+0x38]
  409c58:	mov    rax,QWORD PTR [rbx+0x18]
  409c5c:	mov    QWORD PTR [rbx+0x18],rsi
  409c60:	add    rsp,0x28
  409c64:	pop    rbx
  409c65:	pop    rsi
  409c66:	ret    
  409c67:	nop    WORD PTR [rax+rax*1+0x0]
  409c70:	push   r15
  409c72:	push   r14
  409c74:	push   r13
  409c76:	push   r12
  409c78:	push   rbp
  409c79:	push   rdi
  409c7a:	push   rsi
  409c7b:	push   rbx
  409c7c:	sub    rsp,0xe8
  409c83:	cmp    rcx,0x2
  409c87:	mov    r13,rcx
  409c8a:	mov    r12,rdx
  409c8d:	mov    rbx,r8
  409c90:	mov    ebp,r9d
  409c93:	je     0x409f31
  409c99:	cmp    rcx,0x3
  409c9d:	je     0x409e60
  409ca3:	cmp    rcx,0x1
  409ca7:	je     0x409e40
  409cad:	test   BYTE PTR [rdx+0x10],0x8
  409cb1:	jne    0x409e4b
  409cb7:	mov    rax,QWORD PTR [rip+0x227e2]        # 0x42c4a0
  409cbe:	mov    r15,QWORD PTR [rdx+0x18]
  409cc2:	mov    rsi,QWORD PTR [rdx+0x20]
  409cc6:	test   rax,rax
  409cc9:	jne    0x409cd4
  409ccb:	jmp    0x40a250
  409cd0:	add    r15,0x1
  409cd4:	movzx  ecx,BYTE PTR [r15]
  409cd8:	cmp    BYTE PTR [rax+rcx*1],0x0
  409cdc:	jne    0x409cd0
  409cde:	test   cl,cl
  409ce0:	je     0x40a020
  409ce6:	cmp    cl,0x3d
  409ce9:	mov    QWORD PTR [rsp+0x30],rsi
  409cee:	je     0x40a1e0
  409cf4:	cmp    cl,0x5e
  409cf7:	je     0x409fd4
  409cfd:	cmp    cl,0x2c
  409d00:	je     0x40a020
  409d06:	mov    BYTE PTR [rsp+0x4f],0x0
  409d0b:	lea    rax,[rsp+0x58]
  409d10:	movzx  edx,BYTE PTR [r15]
  409d14:	mov    QWORD PTR [rsp+0x38],rax
  409d19:	lea    rax,[rsp+0x60]
  409d1e:	mov    QWORD PTR [rsp+0x40],rax
  409d23:	test   dl,dl
  409d25:	je     0x40a191
  409d2b:	cmp    dl,0x2c
  409d2e:	je     0x40a0d0
  409d34:	jg     0x40a0b0
  409d3a:	cmp    dl,0x21
  409d3d:	je     0x40a120
  409d43:	cmp    dl,0x2b
  409d46:	jne    0x40a0be
  409d4c:	xor    r14d,r14d
  409d4f:	mov    rax,QWORD PTR [rip+0x2274a]        # 0x42c4a0
  409d56:	lea    rsi,[r15+0x1]
  409d5a:	test   rax,rax
  409d5d:	je     0x40a1c7
  409d63:	movzx  edx,BYTE PTR [r15+0x1]
  409d68:	mov    r15,rsi
  409d6b:	cmp    BYTE PTR [rax+rdx*1],0x0
  409d6f:	je     0x409d7f
  409d71:	add    r15,0x1
  409d75:	movzx  edx,BYTE PTR [r15]
  409d79:	cmp    BYTE PTR [rax+rdx*1],0x0
  409d7d:	jne    0x409d71
  409d7f:	mov    rax,QWORD PTR [rip+0x2280a]        # 0x42c590
  409d86:	test   rax,rax
  409d89:	je     0x40a173
  409d8f:	movzx  edx,BYTE PTR [r15]
  409d93:	test   dl,dl
  409d95:	je     0x40a191
  409d9b:	cmp    BYTE PTR [rax+rdx*1],0x0
  409d9f:	jne    0x40a191
  409da5:	mov    rcx,r15
  409da8:	jmp    0x409db6
  409daa:	nop    WORD PTR [rax+rax*1+0x0]
  409db0:	cmp    BYTE PTR [rax+rdx*1],0x0
  409db4:	jne    0x409dc1
  409db6:	add    rcx,0x1
  409dba:	movzx  edx,BYTE PTR [rcx]
  409dbd:	test   dl,dl
  409dbf:	jne    0x409db0
  409dc1:	mov    r11d,ecx
  409dc4:	sub    r11d,r15d
  409dc7:	test   r11d,r11d
  409dca:	je     0x40a191
  409dd0:	cmp    r11d,0x3
  409dd4:	je     0x40a140
  409dda:	cmp    r11d,0x4
  409dde:	jne    0x40a030
  409de4:	lea    rdi,[rip+0x19d30]        # 0x423b1b
  409deb:	mov    ecx,0x4
  409df0:	mov    rsi,r15
  409df3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409df5:	jne    0x40a030
  409dfb:	add    r15,0x4
  409dff:	test   r14b,r14b
  409e02:	jne    0x409e10
  409e04:	mov    QWORD PTR [rsp+0x30],0x0
  409e0d:	nop    DWORD PTR [rax]
  409e10:	mov    rax,QWORD PTR [rip+0x22689]        # 0x42c4a0
  409e17:	test   rax,rax
  409e1a:	jne    0x409e25
  409e1c:	jmp    0x40a182
  409e21:	add    r15,0x1
  409e25:	movzx  ecx,BYTE PTR [r15]
  409e29:	cmp    BYTE PTR [rax+rcx*1],0x0
  409e2d:	mov    rdx,rcx
  409e30:	jne    0x409e21
  409e32:	jmp    0x409d23
  409e37:	nop    WORD PTR [rax+rax*1+0x0]
  409e40:	mov    ecx,0x1
  409e45:	call   0x403ff0
  409e4a:	nop
  409e4b:	add    rsp,0xe8
  409e52:	pop    rbx
  409e53:	pop    rsi
  409e54:	pop    rdi
  409e55:	pop    rbp
  409e56:	pop    r12
  409e58:	pop    r13
  409e5a:	pop    r14
  409e5c:	pop    r15
  409e5e:	ret    
  409e5f:	nop
  409e60:	mov    eax,0x1
  409e65:	mov    ecx,r9d
  409e68:	shl    eax,cl
  409e6a:	lea    r13d,[rax-0x1]
  409e6e:	mov    r14,r13
  409e71:	and    r14,QWORD PTR [rdx+0x20]
  409e75:	je     0x40a1d6
  409e7b:	mov    rsi,r8
  409e7e:	mov    edi,0x1
  409e83:	xor    r15d,r15d
  409e86:	jmp    0x409e99
  409e88:	nop    DWORD PTR [rax+rax*1+0x0]
  409e90:	add    rsi,0x8
  409e94:	shr    r14,1
  409e97:	je     0x409eb5
  409e99:	test   r14b,0x1
  409e9d:	je     0x409eac
  409e9f:	mov    rcx,QWORD PTR [rsi]
  409ea2:	call   0x41d7f8
  409ea7:	lea    rdi,[rdi+rax*1+0x4]
  409eac:	add    r15d,0x1
  409eb0:	cmp    ebp,r15d
  409eb3:	ja     0x409e90
  409eb5:	mov    rcx,rdi
  409eb8:	mov    rbp,r13
  409ebb:	call   0x405990
  409ec0:	and    rbp,QWORD PTR [r12+0x20]
  409ec5:	mov    r14,rax
  409ec8:	mov    QWORD PTR [r12+0x18],rax
  409ecd:	je     0x409fc0
  409ed3:	xor    r12d,r12d
  409ed6:	jmp    0x409ef4
  409ed8:	nop    DWORD PTR [rax+rax*1+0x0]
  409ee0:	mov    edx,0x2b20
  409ee5:	lea    r14,[rax+0x3]
  409ee9:	mov    BYTE PTR [rax+0x2],0x20
  409eed:	mov    WORD PTR [rax],dx
  409ef0:	add    r12d,0x1
  409ef4:	mov    eax,ebp
  409ef6:	shr    rbp,1
  409ef9:	and    eax,0x1
  409efc:	test   eax,eax
  409efe:	je     0x409ef0
  409f00:	mov    eax,r12d
  409f03:	mov    r13,QWORD PTR [rbx+rax*8]
  409f07:	mov    rcx,r13
  409f0a:	call   0x41d7f8
  409f0f:	mov    rdx,r13
  409f12:	mov    r8,rax
  409f15:	mov    rcx,r14
  409f18:	mov    rsi,rax
  409f1b:	call   0x41d860
  409f20:	test   rbp,rbp
  409f23:	lea    rax,[r14+rsi*1]
  409f27:	jne    0x409ee0
  409f29:	mov    BYTE PTR [rax],0x0
  409f2c:	jmp    0x409e4b
  409f31:	mov    eax,0x1
  409f36:	mov    ecx,r9d
  409f39:	xor    r13d,r13d
  409f3c:	shl    rax,cl
  409f3f:	xor    edx,edx
  409f41:	mov    rsi,QWORD PTR [rip+0x25a44]        # 0x42f98c
  409f48:	sub    rax,0x1
  409f4c:	and    rax,QWORD PTR [r12+0x20]
  409f51:	mov    r14,rsi
  409f54:	mov    r12,rax
  409f57:	jne    0x409f8b
  409f59:	jmp    0x409e4b
  409f5e:	xchg   ax,ax
  409f60:	call   rdi
  409f62:	mov    rcx,QWORD PTR [rbx]
  409f65:	lea    rdx,[rax+0x30]
  409f69:	call   0x41d8b8
  409f6e:	mov    rdx,r15
  409f71:	add    r13d,0x1
  409f75:	cmp    ebp,r13d
  409f78:	jbe    0x409e4b
  409f7e:	add    rbx,0x8
  409f82:	shr    r12,1
  409f85:	je     0x409e4b
  409f8b:	test   r12b,0x1
  409f8f:	je     0x409f71
  409f91:	test   rdx,rdx
  409f94:	lea    r15,[rdx+0x1]
  409f98:	mov    rdi,rsi
  409f9b:	je     0x409f60
  409f9d:	call   r14
  409fa0:	lea    rcx,[rip+0x19d35]        # 0x423cdc
  409fa7:	lea    r9,[rax+0x30]
  409fab:	mov    r8d,0x3
  409fb1:	mov    edx,0x1
  409fb6:	mov    rdi,r14
  409fb9:	call   0x41d890
  409fbe:	jmp    0x409f60
  409fc0:	mov    BYTE PTR [rax],0x0
  409fc3:	jmp    0x409e4b
  409fc8:	mov    r15,rsi
  409fcb:	mov    QWORD PTR [rsp+0x30],0x0
  409fd4:	mov    rax,QWORD PTR [rip+0x224c5]        # 0x42c4a0
  409fdb:	lea    rsi,[r15+0x1]
  409fdf:	test   rax,rax
  409fe2:	je     0x40a25f
  409fe8:	movzx  ecx,BYTE PTR [r15+0x1]
  409fed:	mov    r15,rsi
  409ff0:	cmp    BYTE PTR [rax+rcx*1],0x0
  409ff4:	mov    rdx,rcx
  409ff7:	je     0x40a011
  409ff9:	nop    DWORD PTR [rax+0x0]
  40a000:	add    r15,0x1
  40a004:	movzx  ecx,BYTE PTR [r15]
  40a008:	cmp    BYTE PTR [rax+rcx*1],0x0
  40a00c:	mov    rdx,rcx
  40a00f:	jne    0x40a000
  40a011:	cmp    dl,0x2c
  40a014:	mov    BYTE PTR [rsp+0x4f],0x1
  40a019:	jne    0x409d0b
  40a01f:	nop
  40a020:	mov    QWORD PTR [r12+0x20],0x0
  40a029:	jmp    0x409e4b
  40a02e:	xchg   ax,ax
  40a030:	mov    rdx,QWORD PTR [rsp+0x38]
  40a035:	xor    r8d,r8d
  40a038:	mov    rcx,r15
  40a03b:	mov    DWORD PTR [rsp+0x48],r11d
  40a040:	call   0x41d7c0
  40a045:	movsxd rdi,DWORD PTR [rsp+0x48]
  40a04a:	mov    rdx,QWORD PTR [rsp+0x58]
  40a04f:	mov    eax,eax
  40a051:	lea    rsi,[r15+rdi*1]
  40a055:	cmp    rsi,rdx
  40a058:	je     0x40a097
  40a05a:	mov    r15,QWORD PTR [rsp+0x40]
  40a05f:	mov    r8,rdi
  40a062:	mov    rcx,r15
  40a065:	call   0x41d860
  40a06a:	mov    BYTE PTR [rsp+rdi*1+0x60],0x0
  40a06f:	mov    r9,rbx
  40a072:	mov    DWORD PTR [rsp+0x20],ebp
  40a076:	mov    r8,r12
  40a079:	mov    rdx,r13
  40a07c:	mov    rcx,r15
  40a07f:	call   0x404320
  40a084:	cmp    ebp,eax
  40a086:	jbe    0x40a020
  40a088:	mov    ecx,eax
  40a08a:	mov    edx,0x1
  40a08f:	shl    edx,cl
  40a091:	test   edx,edx
  40a093:	mov    eax,edx
  40a095:	je     0x40a020
  40a097:	test   r14b,r14b
  40a09a:	je     0x40a130
  40a0a0:	not    rax
  40a0a3:	and    QWORD PTR [rsp+0x30],rax
  40a0a8:	mov    r15,rsi
  40a0ab:	jmp    0x409e10
  40a0b0:	cmp    dl,0x2d
  40a0b3:	je     0x40a120
  40a0b5:	cmp    dl,0x7c
  40a0b8:	je     0x409d4c
  40a0be:	xor    r14d,r14d
  40a0c1:	jmp    0x409d7f
  40a0c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a0d0:	mov    rax,QWORD PTR [rip+0x223c9]        # 0x42c4a0
  40a0d7:	lea    rsi,[r15+0x1]
  40a0db:	test   rax,rax
  40a0de:	je     0x40a241
  40a0e4:	movzx  ecx,BYTE PTR [r15+0x1]
  40a0e9:	cmp    BYTE PTR [rax+rcx*1],0x0
  40a0ed:	mov    rdx,rcx
  40a0f0:	je     0x40a102
  40a0f2:	add    rsi,0x1
  40a0f6:	movzx  ecx,BYTE PTR [rsi]
  40a0f9:	cmp    BYTE PTR [rax+rcx*1],0x0
  40a0fd:	mov    rdx,rcx
  40a100:	jne    0x40a0f2
  40a102:	cmp    dl,0x7c
  40a105:	je     0x40a020
  40a10b:	cmp    dl,0x2c
  40a10e:	je     0x40a020
  40a114:	movzx  edx,BYTE PTR [rsi]
  40a117:	mov    r15,rsi
  40a11a:	jmp    0x409d23
  40a11f:	nop
  40a120:	mov    r14d,0x1
  40a126:	jmp    0x409d4f
  40a12b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a130:	or     QWORD PTR [rsp+0x30],rax
  40a135:	jmp    0x40a0a8
  40a13a:	nop    WORD PTR [rax+rax*1+0x0]
  40a140:	lea    rdi,[rip+0x19a7a]        # 0x423bc1
  40a147:	mov    ecx,0x3
  40a14c:	mov    rsi,r15
  40a14f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a151:	jne    0x40a030
  40a157:	add    r15,0x3
  40a15b:	test   r14b,r14b
  40a15e:	jne    0x409e04
  40a164:	mov    eax,0xffffffff
  40a169:	mov    QWORD PTR [rsp+0x30],rax
  40a16e:	jmp    0x409e10
  40a173:	mov    ecx,0x2a
  40a178:	call   0x4054a0
  40a17d:	jmp    0x409d8f
  40a182:	mov    ecx,0xc
  40a187:	call   0x4054a0
  40a18c:	jmp    0x409e25
  40a191:	cmp    BYTE PTR [rsp+0x4f],0x0
  40a196:	je     0x40a1a2
  40a198:	mov    eax,0xffffffff
  40a19d:	xor    QWORD PTR [rsp+0x30],rax
  40a1a2:	cmp    ebp,0x3f
  40a1a5:	ja     0x40a1b8
  40a1a7:	mov    eax,0x1
  40a1ac:	mov    ecx,ebp
  40a1ae:	shl    eax,cl
  40a1b0:	sub    eax,0x1
  40a1b3:	and    QWORD PTR [rsp+0x30],rax
  40a1b8:	mov    rax,QWORD PTR [rsp+0x30]
  40a1bd:	mov    QWORD PTR [r12+0x20],rax
  40a1c2:	jmp    0x409e4b
  40a1c7:	mov    ecx,0xc
  40a1cc:	call   0x4054a0
  40a1d1:	jmp    0x409d63
  40a1d6:	mov    edi,0x1
  40a1db:	jmp    0x409eb5
  40a1e0:	mov    rax,QWORD PTR [rip+0x222b9]        # 0x42c4a0
  40a1e7:	lea    rsi,[r15+0x1]
  40a1eb:	test   rax,rax
  40a1ee:	je     0x40a26e
  40a1f0:	movzx  ecx,BYTE PTR [r15+0x1]
  40a1f5:	cmp    BYTE PTR [rax+rcx*1],0x0
  40a1f9:	mov    rdx,rcx
  40a1fc:	je     0x40a210
  40a1fe:	xchg   ax,ax
  40a200:	add    rsi,0x1
  40a204:	movzx  ecx,BYTE PTR [rsi]
  40a207:	cmp    BYTE PTR [rax+rcx*1],0x0
  40a20b:	mov    rdx,rcx
  40a20e:	jne    0x40a200
  40a210:	cmp    dl,0x3d
  40a213:	je     0x40a020
  40a219:	cmp    dl,0x5e
  40a21c:	je     0x409fc8
  40a222:	cmp    dl,0x2c
  40a225:	je     0x40a020
  40a22b:	mov    r15,rsi
  40a22e:	mov    BYTE PTR [rsp+0x4f],0x0
  40a233:	mov    QWORD PTR [rsp+0x30],0x0
  40a23c:	jmp    0x409d0b
  40a241:	mov    ecx,0xc
  40a246:	call   0x4054a0
  40a24b:	jmp    0x40a0e4
  40a250:	mov    ecx,0xc
  40a255:	call   0x4054a0
  40a25a:	jmp    0x409cd4
  40a25f:	mov    ecx,0xc
  40a264:	call   0x4054a0
  40a269:	jmp    0x409fe8
  40a26e:	mov    ecx,0xc
  40a273:	call   0x4054a0
  40a278:	jmp    0x40a1f0
  40a27d:	nop    DWORD PTR [rax]
  40a280:	push   r15
  40a282:	push   r14
  40a284:	push   r13
  40a286:	push   r12
  40a288:	push   rbp
  40a289:	push   rdi
  40a28a:	push   rsi
  40a28b:	push   rbx
  40a28c:	sub    rsp,0x68
  40a290:	cmp    rcx,0xf
  40a294:	mov    rsi,rcx
  40a297:	mov    rbx,rdx
  40a29a:	mov    edi,r8d
  40a29d:	mov    rbp,r9
  40a2a0:	ja     0x40a2c0
  40a2a2:	cmp    rcx,0x1
  40a2a6:	je     0x40a3d0
  40a2ac:	add    rsp,0x68
  40a2b0:	pop    rbx
  40a2b1:	pop    rsi
  40a2b2:	pop    rdi
  40a2b3:	pop    rbp
  40a2b4:	pop    r12
  40a2b6:	pop    r13
  40a2b8:	pop    r14
  40a2ba:	pop    r15
  40a2bc:	ret    
  40a2bd:	nop    DWORD PTR [rax]
  40a2c0:	test   BYTE PTR [rdx+0x10],0x8
  40a2c4:	je     0x40a2e0
  40a2c6:	mov    rcx,QWORD PTR [rdx+0x20]
  40a2ca:	test   rcx,rcx
  40a2cd:	je     0x40a2ac
  40a2cf:	call   0x41d8a8
  40a2d4:	jmp    0x40a2ac
  40a2d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a2e0:	mov    r13,QWORD PTR [rdx+0x18]
  40a2e4:	mov    r14,QWORD PTR [rip+0x256f1]        # 0x42f9dc
  40a2eb:	call   r14
  40a2ee:	mov    DWORD PTR [rax],0x0
  40a2f4:	mov    eax,edi
  40a2f6:	and    eax,0x3
  40a2f9:	cmp    eax,0x1
  40a2fc:	je     0x40a445
  40a302:	cmp    eax,0x2
  40a305:	je     0x40a403
  40a30b:	mov    edx,0x5c
  40a310:	mov    rcx,r13
  40a313:	call   0x41d7d8
  40a318:	test   rax,rax
  40a31b:	je     0x40a37c
  40a31d:	sub    rax,r13
  40a320:	lea    rcx,[rax+0x1]
  40a324:	mov    r12,rax
  40a327:	call   0x405990
  40a32c:	mov    r8,r12
  40a32f:	mov    r15,rax
  40a332:	mov    rdx,r13
  40a335:	mov    rcx,rax
  40a338:	call   0x41d860
  40a33d:	mov    BYTE PTR [r15+r12*1],0x0
  40a342:	lea    rdx,[rsp+0x20]
  40a347:	mov    rcx,r15
  40a34a:	call   QWORD PTR [rip+0x258ac]        # 0x42fbfc
  40a350:	test   eax,eax
  40a352:	jne    0x40a506
  40a358:	call   r14
  40a35b:	mov    DWORD PTR [rax],0x16
  40a361:	movzx  eax,WORD PTR [rsp+0x26]
  40a366:	and    ax,0xf000
  40a36a:	cmp    ax,0x4000
  40a36e:	jne    0x40a506
  40a374:	mov    rcx,r15
  40a377:	call   0x41d8a8
  40a37c:	and    edi,0x30
  40a37f:	cmp    edi,0x10
  40a382:	je     0x40a475
  40a388:	cmp    edi,0x20
  40a38b:	jne    0x40a2ac
  40a391:	mov    rcx,QWORD PTR [rbx+0x18]
  40a395:	mov    rdx,rbp
  40a398:	call   0x41d8d0
  40a39d:	test   rax,rax
  40a3a0:	mov    rdi,rax
  40a3a3:	je     0x40a519
  40a3a9:	mov    edx,DWORD PTR [rbx+0x10]
  40a3ac:	test   dl,0x40
  40a3af:	je     0x40a4c2
  40a3b5:	mov    rax,QWORD PTR [rbx+0x18]
  40a3b9:	mov    QWORD PTR [rbx+0x20],rax
  40a3bd:	and    edx,0xffffffbf
  40a3c0:	mov    QWORD PTR [rbx+0x18],rdi
  40a3c4:	mov    DWORD PTR [rbx+0x10],edx
  40a3c7:	jmp    0x40a2ac
  40a3cc:	nop    DWORD PTR [rax+0x0]
  40a3d0:	and    edi,0x3
  40a3d3:	cmp    edi,0x1
  40a3d6:	je     0x40a4a4
  40a3dc:	cmp    edi,0x2
  40a3df:	jne    0x40a2ac
  40a3e5:	mov    ecx,DWORD PTR [rip+0x21f45]        # 0x42c330
  40a3eb:	mov    rdx,QWORD PTR [rip+0x21f16]        # 0x42c308
  40a3f2:	add    rcx,QWORD PTR [rip+0x15cb7]        # 0x4200b0
  40a3f9:	call   0x41d8b8
  40a3fe:	jmp    0x40a2ac
  40a403:	lea    rdx,[rsp+0x20]
  40a408:	mov    rcx,r13
  40a40b:	call   QWORD PTR [rip+0x257eb]        # 0x42fbfc
  40a411:	test   eax,eax
  40a413:	je     0x40a421
  40a415:	call   r14
  40a418:	cmp    DWORD PTR [rax],0x2
  40a41b:	je     0x40a30b
  40a421:	call   r14
  40a424:	cmp    DWORD PTR [rax],0x0
  40a427:	jne    0x40a432
  40a429:	call   r14
  40a42c:	mov    DWORD PTR [rax],0x16
  40a432:	mov    rcx,QWORD PTR [rsi+0x28]
  40a436:	lea    rdx,[rip+0x18693]        # 0x422ad0
  40a43d:	mov    r8,r13
  40a440:	call   0x404510
  40a445:	lea    rdx,[rsp+0x20]
  40a44a:	mov    rcx,r13
  40a44d:	call   QWORD PTR [rip+0x257a9]        # 0x42fbfc
  40a453:	test   eax,eax
  40a455:	jne    0x40a432
  40a457:	call   r14
  40a45a:	mov    DWORD PTR [rax],0x16
  40a460:	movzx  eax,WORD PTR [rsp+0x26]
  40a465:	and    ax,0xf000
  40a469:	cmp    ax,0x8000
  40a46d:	je     0x40a37c
  40a473:	jmp    0x40a432
  40a475:	mov    rcx,QWORD PTR [rbx+0x18]
  40a479:	mov    edx,ebp
  40a47b:	call   0x41d758
  40a480:	test   eax,eax
  40a482:	mov    edi,eax
  40a484:	js     0x40a4f2
  40a486:	mov    edx,DWORD PTR [rbx+0x10]
  40a489:	test   dl,0x40
  40a48c:	je     0x40a4e0
  40a48e:	mov    rax,QWORD PTR [rbx+0x18]
  40a492:	mov    QWORD PTR [rbx+0x20],rax
  40a496:	and    edx,0xffffffbf
  40a499:	mov    DWORD PTR [rbx+0x18],edi
  40a49c:	mov    DWORD PTR [rbx+0x10],edx
  40a49f:	jmp    0x40a2ac
  40a4a4:	mov    ecx,DWORD PTR [rip+0x21e86]        # 0x42c330
  40a4aa:	mov    rdx,QWORD PTR [rip+0x21e57]        # 0x42c308
  40a4b1:	add    rcx,QWORD PTR [rip+0x15c00]        # 0x4200b8
  40a4b8:	call   0x41d8b8
  40a4bd:	jmp    0x40a2ac
  40a4c2:	mov    rcx,QWORD PTR [rbx+0x18]
  40a4c6:	call   0x405700
  40a4cb:	mov    edx,DWORD PTR [rbx+0x10]
  40a4ce:	mov    QWORD PTR [rbx+0x20],rax
  40a4d2:	jmp    0x40a3bd
  40a4d7:	nop    WORD PTR [rax+rax*1+0x0]
  40a4e0:	mov    rcx,QWORD PTR [rbx+0x18]
  40a4e4:	call   0x405700
  40a4e9:	mov    edx,DWORD PTR [rbx+0x10]
  40a4ec:	mov    QWORD PTR [rbx+0x20],rax
  40a4f0:	jmp    0x40a496
  40a4f2:	mov    rcx,QWORD PTR [rsi+0x28]
  40a4f6:	mov    r8,QWORD PTR [rbx+0x18]
  40a4fa:	lea    rdx,[rip+0x185d4]        # 0x422ad5
  40a501:	call   0x404510
  40a506:	mov    rcx,QWORD PTR [rsi+0x28]
  40a50a:	lea    rdx,[rip+0x185bf]        # 0x422ad0
  40a511:	mov    r8,r15
  40a514:	call   0x404510
  40a519:	mov    rcx,QWORD PTR [rsi+0x28]
  40a51d:	mov    r8,QWORD PTR [rbx+0x18]
  40a521:	lea    rdx,[rip+0x185b2]        # 0x422ada
  40a528:	call   0x404510
  40a52d:	nop
  40a52e:	xchg   ax,ax
  40a530:	push   r15
  40a532:	push   r14
  40a534:	push   r13
  40a536:	push   r12
  40a538:	push   rbp
  40a539:	push   rdi
  40a53a:	push   rsi
  40a53b:	push   rbx
  40a53c:	sub    rsp,0x38
  40a540:	mov    edi,edx
  40a542:	mov    rbp,rcx
  40a545:	mov    rcx,r8
  40a548:	mov    rbx,r8
  40a54b:	mov    r12,r9
  40a54e:	call   0x41d7f8
  40a553:	movsxd rdx,edi
  40a556:	cmp    rax,rdx
  40a559:	setae  sil
  40a55d:	test   rax,rax
  40a560:	sete   al
  40a563:	or     sil,al
  40a566:	jne    0x40a5a5
  40a568:	movzx  r10d,BYTE PTR [rbx]
  40a56c:	cmp    r10b,0x24
  40a570:	je     0x40a5c0
  40a572:	mov    r9d,r10d
  40a575:	xor    eax,eax
  40a577:	jmp    0x40a594
  40a579:	nop    DWORD PTR [rax+0x0]
  40a580:	add    rax,0x1
  40a584:	mov    r8d,edi
  40a587:	sub    r8d,eax
  40a58a:	test   r8d,r8d
  40a58d:	jle    0x40a5a5
  40a58f:	movzx  r9d,BYTE PTR [rbx+rax*1]
  40a594:	test   r9b,r9b
  40a597:	mov    BYTE PTR [rbp+rax*1+0x0],r9b
  40a59c:	jne    0x40a580
  40a59e:	mov    esi,0x1
  40a5a3:	jmp    0x40a5a7
  40a5a5:	xor    esi,esi
  40a5a7:	mov    eax,esi
  40a5a9:	add    rsp,0x38
  40a5ad:	pop    rbx
  40a5ae:	pop    rsi
  40a5af:	pop    rdi
  40a5b0:	pop    rbp
  40a5b1:	pop    r12
  40a5b3:	pop    r13
  40a5b5:	pop    r14
  40a5b7:	pop    r15
  40a5b9:	ret    
  40a5ba:	nop    WORD PTR [rax+rax*1+0x0]
  40a5c0:	movzx  eax,BYTE PTR [rbx+0x1]
  40a5c4:	cmp    al,0x24
  40a5c6:	je     0x40a6be
  40a5cc:	cmp    al,0x40
  40a5ce:	je     0x40a68a
  40a5d4:	test   al,al
  40a5d6:	je     0x40a5a7
  40a5d8:	cmp    al,0x7f
  40a5da:	ja     0x40a5a7
  40a5dc:	lea    rcx,[rip+0x1c0dd]        # 0x4266c0
  40a5e3:	movzx  edx,al
  40a5e6:	test   DWORD PTR [rcx+rdx*4],0x3b0060
  40a5ed:	je     0x40a5a7
  40a5ef:	add    rbx,0x1
  40a5f3:	mov    r8,rbp
  40a5f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a600:	add    r8,0x1
  40a604:	add    rbx,0x1
  40a608:	mov    BYTE PTR [r8-0x1],al
  40a60c:	movzx  eax,BYTE PTR [rbx]
  40a60f:	cmp    al,0x7f
  40a611:	ja     0x40a61f
  40a613:	movzx  edx,al
  40a616:	test   DWORD PTR [rcx+rdx*4],0x3b0060
  40a61d:	jne    0x40a600
  40a61f:	cmp    r8,rbp
  40a622:	je     0x40a5a7
  40a624:	mov    BYTE PTR [r8],0x0
  40a628:	mov    rcx,rbp
  40a62b:	call   0x41d888
  40a630:	test   rax,rax
  40a633:	mov    r14,rax
  40a636:	je     0x40a5a7
  40a63c:	mov    rcx,rax
  40a63f:	mov    edi,edi
  40a641:	call   0x41d7f8
  40a646:	mov    rcx,rbx
  40a649:	mov    r13,rax
  40a64c:	call   0x41d7f8
  40a651:	lea    r12,[rax+0x1]
  40a655:	lea    rax,[r12+r13*1]
  40a659:	cmp    rax,rdi
  40a65c:	jae    0x40a5a7
  40a662:	mov    r8,r13
  40a665:	mov    rdx,r14
  40a668:	mov    rcx,rbp
  40a66b:	call   0x41d860
  40a670:	lea    rcx,[rbp+r13*1+0x0]
  40a675:	mov    r8,r12
  40a678:	mov    rdx,rbx
  40a67b:	mov    esi,0x1
  40a680:	call   0x41d860
  40a685:	jmp    0x40a5a7
  40a68a:	mov    r9,QWORD PTR [rip+0x157b7]        # 0x41fe48
  40a691:	cmp    BYTE PTR [r9],0x0
  40a695:	je     0x40a5a5
  40a69b:	add    rbx,0x2
  40a69f:	lea    r8,[rip+0x180b5]        # 0x42275b
  40a6a6:	mov    rcx,rbp
  40a6a9:	mov    QWORD PTR [rsp+0x20],rbx
  40a6ae:	call   0x403f40
  40a6b3:	cmp    edi,eax
  40a6b5:	setg   sil
  40a6b9:	jmp    0x40a5a7
  40a6be:	movzx  eax,BYTE PTR [rbx+0x2]
  40a6c2:	test   al,al
  40a6c4:	je     0x40a766
  40a6ca:	cmp    al,0x5c
  40a6cc:	mov    r15d,0x3
  40a6d2:	jne    0x40a5a7
  40a6d8:	mov    edx,0x5c
  40a6dd:	mov    rcx,r12
  40a6e0:	mov    r14,r12
  40a6e3:	call   0x41d820
  40a6e8:	test   rax,rax
  40a6eb:	je     0x40a771
  40a6f1:	mov    edx,0x5c
  40a6f6:	mov    rcx,r14
  40a6f9:	call   0x41d7d8
  40a6fe:	test   rax,rax
  40a701:	mov    r13,rax
  40a704:	je     0x40a5a7
  40a70a:	movsxd rax,r15d
  40a70d:	sub    r13,r14
  40a710:	mov    edi,edi
  40a712:	add    rbx,rax
  40a715:	add    r13,0x1
  40a719:	mov    rcx,rbx
  40a71c:	call   0x41d7f8
  40a721:	lea    r15,[rax+0x1]
  40a725:	lea    rax,[r15+r13*1]
  40a729:	cmp    rax,rdi
  40a72c:	ja     0x40a5a7
  40a732:	mov    r8,r13
  40a735:	mov    rdx,r14
  40a738:	mov    rcx,rbp
  40a73b:	call   0x41d860
  40a740:	lea    rcx,[rbp+r13*1+0x0]
  40a745:	mov    r8,r15
  40a748:	mov    rdx,rbx
  40a74b:	call   0x41d860
  40a750:	cmp    r12,r14
  40a753:	je     0x40a59e
  40a759:	mov    rcx,r14
  40a75c:	call   0x41d8a8
  40a761:	jmp    0x40a59e
  40a766:	mov    r15d,0x2
  40a76c:	jmp    0x40a6d8
  40a771:	lea    rcx,[rip+0x17faa]        # 0x422722
  40a778:	call   0x41d888
  40a77d:	mov    rdx,r12
  40a780:	mov    rcx,rax
  40a783:	call   0x406900
  40a788:	test   rax,rax
  40a78b:	mov    r14,rax
  40a78e:	jne    0x40a6f1
  40a794:	jmp    0x40a5a7
  40a799:	nop    DWORD PTR [rax+0x0]
  40a7a0:	push   r15
  40a7a2:	push   r14
  40a7a4:	push   r13
  40a7a6:	push   r12
  40a7a8:	push   rbp
  40a7a9:	push   rdi
  40a7aa:	push   rsi
  40a7ab:	push   rbx
  40a7ac:	sub    rsp,0x178
  40a7b3:	mov    rbx,rcx
  40a7b6:	mov    r12,rdx
  40a7b9:	mov    rcx,QWORD PTR [rip+0x15980]        # 0x420140
  40a7c0:	mov    rdx,QWORD PTR [rip+0x21b41]        # 0x42c308
  40a7c7:	mov    r13,r8
  40a7ca:	lea    rsi,[rbx+0x8]
  40a7ce:	lea    rbp,[rsp+0x60]
  40a7d3:	call   0x41d8b8
  40a7d8:	mov    rbx,QWORD PTR [rbx]
  40a7db:	test   rbx,rbx
  40a7de:	je     0x40a8b0
  40a7e4:	lea    r15,[rsp+0x20]
  40a7e9:	mov    r14,QWORD PTR [rip+0x2540c]        # 0x42fbfc
  40a7f0:	jmp    0x40a814
  40a7f2:	mov    rdx,QWORD PTR [rip+0x21b0f]        # 0x42c308
  40a7f9:	add    rsi,0x8
  40a7fd:	mov    ecx,0xa
  40a802:	call   0x41d8c0
  40a807:	mov    rbx,QWORD PTR [rsi-0x8]
  40a80b:	test   rbx,rbx
  40a80e:	je     0x40a8b0
  40a814:	mov    r9,r13
  40a817:	mov    r8,rbx
  40a81a:	mov    edx,0x105
  40a81f:	mov    rcx,rbp
  40a822:	mov    rdi,rbx
  40a825:	call   0x40a530
  40a82a:	test   al,al
  40a82c:	je     0x40a836
  40a82e:	cmp    BYTE PTR [rbx],0x24
  40a831:	mov    rdi,rbp
  40a834:	je     0x40a894
  40a836:	mov    rdx,QWORD PTR [rip+0x158eb]        # 0x420128
  40a83d:	mov    rcx,QWORD PTR [rip+0x21ac4]        # 0x42c308
  40a844:	mov    r8,rbx
  40a847:	call   0x403b50
  40a84c:	cmp    BYTE PTR [r12],0x0
  40a851:	je     0x40a7f2
  40a853:	mov    rdx,r15
  40a856:	mov    rcx,rdi
  40a859:	call   r14
  40a85c:	test   eax,eax
  40a85e:	jne    0x40a7f2
  40a860:	movzx  eax,WORD PTR [rsp+0x26]
  40a865:	and    ax,0xf000
  40a869:	cmp    ax,0x4000
  40a86d:	jne    0x40a7f2
  40a86f:	mov    rdx,QWORD PTR [rip+0x21a92]        # 0x42c308
  40a876:	mov    ecx,0x5c
  40a87b:	call   0x41d8c0
  40a880:	mov    rdx,QWORD PTR [rip+0x21a81]        # 0x42c308
  40a887:	mov    rcx,r12
  40a88a:	call   0x41d8b8
  40a88f:	jmp    0x40a7f2
  40a894:	movzx  eax,BYTE PTR [rbx+0x1]
  40a898:	cmp    al,0x40
  40a89a:	je     0x40a8a0
  40a89c:	cmp    al,0x24
  40a89e:	jne    0x40a836
  40a8a0:	mov    rdi,rbp
  40a8a3:	mov    rbx,rbp
  40a8a6:	jmp    0x40a836
  40a8a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a8b0:	add    rsp,0x178
  40a8b7:	pop    rbx
  40a8b8:	pop    rsi
  40a8b9:	pop    rdi
  40a8ba:	pop    rbp
  40a8bb:	pop    r12
  40a8bd:	pop    r13
  40a8bf:	pop    r14
  40a8c1:	pop    r15
  40a8c3:	ret    
  40a8c4:	xchg   ax,ax
  40a8c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a8d0:	push   r15
  40a8d2:	push   r14
  40a8d4:	push   r13
  40a8d6:	push   r12
  40a8d8:	push   rbp
  40a8d9:	push   rdi
  40a8da:	push   rsi
  40a8db:	push   rbx
  40a8dc:	sub    rsp,0xc8
  40a8e3:	mov    rax,QWORD PTR [rip+0x152ce]        # 0x41fbb8
  40a8ea:	mov    rsi,rcx
  40a8ed:	mov    edx,DWORD PTR [rax+0x78]
  40a8f0:	test   dl,0xf
  40a8f3:	je     0x40acb0
  40a8f9:	mov    rdx,QWORD PTR [rax+0x80]
  40a900:	mov    QWORD PTR [rip+0x21a49],rdx        # 0x42c350
  40a907:	test   BYTE PTR [rax+0x10],0xf
  40a90b:	mov    r12,QWORD PTR [rip+0x2507a]        # 0x42f98c
  40a912:	jne    0x40acd5
  40a918:	cmp    QWORD PTR [rip+0x21a28],0x0        # 0x42c348
  40a920:	je     0x40a935
  40a922:	call   r12
  40a925:	mov    rcx,QWORD PTR [rip+0x21a1c]        # 0x42c348
  40a92c:	lea    rdx,[rax+0x30]
  40a930:	call   0x41d8b8
  40a935:	lea    rdi,[rsp+0x40]
  40a93a:	xor    ecx,ecx
  40a93c:	call   QWORD PTR [rip+0x2511a]        # 0x42fa5c
  40a942:	lea    rcx,[rsp+0x38]
  40a947:	mov    QWORD PTR [rsp+0x38],rax
  40a94c:	call   QWORD PTR [rip+0x250d2]        # 0x42fa24
  40a952:	lea    r8,[rip+0x19408]        # 0x423d61
  40a959:	mov    r9,rax
  40a95c:	mov    edx,0x80
  40a961:	mov    rcx,rdi
  40a964:	call   0x41d800
  40a969:	mov    rax,QWORD PTR [rip+0x15248]        # 0x41fbb8
  40a970:	lea    r8,[rip+0x193e3]        # 0x423d5a
  40a977:	test   BYTE PTR [rax+0x10],0xf
  40a97b:	je     0x40a981
  40a97d:	mov    r8,QWORD PTR [rax+0x18]
  40a981:	cmp    QWORD PTR [rip+0x219bf],0x0        # 0x42c348
  40a989:	je     0x40b0b4
  40a98f:	lea    rdx,[rip+0x1aa54]        # 0x4253ea
  40a996:	lea    rcx,[rip+0x1a803]        # 0x4251a0
  40a99d:	mov    r9,rdi
  40a9a0:	xor    ebx,ebx
  40a9a2:	call   0x403f60
  40a9a7:	mov    rdx,QWORD PTR [rsi+0x30]
  40a9ab:	lea    rcx,[rip+0x194bf]        # 0x423e71
  40a9b2:	call   0x403f60
  40a9b7:	mov    rbp,QWORD PTR [rsi+0x30]
  40a9bb:	mov    r13,QWORD PTR [rip+0x2520a]        # 0x42fbcc
  40a9c2:	movsx  ecx,BYTE PTR [rbp+rbx*1+0x0]
  40a9c7:	call   r13
  40a9ca:	mov    BYTE PTR [rdi+rbx*1],al
  40a9cd:	add    rbx,0x1
  40a9d1:	test   al,al
  40a9d3:	jne    0x40a9c2
  40a9d5:	lea    r8,[rip+0x182c7]        # 0x422ca3
  40a9dc:	lea    rcx,[rip+0x19576]        # 0x423f59
  40a9e3:	mov    rdx,rbp
  40a9e6:	mov    QWORD PTR [rsi+0x20],rdi
  40a9ea:	mov    QWORD PTR [rsi+0x28],rdi
  40a9ee:	call   0x403f60
  40a9f3:	mov    rdx,QWORD PTR [rsi+0x30]
  40a9f7:	lea    r8,[rip+0x182af]        # 0x422cad
  40a9fe:	lea    rcx,[rip+0x19554]        # 0x423f59
  40aa05:	call   0x403f60
  40aa0a:	mov    rbx,QWORD PTR [rsi+0x78]
  40aa0e:	lea    rdx,[rip+0x2dfb]        # 0x40d810
  40aa15:	mov    eax,DWORD PTR [rsi+0xb0]
  40aa1b:	cmp    QWORD PTR [rbx+0x38],rdx
  40aa1f:	je     0x40aa4f
  40aa21:	cmp    eax,0x1
  40aa24:	jle    0x40aa6a
  40aa26:	sub    eax,0x2
  40aa29:	add    rax,0x1
  40aa2d:	lea    rcx,[rax+rax*2]
  40aa31:	lea    rax,[rax+rcx*4]
  40aa35:	lea    rcx,[rbx+rax*8]
  40aa39:	mov    rax,rbx
  40aa3c:	jmp    0x40aa45
  40aa3e:	xchg   ax,ax
  40aa40:	cmp    rax,rcx
  40aa43:	je     0x40aa6a
  40aa45:	add    rax,0x68
  40aa49:	cmp    QWORD PTR [rax+0x38],rdx
  40aa4d:	jne    0x40aa40
  40aa4f:	mov    rdx,QWORD PTR [rsi+0x30]
  40aa53:	lea    r8,[rip+0x18259]        # 0x422cb3
  40aa5a:	lea    rcx,[rip+0x194f8]        # 0x423f59
  40aa61:	call   0x403f60
  40aa66:	mov    rbx,QWORD PTR [rsi+0x78]
  40aa6a:	mov    eax,DWORD PTR [rsi+0xb4]
  40aa70:	test   eax,eax
  40aa72:	jle    0x40ab40
  40aa78:	sub    eax,0x1
  40aa7b:	lea    r14,[rip+0x19f4a]        # 0x4249cc
  40aa82:	lea    r13,[rip+0x1a8de]        # 0x425367
  40aa89:	add    rax,0x1
  40aa8d:	lea    rdx,[rax+rax*2]
  40aa91:	lea    rax,[rax+rdx*4]
  40aa95:	lea    rbp,[rbx+rax*8]
  40aa99:	jmp    0x40aae6
  40aa9b:	nop    DWORD PTR [rax+rax*1+0x0]
  40aaa0:	cmp    eax,0x4
  40aaa3:	je     0x40aca0
  40aaa9:	cmp    eax,0x5
  40aaac:	jne    0x40ac80
  40aab2:	mov    r9d,DWORD PTR [rbx+0x18]
  40aab6:	lea    r8,[rip+0x17bc7]        # 0x422684
  40aabd:	mov    edx,0x20
  40aac2:	mov    rcx,rdi
  40aac5:	call   0x403f40
  40aaca:	mov    r8,QWORD PTR [rbx+0x48]
  40aace:	mov    r9,rdi
  40aad1:	mov    rdx,QWORD PTR [rsi+0x30]
  40aad5:	mov    rcx,r15
  40aad8:	call   0x403f60
  40aadd:	add    rbx,0x68
  40aae1:	cmp    rbx,rbp
  40aae4:	je     0x40ab40
  40aae6:	mov    eax,DWORD PTR [rbx+0x10]
  40aae9:	test   eax,0x280000
  40aaee:	jne    0x40aadd
  40aaf0:	mov    r8,QWORD PTR [rbx+0x48]
  40aaf4:	test   r8,r8
  40aaf7:	je     0x40aadd
  40aaf9:	cmp    WORD PTR [rbx+0xc],0x1
  40aafe:	mov    r15,r13
  40ab01:	cmova  r15,r14
  40ab05:	and    eax,0xf000
  40ab0a:	shr    eax,0xc
  40ab0d:	cmp    eax,0x3
  40ab10:	je     0x40ac60
  40ab16:	ja     0x40aaa0
  40ab18:	cmp    eax,0x2
  40ab1b:	jne    0x40ac80
  40ab21:	mov    rdx,rbx
  40ab24:	mov    ecx,0x2
  40ab29:	call   QWORD PTR [rbx+0x38]
  40ab2c:	mov    r9,QWORD PTR [rbx+0x18]
  40ab30:	mov    r8,QWORD PTR [rbx+0x48]
  40ab34:	jmp    0x40aad1
  40ab36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ab40:	mov    eax,DWORD PTR [rsi+0x10]
  40ab43:	and    eax,0x3
  40ab46:	cmp    eax,0x2
  40ab49:	je     0x40b074
  40ab4f:	cmp    eax,0x3
  40ab52:	je     0x40af90
  40ab58:	cmp    eax,0x1
  40ab5b:	je     0x40ae10
  40ab61:	call   r12
  40ab64:	lea    rcx,[rip+0x1a102]        # 0x424c6d
  40ab6b:	lea    r9,[rax+0x30]
  40ab6f:	mov    r8d,0x66
  40ab75:	mov    edx,0x1
  40ab7a:	call   0x41d890
  40ab7f:	call   r12
  40ab82:	lea    rcx,[rip+0x1987d]        # 0x424406
  40ab89:	lea    r9,[rax+0x30]
  40ab8d:	mov    edx,0x1
  40ab92:	mov    r8d,0xfa
  40ab98:	call   0x41d890
  40ab9d:	mov    rcx,rsi
  40aba0:	call   0x406160
  40aba5:	mov    rdx,QWORD PTR [rsi+0x30]
  40aba9:	lea    rcx,[rip+0x19a95]        # 0x424645
  40abb0:	call   0x403f60
  40abb5:	mov    edi,DWORD PTR [rsi+0xb4]
  40abbb:	mov    rdx,QWORD PTR [rsi+0x30]
  40abbf:	lea    rcx,[rip+0x196c5]        # 0x42428b
  40abc6:	mov    rbx,QWORD PTR [rsi+0x78]
  40abca:	call   0x403f60
  40abcf:	test   edi,edi
  40abd1:	jle    0x40aec3
  40abd7:	lea    eax,[rdi-0x1]
  40abda:	lea    rbp,[rip+0x19556]        # 0x424137
  40abe1:	lea    rdi,[rip+0x195ab]        # 0x424193
  40abe8:	add    rax,0x1
  40abec:	lea    rdx,[rax+rax*2]
  40abf0:	lea    rax,[rax+rdx*4]
  40abf4:	lea    r13,[rbx+rax*8]
  40abf8:	jmp    0x40ac2f
  40abfa:	nop    WORD PTR [rax+rax*1+0x0]
  40ac00:	test   eax,0x100000
  40ac05:	je     0x40ac22
  40ac07:	cmp    WORD PTR [rbx+0xc],0x2
  40ac0c:	mov    rcx,rbp
  40ac0f:	mov    r9d,0x1
  40ac15:	cmovb  rcx,rdi
  40ac19:	mov    rdx,QWORD PTR [rsi+0x30]
  40ac1d:	call   0x403f60
  40ac22:	add    rbx,0x68
  40ac26:	cmp    rbx,r13
  40ac29:	je     0x40aec3
  40ac2f:	mov    eax,DWORD PTR [rbx+0x10]
  40ac32:	test   eax,0x280000
  40ac37:	jne    0x40ac22
  40ac39:	mov    r8,QWORD PTR [rbx+0x48]
  40ac3d:	test   r8,r8
  40ac40:	je     0x40ac22
  40ac42:	movzx  r9d,WORD PTR [rbx+0xa]
  40ac47:	test   r9w,r9w
  40ac4b:	je     0x40ac00
  40ac4d:	cmp    WORD PTR [rbx+0xc],0x1
  40ac52:	mov    rcx,rdi
  40ac55:	cmova  rcx,rbp
  40ac59:	jmp    0x40ac19
  40ac5b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac60:	mov    eax,DWORD PTR [rbx+0x18]
  40ac63:	lea    r9,[rip+0x18fa5]        # 0x423c0f
  40ac6a:	test   eax,eax
  40ac6c:	lea    rax,[rip+0x1911c]        # 0x423d8f
  40ac73:	cmovne r9,rax
  40ac77:	jmp    0x40aad1
  40ac7c:	nop    DWORD PTR [rax+0x0]
  40ac80:	mov    r9,QWORD PTR [rbx+0x18]
  40ac84:	test   r9,r9
  40ac87:	jne    0x40aad1
  40ac8d:	lea    rax,[rip+0x1a718]        # 0x4253ac
  40ac94:	cmp    r15,r13
  40ac97:	cmove  r15,rax
  40ac9b:	jmp    0x40aad1
  40aca0:	mov    r9d,DWORD PTR [rbx+0x18]
  40aca4:	lea    r8,[rip+0x17e57]        # 0x422b02
  40acab:	jmp    0x40aabd
  40acb0:	and    edx,0x20
  40acb3:	je     0x40b090
  40acb9:	test   BYTE PTR [rax+0x10],0xf
  40acbd:	mov    QWORD PTR [rip+0x21688],0x0        # 0x42c350
  40acc8:	mov    r12,QWORD PTR [rip+0x24cbd]        # 0x42f98c
  40accf:	je     0x40a918
  40acd5:	mov    r13,QWORD PTR [rax+0x18]
  40acd9:	lea    rdx,[rip+0x17e10]        # 0x422af0
  40ace0:	mov    rbp,QWORD PTR [rsi+0x28]
  40ace4:	mov    rcx,r13
  40ace7:	call   0x41d8d0
  40acec:	test   rax,rax
  40acef:	mov    rdi,rax
  40acf2:	je     0x40b114
  40acf8:	mov    rcx,rax
  40acfb:	call   0x41d750
  40ad00:	lea    rdx,[rsp+0x40]
  40ad05:	mov    ecx,eax
  40ad07:	call   QWORD PTR [rip+0x24cf7]        # 0x42fa04
  40ad0d:	test   eax,eax
  40ad0f:	jne    0x40b124
  40ad15:	movzx  eax,WORD PTR [rsp+0x46]
  40ad1a:	and    ax,0xf000
  40ad1e:	cmp    ax,0x8000
  40ad22:	jne    0x40b124
  40ad28:	mov    rax,QWORD PTR [rsp+0x58]
  40ad2d:	lea    rcx,[rax+0x1]
  40ad31:	call   0x405990
  40ad36:	mov    r8,QWORD PTR [rsp+0x58]
  40ad3b:	mov    r12,rax
  40ad3e:	mov    rbx,rax
  40ad41:	jmp    0x40ad58
  40ad43:	mov    r8,QWORD PTR [rsp+0x58]
  40ad48:	sub    r8,rax
  40ad4b:	test   r8,r8
  40ad4e:	mov    QWORD PTR [rsp+0x58],r8
  40ad53:	je     0x40ad6d
  40ad55:	add    rbx,rax
  40ad58:	mov    r9,rdi
  40ad5b:	mov    edx,0x1
  40ad60:	mov    rcx,rbx
  40ad63:	call   0x41d8b0
  40ad68:	test   rax,rax
  40ad6b:	jne    0x40ad43
  40ad6d:	mov    BYTE PTR [rbx],0x0
  40ad70:	mov    rcx,rdi
  40ad73:	call   0x41d8f0
  40ad78:	test   r12,r12
  40ad7b:	mov    QWORD PTR [rip+0x215b6],r12        # 0x42c338
  40ad82:	je     0x40adca
  40ad84:	lea    rdx,[rip+0x1a65f]        # 0x4253ea
  40ad8b:	mov    rcx,r12
  40ad8e:	call   0x41d7d0
  40ad93:	test   rax,rax
  40ad96:	je     0x40b0f8
  40ad9c:	lea    rcx,[rax+0x1]
  40ada0:	lea    rdx,[rip+0x19470]        # 0x424217
  40ada7:	mov    BYTE PTR [rax],0x0
  40adaa:	call   0x41d7d0
  40adaf:	test   rax,rax
  40adb2:	je     0x40b0df
  40adb8:	add    rax,0x73
  40adbc:	mov    QWORD PTR [rip+0x21585],r12        # 0x42c348
  40adc3:	mov    QWORD PTR [rip+0x21576],rax        # 0x42c340
  40adca:	mov    r12,QWORD PTR [rip+0x24bbb]        # 0x42f98c
  40add1:	call   r12
  40add4:	lea    rdx,[rip+0x17d1d]        # 0x422af8
  40addb:	lea    r8,[rax+0x30]
  40addf:	mov    rcx,r13
  40ade2:	call   0x41d8a0
  40ade7:	mov    rbx,rax
  40adea:	call   r12
  40aded:	lea    rdx,[rax+0x30]
  40adf1:	cmp    rbx,rdx
  40adf4:	je     0x40a918
  40adfa:	lea    rdx,[rip+0x17cf9]        # 0x422afa
  40ae01:	mov    r8,r13
  40ae04:	mov    rcx,rbp
  40ae07:	call   0x404510
  40ae0c:	nop    DWORD PTR [rax+0x0]
  40ae10:	call   r12
  40ae13:	lea    rcx,[rip+0x1975c]        # 0x424576
  40ae1a:	lea    r9,[rax+0x30]
  40ae1e:	mov    r8d,0xce
  40ae24:	mov    edx,0x1
  40ae29:	call   0x41d890
  40ae2e:	call   r12
  40ae31:	lea    rcx,[rip+0x18e06]        # 0x423c3e
  40ae38:	lea    r9,[rax+0x30]
  40ae3c:	mov    r8d,0xa
  40ae42:	mov    edx,0x1
  40ae47:	call   0x41d890
  40ae4c:	call   r12
  40ae4f:	lea    rcx,[rip+0x195b0]        # 0x424406
  40ae56:	lea    r9,[rax+0x30]
  40ae5a:	mov    edx,0x1
  40ae5f:	mov    r8d,0xfa
  40ae65:	call   0x41d890
  40ae6a:	mov    rcx,rsi
  40ae6d:	call   0x406160
  40ae72:	mov    rdx,QWORD PTR [rsi+0x30]
  40ae76:	lea    rcx,[rip+0x197c8]        # 0x424645
  40ae7d:	call   0x403f60
  40ae82:	call   r12
  40ae85:	lea    rcx,[rip+0x18d4c]        # 0x423bd8
  40ae8c:	lea    r9,[rax+0x30]
  40ae90:	mov    r8d,0xc
  40ae96:	mov    edx,0x1
  40ae9b:	call   0x41d890
  40aea0:	call   r12
  40aea3:	lea    rcx,[rip+0x19bc0]        # 0x424a6a
  40aeaa:	lea    r9,[rax+0x30]
  40aeae:	mov    r8d,0x38
  40aeb4:	mov    edx,0x1
  40aeb9:	call   0x41d890
  40aebe:	jmp    0x40abb5
  40aec3:	call   r12
  40aec6:	lea    rcx,[rip+0x1934a]        # 0x424217
  40aecd:	lea    r9,[rax+0x30]
  40aed1:	mov    r8d,0x73
  40aed7:	mov    edx,0x1
  40aedc:	call   0x41d890
  40aee1:	mov    rax,QWORD PTR [rip+0x21458]        # 0x42c340
  40aee8:	test   rax,rax
  40aeeb:	je     0x40aef2
  40aeed:	cmp    BYTE PTR [rax],0x0
  40aef0:	jne    0x40af60
  40aef2:	mov    rax,QWORD PTR [rip+0x14cbf]        # 0x41fbb8
  40aef9:	test   BYTE PTR [rax+0x78],0x20
  40aefd:	je     0x40af75
  40aeff:	call   r12
  40af02:	lea    rcx,[rax+0x30]
  40af06:	call   0x41d8f0
  40af0b:	call   r12
  40af0e:	lea    rcx,[rax+0x30]
  40af12:	call   0x41d8e8
  40af17:	test   eax,eax
  40af19:	jne    0x40b136
  40af1f:	mov    rcx,QWORD PTR [rip+0x21412]        # 0x42c338
  40af26:	call   0x41d8a8
  40af2b:	mov    QWORD PTR [rip+0x21412],0x0        # 0x42c348
  40af36:	mov    QWORD PTR [rip+0x213ff],0x0        # 0x42c340
  40af41:	mov    QWORD PTR [rip+0x213ec],0x0        # 0x42c338
  40af4c:	add    rsp,0xc8
  40af53:	pop    rbx
  40af54:	pop    rsi
  40af55:	pop    rdi
  40af56:	pop    rbp
  40af57:	pop    r12
  40af59:	pop    r13
  40af5b:	pop    r14
  40af5d:	pop    r15
  40af5f:	ret    
  40af60:	call   r12
  40af63:	mov    rcx,QWORD PTR [rip+0x213d6]        # 0x42c340
  40af6a:	lea    rdx,[rax+0x30]
  40af6e:	call   0x41d8b8
  40af73:	jmp    0x40aeff
  40af75:	mov    rdx,QWORD PTR [rsi+0x30]
  40af79:	lea    rcx,[rip+0x18db4]        # 0x423d34
  40af80:	call   0x403f60
  40af85:	jmp    0x40aeff
  40af8a:	nop    WORD PTR [rax+rax*1+0x0]
  40af90:	call   r12
  40af93:	lea    rcx,[rip+0x195dc]        # 0x424576
  40af9a:	lea    r9,[rax+0x30]
  40af9e:	mov    r8d,0xce
  40afa4:	mov    edx,0x1
  40afa9:	call   0x41d890
  40afae:	call   r12
  40afb1:	lea    rcx,[rip+0x18c86]        # 0x423c3e
  40afb8:	lea    r9,[rax+0x30]
  40afbc:	mov    r8d,0xa
  40afc2:	mov    edx,0x1
  40afc7:	call   0x41d890
  40afcc:	call   r12
  40afcf:	lea    rcx,[rip+0x19430]        # 0x424406
  40afd6:	lea    r9,[rax+0x30]
  40afda:	mov    r8d,0xfa
  40afe0:	mov    edx,0x1
  40afe5:	call   0x41d890
  40afea:	mov    rcx,rsi
  40afed:	call   0x406160
  40aff2:	mov    rdx,QWORD PTR [rsi+0x30]
  40aff6:	lea    rcx,[rip+0x19648]        # 0x424645
  40affd:	call   0x403f60
  40b002:	call   r12
  40b005:	lea    rcx,[rip+0x18bcc]        # 0x423bd8
  40b00c:	lea    r9,[rax+0x30]
  40b010:	mov    r8d,0xc
  40b016:	mov    edx,0x1
  40b01b:	call   0x41d890
  40b020:	call   r12
  40b023:	lea    rcx,[rip+0x18beb]        # 0x423c15
  40b02a:	lea    r9,[rax+0x30]
  40b02e:	mov    r8d,0x9
  40b034:	mov    edx,0x1
  40b039:	call   0x41d890
  40b03e:	call   r12
  40b041:	lea    rcx,[rip+0x194b9]        # 0x424501
  40b048:	lea    r9,[rax+0x30]
  40b04c:	mov    edx,0x1
  40b051:	mov    r8d,0x74
  40b057:	call   0x41d890
  40b05c:	mov    rcx,rsi
  40b05f:	call   0x405ed0
  40b064:	mov    rdx,QWORD PTR [rsi+0x30]
  40b068:	lea    rcx,[rip+0x19c65]        # 0x424cd4
  40b06f:	jmp    0x40ae7d
  40b074:	call   r12
  40b077:	mov    r8d,0xce
  40b07d:	lea    r9,[rax+0x30]
  40b081:	mov    edx,0x1
  40b086:	lea    rcx,[rip+0x194e9]        # 0x424576
  40b08d:	jmp    0x40b01b
  40b08f:	nop
  40b090:	lea    rcx,[rip+0x17a49]        # 0x422ae0
  40b097:	call   0x41d888
  40b09c:	test   rax,rax
  40b09f:	mov    QWORD PTR [rip+0x212aa],rax        # 0x42c350
  40b0a6:	je     0x40b104
  40b0a8:	mov    rax,QWORD PTR [rip+0x14b09]        # 0x41fbb8
  40b0af:	jmp    0x40a907
  40b0b4:	mov    rdx,QWORD PTR [rip+0x21295]        # 0x42c350
  40b0bb:	test   rdx,rdx
  40b0be:	je     0x40a98f
  40b0c4:	lea    rcx,[rip+0x18c62]        # 0x423d2d
  40b0cb:	mov    QWORD PTR [rsp+0x28],r8
  40b0d0:	call   0x403f60
  40b0d5:	mov    r8,QWORD PTR [rsp+0x28]
  40b0da:	jmp    0x40a98f
  40b0df:	mov    rcx,r12
  40b0e2:	call   0x41d7f8
  40b0e7:	lea    rax,[r12+rax*1+0x53]
  40b0ec:	mov    QWORD PTR [rip+0x2124d],rax        # 0x42c340
  40b0f3:	jmp    0x40adca
  40b0f8:	mov    QWORD PTR [rip+0x21241],r12        # 0x42c340
  40b0ff:	jmp    0x40adca
  40b104:	lea    rax,[rip+0x179db]        # 0x422ae6
  40b10b:	mov    QWORD PTR [rip+0x2123e],rax        # 0x42c350
  40b112:	jmp    0x40b0a8
  40b114:	mov    QWORD PTR [rip+0x21219],0x0        # 0x42c338
  40b11f:	jmp    0x40adca
  40b124:	lea    rdx,[rip+0x179c7]        # 0x422af2
  40b12b:	mov    r8,r13
  40b12e:	mov    rcx,rbp
  40b131:	call   0x404510
  40b136:	mov    rcx,QWORD PTR [rsi+0x28]
  40b13a:	mov    r8,QWORD PTR [rip+0x14ef7]        # 0x420038
  40b141:	mov    rdx,QWORD PTR [rip+0x14f00]        # 0x420048
  40b148:	call   0x404510
  40b14d:	nop
  40b14e:	xchg   ax,ax
  40b150:	push   rbx
  40b151:	sub    rsp,0x20
  40b155:	test   rcx,rcx
  40b158:	je     0x40b16e
  40b15a:	cmp    DWORD PTR [rcx],0x6
  40b15d:	mov    rbx,rcx
  40b160:	je     0x40b174
  40b162:	call   QWORD PTR [rip+0x24874]        # 0x42f9dc
  40b168:	mov    DWORD PTR [rax],0x16
  40b16e:	add    rsp,0x20
  40b172:	pop    rbx
  40b173:	ret    
  40b174:	mov    rcx,QWORD PTR [rcx+0x10]
  40b178:	call   0x403a90
  40b17d:	mov    rcx,rbx
  40b180:	add    rsp,0x20
  40b184:	pop    rbx
  40b185:	jmp    0x41d8a8
  40b18a:	nop    WORD PTR [rax+rax*1+0x0]
  40b190:	push   rdi
  40b191:	push   rsi
  40b192:	push   rbx
  40b193:	sub    rsp,0x20
  40b197:	cmp    rcx,0xe
  40b19b:	jbe    0x40b1e3
  40b19d:	test   BYTE PTR [rdx+0x10],0x8
  40b1a1:	mov    rsi,rdx
  40b1a4:	je     0x40b1f0
  40b1a6:	mov    rcx,QWORD PTR [rdx+0x20]
  40b1aa:	test   rcx,rcx
  40b1ad:	je     0x40b1e3
  40b1af:	mov    eax,DWORD PTR [rcx]
  40b1b1:	lea    rbx,[rcx+0x8]
  40b1b5:	test   eax,eax
  40b1b7:	jle    0x40b1d7
  40b1b9:	sub    eax,0x1
  40b1bc:	lea    rdi,[rbx+rax*8+0x8]
  40b1c1:	add    rbx,0x8
  40b1c5:	mov    rcx,QWORD PTR [rbx-0x8]
  40b1c9:	call   0x40b150
  40b1ce:	cmp    rbx,rdi
  40b1d1:	jne    0x40b1c1
  40b1d3:	mov    rcx,QWORD PTR [rsi+0x20]
  40b1d7:	add    rsp,0x20
  40b1db:	pop    rbx
  40b1dc:	pop    rsi
  40b1dd:	pop    rdi
  40b1de:	jmp    0x41d8a8
  40b1e3:	add    rsp,0x20
  40b1e7:	pop    rbx
  40b1e8:	pop    rsi
  40b1e9:	pop    rdi
  40b1ea:	ret    
  40b1eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b1f0:	mov    rbx,QWORD PTR [rdx+0x50]
  40b1f4:	mov    rcx,rbx
  40b1f7:	call   0x41d7f8
  40b1fc:	mov    rcx,QWORD PTR [rsi+0x18]
  40b200:	mov    r8,rax
  40b203:	mov    rdx,rbx
  40b206:	call   0x408de0
  40b20b:	test   rax,rax
  40b20e:	je     0x40b1e3
  40b210:	lea    rcx,[rsi+0x20]
  40b214:	mov    rdx,rax
  40b217:	add    rsp,0x20
  40b21b:	pop    rbx
  40b21c:	pop    rsi
  40b21d:	pop    rdi
  40b21e:	jmp    0x4059e0
  40b223:	nop    DWORD PTR [rax]
  40b226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b230:	push   r12
  40b232:	push   rbp
  40b233:	push   rdi
  40b234:	push   rsi
  40b235:	push   rbx
  40b236:	sub    rsp,0x30
  40b23a:	mov    eax,DWORD PTR [rip+0x210f0]        # 0x42c330
  40b240:	mov    rdi,rdx
  40b243:	lea    rdx,[rip+0x18876]        # 0x423ac0
  40b24a:	cmp    rcx,0x1
  40b24e:	mov    rbp,rcx
  40b251:	mov    rbx,r8
  40b254:	mov    esi,r9d
  40b257:	lea    r12,[rdx+rax*1+0xcb]
  40b25f:	je     0x40b29b
  40b261:	cmp    rcx,0xf
  40b265:	ja     0x40b272
  40b267:	add    rsp,0x30
  40b26b:	pop    rbx
  40b26c:	pop    rsi
  40b26d:	pop    rdi
  40b26e:	pop    rbp
  40b26f:	pop    r12
  40b271:	ret    
  40b272:	mov    eax,DWORD PTR [rdi+0x18]
  40b275:	mov    rdx,QWORD PTR [rip+0x14dd4]        # 0x420050
  40b27c:	lea    r12,[rip+0x17883]        # 0x422b06
  40b283:	mov    DWORD PTR [rsp+0x20],eax
  40b287:	mov    r8,QWORD PTR [rcx+0x28]
  40b28b:	mov    r9,QWORD PTR [rdi+0x50]
  40b28f:	mov    rcx,QWORD PTR [rip+0x21072]        # 0x42c308
  40b296:	call   0x403b50
  40b29b:	test   BYTE PTR [rdi+0x13],0x1
  40b29f:	jne    0x40b3d0
  40b2a5:	cmp    esi,0x1
  40b2a8:	jle    0x40b3ef
  40b2ae:	mov    rdx,QWORD PTR [rip+0x14ebb]        # 0x420170
  40b2b5:	mov    rcx,QWORD PTR [rip+0x2104c]        # 0x42c308
  40b2bc:	mov    r8,r12
  40b2bf:	lea    rdi,[rip+0x189f2]        # 0x423cb8
  40b2c6:	call   0x403b50
  40b2cb:	cmp    rbp,0x1
  40b2cf:	jne    0x40b318
  40b2d1:	jmp    0x40b400
  40b2d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b2e0:	mov    rdx,QWORD PTR [rip+0x14e71]        # 0x420158
  40b2e7:	mov    rcx,QWORD PTR [rip+0x2101a]        # 0x42c308
  40b2ee:	mov    r8,rdi
  40b2f1:	mov    DWORD PTR [rsp+0x20],eax
  40b2f5:	call   0x403b50
  40b2fa:	sub    esi,0x1
  40b2fd:	mov    rdx,QWORD PTR [rip+0x21004]        # 0x42c308
  40b304:	test   esi,esi
  40b306:	jle    0x40b35d
  40b308:	mov    rcx,QWORD PTR [rip+0x14e71]        # 0x420180
  40b30f:	add    rbx,0x8
  40b313:	call   0x41d8b8
  40b318:	mov    eax,DWORD PTR [rbx+0x4]
  40b31b:	mov    r9d,DWORD PTR [rbx]
  40b31e:	cmp    eax,0x80000000
  40b323:	je     0x40b390
  40b325:	cmp    r9d,0x80000000
  40b32c:	je     0x40b3b0
  40b332:	cmp    eax,0x7fffffff
  40b337:	jne    0x40b2e0
  40b339:	mov    rdx,QWORD PTR [rip+0x14e20]        # 0x420160
  40b340:	mov    rcx,QWORD PTR [rip+0x20fc1]        # 0x42c308
  40b347:	mov    r8,rdi
  40b34a:	sub    esi,0x1
  40b34d:	call   0x403b50
  40b352:	test   esi,esi
  40b354:	mov    rdx,QWORD PTR [rip+0x20fad]        # 0x42c308
  40b35b:	jg     0x40b308
  40b35d:	mov    ecx,0xa
  40b362:	call   0x41d8c0
  40b367:	cmp    rbp,0xf
  40b36b:	jbe    0x40b267
  40b371:	mov    rax,QWORD PTR [rbp+0x98]
  40b378:	mov    edx,0x1
  40b37d:	mov    rcx,rbp
  40b380:	add    rsp,0x30
  40b384:	pop    rbx
  40b385:	pop    rsi
  40b386:	pop    rdi
  40b387:	pop    rbp
  40b388:	pop    r12
  40b38a:	rex.W jmp rax
  40b38d:	nop    DWORD PTR [rax]
  40b390:	mov    rdx,QWORD PTR [rip+0x14dd1]        # 0x420168
  40b397:	mov    rcx,QWORD PTR [rip+0x20f6a]        # 0x42c308
  40b39e:	mov    r8,rdi
  40b3a1:	call   0x403b50
  40b3a6:	jmp    0x40b2fa
  40b3ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40b3b0:	mov    rdx,QWORD PTR [rip+0x14dd9]        # 0x420190
  40b3b7:	mov    rcx,QWORD PTR [rip+0x20f4a]        # 0x42c308
  40b3be:	mov    r9d,eax
  40b3c1:	mov    r8,rdi
  40b3c4:	call   0x403b50
  40b3c9:	jmp    0x40b2fa
  40b3ce:	xchg   ax,ax
  40b3d0:	mov    rdx,QWORD PTR [rip+0x14db1]        # 0x420188
  40b3d7:	mov    rcx,QWORD PTR [rip+0x20f2a]        # 0x42c308
  40b3de:	mov    r8,r12
  40b3e1:	call   0x403b50
  40b3e6:	cmp    esi,0x1
  40b3e9:	jg     0x40b2ae
  40b3ef:	mov    rdx,QWORD PTR [rip+0x14d82]        # 0x420178
  40b3f6:	jmp    0x40b2b5
  40b3fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b400:	mov    eax,DWORD PTR [rip+0x20f2a]        # 0x42c330
  40b406:	lea    rdx,[rip+0x186b3]        # 0x423ac0
  40b40d:	lea    rdi,[rdx+rax*1+0xd2]
  40b415:	jmp    0x40b318
  40b41a:	nop    WORD PTR [rax+rax*1+0x0]
  40b420:	push   r15
  40b422:	push   r14
  40b424:	push   r13
  40b426:	push   r12
  40b428:	push   rbp
  40b429:	push   rdi
  40b42a:	push   rsi
  40b42b:	push   rbx
  40b42c:	sub    rsp,0x28
  40b430:	mov    ebx,0x3
  40b435:	mov    rbp,rcx
  40b438:	mov    rcx,rdx
  40b43b:	mov    rdi,rdx
  40b43e:	call   0x41d7f8
  40b443:	mov    r9,rbp
  40b446:	mov    r12,rax
  40b449:	mov    eax,0x1
  40b44e:	xchg   ax,ax
  40b450:	add    r9,0x1
  40b454:	movzx  ecx,BYTE PTR [r9-0x1]
  40b459:	lea    r10d,[rcx-0x20]
  40b45d:	cmp    r10b,0x5e
  40b461:	ja     0x40b480
  40b463:	cmp    cl,0x5c
  40b466:	je     0x40b4b0
  40b468:	cmp    cl,0x22
  40b46b:	mov    r10d,0x1
  40b471:	je     0x40b4b0
  40b473:	add    rbx,r10
  40b476:	jmp    0x40b450
  40b478:	nop    DWORD PTR [rax+rax*1+0x0]
  40b480:	cmp    cl,0xd
  40b483:	ja     0x40b4a3
  40b485:	mov    r10,rax
  40b488:	shl    r10,cl
  40b48b:	test   r10d,0x3b80
  40b492:	jne    0x40b4c0
  40b494:	test   r10d,0x400
  40b49b:	jne    0x40b4d0
  40b49d:	and    r10d,0x1
  40b4a1:	jne    0x40b4d8
  40b4a3:	add    rbx,0x4
  40b4a7:	jmp    0x40b450
  40b4a9:	nop    DWORD PTR [rax+0x0]
  40b4b0:	mov    r10d,0x2
  40b4b6:	jmp    0x40b473
  40b4b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b4c0:	add    rbx,0x2
  40b4c4:	jmp    0x40b450
  40b4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b4d0:	add    rbx,r12
  40b4d3:	jmp    0x40b450
  40b4d8:	mov    rcx,rbx
  40b4db:	lea    r14,[rip+0x17626]        # 0x422b08
  40b4e2:	call   0x405990
  40b4e7:	mov    r13,rax
  40b4ea:	lea    rsi,[rax+0x1]
  40b4ee:	mov    BYTE PTR [rax],0x22
  40b4f1:	jmp    0x40b512
  40b4f3:	cmp    r8b,0x5c
  40b4f7:	je     0x40b614
  40b4fd:	cmp    r8b,0x22
  40b501:	je     0x40b614
  40b507:	mov    BYTE PTR [rsi],r8b
  40b50a:	add    rsi,0x1
  40b50e:	add    rbp,0x1
  40b512:	movzx  r8d,BYTE PTR [rbp+0x0]
  40b517:	lea    ecx,[r8-0x20]
  40b51b:	cmp    cl,0x5e
  40b51e:	jbe    0x40b4f3
  40b520:	cmp    r8b,0xd
  40b524:	ja     0x40b5fb
  40b52a:	movzx  eax,r8b
  40b52e:	movsxd rcx,DWORD PTR [r14+rax*4]
  40b532:	add    rcx,r14
  40b535:	jmp    rcx
  40b537:	movzx  eax,BYTE PTR [rbp+0x1]
  40b53b:	lea    r15,[rbp+0x1]
  40b53f:	cmp    al,0xa
  40b541:	jne    0x40b55a
  40b543:	mov    BYTE PTR [rsi],0x5c
  40b546:	add    r15,0x1
  40b54a:	add    rsi,0x2
  40b54e:	mov    BYTE PTR [rsi-0x1],0x6e
  40b552:	movzx  eax,BYTE PTR [r15]
  40b556:	cmp    al,0xa
  40b558:	je     0x40b543
  40b55a:	test   al,al
  40b55c:	jne    0x40b620
  40b562:	mov    rax,rsi
  40b565:	mov    BYTE PTR [rsi],0x5c
  40b568:	add    rsi,0x2
  40b56c:	mov    BYTE PTR [rax+0x1],0x6e
  40b570:	mov    BYTE PTR [rsi],0x22
  40b573:	mov    BYTE PTR [rsi+0x1],0x0
  40b577:	add    rsi,0x2
  40b57b:	sub    rsi,r13
  40b57e:	cmp    rsi,rbx
  40b581:	ja     0x40b639
  40b587:	mov    rax,r13
  40b58a:	add    rsp,0x28
  40b58e:	pop    rbx
  40b58f:	pop    rsi
  40b590:	pop    rdi
  40b591:	pop    rbp
  40b592:	pop    r12
  40b594:	pop    r13
  40b596:	pop    r14
  40b598:	pop    r15
  40b59a:	ret    
  40b59b:	mov    BYTE PTR [rsi],0x5c
  40b59e:	mov    BYTE PTR [rsi+0x1],0x72
  40b5a2:	add    rsi,0x2
  40b5a6:	jmp    0x40b50e
  40b5ab:	mov    BYTE PTR [rsi],0x5c
  40b5ae:	mov    BYTE PTR [rsi+0x1],0x66
  40b5b2:	add    rsi,0x2
  40b5b6:	jmp    0x40b50e
  40b5bb:	mov    BYTE PTR [rsi],0x5c
  40b5be:	mov    BYTE PTR [rsi+0x1],0x76
  40b5c2:	add    rsi,0x2
  40b5c6:	jmp    0x40b50e
  40b5cb:	mov    BYTE PTR [rsi],0x5c
  40b5ce:	mov    BYTE PTR [rsi+0x1],0x74
  40b5d2:	add    rsi,0x2
  40b5d6:	jmp    0x40b50e
  40b5db:	mov    BYTE PTR [rsi],0x5c
  40b5de:	mov    BYTE PTR [rsi+0x1],0x62
  40b5e2:	add    rsi,0x2
  40b5e6:	jmp    0x40b50e
  40b5eb:	mov    BYTE PTR [rsi],0x5c
  40b5ee:	mov    BYTE PTR [rsi+0x1],0x61
  40b5f2:	add    rsi,0x2
  40b5f6:	jmp    0x40b50e
  40b5fb:	lea    rdx,[rip+0x18664]        # 0x423c66
  40b602:	mov    rcx,rsi
  40b605:	call   0x404530
  40b60a:	cdqe   
  40b60c:	add    rsi,rax
  40b60f:	jmp    0x40b50e
  40b614:	mov    BYTE PTR [rsi],0x5c
  40b617:	add    rsi,0x1
  40b61b:	jmp    0x40b507
  40b620:	mov    rcx,rsi
  40b623:	mov    r8,r12
  40b626:	mov    rdx,rdi
  40b629:	call   0x41d860
  40b62e:	add    rsi,r12
  40b631:	mov    rbp,r15
  40b634:	jmp    0x40b512
  40b639:	call   QWORD PTR [rip+0x2434d]        # 0x42f98c
  40b63f:	lea    rcx,[rip+0x18789]        # 0x423dcf
  40b646:	lea    r9,[rax+0x60]
  40b64a:	mov    r8d,0x24
  40b650:	mov    edx,0x1
  40b655:	call   0x41d890
  40b65a:	mov    ecx,0x1
  40b65f:	call   0x403f90
  40b664:	nop
  40b665:	nop
  40b666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b670:	push   rsi
  40b671:	push   rbx
  40b672:	sub    rsp,0x28
  40b676:	test   dl,dl
  40b678:	mov    rbx,r8
  40b67b:	jne    0x40b6b0
  40b67d:	lea    rdx,[rip+0x185b5]        # 0x423c39
  40b684:	call   0x40b420
  40b689:	lea    rdx,[rip+0x18671]        # 0x423d01
  40b690:	mov    rsi,rax
  40b693:	mov    rcx,rbx
  40b696:	mov    r8,rax
  40b699:	call   0x403b50
  40b69e:	mov    rcx,rsi
  40b6a1:	add    rsp,0x28
  40b6a5:	pop    rbx
  40b6a6:	pop    rsi
  40b6a7:	jmp    0x41d8a8
  40b6ac:	nop    DWORD PTR [rax+0x0]
  40b6b0:	mov    rdx,r8
  40b6b3:	add    rsp,0x28
  40b6b7:	pop    rbx
  40b6b8:	pop    rsi
  40b6b9:	jmp    0x41d8b8
  40b6be:	xchg   ax,ax
  40b6c0:	push   r15
  40b6c2:	push   r14
  40b6c4:	push   r13
  40b6c6:	push   r12
  40b6c8:	push   rbp
  40b6c9:	push   rdi
  40b6ca:	push   rsi
  40b6cb:	push   rbx
  40b6cc:	sub    rsp,0x38
  40b6d0:	mov    eax,DWORD PTR [rcx+0x14]
  40b6d3:	xor    r13d,r13d
  40b6d6:	xor    r12d,r12d
  40b6d9:	mov    rbp,rcx
  40b6dc:	lea    rcx,[rip+0x1890c]        # 0x423fef
  40b6e3:	lea    edx,[rax-0x1]
  40b6e6:	call   0x403f60
  40b6eb:	mov    rsi,QWORD PTR [rip+0x2429a]        # 0x42f98c
  40b6f2:	jmp    0x40b709
  40b6f4:	add    r12d,0x1
  40b6f8:	add    r13,0x68
  40b6fc:	cmp    r12d,DWORD PTR [rbp+0xb4]
  40b703:	jge    0x40b871
  40b709:	mov    rdx,QWORD PTR [rbp+0x78]
  40b70d:	lea    rdi,[rdx+r13*1]
  40b711:	mov    eax,DWORD PTR [rdi+0x10]
  40b714:	test   eax,0x8280000
  40b719:	jne    0x40b6f4
  40b71b:	cmp    WORD PTR [rdi+0x8],0x8000
  40b721:	jne    0x40b6f4
  40b723:	movzx  r8d,WORD PTR [rdi+0x4]
  40b728:	cmp    r8d,r12d
  40b72b:	je     0x40b778
  40b72d:	lea    rax,[r8+r8*2]
  40b731:	lea    rcx,[rip+0x18840]        # 0x423f78
  40b738:	lea    rax,[r8+rax*4]
  40b73c:	mov    r8,QWORD PTR [rdi+0x48]
  40b740:	lea    rbx,[rdx+rax*8]
  40b744:	mov    rax,QWORD PTR [rdi+0x18]
  40b748:	mov    r9,QWORD PTR [rbx+0x48]
  40b74c:	mov    QWORD PTR [rbx+0x18],rax
  40b750:	mov    eax,DWORD PTR [rbx+0x10]
  40b753:	and    eax,0xfffff00
  40b758:	mov    DWORD PTR [rbx+0x10],eax
  40b75b:	mov    edx,DWORD PTR [rdi+0x10]
  40b75e:	mov    rdi,rbx
  40b761:	and    edx,0xf00000ff
  40b767:	or     eax,edx
  40b769:	mov    rdx,QWORD PTR [rbp+0x30]
  40b76d:	mov    DWORD PTR [rbx+0x10],eax
  40b770:	call   0x403f60
  40b775:	mov    eax,DWORD PTR [rbx+0x10]
  40b778:	mov    edx,eax
  40b77a:	and    edx,0xf000
  40b780:	shr    edx,0xc
  40b783:	cmp    edx,0x4
  40b786:	je     0x40b939
  40b78c:	mov    ecx,DWORD PTR [rdi+0x10]
  40b78f:	and    ecx,0x2f
  40b792:	cmp    ecx,0x20
  40b795:	je     0x40b6f4
  40b79b:	test   ah,0x4
  40b79e:	je     0x40b822
  40b7a4:	mov    r14,QWORD PTR [rdi+0x20]
  40b7a8:	test   r14,r14
  40b7ab:	je     0x40b822
  40b7ad:	mov    ebx,DWORD PTR [r14]
  40b7b0:	mov    rdx,QWORD PTR [rbp+0x30]
  40b7b4:	lea    rcx,[rip+0x1880d]        # 0x423fc8
  40b7bb:	mov    r8,QWORD PTR [rdi+0x48]
  40b7bf:	lea    r15,[r14+0x8]
  40b7c3:	mov    r9d,ebx
  40b7c6:	call   0x403f60
  40b7cb:	sub    ebx,0x1
  40b7ce:	js     0x40b6f4
  40b7d4:	mov    r9d,DWORD PTR [r14]
  40b7d7:	mov    rdx,QWORD PTR [rbp+0x30]
  40b7db:	lea    rcx,[rip+0x183e9]        # 0x423bcb
  40b7e2:	mov    r8,QWORD PTR [rdi+0x48]
  40b7e6:	add    r15,0x8
  40b7ea:	sub    r9d,ebx
  40b7ed:	call   0x403f60
  40b7f2:	mov    rcx,QWORD PTR [r15-0x8]
  40b7f6:	call   0x4052d0
  40b7fb:	mov    r9d,DWORD PTR [r14]
  40b7fe:	mov    rdx,QWORD PTR [rbp+0x30]
  40b802:	lea    rcx,[rip+0x183f4]        # 0x423bfd
  40b809:	mov    r8,QWORD PTR [rdi+0x48]
  40b80d:	sub    r9d,ebx
  40b810:	sub    ebx,0x1
  40b813:	call   0x403f60
  40b818:	cmp    ebx,0xffffffff
  40b81b:	jne    0x40b7d4
  40b81d:	jmp    0x40b6f4
  40b822:	test   al,0x20
  40b824:	jne    0x40b89a
  40b826:	cmp    edx,0x5
  40b829:	je     0x40bb3d
  40b82f:	cmp    edx,0x2
  40b832:	je     0x40bb5a
  40b838:	cmp    edx,0x3
  40b83b:	je     0x40ba39
  40b841:	mov    rax,QWORD PTR [rdi+0x18]
  40b845:	test   rax,rax
  40b848:	je     0x40b853
  40b84a:	cmp    BYTE PTR [rax],0x0
  40b84d:	jne    0x40bb07
  40b853:	movzx  r9d,WORD PTR [rdi+0xe]
  40b858:	mov    rdx,QWORD PTR [rbp+0x30]
  40b85c:	lea    rcx,[rip+0x187cc]        # 0x42402f
  40b863:	mov    r8,QWORD PTR [rdi+0x48]
  40b867:	call   0x403f60
  40b86c:	jmp    0x40b6f4
  40b871:	test   BYTE PTR [rbp+0x11],0x8
  40b875:	je     0x40b87f
  40b877:	mov    eax,DWORD PTR [rbp+0x4]
  40b87a:	cmp    DWORD PTR [rbp+0x14],eax
  40b87d:	jb     0x40b8c5
  40b87f:	call   rsi
  40b881:	lea    rcx,[rax+0x30]
  40b885:	add    rsp,0x38
  40b889:	pop    rbx
  40b88a:	pop    rsi
  40b88b:	pop    rdi
  40b88c:	pop    rbp
  40b88d:	pop    r12
  40b88f:	pop    r13
  40b891:	pop    r14
  40b893:	pop    r15
  40b895:	jmp    0x41d8e0
  40b89a:	mov    r9,QWORD PTR [rdi+0x60]
  40b89e:	mov    rdx,QWORD PTR [rbp+0x30]
  40b8a2:	lea    rax,[rip+0x16e07]        # 0x4226b0
  40b8a9:	mov    r8,QWORD PTR [rdi+0x48]
  40b8ad:	lea    rcx,[rip+0x1875a]        # 0x42400e
  40b8b4:	test   r9,r9
  40b8b7:	cmove  r9,rax
  40b8bb:	call   0x403f60
  40b8c0:	jmp    0x40b6f4
  40b8c5:	call   rsi
  40b8c7:	lea    rcx,[rip+0x18534]        # 0x423e02
  40b8ce:	lea    r9,[rax+0x30]
  40b8d2:	mov    r8d,0x6
  40b8d8:	mov    edx,0x1
  40b8dd:	call   0x41d890
  40b8e2:	mov    ebx,DWORD PTR [rbp+0x14]
  40b8e5:	cmp    ebx,DWORD PTR [rbp+0x4]
  40b8e8:	jae    0x40b917
  40b8ea:	nop    WORD PTR [rax+rax*1+0x0]
  40b8f0:	call   rsi
  40b8f2:	lea    rdx,[rax+0x30]
  40b8f6:	mov    ecx,0x20
  40b8fb:	call   0x41d8c0
  40b900:	mov    rax,QWORD PTR [rbp+0x8]
  40b904:	mov    edx,ebx
  40b906:	add    ebx,0x1
  40b909:	mov    rcx,QWORD PTR [rax+rdx*8]
  40b90d:	call   0x4052d0
  40b912:	cmp    ebx,DWORD PTR [rbp+0x4]
  40b915:	jb     0x40b8f0
  40b917:	call   rsi
  40b919:	lea    rcx,[rip+0x184d4]        # 0x423df4
  40b920:	lea    r9,[rax+0x30]
  40b924:	mov    r8d,0xd
  40b92a:	mov    edx,0x1
  40b92f:	call   0x41d890
  40b934:	jmp    0x40b87f
  40b939:	mov    rax,QWORD PTR [rdi+0x18]
  40b93d:	mov    rdx,QWORD PTR [rbp+0x30]
  40b941:	lea    rcx,[rip+0x186e7]        # 0x42402f
  40b948:	mov    r9d,DWORD PTR [rdi+0x20]
  40b94c:	mov    r8,QWORD PTR [rdi+0x48]
  40b950:	mov    QWORD PTR [rsp+0x28],rax
  40b955:	call   0x403f60
  40b95a:	mov    eax,0xffffffff
  40b95f:	mov    rdx,rdi
  40b962:	mov    ecx,0x3
  40b967:	mov    QWORD PTR [rdi+0x20],rax
  40b96b:	call   QWORD PTR [rdi+0x38]
  40b96e:	mov    r14,QWORD PTR [rdi+0x18]
  40b972:	cmp    BYTE PTR [r14],0x0
  40b976:	je     0x40bb02
  40b97c:	mov    QWORD PTR [rsp+0x20],0x1
  40b985:	mov    rdx,QWORD PTR [rdi+0x48]
  40b989:	lea    rcx,[rip+0x171b0]        # 0x422b40
  40b990:	call   0x403f60
  40b995:	mov    r9,QWORD PTR [rip+0x20bb4]        # 0x42c550
  40b99c:	test   r9,r9
  40b99f:	je     0x40baf0
  40b9a5:	movzx  eax,BYTE PTR [r14]
  40b9a9:	cmp    BYTE PTR [r9+rax*1],0x0
  40b9ae:	je     0x40bae5
  40b9b4:	mov    rdx,r14
  40b9b7:	nop    WORD PTR [rax+rax*1+0x0]
  40b9c0:	add    rdx,0x1
  40b9c4:	movzx  ecx,BYTE PTR [rdx]
  40b9c7:	cmp    BYTE PTR [r9+rcx*1],0x0
  40b9cc:	mov    rax,rcx
  40b9cf:	jne    0x40b9c0
  40b9d1:	cmp    al,0x7f
  40b9d3:	lea    r14,[rdx+0x1]
  40b9d7:	movsx  r15d,al
  40b9db:	ja     0x40ba1e
  40b9dd:	nop    DWORD PTR [rax]
  40b9e0:	lea    r9,[rip+0x1acd9]        # 0x4266c0
  40b9e7:	mov    eax,DWORD PTR [r9+rax*4]
  40b9eb:	test   eax,0x80000
  40b9f0:	je     0x40ba70
  40b9f2:	call   rsi
  40b9f4:	mov    rbx,rax
  40b9f7:	mov    ecx,r15d
  40b9fa:	call   QWORD PTR [rip+0x241d4]        # 0x42fbd4
  40ba00:	lea    rdx,[rbx+0x30]
  40ba04:	mov    ecx,eax
  40ba06:	call   0x41d8c0
  40ba0b:	movzx  eax,BYTE PTR [r14]
  40ba0f:	mov    rdx,r14
  40ba12:	cmp    al,0x7f
  40ba14:	lea    r14,[rdx+0x1]
  40ba18:	movsx  r15d,al
  40ba1c:	jbe    0x40b9e0
  40ba1e:	test   r15d,r15d
  40ba21:	je     0x40bae0
  40ba27:	call   rsi
  40ba29:	lea    rdx,[rax+0x30]
  40ba2d:	mov    ecx,0x5f
  40ba32:	call   0x41d8c0
  40ba37:	jmp    0x40ba0b
  40ba39:	mov    eax,DWORD PTR [rdi+0x18]
  40ba3c:	mov    rdx,QWORD PTR [rbp+0x30]
  40ba40:	lea    r9,[rip+0x16c64]        # 0x4226ab
  40ba47:	mov    r8,QWORD PTR [rdi+0x48]
  40ba4b:	lea    rcx,[rip+0x18553]        # 0x423fa5
  40ba52:	test   eax,eax
  40ba54:	lea    rax,[rip+0x16c55]        # 0x4226b0
  40ba5b:	cmove  r9,rax
  40ba5f:	call   0x403f60
  40ba64:	jmp    0x40b6f4
  40ba69:	nop    DWORD PTR [rax+0x0]
  40ba70:	test   eax,0x100000
  40ba75:	je     0x40ba90
  40ba77:	call   rsi
  40ba79:	lea    rdx,[rax+0x30]
  40ba7d:	mov    ecx,r15d
  40ba80:	call   0x41d8c0
  40ba85:	jmp    0x40ba0b
  40ba87:	nop    WORD PTR [rax+rax*1+0x0]
  40ba90:	test   eax,0xc81
  40ba95:	je     0x40ba1e
  40ba97:	mov    rbx,QWORD PTR [rsp+0x20]
  40ba9c:	lea    rcx,[rip+0x182a5]        # 0x423d48
  40baa3:	mov    edx,ebx
  40baa5:	call   0x403f60
  40baaa:	mov    rax,rbx
  40baad:	add    rax,rax
  40bab0:	cmp    BYTE PTR [r14],0x0
  40bab4:	mov    QWORD PTR [rsp+0x20],rax
  40bab9:	jne    0x40b985
  40babf:	mov    rcx,QWORD PTR [rdi+0x18]
  40bac3:	call   0x41d8a8
  40bac8:	mov    rax,QWORD PTR [rsp+0x28]
  40bacd:	mov    QWORD PTR [rdi+0x18],rax
  40bad1:	jmp    0x40b6f4
  40bad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bae0:	mov    r14,rdx
  40bae3:	jmp    0x40ba97
  40bae5:	movzx  eax,al
  40bae8:	mov    rdx,r14
  40baeb:	jmp    0x40ba12
  40baf0:	mov    ecx,0x22
  40baf5:	call   0x4054a0
  40bafa:	mov    r9,rax
  40bafd:	jmp    0x40b9a5
  40bb02:	mov    rcx,r14
  40bb05:	jmp    0x40bac3
  40bb07:	mov    rdx,QWORD PTR [rbp+0x30]
  40bb0b:	mov    r8,QWORD PTR [rdi+0x48]
  40bb0f:	lea    rcx,[rip+0x181bf]        # 0x423cd5
  40bb16:	call   0x403f60
  40bb1b:	mov    rcx,QWORD PTR [rdi+0x18]
  40bb1f:	call   0x4052d0
  40bb24:	mov    rdx,QWORD PTR [rbp+0x30]
  40bb28:	mov    r8,QWORD PTR [rdi+0x48]
  40bb2c:	lea    rcx,[rip+0x18193]        # 0x423cc6
  40bb33:	call   0x403f60
  40bb38:	jmp    0x40b6f4
  40bb3d:	mov    rdx,QWORD PTR [rbp+0x30]
  40bb41:	mov    r9d,DWORD PTR [rdi+0x18]
  40bb45:	lea    rcx,[rip+0x184e3]        # 0x42402f
  40bb4c:	mov    r8,QWORD PTR [rdi+0x48]
  40bb50:	call   0x403f60
  40bb55:	jmp    0x40b6f4
  40bb5a:	mov    r8,QWORD PTR [rdi+0x48]
  40bb5e:	mov    rdx,QWORD PTR [rbp+0x30]
  40bb62:	lea    rcx,[rip+0x1816c]        # 0x423cd5
  40bb69:	mov    rbx,QWORD PTR [rdi+0x18]
  40bb6d:	call   0x403f60
  40bb72:	mov    rdx,rdi
  40bb75:	mov    ecx,0x3
  40bb7a:	call   QWORD PTR [rdi+0x38]
  40bb7d:	mov    rdx,QWORD PTR [rdi+0x18]
  40bb81:	lea    rcx,[rip+0x1818c]        # 0x423d14
  40bb88:	call   0x403f60
  40bb8d:	test   BYTE PTR [rdi+0x10],0x40
  40bb91:	je     0x40bb9c
  40bb93:	mov    rcx,QWORD PTR [rdi+0x18]
  40bb97:	call   0x41d8a8
  40bb9c:	mov    QWORD PTR [rdi+0x18],rbx
  40bba0:	mov    r8,QWORD PTR [rdi+0x48]
  40bba4:	lea    rcx,[rip+0x1811b]        # 0x423cc6
  40bbab:	mov    rdx,QWORD PTR [rbp+0x30]
  40bbaf:	call   0x403f60
  40bbb4:	jmp    0x40b6f4
  40bbb9:	nop    DWORD PTR [rax+0x0]
  40bbc0:	push   rdi
  40bbc1:	push   rsi
  40bbc2:	push   rbx
  40bbc3:	sub    rsp,0x20
  40bbc7:	mov    rax,QWORD PTR [rcx+0x90]
  40bbce:	mov    rbx,rcx
  40bbd1:	test   rax,rax
  40bbd4:	je     0x40bc41
  40bbd6:	mov    rdx,QWORD PTR [rbx]
  40bbd9:	lea    rdi,[rax+0x8]
  40bbdd:	mov    rsi,rbx
  40bbe0:	lea    r9,[rax+0xe8]
  40bbe7:	and    rdi,0xfffffffffffffff8
  40bbeb:	mov    QWORD PTR [rax],rdx
  40bbee:	mov    rdx,QWORD PTR [rbx+0xe0]
  40bbf5:	mov    QWORD PTR [rax+0xe0],rdx
  40bbfc:	mov    rdx,rax
  40bbff:	sub    rdx,rdi
  40bc02:	sub    rsi,rdx
  40bc05:	add    edx,0xe8
  40bc0b:	shr    edx,0x3
  40bc0e:	mov    ecx,edx
  40bc10:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40bc13:	mov    rcx,r9
  40bc16:	movsxd rax,DWORD PTR [rax+0xb0]
  40bc1d:	lea    rdx,[rax+rax*2]
  40bc21:	lea    r8,[rax+rdx*4]
  40bc25:	mov    rdx,QWORD PTR [rbx+0x78]
  40bc29:	shl    r8,0x3
  40bc2d:	call   0x41d860
  40bc32:	mov    rcx,rbx
  40bc35:	add    rsp,0x20
  40bc39:	pop    rbx
  40bc3a:	pop    rsi
  40bc3b:	pop    rdi
  40bc3c:	jmp    0x405760
  40bc41:	movsxd rax,DWORD PTR [rcx+0xb0]
  40bc48:	lea    rdx,[rax+rax*2]
  40bc4c:	lea    rax,[rax+rdx*4]
  40bc50:	lea    rcx,[rax*8+0xe8]
  40bc58:	call   0x405990
  40bc5d:	mov    QWORD PTR [rbx+0x90],rax
  40bc64:	jmp    0x40bbd6
  40bc69:	nop    DWORD PTR [rax+0x0]
  40bc70:	push   r14
  40bc72:	push   r13
  40bc74:	push   r12
  40bc76:	push   rbp
  40bc77:	push   rdi
  40bc78:	push   rsi
  40bc79:	push   rbx
  40bc7a:	sub    rsp,0x20
  40bc7e:	lea    r12,[rcx+0x8]
  40bc82:	mov    r14,rcx
  40bc85:	mov    rbp,rcx
  40bc88:	and    r12,0xfffffffffffffff8
  40bc8c:	sub    r14,r12
  40bc8f:	lea    r13d,[r14+0xe8]
  40bc96:	shr    r13d,0x3
  40bc9a:	nop    WORD PTR [rax+rax*1+0x0]
  40bca0:	mov    rbx,QWORD PTR [rbp+0x78]
  40bca4:	mov    esi,DWORD PTR [rbp+0xb0]
  40bcaa:	jmp    0x40bcd6
  40bcac:	nop    DWORD PTR [rax+0x0]
  40bcb0:	cmp    eax,0x6
  40bcb3:	jne    0x40bcc3
  40bcb5:	mov    rcx,QWORD PTR [rbx+0x20]
  40bcb9:	test   rcx,rcx
  40bcbc:	je     0x40bcc3
  40bcbe:	call   0x403a90
  40bcc3:	sub    esi,0x1
  40bcc6:	mov    QWORD PTR [rbx+0x20],0x0
  40bcce:	add    rbx,0x68
  40bcd2:	test   esi,esi
  40bcd4:	jle    0x40bd30
  40bcd6:	mov    edx,DWORD PTR [rbx+0x10]
  40bcd9:	test   dl,0x40
  40bcdc:	jne    0x40bd14
  40bcde:	mov    eax,edx
  40bce0:	and    eax,0xf000
  40bce5:	shr    eax,0xc
  40bce8:	cmp    eax,0x1
  40bceb:	jne    0x40bcb0
  40bced:	and    dh,0x4
  40bcf0:	je     0x40bcc3
  40bcf2:	cmp    QWORD PTR [rbx+0x20],0x0
  40bcf7:	je     0x40bcc3
  40bcf9:	lea    rax,[rip+0x16e4d]        # 0x422b4d
  40bd00:	cmp    rbp,0xf
  40bd04:	mov    QWORD PTR [rbx+0x18],rax
  40bd08:	jbe    0x40bcc3
  40bd0a:	mov    rcx,rbx
  40bd0d:	call   0x4062c0
  40bd12:	jmp    0x40bcc3
  40bd14:	mov    rcx,QWORD PTR [rbx+0x18]
  40bd18:	call   0x41d8a8
  40bd1d:	mov    edx,DWORD PTR [rbx+0x10]
  40bd20:	mov    QWORD PTR [rbx+0x18],0x0
  40bd28:	and    edx,0xffffffbf
  40bd2b:	mov    DWORD PTR [rbx+0x10],edx
  40bd2e:	jmp    0x40bcde
  40bd30:	mov    rax,QWORD PTR [rbp+0x90]
  40bd37:	test   rax,rax
  40bd3a:	je     0x40bd9f
  40bd3c:	mov    rdx,QWORD PTR [rax]
  40bd3f:	mov    rsi,rax
  40bd42:	mov    rdi,r12
  40bd45:	sub    rsi,r14
  40bd48:	mov    QWORD PTR [rbp+0x0],rdx
  40bd4c:	mov    rcx,QWORD PTR [rax+0xe0]
  40bd53:	lea    rdx,[rax+0xe8]
  40bd5a:	mov    QWORD PTR [rbp+0xe0],rcx
  40bd61:	mov    ecx,r13d
  40bd64:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40bd67:	movsxd rax,DWORD PTR [rax+0xb0]
  40bd6e:	mov    rcx,QWORD PTR [rbp+0x78]
  40bd72:	lea    r8,[rax+rax*2]
  40bd76:	lea    r8,[rax+r8*4]
  40bd7a:	shl    r8,0x3
  40bd7e:	call   0x41d860
  40bd83:	mov    rcx,QWORD PTR [rbp+0x90]
  40bd8a:	call   0x41d8a8
  40bd8f:	mov    QWORD PTR [rbp+0x90],0x0
  40bd9a:	jmp    0x40bca0
  40bd9f:	add    rsp,0x20
  40bda3:	pop    rbx
  40bda4:	pop    rsi
  40bda5:	pop    rdi
  40bda6:	pop    rbp
  40bda7:	pop    r12
  40bda9:	pop    r13
  40bdab:	pop    r14
  40bdad:	ret    
  40bdae:	xchg   ax,ax
  40bdb0:	push   rbp
  40bdb1:	push   rdi
  40bdb2:	push   rsi
  40bdb3:	push   rbx
  40bdb4:	sub    rsp,0x28
  40bdb8:	mov    rbp,QWORD PTR [rcx+0x90]
  40bdbf:	mov    rbx,rcx
  40bdc2:	test   rbp,rbp
  40bdc5:	je     0x40be4b
  40bdcb:	mov    QWORD PTR [rcx+0x90],0x0
  40bdd6:	lea    rdi,[rbx+0x8]
  40bdda:	mov    rsi,rbp
  40bddd:	call   0x40bc70
  40bde2:	mov    rax,QWORD PTR [rbp+0x0]
  40bde6:	and    rdi,0xfffffffffffffff8
  40bdea:	lea    rdx,[rbp+0xe8]
  40bdf1:	mov    QWORD PTR [rbx],rax
  40bdf4:	mov    rax,QWORD PTR [rbp+0xe0]
  40bdfb:	mov    QWORD PTR [rbx+0xe0],rax
  40be02:	mov    rax,rbx
  40be05:	sub    rax,rdi
  40be08:	sub    rsi,rax
  40be0b:	add    eax,0xe8
  40be10:	shr    eax,0x3
  40be13:	mov    ecx,eax
  40be15:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40be18:	movsxd rax,DWORD PTR [rbp+0xb0]
  40be1f:	mov    rcx,QWORD PTR [rbx+0x78]
  40be23:	lea    r8,[rax+rax*2]
  40be27:	lea    r8,[rax+r8*4]
  40be2b:	shl    r8,0x3
  40be2f:	call   0x41d860
  40be34:	mov    rcx,rbx
  40be37:	mov    QWORD PTR [rbx+0x90],rbp
  40be3e:	add    rsp,0x28
  40be42:	pop    rbx
  40be43:	pop    rsi
  40be44:	pop    rdi
  40be45:	pop    rbp
  40be46:	jmp    0x405760
  40be4b:	mov    rsi,QWORD PTR [rcx+0x28]
  40be4f:	test   rsi,rsi
  40be52:	je     0x40be7a
  40be54:	mov    rbx,QWORD PTR [rip+0x1418d]        # 0x41ffe8
  40be5b:	call   QWORD PTR [rip+0x23b2b]        # 0x42f98c
  40be61:	lea    rcx,[rax+0x60]
  40be65:	mov    r8,rsi
  40be68:	mov    rdx,rbx
  40be6b:	call   0x403b50
  40be70:	mov    ecx,0x1
  40be75:	call   0x403f90
  40be7a:	mov    rsi,QWORD PTR [rcx+0x30]
  40be7e:	lea    rax,[rip+0x1964a]        # 0x4254cf
  40be85:	test   rsi,rsi
  40be88:	cmove  rsi,rax
  40be8c:	jmp    0x40be54
  40be8e:	xchg   ax,ax
  40be90:	push   r15
  40be92:	push   r14
  40be94:	push   r13
  40be96:	push   r12
  40be98:	push   rbp
  40be99:	push   rdi
  40be9a:	push   rsi
  40be9b:	push   rbx
  40be9c:	sub    rsp,0x58
  40bea0:	lea    rdi,[rsp+0x48]
  40bea5:	mov    r13,rcx
  40bea8:	mov    DWORD PTR [rsp+0x48],0x0
  40beb0:	mov    rdx,rdi
  40beb3:	call   0x406490
  40beb8:	test   rax,rax
  40bebb:	mov    rbx,rax
  40bebe:	je     0x40bf99
  40bec4:	lea    rdx,[rip+0x16c2d]        # 0x422af8
  40becb:	mov    rcx,rax
  40bece:	call   0x41d8d0
  40bed3:	test   rax,rax
  40bed6:	mov    rsi,rax
  40bed9:	je     0x40c243
  40bedf:	mov    edx,DWORD PTR [rsp+0x48]
  40bee3:	test   edx,edx
  40bee5:	jne    0x40bff0
  40beeb:	lea    rcx,[rip+0x16c5e]        # 0x422b50
  40bef2:	mov    r9,rsi
  40bef5:	mov    r8d,0x3
  40befb:	mov    edx,0x1
  40bf00:	call   0x41d890
  40bf05:	mov    rbx,QWORD PTR [r13+0x60]
  40bf09:	mov    edx,0xa
  40bf0e:	mov    rcx,rbx
  40bf11:	call   0x41d820
  40bf16:	test   rax,rax
  40bf19:	je     0x40bf32
  40bf1b:	lea    r8,[rax+0x1]
  40bf1f:	mov    r9,rsi
  40bf22:	mov    edx,0x1
  40bf27:	mov    rcx,rbx
  40bf2a:	sub    r8,rbx
  40bf2d:	call   0x41d890
  40bf32:	xor    ecx,ecx
  40bf34:	call   QWORD PTR [rip+0x23b22]        # 0x42fa5c
  40bf3a:	mov    rcx,rdi
  40bf3d:	mov    QWORD PTR [rsp+0x48],rax
  40bf42:	call   QWORD PTR [rip+0x23a8c]        # 0x42f9d4
  40bf48:	lea    rdx,[rip+0x17bd1]        # 0x423b20
  40bf4f:	mov    r8,rax
  40bf52:	mov    rcx,rsi
  40bf55:	call   0x403b50
  40bf5a:	mov    r15d,DWORD PTR [r13+0xb4]
  40bf61:	mov    rbx,QWORD PTR [r13+0x78]
  40bf65:	mov    eax,DWORD PTR [rbx+0x10]
  40bf68:	test   al,0xf
  40bf6a:	je     0x40bf83
  40bf6c:	test   eax,0x280100
  40bf71:	jne    0x40bf83
  40bf73:	movzx  edx,WORD PTR [rbx+0x8]
  40bf77:	cmp    dx,0x8000
  40bf7c:	je     0x40bfb0
  40bf7e:	cmp    dx,WORD PTR [rbx]
  40bf81:	je     0x40bfb0
  40bf83:	sub    r15d,0x1
  40bf87:	add    rbx,0x68
  40bf8b:	test   r15d,r15d
  40bf8e:	jg     0x40bf65
  40bf90:	mov    rcx,rsi
  40bf93:	call   0x41d8f0
  40bf98:	nop
  40bf99:	add    rsp,0x58
  40bf9d:	pop    rbx
  40bf9e:	pop    rsi
  40bf9f:	pop    rdi
  40bfa0:	pop    rbp
  40bfa1:	pop    r12
  40bfa3:	pop    r13
  40bfa5:	pop    r14
  40bfa7:	pop    r15
  40bfa9:	ret    
  40bfaa:	nop    WORD PTR [rax+rax*1+0x0]
  40bfb0:	test   al,0x10
  40bfb2:	mov    rdi,rbx
  40bfb5:	je     0x40bfcb
  40bfb7:	movzx  edx,WORD PTR [rbx+0x4]
  40bfbb:	lea    rcx,[rdx+rdx*2]
  40bfbf:	lea    rcx,[rdx+rcx*4]
  40bfc3:	mov    rdx,QWORD PTR [r13+0x78]
  40bfc7:	lea    rdi,[rdx+rcx*8]
  40bfcb:	and    eax,0xf000
  40bfd0:	shr    eax,0xc
  40bfd3:	cmp    eax,0x7
  40bfd6:	ja     0x40bf83
  40bfd8:	lea    rcx,[rip+0x16b79]        # 0x422b58
  40bfdf:	movsxd rax,DWORD PTR [rcx+rax*4]
  40bfe3:	add    rax,rcx
  40bfe6:	jmp    rax
  40bfe8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bff0:	mov    rcx,rbx
  40bff3:	call   0x41d8a8
  40bff8:	jmp    0x40beeb
  40bffd:	nop    DWORD PTR [rax]
  40c000:	mov    r12,QWORD PTR [rdi+0x20]
  40c004:	test   r12,r12
  40c007:	je     0x40bf83
  40c00d:	mov    eax,DWORD PTR [r12]
  40c011:	add    r12,0x8
  40c015:	test   eax,eax
  40c017:	jle    0x40bf83
  40c01d:	sub    eax,0x1
  40c020:	lea    rax,[r12+rax*8+0x8]
  40c025:	mov    QWORD PTR [rsp+0x38],rax
  40c02a:	nop    WORD PTR [rax+rax*1+0x0]
  40c030:	add    r12,0x8
  40c034:	mov    rbp,QWORD PTR [r12-0x8]
  40c039:	xor    edx,edx
  40c03b:	mov    rcx,rbp
  40c03e:	call   0x4087e0
  40c043:	test   rax,rax
  40c046:	mov    r14,rax
  40c049:	je     0x40c099
  40c04b:	mov    r8,QWORD PTR [rdi+0x50]
  40c04f:	lea    rdx,[rip+0x17c1b]        # 0x423c71
  40c056:	mov    rcx,rsi
  40c059:	call   0x403b50
  40c05e:	xchg   ax,ax
  40c060:	mov    r9,r14
  40c063:	mov    r8,rdi
  40c066:	mov    edx,0x1
  40c06b:	mov    rcx,rsi
  40c06e:	call   0x404560
  40c073:	mov    rdx,r14
  40c076:	mov    rcx,rbp
  40c079:	call   0x408930
  40c07e:	test   rax,rax
  40c081:	mov    r14,rax
  40c084:	jne    0x40c060
  40c086:	mov    r8,QWORD PTR [rdi+0x50]
  40c08a:	lea    rdx,[rip+0x16625]        # 0x4226b6
  40c091:	mov    rcx,rsi
  40c094:	call   0x403b50
  40c099:	cmp    r12,QWORD PTR [rsp+0x38]
  40c09e:	jne    0x40c030
  40c0a0:	jmp    0x40bf83
  40c0a5:	mov    r8,QWORD PTR [rdi+0x20]
  40c0a9:	test   r8,r8
  40c0ac:	je     0x40c218
  40c0b2:	mov    rdx,rdi
  40c0b5:	mov    rcx,rsi
  40c0b8:	call   0x403df0
  40c0bd:	jmp    0x40bf83
  40c0c2:	test   BYTE PTR [rdi+0x10],0x20
  40c0c6:	mov    r8,QWORD PTR [rbx+0x50]
  40c0ca:	mov    rax,r8
  40c0cd:	je     0x40c0d3
  40c0cf:	mov    rax,QWORD PTR [rbx+0x58]
  40c0d3:	test   rax,rax
  40c0d6:	lea    rdx,[rip+0x16a77]        # 0x422b54
  40c0dd:	mov    rcx,rsi
  40c0e0:	cmovne r8,rax
  40c0e4:	call   0x403b50
  40c0e9:	jmp    0x40bf83
  40c0ee:	xchg   ax,ax
  40c0f0:	mov    eax,DWORD PTR [rdi+0x10]
  40c0f3:	test   ah,0x4
  40c0f6:	je     0x40c2b6
  40c0fc:	mov    rbp,QWORD PTR [rdi+0x20]
  40c100:	mov    edx,DWORD PTR [rbp+0x0]
  40c103:	add    rbp,0x8
  40c107:	cmp    edx,0x1
  40c10a:	jle    0x40c2ca
  40c110:	and    eax,0xffffffdf
  40c113:	mov    DWORD PTR [rdi+0x10],eax
  40c116:	lea    eax,[rdx-0x1]
  40c119:	lea    r12,[rbp+rax*8+0x8]
  40c11e:	xchg   ax,ax
  40c120:	add    rbp,0x8
  40c124:	mov    r8,QWORD PTR [rbp-0x8]
  40c128:	mov    rdx,rdi
  40c12b:	mov    rcx,rsi
  40c12e:	call   0x403df0
  40c133:	cmp    rbp,r12
  40c136:	jne    0x40c120
  40c138:	jmp    0x40bf83
  40c13d:	nop    DWORD PTR [rax]
  40c140:	mov    rbp,QWORD PTR [rdi+0x18]
  40c144:	mov    rdx,rdi
  40c147:	mov    ecx,0x3
  40c14c:	call   QWORD PTR [rdi+0x38]
  40c14f:	mov    r8,QWORD PTR [rdi+0x18]
  40c153:	mov    rdx,rdi
  40c156:	mov    rcx,rsi
  40c159:	call   0x403df0
  40c15e:	mov    QWORD PTR [rdi+0x18],rbp
  40c162:	jmp    0x40bf83
  40c167:	nop    WORD PTR [rax+rax*1+0x0]
  40c170:	mov    eax,DWORD PTR [rdi+0x18]
  40c173:	lea    r8,[rip+0x16531]        # 0x4226ab
  40c17a:	mov    rdx,rdi
  40c17d:	mov    rcx,rsi
  40c180:	test   eax,eax
  40c182:	lea    rax,[rip+0x16527]        # 0x4226b0
  40c189:	cmove  r8,rax
  40c18d:	call   0x403df0
  40c192:	jmp    0x40bf83
  40c197:	nop    WORD PTR [rax+rax*1+0x0]
  40c1a0:	mov    rdx,rdi
  40c1a3:	mov    rbp,QWORD PTR [rdi+0x18]
  40c1a7:	mov    ecx,0x3
  40c1ac:	call   QWORD PTR [rdi+0x38]
  40c1af:	mov    r12,QWORD PTR [rdi+0x18]
  40c1b3:	mov    QWORD PTR [rdi+0x18],rbp
  40c1b7:	mov    rcx,r12
  40c1ba:	call   0x41d7f8
  40c1bf:	lea    rcx,[rax+0x3]
  40c1c3:	mov    r14,rax
  40c1c6:	call   0x405990
  40c1cb:	lea    r8,[r14+0x1]
  40c1cf:	lea    rcx,[rax+0x1]
  40c1d3:	mov    rbp,rax
  40c1d6:	mov    rdx,r12
  40c1d9:	mov    BYTE PTR [rax],0x3d
  40c1dc:	call   0x41d860
  40c1e1:	mov    r8,rbp
  40c1e4:	mov    rdx,rdi
  40c1e7:	mov    rcx,rsi
  40c1ea:	call   0x403df0
  40c1ef:	mov    rcx,rbp
  40c1f2:	call   0x41d8a8
  40c1f7:	mov    rcx,r12
  40c1fa:	call   0x41d8a8
  40c1ff:	jmp    0x40bf83
  40c204:	movsxd r8,DWORD PTR [rdi+0x18]
  40c208:	mov    rdx,rdi
  40c20b:	mov    rcx,rsi
  40c20e:	call   0x403df0
  40c213:	jmp    0x40bf83
  40c218:	cmp    DWORD PTR [r13+0x0],0x1ffff
  40c220:	jle    0x40bf83
  40c226:	movzx  edx,WORD PTR [rdi]
  40c229:	mov    rax,QWORD PTR [r13+0xc8]
  40c230:	mov    r8,QWORD PTR [rdi+0x18]
  40c234:	cmp    QWORD PTR [rax+rdx*8],r8
  40c238:	jne    0x40c0b2
  40c23e:	jmp    0x40bf83
  40c243:	mov    rbp,QWORD PTR [r13+0x28]
  40c247:	mov    rdi,QWORD PTR [rip+0x13e12]        # 0x420060
  40c24e:	mov    rsi,QWORD PTR [rip+0x23737]        # 0x42f98c
  40c255:	call   rsi
  40c257:	lea    rcx,[rax+0x60]
  40c25b:	mov    r8,rbp
  40c25e:	mov    rdx,rdi
  40c261:	call   0x403b50
  40c266:	mov    rdi,QWORD PTR [rip+0x2376f]        # 0x42f9dc
  40c26d:	call   rdi
  40c26f:	mov    ecx,DWORD PTR [rax]
  40c271:	call   0x41d808
  40c276:	mov    r12,rax
  40c279:	call   rdi
  40c27b:	mov    rdi,QWORD PTR [rip+0x13d46]        # 0x41ffc8
  40c282:	mov    ebp,DWORD PTR [rax]
  40c284:	call   rsi
  40c286:	lea    rcx,[rax+0x60]
  40c28a:	mov    QWORD PTR [rsp+0x20],rbx
  40c28f:	mov    r9,r12
  40c292:	mov    r8d,ebp
  40c295:	mov    rdx,rdi
  40c298:	call   0x403b50
  40c29d:	mov    ecx,DWORD PTR [rsp+0x48]
  40c2a1:	test   ecx,ecx
  40c2a3:	je     0x40bf99
  40c2a9:	mov    rcx,rbx
  40c2ac:	call   0x41d8a8
  40c2b1:	jmp    0x40bf99
  40c2b6:	mov    r8,QWORD PTR [rdi+0x18]
  40c2ba:	mov    rdx,rdi
  40c2bd:	mov    rcx,rsi
  40c2c0:	call   0x403df0
  40c2c5:	jmp    0x40bf83
  40c2ca:	test   edx,edx
  40c2cc:	jg     0x40c116
  40c2d2:	jmp    0x40bf83
  40c2d7:	nop    WORD PTR [rax+rax*1+0x0]
  40c2e0:	cmp    rcx,0xf
  40c2e4:	jbe    0x40c2f3
  40c2e6:	test   rdx,rdx
  40c2e9:	je     0x40c2f3
  40c2eb:	mov    rcx,rdx
  40c2ee:	jmp    0x4062c0
  40c2f3:	repz ret 
  40c2f5:	nop
  40c2f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c300:	push   rbx
  40c301:	sub    rsp,0x20
  40c305:	cmp    rcx,0xf
  40c309:	jbe    0x40c340
  40c30b:	test   rdx,rdx
  40c30e:	je     0x40c340
  40c310:	test   BYTE PTR [rdx+0x10],0x8
  40c314:	jne    0x40c340
  40c316:	mov    rcx,QWORD PTR [rdx+0x18]
  40c31a:	test   rcx,rcx
  40c31d:	je     0x40c340
  40c31f:	mov    rbx,rdx
  40c322:	call   0x405700
  40c327:	lea    rcx,[rbx+0x20]
  40c32b:	mov    rdx,rax
  40c32e:	add    rsp,0x20
  40c332:	pop    rbx
  40c333:	jmp    0x4059e0
  40c338:	nop    DWORD PTR [rax+rax*1+0x0]
  40c340:	add    rsp,0x20
  40c344:	pop    rbx
  40c345:	ret    
  40c346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c350:	push   rbx
  40c351:	test   r8d,r8d
  40c354:	jle    0x40c39a
  40c356:	lea    ebx,[r8-0x1]
  40c35a:	xor    r8d,r8d
  40c35d:	add    rbx,0x1
  40c361:	jmp    0x40c36c
  40c363:	add    r8,0x1
  40c367:	cmp    r8,rbx
  40c36a:	je     0x40c39a
  40c36c:	movzx  r10d,BYTE PTR [rcx+r8*1]
  40c371:	movzx  r9d,BYTE PTR [rdx+r8*1]
  40c376:	cmp    r10b,r9b
  40c379:	je     0x40c395
  40c37b:	lea    r11,[rip+0x136be]        # 0x41fa40
  40c382:	movzx  eax,r10b
  40c386:	movzx  eax,BYTE PTR [r11+rax*1]
  40c38b:	movzx  r9d,BYTE PTR [r11+r9*1]
  40c390:	sub    eax,r9d
  40c393:	jne    0x40c39c
  40c395:	test   r10b,r10b
  40c398:	jne    0x40c363
  40c39a:	xor    eax,eax
  40c39c:	pop    rbx
  40c39d:	ret    
  40c39e:	xchg   ax,ax
  40c3a0:	push   r15
  40c3a2:	push   r14
  40c3a4:	push   r13
  40c3a6:	push   r12
  40c3a8:	push   rbp
  40c3a9:	push   rdi
  40c3aa:	push   rsi
  40c3ab:	push   rbx
  40c3ac:	sub    rsp,0xd8
  40c3b3:	mov    rbx,rdx
  40c3b6:	lea    rdx,[rdx+0x80]
  40c3bd:	mov    QWORD PTR [rsp+0x120],rcx
  40c3c5:	mov    QWORD PTR [rsp+0x130],r8
  40c3cd:	mov    r12,rbx
  40c3d0:	mov    esi,r12d
  40c3d3:	add    r12,0x1
  40c3d7:	movzx  eax,BYTE PTR [r12-0x1]
  40c3dd:	sub    esi,ebx
  40c3df:	test   al,al
  40c3e1:	je     0x40c640
  40c3e7:	cmp    al,0x3d
  40c3e9:	jne    0x40c5c0
  40c3ef:	lea    r9,[rsp+0x50]
  40c3f4:	movsxd rdi,esi
  40c3f7:	mov    rdx,rbx
  40c3fa:	mov    r8,rdi
  40c3fd:	mov    rcx,r9
  40c400:	call   0x41d860
  40c405:	mov    BYTE PTR [rsp+rdi*1+0x50],0x0
  40c40a:	mov    rbx,rax
  40c40d:	cmp    esi,0x1
  40c410:	jle    0x40c5d0
  40c416:	mov    rax,QWORD PTR [rsp+0x120]
  40c41e:	mov    rcx,QWORD PTR [rsp+0x120]
  40c426:	xor    r15d,r15d
  40c429:	mov    QWORD PTR [rsp+0x40],r12
  40c42e:	mov    BYTE PTR [rsp+0x3f],0x0
  40c433:	mov    r12d,r15d
  40c436:	mov    DWORD PTR [rsp+0x38],0x0
  40c43e:	xor    ebp,ebp
  40c440:	mov    rax,QWORD PTR [rax+0x78]
  40c444:	mov    edi,DWORD PTR [rcx+0xb0]
  40c44a:	mov    r14,rax
  40c44d:	mov    QWORD PTR [rsp+0x48],rax
  40c452:	movsxd rax,esi
  40c455:	mov    r15,r14
  40c458:	mov    r13,rax
  40c45b:	jmp    0x40c474
  40c45d:	nop    DWORD PTR [rax]
  40c460:	cmp    eax,0x80100
  40c465:	je     0x40c488
  40c467:	add    r12d,0x1
  40c46b:	add    r15,0x68
  40c46f:	cmp    edi,r12d
  40c472:	jle    0x40c4be
  40c474:	mov    r14,QWORD PTR [r15+0x50]
  40c478:	test   r14,r14
  40c47b:	je     0x40c467
  40c47d:	mov    eax,DWORD PTR [r15+0x10]
  40c481:	test   eax,0x280000
  40c486:	jne    0x40c460
  40c488:	mov    r8d,esi
  40c48b:	mov    rdx,r14
  40c48e:	mov    rcx,rbx
  40c491:	call   0x40c350
  40c496:	test   eax,eax
  40c498:	jne    0x40c600
  40c49e:	cmp    BYTE PTR [r14+r13*1],0x0
  40c4a3:	je     0x40c684
  40c4a9:	mov    DWORD PTR [rsp+0x38],r12d
  40c4ae:	add    r12d,0x1
  40c4b2:	add    ebp,0x1
  40c4b5:	add    r15,0x68
  40c4b9:	cmp    edi,r12d
  40c4bc:	jg     0x40c474
  40c4be:	test   ebp,ebp
  40c4c0:	mov    r12,QWORD PTR [rsp+0x40]
  40c4c5:	je     0x40c650
  40c4cb:	cmp    ebp,0x1
  40c4ce:	je     0x40c750
  40c4d4:	mov    rax,QWORD PTR [rsp+0x120]
  40c4dc:	test   BYTE PTR [rax+0x10],0x4
  40c4e0:	je     0x40c5e2
  40c4e6:	mov    r12,QWORD PTR [rax+0x20]
  40c4ea:	mov    rdi,QWORD PTR [rip+0x13a37]        # 0x41ff28
  40c4f1:	mov    rsi,QWORD PTR [rip+0x23494]        # 0x42f98c
  40c4f8:	call   rsi
  40c4fa:	lea    rcx,[rax+0x60]
  40c4fe:	mov    DWORD PTR [rsp+0x20],ebp
  40c502:	mov    r9,rbx
  40c505:	mov    r8,r12
  40c508:	mov    rdx,rdi
  40c50b:	call   0x403b50
  40c510:	cmp    ebp,0x4
  40c513:	jg     0x40c7e2
  40c519:	mov    rcx,rbx
  40c51c:	lea    rbp,[rip+0x165e3]        # 0x422b06
  40c523:	call   0x41d7f8
  40c528:	mov    r12d,eax
  40c52b:	mov    rax,QWORD PTR [rsp+0x120]
  40c533:	test   BYTE PTR [rax+0x10],0x3
  40c537:	lea    rax,[rip+0x1770b]        # 0x423c49
  40c53e:	cmovne rbp,rax
  40c542:	mov    rax,QWORD PTR [rsp+0x120]
  40c54a:	xor    r13d,r13d
  40c54d:	mov    rdi,QWORD PTR [rax+0x78]
  40c551:	call   rsi
  40c553:	mov    rcx,QWORD PTR [rip+0x139c6]        # 0x41ff20
  40c55a:	lea    rdx,[rax+0x60]
  40c55e:	call   0x41d8b8
  40c563:	mov    r14,QWORD PTR [rdi+0x50]
  40c567:	test   r14,r14
  40c56a:	je     0x40c5a1
  40c56c:	mov    r8d,r12d
  40c56f:	mov    rdx,r14
  40c572:	mov    rcx,rbx
  40c575:	call   0x40c350
  40c57a:	test   eax,eax
  40c57c:	je     0x40c7ff
  40c582:	mov    r14,QWORD PTR [rdi+0x58]
  40c586:	test   r14,r14
  40c589:	je     0x40c5a1
  40c58b:	mov    r8d,r12d
  40c58e:	mov    rdx,r14
  40c591:	mov    rcx,rbx
  40c594:	call   0x40c350
  40c599:	test   eax,eax
  40c59b:	je     0x40c7ff
  40c5a1:	mov    rax,QWORD PTR [rsp+0x120]
  40c5a9:	add    rdi,0x68
  40c5ad:	add    r13d,0x1
  40c5b1:	cmp    r13d,DWORD PTR [rax+0xb0]
  40c5b8:	jl     0x40c563
  40c5ba:	jmp    0x40c7e2
  40c5bf:	nop
  40c5c0:	cmp    r12,rdx
  40c5c3:	jne    0x40c3d0
  40c5c9:	nop    DWORD PTR [rax+0x0]
  40c5d0:	mov    rax,QWORD PTR [rsp+0x120]
  40c5d8:	test   BYTE PTR [rax+0x10],0x4
  40c5dc:	jne    0x40c7bf
  40c5e2:	mov    eax,0xffffffff
  40c5e7:	add    rsp,0xd8
  40c5ee:	pop    rbx
  40c5ef:	pop    rsi
  40c5f0:	pop    rdi
  40c5f1:	pop    rbp
  40c5f2:	pop    r12
  40c5f4:	pop    r13
  40c5f6:	pop    r14
  40c5f8:	pop    r15
  40c5fa:	ret    
  40c5fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c600:	mov    r14,QWORD PTR [r15+0x58]
  40c604:	test   r14,r14
  40c607:	je     0x40c467
  40c60d:	mov    r8d,esi
  40c610:	mov    rdx,r14
  40c613:	mov    rcx,rbx
  40c616:	call   0x40c350
  40c61b:	test   eax,eax
  40c61d:	jne    0x40c467
  40c623:	cmp    BYTE PTR [r14+r13*1],0x0
  40c628:	je     0x40c75a
  40c62e:	mov    BYTE PTR [rsp+0x3f],0x1
  40c633:	jmp    0x40c4a9
  40c638:	nop    DWORD PTR [rax+rax*1+0x0]
  40c640:	xor    r12d,r12d
  40c643:	jmp    0x40c40d
  40c648:	nop    DWORD PTR [rax+rax*1+0x0]
  40c650:	mov    rax,QWORD PTR [rsp+0x120]
  40c658:	test   r12,r12
  40c65b:	mov    eax,DWORD PTR [rax+0x10]
  40c65e:	je     0x40c76c
  40c664:	test   al,0x4
  40c666:	je     0x40c5e2
  40c66c:	mov    rax,QWORD PTR [rsp+0x120]
  40c674:	mov    rsi,QWORD PTR [rip+0x138fd]        # 0x41ff78
  40c67b:	mov    rdi,QWORD PTR [rax+0x20]
  40c67f:	jmp    0x40c7ca
  40c684:	mov    r15d,r12d
  40c687:	mov    r12,QWORD PTR [rsp+0x40]
  40c68c:	movsxd r10,r15d
  40c68f:	mov    rcx,QWORD PTR [rsp+0x48]
  40c694:	lea    rax,[r10+r10*2]
  40c698:	lea    rax,[r10+rax*4]
  40c69c:	lea    rbx,[rcx+rax*8]
  40c6a0:	test   DWORD PTR [rbx+0x10],0x280000
  40c6a7:	je     0x40c720
  40c6a9:	mov    rax,QWORD PTR [rsp+0x120]
  40c6b1:	test   BYTE PTR [rax+0x10],0x4
  40c6b5:	je     0x40c5e2
  40c6bb:	mov    r12,QWORD PTR [rbx+0x50]
  40c6bf:	mov    rbp,QWORD PTR [rax+0x28]
  40c6c3:	mov    rdi,QWORD PTR [rip+0x13896]        # 0x41ff60
  40c6ca:	mov    rsi,QWORD PTR [rip+0x232bb]        # 0x42f98c
  40c6d1:	call   rsi
  40c6d3:	lea    rcx,[rax+0x60]
  40c6d7:	mov    r9,r12
  40c6da:	mov    r8,rbp
  40c6dd:	mov    rdx,rdi
  40c6e0:	call   0x403b50
  40c6e5:	mov    rbx,QWORD PTR [rbx+0x40]
  40c6e9:	test   rbx,rbx
  40c6ec:	je     0x40c703
  40c6ee:	call   rsi
  40c6f0:	lea    rdx,[rip+0x17622]        # 0x423d19
  40c6f7:	lea    rcx,[rax+0x60]
  40c6fb:	mov    r8,rbx
  40c6fe:	call   0x403b50
  40c703:	call   rsi
  40c705:	lea    rdx,[rax+0x60]
  40c709:	mov    ecx,0xa
  40c70e:	call   0x41d8c0
  40c713:	jmp    0x40c7e2
  40c718:	nop    DWORD PTR [rax+rax*1+0x0]
  40c720:	cmp    BYTE PTR [rsp+0x3f],0x0
  40c725:	je     0x40c733
  40c727:	mov    rax,QWORD PTR [rsp+0x130]
  40c72f:	or     DWORD PTR [rax+0x10],0x20
  40c733:	mov    rax,QWORD PTR [rsp+0x130]
  40c73b:	mov    QWORD PTR [rax],rbx
  40c73e:	mov    QWORD PTR [rax+0x8],r12
  40c742:	mov    DWORD PTR [rax+0x14],0x2
  40c749:	xor    eax,eax
  40c74b:	jmp    0x40c5e7
  40c750:	mov    r15d,DWORD PTR [rsp+0x38]
  40c755:	jmp    0x40c68c
  40c75a:	mov    r15d,r12d
  40c75d:	mov    BYTE PTR [rsp+0x3f],0x1
  40c762:	mov    r12,QWORD PTR [rsp+0x40]
  40c767:	jmp    0x40c68c
  40c76c:	test   al,0x3
  40c76e:	jne    0x40c664
  40c774:	mov    rcx,QWORD PTR [rsp+0x120]
  40c77c:	movzx  edx,WORD PTR [rcx+0xae]
  40c783:	cmp    dx,0x8000
  40c788:	je     0x40c664
  40c78e:	movzx  eax,dx
  40c791:	mov    rcx,QWORD PTR [rsp+0x48]
  40c796:	lea    rdx,[rax+rax*2]
  40c79a:	lea    rax,[rax+rdx*4]
  40c79e:	lea    rax,[rcx+rax*8]
  40c7a2:	mov    rcx,QWORD PTR [rsp+0x130]
  40c7aa:	mov    QWORD PTR [rcx],rax
  40c7ad:	mov    QWORD PTR [rcx+0x8],rbx
  40c7b1:	xor    eax,eax
  40c7b3:	mov    DWORD PTR [rcx+0x14],0x3
  40c7ba:	jmp    0x40c5e7
  40c7bf:	mov    rdi,QWORD PTR [rax+0x28]
  40c7c3:	mov    rsi,QWORD PTR [rip+0x137ce]        # 0x41ff98
  40c7ca:	call   QWORD PTR [rip+0x231bc]        # 0x42f98c
  40c7d0:	lea    rcx,[rax+0x60]
  40c7d4:	mov    r9,rbx
  40c7d7:	mov    r8,rdi
  40c7da:	mov    rdx,rsi
  40c7dd:	call   0x403b50
  40c7e2:	mov    rcx,QWORD PTR [rsp+0x120]
  40c7ea:	mov    edx,0x1
  40c7ef:	call   QWORD PTR [rcx+0x98]
  40c7f5:	mov    ecx,0x1
  40c7fa:	call   0x41d998
  40c7ff:	call   rsi
  40c801:	lea    rdx,[rip+0x172bc]        # 0x423ac4
  40c808:	lea    rcx,[rax+0x60]
  40c80c:	mov    r9,r14
  40c80f:	mov    r8,rbp
  40c812:	call   0x403b50
  40c817:	jmp    0x40c5a1
  40c81c:	nop    DWORD PTR [rax+0x0]
  40c820:	push   rsi
  40c821:	push   rbx
  40c822:	sub    rsp,0x38
  40c826:	mov    rax,QWORD PTR [rcx+0x18]
  40c82a:	test   rax,rax
  40c82d:	je     0x40c83a
  40c82f:	movzx  eax,BYTE PTR [rax]
  40c832:	test   al,al
  40c834:	jne    0x40c900
  40c83a:	mov    eax,DWORD PTR [rcx+0x14]
  40c83d:	cmp    eax,DWORD PTR [rcx+0x4]
  40c840:	jae    0x40c8af
  40c842:	mov    rbx,rcx
  40c845:	mov    r8,rdx
  40c848:	mov    ecx,eax
  40c84a:	mov    rdx,QWORD PTR [rbx+0x8]
  40c84e:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40c852:	mov    ecx,DWORD PTR [rbx+0x10]
  40c855:	test   cl,0x3
  40c858:	mov    QWORD PTR [rbx+0x18],rdx
  40c85c:	jne    0x40c8a2
  40c85e:	add    eax,0x1
  40c861:	mov    DWORD PTR [rbx+0x14],eax
  40c864:	cmp    BYTE PTR [rdx],0x2d
  40c867:	jne    0x40c8f0
  40c86d:	nop    DWORD PTR [rax]
  40c870:	add    rdx,0x1
  40c874:	cmp    BYTE PTR [rdx],0x2d
  40c877:	je     0x40c870
  40c879:	movzx  esi,WORD PTR [rbx+0xae]
  40c880:	mov    eax,0xffff8000
  40c885:	mov    rcx,rbx
  40c888:	mov    WORD PTR [rbx+0xae],ax
  40c88f:	call   0x40c3a0
  40c894:	mov    WORD PTR [rbx+0xae],si
  40c89b:	add    rsp,0x38
  40c89f:	pop    rbx
  40c8a0:	pop    rsi
  40c8a1:	ret    
  40c8a2:	lea    r9,[rdx+0x1]
  40c8a6:	mov    QWORD PTR [rbx+0x18],r9
  40c8aa:	cmp    BYTE PTR [rdx],0x2d
  40c8ad:	je     0x40c8c0
  40c8af:	mov    eax,0x1
  40c8b4:	add    rsp,0x38
  40c8b8:	pop    rbx
  40c8b9:	pop    rsi
  40c8ba:	ret    
  40c8bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c8c0:	cmp    BYTE PTR [rdx+0x1],0x0
  40c8c4:	je     0x40c8af
  40c8c6:	add    eax,0x1
  40c8c9:	mov    DWORD PTR [rbx+0x14],eax
  40c8cc:	movzx  eax,BYTE PTR [rdx+0x1]
  40c8d0:	cmp    al,0x2d
  40c8d2:	jne    0x40c914
  40c8d4:	lea    rax,[rdx+0x2]
  40c8d8:	mov    QWORD PTR [rbx+0x18],rax
  40c8dc:	cmp    BYTE PTR [rdx+0x2],0x0
  40c8e0:	je     0x40c8af
  40c8e2:	and    ecx,0x1
  40c8e5:	je     0x40c92a
  40c8e7:	mov    rdx,rax
  40c8ea:	nop    WORD PTR [rax+rax*1+0x0]
  40c8f0:	mov    rcx,rbx
  40c8f3:	add    rsp,0x38
  40c8f7:	pop    rbx
  40c8f8:	pop    rsi
  40c8f9:	jmp    0x40c3a0
  40c8fe:	xchg   ax,ax
  40c900:	lea    r9,[rdx+0x14]
  40c904:	mov    r8,rdx
  40c907:	mov    edx,eax
  40c909:	add    rsp,0x38
  40c90d:	pop    rbx
  40c90e:	pop    rsi
  40c90f:	jmp    0x405150
  40c914:	and    ecx,0x2
  40c917:	jne    0x40c91e
  40c919:	mov    rdx,r9
  40c91c:	jmp    0x40c8f0
  40c91e:	movzx  edx,al
  40c921:	lea    r9,[r8+0x14]
  40c925:	mov    rcx,rbx
  40c928:	jmp    0x40c909
  40c92a:	mov    rsi,QWORD PTR [rbx+0x20]
  40c92e:	mov    QWORD PTR [rsp+0x28],rdx
  40c933:	mov    rbx,QWORD PTR [rip+0x1363e]        # 0x41ff78
  40c93a:	call   QWORD PTR [rip+0x2304c]        # 0x42f98c
  40c940:	mov    rdx,QWORD PTR [rsp+0x28]
  40c945:	lea    rcx,[rax+0x60]
  40c949:	mov    r8,rsi
  40c94c:	mov    r9,rdx
  40c94f:	mov    rdx,rbx
  40c952:	call   0x403b50
  40c957:	or     eax,0xffffffff
  40c95a:	jmp    0x40c8b4
  40c95f:	nop
  40c960:	push   rdi
  40c961:	push   rsi
  40c962:	push   rbx
  40c963:	sub    rsp,0x50
  40c967:	or     DWORD PTR [rcx+0x10],0x8000
  40c96e:	lea    rdi,[rsp+0x30]
  40c973:	mov    rbx,rcx
  40c976:	mov    DWORD PTR [rcx+0x14],0x1
  40c97d:	mov    QWORD PTR [rcx+0x18],0x0
  40c985:	mov    rdx,rdi
  40c988:	mov    rcx,rbx
  40c98b:	mov    QWORD PTR [rsp+0x30],0x0
  40c994:	mov    QWORD PTR [rsp+0x38],0x0
  40c99d:	mov    DWORD PTR [rsp+0x40],0x2
  40c9a5:	mov    DWORD PTR [rsp+0x44],0x0
  40c9ad:	call   0x40c820
  40c9b2:	test   eax,eax
  40c9b4:	mov    esi,eax
  40c9b6:	jne    0x40c9c5
  40c9b8:	mov    rdx,rdi
  40c9bb:	mov    rcx,rbx
  40c9be:	call   0x406440
  40c9c3:	mov    esi,eax
  40c9c5:	cmp    esi,0xffffffff
  40c9c8:	je     0x40ca00
  40c9ca:	cmp    esi,0x1
  40c9cd:	je     0x40ca20
  40c9cf:	mov    eax,DWORD PTR [rsp+0x40]
  40c9d3:	mov    edx,eax
  40c9d5:	and    edx,0x20020
  40c9db:	cmp    edx,0x20000
  40c9e1:	je     0x40c9ef
  40c9e3:	and    eax,0x40020
  40c9e8:	cmp    eax,0x40020
  40c9ed:	jne    0x40c985
  40c9ef:	mov    rdx,rdi
  40c9f2:	mov    rcx,rbx
  40c9f5:	call   0x404fa0
  40c9fa:	test   eax,eax
  40c9fc:	je     0x40c985
  40c9fe:	xchg   ax,ax
  40ca00:	mov    edx,DWORD PTR [rbx+0x10]
  40ca03:	mov    eax,esi
  40ca05:	test   dl,0x4
  40ca08:	jne    0x40ca33
  40ca0a:	and    dh,0x7f
  40ca0d:	mov    DWORD PTR [rbx+0x10],edx
  40ca10:	add    rsp,0x50
  40ca14:	pop    rbx
  40ca15:	pop    rsi
  40ca16:	pop    rdi
  40ca17:	ret    
  40ca18:	nop    DWORD PTR [rax+rax*1+0x0]
  40ca20:	mov    edx,DWORD PTR [rbx+0x10]
  40ca23:	xor    eax,eax
  40ca25:	and    dh,0x7f
  40ca28:	mov    DWORD PTR [rbx+0x10],edx
  40ca2b:	add    rsp,0x50
  40ca2f:	pop    rbx
  40ca30:	pop    rsi
  40ca31:	pop    rdi
  40ca32:	ret    
  40ca33:	mov    DWORD PTR [rsp+0x2c],esi
  40ca37:	mov    edx,0x1
  40ca3c:	mov    rcx,rbx
  40ca3f:	call   QWORD PTR [rbx+0x98]
  40ca45:	mov    edx,DWORD PTR [rbx+0x10]
  40ca48:	mov    eax,DWORD PTR [rsp+0x2c]
  40ca4c:	and    dh,0x7f
  40ca4f:	mov    DWORD PTR [rbx+0x10],edx
  40ca52:	add    rsp,0x50
  40ca56:	pop    rbx
  40ca57:	pop    rsi
  40ca58:	pop    rdi
  40ca59:	ret    
  40ca5a:	nop    WORD PTR [rax+rax*1+0x0]
  40ca60:	push   rsi
  40ca61:	push   rbx
  40ca62:	sub    rsp,0x58
  40ca66:	lea    rsi,[rsp+0x30]
  40ca6b:	mov    rbx,rcx
  40ca6e:	mov    rdx,rsi
  40ca71:	mov    rcx,rbx
  40ca74:	mov    QWORD PTR [rsp+0x30],0x0
  40ca7d:	mov    QWORD PTR [rsp+0x38],0x0
  40ca86:	mov    DWORD PTR [rsp+0x40],0x4
  40ca8e:	mov    DWORD PTR [rsp+0x44],0x0
  40ca96:	call   0x40c820
  40ca9b:	test   eax,eax
  40ca9d:	jne    0x40caaa
  40ca9f:	mov    rdx,rsi
  40caa2:	mov    rcx,rbx
  40caa5:	call   0x406440
  40caaa:	cmp    eax,0xffffffff
  40caad:	je     0x40cb05
  40caaf:	cmp    eax,0x1
  40cab2:	je     0x40cb20
  40cab4:	mov    eax,DWORD PTR [rsp+0x40]
  40cab8:	test   eax,0x20020
  40cabd:	je     0x40caf2
  40cabf:	mov    edx,eax
  40cac1:	and    edx,0x40020
  40cac7:	cmp    edx,0x20
  40caca:	je     0x40caf2
  40cacc:	mov    edx,eax
  40cace:	and    edx,0x400020
  40cad4:	cmp    edx,0x400000
  40cada:	je     0x40cae8
  40cadc:	and    eax,0x800020
  40cae1:	cmp    eax,0x800020
  40cae6:	jne    0x40ca6e
  40cae8:	mov    rax,QWORD PTR [rsp+0x30]
  40caed:	sub    WORD PTR [rax+0xe],0x1
  40caf2:	mov    rdx,rsi
  40caf5:	mov    rcx,rbx
  40caf8:	call   0x404fa0
  40cafd:	test   eax,eax
  40caff:	je     0x40ca6e
  40cb05:	test   BYTE PTR [rbx+0x10],0x4
  40cb09:	mov    eax,0xffffffff
  40cb0e:	jne    0x40cb30
  40cb10:	add    rsp,0x58
  40cb14:	pop    rbx
  40cb15:	pop    rsi
  40cb16:	ret    
  40cb17:	nop    WORD PTR [rax+rax*1+0x0]
  40cb20:	xor    al,al
  40cb22:	add    rsp,0x58
  40cb26:	pop    rbx
  40cb27:	pop    rsi
  40cb28:	ret    
  40cb29:	nop    DWORD PTR [rax+0x0]
  40cb30:	mov    DWORD PTR [rsp+0x2c],eax
  40cb34:	mov    edx,0x1
  40cb39:	mov    rcx,rbx
  40cb3c:	call   QWORD PTR [rbx+0x98]
  40cb42:	mov    eax,DWORD PTR [rsp+0x2c]
  40cb46:	add    rsp,0x58
  40cb4a:	pop    rbx
  40cb4b:	pop    rsi
  40cb4c:	ret    
  40cb4d:	nop    DWORD PTR [rax]
  40cb50:	push   r14
  40cb52:	push   r13
  40cb54:	push   r12
  40cb56:	push   rbp
  40cb57:	push   rdi
  40cb58:	push   rsi
  40cb59:	push   rbx
  40cb5a:	sub    rsp,0x20
  40cb5e:	mov    rax,QWORD PTR [rip+0x1fa43]        # 0x42c5a8
  40cb65:	mov    rbp,rcx
  40cb68:	mov    rdi,rdx
  40cb6b:	mov    rbx,r8
  40cb6e:	mov    r12d,r9d
  40cb71:	test   rax,rax
  40cb74:	je     0x40ce44
  40cb7a:	movzx  edx,BYTE PTR [rbx]
  40cb7d:	cmp    BYTE PTR [rax+rdx*1],0x0
  40cb81:	je     0x40cb92
  40cb83:	add    rbx,0x1
  40cb87:	movzx  r10d,BYTE PTR [rbx]
  40cb8b:	cmp    BYTE PTR [rax+r10*1],0x0
  40cb90:	jne    0x40cb83
  40cb92:	lea    rdx,[rip+0x1702c]        # 0x423bc5
  40cb99:	mov    rcx,rbx
  40cb9c:	call   0x41d7e0
  40cba1:	test   rax,rax
  40cba4:	mov    r13,rax
  40cba7:	je     0x40cdf7
  40cbad:	cmp    DWORD PTR [rsp+0x80],0x2
  40cbb5:	je     0x40cdc0
  40cbbb:	movzx  eax,BYTE PTR [rax]
  40cbbe:	xor    r14d,r14d
  40cbc1:	cmp    al,0x7f
  40cbc3:	jbe    0x40cca0
  40cbc9:	mov    rdx,QWORD PTR [rip+0x1f8d0]        # 0x42c4a0
  40cbd0:	lea    rsi,[r13+0x1]
  40cbd4:	mov    BYTE PTR [r13+0x0],0x0
  40cbd9:	test   rdx,rdx
  40cbdc:	je     0x40ce77
  40cbe2:	movzx  eax,BYTE PTR [r13+0x1]
  40cbe7:	cmp    BYTE PTR [rdx+rax*1],0x0
  40cbeb:	mov    r10,rax
  40cbee:	je     0x40cc02
  40cbf0:	add    rsi,0x1
  40cbf4:	movzx  r11d,BYTE PTR [rsi]
  40cbf8:	cmp    BYTE PTR [rdx+r11*1],0x0
  40cbfd:	mov    r10,r11
  40cc00:	jne    0x40cbf0
  40cc02:	test   r14d,r14d
  40cc05:	mov    r13,rsi
  40cc08:	je     0x40cc1e
  40cc0a:	cmp    r10b,0x3d
  40cc0e:	je     0x40cd30
  40cc14:	cmp    r10b,0x3a
  40cc18:	je     0x40cd30
  40cc1e:	movzx  eax,BYTE PTR [rbx+0x1]
  40cc22:	cmp    al,0x7f
  40cc24:	ja     0x40cc75
  40cc26:	lea    rdx,[rip+0x19a93]        # 0x4266c0
  40cc2d:	test   DWORD PTR [rdx+rax*4],0x3b0040
  40cc34:	je     0x40cc75
  40cc36:	mov    r8,rdi
  40cc39:	mov    rdx,rbx
  40cc3c:	mov    rcx,rbp
  40cc3f:	call   0x40c3a0
  40cc44:	test   eax,eax
  40cc46:	jne    0x40cc8b
  40cc48:	test   r12d,r12d
  40cc4b:	je     0x40ccc0
  40cc4d:	mov    eax,DWORD PTR [rdi+0x10]
  40cc50:	test   ah,0x1
  40cc53:	jne    0x40cc8b
  40cc55:	movzx  edx,BYTE PTR [r13+0x0]
  40cc5a:	cmp    dl,0x22
  40cc5d:	je     0x40cd70
  40cc63:	cmp    dl,0x27
  40cc66:	je     0x40cd70
  40cc6c:	mov    QWORD PTR [rdi+0x8],r13
  40cc70:	jmp    0x40cd81
  40cc75:	movsx  edx,BYTE PTR [rbx]
  40cc78:	lea    r9,[rdi+0x14]
  40cc7c:	mov    r8,rdi
  40cc7f:	mov    rcx,rbp
  40cc82:	call   0x405150
  40cc87:	test   eax,eax
  40cc89:	je     0x40cc48
  40cc8b:	add    rsp,0x20
  40cc8f:	pop    rbx
  40cc90:	pop    rsi
  40cc91:	pop    rdi
  40cc92:	pop    rbp
  40cc93:	pop    r12
  40cc95:	pop    r13
  40cc97:	pop    r14
  40cc99:	ret    
  40cc9a:	nop    WORD PTR [rax+rax*1+0x0]
  40cca0:	lea    rdx,[rip+0x19a19]        # 0x4266c0
  40cca7:	xor    r14d,r14d
  40ccaa:	test   DWORD PTR [rdx+rax*4],0xc01
  40ccb1:	setne  r14b
  40ccb5:	jmp    0x40cbc9
  40ccba:	nop    WORD PTR [rax+rax*1+0x0]
  40ccc0:	movzx  eax,BYTE PTR [r13+0x0]
  40ccc5:	cmp    al,0x22
  40ccc7:	je     0x40ce1e
  40cccd:	cmp    al,0x27
  40cccf:	je     0x40ce1e
  40ccd5:	mov    QWORD PTR [rdi+0x8],r13
  40ccd9:	mov    rax,QWORD PTR [rdi]
  40ccdc:	mov    eax,DWORD PTR [rax+0x10]
  40ccdf:	test   ah,0xf0
  40cce2:	jne    0x40cdd0
  40cce8:	cmp    BYTE PTR [r13+0x0],0x0
  40cced:	jne    0x40cc8b
  40ccef:	mov    QWORD PTR [rdi+0x8],0x0
  40ccf7:	mov    ebx,DWORD PTR [rip+0x13153]        # 0x41fe50
  40ccfd:	mov    eax,DWORD PTR [rsp+0x80]
  40cd04:	mov    rdx,rdi
  40cd07:	mov    rcx,rbp
  40cd0a:	mov    DWORD PTR [rip+0x13140],eax        # 0x41fe50
  40cd10:	call   0x404fa0
  40cd15:	mov    DWORD PTR [rip+0x13135],ebx        # 0x41fe50
  40cd1b:	add    rsp,0x20
  40cd1f:	pop    rbx
  40cd20:	pop    rsi
  40cd21:	pop    rdi
  40cd22:	pop    rbp
  40cd23:	pop    r12
  40cd25:	pop    r13
  40cd27:	pop    r14
  40cd29:	ret    
  40cd2a:	nop    WORD PTR [rax+rax*1+0x0]
  40cd30:	mov    rax,QWORD PTR [rip+0x1f769]        # 0x42c4a0
  40cd37:	lea    r13,[rsi+0x1]
  40cd3b:	test   rax,rax
  40cd3e:	je     0x40ce89
  40cd44:	movzx  edx,BYTE PTR [rsi+0x1]
  40cd48:	cmp    BYTE PTR [rax+rdx*1],0x0
  40cd4c:	je     0x40cc1e
  40cd52:	add    r13,0x1
  40cd56:	movzx  edx,BYTE PTR [r13+0x0]
  40cd5b:	cmp    BYTE PTR [rax+rdx*1],0x0
  40cd5f:	jne    0x40cd52
  40cd61:	jmp    0x40cc1e
  40cd66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cd70:	xor    edx,edx
  40cd72:	mov    rcx,r13
  40cd75:	call   0x408ba0
  40cd7a:	mov    eax,DWORD PTR [rdi+0x10]
  40cd7d:	mov    QWORD PTR [rdi+0x8],r13
  40cd81:	mov    edx,eax
  40cd83:	and    edx,0x60000
  40cd89:	cmp    edx,0x20000
  40cd8f:	je     0x40ce53
  40cd95:	jbe    0x40ce08
  40cd97:	cmp    edx,0x40000
  40cd9d:	je     0x40ce65
  40cda3:	cmp    edx,0x60000
  40cda9:	jne    0x40ccd9
  40cdaf:	test   r12d,r12d
  40cdb2:	jg     0x40cc8b
  40cdb8:	jmp    0x40ccd9
  40cdbd:	nop    DWORD PTR [rax]
  40cdc0:	mov    BYTE PTR [rax],0x0
  40cdc3:	add    r13,0x1
  40cdc7:	jmp    0x40cc1e
  40cdcc:	nop    DWORD PTR [rax+0x0]
  40cdd0:	test   eax,0x10000
  40cdd5:	je     0x40ce2d
  40cdd7:	cmp    BYTE PTR [r13+0x0],0x0
  40cddc:	je     0x40ccef
  40cde2:	mov    rcx,r13
  40cde5:	call   0x405700
  40cdea:	or     DWORD PTR [rdi+0x10],0x40
  40cdee:	mov    QWORD PTR [rdi+0x8],rax
  40cdf2:	jmp    0x40ccf7
  40cdf7:	mov    rcx,rbx
  40cdfa:	call   0x41d7f8
  40cdff:	lea    r13,[rbx+rax*1]
  40ce03:	jmp    0x40cc1e
  40ce08:	test   edx,edx
  40ce0a:	jne    0x40ccd9
  40ce10:	test   r12d,r12d
  40ce13:	jns    0x40ccd9
  40ce19:	jmp    0x40cc8b
  40ce1e:	xor    edx,edx
  40ce20:	mov    rcx,r13
  40ce23:	call   0x408ba0
  40ce28:	jmp    0x40ccd5
  40ce2d:	cmp    BYTE PTR [r13+0x0],0x0
  40ce32:	jne    0x40cde2
  40ce34:	lea    rax,[rip+0x18694]        # 0x4254cf
  40ce3b:	mov    QWORD PTR [rdi+0x8],rax
  40ce3f:	jmp    0x40ccf7
  40ce44:	mov    ecx,0x2d
  40ce49:	call   0x4054a0
  40ce4e:	jmp    0x40cb7a
  40ce53:	test   r12d,r12d
  40ce56:	js     0x40ce6a
  40ce58:	test   al,0x20
  40ce5a:	je     0x40ccd9
  40ce60:	jmp    0x40cc8b
  40ce65:	test   r12d,r12d
  40ce68:	js     0x40ce58
  40ce6a:	test   al,0x20
  40ce6c:	jne    0x40ccd9
  40ce72:	jmp    0x40cc8b
  40ce77:	mov    ecx,0xc
  40ce7c:	call   0x4054a0
  40ce81:	mov    rdx,rax
  40ce84:	jmp    0x40cbe2
  40ce89:	mov    ecx,0xc
  40ce8e:	call   0x4054a0
  40ce93:	jmp    0x40cd44
  40ce98:	nop    DWORD PTR [rax+rax*1+0x0]
  40cea0:	push   rdi
  40cea1:	push   rsi
  40cea2:	push   rbx
  40cea3:	sub    rsp,0x50
  40cea7:	mov    esi,DWORD PTR [rcx+0x10]
  40ceaa:	mov    rbx,rcx
  40cead:	mov    QWORD PTR [rsp+0x30],0x0
  40ceb6:	mov    QWORD PTR [rsp+0x38],0x0
  40cebf:	mov    DWORD PTR [rsp+0x40],0x1
  40cec7:	mov    DWORD PTR [rsp+0x44],0x0
  40cecf:	mov    eax,esi
  40ced1:	and    eax,0xfffffffb
  40ced4:	mov    DWORD PTR [rcx+0x10],eax
  40ced7:	mov    rcx,rdx
  40ceda:	call   0x405700
  40cedf:	lea    rdx,[rsp+0x30]
  40cee4:	mov    rdi,rax
  40cee7:	xor    r9d,r9d
  40ceea:	mov    r8,rax
  40ceed:	mov    rcx,rbx
  40cef0:	mov    DWORD PTR [rsp+0x20],0x0
  40cef8:	call   0x40cb50
  40cefd:	mov    rcx,rdi
  40cf00:	call   0x41d8a8
  40cf05:	mov    DWORD PTR [rbx+0x10],esi
  40cf08:	add    rsp,0x50
  40cf0c:	pop    rbx
  40cf0d:	pop    rsi
  40cf0e:	pop    rdi
  40cf0f:	ret    
  40cf10:	push   rbp
  40cf11:	push   rdi
  40cf12:	push   rsi
  40cf13:	push   rbx
  40cf14:	sub    rsp,0x48
  40cf18:	mov    rsi,QWORD PTR [rdx+0x18]
  40cf1c:	cmp    rcx,0xf
  40cf20:	mov    QWORD PTR [rsp+0x20],0x0
  40cf29:	mov    QWORD PTR [rsp+0x28],0x0
  40cf32:	mov    DWORD PTR [rsp+0x30],0x2
  40cf3a:	mov    DWORD PTR [rsp+0x34],0x0
  40cf42:	jbe    0x40cf4b
  40cf44:	mov    eax,DWORD PTR [rdx+0x10]
  40cf47:	test   al,0x8
  40cf49:	je     0x40cf54
  40cf4b:	add    rsp,0x48
  40cf4f:	pop    rbx
  40cf50:	pop    rsi
  40cf51:	pop    rdi
  40cf52:	pop    rbp
  40cf53:	ret    
  40cf54:	test   ah,0x80
  40cf57:	je     0x40cff0
  40cf5d:	test   BYTE PTR [rcx+0x12],0x4
  40cf61:	mov    rbx,rcx
  40cf64:	je     0x40d022
  40cf6a:	lea    rdi,[rsp+0x20]
  40cf6f:	mov    rdx,rsi
  40cf72:	mov    r8,rdi
  40cf75:	call   0x40c3a0
  40cf7a:	test   eax,eax
  40cf7c:	jne    0x40d022
  40cf82:	mov    rdx,rdi
  40cf85:	mov    rcx,rbx
  40cf88:	call   0x405540
  40cf8d:	test   eax,eax
  40cf8f:	jne    0x40d022
  40cf95:	test   BYTE PTR [rbx+0x11],0x80
  40cf99:	mov    eax,DWORD PTR [rsp+0x30]
  40cf9d:	jne    0x40d000
  40cf9f:	test   eax,0x20020
  40cfa4:	je     0x40cfd3
  40cfa6:	mov    edx,eax
  40cfa8:	and    edx,0x40020
  40cfae:	cmp    edx,0x20
  40cfb1:	je     0x40cfd3
  40cfb3:	mov    edx,eax
  40cfb5:	and    edx,0x400020
  40cfbb:	cmp    edx,0x400000
  40cfc1:	je     0x40cfd3
  40cfc3:	and    eax,0x800020
  40cfc8:	cmp    eax,0x800020
  40cfcd:	jne    0x40cf4b
  40cfd3:	mov    rdx,rdi
  40cfd6:	mov    rcx,rbx
  40cfd9:	call   0x404fa0
  40cfde:	nop
  40cfdf:	add    rsp,0x48
  40cfe3:	pop    rbx
  40cfe4:	pop    rsi
  40cfe5:	pop    rdi
  40cfe6:	pop    rbp
  40cfe7:	ret    
  40cfe8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cff0:	mov    DWORD PTR [rsp+0x30],0x4
  40cff8:	jmp    0x40cf5d
  40cffd:	nop    DWORD PTR [rax]
  40d000:	mov    edx,eax
  40d002:	and    edx,0x20020
  40d008:	cmp    edx,0x20000
  40d00e:	je     0x40cfd3
  40d010:	and    eax,0x40020
  40d015:	cmp    eax,0x40020
  40d01a:	jne    0x40cf4b
  40d020:	jmp    0x40cfd3
  40d022:	mov    rbp,QWORD PTR [rbx+0x28]
  40d026:	mov    rdi,QWORD PTR [rip+0x12f53]        # 0x41ff80
  40d02d:	call   QWORD PTR [rip+0x22959]        # 0x42f98c
  40d033:	lea    rcx,[rax+0x60]
  40d037:	mov    r9,rsi
  40d03a:	mov    r8,rbp
  40d03d:	mov    rdx,rdi
  40d040:	call   0x403b50
  40d045:	mov    rcx,rbx
  40d048:	mov    edx,0x1
  40d04d:	call   QWORD PTR [rbx+0x98]
  40d053:	mov    ecx,0x1
  40d058:	call   0x41d998
  40d05d:	nop
  40d05e:	xchg   ax,ax
  40d060:	push   r12
  40d062:	push   rbp
  40d063:	push   rdi
  40d064:	push   rsi
  40d065:	push   rbx
  40d066:	sub    rsp,0x40
  40d06a:	mov    rsi,QWORD PTR [rdx+0x18]
  40d06e:	cmp    rcx,0xf
  40d072:	mov    QWORD PTR [rsp+0x20],0x0
  40d07b:	mov    QWORD PTR [rsp+0x28],0x0
  40d084:	mov    DWORD PTR [rsp+0x30],0x4
  40d08c:	mov    DWORD PTR [rsp+0x34],0x0
  40d094:	jbe    0x40d1af
  40d09a:	cmp    BYTE PTR [rip+0x1f26f],0x0        # 0x42c310
  40d0a1:	jne    0x40d1af
  40d0a7:	cmp    DWORD PTR [rcx],0x1ffff
  40d0ad:	mov    rbx,rcx
  40d0b0:	jle    0x40d24b
  40d0b6:	cmp    QWORD PTR [rcx+0xd0],0x0
  40d0be:	je     0x40d24b
  40d0c4:	test   rsi,rsi
  40d0c7:	je     0x40d0ce
  40d0c9:	cmp    BYTE PTR [rsi],0x0
  40d0cc:	jne    0x40d11c
  40d0ce:	mov    r12,QWORD PTR [rdx+0x50]
  40d0d2:	mov    rbp,QWORD PTR [rbx+0x28]
  40d0d6:	mov    rdi,QWORD PTR [rip+0x12efb]        # 0x41ffd8
  40d0dd:	call   QWORD PTR [rip+0x228a9]        # 0x42f98c
  40d0e3:	lea    rcx,[rax+0x60]
  40d0e7:	mov    r8,rbp
  40d0ea:	mov    r9,r12
  40d0ed:	mov    rdx,rdi
  40d0f0:	call   0x403b50
  40d0f5:	mov    edx,0x1
  40d0fa:	mov    rcx,rbx
  40d0fd:	call   QWORD PTR [rbx+0x98]
  40d103:	lea    rdx,[rip+0x15a6e]        # 0x422b78
  40d10a:	lea    rcx,[rip+0x15a6f]        # 0x422b80
  40d111:	mov    r8d,0x60
  40d117:	call   0x418a10
  40d11c:	cmp    BYTE PTR [rsi+0x1],0x0
  40d120:	mov    BYTE PTR [rip+0x1f1e9],0x1        # 0x42c310
  40d127:	jne    0x40d1c0
  40d12d:	movzx  edx,BYTE PTR [rsi]
  40d130:	cmp    dl,0x2a
  40d133:	je     0x40d223
  40d139:	lea    r8,[rsp+0x20]
  40d13e:	mov    rcx,rbx
  40d141:	lea    r9,[r8+0x14]
  40d145:	call   0x405150
  40d14a:	test   eax,eax
  40d14c:	je     0x40d19b
  40d14e:	movsx  ebp,BYTE PTR [rsi]
  40d151:	mov    rdi,QWORD PTR [rbx+0x20]
  40d155:	mov    rsi,QWORD PTR [rip+0x12e14]        # 0x41ff70
  40d15c:	call   QWORD PTR [rip+0x2282a]        # 0x42f98c
  40d162:	lea    rcx,[rax+0x60]
  40d166:	mov    r8,rdi
  40d169:	mov    r9d,ebp
  40d16c:	mov    rdx,rsi
  40d16f:	call   0x403b50
  40d174:	mov    edx,0x1
  40d179:	mov    rcx,rbx
  40d17c:	call   QWORD PTR [rbx+0x98]
  40d182:	lea    rdx,[rip+0x159ef]        # 0x422b78
  40d189:	lea    rcx,[rip+0x159f0]        # 0x422b80
  40d190:	mov    r8d,0x71
  40d196:	call   0x418a10
  40d19b:	mov    rdx,QWORD PTR [rsp+0x20]
  40d1a0:	mov    rcx,rbx
  40d1a3:	call   0x403a30
  40d1a8:	mov    BYTE PTR [rip+0x1f161],0x0        # 0x42c310
  40d1af:	add    rsp,0x40
  40d1b3:	pop    rbx
  40d1b4:	pop    rsi
  40d1b5:	pop    rdi
  40d1b6:	pop    rbp
  40d1b7:	pop    r12
  40d1b9:	ret    
  40d1ba:	nop    WORD PTR [rax+rax*1+0x0]
  40d1c0:	lea    r8,[rsp+0x20]
  40d1c5:	mov    rdx,rsi
  40d1c8:	mov    rcx,rbx
  40d1cb:	call   0x40c3a0
  40d1d0:	test   eax,eax
  40d1d2:	je     0x40d19b
  40d1d4:	mov    rbp,QWORD PTR [rbx+0x20]
  40d1d8:	mov    rdi,QWORD PTR [rip+0x12d99]        # 0x41ff78
  40d1df:	call   QWORD PTR [rip+0x227a7]        # 0x42f98c
  40d1e5:	lea    rcx,[rax+0x60]
  40d1e9:	mov    r9,rsi
  40d1ec:	mov    r8,rbp
  40d1ef:	mov    rdx,rdi
  40d1f2:	call   0x403b50
  40d1f7:	mov    rcx,rbx
  40d1fa:	mov    edx,0x1
  40d1ff:	call   QWORD PTR [rbx+0x98]
  40d205:	lea    rdx,[rip+0x1596c]        # 0x422b78
  40d20c:	lea    rcx,[rip+0x1596d]        # 0x422b80
  40d213:	mov    r8d,0x79
  40d219:	call   0x418a10
  40d21e:	jmp    0x40d19b
  40d223:	mov    rdi,QWORD PTR [rbx+0x78]
  40d227:	mov    esi,DWORD PTR [rbx+0xb4]
  40d22d:	jmp    0x40d234
  40d22f:	nop
  40d230:	add    rdi,0x68
  40d234:	mov    rdx,rdi
  40d237:	mov    rcx,rbx
  40d23a:	sub    esi,0x1
  40d23d:	call   0x403a30
  40d242:	test   esi,esi
  40d244:	jg     0x40d230
  40d246:	jmp    0x40d1a8
  40d24b:	mov    rcx,QWORD PTR [rip+0x12c96]        # 0x41fee8
  40d252:	call   0x403fc0
  40d257:	nop
  40d258:	nop    DWORD PTR [rax+rax*1+0x0]
  40d260:	push   r13
  40d262:	push   r12
  40d264:	push   rbp
  40d265:	push   rdi
  40d266:	push   rsi
  40d267:	push   rbx
  40d268:	sub    rsp,0x28
  40d26c:	mov    rbp,rcx
  40d26f:	mov    ecx,0xa
  40d274:	mov    rsi,rdx
  40d277:	call   0x405990
  40d27c:	mov    rcx,QWORD PTR [rbp+0x28]
  40d280:	mov    rdi,rax
  40d283:	call   0x41d7f8
  40d288:	mov    r13,rax
  40d28b:	mov    eax,0x3f3c
  40d290:	mov    WORD PTR [rdi],ax
  40d293:	movabs rax,0x6d6172676f7270
  40d29d:	mov    r12d,r13d
  40d2a0:	mov    QWORD PTR [rdi+0x2],rax
  40d2a4:	mov    r10,QWORD PTR [rip+0x1f1f5]        # 0x42c4a0
  40d2ab:	lea    rbx,[rsi+0x1]
  40d2af:	test   r10,r10
  40d2b2:	je     0x40d328
  40d2b4:	movzx  eax,BYTE PTR [rsi+0x1]
  40d2b8:	cmp    BYTE PTR [r10+rax*1],0x0
  40d2bd:	je     0x40d2cf
  40d2bf:	nop
  40d2c0:	add    rbx,0x1
  40d2c4:	movzx  r9d,BYTE PTR [rbx]
  40d2c8:	cmp    BYTE PTR [r10+r9*1],0x0
  40d2cd:	jne    0x40d2c0
  40d2cf:	mov    rdx,QWORD PTR [rbp+0x28]
  40d2d3:	mov    r8d,r12d
  40d2d6:	mov    rcx,rbx
  40d2d9:	call   0x40c350
  40d2de:	test   eax,eax
  40d2e0:	jne    0x40d2fd
  40d2e2:	lea    rsi,[rbx+r13*1]
  40d2e6:	movzx  eax,BYTE PTR [rsi]
  40d2e9:	cmp    al,0x7f
  40d2eb:	ja     0x40d2fd
  40d2ed:	lea    rdx,[rip+0x193cc]        # 0x4266c0
  40d2f4:	test   DWORD PTR [rdx+rax*4],0x1000c01
  40d2fb:	jne    0x40d33a
  40d2fd:	mov    rdx,rdi
  40d300:	mov    rcx,rbx
  40d303:	call   0x41d7d0
  40d308:	test   rax,rax
  40d30b:	mov    rsi,rax
  40d30e:	jne    0x40d2a4
  40d310:	mov    rcx,rdi
  40d313:	call   0x41d8a8
  40d318:	mov    rax,rsi
  40d31b:	add    rsp,0x28
  40d31f:	pop    rbx
  40d320:	pop    rsi
  40d321:	pop    rdi
  40d322:	pop    rbp
  40d323:	pop    r12
  40d325:	pop    r13
  40d327:	ret    
  40d328:	mov    ecx,0xc
  40d32d:	call   0x4054a0
  40d332:	mov    r10,rax
  40d335:	jmp    0x40d2b4
  40d33a:	mov    rcx,rdi
  40d33d:	call   0x41d8a8
  40d342:	jmp    0x40d34c
  40d344:	add    rsi,0x1
  40d348:	cmp    al,0x3e
  40d34a:	je     0x40d318
  40d34c:	movzx  eax,BYTE PTR [rsi]
  40d34f:	test   al,al
  40d351:	jne    0x40d344
  40d353:	xor    esi,esi
  40d355:	mov    rax,rsi
  40d358:	add    rsp,0x28
  40d35c:	pop    rbx
  40d35d:	pop    rsi
  40d35e:	pop    rdi
  40d35f:	pop    rbp
  40d360:	pop    r12
  40d362:	pop    r13
  40d364:	ret    
  40d365:	nop
  40d366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d370:	push   r14
  40d372:	push   r13
  40d374:	push   r12
  40d376:	push   rbp
  40d377:	push   rdi
  40d378:	push   rsi
  40d379:	push   rbx
  40d37a:	sub    rsp,0x20
  40d37e:	test   rdx,rdx
  40d381:	mov    rbp,rcx
  40d384:	mov    rbx,rdx
  40d387:	je     0x40d400
  40d389:	mov    rax,QWORD PTR [rip+0x1f110]        # 0x42c4a0
  40d390:	test   rax,rax
  40d393:	je     0x40d4c2
  40d399:	movzx  ecx,BYTE PTR [rbx]
  40d39c:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d3a0:	mov    rdx,rcx
  40d3a3:	je     0x40d3b7
  40d3a5:	add    rbx,0x1
  40d3a9:	movzx  r8d,BYTE PTR [rbx]
  40d3ad:	cmp    BYTE PTR [rax+r8*1],0x0
  40d3b2:	mov    rdx,r8
  40d3b5:	jne    0x40d3a5
  40d3b7:	test   dl,dl
  40d3b9:	je     0x40d3f1
  40d3bb:	xor    esi,esi
  40d3bd:	mov    r14d,0x1
  40d3c3:	lea    rdi,[rip+0x15936]        # 0x422d00
  40d3ca:	xor    r12d,r12d
  40d3cd:	mov    r13,QWORD PTR [rdi]
  40d3d0:	mov    rdx,QWORD PTR [rdi+0x10]
  40d3d4:	mov    rcx,rbx
  40d3d7:	mov    r8d,r13d
  40d3da:	call   0x40c350
  40d3df:	test   eax,eax
  40d3e1:	je     0x40d420
  40d3e3:	add    r12d,0x1
  40d3e7:	add    rdi,0x18
  40d3eb:	cmp    r12d,0x5
  40d3ef:	jne    0x40d3cd
  40d3f1:	add    rsp,0x20
  40d3f5:	pop    rbx
  40d3f6:	pop    rsi
  40d3f7:	pop    rdi
  40d3f8:	pop    rbp
  40d3f9:	pop    r12
  40d3fb:	pop    r13
  40d3fd:	pop    r14
  40d3ff:	ret    
  40d400:	lea    rcx,[rip+0x15780]        # 0x422b87
  40d407:	call   0x41d888
  40d40c:	test   rax,rax
  40d40f:	mov    rbx,rax
  40d412:	jne    0x40d389
  40d418:	jmp    0x40d3f1
  40d41a:	nop    WORD PTR [rax+rax*1+0x0]
  40d420:	add    rbx,r13
  40d423:	movzx  r8d,BYTE PTR [rbx]
  40d427:	cmp    r8b,0x7f
  40d42b:	ja     0x40d3f1
  40d42d:	lea    rdx,[rip+0x1928c]        # 0x4266c0
  40d434:	movzx  eax,r8b
  40d438:	test   DWORD PTR [rdx+rax*4],0xc13
  40d43f:	je     0x40d3f1
  40d441:	mov    eax,r14d
  40d444:	mov    ecx,r12d
  40d447:	shl    eax,cl
  40d449:	or     esi,eax
  40d44b:	mov    rax,QWORD PTR [rip+0x1f04e]        # 0x42c4a0
  40d452:	test   rax,rax
  40d455:	je     0x40d522
  40d45b:	mov    edx,r8d
  40d45e:	cmp    BYTE PTR [rax+r8*1],0x0
  40d463:	je     0x40d475
  40d465:	add    rbx,0x1
  40d469:	movzx  ecx,BYTE PTR [rbx]
  40d46c:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d470:	mov    rdx,rcx
  40d473:	jne    0x40d465
  40d475:	test   dl,dl
  40d477:	je     0x40d4d1
  40d479:	cmp    dl,0x2c
  40d47c:	jne    0x40d3c3
  40d482:	mov    rax,QWORD PTR [rip+0x1f017]        # 0x42c4a0
  40d489:	lea    rdi,[rbx+0x1]
  40d48d:	test   rax,rax
  40d490:	je     0x40d538
  40d496:	movzx  edx,BYTE PTR [rbx+0x1]
  40d49a:	mov    rbx,rdi
  40d49d:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d4a1:	je     0x40d3c3
  40d4a7:	nop    WORD PTR [rax+rax*1+0x0]
  40d4b0:	add    rbx,0x1
  40d4b4:	movzx  edx,BYTE PTR [rbx]
  40d4b7:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d4bb:	jne    0x40d4b0
  40d4bd:	jmp    0x40d3c3
  40d4c2:	mov    ecx,0xc
  40d4c7:	call   0x4054a0
  40d4cc:	jmp    0x40d399
  40d4d1:	mov    eax,esi
  40d4d3:	and    eax,0x3
  40d4d6:	cmp    eax,0x3
  40d4d9:	je     0x40d3f1
  40d4df:	mov    eax,esi
  40d4e1:	and    eax,0xc
  40d4e4:	cmp    eax,0xc
  40d4e7:	je     0x40d3f1
  40d4ed:	lea    rax,[rip+0x1580c]        # 0x422d00
  40d4f4:	jmp    0x40d50f
  40d4f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d500:	and    DWORD PTR [rbp+0x0],edx
  40d503:	shr    esi,1
  40d505:	je     0x40d3f1
  40d50b:	add    rax,0x18
  40d50f:	test   sil,0x1
  40d513:	je     0x40d503
  40d515:	mov    edx,DWORD PTR [rax+0x8]
  40d518:	test   dl,0x1
  40d51b:	jne    0x40d500
  40d51d:	or     DWORD PTR [rbp+0x0],edx
  40d520:	jmp    0x40d503
  40d522:	mov    ecx,0xc
  40d527:	call   0x4054a0
  40d52c:	movzx  edx,BYTE PTR [rbx]
  40d52f:	movzx  r8d,dl
  40d533:	jmp    0x40d45e
  40d538:	mov    ecx,0xc
  40d53d:	call   0x4054a0
  40d542:	jmp    0x40d496
  40d547:	nop    WORD PTR [rax+rax*1+0x0]
  40d550:	push   r12
  40d552:	push   rbp
  40d553:	push   rdi
  40d554:	push   rsi
  40d555:	push   rbx
  40d556:	sub    rsp,0x30
  40d55a:	mov    rax,QWORD PTR [rip+0x1ef3f]        # 0x42c4a0
  40d561:	mov    rbp,rcx
  40d564:	lea    rbx,[rdx+0x1]
  40d568:	test   rax,rax
  40d56b:	je     0x40d5ee
  40d571:	movzx  edx,BYTE PTR [rdx+0x1]
  40d575:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d579:	je     0x40d58d
  40d57b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d580:	add    rbx,0x1
  40d584:	movzx  edx,BYTE PTR [rbx]
  40d587:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d58b:	jne    0x40d580
  40d58d:	mov    edx,0x3e
  40d592:	mov    rcx,rbx
  40d595:	call   0x41d820
  40d59a:	test   rax,rax
  40d59d:	mov    rsi,rax
  40d5a0:	je     0x40d5e0
  40d5a2:	mov    r12d,eax
  40d5a5:	add    rsi,0x1
  40d5a9:	sub    r12d,ebx
  40d5ac:	lea    rcx,[r12+0x1]
  40d5b1:	call   0x405990
  40d5b6:	mov    r8,r12
  40d5b9:	mov    rdx,rbx
  40d5bc:	mov    rcx,rax
  40d5bf:	mov    rdi,rax
  40d5c2:	call   0x41d860
  40d5c7:	lea    rcx,[rbp+0x10]
  40d5cb:	mov    rdx,rdi
  40d5ce:	mov    BYTE PTR [rdi+r12*1],0x0
  40d5d3:	call   0x40d370
  40d5d8:	mov    rcx,rdi
  40d5db:	call   0x41d8a8
  40d5e0:	mov    rax,rsi
  40d5e3:	add    rsp,0x30
  40d5e7:	pop    rbx
  40d5e8:	pop    rsi
  40d5e9:	pop    rdi
  40d5ea:	pop    rbp
  40d5eb:	pop    r12
  40d5ed:	ret    
  40d5ee:	mov    ecx,0xc
  40d5f3:	mov    QWORD PTR [rsp+0x28],rdx
  40d5f8:	call   0x4054a0
  40d5fd:	mov    rdx,QWORD PTR [rsp+0x28]
  40d602:	jmp    0x40d571
  40d607:	nop    WORD PTR [rax+rax*1+0x0]
  40d610:	push   rbp
  40d611:	push   rdi
  40d612:	push   rsi
  40d613:	push   rbx
  40d614:	sub    rsp,0x28
  40d618:	test   BYTE PTR [rdx+0x12],0x1
  40d61c:	mov    rbx,rcx
  40d61f:	mov    rsi,r8
  40d622:	mov    ebp,r9d
  40d625:	je     0x40d660
  40d627:	mov    rax,QWORD PTR [rdx+0x18]
  40d62b:	test   rax,rax
  40d62e:	je     0x40d660
  40d630:	movzx  edi,BYTE PTR [rax]
  40d633:	test   dil,dil
  40d636:	je     0x40d660
  40d638:	lea    eax,[rdi-0x43]
  40d63b:	cmp    al,0x33
  40d63d:	ja     0x40d780
  40d643:	lea    rdx,[rip+0x1554e]        # 0x422b98
  40d64a:	movzx  eax,al
  40d64d:	movsxd rax,DWORD PTR [rdx+rax*4]
  40d651:	add    rdx,rax
  40d654:	jmp    rdx
  40d656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d660:	lea    rcx,[rbx+0x10]
  40d664:	xor    edx,edx
  40d666:	call   0x40d370
  40d66b:	test   BYTE PTR [rbx+0x11],0x10
  40d66f:	jne    0x40d6b0
  40d671:	mov    rdx,QWORD PTR [rbx+0x50]
  40d675:	mov    r9,QWORD PTR [rbx+0x60]
  40d679:	mov    rcx,rsi
  40d67c:	mov    r8,QWORD PTR [rbx+0x40]
  40d680:	call   0x403d20
  40d685:	mov    rcx,rsi
  40d688:	call   0x41d8e0
  40d68d:	mov    rcx,rsi
  40d690:	call   0x41d8e8
  40d695:	test   eax,eax
  40d697:	jne    0x40d7d4
  40d69d:	test   bpl,bpl
  40d6a0:	jne    0x40d800
  40d6a6:	add    rsp,0x28
  40d6aa:	pop    rbx
  40d6ab:	pop    rsi
  40d6ac:	pop    rdi
  40d6ad:	pop    rbp
  40d6ae:	ret    
  40d6af:	nop
  40d6b0:	mov    rcx,QWORD PTR [rbx+0x40]
  40d6b4:	test   rcx,rcx
  40d6b7:	je     0x40d7b0
  40d6bd:	mov    rdx,rsi
  40d6c0:	call   0x41d8b8
  40d6c5:	cmp    DWORD PTR [rbx],0x21fff
  40d6cb:	jle    0x40d742
  40d6cd:	cmp    QWORD PTR [rbx+0xe0],0x0
  40d6d5:	je     0x40d742
  40d6d7:	mov    rdx,rsi
  40d6da:	mov    ecx,0xa
  40d6df:	call   0x41d8c0
  40d6e4:	mov    rcx,QWORD PTR [rbx+0xe0]
  40d6eb:	mov    rdx,rsi
  40d6ee:	call   0x41d8b8
  40d6f3:	jmp    0x40d685
  40d6f5:	mov    rcx,QWORD PTR [rcx+0x40]
  40d6f9:	test   rcx,rcx
  40d6fc:	je     0x40d706
  40d6fe:	mov    rdx,r8
  40d701:	call   0x41d8b8
  40d706:	mov    rcx,QWORD PTR [rbx+0x48]
  40d70a:	test   rcx,rcx
  40d70d:	je     0x40d717
  40d70f:	mov    rdx,rsi
  40d712:	call   0x41d8b8
  40d717:	mov    rdx,rsi
  40d71a:	mov    ecx,0xa
  40d71f:	call   0x41d8c0
  40d724:	mov    rdx,QWORD PTR [rip+0x127ad]        # 0x41fed8
  40d72b:	lea    r8,[rip+0x1555e]        # 0x422c90
  40d732:	mov    rcx,rsi
  40d735:	call   0x403b50
  40d73a:	cmp    DWORD PTR [rbx],0x21fff
  40d740:	jg     0x40d6cd
  40d742:	cmp    QWORD PTR [rbx+0x80],0x0
  40d74a:	je     0x40d685
  40d750:	mov    rdx,rsi
  40d753:	mov    ecx,0xa
  40d758:	call   0x41d8c0
  40d75d:	mov    r8,QWORD PTR [rbx+0x80]
  40d764:	mov    rdx,QWORD PTR [rip+0x129c5]        # 0x420130
  40d76b:	mov    rcx,rsi
  40d76e:	call   0x403b50
  40d773:	jmp    0x40d685
  40d778:	nop    DWORD PTR [rax+rax*1+0x0]
  40d780:	mov    rbx,QWORD PTR [rip+0x127c9]        # 0x41ff50
  40d787:	call   QWORD PTR [rip+0x221ff]        # 0x42f98c
  40d78d:	lea    rcx,[rax+0x60]
  40d791:	movsx  r8d,dil
  40d795:	mov    rdx,rbx
  40d798:	call   0x403b50
  40d79d:	mov    ecx,0x1
  40d7a2:	call   0x403f90
  40d7a7:	nop    WORD PTR [rax+rax*1+0x0]
  40d7b0:	mov    rcx,QWORD PTR [rbx+0x50]
  40d7b4:	test   rcx,rcx
  40d7b7:	jne    0x40d6bd
  40d7bd:	mov    rdx,QWORD PTR [rbx+0x60]
  40d7c1:	xor    r9d,r9d
  40d7c4:	xor    r8d,r8d
  40d7c7:	mov    rcx,rsi
  40d7ca:	call   0x403d20
  40d7cf:	jmp    0x40d6c5
  40d7d4:	call   QWORD PTR [rip+0x221b2]        # 0x42f98c
  40d7da:	add    rax,0x30
  40d7de:	mov    r8,QWORD PTR [rip+0x1285b]        # 0x420040
  40d7e5:	mov    rcx,QWORD PTR [rbx+0x28]
  40d7e9:	cmp    rsi,rax
  40d7ec:	cmove  r8,QWORD PTR [rip+0x12844]        # 0x420038
  40d7f4:	mov    rdx,QWORD PTR [rip+0x1284d]        # 0x420048
  40d7fb:	call   0x404510
  40d800:	xor    ecx,ecx
  40d802:	call   0x403f90
  40d807:	nop
  40d808:	nop    DWORD PTR [rax+rax*1+0x0]
  40d810:	push   rsi
  40d811:	push   rbx
  40d812:	sub    rsp,0x28
  40d816:	cmp    BYTE PTR [rip+0x1eb17],0x0        # 0x42c334
  40d81d:	mov    rbx,rcx
  40d820:	mov    rsi,rdx
  40d823:	je     0x40d840
  40d825:	call   QWORD PTR [rip+0x22161]        # 0x42f98c
  40d82b:	cmp    rbx,0xf
  40d82f:	lea    r8,[rax+0x60]
  40d833:	ja     0x40d850
  40d835:	add    rsp,0x28
  40d839:	pop    rbx
  40d83a:	pop    rsi
  40d83b:	ret    
  40d83c:	nop    DWORD PTR [rax+0x0]
  40d840:	call   QWORD PTR [rip+0x22146]        # 0x42f98c
  40d846:	cmp    rbx,0xf
  40d84a:	lea    r8,[rax+0x30]
  40d84e:	jbe    0x40d835
  40d850:	mov    r9d,0x1
  40d856:	mov    rdx,rsi
  40d859:	mov    rcx,rbx
  40d85c:	add    rsp,0x28
  40d860:	pop    rbx
  40d861:	pop    rsi
  40d862:	jmp    0x40d610
  40d867:	nop    WORD PTR [rax+rax*1+0x0]
  40d870:	add    rcx,0x1
  40d874:	add    rdx,0x1
  40d878:	movzx  r9d,BYTE PTR [rcx-0x1]
  40d87d:	movzx  r8d,BYTE PTR [rdx-0x1]
  40d882:	cmp    r9b,r8b
  40d885:	je     0x40d8a1
  40d887:	lea    r10,[rip+0x121b2]        # 0x41fa40
  40d88e:	movzx  eax,r9b
  40d892:	movzx  eax,BYTE PTR [r10+rax*1]
  40d897:	movzx  r8d,BYTE PTR [r10+r8*1]
  40d89c:	sub    eax,r8d
  40d89f:	jne    0x40d8a8
  40d8a1:	test   r9b,r9b
  40d8a4:	jne    0x40d870
  40d8a6:	xor    eax,eax
  40d8a8:	repz ret 
  40d8aa:	nop    WORD PTR [rax+rax*1+0x0]
  40d8b0:	test   r8d,r8d
  40d8b3:	jne    0x40d8d1
  40d8b5:	lea    rdx,[rip+0x12283]        # 0x41fb3f
  40d8bc:	mov    eax,0xff
  40d8c1:	mov    BYTE PTR [rdx],al
  40d8c3:	sub    eax,0x1
  40d8c6:	sub    rdx,0x1
  40d8ca:	cmp    eax,0xffffffff
  40d8cd:	jne    0x40d8c1
  40d8cf:	repz ret 
  40d8d1:	lea    r9,[rip+0x12168]        # 0x41fa40
  40d8d8:	movzx  eax,dl
  40d8db:	movzx  edx,cl
  40d8de:	xchg   ax,ax
  40d8e0:	mov    ecx,edx
  40d8e2:	add    edx,0x1
  40d8e5:	mov    BYTE PTR [r9+rcx*1],al
  40d8e9:	add    eax,0x1
  40d8ec:	cmp    eax,0xff
  40d8f1:	ja     0x40d904
  40d8f3:	cmp    edx,0xff
  40d8f9:	ja     0x40d904
  40d8fb:	sub    r8d,0x1
  40d8ff:	test   r8d,r8d
  40d902:	jg     0x40d8e0
  40d904:	repz ret 
  40d906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d910:	test   rcx,rcx
  40d913:	je     0x40d93f
  40d915:	movzx  eax,BYTE PTR [rcx]
  40d918:	test   al,al
  40d91a:	je     0x40d93f
  40d91c:	lea    rdx,[rip+0x1211d]        # 0x41fa40
  40d923:	mov    r8d,eax
  40d926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d930:	add    rcx,0x1
  40d934:	mov    BYTE PTR [rdx+rax*1],r8b
  40d938:	movzx  eax,BYTE PTR [rcx]
  40d93b:	test   al,al
  40d93d:	jne    0x40d930
  40d93f:	repz ret 
  40d941:	nop    DWORD PTR [rax+rax*1+0x0]
  40d946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d950:	lea    r8,[rip+0x120e9]        # 0x41fa40
  40d957:	nop    WORD PTR [rax+rax*1+0x0]
  40d960:	movzx  eax,BYTE PTR [rdx]
  40d963:	add    rcx,0x1
  40d967:	add    rdx,0x1
  40d96b:	movzx  eax,BYTE PTR [r8+rax*1]
  40d970:	mov    BYTE PTR [rcx-0x1],al
  40d973:	cmp    BYTE PTR [rdx-0x1],0x0
  40d977:	jne    0x40d960
  40d979:	ret    
  40d97a:	nop    WORD PTR [rax+rax*1+0x0]
  40d980:	push   rbp
  40d981:	push   rdi
  40d982:	push   rsi
  40d983:	push   rbx
  40d984:	sub    rsp,0x68
  40d988:	xor    eax,eax
  40d98a:	lea    rdi,[r9+0x8]
  40d98e:	mov    QWORD PTR [r9],0x0
  40d995:	mov    QWORD PTR [r9+0x28],0x0
  40d99d:	mov    rbx,r9
  40d9a0:	mov    rbp,rcx
  40d9a3:	and    rdi,0xfffffffffffffff8
  40d9a7:	sub    r9,rdi
  40d9aa:	add    r9d,0x30
  40d9ae:	shr    r9d,0x3
  40d9b2:	mov    ecx,r9d
  40d9b5:	rep stos QWORD PTR es:[rdi],rax
  40d9b8:	mov    DWORD PTR [rbx+0x24],edx
  40d9bb:	and    edx,0x2
  40d9be:	mov    DWORD PTR [rbx+0x18],0xffffffff
  40d9c5:	mov    DWORD PTR [rbx+0x28],r8d
  40d9c9:	mov    ax,0x8000
  40d9cd:	je     0x40d9f5
  40d9cf:	mov    eax,r8d
  40d9d2:	and    eax,0x3
  40d9d5:	cmp    eax,0x1
  40d9d8:	sete   dl
  40d9db:	movzx  eax,dl
  40d9de:	movzx  edx,dl
  40d9e1:	add    edx,edx
  40d9e3:	and    r8d,0x1
  40d9e7:	lea    eax,[rax+rax*1+0x8000]
  40d9ee:	jne    0x40d9f5
  40d9f0:	mov    eax,edx
  40d9f2:	or     ah,0x84
  40d9f5:	mov    edx,eax
  40d9f7:	mov    rcx,rbp
  40d9fa:	call   0x41d758
  40d9ff:	test   eax,eax
  40da01:	mov    DWORD PTR [rbx+0x18],eax
  40da04:	js     0x40db60
  40da0a:	lea    rdx,[rsp+0x20]
  40da0f:	mov    ecx,eax
  40da11:	call   QWORD PTR [rip+0x21fed]        # 0x42fa04
  40da17:	test   eax,eax
  40da19:	jne    0x40db40
  40da1f:	movzx  eax,WORD PTR [rsp+0x26]
  40da24:	and    ax,0xf000
  40da28:	cmp    ax,0x8000
  40da2c:	je     0x40da60
  40da2e:	call   QWORD PTR [rip+0x21fa8]        # 0x42f9dc
  40da34:	mov    DWORD PTR [rax],0x16
  40da3a:	mov    ecx,DWORD PTR [rbx+0x18]
  40da3d:	mov    DWORD PTR [rbx+0x20],0x16
  40da44:	call   0x41d748
  40da49:	mov    edx,DWORD PTR [rbx+0x20]
  40da4c:	test   edx,edx
  40da4e:	mov    rax,0xffffffffffffffff
  40da55:	je     0x40da80
  40da57:	add    rsp,0x68
  40da5b:	pop    rbx
  40da5c:	pop    rsi
  40da5d:	pop    rdi
  40da5e:	pop    rbp
  40da5f:	ret    
  40da60:	cmp    DWORD PTR [rbx+0x18],0xffffffff
  40da64:	mov    rax,QWORD PTR [rsp+0x38]
  40da69:	mov    QWORD PTR [rbx+0x8],rax
  40da6d:	jne    0x40da49
  40da6f:	call   QWORD PTR [rip+0x21f67]        # 0x42f9dc
  40da75:	mov    edx,DWORD PTR [rax]
  40da77:	mov    DWORD PTR [rbx+0x20],edx
  40da7a:	jmp    0x40da4c
  40da7c:	nop    DWORD PTR [rax+0x0]
  40da80:	mov    rax,QWORD PTR [rbx+0x8]
  40da84:	lea    rcx,[rax+0x1]
  40da88:	call   0x405990
  40da8d:	test   rax,rax
  40da90:	mov    rdi,rax
  40da93:	mov    QWORD PTR [rbx],rax
  40da96:	je     0x40dba0
  40da9c:	mov    rsi,QWORD PTR [rbx+0x8]
  40daa0:	test   rsi,rsi
  40daa3:	jne    0x40dabf
  40daa5:	jmp    0x40db80
  40daaa:	nop    WORD PTR [rax+rax*1+0x0]
  40dab0:	movsxd r10,eax
  40dab3:	add    rdi,r10
  40dab6:	sub    rsi,r10
  40dab9:	je     0x40db80
  40dabf:	mov    ecx,DWORD PTR [rbx+0x18]
  40dac2:	mov    r8d,esi
  40dac5:	mov    rdx,rdi
  40dac8:	call   0x41d760
  40dacd:	test   eax,eax
  40dacf:	jg     0x40dab0
  40dad1:	mov    rsi,QWORD PTR [rip+0x21f04]        # 0x42f9dc
  40dad8:	call   rsi
  40dada:	mov    eax,DWORD PTR [rax]
  40dadc:	lea    rdx,[rip+0x15185]        # 0x422c68
  40dae3:	lea    rcx,[rip+0x15183]        # 0x422c6d
  40daea:	mov    r8,rbp
  40daed:	mov    DWORD PTR [rbx+0x20],eax
  40daf0:	call   0x4044a0
  40daf5:	mov    rcx,QWORD PTR [rbx]
  40daf8:	call   0x41d8a8
  40dafd:	mov    eax,DWORD PTR [rbx+0x20]
  40db00:	test   eax,eax
  40db02:	je     0x40db8a
  40db08:	mov    ecx,DWORD PTR [rbx+0x18]
  40db0b:	cmp    ecx,0xffffffff
  40db0e:	je     0x40db1c
  40db10:	call   0x41d748
  40db15:	mov    DWORD PTR [rbx+0x18],0xffffffff
  40db1c:	call   rsi
  40db1e:	mov    edx,DWORD PTR [rbx+0x20]
  40db21:	mov    DWORD PTR [rax],edx
  40db23:	mov    rax,0xffffffffffffffff
  40db2a:	mov    QWORD PTR [rbx],0xffffffffffffffff
  40db31:	add    rsp,0x68
  40db35:	pop    rbx
  40db36:	pop    rsi
  40db37:	pop    rdi
  40db38:	pop    rbp
  40db39:	ret    
  40db3a:	nop    WORD PTR [rax+rax*1+0x0]
  40db40:	call   QWORD PTR [rip+0x21e96]        # 0x42f9dc
  40db46:	mov    eax,DWORD PTR [rax]
  40db48:	mov    ecx,DWORD PTR [rbx+0x18]
  40db4b:	mov    DWORD PTR [rbx+0x20],eax
  40db4e:	call   0x41d748
  40db53:	jmp    0x40da49
  40db58:	nop    DWORD PTR [rax+rax*1+0x0]
  40db60:	call   QWORD PTR [rip+0x21e76]        # 0x42f9dc
  40db66:	mov    edx,DWORD PTR [rax]
  40db68:	mov    DWORD PTR [rbx+0x18],0xffffffff
  40db6f:	mov    DWORD PTR [rbx+0x20],edx
  40db72:	jmp    0x40da4c
  40db77:	nop    WORD PTR [rax+rax*1+0x0]
  40db80:	mov    BYTE PTR [rdi],0x0
  40db83:	mov    DWORD PTR [rbx+0x20],0x0
  40db8a:	mov    rax,QWORD PTR [rbx]
  40db8d:	add    rsp,0x68
  40db91:	pop    rbx
  40db92:	pop    rsi
  40db93:	pop    rdi
  40db94:	pop    rbp
  40db95:	ret    
  40db96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dba0:	mov    DWORD PTR [rbx+0x20],0xc
  40dba7:	mov    rsi,QWORD PTR [rip+0x21e2e]        # 0x42f9dc
  40dbae:	jmp    0x40db08
  40dbb3:	nop    DWORD PTR [rax]
  40dbb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dbc0:	push   rsi
  40dbc1:	push   rbx
  40dbc2:	sub    rsp,0x28
  40dbc6:	mov    rsi,QWORD PTR [rip+0x21e0f]        # 0x42f9dc
  40dbcd:	mov    rbx,rcx
  40dbd0:	call   rsi
  40dbd2:	mov    DWORD PTR [rax],0x0
  40dbd8:	test   BYTE PTR [rbx+0x24],0x2
  40dbdc:	je     0x40dbe9
  40dbde:	mov    eax,DWORD PTR [rbx+0x28]
  40dbe1:	and    eax,0x3
  40dbe4:	cmp    eax,0x1
  40dbe7:	je     0x40dc20
  40dbe9:	mov    rcx,QWORD PTR [rbx]
  40dbec:	call   0x41d8a8
  40dbf1:	call   rsi
  40dbf3:	mov    ecx,DWORD PTR [rbx+0x18]
  40dbf6:	mov    eax,DWORD PTR [rax]
  40dbf8:	cmp    ecx,0xffffffff
  40dbfb:	mov    DWORD PTR [rbx+0x20],eax
  40dbfe:	je     0x40dc0f
  40dc00:	call   0x41d748
  40dc05:	mov    eax,DWORD PTR [rbx+0x20]
  40dc08:	mov    DWORD PTR [rbx+0x18],0xffffffff
  40dc0f:	add    rsp,0x28
  40dc13:	pop    rbx
  40dc14:	pop    rsi
  40dc15:	ret    
  40dc16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc20:	mov    ecx,DWORD PTR [rbx+0x18]
  40dc23:	xor    r8d,r8d
  40dc26:	xor    edx,edx
  40dc28:	call   0x418d20
  40dc2d:	test   rax,rax
  40dc30:	js     0x40dbe9
  40dc32:	mov    ecx,DWORD PTR [rbx+0x18]
  40dc35:	mov    r8d,DWORD PTR [rbx+0x8]
  40dc39:	mov    rdx,QWORD PTR [rbx]
  40dc3c:	call   0x41d778
  40dc41:	jmp    0x40dbe9
  40dc43:	nop    DWORD PTR [rax]
  40dc46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc50:	push   r15
  40dc52:	push   r14
  40dc54:	push   r13
  40dc56:	push   r12
  40dc58:	push   rbp
  40dc59:	push   rdi
  40dc5a:	push   rsi
  40dc5b:	push   rbx
  40dc5c:	sub    rsp,0x158
  40dc63:	mov    r13,rcx
  40dc66:	mov    r14d,r8d
  40dc69:	mov    rcx,rdx
  40dc6c:	mov    eax,DWORD PTR [r13+0x10]
  40dc70:	mov    r8d,0x2
  40dc76:	mov    edx,0x3
  40dc7b:	mov    QWORD PTR [rsp+0xa0],0x0
  40dc87:	mov    QWORD PTR [rsp+0xa8],0x0
  40dc93:	mov    DWORD PTR [rsp+0xb0],0x2
  40dc9e:	mov    DWORD PTR [rsp+0xb4],0x0
  40dca9:	mov    DWORD PTR [rsp+0x34],eax
  40dcad:	lea    rax,[rsp+0xe0]
  40dcb5:	mov    r9,rax
  40dcb8:	mov    QWORD PTR [rsp+0x38],rax
  40dcbd:	call   0x40d980
  40dcc2:	cmp    rax,0xffffffffffffffff
  40dcc6:	mov    rbx,rax
  40dcc9:	je     0x40de36
  40dccf:	mov    eax,DWORD PTR [r13+0x10]
  40dcd3:	mov    esi,0x2
  40dcd8:	mov    edx,eax
  40dcda:	and    edx,0xfffffffb
  40dcdd:	test   r14d,r14d
  40dce0:	mov    DWORD PTR [r13+0x10],edx
  40dce4:	je     0x40e1c9
  40dcea:	test   eax,0x80000
  40dcef:	mov    eax,0x1
  40dcf4:	cmove  esi,eax
  40dcf7:	lea    rax,[rsp+0x110]
  40dcff:	mov    QWORD PTR [rsp+0x48],rax
  40dd04:	lea    rax,[rsp+0x111]
  40dd0c:	mov    QWORD PTR [rsp+0x50],rax
  40dd11:	lea    rax,[rsp+0xa0]
  40dd19:	mov    QWORD PTR [rsp+0x40],rax
  40dd1e:	lea    rax,[rsp+0x90]
  40dd26:	mov    QWORD PTR [rsp+0x58],rax
  40dd2b:	lea    rax,[rsp+0xc0]
  40dd33:	mov    QWORD PTR [rsp+0x60],rax
  40dd38:	lea    rax,[rsp+0x9c]
  40dd40:	mov    QWORD PTR [rsp+0x68],rax
  40dd45:	mov    rax,QWORD PTR [rip+0x1e754]        # 0x42c4a0
  40dd4c:	mov    DWORD PTR [rsp+0xb0],esi
  40dd53:	test   rax,rax
  40dd56:	jne    0x40dd64
  40dd58:	jmp    0x40e20d
  40dd5d:	nop    DWORD PTR [rax]
  40dd60:	add    rbx,0x1
  40dd64:	movzx  ecx,BYTE PTR [rbx]
  40dd67:	cmp    BYTE PTR [rax+rcx*1],0x0
  40dd6b:	mov    rdx,rcx
  40dd6e:	jne    0x40dd60
  40dd70:	cmp    cl,0x7f
  40dd73:	ja     0x40de50
  40dd79:	lea    rdi,[rip+0x18940]        # 0x4266c0
  40dd80:	movzx  eax,cl
  40dd83:	test   DWORD PTR [rdi+rax*4],0x180040
  40dd8a:	je     0x40de50
  40dd90:	lea    rbp,[rbx+0x1]
  40dd94:	mov    edx,0xa
  40dd99:	mov    rcx,rbp
  40dd9c:	call   0x41d820
  40dda1:	test   rax,rax
  40dda4:	mov    r12,rax
  40dda7:	je     0x40e21c
  40ddad:	mov    rcx,QWORD PTR [rip+0x1e76c]        # 0x42c520
  40ddb4:	test   rcx,rcx
  40ddb7:	je     0x40e426
  40ddbd:	movzx  eax,BYTE PTR [rbx+0x1]
  40ddc1:	cmp    BYTE PTR [rcx+rax*1],0x0
  40ddc5:	je     0x40ddde
  40ddc7:	nop    WORD PTR [rax+rax*1+0x0]
  40ddd0:	add    rbp,0x1
  40ddd4:	movzx  eax,BYTE PTR [rbp+0x0]
  40ddd8:	cmp    BYTE PTR [rcx+rax*1],0x0
  40dddc:	jne    0x40ddd0
  40ddde:	mov    r8,QWORD PTR [rip+0x1e6bb]        # 0x42c4a0
  40dde5:	test   r8,r8
  40dde8:	jne    0x40ddf4
  40ddea:	jmp    0x40e435
  40ddef:	nop
  40ddf0:	add    rbp,0x1
  40ddf4:	movzx  eax,BYTE PTR [rbp+0x0]
  40ddf8:	cmp    BYTE PTR [r8+rax*1],0x0
  40ddfd:	jne    0x40ddf0
  40ddff:	cmp    rbp,r12
  40de02:	ja     0x40e19c
  40de08:	cmp    al,0x3a
  40de0a:	je     0x40e169
  40de10:	cmp    al,0x3d
  40de12:	je     0x40e169
  40de18:	movzx  eax,BYTE PTR [rbp-0x1]
  40de1c:	cmp    al,0x7f
  40de1e:	jbe    0x40e1f6
  40de24:	mov    rcx,QWORD PTR [rsp+0x38]
  40de29:	call   0x40dbc0
  40de2e:	mov    eax,DWORD PTR [rsp+0x34]
  40de32:	mov    DWORD PTR [r13+0x10],eax
  40de36:	add    rsp,0x158
  40de3d:	pop    rbx
  40de3e:	pop    rsi
  40de3f:	pop    rdi
  40de40:	pop    rbp
  40de41:	pop    r12
  40de43:	pop    r13
  40de45:	pop    r14
  40de47:	pop    r15
  40de49:	ret    
  40de4a:	nop    WORD PTR [rax+rax*1+0x0]
  40de50:	cmp    dl,0x3c
  40de53:	je     0x40df20
  40de59:	cmp    dl,0x5b
  40de5c:	je     0x40de80
  40de5e:	cmp    dl,0x23
  40de61:	jne    0x40de24
  40de63:	lea    rcx,[rbx+0x1]
  40de67:	mov    edx,0xa
  40de6c:	call   0x41d820
  40de71:	mov    rbx,rax
  40de74:	test   rbx,rbx
  40de77:	jne    0x40dd45
  40de7d:	jmp    0x40de24
  40de7f:	nop
  40de80:	mov    rbp,QWORD PTR [r13+0x30]
  40de84:	mov    rcx,rbp
  40de87:	call   0x41d7f8
  40de8c:	lea    rcx,[rbx+0x1]
  40de90:	mov    r8,rax
  40de93:	mov    rdx,rbp
  40de96:	mov    rdi,rax
  40de99:	call   0x41d7f0
  40de9e:	test   eax,eax
  40dea0:	je     0x40e1d4
  40dea6:	cmp    rdi,0x10
  40deaa:	ja     0x40de24
  40deb0:	mov    rcx,QWORD PTR [rsp+0x50]
  40deb5:	mov    r8,rdi
  40deb8:	mov    rdx,rbp
  40debb:	mov    QWORD PTR [rsp+0x110],0x5b
  40dec7:	mov    QWORD PTR [rsp+0x118],0x0
  40ded3:	mov    QWORD PTR [rsp+0x120],0x0
  40dedf:	call   0x41d860
  40dee4:	mov    rdx,QWORD PTR [rsp+0x48]
  40dee9:	mov    rcx,rbx
  40deec:	mov    BYTE PTR [rsp+rdi*1+0x111],0x5d
  40def4:	mov    BYTE PTR [rsp+rdi*1+0x112],0x0
  40defc:	call   0x41d7d0
  40df01:	test   rax,rax
  40df04:	je     0x40de24
  40df0a:	mov    edx,0xa
  40df0f:	mov    rcx,rax
  40df12:	call   0x41d820
  40df17:	mov    rbx,rax
  40df1a:	jmp    0x40de74
  40df1f:	nop
  40df20:	movzx  eax,BYTE PTR [rbx+0x1]
  40df24:	cmp    al,0x7f
  40df26:	ja     0x40e130
  40df2c:	lea    rdi,[rip+0x1878d]        # 0x4266c0
  40df33:	movzx  edx,al
  40df36:	test   DWORD PTR [rdi+rdx*4],0x180040
  40df3d:	je     0x40e130
  40df43:	mov    eax,DWORD PTR [rip+0x11f07]        # 0x41fe50
  40df49:	mov    DWORD PTR [rsp+0x9c],eax
  40df50:	lea    rax,[rbx+0x1]
  40df54:	mov    QWORD PTR [rsp+0x70],rax
  40df59:	mov    rax,QWORD PTR [rip+0x1e5c0]        # 0x42c520
  40df60:	test   rax,rax
  40df63:	je     0x40e4f9
  40df69:	movzx  edx,BYTE PTR [rbx+0x1]
  40df6d:	mov    r15,QWORD PTR [rsp+0x70]
  40df72:	cmp    BYTE PTR [rax+rdx*1],0x0
  40df76:	je     0x40df8e
  40df78:	nop    DWORD PTR [rax+rax*1+0x0]
  40df80:	add    r15,0x1
  40df84:	movzx  edx,BYTE PTR [r15]
  40df88:	cmp    BYTE PTR [rax+rdx*1],0x0
  40df8c:	jne    0x40df80
  40df8e:	mov    DWORD PTR [rsp+0xc0],0x1
  40df99:	movzx  edx,BYTE PTR [r15]
  40df9d:	cmp    dl,0x20
  40dfa0:	je     0x40e396
  40dfa6:	jle    0x40e2b6
  40dfac:	cmp    dl,0x2f
  40dfaf:	je     0x40e3ee
  40dfb5:	cmp    dl,0x3e
  40dfb8:	mov    rbp,r15
  40dfbb:	jne    0x40e2bf
  40dfc1:	mov    BYTE PTR [r15],0x0
  40dfc5:	mov    rcx,QWORD PTR [rsp+0x70]
  40dfca:	lea    r12,[rbp+0x1]
  40dfce:	mov    eax,DWORD PTR [rsp+0x9c]
  40dfd5:	mov    DWORD PTR [rsp+0x80],eax
  40dfdc:	call   0x41d7f8
  40dfe1:	lea    rcx,[rax+0x4]
  40dfe5:	mov    rbx,rax
  40dfe8:	cmp    rcx,0x3f
  40dfec:	ja     0x40e447
  40dff2:	mov    rax,QWORD PTR [rsp+0x48]
  40dff7:	mov    rdx,QWORD PTR [rsp+0x70]
  40dffc:	mov    r8,rbx
  40dfff:	mov    BYTE PTR [rsp+0x110],0x3c
  40e007:	mov    BYTE PTR [rsp+0x111],0x2f
  40e00f:	lea    rcx,[rax+0x2]
  40e013:	call   0x41d860
  40e018:	lea    rcx,[rbx+0x3]
  40e01c:	mov    rdx,QWORD PTR [rsp+0x48]
  40e021:	mov    BYTE PTR [rsp+rbx*1+0x112],0x3e
  40e029:	mov    BYTE PTR [rsp+rbx*1+0x113],0x0
  40e031:	mov    BYTE PTR [rbp+0x1],0x20
  40e035:	mov    QWORD PTR [rsp+0x78],rcx
  40e03a:	mov    rcx,r12
  40e03d:	call   0x41d7d0
  40e042:	mov    rdx,rax
  40e045:	test   rdx,rdx
  40e048:	je     0x40de24
  40e04e:	mov    rbx,QWORD PTR [rsp+0x78]
  40e053:	add    rbx,rdx
  40e056:	cmp    DWORD PTR [rsp+0x80],0x1
  40e05e:	je     0x40e0a6
  40e060:	mov    r8,QWORD PTR [rip+0x1e439]        # 0x42c4a0
  40e067:	test   r8,r8
  40e06a:	je     0x40e60c
  40e070:	cmp    r12,rdx
  40e073:	jb     0x40e09b
  40e075:	mov    rcx,r12
  40e078:	mov    QWORD PTR [rsp+0x78],r8
  40e07d:	call   0x41d7f8
  40e082:	lea    rdx,[r12+rax*1]
  40e086:	mov    r8,QWORD PTR [rsp+0x78]
  40e08b:	cmp    r12,rdx
  40e08e:	jb     0x40e09b
  40e090:	jmp    0x40e0a6
  40e092:	sub    rdx,0x1
  40e096:	cmp    r12,rdx
  40e099:	jae    0x40e0a6
  40e09b:	movzx  eax,BYTE PTR [rdx-0x1]
  40e09f:	cmp    BYTE PTR [r8+rax*1],0x0
  40e0a4:	jne    0x40e092
  40e0a6:	test   rbx,rbx
  40e0a9:	mov    BYTE PTR [rdx],0x0
  40e0ac:	je     0x40de24
  40e0b2:	mov    r8,r12
  40e0b5:	mov    edx,0x20
  40e0ba:	mov    rcx,r15
  40e0bd:	sub    r8,r15
  40e0c0:	call   0x41d850
  40e0c5:	cmp    DWORD PTR [rsp+0xc0],0x1
  40e0cd:	mov    eax,DWORD PTR [rsp+0x9c]
  40e0d4:	jne    0x40e408
  40e0da:	test   eax,eax
  40e0dc:	jne    0x40e408
  40e0e2:	mov    BYTE PTR [rsp+0x92],0x0
  40e0ea:	add    rbp,0x2
  40e0ee:	lea    rax,[rbp-0x1]
  40e0f2:	lea    r9,[r12+0x1]
  40e0f7:	mov    QWORD PTR [rsp+0x78],rax
  40e0fc:	movzx  eax,BYTE PTR [r12]
  40e101:	cmp    eax,0x25
  40e104:	je     0x40e5b0
  40e10a:	cmp    eax,0x26
  40e10d:	je     0x40e524
  40e113:	test   eax,eax
  40e115:	je     0x40e517
  40e11b:	mov    r12,r9
  40e11e:	mov    BYTE PTR [rbp-0x1],al
  40e121:	add    rbp,0x1
  40e125:	jmp    0x40e0ee
  40e127:	nop    WORD PTR [rax+rax*1+0x0]
  40e130:	cmp    al,0x2f
  40e132:	je     0x40e253
  40e138:	cmp    al,0x3f
  40e13a:	je     0x40e2de
  40e140:	cmp    al,0x21
  40e142:	jne    0x40de24
  40e148:	lea    rdx,[rip+0x14868]        # 0x4229b7
  40e14f:	mov    rcx,rbx
  40e152:	call   0x41d7d0
  40e157:	test   rax,rax
  40e15a:	je     0x40de24
  40e160:	lea    rbx,[rax+0x3]
  40e164:	jmp    0x40de74
  40e169:	mov    rax,QWORD PTR [rip+0x1e330]        # 0x42c4a0
  40e170:	lea    rdi,[rbp+0x1]
  40e174:	test   rax,rax
  40e177:	je     0x40e508
  40e17d:	movzx  edx,BYTE PTR [rbp+0x1]
  40e181:	cmp    BYTE PTR [rax+rdx*1],0x0
  40e185:	jne    0x40e230
  40e18b:	cmp    r12,rdi
  40e18e:	jb     0x40e19c
  40e190:	cmp    BYTE PTR [r12-0x1],0x5c
  40e196:	je     0x40e273
  40e19c:	lea    rdi,[r12+0x1]
  40e1a1:	mov    BYTE PTR [r12],0x0
  40e1a6:	mov    rdx,QWORD PTR [rsp+0x40]
  40e1ab:	mov    r8,rbx
  40e1ae:	mov    DWORD PTR [rsp+0x20],0x1
  40e1b6:	mov    r9d,r14d
  40e1b9:	mov    rcx,r13
  40e1bc:	mov    rbx,rdi
  40e1bf:	call   0x40cb50
  40e1c4:	jmp    0x40de74
  40e1c9:	mov    sil,0x4
  40e1cc:	mov    r14b,0x1
  40e1cf:	jmp    0x40dcea
  40e1d4:	cmp    BYTE PTR [rbx+rdi*1+0x1],0x5d
  40e1d9:	jne    0x40dea6
  40e1df:	lea    rcx,[rbx+rdi*1+0x2]
  40e1e4:	mov    edx,0xa
  40e1e9:	call   0x41d820
  40e1ee:	mov    rbx,rax
  40e1f1:	jmp    0x40de74
  40e1f6:	test   DWORD PTR [rdi+rax*4],0xc01
  40e1fd:	je     0x40de24
  40e203:	cmp    BYTE PTR [r12-0x1],0x5c
  40e209:	jne    0x40e19c
  40e20b:	jmp    0x40e273
  40e20d:	mov    ecx,0xc
  40e212:	call   0x4054a0
  40e217:	jmp    0x40dd64
  40e21c:	mov    rcx,rbp
  40e21f:	call   0x41d7f8
  40e224:	lea    rbx,[rbp+rax*1+0x0]
  40e229:	jmp    0x40de74
  40e22e:	xchg   ax,ax
  40e230:	add    rdi,0x1
  40e234:	movzx  edx,BYTE PTR [rdi]
  40e237:	cmp    BYTE PTR [rax+rdx*1],0x0
  40e23b:	je     0x40e18b
  40e241:	add    rdi,0x1
  40e245:	movzx  edx,BYTE PTR [rdi]
  40e248:	cmp    BYTE PTR [rax+rdx*1],0x0
  40e24c:	jne    0x40e230
  40e24e:	jmp    0x40e18b
  40e253:	lea    rcx,[rbx+0x2]
  40e257:	mov    edx,0x3e
  40e25c:	call   0x41d820
  40e261:	test   rax,rax
  40e264:	lea    rbx,[rax+0x1]
  40e268:	jne    0x40de74
  40e26e:	jmp    0x40de24
  40e273:	movzx  eax,BYTE PTR [r12]
  40e278:	lea    rdx,[r12-0x1]
  40e27d:	lea    rdi,[r12+0x1]
  40e282:	cmp    al,0xa
  40e284:	je     0x40e2ae
  40e286:	cmp    al,0x5c
  40e288:	je     0x40e37b
  40e28e:	test   al,al
  40e290:	je     0x40e374
  40e296:	add    rdx,0x1
  40e29a:	mov    r12,rdi
  40e29d:	mov    BYTE PTR [rdx-0x1],al
  40e2a0:	movzx  eax,BYTE PTR [r12]
  40e2a5:	lea    rdi,[r12+0x1]
  40e2aa:	cmp    al,0xa
  40e2ac:	jne    0x40e286
  40e2ae:	mov    BYTE PTR [rdx],0x0
  40e2b1:	jmp    0x40e1a6
  40e2b6:	cmp    dl,0x9
  40e2b9:	je     0x40e396
  40e2bf:	mov    edx,0x3e
  40e2c4:	mov    rcx,r15
  40e2c7:	call   0x41d820
  40e2cc:	test   rax,rax
  40e2cf:	je     0x40de24
  40e2d5:	lea    rbx,[rax+0x1]
  40e2d9:	jmp    0x40de74
  40e2de:	mov    rdi,QWORD PTR [rip+0x1e03b]        # 0x42c320
  40e2e5:	test   rdi,rdi
  40e2e8:	je     0x40e4cb
  40e2ee:	mov    rcx,rdi
  40e2f1:	call   0x41d7f8
  40e2f6:	mov    r12,rax
  40e2f9:	lea    r15,[rbx+0x2]
  40e2fd:	mov    rdx,rdi
  40e300:	xor    ebp,ebp
  40e302:	mov    rdi,rbx
  40e305:	mov    r8,r12
  40e308:	mov    rcx,r15
  40e30b:	mov    ebx,ebp
  40e30d:	call   0x41d7f0
  40e312:	test   eax,eax
  40e314:	jne    0x40e332
  40e316:	lea    rdx,[rdi+r12*1+0x2]
  40e31b:	movzx  eax,BYTE PTR [rdx]
  40e31e:	cmp    al,0x7f
  40e320:	ja     0x40e35b
  40e322:	lea    rcx,[rip+0x18397]        # 0x4266c0
  40e329:	test   DWORD PTR [rcx+rax*4],0x3b0060
  40e330:	je     0x40e35b
  40e332:	cmp    rbp,0x1
  40e336:	je     0x40e2bf
  40e338:	mov    rdx,QWORD PTR [rip+0x1dfe9]        # 0x42c328
  40e33f:	mov    ebp,0x1
  40e344:	mov    rcx,rdx
  40e347:	mov    QWORD PTR [rsp+0x70],rdx
  40e34c:	call   0x41d7f8
  40e351:	mov    rdx,QWORD PTR [rsp+0x70]
  40e356:	mov    r12,rax
  40e359:	jmp    0x40e305
  40e35b:	lea    rax,[rip+0x14a1e]        # 0x422d80
  40e362:	movsxd r12,ebx
  40e365:	mov    rcx,r13
  40e368:	call   QWORD PTR [rax+r12*8]
  40e36c:	mov    rbx,rax
  40e36f:	jmp    0x40de74
  40e374:	xor    edi,edi
  40e376:	jmp    0x40e2ae
  40e37b:	cmp    BYTE PTR [r12+0x1],0xa
  40e381:	jne    0x40e296
  40e387:	lea    rdi,[r12+0x2]
  40e38c:	mov    eax,0xa
  40e391:	jmp    0x40e296
  40e396:	mov    rax,QWORD PTR [rip+0x1e103]        # 0x42c4a0
  40e39d:	test   rax,rax
  40e3a0:	je     0x40e5f9
  40e3a6:	cmp    BYTE PTR [rax+rdx*1],0x0
  40e3aa:	mov    rcx,r15
  40e3ad:	je     0x40e3bd
  40e3af:	nop
  40e3b0:	add    rcx,0x1
  40e3b4:	movzx  edx,BYTE PTR [rcx]
  40e3b7:	cmp    BYTE PTR [rax+rdx*1],0x0
  40e3bb:	jne    0x40e3b0
  40e3bd:	mov    r8,QWORD PTR [rsp+0x60]
  40e3c2:	mov    rdx,QWORD PTR [rsp+0x68]
  40e3c7:	call   0x407970
  40e3cc:	test   rax,rax
  40e3cf:	mov    rbp,rax
  40e3d2:	je     0x40de24
  40e3d8:	movzx  eax,BYTE PTR [rax]
  40e3db:	cmp    al,0x3e
  40e3dd:	je     0x40dfc1
  40e3e3:	cmp    al,0x2f
  40e3e5:	jne    0x40de24
  40e3eb:	mov    r15,rbp
  40e3ee:	cmp    BYTE PTR [r15+0x1],0x3e
  40e3f3:	jne    0x40de24
  40e3f9:	lea    rbx,[r15+0x2]
  40e3fd:	mov    BYTE PTR [r15],0x0
  40e401:	mov    eax,DWORD PTR [rsp+0x9c]
  40e408:	mov    r8,QWORD PTR [rsp+0x70]
  40e40d:	mov    rdx,QWORD PTR [rsp+0x40]
  40e412:	mov    r9d,r14d
  40e415:	mov    DWORD PTR [rsp+0x20],eax
  40e419:	mov    rcx,r13
  40e41c:	call   0x40cb50
  40e421:	jmp    0x40de74
  40e426:	mov    cl,0x1c
  40e428:	call   0x4054a0
  40e42d:	mov    rcx,rax
  40e430:	jmp    0x40ddbd
  40e435:	mov    ecx,0xc
  40e43a:	call   0x4054a0
  40e43f:	mov    r8,rax
  40e442:	jmp    0x40ddf4
  40e447:	call   0x405990
  40e44c:	mov    rdx,QWORD PTR [rsp+0x70]
  40e451:	lea    rcx,[rax+0x2]
  40e455:	mov    r8,rbx
  40e458:	mov    BYTE PTR [rax],0x3c
  40e45b:	mov    BYTE PTR [rax+0x1],0x2f
  40e45f:	mov    QWORD PTR [rsp+0x88],rax
  40e467:	call   0x41d860
  40e46c:	mov    r11,QWORD PTR [rsp+0x88]
  40e474:	lea    rax,[rbx+0x3]
  40e478:	mov    rcx,r12
  40e47b:	mov    QWORD PTR [rsp+0x78],rax
  40e480:	mov    BYTE PTR [r11+rbx*1+0x2],0x3e
  40e486:	mov    BYTE PTR [r11+rbx*1+0x3],0x0
  40e48c:	mov    rdx,r11
  40e48f:	mov    BYTE PTR [rbp+0x1],0x20
  40e493:	call   0x41d7d0
  40e498:	mov    r11,QWORD PTR [rsp+0x88]
  40e4a0:	cmp    r11,QWORD PTR [rsp+0x48]
  40e4a5:	mov    rdx,rax
  40e4a8:	je     0x40e045
  40e4ae:	mov    rcx,r11
  40e4b1:	mov    QWORD PTR [rsp+0x88],rax
  40e4b9:	call   0x41d8a8
  40e4be:	mov    rdx,QWORD PTR [rsp+0x88]
  40e4c6:	jmp    0x40e045
  40e4cb:	lea    rax,[rip+0x15607]        # 0x423ad9
  40e4d2:	mov    r12d,0x7
  40e4d8:	lea    rdi,[rip+0x155fa]        # 0x423ad9
  40e4df:	mov    QWORD PTR [rip+0x1de3a],rax        # 0x42c320
  40e4e6:	lea    rax,[rip+0x155df]        # 0x423acc
  40e4ed:	mov    QWORD PTR [rip+0x1de34],rax        # 0x42c328
  40e4f4:	jmp    0x40e2f9
  40e4f9:	mov    ecx,0x1c
  40e4fe:	call   0x4054a0
  40e503:	jmp    0x40df69
  40e508:	mov    ecx,0xc
  40e50d:	call   0x4054a0
  40e512:	jmp    0x40e17d
  40e517:	mov    rax,QWORD PTR [rsp+0x78]
  40e51c:	mov    BYTE PTR [rax],0x0
  40e51f:	jmp    0x40e401
  40e524:	mov    QWORD PTR [rsp+0x110],r9
  40e52c:	movzx  eax,BYTE PTR [r12+0x1]
  40e532:	cmp    al,0x23
  40e534:	je     0x40e6ca
  40e53a:	movzx  edx,al
  40e53d:	cmp    edx,0x7f
  40e540:	ja     0x40e657
  40e546:	test   DWORD PTR [rdi+rdx*4],0x30000
  40e54d:	je     0x40e657
  40e553:	mov    rcx,r9
  40e556:	cmp    al,0x58
  40e558:	je     0x40e640
  40e55e:	cmp    al,0x78
  40e560:	je     0x40e640
  40e566:	cmp    al,0x30
  40e568:	mov    r8d,0xa
  40e56e:	je     0x40e628
  40e574:	mov    rdx,QWORD PTR [rsp+0x48]
  40e579:	call   0x41d7c0
  40e57e:	cmp    eax,0x7f
  40e581:	mov    r12,QWORD PTR [rsp+0x110]
  40e589:	ja     0x40e517
  40e58b:	cmp    BYTE PTR [r12],0x3b
  40e590:	jne    0x40e517
  40e592:	add    r12,0x1
  40e596:	test   eax,eax
  40e598:	mov    BYTE PTR [rbp-0x1],al
  40e59b:	jne    0x40e121
  40e5a1:	jmp    0x40e401
  40e5a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e5b0:	movzx  edx,BYTE PTR [r12+0x1]
  40e5b6:	lea    r15,[r12+0x3]
  40e5bb:	mov    BYTE PTR [rsp+0x90],dl
  40e5c2:	movzx  eax,BYTE PTR [r12+0x2]
  40e5c8:	test   dl,dl
  40e5ca:	mov    BYTE PTR [rsp+0x91],al
  40e5d1:	je     0x40e517
  40e5d7:	test   al,al
  40e5d9:	je     0x40e517
  40e5df:	mov    rcx,QWORD PTR [rsp+0x58]
  40e5e4:	mov    r8d,0x10
  40e5ea:	xor    edx,edx
  40e5ec:	mov    r12,r15
  40e5ef:	call   0x41d7c0
  40e5f4:	jmp    0x40e11e
  40e5f9:	mov    ecx,0xc
  40e5fe:	call   0x4054a0
  40e603:	movzx  edx,BYTE PTR [r15]
  40e607:	jmp    0x40e3a6
  40e60c:	mov    ecx,0xc
  40e611:	mov    QWORD PTR [rsp+0x78],rdx
  40e616:	call   0x4054a0
  40e61b:	mov    rdx,QWORD PTR [rsp+0x78]
  40e620:	mov    r8,rax
  40e623:	jmp    0x40e070
  40e628:	cmp    BYTE PTR [rcx+0x1],0x30
  40e62c:	mov    r8d,0x10
  40e632:	mov    eax,0xa
  40e637:	cmovne r8d,eax
  40e63b:	jmp    0x40e574
  40e640:	add    rcx,0x1
  40e644:	mov    r8d,0x10
  40e64a:	mov    QWORD PTR [rsp+0x110],rcx
  40e652:	jmp    0x40e574
  40e657:	lea    r12,[rip+0x147aa]        # 0x422e08
  40e65e:	xor    r15d,r15d
  40e661:	jmp    0x40e675
  40e663:	add    r15d,0x1
  40e667:	add    r12,0x10
  40e66b:	cmp    r15d,0xc
  40e66f:	je     0x40e517
  40e675:	movzx  r10d,WORD PTR [r12]
  40e67a:	mov    rdx,QWORD PTR [r12-0x8]
  40e67f:	mov    rcx,r9
  40e682:	mov    QWORD PTR [rsp+0x80],r9
  40e68a:	mov    r8,r10
  40e68d:	mov    QWORD PTR [rsp+0x88],r10
  40e695:	call   0x41d7f0
  40e69a:	test   eax,eax
  40e69c:	mov    r9,QWORD PTR [rsp+0x80]
  40e6a4:	mov    r10,QWORD PTR [rsp+0x88]
  40e6ac:	jne    0x40e663
  40e6ae:	movsxd rax,r15d
  40e6b1:	lea    rcx,[rip+0x14748]        # 0x422e00
  40e6b8:	lea    r12,[r9+r10*1]
  40e6bc:	shl    rax,0x4
  40e6c0:	movsx  eax,WORD PTR [rcx+rax*1+0xa]
  40e6c5:	jmp    0x40e596
  40e6ca:	lea    rcx,[r12+0x2]
  40e6cf:	mov    QWORD PTR [rsp+0x110],rcx
  40e6d7:	movzx  eax,BYTE PTR [r12+0x2]
  40e6dd:	jmp    0x40e556
  40e6e2:	nop    DWORD PTR [rax+0x0]
  40e6e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e6f0:	push   r15
  40e6f2:	push   r14
  40e6f4:	push   r13
  40e6f6:	push   r12
  40e6f8:	push   rbp
  40e6f9:	push   rdi
  40e6fa:	push   rsi
  40e6fb:	push   rbx
  40e6fc:	sub    rsp,0x188
  40e703:	mov    rdx,QWORD PTR [rcx+0x58]
  40e707:	test   rdx,rdx
  40e70a:	je     0x40e7a9
  40e710:	mov    r15d,DWORD PTR [rcx+0x10]
  40e714:	mov    eax,r15d
  40e717:	and    eax,0xfffffffb
  40e71a:	cmp    QWORD PTR [rdx+0x8],0x0
  40e71f:	mov    DWORD PTR [rcx+0x10],eax
  40e722:	je     0x40e8b3
  40e728:	lea    rax,[rdx+0x10]
  40e72c:	xor    ebx,ebx
  40e72e:	xchg   ax,ax
  40e730:	add    rax,0x8
  40e734:	add    ebx,0x1
  40e737:	cmp    QWORD PTR [rax-0x8],0x0
  40e73c:	jne    0x40e730
  40e73e:	mov    rsi,rcx
  40e741:	mov    ebp,0xffffffff
  40e746:	lea    r12,[rsp+0x70]
  40e74b:	lea    r14,[rsp+0x30]
  40e750:	mov    r13,QWORD PTR [rip+0x214a5]        # 0x42fbfc
  40e757:	jmp    0x40e78e
  40e759:	nop    DWORD PTR [rax+0x0]
  40e760:	movsxd rax,ebx
  40e763:	mov    edi,ebx
  40e765:	shl    rax,0x3
  40e769:	mov    r8,QWORD PTR [rdx+rax*1]
  40e76d:	test   r8,r8
  40e770:	je     0x40e7a5
  40e772:	mov    r9,QWORD PTR [rsi+0x20]
  40e776:	mov    edx,0x105
  40e77b:	mov    rcx,r12
  40e77e:	lea    ebx,[rdi+rbp*1]
  40e781:	call   0x40a530
  40e786:	test   al,al
  40e788:	jne    0x40e7c0
  40e78a:	mov    rdx,QWORD PTR [rsi+0x58]
  40e78e:	cmp    ebx,0xffffffff
  40e791:	jne    0x40e760
  40e793:	xor    eax,eax
  40e795:	xor    edi,edi
  40e797:	mov    ebp,0x1
  40e79c:	mov    r8,QWORD PTR [rdx+rax*1]
  40e7a0:	test   r8,r8
  40e7a3:	jne    0x40e772
  40e7a5:	mov    DWORD PTR [rsi+0x10],r15d
  40e7a9:	add    rsp,0x188
  40e7b0:	pop    rbx
  40e7b1:	pop    rsi
  40e7b2:	pop    rdi
  40e7b3:	pop    rbp
  40e7b4:	pop    r12
  40e7b6:	pop    r13
  40e7b8:	pop    r14
  40e7ba:	pop    r15
  40e7bc:	ret    
  40e7bd:	nop    DWORD PTR [rax]
  40e7c0:	mov    rdx,r14
  40e7c3:	mov    rcx,r12
  40e7c6:	call   r13
  40e7c9:	test   eax,eax
  40e7cb:	jne    0x40e78a
  40e7cd:	movzx  eax,WORD PTR [rsp+0x36]
  40e7d2:	and    ax,0xf000
  40e7d6:	cmp    ax,0x4000
  40e7da:	jne    0x40e868
  40e7e0:	mov    r9,r12
  40e7e3:	mov    edx,DWORD PTR [r9]
  40e7e6:	add    r9,0x4
  40e7ea:	lea    eax,[rdx-0x1010101]
  40e7f0:	not    edx
  40e7f2:	and    eax,edx
  40e7f4:	and    eax,0x80808080
  40e7f9:	je     0x40e7e3
  40e7fb:	mov    edx,eax
  40e7fd:	shr    edx,0x10
  40e800:	test   eax,0x8080
  40e805:	cmove  eax,edx
  40e808:	lea    rdx,[r9+0x2]
  40e80c:	cmove  r9,rdx
  40e810:	mov    rdx,QWORD PTR [rsi+0x38]
  40e814:	add    al,al
  40e816:	sbb    r9,0x3
  40e81a:	sub    r9,r12
  40e81d:	mov    rcx,rdx
  40e820:	mov    QWORD PTR [rsp+0x28],r9
  40e825:	mov    QWORD PTR [rsp+0x20],rdx
  40e82a:	call   0x41d7f8
  40e82f:	mov    r9,QWORD PTR [rsp+0x28]
  40e834:	lea    r8,[rax+0x1]
  40e838:	mov    rdx,QWORD PTR [rsp+0x20]
  40e83d:	lea    rax,[r9+r8*1+0x1]
  40e842:	cmp    rax,0x104
  40e848:	ja     0x40e78a
  40e84e:	add    r9,r12
  40e851:	cmp    BYTE PTR [r9-0x1],0x5c
  40e856:	mov    rcx,r9
  40e859:	je     0x40e863
  40e85b:	add    rcx,0x1
  40e85f:	mov    BYTE PTR [r9],0x5c
  40e863:	call   0x41d860
  40e868:	mov    r8d,ebp
  40e86b:	mov    rdx,r12
  40e86e:	mov    rcx,rsi
  40e871:	call   0x40dc50
  40e876:	cmp    ebp,0xffffffff
  40e879:	jne    0x40e78a
  40e87f:	movzx  eax,WORD PTR [rsi+0xaa]
  40e886:	add    rax,0x1
  40e88a:	lea    rdx,[rax+rax*2]
  40e88e:	lea    rax,[rax+rdx*4]
  40e892:	mov    rdx,QWORD PTR [rsi+0x78]
  40e896:	lea    rax,[rdx+rax*8]
  40e89a:	mov    eax,DWORD PTR [rax+0x10]
  40e89d:	shr    eax,0x5
  40e8a0:	and    eax,0x1
  40e8a3:	mov    eax,0x1
  40e8a8:	cmovne ebx,edi
  40e8ab:	cmovne ebp,eax
  40e8ae:	jmp    0x40e78a
  40e8b3:	xor    ebx,ebx
  40e8b5:	jmp    0x40e73e
  40e8ba:	nop    WORD PTR [rax+rax*1+0x0]
  40e8c0:	push   rdi
  40e8c1:	push   rsi
  40e8c2:	push   rbx
  40e8c3:	sub    rsp,0x20
  40e8c7:	mov    rbx,rcx
  40e8ca:	mov    rdi,rdx
  40e8cd:	call   0x406cd0
  40e8d2:	test   eax,eax
  40e8d4:	mov    esi,eax
  40e8d6:	jne    0x40e8f0
  40e8d8:	mov    QWORD PTR [rbx+0x28],rdi
  40e8dc:	mov    rcx,rbx
  40e8df:	call   0x40e6f0
  40e8e4:	mov    eax,esi
  40e8e6:	add    rsp,0x20
  40e8ea:	pop    rbx
  40e8eb:	pop    rsi
  40e8ec:	pop    rdi
  40e8ed:	ret    
  40e8ee:	xchg   ax,ax
  40e8f0:	mov    esi,0xffffffff
  40e8f5:	jmp    0x40e8e4
  40e8f7:	nop    WORD PTR [rax+rax*1+0x0]
  40e900:	push   rsi
  40e901:	push   rbx
  40e902:	sub    rsp,0x68
  40e906:	cmp    rcx,0xf
  40e90a:	jbe    0x40e912
  40e90c:	test   BYTE PTR [rdx+0x10],0x28
  40e910:	je     0x40e920
  40e912:	add    rsp,0x68
  40e916:	pop    rbx
  40e917:	pop    rsi
  40e918:	ret    
  40e919:	nop    DWORD PTR [rax+0x0]
  40e920:	mov    rsi,rdx
  40e923:	mov    rbx,rcx
  40e926:	lea    rdx,[rsp+0x20]
  40e92b:	mov    rcx,QWORD PTR [rsi+0x18]
  40e92f:	call   QWORD PTR [rip+0x212c7]        # 0x42fbfc
  40e935:	test   eax,eax
  40e937:	je     0x40e953
  40e939:	test   BYTE PTR [rbx+0x10],0x4
  40e93d:	je     0x40e912
  40e93f:	mov    rcx,QWORD PTR [rbx+0x28]
  40e943:	mov    r8,QWORD PTR [rsi+0x18]
  40e947:	lea    rdx,[rip+0x14182]        # 0x422ad0
  40e94e:	call   0x404510
  40e953:	movzx  eax,WORD PTR [rsp+0x26]
  40e958:	and    ax,0xf000
  40e95c:	cmp    ax,0x8000
  40e960:	je     0x40e980
  40e962:	test   BYTE PTR [rbx+0x10],0x4
  40e966:	je     0x40e912
  40e968:	call   QWORD PTR [rip+0x2106e]        # 0x42f9dc
  40e96e:	mov    DWORD PTR [rax],0x16
  40e974:	jmp    0x40e93f
  40e976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e980:	mov    rdx,QWORD PTR [rsi+0x18]
  40e984:	xor    r8d,r8d
  40e987:	mov    rcx,rbx
  40e98a:	call   0x40dc50
  40e98f:	jmp    0x40e912
  40e991:	nop    DWORD PTR [rax+rax*1+0x0]
  40e996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e9a0:	push   r12
  40e9a2:	push   rbp
  40e9a3:	push   rdi
  40e9a4:	push   rsi
  40e9a5:	push   rbx
  40e9a6:	sub    rsp,0x50
  40e9aa:	mov    r8d,0x2
  40e9b0:	mov    edx,0x1
  40e9b5:	mov    ebp,DWORD PTR [rip+0x11495]        # 0x41fe50
  40e9bb:	lea    rsi,[rsp+0x20]
  40e9c0:	mov    rbx,rcx
  40e9c3:	mov    r9,rsi
  40e9c6:	call   0x40d980
  40e9cb:	cmp    rax,0xffffffffffffffff
  40e9cf:	mov    rdi,rax
  40e9d2:	je     0x40ea40
  40e9d4:	mov    rcx,rbx
  40e9d7:	mov    DWORD PTR [rip+0x1146f],0x0        # 0x41fe50
  40e9e1:	call   0x41d7f8
  40e9e6:	mov    rdx,rbx
  40e9e9:	mov    r8,rax
  40e9ec:	mov    rcx,rdi
  40e9ef:	call   0x408de0
  40e9f4:	test   rax,rax
  40e9f7:	mov    rbx,rax
  40e9fa:	je     0x40ea20
  40e9fc:	mov    rcx,rsi
  40e9ff:	call   0x40dbc0
  40ea04:	mov    DWORD PTR [rip+0x11446],ebp        # 0x41fe50
  40ea0a:	mov    rax,rbx
  40ea0d:	add    rsp,0x50
  40ea11:	pop    rbx
  40ea12:	pop    rsi
  40ea13:	pop    rdi
  40ea14:	pop    rbp
  40ea15:	pop    r12
  40ea17:	ret    
  40ea18:	nop    DWORD PTR [rax+rax*1+0x0]
  40ea20:	mov    rdi,QWORD PTR [rip+0x20fb5]        # 0x42f9dc
  40ea27:	call   rdi
  40ea29:	mov    r12d,DWORD PTR [rax]
  40ea2c:	mov    rcx,rsi
  40ea2f:	call   0x40dbc0
  40ea34:	call   rdi
  40ea36:	mov    DWORD PTR [rax],r12d
  40ea39:	jmp    0x40ea04
  40ea3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ea40:	xor    eax,eax
  40ea42:	jmp    0x40ea0d
  40ea44:	xchg   ax,ax
  40ea46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ea50:	push   r13
  40ea52:	push   r12
  40ea54:	push   rbp
  40ea55:	push   rdi
  40ea56:	push   rsi
  40ea57:	push   rbx
  40ea58:	sub    rsp,0x28
  40ea5c:	cmp    rcx,0xf
  40ea60:	jbe    0x40ea6d
  40ea62:	test   rdx,rdx
  40ea65:	je     0x40ea6d
  40ea67:	test   BYTE PTR [rdx+0x10],0x8
  40ea6b:	je     0x40ea80
  40ea6d:	add    rsp,0x28
  40ea71:	pop    rbx
  40ea72:	pop    rsi
  40ea73:	pop    rdi
  40ea74:	pop    rbp
  40ea75:	pop    r12
  40ea77:	pop    r13
  40ea79:	ret    
  40ea7a:	nop    WORD PTR [rax+rax*1+0x0]
  40ea80:	mov    rsi,rcx
  40ea83:	mov    rcx,QWORD PTR [rdx+0x18]
  40ea87:	mov    rbx,rdx
  40ea8a:	call   0x407e00
  40ea8f:	cmp    rax,0xffffffffffffffff
  40ea93:	mov    rdi,rax
  40ea96:	je     0x40eac0
  40ea98:	test   BYTE PTR [rbx+0x10],0x40
  40ea9c:	jne    0x40eab0
  40ea9e:	mov    DWORD PTR [rbx+0x18],edi
  40eaa1:	add    rsp,0x28
  40eaa5:	pop    rbx
  40eaa6:	pop    rsi
  40eaa7:	pop    rdi
  40eaa8:	pop    rbp
  40eaa9:	pop    r12
  40eaab:	pop    r13
  40eaad:	ret    
  40eaae:	xchg   ax,ax
  40eab0:	mov    rcx,QWORD PTR [rbx+0x18]
  40eab4:	call   0x41d8a8
  40eab9:	and    DWORD PTR [rbx+0x10],0xffffffbf
  40eabd:	jmp    0x40ea9e
  40eabf:	nop
  40eac0:	mov    r13,QWORD PTR [rbx+0x18]
  40eac4:	mov    r12,QWORD PTR [rsi+0x28]
  40eac8:	mov    rbp,QWORD PTR [rip+0x11539]        # 0x420008
  40eacf:	call   QWORD PTR [rip+0x20eb7]        # 0x42f98c
  40ead5:	lea    rcx,[rax+0x60]
  40ead9:	mov    r9,r13
  40eadc:	mov    r8,r12
  40eadf:	mov    rdx,rbp
  40eae2:	call   0x403b50
  40eae7:	test   BYTE PTR [rsi+0x10],0x4
  40eaeb:	je     0x40ea98
  40eaed:	mov    edx,0x1
  40eaf2:	mov    rcx,rsi
  40eaf5:	call   QWORD PTR [rsi+0x98]
  40eafb:	jmp    0x40ea98
  40eafd:	nop    DWORD PTR [rax]
  40eb00:	push   rbx
  40eb01:	sub    rsp,0x20
  40eb05:	mov    rbx,rdx
  40eb08:	call   0x40ea50
  40eb0d:	cmp    DWORD PTR [rbx+0x18],0xffffffff
  40eb11:	je     0x40eb1e
  40eb13:	xor    ecx,ecx
  40eb15:	call   QWORD PTR [rip+0x20f41]        # 0x42fa5c
  40eb1b:	add    DWORD PTR [rbx+0x18],eax
  40eb1e:	add    rsp,0x20
  40eb22:	pop    rbx
  40eb23:	ret    
  40eb24:	xchg   ax,ax
  40eb26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eb30:	push   r12
  40eb32:	push   rbp
  40eb33:	push   rdi
  40eb34:	push   rsi
  40eb35:	push   rbx
  40eb36:	sub    rsp,0x30
  40eb3a:	test   rcx,rcx
  40eb3d:	mov    rdi,rcx
  40eb40:	je     0x40eede
  40eb46:	mov    rax,QWORD PTR [rip+0x1d953]        # 0x42c4a0
  40eb4d:	test   rax,rax
  40eb50:	je     0x40ef06
  40eb56:	movzx  ecx,BYTE PTR [rdi]
  40eb59:	mov    rbp,rdi
  40eb5c:	cmp    BYTE PTR [rax+rcx*1],0x0
  40eb60:	mov    rdx,rcx
  40eb63:	je     0x40eb76
  40eb65:	add    rbp,0x1
  40eb69:	movzx  ecx,BYTE PTR [rbp+0x0]
  40eb6d:	cmp    BYTE PTR [rax+rcx*1],0x0
  40eb71:	mov    rdx,rcx
  40eb74:	jne    0x40eb65
  40eb76:	test   dl,dl
  40eb78:	je     0x40eede
  40eb7e:	mov    rsi,rbp
  40eb81:	mov    r12d,0x2
  40eb87:	nop    WORD PTR [rax+rax*1+0x0]
  40eb90:	mov    rax,QWORD PTR [rip+0x1d909]        # 0x42c4a0
  40eb97:	add    r12d,0x1
  40eb9b:	lea    rbx,[rsi+0x1]
  40eb9f:	test   rax,rax
  40eba2:	je     0x40ee47
  40eba8:	movzx  edx,BYTE PTR [rsi+0x1]
  40ebac:	test   dl,dl
  40ebae:	je     0x40eeb8
  40ebb4:	cmp    BYTE PTR [rax+rdx*1],0x0
  40ebb8:	mov    rcx,rax
  40ebbb:	je     0x40ebc6
  40ebbd:	jmp    0x40ebdd
  40ebbf:	nop
  40ebc0:	cmp    BYTE PTR [rax+rdx*1],0x0
  40ebc4:	jne    0x40ebd1
  40ebc6:	add    rbx,0x1
  40ebca:	movzx  edx,BYTE PTR [rbx]
  40ebcd:	test   dl,dl
  40ebcf:	jne    0x40ebc0
  40ebd1:	test   rcx,rcx
  40ebd4:	je     0x40ee70
  40ebda:	mov    rax,rcx
  40ebdd:	movzx  edx,BYTE PTR [rbx]
  40ebe0:	movzx  ecx,dl
  40ebe3:	cmp    BYTE PTR [rax+rcx*1],0x0
  40ebe7:	je     0x40ee37
  40ebed:	mov    rsi,rbx
  40ebf0:	add    rsi,0x1
  40ebf4:	movzx  ecx,BYTE PTR [rsi]
  40ebf7:	cmp    BYTE PTR [rax+rcx*1],0x0
  40ebfb:	mov    rdx,rcx
  40ebfe:	jne    0x40ebf0
  40ec00:	test   dl,dl
  40ec02:	jne    0x40eb90
  40ec04:	sub    rsi,rbp
  40ec07:	movsxd r12,r12d
  40ec0a:	lea    rcx,[rsi+r12*8+0x10]
  40ec0f:	call   0x405990
  40ec14:	test   rax,rax
  40ec17:	mov    rbp,rax
  40ec1a:	je     0x40ef15
  40ec20:	lea    rbx,[rax+r12*8]
  40ec24:	lea    rsi,[rsp+0x2f]
  40ec29:	mov    QWORD PTR [rax+0x8],rbx
  40ec2d:	xor    eax,eax
  40ec2f:	nop
  40ec30:	lea    edx,[rax+0x1]
  40ec33:	mov    DWORD PTR [rbp+0x0],edx
  40ec36:	mov    QWORD PTR [rbp+rax*8+0x8],rbx
  40ec3b:	movzx  r8d,BYTE PTR [rdi]
  40ec3f:	cmp    r8b,0x7f
  40ec43:	ja     0x40ec5d
  40ec45:	lea    rdx,[rip+0x17a74]        # 0x4266c0
  40ec4c:	movzx  eax,r8b
  40ec50:	test   DWORD PTR [rdx+rax*4],0xc01
  40ec57:	jne    0x40ecfd
  40ec5d:	cmp    r8b,0x22
  40ec61:	je     0x40ed50
  40ec67:	cmp    r8b,0x27
  40ec6b:	je     0x40ec90
  40ec6d:	test   r8b,r8b
  40ec70:	je     0x40ed30
  40ec76:	mov    BYTE PTR [rbx],r8b
  40ec79:	movzx  r8d,BYTE PTR [rdi+0x1]
  40ec7e:	add    rbx,0x1
  40ec82:	add    rdi,0x1
  40ec86:	cmp    r8b,0x7f
  40ec8a:	ja     0x40ec5d
  40ec8c:	jmp    0x40ec45
  40ec8e:	xchg   ax,ax
  40ec90:	movzx  r8d,BYTE PTR [rdi+0x1]
  40ec95:	lea    rax,[rdi+0x1]
  40ec99:	cmp    r8b,0x27
  40ec9d:	lea    rdi,[rax+0x1]
  40eca1:	je     0x40ecce
  40eca3:	cmp    r8b,0x5c
  40eca7:	je     0x40edd0
  40ecad:	test   r8b,r8b
  40ecb0:	je     0x40ee80
  40ecb6:	mov    BYTE PTR [rbx],r8b
  40ecb9:	movzx  r8d,BYTE PTR [rdi]
  40ecbd:	mov    rax,rdi
  40ecc0:	add    rbx,0x1
  40ecc4:	lea    rdi,[rax+0x1]
  40ecc8:	cmp    r8b,0x27
  40eccc:	jne    0x40eca3
  40ecce:	test   rdi,rdi
  40ecd1:	je     0x40ee80
  40ecd7:	movzx  r8d,BYTE PTR [rdi]
  40ecdb:	cmp    r8b,0x7f
  40ecdf:	ja     0x40ec3f
  40ece5:	lea    rdx,[rip+0x179d4]        # 0x4266c0
  40ecec:	movzx  eax,r8b
  40ecf0:	test   DWORD PTR [rdx+rax*4],0xc01
  40ecf7:	je     0x40ec3f
  40ecfd:	mov    rax,QWORD PTR [rip+0x1d79c]        # 0x42c4a0
  40ed04:	lea    r12,[rdi+0x1]
  40ed08:	test   rax,rax
  40ed0b:	je     0x40eef7
  40ed11:	movzx  edx,BYTE PTR [rdi+0x1]
  40ed15:	mov    rdi,r12
  40ed18:	cmp    BYTE PTR [rax+rdx*1],0x0
  40ed1c:	je     0x40ed30
  40ed1e:	xchg   ax,ax
  40ed20:	add    rdi,0x1
  40ed24:	movzx  edx,BYTE PTR [rdi]
  40ed27:	cmp    BYTE PTR [rax+rdx*1],0x0
  40ed2b:	jne    0x40ed20
  40ed2d:	nop    DWORD PTR [rax]
  40ed30:	mov    BYTE PTR [rbx],0x0
  40ed33:	cmp    BYTE PTR [rdi],0x0
  40ed36:	lea    rdx,[rbx+0x1]
  40ed3a:	mov    eax,DWORD PTR [rbp+0x0]
  40ed3d:	je     0x40eea1
  40ed43:	mov    rbx,rdx
  40ed46:	jmp    0x40ec30
  40ed4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ed50:	add    rdi,0x1
  40ed54:	movzx  r8d,BYTE PTR [rdi]
  40ed58:	lea    r12,[rdi+0x1]
  40ed5c:	cmp    r8b,0x22
  40ed60:	mov    BYTE PTR [rsp+0x2f],r8b
  40ed65:	je     0x40ed82
  40ed67:	cmp    r8b,0x5c
  40ed6b:	je     0x40eda2
  40ed6d:	test   r8b,r8b
  40ed70:	je     0x40ee80
  40ed76:	mov    BYTE PTR [rbx],r8b
  40ed79:	mov    rdi,r12
  40ed7c:	add    rbx,0x1
  40ed80:	jmp    0x40ed54
  40ed82:	test   r12,r12
  40ed85:	mov    rdi,r12
  40ed88:	je     0x40ee80
  40ed8e:	movzx  r8d,BYTE PTR [r12]
  40ed93:	cmp    r8b,0x7f
  40ed97:	ja     0x40ec3f
  40ed9d:	jmp    0x40ece5
  40eda2:	mov    r8d,0x7f
  40eda8:	mov    rcx,r12
  40edab:	mov    rdx,rsi
  40edae:	call   0x4089b0
  40edb3:	movzx  r8d,BYTE PTR [rsp+0x2f]
  40edb9:	mov    eax,eax
  40edbb:	add    r12,rax
  40edbe:	mov    rdi,r12
  40edc1:	cmp    r8b,0x7f
  40edc5:	jne    0x40ed76
  40edc7:	jmp    0x40ed54
  40edc9:	nop    DWORD PTR [rax+0x0]
  40edd0:	movzx  edx,BYTE PTR [rax+0x1]
  40edd4:	cmp    dl,0xd
  40edd7:	je     0x40ee17
  40edd9:	ja     0x40ee00
  40eddb:	test   dl,dl
  40eddd:	je     0x40ee80
  40ede3:	cmp    dl,0xa
  40ede6:	jne    0x40ecb6
  40edec:	movzx  r8d,BYTE PTR [rax+0x2]
  40edf1:	add    rax,0x2
  40edf5:	jmp    0x40ec99
  40edfa:	nop    WORD PTR [rax+rax*1+0x0]
  40ee00:	cmp    dl,0x27
  40ee03:	je     0x40ee2f
  40ee05:	cmp    dl,0x5c
  40ee08:	jne    0x40ecb6
  40ee0e:	lea    rdi,[rax+0x2]
  40ee12:	jmp    0x40ecb6
  40ee17:	movzx  r8d,BYTE PTR [rax+0x2]
  40ee1c:	cmp    r8b,0xa
  40ee20:	je     0x40eed0
  40ee26:	add    rax,0x2
  40ee2a:	jmp    0x40ec99
  40ee2f:	mov    r8d,0x27
  40ee35:	jmp    0x40ee0e
  40ee37:	test   dl,dl
  40ee39:	mov    rsi,rbx
  40ee3c:	jne    0x40eb90
  40ee42:	jmp    0x40ec04
  40ee47:	mov    ecx,0xc
  40ee4c:	call   0x4054a0
  40ee51:	movzx  edx,BYTE PTR [rsi+0x1]
  40ee55:	mov    rcx,QWORD PTR [rip+0x1d644]        # 0x42c4a0
  40ee5c:	test   dl,dl
  40ee5e:	jne    0x40ebc0
  40ee64:	jmp    0x40ebd1
  40ee69:	nop    DWORD PTR [rax+0x0]
  40ee70:	mov    ecx,0xc
  40ee75:	call   0x4054a0
  40ee7a:	jmp    0x40ebdd
  40ee7f:	nop
  40ee80:	mov    rcx,rbp
  40ee83:	call   0x41d8a8
  40ee88:	call   QWORD PTR [rip+0x20b4e]        # 0x42f9dc
  40ee8e:	mov    DWORD PTR [rax],0x16
  40ee94:	xor    eax,eax
  40ee96:	add    rsp,0x30
  40ee9a:	pop    rbx
  40ee9b:	pop    rsi
  40ee9c:	pop    rdi
  40ee9d:	pop    rbp
  40ee9e:	pop    r12
  40eea0:	ret    
  40eea1:	mov    QWORD PTR [rbp+rax*8+0x8],0x0
  40eeaa:	mov    rax,rbp
  40eead:	add    rsp,0x30
  40eeb1:	pop    rbx
  40eeb2:	pop    rsi
  40eeb3:	pop    rdi
  40eeb4:	pop    rbp
  40eeb5:	pop    r12
  40eeb7:	ret    
  40eeb8:	cmp    BYTE PTR [rax],0x0
  40eebb:	jne    0x40ebed
  40eec1:	mov    rsi,rbx
  40eec4:	jmp    0x40ec04
  40eec9:	nop    DWORD PTR [rax+0x0]
  40eed0:	movzx  r8d,BYTE PTR [rax+0x3]
  40eed5:	add    rax,0x3
  40eed9:	jmp    0x40ec99
  40eede:	call   QWORD PTR [rip+0x20af8]        # 0x42f9dc
  40eee4:	mov    DWORD PTR [rax],0x2
  40eeea:	xor    eax,eax
  40eeec:	add    rsp,0x30
  40eef0:	pop    rbx
  40eef1:	pop    rsi
  40eef2:	pop    rdi
  40eef3:	pop    rbp
  40eef4:	pop    r12
  40eef6:	ret    
  40eef7:	mov    ecx,0xc
  40eefc:	call   0x4054a0
  40ef01:	jmp    0x40ed11
  40ef06:	mov    ecx,0xc
  40ef0b:	call   0x4054a0
  40ef10:	jmp    0x40eb56
  40ef15:	call   QWORD PTR [rip+0x20ac1]        # 0x42f9dc
  40ef1b:	mov    DWORD PTR [rax],0xc
  40ef21:	xor    eax,eax
  40ef23:	jmp    0x40eeec
  40ef25:	nop
  40ef26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ef30:	push   r15
  40ef32:	push   r14
  40ef34:	push   r13
  40ef36:	push   r12
  40ef38:	push   rbp
  40ef39:	push   rdi
  40ef3a:	push   rsi
  40ef3b:	push   rbx
  40ef3c:	sub    rsp,0xd8
  40ef43:	test   BYTE PTR [rcx+0x11],0x1
  40ef47:	jne    0x40ef60
  40ef49:	add    rsp,0xd8
  40ef50:	pop    rbx
  40ef51:	pop    rsi
  40ef52:	pop    rdi
  40ef53:	pop    rbp
  40ef54:	pop    r12
  40ef56:	pop    r13
  40ef58:	pop    r14
  40ef5a:	pop    r15
  40ef5c:	ret    
  40ef5d:	nop    DWORD PTR [rax]
  40ef60:	mov    rdi,rcx
  40ef63:	mov    rcx,QWORD PTR [rcx+0x30]
  40ef67:	mov    ebp,edx
  40ef69:	call   0x41d888
  40ef6e:	test   rax,rax
  40ef71:	je     0x40efe0
  40ef73:	mov    rcx,rax
  40ef76:	call   0x40eb30
  40ef7b:	test   rax,rax
  40ef7e:	mov    rbx,rax
  40ef81:	je     0x40efe0
  40ef83:	mov    r13,QWORD PTR [rdi+0x8]
  40ef87:	mov    QWORD PTR [rdi+0x8],rax
  40ef8b:	mov    eax,DWORD PTR [rax]
  40ef8d:	mov    esi,DWORD PTR [rdi+0x10]
  40ef90:	mov    r12d,DWORD PTR [rdi+0x4]
  40ef94:	mov    DWORD PTR [rdi+0x14],0x1
  40ef9b:	mov    QWORD PTR [rdi+0x18],0x0
  40efa3:	add    eax,0x1
  40efa6:	mov    DWORD PTR [rdi+0x4],eax
  40efa9:	mov    eax,esi
  40efab:	and    eax,0xfffffffb
  40efae:	cmp    ebp,0x1
  40efb1:	mov    DWORD PTR [rdi+0x10],eax
  40efb4:	je     0x40f110
  40efba:	jb     0x40f120
  40efc0:	cmp    ebp,0x2
  40efc3:	jne    0x40efcd
  40efc5:	mov    rcx,rdi
  40efc8:	call   0x40ca60
  40efcd:	mov    rcx,rbx
  40efd0:	call   0x41d8a8
  40efd5:	mov    QWORD PTR [rdi+0x8],r13
  40efd9:	mov    DWORD PTR [rdi+0x4],r12d
  40efdd:	mov    DWORD PTR [rdi+0x10],esi
  40efe0:	lea    r14,[rsp+0x50]
  40efe5:	mov    rax,QWORD PTR [rdi+0x78]
  40efe9:	mov    r9,QWORD PTR [rdi+0x30]
  40efed:	lea    r8,[rip+0x13c81]        # 0x422c75
  40eff4:	mov    edx,0x80
  40eff9:	mov    r15d,DWORD PTR [rdi+0xb4]
  40f000:	mov    rcx,r14
  40f003:	mov    r13d,0x7f
  40f009:	mov    QWORD PTR [rsp+0x30],rax
  40f00e:	call   0x403f40
  40f013:	movsxd r12,eax
  40f016:	lea    esi,[r15-0x1]
  40f01a:	mov    rbx,QWORD PTR [rsp+0x30]
  40f01f:	add    r12,r14
  40f022:	mov    eax,r12d
  40f025:	sub    eax,r14d
  40f028:	sub    r13,rax
  40f02b:	lea    rax,[rsp+0x30]
  40f030:	test   r15d,r15d
  40f033:	mov    QWORD PTR [rsp+0x28],rax
  40f038:	jg     0x40f051
  40f03a:	jmp    0x40f0a0
  40f03c:	nop    DWORD PTR [rax+0x0]
  40f040:	sub    esi,0x1
  40f043:	add    rbx,0x68
  40f047:	cmp    esi,0xffffffff
  40f04a:	mov    QWORD PTR [rsp+0x30],rbx
  40f04f:	je     0x40f0a0
  40f051:	test   BYTE PTR [rbx+0x11],0x1
  40f055:	jne    0x40f040
  40f057:	cmp    WORD PTR [rbx+0x8],0x8000
  40f05d:	jne    0x40f040
  40f05f:	mov    r15,QWORD PTR [rbx+0x48]
  40f063:	mov    rcx,r15
  40f066:	call   0x41d7f8
  40f06b:	lea    r8,[rax+0x1]
  40f06f:	cmp    r13,r8
  40f072:	jb     0x40f040
  40f074:	mov    rdx,r15
  40f077:	mov    rcx,r12
  40f07a:	call   0x41d860
  40f07f:	mov    rcx,QWORD PTR [rsp+0x28]
  40f084:	mov    r9d,ebp
  40f087:	mov    r8,rdi
  40f08a:	mov    rdx,r14
  40f08d:	call   0x405820
  40f092:	mov    rbx,QWORD PTR [rsp+0x30]
  40f097:	jmp    0x40f040
  40f099:	nop    DWORD PTR [rax+0x0]
  40f0a0:	movzx  eax,WORD PTR [rdi+0xaa]
  40f0a7:	test   ax,0x7fff
  40f0ab:	je     0x40ef49
  40f0b1:	add    rax,0x1
  40f0b5:	lea    rdx,[rax+rax*2]
  40f0b9:	lea    rdx,[rax+rdx*4]
  40f0bd:	mov    rax,QWORD PTR [rdi+0x78]
  40f0c1:	lea    rax,[rax+rdx*8]
  40f0c5:	mov    rbx,QWORD PTR [rax+0x48]
  40f0c9:	mov    QWORD PTR [rsp+0x30],rax
  40f0ce:	test   rbx,rbx
  40f0d1:	je     0x40ef49
  40f0d7:	mov    rcx,rbx
  40f0da:	call   0x41d7f8
  40f0df:	lea    r8,[rax+0x1]
  40f0e3:	cmp    r13,r8
  40f0e6:	jb     0x40ef49
  40f0ec:	mov    rdx,rbx
  40f0ef:	mov    rcx,r12
  40f0f2:	call   0x41d860
  40f0f7:	lea    rcx,[rsp+0x30]
  40f0fc:	mov    r9d,ebp
  40f0ff:	mov    r8,rdi
  40f102:	mov    rdx,r14
  40f105:	call   0x405820
  40f10a:	jmp    0x40ef49
  40f10f:	nop
  40f110:	mov    rcx,rdi
  40f113:	call   0x40c960
  40f118:	jmp    0x40efcd
  40f11d:	nop    DWORD PTR [rax]
  40f120:	mov    rcx,rdi
  40f123:	call   0x40c960
  40f128:	mov    DWORD PTR [rdi+0x14],0x1
  40f12f:	mov    QWORD PTR [rdi+0x18],0x0
  40f137:	jmp    0x40efc5
  40f13c:	nop    DWORD PTR [rax+0x0]
  40f140:	push   r15
  40f142:	push   r14
  40f144:	push   r13
  40f146:	push   r12
  40f148:	push   rbp
  40f149:	push   rdi
  40f14a:	push   rsi
  40f14b:	push   rbx
  40f14c:	sub    rsp,0x68
  40f150:	mov    ebp,edx
  40f152:	mov    rdx,QWORD PTR [r8]
  40f155:	mov    rbx,rcx
  40f158:	mov    rdi,r8
  40f15b:	call   0x406cd0
  40f160:	test   eax,eax
  40f162:	mov    esi,eax
  40f164:	jne    0x40f859
  40f16a:	mov    eax,DWORD PTR [rbx+0x10]
  40f16d:	test   al,0x40
  40f16f:	jne    0x40f2f0
  40f175:	or     eax,0x40
  40f178:	cmp    DWORD PTR [rbx],0x21fff
  40f17e:	mov    DWORD PTR [rbx+0x4],ebp
  40f181:	mov    QWORD PTR [rbx+0x8],rdi
  40f185:	mov    DWORD PTR [rbx+0x10],eax
  40f188:	jg     0x40f284
  40f18e:	mov    rcx,rbx
  40f191:	call   0x40c960
  40f196:	test   eax,eax
  40f198:	jne    0x40f271
  40f19e:	movzx  eax,WORD PTR [rbx+0xaa]
  40f1a5:	test   ax,0x7fff
  40f1a9:	jne    0x40f2a0
  40f1af:	or     DWORD PTR [rbx+0x10],0x80000
  40f1b6:	cmp    QWORD PTR [rbx+0x58],0x0
  40f1bb:	je     0x40f5c0
  40f1c1:	mov    edx,0x1
  40f1c6:	mov    rcx,rbx
  40f1c9:	call   0x40ef30
  40f1ce:	xchg   ax,ax
  40f1d0:	mov    edx,0x2
  40f1d5:	mov    rcx,rbx
  40f1d8:	call   0x40ef30
  40f1dd:	mov    eax,DWORD PTR [rbx+0x10]
  40f1e0:	and    eax,0xfff7ffff
  40f1e5:	mov    DWORD PTR [rbx+0x10],eax
  40f1e8:	test   ah,0x20
  40f1eb:	je     0x40f20d
  40f1ed:	mov    rdx,QWORD PTR [rbx+0xa0]
  40f1f4:	test   rdx,rdx
  40f1f7:	je     0x40f20d
  40f1f9:	mov    ecx,eax
  40f1fb:	and    ecx,0x30000
  40f201:	cmp    ecx,0x10000
  40f207:	je     0x40f5cf
  40f20d:	test   ah,0x8
  40f210:	jne    0x40f320
  40f216:	mov    DWORD PTR [rbx+0x14],0x1
  40f21d:	mov    QWORD PTR [rbx+0x18],0x0
  40f225:	mov    rcx,rbx
  40f228:	call   0x40ca60
  40f22d:	test   eax,eax
  40f22f:	jne    0x40f300
  40f235:	movzx  eax,WORD PTR [rbx+0xaa]
  40f23c:	test   ax,ax
  40f23f:	je     0x40f261
  40f241:	cmp    ax,0x8000
  40f245:	je     0x40f261
  40f247:	lea    rdx,[rax+rax*2]
  40f24b:	lea    rax,[rax+rdx*4]
  40f24f:	mov    rdx,QWORD PTR [rbx+0x78]
  40f253:	lea    rax,[rdx+rax*8]
  40f257:	test   BYTE PTR [rax+0x10],0x5
  40f25b:	jne    0x40f8eb
  40f261:	mov    esi,DWORD PTR [rbx+0x10]
  40f264:	test   sil,0x4
  40f268:	jne    0x40f430
  40f26e:	mov    esi,DWORD PTR [rbx+0x14]
  40f271:	mov    eax,esi
  40f273:	add    rsp,0x68
  40f277:	pop    rbx
  40f278:	pop    rsi
  40f279:	pop    rdi
  40f27a:	pop    rbp
  40f27b:	pop    r12
  40f27d:	pop    r13
  40f27f:	pop    r14
  40f281:	pop    r15
  40f283:	ret    
  40f284:	mov    rax,QWORD PTR [rbx+0xd8]
  40f28b:	mov    QWORD PTR [rip+0x10bb6],rax        # 0x41fe48
  40f292:	jmp    0x40f18e
  40f297:	nop    WORD PTR [rax+rax*1+0x0]
  40f2a0:	add    rax,0x1
  40f2a4:	lea    rdx,[rax+rax*2]
  40f2a8:	lea    rdx,[rax+rdx*4]
  40f2ac:	mov    rax,QWORD PTR [rbx+0x78]
  40f2b0:	lea    rsi,[rax+rdx*8]
  40f2b4:	test   BYTE PTR [rsi+0x10],0x20
  40f2b8:	jne    0x40f310
  40f2ba:	or     DWORD PTR [rbx+0x10],0x80000
  40f2c1:	cmp    QWORD PTR [rbx+0x58],0x0
  40f2c6:	je     0x40f5c0
  40f2cc:	mov    edx,0x1
  40f2d1:	mov    rcx,rbx
  40f2d4:	call   0x40ef30
  40f2d9:	test   BYTE PTR [rsi+0x10],0x20
  40f2dd:	jne    0x40f1d0
  40f2e3:	mov    rcx,rbx
  40f2e6:	call   0x40e6f0
  40f2eb:	jmp    0x40f1d0
  40f2f0:	mov    eax,DWORD PTR [rbx+0x14]
  40f2f3:	test   eax,eax
  40f2f5:	je     0x40f216
  40f2fb:	jmp    0x40f225
  40f300:	mov    esi,DWORD PTR [rbx+0x4]
  40f303:	jmp    0x40f271
  40f308:	nop    DWORD PTR [rax+rax*1+0x0]
  40f310:	mov    eax,DWORD PTR [rbx+0x10]
  40f313:	jmp    0x40f1e8
  40f318:	nop    DWORD PTR [rax+rax*1+0x0]
  40f320:	lea    rcx,[rip+0x13952]        # 0x422c79
  40f327:	mov    QWORD PTR [rsp+0x40],0x0
  40f330:	mov    QWORD PTR [rsp+0x48],0x0
  40f339:	mov    DWORD PTR [rsp+0x50],0x4
  40f341:	mov    DWORD PTR [rsp+0x54],0x0
  40f349:	call   0x41d888
  40f34e:	test   rax,rax
  40f351:	jne    0x40f216
  40f357:	test   BYTE PTR [rbx+0x10],0x3
  40f35b:	je     0x40f216
  40f361:	mov    ecx,DWORD PTR [rbx+0x4]
  40f364:	shl    rcx,0x3
  40f368:	call   0x405990
  40f36d:	test   rax,rax
  40f370:	mov    r12,rax
  40f373:	je     0x40f7bf
  40f379:	mov    ecx,DWORD PTR [rbx+0x4]
  40f37c:	shl    rcx,0x3
  40f380:	call   0x405990
  40f385:	test   rax,rax
  40f388:	mov    rbp,rax
  40f38b:	je     0x40f7b7
  40f391:	lea    r13,[rsp+0x40]
  40f396:	mov    r8d,DWORD PTR [rbx+0x4]
  40f39a:	mov    DWORD PTR [rbx+0x14],0x1
  40f3a1:	mov    QWORD PTR [rbx+0x18],0x0
  40f3a9:	mov    eax,0x1
  40f3ae:	xor    edi,edi
  40f3b0:	lea    rcx,[r13+0x14]
  40f3b4:	xor    esi,esi
  40f3b6:	mov    QWORD PTR [rsp+0x38],rcx
  40f3bb:	cmp    r8d,eax
  40f3be:	jbe    0x40f3e9
  40f3c0:	mov    rcx,QWORD PTR [rbx+0x8]
  40f3c4:	mov    edx,eax
  40f3c6:	mov    r14,QWORD PTR [rcx+rdx*8]
  40f3ca:	cmp    BYTE PTR [r14],0x2d
  40f3ce:	je     0x40f61e
  40f3d4:	add    eax,0x1
  40f3d7:	mov    edx,esi
  40f3d9:	add    esi,0x1
  40f3dc:	cmp    r8d,eax
  40f3df:	mov    DWORD PTR [rbx+0x14],eax
  40f3e2:	mov    QWORD PTR [rbp+rdx*8+0x0],r14
  40f3e7:	ja     0x40f3c0
  40f3e9:	call   QWORD PTR [rip+0x205ed]        # 0x42f9dc
  40f3ef:	mov    DWORD PTR [rax],0x0
  40f3f5:	test   edi,edi
  40f3f7:	jne    0x40f83d
  40f3fd:	test   esi,esi
  40f3ff:	je     0x40f419
  40f401:	mov    rax,QWORD PTR [rbx+0x8]
  40f405:	mov    r8d,esi
  40f408:	mov    rdx,rbp
  40f40b:	shl    r8,0x3
  40f40f:	lea    rcx,[rax+rdi*8+0x8]
  40f414:	call   0x41d860
  40f419:	mov    rcx,r12
  40f41c:	call   0x41d8a8
  40f421:	mov    rcx,rbp
  40f424:	call   0x41d8a8
  40f429:	jmp    0x40f216
  40f42e:	xchg   ax,ax
  40f430:	mov    r9,QWORD PTR [rbx+0x78]
  40f434:	mov    r10d,DWORD PTR [rbx+0xb4]
  40f43b:	mov    rcx,r9
  40f43e:	jmp    0x40f468
  40f440:	movzx  eax,WORD PTR [rcx+0x8]
  40f444:	cmp    ax,0x8000
  40f448:	je     0x40f513
  40f44e:	cmp    ax,WORD PTR [rcx]
  40f451:	je     0x40f513
  40f457:	sub    r10d,0x1
  40f45b:	test   r10d,r10d
  40f45e:	jle    0x40f5e1
  40f464:	add    rcx,0x68
  40f468:	mov    r11d,DWORD PTR [rcx+0x10]
  40f46c:	test   r11b,0x5
  40f470:	je     0x40f440
  40f472:	mov    rdx,QWORD PTR [rcx+0x28]
  40f476:	test   rdx,rdx
  40f479:	jne    0x40f49a
  40f47b:	jmp    0x40f4a4
  40f47d:	nop    DWORD PTR [rax]
  40f480:	lea    r8,[rax+rax*2]
  40f484:	add    rdx,0x4
  40f488:	lea    rax,[rax+r8*4]
  40f48c:	lea    rax,[r9+rax*8]
  40f490:	test   BYTE PTR [rax+0x10],0xf
  40f494:	je     0x40f570
  40f49a:	movsxd rax,DWORD PTR [rdx]
  40f49d:	cmp    eax,0x8000
  40f4a2:	jne    0x40f480
  40f4a4:	mov    rdx,QWORD PTR [rcx+0x30]
  40f4a8:	test   rdx,rdx
  40f4ab:	je     0x40f440
  40f4ad:	nop    DWORD PTR [rax]
  40f4b0:	movsxd rax,DWORD PTR [rdx]
  40f4b3:	cmp    eax,0x8000
  40f4b8:	je     0x40f440
  40f4ba:	lea    r8,[rax+rax*2]
  40f4be:	add    rdx,0x4
  40f4c2:	lea    rax,[rax+r8*4]
  40f4c6:	lea    rax,[r9+rax*8]
  40f4ca:	test   BYTE PTR [rax+0x10],0x5
  40f4ce:	je     0x40f4b0
  40f4d0:	mov    r12,QWORD PTR [rax+0x50]
  40f4d4:	mov    rbp,QWORD PTR [rcx+0x50]
  40f4d8:	mov    rdi,QWORD PTR [rbx+0x28]
  40f4dc:	mov    rsi,QWORD PTR [rip+0x10a75]        # 0x41ff58
  40f4e3:	call   QWORD PTR [rip+0x204a3]        # 0x42f98c
  40f4e9:	lea    rcx,[rax+0x60]
  40f4ed:	mov    QWORD PTR [rsp+0x20],r12
  40f4f2:	mov    r9,rbp
  40f4f5:	mov    r8,rdi
  40f4f8:	mov    rdx,rsi
  40f4fb:	call   0x403b50
  40f500:	mov    edx,0x1
  40f505:	mov    rcx,rbx
  40f508:	call   QWORD PTR [rbx+0x98]
  40f50e:	jmp    0x40f26e
  40f513:	movzx  edi,WORD PTR [rcx+0xa]
  40f517:	cmp    WORD PTR [rcx+0xe],di
  40f51b:	jae    0x40f457
  40f521:	test   r11d,0x100000
  40f528:	je     0x40f534
  40f52a:	and    r11d,0x3
  40f52e:	jne    0x40f457
  40f534:	cmp    di,0x1
  40f538:	jbe    0x40f590
  40f53a:	mov    r12,QWORD PTR [rcx+0x50]
  40f53e:	mov    rbp,QWORD PTR [rbx+0x28]
  40f542:	mov    rsi,QWORD PTR [rip+0x10ac7]        # 0x420010
  40f549:	call   QWORD PTR [rip+0x2043d]        # 0x42f98c
  40f54f:	lea    rcx,[rax+0x60]
  40f553:	mov    DWORD PTR [rsp+0x20],edi
  40f557:	mov    r9,r12
  40f55a:	mov    r8,rbp
  40f55d:	mov    rdx,rsi
  40f560:	call   0x403b50
  40f565:	jmp    0x40f500
  40f567:	nop    WORD PTR [rax+rax*1+0x0]
  40f570:	mov    r12,QWORD PTR [rax+0x50]
  40f574:	mov    rbp,QWORD PTR [rcx+0x50]
  40f578:	mov    rdi,QWORD PTR [rbx+0x28]
  40f57c:	mov    rsi,QWORD PTR [rip+0x10ad5]        # 0x420058
  40f583:	jmp    0x40f4e3
  40f588:	nop    DWORD PTR [rax+rax*1+0x0]
  40f590:	mov    rbp,QWORD PTR [rcx+0x50]
  40f594:	mov    rdi,QWORD PTR [rbx+0x28]
  40f598:	mov    rsi,QWORD PTR [rip+0x10a11]        # 0x41ffb0
  40f59f:	call   QWORD PTR [rip+0x203e7]        # 0x42f98c
  40f5a5:	lea    rcx,[rax+0x60]
  40f5a9:	mov    r9,rbp
  40f5ac:	mov    r8,rdi
  40f5af:	mov    rdx,rsi
  40f5b2:	call   0x403b50
  40f5b7:	jmp    0x40f500
  40f5bc:	nop    DWORD PTR [rax+0x0]
  40f5c0:	xor    edx,edx
  40f5c2:	mov    rcx,rbx
  40f5c5:	call   0x40ef30
  40f5ca:	jmp    0x40f1dd
  40f5cf:	and    eax,0xfffeffff
  40f5d4:	mov    DWORD PTR [rbx+0x10],eax
  40f5d7:	call   rdx
  40f5d9:	mov    eax,DWORD PTR [rbx+0x10]
  40f5dc:	jmp    0x40f20d
  40f5e1:	test   esi,0x200
  40f5e7:	je     0x40f69a
  40f5ed:	mov    esi,DWORD PTR [rbx+0x14]
  40f5f0:	cmp    DWORD PTR [rbx+0x4],esi
  40f5f3:	jbe    0x40f271
  40f5f9:	mov    rdi,QWORD PTR [rbx+0x28]
  40f5fd:	mov    rsi,QWORD PTR [rip+0x109bc]        # 0x41ffc0
  40f604:	call   QWORD PTR [rip+0x20382]        # 0x42f98c
  40f60a:	lea    rcx,[rax+0x60]
  40f60e:	mov    r8,rdi
  40f611:	mov    rdx,rsi
  40f614:	call   0x403b50
  40f619:	jmp    0x40f500
  40f61e:	movzx  edx,BYTE PTR [r14+0x1]
  40f623:	test   dl,dl
  40f625:	je     0x40f3d4
  40f62b:	cmp    dl,0x2d
  40f62e:	jne    0x40f720
  40f634:	cmp    BYTE PTR [r14+0x2],0x0
  40f639:	je     0x40f8fa
  40f63f:	lea    rdx,[r14+0x2]
  40f643:	mov    r8,r13
  40f646:	mov    rcx,rbx
  40f649:	call   0x40c3a0
  40f64e:	test   eax,eax
  40f650:	js     0x40f82c
  40f656:	mov    r8d,DWORD PTR [rbx+0x14]
  40f65a:	mov    rcx,QWORD PTR [rbx+0x8]
  40f65e:	lea    r15d,[rdi+0x1]
  40f662:	lea    eax,[r8+0x1]
  40f666:	mov    rdx,r8
  40f669:	mov    r8,QWORD PTR [rcx+r8*8]
  40f66d:	mov    ecx,edi
  40f66f:	mov    DWORD PTR [rbx+0x14],eax
  40f672:	mov    QWORD PTR [r12+rcx*8],r8
  40f676:	mov    rcx,QWORD PTR [rsp+0x40]
  40f67b:	mov    ecx,DWORD PTR [rcx+0x10]
  40f67e:	test   ch,0xf0
  40f681:	jne    0x40f6c2
  40f683:	cmp    DWORD PTR [rsp+0x54],0x1
  40f688:	je     0x40f7d0
  40f68e:	mov    r8d,DWORD PTR [rbx+0x4]
  40f692:	mov    edi,r15d
  40f695:	jmp    0x40f3bb
  40f69a:	and    esi,0x400
  40f6a0:	je     0x40f26e
  40f6a6:	mov    esi,DWORD PTR [rbx+0x14]
  40f6a9:	cmp    DWORD PTR [rbx+0x4],esi
  40f6ac:	ja     0x40f271
  40f6b2:	mov    rdi,QWORD PTR [rbx+0x28]
  40f6b6:	mov    rsi,QWORD PTR [rip+0x10873]        # 0x41ff30
  40f6bd:	jmp    0x40f604
  40f6c2:	and    ecx,0x10000
  40f6c8:	mov    r8,QWORD PTR [rsp+0x48]
  40f6cd:	mov    ecx,DWORD PTR [rsp+0x54]
  40f6d1:	je     0x40f74f
  40f6d3:	cmp    ecx,0x1
  40f6d6:	je     0x40f79b
  40f6dc:	cmp    ecx,0x2
  40f6df:	jne    0x40f78a
  40f6e5:	test   r8,r8
  40f6e8:	jne    0x40f68e
  40f6ea:	mov    r8d,DWORD PTR [rbx+0x4]
  40f6ee:	cmp    eax,r8d
  40f6f1:	jae    0x40f8d7
  40f6f7:	mov    r9,QWORD PTR [rbx+0x8]
  40f6fb:	mov    ecx,eax
  40f6fd:	mov    rcx,QWORD PTR [r9+rcx*8]
  40f701:	cmp    BYTE PTR [rcx],0x2d
  40f704:	je     0x40f692
  40f706:	lea    eax,[rdx+0x2]
  40f709:	mov    r10d,r15d
  40f70c:	lea    r15d,[rdi+0x2]
  40f710:	mov    DWORD PTR [rbx+0x14],eax
  40f713:	mov    QWORD PTR [r12+r10*8],rcx
  40f717:	jmp    0x40f692
  40f71c:	nop    DWORD PTR [rax+0x0]
  40f720:	test   BYTE PTR [rbx+0x10],0x2
  40f724:	jne    0x40f73a
  40f726:	lea    rdx,[r14+0x1]
  40f72a:	mov    r8,r13
  40f72d:	mov    rcx,rbx
  40f730:	call   0x40c3a0
  40f735:	jmp    0x40f64e
  40f73a:	mov    r9,QWORD PTR [rsp+0x38]
  40f73f:	mov    r8,r13
  40f742:	mov    rcx,rbx
  40f745:	call   0x405150
  40f74a:	jmp    0x40f64e
  40f74f:	cmp    ecx,0x1
  40f752:	je     0x40f7ab
  40f754:	cmp    ecx,0x2
  40f757:	jne    0x40f78a
  40f759:	test   r8,r8
  40f75c:	jne    0x40f68e
  40f762:	mov    r8d,DWORD PTR [rbx+0x4]
  40f766:	cmp    eax,r8d
  40f769:	jae    0x40f78a
  40f76b:	mov    rcx,QWORD PTR [rbx+0x8]
  40f76f:	add    edx,0x2
  40f772:	mov    r10d,r15d
  40f775:	mov    DWORD PTR [rbx+0x14],edx
  40f778:	add    edi,0x2
  40f77b:	mov    rax,QWORD PTR [rcx+rax*8]
  40f77f:	mov    QWORD PTR [r12+r10*8],rax
  40f783:	mov    eax,edx
  40f785:	jmp    0x40f3bb
  40f78a:	call   QWORD PTR [rip+0x2024c]        # 0x42f9dc
  40f790:	mov    DWORD PTR [rax],0x5
  40f796:	jmp    0x40f419
  40f79b:	cmp    BYTE PTR [r14+0x2],0x0
  40f7a0:	je     0x40f6ea
  40f7a6:	jmp    0x40f68e
  40f7ab:	cmp    BYTE PTR [r14+0x2],0x0
  40f7b0:	je     0x40f762
  40f7b2:	jmp    0x40f68e
  40f7b7:	mov    rcx,r12
  40f7ba:	call   0x41d8a8
  40f7bf:	call   QWORD PTR [rip+0x20217]        # 0x42f9dc
  40f7c5:	mov    DWORD PTR [rax],0xc
  40f7cb:	jmp    0x40f216
  40f7d0:	movzx  eax,BYTE PTR [r14+0x2]
  40f7d5:	lea    r11,[r14+0x2]
  40f7d9:	lea    r14,[r13+0x14]
  40f7dd:	test   al,al
  40f7df:	jne    0x40f812
  40f7e1:	jmp    0x40f8cf
  40f7e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f7f0:	mov    rax,QWORD PTR [rsp+0x40]
  40f7f5:	mov    r11,QWORD PTR [rsp+0x30]
  40f7fa:	mov    eax,DWORD PTR [rax+0x10]
  40f7fd:	test   ah,0xf0
  40f800:	jne    0x40f865
  40f802:	add    r11,0x1
  40f806:	movzx  eax,BYTE PTR [r11]
  40f80a:	test   al,al
  40f80c:	je     0x40f8cf
  40f812:	movzx  edx,al
  40f815:	mov    r9,r14
  40f818:	mov    r8,r13
  40f81b:	mov    rcx,rbx
  40f81e:	mov    QWORD PTR [rsp+0x30],r11
  40f823:	call   0x405150
  40f828:	test   eax,eax
  40f82a:	jns    0x40f7f0
  40f82c:	call   QWORD PTR [rip+0x201aa]        # 0x42f9dc
  40f832:	mov    DWORD PTR [rax],0x16
  40f838:	jmp    0x40f419
  40f83d:	mov    rax,QWORD PTR [rbx+0x8]
  40f841:	mov    r8d,edi
  40f844:	mov    rdx,r12
  40f847:	shl    r8,0x3
  40f84b:	lea    rcx,[rax+0x8]
  40f84f:	call   0x41d860
  40f854:	jmp    0x40f3fd
  40f859:	mov    rcx,QWORD PTR [rip+0x10698]        # 0x41fef8
  40f860:	call   0x403fc0
  40f865:	test   eax,0x10000
  40f86a:	je     0x40f8a3
  40f86c:	cmp    BYTE PTR [r11+0x1],0x0
  40f871:	jne    0x40f8cf
  40f873:	mov    ecx,DWORD PTR [rbx+0x14]
  40f876:	mov    rdx,QWORD PTR [rbx+0x8]
  40f87a:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40f87e:	mov    rax,rcx
  40f881:	cmp    BYTE PTR [rdx],0x2d
  40f884:	je     0x40f68e
  40f88a:	add    eax,0x1
  40f88d:	mov    r10d,r15d
  40f890:	lea    r15d,[rdi+0x2]
  40f894:	mov    DWORD PTR [rbx+0x14],eax
  40f897:	mov    QWORD PTR [r12+r10*8],rdx
  40f89b:	mov    eax,DWORD PTR [rbx+0x14]
  40f89e:	jmp    0x40f68e
  40f8a3:	cmp    BYTE PTR [r11+0x1],0x0
  40f8a8:	jne    0x40f8cf
  40f8aa:	mov    eax,DWORD PTR [rbx+0x14]
  40f8ad:	cmp    eax,DWORD PTR [rbx+0x4]
  40f8b0:	jae    0x40f82c
  40f8b6:	mov    rdx,QWORD PTR [rbx+0x8]
  40f8ba:	lea    ecx,[rax+0x1]
  40f8bd:	mov    r10d,r15d
  40f8c0:	lea    r15d,[rdi+0x2]
  40f8c4:	mov    DWORD PTR [rbx+0x14],ecx
  40f8c7:	mov    rax,QWORD PTR [rdx+rax*8]
  40f8cb:	mov    QWORD PTR [r12+r10*8],rax
  40f8cf:	mov    eax,DWORD PTR [rbx+0x14]
  40f8d2:	jmp    0x40f68e
  40f8d7:	call   QWORD PTR [rip+0x200ff]        # 0x42f9dc
  40f8dd:	mov    edi,r15d
  40f8e0:	mov    DWORD PTR [rax],0x0
  40f8e6:	jmp    0x40f3f5
  40f8eb:	mov    rcx,rbx
  40f8ee:	call   0x40be90
  40f8f3:	xor    ecx,ecx
  40f8f5:	call   0x403f90
  40f8fa:	lea    ecx,[rax+0x1]
  40f8fd:	mov    edx,edi
  40f8ff:	add    edi,0x1
  40f902:	mov    r9d,esi
  40f905:	cmp    ecx,r8d
  40f908:	mov    DWORD PTR [rbx+0x14],ecx
  40f90b:	mov    QWORD PTR [r12+rdx*8],r14
  40f90f:	mov    edx,ecx
  40f911:	jae    0x40f3f5
  40f917:	mov    r10,QWORD PTR [rbx+0x8]
  40f91b:	mov    r11d,edx
  40f91e:	add    edx,0x1
  40f921:	mov    r11,QWORD PTR [r10+r11*8]
  40f925:	mov    r10d,esi
  40f928:	add    esi,0x1
  40f92b:	cmp    edx,r8d
  40f92e:	mov    QWORD PTR [rbp+r10*8+0x0],r11
  40f933:	jne    0x40f917
  40f935:	lea    esi,[rdx+r9*1-0x1]
  40f93a:	lea    edx,[rdx+rcx*1-0x1]
  40f93e:	sub    edx,eax
  40f940:	sub    esi,eax
  40f942:	mov    DWORD PTR [rbx+0x14],edx
  40f945:	jmp    0x40f3f5
  40f94a:	nop    WORD PTR [rax+rax*1+0x0]
  40f950:	push   rsi
  40f951:	push   rbx
  40f952:	sub    rsp,0x38
  40f956:	mov    rbx,rcx
  40f959:	lea    rcx,[rcx+0x10]
  40f95d:	mov    esi,edx
  40f95f:	xor    edx,edx
  40f961:	mov    QWORD PTR [rsp+0x28],0x0
  40f96a:	call   0x40d370
  40f96f:	test   esi,esi
  40f971:	mov    ecx,DWORD PTR [rbx+0x10]
  40f974:	je     0x40f982
  40f976:	test   ch,0x40
  40f979:	je     0x40f982
  40f97b:	add    rsp,0x38
  40f97f:	pop    rbx
  40f980:	pop    rsi
  40f981:	ret    
  40f982:	test   ch,0x10
  40f985:	lea    rdx,[rsp+0x28]
  40f98a:	jne    0x40f9f0
  40f98c:	call   0x4049a0
  40f991:	mov    r8,QWORD PTR [rsp+0x28]
  40f996:	mov    edx,esi
  40f998:	mov    rcx,rbx
  40f99b:	call   0x407580
  40f9a0:	mov    rcx,QWORD PTR [rip+0x1c961]        # 0x42c308
  40f9a7:	call   0x41d8e0
  40f9ac:	mov    rcx,QWORD PTR [rip+0x1c955]        # 0x42c308
  40f9b3:	call   0x41d8e8
  40f9b8:	test   eax,eax
  40f9ba:	je     0x40f97b
  40f9bc:	call   QWORD PTR [rip+0x1ffca]        # 0x42f98c
  40f9c2:	add    rax,0x60
  40f9c6:	cmp    QWORD PTR [rip+0x1c93b],rax        # 0x42c308
  40f9cd:	mov    r8,QWORD PTR [rip+0x10664]        # 0x420038
  40f9d4:	cmove  r8,QWORD PTR [rip+0x10664]        # 0x420040
  40f9dc:	mov    rcx,QWORD PTR [rbx+0x28]
  40f9e0:	mov    rdx,QWORD PTR [rip+0x10661]        # 0x420048
  40f9e7:	call   0x404510
  40f9ec:	nop    DWORD PTR [rax+0x0]
  40f9f0:	call   0x404860
  40f9f5:	jmp    0x40f991
  40f9f7:	nop    WORD PTR [rax+rax*1+0x0]
  40fa00:	push   r15
  40fa02:	push   r14
  40fa04:	push   r13
  40fa06:	push   r12
  40fa08:	push   rbp
  40fa09:	push   rdi
  40fa0a:	push   rsi
  40fa0b:	push   rbx
  40fa0c:	sub    rsp,0x28
  40fa10:	mov    rbx,rcx
  40fa13:	mov    esi,edx
  40fa15:	mov    r12,r8
  40fa18:	call   0x41d7f8
  40fa1d:	cmp    rax,0xff
  40fa23:	mov    rbp,rax
  40fa26:	jbe    0x40fb15
  40fa2c:	test   sil,sil
  40fa2f:	jne    0x40fb15
  40fa35:	mov    rcx,rbx
  40fa38:	call   0x405700
  40fa3d:	mov    rdi,QWORD PTR [rip+0x200c0]        # 0x42fb04
  40fa44:	mov    r13,rax
  40fa47:	mov    rsi,rax
  40fa4a:	mov    r14,rsi
  40fa4d:	nop    DWORD PTR [rax]
  40fa50:	mov    edx,0xa
  40fa55:	mov    rcx,r14
  40fa58:	call   0x41d820
  40fa5d:	test   rax,rax
  40fa60:	mov    rbx,rax
  40fa63:	je     0x40faf0
  40fa69:	sub    rax,rsi
  40fa6c:	lea    r14,[rbx+0x1]
  40fa70:	cmp    rax,0x27
  40fa74:	jle    0x40fa50
  40fa76:	movsx  ecx,BYTE PTR [rbx+0x1]
  40fa7a:	mov    r15d,ecx
  40fa7d:	call   rdi
  40fa7f:	test   eax,eax
  40fa81:	je     0x40fa50
  40fa83:	cmp    r15b,0x9
  40fa87:	je     0x40fa50
  40fa89:	cmp    r15b,0xa
  40fa8d:	je     0x40fab3
  40fa8f:	cmp    r15b,0x20
  40fa93:	jne    0x40fac1
  40fa95:	add    rbx,0x8
  40fa99:	mov    rdx,r14
  40fa9c:	nop    DWORD PTR [rax+0x0]
  40faa0:	add    rdx,0x1
  40faa4:	cmp    BYTE PTR [rdx],0x20
  40faa7:	jne    0x40fac1
  40faa9:	cmp    rdx,rbx
  40faac:	jne    0x40faa0
  40faae:	mov    r14,rdx
  40fab1:	jmp    0x40fa50
  40fab3:	add    r14,0x1
  40fab7:	movzx  r15d,BYTE PTR [r14]
  40fabb:	cmp    r15b,0xa
  40fabf:	je     0x40fab3
  40fac1:	xor    edx,edx
  40fac3:	mov    rcx,rsi
  40fac6:	mov    BYTE PTR [r14],0x0
  40faca:	mov    r8,r12
  40facd:	sub    rsi,r14
  40fad0:	call   0x40b670
  40fad5:	add    rbp,rsi
  40fad8:	je     0x40fafd
  40fada:	cmp    rbp,0xff
  40fae1:	mov    BYTE PTR [r14],r15b
  40fae4:	mov    rsi,r14
  40fae7:	ja     0x40fa4a
  40faed:	nop    DWORD PTR [rax]
  40faf0:	mov    r8,r12
  40faf3:	xor    edx,edx
  40faf5:	mov    rcx,rsi
  40faf8:	call   0x40b670
  40fafd:	mov    rcx,r13
  40fb00:	add    rsp,0x28
  40fb04:	pop    rbx
  40fb05:	pop    rsi
  40fb06:	pop    rdi
  40fb07:	pop    rbp
  40fb08:	pop    r12
  40fb0a:	pop    r13
  40fb0c:	pop    r14
  40fb0e:	pop    r15
  40fb10:	jmp    0x41d8a8
  40fb15:	movzx  edx,sil
  40fb19:	mov    r8,r12
  40fb1c:	mov    rcx,rbx
  40fb1f:	add    rsp,0x28
  40fb23:	pop    rbx
  40fb24:	pop    rsi
  40fb25:	pop    rdi
  40fb26:	pop    rbp
  40fb27:	pop    r12
  40fb29:	pop    r13
  40fb2b:	pop    r14
  40fb2d:	pop    r15
  40fb2f:	jmp    0x40b670
  40fb34:	xchg   ax,ax
  40fb36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fb40:	push   rbp
  40fb41:	push   rdi
  40fb42:	push   rsi
  40fb43:	push   rbx
  40fb44:	sub    rsp,0x58
  40fb48:	mov    BYTE PTR [rip+0x1c811],0x0        # 0x42c360
  40fb4f:	mov    ebp,edx
  40fb51:	xor    edx,edx
  40fb53:	mov    rbx,rcx
  40fb56:	cmp    ebp,0x2750
  40fb5c:	lea    rcx,[rcx+0x10]
  40fb60:	je     0x40fba4
  40fb62:	call   0x40d370
  40fb67:	test   ebp,ebp
  40fb69:	je     0x40fba9
  40fb6b:	cmp    DWORD PTR [rbx],0x1dfff
  40fb71:	jle    0x40fdc6
  40fb77:	cmp    QWORD PTR [rip+0x1c789],0x0        # 0x42c308
  40fb7f:	mov    rcx,QWORD PTR [rbx+0xc0]
  40fb86:	je     0x41006e
  40fb8c:	test   rcx,rcx
  40fb8f:	mov    eax,DWORD PTR [rbx+0x10]
  40fb92:	je     0x40fdd4
  40fb98:	test   eax,0x100000
  40fb9d:	je     0x40fbdf
  40fb9f:	jmp    0x40fdd4
  40fba4:	call   0x40d370
  40fba9:	cmp    DWORD PTR [rbx],0x1dfff
  40fbaf:	jle    0x40fc49
  40fbb5:	cmp    QWORD PTR [rip+0x1c74b],0x0        # 0x42c308
  40fbbd:	mov    rcx,QWORD PTR [rbx+0xb8]
  40fbc4:	je     0x40ffb7
  40fbca:	test   rcx,rcx
  40fbcd:	mov    eax,DWORD PTR [rbx+0x10]
  40fbd0:	je     0x40fc57
  40fbd6:	test   eax,0x100000
  40fbdb:	jne    0x40fc57
  40fbdd:	xor    ebp,ebp
  40fbdf:	test   ah,0x20
  40fbe2:	je     0x40fe9e
  40fbe8:	mov    r8,QWORD PTR [rip+0x1c719]        # 0x42c308
  40fbef:	mov    edx,0x1
  40fbf4:	call   0x40fa00
  40fbf9:	mov    rcx,QWORD PTR [rip+0x1c708]        # 0x42c308
  40fc00:	call   0x41d8e0
  40fc05:	mov    rcx,QWORD PTR [rip+0x1c6fc]        # 0x42c308
  40fc0c:	call   0x41d8e8
  40fc11:	test   eax,eax
  40fc13:	je     0x40fe97
  40fc19:	call   QWORD PTR [rip+0x1fd6d]        # 0x42f98c
  40fc1f:	add    rax,0x30
  40fc23:	cmp    QWORD PTR [rip+0x1c6de],rax        # 0x42c308
  40fc2a:	mov    r8,QWORD PTR [rip+0x1040f]        # 0x420040
  40fc31:	cmove  r8,QWORD PTR [rip+0x103ff]        # 0x420038
  40fc39:	mov    rcx,QWORD PTR [rbx+0x28]
  40fc3d:	mov    rdx,QWORD PTR [rip+0x10404]        # 0x420048
  40fc44:	call   0x404510
  40fc49:	cmp    QWORD PTR [rip+0x1c6b7],0x0        # 0x42c308
  40fc51:	je     0x40ffb5
  40fc57:	mov    rcx,QWORD PTR [rip+0x1c6aa]        # 0x42c308
  40fc5e:	mov    rdx,QWORD PTR [rbx+0x60]
  40fc62:	xor    edi,edi
  40fc64:	mov    r8,QWORD PTR [rbx+0x28]
  40fc68:	call   0x403b50
  40fc6d:	mov    ecx,DWORD PTR [rbx+0x10]
  40fc70:	test   ch,0x10
  40fc73:	mov    QWORD PTR [rsp+0x30],0x0
  40fc7c:	lea    rdx,[rsp+0x30]
  40fc81:	jne    0x40feaf
  40fc87:	call   0x4049a0
  40fc8c:	lea    rdx,[rip+0x13e4e]        # 0x423ae1
  40fc93:	lea    rcx,[rip+0x1c6e6]        # 0x42c380
  40fc9a:	mov    r8d,eax
  40fc9d:	mov    esi,eax
  40fc9f:	call   0x404530
  40fca4:	test   ebp,ebp
  40fca6:	jne    0x40fcb2
  40fca8:	mov    rax,QWORD PTR [rbx+0x78]
  40fcac:	test   BYTE PTR [rax+0x12],0x20
  40fcb0:	jne    0x40fcc3
  40fcb2:	mov    rdx,QWORD PTR [rip+0x1c64f]        # 0x42c308
  40fcb9:	mov    rcx,QWORD PTR [rsp+0x30]
  40fcbe:	call   0x41d8b8
  40fcc3:	lea    eax,[rsi+0xf]
  40fcc6:	mov    ecx,0x8
  40fccb:	cdq    
  40fccc:	idiv   ecx
  40fcce:	neg    eax
  40fcd0:	add    eax,0x4
  40fcd3:	test   eax,eax
  40fcd5:	jle    0x40fcdd
  40fcd7:	mov    DWORD PTR [rip+0x1c653],eax        # 0x42c330
  40fcdd:	mov    r8,QWORD PTR [rsp+0x30]
  40fce2:	mov    edx,ebp
  40fce4:	mov    rcx,rbx
  40fce7:	call   0x407580
  40fcec:	mov    eax,DWORD PTR [rbx+0x10]
  40fcef:	mov    edx,eax
  40fcf1:	and    edx,0x3
  40fcf4:	cmp    edx,0x1
  40fcf7:	je     0x40ff9a
  40fcfd:	jb     0x40ff7f
  40fd03:	cmp    edx,0x3
  40fd06:	jne    0x40fd1e
  40fd08:	mov    rdx,QWORD PTR [rip+0x1c5f9]        # 0x42c308
  40fd0f:	mov    rcx,QWORD PTR [rip+0x103aa]        # 0x4200c0
  40fd16:	call   0x41d8b8
  40fd1b:	mov    eax,DWORD PTR [rbx+0x10]
  40fd1e:	test   al,0x20
  40fd20:	jne    0x40ff22
  40fd26:	test   ah,0x8
  40fd29:	jne    0x40ff0a
  40fd2f:	mov    rcx,QWORD PTR [rbx+0x68]
  40fd33:	test   rcx,rcx
  40fd36:	je     0x40fd44
  40fd38:	mov    rdx,QWORD PTR [rip+0x1c5c9]        # 0x42c308
  40fd3f:	call   0x41d8b8
  40fd44:	test   ebp,ebp
  40fd46:	je     0x40ff3d
  40fd4c:	cmp    DWORD PTR [rbx],0x21fff
  40fd52:	jle    0x40fee2
  40fd58:	mov    rcx,QWORD PTR [rbx+0xe0]
  40fd5f:	test   rcx,rcx
  40fd62:	je     0x40fee2
  40fd68:	mov    rdx,QWORD PTR [rip+0x1c599]        # 0x42c308
  40fd6f:	call   0x41d8b8
  40fd74:	mov    rcx,QWORD PTR [rip+0x1c58d]        # 0x42c308
  40fd7b:	mov    ebp,edi
  40fd7d:	call   0x41d8e0
  40fd82:	mov    rcx,QWORD PTR [rip+0x1c57f]        # 0x42c308
  40fd89:	call   0x41d8e8
  40fd8e:	test   eax,eax
  40fd90:	je     0x40fbf9
  40fd96:	call   QWORD PTR [rip+0x1fbf0]        # 0x42f98c
  40fd9c:	add    rax,0x60
  40fda0:	cmp    QWORD PTR [rip+0x1c561],rax        # 0x42c308
  40fda7:	mov    r8,QWORD PTR [rip+0x1028a]        # 0x420038
  40fdae:	cmove  r8,QWORD PTR [rip+0x1028a]        # 0x420040
  40fdb6:	mov    rcx,QWORD PTR [rbx+0x28]
  40fdba:	mov    rdx,QWORD PTR [rip+0x10287]        # 0x420048
  40fdc1:	call   0x404510
  40fdc6:	cmp    QWORD PTR [rip+0x1c53a],0x0        # 0x42c308
  40fdce:	je     0x41006c
  40fdd4:	mov    rcx,QWORD PTR [rip+0x1c52d]        # 0x42c308
  40fddb:	mov    rdx,QWORD PTR [rbx+0x60]
  40fddf:	mov    edi,ebp
  40fde1:	mov    r8,QWORD PTR [rbx+0x28]
  40fde5:	call   0x403b50
  40fdea:	mov    ecx,DWORD PTR [rbx+0x10]
  40fded:	test   ch,0x40
  40fdf0:	je     0x40fc70
  40fdf6:	cmp    DWORD PTR [rbx],0x25fff
  40fdfc:	jle    0x40ffe0
  40fe02:	movsxd rax,DWORD PTR [rbx+0xb4]
  40fe09:	mov    r8,rax
  40fe0c:	imul   rax,rax,0x68
  40fe10:	add    rax,QWORD PTR [rbx+0x78]
  40fe14:	cmp    DWORD PTR [rax+0x14],0x3
  40fe18:	je     0x40fe53
  40fe1a:	mov    edx,DWORD PTR [rbx+0xb0]
  40fe20:	lea    r9d,[r8+0x1]
  40fe24:	cmp    r9d,edx
  40fe27:	jge    0x41017f
  40fe2d:	sub    edx,0x2
  40fe30:	sub    edx,r8d
  40fe33:	add    rdx,0x1
  40fe37:	imul   rdx,rdx,0x68
  40fe3b:	add    rdx,rax
  40fe3e:	jmp    0x40fe49
  40fe40:	cmp    rax,rdx
  40fe43:	je     0x41017f
  40fe49:	add    rax,0x68
  40fe4d:	cmp    DWORD PTR [rax+0x14],0x3
  40fe51:	jne    0x40fe40
  40fe53:	and    ecx,0x3
  40fe56:	cmp    ecx,0x2
  40fe59:	je     0x410163
  40fe5f:	cmp    ecx,0x3
  40fe62:	je     0x410131
  40fe68:	sub    ecx,0x1
  40fe6b:	je     0x410131
  40fe71:	lea    r9,[rsp+0x30]
  40fe76:	mov    rdx,QWORD PTR [rax+0x50]
  40fe7a:	mov    r8d,0x14
  40fe80:	mov    rcx,r9
  40fe83:	mov    QWORD PTR [rsp+0x28],r9
  40fe88:	call   0x41d7e8
  40fe8d:	mov    r9,QWORD PTR [rsp+0x28]
  40fe92:	jmp    0x410010
  40fe97:	mov    ecx,ebp
  40fe99:	call   0x403f90
  40fe9e:	mov    rdx,QWORD PTR [rip+0x1c463]        # 0x42c308
  40fea5:	call   0x41d8b8
  40feaa:	jmp    0x40fbf9
  40feaf:	call   0x404860
  40feb4:	lea    rdx,[rip+0x13c26]        # 0x423ae1
  40febb:	lea    rcx,[rip+0x1c4be]        # 0x42c380
  40fec2:	mov    r8d,eax
  40fec5:	mov    esi,eax
  40fec7:	call   0x404530
  40fecc:	mov    rdx,QWORD PTR [rip+0x1c435]        # 0x42c308
  40fed3:	mov    ecx,0xa
  40fed8:	call   0x41d8c0
  40fedd:	jmp    0x40fcc3
  40fee2:	mov    r8,QWORD PTR [rbx+0x80]
  40fee9:	test   r8,r8
  40feec:	je     0x40fd74
  40fef2:	mov    rdx,QWORD PTR [rip+0x10237]        # 0x420130
  40fef9:	mov    rcx,QWORD PTR [rip+0x1c408]        # 0x42c308
  40ff00:	call   0x403b50
  40ff05:	jmp    0x40fd74
  40ff0a:	mov    rdx,QWORD PTR [rip+0x1c3f7]        # 0x42c308
  40ff11:	mov    rcx,QWORD PTR [rip+0x10280]        # 0x420198
  40ff18:	call   0x41d8b8
  40ff1d:	jmp    0x40fd2f
  40ff22:	mov    rdx,QWORD PTR [rip+0x1c3df]        # 0x42c308
  40ff29:	mov    rcx,QWORD PTR [rip+0x101e8]        # 0x420118
  40ff30:	call   0x41d8b8
  40ff35:	mov    eax,DWORD PTR [rbx+0x10]
  40ff38:	jmp    0x40fd26
  40ff3d:	mov    rcx,QWORD PTR [rbx+0x58]
  40ff41:	test   rcx,rcx
  40ff44:	jne    0x41008e
  40ff4a:	test   BYTE PTR [rbx+0x11],0x1
  40ff4e:	jne    0x41003d
  40ff54:	cmp    BYTE PTR [rip+0x1c405],0x0        # 0x42c360
  40ff5b:	jne    0x4100a6
  40ff61:	mov    rcx,QWORD PTR [rbx+0x70]
  40ff65:	test   rcx,rcx
  40ff68:	je     0x40fd4c
  40ff6e:	mov    rdx,QWORD PTR [rip+0x1c393]        # 0x42c308
  40ff75:	call   0x41d8b8
  40ff7a:	jmp    0x40fd4c
  40ff7f:	mov    rdx,QWORD PTR [rip+0x1c382]        # 0x42c308
  40ff86:	mov    rcx,QWORD PTR [rip+0x10193]        # 0x420120
  40ff8d:	call   0x41d8b8
  40ff92:	mov    eax,DWORD PTR [rbx+0x10]
  40ff95:	jmp    0x40fd1e
  40ff9a:	mov    rdx,QWORD PTR [rip+0x1c367]        # 0x42c308
  40ffa1:	mov    rcx,QWORD PTR [rip+0x10140]        # 0x4200e8
  40ffa8:	call   0x41d8b8
  40ffad:	mov    eax,DWORD PTR [rbx+0x10]
  40ffb0:	jmp    0x40fd1e
  40ffb5:	xor    ecx,ecx
  40ffb7:	cmp    BYTE PTR [rip+0x1c376],0x0        # 0x42c334
  40ffbe:	mov    QWORD PTR [rsp+0x28],rcx
  40ffc3:	jne    0x41002c
  40ffc5:	call   QWORD PTR [rip+0x1f9c1]        # 0x42f98c
  40ffcb:	mov    rcx,QWORD PTR [rsp+0x28]
  40ffd0:	add    rax,0x30
  40ffd4:	mov    QWORD PTR [rip+0x1c32d],rax        # 0x42c308
  40ffdb:	jmp    0x40fbca
  40ffe0:	and    ecx,0x3
  40ffe3:	cmp    ecx,0x2
  40ffe6:	je     0x41011b
  40ffec:	cmp    ecx,0x3
  40ffef:	je     0x410100
  40fff5:	sub    ecx,0x1
  40fff8:	je     0x410100
  40fffe:	lea    r9,[rsp+0x30]
  410003:	mov    DWORD PTR [rsp+0x30],0x706c6568
  41000b:	mov    BYTE PTR [rsp+0x34],0x0
  410010:	mov    r8,QWORD PTR [rbx+0x28]
  410014:	mov    rdx,QWORD PTR [rip+0x1000d]        # 0x420028
  41001b:	mov    rcx,QWORD PTR [rip+0x1c2e6]        # 0x42c308
  410022:	call   0x403b50
  410027:	jmp    0x40fbf9
  41002c:	call   QWORD PTR [rip+0x1f95a]        # 0x42f98c
  410032:	mov    rcx,QWORD PTR [rsp+0x28]
  410037:	add    rax,0x60
  41003b:	jmp    0x40ffd4
  41003d:	mov    rdx,QWORD PTR [rip+0x1c2c4]        # 0x42c308
  410044:	mov    rcx,QWORD PTR [rip+0x100f5]        # 0x420140
  41004b:	call   0x41d8b8
  410050:	mov    r8,QWORD PTR [rbx+0x30]
  410054:	mov    rdx,QWORD PTR [rip+0x1004d]        # 0x4200a8
  41005b:	mov    rcx,QWORD PTR [rip+0x1c2a6]        # 0x42c308
  410062:	call   0x403b50
  410067:	jmp    0x40ff54
  41006c:	xor    ecx,ecx
  41006e:	mov    QWORD PTR [rsp+0x28],rcx
  410073:	call   QWORD PTR [rip+0x1f913]        # 0x42f98c
  410079:	add    rax,0x60
  41007d:	mov    rcx,QWORD PTR [rsp+0x28]
  410082:	mov    QWORD PTR [rip+0x1c27f],rax        # 0x42c308
  410089:	jmp    0x40fb8c
  41008e:	mov    rdx,QWORD PTR [rbx+0x38]
  410092:	mov    r8,QWORD PTR [rbx+0x20]
  410096:	call   0x40a7a0
  41009b:	test   BYTE PTR [rbx+0x11],0x1
  41009f:	jne    0x410050
  4100a1:	jmp    0x40ff54
  4100a6:	mov    rdx,QWORD PTR [rip+0x1c25b]        # 0x42c308
  4100ad:	mov    ecx,0xa
  4100b2:	mov    ebp,DWORD PTR [rbx+0xb0]
  4100b8:	mov    rsi,QWORD PTR [rbx+0x78]
  4100bc:	call   0x41d8c0
  4100c1:	mov    rcx,QWORD PTR [rip+0x1c240]        # 0x42c308
  4100c8:	call   0x41d8e0
  4100cd:	jmp    0x4100e3
  4100cf:	cmp    eax,0x4
  4100d2:	je     0x4100f3
  4100d4:	sub    ebp,0x1
  4100d7:	add    rsi,0x68
  4100db:	test   ebp,ebp
  4100dd:	jle    0x40ff61
  4100e3:	mov    eax,DWORD PTR [rsi+0x10]
  4100e6:	and    eax,0xf000
  4100eb:	shr    eax,0xc
  4100ee:	cmp    eax,0x2
  4100f1:	jne    0x4100cf
  4100f3:	mov    rdx,rsi
  4100f6:	mov    ecx,0x1
  4100fb:	call   QWORD PTR [rsi+0x38]
  4100fe:	jmp    0x4100d4
  410100:	lea    r9,[rsp+0x30]
  410105:	lea    rsi,[rip+0x12b7d]        # 0x422c89
  41010c:	mov    ecx,0x7
  410111:	mov    rdi,r9
  410114:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  410116:	jmp    0x410010
  41011b:	mov    WORD PTR [rsp+0x30],0x682d
  410122:	mov    BYTE PTR [rsp+0x32],0x0
  410127:	lea    r9,[rsp+0x30]
  41012c:	jmp    0x410010
  410131:	mov    BYTE PTR [rsp+0x31],0x2d
  410136:	mov    BYTE PTR [rsp+0x30],0x2d
  41013b:	lea    r9,[rsp+0x30]
  410140:	mov    rdx,QWORD PTR [rax+0x50]
  410144:	lea    rcx,[rsp+0x32]
  410149:	mov    r8d,0x14
  41014f:	mov    QWORD PTR [rsp+0x28],r9
  410154:	call   0x41d7e8
  410159:	mov    r9,QWORD PTR [rsp+0x28]
  41015e:	jmp    0x410010
  410163:	mov    BYTE PTR [rsp+0x30],0x2d
  410168:	movzx  eax,WORD PTR [rax+0x2]
  41016c:	lea    r9,[rsp+0x30]
  410171:	mov    BYTE PTR [rsp+0x32],0x0
  410176:	mov    BYTE PTR [rsp+0x31],al
  41017a:	jmp    0x410010
  41017f:	mov    rcx,QWORD PTR [rip+0xfd6a]        # 0x41fef0
  410186:	call   0x403fc0
  41018b:	nop
  41018c:	nop    DWORD PTR [rax+0x0]
  410190:	sub    rsp,0x28
  410194:	call   0x40fb40
  410199:	nop
  41019a:	nop    WORD PTR [rax+rax*1+0x0]
  4101a0:	sub    rsp,0x28
  4101a4:	lea    rcx,[rip+0xf995]        # 0x41fb40
  4101ab:	xor    edx,edx
  4101ad:	call   0x40fb40
  4101b2:	nop
  4101b3:	nop    DWORD PTR [rax]
  4101b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4101c0:	lea    rax,[rip+0x12ac9]        # 0x422c90
  4101c7:	ret    
  4101c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4101d0:	push   rsi
  4101d1:	push   rbx
  4101d2:	sub    rsp,0x28
  4101d6:	cmp    BYTE PTR [rip+0x1c157],0x0        # 0x42c334
  4101dd:	mov    rbx,rcx
  4101e0:	mov    rsi,rdx
  4101e3:	je     0x410200
  4101e5:	call   QWORD PTR [rip+0x1f7a1]        # 0x42f98c
  4101eb:	cmp    rbx,0xf
  4101ef:	lea    r8,[rax+0x60]
  4101f3:	ja     0x410210
  4101f5:	add    rsp,0x28
  4101f9:	pop    rbx
  4101fa:	pop    rsi
  4101fb:	ret    
  4101fc:	nop    DWORD PTR [rax+0x0]
  410200:	call   QWORD PTR [rip+0x1f786]        # 0x42f98c
  410206:	cmp    rbx,0xf
  41020a:	lea    r8,[rax+0x30]
  41020e:	jbe    0x4101f5
  410210:	xor    r9d,r9d
  410213:	mov    rdx,rsi
  410216:	mov    rcx,rbx
  410219:	add    rsp,0x28
  41021d:	pop    rbx
  41021e:	pop    rsi
  41021f:	jmp    0x40d610
  410224:	xchg   ax,ax
  410226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410230:	push   rsi
  410231:	push   rbx
  410232:	sub    rsp,0x28
  410236:	mov    rbx,rcx
  410239:	mov    rsi,rdx
  41023c:	call   QWORD PTR [rip+0x1f74a]        # 0x42f98c
  410242:	cmp    rbx,0xf
  410246:	ja     0x410250
  410248:	add    rsp,0x28
  41024c:	pop    rbx
  41024d:	pop    rsi
  41024e:	ret    
  41024f:	nop
  410250:	lea    r8,[rax+0x60]
  410254:	mov    r9d,0x1
  41025a:	mov    rdx,rsi
  41025d:	mov    rcx,rbx
  410260:	add    rsp,0x28
  410264:	pop    rbx
  410265:	pop    rsi
  410266:	jmp    0x40d610
  41026b:	nop
  41026c:	nop
  41026d:	nop
  41026e:	nop
  41026f:	nop
  410270:	push   r15
  410272:	push   r14
  410274:	push   r13
  410276:	push   r12
  410278:	push   rbp
  410279:	push   rdi
  41027a:	push   rsi
  41027b:	push   rbx
  41027c:	sub    rsp,0x68
  410280:	mov    rbp,rcx
  410283:	mov    r12,rdx
  410286:	call   0x41d750
  41028b:	lea    rdx,[rsp+0x20]
  410290:	mov    ecx,eax
  410292:	call   0x4104b0
  410297:	test   eax,eax
  410299:	js     0x4102ae
  41029b:	movzx  eax,WORD PTR [rsp+0x26]
  4102a0:	and    ax,0xf000
  4102a4:	cmp    ax,0x8000
  4102a8:	je     0x4103c5
  4102ae:	mov    ebx,0x200
  4102b3:	mov    rcx,rbx
  4102b6:	call   0x4104e0
  4102bb:	test   rax,rax
  4102be:	mov    rdi,rax
  4102c1:	je     0x4103f6
  4102c7:	xor    esi,esi
  4102c9:	mov    r13,0xffffffffffffffff
  4102d0:	jmp    0x41030c
  4102d2:	cmp    rbx,0xffffffffffffffff
  4102d6:	je     0x410371
  4102dc:	mov    r8,rbx
  4102df:	mov    rcx,rdi
  4102e2:	shr    r8,1
  4102e5:	mov    rax,r8
  4102e8:	add    r8,rbx
  4102eb:	not    rax
  4102ee:	cmp    rbx,rax
  4102f1:	mov    rbx,r8
  4102f4:	cmovae rbx,r13
  4102f8:	mov    rdx,rbx
  4102fb:	call   0x410be0
  410300:	test   rax,rax
  410303:	je     0x410390
  410309:	mov    rdi,rax
  41030c:	mov    r14,rbx
  41030f:	lea    rcx,[rdi+rsi*1]
  410313:	mov    r9,rbp
  410316:	sub    r14,rsi
  410319:	mov    edx,0x1
  41031e:	mov    r8,r14
  410321:	call   0x41d8b0
  410326:	add    rsi,rax
  410329:	cmp    rax,r14
  41032c:	je     0x4102d2
  41032e:	mov    r14,QWORD PTR [rip+0x1f6a7]        # 0x42f9dc
  410335:	mov    r13,rdi
  410338:	call   r14
  41033b:	mov    rcx,rbp
  41033e:	mov    r15d,DWORD PTR [rax]
  410341:	call   0x41d8e8
  410346:	test   eax,eax
  410348:	jne    0x41037e
  41034a:	sub    rbx,0x1
  41034e:	cmp    rsi,rbx
  410351:	jb     0x4103b0
  410353:	mov    BYTE PTR [r13+rsi*1+0x0],0x0
  410359:	mov    rax,r13
  41035c:	mov    QWORD PTR [r12],rsi
  410360:	add    rsp,0x68
  410364:	pop    rbx
  410365:	pop    rsi
  410366:	pop    rdi
  410367:	pop    rbp
  410368:	pop    r12
  41036a:	pop    r13
  41036c:	pop    r14
  41036e:	pop    r15
  410370:	ret    
  410371:	mov    r14,QWORD PTR [rip+0x1f664]        # 0x42f9dc
  410378:	mov    r15d,0xc
  41037e:	mov    rcx,rdi
  410381:	call   0x41d8a8
  410386:	call   r14
  410389:	mov    DWORD PTR [rax],r15d
  41038c:	xor    eax,eax
  41038e:	jmp    0x410360
  410390:	mov    r14,QWORD PTR [rip+0x1f645]        # 0x42f9dc
  410397:	call   r14
  41039a:	mov    r15d,DWORD PTR [rax]
  41039d:	mov    rcx,rdi
  4103a0:	call   0x41d8a8
  4103a5:	call   r14
  4103a8:	mov    DWORD PTR [rax],r15d
  4103ab:	xor    eax,eax
  4103ad:	jmp    0x410360
  4103af:	nop
  4103b0:	lea    rdx,[rsi+0x1]
  4103b4:	mov    rcx,rdi
  4103b7:	call   0x410be0
  4103bc:	test   rax,rax
  4103bf:	cmovne r13,rax
  4103c3:	jmp    0x410353
  4103c5:	mov    rcx,rbp
  4103c8:	call   0x418cf0
  4103cd:	test   rax,rax
  4103d0:	js     0x4102ae
  4103d6:	mov    rbx,QWORD PTR [rsp+0x38]
  4103db:	cmp    rax,rbx
  4103de:	jge    0x4102ae
  4103e4:	sub    rbx,rax
  4103e7:	cmp    rbx,0xffffffffffffffff
  4103eb:	je     0x4103fd
  4103ed:	add    rbx,0x1
  4103f1:	jmp    0x4102b3
  4103f6:	xor    eax,eax
  4103f8:	jmp    0x410360
  4103fd:	call   QWORD PTR [rip+0x1f5d9]        # 0x42f9dc
  410403:	mov    DWORD PTR [rax],0xc
  410409:	xor    eax,eax
  41040b:	jmp    0x410360
  410410:	push   rbp
  410411:	push   rdi
  410412:	push   rsi
  410413:	push   rbx
  410414:	sub    rsp,0x28
  410418:	mov    rsi,rdx
  41041b:	mov    rdx,r8
  41041e:	call   0x41d8d0
  410423:	test   rax,rax
  410426:	mov    rbx,rax
  410429:	je     0x410480
  41042b:	mov    rdx,rsi
  41042e:	mov    rcx,rax
  410431:	call   0x410270
  410436:	mov    rsi,QWORD PTR [rip+0x1f59f]        # 0x42f9dc
  41043d:	mov    rdi,rax
  410440:	call   rsi
  410442:	mov    rcx,rbx
  410445:	mov    ebp,DWORD PTR [rax]
  410447:	call   0x41d8f0
  41044c:	test   eax,eax
  41044e:	mov    rdx,rdi
  410451:	jne    0x410460
  410453:	mov    rax,rdx
  410456:	add    rsp,0x28
  41045a:	pop    rbx
  41045b:	pop    rsi
  41045c:	pop    rdi
  41045d:	pop    rbp
  41045e:	ret    
  41045f:	nop
  410460:	test   rdi,rdi
  410463:	je     0x410471
  410465:	call   rsi
  410467:	mov    rcx,rdi
  41046a:	mov    ebp,DWORD PTR [rax]
  41046c:	call   0x41d8a8
  410471:	call   rsi
  410473:	xor    edx,edx
  410475:	mov    DWORD PTR [rax],ebp
  410477:	jmp    0x410453
  410479:	nop    DWORD PTR [rax+0x0]
  410480:	xor    edx,edx
  410482:	jmp    0x410453
  410484:	xchg   ax,ax
  410486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410490:	lea    r8,[rip+0x16429]        # 0x4268c0
  410497:	jmp    0x410410
  41049c:	nop    DWORD PTR [rax+0x0]
  4104a0:	lea    r8,[rip+0x1641b]        # 0x4268c2
  4104a7:	jmp    0x410410
  4104ac:	nop
  4104ad:	nop
  4104ae:	nop
  4104af:	nop
  4104b0:	push   rsi
  4104b1:	push   rbx
  4104b2:	sub    rsp,0x28
  4104b6:	mov    ebx,ecx
  4104b8:	mov    rsi,rdx
  4104bb:	call   0x410bb0
  4104c0:	mov    rax,QWORD PTR [rip+0x1f53d]        # 0x42fa04
  4104c7:	mov    rdx,rsi
  4104ca:	mov    ecx,ebx
  4104cc:	add    rsp,0x28
  4104d0:	pop    rbx
  4104d1:	pop    rsi
  4104d2:	rex.W jmp rax
  4104d5:	nop
  4104d6:	nop
  4104d7:	nop
  4104d8:	nop
  4104d9:	nop
  4104da:	nop
  4104db:	nop
  4104dc:	nop
  4104dd:	nop
  4104de:	nop
  4104df:	nop
  4104e0:	push   rbx
  4104e1:	sub    rsp,0x20
  4104e5:	call   0x41d870
  4104ea:	test   rax,rax
  4104ed:	mov    rbx,rax
  4104f0:	je     0x410500
  4104f2:	mov    rax,rbx
  4104f5:	add    rsp,0x20
  4104f9:	pop    rbx
  4104fa:	ret    
  4104fb:	nop    DWORD PTR [rax+rax*1+0x0]
  410500:	call   QWORD PTR [rip+0x1f4d6]        # 0x42f9dc
  410506:	mov    DWORD PTR [rax],0xc
  41050c:	mov    rax,rbx
  41050f:	add    rsp,0x20
  410513:	pop    rbx
  410514:	ret    
  410515:	nop
  410516:	nop
  410517:	nop
  410518:	nop
  410519:	nop
  41051a:	nop
  41051b:	nop
  41051c:	nop
  41051d:	nop
  41051e:	nop
  41051f:	nop
  410520:	push   rdi
  410521:	push   rsi
  410522:	push   rbx
  410523:	mov    esi,0x1
  410528:	mov    r10d,0x1
  41052e:	xor    r11d,r11d
  410531:	mov    rax,0xffffffffffffffff
  410538:	nop    DWORD PTR [rax+rax*1+0x0]
  410540:	lea    r9,[r11+r10*1]
  410544:	cmp    r9,rdx
  410547:	jae    0x410574
  410549:	lea    rbx,[rcx+rax*1]
  41054d:	movzx  edi,BYTE PTR [rbx+r10*1]
  410552:	cmp    BYTE PTR [rcx+r9*1],dil
  410556:	jae    0x4105e0
  41055c:	mov    r11,r9
  41055f:	mov    r10d,0x1
  410565:	mov    rsi,r9
  410568:	lea    r9,[r11+r10*1]
  41056c:	sub    rsi,rax
  41056f:	cmp    r9,rdx
  410572:	jb     0x410549
  410574:	mov    QWORD PTR [r8],rsi
  410577:	mov    edi,0x1
  41057c:	mov    r10d,0x1
  410582:	xor    r11d,r11d
  410585:	mov    rbx,0xffffffffffffffff
  41058c:	nop    DWORD PTR [rax+0x0]
  410590:	lea    r9,[r11+r10*1]
  410594:	cmp    rdx,r9
  410597:	jbe    0x4105c0
  410599:	lea    rsi,[rcx+rbx*1]
  41059d:	movzx  esi,BYTE PTR [rsi+r10*1]
  4105a2:	cmp    BYTE PTR [rcx+r9*1],sil
  4105a6:	jbe    0x410600
  4105a8:	mov    r11,r9
  4105ab:	mov    r10d,0x1
  4105b1:	mov    rdi,r9
  4105b4:	lea    r9,[r11+r10*1]
  4105b8:	sub    rdi,rbx
  4105bb:	cmp    rdx,r9
  4105be:	ja     0x410599
  4105c0:	add    rbx,0x1
  4105c4:	add    rax,0x1
  4105c8:	cmp    rbx,rax
  4105cb:	jb     0x4105d3
  4105cd:	mov    QWORD PTR [r8],rdi
  4105d0:	mov    rax,rbx
  4105d3:	pop    rbx
  4105d4:	pop    rsi
  4105d5:	pop    rdi
  4105d6:	ret    
  4105d7:	nop    WORD PTR [rax+rax*1+0x0]
  4105e0:	je     0x410620
  4105e2:	mov    rax,r11
  4105e5:	mov    esi,0x1
  4105ea:	add    r11,0x1
  4105ee:	mov    r10d,0x1
  4105f4:	jmp    0x410540
  4105f9:	nop    DWORD PTR [rax+0x0]
  410600:	je     0x410630
  410602:	mov    rbx,r11
  410605:	mov    edi,0x1
  41060a:	add    r11,0x1
  41060e:	mov    r10d,0x1
  410614:	jmp    0x410590
  410619:	nop    DWORD PTR [rax+0x0]
  410620:	cmp    r10,rsi
  410623:	je     0x410640
  410625:	add    r10,0x1
  410629:	jmp    0x410540
  41062e:	xchg   ax,ax
  410630:	cmp    r10,rdi
  410633:	je     0x410651
  410635:	add    r10,0x1
  410639:	jmp    0x410590
  41063e:	xchg   ax,ax
  410640:	mov    rsi,r10
  410643:	mov    r11,r9
  410646:	mov    r10d,0x1
  41064c:	jmp    0x410540
  410651:	mov    rdi,r10
  410654:	mov    r11,r9
  410657:	mov    r10d,0x1
  41065d:	jmp    0x410590
  410662:	nop    DWORD PTR [rax+0x0]
  410666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410670:	push   r15
  410672:	push   r14
  410674:	push   r13
  410676:	push   r12
  410678:	push   rbp
  410679:	push   rdi
  41067a:	push   rsi
  41067b:	push   rbx
  41067c:	sub    rsp,0x848
  410683:	cmp    r9,0x2
  410687:	mov    rbp,rcx
  41068a:	mov    r13,rdx
  41068d:	mov    rbx,r8
  410690:	mov    rdi,r9
  410693:	ja     0x4108d5
  410699:	lea    r12,[r9-0x1]
  41069d:	mov    QWORD PTR [rsp+0x38],0x1
  4106a6:	mov    r14d,0x1
  4106ac:	mov    rsi,r12
  4106af:	lea    r10,[rsp+0x40]
  4106b4:	lea    rax,[rsp+0x840]
  4106bc:	nop    DWORD PTR [rax+0x0]
  4106c0:	mov    QWORD PTR [r10],rdi
  4106c3:	add    r10,0x8
  4106c7:	cmp    r10,rax
  4106ca:	jne    0x4106c0
  4106cc:	xor    eax,eax
  4106ce:	test   rdi,rdi
  4106d1:	je     0x4106eb
  4106d3:	movzx  edx,BYTE PTR [rbx+rax*1]
  4106d7:	mov    rcx,rsi
  4106da:	sub    rcx,rax
  4106dd:	add    rax,0x1
  4106e1:	cmp    rax,rdi
  4106e4:	mov    QWORD PTR [rsp+rdx*8+0x40],rcx
  4106e9:	jne    0x4106d3
  4106eb:	lea    rdx,[rbx+r14*1]
  4106ef:	mov    r8,r12
  4106f2:	mov    rcx,rbx
  4106f5:	call   0x41d868
  4106fa:	test   eax,eax
  4106fc:	jne    0x4107fa
  410702:	lea    rcx,[r12-0x1]
  410707:	mov    r11d,0x1
  41070d:	mov    r8,rdi
  410710:	sub    r11,r12
  410713:	xor    eax,eax
  410715:	xor    edx,edx
  410717:	sub    r8,r14
  41071a:	lea    r15,[rbp+rcx*1+0x0]
  41071f:	mov    QWORD PTR [rsp+0x28],r11
  410724:	sub    r13,rdi
  410727:	jmp    0x41074a
  410729:	nop    DWORD PTR [rax+0x0]
  410730:	cmp    r14,r9
  410733:	jbe    0x41073c
  410735:	test   rax,rax
  410738:	cmovne r9,r8
  41073c:	add    rdx,r9
  41073f:	xor    eax,eax
  410741:	cmp    r13,rdx
  410744:	jb     0x4107e6
  41074a:	lea    r10,[rbp+rdx*1+0x0]
  41074f:	movzx  r9d,BYTE PTR [r10+rsi*1]
  410754:	mov    r9,QWORD PTR [rsp+r9*8+0x40]
  410759:	test   r9,r9
  41075c:	jne    0x410730
  41075e:	cmp    rax,r12
  410761:	mov    r9,r12
  410764:	cmovae r9,rax
  410768:	cmp    r9,rsi
  41076b:	jae    0x410794
  41076d:	lea    rdi,[rbp+r9*1+0x0]
  410772:	movzx  edi,BYTE PTR [rdi+rdx*1]
  410776:	cmp    BYTE PTR [rbx+r9*1],dil
  41077a:	je     0x41078b
  41077c:	jmp    0x4107f0
  41077e:	xchg   ax,ax
  410780:	movzx  edi,BYTE PTR [r10+r9*1]
  410785:	cmp    BYTE PTR [rbx+r9*1],dil
  410789:	jne    0x4107f0
  41078b:	add    r9,0x1
  41078f:	cmp    r9,rsi
  410792:	jb     0x410780
  410794:	cmp    r12,rax
  410797:	jbe    0x4108f6
  41079d:	movzx  edi,BYTE PTR [r15+rdx*1]
  4107a2:	cmp    BYTE PTR [rbx+rcx*1],dil
  4107a6:	jne    0x4108f6
  4107ac:	mov    r9,rcx
  4107af:	jmp    0x4107c5
  4107b1:	movzx  r11d,BYTE PTR [r10+r9*1-0x1]
  4107b7:	lea    rdi,[r9-0x1]
  4107bb:	cmp    BYTE PTR [rbx+r9*1-0x1],r11b
  4107c0:	jne    0x4107ca
  4107c2:	mov    r9,rdi
  4107c5:	cmp    r9,rax
  4107c8:	jne    0x4107b1
  4107ca:	add    rax,0x1
  4107ce:	cmp    rax,r9
  4107d1:	ja     0x410895
  4107d7:	add    rdx,r14
  4107da:	mov    rax,r8
  4107dd:	cmp    r13,rdx
  4107e0:	jae    0x41074a
  4107e6:	xor    eax,eax
  4107e8:	jmp    0x410898
  4107ed:	nop    DWORD PTR [rax]
  4107f0:	add    rdx,QWORD PTR [rsp+0x28]
  4107f5:	jmp    0x41073c
  4107fa:	mov    rax,rdi
  4107fd:	lea    rcx,[r12-0x1]
  410802:	mov    r11d,0x1
  410808:	sub    rax,r12
  41080b:	cmp    rax,r12
  41080e:	lea    r14,[rbp+rcx*1+0x0]
  410813:	cmovb  rax,r12
  410817:	sub    r11,r12
  41081a:	sub    r13,rdi
  41081d:	lea    r8,[rax+0x1]
  410821:	xor    eax,eax
  410823:	lea    r10,[rbp+rax*1+0x0]
  410828:	movzx  edx,BYTE PTR [r10+rsi*1]
  41082d:	mov    rdx,QWORD PTR [rsp+rdx*8+0x40]
  410832:	test   rdx,rdx
  410835:	jne    0x4108b0
  410837:	cmp    r12,rsi
  41083a:	jae    0x410864
  41083c:	movzx  edx,BYTE PTR [r10+r12*1]
  410841:	mov    r9,r12
  410844:	cmp    BYTE PTR [rbx+r12*1],dl
  410848:	je     0x41085b
  41084a:	jmp    0x4108c0
  41084c:	nop    DWORD PTR [rax+0x0]
  410850:	movzx  edx,BYTE PTR [r10+r9*1]
  410855:	cmp    BYTE PTR [rbx+r9*1],dl
  410859:	jne    0x4108c0
  41085b:	add    r9,0x1
  41085f:	cmp    r9,rsi
  410862:	jb     0x410850
  410864:	cmp    rcx,0xffffffffffffffff
  410868:	mov    r9,rcx
  41086b:	je     0x410895
  41086d:	movzx  edx,BYTE PTR [r14+rax*1]
  410872:	cmp    BYTE PTR [rbx+rcx*1],dl
  410875:	je     0x41088b
  410877:	jmp    0x4108d0
  410879:	nop    DWORD PTR [rax+0x0]
  410880:	movzx  edx,BYTE PTR [r10+r9*1]
  410885:	cmp    BYTE PTR [rbx+r9*1],dl
  410889:	jne    0x4108d0
  41088b:	sub    r9,0x1
  41088f:	cmp    r9,0xffffffffffffffff
  410893:	jne    0x410880
  410895:	mov    rax,r10
  410898:	add    rsp,0x848
  41089f:	pop    rbx
  4108a0:	pop    rsi
  4108a1:	pop    rdi
  4108a2:	pop    rbp
  4108a3:	pop    r12
  4108a5:	pop    r13
  4108a7:	pop    r14
  4108a9:	pop    r15
  4108ab:	ret    
  4108ac:	nop    DWORD PTR [rax+0x0]
  4108b0:	add    rax,rdx
  4108b3:	cmp    r13,rax
  4108b6:	jae    0x410823
  4108bc:	xor    eax,eax
  4108be:	jmp    0x410898
  4108c0:	add    rax,r11
  4108c3:	add    rax,r9
  4108c6:	jmp    0x4108b3
  4108c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4108d0:	add    rax,r8
  4108d3:	jmp    0x4108b3
  4108d5:	lea    r8,[rsp+0x38]
  4108da:	mov    rdx,r9
  4108dd:	mov    rcx,rbx
  4108e0:	lea    rsi,[rdi-0x1]
  4108e4:	call   0x410520
  4108e9:	mov    r14,QWORD PTR [rsp+0x38]
  4108ee:	mov    r12,rax
  4108f1:	jmp    0x4106af
  4108f6:	mov    r9,r12
  4108f9:	jmp    0x4107ca
  4108fe:	xchg   ax,ax
  410900:	push   r15
  410902:	push   r14
  410904:	push   r13
  410906:	push   r12
  410908:	push   rbp
  410909:	push   rdi
  41090a:	push   rsi
  41090b:	push   rbx
  41090c:	sub    rsp,0x48
  410910:	test   r9,r9
  410913:	mov    rax,rcx
  410916:	je     0x410a80
  41091c:	cmp    r9,rdx
  41091f:	ja     0x410a75
  410925:	cmp    r9,0x1f
  410929:	mov    rsi,r9
  41092c:	mov    rbx,r8
  41092f:	mov    rbp,rdx
  410932:	mov    r12,rcx
  410935:	ja     0x410a91
  41093b:	movzx  edx,BYTE PTR [r8]
  41093f:	mov    r8,rbp
  410942:	call   0x412a80
  410947:	test   rax,rax
  41094a:	mov    rdi,rax
  41094d:	je     0x410ab0
  410953:	cmp    rsi,0x1
  410957:	je     0x410ab0
  41095d:	mov    rcx,r12
  410960:	sub    rcx,rax
  410963:	xor    eax,eax
  410965:	lea    r12,[rcx+rbp*1]
  410969:	cmp    rsi,r12
  41096c:	ja     0x410a80
  410972:	cmp    rsi,0x2
  410976:	ja     0x410b6f
  41097c:	lea    rbp,[rsi-0x1]
  410980:	mov    QWORD PTR [rsp+0x38],0x1
  410989:	mov    r13d,0x1
  41098f:	lea    rdx,[rbx+r13*1]
  410993:	mov    r8,rbp
  410996:	mov    rcx,rbx
  410999:	call   0x41d868
  41099e:	test   eax,eax
  4109a0:	jne    0x410ab5
  4109a6:	lea    r9,[rbp-0x1]
  4109aa:	mov    r15,rsi
  4109ad:	mov    r11d,0x1
  4109b3:	xor    ecx,ecx
  4109b5:	xor    r8d,r8d
  4109b8:	sub    r15,r13
  4109bb:	lea    rax,[rdi+r9*1]
  4109bf:	sub    r11,rbp
  4109c2:	sub    r12,rsi
  4109c5:	mov    QWORD PTR [rsp+0x28],rax
  4109ca:	nop    WORD PTR [rax+rax*1+0x0]
  4109d0:	cmp    r8,rbp
  4109d3:	mov    r10,rbp
  4109d6:	cmovae r10,r8
  4109da:	cmp    rsi,r10
  4109dd:	jbe    0x410a18
  4109df:	lea    rax,[rdi+r10*1]
  4109e3:	movzx  eax,BYTE PTR [rax+rcx*1]
  4109e7:	cmp    BYTE PTR [rbx+r10*1],al
  4109eb:	jne    0x410aa0
  4109f1:	lea    rax,[rdi+rcx*1]
  4109f5:	jmp    0x410a0f
  4109f7:	nop    WORD PTR [rax+rax*1+0x0]
  410a00:	movzx  edx,BYTE PTR [rax+r10*1]
  410a05:	cmp    BYTE PTR [rbx+r10*1],dl
  410a09:	jne    0x410aa0
  410a0f:	add    r10,0x1
  410a13:	cmp    rsi,r10
  410a16:	ja     0x410a00
  410a18:	cmp    rbp,r8
  410a1b:	jbe    0x410b67
  410a21:	mov    rax,QWORD PTR [rsp+0x28]
  410a26:	movzx  eax,BYTE PTR [rax+rcx*1]
  410a2a:	cmp    BYTE PTR [rbx+r9*1],al
  410a2e:	jne    0x410b67
  410a34:	mov    rdx,r9
  410a37:	lea    r10,[rdi+rcx*1]
  410a3b:	jmp    0x410a54
  410a3d:	nop    DWORD PTR [rax]
  410a40:	movzx  r14d,BYTE PTR [rdx+r10*1-0x1]
  410a46:	lea    rax,[rdx-0x1]
  410a4a:	cmp    BYTE PTR [rbx+rdx*1-0x1],r14b
  410a4f:	jne    0x410a59
  410a51:	mov    rdx,rax
  410a54:	cmp    rdx,r8
  410a57:	jne    0x410a40
  410a59:	add    r8,0x1
  410a5d:	cmp    r8,rdx
  410a60:	ja     0x410b8c
  410a66:	add    rcx,r13
  410a69:	mov    r8,r15
  410a6c:	cmp    r12,rcx
  410a6f:	jae    0x4109d0
  410a75:	xor    eax,eax
  410a77:	nop    WORD PTR [rax+rax*1+0x0]
  410a80:	add    rsp,0x48
  410a84:	pop    rbx
  410a85:	pop    rsi
  410a86:	pop    rdi
  410a87:	pop    rbp
  410a88:	pop    r12
  410a8a:	pop    r13
  410a8c:	pop    r14
  410a8e:	pop    r15
  410a90:	ret    
  410a91:	call   0x410670
  410a96:	jmp    0x410a80
  410a98:	nop    DWORD PTR [rax+rax*1+0x0]
  410aa0:	add    rcx,r11
  410aa3:	xor    r8d,r8d
  410aa6:	add    rcx,r10
  410aa9:	jmp    0x410a6c
  410aab:	nop    DWORD PTR [rax+rax*1+0x0]
  410ab0:	mov    rax,rdi
  410ab3:	jmp    0x410a80
  410ab5:	mov    rax,rsi
  410ab8:	lea    r8,[rbp-0x1]
  410abc:	mov    r13d,0x1
  410ac2:	sub    rax,rbp
  410ac5:	lea    r9,[rdi+rbp*1]
  410ac9:	cmp    rax,rbp
  410acc:	lea    r14,[rdi+r8*1]
  410ad0:	cmovb  rax,rbp
  410ad4:	sub    r13,rbp
  410ad7:	sub    r12,rsi
  410ada:	lea    r11,[rax+0x1]
  410ade:	xor    eax,eax
  410ae0:	mov    QWORD PTR [rsp+0x38],r11
  410ae5:	cmp    rsi,rbp
  410ae8:	jbe    0x410b14
  410aea:	movzx  ecx,BYTE PTR [r9+rax*1]
  410aef:	mov    r10,rbp
  410af2:	lea    rdx,[rdi+rax*1]
  410af6:	cmp    BYTE PTR [rbx+rbp*1],cl
  410af9:	je     0x410b0b
  410afb:	jmp    0x410b50
  410afd:	nop    DWORD PTR [rax]
  410b00:	movzx  ecx,BYTE PTR [rdx+r10*1]
  410b05:	cmp    BYTE PTR [rbx+r10*1],cl
  410b09:	jne    0x410b50
  410b0b:	add    r10,0x1
  410b0f:	cmp    rsi,r10
  410b12:	ja     0x410b00
  410b14:	cmp    r8,0xffffffffffffffff
  410b18:	mov    rdx,r8
  410b1b:	je     0x410b95
  410b1d:	movzx  ecx,BYTE PTR [r14+rax*1]
  410b22:	cmp    BYTE PTR [rbx+r8*1],cl
  410b26:	jne    0x410b62
  410b28:	lea    rcx,[rdi+rax*1]
  410b2c:	jmp    0x410b3b
  410b2e:	xchg   ax,ax
  410b30:	movzx  r15d,BYTE PTR [rcx+rdx*1]
  410b35:	cmp    BYTE PTR [rbx+rdx*1],r15b
  410b39:	jne    0x410b62
  410b3b:	sub    rdx,0x1
  410b3f:	cmp    rdx,0xffffffffffffffff
  410b43:	jne    0x410b30
  410b45:	mov    rax,rcx
  410b48:	jmp    0x410a80
  410b4d:	nop    DWORD PTR [rax]
  410b50:	add    rax,r13
  410b53:	add    rax,r10
  410b56:	cmp    r12,rax
  410b59:	jae    0x410ae5
  410b5b:	xor    eax,eax
  410b5d:	jmp    0x410a80
  410b62:	add    rax,r11
  410b65:	jmp    0x410b56
  410b67:	mov    rdx,rbp
  410b6a:	jmp    0x410a59
  410b6f:	lea    r8,[rsp+0x38]
  410b74:	mov    rdx,rsi
  410b77:	mov    rcx,rbx
  410b7a:	call   0x410520
  410b7f:	mov    r13,QWORD PTR [rsp+0x38]
  410b84:	mov    rbp,rax
  410b87:	jmp    0x41098f
  410b8c:	lea    rax,[rdi+rcx*1]
  410b90:	jmp    0x410a80
  410b95:	lea    rcx,[rdi+rax*1]
  410b99:	jmp    0x410b45
  410b9b:	nop
  410b9c:	nop
  410b9d:	nop
  410b9e:	nop
  410b9f:	nop
  410ba0:	ret    
  410ba1:	nop    DWORD PTR [rax+rax*1+0x0]
  410ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410bb0:	sub    rsp,0x28
  410bb4:	mov    eax,DWORD PTR [rip+0x1ba06]        # 0x42c5c0
  410bba:	test   eax,eax
  410bbc:	jne    0x410bd5
  410bbe:	lea    rcx,[rip+0xffffffffffffffdb]        # 0x410ba0
  410bc5:	call   QWORD PTR [rip+0xf6dd]        # 0x4202a8
  410bcb:	mov    DWORD PTR [rip+0x1b9eb],0x1        # 0x42c5c0
  410bd5:	add    rsp,0x28
  410bd9:	ret    
  410bda:	nop
  410bdb:	nop
  410bdc:	nop
  410bdd:	nop
  410bde:	nop
  410bdf:	nop
  410be0:	push   rbx
  410be1:	sub    rsp,0x20
  410be5:	test   rcx,rcx
  410be8:	je     0x410c00
  410bea:	call   0x41d830
  410bef:	mov    rbx,rax
  410bf2:	test   rbx,rbx
  410bf5:	je     0x410c10
  410bf7:	mov    rax,rbx
  410bfa:	add    rsp,0x20
  410bfe:	pop    rbx
  410bff:	ret    
  410c00:	mov    rcx,rdx
  410c03:	call   0x41d870
  410c08:	mov    rbx,rax
  410c0b:	test   rbx,rbx
  410c0e:	jne    0x410bf7
  410c10:	call   QWORD PTR [rip+0x1edc6]        # 0x42f9dc
  410c16:	mov    DWORD PTR [rax],0xc
  410c1c:	mov    rax,rbx
  410c1f:	add    rsp,0x20
  410c23:	pop    rbx
  410c24:	ret    
  410c25:	nop
  410c26:	nop
  410c27:	nop
  410c28:	nop
  410c29:	nop
  410c2a:	nop
  410c2b:	nop
  410c2c:	nop
  410c2d:	nop
  410c2e:	nop
  410c2f:	nop
  410c30:	push   rbp
  410c31:	push   rdi
  410c32:	push   rsi
  410c33:	push   rbx
  410c34:	sub    rsp,0x38
  410c38:	mov    QWORD PTR [rsp+0x78],r9
  410c3d:	mov    QWORD PTR [rsp+0x20],rdx
  410c42:	lea    r9,[rsp+0x78]
  410c47:	mov    rbp,rdx
  410c4a:	lea    rdx,[rsp+0x20]
  410c4f:	mov    rdi,rcx
  410c52:	mov    QWORD PTR [rsp+0x28],r9
  410c57:	call   0x410cf0
  410c5c:	test   rax,rax
  410c5f:	mov    rsi,rax
  410c62:	mov    rbx,QWORD PTR [rsp+0x20]
  410c67:	je     0x410cc5
  410c69:	cmp    rax,rdi
  410c6c:	je     0x410c7b
  410c6e:	test   rbp,rbp
  410c71:	jne    0x410c90
  410c73:	mov    rcx,rsi
  410c76:	call   0x41d8a8
  410c7b:	cmp    rbx,0x7fffffff
  410c82:	ja     0x410cb2
  410c84:	mov    eax,ebx
  410c86:	add    rsp,0x38
  410c8a:	pop    rbx
  410c8b:	pop    rsi
  410c8c:	pop    rdi
  410c8d:	pop    rbp
  410c8e:	ret    
  410c8f:	nop
  410c90:	lea    rax,[rbp-0x1]
  410c94:	cmp    rbp,rbx
  410c97:	mov    rdx,rsi
  410c9a:	mov    rcx,rdi
  410c9d:	cmova  rax,rbx
  410ca1:	mov    rbp,rax
  410ca4:	mov    r8,rax
  410ca7:	call   0x41d860
  410cac:	mov    BYTE PTR [rdi+rbp*1],0x0
  410cb0:	jmp    0x410c73
  410cb2:	call   QWORD PTR [rip+0x1ed24]        # 0x42f9dc
  410cb8:	mov    DWORD PTR [rax],0x84
  410cbe:	mov    eax,0xffffffff
  410cc3:	jmp    0x410c86
  410cc5:	mov    eax,0xffffffff
  410cca:	jmp    0x410c86
  410ccc:	nop
  410ccd:	nop
  410cce:	nop
  410ccf:	nop
  410cd0:	sub    rsp,0x38
  410cd4:	mov    QWORD PTR [rsp+0x58],r9
  410cd9:	lea    r9,[rsp+0x58]
  410cde:	mov    QWORD PTR [rsp+0x28],r9
  410ce3:	call   0x418da0
  410ce8:	add    rsp,0x38
  410cec:	ret    
  410ced:	nop    DWORD PTR [rax]
  410cf0:	push   rbp
  410cf1:	push   r15
  410cf3:	push   r14
  410cf5:	push   r13
  410cf7:	push   r12
  410cf9:	push   rdi
  410cfa:	push   rsi
  410cfb:	push   rbx
  410cfc:	sub    rsp,0x518
  410d03:	lea    rbp,[rsp+0x80]
  410d0b:	lea    rax,[rbp+0x110]
  410d12:	lea    rdi,[rbp+0x200]
  410d19:	mov    rbx,r8
  410d1c:	mov    QWORD PTR [rbp+0x4e0],rcx
  410d23:	mov    QWORD PTR [rbp+0x4e8],rdx
  410d2a:	mov    rcx,rbx
  410d2d:	mov    rdx,rdi
  410d30:	mov    r8,rax
  410d33:	mov    QWORD PTR [rbp+0x60],rdi
  410d37:	mov    rsi,r9
  410d3a:	mov    QWORD PTR [rbp+0x58],rax
  410d3e:	mov    rdi,rax
  410d41:	call   0x412c20
  410d46:	test   eax,eax
  410d48:	js     0x411d90
  410d4e:	mov    rdx,rdi
  410d51:	mov    rcx,rsi
  410d54:	call   0x412b30
  410d59:	test   eax,eax
  410d5b:	js     0x4120d0
  410d61:	mov    rax,QWORD PTR [rbp+0x210]
  410d68:	mov    rdx,0xffffffffffffffff
  410d6f:	add    rax,0x7
  410d73:	cmp    rax,0x7
  410d77:	cmovb  rax,rdx
  410d7b:	add    rax,QWORD PTR [rbp+0x218]
  410d82:	jb     0x4111c0
  410d88:	lea    rcx,[rax+0x6]
  410d8c:	cmp    rax,rcx
  410d8f:	ja     0x4111c0
  410d95:	cmp    rcx,0xf9f
  410d9c:	ja     0x411b00
  410da2:	add    rax,0x24
  410da6:	and    rax,0xfffffffffffffff0
  410daa:	call   0x4182b0
  410daf:	sub    rsp,rax
  410db2:	cmp    QWORD PTR [rbp+0x4e0],0x0
  410dba:	mov    QWORD PTR [rbp+0x50],0x0
  410dc2:	lea    rax,[rsp+0x40]
  410dc7:	mov    QWORD PTR [rbp+0x90],rax
  410dce:	je     0x411b38
  410dd4:	mov    rax,QWORD PTR [rbp+0x4e8]
  410ddb:	mov    r12,QWORD PTR [rax]
  410dde:	mov    rax,QWORD PTR [rbp+0x4e0]
  410de5:	mov    r13,QWORD PTR [rbp+0x208]
  410dec:	mov    rdi,rbx
  410def:	xor    r15d,r15d
  410df2:	mov    QWORD PTR [rbp+0x80],0x0
  410dfd:	mov    QWORD PTR [rbp+0x98],rax
  410e04:	lea    rax,[rbp+0xbc]
  410e0b:	mov    rsi,QWORD PTR [r13+0x0]
  410e0f:	mov    QWORD PTR [rbp+0x70],rax
  410e13:	lea    rax,[rbp+0xa0]
  410e1a:	cmp    rsi,rdi
  410e1d:	mov    QWORD PTR [rbp+0x40],rax
  410e21:	lea    rax,[rbp+0xd0]
  410e28:	mov    QWORD PTR [rbp+0x48],rax
  410e2c:	lea    rax,[rbp+0xb4]
  410e33:	mov    QWORD PTR [rbp+0x38],rax
  410e37:	je     0x411303
  410e3d:	sub    rsi,rdi
  410e40:	mov    rax,0xffffffffffffffff
  410e47:	mov    r14,rsi
  410e4a:	add    r14,r15
  410e4d:	cmovb  r14,rax
  410e51:	cmp    r12,r14
  410e54:	jae    0x411312
  410e5a:	test   r12,r12
  410e5d:	je     0x411220
  410e63:	js     0x411c30
  410e69:	add    r12,r12
  410e6c:	cmp    r12,r14
  410e6f:	cmovb  r12,r14
  410e73:	cmp    r12,0xffffffffffffffff
  410e77:	je     0x411c30
  410e7d:	mov    rax,QWORD PTR [rbp+0x98]
  410e84:	cmp    rax,QWORD PTR [rbp+0x4e0]
  410e8b:	sete   r8b
  410e8f:	test   rax,rax
  410e92:	mov    BYTE PTR [rbp+0x88],r8b
  410e99:	je     0x411230
  410e9f:	test   r8b,r8b
  410ea2:	jne    0x411230
  410ea8:	mov    rcx,QWORD PTR [rbp+0x98]
  410eaf:	mov    rdx,r12
  410eb2:	call   0x410be0
  410eb7:	movzx  r8d,BYTE PTR [rbp+0x88]
  410ebf:	mov    rbx,rax
  410ec2:	test   rbx,rbx
  410ec5:	je     0x411c30
  410ecb:	test   r15,r15
  410ece:	je     0x410ee7
  410ed0:	test   r8b,r8b
  410ed3:	je     0x410ee7
  410ed5:	mov    rdx,QWORD PTR [rbp+0x98]
  410edc:	mov    r8,r15
  410edf:	mov    rcx,rbx
  410ee2:	call   0x41d860
  410ee7:	lea    rcx,[rbx+r15*1]
  410eeb:	mov    r8,rsi
  410eee:	mov    rdx,rdi
  410ef1:	call   0x41d860
  410ef6:	mov    rax,QWORD PTR [rbp+0x80]
  410efd:	cmp    QWORD PTR [rbp+0x200],rax
  410f04:	je     0x412115
  410f0a:	movzx  edx,BYTE PTR [r13+0x48]
  410f0f:	cmp    dl,0x25
  410f12:	je     0x411250
  410f18:	mov    rax,QWORD PTR [r13+0x50]
  410f1c:	cmp    rax,0xffffffffffffffff
  410f20:	je     0x411a40
  410f26:	cmp    dl,0x6e
  410f29:	je     0x411320
  410f2f:	shl    rax,0x5
  410f33:	cmp    dl,0x73
  410f36:	mov    r10,QWORD PTR [rbp+0x118]
  410f3d:	je     0x411501
  410f43:	mov    eax,DWORD PTR [r10+rax*1]
  410f47:	mov    DWORD PTR [rbp+0x88],eax
  410f4d:	mov    rcx,QWORD PTR [r13+0x18]
  410f51:	mov    r9,QWORD PTR [r13+0x20]
  410f55:	mov    r8d,DWORD PTR [r13+0x10]
  410f59:	cmp    rcx,r9
  410f5c:	je     0x411d60
  410f62:	mov    rax,QWORD PTR [r13+0x28]
  410f66:	cmp    rax,0xffffffffffffffff
  410f6a:	je     0x411c40
  410f70:	shl    rax,0x5
  410f74:	add    rax,r10
  410f77:	cmp    DWORD PTR [rax],0x5
  410f7a:	jne    0x411a40
  410f80:	movsxd r15,DWORD PTR [rax+0x10]
  410f84:	test   r15d,r15d
  410f87:	js     0x411d50
  410f8d:	mov    rdx,QWORD PTR [r13+0x30]
  410f91:	mov    rcx,QWORD PTR [r13+0x38]
  410f95:	cmp    rdx,rcx
  410f98:	je     0x4114f0
  410f9e:	mov    rax,QWORD PTR [r13+0x40]
  410fa2:	cmp    rax,0xffffffffffffffff
  410fa6:	je     0x411c90
  410fac:	shl    rax,0x5
  410fb0:	add    r10,rax
  410fb3:	cmp    DWORD PTR [r10],0x5
  410fb7:	jne    0x411a40
  410fbd:	movsxd rsi,DWORD PTR [r10+0x10]
  410fc1:	test   esi,esi
  410fc3:	js     0x4114f0
  410fc9:	mov    DWORD PTR [rbp+0x28],0x1
  410fd0:	mov    rax,QWORD PTR [rbp+0x90]
  410fd7:	test   r8b,0x1
  410fdb:	mov    BYTE PTR [rax],0x25
  410fde:	lea    rdi,[rax+0x1]
  410fe2:	je     0x410ff3
  410fe4:	mov    rax,QWORD PTR [rbp+0x90]
  410feb:	lea    rdi,[rax+0x2]
  410fef:	mov    BYTE PTR [rax+0x1],0x27
  410ff3:	test   r8b,0x2
  410ff7:	je     0x411000
  410ff9:	mov    BYTE PTR [rdi],0x2d
  410ffc:	add    rdi,0x1
  411000:	test   r8b,0x4
  411004:	je     0x41100d
  411006:	mov    BYTE PTR [rdi],0x2b
  411009:	add    rdi,0x1
  41100d:	test   r8b,0x8
  411011:	je     0x41101a
  411013:	mov    BYTE PTR [rdi],0x20
  411016:	add    rdi,0x1
  41101a:	test   r8b,0x10
  41101e:	je     0x411027
  411020:	mov    BYTE PTR [rdi],0x23
  411023:	add    rdi,0x1
  411027:	and    r8d,0x20
  41102b:	je     0x411034
  41102d:	mov    BYTE PTR [rdi],0x30
  411030:	add    rdi,0x1
  411034:	mov    rdx,QWORD PTR [r13+0x18]
  411038:	mov    r8,QWORD PTR [r13+0x20]
  41103c:	cmp    rdx,r8
  41103f:	je     0x411063
  411041:	mov    r9,r8
  411044:	mov    rcx,rdi
  411047:	sub    r9,rdx
  41104a:	mov    r8,r9
  41104d:	mov    QWORD PTR [rbp+0x98],r9
  411054:	call   0x41d860
  411059:	mov    r9,QWORD PTR [rbp+0x98]
  411060:	add    rdi,r9
  411063:	mov    rdx,QWORD PTR [r13+0x30]
  411067:	mov    r8,QWORD PTR [r13+0x38]
  41106b:	cmp    rdx,r8
  41106e:	je     0x411092
  411070:	mov    r9,r8
  411073:	mov    rcx,rdi
  411076:	sub    r9,rdx
  411079:	mov    r8,r9
  41107c:	mov    QWORD PTR [rbp+0x98],r9
  411083:	call   0x41d860
  411088:	mov    r9,QWORD PTR [rbp+0x98]
  41108f:	add    rdi,r9
  411092:	mov    eax,DWORD PTR [rbp+0x88]
  411098:	lea    ecx,[rax-0x7]
  41109b:	cmp    ecx,0x9
  41109e:	ja     0x4110c3
  4110a0:	mov    eax,0x1
  4110a5:	shl    rax,cl
  4110a8:	test   eax,0x283
  4110ad:	jne    0x4116a4
  4110b3:	test   al,0x20
  4110b5:	jne    0x411da0
  4110bb:	test   al,0xc
  4110bd:	jne    0x411e10
  4110c3:	movzx  eax,BYTE PTR [r13+0x48]
  4110c8:	mov    BYTE PTR [rdi+0x1],0x0
  4110cc:	mov    BYTE PTR [rdi],al
  4110ce:	mov    rax,QWORD PTR [r13+0x28]
  4110d2:	cmp    rax,0xffffffffffffffff
  4110d6:	je     0x411ac0
  4110dc:	shl    rax,0x5
  4110e0:	add    rax,QWORD PTR [rbp+0x118]
  4110e7:	cmp    DWORD PTR [rax],0x5
  4110ea:	jne    0x411a40
  4110f0:	mov    eax,DWORD PTR [rax+0x10]
  4110f3:	mov    edx,0x1
  4110f8:	mov    DWORD PTR [rbp+0xc0],eax
  4110fe:	mov    rax,QWORD PTR [r13+0x40]
  411102:	cmp    rax,0xffffffffffffffff
  411106:	je     0x411ab0
  41110c:	shl    rax,0x5
  411110:	add    rax,QWORD PTR [rbp+0x118]
  411117:	cmp    DWORD PTR [rax],0x5
  41111a:	jne    0x411a40
  411120:	mov    eax,DWORD PTR [rax+0x10]
  411123:	lea    ecx,[rdx+0x1]
  411126:	mov    DWORD PTR [rbp+0x78],ecx
  411129:	mov    DWORD PTR [rbp+rdx*4+0xc0],eax
  411130:	lea    rax,[r14+0x2]
  411134:	mov    rdx,0xffffffffffffffff
  41113b:	cmp    r14,rax
  41113e:	cmovbe rdx,rax
  411142:	cmp    r12,rdx
  411145:	jae    0x411aa0
  41114b:	test   r12,r12
  41114e:	je     0x411350
  411154:	js     0x411171
  411156:	add    r12,r12
  411159:	cmp    r14,rax
  41115c:	ja     0x411171
  41115e:	cmp    r12,rax
  411161:	jae    0x411368
  411167:	cmp    rax,0xffffffffffffffff
  41116b:	jne    0x412a75
  411171:	mov    rax,QWORD PTR [rip+0x1e864]        # 0x42f9dc
  411178:	mov    r15,rbx
  41117b:	mov    QWORD PTR [rbp+0x68],rax
  41117f:	mov    QWORD PTR [rbp+0x98],r15
  411186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411190:	mov    rax,QWORD PTR [rbp+0x98]
  411197:	test   rax,rax
  41119a:	je     0x4111a9
  41119c:	cmp    rax,QWORD PTR [rbp+0x4e0]
  4111a3:	jne    0x411e70
  4111a9:	mov    rax,QWORD PTR [rbp+0x50]
  4111ad:	test   rax,rax
  4111b0:	je     0x4111cb
  4111b2:	mov    rcx,rax
  4111b5:	call   0x41d8a8
  4111ba:	jmp    0x4111cb
  4111bc:	nop    DWORD PTR [rax+0x0]
  4111c0:	mov    rax,QWORD PTR [rip+0x1e815]        # 0x42f9dc
  4111c7:	mov    QWORD PTR [rbp+0x68],rax
  4111cb:	mov    rax,QWORD PTR [rbp+0x60]
  4111cf:	mov    rcx,QWORD PTR [rbp+0x208]
  4111d6:	add    rax,0x20
  4111da:	cmp    rcx,rax
  4111dd:	je     0x4111e4
  4111df:	call   0x41d8a8
  4111e4:	mov    rax,QWORD PTR [rbp+0x58]
  4111e8:	mov    rcx,QWORD PTR [rbp+0x118]
  4111ef:	add    rax,0x10
  4111f3:	cmp    rcx,rax
  4111f6:	je     0x4111fd
  4111f8:	call   0x41d8a8
  4111fd:	mov    rax,QWORD PTR [rbp+0x68]
  411201:	call   rax
  411203:	mov    DWORD PTR [rax],0xc
  411209:	xor    eax,eax
  41120b:	lea    rsp,[rbp+0x498]
  411212:	pop    rbx
  411213:	pop    rsi
  411214:	pop    rdi
  411215:	pop    r12
  411217:	pop    r13
  411219:	pop    r14
  41121b:	pop    r15
  41121d:	pop    rbp
  41121e:	ret    
  41121f:	nop
  411220:	mov    r12d,0xc
  411226:	jmp    0x410e6c
  41122b:	nop    DWORD PTR [rax+rax*1+0x0]
  411230:	mov    rcx,r12
  411233:	call   0x4104e0
  411238:	movzx  r8d,BYTE PTR [rbp+0x88]
  411240:	mov    rbx,rax
  411243:	jmp    0x410ec2
  411248:	nop    DWORD PTR [rax+rax*1+0x0]
  411250:	cmp    QWORD PTR [r13+0x50],0xffffffffffffffff
  411255:	jne    0x411a40
  41125b:	lea    r15,[r14+0x1]
  41125f:	mov    rax,0xffffffffffffffff
  411266:	cmp    r14,r15
  411269:	cmova  r15,rax
  41126d:	cmp    r12,r15
  411270:	jae    0x4112da
  411272:	test   r12,r12
  411275:	je     0x411d70
  41127b:	js     0x411c20
  411281:	add    r12,r12
  411284:	cmp    r12,r15
  411287:	cmovb  r12,r15
  41128b:	cmp    r12,0xffffffffffffffff
  41128f:	je     0x411c20
  411295:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  41129c:	sete   sil
  4112a0:	test   rbx,rbx
  4112a3:	je     0x411d80
  4112a9:	test   sil,sil
  4112ac:	jne    0x411d80
  4112b2:	mov    rdx,r12
  4112b5:	mov    rcx,rbx
  4112b8:	call   0x410be0
  4112bd:	mov    r9,rax
  4112c0:	test   r9,r9
  4112c3:	je     0x411c20
  4112c9:	test   r14,r14
  4112cc:	je     0x4112d7
  4112ce:	test   sil,sil
  4112d1:	jne    0x411db0
  4112d7:	mov    rbx,r9
  4112da:	mov    BYTE PTR [rbx+r14*1],0x25
  4112df:	mov    QWORD PTR [rbp+0x98],rbx
  4112e6:	mov    rdi,QWORD PTR [r13+0x8]
  4112ea:	add    r13,0x58
  4112ee:	mov    rsi,QWORD PTR [r13+0x0]
  4112f2:	add    QWORD PTR [rbp+0x80],0x1
  4112fa:	cmp    rsi,rdi
  4112fd:	jne    0x410e3d
  411303:	mov    r14,r15
  411306:	mov    rbx,QWORD PTR [rbp+0x98]
  41130d:	jmp    0x410ef6
  411312:	mov    rbx,QWORD PTR [rbp+0x98]
  411319:	jmp    0x410ee7
  41131e:	xchg   ax,ax
  411320:	shl    rax,0x5
  411324:	add    rax,QWORD PTR [rbp+0x118]
  41132b:	mov    edi,DWORD PTR [rax]
  41132d:	lea    edx,[rdi-0x12]
  411330:	cmp    edx,0x4
  411333:	ja     0x411a40
  411339:	lea    rcx,[rip+0x15590]        # 0x4268d0
  411340:	mov    rax,QWORD PTR [rax+0x10]
  411344:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  411348:	add    rcx,rdx
  41134b:	jmp    rcx
  41134d:	nop    DWORD PTR [rax]
  411350:	cmp    r14,rax
  411353:	ja     0x411171
  411359:	mov    r12d,0xc
  41135f:	cmp    r12,rax
  411362:	jb     0x411167
  411368:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  41136f:	sete   r8b
  411373:	test   rbx,rbx
  411376:	mov    BYTE PTR [rbp+0x68],r8b
  41137a:	je     0x411a80
  411380:	test   r8b,r8b
  411383:	jne    0x411a80
  411389:	mov    rdx,r12
  41138c:	mov    rcx,rbx
  41138f:	call   0x410be0
  411394:	movzx  r8d,BYTE PTR [rbp+0x68]
  411399:	mov    QWORD PTR [rbp+0x98],rax
  4113a0:	cmp    QWORD PTR [rbp+0x98],0x0
  4113a8:	je     0x411171
  4113ae:	test   r14,r14
  4113b1:	je     0x4113ca
  4113b3:	test   r8b,r8b
  4113b6:	je     0x4113ca
  4113b8:	mov    rcx,QWORD PTR [rbp+0x98]
  4113bf:	mov    r8,r14
  4113c2:	mov    rdx,rbx
  4113c5:	call   0x41d860
  4113ca:	mov    rax,QWORD PTR [rbp+0x98]
  4113d1:	mov    BYTE PTR [rax+r14*1],0x0
  4113d6:	mov    rax,QWORD PTR [rip+0x1e5ff]        # 0x42f9dc
  4113dd:	mov    QWORD PTR [rbp+0x68],rax
  4113e1:	call   rax
  4113e3:	mov    ebx,DWORD PTR [rbp+0x88]
  4113e9:	mov    eax,DWORD PTR [rax]
  4113eb:	mov    QWORD PTR [rbp-0x10],rsi
  4113ef:	lea    edx,[rbx-0x9]
  4113f2:	mov    DWORD PTR [rbp+0x30],eax
  4113f5:	cmp    edx,0x2
  4113f8:	sbb    rax,rax
  4113fb:	and    eax,0xa
  4113fe:	add    rax,0xa
  411402:	cmp    rsi,rax
  411405:	cmovae rax,rsi
  411409:	mov    QWORD PTR [rbp-0x38],rax
  41140d:	add    rax,rax
  411410:	mov    QWORD PTR [rbp+0x20],rax
  411414:	add    rax,0x1
  411418:	cmp    edx,0x2
  41141b:	mov    QWORD PTR [rbp+0x18],rax
  41141f:	sbb    rax,rax
  411422:	and    eax,0xb
  411425:	add    rax,0xb
  411429:	cmp    rsi,rax
  41142c:	cmovae rax,rsi
  411430:	mov    QWORD PTR [rbp-0x18],rax
  411434:	add    rax,0x1
  411438:	cmp    edx,0x2
  41143b:	mov    QWORD PTR [rbp+0x10],rax
  41143f:	sbb    rax,rax
  411442:	mov    edx,0x2693
  411447:	and    eax,0x8
  41144a:	add    rax,0x9
  41144e:	cmp    rsi,rax
  411451:	cmovae rax,rsi
  411455:	mov    QWORD PTR [rbp-0x20],rax
  411459:	add    rax,0x2
  41145d:	cmp    ebx,0xc
  411460:	mov    QWORD PTR [rbp+0x8],rax
  411464:	mov    eax,0x273
  411469:	cmove  rax,rdx
  41146d:	mov    QWORD PTR [rbp-0x28],rax
  411471:	add    rax,rsi
  411474:	cmp    ebx,0xc
  411477:	mov    QWORD PTR [rbp+0x0],rax
  41147b:	sete   al
  41147e:	movzx  eax,al
  411481:	lea    rax,[rax+rax*1+0xd]
  411486:	cmp    rsi,rax
  411489:	cmovae rax,rsi
  41148d:	mov    rsi,r12
  411490:	mov    QWORD PTR [rbp-0x30],rax
  411494:	add    rax,0xc
  411498:	mov    QWORD PTR [rbp-0x8],rax
  41149c:	mov    rax,rsi
  41149f:	mov    ebx,0x7fffffff
  4114a4:	mov    DWORD PTR [rbp+0xbc],0xffffffff
  4114ae:	sub    rax,r14
  4114b1:	cmp    rax,0x7fffffff
  4114b7:	cmovbe rbx,rax
  4114bb:	call   QWORD PTR [rip+0x1e51b]        # 0x42f9dc
  4114c1:	mov    DWORD PTR [rax],0x0
  4114c7:	mov    eax,DWORD PTR [rbp+0x88]
  4114cd:	cmp    eax,0x11
  4114d0:	ja     0x411a40
  4114d6:	mov    edx,eax
  4114d8:	lea    rax,[rip+0x15405]        # 0x4268e4
  4114df:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4114e3:	add    rax,rdx
  4114e6:	jmp    rax
  4114e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4114f0:	mov    esi,0x6
  4114f5:	mov    DWORD PTR [rbp+0x28],0x0
  4114fc:	jmp    0x410fd0
  411501:	add    rax,r10
  411504:	mov    edi,DWORD PTR [rax]
  411506:	cmp    edi,0x10
  411509:	mov    DWORD PTR [rbp+0x88],edi
  41150f:	jne    0x410f4d
  411515:	mov    r8,QWORD PTR [r13+0x18]
  411519:	mov    r9,QWORD PTR [r13+0x20]
  41151d:	cmp    r8,r9
  411520:	je     0x411b5c
  411526:	mov    rdx,QWORD PTR [r13+0x28]
  41152a:	cmp    rdx,0xffffffffffffffff
  41152e:	je     0x4127ad
  411534:	shl    rdx,0x5
  411538:	add    rdx,r10
  41153b:	cmp    DWORD PTR [rdx],0x5
  41153e:	jne    0x411a40
  411544:	movsxd rdx,DWORD PTR [rdx+0x10]
  411548:	mov    rcx,rdx
  41154b:	shr    rcx,0x3f
  41154f:	mov    r8,rcx
  411552:	neg    r8
  411555:	xor    rdx,r8
  411558:	lea    rdi,[rdx+rcx*1]
  41155c:	mov    QWORD PTR [rbp+0x68],rdi
  411560:	mov    r8,QWORD PTR [r13+0x30]
  411564:	mov    r11,QWORD PTR [r13+0x38]
  411568:	mov    DWORD PTR [rbp+0x88],0x1
  411572:	cmp    r8,r11
  411575:	je     0x412a6c
  41157b:	mov    rdx,QWORD PTR [r13+0x40]
  41157f:	cmp    rdx,0xffffffffffffffff
  411583:	je     0x41274e
  411589:	shl    rdx,0x5
  41158d:	add    r10,rdx
  411590:	cmp    DWORD PTR [r10],0x5
  411594:	jne    0x411a40
  41159a:	mov    r9d,DWORD PTR [r10+0x10]
  41159e:	test   r9d,r9d
  4115a1:	movsxd r15,r9d
  4115a4:	js     0x4126dd
  4115aa:	test   r15,r15
  4115ad:	mov    rsi,QWORD PTR [rax+0x10]
  4115b1:	mov    DWORD PTR [rbp+0xc0],0x0
  4115bb:	je     0x412a40
  4115c1:	movzx  edx,WORD PTR [rsi]
  4115c4:	test   dx,dx
  4115c7:	je     0x412a40
  4115cd:	lea    rax,[rbp+0xc0]
  4115d4:	mov    rcx,rsi
  4115d7:	mov    QWORD PTR [rbp+0x98],r13
  4115de:	mov    QWORD PTR [rbp+0x78],r12
  4115e2:	mov    QWORD PTR [rbp+0x30],rsi
  4115e6:	xor    edi,edi
  4115e8:	mov    rsi,r15
  4115eb:	mov    r12,rcx
  4115ee:	mov    r13,rax
  4115f1:	mov    r15,QWORD PTR [rbp+0x48]
  4115f5:	jmp    0x411629
  4115f7:	nop    WORD PTR [rax+rax*1+0x0]
  411600:	cdqe   
  411602:	cmp    rax,rsi
  411605:	ja     0x4124d0
  41160b:	add    r12,0x2
  41160f:	add    rdi,rax
  411612:	sub    rsi,rax
  411615:	je     0x4124d0
  41161b:	movzx  edx,WORD PTR [r12]
  411620:	test   dx,dx
  411623:	je     0x4124d0
  411629:	mov    r8,r13
  41162c:	mov    rcx,r15
  41162f:	call   0x418b50
  411634:	test   eax,eax
  411636:	jns    0x411600
  411638:	test   rbx,rbx
  41163b:	je     0x41164e
  41163d:	cmp    QWORD PTR [rbp+0x4e0],rbx
  411644:	je     0x41164e
  411646:	mov    rcx,rbx
  411649:	call   0x41d8a8
  41164e:	mov    rax,QWORD PTR [rbp+0x50]
  411652:	test   rax,rax
  411655:	je     0x41165f
  411657:	mov    rcx,rax
  41165a:	call   0x41d8a8
  41165f:	mov    rax,QWORD PTR [rbp+0x60]
  411663:	mov    rcx,QWORD PTR [rbp+0x208]
  41166a:	add    rax,0x20
  41166e:	cmp    rcx,rax
  411671:	je     0x411678
  411673:	call   0x41d8a8
  411678:	mov    rax,QWORD PTR [rbp+0x58]
  41167c:	mov    rcx,QWORD PTR [rbp+0x118]
  411683:	add    rax,0x10
  411687:	cmp    rcx,rax
  41168a:	je     0x411691
  41168c:	call   0x41d8a8
  411691:	call   QWORD PTR [rip+0x1e345]        # 0x42f9dc
  411697:	mov    DWORD PTR [rax],0x2a
  41169d:	xor    eax,eax
  41169f:	jmp    0x41120b
  4116a4:	mov    BYTE PTR [rdi],0x6c
  4116a7:	add    rdi,0x1
  4116ab:	jmp    0x4110c3
  4116b0:	mov    DWORD PTR [rax],r14d
  4116b3:	mov    r15,r14
  4116b6:	mov    QWORD PTR [rbp+0x98],rbx
  4116bd:	jmp    0x4112e6
  4116c2:	mov    rax,QWORD PTR [r13+0x50]
  4116c6:	shl    rax,0x5
  4116ca:	add    rax,QWORD PTR [rbp+0x118]
  4116d1:	mov    r9d,DWORD PTR [rax+0x10]
  4116d5:	mov    eax,DWORD PTR [rbp+0x78]
  4116d8:	cmp    eax,0x1
  4116db:	je     0x4118d0
  4116e1:	cmp    eax,0x2
  4116e4:	mov    rax,QWORD PTR [rbp+0x98]
  4116eb:	lea    r12,[rax+r14*1]
  4116ef:	mov    rax,QWORD PTR [rbp+0x70]
  4116f3:	jne    0x411a45
  4116f9:	mov    QWORD PTR [rsp+0x30],rax
  4116fe:	mov    eax,DWORD PTR [rbp+0xc4]
  411704:	mov    rdx,rbx
  411707:	mov    DWORD PTR [rsp+0x28],r9d
  41170c:	mov    r8,QWORD PTR [rbp+0x90]
  411713:	mov    rcx,r12
  411716:	mov    r9d,DWORD PTR [rbp+0xc0]
  41171d:	mov    DWORD PTR [rsp+0x20],eax
  411721:	call   0x410cd0
  411726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411730:	movsxd rdx,DWORD PTR [rbp+0xbc]
  411737:	test   edx,edx
  411739:	js     0x411893
  41173f:	movsxd rcx,edx
  411742:	cmp    rcx,rbx
  411745:	jae    0x411752
  411747:	cmp    BYTE PTR [r12+rcx*1],0x0
  41174c:	jne    0x411a40
  411752:	cmp    eax,edx
  411754:	jle    0x41175f
  411756:	mov    DWORD PTR [rbp+0xbc],eax
  41175c:	movsxd rdx,eax
  41175f:	lea    eax,[rdx+0x1]
  411762:	cmp    rax,rbx
  411765:	jb     0x4122c0
  41176b:	cmp    rbx,0x7fffffff
  411772:	je     0x4122e0
  411778:	lea    rcx,[rsi+rsi*1]
  41177c:	test   rsi,rsi
  41177f:	mov    rax,0xffffffffffffffff
  411786:	cmovs  rcx,rax
  41178a:	add    edx,0x2
  41178d:	add    rdx,r14
  411790:	jb     0x41179c
  411792:	cmp    rcx,rdx
  411795:	mov    rax,rdx
  411798:	cmovae rax,rcx
  41179c:	cmp    rsi,rax
  41179f:	jae    0x41149c
  4117a5:	test   rsi,rsi
  4117a8:	je     0x411a61
  4117ae:	js     0x412360
  4117b4:	add    rsi,rsi
  4117b7:	cmp    rsi,rax
  4117ba:	cmovb  rsi,rax
  4117be:	cmp    rsi,0xffffffffffffffff
  4117c2:	je     0x412360
  4117c8:	mov    rax,QWORD PTR [rbp+0x98]
  4117cf:	cmp    rax,QWORD PTR [rbp+0x4e0]
  4117d6:	sete   bl
  4117d9:	test   rax,rax
  4117dc:	je     0x411a70
  4117e2:	test   bl,bl
  4117e4:	jne    0x411a70
  4117ea:	mov    rcx,QWORD PTR [rbp+0x98]
  4117f1:	mov    rdx,rsi
  4117f4:	call   0x410be0
  4117f9:	mov    r9,rax
  4117fc:	test   r9,r9
  4117ff:	je     0x412360
  411805:	test   bl,bl
  411807:	je     0x411812
  411809:	test   r14,r14
  41180c:	jne    0x411cf0
  411812:	mov    QWORD PTR [rbp+0x98],r9
  411819:	jmp    0x41149c
  41181e:	xchg   ax,ax
  411820:	mov    rax,QWORD PTR [r13+0x50]
  411824:	shl    rax,0x5
  411828:	add    rax,QWORD PTR [rbp+0x118]
  41182f:	mov    r9,QWORD PTR [rax+0x10]
  411833:	mov    eax,DWORD PTR [rbp+0x78]
  411836:	cmp    eax,0x1
  411839:	je     0x411d10
  41183f:	cmp    eax,0x2
  411842:	mov    rax,QWORD PTR [rbp+0x98]
  411849:	lea    r12,[rax+r14*1]
  41184d:	mov    rax,QWORD PTR [rbp+0x70]
  411851:	jne    0x411b40
  411857:	mov    QWORD PTR [rsp+0x30],rax
  41185c:	mov    QWORD PTR [rsp+0x28],r9
  411861:	mov    eax,DWORD PTR [rbp+0xc4]
  411867:	mov    r9d,DWORD PTR [rbp+0xc0]
  41186e:	mov    rdx,rbx
  411871:	mov    r8,QWORD PTR [rbp+0x90]
  411878:	mov    rcx,r12
  41187b:	mov    DWORD PTR [rsp+0x20],eax
  41187f:	call   0x410cd0
  411884:	movsxd rdx,DWORD PTR [rbp+0xbc]
  41188b:	test   edx,edx
  41188d:	jns    0x41173f
  411893:	cmp    BYTE PTR [rdi+0x1],0x0
  411897:	je     0x411ad0
  41189d:	mov    BYTE PTR [rdi+0x1],0x0
  4118a1:	jmp    0x41149c
  4118a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4118b0:	mov    rax,QWORD PTR [r13+0x50]
  4118b4:	shl    rax,0x5
  4118b8:	add    rax,QWORD PTR [rbp+0x118]
  4118bf:	movzx  r9d,WORD PTR [rax+0x10]
  4118c4:	mov    eax,DWORD PTR [rbp+0x78]
  4118c7:	cmp    eax,0x1
  4118ca:	jne    0x4116e1
  4118d0:	mov    rax,QWORD PTR [rbp+0x98]
  4118d7:	mov    DWORD PTR [rsp+0x20],r9d
  4118dc:	mov    rdx,rbx
  4118df:	mov    r9d,DWORD PTR [rbp+0xc0]
  4118e6:	mov    r8,QWORD PTR [rbp+0x90]
  4118ed:	lea    r12,[rax+r14*1]
  4118f1:	mov    rax,QWORD PTR [rbp+0x70]
  4118f5:	mov    rcx,r12
  4118f8:	mov    QWORD PTR [rsp+0x28],rax
  4118fd:	call   0x410cd0
  411902:	jmp    0x411730
  411907:	nop    WORD PTR [rax+rax*1+0x0]
  411910:	mov    rax,QWORD PTR [r13+0x50]
  411914:	shl    rax,0x5
  411918:	add    rax,QWORD PTR [rbp+0x118]
  41191f:	movsx  r9d,BYTE PTR [rax+0x10]
  411924:	mov    eax,DWORD PTR [rbp+0x78]
  411927:	cmp    eax,0x1
  41192a:	jne    0x4116e1
  411930:	jmp    0x4118d0
  411932:	mov    rax,QWORD PTR [r13+0x50]
  411936:	shl    rax,0x5
  41193a:	add    rax,QWORD PTR [rbp+0x118]
  411941:	movsd  xmm0,QWORD PTR [rax+0x10]
  411946:	mov    eax,DWORD PTR [rbp+0x78]
  411949:	cmp    eax,0x1
  41194c:	je     0x412282
  411952:	cmp    eax,0x2
  411955:	mov    rax,QWORD PTR [rbp+0x98]
  41195c:	lea    r12,[rax+r14*1]
  411960:	mov    rax,QWORD PTR [rbp+0x70]
  411964:	jne    0x411e44
  41196a:	mov    QWORD PTR [rsp+0x30],rax
  41196f:	mov    eax,DWORD PTR [rbp+0xc4]
  411975:	movsd  QWORD PTR [rsp+0x28],xmm0
  41197b:	mov    r9d,DWORD PTR [rbp+0xc0]
  411982:	mov    r8,QWORD PTR [rbp+0x90]
  411989:	mov    rdx,rbx
  41198c:	mov    rcx,r12
  41198f:	mov    DWORD PTR [rsp+0x20],eax
  411993:	call   0x410cd0
  411998:	jmp    0x411730
  41199d:	nop    DWORD PTR [rax]
  4119a0:	mov    rax,QWORD PTR [r13+0x50]
  4119a4:	shl    rax,0x5
  4119a8:	add    rax,QWORD PTR [rbp+0x118]
  4119af:	fld    TBYTE PTR [rax+0x10]
  4119b2:	mov    eax,DWORD PTR [rbp+0x78]
  4119b5:	cmp    eax,0x1
  4119b8:	fstp   TBYTE PTR [rbp+0xa0]
  4119be:	je     0x412260
  4119c4:	cmp    eax,0x2
  4119c7:	mov    rax,QWORD PTR [rbp+0x98]
  4119ce:	lea    r12,[rax+r14*1]
  4119d2:	mov    rax,QWORD PTR [rbp+0x70]
  4119d6:	jne    0x411e24
  4119dc:	mov    QWORD PTR [rsp+0x30],rax
  4119e1:	mov    rax,QWORD PTR [rbp+0x40]
  4119e5:	mov    QWORD PTR [rsp+0x28],rax
  4119ea:	jmp    0x411861
  4119ef:	nop
  4119f0:	mov    rax,QWORD PTR [r13+0x50]
  4119f4:	shl    rax,0x5
  4119f8:	add    rax,QWORD PTR [rbp+0x118]
  4119ff:	movsx  r9d,WORD PTR [rax+0x10]
  411a04:	mov    eax,DWORD PTR [rbp+0x78]
  411a07:	cmp    eax,0x1
  411a0a:	jne    0x4116e1
  411a10:	jmp    0x4118d0
  411a15:	mov    rax,QWORD PTR [r13+0x50]
  411a19:	shl    rax,0x5
  411a1d:	add    rax,QWORD PTR [rbp+0x118]
  411a24:	movzx  r9d,BYTE PTR [rax+0x10]
  411a29:	mov    eax,DWORD PTR [rbp+0x78]
  411a2c:	cmp    eax,0x1
  411a2f:	jne    0x4116e1
  411a35:	jmp    0x4118d0
  411a3a:	nop    WORD PTR [rax+rax*1+0x0]
  411a40:	call   0x41d918
  411a45:	mov    r8,QWORD PTR [rbp+0x90]
  411a4c:	mov    QWORD PTR [rsp+0x20],rax
  411a51:	mov    rdx,rbx
  411a54:	mov    rcx,r12
  411a57:	call   0x410cd0
  411a5c:	jmp    0x411730
  411a61:	mov    esi,0xc
  411a66:	jmp    0x4117b7
  411a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  411a70:	mov    rcx,rsi
  411a73:	call   0x4104e0
  411a78:	mov    r9,rax
  411a7b:	jmp    0x4117fc
  411a80:	mov    rcx,r12
  411a83:	call   0x4104e0
  411a88:	movzx  r8d,BYTE PTR [rbp+0x68]
  411a8d:	mov    QWORD PTR [rbp+0x98],rax
  411a94:	jmp    0x4113a0
  411a99:	nop    DWORD PTR [rax+0x0]
  411aa0:	mov    QWORD PTR [rbp+0x98],rbx
  411aa7:	jmp    0x4113ca
  411aac:	nop    DWORD PTR [rax+0x0]
  411ab0:	mov    DWORD PTR [rbp+0x78],edx
  411ab3:	jmp    0x411130
  411ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  411ac0:	xor    edx,edx
  411ac2:	jmp    0x4110fe
  411ac7:	nop    WORD PTR [rax+rax*1+0x0]
  411ad0:	test   eax,eax
  411ad2:	jns    0x411756
  411ad8:	movzx  eax,BYTE PTR [r13+0x48]
  411add:	mov    rcx,QWORD PTR [r13+0x50]
  411ae1:	sub    eax,0x41
  411ae4:	cmp    al,0x37
  411ae6:	ja     0x411a40
  411aec:	lea    rdx,[rip+0x14e39]        # 0x42692c
  411af3:	movzx  eax,al
  411af6:	movsxd rax,DWORD PTR [rdx+rax*4]
  411afa:	add    rdx,rax
  411afd:	jmp    rdx
  411aff:	nop
  411b00:	cmp    rcx,0xffffffffffffffff
  411b04:	je     0x4111c0
  411b0a:	call   0x4104e0
  411b0f:	test   rax,rax
  411b12:	mov    QWORD PTR [rbp+0x90],rax
  411b19:	je     0x4111c0
  411b1f:	cmp    QWORD PTR [rbp+0x4e0],0x0
  411b27:	mov    rax,QWORD PTR [rbp+0x90]
  411b2e:	mov    QWORD PTR [rbp+0x50],rax
  411b32:	jne    0x410dd4
  411b38:	xor    r12d,r12d
  411b3b:	jmp    0x410dde
  411b40:	mov    r8,QWORD PTR [rbp+0x90]
  411b47:	mov    QWORD PTR [rsp+0x20],rax
  411b4c:	mov    rdx,rbx
  411b4f:	mov    rcx,r12
  411b52:	call   0x410cd0
  411b57:	jmp    0x411730
  411b5c:	mov    r8,QWORD PTR [r13+0x30]
  411b60:	mov    r11,QWORD PTR [r13+0x38]
  411b64:	mov    QWORD PTR [rbp+0x68],0x0
  411b6c:	mov    DWORD PTR [rbp+0x88],0x0
  411b76:	cmp    r8,r11
  411b79:	jne    0x41157b
  411b7f:	mov    rsi,QWORD PTR [rax+0x10]
  411b83:	mov    rcx,rsi
  411b86:	xor    edi,edi
  411b88:	xor    r15d,r15d
  411b8b:	call   0x41d798
  411b90:	lea    rax,[rsi+rax*2]
  411b94:	mov    QWORD PTR [rbp+0x98],rax
  411b9b:	xor    r9d,r9d
  411b9e:	mov    QWORD PTR [rbp+0x30],0x0
  411ba6:	mov    rcx,QWORD PTR [rbp+0x68]
  411baa:	cmp    QWORD PTR [rbp+0x30],rcx
  411bae:	jae    0x412071
  411bb4:	test   BYTE PTR [r13+0x10],0x2
  411bb9:	jne    0x412071
  411bbf:	mov    r11,QWORD PTR [rbp+0x68]
  411bc3:	sub    r11,QWORD PTR [rbp+0x30]
  411bc7:	mov    rax,r11
  411bca:	add    rax,r14
  411bcd:	mov    rcx,rax
  411bd0:	mov    QWORD PTR [rbp+0x88],rax
  411bd7:	mov    rax,0xffffffffffffffff
  411bde:	cmovae rax,rcx
  411be2:	cmp    r12,rax
  411be5:	jae    0x4129a7
  411beb:	test   r12,r12
  411bee:	je     0x412972
  411bf4:	js     0x411c20
  411bf6:	add    r12,r12
  411bf9:	cmp    r14,rcx
  411bfc:	ja     0x411c20
  411bfe:	cmp    r12,QWORD PTR [rbp+0x88]
  411c05:	jae    0x411fce
  411c0b:	mov    rax,QWORD PTR [rbp+0x88]
  411c12:	mov    r12,rax
  411c15:	add    rax,0x1
  411c19:	jne    0x411fce
  411c1f:	nop
  411c20:	mov    QWORD PTR [rbp+0x98],rbx
  411c27:	nop    WORD PTR [rax+rax*1+0x0]
  411c30:	mov    rax,QWORD PTR [rip+0x1dda5]        # 0x42f9dc
  411c37:	mov    QWORD PTR [rbp+0x68],rax
  411c3b:	jmp    0x411190
  411c40:	xor    r15d,r15d
  411c43:	movabs r11,0x1999999999999999
  411c4d:	nop    DWORD PTR [rax]
  411c50:	add    rcx,0x1
  411c54:	movsx  eax,BYTE PTR [rcx-0x1]
  411c58:	mov    rdx,0xffffffffffffffff
  411c5f:	sub    eax,0x30
  411c62:	cmp    r15,r11
  411c65:	cdqe   
  411c67:	ja     0x411c70
  411c69:	lea    rdx,[r15+r15*4]
  411c6d:	add    rdx,rdx
  411c70:	add    rdx,rax
  411c73:	mov    rax,0xffffffffffffffff
  411c7a:	mov    r15,rdx
  411c7d:	cmovb  r15,rax
  411c81:	cmp    rcx,r9
  411c84:	jne    0x411c50
  411c86:	jmp    0x410f8d
  411c8b:	nop    DWORD PTR [rax+rax*1+0x0]
  411c90:	add    rdx,0x1
  411c94:	xor    esi,esi
  411c96:	cmp    rcx,rdx
  411c99:	je     0x410fc9
  411c9f:	movabs r9,0x1999999999999999
  411ca9:	nop    DWORD PTR [rax+0x0]
  411cb0:	add    rdx,0x1
  411cb4:	movsx  eax,BYTE PTR [rdx-0x1]
  411cb8:	mov    r10,0xffffffffffffffff
  411cbf:	sub    eax,0x30
  411cc2:	cmp    rsi,r9
  411cc5:	cdqe   
  411cc7:	ja     0x411cd0
  411cc9:	lea    r10,[rsi+rsi*4]
  411ccd:	add    r10,r10
  411cd0:	mov    rsi,r10
  411cd3:	add    rsi,rax
  411cd6:	mov    rax,0xffffffffffffffff
  411cdd:	cmovb  rsi,rax
  411ce1:	cmp    rdx,rcx
  411ce4:	jne    0x411cb0
  411ce6:	jmp    0x410fc9
  411ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  411cf0:	mov    rdx,QWORD PTR [rbp+0x98]
  411cf7:	mov    r8,r14
  411cfa:	mov    rcx,r9
  411cfd:	call   0x41d860
  411d02:	mov    QWORD PTR [rbp+0x98],rax
  411d09:	jmp    0x41149c
  411d0e:	xchg   ax,ax
  411d10:	mov    rax,QWORD PTR [rbp+0x98]
  411d17:	mov    QWORD PTR [rsp+0x20],r9
  411d1c:	lea    r12,[rax+r14*1]
  411d20:	mov    rax,QWORD PTR [rbp+0x70]
  411d24:	mov    QWORD PTR [rsp+0x28],rax
  411d29:	mov    r9d,DWORD PTR [rbp+0xc0]
  411d30:	mov    r8,QWORD PTR [rbp+0x90]
  411d37:	mov    rdx,rbx
  411d3a:	mov    rcx,r12
  411d3d:	call   0x410cd0
  411d42:	jmp    0x411730
  411d47:	nop    WORD PTR [rax+rax*1+0x0]
  411d50:	or     r8d,0x2
  411d54:	neg    r15
  411d57:	jmp    0x410f8d
  411d5c:	nop    DWORD PTR [rax+0x0]
  411d60:	xor    r15d,r15d
  411d63:	jmp    0x410f8d
  411d68:	nop    DWORD PTR [rax+rax*1+0x0]
  411d70:	mov    r12d,0xc
  411d76:	jmp    0x411284
  411d7b:	nop    DWORD PTR [rax+rax*1+0x0]
  411d80:	mov    rcx,r12
  411d83:	call   0x4104e0
  411d88:	mov    r9,rax
  411d8b:	jmp    0x4112c0
  411d90:	xor    eax,eax
  411d92:	jmp    0x41120b
  411d97:	nop    WORD PTR [rax+rax*1+0x0]
  411da0:	mov    BYTE PTR [rdi],0x4c
  411da3:	add    rdi,0x1
  411da7:	jmp    0x4110c3
  411dac:	nop    DWORD PTR [rax+0x0]
  411db0:	mov    rdx,rbx
  411db3:	mov    r8,r14
  411db6:	mov    rcx,r9
  411db9:	call   0x41d860
  411dbe:	mov    rbx,rax
  411dc1:	jmp    0x4112da
  411dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411dd0:	mov    QWORD PTR [rax],r14
  411dd3:	mov    r15,r14
  411dd6:	mov    QWORD PTR [rbp+0x98],rbx
  411ddd:	jmp    0x4112e6
  411de2:	mov    WORD PTR [rax],r14w
  411de6:	mov    r15,r14
  411de9:	mov    QWORD PTR [rbp+0x98],rbx
  411df0:	jmp    0x4112e6
  411df5:	mov    BYTE PTR [rax],r14b
  411df8:	mov    r15,r14
  411dfb:	mov    QWORD PTR [rbp+0x98],rbx
  411e02:	jmp    0x4112e6
  411e07:	nop    WORD PTR [rax+rax*1+0x0]
  411e10:	mov    BYTE PTR [rdi],0x49
  411e13:	mov    BYTE PTR [rdi+0x1],0x36
  411e17:	add    rdi,0x3
  411e1b:	mov    BYTE PTR [rdi-0x1],0x34
  411e1f:	jmp    0x4110c3
  411e24:	mov    r9,QWORD PTR [rbp+0x40]
  411e28:	mov    r8,QWORD PTR [rbp+0x90]
  411e2f:	mov    rdx,rbx
  411e32:	mov    QWORD PTR [rsp+0x20],rax
  411e37:	mov    rcx,r12
  411e3a:	call   0x410cd0
  411e3f:	jmp    0x411730
  411e44:	mov    r8,QWORD PTR [rbp+0x90]
  411e4b:	movapd xmm3,xmm0
  411e4f:	movq   r9,xmm0
  411e54:	mov    QWORD PTR [rsp+0x20],rax
  411e59:	mov    rdx,rbx
  411e5c:	mov    rcx,r12
  411e5f:	call   0x410cd0
  411e64:	jmp    0x411730
  411e69:	nop    DWORD PTR [rax+0x0]
  411e70:	mov    rcx,rax
  411e73:	call   0x41d8a8
  411e78:	jmp    0x4111a9
  411e7d:	cmp    DWORD PTR [rbp+0x88],0x10
  411e84:	je     0x411a40
  411e8a:	mov    rax,rcx
  411e8d:	mov    edx,DWORD PTR [rbp+0x28]
  411e90:	shl    rax,0x5
  411e94:	add    rax,QWORD PTR [rbp+0x118]
  411e9b:	test   edx,edx
  411e9d:	mov    rcx,QWORD PTR [rax+0x10]
  411ea1:	jne    0x412a4e
  411ea7:	call   0x41d7f8
  411eac:	cmp    r15,rax
  411eaf:	jbe    0x4129b7
  411eb5:	lea    rdx,[r15+0x1]
  411eb9:	mov    rax,r15
  411ebc:	cmp    rdx,rax
  411ebf:	jae    0x412857
  411ec5:	mov    rdx,0xffffffffffffffff
  411ecc:	add    rdx,r14
  411ecf:	mov    rax,0xffffffffffffffff
  411ed6:	cmovb  rdx,rax
  411eda:	test   rsi,rsi
  411edd:	js     0x4129af
  411ee3:	lea    r8,[rsi+rsi*1]
  411ee7:	lea    rcx,[r8+0xc]
  411eeb:	cmp    r8,rcx
  411eee:	ja     0x4117a5
  411ef4:	cmp    rdx,rcx
  411ef7:	cmovb  rdx,rcx
  411efb:	cmp    rsi,rdx
  411efe:	mov    rax,rdx
  411f01:	jae    0x41149c
  411f07:	jmp    0x4117a5
  411f0c:	mov    eax,0x13
  411f11:	jmp    0x411eac
  411f13:	mov    rcx,QWORD PTR [rbp+0x10]
  411f17:	cmp    QWORD PTR [rbp-0x18],rcx
  411f1b:	ja     0x411fad
  411f21:	mov    rax,QWORD PTR [rbp+0x10]
  411f25:	jmp    0x411eac
  411f27:	xor    edx,edx
  411f29:	mov    r11,QWORD PTR [rbp-0x38]
  411f2d:	cmp    QWORD PTR [rbp+0x20],r11
  411f31:	mov    rax,0xffffffffffffffff
  411f38:	jb     0x411ebc
  411f3a:	mov    r11,QWORD PTR [rbp+0x18]
  411f3e:	cmp    QWORD PTR [rbp+0x20],r11
  411f42:	ja     0x411ebc
  411f48:	mov    rax,QWORD PTR [rbp+0x18]
  411f4c:	jmp    0x411eac
  411f51:	cmp    DWORD PTR [rbp+0x88],0xe
  411f58:	mov    eax,0x1
  411f5d:	jne    0x411eac
  411f63:	mov    rax,QWORD PTR [rip+0x15926]        # 0x427890
  411f6a:	mov    rax,QWORD PTR [rax]
  411f6d:	movsxd rax,DWORD PTR [rax]
  411f70:	jmp    0x411eac
  411f75:	mov    rcx,QWORD PTR [rbp+0x8]
  411f79:	cmp    QWORD PTR [rbp-0x20],rcx
  411f7d:	ja     0x411fad
  411f7f:	mov    rax,QWORD PTR [rbp+0x8]
  411f83:	jmp    0x411eac
  411f88:	mov    rcx,QWORD PTR [rbp+0x0]
  411f8c:	cmp    QWORD PTR [rbp-0x28],rcx
  411f90:	ja     0x411fad
  411f92:	mov    rax,QWORD PTR [rbp+0x0]
  411f96:	jmp    0x411eac
  411f9b:	mov    rax,QWORD PTR [rbp-0x10]
  411f9f:	add    rax,0xc
  411fa3:	cmp    rax,0xb
  411fa7:	ja     0x411eac
  411fad:	xor    edx,edx
  411faf:	mov    rax,0xffffffffffffffff
  411fb6:	jmp    0x411ebc
  411fbb:	mov    rcx,QWORD PTR [rbp-0x30]
  411fbf:	cmp    QWORD PTR [rbp-0x8],rcx
  411fc3:	jb     0x411fad
  411fc5:	mov    rax,QWORD PTR [rbp-0x8]
  411fc9:	jmp    0x411eac
  411fce:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  411fd5:	mov    DWORD PTR [rbp+0x20],r9d
  411fd9:	mov    QWORD PTR [rbp+0x78],r11
  411fdd:	sete   r8b
  411fe1:	test   rbx,rbx
  411fe4:	mov    BYTE PTR [rbp+0x28],r8b
  411fe8:	je     0x41298a
  411fee:	test   r8b,r8b
  411ff1:	jne    0x41298a
  411ff7:	mov    rdx,r12
  411ffa:	mov    rcx,rbx
  411ffd:	call   0x410be0
  412002:	movzx  r8d,BYTE PTR [rbp+0x28]
  412007:	mov    r9d,DWORD PTR [rbp+0x20]
  41200b:	mov    r10,rax
  41200e:	mov    r11,QWORD PTR [rbp+0x78]
  412012:	test   r10,r10
  412015:	je     0x411c20
  41201b:	test   r14,r14
  41201e:	je     0x412046
  412020:	test   r8b,r8b
  412023:	je     0x412046
  412025:	mov    rcx,r10
  412028:	mov    r8,r14
  41202b:	mov    rdx,rbx
  41202e:	mov    DWORD PTR [rbp+0x28],r9d
  412032:	mov    QWORD PTR [rbp+0x78],r11
  412036:	call   0x41d860
  41203b:	mov    r11,QWORD PTR [rbp+0x78]
  41203f:	mov    r9d,DWORD PTR [rbp+0x28]
  412043:	mov    r10,rax
  412046:	lea    rcx,[r10+r14*1]
  41204a:	mov    r8,r11
  41204d:	mov    edx,0x20
  412052:	mov    DWORD PTR [rbp+0x28],r9d
  412056:	mov    QWORD PTR [rbp+0x78],r10
  41205a:	call   0x41d850
  41205f:	mov    r10,QWORD PTR [rbp+0x78]
  412063:	mov    r14,QWORD PTR [rbp+0x88]
  41206a:	mov    r9d,DWORD PTR [rbp+0x28]
  41206e:	mov    rbx,r10
  412071:	or     r9d,r15d
  412074:	je     0x412370
  41207a:	mov    rdx,rdi
  41207d:	mov    rax,0xffffffffffffffff
  412084:	mov    DWORD PTR [rbp+0xb4],0x0
  41208e:	add    rdx,r14
  412091:	cmovae rax,rdx
  412095:	cmp    rax,r12
  412098:	jbe    0x412575
  41209e:	test   r12,r12
  4120a1:	je     0x41250f
  4120a7:	js     0x4120b5
  4120a9:	add    r12,r12
  4120ac:	cmp    rdx,r14
  4120af:	jae    0x41251e
  4120b5:	mov    rax,QWORD PTR [rip+0x1d920]        # 0x42f9dc
  4120bc:	mov    QWORD PTR [rbp+0x98],rbx
  4120c3:	mov    QWORD PTR [rbp+0x68],rax
  4120c7:	jmp    0x411190
  4120cc:	nop    DWORD PTR [rax+0x0]
  4120d0:	mov    rax,QWORD PTR [rbp+0x60]
  4120d4:	mov    rcx,QWORD PTR [rbp+0x208]
  4120db:	add    rax,0x20
  4120df:	cmp    rcx,rax
  4120e2:	je     0x4120e9
  4120e4:	call   0x41d8a8
  4120e9:	mov    rax,QWORD PTR [rbp+0x58]
  4120ed:	mov    rcx,QWORD PTR [rbp+0x118]
  4120f4:	add    rax,0x10
  4120f8:	cmp    rcx,rax
  4120fb:	je     0x412102
  4120fd:	call   0x41d8a8
  412102:	call   QWORD PTR [rip+0x1d8d4]        # 0x42f9dc
  412108:	mov    DWORD PTR [rax],0x16
  41210e:	xor    eax,eax
  412110:	jmp    0x41120b
  412115:	mov    rax,rbx
  412118:	lea    rsi,[r14+0x1]
  41211c:	mov    r15,rbx
  41211f:	mov    QWORD PTR [rbp+0x98],rax
  412126:	mov    rax,0xffffffffffffffff
  41212d:	mov    rbx,r12
  412130:	cmp    rsi,r14
  412133:	mov    rdx,rax
  412136:	cmovae rdx,rsi
  41213a:	cmp    rdx,r12
  41213d:	jbe    0x4121c8
  412143:	test   r12,r12
  412146:	je     0x41283a
  41214c:	js     0x412a06
  412152:	add    rbx,rbx
  412155:	cmp    rsi,r14
  412158:	mov    rax,rsi
  41215b:	jae    0x412164
  41215d:	mov    rax,0xffffffffffffffff
  412164:	cmp    rax,rbx
  412167:	jbe    0x412175
  412169:	cmp    rsi,r14
  41216c:	jb     0x411c30
  412172:	mov    rbx,rsi
  412175:	cmp    rbx,0xffffffffffffffff
  412179:	je     0x411c30
  41217f:	cmp    QWORD PTR [rbp+0x4e0],r15
  412186:	sete   dil
  41218a:	test   r15,r15
  41218d:	je     0x4128fe
  412193:	test   dil,dil
  412196:	jne    0x4128fe
  41219c:	mov    rdx,rbx
  41219f:	mov    rcx,r15
  4121a2:	call   0x410be0
  4121a7:	mov    r9,rax
  4121aa:	test   r9,r9
  4121ad:	je     0x411c30
  4121b3:	test   r14,r14
  4121b6:	je     0x4121c1
  4121b8:	test   dil,dil
  4121bb:	jne    0x412958
  4121c1:	mov    QWORD PTR [rbp+0x98],r9
  4121c8:	mov    rax,QWORD PTR [rbp+0x98]
  4121cf:	cmp    rax,QWORD PTR [rbp+0x4e0]
  4121d6:	mov    BYTE PTR [rax+r14*1],0x0
  4121db:	je     0x4121fe
  4121dd:	cmp    rbx,rsi
  4121e0:	jbe    0x4121fe
  4121e2:	mov    rdx,rsi
  4121e5:	mov    rcx,rax
  4121e8:	mov    rdi,rax
  4121eb:	call   0x410be0
  4121f0:	test   rax,rax
  4121f3:	cmove  rax,rdi
  4121f7:	mov    QWORD PTR [rbp+0x98],rax
  4121fe:	mov    rax,QWORD PTR [rbp+0x50]
  412202:	test   rax,rax
  412205:	je     0x41220f
  412207:	mov    rcx,rax
  41220a:	call   0x41d8a8
  41220f:	mov    rax,QWORD PTR [rbp+0x60]
  412213:	mov    rcx,QWORD PTR [rbp+0x208]
  41221a:	add    rax,0x20
  41221e:	cmp    rcx,rax
  412221:	je     0x412228
  412223:	call   0x41d8a8
  412228:	mov    rax,QWORD PTR [rbp+0x58]
  41222c:	mov    rcx,QWORD PTR [rbp+0x118]
  412233:	add    rax,0x10
  412237:	cmp    rcx,rax
  41223a:	je     0x412241
  41223c:	call   0x41d8a8
  412241:	mov    rax,QWORD PTR [rbp+0x4e8]
  412248:	mov    QWORD PTR [rax],r14
  41224b:	mov    rax,QWORD PTR [rbp+0x98]
  412252:	jmp    0x41120b
  412257:	nop    WORD PTR [rax+rax*1+0x0]
  412260:	mov    rax,QWORD PTR [rbp+0x98]
  412267:	lea    r12,[rax+r14*1]
  41226b:	mov    rax,QWORD PTR [rbp+0x70]
  41226f:	mov    QWORD PTR [rsp+0x28],rax
  412274:	mov    rax,QWORD PTR [rbp+0x40]
  412278:	mov    QWORD PTR [rsp+0x20],rax
  41227d:	jmp    0x411d29
  412282:	mov    rax,QWORD PTR [rbp+0x98]
  412289:	mov    r9d,DWORD PTR [rbp+0xc0]
  412290:	movsd  QWORD PTR [rsp+0x20],xmm0
  412296:	mov    r8,QWORD PTR [rbp+0x90]
  41229d:	mov    rdx,rbx
  4122a0:	lea    r12,[rax+r14*1]
  4122a4:	mov    rax,QWORD PTR [rbp+0x70]
  4122a8:	mov    rcx,r12
  4122ab:	mov    QWORD PTR [rsp+0x28],rax
  4122b0:	call   0x410cd0
  4122b5:	jmp    0x411730
  4122ba:	nop    WORD PTR [rax+rax*1+0x0]
  4122c0:	lea    r15,[rdx+r14*1]
  4122c4:	mov    r12,rsi
  4122c7:	call   QWORD PTR [rip+0x1d70f]        # 0x42f9dc
  4122cd:	mov    edi,DWORD PTR [rbp+0x30]
  4122d0:	mov    DWORD PTR [rax],edi
  4122d2:	jmp    0x4112e6
  4122d7:	nop    WORD PTR [rax+rax*1+0x0]
  4122e0:	mov    rax,QWORD PTR [rbp+0x98]
  4122e7:	test   rax,rax
  4122ea:	je     0x412301
  4122ec:	cmp    QWORD PTR [rbp+0x4e0],rax
  4122f3:	je     0x412301
  4122f5:	mov    rcx,QWORD PTR [rbp+0x98]
  4122fc:	call   0x41d8a8
  412301:	mov    rax,QWORD PTR [rbp+0x50]
  412305:	test   rax,rax
  412308:	je     0x412312
  41230a:	mov    rcx,rax
  41230d:	call   0x41d8a8
  412312:	mov    rax,QWORD PTR [rbp+0x60]
  412316:	mov    rcx,QWORD PTR [rbp+0x208]
  41231d:	add    rax,0x20
  412321:	cmp    rcx,rax
  412324:	je     0x41232b
  412326:	call   0x41d8a8
  41232b:	mov    rax,QWORD PTR [rbp+0x58]
  41232f:	mov    rcx,QWORD PTR [rbp+0x118]
  412336:	add    rax,0x10
  41233a:	cmp    rcx,rax
  41233d:	je     0x412344
  41233f:	call   0x41d8a8
  412344:	call   QWORD PTR [rip+0x1d692]        # 0x42f9dc
  41234a:	mov    DWORD PTR [rax],0x84
  412350:	xor    eax,eax
  412352:	jmp    0x41120b
  412357:	nop    WORD PTR [rax+rax*1+0x0]
  412360:	mov    rax,QWORD PTR [rbp+0x98]
  412367:	mov    r15,rax
  41236a:	jmp    0x41117f
  41236f:	nop
  412370:	cmp    rsi,QWORD PTR [rbp+0x98]
  412377:	mov    DWORD PTR [rbp+0xb8],0x0
  412381:	jae    0x412a64
  412387:	movzx  edx,WORD PTR [rsi]
  41238a:	test   dx,dx
  41238d:	je     0x411a40
  412393:	lea    rax,[rbp+0xb8]
  41239a:	mov    rdi,QWORD PTR [rbp+0x48]
  41239e:	mov    QWORD PTR [rbp+0x28],r13
  4123a2:	mov    QWORD PTR [rbp+0x88],rax
  4123a9:	nop    DWORD PTR [rax+0x0]
  4123b0:	mov    r8,QWORD PTR [rbp+0x88]
  4123b7:	mov    rcx,rdi
  4123ba:	call   0x418b50
  4123bf:	test   eax,eax
  4123c1:	jle    0x41290e
  4123c7:	movsxd r13,eax
  4123ca:	mov    rax,0xffffffffffffffff
  4123d1:	mov    r15,r13
  4123d4:	add    r15,r14
  4123d7:	cmovae rax,r15
  4123db:	cmp    rax,r12
  4123de:	jbe    0x41246e
  4123e4:	test   r12,r12
  4123e7:	je     0x412410
  4123e9:	js     0x4123f3
  4123eb:	add    r12,r12
  4123ee:	cmp    r15,r14
  4123f1:	jae    0x41241b
  4123f3:	mov    rax,QWORD PTR [rip+0x1d5e2]        # 0x42f9dc
  4123fa:	mov    QWORD PTR [rbp+0x98],rbx
  412401:	mov    QWORD PTR [rbp+0x68],rax
  412405:	jmp    0x411190
  41240a:	nop    WORD PTR [rax+rax*1+0x0]
  412410:	cmp    r15,r14
  412413:	jb     0x4123f3
  412415:	mov    r12d,0xc
  41241b:	cmp    r12,r15
  41241e:	jae    0x412430
  412420:	cmp    r15,0xffffffffffffffff
  412424:	mov    r12,r15
  412427:	je     0x4123f3
  412429:	nop    DWORD PTR [rax+0x0]
  412430:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  412437:	sete   r8b
  41243b:	test   rbx,rbx
  41243e:	mov    BYTE PTR [rbp+0x78],r8b
  412442:	je     0x4124a2
  412444:	test   r8b,r8b
  412447:	jne    0x4124a2
  412449:	mov    rdx,r12
  41244c:	mov    rcx,rbx
  41244f:	call   0x410be0
  412454:	movzx  r8d,BYTE PTR [rbp+0x78]
  412459:	mov    r10,rax
  41245c:	test   r10,r10
  41245f:	je     0x4123f3
  412461:	test   r14,r14
  412464:	je     0x41246b
  412466:	test   r8b,r8b
  412469:	jne    0x4124b4
  41246b:	mov    rbx,r10
  41246e:	lea    rcx,[rbx+r14*1]
  412472:	mov    r8,r13
  412475:	mov    rdx,rdi
  412478:	add    rsi,0x2
  41247c:	call   0x41d860
  412481:	cmp    rsi,QWORD PTR [rbp+0x98]
  412488:	jae    0x412938
  41248e:	movzx  edx,WORD PTR [rsi]
  412491:	test   dx,dx
  412494:	je     0x411a40
  41249a:	mov    r14,r15
  41249d:	jmp    0x4123b0
  4124a2:	mov    rcx,r12
  4124a5:	call   0x4104e0
  4124aa:	movzx  r8d,BYTE PTR [rbp+0x78]
  4124af:	mov    r10,rax
  4124b2:	jmp    0x41245c
  4124b4:	mov    rdx,rbx
  4124b7:	mov    r8,r14
  4124ba:	mov    rcx,r10
  4124bd:	call   0x41d860
  4124c2:	mov    rbx,rax
  4124c5:	jmp    0x41246e
  4124c7:	nop    WORD PTR [rax+rax*1+0x0]
  4124d0:	mov    r13,QWORD PTR [rbp+0x98]
  4124d7:	mov    rsi,QWORD PTR [rbp+0x30]
  4124db:	mov    QWORD PTR [rbp+0x98],r12
  4124e2:	mov    r12,QWORD PTR [rbp+0x78]
  4124e6:	mov    ecx,DWORD PTR [rbp+0x88]
  4124ec:	mov    r15d,0x1
  4124f2:	test   ecx,ecx
  4124f4:	je     0x411b9b
  4124fa:	mov    QWORD PTR [rbp+0x30],rdi
  4124fe:	mov    r9d,0x1
  412504:	mov    r15d,0x1
  41250a:	jmp    0x411ba6
  41250f:	cmp    rdx,r14
  412512:	jb     0x4120b5
  412518:	mov    r12d,0xc
  41251e:	cmp    r12,rdx
  412521:	jae    0x412530
  412523:	cmp    rdx,0xffffffffffffffff
  412527:	je     0x4120b5
  41252d:	mov    r12,rdx
  412530:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  412537:	sete   r15b
  41253b:	test   rbx,rbx
  41253e:	je     0x412948
  412544:	test   r15b,r15b
  412547:	jne    0x412948
  41254d:	mov    rdx,r12
  412550:	mov    rcx,rbx
  412553:	call   0x410be0
  412558:	mov    r9,rax
  41255b:	test   r9,r9
  41255e:	je     0x4120b5
  412564:	test   r14,r14
  412567:	je     0x412572
  412569:	test   r15b,r15b
  41256c:	jne    0x4129c0
  412572:	mov    rbx,r9
  412575:	test   rdi,rdi
  412578:	je     0x412a5c
  41257e:	movzx  edx,WORD PTR [rsi]
  412581:	test   dx,dx
  412584:	je     0x411a40
  41258a:	mov    r15,r14
  41258d:	mov    QWORD PTR [rbp+0x88],r13
  412594:	mov    QWORD PTR [rbp+0x78],r12
  412598:	mov    r13,QWORD PTR [rbp+0x48]
  41259c:	mov    r14,QWORD PTR [rbp+0x38]
  4125a0:	jmp    0x4125ae
  4125a2:	movzx  edx,WORD PTR [rsi]
  4125a5:	test   dx,dx
  4125a8:	je     0x411a40
  4125ae:	mov    r8,r14
  4125b1:	mov    rcx,r13
  4125b4:	call   0x418b50
  4125b9:	test   eax,eax
  4125bb:	jle    0x411a40
  4125c1:	movsxd r12,eax
  4125c4:	lea    rcx,[rbx+r15*1]
  4125c8:	mov    rdx,r13
  4125cb:	mov    r8,r12
  4125ce:	add    r15,r12
  4125d1:	add    rsi,0x2
  4125d5:	call   0x41d860
  4125da:	sub    rdi,r12
  4125dd:	jne    0x4125a2
  4125df:	mov    r13,QWORD PTR [rbp+0x88]
  4125e6:	mov    r12,QWORD PTR [rbp+0x78]
  4125ea:	cmp    rsi,QWORD PTR [rbp+0x98]
  4125f1:	jne    0x411a40
  4125f7:	mov    QWORD PTR [rbp+0x98],rbx
  4125fe:	mov    rdi,QWORD PTR [rbp+0x68]
  412602:	cmp    QWORD PTR [rbp+0x30],rdi
  412606:	jae    0x4112e6
  41260c:	test   BYTE PTR [r13+0x10],0x2
  412611:	je     0x4112e6
  412617:	sub    rdi,QWORD PTR [rbp+0x30]
  41261b:	mov    rax,0xffffffffffffffff
  412622:	mov    rbx,rdi
  412625:	add    rbx,r15
  412628:	cmovae rax,rbx
  41262c:	cmp    r12,rax
  41262f:	jae    0x4129fa
  412635:	test   r12,r12
  412638:	je     0x4129d6
  41263e:	js     0x411c30
  412644:	add    r12,r12
  412647:	cmp    r15,rbx
  41264a:	ja     0x411c30
  412650:	cmp    r12,rbx
  412653:	jae    0x412662
  412655:	cmp    rbx,0xffffffffffffffff
  412659:	mov    r12,rbx
  41265c:	je     0x411c30
  412662:	mov    rax,QWORD PTR [rbp+0x98]
  412669:	cmp    rax,QWORD PTR [rbp+0x4e0]
  412670:	sete   sil
  412674:	test   rax,rax
  412677:	je     0x4129ea
  41267d:	test   sil,sil
  412680:	jne    0x4129ea
  412686:	mov    rcx,QWORD PTR [rbp+0x98]
  41268d:	mov    rdx,r12
  412690:	call   0x410be0
  412695:	mov    r14,rax
  412698:	test   r14,r14
  41269b:	je     0x411c30
  4126a1:	test   r15,r15
  4126a4:	je     0x4126bd
  4126a6:	test   sil,sil
  4126a9:	je     0x4126bd
  4126ab:	mov    rdx,QWORD PTR [rbp+0x98]
  4126b2:	mov    r8,r15
  4126b5:	mov    rcx,r14
  4126b8:	call   0x41d860
  4126bd:	lea    rcx,[r14+r15*1]
  4126c1:	mov    r8,rdi
  4126c4:	mov    edx,0x20
  4126c9:	mov    r15,rbx
  4126cc:	call   0x41d850
  4126d1:	mov    QWORD PTR [rbp+0x98],r14
  4126d8:	jmp    0x4112e6
  4126dd:	mov    rsi,QWORD PTR [rax+0x10]
  4126e1:	mov    eax,DWORD PTR [rbp+0x88]
  4126e7:	test   eax,eax
  4126e9:	je     0x411b83
  4126ef:	movzx  edx,WORD PTR [rsi]
  4126f2:	mov    DWORD PTR [rbp+0xc0],0x0
  4126fc:	test   dx,dx
  4126ff:	je     0x412a2c
  412705:	lea    rax,[rbp+0xc0]
  41270c:	mov    QWORD PTR [rbp+0x98],r13
  412713:	xor    edi,edi
  412715:	mov    QWORD PTR [rbp+0x88],rsi
  41271c:	mov    r15,QWORD PTR [rbp+0x48]
  412720:	mov    r13,rax
  412723:	jmp    0x41273a
  412725:	add    rsi,0x2
  412729:	movzx  edx,WORD PTR [rsi]
  41272c:	cdqe   
  41272e:	add    rdi,rax
  412731:	test   dx,dx
  412734:	je     0x412801
  41273a:	mov    r8,r13
  41273d:	mov    rcx,r15
  412740:	call   0x418b50
  412745:	test   eax,eax
  412747:	jns    0x412725
  412749:	jmp    0x411638
  41274e:	add    r8,0x1
  412752:	cmp    r11,r8
  412755:	je     0x412a17
  41275b:	xor    r15d,r15d
  41275e:	movabs r10,0x1999999999999999
  412768:	nop    DWORD PTR [rax+rax*1+0x0]
  412770:	add    r8,0x1
  412774:	movsx  edx,BYTE PTR [r8-0x1]
  412779:	mov    rcx,0xffffffffffffffff
  412780:	sub    edx,0x30
  412783:	cmp    r15,r10
  412786:	movsxd rdx,edx
  412789:	ja     0x412792
  41278b:	lea    rcx,[r15+r15*4]
  41278f:	add    rcx,rcx
  412792:	add    rcx,rdx
  412795:	mov    rdx,0xffffffffffffffff
  41279c:	mov    r15,rcx
  41279f:	cmovb  r15,rdx
  4127a3:	cmp    r8,r11
  4127a6:	jne    0x412770
  4127a8:	jmp    0x4115aa
  4127ad:	xor    esi,esi
  4127af:	movabs r11,0x1999999999999999
  4127b9:	nop    DWORD PTR [rax+0x0]
  4127c0:	add    r8,0x1
  4127c4:	movsx  edx,BYTE PTR [r8-0x1]
  4127c9:	mov    rcx,0xffffffffffffffff
  4127d0:	sub    edx,0x30
  4127d3:	cmp    rsi,r11
  4127d6:	movsxd rdx,edx
  4127d9:	ja     0x4127e2
  4127db:	lea    rcx,[rsi+rsi*4]
  4127df:	add    rcx,rcx
  4127e2:	mov    rsi,rcx
  4127e5:	add    rsi,rdx
  4127e8:	mov    rdx,0xffffffffffffffff
  4127ef:	cmovb  rsi,rdx
  4127f3:	cmp    r8,r9
  4127f6:	jne    0x4127c0
  4127f8:	mov    QWORD PTR [rbp+0x68],rsi
  4127fc:	jmp    0x411560
  412801:	mov    r13,QWORD PTR [rbp+0x98]
  412808:	mov    QWORD PTR [rbp+0x98],rsi
  41280f:	mov    rsi,QWORD PTR [rbp+0x88]
  412816:	mov    QWORD PTR [rbp+0x30],rdi
  41281a:	mov    rdi,QWORD PTR [rbp+0x68]
  41281e:	cmp    QWORD PTR [rbp+0x30],rdi
  412822:	mov    rdi,QWORD PTR [rbp+0x30]
  412826:	jae    0x41207a
  41282c:	xor    r15d,r15d
  41282f:	mov    r9d,0x1
  412835:	jmp    0x411bb4
  41283a:	cmp    rsi,r14
  41283d:	jb     0x411c30
  412843:	cmp    rsi,0xc
  412847:	mov    ebx,0xc
  41284c:	jbe    0x41217f
  412852:	jmp    0x412172
  412857:	cmp    rdx,rbx
  41285a:	ja     0x411ecc
  412860:	movsxd rdx,DWORD PTR [rbp+0xbc]
  412867:	test   edx,edx
  412869:	jns    0x41175f
  41286f:	call   QWORD PTR [rip+0x1d167]        # 0x42f9dc
  412875:	mov    ebx,DWORD PTR [rax]
  412877:	test   ebx,ebx
  412879:	jne    0x41288f
  41287b:	movzx  eax,BYTE PTR [r13+0x48]
  412880:	mov    bl,0x2a
  412882:	and    eax,0xffffffef
  412885:	cmp    al,0x63
  412887:	mov    eax,0x16
  41288c:	cmovne ebx,eax
  41288f:	mov    rax,QWORD PTR [rbp+0x98]
  412896:	test   rax,rax
  412899:	je     0x4128ac
  41289b:	cmp    QWORD PTR [rbp+0x4e0],rax
  4128a2:	je     0x4128ac
  4128a4:	mov    rcx,rax
  4128a7:	call   0x41d8a8
  4128ac:	mov    rax,QWORD PTR [rbp+0x50]
  4128b0:	test   rax,rax
  4128b3:	je     0x4128bd
  4128b5:	mov    rcx,rax
  4128b8:	call   0x41d8a8
  4128bd:	mov    rax,QWORD PTR [rbp+0x60]
  4128c1:	mov    rcx,QWORD PTR [rbp+0x208]
  4128c8:	add    rax,0x20
  4128cc:	cmp    rcx,rax
  4128cf:	je     0x4128d6
  4128d1:	call   0x41d8a8
  4128d6:	mov    rax,QWORD PTR [rbp+0x58]
  4128da:	mov    rcx,QWORD PTR [rbp+0x118]
  4128e1:	add    rax,0x10
  4128e5:	cmp    rcx,rax
  4128e8:	je     0x4128ef
  4128ea:	call   0x41d8a8
  4128ef:	call   QWORD PTR [rip+0x1d0e7]        # 0x42f9dc
  4128f5:	mov    DWORD PTR [rax],ebx
  4128f7:	xor    eax,eax
  4128f9:	jmp    0x41120b
  4128fe:	mov    rcx,rbx
  412901:	call   0x4104e0
  412906:	mov    r9,rax
  412909:	jmp    0x4121aa
  41290e:	test   rbx,rbx
  412911:	mov    QWORD PTR [rbp+0x98],rbx
  412918:	je     0x41164e
  41291e:	cmp    QWORD PTR [rbp+0x4e0],rbx
  412925:	je     0x41164e
  41292b:	mov    rcx,rbx
  41292e:	call   0x41d8a8
  412933:	jmp    0x41164e
  412938:	mov    r13,QWORD PTR [rbp+0x28]
  41293c:	mov    QWORD PTR [rbp+0x98],rbx
  412943:	jmp    0x4125fe
  412948:	mov    rcx,r12
  41294b:	call   0x4104e0
  412950:	mov    r9,rax
  412953:	jmp    0x41255b
  412958:	mov    r8,r14
  41295b:	mov    rdx,r15
  41295e:	mov    rcx,r9
  412961:	call   0x41d860
  412966:	mov    QWORD PTR [rbp+0x98],rax
  41296d:	jmp    0x4121c8
  412972:	cmp    r14,QWORD PTR [rbp+0x88]
  412979:	ja     0x411c20
  41297f:	mov    r12d,0xc
  412985:	jmp    0x411bfe
  41298a:	mov    rcx,r12
  41298d:	call   0x4104e0
  412992:	mov    r11,QWORD PTR [rbp+0x78]
  412996:	mov    r10,rax
  412999:	movzx  r8d,BYTE PTR [rbp+0x28]
  41299e:	mov    r9d,DWORD PTR [rbp+0x20]
  4129a2:	jmp    0x412012
  4129a7:	mov    r10,rbx
  4129aa:	jmp    0x412046
  4129af:	mov    rdx,rax
  4129b2:	jmp    0x411efb
  4129b7:	lea    rdx,[rax+0x1]
  4129bb:	jmp    0x411ebc
  4129c0:	mov    rdx,rbx
  4129c3:	mov    r8,r14
  4129c6:	mov    rcx,r9
  4129c9:	call   0x41d860
  4129ce:	mov    rbx,rax
  4129d1:	jmp    0x412575
  4129d6:	cmp    r15,rbx
  4129d9:	ja     0x411c30
  4129df:	mov    r12d,0xc
  4129e5:	jmp    0x412650
  4129ea:	mov    rcx,r12
  4129ed:	call   0x4104e0
  4129f2:	mov    r14,rax
  4129f5:	jmp    0x412698
  4129fa:	mov    r14,QWORD PTR [rbp+0x98]
  412a01:	jmp    0x4126bd
  412a06:	cmp    rsi,r14
  412a09:	jae    0x411c30
  412a0f:	mov    rbx,rax
  412a12:	jmp    0x41215d
  412a17:	mov    rax,QWORD PTR [rax+0x10]
  412a1b:	xor    edi,edi
  412a1d:	mov    QWORD PTR [rbp+0x98],rax
  412a24:	mov    rsi,rax
  412a27:	jmp    0x4124e6
  412a2c:	mov    QWORD PTR [rbp+0x98],rsi
  412a33:	mov    QWORD PTR [rbp+0x30],0x0
  412a3b:	jmp    0x41281a
  412a40:	mov    QWORD PTR [rbp+0x98],rsi
  412a47:	xor    edi,edi
  412a49:	jmp    0x4124e6
  412a4e:	mov    rdx,QWORD PTR [rbp-0x10]
  412a52:	call   0x418890
  412a57:	jmp    0x411eac
  412a5c:	mov    r15,r14
  412a5f:	jmp    0x4125ea
  412a64:	mov    r15,r14
  412a67:	jmp    0x4125f7
  412a6c:	mov    rsi,QWORD PTR [rax+0x10]
  412a70:	jmp    0x4126ef
  412a75:	mov    r12,rax
  412a78:	jmp    0x411368
  412a7d:	nop
  412a7e:	nop
  412a7f:	nop
  412a80:	test   r8,r8
  412a83:	mov    r9d,edx
  412a86:	je     0x412aa7
  412a88:	test   cl,0x3
  412a8b:	je     0x412ab4
  412a8d:	cmp    BYTE PTR [rcx],dl
  412a8f:	jne    0x412a9d
  412a91:	jmp    0x412ab0
  412a93:	test   cl,0x3
  412a96:	je     0x412ab4
  412a98:	cmp    BYTE PTR [rcx],r9b
  412a9b:	je     0x412ab0
  412a9d:	add    rcx,0x1
  412aa1:	sub    r8,0x1
  412aa5:	jne    0x412a93
  412aa7:	xor    eax,eax
  412aa9:	ret    
  412aaa:	nop    WORD PTR [rax+rax*1+0x0]
  412ab0:	mov    rax,rcx
  412ab3:	ret    
  412ab4:	movzx  eax,dl
  412ab7:	mov    r11d,eax
  412aba:	shl    r11d,0x8
  412abe:	or     r11d,eax
  412ac1:	mov    eax,r11d
  412ac4:	shl    eax,0x10
  412ac7:	or     r11d,eax
  412aca:	cmp    r8,0x3
  412ace:	ja     0x412ae0
  412ad0:	jmp    0x412af8
  412ad2:	sub    r8,0x4
  412ad6:	add    rcx,0x4
  412ada:	cmp    r8,0x3
  412ade:	jbe    0x412b20
  412ae0:	mov    eax,DWORD PTR [rcx]
  412ae2:	xor    eax,r11d
  412ae5:	lea    r10d,[rax-0x1010101]
  412aec:	not    eax
  412aee:	and    eax,r10d
  412af1:	test   eax,0x80808080
  412af6:	je     0x412ad2
  412af8:	add    r8,rcx
  412afb:	cmp    BYTE PTR [rcx],dl
  412afd:	lea    rax,[rcx+0x1]
  412b01:	jne    0x412b0f
  412b03:	jmp    0x412ab0
  412b05:	add    rax,0x1
  412b09:	cmp    BYTE PTR [rax-0x1],r9b
  412b0d:	je     0x412ab0
  412b0f:	cmp    rax,r8
  412b12:	mov    rcx,rax
  412b15:	jne    0x412b05
  412b17:	xor    eax,eax
  412b19:	ret    
  412b1a:	nop    WORD PTR [rax+rax*1+0x0]
  412b20:	test   r8,r8
  412b23:	jne    0x412af8
  412b25:	jmp    0x412aa7
  412b27:	nop
  412b28:	nop
  412b29:	nop
  412b2a:	nop
  412b2b:	nop
  412b2c:	nop
  412b2d:	nop
  412b2e:	nop
  412b2f:	nop
  412b30:	xor    r9d,r9d
  412b33:	cmp    QWORD PTR [rdx],0x0
  412b37:	mov    rax,QWORD PTR [rdx+0x8]
  412b3b:	lea    r10,[rip+0x13ed6]        # 0x426a18
  412b42:	je     0x412b78
  412b44:	cmp    DWORD PTR [rax],0x16
  412b47:	ja     0x412c14
  412b4d:	mov    r8d,DWORD PTR [rax]
  412b50:	movsxd r8,DWORD PTR [r10+r8*4]
  412b54:	add    r8,r10
  412b57:	jmp    r8
  412b5a:	nop    WORD PTR [rax+rax*1+0x0]
  412b60:	mov    r8,QWORD PTR [rcx]
  412b63:	add    rcx,0x8
  412b67:	mov    QWORD PTR [rax+0x10],r8
  412b6b:	add    r9,0x1
  412b6f:	add    rax,0x20
  412b73:	cmp    QWORD PTR [rdx],r9
  412b76:	ja     0x412b44
  412b78:	xor    eax,eax
  412b7a:	ret    
  412b7b:	nop    DWORD PTR [rax+rax*1+0x0]
  412b80:	mov    r8d,DWORD PTR [rcx]
  412b83:	add    rcx,0x8
  412b87:	mov    DWORD PTR [rax+0x10],r8d
  412b8b:	jmp    0x412b6b
  412b8d:	nop    DWORD PTR [rax]
  412b90:	mov    r8d,DWORD PTR [rcx]
  412b93:	add    rcx,0x8
  412b97:	mov    WORD PTR [rax+0x10],r8w
  412b9c:	jmp    0x412b6b
  412b9e:	xchg   ax,ax
  412ba0:	mov    r8d,DWORD PTR [rcx]
  412ba3:	add    rcx,0x8
  412ba7:	mov    BYTE PTR [rax+0x10],r8b
  412bab:	jmp    0x412b6b
  412bad:	nop    DWORD PTR [rax]
  412bb0:	movsd  xmm0,QWORD PTR [rcx]
  412bb4:	add    rcx,0x8
  412bb8:	movsd  QWORD PTR [rax+0x10],xmm0
  412bbd:	jmp    0x412b6b
  412bbf:	nop
  412bc0:	mov    r8,QWORD PTR [rcx]
  412bc3:	add    rcx,0x8
  412bc7:	fld    TBYTE PTR [r8]
  412bca:	fstp   TBYTE PTR [rax+0x10]
  412bcd:	jmp    0x412b6b
  412bcf:	nop
  412bd0:	mov    r8,QWORD PTR [rcx]
  412bd3:	add    rcx,0x8
  412bd7:	test   r8,r8
  412bda:	mov    QWORD PTR [rax+0x10],r8
  412bde:	jne    0x412b6b
  412be0:	lea    r11,[rip+0x13e29]        # 0x426a10
  412be7:	mov    QWORD PTR [rax+0x10],r11
  412beb:	jmp    0x412b6b
  412bf0:	mov    r8,QWORD PTR [rcx]
  412bf3:	add    rcx,0x8
  412bf7:	test   r8,r8
  412bfa:	mov    QWORD PTR [rax+0x10],r8
  412bfe:	jne    0x412b6b
  412c04:	lea    r11,[rip+0x13e69]        # 0x426a74
  412c0b:	mov    QWORD PTR [rax+0x10],r11
  412c0f:	jmp    0x412b6b
  412c14:	mov    eax,0xffffffff
  412c19:	ret    
  412c1a:	nop
  412c1b:	nop
  412c1c:	nop
  412c1d:	nop
  412c1e:	nop
  412c1f:	nop
  412c20:	push   r15
  412c22:	push   r14
  412c24:	push   r13
  412c26:	push   r12
  412c28:	push   rbp
  412c29:	push   rdi
  412c2a:	push   rsi
  412c2b:	push   rbx
  412c2c:	sub    rsp,0x58
  412c30:	xor    r10d,r10d
  412c33:	mov    r14d,0x7
  412c39:	lea    rax,[rdx+0x20]
  412c3d:	lea    r15,[r8+0x10]
  412c41:	mov    QWORD PTR [rdx],0x0
  412c48:	mov    rbx,rcx
  412c4b:	mov    r12,rdx
  412c4e:	mov    r13,r8
  412c51:	mov    QWORD PTR [rdx+0x8],rax
  412c55:	mov    QWORD PTR [rsp+0x30],rax
  412c5a:	mov    QWORD PTR [r8],0x0
  412c61:	mov    QWORD PTR [r8+0x8],r15
  412c65:	mov    r9,QWORD PTR [rdx+0x8]
  412c69:	mov    rcx,QWORD PTR [rdx]
  412c6c:	mov    QWORD PTR [rsp+0x20],0x0
  412c75:	mov    QWORD PTR [rsp+0x28],0x7
  412c7e:	mov    QWORD PTR [rsp+0x38],0x0
  412c87:	jmp    0x412c9b
  412c89:	nop    DWORD PTR [rax+0x0]
  412c90:	cmp    al,0x25
  412c92:	lea    r11,[rbx+0x1]
  412c96:	je     0x412cd0
  412c98:	mov    rbx,r11
  412c9b:	movzx  eax,BYTE PTR [rbx]
  412c9e:	test   al,al
  412ca0:	jne    0x412c90
  412ca2:	lea    rax,[rcx+rcx*4]
  412ca6:	lea    rax,[rcx+rax*2]
  412caa:	mov    QWORD PTR [r9+rax*8],rbx
  412cae:	mov    rax,QWORD PTR [rsp+0x20]
  412cb3:	mov    QWORD PTR [r12+0x10],r10
  412cb8:	mov    QWORD PTR [r12+0x18],rax
  412cbd:	xor    eax,eax
  412cbf:	add    rsp,0x58
  412cc3:	pop    rbx
  412cc4:	pop    rsi
  412cc5:	pop    rdi
  412cc6:	pop    rbp
  412cc7:	pop    r12
  412cc9:	pop    r13
  412ccb:	pop    r14
  412ccd:	pop    r15
  412ccf:	ret    
  412cd0:	lea    rax,[rcx+rcx*4]
  412cd4:	lea    rax,[rcx+rax*2]
  412cd8:	lea    rsi,[r9+rax*8]
  412cdc:	mov    QWORD PTR [rsi],rbx
  412cdf:	mov    DWORD PTR [rsi+0x10],0x0
  412ce6:	mov    QWORD PTR [rsi+0x18],0x0
  412cee:	mov    QWORD PTR [rsi+0x20],0x0
  412cf6:	mov    QWORD PTR [rsi+0x28],0xffffffffffffffff
  412cfe:	mov    QWORD PTR [rsi+0x30],0x0
  412d06:	mov    QWORD PTR [rsi+0x38],0x0
  412d0e:	mov    QWORD PTR [rsi+0x40],0xffffffffffffffff
  412d16:	mov    QWORD PTR [rsi+0x50],0xffffffffffffffff
  412d1e:	movsx  eax,BYTE PTR [rbx+0x1]
  412d22:	lea    edx,[rax-0x30]
  412d25:	cmp    dl,0x9
  412d28:	jbe    0x412f24
  412d2e:	mov    rdi,0xffffffffffffffff
  412d35:	lea    rcx,[r11+0x1]
  412d39:	jmp    0x412d67
  412d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  412d40:	cmp    al,0x2d
  412d42:	je     0x412d75
  412d44:	cmp    al,0x2b
  412d46:	je     0x412d80
  412d48:	cmp    al,0x20
  412d4a:	je     0x412d90
  412d4c:	cmp    al,0x23
  412d4e:	je     0x412da0
  412d50:	cmp    al,0x30
  412d52:	jne    0x412da6
  412d54:	or     DWORD PTR [rsi+0x10],0x20
  412d58:	nop    DWORD PTR [rax+rax*1+0x0]
  412d60:	movzx  eax,BYTE PTR [rcx]
  412d63:	add    rcx,0x1
  412d67:	cmp    al,0x27
  412d69:	lea    rbx,[rcx-0x1]
  412d6d:	jne    0x412d40
  412d6f:	or     DWORD PTR [rsi+0x10],0x1
  412d73:	jmp    0x412d60
  412d75:	or     DWORD PTR [rsi+0x10],0x2
  412d79:	jmp    0x412d60
  412d7b:	nop    DWORD PTR [rax+rax*1+0x0]
  412d80:	or     DWORD PTR [rsi+0x10],0x4
  412d84:	jmp    0x412d60
  412d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412d90:	or     DWORD PTR [rsi+0x10],0x8
  412d94:	jmp    0x412d60
  412d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412da0:	or     DWORD PTR [rsi+0x10],0x10
  412da4:	jmp    0x412d60
  412da6:	cmp    al,0x2a
  412da8:	mov    rdx,rbx
  412dab:	je     0x413021
  412db1:	lea    ecx,[rax-0x30]
  412db4:	cmp    cl,0x9
  412db7:	jbe    0x412fc3
  412dbd:	cmp    al,0x2e
  412dbf:	je     0x412e59
  412dc5:	xor    edx,edx
  412dc7:	mov    r8d,0x1
  412dcd:	jmp    0x412e13
  412dcf:	nop
  412dd0:	cmp    al,0x4c
  412dd2:	je     0x412e40
  412dd4:	cmp    al,0x6c
  412dd6:	je     0x412e50
  412dd8:	cmp    al,0x6a
  412dda:	je     0x412e30
  412ddc:	mov    ecx,eax
  412dde:	and    ecx,0xffffffdf
  412de1:	cmp    cl,0x5a
  412de4:	je     0x412e30
  412de6:	cmp    al,0x74
  412de8:	je     0x412e30
  412dea:	cmp    al,0x49
  412dec:	jne    0x412ffc
  412df2:	cmp    BYTE PTR [rbx+0x1],0x36
  412df6:	jne    0x412eef
  412dfc:	cmp    BYTE PTR [rbx+0x2],0x34
  412e00:	jne    0x412eef
  412e06:	add    edx,0x10
  412e09:	add    rbx,0x3
  412e0d:	nop    DWORD PTR [rax]
  412e10:	movzx  eax,BYTE PTR [rbx]
  412e13:	cmp    al,0x68
  412e15:	jne    0x412dd0
  412e17:	mov    ecx,edx
  412e19:	mov    eax,r8d
  412e1c:	add    rbx,0x1
  412e20:	and    ecx,0x1
  412e23:	shl    eax,cl
  412e25:	or     edx,eax
  412e27:	jmp    0x412e10
  412e29:	nop    DWORD PTR [rax+0x0]
  412e30:	add    edx,0x10
  412e33:	add    rbx,0x1
  412e37:	jmp    0x412e10
  412e39:	nop    DWORD PTR [rax+0x0]
  412e40:	or     edx,0x4
  412e43:	add    rbx,0x1
  412e47:	jmp    0x412e10
  412e49:	nop    DWORD PTR [rax+0x0]
  412e50:	add    edx,0x8
  412e53:	add    rbx,0x1
  412e57:	jmp    0x412e10
  412e59:	cmp    BYTE PTR [rbx+0x1],0x2a
  412e5d:	jne    0x4130c7
  412e63:	lea    rbp,[rbx+0x2]
  412e67:	mov    QWORD PTR [rsi+0x30],rbx
  412e6b:	cmp    QWORD PTR [rsp+0x20],0x1
  412e71:	mov    QWORD PTR [rsi+0x38],rbp
  412e75:	movsx  eax,BYTE PTR [rbx+0x2]
  412e79:	lea    edx,[rax-0x30]
  412e7c:	jbe    0x413320
  412e82:	cmp    dl,0x9
  412e85:	ja     0x413332
  412e8b:	mov    rdx,rbp
  412e8e:	add    rdx,0x1
  412e92:	movzx  ecx,BYTE PTR [rdx]
  412e95:	lea    r8d,[rcx-0x30]
  412e99:	cmp    r8b,0x9
  412e9d:	jbe    0x412e8e
  412e9f:	cmp    cl,0x24
  412ea2:	jne    0x413332
  412ea8:	xor    ebx,ebx
  412eaa:	movabs rcx,0x1999999999999999
  412eb4:	sub    eax,0x30
  412eb7:	mov    rdx,0xffffffffffffffff
  412ebe:	cmp    rbx,rcx
  412ec1:	cdqe   
  412ec3:	ja     0x412ecc
  412ec5:	lea    rdx,[rbx+rbx*4]
  412ec9:	add    rdx,rdx
  412ecc:	add    rdx,rax
  412ecf:	mov    rbx,rdx
  412ed2:	jae    0x4136ae
  412ed8:	add    rbp,0x1
  412edc:	movsx  eax,BYTE PTR [rbp+0x0]
  412ee0:	mov    rbx,0xffffffffffffffff
  412ee7:	lea    edx,[rax-0x30]
  412eea:	cmp    dl,0x9
  412eed:	jbe    0x412eaa
  412eef:	mov    rcx,QWORD PTR [r13+0x8]
  412ef3:	cmp    r15,rcx
  412ef6:	je     0x412efd
  412ef8:	call   0x41d8a8
  412efd:	mov    rcx,QWORD PTR [r12+0x8]
  412f02:	cmp    QWORD PTR [rsp+0x30],rcx
  412f07:	je     0x412f0e
  412f09:	call   0x41d8a8
  412f0e:	call   QWORD PTR [rip+0x1cac8]        # 0x42f9dc
  412f14:	mov    DWORD PTR [rax],0x16
  412f1a:	mov    eax,0xffffffff
  412f1f:	jmp    0x412cbf
  412f24:	mov    rdx,r11
  412f27:	nop    WORD PTR [rax+rax*1+0x0]
  412f30:	add    rdx,0x1
  412f34:	movzx  r8d,BYTE PTR [rdx]
  412f38:	lea    ecx,[r8-0x30]
  412f3c:	cmp    cl,0x9
  412f3f:	jbe    0x412f30
  412f41:	cmp    r8b,0x24
  412f45:	jne    0x412d2e
  412f4b:	mov    rcx,r11
  412f4e:	xor    edi,edi
  412f50:	jmp    0x412f6c
  412f52:	movsx  eax,BYTE PTR [rcx+0x1]
  412f56:	lea    rdx,[rcx+0x1]
  412f5a:	mov    rdi,0xffffffffffffffff
  412f61:	lea    ecx,[rax-0x30]
  412f64:	cmp    cl,0x9
  412f67:	ja     0x412eef
  412f69:	mov    rcx,rdx
  412f6c:	movabs rbx,0x1999999999999999
  412f76:	sub    eax,0x30
  412f79:	mov    rdx,0xffffffffffffffff
  412f80:	cmp    rdi,rbx
  412f83:	cdqe   
  412f85:	ja     0x412f8e
  412f87:	lea    rdx,[rdi+rdi*4]
  412f8b:	add    rdx,rdx
  412f8e:	mov    rdi,rdx
  412f91:	add    rdi,rax
  412f94:	jb     0x412f52
  412f96:	movsx  eax,BYTE PTR [rcx+0x1]
  412f9a:	lea    rdx,[rcx+0x1]
  412f9e:	lea    r8d,[rax-0x30]
  412fa2:	cmp    r8b,0x9
  412fa6:	jbe    0x412f69
  412fa8:	sub    rdi,0x1
  412fac:	cmp    rdi,0xfffffffffffffffd
  412fb0:	ja     0x412eef
  412fb6:	lea    r11,[rcx+0x2]
  412fba:	movzx  eax,BYTE PTR [rcx+0x2]
  412fbe:	jmp    0x412d35
  412fc3:	mov    QWORD PTR [rsi+0x18],rbx
  412fc7:	movzx  eax,BYTE PTR [rbx]
  412fca:	sub    eax,0x30
  412fcd:	cmp    al,0x9
  412fcf:	ja     0x41370c
  412fd5:	add    rbx,0x1
  412fd9:	movzx  eax,BYTE PTR [rbx]
  412fdc:	sub    eax,0x30
  412fdf:	cmp    al,0x9
  412fe1:	jbe    0x412fd5
  412fe3:	mov    rax,rbx
  412fe6:	sub    rax,rdx
  412fe9:	cmp    r10,rax
  412fec:	mov    QWORD PTR [rsi+0x20],rbx
  412ff0:	cmovb  r10,rax
  412ff4:	movzx  eax,BYTE PTR [rbx]
  412ff7:	jmp    0x412dbd
  412ffc:	lea    ecx,[rax-0x25]
  412fff:	add    rbx,0x1
  413003:	mov    ebp,eax
  413005:	cmp    cl,0x53
  413008:	ja     0x412eef
  41300e:	lea    r9,[rip+0x13a7b]        # 0x426a90
  413015:	movzx  ecx,cl
  413018:	movsxd rcx,DWORD PTR [r9+rcx*4]
  41301c:	add    rcx,r9
  41301f:	jmp    rcx
  413021:	mov    QWORD PTR [rsi+0x18],rbx
  413025:	mov    QWORD PTR [rsi+0x20],rcx
  413029:	test   r10,r10
  41302c:	movsx  eax,BYTE PTR [rdx+0x1]
  413030:	mov    rbx,rcx
  413033:	lea    edx,[rax-0x30]
  413036:	jne    0x413186
  41303c:	cmp    dl,0x9
  41303f:	jbe    0x413114
  413045:	mov    r10d,0x1
  41304b:	mov    rbp,QWORD PTR [rsp+0x38]
  413050:	mov    rax,rbp
  413053:	mov    QWORD PTR [rsi+0x28],rbp
  413057:	add    rax,0x1
  41305b:	cmp    rbp,0xffffffffffffffff
  41305f:	je     0x412eef
  413065:	mov    QWORD PTR [rsp+0x38],rax
  41306a:	cmp    r14,rbp
  41306d:	jbe    0x413439
  413073:	mov    rcx,QWORD PTR [r13+0x8]
  413077:	mov    rax,QWORD PTR [r13+0x0]
  41307b:	mov    rdx,rax
  41307e:	shl    rdx,0x5
  413082:	add    rdx,rcx
  413085:	cmp    rbp,rax
  413088:	jb     0x4130a7
  41308a:	nop    WORD PTR [rax+rax*1+0x0]
  413090:	add    rax,0x1
  413094:	mov    DWORD PTR [rdx],0x0
  41309a:	add    rdx,0x20
  41309e:	cmp    rax,rbp
  4130a1:	jbe    0x413090
  4130a3:	mov    QWORD PTR [r13+0x0],rax
  4130a7:	shl    rbp,0x5
  4130ab:	lea    rax,[rcx+rbp*1]
  4130af:	mov    edx,DWORD PTR [rax]
  4130b1:	test   edx,edx
  4130b3:	jne    0x413568
  4130b9:	mov    DWORD PTR [rax],0x5
  4130bf:	movzx  eax,BYTE PTR [rbx]
  4130c2:	jmp    0x412dbd
  4130c7:	mov    QWORD PTR [rsi+0x30],rbx
  4130cb:	movzx  eax,BYTE PTR [rbx+0x1]
  4130cf:	lea    rdx,[rbx+0x1]
  4130d3:	sub    eax,0x30
  4130d6:	cmp    al,0x9
  4130d8:	ja     0x4130ee
  4130da:	nop    WORD PTR [rax+rax*1+0x0]
  4130e0:	add    rdx,0x1
  4130e4:	movzx  eax,BYTE PTR [rdx]
  4130e7:	sub    eax,0x30
  4130ea:	cmp    al,0x9
  4130ec:	jbe    0x4130e0
  4130ee:	mov    rax,rdx
  4130f1:	mov    QWORD PTR [rsi+0x38],rdx
  4130f5:	sub    rax,rbx
  4130f8:	mov    rbx,QWORD PTR [rsp+0x20]
  4130fd:	cmp    rbx,rax
  413100:	cmovae rax,rbx
  413104:	mov    rbx,rdx
  413107:	mov    QWORD PTR [rsp+0x20],rax
  41310c:	movzx  eax,BYTE PTR [rdx]
  41310f:	jmp    0x412dc5
  413114:	mov    r10b,0x1
  413117:	nop    WORD PTR [rax+rax*1+0x0]
  413120:	add    rcx,0x1
  413124:	movzx  edx,BYTE PTR [rcx]
  413127:	lea    r8d,[rdx-0x30]
  41312b:	cmp    r8b,0x9
  41312f:	jbe    0x413120
  413131:	cmp    dl,0x24
  413134:	jne    0x41304b
  41313a:	xor    ebp,ebp
  41313c:	movabs rcx,0x1999999999999999
  413146:	sub    eax,0x30
  413149:	mov    rdx,0xffffffffffffffff
  413150:	cmp    rbp,rcx
  413153:	cdqe   
  413155:	ja     0x41315f
  413157:	lea    rdx,[rbp+rbp*4+0x0]
  41315c:	add    rdx,rdx
  41315f:	add    rdx,rax
  413162:	mov    rbp,rdx
  413165:	jae    0x413680
  41316b:	add    rbx,0x1
  41316f:	movsx  eax,BYTE PTR [rbx]
  413172:	mov    rbp,0xffffffffffffffff
  413179:	lea    edx,[rax-0x30]
  41317c:	cmp    dl,0x9
  41317f:	jbe    0x41313c
  413181:	jmp    0x412eef
  413186:	cmp    dl,0x9
  413189:	jbe    0x413120
  41318b:	jmp    0x41304b
  413190:	cmp    edx,0xf
  413193:	mov    r9d,0xc
  413199:	jle    0x41360d
  41319f:	cmp    rdi,0xffffffffffffffff
  4131a3:	je     0x413580
  4131a9:	mov    QWORD PTR [rsi+0x50],rdi
  4131ad:	cmp    r14,rdi
  4131b0:	jbe    0x41348c
  4131b6:	mov    rcx,QWORD PTR [r13+0x8]
  4131ba:	mov    rax,QWORD PTR [r13+0x0]
  4131be:	mov    rdx,rax
  4131c1:	shl    rdx,0x5
  4131c5:	add    rdx,rcx
  4131c8:	cmp    rdi,rax
  4131cb:	jb     0x4131e7
  4131cd:	nop    DWORD PTR [rax]
  4131d0:	add    rax,0x1
  4131d4:	mov    DWORD PTR [rdx],0x0
  4131da:	add    rdx,0x20
  4131de:	cmp    rax,rdi
  4131e1:	jbe    0x4131d0
  4131e3:	mov    QWORD PTR [r13+0x0],rax
  4131e7:	shl    rdi,0x5
  4131eb:	lea    rax,[rcx+rdi*1]
  4131ef:	mov    edx,DWORD PTR [rax]
  4131f1:	test   edx,edx
  4131f3:	jne    0x413500
  4131f9:	mov    DWORD PTR [rax],r9d
  4131fc:	mov    BYTE PTR [rsi+0x48],bpl
  413200:	mov    rax,QWORD PTR [r12]
  413204:	mov    QWORD PTR [rsi+0x8],rbx
  413208:	lea    rcx,[rax+0x1]
  41320c:	cmp    rcx,QWORD PTR [rsp+0x28]
  413211:	mov    QWORD PTR [r12],rcx
  413215:	jae    0x4133c0
  41321b:	mov    r9,QWORD PTR [r12+0x8]
  413220:	jmp    0x412c9b
  413225:	xor    r9d,r9d
  413228:	cmp    edx,0x7
  41322b:	mov    ebp,eax
  41322d:	setg   r9b
  413231:	add    r9d,0xf
  413235:	jmp    0x41319f
  41323a:	cmp    edx,0xf
  41323d:	jg     0x413270
  41323f:	test   dl,0x4
  413242:	jne    0x413270
  413244:	cmp    edx,0x7
  413247:	jg     0x4137b8
  41324d:	test   dl,0x2
  413250:	jne    0x4137ab
  413256:	and    edx,0x1
  413259:	mov    ebp,eax
  41325b:	neg    edx
  41325d:	mov    r9d,edx
  413260:	add    r9d,0x14
  413264:	jmp    0x41319f
  413269:	nop    DWORD PTR [rax+0x0]
  413270:	mov    ebp,eax
  413272:	mov    r9d,0x16
  413278:	jmp    0x41319f
  41327d:	cmp    edx,0xf
  413280:	mov    r9d,0x9
  413286:	jg     0x41319f
  41328c:	test   dl,0x4
  41328f:	jne    0x41319f
  413295:	cmp    edx,0x7
  413298:	mov    r9b,0x7
  41329b:	jg     0x41319f
  4132a1:	test   dl,0x2
  4132a4:	mov    r9b,0x1
  4132a7:	jne    0x41319f
  4132ad:	and    edx,0x1
  4132b0:	cmp    edx,0x1
  4132b3:	sbb    r9d,r9d
  4132b6:	and    r9d,0x2
  4132ba:	add    r9d,0x3
  4132be:	jmp    0x41319f
  4132c3:	xor    r9d,r9d
  4132c6:	cmp    edx,0x7
  4132c9:	mov    ebp,eax
  4132cb:	setg   r9b
  4132cf:	add    r9d,0xd
  4132d3:	jmp    0x41319f
  4132d8:	cmp    edx,0xf
  4132db:	mov    r9d,0xa
  4132e1:	jg     0x41319f
  4132e7:	test   dl,0x4
  4132ea:	jne    0x41319f
  4132f0:	cmp    edx,0x7
  4132f3:	mov    r9b,0x8
  4132f6:	jg     0x41319f
  4132fc:	test   dl,0x2
  4132ff:	mov    r9b,0x2
  413302:	jne    0x41319f
  413308:	and    edx,0x1
  41330b:	cmp    edx,0x1
  41330e:	sbb    r9d,r9d
  413311:	and    r9d,0x2
  413315:	add    r9d,0x4
  413319:	jmp    0x41319f
  41331e:	xchg   ax,ax
  413320:	cmp    dl,0x9
  413323:	mov    QWORD PTR [rsp+0x20],0x2
  41332c:	jbe    0x412e8b
  413332:	mov    rbx,QWORD PTR [rsi+0x40]
  413336:	cmp    rbx,0xffffffffffffffff
  41333a:	je     0x413653
  413340:	cmp    r14,rbx
  413343:	ja     0x4135b9
  413349:	test   r14,r14
  41334c:	js     0x413457
  413352:	add    r14,r14
  413355:	cmp    r14,rbx
  413358:	ja     0x413367
  41335a:	lea    r14,[rbx+0x1]
  41335e:	cmp    r14,rbx
  413361:	jb     0x413457
  413367:	movabs rax,0x7ffffffffffffff
  413371:	cmp    r14,rax
  413374:	ja     0x413457
  41337a:	mov    rcx,QWORD PTR [r13+0x8]
  41337e:	mov    rdx,r14
  413381:	mov    QWORD PTR [rsp+0x40],r10
  413386:	shl    rdx,0x5
  41338a:	cmp    r15,rcx
  41338d:	je     0x4137ea
  413393:	call   0x410be0
  413398:	mov    r10,QWORD PTR [rsp+0x40]
  41339d:	mov    r9,rax
  4133a0:	test   r9,r9
  4133a3:	je     0x413457
  4133a9:	cmp    r15,QWORD PTR [r13+0x8]
  4133ad:	je     0x4137c5
  4133b3:	mov    QWORD PTR [r13+0x8],r9
  4133b7:	mov    rcx,r9
  4133ba:	jmp    0x4135bd
  4133bf:	nop
  4133c0:	mov    rax,QWORD PTR [rsp+0x28]
  4133c5:	test   rax,rax
  4133c8:	js     0x413457
  4133ce:	add    rax,rax
  4133d1:	mov    rdi,rax
  4133d4:	mov    QWORD PTR [rsp+0x28],rax
  4133d9:	movabs rax,0x2e8ba2e8ba2e8ba
  4133e3:	cmp    rdi,rax
  4133e6:	ja     0x413457
  4133e8:	lea    rax,[rdi+rdi*4]
  4133ec:	mov    rcx,QWORD PTR [r12+0x8]
  4133f1:	mov    QWORD PTR [rsp+0x40],r10
  4133f6:	lea    rdx,[rdi+rax*2]
  4133fa:	shl    rdx,0x3
  4133fe:	cmp    QWORD PTR [rsp+0x30],rcx
  413403:	je     0x4135a4
  413409:	call   0x410be0
  41340e:	mov    r10,QWORD PTR [rsp+0x40]
  413413:	mov    r9,rax
  413416:	test   r9,r9
  413419:	je     0x413457
  41341b:	mov    rax,QWORD PTR [rsp+0x30]
  413420:	cmp    rax,QWORD PTR [r12+0x8]
  413425:	je     0x413713
  41342b:	mov    QWORD PTR [r12+0x8],r9
  413430:	mov    rcx,QWORD PTR [r12]
  413434:	jmp    0x412c9b
  413439:	test   r14,r14
  41343c:	js     0x413457
  41343e:	add    r14,r14
  413441:	cmp    r14,rbp
  413444:	ja     0x413510
  41344a:	lea    r14,[rbp+0x1]
  41344e:	cmp    r14,rbp
  413451:	jae    0x413510
  413457:	mov    rcx,QWORD PTR [r13+0x8]
  41345b:	cmp    r15,rcx
  41345e:	je     0x413465
  413460:	call   0x41d8a8
  413465:	mov    rcx,QWORD PTR [r12+0x8]
  41346a:	cmp    QWORD PTR [rsp+0x30],rcx
  41346f:	je     0x413476
  413471:	call   0x41d8a8
  413476:	call   QWORD PTR [rip+0x1c560]        # 0x42f9dc
  41347c:	mov    DWORD PTR [rax],0xc
  413482:	mov    eax,0xffffffff
  413487:	jmp    0x412cbf
  41348c:	test   r14,r14
  41348f:	js     0x413457
  413491:	add    r14,r14
  413494:	cmp    r14,rdi
  413497:	ja     0x4134a2
  413499:	lea    r14,[rdi+0x1]
  41349d:	cmp    r14,rdi
  4134a0:	jb     0x413457
  4134a2:	movabs rax,0x7ffffffffffffff
  4134ac:	cmp    r14,rax
  4134af:	ja     0x413457
  4134b1:	mov    rcx,QWORD PTR [r13+0x8]
  4134b5:	mov    rdx,r14
  4134b8:	mov    QWORD PTR [rsp+0x48],r10
  4134bd:	shl    rdx,0x5
  4134c1:	mov    DWORD PTR [rsp+0x40],r9d
  4134c6:	cmp    r15,rcx
  4134c9:	je     0x4136dd
  4134cf:	call   0x410be0
  4134d4:	mov    r9d,DWORD PTR [rsp+0x40]
  4134d9:	mov    r10,QWORD PTR [rsp+0x48]
  4134de:	mov    r11,rax
  4134e1:	test   r11,r11
  4134e4:	je     0x413457
  4134ea:	cmp    r15,QWORD PTR [r13+0x8]
  4134ee:	je     0x41377c
  4134f4:	mov    QWORD PTR [r13+0x8],r11
  4134f8:	mov    rcx,r11
  4134fb:	jmp    0x4131ba
  413500:	cmp    r9d,edx
  413503:	je     0x4131fc
  413509:	jmp    0x412ef3
  41350e:	xchg   ax,ax
  413510:	movabs rax,0x7ffffffffffffff
  41351a:	cmp    r14,rax
  41351d:	ja     0x413457
  413523:	mov    rcx,QWORD PTR [r13+0x8]
  413527:	mov    rdx,r14
  41352a:	mov    QWORD PTR [rsp+0x40],r10
  41352f:	shl    rdx,0x5
  413533:	cmp    r15,rcx
  413536:	je     0x413742
  41353c:	call   0x410be0
  413541:	mov    r10,QWORD PTR [rsp+0x40]
  413546:	mov    r9,rax
  413549:	test   r9,r9
  41354c:	je     0x413457
  413552:	cmp    r15,QWORD PTR [r13+0x8]
  413556:	je     0x413757
  41355c:	mov    QWORD PTR [r13+0x8],r9
  413560:	mov    rcx,r9
  413563:	jmp    0x413077
  413568:	cmp    edx,0x5
  41356b:	je     0x412ff4
  413571:	jmp    0x412ef3
  413576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413580:	mov    rdi,QWORD PTR [rsp+0x38]
  413585:	mov    rax,rdi
  413588:	mov    QWORD PTR [rsi+0x50],rdi
  41358c:	add    rax,0x1
  413590:	cmp    rdi,0xffffffffffffffff
  413594:	je     0x412eef
  41359a:	mov    QWORD PTR [rsp+0x38],rax
  41359f:	jmp    0x4131ad
  4135a4:	mov    rcx,rdx
  4135a7:	call   0x4104e0
  4135ac:	mov    r10,QWORD PTR [rsp+0x40]
  4135b1:	mov    r9,rax
  4135b4:	jmp    0x413416
  4135b9:	mov    rcx,QWORD PTR [r13+0x8]
  4135bd:	mov    rax,QWORD PTR [r13+0x0]
  4135c1:	mov    rdx,rax
  4135c4:	shl    rdx,0x5
  4135c8:	add    rdx,rcx
  4135cb:	cmp    rbx,rax
  4135ce:	jb     0x4135e7
  4135d0:	add    rax,0x1
  4135d4:	mov    DWORD PTR [rdx],0x0
  4135da:	add    rdx,0x20
  4135de:	cmp    rax,rbx
  4135e1:	jbe    0x4135d0
  4135e3:	mov    QWORD PTR [r13+0x0],rax
  4135e7:	mov    rax,rbx
  4135ea:	shl    rax,0x5
  4135ee:	add    rax,rcx
  4135f1:	mov    edx,DWORD PTR [rax]
  4135f3:	test   edx,edx
  4135f5:	jne    0x4136f7
  4135fb:	mov    DWORD PTR [rax],0x5
  413601:	mov    rbx,rbp
  413604:	movzx  eax,BYTE PTR [rbp+0x0]
  413608:	jmp    0x412dc5
  41360d:	and    edx,0x4
  413610:	cmp    edx,0x1
  413613:	sbb    r9d,r9d
  413616:	add    r9d,0xc
  41361a:	jmp    0x41319f
  41361f:	mov    r9d,0xe
  413625:	mov    ebp,0x63
  41362a:	jmp    0x41319f
  41362f:	mov    ebp,eax
  413631:	jmp    0x4131fc
  413636:	mov    ebp,eax
  413638:	mov    r9d,0x11
  41363e:	jmp    0x41319f
  413643:	mov    r9d,0x10
  413649:	mov    ebp,0x73
  41364e:	jmp    0x41319f
  413653:	mov    rbx,QWORD PTR [rsp+0x38]
  413658:	mov    rax,rbx
  41365b:	mov    QWORD PTR [rsi+0x40],rbx
  41365f:	add    rax,0x1
  413663:	cmp    rbx,0xffffffffffffffff
  413667:	je     0x412eef
  41366d:	mov    QWORD PTR [rsp+0x38],rax
  413672:	jmp    0x413340
  413677:	nop    WORD PTR [rax+rax*1+0x0]
  413680:	add    rbx,0x1
  413684:	movsx  eax,BYTE PTR [rbx]
  413687:	lea    edx,[rax-0x30]
  41368a:	cmp    dl,0x9
  41368d:	jbe    0x41313c
  413693:	sub    rbp,0x1
  413697:	cmp    rbp,0xfffffffffffffffd
  41369b:	ja     0x412eef
  4136a1:	mov    QWORD PTR [rsi+0x28],rbp
  4136a5:	add    rbx,0x1
  4136a9:	jmp    0x41306a
  4136ae:	add    rbp,0x1
  4136b2:	movsx  eax,BYTE PTR [rbp+0x0]
  4136b6:	lea    edx,[rax-0x30]
  4136b9:	cmp    dl,0x9
  4136bc:	jbe    0x412eaa
  4136c2:	sub    rbx,0x1
  4136c6:	cmp    rbx,0xfffffffffffffffd
  4136ca:	ja     0x412eef
  4136d0:	mov    QWORD PTR [rsi+0x40],rbx
  4136d4:	add    rbp,0x1
  4136d8:	jmp    0x413340
  4136dd:	mov    rcx,rdx
  4136e0:	call   0x4104e0
  4136e5:	mov    r10,QWORD PTR [rsp+0x48]
  4136ea:	mov    r11,rax
  4136ed:	mov    r9d,DWORD PTR [rsp+0x40]
  4136f2:	jmp    0x4134e1
  4136f7:	cmp    edx,0x5
  4136fa:	jne    0x412ef3
  413700:	movzx  eax,BYTE PTR [rbp+0x0]
  413704:	mov    rbx,rbp
  413707:	jmp    0x412dc5
  41370c:	xor    eax,eax
  41370e:	jmp    0x412fe9
  413713:	mov    rax,QWORD PTR [r12]
  413717:	mov    rcx,r9
  41371a:	mov    QWORD PTR [rsp+0x40],r10
  41371f:	lea    rdx,[rax+rax*4]
  413723:	lea    r8,[rax+rdx*2]
  413727:	mov    rdx,QWORD PTR [rsp+0x30]
  41372c:	shl    r8,0x3
  413730:	call   0x41d860
  413735:	mov    r10,QWORD PTR [rsp+0x40]
  41373a:	mov    r9,rax
  41373d:	jmp    0x41342b
  413742:	mov    rcx,rdx
  413745:	call   0x4104e0
  41374a:	mov    r10,QWORD PTR [rsp+0x40]
  41374f:	mov    r9,rax
  413752:	jmp    0x413549
  413757:	mov    r8,QWORD PTR [r13+0x0]
  41375b:	mov    rcx,r9
  41375e:	mov    rdx,r15
  413761:	mov    QWORD PTR [rsp+0x40],r10
  413766:	shl    r8,0x5
  41376a:	call   0x41d860
  41376f:	mov    r10,QWORD PTR [rsp+0x40]
  413774:	mov    r9,rax
  413777:	jmp    0x41355c
  41377c:	mov    r8,QWORD PTR [r13+0x0]
  413780:	mov    rcx,r11
  413783:	mov    rdx,r15
  413786:	mov    QWORD PTR [rsp+0x48],r10
  41378b:	mov    DWORD PTR [rsp+0x40],r9d
  413790:	shl    r8,0x5
  413794:	call   0x41d860
  413799:	mov    r10,QWORD PTR [rsp+0x48]
  41379e:	mov    r11,rax
  4137a1:	mov    r9d,DWORD PTR [rsp+0x40]
  4137a6:	jmp    0x4134f4
  4137ab:	mov    ebp,eax
  4137ad:	mov    r9d,0x12
  4137b3:	jmp    0x41319f
  4137b8:	mov    ebp,eax
  4137ba:	mov    r9d,0x15
  4137c0:	jmp    0x41319f
  4137c5:	mov    r8,QWORD PTR [r13+0x0]
  4137c9:	mov    rcx,r9
  4137cc:	mov    rdx,r15
  4137cf:	mov    QWORD PTR [rsp+0x40],r10
  4137d4:	shl    r8,0x5
  4137d8:	call   0x41d860
  4137dd:	mov    r10,QWORD PTR [rsp+0x40]
  4137e2:	mov    r9,rax
  4137e5:	jmp    0x4133b3
  4137ea:	mov    rcx,rdx
  4137ed:	call   0x4104e0
  4137f2:	mov    r10,QWORD PTR [rsp+0x40]
  4137f7:	mov    r9,rax
  4137fa:	jmp    0x4133a0
  4137ff:	nop
  413800:	push   rbx
  413801:	sub    rsp,0x20
  413805:	mov    ebx,ecx
  413807:	call   0x410bb0
  41380c:	mov    ecx,ebx
  41380e:	add    rsp,0x20
  413812:	pop    rbx
  413813:	jmp    0x41d748
  413818:	nop    DWORD PTR [rax+rax*1+0x0]
  413820:	mov    edx,ecx
  413822:	lea    rcx,[rip+0xffffffffffffffd7]        # 0x413800
  413829:	jmp    0x416220
  41382e:	nop
  41382f:	nop
  413830:	push   rsi
  413831:	push   rbx
  413832:	sub    rsp,0x38
  413836:	mov    rbx,rdx
  413839:	mov    esi,r8d
  41383c:	call   0x413c50
  413841:	cmp    rax,0xffffffffffffffff
  413845:	mov    rcx,rax
  413848:	je     0x4139b0
  41384e:	mov    rdx,rbx
  413851:	mov    r8d,esi
  413854:	call   QWORD PTR [rip+0x1c492]        # 0x42fcec
  41385a:	mov    ebx,eax
  41385c:	test   ebx,ebx
  41385e:	js     0x413870
  413860:	add    rsp,0x38
  413864:	pop    rbx
  413865:	pop    rsi
  413866:	ret    
  413867:	nop    WORD PTR [rax+rax*1+0x0]
  413870:	mov    rsi,QWORD PTR [rip+0x1c445]        # 0x42fcbc
  413877:	call   rsi
  413879:	cmp    eax,0x2733
  41387e:	je     0x4139a0
  413884:	call   rsi
  413886:	cmp    eax,0x2740
  41388b:	mov    esi,eax
  41388d:	je     0x413b91
  413893:	jg     0x4138e0
  413895:	cmp    eax,0x2736
  41389a:	je     0x413b7e
  4138a0:	jle    0x413962
  4138a6:	cmp    eax,0x273a
  4138ab:	je     0x413ad3
  4138b1:	jg     0x413a12
  4138b7:	cmp    eax,0x2738
  4138bc:	je     0x413b6b
  4138c2:	jg     0x413b58
  4138c8:	call   QWORD PTR [rip+0x1c10e]        # 0x42f9dc
  4138ce:	mov    DWORD PTR [rax],0x6d
  4138d4:	mov    eax,ebx
  4138d6:	jmp    0x413860
  4138d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4138e0:	cmp    eax,0x2748
  4138e5:	je     0x413b45
  4138eb:	jg     0x413922
  4138ed:	cmp    eax,0x2744
  4138f2:	je     0x413ae6
  4138f8:	jg     0x413a42
  4138fe:	cmp    eax,0x2742
  413903:	je     0x413bb7
  413909:	jg     0x413ba4
  41390f:	call   QWORD PTR [rip+0x1c0c7]        # 0x42f9dc
  413915:	mov    DWORD PTR [rax],0x65
  41391b:	mov    eax,ebx
  41391d:	jmp    0x413860
  413922:	cmp    eax,0x274e
  413927:	je     0x413b0c
  41392d:	jg     0x4139d0
  413933:	cmp    eax,0x274c
  413938:	je     0x413b32
  41393e:	jg     0x413b1f
  413944:	cmp    eax,0x2749
  413949:	jne    0x4139f1
  41394f:	call   QWORD PTR [rip+0x1c087]        # 0x42f9dc
  413955:	mov    DWORD PTR [rax],0x7e
  41395b:	mov    eax,ebx
  41395d:	jmp    0x413860
  413962:	cmp    eax,0x57
  413965:	je     0x413a87
  41396b:	jle    0x413a66
  413971:	cmp    eax,0x2734
  413976:	je     0x413c03
  41397c:	jg     0x413bf0
  413982:	cmp    eax,0x2733
  413987:	jne    0x4139f1
  413989:	call   QWORD PTR [rip+0x1c04d]        # 0x42f9dc
  41398f:	mov    DWORD PTR [rax],0x8c
  413995:	mov    eax,ebx
  413997:	jmp    0x413860
  41399c:	nop    DWORD PTR [rax+0x0]
  4139a0:	mov    ecx,0x2734
  4139a5:	call   QWORD PTR [rip+0x1c319]        # 0x42fcc4
  4139ab:	jmp    0x413884
  4139b0:	mov    QWORD PTR [rsp+0x28],rax
  4139b5:	call   QWORD PTR [rip+0x1c021]        # 0x42f9dc
  4139bb:	mov    rcx,QWORD PTR [rsp+0x28]
  4139c0:	mov    DWORD PTR [rax],0x9
  4139c6:	mov    eax,ecx
  4139c8:	jmp    0x413860
  4139cd:	nop    DWORD PTR [rax]
  4139d0:	cmp    eax,0x2751
  4139d5:	je     0x413af9
  4139db:	cmp    eax,0x2752
  4139e0:	je     0x413ac0
  4139e6:	cmp    eax,0x274f
  4139eb:	je     0x413aad
  4139f1:	call   QWORD PTR [rip+0x1bfe5]        # 0x42f9dc
  4139f7:	lea    ecx,[rsi-0x2711]
  4139fd:	lea    edx,[rsi-0x2710]
  413a03:	cmp    ecx,0x17
  413a06:	cmovbe esi,edx
  413a09:	mov    DWORD PTR [rax],esi
  413a0b:	mov    eax,ebx
  413a0d:	jmp    0x413860
  413a12:	cmp    eax,0x273d
  413a17:	je     0x413bdd
  413a1d:	cmp    eax,0x273f
  413a22:	je     0x413bca
  413a28:	cmp    eax,0x273b
  413a2d:	jne    0x4139f1
  413a2f:	call   QWORD PTR [rip+0x1bfa7]        # 0x42f9dc
  413a35:	mov    DWORD PTR [rax],0x87
  413a3b:	mov    eax,ebx
  413a3d:	jmp    0x413860
  413a42:	cmp    eax,0x2746
  413a47:	je     0x413c29
  413a4d:	jg     0x413c16
  413a53:	call   QWORD PTR [rip+0x1bf83]        # 0x42f9dc
  413a59:	mov    DWORD PTR [rax],0x6a
  413a5f:	mov    eax,ebx
  413a61:	jmp    0x413860
  413a66:	cmp    eax,0x6
  413a69:	je     0x413a9a
  413a6b:	cmp    eax,0x8
  413a6e:	jne    0x4139f1
  413a74:	call   QWORD PTR [rip+0x1bf62]        # 0x42f9dc
  413a7a:	mov    DWORD PTR [rax],0xc
  413a80:	mov    eax,ebx
  413a82:	jmp    0x413860
  413a87:	call   QWORD PTR [rip+0x1bf4f]        # 0x42f9dc
  413a8d:	mov    DWORD PTR [rax],0x16
  413a93:	mov    eax,ebx
  413a95:	jmp    0x413860
  413a9a:	call   QWORD PTR [rip+0x1bf3c]        # 0x42f9dc
  413aa0:	mov    DWORD PTR [rax],0x9
  413aa6:	mov    eax,ebx
  413aa8:	jmp    0x413860
  413aad:	call   QWORD PTR [rip+0x1bf29]        # 0x42f9dc
  413ab3:	mov    DWORD PTR [rax],0x26
  413ab9:	mov    eax,ebx
  413abb:	jmp    0x413860
  413ac0:	call   QWORD PTR [rip+0x1bf16]        # 0x42f9dc
  413ac6:	mov    DWORD PTR [rax],0x29
  413acc:	mov    eax,ebx
  413ace:	jmp    0x413860
  413ad3:	call   QWORD PTR [rip+0x1bf03]        # 0x42f9dc
  413ad9:	mov    DWORD PTR [rax],0x7b
  413adf:	mov    eax,ebx
  413ae1:	jmp    0x413860
  413ae6:	call   QWORD PTR [rip+0x1bef0]        # 0x42f9dc
  413aec:	mov    DWORD PTR [rax],0x75
  413af2:	mov    eax,ebx
  413af4:	jmp    0x413860
  413af9:	call   QWORD PTR [rip+0x1bedd]        # 0x42f9dc
  413aff:	mov    DWORD PTR [rax],0x6e
  413b05:	mov    eax,ebx
  413b07:	jmp    0x413860
  413b0c:	call   QWORD PTR [rip+0x1beca]        # 0x42f9dc
  413b12:	mov    DWORD PTR [rax],0x72
  413b18:	mov    eax,ebx
  413b1a:	jmp    0x413860
  413b1f:	call   QWORD PTR [rip+0x1beb7]        # 0x42f9dc
  413b25:	mov    DWORD PTR [rax],0x6b
  413b2b:	mov    eax,ebx
  413b2d:	jmp    0x413860
  413b32:	call   QWORD PTR [rip+0x1bea4]        # 0x42f9dc
  413b38:	mov    DWORD PTR [rax],0x8a
  413b3e:	mov    eax,ebx
  413b40:	jmp    0x413860
  413b45:	call   QWORD PTR [rip+0x1be91]        # 0x42f9dc
  413b4b:	mov    DWORD PTR [rax],0x71
  413b51:	mov    eax,ebx
  413b53:	jmp    0x413860
  413b58:	call   QWORD PTR [rip+0x1be7e]        # 0x42f9dc
  413b5e:	mov    DWORD PTR [rax],0x88
  413b64:	mov    eax,ebx
  413b66:	jmp    0x413860
  413b6b:	call   QWORD PTR [rip+0x1be6b]        # 0x42f9dc
  413b71:	mov    DWORD PTR [rax],0x73
  413b77:	mov    eax,ebx
  413b79:	jmp    0x413860
  413b7e:	call   QWORD PTR [rip+0x1be58]        # 0x42f9dc
  413b84:	mov    DWORD PTR [rax],0x80
  413b8a:	mov    eax,ebx
  413b8c:	jmp    0x413860
  413b91:	call   QWORD PTR [rip+0x1be45]        # 0x42f9dc
  413b97:	mov    DWORD PTR [rax],0x64
  413b9d:	mov    eax,ebx
  413b9f:	jmp    0x413860
  413ba4:	call   QWORD PTR [rip+0x1be32]        # 0x42f9dc
  413baa:	mov    DWORD PTR [rax],0x76
  413bb0:	mov    eax,ebx
  413bb2:	jmp    0x413860
  413bb7:	call   QWORD PTR [rip+0x1be1f]        # 0x42f9dc
  413bbd:	mov    DWORD PTR [rax],0x74
  413bc3:	mov    eax,ebx
  413bc5:	jmp    0x413860
  413bca:	call   QWORD PTR [rip+0x1be0c]        # 0x42f9dc
  413bd0:	mov    DWORD PTR [rax],0x66
  413bd6:	mov    eax,ebx
  413bd8:	jmp    0x413860
  413bdd:	call   QWORD PTR [rip+0x1bdf9]        # 0x42f9dc
  413be3:	mov    DWORD PTR [rax],0x82
  413be9:	mov    eax,ebx
  413beb:	jmp    0x413860
  413bf0:	call   QWORD PTR [rip+0x1bde6]        # 0x42f9dc
  413bf6:	mov    DWORD PTR [rax],0x67
  413bfc:	mov    eax,ebx
  413bfe:	jmp    0x413860
  413c03:	call   QWORD PTR [rip+0x1bdd3]        # 0x42f9dc
  413c09:	mov    DWORD PTR [rax],0x70
  413c0f:	mov    eax,ebx
  413c11:	jmp    0x413860
  413c16:	call   QWORD PTR [rip+0x1bdc0]        # 0x42f9dc
  413c1c:	mov    DWORD PTR [rax],0x77
  413c22:	mov    eax,ebx
  413c24:	jmp    0x413860
  413c29:	call   QWORD PTR [rip+0x1bdad]        # 0x42f9dc
  413c2f:	mov    DWORD PTR [rax],0x6c
  413c35:	mov    eax,ebx
  413c37:	jmp    0x413860
  413c3c:	nop
  413c3d:	nop
  413c3e:	nop
  413c3f:	nop
  413c40:	jmp    0x416cf0
  413c45:	nop
  413c46:	nop
  413c47:	nop
  413c48:	nop
  413c49:	nop
  413c4a:	nop
  413c4b:	nop
  413c4c:	nop
  413c4d:	nop
  413c4e:	nop
  413c4f:	nop
  413c50:	push   rbx
  413c51:	sub    rsp,0x20
  413c55:	mov    ebx,ecx
  413c57:	call   0x410bb0
  413c5c:	mov    rax,QWORD PTR [rip+0x1bdb1]        # 0x42fa14
  413c63:	mov    ecx,ebx
  413c65:	add    rsp,0x20
  413c69:	pop    rbx
  413c6a:	rex.W jmp rax
  413c6d:	nop
  413c6e:	nop
  413c6f:	nop
  413c70:	push   rdi
  413c71:	push   rsi
  413c72:	push   rbx
  413c73:	sub    rsp,0x30
  413c77:	mov    rbx,rdx
  413c7a:	mov    rsi,r8
  413c7d:	mov    edi,r9d
  413c80:	call   0x413c50
  413c85:	cmp    rax,0xffffffffffffffff
  413c89:	mov    rcx,rax
  413c8c:	je     0x413dd0
  413c92:	mov    rdx,rbx
  413c95:	mov    r9d,edi
  413c98:	mov    r8d,esi
  413c9b:	call   QWORD PTR [rip+0x1c093]        # 0x42fd34
  413ca1:	test   eax,eax
  413ca3:	mov    ebx,eax
  413ca5:	js     0x413cb2
  413ca7:	movsxd rax,ebx
  413caa:	add    rsp,0x30
  413cae:	pop    rbx
  413caf:	pop    rsi
  413cb0:	pop    rdi
  413cb1:	ret    
  413cb2:	call   QWORD PTR [rip+0x1c004]        # 0x42fcbc
  413cb8:	cmp    eax,0x2740
  413cbd:	mov    esi,eax
  413cbf:	je     0x413f45
  413cc5:	jg     0x413d10
  413cc7:	cmp    eax,0x2736
  413ccc:	je     0x413f23
  413cd2:	jle    0x413d90
  413cd8:	cmp    eax,0x273a
  413cdd:	je     0x413f12
  413ce3:	jg     0x413e12
  413ce9:	cmp    eax,0x2738
  413cee:	je     0x413f67
  413cf4:	jg     0x413f56
  413cfa:	call   QWORD PTR [rip+0x1bcdc]        # 0x42f9dc
  413d00:	mov    DWORD PTR [rax],0x6d
  413d06:	jmp    0x413ca7
  413d08:	nop    DWORD PTR [rax+rax*1+0x0]
  413d10:	cmp    eax,0x2748
  413d15:	je     0x413f34
  413d1b:	jg     0x413d50
  413d1d:	cmp    eax,0x2744
  413d22:	je     0x413f01
  413d28:	jg     0x413df0
  413d2e:	cmp    eax,0x2742
  413d33:	je     0x413ef0
  413d39:	jg     0x413edf
  413d3f:	call   QWORD PTR [rip+0x1bc97]        # 0x42f9dc
  413d45:	mov    DWORD PTR [rax],0x65
  413d4b:	jmp    0x413ca7
  413d50:	cmp    eax,0x274e
  413d55:	je     0x413fab
  413d5b:	jg     0x413e52
  413d61:	cmp    eax,0x274c
  413d66:	je     0x413fcd
  413d6c:	jg     0x413fbc
  413d72:	cmp    eax,0x2749
  413d77:	jne    0x413e33
  413d7d:	call   QWORD PTR [rip+0x1bc59]        # 0x42f9dc
  413d83:	mov    DWORD PTR [rax],0x7e
  413d89:	jmp    0x413ca7
  413d8e:	xchg   ax,ax
  413d90:	cmp    eax,0x57
  413d93:	je     0x413e9b
  413d99:	jle    0x413e80
  413d9f:	cmp    eax,0x2734
  413da4:	je     0x413fef
  413daa:	jg     0x413fde
  413db0:	cmp    eax,0x2733
  413db5:	jne    0x413e33
  413db7:	call   QWORD PTR [rip+0x1bc1f]        # 0x42f9dc
  413dbd:	mov    DWORD PTR [rax],0x8c
  413dc3:	jmp    0x413ca7
  413dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  413dd0:	mov    QWORD PTR [rsp+0x28],rax
  413dd5:	call   QWORD PTR [rip+0x1bc01]        # 0x42f9dc
  413ddb:	mov    rcx,QWORD PTR [rsp+0x28]
  413de0:	mov    DWORD PTR [rax],0x9
  413de6:	mov    rax,rcx
  413de9:	jmp    0x413caa
  413dee:	xchg   ax,ax
  413df0:	cmp    eax,0x2746
  413df5:	je     0x413f89
  413dfb:	jg     0x413f78
  413e01:	call   QWORD PTR [rip+0x1bbd5]        # 0x42f9dc
  413e07:	mov    DWORD PTR [rax],0x6a
  413e0d:	jmp    0x413ca7
  413e12:	cmp    eax,0x273d
  413e17:	je     0x413ece
  413e1d:	cmp    eax,0x273f
  413e22:	je     0x413ebd
  413e28:	cmp    eax,0x273b
  413e2d:	je     0x413f9a
  413e33:	call   QWORD PTR [rip+0x1bba3]        # 0x42f9dc
  413e39:	lea    ecx,[rsi-0x2711]
  413e3f:	lea    edx,[rsi-0x2710]
  413e45:	cmp    ecx,0x17
  413e48:	cmovbe esi,edx
  413e4b:	mov    DWORD PTR [rax],esi
  413e4d:	jmp    0x413ca7
  413e52:	cmp    eax,0x2751
  413e57:	je     0x414011
  413e5d:	cmp    eax,0x2752
  413e62:	je     0x414000
  413e68:	cmp    eax,0x274f
  413e6d:	jne    0x413e33
  413e6f:	call   QWORD PTR [rip+0x1bb67]        # 0x42f9dc
  413e75:	mov    DWORD PTR [rax],0x26
  413e7b:	jmp    0x413ca7
  413e80:	cmp    eax,0x6
  413e83:	je     0x413eac
  413e85:	cmp    eax,0x8
  413e88:	jne    0x413e33
  413e8a:	call   QWORD PTR [rip+0x1bb4c]        # 0x42f9dc
  413e90:	mov    DWORD PTR [rax],0xc
  413e96:	jmp    0x413ca7
  413e9b:	call   QWORD PTR [rip+0x1bb3b]        # 0x42f9dc
  413ea1:	mov    DWORD PTR [rax],0x16
  413ea7:	jmp    0x413ca7
  413eac:	call   QWORD PTR [rip+0x1bb2a]        # 0x42f9dc
  413eb2:	mov    DWORD PTR [rax],0x9
  413eb8:	jmp    0x413ca7
  413ebd:	call   QWORD PTR [rip+0x1bb19]        # 0x42f9dc
  413ec3:	mov    DWORD PTR [rax],0x66
  413ec9:	jmp    0x413ca7
  413ece:	call   QWORD PTR [rip+0x1bb08]        # 0x42f9dc
  413ed4:	mov    DWORD PTR [rax],0x82
  413eda:	jmp    0x413ca7
  413edf:	call   QWORD PTR [rip+0x1baf7]        # 0x42f9dc
  413ee5:	mov    DWORD PTR [rax],0x76
  413eeb:	jmp    0x413ca7
  413ef0:	call   QWORD PTR [rip+0x1bae6]        # 0x42f9dc
  413ef6:	mov    DWORD PTR [rax],0x74
  413efc:	jmp    0x413ca7
  413f01:	call   QWORD PTR [rip+0x1bad5]        # 0x42f9dc
  413f07:	mov    DWORD PTR [rax],0x75
  413f0d:	jmp    0x413ca7
  413f12:	call   QWORD PTR [rip+0x1bac4]        # 0x42f9dc
  413f18:	mov    DWORD PTR [rax],0x7b
  413f1e:	jmp    0x413ca7
  413f23:	call   QWORD PTR [rip+0x1bab3]        # 0x42f9dc
  413f29:	mov    DWORD PTR [rax],0x80
  413f2f:	jmp    0x413ca7
  413f34:	call   QWORD PTR [rip+0x1baa2]        # 0x42f9dc
  413f3a:	mov    DWORD PTR [rax],0x71
  413f40:	jmp    0x413ca7
  413f45:	call   QWORD PTR [rip+0x1ba91]        # 0x42f9dc
  413f4b:	mov    DWORD PTR [rax],0x64
  413f51:	jmp    0x413ca7
  413f56:	call   QWORD PTR [rip+0x1ba80]        # 0x42f9dc
  413f5c:	mov    DWORD PTR [rax],0x88
  413f62:	jmp    0x413ca7
  413f67:	call   QWORD PTR [rip+0x1ba6f]        # 0x42f9dc
  413f6d:	mov    DWORD PTR [rax],0x73
  413f73:	jmp    0x413ca7
  413f78:	call   QWORD PTR [rip+0x1ba5e]        # 0x42f9dc
  413f7e:	mov    DWORD PTR [rax],0x77
  413f84:	jmp    0x413ca7
  413f89:	call   QWORD PTR [rip+0x1ba4d]        # 0x42f9dc
  413f8f:	mov    DWORD PTR [rax],0x6c
  413f95:	jmp    0x413ca7
  413f9a:	call   QWORD PTR [rip+0x1ba3c]        # 0x42f9dc
  413fa0:	mov    DWORD PTR [rax],0x87
  413fa6:	jmp    0x413ca7
  413fab:	call   QWORD PTR [rip+0x1ba2b]        # 0x42f9dc
  413fb1:	mov    DWORD PTR [rax],0x72
  413fb7:	jmp    0x413ca7
  413fbc:	call   QWORD PTR [rip+0x1ba1a]        # 0x42f9dc
  413fc2:	mov    DWORD PTR [rax],0x6b
  413fc8:	jmp    0x413ca7
  413fcd:	call   QWORD PTR [rip+0x1ba09]        # 0x42f9dc
  413fd3:	mov    DWORD PTR [rax],0x8a
  413fd9:	jmp    0x413ca7
  413fde:	call   QWORD PTR [rip+0x1b9f8]        # 0x42f9dc
  413fe4:	mov    DWORD PTR [rax],0x67
  413fea:	jmp    0x413ca7
  413fef:	call   QWORD PTR [rip+0x1b9e7]        # 0x42f9dc
  413ff5:	mov    DWORD PTR [rax],0x70
  413ffb:	jmp    0x413ca7
  414000:	call   QWORD PTR [rip+0x1b9d6]        # 0x42f9dc
  414006:	mov    DWORD PTR [rax],0x29
  41400c:	jmp    0x413ca7
  414011:	call   QWORD PTR [rip+0x1b9c5]        # 0x42f9dc
  414017:	mov    DWORD PTR [rax],0x6e
  41401d:	jmp    0x413ca7
  414022:	nop
  414023:	nop
  414024:	nop
  414025:	nop
  414026:	nop
  414027:	nop
  414028:	nop
  414029:	nop
  41402a:	nop
  41402b:	nop
  41402c:	nop
  41402d:	nop
  41402e:	nop
  41402f:	nop
  414030:	push   rbp
  414031:	push   r15
  414033:	push   r14
  414035:	push   r13
  414037:	push   r12
  414039:	push   rdi
  41403a:	push   rsi
  41403b:	push   rbx
  41403c:	sub    rsp,0x98
  414043:	lea    rbp,[rsp+0x80]
  41404b:	mov    rdi,QWORD PTR [rbp+0x80]
  414052:	mov    r14,rcx
  414055:	mov    ebx,edx
  414057:	mov    r15,r8
  41405a:	mov    r13,r9
  41405d:	call   QWORD PTR [rip+0x1b801]        # 0x42f864
  414063:	cmp    eax,0x2
  414066:	je     0x414150
  41406c:	cmp    eax,0x3
  41406f:	je     0x4141a0
  414075:	cmp    eax,0x1
  414078:	je     0x41408d
  41407a:	xor    edx,edx
  41407c:	mov    rcx,r14
  41407f:	call   QWORD PTR [rip+0x1b8c7]        # 0x42f94c
  414085:	test   eax,eax
  414087:	jne    0x414179
  41408d:	lea    esi,[rbx+0x7]
  414090:	test   ebx,ebx
  414092:	mov    r10d,ebx
  414095:	mov    r8d,0x1
  41409b:	cmovns esi,ebx
  41409e:	and    r10d,0x7
  4140a2:	mov    r12d,esi
  4140a5:	sar    r12d,0x3
  4140a9:	movsxd r12,r12d
  4140ac:	movzx  eax,BYTE PTR [r15+r12*1]
  4140b1:	bt     eax,r10d
  4140b5:	jae    0x414190
  4140bb:	mov    eax,0x1
  4140c0:	mov    ecx,r10d
  4140c3:	xor    edx,edx
  4140c5:	shl    eax,cl
  4140c7:	or     BYTE PTR [r15+r12*1+0x8],al
  4140cc:	mov    eax,0x1
  4140d1:	test   r8d,r8d
  4140d4:	je     0x414106
  4140d6:	lea    esi,[rbx+0x7]
  4140d9:	test   ebx,ebx
  4140db:	mov    ecx,ebx
  4140dd:	cmovns esi,ebx
  4140e0:	and    ecx,0x7
  4140e3:	sar    esi,0x3
  4140e6:	movsxd rsi,esi
  4140e9:	movzx  r8d,BYTE PTR [r13+rsi*1+0x0]
  4140ef:	bt     r8d,ecx
  4140f3:	jae    0x414106
  4140f5:	mov    r8d,0x1
  4140fb:	add    eax,0x1
  4140fe:	shl    r8d,cl
  414101:	or     BYTE PTR [r13+rsi*1+0x8],r8b
  414106:	test   edx,edx
  414108:	je     0x414137
  41410a:	lea    edx,[rbx+0x7]
  41410d:	test   ebx,ebx
  41410f:	cmovns edx,ebx
  414112:	and    ebx,0x7
  414115:	sar    edx,0x3
  414118:	movsxd rdx,edx
  41411b:	movzx  ecx,BYTE PTR [rdi+rdx*1]
  41411f:	bt     ecx,ebx
  414122:	jae    0x414137
  414124:	mov    r8d,0x1
  41412a:	mov    ecx,ebx
  41412c:	add    eax,0x1
  41412f:	shl    r8d,cl
  414132:	or     BYTE PTR [rdi+rdx*1+0x8],r8b
  414137:	lea    rsp,[rbp+0x18]
  41413b:	pop    rbx
  41413c:	pop    rsi
  41413d:	pop    rdi
  41413e:	pop    r12
  414140:	pop    r13
  414142:	pop    r14
  414144:	pop    r15
  414146:	pop    rbp
  414147:	ret    
  414148:	nop    DWORD PTR [rax+rax*1+0x0]
  414150:	lea    esi,[rbx+0x7]
  414153:	test   ebx,ebx
  414155:	mov    r12d,ebx
  414158:	mov    r10d,ebx
  41415b:	cmovs  r12d,esi
  41415f:	and    r10d,0x7
  414163:	sar    r12d,0x3
  414167:	movsxd rax,r12d
  41416a:	movzx  eax,BYTE PTR [r15+rax*1]
  41416f:	bt     eax,r10d
  414173:	jb     0x414233
  414179:	xor    edx,edx
  41417b:	mov    r8d,0x1
  414181:	xor    eax,eax
  414183:	jmp    0x4140d1
  414188:	nop    DWORD PTR [rax+rax*1+0x0]
  414190:	xor    edx,edx
  414192:	xor    eax,eax
  414194:	jmp    0x4140d1
  414199:	nop    DWORD PTR [rax+0x0]
  4141a0:	mov    edx,DWORD PTR [rip+0x18432]        # 0x42c5d8
  4141a6:	test   edx,edx
  4141a8:	je     0x414200
  4141aa:	lea    rax,[rbp-0x38]
  4141ae:	xor    r9d,r9d
  4141b1:	xor    r8d,r8d
  4141b4:	xor    edx,edx
  4141b6:	mov    QWORD PTR [rsp+0x28],0x0
  4141bf:	mov    rcx,r14
  4141c2:	mov    QWORD PTR [rsp+0x20],rax
  4141c7:	call   QWORD PTR [rip+0x1b70f]        # 0x42f8dc
  4141cd:	test   eax,eax
  4141cf:	je     0x4142b0
  4141d5:	mov    eax,DWORD PTR [rbp-0x38]
  4141d8:	test   eax,eax
  4141da:	je     0x414360
  4141e0:	lea    esi,[rbx+0x7]
  4141e3:	test   ebx,ebx
  4141e5:	mov    r10d,ebx
  4141e8:	cmovns esi,ebx
  4141eb:	and    r10d,0x7
  4141ef:	xor    r8d,r8d
  4141f2:	mov    r12d,esi
  4141f5:	sar    r12d,0x3
  4141f9:	jmp    0x4140a9
  4141fe:	xchg   ax,ax
  414200:	lea    rcx,[rip+0x129d9]        # 0x426be0
  414207:	call   QWORD PTR [rip+0x1b66f]        # 0x42f87c
  41420d:	lea    rdx,[rip+0x129d6]        # 0x426bea
  414214:	mov    rcx,rax
  414217:	call   QWORD PTR [rip+0x1b677]        # 0x42f894
  41421d:	mov    DWORD PTR [rip+0x183b1],0x1        # 0x42c5d8
  414227:	mov    QWORD PTR [rip+0x183a2],rax        # 0x42c5d0
  41422e:	jmp    0x4141aa
  414233:	xor    edx,edx
  414235:	mov    DWORD PTR [rbp-0x48],r10d
  414239:	mov    rcx,r14
  41423c:	call   QWORD PTR [rip+0x1b70a]        # 0x42f94c
  414242:	test   eax,eax
  414244:	jne    0x414179
  41424a:	lea    rdx,[rbp-0x20]
  41424e:	mov    rcx,r14
  414251:	call   QWORD PTR [rip+0x1b5e5]        # 0x42f83c
  414257:	test   eax,eax
  414259:	mov    r8d,0x1
  41425f:	mov    r10d,DWORD PTR [rbp-0x48]
  414263:	je     0x4140a9
  414269:	mov    DWORD PTR [rbp-0x38],0x0
  414270:	mov    DWORD PTR [rbp-0x34],0x0
  414277:	lea    rdx,[rbp-0x34]
  41427b:	mov    rcx,r14
  41427e:	call   QWORD PTR [rip+0x1b608]        # 0x42f88c
  414284:	test   eax,eax
  414286:	mov    r10d,DWORD PTR [rbp-0x48]
  41428a:	je     0x41436c
  414290:	mov    r8d,DWORD PTR [rbp-0x34]
  414294:	test   r8d,r8d
  414297:	jne    0x41438e
  41429d:	mov    edx,0x1
  4142a2:	mov    r8d,0x1
  4142a8:	xor    eax,eax
  4142aa:	jmp    0x4140d1
  4142af:	nop
  4142b0:	call   QWORD PTR [rip+0x1b5b6]        # 0x42f86c
  4142b6:	cmp    eax,0x6d
  4142b9:	je     0x414360
  4142bf:	mov    rax,QWORD PTR [rip+0x1830a]        # 0x42c5d0
  4142c6:	lea    rdx,[rbp-0x30]
  4142ca:	mov    QWORD PTR [rbp-0x30],0x0
  4142d2:	mov    QWORD PTR [rbp-0x28],0x0
  4142da:	lea    r8,[rbp-0x20]
  4142de:	mov    QWORD PTR [rbp-0x20],0x0
  4142e6:	mov    QWORD PTR [rbp-0x18],0x0
  4142ee:	mov    QWORD PTR [rbp-0x10],0x0
  4142f6:	test   rax,rax
  4142f9:	mov    QWORD PTR [rbp-0x8],0x0
  414301:	mov    QWORD PTR [rbp+0x0],0x0
  414309:	je     0x414179
  41430f:	mov    DWORD PTR [rsp+0x20],0x18
  414317:	mov    r9d,0x28
  41431d:	mov    rcx,r14
  414320:	call   rax
  414322:	test   eax,eax
  414324:	jne    0x414179
  41432a:	mov    eax,DWORD PTR [rbp-0x4]
  41432d:	cmp    eax,0x1ff
  414332:	ja     0x414179
  414338:	mov    edx,DWORD PTR [rbp-0x8]
  41433b:	cmp    edx,0x1ff
  414341:	setbe  cl
  414344:	xor    r8d,r8d
  414347:	cmp    eax,edx
  414349:	sete   r8b
  41434d:	xor    edx,edx
  41434f:	xor    eax,eax
  414351:	and    r8d,ecx
  414354:	jmp    0x4140d1
  414359:	nop    DWORD PTR [rax+0x0]
  414360:	xor    edx,edx
  414362:	xor    r8d,r8d
  414365:	xor    eax,eax
  414367:	jmp    0x4140d1
  41436c:	lea    rdx,[rip+0x1288e]        # 0x426c01
  414373:	lea    rcx,[rip+0x12890]        # 0x426c0a
  41437a:	mov    r8d,0xbf
  414380:	call   0x418a10
  414385:	mov    r10d,DWORD PTR [rbp-0x48]
  414389:	jmp    0x414290
  41438e:	mov    eax,r8d
  414391:	mov    DWORD PTR [rbp-0x4c],r10d
  414395:	lea    rax,[rax+rax*4]
  414399:	lea    rax,[rax*4+0x1e]
  4143a1:	shr    rax,0x4
  4143a5:	shl    rax,0x4
  4143a9:	call   0x4182b0
  4143ae:	sub    rsp,rax
  4143b1:	lea    r9,[rbp-0x38]
  4143b5:	mov    rcx,r14
  4143b8:	lea    r11,[rsp+0x30]
  4143bd:	mov    rdx,r11
  4143c0:	mov    QWORD PTR [rbp-0x48],r11
  4143c4:	call   QWORD PTR [rip+0x1b50a]        # 0x42f8d4
  4143ca:	test   eax,eax
  4143cc:	mov    r11,QWORD PTR [rbp-0x48]
  4143d0:	mov    r10d,DWORD PTR [rbp-0x4c]
  4143d4:	je     0x41429d
  4143da:	mov    edx,DWORD PTR [rbp-0x38]
  4143dd:	test   edx,edx
  4143df:	je     0x41429d
  4143e5:	lea    ecx,[rdx-0x1]
  4143e8:	mov    rax,r11
  4143eb:	xor    edx,edx
  4143ed:	mov    r8d,0x1
  4143f3:	add    rcx,0x1
  4143f7:	imul   rcx,rcx,0x14
  4143fb:	add    rcx,r11
  4143fe:	cmp    WORD PTR [rax],0x1
  414402:	cmove  edx,r8d
  414406:	add    rax,0x14
  41440a:	cmp    rax,rcx
  41440d:	jne    0x4143fe
  41440f:	xor    eax,eax
  414411:	test   edx,edx
  414413:	mov    r8d,0x1
  414419:	jne    0x4140a9
  41441f:	jmp    0x4140d9
  414424:	xchg   ax,ax
  414426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414430:	push   rbp
  414431:	push   r15
  414433:	push   r14
  414435:	push   r13
  414437:	push   r12
  414439:	push   rdi
  41443a:	push   rsi
  41443b:	push   rbx
  41443c:	sub    rsp,0x948
  414443:	lea    rbp,[rsp+0x80]
  41444b:	mov    eax,0x40
  414450:	cmp    ecx,0x40
  414453:	mov    r14,rdx
  414456:	mov    QWORD PTR [rbp+0x920],r8
  41445d:	cmovle eax,ecx
  414460:	cmp    QWORD PTR [rbp+0x930],0x0
  414468:	mov    QWORD PTR [rbp+0x928],r9
  41446f:	mov    DWORD PTR [rbp-0x10],eax
  414472:	je     0x41505b
  414478:	mov    rax,QWORD PTR [rbp+0x930]
  41447f:	mov    edx,0x10624dd3
  414484:	mov    rdi,QWORD PTR [rbp+0x930]
  41448b:	mov    ecx,DWORD PTR [rax+0x8]
  41448e:	mov    eax,ecx
  414490:	sar    ecx,0x1f
  414493:	imul   edx
  414495:	sar    edx,0x6
  414498:	mov    eax,edx
  41449a:	imul   edx,DWORD PTR [rdi],0x3e8
  4144a0:	sub    eax,ecx
  4144a2:	add    eax,edx
  4144a4:	test   r8,r8
  4144a7:	sete   dl
  4144aa:	test   r9,r9
  4144ad:	mov    DWORD PTR [rbp-0xc],eax
  4144b0:	sete   al
  4144b3:	test   dl,al
  4144b5:	je     0x4144c0
  4144b7:	test   r14,r14
  4144ba:	je     0x4150fb
  4144c0:	mov    rax,QWORD PTR [rip+0x18121]        # 0x42c5e8
  4144c7:	test   rax,rax
  4144ca:	je     0x415072
  4144d0:	test   r14,r14
  4144d3:	mov    QWORD PTR [rbp+0x6b0],rax
  4144da:	mov    QWORD PTR [rbp+0x20],0x0
  4144e2:	mov    QWORD PTR [rbp+0x28],0x0
  4144ea:	mov    QWORD PTR [rbp+0x30],0x0
  4144f2:	mov    QWORD PTR [rbp+0x38],0x0
  4144fa:	mov    QWORD PTR [rbp+0x40],0x0
  414502:	mov    QWORD PTR [rbp+0x48],0x0
  41450a:	mov    QWORD PTR [rbp+0x10],0x0
  414512:	je     0x4150c9
  414518:	mov    r9d,DWORD PTR [r14]
  41451b:	test   r9d,r9d
  41451e:	je     0x4145a5
  414524:	lea    rax,[rbp+0xc]
  414528:	xor    r15d,r15d
  41452b:	lea    rdi,[rbp+0x4a0]
  414532:	mov    rsi,QWORD PTR [rip+0x1b303]        # 0x42f83c
  414539:	mov    r12d,0x1
  41453f:	mov    QWORD PTR [rbp-0x8],rax
  414543:	jmp    0x41456d
  414545:	lea    eax,[rbx+0x7]
  414548:	test   ebx,ebx
  41454a:	mov    ecx,ebx
  41454c:	mov    edx,r12d
  41454f:	cmovns eax,ebx
  414552:	and    ecx,0x7
  414555:	add    r15d,0x1
  414559:	sar    eax,0x3
  41455c:	shl    edx,cl
  41455e:	cdqe   
  414560:	or     BYTE PTR [rbp+rax*1+0x20],dl
  414564:	or     BYTE PTR [rbp+rax*1+0x10],dl
  414568:	cmp    r15d,DWORD PTR [r14]
  41456b:	jae    0x4145a5
  41456d:	movsxd rax,r15d
  414570:	mov    rbx,QWORD PTR [r14+rax*8+0x8]
  414575:	mov    ecx,ebx
  414577:	call   0x413c50
  41457c:	mov    rdx,rdi
  41457f:	mov    r13,rax
  414582:	mov    rcx,rax
  414585:	call   rsi
  414587:	test   eax,eax
  414589:	je     0x414545
  41458b:	mov    rdx,QWORD PTR [rbp-0x8]
  41458f:	mov    rcx,r13
  414592:	call   QWORD PTR [rip+0x1b2f4]        # 0x42f88c
  414598:	test   eax,eax
  41459a:	jne    0x414545
  41459c:	add    r15d,0x1
  4145a0:	cmp    r15d,DWORD PTR [r14]
  4145a3:	jb     0x41456d
  4145a5:	cmp    QWORD PTR [rbp+0x920],0x0
  4145ad:	je     0x4150e3
  4145b3:	mov    rax,QWORD PTR [rbp+0x920]
  4145ba:	mov    r8d,DWORD PTR [rax]
  4145bd:	test   r8d,r8d
  4145c0:	je     0x41466c
  4145c6:	lea    rax,[rbp+0xc]
  4145ca:	xor    r15d,r15d
  4145cd:	mov    QWORD PTR [rbp+0x918],r14
  4145d4:	lea    rdi,[rbp+0x4a0]
  4145db:	mov    rsi,QWORD PTR [rip+0x1b25a]        # 0x42f83c
  4145e2:	mov    r12d,0x1
  4145e8:	mov    QWORD PTR [rbp-0x8],rax
  4145ec:	mov    r14d,r15d
  4145ef:	mov    rbx,QWORD PTR [rbp+0x920]
  4145f6:	jmp    0x41462c
  4145f8:	nop    DWORD PTR [rax+rax*1+0x0]
  414600:	lea    eax,[r13+0x7]
  414604:	test   r13d,r13d
  414607:	mov    ecx,r13d
  41460a:	mov    edx,r12d
  41460d:	cmovns eax,r13d
  414611:	and    ecx,0x7
  414614:	add    r14d,0x1
  414618:	sar    eax,0x3
  41461b:	shl    edx,cl
  41461d:	cdqe   
  41461f:	or     BYTE PTR [rbp+rax*1+0x30],dl
  414623:	or     BYTE PTR [rbp+rax*1+0x10],dl
  414627:	cmp    r14d,DWORD PTR [rbx]
  41462a:	jae    0x414665
  41462c:	movsxd rax,r14d
  41462f:	mov    r13,QWORD PTR [rbx+rax*8+0x8]
  414634:	mov    ecx,r13d
  414637:	call   0x413c50
  41463c:	mov    rdx,rdi
  41463f:	mov    r15,rax
  414642:	mov    rcx,rax
  414645:	call   rsi
  414647:	test   eax,eax
  414649:	je     0x414600
  41464b:	mov    rdx,QWORD PTR [rbp-0x8]
  41464f:	mov    rcx,r15
  414652:	call   QWORD PTR [rip+0x1b234]        # 0x42f88c
  414658:	test   eax,eax
  41465a:	je     0x414600
  41465c:	add    r14d,0x1
  414660:	cmp    r14d,DWORD PTR [rbx]
  414663:	jb     0x41462c
  414665:	mov    r14,QWORD PTR [rbp+0x918]
  41466c:	cmp    QWORD PTR [rbp+0x928],0x0
  414674:	je     0x4150b1
  41467a:	mov    rax,QWORD PTR [rbp+0x928]
  414681:	mov    eax,DWORD PTR [rax]
  414683:	test   eax,eax
  414685:	je     0x4146cb
  414687:	mov    rdi,QWORD PTR [rbp+0x928]
  41468e:	sub    eax,0x1
  414691:	mov    r8d,0x1
  414697:	lea    rdx,[rdi+0x8]
  41469b:	lea    r9,[rdi+rax*8+0x10]
  4146a0:	mov    rcx,QWORD PTR [rdx]
  4146a3:	mov    edi,r8d
  4146a6:	lea    eax,[rcx+0x7]
  4146a9:	test   ecx,ecx
  4146ab:	cmovns eax,ecx
  4146ae:	and    ecx,0x7
  4146b1:	add    rdx,0x8
  4146b5:	sar    eax,0x3
  4146b8:	shl    edi,cl
  4146ba:	cdqe   
  4146bc:	or     BYTE PTR [rbp+rax*1+0x40],dil
  4146c1:	or     BYTE PTR [rbp+rax*1+0x10],dil
  4146c6:	cmp    rdx,r9
  4146c9:	jne    0x4146a0
  4146cb:	mov    rax,QWORD PTR [rbp+0x920]
  4146d2:	mov    DWORD PTR [r14],0x0
  4146d9:	mov    DWORD PTR [rbp+0x80],0x0
  4146e3:	mov    DWORD PTR [rbp+0x290],0x0
  4146ed:	mov    DWORD PTR [rbp+0x4a0],0x0
  4146f7:	mov    DWORD PTR [rax],0x0
  4146fd:	mov    rax,QWORD PTR [rbp+0x928]
  414704:	mov    DWORD PTR [rax],0x0
  41470a:	mov    eax,DWORD PTR [rbp-0x10]
  41470d:	test   eax,eax
  41470f:	jle    0x41510b
  414715:	lea    rbx,[rbp+0x50]
  414719:	xor    esi,esi
  41471b:	mov    r15d,0x1
  414721:	mov    DWORD PTR [rbp-0x18],esi
  414724:	mov    r12d,eax
  414727:	mov    QWORD PTR [rbp-0x8],rbx
  41472b:	lea    rbx,[rbp+0x30]
  41472f:	mov    QWORD PTR [rbp-0x20],rbx
  414733:	lea    rbx,[rbp+0x20]
  414737:	mov    QWORD PTR [rbp-0x28],rbx
  41473b:	jmp    0x41474c
  41473d:	nop    DWORD PTR [rax]
  414740:	add    esi,0x1
  414743:	cmp    esi,r12d
  414746:	je     0x4147db
  41474c:	mov    r9d,esi
  41474f:	mov    r13d,esi
  414752:	sar    r9d,0x3
  414756:	and    r13d,0x7
  41475a:	movsxd rdi,r9d
  41475d:	movzx  eax,BYTE PTR [rbp+rdi*1+0x10]
  414762:	bt     eax,r13d
  414766:	jae    0x414740
  414768:	mov    ecx,esi
  41476a:	call   0x413c50
  41476f:	test   rax,rax
  414772:	mov    rbx,rax
  414775:	je     0x41500b
  41477b:	mov    rdx,QWORD PTR [rbp-0x8]
  41477f:	mov    rcx,rax
  414782:	call   QWORD PTR [rip+0x1b0b4]        # 0x42f83c
  414788:	test   eax,eax
  41478a:	je     0x4148c7
  414790:	mov    ecx,DWORD PTR [rbp-0xc]
  414793:	mov    eax,r15d
  414796:	add    r15d,0x1
  41479a:	mov    QWORD PTR [rbp+rax*8+0x6b0],rbx
  4147a2:	test   ecx,ecx
  4147a4:	je     0x414740
  4147a6:	lea    rax,[rbp+0x40]
  4147aa:	mov    r9,QWORD PTR [rbp-0x20]
  4147ae:	mov    r8,QWORD PTR [rbp-0x28]
  4147b2:	mov    edx,esi
  4147b4:	mov    rcx,rbx
  4147b7:	mov    QWORD PTR [rsp+0x20],rax
  4147bc:	call   0x414030
  4147c1:	test   eax,eax
  4147c3:	mov    eax,0x0
  4147c8:	cmove  eax,DWORD PTR [rbp-0xc]
  4147cc:	add    esi,0x1
  4147cf:	cmp    esi,r12d
  4147d2:	mov    DWORD PTR [rbp-0xc],eax
  4147d5:	jne    0x41474c
  4147db:	mov    esi,DWORD PTR [rbp-0x18]
  4147de:	test   esi,esi
  4147e0:	sete   BYTE PTR [rbp-0x20]
  4147e4:	setne  BYTE PTR [rbp-0x41]
  4147e8:	mov    edi,DWORD PTR [rbp-0xc]
  4147eb:	mov    eax,r15d
  4147ee:	mov    QWORD PTR [rbp+rax*8+0x6b0],0x0
  4147fa:	cmp    edi,0xffffffff
  4147fd:	je     0x41480b
  4147ff:	call   0x41d900
  414804:	mov    ebx,eax
  414806:	add    ebx,edi
  414808:	mov    DWORD PTR [rbp-0x48],ebx
  41480b:	mov    QWORD PTR [rbp+0x918],r14
  414812:	mov    r14d,DWORD PTR [rbp-0xc]
  414816:	lea    rax,[rbp+0x6b0]
  41481d:	mov    rbx,QWORD PTR [rip+0x1b468]        # 0x42fc8c
  414824:	mov    r13,QWORD PTR [rip+0x1b469]        # 0x42fc94
  41482b:	mov    QWORD PTR [rbp-0x28],rax
  41482f:	mov    rax,QWORD PTR [rip+0x1b506]        # 0x42fd3c
  414836:	test   r14d,r14d
  414839:	mov    r12,QWORD PTR [rip+0x1b434]        # 0x42fc74
  414840:	sete   dil
  414844:	or     dil,BYTE PTR [rbp-0x20]
  414848:	mov    QWORD PTR [rbp-0x50],rax
  41484c:	je     0x414ca5
  414852:	cmp    r14d,0xffffffff
  414856:	mov    edi,0x1
  41485b:	mov    DWORD PTR [rbp-0xc],0x0
  414862:	jne    0x414cf2
  414868:	mov    BYTE PTR [rbp-0x8],dil
  41486c:	mov    rdi,QWORD PTR [rbp-0x28]
  414870:	lea    rsi,[rbp+0x50]
  414874:	xor    r8d,r8d
  414877:	mov    DWORD PTR [rsp+0x20],0x4ff
  41487f:	mov    r9d,r14d
  414882:	mov    rdx,rdi
  414885:	mov    ecx,r15d
  414888:	call   QWORD PTR [rip+0x1b3f6]        # 0x42fc84
  41488e:	cmp    eax,r15d
  414891:	jne    0x414b12
  414897:	nop    WORD PTR [rax+rax*1+0x0]
  4148a0:	xor    r9d,r9d
  4148a3:	xor    r8d,r8d
  4148a6:	xor    edx,edx
  4148a8:	mov    DWORD PTR [rsp+0x20],0x1
  4148b0:	mov    rcx,rsi
  4148b3:	call   rbx
  4148b5:	test   eax,eax
  4148b7:	je     0x414874
  4148b9:	mov    rcx,rsi
  4148bc:	call   r13
  4148bf:	mov    rcx,rsi
  4148c2:	call   r12
  4148c5:	jmp    0x4148a0
  4148c7:	xor    edx,edx
  4148c9:	mov    DWORD PTR [rbp+0x50],0xdeadbeef
  4148d0:	mov    r8,QWORD PTR [rbp-0x8]
  4148d4:	mov    rcx,rbx
  4148d7:	call   QWORD PTR [rip+0x1b3cf]        # 0x42fcac
  4148dd:	cmp    DWORD PTR [rbp+0x50],0xdeadbeef
  4148e4:	je     0x414790
  4148ea:	movzx  eax,BYTE PTR [rbp+rdi*1+0x20]
  4148ef:	mov    r8d,0x20
  4148f5:	bt     eax,r13d
  4148f9:	jae    0x414999
  4148ff:	mov    ecx,DWORD PTR [r14]
  414902:	test   ecx,ecx
  414904:	je     0x41492a
  414906:	cmp    rbx,QWORD PTR [r14+0x8]
  41490a:	je     0x414937
  41490c:	lea    rdx,[r14+0x10]
  414910:	xor    eax,eax
  414912:	jmp    0x41491e
  414914:	add    rdx,0x8
  414918:	cmp    QWORD PTR [rdx-0x8],rbx
  41491c:	je     0x414937
  41491e:	add    eax,0x1
  414921:	cmp    eax,ecx
  414923:	jne    0x414914
  414925:	cmp    ecx,0x3f
  414928:	ja     0x414937
  41492a:	mov    eax,ecx
  41492c:	add    ecx,0x1
  41492f:	mov    QWORD PTR [r14+rax*8+0x8],rbx
  414934:	mov    DWORD PTR [r14],ecx
  414937:	mov    ecx,DWORD PTR [rbp+0x80]
  41493d:	test   ecx,ecx
  41493f:	je     0x414980
  414941:	cmp    rbx,QWORD PTR [rbp+0x88]
  414948:	je     0x415000
  41494e:	lea    rdx,[rbp+0x90]
  414955:	xor    eax,eax
  414957:	jmp    0x41496e
  414959:	nop    DWORD PTR [rax+0x0]
  414960:	add    rdx,0x8
  414964:	cmp    QWORD PTR [rdx-0x8],rbx
  414968:	je     0x415000
  41496e:	add    eax,0x1
  414971:	cmp    eax,ecx
  414973:	jne    0x414960
  414975:	cmp    ecx,0x3f
  414978:	mov    r8d,0x29
  41497e:	ja     0x414999
  414980:	mov    eax,ecx
  414982:	add    ecx,0x1
  414985:	mov    r8d,0x29
  41498b:	mov    QWORD PTR [rbp+rax*8+0x88],rbx
  414993:	mov    DWORD PTR [rbp+0x80],ecx
  414999:	movzx  eax,BYTE PTR [rbp+rdi*1+0x30]
  41499e:	bt     eax,r13d
  4149a2:	jae    0x414a49
  4149a8:	mov    rax,QWORD PTR [rbp+0x920]
  4149af:	or     r8d,0x12
  4149b3:	mov    ecx,DWORD PTR [rax]
  4149b5:	test   ecx,ecx
  4149b7:	je     0x4149e6
  4149b9:	cmp    rbx,QWORD PTR [rax+0x8]
  4149bd:	je     0x4149f9
  4149bf:	lea    rdx,[rax+0x10]
  4149c3:	xor    eax,eax
  4149c5:	jmp    0x4149da
  4149c7:	nop    WORD PTR [rax+rax*1+0x0]
  4149d0:	add    rdx,0x8
  4149d4:	cmp    QWORD PTR [rdx-0x8],rbx
  4149d8:	je     0x4149f9
  4149da:	add    eax,0x1
  4149dd:	cmp    eax,ecx
  4149df:	jne    0x4149d0
  4149e1:	cmp    ecx,0x3f
  4149e4:	ja     0x4149f9
  4149e6:	mov    rdx,QWORD PTR [rbp+0x920]
  4149ed:	mov    eax,ecx
  4149ef:	add    ecx,0x1
  4149f2:	mov    QWORD PTR [rdx+rax*8+0x8],rbx
  4149f7:	mov    DWORD PTR [rdx],ecx
  4149f9:	mov    ecx,DWORD PTR [rbp+0x290]
  4149ff:	test   ecx,ecx
  414a01:	je     0x414a36
  414a03:	cmp    rbx,QWORD PTR [rbp+0x298]
  414a0a:	je     0x414a49
  414a0c:	lea    rdx,[rbp+0x2a0]
  414a13:	xor    eax,eax
  414a15:	jmp    0x414a2a
  414a17:	nop    WORD PTR [rax+rax*1+0x0]
  414a20:	add    rdx,0x8
  414a24:	cmp    QWORD PTR [rdx-0x8],rbx
  414a28:	je     0x414a49
  414a2a:	add    eax,0x1
  414a2d:	cmp    eax,ecx
  414a2f:	jne    0x414a20
  414a31:	cmp    ecx,0x3f
  414a34:	ja     0x414a49
  414a36:	mov    eax,ecx
  414a38:	add    ecx,0x1
  414a3b:	mov    QWORD PTR [rbp+rax*8+0x298],rbx
  414a43:	mov    DWORD PTR [rbp+0x290],ecx
  414a49:	movzx  eax,BYTE PTR [rbp+rdi*1+0x40]
  414a4e:	bt     eax,r13d
  414a52:	jae    0x414af9
  414a58:	mov    rax,QWORD PTR [rbp+0x928]
  414a5f:	or     r8d,0x4
  414a63:	mov    ecx,DWORD PTR [rax]
  414a65:	test   ecx,ecx
  414a67:	je     0x414a96
  414a69:	cmp    rbx,QWORD PTR [rax+0x8]
  414a6d:	je     0x414aa9
  414a6f:	lea    rdx,[rax+0x10]
  414a73:	xor    eax,eax
  414a75:	jmp    0x414a8a
  414a77:	nop    WORD PTR [rax+rax*1+0x0]
  414a80:	add    rdx,0x8
  414a84:	cmp    QWORD PTR [rdx-0x8],rbx
  414a88:	je     0x414aa9
  414a8a:	add    eax,0x1
  414a8d:	cmp    eax,ecx
  414a8f:	jne    0x414a80
  414a91:	cmp    ecx,0x3f
  414a94:	ja     0x414aa9
  414a96:	mov    rdi,QWORD PTR [rbp+0x928]
  414a9d:	mov    eax,ecx
  414a9f:	add    ecx,0x1
  414aa2:	mov    QWORD PTR [rdi+rax*8+0x8],rbx
  414aa7:	mov    DWORD PTR [rdi],ecx
  414aa9:	mov    ecx,DWORD PTR [rbp+0x4a0]
  414aaf:	test   ecx,ecx
  414ab1:	je     0x414ae6
  414ab3:	cmp    rbx,QWORD PTR [rbp+0x4a8]
  414aba:	je     0x414af9
  414abc:	lea    rdx,[rbp+0x4b0]
  414ac3:	xor    eax,eax
  414ac5:	jmp    0x414ada
  414ac7:	nop    WORD PTR [rax+rax*1+0x0]
  414ad0:	add    rdx,0x8
  414ad4:	cmp    QWORD PTR [rdx-0x8],rbx
  414ad8:	je     0x414af9
  414ada:	add    eax,0x1
  414add:	cmp    eax,ecx
  414adf:	jne    0x414ad0
  414ae1:	cmp    ecx,0x3f
  414ae4:	ja     0x414af9
  414ae6:	mov    eax,ecx
  414ae8:	add    ecx,0x1
  414aeb:	mov    QWORD PTR [rbp+rax*8+0x4a8],rbx
  414af3:	mov    DWORD PTR [rbp+0x4a0],ecx
  414af9:	mov    rdx,QWORD PTR [rip+0x17ae8]        # 0x42c5e8
  414b00:	mov    rcx,rbx
  414b03:	call   QWORD PTR [rip+0x1b1ab]        # 0x42fcb4
  414b09:	add    DWORD PTR [rbp-0x18],0x1
  414b0d:	jmp    0x414740
  414b12:	movzx  edi,BYTE PTR [rbp-0x8]
  414b16:	test   dil,dil
  414b19:	je     0x414b4d
  414b1b:	cmp    BYTE PTR [rbp-0x41],0x0
  414b1f:	je     0x414b4d
  414b21:	lea    rax,[rip+0x17ab4]        # 0x42c5dc
  414b28:	lea    rdx,[rbp+0x80]
  414b2f:	lea    r9,[rbp+0x4a0]
  414b36:	lea    r8,[rbp+0x290]
  414b3d:	xor    ecx,ecx
  414b3f:	mov    QWORD PTR [rsp+0x20],rax
  414b44:	mov    rax,QWORD PTR [rbp-0x50]
  414b48:	call   rax
  414b4a:	mov    DWORD PTR [rbp-0xc],eax
  414b4d:	cmp    r15d,0x1
  414b51:	jbe    0x414d57
  414b57:	mov    eax,DWORD PTR [rbp-0x10]
  414b5a:	test   eax,eax
  414b5c:	jle    0x414d46
  414b62:	lea    rdi,[rbp+0x30]
  414b66:	mov    r15d,0x1
  414b6c:	xor    esi,esi
  414b6e:	mov    DWORD PTR [rbp-0x18],r14d
  414b72:	mov    DWORD PTR [rbp-0x8],r15d
  414b76:	mov    QWORD PTR [rbp-0x30],rdi
  414b7a:	lea    rdi,[rbp+0x20]
  414b7e:	mov    QWORD PTR [rbp-0x38],rdi
  414b82:	lea    rdi,[rbp+0x40]
  414b86:	mov    QWORD PTR [rbp-0x40],rdi
  414b8a:	mov    edi,eax
  414b8c:	jmp    0x414b97
  414b8e:	xchg   ax,ax
  414b90:	add    esi,0x1
  414b93:	cmp    esi,edi
  414b95:	je     0x414c16
  414b97:	mov    r10d,esi
  414b9a:	mov    r14d,esi
  414b9d:	sar    r10d,0x3
  414ba1:	and    r14d,0x7
  414ba5:	movsxd r15,r10d
  414ba8:	movzx  eax,BYTE PTR [rbp+r15*1+0x10]
  414bae:	bt     eax,r14d
  414bb2:	jae    0x414b90
  414bb4:	mov    ecx,esi
  414bb6:	call   0x413c50
  414bbb:	mov    edx,DWORD PTR [rbp-0x8]
  414bbe:	mov    rcx,QWORD PTR [rbp+rdx*8+0x6b0]
  414bc6:	cmp    rcx,rax
  414bc9:	jne    0x414b90
  414bcb:	mov    rax,QWORD PTR [rbp-0x40]
  414bcf:	mov    r9,QWORD PTR [rbp-0x30]
  414bd3:	mov    edx,esi
  414bd5:	mov    r8,QWORD PTR [rbp-0x38]
  414bd9:	add    DWORD PTR [rbp-0x8],0x1
  414bdd:	mov    QWORD PTR [rsp+0x20],rax
  414be2:	call   0x414030
  414be7:	movzx  eax,BYTE PTR [rbp+r15*1+0x28]
  414bed:	bt     eax,r14d
  414bf1:	jb     0x414c0b
  414bf3:	movzx  eax,BYTE PTR [rbp+r15*1+0x38]
  414bf9:	bt     eax,r14d
  414bfd:	jb     0x414c0b
  414bff:	movzx  eax,BYTE PTR [rbp+r15*1+0x48]
  414c05:	bt     eax,r14d
  414c09:	jae    0x414b90
  414c0b:	add    esi,0x1
  414c0e:	add    DWORD PTR [rbp-0xc],0x1
  414c12:	cmp    esi,edi
  414c14:	jne    0x414b97
  414c16:	mov    edx,DWORD PTR [rbp-0xc]
  414c19:	mov    r14d,DWORD PTR [rbp-0x18]
  414c1d:	mov    r15d,DWORD PTR [rbp-0x8]
  414c21:	test   edx,edx
  414c23:	jne    0x414d57
  414c29:	cmp    r14d,0xffffffff
  414c2d:	je     0x414c42
  414c2f:	cmp    r15d,0x1
  414c33:	jbe    0x415021
  414c39:	test   r14d,r14d
  414c3c:	je     0x415021
  414c42:	lea    rax,[rbp+0x80]
  414c49:	mov    rsi,QWORD PTR [rbp+0x918]
  414c50:	mov    ecx,0x41
  414c55:	mov    edx,0x1
  414c5a:	mov    rdi,rax
  414c5d:	lea    rax,[rbp+0x290]
  414c64:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  414c67:	mov    rdi,rax
  414c6a:	mov    rsi,QWORD PTR [rbp+0x920]
  414c71:	lea    rax,[rbp+0x4a0]
  414c78:	mov    cl,0x41
  414c7a:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  414c7d:	mov    rdi,rax
  414c80:	mov    rsi,QWORD PTR [rbp+0x928]
  414c87:	mov    cl,0x41
  414c89:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  414c8c:	mov    cl,0x1
  414c8e:	call   QWORD PTR [rip+0x1ac88]        # 0x42f91c
  414c94:	test   r14d,r14d
  414c97:	sete   dil
  414c9b:	or     dil,BYTE PTR [rbp-0x20]
  414c9f:	jne    0x414852
  414ca5:	lea    r10,[rbp+0x290]
  414cac:	lea    r11,[rbp+0x80]
  414cb3:	lea    rax,[rbp+0x4a0]
  414cba:	lea    rdx,[rip+0x1791b]        # 0x42c5dc
  414cc1:	xor    ecx,ecx
  414cc3:	mov    r8,r10
  414cc6:	mov    QWORD PTR [rbp-0x18],r10
  414cca:	mov    QWORD PTR [rbp-0x8],r11
  414cce:	mov    QWORD PTR [rsp+0x20],rdx
  414cd3:	mov    QWORD PTR [rbp-0x30],rax
  414cd7:	mov    rdx,r11
  414cda:	mov    r9,rax
  414cdd:	call   QWORD PTR [rip+0x1b059]        # 0x42fd3c
  414ce3:	test   eax,eax
  414ce5:	mov    DWORD PTR [rbp-0xc],eax
  414ce8:	mov    r11,QWORD PTR [rbp-0x8]
  414cec:	mov    r10,QWORD PTR [rbp-0x18]
  414cf0:	je     0x414d10
  414cf2:	call   0x41d900
  414cf7:	mov    edx,DWORD PTR [rbp-0x48]
  414cfa:	mov    r14d,edx
  414cfd:	sub    r14d,eax
  414d00:	cmp    eax,edx
  414d02:	mov    eax,0x0
  414d07:	cmovg  r14d,eax
  414d0b:	jmp    0x414868
  414d10:	mov    ecx,0x41
  414d15:	mov    rdi,r11
  414d18:	mov    rsi,QWORD PTR [rbp+0x918]
  414d1f:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  414d22:	mov    rdi,r10
  414d25:	mov    rsi,QWORD PTR [rbp+0x920]
  414d2c:	mov    cl,0x41
  414d2e:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  414d31:	mov    rdi,QWORD PTR [rbp-0x30]
  414d35:	mov    rsi,QWORD PTR [rbp+0x928]
  414d3c:	mov    cl,0x41
  414d3e:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  414d41:	jmp    0x414852
  414d46:	mov    edx,DWORD PTR [rbp-0xc]
  414d49:	mov    r15d,0x1
  414d4f:	test   edx,edx
  414d51:	je     0x414c29
  414d57:	mov    r14,QWORD PTR [rbp+0x918]
  414d5e:	mov    rax,QWORD PTR [rbp+0x920]
  414d65:	mov    DWORD PTR [r14],0x0
  414d6c:	mov    DWORD PTR [rax],0x0
  414d72:	mov    rax,QWORD PTR [rbp+0x928]
  414d79:	mov    DWORD PTR [rax],0x0
  414d7f:	mov    eax,DWORD PTR [rbp-0x10]
  414d82:	test   eax,eax
  414d84:	jle    0x414f02
  414d8a:	lea    rax,[rbp+0x80]
  414d91:	lea    r12,[rbp+0x4a0]
  414d98:	mov    ebx,0x1
  414d9d:	xor    r13d,r13d
  414da0:	mov    DWORD PTR [rbp-0x8],ebx
  414da3:	mov    rdi,QWORD PTR [rbp+0x920]
  414daa:	mov    QWORD PTR [rbp-0x18],rax
  414dae:	lea    rax,[rbp+0x290]
  414db5:	mov    r15,QWORD PTR [rbp+0x928]
  414dbc:	mov    QWORD PTR [rbp-0x28],r12
  414dc0:	mov    QWORD PTR [rbp-0x20],rax
  414dc4:	jmp    0x414dd4
  414dc6:	add    r13,0x1
  414dca:	cmp    DWORD PTR [rbp-0x10],r13d
  414dce:	jle    0x414f02
  414dd4:	mov    esi,r13d
  414dd7:	mov    ebx,r13d
  414dda:	sar    esi,0x3
  414ddd:	and    ebx,0x7
  414de0:	movsxd rsi,esi
  414de3:	movzx  eax,BYTE PTR [rbp+rsi*1+0x10]
  414de8:	bt     eax,ebx
  414deb:	jae    0x414dc6
  414ded:	mov    ecx,r13d
  414df0:	call   0x413c50
  414df5:	mov    r12,rax
  414df8:	mov    eax,DWORD PTR [rbp-0x8]
  414dfb:	cmp    QWORD PTR [rbp+rax*8+0x6b0],r12
  414e03:	je     0x414f19
  414e09:	xor    r8d,r8d
  414e0c:	xor    edx,edx
  414e0e:	mov    rcx,r12
  414e11:	call   QWORD PTR [rip+0x1ae9d]        # 0x42fcb4
  414e17:	mov    rdx,QWORD PTR [rbp-0x18]
  414e1b:	mov    rcx,r12
  414e1e:	call   0x416cb0
  414e23:	test   eax,eax
  414e25:	je     0x414e5a
  414e27:	mov    ecx,DWORD PTR [r14]
  414e2a:	test   ecx,ecx
  414e2c:	je     0x41508e
  414e32:	cmp    QWORD PTR [r14+0x8],r13
  414e36:	je     0x414e5a
  414e38:	lea    rdx,[r14+0x10]
  414e3c:	xor    eax,eax
  414e3e:	jmp    0x414e4a
  414e40:	add    rdx,0x8
  414e44:	cmp    r13,QWORD PTR [rdx-0x8]
  414e48:	je     0x414e5a
  414e4a:	add    eax,0x1
  414e4d:	cmp    eax,ecx
  414e4f:	jne    0x414e40
  414e51:	cmp    ecx,0x3f
  414e54:	jbe    0x41508e
  414e5a:	mov    rdx,QWORD PTR [rbp-0x20]
  414e5e:	mov    rcx,r12
  414e61:	call   0x416cb0
  414e66:	test   eax,eax
  414e68:	je     0x414e9c
  414e6a:	mov    ecx,DWORD PTR [rdi]
  414e6c:	test   ecx,ecx
  414e6e:	je     0x4150a0
  414e74:	cmp    QWORD PTR [rdi+0x8],r13
  414e78:	je     0x414e9c
  414e7a:	lea    rax,[rdi+0x10]
  414e7e:	xor    edx,edx
  414e80:	jmp    0x414e8c
  414e82:	add    rax,0x8
  414e86:	cmp    QWORD PTR [rax-0x8],r13
  414e8a:	je     0x414e9c
  414e8c:	add    edx,0x1
  414e8f:	cmp    edx,ecx
  414e91:	jne    0x414e82
  414e93:	cmp    ecx,0x3f
  414e96:	jbe    0x4150a0
  414e9c:	mov    rdx,QWORD PTR [rbp-0x28]
  414ea0:	mov    rcx,r12
  414ea3:	call   0x416cb0
  414ea8:	test   eax,eax
  414eaa:	je     0x414dc6
  414eb0:	mov    ecx,DWORD PTR [r15]
  414eb3:	test   ecx,ecx
  414eb5:	je     0x414ee7
  414eb7:	cmp    QWORD PTR [r15+0x8],r13
  414ebb:	je     0x414dc6
  414ec1:	lea    rdx,[r15+0x10]
  414ec5:	xor    eax,eax
  414ec7:	jmp    0x414ed7
  414ec9:	add    rdx,0x8
  414ecd:	cmp    QWORD PTR [rdx-0x8],r13
  414ed1:	je     0x414dc6
  414ed7:	add    eax,0x1
  414eda:	cmp    eax,ecx
  414edc:	jne    0x414ec9
  414ede:	cmp    ecx,0x3f
  414ee1:	ja     0x414dc6
  414ee7:	mov    eax,ecx
  414ee9:	add    ecx,0x1
  414eec:	mov    QWORD PTR [r15+rax*8+0x8],r13
  414ef1:	add    r13,0x1
  414ef5:	cmp    DWORD PTR [rbp-0x10],r13d
  414ef9:	mov    DWORD PTR [r15],ecx
  414efc:	jg     0x414dd4
  414f02:	mov    eax,DWORD PTR [rbp-0xc]
  414f05:	lea    rsp,[rbp+0x8c8]
  414f0c:	pop    rbx
  414f0d:	pop    rsi
  414f0e:	pop    rdi
  414f0f:	pop    r12
  414f11:	pop    r13
  414f13:	pop    r14
  414f15:	pop    r15
  414f17:	pop    rbp
  414f18:	ret    
  414f19:	movzx  eax,BYTE PTR [rbp+rsi*1+0x28]
  414f1e:	add    DWORD PTR [rbp-0x8],0x1
  414f22:	bt     eax,ebx
  414f25:	jae    0x414f63
  414f27:	mov    eax,DWORD PTR [r14]
  414f2a:	test   eax,eax
  414f2c:	je     0x414f56
  414f2e:	cmp    QWORD PTR [r14+0x8],r13
  414f32:	je     0x414f63
  414f34:	lea    r8,[r14+0x10]
  414f38:	xor    ecx,ecx
  414f3a:	jmp    0x414f4a
  414f3c:	nop    DWORD PTR [rax+0x0]
  414f40:	add    r8,0x8
  414f44:	cmp    QWORD PTR [r8-0x8],r13
  414f48:	je     0x414f63
  414f4a:	add    ecx,0x1
  414f4d:	cmp    ecx,eax
  414f4f:	jne    0x414f40
  414f51:	cmp    eax,0x3f
  414f54:	ja     0x414f63
  414f56:	mov    ecx,eax
  414f58:	add    eax,0x1
  414f5b:	mov    QWORD PTR [r14+rcx*8+0x8],r13
  414f60:	mov    DWORD PTR [r14],eax
  414f63:	movzx  eax,BYTE PTR [rbp+rsi*1+0x38]
  414f68:	bt     eax,ebx
  414f6b:	jae    0x414fa3
  414f6d:	mov    eax,DWORD PTR [rdi]
  414f6f:	test   eax,eax
  414f71:	je     0x414f97
  414f73:	cmp    QWORD PTR [rdi+0x8],r13
  414f77:	je     0x414fa3
  414f79:	lea    r8,[rdi+0x10]
  414f7d:	xor    ecx,ecx
  414f7f:	jmp    0x414f8b
  414f81:	add    r8,0x8
  414f85:	cmp    QWORD PTR [r8-0x8],r13
  414f89:	je     0x414fa3
  414f8b:	add    ecx,0x1
  414f8e:	cmp    ecx,eax
  414f90:	jne    0x414f81
  414f92:	cmp    eax,0x3f
  414f95:	ja     0x414fa3
  414f97:	mov    ecx,eax
  414f99:	add    eax,0x1
  414f9c:	mov    QWORD PTR [rdi+rcx*8+0x8],r13
  414fa1:	mov    DWORD PTR [rdi],eax
  414fa3:	movzx  eax,BYTE PTR [rbp+rsi*1+0x48]
  414fa8:	bt     eax,ebx
  414fab:	jae    0x414dc6
  414fb1:	mov    eax,DWORD PTR [r15]
  414fb4:	test   eax,eax
  414fb6:	je     0x414fee
  414fb8:	cmp    QWORD PTR [r15+0x8],r13
  414fbc:	je     0x414dc6
  414fc2:	lea    rcx,[r15+0x10]
  414fc6:	xor    edx,edx
  414fc8:	jmp    0x414fde
  414fca:	nop    WORD PTR [rax+rax*1+0x0]
  414fd0:	add    rcx,0x8
  414fd4:	cmp    QWORD PTR [rcx-0x8],r13
  414fd8:	je     0x414dc6
  414fde:	add    edx,0x1
  414fe1:	cmp    edx,eax
  414fe3:	jne    0x414fd0
  414fe5:	cmp    eax,0x3f
  414fe8:	ja     0x414dc6
  414fee:	mov    edx,eax
  414ff0:	add    eax,0x1
  414ff3:	mov    QWORD PTR [r15+rdx*8+0x8],r13
  414ff8:	mov    DWORD PTR [r15],eax
  414ffb:	jmp    0x414dc6
  415000:	mov    r8d,0x29
  415006:	jmp    0x414999
  41500b:	call   QWORD PTR [rip+0x1a9cb]        # 0x42f9dc
  415011:	mov    DWORD PTR [rax],0x9
  415017:	mov    eax,0xffffffff
  41501c:	jmp    0x414f05
  415021:	mov    eax,r14d
  415024:	mov    r14,QWORD PTR [rbp+0x918]
  41502b:	test   eax,eax
  41502d:	jne    0x414d5e
  415033:	cmp    QWORD PTR [rbp+0x930],0x0
  41503b:	je     0x414d5e
  415041:	mov    rax,QWORD PTR [rbp+0x930]
  415048:	mov    DWORD PTR [rax+0x8],0x0
  41504f:	mov    QWORD PTR [rax],0x0
  415056:	jmp    0x414d5e
  41505b:	mov    rax,QWORD PTR [rip+0x17586]        # 0x42c5e8
  415062:	mov    DWORD PTR [rbp-0xc],0xffffffff
  415069:	test   rax,rax
  41506c:	jne    0x4144d0
  415072:	xor    r9d,r9d
  415075:	xor    r8d,r8d
  415078:	xor    edx,edx
  41507a:	xor    ecx,ecx
  41507c:	call   QWORD PTR [rip+0x1a79a]        # 0x42f81c
  415082:	mov    QWORD PTR [rip+0x1755f],rax        # 0x42c5e8
  415089:	jmp    0x4144d0
  41508e:	mov    eax,ecx
  415090:	add    ecx,0x1
  415093:	mov    QWORD PTR [r14+rax*8+0x8],r13
  415098:	mov    DWORD PTR [r14],ecx
  41509b:	jmp    0x414e5a
  4150a0:	mov    eax,ecx
  4150a2:	add    ecx,0x1
  4150a5:	mov    QWORD PTR [rdi+rax*8+0x8],r13
  4150aa:	mov    DWORD PTR [rdi],ecx
  4150ac:	jmp    0x414e9c
  4150b1:	sub    rsp,0x220
  4150b8:	lea    rax,[rsp+0x30]
  4150bd:	mov    QWORD PTR [rbp+0x928],rax
  4150c4:	jmp    0x4146cb
  4150c9:	sub    rsp,0x220
  4150d0:	cmp    QWORD PTR [rbp+0x920],0x0
  4150d8:	lea    r14,[rsp+0x30]
  4150dd:	jne    0x4145b3
  4150e3:	sub    rsp,0x220
  4150ea:	lea    rax,[rsp+0x30]
  4150ef:	mov    QWORD PTR [rbp+0x920],rax
  4150f6:	jmp    0x41466c
  4150fb:	mov    ecx,DWORD PTR [rbp-0xc]
  4150fe:	call   QWORD PTR [rip+0x1a810]        # 0x42f914
  415104:	xor    eax,eax
  415106:	jmp    0x414f05
  41510b:	mov    BYTE PTR [rbp-0x41],0x0
  41510f:	mov    BYTE PTR [rbp-0x20],0x1
  415113:	mov    r15d,0x1
  415119:	jmp    0x4147e8
  41511e:	nop
  41511f:	nop
  415120:	push   rdi
  415121:	push   rsi
  415122:	push   rbx
  415123:	sub    rsp,0x30
  415127:	mov    rbx,rdx
  41512a:	mov    rsi,r8
  41512d:	mov    edi,r9d
  415130:	call   0x413c50
  415135:	cmp    rax,0xffffffffffffffff
  415139:	mov    rcx,rax
  41513c:	je     0x415280
  415142:	mov    rdx,rbx
  415145:	mov    r9d,edi
  415148:	mov    r8d,esi
  41514b:	call   QWORD PTR [rip+0x1abf3]        # 0x42fd44
  415151:	test   eax,eax
  415153:	mov    ebx,eax
  415155:	js     0x415162
  415157:	movsxd rax,ebx
  41515a:	add    rsp,0x30
  41515e:	pop    rbx
  41515f:	pop    rsi
  415160:	pop    rdi
  415161:	ret    
  415162:	call   QWORD PTR [rip+0x1ab54]        # 0x42fcbc
  415168:	cmp    eax,0x2740
  41516d:	mov    esi,eax
  41516f:	je     0x4153f5
  415175:	jg     0x4151c0
  415177:	cmp    eax,0x2736
  41517c:	je     0x4153d3
  415182:	jle    0x415240
  415188:	cmp    eax,0x273a
  41518d:	je     0x4153c2
  415193:	jg     0x4152c2
  415199:	cmp    eax,0x2738
  41519e:	je     0x415417
  4151a4:	jg     0x415406
  4151aa:	call   QWORD PTR [rip+0x1a82c]        # 0x42f9dc
  4151b0:	mov    DWORD PTR [rax],0x6d
  4151b6:	jmp    0x415157
  4151b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4151c0:	cmp    eax,0x2748
  4151c5:	je     0x4153e4
  4151cb:	jg     0x415200
  4151cd:	cmp    eax,0x2744
  4151d2:	je     0x4153b1
  4151d8:	jg     0x4152a0
  4151de:	cmp    eax,0x2742
  4151e3:	je     0x4153a0
  4151e9:	jg     0x41538f
  4151ef:	call   QWORD PTR [rip+0x1a7e7]        # 0x42f9dc
  4151f5:	mov    DWORD PTR [rax],0x65
  4151fb:	jmp    0x415157
  415200:	cmp    eax,0x274e
  415205:	je     0x41545b
  41520b:	jg     0x415302
  415211:	cmp    eax,0x274c
  415216:	je     0x41547d
  41521c:	jg     0x41546c
  415222:	cmp    eax,0x2749
  415227:	jne    0x4152e3
  41522d:	call   QWORD PTR [rip+0x1a7a9]        # 0x42f9dc
  415233:	mov    DWORD PTR [rax],0x7e
  415239:	jmp    0x415157
  41523e:	xchg   ax,ax
  415240:	cmp    eax,0x57
  415243:	je     0x41534b
  415249:	jle    0x415330
  41524f:	cmp    eax,0x2734
  415254:	je     0x41549f
  41525a:	jg     0x41548e
  415260:	cmp    eax,0x2733
  415265:	jne    0x4152e3
  415267:	call   QWORD PTR [rip+0x1a76f]        # 0x42f9dc
  41526d:	mov    DWORD PTR [rax],0x8c
  415273:	jmp    0x415157
  415278:	nop    DWORD PTR [rax+rax*1+0x0]
  415280:	mov    QWORD PTR [rsp+0x28],rax
  415285:	call   QWORD PTR [rip+0x1a751]        # 0x42f9dc
  41528b:	mov    rcx,QWORD PTR [rsp+0x28]
  415290:	mov    DWORD PTR [rax],0x9
  415296:	mov    rax,rcx
  415299:	jmp    0x41515a
  41529e:	xchg   ax,ax
  4152a0:	cmp    eax,0x2746
  4152a5:	je     0x415439
  4152ab:	jg     0x415428
  4152b1:	call   QWORD PTR [rip+0x1a725]        # 0x42f9dc
  4152b7:	mov    DWORD PTR [rax],0x6a
  4152bd:	jmp    0x415157
  4152c2:	cmp    eax,0x273d
  4152c7:	je     0x41537e
  4152cd:	cmp    eax,0x273f
  4152d2:	je     0x41536d
  4152d8:	cmp    eax,0x273b
  4152dd:	je     0x41544a
  4152e3:	call   QWORD PTR [rip+0x1a6f3]        # 0x42f9dc
  4152e9:	lea    ecx,[rsi-0x2711]
  4152ef:	lea    edx,[rsi-0x2710]
  4152f5:	cmp    ecx,0x17
  4152f8:	cmovbe esi,edx
  4152fb:	mov    DWORD PTR [rax],esi
  4152fd:	jmp    0x415157
  415302:	cmp    eax,0x2751
  415307:	je     0x4154c1
  41530d:	cmp    eax,0x2752
  415312:	je     0x4154b0
  415318:	cmp    eax,0x274f
  41531d:	jne    0x4152e3
  41531f:	call   QWORD PTR [rip+0x1a6b7]        # 0x42f9dc
  415325:	mov    DWORD PTR [rax],0x26
  41532b:	jmp    0x415157
  415330:	cmp    eax,0x6
  415333:	je     0x41535c
  415335:	cmp    eax,0x8
  415338:	jne    0x4152e3
  41533a:	call   QWORD PTR [rip+0x1a69c]        # 0x42f9dc
  415340:	mov    DWORD PTR [rax],0xc
  415346:	jmp    0x415157
  41534b:	call   QWORD PTR [rip+0x1a68b]        # 0x42f9dc
  415351:	mov    DWORD PTR [rax],0x16
  415357:	jmp    0x415157
  41535c:	call   QWORD PTR [rip+0x1a67a]        # 0x42f9dc
  415362:	mov    DWORD PTR [rax],0x9
  415368:	jmp    0x415157
  41536d:	call   QWORD PTR [rip+0x1a669]        # 0x42f9dc
  415373:	mov    DWORD PTR [rax],0x66
  415379:	jmp    0x415157
  41537e:	call   QWORD PTR [rip+0x1a658]        # 0x42f9dc
  415384:	mov    DWORD PTR [rax],0x82
  41538a:	jmp    0x415157
  41538f:	call   QWORD PTR [rip+0x1a647]        # 0x42f9dc
  415395:	mov    DWORD PTR [rax],0x76
  41539b:	jmp    0x415157
  4153a0:	call   QWORD PTR [rip+0x1a636]        # 0x42f9dc
  4153a6:	mov    DWORD PTR [rax],0x74
  4153ac:	jmp    0x415157
  4153b1:	call   QWORD PTR [rip+0x1a625]        # 0x42f9dc
  4153b7:	mov    DWORD PTR [rax],0x75
  4153bd:	jmp    0x415157
  4153c2:	call   QWORD PTR [rip+0x1a614]        # 0x42f9dc
  4153c8:	mov    DWORD PTR [rax],0x7b
  4153ce:	jmp    0x415157
  4153d3:	call   QWORD PTR [rip+0x1a603]        # 0x42f9dc
  4153d9:	mov    DWORD PTR [rax],0x80
  4153df:	jmp    0x415157
  4153e4:	call   QWORD PTR [rip+0x1a5f2]        # 0x42f9dc
  4153ea:	mov    DWORD PTR [rax],0x71
  4153f0:	jmp    0x415157
  4153f5:	call   QWORD PTR [rip+0x1a5e1]        # 0x42f9dc
  4153fb:	mov    DWORD PTR [rax],0x64
  415401:	jmp    0x415157
  415406:	call   QWORD PTR [rip+0x1a5d0]        # 0x42f9dc
  41540c:	mov    DWORD PTR [rax],0x88
  415412:	jmp    0x415157
  415417:	call   QWORD PTR [rip+0x1a5bf]        # 0x42f9dc
  41541d:	mov    DWORD PTR [rax],0x73
  415423:	jmp    0x415157
  415428:	call   QWORD PTR [rip+0x1a5ae]        # 0x42f9dc
  41542e:	mov    DWORD PTR [rax],0x77
  415434:	jmp    0x415157
  415439:	call   QWORD PTR [rip+0x1a59d]        # 0x42f9dc
  41543f:	mov    DWORD PTR [rax],0x6c
  415445:	jmp    0x415157
  41544a:	call   QWORD PTR [rip+0x1a58c]        # 0x42f9dc
  415450:	mov    DWORD PTR [rax],0x87
  415456:	jmp    0x415157
  41545b:	call   QWORD PTR [rip+0x1a57b]        # 0x42f9dc
  415461:	mov    DWORD PTR [rax],0x72
  415467:	jmp    0x415157
  41546c:	call   QWORD PTR [rip+0x1a56a]        # 0x42f9dc
  415472:	mov    DWORD PTR [rax],0x6b
  415478:	jmp    0x415157
  41547d:	call   QWORD PTR [rip+0x1a559]        # 0x42f9dc
  415483:	mov    DWORD PTR [rax],0x8a
  415489:	jmp    0x415157
  41548e:	call   QWORD PTR [rip+0x1a548]        # 0x42f9dc
  415494:	mov    DWORD PTR [rax],0x67
  41549a:	jmp    0x415157
  41549f:	call   QWORD PTR [rip+0x1a537]        # 0x42f9dc
  4154a5:	mov    DWORD PTR [rax],0x70
  4154ab:	jmp    0x415157
  4154b0:	call   QWORD PTR [rip+0x1a526]        # 0x42f9dc
  4154b6:	mov    DWORD PTR [rax],0x29
  4154bc:	jmp    0x415157
  4154c1:	call   QWORD PTR [rip+0x1a515]        # 0x42f9dc
  4154c7:	mov    DWORD PTR [rax],0x6e
  4154cd:	jmp    0x415157
  4154d2:	nop
  4154d3:	nop
  4154d4:	nop
  4154d5:	nop
  4154d6:	nop
  4154d7:	nop
  4154d8:	nop
  4154d9:	nop
  4154da:	nop
  4154db:	nop
  4154dc:	nop
  4154dd:	nop
  4154de:	nop
  4154df:	nop
  4154e0:	push   rdi
  4154e1:	push   rsi
  4154e2:	push   rbx
  4154e3:	sub    rsp,0x30
  4154e7:	mov    ebx,edx
  4154e9:	call   0x413c50
  4154ee:	cmp    rax,0xffffffffffffffff
  4154f2:	mov    rcx,rax
  4154f5:	je     0x415630
  4154fb:	mov    edx,ebx
  4154fd:	call   QWORD PTR [rip+0x1a849]        # 0x42fd4c
  415503:	test   eax,eax
  415505:	mov    esi,eax
  415507:	mov    ebx,eax
  415509:	js     0x415515
  41550b:	mov    eax,ebx
  41550d:	add    rsp,0x30
  415511:	pop    rbx
  415512:	pop    rsi
  415513:	pop    rdi
  415514:	ret    
  415515:	call   QWORD PTR [rip+0x1a7a1]        # 0x42fcbc
  41551b:	cmp    eax,0x2740
  415520:	mov    edi,eax
  415522:	je     0x4157bb
  415528:	jg     0x415570
  41552a:	cmp    eax,0x2736
  41552f:	je     0x415799
  415535:	jle    0x4155f2
  41553b:	cmp    eax,0x273a
  415540:	je     0x415788
  415546:	jg     0x415674
  41554c:	cmp    eax,0x2738
  415551:	je     0x4157df
  415557:	jg     0x4157cc
  41555d:	call   QWORD PTR [rip+0x1a479]        # 0x42f9dc
  415563:	mov    ebx,esi
  415565:	mov    DWORD PTR [rax],0x6d
  41556b:	jmp    0x41550b
  41556d:	nop    DWORD PTR [rax]
  415570:	cmp    eax,0x2748
  415575:	je     0x4157aa
  41557b:	jg     0x4155b2
  41557d:	cmp    eax,0x2744
  415582:	je     0x415777
  415588:	jg     0x415650
  41558e:	cmp    eax,0x2742
  415593:	je     0x415766
  415599:	jg     0x415753
  41559f:	call   QWORD PTR [rip+0x1a437]        # 0x42f9dc
  4155a5:	mov    ebx,esi
  4155a7:	mov    DWORD PTR [rax],0x65
  4155ad:	jmp    0x41550b
  4155b2:	cmp    eax,0x274e
  4155b7:	je     0x415827
  4155bd:	jg     0x4156c0
  4155c3:	cmp    eax,0x274c
  4155c8:	je     0x41584b
  4155ce:	jg     0x415838
  4155d4:	cmp    eax,0x2749
  4155d9:	jne    0x415695
  4155df:	call   QWORD PTR [rip+0x1a3f7]        # 0x42f9dc
  4155e5:	mov    ebx,esi
  4155e7:	mov    DWORD PTR [rax],0x7e
  4155ed:	jmp    0x41550b
  4155f2:	cmp    eax,0x57
  4155f5:	je     0x41570d
  4155fb:	jle    0x4156f0
  415601:	cmp    eax,0x2734
  415606:	je     0x41586f
  41560c:	jg     0x41585c
  415612:	cmp    eax,0x2733
  415617:	jne    0x415695
  415619:	call   QWORD PTR [rip+0x1a3bd]        # 0x42f9dc
  41561f:	mov    ebx,esi
  415621:	mov    DWORD PTR [rax],0x8c
  415627:	jmp    0x41550b
  41562c:	nop    DWORD PTR [rax+0x0]
  415630:	mov    QWORD PTR [rsp+0x28],rax
  415635:	call   QWORD PTR [rip+0x1a3a1]        # 0x42f9dc
  41563b:	mov    rcx,QWORD PTR [rsp+0x28]
  415640:	mov    DWORD PTR [rax],0x9
  415646:	mov    ebx,ecx
  415648:	jmp    0x41550b
  41564d:	nop    DWORD PTR [rax]
  415650:	cmp    eax,0x2746
  415655:	je     0x415803
  41565b:	jg     0x4157f0
  415661:	call   QWORD PTR [rip+0x1a375]        # 0x42f9dc
  415667:	mov    ebx,esi
  415669:	mov    DWORD PTR [rax],0x6a
  41566f:	jmp    0x41550b
  415674:	cmp    eax,0x273d
  415679:	je     0x415742
  41567f:	cmp    eax,0x273f
  415684:	je     0x41572f
  41568a:	cmp    eax,0x273b
  41568f:	je     0x415814
  415695:	call   QWORD PTR [rip+0x1a341]        # 0x42f9dc
  41569b:	lea    ecx,[rdi-0x2711]
  4156a1:	lea    edx,[rdi-0x2710]
  4156a7:	mov    ebx,esi
  4156a9:	cmp    ecx,0x17
  4156ac:	cmovbe edi,edx
  4156af:	mov    DWORD PTR [rax],edi
  4156b1:	jmp    0x41550b
  4156b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4156c0:	cmp    eax,0x2751
  4156c5:	je     0x415893
  4156cb:	cmp    eax,0x2752
  4156d0:	je     0x415880
  4156d6:	cmp    eax,0x274f
  4156db:	jne    0x415695
  4156dd:	call   QWORD PTR [rip+0x1a2f9]        # 0x42f9dc
  4156e3:	mov    ebx,esi
  4156e5:	mov    DWORD PTR [rax],0x26
  4156eb:	jmp    0x41550b
  4156f0:	cmp    eax,0x6
  4156f3:	je     0x41571e
  4156f5:	cmp    eax,0x8
  4156f8:	jne    0x415695
  4156fa:	call   QWORD PTR [rip+0x1a2dc]        # 0x42f9dc
  415700:	mov    ebx,esi
  415702:	mov    DWORD PTR [rax],0xc
  415708:	jmp    0x41550b
  41570d:	call   QWORD PTR [rip+0x1a2c9]        # 0x42f9dc
  415713:	mov    DWORD PTR [rax],0x16
  415719:	jmp    0x41550b
  41571e:	call   QWORD PTR [rip+0x1a2b8]        # 0x42f9dc
  415724:	mov    DWORD PTR [rax],0x9
  41572a:	jmp    0x41550b
  41572f:	call   QWORD PTR [rip+0x1a2a7]        # 0x42f9dc
  415735:	mov    ebx,esi
  415737:	mov    DWORD PTR [rax],0x66
  41573d:	jmp    0x41550b
  415742:	call   QWORD PTR [rip+0x1a294]        # 0x42f9dc
  415748:	mov    DWORD PTR [rax],0x82
  41574e:	jmp    0x41550b
  415753:	call   QWORD PTR [rip+0x1a283]        # 0x42f9dc
  415759:	mov    ebx,esi
  41575b:	mov    DWORD PTR [rax],0x76
  415761:	jmp    0x41550b
  415766:	call   QWORD PTR [rip+0x1a270]        # 0x42f9dc
  41576c:	mov    DWORD PTR [rax],0x74
  415772:	jmp    0x41550b
  415777:	call   QWORD PTR [rip+0x1a25f]        # 0x42f9dc
  41577d:	mov    DWORD PTR [rax],0x75
  415783:	jmp    0x41550b
  415788:	call   QWORD PTR [rip+0x1a24e]        # 0x42f9dc
  41578e:	mov    DWORD PTR [rax],0x7b
  415794:	jmp    0x41550b
  415799:	call   QWORD PTR [rip+0x1a23d]        # 0x42f9dc
  41579f:	mov    DWORD PTR [rax],0x80
  4157a5:	jmp    0x41550b
  4157aa:	call   QWORD PTR [rip+0x1a22c]        # 0x42f9dc
  4157b0:	mov    DWORD PTR [rax],0x71
  4157b6:	jmp    0x41550b
  4157bb:	call   QWORD PTR [rip+0x1a21b]        # 0x42f9dc
  4157c1:	mov    DWORD PTR [rax],0x64
  4157c7:	jmp    0x41550b
  4157cc:	call   QWORD PTR [rip+0x1a20a]        # 0x42f9dc
  4157d2:	mov    ebx,esi
  4157d4:	mov    DWORD PTR [rax],0x88
  4157da:	jmp    0x41550b
  4157df:	call   QWORD PTR [rip+0x1a1f7]        # 0x42f9dc
  4157e5:	mov    DWORD PTR [rax],0x73
  4157eb:	jmp    0x41550b
  4157f0:	call   QWORD PTR [rip+0x1a1e6]        # 0x42f9dc
  4157f6:	mov    ebx,esi
  4157f8:	mov    DWORD PTR [rax],0x77
  4157fe:	jmp    0x41550b
  415803:	call   QWORD PTR [rip+0x1a1d3]        # 0x42f9dc
  415809:	mov    DWORD PTR [rax],0x6c
  41580f:	jmp    0x41550b
  415814:	call   QWORD PTR [rip+0x1a1c2]        # 0x42f9dc
  41581a:	mov    ebx,esi
  41581c:	mov    DWORD PTR [rax],0x87
  415822:	jmp    0x41550b
  415827:	call   QWORD PTR [rip+0x1a1af]        # 0x42f9dc
  41582d:	mov    DWORD PTR [rax],0x72
  415833:	jmp    0x41550b
  415838:	call   QWORD PTR [rip+0x1a19e]        # 0x42f9dc
  41583e:	mov    ebx,esi
  415840:	mov    DWORD PTR [rax],0x6b
  415846:	jmp    0x41550b
  41584b:	call   QWORD PTR [rip+0x1a18b]        # 0x42f9dc
  415851:	mov    DWORD PTR [rax],0x8a
  415857:	jmp    0x41550b
  41585c:	call   QWORD PTR [rip+0x1a17a]        # 0x42f9dc
  415862:	mov    ebx,esi
  415864:	mov    DWORD PTR [rax],0x67
  41586a:	jmp    0x41550b
  41586f:	call   QWORD PTR [rip+0x1a167]        # 0x42f9dc
  415875:	mov    DWORD PTR [rax],0x70
  41587b:	jmp    0x41550b
  415880:	call   QWORD PTR [rip+0x1a156]        # 0x42f9dc
  415886:	mov    ebx,esi
  415888:	mov    DWORD PTR [rax],0x29
  41588e:	jmp    0x41550b
  415893:	call   QWORD PTR [rip+0x1a143]        # 0x42f9dc
  415899:	mov    DWORD PTR [rax],0x6e
  41589f:	jmp    0x41550b
  4158a4:	nop
  4158a5:	nop
  4158a6:	nop
  4158a7:	nop
  4158a8:	nop
  4158a9:	nop
  4158aa:	nop
  4158ab:	nop
  4158ac:	nop
  4158ad:	nop
  4158ae:	nop
  4158af:	nop
  4158b0:	push   rsi
  4158b1:	push   rbx
  4158b2:	sub    rsp,0x48
  4158b6:	mov    ebx,ecx
  4158b8:	mov    esi,edx
  4158ba:	mov    ecx,0x101
  4158bf:	mov    DWORD PTR [rsp+0x3c],r8d
  4158c4:	call   0x416b90
  4158c9:	xor    r9d,r9d
  4158cc:	mov    DWORD PTR [rsp+0x28],0x0
  4158d4:	mov    DWORD PTR [rsp+0x20],0x0
  4158dc:	mov    r8d,DWORD PTR [rsp+0x3c]
  4158e1:	mov    edx,esi
  4158e3:	mov    ecx,ebx
  4158e5:	call   QWORD PTR [rip+0x1a3e1]        # 0x42fccc
  4158eb:	cmp    rax,0xffffffffffffffff
  4158ef:	je     0x415910
  4158f1:	mov    rcx,rax
  4158f4:	mov    rax,QWORD PTR [rip+0x1a149]        # 0x42fa44
  4158fb:	mov    edx,0x8002
  415900:	add    rsp,0x48
  415904:	pop    rbx
  415905:	pop    rsi
  415906:	rex.W jmp rax
  415909:	nop    DWORD PTR [rax+0x0]
  415910:	call   QWORD PTR [rip+0x1a3a6]        # 0x42fcbc
  415916:	cmp    eax,0x2740
  41591b:	mov    ebx,eax
  41591d:	je     0x415bde
  415923:	jg     0x415970
  415925:	cmp    eax,0x2736
  41592a:	je     0x415b78
  415930:	jle    0x4159eb
  415936:	cmp    eax,0x273a
  41593b:	je     0x415b23
  415941:	jg     0x415a45
  415947:	cmp    eax,0x2738
  41594c:	je     0x415c00
  415952:	jg     0x415bef
  415958:	call   QWORD PTR [rip+0x1a07e]        # 0x42f9dc
  41595e:	mov    DWORD PTR [rax],0x6d
  415964:	mov    eax,0xffffffff
  415969:	add    rsp,0x48
  41596d:	pop    rbx
  41596e:	pop    rsi
  41596f:	ret    
  415970:	cmp    eax,0x2748
  415975:	je     0x415bcd
  41597b:	jg     0x4159ad
  41597d:	cmp    eax,0x2744
  415982:	je     0x415b12
  415988:	jg     0x415a23
  41598e:	cmp    eax,0x2742
  415993:	je     0x415b01
  415999:	jg     0x415af0
  41599f:	call   QWORD PTR [rip+0x1a037]        # 0x42f9dc
  4159a5:	mov    DWORD PTR [rax],0x65
  4159ab:	jmp    0x415964
  4159ad:	cmp    eax,0x274e
  4159b2:	je     0x415b67
  4159b8:	jg     0x415a85
  4159be:	cmp    eax,0x274c
  4159c3:	je     0x415b9a
  4159c9:	jg     0x415b89
  4159cf:	cmp    eax,0x2749
  4159d4:	jne    0x415a66
  4159da:	call   QWORD PTR [rip+0x19ffc]        # 0x42f9dc
  4159e0:	mov    DWORD PTR [rax],0x7e
  4159e6:	jmp    0x415964
  4159eb:	cmp    eax,0x57
  4159ee:	je     0x415ace
  4159f4:	jle    0x415ab3
  4159fa:	cmp    eax,0x2734
  4159ff:	je     0x415c22
  415a05:	jg     0x415c11
  415a0b:	cmp    eax,0x2733
  415a10:	jne    0x415a66
  415a12:	call   QWORD PTR [rip+0x19fc4]        # 0x42f9dc
  415a18:	mov    DWORD PTR [rax],0x8c
  415a1e:	jmp    0x415964
  415a23:	cmp    eax,0x2746
  415a28:	je     0x415bbc
  415a2e:	jg     0x415bab
  415a34:	call   QWORD PTR [rip+0x19fa2]        # 0x42f9dc
  415a3a:	mov    DWORD PTR [rax],0x6a
  415a40:	jmp    0x415964
  415a45:	cmp    eax,0x273d
  415a4a:	je     0x415b45
  415a50:	cmp    eax,0x273f
  415a55:	je     0x415b34
  415a5b:	cmp    eax,0x273b
  415a60:	je     0x415b56
  415a66:	call   QWORD PTR [rip+0x19f70]        # 0x42f9dc
  415a6c:	lea    ecx,[rbx-0x2711]
  415a72:	lea    edx,[rbx-0x2710]
  415a78:	cmp    ecx,0x17
  415a7b:	cmovbe ebx,edx
  415a7e:	mov    DWORD PTR [rax],ebx
  415a80:	jmp    0x415964
  415a85:	cmp    eax,0x2751
  415a8a:	je     0x415c44
  415a90:	cmp    eax,0x2752
  415a95:	je     0x415c33
  415a9b:	cmp    eax,0x274f
  415aa0:	jne    0x415a66
  415aa2:	call   QWORD PTR [rip+0x19f34]        # 0x42f9dc
  415aa8:	mov    DWORD PTR [rax],0x26
  415aae:	jmp    0x415964
  415ab3:	cmp    eax,0x6
  415ab6:	je     0x415adf
  415ab8:	cmp    eax,0x8
  415abb:	jne    0x415a66
  415abd:	call   QWORD PTR [rip+0x19f19]        # 0x42f9dc
  415ac3:	mov    DWORD PTR [rax],0xc
  415ac9:	jmp    0x415964
  415ace:	call   QWORD PTR [rip+0x19f08]        # 0x42f9dc
  415ad4:	mov    DWORD PTR [rax],0x16
  415ada:	jmp    0x415964
  415adf:	call   QWORD PTR [rip+0x19ef7]        # 0x42f9dc
  415ae5:	mov    DWORD PTR [rax],0x9
  415aeb:	jmp    0x415964
  415af0:	call   QWORD PTR [rip+0x19ee6]        # 0x42f9dc
  415af6:	mov    DWORD PTR [rax],0x76
  415afc:	jmp    0x415964
  415b01:	call   QWORD PTR [rip+0x19ed5]        # 0x42f9dc
  415b07:	mov    DWORD PTR [rax],0x74
  415b0d:	jmp    0x415964
  415b12:	call   QWORD PTR [rip+0x19ec4]        # 0x42f9dc
  415b18:	mov    DWORD PTR [rax],0x75
  415b1e:	jmp    0x415964
  415b23:	call   QWORD PTR [rip+0x19eb3]        # 0x42f9dc
  415b29:	mov    DWORD PTR [rax],0x7b
  415b2f:	jmp    0x415964
  415b34:	call   QWORD PTR [rip+0x19ea2]        # 0x42f9dc
  415b3a:	mov    DWORD PTR [rax],0x66
  415b40:	jmp    0x415964
  415b45:	call   QWORD PTR [rip+0x19e91]        # 0x42f9dc
  415b4b:	mov    DWORD PTR [rax],0x82
  415b51:	jmp    0x415964
  415b56:	call   QWORD PTR [rip+0x19e80]        # 0x42f9dc
  415b5c:	mov    DWORD PTR [rax],0x87
  415b62:	jmp    0x415964
  415b67:	call   QWORD PTR [rip+0x19e6f]        # 0x42f9dc
  415b6d:	mov    DWORD PTR [rax],0x72
  415b73:	jmp    0x415964
  415b78:	call   QWORD PTR [rip+0x19e5e]        # 0x42f9dc
  415b7e:	mov    DWORD PTR [rax],0x80
  415b84:	jmp    0x415964
  415b89:	call   QWORD PTR [rip+0x19e4d]        # 0x42f9dc
  415b8f:	mov    DWORD PTR [rax],0x6b
  415b95:	jmp    0x415964
  415b9a:	call   QWORD PTR [rip+0x19e3c]        # 0x42f9dc
  415ba0:	mov    DWORD PTR [rax],0x8a
  415ba6:	jmp    0x415964
  415bab:	call   QWORD PTR [rip+0x19e2b]        # 0x42f9dc
  415bb1:	mov    DWORD PTR [rax],0x77
  415bb7:	jmp    0x415964
  415bbc:	call   QWORD PTR [rip+0x19e1a]        # 0x42f9dc
  415bc2:	mov    DWORD PTR [rax],0x6c
  415bc8:	jmp    0x415964
  415bcd:	call   QWORD PTR [rip+0x19e09]        # 0x42f9dc
  415bd3:	mov    DWORD PTR [rax],0x71
  415bd9:	jmp    0x415964
  415bde:	call   QWORD PTR [rip+0x19df8]        # 0x42f9dc
  415be4:	mov    DWORD PTR [rax],0x64
  415bea:	jmp    0x415964
  415bef:	call   QWORD PTR [rip+0x19de7]        # 0x42f9dc
  415bf5:	mov    DWORD PTR [rax],0x88
  415bfb:	jmp    0x415964
  415c00:	call   QWORD PTR [rip+0x19dd6]        # 0x42f9dc
  415c06:	mov    DWORD PTR [rax],0x73
  415c0c:	jmp    0x415964
  415c11:	call   QWORD PTR [rip+0x19dc5]        # 0x42f9dc
  415c17:	mov    DWORD PTR [rax],0x67
  415c1d:	jmp    0x415964
  415c22:	call   QWORD PTR [rip+0x19db4]        # 0x42f9dc
  415c28:	mov    DWORD PTR [rax],0x70
  415c2e:	jmp    0x415964
  415c33:	call   QWORD PTR [rip+0x19da3]        # 0x42f9dc
  415c39:	mov    DWORD PTR [rax],0x29
  415c3f:	jmp    0x415964
  415c44:	call   QWORD PTR [rip+0x19d92]        # 0x42f9dc
  415c4a:	mov    DWORD PTR [rax],0x6e
  415c50:	jmp    0x415964
  415c55:	nop
  415c56:	nop
  415c57:	nop
  415c58:	nop
  415c59:	nop
  415c5a:	nop
  415c5b:	nop
  415c5c:	nop
  415c5d:	nop
  415c5e:	nop
  415c5f:	nop
  415c60:	push   rsi
  415c61:	push   rbx
  415c62:	sub    rsp,0x28
  415c66:	mov    rsi,rcx
  415c69:	call   0x41d7f8
  415c6e:	lea    rbx,[rax+0x1]
  415c72:	mov    rcx,rbx
  415c75:	call   0x4104e0
  415c7a:	test   rax,rax
  415c7d:	je     0x415c93
  415c7f:	mov    r8,rbx
  415c82:	mov    rdx,rsi
  415c85:	mov    rcx,rax
  415c88:	add    rsp,0x28
  415c8c:	pop    rbx
  415c8d:	pop    rsi
  415c8e:	jmp    0x41d860
  415c93:	xor    eax,eax
  415c95:	add    rsp,0x28
  415c99:	pop    rbx
  415c9a:	pop    rsi
  415c9b:	ret    
  415c9c:	nop
  415c9d:	nop
  415c9e:	nop
  415c9f:	nop
  415ca0:	sub    rsp,0x38
  415ca4:	lea    rdx,[rip+0x10f65]        # 0x426c10
  415cab:	lea    rcx,[rip+0x1694e]        # 0x42c600
  415cb2:	mov    QWORD PTR [rsp+0x50],r8
  415cb7:	lea    r8,[rsp+0x50]
  415cbc:	mov    QWORD PTR [rsp+0x58],r9
  415cc1:	mov    QWORD PTR [rsp+0x28],r8
  415cc6:	call   0x418e00
  415ccb:	add    rsp,0x38
  415ccf:	ret    
  415cd0:	push   rdi
  415cd1:	push   rsi
  415cd2:	push   rbx
  415cd3:	sub    rsp,0x20
  415cd7:	mov    ebx,ecx
  415cd9:	call   0x415dc0
  415cde:	test   rax,rax
  415ce1:	je     0x415cf0
  415ce3:	add    rsp,0x20
  415ce7:	pop    rbx
  415ce8:	pop    rsi
  415ce9:	pop    rdi
  415cea:	ret    
  415ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  415cf0:	mov    ecx,ebx
  415cf2:	call   0x41d808
  415cf7:	test   rax,rax
  415cfa:	mov    rsi,rax
  415cfd:	je     0x415d80
  415d03:	cmp    BYTE PTR [rax],0x0
  415d06:	je     0x415d80
  415d08:	mov    rcx,rax
  415d0b:	call   0x41d7f8
  415d10:	cmp    rax,0xff
  415d16:	ja     0x415dae
  415d1c:	add    rax,0x1
  415d20:	lea    rdi,[rip+0x168d9]        # 0x42c600
  415d27:	cmp    eax,0x8
  415d2a:	jae    0x415d70
  415d2c:	xor    edx,edx
  415d2e:	test   al,0x4
  415d30:	jne    0x415d60
  415d32:	test   al,0x2
  415d34:	jne    0x415d50
  415d36:	test   al,0x1
  415d38:	jne    0x415d43
  415d3a:	lea    rax,[rip+0x168bf]        # 0x42c600
  415d41:	jmp    0x415ce3
  415d43:	movzx  eax,BYTE PTR [rsi+rdx*1]
  415d47:	mov    BYTE PTR [rdi+rdx*1],al
  415d4a:	jmp    0x415d3a
  415d4c:	nop    DWORD PTR [rax+0x0]
  415d50:	movzx  ecx,WORD PTR [rsi+rdx*1]
  415d54:	mov    WORD PTR [rdi+rdx*1],cx
  415d58:	add    rdx,0x2
  415d5c:	jmp    0x415d36
  415d5e:	xchg   ax,ax
  415d60:	mov    edx,DWORD PTR [rsi]
  415d62:	mov    DWORD PTR [rdi],edx
  415d64:	mov    edx,0x4
  415d69:	jmp    0x415d32
  415d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  415d70:	mov    ecx,eax
  415d72:	shr    ecx,0x3
  415d75:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  415d78:	jmp    0x415d2c
  415d7a:	nop    WORD PTR [rax+rax*1+0x0]
  415d80:	lea    rdx,[rip+0x10e89]        # 0x426c10
  415d87:	lea    rcx,[rip+0x16872]        # 0x42c600
  415d8e:	mov    r8d,ebx
  415d91:	call   0x415ca0
  415d96:	call   QWORD PTR [rip+0x19c40]        # 0x42f9dc
  415d9c:	mov    DWORD PTR [rax],0x16
  415da2:	lea    rax,[rip+0x16857]        # 0x42c600
  415da9:	jmp    0x415ce3
  415dae:	call   0x41d918
  415db3:	nop
  415db4:	nop
  415db5:	nop
  415db6:	nop
  415db7:	nop
  415db8:	nop
  415db9:	nop
  415dba:	nop
  415dbb:	nop
  415dbc:	nop
  415dbd:	nop
  415dbe:	nop
  415dbf:	nop
  415dc0:	cmp    ecx,0x2754
  415dc6:	je     0x416170
  415dcc:	jg     0x415e22
  415dce:	cmp    ecx,0x89
  415dd4:	je     0x416150
  415dda:	jg     0x415e83
  415de0:	cmp    ecx,0x79
  415de3:	je     0x416180
  415de9:	jle    0x415fb1
  415def:	cmp    ecx,0x7d
  415df2:	lea    rax,[rip+0x10e79]        # 0x426c72
  415df9:	je     0x415e20
  415dfb:	jle    0x4160c0
  415e01:	cmp    ecx,0x7f
  415e04:	lea    rax,[rip+0x11265]        # 0x427070
  415e0b:	je     0x415e20
  415e0d:	cmp    ecx,0x83
  415e13:	lea    rax,[rip+0x10e7a]        # 0x426c94
  415e1a:	jne    0x415e80
  415e1c:	nop    DWORD PTR [rax+0x0]
  415e20:	repz ret 
  415e22:	cmp    ecx,0x2779
  415e28:	je     0x416160
  415e2e:	jg     0x415ed2
  415e34:	cmp    ecx,0x276c
  415e3a:	je     0x416141
  415e40:	jg     0x415ff0
  415e46:	cmp    ecx,0x2756
  415e4c:	lea    rax,[rip+0x10f1b]        # 0x426d6e
  415e53:	je     0x415e20
  415e55:	lea    rax,[rip+0x10efe]        # 0x426d5a
  415e5c:	jl     0x415e20
  415e5e:	cmp    ecx,0x2757
  415e64:	lea    rax,[rip+0x10f19]        # 0x426d84
  415e6b:	je     0x415e20
  415e6d:	cmp    ecx,0x276b
  415e73:	lea    rax,[rip+0x10fa6]        # 0x426e20
  415e7a:	je     0x415e20
  415e7c:	nop    DWORD PTR [rax+0x0]
  415e80:	xor    eax,eax
  415e82:	ret    
  415e83:	cmp    ecx,0x273c
  415e89:	je     0x4161a0
  415e8f:	jle    0x415f25
  415e95:	cmp    ecx,0x274b
  415e9b:	lea    rax,[rip+0x10e66]        # 0x426d08
  415ea2:	je     0x415e20
  415ea8:	jle    0x416030
  415eae:	cmp    ecx,0x2750
  415eb4:	lea    rax,[rip+0x10e70]        # 0x426d2b
  415ebb:	je     0x415e20
  415ec1:	cmp    ecx,0x2753
  415ec7:	lea    rax,[rip+0x10e6a]        # 0x426d38
  415ece:	jne    0x415e80
  415ed0:	repz ret 
  415ed2:	cmp    ecx,0x277f
  415ed8:	je     0x416190
  415ede:	jle    0x415f70
  415ee4:	cmp    ecx,0x2afa
  415eea:	lea    rax,[rip+0x110b7]        # 0x426fa8
  415ef1:	je     0x415e20
  415ef7:	jle    0x416090
  415efd:	cmp    ecx,0x2afb
  415f03:	lea    rax,[rip+0x110be]        # 0x426fc8
  415f0a:	je     0x415e20
  415f10:	cmp    ecx,0x2afc
  415f16:	lea    rax,[rip+0x110c3]        # 0x426fe0
  415f1d:	jne    0x415e80
  415f23:	repz ret 
  415f25:	cmp    ecx,0x3e4
  415f2b:	lea    rax,[rip+0x10e86]        # 0x426db8
  415f32:	je     0x415e20
  415f38:	jle    0x416060
  415f3e:	cmp    ecx,0x3e5
  415f44:	lea    rax,[rip+0x10ea5]        # 0x426df0
  415f4b:	je     0x415e20
  415f51:	cmp    ecx,0x7d4
  415f57:	lea    rax,[rip+0x110f3]        # 0x427051
  415f5e:	jne    0x415e80
  415f64:	repz ret 
  415f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415f70:	cmp    ecx,0x277c
  415f76:	lea    rax,[rip+0x10fd5]        # 0x426f52
  415f7d:	je     0x415e20
  415f83:	jg     0x416103
  415f89:	cmp    ecx,0x277a
  415f8f:	lea    rax,[rip+0x10f82]        # 0x426f18
  415f96:	je     0x415e20
  415f9c:	cmp    ecx,0x277b
  415fa2:	lea    rax,[rip+0x10f95]        # 0x426f3e
  415fa9:	jne    0x415e80
  415faf:	repz ret 
  415fb1:	cmp    ecx,0x68
  415fb4:	lea    rax,[rip+0x110a9]        # 0x427064
  415fbb:	je     0x415e20
  415fc1:	jle    0x416130
  415fc7:	cmp    ecx,0x6f
  415fca:	lea    rax,[rip+0x11057]        # 0x427028
  415fd1:	je     0x415e20
  415fd7:	cmp    ecx,0x78
  415fda:	lea    rax,[rip+0x10c66]        # 0x426c47
  415fe1:	jne    0x415e80
  415fe7:	repz ret 
  415fe9:	nop    DWORD PTR [rax+0x0]
  415ff0:	cmp    ecx,0x2776
  415ff6:	je     0x416122
  415ffc:	jg     0x4160e2
  416002:	cmp    ecx,0x276d
  416008:	lea    rax,[rip+0x10e61]        # 0x426e70
  41600f:	je     0x415e20
  416015:	cmp    ecx,0x2775
  41601b:	lea    rax,[rip+0x10e76]        # 0x426e98
  416022:	jne    0x415e80
  416028:	repz ret 
  41602a:	nop    WORD PTR [rax+rax*1+0x0]
  416030:	cmp    ecx,0x273e
  416036:	lea    rax,[rip+0x10c7d]        # 0x426cba
  41603d:	je     0x415e20
  416043:	cmp    ecx,0x274a
  416049:	lea    rax,[rip+0x10c88]        # 0x426cd8
  416050:	jne    0x415e80
  416056:	repz ret 
  416058:	nop    DWORD PTR [rax+rax*1+0x0]
  416060:	cmp    ecx,0x8b
  416066:	lea    rax,[rip+0x10bcb]        # 0x426c38
  41606d:	je     0x415e20
  416073:	cmp    ecx,0x3e3
  416079:	lea    rax,[rip+0x10d15]        # 0x426d95
  416080:	jne    0x415e80
  416086:	repz ret 
  416088:	nop    DWORD PTR [rax+rax*1+0x0]
  416090:	cmp    ecx,0x2780
  416096:	lea    rax,[rip+0x10edc]        # 0x426f79
  41609d:	je     0x415e20
  4160a3:	cmp    ecx,0x2af9
  4160a9:	lea    rax,[rip+0x10ee4]        # 0x426f94
  4160b0:	jne    0x415e80
  4160b6:	repz ret 
  4160b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4160c0:	cmp    ecx,0x7a
  4160c3:	lea    rax,[rip+0x10f43]        # 0x42700d
  4160ca:	je     0x415e20
  4160d0:	cmp    ecx,0x7c
  4160d3:	lea    rax,[rip+0x10b7f]        # 0x426c59
  4160da:	jne    0x415e80
  4160e0:	repz ret 
  4160e2:	cmp    ecx,0x2777
  4160e8:	je     0x416190
  4160ee:	cmp    ecx,0x2778
  4160f4:	lea    rax,[rip+0x10ddd]        # 0x426ed8
  4160fb:	jne    0x415e80
  416101:	repz ret 
  416103:	cmp    ecx,0x277d
  416109:	lea    rax,[rip+0x10e54]        # 0x426f64
  416110:	je     0x415e20
  416116:	cmp    ecx,0x277e
  41611c:	jne    0x415e80
  416122:	lea    rax,[rip+0x10d8d]        # 0x426eb6
  416129:	ret    
  41612a:	nop    WORD PTR [rax+rax*1+0x0]
  416130:	test   ecx,ecx
  416132:	lea    rax,[rip+0x10af7]        # 0x426c30
  416139:	jne    0x415e80
  41613f:	repz ret 
  416141:	lea    rax,[rip+0x10d00]        # 0x426e48
  416148:	ret    
  416149:	nop    DWORD PTR [rax+0x0]
  416150:	lea    rax,[rip+0x10b2f]        # 0x426c86
  416157:	ret    
  416158:	nop    DWORD PTR [rax+rax*1+0x0]
  416160:	lea    rax,[rip+0x10d91]        # 0x426ef8
  416167:	ret    
  416168:	nop    DWORD PTR [rax+rax*1+0x0]
  416170:	lea    rax,[rip+0x10bd4]        # 0x426d4b
  416177:	ret    
  416178:	nop    DWORD PTR [rax+rax*1+0x0]
  416180:	lea    rax,[rip+0x10eb4]        # 0x42703b
  416187:	ret    
  416188:	nop    DWORD PTR [rax+rax*1+0x0]
  416190:	lea    rax,[rip+0x10d2f]        # 0x426ec6
  416197:	ret    
  416198:	nop    DWORD PTR [rax+rax*1+0x0]
  4161a0:	lea    rax,[rip+0x10af9]        # 0x426ca0
  4161a7:	ret    
  4161a8:	nop
  4161a9:	nop
  4161aa:	nop
  4161ab:	nop
  4161ac:	nop
  4161ad:	nop
  4161ae:	nop
  4161af:	nop
  4161b0:	lea    r9,[rip+0xa049]        # 0x420200
  4161b7:	cmp    rcx,r9
  4161ba:	je     0x4161d0
  4161bc:	mov    r9,QWORD PTR [rcx+0x10]
  4161c0:	mov    rcx,QWORD PTR [rcx]
  4161c3:	rex.WB jmp r9
  4161c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4161d0:	mov    ecx,r8d
  4161d3:	rex.W jmp rdx
  4161d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4161e0:	lea    r10,[rip+0xa019]        # 0x420200
  4161e7:	mov    rax,rcx
  4161ea:	mov    r11,rdx
  4161ed:	mov    ecx,r8d
  4161f0:	cmp    rax,r10
  4161f3:	mov    r8,QWORD PTR [rsp+0x28]
  4161f8:	je     0x416210
  4161fa:	mov    QWORD PTR [rsp+0x28],r8
  4161ff:	mov    r8d,ecx
  416202:	mov    r10,QWORD PTR [rax+0x18]
  416206:	mov    rcx,QWORD PTR [rax]
  416209:	rex.WB jmp r10
  41620c:	nop    DWORD PTR [rax+0x0]
  416210:	mov    edx,r9d
  416213:	rex.WB jmp r11
  416216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416220:	mov    r8d,edx
  416223:	mov    rdx,rcx
  416226:	mov    rcx,QWORD PTR [rip+0x9fd3]        # 0x420200
  41622d:	jmp    0x4161b0
  41622f:	nop
  416230:	sub    rsp,0x38
  416234:	mov    QWORD PTR [rsp+0x20],r9
  416239:	mov    r9d,r8d
  41623c:	mov    r8d,edx
  41623f:	mov    rdx,rcx
  416242:	mov    rcx,QWORD PTR [rip+0x9fb7]        # 0x420200
  416249:	call   0x4161e0
  41624e:	add    rsp,0x38
  416252:	ret    
  416253:	nop    DWORD PTR [rax]
  416256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416260:	sub    rsp,0x28
  416264:	lea    rax,[rip+0xffffffffffffff45]        # 0x4161b0
  41626b:	test   rcx,rcx
  41626e:	cmove  rcx,rax
  416272:	lea    rax,[rip+0xffffffffffffff67]        # 0x4161e0
  416279:	test   rdx,rdx
  41627c:	cmove  rdx,rax
  416280:	cmp    QWORD PTR [r8],0x0
  416284:	je     0x4162a0
  416286:	cmp    QWORD PTR [r8+0x10],rcx
  41628a:	jne    0x4162d8
  41628c:	cmp    QWORD PTR [r8+0x18],rdx
  416290:	jne    0x4162d8
  416292:	add    rsp,0x28
  416296:	ret    
  416297:	nop    WORD PTR [rax+rax*1+0x0]
  4162a0:	cmp    QWORD PTR [r8+0x8],0x0
  4162a5:	jne    0x416286
  4162a7:	mov    rax,QWORD PTR [rip+0x9f52]        # 0x420200
  4162ae:	mov    QWORD PTR [r8+0x10],rcx
  4162b2:	mov    QWORD PTR [r8+0x18],rdx
  4162b6:	mov    QWORD PTR [r8],rax
  4162b9:	lea    rax,[rip+0x9f40]        # 0x420200
  4162c0:	mov    QWORD PTR [r8+0x8],rax
  4162c4:	mov    rax,QWORD PTR [rip+0x9f35]        # 0x420200
  4162cb:	mov    QWORD PTR [rip+0x9f2e],r8        # 0x420200
  4162d2:	mov    QWORD PTR [rax+0x8],r8
  4162d6:	jmp    0x416292
  4162d8:	call   0x41d918
  4162dd:	nop
  4162de:	xchg   ax,ax
  4162e0:	mov    rax,QWORD PTR [rcx+0x8]
  4162e4:	mov    rdx,QWORD PTR [rcx]
  4162e7:	test   rax,rax
  4162ea:	je     0x416317
  4162ec:	test   rdx,rdx
  4162ef:	je     0x416317
  4162f1:	mov    QWORD PTR [rax],rdx
  4162f4:	mov    QWORD PTR [rdx+0x8],rax
  4162f8:	mov    QWORD PTR [rcx],0x0
  4162ff:	mov    QWORD PTR [rcx+0x8],0x0
  416307:	mov    QWORD PTR [rcx+0x10],0x0
  41630f:	mov    QWORD PTR [rcx+0x18],0x0
  416317:	repz ret 
  416319:	nop
  41631a:	nop
  41631b:	nop
  41631c:	nop
  41631d:	nop
  41631e:	nop
  41631f:	nop
  416320:	push   r12
  416322:	push   rbp
  416323:	push   rdi
  416324:	push   rsi
  416325:	push   rbx
  416326:	sub    rsp,0x60
  41632a:	mov    rbp,rcx
  41632d:	mov    ecx,r8d
  416330:	mov    r12,rdx
  416333:	mov    esi,r8d
  416336:	mov    edi,r9d
  416339:	call   0x413c50
  41633e:	xor    edx,edx
  416340:	mov    rbx,rax
  416343:	mov    DWORD PTR [rsp+0x30],0xdeadbeef
  41634b:	lea    r8,[rsp+0x30]
  416350:	mov    rcx,rax
  416353:	call   QWORD PTR [rip+0x19953]        # 0x42fcac
  416359:	cmp    DWORD PTR [rsp+0x30],0xdeadbeef
  416361:	je     0x416390
  416363:	mov    r8,QWORD PTR [rsp+0xb0]
  41636b:	mov    edx,edi
  41636d:	mov    rcx,rbx
  416370:	call   QWORD PTR [rip+0x199ae]        # 0x42fd24
  416376:	test   eax,eax
  416378:	js     0x4163b9
  41637a:	xor    eax,eax
  41637c:	add    rsp,0x60
  416380:	pop    rbx
  416381:	pop    rsi
  416382:	pop    rdi
  416383:	pop    rbp
  416384:	pop    r12
  416386:	ret    
  416387:	nop    WORD PTR [rax+rax*1+0x0]
  416390:	mov    rax,QWORD PTR [rsp+0xb0]
  416398:	mov    r9d,edi
  41639b:	mov    r8d,esi
  41639e:	mov    rdx,r12
  4163a1:	mov    rcx,rbp
  4163a4:	mov    QWORD PTR [rsp+0x20],rax
  4163a9:	call   0x4161e0
  4163ae:	add    rsp,0x60
  4163b2:	pop    rbx
  4163b3:	pop    rsi
  4163b4:	pop    rdi
  4163b5:	pop    rbp
  4163b6:	pop    r12
  4163b8:	ret    
  4163b9:	call   QWORD PTR [rip+0x198fd]        # 0x42fcbc
  4163bf:	cmp    eax,0x2740
  4163c4:	mov    ebx,eax
  4163c6:	je     0x4166d3
  4163cc:	jg     0x416415
  4163ce:	cmp    eax,0x2736
  4163d3:	je     0x41665b
  4163d9:	jle    0x4164a1
  4163df:	cmp    eax,0x273a
  4163e4:	je     0x4165f7
  4163ea:	jg     0x416501
  4163f0:	cmp    eax,0x2738
  4163f5:	je     0x4166fb
  4163fb:	jg     0x4166e7
  416401:	call   QWORD PTR [rip+0x195d5]        # 0x42f9dc
  416407:	mov    DWORD PTR [rax],0x6d
  41640d:	or     eax,0xffffffff
  416410:	jmp    0x41637c
  416415:	cmp    eax,0x2748
  41641a:	je     0x4166bf
  416420:	jg     0x416460
  416422:	cmp    eax,0x2744
  416427:	je     0x4165e3
  41642d:	jg     0x4164dc
  416433:	cmp    eax,0x2742
  416438:	je     0x4165cf
  41643e:	jg     0x4165bb
  416444:	call   QWORD PTR [rip+0x19592]        # 0x42f9dc
  41644a:	mov    DWORD PTR [rax],0x65
  416450:	or     eax,0xffffffff
  416453:	jmp    0x41637c
  416458:	nop    DWORD PTR [rax+rax*1+0x0]
  416460:	cmp    eax,0x274e
  416465:	je     0x416647
  41646b:	jg     0x416544
  416471:	cmp    eax,0x274c
  416476:	je     0x416683
  41647c:	jg     0x41666f
  416482:	cmp    eax,0x2749
  416487:	jne    0x416522
  41648d:	call   QWORD PTR [rip+0x19549]        # 0x42f9dc
  416493:	mov    DWORD PTR [rax],0x7e
  416499:	or     eax,0xffffffff
  41649c:	jmp    0x41637c
  4164a1:	cmp    eax,0x57
  4164a4:	je     0x416593
  4164aa:	jle    0x416575
  4164b0:	cmp    eax,0x2734
  4164b5:	je     0x416723
  4164bb:	jg     0x41670f
  4164c1:	cmp    eax,0x2733
  4164c6:	jne    0x416522
  4164c8:	call   QWORD PTR [rip+0x1950e]        # 0x42f9dc
  4164ce:	mov    DWORD PTR [rax],0x8c
  4164d4:	or     eax,0xffffffff
  4164d7:	jmp    0x41637c
  4164dc:	cmp    eax,0x2746
  4164e1:	je     0x4166ab
  4164e7:	jg     0x416697
  4164ed:	call   QWORD PTR [rip+0x194e9]        # 0x42f9dc
  4164f3:	mov    DWORD PTR [rax],0x6a
  4164f9:	or     eax,0xffffffff
  4164fc:	jmp    0x41637c
  416501:	cmp    eax,0x273d
  416506:	je     0x41661f
  41650c:	cmp    eax,0x273f
  416511:	je     0x41660b
  416517:	cmp    eax,0x273b
  41651c:	je     0x416633
  416522:	call   QWORD PTR [rip+0x194b4]        # 0x42f9dc
  416528:	lea    ecx,[rbx-0x2711]
  41652e:	lea    edx,[rbx-0x2710]
  416534:	cmp    ecx,0x17
  416537:	cmovbe ebx,edx
  41653a:	mov    DWORD PTR [rax],ebx
  41653c:	or     eax,0xffffffff
  41653f:	jmp    0x41637c
  416544:	cmp    eax,0x2751
  416549:	je     0x41674b
  41654f:	cmp    eax,0x2752
  416554:	je     0x416737
  41655a:	cmp    eax,0x274f
  41655f:	jne    0x416522
  416561:	call   QWORD PTR [rip+0x19475]        # 0x42f9dc
  416567:	mov    DWORD PTR [rax],0x26
  41656d:	or     eax,0xffffffff
  416570:	jmp    0x41637c
  416575:	cmp    eax,0x6
  416578:	je     0x4165a7
  41657a:	cmp    eax,0x8
  41657d:	jne    0x416522
  41657f:	call   QWORD PTR [rip+0x19457]        # 0x42f9dc
  416585:	mov    DWORD PTR [rax],0xc
  41658b:	or     eax,0xffffffff
  41658e:	jmp    0x41637c
  416593:	call   QWORD PTR [rip+0x19443]        # 0x42f9dc
  416599:	mov    DWORD PTR [rax],0x16
  41659f:	or     eax,0xffffffff
  4165a2:	jmp    0x41637c
  4165a7:	call   QWORD PTR [rip+0x1942f]        # 0x42f9dc
  4165ad:	mov    DWORD PTR [rax],0x9
  4165b3:	or     eax,0xffffffff
  4165b6:	jmp    0x41637c
  4165bb:	call   QWORD PTR [rip+0x1941b]        # 0x42f9dc
  4165c1:	mov    DWORD PTR [rax],0x76
  4165c7:	or     eax,0xffffffff
  4165ca:	jmp    0x41637c
  4165cf:	call   QWORD PTR [rip+0x19407]        # 0x42f9dc
  4165d5:	mov    DWORD PTR [rax],0x74
  4165db:	or     eax,0xffffffff
  4165de:	jmp    0x41637c
  4165e3:	call   QWORD PTR [rip+0x193f3]        # 0x42f9dc
  4165e9:	mov    DWORD PTR [rax],0x75
  4165ef:	or     eax,0xffffffff
  4165f2:	jmp    0x41637c
  4165f7:	call   QWORD PTR [rip+0x193df]        # 0x42f9dc
  4165fd:	mov    DWORD PTR [rax],0x7b
  416603:	or     eax,0xffffffff
  416606:	jmp    0x41637c
  41660b:	call   QWORD PTR [rip+0x193cb]        # 0x42f9dc
  416611:	mov    DWORD PTR [rax],0x66
  416617:	or     eax,0xffffffff
  41661a:	jmp    0x41637c
  41661f:	call   QWORD PTR [rip+0x193b7]        # 0x42f9dc
  416625:	mov    DWORD PTR [rax],0x82
  41662b:	or     eax,0xffffffff
  41662e:	jmp    0x41637c
  416633:	call   QWORD PTR [rip+0x193a3]        # 0x42f9dc
  416639:	mov    DWORD PTR [rax],0x87
  41663f:	or     eax,0xffffffff
  416642:	jmp    0x41637c
  416647:	call   QWORD PTR [rip+0x1938f]        # 0x42f9dc
  41664d:	mov    DWORD PTR [rax],0x72
  416653:	or     eax,0xffffffff
  416656:	jmp    0x41637c
  41665b:	call   QWORD PTR [rip+0x1937b]        # 0x42f9dc
  416661:	mov    DWORD PTR [rax],0x80
  416667:	or     eax,0xffffffff
  41666a:	jmp    0x41637c
  41666f:	call   QWORD PTR [rip+0x19367]        # 0x42f9dc
  416675:	mov    DWORD PTR [rax],0x6b
  41667b:	or     eax,0xffffffff
  41667e:	jmp    0x41637c
  416683:	call   QWORD PTR [rip+0x19353]        # 0x42f9dc
  416689:	mov    DWORD PTR [rax],0x8a
  41668f:	or     eax,0xffffffff
  416692:	jmp    0x41637c
  416697:	call   QWORD PTR [rip+0x1933f]        # 0x42f9dc
  41669d:	mov    DWORD PTR [rax],0x77
  4166a3:	or     eax,0xffffffff
  4166a6:	jmp    0x41637c
  4166ab:	call   QWORD PTR [rip+0x1932b]        # 0x42f9dc
  4166b1:	mov    DWORD PTR [rax],0x6c
  4166b7:	or     eax,0xffffffff
  4166ba:	jmp    0x41637c
  4166bf:	call   QWORD PTR [rip+0x19317]        # 0x42f9dc
  4166c5:	mov    DWORD PTR [rax],0x71
  4166cb:	or     eax,0xffffffff
  4166ce:	jmp    0x41637c
  4166d3:	call   QWORD PTR [rip+0x19303]        # 0x42f9dc
  4166d9:	mov    DWORD PTR [rax],0x64
  4166df:	or     eax,0xffffffff
  4166e2:	jmp    0x41637c
  4166e7:	call   QWORD PTR [rip+0x192ef]        # 0x42f9dc
  4166ed:	mov    DWORD PTR [rax],0x88
  4166f3:	or     eax,0xffffffff
  4166f6:	jmp    0x41637c
  4166fb:	call   QWORD PTR [rip+0x192db]        # 0x42f9dc
  416701:	mov    DWORD PTR [rax],0x73
  416707:	or     eax,0xffffffff
  41670a:	jmp    0x41637c
  41670f:	call   QWORD PTR [rip+0x192c7]        # 0x42f9dc
  416715:	mov    DWORD PTR [rax],0x67
  41671b:	or     eax,0xffffffff
  41671e:	jmp    0x41637c
  416723:	call   QWORD PTR [rip+0x192b3]        # 0x42f9dc
  416729:	mov    DWORD PTR [rax],0x70
  41672f:	or     eax,0xffffffff
  416732:	jmp    0x41637c
  416737:	call   QWORD PTR [rip+0x1929f]        # 0x42f9dc
  41673d:	mov    DWORD PTR [rax],0x29
  416743:	or     eax,0xffffffff
  416746:	jmp    0x41637c
  41674b:	call   QWORD PTR [rip+0x1928b]        # 0x42f9dc
  416751:	mov    DWORD PTR [rax],0x6e
  416757:	or     eax,0xffffffff
  41675a:	jmp    0x41637c
  41675f:	nop
  416760:	push   rbp
  416761:	push   rdi
  416762:	push   rsi
  416763:	push   rbx
  416764:	sub    rsp,0x58
  416768:	mov    rdi,rcx
  41676b:	mov    ecx,r8d
  41676e:	mov    rbp,rdx
  416771:	mov    ebx,r8d
  416774:	call   0x413c50
  416779:	xor    edx,edx
  41677b:	mov    rsi,rax
  41677e:	mov    DWORD PTR [rsp+0x20],0xdeadbeef
  416786:	lea    r8,[rsp+0x20]
  41678b:	mov    rcx,rax
  41678e:	call   QWORD PTR [rip+0x19518]        # 0x42fcac
  416794:	cmp    DWORD PTR [rsp+0x20],0xdeadbeef
  41679c:	je     0x4167c0
  41679e:	mov    rcx,rsi
  4167a1:	call   QWORD PTR [rip+0x1953d]        # 0x42fce4
  4167a7:	test   eax,eax
  4167a9:	mov    esi,eax
  4167ab:	jne    0x4167e0
  4167ad:	mov    ecx,ebx
  4167af:	call   QWORD PTR [rip+0x19217]        # 0x42f9cc
  4167b5:	mov    eax,esi
  4167b7:	add    rsp,0x58
  4167bb:	pop    rbx
  4167bc:	pop    rsi
  4167bd:	pop    rdi
  4167be:	pop    rbp
  4167bf:	ret    
  4167c0:	mov    r8d,ebx
  4167c3:	mov    rdx,rbp
  4167c6:	mov    rcx,rdi
  4167c9:	call   0x4161b0
  4167ce:	mov    esi,eax
  4167d0:	mov    eax,esi
  4167d2:	add    rsp,0x58
  4167d6:	pop    rbx
  4167d7:	pop    rsi
  4167d8:	pop    rdi
  4167d9:	pop    rbp
  4167da:	ret    
  4167db:	nop    DWORD PTR [rax+rax*1+0x0]
  4167e0:	call   QWORD PTR [rip+0x194d6]        # 0x42fcbc
  4167e6:	cmp    eax,0x2740
  4167eb:	mov    ebx,eax
  4167ed:	je     0x416af6
  4167f3:	jg     0x416840
  4167f5:	cmp    eax,0x2736
  4167fa:	je     0x416a7e
  416800:	jle    0x4168c4
  416806:	cmp    eax,0x273a
  41680b:	je     0x416a1a
  416811:	jg     0x416924
  416817:	cmp    eax,0x2738
  41681c:	je     0x416b1e
  416822:	jg     0x416b0a
  416828:	call   QWORD PTR [rip+0x191ae]        # 0x42f9dc
  41682e:	or     esi,0xffffffff
  416831:	mov    DWORD PTR [rax],0x6d
  416837:	jmp    0x4167b5
  41683c:	nop    DWORD PTR [rax+0x0]
  416840:	cmp    eax,0x2748
  416845:	je     0x416ae2
  41684b:	jg     0x416883
  41684d:	cmp    eax,0x2744
  416852:	je     0x416a06
  416858:	jg     0x4168ff
  41685e:	cmp    eax,0x2742
  416863:	je     0x4169f2
  416869:	jg     0x4169de
  41686f:	call   QWORD PTR [rip+0x19167]        # 0x42f9dc
  416875:	or     esi,0xffffffff
  416878:	mov    DWORD PTR [rax],0x65
  41687e:	jmp    0x4167b5
  416883:	cmp    eax,0x274e
  416888:	je     0x416a6a
  41688e:	jg     0x416967
  416894:	cmp    eax,0x274c
  416899:	je     0x416aa6
  41689f:	jg     0x416a92
  4168a5:	cmp    eax,0x2749
  4168aa:	jne    0x416945
  4168b0:	call   QWORD PTR [rip+0x19126]        # 0x42f9dc
  4168b6:	or     esi,0xffffffff
  4168b9:	mov    DWORD PTR [rax],0x7e
  4168bf:	jmp    0x4167b5
  4168c4:	cmp    eax,0x57
  4168c7:	je     0x4169b6
  4168cd:	jle    0x416998
  4168d3:	cmp    eax,0x2734
  4168d8:	je     0x416b46
  4168de:	jg     0x416b32
  4168e4:	cmp    eax,0x2733
  4168e9:	jne    0x416945
  4168eb:	call   QWORD PTR [rip+0x190eb]        # 0x42f9dc
  4168f1:	or     esi,0xffffffff
  4168f4:	mov    DWORD PTR [rax],0x8c
  4168fa:	jmp    0x4167b5
  4168ff:	cmp    eax,0x2746
  416904:	je     0x416ace
  41690a:	jg     0x416aba
  416910:	call   QWORD PTR [rip+0x190c6]        # 0x42f9dc
  416916:	or     esi,0xffffffff
  416919:	mov    DWORD PTR [rax],0x6a
  41691f:	jmp    0x4167b5
  416924:	cmp    eax,0x273d
  416929:	je     0x416a42
  41692f:	cmp    eax,0x273f
  416934:	je     0x416a2e
  41693a:	cmp    eax,0x273b
  41693f:	je     0x416a56
  416945:	call   QWORD PTR [rip+0x19091]        # 0x42f9dc
  41694b:	lea    ecx,[rbx-0x2711]
  416951:	lea    edx,[rbx-0x2710]
  416957:	cmp    ecx,0x17
  41695a:	cmovbe ebx,edx
  41695d:	or     esi,0xffffffff
  416960:	mov    DWORD PTR [rax],ebx
  416962:	jmp    0x4167b5
  416967:	cmp    eax,0x2751
  41696c:	je     0x416b6e
  416972:	cmp    eax,0x2752
  416977:	je     0x416b5a
  41697d:	cmp    eax,0x274f
  416982:	jne    0x416945
  416984:	call   QWORD PTR [rip+0x19052]        # 0x42f9dc
  41698a:	or     esi,0xffffffff
  41698d:	mov    DWORD PTR [rax],0x26
  416993:	jmp    0x4167b5
  416998:	cmp    eax,0x6
  41699b:	je     0x4169ca
  41699d:	cmp    eax,0x8
  4169a0:	jne    0x416945
  4169a2:	call   QWORD PTR [rip+0x19034]        # 0x42f9dc
  4169a8:	or     esi,0xffffffff
  4169ab:	mov    DWORD PTR [rax],0xc
  4169b1:	jmp    0x4167b5
  4169b6:	call   QWORD PTR [rip+0x19020]        # 0x42f9dc
  4169bc:	or     esi,0xffffffff
  4169bf:	mov    DWORD PTR [rax],0x16
  4169c5:	jmp    0x4167b5
  4169ca:	call   QWORD PTR [rip+0x1900c]        # 0x42f9dc
  4169d0:	or     esi,0xffffffff
  4169d3:	mov    DWORD PTR [rax],0x9
  4169d9:	jmp    0x4167b5
  4169de:	call   QWORD PTR [rip+0x18ff8]        # 0x42f9dc
  4169e4:	or     esi,0xffffffff
  4169e7:	mov    DWORD PTR [rax],0x76
  4169ed:	jmp    0x4167b5
  4169f2:	call   QWORD PTR [rip+0x18fe4]        # 0x42f9dc
  4169f8:	or     esi,0xffffffff
  4169fb:	mov    DWORD PTR [rax],0x74
  416a01:	jmp    0x4167b5
  416a06:	call   QWORD PTR [rip+0x18fd0]        # 0x42f9dc
  416a0c:	or     esi,0xffffffff
  416a0f:	mov    DWORD PTR [rax],0x75
  416a15:	jmp    0x4167b5
  416a1a:	call   QWORD PTR [rip+0x18fbc]        # 0x42f9dc
  416a20:	or     esi,0xffffffff
  416a23:	mov    DWORD PTR [rax],0x7b
  416a29:	jmp    0x4167b5
  416a2e:	call   QWORD PTR [rip+0x18fa8]        # 0x42f9dc
  416a34:	or     esi,0xffffffff
  416a37:	mov    DWORD PTR [rax],0x66
  416a3d:	jmp    0x4167b5
  416a42:	call   QWORD PTR [rip+0x18f94]        # 0x42f9dc
  416a48:	or     esi,0xffffffff
  416a4b:	mov    DWORD PTR [rax],0x82
  416a51:	jmp    0x4167b5
  416a56:	call   QWORD PTR [rip+0x18f80]        # 0x42f9dc
  416a5c:	or     esi,0xffffffff
  416a5f:	mov    DWORD PTR [rax],0x87
  416a65:	jmp    0x4167b5
  416a6a:	call   QWORD PTR [rip+0x18f6c]        # 0x42f9dc
  416a70:	or     esi,0xffffffff
  416a73:	mov    DWORD PTR [rax],0x72
  416a79:	jmp    0x4167b5
  416a7e:	call   QWORD PTR [rip+0x18f58]        # 0x42f9dc
  416a84:	or     esi,0xffffffff
  416a87:	mov    DWORD PTR [rax],0x80
  416a8d:	jmp    0x4167b5
  416a92:	call   QWORD PTR [rip+0x18f44]        # 0x42f9dc
  416a98:	or     esi,0xffffffff
  416a9b:	mov    DWORD PTR [rax],0x6b
  416aa1:	jmp    0x4167b5
  416aa6:	call   QWORD PTR [rip+0x18f30]        # 0x42f9dc
  416aac:	or     esi,0xffffffff
  416aaf:	mov    DWORD PTR [rax],0x8a
  416ab5:	jmp    0x4167b5
  416aba:	call   QWORD PTR [rip+0x18f1c]        # 0x42f9dc
  416ac0:	or     esi,0xffffffff
  416ac3:	mov    DWORD PTR [rax],0x77
  416ac9:	jmp    0x4167b5
  416ace:	call   QWORD PTR [rip+0x18f08]        # 0x42f9dc
  416ad4:	or     esi,0xffffffff
  416ad7:	mov    DWORD PTR [rax],0x6c
  416add:	jmp    0x4167b5
  416ae2:	call   QWORD PTR [rip+0x18ef4]        # 0x42f9dc
  416ae8:	or     esi,0xffffffff
  416aeb:	mov    DWORD PTR [rax],0x71
  416af1:	jmp    0x4167b5
  416af6:	call   QWORD PTR [rip+0x18ee0]        # 0x42f9dc
  416afc:	or     esi,0xffffffff
  416aff:	mov    DWORD PTR [rax],0x64
  416b05:	jmp    0x4167b5
  416b0a:	call   QWORD PTR [rip+0x18ecc]        # 0x42f9dc
  416b10:	or     esi,0xffffffff
  416b13:	mov    DWORD PTR [rax],0x88
  416b19:	jmp    0x4167b5
  416b1e:	call   QWORD PTR [rip+0x18eb8]        # 0x42f9dc
  416b24:	or     esi,0xffffffff
  416b27:	mov    DWORD PTR [rax],0x73
  416b2d:	jmp    0x4167b5
  416b32:	call   QWORD PTR [rip+0x18ea4]        # 0x42f9dc
  416b38:	or     esi,0xffffffff
  416b3b:	mov    DWORD PTR [rax],0x67
  416b41:	jmp    0x4167b5
  416b46:	call   QWORD PTR [rip+0x18e90]        # 0x42f9dc
  416b4c:	or     esi,0xffffffff
  416b4f:	mov    DWORD PTR [rax],0x70
  416b55:	jmp    0x4167b5
  416b5a:	call   QWORD PTR [rip+0x18e7c]        # 0x42f9dc
  416b60:	or     esi,0xffffffff
  416b63:	mov    DWORD PTR [rax],0x29
  416b69:	jmp    0x4167b5
  416b6e:	call   QWORD PTR [rip+0x18e68]        # 0x42f9dc
  416b74:	or     esi,0xffffffff
  416b77:	mov    DWORD PTR [rax],0x6e
  416b7d:	jmp    0x4167b5
  416b82:	nop    DWORD PTR [rax+0x0]
  416b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416b90:	push   rbx
  416b91:	sub    rsp,0x1c0
  416b98:	xor    eax,eax
  416b9a:	cmp    DWORD PTR [rip+0x15b60],ecx        # 0x42c700
  416ba0:	mov    ebx,ecx
  416ba2:	jl     0x416bb0
  416ba4:	add    rsp,0x1c0
  416bab:	pop    rbx
  416bac:	ret    
  416bad:	nop    DWORD PTR [rax]
  416bb0:	lea    rdx,[rsp+0x20]
  416bb5:	movzx  ecx,cx
  416bb8:	call   QWORD PTR [rip+0x19116]        # 0x42fcd4
  416bbe:	mov    edx,eax
  416bc0:	mov    eax,0x1
  416bc5:	test   edx,edx
  416bc7:	jne    0x416ba4
  416bc9:	movzx  edx,WORD PTR [rsp+0x20]
  416bce:	mov    al,0x2
  416bd0:	cmp    ebx,edx
  416bd2:	jg     0x416ba4
  416bd4:	mov    eax,DWORD PTR [rip+0x15b26]        # 0x42c700
  416bda:	test   eax,eax
  416bdc:	jne    0x416bf8
  416bde:	lea    r8,[rip+0x15b3b]        # 0x42c720
  416be5:	lea    rdx,[rip+0xfffffffffffff734]        # 0x416320
  416bec:	lea    rcx,[rip+0xfffffffffffffb6d]        # 0x416760
  416bf3:	call   0x416260
  416bf8:	mov    DWORD PTR [rip+0x15b02],ebx        # 0x42c700
  416bfe:	xor    eax,eax
  416c00:	jmp    0x416ba4
  416c02:	nop    DWORD PTR [rax+0x0]
  416c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416c10:	sub    rsp,0x28
  416c14:	lea    rcx,[rip+0x15b05]        # 0x42c720
  416c1b:	mov    DWORD PTR [rip+0x15adb],0x0        # 0x42c700
  416c25:	call   0x4162e0
  416c2a:	call   QWORD PTR [rip+0x19074]        # 0x42fca4
  416c30:	test   eax,eax
  416c32:	setne  al
  416c35:	movzx  eax,al
  416c38:	add    rsp,0x28
  416c3c:	ret    
  416c3d:	nop
  416c3e:	nop
  416c3f:	nop
  416c40:	jmp    QWORD PTR [rip+0x19106]        # 0x42fd4c
  416c46:	nop
  416c47:	nop
  416c48:	jmp    QWORD PTR [rip+0x190f6]        # 0x42fd44
  416c4e:	nop
  416c4f:	nop
  416c50:	jmp    QWORD PTR [rip+0x190e6]        # 0x42fd3c
  416c56:	nop
  416c57:	nop
  416c58:	jmp    QWORD PTR [rip+0x190d6]        # 0x42fd34
  416c5e:	nop
  416c5f:	nop
  416c60:	jmp    QWORD PTR [rip+0x190c6]        # 0x42fd2c
  416c66:	nop
  416c67:	nop
  416c68:	jmp    QWORD PTR [rip+0x190b6]        # 0x42fd24
  416c6e:	nop
  416c6f:	nop
  416c70:	jmp    QWORD PTR [rip+0x190a6]        # 0x42fd1c
  416c76:	nop
  416c77:	nop
  416c78:	jmp    QWORD PTR [rip+0x19096]        # 0x42fd14
  416c7e:	nop
  416c7f:	nop
  416c80:	jmp    QWORD PTR [rip+0x19086]        # 0x42fd0c
  416c86:	nop
  416c87:	nop
  416c88:	jmp    QWORD PTR [rip+0x19076]        # 0x42fd04
  416c8e:	nop
  416c8f:	nop
  416c90:	jmp    QWORD PTR [rip+0x19066]        # 0x42fcfc
  416c96:	nop
  416c97:	nop
  416c98:	jmp    QWORD PTR [rip+0x19056]        # 0x42fcf4
  416c9e:	nop
  416c9f:	nop
  416ca0:	jmp    QWORD PTR [rip+0x19046]        # 0x42fcec
  416ca6:	nop
  416ca7:	nop
  416ca8:	jmp    QWORD PTR [rip+0x19036]        # 0x42fce4
  416cae:	nop
  416caf:	nop
  416cb0:	jmp    QWORD PTR [rip+0x19026]        # 0x42fcdc
  416cb6:	nop
  416cb7:	nop
  416cb8:	jmp    QWORD PTR [rip+0x19016]        # 0x42fcd4
  416cbe:	nop
  416cbf:	nop
  416cc0:	jmp    QWORD PTR [rip+0x19006]        # 0x42fccc
  416cc6:	nop
  416cc7:	nop
  416cc8:	jmp    QWORD PTR [rip+0x18ff6]        # 0x42fcc4
  416cce:	nop
  416ccf:	nop
  416cd0:	jmp    QWORD PTR [rip+0x18fe6]        # 0x42fcbc
  416cd6:	nop
  416cd7:	nop
  416cd8:	jmp    QWORD PTR [rip+0x18fd6]        # 0x42fcb4
  416cde:	nop
  416cdf:	nop
  416ce0:	jmp    QWORD PTR [rip+0x18fc6]        # 0x42fcac
  416ce6:	nop
  416ce7:	nop
  416ce8:	jmp    QWORD PTR [rip+0x18fb6]        # 0x42fca4
  416cee:	nop
  416cef:	nop
  416cf0:	sub    rsp,0x28
  416cf4:	call   0x416d20
  416cf9:	lea    rcx,[rip+0x15a40]        # 0x42c740
  416d00:	mov    r8d,0x401
  416d06:	mov    rdx,rax
  416d09:	call   0x41d790
  416d0e:	lea    rax,[rip+0x15a2b]        # 0x42c740
  416d15:	add    rsp,0x28
  416d19:	ret    
  416d1a:	nop
  416d1b:	nop
  416d1c:	nop
  416d1d:	nop
  416d1e:	nop
  416d1f:	nop
  416d20:	push   rbx
  416d21:	sub    rsp,0x40
  416d25:	lea    rbx,[rip+0x15e54]        # 0x42cb80
  416d2c:	mov    r9d,0x400
  416d32:	xor    edx,edx
  416d34:	mov    r8d,ecx
  416d37:	mov    QWORD PTR [rsp+0x30],0x0
  416d40:	mov    DWORD PTR [rsp+0x28],0x400
  416d48:	mov    QWORD PTR [rsp+0x20],rbx
  416d4d:	mov    ecx,0x12ff
  416d52:	call   QWORD PTR [rip+0x18adc]        # 0x42f834
  416d58:	mov    rax,rbx
  416d5b:	add    rsp,0x40
  416d5f:	pop    rbx
  416d60:	ret    
  416d61:	nop
  416d62:	nop
  416d63:	nop
  416d64:	nop
  416d65:	nop
  416d66:	nop
  416d67:	nop
  416d68:	nop
  416d69:	nop
  416d6a:	nop
  416d6b:	nop
  416d6c:	nop
  416d6d:	nop
  416d6e:	nop
  416d6f:	nop
  416d70:	jmp    QWORD PTR [rip+0x18eee]        # 0x42fc64
  416d76:	nop
  416d77:	nop
  416d78:	jmp    QWORD PTR [rip+0x18ede]        # 0x42fc5c
  416d7e:	nop
  416d7f:	nop
  416d80:	jmp    QWORD PTR [rip+0x18ece]        # 0x42fc54
  416d86:	nop
  416d87:	nop
  416d88:	nop    DWORD PTR [rax+rax*1+0x0]
  416d90:	push   rbx
  416d91:	sub    rsp,0x30
  416d95:	mov    rbx,rcx
  416d98:	mov    rcx,QWORD PTR [rip+0x17a71]        # 0x42e810
  416d9f:	call   0x417340
  416da4:	cmp    rax,0xffffffffffffffff
  416da8:	mov    QWORD PTR [rsp+0x20],rax
  416dad:	je     0x416e25
  416daf:	mov    ecx,0x8
  416db4:	call   0x41d958
  416db9:	mov    rcx,QWORD PTR [rip+0x17a50]        # 0x42e810
  416dc0:	call   0x417340
  416dc5:	mov    rcx,QWORD PTR [rip+0x17a4c]        # 0x42e818
  416dcc:	mov    QWORD PTR [rsp+0x20],rax
  416dd1:	call   0x417340
  416dd6:	lea    rdx,[rsp+0x20]
  416ddb:	lea    r8,[rsp+0x28]
  416de0:	mov    rcx,rbx
  416de3:	mov    QWORD PTR [rsp+0x28],rax
  416de8:	call   0x41d9f0
  416ded:	mov    rcx,QWORD PTR [rsp+0x20]
  416df2:	mov    rbx,rax
  416df5:	call   0x417350
  416dfa:	mov    rcx,QWORD PTR [rsp+0x28]
  416dff:	mov    QWORD PTR [rip+0x17a0a],rax        # 0x42e810
  416e06:	call   0x417350
  416e0b:	mov    ecx,0x8
  416e10:	mov    QWORD PTR [rip+0x17a01],rax        # 0x42e818
  416e17:	call   0x41d920
  416e1c:	mov    rax,rbx
  416e1f:	add    rsp,0x30
  416e23:	pop    rbx
  416e24:	ret    
  416e25:	mov    rax,QWORD PTR [rip+0x10a94]        # 0x4278c0
  416e2c:	mov    rcx,rbx
  416e2f:	call   QWORD PTR [rax]
  416e31:	add    rsp,0x30
  416e35:	pop    rbx
  416e36:	ret    
  416e37:	nop    WORD PTR [rax+rax*1+0x0]
  416e40:	sub    rsp,0x28
  416e44:	call   0x416d90
  416e49:	test   rax,rax
  416e4c:	sete   al
  416e4f:	movzx  eax,al
  416e52:	neg    eax
  416e54:	add    rsp,0x28
  416e58:	ret    
  416e59:	nop
  416e5a:	nop
  416e5b:	nop
  416e5c:	nop
  416e5d:	nop
  416e5e:	nop
  416e5f:	nop
  416e60:	sub    rsp,0x28
  416e64:	mov    rax,QWORD PTR [rip+0x93b5]        # 0x420220
  416e6b:	mov    rax,QWORD PTR [rax]
  416e6e:	test   rax,rax
  416e71:	je     0x416e90
  416e73:	call   rax
  416e75:	mov    rax,QWORD PTR [rip+0x93a4]        # 0x420220
  416e7c:	lea    rdx,[rax+0x8]
  416e80:	mov    rax,QWORD PTR [rax+0x8]
  416e84:	mov    QWORD PTR [rip+0x9395],rdx        # 0x420220
  416e8b:	test   rax,rax
  416e8e:	jne    0x416e73
  416e90:	add    rsp,0x28
  416e94:	ret    
  416e95:	nop
  416e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416ea0:	push   rsi
  416ea1:	push   rbx
  416ea2:	sub    rsp,0x28
  416ea6:	mov    rsi,QWORD PTR [rip+0x10983]        # 0x427830
  416ead:	mov    rax,QWORD PTR [rsi]
  416eb0:	cmp    eax,0xffffffff
  416eb3:	mov    ebx,eax
  416eb5:	je     0x416ee0
  416eb7:	test   ebx,ebx
  416eb9:	je     0x416eca
  416ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  416ec0:	mov    eax,ebx
  416ec2:	call   QWORD PTR [rsi+rax*8]
  416ec5:	sub    ebx,0x1
  416ec8:	jne    0x416ec0
  416eca:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x416e60
  416ed1:	add    rsp,0x28
  416ed5:	pop    rbx
  416ed6:	pop    rsi
  416ed7:	jmp    0x416e40
  416edc:	nop    DWORD PTR [rax+0x0]
  416ee0:	xor    ebx,ebx
  416ee2:	jmp    0x416ee6
  416ee4:	mov    ebx,eax
  416ee6:	lea    edx,[rbx+0x1]
  416ee9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  416eee:	mov    rax,rdx
  416ef1:	jne    0x416ee4
  416ef3:	jmp    0x416eb7
  416ef5:	nop
  416ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416f00:	mov    eax,DWORD PTR [rip+0x164ba]        # 0x42d3c0
  416f06:	test   eax,eax
  416f08:	je     0x416f10
  416f0a:	repz ret 
  416f0c:	nop    DWORD PTR [rax+0x0]
  416f10:	mov    DWORD PTR [rip+0x164a6],0x1        # 0x42d3c0
  416f1a:	jmp    0x416ea0
  416f1c:	nop
  416f1d:	nop
  416f1e:	nop
  416f1f:	nop
  416f20:	mov    rax,QWORD PTR [rip+0x18a6d]        # 0x42f994
  416f27:	rex.W jmp rax
  416f2a:	nop
  416f2b:	nop
  416f2c:	nop
  416f2d:	nop
  416f2e:	nop
  416f2f:	nop
  416f30:	xor    eax,eax
  416f32:	ret    
  416f33:	nop
  416f34:	nop
  416f35:	nop
  416f36:	nop
  416f37:	nop
  416f38:	nop
  416f39:	nop
  416f3a:	nop
  416f3b:	nop
  416f3c:	nop
  416f3d:	nop
  416f3e:	nop
  416f3f:	nop
  416f40:	push   r12
  416f42:	push   rbp
  416f43:	push   rdi
  416f44:	push   rsi
  416f45:	push   rbx
  416f46:	sub    rsp,0x40
  416f4a:	mov    rbx,QWORD PTR [rip+0x936f]        # 0x4202c0
  416f51:	movabs rax,0x2b992ddfa232
  416f5b:	mov    QWORD PTR [rsp+0x20],0x0
  416f64:	cmp    rbx,rax
  416f67:	je     0x416f80
  416f69:	not    rbx
  416f6c:	mov    QWORD PTR [rip+0x935d],rbx        # 0x4202d0
  416f73:	add    rsp,0x40
  416f77:	pop    rbx
  416f78:	pop    rsi
  416f79:	pop    rdi
  416f7a:	pop    rbp
  416f7b:	pop    r12
  416f7d:	ret    
  416f7e:	xchg   ax,ax
  416f80:	lea    rcx,[rsp+0x20]
  416f85:	call   QWORD PTR [rip+0x18919]        # 0x42f8a4
  416f8b:	mov    r12,QWORD PTR [rsp+0x20]
  416f90:	call   QWORD PTR [rip+0x188b6]        # 0x42f84c
  416f96:	mov    ebp,eax
  416f98:	call   QWORD PTR [rip+0x188b6]        # 0x42f854
  416f9e:	mov    edi,eax
  416fa0:	call   QWORD PTR [rip+0x18906]        # 0x42f8ac
  416fa6:	lea    rcx,[rsp+0x30]
  416fab:	mov    esi,eax
  416fad:	call   QWORD PTR [rip+0x18931]        # 0x42f8e4
  416fb3:	xor    r12,QWORD PTR [rsp+0x30]
  416fb8:	mov    edx,edi
  416fba:	movabs rax,0xffffffffffff
  416fc4:	xor    rbp,r12
  416fc7:	mov    rdi,rbp
  416fca:	xor    rdi,rdx
  416fcd:	mov    edx,esi
  416fcf:	xor    rdi,rdx
  416fd2:	mov    rsi,rdi
  416fd5:	and    rsi,rax
  416fd8:	cmp    rsi,rbx
  416fdb:	je     0x417000
  416fdd:	mov    rax,rsi
  416fe0:	not    rax
  416fe3:	mov    QWORD PTR [rip+0x92d6],rsi        # 0x4202c0
  416fea:	mov    QWORD PTR [rip+0x92df],rax        # 0x4202d0
  416ff1:	add    rsp,0x40
  416ff5:	pop    rbx
  416ff6:	pop    rsi
  416ff7:	pop    rdi
  416ff8:	pop    rbp
  416ff9:	pop    r12
  416ffb:	ret    
  416ffc:	nop    DWORD PTR [rax+0x0]
  417000:	movabs rax,0xffffd466d2205dcc
  41700a:	movabs rsi,0x2b992ddfa233
  417014:	jmp    0x416fe3
  417016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417020:	push   rbp
  417021:	push   rsi
  417022:	push   rbx
  417023:	mov    rbp,rsp
  417026:	sub    rsp,0x70
  41702a:	mov    rsi,rcx
  41702d:	lea    rcx,[rip+0x163cc]        # 0x42d400
  417034:	call   QWORD PTR [rip+0x188ba]        # 0x42f8f4
  41703a:	mov    rbx,QWORD PTR [rip+0x164b7]        # 0x42d4f8
  417041:	xor    r8d,r8d
  417044:	lea    rdx,[rbp-0x28]
  417048:	mov    rcx,rbx
  41704b:	call   QWORD PTR [rip+0x188ab]        # 0x42f8fc
  417051:	test   rax,rax
  417054:	mov    r9,rax
  417057:	je     0x417100
  41705d:	lea    rax,[rbp-0x20]
  417061:	mov    QWORD PTR [rsp+0x38],0x0
  41706a:	mov    r8,rbx
  41706d:	mov    rdx,QWORD PTR [rbp-0x28]
  417071:	xor    ecx,ecx
  417073:	mov    QWORD PTR [rsp+0x30],rax
  417078:	lea    rax,[rbp-0x18]
  41707c:	mov    QWORD PTR [rsp+0x28],rax
  417081:	lea    rax,[rip+0x16378]        # 0x42d400
  417088:	mov    QWORD PTR [rsp+0x20],rax
  41708d:	call   QWORD PTR [rip+0x18871]        # 0x42f904
  417093:	mov    rax,QWORD PTR [rip+0x1645e]        # 0x42d4f8
  41709a:	xor    ecx,ecx
  41709c:	mov    QWORD PTR [rip+0x163dd],rsi        # 0x42d480
  4170a3:	mov    DWORD PTR [rip+0x16853],0xc0000409        # 0x42d900
  4170ad:	mov    DWORD PTR [rip+0x1684d],0x1        # 0x42d904
  4170b7:	mov    QWORD PTR [rip+0x16852],rax        # 0x42d910
  4170be:	mov    rax,QWORD PTR [rip+0x91fb]        # 0x4202c0
  4170c5:	mov    QWORD PTR [rbp-0x10],rax
  4170c9:	mov    rax,QWORD PTR [rip+0x9200]        # 0x4202d0
  4170d0:	mov    QWORD PTR [rbp-0x8],rax
  4170d4:	call   QWORD PTR [rip+0x18832]        # 0x42f90c
  4170da:	lea    rcx,[rip+0xffaf]        # 0x427090
  4170e1:	call   QWORD PTR [rip+0x1884d]        # 0x42f934
  4170e7:	call   QWORD PTR [rip+0x18757]        # 0x42f844
  4170ed:	mov    edx,0xc0000409
  4170f2:	mov    rcx,rax
  4170f5:	call   QWORD PTR [rip+0x18829]        # 0x42f924
  4170fb:	call   0x41d918
  417100:	mov    rax,QWORD PTR [rbp+0x18]
  417104:	mov    QWORD PTR [rip+0x163ed],rax        # 0x42d4f8
  41710b:	lea    rax,[rbp+0x8]
  41710f:	mov    QWORD PTR [rip+0x16382],rax        # 0x42d498
  417116:	jmp    0x417093
  41711b:	nop
  41711c:	nop
  41711d:	nop
  41711e:	nop
  41711f:	nop
  417120:	sub    rsp,0x28
  417124:	test   edx,edx
  417126:	je     0x417140
  417128:	cmp    edx,0x3
  41712b:	je     0x417140
  41712d:	mov    eax,0x1
  417132:	add    rsp,0x28
  417136:	ret    
  417137:	nop    WORD PTR [rax+rax*1+0x0]
  417140:	call   0x417e30
  417145:	mov    eax,0x1
  41714a:	add    rsp,0x28
  41714e:	ret    
  41714f:	nop
  417150:	push   rsi
  417151:	push   rbx
  417152:	sub    rsp,0x28
  417156:	mov    rax,QWORD PTR [rip+0x106b3]        # 0x427810
  41715d:	cmp    DWORD PTR [rax],0x2
  417160:	je     0x417168
  417162:	mov    DWORD PTR [rax],0x2
  417168:	cmp    edx,0x2
  41716b:	je     0x417180
  41716d:	cmp    edx,0x1
  417170:	je     0x4171b2
  417172:	mov    eax,0x1
  417177:	add    rsp,0x28
  41717b:	pop    rbx
  41717c:	pop    rsi
  41717d:	ret    
  41717e:	xchg   ax,ax
  417180:	lea    rbx,[rip+0x19ed9]        # 0x431060
  417187:	lea    rsi,[rip+0x19ed2]        # 0x431060
  41718e:	cmp    rbx,rsi
  417191:	je     0x417172
  417193:	mov    rax,QWORD PTR [rbx]
  417196:	test   rax,rax
  417199:	je     0x41719d
  41719b:	call   rax
  41719d:	add    rbx,0x8
  4171a1:	cmp    rbx,rsi
  4171a4:	jne    0x417193
  4171a6:	mov    eax,0x1
  4171ab:	add    rsp,0x28
  4171af:	pop    rbx
  4171b0:	pop    rsi
  4171b1:	ret    
  4171b2:	call   0x417e30
  4171b7:	jmp    0x417172
  4171b9:	nop    DWORD PTR [rax+0x0]
  4171c0:	xor    eax,eax
  4171c2:	ret    
  4171c3:	nop
  4171c4:	nop
  4171c5:	nop
  4171c6:	nop
  4171c7:	nop
  4171c8:	nop
  4171c9:	nop
  4171ca:	nop
  4171cb:	nop
  4171cc:	nop
  4171cd:	nop
  4171ce:	nop
  4171cf:	nop
  4171d0:	sub    rsp,0x58
  4171d4:	mov    rax,QWORD PTR [rip+0x16805]        # 0x42d9e0
  4171db:	test   rax,rax
  4171de:	je     0x41720c
  4171e0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4171e9:	mov    DWORD PTR [rsp+0x20],ecx
  4171ed:	lea    rcx,[rsp+0x20]
  4171f2:	mov    QWORD PTR [rsp+0x28],rdx
  4171f7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4171fd:	movsd  QWORD PTR [rsp+0x38],xmm3
  417203:	movsd  QWORD PTR [rsp+0x40],xmm0
  417209:	call   rax
  41720b:	nop
  41720c:	add    rsp,0x58
  417210:	ret    
  417211:	nop    DWORD PTR [rax+rax*1+0x0]
  417216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417220:	mov    QWORD PTR [rip+0x167b9],rcx        # 0x42d9e0
  417227:	jmp    0x41d9c8
  41722c:	nop    DWORD PTR [rax+0x0]
  417230:	push   rsi
  417231:	push   rbx
  417232:	sub    rsp,0x78
  417236:	movaps XMMWORD PTR [rsp+0x40],xmm6
  41723b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  417240:	movaps XMMWORD PTR [rsp+0x60],xmm8
  417246:	cmp    DWORD PTR [rcx],0x6
  417249:	ja     0x417320
  41724f:	mov    edx,DWORD PTR [rcx]
  417251:	lea    rax,[rip+0xff7c]        # 0x4271d4
  417258:	movsxd rdx,DWORD PTR [rax+rdx*4]
  41725c:	add    rax,rdx
  41725f:	jmp    rax
  417261:	lea    rbx,[rip+0xfe48]        # 0x4270b0
  417268:	nop    DWORD PTR [rax+rax*1+0x0]
  417270:	movsd  xmm8,QWORD PTR [rcx+0x20]
  417276:	mov    rsi,QWORD PTR [rcx+0x8]
  41727a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  41727f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  417284:	call   0x41d9e0
  417289:	movsd  QWORD PTR [rsp+0x30],xmm8
  417290:	lea    rcx,[rax+0x60]
  417294:	lea    rdx,[rip+0xff0d]        # 0x4271a8
  41729b:	movsd  QWORD PTR [rsp+0x28],xmm7
  4172a1:	mov    r9,rsi
  4172a4:	mov    r8,rbx
  4172a7:	movsd  QWORD PTR [rsp+0x20],xmm6
  4172ad:	call   0x41d8c8
  4172b2:	nop
  4172b3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4172b8:	xor    eax,eax
  4172ba:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4172bf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4172c5:	add    rsp,0x78
  4172c9:	pop    rbx
  4172ca:	pop    rsi
  4172cb:	ret    
  4172cc:	nop    DWORD PTR [rax+0x0]
  4172d0:	lea    rbx,[rip+0xfdf8]        # 0x4270cf
  4172d7:	jmp    0x417270
  4172d9:	nop    DWORD PTR [rax+0x0]
  4172e0:	lea    rbx,[rip+0xfe09]        # 0x4270f0
  4172e7:	jmp    0x417270
  4172e9:	nop    DWORD PTR [rax+0x0]
  4172f0:	lea    rbx,[rip+0xfe69]        # 0x427160
  4172f7:	jmp    0x417270
  4172fc:	nop    DWORD PTR [rax+0x0]
  417300:	lea    rbx,[rip+0xfe31]        # 0x427138
  417307:	jmp    0x417270
  41730c:	nop    DWORD PTR [rax+0x0]
  417310:	lea    rbx,[rip+0xfdf9]        # 0x427110
  417317:	jmp    0x417270
  41731c:	nop    DWORD PTR [rax+0x0]
  417320:	lea    rbx,[rip+0xfe6f]        # 0x427196
  417327:	jmp    0x417270
  41732c:	nop
  41732d:	nop
  41732e:	nop
  41732f:	nop
  417330:	fninit 
  417332:	ret    
  417333:	nop
  417334:	nop
  417335:	nop
  417336:	nop
  417337:	nop
  417338:	nop
  417339:	nop
  41733a:	nop
  41733b:	nop
  41733c:	nop
  41733d:	nop
  41733e:	nop
  41733f:	nop
  417340:	mov    rax,rcx
  417343:	ret    
  417344:	xchg   ax,ax
  417346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417350:	mov    rax,rcx
  417353:	ret    
  417354:	nop
  417355:	nop
  417356:	nop
  417357:	nop
  417358:	nop
  417359:	nop
  41735a:	nop
  41735b:	nop
  41735c:	nop
  41735d:	nop
  41735e:	nop
  41735f:	nop
  417360:	push   rsi
  417361:	push   rbx
  417362:	sub    rsp,0x38
  417366:	lea    rax,[rsp+0x58]
  41736b:	mov    rbx,rcx
  41736e:	mov    QWORD PTR [rsp+0x58],rdx
  417373:	mov    QWORD PTR [rsp+0x60],r8
  417378:	mov    QWORD PTR [rsp+0x68],r9
  41737d:	mov    QWORD PTR [rsp+0x28],rax
  417382:	call   0x41d9e0
  417387:	lea    rcx,[rip+0xfe62]        # 0x4271f0
  41738e:	lea    r9,[rax+0x60]
  417392:	mov    r8d,0x1b
  417398:	mov    edx,0x1
  41739d:	call   0x41d890
  4173a2:	mov    rsi,QWORD PTR [rsp+0x28]
  4173a7:	call   0x41d9e0
  4173ac:	lea    rcx,[rax+0x60]
  4173b0:	mov    rdx,rbx
  4173b3:	mov    r8,rsi
  4173b6:	call   0x41d7a8
  4173bb:	call   0x41d918
  4173c0:	nop
  4173c1:	nop    DWORD PTR [rax+rax*1+0x0]
  4173c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4173d0:	push   r13
  4173d2:	push   r12
  4173d4:	push   rbp
  4173d5:	push   rdi
  4173d6:	push   rsi
  4173d7:	push   rbx
  4173d8:	sub    rsp,0x58
  4173dc:	movsxd rbp,DWORD PTR [rip+0x16621]        # 0x42da04
  4173e3:	mov    rbx,rcx
  4173e6:	mov    rsi,rdx
  4173e9:	mov    rdi,r8
  4173ec:	test   ebp,ebp
  4173ee:	jle    0x4174ea
  4173f4:	mov    rax,QWORD PTR [rip+0x1660d]        # 0x42da08
  4173fb:	xor    r9d,r9d
  4173fe:	add    rax,0x8
  417402:	mov    r10,QWORD PTR [rax]
  417405:	cmp    rbx,r10
  417408:	jb     0x41741e
  41740a:	mov    rdx,QWORD PTR [rax+0x8]
  41740e:	mov    r11d,DWORD PTR [rdx+0x8]
  417412:	add    r10,r11
  417415:	cmp    rbx,r10
  417418:	jb     0x4174d0
  41741e:	add    r9d,0x1
  417422:	add    rax,0x18
  417426:	cmp    r9d,ebp
  417429:	jne    0x417402
  41742b:	mov    rcx,rbx
  41742e:	call   0x418040
  417433:	test   rax,rax
  417436:	mov    r12,rax
  417439:	je     0x417522
  41743f:	lea    rbp,[rbp+rbp*2+0x0]
  417444:	shl    rbp,0x3
  417448:	mov    r13,rbp
  41744b:	add    r13,QWORD PTR [rip+0x165b6]        # 0x42da08
  417452:	mov    QWORD PTR [r13+0x10],rax
  417456:	mov    DWORD PTR [r13+0x0],0x0
  41745e:	call   0x418160
  417463:	mov    edx,DWORD PTR [r12+0xc]
  417468:	mov    r8d,0x30
  41746e:	add    rax,rdx
  417471:	lea    rdx,[rsp+0x20]
  417476:	mov    QWORD PTR [r13+0x8],rax
  41747a:	mov    rax,QWORD PTR [rip+0x16587]        # 0x42da08
  417481:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  417486:	call   QWORD PTR [rip+0x184b8]        # 0x42f944
  41748c:	test   rax,rax
  41748f:	je     0x417505
  417491:	mov    eax,DWORD PTR [rsp+0x44]
  417495:	lea    edx,[rax-0x4]
  417498:	and    edx,0xfffffffb
  41749b:	je     0x4174c9
  41749d:	sub    eax,0x40
  4174a0:	and    eax,0xffffffbf
  4174a3:	je     0x4174c9
  4174a5:	mov    r9,rbp
  4174a8:	add    r9,QWORD PTR [rip+0x16559]        # 0x42da08
  4174af:	mov    r8d,0x40
  4174b5:	mov    rdx,QWORD PTR [rsp+0x38]
  4174ba:	mov    rcx,QWORD PTR [rsp+0x20]
  4174bf:	call   QWORD PTR [rip+0x18477]        # 0x42f93c
  4174c5:	test   eax,eax
  4174c7:	je     0x4174f1
  4174c9:	add    DWORD PTR [rip+0x16534],0x1        # 0x42da04
  4174d0:	mov    r8,rdi
  4174d3:	mov    rdx,rsi
  4174d6:	mov    rcx,rbx
  4174d9:	add    rsp,0x58
  4174dd:	pop    rbx
  4174de:	pop    rsi
  4174df:	pop    rdi
  4174e0:	pop    rbp
  4174e1:	pop    r12
  4174e3:	pop    r13
  4174e5:	jmp    0x41d860
  4174ea:	xor    ebp,ebp
  4174ec:	jmp    0x41742b
  4174f1:	call   QWORD PTR [rip+0x18375]        # 0x42f86c
  4174f7:	lea    rcx,[rip+0xfd6a]        # 0x427268
  4174fe:	mov    edx,eax
  417500:	call   0x417360
  417505:	mov    rax,QWORD PTR [rip+0x164fc]        # 0x42da08
  41750c:	mov    edx,DWORD PTR [r12+0x8]
  417511:	lea    rcx,[rip+0xfd18]        # 0x427230
  417518:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  41751d:	call   0x417360
  417522:	lea    rcx,[rip+0xfce7]        # 0x427210
  417529:	mov    rdx,rbx
  41752c:	call   0x417360
  417531:	nop
  417532:	nop    DWORD PTR [rax+0x0]
  417536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417540:	push   rbp
  417541:	push   r14
  417543:	push   r13
  417545:	push   r12
  417547:	push   rdi
  417548:	push   rsi
  417549:	push   rbx
  41754a:	mov    rbp,rsp
  41754d:	sub    rsp,0x60
  417551:	mov    ebx,DWORD PTR [rip+0x164a9]        # 0x42da00
  417557:	test   ebx,ebx
  417559:	je     0x417570
  41755b:	mov    rsp,rbp
  41755e:	pop    rbx
  41755f:	pop    rsi
  417560:	pop    rdi
  417561:	pop    r12
  417563:	pop    r13
  417565:	pop    r14
  417567:	pop    rbp
  417568:	ret    
  417569:	nop    DWORD PTR [rax+0x0]
  417570:	mov    DWORD PTR [rip+0x16486],0x1        # 0x42da00
  41757a:	call   0x418090
  41757f:	cdqe   
  417581:	lea    rax,[rax+rax*2]
  417585:	lea    rax,[rax*8+0x1e]
  41758d:	and    rax,0xfffffffffffffff0
  417591:	call   0x4182b0
  417596:	mov    rsi,QWORD PTR [rip+0x102a3]        # 0x427840
  41759d:	mov    rbx,QWORD PTR [rip+0x102ac]        # 0x427850
  4175a4:	sub    rsp,rax
  4175a7:	mov    DWORD PTR [rip+0x16453],0x0        # 0x42da04
  4175b1:	lea    rax,[rsp+0x20]
  4175b6:	mov    QWORD PTR [rip+0x1644b],rax        # 0x42da08
  4175bd:	mov    rax,rsi
  4175c0:	sub    rax,rbx
  4175c3:	cmp    rax,0x7
  4175c7:	jle    0x41755b
  4175c9:	cmp    rax,0xb
  4175cd:	jle    0x4175f5
  4175cf:	mov    r11d,DWORD PTR [rbx]
  4175d2:	test   r11d,r11d
  4175d5:	jne    0x417720
  4175db:	mov    r10d,DWORD PTR [rbx+0x4]
  4175df:	test   r10d,r10d
  4175e2:	jne    0x417720
  4175e8:	mov    r9d,DWORD PTR [rbx+0x8]
  4175ec:	test   r9d,r9d
  4175ef:	jne    0x41760c
  4175f1:	add    rbx,0xc
  4175f5:	mov    r8d,DWORD PTR [rbx]
  4175f8:	test   r8d,r8d
  4175fb:	jne    0x417720
  417601:	mov    ecx,DWORD PTR [rbx+0x4]
  417604:	test   ecx,ecx
  417606:	jne    0x417720
  41760c:	mov    edx,DWORD PTR [rbx+0x8]
  41760f:	cmp    edx,0x1
  417612:	jne    0x41782c
  417618:	add    rbx,0xc
  41761c:	cmp    rbx,rsi
  41761f:	jae    0x41755b
  417625:	mov    r12,QWORD PTR [rip+0x10244]        # 0x427870
  41762c:	lea    r13,[rbp-0x30]
  417630:	movabs r14,0xffffffff00000000
  41763a:	mov    ecx,DWORD PTR [rbx+0x4]
  41763d:	mov    eax,DWORD PTR [rbx]
  41763f:	movzx  edx,BYTE PTR [rbx+0x8]
  417643:	add    rax,r12
  417646:	add    rcx,r12
  417649:	cmp    edx,0x10
  41764c:	mov    r8,QWORD PTR [rax]
  41764f:	je     0x417796
  417655:	jbe    0x41775d
  41765b:	cmp    edx,0x20
  41765e:	je     0x4177df
  417664:	cmp    edx,0x40
  417667:	jne    0x4177cb
  41766d:	sub    r8,rax
  417670:	mov    rdx,r13
  417673:	mov    rdi,r13
  417676:	mov    rax,r8
  417679:	add    rax,QWORD PTR [rcx]
  41767c:	mov    r8d,0x8
  417682:	mov    QWORD PTR [rbp-0x30],rax
  417686:	call   0x4173d0
  41768b:	add    rbx,0xc
  41768f:	cmp    rbx,rsi
  417692:	jb     0x41763a
  417694:	mov    eax,DWORD PTR [rip+0x1636a]        # 0x42da04
  41769a:	xor    ebx,ebx
  41769c:	xor    esi,esi
  41769e:	test   eax,eax
  4176a0:	jle    0x41755b
  4176a6:	mov    r14,QWORD PTR [rip+0x18297]        # 0x42f944
  4176ad:	lea    r13,[rbp-0x34]
  4176b1:	mov    r12,QWORD PTR [rip+0x18284]        # 0x42f93c
  4176b8:	jmp    0x4176d3
  4176ba:	nop    WORD PTR [rax+rax*1+0x0]
  4176c0:	add    esi,0x1
  4176c3:	add    rbx,0x18
  4176c7:	cmp    esi,DWORD PTR [rip+0x16337]        # 0x42da04
  4176cd:	jge    0x41755b
  4176d3:	mov    rax,rbx
  4176d6:	add    rax,QWORD PTR [rip+0x1632b]        # 0x42da08
  4176dd:	mov    edx,DWORD PTR [rax]
  4176df:	test   edx,edx
  4176e1:	je     0x4176c0
  4176e3:	mov    rcx,QWORD PTR [rax+0x8]
  4176e7:	mov    r8d,0x30
  4176ed:	mov    rdx,rdi
  4176f0:	call   r14
  4176f3:	test   rax,rax
  4176f6:	je     0x41780e
  4176fc:	mov    rax,QWORD PTR [rip+0x16305]        # 0x42da08
  417703:	mov    r9,r13
  417706:	mov    rdx,QWORD PTR [rbp-0x18]
  41770a:	mov    rcx,QWORD PTR [rbp-0x30]
  41770e:	mov    r8d,DWORD PTR [rax+rbx*1]
  417712:	call   r12
  417715:	jmp    0x4176c0
  417717:	nop    WORD PTR [rax+rax*1+0x0]
  417720:	cmp    rbx,rsi
  417723:	jae    0x41755b
  417729:	mov    r12,QWORD PTR [rip+0x10140]        # 0x427870
  417730:	lea    rdi,[rbp-0x30]
  417734:	mov    ecx,DWORD PTR [rbx+0x4]
  417737:	mov    eax,DWORD PTR [rbx]
  417739:	mov    r8d,0x4
  41773f:	mov    rdx,rdi
  417742:	add    rbx,0x8
  417746:	add    rcx,r12
  417749:	add    eax,DWORD PTR [rcx]
  41774b:	mov    DWORD PTR [rbp-0x30],eax
  41774e:	call   0x4173d0
  417753:	cmp    rbx,rsi
  417756:	jb     0x417734
  417758:	jmp    0x417694
  41775d:	cmp    edx,0x8
  417760:	jne    0x4177cb
  417762:	movzx  edx,BYTE PTR [rcx]
  417765:	mov    rdi,r13
  417768:	mov    r10,rdx
  41776b:	or     r10,0xffffffffffffff00
  417772:	test   dl,dl
  417774:	cmovs  rdx,r10
  417778:	sub    rdx,rax
  41777b:	lea    rax,[r8+rdx*1]
  41777f:	mov    r8d,0x1
  417785:	mov    rdx,r13
  417788:	mov    QWORD PTR [rbp-0x30],rax
  41778c:	call   0x4173d0
  417791:	jmp    0x41768b
  417796:	movzx  edx,WORD PTR [rcx]
  417799:	mov    rdi,r13
  41779c:	mov    r10,rdx
  41779f:	or     r10,0xffffffffffff0000
  4177a6:	test   dx,dx
  4177a9:	cmovs  rdx,r10
  4177ad:	sub    rdx,rax
  4177b0:	lea    rax,[r8+rdx*1]
  4177b4:	mov    r8d,0x2
  4177ba:	mov    rdx,r13
  4177bd:	mov    QWORD PTR [rbp-0x30],rax
  4177c1:	call   0x4173d0
  4177c6:	jmp    0x41768b
  4177cb:	lea    rcx,[rip+0xfaf6]        # 0x4272c8
  4177d2:	mov    QWORD PTR [rbp-0x30],0x0
  4177da:	call   0x417360
  4177df:	mov    edx,DWORD PTR [rcx]
  4177e1:	mov    rdi,r13
  4177e4:	mov    r10,rdx
  4177e7:	or     r10,r14
  4177ea:	test   edx,edx
  4177ec:	cmovs  rdx,r10
  4177f0:	sub    rdx,rax
  4177f3:	lea    rax,[r8+rdx*1]
  4177f7:	mov    r8d,0x4
  4177fd:	mov    rdx,r13
  417800:	mov    QWORD PTR [rbp-0x30],rax
  417804:	call   0x4173d0
  417809:	jmp    0x41768b
  41780e:	add    rbx,QWORD PTR [rip+0x161f3]        # 0x42da08
  417815:	lea    rcx,[rip+0xfa14]        # 0x427230
  41781c:	mov    rax,QWORD PTR [rbx+0x10]
  417820:	mov    r8,QWORD PTR [rbx+0x8]
  417824:	mov    edx,DWORD PTR [rax+0x8]
  417827:	call   0x417360
  41782c:	lea    rcx,[rip+0xfa5d]        # 0x427290
  417833:	call   0x417360
  417838:	nop
  417839:	nop
  41783a:	nop
  41783b:	nop
  41783c:	nop
  41783d:	nop
  41783e:	nop
  41783f:	nop
  417840:	sub    rsp,0x28
  417844:	mov    eax,DWORD PTR [rcx]
  417846:	cmp    eax,0xc0000091
  41784b:	ja     0x4178b0
  41784d:	cmp    eax,0xc000008d
  417852:	jae    0x4178cf
  417854:	cmp    eax,0xc0000008
  417859:	je     0x417970
  41785f:	ja     0x417940
  417865:	cmp    eax,0x80000002
  41786a:	je     0x417970
  417870:	cmp    eax,0xc0000005
  417875:	jne    0x41794e
  41787b:	xor    edx,edx
  41787d:	mov    ecx,0xb
  417882:	call   0x41d828
  417887:	cmp    rax,0x1
  41788b:	je     0x4179d0
  417891:	test   rax,rax
  417894:	je     0x4179b0
  41789a:	mov    ecx,0xb
  41789f:	call   rax
  4178a1:	xor    eax,eax
  4178a3:	add    rsp,0x28
  4178a7:	ret    
  4178a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4178b0:	cmp    eax,0xc0000094
  4178b5:	je     0x417980
  4178bb:	ja     0x417900
  4178bd:	cmp    eax,0xc0000092
  4178c2:	je     0x417970
  4178c8:	cmp    eax,0xc0000093
  4178cd:	jne    0x41794e
  4178cf:	xor    edx,edx
  4178d1:	mov    ecx,0x8
  4178d6:	call   0x41d828
  4178db:	cmp    rax,0x1
  4178df:	mov    rdx,rax
  4178e2:	je     0x417958
  4178e4:	test   rdx,rdx
  4178e7:	mov    eax,0x1
  4178ec:	je     0x4178a3
  4178ee:	mov    ecx,0x8
  4178f3:	call   rdx
  4178f5:	xor    eax,eax
  4178f7:	add    rsp,0x28
  4178fb:	ret    
  4178fc:	nop    DWORD PTR [rax+0x0]
  417900:	cmp    eax,0xc0000095
  417905:	je     0x417970
  417907:	cmp    eax,0xc0000096
  41790c:	jne    0x41794e
  41790e:	xor    edx,edx
  417910:	mov    ecx,0x4
  417915:	call   0x41d828
  41791a:	cmp    rax,0x1
  41791e:	je     0x4179ba
  417924:	test   rax,rax
  417927:	je     0x4179b0
  41792d:	mov    ecx,0x4
  417932:	call   rax
  417934:	xor    eax,eax
  417936:	jmp    0x4178a3
  41793b:	nop    DWORD PTR [rax+rax*1+0x0]
  417940:	cmp    eax,0xc000001d
  417945:	je     0x41790e
  417947:	cmp    eax,0xc000008c
  41794c:	je     0x417970
  41794e:	mov    eax,0x1
  417953:	add    rsp,0x28
  417957:	ret    
  417958:	mov    edx,0x1
  41795d:	mov    ecx,0x8
  417962:	call   0x41d828
  417967:	call   0x417330
  41796c:	nop    DWORD PTR [rax+0x0]
  417970:	xor    eax,eax
  417972:	add    rsp,0x28
  417976:	ret    
  417977:	nop    WORD PTR [rax+rax*1+0x0]
  417980:	xor    edx,edx
  417982:	mov    ecx,0x8
  417987:	call   0x41d828
  41798c:	cmp    rax,0x1
  417990:	mov    rdx,rax
  417993:	jne    0x4178e4
  417999:	mov    edx,0x1
  41799e:	mov    ecx,0x8
  4179a3:	call   0x41d828
  4179a8:	xor    eax,eax
  4179aa:	jmp    0x4178a3
  4179af:	nop
  4179b0:	mov    eax,0x4
  4179b5:	add    rsp,0x28
  4179b9:	ret    
  4179ba:	mov    edx,0x1
  4179bf:	mov    ecx,0x4
  4179c4:	call   0x41d828
  4179c9:	xor    eax,eax
  4179cb:	jmp    0x4178a3
  4179d0:	mov    edx,0x1
  4179d5:	mov    ecx,0xb
  4179da:	call   0x41d828
  4179df:	xor    eax,eax
  4179e1:	jmp    0x4178a3
  4179e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4179f0:	push   r12
  4179f2:	push   rbp
  4179f3:	push   rdi
  4179f4:	push   rsi
  4179f5:	push   rbx
  4179f6:	sub    rsp,0x20
  4179fa:	call   0x418160
  4179ff:	mov    rbp,rax
  417a02:	mov    eax,DWORD PTR [rip+0x16040]        # 0x42da48
  417a08:	test   eax,eax
  417a0a:	jne    0x417a31
  417a0c:	test   rbp,rbp
  417a0f:	je     0x417a31
  417a11:	lea    rcx,[rip+0xf8e8]        # 0x427300
  417a18:	mov    DWORD PTR [rip+0x16026],0x1        # 0x42da48
  417a22:	call   0x417fa0
  417a27:	test   rax,rax
  417a2a:	je     0x417a40
  417a2c:	mov    eax,0x1
  417a31:	add    rsp,0x20
  417a35:	pop    rbx
  417a36:	pop    rsi
  417a37:	pop    rdi
  417a38:	pop    rbp
  417a39:	pop    r12
  417a3b:	ret    
  417a3c:	nop    DWORD PTR [rax+0x0]
  417a40:	lea    rbx,[rip+0x16139]        # 0x42db80
  417a47:	mov    ecx,0x30
  417a4c:	lea    rdx,[rip+0x1602d]        # 0x42da80
  417a53:	lea    r12,[rip+0xfffffffffffffde6]        # 0x417840
  417a5a:	xor    esi,esi
  417a5c:	mov    rdi,rbx
  417a5f:	rep stos QWORD PTR es:[rdi],rax
  417a62:	mov    rdi,rdx
  417a65:	sub    r12,rbp
  417a68:	mov    cl,0x20
  417a6a:	rep stos QWORD PTR es:[rdi],rax
  417a6d:	mov    rdi,rdx
  417a70:	jmp    0x417aa0
  417a72:	mov    BYTE PTR [rdi],0x9
  417a75:	mov    DWORD PTR [rdi+0x4],r12d
  417a79:	add    rsi,0x1
  417a7d:	mov    edx,DWORD PTR [rax+0xc]
  417a80:	add    rbx,0xc
  417a84:	mov    DWORD PTR [rbx-0xc],edx
  417a87:	add    edx,DWORD PTR [rax+0x8]
  417a8a:	mov    rax,rdi
  417a8d:	sub    rax,rbp
  417a90:	add    rdi,0x8
  417a94:	mov    DWORD PTR [rbx-0x4],eax
  417a97:	mov    DWORD PTR [rbx-0x8],edx
  417a9a:	cmp    rsi,0x20
  417a9e:	je     0x417ad5
  417aa0:	mov    rcx,rsi
  417aa3:	call   0x4180d0
  417aa8:	test   rax,rax
  417aab:	jne    0x417a72
  417aad:	test   rsi,rsi
  417ab0:	je     0x417a2c
  417ab6:	mov    edx,esi
  417ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  417ac0:	mov    r8,rbp
  417ac3:	lea    rcx,[rip+0x160b6]        # 0x42db80
  417aca:	call   QWORD PTR [rip+0x17e1c]        # 0x42f8ec
  417ad0:	jmp    0x417a2c
  417ad5:	mov    edx,0x20
  417ada:	jmp    0x417ac0
  417adc:	nop    DWORD PTR [rax+0x0]
  417ae0:	push   rbx
  417ae1:	sub    rsp,0x20
  417ae5:	mov    rdx,QWORD PTR [rcx]
  417ae8:	mov    eax,DWORD PTR [rdx]
  417aea:	mov    r8d,eax
  417aed:	and    r8d,0x20ffffff
  417af4:	cmp    r8d,0x20474343
  417afb:	je     0x417c00
  417b01:	cmp    eax,0xc0000091
  417b06:	mov    rbx,rcx
  417b09:	ja     0x417b90
  417b0f:	cmp    eax,0xc000008d
  417b14:	jae    0x417ba7
  417b1a:	cmp    eax,0xc0000008
  417b1f:	je     0x417b53
  417b21:	ja     0x417b60
  417b23:	cmp    eax,0x80000002
  417b28:	je     0x417b53
  417b2a:	cmp    eax,0xc0000005
  417b2f:	jne    0x417b72
  417b31:	xor    edx,edx
  417b33:	mov    ecx,0xb
  417b38:	call   0x41d828
  417b3d:	cmp    rax,0x1
  417b41:	je     0x417c70
  417b47:	test   rax,rax
  417b4a:	je     0x417b72
  417b4c:	mov    ecx,0xb
  417b51:	call   rax
  417b53:	mov    eax,0xffffffff
  417b58:	add    rsp,0x20
  417b5c:	pop    rbx
  417b5d:	ret    
  417b5e:	xchg   ax,ax
  417b60:	cmp    eax,0xc000001d
  417b65:	je     0x417c26
  417b6b:	cmp    eax,0xc000008c
  417b70:	je     0x417b53
  417b72:	mov    rax,QWORD PTR [rip+0x15ec7]        # 0x42da40
  417b79:	test   rax,rax
  417b7c:	je     0x417b58
  417b7e:	mov    rcx,rbx
  417b81:	add    rsp,0x20
  417b85:	pop    rbx
  417b86:	rex.W jmp rax
  417b89:	nop    DWORD PTR [rax+0x0]
  417b90:	cmp    eax,0xc0000094
  417b95:	je     0x417bd2
  417b97:	ja     0x417c10
  417b99:	cmp    eax,0xc0000092
  417b9e:	je     0x417b53
  417ba0:	cmp    eax,0xc0000093
  417ba5:	jne    0x417b72
  417ba7:	xor    edx,edx
  417ba9:	mov    ecx,0x8
  417bae:	call   0x41d828
  417bb3:	cmp    rax,0x1
  417bb7:	jne    0x417be4
  417bb9:	mov    edx,0x1
  417bbe:	mov    ecx,0x8
  417bc3:	call   0x41d828
  417bc8:	call   0x417330
  417bcd:	jmp    0x417b53
  417bd2:	xor    edx,edx
  417bd4:	mov    ecx,0x8
  417bd9:	call   0x41d828
  417bde:	cmp    rax,0x1
  417be2:	je     0x417c52
  417be4:	test   rax,rax
  417be7:	je     0x417b72
  417be9:	mov    ecx,0x8
  417bee:	call   rax
  417bf0:	mov    eax,0xffffffff
  417bf5:	jmp    0x417b58
  417bfa:	nop    WORD PTR [rax+rax*1+0x0]
  417c00:	test   BYTE PTR [rdx+0x4],0x1
  417c04:	jne    0x417b01
  417c0a:	jmp    0x417b53
  417c0f:	nop
  417c10:	cmp    eax,0xc0000095
  417c15:	je     0x417b53
  417c1b:	cmp    eax,0xc0000096
  417c20:	jne    0x417b72
  417c26:	xor    edx,edx
  417c28:	mov    ecx,0x4
  417c2d:	call   0x41d828
  417c32:	cmp    rax,0x1
  417c36:	je     0x417c84
  417c38:	test   rax,rax
  417c3b:	je     0x417b72
  417c41:	mov    ecx,0x4
  417c46:	call   rax
  417c48:	mov    eax,0xffffffff
  417c4d:	jmp    0x417b58
  417c52:	mov    edx,0x1
  417c57:	mov    ecx,0x8
  417c5c:	call   0x41d828
  417c61:	jmp    0x417b53
  417c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417c70:	mov    edx,0x1
  417c75:	mov    ecx,0xb
  417c7a:	call   0x41d828
  417c7f:	jmp    0x417b53
  417c84:	mov    edx,0x1
  417c89:	mov    ecx,0x4
  417c8e:	call   0x41d828
  417c93:	jmp    0x417b53
  417c98:	nop
  417c99:	nop
  417c9a:	nop
  417c9b:	nop
  417c9c:	nop
  417c9d:	nop
  417c9e:	nop
  417c9f:	nop
  417ca0:	push   rbp
  417ca1:	push   rdi
  417ca2:	push   rsi
  417ca3:	push   rbx
  417ca4:	sub    rsp,0x28
  417ca8:	lea    rcx,[rip+0x16071]        # 0x42dd20
  417caf:	call   QWORD PTR [rip+0x17b77]        # 0x42f82c
  417cb5:	mov    rbx,QWORD PTR [rip+0x16044]        # 0x42dd00
  417cbc:	test   rbx,rbx
  417cbf:	je     0x417cf4
  417cc1:	mov    rbp,QWORD PTR [rip+0x17c64]        # 0x42f92c
  417cc8:	mov    rdi,QWORD PTR [rip+0x17b9d]        # 0x42f86c
  417ccf:	nop
  417cd0:	mov    ecx,DWORD PTR [rbx]
  417cd2:	call   rbp
  417cd4:	mov    rsi,rax
  417cd7:	call   rdi
  417cd9:	test   eax,eax
  417cdb:	jne    0x417ceb
  417cdd:	test   rsi,rsi
  417ce0:	je     0x417ceb
  417ce2:	mov    rax,QWORD PTR [rbx+0x8]
  417ce6:	mov    rcx,rsi
  417ce9:	call   rax
  417ceb:	mov    rbx,QWORD PTR [rbx+0x10]
  417cef:	test   rbx,rbx
  417cf2:	jne    0x417cd0
  417cf4:	mov    rax,QWORD PTR [rip+0x17bc9]        # 0x42f8c4
  417cfb:	lea    rcx,[rip+0x1601e]        # 0x42dd20
  417d02:	add    rsp,0x28
  417d06:	pop    rbx
  417d07:	pop    rsi
  417d08:	pop    rdi
  417d09:	pop    rbp
  417d0a:	rex.W jmp rax
  417d0d:	nop    DWORD PTR [rax]
  417d10:	push   rdi
  417d11:	push   rsi
  417d12:	push   rbx
  417d13:	sub    rsp,0x20
  417d17:	mov    eax,DWORD PTR [rip+0x15feb]        # 0x42dd08
  417d1d:	test   eax,eax
  417d1f:	jne    0x417d30
  417d21:	add    rsp,0x20
  417d25:	pop    rbx
  417d26:	pop    rsi
  417d27:	pop    rdi
  417d28:	ret    
  417d29:	nop    DWORD PTR [rax+0x0]
  417d30:	mov    rsi,rdx
  417d33:	mov    edi,ecx
  417d35:	mov    edx,0x18
  417d3a:	mov    ecx,0x1
  417d3f:	call   0x41d908
  417d44:	test   rax,rax
  417d47:	mov    rbx,rax
  417d4a:	je     0x417d88
  417d4c:	mov    DWORD PTR [rax],edi
  417d4e:	mov    QWORD PTR [rax+0x8],rsi
  417d52:	lea    rcx,[rip+0x15fc7]        # 0x42dd20
  417d59:	call   QWORD PTR [rip+0x17acd]        # 0x42f82c
  417d5f:	mov    rax,QWORD PTR [rip+0x15f9a]        # 0x42dd00
  417d66:	lea    rcx,[rip+0x15fb3]        # 0x42dd20
  417d6d:	mov    QWORD PTR [rip+0x15f8c],rbx        # 0x42dd00
  417d74:	mov    QWORD PTR [rbx+0x10],rax
  417d78:	call   QWORD PTR [rip+0x17b46]        # 0x42f8c4
  417d7e:	xor    eax,eax
  417d80:	add    rsp,0x20
  417d84:	pop    rbx
  417d85:	pop    rsi
  417d86:	pop    rdi
  417d87:	ret    
  417d88:	mov    eax,0xffffffff
  417d8d:	jmp    0x417d21
  417d8f:	nop
  417d90:	push   rbx
  417d91:	sub    rsp,0x20
  417d95:	mov    eax,DWORD PTR [rip+0x15f6d]        # 0x42dd08
  417d9b:	test   eax,eax
  417d9d:	jne    0x417db0
  417d9f:	xor    eax,eax
  417da1:	add    rsp,0x20
  417da5:	pop    rbx
  417da6:	ret    
  417da7:	nop    WORD PTR [rax+rax*1+0x0]
  417db0:	mov    ebx,ecx
  417db2:	lea    rcx,[rip+0x15f67]        # 0x42dd20
  417db9:	call   QWORD PTR [rip+0x17a6d]        # 0x42f82c
  417dbf:	mov    rdx,QWORD PTR [rip+0x15f3a]        # 0x42dd00
  417dc6:	test   rdx,rdx
  417dc9:	je     0x417de7
  417dcb:	mov    eax,DWORD PTR [rdx]
  417dcd:	cmp    eax,ebx
  417dcf:	jne    0x417dde
  417dd1:	jmp    0x417e1f
  417dd3:	mov    r8d,DWORD PTR [rax]
  417dd6:	cmp    r8d,ebx
  417dd9:	je     0x417e00
  417ddb:	mov    rdx,rax
  417dde:	mov    rax,QWORD PTR [rdx+0x10]
  417de2:	test   rax,rax
  417de5:	jne    0x417dd3
  417de7:	lea    rcx,[rip+0x15f32]        # 0x42dd20
  417dee:	call   QWORD PTR [rip+0x17ad0]        # 0x42f8c4
  417df4:	xor    eax,eax
  417df6:	add    rsp,0x20
  417dfa:	pop    rbx
  417dfb:	ret    
  417dfc:	nop    DWORD PTR [rax+0x0]
  417e00:	mov    rcx,rax
  417e03:	mov    rax,QWORD PTR [rax+0x10]
  417e07:	mov    QWORD PTR [rdx+0x10],rax
  417e0b:	call   0x41d8a8
  417e10:	lea    rcx,[rip+0x15f09]        # 0x42dd20
  417e17:	call   QWORD PTR [rip+0x17aa7]        # 0x42f8c4
  417e1d:	jmp    0x417df4
  417e1f:	mov    rax,QWORD PTR [rdx+0x10]
  417e23:	mov    rcx,rdx
  417e26:	mov    QWORD PTR [rip+0x15ed3],rax        # 0x42dd00
  417e2d:	jmp    0x417e0b
  417e2f:	nop
  417e30:	push   rbx
  417e31:	sub    rsp,0x20
  417e35:	cmp    edx,0x1
  417e38:	je     0x417ed0
  417e3e:	jb     0x417e70
  417e40:	cmp    edx,0x2
  417e43:	je     0x417e60
  417e45:	cmp    edx,0x3
  417e48:	jne    0x417e65
  417e4a:	mov    eax,DWORD PTR [rip+0x15eb8]        # 0x42dd08
  417e50:	test   eax,eax
  417e52:	je     0x417e65
  417e54:	call   0x417ca0
  417e59:	jmp    0x417e65
  417e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  417e60:	call   0x417330
  417e65:	mov    eax,0x1
  417e6a:	add    rsp,0x20
  417e6e:	pop    rbx
  417e6f:	ret    
  417e70:	mov    eax,DWORD PTR [rip+0x15e92]        # 0x42dd08
  417e76:	test   eax,eax
  417e78:	jne    0x417f00
  417e7e:	mov    eax,DWORD PTR [rip+0x15e84]        # 0x42dd08
  417e84:	cmp    eax,0x1
  417e87:	jne    0x417e65
  417e89:	mov    rcx,QWORD PTR [rip+0x15e70]        # 0x42dd00
  417e90:	test   rcx,rcx
  417e93:	je     0x417ea6
  417e95:	mov    rbx,QWORD PTR [rcx+0x10]
  417e99:	call   0x41d8a8
  417e9e:	test   rbx,rbx
  417ea1:	mov    rcx,rbx
  417ea4:	jne    0x417e95
  417ea6:	lea    rcx,[rip+0x15e73]        # 0x42dd20
  417ead:	mov    QWORD PTR [rip+0x15e48],0x0        # 0x42dd00
  417eb8:	mov    DWORD PTR [rip+0x15e46],0x0        # 0x42dd08
  417ec2:	call   QWORD PTR [rip+0x1795c]        # 0x42f824
  417ec8:	jmp    0x417e65
  417eca:	nop    WORD PTR [rax+rax*1+0x0]
  417ed0:	mov    eax,DWORD PTR [rip+0x15e32]        # 0x42dd08
  417ed6:	test   eax,eax
  417ed8:	je     0x417ef0
  417eda:	mov    eax,0x1
  417edf:	mov    DWORD PTR [rip+0x15e1f],0x1        # 0x42dd08
  417ee9:	add    rsp,0x20
  417eed:	pop    rbx
  417eee:	ret    
  417eef:	nop
  417ef0:	lea    rcx,[rip+0x15e29]        # 0x42dd20
  417ef7:	call   QWORD PTR [rip+0x179b7]        # 0x42f8b4
  417efd:	jmp    0x417eda
  417eff:	nop
  417f00:	call   0x417ca0
  417f05:	jmp    0x417e7e
  417f0a:	nop
  417f0b:	nop
  417f0c:	nop
  417f0d:	nop
  417f0e:	nop
  417f0f:	nop
  417f10:	movsxd rax,DWORD PTR [rcx+0x3c]
  417f14:	add    rcx,rax
  417f17:	xor    eax,eax
  417f19:	cmp    DWORD PTR [rcx],0x4550
  417f1f:	je     0x417f23
  417f21:	repz ret 
  417f23:	xor    eax,eax
  417f25:	cmp    WORD PTR [rcx+0x18],0x20b
  417f2b:	sete   al
  417f2e:	ret    
  417f2f:	nop
  417f30:	cmp    WORD PTR [rcx],0x5a4d
  417f35:	je     0x417f40
  417f37:	xor    eax,eax
  417f39:	ret    
  417f3a:	nop    WORD PTR [rax+rax*1+0x0]
  417f40:	jmp    0x417f10
  417f42:	nop    DWORD PTR [rax+0x0]
  417f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417f50:	movsxd rax,DWORD PTR [rcx+0x3c]
  417f54:	add    rcx,rax
  417f57:	movzx  eax,WORD PTR [rcx+0x14]
  417f5b:	lea    rax,[rcx+rax*1+0x18]
  417f60:	movzx  ecx,WORD PTR [rcx+0x6]
  417f64:	test   ecx,ecx
  417f66:	je     0x417f91
  417f68:	sub    ecx,0x1
  417f6b:	lea    rcx,[rcx+rcx*4]
  417f6f:	lea    r9,[rax+rcx*8+0x28]
  417f74:	mov    r8d,DWORD PTR [rax+0xc]
  417f78:	cmp    r8,rdx
  417f7b:	mov    rcx,r8
  417f7e:	ja     0x417f88
  417f80:	add    ecx,DWORD PTR [rax+0x8]
  417f83:	cmp    rdx,rcx
  417f86:	jb     0x417f93
  417f88:	add    rax,0x28
  417f8c:	cmp    rax,r9
  417f8f:	jne    0x417f74
  417f91:	xor    eax,eax
  417f93:	repz ret 
  417f95:	nop
  417f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417fa0:	push   rdi
  417fa1:	push   rsi
  417fa2:	push   rbx
  417fa3:	sub    rsp,0x20
  417fa7:	mov    rsi,rcx
  417faa:	call   0x41d7f8
  417faf:	cmp    rax,0x8
  417fb3:	ja     0x417fd0
  417fb5:	mov    rbx,QWORD PTR [rip+0xf8b4]        # 0x427870
  417fbc:	xor    edi,edi
  417fbe:	cmp    WORD PTR [rbx],0x5a4d
  417fc3:	je     0x417fe0
  417fc5:	mov    rax,rdi
  417fc8:	add    rsp,0x20
  417fcc:	pop    rbx
  417fcd:	pop    rsi
  417fce:	pop    rdi
  417fcf:	ret    
  417fd0:	xor    edi,edi
  417fd2:	mov    rax,rdi
  417fd5:	add    rsp,0x20
  417fd9:	pop    rbx
  417fda:	pop    rsi
  417fdb:	pop    rdi
  417fdc:	ret    
  417fdd:	nop    DWORD PTR [rax]
  417fe0:	mov    rcx,rbx
  417fe3:	call   0x417f10
  417fe8:	test   eax,eax
  417fea:	je     0x417fc5
  417fec:	movsxd rdx,DWORD PTR [rbx+0x3c]
  417ff0:	add    rdx,rbx
  417ff3:	movzx  eax,WORD PTR [rdx+0x14]
  417ff7:	lea    rbx,[rdx+rax*1+0x18]
  417ffc:	movzx  eax,WORD PTR [rdx+0x6]
  418000:	test   eax,eax
  418002:	je     0x417fc5
  418004:	sub    eax,0x1
  418007:	lea    rax,[rax+rax*4]
  41800b:	lea    rdi,[rbx+rax*8+0x28]
  418010:	jmp    0x41801b
  418012:	add    rbx,0x28
  418016:	cmp    rbx,rdi
  418019:	je     0x417fd0
  41801b:	mov    r8d,0x8
  418021:	mov    rdx,rsi
  418024:	mov    rcx,rbx
  418027:	call   0x41d7f0
  41802c:	test   eax,eax
  41802e:	jne    0x418012
  418030:	mov    rdi,rbx
  418033:	mov    rax,rdi
  418036:	add    rsp,0x20
  41803a:	pop    rbx
  41803b:	pop    rsi
  41803c:	pop    rdi
  41803d:	ret    
  41803e:	xchg   ax,ax
  418040:	push   rsi
  418041:	push   rbx
  418042:	sub    rsp,0x28
  418046:	mov    rbx,QWORD PTR [rip+0xf823]        # 0x427870
  41804d:	cmp    WORD PTR [rbx],0x5a4d
  418052:	je     0x418060
  418054:	xor    eax,eax
  418056:	add    rsp,0x28
  41805a:	pop    rbx
  41805b:	pop    rsi
  41805c:	ret    
  41805d:	nop    DWORD PTR [rax]
  418060:	mov    rsi,rcx
  418063:	mov    rcx,rbx
  418066:	call   0x417f10
  41806b:	test   eax,eax
  41806d:	je     0x418054
  41806f:	sub    rsi,rbx
  418072:	mov    rcx,rbx
  418075:	mov    rdx,rsi
  418078:	add    rsp,0x28
  41807c:	pop    rbx
  41807d:	pop    rsi
  41807e:	jmp    0x417f50
  418083:	nop    DWORD PTR [rax]
  418086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418090:	push   rbx
  418091:	sub    rsp,0x20
  418095:	mov    rbx,QWORD PTR [rip+0xf7d4]        # 0x427870
  41809c:	xor    eax,eax
  41809e:	cmp    WORD PTR [rbx],0x5a4d
  4180a3:	je     0x4180b0
  4180a5:	add    rsp,0x20
  4180a9:	pop    rbx
  4180aa:	ret    
  4180ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4180b0:	mov    rcx,rbx
  4180b3:	call   0x417f10
  4180b8:	test   eax,eax
  4180ba:	je     0x4180a5
  4180bc:	movsxd rax,DWORD PTR [rbx+0x3c]
  4180c0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4180c5:	add    rsp,0x20
  4180c9:	pop    rbx
  4180ca:	ret    
  4180cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4180d0:	push   rdi
  4180d1:	push   rsi
  4180d2:	push   rbx
  4180d3:	sub    rsp,0x20
  4180d7:	mov    rsi,QWORD PTR [rip+0xf792]        # 0x427870
  4180de:	xor    edi,edi
  4180e0:	mov    rbx,rcx
  4180e3:	cmp    WORD PTR [rsi],0x5a4d
  4180e8:	je     0x4180f5
  4180ea:	mov    rax,rdi
  4180ed:	add    rsp,0x20
  4180f1:	pop    rbx
  4180f2:	pop    rsi
  4180f3:	pop    rdi
  4180f4:	ret    
  4180f5:	mov    rcx,rsi
  4180f8:	call   0x417f10
  4180fd:	test   eax,eax
  4180ff:	je     0x4180ea
  418101:	movsxd rax,DWORD PTR [rsi+0x3c]
  418105:	add    rsi,rax
  418108:	movzx  eax,WORD PTR [rsi+0x14]
  41810c:	lea    rdx,[rsi+rax*1+0x18]
  418111:	movzx  eax,WORD PTR [rsi+0x6]
  418115:	test   eax,eax
  418117:	je     0x4180ea
  418119:	sub    eax,0x1
  41811c:	lea    rax,[rax+rax*4]
  418120:	lea    rax,[rdx+rax*8+0x28]
  418125:	test   BYTE PTR [rdx+0x27],0x20
  418129:	je     0x418134
  41812b:	test   rbx,rbx
  41812e:	je     0x418150
  418130:	sub    rbx,0x1
  418134:	add    rdx,0x28
  418138:	cmp    rdx,rax
  41813b:	jne    0x418125
  41813d:	xor    edi,edi
  41813f:	mov    rax,rdi
  418142:	add    rsp,0x20
  418146:	pop    rbx
  418147:	pop    rsi
  418148:	pop    rdi
  418149:	ret    
  41814a:	nop    WORD PTR [rax+rax*1+0x0]
  418150:	mov    rdi,rdx
  418153:	mov    rax,rdi
  418156:	add    rsp,0x20
  41815a:	pop    rbx
  41815b:	pop    rsi
  41815c:	pop    rdi
  41815d:	ret    
  41815e:	xchg   ax,ax
  418160:	push   rsi
  418161:	push   rbx
  418162:	sub    rsp,0x28
  418166:	mov    rsi,QWORD PTR [rip+0xf703]        # 0x427870
  41816d:	xor    ebx,ebx
  41816f:	cmp    WORD PTR [rsi],0x5a4d
  418174:	je     0x418180
  418176:	mov    rax,rbx
  418179:	add    rsp,0x28
  41817d:	pop    rbx
  41817e:	pop    rsi
  41817f:	ret    
  418180:	mov    rcx,rsi
  418183:	call   0x417f10
  418188:	test   eax,eax
  41818a:	cmovne rbx,rsi
  41818e:	mov    rax,rbx
  418191:	add    rsp,0x28
  418195:	pop    rbx
  418196:	pop    rsi
  418197:	ret    
  418198:	nop    DWORD PTR [rax+rax*1+0x0]
  4181a0:	push   rsi
  4181a1:	push   rbx
  4181a2:	sub    rsp,0x28
  4181a6:	mov    rbx,QWORD PTR [rip+0xf6c3]        # 0x427870
  4181ad:	xor    eax,eax
  4181af:	cmp    WORD PTR [rbx],0x5a4d
  4181b4:	je     0x4181c0
  4181b6:	add    rsp,0x28
  4181ba:	pop    rbx
  4181bb:	pop    rsi
  4181bc:	ret    
  4181bd:	nop    DWORD PTR [rax]
  4181c0:	mov    rsi,rcx
  4181c3:	mov    rcx,rbx
  4181c6:	call   0x417f10
  4181cb:	test   eax,eax
  4181cd:	je     0x4181b6
  4181cf:	sub    rsi,rbx
  4181d2:	mov    rcx,rbx
  4181d5:	mov    rdx,rsi
  4181d8:	call   0x417f50
  4181dd:	test   rax,rax
  4181e0:	je     0x4181f1
  4181e2:	mov    eax,DWORD PTR [rax+0x24]
  4181e5:	not    eax
  4181e7:	shr    eax,0x1f
  4181ea:	add    rsp,0x28
  4181ee:	pop    rbx
  4181ef:	pop    rsi
  4181f0:	ret    
  4181f1:	xor    eax,eax
  4181f3:	jmp    0x4181b6
  4181f5:	nop
  4181f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418200:	push   rbp
  418201:	push   rdi
  418202:	push   rsi
  418203:	push   rbx
  418204:	sub    rsp,0x28
  418208:	mov    rdi,QWORD PTR [rip+0xf661]        # 0x427870
  41820f:	xor    ebp,ebp
  418211:	mov    esi,ecx
  418213:	cmp    WORD PTR [rdi],0x5a4d
  418218:	je     0x418230
  41821a:	mov    rax,rbp
  41821d:	add    rsp,0x28
  418221:	pop    rbx
  418222:	pop    rsi
  418223:	pop    rdi
  418224:	pop    rbp
  418225:	ret    
  418226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418230:	mov    rcx,rdi
  418233:	call   0x417f10
  418238:	test   eax,eax
  41823a:	je     0x41821a
  41823c:	movsxd rax,DWORD PTR [rdi+0x3c]
  418240:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  418247:	test   edx,edx
  418249:	je     0x41821a
  41824b:	mov    ebx,edx
  41824d:	mov    rcx,rdi
  418250:	mov    rdx,rbx
  418253:	call   0x417f50
  418258:	test   rax,rax
  41825b:	je     0x41821a
  41825d:	add    rbx,rdi
  418260:	mov    rdx,rbx
  418263:	jne    0x418277
  418265:	jmp    0x41821a
  418267:	nop    WORD PTR [rax+rax*1+0x0]
  418270:	sub    esi,0x1
  418273:	add    rdx,0x14
  418277:	mov    ecx,DWORD PTR [rdx+0x4]
  41827a:	test   ecx,ecx
  41827c:	jne    0x418285
  41827e:	mov    eax,DWORD PTR [rdx+0xc]
  418281:	test   eax,eax
  418283:	je     0x4182a0
  418285:	test   esi,esi
  418287:	jg     0x418270
  418289:	mov    ebp,DWORD PTR [rdx+0xc]
  41828c:	add    rbp,rdi
  41828f:	mov    rax,rbp
  418292:	add    rsp,0x28
  418296:	pop    rbx
  418297:	pop    rsi
  418298:	pop    rdi
  418299:	pop    rbp
  41829a:	ret    
  41829b:	nop    DWORD PTR [rax+rax*1+0x0]
  4182a0:	xor    ebp,ebp
  4182a2:	mov    rax,rbp
  4182a5:	add    rsp,0x28
  4182a9:	pop    rbx
  4182aa:	pop    rsi
  4182ab:	pop    rdi
  4182ac:	pop    rbp
  4182ad:	ret    
  4182ae:	nop
  4182af:	nop
  4182b0:	push   rcx
  4182b1:	push   rax
  4182b2:	cmp    rax,0x1000
  4182b8:	lea    rcx,[rsp+0x18]
  4182bd:	jb     0x4182d8
  4182bf:	sub    rcx,0x1000
  4182c6:	or     QWORD PTR [rcx],0x0
  4182ca:	sub    rax,0x1000
  4182d0:	cmp    rax,0x1000
  4182d6:	ja     0x4182bf
  4182d8:	sub    rcx,rax
  4182db:	or     QWORD PTR [rcx],0x0
  4182df:	pop    rax
  4182e0:	pop    rcx
  4182e1:	ret    
  4182e2:	nop
  4182e3:	nop
  4182e4:	nop
  4182e5:	nop
  4182e6:	nop
  4182e7:	nop
  4182e8:	nop
  4182e9:	nop
  4182ea:	nop
  4182eb:	nop
  4182ec:	nop
  4182ed:	nop
  4182ee:	nop
  4182ef:	nop
  4182f0:	push   rdi
  4182f1:	push   rsi
  4182f2:	push   rbx
  4182f3:	sub    rsp,0x130
  4182fa:	mov    rbx,rcx
  4182fd:	call   0x41d9a0
  418302:	test   rbx,rbx
  418305:	mov    DWORD PTR [rax],0x0
  41830b:	je     0x4184be
  418311:	cmp    BYTE PTR [rbx],0x0
  418314:	je     0x418480
  41831a:	mov    rcx,rbx
  41831d:	call   QWORD PTR [rip+0x17539]        # 0x42f85c
  418323:	cmp    eax,0xffffffff
  418326:	je     0x4184a0
  41832c:	test   al,0x10
  41832e:	je     0x418480
  418334:	lea    rdi,[rsp+0x20]
  418339:	mov    rdx,rbx
  41833c:	mov    r8d,0x104
  418342:	mov    rcx,rdi
  418345:	mov    rbx,rdi
  418348:	call   0x41d978
  41834d:	mov    r8d,DWORD PTR [rbx]
  418350:	add    rbx,0x4
  418354:	lea    eax,[r8-0x1010101]
  41835b:	not    r8d
  41835e:	and    eax,r8d
  418361:	and    eax,0x80808080
  418366:	je     0x41834d
  418368:	mov    edx,eax
  41836a:	shr    edx,0x10
  41836d:	test   eax,0x8080
  418372:	cmove  eax,edx
  418375:	lea    rdx,[rbx+0x2]
  418379:	cmove  rbx,rdx
  41837d:	add    al,al
  41837f:	sbb    rbx,0x3
  418383:	sub    rbx,rdi
  418386:	lea    rcx,[rbx+0x24b]
  41838d:	call   0x41d870
  418392:	test   rax,rax
  418395:	mov    rsi,rax
  418398:	je     0x4184af
  41839e:	lea    r9,[rax+0x244]
  4183a5:	lea    r8,[rbx+0x1]
  4183a9:	mov    rdx,rdi
  4183ac:	mov    rcx,r9
  4183af:	call   0x41d860
  4183b4:	cmp    BYTE PTR [rsi+0x244],0x0
  4183bb:	mov    r9,rax
  4183be:	je     0x4183e0
  4183c0:	movzx  eax,BYTE PTR [rsi+rbx*1+0x243]
  4183c8:	cmp    al,0x2f
  4183ca:	je     0x4183e0
  4183cc:	cmp    al,0x5c
  4183ce:	je     0x4183e0
  4183d0:	mov    r8d,0x5c
  4183d6:	mov    WORD PTR [r9+rbx*1],r8w
  4183db:	nop    DWORD PTR [rax+rax*1+0x0]
  4183e0:	mov    rcx,r9
  4183e3:	mov    eax,DWORD PTR [rcx]
  4183e5:	add    rcx,0x4
  4183e9:	lea    edx,[rax-0x1010101]
  4183ef:	not    eax
  4183f1:	and    edx,eax
  4183f3:	and    edx,0x80808080
  4183f9:	je     0x4183e3
  4183fb:	mov    eax,edx
  4183fd:	shr    eax,0x10
  418400:	test   edx,0x8080
  418406:	cmove  edx,eax
  418409:	lea    rax,[rcx+0x2]
  41840d:	cmove  rcx,rax
  418411:	add    dl,dl
  418413:	mov    eax,0x2a
  418418:	sbb    rcx,0x3
  41841c:	xor    edx,edx
  41841e:	mov    WORD PTR [rcx],ax
  418421:	mov    WORD PTR [rsi+0x12c],dx
  418428:	lea    rdx,[rsi+0x130]
  41842f:	xor    ecx,ecx
  418431:	xor    eax,eax
  418433:	mov    QWORD PTR [rsi+0x238],0xffffffffffffffff
  41843e:	mov    WORD PTR [rsi+0x12e],cx
  418445:	mov    rdi,rdx
  418448:	mov    ecx,0x20
  41844d:	mov    DWORD PTR [rsi+0x240],0x0
  418457:	mov    DWORD PTR [rsi+0x128],0x0
  418461:	rep stos QWORD PTR es:[rdi],rax
  418464:	mov    rax,rsi
  418467:	mov    DWORD PTR [rdi],0x0
  41846d:	add    rsp,0x130
  418474:	pop    rbx
  418475:	pop    rsi
  418476:	pop    rdi
  418477:	ret    
  418478:	nop    DWORD PTR [rax+rax*1+0x0]
  418480:	call   0x41d9a0
  418485:	mov    DWORD PTR [rax],0x14
  41848b:	xor    eax,eax
  41848d:	add    rsp,0x130
  418494:	pop    rbx
  418495:	pop    rsi
  418496:	pop    rdi
  418497:	ret    
  418498:	nop    DWORD PTR [rax+rax*1+0x0]
  4184a0:	call   0x41d9a0
  4184a5:	mov    DWORD PTR [rax],0x2
  4184ab:	xor    eax,eax
  4184ad:	jmp    0x41846d
  4184af:	call   0x41d9a0
  4184b4:	mov    DWORD PTR [rax],0xc
  4184ba:	xor    eax,eax
  4184bc:	jmp    0x41846d
  4184be:	call   0x41d9a0
  4184c3:	mov    DWORD PTR [rax],0xe
  4184c9:	xor    eax,eax
  4184cb:	jmp    0x41846d
  4184cd:	nop    DWORD PTR [rax]
  4184d0:	push   rbp
  4184d1:	push   rdi
  4184d2:	push   rsi
  4184d3:	push   rbx
  4184d4:	sub    rsp,0x158
  4184db:	mov    rbx,rcx
  4184de:	call   0x41d9a0
  4184e3:	test   rbx,rbx
  4184e6:	mov    DWORD PTR [rax],0x0
  4184ec:	je     0x4186dd
  4184f2:	mov    eax,DWORD PTR [rbx+0x240]
  4184f8:	test   eax,eax
  4184fa:	js     0x41867f
  418500:	lea    rdi,[rsp+0x20]
  418505:	je     0x4185b4
  41850b:	mov    rcx,QWORD PTR [rbx+0x238]
  418512:	mov    rdx,rdi
  418515:	call   0x41d780
  41851a:	cmp    eax,0xffffffff
  41851d:	mov    ebp,eax
  41851f:	je     0x418625
  418525:	mov    eax,DWORD PTR [rsp+0x20]
  418529:	lea    rsi,[rbx+0x24]
  41852d:	lea    rdx,[rdi+0x28]
  418531:	mov    r8d,0x104
  418537:	mov    rcx,rsi
  41853a:	mov    DWORD PTR [rbx],eax
  41853c:	mov    rax,QWORD PTR [rsp+0x28]
  418541:	mov    QWORD PTR [rbx+0x8],rax
  418545:	mov    rax,QWORD PTR [rsp+0x30]
  41854a:	mov    QWORD PTR [rbx+0x10],rax
  41854e:	mov    rax,QWORD PTR [rsp+0x38]
  418553:	mov    QWORD PTR [rbx+0x18],rax
  418557:	mov    rax,QWORD PTR [rsp+0x40]
  41855c:	mov    DWORD PTR [rbx+0x20],eax
  41855f:	call   0x41d7e8
  418564:	test   ebp,ebp
  418566:	jne    0x418653
  41856c:	mov    eax,DWORD PTR [rbx+0x240]
  418572:	add    eax,0x1
  418575:	test   eax,eax
  418577:	mov    DWORD PTR [rbx+0x240],eax
  41857d:	jle    0x41867f
  418583:	mov    rcx,rsi
  418586:	call   0x41d7f8
  41858b:	lea    rcx,[rbx+0x130]
  418592:	mov    WORD PTR [rbx+0x12e],ax
  418599:	mov    rdx,rsi
  41859c:	call   0x41d810
  4185a1:	lea    rax,[rbx+0x128]
  4185a8:	add    rsp,0x158
  4185af:	pop    rbx
  4185b0:	pop    rsi
  4185b1:	pop    rdi
  4185b2:	pop    rbp
  4185b3:	ret    
  4185b4:	lea    rcx,[rbx+0x244]
  4185bb:	mov    rdx,rdi
  4185be:	call   0x41d988
  4185c3:	cmp    rax,0xffffffffffffffff
  4185c7:	mov    rbp,rax
  4185ca:	je     0x418690
  4185d0:	mov    eax,DWORD PTR [rsp+0x20]
  4185d4:	lea    rsi,[rbx+0x24]
  4185d8:	lea    rdx,[rdi+0x28]
  4185dc:	mov    r8d,0x104
  4185e2:	mov    rcx,rsi
  4185e5:	mov    DWORD PTR [rbx],eax
  4185e7:	mov    rax,QWORD PTR [rsp+0x28]
  4185ec:	mov    QWORD PTR [rbx+0x8],rax
  4185f0:	mov    rax,QWORD PTR [rsp+0x30]
  4185f5:	mov    QWORD PTR [rbx+0x10],rax
  4185f9:	mov    rax,QWORD PTR [rsp+0x38]
  4185fe:	mov    QWORD PTR [rbx+0x18],rax
  418602:	mov    rax,QWORD PTR [rsp+0x40]
  418607:	mov    DWORD PTR [rbx+0x20],eax
  41860a:	call   0x41d7e8
  41860f:	mov    QWORD PTR [rbx+0x238],rbp
  418616:	mov    DWORD PTR [rbx+0x240],0x1
  418620:	jmp    0x418583
  418625:	lea    rdi,[rbx+0x8]
  418629:	mov    rcx,rbx
  41862c:	xor    eax,eax
  41862e:	mov    QWORD PTR [rbx],0x0
  418635:	mov    QWORD PTR [rbx+0x120],0x0
  418640:	and    rdi,0xfffffffffffffff8
  418644:	sub    rcx,rdi
  418647:	add    ecx,0x128
  41864d:	shr    ecx,0x3
  418650:	rep stos QWORD PTR es:[rdi],rax
  418653:	call   QWORD PTR [rip+0x17213]        # 0x42f86c
  418659:	cmp    eax,0x12
  41865c:	je     0x4186d0
  41865e:	mov    rcx,QWORD PTR [rbx+0x238]
  418665:	call   0x41d990
  41866a:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  418675:	mov    DWORD PTR [rbx+0x240],0xffffffff
  41867f:	xor    eax,eax
  418681:	add    rsp,0x158
  418688:	pop    rbx
  418689:	pop    rsi
  41868a:	pop    rdi
  41868b:	pop    rbp
  41868c:	ret    
  41868d:	nop    DWORD PTR [rax]
  418690:	lea    rdi,[rbx+0x8]
  418694:	mov    rcx,rbx
  418697:	xor    eax,eax
  418699:	mov    QWORD PTR [rbx],0x0
  4186a0:	mov    QWORD PTR [rbx+0x120],0x0
  4186ab:	and    rdi,0xfffffffffffffff8
  4186af:	sub    rcx,rdi
  4186b2:	add    ecx,0x128
  4186b8:	shr    ecx,0x3
  4186bb:	rep stos QWORD PTR es:[rdi],rax
  4186be:	mov    QWORD PTR [rbx+0x238],rbp
  4186c5:	mov    DWORD PTR [rbx+0x240],ebp
  4186cb:	xor    eax,eax
  4186cd:	jmp    0x418681
  4186cf:	nop
  4186d0:	call   0x41d9a0
  4186d5:	mov    DWORD PTR [rax],0x0
  4186db:	jmp    0x41865e
  4186dd:	call   0x41d9a0
  4186e2:	mov    DWORD PTR [rax],0xe
  4186e8:	xor    eax,eax
  4186ea:	jmp    0x4185a8
  4186ef:	nop
  4186f0:	push   rsi
  4186f1:	push   rbx
  4186f2:	sub    rsp,0x28
  4186f6:	mov    rsi,rcx
  4186f9:	call   0x41d9a0
  4186fe:	test   rsi,rsi
  418701:	mov    DWORD PTR [rax],0x0
  418707:	je     0x418730
  418709:	mov    rcx,QWORD PTR [rsi+0x238]
  418710:	xor    ebx,ebx
  418712:	cmp    rcx,0xffffffffffffffff
  418716:	je     0x41871f
  418718:	call   0x41d990
  41871d:	mov    ebx,eax
  41871f:	mov    rcx,rsi
  418722:	call   0x41d8a8
  418727:	mov    eax,ebx
  418729:	add    rsp,0x28
  41872d:	pop    rbx
  41872e:	pop    rsi
  41872f:	ret    
  418730:	call   0x41d9a0
  418735:	mov    DWORD PTR [rax],0xe
  41873b:	mov    eax,0xffffffff
  418740:	jmp    0x418729
  418742:	nop    DWORD PTR [rax+0x0]
  418746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418750:	push   rbx
  418751:	sub    rsp,0x20
  418755:	mov    rbx,rcx
  418758:	call   0x41d9a0
  41875d:	test   rbx,rbx
  418760:	mov    DWORD PTR [rax],0x0
  418766:	je     0x418795
  418768:	mov    rcx,QWORD PTR [rbx+0x238]
  41876f:	cmp    rcx,0xffffffffffffffff
  418773:	je     0x41877a
  418775:	call   0x41d990
  41877a:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  418785:	mov    DWORD PTR [rbx+0x240],0x0
  41878f:	add    rsp,0x20
  418793:	pop    rbx
  418794:	ret    
  418795:	call   0x41d9a0
  41879a:	mov    DWORD PTR [rax],0xe
  4187a0:	jmp    0x41878f
  4187a2:	nop    DWORD PTR [rax+0x0]
  4187a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4187b0:	push   rbx
  4187b1:	sub    rsp,0x20
  4187b5:	mov    rbx,rcx
  4187b8:	call   0x41d9a0
  4187bd:	test   rbx,rbx
  4187c0:	mov    DWORD PTR [rax],0x0
  4187c6:	je     0x4187d4
  4187c8:	mov    eax,DWORD PTR [rbx+0x240]
  4187ce:	add    rsp,0x20
  4187d2:	pop    rbx
  4187d3:	ret    
  4187d4:	call   0x41d9a0
  4187d9:	mov    DWORD PTR [rax],0xe
  4187df:	mov    eax,0xffffffff
  4187e4:	jmp    0x4187ce
  4187e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4187f0:	push   rsi
  4187f1:	push   rbx
  4187f2:	sub    rsp,0x28
  4187f6:	mov    rbx,rcx
  4187f9:	mov    esi,edx
  4187fb:	call   0x41d9a0
  418800:	test   rbx,rbx
  418803:	mov    DWORD PTR [rax],0x0
  418809:	je     0x41887d
  41880b:	cmp    esi,0xffffffff
  41880e:	jl     0x418870
  418810:	je     0x418840
  418812:	mov    rcx,rbx
  418815:	call   0x418750
  41881a:	jmp    0x41882d
  41881c:	nop    DWORD PTR [rax+0x0]
  418820:	mov    rcx,rbx
  418823:	call   0x4184d0
  418828:	test   rax,rax
  41882b:	je     0x418867
  41882d:	cmp    esi,DWORD PTR [rbx+0x240]
  418833:	jg     0x418820
  418835:	add    rsp,0x28
  418839:	pop    rbx
  41883a:	pop    rsi
  41883b:	ret    
  41883c:	nop    DWORD PTR [rax+0x0]
  418840:	mov    rcx,QWORD PTR [rbx+0x238]
  418847:	cmp    rcx,0xffffffffffffffff
  41884b:	je     0x418852
  41884d:	call   0x41d990
  418852:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  41885d:	mov    DWORD PTR [rbx+0x240],0xffffffff
  418867:	add    rsp,0x28
  41886b:	pop    rbx
  41886c:	pop    rsi
  41886d:	ret    
  41886e:	xchg   ax,ax
  418870:	call   0x41d9a0
  418875:	mov    DWORD PTR [rax],0x16
  41887b:	jmp    0x418867
  41887d:	call   0x41d9a0
  418882:	mov    DWORD PTR [rax],0xe
  418888:	jmp    0x418867
  41888a:	nop
  41888b:	nop
  41888c:	nop
  41888d:	nop
  41888e:	nop
  41888f:	nop
  418890:	test   rdx,rdx
  418893:	mov    r8,rcx
  418896:	je     0x4188c2
  418898:	cmp    BYTE PTR [rcx],0x0
  41889b:	jne    0x4188a5
  41889d:	jmp    0x4188c2
  41889f:	nop
  4188a0:	cmp    BYTE PTR [rcx],0x0
  4188a3:	je     0x4188c0
  4188a5:	add    rcx,0x1
  4188a9:	mov    rax,rcx
  4188ac:	sub    rax,r8
  4188af:	cmp    rax,rdx
  4188b2:	jb     0x4188a0
  4188b4:	repz ret 
  4188b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4188c0:	repz ret 
  4188c2:	xor    eax,eax
  4188c4:	ret    
  4188c5:	nop
  4188c6:	nop
  4188c7:	nop
  4188c8:	nop
  4188c9:	nop
  4188ca:	nop
  4188cb:	nop
  4188cc:	nop
  4188cd:	nop
  4188ce:	nop
  4188cf:	nop
  4188d0:	push   r12
  4188d2:	push   rbp
  4188d3:	push   rdi
  4188d4:	push   rsi
  4188d5:	push   rbx
  4188d6:	sub    rsp,0x250
  4188dd:	mov    rbx,rdx
  4188e0:	mov    rsi,rcx
  4188e3:	mov    ecx,0x4000
  4188e8:	mov    r12d,r8d
  4188eb:	call   0x41d870
  4188f0:	test   rbx,rbx
  4188f3:	mov    rbp,rax
  4188f6:	je     0x4189c0
  4188fc:	cmp    WORD PTR [rbx],0x0
  418900:	lea    rax,[rip+0xea09]        # 0x427310
  418907:	cmove  rbx,rax
  41890b:	test   rsi,rsi
  41890e:	je     0x4189b1
  418914:	cmp    WORD PTR [rsi],0x0
  418918:	lea    rax,[rip+0xea05]        # 0x427324
  41891f:	cmove  rsi,rax
  418923:	lea    rdi,[rsp+0x40]
  418928:	xor    ecx,ecx
  41892a:	mov    r8d,0x104
  418930:	mov    rdx,rdi
  418933:	call   QWORD PTR [rip+0x16f3b]        # 0x42f874
  418939:	test   eax,eax
  41893b:	je     0x4189a0
  41893d:	lea    r8,[rip+0xe9e4]        # 0x427328
  418944:	mov    QWORD PTR [rsp+0x30],rsi
  418949:	mov    DWORD PTR [rsp+0x28],r12d
  41894e:	mov    QWORD PTR [rsp+0x20],rbx
  418953:	mov    r9,rdi
  418956:	mov    edx,0x1fff
  41895b:	mov    rcx,rbp
  41895e:	call   0x41d938
  418963:	mov    rax,QWORD PTR [rip+0xf066]        # 0x4279d0
  41896a:	mov    eax,DWORD PTR [rax]
  41896c:	test   eax,eax
  41896e:	je     0x4189e5
  418970:	xor    ecx,ecx
  418972:	mov    r9d,0x12012
  418978:	lea    r8,[rip+0xea41]        # 0x4273c0
  41897f:	mov    rdx,rbp
  418982:	call   QWORD PTR [rip+0x172f4]        # 0x42fc7c
  418988:	cmp    eax,0x3
  41898b:	je     0x4189d1
  41898d:	cmp    eax,0x5
  418990:	jne    0x4189cc
  418992:	add    rsp,0x250
  418999:	pop    rbx
  41899a:	pop    rsi
  41899b:	pop    rdi
  41899c:	pop    rbp
  41899d:	pop    r12
  41899f:	ret    
  4189a0:	lea    rdx,[rip+0xe969]        # 0x427310
  4189a7:	mov    rcx,rdi
  4189aa:	call   0x41d7a0
  4189af:	jmp    0x41893d
  4189b1:	lea    rsi,[rip+0xe96c]        # 0x427324
  4189b8:	jmp    0x418923
  4189bd:	nop    DWORD PTR [rax]
  4189c0:	lea    rbx,[rip+0xe949]        # 0x427310
  4189c7:	jmp    0x41890b
  4189cc:	call   0x41d918
  4189d1:	mov    ecx,0x16
  4189d6:	call   0x41d838
  4189db:	mov    ecx,0x3
  4189e0:	call   0x41d998
  4189e5:	call   0x41d9e0
  4189ea:	lea    rdx,[rip+0xe9bf]        # 0x4273b0
  4189f1:	lea    rcx,[rax+0x60]
  4189f5:	mov    r8,rbp
  4189f8:	call   0x41d898
  4189fd:	call   0x41d918
  418a02:	nop
  418a03:	nop    DWORD PTR [rax]
  418a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418a10:	push   rbp
  418a11:	push   rdi
  418a12:	push   rsi
  418a13:	push   rbx
  418a14:	sub    rsp,0x38
  418a18:	mov    rdi,rdx
  418a1b:	mov    DWORD PTR [rsp+0x2c],r8d
  418a20:	mov    rbp,rcx
  418a23:	call   0x41d7f8
  418a28:	lea    rcx,[rax+rax*1+0x2]
  418a2d:	call   0x41d870
  418a32:	mov    rcx,rdi
  418a35:	mov    rsi,rax
  418a38:	call   0x41d7f8
  418a3d:	lea    rcx,[rax+rax*1+0x2]
  418a42:	call   0x41d870
  418a47:	movzx  r9d,BYTE PTR [rbp+0x0]
  418a4c:	xor    r10d,r10d
  418a4f:	mov    rbx,rax
  418a52:	mov    r8d,DWORD PTR [rsp+0x2c]
  418a57:	test   r9b,r9b
  418a5a:	je     0x418a77
  418a5c:	nop    DWORD PTR [rax+0x0]
  418a60:	mov    WORD PTR [rsi+r10*2],r9w
  418a65:	add    r10,0x1
  418a69:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  418a6f:	test   r9b,r9b
  418a72:	jne    0x418a60
  418a74:	add    r10,r10
  418a77:	movzx  r9d,BYTE PTR [rdi]
  418a7b:	xor    edx,edx
  418a7d:	mov    WORD PTR [rsi+r10*1],dx
  418a82:	xor    r10d,r10d
  418a85:	test   r9b,r9b
  418a88:	je     0x418aa6
  418a8a:	nop    WORD PTR [rax+rax*1+0x0]
  418a90:	mov    WORD PTR [rbx+r10*2],r9w
  418a95:	add    r10,0x1
  418a99:	movzx  r9d,BYTE PTR [rdi+r10*1]
  418a9e:	test   r9b,r9b
  418aa1:	jne    0x418a90
  418aa3:	add    r10,r10
  418aa6:	xor    eax,eax
  418aa8:	mov    rdx,rbx
  418aab:	mov    rcx,rsi
  418aae:	mov    WORD PTR [rbx+r10*1],ax
  418ab3:	call   0x4188d0
  418ab8:	mov    rcx,rsi
  418abb:	call   0x41d8a8
  418ac0:	mov    rcx,rbx
  418ac3:	add    rsp,0x38
  418ac7:	pop    rbx
  418ac8:	pop    rsi
  418ac9:	pop    rdi
  418aca:	pop    rbp
  418acb:	jmp    0x41d8a8
  418ad0:	sub    rsp,0x58
  418ad4:	test   r8d,r8d
  418ad7:	mov    eax,r8d
  418ada:	mov    WORD PTR [rsp+0x68],dx
  418adf:	jne    0x418af4
  418ae1:	cmp    dx,0xff
  418ae6:	ja     0x418b3a
  418ae8:	mov    BYTE PTR [rcx],dl
  418aea:	mov    eax,0x1
  418aef:	add    rsp,0x58
  418af3:	ret    
  418af4:	lea    rdx,[rsp+0x4c]
  418af9:	mov    DWORD PTR [rsp+0x28],r9d
  418afe:	mov    QWORD PTR [rsp+0x20],rcx
  418b03:	mov    DWORD PTR [rsp+0x4c],0x0
  418b0b:	mov    QWORD PTR [rsp+0x30],0x0
  418b14:	mov    r9d,0x1
  418b1a:	mov    QWORD PTR [rsp+0x38],rdx
  418b1f:	lea    r8,[rsp+0x68]
  418b24:	xor    edx,edx
  418b26:	mov    ecx,eax
  418b28:	call   QWORD PTR [rip+0x16e26]        # 0x42f954
  418b2e:	test   eax,eax
  418b30:	je     0x418b3a
  418b32:	mov    edx,DWORD PTR [rsp+0x4c]
  418b36:	test   edx,edx
  418b38:	je     0x418aef
  418b3a:	call   0x41d9a0
  418b3f:	mov    DWORD PTR [rax],0x2a
  418b45:	mov    eax,0xffffffff
  418b4a:	add    rsp,0x58
  418b4e:	ret    
  418b4f:	nop
  418b50:	push   rdi
  418b51:	push   rsi
  418b52:	push   rbx
  418b53:	sub    rsp,0x30
  418b57:	lea    rax,[rsp+0x20]
  418b5c:	test   rcx,rcx
  418b5f:	mov    rbx,rcx
  418b62:	mov    esi,edx
  418b64:	cmove  rbx,rax
  418b68:	mov    rax,QWORD PTR [rip+0xed21]        # 0x427890
  418b6f:	mov    rax,QWORD PTR [rax]
  418b72:	mov    edi,DWORD PTR [rax]
  418b74:	call   0x41d9f8
  418b79:	movzx  edx,si
  418b7c:	mov    r8d,eax
  418b7f:	mov    rcx,rbx
  418b82:	mov    r9d,edi
  418b85:	call   0x418ad0
  418b8a:	cdqe   
  418b8c:	add    rsp,0x30
  418b90:	pop    rbx
  418b91:	pop    rsi
  418b92:	pop    rdi
  418b93:	ret    
  418b94:	xchg   ax,ax
  418b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418ba0:	push   r14
  418ba2:	push   r13
  418ba4:	push   r12
  418ba6:	push   rbp
  418ba7:	push   rdi
  418ba8:	push   rsi
  418ba9:	push   rbx
  418baa:	sub    rsp,0x30
  418bae:	mov    r13,rdx
  418bb1:	mov    rbx,rcx
  418bb4:	mov    rdi,r8
  418bb7:	call   0x41d9f8
  418bbc:	mov    ebp,eax
  418bbe:	mov    rax,QWORD PTR [rip+0xeccb]        # 0x427890
  418bc5:	mov    r14,QWORD PTR [r13+0x0]
  418bc9:	mov    rax,QWORD PTR [rax]
  418bcc:	test   r14,r14
  418bcf:	mov    r12d,DWORD PTR [rax]
  418bd2:	je     0x418cc0
  418bd8:	xor    esi,esi
  418bda:	test   rbx,rbx
  418bdd:	je     0x418c70
  418be3:	test   rdi,rdi
  418be6:	jne    0x418c08
  418be8:	jmp    0x418c34
  418bea:	nop    WORD PTR [rax+rax*1+0x0]
  418bf0:	movsxd r10,eax
  418bf3:	add    rbx,r10
  418bf6:	add    rsi,r10
  418bf9:	cmp    BYTE PTR [rbx-0x1],0x0
  418bfd:	je     0x418c50
  418bff:	add    r14,0x2
  418c03:	cmp    rdi,rsi
  418c06:	jbe    0x418c34
  418c08:	movzx  edx,WORD PTR [r14]
  418c0c:	mov    r9d,r12d
  418c0f:	mov    r8d,ebp
  418c12:	mov    rcx,rbx
  418c15:	call   0x418ad0
  418c1a:	test   eax,eax
  418c1c:	jg     0x418bf0
  418c1e:	mov    rax,0xffffffffffffffff
  418c25:	add    rsp,0x30
  418c29:	pop    rbx
  418c2a:	pop    rsi
  418c2b:	pop    rdi
  418c2c:	pop    rbp
  418c2d:	pop    r12
  418c2f:	pop    r13
  418c31:	pop    r14
  418c33:	ret    
  418c34:	mov    rax,rsi
  418c37:	mov    QWORD PTR [r13+0x0],r14
  418c3b:	add    rsp,0x30
  418c3f:	pop    rbx
  418c40:	pop    rsi
  418c41:	pop    rdi
  418c42:	pop    rbp
  418c43:	pop    r12
  418c45:	pop    r13
  418c47:	pop    r14
  418c49:	ret    
  418c4a:	nop    WORD PTR [rax+rax*1+0x0]
  418c50:	lea    rax,[rsi-0x1]
  418c54:	mov    QWORD PTR [r13+0x0],0x0
  418c5c:	add    rsp,0x30
  418c60:	pop    rbx
  418c61:	pop    rsi
  418c62:	pop    rdi
  418c63:	pop    rbp
  418c64:	pop    r12
  418c66:	pop    r13
  418c68:	pop    r14
  418c6a:	ret    
  418c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  418c70:	test   rdi,rdi
  418c73:	lea    rbx,[rsp+0x20]
  418c78:	jne    0x418c9b
  418c7a:	jmp    0x418cd1
  418c7c:	nop    DWORD PTR [rax+0x0]
  418c80:	movsxd rdx,eax
  418c83:	sub    eax,0x1
  418c86:	cdqe   
  418c88:	add    rsi,rdx
  418c8b:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  418c90:	je     0x418cd9
  418c92:	add    r14,0x2
  418c96:	cmp    rdi,rsi
  418c99:	jbe    0x418cd1
  418c9b:	movzx  edx,WORD PTR [r14]
  418c9f:	mov    r9d,r12d
  418ca2:	mov    r8d,ebp
  418ca5:	mov    rcx,rbx
  418ca8:	call   0x418ad0
  418cad:	test   eax,eax
  418caf:	jg     0x418c80
  418cb1:	jmp    0x418c1e
  418cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418cc0:	xor    eax,eax
  418cc2:	add    rsp,0x30
  418cc6:	pop    rbx
  418cc7:	pop    rsi
  418cc8:	pop    rdi
  418cc9:	pop    rbp
  418cca:	pop    r12
  418ccc:	pop    r13
  418cce:	pop    r14
  418cd0:	ret    
  418cd1:	mov    rax,rsi
  418cd4:	jmp    0x418c25
  418cd9:	lea    rax,[rsi-0x1]
  418cdd:	jmp    0x418c25
  418ce2:	nop
  418ce3:	nop
  418ce4:	nop
  418ce5:	nop
  418ce6:	nop
  418ce7:	nop
  418ce8:	nop
  418ce9:	nop
  418cea:	nop
  418ceb:	nop
  418cec:	nop
  418ced:	nop
  418cee:	nop
  418cef:	nop
  418cf0:	sub    rsp,0x38
  418cf4:	lea    rdx,[rsp+0x28]
  418cf9:	call   0x41d8d8
  418cfe:	test   eax,eax
  418d00:	mov    rax,0xffffffffffffffff
  418d07:	cmove  rax,QWORD PTR [rsp+0x28]
  418d0d:	add    rsp,0x38
  418d11:	ret    
  418d12:	nop
  418d13:	nop
  418d14:	nop
  418d15:	nop
  418d16:	nop
  418d17:	nop
  418d18:	nop
  418d19:	nop
  418d1a:	nop
  418d1b:	nop
  418d1c:	nop
  418d1d:	nop
  418d1e:	nop
  418d1f:	nop
  418d20:	jmp    0x41d950
  418d25:	nop
  418d26:	nop
  418d27:	nop
  418d28:	nop
  418d29:	nop
  418d2a:	nop
  418d2b:	nop
  418d2c:	nop
  418d2d:	nop
  418d2e:	nop
  418d2f:	nop
  418d30:	sub    rsp,0x38
  418d34:	mov    r9,rdx
  418d37:	mov    QWORD PTR [rsp+0x20],r8
  418d3c:	mov    rdx,rcx
  418d3f:	xor    r8d,r8d
  418d42:	mov    ecx,0x6000
  418d47:	call   0x41a660
  418d4c:	add    rsp,0x38
  418d50:	ret    
  418d51:	nop
  418d52:	nop
  418d53:	nop
  418d54:	nop
  418d55:	nop
  418d56:	nop
  418d57:	nop
  418d58:	nop
  418d59:	nop
  418d5a:	nop
  418d5b:	nop
  418d5c:	nop
  418d5d:	nop
  418d5e:	nop
  418d5f:	nop
  418d60:	push   rsi
  418d61:	push   rbx
  418d62:	sub    rsp,0x38
  418d66:	mov    rbx,rcx
  418d69:	mov    rsi,rdx
  418d6c:	call   0x41d9e0
  418d71:	lea    rdx,[rax+0x30]
  418d75:	mov    QWORD PTR [rsp+0x20],rsi
  418d7a:	mov    r9,rbx
  418d7d:	xor    r8d,r8d
  418d80:	mov    ecx,0x6000
  418d85:	call   0x41a660
  418d8a:	add    rsp,0x38
  418d8e:	pop    rbx
  418d8f:	pop    rsi
  418d90:	ret    
  418d91:	nop
  418d92:	nop
  418d93:	nop
  418d94:	nop
  418d95:	nop
  418d96:	nop
  418d97:	nop
  418d98:	nop
  418d99:	nop
  418d9a:	nop
  418d9b:	nop
  418d9c:	nop
  418d9d:	nop
  418d9e:	nop
  418d9f:	nop
  418da0:	push   rsi
  418da1:	push   rbx
  418da2:	sub    rsp,0x38
  418da6:	test   rdx,rdx
  418da9:	mov    rsi,rcx
  418dac:	je     0x418de0
  418dae:	lea    rbx,[rdx-0x1]
  418db2:	mov    QWORD PTR [rsp+0x20],r9
  418db7:	mov    rdx,rcx
  418dba:	mov    r9,r8
  418dbd:	xor    ecx,ecx
  418dbf:	mov    r8d,ebx
  418dc2:	call   0x41a660
  418dc7:	cmp    eax,ebx
  418dc9:	cmovle ebx,eax
  418dcc:	movsxd rbx,ebx
  418dcf:	mov    BYTE PTR [rsi+rbx*1],0x0
  418dd3:	add    rsp,0x38
  418dd7:	pop    rbx
  418dd8:	pop    rsi
  418dd9:	ret    
  418dda:	nop    WORD PTR [rax+rax*1+0x0]
  418de0:	mov    QWORD PTR [rsp+0x20],r9
  418de5:	mov    rdx,rcx
  418de8:	mov    r9,r8
  418deb:	xor    ecx,ecx
  418ded:	xor    r8d,r8d
  418df0:	call   0x41a660
  418df5:	add    rsp,0x38
  418df9:	pop    rbx
  418dfa:	pop    rsi
  418dfb:	ret    
  418dfc:	nop
  418dfd:	nop
  418dfe:	nop
  418dff:	nop
  418e00:	push   rbx
  418e01:	sub    rsp,0x30
  418e05:	mov    rbx,rcx
  418e08:	mov    r9,rdx
  418e0b:	mov    QWORD PTR [rsp+0x20],r8
  418e10:	mov    rdx,rcx
  418e13:	xor    r8d,r8d
  418e16:	mov    ecx,0x4000
  418e1b:	call   0x41a660
  418e20:	movsxd rdx,eax
  418e23:	mov    BYTE PTR [rbx+rdx*1],0x0
  418e27:	add    rsp,0x30
  418e2b:	pop    rbx
  418e2c:	ret    
  418e2d:	nop
  418e2e:	nop
  418e2f:	nop
  418e30:	sub    rsp,0x58
  418e34:	mov    rax,QWORD PTR [rdx]
  418e37:	mov    r11,rdx
  418e3a:	mov    edx,DWORD PTR [rdx+0x8]
  418e3d:	mov    r10,rdx
  418e40:	and    r10w,0x7fff
  418e46:	jne    0x418e64
  418e48:	mov    rdx,rax
  418e4b:	shr    rdx,0x20
  418e4f:	or     eax,edx
  418e51:	jne    0x418ed0
  418e53:	mov    DWORD PTR [rsp+0x44],0x0
  418e5b:	movzx  eax,WORD PTR [r11+0x8]
  418e60:	xor    edx,edx
  418e62:	jmp    0x418e8b
  418e64:	cmp    r10w,0x7fff
  418e6a:	je     0x418ef0
  418e70:	movzx  eax,WORD PTR [r11+0x8]
  418e75:	mov    DWORD PTR [rsp+0x44],0x1
  418e7d:	mov    edx,eax
  418e7f:	and    edx,0x7fff
  418e85:	sub    edx,0x403e
  418e8b:	and    eax,0x8000
  418e90:	mov    r10,QWORD PTR [rsp+0x80]
  418e98:	mov    DWORD PTR [r10],eax
  418e9b:	lea    rax,[rsp+0x48]
  418ea0:	mov    QWORD PTR [rsp+0x30],r9
  418ea5:	mov    DWORD PTR [rsp+0x20],ecx
  418ea9:	lea    r9,[rsp+0x44]
  418eae:	lea    rcx,[rip+0x73bb]        # 0x420270
  418eb5:	mov    DWORD PTR [rsp+0x28],r8d
  418eba:	mov    QWORD PTR [rsp+0x38],rax
  418ebf:	mov    r8,r11
  418ec2:	call   0x41b2e0
  418ec7:	add    rsp,0x58
  418ecb:	ret    
  418ecc:	nop    DWORD PTR [rax+0x0]
  418ed0:	test   edx,edx
  418ed2:	js     0x418e70
  418ed4:	mov    DWORD PTR [rsp+0x44],0x2
  418edc:	movzx  eax,WORD PTR [r11+0x8]
  418ee1:	mov    edx,0xffffbfc3
  418ee6:	jmp    0x418e8b
  418ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  418ef0:	mov    rdx,rax
  418ef3:	shr    rdx,0x20
  418ef7:	and    edx,0x7fffffff
  418efd:	or     edx,eax
  418eff:	jne    0x418f15
  418f01:	mov    DWORD PTR [rsp+0x44],0x3
  418f09:	movzx  eax,WORD PTR [r11+0x8]
  418f0e:	xor    edx,edx
  418f10:	jmp    0x418e8b
  418f15:	mov    DWORD PTR [rsp+0x44],0x4
  418f1d:	xor    edx,edx
  418f1f:	xor    eax,eax
  418f21:	jmp    0x418e90
  418f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418f30:	push   rbx
  418f31:	sub    rsp,0x20
  418f35:	mov    rbx,rdx
  418f38:	mov    edx,DWORD PTR [rdx+0x8]
  418f3b:	test   dh,0x40
  418f3e:	jne    0x418f48
  418f40:	mov    eax,DWORD PTR [rbx+0x24]
  418f43:	cmp    DWORD PTR [rbx+0x28],eax
  418f46:	jle    0x418f5a
  418f48:	and    dh,0x20
  418f4b:	jne    0x418f70
  418f4d:	movsxd rax,DWORD PTR [rbx+0x24]
  418f51:	mov    rdx,QWORD PTR [rbx]
  418f54:	mov    BYTE PTR [rdx+rax*1],cl
  418f57:	mov    eax,DWORD PTR [rbx+0x24]
  418f5a:	add    eax,0x1
  418f5d:	mov    DWORD PTR [rbx+0x24],eax
  418f60:	add    rsp,0x20
  418f64:	pop    rbx
  418f65:	ret    
  418f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418f70:	mov    rdx,QWORD PTR [rbx]
  418f73:	call   0x41d8c0
  418f78:	mov    eax,DWORD PTR [rbx+0x24]
  418f7b:	add    eax,0x1
  418f7e:	mov    DWORD PTR [rbx+0x24],eax
  418f81:	add    rsp,0x20
  418f85:	pop    rbx
  418f86:	ret    
  418f87:	nop    WORD PTR [rax+rax*1+0x0]
  418f90:	push   r14
  418f92:	push   r13
  418f94:	push   r12
  418f96:	push   rbp
  418f97:	push   rdi
  418f98:	push   rsi
  418f99:	push   rbx
  418f9a:	sub    rsp,0x40
  418f9e:	lea    r14,[rsp+0x2c]
  418fa3:	lea    r13,[rsp+0x30]
  418fa8:	mov    ebx,edx
  418faa:	mov    rsi,r8
  418fad:	xor    edx,edx
  418faf:	mov    r12,rcx
  418fb2:	mov    r8,r14
  418fb5:	mov    rcx,r13
  418fb8:	call   0x418b50
  418fbd:	mov    ebp,DWORD PTR [rsi+0x10]
  418fc0:	cmp    ebp,ebx
  418fc2:	jge    0x419069
  418fc8:	test   ebp,ebp
  418fca:	js     0x419069
  418fd0:	mov    eax,DWORD PTR [rsi+0xc]
  418fd3:	cmp    ebp,eax
  418fd5:	jge    0x419076
  418fdb:	sub    eax,ebp
  418fdd:	test   eax,eax
  418fdf:	mov    DWORD PTR [rsi+0xc],eax
  418fe2:	jle    0x418ff0
  418fe4:	test   BYTE PTR [rsi+0x9],0x4
  418fe8:	je     0x419082
  418fee:	xchg   ax,ax
  418ff0:	test   ebp,ebp
  418ff2:	jle    0x41904d
  418ff4:	add    r12,0x2
  418ff8:	movzx  edx,WORD PTR [r12-0x2]
  418ffe:	mov    r8,r14
  419001:	mov    rcx,r13
  419004:	call   0x418b50
  419009:	test   eax,eax
  41900b:	jle    0x41904d
  41900d:	sub    eax,0x1
  419010:	mov    rbx,r13
  419013:	lea    rdi,[r13+rax*1+0x1]
  419018:	nop    DWORD PTR [rax+rax*1+0x0]
  419020:	add    rbx,0x1
  419024:	movsx  ecx,BYTE PTR [rbx-0x1]
  419028:	mov    rdx,rsi
  41902b:	call   0x418f30
  419030:	cmp    rbx,rdi
  419033:	jne    0x419020
  419035:	sub    ebp,0x1
  419038:	jmp    0x418ff0
  41903a:	nop    WORD PTR [rax+rax*1+0x0]
  419040:	mov    rdx,rsi
  419043:	mov    ecx,0x20
  419048:	call   0x418f30
  41904d:	mov    eax,DWORD PTR [rsi+0xc]
  419050:	lea    edx,[rax-0x1]
  419053:	test   eax,eax
  419055:	mov    DWORD PTR [rsi+0xc],edx
  419058:	jg     0x419040
  41905a:	add    rsp,0x40
  41905e:	pop    rbx
  41905f:	pop    rsi
  419060:	pop    rdi
  419061:	pop    rbp
  419062:	pop    r12
  419064:	pop    r13
  419066:	pop    r14
  419068:	ret    
  419069:	mov    eax,DWORD PTR [rsi+0xc]
  41906c:	mov    ebp,ebx
  41906e:	cmp    ebp,eax
  419070:	jl     0x418fdb
  419076:	mov    DWORD PTR [rsi+0xc],0xffffffff
  41907d:	jmp    0x418ff0
  419082:	sub    eax,0x1
  419085:	mov    DWORD PTR [rsi+0xc],eax
  419088:	nop    DWORD PTR [rax+rax*1+0x0]
  419090:	mov    rdx,rsi
  419093:	mov    ecx,0x20
  419098:	call   0x418f30
  41909d:	mov    eax,DWORD PTR [rsi+0xc]
  4190a0:	lea    edx,[rax-0x1]
  4190a3:	test   eax,eax
  4190a5:	mov    DWORD PTR [rsi+0xc],edx
  4190a8:	jne    0x419090
  4190aa:	jmp    0x418ff0
  4190af:	nop
  4190b0:	push   rdi
  4190b1:	push   rsi
  4190b2:	push   rbx
  4190b3:	sub    rsp,0x20
  4190b7:	mov    edi,DWORD PTR [r8+0x10]
  4190bb:	mov    rsi,rcx
  4190be:	mov    rbx,r8
  4190c1:	cmp    edi,edx
  4190c3:	jge    0x419140
  4190c5:	test   edi,edi
  4190c7:	js     0x419140
  4190c9:	mov    eax,DWORD PTR [rbx+0xc]
  4190cc:	cmp    edi,eax
  4190ce:	jge    0x419149
  4190d0:	sub    eax,edi
  4190d2:	test   eax,eax
  4190d4:	mov    DWORD PTR [rbx+0xc],eax
  4190d7:	jle    0x4191a2
  4190dd:	test   BYTE PTR [rbx+0x9],0x4
  4190e1:	jne    0x419170
  4190e7:	sub    eax,0x1
  4190ea:	mov    DWORD PTR [rbx+0xc],eax
  4190ed:	nop    DWORD PTR [rax]
  4190f0:	mov    rdx,rbx
  4190f3:	mov    ecx,0x20
  4190f8:	call   0x418f30
  4190fd:	mov    eax,DWORD PTR [rbx+0xc]
  419100:	mov    edx,eax
  419102:	sub    eax,0x1
  419105:	test   edx,edx
  419107:	mov    DWORD PTR [rbx+0xc],eax
  41910a:	jne    0x4190f0
  41910c:	test   edi,edi
  41910e:	lea    edx,[rdi-0x1]
  419111:	je     0x419190
  419113:	lea    rdi,[rsi+rdx*1+0x1]
  419118:	nop    DWORD PTR [rax+rax*1+0x0]
  419120:	add    rsi,0x1
  419124:	movsx  ecx,BYTE PTR [rsi-0x1]
  419128:	mov    rdx,rbx
  41912b:	call   0x418f30
  419130:	cmp    rsi,rdi
  419133:	jne    0x419120
  419135:	jmp    0x41918d
  419137:	nop    WORD PTR [rax+rax*1+0x0]
  419140:	mov    eax,DWORD PTR [rbx+0xc]
  419143:	mov    edi,edx
  419145:	cmp    edi,eax
  419147:	jl     0x4190d0
  419149:	test   edi,edi
  41914b:	mov    DWORD PTR [rbx+0xc],0xffffffff
  419152:	lea    edx,[rdi-0x1]
  419155:	jne    0x419113
  419157:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  41915e:	add    rsp,0x20
  419162:	pop    rbx
  419163:	pop    rsi
  419164:	pop    rdi
  419165:	ret    
  419166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419170:	test   edi,edi
  419172:	lea    edx,[rdi-0x1]
  419175:	jne    0x419113
  419177:	sub    eax,0x1
  41917a:	mov    DWORD PTR [rbx+0xc],eax
  41917d:	nop    DWORD PTR [rax]
  419180:	mov    rdx,rbx
  419183:	mov    ecx,0x20
  419188:	call   0x418f30
  41918d:	mov    eax,DWORD PTR [rbx+0xc]
  419190:	lea    edx,[rax-0x1]
  419193:	test   eax,eax
  419195:	mov    DWORD PTR [rbx+0xc],edx
  419198:	jg     0x419180
  41919a:	add    rsp,0x20
  41919e:	pop    rbx
  41919f:	pop    rsi
  4191a0:	pop    rdi
  4191a1:	ret    
  4191a2:	test   edi,edi
  4191a4:	lea    edx,[rdi-0x1]
  4191a7:	jne    0x419113
  4191ad:	sub    eax,0x1
  4191b0:	mov    DWORD PTR [rbx+0xc],eax
  4191b3:	jmp    0x41915e
  4191b5:	nop
  4191b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4191c0:	sub    rsp,0x38
  4191c4:	test   ecx,ecx
  4191c6:	mov    DWORD PTR [r8+0x10],0xffffffff
  4191ce:	je     0x419214
  4191d0:	lea    rcx,[rsp+0x20]
  4191d5:	mov    r11d,DWORD PTR [r8+0x8]
  4191d9:	mov    BYTE PTR [rsp+0x20],0x2d
  4191de:	lea    r10,[rcx+0x1]
  4191e2:	and    r11d,0x20
  4191e6:	xor    r9d,r9d
  4191e9:	movzx  eax,BYTE PTR [rdx+r9*1]
  4191ee:	and    eax,0xffffffdf
  4191f1:	or     eax,r11d
  4191f4:	mov    BYTE PTR [r10+r9*1],al
  4191f8:	add    r9,0x1
  4191fc:	cmp    r9,0x3
  419200:	jne    0x4191e9
  419202:	lea    rdx,[r10+0x3]
  419206:	sub    rdx,rcx
  419209:	call   0x4190b0
  41920e:	nop
  41920f:	add    rsp,0x38
  419213:	ret    
  419214:	mov    r11d,DWORD PTR [r8+0x8]
  419218:	test   r11d,0x100
  41921f:	je     0x419231
  419221:	lea    rcx,[rsp+0x20]
  419226:	mov    BYTE PTR [rsp+0x20],0x2b
  41922b:	lea    r10,[rcx+0x1]
  41922f:	jmp    0x4191e2
  419231:	test   r11b,0x40
  419235:	je     0x419250
  419237:	lea    rcx,[rsp+0x20]
  41923c:	mov    BYTE PTR [rsp+0x20],0x20
  419241:	lea    r10,[rcx+0x1]
  419245:	jmp    0x4191e2
  419247:	nop    WORD PTR [rax+rax*1+0x0]
  419250:	lea    rcx,[rsp+0x20]
  419255:	mov    r10,rcx
  419258:	jmp    0x4191e2
  41925a:	nop    WORD PTR [rax+rax*1+0x0]
  419260:	push   rbp
  419261:	push   r12
  419263:	push   rdi
  419264:	push   rsi
  419265:	push   rbx
  419266:	mov    rbp,rsp
  419269:	sub    rsp,0x30
  41926d:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  419271:	mov    rsi,rcx
  419274:	je     0x419310
  41927a:	movzx  edx,WORD PTR [rcx+0x18]
  41927e:	test   dx,dx
  419281:	je     0x4192e2
  419283:	movsxd rax,DWORD PTR [rsi+0x14]
  419287:	mov    r12,rsp
  41928a:	add    rax,0xf
  41928e:	and    rax,0xfffffffffffffff0
  419292:	call   0x4182b0
  419297:	sub    rsp,rax
  41929a:	lea    r8,[rbp-0x4]
  41929e:	mov    DWORD PTR [rbp-0x4],0x0
  4192a5:	lea    rbx,[rsp+0x20]
  4192aa:	mov    rcx,rbx
  4192ad:	call   0x418b50
  4192b2:	test   eax,eax
  4192b4:	jle    0x419300
  4192b6:	sub    eax,0x1
  4192b9:	lea    rdi,[rbx+rax*1+0x1]
  4192be:	xchg   ax,ax
  4192c0:	add    rbx,0x1
  4192c4:	movsx  ecx,BYTE PTR [rbx-0x1]
  4192c8:	mov    rdx,rsi
  4192cb:	call   0x418f30
  4192d0:	cmp    rbx,rdi
  4192d3:	jne    0x4192c0
  4192d5:	mov    rsp,r12
  4192d8:	mov    rsp,rbp
  4192db:	pop    rbx
  4192dc:	pop    rsi
  4192dd:	pop    rdi
  4192de:	pop    r12
  4192e0:	pop    rbp
  4192e1:	ret    
  4192e2:	mov    rdx,rsi
  4192e5:	mov    ecx,0x2e
  4192ea:	call   0x418f30
  4192ef:	nop
  4192f0:	mov    rsp,rbp
  4192f3:	pop    rbx
  4192f4:	pop    rsi
  4192f5:	pop    rdi
  4192f6:	pop    r12
  4192f8:	pop    rbp
  4192f9:	ret    
  4192fa:	nop    WORD PTR [rax+rax*1+0x0]
  419300:	mov    rdx,rsi
  419303:	mov    ecx,0x2e
  419308:	call   0x418f30
  41930d:	jmp    0x4192d5
  41930f:	nop
  419310:	mov    DWORD PTR [rbp-0x4],0x0
  419317:	call   0x41d878
  41931c:	mov    rdx,QWORD PTR [rax]
  41931f:	lea    rcx,[rbp-0x6]
  419323:	lea    r9,[rbp-0x4]
  419327:	mov    r8d,0x10
  41932d:	call   0x41d540
  419332:	test   eax,eax
  419334:	jle    0x419346
  419336:	movzx  edx,WORD PTR [rbp-0x6]
  41933a:	mov    WORD PTR [rsi+0x18],dx
  41933e:	mov    DWORD PTR [rsi+0x14],eax
  419341:	jmp    0x41927e
  419346:	movzx  edx,WORD PTR [rsi+0x18]
  41934a:	jmp    0x41933e
  41934c:	nop    DWORD PTR [rax+0x0]
  419350:	push   r12
  419352:	push   rbp
  419353:	push   rdi
  419354:	push   rsi
  419355:	push   rbx
  419356:	sub    rsp,0x20
  41935a:	mov    esi,r8d
  41935d:	mov    ebp,ecx
  41935f:	mov    rdi,rdx
  419362:	test   esi,esi
  419364:	mov    rbx,r9
  419367:	mov    r8d,DWORD PTR [r9+0xc]
  41936b:	jle    0x419542
  419371:	cmp    esi,r8d
  419374:	jg     0x4194b0
  41937a:	sub    r8d,esi
  41937d:	mov    DWORD PTR [r9+0xc],r8d
  419381:	test   r8d,r8d
  419384:	js     0x4194b0
  41938a:	mov    eax,DWORD PTR [rbx+0x10]
  41938d:	cmp    eax,r8d
  419390:	jge    0x4194b0
  419396:	sub    r8d,eax
  419399:	test   r8d,r8d
  41939c:	mov    DWORD PTR [rbx+0xc],r8d
  4193a0:	jle    0x4194bd
  4193a6:	test   eax,eax
  4193a8:	jle    0x4195f5
  4193ae:	sub    r8d,0x1
  4193b2:	test   esi,esi
  4193b4:	mov    DWORD PTR [rbx+0xc],r8d
  4193b8:	jle    0x4193c4
  4193ba:	test   BYTE PTR [rbx+0x9],0x10
  4193be:	jne    0x4194cf
  4193c4:	test   r8d,r8d
  4193c7:	jle    0x41940d
  4193c9:	test   ebp,ebp
  4193cb:	jne    0x4193db
  4193cd:	mov    eax,DWORD PTR [rbx+0x8]
  4193d0:	test   eax,0x1c0
  4193d5:	je     0x4195d5
  4193db:	sub    r8d,0x1
  4193df:	test   r8d,r8d
  4193e2:	mov    DWORD PTR [rbx+0xc],r8d
  4193e6:	jle    0x41940d
  4193e8:	test   DWORD PTR [rbx+0x8],0x600
  4193ef:	jne    0x41940d
  4193f1:	jmp    0x419400
  4193f3:	mov    rdx,rbx
  4193f6:	mov    ecx,0x20
  4193fb:	call   0x418f30
  419400:	mov    eax,DWORD PTR [rbx+0xc]
  419403:	lea    edx,[rax-0x1]
  419406:	test   eax,eax
  419408:	mov    DWORD PTR [rbx+0xc],edx
  41940b:	jg     0x4193f3
  41940d:	test   ebp,ebp
  41940f:	jne    0x419530
  419415:	mov    eax,DWORD PTR [rbx+0x8]
  419418:	test   ah,0x1
  41941b:	jne    0x419560
  419421:	test   al,0x40
  419423:	jne    0x4195e3
  419429:	mov    edx,DWORD PTR [rbx+0xc]
  41942c:	test   edx,edx
  41942e:	jle    0x419443
  419430:	mov    eax,DWORD PTR [rbx+0x8]
  419433:	and    eax,0x600
  419438:	cmp    eax,0x200
  41943d:	je     0x419572
  419443:	test   esi,esi
  419445:	jle    0x4195a2
  41944b:	lea    r12,[rbx+0x20]
  41944f:	mov    ebp,0x55555556
  419454:	movzx  eax,BYTE PTR [rdi]
  419457:	mov    ecx,0x30
  41945c:	test   al,al
  41945e:	je     0x419467
  419460:	add    rdi,0x1
  419464:	movsx  ecx,al
  419467:	mov    rdx,rbx
  41946a:	call   0x418f30
  41946f:	sub    esi,0x1
  419472:	je     0x419690
  419478:	test   BYTE PTR [rbx+0x9],0x10
  41947c:	je     0x419454
  41947e:	cmp    WORD PTR [rbx+0x20],0x0
  419483:	je     0x419454
  419485:	mov    eax,esi
  419487:	imul   ebp
  419489:	mov    eax,esi
  41948b:	sar    eax,0x1f
  41948e:	sub    edx,eax
  419490:	lea    eax,[rdx+rdx*2]
  419493:	cmp    esi,eax
  419495:	jne    0x419454
  419497:	mov    r8,rbx
  41949a:	mov    edx,0x1
  41949f:	mov    rcx,r12
  4194a2:	call   0x418f90
  4194a7:	jmp    0x419454
  4194a9:	nop    DWORD PTR [rax+0x0]
  4194b0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  4194b7:	mov    r8d,0xffffffff
  4194bd:	test   esi,esi
  4194bf:	jle    0x41940d
  4194c5:	test   BYTE PTR [rbx+0x9],0x10
  4194c9:	je     0x41940d
  4194cf:	cmp    WORD PTR [rbx+0x20],0x0
  4194d4:	je     0x4193c4
  4194da:	lea    ecx,[rsi+0x2]
  4194dd:	mov    edx,0x55555556
  4194e2:	mov    eax,ecx
  4194e4:	sar    ecx,0x1f
  4194e7:	imul   edx
  4194e9:	sub    edx,ecx
  4194eb:	cmp    edx,0x1
  4194ee:	jle    0x4193c4
  4194f4:	test   r8d,r8d
  4194f7:	jle    0x41940d
  4194fd:	mov    eax,r8d
  419500:	sub    eax,edx
  419502:	add    eax,0x1
  419505:	jmp    0x419519
  419507:	nop    WORD PTR [rax+rax*1+0x0]
  419510:	test   r8d,r8d
  419513:	je     0x419684
  419519:	sub    r8d,0x1
  41951d:	cmp    r8d,eax
  419520:	jne    0x419510
  419522:	mov    DWORD PTR [rbx+0xc],r8d
  419526:	jmp    0x4193c4
  41952b:	nop    DWORD PTR [rax+rax*1+0x0]
  419530:	mov    rdx,rbx
  419533:	mov    ecx,0x2d
  419538:	call   0x418f30
  41953d:	jmp    0x419429
  419542:	test   r8d,r8d
  419545:	jle    0x419381
  41954b:	sub    r8d,0x1
  41954f:	mov    DWORD PTR [r9+0xc],r8d
  419553:	jmp    0x41938a
  419558:	nop    DWORD PTR [rax+rax*1+0x0]
  419560:	mov    rdx,rbx
  419563:	mov    ecx,0x2b
  419568:	call   0x418f30
  41956d:	jmp    0x419429
  419572:	sub    edx,0x1
  419575:	mov    DWORD PTR [rbx+0xc],edx
  419578:	nop    DWORD PTR [rax+rax*1+0x0]
  419580:	mov    rdx,rbx
  419583:	mov    ecx,0x30
  419588:	call   0x418f30
  41958d:	mov    eax,DWORD PTR [rbx+0xc]
  419590:	lea    edx,[rax-0x1]
  419593:	test   eax,eax
  419595:	mov    DWORD PTR [rbx+0xc],edx
  419598:	jg     0x419580
  41959a:	test   esi,esi
  41959c:	jg     0x41944b
  4195a2:	mov    rdx,rbx
  4195a5:	mov    ecx,0x30
  4195aa:	call   0x418f30
  4195af:	mov    eax,DWORD PTR [rbx+0x10]
  4195b2:	test   eax,eax
  4195b4:	jg     0x419622
  4195b6:	test   BYTE PTR [rbx+0x9],0x8
  4195ba:	jne    0x419622
  4195bc:	test   esi,esi
  4195be:	jne    0x419666
  4195c4:	sub    eax,0x1
  4195c7:	mov    DWORD PTR [rbx+0x10],eax
  4195ca:	add    rsp,0x20
  4195ce:	pop    rbx
  4195cf:	pop    rsi
  4195d0:	pop    rdi
  4195d1:	pop    rbp
  4195d2:	pop    r12
  4195d4:	ret    
  4195d5:	test   ah,0x6
  4195d8:	je     0x419400
  4195de:	jmp    0x419418
  4195e3:	mov    rdx,rbx
  4195e6:	mov    ecx,0x20
  4195eb:	call   0x418f30
  4195f0:	jmp    0x419429
  4195f5:	mov    eax,DWORD PTR [rbx+0x8]
  4195f8:	test   ah,0x8
  4195fb:	jne    0x4193ae
  419601:	test   esi,esi
  419603:	jle    0x4193c9
  419609:	test   ah,0x10
  41960c:	je     0x4193c9
  419612:	cmp    WORD PTR [rbx+0x20],0x0
  419617:	jne    0x4194da
  41961d:	jmp    0x4193c9
  419622:	mov    rcx,rbx
  419625:	call   0x419260
  41962a:	test   esi,esi
  41962c:	je     0x41964b
  41962e:	jmp    0x419663
  419630:	movzx  eax,BYTE PTR [rdi]
  419633:	mov    ecx,0x30
  419638:	test   al,al
  41963a:	je     0x419643
  41963c:	add    rdi,0x1
  419640:	movsx  ecx,al
  419643:	mov    rdx,rbx
  419646:	call   0x418f30
  41964b:	mov    eax,DWORD PTR [rbx+0x10]
  41964e:	lea    edx,[rax-0x1]
  419651:	test   eax,eax
  419653:	mov    DWORD PTR [rbx+0x10],edx
  419656:	jg     0x419630
  419658:	add    rsp,0x20
  41965c:	pop    rbx
  41965d:	pop    rsi
  41965e:	pop    rdi
  41965f:	pop    rbp
  419660:	pop    r12
  419662:	ret    
  419663:	mov    eax,DWORD PTR [rbx+0x10]
  419666:	add    eax,esi
  419668:	mov    DWORD PTR [rbx+0x10],eax
  41966b:	nop    DWORD PTR [rax+rax*1+0x0]
  419670:	mov    rdx,rbx
  419673:	mov    ecx,0x30
  419678:	call   0x418f30
  41967d:	add    esi,0x1
  419680:	jne    0x419670
  419682:	jmp    0x41964b
  419684:	mov    DWORD PTR [rbx+0xc],0x0
  41968b:	jmp    0x41940d
  419690:	mov    eax,DWORD PTR [rbx+0x10]
  419693:	test   eax,eax
  419695:	jle    0x4196a1
  419697:	mov    rcx,rbx
  41969a:	call   0x419260
  41969f:	jmp    0x41964b
  4196a1:	test   BYTE PTR [rbx+0x9],0x8
  4196a5:	jne    0x419697
  4196a7:	jmp    0x4195c4
  4196ac:	nop    DWORD PTR [rax+0x0]
  4196b0:	push   rsi
  4196b1:	push   rbx
  4196b2:	sub    rsp,0x68
  4196b6:	mov    r8d,DWORD PTR [rdx+0x10]
  4196ba:	fld    TBYTE PTR [rcx]
  4196bc:	mov    rbx,rdx
  4196bf:	test   r8d,r8d
  4196c2:	js     0x419760
  4196c8:	lea    rdx,[rsp+0x30]
  4196cd:	lea    r9,[rsp+0x4c]
  4196d2:	mov    ecx,0x3
  4196d7:	fstp   TBYTE PTR [rsp+0x50]
  4196db:	mov    rax,QWORD PTR [rsp+0x50]
  4196e0:	mov    QWORD PTR [rsp+0x30],rax
  4196e5:	mov    rax,QWORD PTR [rsp+0x58]
  4196ea:	mov    QWORD PTR [rsp+0x38],rax
  4196ef:	lea    rax,[rsp+0x48]
  4196f4:	mov    QWORD PTR [rsp+0x20],rax
  4196f9:	call   0x418e30
  4196fe:	mov    r8d,DWORD PTR [rsp+0x4c]
  419703:	mov    rsi,rax
  419706:	cmp    r8d,0xffff8000
  41970d:	je     0x419772
  41970f:	mov    ecx,DWORD PTR [rsp+0x48]
  419713:	mov    rdx,rax
  419716:	mov    r9,rbx
  419719:	call   0x419350
  41971e:	mov    eax,DWORD PTR [rbx+0xc]
  419721:	lea    edx,[rax-0x1]
  419724:	test   eax,eax
  419726:	mov    DWORD PTR [rbx+0xc],edx
  419729:	jle    0x41974e
  41972b:	nop    DWORD PTR [rax+rax*1+0x0]
  419730:	mov    rdx,rbx
  419733:	mov    ecx,0x20
  419738:	call   0x418f30
  41973d:	mov    r8d,DWORD PTR [rbx+0xc]
  419741:	lea    r9d,[r8-0x1]
  419745:	test   r8d,r8d
  419748:	mov    DWORD PTR [rbx+0xc],r9d
  41974c:	jg     0x419730
  41974e:	mov    rcx,rsi
  419751:	call   0x41b140
  419756:	nop
  419757:	add    rsp,0x68
  41975b:	pop    rbx
  41975c:	pop    rsi
  41975d:	ret    
  41975e:	xchg   ax,ax
  419760:	mov    DWORD PTR [rdx+0x10],0x6
  419767:	mov    r8d,0x6
  41976d:	jmp    0x4196c8
  419772:	mov    ecx,DWORD PTR [rsp+0x48]
  419776:	mov    r8,rbx
  419779:	mov    rdx,rax
  41977c:	call   0x4191c0
  419781:	mov    rcx,rsi
  419784:	call   0x41b140
  419789:	nop
  41978a:	add    rsp,0x68
  41978e:	pop    rbx
  41978f:	pop    rsi
  419790:	ret    
  419791:	nop    DWORD PTR [rax+rax*1+0x0]
  419796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4197a0:	push   rbp
  4197a1:	push   r13
  4197a3:	push   r12
  4197a5:	push   rdi
  4197a6:	push   rsi
  4197a7:	push   rbx
  4197a8:	sub    rsp,0x28
  4197ac:	lea    rbp,[rsp+0x80]
  4197b4:	mov    ebx,DWORD PTR [rdx+0x10]
  4197b7:	mov    r11d,DWORD PTR [rdx+0x8]
  4197bb:	mov    r8d,0x0
  4197c1:	mov    rsi,rdx
  4197c4:	test   ebx,ebx
  4197c6:	cmovns r8d,ebx
  4197ca:	add    r8d,0x17
  4197ce:	test   r11d,0x1000
  4197d5:	je     0x4197e2
  4197d7:	cmp    WORD PTR [rdx+0x20],0x0
  4197dc:	jne    0x4199d2
  4197e2:	movsxd r13,DWORD PTR [rsi+0xc]
  4197e6:	movsxd rax,r8d
  4197e9:	cmp    r8d,r13d
  4197ec:	cmovl  rax,r13
  4197f0:	add    rax,0x1e
  4197f4:	and    rax,0xfffffffffffffff0
  4197f8:	call   0x4182b0
  4197fd:	sub    rsp,rax
  419800:	test   r11b,0x80
  419804:	lea    r12,[rsp+0x20]
  419809:	je     0x41981c
  41980b:	test   rcx,rcx
  41980e:	js     0x419a60
  419814:	and    r11b,0x7f
  419818:	mov    DWORD PTR [rsi+0x8],r11d
  41981c:	test   rcx,rcx
  41981f:	je     0x419a68
  419825:	mov    r10d,r11d
  419828:	mov    r8,r12
  41982b:	movabs r9,0xcccccccccccccccd
  419835:	and    r10d,0x1000
  41983c:	jmp    0x419873
  41983e:	xchg   ax,ax
  419840:	cmp    r12,rdi
  419843:	je     0x419870
  419845:	test   r10d,r10d
  419848:	je     0x419870
  41984a:	cmp    WORD PTR [rsi+0x20],0x0
  41984f:	je     0x419870
  419851:	mov    rax,rdi
  419854:	sub    rax,r12
  419857:	cqo    
  419859:	shr    rdx,0x3e
  41985d:	add    rax,rdx
  419860:	and    eax,0x3
  419863:	sub    rax,rdx
  419866:	cmp    rax,0x3
  41986a:	je     0x4199b0
  419870:	mov    r8,rdi
  419873:	mov    rax,rcx
  419876:	lea    rdi,[r8+0x1]
  41987a:	mul    r9
  41987d:	shr    rdx,0x3
  419881:	lea    rax,[rdx+rdx*4]
  419885:	add    rax,rax
  419888:	sub    rcx,rax
  41988b:	add    ecx,0x30
  41988e:	test   rdx,rdx
  419891:	mov    BYTE PTR [r8],cl
  419894:	mov    rcx,rdx
  419897:	jne    0x419840
  419899:	test   ebx,ebx
  41989b:	jle    0x4198d5
  41989d:	mov    rax,r12
  4198a0:	sub    rax,rdi
  4198a3:	add    eax,ebx
  4198a5:	test   eax,eax
  4198a7:	jle    0x4198d5
  4198a9:	sub    eax,0x1
  4198ac:	mov    rdx,rax
  4198af:	lea    rcx,[rdi+rax*1+0x1]
  4198b4:	mov    rax,rdi
  4198b7:	nop    WORD PTR [rax+rax*1+0x0]
  4198c0:	add    rax,0x1
  4198c4:	mov    BYTE PTR [rax-0x1],0x30
  4198c8:	cmp    rax,rcx
  4198cb:	jne    0x4198c0
  4198cd:	movsxd rax,edx
  4198d0:	lea    rdi,[rdi+rax*1+0x1]
  4198d5:	cmp    r12,rdi
  4198d8:	jne    0x4198e5
  4198da:	test   ebx,ebx
  4198dc:	je     0x4198e5
  4198de:	mov    BYTE PTR [rdi],0x30
  4198e1:	add    rdi,0x1
  4198e5:	test   r13d,r13d
  4198e8:	jle    0x41994e
  4198ea:	mov    rax,r12
  4198ed:	sub    rax,rdi
  4198f0:	add    r13d,eax
  4198f3:	test   r13d,r13d
  4198f6:	mov    DWORD PTR [rsi+0xc],r13d
  4198fa:	jle    0x41994e
  4198fc:	test   r11d,0x1c0
  419903:	je     0x41990d
  419905:	sub    r13d,0x1
  419909:	mov    DWORD PTR [rsi+0xc],r13d
  41990d:	test   ebx,ebx
  41990f:	js     0x419a10
  419915:	test   r11d,0x400
  41991c:	jne    0x41994e
  41991e:	mov    eax,DWORD PTR [rsi+0xc]
  419921:	lea    edx,[rax-0x1]
  419924:	test   eax,eax
  419926:	mov    DWORD PTR [rsi+0xc],edx
  419929:	jle    0x41994e
  41992b:	nop    DWORD PTR [rax+rax*1+0x0]
  419930:	mov    rdx,rsi
  419933:	mov    ecx,0x20
  419938:	call   0x418f30
  41993d:	mov    eax,DWORD PTR [rsi+0xc]
  419940:	lea    edx,[rax-0x1]
  419943:	test   eax,eax
  419945:	mov    DWORD PTR [rsi+0xc],edx
  419948:	jg     0x419930
  41994a:	mov    r11d,DWORD PTR [rsi+0x8]
  41994e:	test   r11b,0x80
  419952:	je     0x4199c0
  419954:	lea    rbx,[rdi+0x1]
  419958:	mov    BYTE PTR [rdi],0x2d
  41995b:	cmp    r12,rbx
  41995e:	jae    0x41998e
  419960:	sub    rbx,0x1
  419964:	movsx  ecx,BYTE PTR [rbx]
  419967:	mov    rdx,rsi
  41996a:	call   0x418f30
  41996f:	cmp    rbx,r12
  419972:	jne    0x419960
  419974:	mov    eax,DWORD PTR [rsi+0xc]
  419977:	lea    edx,[rax-0x1]
  41997a:	test   eax,eax
  41997c:	mov    DWORD PTR [rsi+0xc],edx
  41997f:	jle    0x41999b
  419981:	mov    rdx,rsi
  419984:	mov    ecx,0x20
  419989:	call   0x418f30
  41998e:	mov    eax,DWORD PTR [rsi+0xc]
  419991:	lea    edx,[rax-0x1]
  419994:	test   eax,eax
  419996:	mov    DWORD PTR [rsi+0xc],edx
  419999:	jg     0x419981
  41999b:	lea    rsp,[rbp-0x58]
  41999f:	pop    rbx
  4199a0:	pop    rsi
  4199a1:	pop    rdi
  4199a2:	pop    r12
  4199a4:	pop    r13
  4199a6:	pop    rbp
  4199a7:	ret    
  4199a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4199b0:	lea    rdi,[r8+0x2]
  4199b4:	mov    BYTE PTR [r8+0x1],0x2c
  4199b9:	jmp    0x419870
  4199be:	xchg   ax,ax
  4199c0:	test   r11d,0x100
  4199c7:	je     0x4199f0
  4199c9:	lea    rbx,[rdi+0x1]
  4199cd:	mov    BYTE PTR [rdi],0x2b
  4199d0:	jmp    0x41995b
  4199d2:	mov    eax,r8d
  4199d5:	mov    edx,0x55555556
  4199da:	imul   edx
  4199dc:	mov    eax,r8d
  4199df:	sar    eax,0x1f
  4199e2:	sub    edx,eax
  4199e4:	add    r8d,edx
  4199e7:	jmp    0x4197e2
  4199ec:	nop    DWORD PTR [rax+0x0]
  4199f0:	and    r11d,0x40
  4199f4:	mov    rbx,rdi
  4199f7:	je     0x41995b
  4199fd:	add    rbx,0x1
  419a01:	mov    BYTE PTR [rdi],0x20
  419a04:	jmp    0x41995b
  419a09:	nop    DWORD PTR [rax+0x0]
  419a10:	mov    eax,r11d
  419a13:	and    eax,0x600
  419a18:	cmp    eax,0x200
  419a1d:	jne    0x419915
  419a23:	mov    eax,DWORD PTR [rsi+0xc]
  419a26:	lea    ecx,[rax-0x1]
  419a29:	test   eax,eax
  419a2b:	mov    DWORD PTR [rsi+0xc],ecx
  419a2e:	jle    0x41994e
  419a34:	lea    rdx,[rdi+rcx*1+0x1]
  419a39:	mov    rax,rdi
  419a3c:	nop    DWORD PTR [rax+0x0]
  419a40:	add    rax,0x1
  419a44:	mov    BYTE PTR [rax-0x1],0x30
  419a48:	cmp    rax,rdx
  419a4b:	jne    0x419a40
  419a4d:	lea    rdi,[rdi+rcx*1+0x1]
  419a52:	mov    DWORD PTR [rsi+0xc],0xffffffff
  419a59:	jmp    0x41994e
  419a5e:	xchg   ax,ax
  419a60:	neg    rcx
  419a63:	jmp    0x41981c
  419a68:	mov    rdi,r12
  419a6b:	jmp    0x419899
  419a70:	push   rdi
  419a71:	push   rsi
  419a72:	push   rbx
  419a73:	sub    rsp,0x20
  419a77:	mov    rsi,r9
  419a7a:	lea    r9d,[r8-0x1]
  419a7e:	mov    r8d,0x66666667
  419a84:	mov    r10,rdx
  419a87:	mov    eax,r9d
  419a8a:	movsxd rbx,r9d
  419a8d:	sar    r9d,0x1f
  419a91:	imul   r8d
  419a94:	sar    edx,0x2
  419a97:	mov    r8d,edx
  419a9a:	sub    r8d,r9d
  419a9d:	mov    r9d,0x1
  419aa3:	je     0x419acb
  419aa5:	mov    r11d,0x66666667
  419aab:	nop    DWORD PTR [rax+rax*1+0x0]
  419ab0:	mov    eax,r8d
  419ab3:	sar    r8d,0x1f
  419ab7:	add    r9d,0x1
  419abb:	imul   r11d
  419abe:	mov    eax,edx
  419ac0:	sar    eax,0x2
  419ac3:	sub    eax,r8d
  419ac6:	mov    r8d,eax
  419ac9:	jne    0x419ab0
  419acb:	mov    edi,DWORD PTR [rsi+0x2c]
  419ace:	mov    eax,DWORD PTR [rsi+0xc]
  419ad1:	cmp    r9d,edi
  419ad4:	cmovge edi,r9d
  419ad8:	lea    edx,[rdi+0x2]
  419adb:	cmp    eax,edx
  419add:	jg     0x419b32
  419adf:	mov    DWORD PTR [rsi+0xc],0xffffffff
  419ae6:	mov    r9,rsi
  419ae9:	mov    rdx,r10
  419aec:	mov    r8d,0x1
  419af2:	call   0x419350
  419af7:	mov    ecx,DWORD PTR [rsi+0x8]
  419afa:	mov    eax,DWORD PTR [rsi+0x2c]
  419afd:	mov    rdx,rsi
  419b00:	mov    DWORD PTR [rsi+0x10],eax
  419b03:	mov    eax,ecx
  419b05:	and    ecx,0x20
  419b08:	or     eax,0x1c0
  419b0d:	or     ecx,0x45
  419b10:	mov    DWORD PTR [rsi+0x8],eax
  419b13:	call   0x418f30
  419b18:	lea    r9d,[rdi+0x1]
  419b1c:	add    DWORD PTR [rsi+0xc],r9d
  419b20:	mov    rdx,rsi
  419b23:	mov    rcx,rbx
  419b26:	add    rsp,0x20
  419b2a:	pop    rbx
  419b2b:	pop    rsi
  419b2c:	pop    rdi
  419b2d:	jmp    0x4197a0
  419b32:	sub    eax,edx
  419b34:	mov    DWORD PTR [rsi+0xc],eax
  419b37:	jmp    0x419ae6
  419b39:	nop    DWORD PTR [rax+0x0]
  419b40:	push   rsi
  419b41:	push   rbx
  419b42:	sub    rsp,0x68
  419b46:	mov    eax,DWORD PTR [rdx+0x10]
  419b49:	fld    TBYTE PTR [rcx]
  419b4b:	mov    rbx,rdx
  419b4e:	test   eax,eax
  419b50:	lea    r8d,[rax+0x1]
  419b54:	js     0x419bc0
  419b56:	lea    rdx,[rsp+0x30]
  419b5b:	lea    r9,[rsp+0x4c]
  419b60:	mov    ecx,0x2
  419b65:	fstp   TBYTE PTR [rsp+0x50]
  419b69:	mov    rax,QWORD PTR [rsp+0x50]
  419b6e:	mov    QWORD PTR [rsp+0x30],rax
  419b73:	mov    rax,QWORD PTR [rsp+0x58]
  419b78:	mov    QWORD PTR [rsp+0x38],rax
  419b7d:	lea    rax,[rsp+0x48]
  419b82:	mov    QWORD PTR [rsp+0x20],rax
  419b87:	call   0x418e30
  419b8c:	mov    r8d,DWORD PTR [rsp+0x4c]
  419b91:	mov    rsi,rax
  419b94:	cmp    r8d,0xffff8000
  419b9b:	je     0x419bd0
  419b9d:	mov    ecx,DWORD PTR [rsp+0x48]
  419ba1:	mov    r9,rbx
  419ba4:	mov    rdx,rax
  419ba7:	call   0x419a70
  419bac:	mov    rcx,rsi
  419baf:	call   0x41b140
  419bb4:	nop
  419bb5:	add    rsp,0x68
  419bb9:	pop    rbx
  419bba:	pop    rsi
  419bbb:	ret    
  419bbc:	nop    DWORD PTR [rax+0x0]
  419bc0:	mov    DWORD PTR [rdx+0x10],0x6
  419bc7:	mov    r8d,0x7
  419bcd:	jmp    0x419b56
  419bcf:	nop
  419bd0:	mov    ecx,DWORD PTR [rsp+0x48]
  419bd4:	mov    r8,rbx
  419bd7:	mov    rdx,rax
  419bda:	call   0x4191c0
  419bdf:	mov    rcx,rsi
  419be2:	call   0x41b140
  419be7:	nop
  419be8:	add    rsp,0x68
  419bec:	pop    rbx
  419bed:	pop    rsi
  419bee:	ret    
  419bef:	nop
  419bf0:	push   rsi
  419bf1:	push   rbx
  419bf2:	sub    rsp,0x78
  419bf6:	mov    r8d,DWORD PTR [rdx+0x10]
  419bfa:	fld    TBYTE PTR [rcx]
  419bfc:	mov    rbx,rdx
  419bff:	test   r8d,r8d
  419c02:	js     0x419d40
  419c08:	je     0x419d20
  419c0e:	lea    rdx,[rsp+0x40]
  419c13:	lea    r9,[rsp+0x5c]
  419c18:	mov    ecx,0x2
  419c1d:	fstp   TBYTE PTR [rsp+0x60]
  419c21:	mov    rax,QWORD PTR [rsp+0x60]
  419c26:	mov    QWORD PTR [rsp+0x40],rax
  419c2b:	mov    rax,QWORD PTR [rsp+0x68]
  419c30:	mov    QWORD PTR [rsp+0x48],rax
  419c35:	lea    rax,[rsp+0x58]
  419c3a:	mov    QWORD PTR [rsp+0x20],rax
  419c3f:	call   0x418e30
  419c44:	mov    r8d,DWORD PTR [rsp+0x5c]
  419c49:	mov    rsi,rax
  419c4c:	cmp    r8d,0xffff8000
  419c53:	je     0x419d60
  419c59:	cmp    r8d,0xfffffffd
  419c5d:	jl     0x419ce0
  419c63:	mov    eax,DWORD PTR [rbx+0x10]
  419c66:	cmp    r8d,eax
  419c69:	jg     0x419ce0
  419c6b:	test   BYTE PTR [rbx+0x9],0x8
  419c6f:	jne    0x419d52
  419c75:	mov    rcx,rsi
  419c78:	mov    DWORD PTR [rsp+0x3c],r8d
  419c7d:	call   0x41d7f8
  419c82:	mov    r8d,DWORD PTR [rsp+0x3c]
  419c87:	sub    eax,r8d
  419c8a:	test   eax,eax
  419c8c:	mov    DWORD PTR [rbx+0x10],eax
  419c8f:	js     0x419d71
  419c95:	mov    ecx,DWORD PTR [rsp+0x58]
  419c99:	mov    rdx,rsi
  419c9c:	mov    r9,rbx
  419c9f:	call   0x419350
  419ca4:	mov    eax,DWORD PTR [rbx+0xc]
  419ca7:	lea    edx,[rax-0x1]
  419caa:	test   eax,eax
  419cac:	mov    DWORD PTR [rbx+0xc],edx
  419caf:	jle    0x419d0d
  419cb1:	mov    rdx,rbx
  419cb4:	mov    ecx,0x20
  419cb9:	call   0x418f30
  419cbe:	mov    r8d,DWORD PTR [rbx+0xc]
  419cc2:	lea    r9d,[r8-0x1]
  419cc6:	test   r8d,r8d
  419cc9:	mov    DWORD PTR [rbx+0xc],r9d
  419ccd:	jg     0x419cb1
  419ccf:	mov    rcx,rsi
  419cd2:	call   0x41b140
  419cd7:	nop
  419cd8:	add    rsp,0x78
  419cdc:	pop    rbx
  419cdd:	pop    rsi
  419cde:	ret    
  419cdf:	nop
  419ce0:	test   BYTE PTR [rbx+0x9],0x8
  419ce4:	jne    0x419d32
  419ce6:	mov    rcx,rsi
  419ce9:	mov    DWORD PTR [rsp+0x3c],r8d
  419cee:	call   0x41d7f8
  419cf3:	mov    r8d,DWORD PTR [rsp+0x3c]
  419cf8:	sub    eax,0x1
  419cfb:	mov    DWORD PTR [rbx+0x10],eax
  419cfe:	mov    ecx,DWORD PTR [rsp+0x58]
  419d02:	mov    r9,rbx
  419d05:	mov    rdx,rsi
  419d08:	call   0x419a70
  419d0d:	mov    rcx,rsi
  419d10:	call   0x41b140
  419d15:	nop
  419d16:	add    rsp,0x78
  419d1a:	pop    rbx
  419d1b:	pop    rsi
  419d1c:	ret    
  419d1d:	nop    DWORD PTR [rax]
  419d20:	mov    DWORD PTR [rdx+0x10],0x1
  419d27:	mov    r8d,0x1
  419d2d:	jmp    0x419c0e
  419d32:	sub    DWORD PTR [rbx+0x10],0x1
  419d36:	jmp    0x419cfe
  419d38:	nop    DWORD PTR [rax+rax*1+0x0]
  419d40:	mov    DWORD PTR [rdx+0x10],0x6
  419d47:	mov    r8d,0x6
  419d4d:	jmp    0x419c0e
  419d52:	sub    eax,r8d
  419d55:	mov    DWORD PTR [rbx+0x10],eax
  419d58:	jmp    0x419c95
  419d5d:	nop    DWORD PTR [rax]
  419d60:	mov    ecx,DWORD PTR [rsp+0x58]
  419d64:	mov    r8,rbx
  419d67:	mov    rdx,rax
  419d6a:	call   0x4191c0
  419d6f:	jmp    0x419d0d
  419d71:	mov    edx,DWORD PTR [rbx+0xc]
  419d74:	test   edx,edx
  419d76:	jle    0x419c95
  419d7c:	add    eax,edx
  419d7e:	mov    DWORD PTR [rbx+0xc],eax
  419d81:	jmp    0x419c95
  419d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419d90:	push   rbp
  419d91:	push   r14
  419d93:	push   r13
  419d95:	push   r12
  419d97:	push   rdi
  419d98:	push   rsi
  419d99:	push   rbx
  419d9a:	mov    rbp,rsp
  419d9d:	sub    rsp,0x20
  419da1:	mov    r10d,0x12
  419da7:	mov    eax,0x18
  419dac:	cmp    ecx,0x6f
  419daf:	mov    rbx,r8
  419db2:	mov    r8d,DWORD PTR [r8+0x10]
  419db6:	mov    r11d,ecx
  419db9:	setne  cl
  419dbc:	mov    edi,DWORD PTR [rbx+0x8]
  419dbf:	movzx  ecx,cl
  419dc2:	cmovne eax,r10d
  419dc6:	mov    r10b,0x0
  419dc9:	add    ecx,0x3
  419dcc:	test   r8d,r8d
  419dcf:	mov    r9,rdx
  419dd2:	cmovns r10d,r8d
  419dd6:	add    r10d,eax
  419dd9:	test   edi,0x1000
  419ddf:	je     0x419dec
  419de1:	cmp    WORD PTR [rbx+0x20],0x0
  419de6:	jne    0x419fb3
  419dec:	movsxd r12,DWORD PTR [rbx+0xc]
  419df0:	movsxd rax,r10d
  419df3:	cmp    r10d,r12d
  419df6:	cmovl  rax,r12
  419dfa:	add    rax,0x1e
  419dfe:	and    rax,0xfffffffffffffff0
  419e02:	call   0x4182b0
  419e07:	xor    edx,edx
  419e09:	sub    rsp,rax
  419e0c:	cmp    r11d,0x6f
  419e10:	lea    rsi,[rsp+0x20]
  419e15:	setne  dl
  419e18:	test   r9,r9
  419e1b:	lea    edx,[rdx*8+0x7]
  419e22:	mov    r10,rsi
  419e25:	je     0x41a0d2
  419e2b:	mov    r13d,r11d
  419e2e:	and    r13d,0x20
  419e32:	jmp    0x419e40
  419e34:	shr    r9,cl
  419e37:	mov    BYTE PTR [r10-0x1],r14b
  419e3b:	test   r9,r9
  419e3e:	je     0x419e65
  419e40:	mov    eax,edx
  419e42:	add    r10,0x1
  419e46:	and    eax,r9d
  419e49:	lea    r14d,[rax+0x30]
  419e4d:	cmp    r14b,0x39
  419e51:	jbe    0x419e34
  419e53:	add    eax,0x37
  419e56:	shr    r9,cl
  419e59:	or     eax,r13d
  419e5c:	test   r9,r9
  419e5f:	mov    BYTE PTR [r10-0x1],al
  419e63:	jne    0x419e40
  419e65:	cmp    rsi,r10
  419e68:	je     0x41a0d2
  419e6e:	test   r8d,r8d
  419e71:	jle    0x41a032
  419e77:	mov    rax,rsi
  419e7a:	sub    rax,r10
  419e7d:	add    eax,r8d
  419e80:	test   eax,eax
  419e82:	jle    0x41a032
  419e88:	sub    eax,0x1
  419e8b:	mov    rdx,rax
  419e8e:	lea    rcx,[r10+rax*1+0x1]
  419e93:	mov    rax,r10
  419e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419ea0:	add    rax,0x1
  419ea4:	mov    BYTE PTR [rax-0x1],0x30
  419ea8:	cmp    rax,rcx
  419eab:	jne    0x419ea0
  419ead:	movsxd rax,edx
  419eb0:	lea    r10,[r10+rax*1+0x1]
  419eb5:	cmp    rsi,r10
  419eb8:	jne    0x419ed0
  419eba:	test   r8d,r8d
  419ebd:	je     0x419ed0
  419ebf:	mov    BYTE PTR [r10],0x30
  419ec3:	add    r10,0x1
  419ec7:	nop    WORD PTR [rax+rax*1+0x0]
  419ed0:	mov    rax,r10
  419ed3:	sub    rax,rsi
  419ed6:	cmp    r12d,eax
  419ed9:	jle    0x41a000
  419edf:	sub    r12d,eax
  419ee2:	test   r12d,r12d
  419ee5:	mov    DWORD PTR [rbx+0xc],r12d
  419ee9:	jle    0x41a137
  419eef:	cmp    r11d,0x6f
  419ef3:	mov    edx,DWORD PTR [rbx+0x8]
  419ef6:	je     0x41a0c0
  419efc:	test   dh,0x8
  419eff:	je     0x41a080
  419f05:	lea    r13d,[r12-0x2]
  419f0a:	test   r13d,r13d
  419f0d:	jle    0x419f18
  419f0f:	test   r8d,r8d
  419f12:	js     0x419fcd
  419f18:	test   r13d,r13d
  419f1b:	mov    BYTE PTR [r10],r11b
  419f1e:	lea    rdi,[r10+0x2]
  419f22:	mov    BYTE PTR [r10+0x1],0x30
  419f27:	jle    0x41a028
  419f2d:	and    dh,0x4
  419f30:	jne    0x41a053
  419f36:	lea    r14d,[r13-0x1]
  419f3a:	mov    r12d,r14d
  419f3d:	nop    DWORD PTR [rax]
  419f40:	sub    r12d,0x1
  419f44:	mov    rdx,rbx
  419f47:	mov    ecx,0x20
  419f4c:	call   0x418f30
  419f51:	lea    eax,[r12+0x1]
  419f56:	test   eax,eax
  419f58:	jg     0x419f40
  419f5a:	test   r14d,r14d
  419f5d:	lea    r13d,[r14-0x1]
  419f61:	mov    r12d,0x0
  419f67:	cmovns r12d,r14d
  419f6b:	sub    r13d,r12d
  419f6e:	cmp    rsi,rdi
  419f71:	jb     0x41a060
  419f77:	nop    WORD PTR [rax+rax*1+0x0]
  419f80:	test   r13d,r13d
  419f83:	lea    esi,[r13-0x1]
  419f87:	jle    0x419fa5
  419f89:	nop    DWORD PTR [rax+0x0]
  419f90:	mov    rdx,rbx
  419f93:	mov    ecx,0x20
  419f98:	sub    esi,0x1
  419f9b:	call   0x418f30
  419fa0:	cmp    esi,0xffffffff
  419fa3:	jne    0x419f90
  419fa5:	mov    rsp,rbp
  419fa8:	pop    rbx
  419fa9:	pop    rsi
  419faa:	pop    rdi
  419fab:	pop    r12
  419fad:	pop    r13
  419faf:	pop    r14
  419fb1:	pop    rbp
  419fb2:	ret    
  419fb3:	mov    eax,r10d
  419fb6:	mov    edx,0x55555556
  419fbb:	imul   edx
  419fbd:	mov    eax,r10d
  419fc0:	sar    eax,0x1f
  419fc3:	sub    edx,eax
  419fc5:	add    r10d,edx
  419fc8:	jmp    0x419dec
  419fcd:	mov    eax,edx
  419fcf:	and    eax,0x600
  419fd4:	cmp    eax,0x200
  419fd9:	je     0x41a0e0
  419fdf:	mov    r12d,r13d
  419fe2:	test   dh,0x8
  419fe5:	mov    r13d,r12d
  419fe8:	mov    rdi,r10
  419feb:	je     0x419f2d
  419ff1:	mov    r13d,r12d
  419ff4:	jmp    0x419f18
  419ff9:	nop    DWORD PTR [rax+0x0]
  41a000:	mov    DWORD PTR [rbx+0xc],0xffffffff
  41a007:	mov    r13d,0xffffffff
  41a00d:	cmp    r11d,0x6f
  41a011:	je     0x41a025
  41a013:	mov    edx,DWORD PTR [rbx+0x8]
  41a016:	mov    eax,edx
  41a018:	and    eax,0x800
  41a01d:	test   eax,eax
  41a01f:	jne    0x419f18
  41a025:	mov    rdi,r10
  41a028:	cmp    rsi,rdi
  41a02b:	jb     0x41a060
  41a02d:	jmp    0x419fa5
  41a032:	cmp    r11d,0x6f
  41a036:	jne    0x419eb5
  41a03c:	test   BYTE PTR [rbx+0x9],0x8
  41a040:	je     0x419eb5
  41a046:	mov    BYTE PTR [r10],0x30
  41a04a:	add    r10,0x1
  41a04e:	jmp    0x419eb5
  41a053:	cmp    rsi,rdi
  41a056:	jae    0x41a13f
  41a05c:	nop    DWORD PTR [rax+0x0]
  41a060:	sub    rdi,0x1
  41a064:	movsx  ecx,BYTE PTR [rdi]
  41a067:	mov    rdx,rbx
  41a06a:	call   0x418f30
  41a06f:	cmp    rsi,rdi
  41a072:	jb     0x41a060
  41a074:	jmp    0x419f80
  41a079:	nop    DWORD PTR [rax+0x0]
  41a080:	test   r8d,r8d
  41a083:	jns    0x419fe2
  41a089:	mov    eax,edx
  41a08b:	and    eax,0x600
  41a090:	cmp    eax,0x200
  41a095:	je     0x41a12e
  41a09b:	cmp    r11d,0x6f
  41a09f:	jne    0x419fe2
  41a0a5:	and    dh,0x4
  41a0a8:	jne    0x41a0ca
  41a0aa:	lea    r14d,[r12-0x1]
  41a0af:	mov    rdi,r10
  41a0b2:	jmp    0x419f3a
  41a0b7:	nop    WORD PTR [rax+rax*1+0x0]
  41a0c0:	test   r8d,r8d
  41a0c3:	js     0x41a089
  41a0c5:	and    dh,0x4
  41a0c8:	je     0x41a0aa
  41a0ca:	mov    rdi,r10
  41a0cd:	mov    r13d,r12d
  41a0d0:	jmp    0x41a06f
  41a0d2:	and    edi,0xfffff7ff
  41a0d8:	mov    DWORD PTR [rbx+0x8],edi
  41a0db:	jmp    0x419e6e
  41a0e0:	lea    r8d,[r12-0x3]
  41a0e5:	mov    r12d,r8d
  41a0e8:	mov    eax,r12d
  41a0eb:	lea    rcx,[r10+rax*1+0x1]
  41a0f0:	mov    rax,r10
  41a0f3:	add    rax,0x1
  41a0f7:	mov    BYTE PTR [rax-0x1],0x30
  41a0fb:	cmp    rax,rcx
  41a0fe:	jne    0x41a0f3
  41a100:	movsxd rax,r8d
  41a103:	cmp    r11d,0x6f
  41a107:	lea    r10,[r10+rax*1+0x1]
  41a10c:	je     0x41a120
  41a10e:	mov    eax,edx
  41a110:	mov    r13d,0xffffffff
  41a116:	and    eax,0x800
  41a11b:	jmp    0x41a01d
  41a120:	mov    rdi,r10
  41a123:	mov    r13d,0xffffffff
  41a129:	jmp    0x41a028
  41a12e:	sub    r12d,0x1
  41a132:	mov    r8d,r12d
  41a135:	jmp    0x41a0e8
  41a137:	mov    r13d,r12d
  41a13a:	jmp    0x41a00d
  41a13f:	lea    esi,[r13-0x1]
  41a143:	jmp    0x419f90
  41a148:	nop    DWORD PTR [rax+rax*1+0x0]
  41a150:	push   r13
  41a152:	push   r12
  41a154:	push   rbp
  41a155:	push   rdi
  41a156:	push   rsi
  41a157:	push   rbx
  41a158:	sub    rsp,0x68
  41a15c:	mov    r9,QWORD PTR [rcx]
  41a15f:	mov    r10d,DWORD PTR [rcx+0x8]
  41a163:	mov    rbx,rdx
  41a166:	mov    rax,r9
  41a169:	mov    QWORD PTR [rsp+0x30],r9
  41a16e:	mov    DWORD PTR [rsp+0x38],r10d
  41a173:	shr    rax,0x20
  41a177:	mov    r8,r10
  41a17a:	and    eax,0x7fffffff
  41a17f:	or     r9d,eax
  41a182:	lea    eax,[r10+r10*1]
  41a186:	mov    edx,r9d
  41a189:	neg    edx
  41a18b:	and    eax,0xfffe
  41a190:	or     edx,r9d
  41a193:	shr    edx,0x1f
  41a196:	or     edx,eax
  41a198:	mov    eax,0xfffe
  41a19d:	sub    eax,edx
  41a19f:	sar    eax,0x10
  41a1a2:	test   eax,eax
  41a1a4:	jne    0x41a590
  41a1aa:	movzx  esi,WORD PTR [rsp+0x38]
  41a1af:	mov    ecx,esi
  41a1b1:	and    ecx,0x8000
  41a1b7:	je     0x41a1c0
  41a1b9:	or     DWORD PTR [rbx+0x8],0x80
  41a1c0:	and    r8w,0x7fff
  41a1c6:	cmp    r8w,0x7fff
  41a1cc:	jne    0x41a1f0
  41a1ce:	test   r9d,r9d
  41a1d1:	jne    0x41a1f0
  41a1d3:	lea    rdx,[rip+0xd21a]        # 0x4273f4
  41a1da:	mov    r8,rbx
  41a1dd:	call   0x4191c0
  41a1e2:	jmp    0x41a565
  41a1e7:	nop    WORD PTR [rax+rax*1+0x0]
  41a1f0:	and    si,0x7fff
  41a1f5:	jne    0x41a320
  41a1fb:	mov    rax,QWORD PTR [rsp+0x30]
  41a200:	test   rax,rax
  41a203:	jne    0x41a5af
  41a209:	mov    r9d,DWORD PTR [rbx+0x10]
  41a20d:	cmp    r9d,0xe
  41a211:	jbe    0x41a62c
  41a217:	xor    esi,esi
  41a219:	mov    r8d,DWORD PTR [rbx+0x8]
  41a21d:	lea    rbp,[rsp+0x40]
  41a222:	test   r9d,r9d
  41a225:	jle    0x41a63c
  41a22b:	lea    rax,[rbp+0x1]
  41a22f:	mov    BYTE PTR [rsp+0x40],0x2e
  41a234:	mov    r10d,DWORD PTR [rbx+0xc]
  41a238:	lea    rdi,[rax+0x1]
  41a23c:	mov    BYTE PTR [rax],0x30
  41a23f:	mov    r12d,0x2
  41a245:	test   r10d,r10d
  41a248:	jg     0x41a44c
  41a24e:	xchg   ax,ax
  41a250:	test   r8b,0x80
  41a254:	jne    0x41a510
  41a25a:	test   r8d,0x100
  41a261:	jne    0x41a600
  41a267:	and    r8d,0x40
  41a26b:	jne    0x41a612
  41a271:	mov    rdx,rbx
  41a274:	mov    ecx,0x30
  41a279:	call   0x418f30
  41a27e:	mov    ecx,DWORD PTR [rbx+0x8]
  41a281:	mov    rdx,rbx
  41a284:	and    ecx,0x20
  41a287:	or     ecx,0x58
  41a28a:	call   0x418f30
  41a28f:	mov    eax,DWORD PTR [rbx+0xc]
  41a292:	test   eax,eax
  41a294:	jle    0x41a2bc
  41a296:	test   BYTE PTR [rbx+0x9],0x2
  41a29a:	je     0x41a2bc
  41a29c:	sub    eax,0x1
  41a29f:	mov    DWORD PTR [rbx+0xc],eax
  41a2a2:	mov    rdx,rbx
  41a2a5:	mov    ecx,0x30
  41a2aa:	call   0x418f30
  41a2af:	mov    eax,DWORD PTR [rbx+0xc]
  41a2b2:	lea    edx,[rax-0x1]
  41a2b5:	test   eax,eax
  41a2b7:	mov    DWORD PTR [rbx+0xc],edx
  41a2ba:	jg     0x41a2a2
  41a2bc:	cmp    rdi,rbp
  41a2bf:	lea    r13,[rsp+0x2e]
  41a2c4:	ja     0x41a2f9
  41a2c6:	jmp    0x41a52f
  41a2cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41a2d0:	movzx  eax,WORD PTR [rbx+0x20]
  41a2d4:	test   ax,ax
  41a2d7:	mov    WORD PTR [rsp+0x2e],ax
  41a2dc:	je     0x41a2f0
  41a2de:	mov    r8,rbx
  41a2e1:	mov    edx,0x1
  41a2e6:	mov    rcx,r13
  41a2e9:	call   0x418f90
  41a2ee:	xchg   ax,ax
  41a2f0:	cmp    rdi,rbp
  41a2f3:	je     0x41a52f
  41a2f9:	sub    rdi,0x1
  41a2fd:	movsx  ecx,BYTE PTR [rdi]
  41a300:	cmp    ecx,0x2e
  41a303:	je     0x41a572
  41a309:	cmp    ecx,0x2c
  41a30c:	je     0x41a2d0
  41a30e:	mov    rdx,rbx
  41a311:	call   0x418f30
  41a316:	jmp    0x41a2f0
  41a318:	nop    DWORD PTR [rax+rax*1+0x0]
  41a320:	mov    r9d,DWORD PTR [rbx+0x10]
  41a324:	sub    si,0x3fff
  41a329:	mov    rax,QWORD PTR [rsp+0x30]
  41a32e:	cmp    r9d,0xe
  41a332:	ja     0x41a5dd
  41a338:	test   rax,rax
  41a33b:	js     0x41a345
  41a33d:	nop    DWORD PTR [rax]
  41a340:	add    rax,rax
  41a343:	jns    0x41a340
  41a345:	mov    ecx,0xe
  41a34a:	mov    edx,0x4
  41a34f:	shr    rax,1
  41a352:	sub    ecx,r9d
  41a355:	shl    ecx,0x2
  41a358:	shl    rdx,cl
  41a35b:	add    rax,rdx
  41a35e:	js     0x41a624
  41a364:	add    rax,rax
  41a367:	mov    ecx,0xf
  41a36c:	sub    ecx,r9d
  41a36f:	shl    ecx,0x2
  41a372:	shr    rax,cl
  41a375:	mov    r8d,DWORD PTR [rbx+0x8]
  41a379:	lea    rbp,[rsp+0x40]
  41a37e:	mov    rdi,rbp
  41a381:	mov    r11d,r8d
  41a384:	mov    r10d,r8d
  41a387:	and    r11d,0x800
  41a38e:	and    r10d,0x20
  41a392:	jmp    0x41a3c3
  41a394:	mov    ecx,DWORD PTR [rbx+0x10]
  41a397:	test   ecx,ecx
  41a399:	jle    0x41a3a1
  41a39b:	sub    ecx,0x1
  41a39e:	mov    DWORD PTR [rbx+0x10],ecx
  41a3a1:	shr    rax,0x4
  41a3a5:	mov    r9,rdi
  41a3a8:	test   edx,edx
  41a3aa:	je     0x41a414
  41a3ac:	cmp    edx,0x9
  41a3af:	lea    rdi,[r9+0x1]
  41a3b3:	jle    0x41a427
  41a3b5:	add    edx,0x37
  41a3b8:	or     edx,r10d
  41a3bb:	mov    BYTE PTR [r9],dl
  41a3be:	test   rax,rax
  41a3c1:	je     0x41a430
  41a3c3:	mov    edx,eax
  41a3c5:	and    edx,0xf
  41a3c8:	cmp    edx,eax
  41a3ca:	jne    0x41a394
  41a3cc:	cmp    rdi,rbp
  41a3cf:	ja     0x41a3e2
  41a3d1:	test   r11d,r11d
  41a3d4:	jne    0x41a3e2
  41a3d6:	mov    r12d,DWORD PTR [rbx+0x10]
  41a3da:	mov    r9,rdi
  41a3dd:	test   r12d,r12d
  41a3e0:	jle    0x41a3e9
  41a3e2:	lea    r9,[rdi+0x1]
  41a3e6:	mov    BYTE PTR [rdi],0x2e
  41a3e9:	cmp    rax,0x1
  41a3ed:	jbe    0x41a5f9
  41a3f3:	lea    ecx,[rsi-0x1]
  41a3f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a400:	shr    rax,1
  41a403:	mov    esi,ecx
  41a405:	cmp    rax,0x1
  41a409:	lea    ecx,[rsi-0x1]
  41a40c:	jne    0x41a400
  41a40e:	xor    al,al
  41a410:	test   edx,edx
  41a412:	jne    0x41a3ac
  41a414:	cmp    r9,rbp
  41a417:	ja     0x41a423
  41a419:	mov    ecx,DWORD PTR [rbx+0x10]
  41a41c:	mov    rdi,r9
  41a41f:	test   ecx,ecx
  41a421:	js     0x41a3be
  41a423:	lea    rdi,[r9+0x1]
  41a427:	add    edx,0x30
  41a42a:	jmp    0x41a3bb
  41a42c:	nop    DWORD PTR [rax+0x0]
  41a430:	cmp    rdi,rbp
  41a433:	je     0x41a633
  41a439:	mov    r10d,DWORD PTR [rbx+0xc]
  41a43d:	mov    r12d,0x2
  41a443:	test   r10d,r10d
  41a446:	jle    0x41a250
  41a44c:	mov    edx,DWORD PTR [rbx+0x10]
  41a44f:	mov    rax,rdi
  41a452:	movsx  r11d,si
  41a456:	sub    rax,rbp
  41a459:	lea    ecx,[rdx+rax*1]
  41a45c:	test   edx,edx
  41a45e:	mov    edx,r8d
  41a461:	cmovg  eax,ecx
  41a464:	and    edx,0x1c0
  41a46a:	mov    ecx,0x66666667
  41a46f:	cmp    edx,0x1
  41a472:	sbb    edx,edx
  41a474:	lea    r9d,[rax+rdx*1+0x6]
  41a479:	mov    eax,r11d
  41a47c:	imul   ecx
  41a47e:	mov    eax,r11d
  41a481:	sar    eax,0x1f
  41a484:	mov    ecx,edx
  41a486:	sar    ecx,0x2
  41a489:	sub    ecx,eax
  41a48b:	je     0x41a4b0
  41a48d:	mov    r11d,0x66666667
  41a493:	mov    eax,ecx
  41a495:	sar    ecx,0x1f
  41a498:	add    r9d,0x1
  41a49c:	imul   r11d
  41a49f:	add    r12d,0x1
  41a4a3:	sar    edx,0x2
  41a4a6:	sub    edx,ecx
  41a4a8:	mov    ecx,edx
  41a4aa:	jne    0x41a493
  41a4ac:	movsx  r12d,r12w
  41a4b0:	cmp    r10d,r9d
  41a4b3:	jle    0x41a580
  41a4b9:	sub    r10d,r9d
  41a4bc:	test   r8d,0x600
  41a4c3:	jne    0x41a5f0
  41a4c9:	lea    eax,[r10-0x1]
  41a4cd:	test   r10d,r10d
  41a4d0:	mov    DWORD PTR [rbx+0xc],eax
  41a4d3:	jle    0x41a250
  41a4d9:	nop    DWORD PTR [rax+0x0]
  41a4e0:	mov    rdx,rbx
  41a4e3:	mov    ecx,0x20
  41a4e8:	call   0x418f30
  41a4ed:	mov    eax,DWORD PTR [rbx+0xc]
  41a4f0:	lea    edx,[rax-0x1]
  41a4f3:	test   eax,eax
  41a4f5:	mov    DWORD PTR [rbx+0xc],edx
  41a4f8:	jg     0x41a4e0
  41a4fa:	mov    r8d,DWORD PTR [rbx+0x8]
  41a4fe:	test   r8b,0x80
  41a502:	je     0x41a25a
  41a508:	nop    DWORD PTR [rax+rax*1+0x0]
  41a510:	mov    rdx,rbx
  41a513:	mov    ecx,0x2d
  41a518:	call   0x418f30
  41a51d:	jmp    0x41a271
  41a522:	mov    rdx,rbx
  41a525:	mov    ecx,0x30
  41a52a:	call   0x418f30
  41a52f:	mov    eax,DWORD PTR [rbx+0x10]
  41a532:	lea    edx,[rax-0x1]
  41a535:	test   eax,eax
  41a537:	mov    DWORD PTR [rbx+0x10],edx
  41a53a:	jg     0x41a522
  41a53c:	mov    ecx,DWORD PTR [rbx+0x8]
  41a53f:	mov    rdx,rbx
  41a542:	and    ecx,0x20
  41a545:	or     ecx,0x50
  41a548:	call   0x418f30
  41a54d:	add    DWORD PTR [rbx+0xc],r12d
  41a551:	or     DWORD PTR [rbx+0x8],0x1c0
  41a558:	movsx  rcx,si
  41a55c:	mov    rdx,rbx
  41a55f:	call   0x4197a0
  41a564:	nop
  41a565:	add    rsp,0x68
  41a569:	pop    rbx
  41a56a:	pop    rsi
  41a56b:	pop    rdi
  41a56c:	pop    rbp
  41a56d:	pop    r12
  41a56f:	pop    r13
  41a571:	ret    
  41a572:	mov    rcx,rbx
  41a575:	call   0x419260
  41a57a:	jmp    0x41a2f0
  41a57f:	nop
  41a580:	mov    DWORD PTR [rbx+0xc],0xffffffff
  41a587:	jmp    0x41a250
  41a58c:	nop    DWORD PTR [rax+0x0]
  41a590:	lea    rdx,[rip+0xce59]        # 0x4273f0
  41a597:	mov    r8,rbx
  41a59a:	xor    ecx,ecx
  41a59c:	call   0x4191c0
  41a5a1:	nop
  41a5a2:	add    rsp,0x68
  41a5a6:	pop    rbx
  41a5a7:	pop    rsi
  41a5a8:	pop    rdi
  41a5a9:	pop    rbp
  41a5aa:	pop    r12
  41a5ac:	pop    r13
  41a5ae:	ret    
  41a5af:	js     0x41a651
  41a5b5:	mov    edx,0xffffc001
  41a5ba:	nop    WORD PTR [rax+rax*1+0x0]
  41a5c0:	mov    esi,edx
  41a5c2:	sub    edx,0x1
  41a5c5:	add    rax,rax
  41a5c8:	jns    0x41a5c0
  41a5ca:	mov    r9d,DWORD PTR [rbx+0x10]
  41a5ce:	cmp    r9d,0xe
  41a5d2:	jbe    0x41a345
  41a5d8:	jmp    0x41a375
  41a5dd:	test   rax,rax
  41a5e0:	jne    0x41a375
  41a5e6:	jmp    0x41a219
  41a5eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41a5f0:	mov    DWORD PTR [rbx+0xc],r10d
  41a5f4:	jmp    0x41a250
  41a5f9:	xor    eax,eax
  41a5fb:	jmp    0x41a3a8
  41a600:	mov    rdx,rbx
  41a603:	mov    ecx,0x2b
  41a608:	call   0x418f30
  41a60d:	jmp    0x41a271
  41a612:	mov    rdx,rbx
  41a615:	mov    ecx,0x20
  41a61a:	call   0x418f30
  41a61f:	jmp    0x41a271
  41a624:	add    esi,0x1
  41a627:	jmp    0x41a367
  41a62c:	xor    eax,eax
  41a62e:	jmp    0x41a340
  41a633:	mov    r9d,DWORD PTR [rbx+0x10]
  41a637:	jmp    0x41a222
  41a63c:	test   r8d,0x800
  41a643:	mov    rax,rbp
  41a646:	je     0x41a234
  41a64c:	jmp    0x41a22b
  41a651:	mov    esi,0xffffc002
  41a656:	jmp    0x41a5ca
  41a65b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a660:	push   r15
  41a662:	push   r14
  41a664:	push   r13
  41a666:	push   r12
  41a668:	push   rbp
  41a669:	push   rdi
  41a66a:	push   rsi
  41a66b:	push   rbx
  41a66c:	sub    rsp,0xb8
  41a673:	mov    r13,QWORD PTR [rsp+0x120]
  41a67b:	mov    r15d,ecx
  41a67e:	mov    rdi,rdx
  41a681:	mov    esi,r8d
  41a684:	mov    rbx,r9
  41a687:	and    r15d,0x6000
  41a68e:	call   0x41d9a0
  41a693:	mov    eax,DWORD PTR [rax]
  41a695:	lea    rcx,[rip+0xcd71]        # 0x42740d
  41a69c:	xor    edx,edx
  41a69e:	mov    QWORD PTR [rsp+0x80],rdi
  41a6a6:	mov    DWORD PTR [rsp+0x88],r15d
  41a6ae:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  41a6b9:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41a6c4:	mov    DWORD PTR [rsp+0x34],eax
  41a6c8:	xor    eax,eax
  41a6ca:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  41a6d5:	mov    WORD PTR [rsp+0x98],ax
  41a6dd:	mov    DWORD PTR [rsp+0x9c],0x0
  41a6e8:	mov    WORD PTR [rsp+0xa0],dx
  41a6f0:	mov    DWORD PTR [rsp+0xa4],0x0
  41a6fb:	mov    DWORD PTR [rsp+0xa8],esi
  41a702:	call   0x41d888
  41a707:	test   rax,rax
  41a70a:	je     0x41a71c
  41a70c:	movsx  edx,BYTE PTR [rax]
  41a70f:	mov    eax,0x2
  41a714:	sub    edx,0x30
  41a717:	cmp    edx,0x2
  41a71a:	jbe    0x41a729
  41a71c:	call   0x41daf0
  41a721:	and    eax,0x1
  41a724:	neg    eax
  41a726:	add    eax,0x3
  41a729:	lea    rdi,[rsp+0x70]
  41a72e:	mov    DWORD PTR [rsp+0xac],eax
  41a735:	movzx  eax,BYTE PTR [rbx]
  41a738:	lea    rsi,[rsp+0x6e]
  41a73d:	lea    r12,[rsp+0x80]
  41a745:	lea    rbp,[rip+0xccd8]        # 0x427424
  41a74c:	mov    QWORD PTR [rsp+0x28],rdi
  41a751:	lea    rdi,[rsp+0x50]
  41a756:	mov    QWORD PTR [rsp+0x38],rsi
  41a75b:	mov    QWORD PTR [rsp+0x20],rdi
  41a760:	mov    edi,r15d
  41a763:	or     edi,0x200
  41a769:	mov    DWORD PTR [rsp+0x48],edi
  41a76d:	nop    DWORD PTR [rax]
  41a770:	movsx  ecx,al
  41a773:	lea    rsi,[rbx+0x1]
  41a777:	test   ecx,ecx
  41a779:	je     0x41a7fa
  41a77b:	cmp    ecx,0x25
  41a77e:	jne    0x41a7e0
  41a780:	movzx  eax,BYTE PTR [rbx+0x1]
  41a784:	xor    r10d,r10d
  41a787:	xor    r14d,r14d
  41a78a:	mov    DWORD PTR [rsp+0x88],r15d
  41a792:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41a79d:	mov    rdi,rsi
  41a7a0:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  41a7ab:	lea    r11,[r12+0xc]
  41a7b0:	test   al,al
  41a7b2:	je     0x41a95b
  41a7b8:	lea    edx,[rax-0x20]
  41a7bb:	lea    rbx,[rdi+0x1]
  41a7bf:	movsx  ecx,al
  41a7c2:	cmp    dl,0x5a
  41a7c5:	ja     0x41add0
  41a7cb:	movzx  edx,dl
  41a7ce:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  41a7d3:	add    rdx,rbp
  41a7d6:	jmp    rdx
  41a7d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a7e0:	mov    rdx,r12
  41a7e3:	call   0x418f30
  41a7e8:	movzx  eax,BYTE PTR [rbx+0x1]
  41a7ec:	mov    rbx,rsi
  41a7ef:	lea    rsi,[rbx+0x1]
  41a7f3:	movsx  ecx,al
  41a7f6:	test   ecx,ecx
  41a7f8:	jne    0x41a77b
  41a7fa:	mov    eax,DWORD PTR [rsp+0xa4]
  41a801:	add    rsp,0xb8
  41a808:	pop    rbx
  41a809:	pop    rsi
  41a80a:	pop    rdi
  41a80b:	pop    rbp
  41a80c:	pop    r12
  41a80e:	pop    r13
  41a810:	pop    r14
  41a812:	pop    r15
  41a814:	ret    
  41a815:	sub    r10d,0x2
  41a819:	mov    rax,r13
  41a81c:	cmp    r10d,0x1
  41a820:	jbe    0x41ae13
  41a826:	mov    rsi,QWORD PTR [rax]
  41a829:	add    r13,0x8
  41a82d:	test   rsi,rsi
  41a830:	je     0x41a8f5
  41a836:	mov    rcx,rsi
  41a839:	call   0x41d7f8
  41a83e:	mov    edx,eax
  41a840:	mov    r8,r12
  41a843:	mov    rcx,rsi
  41a846:	call   0x4190b0
  41a84b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a850:	movzx  eax,BYTE PTR [rbx]
  41a853:	jmp    0x41a770
  41a858:	nop    DWORD PTR [rax+rax*1+0x0]
  41a860:	test   r14d,r14d
  41a863:	jne    0x41a873
  41a865:	cmp    DWORD PTR [rsp+0x88],r15d
  41a86d:	je     0x41afdb
  41a873:	mov    rdx,QWORD PTR [r13+0x0]
  41a877:	lea    rsi,[r13+0x8]
  41a87b:	mov    r8,r12
  41a87e:	mov    ecx,0x78
  41a883:	mov    QWORD PTR [rsp+0x78],0x0
  41a88c:	mov    r13,rsi
  41a88f:	mov    QWORD PTR [rsp+0x70],rdx
  41a894:	call   0x419d90
  41a899:	jmp    0x41a850
  41a89b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a8a0:	cmp    r10d,0x5
  41a8a4:	mov    rax,QWORD PTR [r13+0x0]
  41a8a8:	je     0x41af1a
  41a8ae:	cmp    r10d,0x1
  41a8b2:	je     0x41afa4
  41a8b8:	cmp    r10d,0x2
  41a8bc:	je     0x41a8c8
  41a8be:	cmp    r10d,0x3
  41a8c2:	je     0x41b04c
  41a8c8:	mov    edx,DWORD PTR [rsp+0xa4]
  41a8cf:	add    r13,0x8
  41a8d3:	mov    DWORD PTR [rax],edx
  41a8d5:	jmp    0x41a850
  41a8da:	nop    WORD PTR [rax+rax*1+0x0]
  41a8e0:	mov    ecx,DWORD PTR [rsp+0x34]
  41a8e4:	call   0x41d808
  41a8e9:	test   rax,rax
  41a8ec:	mov    rsi,rax
  41a8ef:	jne    0x41a836
  41a8f5:	mov    edx,0x6
  41a8fa:	lea    rsi,[rip+0xcb05]        # 0x427406
  41a901:	jmp    0x41a840
  41a906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a910:	movzx  eax,BYTE PTR [rdi+0x1]
  41a914:	mov    r10d,0x2
  41a91a:	mov    r14d,0x4
  41a920:	cmp    al,0x6c
  41a922:	jne    0x41a950
  41a924:	lea    rbx,[rdi+0x2]
  41a928:	movzx  eax,BYTE PTR [rdi+0x2]
  41a92c:	mov    r10d,0x3
  41a932:	mov    r14d,0x4
  41a938:	jmp    0x41a950
  41a93a:	nop    WORD PTR [rax+rax*1+0x0]
  41a940:	movzx  eax,BYTE PTR [rdi+0x1]
  41a944:	mov    r10d,0x3
  41a94a:	mov    r14d,0x4
  41a950:	test   al,al
  41a952:	mov    rdi,rbx
  41a955:	jne    0x41a7b8
  41a95b:	mov    rbx,rdi
  41a95e:	jmp    0x41a770
  41a963:	mov    eax,DWORD PTR [rsp+0x88]
  41a96a:	mov    rdx,r13
  41a96d:	add    r13,0x8
  41a971:	or     eax,0x20
  41a974:	test   al,0x4
  41a976:	mov    DWORD PTR [rsp+0x88],eax
  41a97d:	je     0x41abdb
  41a983:	mov    rax,QWORD PTR [rdx]
  41a986:	mov    rcx,QWORD PTR [rsp+0x20]
  41a98b:	mov    rdx,r12
  41a98e:	fld    TBYTE PTR [rax]
  41a990:	fstp   TBYTE PTR [rsp+0x50]
  41a994:	call   0x419bf0
  41a999:	jmp    0x41a850
  41a99e:	xchg   ax,ax
  41a9a0:	movzx  eax,BYTE PTR [rdi+0x1]
  41a9a4:	mov    r10d,0x1
  41a9aa:	mov    r14d,0x4
  41a9b0:	cmp    al,0x68
  41a9b2:	jne    0x41a950
  41a9b4:	lea    rbx,[rdi+0x2]
  41a9b8:	movzx  eax,BYTE PTR [rdi+0x2]
  41a9bc:	mov    r10d,0x5
  41a9c2:	mov    r14d,0x4
  41a9c8:	jmp    0x41a950
  41a9ca:	nop    WORD PTR [rax+rax*1+0x0]
  41a9d0:	mov    eax,DWORD PTR [rsp+0x88]
  41a9d7:	mov    rdx,r13
  41a9da:	add    r13,0x8
  41a9de:	or     eax,0x20
  41a9e1:	test   al,0x4
  41a9e3:	mov    DWORD PTR [rsp+0x88],eax
  41a9ea:	je     0x41ac09
  41a9f0:	mov    rax,QWORD PTR [rdx]
  41a9f3:	mov    rcx,QWORD PTR [rsp+0x20]
  41a9f8:	mov    rdx,r12
  41a9fb:	fld    TBYTE PTR [rax]
  41a9fd:	fstp   TBYTE PTR [rsp+0x50]
  41aa01:	call   0x4196b0
  41aa06:	jmp    0x41a850
  41aa0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41aa10:	mov    eax,DWORD PTR [rsp+0x88]
  41aa17:	mov    rdx,r13
  41aa1a:	add    r13,0x8
  41aa1e:	or     eax,0x20
  41aa21:	test   al,0x4
  41aa23:	mov    DWORD PTR [rsp+0x88],eax
  41aa2a:	je     0x41ac37
  41aa30:	mov    rax,QWORD PTR [rdx]
  41aa33:	mov    rcx,QWORD PTR [rsp+0x20]
  41aa38:	mov    rdx,r12
  41aa3b:	fld    TBYTE PTR [rax]
  41aa3d:	fstp   TBYTE PTR [rsp+0x50]
  41aa41:	call   0x419b40
  41aa46:	jmp    0x41a850
  41aa4b:	nop    DWORD PTR [rax+rax*1+0x0]
  41aa50:	cmp    r10d,0x3
  41aa54:	je     0x41af2c
  41aa5a:	cmp    r10d,0x2
  41aa5e:	je     0x41afc9
  41aa64:	mov    eax,DWORD PTR [r13+0x0]
  41aa68:	cmp    r10d,0x1
  41aa6c:	lea    rdx,[r13+0x8]
  41aa70:	mov    QWORD PTR [rsp+0x70],rax
  41aa75:	je     0x41b00b
  41aa7b:	cmp    r10d,0x5
  41aa7f:	mov    r13,rdx
  41aa82:	je     0x41b060
  41aa88:	cmp    ecx,0x75
  41aa8b:	je     0x41af6c
  41aa91:	mov    r8,r12
  41aa94:	mov    rdx,rax
  41aa97:	call   0x419d90
  41aa9c:	jmp    0x41a850
  41aaa1:	sub    r10d,0x2
  41aaa5:	mov    rax,r13
  41aaa8:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41aab3:	cmp    r10d,0x1
  41aab7:	jbe    0x41ac5b
  41aabd:	mov    eax,DWORD PTR [rax]
  41aabf:	mov    rcx,QWORD PTR [rsp+0x28]
  41aac4:	mov    r8,r12
  41aac7:	mov    edx,0x1
  41aacc:	add    r13,0x8
  41aad0:	mov    BYTE PTR [rsp+0x70],al
  41aad4:	call   0x4190b0
  41aad9:	jmp    0x41a850
  41aade:	xchg   ax,ax
  41aae0:	mov    eax,DWORD PTR [rsp+0x88]
  41aae7:	mov    rdx,r13
  41aaea:	add    r13,0x8
  41aaee:	or     eax,0x20
  41aaf1:	test   al,0x4
  41aaf3:	mov    DWORD PTR [rsp+0x88],eax
  41aafa:	je     0x41ac98
  41ab00:	mov    rax,QWORD PTR [rdx]
  41ab03:	mov    rcx,QWORD PTR [rsp+0x20]
  41ab08:	mov    rdx,r12
  41ab0b:	fld    TBYTE PTR [rax]
  41ab0d:	fstp   TBYTE PTR [rsp+0x50]
  41ab11:	call   0x41a150
  41ab16:	jmp    0x41a850
  41ab1b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ab20:	or     DWORD PTR [rsp+0x88],0x80
  41ab2b:	cmp    r10d,0x3
  41ab2f:	je     0x41af08
  41ab35:	cmp    r10d,0x2
  41ab39:	je     0x41afb7
  41ab3f:	movsxd rcx,DWORD PTR [r13+0x0]
  41ab43:	cmp    r10d,0x1
  41ab47:	lea    rax,[r13+0x8]
  41ab4b:	mov    QWORD PTR [rsp+0x70],rcx
  41ab50:	je     0x41b01d
  41ab56:	cmp    r10d,0x5
  41ab5a:	mov    r13,rax
  41ab5d:	je     0x41b06f
  41ab63:	mov    rax,rcx
  41ab66:	mov    rdx,r12
  41ab69:	sar    rax,0x3f
  41ab6d:	mov    QWORD PTR [rsp+0x78],rax
  41ab72:	call   0x4197a0
  41ab77:	jmp    0x41a850
  41ab7c:	nop    DWORD PTR [rax+0x0]
  41ab80:	or     DWORD PTR [rsp+0x88],0x4
  41ab88:	movzx  eax,BYTE PTR [rdi+0x1]
  41ab8c:	mov    r14d,0x4
  41ab92:	jmp    0x41a950
  41ab97:	nop    WORD PTR [rax+rax*1+0x0]
  41aba0:	movzx  eax,BYTE PTR [rdi+0x1]
  41aba4:	cmp    al,0x36
  41aba6:	je     0x41aee8
  41abac:	cmp    al,0x33
  41abae:	je     0x41af7c
  41abb4:	mov    r10d,0x3
  41abba:	mov    r14d,0x4
  41abc0:	jmp    0x41a950
  41abc5:	mov    eax,DWORD PTR [rsp+0x88]
  41abcc:	mov    rdx,r13
  41abcf:	add    r13,0x8
  41abd3:	test   al,0x4
  41abd5:	jne    0x41a983
  41abdb:	mov    rcx,QWORD PTR [rsp+0x20]
  41abe0:	fld    QWORD PTR [rdx]
  41abe2:	mov    rdx,r12
  41abe5:	fstp   TBYTE PTR [rsp+0x50]
  41abe9:	call   0x419bf0
  41abee:	jmp    0x41a850
  41abf3:	mov    eax,DWORD PTR [rsp+0x88]
  41abfa:	mov    rdx,r13
  41abfd:	add    r13,0x8
  41ac01:	test   al,0x4
  41ac03:	jne    0x41a9f0
  41ac09:	mov    rcx,QWORD PTR [rsp+0x20]
  41ac0e:	fld    QWORD PTR [rdx]
  41ac10:	mov    rdx,r12
  41ac13:	fstp   TBYTE PTR [rsp+0x50]
  41ac17:	call   0x4196b0
  41ac1c:	jmp    0x41a850
  41ac21:	mov    eax,DWORD PTR [rsp+0x88]
  41ac28:	mov    rdx,r13
  41ac2b:	add    r13,0x8
  41ac2f:	test   al,0x4
  41ac31:	jne    0x41aa30
  41ac37:	mov    rcx,QWORD PTR [rsp+0x20]
  41ac3c:	fld    QWORD PTR [rdx]
  41ac3e:	mov    rdx,r12
  41ac41:	fstp   TBYTE PTR [rsp+0x50]
  41ac45:	call   0x419b40
  41ac4a:	jmp    0x41a850
  41ac4f:	nop
  41ac50:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41ac5b:	mov    eax,DWORD PTR [r13+0x0]
  41ac5f:	mov    rcx,QWORD PTR [rsp+0x28]
  41ac64:	lea    rsi,[r13+0x8]
  41ac68:	mov    r8,r12
  41ac6b:	mov    edx,0x1
  41ac70:	mov    r13,rsi
  41ac73:	mov    WORD PTR [rsp+0x70],ax
  41ac78:	call   0x418f90
  41ac7d:	jmp    0x41a850
  41ac82:	mov    eax,DWORD PTR [rsp+0x88]
  41ac89:	mov    rdx,r13
  41ac8c:	add    r13,0x8
  41ac90:	test   al,0x4
  41ac92:	jne    0x41ab00
  41ac98:	mov    rcx,QWORD PTR [rsp+0x20]
  41ac9d:	fld    QWORD PTR [rdx]
  41ac9f:	mov    rdx,r12
  41aca2:	fstp   TBYTE PTR [rsp+0x50]
  41aca6:	call   0x41a150
  41acab:	jmp    0x41a850
  41acb0:	test   r14d,r14d
  41acb3:	jne    0x41ae50
  41acb9:	or     DWORD PTR [rsp+0x88],0x200
  41acc4:	movzx  eax,BYTE PTR [rdi+0x1]
  41acc8:	jmp    0x41a950
  41accd:	nop    DWORD PTR [rax]
  41acd0:	cmp    r14d,0x1
  41acd4:	jbe    0x41af3e
  41acda:	movzx  eax,BYTE PTR [rdi+0x1]
  41acde:	mov    r14d,0x4
  41ace4:	jmp    0x41a950
  41ace9:	nop    DWORD PTR [rax+0x0]
  41acf0:	test   r14d,r14d
  41acf3:	jne    0x41ad79
  41acf9:	or     DWORD PTR [rsp+0x88],0x400
  41ad04:	movzx  eax,BYTE PTR [rdi+0x1]
  41ad08:	jmp    0x41a950
  41ad0d:	nop    DWORD PTR [rax]
  41ad10:	test   r14d,r14d
  41ad13:	jne    0x41ad79
  41ad15:	or     DWORD PTR [rsp+0x88],0x100
  41ad20:	movzx  eax,BYTE PTR [rdi+0x1]
  41ad24:	jmp    0x41a950
  41ad29:	nop    DWORD PTR [rax+0x0]
  41ad30:	test   r14d,r14d
  41ad33:	jne    0x41ad79
  41ad35:	or     DWORD PTR [rsp+0x88],0x800
  41ad40:	movzx  eax,BYTE PTR [rdi+0x1]
  41ad44:	jmp    0x41a950
  41ad49:	nop    DWORD PTR [rax+0x0]
  41ad50:	test   r14d,r14d
  41ad53:	jne    0x41ad79
  41ad55:	or     DWORD PTR [rsp+0x88],0x40
  41ad5d:	movzx  eax,BYTE PTR [rdi+0x1]
  41ad61:	jmp    0x41a950
  41ad66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad70:	test   r14d,r14d
  41ad73:	je     0x41ae82
  41ad79:	movzx  eax,BYTE PTR [rdi+0x1]
  41ad7d:	jmp    0x41a950
  41ad82:	mov    rdx,r12
  41ad85:	call   0x418f30
  41ad8a:	jmp    0x41a850
  41ad8f:	nop
  41ad90:	test   r11,r11
  41ad93:	je     0x41acda
  41ad99:	test   r14d,0xfffffffd
  41ada0:	jne    0x41ae70
  41ada6:	mov    eax,DWORD PTR [r13+0x0]
  41adaa:	lea    rdx,[r13+0x8]
  41adae:	test   eax,eax
  41adb0:	mov    DWORD PTR [r11],eax
  41adb3:	js     0x41b030
  41adb9:	movzx  eax,BYTE PTR [rdi+0x1]
  41adbd:	mov    r13,rdx
  41adc0:	xor    r11d,r11d
  41adc3:	jmp    0x41a950
  41adc8:	nop    DWORD PTR [rax+rax*1+0x0]
  41add0:	sub    eax,0x30
  41add3:	cmp    al,0x9
  41add5:	ja     0x41aff6
  41addb:	cmp    r14d,0x3
  41addf:	ja     0x41aff6
  41ade5:	test   r14d,r14d
  41ade8:	jne    0x41ae5a
  41adea:	mov    r14d,0x1
  41adf0:	test   r11,r11
  41adf3:	je     0x41ad79
  41adf5:	mov    eax,DWORD PTR [r11]
  41adf8:	test   eax,eax
  41adfa:	js     0x41af5d
  41ae00:	lea    eax,[rax+rax*4]
  41ae03:	lea    eax,[rcx+rax*2-0x30]
  41ae07:	mov    DWORD PTR [r11],eax
  41ae0a:	movzx  eax,BYTE PTR [rdi+0x1]
  41ae0e:	jmp    0x41a950
  41ae13:	mov    rsi,QWORD PTR [r13+0x0]
  41ae17:	lea    rax,[rip+0xc5da]        # 0x4273f8
  41ae1e:	lea    rdi,[r13+0x8]
  41ae22:	mov    r13,rdi
  41ae25:	test   rsi,rsi
  41ae28:	cmove  rsi,rax
  41ae2c:	mov    rcx,rsi
  41ae2f:	call   0x41d798
  41ae34:	mov    r8,r12
  41ae37:	mov    edx,eax
  41ae39:	mov    rcx,rsi
  41ae3c:	call   0x418f90
  41ae41:	jmp    0x41a850
  41ae46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae50:	cmp    r14d,0x3
  41ae54:	ja     0x41aff6
  41ae5a:	cmp    r14d,0x2
  41ae5e:	mov    eax,0x3
  41ae63:	cmove  r14d,eax
  41ae67:	jmp    0x41adf0
  41ae69:	nop    DWORD PTR [rax+0x0]
  41ae70:	movzx  eax,BYTE PTR [rdi+0x1]
  41ae74:	xor    r11d,r11d
  41ae77:	mov    r14d,0x4
  41ae7d:	jmp    0x41a950
  41ae82:	mov    DWORD PTR [rsp+0x4c],r10d
  41ae87:	mov    QWORD PTR [rsp+0x40],r11
  41ae8c:	or     DWORD PTR [rsp+0x88],0x1000
  41ae97:	mov    DWORD PTR [rsp+0x70],0x0
  41ae9f:	call   0x41d878
  41aea4:	mov    r9,QWORD PTR [rsp+0x28]
  41aea9:	mov    rdx,QWORD PTR [rax+0x8]
  41aead:	mov    r8d,0x10
  41aeb3:	mov    rcx,QWORD PTR [rsp+0x38]
  41aeb8:	call   0x41d540
  41aebd:	test   eax,eax
  41aebf:	mov    r11,QWORD PTR [rsp+0x40]
  41aec4:	mov    r10d,DWORD PTR [rsp+0x4c]
  41aec9:	jle    0x41aed8
  41aecb:	movzx  edx,WORD PTR [rsp+0x6e]
  41aed0:	mov    WORD PTR [rsp+0xa0],dx
  41aed8:	mov    DWORD PTR [rsp+0x9c],eax
  41aedf:	movzx  eax,BYTE PTR [rdi+0x1]
  41aee3:	jmp    0x41a950
  41aee8:	cmp    BYTE PTR [rdi+0x2],0x34
  41aeec:	je     0x41b07f
  41aef2:	mov    eax,0x36
  41aef7:	mov    r10d,0x3
  41aefd:	mov    r14d,0x4
  41af03:	jmp    0x41a950
  41af08:	mov    rcx,QWORD PTR [r13+0x0]
  41af0c:	add    r13,0x8
  41af10:	mov    QWORD PTR [rsp+0x70],rcx
  41af15:	jmp    0x41ab63
  41af1a:	mov    edx,DWORD PTR [rsp+0xa4]
  41af21:	add    r13,0x8
  41af25:	mov    BYTE PTR [rax],dl
  41af27:	jmp    0x41a850
  41af2c:	mov    rax,QWORD PTR [r13+0x0]
  41af30:	add    r13,0x8
  41af34:	mov    QWORD PTR [rsp+0x70],rax
  41af39:	jmp    0x41aa88
  41af3e:	mov    DWORD PTR [rsp+0x90],0x0
  41af49:	movzx  eax,BYTE PTR [rdi+0x1]
  41af4d:	lea    r11,[r12+0x10]
  41af52:	mov    r14d,0x2
  41af58:	jmp    0x41a950
  41af5d:	sub    ecx,0x30
  41af60:	movzx  eax,BYTE PTR [rdi+0x1]
  41af64:	mov    DWORD PTR [r11],ecx
  41af67:	jmp    0x41a950
  41af6c:	mov    rdx,r12
  41af6f:	mov    rcx,rax
  41af72:	call   0x4197a0
  41af77:	jmp    0x41a850
  41af7c:	cmp    BYTE PTR [rdi+0x2],0x32
  41af80:	mov    eax,0x33
  41af85:	jne    0x41abb4
  41af8b:	lea    rbx,[rdi+0x3]
  41af8f:	movzx  eax,BYTE PTR [rdi+0x3]
  41af93:	mov    r10d,0x2
  41af99:	mov    r14d,0x4
  41af9f:	jmp    0x41a950
  41afa4:	mov    edx,DWORD PTR [rsp+0xa4]
  41afab:	add    r13,0x8
  41afaf:	mov    WORD PTR [rax],dx
  41afb2:	jmp    0x41a850
  41afb7:	movsxd rcx,DWORD PTR [r13+0x0]
  41afbb:	add    r13,0x8
  41afbf:	mov    QWORD PTR [rsp+0x70],rcx
  41afc4:	jmp    0x41ab63
  41afc9:	mov    eax,DWORD PTR [r13+0x0]
  41afcd:	add    r13,0x8
  41afd1:	mov    QWORD PTR [rsp+0x70],rax
  41afd6:	jmp    0x41aa88
  41afdb:	mov    eax,DWORD PTR [rsp+0x48]
  41afdf:	mov    DWORD PTR [rsp+0x90],0x10
  41afea:	mov    DWORD PTR [rsp+0x88],eax
  41aff1:	jmp    0x41a873
  41aff6:	mov    rdx,r12
  41aff9:	mov    ecx,0x25
  41affe:	mov    rbx,rsi
  41b001:	call   0x418f30
  41b006:	jmp    0x41a850
  41b00b:	movzx  eax,WORD PTR [rsp+0x70]
  41b010:	mov    r13,rdx
  41b013:	mov    QWORD PTR [rsp+0x70],rax
  41b018:	jmp    0x41aa88
  41b01d:	movsx  rcx,WORD PTR [rsp+0x70]
  41b023:	mov    r13,rax
  41b026:	mov    QWORD PTR [rsp+0x70],rcx
  41b02b:	jmp    0x41ab63
  41b030:	test   r14d,r14d
  41b033:	jne    0x41b098
  41b035:	or     DWORD PTR [rsp+0x88],0x400
  41b040:	neg    DWORD PTR [rsp+0x8c]
  41b047:	jmp    0x41adb9
  41b04c:	movsxd rdx,DWORD PTR [rsp+0xa4]
  41b054:	add    r13,0x8
  41b058:	mov    QWORD PTR [rax],rdx
  41b05b:	jmp    0x41a850
  41b060:	movzx  eax,BYTE PTR [rsp+0x70]
  41b065:	mov    QWORD PTR [rsp+0x70],rax
  41b06a:	jmp    0x41aa88
  41b06f:	movsx  rcx,BYTE PTR [rsp+0x70]
  41b075:	mov    QWORD PTR [rsp+0x70],rcx
  41b07a:	jmp    0x41ab63
  41b07f:	lea    rbx,[rdi+0x3]
  41b083:	movzx  eax,BYTE PTR [rdi+0x3]
  41b087:	mov    r10d,0x3
  41b08d:	mov    r14d,0x4
  41b093:	jmp    0x41a950
  41b098:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41b0a3:	movzx  eax,BYTE PTR [rdi+0x1]
  41b0a7:	mov    r13,rdx
  41b0aa:	xor    r11d,r11d
  41b0ad:	jmp    0x41a950
  41b0b2:	nop
  41b0b3:	nop
  41b0b4:	nop
  41b0b5:	nop
  41b0b6:	nop
  41b0b7:	nop
  41b0b8:	nop
  41b0b9:	nop
  41b0ba:	nop
  41b0bb:	nop
  41b0bc:	nop
  41b0bd:	nop
  41b0be:	nop
  41b0bf:	nop
  41b0c0:	push   rbx
  41b0c1:	sub    rsp,0x20
  41b0c5:	xor    ebx,ebx
  41b0c7:	cmp    ecx,0x1b
  41b0ca:	jle    0x41b0dd
  41b0cc:	mov    eax,0x4
  41b0d1:	add    eax,eax
  41b0d3:	add    ebx,0x1
  41b0d6:	lea    edx,[rax+0x17]
  41b0d9:	cmp    edx,ecx
  41b0db:	jl     0x41b0d1
  41b0dd:	mov    ecx,ebx
  41b0df:	call   0x41c9b0
  41b0e4:	mov    DWORD PTR [rax],ebx
  41b0e6:	add    rax,0x4
  41b0ea:	add    rsp,0x20
  41b0ee:	pop    rbx
  41b0ef:	ret    
  41b0f0:	push   rsi
  41b0f1:	push   rbx
  41b0f2:	sub    rsp,0x28
  41b0f6:	mov    rbx,rcx
  41b0f9:	mov    ecx,r8d
  41b0fc:	mov    rsi,rdx
  41b0ff:	call   0x41b0c0
  41b104:	movzx  ecx,BYTE PTR [rbx]
  41b107:	lea    r8,[rbx+0x1]
  41b10b:	test   cl,cl
  41b10d:	mov    BYTE PTR [rax],cl
  41b10f:	mov    rcx,rax
  41b112:	je     0x41b129
  41b114:	add    r8,0x1
  41b118:	movzx  r9d,BYTE PTR [r8-0x1]
  41b11d:	add    rcx,0x1
  41b121:	test   r9b,r9b
  41b124:	mov    BYTE PTR [rcx],r9b
  41b127:	jne    0x41b114
  41b129:	test   rsi,rsi
  41b12c:	je     0x41b131
  41b12e:	mov    QWORD PTR [rsi],rcx
  41b131:	add    rsp,0x28
  41b135:	pop    rbx
  41b136:	pop    rsi
  41b137:	ret    
  41b138:	nop    DWORD PTR [rax+rax*1+0x0]
  41b140:	mov    edx,0x1
  41b145:	mov    rax,rcx
  41b148:	mov    ecx,DWORD PTR [rcx-0x4]
  41b14b:	shl    edx,cl
  41b14d:	mov    DWORD PTR [rax+0x4],ecx
  41b150:	lea    rcx,[rax-0x4]
  41b154:	mov    DWORD PTR [rax+0x8],edx
  41b157:	jmp    0x41cac0
  41b15c:	nop    DWORD PTR [rax+0x0]
  41b160:	push   r15
  41b162:	push   r14
  41b164:	push   r13
  41b166:	push   r12
  41b168:	push   rbp
  41b169:	push   rdi
  41b16a:	push   rsi
  41b16b:	push   rbx
  41b16c:	sub    rsp,0x38
  41b170:	xor    eax,eax
  41b172:	mov    edi,DWORD PTR [rdx+0x14]
  41b175:	cmp    edi,DWORD PTR [rcx+0x14]
  41b178:	mov    r15,rdx
  41b17b:	jg     0x41b2c9
  41b181:	sub    edi,0x1
  41b184:	lea    rbx,[rdx+0x18]
  41b188:	lea    r12,[rcx+0x18]
  41b18c:	movsxd r13,edi
  41b18f:	xor    edx,edx
  41b191:	shl    r13,0x2
  41b195:	lea    rbp,[rbx+r13*1]
  41b199:	add    r13,r12
  41b19c:	mov    eax,DWORD PTR [rbp+0x0]
  41b19f:	lea    r8d,[rax+0x1]
  41b1a3:	mov    eax,DWORD PTR [r13+0x0]
  41b1a7:	div    r8d
  41b1aa:	test   eax,eax
  41b1ac:	mov    r14d,eax
  41b1af:	mov    DWORD PTR [rsp+0x2c],eax
  41b1b3:	je     0x41b247
  41b1b9:	mov    edx,eax
  41b1bb:	mov    rsi,rbx
  41b1be:	mov    r11,r12
  41b1c1:	xor    eax,eax
  41b1c3:	xor    r10d,r10d
  41b1c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b1d0:	add    rsi,0x4
  41b1d4:	mov    r8d,DWORD PTR [rsi-0x4]
  41b1d8:	mov    r9d,DWORD PTR [r11]
  41b1db:	add    r11,0x4
  41b1df:	imul   r8,rdx
  41b1e3:	add    r8,rax
  41b1e6:	mov    rax,r8
  41b1e9:	mov    r8d,r8d
  41b1ec:	sub    r9,r8
  41b1ef:	shr    rax,0x20
  41b1f3:	sub    r9,r10
  41b1f6:	mov    r10,r9
  41b1f9:	mov    DWORD PTR [r11-0x4],r9d
  41b1fd:	shr    r10,0x20
  41b201:	and    r10d,0x1
  41b205:	cmp    rbp,rsi
  41b208:	jae    0x41b1d0
  41b20a:	mov    r11d,DWORD PTR [r13+0x0]
  41b20e:	test   r11d,r11d
  41b211:	jne    0x41b247
  41b213:	lea    rax,[r13-0x4]
  41b217:	cmp    r12,rax
  41b21a:	jae    0x41b244
  41b21c:	mov    r10d,DWORD PTR [r13-0x4]
  41b220:	test   r10d,r10d
  41b223:	je     0x41b238
  41b225:	jmp    0x41b244
  41b227:	nop    WORD PTR [rax+rax*1+0x0]
  41b230:	mov    r9d,DWORD PTR [rax]
  41b233:	test   r9d,r9d
  41b236:	jne    0x41b244
  41b238:	sub    rax,0x4
  41b23c:	sub    edi,0x1
  41b23f:	cmp    r12,rax
  41b242:	jb     0x41b230
  41b244:	mov    DWORD PTR [rcx+0x14],edi
  41b247:	mov    rdx,r15
  41b24a:	mov    rsi,rcx
  41b24d:	call   0x41cfe0
  41b252:	test   eax,eax
  41b254:	js     0x41b2c5
  41b256:	lea    eax,[r14+0x1]
  41b25a:	mov    rcx,r12
  41b25d:	xor    edx,edx
  41b25f:	mov    DWORD PTR [rsp+0x2c],eax
  41b263:	add    rbx,0x4
  41b267:	mov    eax,DWORD PTR [rcx]
  41b269:	mov    r8d,DWORD PTR [rbx-0x4]
  41b26d:	add    rcx,0x4
  41b271:	sub    rax,r8
  41b274:	sub    rax,rdx
  41b277:	mov    rdx,rax
  41b27a:	mov    DWORD PTR [rcx-0x4],eax
  41b27d:	shr    rdx,0x20
  41b281:	and    edx,0x1
  41b284:	cmp    rbp,rbx
  41b287:	jae    0x41b263
  41b289:	movsxd rax,edi
  41b28c:	lea    rdx,[r12+rax*4]
  41b290:	mov    r8d,DWORD PTR [rdx]
  41b293:	test   r8d,r8d
  41b296:	jne    0x41b2c5
  41b298:	lea    rax,[rdx-0x4]
  41b29c:	cmp    r12,rax
  41b29f:	jae    0x41b2c2
  41b2a1:	mov    ecx,DWORD PTR [rdx-0x4]
  41b2a4:	test   ecx,ecx
  41b2a6:	je     0x41b2b6
  41b2a8:	jmp    0x41b2c2
  41b2aa:	nop    WORD PTR [rax+rax*1+0x0]
  41b2b0:	mov    edx,DWORD PTR [rax]
  41b2b2:	test   edx,edx
  41b2b4:	jne    0x41b2c2
  41b2b6:	sub    rax,0x4
  41b2ba:	sub    edi,0x1
  41b2bd:	cmp    r12,rax
  41b2c0:	jb     0x41b2b0
  41b2c2:	mov    DWORD PTR [rsi+0x14],edi
  41b2c5:	mov    eax,DWORD PTR [rsp+0x2c]
  41b2c9:	add    rsp,0x38
  41b2cd:	pop    rbx
  41b2ce:	pop    rsi
  41b2cf:	pop    rdi
  41b2d0:	pop    rbp
  41b2d1:	pop    r12
  41b2d3:	pop    r13
  41b2d5:	pop    r14
  41b2d7:	pop    r15
  41b2d9:	ret    
  41b2da:	nop
  41b2db:	nop
  41b2dc:	nop
  41b2dd:	nop
  41b2de:	nop
  41b2df:	nop
  41b2e0:	push   r15
  41b2e2:	push   r14
  41b2e4:	push   r13
  41b2e6:	push   r12
  41b2e8:	push   rbp
  41b2e9:	push   rdi
  41b2ea:	push   rsi
  41b2eb:	push   rbx
  41b2ec:	sub    rsp,0xb8
  41b2f3:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  41b2fb:	mov    r12d,DWORD PTR [r9]
  41b2fe:	mov    eax,r12d
  41b301:	and    eax,0xffffffcf
  41b304:	mov    DWORD PTR [r9],eax
  41b307:	mov    eax,r12d
  41b30a:	and    eax,0x7
  41b30d:	cmp    eax,0x4
  41b310:	ja     0x41c743
  41b316:	mov    r13d,edx
  41b319:	lea    rdx,[rip+0xc280]        # 0x4275a0
  41b320:	mov    QWORD PTR [rsp+0x28],r9
  41b325:	mov    r15,r8
  41b328:	mov    rbp,rcx
  41b32b:	movsxd rax,DWORD PTR [rdx+rax*4]
  41b32f:	add    rdx,rax
  41b332:	jmp    rdx
  41b334:	mov    edi,DWORD PTR [rcx]
  41b336:	xor    ecx,ecx
  41b338:	cmp    edi,0x20
  41b33b:	jle    0x41b34b
  41b33d:	mov    eax,0x20
  41b342:	add    eax,eax
  41b344:	add    ecx,0x1
  41b347:	cmp    edi,eax
  41b349:	jg     0x41b342
  41b34b:	call   0x41c9b0
  41b350:	mov    rsi,rax
  41b353:	lea    eax,[rdi-0x1]
  41b356:	lea    r9,[rsi+0x18]
  41b35a:	sar    eax,0x5
  41b35d:	cdqe   
  41b35f:	mov    rdx,r9
  41b362:	lea    r11,[r15+rax*4]
  41b366:	mov    rax,r15
  41b369:	nop    DWORD PTR [rax+0x0]
  41b370:	mov    ecx,DWORD PTR [rax]
  41b372:	add    rax,0x4
  41b376:	add    rdx,0x4
  41b37a:	cmp    r11,rax
  41b37d:	mov    DWORD PTR [rdx-0x4],ecx
  41b380:	jae    0x41b370
  41b382:	sub    rdx,r9
  41b385:	sar    rdx,0x2
  41b389:	mov    r14d,edx
  41b38c:	movsxd rdx,edx
  41b38f:	lea    rax,[r9+rdx*4-0x4]
  41b394:	jmp    0x41b3af
  41b396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b3a0:	sub    rax,0x4
  41b3a4:	test   edx,edx
  41b3a6:	mov    r14d,edx
  41b3a9:	je     0x41b8b0
  41b3af:	mov    r8d,DWORD PTR [rax]
  41b3b2:	lea    edx,[r14-0x1]
  41b3b6:	test   r8d,r8d
  41b3b9:	je     0x41b3a0
  41b3bb:	movsxd rdx,edx
  41b3be:	mov    DWORD PTR [rsi+0x14],r14d
  41b3c2:	shl    r14d,0x5
  41b3c6:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  41b3cb:	xor    eax,0x1f
  41b3ce:	sub    r14d,eax
  41b3d1:	mov    rcx,rsi
  41b3d4:	call   0x41c850
  41b3d9:	test   eax,eax
  41b3db:	mov    DWORD PTR [rsp+0x9c],eax
  41b3e2:	mov    r11d,r13d
  41b3e5:	jne    0x41b8c0
  41b3eb:	mov    ecx,DWORD PTR [rsi+0x14]
  41b3ee:	test   ecx,ecx
  41b3f0:	jne    0x41b4a0
  41b3f6:	mov    rcx,rsi
  41b3f9:	call   0x41cac0
  41b3fe:	mov    rax,QWORD PTR [rsp+0x130]
  41b406:	mov    rdx,QWORD PTR [rsp+0x138]
  41b40e:	lea    rcx,[rip+0xc188]        # 0x42759d
  41b415:	mov    r8d,0x1
  41b41b:	mov    DWORD PTR [rax],0x1
  41b421:	call   0x41b0f0
  41b426:	nop
  41b427:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  41b42f:	add    rsp,0xb8
  41b436:	pop    rbx
  41b437:	pop    rsi
  41b438:	pop    rdi
  41b439:	pop    rbp
  41b43a:	pop    r12
  41b43c:	pop    r13
  41b43e:	pop    r14
  41b440:	pop    r15
  41b442:	ret    
  41b443:	mov    rax,QWORD PTR [rsp+0x130]
  41b44b:	mov    rdx,QWORD PTR [rsp+0x138]
  41b453:	lea    rcx,[rip+0xc13f]        # 0x427599
  41b45a:	mov    r8d,0x3
  41b460:	mov    DWORD PTR [rax],0xffff8000
  41b466:	call   0x41b0f0
  41b46b:	jmp    0x41b427
  41b46d:	nop    DWORD PTR [rax]
  41b470:	mov    rax,QWORD PTR [rsp+0x130]
  41b478:	mov    rdx,QWORD PTR [rsp+0x138]
  41b480:	lea    rcx,[rip+0xc109]        # 0x427590
  41b487:	mov    r8d,0x8
  41b48d:	mov    DWORD PTR [rax],0xffff8000
  41b493:	call   0x41b0f0
  41b498:	jmp    0x41b427
  41b49a:	nop    WORD PTR [rax+rax*1+0x0]
  41b4a0:	lea    rdx,[rsp+0x9c]
  41b4a8:	mov    rcx,rsi
  41b4ab:	mov    DWORD PTR [rsp+0x30],r11d
  41b4b0:	call   0x41d170
  41b4b5:	movq   rdx,xmm0
  41b4ba:	movq   r9,xmm0
  41b4bf:	mov    r11d,DWORD PTR [rsp+0x30]
  41b4c4:	pxor   xmm0,xmm0
  41b4c8:	shr    rdx,0x20
  41b4cc:	mov    r9d,r9d
  41b4cf:	and    edx,0xfffff
  41b4d5:	lea    ecx,[r11+r14*1-0x1]
  41b4da:	or     edx,0x3ff00000
  41b4e0:	mov    rax,rdx
  41b4e3:	cvtsi2sd xmm0,ecx
  41b4e7:	shl    rax,0x20
  41b4eb:	mov    ebx,ecx
  41b4ed:	or     r9,rax
  41b4f0:	sar    ebx,0x1f
  41b4f3:	mov    QWORD PTR [rsp+0x30],r9
  41b4f8:	mov    eax,ebx
  41b4fa:	movsd  xmm1,QWORD PTR [rsp+0x30]
  41b500:	xor    eax,ecx
  41b502:	sub    eax,ebx
  41b504:	subsd  xmm1,QWORD PTR [rip+0xc0ac]        # 0x4275b8
  41b50c:	sub    eax,0x435
  41b511:	test   eax,eax
  41b513:	mulsd  xmm0,QWORD PTR [rip+0xc0b5]        # 0x4275d0
  41b51b:	mulsd  xmm1,QWORD PTR [rip+0xc09d]        # 0x4275c0
  41b523:	addsd  xmm1,QWORD PTR [rip+0xc09d]        # 0x4275c8
  41b52b:	addsd  xmm1,xmm0
  41b52f:	jle    0x41b545
  41b531:	pxor   xmm0,xmm0
  41b535:	cvtsi2sd xmm0,eax
  41b539:	mulsd  xmm0,QWORD PTR [rip+0xc097]        # 0x4275d8
  41b541:	addsd  xmm1,xmm0
  41b545:	cvttsd2si eax,xmm1
  41b549:	pxor   xmm6,xmm6
  41b54d:	ucomisd xmm6,xmm1
  41b551:	mov    DWORD PTR [rsp+0x30],eax
  41b555:	ja     0x41bde3
  41b55b:	mov    eax,ecx
  41b55d:	mov    r9d,r9d
  41b560:	mov    DWORD PTR [rsp+0x6c],0x1
  41b568:	shl    eax,0x14
  41b56b:	add    eax,edx
  41b56d:	shl    rax,0x20
  41b571:	or     r9,rax
  41b574:	cmp    DWORD PTR [rsp+0x30],0x16
  41b579:	mov    QWORD PTR [rsp+0x80],r9
  41b581:	ja     0x41b5b0
  41b583:	movsxd rax,DWORD PTR [rsp+0x30]
  41b588:	mov    rdx,QWORD PTR [rip+0xc391]        # 0x427920
  41b58f:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  41b594:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  41b59d:	jbe    0x41b900
  41b5a3:	sub    DWORD PTR [rsp+0x30],0x1
  41b5a8:	mov    DWORD PTR [rsp+0x6c],0x0
  41b5b0:	mov    eax,r14d
  41b5b3:	mov    DWORD PTR [rsp+0x50],0x0
  41b5bb:	sub    eax,ecx
  41b5bd:	sub    eax,0x1
  41b5c0:	mov    DWORD PTR [rsp+0x40],eax
  41b5c4:	js     0x41bdd0
  41b5ca:	mov    eax,DWORD PTR [rsp+0x30]
  41b5ce:	test   eax,eax
  41b5d0:	js     0x41bdb0
  41b5d6:	add    DWORD PTR [rsp+0x40],eax
  41b5da:	mov    DWORD PTR [rsp+0x88],eax
  41b5e1:	mov    DWORD PTR [rsp+0x58],0x0
  41b5e9:	cmp    DWORD PTR [rsp+0x120],0x9
  41b5f1:	ja     0x41b8e0
  41b5f7:	cmp    DWORD PTR [rsp+0x120],0x5
  41b5ff:	jle    0x41b8eb
  41b605:	sub    DWORD PTR [rsp+0x120],0x4
  41b60d:	xor    eax,eax
  41b60f:	cmp    DWORD PTR [rsp+0x120],0x3
  41b617:	je     0x41bfa4
  41b61d:	jle    0x41bd03
  41b623:	cmp    DWORD PTR [rsp+0x120],0x4
  41b62b:	mov    DWORD PTR [rsp+0x60],0x1
  41b633:	je     0x41b910
  41b639:	cmp    DWORD PTR [rsp+0x120],0x5
  41b641:	jne    0x41bd19
  41b647:	mov    ebx,DWORD PTR [rsp+0x30]
  41b64b:	add    ebx,DWORD PTR [rsp+0x128]
  41b652:	mov    DWORD PTR [rsp+0x8c],ebx
  41b659:	add    ebx,0x1
  41b65c:	test   ebx,ebx
  41b65e:	mov    DWORD PTR [rsp+0x68],ebx
  41b662:	mov    ecx,ebx
  41b664:	jle    0x41c1e0
  41b66a:	cmp    ebx,0xe
  41b66d:	mov    DWORD PTR [rsp+0x9c],ebx
  41b674:	setbe  bl
  41b677:	and    ebx,eax
  41b679:	mov    QWORD PTR [rsp+0x78],r9
  41b67e:	mov    DWORD PTR [rsp+0x70],r11d
  41b683:	call   0x41b0c0
  41b688:	mov    QWORD PTR [rsp+0x48],rax
  41b68d:	mov    eax,DWORD PTR [rbp+0xc]
  41b690:	mov    r11d,DWORD PTR [rsp+0x70]
  41b695:	mov    r9,QWORD PTR [rsp+0x78]
  41b69a:	sub    eax,0x1
  41b69d:	mov    DWORD PTR [rsp+0x38],eax
  41b6a1:	je     0x41b6c8
  41b6a3:	mov    ecx,DWORD PTR [rsp+0x38]
  41b6a7:	mov    eax,0x2
  41b6ac:	test   ecx,ecx
  41b6ae:	cmovns eax,ecx
  41b6b1:	and    r12d,0x8
  41b6b5:	mov    DWORD PTR [rsp+0x38],eax
  41b6b9:	je     0x41b6c8
  41b6bb:	mov    eax,0x3
  41b6c0:	sub    eax,DWORD PTR [rsp+0x38]
  41b6c4:	mov    DWORD PTR [rsp+0x38],eax
  41b6c8:	test   bl,bl
  41b6ca:	je     0x41b9c0
  41b6d0:	mov    eax,DWORD PTR [rsp+0x38]
  41b6d4:	or     eax,DWORD PTR [rsp+0x30]
  41b6d8:	jne    0x41b9c0
  41b6de:	mov    eax,DWORD PTR [rsp+0x6c]
  41b6e2:	mov    DWORD PTR [rsp+0x9c],0x0
  41b6ed:	movsd  xmm4,QWORD PTR [rsp+0x80]
  41b6f6:	test   eax,eax
  41b6f8:	je     0x41b70c
  41b6fa:	movsd  xmm0,QWORD PTR [rip+0xbee6]        # 0x4275e8
  41b702:	ucomisd xmm0,xmm4
  41b706:	ja     0x41c53b
  41b70c:	movapd xmm0,xmm4
  41b710:	mov    r12d,DWORD PTR [rsp+0x68]
  41b715:	addsd  xmm0,xmm4
  41b719:	addsd  xmm0,QWORD PTR [rip+0xbedf]        # 0x427600
  41b721:	movq   rdx,xmm0
  41b726:	movq   rax,xmm0
  41b72b:	shr    rdx,0x20
  41b72f:	mov    eax,eax
  41b731:	sub    edx,0x3400000
  41b737:	shl    rdx,0x20
  41b73b:	or     rax,rdx
  41b73e:	test   r12d,r12d
  41b741:	je     0x41b977
  41b747:	mov    r9d,DWORD PTR [rsp+0x68]
  41b74c:	movapd xmm0,xmm4
  41b750:	xor    ecx,ecx
  41b752:	mov    ebx,DWORD PTR [rsp+0x60]
  41b756:	lea    edx,[r9-0x1]
  41b75a:	movsxd rdx,edx
  41b75d:	test   ebx,ebx
  41b75f:	je     0x41c283
  41b765:	mov    r10,QWORD PTR [rip+0xc1b4]        # 0x427920
  41b76c:	movsd  xmm1,QWORD PTR [rip+0xbeac]        # 0x427620
  41b774:	mov    QWORD PTR [rsp+0x38],rax
  41b779:	cvttsd2si eax,xmm0
  41b77d:	pxor   xmm2,xmm2
  41b781:	mov    DWORD PTR [rsp+0x9c],0x0
  41b78c:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  41b792:	mov    rdx,QWORD PTR [rsp+0x48]
  41b797:	mov    rbx,rdx
  41b79a:	add    rbx,0x1
  41b79e:	cvtsi2sd xmm2,eax
  41b7a2:	add    eax,0x30
  41b7a5:	mov    BYTE PTR [rdx],al
  41b7a7:	movsd  xmm5,QWORD PTR [rsp+0x38]
  41b7ad:	subsd  xmm0,xmm2
  41b7b1:	subsd  xmm1,xmm5
  41b7b5:	ucomisd xmm1,xmm0
  41b7b9:	ja     0x41b854
  41b7bf:	movsd  xmm5,QWORD PTR [rip+0xbe21]        # 0x4275e8
  41b7c7:	movapd xmm2,xmm5
  41b7cb:	subsd  xmm2,xmm0
  41b7cf:	ucomisd xmm1,xmm2
  41b7d3:	ja     0x41c357
  41b7d9:	mov    eax,DWORD PTR [rsp+0x9c]
  41b7e0:	movsd  xmm3,QWORD PTR [rip+0xbe08]        # 0x4275f0
  41b7e8:	add    eax,0x1
  41b7eb:	cmp    r9d,eax
  41b7ee:	mov    DWORD PTR [rsp+0x9c],eax
  41b7f5:	jg     0x41b82c
  41b7f7:	jmp    0x41b9ae
  41b7fc:	nop    DWORD PTR [rax+0x0]
  41b800:	movapd xmm2,xmm5
  41b804:	subsd  xmm2,xmm0
  41b808:	ucomisd xmm1,xmm2
  41b80c:	ja     0x41c357
  41b812:	mov    eax,DWORD PTR [rsp+0x9c]
  41b819:	add    eax,0x1
  41b81c:	cmp    r9d,eax
  41b81f:	mov    DWORD PTR [rsp+0x9c],eax
  41b826:	jle    0x41b9ae
  41b82c:	mulsd  xmm0,xmm3
  41b830:	add    rbx,0x1
  41b834:	pxor   xmm2,xmm2
  41b838:	mulsd  xmm1,xmm3
  41b83c:	cvttsd2si eax,xmm0
  41b840:	cvtsi2sd xmm2,eax
  41b844:	add    eax,0x30
  41b847:	mov    BYTE PTR [rbx-0x1],al
  41b84a:	subsd  xmm0,xmm2
  41b84e:	ucomisd xmm1,xmm0
  41b852:	jbe    0x41b800
  41b854:	ucomisd xmm0,xmm6
  41b858:	lea    ebp,[rcx+0x1]
  41b85b:	jp     0x41b863
  41b85d:	je     0x41c1b7
  41b863:	mov    r15d,0x10
  41b869:	nop    DWORD PTR [rax+0x0]
  41b870:	mov    rcx,rsi
  41b873:	call   0x41cac0
  41b878:	cmp    QWORD PTR [rsp+0x138],0x0
  41b881:	mov    rax,QWORD PTR [rsp+0x130]
  41b889:	mov    BYTE PTR [rbx],0x0
  41b88c:	mov    DWORD PTR [rax],ebp
  41b88e:	je     0x41b89b
  41b890:	mov    rax,QWORD PTR [rsp+0x138]
  41b898:	mov    QWORD PTR [rax],rbx
  41b89b:	mov    rax,QWORD PTR [rsp+0x28]
  41b8a0:	or     DWORD PTR [rax],r15d
  41b8a3:	mov    rax,QWORD PTR [rsp+0x48]
  41b8a8:	jmp    0x41b427
  41b8ad:	nop    DWORD PTR [rax]
  41b8b0:	mov    DWORD PTR [rsi+0x14],0x0
  41b8b7:	jmp    0x41b3d1
  41b8bc:	nop    DWORD PTR [rax+0x0]
  41b8c0:	mov    edx,eax
  41b8c2:	mov    rcx,rsi
  41b8c5:	call   0x41c750
  41b8ca:	mov    eax,DWORD PTR [rsp+0x9c]
  41b8d1:	lea    r11d,[r13+rax*1+0x0]
  41b8d6:	sub    r14d,eax
  41b8d9:	jmp    0x41b3eb
  41b8de:	xchg   ax,ax
  41b8e0:	mov    DWORD PTR [rsp+0x120],0x0
  41b8eb:	add    ecx,0x3fe
  41b8f1:	cmp    ecx,0x7f7
  41b8f7:	setbe  al
  41b8fa:	jmp    0x41b60f
  41b8ff:	nop
  41b900:	mov    DWORD PTR [rsp+0x6c],0x0
  41b908:	jmp    0x41b5b0
  41b90d:	nop    DWORD PTR [rax]
  41b910:	mov    edx,DWORD PTR [rsp+0x128]
  41b917:	test   edx,edx
  41b919:	jle    0x41c1cb
  41b91f:	cmp    DWORD PTR [rsp+0x128],0xe
  41b927:	setbe  bl
  41b92a:	mov    ecx,DWORD PTR [rsp+0x128]
  41b931:	and    ebx,eax
  41b933:	mov    DWORD PTR [rsp+0x9c],ecx
  41b93a:	mov    DWORD PTR [rsp+0x8c],ecx
  41b941:	mov    DWORD PTR [rsp+0x68],ecx
  41b945:	jmp    0x41b679
  41b94a:	movapd xmm0,xmm4
  41b94e:	addsd  xmm0,xmm4
  41b952:	addsd  xmm0,QWORD PTR [rip+0xbca6]        # 0x427600
  41b95a:	movq   rdx,xmm0
  41b95f:	movq   rax,xmm0
  41b964:	shr    rdx,0x20
  41b968:	mov    eax,eax
  41b96a:	sub    edx,0x3400000
  41b970:	shl    rdx,0x20
  41b974:	or     rax,rdx
  41b977:	movapd xmm1,xmm4
  41b97b:	mov    QWORD PTR [rsp+0x38],rax
  41b980:	movsd  xmm0,QWORD PTR [rsp+0x38]
  41b986:	subsd  xmm1,QWORD PTR [rip+0xbc7a]        # 0x427608
  41b98e:	ucomisd xmm1,xmm0
  41b992:	ja     0x41c274
  41b998:	movsd  xmm2,QWORD PTR [rip+0xbc70]        # 0x427610
  41b9a0:	xorpd  xmm0,xmm2
  41b9a4:	ucomisd xmm0,xmm1
  41b9a8:	ja     0x41bd8d
  41b9ae:	movq   r9,xmm4
  41b9b3:	mov    DWORD PTR [rsp+0x38],0x0
  41b9bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41b9c0:	test   r11d,r11d
  41b9c3:	js     0x41ba62
  41b9c9:	movsxd rax,DWORD PTR [rsp+0x30]
  41b9ce:	cmp    eax,DWORD PTR [rbp+0x14]
  41b9d1:	jg     0x41ba62
  41b9d7:	mov    ebx,DWORD PTR [rsp+0x68]
  41b9db:	mov    rdx,QWORD PTR [rip+0xbf3e]        # 0x427920
  41b9e2:	test   ebx,ebx
  41b9e4:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  41b9e9:	jg     0x41c0f3
  41b9ef:	mov    eax,DWORD PTR [rsp+0x128]
  41b9f6:	shr    eax,0x1f
  41b9f9:	test   al,al
  41b9fb:	je     0x41c0f3
  41ba01:	test   ebx,ebx
  41ba03:	jne    0x41bd8d
  41ba09:	mulsd  xmm2,QWORD PTR [rip+0xbbf7]        # 0x427608
  41ba11:	mov    QWORD PTR [rsp+0x38],r9
  41ba16:	movsd  xmm5,QWORD PTR [rsp+0x38]
  41ba1c:	ucomisd xmm2,xmm5
  41ba20:	jae    0x41bd8d
  41ba26:	mov    ebp,DWORD PTR [rsp+0x30]
  41ba2a:	xor    r12d,r12d
  41ba2d:	xor    edi,edi
  41ba2f:	add    ebp,0x2
  41ba32:	mov    rax,QWORD PTR [rsp+0x48]
  41ba37:	mov    r15d,0x20
  41ba3d:	lea    rbx,[rax+0x1]
  41ba41:	mov    BYTE PTR [rax],0x31
  41ba44:	mov    rcx,r12
  41ba47:	call   0x41cac0
  41ba4c:	test   rdi,rdi
  41ba4f:	je     0x41b870
  41ba55:	mov    rcx,rdi
  41ba58:	call   0x41cac0
  41ba5d:	jmp    0x41b870
  41ba62:	mov    r9d,DWORD PTR [rsp+0x60]
  41ba67:	test   r9d,r9d
  41ba6a:	je     0x41bf70
  41ba70:	mov    edx,DWORD PTR [rbp+0x4]
  41ba73:	sub    edi,r14d
  41ba76:	mov    ecx,r11d
  41ba79:	lea    eax,[rdi+0x1]
  41ba7c:	sub    ecx,edi
  41ba7e:	cmp    ecx,edx
  41ba80:	mov    DWORD PTR [rsp+0x9c],eax
  41ba87:	jge    0x41babc
  41ba89:	mov    ebx,DWORD PTR [rsp+0x120]
  41ba90:	lea    ecx,[rbx-0x3]
  41ba93:	and    ecx,0xfffffffd
  41ba96:	je     0x41babc
  41ba98:	mov    ebx,DWORD PTR [rsp+0x68]
  41ba9c:	sub    r11d,edx
  41ba9f:	lea    eax,[r11+0x1]
  41baa3:	test   ebx,ebx
  41baa5:	mov    DWORD PTR [rsp+0x9c],eax
  41baac:	setg   cl
  41baaf:	cmp    ebx,eax
  41bab1:	setl   dl
  41bab4:	test   cl,dl
  41bab6:	je     0x41c1ff
  41babc:	cmp    DWORD PTR [rsp+0x120],0x1
  41bac4:	jle    0x41c1ff
  41baca:	mov    ebx,DWORD PTR [rsp+0x58]
  41bace:	mov    eax,DWORD PTR [rsp+0x68]
  41bad2:	mov    r12d,ebx
  41bad5:	sub    eax,0x1
  41bad8:	sub    r12d,eax
  41badb:	cmp    ebx,eax
  41badd:	jge    0x41baf3
  41badf:	mov    edx,eax
  41bae1:	sub    edx,DWORD PTR [rsp+0x58]
  41bae5:	xor    r12d,r12d
  41bae8:	add    DWORD PTR [rsp+0x88],edx
  41baef:	mov    DWORD PTR [rsp+0x58],eax
  41baf3:	mov    eax,DWORD PTR [rsp+0x68]
  41baf7:	test   eax,eax
  41baf9:	js     0x41c492
  41baff:	mov    ebx,DWORD PTR [rsp+0x50]
  41bb03:	mov    DWORD PTR [rsp+0x9c],eax
  41bb0a:	mov    ecx,0x1
  41bb0f:	add    DWORD PTR [rsp+0x50],eax
  41bb13:	add    DWORD PTR [rsp+0x40],eax
  41bb17:	call   0x41cbf0
  41bb1c:	mov    rdi,rax
  41bb1f:	mov    ecx,DWORD PTR [rsp+0x40]
  41bb23:	test   ecx,ecx
  41bb25:	mov    eax,ecx
  41bb27:	jle    0x41bb45
  41bb29:	test   ebx,ebx
  41bb2b:	jle    0x41bb45
  41bb2d:	cmp    ecx,ebx
  41bb2f:	cmovg  eax,ebx
  41bb32:	sub    DWORD PTR [rsp+0x50],eax
  41bb36:	sub    ecx,eax
  41bb38:	mov    DWORD PTR [rsp+0x9c],eax
  41bb3f:	sub    ebx,eax
  41bb41:	mov    DWORD PTR [rsp+0x40],ecx
  41bb45:	mov    r8d,DWORD PTR [rsp+0x58]
  41bb4a:	test   r8d,r8d
  41bb4d:	jle    0x41bb9b
  41bb4f:	mov    ecx,DWORD PTR [rsp+0x60]
  41bb53:	test   ecx,ecx
  41bb55:	je     0x41bf90
  41bb5b:	test   r12d,r12d
  41bb5e:	jle    0x41bb8e
  41bb60:	mov    rcx,rdi
  41bb63:	mov    edx,r12d
  41bb66:	call   0x41cd50
  41bb6b:	mov    rdx,rsi
  41bb6e:	mov    rcx,rax
  41bb71:	mov    rdi,rax
  41bb74:	call   0x41cc20
  41bb79:	mov    rcx,rsi
  41bb7c:	mov    QWORD PTR [rsp+0x70],rax
  41bb81:	call   0x41cac0
  41bb86:	mov    rax,QWORD PTR [rsp+0x70]
  41bb8b:	mov    rsi,rax
  41bb8e:	mov    edx,DWORD PTR [rsp+0x58]
  41bb92:	sub    edx,r12d
  41bb95:	jne    0x41bf94
  41bb9b:	mov    ecx,0x1
  41bba0:	call   0x41cbf0
  41bba5:	mov    r12,rax
  41bba8:	mov    eax,DWORD PTR [rsp+0x88]
  41bbaf:	test   eax,eax
  41bbb1:	jle    0x41bce0
  41bbb7:	mov    rcx,r12
  41bbba:	mov    edx,eax
  41bbbc:	call   0x41cd50
  41bbc1:	cmp    DWORD PTR [rsp+0x120],0x1
  41bbc9:	mov    r12,rax
  41bbcc:	jg     0x41bbd8
  41bbce:	cmp    r14d,0x1
  41bbd2:	je     0x41bc9c
  41bbd8:	xor    ebp,ebp
  41bbda:	mov    eax,DWORD PTR [r12+0x14]
  41bbdf:	sub    eax,0x1
  41bbe2:	cdqe   
  41bbe4:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  41bbea:	xor    eax,0x1f
  41bbed:	sub    eax,DWORD PTR [rsp+0x40]
  41bbf1:	mov    edx,DWORD PTR [rsp+0x50]
  41bbf5:	sub    eax,0x4
  41bbf8:	and    eax,0x1f
  41bbfb:	add    edx,eax
  41bbfd:	mov    r13d,eax
  41bc00:	mov    DWORD PTR [rsp+0x9c],eax
  41bc07:	test   edx,edx
  41bc09:	mov    ecx,eax
  41bc0b:	jle    0x41bc1f
  41bc0d:	mov    rcx,rsi
  41bc10:	call   0x41cec0
  41bc15:	mov    ecx,DWORD PTR [rsp+0x9c]
  41bc1c:	mov    rsi,rax
  41bc1f:	mov    edx,DWORD PTR [rsp+0x40]
  41bc23:	add    edx,ecx
  41bc25:	test   edx,edx
  41bc27:	jle    0x41bc34
  41bc29:	mov    rcx,r12
  41bc2c:	call   0x41cec0
  41bc31:	mov    r12,rax
  41bc34:	mov    eax,DWORD PTR [rsp+0x6c]
  41bc38:	test   eax,eax
  41bc3a:	jne    0x41bfb1
  41bc40:	mov    r14d,DWORD PTR [rsp+0x68]
  41bc45:	test   r14d,r14d
  41bc48:	jg     0x41be01
  41bc4e:	cmp    DWORD PTR [rsp+0x120],0x2
  41bc56:	jle    0x41be01
  41bc5c:	mov    r11d,DWORD PTR [rsp+0x68]
  41bc61:	test   r11d,r11d
  41bc64:	jne    0x41bd92
  41bc6a:	xor    r8d,r8d
  41bc6d:	mov    rcx,r12
  41bc70:	mov    edx,0x5
  41bc75:	call   0x41cb30
  41bc7a:	mov    rcx,rsi
  41bc7d:	mov    rdx,rax
  41bc80:	mov    r12,rax
  41bc83:	call   0x41cfe0
  41bc88:	test   eax,eax
  41bc8a:	jle    0x41bd92
  41bc90:	mov    ebp,DWORD PTR [rsp+0x30]
  41bc94:	add    ebp,0x2
  41bc97:	jmp    0x41ba32
  41bc9c:	mov    eax,DWORD PTR [rbp+0x4]
  41bc9f:	add    eax,0x1
  41bca2:	cmp    r13d,eax
  41bca5:	jle    0x41bbd8
  41bcab:	add    DWORD PTR [rsp+0x50],0x1
  41bcb0:	add    DWORD PTR [rsp+0x40],0x1
  41bcb5:	mov    ebp,0x1
  41bcba:	nop    WORD PTR [rax+rax*1+0x0]
  41bcc0:	mov    edx,DWORD PTR [rsp+0x88]
  41bcc7:	mov    eax,0x1f
  41bccc:	test   edx,edx
  41bcce:	je     0x41bbed
  41bcd4:	jmp    0x41bbda
  41bcd9:	nop    DWORD PTR [rax+0x0]
  41bce0:	cmp    DWORD PTR [rsp+0x120],0x1
  41bce8:	jg     0x41bcf0
  41bcea:	cmp    r14d,0x1
  41bcee:	je     0x41bcf4
  41bcf0:	xor    ebp,ebp
  41bcf2:	jmp    0x41bcc0
  41bcf4:	mov    eax,DWORD PTR [rbp+0x4]
  41bcf7:	xor    ebp,ebp
  41bcf9:	add    eax,0x1
  41bcfc:	cmp    r13d,eax
  41bcff:	jle    0x41bcc0
  41bd01:	jmp    0x41bcab
  41bd03:	cmp    DWORD PTR [rsp+0x120],0x2
  41bd0b:	mov    DWORD PTR [rsp+0x60],0x0
  41bd13:	je     0x41b910
  41bd19:	pxor   xmm0,xmm0
  41bd1d:	mov    QWORD PTR [rsp+0x60],r9
  41bd22:	mov    DWORD PTR [rsp+0x68],r11d
  41bd27:	cvtsi2sd xmm0,edi
  41bd2b:	mulsd  xmm0,QWORD PTR [rip+0xb8ad]        # 0x4275e0
  41bd33:	cvttsd2si ecx,xmm0
  41bd37:	add    ecx,0x3
  41bd3a:	mov    DWORD PTR [rsp+0x9c],ecx
  41bd41:	call   0x41b0c0
  41bd46:	mov    QWORD PTR [rsp+0x48],rax
  41bd4b:	mov    eax,DWORD PTR [rbp+0xc]
  41bd4e:	mov    r11d,DWORD PTR [rsp+0x68]
  41bd53:	mov    r9,QWORD PTR [rsp+0x60]
  41bd58:	sub    eax,0x1
  41bd5b:	mov    DWORD PTR [rsp+0x38],eax
  41bd5f:	jne    0x41c20d
  41bd65:	mov    eax,0xffffffff
  41bd6a:	mov    DWORD PTR [rsp+0x60],0x1
  41bd72:	mov    DWORD PTR [rsp+0x128],0x0
  41bd7d:	mov    DWORD PTR [rsp+0x8c],eax
  41bd84:	mov    DWORD PTR [rsp+0x68],eax
  41bd88:	jmp    0x41b9c0
  41bd8d:	xor    r12d,r12d
  41bd90:	xor    edi,edi
  41bd92:	mov    ebp,DWORD PTR [rsp+0x128]
  41bd99:	mov    rbx,QWORD PTR [rsp+0x48]
  41bd9e:	mov    r15d,0x10
  41bda4:	neg    ebp
  41bda6:	jmp    0x41ba44
  41bdab:	nop    DWORD PTR [rax+rax*1+0x0]
  41bdb0:	mov    eax,DWORD PTR [rsp+0x30]
  41bdb4:	sub    DWORD PTR [rsp+0x50],eax
  41bdb8:	mov    DWORD PTR [rsp+0x88],0x0
  41bdc3:	neg    eax
  41bdc5:	mov    DWORD PTR [rsp+0x58],eax
  41bdc9:	jmp    0x41b5e9
  41bdce:	xchg   ax,ax
  41bdd0:	neg    eax
  41bdd2:	mov    DWORD PTR [rsp+0x40],0x0
  41bdda:	mov    DWORD PTR [rsp+0x50],eax
  41bdde:	jmp    0x41b5ca
  41bde3:	pxor   xmm0,xmm0
  41bde7:	cvtsi2sd xmm0,eax
  41bdeb:	ucomisd xmm0,xmm1
  41bdef:	jp     0x41bdf7
  41bdf1:	je     0x41b55b
  41bdf7:	sub    DWORD PTR [rsp+0x30],0x1
  41bdfc:	jmp    0x41b55b
  41be01:	mov    r10d,DWORD PTR [rsp+0x60]
  41be06:	test   r10d,r10d
  41be09:	je     0x41c010
  41be0f:	lea    edx,[rbx+r13*1]
  41be13:	test   edx,edx
  41be15:	jle    0x41be22
  41be17:	mov    rcx,rdi
  41be1a:	call   0x41cec0
  41be1f:	mov    rdi,rax
  41be22:	test   ebp,ebp
  41be24:	mov    r13,rdi
  41be27:	jne    0x41c4c5
  41be2d:	mov    DWORD PTR [rsp+0x9c],0x1
  41be38:	mov    rbx,QWORD PTR [rsp+0x48]
  41be3d:	mov    QWORD PTR [rsp+0x40],r12
  41be42:	mov    QWORD PTR [rsp+0x50],r15
  41be47:	jmp    0x41bf0e
  41be4c:	nop    DWORD PTR [rax+0x0]
  41be50:	mov    rcx,r8
  41be53:	call   0x41cac0
  41be58:	mov    eax,r12d
  41be5b:	or     eax,DWORD PTR [rsp+0x120]
  41be62:	jne    0x41be7a
  41be64:	mov    ecx,DWORD PTR [rsp+0x38]
  41be68:	test   ecx,ecx
  41be6a:	jne    0x41be7a
  41be6c:	mov    rax,QWORD PTR [rsp+0x50]
  41be71:	test   BYTE PTR [rax],0x1
  41be74:	je     0x41c635
  41be7a:	test   r14d,r14d
  41be7d:	js     0x41c390
  41be83:	or     r14d,DWORD PTR [rsp+0x120]
  41be8b:	jne    0x41be9b
  41be8d:	mov    rax,QWORD PTR [rsp+0x50]
  41be92:	test   BYTE PTR [rax],0x1
  41be95:	je     0x41c390
  41be9b:	test   r12d,r12d
  41be9e:	jle    0x41beab
  41bea0:	cmp    DWORD PTR [rsp+0x38],0x2
  41bea5:	jne    0x41c59f
  41beab:	add    rbx,0x1
  41beaf:	mov    BYTE PTR [rbx-0x1],bpl
  41beb3:	mov    eax,DWORD PTR [rsp+0x68]
  41beb7:	cmp    DWORD PTR [rsp+0x9c],eax
  41bebe:	je     0x41c52b
  41bec4:	xor    r8d,r8d
  41bec7:	mov    rcx,rsi
  41beca:	mov    edx,0xa
  41becf:	call   0x41cb30
  41bed4:	xor    r8d,r8d
  41bed7:	cmp    rdi,r13
  41beda:	mov    rsi,rax
  41bedd:	mov    edx,0xa
  41bee2:	mov    rcx,rdi
  41bee5:	je     0x41bf80
  41beeb:	call   0x41cb30
  41bef0:	mov    rcx,r13
  41bef3:	xor    r8d,r8d
  41bef6:	mov    edx,0xa
  41befb:	mov    rdi,rax
  41befe:	call   0x41cb30
  41bf03:	mov    r13,rax
  41bf06:	add    DWORD PTR [rsp+0x9c],0x1
  41bf0e:	mov    r12,QWORD PTR [rsp+0x40]
  41bf13:	mov    rcx,rsi
  41bf16:	mov    rdx,r12
  41bf19:	call   0x41b160
  41bf1e:	mov    rdx,rdi
  41bf21:	mov    rcx,rsi
  41bf24:	mov    r15d,eax
  41bf27:	lea    ebp,[rax+0x30]
  41bf2a:	call   0x41cfe0
  41bf2f:	mov    rcx,r12
  41bf32:	mov    rdx,r13
  41bf35:	mov    r14d,eax
  41bf38:	call   0x41d030
  41bf3d:	mov    r9d,DWORD PTR [rax+0x10]
  41bf41:	mov    r8,rax
  41bf44:	mov    r12d,0x1
  41bf4a:	test   r9d,r9d
  41bf4d:	jne    0x41be50
  41bf53:	mov    rdx,rax
  41bf56:	mov    rcx,rsi
  41bf59:	mov    QWORD PTR [rsp+0x58],rax
  41bf5e:	call   0x41cfe0
  41bf63:	mov    r8,QWORD PTR [rsp+0x58]
  41bf68:	mov    r12d,eax
  41bf6b:	jmp    0x41be50
  41bf70:	mov    r12d,DWORD PTR [rsp+0x58]
  41bf75:	mov    ebx,DWORD PTR [rsp+0x50]
  41bf79:	xor    edi,edi
  41bf7b:	jmp    0x41bb1f
  41bf80:	call   0x41cb30
  41bf85:	mov    rdi,rax
  41bf88:	mov    r13,rax
  41bf8b:	jmp    0x41bf06
  41bf90:	mov    edx,DWORD PTR [rsp+0x58]
  41bf94:	mov    rcx,rsi
  41bf97:	call   0x41cd50
  41bf9c:	mov    rsi,rax
  41bf9f:	jmp    0x41bb9b
  41bfa4:	mov    DWORD PTR [rsp+0x60],0x0
  41bfac:	jmp    0x41b647
  41bfb1:	mov    rdx,r12
  41bfb4:	mov    rcx,rsi
  41bfb7:	call   0x41cfe0
  41bfbc:	test   eax,eax
  41bfbe:	jns    0x41bc40
  41bfc4:	xor    r8d,r8d
  41bfc7:	mov    rcx,rsi
  41bfca:	mov    edx,0xa
  41bfcf:	sub    DWORD PTR [rsp+0x30],0x1
  41bfd4:	call   0x41cb30
  41bfd9:	mov    rsi,rax
  41bfdc:	mov    eax,DWORD PTR [rsp+0x60]
  41bfe0:	test   eax,eax
  41bfe2:	jne    0x41c6a8
  41bfe8:	mov    eax,DWORD PTR [rsp+0x8c]
  41bfef:	test   eax,eax
  41bff1:	jg     0x41c005
  41bff3:	cmp    DWORD PTR [rsp+0x120],0x2
  41bffb:	mov    DWORD PTR [rsp+0x68],eax
  41bfff:	jg     0x41bc5c
  41c005:	mov    eax,DWORD PTR [rsp+0x8c]
  41c00c:	mov    DWORD PTR [rsp+0x68],eax
  41c010:	mov    DWORD PTR [rsp+0x9c],0x1
  41c01b:	mov    rbx,QWORD PTR [rsp+0x48]
  41c020:	mov    r13d,DWORD PTR [rsp+0x68]
  41c025:	jmp    0x41c04b
  41c027:	nop    WORD PTR [rax+rax*1+0x0]
  41c030:	mov    rcx,rsi
  41c033:	xor    r8d,r8d
  41c036:	mov    edx,0xa
  41c03b:	call   0x41cb30
  41c040:	add    DWORD PTR [rsp+0x9c],0x1
  41c048:	mov    rsi,rax
  41c04b:	mov    rdx,r12
  41c04e:	mov    rcx,rsi
  41c051:	add    rbx,0x1
  41c055:	call   0x41b160
  41c05a:	lea    ebp,[rax+0x30]
  41c05d:	mov    BYTE PTR [rbx-0x1],bpl
  41c061:	cmp    DWORD PTR [rsp+0x9c],r13d
  41c069:	jl     0x41c030
  41c06b:	xor    r14d,r14d
  41c06e:	mov    eax,DWORD PTR [rsp+0x38]
  41c072:	test   eax,eax
  41c074:	je     0x41c43c
  41c07a:	cmp    eax,0x2
  41c07d:	je     0x41c46c
  41c083:	cmp    DWORD PTR [rsi+0x14],0x1
  41c087:	jle    0x41c603
  41c08d:	movzx  edx,BYTE PTR [rbx-0x1]
  41c091:	mov    rcx,QWORD PTR [rsp+0x48]
  41c096:	jmp    0x41c0b0
  41c098:	nop    DWORD PTR [rax+rax*1+0x0]
  41c0a0:	cmp    rax,rcx
  41c0a3:	je     0x41c25c
  41c0a9:	movzx  edx,BYTE PTR [rax-0x1]
  41c0ad:	mov    rbx,rax
  41c0b0:	cmp    dl,0x39
  41c0b3:	lea    rax,[rbx-0x1]
  41c0b7:	je     0x41c0a0
  41c0b9:	add    edx,0x1
  41c0bc:	mov    r15d,0x20
  41c0c2:	mov    BYTE PTR [rax],dl
  41c0c4:	mov    rcx,r12
  41c0c7:	call   0x41cac0
  41c0cc:	test   rdi,rdi
  41c0cf:	je     0x41c1bf
  41c0d5:	cmp    r14,rdi
  41c0d8:	je     0x41c0e7
  41c0da:	test   r14,r14
  41c0dd:	je     0x41c0e7
  41c0df:	mov    rcx,r14
  41c0e2:	call   0x41cac0
  41c0e7:	mov    ebp,DWORD PTR [rsp+0x30]
  41c0eb:	add    ebp,0x1
  41c0ee:	jmp    0x41ba55
  41c0f3:	mov    QWORD PTR [rsp+0x40],r9
  41c0f8:	mov    rdi,QWORD PTR [rsp+0x48]
  41c0fd:	movsd  xmm0,QWORD PTR [rsp+0x40]
  41c103:	mov    DWORD PTR [rsp+0x9c],0x1
  41c10e:	movapd xmm1,xmm0
  41c112:	mov    rbx,rdi
  41c115:	add    rbx,0x1
  41c119:	divsd  xmm1,xmm2
  41c11d:	cvttsd2si eax,xmm1
  41c121:	pxor   xmm1,xmm1
  41c125:	cvtsi2sd xmm1,eax
  41c129:	lea    edx,[rax+0x30]
  41c12c:	mov    BYTE PTR [rdi],dl
  41c12e:	mulsd  xmm1,xmm2
  41c132:	subsd  xmm0,xmm1
  41c136:	ucomisd xmm0,xmm6
  41c13a:	jp     0x41c13e
  41c13c:	je     0x41c1b0
  41c13e:	mov    edx,DWORD PTR [rsp+0x9c]
  41c145:	cmp    DWORD PTR [rsp+0x68],edx
  41c149:	je     0x41c237
  41c14f:	movsd  xmm3,QWORD PTR [rip+0xb499]        # 0x4275f0
  41c157:	movapd xmm4,xmm6
  41c15b:	mov    ecx,DWORD PTR [rsp+0x68]
  41c15f:	jmp    0x41c170
  41c161:	mov    edx,DWORD PTR [rsp+0x9c]
  41c168:	cmp    ecx,edx
  41c16a:	je     0x41c237
  41c170:	mulsd  xmm0,xmm3
  41c174:	add    edx,0x1
  41c177:	add    rbx,0x1
  41c17b:	mov    DWORD PTR [rsp+0x9c],edx
  41c182:	movapd xmm1,xmm0
  41c186:	divsd  xmm1,xmm2
  41c18a:	cvttsd2si eax,xmm1
  41c18e:	pxor   xmm1,xmm1
  41c192:	cvtsi2sd xmm1,eax
  41c196:	lea    edx,[rax+0x30]
  41c199:	mov    BYTE PTR [rbx-0x1],dl
  41c19c:	mulsd  xmm1,xmm2
  41c1a0:	subsd  xmm0,xmm1
  41c1a4:	ucomisd xmm0,xmm6
  41c1a8:	jp     0x41c161
  41c1aa:	ucomisd xmm0,xmm4
  41c1ae:	jne    0x41c161
  41c1b0:	mov    ebp,DWORD PTR [rsp+0x30]
  41c1b4:	add    ebp,0x1
  41c1b7:	xor    r15d,r15d
  41c1ba:	jmp    0x41b870
  41c1bf:	mov    ebp,DWORD PTR [rsp+0x30]
  41c1c3:	add    ebp,0x1
  41c1c6:	jmp    0x41b870
  41c1cb:	mov    ebx,0x1
  41c1d0:	mov    DWORD PTR [rsp+0x128],0x1
  41c1db:	jmp    0x41b92a
  41c1e0:	cmp    DWORD PTR [rsp+0x68],0xe
  41c1e5:	mov    DWORD PTR [rsp+0x9c],0x1
  41c1f0:	mov    ecx,0x1
  41c1f5:	setbe  bl
  41c1f8:	and    ebx,eax
  41c1fa:	jmp    0x41b679
  41c1ff:	mov    r12d,DWORD PTR [rsp+0x58]
  41c204:	mov    ebx,DWORD PTR [rsp+0x50]
  41c208:	jmp    0x41bb0a
  41c20d:	mov    eax,0xffffffff
  41c212:	xor    ebx,ebx
  41c214:	mov    DWORD PTR [rsp+0x60],0x1
  41c21c:	mov    DWORD PTR [rsp+0x8c],eax
  41c223:	mov    DWORD PTR [rsp+0x68],eax
  41c227:	mov    DWORD PTR [rsp+0x128],0x0
  41c232:	jmp    0x41b6a3
  41c237:	mov    r10d,DWORD PTR [rsp+0x38]
  41c23c:	test   r10d,r10d
  41c23f:	je     0x41c4fe
  41c245:	cmp    DWORD PTR [rsp+0x38],0x1
  41c24a:	je     0x41c5f1
  41c250:	mov    ebp,DWORD PTR [rsp+0x30]
  41c254:	add    ebp,0x1
  41c257:	jmp    0x41b863
  41c25c:	mov    rax,QWORD PTR [rsp+0x48]
  41c261:	add    DWORD PTR [rsp+0x30],0x1
  41c266:	mov    r15d,0x20
  41c26c:	mov    BYTE PTR [rax],0x31
  41c26f:	jmp    0x41c0c4
  41c274:	mov    ebp,0x2
  41c279:	xor    r12d,r12d
  41c27c:	xor    edi,edi
  41c27e:	jmp    0x41ba32
  41c283:	mov    r10,QWORD PTR [rip+0xb696]        # 0x427920
  41c28a:	mov    QWORD PTR [rsp+0x38],rax
  41c28f:	movsd  xmm3,QWORD PTR [rsp+0x38]
  41c295:	mov    DWORD PTR [rsp+0x9c],0x1
  41c2a0:	mov    rbx,QWORD PTR [rsp+0x48]
  41c2a5:	movsd  xmm1,QWORD PTR [rip+0xb343]        # 0x4275f0
  41c2ad:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  41c2b3:	jmp    0x41c2c3
  41c2b5:	mulsd  xmm0,xmm1
  41c2b9:	add    edx,0x1
  41c2bc:	mov    DWORD PTR [rsp+0x9c],edx
  41c2c3:	cvttsd2si eax,xmm0
  41c2c7:	test   eax,eax
  41c2c9:	je     0x41c2d7
  41c2cb:	pxor   xmm2,xmm2
  41c2cf:	cvtsi2sd xmm2,eax
  41c2d3:	subsd  xmm0,xmm2
  41c2d7:	add    rbx,0x1
  41c2db:	add    eax,0x30
  41c2de:	mov    BYTE PTR [rbx-0x1],al
  41c2e1:	mov    edx,DWORD PTR [rsp+0x9c]
  41c2e8:	cmp    edx,r9d
  41c2eb:	jne    0x41c2b5
  41c2ed:	movsd  xmm1,QWORD PTR [rip+0xb32b]        # 0x427620
  41c2f5:	movapd xmm2,xmm3
  41c2f9:	addsd  xmm2,xmm1
  41c2fd:	ucomisd xmm0,xmm2
  41c301:	ja     0x41c357
  41c303:	subsd  xmm1,xmm3
  41c307:	ucomisd xmm1,xmm0
  41c30b:	jbe    0x41b9ae
  41c311:	ucomisd xmm0,xmm6
  41c315:	jp     0x41c69d
  41c31b:	jne    0x41c69d
  41c321:	xor    r15d,r15d
  41c324:	jmp    0x41c337
  41c326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c330:	movzx  eax,BYTE PTR [rbx-0x2]
  41c334:	mov    rbx,rdx
  41c337:	cmp    al,0x30
  41c339:	lea    rdx,[rbx-0x1]
  41c33d:	je     0x41c330
  41c33f:	lea    ebp,[rcx+0x1]
  41c342:	jmp    0x41b870
  41c347:	test   al,0x1
  41c349:	mov    ecx,DWORD PTR [rsp+0x30]
  41c34d:	movzx  eax,BYTE PTR [rbx-0x1]
  41c351:	je     0x41c69d
  41c357:	mov    r8,QWORD PTR [rsp+0x48]
  41c35c:	jmp    0x41c370
  41c35e:	xchg   ax,ax
  41c360:	cmp    rdx,r8
  41c363:	je     0x41c4ac
  41c369:	movzx  eax,BYTE PTR [rdx-0x1]
  41c36d:	mov    rbx,rdx
  41c370:	cmp    al,0x39
  41c372:	lea    rdx,[rbx-0x1]
  41c376:	je     0x41c360
  41c378:	mov    QWORD PTR [rsp+0x48],r8
  41c37d:	add    eax,0x1
  41c380:	mov    BYTE PTR [rdx],al
  41c382:	lea    ebp,[rcx+0x1]
  41c385:	mov    r15d,0x20
  41c38b:	jmp    0x41b870
  41c390:	mov    edx,DWORD PTR [rsp+0x38]
  41c394:	mov    eax,r12d
  41c397:	mov    r14d,ebp
  41c39a:	mov    r12,QWORD PTR [rsp+0x40]
  41c39f:	test   edx,edx
  41c3a1:	je     0x41c5d1
  41c3a7:	cmp    DWORD PTR [rsi+0x14],0x1
  41c3ab:	jle    0x41c5c7
  41c3b1:	cmp    DWORD PTR [rsp+0x38],0x2
  41c3b6:	jne    0x41c407
  41c3b8:	jmp    0x41c5e6
  41c3bd:	nop    DWORD PTR [rax]
  41c3c0:	add    rbx,0x1
  41c3c4:	xor    r8d,r8d
  41c3c7:	mov    rcx,r13
  41c3ca:	mov    BYTE PTR [rbx-0x1],r14b
  41c3ce:	mov    edx,0xa
  41c3d3:	call   0x41cb30
  41c3d8:	cmp    rdi,r13
  41c3db:	mov    rcx,rsi
  41c3de:	mov    edx,0xa
  41c3e3:	cmove  rdi,rax
  41c3e7:	xor    r8d,r8d
  41c3ea:	mov    rbp,rax
  41c3ed:	call   0x41cb30
  41c3f2:	mov    rdx,r12
  41c3f5:	mov    rcx,rax
  41c3f8:	mov    rsi,rax
  41c3fb:	call   0x41b160
  41c400:	lea    r14d,[rax+0x30]
  41c404:	mov    r13,rbp
  41c407:	mov    rdx,r13
  41c40a:	mov    rcx,r12
  41c40d:	call   0x41cfe0
  41c412:	test   eax,eax
  41c414:	jg     0x41c3c0
  41c416:	cmp    r14d,0x39
  41c41a:	je     0x41c616
  41c420:	add    r14d,0x1
  41c424:	mov    r15d,0x20
  41c42a:	mov    BYTE PTR [rbx],r14b
  41c42d:	mov    r14,rdi
  41c430:	add    rbx,0x1
  41c434:	mov    rdi,r13
  41c437:	jmp    0x41c0c4
  41c43c:	mov    rcx,rsi
  41c43f:	mov    edx,0x1
  41c444:	call   0x41cec0
  41c449:	mov    rdx,r12
  41c44c:	mov    rcx,rax
  41c44f:	mov    rsi,rax
  41c452:	call   0x41cfe0
  41c457:	cmp    eax,0x0
  41c45a:	jg     0x41c08d
  41c460:	jne    0x41c46c
  41c462:	and    bpl,0x1
  41c466:	jne    0x41c08d
  41c46c:	cmp    DWORD PTR [rsi+0x14],0x1
  41c470:	mov    r15d,0x10
  41c476:	jg     0x41c483
  41c478:	jmp    0x41c70d
  41c47d:	nop    DWORD PTR [rax]
  41c480:	mov    rbx,rax
  41c483:	cmp    BYTE PTR [rbx-0x1],0x30
  41c487:	lea    rax,[rbx-0x1]
  41c48b:	je     0x41c480
  41c48d:	jmp    0x41c0c4
  41c492:	mov    ebx,DWORD PTR [rsp+0x50]
  41c496:	mov    DWORD PTR [rsp+0x9c],0x0
  41c4a1:	xor    eax,eax
  41c4a3:	sub    ebx,DWORD PTR [rsp+0x68]
  41c4a7:	jmp    0x41bb0a
  41c4ac:	mov    QWORD PTR [rsp+0x48],r8
  41c4b1:	add    ecx,0x1
  41c4b4:	mov    BYTE PTR [r8],0x30
  41c4b8:	mov    rdx,r8
  41c4bb:	mov    eax,0x31
  41c4c0:	jmp    0x41c380
  41c4c5:	mov    ecx,DWORD PTR [rdi+0x8]
  41c4c8:	call   0x41c9b0
  41c4cd:	lea    rcx,[rax+0x10]
  41c4d1:	mov    rbx,rax
  41c4d4:	movsxd rax,DWORD PTR [rdi+0x14]
  41c4d8:	lea    rdx,[rdi+0x10]
  41c4dc:	lea    r8,[rax*4+0x8]
  41c4e4:	call   0x41d860
  41c4e9:	mov    edx,0x1
  41c4ee:	mov    rcx,rbx
  41c4f1:	call   0x41cec0
  41c4f6:	mov    r13,rax
  41c4f9:	jmp    0x41be2d
  41c4fe:	addsd  xmm0,xmm0
  41c502:	ucomisd xmm0,xmm2
  41c506:	ja     0x41c5f1
  41c50c:	ucomisd xmm2,xmm0
  41c510:	jp     0x41c518
  41c512:	je     0x41c347
  41c518:	movzx  eax,BYTE PTR [rbx-0x1]
  41c51c:	mov    ecx,DWORD PTR [rsp+0x30]
  41c520:	mov    r15d,0x10
  41c526:	jmp    0x41c337
  41c52b:	mov    r14,rdi
  41c52e:	mov    r12,QWORD PTR [rsp+0x40]
  41c533:	mov    rdi,r13
  41c536:	jmp    0x41c06e
  41c53b:	mov    eax,DWORD PTR [rsp+0x68]
  41c53f:	test   eax,eax
  41c541:	je     0x41b94a
  41c547:	mov    r9d,DWORD PTR [rsp+0x8c]
  41c54f:	test   r9d,r9d
  41c552:	jle    0x41b9ae
  41c558:	movsd  xmm0,QWORD PTR [rip+0xb090]        # 0x4275f0
  41c560:	mov    ecx,0xffffffff
  41c565:	movsd  xmm1,QWORD PTR [rip+0xb08b]        # 0x4275f8
  41c56d:	mulsd  xmm0,xmm4
  41c571:	mulsd  xmm1,xmm0
  41c575:	addsd  xmm1,QWORD PTR [rip+0xb083]        # 0x427600
  41c57d:	movq   rdx,xmm1
  41c582:	movq   rax,xmm1
  41c587:	shr    rdx,0x20
  41c58b:	mov    eax,eax
  41c58d:	sub    edx,0x3400000
  41c593:	shl    rdx,0x20
  41c597:	or     rax,rdx
  41c59a:	jmp    0x41b752
  41c59f:	cmp    ebp,0x39
  41c5a2:	mov    r12,QWORD PTR [rsp+0x40]
  41c5a7:	mov    rax,rbx
  41c5aa:	je     0x41c619
  41c5ac:	add    ebp,0x1
  41c5af:	mov    r14,rdi
  41c5b2:	add    rbx,0x1
  41c5b6:	mov    BYTE PTR [rax],bpl
  41c5b9:	mov    rdi,r13
  41c5bc:	mov    r15d,0x20
  41c5c2:	jmp    0x41c0c4
  41c5c7:	cmp    DWORD PTR [rsi+0x18],0x0
  41c5cb:	jne    0x41c3b1
  41c5d1:	test   eax,eax
  41c5d3:	jg     0x41c669
  41c5d9:	xor    r15d,r15d
  41c5dc:	cmp    DWORD PTR [rsi+0x14],0x1
  41c5e0:	jle    0x41c6e8
  41c5e6:	mov    r15d,0x10
  41c5ec:	jmp    0x41c42a
  41c5f1:	movzx  eax,BYTE PTR [rbx-0x1]
  41c5f5:	mov    ecx,DWORD PTR [rsp+0x30]
  41c5f9:	mov    r8,QWORD PTR [rsp+0x48]
  41c5fe:	jmp    0x41c370
  41c603:	mov    eax,DWORD PTR [rsi+0x18]
  41c606:	test   eax,eax
  41c608:	jne    0x41c08d
  41c60e:	xor    r15d,r15d
  41c611:	jmp    0x41c483
  41c616:	mov    rax,rbx
  41c619:	mov    r14,rdi
  41c61c:	add    rbx,0x1
  41c620:	mov    rdi,r13
  41c623:	mov    BYTE PTR [rax],0x39
  41c626:	mov    edx,0x39
  41c62b:	mov    rcx,QWORD PTR [rsp+0x48]
  41c630:	jmp    0x41c0b0
  41c635:	cmp    ebp,0x39
  41c638:	mov    r12,QWORD PTR [rsp+0x40]
  41c63d:	mov    rax,rbx
  41c640:	je     0x41c616
  41c642:	test   r14d,r14d
  41c645:	jle    0x41c720
  41c64b:	mov    ebp,r15d
  41c64e:	mov    r15d,0x20
  41c654:	add    ebp,0x31
  41c657:	mov    r14,rdi
  41c65a:	add    rbx,0x1
  41c65e:	mov    BYTE PTR [rax],bpl
  41c661:	mov    rdi,r13
  41c664:	jmp    0x41c0c4
  41c669:	mov    rcx,rsi
  41c66c:	mov    edx,0x1
  41c671:	call   0x41cec0
  41c676:	mov    rdx,r12
  41c679:	mov    rcx,rax
  41c67c:	mov    rsi,rax
  41c67f:	call   0x41cfe0
  41c684:	cmp    eax,0x0
  41c687:	jle    0x41c6fa
  41c689:	cmp    ebp,0x39
  41c68c:	je     0x41c616
  41c68e:	lea    r14d,[rbp+0x1]
  41c692:	mov    r15d,0x20
  41c698:	jmp    0x41c5dc
  41c69d:	mov    r15d,0x10
  41c6a3:	jmp    0x41c337
  41c6a8:	xor    r8d,r8d
  41c6ab:	mov    rcx,rdi
  41c6ae:	mov    edx,0xa
  41c6b3:	call   0x41cb30
  41c6b8:	mov    rdi,rax
  41c6bb:	mov    eax,DWORD PTR [rsp+0x8c]
  41c6c2:	test   eax,eax
  41c6c4:	jg     0x41c6d8
  41c6c6:	cmp    DWORD PTR [rsp+0x120],0x2
  41c6ce:	mov    DWORD PTR [rsp+0x68],eax
  41c6d2:	jg     0x41bc5c
  41c6d8:	mov    eax,DWORD PTR [rsp+0x8c]
  41c6df:	mov    DWORD PTR [rsp+0x68],eax
  41c6e3:	jmp    0x41be0f
  41c6e8:	cmp    DWORD PTR [rsi+0x18],0x0
  41c6ec:	mov    eax,0x10
  41c6f1:	cmovne r15d,eax
  41c6f5:	jmp    0x41c42a
  41c6fa:	jne    0x41c702
  41c6fc:	test   bpl,0x1
  41c700:	jne    0x41c689
  41c702:	mov    r15d,0x20
  41c708:	jmp    0x41c5dc
  41c70d:	cmp    DWORD PTR [rsi+0x18],0x1
  41c711:	sbb    r15d,r15d
  41c714:	not    r15d
  41c717:	and    r15d,0x10
  41c71b:	jmp    0x41c483
  41c720:	cmp    DWORD PTR [rsi+0x14],0x1
  41c724:	mov    r15d,0x10
  41c72a:	jg     0x41c657
  41c730:	cmp    DWORD PTR [rsi+0x18],0x1
  41c734:	sbb    r15d,r15d
  41c737:	not    r15d
  41c73a:	and    r15d,0x10
  41c73e:	jmp    0x41c657
  41c743:	xor    eax,eax
  41c745:	jmp    0x41b427
  41c74a:	nop
  41c74b:	nop
  41c74c:	nop
  41c74d:	nop
  41c74e:	nop
  41c74f:	nop
  41c750:	push   rbp
  41c751:	push   rdi
  41c752:	push   rsi
  41c753:	push   rbx
  41c754:	mov    rsi,rcx
  41c757:	lea    r10,[rcx+0x18]
  41c75b:	movsxd rcx,DWORD PTR [rcx+0x14]
  41c75f:	mov    eax,edx
  41c761:	sar    eax,0x5
  41c764:	cmp    eax,ecx
  41c766:	jge    0x41c7f0
  41c76c:	cdqe   
  41c76e:	and    edx,0x1f
  41c771:	lea    rbx,[r10+rcx*4]
  41c775:	lea    rdi,[r10+rax*4]
  41c779:	je     0x41c803
  41c77f:	mov    r9d,DWORD PTR [rdi]
  41c782:	lea    r8,[rdi+0x4]
  41c786:	mov    ebp,0x20
  41c78b:	mov    ecx,edx
  41c78d:	sub    ebp,edx
  41c78f:	shr    r9d,cl
  41c792:	cmp    rbx,r8
  41c795:	jbe    0x41c848
  41c79b:	mov    r11,r10
  41c79e:	xchg   ax,ax
  41c7a0:	mov    eax,DWORD PTR [r8]
  41c7a3:	mov    ecx,ebp
  41c7a5:	add    r11,0x4
  41c7a9:	add    r8,0x4
  41c7ad:	shl    eax,cl
  41c7af:	mov    ecx,edx
  41c7b1:	or     eax,r9d
  41c7b4:	mov    DWORD PTR [r11-0x4],eax
  41c7b8:	mov    r9d,DWORD PTR [r8-0x4]
  41c7bc:	shr    r9d,cl
  41c7bf:	cmp    rbx,r8
  41c7c2:	ja     0x41c7a0
  41c7c4:	sub    rbx,rdi
  41c7c7:	lea    rax,[rbx-0x5]
  41c7cb:	shr    rax,0x2
  41c7cf:	lea    rax,[r10+rax*4+0x4]
  41c7d4:	test   r9d,r9d
  41c7d7:	mov    DWORD PTR [rax],r9d
  41c7da:	je     0x41c7e0
  41c7dc:	add    rax,0x4
  41c7e0:	sub    rax,r10
  41c7e3:	shr    rax,0x2
  41c7e7:	jmp    0x41c83c
  41c7e9:	nop    DWORD PTR [rax+0x0]
  41c7f0:	mov    DWORD PTR [rsi+0x14],0x0
  41c7f7:	mov    DWORD PTR [rsi+0x18],0x0
  41c7fe:	pop    rbx
  41c7ff:	pop    rsi
  41c800:	pop    rdi
  41c801:	pop    rbp
  41c802:	ret    
  41c803:	cmp    rbx,rdi
  41c806:	mov    rdx,r10
  41c809:	mov    rax,rdi
  41c80c:	jbe    0x41c7f0
  41c80e:	xchg   ax,ax
  41c810:	add    rax,0x4
  41c814:	mov    r8d,DWORD PTR [rax-0x4]
  41c818:	add    rdx,0x4
  41c81c:	cmp    rbx,rax
  41c81f:	mov    DWORD PTR [rdx-0x4],r8d
  41c823:	ja     0x41c810
  41c825:	not    rdi
  41c828:	lea    rax,[rdi+rbx*1]
  41c82c:	shr    rax,0x2
  41c830:	lea    rax,[rax*4+0x4]
  41c838:	shr    rax,0x2
  41c83c:	test   eax,eax
  41c83e:	mov    DWORD PTR [rsi+0x14],eax
  41c841:	je     0x41c7f7
  41c843:	pop    rbx
  41c844:	pop    rsi
  41c845:	pop    rdi
  41c846:	pop    rbp
  41c847:	ret    
  41c848:	mov    rax,r10
  41c84b:	jmp    0x41c7d4
  41c84d:	nop    DWORD PTR [rax]
  41c850:	movsxd rax,DWORD PTR [rcx+0x14]
  41c854:	lea    rdx,[rcx+0x18]
  41c858:	lea    r8,[rdx+rax*4]
  41c85c:	cmp    rdx,r8
  41c85f:	jae    0x41c88b
  41c861:	mov    ecx,DWORD PTR [rcx+0x18]
  41c864:	xor    eax,eax
  41c866:	test   ecx,ecx
  41c868:	je     0x41c876
  41c86a:	jmp    0x41c884
  41c86c:	nop    DWORD PTR [rax+0x0]
  41c870:	mov    ecx,DWORD PTR [rdx]
  41c872:	test   ecx,ecx
  41c874:	jne    0x41c884
  41c876:	add    rdx,0x4
  41c87a:	add    eax,0x20
  41c87d:	cmp    r8,rdx
  41c880:	ja     0x41c870
  41c882:	repz ret 
  41c884:	tzcnt  ecx,ecx
  41c888:	add    eax,ecx
  41c88a:	ret    
  41c88b:	xor    eax,eax
  41c88d:	ret    
  41c88e:	nop
  41c88f:	nop
  41c890:	push   rsi
  41c891:	push   rbx
  41c892:	sub    rsp,0x28
  41c896:	mov    eax,DWORD PTR [rip+0x11e74]        # 0x42e710
  41c89c:	movsxd rsi,ecx
  41c89f:	cmp    eax,0x2
  41c8a2:	je     0x41c90d
  41c8a4:	test   eax,eax
  41c8a6:	je     0x41c8d2
  41c8a8:	cmp    eax,0x1
  41c8ab:	jne    0x41c8cb
  41c8ad:	mov    rbx,QWORD PTR [rip+0x13060]        # 0x42f914
  41c8b4:	mov    ecx,0x1
  41c8b9:	call   rbx
  41c8bb:	mov    eax,DWORD PTR [rip+0x11e4f]        # 0x42e710
  41c8c1:	cmp    eax,0x1
  41c8c4:	je     0x41c8b4
  41c8c6:	cmp    eax,0x2
  41c8c9:	je     0x41c90d
  41c8cb:	add    rsp,0x28
  41c8cf:	pop    rbx
  41c8d0:	pop    rsi
  41c8d1:	ret    
  41c8d2:	mov    al,0x1
  41c8d4:	xchg   DWORD PTR [rip+0x11e36],eax        # 0x42e710
  41c8da:	test   eax,eax
  41c8dc:	jne    0x41c930
  41c8de:	lea    rcx,[rip+0x11e5b]        # 0x42e740
  41c8e5:	mov    rbx,QWORD PTR [rip+0x12fc8]        # 0x42f8b4
  41c8ec:	call   rbx
  41c8ee:	lea    rcx,[rip+0x11e73]        # 0x42e768
  41c8f5:	call   rbx
  41c8f7:	lea    rcx,[rip+0x62]        # 0x41c960
  41c8fe:	call   0x416e40
  41c903:	mov    DWORD PTR [rip+0x11e03],0x2        # 0x42e710
  41c90d:	lea    rdx,[rsi+rsi*4]
  41c911:	lea    rax,[rip+0x11e28]        # 0x42e740
  41c918:	lea    rcx,[rax+rdx*8]
  41c91c:	mov    rax,QWORD PTR [rip+0x12f09]        # 0x42f82c
  41c923:	add    rsp,0x28
  41c927:	pop    rbx
  41c928:	pop    rsi
  41c929:	rex.W jmp rax
  41c92c:	nop    DWORD PTR [rax+0x0]
  41c930:	cmp    eax,0x2
  41c933:	je     0x41c950
  41c935:	mov    eax,DWORD PTR [rip+0x11dd5]        # 0x42e710
  41c93b:	cmp    eax,0x1
  41c93e:	je     0x41c8ad
  41c944:	jmp    0x41c8c6
  41c946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c950:	mov    DWORD PTR [rip+0x11db6],0x2        # 0x42e710
  41c95a:	jmp    0x41c90d
  41c95c:	nop    DWORD PTR [rax+0x0]
  41c960:	push   rbx
  41c961:	sub    rsp,0x20
  41c965:	mov    eax,0x3
  41c96a:	xchg   DWORD PTR [rip+0x11da0],eax        # 0x42e710
  41c970:	cmp    eax,0x2
  41c973:	je     0x41c980
  41c975:	add    rsp,0x20
  41c979:	pop    rbx
  41c97a:	ret    
  41c97b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c980:	mov    rbx,QWORD PTR [rip+0x12e9d]        # 0x42f824
  41c987:	lea    rcx,[rip+0x11db2]        # 0x42e740
  41c98e:	call   rbx
  41c990:	lea    rcx,[rip+0x11dd1]        # 0x42e768
  41c997:	mov    rax,rbx
  41c99a:	add    rsp,0x20
  41c99e:	pop    rbx
  41c99f:	rex.W jmp rax
  41c9a2:	nop    DWORD PTR [rax+0x0]
  41c9a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c9b0:	push   rdi
  41c9b1:	push   rsi
  41c9b2:	push   rbx
  41c9b3:	sub    rsp,0x20
  41c9b7:	mov    ebx,ecx
  41c9b9:	xor    ecx,ecx
  41c9bb:	call   0x41c890
  41c9c0:	cmp    ebx,0x9
  41c9c3:	jg     0x41ca00
  41c9c5:	lea    rdx,[rip+0x11cf4]        # 0x42e6c0
  41c9cc:	movsxd rcx,ebx
  41c9cf:	mov    rdi,QWORD PTR [rdx+rcx*8]
  41c9d3:	test   rdi,rdi
  41c9d6:	je     0x41ca60
  41c9dc:	cmp    DWORD PTR [rip+0x11d2d],0x2        # 0x42e710
  41c9e3:	mov    r8,QWORD PTR [rdi]
  41c9e6:	mov    QWORD PTR [rdx+rcx*8],r8
  41c9ea:	jne    0x41ca46
  41c9ec:	lea    rcx,[rip+0x11d4d]        # 0x42e740
  41c9f3:	call   QWORD PTR [rip+0x12ecb]        # 0x42f8c4
  41c9f9:	jmp    0x41ca46
  41c9fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41ca00:	mov    eax,0x1
  41ca05:	mov    ecx,ebx
  41ca07:	shl    eax,cl
  41ca09:	mov    esi,eax
  41ca0b:	lea    eax,[rax-0x1]
  41ca0e:	cdqe   
  41ca10:	lea    rdx,[rax*4+0x27]
  41ca18:	shr    rdx,0x3
  41ca1c:	mov    edx,edx
  41ca1e:	lea    rcx,[rdx*8+0x0]
  41ca26:	call   0x41d870
  41ca2b:	test   rax,rax
  41ca2e:	mov    rdi,rax
  41ca31:	je     0x41caba
  41ca37:	cmp    DWORD PTR [rip+0x11cd2],0x2        # 0x42e710
  41ca3e:	mov    DWORD PTR [rdi+0x8],ebx
  41ca41:	mov    DWORD PTR [rdi+0xc],esi
  41ca44:	je     0x41c9ec
  41ca46:	mov    DWORD PTR [rdi+0x14],0x0
  41ca4d:	mov    DWORD PTR [rdi+0x10],0x0
  41ca54:	mov    rax,rdi
  41ca57:	add    rsp,0x20
  41ca5b:	pop    rbx
  41ca5c:	pop    rsi
  41ca5d:	pop    rdi
  41ca5e:	ret    
  41ca5f:	nop
  41ca60:	mov    ecx,ebx
  41ca62:	mov    eax,0x1
  41ca67:	mov    rdi,QWORD PTR [rip+0x3822]        # 0x420290
  41ca6e:	shl    eax,cl
  41ca70:	lea    rcx,[rip+0x11349]        # 0x42ddc0
  41ca77:	lea    edx,[rax-0x1]
  41ca7a:	mov    esi,eax
  41ca7c:	mov    rax,rdi
  41ca7f:	movsxd rdx,edx
  41ca82:	sub    rax,rcx
  41ca85:	lea    rdx,[rdx*4+0x27]
  41ca8d:	mov    rcx,rax
  41ca90:	sar    rcx,0x3
  41ca94:	shr    rdx,0x3
  41ca98:	mov    edx,edx
  41ca9a:	add    rcx,rdx
  41ca9d:	cmp    rcx,0x120
  41caa4:	ja     0x41ca1e
  41caaa:	lea    rdx,[rdi+rdx*8]
  41caae:	mov    QWORD PTR [rip+0x37db],rdx        # 0x420290
  41cab5:	jmp    0x41ca37
  41caba:	xor    eax,eax
  41cabc:	jmp    0x41ca57
  41cabe:	xchg   ax,ax
  41cac0:	push   rbx
  41cac1:	sub    rsp,0x20
  41cac5:	test   rcx,rcx
  41cac8:	je     0x41caf9
  41caca:	cmp    DWORD PTR [rcx+0x8],0x9
  41cace:	jg     0x41cb00
  41cad0:	mov    rbx,rcx
  41cad3:	xor    ecx,ecx
  41cad5:	call   0x41c890
  41cada:	movsxd rdx,DWORD PTR [rbx+0x8]
  41cade:	lea    rax,[rip+0x11bdb]        # 0x42e6c0
  41cae5:	cmp    DWORD PTR [rip+0x11c24],0x2        # 0x42e710
  41caec:	mov    rcx,QWORD PTR [rax+rdx*8]
  41caf0:	mov    QWORD PTR [rax+rdx*8],rbx
  41caf4:	mov    QWORD PTR [rbx],rcx
  41caf7:	je     0x41cb10
  41caf9:	add    rsp,0x20
  41cafd:	pop    rbx
  41cafe:	ret    
  41caff:	nop
  41cb00:	add    rsp,0x20
  41cb04:	pop    rbx
  41cb05:	jmp    0x41d8a8
  41cb0a:	nop    WORD PTR [rax+rax*1+0x0]
  41cb10:	mov    rax,QWORD PTR [rip+0x12dad]        # 0x42f8c4
  41cb17:	lea    rcx,[rip+0x11c22]        # 0x42e740
  41cb1e:	add    rsp,0x20
  41cb22:	pop    rbx
  41cb23:	rex.W jmp rax
  41cb26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cb30:	push   rbp
  41cb31:	push   rdi
  41cb32:	push   rsi
  41cb33:	push   rbx
  41cb34:	sub    rsp,0x28
  41cb38:	mov    esi,DWORD PTR [rcx+0x14]
  41cb3b:	xor    r9d,r9d
  41cb3e:	lea    r10,[rcx+0x18]
  41cb42:	mov    rdi,rcx
  41cb45:	movsxd rbx,r8d
  41cb48:	movsxd rdx,edx
  41cb4b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cb50:	mov    eax,DWORD PTR [r10+r9*4]
  41cb54:	imul   rax,rdx
  41cb58:	add    rax,rbx
  41cb5b:	mov    rbx,rax
  41cb5e:	mov    DWORD PTR [r10+r9*4],eax
  41cb62:	add    r9,0x1
  41cb66:	shr    rbx,0x20
  41cb6a:	cmp    esi,r9d
  41cb6d:	jg     0x41cb50
  41cb6f:	test   rbx,rbx
  41cb72:	mov    rax,rdi
  41cb75:	je     0x41cb8c
  41cb77:	cmp    esi,DWORD PTR [rdi+0xc]
  41cb7a:	jge    0x41cb95
  41cb7c:	movsxd rax,esi
  41cb7f:	add    esi,0x1
  41cb82:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  41cb86:	mov    DWORD PTR [rdi+0x14],esi
  41cb89:	mov    rax,rdi
  41cb8c:	add    rsp,0x28
  41cb90:	pop    rbx
  41cb91:	pop    rsi
  41cb92:	pop    rdi
  41cb93:	pop    rbp
  41cb94:	ret    
  41cb95:	mov    eax,DWORD PTR [rdi+0x8]
  41cb98:	lea    ecx,[rax+0x1]
  41cb9b:	call   0x41c9b0
  41cba0:	test   rax,rax
  41cba3:	mov    rbp,rax
  41cba6:	je     0x41cbde
  41cba8:	lea    rcx,[rax+0x10]
  41cbac:	movsxd rax,DWORD PTR [rdi+0x14]
  41cbb0:	lea    rdx,[rdi+0x10]
  41cbb4:	lea    r8,[rax*4+0x8]
  41cbbc:	call   0x41d860
  41cbc1:	mov    rcx,rdi
  41cbc4:	mov    rdi,rbp
  41cbc7:	call   0x41cac0
  41cbcc:	movsxd rax,esi
  41cbcf:	add    esi,0x1
  41cbd2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  41cbd6:	mov    DWORD PTR [rdi+0x14],esi
  41cbd9:	mov    rax,rdi
  41cbdc:	jmp    0x41cb8c
  41cbde:	xor    eax,eax
  41cbe0:	jmp    0x41cb8c
  41cbe2:	nop    DWORD PTR [rax+0x0]
  41cbe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cbf0:	push   rbx
  41cbf1:	sub    rsp,0x20
  41cbf5:	mov    ebx,ecx
  41cbf7:	mov    ecx,0x1
  41cbfc:	call   0x41c9b0
  41cc01:	test   rax,rax
  41cc04:	je     0x41cc10
  41cc06:	mov    DWORD PTR [rax+0x18],ebx
  41cc09:	mov    DWORD PTR [rax+0x14],0x1
  41cc10:	add    rsp,0x20
  41cc14:	pop    rbx
  41cc15:	ret    
  41cc16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cc20:	push   r14
  41cc22:	push   r13
  41cc24:	push   r12
  41cc26:	push   rbp
  41cc27:	push   rdi
  41cc28:	push   rsi
  41cc29:	push   rbx
  41cc2a:	sub    rsp,0x20
  41cc2e:	movsxd r13,DWORD PTR [rcx+0x14]
  41cc32:	movsxd rbx,DWORD PTR [rdx+0x14]
  41cc36:	mov    r12,rcx
  41cc39:	mov    r14,rdx
  41cc3c:	cmp    r13d,ebx
  41cc3f:	jl     0x41cd41
  41cc45:	mov    eax,ebx
  41cc47:	movsxd rbx,r13d
  41cc4a:	movsxd r13,eax
  41cc4d:	xor    eax,eax
  41cc4f:	lea    esi,[rbx+r13*1]
  41cc53:	cmp    esi,DWORD PTR [r12+0xc]
  41cc58:	setg   al
  41cc5b:	add    eax,DWORD PTR [r12+0x8]
  41cc60:	mov    ecx,eax
  41cc62:	call   0x41c9b0
  41cc67:	test   rax,rax
  41cc6a:	je     0x41cd4c
  41cc70:	lea    rdi,[rax+0x18]
  41cc74:	movsxd rdx,esi
  41cc77:	lea    rbp,[rdi+rdx*4]
  41cc7b:	mov    r8,rdi
  41cc7e:	cmp    rdi,rbp
  41cc81:	jae    0x41cc93
  41cc83:	mov    DWORD PTR [r8],0x0
  41cc8a:	add    r8,0x4
  41cc8e:	cmp    rbp,r8
  41cc91:	ja     0x41cc83
  41cc93:	lea    rdx,[r14+0x18]
  41cc97:	add    r12,0x18
  41cc9b:	lea    rbx,[r12+rbx*4]
  41cc9f:	lea    r13,[rdx+r13*4]
  41cca3:	cmp    rdx,r13
  41cca6:	jae    0x41cd09
  41cca8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ccb0:	add    rdx,0x4
  41ccb4:	mov    r11d,DWORD PTR [rdx-0x4]
  41ccb8:	test   r11d,r11d
  41ccbb:	je     0x41cd00
  41ccbd:	mov    r9,rdi
  41ccc0:	mov    r8,r12
  41ccc3:	xor    r10d,r10d
  41ccc6:	jmp    0x41ccd3
  41ccc8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ccd0:	mov    r9,r14
  41ccd3:	add    r8,0x4
  41ccd7:	mov    ecx,DWORD PTR [r8-0x4]
  41ccdb:	mov    r14d,DWORD PTR [r9]
  41ccde:	imul   rcx,r11
  41cce2:	add    rcx,r14
  41cce5:	lea    r14,[r9+0x4]
  41cce9:	add    rcx,r10
  41ccec:	mov    r10,rcx
  41ccef:	mov    DWORD PTR [r14-0x4],ecx
  41ccf3:	shr    r10,0x20
  41ccf7:	cmp    rbx,r8
  41ccfa:	ja     0x41ccd0
  41ccfc:	mov    DWORD PTR [r9+0x4],r10d
  41cd00:	add    rdi,0x4
  41cd04:	cmp    r13,rdx
  41cd07:	ja     0x41ccb0
  41cd09:	test   esi,esi
  41cd0b:	jle    0x41cd2f
  41cd0d:	mov    r8d,DWORD PTR [rbp-0x4]
  41cd11:	lea    rdx,[rbp-0x4]
  41cd15:	test   r8d,r8d
  41cd18:	je     0x41cd2a
  41cd1a:	jmp    0x41cd2f
  41cd1c:	nop    DWORD PTR [rax+0x0]
  41cd20:	sub    rdx,0x4
  41cd24:	mov    ecx,DWORD PTR [rdx]
  41cd26:	test   ecx,ecx
  41cd28:	jne    0x41cd2f
  41cd2a:	sub    esi,0x1
  41cd2d:	jne    0x41cd20
  41cd2f:	mov    DWORD PTR [rax+0x14],esi
  41cd32:	add    rsp,0x20
  41cd36:	pop    rbx
  41cd37:	pop    rsi
  41cd38:	pop    rdi
  41cd39:	pop    rbp
  41cd3a:	pop    r12
  41cd3c:	pop    r13
  41cd3e:	pop    r14
  41cd40:	ret    
  41cd41:	mov    r12,rdx
  41cd44:	mov    r14,rcx
  41cd47:	jmp    0x41cc4d
  41cd4c:	xor    eax,eax
  41cd4e:	jmp    0x41cd32
  41cd50:	push   rbp
  41cd51:	push   rdi
  41cd52:	push   rsi
  41cd53:	push   rbx
  41cd54:	sub    rsp,0x28
  41cd58:	mov    eax,edx
  41cd5a:	mov    rbp,rcx
  41cd5d:	mov    ebx,edx
  41cd5f:	and    eax,0x3
  41cd62:	jne    0x41cdf0
  41cd68:	sar    ebx,0x2
  41cd6b:	mov    rax,rbp
  41cd6e:	test   ebx,ebx
  41cd70:	je     0x41cdbc
  41cd72:	mov    rdi,QWORD PTR [rip+0x11007]        # 0x42dd80
  41cd79:	test   rdi,rdi
  41cd7c:	jne    0x41cd92
  41cd7e:	jmp    0x41ce3d
  41cd83:	sar    ebx,1
  41cd85:	je     0x41cdb9
  41cd87:	mov    rsi,QWORD PTR [rdi]
  41cd8a:	test   rsi,rsi
  41cd8d:	je     0x41cdc5
  41cd8f:	mov    rdi,rsi
  41cd92:	test   bl,0x1
  41cd95:	je     0x41cd83
  41cd97:	mov    rdx,rdi
  41cd9a:	mov    rcx,rbp
  41cd9d:	call   0x41cc20
  41cda2:	test   rax,rax
  41cda5:	mov    rsi,rax
  41cda8:	je     0x41ce13
  41cdaa:	mov    rcx,rbp
  41cdad:	mov    rbp,rsi
  41cdb0:	call   0x41cac0
  41cdb5:	sar    ebx,1
  41cdb7:	jne    0x41cd87
  41cdb9:	mov    rax,rbp
  41cdbc:	add    rsp,0x28
  41cdc0:	pop    rbx
  41cdc1:	pop    rsi
  41cdc2:	pop    rdi
  41cdc3:	pop    rbp
  41cdc4:	ret    
  41cdc5:	mov    ecx,0x1
  41cdca:	call   0x41c890
  41cdcf:	mov    rsi,QWORD PTR [rdi]
  41cdd2:	test   rsi,rsi
  41cdd5:	je     0x41ce1e
  41cdd7:	cmp    DWORD PTR [rip+0x11932],0x2        # 0x42e710
  41cdde:	jne    0x41cd8f
  41cde0:	lea    rcx,[rip+0x11981]        # 0x42e768
  41cde7:	call   QWORD PTR [rip+0x12ad7]        # 0x42f8c4
  41cded:	jmp    0x41cd8f
  41cdef:	nop
  41cdf0:	sub    eax,0x1
  41cdf3:	lea    rdx,[rip+0xa846]        # 0x427640
  41cdfa:	xor    r8d,r8d
  41cdfd:	cdqe   
  41cdff:	mov    edx,DWORD PTR [rdx+rax*4]
  41ce02:	call   0x41cb30
  41ce07:	test   rax,rax
  41ce0a:	mov    rbp,rax
  41ce0d:	jne    0x41cd68
  41ce13:	xor    eax,eax
  41ce15:	add    rsp,0x28
  41ce19:	pop    rbx
  41ce1a:	pop    rsi
  41ce1b:	pop    rdi
  41ce1c:	pop    rbp
  41ce1d:	ret    
  41ce1e:	mov    rdx,rdi
  41ce21:	mov    rcx,rdi
  41ce24:	call   0x41cc20
  41ce29:	test   rax,rax
  41ce2c:	mov    rsi,rax
  41ce2f:	mov    QWORD PTR [rdi],rax
  41ce32:	je     0x41ce13
  41ce34:	mov    QWORD PTR [rax],0x0
  41ce3b:	jmp    0x41cdd7
  41ce3d:	mov    ecx,0x1
  41ce42:	call   0x41c890
  41ce47:	mov    rdi,QWORD PTR [rip+0x10f32]        # 0x42dd80
  41ce4e:	test   rdi,rdi
  41ce51:	je     0x41ce72
  41ce53:	cmp    DWORD PTR [rip+0x118b6],0x2        # 0x42e710
  41ce5a:	jne    0x41cd92
  41ce60:	lea    rcx,[rip+0x11901]        # 0x42e768
  41ce67:	call   QWORD PTR [rip+0x12a57]        # 0x42f8c4
  41ce6d:	jmp    0x41cd92
  41ce72:	mov    ecx,0x1
  41ce77:	call   0x41c9b0
  41ce7c:	test   rax,rax
  41ce7f:	mov    rdi,rax
  41ce82:	je     0x41cea2
  41ce84:	mov    DWORD PTR [rax+0x18],0x271
  41ce8b:	mov    DWORD PTR [rax+0x14],0x1
  41ce92:	mov    QWORD PTR [rip+0x10ee7],rax        # 0x42dd80
  41ce99:	mov    QWORD PTR [rax],0x0
  41cea0:	jmp    0x41ce53
  41cea2:	mov    QWORD PTR [rip+0x10ed3],0x0        # 0x42dd80
  41cead:	xor    eax,eax
  41ceaf:	jmp    0x41ce15
  41ceb4:	xchg   ax,ax
  41ceb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cec0:	push   r13
  41cec2:	push   r12
  41cec4:	push   rbp
  41cec5:	push   rdi
  41cec6:	push   rsi
  41cec7:	push   rbx
  41cec8:	sub    rsp,0x28
  41cecc:	mov    rdi,rcx
  41cecf:	mov    ebp,edx
  41ced1:	mov    esi,edx
  41ced3:	mov    r12d,DWORD PTR [rdi+0x14]
  41ced7:	sar    ebp,0x5
  41ceda:	mov    eax,DWORD PTR [rdi+0xc]
  41cedd:	mov    ecx,DWORD PTR [rcx+0x8]
  41cee0:	add    r12d,ebp
  41cee3:	lea    ebx,[r12+0x1]
  41cee8:	cmp    ebx,eax
  41ceea:	jle    0x41cef9
  41ceec:	nop    DWORD PTR [rax+0x0]
  41cef0:	add    eax,eax
  41cef2:	add    ecx,0x1
  41cef5:	cmp    ebx,eax
  41cef7:	jg     0x41cef0
  41cef9:	call   0x41c9b0
  41cefe:	test   rax,rax
  41cf01:	mov    r13,rax
  41cf04:	je     0x41cfcf
  41cf0a:	test   ebp,ebp
  41cf0c:	lea    r8,[rax+0x18]
  41cf10:	jle    0x41cfc7
  41cf16:	lea    eax,[rbp-0x1]
  41cf19:	lea    r9,[r8+rax*4+0x4]
  41cf1e:	xchg   ax,ax
  41cf20:	add    r8,0x4
  41cf24:	mov    DWORD PTR [r8-0x4],0x0
  41cf2c:	cmp    r8,r9
  41cf2f:	jne    0x41cf20
  41cf31:	movsxd rax,DWORD PTR [rdi+0x14]
  41cf35:	lea    r8,[rdi+0x18]
  41cf39:	mov    edx,esi
  41cf3b:	and    edx,0x1f
  41cf3e:	lea    rbp,[r8+rax*4]
  41cf42:	je     0x41cfb0
  41cf44:	mov    eax,0x20
  41cf49:	xor    r11d,r11d
  41cf4c:	sub    eax,edx
  41cf4e:	jmp    0x41cf53
  41cf50:	mov    r9,rsi
  41cf53:	mov    r10d,DWORD PTR [r8]
  41cf56:	mov    ecx,edx
  41cf58:	lea    rsi,[r9+0x4]
  41cf5c:	add    r8,0x4
  41cf60:	shl    r10d,cl
  41cf63:	mov    ecx,eax
  41cf65:	or     r10d,r11d
  41cf68:	mov    DWORD PTR [rsi-0x4],r10d
  41cf6c:	mov    r11d,DWORD PTR [r8-0x4]
  41cf70:	shr    r11d,cl
  41cf73:	cmp    rbp,r8
  41cf76:	ja     0x41cf50
  41cf78:	add    r12d,0x2
  41cf7c:	test   r11d,r11d
  41cf7f:	mov    DWORD PTR [r9+0x4],r11d
  41cf83:	cmovne ebx,r12d
  41cf87:	sub    ebx,0x1
  41cf8a:	mov    rcx,rdi
  41cf8d:	mov    DWORD PTR [r13+0x14],ebx
  41cf91:	call   0x41cac0
  41cf96:	mov    rax,r13
  41cf99:	add    rsp,0x28
  41cf9d:	pop    rbx
  41cf9e:	pop    rsi
  41cf9f:	pop    rdi
  41cfa0:	pop    rbp
  41cfa1:	pop    r12
  41cfa3:	pop    r13
  41cfa5:	ret    
  41cfa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cfb0:	add    r8,0x4
  41cfb4:	mov    edx,DWORD PTR [r8-0x4]
  41cfb8:	add    r9,0x4
  41cfbc:	cmp    rbp,r8
  41cfbf:	mov    DWORD PTR [r9-0x4],edx
  41cfc3:	ja     0x41cfb0
  41cfc5:	jmp    0x41cf87
  41cfc7:	mov    r9,r8
  41cfca:	jmp    0x41cf31
  41cfcf:	xor    eax,eax
  41cfd1:	jmp    0x41cf99
  41cfd3:	nop    DWORD PTR [rax]
  41cfd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cfe0:	movsxd r8,DWORD PTR [rdx+0x14]
  41cfe4:	mov    eax,DWORD PTR [rcx+0x14]
  41cfe7:	sub    eax,r8d
  41cfea:	test   eax,eax
  41cfec:	jne    0x41d022
  41cfee:	shl    r8,0x2
  41cff2:	add    rcx,0x18
  41cff6:	lea    rax,[rcx+r8*1]
  41cffa:	lea    rdx,[rdx+r8*1+0x18]
  41cfff:	jmp    0x41d006
  41d001:	cmp    rcx,rax
  41d004:	jae    0x41d020
  41d006:	sub    rdx,0x4
  41d00a:	sub    rax,0x4
  41d00e:	mov    r9d,DWORD PTR [rdx]
  41d011:	cmp    DWORD PTR [rax],r9d
  41d014:	je     0x41d001
  41d016:	sbb    eax,eax
  41d018:	or     eax,0x1
  41d01b:	ret    
  41d01c:	nop    DWORD PTR [rax+0x0]
  41d020:	xor    eax,eax
  41d022:	repz ret 
  41d024:	xchg   ax,ax
  41d026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d030:	push   rdi
  41d031:	push   rsi
  41d032:	push   rbx
  41d033:	sub    rsp,0x20
  41d037:	mov    rsi,rcx
  41d03a:	mov    rdi,rdx
  41d03d:	call   0x41cfe0
  41d042:	test   eax,eax
  41d044:	je     0x41d130
  41d04a:	mov    ebx,0x0
  41d04f:	js     0x41d152
  41d055:	mov    ecx,DWORD PTR [rsi+0x8]
  41d058:	call   0x41c9b0
  41d05d:	test   rax,rax
  41d060:	je     0x41d162
  41d066:	movsxd rdx,DWORD PTR [rsi+0x14]
  41d06a:	lea    rcx,[rsi+0x18]
  41d06e:	mov    DWORD PTR [rax+0x10],ebx
  41d071:	lea    r10,[rdi+0x18]
  41d075:	xor    r9d,r9d
  41d078:	mov    rbx,rdx
  41d07b:	lea    rsi,[rcx+rdx*4]
  41d07f:	movsxd rdx,DWORD PTR [rdi+0x14]
  41d083:	lea    rdi,[r10+rdx*4]
  41d087:	lea    rdx,[rax+0x18]
  41d08b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d090:	add    rcx,0x4
  41d094:	add    r10,0x4
  41d098:	mov    r11d,DWORD PTR [r10-0x4]
  41d09c:	mov    r8d,DWORD PTR [rcx-0x4]
  41d0a0:	add    rdx,0x4
  41d0a4:	sub    r8,r11
  41d0a7:	sub    r8,r9
  41d0aa:	mov    r9,r8
  41d0ad:	mov    r11d,r8d
  41d0b0:	mov    DWORD PTR [rdx-0x4],r8d
  41d0b4:	shr    r9,0x20
  41d0b8:	and    r9d,0x1
  41d0bc:	cmp    rdi,r10
  41d0bf:	ja     0x41d090
  41d0c1:	cmp    rsi,rcx
  41d0c4:	mov    rdi,rdx
  41d0c7:	mov    r10,rcx
  41d0ca:	jbe    0x41d106
  41d0cc:	nop    DWORD PTR [rax+0x0]
  41d0d0:	add    rcx,0x4
  41d0d4:	mov    r8d,DWORD PTR [rcx-0x4]
  41d0d8:	add    rdx,0x4
  41d0dc:	sub    r8,r9
  41d0df:	mov    r9,r8
  41d0e2:	mov    r11d,r8d
  41d0e5:	mov    DWORD PTR [rdx-0x4],r8d
  41d0e9:	shr    r9,0x20
  41d0ed:	and    r9d,0x1
  41d0f1:	cmp    rsi,rcx
  41d0f4:	ja     0x41d0d0
  41d0f6:	not    r10
  41d0f9:	lea    rdx,[r10+rsi*1]
  41d0fd:	shr    rdx,0x2
  41d101:	lea    rdx,[rdi+rdx*4+0x4]
  41d106:	sub    rdx,0x4
  41d10a:	test   r11d,r11d
  41d10d:	jne    0x41d11d
  41d10f:	nop
  41d110:	sub    rdx,0x4
  41d114:	mov    ecx,DWORD PTR [rdx]
  41d116:	sub    ebx,0x1
  41d119:	test   ecx,ecx
  41d11b:	je     0x41d110
  41d11d:	mov    DWORD PTR [rax+0x14],ebx
  41d120:	add    rsp,0x20
  41d124:	pop    rbx
  41d125:	pop    rsi
  41d126:	pop    rdi
  41d127:	ret    
  41d128:	nop    DWORD PTR [rax+rax*1+0x0]
  41d130:	xor    ecx,ecx
  41d132:	call   0x41c9b0
  41d137:	test   rax,rax
  41d13a:	je     0x41d162
  41d13c:	mov    DWORD PTR [rax+0x14],0x1
  41d143:	mov    DWORD PTR [rax+0x18],0x0
  41d14a:	add    rsp,0x20
  41d14e:	pop    rbx
  41d14f:	pop    rsi
  41d150:	pop    rdi
  41d151:	ret    
  41d152:	mov    rax,rsi
  41d155:	mov    bl,0x1
  41d157:	mov    rsi,rdi
  41d15a:	mov    rdi,rax
  41d15d:	jmp    0x41d055
  41d162:	xor    eax,eax
  41d164:	jmp    0x41d120
  41d166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d170:	push   rsi
  41d171:	push   rbx
  41d172:	sub    rsp,0x18
  41d176:	movsxd rax,DWORD PTR [rcx+0x14]
  41d17a:	lea    r10,[rcx+0x18]
  41d17e:	mov    ecx,0x20
  41d183:	lea    r9,[r10+rax*4]
  41d187:	mov    eax,DWORD PTR [r9-0x4]
  41d18b:	lea    rbx,[r9-0x4]
  41d18f:	bsr    r8d,eax
  41d193:	xor    r8d,0x1f
  41d197:	sub    ecx,r8d
  41d19a:	cmp    r8d,0xa
  41d19e:	mov    DWORD PTR [rdx],ecx
  41d1a0:	jg     0x41d1f0
  41d1a2:	mov    ecx,0xb
  41d1a7:	mov    r11d,eax
  41d1aa:	xor    esi,esi
  41d1ac:	sub    ecx,r8d
  41d1af:	shr    r11d,cl
  41d1b2:	or     r11d,0x3ff00000
  41d1b9:	shl    r11,0x20
  41d1bd:	cmp    r10,rbx
  41d1c0:	jae    0x41d1c8
  41d1c2:	mov    esi,DWORD PTR [r9-0x8]
  41d1c6:	shr    esi,cl
  41d1c8:	lea    ecx,[r8+0x15]
  41d1cc:	shl    eax,cl
  41d1ce:	mov    edx,eax
  41d1d0:	mov    eax,esi
  41d1d2:	or     eax,edx
  41d1d4:	or     rax,r11
  41d1d7:	mov    QWORD PTR [rsp+0x8],rax
  41d1dc:	movsd  xmm0,QWORD PTR [rsp+0x8]
  41d1e2:	add    rsp,0x18
  41d1e6:	pop    rbx
  41d1e7:	pop    rsi
  41d1e8:	ret    
  41d1e9:	nop    DWORD PTR [rax+0x0]
  41d1f0:	cmp    r10,rbx
  41d1f3:	jae    0x41d250
  41d1f5:	mov    r11d,r8d
  41d1f8:	lea    rsi,[r9-0x8]
  41d1fc:	mov    edx,DWORD PTR [r9-0x8]
  41d200:	sub    r11d,0xb
  41d204:	je     0x41d272
  41d206:	mov    ebx,0x2b
  41d20b:	mov    ecx,r11d
  41d20e:	sub    ebx,r8d
  41d211:	shl    eax,cl
  41d213:	mov    r8d,edx
  41d216:	mov    ecx,ebx
  41d218:	shr    r8d,cl
  41d21b:	or     eax,r8d
  41d21e:	xor    r8d,r8d
  41d221:	or     eax,0x3ff00000
  41d226:	shl    rax,0x20
  41d22a:	cmp    r10,rsi
  41d22d:	jae    0x41d236
  41d22f:	mov    r8d,DWORD PTR [r9-0xc]
  41d233:	shr    r8d,cl
  41d236:	mov    ecx,r11d
  41d239:	shl    edx,cl
  41d23b:	or     r8d,edx
  41d23e:	movabs rdx,0xffffffff00000000
  41d248:	and    rax,rdx
  41d24b:	or     rax,r8
  41d24e:	jmp    0x41d1d7
  41d250:	mov    r11d,r8d
  41d253:	sub    r11d,0xb
  41d257:	je     0x41d270
  41d259:	mov    ecx,r11d
  41d25c:	xor    r8d,r8d
  41d25f:	xor    edx,edx
  41d261:	shl    eax,cl
  41d263:	or     eax,0x3ff00000
  41d268:	shl    rax,0x20
  41d26c:	jmp    0x41d236
  41d26e:	xchg   ax,ax
  41d270:	xor    edx,edx
  41d272:	or     eax,0x3ff00000
  41d277:	shl    rax,0x20
  41d27b:	or     rax,rdx
  41d27e:	jmp    0x41d1d7
  41d283:	nop    DWORD PTR [rax]
  41d286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d290:	push   rdi
  41d291:	push   rsi
  41d292:	push   rbx
  41d293:	sub    rsp,0x20
  41d297:	mov    ecx,0x1
  41d29c:	movq   rbx,xmm0
  41d2a1:	mov    rdi,rdx
  41d2a4:	mov    rsi,r8
  41d2a7:	call   0x41c9b0
  41d2ac:	test   rax,rax
  41d2af:	je     0x41d395
  41d2b5:	mov    r9,rbx
  41d2b8:	shr    r9,0x20
  41d2bc:	mov    r10d,r9d
  41d2bf:	and    r9d,0x7fffffff
  41d2c6:	and    r10d,0xfffff
  41d2cd:	shr    r9d,0x14
  41d2d1:	mov    edx,r10d
  41d2d4:	or     edx,0x100000
  41d2da:	test   r9d,r9d
  41d2dd:	cmovne r10d,edx
  41d2e1:	test   ebx,ebx
  41d2e3:	jne    0x41d324
  41d2e5:	xor    ecx,ecx
  41d2e7:	mov    DWORD PTR [rax+0x14],0x1
  41d2ee:	mov    edx,0x1
  41d2f3:	tzcnt  ecx,r10d
  41d2f8:	shr    r10d,cl
  41d2fb:	test   r9d,r9d
  41d2fe:	lea    r11d,[rcx+0x20]
  41d302:	mov    DWORD PTR [rax+0x18],r10d
  41d306:	je     0x41d363
  41d308:	lea    edx,[r11+r9*1-0x433]
  41d310:	mov    DWORD PTR [rdi],edx
  41d312:	mov    edx,0x35
  41d317:	sub    edx,r11d
  41d31a:	mov    DWORD PTR [rsi],edx
  41d31c:	add    rsp,0x20
  41d320:	pop    rbx
  41d321:	pop    rsi
  41d322:	pop    rdi
  41d323:	ret    
  41d324:	xor    r11d,r11d
  41d327:	tzcnt  r11d,ebx
  41d32c:	mov    ecx,r11d
  41d32f:	shr    ebx,cl
  41d331:	test   r11d,r11d
  41d334:	je     0x41d390
  41d336:	mov    ecx,0x20
  41d33b:	mov    edx,r10d
  41d33e:	sub    ecx,r11d
  41d341:	shl    edx,cl
  41d343:	mov    ecx,r11d
  41d346:	or     ebx,edx
  41d348:	shr    r10d,cl
  41d34b:	mov    DWORD PTR [rax+0x18],ebx
  41d34e:	cmp    r10d,0x1
  41d352:	mov    DWORD PTR [rax+0x1c],r10d
  41d356:	sbb    edx,edx
  41d358:	add    edx,0x2
  41d35b:	test   r9d,r9d
  41d35e:	mov    DWORD PTR [rax+0x14],edx
  41d361:	jne    0x41d308
  41d363:	movsxd rcx,edx
  41d366:	shl    edx,0x5
  41d369:	sub    r11d,0x432
  41d370:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  41d375:	mov    DWORD PTR [rdi],r11d
  41d378:	xor    ecx,0x1f
  41d37b:	sub    edx,ecx
  41d37d:	mov    DWORD PTR [rsi],edx
  41d37f:	add    rsp,0x20
  41d383:	pop    rbx
  41d384:	pop    rsi
  41d385:	pop    rdi
  41d386:	ret    
  41d387:	nop    WORD PTR [rax+rax*1+0x0]
  41d390:	mov    DWORD PTR [rax+0x18],ebx
  41d393:	jmp    0x41d34e
  41d395:	xor    eax,eax
  41d397:	jmp    0x41d31c
  41d399:	nop    DWORD PTR [rax+0x0]
  41d3a0:	mov    rax,rcx
  41d3a3:	lea    rcx,[rdx+0x1]
  41d3a7:	movzx  edx,BYTE PTR [rdx]
  41d3aa:	test   dl,dl
  41d3ac:	mov    BYTE PTR [rax],dl
  41d3ae:	je     0x41d3c2
  41d3b0:	add    rcx,0x1
  41d3b4:	movzx  edx,BYTE PTR [rcx-0x1]
  41d3b8:	add    rax,0x1
  41d3bc:	test   dl,dl
  41d3be:	mov    BYTE PTR [rax],dl
  41d3c0:	jne    0x41d3b0
  41d3c2:	repz ret 
  41d3c4:	nop
  41d3c5:	nop
  41d3c6:	nop
  41d3c7:	nop
  41d3c8:	nop
  41d3c9:	nop
  41d3ca:	nop
  41d3cb:	nop
  41d3cc:	nop
  41d3cd:	nop
  41d3ce:	nop
  41d3cf:	nop
  41d3d0:	push   rbp
  41d3d1:	push   rdi
  41d3d2:	push   rsi
  41d3d3:	push   rbx
  41d3d4:	sub    rsp,0x48
  41d3d8:	test   rdx,rdx
  41d3db:	je     0x41d503
  41d3e1:	test   r8,r8
  41d3e4:	je     0x41d510
  41d3ea:	mov    eax,DWORD PTR [r9]
  41d3ed:	mov    DWORD PTR [r9],0x0
  41d3f4:	mov    DWORD PTR [rsp+0x30],eax
  41d3f8:	movzx  eax,BYTE PTR [rdx]
  41d3fb:	test   al,al
  41d3fd:	je     0x41d4a0
  41d403:	cmp    DWORD PTR [rsp+0x98],0x1
  41d40b:	mov    rsi,r9
  41d40e:	mov    rdi,r8
  41d411:	mov    rbx,rdx
  41d414:	mov    rbp,rcx
  41d417:	jbe    0x41d480
  41d419:	cmp    BYTE PTR [rsp+0x30],0x0
  41d41e:	jne    0x41d4b0
  41d424:	movzx  edx,al
  41d427:	mov    ecx,DWORD PTR [rsp+0x90]
  41d42e:	call   QWORD PTR [rip+0x12488]        # 0x42f8bc
  41d434:	test   eax,eax
  41d436:	je     0x41d480
  41d438:	cmp    rdi,0x1
  41d43c:	jbe    0x41d52c
  41d442:	mov    DWORD PTR [rsp+0x28],0x1
  41d44a:	mov    QWORD PTR [rsp+0x20],rbp
  41d44f:	mov    r9d,0x2
  41d455:	mov    r8,rbx
  41d458:	mov    edx,0x8
  41d45d:	mov    ecx,DWORD PTR [rsp+0x90]
  41d464:	call   QWORD PTR [rip+0x12462]        # 0x42f8cc
  41d46a:	test   eax,eax
  41d46c:	je     0x41d517
  41d472:	mov    eax,0x2
  41d477:	add    rsp,0x48
  41d47b:	pop    rbx
  41d47c:	pop    rsi
  41d47d:	pop    rdi
  41d47e:	pop    rbp
  41d47f:	ret    
  41d480:	mov    eax,DWORD PTR [rsp+0x90]
  41d487:	test   eax,eax
  41d489:	jne    0x41d4d0
  41d48b:	movzx  eax,BYTE PTR [rbx]
  41d48e:	mov    WORD PTR [rbp+0x0],ax
  41d492:	mov    eax,0x1
  41d497:	add    rsp,0x48
  41d49b:	pop    rbx
  41d49c:	pop    rsi
  41d49d:	pop    rdi
  41d49e:	pop    rbp
  41d49f:	ret    
  41d4a0:	xor    edx,edx
  41d4a2:	xor    eax,eax
  41d4a4:	mov    WORD PTR [rcx],dx
  41d4a7:	add    rsp,0x48
  41d4ab:	pop    rbx
  41d4ac:	pop    rsi
  41d4ad:	pop    rdi
  41d4ae:	pop    rbp
  41d4af:	ret    
  41d4b0:	mov    BYTE PTR [rsp+0x31],al
  41d4b4:	mov    DWORD PTR [rsp+0x28],0x1
  41d4bc:	mov    r9d,0x2
  41d4c2:	mov    QWORD PTR [rsp+0x20],rcx
  41d4c7:	lea    r8,[rsp+0x30]
  41d4cc:	jmp    0x41d458
  41d4ce:	xchg   ax,ax
  41d4d0:	mov    DWORD PTR [rsp+0x28],0x1
  41d4d8:	mov    QWORD PTR [rsp+0x20],rbp
  41d4dd:	mov    r9d,0x1
  41d4e3:	mov    r8,rbx
  41d4e6:	mov    edx,0x8
  41d4eb:	mov    ecx,DWORD PTR [rsp+0x90]
  41d4f2:	call   QWORD PTR [rip+0x123d4]        # 0x42f8cc
  41d4f8:	test   eax,eax
  41d4fa:	je     0x41d517
  41d4fc:	mov    eax,0x1
  41d501:	jmp    0x41d4a7
  41d503:	xor    eax,eax
  41d505:	add    rsp,0x48
  41d509:	pop    rbx
  41d50a:	pop    rsi
  41d50b:	pop    rdi
  41d50c:	pop    rbp
  41d50d:	ret    
  41d50e:	xchg   ax,ax
  41d510:	mov    eax,0xfffffffe
  41d515:	jmp    0x41d4a7
  41d517:	call   0x41d9a0
  41d51c:	mov    DWORD PTR [rax],0x2a
  41d522:	mov    eax,0xffffffff
  41d527:	jmp    0x41d4a7
  41d52c:	movzx  eax,BYTE PTR [rbx]
  41d52f:	mov    BYTE PTR [rsi],al
  41d531:	mov    eax,0xfffffffe
  41d536:	jmp    0x41d4a7
  41d53b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d540:	push   rbp
  41d541:	push   rdi
  41d542:	push   rsi
  41d543:	push   rbx
  41d544:	sub    rsp,0x58
  41d548:	xor    eax,eax
  41d54a:	mov    WORD PTR [rsp+0x4e],ax
  41d54f:	lea    rax,[rsp+0x4e]
  41d554:	test   rcx,rcx
  41d557:	mov    rbx,rcx
  41d55a:	mov    rsi,r9
  41d55d:	mov    rdi,rdx
  41d560:	cmove  rbx,rax
  41d564:	mov    rax,QWORD PTR [rip+0xa325]        # 0x427890
  41d56b:	mov    QWORD PTR [rsp+0x38],r8
  41d570:	mov    rax,QWORD PTR [rax]
  41d573:	mov    ebp,DWORD PTR [rax]
  41d575:	call   0x41d9f8
  41d57a:	mov    r8,QWORD PTR [rsp+0x38]
  41d57f:	lea    r9,[rip+0x11242]        # 0x42e7c8
  41d586:	test   rsi,rsi
  41d589:	mov    DWORD PTR [rsp+0x28],ebp
  41d58d:	mov    DWORD PTR [rsp+0x20],eax
  41d591:	mov    rdx,rdi
  41d594:	cmovne r9,rsi
  41d598:	mov    rcx,rbx
  41d59b:	call   0x41d3d0
  41d5a0:	cdqe   
  41d5a2:	add    rsp,0x58
  41d5a6:	pop    rbx
  41d5a7:	pop    rsi
  41d5a8:	pop    rdi
  41d5a9:	pop    rbp
  41d5aa:	ret    
  41d5ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41d5b0:	push   r15
  41d5b2:	push   r14
  41d5b4:	push   r13
  41d5b6:	push   r12
  41d5b8:	push   rbp
  41d5b9:	push   rdi
  41d5ba:	push   rsi
  41d5bb:	push   rbx
  41d5bc:	sub    rsp,0x48
  41d5c0:	lea    rax,[rip+0x111fd]        # 0x42e7c4
  41d5c7:	test   r9,r9
  41d5ca:	mov    rdi,r9
  41d5cd:	mov    r13,rdx
  41d5d0:	cmove  rdi,rax
  41d5d4:	mov    r14,rcx
  41d5d7:	mov    rsi,r8
  41d5da:	call   0x41d9f8
  41d5df:	mov    r12d,eax
  41d5e2:	mov    rax,QWORD PTR [rip+0xa2a7]        # 0x427890
  41d5e9:	test   r13,r13
  41d5ec:	mov    rax,QWORD PTR [rax]
  41d5ef:	mov    ebp,DWORD PTR [rax]
  41d5f1:	je     0x41d675
  41d5f7:	mov    rdx,QWORD PTR [r13+0x0]
  41d5fb:	test   rdx,rdx
  41d5fe:	je     0x41d675
  41d600:	test   r14,r14
  41d603:	je     0x41d680
  41d605:	xor    ebx,ebx
  41d607:	test   rsi,rsi
  41d60a:	jne    0x41d62a
  41d60c:	jmp    0x41d675
  41d60e:	xchg   ax,ax
  41d610:	movsxd r10,eax
  41d613:	add    r14,0x2
  41d617:	mov    rdx,r10
  41d61a:	add    rdx,QWORD PTR [r13+0x0]
  41d61e:	add    rbx,r10
  41d621:	cmp    rsi,rbx
  41d624:	mov    QWORD PTR [r13+0x0],rdx
  41d628:	jbe    0x41d670
  41d62a:	mov    r8,rsi
  41d62d:	mov    DWORD PTR [rsp+0x28],ebp
  41d631:	mov    DWORD PTR [rsp+0x20],r12d
  41d636:	sub    r8,rbx
  41d639:	mov    r9,rdi
  41d63c:	mov    rcx,r14
  41d63f:	call   0x41d3d0
  41d644:	cmp    eax,0x0
  41d647:	jg     0x41d610
  41d649:	jne    0x41d670
  41d64b:	cmp    rbx,rsi
  41d64e:	jae    0x41d670
  41d650:	mov    QWORD PTR [r13+0x0],0x0
  41d658:	mov    rax,rbx
  41d65b:	add    rsp,0x48
  41d65f:	pop    rbx
  41d660:	pop    rsi
  41d661:	pop    rdi
  41d662:	pop    rbp
  41d663:	pop    r12
  41d665:	pop    r13
  41d667:	pop    r14
  41d669:	pop    r15
  41d66b:	ret    
  41d66c:	xor    ebx,ebx
  41d66e:	xchg   ax,ax
  41d670:	mov    rax,rbx
  41d673:	jmp    0x41d65b
  41d675:	xor    eax,eax
  41d677:	jmp    0x41d65b
  41d679:	nop    DWORD PTR [rax+0x0]
  41d680:	xor    eax,eax
  41d682:	test   rsi,rsi
  41d685:	mov    WORD PTR [rsp+0x3e],ax
  41d68a:	je     0x41d66c
  41d68c:	mov    r15d,ebp
  41d68f:	xor    ebx,ebx
  41d691:	lea    r14,[rsp+0x3e]
  41d696:	jmp    0x41d6b5
  41d698:	nop    DWORD PTR [rax+rax*1+0x0]
  41d6a0:	cdqe   
  41d6a2:	mov    rdx,rax
  41d6a5:	add    rdx,QWORD PTR [r13+0x0]
  41d6a9:	add    rbx,rax
  41d6ac:	cmp    rsi,rbx
  41d6af:	mov    QWORD PTR [r13+0x0],rdx
  41d6b3:	jbe    0x41d670
  41d6b5:	mov    DWORD PTR [rsp+0x28],ebp
  41d6b9:	mov    DWORD PTR [rsp+0x20],r12d
  41d6be:	mov    r9,rdi
  41d6c1:	mov    r8,r15
  41d6c4:	mov    rcx,r14
  41d6c7:	call   0x41d3d0
  41d6cc:	test   eax,eax
  41d6ce:	jg     0x41d6a0
  41d6d0:	jmp    0x41d670
  41d6d2:	nop    DWORD PTR [rax+0x0]
  41d6d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d6e0:	push   rbp
  41d6e1:	push   rdi
  41d6e2:	push   rsi
  41d6e3:	push   rbx
  41d6e4:	sub    rsp,0x48
  41d6e8:	xor    eax,eax
  41d6ea:	mov    WORD PTR [rsp+0x3e],ax
  41d6ef:	mov    rax,QWORD PTR [rip+0xa19a]        # 0x427890
  41d6f6:	mov    rbx,r8
  41d6f9:	mov    rsi,rcx
  41d6fc:	mov    rdi,rdx
  41d6ff:	mov    rax,QWORD PTR [rax]
  41d702:	mov    ebp,DWORD PTR [rax]
  41d704:	call   0x41d9f8
  41d709:	lea    r9,[rip+0x110b0]        # 0x42e7c0
  41d710:	test   rbx,rbx
  41d713:	lea    rcx,[rsp+0x3e]
  41d718:	mov    DWORD PTR [rsp+0x28],ebp
  41d71c:	mov    DWORD PTR [rsp+0x20],eax
  41d720:	mov    r8,rdi
  41d723:	cmovne r9,rbx
  41d727:	mov    rdx,rsi
  41d72a:	call   0x41d3d0
  41d72f:	cdqe   
  41d731:	add    rsp,0x48
  41d735:	pop    rbx
  41d736:	pop    rsi
  41d737:	pop    rdi
  41d738:	pop    rbp
  41d739:	ret    
  41d73a:	nop
  41d73b:	nop
  41d73c:	nop
  41d73d:	nop
  41d73e:	nop
  41d73f:	nop
  41d740:	jmp    QWORD PTR [rip+0x124fe]        # 0x42fc44
  41d746:	nop
  41d747:	nop
  41d748:	jmp    QWORD PTR [rip+0x124ee]        # 0x42fc3c
  41d74e:	nop
  41d74f:	nop
  41d750:	jmp    QWORD PTR [rip+0x124de]        # 0x42fc34
  41d756:	nop
  41d757:	nop
  41d758:	jmp    QWORD PTR [rip+0x124ce]        # 0x42fc2c
  41d75e:	nop
  41d75f:	nop
  41d760:	jmp    QWORD PTR [rip+0x124be]        # 0x42fc24
  41d766:	nop
  41d767:	nop
  41d768:	jmp    QWORD PTR [rip+0x124ae]        # 0x42fc1c
  41d76e:	nop
  41d76f:	nop
  41d770:	jmp    QWORD PTR [rip+0x1249e]        # 0x42fc14
  41d776:	nop
  41d777:	nop
  41d778:	jmp    QWORD PTR [rip+0x1248e]        # 0x42fc0c
  41d77e:	nop
  41d77f:	nop
  41d780:	jmp    QWORD PTR [rip+0x1247e]        # 0x42fc04
  41d786:	nop
  41d787:	nop
  41d788:	jmp    QWORD PTR [rip+0x1246e]        # 0x42fbfc
  41d78e:	nop
  41d78f:	nop
  41d790:	jmp    QWORD PTR [rip+0x1245e]        # 0x42fbf4
  41d796:	nop
  41d797:	nop
  41d798:	jmp    QWORD PTR [rip+0x1244e]        # 0x42fbec
  41d79e:	nop
  41d79f:	nop
  41d7a0:	jmp    QWORD PTR [rip+0x1243e]        # 0x42fbe4
  41d7a6:	nop
  41d7a7:	nop
  41d7a8:	jmp    QWORD PTR [rip+0x1242e]        # 0x42fbdc
  41d7ae:	nop
  41d7af:	nop
  41d7b0:	jmp    QWORD PTR [rip+0x1241e]        # 0x42fbd4
  41d7b6:	nop
  41d7b7:	nop
  41d7b8:	jmp    QWORD PTR [rip+0x1240e]        # 0x42fbcc
  41d7be:	nop
  41d7bf:	nop
  41d7c0:	jmp    QWORD PTR [rip+0x123fe]        # 0x42fbc4
  41d7c6:	nop
  41d7c7:	nop
  41d7c8:	jmp    QWORD PTR [rip+0x123ee]        # 0x42fbbc
  41d7ce:	nop
  41d7cf:	nop
  41d7d0:	jmp    QWORD PTR [rip+0x123de]        # 0x42fbb4
  41d7d6:	nop
  41d7d7:	nop
  41d7d8:	jmp    QWORD PTR [rip+0x123ce]        # 0x42fbac
  41d7de:	nop
  41d7df:	nop
  41d7e0:	jmp    QWORD PTR [rip+0x123be]        # 0x42fba4
  41d7e6:	nop
  41d7e7:	nop
  41d7e8:	jmp    QWORD PTR [rip+0x123ae]        # 0x42fb9c
  41d7ee:	nop
  41d7ef:	nop
  41d7f0:	jmp    QWORD PTR [rip+0x1239e]        # 0x42fb94
  41d7f6:	nop
  41d7f7:	nop
  41d7f8:	jmp    QWORD PTR [rip+0x1238e]        # 0x42fb8c
  41d7fe:	nop
  41d7ff:	nop
  41d800:	jmp    QWORD PTR [rip+0x1237e]        # 0x42fb84
  41d806:	nop
  41d807:	nop
  41d808:	jmp    QWORD PTR [rip+0x1236e]        # 0x42fb7c
  41d80e:	nop
  41d80f:	nop
  41d810:	jmp    QWORD PTR [rip+0x1235e]        # 0x42fb74
  41d816:	nop
  41d817:	nop
  41d818:	jmp    QWORD PTR [rip+0x1234e]        # 0x42fb6c
  41d81e:	nop
  41d81f:	nop
  41d820:	jmp    QWORD PTR [rip+0x1233e]        # 0x42fb64
  41d826:	nop
  41d827:	nop
  41d828:	jmp    QWORD PTR [rip+0x1232e]        # 0x42fb5c
  41d82e:	nop
  41d82f:	nop
  41d830:	jmp    QWORD PTR [rip+0x1231e]        # 0x42fb54
  41d836:	nop
  41d837:	nop
  41d838:	jmp    QWORD PTR [rip+0x1230e]        # 0x42fb4c
  41d83e:	nop
  41d83f:	nop
  41d840:	jmp    QWORD PTR [rip+0x122fe]        # 0x42fb44
  41d846:	nop
  41d847:	nop
  41d848:	jmp    QWORD PTR [rip+0x122ee]        # 0x42fb3c
  41d84e:	nop
  41d84f:	nop
  41d850:	jmp    QWORD PTR [rip+0x122de]        # 0x42fb34
  41d856:	nop
  41d857:	nop
  41d858:	jmp    QWORD PTR [rip+0x122ce]        # 0x42fb2c
  41d85e:	nop
  41d85f:	nop
  41d860:	jmp    QWORD PTR [rip+0x122be]        # 0x42fb24
  41d866:	nop
  41d867:	nop
  41d868:	jmp    QWORD PTR [rip+0x122ae]        # 0x42fb1c
  41d86e:	nop
  41d86f:	nop
  41d870:	jmp    QWORD PTR [rip+0x1229e]        # 0x42fb14
  41d876:	nop
  41d877:	nop
  41d878:	jmp    QWORD PTR [rip+0x1228e]        # 0x42fb0c
  41d87e:	nop
  41d87f:	nop
  41d880:	jmp    QWORD PTR [rip+0x1227e]        # 0x42fb04
  41d886:	nop
  41d887:	nop
  41d888:	jmp    QWORD PTR [rip+0x1226e]        # 0x42fafc
  41d88e:	nop
  41d88f:	nop
  41d890:	jmp    QWORD PTR [rip+0x1225e]        # 0x42faf4
  41d896:	nop
  41d897:	nop
  41d898:	jmp    QWORD PTR [rip+0x1224e]        # 0x42faec
  41d89e:	nop
  41d89f:	nop
  41d8a0:	jmp    QWORD PTR [rip+0x1223e]        # 0x42fae4
  41d8a6:	nop
  41d8a7:	nop
  41d8a8:	jmp    QWORD PTR [rip+0x1222e]        # 0x42fadc
  41d8ae:	nop
  41d8af:	nop
  41d8b0:	jmp    QWORD PTR [rip+0x1221e]        # 0x42fad4
  41d8b6:	nop
  41d8b7:	nop
  41d8b8:	jmp    QWORD PTR [rip+0x1220e]        # 0x42facc
  41d8be:	nop
  41d8bf:	nop
  41d8c0:	jmp    QWORD PTR [rip+0x121fe]        # 0x42fac4
  41d8c6:	nop
  41d8c7:	nop
  41d8c8:	jmp    QWORD PTR [rip+0x121ee]        # 0x42fabc
  41d8ce:	nop
  41d8cf:	nop
  41d8d0:	jmp    QWORD PTR [rip+0x121de]        # 0x42fab4
  41d8d6:	nop
  41d8d7:	nop
  41d8d8:	jmp    QWORD PTR [rip+0x121ce]        # 0x42faac
  41d8de:	nop
  41d8df:	nop
  41d8e0:	jmp    QWORD PTR [rip+0x121be]        # 0x42faa4
  41d8e6:	nop
  41d8e7:	nop
  41d8e8:	jmp    QWORD PTR [rip+0x121ae]        # 0x42fa9c
  41d8ee:	nop
  41d8ef:	nop
  41d8f0:	jmp    QWORD PTR [rip+0x1219e]        # 0x42fa94
  41d8f6:	nop
  41d8f7:	nop
  41d8f8:	jmp    QWORD PTR [rip+0x1218e]        # 0x42fa8c
  41d8fe:	nop
  41d8ff:	nop
  41d900:	jmp    QWORD PTR [rip+0x1217e]        # 0x42fa84
  41d906:	nop
  41d907:	nop
  41d908:	jmp    QWORD PTR [rip+0x1216e]        # 0x42fa7c
  41d90e:	nop
  41d90f:	nop
  41d910:	jmp    QWORD PTR [rip+0x1215e]        # 0x42fa74
  41d916:	nop
  41d917:	nop
  41d918:	jmp    QWORD PTR [rip+0x1214e]        # 0x42fa6c
  41d91e:	nop
  41d91f:	nop
  41d920:	jmp    QWORD PTR [rip+0x1213e]        # 0x42fa64
  41d926:	nop
  41d927:	nop
  41d928:	jmp    QWORD PTR [rip+0x1212e]        # 0x42fa5c
  41d92e:	nop
  41d92f:	nop
  41d930:	jmp    QWORD PTR [rip+0x1211e]        # 0x42fa54
  41d936:	nop
  41d937:	nop
  41d938:	jmp    QWORD PTR [rip+0x1210e]        # 0x42fa4c
  41d93e:	nop
  41d93f:	nop
  41d940:	jmp    QWORD PTR [rip+0x120fe]        # 0x42fa44
  41d946:	nop
  41d947:	nop
  41d948:	jmp    QWORD PTR [rip+0x120ee]        # 0x42fa3c
  41d94e:	nop
  41d94f:	nop
  41d950:	jmp    QWORD PTR [rip+0x120de]        # 0x42fa34
  41d956:	nop
  41d957:	nop
  41d958:	jmp    QWORD PTR [rip+0x120ce]        # 0x42fa2c
  41d95e:	nop
  41d95f:	nop
  41d960:	jmp    QWORD PTR [rip+0x120be]        # 0x42fa24
  41d966:	nop
  41d967:	nop
  41d968:	jmp    QWORD PTR [rip+0x120ae]        # 0x42fa1c
  41d96e:	nop
  41d96f:	nop
  41d970:	jmp    QWORD PTR [rip+0x1209e]        # 0x42fa14
  41d976:	nop
  41d977:	nop
  41d978:	jmp    QWORD PTR [rip+0x1208e]        # 0x42fa0c
  41d97e:	nop
  41d97f:	nop
  41d980:	jmp    QWORD PTR [rip+0x1207e]        # 0x42fa04
  41d986:	nop
  41d987:	nop
  41d988:	jmp    QWORD PTR [rip+0x12066]        # 0x42f9f4
  41d98e:	nop
  41d98f:	nop
  41d990:	jmp    QWORD PTR [rip+0x12056]        # 0x42f9ec
  41d996:	nop
  41d997:	nop
  41d998:	jmp    QWORD PTR [rip+0x12046]        # 0x42f9e4
  41d99e:	nop
  41d99f:	nop
  41d9a0:	jmp    QWORD PTR [rip+0x12036]        # 0x42f9dc
  41d9a6:	nop
  41d9a7:	nop
  41d9a8:	jmp    QWORD PTR [rip+0x12026]        # 0x42f9d4
  41d9ae:	nop
  41d9af:	nop
  41d9b0:	jmp    QWORD PTR [rip+0x12016]        # 0x42f9cc
  41d9b6:	nop
  41d9b7:	nop
  41d9b8:	jmp    QWORD PTR [rip+0x12006]        # 0x42f9c4
  41d9be:	nop
  41d9bf:	nop
  41d9c0:	jmp    QWORD PTR [rip+0x11ff6]        # 0x42f9bc
  41d9c6:	nop
  41d9c7:	nop
  41d9c8:	jmp    QWORD PTR [rip+0x11fde]        # 0x42f9ac
  41d9ce:	nop
  41d9cf:	nop
  41d9d0:	jmp    QWORD PTR [rip+0x11fce]        # 0x42f9a4
  41d9d6:	nop
  41d9d7:	nop
  41d9d8:	jmp    QWORD PTR [rip+0x11fb6]        # 0x42f994
  41d9de:	nop
  41d9df:	nop
  41d9e0:	jmp    QWORD PTR [rip+0x11fa6]        # 0x42f98c
  41d9e6:	nop
  41d9e7:	nop
  41d9e8:	jmp    QWORD PTR [rip+0x11f8e]        # 0x42f97c
  41d9ee:	nop
  41d9ef:	nop
  41d9f0:	jmp    QWORD PTR [rip+0x11f7e]        # 0x42f974
  41d9f6:	nop
  41d9f7:	nop
  41d9f8:	jmp    QWORD PTR [rip+0x11f6e]        # 0x42f96c
  41d9fe:	nop
  41d9ff:	nop
  41da00:	jmp    QWORD PTR [rip+0x11f5e]        # 0x42f964
  41da06:	nop
  41da07:	nop
  41da08:	nop    DWORD PTR [rax+rax*1+0x0]
  41da10:	mov    rax,QWORD PTR [rip+0x10db9]        # 0x42e7d0
  41da17:	ret    
  41da18:	nop    DWORD PTR [rax+rax*1+0x0]
  41da20:	mov    rax,rcx
  41da23:	xchg   QWORD PTR [rip+0x10da6],rax        # 0x42e7d0
  41da2a:	ret    
  41da2b:	nop
  41da2c:	nop
  41da2d:	nop
  41da2e:	nop
  41da2f:	nop
  41da30:	mov    eax,DWORD PTR [rip+0x10daa]        # 0x42e7e0
  41da36:	ret    
  41da37:	nop    WORD PTR [rax+rax*1+0x0]
  41da40:	mov    eax,ecx
  41da42:	xchg   DWORD PTR [rip+0x10d98],eax        # 0x42e7e0
  41da48:	ret    
  41da49:	nop    DWORD PTR [rax+0x0]
  41da50:	push   rbx
  41da51:	sub    rsp,0x20
  41da55:	mov    ebx,ecx
  41da57:	lea    rcx,[rip+0x9d62]        # 0x4277c0
  41da5e:	call   QWORD PTR [rip+0x11e20]        # 0x42f884
  41da64:	lea    rdx,[rip+0x9d6b]        # 0x4277d6
  41da6b:	mov    rcx,rax
  41da6e:	call   QWORD PTR [rip+0x11e20]        # 0x42f894
  41da74:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x41da40
  41da7b:	test   rax,rax
  41da7e:	mov    ecx,ebx
  41da80:	cmove  rax,rdx
  41da84:	mov    QWORD PTR [rip+0x282d],rax        # 0x4202b8
  41da8b:	add    rsp,0x20
  41da8f:	pop    rbx
  41da90:	rex.W jmp rax
  41da93:	nop    DWORD PTR [rax]
  41da96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41daa0:	sub    rsp,0x28
  41daa4:	lea    rcx,[rip+0x9d15]        # 0x4277c0
  41daab:	call   QWORD PTR [rip+0x11dd3]        # 0x42f884
  41dab1:	lea    rdx,[rip+0x9d31]        # 0x4277e9
  41dab8:	mov    rcx,rax
  41dabb:	call   QWORD PTR [rip+0x11dd3]        # 0x42f894
  41dac1:	lea    rdx,[rip+0xffffffffffffff68]        # 0x41da30
  41dac8:	test   rax,rax
  41dacb:	cmove  rax,rdx
  41dacf:	mov    QWORD PTR [rip+0x27da],rax        # 0x4202b0
  41dad6:	add    rsp,0x28
  41dada:	rex.W jmp rax
  41dadd:	nop    DWORD PTR [rax]
  41dae0:	mov    rax,QWORD PTR [rip+0x27d1]        # 0x4202b8
  41dae7:	rex.W jmp rax
  41daea:	nop    WORD PTR [rax+rax*1+0x0]
  41daf0:	mov    rax,QWORD PTR [rip+0x27b9]        # 0x4202b0
  41daf7:	rex.W jmp rax
  41dafa:	nop
  41dafb:	nop
  41dafc:	nop
  41dafd:	nop
  41dafe:	nop
  41daff:	nop
  41db00:	jmp    QWORD PTR [rip+0x1218e]        # 0x42fc94
  41db06:	nop
  41db07:	nop
  41db08:	jmp    QWORD PTR [rip+0x1217e]        # 0x42fc8c
  41db0e:	nop
  41db0f:	nop
  41db10:	jmp    QWORD PTR [rip+0x1216e]        # 0x42fc84
  41db16:	nop
  41db17:	nop
  41db18:	jmp    QWORD PTR [rip+0x1215e]        # 0x42fc7c
  41db1e:	nop
  41db1f:	nop
  41db20:	jmp    QWORD PTR [rip+0x1214e]        # 0x42fc74
  41db26:	nop
  41db27:	nop
  41db28:	nop    DWORD PTR [rax+rax*1+0x0]
  41db30:	jmp    QWORD PTR [rip+0x11e1e]        # 0x42f954
  41db36:	nop
  41db37:	nop
  41db38:	jmp    QWORD PTR [rip+0x11e0e]        # 0x42f94c
  41db3e:	nop
  41db3f:	nop
  41db40:	jmp    QWORD PTR [rip+0x11dfe]        # 0x42f944
  41db46:	nop
  41db47:	nop
  41db48:	jmp    QWORD PTR [rip+0x11dee]        # 0x42f93c
  41db4e:	nop
  41db4f:	nop
  41db50:	jmp    QWORD PTR [rip+0x11dde]        # 0x42f934
  41db56:	nop
  41db57:	nop
  41db58:	jmp    QWORD PTR [rip+0x11dce]        # 0x42f92c
  41db5e:	nop
  41db5f:	nop
  41db60:	jmp    QWORD PTR [rip+0x11dbe]        # 0x42f924
  41db66:	nop
  41db67:	nop
  41db68:	jmp    QWORD PTR [rip+0x11dae]        # 0x42f91c
  41db6e:	nop
  41db6f:	nop
  41db70:	jmp    QWORD PTR [rip+0x11d9e]        # 0x42f914
  41db76:	nop
  41db77:	nop
  41db78:	jmp    QWORD PTR [rip+0x11d8e]        # 0x42f90c
  41db7e:	nop
  41db7f:	nop
  41db80:	jmp    QWORD PTR [rip+0x11d7e]        # 0x42f904
  41db86:	nop
  41db87:	nop
  41db88:	jmp    QWORD PTR [rip+0x11d6e]        # 0x42f8fc
  41db8e:	nop
  41db8f:	nop
  41db90:	jmp    QWORD PTR [rip+0x11d5e]        # 0x42f8f4
  41db96:	nop
  41db97:	nop
  41db98:	jmp    QWORD PTR [rip+0x11d4e]        # 0x42f8ec
  41db9e:	nop
  41db9f:	nop
  41dba0:	jmp    QWORD PTR [rip+0x11d3e]        # 0x42f8e4
  41dba6:	nop
  41dba7:	nop
  41dba8:	jmp    QWORD PTR [rip+0x11d2e]        # 0x42f8dc
  41dbae:	nop
  41dbaf:	nop
  41dbb0:	jmp    QWORD PTR [rip+0x11d1e]        # 0x42f8d4
  41dbb6:	nop
  41dbb7:	nop
  41dbb8:	jmp    QWORD PTR [rip+0x11d0e]        # 0x42f8cc
  41dbbe:	nop
  41dbbf:	nop
  41dbc0:	jmp    QWORD PTR [rip+0x11cfe]        # 0x42f8c4
  41dbc6:	nop
  41dbc7:	nop
  41dbc8:	jmp    QWORD PTR [rip+0x11cee]        # 0x42f8bc
  41dbce:	nop
  41dbcf:	nop
  41dbd0:	jmp    QWORD PTR [rip+0x11cde]        # 0x42f8b4
  41dbd6:	nop
  41dbd7:	nop
  41dbd8:	jmp    QWORD PTR [rip+0x11cce]        # 0x42f8ac
  41dbde:	nop
  41dbdf:	nop
  41dbe0:	jmp    QWORD PTR [rip+0x11cbe]        # 0x42f8a4
  41dbe6:	nop
  41dbe7:	nop
  41dbe8:	jmp    QWORD PTR [rip+0x11cae]        # 0x42f89c
  41dbee:	nop
  41dbef:	nop
  41dbf0:	jmp    QWORD PTR [rip+0x11c9e]        # 0x42f894
  41dbf6:	nop
  41dbf7:	nop
  41dbf8:	jmp    QWORD PTR [rip+0x11c8e]        # 0x42f88c
  41dbfe:	nop
  41dbff:	nop
  41dc00:	jmp    QWORD PTR [rip+0x11c7e]        # 0x42f884
  41dc06:	nop
  41dc07:	nop
  41dc08:	jmp    QWORD PTR [rip+0x11c6e]        # 0x42f87c
  41dc0e:	nop
  41dc0f:	nop
  41dc10:	jmp    QWORD PTR [rip+0x11c5e]        # 0x42f874
  41dc16:	nop
  41dc17:	nop
  41dc18:	jmp    QWORD PTR [rip+0x11c4e]        # 0x42f86c
  41dc1e:	nop
  41dc1f:	nop
  41dc20:	jmp    QWORD PTR [rip+0x11c3e]        # 0x42f864
  41dc26:	nop
  41dc27:	nop
  41dc28:	jmp    QWORD PTR [rip+0x11c2e]        # 0x42f85c
  41dc2e:	nop
  41dc2f:	nop
  41dc30:	jmp    QWORD PTR [rip+0x11c1e]        # 0x42f854
  41dc36:	nop
  41dc37:	nop
  41dc38:	jmp    QWORD PTR [rip+0x11c0e]        # 0x42f84c
  41dc3e:	nop
  41dc3f:	nop
  41dc40:	jmp    QWORD PTR [rip+0x11bfe]        # 0x42f844
  41dc46:	nop
  41dc47:	nop
  41dc48:	jmp    QWORD PTR [rip+0x11bee]        # 0x42f83c
  41dc4e:	nop
  41dc4f:	nop
  41dc50:	jmp    QWORD PTR [rip+0x11bde]        # 0x42f834
  41dc56:	nop
  41dc57:	nop
  41dc58:	jmp    QWORD PTR [rip+0x11bce]        # 0x42f82c
  41dc5e:	nop
  41dc5f:	nop
  41dc60:	jmp    QWORD PTR [rip+0x11bbe]        # 0x42f824
  41dc66:	nop
  41dc67:	nop
  41dc68:	jmp    QWORD PTR [rip+0x11bae]        # 0x42f81c
  41dc6e:	nop
  41dc6f:	nop
  41dc70:	push   r13
  41dc72:	push   r12
  41dc74:	push   rbp
  41dc75:	push   rdi
  41dc76:	push   rsi
  41dc77:	push   rbx
  41dc78:	sub    rsp,0x98
  41dc7f:	mov    ebx,ecx
  41dc81:	mov    rsi,rdx
  41dc84:	call   0x416f00
  41dc89:	call   0x4038b0
  41dc8e:	test   eax,eax
  41dc90:	js     0x41e146
  41dc96:	mov    rcx,QWORD PTR [rip+0x9d83]        # 0x427a20
  41dc9d:	mov    edx,ebx
  41dc9f:	mov    r8,rsi
  41dca2:	call   0x40f140
  41dca7:	lea    rcx,[rip+0xfffffffffffe38b2]        # 0x401560
  41dcae:	call   0x4038a8
  41dcb3:	mov    rbx,QWORD PTR [rip+0x9d66]        # 0x427a20
  41dcba:	mov    rax,QWORD PTR [rbx+0x78]
  41dcbe:	mov    ecx,DWORD PTR [rax+0x18]
  41dcc1:	call   0x4038a0
  41dcc6:	mov    rax,QWORD PTR [rbx+0x78]
  41dcca:	test   BYTE PTR [rax+0x148],0xf
  41dcd1:	jne    0x41dd93
  41dcd7:	call   QWORD PTR [rip+0x11caf]        # 0x42f98c
  41dcdd:	add    rax,0x30
  41dce1:	mov    QWORD PTR [rip+0x10b18],rax        # 0x42e800
  41dce8:	mov    rax,QWORD PTR [rbx+0x78]
  41dcec:	test   BYTE PTR [rax+0xe0],0xf
  41dcf3:	je     0x41dde4
  41dcf9:	mov    rcx,QWORD PTR [rax+0xe8]
  41dd00:	lea    rdx,[rip+0x3635]        # 0x42133c
  41dd07:	call   0x41d8d0
  41dd0c:	test   rax,rax
  41dd0f:	mov    QWORD PTR [rip+0x10af2],rax        # 0x42e808
  41dd16:	je     0x41e173
  41dd1c:	mov    rax,QWORD PTR [rbx+0x78]
  41dd20:	xor    edx,edx
  41dd22:	test   BYTE PTR [rax+0x5c0],0x20
  41dd29:	setne  dl
  41dd2c:	test   BYTE PTR [rax+0x280],0xf
  41dd33:	mov    DWORD PTR [rip+0xd2fb],edx        # 0x42b034
  41dd39:	jne    0x41ddf6
  41dd3f:	test   BYTE PTR [rax+0x2e8],0xf
  41dd46:	jne    0x41dec9
  41dd4c:	test   BYTE PTR [rax+0x350],0xf
  41dd53:	jne    0x41e02c
  41dd59:	test   BYTE PTR [rax+0x218],0xf
  41dd60:	jne    0x41e07a
  41dd66:	test   BYTE PTR [rax+0x1b0],0xf
  41dd6d:	jne    0x41df1e
  41dd73:	mov    edx,0x1
  41dd78:	mov    rcx,rbx
  41dd7b:	call   QWORD PTR [rbx+0x98]
  41dd81:	xor    eax,eax
  41dd83:	add    rsp,0x98
  41dd8a:	pop    rbx
  41dd8b:	pop    rsi
  41dd8c:	pop    rdi
  41dd8d:	pop    rbp
  41dd8e:	pop    r12
  41dd90:	pop    r13
  41dd92:	ret    
  41dd93:	mov    rcx,QWORD PTR [rax+0x150]
  41dd9a:	lea    rdx,[rip+0x3594]        # 0x421335
  41dda1:	call   0x41d8d0
  41dda6:	test   rax,rax
  41dda9:	mov    QWORD PTR [rip+0x10a50],rax        # 0x42e800
  41ddb0:	jne    0x41dce8
  41ddb6:	mov    rax,QWORD PTR [rbx+0x78]
  41ddba:	mov    rbx,QWORD PTR [rax+0x150]
  41ddc1:	call   QWORD PTR [rip+0x11bc5]        # 0x42f98c
  41ddc7:	lea    rdx,[rip+0x356a]        # 0x421338
  41ddce:	lea    rcx,[rax+0x60]
  41ddd2:	mov    r8,rbx
  41ddd5:	call   0x401530
  41ddda:	mov    ecx,0x1
  41dddf:	call   0x41d8f8
  41dde4:	call   QWORD PTR [rip+0x11ba2]        # 0x42f98c
  41ddea:	mov    QWORD PTR [rip+0x10a17],rax        # 0x42e808
  41ddf1:	jmp    0x41dd1c
  41ddf6:	lea    rcx,[rsp+0x50]
  41ddfb:	call   0x403870
  41de00:	test   eax,eax
  41de02:	js     0x41e183
  41de08:	mov    rax,QWORD PTR [rbx+0x78]
  41de0c:	lea    rdx,[rsp+0x60]
  41de11:	test   BYTE PTR [rax+0x628],0xf
  41de18:	jne    0x41deb3
  41de1e:	mov    rcx,QWORD PTR [rip+0x109e3]        # 0x42e808
  41de25:	call   0x410270
  41de2a:	mov    QWORD PTR [rsp+0x70],rax
  41de2f:	cmp    QWORD PTR [rsp+0x70],0x0
  41de35:	je     0x41e245
  41de3b:	mov    rax,QWORD PTR [rsp+0x60]
  41de40:	mov    rcx,QWORD PTR [rsp+0x50]
  41de45:	lea    rbx,[rsp+0x70]
  41de4a:	mov    rdx,rbx
  41de4d:	mov    DWORD PTR [rsp+0x78],eax
  41de51:	call   0x403878
  41de56:	mov    rcx,QWORD PTR [rsp+0x70]
  41de5b:	mov    esi,eax
  41de5d:	call   0x41d8a8
  41de62:	test   esi,esi
  41de64:	js     0x41e218
  41de6a:	mov    rcx,QWORD PTR [rsp+0x50]
  41de6f:	xor    edx,edx
  41de71:	mov    r8,rbx
  41de74:	call   0x403868
  41de79:	test   eax,eax
  41de7b:	jne    0x41e1eb
  41de81:	mov    r8,QWORD PTR [rsp+0x70]
  41de86:	mov    edx,DWORD PTR [rsp+0x78]
  41de8a:	lea    rcx,[rip+0x31ba]        # 0x42104b
  41de91:	call   0x401590
  41de96:	mov    rax,QWORD PTR [rip+0x9b23]        # 0x4279c0
  41de9d:	mov    rcx,QWORD PTR [rsp+0x70]
  41dea2:	call   QWORD PTR [rax]
  41dea4:	mov    rcx,QWORD PTR [rsp+0x50]
  41dea9:	call   0x403888
  41deae:	jmp    0x41dd81
  41deb3:	mov    rcx,QWORD PTR [rax+0x630]
  41deba:	call   0x4104a0
  41debf:	mov    QWORD PTR [rsp+0x70],rax
  41dec4:	jmp    0x41de2f
  41dec9:	test   BYTE PTR [rax+0x690],0xf
  41ded0:	lea    rdx,[rsp+0x60]
  41ded5:	je     0x41e0d3
  41dedb:	mov    rcx,QWORD PTR [rax+0x698]
  41dee2:	call   0x4104a0
  41dee7:	mov    QWORD PTR [rsp+0x70],rax
  41deec:	cmp    QWORD PTR [rsp+0x70],0x0
  41def2:	je     0x41e1b0
  41def8:	mov    rax,QWORD PTR [rsp+0x60]
  41defd:	lea    rcx,[rsp+0x70]
  41df02:	mov    DWORD PTR [rsp+0x78],eax
  41df06:	call   0x4015c0
  41df0b:	mov    rax,QWORD PTR [rip+0x9aae]        # 0x4279c0
  41df12:	mov    rcx,QWORD PTR [rsp+0x70]
  41df17:	call   QWORD PTR [rax]
  41df19:	jmp    0x41dd81
  41df1e:	mov    r12,QWORD PTR [rax+0x1b8]
  41df25:	lea    rax,[rsp+0x70]
  41df2a:	mov    DWORD PTR [rsp+0x68],0x17
  41df32:	mov    QWORD PTR [rsp+0x60],rax
  41df37:	call   0x401840
  41df3c:	mov    r13,rax
  41df3f:	call   0x4016f0
  41df44:	mov    rbp,rax
  41df47:	mov    rax,QWORD PTR [rbx+0x78]
  41df4b:	test   BYTE PTR [rax+0x3b8],0x20
  41df52:	jne    0x41e0e9
  41df58:	mov    r8d,DWORD PTR [rsp+0x68]
  41df5d:	mov    rdx,QWORD PTR [rsp+0x60]
  41df62:	xor    ecx,ecx
  41df64:	lea    rdi,[rsp+0x60]
  41df69:	call   0x4037f0
  41df6e:	test   eax,eax
  41df70:	js     0x41e265
  41df76:	lea    rsi,[rsp+0x50]
  41df7b:	mov    QWORD PTR [rsp+0x20],rdi
  41df80:	mov    r8,rbp
  41df83:	mov    rdx,r13
  41df86:	mov    rcx,r12
  41df89:	mov    r9,rsi
  41df8c:	call   0x402150
  41df91:	test   eax,eax
  41df93:	js     0x41e1d0
  41df99:	mov    rcx,rsi
  41df9c:	call   0x4015c0
  41dfa1:	mov    rdx,QWORD PTR [rbx+0x78]
  41dfa5:	test   BYTE PTR [rdx+0x4f0],0xf
  41dfac:	jne    0x41e131
  41dfb2:	test   BYTE PTR [rdx+0x558],0xf
  41dfb9:	je     0x41e0f0
  41dfbf:	call   0x401990
  41dfc4:	mov    rcx,rsi
  41dfc7:	mov    r8,rax
  41dfca:	mov    rdx,rdi
  41dfcd:	call   0x401ae0
  41dfd2:	mov    esi,eax
  41dfd4:	mov    rdx,QWORD PTR [rbx+0x78]
  41dfd8:	test   BYTE PTR [rdx+0x148],0xf
  41dfdf:	je     0x41e009
  41dfe1:	test   esi,esi
  41dfe3:	je     0x41dfee
  41dfe5:	test   BYTE PTR [rdx+0x6f8],0xf
  41dfec:	je     0x41e022
  41dfee:	mov    r8d,DWORD PTR [rsp+0x58]
  41dff3:	mov    r9,QWORD PTR [rip+0x10806]        # 0x42e800
  41dffa:	mov    edx,0x1
  41dfff:	mov    rcx,QWORD PTR [rsp+0x50]
  41e004:	call   0x41d890
  41e009:	test   esi,esi
  41e00b:	je     0x41dd81
  41e011:	mov    rax,QWORD PTR [rbx+0x78]
  41e015:	test   BYTE PTR [rax+0x6f8],0xf
  41e01c:	jne    0x41dd81
  41e022:	mov    ecx,0x1
  41e027:	call   0x41d8f8
  41e02c:	call   0x4016f0
  41e031:	mov    rbx,rax
  41e034:	call   0x401840
  41e039:	lea    r8,[rsp+0x70]
  41e03e:	mov    rcx,rax
  41e041:	xor    r9d,r9d
  41e044:	mov    rdx,rbx
  41e047:	call   0x402010
  41e04c:	mov    r8d,DWORD PTR [rsp+0x78]
  41e051:	mov    rcx,QWORD PTR [rsp+0x70]
  41e056:	mov    edx,0x1
  41e05b:	mov    r9,QWORD PTR [rip+0x1079e]        # 0x42e800
  41e062:	call   0x41d890
  41e067:	mov    rax,QWORD PTR [rip+0x9952]        # 0x4279c0
  41e06e:	mov    rcx,QWORD PTR [rsp+0x70]
  41e073:	call   QWORD PTR [rax]
  41e075:	jmp    0x41dd81
  41e07a:	test   BYTE PTR [rax+0x690],0xf
  41e081:	lea    rdx,[rsp+0x38]
  41e086:	je     0x41e11b
  41e08c:	mov    rcx,QWORD PTR [rax+0x698]
  41e093:	call   0x4104a0
  41e098:	mov    QWORD PTR [rsp+0x40],rax
  41e09d:	cmp    QWORD PTR [rsp+0x40],0x0
  41e0a3:	je     0x41e1b0
  41e0a9:	mov    rax,QWORD PTR [rsp+0x38]
  41e0ae:	mov    DWORD PTR [rsp+0x48],eax
  41e0b2:	call   0x401990
  41e0b7:	lea    rcx,[rsp+0x40]
  41e0bc:	xor    edx,edx
  41e0be:	mov    r8,rax
  41e0c1:	call   0x401ae0
  41e0c6:	test   eax,eax
  41e0c8:	jne    0x41e011
  41e0ce:	jmp    0x41dd81
  41e0d3:	mov    rcx,QWORD PTR [rip+0x1072e]        # 0x42e808
  41e0da:	call   0x410270
  41e0df:	mov    QWORD PTR [rsp+0x70],rax
  41e0e4:	jmp    0x41deec
  41e0e9:	xor    edi,edi
  41e0eb:	jmp    0x41df76
  41e0f0:	call   QWORD PTR [rip+0x11896]        # 0x42f98c
  41e0f6:	lea    rdx,[rip+0x32e3]        # 0x4213e0
  41e0fd:	lea    rcx,[rax+0x60]
  41e101:	call   0x401530
  41e106:	mov    rcx,rsi
  41e109:	mov    r8,rbp
  41e10c:	mov    rdx,rdi
  41e10f:	call   0x401ae0
  41e114:	mov    esi,eax
  41e116:	jmp    0x41dfd4
  41e11b:	mov    rcx,QWORD PTR [rip+0x106e6]        # 0x42e808
  41e122:	call   0x410270
  41e127:	mov    QWORD PTR [rsp+0x40],rax
  41e12c:	jmp    0x41e09d
  41e131:	mov    rcx,rsi
  41e134:	xor    r8d,r8d
  41e137:	mov    rdx,rdi
  41e13a:	call   0x401ae0
  41e13f:	mov    esi,eax
  41e141:	jmp    0x41dfd4
  41e146:	mov    ecx,eax
  41e148:	call   0x4037e8
  41e14d:	mov    rbx,rax
  41e150:	call   QWORD PTR [rip+0x11836]        # 0x42f98c
  41e156:	lea    rdx,[rip+0x31c7]        # 0x421324
  41e15d:	lea    rcx,[rax+0x60]
  41e161:	mov    r8,rbx
  41e164:	call   0x401530
  41e169:	mov    ecx,0x1
  41e16e:	call   0x41d8f8
  41e173:	mov    rax,QWORD PTR [rbx+0x78]
  41e177:	mov    rbx,QWORD PTR [rax+0xe8]
  41e17e:	jmp    0x41ddc1
  41e183:	mov    ecx,eax
  41e185:	call   0x4037e8
  41e18a:	mov    rbx,rax
  41e18d:	call   QWORD PTR [rip+0x117f9]        # 0x42f98c
  41e193:	lea    rdx,[rip+0x31a5]        # 0x42133f
  41e19a:	lea    rcx,[rax+0x60]
  41e19e:	mov    r8,rbx
  41e1a1:	call   0x401530
  41e1a6:	mov    ecx,0x1
  41e1ab:	call   0x41d8f8
  41e1b0:	call   QWORD PTR [rip+0x117d6]        # 0x42f98c
  41e1b6:	lea    rdx,[rip+0x31dd]        # 0x42139a
  41e1bd:	lea    rcx,[rax+0x60]
  41e1c1:	call   0x401530
  41e1c6:	mov    ecx,0x1
  41e1cb:	call   0x41d8f8
  41e1d0:	call   QWORD PTR [rip+0x117b6]        # 0x42f98c
  41e1d6:	lea    rdx,[rip+0x31e5]        # 0x4213c2
  41e1dd:	lea    rcx,[rax+0x60]
  41e1e1:	call   0x401530
  41e1e6:	jmp    0x41e022
  41e1eb:	mov    ecx,eax
  41e1ed:	call   0x4037e8
  41e1f2:	mov    rbx,rax
  41e1f5:	call   QWORD PTR [rip+0x11791]        # 0x42f98c
  41e1fb:	lea    rdx,[rip+0x3184]        # 0x421386
  41e202:	lea    rcx,[rax+0x60]
  41e206:	mov    r8,rbx
  41e209:	call   0x401530
  41e20e:	mov    ecx,0x1
  41e213:	call   0x41d8f8
  41e218:	mov    ecx,esi
  41e21a:	call   0x4037e8
  41e21f:	mov    rbx,rax
  41e222:	call   QWORD PTR [rip+0x11764]        # 0x42f98c
  41e228:	lea    rdx,[rip+0x313a]        # 0x421369
  41e22f:	lea    rcx,[rax+0x60]
  41e233:	mov    r8,rbx
  41e236:	call   0x401530
  41e23b:	mov    ecx,0x1
  41e240:	call   0x41d8f8
  41e245:	call   QWORD PTR [rip+0x11741]        # 0x42f98c
  41e24b:	lea    rdx,[rip+0x3100]        # 0x421352
  41e252:	lea    rcx,[rax+0x60]
  41e256:	call   0x401530
  41e25b:	mov    ecx,0x1
  41e260:	call   0x41d8f8
  41e265:	mov    ecx,eax
  41e267:	call   0x4037e8
  41e26c:	mov    rbx,rax
  41e26f:	call   QWORD PTR [rip+0x11717]        # 0x42f98c
  41e275:	lea    rdx,[rip+0x3136]        # 0x4213b2
  41e27c:	lea    rcx,[rax+0x60]
  41e280:	mov    r8,rbx
  41e283:	call   0x401530
  41e288:	mov    ecx,0x1
  41e28d:	call   0x41d8f8
  41e292:	nop
  41e293:	nop
  41e294:	nop
  41e295:	nop
  41e296:	nop
  41e297:	nop
  41e298:	nop
  41e299:	nop
  41e29a:	nop
  41e29b:	nop
  41e29c:	nop
  41e29d:	nop
  41e29e:	nop
  41e29f:	nop
  41e2a0:	(bad)  
  41e2a1:	(bad)  
  41e2a2:	(bad)  
  41e2a3:	(bad)  
  41e2a4:	(bad)  
  41e2a5:	(bad)  
  41e2a6:	(bad)  
  41e2a7:	inc    DWORD PTR [rax]
  41e2a9:	add    BYTE PTR [rax],al
  41e2ab:	add    BYTE PTR [rax],al
  41e2ad:	add    BYTE PTR [rax],al
  41e2af:	add    bh,bh
  41e2b1:	(bad)  
  41e2b2:	(bad)  
  41e2b3:	(bad)  
  41e2b4:	(bad)  
  41e2b5:	(bad)  
  41e2b6:	(bad)  
  41e2b7:	inc    DWORD PTR [rax]
  41e2b9:	add    BYTE PTR [rax],al
  41e2bb:	add    BYTE PTR [rax],al
  41e2bd:	add    BYTE PTR [rax],al
	...
