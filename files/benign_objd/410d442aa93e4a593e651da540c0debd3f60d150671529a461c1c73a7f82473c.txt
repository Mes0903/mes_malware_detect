
410d442aa93e4a593e651da540c0debd3f60d150671529a461c1c73a7f82473c.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x49a5]        # 0x4059c0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x49a6]        # 0x4059d0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x49a9]        # 0x4059e0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x496c]        # 0x4059b0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x480f]        # 0x405860
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x4941]        # 0x4059a0
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x403950
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401ca0
  401081:	mov    rdx,QWORD PTR [rip+0x4878]        # 0x405900
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x485e]        # 0x4058f0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x48c4]        # 0x405960
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x47fb]        # 0x4058a0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401880
  4010af:	mov    rax,QWORD PTR [rip+0x475a]        # 0x405810
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x403950
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xa59]        # 0x401b80
  401127:	call   0x401b70
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4825]        # 0x405990
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x47b5]        # 0x405950
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x403968
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x47da]        # 0x4059a0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x46db]        # 0x4058d0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x81fe]        # 0x409400
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x46b7]        # 0x4058e0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 0x408004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x45ec]        # 0x405850
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401e90
  40127d:	lea    rcx,[rip+0x11ac]        # 0x402430
  401284:	call   QWORD PTR [rip+0x816e]        # 0x4093f8
  40128a:	mov    rdx,QWORD PTR [rip+0x462f]        # 0x4058c0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402340
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x403990
  4012a5:	call   0x401c80
  4012aa:	mov    rax,QWORD PTR [rip+0x45af]        # 0x405860
  4012b1:	mov    QWORD PTR [rip+0x7750],rax        # 0x408a08
  4012b8:	mov    rax,QWORD PTR [rip+0x45d1]        # 0x405890
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x76e9],rax        # 0x408a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2cca],eax        # 0x404000
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 0x408028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x4038d0
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 0x408020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x4038a8
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x4038d0
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x4038c8
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 0x408020
  4013b6:	call   0x401850
  4013bb:	mov    rax,QWORD PTR [rip+0x44be]        # 0x405880
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 0x408018
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 0x408028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 0x408018
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 0x408020
  4013e3:	call   0x403a60
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 0x408008
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 0x40800c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 0x408004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x403938
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 0x40800c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x44a9]        # 0x4058e0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x403940
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x44bd]        # 0x405920
  401463:	mov    rcx,QWORD PTR [rip+0x44a6]        # 0x405910
  40146a:	call   0x403930
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7f0f]        # 0x4093a8
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x4499]        # 0x405940
  4014a7:	mov    rcx,QWORD PTR [rip+0x4482]        # 0x405930
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x403930
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x403900
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x44c5]        # 0x4059a0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401890
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x4495]        # 0x4059a0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401890
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rdi
  401531:	push   rsi
  401532:	push   rbx
  401533:	sub    rsp,0x20
  401537:	test   edx,edx
  401539:	mov    rdi,rcx
  40153c:	mov    esi,edx
  40153e:	je     0x40162a
  401544:	call   QWORD PTR [rip+0x7f16]        # 0x409460
  40154a:	lea    rbx,[rax+0x60]
  40154e:	lea    rdx,[rip+0x3aab]        # 0x405000
  401555:	mov    r8,rdi
  401558:	mov    rcx,rbx
  40155b:	call   0x4038f8
  401560:	lea    rcx,[rip+0x3b19]        # 0x405080
  401567:	mov    r9,rbx
  40156a:	mov    r8d,0x22
  401570:	mov    edx,0x1
  401575:	call   0x4038e0
  40157a:	mov    rdx,rbx
  40157d:	mov    ecx,0xa
  401582:	call   0x4038f0
  401587:	lea    rcx,[rip+0x3b1a]        # 0x4050a8
  40158e:	mov    r9,rbx
  401591:	mov    r8d,0x36
  401597:	mov    edx,0x1
  40159c:	call   0x4038e0
  4015a1:	lea    rcx,[rip+0x3b38]        # 0x4050e0
  4015a8:	mov    r9,rbx
  4015ab:	mov    r8d,0x3f
  4015b1:	mov    edx,0x1
  4015b6:	call   0x4038e0
  4015bb:	lea    rcx,[rip+0x3b5e]        # 0x405120
  4015c2:	mov    r9,rbx
  4015c5:	mov    r8d,0x3d
  4015cb:	mov    edx,0x1
  4015d0:	call   0x4038e0
  4015d5:	lea    rcx,[rip+0x3b84]        # 0x405160
  4015dc:	mov    r9,rbx
  4015df:	mov    r8d,0x33
  4015e5:	mov    edx,0x1
  4015ea:	call   0x4038e0
  4015ef:	lea    rcx,[rip+0x3ba2]        # 0x405198
  4015f6:	mov    r9,rbx
  4015f9:	mov    r8d,0x3c
  4015ff:	mov    edx,0x1
  401604:	call   0x4038e0
  401609:	lea    rcx,[rip+0x3bc8]        # 0x4051d8
  401610:	mov    r9,rbx
  401613:	mov    r8d,0x32
  401619:	mov    edx,0x1
  40161e:	call   0x4038e0
  401623:	mov    ecx,esi
  401625:	call   0x403900
  40162a:	call   QWORD PTR [rip+0x7e30]        # 0x409460
  401630:	lea    rbx,[rax+0x30]
  401634:	jmp    0x40154e
  401639:	nop
  40163a:	nop
  40163b:	nop
  40163c:	nop
  40163d:	nop
  40163e:	nop
  40163f:	nop
  401640:	jmp    QWORD PTR [rip+0x7d22]        # 0x409368
  401646:	nop
  401647:	nop
  401648:	jmp    QWORD PTR [rip+0x7d12]        # 0x409360
  40164e:	nop
  40164f:	nop
  401650:	jmp    QWORD PTR [rip+0x7d02]        # 0x409358
  401656:	nop
  401657:	nop
  401658:	jmp    QWORD PTR [rip+0x7cf2]        # 0x409350
  40165e:	nop
  40165f:	nop
  401660:	jmp    QWORD PTR [rip+0x7ce2]        # 0x409348
  401666:	nop
  401667:	nop
  401668:	jmp    QWORD PTR [rip+0x7cd2]        # 0x409340
  40166e:	nop
  40166f:	nop
  401670:	jmp    QWORD PTR [rip+0x7cc2]        # 0x409338
  401676:	nop
  401677:	nop
  401678:	jmp    QWORD PTR [rip+0x7cb2]        # 0x409330
  40167e:	nop
  40167f:	nop
  401680:	jmp    QWORD PTR [rip+0x7ca2]        # 0x409328
  401686:	nop
  401687:	nop
  401688:	jmp    QWORD PTR [rip+0x7c92]        # 0x409320
  40168e:	nop
  40168f:	nop
  401690:	jmp    QWORD PTR [rip+0x7c82]        # 0x409318
  401696:	nop
  401697:	nop
  401698:	jmp    QWORD PTR [rip+0x7c72]        # 0x409310
  40169e:	nop
  40169f:	nop
  4016a0:	jmp    QWORD PTR [rip+0x7c62]        # 0x409308
  4016a6:	nop
  4016a7:	nop
  4016a8:	jmp    QWORD PTR [rip+0x7c52]        # 0x409300
  4016ae:	nop
  4016af:	nop
  4016b0:	jmp    QWORD PTR [rip+0x7c42]        # 0x4092f8
  4016b6:	nop
  4016b7:	nop
  4016b8:	jmp    QWORD PTR [rip+0x7c32]        # 0x4092f0
  4016be:	nop
  4016bf:	nop
  4016c0:	jmp    QWORD PTR [rip+0x7c22]        # 0x4092e8
  4016c6:	nop
  4016c7:	nop
  4016c8:	jmp    QWORD PTR [rip+0x7c12]        # 0x4092e0
  4016ce:	nop
  4016cf:	nop
  4016d0:	jmp    QWORD PTR [rip+0x7c02]        # 0x4092d8
  4016d6:	nop
  4016d7:	nop
  4016d8:	jmp    QWORD PTR [rip+0x7bf2]        # 0x4092d0
  4016de:	nop
  4016df:	nop
  4016e0:	push   rbx
  4016e1:	sub    rsp,0x30
  4016e5:	mov    rbx,rcx
  4016e8:	mov    rcx,QWORD PTR [rip+0x7321]        # 0x408a10
  4016ef:	call   0x401c90
  4016f4:	cmp    rax,0xffffffffffffffff
  4016f8:	mov    QWORD PTR [rsp+0x20],rax
  4016fd:	je     0x401775
  4016ff:	mov    ecx,0x8
  401704:	call   0x403928
  401709:	mov    rcx,QWORD PTR [rip+0x7300]        # 0x408a10
  401710:	call   0x401c90
  401715:	mov    rcx,QWORD PTR [rip+0x72fc]        # 0x408a18
  40171c:	mov    QWORD PTR [rsp+0x20],rax
  401721:	call   0x401c90
  401726:	lea    rdx,[rsp+0x20]
  40172b:	lea    r8,[rsp+0x28]
  401730:	mov    rcx,rbx
  401733:	mov    QWORD PTR [rsp+0x28],rax
  401738:	call   0x403970
  40173d:	mov    rcx,QWORD PTR [rsp+0x20]
  401742:	mov    rbx,rax
  401745:	call   0x401ca0
  40174a:	mov    rcx,QWORD PTR [rsp+0x28]
  40174f:	mov    QWORD PTR [rip+0x72ba],rax        # 0x408a10
  401756:	call   0x401ca0
  40175b:	mov    ecx,0x8
  401760:	mov    QWORD PTR [rip+0x72b1],rax        # 0x408a18
  401767:	call   0x403918
  40176c:	mov    rax,rbx
  40176f:	add    rsp,0x30
  401773:	pop    rbx
  401774:	ret    
  401775:	mov    rax,QWORD PTR [rip+0x4134]        # 0x4058b0
  40177c:	mov    rcx,rbx
  40177f:	call   QWORD PTR [rax]
  401781:	add    rsp,0x30
  401785:	pop    rbx
  401786:	ret    
  401787:	nop    WORD PTR [rax+rax*1+0x0]
  401790:	sub    rsp,0x28
  401794:	call   0x4016e0
  401799:	test   rax,rax
  40179c:	sete   al
  40179f:	movzx  eax,al
  4017a2:	neg    eax
  4017a4:	add    rsp,0x28
  4017a8:	ret    
  4017a9:	nop
  4017aa:	nop
  4017ab:	nop
  4017ac:	nop
  4017ad:	nop
  4017ae:	nop
  4017af:	nop
  4017b0:	sub    rsp,0x28
  4017b4:	mov    rax,QWORD PTR [rip+0x2855]        # 0x404010
  4017bb:	mov    rax,QWORD PTR [rax]
  4017be:	test   rax,rax
  4017c1:	je     0x4017e0
  4017c3:	call   rax
  4017c5:	mov    rax,QWORD PTR [rip+0x2844]        # 0x404010
  4017cc:	lea    rdx,[rax+0x8]
  4017d0:	mov    rax,QWORD PTR [rax+0x8]
  4017d4:	mov    QWORD PTR [rip+0x2835],rdx        # 0x404010
  4017db:	test   rax,rax
  4017de:	jne    0x4017c3
  4017e0:	add    rsp,0x28
  4017e4:	ret    
  4017e5:	nop
  4017e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017f0:	push   rsi
  4017f1:	push   rbx
  4017f2:	sub    rsp,0x28
  4017f6:	mov    rsi,QWORD PTR [rip+0x4023]        # 0x405820
  4017fd:	mov    rax,QWORD PTR [rsi]
  401800:	cmp    eax,0xffffffff
  401803:	mov    ebx,eax
  401805:	je     0x401830
  401807:	test   ebx,ebx
  401809:	je     0x40181a
  40180b:	nop    DWORD PTR [rax+rax*1+0x0]
  401810:	mov    eax,ebx
  401812:	call   QWORD PTR [rsi+rax*8]
  401815:	sub    ebx,0x1
  401818:	jne    0x401810
  40181a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x4017b0
  401821:	add    rsp,0x28
  401825:	pop    rbx
  401826:	pop    rsi
  401827:	jmp    0x401790
  40182c:	nop    DWORD PTR [rax+0x0]
  401830:	xor    ebx,ebx
  401832:	jmp    0x401836
  401834:	mov    ebx,eax
  401836:	lea    edx,[rbx+0x1]
  401839:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40183e:	mov    rax,rdx
  401841:	jne    0x401834
  401843:	jmp    0x401807
  401845:	nop
  401846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401850:	mov    eax,DWORD PTR [rip+0x67da]        # 0x408030
  401856:	test   eax,eax
  401858:	je     0x401860
  40185a:	repz ret 
  40185c:	nop    DWORD PTR [rax+0x0]
  401860:	mov    DWORD PTR [rip+0x67c6],0x1        # 0x408030
  40186a:	jmp    0x4017f0
  40186c:	nop
  40186d:	nop
  40186e:	nop
  40186f:	nop
  401870:	mov    rax,QWORD PTR [rip+0x7bf1]        # 0x409468
  401877:	rex.W jmp rax
  40187a:	nop
  40187b:	nop
  40187c:	nop
  40187d:	nop
  40187e:	nop
  40187f:	nop
  401880:	xor    eax,eax
  401882:	ret    
  401883:	nop
  401884:	nop
  401885:	nop
  401886:	nop
  401887:	nop
  401888:	nop
  401889:	nop
  40188a:	nop
  40188b:	nop
  40188c:	nop
  40188d:	nop
  40188e:	nop
  40188f:	nop
  401890:	push   r12
  401892:	push   rbp
  401893:	push   rdi
  401894:	push   rsi
  401895:	push   rbx
  401896:	sub    rsp,0x40
  40189a:	mov    rbx,QWORD PTR [rip+0x27ff]        # 0x4040a0
  4018a1:	movabs rax,0x2b992ddfa232
  4018ab:	mov    QWORD PTR [rsp+0x20],0x0
  4018b4:	cmp    rbx,rax
  4018b7:	je     0x4018d0
  4018b9:	not    rbx
  4018bc:	mov    QWORD PTR [rip+0x27ed],rbx        # 0x4040b0
  4018c3:	add    rsp,0x40
  4018c7:	pop    rbx
  4018c8:	pop    rsi
  4018c9:	pop    rdi
  4018ca:	pop    rbp
  4018cb:	pop    r12
  4018cd:	ret    
  4018ce:	xchg   ax,ax
  4018d0:	lea    rcx,[rsp+0x20]
  4018d5:	call   QWORD PTR [rip+0x7ad5]        # 0x4093b0
  4018db:	mov    r12,QWORD PTR [rsp+0x20]
  4018e0:	call   QWORD PTR [rip+0x7aaa]        # 0x409390
  4018e6:	mov    ebp,eax
  4018e8:	call   QWORD PTR [rip+0x7aaa]        # 0x409398
  4018ee:	mov    edi,eax
  4018f0:	call   QWORD PTR [rip+0x7ac2]        # 0x4093b8
  4018f6:	lea    rcx,[rsp+0x30]
  4018fb:	mov    esi,eax
  4018fd:	call   QWORD PTR [rip+0x7acd]        # 0x4093d0
  401903:	xor    r12,QWORD PTR [rsp+0x30]
  401908:	mov    edx,edi
  40190a:	movabs rax,0xffffffffffff
  401914:	xor    rbp,r12
  401917:	mov    rdi,rbp
  40191a:	xor    rdi,rdx
  40191d:	mov    edx,esi
  40191f:	xor    rdi,rdx
  401922:	mov    rsi,rdi
  401925:	and    rsi,rax
  401928:	cmp    rsi,rbx
  40192b:	je     0x401950
  40192d:	mov    rax,rsi
  401930:	not    rax
  401933:	mov    QWORD PTR [rip+0x2766],rsi        # 0x4040a0
  40193a:	mov    QWORD PTR [rip+0x276f],rax        # 0x4040b0
  401941:	add    rsp,0x40
  401945:	pop    rbx
  401946:	pop    rsi
  401947:	pop    rdi
  401948:	pop    rbp
  401949:	pop    r12
  40194b:	ret    
  40194c:	nop    DWORD PTR [rax+0x0]
  401950:	movabs rax,0xffffd466d2205dcc
  40195a:	movabs rsi,0x2b992ddfa233
  401964:	jmp    0x401933
  401966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401970:	push   rbp
  401971:	push   rsi
  401972:	push   rbx
  401973:	mov    rbp,rsp
  401976:	sub    rsp,0x70
  40197a:	mov    rsi,rcx
  40197d:	lea    rcx,[rip+0x66fc]        # 0x408080
  401984:	call   QWORD PTR [rip+0x7a56]        # 0x4093e0
  40198a:	mov    rbx,QWORD PTR [rip+0x67e7]        # 0x408178
  401991:	xor    r8d,r8d
  401994:	lea    rdx,[rbp-0x28]
  401998:	mov    rcx,rbx
  40199b:	call   QWORD PTR [rip+0x7a47]        # 0x4093e8
  4019a1:	test   rax,rax
  4019a4:	mov    r9,rax
  4019a7:	je     0x401a50
  4019ad:	lea    rax,[rbp-0x20]
  4019b1:	mov    QWORD PTR [rsp+0x38],0x0
  4019ba:	mov    r8,rbx
  4019bd:	mov    rdx,QWORD PTR [rbp-0x28]
  4019c1:	xor    ecx,ecx
  4019c3:	mov    QWORD PTR [rsp+0x30],rax
  4019c8:	lea    rax,[rbp-0x18]
  4019cc:	mov    QWORD PTR [rsp+0x28],rax
  4019d1:	lea    rax,[rip+0x66a8]        # 0x408080
  4019d8:	mov    QWORD PTR [rsp+0x20],rax
  4019dd:	call   QWORD PTR [rip+0x7a0d]        # 0x4093f0
  4019e3:	mov    rax,QWORD PTR [rip+0x678e]        # 0x408178
  4019ea:	xor    ecx,ecx
  4019ec:	mov    QWORD PTR [rip+0x670d],rsi        # 0x408100
  4019f3:	mov    DWORD PTR [rip+0x6b83],0xc0000409        # 0x408580
  4019fd:	mov    DWORD PTR [rip+0x6b7d],0x1        # 0x408584
  401a07:	mov    QWORD PTR [rip+0x6b82],rax        # 0x408590
  401a0e:	mov    rax,QWORD PTR [rip+0x268b]        # 0x4040a0
  401a15:	mov    QWORD PTR [rbp-0x10],rax
  401a19:	mov    rax,QWORD PTR [rip+0x2690]        # 0x4040b0
  401a20:	mov    QWORD PTR [rbp-0x8],rax
  401a24:	call   QWORD PTR [rip+0x79ce]        # 0x4093f8
  401a2a:	lea    rcx,[rip+0x3a0f]        # 0x405440
  401a31:	call   QWORD PTR [rip+0x79e1]        # 0x409418
  401a37:	call   QWORD PTR [rip+0x794b]        # 0x409388
  401a3d:	mov    edx,0xc0000409
  401a42:	mov    rcx,rax
  401a45:	call   QWORD PTR [rip+0x79bd]        # 0x409408
  401a4b:	call   0x403910
  401a50:	mov    rax,QWORD PTR [rbp+0x18]
  401a54:	mov    QWORD PTR [rip+0x671d],rax        # 0x408178
  401a5b:	lea    rax,[rbp+0x8]
  401a5f:	mov    QWORD PTR [rip+0x66b2],rax        # 0x408118
  401a66:	jmp    0x4019e3
  401a6b:	nop
  401a6c:	nop
  401a6d:	nop
  401a6e:	nop
  401a6f:	nop
  401a70:	sub    rsp,0x28
  401a74:	test   edx,edx
  401a76:	je     0x401a90
  401a78:	cmp    edx,0x3
  401a7b:	je     0x401a90
  401a7d:	mov    eax,0x1
  401a82:	add    rsp,0x28
  401a86:	ret    
  401a87:	nop    WORD PTR [rax+rax*1+0x0]
  401a90:	call   0x402780
  401a95:	mov    eax,0x1
  401a9a:	add    rsp,0x28
  401a9e:	ret    
  401a9f:	nop
  401aa0:	push   rsi
  401aa1:	push   rbx
  401aa2:	sub    rsp,0x28
  401aa6:	mov    rax,QWORD PTR [rip+0x3d53]        # 0x405800
  401aad:	cmp    DWORD PTR [rax],0x2
  401ab0:	je     0x401ab8
  401ab2:	mov    DWORD PTR [rax],0x2
  401ab8:	cmp    edx,0x2
  401abb:	je     0x401ad0
  401abd:	cmp    edx,0x1
  401ac0:	je     0x401b02
  401ac2:	mov    eax,0x1
  401ac7:	add    rsp,0x28
  401acb:	pop    rbx
  401acc:	pop    rsi
  401acd:	ret    
  401ace:	xchg   ax,ax
  401ad0:	lea    rbx,[rip+0x8589]        # 0x40a060
  401ad7:	lea    rsi,[rip+0x8582]        # 0x40a060
  401ade:	cmp    rbx,rsi
  401ae1:	je     0x401ac2
  401ae3:	mov    rax,QWORD PTR [rbx]
  401ae6:	test   rax,rax
  401ae9:	je     0x401aed
  401aeb:	call   rax
  401aed:	add    rbx,0x8
  401af1:	cmp    rbx,rsi
  401af4:	jne    0x401ae3
  401af6:	mov    eax,0x1
  401afb:	add    rsp,0x28
  401aff:	pop    rbx
  401b00:	pop    rsi
  401b01:	ret    
  401b02:	call   0x402780
  401b07:	jmp    0x401ac2
  401b09:	nop    DWORD PTR [rax+0x0]
  401b10:	xor    eax,eax
  401b12:	ret    
  401b13:	nop
  401b14:	nop
  401b15:	nop
  401b16:	nop
  401b17:	nop
  401b18:	nop
  401b19:	nop
  401b1a:	nop
  401b1b:	nop
  401b1c:	nop
  401b1d:	nop
  401b1e:	nop
  401b1f:	nop
  401b20:	sub    rsp,0x58
  401b24:	mov    rax,QWORD PTR [rip+0x6b35]        # 0x408660
  401b2b:	test   rax,rax
  401b2e:	je     0x401b5c
  401b30:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401b39:	mov    DWORD PTR [rsp+0x20],ecx
  401b3d:	lea    rcx,[rsp+0x20]
  401b42:	mov    QWORD PTR [rsp+0x28],rdx
  401b47:	movsd  QWORD PTR [rsp+0x30],xmm2
  401b4d:	movsd  QWORD PTR [rsp+0x38],xmm3
  401b53:	movsd  QWORD PTR [rsp+0x40],xmm0
  401b59:	call   rax
  401b5b:	nop
  401b5c:	add    rsp,0x58
  401b60:	ret    
  401b61:	nop    DWORD PTR [rax+rax*1+0x0]
  401b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b70:	mov    QWORD PTR [rip+0x6ae9],rcx        # 0x408660
  401b77:	jmp    0x403948
  401b7c:	nop    DWORD PTR [rax+0x0]
  401b80:	push   rsi
  401b81:	push   rbx
  401b82:	sub    rsp,0x78
  401b86:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401b8b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401b90:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401b96:	cmp    DWORD PTR [rcx],0x6
  401b99:	ja     0x401c70
  401b9f:	mov    edx,DWORD PTR [rcx]
  401ba1:	lea    rax,[rip+0x39dc]        # 0x405584
  401ba8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401bac:	add    rax,rdx
  401baf:	jmp    rax
  401bb1:	lea    rbx,[rip+0x38a8]        # 0x405460
  401bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  401bc0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401bc6:	mov    rsi,QWORD PTR [rcx+0x8]
  401bca:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401bcf:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401bd4:	call   0x403960
  401bd9:	movsd  QWORD PTR [rsp+0x30],xmm8
  401be0:	lea    rcx,[rax+0x60]
  401be4:	lea    rdx,[rip+0x396d]        # 0x405558
  401beb:	movsd  QWORD PTR [rsp+0x28],xmm7
  401bf1:	mov    r9,rsi
  401bf4:	mov    r8,rbx
  401bf7:	movsd  QWORD PTR [rsp+0x20],xmm6
  401bfd:	call   0x4038f8
  401c02:	nop
  401c03:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401c08:	xor    eax,eax
  401c0a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401c0f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401c15:	add    rsp,0x78
  401c19:	pop    rbx
  401c1a:	pop    rsi
  401c1b:	ret    
  401c1c:	nop    DWORD PTR [rax+0x0]
  401c20:	lea    rbx,[rip+0x3858]        # 0x40547f
  401c27:	jmp    0x401bc0
  401c29:	nop    DWORD PTR [rax+0x0]
  401c30:	lea    rbx,[rip+0x3869]        # 0x4054a0
  401c37:	jmp    0x401bc0
  401c39:	nop    DWORD PTR [rax+0x0]
  401c40:	lea    rbx,[rip+0x38c9]        # 0x405510
  401c47:	jmp    0x401bc0
  401c4c:	nop    DWORD PTR [rax+0x0]
  401c50:	lea    rbx,[rip+0x3891]        # 0x4054e8
  401c57:	jmp    0x401bc0
  401c5c:	nop    DWORD PTR [rax+0x0]
  401c60:	lea    rbx,[rip+0x3859]        # 0x4054c0
  401c67:	jmp    0x401bc0
  401c6c:	nop    DWORD PTR [rax+0x0]
  401c70:	lea    rbx,[rip+0x38cf]        # 0x405546
  401c77:	jmp    0x401bc0
  401c7c:	nop
  401c7d:	nop
  401c7e:	nop
  401c7f:	nop
  401c80:	fninit 
  401c82:	ret    
  401c83:	nop
  401c84:	nop
  401c85:	nop
  401c86:	nop
  401c87:	nop
  401c88:	nop
  401c89:	nop
  401c8a:	nop
  401c8b:	nop
  401c8c:	nop
  401c8d:	nop
  401c8e:	nop
  401c8f:	nop
  401c90:	mov    rax,rcx
  401c93:	ret    
  401c94:	xchg   ax,ax
  401c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ca0:	mov    rax,rcx
  401ca3:	ret    
  401ca4:	nop
  401ca5:	nop
  401ca6:	nop
  401ca7:	nop
  401ca8:	nop
  401ca9:	nop
  401caa:	nop
  401cab:	nop
  401cac:	nop
  401cad:	nop
  401cae:	nop
  401caf:	nop
  401cb0:	push   rsi
  401cb1:	push   rbx
  401cb2:	sub    rsp,0x38
  401cb6:	lea    rax,[rsp+0x58]
  401cbb:	mov    rbx,rcx
  401cbe:	mov    QWORD PTR [rsp+0x58],rdx
  401cc3:	mov    QWORD PTR [rsp+0x60],r8
  401cc8:	mov    QWORD PTR [rsp+0x68],r9
  401ccd:	mov    QWORD PTR [rsp+0x28],rax
  401cd2:	call   0x403960
  401cd7:	lea    rcx,[rip+0x38c2]        # 0x4055a0
  401cde:	lea    r9,[rax+0x60]
  401ce2:	mov    r8d,0x1b
  401ce8:	mov    edx,0x1
  401ced:	call   0x4038e0
  401cf2:	mov    rsi,QWORD PTR [rsp+0x28]
  401cf7:	call   0x403960
  401cfc:	lea    rcx,[rax+0x60]
  401d00:	mov    rdx,rbx
  401d03:	mov    r8,rsi
  401d06:	call   0x403898
  401d0b:	call   0x403910
  401d10:	nop
  401d11:	nop    DWORD PTR [rax+rax*1+0x0]
  401d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d20:	push   r13
  401d22:	push   r12
  401d24:	push   rbp
  401d25:	push   rdi
  401d26:	push   rsi
  401d27:	push   rbx
  401d28:	sub    rsp,0x58
  401d2c:	movsxd rbp,DWORD PTR [rip+0x6951]        # 0x408684
  401d33:	mov    rbx,rcx
  401d36:	mov    rsi,rdx
  401d39:	mov    rdi,r8
  401d3c:	test   ebp,ebp
  401d3e:	jle    0x401e3a
  401d44:	mov    rax,QWORD PTR [rip+0x693d]        # 0x408688
  401d4b:	xor    r9d,r9d
  401d4e:	add    rax,0x8
  401d52:	mov    r10,QWORD PTR [rax]
  401d55:	cmp    rbx,r10
  401d58:	jb     0x401d6e
  401d5a:	mov    rdx,QWORD PTR [rax+0x8]
  401d5e:	mov    r11d,DWORD PTR [rdx+0x8]
  401d62:	add    r10,r11
  401d65:	cmp    rbx,r10
  401d68:	jb     0x401e20
  401d6e:	add    r9d,0x1
  401d72:	add    rax,0x18
  401d76:	cmp    r9d,ebp
  401d79:	jne    0x401d52
  401d7b:	mov    rcx,rbx
  401d7e:	call   0x402990
  401d83:	test   rax,rax
  401d86:	mov    r12,rax
  401d89:	je     0x401e72
  401d8f:	lea    rbp,[rbp+rbp*2+0x0]
  401d94:	shl    rbp,0x3
  401d98:	mov    r13,rbp
  401d9b:	add    r13,QWORD PTR [rip+0x68e6]        # 0x408688
  401da2:	mov    QWORD PTR [r13+0x10],rax
  401da6:	mov    DWORD PTR [r13+0x0],0x0
  401dae:	call   0x402ab0
  401db3:	mov    edx,DWORD PTR [r12+0xc]
  401db8:	mov    r8d,0x30
  401dbe:	add    rax,rdx
  401dc1:	lea    rdx,[rsp+0x20]
  401dc6:	mov    QWORD PTR [r13+0x8],rax
  401dca:	mov    rax,QWORD PTR [rip+0x68b7]        # 0x408688
  401dd1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401dd6:	call   QWORD PTR [rip+0x764c]        # 0x409428
  401ddc:	test   rax,rax
  401ddf:	je     0x401e55
  401de1:	mov    eax,DWORD PTR [rsp+0x44]
  401de5:	lea    edx,[rax-0x4]
  401de8:	and    edx,0xfffffffb
  401deb:	je     0x401e19
  401ded:	sub    eax,0x40
  401df0:	and    eax,0xffffffbf
  401df3:	je     0x401e19
  401df5:	mov    r9,rbp
  401df8:	add    r9,QWORD PTR [rip+0x6889]        # 0x408688
  401dff:	mov    r8d,0x40
  401e05:	mov    rdx,QWORD PTR [rsp+0x38]
  401e0a:	mov    rcx,QWORD PTR [rsp+0x20]
  401e0f:	call   QWORD PTR [rip+0x760b]        # 0x409420
  401e15:	test   eax,eax
  401e17:	je     0x401e41
  401e19:	add    DWORD PTR [rip+0x6864],0x1        # 0x408684
  401e20:	mov    r8,rdi
  401e23:	mov    rdx,rsi
  401e26:	mov    rcx,rbx
  401e29:	add    rsp,0x58
  401e2d:	pop    rbx
  401e2e:	pop    rsi
  401e2f:	pop    rdi
  401e30:	pop    rbp
  401e31:	pop    r12
  401e33:	pop    r13
  401e35:	jmp    0x4038c8
  401e3a:	xor    ebp,ebp
  401e3c:	jmp    0x401d7b
  401e41:	call   QWORD PTR [rip+0x7559]        # 0x4093a0
  401e47:	lea    rcx,[rip+0x37ca]        # 0x405618
  401e4e:	mov    edx,eax
  401e50:	call   0x401cb0
  401e55:	mov    rax,QWORD PTR [rip+0x682c]        # 0x408688
  401e5c:	mov    edx,DWORD PTR [r12+0x8]
  401e61:	lea    rcx,[rip+0x3778]        # 0x4055e0
  401e68:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401e6d:	call   0x401cb0
  401e72:	lea    rcx,[rip+0x3747]        # 0x4055c0
  401e79:	mov    rdx,rbx
  401e7c:	call   0x401cb0
  401e81:	nop
  401e82:	nop    DWORD PTR [rax+0x0]
  401e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e90:	push   rbp
  401e91:	push   r14
  401e93:	push   r13
  401e95:	push   r12
  401e97:	push   rdi
  401e98:	push   rsi
  401e99:	push   rbx
  401e9a:	mov    rbp,rsp
  401e9d:	sub    rsp,0x60
  401ea1:	mov    ebx,DWORD PTR [rip+0x67d9]        # 0x408680
  401ea7:	test   ebx,ebx
  401ea9:	je     0x401ec0
  401eab:	mov    rsp,rbp
  401eae:	pop    rbx
  401eaf:	pop    rsi
  401eb0:	pop    rdi
  401eb1:	pop    r12
  401eb3:	pop    r13
  401eb5:	pop    r14
  401eb7:	pop    rbp
  401eb8:	ret    
  401eb9:	nop    DWORD PTR [rax+0x0]
  401ec0:	mov    DWORD PTR [rip+0x67b6],0x1        # 0x408680
  401eca:	call   0x4029e0
  401ecf:	cdqe   
  401ed1:	lea    rax,[rax+rax*2]
  401ed5:	lea    rax,[rax*8+0x1e]
  401edd:	and    rax,0xfffffffffffffff0
  401ee1:	call   0x402c00
  401ee6:	mov    rsi,QWORD PTR [rip+0x3943]        # 0x405830
  401eed:	mov    rbx,QWORD PTR [rip+0x394c]        # 0x405840
  401ef4:	sub    rsp,rax
  401ef7:	mov    DWORD PTR [rip+0x6783],0x0        # 0x408684
  401f01:	lea    rax,[rsp+0x20]
  401f06:	mov    QWORD PTR [rip+0x677b],rax        # 0x408688
  401f0d:	mov    rax,rsi
  401f10:	sub    rax,rbx
  401f13:	cmp    rax,0x7
  401f17:	jle    0x401eab
  401f19:	cmp    rax,0xb
  401f1d:	jle    0x401f45
  401f1f:	mov    r11d,DWORD PTR [rbx]
  401f22:	test   r11d,r11d
  401f25:	jne    0x402070
  401f2b:	mov    r10d,DWORD PTR [rbx+0x4]
  401f2f:	test   r10d,r10d
  401f32:	jne    0x402070
  401f38:	mov    r9d,DWORD PTR [rbx+0x8]
  401f3c:	test   r9d,r9d
  401f3f:	jne    0x401f5c
  401f41:	add    rbx,0xc
  401f45:	mov    r8d,DWORD PTR [rbx]
  401f48:	test   r8d,r8d
  401f4b:	jne    0x402070
  401f51:	mov    ecx,DWORD PTR [rbx+0x4]
  401f54:	test   ecx,ecx
  401f56:	jne    0x402070
  401f5c:	mov    edx,DWORD PTR [rbx+0x8]
  401f5f:	cmp    edx,0x1
  401f62:	jne    0x40217c
  401f68:	add    rbx,0xc
  401f6c:	cmp    rbx,rsi
  401f6f:	jae    0x401eab
  401f75:	mov    r12,QWORD PTR [rip+0x38e4]        # 0x405860
  401f7c:	lea    r13,[rbp-0x30]
  401f80:	movabs r14,0xffffffff00000000
  401f8a:	mov    ecx,DWORD PTR [rbx+0x4]
  401f8d:	mov    eax,DWORD PTR [rbx]
  401f8f:	movzx  edx,BYTE PTR [rbx+0x8]
  401f93:	add    rax,r12
  401f96:	add    rcx,r12
  401f99:	cmp    edx,0x10
  401f9c:	mov    r8,QWORD PTR [rax]
  401f9f:	je     0x4020e6
  401fa5:	jbe    0x4020ad
  401fab:	cmp    edx,0x20
  401fae:	je     0x40212f
  401fb4:	cmp    edx,0x40
  401fb7:	jne    0x40211b
  401fbd:	sub    r8,rax
  401fc0:	mov    rdx,r13
  401fc3:	mov    rdi,r13
  401fc6:	mov    rax,r8
  401fc9:	add    rax,QWORD PTR [rcx]
  401fcc:	mov    r8d,0x8
  401fd2:	mov    QWORD PTR [rbp-0x30],rax
  401fd6:	call   0x401d20
  401fdb:	add    rbx,0xc
  401fdf:	cmp    rbx,rsi
  401fe2:	jb     0x401f8a
  401fe4:	mov    eax,DWORD PTR [rip+0x669a]        # 0x408684
  401fea:	xor    ebx,ebx
  401fec:	xor    esi,esi
  401fee:	test   eax,eax
  401ff0:	jle    0x401eab
  401ff6:	mov    r14,QWORD PTR [rip+0x742b]        # 0x409428
  401ffd:	lea    r13,[rbp-0x34]
  402001:	mov    r12,QWORD PTR [rip+0x7418]        # 0x409420
  402008:	jmp    0x402023
  40200a:	nop    WORD PTR [rax+rax*1+0x0]
  402010:	add    esi,0x1
  402013:	add    rbx,0x18
  402017:	cmp    esi,DWORD PTR [rip+0x6667]        # 0x408684
  40201d:	jge    0x401eab
  402023:	mov    rax,rbx
  402026:	add    rax,QWORD PTR [rip+0x665b]        # 0x408688
  40202d:	mov    edx,DWORD PTR [rax]
  40202f:	test   edx,edx
  402031:	je     0x402010
  402033:	mov    rcx,QWORD PTR [rax+0x8]
  402037:	mov    r8d,0x30
  40203d:	mov    rdx,rdi
  402040:	call   r14
  402043:	test   rax,rax
  402046:	je     0x40215e
  40204c:	mov    rax,QWORD PTR [rip+0x6635]        # 0x408688
  402053:	mov    r9,r13
  402056:	mov    rdx,QWORD PTR [rbp-0x18]
  40205a:	mov    rcx,QWORD PTR [rbp-0x30]
  40205e:	mov    r8d,DWORD PTR [rax+rbx*1]
  402062:	call   r12
  402065:	jmp    0x402010
  402067:	nop    WORD PTR [rax+rax*1+0x0]
  402070:	cmp    rbx,rsi
  402073:	jae    0x401eab
  402079:	mov    r12,QWORD PTR [rip+0x37e0]        # 0x405860
  402080:	lea    rdi,[rbp-0x30]
  402084:	mov    ecx,DWORD PTR [rbx+0x4]
  402087:	mov    eax,DWORD PTR [rbx]
  402089:	mov    r8d,0x4
  40208f:	mov    rdx,rdi
  402092:	add    rbx,0x8
  402096:	add    rcx,r12
  402099:	add    eax,DWORD PTR [rcx]
  40209b:	mov    DWORD PTR [rbp-0x30],eax
  40209e:	call   0x401d20
  4020a3:	cmp    rbx,rsi
  4020a6:	jb     0x402084
  4020a8:	jmp    0x401fe4
  4020ad:	cmp    edx,0x8
  4020b0:	jne    0x40211b
  4020b2:	movzx  edx,BYTE PTR [rcx]
  4020b5:	mov    rdi,r13
  4020b8:	mov    r10,rdx
  4020bb:	or     r10,0xffffffffffffff00
  4020c2:	test   dl,dl
  4020c4:	cmovs  rdx,r10
  4020c8:	sub    rdx,rax
  4020cb:	lea    rax,[r8+rdx*1]
  4020cf:	mov    r8d,0x1
  4020d5:	mov    rdx,r13
  4020d8:	mov    QWORD PTR [rbp-0x30],rax
  4020dc:	call   0x401d20
  4020e1:	jmp    0x401fdb
  4020e6:	movzx  edx,WORD PTR [rcx]
  4020e9:	mov    rdi,r13
  4020ec:	mov    r10,rdx
  4020ef:	or     r10,0xffffffffffff0000
  4020f6:	test   dx,dx
  4020f9:	cmovs  rdx,r10
  4020fd:	sub    rdx,rax
  402100:	lea    rax,[r8+rdx*1]
  402104:	mov    r8d,0x2
  40210a:	mov    rdx,r13
  40210d:	mov    QWORD PTR [rbp-0x30],rax
  402111:	call   0x401d20
  402116:	jmp    0x401fdb
  40211b:	lea    rcx,[rip+0x3556]        # 0x405678
  402122:	mov    QWORD PTR [rbp-0x30],0x0
  40212a:	call   0x401cb0
  40212f:	mov    edx,DWORD PTR [rcx]
  402131:	mov    rdi,r13
  402134:	mov    r10,rdx
  402137:	or     r10,r14
  40213a:	test   edx,edx
  40213c:	cmovs  rdx,r10
  402140:	sub    rdx,rax
  402143:	lea    rax,[r8+rdx*1]
  402147:	mov    r8d,0x4
  40214d:	mov    rdx,r13
  402150:	mov    QWORD PTR [rbp-0x30],rax
  402154:	call   0x401d20
  402159:	jmp    0x401fdb
  40215e:	add    rbx,QWORD PTR [rip+0x6523]        # 0x408688
  402165:	lea    rcx,[rip+0x3474]        # 0x4055e0
  40216c:	mov    rax,QWORD PTR [rbx+0x10]
  402170:	mov    r8,QWORD PTR [rbx+0x8]
  402174:	mov    edx,DWORD PTR [rax+0x8]
  402177:	call   0x401cb0
  40217c:	lea    rcx,[rip+0x34bd]        # 0x405640
  402183:	call   0x401cb0
  402188:	nop
  402189:	nop
  40218a:	nop
  40218b:	nop
  40218c:	nop
  40218d:	nop
  40218e:	nop
  40218f:	nop
  402190:	sub    rsp,0x28
  402194:	mov    eax,DWORD PTR [rcx]
  402196:	cmp    eax,0xc0000091
  40219b:	ja     0x402200
  40219d:	cmp    eax,0xc000008d
  4021a2:	jae    0x40221f
  4021a4:	cmp    eax,0xc0000008
  4021a9:	je     0x4022c0
  4021af:	ja     0x402290
  4021b5:	cmp    eax,0x80000002
  4021ba:	je     0x4022c0
  4021c0:	cmp    eax,0xc0000005
  4021c5:	jne    0x40229e
  4021cb:	xor    edx,edx
  4021cd:	mov    ecx,0xb
  4021d2:	call   0x4038b8
  4021d7:	cmp    rax,0x1
  4021db:	je     0x402320
  4021e1:	test   rax,rax
  4021e4:	je     0x402300
  4021ea:	mov    ecx,0xb
  4021ef:	call   rax
  4021f1:	xor    eax,eax
  4021f3:	add    rsp,0x28
  4021f7:	ret    
  4021f8:	nop    DWORD PTR [rax+rax*1+0x0]
  402200:	cmp    eax,0xc0000094
  402205:	je     0x4022d0
  40220b:	ja     0x402250
  40220d:	cmp    eax,0xc0000092
  402212:	je     0x4022c0
  402218:	cmp    eax,0xc0000093
  40221d:	jne    0x40229e
  40221f:	xor    edx,edx
  402221:	mov    ecx,0x8
  402226:	call   0x4038b8
  40222b:	cmp    rax,0x1
  40222f:	mov    rdx,rax
  402232:	je     0x4022a8
  402234:	test   rdx,rdx
  402237:	mov    eax,0x1
  40223c:	je     0x4021f3
  40223e:	mov    ecx,0x8
  402243:	call   rdx
  402245:	xor    eax,eax
  402247:	add    rsp,0x28
  40224b:	ret    
  40224c:	nop    DWORD PTR [rax+0x0]
  402250:	cmp    eax,0xc0000095
  402255:	je     0x4022c0
  402257:	cmp    eax,0xc0000096
  40225c:	jne    0x40229e
  40225e:	xor    edx,edx
  402260:	mov    ecx,0x4
  402265:	call   0x4038b8
  40226a:	cmp    rax,0x1
  40226e:	je     0x40230a
  402274:	test   rax,rax
  402277:	je     0x402300
  40227d:	mov    ecx,0x4
  402282:	call   rax
  402284:	xor    eax,eax
  402286:	jmp    0x4021f3
  40228b:	nop    DWORD PTR [rax+rax*1+0x0]
  402290:	cmp    eax,0xc000001d
  402295:	je     0x40225e
  402297:	cmp    eax,0xc000008c
  40229c:	je     0x4022c0
  40229e:	mov    eax,0x1
  4022a3:	add    rsp,0x28
  4022a7:	ret    
  4022a8:	mov    edx,0x1
  4022ad:	mov    ecx,0x8
  4022b2:	call   0x4038b8
  4022b7:	call   0x401c80
  4022bc:	nop    DWORD PTR [rax+0x0]
  4022c0:	xor    eax,eax
  4022c2:	add    rsp,0x28
  4022c6:	ret    
  4022c7:	nop    WORD PTR [rax+rax*1+0x0]
  4022d0:	xor    edx,edx
  4022d2:	mov    ecx,0x8
  4022d7:	call   0x4038b8
  4022dc:	cmp    rax,0x1
  4022e0:	mov    rdx,rax
  4022e3:	jne    0x402234
  4022e9:	mov    edx,0x1
  4022ee:	mov    ecx,0x8
  4022f3:	call   0x4038b8
  4022f8:	xor    eax,eax
  4022fa:	jmp    0x4021f3
  4022ff:	nop
  402300:	mov    eax,0x4
  402305:	add    rsp,0x28
  402309:	ret    
  40230a:	mov    edx,0x1
  40230f:	mov    ecx,0x4
  402314:	call   0x4038b8
  402319:	xor    eax,eax
  40231b:	jmp    0x4021f3
  402320:	mov    edx,0x1
  402325:	mov    ecx,0xb
  40232a:	call   0x4038b8
  40232f:	xor    eax,eax
  402331:	jmp    0x4021f3
  402336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402340:	push   r12
  402342:	push   rbp
  402343:	push   rdi
  402344:	push   rsi
  402345:	push   rbx
  402346:	sub    rsp,0x20
  40234a:	call   0x402ab0
  40234f:	mov    rbp,rax
  402352:	mov    eax,DWORD PTR [rip+0x6370]        # 0x4086c8
  402358:	test   eax,eax
  40235a:	jne    0x402381
  40235c:	test   rbp,rbp
  40235f:	je     0x402381
  402361:	lea    rcx,[rip+0x3348]        # 0x4056b0
  402368:	mov    DWORD PTR [rip+0x6356],0x1        # 0x4086c8
  402372:	call   0x4028f0
  402377:	test   rax,rax
  40237a:	je     0x402390
  40237c:	mov    eax,0x1
  402381:	add    rsp,0x20
  402385:	pop    rbx
  402386:	pop    rsi
  402387:	pop    rdi
  402388:	pop    rbp
  402389:	pop    r12
  40238b:	ret    
  40238c:	nop    DWORD PTR [rax+0x0]
  402390:	lea    rbx,[rip+0x6469]        # 0x408800
  402397:	mov    ecx,0x30
  40239c:	lea    rdx,[rip+0x635d]        # 0x408700
  4023a3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402190
  4023aa:	xor    esi,esi
  4023ac:	mov    rdi,rbx
  4023af:	rep stos QWORD PTR es:[rdi],rax
  4023b2:	mov    rdi,rdx
  4023b5:	sub    r12,rbp
  4023b8:	mov    cl,0x20
  4023ba:	rep stos QWORD PTR es:[rdi],rax
  4023bd:	mov    rdi,rdx
  4023c0:	jmp    0x4023f0
  4023c2:	mov    BYTE PTR [rdi],0x9
  4023c5:	mov    DWORD PTR [rdi+0x4],r12d
  4023c9:	add    rsi,0x1
  4023cd:	mov    edx,DWORD PTR [rax+0xc]
  4023d0:	add    rbx,0xc
  4023d4:	mov    DWORD PTR [rbx-0xc],edx
  4023d7:	add    edx,DWORD PTR [rax+0x8]
  4023da:	mov    rax,rdi
  4023dd:	sub    rax,rbp
  4023e0:	add    rdi,0x8
  4023e4:	mov    DWORD PTR [rbx-0x4],eax
  4023e7:	mov    DWORD PTR [rbx-0x8],edx
  4023ea:	cmp    rsi,0x20
  4023ee:	je     0x402425
  4023f0:	mov    rcx,rsi
  4023f3:	call   0x402a20
  4023f8:	test   rax,rax
  4023fb:	jne    0x4023c2
  4023fd:	test   rsi,rsi
  402400:	je     0x40237c
  402406:	mov    edx,esi
  402408:	nop    DWORD PTR [rax+rax*1+0x0]
  402410:	mov    r8,rbp
  402413:	lea    rcx,[rip+0x63e6]        # 0x408800
  40241a:	call   QWORD PTR [rip+0x6fb8]        # 0x4093d8
  402420:	jmp    0x40237c
  402425:	mov    edx,0x20
  40242a:	jmp    0x402410
  40242c:	nop    DWORD PTR [rax+0x0]
  402430:	push   rbx
  402431:	sub    rsp,0x20
  402435:	mov    rdx,QWORD PTR [rcx]
  402438:	mov    eax,DWORD PTR [rdx]
  40243a:	mov    r8d,eax
  40243d:	and    r8d,0x20ffffff
  402444:	cmp    r8d,0x20474343
  40244b:	je     0x402550
  402451:	cmp    eax,0xc0000091
  402456:	mov    rbx,rcx
  402459:	ja     0x4024e0
  40245f:	cmp    eax,0xc000008d
  402464:	jae    0x4024f7
  40246a:	cmp    eax,0xc0000008
  40246f:	je     0x4024a3
  402471:	ja     0x4024b0
  402473:	cmp    eax,0x80000002
  402478:	je     0x4024a3
  40247a:	cmp    eax,0xc0000005
  40247f:	jne    0x4024c2
  402481:	xor    edx,edx
  402483:	mov    ecx,0xb
  402488:	call   0x4038b8
  40248d:	cmp    rax,0x1
  402491:	je     0x4025c0
  402497:	test   rax,rax
  40249a:	je     0x4024c2
  40249c:	mov    ecx,0xb
  4024a1:	call   rax
  4024a3:	mov    eax,0xffffffff
  4024a8:	add    rsp,0x20
  4024ac:	pop    rbx
  4024ad:	ret    
  4024ae:	xchg   ax,ax
  4024b0:	cmp    eax,0xc000001d
  4024b5:	je     0x402576
  4024bb:	cmp    eax,0xc000008c
  4024c0:	je     0x4024a3
  4024c2:	mov    rax,QWORD PTR [rip+0x61f7]        # 0x4086c0
  4024c9:	test   rax,rax
  4024cc:	je     0x4024a8
  4024ce:	mov    rcx,rbx
  4024d1:	add    rsp,0x20
  4024d5:	pop    rbx
  4024d6:	rex.W jmp rax
  4024d9:	nop    DWORD PTR [rax+0x0]
  4024e0:	cmp    eax,0xc0000094
  4024e5:	je     0x402522
  4024e7:	ja     0x402560
  4024e9:	cmp    eax,0xc0000092
  4024ee:	je     0x4024a3
  4024f0:	cmp    eax,0xc0000093
  4024f5:	jne    0x4024c2
  4024f7:	xor    edx,edx
  4024f9:	mov    ecx,0x8
  4024fe:	call   0x4038b8
  402503:	cmp    rax,0x1
  402507:	jne    0x402534
  402509:	mov    edx,0x1
  40250e:	mov    ecx,0x8
  402513:	call   0x4038b8
  402518:	call   0x401c80
  40251d:	jmp    0x4024a3
  402522:	xor    edx,edx
  402524:	mov    ecx,0x8
  402529:	call   0x4038b8
  40252e:	cmp    rax,0x1
  402532:	je     0x4025a2
  402534:	test   rax,rax
  402537:	je     0x4024c2
  402539:	mov    ecx,0x8
  40253e:	call   rax
  402540:	mov    eax,0xffffffff
  402545:	jmp    0x4024a8
  40254a:	nop    WORD PTR [rax+rax*1+0x0]
  402550:	test   BYTE PTR [rdx+0x4],0x1
  402554:	jne    0x402451
  40255a:	jmp    0x4024a3
  40255f:	nop
  402560:	cmp    eax,0xc0000095
  402565:	je     0x4024a3
  40256b:	cmp    eax,0xc0000096
  402570:	jne    0x4024c2
  402576:	xor    edx,edx
  402578:	mov    ecx,0x4
  40257d:	call   0x4038b8
  402582:	cmp    rax,0x1
  402586:	je     0x4025d4
  402588:	test   rax,rax
  40258b:	je     0x4024c2
  402591:	mov    ecx,0x4
  402596:	call   rax
  402598:	mov    eax,0xffffffff
  40259d:	jmp    0x4024a8
  4025a2:	mov    edx,0x1
  4025a7:	mov    ecx,0x8
  4025ac:	call   0x4038b8
  4025b1:	jmp    0x4024a3
  4025b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4025c0:	mov    edx,0x1
  4025c5:	mov    ecx,0xb
  4025ca:	call   0x4038b8
  4025cf:	jmp    0x4024a3
  4025d4:	mov    edx,0x1
  4025d9:	mov    ecx,0x4
  4025de:	call   0x4038b8
  4025e3:	jmp    0x4024a3
  4025e8:	nop
  4025e9:	nop
  4025ea:	nop
  4025eb:	nop
  4025ec:	nop
  4025ed:	nop
  4025ee:	nop
  4025ef:	nop
  4025f0:	push   rbp
  4025f1:	push   rdi
  4025f2:	push   rsi
  4025f3:	push   rbx
  4025f4:	sub    rsp,0x28
  4025f8:	lea    rcx,[rip+0x63a1]        # 0x4089a0
  4025ff:	call   QWORD PTR [rip+0x6d7b]        # 0x409380
  402605:	mov    rbx,QWORD PTR [rip+0x6374]        # 0x408980
  40260c:	test   rbx,rbx
  40260f:	je     0x402644
  402611:	mov    rbp,QWORD PTR [rip+0x6df8]        # 0x409410
  402618:	mov    rdi,QWORD PTR [rip+0x6d81]        # 0x4093a0
  40261f:	nop
  402620:	mov    ecx,DWORD PTR [rbx]
  402622:	call   rbp
  402624:	mov    rsi,rax
  402627:	call   rdi
  402629:	test   eax,eax
  40262b:	jne    0x40263b
  40262d:	test   rsi,rsi
  402630:	je     0x40263b
  402632:	mov    rax,QWORD PTR [rbx+0x8]
  402636:	mov    rcx,rsi
  402639:	call   rax
  40263b:	mov    rbx,QWORD PTR [rbx+0x10]
  40263f:	test   rbx,rbx
  402642:	jne    0x402620
  402644:	mov    rax,QWORD PTR [rip+0x6d7d]        # 0x4093c8
  40264b:	lea    rcx,[rip+0x634e]        # 0x4089a0
  402652:	add    rsp,0x28
  402656:	pop    rbx
  402657:	pop    rsi
  402658:	pop    rdi
  402659:	pop    rbp
  40265a:	rex.W jmp rax
  40265d:	nop    DWORD PTR [rax]
  402660:	push   rdi
  402661:	push   rsi
  402662:	push   rbx
  402663:	sub    rsp,0x20
  402667:	mov    eax,DWORD PTR [rip+0x631b]        # 0x408988
  40266d:	test   eax,eax
  40266f:	jne    0x402680
  402671:	add    rsp,0x20
  402675:	pop    rbx
  402676:	pop    rsi
  402677:	pop    rdi
  402678:	ret    
  402679:	nop    DWORD PTR [rax+0x0]
  402680:	mov    rsi,rdx
  402683:	mov    edi,ecx
  402685:	mov    edx,0x18
  40268a:	mov    ecx,0x1
  40268f:	call   0x403908
  402694:	test   rax,rax
  402697:	mov    rbx,rax
  40269a:	je     0x4026d8
  40269c:	mov    DWORD PTR [rax],edi
  40269e:	mov    QWORD PTR [rax+0x8],rsi
  4026a2:	lea    rcx,[rip+0x62f7]        # 0x4089a0
  4026a9:	call   QWORD PTR [rip+0x6cd1]        # 0x409380
  4026af:	mov    rax,QWORD PTR [rip+0x62ca]        # 0x408980
  4026b6:	lea    rcx,[rip+0x62e3]        # 0x4089a0
  4026bd:	mov    QWORD PTR [rip+0x62bc],rbx        # 0x408980
  4026c4:	mov    QWORD PTR [rbx+0x10],rax
  4026c8:	call   QWORD PTR [rip+0x6cfa]        # 0x4093c8
  4026ce:	xor    eax,eax
  4026d0:	add    rsp,0x20
  4026d4:	pop    rbx
  4026d5:	pop    rsi
  4026d6:	pop    rdi
  4026d7:	ret    
  4026d8:	mov    eax,0xffffffff
  4026dd:	jmp    0x402671
  4026df:	nop
  4026e0:	push   rbx
  4026e1:	sub    rsp,0x20
  4026e5:	mov    eax,DWORD PTR [rip+0x629d]        # 0x408988
  4026eb:	test   eax,eax
  4026ed:	jne    0x402700
  4026ef:	xor    eax,eax
  4026f1:	add    rsp,0x20
  4026f5:	pop    rbx
  4026f6:	ret    
  4026f7:	nop    WORD PTR [rax+rax*1+0x0]
  402700:	mov    ebx,ecx
  402702:	lea    rcx,[rip+0x6297]        # 0x4089a0
  402709:	call   QWORD PTR [rip+0x6c71]        # 0x409380
  40270f:	mov    rdx,QWORD PTR [rip+0x626a]        # 0x408980
  402716:	test   rdx,rdx
  402719:	je     0x402737
  40271b:	mov    eax,DWORD PTR [rdx]
  40271d:	cmp    eax,ebx
  40271f:	jne    0x40272e
  402721:	jmp    0x40276f
  402723:	mov    r8d,DWORD PTR [rax]
  402726:	cmp    r8d,ebx
  402729:	je     0x402750
  40272b:	mov    rdx,rax
  40272e:	mov    rax,QWORD PTR [rdx+0x10]
  402732:	test   rax,rax
  402735:	jne    0x402723
  402737:	lea    rcx,[rip+0x6262]        # 0x4089a0
  40273e:	call   QWORD PTR [rip+0x6c84]        # 0x4093c8
  402744:	xor    eax,eax
  402746:	add    rsp,0x20
  40274a:	pop    rbx
  40274b:	ret    
  40274c:	nop    DWORD PTR [rax+0x0]
  402750:	mov    rcx,rax
  402753:	mov    rax,QWORD PTR [rax+0x10]
  402757:	mov    QWORD PTR [rdx+0x10],rax
  40275b:	call   0x4038e8
  402760:	lea    rcx,[rip+0x6239]        # 0x4089a0
  402767:	call   QWORD PTR [rip+0x6c5b]        # 0x4093c8
  40276d:	jmp    0x402744
  40276f:	mov    rax,QWORD PTR [rdx+0x10]
  402773:	mov    rcx,rdx
  402776:	mov    QWORD PTR [rip+0x6203],rax        # 0x408980
  40277d:	jmp    0x40275b
  40277f:	nop
  402780:	push   rbx
  402781:	sub    rsp,0x20
  402785:	cmp    edx,0x1
  402788:	je     0x402820
  40278e:	jb     0x4027c0
  402790:	cmp    edx,0x2
  402793:	je     0x4027b0
  402795:	cmp    edx,0x3
  402798:	jne    0x4027b5
  40279a:	mov    eax,DWORD PTR [rip+0x61e8]        # 0x408988
  4027a0:	test   eax,eax
  4027a2:	je     0x4027b5
  4027a4:	call   0x4025f0
  4027a9:	jmp    0x4027b5
  4027ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4027b0:	call   0x401c80
  4027b5:	mov    eax,0x1
  4027ba:	add    rsp,0x20
  4027be:	pop    rbx
  4027bf:	ret    
  4027c0:	mov    eax,DWORD PTR [rip+0x61c2]        # 0x408988
  4027c6:	test   eax,eax
  4027c8:	jne    0x402850
  4027ce:	mov    eax,DWORD PTR [rip+0x61b4]        # 0x408988
  4027d4:	cmp    eax,0x1
  4027d7:	jne    0x4027b5
  4027d9:	mov    rcx,QWORD PTR [rip+0x61a0]        # 0x408980
  4027e0:	test   rcx,rcx
  4027e3:	je     0x4027f6
  4027e5:	mov    rbx,QWORD PTR [rcx+0x10]
  4027e9:	call   0x4038e8
  4027ee:	test   rbx,rbx
  4027f1:	mov    rcx,rbx
  4027f4:	jne    0x4027e5
  4027f6:	lea    rcx,[rip+0x61a3]        # 0x4089a0
  4027fd:	mov    QWORD PTR [rip+0x6178],0x0        # 0x408980
  402808:	mov    DWORD PTR [rip+0x6176],0x0        # 0x408988
  402812:	call   QWORD PTR [rip+0x6b60]        # 0x409378
  402818:	jmp    0x4027b5
  40281a:	nop    WORD PTR [rax+rax*1+0x0]
  402820:	mov    eax,DWORD PTR [rip+0x6162]        # 0x408988
  402826:	test   eax,eax
  402828:	je     0x402840
  40282a:	mov    eax,0x1
  40282f:	mov    DWORD PTR [rip+0x614f],0x1        # 0x408988
  402839:	add    rsp,0x20
  40283d:	pop    rbx
  40283e:	ret    
  40283f:	nop
  402840:	lea    rcx,[rip+0x6159]        # 0x4089a0
  402847:	call   QWORD PTR [rip+0x6b73]        # 0x4093c0
  40284d:	jmp    0x40282a
  40284f:	nop
  402850:	call   0x4025f0
  402855:	jmp    0x4027ce
  40285a:	nop
  40285b:	nop
  40285c:	nop
  40285d:	nop
  40285e:	nop
  40285f:	nop
  402860:	movsxd rax,DWORD PTR [rcx+0x3c]
  402864:	add    rcx,rax
  402867:	xor    eax,eax
  402869:	cmp    DWORD PTR [rcx],0x4550
  40286f:	je     0x402873
  402871:	repz ret 
  402873:	xor    eax,eax
  402875:	cmp    WORD PTR [rcx+0x18],0x20b
  40287b:	sete   al
  40287e:	ret    
  40287f:	nop
  402880:	cmp    WORD PTR [rcx],0x5a4d
  402885:	je     0x402890
  402887:	xor    eax,eax
  402889:	ret    
  40288a:	nop    WORD PTR [rax+rax*1+0x0]
  402890:	jmp    0x402860
  402892:	nop    DWORD PTR [rax+0x0]
  402896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028a0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4028a4:	add    rcx,rax
  4028a7:	movzx  eax,WORD PTR [rcx+0x14]
  4028ab:	lea    rax,[rcx+rax*1+0x18]
  4028b0:	movzx  ecx,WORD PTR [rcx+0x6]
  4028b4:	test   ecx,ecx
  4028b6:	je     0x4028e1
  4028b8:	sub    ecx,0x1
  4028bb:	lea    rcx,[rcx+rcx*4]
  4028bf:	lea    r9,[rax+rcx*8+0x28]
  4028c4:	mov    r8d,DWORD PTR [rax+0xc]
  4028c8:	cmp    r8,rdx
  4028cb:	mov    rcx,r8
  4028ce:	ja     0x4028d8
  4028d0:	add    ecx,DWORD PTR [rax+0x8]
  4028d3:	cmp    rdx,rcx
  4028d6:	jb     0x4028e3
  4028d8:	add    rax,0x28
  4028dc:	cmp    rax,r9
  4028df:	jne    0x4028c4
  4028e1:	xor    eax,eax
  4028e3:	repz ret 
  4028e5:	nop
  4028e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028f0:	push   rdi
  4028f1:	push   rsi
  4028f2:	push   rbx
  4028f3:	sub    rsp,0x20
  4028f7:	mov    rsi,rcx
  4028fa:	call   0x4038a8
  4028ff:	cmp    rax,0x8
  402903:	ja     0x402920
  402905:	mov    rbx,QWORD PTR [rip+0x2f54]        # 0x405860
  40290c:	xor    edi,edi
  40290e:	cmp    WORD PTR [rbx],0x5a4d
  402913:	je     0x402930
  402915:	mov    rax,rdi
  402918:	add    rsp,0x20
  40291c:	pop    rbx
  40291d:	pop    rsi
  40291e:	pop    rdi
  40291f:	ret    
  402920:	xor    edi,edi
  402922:	mov    rax,rdi
  402925:	add    rsp,0x20
  402929:	pop    rbx
  40292a:	pop    rsi
  40292b:	pop    rdi
  40292c:	ret    
  40292d:	nop    DWORD PTR [rax]
  402930:	mov    rcx,rbx
  402933:	call   0x402860
  402938:	test   eax,eax
  40293a:	je     0x402915
  40293c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402940:	add    rdx,rbx
  402943:	movzx  eax,WORD PTR [rdx+0x14]
  402947:	lea    rbx,[rdx+rax*1+0x18]
  40294c:	movzx  eax,WORD PTR [rdx+0x6]
  402950:	test   eax,eax
  402952:	je     0x402915
  402954:	sub    eax,0x1
  402957:	lea    rax,[rax+rax*4]
  40295b:	lea    rdi,[rbx+rax*8+0x28]
  402960:	jmp    0x40296b
  402962:	add    rbx,0x28
  402966:	cmp    rbx,rdi
  402969:	je     0x402920
  40296b:	mov    r8d,0x8
  402971:	mov    rdx,rsi
  402974:	mov    rcx,rbx
  402977:	call   0x4038a0
  40297c:	test   eax,eax
  40297e:	jne    0x402962
  402980:	mov    rdi,rbx
  402983:	mov    rax,rdi
  402986:	add    rsp,0x20
  40298a:	pop    rbx
  40298b:	pop    rsi
  40298c:	pop    rdi
  40298d:	ret    
  40298e:	xchg   ax,ax
  402990:	push   rsi
  402991:	push   rbx
  402992:	sub    rsp,0x28
  402996:	mov    rbx,QWORD PTR [rip+0x2ec3]        # 0x405860
  40299d:	cmp    WORD PTR [rbx],0x5a4d
  4029a2:	je     0x4029b0
  4029a4:	xor    eax,eax
  4029a6:	add    rsp,0x28
  4029aa:	pop    rbx
  4029ab:	pop    rsi
  4029ac:	ret    
  4029ad:	nop    DWORD PTR [rax]
  4029b0:	mov    rsi,rcx
  4029b3:	mov    rcx,rbx
  4029b6:	call   0x402860
  4029bb:	test   eax,eax
  4029bd:	je     0x4029a4
  4029bf:	sub    rsi,rbx
  4029c2:	mov    rcx,rbx
  4029c5:	mov    rdx,rsi
  4029c8:	add    rsp,0x28
  4029cc:	pop    rbx
  4029cd:	pop    rsi
  4029ce:	jmp    0x4028a0
  4029d3:	nop    DWORD PTR [rax]
  4029d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029e0:	push   rbx
  4029e1:	sub    rsp,0x20
  4029e5:	mov    rbx,QWORD PTR [rip+0x2e74]        # 0x405860
  4029ec:	xor    eax,eax
  4029ee:	cmp    WORD PTR [rbx],0x5a4d
  4029f3:	je     0x402a00
  4029f5:	add    rsp,0x20
  4029f9:	pop    rbx
  4029fa:	ret    
  4029fb:	nop    DWORD PTR [rax+rax*1+0x0]
  402a00:	mov    rcx,rbx
  402a03:	call   0x402860
  402a08:	test   eax,eax
  402a0a:	je     0x4029f5
  402a0c:	movsxd rax,DWORD PTR [rbx+0x3c]
  402a10:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402a15:	add    rsp,0x20
  402a19:	pop    rbx
  402a1a:	ret    
  402a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  402a20:	push   rdi
  402a21:	push   rsi
  402a22:	push   rbx
  402a23:	sub    rsp,0x20
  402a27:	mov    rsi,QWORD PTR [rip+0x2e32]        # 0x405860
  402a2e:	xor    edi,edi
  402a30:	mov    rbx,rcx
  402a33:	cmp    WORD PTR [rsi],0x5a4d
  402a38:	je     0x402a45
  402a3a:	mov    rax,rdi
  402a3d:	add    rsp,0x20
  402a41:	pop    rbx
  402a42:	pop    rsi
  402a43:	pop    rdi
  402a44:	ret    
  402a45:	mov    rcx,rsi
  402a48:	call   0x402860
  402a4d:	test   eax,eax
  402a4f:	je     0x402a3a
  402a51:	movsxd rax,DWORD PTR [rsi+0x3c]
  402a55:	add    rsi,rax
  402a58:	movzx  eax,WORD PTR [rsi+0x14]
  402a5c:	lea    rdx,[rsi+rax*1+0x18]
  402a61:	movzx  eax,WORD PTR [rsi+0x6]
  402a65:	test   eax,eax
  402a67:	je     0x402a3a
  402a69:	sub    eax,0x1
  402a6c:	lea    rax,[rax+rax*4]
  402a70:	lea    rax,[rdx+rax*8+0x28]
  402a75:	test   BYTE PTR [rdx+0x27],0x20
  402a79:	je     0x402a84
  402a7b:	test   rbx,rbx
  402a7e:	je     0x402aa0
  402a80:	sub    rbx,0x1
  402a84:	add    rdx,0x28
  402a88:	cmp    rdx,rax
  402a8b:	jne    0x402a75
  402a8d:	xor    edi,edi
  402a8f:	mov    rax,rdi
  402a92:	add    rsp,0x20
  402a96:	pop    rbx
  402a97:	pop    rsi
  402a98:	pop    rdi
  402a99:	ret    
  402a9a:	nop    WORD PTR [rax+rax*1+0x0]
  402aa0:	mov    rdi,rdx
  402aa3:	mov    rax,rdi
  402aa6:	add    rsp,0x20
  402aaa:	pop    rbx
  402aab:	pop    rsi
  402aac:	pop    rdi
  402aad:	ret    
  402aae:	xchg   ax,ax
  402ab0:	push   rsi
  402ab1:	push   rbx
  402ab2:	sub    rsp,0x28
  402ab6:	mov    rsi,QWORD PTR [rip+0x2da3]        # 0x405860
  402abd:	xor    ebx,ebx
  402abf:	cmp    WORD PTR [rsi],0x5a4d
  402ac4:	je     0x402ad0
  402ac6:	mov    rax,rbx
  402ac9:	add    rsp,0x28
  402acd:	pop    rbx
  402ace:	pop    rsi
  402acf:	ret    
  402ad0:	mov    rcx,rsi
  402ad3:	call   0x402860
  402ad8:	test   eax,eax
  402ada:	cmovne rbx,rsi
  402ade:	mov    rax,rbx
  402ae1:	add    rsp,0x28
  402ae5:	pop    rbx
  402ae6:	pop    rsi
  402ae7:	ret    
  402ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  402af0:	push   rsi
  402af1:	push   rbx
  402af2:	sub    rsp,0x28
  402af6:	mov    rbx,QWORD PTR [rip+0x2d63]        # 0x405860
  402afd:	xor    eax,eax
  402aff:	cmp    WORD PTR [rbx],0x5a4d
  402b04:	je     0x402b10
  402b06:	add    rsp,0x28
  402b0a:	pop    rbx
  402b0b:	pop    rsi
  402b0c:	ret    
  402b0d:	nop    DWORD PTR [rax]
  402b10:	mov    rsi,rcx
  402b13:	mov    rcx,rbx
  402b16:	call   0x402860
  402b1b:	test   eax,eax
  402b1d:	je     0x402b06
  402b1f:	sub    rsi,rbx
  402b22:	mov    rcx,rbx
  402b25:	mov    rdx,rsi
  402b28:	call   0x4028a0
  402b2d:	test   rax,rax
  402b30:	je     0x402b41
  402b32:	mov    eax,DWORD PTR [rax+0x24]
  402b35:	not    eax
  402b37:	shr    eax,0x1f
  402b3a:	add    rsp,0x28
  402b3e:	pop    rbx
  402b3f:	pop    rsi
  402b40:	ret    
  402b41:	xor    eax,eax
  402b43:	jmp    0x402b06
  402b45:	nop
  402b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b50:	push   rbp
  402b51:	push   rdi
  402b52:	push   rsi
  402b53:	push   rbx
  402b54:	sub    rsp,0x28
  402b58:	mov    rdi,QWORD PTR [rip+0x2d01]        # 0x405860
  402b5f:	xor    ebp,ebp
  402b61:	mov    esi,ecx
  402b63:	cmp    WORD PTR [rdi],0x5a4d
  402b68:	je     0x402b80
  402b6a:	mov    rax,rbp
  402b6d:	add    rsp,0x28
  402b71:	pop    rbx
  402b72:	pop    rsi
  402b73:	pop    rdi
  402b74:	pop    rbp
  402b75:	ret    
  402b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b80:	mov    rcx,rdi
  402b83:	call   0x402860
  402b88:	test   eax,eax
  402b8a:	je     0x402b6a
  402b8c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402b90:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402b97:	test   edx,edx
  402b99:	je     0x402b6a
  402b9b:	mov    ebx,edx
  402b9d:	mov    rcx,rdi
  402ba0:	mov    rdx,rbx
  402ba3:	call   0x4028a0
  402ba8:	test   rax,rax
  402bab:	je     0x402b6a
  402bad:	add    rbx,rdi
  402bb0:	mov    rdx,rbx
  402bb3:	jne    0x402bc7
  402bb5:	jmp    0x402b6a
  402bb7:	nop    WORD PTR [rax+rax*1+0x0]
  402bc0:	sub    esi,0x1
  402bc3:	add    rdx,0x14
  402bc7:	mov    ecx,DWORD PTR [rdx+0x4]
  402bca:	test   ecx,ecx
  402bcc:	jne    0x402bd5
  402bce:	mov    eax,DWORD PTR [rdx+0xc]
  402bd1:	test   eax,eax
  402bd3:	je     0x402bf0
  402bd5:	test   esi,esi
  402bd7:	jg     0x402bc0
  402bd9:	mov    ebp,DWORD PTR [rdx+0xc]
  402bdc:	add    rbp,rdi
  402bdf:	mov    rax,rbp
  402be2:	add    rsp,0x28
  402be6:	pop    rbx
  402be7:	pop    rsi
  402be8:	pop    rdi
  402be9:	pop    rbp
  402bea:	ret    
  402beb:	nop    DWORD PTR [rax+rax*1+0x0]
  402bf0:	xor    ebp,ebp
  402bf2:	mov    rax,rbp
  402bf5:	add    rsp,0x28
  402bf9:	pop    rbx
  402bfa:	pop    rsi
  402bfb:	pop    rdi
  402bfc:	pop    rbp
  402bfd:	ret    
  402bfe:	nop
  402bff:	nop
  402c00:	push   rcx
  402c01:	push   rax
  402c02:	cmp    rax,0x1000
  402c08:	lea    rcx,[rsp+0x18]
  402c0d:	jb     0x402c28
  402c0f:	sub    rcx,0x1000
  402c16:	or     QWORD PTR [rcx],0x0
  402c1a:	sub    rax,0x1000
  402c20:	cmp    rax,0x1000
  402c26:	ja     0x402c0f
  402c28:	sub    rcx,rax
  402c2b:	or     QWORD PTR [rcx],0x0
  402c2f:	pop    rax
  402c30:	pop    rcx
  402c31:	ret    
  402c32:	nop
  402c33:	nop
  402c34:	nop
  402c35:	nop
  402c36:	nop
  402c37:	nop
  402c38:	nop
  402c39:	nop
  402c3a:	nop
  402c3b:	nop
  402c3c:	nop
  402c3d:	nop
  402c3e:	nop
  402c3f:	nop
  402c40:	push   r13
  402c42:	push   r12
  402c44:	push   rbp
  402c45:	push   rdi
  402c46:	push   rsi
  402c47:	push   rbx
  402c48:	mov    r12d,edx
  402c4b:	mov    ebp,r8d
  402c4e:	mov    edi,edx
  402c50:	sub    r12d,ecx
  402c53:	sub    ebp,edx
  402c55:	mov    eax,r12d
  402c58:	cdq    
  402c59:	idiv   ebp
  402c5b:	test   edx,edx
  402c5d:	mov    r13d,edx
  402c60:	je     0x402ce5
  402c66:	mov    eax,ebp
  402c68:	jmp    0x402c73
  402c6a:	nop    WORD PTR [rax+rax*1+0x0]
  402c70:	mov    r13d,edx
  402c73:	cdq    
  402c74:	idiv   r13d
  402c77:	mov    eax,r13d
  402c7a:	test   edx,edx
  402c7c:	jne    0x402c70
  402c7e:	mov    eax,r8d
  402c81:	sub    eax,ecx
  402c83:	cdq    
  402c84:	idiv   r13d
  402c87:	test   r13d,r13d
  402c8a:	jle    0x402cdc
  402c8c:	movsxd rdx,edi
  402c8f:	xor    esi,esi
  402c91:	lea    rdx,[r9+rdx*8]
  402c95:	test   eax,eax
  402c97:	lea    ecx,[rdi+rsi*1]
  402c9a:	jle    0x402cd3
  402c9c:	mov    rbx,QWORD PTR [rdx+rsi*8]
  402ca0:	xor    r10d,r10d
  402ca3:	mov    r11d,ecx
  402ca6:	lea    r8d,[rcx+rbp*1]
  402caa:	sub    r11d,r12d
  402cad:	cmp    edi,ecx
  402caf:	mov    ecx,r11d
  402cb2:	cmovg  ecx,r8d
  402cb6:	add    r10d,0x1
  402cba:	movsxd r11,ecx
  402cbd:	cmp    r10d,eax
  402cc0:	lea    r8,[r9+r11*8]
  402cc4:	mov    r11,QWORD PTR [r8]
  402cc7:	mov    QWORD PTR [r8],rbx
  402cca:	mov    QWORD PTR [rdx+rsi*8],r11
  402cce:	mov    rbx,r11
  402cd1:	jne    0x402ca3
  402cd3:	add    rsi,0x1
  402cd7:	cmp    r13d,esi
  402cda:	jg     0x402c95
  402cdc:	pop    rbx
  402cdd:	pop    rsi
  402cde:	pop    rdi
  402cdf:	pop    rbp
  402ce0:	pop    r12
  402ce2:	pop    r13
  402ce4:	ret    
  402ce5:	mov    r13d,ebp
  402ce8:	jmp    0x402c7e
  402cea:	nop    WORD PTR [rax+rax*1+0x0]
  402cf0:	push   rdi
  402cf1:	push   rsi
  402cf2:	push   rbx
  402cf3:	sub    rsp,0x30
  402cf7:	mov    rax,QWORD PTR [rip+0x2b72]        # 0x405870
  402cfe:	mov    QWORD PTR [rsp+0x58],rdx
  402d03:	mov    QWORD PTR [rsp+0x60],r8
  402d08:	lea    rsi,[rsp+0x58]
  402d0d:	mov    QWORD PTR [rsp+0x68],r9
  402d12:	mov    rbx,rcx
  402d15:	mov    rax,QWORD PTR [rax]
  402d18:	mov    QWORD PTR [rsp+0x28],rsi
  402d1d:	mov    rax,QWORD PTR [rax]
  402d20:	mov    rdi,QWORD PTR [rax]
  402d23:	call   0x403960
  402d28:	lea    rdx,[rip+0x2991]        # 0x4056c0
  402d2f:	lea    rcx,[rax+0x60]
  402d33:	mov    r8,rdi
  402d36:	call   0x4038f8
  402d3b:	test   rbx,rbx
  402d3e:	je     0x402d54
  402d40:	call   0x403960
  402d45:	lea    rcx,[rax+0x60]
  402d49:	mov    r8,rsi
  402d4c:	mov    rdx,rbx
  402d4f:	call   0x403898
  402d54:	call   0x403960
  402d59:	lea    rdx,[rax+0x60]
  402d5d:	mov    ecx,0xa
  402d62:	call   0x4038f0
  402d67:	nop
  402d68:	add    rsp,0x30
  402d6c:	pop    rbx
  402d6d:	pop    rsi
  402d6e:	pop    rdi
  402d6f:	ret    
  402d70:	push   r15
  402d72:	push   r14
  402d74:	push   r13
  402d76:	push   r12
  402d78:	push   rbp
  402d79:	push   rdi
  402d7a:	push   rsi
  402d7b:	push   rbx
  402d7c:	sub    rsp,0x48
  402d80:	mov    eax,DWORD PTR [rip+0x12e6]        # 0x40406c
  402d86:	mov    rbp,QWORD PTR [rip+0x12d3]        # 0x404060
  402d8d:	mov    QWORD PTR [rsp+0x90],rcx
  402d95:	mov    QWORD PTR [rsp+0x98],rdx
  402d9d:	mov    edx,0x3d
  402da2:	mov    r14,r8
  402da5:	mov    QWORD PTR [rsp+0xa8],r9
  402dad:	mov    r13d,DWORD PTR [rsp+0xb0]
  402db5:	mov    DWORD PTR [rsp+0x38],eax
  402db9:	mov    rcx,rbp
  402dbc:	add    eax,0x1
  402dbf:	mov    DWORD PTR [rsp+0x3c],eax
  402dc3:	mov    DWORD PTR [rip+0x12a3],eax        # 0x40406c
  402dc9:	call   0x4038b0
  402dce:	test   rax,rax
  402dd1:	mov    QWORD PTR [rsp+0x30],rax
  402dd6:	je     0x402fb4
  402ddc:	mov    rdi,rax
  402ddf:	add    rax,0x1
  402de3:	sub    rdi,rbp
  402de6:	mov    QWORD PTR [rsp+0x30],rax
  402deb:	mov    r15,QWORD PTR [r14]
  402dee:	test   r15,r15
  402df1:	je     0x402ffb
  402df7:	lea    rbx,[r14+0x20]
  402dfb:	mov    r12d,0xffffffff
  402e01:	mov    DWORD PTR [rsp+0x2c],0x0
  402e09:	xor    esi,esi
  402e0b:	jmp    0x402e25
  402e0d:	nop    DWORD PTR [rax]
  402e10:	test   r13d,r13d
  402e13:	je     0x402e4e
  402e15:	add    rbx,0x20
  402e19:	mov    r15,QWORD PTR [rbx-0x20]
  402e1d:	add    esi,0x1
  402e20:	test   r15,r15
  402e23:	je     0x402e90
  402e25:	mov    r8,rdi
  402e28:	mov    rdx,r15
  402e2b:	mov    rcx,rbp
  402e2e:	call   0x4038a0
  402e33:	test   eax,eax
  402e35:	jne    0x402e15
  402e37:	mov    rcx,r15
  402e3a:	call   0x4038a8
  402e3f:	cmp    rax,rdi
  402e42:	je     0x402f3d
  402e48:	cmp    rdi,0x1
  402e4c:	je     0x402e10
  402e4e:	cmp    r12d,0xffffffff
  402e52:	je     0x402ef0
  402e58:	movsxd rax,r12d
  402e5b:	shl    rax,0x5
  402e5f:	add    rax,r14
  402e62:	mov    edx,DWORD PTR [rax+0x8]
  402e65:	cmp    DWORD PTR [rbx-0x18],edx
  402e68:	je     0x402f00
  402e6e:	add    rbx,0x20
  402e72:	mov    r15,QWORD PTR [rbx-0x20]
  402e76:	add    esi,0x1
  402e79:	mov    DWORD PTR [rsp+0x2c],0x1
  402e81:	test   r15,r15
  402e84:	jne    0x402e25
  402e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e90:	mov    r9d,DWORD PTR [rsp+0x2c]
  402e95:	test   r9d,r9d
  402e98:	je     0x402f30
  402e9e:	mov    r8d,DWORD PTR [rip+0x11cb]        # 0x404070
  402ea5:	test   r8d,r8d
  402ea8:	je     0x402ec8
  402eaa:	mov    rax,QWORD PTR [rsp+0x98]
  402eb2:	cmp    BYTE PTR [rax],0x3a
  402eb5:	je     0x402ec8
  402eb7:	lea    rcx,[rip+0x2892]        # 0x405750
  402ebe:	mov    r8,rbp
  402ec1:	mov    edx,edi
  402ec3:	call   0x402cf0
  402ec8:	mov    DWORD PTR [rip+0x1196],0x0        # 0x404068
  402ed2:	mov    eax,0x3f
  402ed7:	add    rsp,0x48
  402edb:	pop    rbx
  402edc:	pop    rsi
  402edd:	pop    rdi
  402ede:	pop    rbp
  402edf:	pop    r12
  402ee1:	pop    r13
  402ee3:	pop    r14
  402ee5:	pop    r15
  402ee7:	ret    
  402ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  402ef0:	mov    r12d,esi
  402ef3:	jmp    0x402e15
  402ef8:	nop    DWORD PTR [rax+rax*1+0x0]
  402f00:	mov    rdx,QWORD PTR [rax+0x10]
  402f04:	cmp    QWORD PTR [rbx-0x10],rdx
  402f08:	jne    0x402e6e
  402f0e:	mov    eax,DWORD PTR [rax+0x18]
  402f11:	cmp    DWORD PTR [rbx-0x8],eax
  402f14:	mov    eax,0x1
  402f19:	cmove  eax,DWORD PTR [rsp+0x2c]
  402f1e:	mov    DWORD PTR [rsp+0x2c],eax
  402f22:	jmp    0x402e15
  402f27:	nop    WORD PTR [rax+rax*1+0x0]
  402f30:	cmp    r12d,0xffffffff
  402f34:	je     0x402ffb
  402f3a:	mov    esi,r12d
  402f3d:	movsxd rax,esi
  402f40:	shl    rax,0x5
  402f44:	add    r14,rax
  402f47:	cmp    QWORD PTR [rsp+0x30],0x0
  402f4d:	mov    eax,DWORD PTR [r14+0x8]
  402f51:	setne  cl
  402f54:	je     0x402fc4
  402f56:	test   eax,eax
  402f58:	jne    0x402fc4
  402f5a:	mov    ecx,DWORD PTR [rip+0x1110]        # 0x404070
  402f60:	test   ecx,ecx
  402f62:	jne    0x402f94
  402f64:	cmp    QWORD PTR [r14+0x10],0x0
  402f69:	je     0x4030c4
  402f6f:	mov    DWORD PTR [rip+0x10ef],0x0        # 0x404068
  402f79:	mov    rax,QWORD PTR [rsp+0x98]
  402f81:	cmp    BYTE PTR [rax],0x3a
  402f84:	je     0x4030b1
  402f8a:	mov    eax,0x3f
  402f8f:	jmp    0x402ed7
  402f94:	mov    rax,QWORD PTR [rsp+0x98]
  402f9c:	cmp    BYTE PTR [rax],0x3a
  402f9f:	je     0x402f64
  402fa1:	lea    rcx,[rip+0x2778]        # 0x405720
  402fa8:	mov    r8,rbp
  402fab:	mov    edx,edi
  402fad:	call   0x402cf0
  402fb2:	jmp    0x402f64
  402fb4:	mov    rcx,rbp
  402fb7:	call   0x4038a8
  402fbc:	mov    rdi,rax
  402fbf:	jmp    0x402deb
  402fc4:	lea    edx,[rax-0x1]
  402fc7:	cmp    edx,0x1
  402fca:	jbe    0x403037
  402fcc:	cmp    QWORD PTR [rsp+0xa8],0x0
  402fd5:	je     0x402fe1
  402fd7:	mov    rax,QWORD PTR [rsp+0xa8]
  402fdf:	mov    DWORD PTR [rax],esi
  402fe1:	mov    rax,QWORD PTR [r14+0x10]
  402fe5:	test   rax,rax
  402fe8:	je     0x4030bb
  402fee:	mov    edx,DWORD PTR [r14+0x18]
  402ff2:	mov    DWORD PTR [rax],edx
  402ff4:	xor    eax,eax
  402ff6:	jmp    0x402ed7
  402ffb:	test   r13d,r13d
  402ffe:	jne    0x403112
  403004:	mov    eax,DWORD PTR [rip+0x1066]        # 0x404070
  40300a:	test   eax,eax
  40300c:	je     0x402ec8
  403012:	mov    rax,QWORD PTR [rsp+0x98]
  40301a:	cmp    BYTE PTR [rax],0x3a
  40301d:	je     0x402ec8
  403023:	lea    rcx,[rip+0x26b6]        # 0x4056e0
  40302a:	mov    rdx,rbp
  40302d:	call   0x402cf0
  403032:	jmp    0x402ec8
  403037:	test   cl,cl
  403039:	je     0x4030d3
  40303f:	mov    rdx,QWORD PTR [rsp+0x30]
  403044:	cmp    eax,0x1
  403047:	mov    QWORD PTR [rip+0x5a02],rdx        # 0x408a50
  40304e:	jne    0x402fcc
  403054:	mov    r15,QWORD PTR [rsp+0x30]
  403059:	test   r15,r15
  40305c:	jne    0x402fcc
  403062:	mov    edx,DWORD PTR [rip+0x1008]        # 0x404070
  403068:	test   edx,edx
  40306a:	je     0x403088
  40306c:	mov    rax,QWORD PTR [rsp+0x98]
  403074:	cmp    BYTE PTR [rax],0x3a
  403077:	je     0x403088
  403079:	lea    rcx,[rip+0x2700]        # 0x405780
  403080:	mov    rdx,rbp
  403083:	call   0x402cf0
  403088:	cmp    QWORD PTR [r14+0x10],0x0
  40308d:	je     0x403106
  40308f:	mov    DWORD PTR [rip+0xfcf],0x0        # 0x404068
  403099:	mov    rax,QWORD PTR [rsp+0x98]
  4030a1:	sub    DWORD PTR [rip+0xfc4],0x1        # 0x40406c
  4030a8:	cmp    BYTE PTR [rax],0x3a
  4030ab:	jne    0x402f8a
  4030b1:	mov    eax,0x3a
  4030b6:	jmp    0x402ed7
  4030bb:	mov    eax,DWORD PTR [r14+0x18]
  4030bf:	jmp    0x402ed7
  4030c4:	mov    eax,DWORD PTR [r14+0x18]
  4030c8:	mov    DWORD PTR [rip+0xf9a],eax        # 0x404068
  4030ce:	jmp    0x402f79
  4030d3:	cmp    eax,0x1
  4030d6:	jne    0x402fcc
  4030dc:	mov    eax,DWORD PTR [rsp+0x38]
  4030e0:	mov    rdx,QWORD PTR [rsp+0x90]
  4030e8:	add    eax,0x2
  4030eb:	mov    DWORD PTR [rip+0xf7b],eax        # 0x40406c
  4030f1:	movsxd rax,DWORD PTR [rsp+0x3c]
  4030f6:	mov    r15,QWORD PTR [rdx+rax*8]
  4030fa:	mov    QWORD PTR [rip+0x594f],r15        # 0x408a50
  403101:	jmp    0x403059
  403106:	mov    eax,DWORD PTR [r14+0x18]
  40310a:	mov    DWORD PTR [rip+0xf58],eax        # 0x404068
  403110:	jmp    0x403099
  403112:	mov    eax,DWORD PTR [rsp+0x38]
  403116:	mov    DWORD PTR [rip+0xf50],eax        # 0x40406c
  40311c:	mov    eax,0xffffffff
  403121:	jmp    0x402ed7
  403126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403130:	push   r15
  403132:	push   r14
  403134:	push   r13
  403136:	push   r12
  403138:	push   rbp
  403139:	push   rdi
  40313a:	push   rsi
  40313b:	push   rbx
  40313c:	sub    rsp,0x38
  403140:	test   r8,r8
  403143:	mov    edi,ecx
  403145:	mov    r15,rdx
  403148:	mov    QWORD PTR [rsp+0x90],r8
  403150:	mov    QWORD PTR [rsp+0x98],r9
  403158:	je     0x40342e
  40315e:	mov    r9d,DWORD PTR [rip+0xf07]        # 0x40406c
  403165:	test   r9d,r9d
  403168:	je     0x4033c0
  40316e:	cmp    DWORD PTR [rip+0xedb],0xffffffff        # 0x404050
  403175:	je     0x403334
  40317b:	mov    edx,DWORD PTR [rip+0x58d7]        # 0x408a58
  403181:	test   edx,edx
  403183:	jne    0x403334
  403189:	mov    rax,QWORD PTR [rsp+0x90]
  403191:	movzx  eax,BYTE PTR [rax]
  403194:	cmp    al,0x2d
  403196:	je     0x403368
  40319c:	cmp    al,0x2b
  40319e:	je     0x403444
  4031a4:	mov    r8d,DWORD PTR [rip+0xea5]        # 0x404050
  4031ab:	test   r8d,r8d
  4031ae:	jne    0x403444
  4031b4:	sub    eax,0x2b
  4031b7:	test   al,0xfd
  4031b9:	je     0x403370
  4031bf:	test   edx,edx
  4031c1:	mov    QWORD PTR [rip+0x5884],0x0        # 0x408a50
  4031cc:	jne    0x4033a0
  4031d2:	mov    r14d,DWORD PTR [rsp+0xa8]
  4031da:	mov    ebp,DWORD PTR [rsp+0xa8]
  4031e1:	and    r14d,0x2
  4031e5:	and    ebp,0x1
  4031e8:	jmp    0x40326e
  4031ed:	nop    DWORD PTR [rax]
  4031f0:	lea    rax,[rip+0x24de]        # 0x4056d5
  4031f7:	test   r14d,r14d
  4031fa:	mov    edx,r14d
  4031fd:	mov    QWORD PTR [rip+0xe5c],rax        # 0x404060
  403204:	jne    0x403510
  40320a:	test   ebp,ebp
  40320c:	je     0x40342e
  403212:	mov    r12d,DWORD PTR [rip+0xe3f]        # 0x404058
  403219:	cmp    r12d,0xffffffff
  40321d:	je     0x403390
  403223:	mov    r13d,DWORD PTR [rip+0xe2a]        # 0x404054
  40322a:	cmp    r13d,0xffffffff
  40322e:	je     0x403265
  403230:	mov    edx,r13d
  403233:	mov    r9,r15
  403236:	mov    r8d,ebx
  403239:	mov    ecx,r12d
  40323c:	call   0x402c40
  403241:	mov    esi,DWORD PTR [rip+0xe25]        # 0x40406c
  403247:	mov    eax,r12d
  40324a:	mov    edx,DWORD PTR [rip+0x5808]        # 0x408a58
  403250:	sub    eax,r13d
  403253:	mov    DWORD PTR [rip+0xdf7],0xffffffff        # 0x404054
  40325d:	add    eax,esi
  40325f:	mov    DWORD PTR [rip+0xdf3],eax        # 0x404058
  403265:	add    esi,0x1
  403268:	mov    DWORD PTR [rip+0xdfe],esi        # 0x40406c
  40326e:	test   edx,edx
  403270:	jne    0x403284
  403272:	mov    rsi,QWORD PTR [rip+0xde7]        # 0x404060
  403279:	movzx  eax,BYTE PTR [rsi]
  40327c:	test   al,al
  40327e:	jne    0x40347e
  403284:	movsxd rbx,DWORD PTR [rip+0xde1]        # 0x40406c
  40328b:	mov    DWORD PTR [rip+0x57c3],0x0        # 0x408a58
  403295:	cmp    ebx,edi
  403297:	mov    esi,ebx
  403299:	jge    0x4033e0
  40329f:	movsxd rax,ebx
  4032a2:	mov    r13,QWORD PTR [r15+rax*8]
  4032a6:	cmp    BYTE PTR [r13+0x0],0x2d
  4032ab:	mov    QWORD PTR [rip+0xdae],r13        # 0x404060
  4032b2:	jne    0x4031f0
  4032b8:	movzx  eax,BYTE PTR [r13+0x1]
  4032bd:	test   al,al
  4032bf:	jne    0x403451
  4032c5:	mov    rcx,QWORD PTR [rsp+0x90]
  4032cd:	mov    edx,0x2d
  4032d2:	call   0x4038b0
  4032d7:	test   rax,rax
  4032da:	je     0x4031f0
  4032e0:	cmp    DWORD PTR [rip+0xd71],0xffffffff        # 0x404058
  4032e7:	mov    rsi,r13
  4032ea:	je     0x403304
  4032ec:	cmp    DWORD PTR [rip+0xd61],0xffffffff        # 0x404054
  4032f3:	mov    eax,0x2d
  4032f8:	jne    0x40347e
  4032fe:	mov    DWORD PTR [rip+0xd50],ebx        # 0x404054
  403304:	cmp    QWORD PTR [rsp+0x98],0x0
  40330d:	je     0x4036fc
  403313:	cmp    rsi,QWORD PTR [r15+rbx*8]
  403317:	mov    eax,0x2d
  40331c:	je     0x40354e
  403322:	add    rsi,0x1
  403326:	xor    edx,edx
  403328:	mov    QWORD PTR [rip+0xd31],rsi        # 0x404060
  40332f:	jmp    0x4034d2
  403334:	lea    rcx,[rip+0x238a]        # 0x4056c5
  40333b:	call   0x4038d8
  403340:	test   rax,rax
  403343:	mov    edx,DWORD PTR [rip+0x570f]        # 0x408a58
  403349:	setne  al
  40334c:	movzx  eax,al
  40334f:	mov    DWORD PTR [rip+0xcfb],eax        # 0x404050
  403355:	mov    rax,QWORD PTR [rsp+0x90]
  40335d:	movzx  eax,BYTE PTR [rax]
  403360:	cmp    al,0x2d
  403362:	jne    0x40319c
  403368:	or     DWORD PTR [rsp+0xa8],0x2
  403370:	add    QWORD PTR [rsp+0x90],0x1
  403379:	test   edx,edx
  40337b:	mov    QWORD PTR [rip+0x56ca],0x0        # 0x408a50
  403386:	je     0x4031d2
  40338c:	jmp    0x4033a0
  40338e:	xchg   ax,ax
  403390:	mov    DWORD PTR [rip+0xcc2],ebx        # 0x404058
  403396:	jmp    0x403265
  40339b:	nop    DWORD PTR [rax+rax*1+0x0]
  4033a0:	mov    DWORD PTR [rip+0xcaa],0xffffffff        # 0x404054
  4033aa:	mov    DWORD PTR [rip+0xca4],0xffffffff        # 0x404058
  4033b4:	jmp    0x4031d2
  4033b9:	nop    DWORD PTR [rax+0x0]
  4033c0:	mov    DWORD PTR [rip+0x568e],0x1        # 0x408a58
  4033ca:	mov    DWORD PTR [rip+0xc98],0x1        # 0x40406c
  4033d4:	jmp    0x40316e
  4033d9:	nop    DWORD PTR [rax+0x0]
  4033e0:	mov    esi,DWORD PTR [rip+0xc6e]        # 0x404054
  4033e6:	lea    rax,[rip+0x22e8]        # 0x4056d5
  4033ed:	mov    QWORD PTR [rip+0xc6c],rax        # 0x404060
  4033f4:	cmp    esi,0xffffffff
  4033f7:	je     0x40352a
  4033fd:	mov    edi,DWORD PTR [rip+0xc55]        # 0x404058
  403403:	mov    r9,r15
  403406:	mov    r8d,ebx
  403409:	mov    edx,esi
  40340b:	mov    ecx,edi
  40340d:	sub    edi,esi
  40340f:	call   0x402c40
  403414:	add    DWORD PTR [rip+0xc52],edi        # 0x40406c
  40341a:	mov    DWORD PTR [rip+0xc30],0xffffffff        # 0x404054
  403424:	mov    DWORD PTR [rip+0xc2a],0xffffffff        # 0x404058
  40342e:	mov    eax,0xffffffff
  403433:	add    rsp,0x38
  403437:	pop    rbx
  403438:	pop    rsi
  403439:	pop    rdi
  40343a:	pop    rbp
  40343b:	pop    r12
  40343d:	pop    r13
  40343f:	pop    r14
  403441:	pop    r15
  403443:	ret    
  403444:	and    DWORD PTR [rsp+0xa8],0xfffffffe
  40344c:	jmp    0x4031b4
  403451:	mov    ebp,DWORD PTR [rip+0xc01]        # 0x404058
  403457:	cmp    ebp,0xffffffff
  40345a:	je     0x40346b
  40345c:	cmp    DWORD PTR [rip+0xbf1],0xffffffff        # 0x404054
  403463:	jne    0x40346b
  403465:	mov    DWORD PTR [rip+0xbe9],ebx        # 0x404054
  40346b:	lea    rsi,[r13+0x1]
  40346f:	cmp    al,0x2d
  403471:	mov    QWORD PTR [rip+0xbe8],rsi        # 0x404060
  403478:	je     0x40362f
  40347e:	cmp    QWORD PTR [rsp+0x98],0x0
  403487:	je     0x40354e
  40348d:	movsxd rdx,DWORD PTR [rip+0xbd8]        # 0x40406c
  403494:	cmp    rsi,QWORD PTR [r15+rdx*8]
  403498:	je     0x40354e
  40349e:	cmp    al,0x2d
  4034a0:	je     0x403322
  4034a6:	test   BYTE PTR [rsp+0xa8],0x4
  4034ae:	je     0x40354e
  4034b4:	xor    edx,edx
  4034b6:	cmp    al,0x3a
  4034b8:	je     0x4034d2
  4034ba:	mov    rcx,QWORD PTR [rsp+0x90]
  4034c2:	movsx  edx,al
  4034c5:	call   0x4038b0
  4034ca:	xor    edx,edx
  4034cc:	test   rax,rax
  4034cf:	setne  dl
  4034d2:	mov    DWORD PTR [rsp+0x20],edx
  4034d6:	mov    r9,QWORD PTR [rsp+0xa0]
  4034de:	mov    rcx,r15
  4034e1:	mov    r8,QWORD PTR [rsp+0x98]
  4034e9:	mov    rdx,QWORD PTR [rsp+0x90]
  4034f1:	call   0x402d70
  4034f6:	cmp    eax,0xffffffff
  4034f9:	je     0x403544
  4034fb:	lea    rcx,[rip+0x21d3]        # 0x4056d5
  403502:	mov    QWORD PTR [rip+0xb57],rcx        # 0x404060
  403509:	jmp    0x403433
  40350e:	xchg   ax,ax
  403510:	add    ebx,0x1
  403513:	mov    QWORD PTR [rip+0x5536],r13        # 0x408a50
  40351a:	mov    eax,0x1
  40351f:	mov    DWORD PTR [rip+0xb47],ebx        # 0x40406c
  403525:	jmp    0x403433
  40352a:	mov    eax,DWORD PTR [rip+0xb28]        # 0x404058
  403530:	cmp    eax,0xffffffff
  403533:	je     0x40341a
  403539:	mov    DWORD PTR [rip+0xb2d],eax        # 0x40406c
  40353f:	jmp    0x40341a
  403544:	mov    rsi,QWORD PTR [rip+0xb15]        # 0x404060
  40354b:	movzx  eax,BYTE PTR [rsi]
  40354e:	lea    rbp,[rsi+0x1]
  403552:	movsx  ebx,al
  403555:	cmp    ebx,0x3a
  403558:	mov    QWORD PTR [rip+0xb01],rbp        # 0x404060
  40355f:	je     0x4035c4
  403561:	cmp    ebx,0x2d
  403564:	je     0x403707
  40356a:	mov    rcx,QWORD PTR [rsp+0x90]
  403572:	mov    edx,ebx
  403574:	call   0x4038b0
  403579:	test   rax,rax
  40357c:	je     0x4035c4
  40357e:	cmp    ebx,0x57
  403581:	jne    0x403626
  403587:	cmp    QWORD PTR [rsp+0x98],0x0
  403590:	je     0x403626
  403596:	movzx  edx,BYTE PTR [rax+0x1]
  40359a:	cmp    dl,0x3b
  40359d:	je     0x403680
  4035a3:	cmp    dl,0x3a
  4035a6:	je     0x40371b
  4035ac:	cmp    BYTE PTR [rsi+0x1],0x0
  4035b0:	mov    eax,ebx
  4035b2:	jne    0x403433
  4035b8:	add    DWORD PTR [rip+0xaad],0x1        # 0x40406c
  4035bf:	jmp    0x403433
  4035c4:	cmp    BYTE PTR [rsi+0x1],0x0
  4035c8:	jne    0x4035d1
  4035ca:	add    DWORD PTR [rip+0xa9b],0x1        # 0x40406c
  4035d1:	mov    ecx,DWORD PTR [rip+0xa99]        # 0x404070
  4035d7:	test   ecx,ecx
  4035d9:	je     0x4035f6
  4035db:	mov    rax,QWORD PTR [rsp+0x90]
  4035e3:	cmp    BYTE PTR [rax],0x3a
  4035e6:	je     0x4035f6
  4035e8:	lea    rcx,[rip+0x2111]        # 0x405700
  4035ef:	mov    edx,ebx
  4035f1:	call   0x402cf0
  4035f6:	mov    DWORD PTR [rip+0xa6c],ebx        # 0x404068
  4035fc:	mov    eax,0x3f
  403601:	jmp    0x403433
  403606:	mov    rcx,QWORD PTR [rsp+0x90]
  40360e:	mov    edx,0x2d
  403613:	call   0x4038b0
  403618:	test   rax,rax
  40361b:	je     0x40342e
  403621:	mov    ebx,0x2d
  403626:	movzx  edx,BYTE PTR [rax+0x1]
  40362a:	jmp    0x4035a3
  40362f:	cmp    BYTE PTR [r13+0x2],0x0
  403634:	jne    0x403304
  40363a:	mov    esi,DWORD PTR [rip+0xa14]        # 0x404054
  403640:	lea    r8d,[rbx+0x1]
  403644:	lea    rax,[rip+0x208a]        # 0x4056d5
  40364b:	mov    DWORD PTR [rip+0xa1a],r8d        # 0x40406c
  403652:	mov    QWORD PTR [rip+0xa07],rax        # 0x404060
  403659:	cmp    esi,0xffffffff
  40365c:	je     0x40341a
  403662:	mov    ecx,ebp
  403664:	mov    r9,r15
  403667:	mov    edx,esi
  403669:	call   0x402c40
  40366e:	sub    ebp,esi
  403670:	add    DWORD PTR [rip+0x9f6],ebp        # 0x40406c
  403676:	jmp    0x40341a
  40367b:	nop    DWORD PTR [rax+rax*1+0x0]
  403680:	cmp    BYTE PTR [rsi+0x1],0x0
  403684:	jne    0x4037d5
  40368a:	mov    eax,DWORD PTR [rip+0x9dc]        # 0x40406c
  403690:	add    eax,0x1
  403693:	cmp    edi,eax
  403695:	mov    DWORD PTR [rip+0x9d1],eax        # 0x40406c
  40369b:	jg     0x4037c8
  4036a1:	mov    edx,DWORD PTR [rip+0x9c9]        # 0x404070
  4036a7:	lea    rax,[rip+0x2027]        # 0x4056d5
  4036ae:	mov    QWORD PTR [rip+0x9ab],rax        # 0x404060
  4036b5:	test   edx,edx
  4036b7:	je     0x4036d7
  4036b9:	mov    rax,QWORD PTR [rsp+0x90]
  4036c1:	cmp    BYTE PTR [rax],0x3a
  4036c4:	je     0x4036d7
  4036c6:	lea    rcx,[rip+0x20f3]        # 0x4057c0
  4036cd:	mov    edx,0x57
  4036d2:	call   0x402cf0
  4036d7:	mov    rax,QWORD PTR [rsp+0x90]
  4036df:	mov    DWORD PTR [rip+0x97f],0x57        # 0x404068
  4036e9:	cmp    BYTE PTR [rax],0x3a
  4036ec:	je     0x4037be
  4036f2:	mov    eax,0x3f
  4036f7:	jmp    0x403433
  4036fc:	lea    rbp,[rsi+0x1]
  403700:	mov    QWORD PTR [rip+0x959],rbp        # 0x404060
  403707:	cmp    BYTE PTR [rsi+0x1],0x0
  40370b:	je     0x403606
  403711:	mov    ebx,0x2d
  403716:	jmp    0x4035d1
  40371b:	mov    QWORD PTR [rip+0x532a],0x0        # 0x408a50
  403726:	cmp    BYTE PTR [rsi+0x1],0x0
  40372a:	je     0x403757
  40372c:	mov    eax,DWORD PTR [rip+0x93a]        # 0x40406c
  403732:	mov    QWORD PTR [rip+0x5317],rbp        # 0x408a50
  403739:	lea    rcx,[rip+0x1f95]        # 0x4056d5
  403740:	add    eax,0x1
  403743:	mov    DWORD PTR [rip+0x923],eax        # 0x40406c
  403749:	mov    eax,ebx
  40374b:	mov    QWORD PTR [rip+0x90e],rcx        # 0x404060
  403752:	jmp    0x403433
  403757:	cmp    BYTE PTR [rax+0x2],0x3a
  40375b:	mov    eax,DWORD PTR [rip+0x90b]        # 0x40406c
  403761:	je     0x403739
  403763:	add    eax,0x1
  403766:	cmp    edi,eax
  403768:	mov    DWORD PTR [rip+0x8fe],eax        # 0x40406c
  40376e:	jg     0x403802
  403774:	lea    rax,[rip+0x1f5a]        # 0x4056d5
  40377b:	mov    QWORD PTR [rip+0x8de],rax        # 0x404060
  403782:	mov    eax,DWORD PTR [rip+0x8e8]        # 0x404070
  403788:	test   eax,eax
  40378a:	je     0x4037a7
  40378c:	mov    rax,QWORD PTR [rsp+0x90]
  403794:	cmp    BYTE PTR [rax],0x3a
  403797:	je     0x4037a7
  403799:	lea    rcx,[rip+0x2020]        # 0x4057c0
  4037a0:	mov    edx,ebx
  4037a2:	call   0x402cf0
  4037a7:	mov    rax,QWORD PTR [rsp+0x90]
  4037af:	mov    DWORD PTR [rip+0x8b3],ebx        # 0x404068
  4037b5:	cmp    BYTE PTR [rax],0x3a
  4037b8:	jne    0x4036f2
  4037be:	mov    eax,0x3a
  4037c3:	jmp    0x403433
  4037c8:	cdqe   
  4037ca:	mov    rax,QWORD PTR [r15+rax*8]
  4037ce:	mov    QWORD PTR [rip+0x88b],rax        # 0x404060
  4037d5:	mov    r9,QWORD PTR [rsp+0xa0]
  4037dd:	mov    r8,QWORD PTR [rsp+0x98]
  4037e5:	mov    rcx,r15
  4037e8:	mov    rdx,QWORD PTR [rsp+0x90]
  4037f0:	mov    DWORD PTR [rsp+0x20],0x0
  4037f8:	call   0x402d70
  4037fd:	jmp    0x4034fb
  403802:	movsxd rdx,eax
  403805:	mov    rdx,QWORD PTR [r15+rdx*8]
  403809:	mov    QWORD PTR [rip+0x5240],rdx        # 0x408a50
  403810:	jmp    0x403739
  403815:	nop
  403816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403820:	sub    rsp,0x38
  403824:	xor    r9d,r9d
  403827:	mov    DWORD PTR [rsp+0x28],0x0
  40382f:	mov    QWORD PTR [rsp+0x20],0x0
  403838:	call   0x403130
  40383d:	add    rsp,0x38
  403841:	ret    
  403842:	nop    DWORD PTR [rax+0x0]
  403846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403850:	sub    rsp,0x38
  403854:	mov    rax,QWORD PTR [rsp+0x60]
  403859:	mov    DWORD PTR [rsp+0x28],0x1
  403861:	mov    QWORD PTR [rsp+0x20],rax
  403866:	call   0x403130
  40386b:	add    rsp,0x38
  40386f:	ret    
  403870:	sub    rsp,0x38
  403874:	mov    rax,QWORD PTR [rsp+0x60]
  403879:	mov    DWORD PTR [rsp+0x28],0x5
  403881:	mov    QWORD PTR [rsp+0x20],rax
  403886:	call   0x403130
  40388b:	add    rsp,0x38
  40388f:	ret    
  403890:	jmp    QWORD PTR [rip+0x5caa]        # 0x409540
  403896:	nop
  403897:	nop
  403898:	jmp    QWORD PTR [rip+0x5c9a]        # 0x409538
  40389e:	nop
  40389f:	nop
  4038a0:	jmp    QWORD PTR [rip+0x5c8a]        # 0x409530
  4038a6:	nop
  4038a7:	nop
  4038a8:	jmp    QWORD PTR [rip+0x5c7a]        # 0x409528
  4038ae:	nop
  4038af:	nop
  4038b0:	jmp    QWORD PTR [rip+0x5c6a]        # 0x409520
  4038b6:	nop
  4038b7:	nop
  4038b8:	jmp    QWORD PTR [rip+0x5c5a]        # 0x409518
  4038be:	nop
  4038bf:	nop
  4038c0:	jmp    QWORD PTR [rip+0x5c4a]        # 0x409510
  4038c6:	nop
  4038c7:	nop
  4038c8:	jmp    QWORD PTR [rip+0x5c3a]        # 0x409508
  4038ce:	nop
  4038cf:	nop
  4038d0:	jmp    QWORD PTR [rip+0x5c2a]        # 0x409500
  4038d6:	nop
  4038d7:	nop
  4038d8:	jmp    QWORD PTR [rip+0x5c1a]        # 0x4094f8
  4038de:	nop
  4038df:	nop
  4038e0:	jmp    QWORD PTR [rip+0x5c0a]        # 0x4094f0
  4038e6:	nop
  4038e7:	nop
  4038e8:	jmp    QWORD PTR [rip+0x5bfa]        # 0x4094e8
  4038ee:	nop
  4038ef:	nop
  4038f0:	jmp    QWORD PTR [rip+0x5bea]        # 0x4094e0
  4038f6:	nop
  4038f7:	nop
  4038f8:	jmp    QWORD PTR [rip+0x5bda]        # 0x4094d8
  4038fe:	nop
  4038ff:	nop
  403900:	jmp    QWORD PTR [rip+0x5bca]        # 0x4094d0
  403906:	nop
  403907:	nop
  403908:	jmp    QWORD PTR [rip+0x5bba]        # 0x4094c8
  40390e:	nop
  40390f:	nop
  403910:	jmp    QWORD PTR [rip+0x5baa]        # 0x4094c0
  403916:	nop
  403917:	nop
  403918:	jmp    QWORD PTR [rip+0x5b9a]        # 0x4094b8
  40391e:	nop
  40391f:	nop
  403920:	jmp    QWORD PTR [rip+0x5b8a]        # 0x4094b0
  403926:	nop
  403927:	nop
  403928:	jmp    QWORD PTR [rip+0x5b7a]        # 0x4094a8
  40392e:	nop
  40392f:	nop
  403930:	jmp    QWORD PTR [rip+0x5b6a]        # 0x4094a0
  403936:	nop
  403937:	nop
  403938:	jmp    QWORD PTR [rip+0x5b52]        # 0x409490
  40393e:	nop
  40393f:	nop
  403940:	jmp    QWORD PTR [rip+0x5b42]        # 0x409488
  403946:	nop
  403947:	nop
  403948:	jmp    QWORD PTR [rip+0x5b2a]        # 0x409478
  40394e:	nop
  40394f:	nop
  403950:	jmp    QWORD PTR [rip+0x5b1a]        # 0x409470
  403956:	nop
  403957:	nop
  403958:	jmp    QWORD PTR [rip+0x5b0a]        # 0x409468
  40395e:	nop
  40395f:	nop
  403960:	jmp    QWORD PTR [rip+0x5afa]        # 0x409460
  403966:	nop
  403967:	nop
  403968:	jmp    QWORD PTR [rip+0x5ae2]        # 0x409450
  40396e:	nop
  40396f:	nop
  403970:	jmp    QWORD PTR [rip+0x5ad2]        # 0x409448
  403976:	nop
  403977:	nop
  403978:	jmp    QWORD PTR [rip+0x5aba]        # 0x409438
  40397e:	nop
  40397f:	nop
  403980:	mov    rax,QWORD PTR [rip+0x5069]        # 0x4089f0
  403987:	ret    
  403988:	nop    DWORD PTR [rax+rax*1+0x0]
  403990:	mov    rax,rcx
  403993:	xchg   QWORD PTR [rip+0x5056],rax        # 0x4089f0
  40399a:	ret    
  40399b:	nop
  40399c:	nop
  40399d:	nop
  40399e:	nop
  40399f:	nop
  4039a0:	jmp    QWORD PTR [rip+0x5a82]        # 0x409428
  4039a6:	nop
  4039a7:	nop
  4039a8:	jmp    QWORD PTR [rip+0x5a72]        # 0x409420
  4039ae:	nop
  4039af:	nop
  4039b0:	jmp    QWORD PTR [rip+0x5a62]        # 0x409418
  4039b6:	nop
  4039b7:	nop
  4039b8:	jmp    QWORD PTR [rip+0x5a52]        # 0x409410
  4039be:	nop
  4039bf:	nop
  4039c0:	jmp    QWORD PTR [rip+0x5a42]        # 0x409408
  4039c6:	nop
  4039c7:	nop
  4039c8:	jmp    QWORD PTR [rip+0x5a32]        # 0x409400
  4039ce:	nop
  4039cf:	nop
  4039d0:	jmp    QWORD PTR [rip+0x5a22]        # 0x4093f8
  4039d6:	nop
  4039d7:	nop
  4039d8:	jmp    QWORD PTR [rip+0x5a12]        # 0x4093f0
  4039de:	nop
  4039df:	nop
  4039e0:	jmp    QWORD PTR [rip+0x5a02]        # 0x4093e8
  4039e6:	nop
  4039e7:	nop
  4039e8:	jmp    QWORD PTR [rip+0x59f2]        # 0x4093e0
  4039ee:	nop
  4039ef:	nop
  4039f0:	jmp    QWORD PTR [rip+0x59e2]        # 0x4093d8
  4039f6:	nop
  4039f7:	nop
  4039f8:	jmp    QWORD PTR [rip+0x59d2]        # 0x4093d0
  4039fe:	nop
  4039ff:	nop
  403a00:	jmp    QWORD PTR [rip+0x59c2]        # 0x4093c8
  403a06:	nop
  403a07:	nop
  403a08:	jmp    QWORD PTR [rip+0x59b2]        # 0x4093c0
  403a0e:	nop
  403a0f:	nop
  403a10:	jmp    QWORD PTR [rip+0x59a2]        # 0x4093b8
  403a16:	nop
  403a17:	nop
  403a18:	jmp    QWORD PTR [rip+0x5992]        # 0x4093b0
  403a1e:	nop
  403a1f:	nop
  403a20:	jmp    QWORD PTR [rip+0x5982]        # 0x4093a8
  403a26:	nop
  403a27:	nop
  403a28:	jmp    QWORD PTR [rip+0x5972]        # 0x4093a0
  403a2e:	nop
  403a2f:	nop
  403a30:	jmp    QWORD PTR [rip+0x5962]        # 0x409398
  403a36:	nop
  403a37:	nop
  403a38:	jmp    QWORD PTR [rip+0x5952]        # 0x409390
  403a3e:	nop
  403a3f:	nop
  403a40:	jmp    QWORD PTR [rip+0x5942]        # 0x409388
  403a46:	nop
  403a47:	nop
  403a48:	jmp    QWORD PTR [rip+0x5932]        # 0x409380
  403a4e:	nop
  403a4f:	nop
  403a50:	jmp    QWORD PTR [rip+0x5922]        # 0x409378
  403a56:	nop
  403a57:	nop
  403a58:	nop    DWORD PTR [rax+rax*1+0x0]
  403a60:	push   r15
  403a62:	push   r14
  403a64:	push   r13
  403a66:	push   r12
  403a68:	push   rbp
  403a69:	push   rdi
  403a6a:	push   rsi
  403a6b:	push   rbx
  403a6c:	sub    rsp,0x48
  403a70:	lea    rbx,[rip+0x1819]        # 0x405290
  403a77:	xor    r12d,r12d
  403a7a:	xor    r13d,r13d
  403a7d:	xor    r14d,r14d
  403a80:	xor    ebp,ebp
  403a82:	mov    edi,ecx
  403a84:	mov    rsi,rdx
  403a87:	call   0x401850
  403a8c:	lea    r9,[rip+0x18ad]        # 0x405340
  403a93:	lea    r8,[rip+0x17a8]        # 0x405242
  403a9a:	mov    QWORD PTR [rsp+0x20],0x0
  403aa3:	mov    rdx,rsi
  403aa6:	mov    ecx,edi
  403aa8:	call   0x403850
  403aad:	cmp    eax,0xffffffff
  403ab0:	je     0x403b3c
  403ab6:	lea    r9d,[rax-0x56]
  403aba:	cmp    r9d,0x20
  403abe:	ja     0x403b2f
  403ac0:	movsxd rax,DWORD PTR [rbx+r9*4]
  403ac4:	add    rax,rbx
  403ac7:	jmp    rax
  403ac9:	mov    ebp,0x1
  403ace:	jmp    0x403a8c
  403ad0:	mov    r14d,0x1
  403ad6:	jmp    0x403a8c
  403ad8:	mov    rcx,QWORD PTR [rsi]
  403adb:	xor    edx,edx
  403add:	call   0x401530
  403ae2:	mov    rax,QWORD PTR [rip+0x1f07]        # 0x4059f0
  403ae9:	mov    rcx,QWORD PTR [rax]
  403aec:	call   0x403890
  403af1:	mov    r12,rax
  403af4:	jmp    0x403a8c
  403af6:	mov    r13d,0x1
  403afc:	jmp    0x403a8c
  403afe:	call   QWORD PTR [rip+0x595c]        # 0x409460
  403b04:	lea    rdx,[rip+0x171a]        # 0x405225
  403b0b:	lea    rcx,[rax+0x60]
  403b0f:	mov    DWORD PTR [rsp+0x20],0x1
  403b17:	mov    r9d,0xc
  403b1d:	mov    r8d,0x2
  403b23:	call   0x4038f8
  403b28:	xor    ecx,ecx
  403b2a:	call   0x403900
  403b2f:	mov    rcx,QWORD PTR [rsi]
  403b32:	mov    edx,0x1
  403b37:	call   0x401530
  403b3c:	mov    rax,QWORD PTR [rip+0x1ebd]        # 0x405a00
  403b43:	movsxd rax,DWORD PTR [rax]
  403b46:	lea    rbx,[rsi+rax*8]
  403b4a:	mov    rcx,QWORD PTR [rbx]
  403b4d:	test   rcx,rcx
  403b50:	je     0x403c95
  403b56:	call   0x401688
  403b5b:	test   rax,rax
  403b5e:	mov    rdi,rax
  403b61:	je     0x403d54
  403b67:	xor    esi,esi
  403b69:	jmp    0x403b84
  403b6b:	test   rsi,rsi
  403b6e:	je     0x403cda
  403b74:	mov    rdx,QWORD PTR [rbx+0x8]
  403b78:	mov    rcx,rsi
  403b7b:	add    rbx,0x8
  403b7f:	call   0x401680
  403b84:	cmp    QWORD PTR [rbx+0x8],0x0
  403b89:	jne    0x403b6b
  403b8b:	xor    r8d,r8d
  403b8e:	mov    rdx,rdi
  403b91:	xor    ecx,ecx
  403b93:	call   0x4016d8
  403b98:	mov    rcx,rdi
  403b9b:	call   0x4016d0
  403ba0:	call   0x4016a8
  403ba5:	or     r14d,r13d
  403ba8:	mov    r15,rax
  403bab:	je     0x403ce7
  403bb1:	lea    rax,[rsp+0x3c]
  403bb6:	mov    r8d,r13d
  403bb9:	xor    r9d,r9d
  403bbc:	xor    r8d,0x1
  403bc0:	xor    ecx,ecx
  403bc2:	mov    rdx,rdi
  403bc5:	mov    QWORD PTR [rsp+0x20],rax
  403bca:	call   0x401690
  403bcf:	test   rax,rax
  403bd2:	mov    r13,rax
  403bd5:	je     0x403d0f
  403bdb:	xor    ebx,ebx
  403bdd:	cmp    DWORD PTR [rax],0x0
  403be0:	jne    0x403c0d
  403be2:	jmp    0x403d0f
  403be7:	mov    rax,QWORD PTR [r13+0x8]
  403beb:	xor    ecx,ecx
  403bed:	mov    rdx,rdi
  403bf0:	mov    r8,QWORD PTR [rax+rbx*8]
  403bf4:	call   0x4016b8
  403bf9:	test   rax,rax
  403bfc:	je     0x403c09
  403bfe:	mov    rdx,rax
  403c01:	mov    rcx,r15
  403c04:	call   0x4016b0
  403c09:	add    rbx,0x1
  403c0d:	cmp    DWORD PTR [r13+0x0],ebx
  403c11:	jg     0x403be7
  403c13:	mov    rcx,r13
  403c16:	call   0x401698
  403c1b:	mov    rcx,rdi
  403c1e:	call   0x401660
  403c23:	test   r12,r12
  403c26:	je     0x403d3a
  403c2c:	test   r15,r15
  403c2f:	je     0x403cc4
  403c35:	xor    ebx,ebx
  403c37:	jmp    0x403c4d
  403c39:	mov    rcx,rax
  403c3c:	call   0x401648
  403c41:	mov    rcx,rdi
  403c44:	add    rbx,0x1
  403c48:	call   0x401660
  403c4d:	cmp    DWORD PTR [r15],ebx
  403c50:	jle    0x403cbc
  403c52:	mov    rax,QWORD PTR [r15+0x8]
  403c56:	mov    rdx,rsi
  403c59:	mov    rcx,QWORD PTR [rax+rbx*8]
  403c5d:	call   0x401658
  403c62:	test   ebp,ebp
  403c64:	mov    rdi,rax
  403c67:	jne    0x403c39
  403c69:	mov    rdx,r12
  403c6c:	mov    rcx,rax
  403c6f:	call   0x401650
  403c74:	test   rax,rax
  403c77:	mov    r13,rax
  403c7a:	je     0x403c41
  403c7c:	lea    rcx,[rip+0x1607]        # 0x40528a
  403c83:	mov    rdx,rax
  403c86:	call   0x4038c0
  403c8b:	mov    rcx,r13
  403c8e:	call   0x401640
  403c93:	jmp    0x403c41
  403c95:	call   0x401668
  403c9a:	mov    rdi,rax
  403c9d:	mov    eax,0x1
  403ca2:	test   rdi,rdi
  403ca5:	jne    0x403d94
  403cab:	add    rsp,0x48
  403caf:	pop    rbx
  403cb0:	pop    rsi
  403cb1:	pop    rdi
  403cb2:	pop    rbp
  403cb3:	pop    r12
  403cb5:	pop    r13
  403cb7:	pop    r14
  403cb9:	pop    r15
  403cbb:	ret    
  403cbc:	mov    rcx,r15
  403cbf:	call   0x4016a0
  403cc4:	test   rsi,rsi
  403cc7:	je     0x403cd1
  403cc9:	mov    rcx,rsi
  403ccc:	call   0x401670
  403cd1:	call   0x4016c8
  403cd6:	xor    eax,eax
  403cd8:	jmp    0x403cab
  403cda:	call   0x401678
  403cdf:	mov    rsi,rax
  403ce2:	jmp    0x403b74
  403ce7:	lea    r8,[rsp+0x3c]
  403cec:	xor    ecx,ecx
  403cee:	mov    rdx,rdi
  403cf1:	call   0x4016c0
  403cf6:	test   rax,rax
  403cf9:	je     0x403c1b
  403cff:	mov    rdx,rax
  403d02:	mov    rcx,r15
  403d05:	call   0x4016b0
  403d0a:	jmp    0x403c1b
  403d0f:	call   QWORD PTR [rip+0x574b]        # 0x409460
  403d15:	lea    rcx,[rip+0x154c]        # 0x405268
  403d1c:	lea    r9,[rax+0x60]
  403d20:	mov    r8d,0x21
  403d26:	mov    edx,0x1
  403d2b:	call   0x4038e0
  403d30:	mov    eax,0x1
  403d35:	jmp    0x403cab
  403d3a:	test   rsi,rsi
  403d3d:	je     0x403d7f
  403d3f:	test   r15,r15
  403d42:	lea    r12,[rip+0x14c2]        # 0x40520b
  403d49:	jne    0x403c35
  403d4f:	jmp    0x403cc9
  403d54:	call   QWORD PTR [rip+0x5706]        # 0x409460
  403d5a:	lea    rcx,[rip+0x14e9]        # 0x40524a
  403d61:	lea    r9,[rax+0x60]
  403d65:	mov    r8d,0x1c
  403d6b:	mov    edx,0x1
  403d70:	call   0x4038e0
  403d75:	mov    eax,0x1
  403d7a:	jmp    0x403cab
  403d7f:	test   r15,r15
  403d82:	lea    r12,[rip+0x148f]        # 0x405218
  403d89:	jne    0x403c35
  403d8f:	jmp    0x403cd1
  403d94:	xor    esi,esi
  403d96:	jmp    0x403b8b
  403d9b:	nop
  403d9c:	nop
  403d9d:	nop
  403d9e:	nop
  403d9f:	nop
  403da0:	(bad)  
  403da1:	(bad)  
  403da2:	(bad)  
  403da3:	(bad)  
  403da4:	(bad)  
  403da5:	(bad)  
  403da6:	(bad)  
  403da7:	inc    DWORD PTR [rax]
  403da9:	add    BYTE PTR [rax],al
  403dab:	add    BYTE PTR [rax],al
  403dad:	add    BYTE PTR [rax],al
  403daf:	add    bh,bh
  403db1:	(bad)  
  403db2:	(bad)  
  403db3:	(bad)  
  403db4:	(bad)  
  403db5:	(bad)  
  403db6:	(bad)  
  403db7:	inc    DWORD PTR [rax]
  403db9:	add    BYTE PTR [rax],al
  403dbb:	add    BYTE PTR [rax],al
  403dbd:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404000 <.data>:
  404000:	or     al,BYTE PTR [rax]
	...
  40400e:	add    BYTE PTR [rax],al
  404010:	mov    eax,0x403d
	...
  40401d:	add    BYTE PTR [rax],al
  40401f:	add    bh,bh
  404021:	(bad)  
  404022:	(bad)  
  404023:	(bad)  
  404024:	(bad)  
  404025:	(bad)  
  404026:	(bad)  
  404027:	inc    DWORD PTR [rax]
  404029:	add    BYTE PTR [rax],al
  40402b:	add    BYTE PTR [rax],al
  40402d:	add    BYTE PTR [rax],al
  40402f:	add    bh,bh
	...
  40403d:	add    BYTE PTR [rax],al
  40403f:	add    BYTE PTR [rdx],al
	...
  40404d:	add    BYTE PTR [rax],al
  40404f:	add    bh,bh
  404051:	(bad)  
  404052:	(bad)  
  404053:	(bad)  
  404054:	(bad)  
  404055:	(bad)  
  404056:	(bad)  
  404057:	(bad)  
  404058:	(bad)  
  404059:	(bad)  
  40405a:	(bad)  
  40405b:	inc    DWORD PTR [rax]
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    ch,dl
  404061:	push   rsi
  404062:	add    BYTE PTR [rax],al
  404065:	add    BYTE PTR [rax],al
  404067:	add    BYTE PTR [rdi],bh
  404069:	add    BYTE PTR [rax],al
  40406b:	add    BYTE PTR [rcx],al
  40406d:	add    BYTE PTR [rax],al
  40406f:	add    BYTE PTR [rcx],al
	...
  40407d:	add    BYTE PTR [rax],al
  40407f:	add    bh,bh
  404081:	(bad)  
  404082:	(bad)  
  404083:	inc    DWORD PTR [rax]
	...
  40408d:	add    BYTE PTR [rax],al
  40408f:	add    BYTE PTR [rax+0x4039],al
  404095:	add    BYTE PTR [rax],al
  404097:	add    BYTE PTR [rax+0x4039],dl
  40409d:	add    BYTE PTR [rax],al
  40409f:	add    BYTE PTR [rdx],dh
  4040a1:	movabs ds:0x2b992ddf,al
  4040aa:	add    BYTE PTR [rax],al
  4040ac:	add    BYTE PTR [rax],al
  4040ae:	add    BYTE PTR [rax],al
  4040b0:	int    0x5d
  4040b2:	and    dl,dl
  4040b4:	data16 (bad) 
  4040b6:	(bad)  
  4040b7:	inc    DWORD PTR [rax]
  4040b9:	add    BYTE PTR [rax],al
  4040bb:	add    BYTE PTR [rax],al
  4040bd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	jne    0x405075
  405002:	(bad)  
  405003:	cmp    ah,BYTE PTR gs:[eax]
  405007:	and    eax,0x2d5b2073
  40500c:	jae    0x40506f
  40500e:	jbe    0x405066
  405010:	push   0x2d5b205d
  405015:	data16 and BYTE PTR [rsi+0x4f],al
  405019:	push   rdx
  40501a:	rex.WRB
  40501b:	push   r12
  40501d:	pop    rbp
  40501e:	and    BYTE PTR [rbx+0x2d],bl
  405021:	sub    eax,0x74726f73
  405026:	pop    rbp
  405027:	and    BYTE PTR [rbx+0x2d],bl
  40502a:	sub    eax,0x5d6c6c61
  40502f:	and    BYTE PTR [rbx+0x2d],bl
  405032:	sub    eax,0x62726576
  405037:	outs   dx,DWORD PTR ds:[rsi]
  405038:	jae    0x40509f
  40503a:	pop    rbp
  40503b:	and    BYTE PTR [rbx+0x2d],bl
  40503e:	sub    eax,0x6d726f66
  405043:	(bad)  
  405044:	je     0x405083
  405046:	rex.RX
  405047:	rex.WRXB push r10
  405049:	rex.WRB
  40504a:	push   r12
  40504c:	pop    rbp
  40504d:	and    BYTE PTR [rbx+0x2d],bl
  405050:	sub    eax,0x73726576
  405055:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d5b205d
  40505c:	sub    eax,0x706c6568
  405061:	pop    rbp
  405062:	and    BYTE PTR [rbx+0x70],bl
  405065:	(bad)  
  405066:	je     0x4050dc
  405068:	gs jb  0x4050d9
  40506b:	pop    rbp
  40506c:	and    BYTE PTR [rbx+0x65],bh
  40506f:	ins    BYTE PTR es:[rdi],dx
  405070:	gs ins DWORD PTR es:[rdi],dx
  405072:	outs   dx,BYTE PTR gs:[rsi]
  405074:	je     0x4050a4
  405076:	cs cs jge 0x405084
  40507a:	add    BYTE PTR [rax],al
  40507c:	add    BYTE PTR [rax],al
  40507e:	add    BYTE PTR [rax],al
  405080:	imul   r14,QWORD PTR [rbx+0x74],0x73656220
  405088:	je     0x4050aa
  40508a:	outs   dx,WORD PTR ds:[rsi]
  40508c:	outs   dx,BYTE PTR ds:[rsi]
  40508d:	je     0x4050af
  40508f:	ins    DWORD PTR es:[rdi],dx
  405090:	(bad)  
  405091:	je     0x4050f6
  405093:	push   0x20676e69
  405098:	pop    rbx
  405099:	jo     0x4050fc
  40509b:	je     0x405111
  40509d:	gs jb  0x40510e
  4050a0:	pop    rbp
  4050a1:	or     al,BYTE PTR [rax]
  4050a3:	add    BYTE PTR [rax],al
  4050a5:	add    BYTE PTR [rax],al
  4050a7:	add    BYTE PTR [rax],ah
  4050a9:	and    BYTE PTR [rip+0x2d202c73],ch        # 0x2d607d22
  4050af:	sub    eax,0x74726f73
  4050b4:	and    BYTE PTR [rax],ah
  4050b6:	and    BYTE PTR [rax],ah
  4050b8:	and    BYTE PTR [rax],ah
  4050ba:	and    BYTE PTR [rax],ah
  4050bc:	and    BYTE PTR [rax],ah
  4050be:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  4050c2:	jo     0x405130
  4050c4:	(bad)  
  4050c5:	jns    0x4050e7
  4050c7:	jae    0x405138
  4050c9:	jb     0x40513f
  4050cb:	gs and BYTE PTR fs:[rcx+rbp*2+0x73],ch
  4050d1:	je     0x4050f3
  4050d3:	outs   dx,DWORD PTR ds:[rsi]
  4050d4:	data16 and BYTE PTR [rbp+0x61],ch
  4050d8:	je     0x40513d
  4050da:	push   0xa7365
  4050df:	add    BYTE PTR [rax],ah
  4050e1:	and    BYTE PTR [rip+0x2d202c61],ch        # 0x2d607d48
  4050e7:	sub    eax,0x206c6c61
  4050ec:	and    BYTE PTR [rax],ah
  4050ee:	and    BYTE PTR [rax],ah
  4050f0:	and    BYTE PTR [rax],ah
  4050f2:	and    BYTE PTR [rax],ah
  4050f4:	and    BYTE PTR [rax],ah
  4050f6:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  4050fa:	jo     0x405168
  4050fc:	(bad)  
  4050fd:	jns    0x40511f
  4050ff:	jne    0x40516f
  405101:	jo     0x405175
  405103:	jne    0x405173
  405105:	gs and BYTE PTR fs:[rbx+0x6f],dh
  40510a:	jb     0x405180
  40510c:	gs and BYTE PTR fs:[rcx+rbp*2+0x73],ch
  405112:	je     0x405134
  405114:	outs   dx,DWORD PTR ds:[rsi]
  405115:	data16 and BYTE PTR [rbp+0x61],ch
  405119:	je     0x40517e
  40511b:	push   0xa7365
  405120:	and    BYTE PTR [rax],ah
  405122:	sub    eax,0x2d202c76
  405127:	sub    eax,0x62726576
  40512c:	outs   dx,DWORD PTR ds:[rsi]
  40512d:	jae    0x405194
  40512f:	and    BYTE PTR [rax],ah
  405131:	and    BYTE PTR [rax],ah
  405133:	and    BYTE PTR [rax],ah
  405135:	and    BYTE PTR [rax],ah
  405137:	imul   esi,DWORD PTR fs:[rbx+0x70],0x2079616c
  40513f:	outs   dx,BYTE PTR gs:[rsi]
  405141:	je     0x4051ac
  405143:	jb     0x4051aa
  405145:	and    BYTE PTR [rsi+0x6f],ah
  405148:	outs   dx,BYTE PTR ds:[rsi]
  405149:	je     0x40516b
  40514b:	jo     0x4051ae
  40514d:	je     0x4051c3
  40514f:	gs jb  0x4051c0
  405152:	and    BYTE PTR [rsi+0x65],dh
  405155:	jb     0x4051b9
  405157:	outs   dx,DWORD PTR ds:[rsi]
  405158:	jae    0x4051bf
  40515a:	ins    BYTE PTR es:[rdi],dx
  40515b:	jns    0x405167
  40515d:	add    BYTE PTR [rax],al
  40515f:	add    BYTE PTR [rax],ah
  405161:	and    BYTE PTR [rip+0x2d202c66],ch        # 0x2d607dcd
  405167:	sub    eax,0x6d726f66
  40516c:	(bad)  
  40516d:	je     0x4051ac
  40516f:	rex.RX
  405170:	rex.WRXB push r10
  405172:	rex.WRB
  405173:	push   r12
  405175:	and    BYTE PTR [rax],ah
  405177:	jne    0x4051ec
  405179:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  40517e:	and    BYTE PTR [rdi+0x69],ah
  405181:	jbe    0x4051e8
  405183:	outs   dx,BYTE PTR ds:[rsi]
  405184:	and    BYTE PTR [rdi+0x75],ch
  405187:	je     0x4051f9
  405189:	jne    0x4051ff
  40518b:	and    BYTE PTR [rsi+0x6f],ah
  40518e:	jb     0x4051fd
  405190:	(bad)  
  405191:	je     0x40519d
  405193:	add    BYTE PTR [rax],al
  405195:	add    BYTE PTR [rax],al
  405197:	add    BYTE PTR [rax],ah
  405199:	and    BYTE PTR [rip+0x2d202c56],ch        # 0x2d607df5
  40519f:	sub    eax,0x73726576
  4051a4:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202020
  4051ab:	and    BYTE PTR [rax],ah
  4051ad:	and    BYTE PTR [rax],ah
  4051af:	imul   esi,DWORD PTR fs:[rbx+0x70],0x2079616c
  4051b7:	outs   dx,WORD PTR ds:[rsi]
  4051b9:	outs   dx,BYTE PTR ds:[rsi]
  4051ba:	je     0x4051dc
  4051bc:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4051bf:	imul   sp,WORD PTR [rdi+0x20],0x6576
  4051c5:	jb     0x40523a
  4051c7:	imul   ebp,DWORD PTR [rdi+0x6e],0x646e6120
  4051ce:	and    BYTE PTR [rbp+0x78],ah
  4051d1:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x20000000
  4051d9:	and    BYTE PTR [rip+0x2d202c68],ch        # 0x2d607e47
  4051df:	sub    eax,0x706c6568
  4051e4:	and    BYTE PTR [rax],ah
  4051e6:	and    BYTE PTR [rax],ah
  4051e8:	and    BYTE PTR [rax],ah
  4051ea:	and    BYTE PTR [rax],ah
  4051ec:	and    BYTE PTR [rax],ah
  4051ee:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  4051f2:	jo     0x405260
  4051f4:	(bad)  
  4051f5:	jns    0x405217
  4051f7:	je     0x405261
  4051f9:	imul   esi,DWORD PTR [rbx+0x20],0x706c6568
  405200:	and    BYTE PTR [rcx+0x6e],ah
  405203:	and    BYTE PTR fs:[rbp+0x78],ah
  405207:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x753d7b25
  40520f:	outs   dx,BYTE PTR ds:[rsi]
  405210:	jo     0x405273
  405212:	jb     0x405287
  405214:	gs jge 0x405221
  405217:	add    BYTE PTR [rip+0x63663d7b],ah        # 0x63a68f98
  40521d:	ins    DWORD PTR es:[rdi],dx
  40521e:	(bad)  
  40521f:	je     0x405284
  405221:	push   0x66000a7d
  405226:	outs   dx,DWORD PTR ds:[rsi]
  405227:	outs   dx,BYTE PTR ds:[rsi]
  405228:	je     0x40528d
  40522a:	outs   dx,DWORD PTR ds:[rsi]
  40522b:	outs   dx,BYTE PTR ds:[rsi]
  40522c:	imul   sp,WORD PTR [rdi+0x20],0x6576
  405232:	jb     0x4052a7
  405234:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  40523b:	and    eax,0x64252e64
  405240:	or     al,BYTE PTR [rax]
  405242:	(bad)  
  405243:	jae    0x4052bb
  405245:	data16 cmp dl,BYTE PTR [rsi+0x68]
  405249:	add    BYTE PTR [rbp+0x6e],dl
  40524c:	(bad)  
  40524d:	(bad)  
  40524e:	ins    BYTE PTR es:[rdi],dx
  40524f:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  405254:	jo     0x4052b7
  405256:	jb     0x4052cb
  405258:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  40525d:	and    BYTE PTR [rax+0x61],dh
  405260:	je     0x4052d6
  405262:	gs jb  0x4052d3
  405265:	or     al,BYTE PTR [rax]
  405267:	add    BYTE PTR [rsi+0x6f],cl
  40526a:	and    BYTE PTR [rsi+0x6f],ah
  40526d:	outs   dx,BYTE PTR ds:[rsi]
  40526e:	je     0x4052e3
  405270:	and    BYTE PTR [rcx+0x6e],ch
  405273:	jae    0x4052e9
  405275:	(bad)  
  405276:	ins    BYTE PTR es:[rdi],dx
  405277:	ins    BYTE PTR es:[rdi],dx
  405278:	gs and BYTE PTR fs:[rdi+0x6e],ch
  40527d:	and    BYTE PTR [rax+rbp*2+0x65],dh
  405281:	and    BYTE PTR [rbx+0x79],dh
  405284:	jae    0x4052fa
  405286:	gs ins DWORD PTR es:[rdi],dx
  405288:	or     al,BYTE PTR [rax]
  40528a:	and    eax,0x73
  40528f:	add    BYTE PTR [rsi-0x18],ch
  405292:	(bad)  
  405293:	call   FWORD PTR [rdi-0x60000018]
  405299:	call   0xffffffffe8e0529d
  40529e:	(bad)  
  40529f:	call   FWORD PTR [rdi-0x60000018]
  4052a5:	call   0xffffffffe8e052a9
  4052aa:	(bad)  
  4052ab:	call   FWORD PTR [rdi-0x60000018]
  4052b1:	call   0xffffffffe8e052b5
  4052b6:	(bad)  
  4052b7:	call   FWORD PTR [rdi+0x66ffffe8]
  4052bd:	call   0xffffffffe8e052c1
  4052c2:	(bad)  
  4052c3:	call   FWORD PTR [rdi-0x60000018]
  4052c9:	call   0xffffffffe8e052cd
  4052ce:	(bad)  
  4052cf:	call   QWORD PTR [rdx-0x18]
  4052d2:	(bad)  
  4052d3:	call   FWORD PTR [rdi+0x48ffffe8]
  4052d9:	call   0xffffffffe8e052dd
  4052de:	(bad)  
  4052df:	call   FWORD PTR [rdi-0x60000018]
  4052e5:	call   0xffffffffe8e052e9
  4052ea:	(bad)  
  4052eb:	call   FWORD PTR [rdi-0x60000018]
  4052f1:	call   0xffffffffe8e052f5
  4052f6:	(bad)  
  4052f7:	call   FWORD PTR [rdi-0x60000018]
  4052fd:	call   0xffffffffe8e05301
  405302:	(bad)  
  405303:	inc    DWORD PTR [rax-0x18]
  405306:	(bad)  
  405307:	call   FWORD PTR [rdi-0x60000018]
  40530d:	call   0xffffffffe87a5311
  405312:	(bad)  
  405313:	push   QWORD PTR [rbx+0x6f]
  405316:	jb     0x40538c
  405318:	add    BYTE PTR [rcx+0x6c],ah
  40531b:	ins    BYTE PTR es:[rdi],dx
  40531c:	add    BYTE PTR [rsi+0x65],dh
  40531f:	jb     0x405383
  405321:	outs   dx,DWORD PTR ds:[rsi]
  405322:	jae    0x405389
  405324:	add    BYTE PTR [rsi+0x6f],ah
  405327:	jb     0x405396
  405329:	(bad)  
  40532a:	je     0x40532c
  40532c:	jbe    0x405393
  40532e:	jb     0x4053a3
  405330:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c656800
  405337:	jo     0x405339
  405339:	add    BYTE PTR [rax],al
  40533b:	add    BYTE PTR [rax],al
  40533d:	add    BYTE PTR [rax],al
  40533f:	add    BYTE PTR [rbx+rdx*2],dl
  405342:	add    BYTE PTR [rax],al
	...
  405355:	add    BYTE PTR [rax],al
  405357:	add    BYTE PTR [rbx+0x0],dh
  40535a:	add    BYTE PTR [rax],al
  40535c:	add    BYTE PTR [rax],al
  40535e:	add    BYTE PTR [rax],al
  405360:	sbb    DWORD PTR [rbx+0x40],edx
	...
  405377:	add    BYTE PTR [rcx+0x0],ah
  40537a:	add    BYTE PTR [rax],al
  40537c:	add    BYTE PTR [rax],al
  40537e:	add    BYTE PTR [rax],al
  405380:	sbb    eax,0x4053
	...
  405395:	add    BYTE PTR [rax],al
  405397:	add    BYTE PTR [rsi+0x0],dh
  40539a:	add    BYTE PTR [rax],al
  40539c:	add    BYTE PTR [rax],al
  40539e:	add    BYTE PTR [rax],al
  4053a0:	and    eax,0x4053
  4053a5:	add    BYTE PTR [rax],al
  4053a7:	add    BYTE PTR [rcx],al
	...
  4053b5:	add    BYTE PTR [rax],al
  4053b7:	add    BYTE PTR [rsi+0x0],ah
  4053ba:	add    BYTE PTR [rax],al
  4053bc:	add    BYTE PTR [rax],al
  4053be:	add    BYTE PTR [rax],al
  4053c0:	sub    al,0x53
  4053c2:	add    BYTE PTR [rax],al
	...
  4053d5:	add    BYTE PTR [rax],al
  4053d7:	add    BYTE PTR [rsi+0x0],dl
  4053da:	add    BYTE PTR [rax],al
  4053dc:	add    BYTE PTR [rax],al
  4053de:	add    BYTE PTR [rax],al
  4053e0:	xor    al,0x53
  4053e2:	add    BYTE PTR [rax],al
	...
  4053f5:	add    BYTE PTR [rax],al
  4053f7:	add    BYTE PTR [rax+0x0],ch
	...
  40543e:	add    BYTE PTR [rax],al
  405440:	add    BYTE PTR [rbp+0x40],0x0
  405447:	add    BYTE PTR [rax+0x4080],al
  40544d:	add    BYTE PTR [rax],al
  40544f:	add    BYTE PTR [rax+0x401a],ah
	...
  40545d:	add    BYTE PTR [rax],al
  40545f:	add    BYTE PTR [rcx+0x72],al
  405462:	addr32 jne 0x4054d2
  405465:	outs   dx,BYTE PTR gs:[rsi]
  405467:	je     0x405489
  405469:	outs   dx,DWORD PTR fs:[rsi]
  40546b:	ins    DWORD PTR es:[rdi],dx
  40546c:	(bad)  
  40546d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  405474:	jb     0x405496
  405476:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40547a:	rex.B
  40547b:	rex.WB
  40547c:	rex.WRX sub QWORD PTR [rax],r8
  40547f:	rex.B jb 0x4054e9
  405482:	jne    0x4054f1
  405484:	outs   dx,BYTE PTR gs:[rsi]
  405486:	je     0x4054a8
  405488:	jae    0x4054f3
  40548a:	outs   dx,BYTE PTR ds:[rsi]
  40548b:	addr32 jne 0x4054fa
  40548e:	(bad)  
  40548f:	jb     0x4054fa
  405491:	je     0x40550c
  405493:	and    BYTE PTR [rax],ch
  405495:	push   rbx
  405496:	rex.WB
  405497:	rex.RXB
  405498:	rex.WRX sub QWORD PTR [rax],r8
  40549b:	add    BYTE PTR [rax],al
  40549d:	add    BYTE PTR [rax],al
  40549f:	add    BYTE PTR [rdi+0x76],cl
  4054a2:	gs jb  0x40550b
  4054a5:	ins    BYTE PTR es:[rdi],dx
  4054a6:	outs   dx,DWORD PTR ds:[rsi]
  4054a7:	ja     0x4054c9
  4054a9:	jb     0x40550c
  4054ab:	outs   dx,BYTE PTR ds:[rsi]
  4054ac:	and    BYTE PTR gs:[ebp+0x72],ah
  4054b1:	jb     0x405522
  4054b3:	jb     0x4054d5
  4054b5:	sub    BYTE PTR [rdi+0x56],cl
  4054b8:	rex.RB push r10
  4054ba:	rex.RX
  4054bb:	rex.WR
  4054bc:	rex.WRXB push r15
  4054be:	sub    DWORD PTR [rax],eax
  4054c0:	push   rax
  4054c1:	(bad)  
  4054c2:	jb     0x405538
  4054c4:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  4054cb:	jae    0x4054ed
  4054cd:	outs   dx,DWORD PTR ds:[rsi]
  4054ce:	data16 and BYTE PTR [rbx+0x69],dh
  4054d2:	outs   dx,BYTE PTR ds:[esi]
  4054d4:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  4054db:	and    BYTE PTR gs:[rax],ch
  4054de:	push   rax
  4054df:	rex.WR
  4054e0:	rex.WRXB push r11
  4054e2:	push   rbx
  4054e3:	sub    DWORD PTR [rax],eax
  4054e5:	add    BYTE PTR [rax],al
  4054e7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  4054eb:	(bad)  
  4054ec:	ins    BYTE PTR es:[rdi],dx
  4054ed:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  4054f1:	jae    0x405513
  4054f3:	outs   dx,DWORD PTR ds:[rsi]
  4054f4:	data16 and BYTE PTR [rbx+0x69],dh
  4054f8:	outs   dx,BYTE PTR ds:[esi]
  4054fa:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  405501:	and    BYTE PTR gs:[rax],ch
  405504:	push   rsp
  405505:	rex.WR
  405506:	rex.WRXB push r11
  405508:	push   rbx
  405509:	sub    DWORD PTR [rax],eax
  40550b:	add    BYTE PTR [rax],al
  40550d:	add    BYTE PTR [rax],al
  40550f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  405513:	and    BYTE PTR [rdx+0x65],dh
  405516:	jae    0x40558d
  405518:	ins    BYTE PTR es:[rdi],dx
  405519:	je     0x40553b
  40551b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  405522:	jae    0x405591
  405524:	(bad)  
  405525:	ins    BYTE PTR es:[rdi],dx
  405526:	ins    BYTE PTR es:[rdi],dx
  405527:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40552b:	(bad)  
  40552c:	and    BYTE PTR gs:[rdx+0x65],dh
  405530:	jo     0x4055a4
  405532:	gs jae 0x40559a
  405535:	outs   dx,BYTE PTR ds:[rsi]
  405536:	je     0x40559d
  405538:	and    BYTE PTR fs:[rax],ch
  40553b:	push   rbp
  40553c:	rex.WRX
  40553d:	rex.R
  40553e:	rex.RB push r10
  405540:	rex.RX
  405541:	rex.WR
  405542:	rex.WRXB push r15
  405544:	sub    DWORD PTR [rax],eax
  405546:	push   rbp
  405547:	outs   dx,BYTE PTR ds:[rsi]
  405548:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40554c:	outs   dx,BYTE PTR ds:[rsi]
  40554d:	and    BYTE PTR [rbp+0x72],ah
  405550:	jb     0x4055c1
  405552:	jb     0x405554
  405554:	add    BYTE PTR [rax],al
  405556:	add    BYTE PTR [rax],al
  405558:	pop    rdi
  405559:	ins    DWORD PTR es:[rdi],dx
  40555a:	(bad)  
  40555b:	je     0x4055c5
  40555d:	gs jb  0x4055d2
  405560:	sub    BYTE PTR [rcx],ch
  405562:	cmp    ah,BYTE PTR [rax]
  405564:	and    eax,0x6e692073
  405569:	and    BYTE PTR [rip+0x67252873],ah        # 0x67657de2
  40556f:	sub    al,0x20
  405571:	and    eax,0x20202967
  405576:	sub    BYTE PTR [rdx+0x65],dh
  405579:	je     0x4055f1
  40557b:	(bad)  
  40557c:	ins    BYTE PTR es:[rdi],dx
  40557d:	cmp    eax,0xa296725
  405582:	add    BYTE PTR [rax],al
  405584:	in     al,dx
  405585:	(bad)  
  405586:	(bad)  
  405587:	jmp    FWORD PTR [rip+0xffffffff9cffffc6]        # 0xffffffff9d405553
  40558d:	(bad)  
  40558e:	(bad)  
  40558f:	jmp    FWORD PTR [rsi+rax*8-0x39430001]
  405596:	(bad)  
  405597:	dec    esp
  405599:	(bad)  
  40559a:	(bad)  
  40559b:	(bad)  
  40559c:	fadd   st(6),st
  40559e:	(bad)  
  40559f:	dec    DWORD PTR [rbp+0x69]
  4055a2:	outs   dx,BYTE PTR ds:[rsi]
  4055a3:	addr32 ja 0x4055d3
  4055a6:	ja     0x4055de
  4055a8:	xor    al,0x20
  4055aa:	jb     0x405621
  4055ac:	outs   dx,BYTE PTR ds:[rsi]
  4055ad:	je     0x405618
  4055af:	ins    DWORD PTR es:[rdi],dx
  4055b0:	and    BYTE PTR gs:[rsi+0x61],ah
  4055b4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  4055bc:	add    BYTE PTR [rax],al
  4055be:	add    BYTE PTR [rax],al
  4055c0:	rex.B
  4055c1:	fs fs jb 0x40562a
  4055c5:	jae    0x40563a
  4055c7:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8763d
  4055cd:	jae    0x4055ef
  4055cf:	outs   dx,BYTE PTR ds:[rsi]
  4055d0:	outs   dx,DWORD PTR ds:[rsi]
  4055d1:	and    BYTE PTR [rcx+0x6d],ch
  4055d4:	(bad)  
  4055d5:	addr32 gs sub eax,0x74636573
  4055dc:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  4055e3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4055ea:	jne    0x405651
  4055ec:	jb     0x405667
  4055ee:	and    BYTE PTR [rsi+0x61],ah
  4055f1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  4055f9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a27663
  4055ff:	je     0x405666
  405601:	jae    0x405623
  405603:	(bad)  
  405604:	je     0x405626
  405606:	(bad)  
  405607:	fs fs jb 0x405670
  40560b:	jae    0x405680
  40560d:	and    BYTE PTR [rip+0x70],ah        # 0x405683
  405613:	add    BYTE PTR [rax],al
  405615:	add    BYTE PTR [rax],al
  405617:	add    BYTE PTR [rax],ah
  405619:	and    BYTE PTR [rsi+0x69],dl
  40561c:	jb     0x405692
  40561e:	jne    0x405681
  405620:	ins    BYTE PTR es:[rdi],dx
  405621:	push   rax
  405622:	jb     0x405693
  405624:	je     0x40568b
  405626:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40562a:	(bad)  
  40562b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  405633:	push   0x646f6320
  405638:	and    BYTE PTR gs:[rax],dh
  40563b:	js     0x405662
  40563d:	js     0x40563f
  40563f:	add    BYTE PTR [rax],ah
  405641:	and    BYTE PTR [rbp+0x6e],dl
  405644:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405648:	outs   dx,BYTE PTR ds:[rsi]
  405649:	and    BYTE PTR [rax+0x73],dh
  40564c:	gs jne 0x4056b3
  40564f:	outs   dx,DWORD PTR ds:[rsi]
  405650:	and    BYTE PTR [rdx+0x65],dh
  405653:	ins    BYTE PTR es:[rdi],dx
  405654:	outs   dx,DWORD PTR ds:[rsi]
  405655:	movsxd esp,DWORD PTR [rcx+0x74]
  405658:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40565f:	je     0x4056d0
  405661:	movsxd ebp,DWORD PTR [rdi+0x6c]
  405664:	and    BYTE PTR [rsi+0x65],dh
  405667:	jb     0x4056dc
  405669:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  405670:	or     al,BYTE PTR [rax]
  405672:	add    BYTE PTR [rax],al
  405674:	add    BYTE PTR [rax],al
  405676:	add    BYTE PTR [rax],al
  405678:	and    BYTE PTR [rax],ah
  40567a:	push   rbp
  40567b:	outs   dx,BYTE PTR ds:[rsi]
  40567c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405680:	outs   dx,BYTE PTR ds:[rsi]
  405681:	and    BYTE PTR [rax+0x73],dh
  405684:	gs jne 0x4056eb
  405687:	outs   dx,DWORD PTR ds:[rsi]
  405688:	and    BYTE PTR [rdx+0x65],dh
  40568b:	ins    BYTE PTR es:[rdi],dx
  40568c:	outs   dx,DWORD PTR ds:[rsi]
  40568d:	movsxd esp,DWORD PTR [rcx+0x74]
  405690:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  405697:	and    BYTE PTR [rbx+0x69],dh
  40569a:	jp     0x405701
  40569c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a8506
	...
  4056ae:	add    BYTE PTR [rax],al
  4056b0:	cs jo  0x405717
  4056b3:	(bad)  
  4056b4:	je     0x405717
	...
  4056be:	add    BYTE PTR [rax],al
  4056c0:	and    eax,0x203a73
  4056c5:	push   rax
  4056c6:	rex.WRXB push r11
  4056c8:	rex.WB pop r8
  4056ca:	rex.WR pop rcx
  4056cc:	pop    rdi
  4056cd:	rex.XB
  4056ce:	rex.WRXB push r10
  4056d0:	push   rdx
  4056d1:	rex.RB
  4056d2:	rex.XB push r12
	...
  4056e0:	jne    0x405750
  4056e2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4056e6:	outs   dx,BYTE PTR ds:[rsi]
  4056e7:	and    BYTE PTR [rdi+0x70],ch
  4056ea:	je     0x405755
  4056ec:	outs   dx,DWORD PTR ds:[rsi]
  4056ed:	outs   dx,BYTE PTR ds:[rsi]
  4056ee:	and    BYTE PTR [rip+0x7325202d],ch        # 0x73657721
	...
  405700:	jne    0x405770
  405702:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405706:	outs   dx,BYTE PTR ds:[rsi]
  405707:	and    BYTE PTR [rdi+0x70],ch
  40570a:	je     0x405775
  40570c:	outs   dx,DWORD PTR ds:[rsi]
  40570d:	outs   dx,BYTE PTR ds:[rsi]
  40570e:	and    BYTE PTR [rip+0x6325202d],ch        # 0x63657741
	...
  405720:	outs   dx,DWORD PTR ds:[rsi]
  405721:	jo     0x405797
  405723:	imul   ebp,DWORD PTR [rdi+0x6e],0x656f6420
  40572a:	jae    0x40579a
  40572c:	(bad)  
  40572d:	je     0x40574f
  40572f:	je     0x405792
  405731:	imul   esp,DWORD PTR [rbp+0x20],0x61
  405735:	outs   dx,BYTE PTR ds:[rsi]
  405736:	and    BYTE PTR [rcx+0x72],ah
  405739:	addr32 jne 0x4057a9
  40573c:	outs   dx,BYTE PTR gs:[rsi]
  40573e:	je     0x405760
  405740:	sub    eax,0x2e25202d
  405745:	sub    dh,BYTE PTR [rbx+0x0]
	...
  405750:	(bad)  
  405751:	ins    DWORD PTR es:[rdi],dx
  405752:	(bad)  
  405753:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  40575a:	outs   dx,DWORD PTR ds:[rsi]
  40575b:	jo     0x4057d1
  40575d:	imul   ebp,DWORD PTR [rdi+0x6e],0x202d2d20
  405764:	and    eax,0x732a2e
	...
  40577d:	add    BYTE PTR [rax],al
  40577f:	add    BYTE PTR [rdi+0x70],ch
  405782:	je     0x4057ed
  405784:	outs   dx,DWORD PTR ds:[rsi]
  405785:	outs   dx,BYTE PTR ds:[rsi]
  405786:	and    BYTE PTR [rdx+0x65],dh
  405789:	jno    0x405800
  40578b:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  405792:	and    BYTE PTR [rcx+0x72],ah
  405795:	addr32 jne 0x405805
  405798:	outs   dx,BYTE PTR gs:[rsi]
  40579a:	je     0x4057bc
  40579c:	sub    eax,0x7325202d
	...
  4057bd:	add    BYTE PTR [rax],al
  4057bf:	add    BYTE PTR [rdi+0x70],ch
  4057c2:	je     0x40582d
  4057c4:	outs   dx,DWORD PTR ds:[rsi]
  4057c5:	outs   dx,BYTE PTR ds:[rsi]
  4057c6:	and    BYTE PTR [rdx+0x65],dh
  4057c9:	jno    0x405840
  4057cb:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  4057d2:	and    BYTE PTR [rcx+0x72],ah
  4057d5:	addr32 jne 0x405845
  4057d8:	outs   dx,BYTE PTR gs:[rsi]
  4057da:	je     0x4057fc
  4057dc:	sub    eax,0x6325202d
	...
  4057fd:	add    BYTE PTR [rax],al
  4057ff:	add    BYTE PTR [rax+0x40],al
  405802:	add    BYTE PTR [rax],al
	...
  40580d:	add    BYTE PTR [rax],al
  40580f:	add    BYTE PTR [rax+0x4040],al
	...
  40581d:	add    BYTE PTR [rax],al
  40581f:	add    BYTE PTR [rax+0x403d],ah
	...
  40582d:	add    BYTE PTR [rax],al
  40582f:	add    BYTE PTR [rax+0x405d],dl
	...
  40583d:	add    BYTE PTR [rax],al
  40583f:	add    BYTE PTR [rax+0x405d],dl
	...
  40584d:	add    BYTE PTR [rax],al
  40584f:	add    BYTE PTR [rax+0x54],dl
  405852:	add    BYTE PTR [rax],al
	...
  405861:	add    BYTE PTR [rax+0x0],al
	...
  405870:	rex xchg esp,eax
  405872:	add    BYTE PTR [rax],al
	...
  40587d:	add    BYTE PTR [rax],al
  40587f:	add    BYTE PTR [rax-0x6c],bl
  405882:	add    BYTE PTR [rax],al
	...
  40588d:	add    BYTE PTR [rax],al
  40588f:	add    BYTE PTR [rax+0x4094],al
	...
  40589d:	add    BYTE PTR [rax],al
  40589f:	add    BYTE PTR [rax+0x4094],bl
	...
  4058ad:	add    BYTE PTR [rax],al
  4058af:	add    BYTE PTR [rax+0x4094],dh
	...
  4058bd:	add    BYTE PTR [rax],al
  4058bf:	add    al,al
  4058c1:	xchg   BYTE PTR [rax+0x0],al
	...
  4058d0:	sub    BYTE PTR [rdx+0x40],cl
	...
  4058de:	add    BYTE PTR [rax],al
  4058e0:	and    BYTE PTR [rdx+0x40],cl
	...
  4058ee:	add    BYTE PTR [rax],al
  4058f0:	adc    BYTE PTR [rdx+0x40],cl
	...
  4058fe:	add    BYTE PTR [rax],al
  405900:	sbb    BYTE PTR [rdx+0x40],cl
	...
  40590e:	add    BYTE PTR [rax],al
  405910:	add    BYTE PTR [rax+0x40],ah
	...
  40591e:	add    BYTE PTR [rax],al
  405920:	adc    BYTE PTR [rax+0x40],ah
	...
  40592e:	add    BYTE PTR [rax],al
  405930:	sbb    BYTE PTR [rax+0x40],ah
	...
  40593e:	add    BYTE PTR [rax],al
  405940:	xor    BYTE PTR [rax+0x40],ah
	...
  40594e:	add    BYTE PTR [rax],al
  405950:	rex add BYTE PTR [rax+0x0],0x0
	...
  40595d:	add    BYTE PTR [rax],al
  40595f:	add    BYTE PTR [rax+0x4086],dl
	...
  40596d:	add    BYTE PTR [rax],al
  40596f:	add    BYTE PTR [rax],dh
  405971:	and    al,0x40
	...
  40597f:	add    BYTE PTR [rax+0x401b],al
	...
  40598d:	add    BYTE PTR [rax],al
  40598f:	add    BYTE PTR [rax-0x7a],al
  405992:	add    BYTE PTR [rax],al
	...
  40599d:	add    BYTE PTR [rax],al
  40599f:	add    BYTE PTR [rax-0x7a],dh
  4059a2:	add    BYTE PTR [rax],al
	...
  4059ad:	add    BYTE PTR [rax],al
  4059af:	add    BYTE PTR [rax-0x80],dl
  4059b2:	add    BYTE PTR [rax],al
	...
  4059bd:	add    BYTE PTR [rax],al
  4059bf:	add    BYTE PTR [rax-0x7a],bl
  4059c2:	add    BYTE PTR [rax],al
	...
  4059cd:	add    BYTE PTR [rax],al
  4059cf:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  4059df:	add    BYTE PTR [rax-0x7a],dl
  4059e2:	add    BYTE PTR [rax],al
	...
  4059ed:	add    BYTE PTR [rax],al
  4059ef:	add    BYTE PTR [rax-0x76],dl
  4059f2:	add    BYTE PTR [rax],al
	...
  4059fd:	add    BYTE PTR [rax],al
  4059ff:	add    BYTE PTR [rax+rax*2+0x40],ch
	...
  405a0f:	add    BYTE PTR [rdi+0x43],al
  405a12:	rex.XB cmp spl,BYTE PTR [r8]
  405a15:	sub    BYTE PTR [rdi+0x4e],al
  405a18:	push   rbp
  405a19:	sub    DWORD PTR [rax],esp
  405a1b:	xor    al,0x2e
  405a1d:	cmp    DWORD PTR [rsi],ebp
  405a1f:	xor    al,0x0
	...
  405a2d:	add    BYTE PTR [rax],al
  405a2f:	add    BYTE PTR [rdi+0x43],al
  405a32:	rex.XB cmp spl,BYTE PTR [r8]
  405a35:	sub    BYTE PTR [rdi+0x4e],al
  405a38:	push   rbp
  405a39:	sub    DWORD PTR [rax],esp
  405a3b:	xor    al,0x2e
  405a3d:	cmp    DWORD PTR [rsi],ebp
  405a3f:	xor    al,0x0
	...
  405a4d:	add    BYTE PTR [rax],al
  405a4f:	add    BYTE PTR [rdi+0x43],al
  405a52:	rex.XB cmp spl,BYTE PTR [r8]
  405a55:	sub    BYTE PTR [rdi+0x4e],al
  405a58:	push   rbp
  405a59:	sub    DWORD PTR [rax],esp
  405a5b:	xor    al,0x2e
  405a5d:	cmp    DWORD PTR [rsi],ebp
  405a5f:	xor    al,0x0
	...
  405a6d:	add    BYTE PTR [rax],al
  405a6f:	add    BYTE PTR [rdi+0x43],al
  405a72:	rex.XB cmp spl,BYTE PTR [r8]
  405a75:	sub    BYTE PTR [rdi+0x4e],al
  405a78:	push   rbp
  405a79:	sub    DWORD PTR [rax],esp
  405a7b:	xor    al,0x2e
  405a7d:	cmp    DWORD PTR [rsi],ebp
  405a7f:	xor    al,0x0
	...
  405a8d:	add    BYTE PTR [rax],al
  405a8f:	add    BYTE PTR [rdi+0x43],al
  405a92:	rex.XB cmp spl,BYTE PTR [r8]
  405a95:	sub    BYTE PTR [rdi+0x4e],al
  405a98:	push   rbp
  405a99:	sub    DWORD PTR [rax],esp
  405a9b:	xor    al,0x2e
  405a9d:	cmp    DWORD PTR [rsi],ebp
  405a9f:	xor    al,0x0
	...
  405aad:	add    BYTE PTR [rax],al
  405aaf:	add    BYTE PTR [rdi+0x43],al
  405ab2:	rex.XB cmp spl,BYTE PTR [r8]
  405ab5:	sub    BYTE PTR [rdi+0x4e],al
  405ab8:	push   rbp
  405ab9:	sub    DWORD PTR [rax],esp
  405abb:	xor    al,0x2e
  405abd:	cmp    DWORD PTR [rsi],ebp
  405abf:	xor    al,0x0
	...
  405acd:	add    BYTE PTR [rax],al
  405acf:	add    BYTE PTR [rdi+0x43],al
  405ad2:	rex.XB cmp spl,BYTE PTR [r8]
  405ad5:	sub    BYTE PTR [rdi+0x4e],al
  405ad8:	push   rbp
  405ad9:	sub    DWORD PTR [rax],esp
  405adb:	xor    al,0x2e
  405add:	cmp    DWORD PTR [rsi],ebp
  405adf:	xor    al,0x0
	...
  405aed:	add    BYTE PTR [rax],al
  405aef:	add    BYTE PTR [rdi+0x43],al
  405af2:	rex.XB cmp spl,BYTE PTR [r8]
  405af5:	sub    BYTE PTR [rdi+0x4e],al
  405af8:	push   rbp
  405af9:	sub    DWORD PTR [rax],esp
  405afb:	xor    al,0x2e
  405afd:	cmp    DWORD PTR [rsi],ebp
  405aff:	xor    al,0x0
	...
  405b0d:	add    BYTE PTR [rax],al
  405b0f:	add    BYTE PTR [rdi+0x43],al
  405b12:	rex.XB cmp spl,BYTE PTR [r8]
  405b15:	sub    BYTE PTR [rdi+0x4e],al
  405b18:	push   rbp
  405b19:	sub    DWORD PTR [rax],esp
  405b1b:	xor    al,0x2e
  405b1d:	cmp    DWORD PTR [rsi],ebp
  405b1f:	xor    al,0x0
	...
  405b2d:	add    BYTE PTR [rax],al
  405b2f:	add    BYTE PTR [rdi+0x43],al
  405b32:	rex.XB cmp spl,BYTE PTR [r8]
  405b35:	sub    BYTE PTR [rdi+0x4e],al
  405b38:	push   rbp
  405b39:	sub    DWORD PTR [rax],esp
  405b3b:	xor    al,0x2e
  405b3d:	cmp    DWORD PTR [rsi],ebp
  405b3f:	xor    al,0x0
	...
  405b4d:	add    BYTE PTR [rax],al
  405b4f:	add    BYTE PTR [rdi+0x43],al
  405b52:	rex.XB cmp spl,BYTE PTR [r8]
  405b55:	sub    BYTE PTR [rdi+0x4e],al
  405b58:	push   rbp
  405b59:	sub    DWORD PTR [rax],esp
  405b5b:	xor    al,0x2e
  405b5d:	cmp    DWORD PTR [rsi],ebp
  405b5f:	xor    al,0x0
	...
  405b6d:	add    BYTE PTR [rax],al
  405b6f:	add    BYTE PTR [rdi+0x43],al
  405b72:	rex.XB cmp spl,BYTE PTR [r8]
  405b75:	sub    BYTE PTR [rdi+0x4e],al
  405b78:	push   rbp
  405b79:	sub    DWORD PTR [rax],esp
  405b7b:	xor    al,0x2e
  405b7d:	cmp    DWORD PTR [rsi],ebp
  405b7f:	xor    al,0x0
	...
  405b8d:	add    BYTE PTR [rax],al
  405b8f:	add    BYTE PTR [rdi+0x43],al
  405b92:	rex.XB cmp spl,BYTE PTR [r8]
  405b95:	sub    BYTE PTR [rdi+0x4e],al
  405b98:	push   rbp
  405b99:	sub    DWORD PTR [rax],esp
  405b9b:	xor    al,0x2e
  405b9d:	cmp    DWORD PTR [rsi],ebp
  405b9f:	xor    al,0x0
	...
  405bad:	add    BYTE PTR [rax],al
  405baf:	add    BYTE PTR [rdi+0x43],al
  405bb2:	rex.XB cmp spl,BYTE PTR [r8]
  405bb5:	sub    BYTE PTR [rdi+0x4e],al
  405bb8:	push   rbp
  405bb9:	sub    DWORD PTR [rax],esp
  405bbb:	xor    al,0x2e
  405bbd:	cmp    DWORD PTR [rsi],ebp
  405bbf:	xor    al,0x0
	...
  405bcd:	add    BYTE PTR [rax],al
  405bcf:	add    BYTE PTR [rdi+0x43],al
  405bd2:	rex.XB cmp spl,BYTE PTR [r8]
  405bd5:	sub    BYTE PTR [rdi+0x4e],al
  405bd8:	push   rbp
  405bd9:	sub    DWORD PTR [rax],esp
  405bdb:	xor    al,0x2e
  405bdd:	cmp    DWORD PTR [rsi],ebp
  405bdf:	xor    al,0x0
	...
  405bed:	add    BYTE PTR [rax],al
  405bef:	add    BYTE PTR [rdi+0x43],al
  405bf2:	rex.XB cmp spl,BYTE PTR [r8]
  405bf5:	sub    BYTE PTR [rdi+0x4e],al
  405bf8:	push   rbp
  405bf9:	sub    DWORD PTR [rax],esp
  405bfb:	xor    al,0x2e
  405bfd:	cmp    DWORD PTR [rsi],ebp
  405bff:	xor    al,0x0
	...
  405c0d:	add    BYTE PTR [rax],al
  405c0f:	add    BYTE PTR [rdi+0x43],al
  405c12:	rex.XB cmp spl,BYTE PTR [r8]
  405c15:	sub    BYTE PTR [rdi+0x4e],al
  405c18:	push   rbp
  405c19:	sub    DWORD PTR [rax],esp
  405c1b:	xor    al,0x2e
  405c1d:	cmp    DWORD PTR [rsi],ebp
  405c1f:	xor    al,0x0
	...
  405c2d:	add    BYTE PTR [rax],al
  405c2f:	add    BYTE PTR [rdi+0x43],al
  405c32:	rex.XB cmp spl,BYTE PTR [r8]
  405c35:	sub    BYTE PTR [rdi+0x4e],al
  405c38:	push   rbp
  405c39:	sub    DWORD PTR [rax],esp
  405c3b:	xor    al,0x2e
  405c3d:	cmp    DWORD PTR [rsi],ebp
  405c3f:	xor    al,0x0
	...
  405c4d:	add    BYTE PTR [rax],al
  405c4f:	add    BYTE PTR [rdi+0x43],al
  405c52:	rex.XB cmp spl,BYTE PTR [r8]
  405c55:	sub    BYTE PTR [rdi+0x4e],al
  405c58:	push   rbp
  405c59:	sub    DWORD PTR [rax],esp
  405c5b:	xor    al,0x2e
  405c5d:	cmp    DWORD PTR [rsi],ebp
  405c5f:	xor    al,0x0
	...
  405c6d:	add    BYTE PTR [rax],al
  405c6f:	add    BYTE PTR [rdi+0x43],al
  405c72:	rex.XB cmp spl,BYTE PTR [r8]
  405c75:	sub    BYTE PTR [rdi+0x4e],al
  405c78:	push   rbp
  405c79:	sub    DWORD PTR [rax],esp
  405c7b:	xor    al,0x2e
  405c7d:	cmp    DWORD PTR [rsi],ebp
  405c7f:	xor    al,0x0
	...
  405c8d:	add    BYTE PTR [rax],al
  405c8f:	add    BYTE PTR [rdi+0x43],al
  405c92:	rex.XB cmp spl,BYTE PTR [r8]
  405c95:	sub    BYTE PTR [rdi+0x4e],al
  405c98:	push   rbp
  405c99:	sub    DWORD PTR [rax],esp
  405c9b:	xor    al,0x2e
  405c9d:	cmp    DWORD PTR [rsi],ebp
  405c9f:	xor    al,0x0
	...
  405cad:	add    BYTE PTR [rax],al
  405caf:	add    BYTE PTR [rdi+0x43],al
  405cb2:	rex.XB cmp spl,BYTE PTR [r8]
  405cb5:	sub    BYTE PTR [rdi+0x4e],al
  405cb8:	push   rbp
  405cb9:	sub    DWORD PTR [rax],esp
  405cbb:	xor    al,0x2e
  405cbd:	cmp    DWORD PTR [rsi],ebp
  405cbf:	xor    al,0x0
	...
  405ccd:	add    BYTE PTR [rax],al
  405ccf:	add    BYTE PTR [rdi+0x43],al
  405cd2:	rex.XB cmp spl,BYTE PTR [r8]
  405cd5:	sub    BYTE PTR [rdi+0x4e],al
  405cd8:	push   rbp
  405cd9:	sub    DWORD PTR [rax],esp
  405cdb:	xor    al,0x2e
  405cdd:	cmp    DWORD PTR [rsi],ebp
  405cdf:	xor    al,0x0
	...
  405ced:	add    BYTE PTR [rax],al
  405cef:	add    BYTE PTR [rdi+0x43],al
  405cf2:	rex.XB cmp spl,BYTE PTR [r8]
  405cf5:	sub    BYTE PTR [rdi+0x4e],al
  405cf8:	push   rbp
  405cf9:	sub    DWORD PTR [rax],esp
  405cfb:	xor    al,0x2e
  405cfd:	cmp    DWORD PTR [rsi],ebp
  405cff:	xor    al,0x0
	...
  405d0d:	add    BYTE PTR [rax],al
  405d0f:	add    BYTE PTR [rdi+0x43],al
  405d12:	rex.XB cmp spl,BYTE PTR [r8]
  405d15:	sub    BYTE PTR [rdi+0x4e],al
  405d18:	push   rbp
  405d19:	sub    DWORD PTR [rax],esp
  405d1b:	xor    al,0x2e
  405d1d:	cmp    DWORD PTR [rsi],ebp
  405d1f:	xor    al,0x0
	...
  405d2d:	add    BYTE PTR [rax],al
  405d2f:	add    BYTE PTR [rdi+0x43],al
  405d32:	rex.XB cmp spl,BYTE PTR [r8]
  405d35:	sub    BYTE PTR [rdi+0x4e],al
  405d38:	push   rbp
  405d39:	sub    DWORD PTR [rax],esp
  405d3b:	xor    al,0x2e
  405d3d:	cmp    DWORD PTR [rsi],ebp
  405d3f:	xor    al,0x0
	...
  405d4d:	add    BYTE PTR [rax],al
  405d4f:	add    BYTE PTR [rdi+0x43],al
  405d52:	rex.XB cmp spl,BYTE PTR [r8]
  405d55:	sub    BYTE PTR [rdi+0x4e],al
  405d58:	push   rbp
  405d59:	sub    DWORD PTR [rax],esp
  405d5b:	xor    al,0x2e
  405d5d:	cmp    DWORD PTR [rsi],ebp
  405d5f:	xor    al,0x0
	...
  405d6d:	add    BYTE PTR [rax],al
  405d6f:	add    BYTE PTR [rdi+0x43],al
  405d72:	rex.XB cmp spl,BYTE PTR [r8]
  405d75:	sub    BYTE PTR [rdi+0x4e],al
  405d78:	push   rbp
  405d79:	sub    DWORD PTR [rax],esp
  405d7b:	xor    al,0x2e
  405d7d:	cmp    DWORD PTR [rsi],ebp
  405d7f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     0x40603b
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    BYTE PTR [rax],dh
  406049:	adc    eax,0x16390000
  40604e:	add    BYTE PTR [rax],al
  406050:	push   0xffffffffe0000070
  406055:	(bad)  
  406056:	add    BYTE PTR [rax],al
  406058:	xchg   DWORD PTR [rdi],edx
  40605a:	add    BYTE PTR [rax],al
  40605c:	mov    WORD PTR [rax+0x0],?
  40605f:	add    BYTE PTR [rax-0x56ffffe9],dl
  406065:	(bad)  
  406066:	add    BYTE PTR [rax],al
  406068:	xchg   esp,eax
  406069:	jo     0x40606b
  40606b:	add    BYTE PTR [rax-0x1affffe9],dh
  406071:	(bad)  
  406072:	add    BYTE PTR [rax],al
  406074:	pushf  
  406075:	jo     0x406077
  406077:	add    al,dh
  406079:	(bad)  
  40607a:	add    BYTE PTR [rax],al
  40607c:	sbb    BYTE PTR [r8],r8b
  40607f:	add    BYTE PTR [rax+rsi*2+0x18500000],ah
  406086:	add    BYTE PTR [rax],al
  406088:	ins    BYTE PTR es:[rdi],dx
  406089:	sbb    BYTE PTR [rax],al
  40608b:	add    BYTE PTR [rax+0x70000070],dh
  406091:	sbb    BYTE PTR [rax],al
  406093:	add    BYTE PTR [rdx+0x18],bh
  406096:	add    BYTE PTR [rax],al
  406098:	mov    ah,0x70
  40609a:	add    BYTE PTR [rax],al
  40609c:	sbb    BYTE PTR [rax],0x0
  40609f:	add    BYTE PTR [rbx-0x47ffffe8],al
  4060a5:	jo     0x4060a7
  4060a7:	add    BYTE PTR [rax+0x66000018],dl
  4060ad:	sbb    DWORD PTR [rax],eax
  4060af:	add    BYTE PTR [rax+rsi*2+0x19700000],bh
  4060b6:	add    BYTE PTR [rax],al
  4060b8:	imul   ebx,DWORD PTR [rdx],0x0
  4060bb:	add    ah,cl
  4060bd:	jo     0x4060bf
  4060bf:	add    BYTE PTR [rax+0x1a],dh
  4060c2:	add    BYTE PTR [rax],al
  4060c4:	lahf   
  4060c5:	sbb    al,BYTE PTR [rax]
  4060c7:	add    ah,bl
  4060c9:	jo     0x4060cb
  4060cb:	add    BYTE PTR [rax+0x900001a],ah
  4060d1:	sbb    eax,DWORD PTR [rax]
  4060d3:	add    ah,ah
  4060d5:	jo     0x4060d7
  4060d7:	add    BYTE PTR [rax],dl
  4060d9:	sbb    eax,DWORD PTR [rax]
  4060db:	add    BYTE PTR [rbx],dl
  4060dd:	sbb    eax,DWORD PTR [rax]
  4060df:	add    al,dh
  4060e1:	jo     0x4060e3
  4060e3:	add    BYTE PTR [rax],ah
  4060e5:	sbb    eax,DWORD PTR [rax]
  4060e7:	add    BYTE PTR [rcx+0x1b],ah
  4060ea:	add    BYTE PTR [rax],al
  4060ec:	hlt    
  4060ed:	jo     0x4060ef
  4060ef:	add    BYTE PTR [rax+0x1b],dh
  4060f2:	add    BYTE PTR [rax],al
  4060f4:	jl     0x406111
  4060f6:	add    BYTE PTR [rax],al
  4060f8:	cld    
  4060f9:	jo     0x4060fb
  4060fb:	add    BYTE PTR [rax+0x7c00001b],al
  406101:	sbb    al,0x0
  406103:	add    BYTE PTR [rax],al
  406105:	jno    0x406107
  406107:	add    BYTE PTR [rax-0x7cffffe4],al
  40610d:	sbb    al,0x0
  40610f:	add    BYTE PTR [rax],bl
  406111:	jno    0x406113
  406113:	add    BYTE PTR [rax-0x6bffffe4],dl
  406119:	sbb    al,0x0
  40611b:	add    BYTE PTR [rcx+rsi*2],bl
  40611e:	add    BYTE PTR [rax],al
  406120:	movabs al,ds:0x2000001ca400001c
  406129:	jno    0x40612b
  40612b:	add    BYTE PTR [rax+0x1100001c],dh
  406131:	sbb    eax,0x71240000
  406136:	add    BYTE PTR [rax],al
  406138:	and    BYTE PTR [rip+0x1e820000],bl        # 0x1ec2613e
  40613e:	add    BYTE PTR [rax],al
  406140:	xor    BYTE PTR [rcx+0x0],dh
  406143:	add    BYTE PTR [rax-0x76ffffe2],dl
  406149:	and    DWORD PTR [rax],eax
  40614b:	add    BYTE PTR [rcx+rsi*2+0x0],al
  40614f:	add    BYTE PTR [rax+0x36000021],dl
  406155:	and    eax,DWORD PTR [rax]
  406157:	add    BYTE PTR [rcx+rsi*2+0x0],bl
  40615b:	add    BYTE PTR [rax+0x23],al
  40615e:	add    BYTE PTR [rax],al
  406160:	sub    al,0x24
  406162:	add    BYTE PTR [rax],al
  406164:	fs jno 0x406167
  406167:	add    BYTE PTR [rax],dh
  406169:	and    al,0x0
  40616b:	add    al,ch
  40616d:	and    eax,0x71740000
  406172:	add    BYTE PTR [rax],al
  406174:	lock and eax,0x265d0000
  40617a:	add    BYTE PTR [rax],al
  40617c:	jl     0x4061ef
  40617e:	add    BYTE PTR [rax],al
  406180:	(bad)  
  406181:	add    BYTE PTR es:[rax],al
  406184:	fbld   TBYTE PTR [rsi]
  406186:	add    BYTE PTR [rax],al
  406188:	mov    WORD PTR [rcx+0x0],?
  40618b:	add    al,ah
  40618d:	add    BYTE PTR es:[rax],al
  406190:	jg     0x4061b9
  406192:	add    BYTE PTR [rax],al
  406194:	cwde   
  406195:	jno    0x406197
  406197:	add    BYTE PTR [rax+0x5a000027],al
  40619d:	sub    BYTE PTR [rax],al
  40619f:	add    BYTE PTR [rax+0x60000071],ah
  4061a5:	sub    BYTE PTR [rax],al
  4061a7:	add    BYTE PTR [rdi+0x28],bh
  4061aa:	add    BYTE PTR [rax],al
  4061ac:	test   al,0x71
  4061ae:	add    BYTE PTR [rax],al
  4061b0:	sub    BYTE PTR [rax],0x0
  4061b3:	add    BYTE PTR [rdx-0x53ffffd8],dl
  4061b9:	jno    0x4061bb
  4061bb:	add    BYTE PTR [rax-0x1affffd8],ah
  4061c1:	sub    BYTE PTR [rax],al
  4061c3:	add    BYTE PTR [rax-0xfffff8f],dh
  4061c9:	sub    BYTE PTR [rax],al
  4061cb:	add    BYTE PTR [rsi-0x4bffffd7],cl
  4061d1:	jno    0x4061d3
  4061d3:	add    BYTE PTR [rax-0x2cffffd7],dl
  4061d9:	sub    DWORD PTR [rax],eax
  4061db:	add    al,al
  4061dd:	jno    0x4061df
  4061df:	add    al,ah
  4061e1:	sub    DWORD PTR [rax],eax
  4061e3:	add    BYTE PTR [rbx],bl
  4061e5:	sub    al,BYTE PTR [rax]
  4061e7:	add    ah,cl
  4061e9:	jno    0x4061eb
  4061eb:	add    BYTE PTR [rax],ah
  4061ed:	sub    al,BYTE PTR [rax]
  4061ef:	add    BYTE PTR [rsi-0x2bffffd6],ch
  4061f5:	jno    0x4061f7
  4061f7:	add    BYTE PTR [rax-0x17ffffd6],dh
  4061fd:	sub    al,BYTE PTR [rax]
  4061ff:	add    al,ah
  406201:	jno    0x406203
  406203:	add    al,dh
  406205:	sub    al,BYTE PTR [rax]
  406207:	add    BYTE PTR [rbp+0x2b],al
  40620a:	add    BYTE PTR [rax],al
  40620c:	in     al,dx
  40620d:	jno    0x40620f
  40620f:	add    BYTE PTR [rax+0x2b],dl
  406212:	add    BYTE PTR [rax],al
  406214:	(bad)  
  406215:	sub    eax,DWORD PTR [rax]
  406217:	add    al,bh
  406219:	jno    0x40621b
  40621b:	add    BYTE PTR [rax+0x2c],al
  40621e:	add    BYTE PTR [rax],al
  406220:	(bad)  
  406221:	sub    al,0x0
  406223:	add    BYTE PTR [rax],cl
  406225:	jb     0x406227
  406227:	add    al,dh
  406229:	sub    al,0x0
  40622b:	add    BYTE PTR [rax+0x2d],dh
  40622e:	add    BYTE PTR [rax],al
  406230:	sbb    BYTE PTR [rdx+0x0],dh
  406233:	add    BYTE PTR [rax+0x2d],dh
  406236:	add    BYTE PTR [rax],al
  406238:	xor    DWORD PTR es:[rax],eax
  40623b:	add    BYTE PTR [rdx+rsi*2],ah
  40623e:	add    BYTE PTR [rax],al
  406240:	xor    BYTE PTR [rcx],dh
  406242:	add    BYTE PTR [rax],al
  406244:	adc    eax,0x3c000038
  406249:	jb     0x40624b
  40624b:	add    BYTE PTR [rax],ah
  40624d:	cmp    BYTE PTR [rax],al
  40624f:	add    BYTE PTR [rdx+0x38],al
  406252:	add    BYTE PTR [rax],al
  406254:	push   rsp
  406255:	jb     0x406257
  406257:	add    BYTE PTR [rax+0x38],dl
  40625a:	add    BYTE PTR [rax],al
  40625c:	jo     0x406296
  40625e:	add    BYTE PTR [rax],al
  406260:	pop    rsp
  406261:	jb     0x406263
  406263:	add    BYTE PTR [rax+0x38],dh
  406266:	add    BYTE PTR [rax],al
  406268:	nop
  406269:	cmp    BYTE PTR [rax],al
  40626b:	add    BYTE PTR [rdx+rsi*2+0x0],ah
  40626f:	add    BYTE PTR [rax-0x77ffffc7],al
  406275:	cmp    DWORD PTR [rax],eax
  406277:	add    BYTE PTR [rdx+rsi*2+0x0],ch
  40627b:	add    BYTE PTR [rax-0x64ffffc7],dl
  406281:	cmp    DWORD PTR [rax],eax
  406283:	add    BYTE PTR [rax+0x72],dh
  406286:	add    BYTE PTR [rax],al
  406288:	(bad)  
  406289:	cmp    al,BYTE PTR [rax]
  40628b:	add    BYTE PTR [rbx+0x7400003d],bl
  406291:	jo     0x406293
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	js     0x40706b
  407032:	add    BYTE PTR [rax],al
  407034:	add    DWORD PTR [rax],eax
  407036:	add    BYTE PTR [rax],al
  407038:	(bad)  
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    BYTE PTR [rax],dh
  407041:	and    al,0x0
  407043:	add    ah,ch
  407045:	adc    al,0x0
  407047:	add    BYTE PTR [rcx],cl
  407049:	add    al,0x1
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	js     0x40708b
  407052:	add    BYTE PTR [rax],al
  407054:	add    DWORD PTR [rax],eax
  407056:	add    BYTE PTR [rax],al
  407058:	add    al,0x15
  40705a:	add    BYTE PTR [rax],al
  40705c:	sbb    al,0x15
  40705e:	add    BYTE PTR [rax],al
  407060:	xor    BYTE PTR [rax+rax*1],ah
  407063:	add    BYTE PTR [rdx*1+0x7010000],bl
  40706a:	add    al,0x0
  40706c:	(bad)  
  40706d:	xor    al,BYTE PTR [rbx]
  40706f:	xor    BYTE PTR [rdx],al
  407071:	(bad)  
  407072:	add    DWORD PTR [rax+0x1],esi
  407075:	adc    BYTE PTR [rcx],cl
  407077:	add    BYTE PTR [rax],dl
  407079:	(bad)  
  40707a:	or     al,0x30
  40707c:	or     esp,DWORD PTR [rax+0xa]
  40707f:	jo     0x40708a
  407081:	push   rax
  407082:	or     al,al
  407084:	(bad)  
  407085:	rol    BYTE PTR [rax+riz*8],1
  407088:	add    dh,al
  40708a:	add    BYTE PTR [rax],al
  40708c:	add    DWORD PTR [rip+0x52050002],eax        # 0x52457094
  407092:	add    DWORD PTR [rax],esi
  407094:	add    DWORD PTR [rcx+rax*1],eax
  407097:	add    BYTE PTR [rdx+rax*2],al
  40709a:	add    BYTE PTR [rax],al
  40709c:	add    DWORD PTR [rcx+rax*1],eax
  40709f:	add    BYTE PTR [rdx+rax*2],al
  4070a2:	add    BYTE PTR [rax],al
  4070a4:	add    DWORD PTR [rsi],eax
  4070a6:	add    eax,DWORD PTR [rax]
  4070a8:	(bad)  
  4070a9:	rex.X add sil,BYTE PTR [rax]
  4070ac:	add    DWORD PTR [rax+0x0],esp
  4070af:	add    BYTE PTR [rcx],al
  4070b1:	add    BYTE PTR [rax],al
  4070b3:	add    BYTE PTR [rcx],al
  4070b5:	add    BYTE PTR [rax],al
  4070b7:	add    BYTE PTR [rcx],al
  4070b9:	add    BYTE PTR [rax],al
  4070bb:	add    BYTE PTR [rcx],al
  4070bd:	or     al,BYTE PTR [rsi]
  4070bf:	add    BYTE PTR [rdx],cl
  4070c1:	jb     0x4070c9
  4070c3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b07529
  4070c9:	push   rax
  4070ca:	add    al,al
  4070cc:	add    DWORD PTR [rdx],ecx
  4070ce:	add    eax,0x6d20a05
  4070d3:	add    eax,DWORD PTR [rbx]
  4070d5:	xor    BYTE PTR [rdx],al
  4070d7:	(bad)  
  4070d8:	add    DWORD PTR [rax+0x0],edx
  4070db:	add    BYTE PTR [rcx],al
  4070dd:	add    al,0x1
  4070df:	add    BYTE PTR [rdx+rax*2],al
  4070e2:	add    BYTE PTR [rax],al
  4070e4:	add    DWORD PTR [rsi],eax
  4070e6:	add    eax,DWORD PTR [rax]
  4070e8:	(bad)  
  4070e9:	rex.X add sil,BYTE PTR [rax]
  4070ec:	add    DWORD PTR [rax+0x0],esp
  4070ef:	add    BYTE PTR [rcx],al
  4070f1:	add    BYTE PTR [rax],al
  4070f3:	add    BYTE PTR [rcx],al
  4070f5:	add    al,0x1
  4070f7:	add    BYTE PTR [rdx+riz*4],al
  4070fa:	add    BYTE PTR [rax],al
  4070fc:	add    DWORD PTR [rax],eax
  4070fe:	add    BYTE PTR [rax],al
  407100:	add    DWORD PTR [rsi],edx
  407102:	or     DWORD PTR [rax],eax
  407104:	(bad)  
  407105:	mov    BYTE PTR [rsi],al
  407107:	add    BYTE PTR [rax],dl
  407109:	js     0x407110
  40710b:	add    BYTE PTR [rbx],cl
  40710d:	push   0xffffffffe2060004
  407112:	add    dh,BYTE PTR [rax]
  407114:	add    DWORD PTR [rax+0x0],esp
  407117:	add    BYTE PTR [rcx],al
  407119:	add    BYTE PTR [rax],al
  40711b:	add    BYTE PTR [rcx],al
  40711d:	add    BYTE PTR [rax],al
  40711f:	add    BYTE PTR [rcx],al
  407121:	add    BYTE PTR [rax],al
  407123:	add    BYTE PTR [rcx],al
  407125:	(bad)  
  407126:	add    eax,DWORD PTR [rax]
  407128:	(bad)  
  407129:	(bad)  
  40712b:	xor    BYTE PTR [rcx],al
  40712d:	(bad)  
  40712e:	add    BYTE PTR [rax],al
  407130:	add    DWORD PTR [rdi+rax*1],ecx
  407133:	add    BYTE PTR [rdx+riz*4],cl
  407136:	or     BYTE PTR [rax],dh
  407138:	(bad)  
  407139:	(bad)  
  40713a:	(bad)  
  40713b:	jo     0x407142
  40713d:	push   rax
  40713e:	add    al,0xc0
  407140:	add    dl,al
  407142:	add    BYTE PTR [rax],al
  407144:	add    DWORD PTR [rcx],edx
  407146:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e235d
  40714c:	or     dh,BYTE PTR [rax]
  40714e:	or     DWORD PTR [rax+0x8],esp
  407151:	jo     0x40715a
  407153:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220752a
  40715a:	add    BYTE PTR [rax],al
  40715c:	add    DWORD PTR [rcx+rax*1],eax
  40715f:	add    BYTE PTR [rdx+rax*2],al
  407162:	add    BYTE PTR [rax],al
  407164:	add    DWORD PTR [rdx],ecx
  407166:	(bad)  
  407167:	add    BYTE PTR [rdx],cl
  407169:	xor    al,BYTE PTR [rsi]
  40716b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b075d1
  407171:	push   rax
  407172:	add    al,al
  407174:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245717c
  40717a:	add    DWORD PTR [rax],esi
  40717c:	add    DWORD PTR [rax],ecx
  40717e:	add    eax,0x4420800
  407183:	xor    BYTE PTR [rbx],al
  407185:	(bad)  
  407186:	add    dh,BYTE PTR [rax+0x1]
  407189:	push   rax
  40718a:	add    BYTE PTR [rax],al
  40718c:	add    DWORD PTR [rdi],eax
  40718e:	add    al,0x0
  407190:	(bad)  
  407191:	xor    al,BYTE PTR [rbx]
  407193:	xor    BYTE PTR [rdx],al
  407195:	(bad)  
  407196:	add    DWORD PTR [rax+0x1],esi
  407199:	add    eax,0x32050002
  40719e:	add    DWORD PTR [rax],esi
  4071a0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324571a8
  4071a6:	add    DWORD PTR [rax],esi
  4071a8:	add    DWORD PTR [rax],eax
  4071aa:	add    BYTE PTR [rax],al
  4071ac:	add    DWORD PTR [rax],eax
  4071ae:	add    BYTE PTR [rax],al
  4071b0:	add    DWORD PTR [rax],eax
  4071b2:	add    BYTE PTR [rax],al
  4071b4:	add    DWORD PTR [rdi],eax
  4071b6:	add    al,0x0
  4071b8:	(bad)  
  4071b9:	xor    al,BYTE PTR [rbx]
  4071bb:	xor    BYTE PTR [rdx],al
  4071bd:	(bad)  
  4071be:	add    DWORD PTR [rax+0x1],esi
  4071c1:	(bad)  
  4071c2:	add    eax,DWORD PTR [rax]
  4071c4:	(bad)  
  4071c5:	rex.X add sil,BYTE PTR [rax]
  4071c8:	add    DWORD PTR [rax+0x0],esp
  4071cb:	add    BYTE PTR [rcx],al
  4071cd:	add    eax,0x32050002
  4071d2:	add    DWORD PTR [rax],esi
  4071d4:	add    DWORD PTR [rdi],eax
  4071d6:	add    al,0x0
  4071d8:	(bad)  
  4071d9:	xor    al,BYTE PTR [rbx]
  4071db:	xor    BYTE PTR [rdx],al
  4071dd:	(bad)  
  4071de:	add    DWORD PTR [rax+0x1],esi
  4071e1:	(bad)  
  4071e2:	add    eax,DWORD PTR [rax]
  4071e4:	(bad)  
  4071e5:	rex.X add sil,BYTE PTR [rax]
  4071e8:	add    DWORD PTR [rax+0x0],esp
  4071eb:	add    BYTE PTR [rcx],al
  4071ed:	(bad)  
  4071ee:	add    eax,DWORD PTR [rax]
  4071f0:	(bad)  
  4071f1:	rex.X add sil,BYTE PTR [rax]
  4071f4:	add    DWORD PTR [rax+0x0],esp
  4071f7:	add    BYTE PTR [rcx],al
  4071f9:	or     BYTE PTR [rip+0x4420800],al        # 0x48279ff
  4071ff:	xor    BYTE PTR [rbx],al
  407201:	(bad)  
  407202:	add    dh,BYTE PTR [rax+0x1]
  407205:	push   rax
  407206:	add    BYTE PTR [rax],al
  407208:	add    DWORD PTR [rax],ecx
  40720a:	(bad)  
  40720b:	add    BYTE PTR [rax],cl
  40720d:	xor    BYTE PTR [rdi],al
  40720f:	(bad)  
  407210:	(bad)  
  407211:	jo     0x407218
  407213:	push   rax
  407214:	add    al,0xc0
  407216:	add    dl,al
  407218:	add    DWORD PTR [rdi],eax
  40721a:	add    al,0x0
  40721c:	(bad)  
  40721d:	push   rdx
  40721e:	add    esi,DWORD PTR [rax]
  407220:	add    ah,BYTE PTR [rax+0x1]
  407223:	jo     0x407226
  407225:	adc    BYTE PTR [rcx],cl
  407227:	add    BYTE PTR [rax],dl
  407229:	(bad)  
  40722a:	or     al,0x30
  40722c:	or     esp,DWORD PTR [rax+0xa]
  40722f:	jo     0x40723a
  407231:	push   rax
  407232:	or     al,al
  407234:	(bad)  
  407235:	rol    BYTE PTR [rax+riz*8],1
  407238:	add    dh,al
  40723a:	add    BYTE PTR [rax],al
  40723c:	add    DWORD PTR [rax],edx
  40723e:	or     DWORD PTR [rax],eax
  407240:	adc    BYTE PTR [rdx+0xc],ah
  407243:	xor    BYTE PTR [rbx],cl
  407245:	(bad)  
  407246:	or     dh,BYTE PTR [rax+0x9]
  407249:	push   rax
  40724a:	or     al,al
  40724c:	(bad)  
  40724d:	rol    BYTE PTR [rax+riz*8],1
  407250:	add    dh,al
  407252:	add    BYTE PTR [rax],al
  407254:	add    DWORD PTR [rcx+rax*1],eax
  407257:	add    BYTE PTR [rdx+riz*2],al
  40725a:	add    BYTE PTR [rax],al
  40725c:	add    DWORD PTR [rcx+rax*1],eax
  40725f:	add    BYTE PTR [rdx+riz*2],al
  407262:	add    BYTE PTR [rax],al
  407264:	add    DWORD PTR [rcx+rax*1],eax
  407267:	add    BYTE PTR [rdx+riz*2],al
  40726a:	add    BYTE PTR [rax],al
  40726c:	add    DWORD PTR [rax],eax
  40726e:	add    BYTE PTR [rax],al
  407270:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	push   rax
  409001:	nop
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	xchg   esp,eax
  40900d:	(bad)  
  40900e:	add    BYTE PTR [rax],al
  409010:	rcl    BYTE PTR [rdx-0x6f080000],1
	...
  40901e:	add    BYTE PTR [rax],al
  409020:	add    al,0x9b
  409022:	add    BYTE PTR [rax],al
  409024:	js     0x408fb9
  409026:	add    BYTE PTR [rax],al
  409028:	mov    eax,0x91
  40902d:	add    BYTE PTR [rax],al
  40902f:	add    BYTE PTR [rax],al
  409031:	add    BYTE PTR [rax],al
  409033:	add    BYTE PTR [rbx+rbx*4-0x6bc80000],bl
	...
  40904e:	add    BYTE PTR [rax],al
  409050:	push   rax
  409051:	xchg   ebp,eax
  409052:	add    BYTE PTR [rax],al
  409054:	add    BYTE PTR [rax],al
  409056:	add    BYTE PTR [rax],al
  409058:	push   0x95
  40905d:	add    BYTE PTR [rax],al
  40905f:	add    BYTE PTR [rax+0x95],al
  409065:	add    BYTE PTR [rax],al
  409067:	add    BYTE PTR [rbp+rdx*4+0x0],cl
  40906e:	add    BYTE PTR [rax],al
  409070:	pushf  
  409071:	xchg   ebp,eax
  409072:	add    BYTE PTR [rax],al
  409074:	add    BYTE PTR [rax],al
  409076:	add    BYTE PTR [rax],al
  409078:	mov    ah,0x95
  40907a:	add    BYTE PTR [rax],al
  40907c:	add    BYTE PTR [rax],al
  40907e:	add    BYTE PTR [rax],al
  409080:	(bad)  
  409081:	xchg   ebp,eax
  409082:	add    BYTE PTR [rax],al
  409084:	add    BYTE PTR [rax],al
  409086:	add    BYTE PTR [rax],al
  409088:	fcom   DWORD PTR [rbp+0x0]
  40908e:	add    BYTE PTR [rax],al
  409090:	in     al,dx
  409091:	xchg   ebp,eax
  409092:	add    BYTE PTR [rax],al
  409094:	add    BYTE PTR [rax],al
  409096:	add    BYTE PTR [rax],al
  409098:	add    al,0x96
  40909a:	add    BYTE PTR [rax],al
  40909c:	add    BYTE PTR [rax],al
  40909e:	add    BYTE PTR [rax],al
  4090a0:	adc    al,0x96
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	add    BYTE PTR [rax],al
  4090a6:	add    BYTE PTR [rax],al
  4090a8:	and    al,0x96
  4090aa:	add    BYTE PTR [rax],al
  4090ac:	add    BYTE PTR [rax],al
  4090ae:	add    BYTE PTR [rax],al
  4090b0:	cmp    BYTE PTR [rsi+0x0],dl
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	rex.WR xchg rsi,rax
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	add    BYTE PTR [rax],al
  4090be:	add    BYTE PTR [rax],al
  4090c0:	fs xchg esi,eax
  4090c2:	add    BYTE PTR [rax],al
  4090c4:	add    BYTE PTR [rax],al
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	js     0x409060
  4090ca:	add    BYTE PTR [rax],al
  4090cc:	add    BYTE PTR [rax],al
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	mov    WORD PTR [rsi+0x0],ss
  4090d6:	add    BYTE PTR [rax],al
  4090d8:	movabs al,ds:0xb400000000000096
  4090e1:	xchg   esi,eax
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	add    BYTE PTR [rax],al
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	enter  0x96,0x0
	...
  4090f8:	(bad)  
  4090f9:	xchg   esi,eax
  4090fa:	add    BYTE PTR [rax],al
  4090fc:	add    BYTE PTR [rax],al
  4090fe:	add    BYTE PTR [rax],al
  409100:	in     al,dx
  409101:	xchg   esi,eax
  409102:	add    BYTE PTR [rax],al
  409104:	add    BYTE PTR [rax],al
  409106:	add    BYTE PTR [rax],al
  409108:	add    al,0x97
  40910a:	add    BYTE PTR [rax],al
  40910c:	add    BYTE PTR [rax],al
  40910e:	add    BYTE PTR [rax],al
  409110:	sbb    BYTE PTR [rdi+0x0],dl
  409116:	add    BYTE PTR [rax],al
  409118:	cs xchg edi,eax
  40911a:	add    BYTE PTR [rax],al
  40911c:	add    BYTE PTR [rax],al
  40911e:	add    BYTE PTR [rax],al
  409120:	rex.R xchg edi,eax
  409122:	add    BYTE PTR [rax],al
  409124:	add    BYTE PTR [rax],al
  409126:	add    BYTE PTR [rax],al
  409128:	push   rsp
  409129:	xchg   edi,eax
  40912a:	add    BYTE PTR [rax],al
  40912c:	add    BYTE PTR [rax],al
  40912e:	add    BYTE PTR [rax],al
  409130:	xchg   di,ax
  409132:	add    BYTE PTR [rax],al
  409134:	add    BYTE PTR [rax],al
  409136:	add    BYTE PTR [rax],al
  409138:	adc    BYTE PTR [rdi+0x0],0x0
  40913f:	add    BYTE PTR [rax+0x97],dl
  409145:	add    BYTE PTR [rax],al
  409147:	add    BYTE PTR [rdi+rdx*4+0x0],ch
  40914e:	add    BYTE PTR [rax],al
  409150:	(bad)  
  409151:	xchg   edi,eax
  409152:	add    BYTE PTR [rax],al
  409154:	add    BYTE PTR [rax],al
  409156:	add    BYTE PTR [rax],al
  409158:	ficom  WORD PTR [rdi+0x0]
  40915e:	add    BYTE PTR [rax],al
  409160:	hlt    
  409161:	xchg   edi,eax
  409162:	add    BYTE PTR [rax],al
  409164:	add    BYTE PTR [rax],al
  409166:	add    BYTE PTR [rax],al
  409168:	or     BYTE PTR [rax+0x0],bl
  40916e:	add    BYTE PTR [rax],al
  409170:	and    bl,BYTE PTR [rax+0x0]
  409176:	add    BYTE PTR [rax],al
  409178:	ss cwde 
  40917a:	add    BYTE PTR [rax],al
  40917c:	add    BYTE PTR [rax],al
  40917e:	add    BYTE PTR [rax],al
  409180:	push   rsp
  409181:	cwde   
  409182:	add    BYTE PTR [rax],al
  409184:	add    BYTE PTR [rax],al
  409186:	add    BYTE PTR [rax],al
  409188:	pop    rsp
  409189:	cwde   
  40918a:	add    BYTE PTR [rax],al
  40918c:	add    BYTE PTR [rax],al
  40918e:	add    BYTE PTR [rax],al
  409190:	jo     0x40912a
  409192:	add    BYTE PTR [rax],al
  409194:	add    BYTE PTR [rax],al
  409196:	add    BYTE PTR [rax],al
  409198:	jle    0x409132
  40919a:	add    BYTE PTR [rax],al
  40919c:	add    BYTE PTR [rax],al
  40919e:	add    BYTE PTR [rax],al
  4091a0:	(bad)  
  4091a1:	cwde   
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	add    BYTE PTR [rax],al
  4091a6:	add    BYTE PTR [rax],al
  4091a8:	lods   al,BYTE PTR ds:[rsi]
  4091a9:	cwde   
	...
  4091b6:	add    BYTE PTR [rax],al
  4091b8:	mov    esp,0x98
  4091bd:	add    BYTE PTR [rax],al
  4091bf:	add    ah,dl
  4091c1:	cwde   
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	add    BYTE PTR [rax],al
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	ficomp WORD PTR [rax+0x0]
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	in     al,dx
  4091d1:	cwde   
  4091d2:	add    BYTE PTR [rax],al
  4091d4:	add    BYTE PTR [rax],al
  4091d6:	add    BYTE PTR [rax],al
  4091d8:	cld    
  4091d9:	cwde   
  4091da:	add    BYTE PTR [rax],al
  4091dc:	add    BYTE PTR [rax],al
  4091de:	add    BYTE PTR [rax],al
  4091e0:	or     BYTE PTR [rcx+0x0],bl
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	(bad)  
  4091e9:	cdq    
  4091ea:	add    BYTE PTR [rax],al
  4091ec:	add    BYTE PTR [rax],al
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	es cdq 
  4091f2:	add    BYTE PTR [rax],al
  4091f4:	add    BYTE PTR [rax],al
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	cmp    BYTE PTR [rcx+0x0],bl
  4091fe:	add    BYTE PTR [rax],al
  409200:	rex.WR cqo 
  409202:	add    BYTE PTR [rax],al
  409204:	add    BYTE PTR [rax],al
  409206:	add    BYTE PTR [rax],al
  409208:	push   rsi
  409209:	cdq    
  40920a:	add    BYTE PTR [rax],al
  40920c:	add    BYTE PTR [rax],al
  40920e:	add    BYTE PTR [rax],al
  409210:	fs cdq 
  409212:	add    BYTE PTR [rax],al
  409214:	add    BYTE PTR [rax],al
  409216:	add    BYTE PTR [rax],al
  409218:	outs   dx,BYTE PTR ds:[rsi]
  409219:	cdq    
  40921a:	add    BYTE PTR [rax],al
  40921c:	add    BYTE PTR [rax],al
  40921e:	add    BYTE PTR [rax],al
  409220:	js     0x4091bb
  409222:	add    BYTE PTR [rax],al
  409224:	add    BYTE PTR [rax],al
  409226:	add    BYTE PTR [rax],al
  409228:	test   BYTE PTR [rcx+0x0],bl
  40922e:	add    BYTE PTR [rax],al
  409230:	mov    WORD PTR [rcx+0x0],ds
  409236:	add    BYTE PTR [rax],al
  409238:	xchg   esi,eax
  409239:	cdq    
  40923a:	add    BYTE PTR [rax],al
  40923c:	add    BYTE PTR [rax],al
  40923e:	add    BYTE PTR [rax],al
  409240:	movabs al,ds:0xa800000000000099
  409249:	cdq    
  40924a:	add    BYTE PTR [rax],al
  40924c:	add    BYTE PTR [rax],al
  40924e:	add    BYTE PTR [rax],al
  409250:	mov    dl,0x99
  409252:	add    BYTE PTR [rax],al
  409254:	add    BYTE PTR [rax],al
  409256:	add    BYTE PTR [rax],al
  409258:	mov    edx,0x99
  40925d:	add    BYTE PTR [rax],al
  40925f:	add    ah,al
  409261:	cdq    
  409262:	add    BYTE PTR [rax],al
  409264:	add    BYTE PTR [rax],al
  409266:	add    BYTE PTR [rax],al
  409268:	int3   
  409269:	cdq    
  40926a:	add    BYTE PTR [rax],al
  40926c:	add    BYTE PTR [rax],al
  40926e:	add    BYTE PTR [rax],al
  409270:	(bad)  
  409271:	cdq    
  409272:	add    BYTE PTR [rax],al
  409274:	add    BYTE PTR [rax],al
  409276:	add    BYTE PTR [rax],al
  409278:	ficomp WORD PTR [rcx+0x0]
  40927e:	add    BYTE PTR [rax],al
  409280:	call   0x40931e
  409285:	add    BYTE PTR [rax],al
  409287:	add    dl,dh
  409289:	cdq    
  40928a:	add    BYTE PTR [rax],al
  40928c:	add    BYTE PTR [rax],al
  40928e:	add    BYTE PTR [rax],al
  409290:	cld    
  409291:	cdq    
  409292:	add    BYTE PTR [rax],al
  409294:	add    BYTE PTR [rax],al
  409296:	add    BYTE PTR [rax],al
  409298:	(bad)  
  409299:	(bad)  
  40929a:	add    BYTE PTR [rax],al
  40929c:	add    BYTE PTR [rax],al
  40929e:	add    BYTE PTR [rax],al
  4092a0:	adc    BYTE PTR [rdx+0x0],bl
  4092a6:	add    BYTE PTR [rax],al
  4092a8:	sbb    bl,BYTE PTR [rdx+0x0]
  4092ae:	add    BYTE PTR [rax],al
  4092b0:	and    al,0x9a
  4092b2:	add    BYTE PTR [rax],al
  4092b4:	add    BYTE PTR [rax],al
  4092b6:	add    BYTE PTR [rax],al
  4092b8:	cs (bad) 
  4092ba:	add    BYTE PTR [rax],al
  4092bc:	add    BYTE PTR [rax],al
  4092be:	add    BYTE PTR [rax],al
  4092c0:	cmp    bl,BYTE PTR [rdx+0x0]
	...
  4092ce:	add    BYTE PTR [rax],al
  4092d0:	push   rax
  4092d1:	xchg   ebp,eax
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	add    BYTE PTR [rax],al
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	push   0x95
  4092dd:	add    BYTE PTR [rax],al
  4092df:	add    BYTE PTR [rax+0x95],al
  4092e5:	add    BYTE PTR [rax],al
  4092e7:	add    BYTE PTR [rbp+rdx*4+0x0],cl
  4092ee:	add    BYTE PTR [rax],al
  4092f0:	pushf  
  4092f1:	xchg   ebp,eax
  4092f2:	add    BYTE PTR [rax],al
  4092f4:	add    BYTE PTR [rax],al
  4092f6:	add    BYTE PTR [rax],al
  4092f8:	mov    ah,0x95
  4092fa:	add    BYTE PTR [rax],al
  4092fc:	add    BYTE PTR [rax],al
  4092fe:	add    BYTE PTR [rax],al
  409300:	(bad)  
  409301:	xchg   ebp,eax
  409302:	add    BYTE PTR [rax],al
  409304:	add    BYTE PTR [rax],al
  409306:	add    BYTE PTR [rax],al
  409308:	fcom   DWORD PTR [rbp+0x0]
  40930e:	add    BYTE PTR [rax],al
  409310:	in     al,dx
  409311:	xchg   ebp,eax
  409312:	add    BYTE PTR [rax],al
  409314:	add    BYTE PTR [rax],al
  409316:	add    BYTE PTR [rax],al
  409318:	add    al,0x96
  40931a:	add    BYTE PTR [rax],al
  40931c:	add    BYTE PTR [rax],al
  40931e:	add    BYTE PTR [rax],al
  409320:	adc    al,0x96
  409322:	add    BYTE PTR [rax],al
  409324:	add    BYTE PTR [rax],al
  409326:	add    BYTE PTR [rax],al
  409328:	and    al,0x96
  40932a:	add    BYTE PTR [rax],al
  40932c:	add    BYTE PTR [rax],al
  40932e:	add    BYTE PTR [rax],al
  409330:	cmp    BYTE PTR [rsi+0x0],dl
  409336:	add    BYTE PTR [rax],al
  409338:	rex.WR xchg rsi,rax
  40933a:	add    BYTE PTR [rax],al
  40933c:	add    BYTE PTR [rax],al
  40933e:	add    BYTE PTR [rax],al
  409340:	fs xchg esi,eax
  409342:	add    BYTE PTR [rax],al
  409344:	add    BYTE PTR [rax],al
  409346:	add    BYTE PTR [rax],al
  409348:	js     0x4092e0
  40934a:	add    BYTE PTR [rax],al
  40934c:	add    BYTE PTR [rax],al
  40934e:	add    BYTE PTR [rax],al
  409350:	mov    WORD PTR [rsi+0x0],ss
  409356:	add    BYTE PTR [rax],al
  409358:	movabs al,ds:0xb400000000000096
  409361:	xchg   esi,eax
  409362:	add    BYTE PTR [rax],al
  409364:	add    BYTE PTR [rax],al
  409366:	add    BYTE PTR [rax],al
  409368:	enter  0x96,0x0
	...
  409378:	(bad)  
  409379:	xchg   esi,eax
  40937a:	add    BYTE PTR [rax],al
  40937c:	add    BYTE PTR [rax],al
  40937e:	add    BYTE PTR [rax],al
  409380:	in     al,dx
  409381:	xchg   esi,eax
  409382:	add    BYTE PTR [rax],al
  409384:	add    BYTE PTR [rax],al
  409386:	add    BYTE PTR [rax],al
  409388:	add    al,0x97
  40938a:	add    BYTE PTR [rax],al
  40938c:	add    BYTE PTR [rax],al
  40938e:	add    BYTE PTR [rax],al
  409390:	sbb    BYTE PTR [rdi+0x0],dl
  409396:	add    BYTE PTR [rax],al
  409398:	cs xchg edi,eax
  40939a:	add    BYTE PTR [rax],al
  40939c:	add    BYTE PTR [rax],al
  40939e:	add    BYTE PTR [rax],al
  4093a0:	rex.R xchg edi,eax
  4093a2:	add    BYTE PTR [rax],al
  4093a4:	add    BYTE PTR [rax],al
  4093a6:	add    BYTE PTR [rax],al
  4093a8:	push   rsp
  4093a9:	xchg   edi,eax
  4093aa:	add    BYTE PTR [rax],al
  4093ac:	add    BYTE PTR [rax],al
  4093ae:	add    BYTE PTR [rax],al
  4093b0:	xchg   di,ax
  4093b2:	add    BYTE PTR [rax],al
  4093b4:	add    BYTE PTR [rax],al
  4093b6:	add    BYTE PTR [rax],al
  4093b8:	adc    BYTE PTR [rdi+0x0],0x0
  4093bf:	add    BYTE PTR [rax+0x97],dl
  4093c5:	add    BYTE PTR [rax],al
  4093c7:	add    BYTE PTR [rdi+rdx*4+0x0],ch
  4093ce:	add    BYTE PTR [rax],al
  4093d0:	(bad)  
  4093d1:	xchg   edi,eax
  4093d2:	add    BYTE PTR [rax],al
  4093d4:	add    BYTE PTR [rax],al
  4093d6:	add    BYTE PTR [rax],al
  4093d8:	ficom  WORD PTR [rdi+0x0]
  4093de:	add    BYTE PTR [rax],al
  4093e0:	hlt    
  4093e1:	xchg   edi,eax
  4093e2:	add    BYTE PTR [rax],al
  4093e4:	add    BYTE PTR [rax],al
  4093e6:	add    BYTE PTR [rax],al
  4093e8:	or     BYTE PTR [rax+0x0],bl
  4093ee:	add    BYTE PTR [rax],al
  4093f0:	and    bl,BYTE PTR [rax+0x0]
  4093f6:	add    BYTE PTR [rax],al
  4093f8:	ss cwde 
  4093fa:	add    BYTE PTR [rax],al
  4093fc:	add    BYTE PTR [rax],al
  4093fe:	add    BYTE PTR [rax],al
  409400:	push   rsp
  409401:	cwde   
  409402:	add    BYTE PTR [rax],al
  409404:	add    BYTE PTR [rax],al
  409406:	add    BYTE PTR [rax],al
  409408:	pop    rsp
  409409:	cwde   
  40940a:	add    BYTE PTR [rax],al
  40940c:	add    BYTE PTR [rax],al
  40940e:	add    BYTE PTR [rax],al
  409410:	jo     0x4093aa
  409412:	add    BYTE PTR [rax],al
  409414:	add    BYTE PTR [rax],al
  409416:	add    BYTE PTR [rax],al
  409418:	jle    0x4093b2
  40941a:	add    BYTE PTR [rax],al
  40941c:	add    BYTE PTR [rax],al
  40941e:	add    BYTE PTR [rax],al
  409420:	(bad)  
  409421:	cwde   
  409422:	add    BYTE PTR [rax],al
  409424:	add    BYTE PTR [rax],al
  409426:	add    BYTE PTR [rax],al
  409428:	lods   al,BYTE PTR ds:[rsi]
  409429:	cwde   
	...
  409436:	add    BYTE PTR [rax],al
  409438:	mov    esp,0x98
  40943d:	add    BYTE PTR [rax],al
  40943f:	add    ah,dl
  409441:	cwde   
  409442:	add    BYTE PTR [rax],al
  409444:	add    BYTE PTR [rax],al
  409446:	add    BYTE PTR [rax],al
  409448:	ficomp WORD PTR [rax+0x0]
  40944e:	add    BYTE PTR [rax],al
  409450:	in     al,dx
  409451:	cwde   
  409452:	add    BYTE PTR [rax],al
  409454:	add    BYTE PTR [rax],al
  409456:	add    BYTE PTR [rax],al
  409458:	cld    
  409459:	cwde   
  40945a:	add    BYTE PTR [rax],al
  40945c:	add    BYTE PTR [rax],al
  40945e:	add    BYTE PTR [rax],al
  409460:	or     BYTE PTR [rcx+0x0],bl
  409466:	add    BYTE PTR [rax],al
  409468:	(bad)  
  409469:	cdq    
  40946a:	add    BYTE PTR [rax],al
  40946c:	add    BYTE PTR [rax],al
  40946e:	add    BYTE PTR [rax],al
  409470:	es cdq 
  409472:	add    BYTE PTR [rax],al
  409474:	add    BYTE PTR [rax],al
  409476:	add    BYTE PTR [rax],al
  409478:	cmp    BYTE PTR [rcx+0x0],bl
  40947e:	add    BYTE PTR [rax],al
  409480:	rex.WR cqo 
  409482:	add    BYTE PTR [rax],al
  409484:	add    BYTE PTR [rax],al
  409486:	add    BYTE PTR [rax],al
  409488:	push   rsi
  409489:	cdq    
  40948a:	add    BYTE PTR [rax],al
  40948c:	add    BYTE PTR [rax],al
  40948e:	add    BYTE PTR [rax],al
  409490:	fs cdq 
  409492:	add    BYTE PTR [rax],al
  409494:	add    BYTE PTR [rax],al
  409496:	add    BYTE PTR [rax],al
  409498:	outs   dx,BYTE PTR ds:[rsi]
  409499:	cdq    
  40949a:	add    BYTE PTR [rax],al
  40949c:	add    BYTE PTR [rax],al
  40949e:	add    BYTE PTR [rax],al
  4094a0:	js     0x40943b
  4094a2:	add    BYTE PTR [rax],al
  4094a4:	add    BYTE PTR [rax],al
  4094a6:	add    BYTE PTR [rax],al
  4094a8:	test   BYTE PTR [rcx+0x0],bl
  4094ae:	add    BYTE PTR [rax],al
  4094b0:	mov    WORD PTR [rcx+0x0],ds
  4094b6:	add    BYTE PTR [rax],al
  4094b8:	xchg   esi,eax
  4094b9:	cdq    
  4094ba:	add    BYTE PTR [rax],al
  4094bc:	add    BYTE PTR [rax],al
  4094be:	add    BYTE PTR [rax],al
  4094c0:	movabs al,ds:0xa800000000000099
  4094c9:	cdq    
  4094ca:	add    BYTE PTR [rax],al
  4094cc:	add    BYTE PTR [rax],al
  4094ce:	add    BYTE PTR [rax],al
  4094d0:	mov    dl,0x99
  4094d2:	add    BYTE PTR [rax],al
  4094d4:	add    BYTE PTR [rax],al
  4094d6:	add    BYTE PTR [rax],al
  4094d8:	mov    edx,0x99
  4094dd:	add    BYTE PTR [rax],al
  4094df:	add    ah,al
  4094e1:	cdq    
  4094e2:	add    BYTE PTR [rax],al
  4094e4:	add    BYTE PTR [rax],al
  4094e6:	add    BYTE PTR [rax],al
  4094e8:	int3   
  4094e9:	cdq    
  4094ea:	add    BYTE PTR [rax],al
  4094ec:	add    BYTE PTR [rax],al
  4094ee:	add    BYTE PTR [rax],al
  4094f0:	(bad)  
  4094f1:	cdq    
  4094f2:	add    BYTE PTR [rax],al
  4094f4:	add    BYTE PTR [rax],al
  4094f6:	add    BYTE PTR [rax],al
  4094f8:	ficomp WORD PTR [rcx+0x0]
  4094fe:	add    BYTE PTR [rax],al
  409500:	call   0x40959e
  409505:	add    BYTE PTR [rax],al
  409507:	add    dl,dh
  409509:	cdq    
  40950a:	add    BYTE PTR [rax],al
  40950c:	add    BYTE PTR [rax],al
  40950e:	add    BYTE PTR [rax],al
  409510:	cld    
  409511:	cdq    
  409512:	add    BYTE PTR [rax],al
  409514:	add    BYTE PTR [rax],al
  409516:	add    BYTE PTR [rax],al
  409518:	(bad)  
  409519:	(bad)  
  40951a:	add    BYTE PTR [rax],al
  40951c:	add    BYTE PTR [rax],al
  40951e:	add    BYTE PTR [rax],al
  409520:	adc    BYTE PTR [rdx+0x0],bl
  409526:	add    BYTE PTR [rax],al
  409528:	sbb    bl,BYTE PTR [rdx+0x0]
  40952e:	add    BYTE PTR [rax],al
  409530:	and    al,0x9a
  409532:	add    BYTE PTR [rax],al
  409534:	add    BYTE PTR [rax],al
  409536:	add    BYTE PTR [rax],al
  409538:	cs (bad) 
  40953a:	add    BYTE PTR [rax],al
  40953c:	add    BYTE PTR [rax],al
  40953e:	add    BYTE PTR [rax],al
  409540:	cmp    bl,BYTE PTR [rdx+0x0]
	...
  40954e:	add    BYTE PTR [rax],al
  409550:	(bad)  
  409551:	add    BYTE PTR [rsi+0x63],al
  409554:	rex.XB outs dx,DWORD PTR ds:[rsi]
  409556:	outs   dx,BYTE PTR ds:[rsi]
  409557:	imul   sp,WORD PTR [rdi+0x53],0x6275
  40955d:	jae    0x4095d3
  40955f:	imul   esi,DWORD PTR [rbp+rsi*2+0x74],0x65
  409567:	add    BYTE PTR [rdx+0x0],al
  40956a:	movsxd r8d,DWORD PTR [rbp+r12*2+0x66]
  40956f:	(bad)  
  409570:	jne    0x4095de
  409572:	je     0x4095c7
  409574:	jne    0x4095d8
  409576:	jae    0x4095ec
  409578:	imul   esi,DWORD PTR [rbp+rsi*2+0x74],0x65
  409580:	rex.WRXB add BYTE PTR [r14+0x63],r8b
  409584:	rex.RX imul r13d,DWORD PTR [rsi+0x69],0x0
  40958c:	push   rcx
  40958d:	add    BYTE PTR [rsi+0x63],al
  409590:	rex.RX outs dx,DWORD PTR ds:[rsi]
  409592:	outs   dx,BYTE PTR ds:[rsi]
  409593:	je     0x4095e2
  409595:	(bad)  
  409596:	je     0x4095fb
  409598:	push   0x52000000
  40959d:	add    BYTE PTR [rsi+0x63],al
  4095a0:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4095a2:	outs   dx,BYTE PTR ds:[rsi]
  4095a3:	je     0x4095f7
  4095a5:	outs   dx,BYTE PTR gs:[rsi]
  4095a7:	fs gs jb 0x4095fb
  4095ab:	jb     0x409612
  4095ad:	jo     0x409610
  4095af:	jb     0x409616
  4095b1:	add    BYTE PTR [rax],al
  4095b3:	add    BYTE PTR [rbx+0x0],dl
  4095b6:	rex.RX movsxd r8d,DWORD PTR [rsi+0x6f]
  4095ba:	outs   dx,BYTE PTR ds:[rsi]
  4095bb:	je     0x409610
  4095bd:	gs je  0x409601
  4095c0:	fs add BYTE PTR fs:[rax],al
  4095c4:	push   rsp
  4095c5:	add    BYTE PTR [rsi+0x63],al
  4095c8:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4095ca:	outs   dx,BYTE PTR ds:[rsi]
  4095cb:	je     0x409620
  4095cd:	gs je  0x409613
  4095d0:	jb     0x409637
  4095d2:	(bad)  
  4095d3:	je     0x40963a
  4095d5:	add    BYTE PTR [rax],al
  4095d7:	add    BYTE PTR [rbp+0x0],dl
  4095da:	rex.RX movsxd r8d,DWORD PTR [rsi+0x6f]
  4095de:	outs   dx,BYTE PTR ds:[rsi]
  4095df:	je     0x409634
  4095e1:	gs je  0x409628
  4095e4:	gs jae 0x40965b
  4095e7:	jb     0x409658
  4095e9:	jns    0x4095eb
  4095eb:	add    BYTE PTR [rdx+0x0],bl
  4095ee:	rex.RX movsxd r8d,DWORD PTR [rsi+0x6f]
  4095f2:	outs   dx,BYTE PTR ds:[rsi]
  4095f3:	je     0x409648
  4095f5:	gs je  0x40964b
  4095f8:	outs   dx,DWORD PTR ds:[rsi]
  4095f9:	jb     0x40966f
  4095fb:	rex.R
  4095fc:	gs jae 0x409673
  4095ff:	jb     0x409670
  409601:	jns    0x409603
  409603:	add    BYTE PTR [rbx+0x0],bl
  409606:	rex.RX movsxd r8d,DWORD PTR [rsi+0x6f]
  40960a:	outs   dx,BYTE PTR ds:[rsi]
  40960b:	je     0x409660
  40960d:	outs   dx,DWORD PTR ds:[rsi]
  40960e:	jb     0x409684
  409610:	add    BYTE PTR [rax],al
  409612:	add    BYTE PTR [rax],al
  409614:	add    DWORD PTR [rax],0x614e6346
  40961a:	ins    DWORD PTR es:[rdi],dx
  40961b:	gs push rax
  40961d:	(bad)  
  40961e:	jb     0x409693
  409620:	add    BYTE PTR gs:[rax],al
  409623:	add    BYTE PTR [rdi+0x4f634600],al
  409629:	(bad)  
  40962a:	push   0x65
  40962c:	movsxd esi,DWORD PTR [rbx+rdx*2+0x65]
  409630:	je     0x409673
  409632:	fs add BYTE PTR fs:[rax],al
  409636:	add    BYTE PTR [rax],al
  409638:	mov    DWORD PTR [rax],eax
  40963a:	rex.RX movsxd r9d,DWORD PTR [rdi+0x62]
  40963e:	push   0x65
  409640:	movsxd esi,DWORD PTR [rbx+rdx*2+0x65]
  409644:	je     0x409689
  409646:	jb     0x4096ad
  409648:	(bad)  
  409649:	je     0x4096b0
  40964b:	add    BYTE PTR [rdx+0x4f634600],cl
  409651:	(bad)  
  409652:	push   0x65
  409654:	movsxd esi,DWORD PTR [rbx+rdx*2+0x65]
  409658:	je     0x40969e
  40965a:	gs jae 0x4096d1
  40965d:	jb     0x4096ce
  40965f:	jns    0x409661
  409661:	add    BYTE PTR [rax],al
  409663:	add    BYTE PTR [rax+0x50634600],bl
  409669:	(bad)  
  40966a:	je     0x4096e0
  40966c:	gs jb  0x4096dd
  40966f:	rex.XB jb 0x4096d7
  409672:	(bad)  
  409673:	je     0x4096da
  409675:	add    BYTE PTR [rax],al
  409677:	add    BYTE PTR [rdx+0x50634600],bl
  40967d:	(bad)  
  40967e:	je     0x4096f4
  409680:	gs jb  0x4096f1
  409683:	rex.R
  409684:	gs jae 0x4096fb
  409687:	jb     0x4096f8
  409689:	jns    0x40968b
  40968b:	add    BYTE PTR [rsi+0x50634600],bl
  409691:	(bad)  
  409692:	je     0x409708
  409694:	gs jb  0x409705
  409697:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x72
  4096a0:	lahf   
  4096a1:	add    BYTE PTR [rsi+0x63],al
  4096a4:	push   rax
  4096a5:	(bad)  
  4096a6:	je     0x40971c
  4096a8:	gs jb  0x409719
  4096ab:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4096ad:	jb     0x40971c
  4096af:	(bad)  
  4096b0:	je     0x4096b2
  4096b2:	add    BYTE PTR [rax],al
  4096b4:	stos   DWORD PTR es:[rdi],eax
  4096b5:	add    BYTE PTR [rsi+0x63],al
  4096b8:	push   rax
  4096b9:	(bad)  
  4096ba:	je     0x409730
  4096bc:	gs jb  0x40972d
  4096bf:	push   rax
  4096c0:	jb     0x40972b
  4096c2:	outs   dx,BYTE PTR ds:[rsi]
  4096c3:	je     0x4096c5
  4096c5:	add    BYTE PTR [rax],al
  4096c7:	add    BYTE PTR [rbx+0x53634600],bh
  4096cd:	je     0x409741
  4096cf:	rex.RX jb 0x409737
  4096d2:	gs add al,bl
  4096d5:	add    BYTE PTR [rbp+riz*2+0x6c],al
  4096d9:	gs je  0x409741
  4096dc:	rex.XB jb 0x409748
  4096df:	je     0x40974a
  4096e1:	movsxd esp,DWORD PTR [rcx+0x6c]
  4096e4:	push   rbx
  4096e5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4096ea:	outs   dx,BYTE PTR ds:[rsi]
  4096eb:	add    al,bh
  4096ed:	add    BYTE PTR [rbp+0x6e],al
  4096f0:	je     0x409757
  4096f2:	jb     0x409737
  4096f4:	jb     0x40975f
  4096f6:	je     0x409761
  4096f8:	movsxd esp,DWORD PTR [rcx+0x6c]
  4096fb:	push   rbx
  4096fc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409701:	outs   dx,BYTE PTR ds:[rsi]
  409702:	add    BYTE PTR [rax],al
  409704:	int    0x1
  409706:	rex.RXB
  409707:	gs je  0x40974d
  40970a:	jne    0x40977e
  40970c:	jb     0x409773
  40970e:	outs   dx,BYTE PTR ds:[rsi]
  40970f:	je     0x409761
  409711:	jb     0x409782
  409713:	movsxd esp,DWORD PTR [rbp+0x73]
  409716:	jae    0x409718
  409718:	(bad)  
  409719:	add    DWORD PTR [rdi+0x65],eax
  40971c:	je     0x409761
  40971e:	jne    0x409792
  409720:	jb     0x409787
  409722:	outs   dx,BYTE PTR ds:[rsi]
  409723:	je     0x409775
  409725:	jb     0x409796
  409727:	movsxd esp,DWORD PTR [rbp+0x73]
  40972a:	jae    0x409775
  40972c:	fs add dl,dl
  40972f:	add    DWORD PTR [rdi+0x65],eax
  409732:	je     0x409777
  409734:	jne    0x4097a8
  409736:	jb     0x40979d
  409738:	outs   dx,BYTE PTR ds:[rsi]
  409739:	je     0x40978f
  40973b:	push   0x64616572
  409740:	rex.WB
  409741:	add    BYTE PTR fs:[rax],al
  409744:	adc    BYTE PTR [rdx],al
  409746:	rex.RXB
  409747:	gs je  0x409796
  40974a:	(bad)  
  40974b:	jae    0x4097c1
  40974d:	rex.RB jb 0x4097c2
  409750:	outs   dx,DWORD PTR ds:[rsi]
  409751:	jb     0x409753
  409753:	add    BYTE PTR [rbx+0x2],dh
  409756:	rex.RXB
  409757:	gs je  0x4097ad
  40975a:	je     0x4097bd
  40975c:	jb     0x4097d2
  40975e:	jne    0x4097d0
  409760:	rex.WB outs dx,BYTE PTR ds:[rsi]
  409762:	outs   dx,WORD PTR ds:[rsi]
  409764:	add    BYTE PTR [r10+0x74654702],cl
  40976b:	push   rbx
  40976c:	jns    0x4097e1
  40976e:	je     0x4097d5
  409770:	ins    DWORD PTR es:[rdi],dx
  409771:	push   rsp
  409772:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  409779:	ins    BYTE PTR es:[rdi],dx
  40977a:	gs push rsp
  40977c:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  409783:	gs je  0x4097da
  409786:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40978d:	je     0x40978f
  40978f:	add    cl,bh
  409791:	add    cl,BYTE PTR [rcx+0x6e]
  409794:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40979c:	rex.XB jb 0x409808
  40979f:	je     0x40980a
  4097a1:	movsxd esp,DWORD PTR [rcx+0x6c]
  4097a4:	push   rbx
  4097a5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4097aa:	outs   dx,BYTE PTR ds:[rsi]
  4097ab:	add    BYTE PTR [rbx+0x3],cl
  4097ae:	rex.WR
  4097af:	gs (bad) 
  4097b1:	jbe    0x409818
  4097b3:	rex.XB jb 0x40981f
  4097b6:	je     0x409821
  4097b8:	movsxd esp,DWORD PTR [rcx+0x6c]
  4097bb:	push   rbx
  4097bc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4097c1:	outs   dx,BYTE PTR ds:[rsi]
  4097c2:	add    BYTE PTR [rax],al
  4097c4:	mov    ebx,0x65755103
  4097c9:	jb     0x409844
  4097cb:	push   rax
  4097cc:	gs jb  0x409835
  4097cf:	outs   dx,DWORD PTR ds:[rsi]
  4097d0:	jb     0x40983f
  4097d2:	(bad)  
  4097d3:	outs   dx,BYTE PTR ds:[rsi]
  4097d4:	movsxd esp,DWORD PTR [rbp+0x43]
  4097d7:	outs   dx,DWORD PTR ds:[rsi]
  4097d8:	jne    0x409848
  4097da:	je     0x409841
  4097dc:	jb     0x4097de
  4097de:	add    DWORD PTR [rdx+rdx*2],eax
  4097e1:	je     0x40984f
  4097e3:	rex.B
  4097e4:	fs fs rex.RX jne 0x409857
  4097e9:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4097ed:	outs   dx,BYTE PTR ds:[rsi]
  4097ee:	push   rsp
  4097ef:	(bad)  
  4097f0:	(bad)  
  4097f1:	ins    BYTE PTR es:[rdi],dx
  4097f2:	add    BYTE PTR gs:[rdx],al
  4097f5:	add    al,0x52
  4097f7:	je     0x409865
  4097f9:	rex.XB (bad) 
  4097fb:	jo     0x409871
  4097fd:	jne    0x409871
  4097ff:	rex.XB outs dx,DWORD PTR gs:[rsi]
  409802:	outs   dx,BYTE PTR ds:[rsi]
  409803:	je     0x40986a
  409805:	js     0x40987b
  409807:	add    BYTE PTR [rcx],cl
  409809:	add    al,0x52
  40980b:	je     0x409879
  40980d:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40980f:	outs   dx,DWORD PTR ds:[rsi]
  409810:	imul   esi,DWORD PTR [rbp+0x70],0x46
  409814:	jne    0x409884
  409816:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40981a:	outs   dx,BYTE PTR ds:[rsi]
  40981b:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40981d:	je     0x409891
  40981f:	jns    0x409821
  409821:	add    BYTE PTR [rax],dl
  409823:	add    al,0x52
  409825:	je     0x409893
  409827:	push   rsi
  409828:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40982f:	outs   dx,BYTE PTR ds:[rsi]
  409830:	ja     0x40989b
  409832:	outs   dx,BYTE PTR ds:[rsi]
  409833:	add    BYTE PTR fs:[rax],al
  409836:	lahf   
  409837:	add    al,0x53
  409839:	gs je  0x409891
  40983c:	outs   dx,BYTE PTR ds:[rsi]
  40983d:	push   0x6c646e61
  409842:	gs fs rex.RB js 0x4098aa
  409847:	gs jo  0x4098be
  40984a:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  409851:	gs jb  0x409854
  409854:	lods   al,BYTE PTR ds:[rsi]
  409855:	add    al,0x53
  409857:	ins    BYTE PTR es:[rdi],dx
  409858:	gs gs jo 0x40985c
  40985c:	mov    edx,0x72655404
  409861:	ins    DWORD PTR es:[rdi],dx
  409862:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  409869:	outs   dx,DWORD PTR ds:[rsi]
  40986a:	movsxd esp,DWORD PTR [rbp+0x73]
  40986d:	jae    0x40986f
  40986f:	add    cl,al
  409871:	add    al,0x54
  409873:	ins    BYTE PTR es:[rdi],dx
  409874:	jae    0x4098bd
  409876:	gs je  0x4098cf
  409879:	(bad)  
  40987a:	ins    BYTE PTR es:[rdi],dx
  40987b:	jne    0x4098e2
  40987d:	add    dh,cl
  40987f:	add    al,0x55
  409881:	outs   dx,BYTE PTR ds:[rsi]
  409882:	push   0x6c646e61
  409887:	gs fs rex.RB js 0x4098ef
  40988c:	gs jo  0x409903
  40988f:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  409896:	gs jb  0x409899
  409899:	add    ah,ch
  40989b:	add    al,0x56
  40989d:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  4098a4:	jb     0x409915
  4098a6:	je     0x40990d
  4098a8:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  4098ac:	out    dx,al
  4098ad:	add    al,0x56
  4098af:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4098b6:	jne    0x40991d
  4098b8:	jb     0x409933
  4098ba:	add    BYTE PTR [rax],al
  4098bc:	(bad)  
  4098bd:	add    BYTE PTR [rdi+0x5f],bl
  4098c0:	rex.XB pop r15
  4098c2:	jae    0x409934
  4098c4:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4098c8:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  4098cf:	ins    BYTE PTR es:[rdi],dx
  4098d0:	gs jb  0x4098d3
  4098d3:	add    BYTE PTR [rsi+0x0],al
  4098d6:	pop    rdi
  4098d7:	pop    rdi
  4098d8:	(bad)  
  4098d9:	jb     0x409942
  4098db:	jbe    0x4098dd
  4098dd:	add    BYTE PTR [rsi+0x0],cl
  4098e0:	pop    rdi
  4098e1:	pop    rdi
  4098e2:	fs ins BYTE PTR es:[rdi],dx
  4098e4:	ins    BYTE PTR es:[rdi],dx
  4098e5:	outs   dx,DWORD PTR ds:[rsi]
  4098e6:	outs   dx,BYTE PTR ds:[rsi]
  4098e7:	gs js  0x409953
  4098ea:	je     0x4098ec
  4098ec:	push   rcx
  4098ed:	add    BYTE PTR [rdi+0x5f],bl
  4098f0:	addr32 gs je 0x409961
  4098f4:	(bad)  
  4098f5:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  4098fc:	push   rdx
  4098fd:	add    BYTE PTR [rdi+0x5f],bl
  409900:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  409907:	add    BYTE PTR [rbx+0x0],dl
  40990a:	pop    rdi
  40990b:	pop    rdi
  40990c:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  409913:	movsxd eax,DWORD PTR [rax]
  409915:	add    BYTE PTR [rdx+0x0],bl
  409918:	pop    rdi
  409919:	pop    rdi
  40991a:	ins    BYTE PTR es:[rdi],dx
  40991b:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40991e:	jbe    0x40997f
  409920:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  409927:	add    BYTE PTR [rdi+0x5f],bl
  40992a:	jae    0x409991
  40992c:	je     0x40998d
  40992e:	(bad)  
  40992f:	jo     0x4099a1
  409931:	pop    rdi
  409932:	je     0x4099ad
  409934:	jo     0x40999b
  409936:	add    BYTE PTR [rax],al
  409938:	(bad)  
  409939:	add    BYTE PTR [rdi+0x5f],bl
  40993c:	jae    0x4099a3
  40993e:	je     0x4099b5
  409940:	jae    0x4099a7
  409942:	jb     0x4099b1
  409944:	(bad)  
  409945:	je     0x4099af
  409947:	gs jb  0x4099bc
  40994a:	add    BYTE PTR [rax],al
  40994c:	jno    0x40994e
  40994e:	pop    rdi
  40994f:	(bad)  
  409950:	movsxd ebp,DWORD PTR [rbp+0x64]
  409953:	ins    BYTE PTR es:[rdi],dx
  409954:	outs   dx,BYTE PTR ds:[rsi]
  409955:	add    BYTE PTR [rax+0x0],bh
  409958:	pop    rdi
  409959:	(bad)  
  40995a:	ins    DWORD PTR es:[rdi],dx
  40995b:	jae    0x4099c4
  40995d:	pop    rdi
  40995e:	gs js  0x4099ca
  409961:	je     0x409963
  409963:	add    BYTE PTR [rdx+0x65635f00],cl
  409969:	js     0x4099d4
  40996b:	je     0x40996d
  40996d:	add    dl,bl
  40996f:	add    BYTE PTR [rdi+0x66],bl
  409972:	ins    DWORD PTR es:[rdi],dx
  409973:	outs   dx,DWORD PTR ds:[rsi]
  409974:	fs add BYTE PTR gs:[rax],al
  409978:	sbb    al,BYTE PTR [rcx]
  40997a:	pop    rdi
  40997b:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  409982:	ins    DWORD PTR es:[rdi],dx
  409983:	add    BYTE PTR [rax+0x6f6c5f01],al
  409989:	movsxd ebp,DWORD PTR [rbx+0x0]
  40998c:	and    eax,0x6e6f5f02
  409991:	gs js  0x4099fd
  409994:	je     0x409996
  409996:	(bad)
  40999a:	outs   dx,BYTE PTR ds:[rsi]
  40999b:	ins    BYTE PTR es:[rdi],dx
  40999c:	outs   dx,DWORD PTR ds:[rsi]
  40999d:	movsxd ebp,DWORD PTR [rbx+0x0]
  4099a0:	jg     0x4099a5
  4099a2:	(bad)  
  4099a3:	(bad)  
  4099a4:	outs   dx,DWORD PTR ds:[rsi]
  4099a5:	jb     0x409a1b
  4099a7:	add    BYTE PTR [rax+0x6c616303],dl
  4099ad:	ins    BYTE PTR es:[rdi],dx
  4099ae:	outs   dx,DWORD PTR ds:[rsi]
  4099af:	movsxd eax,DWORD PTR [rax]
  4099b1:	add    BYTE PTR [rbp+0x69786503],bl
  4099b7:	je     0x4099b9
  4099b9:	add    BYTE PTR [rax+0x72706603],dh
  4099bf:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  4099c6:	data16 jo 0x409a3e
  4099c9:	je     0x409a2e
  4099cb:	add    BYTE PTR [rdi+0x65726603],dh
  4099d1:	add    BYTE PTR gs:[rax],al
  4099d4:	ret    0x6603
  4099d7:	ja     0x409a4b
  4099d9:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c700
  4099e1:	gs je  0x409a49
  4099e4:	outs   dx,BYTE PTR ds:[rsi]
  4099e5:	jbe    0x4099e7
  4099e7:	add    al,dh
  4099e9:	add    ebp,DWORD PTR [rbp+0x61]
  4099ec:	ins    BYTE PTR es:[rdi],dx
  4099ed:	ins    BYTE PTR es:[rdi],dx
  4099ee:	outs   dx,DWORD PTR ds:[rsi]
  4099ef:	movsxd eax,DWORD PTR [rax]
  4099f1:	add    al,bh
  4099f3:	add    ebp,DWORD PTR [rbp+0x65]
  4099f6:	ins    DWORD PTR es:[rdi],dx
  4099f7:	movsxd esi,DWORD PTR [rax+0x79]
  4099fa:	add    BYTE PTR [rax],al
  4099fc:	add    DWORD PTR [rax+rsi*2],eax
  4099ff:	jb     0x409a6a
  409a01:	outs   dx,BYTE PTR ds:[rsi]
  409a02:	je     0x409a6a
  409a04:	add    BYTE PTR [rax],al
  409a06:	(bad)  
  409a07:	add    al,0x73
  409a09:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  409a10:	and    eax,DWORD PTR [rbx+rsi*2]
  409a13:	je     0x409a87
  409a15:	movsxd ebp,DWORD PTR [rax+0x72]
  409a18:	add    BYTE PTR [rax],al
  409a1a:	sub    eax,DWORD PTR [rbx+rsi*2]
  409a1d:	je     0x409a91
  409a1f:	ins    BYTE PTR es:[rdi],dx
  409a20:	outs   dx,BYTE PTR gs:[rsi]
  409a22:	add    BYTE PTR [rax],al
  409a24:	cs add al,0x73
  409a27:	je     0x409a9b
  409a29:	outs   dx,BYTE PTR ds:[rsi]
  409a2a:	movsxd ebp,DWORD PTR [rbp+0x70]
  409a2d:	add    BYTE PTR [rsi+0x4],cl
  409a30:	jbe    0x409a98
  409a32:	jo     0x409aa6
  409a34:	imul   ebp,DWORD PTR [rsi+0x74],0xbe000066
  409a3b:	add    al,0x5f
  409a3d:	jae    0x409ab3
  409a3f:	jb     0x409aa5
  409a41:	jne    0x409ab3
  409a43:	add    BYTE PTR [rax],al
  409a45:	nop
  409a46:	add    BYTE PTR [rax],al
  409a48:	add    BYTE PTR [rax-0x70000000],dl
  409a4e:	add    BYTE PTR [rax],al
  409a50:	add    BYTE PTR [rax-0x70000000],dl
  409a56:	add    BYTE PTR [rax],al
  409a58:	add    BYTE PTR [rax-0x70000000],dl
  409a5e:	add    BYTE PTR [rax],al
  409a60:	add    BYTE PTR [rax-0x70000000],dl
  409a66:	add    BYTE PTR [rax],al
  409a68:	add    BYTE PTR [rax-0x70000000],dl
  409a6e:	add    BYTE PTR [rax],al
  409a70:	add    BYTE PTR [rax-0x70000000],dl
  409a76:	add    BYTE PTR [rax],al
  409a78:	add    BYTE PTR [rax-0x70000000],dl
  409a7e:	add    BYTE PTR [rax],al
  409a80:	add    BYTE PTR [rax-0x70000000],dl
  409a86:	add    BYTE PTR [rax],al
  409a88:	add    BYTE PTR [rax-0x70000000],dl
  409a8e:	add    BYTE PTR [rax],al
  409a90:	add    BYTE PTR [rax+0x696c0000],dl
  409a96:	(bad)  
  409a97:	outs   dx,WORD PTR ds:[rsi]
  409a99:	outs   dx,BYTE PTR ds:[rsi]
  409a9a:	je     0x409aff
  409a9c:	outs   dx,DWORD PTR ds:[rsi]
  409a9d:	outs   dx,BYTE PTR ds:[rsi]
  409a9e:	imul   sp,WORD PTR [rdi+0x2d],0x2e31
  409aa4:	fs ins BYTE PTR es:[rdi],dx
  409aa6:	ins    BYTE PTR es:[rdi],dx
  409aa7:	add    BYTE PTR [rax+rdx*4],dl
  409aaa:	add    BYTE PTR [rax],al
  409aac:	adc    al,0x90
  409aae:	add    BYTE PTR [rax],al
  409ab0:	adc    al,0x90
  409ab2:	add    BYTE PTR [rax],al
  409ab4:	adc    al,0x90
  409ab6:	add    BYTE PTR [rax],al
  409ab8:	adc    al,0x90
  409aba:	add    BYTE PTR [rax],al
  409abc:	adc    al,0x90
  409abe:	add    BYTE PTR [rax],al
  409ac0:	adc    al,0x90
  409ac2:	add    BYTE PTR [rax],al
  409ac4:	adc    al,0x90
  409ac6:	add    BYTE PTR [rax],al
  409ac8:	adc    al,0x90
  409aca:	add    BYTE PTR [rax],al
  409acc:	adc    al,0x90
  409ace:	add    BYTE PTR [rax],al
  409ad0:	adc    al,0x90
  409ad2:	add    BYTE PTR [rax],al
  409ad4:	adc    al,0x90
  409ad6:	add    BYTE PTR [rax],al
  409ad8:	adc    al,0x90
  409ada:	add    BYTE PTR [rax],al
  409adc:	adc    al,0x90
  409ade:	add    BYTE PTR [rax],al
  409ae0:	adc    al,0x90
  409ae2:	add    BYTE PTR [rax],al
  409ae4:	adc    al,0x90
  409ae6:	add    BYTE PTR [rax],al
  409ae8:	adc    al,0x90
  409aea:	add    BYTE PTR [rax],al
  409aec:	adc    al,0x90
  409aee:	add    BYTE PTR [rax],al
  409af0:	adc    al,0x90
  409af2:	add    BYTE PTR [rax],al
  409af4:	adc    al,0x90
  409af6:	add    BYTE PTR [rax],al
  409af8:	adc    al,0x90
  409afa:	add    BYTE PTR [rax],al
  409afc:	adc    al,0x90
  409afe:	add    BYTE PTR [rax],al
  409b00:	adc    al,0x90
  409b02:	add    BYTE PTR [rax],al
  409b04:	rex.WXB
  409b05:	rex.RB push r10
  409b07:	rex.WRX
  409b08:	rex.RB
  409b09:	xor    r14,QWORD PTR [rdx]
  409b0c:	cs fs ins BYTE PTR es:[rdi],dx
  409b0f:	ins    BYTE PTR es:[rdi],dx
  409b10:	add    BYTE PTR [rax],al
  409b12:	add    BYTE PTR [rax],al
  409b14:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b1a:	add    BYTE PTR [rax],al
  409b1c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b22:	add    BYTE PTR [rax],al
  409b24:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b2a:	add    BYTE PTR [rax],al
  409b2c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b32:	add    BYTE PTR [rax],al
  409b34:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b3a:	add    BYTE PTR [rax],al
  409b3c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b42:	add    BYTE PTR [rax],al
  409b44:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b4a:	add    BYTE PTR [rax],al
  409b4c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b52:	add    BYTE PTR [rax],al
  409b54:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b5a:	add    BYTE PTR [rax],al
  409b5c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b62:	add    BYTE PTR [rax],al
  409b64:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b6a:	add    BYTE PTR [rax],al
  409b6c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b72:	add    BYTE PTR [rax],al
  409b74:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b7a:	add    BYTE PTR [rax],al
  409b7c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b82:	add    BYTE PTR [rax],al
  409b84:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b8a:	add    BYTE PTR [rax],al
  409b8c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b92:	add    BYTE PTR [rax],al
  409b94:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b9a:	add    BYTE PTR [rax],al
  409b9c:	ins    DWORD PTR es:[rdi],dx
  409b9d:	jae    0x409c15
  409b9f:	movsxd esi,DWORD PTR [rdx+0x74]
  409ba2:	cs fs ins BYTE PTR es:[rdi],dx
  409ba5:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax+0x18],dh
  40a02a:	add    BYTE PTR [rax],al
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rax+0x401a],ah
  40a045:	add    BYTE PTR [rax],al
  40a047:	add    BYTE PTR [rax+0x1a],dh
  40a04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40b033:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax-0x60],al
  40b03a:	add    BYTE PTR [rax],al
	...
