
c83df1e3e21b36046c453cc3cf9a0cbe3539558ce8bc8dd0b7ebabf5b7634d5c.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0xa495]        # 0x40b4b0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0xa496]        # 0x40b4c0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0xa499]        # 0x40b4d0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0xa45c]        # 0x40b4a0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0xa30f]        # 0x40b360
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0xa431]        # 0x40b490
  40105f:	mov    DWORD PTR [rip+0xcfa3],edx        # 0x40e008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x407110
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x405de0
  401081:	mov    rdx,QWORD PTR [rip+0xa368]        # 0x40b3f0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0xa34e]        # 0x40b3e0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0xa3b4]        # 0x40b450
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0xa2eb]        # 0x40b390
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x4059c0
  4010af:	mov    rax,QWORD PTR [rip+0xa25a]        # 0x40b310
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x407110
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x4b99]        # 0x405cc0
  401127:	call   0x405cb0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0xa315]        # 0x40b480
  40116b:	lea    r8,[rip+0xcea6]        # 0x40e018
  401172:	lea    rdx,[rip+0xcea7]        # 0x40e020
  401179:	lea    rcx,[rip+0xcea8]        # 0x40e028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xce78],eax        # 0x40e000
  401188:	lea    rax,[rip+0xce71]        # 0x40e000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0xa2a5]        # 0x40b440
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x407128
  4011a3:	mov    DWORD PTR [rip+0xce67],eax        # 0x40e010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0xa2ca]        # 0x40b490
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0xa1cb]        # 0x40b3c0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xe31e]        # 0x40f520
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0xa1a7]        # 0x40b3d0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0xcdba],0x1        # 0x40e004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0xa0ec]        # 0x40b350
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x405fd0
  40127d:	lea    rcx,[rip+0x52ec]        # 0x406570
  401284:	call   QWORD PTR [rip+0xe28e]        # 0x40f518
  40128a:	mov    rdx,QWORD PTR [rip+0xa11f]        # 0x40b3b0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x406480
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x407150
  4012a5:	call   0x405dc0
  4012aa:	mov    rax,QWORD PTR [rip+0xa0af]        # 0x40b360
  4012b1:	mov    QWORD PTR [rip+0xdc10],rax        # 0x40eec8
  4012b8:	mov    rax,QWORD PTR [rip+0xa0c1]        # 0x40b380
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xdba9],rax        # 0x40eec0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x6cca],eax        # 0x408000
  401336:	mov    r12d,DWORD PTR [rip+0xcceb]        # 0x40e028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x407060
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xccc2]        # 0x40e020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x406ff8
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x407060
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x407050
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xcc6a],rbp        # 0x40e020
  4013b6:	call   0x405990
  4013bb:	mov    rax,QWORD PTR [rip+0x9fae]        # 0x40b370
  4013c2:	mov    rdx,QWORD PTR [rip+0xcc4f]        # 0x40e018
  4013c9:	mov    ecx,DWORD PTR [rip+0xcc59]        # 0x40e028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xcc3c]        # 0x40e018
  4013dc:	mov    rdx,QWORD PTR [rip+0xcc3d]        # 0x40e020
  4013e3:	call   0x407300
  4013e8:	mov    ecx,DWORD PTR [rip+0xcc1a]        # 0x40e008
  4013ee:	mov    DWORD PTR [rip+0xcc18],eax        # 0x40e00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0xcc02]        # 0x40e004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x4070f8
  40140b:	mov    eax,DWORD PTR [rip+0xcbfb]        # 0x40e00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x9f99]        # 0x40b3d0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x407100
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x9fad]        # 0x40b410
  401463:	mov    rcx,QWORD PTR [rip+0x9f96]        # 0x40b400
  40146a:	call   0x4070e8
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xdff7]        # 0x40f490
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x9f89]        # 0x40b430
  4014a7:	mov    rcx,QWORD PTR [rip+0x9f72]        # 0x40b420
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x4070e8
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x4070a8
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x9fb5]        # 0x40b490
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x4059d0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x9f85]        # 0x40b490
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x4059d0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	sub    rsp,0x28
  401534:	test   cl,cl
  401536:	je     0x401544
  401538:	lea    rcx,[rip+0x7ac1]        # 0x409000
  40153f:	call   0x404110
  401544:	lea    rcx,[rip+0x7ac0]        # 0x40900b
  40154b:	add    rsp,0x28
  40154f:	jmp    0x404110
  401554:	xchg   ax,ax
  401556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401560:	sub    rsp,0x28
  401564:	test   cl,cl
  401566:	je     0x401574
  401568:	lea    rcx,[rip+0x7aae]        # 0x40901d
  40156f:	call   0x404110
  401574:	lea    rdx,[rip+0x7aad]        # 0x409028
  40157b:	lea    rcx,[rip+0x7adf]        # 0x409061
  401582:	add    rsp,0x28
  401586:	jmp    0x404110
  40158b:	nop    DWORD PTR [rax+rax*1+0x0]
  401590:	sub    rsp,0x28
  401594:	test   cl,cl
  401596:	je     0x4015a4
  401598:	lea    rcx,[rip+0x7ac6]        # 0x409065
  40159f:	call   0x404110
  4015a4:	lea    rdx,[rip+0x7ac8]        # 0x409073
  4015ab:	lea    rcx,[rip+0x7aaf]        # 0x409061
  4015b2:	add    rsp,0x28
  4015b6:	jmp    0x404110
  4015bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4015c0:	sub    rsp,0x28
  4015c4:	test   cl,cl
  4015c6:	je     0x4015d4
  4015c8:	lea    rcx,[rip+0x7aa5]        # 0x409074
  4015cf:	call   0x404110
  4015d4:	lea    rdx,[rip+0x7a98]        # 0x409073
  4015db:	lea    rcx,[rip+0x7a7f]        # 0x409061
  4015e2:	add    rsp,0x28
  4015e6:	jmp    0x404110
  4015eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4015f0:	sub    rsp,0x28
  4015f4:	test   cl,cl
  4015f6:	je     0x401604
  4015f8:	lea    rcx,[rip+0x7a83]        # 0x409082
  4015ff:	call   0x404110
  401604:	lea    rdx,[rip+0x7a85]        # 0x409090
  40160b:	lea    rcx,[rip+0x7a4f]        # 0x409061
  401612:	add    rsp,0x28
  401616:	jmp    0x404110
  40161b:	nop    DWORD PTR [rax+rax*1+0x0]
  401620:	sub    rsp,0x28
  401624:	test   cl,cl
  401626:	je     0x401634
  401628:	lea    rcx,[rip+0x7af3]        # 0x409122
  40162f:	call   0x404110
  401634:	lea    rdx,[rip+0x7a38]        # 0x409073
  40163b:	lea    rcx,[rip+0x7a1f]        # 0x409061
  401642:	add    rsp,0x28
  401646:	jmp    0x404110
  40164b:	nop    DWORD PTR [rax+rax*1+0x0]
  401650:	sub    rsp,0x28
  401654:	test   cl,cl
  401656:	je     0x401664
  401658:	lea    rcx,[rip+0x7ad0]        # 0x40912f
  40165f:	call   0x404110
  401664:	lea    rdx,[rip+0x7ad5]        # 0x409140
  40166b:	lea    rcx,[rip+0x79ef]        # 0x409061
  401672:	add    rsp,0x28
  401676:	jmp    0x404110
  40167b:	nop    DWORD PTR [rax+rax*1+0x0]
  401680:	sub    rsp,0x28
  401684:	test   cl,cl
  401686:	je     0x401694
  401688:	lea    rcx,[rip+0x7b73]        # 0x409202
  40168f:	call   0x404110
  401694:	lea    rdx,[rip+0x7b75]        # 0x409210
  40169b:	lea    rcx,[rip+0x79bf]        # 0x409061
  4016a2:	add    rsp,0x28
  4016a6:	jmp    0x404110
  4016ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4016b0:	sub    rsp,0x28
  4016b4:	test   cl,cl
  4016b6:	je     0x4016c4
  4016b8:	lea    rcx,[rip+0x7b9d]        # 0x40925c
  4016bf:	call   0x404110
  4016c4:	lea    rdx,[rip+0x7b97]        # 0x409262
  4016cb:	lea    rcx,[rip+0x798f]        # 0x409061
  4016d2:	add    rsp,0x28
  4016d6:	jmp    0x404110
  4016db:	nop    DWORD PTR [rax+rax*1+0x0]
  4016e0:	sub    rsp,0x28
  4016e4:	test   cl,cl
  4016e6:	je     0x4016f4
  4016e8:	lea    rcx,[rip+0x7b8a]        # 0x409279
  4016ef:	call   0x404110
  4016f4:	lea    rdx,[rip+0x7b8d]        # 0x409288
  4016fb:	lea    rcx,[rip+0x795f]        # 0x409061
  401702:	add    rsp,0x28
  401706:	jmp    0x404110
  40170b:	nop    DWORD PTR [rax+rax*1+0x0]
  401710:	push   rbx
  401711:	sub    rsp,0x20
  401715:	mov    r8d,0x3ff
  40171b:	mov    rbx,rcx
  40171e:	mov    rdx,rcx
  401721:	call   QWORD PTR [rip+0xdd61]        # 0x40f488
  401727:	movzx  eax,BYTE PTR [rbx]
  40172a:	test   al,al
  40172c:	jne    0x40173b
  40172e:	jmp    0x40174d
  401730:	add    rbx,0x1
  401734:	movzx  eax,BYTE PTR [rbx]
  401737:	test   al,al
  401739:	je     0x40174d
  40173b:	cmp    al,0x5c
  40173d:	jne    0x401730
  40173f:	mov    BYTE PTR [rbx],0x2f
  401742:	add    rbx,0x1
  401746:	movzx  eax,BYTE PTR [rbx]
  401749:	test   al,al
  40174b:	jne    0x40173b
  40174d:	add    rsp,0x20
  401751:	pop    rbx
  401752:	ret    
  401753:	nop    DWORD PTR [rax]
  401756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401760:	push   rbx
  401761:	sub    rsp,0x420
  401768:	test   cl,cl
  40176a:	je     0x401778
  40176c:	lea    rcx,[rip+0x7dbb]        # 0x40952e
  401773:	call   0x404110
  401778:	lea    rbx,[rsp+0x20]
  40177d:	lea    rcx,[rip+0xc8bc]        # 0x40e040
  401784:	mov    rdx,rbx
  401787:	call   0x4053c0
  40178c:	lea    rdx,[rip+0x7da3]        # 0x409536
  401793:	mov    r8d,0x400
  401799:	mov    rcx,rbx
  40179c:	call   0x402cc0
  4017a1:	mov    rcx,rbx
  4017a4:	call   0x401710
  4017a9:	lea    rcx,[rip+0x78b1]        # 0x409061
  4017b0:	mov    rdx,rbx
  4017b3:	call   0x404110
  4017b8:	nop
  4017b9:	add    rsp,0x420
  4017c0:	pop    rbx
  4017c1:	ret    
  4017c2:	nop    DWORD PTR [rax+0x0]
  4017c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017d0:	push   rbx
  4017d1:	sub    rsp,0x420
  4017d8:	test   cl,cl
  4017da:	je     0x4017e8
  4017dc:	lea    rcx,[rip+0x7d6f]        # 0x409552
  4017e3:	call   0x404110
  4017e8:	lea    rbx,[rsp+0x20]
  4017ed:	lea    rcx,[rip+0xc84c]        # 0x40e040
  4017f4:	mov    rdx,rbx
  4017f7:	call   0x4053c0
  4017fc:	mov    rcx,rbx
  4017ff:	call   0x401710
  401804:	lea    rcx,[rip+0x7856]        # 0x409061
  40180b:	mov    rdx,rbx
  40180e:	call   0x404110
  401813:	nop
  401814:	add    rsp,0x420
  40181b:	pop    rbx
  40181c:	ret    
  40181d:	nop    DWORD PTR [rax]
  401820:	push   rbx
  401821:	sub    rsp,0x420
  401828:	test   cl,cl
  40182a:	je     0x401838
  40182c:	lea    rcx,[rip+0x7d2c]        # 0x40955f
  401833:	call   0x404110
  401838:	lea    rbx,[rsp+0x20]
  40183d:	lea    rcx,[rip+0xc7fc]        # 0x40e040
  401844:	mov    rdx,rbx
  401847:	call   0x405320
  40184c:	mov    rcx,rbx
  40184f:	call   0x401710
  401854:	lea    rcx,[rip+0x7806]        # 0x409061
  40185b:	mov    rdx,rbx
  40185e:	call   0x404110
  401863:	nop
  401864:	add    rsp,0x420
  40186b:	pop    rbx
  40186c:	ret    
  40186d:	nop    DWORD PTR [rax]
  401870:	push   rbx
  401871:	sub    rsp,0x420
  401878:	test   cl,cl
  40187a:	je     0x401888
  40187c:	lea    rcx,[rip+0x7cea]        # 0x40956d
  401883:	call   0x404110
  401888:	lea    rbx,[rsp+0x20]
  40188d:	lea    rcx,[rip+0xc7ac]        # 0x40e040
  401894:	mov    rdx,rbx
  401897:	call   0x405300
  40189c:	mov    rcx,rbx
  40189f:	call   0x401710
  4018a4:	lea    rcx,[rip+0x77b6]        # 0x409061
  4018ab:	mov    rdx,rbx
  4018ae:	call   0x404110
  4018b3:	nop
  4018b4:	add    rsp,0x420
  4018bb:	pop    rbx
  4018bc:	ret    
  4018bd:	nop    DWORD PTR [rax]
  4018c0:	push   rbx
  4018c1:	sub    rsp,0x420
  4018c8:	test   cl,cl
  4018ca:	je     0x4018d8
  4018cc:	lea    rcx,[rip+0x7ca6]        # 0x409579
  4018d3:	call   0x404110
  4018d8:	lea    rbx,[rsp+0x20]
  4018dd:	lea    rcx,[rip+0xc75c]        # 0x40e040
  4018e4:	mov    rdx,rbx
  4018e7:	call   0x405440
  4018ec:	mov    rcx,rbx
  4018ef:	call   0x401710
  4018f4:	lea    rcx,[rip+0x7766]        # 0x409061
  4018fb:	mov    rdx,rbx
  4018fe:	call   0x404110
  401903:	nop
  401904:	add    rsp,0x420
  40190b:	pop    rbx
  40190c:	ret    
  40190d:	nop    DWORD PTR [rax]
  401910:	push   rbx
  401911:	sub    rsp,0x420
  401918:	test   cl,cl
  40191a:	je     0x401928
  40191c:	lea    rcx,[rip+0x7c60]        # 0x409583
  401923:	call   0x404110
  401928:	lea    rbx,[rsp+0x20]
  40192d:	lea    rcx,[rip+0xc70c]        # 0x40e040
  401934:	mov    rdx,rbx
  401937:	call   0x4053e0
  40193c:	mov    rcx,rbx
  40193f:	call   0x401710
  401944:	lea    rcx,[rip+0x7716]        # 0x409061
  40194b:	mov    rdx,rbx
  40194e:	call   0x404110
  401953:	nop
  401954:	add    rsp,0x420
  40195b:	pop    rbx
  40195c:	ret    
  40195d:	nop    DWORD PTR [rax]
  401960:	push   rbx
  401961:	sub    rsp,0x420
  401968:	test   cl,cl
  40196a:	je     0x401978
  40196c:	lea    rcx,[rip+0x7c1d]        # 0x409590
  401973:	call   0x404110
  401978:	lea    rbx,[rsp+0x20]
  40197d:	lea    rcx,[rip+0xc6bc]        # 0x40e040
  401984:	mov    rdx,rbx
  401987:	call   0x4053a0
  40198c:	mov    rcx,rbx
  40198f:	call   0x401710
  401994:	lea    rcx,[rip+0x76c6]        # 0x409061
  40199b:	mov    rdx,rbx
  40199e:	call   0x404110
  4019a3:	nop
  4019a4:	add    rsp,0x420
  4019ab:	pop    rbx
  4019ac:	ret    
  4019ad:	nop    DWORD PTR [rax]
  4019b0:	push   rbx
  4019b1:	sub    rsp,0x420
  4019b8:	test   cl,cl
  4019ba:	je     0x4019c8
  4019bc:	lea    rcx,[rip+0x7bd7]        # 0x40959a
  4019c3:	call   0x404110
  4019c8:	lea    rbx,[rsp+0x20]
  4019cd:	lea    rcx,[rip+0xc66c]        # 0x40e040
  4019d4:	mov    rdx,rbx
  4019d7:	call   0x405380
  4019dc:	mov    rcx,rbx
  4019df:	call   0x401710
  4019e4:	lea    rcx,[rip+0x7676]        # 0x409061
  4019eb:	mov    rdx,rbx
  4019ee:	call   0x404110
  4019f3:	nop
  4019f4:	add    rsp,0x420
  4019fb:	pop    rbx
  4019fc:	ret    
  4019fd:	nop    DWORD PTR [rax]
  401a00:	push   rbx
  401a01:	sub    rsp,0x420
  401a08:	test   cl,cl
  401a0a:	je     0x401a18
  401a0c:	lea    rcx,[rip+0x7b9c]        # 0x4095af
  401a13:	call   0x404110
  401a18:	lea    rbx,[rsp+0x20]
  401a1d:	lea    rcx,[rip+0xc61c]        # 0x40e040
  401a24:	mov    rdx,rbx
  401a27:	call   0x405360
  401a2c:	mov    rcx,rbx
  401a2f:	call   0x401710
  401a34:	lea    rcx,[rip+0x7626]        # 0x409061
  401a3b:	mov    rdx,rbx
  401a3e:	call   0x404110
  401a43:	nop
  401a44:	add    rsp,0x420
  401a4b:	pop    rbx
  401a4c:	ret    
  401a4d:	nop    DWORD PTR [rax]
  401a50:	push   rbx
  401a51:	sub    rsp,0x420
  401a58:	test   cl,cl
  401a5a:	je     0x401a68
  401a5c:	lea    rcx,[rip+0x7b5d]        # 0x4095c0
  401a63:	call   0x404110
  401a68:	lea    rbx,[rsp+0x20]
  401a6d:	lea    rcx,[rip+0xc5cc]        # 0x40e040
  401a74:	mov    rdx,rbx
  401a77:	call   0x405340
  401a7c:	mov    rcx,rbx
  401a7f:	call   0x401710
  401a84:	lea    rcx,[rip+0x75d6]        # 0x409061
  401a8b:	mov    rdx,rbx
  401a8e:	call   0x404110
  401a93:	nop
  401a94:	add    rsp,0x420
  401a9b:	pop    rbx
  401a9c:	ret    
  401a9d:	nop    DWORD PTR [rax]
  401aa0:	push   rbx
  401aa1:	sub    rsp,0x420
  401aa8:	test   cl,cl
  401aaa:	je     0x401ab8
  401aac:	lea    rcx,[rip+0x7b1b]        # 0x4095ce
  401ab3:	call   0x404110
  401ab8:	lea    rbx,[rsp+0x20]
  401abd:	lea    rcx,[rip+0xc57c]        # 0x40e040
  401ac4:	mov    rdx,rbx
  401ac7:	call   0x405420
  401acc:	mov    rcx,rbx
  401acf:	call   0x401710
  401ad4:	lea    rcx,[rip+0x7586]        # 0x409061
  401adb:	mov    rdx,rbx
  401ade:	call   0x404110
  401ae3:	nop
  401ae4:	add    rsp,0x420
  401aeb:	pop    rbx
  401aec:	ret    
  401aed:	nop    DWORD PTR [rax]
  401af0:	push   rbx
  401af1:	sub    rsp,0x420
  401af8:	test   cl,cl
  401afa:	je     0x401b08
  401afc:	lea    rcx,[rip+0x7ad6]        # 0x4095d9
  401b03:	call   0x404110
  401b08:	lea    rbx,[rsp+0x20]
  401b0d:	lea    rcx,[rip+0xc52c]        # 0x40e040
  401b14:	mov    rdx,rbx
  401b17:	call   0x405400
  401b1c:	mov    rcx,rbx
  401b1f:	call   0x401710
  401b24:	lea    rcx,[rip+0x7536]        # 0x409061
  401b2b:	mov    rdx,rbx
  401b2e:	call   0x404110
  401b33:	nop
  401b34:	add    rsp,0x420
  401b3b:	pop    rbx
  401b3c:	ret    
  401b3d:	nop    DWORD PTR [rax]
  401b40:	push   rbx
  401b41:	sub    rsp,0x420
  401b48:	test   cl,cl
  401b4a:	jne    0x401ba0
  401b4c:	lea    rbx,[rsp+0x20]
  401b51:	lea    rdx,[rip+0xc4e8]        # 0x40e040
  401b58:	mov    rcx,rbx
  401b5b:	call   0x407008
  401b60:	mov    edx,0x2f
  401b65:	mov    rcx,rbx
  401b68:	call   0x406fe0
  401b6d:	test   rax,rax
  401b70:	je     0x401b75
  401b72:	mov    BYTE PTR [rax],0x0
  401b75:	mov    rcx,rbx
  401b78:	call   0x401710
  401b7d:	lea    rcx,[rip+0x74dd]        # 0x409061
  401b84:	mov    rdx,rbx
  401b87:	call   0x404110
  401b8c:	nop
  401b8d:	add    rsp,0x420
  401b94:	pop    rbx
  401b95:	ret    
  401b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ba0:	lea    rcx,[rip+0x7a3c]        # 0x4095e3
  401ba7:	call   0x404110
  401bac:	jmp    0x401b4c
  401bae:	nop
  401baf:	nop
  401bb0:	push   rsi
  401bb1:	push   rbx
  401bb2:	sub    rsp,0x468
  401bb9:	mov    rbx,rcx
  401bbc:	call   0x406ff8
  401bc1:	cmp    rax,0x3
  401bc5:	ja     0x401c11
  401bc7:	lea    rdx,[rsp+0x20]
  401bcc:	mov    rcx,rbx
  401bcf:	call   0x404720
  401bd4:	test   eax,eax
  401bd6:	js     0x401c90
  401bdc:	movzx  edx,WORD PTR [rsp+0x26]
  401be1:	mov    eax,0xffffffff
  401be6:	mov    ecx,edx
  401be8:	and    cx,0xf000
  401bed:	cmp    cx,0x8000
  401bf2:	jne    0x401c07
  401bf4:	test   dl,0x40
  401bf7:	je     0x401c07
  401bf9:	and    dx,0x100
  401bfe:	cmp    dx,0x1
  401c02:	sbb    eax,eax
  401c04:	and    eax,0xfffffffe
  401c07:	add    rsp,0x468
  401c0e:	pop    rbx
  401c0f:	pop    rsi
  401c10:	ret    
  401c11:	lea    rcx,[rbx+rax*1-0x4]
  401c16:	lea    rdx,[rip+0x84e3]        # 0x40a100
  401c1d:	call   0x405500
  401c22:	test   eax,eax
  401c24:	je     0x401bc7
  401c26:	lea    rsi,[rsp+0x50]
  401c2b:	mov    rdx,rbx
  401c2e:	mov    r8d,0x400
  401c34:	mov    rcx,rsi
  401c37:	call   0x402d70
  401c3c:	mov    rdx,rsi
  401c3f:	mov    r8d,DWORD PTR [rdx]
  401c42:	add    rdx,0x4
  401c46:	lea    eax,[r8-0x1010101]
  401c4d:	not    r8d
  401c50:	and    eax,r8d
  401c53:	and    eax,0x80808080
  401c58:	je     0x401c3f
  401c5a:	mov    ecx,eax
  401c5c:	mov    rbx,rsi
  401c5f:	shr    ecx,0x10
  401c62:	test   eax,0x8080
  401c67:	cmove  eax,ecx
  401c6a:	lea    rcx,[rdx+0x2]
  401c6e:	cmove  rdx,rcx
  401c72:	add    al,al
  401c74:	sbb    rdx,0x3
  401c78:	mov    DWORD PTR [rdx],0x6578652e
  401c7e:	mov    BYTE PTR [rdx+0x4],0x0
  401c82:	jmp    0x401bc7
  401c87:	nop    WORD PTR [rax+rax*1+0x0]
  401c90:	mov    eax,0xffffffff
  401c95:	jmp    0x401c07
  401c9a:	nop    WORD PTR [rax+rax*1+0x0]
  401ca0:	push   r15
  401ca2:	push   r14
  401ca4:	push   r13
  401ca6:	push   r12
  401ca8:	push   rbp
  401ca9:	push   rdi
  401caa:	push   rsi
  401cab:	push   rbx
  401cac:	sub    rsp,0x838
  401cb3:	lea    rdi,[rsp+0x30]
  401cb8:	mov    rbx,rcx
  401cbb:	mov    rsi,rdx
  401cbe:	mov    edx,0x400
  401cc3:	mov    rcx,rdi
  401cc6:	call   0x406fa0
  401ccb:	test   rax,rax
  401cce:	je     0x401f51
  401cd4:	mov    rcx,rbx
  401cd7:	call   0x404970
  401cdc:	test   rax,rax
  401cdf:	je     0x401d70
  401ce5:	movzx  ecx,BYTE PTR [rbx]
  401ce8:	cmp    cl,0x5c
  401ceb:	je     0x401d50
  401ced:	cmp    cl,0x2f
  401cf0:	je     0x401d50
  401cf2:	call   QWORD PTR [rip+0xd950]        # 0x40f648
  401cf8:	test   eax,eax
  401cfa:	je     0x401d02
  401cfc:	cmp    BYTE PTR [rbx+0x1],0x3a
  401d00:	je     0x401d40
  401d02:	mov    r8,rbx
  401d05:	mov    rdx,rdi
  401d08:	mov    rcx,rsi
  401d0b:	call   0x404a50
  401d10:	mov    rcx,rsi
  401d13:	call   0x404af0
  401d18:	mov    rcx,rsi
  401d1b:	call   0x401bb0
  401d20:	test   eax,eax
  401d22:	jne    0x401eb0
  401d28:	xor    eax,eax
  401d2a:	add    rsp,0x838
  401d31:	pop    rbx
  401d32:	pop    rsi
  401d33:	pop    rdi
  401d34:	pop    rbp
  401d35:	pop    r12
  401d37:	pop    r13
  401d39:	pop    r14
  401d3b:	pop    r15
  401d3d:	ret    
  401d3e:	xchg   ax,ax
  401d40:	movzx  eax,BYTE PTR [rbx+0x2]
  401d44:	cmp    al,0x5c
  401d46:	je     0x401d50
  401d48:	cmp    al,0x2f
  401d4a:	jne    0x401d02
  401d4c:	nop    DWORD PTR [rax+0x0]
  401d50:	mov    r8d,0x400
  401d56:	mov    rdx,rbx
  401d59:	mov    rcx,rsi
  401d5c:	call   0x406fe8
  401d61:	mov    BYTE PTR [rsi+0x3ff],0x0
  401d68:	jmp    0x401d10
  401d6a:	nop    WORD PTR [rax+rax*1+0x0]
  401d70:	mov    r8,rbx
  401d73:	mov    rdx,rdi
  401d76:	mov    rcx,rsi
  401d79:	call   0x404a50
  401d7e:	mov    rcx,rsi
  401d81:	call   0x401bb0
  401d86:	test   eax,eax
  401d88:	je     0x401d28
  401d8a:	lea    rcx,[rip+0x83b4]        # 0x40a145
  401d91:	call   0x407080
  401d96:	test   rax,rax
  401d99:	mov    r14,rax
  401d9c:	je     0x401f7d
  401da2:	cmp    BYTE PTR [rax],0x0
  401da5:	je     0x401f7d
  401dab:	mov    r12,rax
  401dae:	lea    r13,[rsp+0x430]
  401db6:	mov    r15d,0x1
  401dbc:	jmp    0x401ddf
  401dbe:	xchg   ax,ax
  401dc0:	test   eax,eax
  401dc2:	je     0x401d2a
  401dc8:	cmp    BYTE PTR [rbp+0x0],0x0
  401dcc:	je     0x401f7d
  401dd2:	test   r12,r12
  401dd5:	je     0x401fb3
  401ddb:	lea    r12,[rbp+0x1]
  401ddf:	mov    rcx,r12
  401de2:	call   0x4049a0
  401de7:	test   rax,rax
  401dea:	mov    rbp,rax
  401ded:	je     0x401f40
  401df3:	mov    r9,r15
  401df6:	mov    eax,0x400
  401dfb:	sub    r9,r12
  401dfe:	add    r9,rbp
  401e01:	cmp    r9,0x400
  401e08:	cmovg  r9,rax
  401e0c:	test   r9,r9
  401e0f:	jne    0x401f13
  401e15:	movzx  ecx,BYTE PTR [rsp+0x430]
  401e1d:	cmp    cl,0x5c
  401e20:	je     0x401f00
  401e26:	cmp    cl,0x2f
  401e29:	je     0x401f00
  401e2f:	call   QWORD PTR [rip+0xd813]        # 0x40f648
  401e35:	test   eax,eax
  401e37:	je     0x401e47
  401e39:	cmp    BYTE PTR [rsp+0x431],0x3a
  401e41:	je     0x401ee6
  401e47:	mov    r8,r13
  401e4a:	mov    rdx,rdi
  401e4d:	mov    rcx,rsi
  401e50:	call   0x404a50
  401e55:	mov    r8,rbx
  401e58:	mov    rdx,rsi
  401e5b:	mov    rcx,rsi
  401e5e:	call   0x404a50
  401e63:	mov    rcx,rsi
  401e66:	call   0x404af0
  401e6b:	mov    rcx,rsi
  401e6e:	call   0x401bb0
  401e73:	cmp    eax,0xfffffffe
  401e76:	jne    0x401dc0
  401e7c:	call   QWORD PTR [rip+0xd70e]        # 0x40f590
  401e82:	lea    rdx,[rip+0x82e8]        # 0x40a171
  401e89:	lea    rcx,[rax+0x60]
  401e8d:	mov    r8,rsi
  401e90:	call   0x4040e0
  401e95:	call   QWORD PTR [rip+0xd6f5]        # 0x40f590
  401e9b:	lea    rdx,[rax+0x60]
  401e9f:	mov    ecx,0xa
  401ea4:	call   0x407098
  401ea9:	jmp    0x401dc8
  401eae:	xchg   ax,ax
  401eb0:	mov    rbx,QWORD PTR [rip+0xd6d9]        # 0x40f590
  401eb7:	call   rbx
  401eb9:	lea    rdx,[rip+0x8271]        # 0x40a131
  401ec0:	lea    rcx,[rax+0x60]
  401ec4:	mov    r8,rsi
  401ec7:	call   0x4040e0
  401ecc:	call   rbx
  401ece:	lea    rdx,[rax+0x60]
  401ed2:	mov    ecx,0xa
  401ed7:	call   0x407098
  401edc:	mov    eax,0xffffffff
  401ee1:	jmp    0x401d2a
  401ee6:	movzx  eax,BYTE PTR [rsp+0x432]
  401eee:	cmp    al,0x5c
  401ef0:	je     0x401f00
  401ef2:	cmp    al,0x2f
  401ef4:	jne    0x401e47
  401efa:	nop    WORD PTR [rax+rax*1+0x0]
  401f00:	mov    r8,rbx
  401f03:	mov    rdx,r13
  401f06:	mov    rcx,rsi
  401f09:	call   0x404a50
  401f0e:	jmp    0x401e63
  401f13:	mov    r8,r9
  401f16:	mov    rdx,r12
  401f19:	mov    rcx,r13
  401f1c:	mov    QWORD PTR [rsp+0x28],r9
  401f21:	call   0x406fe8
  401f26:	mov    r9,QWORD PTR [rsp+0x28]
  401f2b:	mov    BYTE PTR [rsp+r9*1+0x42f],0x0
  401f34:	jmp    0x401e15
  401f39:	nop    DWORD PTR [rax+0x0]
  401f40:	mov    rcx,r12
  401f43:	call   0x406ff8
  401f48:	lea    rbp,[r12+rax*1]
  401f4c:	jmp    0x401df3
  401f51:	call   QWORD PTR [rip+0xd671]        # 0x40f5c8
  401f57:	mov    ecx,DWORD PTR [rax]
  401f59:	call   0x407000
  401f5e:	mov    rsi,rax
  401f61:	mov    rbx,QWORD PTR [rip+0xd628]        # 0x40f590
  401f68:	call   rbx
  401f6a:	mov    r8,rsi
  401f6d:	lea    rcx,[rax+0x60]
  401f71:	lea    rdx,[rip+0x8190]        # 0x40a108
  401f78:	jmp    0x401ec7
  401f7d:	mov    rsi,QWORD PTR [rip+0xd60c]        # 0x40f590
  401f84:	call   rsi
  401f86:	lea    rdx,[rip+0x81c3]        # 0x40a150
  401f8d:	lea    rcx,[rax+0x60]
  401f91:	mov    r8,rbx
  401f94:	call   0x4040e0
  401f99:	call   rsi
  401f9b:	lea    rdx,[rax+0x60]
  401f9f:	mov    ecx,0xa
  401fa4:	call   0x407098
  401fa9:	mov    eax,0xffffffff
  401fae:	jmp    0x401d2a
  401fb3:	mov    r12,r14
  401fb6:	jmp    0x401ddf
  401fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  401fc0:	push   r15
  401fc2:	push   r14
  401fc4:	push   r13
  401fc6:	push   r12
  401fc8:	push   rbp
  401fc9:	push   rdi
  401fca:	push   rsi
  401fcb:	push   rbx
  401fcc:	sub    rsp,0x598
  401fd3:	mov    rsi,rdx
  401fd6:	mov    rdx,r9
  401fd9:	mov    rbp,r8
  401fdc:	mov    rbx,r9
  401fdf:	call   0x401ca0
  401fe4:	test   eax,eax
  401fe6:	js     0x4021bd
  401fec:	mov    rcx,rbx
  401fef:	call   0x4049d0
  401ff4:	mov    rcx,rbx
  401ff7:	mov    BYTE PTR [rax],0x0
  401ffa:	call   0x404af0
  401fff:	mov    rcx,rbx
  402002:	call   0x406ff8
  402007:	mov    r10d,0x400
  40200d:	lea    rcx,[rbx+rax*1]
  402011:	lea    r8,[rip+0x8174]        # 0x40a18c
  402018:	mov    rdx,r10
  40201b:	mov    r9,rsi
  40201e:	sub    rdx,rax
  402021:	lea    rax,[rip+0x80d8]        # 0x40a100
  402028:	mov    QWORD PTR [rsp+0x20],rax
  40202d:	call   0x403f90
  402032:	mov    rcx,rbx
  402035:	call   0x401bb0
  40203a:	test   eax,eax
  40203c:	jne    0x4021bd
  402042:	lea    rsi,[rsp+0x190]
  40204a:	lea    r8,[rip+0x8141]        # 0x40a192
  402051:	mov    r9,rbx
  402054:	mov    edx,0x400
  402059:	mov    rcx,rsi
  40205c:	call   0x403f90
  402061:	xor    r9d,r9d
  402064:	mov    DWORD PTR [rsp+0x70],0x18
  40206c:	mov    DWORD PTR [rsp+0x80],0x1
  402077:	mov    QWORD PTR [rsp+0x78],0x0
  402080:	lea    rdx,[rsp+0x60]
  402085:	lea    rcx,[rsp+0x58]
  40208a:	lea    r8,[rsp+0x70]
  40208f:	call   QWORD PTR [rip+0xd38b]        # 0x40f420
  402095:	test   eax,eax
  402097:	je     0x4021bd
  40209d:	mov    rbx,QWORD PTR [rip+0xd3b4]        # 0x40f458
  4020a4:	call   rbx
  4020a6:	mov    rdi,QWORD PTR [rsp+0x58]
  4020ab:	mov    r12,rax
  4020ae:	call   rbx
  4020b0:	mov    DWORD PTR [rsp+0x30],0x2
  4020b8:	mov    rcx,rax
  4020bb:	mov    DWORD PTR [rsp+0x28],0x0
  4020c3:	mov    DWORD PTR [rsp+0x20],0x0
  4020cb:	lea    r9,[rsp+0x68]
  4020d0:	mov    r8,r12
  4020d3:	mov    rdx,rdi
  4020d6:	call   QWORD PTR [rip+0xd364]        # 0x40f440
  4020dc:	test   eax,eax
  4020de:	mov    rcx,QWORD PTR [rsp+0x58]
  4020e3:	je     0x4023a0
  4020e9:	mov    r12,QWORD PTR [rip+0xd318]        # 0x40f408
  4020f0:	xor    ebx,ebx
  4020f2:	call   r12
  4020f5:	lea    r8,[rsp+0x120]
  4020fd:	mov    rax,rbx
  402100:	mov    ecx,0xd
  402105:	lea    rdx,[rsp+0x90]
  40210d:	xor    r9d,r9d
  402110:	mov    QWORD PTR [rsp+0x90],0x0
  40211c:	mov    rdi,r8
  40211f:	mov    QWORD PTR [rsp+0x98],0x0
  40212b:	mov    QWORD PTR [rsp+0xa0],0x0
  402137:	rep stos QWORD PTR es:[rdi],rax
  40213a:	mov    rax,QWORD PTR [rsp+0x60]
  40213f:	mov    QWORD PTR [rsp+0x48],rdx
  402144:	mov    rdx,rsi
  402147:	mov    QWORD PTR [rsp+0x40],r8
  40214c:	mov    DWORD PTR [rsp+0x120],0x68
  402157:	xor    r8d,r8d
  40215a:	mov    DWORD PTR [rsp+0x15c],0x100
  402165:	mov    QWORD PTR [rsp+0x170],0xffffffffffffffff
  402171:	mov    QWORD PTR [rsp+0x180],rax
  402179:	mov    QWORD PTR [rsp+0x178],rax
  402181:	mov    QWORD PTR [rsp+0x38],0x0
  40218a:	mov    QWORD PTR [rsp+0x30],0x0
  402193:	mov    DWORD PTR [rsp+0x28],0x0
  40219b:	mov    DWORD PTR [rsp+0x20],0x1
  4021a3:	call   QWORD PTR [rip+0xd27f]        # 0x40f428
  4021a9:	test   eax,eax
  4021ab:	jne    0x4021e0
  4021ad:	mov    rcx,QWORD PTR [rsp+0x60]
  4021b2:	call   r12
  4021b5:	mov    rcx,QWORD PTR [rsp+0x68]
  4021ba:	call   r12
  4021bd:	mov    eax,0xffffffff
  4021c2:	add    rsp,0x598
  4021c9:	pop    rbx
  4021ca:	pop    rsi
  4021cb:	pop    rdi
  4021cc:	pop    rbp
  4021cd:	pop    r12
  4021cf:	pop    r13
  4021d1:	pop    r14
  4021d3:	pop    r15
  4021d5:	ret    
  4021d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021e0:	lea    rsi,[rsp+0xb0]
  4021e8:	mov    rax,rbx
  4021eb:	mov    ecx,0xc
  4021f0:	lea    r14,[rsp+0x54]
  4021f5:	mov    r13,QWORD PTR [rip+0xd2e4]        # 0x40f4e0
  4021fc:	mov    rdi,rsi
  4021ff:	mov    rbx,rsi
  402202:	lea    r15,[rsi+0x63]
  402206:	rep stos QWORD PTR es:[rdi],rax
  402209:	mov    DWORD PTR [rdi],0x0
  40220f:	mov    rdi,QWORD PTR [rip+0xd342]        # 0x40f558
  402216:	jmp    0x40226f
  402218:	nop    DWORD PTR [rax+rax*1+0x0]
  402220:	mov    rax,rsi
  402223:	mov    QWORD PTR [rsp+0x20],0x0
  40222c:	mov    r9,r14
  40222f:	sub    rax,rbx
  402232:	mov    rdx,rbx
  402235:	mov    rcx,QWORD PTR [rsp+0x68]
  40223a:	lea    r8d,[rax+0x64]
  40223e:	call   r13
  402241:	test   eax,eax
  402243:	je     0x402287
  402245:	mov    rcx,rbx
  402248:	call   0x406ff8
  40224d:	mov    ecx,DWORD PTR [rsp+0x54]
  402251:	add    rbx,rax
  402254:	test   ecx,ecx
  402256:	je     0x402287
  402258:	mov    edx,0xa
  40225d:	mov    rcx,rsi
  402260:	call   0x407018
  402265:	test   rax,rax
  402268:	jne    0x402287
  40226a:	cmp    rbx,r15
  40226d:	jae    0x402287
  40226f:	mov    DWORD PTR [rsp+0x54],0x0
  402277:	mov    edx,0x2710
  40227c:	mov    rcx,QWORD PTR [rsp+0x68]
  402281:	call   rdi
  402283:	test   eax,eax
  402285:	je     0x402220
  402287:	cmp    rbx,rsi
  40228a:	je     0x402400
  402290:	mov    edx,0xa
  402295:	mov    rcx,rsi
  402298:	call   0x407018
  40229d:	test   rax,rax
  4022a0:	je     0x4022a6
  4022a2:	mov    BYTE PTR [rax+0x1],0x0
  4022a6:	mov    rax,rsi
  4022a9:	mov    ecx,DWORD PTR [rax]
  4022ab:	add    rax,0x4
  4022af:	lea    edx,[rcx-0x1010101]
  4022b5:	not    ecx
  4022b7:	and    edx,ecx
  4022b9:	and    edx,0x80808080
  4022bf:	je     0x4022a9
  4022c1:	mov    ecx,edx
  4022c3:	shr    ecx,0x10
  4022c6:	test   edx,0x8080
  4022cc:	cmove  edx,ecx
  4022cf:	lea    rcx,[rax+0x2]
  4022d3:	cmove  rax,rcx
  4022d7:	add    dl,dl
  4022d9:	sbb    rax,0x3
  4022dd:	sub    rax,rsi
  4022e0:	cmp    eax,0x1
  4022e3:	movsxd rcx,eax
  4022e6:	jle    0x4023b5
  4022ec:	cdqe   
  4022ee:	lea    rdx,[rsi+rax*1-0x2]
  4022f3:	cmp    BYTE PTR [rdx],0xd
  4022f6:	je     0x4023d0
  4022fc:	movzx  eax,BYTE PTR [rsp+rax*1+0xaf]
  402304:	cmp    al,0xa
  402306:	mov    rbx,rsi
  402309:	je     0x402351
  40230b:	mov    rax,rsi
  40230e:	mov    ecx,DWORD PTR [rax]
  402310:	add    rax,0x4
  402314:	lea    edx,[rcx-0x1010101]
  40231a:	not    ecx
  40231c:	and    edx,ecx
  40231e:	and    edx,0x80808080
  402324:	je     0x40230e
  402326:	mov    ecx,edx
  402328:	shr    ecx,0x10
  40232b:	test   edx,0x8080
  402331:	cmove  edx,ecx
  402334:	lea    rcx,[rax+0x2]
  402338:	cmove  rax,rcx
  40233c:	add    dl,dl
  40233e:	sbb    rax,0x3
  402342:	sub    rax,rsi
  402345:	mov    edx,0xa
  40234a:	mov    rbx,rsi
  40234d:	mov    WORD PTR [rsi+rax*1],dx
  402351:	mov    rcx,QWORD PTR [rsp+0x90]
  402359:	call   r12
  40235c:	mov    rcx,QWORD PTR [rsp+0x98]
  402364:	call   r12
  402367:	mov    rcx,QWORD PTR [rsp+0x60]
  40236c:	call   r12
  40236f:	mov    rcx,QWORD PTR [rsp+0x68]
  402374:	call   r12
  402377:	test   rbx,rbx
  40237a:	je     0x4021bd
  402380:	mov    rdx,rbp
  402383:	mov    rcx,rsi
  402386:	call   0x407010
  40238b:	mov    edx,0xfffffffe
  402390:	test   eax,eax
  402392:	cmovne eax,edx
  402395:	jmp    0x4021c2
  40239a:	nop    WORD PTR [rax+rax*1+0x0]
  4023a0:	mov    rbx,QWORD PTR [rip+0xd061]        # 0x40f408
  4023a7:	call   rbx
  4023a9:	mov    rcx,QWORD PTR [rsp+0x60]
  4023ae:	call   rbx
  4023b0:	jmp    0x4021bd
  4023b5:	test   eax,eax
  4023b7:	je     0x402345
  4023b9:	movzx  eax,BYTE PTR [rsp+rcx*1+0xaf]
  4023c1:	jmp    0x402304
  4023c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4023d0:	lea    rax,[rsi+rax*1-0x1]
  4023d5:	cmp    BYTE PTR [rax],0xa
  4023d8:	jne    0x40230b
  4023de:	mov    BYTE PTR [rdx],0xa
  4023e1:	mov    BYTE PTR [rax],0x0
  4023e4:	lea    eax,[rcx-0x1]
  4023e7:	cdqe   
  4023e9:	movzx  eax,BYTE PTR [rsp+rax*1+0xaf]
  4023f1:	jmp    0x402304
  4023f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402400:	xor    ebx,ebx
  402402:	jmp    0x402351
  402407:	nop    WORD PTR [rax+rax*1+0x0]
  402410:	push   rdi
  402411:	push   rsi
  402412:	push   rbx
  402413:	sub    rsp,0x20
  402417:	call   QWORD PTR [rip+0xd1d3]        # 0x40f5f0
  40241d:	mov    ebx,eax
  40241f:	xor    eax,eax
  402421:	test   ebx,ebx
  402423:	je     0x40246a
  402425:	cmp    ebx,0xffffffff
  402428:	je     0x402472
  40242a:	mov    ecx,ebx
  40242c:	call   0x402a40
  402431:	mov    rdi,QWORD PTR [rip+0xd158]        # 0x40f590
  402438:	mov    rsi,rax
  40243b:	call   rdi
  40243d:	lea    rdx,[rip+0x7d68]        # 0x40a1ac
  402444:	lea    rcx,[rax+0x60]
  402448:	mov    r8,rsi
  40244b:	call   0x4040e0
  402450:	call   rdi
  402452:	lea    rdx,[rax+0x60]
  402456:	mov    ecx,0xa
  40245b:	call   0x407098
  402460:	mov    rcx,rsi
  402463:	call   0x407090
  402468:	mov    eax,ebx
  40246a:	add    rsp,0x20
  40246e:	pop    rbx
  40246f:	pop    rsi
  402470:	pop    rdi
  402471:	ret    
  402472:	call   QWORD PTR [rip+0xd150]        # 0x40f5c8
  402478:	mov    ecx,DWORD PTR [rax]
  40247a:	call   0x407000
  40247f:	mov    rsi,QWORD PTR [rip+0xd10a]        # 0x40f590
  402486:	mov    rdi,rax
  402489:	call   rsi
  40248b:	lea    rdx,[rip+0x7d08]        # 0x40a19a
  402492:	lea    rcx,[rax+0x60]
  402496:	mov    r8,rdi
  402499:	call   0x4040e0
  40249e:	call   rsi
  4024a0:	lea    rdx,[rax+0x60]
  4024a4:	mov    ecx,0xa
  4024a9:	call   0x407098
  4024ae:	mov    eax,ebx
  4024b0:	add    rsp,0x20
  4024b4:	pop    rbx
  4024b5:	pop    rsi
  4024b6:	pop    rdi
  4024b7:	ret    
  4024b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4024c0:	push   rdi
  4024c1:	push   rsi
  4024c2:	push   rbx
  4024c3:	sub    rsp,0xc30
  4024ca:	lea    rdi,[rip+0x7cde]        # 0x40a1af
  4024d1:	mov    rbx,rcx
  4024d4:	mov    rsi,rdx
  4024d7:	mov    ecx,0xd
  4024dc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4024de:	jne    0x402513
  4024e0:	lea    rsi,[rsp+0x420]
  4024e8:	mov    rcx,rbx
  4024eb:	mov    rdx,rsi
  4024ee:	call   0x401ca0
  4024f3:	test   eax,eax
  4024f5:	js     0x402508
  4024f7:	lea    rcx,[rip+0x7cbf]        # 0x40a1bd
  4024fe:	call   0x407080
  402503:	test   rax,rax
  402506:	je     0x402523
  402508:	add    rsp,0xc30
  40250f:	pop    rbx
  402510:	pop    rsi
  402511:	pop    rdi
  402512:	ret    
  402513:	lea    rdx,[rip+0x7ca2]        # 0x40a1bc
  40251a:	xor    ecx,ecx
  40251c:	call   0x403000
  402521:	jmp    0x4024e0
  402523:	lea    rdi,[rsp+0x20]
  402528:	lea    rbx,[rsp+0x820]
  402530:	mov    rcx,rsi
  402533:	mov    rdx,rdi
  402536:	call   0x405320
  40253b:	lea    r8,[rip+0x7c88]        # 0x40a1ca
  402542:	mov    r9,rdi
  402545:	mov    edx,0x40e
  40254a:	mov    rcx,rbx
  40254d:	call   0x403f90
  402552:	lea    rcx,[rbx+0xd]
  402556:	call   0x404af0
  40255b:	mov    rcx,rbx
  40255e:	call   0x406fa8
  402563:	mov    rcx,rax
  402566:	call   0x402de0
  40256b:	jmp    0x402508
  40256d:	nop    DWORD PTR [rax]
  402570:	push   r15
  402572:	push   r14
  402574:	push   r13
  402576:	push   r12
  402578:	push   rbp
  402579:	push   rdi
  40257a:	push   rsi
  40257b:	push   rbx
  40257c:	sub    rsp,0x78
  402580:	xor    r9d,r9d
  402583:	xor    r8d,r8d
  402586:	mov    edx,0x6
  40258b:	lea    r12,[rsp+0x4c]
  402590:	mov    rdi,rcx
  402593:	mov    DWORD PTR [rsp+0x4c],0x0
  40259b:	mov    rbx,QWORD PTR [rip+0xce46]        # 0x40f3e8
  4025a2:	mov    QWORD PTR [rsp+0x20],r12
  4025a7:	call   rbx
  4025a9:	test   eax,eax
  4025ab:	jne    0x402600
  4025ad:	mov    rbp,QWORD PTR [rip+0xcecc]        # 0x40f480
  4025b4:	call   rbp
  4025b6:	cmp    eax,0x7a
  4025b9:	je     0x402610
  4025bb:	call   rbp
  4025bd:	mov    rbx,QWORD PTR [rip+0xcfcc]        # 0x40f590
  4025c4:	mov    esi,eax
  4025c6:	call   rbx
  4025c8:	lea    rdx,[rip+0x7c69]        # 0x40a238
  4025cf:	lea    rcx,[rax+0x60]
  4025d3:	mov    r8d,esi
  4025d6:	call   0x4040e0
  4025db:	call   rbx
  4025dd:	lea    rdx,[rax+0x60]
  4025e1:	mov    ecx,0xa
  4025e6:	xor    ebx,ebx
  4025e8:	call   0x407098
  4025ed:	mov    eax,ebx
  4025ef:	add    rsp,0x78
  4025f3:	pop    rbx
  4025f4:	pop    rsi
  4025f5:	pop    rdi
  4025f6:	pop    rbp
  4025f7:	pop    r12
  4025f9:	pop    r13
  4025fb:	pop    r14
  4025fd:	pop    r15
  4025ff:	ret    
  402600:	mov    rax,QWORD PTR ds:0x0
  402608:	ud2    
  40260a:	nop    WORD PTR [rax+rax*1+0x0]
  402610:	mov    edx,DWORD PTR [rsp+0x4c]
  402614:	mov    ecx,0x40
  402619:	mov    r13,QWORD PTR [rip+0xce98]        # 0x40f4b8
  402620:	call   r13
  402623:	test   rax,rax
  402626:	mov    rsi,rax
  402629:	je     0x4029d3
  40262f:	mov    QWORD PTR [rsp+0x20],r12
  402634:	mov    r9d,DWORD PTR [rsp+0x4c]
  402639:	mov    r8,rax
  40263c:	mov    edx,0x6
  402641:	mov    rcx,rdi
  402644:	call   rbx
  402646:	test   eax,eax
  402648:	je     0x402900
  40264e:	lea    rdx,[rsp+0x60]
  402653:	mov    r9d,0x2
  402659:	mov    r8d,0xc
  40265f:	mov    rcx,QWORD PTR [rsi]
  402662:	call   QWORD PTR [rip+0xcd70]        # 0x40f3d8
  402668:	test   eax,eax
  40266a:	jne    0x4026b0
  40266c:	call   rbp
  40266e:	mov    rbx,QWORD PTR [rip+0xcf1b]        # 0x40f590
  402675:	mov    edi,eax
  402677:	call   rbx
  402679:	lea    rdx,[rip+0x7bf8]        # 0x40a278
  402680:	lea    rcx,[rax+0x60]
  402684:	mov    r8d,edi
  402687:	call   0x4040e0
  40268c:	call   rbx
  40268e:	lea    rdx,[rax+0x60]
  402692:	mov    ecx,0xa
  402697:	xor    ebx,ebx
  402699:	call   0x407098
  40269e:	mov    rdi,QWORD PTR [rip+0xce1b]        # 0x40f4c0
  4026a5:	mov    rcx,rsi
  4026a8:	call   rdi
  4026aa:	jmp    0x4025ed
  4026af:	nop
  4026b0:	lea    r12,[rsp+0x58]
  4026b5:	xor    r9d,r9d
  4026b8:	xor    r8d,r8d
  4026bb:	mov    edx,0x1
  4026c0:	mov    rcx,rdi
  4026c3:	mov    QWORD PTR [rsp+0x20],r12
  4026c8:	call   rbx
  4026ca:	test   eax,eax
  4026cc:	jne    0x402740
  4026ce:	call   rbp
  4026d0:	cmp    eax,0x7a
  4026d3:	je     0x4028a4
  4026d9:	call   rbp
  4026db:	mov    rbx,QWORD PTR [rip+0xceae]        # 0x40f590
  4026e2:	mov    edi,eax
  4026e4:	call   rbx
  4026e6:	lea    rdx,[rip+0x7b4b]        # 0x40a238
  4026ed:	lea    rcx,[rax+0x60]
  4026f1:	mov    r8d,edi
  4026f4:	call   0x4040e0
  4026f9:	call   rbx
  4026fb:	lea    rdx,[rax+0x60]
  4026ff:	mov    ecx,0xa
  402704:	call   0x407098
  402709:	mov    rdi,QWORD PTR [rip+0xcdb0]        # 0x40f4c0
  402710:	call   rbp
  402712:	mov    ebp,eax
  402714:	call   rbx
  402716:	lea    rdx,[rip+0x7c73]        # 0x40a390
  40271d:	lea    rcx,[rax+0x60]
  402721:	mov    r8d,ebp
  402724:	call   0x4040e0
  402729:	call   rbx
  40272b:	lea    rdx,[rax+0x60]
  40272f:	mov    ecx,0xa
  402734:	xor    ebx,ebx
  402736:	call   0x407098
  40273b:	jmp    0x4026a5
  402740:	mov    QWORD PTR [rsp+0x30],0x0
  402749:	mov    QWORD PTR [rsp+0x20],r12
  40274e:	mov    r9d,DWORD PTR [rsp+0x58]
  402753:	mov    edx,0x1
  402758:	mov    r8,QWORD PTR [rsp+0x30]
  40275d:	mov    rcx,rdi
  402760:	call   rbx
  402762:	test   eax,eax
  402764:	je     0x402860
  40276a:	mov    ebx,DWORD PTR [rsp+0x64]
  40276e:	mov    rax,QWORD PTR [rsp+0x30]
  402773:	mov    rcx,QWORD PTR [rax]
  402776:	call   QWORD PTR [rip+0xcc64]        # 0x40f3e0
  40277c:	lea    edx,[rbx+rax*1+0x8]
  402780:	mov    ecx,0x40
  402785:	mov    DWORD PTR [rsp+0x3c],edx
  402789:	call   r13
  40278c:	test   rax,rax
  40278f:	mov    r13,rax
  402792:	je     0x402990
  402798:	mov    r8d,0x2
  40279e:	mov    edx,DWORD PTR [rsp+0x3c]
  4027a2:	mov    rcx,r13
  4027a5:	call   QWORD PTR [rip+0xcc45]        # 0x40f3f0
  4027ab:	test   eax,eax
  4027ad:	je     0x4028e0
  4027b3:	mov    eax,DWORD PTR [rsp+0x60]
  4027b7:	xor    ebx,ebx
  4027b9:	mov    r14,QWORD PTR [rip+0xcc10]        # 0x40f3d0
  4027c0:	mov    r15,QWORD PTR [rip+0xcc01]        # 0x40f3c8
  4027c7:	test   eax,eax
  4027c9:	jg     0x402804
  4027cb:	jmp    0x402920
  4027d0:	mov    r9,QWORD PTR [rsp+0x58]
  4027d5:	mov    r8d,0xffffffff
  4027db:	mov    edx,0x2
  4027e0:	mov    rcx,r13
  4027e3:	movzx  eax,WORD PTR [r9+0x2]
  4027e8:	mov    DWORD PTR [rsp+0x20],eax
  4027ec:	call   r15
  4027ef:	test   eax,eax
  4027f1:	je     0x402970
  4027f7:	add    ebx,0x1
  4027fa:	cmp    DWORD PTR [rsp+0x60],ebx
  4027fe:	jle    0x402920
  402804:	mov    r8,r12
  402807:	mov    edx,ebx
  402809:	mov    rcx,QWORD PTR [rsi]
  40280c:	call   r14
  40280f:	test   eax,eax
  402811:	jne    0x4027d0
  402813:	call   rbp
  402815:	mov    rbx,QWORD PTR [rip+0xcd74]        # 0x40f590
  40281c:	mov    edi,eax
  40281e:	call   rbx
  402820:	lea    rdx,[rip+0x7ab1]        # 0x40a2d8
  402827:	lea    rcx,[rax+0x60]
  40282b:	mov    r8d,edi
  40282e:	call   0x4040e0
  402833:	call   rbx
  402835:	lea    rdx,[rax+0x60]
  402839:	mov    ecx,0xa
  40283e:	xor    ebx,ebx
  402840:	call   0x407098
  402845:	mov    rcx,QWORD PTR [rsp+0x30]
  40284a:	mov    rdi,QWORD PTR [rip+0xcc6f]        # 0x40f4c0
  402851:	call   rdi
  402853:	mov    rcx,r13
  402856:	call   rdi
  402858:	jmp    0x4026a5
  40285d:	nop    DWORD PTR [rax]
  402860:	mov    rcx,QWORD PTR [rsp+0x30]
  402865:	mov    rdi,QWORD PTR [rip+0xcc54]        # 0x40f4c0
  40286c:	call   rdi
  40286e:	call   rbp
  402870:	mov    rbx,QWORD PTR [rip+0xcd19]        # 0x40f590
  402877:	mov    r12d,eax
  40287a:	call   rbx
  40287c:	lea    rdx,[rip+0x7985]        # 0x40a208
  402883:	lea    rcx,[rax+0x60]
  402887:	mov    r8d,r12d
  40288a:	call   0x4040e0
  40288f:	call   rbx
  402891:	lea    rdx,[rax+0x60]
  402895:	mov    ecx,0xa
  40289a:	call   0x407098
  40289f:	jmp    0x402710
  4028a4:	mov    edx,DWORD PTR [rsp+0x58]
  4028a8:	mov    ecx,0x40
  4028ad:	call   r13
  4028b0:	test   rax,rax
  4028b3:	mov    QWORD PTR [rsp+0x30],rax
  4028b8:	jne    0x402749
  4028be:	mov    edi,DWORD PTR [rsp+0x58]
  4028c2:	mov    rbx,QWORD PTR [rip+0xccc7]        # 0x40f590
  4028c9:	call   rbx
  4028cb:	lea    rdx,[rip+0x790e]        # 0x40a1e0
  4028d2:	lea    rcx,[rax+0x60]
  4028d6:	mov    r8d,edi
  4028d9:	jmp    0x4026f4
  4028de:	xchg   ax,ax
  4028e0:	call   rbp
  4028e2:	mov    edi,eax
  4028e4:	mov    rbx,QWORD PTR [rip+0xcca5]        # 0x40f590
  4028eb:	call   rbx
  4028ed:	mov    r8d,edi
  4028f0:	lea    rcx,[rax+0x60]
  4028f4:	lea    rdx,[rip+0x79ad]        # 0x40a2a8
  4028fb:	jmp    0x40282e
  402900:	call   rbp
  402902:	mov    edi,eax
  402904:	mov    rbx,QWORD PTR [rip+0xcc85]        # 0x40f590
  40290b:	call   rbx
  40290d:	mov    r8d,edi
  402910:	lea    rcx,[rax+0x60]
  402914:	lea    rdx,[rip+0x78ed]        # 0x40a208
  40291b:	jmp    0x402687
  402920:	mov    rax,QWORD PTR [rsp+0x30]
  402925:	mov    r9d,0x10000000
  40292b:	mov    r8d,0x1
  402931:	mov    edx,0x2
  402936:	mov    rcx,r13
  402939:	mov    rax,QWORD PTR [rax]
  40293c:	mov    QWORD PTR [rsp+0x20],rax
  402941:	call   QWORD PTR [rip+0xca79]        # 0x40f3c0
  402947:	test   eax,eax
  402949:	jne    0x4029f3
  40294f:	call   rbp
  402951:	mov    edi,eax
  402953:	mov    rbx,QWORD PTR [rip+0xcc36]        # 0x40f590
  40295a:	call   rbx
  40295c:	mov    r8d,edi
  40295f:	lea    rcx,[rax+0x60]
  402963:	lea    rdx,[rip+0x79be]        # 0x40a328
  40296a:	jmp    0x40282e
  40296f:	nop
  402970:	call   rbp
  402972:	mov    edi,eax
  402974:	mov    rbx,QWORD PTR [rip+0xcc15]        # 0x40f590
  40297b:	call   rbx
  40297d:	mov    r8d,edi
  402980:	lea    rcx,[rax+0x60]
  402984:	lea    rdx,[rip+0x7975]        # 0x40a300
  40298b:	jmp    0x40282e
  402990:	mov    rbx,QWORD PTR [rip+0xcbf9]        # 0x40f590
  402997:	call   rbx
  402999:	mov    r8d,DWORD PTR [rsp+0x3c]
  40299e:	lea    rcx,[rax+0x60]
  4029a2:	lea    rdx,[rip+0x7837]        # 0x40a1e0
  4029a9:	call   0x4040e0
  4029ae:	call   rbx
  4029b0:	lea    rdx,[rax+0x60]
  4029b4:	mov    ecx,0xa
  4029b9:	xor    ebx,ebx
  4029bb:	call   0x407098
  4029c0:	mov    rcx,QWORD PTR [rsp+0x30]
  4029c5:	mov    rdi,QWORD PTR [rip+0xcaf4]        # 0x40f4c0
  4029cc:	call   rdi
  4029ce:	jmp    0x4026a5
  4029d3:	mov    esi,DWORD PTR [rsp+0x4c]
  4029d7:	mov    rbx,QWORD PTR [rip+0xcbb2]        # 0x40f590
  4029de:	call   rbx
  4029e0:	lea    rdx,[rip+0x77f9]        # 0x40a1e0
  4029e7:	lea    rcx,[rax+0x60]
  4029eb:	mov    r8d,esi
  4029ee:	jmp    0x4025d6
  4029f3:	mov    QWORD PTR [rsp+0x50],r13
  4029f8:	mov    r9d,DWORD PTR [rsp+0x3c]
  4029fd:	lea    r8,[rsp+0x50]
  402a02:	mov    edx,0x6
  402a07:	mov    rcx,rdi
  402a0a:	mov    ebx,0x1
  402a0f:	call   QWORD PTR [rip+0xc9e3]        # 0x40f3f8
  402a15:	test   eax,eax
  402a17:	jne    0x402845
  402a1d:	call   rbp
  402a1f:	mov    edi,eax
  402a21:	mov    rbx,QWORD PTR [rip+0xcb68]        # 0x40f590
  402a28:	call   rbx
  402a2a:	mov    r8d,edi
  402a2d:	lea    rcx,[rax+0x60]
  402a31:	lea    rdx,[rip+0x7928]        # 0x40a360
  402a38:	jmp    0x40282e
  402a3d:	nop
  402a3e:	nop
  402a3f:	nop
  402a40:	push   rbx
  402a41:	sub    rsp,0x220
  402a48:	test   ecx,0xffffff00
  402a4e:	je     0x402a80
  402a50:	lea    rbx,[rsp+0x20]
  402a55:	lea    r8,[rip+0x79bc]        # 0x40a418
  402a5c:	mov    r9d,ecx
  402a5f:	mov    edx,0x200
  402a64:	mov    rcx,rbx
  402a67:	call   0x403f90
  402a6c:	mov    rcx,rbx
  402a6f:	call   0x402ca0
  402a74:	add    rsp,0x220
  402a7b:	pop    rbx
  402a7c:	ret    
  402a7d:	nop    DWORD PTR [rax]
  402a80:	cmp    ecx,0x7e
  402a83:	je     0x402ac3
  402a85:	cmp    ecx,0x7f
  402a88:	jne    0x402aa5
  402a8a:	lea    rbx,[rsp+0x20]
  402a8f:	lea    r8,[rip+0x7941]        # 0x40a3d7
  402a96:	mov    edx,0x200
  402a9b:	mov    rcx,rbx
  402a9e:	call   0x403f90
  402aa3:	jmp    0x402a6c
  402aa5:	lea    rbx,[rsp+0x20]
  402aaa:	lea    r8,[rip+0x793f]        # 0x40a3f0
  402ab1:	mov    r9d,ecx
  402ab4:	mov    edx,0x200
  402ab9:	mov    rcx,rbx
  402abc:	call   0x403f90
  402ac1:	jmp    0x402a6c
  402ac3:	lea    rbx,[rsp+0x20]
  402ac8:	lea    r8,[rip+0x78f1]        # 0x40a3c0
  402acf:	mov    edx,0x200
  402ad4:	mov    rcx,rbx
  402ad7:	call   0x403f90
  402adc:	jmp    0x402a6c
  402ade:	nop
  402adf:	nop
  402ae0:	sub    rsp,0x28
  402ae4:	mov    eax,0x1
  402ae9:	test   rcx,rcx
  402aec:	cmove  rcx,rax
  402af0:	call   0x407060
  402af5:	test   rax,rax
  402af8:	je     0x402aff
  402afa:	add    rsp,0x28
  402afe:	ret    
  402aff:	call   QWORD PTR [rip+0xca8b]        # 0x40f590
  402b05:	lea    rdx,[rip+0x7944]        # 0x40a450
  402b0c:	lea    rcx,[rax+0x60]
  402b10:	call   0x4040e0
  402b15:	mov    ecx,0x1
  402b1a:	call   0x4070a8
  402b1f:	nop
  402b20:	push   rsi
  402b21:	push   rbx
  402b22:	sub    rsp,0x28
  402b26:	mov    rbx,rcx
  402b29:	call   0x402ae0
  402b2e:	mov    rsi,rax
  402b31:	or     rax,rbx
  402b34:	test   al,0x3
  402b36:	jne    0x402b70
  402b38:	cmp    rbx,0x400
  402b3f:	ja     0x402b70
  402b41:	add    rbx,rsi
  402b44:	mov    rdx,rsi
  402b47:	cmp    rsi,rbx
  402b4a:	jae    0x402b60
  402b4c:	nop    DWORD PTR [rax+0x0]
  402b50:	add    rdx,0x4
  402b54:	mov    DWORD PTR [rdx-0x4],0x0
  402b5b:	cmp    rbx,rdx
  402b5e:	ja     0x402b50
  402b60:	mov    rax,rsi
  402b63:	add    rsp,0x28
  402b67:	pop    rbx
  402b68:	pop    rsi
  402b69:	ret    
  402b6a:	nop    WORD PTR [rax+rax*1+0x0]
  402b70:	mov    r8,rbx
  402b73:	xor    edx,edx
  402b75:	mov    rcx,rsi
  402b78:	call   0x407040
  402b7d:	mov    rax,rsi
  402b80:	add    rsp,0x28
  402b84:	pop    rbx
  402b85:	pop    rsi
  402b86:	ret    
  402b87:	nop    WORD PTR [rax+rax*1+0x0]
  402b90:	sub    rsp,0x28
  402b94:	test   rcx,rcx
  402b97:	jne    0x402ba5
  402b99:	test   rdx,rdx
  402b9c:	mov    eax,0x1
  402ba1:	cmove  rdx,rax
  402ba5:	call   0x407038
  402baa:	test   rax,rax
  402bad:	je     0x402bb4
  402baf:	add    rsp,0x28
  402bb3:	ret    
  402bb4:	call   QWORD PTR [rip+0xc9d6]        # 0x40f590
  402bba:	lea    rdx,[rip+0x788f]        # 0x40a450
  402bc1:	lea    rcx,[rax+0x60]
  402bc5:	call   0x4040e0
  402bca:	mov    ecx,0x1
  402bcf:	call   0x4070a8
  402bd4:	nop
  402bd5:	nop
  402bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402be0:	sub    rsp,0x28
  402be4:	test   rcx,rcx
  402be7:	je     0x402bf8
  402be9:	call   0x406fa8
  402bee:	test   rax,rax
  402bf1:	je     0x402c18
  402bf3:	add    rsp,0x28
  402bf7:	ret    
  402bf8:	call   QWORD PTR [rip+0xc992]        # 0x40f590
  402bfe:	lea    rdx,[rip+0x785b]        # 0x40a460
  402c05:	lea    rcx,[rax+0x60]
  402c09:	call   0x4040e0
  402c0e:	mov    ecx,0x1
  402c13:	call   0x4070a8
  402c18:	call   QWORD PTR [rip+0xc972]        # 0x40f590
  402c1e:	lea    rdx,[rip+0x782b]        # 0x40a450
  402c25:	lea    rcx,[rax+0x60]
  402c29:	call   0x4040e0
  402c2e:	mov    ecx,0x1
  402c33:	call   0x4070a8
  402c38:	nop
  402c39:	nop    DWORD PTR [rax+0x0]
  402c40:	test   rcx,rcx
  402c43:	je     0x402c50
  402c45:	jmp    0x407090
  402c4a:	nop    WORD PTR [rax+rax*1+0x0]
  402c50:	repz ret 
  402c52:	nop    DWORD PTR [rax+0x0]
  402c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c60:	jmp    0x402ae0
  402c65:	nop
  402c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c70:	jmp    0x402b20
  402c75:	nop
  402c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c80:	test   rcx,rcx
  402c83:	je     0x402c90
  402c85:	jmp    0x407090
  402c8a:	nop    WORD PTR [rax+rax*1+0x0]
  402c90:	repz ret 
  402c92:	nop    DWORD PTR [rax+0x0]
  402c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ca0:	jmp    0x402be0
  402ca5:	nop
  402ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402cb0:	jmp    0x402b90
  402cb5:	nop
  402cb6:	nop
  402cb7:	nop
  402cb8:	nop
  402cb9:	nop
  402cba:	nop
  402cbb:	nop
  402cbc:	nop
  402cbd:	nop
  402cbe:	nop
  402cbf:	nop
  402cc0:	push   rbx
  402cc1:	sub    rsp,0x20
  402cc5:	test   r8,r8
  402cc8:	je     0x402d61
  402cce:	cmp    BYTE PTR [rcx],0x0
  402cd1:	je     0x402d65
  402cd7:	lea    r10,[rcx+0x1]
  402cdb:	lea    rax,[rcx+r8*1]
  402cdf:	jmp    0x402cec
  402ce1:	lea    r10,[r10+0x1]
  402ce5:	cmp    BYTE PTR [r10-0x1],0x0
  402cea:	je     0x402d40
  402cec:	cmp    r10,rax
  402cef:	mov    r9,r10
  402cf2:	jne    0x402ce1
  402cf4:	sub    rax,rcx
  402cf7:	mov    rbx,rax
  402cfa:	sub    r8,rbx
  402cfd:	je     0x402d4b
  402cff:	movzx  r11d,BYTE PTR [rdx]
  402d03:	mov    r10,rdx
  402d06:	test   r11b,r11b
  402d09:	je     0x402d5c
  402d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d10:	cmp    r8,0x1
  402d14:	je     0x402d21
  402d16:	mov    BYTE PTR [r9],r11b
  402d19:	sub    r8,0x1
  402d1d:	add    r9,0x1
  402d21:	add    r10,0x1
  402d25:	movzx  r11d,BYTE PTR [r10]
  402d29:	test   r11b,r11b
  402d2c:	jne    0x402d10
  402d2e:	sub    r10,rdx
  402d31:	lea    rax,[r10+rbx*1]
  402d35:	mov    BYTE PTR [r9],0x0
  402d39:	add    rsp,0x20
  402d3d:	pop    rbx
  402d3e:	ret    
  402d3f:	nop
  402d40:	mov    rbx,r9
  402d43:	sub    rbx,rcx
  402d46:	sub    r8,rbx
  402d49:	jne    0x402cff
  402d4b:	mov    rcx,rdx
  402d4e:	call   0x406ff8
  402d53:	add    rax,rbx
  402d56:	add    rsp,0x20
  402d5a:	pop    rbx
  402d5b:	ret    
  402d5c:	xor    r10d,r10d
  402d5f:	jmp    0x402d31
  402d61:	xor    ebx,ebx
  402d63:	jmp    0x402d4b
  402d65:	mov    r9,rcx
  402d68:	xor    ebx,ebx
  402d6a:	jmp    0x402cff
  402d6c:	nop
  402d6d:	nop
  402d6e:	nop
  402d6f:	nop
  402d70:	test   r8,r8
  402d73:	je     0x402dc0
  402d75:	lea    rax,[rcx+r8*1-0x1]
  402d7a:	mov    r8,rdx
  402d7d:	jmp    0x402d96
  402d7f:	nop
  402d80:	add    r8,0x1
  402d84:	movzx  r9d,BYTE PTR [r8-0x1]
  402d89:	add    rcx,0x1
  402d8d:	test   r9b,r9b
  402d90:	mov    BYTE PTR [rcx-0x1],r9b
  402d94:	je     0x402db0
  402d96:	cmp    rcx,rax
  402d99:	jne    0x402d80
  402d9b:	add    r8,0x1
  402d9f:	mov    BYTE PTR [rcx],0x0
  402da2:	cmp    BYTE PTR [r8-0x1],0x0
  402da7:	jne    0x402dc3
  402da9:	nop    DWORD PTR [rax+0x0]
  402db0:	not    rdx
  402db3:	lea    rax,[r8+rdx*1]
  402db7:	ret    
  402db8:	nop    DWORD PTR [rax+rax*1+0x0]
  402dc0:	mov    r8,rdx
  402dc3:	add    r8,0x1
  402dc7:	cmp    BYTE PTR [r8-0x1],0x0
  402dcc:	jne    0x402dc3
  402dce:	not    rdx
  402dd1:	lea    rax,[r8+rdx*1]
  402dd5:	ret    
  402dd6:	nop
  402dd7:	nop
  402dd8:	nop
  402dd9:	nop
  402dda:	nop
  402ddb:	nop
  402ddc:	nop
  402ddd:	nop
  402dde:	nop
  402ddf:	nop
  402de0:	push   rsi
  402de1:	push   rbx
  402de2:	sub    rsp,0x28
  402de6:	mov    rsi,rcx
  402de9:	call   0x406fa8
  402dee:	test   rax,rax
  402df1:	mov    rbx,rax
  402df4:	je     0x402e48
  402df6:	mov    edx,0x3d
  402dfb:	mov    rcx,rax
  402dfe:	call   0x407018
  402e03:	test   rax,rax
  402e06:	je     0x402e40
  402e08:	cmp    BYTE PTR [rax+0x1],0x0
  402e0c:	mov    BYTE PTR [rax],0x0
  402e0f:	je     0x402e22
  402e11:	lea    rdx,[rax+0x1]
  402e15:	mov    rcx,rbx
  402e18:	call   QWORD PTR [rip+0xc6f2]        # 0x40f510
  402e1e:	test   eax,eax
  402e20:	je     0x402e40
  402e22:	mov    rcx,rbx
  402e25:	call   0x407090
  402e2a:	mov    rax,QWORD PTR [rip+0xc7c7]        # 0x40f5f8
  402e31:	mov    rcx,rsi
  402e34:	add    rsp,0x28
  402e38:	pop    rbx
  402e39:	pop    rsi
  402e3a:	rex.W jmp rax
  402e3d:	nop    DWORD PTR [rax]
  402e40:	mov    rcx,rbx
  402e43:	call   0x407090
  402e48:	mov    eax,0xffffffff
  402e4d:	add    rsp,0x28
  402e51:	pop    rbx
  402e52:	pop    rsi
  402e53:	ret    
  402e54:	xchg   ax,ax
  402e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e60:	push   rsi
  402e61:	push   rbx
  402e62:	sub    rsp,0x28
  402e66:	mov    rsi,rcx
  402e69:	call   0x406ff8
  402e6e:	lea    rcx,[rax+0x2]
  402e72:	call   0x407060
  402e77:	test   rax,rax
  402e7a:	mov    rbx,rax
  402e7d:	je     0x402eb0
  402e7f:	lea    rdx,[rip+0x760a]        # 0x40a490
  402e86:	mov    r8,rsi
  402e89:	mov    rcx,rax
  402e8c:	call   0x403fd0
  402e91:	mov    rcx,rbx
  402e94:	call   0x402de0
  402e99:	mov    rcx,rbx
  402e9c:	add    rsp,0x28
  402ea0:	pop    rbx
  402ea1:	pop    rsi
  402ea2:	jmp    0x407090
  402ea7:	nop    WORD PTR [rax+rax*1+0x0]
  402eb0:	add    rsp,0x28
  402eb4:	pop    rbx
  402eb5:	pop    rsi
  402eb6:	ret    
  402eb7:	nop
  402eb8:	nop
  402eb9:	nop
  402eba:	nop
  402ebb:	nop
  402ebc:	nop
  402ebd:	nop
  402ebe:	nop
  402ebf:	nop
  402ec0:	push   r15
  402ec2:	push   r14
  402ec4:	push   r13
  402ec6:	push   r12
  402ec8:	push   rbp
  402ec9:	push   rdi
  402eca:	push   rsi
  402ecb:	push   rbx
  402ecc:	sub    rsp,0x28
  402ed0:	mov    rsi,QWORD PTR [rcx]
  402ed3:	test   rsi,rsi
  402ed6:	je     0x402fee
  402edc:	mov    r12,rdx
  402edf:	mov    r14,rcx
  402ee2:	mov    r8,rcx
  402ee5:	xor    ebp,ebp
  402ee7:	nop    WORD PTR [rax+rax*1+0x0]
  402ef0:	mov    rdx,rsi
  402ef3:	mov    rcx,r12
  402ef6:	mov    rdi,QWORD PTR [r8+0x8]
  402efa:	mov    r13,QWORD PTR [r8+0x10]
  402efe:	call   0x406fd8
  402f03:	test   rax,rax
  402f06:	mov    rbx,rax
  402f09:	je     0x402fc1
  402f0f:	test   rdi,rdi
  402f12:	mov    rcx,rsi
  402f15:	je     0x402fe0
  402f1b:	call   0x406ff8
  402f20:	lea    rcx,[rbx+rax*1]
  402f24:	mov    rdx,rdi
  402f27:	call   0x406fd8
  402f2c:	test   rax,rax
  402f2f:	mov    rsi,rax
  402f32:	je     0x402fc1
  402f38:	mov    rcx,rdi
  402f3b:	call   0x406ff8
  402f40:	lea    rdi,[rsi+rax*1]
  402f44:	mov    rcx,r13
  402f47:	sub    rbx,r12
  402f4a:	call   0x406ff8
  402f4f:	mov    rcx,rdi
  402f52:	mov    rbp,rax
  402f55:	lea    r14d,[rbp+rbx*1+0x0]
  402f5a:	call   0x406ff8
  402f5f:	lea    esi,[rax+0x1]
  402f62:	xor    eax,eax
  402f64:	lea    r9d,[r14+rsi*1]
  402f68:	cmp    r9d,0x64
  402f6c:	jg     0x402fb0
  402f6e:	lea    r15,[rip+0xb50b]        # 0x40e480
  402f75:	movsxd rbx,ebx
  402f78:	mov    rdx,r12
  402f7b:	mov    r8,rbx
  402f7e:	mov    rcx,r15
  402f81:	call   0x407050
  402f86:	lea    rcx,[rbx+r15*1]
  402f8a:	movsxd r8,ebp
  402f8d:	mov    rdx,r13
  402f90:	call   0x407050
  402f95:	movsxd rcx,r14d
  402f98:	movsxd r8,esi
  402f9b:	mov    rdx,rdi
  402f9e:	add    rcx,r15
  402fa1:	call   0x407050
  402fa6:	mov    rax,r15
  402fa9:	nop    DWORD PTR [rax+0x0]
  402fb0:	add    rsp,0x28
  402fb4:	pop    rbx
  402fb5:	pop    rsi
  402fb6:	pop    rdi
  402fb7:	pop    rbp
  402fb8:	pop    r12
  402fba:	pop    r13
  402fbc:	pop    r14
  402fbe:	pop    r15
  402fc0:	ret    
  402fc1:	add    ebp,0x1
  402fc4:	movsxd rax,ebp
  402fc7:	lea    rax,[rax+rax*2]
  402fcb:	lea    r8,[r14+rax*8]
  402fcf:	mov    rsi,QWORD PTR [r8]
  402fd2:	test   rsi,rsi
  402fd5:	jne    0x402ef0
  402fdb:	mov    rax,r12
  402fde:	jmp    0x402fb0
  402fe0:	call   0x406ff8
  402fe5:	lea    rdi,[rbx+rax*1]
  402fe9:	jmp    0x402f44
  402fee:	mov    rax,rdx
  402ff1:	jmp    0x402fb0
  402ff3:	nop    DWORD PTR [rax]
  402ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403000:	push   rbx
  403001:	sub    rsp,0x20
  403005:	xor    eax,eax
  403007:	test   rdx,rdx
  40300a:	mov    ebx,ecx
  40300c:	je     0x40301a
  40300e:	lea    rcx,[rip+0x75eb]        # 0x40a600
  403015:	call   0x402ec0
  40301a:	mov    rdx,rax
  40301d:	mov    ecx,ebx
  40301f:	call   0x407030
  403024:	test   rax,rax
  403027:	je     0x403040
  403029:	lea    rcx,[rip+0x74d0]        # 0x40a500
  403030:	mov    rdx,rax
  403033:	add    rsp,0x20
  403037:	pop    rbx
  403038:	jmp    0x402ec0
  40303d:	nop    DWORD PTR [rax]
  403040:	xor    eax,eax
  403042:	add    rsp,0x20
  403046:	pop    rbx
  403047:	ret    
  403048:	nop
  403049:	nop
  40304a:	nop
  40304b:	nop
  40304c:	nop
  40304d:	nop
  40304e:	nop
  40304f:	nop
  403050:	push   rbx
  403051:	sub    rsp,0x20
  403055:	mov    rbx,rcx
  403058:	mov    rcx,QWORD PTR [rcx+0x8]
  40305c:	mov    r8,QWORD PTR [rbx]
  40305f:	sub    r8,rcx
  403062:	je     0x403079
  403064:	mov    r9,QWORD PTR [rbx+0x18]
  403068:	mov    edx,0x1
  40306d:	call   0x407088
  403072:	add    DWORD PTR [rbx+0x20],eax
  403075:	mov    rcx,QWORD PTR [rbx+0x8]
  403079:	mov    QWORD PTR [rbx],rcx
  40307c:	add    rsp,0x20
  403080:	pop    rbx
  403081:	ret    
  403082:	nop    DWORD PTR [rax+0x0]
  403086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403090:	push   r12
  403092:	push   rbp
  403093:	push   rdi
  403094:	push   rsi
  403095:	push   rbx
  403096:	sub    rsp,0x20
  40309a:	test   edx,edx
  40309c:	mov    rbp,rcx
  40309f:	mov    edi,edx
  4030a1:	mov    rbx,r8
  4030a4:	jle    0x4030fd
  4030a6:	mov    rax,QWORD PTR [rbx+0x10]
  4030aa:	mov    rcx,QWORD PTR [rbx]
  4030ad:	test   rax,rax
  4030b0:	je     0x4030d7
  4030b2:	sub    rax,rcx
  4030b5:	test   eax,eax
  4030b7:	mov    r8d,eax
  4030ba:	jg     0x4030da
  4030bc:	cmp    QWORD PTR [rbx+0x18],0x0
  4030c1:	je     0x4030fd
  4030c3:	mov    rcx,rbx
  4030c6:	call   0x403050
  4030cb:	mov    rax,QWORD PTR [rbx+0x10]
  4030cf:	mov    rcx,QWORD PTR [rbx]
  4030d2:	test   rax,rax
  4030d5:	jne    0x4030b2
  4030d7:	mov    r8d,edi
  4030da:	cmp    r8d,edi
  4030dd:	mov    esi,r8d
  4030e0:	mov    rdx,rbp
  4030e3:	cmovg  esi,edi
  4030e6:	movsxd r12,esi
  4030e9:	sub    edi,esi
  4030eb:	mov    r8,r12
  4030ee:	add    rbp,r12
  4030f1:	call   0x407048
  4030f6:	add    QWORD PTR [rbx],r12
  4030f9:	test   edi,edi
  4030fb:	jg     0x4030a6
  4030fd:	add    rsp,0x20
  403101:	pop    rbx
  403102:	pop    rsi
  403103:	pop    rdi
  403104:	pop    rbp
  403105:	pop    r12
  403107:	ret    
  403108:	nop    DWORD PTR [rax+rax*1+0x0]
  403110:	push   rbx
  403111:	sub    rsp,0x30
  403115:	mov    r8,QWORD PTR [rdx+0x10]
  403119:	mov    rax,QWORD PTR [rdx]
  40311c:	mov    ebx,ecx
  40311e:	test   r8,r8
  403121:	je     0x403144
  403123:	cmp    r8,rax
  403126:	ja     0x403144
  403128:	cmp    QWORD PTR [rdx+0x18],0x0
  40312d:	je     0x40314d
  40312f:	mov    rcx,rdx
  403132:	mov    QWORD PTR [rsp+0x28],rdx
  403137:	call   0x403050
  40313c:	mov    rdx,QWORD PTR [rsp+0x28]
  403141:	mov    rax,QWORD PTR [rdx]
  403144:	lea    rcx,[rax+0x1]
  403148:	mov    QWORD PTR [rdx],rcx
  40314b:	mov    BYTE PTR [rax],bl
  40314d:	add    rsp,0x30
  403151:	pop    rbx
  403152:	ret    
  403153:	nop    DWORD PTR [rax]
  403156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403160:	push   rbp
  403161:	push   rdi
  403162:	push   rsi
  403163:	push   rbx
  403164:	sub    rsp,0x28
  403168:	mov    eax,DWORD PTR [r8]
  40316b:	mov    ebp,ecx
  40316d:	mov    rdi,rdx
  403170:	mov    rbx,r8
  403173:	mov    rsi,r9
  403176:	mov    ecx,DWORD PTR [rdx]
  403178:	test   eax,eax
  40317a:	jle    0x4031c0
  40317c:	test   ebp,ebp
  40317e:	je     0x4031c0
  403180:	test   ecx,ecx
  403182:	jne    0x403215
  403188:	nop    DWORD PTR [rax+rax*1+0x0]
  403190:	mov    rdx,rsi
  403193:	mov    ecx,ebp
  403195:	call   0x403110
  40319a:	mov    eax,DWORD PTR [rbx]
  40319c:	sub    eax,0x1
  40319f:	test   eax,eax
  4031a1:	mov    DWORD PTR [rbx],eax
  4031a3:	jg     0x403190
  4031a5:	mov    ecx,DWORD PTR [rdi]
  4031a7:	test   ecx,ecx
  4031a9:	jne    0x4031f8
  4031ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4031b0:	add    rsp,0x28
  4031b4:	pop    rbx
  4031b5:	pop    rsi
  4031b6:	pop    rdi
  4031b7:	pop    rbp
  4031b8:	ret    
  4031b9:	nop    DWORD PTR [rax+0x0]
  4031c0:	xor    edx,edx
  4031c2:	test   ecx,ecx
  4031c4:	setne  dl
  4031c7:	cmp    eax,edx
  4031c9:	jle    0x4031a7
  4031cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4031d0:	mov    ecx,0x20
  4031d5:	mov    rdx,rsi
  4031d8:	call   0x403110
  4031dd:	mov    eax,DWORD PTR [rbx]
  4031df:	xor    r8d,r8d
  4031e2:	sub    eax,0x1
  4031e5:	mov    DWORD PTR [rbx],eax
  4031e7:	mov    ecx,DWORD PTR [rdi]
  4031e9:	test   ecx,ecx
  4031eb:	setne  r8b
  4031ef:	cmp    r8d,eax
  4031f2:	jl     0x4031d0
  4031f4:	test   ecx,ecx
  4031f6:	je     0x4031b0
  4031f8:	mov    rdx,rsi
  4031fb:	call   0x403110
  403200:	mov    eax,DWORD PTR [rbx]
  403202:	cmp    eax,0x0
  403205:	jle    0x403235
  403207:	sub    eax,0x1
  40320a:	mov    DWORD PTR [rbx],eax
  40320c:	add    rsp,0x28
  403210:	pop    rbx
  403211:	pop    rsi
  403212:	pop    rdi
  403213:	pop    rbp
  403214:	ret    
  403215:	mov    rdx,r9
  403218:	call   0x403110
  40321d:	sub    DWORD PTR [rbx],0x1
  403220:	mov    DWORD PTR [rdi],0x0
  403226:	mov    eax,DWORD PTR [rbx]
  403228:	test   eax,eax
  40322a:	jg     0x403190
  403230:	jmp    0x4031a5
  403235:	je     0x4031b0
  40323b:	add    eax,0x1
  40323e:	mov    DWORD PTR [rbx],eax
  403240:	jmp    0x4031b0
  403245:	nop
  403246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403250:	push   rbp
  403251:	push   rdi
  403252:	push   rsi
  403253:	push   rbx
  403254:	sub    rsp,0x78
  403258:	mov    edi,DWORD PTR [rsp+0xd0]
  40325f:	mov    rsi,QWORD PTR [rsp+0xe0]
  403267:	sub    edx,0x58
  40326a:	mov    DWORD PTR [rsp+0x28],0x0
  403272:	mov    DWORD PTR [rsp+0x2c],0x0
  40327a:	cmp    dl,0x20
  40327d:	ja     0x4032c5
  40327f:	lea    rax,[rip+0x745e]        # 0x40a6e4
  403286:	movzx  edx,dl
  403289:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40328d:	add    rax,rdx
  403290:	jmp    rax
  403292:	sub    ebx,0x1
  403295:	mov    rdx,rsi
  403298:	movsxd rax,ebx
  40329b:	movsx  ecx,BYTE PTR [rsp+rax*1+0x30]
  4032a0:	call   0x403110
  4032a5:	test   ebx,ebx
  4032a7:	jne    0x403292
  4032a9:	mov    eax,DWORD PTR [rsp+0x2c]
  4032ad:	test   eax,eax
  4032af:	jns    0x4032c5
  4032b1:	mov    rdx,rsi
  4032b4:	mov    ecx,0x20
  4032b9:	call   0x403110
  4032be:	add    DWORD PTR [rsp+0x2c],0x1
  4032c3:	js     0x4032b1
  4032c5:	add    rsp,0x78
  4032c9:	pop    rbx
  4032ca:	pop    rsi
  4032cb:	pop    rdi
  4032cc:	pop    rbp
  4032cd:	ret    
  4032ce:	test   rcx,rcx
  4032d1:	js     0x40337a
  4032d7:	test   r8d,r8d
  4032da:	je     0x4032e4
  4032dc:	mov    DWORD PTR [rsp+0x28],0x2b
  4032e4:	lea    r11,[rip+0x73d5]        # 0x40a6c0
  4032eb:	mov    r10d,0xa
  4032f1:	mov    edx,DWORD PTR [rsp+0xd8]
  4032f8:	test   edx,edx
  4032fa:	setne  dl
  4032fd:	test   edi,edi
  4032ff:	sete   al
  403302:	test   dl,al
  403304:	je     0x403392
  40330a:	xor    ebx,ebx
  40330c:	test   rcx,rcx
  40330f:	jne    0x403392
  403315:	mov    eax,DWORD PTR [rsp+0xc0]
  40331c:	xor    edx,edx
  40331e:	sub    edi,ebx
  403320:	mov    ebp,edi
  403322:	cmovs  ebp,edx
  403325:	sub    eax,ebx
  403327:	sub    eax,ebp
  403329:	cmovs  eax,edx
  40332c:	test   r9d,r9d
  40332f:	mov    DWORD PTR [rsp+0x2c],eax
  403333:	je     0x403339
  403335:	neg    DWORD PTR [rsp+0x2c]
  403339:	mov    ecx,DWORD PTR [rsp+0xc8]
  403340:	lea    rdx,[rsp+0x28]
  403345:	lea    r8,[rsp+0x2c]
  40334a:	mov    r9,rsi
  40334d:	lea    edi,[rbp-0x1]
  403350:	call   0x403160
  403355:	test   ebp,ebp
  403357:	je     0x4032a5
  40335d:	nop    DWORD PTR [rax]
  403360:	mov    rdx,rsi
  403363:	mov    ecx,0x30
  403368:	sub    edi,0x1
  40336b:	call   0x403110
  403370:	cmp    edi,0xffffffff
  403373:	jne    0x403360
  403375:	jmp    0x4032a5
  40337a:	lea    r11,[rip+0x733f]        # 0x40a6c0
  403381:	mov    DWORD PTR [rsp+0x28],0x2d
  403389:	neg    rcx
  40338c:	mov    r10d,0xa
  403392:	lea    r8,[rsp+0x30]
  403397:	mov    rax,rcx
  40339a:	xor    ebx,ebx
  40339c:	nop    DWORD PTR [rax+0x0]
  4033a0:	xor    edx,edx
  4033a2:	add    ebx,0x1
  4033a5:	add    r8,0x1
  4033a9:	div    r10
  4033ac:	movzx  edx,BYTE PTR [r11+rdx*1]
  4033b1:	mov    BYTE PTR [r8-0x1],dl
  4033b5:	test   rax,rax
  4033b8:	jne    0x4033a0
  4033ba:	jmp    0x403315
  4033bf:	lea    r11,[rip+0x72fa]        # 0x40a6c0
  4033c6:	mov    r10d,0x10
  4033cc:	jmp    0x4032f1
  4033d1:	lea    r11,[rip+0x72e8]        # 0x40a6c0
  4033d8:	mov    r10d,0x8
  4033de:	jmp    0x4032f1
  4033e3:	lea    r11,[rip+0x72e7]        # 0x40a6d1
  4033ea:	mov    r10d,0x10
  4033f0:	jmp    0x4032f1
  4033f5:	nop
  4033f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403400:	push   r15
  403402:	push   r14
  403404:	push   r13
  403406:	push   r12
  403408:	push   rbp
  403409:	push   rdi
  40340a:	push   rsi
  40340b:	push   rbx
  40340c:	sub    rsp,0x5c8
  403413:	movaps XMMWORD PTR [rsp+0x590],xmm6
  40341b:	movaps XMMWORD PTR [rsp+0x5a0],xmm7
  403423:	movaps XMMWORD PTR [rsp+0x5b0],xmm8
  40342c:	lea    r10,[rsp+0xb0]
  403434:	mov    rbp,rdx
  403437:	mov    r15,rcx
  40343a:	mov    r14,r8
  40343d:	lea    rdx,[r10+0x44]
  403441:	mov    rax,r10
  403444:	add    rax,0x4
  403448:	mov    DWORD PTR [rax-0x4],0x0
  40344f:	cmp    rax,rdx
  403452:	jb     0x403444
  403454:	lea    r8,[rip+0x731d]        # 0x40a778
  40345b:	mov    rax,rbp
  40345e:	xor    edi,edi
  403460:	xor    ebx,ebx
  403462:	mov    BYTE PTR [rsp+0x54],0x0
  403467:	nop    WORD PTR [rax+rax*1+0x0]
  403470:	add    rax,0x1
  403474:	movsx  edx,BYTE PTR [rax-0x1]
  403478:	test   edx,edx
  40347a:	je     0x4034d0
  40347c:	cmp    edx,0x25
  40347f:	jne    0x403470
  403481:	xor    r9d,r9d
  403484:	xor    r13d,r13d
  403487:	xor    r12d,r12d
  40348a:	xor    r11d,r11d
  40348d:	xor    esi,esi
  40348f:	add    rax,0x1
  403493:	movsx  ecx,BYTE PTR [rax-0x1]
  403497:	test   ecx,ecx
  403499:	mov    edx,ecx
  40349b:	je     0x4034d0
  40349d:	sub    edx,0x24
  4034a0:	cmp    dl,0x56
  4034a3:	ja     0x4035f0
  4034a9:	movzx  edx,dl
  4034ac:	movsxd rdx,DWORD PTR [r8+rdx*4]
  4034b0:	add    rdx,r8
  4034b3:	jmp    rdx
  4034b5:	add    rax,0x1
  4034b9:	movsx  ecx,BYTE PTR [rax-0x1]
  4034bd:	mov    r12d,0x1
  4034c3:	test   ecx,ecx
  4034c5:	mov    edx,ecx
  4034c7:	jne    0x40349d
  4034c9:	nop    DWORD PTR [rax+0x0]
  4034d0:	movzx  eax,BYTE PTR [rsp+0x54]
  4034d5:	test   bl,bl
  4034d7:	mov    BYTE PTR [rsp+0x5e],al
  4034db:	je     0x4034e5
  4034dd:	test   al,al
  4034df:	jne    0x4037b0
  4034e5:	test   edi,edi
  4034e7:	je     0x4036dc
  4034ed:	lea    rcx,[rsp+0x108]
  4034f5:	lea    r8,[rip+0x73d8]        # 0x40a8d4
  4034fc:	add    r10,0x4
  403500:	mov    edx,0x1
  403505:	cmp    DWORD PTR [r10],0x5
  403509:	ja     0x4036c9
  40350f:	mov    eax,DWORD PTR [r10]
  403512:	movsxd rax,DWORD PTR [r8+rax*4]
  403516:	add    rax,r8
  403519:	jmp    rax
  40351b:	nop    DWORD PTR [rax+rax*1+0x0]
  403520:	test   r9d,r9d
  403523:	je     0x4036b0
  403529:	movsxd rdx,r9d
  40352c:	mov    ecx,DWORD PTR [rsp+rdx*4+0xb0]
  403533:	cmp    ecx,0x5
  403536:	je     0x403540
  403538:	test   ecx,ecx
  40353a:	jne    0x4037b0
  403540:	cmp    edi,r9d
  403543:	mov    DWORD PTR [rsp+rdx*4+0xb0],0x5
  40354e:	cmovl  edi,r9d
  403552:	jmp    0x4035f0
  403557:	nop    WORD PTR [rax+rax*1+0x0]
  403560:	lea    edx,[r11-0x1]
  403564:	cmp    edx,0xf
  403567:	ja     0x4037b0
  40356d:	test   sil,sil
  403570:	je     0x4037f4
  403576:	movsxd rdx,r11d
  403579:	cmp    DWORD PTR [rsp+rdx*4+0xb0],0x1
  403581:	ja     0x4037b0
  403587:	cmp    edi,r11d
  40358a:	mov    DWORD PTR [rsp+rdx*4+0xb0],0x1
  403595:	mov    BYTE PTR [rsp+0x54],0x1
  40359a:	cmovl  edi,r11d
  40359e:	xor    r11d,r11d
  4035a1:	xor    esi,esi
  4035a3:	jmp    0x40348f
  4035a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4035b0:	test   r13d,r13d
  4035b3:	jne    0x4034b5
  4035b9:	mov    r13b,0x1
  4035bc:	jmp    0x40348f
  4035c1:	test   r9d,r9d
  4035c4:	je     0x4036b0
  4035ca:	movsxd rdx,r9d
  4035cd:	test   DWORD PTR [rsp+rdx*4+0xb0],0xfffffffb
  4035d8:	jne    0x4037b0
  4035de:	cmp    edi,r9d
  4035e1:	mov    DWORD PTR [rsp+rdx*4+0xb0],0x4
  4035ec:	cmovl  edi,r9d
  4035f0:	test   sil,sil
  4035f3:	mov    edx,0x1
  4035f8:	cmovne ebx,edx
  4035fb:	jmp    0x403470
  403600:	xor    r11d,r11d
  403603:	jmp    0x40348f
  403608:	nop    DWORD PTR [rax+rax*1+0x0]
  403610:	xor    r11d,r11d
  403613:	test   sil,sil
  403616:	mov    esi,0x1
  40361b:	je     0x40348f
  403621:	mov    ebx,0x1
  403626:	jmp    0x40348f
  40362b:	nop    DWORD PTR [rax+rax*1+0x0]
  403630:	test   r9d,r9d
  403633:	je     0x4036b0
  403635:	movsxd rdx,r9d
  403638:	cmp    DWORD PTR [rsp+rdx*4+0xb0],0x1
  403640:	ja     0x4037b0
  403646:	cmp    edi,r9d
  403649:	mov    DWORD PTR [rsp+rdx*4+0xb0],0x1
  403654:	cmovl  edi,r9d
  403658:	jmp    0x4035f0
  40365a:	nop    WORD PTR [rax+rax*1+0x0]
  403660:	test   r9d,r9d
  403663:	je     0x4036b0
  403665:	test   r12d,r12d
  403668:	mov    ecx,0x3
  40366d:	je     0x403804
  403673:	movsxd rdx,r9d
  403676:	mov    r11d,DWORD PTR [rsp+rdx*4+0xb0]
  40367e:	cmp    ecx,r11d
  403681:	je     0x40368c
  403683:	test   r11d,r11d
  403686:	jne    0x4037b0
  40368c:	cmp    edi,r9d
  40368f:	mov    DWORD PTR [rsp+rdx*4+0xb0],ecx
  403696:	cmovl  edi,r9d
  40369a:	jmp    0x4035f0
  40369f:	nop
  4036a0:	lea    edx,[r11+r11*4]
  4036a4:	lea    r11d,[rcx+rdx*2-0x30]
  4036a9:	jmp    0x40348f
  4036ae:	xchg   ax,ax
  4036b0:	mov    ebx,0x1
  4036b5:	jmp    0x4035f0
  4036ba:	nop    WORD PTR [rax+rax*1+0x0]
  4036c0:	mov    eax,DWORD PTR [r14]
  4036c3:	add    r14,0x8
  4036c7:	mov    DWORD PTR [rcx],eax
  4036c9:	add    edx,0x1
  4036cc:	add    r10,0x4
  4036d0:	add    rcx,0x8
  4036d4:	cmp    edi,edx
  4036d6:	jge    0x403505
  4036dc:	lea    rax,[rsp+0x190]
  4036e4:	pxor   xmm8,xmm8
  4036e9:	movsd  xmm7,QWORD PTR [rip+0x735f]        # 0x40aa50
  4036f1:	mov    QWORD PTR [rsp+0x60],rax
  4036f6:	lea    rax,[rsp+0x8c]
  4036fe:	mov    QWORD PTR [rsp+0x70],rax
  403703:	lea    rax,[rsp+0x88]
  40370b:	mov    QWORD PTR [rsp+0x78],rax
  403710:	lea    rax,[rsp+0x90]
  403718:	mov    QWORD PTR [rsp+0x68],rax
  40371d:	nop    DWORD PTR [rax]
  403720:	movsx  ecx,BYTE PTR [rbp+0x0]
  403724:	lea    rbx,[rbp+0x1]
  403728:	test   ecx,ecx
  40372a:	je     0x403a2a
  403730:	cmp    ecx,0x25
  403733:	jne    0x403a31
  403739:	lea    rcx,[rip+0x71ac]        # 0x40a8ec
  403740:	xor    r12d,r12d
  403743:	mov    DWORD PTR [rsp+0x54],0x0
  40374b:	xor    r13d,r13d
  40374e:	xor    r9d,r9d
  403751:	xor    esi,esi
  403753:	xor    edi,edi
  403755:	xor    r10d,r10d
  403758:	mov    DWORD PTR [rsp+0x58],0x0
  403760:	xor    ebp,ebp
  403762:	xor    r8d,r8d
  403765:	mov    BYTE PTR [rsp+0x5f],0x0
  40376a:	xor    r11d,r11d
  40376d:	add    rbx,0x1
  403771:	movsx  edx,BYTE PTR [rbx-0x1]
  403775:	test   edx,edx
  403777:	mov    eax,edx
  403779:	je     0x403a2a
  40377f:	sub    eax,0x24
  403782:	cmp    al,0x56
  403784:	ja     0x403a17
  40378a:	movzx  eax,al
  40378d:	movsxd rax,DWORD PTR [rcx+rax*4]
  403791:	add    rax,rcx
  403794:	jmp    rax
  403796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037a0:	mov    rax,QWORD PTR [r14]
  4037a3:	add    r14,0x8
  4037a7:	mov    QWORD PTR [rcx],rax
  4037aa:	jmp    0x4036c9
  4037af:	nop
  4037b0:	mov    eax,0xffffffff
  4037b5:	movaps xmm6,XMMWORD PTR [rsp+0x590]
  4037bd:	movaps xmm7,XMMWORD PTR [rsp+0x5a0]
  4037c5:	movaps xmm8,XMMWORD PTR [rsp+0x5b0]
  4037ce:	add    rsp,0x5c8
  4037d5:	pop    rbx
  4037d6:	pop    rsi
  4037d7:	pop    rdi
  4037d8:	pop    rbp
  4037d9:	pop    r12
  4037db:	pop    r13
  4037dd:	pop    r14
  4037df:	pop    r15
  4037e1:	ret    
  4037e2:	movsd  xmm0,QWORD PTR [r14]
  4037e7:	add    r14,0x8
  4037eb:	movsd  QWORD PTR [rcx],xmm0
  4037ef:	jmp    0x4036c9
  4037f4:	mov    r9d,r11d
  4037f7:	mov    BYTE PTR [rsp+0x54],0x1
  4037fc:	xor    r11d,r11d
  4037ff:	jmp    0x40348f
  403804:	movsxd rdx,r9d
  403807:	cmp    r13d,0x1
  40380b:	mov    r11d,DWORD PTR [rsp+rdx*4+0xb0]
  403813:	sbb    ecx,ecx
  403815:	add    ecx,0x2
  403818:	cmp    ecx,r11d
  40381b:	jne    0x403683
  403821:	jmp    0x40368c
  403826:	mov    eax,r10d
  403829:	or     eax,r8d
  40382c:	mov    eax,0x30
  403831:	cmove  r13d,eax
  403835:	lea    eax,[r8+r8*4]
  403839:	lea    r8d,[rdx+rax*2-0x30]
  40383e:	jmp    0x40376d
  403843:	mov    ebp,0x1
  403848:	jmp    0x40376d
  40384d:	test   r11b,r11b
  403850:	mov    rax,r14
  403853:	jne    0x403860
  403855:	test   r10d,r10d
  403858:	cmovne r9d,r8d
  40385c:	cmove  esi,r8d
  403860:	cmp    BYTE PTR [rsp+0x5e],0x0
  403865:	je     0x403d8c
  40386b:	movsxd rax,r12d
  40386e:	movsd  xmm6,QWORD PTR [rsp+rax*8+0x100]
  403877:	test   r10d,r10d
  40387a:	mov    DWORD PTR [rsp+0x88],0x0
  403885:	mov    DWORD PTR [rsp+0x8c],0x0
  403890:	je     0x403d22
  403896:	test   r9d,r9d
  403899:	mov    ebp,0x0
  40389e:	mov    r12d,0x15e
  4038a4:	cmovns ebp,r9d
  4038a8:	mov    rcx,QWORD PTR [rsp+0x68]
  4038ad:	mov    r9d,edx
  4038b0:	cmp    ebp,0x15e
  4038b6:	lea    rdx,[rip+0x6eae]        # 0x40a76b
  4038bd:	cmovle r12d,ebp
  4038c1:	mov    r8d,r12d
  4038c4:	sub    ebp,r12d
  4038c7:	call   0x407020
  4038cc:	movq   rax,xmm6
  4038d1:	mov    edx,eax
  4038d3:	neg    edx
  4038d5:	or     edx,eax
  4038d7:	shr    rax,0x20
  4038db:	shr    edx,0x1f
  4038de:	and    eax,0x7fffffff
  4038e3:	or     eax,edx
  4038e5:	mov    edx,0x7ff00000
  4038ea:	cmp    edx,eax
  4038ec:	js     0x40390c
  4038ee:	ucomisd xmm8,xmm6
  4038f3:	ja     0x403dfc
  4038f9:	mov    edx,DWORD PTR [rsp+0x54]
  4038fd:	test   edx,edx
  4038ff:	je     0x40390c
  403901:	mov    DWORD PTR [rsp+0x88],0x2b
  40390c:	mov    rdx,QWORD PTR [rsp+0x68]
  403911:	mov    rcx,QWORD PTR [rsp+0x60]
  403916:	movq   r8,xmm6
  40391b:	movapd xmm2,xmm6
  40391f:	call   0x407020
  403924:	test   ebp,ebp
  403926:	mov    r12d,eax
  403929:	jle    0x403946
  40392b:	lea    eax,[rax-0x1]
  40392e:	cdqe   
  403930:	movzx  eax,BYTE PTR [rsp+rax*1+0x190]
  403938:	sub    eax,0x30
  40393b:	cmp    eax,0xa
  40393e:	mov    eax,0x0
  403943:	cmovae ebp,eax
  403946:	sub    esi,r12d
  403949:	mov    eax,0x0
  40394e:	sub    esi,ebp
  403950:	cmovns eax,esi
  403953:	test   edi,edi
  403955:	mov    DWORD PTR [rsp+0x8c],eax
  40395c:	je     0x403965
  40395e:	neg    DWORD PTR [rsp+0x8c]
  403965:	mov    r8,QWORD PTR [rsp+0x70]
  40396a:	mov    rdx,QWORD PTR [rsp+0x78]
  40396f:	mov    r9,r15
  403972:	mov    ecx,r13d
  403975:	call   0x403160
  40397a:	test   ebp,ebp
  40397c:	jle    0x403e10
  403982:	mov    rcx,QWORD PTR [rsp+0x60]
  403987:	mov    edx,0x65
  40398c:	call   0x406fe0
  403991:	test   rax,rax
  403994:	mov    rsi,rax
  403997:	je     0x403e25
  40399d:	mov    rax,QWORD PTR [rsp+0x60]
  4039a2:	mov    rdx,rsi
  4039a5:	mov    r8,r15
  4039a8:	sub    ebp,0x1
  4039ab:	sub    rdx,rax
  4039ae:	mov    rcx,rax
  4039b1:	call   0x403090
  4039b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039c0:	mov    rdx,r15
  4039c3:	mov    ecx,0x30
  4039c8:	sub    ebp,0x1
  4039cb:	call   0x403110
  4039d0:	cmp    ebp,0xffffffff
  4039d3:	jne    0x4039c0
  4039d5:	mov    rdx,QWORD PTR [rsp+0x60]
  4039da:	mov    r8,r15
  4039dd:	mov    rcx,rsi
  4039e0:	sub    rdx,rsi
  4039e3:	add    edx,r12d
  4039e6:	call   0x403090
  4039eb:	mov    eax,DWORD PTR [rsp+0x8c]
  4039f2:	test   eax,eax
  4039f4:	jns    0x403a17
  4039f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a00:	mov    rdx,r15
  403a03:	mov    ecx,0x20
  403a08:	call   0x403110
  403a0d:	add    DWORD PTR [rsp+0x8c],0x1
  403a15:	js     0x403a00
  403a17:	mov    rbp,rbx
  403a1a:	movsx  ecx,BYTE PTR [rbp+0x0]
  403a1e:	lea    rbx,[rbp+0x1]
  403a22:	test   ecx,ecx
  403a24:	jne    0x403730
  403a2a:	xor    eax,eax
  403a2c:	jmp    0x4037b5
  403a31:	mov    rdx,r15
  403a34:	mov    rbp,rbx
  403a37:	call   0x403110
  403a3c:	jmp    0x403720
  403a41:	test   r11b,r11b
  403a44:	mov    rbp,rbx
  403a47:	mov    rax,r14
  403a4a:	jne    0x403a57
  403a4c:	test   r10d,r10d
  403a4f:	cmovne r9d,r8d
  403a53:	cmove  esi,r8d
  403a57:	cmp    BYTE PTR [rsp+0x5e],0x0
  403a5c:	je     0x403d16
  403a62:	movsxd rax,r12d
  403a65:	mov    rbx,QWORD PTR [rsp+rax*8+0x100]
  403a6d:	test   r10d,r10d
  403a70:	je     0x403cc9
  403a76:	movsxd rdx,r9d
  403a79:	test   rdx,rdx
  403a7c:	je     0x403ef7
  403a82:	cmp    BYTE PTR [rbx],0x0
  403a85:	je     0x403ef7
  403a8b:	lea    rax,[rbx+0x1]
  403a8f:	add    rdx,rbx
  403a92:	jmp    0x403aa2
  403a94:	add    rax,0x1
  403a98:	cmp    BYTE PTR [rax-0x1],0x0
  403a9c:	je     0x403df4
  403aa2:	cmp    rax,rdx
  403aa5:	mov    r12,rax
  403aa8:	jne    0x403a94
  403aaa:	mov    r12d,eax
  403aad:	sub    r12d,ebx
  403ab0:	jmp    0x403cd4
  403ab5:	cmp    BYTE PTR [rsp+0x5e],0x0
  403aba:	mov    rax,r14
  403abd:	je     0x403d99
  403ac3:	movsxd rax,r12d
  403ac6:	mov    r8,QWORD PTR [rsp+rax*8+0x100]
  403ace:	mov    rsi,QWORD PTR [rsp+0x60]
  403ad3:	lea    rdx,[rip+0x6c8e]        # 0x40a768
  403ada:	mov    rbp,rbx
  403add:	mov    rcx,rsi
  403ae0:	call   0x407020
  403ae5:	mov    r8,r15
  403ae8:	mov    edx,eax
  403aea:	mov    rcx,rsi
  403aed:	call   0x403090
  403af2:	jmp    0x403720
  403af7:	mov    eax,DWORD PTR [rsp+0x58]
  403afb:	test   eax,eax
  403afd:	jne    0x403843
  403b03:	mov    DWORD PTR [rsp+0x58],0x1
  403b0b:	jmp    0x40376d
  403b10:	test   r11b,r11b
  403b13:	mov    rbp,rbx
  403b16:	mov    rax,r14
  403b19:	jne    0x403b22
  403b1b:	test   r10d,r10d
  403b1e:	cmove  esi,r8d
  403b22:	cmp    BYTE PTR [rsp+0x5e],0x0
  403b27:	je     0x403d75
  403b2d:	movsxd rax,r12d
  403b30:	movzx  ebx,BYTE PTR [rsp+rax*8+0x100]
  403b38:	sub    esi,0x1
  403b3b:	mov    eax,0x0
  403b40:	cmovns eax,esi
  403b43:	mov    edx,eax
  403b45:	mov    eax,edi
  403b47:	neg    eax
  403b49:	xor    eax,edx
  403b4b:	add    edi,eax
  403b4d:	test   edi,edi
  403b4f:	jle    0x403e9a
  403b55:	mov    rdx,r15
  403b58:	mov    ecx,0x20
  403b5d:	call   0x403110
  403b62:	sub    edi,0x1
  403b65:	jne    0x403b55
  403b67:	mov    rdx,r15
  403b6a:	mov    ecx,ebx
  403b6c:	call   0x403110
  403b71:	jmp    0x403720
  403b76:	test   r11b,r11b
  403b79:	mov    rax,r14
  403b7c:	jne    0x403b89
  403b7e:	test   r10d,r10d
  403b81:	cmovne r9d,r8d
  403b85:	cmove  esi,r8d
  403b89:	cmp    BYTE PTR [rsp+0x5e],0x0
  403b8e:	je     0x403cb5
  403b94:	test   ebp,ebp
  403b96:	movsxd rax,r12d
  403b99:	je     0x403de8
  403b9f:	mov    rcx,QWORD PTR [rsp+rax*8+0x100]
  403ba7:	mov    r8d,DWORD PTR [rsp+0x54]
  403bac:	mov    DWORD PTR [rsp+0x30],r9d
  403bb1:	mov    r9d,edi
  403bb4:	mov    QWORD PTR [rsp+0x40],r15
  403bb9:	mov    DWORD PTR [rsp+0x38],r10d
  403bbe:	mov    rbp,rbx
  403bc1:	mov    DWORD PTR [rsp+0x28],r13d
  403bc6:	mov    DWORD PTR [rsp+0x20],esi
  403bca:	call   0x403250
  403bcf:	jmp    0x403720
  403bd4:	test   r11b,r11b
  403bd7:	mov    rax,r14
  403bda:	jne    0x403be7
  403bdc:	test   r10d,r10d
  403bdf:	cmovne r9d,r8d
  403be3:	cmove  esi,r8d
  403be7:	cmp    BYTE PTR [rsp+0x5e],0x0
  403bec:	je     0x403d4e
  403bf2:	test   ebp,ebp
  403bf4:	movsxd rax,r12d
  403bf7:	jne    0x403b9f
  403bf9:	movsxd rcx,DWORD PTR [rsp+rax*8+0x100]
  403c01:	jmp    0x403ba7
  403c03:	mov    DWORD PTR [rsp+0x54],0x1
  403c0b:	jmp    0x40376d
  403c10:	test   r11b,r11b
  403c13:	jne    0x403d3d
  403c19:	mov    esi,r8d
  403c1c:	mov    r10d,0x1
  403c22:	xor    r8d,r8d
  403c25:	jmp    0x40376d
  403c2a:	mov    edi,0x1
  403c2f:	jmp    0x40376d
  403c34:	mov    rdx,r15
  403c37:	mov    ecx,0x25
  403c3c:	mov    rbp,rbx
  403c3f:	call   0x403110
  403c44:	jmp    0x403720
  403c49:	cmp    BYTE PTR [rsp+0x5f],0x0
  403c4e:	je     0x403d81
  403c54:	movsxd r8,r8d
  403c57:	test   r10d,r10d
  403c5a:	mov    eax,DWORD PTR [rsp+r8*8+0x100]
  403c62:	jne    0x403dcc
  403c68:	test   eax,eax
  403c6a:	js     0x403ee1
  403c70:	mov    esi,eax
  403c72:	xor    r8d,r8d
  403c75:	mov    BYTE PTR [rsp+0x5f],0x0
  403c7a:	jmp    0x40376d
  403c7f:	cmp    BYTE PTR [rsp+0x5e],0x0
  403c84:	jne    0x403d62
  403c8a:	test   r10d,r10d
  403c8d:	lea    rdx,[r14+0x8]
  403c91:	mov    eax,DWORD PTR [r14]
  403c94:	jne    0x403dac
  403c9a:	test   eax,eax
  403c9c:	js     0x403ec7
  403ca2:	mov    esi,eax
  403ca4:	mov    r14,rdx
  403ca7:	xor    r8d,r8d
  403caa:	mov    r11d,0x1
  403cb0:	jmp    0x40376d
  403cb5:	add    r14,0x8
  403cb9:	test   ebp,ebp
  403cbb:	je     0x403da5
  403cc1:	mov    rcx,QWORD PTR [rax]
  403cc4:	jmp    0x403ba7
  403cc9:	mov    rcx,rbx
  403ccc:	call   0x406ff8
  403cd1:	mov    r12d,eax
  403cd4:	sub    esi,r12d
  403cd7:	mov    eax,0x0
  403cdc:	cmovns eax,esi
  403cdf:	mov    edx,eax
  403ce1:	mov    eax,edi
  403ce3:	neg    eax
  403ce5:	xor    eax,edx
  403ce7:	add    edi,eax
  403ce9:	test   edi,edi
  403ceb:	jle    0x403e6d
  403cf1:	mov    rdx,r15
  403cf4:	mov    ecx,0x20
  403cf9:	call   0x403110
  403cfe:	sub    edi,0x1
  403d01:	jne    0x403cf1
  403d03:	mov    r8,r15
  403d06:	mov    edx,r12d
  403d09:	mov    rcx,rbx
  403d0c:	call   0x403090
  403d11:	jmp    0x403720
  403d16:	add    r14,0x8
  403d1a:	mov    rbx,QWORD PTR [rax]
  403d1d:	jmp    0x403a6d
  403d22:	mov    rcx,QWORD PTR [rsp+0x68]
  403d27:	mov    r8d,edx
  403d2a:	lea    rdx,[rip+0x6a42]        # 0x40a773
  403d31:	xor    ebp,ebp
  403d33:	call   0x407020
  403d38:	jmp    0x4038cc
  403d3d:	mov    r10d,0x1
  403d43:	xor    r8d,r8d
  403d46:	xor    r11d,r11d
  403d49:	jmp    0x40376d
  403d4e:	add    r14,0x8
  403d52:	test   ebp,ebp
  403d54:	jne    0x403cc1
  403d5a:	movsxd rcx,DWORD PTR [rax]
  403d5d:	jmp    0x403ba7
  403d62:	xor    r8d,r8d
  403d65:	mov    BYTE PTR [rsp+0x5f],0x1
  403d6a:	mov    r11d,0x1
  403d70:	jmp    0x40376d
  403d75:	add    r14,0x8
  403d79:	movzx  ebx,BYTE PTR [rax]
  403d7c:	jmp    0x403b38
  403d81:	mov    r12d,r8d
  403d84:	xor    r8d,r8d
  403d87:	jmp    0x40376d
  403d8c:	add    r14,0x8
  403d90:	movsd  xmm6,QWORD PTR [rax]
  403d94:	jmp    0x403877
  403d99:	add    r14,0x8
  403d9d:	mov    r8,QWORD PTR [rax]
  403da0:	jmp    0x403ace
  403da5:	mov    ecx,DWORD PTR [rax]
  403da7:	jmp    0x403ba7
  403dac:	mov    r14,rdx
  403daf:	xor    edx,edx
  403db1:	test   eax,eax
  403db3:	mov    r9d,edx
  403db6:	cmovs  r10d,edx
  403dba:	mov    r11d,0x1
  403dc0:	cmovns r9d,eax
  403dc4:	xor    r8d,r8d
  403dc7:	jmp    0x40376d
  403dcc:	xor    edx,edx
  403dce:	test   eax,eax
  403dd0:	mov    BYTE PTR [rsp+0x5f],0x0
  403dd5:	mov    r9d,edx
  403dd8:	cmovs  r10d,edx
  403ddc:	cmovns r9d,eax
  403de0:	xor    r8d,r8d
  403de3:	jmp    0x40376d
  403de8:	mov    ecx,DWORD PTR [rsp+rax*8+0x100]
  403def:	jmp    0x403ba7
  403df4:	sub    r12d,ebx
  403df7:	jmp    0x403cd4
  403dfc:	mov    DWORD PTR [rsp+0x88],0x2d
  403e07:	xorpd  xmm6,xmm7
  403e0b:	jmp    0x40390c
  403e10:	mov    rcx,QWORD PTR [rsp+0x60]
  403e15:	mov    r8,r15
  403e18:	mov    edx,r12d
  403e1b:	call   0x403090
  403e20:	jmp    0x4039eb
  403e25:	mov    rcx,QWORD PTR [rsp+0x60]
  403e2a:	mov    edx,0x45
  403e2f:	call   0x406fe0
  403e34:	test   rax,rax
  403e37:	mov    rsi,rax
  403e3a:	jne    0x40399d
  403e40:	mov    rcx,QWORD PTR [rsp+0x60]
  403e45:	mov    r8,r15
  403e48:	mov    edx,r12d
  403e4b:	sub    ebp,0x1
  403e4e:	call   0x403090
  403e53:	mov    rdx,r15
  403e56:	mov    ecx,0x30
  403e5b:	sub    ebp,0x1
  403e5e:	call   0x403110
  403e63:	cmp    ebp,0xffffffff
  403e66:	jne    0x403e53
  403e68:	jmp    0x4039eb
  403e6d:	mov    r8,r15
  403e70:	mov    edx,r12d
  403e73:	mov    rcx,rbx
  403e76:	call   0x403090
  403e7b:	test   edi,edi
  403e7d:	je     0x403720
  403e83:	mov    rdx,r15
  403e86:	mov    ecx,0x20
  403e8b:	call   0x403110
  403e90:	add    edi,0x1
  403e93:	jne    0x403e83
  403e95:	jmp    0x403720
  403e9a:	mov    rdx,r15
  403e9d:	mov    ecx,ebx
  403e9f:	call   0x403110
  403ea4:	test   edi,edi
  403ea6:	je     0x403720
  403eac:	nop    DWORD PTR [rax+0x0]
  403eb0:	mov    rdx,r15
  403eb3:	mov    ecx,0x20
  403eb8:	call   0x403110
  403ebd:	add    edi,0x1
  403ec0:	jne    0x403eb0
  403ec2:	jmp    0x403720
  403ec7:	neg    eax
  403ec9:	mov    r14,rdx
  403ecc:	mov    edi,0x1
  403ed1:	mov    esi,eax
  403ed3:	xor    r8d,r8d
  403ed6:	mov    r11d,0x1
  403edc:	jmp    0x40376d
  403ee1:	neg    eax
  403ee3:	mov    edi,0x1
  403ee8:	xor    r8d,r8d
  403eeb:	mov    esi,eax
  403eed:	mov    BYTE PTR [rsp+0x5f],0x0
  403ef2:	jmp    0x40376d
  403ef7:	xor    r12d,r12d
  403efa:	jmp    0x403cd4
  403eff:	nop
  403f00:	sub    rsp,0x58
  403f04:	lea    rdx,[rcx+rdx*1-0x1]
  403f09:	mov    rax,r8
  403f0c:	mov    QWORD PTR [rsp+0x20],rcx
  403f11:	mov    QWORD PTR [rsp+0x28],rcx
  403f16:	lea    rcx,[rsp+0x20]
  403f1b:	mov    r8,r9
  403f1e:	mov    QWORD PTR [rsp+0x30],rdx
  403f23:	mov    rdx,rax
  403f26:	mov    QWORD PTR [rsp+0x38],0x0
  403f2f:	call   0x403400
  403f34:	test   eax,eax
  403f36:	mov    rax,QWORD PTR [rsp+0x20]
  403f3b:	mov    BYTE PTR [rax],0x0
  403f3e:	jne    0x403f50
  403f40:	mov    rax,QWORD PTR [rsp+0x20]
  403f45:	sub    eax,DWORD PTR [rsp+0x28]
  403f49:	add    rsp,0x58
  403f4d:	ret    
  403f4e:	xchg   ax,ax
  403f50:	call   QWORD PTR [rip+0xb672]        # 0x40f5c8
  403f56:	mov    DWORD PTR [rax],0x16
  403f5c:	mov    eax,0xffffffff
  403f61:	jmp    0x403f49
  403f63:	nop    DWORD PTR [rax]
  403f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f70:	test   rcx,rcx
  403f73:	je     0x403f80
  403f75:	test   rdx,rdx
  403f78:	je     0x403f80
  403f7a:	jmp    0x403f00
  403f7c:	nop    DWORD PTR [rax+0x0]
  403f80:	xor    eax,eax
  403f82:	ret    
  403f83:	nop    DWORD PTR [rax]
  403f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f90:	sub    rsp,0x38
  403f94:	mov    QWORD PTR [rsp+0x58],r9
  403f99:	lea    r9,[rsp+0x58]
  403f9e:	test   rcx,rcx
  403fa1:	mov    QWORD PTR [rsp+0x28],r9
  403fa6:	je     0x403fc0
  403fa8:	test   rdx,rdx
  403fab:	je     0x403fc0
  403fad:	call   0x403f00
  403fb2:	add    rsp,0x38
  403fb6:	ret    
  403fb7:	nop    WORD PTR [rax+rax*1+0x0]
  403fc0:	xor    eax,eax
  403fc2:	add    rsp,0x38
  403fc6:	ret    
  403fc7:	nop    WORD PTR [rax+rax*1+0x0]
  403fd0:	sub    rsp,0x68
  403fd4:	xor    eax,eax
  403fd6:	mov    QWORD PTR [rsp+0x80],r8
  403fde:	lea    r8,[rsp+0x80]
  403fe6:	test   rcx,rcx
  403fe9:	mov    QWORD PTR [rsp+0x88],r9
  403ff1:	mov    QWORD PTR [rsp+0x28],r8
  403ff6:	je     0x404033
  403ff8:	mov    QWORD PTR [rsp+0x30],rcx
  403ffd:	mov    QWORD PTR [rsp+0x38],rcx
  404002:	lea    rcx,[rsp+0x30]
  404007:	mov    QWORD PTR [rsp+0x40],0x0
  404010:	mov    QWORD PTR [rsp+0x48],0x0
  404019:	call   0x403400
  40401e:	test   eax,eax
  404020:	mov    rax,QWORD PTR [rsp+0x30]
  404025:	mov    BYTE PTR [rax],0x0
  404028:	jne    0x404040
  40402a:	mov    rax,QWORD PTR [rsp+0x30]
  40402f:	sub    eax,DWORD PTR [rsp+0x38]
  404033:	add    rsp,0x68
  404037:	ret    
  404038:	nop    DWORD PTR [rax+rax*1+0x0]
  404040:	call   QWORD PTR [rip+0xb582]        # 0x40f5c8
  404046:	mov    DWORD PTR [rax],0x16
  40404c:	mov    eax,0xffffffff
  404051:	jmp    0x404033
  404053:	nop    DWORD PTR [rax]
  404056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404060:	push   rbx
  404061:	sub    rsp,0x450
  404068:	test   rcx,rcx
  40406b:	je     0x4040c0
  40406d:	lea    rax,[rsp+0x50]
  404072:	lea    rbx,[rsp+0x20]
  404077:	mov    QWORD PTR [rsp+0x38],rcx
  40407c:	mov    DWORD PTR [rsp+0x40],0x0
  404084:	mov    QWORD PTR [rsp+0x20],rax
  404089:	mov    QWORD PTR [rsp+0x28],rax
  40408e:	lea    rax,[rsp+0x44f]
  404096:	mov    rcx,rbx
  404099:	mov    QWORD PTR [rsp+0x30],rax
  40409e:	call   0x403400
  4040a3:	test   eax,eax
  4040a5:	jne    0x4040c0
  4040a7:	mov    rcx,rbx
  4040aa:	call   0x403050
  4040af:	mov    eax,DWORD PTR [rsp+0x40]
  4040b3:	add    rsp,0x450
  4040ba:	pop    rbx
  4040bb:	ret    
  4040bc:	nop    DWORD PTR [rax+0x0]
  4040c0:	call   QWORD PTR [rip+0xb502]        # 0x40f5c8
  4040c6:	mov    DWORD PTR [rax],0x16
  4040cc:	mov    eax,0xffffffff
  4040d1:	jmp    0x4040b3
  4040d3:	nop    DWORD PTR [rax]
  4040d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4040e0:	sub    rsp,0x38
  4040e4:	mov    QWORD PTR [rsp+0x50],r8
  4040e9:	lea    r8,[rsp+0x50]
  4040ee:	mov    QWORD PTR [rsp+0x58],r9
  4040f3:	mov    QWORD PTR [rsp+0x28],r8
  4040f8:	call   0x404060
  4040fd:	add    rsp,0x38
  404101:	ret    
  404102:	nop    DWORD PTR [rax+0x0]
  404106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404110:	push   rsi
  404111:	push   rbx
  404112:	sub    rsp,0x38
  404116:	lea    rbx,[rsp+0x58]
  40411b:	mov    rsi,rcx
  40411e:	mov    QWORD PTR [rsp+0x58],rdx
  404123:	mov    QWORD PTR [rsp+0x60],r8
  404128:	mov    QWORD PTR [rsp+0x68],r9
  40412d:	mov    QWORD PTR [rsp+0x28],rbx
  404132:	call   QWORD PTR [rip+0xb458]        # 0x40f590
  404138:	lea    rcx,[rax+0x30]
  40413c:	mov    r8,rbx
  40413f:	mov    rdx,rsi
  404142:	call   0x404060
  404147:	add    rsp,0x38
  40414b:	pop    rbx
  40414c:	pop    rsi
  40414d:	ret    
  40414e:	nop
  40414f:	nop
  404150:	push   r13
  404152:	push   r12
  404154:	push   rbp
  404155:	push   rdi
  404156:	push   rsi
  404157:	push   rbx
  404158:	sub    rsp,0x28
  40415c:	mov    esi,0x65
  404161:	mov    rdi,QWORD PTR [rip+0xb360]        # 0x40f4c8
  404168:	mov    r13,QWORD PTR [rip+0xb311]        # 0x40f480
  40416f:	mov    r12,rcx
  404172:	mov    rbp,rdx
  404175:	jmp    0x4041a8
  404177:	nop    WORD PTR [rax+rax*1+0x0]
  404180:	call   r13
  404183:	mov    ebx,eax
  404185:	mov    ecx,eax
  404187:	call   0x405780
  40418c:	lea    eax,[rbx-0x20]
  40418f:	cmp    eax,0x1
  404192:	jbe    0x404199
  404194:	cmp    ebx,0x5
  404197:	jne    0x4041d0
  404199:	sub    esi,0x1
  40419c:	je     0x4041d0
  40419e:	mov    ecx,0x186a0
  4041a3:	call   0x4054b0
  4041a8:	mov    r8d,0x1
  4041ae:	mov    rdx,rbp
  4041b1:	mov    rcx,r12
  4041b4:	call   rdi
  4041b6:	test   eax,eax
  4041b8:	je     0x404180
  4041ba:	xor    eax,eax
  4041bc:	add    rsp,0x28
  4041c0:	pop    rbx
  4041c1:	pop    rsi
  4041c2:	pop    rdi
  4041c3:	pop    rbp
  4041c4:	pop    r12
  4041c6:	pop    r13
  4041c8:	ret    
  4041c9:	nop    DWORD PTR [rax+0x0]
  4041d0:	mov    eax,0xffffffff
  4041d5:	add    rsp,0x28
  4041d9:	pop    rbx
  4041da:	pop    rsi
  4041db:	pop    rdi
  4041dc:	pop    rbp
  4041dd:	pop    r12
  4041df:	pop    r13
  4041e1:	ret    
  4041e2:	nop    DWORD PTR [rax+0x0]
  4041e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041f0:	push   rdi
  4041f1:	push   rsi
  4041f2:	push   rbx
  4041f3:	sub    rsp,0x20
  4041f7:	mov    ebx,0x65
  4041fc:	mov    rdi,QWORD PTR [rip+0xb3c5]        # 0x40f5c8
  404203:	mov    rsi,rcx
  404206:	jmp    0x404226
  404208:	nop    DWORD PTR [rax+rax*1+0x0]
  404210:	call   rdi
  404212:	cmp    DWORD PTR [rax],0xd
  404215:	jne    0x404240
  404217:	sub    ebx,0x1
  40421a:	je     0x404240
  40421c:	mov    ecx,0x186a0
  404221:	call   0x4054b0
  404226:	mov    rcx,rsi
  404229:	call   0x406fb0
  40422e:	test   eax,eax
  404230:	jne    0x404210
  404232:	add    rsp,0x20
  404236:	pop    rbx
  404237:	pop    rsi
  404238:	pop    rdi
  404239:	ret    
  40423a:	nop    WORD PTR [rax+rax*1+0x0]
  404240:	mov    eax,0xffffffff
  404245:	add    rsp,0x20
  404249:	pop    rbx
  40424a:	pop    rsi
  40424b:	pop    rdi
  40424c:	ret    
  40424d:	nop    DWORD PTR [rax]
  404250:	push   rbp
  404251:	push   rdi
  404252:	push   rsi
  404253:	push   rbx
  404254:	sub    rsp,0x388
  40425b:	mov    rdi,rdx
  40425e:	mov    rbp,rcx
  404261:	xor    edx,edx
  404263:	mov    rcx,rdi
  404266:	call   QWORD PTR [rip+0xb1a4]        # 0x40f410
  40426c:	xor    r9d,r9d
  40426f:	xor    r8d,r8d
  404272:	mov    QWORD PTR [rsp+0x30],0x0
  40427b:	mov    DWORD PTR [rsp+0x28],0x2200000
  404283:	mov    DWORD PTR [rsp+0x20],0x3
  40428b:	mov    edx,0xc0000000
  404290:	mov    rcx,rdi
  404293:	call   QWORD PTR [rip+0xb17f]        # 0x40f418
  404299:	cmp    rax,0xffffffffffffffff
  40429d:	mov    rbx,rax
  4042a0:	je     0x4044b2
  4042a6:	lea    rcx,[rip+0x67b3]        # 0x40aa60
  4042ad:	mov    r8d,0x4
  4042b3:	mov    rdx,rbp
  4042b6:	lea    rsi,[rsp+0x50]
  4042bb:	call   0x407058
  4042c0:	test   eax,eax
  4042c2:	jne    0x404410
  4042c8:	mov    rdx,rbp
  4042cb:	mov    rcx,rsi
  4042ce:	call   0x407008
  4042d3:	mov    rcx,rsi
  4042d6:	jmp    0x4042e7
  4042d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4042e0:	lea    rcx,[rax+0x1]
  4042e4:	mov    BYTE PTR [rax],0x5c
  4042e7:	mov    edx,0x2f
  4042ec:	call   0x407018
  4042f1:	test   rax,rax
  4042f4:	jne    0x4042e0
  4042f6:	mov    r9,rsi
  4042f9:	mov    edx,DWORD PTR [r9]
  4042fc:	add    r9,0x4
  404300:	lea    eax,[rdx-0x1010101]
  404306:	not    edx
  404308:	and    eax,edx
  40430a:	and    eax,0x80808080
  40430f:	je     0x4042f9
  404311:	mov    edx,eax
  404313:	mov    r8,rsi
  404316:	mov    DWORD PTR [rsp+0x160],0xa0000003
  404321:	shr    edx,0x10
  404324:	test   eax,0x8080
  404329:	mov    DWORD PTR [rsp+0x28],0x104
  404331:	cmove  eax,edx
  404334:	lea    rdx,[r9+0x2]
  404338:	lea    rbp,[rsp+0x160]
  404340:	cmove  r9,rdx
  404344:	add    al,al
  404346:	sbb    r9,0x3
  40434a:	xor    edx,edx
  40434c:	xor    ecx,ecx
  40434e:	sub    r9,rsi
  404351:	mov    WORD PTR [rsp+0x168],dx
  404359:	mov    WORD PTR [rsp+0x16e],cx
  404361:	add    r9d,r9d
  404364:	xor    edx,edx
  404366:	xor    ecx,ecx
  404368:	lea    eax,[r9+0xc]
  40436c:	mov    DWORD PTR [rsp+0x44],r9d
  404371:	mov    WORD PTR [rsp+0x16a],r9w
  40437a:	add    r9d,0x2
  40437e:	mov    WORD PTR [rsp+0x164],ax
  404386:	xor    eax,eax
  404388:	mov    WORD PTR [rsp+0x16c],r9w
  404391:	mov    WORD PTR [rsp+0x166],ax
  404399:	lea    rax,[rsp+0x170]
  4043a1:	mov    r9d,0xffffffff
  4043a7:	mov    QWORD PTR [rsp+0x20],rax
  4043ac:	call   QWORD PTR [rip+0xb11e]        # 0x40f4d0
  4043b2:	movzx  eax,WORD PTR [rsp+0x164]
  4043ba:	lea    rdx,[rsp+0x44]
  4043bf:	mov    QWORD PTR [rsp+0x38],0x0
  4043c8:	mov    DWORD PTR [rsp+0x28],0x0
  4043d0:	mov    QWORD PTR [rsp+0x20],0x0
  4043d9:	mov    r8,rbp
  4043dc:	mov    QWORD PTR [rsp+0x30],rdx
  4043e1:	mov    rcx,rbx
  4043e4:	mov    edx,0x900a4
  4043e9:	lea    r9d,[rax+0x8]
  4043ed:	call   QWORD PTR [rip+0xb045]        # 0x40f438
  4043f3:	test   eax,eax
  4043f5:	je     0x404427
  4043f7:	mov    rcx,rbx
  4043fa:	call   QWORD PTR [rip+0xb008]        # 0x40f408
  404400:	xor    eax,eax
  404402:	add    rsp,0x388
  404409:	pop    rbx
  40440a:	pop    rsi
  40440b:	pop    rdi
  40440c:	pop    rbp
  40440d:	ret    
  40440e:	xchg   ax,ax
  404410:	lea    rdx,[rip+0x664e]        # 0x40aa65
  404417:	mov    r8,rbp
  40441a:	mov    rcx,rsi
  40441d:	call   0x403fd0
  404422:	jmp    0x4042d3
  404427:	call   QWORD PTR [rip+0xb19b]        # 0x40f5c8
  40442d:	mov    DWORD PTR [rax],0x0
  404433:	call   QWORD PTR [rip+0xb047]        # 0x40f480
  404439:	mov    r8d,eax
  40443c:	lea    rax,[rsp+0x48]
  404441:	mov    r9d,0x409
  404447:	xor    edx,edx
  404449:	mov    ecx,0x1100
  40444e:	mov    QWORD PTR [rsp+0x30],0x0
  404457:	mov    DWORD PTR [rsp+0x28],0x0
  40445f:	mov    QWORD PTR [rsp+0x20],rax
  404464:	call   QWORD PTR [rip+0xafe6]        # 0x40f450
  40446a:	mov    rbp,QWORD PTR [rsp+0x48]
  40446f:	call   QWORD PTR [rip+0xb11b]        # 0x40f590
  404475:	lea    rdx,[rip+0x65f4]        # 0x40aa70
  40447c:	lea    rcx,[rax+0x60]
  404480:	mov    r8,rsi
  404483:	mov    r9,rbp
  404486:	call   0x4040e0
  40448b:	mov    rcx,QWORD PTR [rsp+0x48]
  404490:	call   QWORD PTR [rip+0xb02a]        # 0x40f4c0
  404496:	mov    rcx,rbx
  404499:	call   QWORD PTR [rip+0xaf69]        # 0x40f408
  40449f:	mov    rcx,rdi
  4044a2:	call   QWORD PTR [rip+0xb040]        # 0x40f4e8
  4044a8:	mov    eax,0xffffffff
  4044ad:	jmp    0x404402
  4044b2:	jmp    0x404402
  4044b7:	nop    WORD PTR [rax+rax*1+0x0]
  4044c0:	push   r12
  4044c2:	push   rbp
  4044c3:	push   rdi
  4044c4:	push   rsi
  4044c5:	push   rbx
  4044c6:	sub    rsp,0x270
  4044cd:	mov    rdi,rcx
  4044d0:	mov    r12,rdx
  4044d3:	mov    rsi,r8
  4044d6:	call   QWORD PTR [rip+0xaf94]        # 0x40f470
  4044dc:	cmp    eax,0xffffffff
  4044df:	mov    ebx,eax
  4044e1:	je     0x4046c0
  4044e7:	and    bh,0x4
  4044ea:	je     0x404611
  4044f0:	xor    r9d,r9d
  4044f3:	mov    QWORD PTR [rsp+0x30],0x0
  4044fc:	mov    DWORD PTR [rsp+0x28],0x2200000
  404504:	mov    DWORD PTR [rsp+0x20],0x3
  40450c:	mov    r8d,0x3
  404512:	mov    edx,0x80000000
  404517:	mov    rcx,rdi
  40451a:	call   QWORD PTR [rip+0xaef8]        # 0x40f418
  404520:	cmp    rax,0xffffffffffffffff
  404524:	mov    rbx,rax
  404527:	je     0x4046c0
  40452d:	lea    rax,[rsp+0x44]
  404532:	lea    rbp,[rsp+0x50]
  404537:	xor    r9d,r9d
  40453a:	xor    r8d,r8d
  40453d:	mov    QWORD PTR [rsp+0x38],0x0
  404546:	mov    DWORD PTR [rsp+0x28],0x21c
  40454e:	mov    QWORD PTR [rsp+0x30],rax
  404553:	mov    QWORD PTR [rsp+0x20],rbp
  404558:	mov    edx,0x900a8
  40455d:	mov    rcx,rbx
  404560:	call   QWORD PTR [rip+0xaed2]        # 0x40f438
  404566:	test   eax,eax
  404568:	je     0x404632
  40456e:	mov    rcx,rbx
  404571:	call   QWORD PTR [rip+0xae91]        # 0x40f408
  404577:	cmp    DWORD PTR [rsp+0x50],0xa0000003
  40457f:	jne    0x404611
  404585:	xor    edx,edx
  404587:	xor    ecx,ecx
  404589:	mov    QWORD PTR [rsp+0x38],0x0
  404592:	mov    QWORD PTR [rsp+0x30],0x0
  40459b:	mov    DWORD PTR [rsp+0x28],esi
  40459f:	mov    r9d,0xffffffff
  4045a5:	mov    QWORD PTR [rsp+0x20],r12
  4045aa:	lea    r8,[rbp+0x10]
  4045ae:	call   QWORD PTR [rip+0xafac]        # 0x40f560
  4045b4:	test   eax,eax
  4045b6:	jle    0x404611
  4045b8:	cmp    eax,0x4
  4045bb:	mov    ebx,eax
  4045bd:	jle    0x4045d2
  4045bf:	lea    rdi,[rip+0x649a]        # 0x40aa60
  4045c6:	mov    ecx,0x4
  4045cb:	mov    rsi,r12
  4045ce:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4045d0:	je     0x4045e2
  4045d2:	mov    eax,ebx
  4045d4:	add    rsp,0x270
  4045db:	pop    rbx
  4045dc:	pop    rsi
  4045dd:	pop    rdi
  4045de:	pop    rbp
  4045df:	pop    r12
  4045e1:	ret    
  4045e2:	lea    rsi,[r12+0x4]
  4045e7:	sub    ebx,0x4
  4045ea:	mov    rcx,rsi
  4045ed:	call   0x406ff8
  4045f2:	lea    r8,[rax+0x1]
  4045f6:	mov    rdx,rsi
  4045f9:	mov    rcx,r12
  4045fc:	call   0x407048
  404601:	mov    eax,ebx
  404603:	add    rsp,0x270
  40460a:	pop    rbx
  40460b:	pop    rsi
  40460c:	pop    rdi
  40460d:	pop    rbp
  40460e:	pop    r12
  404610:	ret    
  404611:	mov    ebx,0xffffffff
  404616:	call   QWORD PTR [rip+0xafac]        # 0x40f5c8
  40461c:	mov    DWORD PTR [rax],0x16
  404622:	mov    eax,ebx
  404624:	add    rsp,0x270
  40462b:	pop    rbx
  40462c:	pop    rsi
  40462d:	pop    rdi
  40462e:	pop    rbp
  40462f:	pop    r12
  404631:	ret    
  404632:	mov    rsi,QWORD PTR [rip+0xaf8f]        # 0x40f5c8
  404639:	call   rsi
  40463b:	mov    DWORD PTR [rax],0x0
  404641:	call   QWORD PTR [rip+0xae39]        # 0x40f480
  404647:	mov    r8d,eax
  40464a:	lea    rax,[rsp+0x48]
  40464f:	mov    r9d,0x409
  404655:	xor    edx,edx
  404657:	mov    ecx,0x1100
  40465c:	mov    QWORD PTR [rsp+0x30],0x0
  404665:	mov    DWORD PTR [rsp+0x28],0x0
  40466d:	mov    QWORD PTR [rsp+0x20],rax
  404672:	call   QWORD PTR [rip+0xadd8]        # 0x40f450
  404678:	mov    rbp,QWORD PTR [rsp+0x48]
  40467d:	call   QWORD PTR [rip+0xaf0d]        # 0x40f590
  404683:	lea    rdx,[rip+0x640e]        # 0x40aa98
  40468a:	lea    rcx,[rax+0x60]
  40468e:	mov    r8,rdi
  404691:	mov    r9,rbp
  404694:	call   0x4040e0
  404699:	mov    rcx,QWORD PTR [rsp+0x48]
  40469e:	call   QWORD PTR [rip+0xae1c]        # 0x40f4c0
  4046a4:	mov    rcx,rbx
  4046a7:	mov    ebx,0xffffffff
  4046ac:	call   QWORD PTR [rip+0xad56]        # 0x40f408
  4046b2:	call   rsi
  4046b4:	mov    DWORD PTR [rax],0x16
  4046ba:	jmp    0x4045d2
  4046bf:	nop
  4046c0:	call   QWORD PTR [rip+0xadba]        # 0x40f480
  4046c6:	mov    ecx,eax
  4046c8:	call   0x405780
  4046cd:	jmp    0x4045d2
  4046d2:	nop    DWORD PTR [rax+0x0]
  4046d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4046e0:	sub    rsp,0x28
  4046e4:	call   QWORD PTR [rip+0xad86]        # 0x40f470
  4046ea:	mov    edx,eax
  4046ec:	shr    edx,0xa
  4046ef:	and    edx,0x1
  4046f2:	cmp    eax,0xffffffff
  4046f5:	je     0x404700
  4046f7:	mov    eax,edx
  4046f9:	add    rsp,0x28
  4046fd:	ret    
  4046fe:	xchg   ax,ax
  404700:	call   QWORD PTR [rip+0xad7a]        # 0x40f480
  404706:	mov    ecx,eax
  404708:	call   0x405780
  40470d:	xor    edx,edx
  40470f:	jmp    0x4046f7
  404711:	nop    DWORD PTR [rax+rax*1+0x0]
  404716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404720:	push   rsi
  404721:	push   rbx
  404722:	sub    rsp,0x58
  404726:	mov    rbx,rcx
  404729:	mov    rsi,rdx
  40472c:	call   0x406d80
  404731:	test   eax,eax
  404733:	js     0x404752
  404735:	xor    edx,edx
  404737:	lea    r8,[rsp+0x20]
  40473c:	mov    rcx,rbx
  40473f:	call   QWORD PTR [rip+0xad33]        # 0x40f478
  404745:	test   eax,eax
  404747:	je     0x404760
  404749:	mov    eax,DWORD PTR [rsp+0x40]
  40474d:	mov    DWORD PTR [rsi+0x14],eax
  404750:	xor    eax,eax
  404752:	add    rsp,0x58
  404756:	pop    rbx
  404757:	pop    rsi
  404758:	ret    
  404759:	nop    DWORD PTR [rax+0x0]
  404760:	call   QWORD PTR [rip+0xad1a]        # 0x40f480
  404766:	mov    ecx,eax
  404768:	call   0x405780
  40476d:	mov    eax,0xffffffff
  404772:	jmp    0x404752
  404774:	nop
  404775:	nop
  404776:	nop
  404777:	nop
  404778:	nop
  404779:	nop
  40477a:	nop
  40477b:	nop
  40477c:	nop
  40477d:	nop
  40477e:	nop
  40477f:	nop
  404780:	push   rbx
  404781:	sub    rsp,0x20
  404785:	mov    rbx,rcx
  404788:	movzx  ecx,BYTE PTR [rcx]
  40478b:	cmp    cl,0x5c
  40478e:	je     0x4047b4
  404790:	cmp    cl,0x2f
  404793:	je     0x4047b4
  404795:	call   QWORD PTR [rip+0xaead]        # 0x40f648
  40479b:	test   eax,eax
  40479d:	je     0x4047ab
  40479f:	cmp    BYTE PTR [rbx+0x1],0x3a
  4047a3:	lea    rax,[rbx+0x2]
  4047a7:	cmove  rbx,rax
  4047ab:	mov    rax,rbx
  4047ae:	add    rsp,0x20
  4047b2:	pop    rbx
  4047b3:	ret    
  4047b4:	movzx  eax,BYTE PTR [rbx+0x1]
  4047b8:	cmp    al,0x5c
  4047ba:	je     0x4047c0
  4047bc:	cmp    al,0x2f
  4047be:	jne    0x404795
  4047c0:	movzx  eax,BYTE PTR [rbx+0x2]
  4047c4:	lea    rdx,[rbx+0x2]
  4047c8:	mov    rbx,rdx
  4047cb:	test   al,al
  4047cd:	je     0x4047ab
  4047cf:	cmp    al,0x2f
  4047d1:	je     0x4047ab
  4047d3:	cmp    al,0x5c
  4047d5:	jne    0x4047e8
  4047d7:	jmp    0x4047ab
  4047d9:	nop    DWORD PTR [rax+0x0]
  4047e0:	cmp    al,0x5c
  4047e2:	je     0x4047ab
  4047e4:	cmp    al,0x2f
  4047e6:	je     0x4047ab
  4047e8:	add    rbx,0x1
  4047ec:	movzx  eax,BYTE PTR [rbx]
  4047ef:	test   al,al
  4047f1:	jne    0x4047e0
  4047f3:	mov    rax,rbx
  4047f6:	add    rsp,0x20
  4047fa:	pop    rbx
  4047fb:	ret    
  4047fc:	nop    DWORD PTR [rax+0x0]
  404800:	push   rbx
  404801:	sub    rsp,0x20
  404805:	call   0x404780
  40480a:	mov    rbx,rax
  40480d:	mov    rcx,rax
  404810:	call   0x406ff8
  404815:	add    rax,rbx
  404818:	cmp    rbx,rax
  40481b:	jae    0x40484e
  40481d:	lea    rdx,[rax-0x1]
  404821:	cmp    rbx,rdx
  404824:	jae    0x40484e
  404826:	movzx  eax,BYTE PTR [rax-0x1]
  40482a:	cmp    al,0x5c
  40482c:	je     0x404832
  40482e:	cmp    al,0x2f
  404830:	jne    0x40484e
  404832:	mov    BYTE PTR [rdx],0x0
  404835:	sub    rdx,0x1
  404839:	cmp    rdx,rbx
  40483c:	je     0x40484e
  40483e:	movzx  r8d,BYTE PTR [rdx]
  404842:	cmp    r8b,0x5c
  404846:	je     0x404832
  404848:	cmp    r8b,0x2f
  40484c:	je     0x404832
  40484e:	add    rsp,0x20
  404852:	pop    rbx
  404853:	ret    
  404854:	xchg   ax,ax
  404856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404860:	push   rbx
  404861:	sub    rsp,0x20
  404865:	call   0x404780
  40486a:	cmp    BYTE PTR [rax],0x0
  40486d:	mov    rbx,rax
  404870:	je     0x404928
  404876:	mov    rcx,rax
  404879:	call   0x406ff8
  40487e:	lea    rdx,[rbx+rax*1-0x1]
  404883:	movzx  eax,BYTE PTR [rdx]
  404886:	cmp    rbx,rdx
  404889:	setb   r9b
  40488d:	cmp    al,0x5c
  40488f:	sete   r8b
  404893:	cmp    al,0x2f
  404895:	sete   cl
  404898:	or     r8b,cl
  40489b:	je     0x4048c4
  40489d:	test   r9b,r9b
  4048a0:	jne    0x4048b4
  4048a2:	jmp    0x4048c4
  4048a4:	cmp    al,0x5c
  4048a6:	sete   r8b
  4048aa:	cmp    al,0x2f
  4048ac:	sete   cl
  4048af:	or     r8b,cl
  4048b2:	je     0x4048c4
  4048b4:	sub    rdx,0x1
  4048b8:	movzx  eax,BYTE PTR [rdx]
  4048bb:	cmp    rbx,rdx
  4048be:	setb   r9b
  4048c2:	jb     0x4048a4
  4048c4:	cmp    al,0x2f
  4048c6:	setne  cl
  4048c9:	cmp    al,0x5c
  4048cb:	setne  al
  4048ce:	test   cl,al
  4048d0:	je     0x4048fa
  4048d2:	test   r9b,r9b
  4048d5:	jne    0x4048e5
  4048d7:	jmp    0x4048fa
  4048d9:	nop    DWORD PTR [rax+0x0]
  4048e0:	cmp    rbx,rdx
  4048e3:	jae    0x4048fa
  4048e5:	sub    rdx,0x1
  4048e9:	movzx  eax,BYTE PTR [rdx]
  4048ec:	cmp    al,0x5c
  4048ee:	setne  cl
  4048f1:	cmp    al,0x2f
  4048f3:	setne  al
  4048f6:	test   cl,al
  4048f8:	jne    0x4048e0
  4048fa:	cmp    rbx,rdx
  4048fd:	jae    0x40492e
  4048ff:	movzx  eax,BYTE PTR [rdx-0x1]
  404903:	cmp    al,0x5c
  404905:	je     0x404910
  404907:	cmp    al,0x2f
  404909:	jne    0x40492e
  40490b:	nop    DWORD PTR [rax+rax*1+0x0]
  404910:	sub    rdx,0x1
  404914:	cmp    rdx,rbx
  404917:	je     0x404933
  404919:	movzx  eax,BYTE PTR [rdx-0x1]
  40491d:	cmp    al,0x5c
  40491f:	je     0x404910
  404921:	cmp    al,0x2f
  404923:	je     0x404910
  404925:	mov    BYTE PTR [rdx],0x0
  404928:	add    rsp,0x20
  40492c:	pop    rbx
  40492d:	ret    
  40492e:	cmp    rbx,rdx
  404931:	jne    0x404925
  404933:	movzx  eax,BYTE PTR [rbx]
  404936:	cmp    al,0x5c
  404938:	je     0x404941
  40493a:	cmp    al,0x2f
  40493c:	mov    rdx,rbx
  40493f:	jne    0x404925
  404941:	lea    rdx,[rbx+0x1]
  404945:	jmp    0x404925
  404947:	nop    WORD PTR [rax+rax*1+0x0]
  404950:	push   rbx
  404951:	sub    rsp,0x20
  404955:	mov    rbx,rcx
  404958:	call   0x404780
  40495d:	cmp    rax,rbx
  404960:	setne  al
  404963:	add    rsp,0x20
  404967:	pop    rbx
  404968:	ret    
  404969:	nop    DWORD PTR [rax+0x0]
  404970:	sub    rsp,0x28
  404974:	call   0x404780
  404979:	movzx  edx,BYTE PTR [rax]
  40497c:	test   dl,dl
  40497e:	je     0x404995
  404980:	cmp    dl,0x5c
  404983:	je     0x404997
  404985:	cmp    dl,0x2f
  404988:	je     0x404997
  40498a:	add    rax,0x1
  40498e:	movzx  edx,BYTE PTR [rax]
  404991:	test   dl,dl
  404993:	jne    0x404980
  404995:	xor    eax,eax
  404997:	add    rsp,0x28
  40499b:	ret    
  40499c:	nop    DWORD PTR [rax+0x0]
  4049a0:	movzx  eax,BYTE PTR [rcx]
  4049a3:	test   al,al
  4049a5:	jne    0x4049bb
  4049a7:	jmp    0x4049c3
  4049a9:	nop    DWORD PTR [rax+0x0]
  4049b0:	add    rcx,0x1
  4049b4:	movzx  eax,BYTE PTR [rcx]
  4049b7:	test   al,al
  4049b9:	je     0x4049c3
  4049bb:	cmp    al,0x3b
  4049bd:	jne    0x4049b0
  4049bf:	mov    rax,rcx
  4049c2:	ret    
  4049c3:	xor    eax,eax
  4049c5:	ret    
  4049c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049d0:	sub    rsp,0x28
  4049d4:	call   0x404780
  4049d9:	movzx  edx,BYTE PTR [rax]
  4049dc:	mov    rcx,rax
  4049df:	xor    eax,eax
  4049e1:	test   dl,dl
  4049e3:	jne    0x404a00
  4049e5:	jmp    0x404a13
  4049e7:	nop    WORD PTR [rax+rax*1+0x0]
  4049f0:	cmp    dl,0x2f
  4049f3:	je     0x404a05
  4049f5:	add    rcx,0x1
  4049f9:	movzx  edx,BYTE PTR [rcx]
  4049fc:	test   dl,dl
  4049fe:	je     0x404a13
  404a00:	cmp    dl,0x5c
  404a03:	jne    0x4049f0
  404a05:	mov    rax,rcx
  404a08:	add    rcx,0x1
  404a0c:	movzx  edx,BYTE PTR [rcx]
  404a0f:	test   dl,dl
  404a11:	jne    0x404a00
  404a13:	add    rsp,0x28
  404a17:	ret    
  404a18:	nop    DWORD PTR [rax+rax*1+0x0]
  404a20:	movzx  eax,BYTE PTR [rcx]
  404a23:	test   al,al
  404a25:	jne    0x404a3b
  404a27:	jmp    0x404a4d
  404a29:	nop    DWORD PTR [rax+0x0]
  404a30:	add    rcx,0x1
  404a34:	movzx  eax,BYTE PTR [rcx]
  404a37:	test   al,al
  404a39:	je     0x404a4d
  404a3b:	cmp    al,0x2f
  404a3d:	jne    0x404a30
  404a3f:	mov    BYTE PTR [rcx],0x5c
  404a42:	add    rcx,0x1
  404a46:	movzx  eax,BYTE PTR [rcx]
  404a49:	test   al,al
  404a4b:	jne    0x404a3b
  404a4d:	repz ret 
  404a4f:	nop
  404a50:	push   rdi
  404a51:	push   rsi
  404a52:	push   rbx
  404a53:	sub    rsp,0x30
  404a57:	cmp    rcx,rdx
  404a5a:	mov    rsi,rcx
  404a5d:	mov    rdi,rdx
  404a60:	mov    rbx,r8
  404a63:	je     0x404a82
  404a65:	mov    r8d,0x400
  404a6b:	call   0x402d70
  404a70:	jmp    0x404a82
  404a72:	movzx  eax,BYTE PTR [rbx+0x1]
  404a76:	cmp    al,0x5c
  404a78:	je     0x404a7e
  404a7a:	cmp    al,0x2f
  404a7c:	jne    0x404a95
  404a7e:	add    rbx,0x2
  404a82:	movzx  eax,BYTE PTR [rbx]
  404a85:	cmp    al,0x2e
  404a87:	je     0x404a72
  404a89:	test   al,al
  404a8b:	jne    0x404a95
  404a8d:	add    rsp,0x30
  404a91:	pop    rbx
  404a92:	pop    rsi
  404a93:	pop    rdi
  404a94:	ret    
  404a95:	mov    rcx,rdi
  404a98:	lea    rdi,[rip+0x6023]        # 0x40aac2
  404a9f:	call   0x404780
  404aa4:	cmp    BYTE PTR [rax],0x0
  404aa7:	lea    rax,[rip+0x6012]        # 0x40aac0
  404aae:	mov    rcx,rsi
  404ab1:	cmovne rdi,rax
  404ab5:	call   0x406ff8
  404aba:	lea    r8,[rip+0x6002]        # 0x40aac3
  404ac1:	lea    rcx,[rsi+rax*1]
  404ac5:	mov    edx,0x400
  404aca:	sub    rdx,rax
  404acd:	mov    QWORD PTR [rsp+0x20],rbx
  404ad2:	mov    r9,rdi
  404ad5:	call   0x403f90
  404ada:	nop
  404adb:	add    rsp,0x30
  404adf:	pop    rbx
  404ae0:	pop    rsi
  404ae1:	pop    rdi
  404ae2:	ret    
  404ae3:	nop    DWORD PTR [rax]
  404ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404af0:	push   r15
  404af2:	push   r14
  404af4:	push   r13
  404af6:	push   r12
  404af8:	push   rbp
  404af9:	push   rdi
  404afa:	push   rsi
  404afb:	push   rbx
  404afc:	sub    rsp,0x28
  404b00:	movzx  edx,BYTE PTR [rcx]
  404b03:	mov    r12,rcx
  404b06:	mov    rax,rcx
  404b09:	test   dl,dl
  404b0b:	jne    0x404b1b
  404b0d:	jmp    0x404b3d
  404b0f:	nop
  404b10:	add    rax,0x1
  404b14:	movzx  edx,BYTE PTR [rax]
  404b17:	test   dl,dl
  404b19:	je     0x404b2e
  404b1b:	cmp    dl,0x5c
  404b1e:	jne    0x404b10
  404b20:	mov    BYTE PTR [rax],0x2f
  404b23:	add    rax,0x1
  404b27:	movzx  edx,BYTE PTR [rax]
  404b2a:	test   dl,dl
  404b2c:	jne    0x404b1b
  404b2e:	cmp    r12,rax
  404b31:	jae    0x404b3d
  404b33:	cmp    BYTE PTR [rax-0x1],0x22
  404b37:	je     0x404cc6
  404b3d:	mov    rcx,r12
  404b40:	call   0x404800
  404b45:	cmp    BYTE PTR [r12],0x0
  404b4a:	mov    rcx,r12
  404b4d:	je     0x404b9b
  404b4f:	movzx  edx,BYTE PTR [r12+0x1]
  404b55:	lea    rcx,[r12+0x1]
  404b5a:	test   dl,dl
  404b5c:	je     0x404b9b
  404b5e:	mov    r8,rcx
  404b61:	xor    r9d,r9d
  404b64:	cmp    dl,0x2f
  404b67:	mov    rax,r8
  404b6a:	jne    0x404b7d
  404b6c:	test   r9b,r9b
  404b6f:	je     0x404b7d
  404b71:	add    rax,0x1
  404b75:	movzx  edx,BYTE PTR [rax]
  404b78:	cmp    dl,0x2f
  404b7b:	je     0x404b71
  404b7d:	cmp    rcx,rax
  404b80:	je     0x404b84
  404b82:	mov    BYTE PTR [rcx],dl
  404b84:	cmp    BYTE PTR [rax],0x2f
  404b87:	movzx  edx,BYTE PTR [rax+0x1]
  404b8b:	lea    r8,[rax+0x1]
  404b8f:	sete   r9b
  404b93:	add    rcx,0x1
  404b97:	test   dl,dl
  404b99:	jne    0x404b64
  404b9b:	mov    BYTE PTR [rcx],0x0
  404b9e:	lea    r15,[rip+0x5f26]        # 0x40aacb
  404ba5:	mov    rcx,r12
  404ba8:	call   0x404780
  404bad:	xor    ebp,ebp
  404baf:	mov    rbx,rax
  404bb2:	mov    r14d,0x2
  404bb8:	mov    r13d,0x3
  404bbe:	xchg   ax,ax
  404bc0:	mov    rcx,rbx
  404bc3:	call   0x406ff8
  404bc8:	cmp    eax,0x1
  404bcb:	jle    0x404be7
  404bcd:	movsxd rdx,eax
  404bd0:	lea    rdi,[rip+0x5ef1]        # 0x40aac8
  404bd7:	mov    rcx,r13
  404bda:	lea    rsi,[rbx+rdx*1-0x2]
  404bdf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404be1:	je     0x404cb0
  404be7:	mov    rsi,rbx
  404bea:	mov    rdi,r15
  404bed:	mov    rcx,r14
  404bf0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404bf2:	je     0x404cbd
  404bf8:	cmp    eax,0x2
  404bfb:	jle    0x404c30
  404bfd:	cdqe   
  404bff:	lea    rdi,[rip+0x5ec7]        # 0x40aacd
  404c06:	mov    ecx,0x4
  404c0b:	lea    rsi,[rbx+rax*1-0x3]
  404c10:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404c12:	jne    0x404c30
  404c14:	mov    rcx,r12
  404c17:	add    ebp,0x1
  404c1a:	call   0x404860
  404c1f:	mov    rcx,rbx
  404c22:	call   0x406ff8
  404c27:	cmp    eax,0x1
  404c2a:	jg     0x404bcd
  404c2c:	jmp    0x404be7
  404c2e:	xchg   ax,ax
  404c30:	lea    rdi,[rip+0x5e9a]        # 0x40aad1
  404c37:	mov    rsi,rbx
  404c3a:	mov    rcx,r13
  404c3d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404c3f:	je     0x404c14
  404c41:	test   ebp,ebp
  404c43:	jle    0x404c9d
  404c45:	cmp    BYTE PTR [rbx],0x0
  404c48:	je     0x404c7d
  404c4a:	mov    rcx,r12
  404c4d:	sub    ebp,0x1
  404c50:	call   0x404860
  404c55:	cmp    BYTE PTR [rbx],0x0
  404c58:	jne    0x404bc0
  404c5e:	mov    edx,0x2e
  404c63:	mov    WORD PTR [rbx],dx
  404c66:	jmp    0x404bc0
  404c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  404c70:	call   0x406ff8
  404c75:	mov    DWORD PTR [r12+rax*1],0x2f2e2e
  404c7d:	sub    ebp,0x1
  404c80:	mov    rcx,r12
  404c83:	jne    0x404c70
  404c85:	call   0x406ff8
  404c8a:	add    r12,rax
  404c8d:	mov    eax,0x2e2e
  404c92:	mov    WORD PTR [r12],ax
  404c97:	mov    BYTE PTR [r12+0x2],0x0
  404c9d:	add    rsp,0x28
  404ca1:	pop    rbx
  404ca2:	pop    rsi
  404ca3:	pop    rdi
  404ca4:	pop    rbp
  404ca5:	pop    r12
  404ca7:	pop    r13
  404ca9:	pop    r14
  404cab:	pop    r15
  404cad:	ret    
  404cae:	xchg   ax,ax
  404cb0:	mov    rcx,r12
  404cb3:	call   0x404860
  404cb8:	jmp    0x404bc0
  404cbd:	test   ebp,ebp
  404cbf:	jle    0x404c9d
  404cc1:	mov    BYTE PTR [rbx],0x0
  404cc4:	jmp    0x404c7d
  404cc6:	mov    BYTE PTR [rax-0x1],0x2f
  404cca:	jmp    0x404b3d
  404ccf:	nop
  404cd0:	push   r15
  404cd2:	push   r14
  404cd4:	push   r13
  404cd6:	push   r12
  404cd8:	push   rbp
  404cd9:	push   rdi
  404cda:	push   rsi
  404cdb:	push   rbx
  404cdc:	sub    rsp,0x28
  404ce0:	mov    rbx,rdx
  404ce3:	mov    rsi,rcx
  404ce6:	mov    rdx,r8
  404ce9:	movzx  eax,BYTE PTR [rbx]
  404cec:	test   al,al
  404cee:	je     0x404d95
  404cf4:	mov    r10d,0x1
  404cfa:	xor    edi,edi
  404cfc:	mov    r9d,0x2f
  404d02:	jmp    0x404d2e
  404d04:	cmp    al,0x2f
  404d06:	je     0x404d32
  404d08:	cmp    al,r9b
  404d0b:	jne    0x404d50
  404d0d:	movsxd r9,r10d
  404d10:	movzx  eax,BYTE PTR [rbx+r9*1]
  404d15:	test   al,al
  404d17:	je     0x404d50
  404d19:	lea    r11,[rip+0x5db8]        # 0x40aad8
  404d20:	add    r10d,0x1
  404d24:	movzx  r9d,BYTE PTR [r11+r9*1]
  404d29:	test   r9b,r9b
  404d2c:	je     0x404d50
  404d2e:	cmp    al,0x5c
  404d30:	jne    0x404d04
  404d32:	cmp    r9b,0x5c
  404d36:	je     0x404d3e
  404d38:	cmp    r9b,0x2f
  404d3c:	jne    0x404d08
  404d3e:	movsxd r9,r10d
  404d41:	movsxd rdi,r10d
  404d44:	movzx  eax,BYTE PTR [rbx+r9*1]
  404d49:	test   al,al
  404d4b:	jne    0x404d19
  404d4d:	nop    DWORD PTR [rax]
  404d50:	test   edi,edi
  404d52:	je     0x404d95
  404d54:	mov    r8d,0x400
  404d5a:	mov    rcx,rsi
  404d5d:	call   0x402d70
  404d62:	mov    rcx,rsi
  404d65:	call   0x404860
  404d6a:	mov    rcx,rsi
  404d6d:	call   0x404af0
  404d72:	mov    rcx,rsi
  404d75:	call   0x406ff8
  404d7a:	lea    r13d,[rdi+rax*1-0x3f]
  404d7f:	test   r13d,r13d
  404d82:	jle    0x404d95
  404d84:	movsxd r13,r13d
  404d87:	movzx  eax,BYTE PTR [rsi+r13*1-0x1]
  404d8d:	cmp    al,0x5c
  404d8f:	je     0x404dbe
  404d91:	cmp    al,0x2f
  404d93:	je     0x404dbe
  404d95:	mov    r8d,0x400
  404d9b:	mov    rdx,rbx
  404d9e:	mov    rcx,rsi
  404da1:	call   0x402d70
  404da6:	mov    rcx,rsi
  404da9:	add    rsp,0x28
  404dad:	pop    rbx
  404dae:	pop    rsi
  404daf:	pop    rdi
  404db0:	pop    rbp
  404db1:	pop    r12
  404db3:	pop    r13
  404db5:	pop    r14
  404db7:	pop    r15
  404db9:	jmp    0x404af0
  404dbe:	add    r13,rsi
  404dc1:	lea    r14,[rip+0x5d10]        # 0x40aad8
  404dc8:	movzx  eax,BYTE PTR [r13+0x0]
  404dcd:	add    r14,rdi
  404dd0:	test   al,al
  404dd2:	je     0x404e2e
  404dd4:	movzx  ebp,BYTE PTR [r14]
  404dd8:	test   bpl,bpl
  404ddb:	je     0x404d95
  404ddd:	mov    r12,r13
  404de0:	jmp    0x404deb
  404de2:	movzx  ebp,BYTE PTR [r14]
  404de6:	test   bpl,bpl
  404de9:	je     0x404d95
  404deb:	movzx  ecx,al
  404dee:	call   0x405710
  404df3:	movzx  ecx,bpl
  404df7:	mov    r15d,eax
  404dfa:	call   0x405710
  404dff:	cmp    r15b,al
  404e02:	je     0x404e1d
  404e04:	movzx  eax,BYTE PTR [r12]
  404e09:	cmp    al,0x5c
  404e0b:	je     0x404e11
  404e0d:	cmp    al,0x2f
  404e0f:	jne    0x404e59
  404e11:	cmp    bpl,0x5c
  404e15:	je     0x404e1d
  404e17:	cmp    bpl,0x2f
  404e1b:	jne    0x404e59
  404e1d:	add    r12,0x1
  404e21:	movzx  eax,BYTE PTR [r12]
  404e26:	add    r14,0x1
  404e2a:	test   al,al
  404e2c:	jne    0x404de2
  404e2e:	cmp    BYTE PTR [r14],0x0
  404e32:	jne    0x404d95
  404e38:	mov    rcx,rsi
  404e3b:	mov    BYTE PTR [r13+0x0],0x0
  404e40:	call   0x404800
  404e45:	lea    r8,[rbx+rdi*1]
  404e49:	mov    rdx,rsi
  404e4c:	mov    rcx,rsi
  404e4f:	call   0x404a50
  404e54:	jmp    0x404da6
  404e59:	cmp    bpl,al
  404e5c:	jne    0x404d95
  404e62:	jmp    0x404e38
  404e64:	xchg   ax,ax
  404e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e70:	push   r12
  404e72:	push   rbp
  404e73:	push   rdi
  404e74:	push   rsi
  404e75:	push   rbx
  404e76:	sub    rsp,0x20
  404e7a:	lea    rdi,[rip+0x5c50]        # 0x40aad1
  404e81:	mov    ebp,0x1
  404e86:	call   0x404780
  404e8b:	mov    rbx,rax
  404e8e:	mov    rcx,rax
  404e91:	call   0x406ff8
  404e96:	mov    rsi,rbx
  404e99:	mov    ecx,0x3
  404e9e:	mov    r12,rax
  404ea1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404ea3:	seta   cl
  404ea6:	setb   dl
  404ea9:	cmp    cl,dl
  404eab:	je     0x404ed4
  404ead:	lea    rdi,[rip+0x5c64]        # 0x40ab18
  404eb4:	mov    ecx,0x3
  404eb9:	mov    rsi,rbx
  404ebc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404ebe:	je     0x404ed4
  404ec0:	lea    rdx,[rip+0x5c55]        # 0x40ab1c
  404ec7:	mov    rcx,rbx
  404eca:	call   0x406fd8
  404ecf:	test   rax,rax
  404ed2:	je     0x404ee1
  404ed4:	mov    eax,ebp
  404ed6:	add    rsp,0x20
  404eda:	pop    rbx
  404edb:	pop    rsi
  404edc:	pop    rdi
  404edd:	pop    rbp
  404ede:	pop    r12
  404ee0:	ret    
  404ee1:	xor    ebp,ebp
  404ee3:	cmp    r12d,0x2
  404ee7:	jle    0x404ed4
  404ee9:	movsxd r12,r12d
  404eec:	lea    rdi,[rip+0x5bda]        # 0x40aacd
  404ef3:	mov    ecx,0x4
  404ef8:	lea    rsi,[rbx+r12*1-0x3]
  404efd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404eff:	sete   bpl
  404f03:	jmp    0x404ed4
  404f05:	nop
  404f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f10:	push   rsi
  404f11:	push   rbx
  404f12:	sub    rsp,0x28
  404f16:	movzx  eax,BYTE PTR [rcx]
  404f19:	cmp    al,0x5c
  404f1b:	je     0x404f50
  404f1d:	cmp    al,0x2f
  404f1f:	je     0x404f50
  404f21:	mov    rbx,rcx
  404f24:	movzx  ecx,al
  404f27:	call   QWORD PTR [rip+0xa71b]        # 0x40f648
  404f2d:	test   eax,eax
  404f2f:	je     0x404f37
  404f31:	cmp    BYTE PTR [rbx+0x1],0x3a
  404f35:	je     0x404f60
  404f37:	mov    rcx,rbx
  404f3a:	call   0x404e70
  404f3f:	test   al,al
  404f41:	sete   al
  404f44:	add    rsp,0x28
  404f48:	pop    rbx
  404f49:	pop    rsi
  404f4a:	ret    
  404f4b:	nop    DWORD PTR [rax+rax*1+0x0]
  404f50:	xor    eax,eax
  404f52:	add    rsp,0x28
  404f56:	pop    rbx
  404f57:	pop    rsi
  404f58:	ret    
  404f59:	nop    DWORD PTR [rax+0x0]
  404f60:	movzx  esi,BYTE PTR [rbx+0x2]
  404f64:	cmp    sil,0x5c
  404f68:	je     0x404f50
  404f6a:	cmp    sil,0x2f
  404f6e:	je     0x404f50
  404f70:	mov    rcx,rbx
  404f73:	call   0x404e70
  404f78:	mov    edx,eax
  404f7a:	xor    eax,eax
  404f7c:	test   dl,dl
  404f7e:	jne    0x404f44
  404f80:	cmp    sil,0x5c
  404f84:	setne  dl
  404f87:	cmp    sil,0x2f
  404f8b:	setne  al
  404f8e:	and    eax,edx
  404f90:	xor    eax,0x1
  404f93:	jmp    0x404f44
  404f95:	nop
  404f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404fa0:	push   rdi
  404fa1:	push   rsi
  404fa2:	push   rbx
  404fa3:	sub    rsp,0x20
  404fa7:	mov    rsi,rcx
  404faa:	mov    rdi,rdx
  404fad:	call   0x406ff8
  404fb2:	movsxd rbx,eax
  404fb5:	mov    rcx,rsi
  404fb8:	mov    rdx,rdi
  404fbb:	mov    r8,rbx
  404fbe:	call   0x406ff0
  404fc3:	xor    ecx,ecx
  404fc5:	test   eax,eax
  404fc7:	jne    0x404fe2
  404fc9:	movzx  edx,BYTE PTR [rdi+rbx*1]
  404fcd:	cmp    dl,0x5c
  404fd0:	sete   cl
  404fd3:	cmp    dl,0x2f
  404fd6:	sete   al
  404fd9:	or     ecx,eax
  404fdb:	test   dl,dl
  404fdd:	sete   dl
  404fe0:	or     ecx,edx
  404fe2:	mov    eax,ecx
  404fe4:	add    rsp,0x20
  404fe8:	pop    rbx
  404fe9:	pop    rsi
  404fea:	pop    rdi
  404feb:	ret    
  404fec:	nop    DWORD PTR [rax+0x0]
  404ff0:	push   rsi
  404ff1:	push   rbx
  404ff2:	sub    rsp,0x28
  404ff6:	mov    rbx,rcx
  404ff9:	call   0x4049d0
  404ffe:	test   rax,rax
  405001:	je     0x4050d0
  405007:	lea    rsi,[rax+0x1]
  40500b:	mov    rcx,rsi
  40500e:	call   0x406fa8
  405013:	test   rax,rax
  405016:	mov    rbx,rax
  405019:	je     0x4050e0
  40501f:	mov    rcx,rax
  405022:	mov    eax,DWORD PTR [rcx]
  405024:	add    rcx,0x4
  405028:	lea    edx,[rax-0x1010101]
  40502e:	not    eax
  405030:	and    edx,eax
  405032:	and    edx,0x80808080
  405038:	je     0x405022
  40503a:	mov    eax,edx
  40503c:	shr    eax,0x10
  40503f:	test   edx,0x8080
  405045:	cmove  edx,eax
  405048:	lea    rax,[rcx+0x2]
  40504c:	cmove  rcx,rax
  405050:	add    dl,dl
  405052:	sbb    rcx,0x3
  405056:	sub    rcx,rbx
  405059:	cmp    rcx,0x4
  40505d:	ja     0x405070
  40505f:	mov    rax,rbx
  405062:	add    rsp,0x28
  405066:	pop    rbx
  405067:	pop    rsi
  405068:	ret    
  405069:	nop    DWORD PTR [rax+0x0]
  405070:	lea    rcx,[rbx+rcx*1-0x4]
  405075:	lea    rdx,[rip+0x5ab8]        # 0x40ab34
  40507c:	call   0x405500
  405081:	test   eax,eax
  405083:	jne    0x40505f
  405085:	mov    rdx,rbx
  405088:	mov    ecx,DWORD PTR [rdx]
  40508a:	add    rdx,0x4
  40508e:	lea    eax,[rcx-0x1010101]
  405094:	not    ecx
  405096:	and    eax,ecx
  405098:	and    eax,0x80808080
  40509d:	je     0x405088
  40509f:	mov    ecx,eax
  4050a1:	shr    ecx,0x10
  4050a4:	test   eax,0x8080
  4050a9:	cmove  eax,ecx
  4050ac:	lea    rcx,[rdx+0x2]
  4050b0:	cmove  rdx,rcx
  4050b4:	add    al,al
  4050b6:	mov    rax,rbx
  4050b9:	sbb    rdx,0x3
  4050bd:	mov    BYTE PTR [rdx-0x4],0x0
  4050c1:	add    rsp,0x28
  4050c5:	pop    rbx
  4050c6:	pop    rsi
  4050c7:	ret    
  4050c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4050d0:	mov    rcx,rbx
  4050d3:	call   0x404780
  4050d8:	mov    rsi,rax
  4050db:	jmp    0x40500b
  4050e0:	call   QWORD PTR [rip+0xa4aa]        # 0x40f590
  4050e6:	lea    rdx,[rip+0x5a34]        # 0x40ab21
  4050ed:	lea    rcx,[rax+0x60]
  4050f1:	mov    r8,rsi
  4050f4:	call   0x4040e0
  4050f9:	call   0x4070b8
  4050fe:	nop
  4050ff:	nop
  405100:	push   r12
  405102:	push   rbp
  405103:	push   rdi
  405104:	push   rsi
  405105:	push   rbx
  405106:	sub    rsp,0x20
  40510a:	test   rcx,rcx
  40510d:	je     0x4052b4
  405113:	movzx  eax,BYTE PTR [rcx]
  405116:	mov    r12,rcx
  405119:	cmp    al,0x5c
  40511b:	je     0x405211
  405121:	cmp    al,0x2f
  405123:	je     0x405211
  405129:	movzx  ecx,al
  40512c:	mov    esi,0x400
  405131:	call   QWORD PTR [rip+0xa511]        # 0x40f648
  405137:	test   eax,eax
  405139:	jne    0x4051f3
  40513f:	mov    rcx,rsi
  405142:	mov    rbp,QWORD PTR [rip+0xa47f]        # 0x40f5c8
  405149:	call   0x407060
  40514e:	test   rax,rax
  405151:	mov    rbx,rax
  405154:	je     0x40518e
  405156:	mov    edx,esi
  405158:	mov    rcx,rax
  40515b:	call   0x406fa0
  405160:	test   rax,rax
  405163:	mov    rdi,rax
  405166:	jne    0x405240
  40516c:	call   rbp
  40516e:	cmp    DWORD PTR [rax],0x22
  405171:	jne    0x4051b0
  405173:	mov    rcx,rbx
  405176:	add    rsi,rsi
  405179:	call   0x407090
  40517e:	mov    rcx,rsi
  405181:	call   0x407060
  405186:	test   rax,rax
  405189:	mov    rbx,rax
  40518c:	jne    0x405156
  40518e:	call   QWORD PTR [rip+0xa3fc]        # 0x40f590
  405194:	lea    rdx,[rip+0x599e]        # 0x40ab39
  40519b:	lea    rcx,[rax+0x60]
  40519f:	xor    edi,edi
  4051a1:	call   0x4040e0
  4051a6:	jmp    0x4051e5
  4051a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4051b0:	call   rbp
  4051b2:	mov    esi,DWORD PTR [rax]
  4051b4:	mov    rcx,rbx
  4051b7:	call   0x407090
  4051bc:	call   rbp
  4051be:	mov    DWORD PTR [rax],esi
  4051c0:	call   rbp
  4051c2:	mov    ecx,DWORD PTR [rax]
  4051c4:	call   0x407000
  4051c9:	mov    rbx,rax
  4051cc:	call   QWORD PTR [rip+0xa3be]        # 0x40f590
  4051d2:	lea    rdx,[rip+0x596f]        # 0x40ab48
  4051d9:	lea    rcx,[rax+0x60]
  4051dd:	mov    r8,rbx
  4051e0:	call   0x4040e0
  4051e5:	mov    rax,rdi
  4051e8:	add    rsp,0x20
  4051ec:	pop    rbx
  4051ed:	pop    rsi
  4051ee:	pop    rdi
  4051ef:	pop    rbp
  4051f0:	pop    r12
  4051f2:	ret    
  4051f3:	cmp    BYTE PTR [r12+0x1],0x3a
  4051f9:	jne    0x40513f
  4051ff:	movzx  eax,BYTE PTR [r12+0x2]
  405205:	cmp    al,0x5c
  405207:	je     0x405211
  405209:	cmp    al,0x2f
  40520b:	jne    0x40513f
  405211:	mov    rcx,r12
  405214:	call   0x406fa8
  405219:	test   rax,rax
  40521c:	mov    rdi,rax
  40521f:	je     0x4052bb
  405225:	mov    rcx,rdi
  405228:	call   0x404af0
  40522d:	mov    rax,rdi
  405230:	add    rsp,0x20
  405234:	pop    rbx
  405235:	pop    rsi
  405236:	pop    rdi
  405237:	pop    rbp
  405238:	pop    r12
  40523a:	ret    
  40523b:	nop    DWORD PTR [rax+rax*1+0x0]
  405240:	mov    rsi,rbx
  405243:	mov    edx,DWORD PTR [rsi]
  405245:	add    rsi,0x4
  405249:	lea    eax,[rdx-0x1010101]
  40524f:	not    edx
  405251:	and    eax,edx
  405253:	and    eax,0x80808080
  405258:	je     0x405243
  40525a:	mov    edx,eax
  40525c:	mov    rcx,r12
  40525f:	shr    edx,0x10
  405262:	test   eax,0x8080
  405267:	cmove  eax,edx
  40526a:	lea    rdx,[rsi+0x2]
  40526e:	cmove  rsi,rdx
  405272:	add    al,al
  405274:	sbb    rsi,0x3
  405278:	sub    rsi,rbx
  40527b:	call   0x406ff8
  405280:	lea    rcx,[rsi+rax*1+0x2]
  405285:	call   0x407060
  40528a:	test   rax,rax
  40528d:	mov    rdi,rax
  405290:	je     0x4052d6
  405292:	lea    rdx,[rip+0x58dc]        # 0x40ab75
  405299:	mov    r9,r12
  40529c:	mov    r8,rbx
  40529f:	mov    rcx,rax
  4052a2:	call   0x403fd0
  4052a7:	mov    rcx,rbx
  4052aa:	call   0x407090
  4052af:	jmp    0x405225
  4052b4:	xor    edi,edi
  4052b6:	jmp    0x4051e5
  4052bb:	call   QWORD PTR [rip+0xa2cf]        # 0x40f590
  4052c1:	lea    rdx,[rip+0x5871]        # 0x40ab39
  4052c8:	lea    rcx,[rax+0x60]
  4052cc:	call   0x4040e0
  4052d1:	jmp    0x4051e5
  4052d6:	mov    rcx,rbx
  4052d9:	call   0x407090
  4052de:	call   QWORD PTR [rip+0xa2ac]        # 0x40f590
  4052e4:	lea    rdx,[rip+0x584e]        # 0x40ab39
  4052eb:	lea    rcx,[rax+0x60]
  4052ef:	call   0x4040e0
  4052f4:	jmp    0x4051e5
  4052f9:	nop    DWORD PTR [rax+0x0]
  405300:	mov    r8,rcx
  405303:	mov    rcx,rdx
  405306:	lea    rdx,[rip+0x5873]        # 0x40ab80
  40530d:	jmp    0x404cd0
  405312:	nop    DWORD PTR [rax+0x0]
  405316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405320:	mov    r8,rcx
  405323:	mov    rcx,rdx
  405326:	lea    rdx,[rip+0x58a3]        # 0x40abd0
  40532d:	jmp    0x404cd0
  405332:	nop    DWORD PTR [rax+0x0]
  405336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405340:	mov    r8,rcx
  405343:	mov    rcx,rdx
  405346:	lea    rdx,[rip+0x58d3]        # 0x40ac20
  40534d:	jmp    0x404cd0
  405352:	nop    DWORD PTR [rax+0x0]
  405356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405360:	mov    r8,rcx
  405363:	mov    rcx,rdx
  405366:	lea    rdx,[rip+0x58fb]        # 0x40ac68
  40536d:	jmp    0x404cd0
  405372:	nop    DWORD PTR [rax+0x0]
  405376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405380:	mov    r8,rcx
  405383:	mov    rcx,rdx
  405386:	lea    rdx,[rip+0x592b]        # 0x40acb8
  40538d:	jmp    0x404cd0
  405392:	nop    DWORD PTR [rax+0x0]
  405396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053a0:	mov    r8,rcx
  4053a3:	mov    rcx,rdx
  4053a6:	lea    rdx,[rip+0x5963]        # 0x40ad10
  4053ad:	jmp    0x404cd0
  4053b2:	nop    DWORD PTR [rax+0x0]
  4053b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053c0:	mov    r8,rcx
  4053c3:	mov    rcx,rdx
  4053c6:	lea    rdx,[rip+0x5983]        # 0x40ad50
  4053cd:	jmp    0x404cd0
  4053d2:	nop    DWORD PTR [rax+0x0]
  4053d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053e0:	mov    r8,rcx
  4053e3:	mov    rcx,rdx
  4053e6:	lea    rdx,[rip+0x59b3]        # 0x40ada0
  4053ed:	jmp    0x404cd0
  4053f2:	nop    DWORD PTR [rax+0x0]
  4053f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405400:	mov    r8,rcx
  405403:	mov    rcx,rdx
  405406:	lea    rdx,[rip+0x59e3]        # 0x40adf0
  40540d:	jmp    0x404cd0
  405412:	nop    DWORD PTR [rax+0x0]
  405416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405420:	mov    r8,rcx
  405423:	mov    rcx,rdx
  405426:	lea    rdx,[rip+0x59c3]        # 0x40adf0
  40542d:	jmp    0x404cd0
  405432:	nop    DWORD PTR [rax+0x0]
  405436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405440:	mov    r8,rcx
  405443:	mov    rcx,rdx
  405446:	lea    rdx,[rip+0x59fb]        # 0x40ae48
  40544d:	jmp    0x404cd0
  405452:	nop    DWORD PTR [rax+0x0]
  405456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405460:	push   rbx
  405461:	sub    rsp,0x20
  405465:	mov    rbx,rcx
  405468:	lea    rcx,[rip+0x5a1f]        # 0x40ae8e
  40546f:	call   0x407080
  405474:	mov    r9,rax
  405477:	xor    eax,eax
  405479:	test   r9,r9
  40547c:	je     0x405497
  40547e:	lea    r8,[rip+0x5a11]        # 0x40ae96
  405485:	mov    edx,0x400
  40548a:	mov    rcx,rbx
  40548d:	call   0x403f90
  405492:	mov    eax,0x1
  405497:	add    rsp,0x20
  40549b:	pop    rbx
  40549c:	ret    
  40549d:	nop    DWORD PTR [rax]
  4054a0:	jmp    0x404860
  4054a5:	nop
  4054a6:	nop
  4054a7:	nop
  4054a8:	nop
  4054a9:	nop
  4054aa:	nop
  4054ab:	nop
  4054ac:	nop
  4054ad:	nop
  4054ae:	nop
  4054af:	nop
  4054b0:	test   ecx,ecx
  4054b2:	mov    eax,ecx
  4054b4:	jle    0x4054f0
  4054b6:	cmp    eax,0x1f3
  4054bb:	mov    ecx,0x1
  4054c0:	jle    0x4054e0
  4054c2:	lea    r8d,[rax+0x1f4]
  4054c9:	mov    edx,0x10624dd3
  4054ce:	mov    eax,r8d
  4054d1:	imul   edx
  4054d3:	mov    eax,r8d
  4054d6:	sar    eax,0x1f
  4054d9:	sar    edx,0x6
  4054dc:	mov    ecx,edx
  4054de:	sub    ecx,eax
  4054e0:	mov    rax,QWORD PTR [rip+0xa041]        # 0x40f528
  4054e7:	xor    edx,edx
  4054e9:	rex.W jmp rax
  4054ec:	nop    DWORD PTR [rax+0x0]
  4054f0:	repz ret 
  4054f2:	nop
  4054f3:	nop
  4054f4:	nop
  4054f5:	nop
  4054f6:	nop
  4054f7:	nop
  4054f8:	nop
  4054f9:	nop
  4054fa:	nop
  4054fb:	nop
  4054fc:	nop
  4054fd:	nop
  4054fe:	nop
  4054ff:	nop
  405500:	push   r15
  405502:	push   r14
  405504:	push   r13
  405506:	push   r12
  405508:	push   rbp
  405509:	push   rdi
  40550a:	push   rsi
  40550b:	push   rbx
  40550c:	sub    rsp,0x28
  405510:	mov    r13,QWORD PTR [rip+0xa141]        # 0x40f658
  405517:	mov    r14,QWORD PTR [rip+0xa1d2]        # 0x40f6f0
  40551e:	mov    r12,rcx
  405521:	mov    r15,rdx
  405524:	jmp    0x405547
  405526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405530:	add    ebx,0x20
  405533:	lea    eax,[rsi-0x41]
  405536:	cmp    al,0x19
  405538:	ja     0x405590
  40553a:	lea    edi,[rsi+0x20]
  40553d:	cmp    bl,dil
  405540:	jne    0x4055b0
  405542:	test   dil,dil
  405545:	je     0x4055c0
  405547:	add    r12,0x1
  40554b:	add    r15,0x1
  40554f:	movzx  esi,BYTE PTR [r15-0x1]
  405554:	movzx  ebx,BYTE PTR [r12-0x1]
  40555a:	mov    edi,esi
  40555c:	cmp    bl,sil
  40555f:	je     0x405542
  405561:	lea    eax,[rbx-0x41]
  405564:	cmp    al,0x19
  405566:	jbe    0x405530
  405568:	test   bl,bl
  40556a:	jns    0x405533
  40556c:	movzx  ebp,bl
  40556f:	mov    ecx,ebp
  405571:	call   r13
  405574:	test   eax,eax
  405576:	je     0x405533
  405578:	mov    ecx,ebp
  40557a:	call   r14
  40557d:	mov    ebx,eax
  40557f:	lea    eax,[rsi-0x41]
  405582:	cmp    al,0x19
  405584:	jbe    0x40553a
  405586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405590:	test   sil,sil
  405593:	jns    0x40553d
  405595:	mov    ecx,esi
  405597:	call   QWORD PTR [rip+0xa0bb]        # 0x40f658
  40559d:	test   eax,eax
  40559f:	je     0x40553d
  4055a1:	mov    ecx,esi
  4055a3:	call   QWORD PTR [rip+0xa147]        # 0x40f6f0
  4055a9:	mov    edi,eax
  4055ab:	cmp    bl,dil
  4055ae:	je     0x405542
  4055b0:	movzx  eax,bl
  4055b3:	movzx  edi,dil
  4055b7:	sub    eax,edi
  4055b9:	jmp    0x4055c2
  4055bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4055c0:	xor    eax,eax
  4055c2:	add    rsp,0x28
  4055c6:	pop    rbx
  4055c7:	pop    rsi
  4055c8:	pop    rdi
  4055c9:	pop    rbp
  4055ca:	pop    r12
  4055cc:	pop    r13
  4055ce:	pop    r14
  4055d0:	pop    r15
  4055d2:	ret    
  4055d3:	nop    DWORD PTR [rax]
  4055d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4055e0:	push   r15
  4055e2:	push   r14
  4055e4:	push   r13
  4055e6:	push   r12
  4055e8:	push   rbp
  4055e9:	push   rdi
  4055ea:	push   rsi
  4055eb:	push   rbx
  4055ec:	sub    rsp,0x38
  4055f0:	mov    rax,QWORD PTR [rip+0xa0f9]        # 0x40f6f0
  4055f7:	mov    r13,QWORD PTR [rip+0xa05a]        # 0x40f658
  4055fe:	mov    rbp,rcx
  405601:	mov    rdi,rdx
  405604:	lea    r12,[rdx+r8*1]
  405608:	mov    QWORD PTR [rsp+0x28],rax
  40560d:	jmp    0x405628
  40560f:	nop
  405610:	add    ebx,0x20
  405613:	lea    eax,[rsi-0x41]
  405616:	cmp    al,0x19
  405618:	ja     0x405671
  40561a:	lea    r15d,[rsi+0x20]
  40561e:	cmp    bl,r15b
  405621:	jne    0x405692
  405623:	test   r15b,r15b
  405626:	je     0x4056a0
  405628:	cmp    rdi,r12
  40562b:	je     0x4056a0
  40562d:	add    rbp,0x1
  405631:	add    rdi,0x1
  405635:	movzx  esi,BYTE PTR [rdi-0x1]
  405639:	movzx  ebx,BYTE PTR [rbp-0x1]
  40563d:	mov    r15d,esi
  405640:	cmp    bl,sil
  405643:	je     0x405623
  405645:	lea    eax,[rbx-0x41]
  405648:	cmp    al,0x19
  40564a:	jbe    0x405610
  40564c:	test   bl,bl
  40564e:	jns    0x405613
  405650:	movzx  r14d,bl
  405654:	mov    ecx,r14d
  405657:	call   r13
  40565a:	test   eax,eax
  40565c:	je     0x405613
  40565e:	mov    ecx,r14d
  405661:	mov    rax,QWORD PTR [rsp+0x28]
  405666:	call   rax
  405668:	mov    ebx,eax
  40566a:	lea    eax,[rsi-0x41]
  40566d:	cmp    al,0x19
  40566f:	jbe    0x40561a
  405671:	test   sil,sil
  405674:	jns    0x40561e
  405676:	mov    ecx,esi
  405678:	call   QWORD PTR [rip+0x9fda]        # 0x40f658
  40567e:	test   eax,eax
  405680:	je     0x40561e
  405682:	mov    ecx,esi
  405684:	call   QWORD PTR [rip+0xa066]        # 0x40f6f0
  40568a:	mov    r15d,eax
  40568d:	cmp    bl,r15b
  405690:	je     0x405623
  405692:	movzx  ebx,bl
  405695:	movzx  r15d,r15b
  405699:	mov    eax,ebx
  40569b:	sub    eax,r15d
  40569e:	jmp    0x4056a2
  4056a0:	xor    eax,eax
  4056a2:	add    rsp,0x38
  4056a6:	pop    rbx
  4056a7:	pop    rsi
  4056a8:	pop    rdi
  4056a9:	pop    rbp
  4056aa:	pop    r12
  4056ac:	pop    r13
  4056ae:	pop    r14
  4056b0:	pop    r15
  4056b2:	ret    
  4056b3:	nop    DWORD PTR [rax]
  4056b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4056c0:	push   rsi
  4056c1:	push   rbx
  4056c2:	sub    rsp,0x28
  4056c6:	lea    eax,[rcx-0x61]
  4056c9:	mov    esi,ecx
  4056cb:	cmp    al,0x19
  4056cd:	jbe    0x405702
  4056cf:	test   cl,cl
  4056d1:	js     0x4056e0
  4056d3:	mov    eax,esi
  4056d5:	add    rsp,0x28
  4056d9:	pop    rbx
  4056da:	pop    rsi
  4056db:	ret    
  4056dc:	nop    DWORD PTR [rax+0x0]
  4056e0:	movzx  ebx,cl
  4056e3:	mov    ecx,ebx
  4056e5:	call   QWORD PTR [rip+0x9f65]        # 0x40f650
  4056eb:	test   eax,eax
  4056ed:	je     0x4056d3
  4056ef:	mov    ecx,ebx
  4056f1:	call   QWORD PTR [rip+0xa001]        # 0x40f6f8
  4056f7:	mov    esi,eax
  4056f9:	mov    eax,esi
  4056fb:	add    rsp,0x28
  4056ff:	pop    rbx
  405700:	pop    rsi
  405701:	ret    
  405702:	lea    esi,[rcx-0x20]
  405705:	mov    eax,esi
  405707:	add    rsp,0x28
  40570b:	pop    rbx
  40570c:	pop    rsi
  40570d:	ret    
  40570e:	xchg   ax,ax
  405710:	push   rsi
  405711:	push   rbx
  405712:	sub    rsp,0x28
  405716:	lea    eax,[rcx-0x41]
  405719:	mov    esi,ecx
  40571b:	cmp    al,0x19
  40571d:	jbe    0x405752
  40571f:	test   cl,cl
  405721:	js     0x405730
  405723:	mov    eax,esi
  405725:	add    rsp,0x28
  405729:	pop    rbx
  40572a:	pop    rsi
  40572b:	ret    
  40572c:	nop    DWORD PTR [rax+0x0]
  405730:	movzx  ebx,cl
  405733:	mov    ecx,ebx
  405735:	call   QWORD PTR [rip+0x9f1d]        # 0x40f658
  40573b:	test   eax,eax
  40573d:	je     0x405723
  40573f:	mov    ecx,ebx
  405741:	call   QWORD PTR [rip+0x9fa9]        # 0x40f6f0
  405747:	mov    esi,eax
  405749:	mov    eax,esi
  40574b:	add    rsp,0x28
  40574f:	pop    rbx
  405750:	pop    rsi
  405751:	ret    
  405752:	lea    esi,[rcx+0x20]
  405755:	mov    eax,esi
  405757:	add    rsp,0x28
  40575b:	pop    rbx
  40575c:	pop    rsi
  40575d:	ret    
  40575e:	xchg   ax,ax
  405760:	lea    edx,[rcx-0x61]
  405763:	mov    eax,ecx
  405765:	sub    ecx,0x20
  405768:	cmp    dl,0x19
  40576b:	cmovbe eax,ecx
  40576e:	ret    
  40576f:	nop
  405770:	lea    edx,[rcx-0x41]
  405773:	lea    eax,[rcx+0x20]
  405776:	cmp    dl,0x19
  405779:	cmova  eax,ecx
  40577c:	ret    
  40577d:	nop
  40577e:	nop
  40577f:	nop
  405780:	push   rbx
  405781:	sub    rsp,0x20
  405785:	test   ecx,ecx
  405787:	mov    ebx,ecx
  405789:	je     0x405800
  40578b:	cmp    ecx,0x1
  40578e:	lea    rdx,[rip+0x5773]        # 0x40af08
  405795:	mov    eax,0x1
  40579a:	jne    0x4057ac
  40579c:	jmp    0x405812
  40579e:	xchg   ax,ax
  4057a0:	add    eax,0x1
  4057a3:	add    rdx,0x8
  4057a7:	cmp    eax,0x2e
  4057aa:	je     0x4057d0
  4057ac:	cmp    DWORD PTR [rdx],ebx
  4057ae:	jne    0x4057a0
  4057b0:	lea    rdx,[rip+0x5749]        # 0x40af00
  4057b7:	cdqe   
  4057b9:	mov    ebx,DWORD PTR [rdx+rax*8+0x4]
  4057bd:	call   QWORD PTR [rip+0x9e05]        # 0x40f5c8
  4057c3:	mov    DWORD PTR [rax],ebx
  4057c5:	add    rsp,0x20
  4057c9:	pop    rbx
  4057ca:	ret    
  4057cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4057d0:	call   QWORD PTR [rip+0x9dba]        # 0x40f590
  4057d6:	lea    rdx,[rip+0x56e3]        # 0x40aec0
  4057dd:	lea    rcx,[rax+0x60]
  4057e1:	mov    r8d,ebx
  4057e4:	call   0x4040e0
  4057e9:	call   QWORD PTR [rip+0x9dd9]        # 0x40f5c8
  4057ef:	mov    DWORD PTR [rax],0x16
  4057f5:	add    rsp,0x20
  4057f9:	pop    rbx
  4057fa:	ret    
  4057fb:	nop    DWORD PTR [rax+rax*1+0x0]
  405800:	call   QWORD PTR [rip+0x9dc2]        # 0x40f5c8
  405806:	mov    DWORD PTR [rax],0x0
  40580c:	add    rsp,0x20
  405810:	pop    rbx
  405811:	ret    
  405812:	xor    eax,eax
  405814:	jmp    0x4057b0
  405816:	nop
  405817:	nop
  405818:	nop
  405819:	nop
  40581a:	nop
  40581b:	nop
  40581c:	nop
  40581d:	nop
  40581e:	nop
  40581f:	nop
  405820:	push   rbx
  405821:	sub    rsp,0x30
  405825:	mov    rbx,rcx
  405828:	mov    rcx,QWORD PTR [rip+0x96a1]        # 0x40eed0
  40582f:	call   0x405dd0
  405834:	cmp    rax,0xffffffffffffffff
  405838:	mov    QWORD PTR [rsp+0x20],rax
  40583d:	je     0x4058b5
  40583f:	mov    ecx,0x8
  405844:	call   0x4070e0
  405849:	mov    rcx,QWORD PTR [rip+0x9680]        # 0x40eed0
  405850:	call   0x405dd0
  405855:	mov    rcx,QWORD PTR [rip+0x967c]        # 0x40eed8
  40585c:	mov    QWORD PTR [rsp+0x20],rax
  405861:	call   0x405dd0
  405866:	lea    rdx,[rsp+0x20]
  40586b:	lea    r8,[rsp+0x28]
  405870:	mov    rcx,rbx
  405873:	mov    QWORD PTR [rsp+0x28],rax
  405878:	call   0x407130
  40587d:	mov    rcx,QWORD PTR [rsp+0x20]
  405882:	mov    rbx,rax
  405885:	call   0x405de0
  40588a:	mov    rcx,QWORD PTR [rsp+0x28]
  40588f:	mov    QWORD PTR [rip+0x963a],rax        # 0x40eed0
  405896:	call   0x405de0
  40589b:	mov    ecx,0x8
  4058a0:	mov    QWORD PTR [rip+0x9631],rax        # 0x40eed8
  4058a7:	call   0x4070c0
  4058ac:	mov    rax,rbx
  4058af:	add    rsp,0x30
  4058b3:	pop    rbx
  4058b4:	ret    
  4058b5:	mov    rax,QWORD PTR [rip+0x5ae4]        # 0x40b3a0
  4058bc:	mov    rcx,rbx
  4058bf:	call   QWORD PTR [rax]
  4058c1:	add    rsp,0x30
  4058c5:	pop    rbx
  4058c6:	ret    
  4058c7:	nop    WORD PTR [rax+rax*1+0x0]
  4058d0:	sub    rsp,0x28
  4058d4:	call   0x405820
  4058d9:	test   rax,rax
  4058dc:	sete   al
  4058df:	movzx  eax,al
  4058e2:	neg    eax
  4058e4:	add    rsp,0x28
  4058e8:	ret    
  4058e9:	nop
  4058ea:	nop
  4058eb:	nop
  4058ec:	nop
  4058ed:	nop
  4058ee:	nop
  4058ef:	nop
  4058f0:	sub    rsp,0x28
  4058f4:	mov    rax,QWORD PTR [rip+0x2715]        # 0x408010
  4058fb:	mov    rax,QWORD PTR [rax]
  4058fe:	test   rax,rax
  405901:	je     0x405920
  405903:	call   rax
  405905:	mov    rax,QWORD PTR [rip+0x2704]        # 0x408010
  40590c:	lea    rdx,[rax+0x8]
  405910:	mov    rax,QWORD PTR [rax+0x8]
  405914:	mov    QWORD PTR [rip+0x26f5],rdx        # 0x408010
  40591b:	test   rax,rax
  40591e:	jne    0x405903
  405920:	add    rsp,0x28
  405924:	ret    
  405925:	nop
  405926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405930:	push   rsi
  405931:	push   rbx
  405932:	sub    rsp,0x28
  405936:	mov    rsi,QWORD PTR [rip+0x59e3]        # 0x40b320
  40593d:	mov    rax,QWORD PTR [rsi]
  405940:	cmp    eax,0xffffffff
  405943:	mov    ebx,eax
  405945:	je     0x405970
  405947:	test   ebx,ebx
  405949:	je     0x40595a
  40594b:	nop    DWORD PTR [rax+rax*1+0x0]
  405950:	mov    eax,ebx
  405952:	call   QWORD PTR [rsi+rax*8]
  405955:	sub    ebx,0x1
  405958:	jne    0x405950
  40595a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x4058f0
  405961:	add    rsp,0x28
  405965:	pop    rbx
  405966:	pop    rsi
  405967:	jmp    0x4058d0
  40596c:	nop    DWORD PTR [rax+0x0]
  405970:	xor    ebx,ebx
  405972:	jmp    0x405976
  405974:	mov    ebx,eax
  405976:	lea    edx,[rbx+0x1]
  405979:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40597e:	mov    rax,rdx
  405981:	jne    0x405974
  405983:	jmp    0x405947
  405985:	nop
  405986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405990:	mov    eax,DWORD PTR [rip+0x8b6a]        # 0x40e500
  405996:	test   eax,eax
  405998:	je     0x4059a0
  40599a:	repz ret 
  40599c:	nop    DWORD PTR [rax+0x0]
  4059a0:	mov    DWORD PTR [rip+0x8b56],0x1        # 0x40e500
  4059aa:	jmp    0x405930
  4059ac:	nop
  4059ad:	nop
  4059ae:	nop
  4059af:	nop
  4059b0:	mov    rax,QWORD PTR [rip+0x9be1]        # 0x40f598
  4059b7:	rex.W jmp rax
  4059ba:	nop
  4059bb:	nop
  4059bc:	nop
  4059bd:	nop
  4059be:	nop
  4059bf:	nop
  4059c0:	xor    eax,eax
  4059c2:	ret    
  4059c3:	nop
  4059c4:	nop
  4059c5:	nop
  4059c6:	nop
  4059c7:	nop
  4059c8:	nop
  4059c9:	nop
  4059ca:	nop
  4059cb:	nop
  4059cc:	nop
  4059cd:	nop
  4059ce:	nop
  4059cf:	nop
  4059d0:	push   r12
  4059d2:	push   rbp
  4059d3:	push   rdi
  4059d4:	push   rsi
  4059d5:	push   rbx
  4059d6:	sub    rsp,0x40
  4059da:	mov    rbx,QWORD PTR [rip+0x269f]        # 0x408080
  4059e1:	movabs rax,0x2b992ddfa232
  4059eb:	mov    QWORD PTR [rsp+0x20],0x0
  4059f4:	cmp    rbx,rax
  4059f7:	je     0x405a10
  4059f9:	not    rbx
  4059fc:	mov    QWORD PTR [rip+0x268d],rbx        # 0x408090
  405a03:	add    rsp,0x40
  405a07:	pop    rbx
  405a08:	pop    rsi
  405a09:	pop    rdi
  405a0a:	pop    rbp
  405a0b:	pop    r12
  405a0d:	ret    
  405a0e:	xchg   ax,ax
  405a10:	lea    rcx,[rsp+0x20]
  405a15:	call   QWORD PTR [rip+0x9a7d]        # 0x40f498
  405a1b:	mov    r12,QWORD PTR [rsp+0x20]
  405a20:	call   QWORD PTR [rip+0x9a3a]        # 0x40f460
  405a26:	mov    ebp,eax
  405a28:	call   QWORD PTR [rip+0x9a3a]        # 0x40f468
  405a2e:	mov    edi,eax
  405a30:	call   QWORD PTR [rip+0x9a6a]        # 0x40f4a0
  405a36:	lea    rcx,[rsp+0x30]
  405a3b:	mov    esi,eax
  405a3d:	call   QWORD PTR [rip+0x9a95]        # 0x40f4d8
  405a43:	xor    r12,QWORD PTR [rsp+0x30]
  405a48:	mov    edx,edi
  405a4a:	movabs rax,0xffffffffffff
  405a54:	xor    rbp,r12
  405a57:	mov    rdi,rbp
  405a5a:	xor    rdi,rdx
  405a5d:	mov    edx,esi
  405a5f:	xor    rdi,rdx
  405a62:	mov    rsi,rdi
  405a65:	and    rsi,rax
  405a68:	cmp    rsi,rbx
  405a6b:	je     0x405a90
  405a6d:	mov    rax,rsi
  405a70:	not    rax
  405a73:	mov    QWORD PTR [rip+0x2606],rsi        # 0x408080
  405a7a:	mov    QWORD PTR [rip+0x260f],rax        # 0x408090
  405a81:	add    rsp,0x40
  405a85:	pop    rbx
  405a86:	pop    rsi
  405a87:	pop    rdi
  405a88:	pop    rbp
  405a89:	pop    r12
  405a8b:	ret    
  405a8c:	nop    DWORD PTR [rax+0x0]
  405a90:	movabs rax,0xffffd466d2205dcc
  405a9a:	movabs rsi,0x2b992ddfa233
  405aa4:	jmp    0x405a73
  405aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ab0:	push   rbp
  405ab1:	push   rsi
  405ab2:	push   rbx
  405ab3:	mov    rbp,rsp
  405ab6:	sub    rsp,0x70
  405aba:	mov    rsi,rcx
  405abd:	lea    rcx,[rip+0x8a7c]        # 0x40e540
  405ac4:	call   QWORD PTR [rip+0x9a2e]        # 0x40f4f8
  405aca:	mov    rbx,QWORD PTR [rip+0x8b67]        # 0x40e638
  405ad1:	xor    r8d,r8d
  405ad4:	lea    rdx,[rbp-0x28]
  405ad8:	mov    rcx,rbx
  405adb:	call   QWORD PTR [rip+0x9a1f]        # 0x40f500
  405ae1:	test   rax,rax
  405ae4:	mov    r9,rax
  405ae7:	je     0x405b90
  405aed:	lea    rax,[rbp-0x20]
  405af1:	mov    QWORD PTR [rsp+0x38],0x0
  405afa:	mov    r8,rbx
  405afd:	mov    rdx,QWORD PTR [rbp-0x28]
  405b01:	xor    ecx,ecx
  405b03:	mov    QWORD PTR [rsp+0x30],rax
  405b08:	lea    rax,[rbp-0x18]
  405b0c:	mov    QWORD PTR [rsp+0x28],rax
  405b11:	lea    rax,[rip+0x8a28]        # 0x40e540
  405b18:	mov    QWORD PTR [rsp+0x20],rax
  405b1d:	call   QWORD PTR [rip+0x99e5]        # 0x40f508
  405b23:	mov    rax,QWORD PTR [rip+0x8b0e]        # 0x40e638
  405b2a:	xor    ecx,ecx
  405b2c:	mov    QWORD PTR [rip+0x8a8d],rsi        # 0x40e5c0
  405b33:	mov    DWORD PTR [rip+0x8f03],0xc0000409        # 0x40ea40
  405b3d:	mov    DWORD PTR [rip+0x8efd],0x1        # 0x40ea44
  405b47:	mov    QWORD PTR [rip+0x8f02],rax        # 0x40ea50
  405b4e:	mov    rax,QWORD PTR [rip+0x252b]        # 0x408080
  405b55:	mov    QWORD PTR [rbp-0x10],rax
  405b59:	mov    rax,QWORD PTR [rip+0x2530]        # 0x408090
  405b60:	mov    QWORD PTR [rbp-0x8],rax
  405b64:	call   QWORD PTR [rip+0x99ae]        # 0x40f518
  405b6a:	lea    rcx,[rip+0x550f]        # 0x40b080
  405b71:	call   QWORD PTR [rip+0x99c9]        # 0x40f540
  405b77:	call   QWORD PTR [rip+0x98db]        # 0x40f458
  405b7d:	mov    edx,0xc0000409
  405b82:	mov    rcx,rax
  405b85:	call   QWORD PTR [rip+0x99a5]        # 0x40f530
  405b8b:	call   0x4070b8
  405b90:	mov    rax,QWORD PTR [rbp+0x18]
  405b94:	mov    QWORD PTR [rip+0x8a9d],rax        # 0x40e638
  405b9b:	lea    rax,[rbp+0x8]
  405b9f:	mov    QWORD PTR [rip+0x8a32],rax        # 0x40e5d8
  405ba6:	jmp    0x405b23
  405bab:	nop
  405bac:	nop
  405bad:	nop
  405bae:	nop
  405baf:	nop
  405bb0:	sub    rsp,0x28
  405bb4:	test   edx,edx
  405bb6:	je     0x405bd0
  405bb8:	cmp    edx,0x3
  405bbb:	je     0x405bd0
  405bbd:	mov    eax,0x1
  405bc2:	add    rsp,0x28
  405bc6:	ret    
  405bc7:	nop    WORD PTR [rax+rax*1+0x0]
  405bd0:	call   0x4068c0
  405bd5:	mov    eax,0x1
  405bda:	add    rsp,0x28
  405bde:	ret    
  405bdf:	nop
  405be0:	push   rsi
  405be1:	push   rbx
  405be2:	sub    rsp,0x28
  405be6:	mov    rax,QWORD PTR [rip+0x5713]        # 0x40b300
  405bed:	cmp    DWORD PTR [rax],0x2
  405bf0:	je     0x405bf8
  405bf2:	mov    DWORD PTR [rax],0x2
  405bf8:	cmp    edx,0x2
  405bfb:	je     0x405c10
  405bfd:	cmp    edx,0x1
  405c00:	je     0x405c42
  405c02:	mov    eax,0x1
  405c07:	add    rsp,0x28
  405c0b:	pop    rbx
  405c0c:	pop    rsi
  405c0d:	ret    
  405c0e:	xchg   ax,ax
  405c10:	lea    rbx,[rip+0xa449]        # 0x410060
  405c17:	lea    rsi,[rip+0xa442]        # 0x410060
  405c1e:	cmp    rbx,rsi
  405c21:	je     0x405c02
  405c23:	mov    rax,QWORD PTR [rbx]
  405c26:	test   rax,rax
  405c29:	je     0x405c2d
  405c2b:	call   rax
  405c2d:	add    rbx,0x8
  405c31:	cmp    rbx,rsi
  405c34:	jne    0x405c23
  405c36:	mov    eax,0x1
  405c3b:	add    rsp,0x28
  405c3f:	pop    rbx
  405c40:	pop    rsi
  405c41:	ret    
  405c42:	call   0x4068c0
  405c47:	jmp    0x405c02
  405c49:	nop    DWORD PTR [rax+0x0]
  405c50:	xor    eax,eax
  405c52:	ret    
  405c53:	nop
  405c54:	nop
  405c55:	nop
  405c56:	nop
  405c57:	nop
  405c58:	nop
  405c59:	nop
  405c5a:	nop
  405c5b:	nop
  405c5c:	nop
  405c5d:	nop
  405c5e:	nop
  405c5f:	nop
  405c60:	sub    rsp,0x58
  405c64:	mov    rax,QWORD PTR [rip+0x8eb5]        # 0x40eb20
  405c6b:	test   rax,rax
  405c6e:	je     0x405c9c
  405c70:	movsd  xmm0,QWORD PTR [rsp+0x80]
  405c79:	mov    DWORD PTR [rsp+0x20],ecx
  405c7d:	lea    rcx,[rsp+0x20]
  405c82:	mov    QWORD PTR [rsp+0x28],rdx
  405c87:	movsd  QWORD PTR [rsp+0x30],xmm2
  405c8d:	movsd  QWORD PTR [rsp+0x38],xmm3
  405c93:	movsd  QWORD PTR [rsp+0x40],xmm0
  405c99:	call   rax
  405c9b:	nop
  405c9c:	add    rsp,0x58
  405ca0:	ret    
  405ca1:	nop    DWORD PTR [rax+rax*1+0x0]
  405ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405cb0:	mov    QWORD PTR [rip+0x8e69],rcx        # 0x40eb20
  405cb7:	jmp    0x407108
  405cbc:	nop    DWORD PTR [rax+0x0]
  405cc0:	push   rsi
  405cc1:	push   rbx
  405cc2:	sub    rsp,0x78
  405cc6:	movaps XMMWORD PTR [rsp+0x40],xmm6
  405ccb:	movaps XMMWORD PTR [rsp+0x50],xmm7
  405cd0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  405cd6:	cmp    DWORD PTR [rcx],0x6
  405cd9:	ja     0x405db0
  405cdf:	mov    edx,DWORD PTR [rcx]
  405ce1:	lea    rax,[rip+0x54dc]        # 0x40b1c4
  405ce8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  405cec:	add    rax,rdx
  405cef:	jmp    rax
  405cf1:	lea    rbx,[rip+0x53a8]        # 0x40b0a0
  405cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  405d00:	movsd  xmm8,QWORD PTR [rcx+0x20]
  405d06:	mov    rsi,QWORD PTR [rcx+0x8]
  405d0a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  405d0f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  405d14:	call   0x407120
  405d19:	movsd  QWORD PTR [rsp+0x30],xmm8
  405d20:	lea    rcx,[rax+0x60]
  405d24:	lea    rdx,[rip+0x546d]        # 0x40b198
  405d2b:	movsd  QWORD PTR [rsp+0x28],xmm7
  405d31:	mov    r9,rsi
  405d34:	mov    r8,rbx
  405d37:	movsd  QWORD PTR [rsp+0x20],xmm6
  405d3d:	call   0x4070a0
  405d42:	nop
  405d43:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  405d48:	xor    eax,eax
  405d4a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  405d4f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  405d55:	add    rsp,0x78
  405d59:	pop    rbx
  405d5a:	pop    rsi
  405d5b:	ret    
  405d5c:	nop    DWORD PTR [rax+0x0]
  405d60:	lea    rbx,[rip+0x5358]        # 0x40b0bf
  405d67:	jmp    0x405d00
  405d69:	nop    DWORD PTR [rax+0x0]
  405d70:	lea    rbx,[rip+0x5369]        # 0x40b0e0
  405d77:	jmp    0x405d00
  405d79:	nop    DWORD PTR [rax+0x0]
  405d80:	lea    rbx,[rip+0x53c9]        # 0x40b150
  405d87:	jmp    0x405d00
  405d8c:	nop    DWORD PTR [rax+0x0]
  405d90:	lea    rbx,[rip+0x5391]        # 0x40b128
  405d97:	jmp    0x405d00
  405d9c:	nop    DWORD PTR [rax+0x0]
  405da0:	lea    rbx,[rip+0x5359]        # 0x40b100
  405da7:	jmp    0x405d00
  405dac:	nop    DWORD PTR [rax+0x0]
  405db0:	lea    rbx,[rip+0x53cf]        # 0x40b186
  405db7:	jmp    0x405d00
  405dbc:	nop
  405dbd:	nop
  405dbe:	nop
  405dbf:	nop
  405dc0:	fninit 
  405dc2:	ret    
  405dc3:	nop
  405dc4:	nop
  405dc5:	nop
  405dc6:	nop
  405dc7:	nop
  405dc8:	nop
  405dc9:	nop
  405dca:	nop
  405dcb:	nop
  405dcc:	nop
  405dcd:	nop
  405dce:	nop
  405dcf:	nop
  405dd0:	mov    rax,rcx
  405dd3:	ret    
  405dd4:	xchg   ax,ax
  405dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405de0:	mov    rax,rcx
  405de3:	ret    
  405de4:	nop
  405de5:	nop
  405de6:	nop
  405de7:	nop
  405de8:	nop
  405de9:	nop
  405dea:	nop
  405deb:	nop
  405dec:	nop
  405ded:	nop
  405dee:	nop
  405def:	nop
  405df0:	push   rsi
  405df1:	push   rbx
  405df2:	sub    rsp,0x38
  405df6:	lea    rax,[rsp+0x58]
  405dfb:	mov    rbx,rcx
  405dfe:	mov    QWORD PTR [rsp+0x58],rdx
  405e03:	mov    QWORD PTR [rsp+0x60],r8
  405e08:	mov    QWORD PTR [rsp+0x68],r9
  405e0d:	mov    QWORD PTR [rsp+0x28],rax
  405e12:	call   0x407120
  405e17:	lea    rcx,[rip+0x53c2]        # 0x40b1e0
  405e1e:	lea    r9,[rax+0x60]
  405e22:	mov    r8d,0x1b
  405e28:	mov    edx,0x1
  405e2d:	call   0x407088
  405e32:	mov    rsi,QWORD PTR [rsp+0x28]
  405e37:	call   0x407120
  405e3c:	lea    rcx,[rax+0x60]
  405e40:	mov    rdx,rbx
  405e43:	mov    r8,rsi
  405e46:	call   0x406fc0
  405e4b:	call   0x4070b8
  405e50:	nop
  405e51:	nop    DWORD PTR [rax+rax*1+0x0]
  405e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e60:	push   r13
  405e62:	push   r12
  405e64:	push   rbp
  405e65:	push   rdi
  405e66:	push   rsi
  405e67:	push   rbx
  405e68:	sub    rsp,0x58
  405e6c:	movsxd rbp,DWORD PTR [rip+0x8cd1]        # 0x40eb44
  405e73:	mov    rbx,rcx
  405e76:	mov    rsi,rdx
  405e79:	mov    rdi,r8
  405e7c:	test   ebp,ebp
  405e7e:	jle    0x405f7a
  405e84:	mov    rax,QWORD PTR [rip+0x8cbd]        # 0x40eb48
  405e8b:	xor    r9d,r9d
  405e8e:	add    rax,0x8
  405e92:	mov    r10,QWORD PTR [rax]
  405e95:	cmp    rbx,r10
  405e98:	jb     0x405eae
  405e9a:	mov    rdx,QWORD PTR [rax+0x8]
  405e9e:	mov    r11d,DWORD PTR [rdx+0x8]
  405ea2:	add    r10,r11
  405ea5:	cmp    rbx,r10
  405ea8:	jb     0x405f60
  405eae:	add    r9d,0x1
  405eb2:	add    rax,0x18
  405eb6:	cmp    r9d,ebp
  405eb9:	jne    0x405e92
  405ebb:	mov    rcx,rbx
  405ebe:	call   0x406ad0
  405ec3:	test   rax,rax
  405ec6:	mov    r12,rax
  405ec9:	je     0x405fb2
  405ecf:	lea    rbp,[rbp+rbp*2+0x0]
  405ed4:	shl    rbp,0x3
  405ed8:	mov    r13,rbp
  405edb:	add    r13,QWORD PTR [rip+0x8c66]        # 0x40eb48
  405ee2:	mov    QWORD PTR [r13+0x10],rax
  405ee6:	mov    DWORD PTR [r13+0x0],0x0
  405eee:	call   0x406bf0
  405ef3:	mov    edx,DWORD PTR [r12+0xc]
  405ef8:	mov    r8d,0x30
  405efe:	add    rax,rdx
  405f01:	lea    rdx,[rsp+0x20]
  405f06:	mov    QWORD PTR [r13+0x8],rax
  405f0a:	mov    rax,QWORD PTR [rip+0x8c37]        # 0x40eb48
  405f11:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  405f16:	call   QWORD PTR [rip+0x9634]        # 0x40f550
  405f1c:	test   rax,rax
  405f1f:	je     0x405f95
  405f21:	mov    eax,DWORD PTR [rsp+0x44]
  405f25:	lea    edx,[rax-0x4]
  405f28:	and    edx,0xfffffffb
  405f2b:	je     0x405f59
  405f2d:	sub    eax,0x40
  405f30:	and    eax,0xffffffbf
  405f33:	je     0x405f59
  405f35:	mov    r9,rbp
  405f38:	add    r9,QWORD PTR [rip+0x8c09]        # 0x40eb48
  405f3f:	mov    r8d,0x40
  405f45:	mov    rdx,QWORD PTR [rsp+0x38]
  405f4a:	mov    rcx,QWORD PTR [rsp+0x20]
  405f4f:	call   QWORD PTR [rip+0x95f3]        # 0x40f548
  405f55:	test   eax,eax
  405f57:	je     0x405f81
  405f59:	add    DWORD PTR [rip+0x8be4],0x1        # 0x40eb44
  405f60:	mov    r8,rdi
  405f63:	mov    rdx,rsi
  405f66:	mov    rcx,rbx
  405f69:	add    rsp,0x58
  405f6d:	pop    rbx
  405f6e:	pop    rsi
  405f6f:	pop    rdi
  405f70:	pop    rbp
  405f71:	pop    r12
  405f73:	pop    r13
  405f75:	jmp    0x407050
  405f7a:	xor    ebp,ebp
  405f7c:	jmp    0x405ebb
  405f81:	call   QWORD PTR [rip+0x94f9]        # 0x40f480
  405f87:	lea    rcx,[rip+0x52ca]        # 0x40b258
  405f8e:	mov    edx,eax
  405f90:	call   0x405df0
  405f95:	mov    rax,QWORD PTR [rip+0x8bac]        # 0x40eb48
  405f9c:	mov    edx,DWORD PTR [r12+0x8]
  405fa1:	lea    rcx,[rip+0x5278]        # 0x40b220
  405fa8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  405fad:	call   0x405df0
  405fb2:	lea    rcx,[rip+0x5247]        # 0x40b200
  405fb9:	mov    rdx,rbx
  405fbc:	call   0x405df0
  405fc1:	nop
  405fc2:	nop    DWORD PTR [rax+0x0]
  405fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405fd0:	push   rbp
  405fd1:	push   r14
  405fd3:	push   r13
  405fd5:	push   r12
  405fd7:	push   rdi
  405fd8:	push   rsi
  405fd9:	push   rbx
  405fda:	mov    rbp,rsp
  405fdd:	sub    rsp,0x60
  405fe1:	mov    ebx,DWORD PTR [rip+0x8b59]        # 0x40eb40
  405fe7:	test   ebx,ebx
  405fe9:	je     0x406000
  405feb:	mov    rsp,rbp
  405fee:	pop    rbx
  405fef:	pop    rsi
  405ff0:	pop    rdi
  405ff1:	pop    r12
  405ff3:	pop    r13
  405ff5:	pop    r14
  405ff7:	pop    rbp
  405ff8:	ret    
  405ff9:	nop    DWORD PTR [rax+0x0]
  406000:	mov    DWORD PTR [rip+0x8b36],0x1        # 0x40eb40
  40600a:	call   0x406b20
  40600f:	cdqe   
  406011:	lea    rax,[rax+rax*2]
  406015:	lea    rax,[rax*8+0x1e]
  40601d:	and    rax,0xfffffffffffffff0
  406021:	call   0x406d40
  406026:	mov    rsi,QWORD PTR [rip+0x5303]        # 0x40b330
  40602d:	mov    rbx,QWORD PTR [rip+0x530c]        # 0x40b340
  406034:	sub    rsp,rax
  406037:	mov    DWORD PTR [rip+0x8b03],0x0        # 0x40eb44
  406041:	lea    rax,[rsp+0x20]
  406046:	mov    QWORD PTR [rip+0x8afb],rax        # 0x40eb48
  40604d:	mov    rax,rsi
  406050:	sub    rax,rbx
  406053:	cmp    rax,0x7
  406057:	jle    0x405feb
  406059:	cmp    rax,0xb
  40605d:	jle    0x406085
  40605f:	mov    r11d,DWORD PTR [rbx]
  406062:	test   r11d,r11d
  406065:	jne    0x4061b0
  40606b:	mov    r10d,DWORD PTR [rbx+0x4]
  40606f:	test   r10d,r10d
  406072:	jne    0x4061b0
  406078:	mov    r9d,DWORD PTR [rbx+0x8]
  40607c:	test   r9d,r9d
  40607f:	jne    0x40609c
  406081:	add    rbx,0xc
  406085:	mov    r8d,DWORD PTR [rbx]
  406088:	test   r8d,r8d
  40608b:	jne    0x4061b0
  406091:	mov    ecx,DWORD PTR [rbx+0x4]
  406094:	test   ecx,ecx
  406096:	jne    0x4061b0
  40609c:	mov    edx,DWORD PTR [rbx+0x8]
  40609f:	cmp    edx,0x1
  4060a2:	jne    0x4062bc
  4060a8:	add    rbx,0xc
  4060ac:	cmp    rbx,rsi
  4060af:	jae    0x405feb
  4060b5:	mov    r12,QWORD PTR [rip+0x52a4]        # 0x40b360
  4060bc:	lea    r13,[rbp-0x30]
  4060c0:	movabs r14,0xffffffff00000000
  4060ca:	mov    ecx,DWORD PTR [rbx+0x4]
  4060cd:	mov    eax,DWORD PTR [rbx]
  4060cf:	movzx  edx,BYTE PTR [rbx+0x8]
  4060d3:	add    rax,r12
  4060d6:	add    rcx,r12
  4060d9:	cmp    edx,0x10
  4060dc:	mov    r8,QWORD PTR [rax]
  4060df:	je     0x406226
  4060e5:	jbe    0x4061ed
  4060eb:	cmp    edx,0x20
  4060ee:	je     0x40626f
  4060f4:	cmp    edx,0x40
  4060f7:	jne    0x40625b
  4060fd:	sub    r8,rax
  406100:	mov    rdx,r13
  406103:	mov    rdi,r13
  406106:	mov    rax,r8
  406109:	add    rax,QWORD PTR [rcx]
  40610c:	mov    r8d,0x8
  406112:	mov    QWORD PTR [rbp-0x30],rax
  406116:	call   0x405e60
  40611b:	add    rbx,0xc
  40611f:	cmp    rbx,rsi
  406122:	jb     0x4060ca
  406124:	mov    eax,DWORD PTR [rip+0x8a1a]        # 0x40eb44
  40612a:	xor    ebx,ebx
  40612c:	xor    esi,esi
  40612e:	test   eax,eax
  406130:	jle    0x405feb
  406136:	mov    r14,QWORD PTR [rip+0x9413]        # 0x40f550
  40613d:	lea    r13,[rbp-0x34]
  406141:	mov    r12,QWORD PTR [rip+0x9400]        # 0x40f548
  406148:	jmp    0x406163
  40614a:	nop    WORD PTR [rax+rax*1+0x0]
  406150:	add    esi,0x1
  406153:	add    rbx,0x18
  406157:	cmp    esi,DWORD PTR [rip+0x89e7]        # 0x40eb44
  40615d:	jge    0x405feb
  406163:	mov    rax,rbx
  406166:	add    rax,QWORD PTR [rip+0x89db]        # 0x40eb48
  40616d:	mov    edx,DWORD PTR [rax]
  40616f:	test   edx,edx
  406171:	je     0x406150
  406173:	mov    rcx,QWORD PTR [rax+0x8]
  406177:	mov    r8d,0x30
  40617d:	mov    rdx,rdi
  406180:	call   r14
  406183:	test   rax,rax
  406186:	je     0x40629e
  40618c:	mov    rax,QWORD PTR [rip+0x89b5]        # 0x40eb48
  406193:	mov    r9,r13
  406196:	mov    rdx,QWORD PTR [rbp-0x18]
  40619a:	mov    rcx,QWORD PTR [rbp-0x30]
  40619e:	mov    r8d,DWORD PTR [rax+rbx*1]
  4061a2:	call   r12
  4061a5:	jmp    0x406150
  4061a7:	nop    WORD PTR [rax+rax*1+0x0]
  4061b0:	cmp    rbx,rsi
  4061b3:	jae    0x405feb
  4061b9:	mov    r12,QWORD PTR [rip+0x51a0]        # 0x40b360
  4061c0:	lea    rdi,[rbp-0x30]
  4061c4:	mov    ecx,DWORD PTR [rbx+0x4]
  4061c7:	mov    eax,DWORD PTR [rbx]
  4061c9:	mov    r8d,0x4
  4061cf:	mov    rdx,rdi
  4061d2:	add    rbx,0x8
  4061d6:	add    rcx,r12
  4061d9:	add    eax,DWORD PTR [rcx]
  4061db:	mov    DWORD PTR [rbp-0x30],eax
  4061de:	call   0x405e60
  4061e3:	cmp    rbx,rsi
  4061e6:	jb     0x4061c4
  4061e8:	jmp    0x406124
  4061ed:	cmp    edx,0x8
  4061f0:	jne    0x40625b
  4061f2:	movzx  edx,BYTE PTR [rcx]
  4061f5:	mov    rdi,r13
  4061f8:	mov    r10,rdx
  4061fb:	or     r10,0xffffffffffffff00
  406202:	test   dl,dl
  406204:	cmovs  rdx,r10
  406208:	sub    rdx,rax
  40620b:	lea    rax,[r8+rdx*1]
  40620f:	mov    r8d,0x1
  406215:	mov    rdx,r13
  406218:	mov    QWORD PTR [rbp-0x30],rax
  40621c:	call   0x405e60
  406221:	jmp    0x40611b
  406226:	movzx  edx,WORD PTR [rcx]
  406229:	mov    rdi,r13
  40622c:	mov    r10,rdx
  40622f:	or     r10,0xffffffffffff0000
  406236:	test   dx,dx
  406239:	cmovs  rdx,r10
  40623d:	sub    rdx,rax
  406240:	lea    rax,[r8+rdx*1]
  406244:	mov    r8d,0x2
  40624a:	mov    rdx,r13
  40624d:	mov    QWORD PTR [rbp-0x30],rax
  406251:	call   0x405e60
  406256:	jmp    0x40611b
  40625b:	lea    rcx,[rip+0x5056]        # 0x40b2b8
  406262:	mov    QWORD PTR [rbp-0x30],0x0
  40626a:	call   0x405df0
  40626f:	mov    edx,DWORD PTR [rcx]
  406271:	mov    rdi,r13
  406274:	mov    r10,rdx
  406277:	or     r10,r14
  40627a:	test   edx,edx
  40627c:	cmovs  rdx,r10
  406280:	sub    rdx,rax
  406283:	lea    rax,[r8+rdx*1]
  406287:	mov    r8d,0x4
  40628d:	mov    rdx,r13
  406290:	mov    QWORD PTR [rbp-0x30],rax
  406294:	call   0x405e60
  406299:	jmp    0x40611b
  40629e:	add    rbx,QWORD PTR [rip+0x88a3]        # 0x40eb48
  4062a5:	lea    rcx,[rip+0x4f74]        # 0x40b220
  4062ac:	mov    rax,QWORD PTR [rbx+0x10]
  4062b0:	mov    r8,QWORD PTR [rbx+0x8]
  4062b4:	mov    edx,DWORD PTR [rax+0x8]
  4062b7:	call   0x405df0
  4062bc:	lea    rcx,[rip+0x4fbd]        # 0x40b280
  4062c3:	call   0x405df0
  4062c8:	nop
  4062c9:	nop
  4062ca:	nop
  4062cb:	nop
  4062cc:	nop
  4062cd:	nop
  4062ce:	nop
  4062cf:	nop
  4062d0:	sub    rsp,0x28
  4062d4:	mov    eax,DWORD PTR [rcx]
  4062d6:	cmp    eax,0xc0000091
  4062db:	ja     0x406340
  4062dd:	cmp    eax,0xc000008d
  4062e2:	jae    0x40635f
  4062e4:	cmp    eax,0xc0000008
  4062e9:	je     0x406400
  4062ef:	ja     0x4063d0
  4062f5:	cmp    eax,0x80000002
  4062fa:	je     0x406400
  406300:	cmp    eax,0xc0000005
  406305:	jne    0x4063de
  40630b:	xor    edx,edx
  40630d:	mov    ecx,0xb
  406312:	call   0x407028
  406317:	cmp    rax,0x1
  40631b:	je     0x406460
  406321:	test   rax,rax
  406324:	je     0x406440
  40632a:	mov    ecx,0xb
  40632f:	call   rax
  406331:	xor    eax,eax
  406333:	add    rsp,0x28
  406337:	ret    
  406338:	nop    DWORD PTR [rax+rax*1+0x0]
  406340:	cmp    eax,0xc0000094
  406345:	je     0x406410
  40634b:	ja     0x406390
  40634d:	cmp    eax,0xc0000092
  406352:	je     0x406400
  406358:	cmp    eax,0xc0000093
  40635d:	jne    0x4063de
  40635f:	xor    edx,edx
  406361:	mov    ecx,0x8
  406366:	call   0x407028
  40636b:	cmp    rax,0x1
  40636f:	mov    rdx,rax
  406372:	je     0x4063e8
  406374:	test   rdx,rdx
  406377:	mov    eax,0x1
  40637c:	je     0x406333
  40637e:	mov    ecx,0x8
  406383:	call   rdx
  406385:	xor    eax,eax
  406387:	add    rsp,0x28
  40638b:	ret    
  40638c:	nop    DWORD PTR [rax+0x0]
  406390:	cmp    eax,0xc0000095
  406395:	je     0x406400
  406397:	cmp    eax,0xc0000096
  40639c:	jne    0x4063de
  40639e:	xor    edx,edx
  4063a0:	mov    ecx,0x4
  4063a5:	call   0x407028
  4063aa:	cmp    rax,0x1
  4063ae:	je     0x40644a
  4063b4:	test   rax,rax
  4063b7:	je     0x406440
  4063bd:	mov    ecx,0x4
  4063c2:	call   rax
  4063c4:	xor    eax,eax
  4063c6:	jmp    0x406333
  4063cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4063d0:	cmp    eax,0xc000001d
  4063d5:	je     0x40639e
  4063d7:	cmp    eax,0xc000008c
  4063dc:	je     0x406400
  4063de:	mov    eax,0x1
  4063e3:	add    rsp,0x28
  4063e7:	ret    
  4063e8:	mov    edx,0x1
  4063ed:	mov    ecx,0x8
  4063f2:	call   0x407028
  4063f7:	call   0x405dc0
  4063fc:	nop    DWORD PTR [rax+0x0]
  406400:	xor    eax,eax
  406402:	add    rsp,0x28
  406406:	ret    
  406407:	nop    WORD PTR [rax+rax*1+0x0]
  406410:	xor    edx,edx
  406412:	mov    ecx,0x8
  406417:	call   0x407028
  40641c:	cmp    rax,0x1
  406420:	mov    rdx,rax
  406423:	jne    0x406374
  406429:	mov    edx,0x1
  40642e:	mov    ecx,0x8
  406433:	call   0x407028
  406438:	xor    eax,eax
  40643a:	jmp    0x406333
  40643f:	nop
  406440:	mov    eax,0x4
  406445:	add    rsp,0x28
  406449:	ret    
  40644a:	mov    edx,0x1
  40644f:	mov    ecx,0x4
  406454:	call   0x407028
  406459:	xor    eax,eax
  40645b:	jmp    0x406333
  406460:	mov    edx,0x1
  406465:	mov    ecx,0xb
  40646a:	call   0x407028
  40646f:	xor    eax,eax
  406471:	jmp    0x406333
  406476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406480:	push   r12
  406482:	push   rbp
  406483:	push   rdi
  406484:	push   rsi
  406485:	push   rbx
  406486:	sub    rsp,0x20
  40648a:	call   0x406bf0
  40648f:	mov    rbp,rax
  406492:	mov    eax,DWORD PTR [rip+0x86f0]        # 0x40eb88
  406498:	test   eax,eax
  40649a:	jne    0x4064c1
  40649c:	test   rbp,rbp
  40649f:	je     0x4064c1
  4064a1:	lea    rcx,[rip+0x4e48]        # 0x40b2f0
  4064a8:	mov    DWORD PTR [rip+0x86d6],0x1        # 0x40eb88
  4064b2:	call   0x406a30
  4064b7:	test   rax,rax
  4064ba:	je     0x4064d0
  4064bc:	mov    eax,0x1
  4064c1:	add    rsp,0x20
  4064c5:	pop    rbx
  4064c6:	pop    rsi
  4064c7:	pop    rdi
  4064c8:	pop    rbp
  4064c9:	pop    r12
  4064cb:	ret    
  4064cc:	nop    DWORD PTR [rax+0x0]
  4064d0:	lea    rbx,[rip+0x87e9]        # 0x40ecc0
  4064d7:	mov    ecx,0x30
  4064dc:	lea    rdx,[rip+0x86dd]        # 0x40ebc0
  4064e3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x4062d0
  4064ea:	xor    esi,esi
  4064ec:	mov    rdi,rbx
  4064ef:	rep stos QWORD PTR es:[rdi],rax
  4064f2:	mov    rdi,rdx
  4064f5:	sub    r12,rbp
  4064f8:	mov    cl,0x20
  4064fa:	rep stos QWORD PTR es:[rdi],rax
  4064fd:	mov    rdi,rdx
  406500:	jmp    0x406530
  406502:	mov    BYTE PTR [rdi],0x9
  406505:	mov    DWORD PTR [rdi+0x4],r12d
  406509:	add    rsi,0x1
  40650d:	mov    edx,DWORD PTR [rax+0xc]
  406510:	add    rbx,0xc
  406514:	mov    DWORD PTR [rbx-0xc],edx
  406517:	add    edx,DWORD PTR [rax+0x8]
  40651a:	mov    rax,rdi
  40651d:	sub    rax,rbp
  406520:	add    rdi,0x8
  406524:	mov    DWORD PTR [rbx-0x4],eax
  406527:	mov    DWORD PTR [rbx-0x8],edx
  40652a:	cmp    rsi,0x20
  40652e:	je     0x406565
  406530:	mov    rcx,rsi
  406533:	call   0x406b60
  406538:	test   rax,rax
  40653b:	jne    0x406502
  40653d:	test   rsi,rsi
  406540:	je     0x4064bc
  406546:	mov    edx,esi
  406548:	nop    DWORD PTR [rax+rax*1+0x0]
  406550:	mov    r8,rbp
  406553:	lea    rcx,[rip+0x8766]        # 0x40ecc0
  40655a:	call   QWORD PTR [rip+0x8f90]        # 0x40f4f0
  406560:	jmp    0x4064bc
  406565:	mov    edx,0x20
  40656a:	jmp    0x406550
  40656c:	nop    DWORD PTR [rax+0x0]
  406570:	push   rbx
  406571:	sub    rsp,0x20
  406575:	mov    rdx,QWORD PTR [rcx]
  406578:	mov    eax,DWORD PTR [rdx]
  40657a:	mov    r8d,eax
  40657d:	and    r8d,0x20ffffff
  406584:	cmp    r8d,0x20474343
  40658b:	je     0x406690
  406591:	cmp    eax,0xc0000091
  406596:	mov    rbx,rcx
  406599:	ja     0x406620
  40659f:	cmp    eax,0xc000008d
  4065a4:	jae    0x406637
  4065aa:	cmp    eax,0xc0000008
  4065af:	je     0x4065e3
  4065b1:	ja     0x4065f0
  4065b3:	cmp    eax,0x80000002
  4065b8:	je     0x4065e3
  4065ba:	cmp    eax,0xc0000005
  4065bf:	jne    0x406602
  4065c1:	xor    edx,edx
  4065c3:	mov    ecx,0xb
  4065c8:	call   0x407028
  4065cd:	cmp    rax,0x1
  4065d1:	je     0x406700
  4065d7:	test   rax,rax
  4065da:	je     0x406602
  4065dc:	mov    ecx,0xb
  4065e1:	call   rax
  4065e3:	mov    eax,0xffffffff
  4065e8:	add    rsp,0x20
  4065ec:	pop    rbx
  4065ed:	ret    
  4065ee:	xchg   ax,ax
  4065f0:	cmp    eax,0xc000001d
  4065f5:	je     0x4066b6
  4065fb:	cmp    eax,0xc000008c
  406600:	je     0x4065e3
  406602:	mov    rax,QWORD PTR [rip+0x8577]        # 0x40eb80
  406609:	test   rax,rax
  40660c:	je     0x4065e8
  40660e:	mov    rcx,rbx
  406611:	add    rsp,0x20
  406615:	pop    rbx
  406616:	rex.W jmp rax
  406619:	nop    DWORD PTR [rax+0x0]
  406620:	cmp    eax,0xc0000094
  406625:	je     0x406662
  406627:	ja     0x4066a0
  406629:	cmp    eax,0xc0000092
  40662e:	je     0x4065e3
  406630:	cmp    eax,0xc0000093
  406635:	jne    0x406602
  406637:	xor    edx,edx
  406639:	mov    ecx,0x8
  40663e:	call   0x407028
  406643:	cmp    rax,0x1
  406647:	jne    0x406674
  406649:	mov    edx,0x1
  40664e:	mov    ecx,0x8
  406653:	call   0x407028
  406658:	call   0x405dc0
  40665d:	jmp    0x4065e3
  406662:	xor    edx,edx
  406664:	mov    ecx,0x8
  406669:	call   0x407028
  40666e:	cmp    rax,0x1
  406672:	je     0x4066e2
  406674:	test   rax,rax
  406677:	je     0x406602
  406679:	mov    ecx,0x8
  40667e:	call   rax
  406680:	mov    eax,0xffffffff
  406685:	jmp    0x4065e8
  40668a:	nop    WORD PTR [rax+rax*1+0x0]
  406690:	test   BYTE PTR [rdx+0x4],0x1
  406694:	jne    0x406591
  40669a:	jmp    0x4065e3
  40669f:	nop
  4066a0:	cmp    eax,0xc0000095
  4066a5:	je     0x4065e3
  4066ab:	cmp    eax,0xc0000096
  4066b0:	jne    0x406602
  4066b6:	xor    edx,edx
  4066b8:	mov    ecx,0x4
  4066bd:	call   0x407028
  4066c2:	cmp    rax,0x1
  4066c6:	je     0x406714
  4066c8:	test   rax,rax
  4066cb:	je     0x406602
  4066d1:	mov    ecx,0x4
  4066d6:	call   rax
  4066d8:	mov    eax,0xffffffff
  4066dd:	jmp    0x4065e8
  4066e2:	mov    edx,0x1
  4066e7:	mov    ecx,0x8
  4066ec:	call   0x407028
  4066f1:	jmp    0x4065e3
  4066f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406700:	mov    edx,0x1
  406705:	mov    ecx,0xb
  40670a:	call   0x407028
  40670f:	jmp    0x4065e3
  406714:	mov    edx,0x1
  406719:	mov    ecx,0x4
  40671e:	call   0x407028
  406723:	jmp    0x4065e3
  406728:	nop
  406729:	nop
  40672a:	nop
  40672b:	nop
  40672c:	nop
  40672d:	nop
  40672e:	nop
  40672f:	nop
  406730:	push   rbp
  406731:	push   rdi
  406732:	push   rsi
  406733:	push   rbx
  406734:	sub    rsp,0x28
  406738:	lea    rcx,[rip+0x8721]        # 0x40ee60
  40673f:	call   QWORD PTR [rip+0x8d03]        # 0x40f448
  406745:	mov    rbx,QWORD PTR [rip+0x86f4]        # 0x40ee40
  40674c:	test   rbx,rbx
  40674f:	je     0x406784
  406751:	mov    rbp,QWORD PTR [rip+0x8de0]        # 0x40f538
  406758:	mov    rdi,QWORD PTR [rip+0x8d21]        # 0x40f480
  40675f:	nop
  406760:	mov    ecx,DWORD PTR [rbx]
  406762:	call   rbp
  406764:	mov    rsi,rax
  406767:	call   rdi
  406769:	test   eax,eax
  40676b:	jne    0x40677b
  40676d:	test   rsi,rsi
  406770:	je     0x40677b
  406772:	mov    rax,QWORD PTR [rbx+0x8]
  406776:	mov    rcx,rsi
  406779:	call   rax
  40677b:	mov    rbx,QWORD PTR [rbx+0x10]
  40677f:	test   rbx,rbx
  406782:	jne    0x406760
  406784:	mov    rax,QWORD PTR [rip+0x8d25]        # 0x40f4b0
  40678b:	lea    rcx,[rip+0x86ce]        # 0x40ee60
  406792:	add    rsp,0x28
  406796:	pop    rbx
  406797:	pop    rsi
  406798:	pop    rdi
  406799:	pop    rbp
  40679a:	rex.W jmp rax
  40679d:	nop    DWORD PTR [rax]
  4067a0:	push   rdi
  4067a1:	push   rsi
  4067a2:	push   rbx
  4067a3:	sub    rsp,0x20
  4067a7:	mov    eax,DWORD PTR [rip+0x869b]        # 0x40ee48
  4067ad:	test   eax,eax
  4067af:	jne    0x4067c0
  4067b1:	add    rsp,0x20
  4067b5:	pop    rbx
  4067b6:	pop    rsi
  4067b7:	pop    rdi
  4067b8:	ret    
  4067b9:	nop    DWORD PTR [rax+0x0]
  4067c0:	mov    rsi,rdx
  4067c3:	mov    edi,ecx
  4067c5:	mov    edx,0x18
  4067ca:	mov    ecx,0x1
  4067cf:	call   0x4070b0
  4067d4:	test   rax,rax
  4067d7:	mov    rbx,rax
  4067da:	je     0x406818
  4067dc:	mov    DWORD PTR [rax],edi
  4067de:	mov    QWORD PTR [rax+0x8],rsi
  4067e2:	lea    rcx,[rip+0x8677]        # 0x40ee60
  4067e9:	call   QWORD PTR [rip+0x8c59]        # 0x40f448
  4067ef:	mov    rax,QWORD PTR [rip+0x864a]        # 0x40ee40
  4067f6:	lea    rcx,[rip+0x8663]        # 0x40ee60
  4067fd:	mov    QWORD PTR [rip+0x863c],rbx        # 0x40ee40
  406804:	mov    QWORD PTR [rbx+0x10],rax
  406808:	call   QWORD PTR [rip+0x8ca2]        # 0x40f4b0
  40680e:	xor    eax,eax
  406810:	add    rsp,0x20
  406814:	pop    rbx
  406815:	pop    rsi
  406816:	pop    rdi
  406817:	ret    
  406818:	mov    eax,0xffffffff
  40681d:	jmp    0x4067b1
  40681f:	nop
  406820:	push   rbx
  406821:	sub    rsp,0x20
  406825:	mov    eax,DWORD PTR [rip+0x861d]        # 0x40ee48
  40682b:	test   eax,eax
  40682d:	jne    0x406840
  40682f:	xor    eax,eax
  406831:	add    rsp,0x20
  406835:	pop    rbx
  406836:	ret    
  406837:	nop    WORD PTR [rax+rax*1+0x0]
  406840:	mov    ebx,ecx
  406842:	lea    rcx,[rip+0x8617]        # 0x40ee60
  406849:	call   QWORD PTR [rip+0x8bf9]        # 0x40f448
  40684f:	mov    rdx,QWORD PTR [rip+0x85ea]        # 0x40ee40
  406856:	test   rdx,rdx
  406859:	je     0x406877
  40685b:	mov    eax,DWORD PTR [rdx]
  40685d:	cmp    eax,ebx
  40685f:	jne    0x40686e
  406861:	jmp    0x4068af
  406863:	mov    r8d,DWORD PTR [rax]
  406866:	cmp    r8d,ebx
  406869:	je     0x406890
  40686b:	mov    rdx,rax
  40686e:	mov    rax,QWORD PTR [rdx+0x10]
  406872:	test   rax,rax
  406875:	jne    0x406863
  406877:	lea    rcx,[rip+0x85e2]        # 0x40ee60
  40687e:	call   QWORD PTR [rip+0x8c2c]        # 0x40f4b0
  406884:	xor    eax,eax
  406886:	add    rsp,0x20
  40688a:	pop    rbx
  40688b:	ret    
  40688c:	nop    DWORD PTR [rax+0x0]
  406890:	mov    rcx,rax
  406893:	mov    rax,QWORD PTR [rax+0x10]
  406897:	mov    QWORD PTR [rdx+0x10],rax
  40689b:	call   0x407090
  4068a0:	lea    rcx,[rip+0x85b9]        # 0x40ee60
  4068a7:	call   QWORD PTR [rip+0x8c03]        # 0x40f4b0
  4068ad:	jmp    0x406884
  4068af:	mov    rax,QWORD PTR [rdx+0x10]
  4068b3:	mov    rcx,rdx
  4068b6:	mov    QWORD PTR [rip+0x8583],rax        # 0x40ee40
  4068bd:	jmp    0x40689b
  4068bf:	nop
  4068c0:	push   rbx
  4068c1:	sub    rsp,0x20
  4068c5:	cmp    edx,0x1
  4068c8:	je     0x406960
  4068ce:	jb     0x406900
  4068d0:	cmp    edx,0x2
  4068d3:	je     0x4068f0
  4068d5:	cmp    edx,0x3
  4068d8:	jne    0x4068f5
  4068da:	mov    eax,DWORD PTR [rip+0x8568]        # 0x40ee48
  4068e0:	test   eax,eax
  4068e2:	je     0x4068f5
  4068e4:	call   0x406730
  4068e9:	jmp    0x4068f5
  4068eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4068f0:	call   0x405dc0
  4068f5:	mov    eax,0x1
  4068fa:	add    rsp,0x20
  4068fe:	pop    rbx
  4068ff:	ret    
  406900:	mov    eax,DWORD PTR [rip+0x8542]        # 0x40ee48
  406906:	test   eax,eax
  406908:	jne    0x406990
  40690e:	mov    eax,DWORD PTR [rip+0x8534]        # 0x40ee48
  406914:	cmp    eax,0x1
  406917:	jne    0x4068f5
  406919:	mov    rcx,QWORD PTR [rip+0x8520]        # 0x40ee40
  406920:	test   rcx,rcx
  406923:	je     0x406936
  406925:	mov    rbx,QWORD PTR [rcx+0x10]
  406929:	call   0x407090
  40692e:	test   rbx,rbx
  406931:	mov    rcx,rbx
  406934:	jne    0x406925
  406936:	lea    rcx,[rip+0x8523]        # 0x40ee60
  40693d:	mov    QWORD PTR [rip+0x84f8],0x0        # 0x40ee40
  406948:	mov    DWORD PTR [rip+0x84f6],0x0        # 0x40ee48
  406952:	call   QWORD PTR [rip+0x8ad8]        # 0x40f430
  406958:	jmp    0x4068f5
  40695a:	nop    WORD PTR [rax+rax*1+0x0]
  406960:	mov    eax,DWORD PTR [rip+0x84e2]        # 0x40ee48
  406966:	test   eax,eax
  406968:	je     0x406980
  40696a:	mov    eax,0x1
  40696f:	mov    DWORD PTR [rip+0x84cf],0x1        # 0x40ee48
  406979:	add    rsp,0x20
  40697d:	pop    rbx
  40697e:	ret    
  40697f:	nop
  406980:	lea    rcx,[rip+0x84d9]        # 0x40ee60
  406987:	call   QWORD PTR [rip+0x8b1b]        # 0x40f4a8
  40698d:	jmp    0x40696a
  40698f:	nop
  406990:	call   0x406730
  406995:	jmp    0x40690e
  40699a:	nop
  40699b:	nop
  40699c:	nop
  40699d:	nop
  40699e:	nop
  40699f:	nop
  4069a0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4069a4:	add    rcx,rax
  4069a7:	xor    eax,eax
  4069a9:	cmp    DWORD PTR [rcx],0x4550
  4069af:	je     0x4069b3
  4069b1:	repz ret 
  4069b3:	xor    eax,eax
  4069b5:	cmp    WORD PTR [rcx+0x18],0x20b
  4069bb:	sete   al
  4069be:	ret    
  4069bf:	nop
  4069c0:	cmp    WORD PTR [rcx],0x5a4d
  4069c5:	je     0x4069d0
  4069c7:	xor    eax,eax
  4069c9:	ret    
  4069ca:	nop    WORD PTR [rax+rax*1+0x0]
  4069d0:	jmp    0x4069a0
  4069d2:	nop    DWORD PTR [rax+0x0]
  4069d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4069e0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4069e4:	add    rcx,rax
  4069e7:	movzx  eax,WORD PTR [rcx+0x14]
  4069eb:	lea    rax,[rcx+rax*1+0x18]
  4069f0:	movzx  ecx,WORD PTR [rcx+0x6]
  4069f4:	test   ecx,ecx
  4069f6:	je     0x406a21
  4069f8:	sub    ecx,0x1
  4069fb:	lea    rcx,[rcx+rcx*4]
  4069ff:	lea    r9,[rax+rcx*8+0x28]
  406a04:	mov    r8d,DWORD PTR [rax+0xc]
  406a08:	cmp    r8,rdx
  406a0b:	mov    rcx,r8
  406a0e:	ja     0x406a18
  406a10:	add    ecx,DWORD PTR [rax+0x8]
  406a13:	cmp    rdx,rcx
  406a16:	jb     0x406a23
  406a18:	add    rax,0x28
  406a1c:	cmp    rax,r9
  406a1f:	jne    0x406a04
  406a21:	xor    eax,eax
  406a23:	repz ret 
  406a25:	nop
  406a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a30:	push   rdi
  406a31:	push   rsi
  406a32:	push   rbx
  406a33:	sub    rsp,0x20
  406a37:	mov    rsi,rcx
  406a3a:	call   0x406ff8
  406a3f:	cmp    rax,0x8
  406a43:	ja     0x406a60
  406a45:	mov    rbx,QWORD PTR [rip+0x4914]        # 0x40b360
  406a4c:	xor    edi,edi
  406a4e:	cmp    WORD PTR [rbx],0x5a4d
  406a53:	je     0x406a70
  406a55:	mov    rax,rdi
  406a58:	add    rsp,0x20
  406a5c:	pop    rbx
  406a5d:	pop    rsi
  406a5e:	pop    rdi
  406a5f:	ret    
  406a60:	xor    edi,edi
  406a62:	mov    rax,rdi
  406a65:	add    rsp,0x20
  406a69:	pop    rbx
  406a6a:	pop    rsi
  406a6b:	pop    rdi
  406a6c:	ret    
  406a6d:	nop    DWORD PTR [rax]
  406a70:	mov    rcx,rbx
  406a73:	call   0x4069a0
  406a78:	test   eax,eax
  406a7a:	je     0x406a55
  406a7c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  406a80:	add    rdx,rbx
  406a83:	movzx  eax,WORD PTR [rdx+0x14]
  406a87:	lea    rbx,[rdx+rax*1+0x18]
  406a8c:	movzx  eax,WORD PTR [rdx+0x6]
  406a90:	test   eax,eax
  406a92:	je     0x406a55
  406a94:	sub    eax,0x1
  406a97:	lea    rax,[rax+rax*4]
  406a9b:	lea    rdi,[rbx+rax*8+0x28]
  406aa0:	jmp    0x406aab
  406aa2:	add    rbx,0x28
  406aa6:	cmp    rbx,rdi
  406aa9:	je     0x406a60
  406aab:	mov    r8d,0x8
  406ab1:	mov    rdx,rsi
  406ab4:	mov    rcx,rbx
  406ab7:	call   0x406ff0
  406abc:	test   eax,eax
  406abe:	jne    0x406aa2
  406ac0:	mov    rdi,rbx
  406ac3:	mov    rax,rdi
  406ac6:	add    rsp,0x20
  406aca:	pop    rbx
  406acb:	pop    rsi
  406acc:	pop    rdi
  406acd:	ret    
  406ace:	xchg   ax,ax
  406ad0:	push   rsi
  406ad1:	push   rbx
  406ad2:	sub    rsp,0x28
  406ad6:	mov    rbx,QWORD PTR [rip+0x4883]        # 0x40b360
  406add:	cmp    WORD PTR [rbx],0x5a4d
  406ae2:	je     0x406af0
  406ae4:	xor    eax,eax
  406ae6:	add    rsp,0x28
  406aea:	pop    rbx
  406aeb:	pop    rsi
  406aec:	ret    
  406aed:	nop    DWORD PTR [rax]
  406af0:	mov    rsi,rcx
  406af3:	mov    rcx,rbx
  406af6:	call   0x4069a0
  406afb:	test   eax,eax
  406afd:	je     0x406ae4
  406aff:	sub    rsi,rbx
  406b02:	mov    rcx,rbx
  406b05:	mov    rdx,rsi
  406b08:	add    rsp,0x28
  406b0c:	pop    rbx
  406b0d:	pop    rsi
  406b0e:	jmp    0x4069e0
  406b13:	nop    DWORD PTR [rax]
  406b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406b20:	push   rbx
  406b21:	sub    rsp,0x20
  406b25:	mov    rbx,QWORD PTR [rip+0x4834]        # 0x40b360
  406b2c:	xor    eax,eax
  406b2e:	cmp    WORD PTR [rbx],0x5a4d
  406b33:	je     0x406b40
  406b35:	add    rsp,0x20
  406b39:	pop    rbx
  406b3a:	ret    
  406b3b:	nop    DWORD PTR [rax+rax*1+0x0]
  406b40:	mov    rcx,rbx
  406b43:	call   0x4069a0
  406b48:	test   eax,eax
  406b4a:	je     0x406b35
  406b4c:	movsxd rax,DWORD PTR [rbx+0x3c]
  406b50:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  406b55:	add    rsp,0x20
  406b59:	pop    rbx
  406b5a:	ret    
  406b5b:	nop    DWORD PTR [rax+rax*1+0x0]
  406b60:	push   rdi
  406b61:	push   rsi
  406b62:	push   rbx
  406b63:	sub    rsp,0x20
  406b67:	mov    rsi,QWORD PTR [rip+0x47f2]        # 0x40b360
  406b6e:	xor    edi,edi
  406b70:	mov    rbx,rcx
  406b73:	cmp    WORD PTR [rsi],0x5a4d
  406b78:	je     0x406b85
  406b7a:	mov    rax,rdi
  406b7d:	add    rsp,0x20
  406b81:	pop    rbx
  406b82:	pop    rsi
  406b83:	pop    rdi
  406b84:	ret    
  406b85:	mov    rcx,rsi
  406b88:	call   0x4069a0
  406b8d:	test   eax,eax
  406b8f:	je     0x406b7a
  406b91:	movsxd rax,DWORD PTR [rsi+0x3c]
  406b95:	add    rsi,rax
  406b98:	movzx  eax,WORD PTR [rsi+0x14]
  406b9c:	lea    rdx,[rsi+rax*1+0x18]
  406ba1:	movzx  eax,WORD PTR [rsi+0x6]
  406ba5:	test   eax,eax
  406ba7:	je     0x406b7a
  406ba9:	sub    eax,0x1
  406bac:	lea    rax,[rax+rax*4]
  406bb0:	lea    rax,[rdx+rax*8+0x28]
  406bb5:	test   BYTE PTR [rdx+0x27],0x20
  406bb9:	je     0x406bc4
  406bbb:	test   rbx,rbx
  406bbe:	je     0x406be0
  406bc0:	sub    rbx,0x1
  406bc4:	add    rdx,0x28
  406bc8:	cmp    rdx,rax
  406bcb:	jne    0x406bb5
  406bcd:	xor    edi,edi
  406bcf:	mov    rax,rdi
  406bd2:	add    rsp,0x20
  406bd6:	pop    rbx
  406bd7:	pop    rsi
  406bd8:	pop    rdi
  406bd9:	ret    
  406bda:	nop    WORD PTR [rax+rax*1+0x0]
  406be0:	mov    rdi,rdx
  406be3:	mov    rax,rdi
  406be6:	add    rsp,0x20
  406bea:	pop    rbx
  406beb:	pop    rsi
  406bec:	pop    rdi
  406bed:	ret    
  406bee:	xchg   ax,ax
  406bf0:	push   rsi
  406bf1:	push   rbx
  406bf2:	sub    rsp,0x28
  406bf6:	mov    rsi,QWORD PTR [rip+0x4763]        # 0x40b360
  406bfd:	xor    ebx,ebx
  406bff:	cmp    WORD PTR [rsi],0x5a4d
  406c04:	je     0x406c10
  406c06:	mov    rax,rbx
  406c09:	add    rsp,0x28
  406c0d:	pop    rbx
  406c0e:	pop    rsi
  406c0f:	ret    
  406c10:	mov    rcx,rsi
  406c13:	call   0x4069a0
  406c18:	test   eax,eax
  406c1a:	cmovne rbx,rsi
  406c1e:	mov    rax,rbx
  406c21:	add    rsp,0x28
  406c25:	pop    rbx
  406c26:	pop    rsi
  406c27:	ret    
  406c28:	nop    DWORD PTR [rax+rax*1+0x0]
  406c30:	push   rsi
  406c31:	push   rbx
  406c32:	sub    rsp,0x28
  406c36:	mov    rbx,QWORD PTR [rip+0x4723]        # 0x40b360
  406c3d:	xor    eax,eax
  406c3f:	cmp    WORD PTR [rbx],0x5a4d
  406c44:	je     0x406c50
  406c46:	add    rsp,0x28
  406c4a:	pop    rbx
  406c4b:	pop    rsi
  406c4c:	ret    
  406c4d:	nop    DWORD PTR [rax]
  406c50:	mov    rsi,rcx
  406c53:	mov    rcx,rbx
  406c56:	call   0x4069a0
  406c5b:	test   eax,eax
  406c5d:	je     0x406c46
  406c5f:	sub    rsi,rbx
  406c62:	mov    rcx,rbx
  406c65:	mov    rdx,rsi
  406c68:	call   0x4069e0
  406c6d:	test   rax,rax
  406c70:	je     0x406c81
  406c72:	mov    eax,DWORD PTR [rax+0x24]
  406c75:	not    eax
  406c77:	shr    eax,0x1f
  406c7a:	add    rsp,0x28
  406c7e:	pop    rbx
  406c7f:	pop    rsi
  406c80:	ret    
  406c81:	xor    eax,eax
  406c83:	jmp    0x406c46
  406c85:	nop
  406c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c90:	push   rbp
  406c91:	push   rdi
  406c92:	push   rsi
  406c93:	push   rbx
  406c94:	sub    rsp,0x28
  406c98:	mov    rdi,QWORD PTR [rip+0x46c1]        # 0x40b360
  406c9f:	xor    ebp,ebp
  406ca1:	mov    esi,ecx
  406ca3:	cmp    WORD PTR [rdi],0x5a4d
  406ca8:	je     0x406cc0
  406caa:	mov    rax,rbp
  406cad:	add    rsp,0x28
  406cb1:	pop    rbx
  406cb2:	pop    rsi
  406cb3:	pop    rdi
  406cb4:	pop    rbp
  406cb5:	ret    
  406cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406cc0:	mov    rcx,rdi
  406cc3:	call   0x4069a0
  406cc8:	test   eax,eax
  406cca:	je     0x406caa
  406ccc:	movsxd rax,DWORD PTR [rdi+0x3c]
  406cd0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  406cd7:	test   edx,edx
  406cd9:	je     0x406caa
  406cdb:	mov    ebx,edx
  406cdd:	mov    rcx,rdi
  406ce0:	mov    rdx,rbx
  406ce3:	call   0x4069e0
  406ce8:	test   rax,rax
  406ceb:	je     0x406caa
  406ced:	add    rbx,rdi
  406cf0:	mov    rdx,rbx
  406cf3:	jne    0x406d07
  406cf5:	jmp    0x406caa
  406cf7:	nop    WORD PTR [rax+rax*1+0x0]
  406d00:	sub    esi,0x1
  406d03:	add    rdx,0x14
  406d07:	mov    ecx,DWORD PTR [rdx+0x4]
  406d0a:	test   ecx,ecx
  406d0c:	jne    0x406d15
  406d0e:	mov    eax,DWORD PTR [rdx+0xc]
  406d11:	test   eax,eax
  406d13:	je     0x406d30
  406d15:	test   esi,esi
  406d17:	jg     0x406d00
  406d19:	mov    ebp,DWORD PTR [rdx+0xc]
  406d1c:	add    rbp,rdi
  406d1f:	mov    rax,rbp
  406d22:	add    rsp,0x28
  406d26:	pop    rbx
  406d27:	pop    rsi
  406d28:	pop    rdi
  406d29:	pop    rbp
  406d2a:	ret    
  406d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  406d30:	xor    ebp,ebp
  406d32:	mov    rax,rbp
  406d35:	add    rsp,0x28
  406d39:	pop    rbx
  406d3a:	pop    rsi
  406d3b:	pop    rdi
  406d3c:	pop    rbp
  406d3d:	ret    
  406d3e:	nop
  406d3f:	nop
  406d40:	push   rcx
  406d41:	push   rax
  406d42:	cmp    rax,0x1000
  406d48:	lea    rcx,[rsp+0x18]
  406d4d:	jb     0x406d68
  406d4f:	sub    rcx,0x1000
  406d56:	or     QWORD PTR [rcx],0x0
  406d5a:	sub    rax,0x1000
  406d60:	cmp    rax,0x1000
  406d66:	ja     0x406d4f
  406d68:	sub    rcx,rax
  406d6b:	or     QWORD PTR [rcx],0x0
  406d6f:	pop    rax
  406d70:	pop    rcx
  406d71:	ret    
  406d72:	nop
  406d73:	nop
  406d74:	nop
  406d75:	nop
  406d76:	nop
  406d77:	nop
  406d78:	nop
  406d79:	nop
  406d7a:	nop
  406d7b:	nop
  406d7c:	nop
  406d7d:	nop
  406d7e:	nop
  406d7f:	nop
  406d80:	push   r12
  406d82:	push   rbp
  406d83:	push   rdi
  406d84:	push   rsi
  406d85:	push   rbx
  406d86:	sub    rsp,0x60
  406d8a:	test   rcx,rcx
  406d8d:	mov    rsi,rcx
  406d90:	mov    rbx,rdx
  406d93:	je     0x406de2
  406d95:	movzx  ebp,BYTE PTR [rcx]
  406d98:	test   bpl,bpl
  406d9b:	je     0x406de2
  406d9d:	call   0x406ff8
  406da2:	cmp    eax,0x1
  406da5:	mov    rdi,rax
  406da8:	jle    0x406de2
  406daa:	lea    eax,[rax-0x2]
  406dad:	cmp    eax,0x1
  406db0:	jbe    0x406f40
  406db6:	cmp    bpl,0x2f
  406dba:	je     0x406e64
  406dc0:	cmp    bpl,0x5c
  406dc4:	je     0x406e64
  406dca:	movsxd rbp,edi
  406dcd:	movzx  eax,BYTE PTR [rsi+rbp*1-0x1]
  406dd2:	cmp    al,0x5c
  406dd4:	je     0x406ef0
  406dda:	cmp    al,0x2f
  406ddc:	je     0x406ef0
  406de2:	lea    rdx,[rsp+0x20]
  406de7:	mov    rcx,rsi
  406dea:	call   0x406fb8
  406def:	mov    ebp,eax
  406df1:	cmp    ebp,0xffffffff
  406df4:	je     0x406f70
  406dfa:	mov    eax,DWORD PTR [rsp+0x20]
  406dfe:	mov    DWORD PTR [rbx],eax
  406e00:	movzx  eax,WORD PTR [rsp+0x24]
  406e05:	mov    WORD PTR [rbx+0x4],ax
  406e09:	movzx  eax,WORD PTR [rsp+0x26]
  406e0e:	mov    WORD PTR [rbx+0x6],ax
  406e12:	movzx  eax,WORD PTR [rsp+0x28]
  406e17:	mov    WORD PTR [rbx+0x8],ax
  406e1b:	movzx  eax,WORD PTR [rsp+0x2a]
  406e20:	mov    WORD PTR [rbx+0xa],ax
  406e24:	movzx  eax,WORD PTR [rsp+0x2c]
  406e29:	mov    WORD PTR [rbx+0xc],ax
  406e2d:	mov    eax,DWORD PTR [rsp+0x30]
  406e31:	mov    DWORD PTR [rbx+0x10],eax
  406e34:	mov    rax,QWORD PTR [rsp+0x38]
  406e39:	mov    DWORD PTR [rbx+0x14],eax
  406e3c:	mov    rax,QWORD PTR [rsp+0x40]
  406e41:	mov    QWORD PTR [rbx+0x18],rax
  406e45:	mov    rax,QWORD PTR [rsp+0x48]
  406e4a:	mov    QWORD PTR [rbx+0x20],rax
  406e4e:	mov    rax,QWORD PTR [rsp+0x50]
  406e53:	mov    QWORD PTR [rbx+0x28],rax
  406e57:	mov    eax,ebp
  406e59:	add    rsp,0x60
  406e5d:	pop    rbx
  406e5e:	pop    rsi
  406e5f:	pop    rdi
  406e60:	pop    rbp
  406e61:	pop    r12
  406e63:	ret    
  406e64:	movzx  eax,BYTE PTR [rsi+0x1]
  406e68:	cmp    al,0x2f
  406e6a:	je     0x406e74
  406e6c:	cmp    al,0x5c
  406e6e:	jne    0x406dca
  406e74:	movzx  ecx,BYTE PTR [rsi+0x2]
  406e78:	lea    rdx,[rsi+0x2]
  406e7c:	cmp    cl,0x5c
  406e7f:	jne    0x406ea0
  406e81:	jmp    0x406f50
  406e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e90:	add    rdx,0x1
  406e94:	movzx  ecx,BYTE PTR [rdx]
  406e97:	cmp    cl,0x5c
  406e9a:	je     0x406f50
  406ea0:	test   cl,cl
  406ea2:	je     0x406f50
  406ea8:	cmp    cl,0x2f
  406eab:	jne    0x406e90
  406ead:	add    rdx,0x1
  406eb1:	movzx  eax,BYTE PTR [rdx]
  406eb4:	test   al,al
  406eb6:	je     0x406de2
  406ebc:	cmp    al,0x5c
  406ebe:	je     0x406ee1
  406ec0:	cmp    al,0x2f
  406ec2:	je     0x406ee1
  406ec4:	add    rdx,0x1
  406ec8:	movzx  ecx,BYTE PTR [rdx]
  406ecb:	cmp    cl,0x5c
  406ece:	je     0x406f60
  406ed4:	test   cl,cl
  406ed6:	je     0x406f60
  406edc:	cmp    cl,0x2f
  406edf:	jne    0x406ec4
  406ee1:	cmp    BYTE PTR [rdx+0x1],0x0
  406ee5:	jne    0x406dca
  406eeb:	jmp    0x406de2
  406ef0:	mov    rcx,rbp
  406ef3:	call   0x407060
  406ef8:	lea    r8d,[rdi-0x1]
  406efc:	mov    rdx,rsi
  406eff:	mov    rcx,rax
  406f02:	mov    r12,rax
  406f05:	movsxd r8,r8d
  406f08:	call   0x407050
  406f0d:	lea    rdx,[rsp+0x20]
  406f12:	mov    rcx,r12
  406f15:	mov    BYTE PTR [r12+rbp*1-0x1],0x0
  406f1b:	call   0x406fb8
  406f20:	cmp    rsi,r12
  406f23:	mov    ebp,eax
  406f25:	je     0x406df1
  406f2b:	mov    rcx,r12
  406f2e:	call   0x407090
  406f33:	jmp    0x406df1
  406f38:	nop    DWORD PTR [rax+rax*1+0x0]
  406f40:	cmp    BYTE PTR [rsi+0x1],0x3a
  406f44:	jne    0x406db6
  406f4a:	jmp    0x406de2
  406f4f:	nop
  406f50:	test   cl,cl
  406f52:	je     0x406eb1
  406f58:	jmp    0x406ead
  406f5d:	nop    DWORD PTR [rax]
  406f60:	test   cl,cl
  406f62:	je     0x406de2
  406f68:	jmp    0x406ee1
  406f6d:	nop    DWORD PTR [rax]
  406f70:	lea    rdi,[rbx+0x8]
  406f74:	mov    QWORD PTR [rbx],0x0
  406f7b:	mov    QWORD PTR [rbx+0x28],0x0
  406f83:	xor    eax,eax
  406f85:	and    rdi,0xfffffffffffffff8
  406f89:	sub    rbx,rdi
  406f8c:	lea    ecx,[rbx+0x30]
  406f8f:	shr    ecx,0x3
  406f92:	rep stos QWORD PTR es:[rdi],rax
  406f95:	jmp    0x406e57
  406f9a:	nop
  406f9b:	nop
  406f9c:	nop
  406f9d:	nop
  406f9e:	nop
  406f9f:	nop
  406fa0:	jmp    QWORD PTR [rip+0x877a]        # 0x40f720
  406fa6:	nop
  406fa7:	nop
  406fa8:	jmp    QWORD PTR [rip+0x876a]        # 0x40f718
  406fae:	nop
  406faf:	nop
  406fb0:	jmp    QWORD PTR [rip+0x875a]        # 0x40f710
  406fb6:	nop
  406fb7:	nop
  406fb8:	jmp    QWORD PTR [rip+0x874a]        # 0x40f708
  406fbe:	nop
  406fbf:	nop
  406fc0:	jmp    QWORD PTR [rip+0x873a]        # 0x40f700
  406fc6:	nop
  406fc7:	nop
  406fc8:	jmp    QWORD PTR [rip+0x872a]        # 0x40f6f8
  406fce:	nop
  406fcf:	nop
  406fd0:	jmp    QWORD PTR [rip+0x871a]        # 0x40f6f0
  406fd6:	nop
  406fd7:	nop
  406fd8:	jmp    QWORD PTR [rip+0x870a]        # 0x40f6e8
  406fde:	nop
  406fdf:	nop
  406fe0:	jmp    QWORD PTR [rip+0x86fa]        # 0x40f6e0
  406fe6:	nop
  406fe7:	nop
  406fe8:	jmp    QWORD PTR [rip+0x86ea]        # 0x40f6d8
  406fee:	nop
  406fef:	nop
  406ff0:	jmp    QWORD PTR [rip+0x86da]        # 0x40f6d0
  406ff6:	nop
  406ff7:	nop
  406ff8:	jmp    QWORD PTR [rip+0x86ca]        # 0x40f6c8
  406ffe:	nop
  406fff:	nop
  407000:	jmp    QWORD PTR [rip+0x86ba]        # 0x40f6c0
  407006:	nop
  407007:	nop
  407008:	jmp    QWORD PTR [rip+0x86aa]        # 0x40f6b8
  40700e:	nop
  40700f:	nop
  407010:	jmp    QWORD PTR [rip+0x869a]        # 0x40f6b0
  407016:	nop
  407017:	nop
  407018:	jmp    QWORD PTR [rip+0x868a]        # 0x40f6a8
  40701e:	nop
  40701f:	nop
  407020:	jmp    QWORD PTR [rip+0x867a]        # 0x40f6a0
  407026:	nop
  407027:	nop
  407028:	jmp    QWORD PTR [rip+0x866a]        # 0x40f698
  40702e:	nop
  40702f:	nop
  407030:	jmp    QWORD PTR [rip+0x865a]        # 0x40f690
  407036:	nop
  407037:	nop
  407038:	jmp    QWORD PTR [rip+0x864a]        # 0x40f688
  40703e:	nop
  40703f:	nop
  407040:	jmp    QWORD PTR [rip+0x863a]        # 0x40f680
  407046:	nop
  407047:	nop
  407048:	jmp    QWORD PTR [rip+0x862a]        # 0x40f678
  40704e:	nop
  40704f:	nop
  407050:	jmp    QWORD PTR [rip+0x861a]        # 0x40f670
  407056:	nop
  407057:	nop
  407058:	jmp    QWORD PTR [rip+0x860a]        # 0x40f668
  40705e:	nop
  40705f:	nop
  407060:	jmp    QWORD PTR [rip+0x85fa]        # 0x40f660
  407066:	nop
  407067:	nop
  407068:	jmp    QWORD PTR [rip+0x85ea]        # 0x40f658
  40706e:	nop
  40706f:	nop
  407070:	jmp    QWORD PTR [rip+0x85da]        # 0x40f650
  407076:	nop
  407077:	nop
  407078:	jmp    QWORD PTR [rip+0x85ca]        # 0x40f648
  40707e:	nop
  40707f:	nop
  407080:	jmp    QWORD PTR [rip+0x85ba]        # 0x40f640
  407086:	nop
  407087:	nop
  407088:	jmp    QWORD PTR [rip+0x85aa]        # 0x40f638
  40708e:	nop
  40708f:	nop
  407090:	jmp    QWORD PTR [rip+0x859a]        # 0x40f630
  407096:	nop
  407097:	nop
  407098:	jmp    QWORD PTR [rip+0x858a]        # 0x40f628
  40709e:	nop
  40709f:	nop
  4070a0:	jmp    QWORD PTR [rip+0x857a]        # 0x40f620
  4070a6:	nop
  4070a7:	nop
  4070a8:	jmp    QWORD PTR [rip+0x856a]        # 0x40f618
  4070ae:	nop
  4070af:	nop
  4070b0:	jmp    QWORD PTR [rip+0x855a]        # 0x40f610
  4070b6:	nop
  4070b7:	nop
  4070b8:	jmp    QWORD PTR [rip+0x854a]        # 0x40f608
  4070be:	nop
  4070bf:	nop
  4070c0:	jmp    QWORD PTR [rip+0x853a]        # 0x40f600
  4070c6:	nop
  4070c7:	nop
  4070c8:	jmp    QWORD PTR [rip+0x852a]        # 0x40f5f8
  4070ce:	nop
  4070cf:	nop
  4070d0:	jmp    QWORD PTR [rip+0x851a]        # 0x40f5f0
  4070d6:	nop
  4070d7:	nop
  4070d8:	jmp    QWORD PTR [rip+0x850a]        # 0x40f5e8
  4070de:	nop
  4070df:	nop
  4070e0:	jmp    QWORD PTR [rip+0x84fa]        # 0x40f5e0
  4070e6:	nop
  4070e7:	nop
  4070e8:	jmp    QWORD PTR [rip+0x84ea]        # 0x40f5d8
  4070ee:	nop
  4070ef:	nop
  4070f0:	jmp    QWORD PTR [rip+0x84d2]        # 0x40f5c8
  4070f6:	nop
  4070f7:	nop
  4070f8:	jmp    QWORD PTR [rip+0x84c2]        # 0x40f5c0
  4070fe:	nop
  4070ff:	nop
  407100:	jmp    QWORD PTR [rip+0x84b2]        # 0x40f5b8
  407106:	nop
  407107:	nop
  407108:	jmp    QWORD PTR [rip+0x849a]        # 0x40f5a8
  40710e:	nop
  40710f:	nop
  407110:	jmp    QWORD PTR [rip+0x848a]        # 0x40f5a0
  407116:	nop
  407117:	nop
  407118:	jmp    QWORD PTR [rip+0x847a]        # 0x40f598
  40711e:	nop
  40711f:	nop
  407120:	jmp    QWORD PTR [rip+0x846a]        # 0x40f590
  407126:	nop
  407127:	nop
  407128:	jmp    QWORD PTR [rip+0x8452]        # 0x40f580
  40712e:	nop
  40712f:	nop
  407130:	jmp    QWORD PTR [rip+0x8442]        # 0x40f578
  407136:	nop
  407137:	nop
  407138:	jmp    QWORD PTR [rip+0x8432]        # 0x40f570
  40713e:	nop
  40713f:	nop
  407140:	mov    rax,QWORD PTR [rip+0x7d69]        # 0x40eeb0
  407147:	ret    
  407148:	nop    DWORD PTR [rax+rax*1+0x0]
  407150:	mov    rax,rcx
  407153:	xchg   QWORD PTR [rip+0x7d56],rax        # 0x40eeb0
  40715a:	ret    
  40715b:	nop
  40715c:	nop
  40715d:	nop
  40715e:	nop
  40715f:	nop
  407160:	jmp    QWORD PTR [rip+0x8292]        # 0x40f3f8
  407166:	nop
  407167:	nop
  407168:	jmp    QWORD PTR [rip+0x8282]        # 0x40f3f0
  40716e:	nop
  40716f:	nop
  407170:	jmp    QWORD PTR [rip+0x8272]        # 0x40f3e8
  407176:	nop
  407177:	nop
  407178:	jmp    QWORD PTR [rip+0x8262]        # 0x40f3e0
  40717e:	nop
  40717f:	nop
  407180:	jmp    QWORD PTR [rip+0x8252]        # 0x40f3d8
  407186:	nop
  407187:	nop
  407188:	jmp    QWORD PTR [rip+0x8242]        # 0x40f3d0
  40718e:	nop
  40718f:	nop
  407190:	jmp    QWORD PTR [rip+0x8232]        # 0x40f3c8
  407196:	nop
  407197:	nop
  407198:	jmp    QWORD PTR [rip+0x8222]        # 0x40f3c0
  40719e:	nop
  40719f:	nop
  4071a0:	jmp    QWORD PTR [rip+0x83ba]        # 0x40f560
  4071a6:	nop
  4071a7:	nop
  4071a8:	jmp    QWORD PTR [rip+0x83aa]        # 0x40f558
  4071ae:	nop
  4071af:	nop
  4071b0:	jmp    QWORD PTR [rip+0x839a]        # 0x40f550
  4071b6:	nop
  4071b7:	nop
  4071b8:	jmp    QWORD PTR [rip+0x838a]        # 0x40f548
  4071be:	nop
  4071bf:	nop
  4071c0:	jmp    QWORD PTR [rip+0x837a]        # 0x40f540
  4071c6:	nop
  4071c7:	nop
  4071c8:	jmp    QWORD PTR [rip+0x836a]        # 0x40f538
  4071ce:	nop
  4071cf:	nop
  4071d0:	jmp    QWORD PTR [rip+0x835a]        # 0x40f530
  4071d6:	nop
  4071d7:	nop
  4071d8:	jmp    QWORD PTR [rip+0x834a]        # 0x40f528
  4071de:	nop
  4071df:	nop
  4071e0:	jmp    QWORD PTR [rip+0x833a]        # 0x40f520
  4071e6:	nop
  4071e7:	nop
  4071e8:	jmp    QWORD PTR [rip+0x832a]        # 0x40f518
  4071ee:	nop
  4071ef:	nop
  4071f0:	jmp    QWORD PTR [rip+0x831a]        # 0x40f510
  4071f6:	nop
  4071f7:	nop
  4071f8:	jmp    QWORD PTR [rip+0x830a]        # 0x40f508
  4071fe:	nop
  4071ff:	nop
  407200:	jmp    QWORD PTR [rip+0x82fa]        # 0x40f500
  407206:	nop
  407207:	nop
  407208:	jmp    QWORD PTR [rip+0x82ea]        # 0x40f4f8
  40720e:	nop
  40720f:	nop
  407210:	jmp    QWORD PTR [rip+0x82da]        # 0x40f4f0
  407216:	nop
  407217:	nop
  407218:	jmp    QWORD PTR [rip+0x82ca]        # 0x40f4e8
  40721e:	nop
  40721f:	nop
  407220:	jmp    QWORD PTR [rip+0x82ba]        # 0x40f4e0
  407226:	nop
  407227:	nop
  407228:	jmp    QWORD PTR [rip+0x82aa]        # 0x40f4d8
  40722e:	nop
  40722f:	nop
  407230:	jmp    QWORD PTR [rip+0x829a]        # 0x40f4d0
  407236:	nop
  407237:	nop
  407238:	jmp    QWORD PTR [rip+0x828a]        # 0x40f4c8
  40723e:	nop
  40723f:	nop
  407240:	jmp    QWORD PTR [rip+0x827a]        # 0x40f4c0
  407246:	nop
  407247:	nop
  407248:	jmp    QWORD PTR [rip+0x826a]        # 0x40f4b8
  40724e:	nop
  40724f:	nop
  407250:	jmp    QWORD PTR [rip+0x825a]        # 0x40f4b0
  407256:	nop
  407257:	nop
  407258:	jmp    QWORD PTR [rip+0x824a]        # 0x40f4a8
  40725e:	nop
  40725f:	nop
  407260:	jmp    QWORD PTR [rip+0x823a]        # 0x40f4a0
  407266:	nop
  407267:	nop
  407268:	jmp    QWORD PTR [rip+0x822a]        # 0x40f498
  40726e:	nop
  40726f:	nop
  407270:	jmp    QWORD PTR [rip+0x821a]        # 0x40f490
  407276:	nop
  407277:	nop
  407278:	jmp    QWORD PTR [rip+0x820a]        # 0x40f488
  40727e:	nop
  40727f:	nop
  407280:	jmp    QWORD PTR [rip+0x81fa]        # 0x40f480
  407286:	nop
  407287:	nop
  407288:	jmp    QWORD PTR [rip+0x81ea]        # 0x40f478
  40728e:	nop
  40728f:	nop
  407290:	jmp    QWORD PTR [rip+0x81da]        # 0x40f470
  407296:	nop
  407297:	nop
  407298:	jmp    QWORD PTR [rip+0x81ca]        # 0x40f468
  40729e:	nop
  40729f:	nop
  4072a0:	jmp    QWORD PTR [rip+0x81ba]        # 0x40f460
  4072a6:	nop
  4072a7:	nop
  4072a8:	jmp    QWORD PTR [rip+0x81aa]        # 0x40f458
  4072ae:	nop
  4072af:	nop
  4072b0:	jmp    QWORD PTR [rip+0x819a]        # 0x40f450
  4072b6:	nop
  4072b7:	nop
  4072b8:	jmp    QWORD PTR [rip+0x818a]        # 0x40f448
  4072be:	nop
  4072bf:	nop
  4072c0:	jmp    QWORD PTR [rip+0x817a]        # 0x40f440
  4072c6:	nop
  4072c7:	nop
  4072c8:	jmp    QWORD PTR [rip+0x816a]        # 0x40f438
  4072ce:	nop
  4072cf:	nop
  4072d0:	jmp    QWORD PTR [rip+0x815a]        # 0x40f430
  4072d6:	nop
  4072d7:	nop
  4072d8:	jmp    QWORD PTR [rip+0x814a]        # 0x40f428
  4072de:	nop
  4072df:	nop
  4072e0:	jmp    QWORD PTR [rip+0x813a]        # 0x40f420
  4072e6:	nop
  4072e7:	nop
  4072e8:	jmp    QWORD PTR [rip+0x812a]        # 0x40f418
  4072ee:	nop
  4072ef:	nop
  4072f0:	jmp    QWORD PTR [rip+0x811a]        # 0x40f410
  4072f6:	nop
  4072f7:	nop
  4072f8:	jmp    QWORD PTR [rip+0x810a]        # 0x40f408
  4072fe:	nop
  4072ff:	nop
  407300:	push   r13
  407302:	push   r12
  407304:	push   rbp
  407305:	push   rdi
  407306:	push   rsi
  407307:	push   rbx
  407308:	sub    rsp,0x28
  40730c:	mov    r13,rdx
  40730f:	mov    ebx,ecx
  407311:	call   0x405990
  407316:	mov    rcx,QWORD PTR [r13+0x0]
  40731a:	lea    rdx,[rip+0x22d5]        # 0x4095f6
  407321:	call   0x4024c0
  407326:	mov    rcx,QWORD PTR [r13+0x0]
  40732a:	call   0x404ff0
  40732f:	cmp    ebx,0x1
  407332:	mov    QWORD PTR [rip+0x7107],rax        # 0x40e440
  407339:	jle    0x40745d
  40733f:	lea    edx,[rbx-0x2]
  407342:	lea    rbp,[r13+0x8]
  407346:	mov    ebx,0x7
  40734b:	mov    r11d,0x3
  407351:	lea    r12,[r13+rdx*8+0x10]
  407356:	lea    rdx,[rip+0x22a7]        # 0x409604
  40735d:	mov    r8,rbp
  407360:	mov    r9,QWORD PTR [r8]
  407363:	mov    rdi,rdx
  407366:	mov    rcx,rbx
  407369:	mov    rsi,r9
  40736c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40736e:	je     0x407495
  407374:	lea    rdi,[rip+0x2290]        # 0x40960b
  40737b:	mov    rsi,r9
  40737e:	mov    rcx,r11
  407381:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407383:	je     0x407495
  407389:	add    r8,0x8
  40738d:	cmp    r8,r12
  407390:	jne    0x407360
  407392:	mov    rcx,QWORD PTR [r13+0x0]
  407396:	lea    rdx,[rip+0x6ca3]        # 0x40e040
  40739d:	call   0x401ca0
  4073a2:	test   eax,eax
  4073a4:	jne    0x40760e
  4073aa:	lea    rdi,[rip+0x2bcf]        # 0x409f80
  4073b1:	mov    r13,QWORD PTR [rbp+0x0]
  4073b5:	lea    rbx,[rip+0x2bd4]        # 0x409f90
  4073bc:	lea    rdx,[rip+0x222a]        # 0x4095ed
  4073c3:	xor    esi,esi
  4073c5:	jmp    0x4073e0
  4073c7:	nop    WORD PTR [rax+rax*1+0x0]
  4073d0:	add    rbx,0x10
  4073d4:	mov    rdx,QWORD PTR [rbx-0x10]
  4073d8:	add    esi,0x1
  4073db:	test   rdx,rdx
  4073de:	je     0x407411
  4073e0:	mov    rcx,r13
  4073e3:	call   0x407010
  4073e8:	test   eax,eax
  4073ea:	jne    0x4073d0
  4073ec:	movsxd rsi,esi
  4073ef:	add    rbp,0x8
  4073f3:	xor    ecx,ecx
  4073f5:	shl    rsi,0x4
  4073f9:	call   QWORD PTR [rdi+rsi*1+0x8]
  4073fd:	cmp    rbp,r12
  407400:	jne    0x4073b1
  407402:	xor    eax,eax
  407404:	add    rsp,0x28
  407408:	pop    rbx
  407409:	pop    rsi
  40740a:	pop    rdi
  40740b:	pop    rbp
  40740c:	pop    r12
  40740e:	pop    r13
  407410:	ret    
  407411:	mov    rsi,QWORD PTR [rip+0x7028]        # 0x40e440
  407418:	mov    rbx,QWORD PTR [rip+0x8171]        # 0x40f590
  40741f:	call   rbx
  407421:	lea    rdx,[rip+0x29eb]        # 0x409e13
  407428:	lea    rcx,[rax+0x60]
  40742c:	mov    r9,r13
  40742f:	mov    r8,rsi
  407432:	call   0x4040e0
  407437:	mov    rsi,QWORD PTR [rip+0x7002]        # 0x40e440
  40743e:	call   rbx
  407440:	lea    rdx,[rip+0x29e9]        # 0x409e30
  407447:	lea    rcx,[rax+0x60]
  40744b:	mov    r8,rsi
  40744e:	call   0x4040e0
  407453:	mov    ecx,0x1
  407458:	call   0x4070a8
  40745d:	mov    rcx,QWORD PTR [r13+0x0]
  407461:	lea    rdx,[rip+0x6bd8]        # 0x40e040
  407468:	call   0x401ca0
  40746d:	test   eax,eax
  40746f:	jne    0x40760e
  407475:	lea    rbx,[rip+0x2b04]        # 0x409f80
  40747c:	add    rbx,0x10
  407480:	cmp    QWORD PTR [rbx-0x10],0x0
  407485:	je     0x407638
  40748b:	mov    ecx,0x1
  407490:	call   QWORD PTR [rbx-0x8]
  407493:	jmp    0x40747c
  407495:	lea    rcx,[rip+0x2174]        # 0x409610
  40749c:	mov    rdx,rax
  40749f:	call   0x404110
  4074a4:	lea    rcx,[rip+0x21ab]        # 0x409656
  4074ab:	call   0x404110
  4074b0:	mov    rdx,QWORD PTR [rip+0x6f89]        # 0x40e440
  4074b7:	lea    rcx,[rip+0x21a0]        # 0x40965e
  4074be:	call   0x404110
  4074c3:	lea    rcx,[rip+0x21a7]        # 0x409671
  4074ca:	call   0x404110
  4074cf:	lea    rcx,[rip+0x21aa]        # 0x409680
  4074d6:	call   0x404110
  4074db:	lea    rcx,[rip+0x21de]        # 0x4096c0
  4074e2:	call   0x404110
  4074e7:	lea    rcx,[rip+0x2212]        # 0x409700
  4074ee:	call   0x404110
  4074f3:	lea    rcx,[rip+0x224e]        # 0x409748
  4074fa:	call   0x404110
  4074ff:	lea    rcx,[rip+0x22b2]        # 0x4097b8
  407506:	call   0x404110
  40750b:	lea    rcx,[rip+0x22e6]        # 0x4097f8
  407512:	call   0x404110
  407517:	lea    rcx,[rip+0x2322]        # 0x409840
  40751e:	call   0x404110
  407523:	lea    rcx,[rip+0x2356]        # 0x409880
  40752a:	call   0x404110
  40752f:	lea    rcx,[rip+0x2392]        # 0x4098c8
  407536:	call   0x404110
  40753b:	lea    rcx,[rip+0x23c6]        # 0x409908
  407542:	call   0x404110
  407547:	lea    rcx,[rip+0x23f2]        # 0x409940
  40754e:	call   0x404110
  407553:	lea    rcx,[rip+0x243e]        # 0x409998
  40755a:	call   0x404110
  40755f:	lea    rcx,[rip+0x2482]        # 0x4099e8
  407566:	call   0x404110
  40756b:	lea    rcx,[rip+0x24b6]        # 0x409a28
  407572:	call   0x404110
  407577:	lea    rcx,[rip+0x2522]        # 0x409aa0
  40757e:	call   0x404110
  407583:	lea    rcx,[rip+0x255e]        # 0x409ae8
  40758a:	call   0x404110
  40758f:	lea    rcx,[rip+0x25a2]        # 0x409b38
  407596:	call   0x404110
  40759b:	lea    rcx,[rip+0x25e6]        # 0x409b88
  4075a2:	call   0x404110
  4075a7:	lea    rcx,[rip+0x262a]        # 0x409bd8
  4075ae:	call   0x404110
  4075b3:	lea    rcx,[rip+0x266e]        # 0x409c28
  4075ba:	call   0x404110
  4075bf:	lea    rcx,[rip+0x26b2]        # 0x409c78
  4075c6:	call   0x404110
  4075cb:	lea    rcx,[rip+0x26f6]        # 0x409cc8
  4075d2:	call   0x404110
  4075d7:	lea    rcx,[rip+0x2732]        # 0x409d10
  4075de:	call   0x404110
  4075e3:	lea    rcx,[rip+0x275e]        # 0x409d48
  4075ea:	call   0x404110
  4075ef:	lea    rcx,[rip+0x278a]        # 0x409d80
  4075f6:	call   0x404110
  4075fb:	lea    rcx,[rip+0x27b6]        # 0x409db8
  407602:	call   0x404110
  407607:	xor    ecx,ecx
  407609:	call   0x4070a8
  40760e:	mov    rbx,QWORD PTR [rip+0x6e2b]        # 0x40e440
  407615:	call   QWORD PTR [rip+0x7f75]        # 0x40f590
  40761b:	lea    rdx,[rip+0x27c6]        # 0x409de8
  407622:	lea    rcx,[rax+0x60]
  407626:	mov    r8,rbx
  407629:	call   0x4040e0
  40762e:	mov    ecx,0x1
  407633:	call   0x4070a8
  407638:	xor    ecx,ecx
  40763a:	call   0x4070a8
  40763f:	nop
  407640:	(bad)  
  407641:	(bad)  
  407642:	(bad)  
  407643:	(bad)  
  407644:	(bad)  
  407645:	(bad)  
  407646:	(bad)  
  407647:	inc    DWORD PTR [rax]
  407649:	add    BYTE PTR [rax],al
  40764b:	add    BYTE PTR [rax],al
  40764d:	add    BYTE PTR [rax],al
  40764f:	add    bh,bh
  407651:	(bad)  
  407652:	(bad)  
  407653:	(bad)  
  407654:	(bad)  
  407655:	(bad)  
  407656:	(bad)  
  407657:	inc    DWORD PTR [rax]
  407659:	add    BYTE PTR [rax],al
  40765b:	add    BYTE PTR [rax],al
  40765d:	add    BYTE PTR [rax],al
	...
