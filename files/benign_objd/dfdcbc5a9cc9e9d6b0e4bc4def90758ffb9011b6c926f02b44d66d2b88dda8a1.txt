
dfdcbc5a9cc9e9d6b0e4bc4def90758ffb9011b6c926f02b44d66d2b88dda8a1.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x47f5]        # 405810 <_head_lib64_libkernel32_a-0x37f0>
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x47f6]        # 405820 <_head_lib64_libkernel32_a-0x37e0>
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x47f9]        # 405830 <_head_lib64_libkernel32_a-0x37d0>
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x47bc]        # 405800 <_head_lib64_libkernel32_a-0x3800>
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x464f]        # 4056a0 <_head_lib64_libkernel32_a-0x3960>
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     4010d0 <_head_lib64_libkernel32_a-0x7f30>
  401058:	mov    rax,QWORD PTR [rip+0x4791]        # 4057f0 <_head_lib64_libkernel32_a-0x3810>
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 408008 <_head_lib64_libkernel32_a-0xff8>
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     4010c2 <_head_lib64_libkernel32_a-0x7f3e>
  40106b:	mov    ecx,0x2
  401070:	call   403198 <_head_lib64_libkernel32_a-0x5e68>
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   402160 <_head_lib64_libkernel32_a-0x6ea0>
  401081:	mov    rdx,QWORD PTR [rip+0x46c8]        # 405750 <_head_lib64_libkernel32_a-0x38b0>
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x46ae]        # 405740 <_head_lib64_libkernel32_a-0x38c0>
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x4714]        # 4057b0 <_head_lib64_libkernel32_a-0x3850>
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x464b]        # 4056f0 <_head_lib64_libkernel32_a-0x3910>
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   401d40 <_head_lib64_libkernel32_a-0x72c0>
  4010af:	mov    rax,QWORD PTR [rip+0x459a]        # 405650 <_head_lib64_libkernel32_a-0x39b0>
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     401120 <_head_lib64_libkernel32_a-0x7ee0>
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   403198 <_head_lib64_libkernel32_a-0x5e68>
  4010cc:	jmp    401075 <_head_lib64_libkernel32_a-0x7f8b>
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    401058 <_head_lib64_libkernel32_a-0x7fa8>
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     401133 <_head_lib64_libkernel32_a-0x7ecd>
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    401058 <_head_lib64_libkernel32_a-0x7fa8>
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    401058 <_head_lib64_libkernel32_a-0x7fa8>
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    401058 <_head_lib64_libkernel32_a-0x7fa8>
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xf19]        # 402040 <_head_lib64_libkernel32_a-0x6fc0>
  401127:	call   402030 <_head_lib64_libkernel32_a-0x6fd0>
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    401058 <_head_lib64_libkernel32_a-0x7fa8>
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    401058 <_head_lib64_libkernel32_a-0x7fa8>
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4675]        # 4057e0 <_head_lib64_libkernel32_a-0x3820>
  40116b:	lea    r8,[rip+0x6ea6]        # 408018 <_head_lib64_libkernel32_a-0xfe8>
  401172:	lea    rdx,[rip+0x6ea7]        # 408020 <_head_lib64_libkernel32_a-0xfe0>
  401179:	lea    rcx,[rip+0x6ea8]        # 408028 <_head_lib64_libkernel32_a-0xfd8>
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 408000 <_head_lib64_libkernel32_a-0x1000>
  401188:	lea    rax,[rip+0x6e71]        # 408000 <_head_lib64_libkernel32_a-0x1000>
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x4605]        # 4057a0 <_head_lib64_libkernel32_a-0x3860>
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   4031b0 <_head_lib64_libkernel32_a-0x5e50>
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 408010 <_head_lib64_libkernel32_a-0xff0>
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x462a]        # 4057f0 <_head_lib64_libkernel32_a-0x3810>
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    401490 <_head_lib64_libkernel32_a-0x7b70>
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x452b]        # 405720 <_head_lib64_libkernel32_a-0x38e0>
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x81f6]        # 4093f8 <__imp_Sleep>
  401202:	jmp    401215 <_head_lib64_libkernel32_a-0x7deb>
  401204:	cmp    rsi,rax
  401207:	je     401430 <_head_lib64_libkernel32_a-0x7bd0>
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    401204 <_head_lib64_libkernel32_a-0x7dfc>
  401222:	mov    rsi,QWORD PTR [rip+0x4507]        # 405730 <_head_lib64_libkernel32_a-0x38d0>
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     401447 <_head_lib64_libkernel32_a-0x7bb9>
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     4014a0 <_head_lib64_libkernel32_a-0x7b60>
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 408004 <_head_lib64_libkernel32_a-0xffc>
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     40145c <_head_lib64_libkernel32_a-0x7ba4>
  401255:	test   edi,edi
  401257:	je     401480 <_head_lib64_libkernel32_a-0x7b80>
  40125d:	mov    rax,QWORD PTR [rip+0x442c]        # 405690 <_head_lib64_libkernel32_a-0x3970>
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     401278 <_head_lib64_libkernel32_a-0x7d88>
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   402350 <_head_lib64_libkernel32_a-0x6cb0>
  40127d:	lea    rcx,[rip+0x166c]        # 4028f0 <_head_lib64_libkernel32_a-0x6710>
  401284:	call   QWORD PTR [rip+0x8166]        # 4093f0 <__imp_SetUnhandledExceptionFilter>
  40128a:	mov    rdx,QWORD PTR [rip+0x447f]        # 405710 <_head_lib64_libkernel32_a-0x38f0>
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   402800 <_head_lib64_libkernel32_a-0x6800>
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 401000 <_head_lib64_libkernel32_a-0x8000>
  4012a0:	call   4031e0 <_head_lib64_libkernel32_a-0x5e20>
  4012a5:	call   402140 <_head_lib64_libkernel32_a-0x6ec0>
  4012aa:	mov    rax,QWORD PTR [rip+0x43ef]        # 4056a0 <_head_lib64_libkernel32_a-0x3960>
  4012b1:	mov    QWORD PTR [rip+0x7790],rax        # 408a48 <_head_lib64_libkernel32_a-0x5b8>
  4012b8:	mov    rax,QWORD PTR [rip+0x4421]        # 4056e0 <_head_lib64_libkernel32_a-0x3920>
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     401317 <_head_lib64_libkernel32_a-0x7ce9>
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    4012e2 <_head_lib64_libkernel32_a-0x7d1e>
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     401310 <_head_lib64_libkernel32_a-0x7cf0>
  4012d4:	and    ecx,0x1
  4012d7:	je     401304 <_head_lib64_libkernel32_a-0x7cfc>
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    4012d0 <_head_lib64_libkernel32_a-0x7d30>
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    4012de <_head_lib64_libkernel32_a-0x7d22>
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     401310 <_head_lib64_libkernel32_a-0x7cf0>
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    401300 <_head_lib64_libkernel32_a-0x7d00>
  401310:	mov    QWORD PTR [rip+0x7729],rax        # 408a40 <_head_lib64_libkernel32_a-0x5c0>
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     401336 <_head_lib64_libkernel32_a-0x7cca>
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    401421 <_head_lib64_libkernel32_a-0x7bdf>
  401330:	mov    DWORD PTR [rip+0x2cca],eax        # 404000 <_head_lib64_libkernel32_a-0x5000>
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 408028 <_head_lib64_libkernel32_a-0xfd8>
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   403128 <_head_lib64_libkernel32_a-0x5ed8>
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 408020 <_head_lib64_libkernel32_a-0xfe0>
  40135e:	jle    4014be <_head_lib64_libkernel32_a-0x7b42>
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   403110 <_head_lib64_libkernel32_a-0x5ef0>
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   403128 <_head_lib64_libkernel32_a-0x5ed8>
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   403120 <_head_lib64_libkernel32_a-0x5ee0>
  40139d:	cmp    r12d,ebx
  4013a0:	jg     401370 <_head_lib64_libkernel32_a-0x7c90>
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 408020 <_head_lib64_libkernel32_a-0xfe0>
  4013b6:	call   401d10 <_head_lib64_libkernel32_a-0x72f0>
  4013bb:	mov    rax,QWORD PTR [rip+0x430e]        # 4056d0 <_head_lib64_libkernel32_a-0x3930>
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 408018 <_head_lib64_libkernel32_a-0xfe8>
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 408028 <_head_lib64_libkernel32_a-0xfd8>
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 408018 <_head_lib64_libkernel32_a-0xfe8>
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 408020 <_head_lib64_libkernel32_a-0xfe0>
  4013e3:	call   4032c0 <_head_lib64_libkernel32_a-0x5d40>
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 408008 <_head_lib64_libkernel32_a-0xff8>
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 40800c <_head_lib64_libkernel32_a-0xff4>
  4013f4:	test   ecx,ecx
  4013f6:	je     4014c6 <_head_lib64_libkernel32_a-0x7b3a>
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 408004 <_head_lib64_libkernel32_a-0xffc>
  401402:	test   edx,edx
  401404:	jne    401411 <_head_lib64_libkernel32_a-0x7bef>
  401406:	call   403180 <_head_lib64_libkernel32_a-0x5e80>
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 40800c <_head_lib64_libkernel32_a-0xff4>
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    401330 <_head_lib64_libkernel32_a-0x7cd0>
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x42f9]        # 405730 <_head_lib64_libkernel32_a-0x38d0>
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    401236 <_head_lib64_libkernel32_a-0x7dca>
  401447:	mov    ecx,0x1f
  40144c:	call   403188 <_head_lib64_libkernel32_a-0x5e78>
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    401255 <_head_lib64_libkernel32_a-0x7dab>
  40145c:	mov    rdx,QWORD PTR [rip+0x430d]        # 405770 <_head_lib64_libkernel32_a-0x3890>
  401463:	mov    rcx,QWORD PTR [rip+0x42f6]        # 405760 <_head_lib64_libkernel32_a-0x38a0>
  40146a:	call   403178 <_head_lib64_libkernel32_a-0x5e88>
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    40125d <_head_lib64_libkernel32_a-0x7da3>
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    40125d <_head_lib64_libkernel32_a-0x7da3>
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7f07]        # 4093a0 <__imp_GetStartupInfoA>
  401499:	jmp    4011e5 <_head_lib64_libkernel32_a-0x7e1b>
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x42e9]        # 405790 <_head_lib64_libkernel32_a-0x3870>
  4014a7:	mov    rcx,QWORD PTR [rip+0x42d2]        # 405780 <_head_lib64_libkernel32_a-0x3880>
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   403178 <_head_lib64_libkernel32_a-0x5e88>
  4014b9:	jmp    40124a <_head_lib64_libkernel32_a-0x7db6>
  4014be:	xor    r13d,r13d
  4014c1:	jmp    4013a6 <_head_lib64_libkernel32_a-0x7c5a>
  4014c6:	mov    ecx,eax
  4014c8:	call   403148 <_head_lib64_libkernel32_a-0x5eb8>
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x4315]        # 4057f0 <_head_lib64_libkernel32_a-0x3810>
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   401d50 <_head_lib64_libkernel32_a-0x72b0>
  4014e6:	call   4011b0 <_head_lib64_libkernel32_a-0x7e50>
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x42e5]        # 4057f0 <_head_lib64_libkernel32_a-0x3810>
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   401d50 <_head_lib64_libkernel32_a-0x72b0>
  401516:	call   4011b0 <_head_lib64_libkernel32_a-0x7e50>
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbp
  401531:	mov    rbp,rsp
  401534:	pop    rbp
  401535:	ret    
  401536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401540:	push   rbp
  401541:	mov    rbp,rsp
  401544:	sub    rsp,0x20
  401548:	cmp    QWORD PTR [rip+0x2b40],0x0        # 404090 <_head_lib64_libkernel32_a-0x4f70>
  401550:	je     401582 <_head_lib64_libkernel32_a-0x7a7e>
  401552:	lea    rcx,[rip+0x3aa7]        # 405000 <_head_lib64_libkernel32_a-0x4000>
  401559:	call   QWORD PTR [rip+0x7e31]        # 409390 <__imp_GetModuleHandleA>
  40155f:	test   rax,rax
  401562:	je     401593 <_head_lib64_libkernel32_a-0x7a6d>
  401564:	lea    rdx,[rip+0x3aa3]        # 40500e <_head_lib64_libkernel32_a-0x3ff2>
  40156b:	mov    rcx,rax
  40156e:	call   QWORD PTR [rip+0x7e24]        # 409398 <__imp_GetProcAddress>
  401574:	test   rax,rax
  401577:	je     401582 <_head_lib64_libkernel32_a-0x7a7e>
  401579:	lea    rcx,[rip+0x2b10]        # 404090 <_head_lib64_libkernel32_a-0x4f70>
  401580:	call   rax
  401582:	lea    rcx,[rip+0x17]        # 4015a0 <_head_lib64_libkernel32_a-0x7a60>
  401589:	add    rsp,0x20
  40158d:	pop    rbp
  40158e:	jmp    401c50 <_head_lib64_libkernel32_a-0x73b0>
  401593:	lea    rax,[rip+0xffffffffffffff96]        # 401530 <_head_lib64_libkernel32_a-0x7ad0>
  40159a:	jmp    401579 <_head_lib64_libkernel32_a-0x7a87>
  40159c:	nop    DWORD PTR [rax+0x0]
  4015a0:	push   rbp
  4015a1:	mov    rbp,rsp
  4015a4:	pop    rbp
  4015a5:	ret    
  4015a6:	nop
  4015a7:	nop
  4015a8:	nop
  4015a9:	nop
  4015aa:	nop
  4015ab:	nop
  4015ac:	nop
  4015ad:	nop
  4015ae:	nop
  4015af:	nop
  4015b0:	sub    rsp,0x48
  4015b4:	mov    eax,0xff
  4015b9:	mov    r9d,eax
  4015bc:	mov    r8d,eax
  4015bf:	movzx  edx,BYTE PTR [rcx]
  4015c2:	sub    r9d,edx
  4015c5:	movzx  edx,BYTE PTR [rcx+0x1]
  4015c9:	sub    r8d,edx
  4015cc:	movzx  edx,BYTE PTR [rcx+0x2]
  4015d0:	lea    rcx,[rsp+0x20]
  4015d5:	sub    eax,edx
  4015d7:	cmp    r9d,r8d
  4015da:	mov    edx,r8d
  4015dd:	cmovle edx,r9d
  4015e1:	cmp    eax,edx
  4015e3:	cmovle edx,eax
  4015e6:	sub    r9d,edx
  4015e9:	sub    r8d,edx
  4015ec:	sub    eax,edx
  4015ee:	mov    BYTE PTR [rsp+0x20],r9b
  4015f3:	lea    rdx,[rsp+0x28]
  4015f8:	mov    BYTE PTR [rsp+0x21],r8b
  4015fd:	lea    r9,[rsp+0x38]
  401602:	lea    r8,[rsp+0x30]
  401607:	mov    BYTE PTR [rsp+0x22],al
  40160b:	call   401b68 <_head_lib64_libkernel32_a-0x7498>
  401610:	movsd  xmm0,QWORD PTR [rsp+0x38]
  401616:	add    rsp,0x48
  40161a:	ret    
  40161b:	nop    DWORD PTR [rax+rax*1+0x0]
  401620:	push   rbx
  401621:	sub    rsp,0x20
  401625:	mov    eax,DWORD PTR [r8+0x10]
  401629:	test   eax,eax
  40162b:	mov    rbx,r8
  40162e:	je     401636 <_head_lib64_libkernel32_a-0x79ca>
  401630:	cmp    BYTE PTR [rcx+0x3],0x0
  401634:	je     401655 <_head_lib64_libkernel32_a-0x79ab>
  401636:	call   4015b0 <_head_lib64_libkernel32_a-0x7a50>
  40163b:	ucomisd xmm0,QWORD PTR [rbx]
  40163f:	jbe    401645 <_head_lib64_libkernel32_a-0x79bb>
  401641:	movsd  QWORD PTR [rbx],xmm0
  401645:	movsd  xmm1,QWORD PTR [rbx+0x8]
  40164a:	ucomisd xmm1,xmm0
  40164e:	jbe    401655 <_head_lib64_libkernel32_a-0x79ab>
  401650:	movsd  QWORD PTR [rbx+0x8],xmm0
  401655:	add    rsp,0x20
  401659:	pop    rbx
  40165a:	ret    
  40165b:	nop    DWORD PTR [rax+rax*1+0x0]
  401660:	push   rdi
  401661:	push   rsi
  401662:	push   rbx
  401663:	sub    rsp,0x60
  401667:	movaps XMMWORD PTR [rsp+0x50],xmm6
  40166c:	mov    eax,0xff
  401671:	mov    r8d,eax
  401674:	mov    edi,eax
  401676:	mov    rsi,rdx
  401679:	movzx  edx,BYTE PTR [rcx]
  40167c:	movapd xmm6,xmm2
  401680:	movsd  QWORD PTR [rsp+0x28],xmm3
  401686:	lea    r9,[rsp+0x48]
  40168b:	sub    r8d,edx
  40168e:	movzx  edx,BYTE PTR [rcx+0x1]
  401692:	movzx  ecx,BYTE PTR [rcx+0x2]
  401696:	sub    edi,edx
  401698:	sub    eax,ecx
  40169a:	mov    ebx,edi
  40169c:	cmp    r8d,edi
  40169f:	cmovle ebx,r8d
  4016a3:	mov    edx,edi
  4016a5:	lea    rdi,[rsp+0x30]
  4016aa:	cmp    eax,ebx
  4016ac:	cmovle ebx,eax
  4016af:	mov    rcx,rdi
  4016b2:	sub    r8d,ebx
  4016b5:	sub    edx,ebx
  4016b7:	sub    eax,ebx
  4016b9:	mov    BYTE PTR [rsp+0x30],r8b
  4016be:	lea    r8,[rsp+0x40]
  4016c3:	mov    BYTE PTR [rsp+0x31],dl
  4016c7:	lea    rdx,[rsp+0x38]
  4016cc:	mov    BYTE PTR [rsp+0x32],al
  4016d0:	call   401b68 <_head_lib64_libkernel32_a-0x7498>
  4016d5:	movsd  xmm3,QWORD PTR [rsp+0x28]
  4016db:	ucomisd xmm3,xmm6
  4016df:	jp     401750 <_head_lib64_libkernel32_a-0x78b0>
  4016e1:	jne    401750 <_head_lib64_libkernel32_a-0x78b0>
  4016e3:	movsd  xmm3,QWORD PTR [rsp+0x48]
  4016e9:	movsd  xmm2,QWORD PTR [rsp+0x40]
  4016ef:	mov    rcx,rdi
  4016f2:	movsd  xmm1,QWORD PTR [rsp+0x38]
  4016f8:	call   401b70 <_head_lib64_libkernel32_a-0x7490>
  4016fd:	movzx  edx,BYTE PTR [rsp+0x30]
  401702:	movzx  ecx,BYTE PTR [rsp+0x32]
  401707:	movzx  eax,BYTE PTR [rsp+0x31]
  40170c:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  401711:	add    edx,ebx
  401713:	add    eax,ebx
  401715:	add    ebx,ecx
  401717:	mov    ecx,0xff
  40171c:	cmp    edx,0xff
  401722:	cmovg  edx,ecx
  401725:	cmp    eax,0xff
  40172a:	cmovg  eax,ecx
  40172d:	cmp    ebx,0xff
  401733:	cmovg  ebx,ecx
  401736:	not    edx
  401738:	not    eax
  40173a:	mov    BYTE PTR [rsi],dl
  40173c:	not    ebx
  40173e:	mov    BYTE PTR [rsi+0x1],al
  401741:	mov    BYTE PTR [rsi+0x2],bl
  401744:	add    rsp,0x60
  401748:	pop    rbx
  401749:	pop    rsi
  40174a:	pop    rdi
  40174b:	ret    
  40174c:	nop    DWORD PTR [rax+0x0]
  401750:	movsd  xmm0,QWORD PTR [rsp+0x48]
  401756:	subsd  xmm3,xmm6
  40175a:	subsd  xmm0,xmm6
  40175e:	divsd  xmm0,xmm3
  401762:	movapd xmm3,xmm0
  401766:	movsd  QWORD PTR [rsp+0x48],xmm0
  40176c:	jmp    4016e9 <_head_lib64_libkernel32_a-0x7917>
  401771:	nop    DWORD PTR [rax+rax*1+0x0]
  401776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401780:	push   rdi
  401781:	push   rsi
  401782:	push   rbx
  401783:	sub    rsp,0x20
  401787:	movsd  xmm3,QWORD PTR [r9]
  40178c:	movsd  xmm2,QWORD PTR [r9+0x8]
  401792:	mov    rbx,r9
  401795:	mov    rdi,rcx
  401798:	mov    rsi,rdx
  40179b:	call   401660 <_head_lib64_libkernel32_a-0x79a0>
  4017a0:	mov    eax,DWORD PTR [rbx+0x10]
  4017a3:	test   eax,eax
  4017a5:	je     4017ae <_head_lib64_libkernel32_a-0x7852>
  4017a7:	movzx  eax,BYTE PTR [rdi+0x3]
  4017ab:	mov    BYTE PTR [rsi+0x3],al
  4017ae:	add    rsp,0x20
  4017b2:	pop    rbx
  4017b3:	pop    rsi
  4017b4:	pop    rdi
  4017b5:	ret    
  4017b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017c0:	push   r15
  4017c2:	push   r14
  4017c4:	push   r13
  4017c6:	push   r12
  4017c8:	push   rbp
  4017c9:	push   rdi
  4017ca:	push   rsi
  4017cb:	push   rbx
  4017cc:	sub    rsp,0x68
  4017d0:	movaps XMMWORD PTR [rsp+0x40],xmm6
  4017d5:	movaps XMMWORD PTR [rsp+0x50],xmm7
  4017da:	mov    rsi,r8
  4017dd:	mov    rdi,r9
  4017e0:	call   401b60 <_head_lib64_libkernel32_a-0x74a0>
  4017e5:	lea    rcx,[rip+0x3854]        # 405040 <_head_lib64_libkernel32_a-0x3fc0>
  4017ec:	mov    rdx,rax
  4017ef:	call   401b90 <_head_lib64_libkernel32_a-0x7470>
  4017f4:	lea    rdx,[rip+0x3859]        # 405054 <_head_lib64_libkernel32_a-0x3fac>
  4017fb:	lea    rcx,[rip+0x383e]        # 405040 <_head_lib64_libkernel32_a-0x3fc0>
  401802:	call   401b98 <_head_lib64_libkernel32_a-0x7468>
  401807:	lea    rcx,[rip+0x3832]        # 405040 <_head_lib64_libkernel32_a-0x3fc0>
  40180e:	call   401b80 <_head_lib64_libkernel32_a-0x7480>
  401813:	mov    ecx,DWORD PTR [rsi+0x58]
  401816:	mov    ebp,DWORD PTR [rsi+0x8]
  401819:	call   401b48 <_head_lib64_libkernel32_a-0x74b8>
  40181e:	mov    r12d,DWORD PTR [rsi+0x30]
  401822:	mov    ecx,DWORD PTR [rax]
  401824:	mov    rbx,rax
  401827:	call   401b28 <_head_lib64_libkernel32_a-0x74d8>
  40182c:	test   eax,eax
  40182e:	jne    40183f <_head_lib64_libkernel32_a-0x77c1>
  401830:	mov    ecx,DWORD PTR [rbx]
  401832:	call   401b38 <_head_lib64_libkernel32_a-0x74c8>
  401837:	test   eax,eax
  401839:	je     401914 <_head_lib64_libkernel32_a-0x76ec>
  40183f:	lea    rcx,[rip+0x3814]        # 40505a <_head_lib64_libkernel32_a-0x3fa6>
  401846:	call   401b88 <_head_lib64_libkernel32_a-0x7478>
  40184b:	lea    rsi,[rsp+0x20]
  401850:	mov    rcx,rax
  401853:	call   401af8 <_head_lib64_libkernel32_a-0x7508>
  401858:	call   401ad0 <_head_lib64_libkernel32_a-0x7530>
  40185d:	xor    edx,edx
  40185f:	mov    ecx,eax
  401861:	mov    eax,DWORD PTR [rbx+0x4]
  401864:	div    ecx
  401866:	lea    ecx,[rax+rax*1+0x2]
  40186a:	call   401ad8 <_head_lib64_libkernel32_a-0x7528>
  40186f:	mov    ecx,DWORD PTR [rbx]
  401871:	call   401b40 <_head_lib64_libkernel32_a-0x74c0>
  401876:	xor    edx,edx
  401878:	mov    r9,rsi
  40187b:	mov    rcx,rbx
  40187e:	movsd  xmm4,QWORD PTR [rip+0x3b1a]        # 4053a0 <_head_lib64_libkernel32_a-0x3c60>
  401886:	mov    DWORD PTR [rsp+0x30],eax
  40188a:	lea    r8,[rip+0xfffffffffffffd8f]        # 401620 <_head_lib64_libkernel32_a-0x79e0>
  401891:	mov    QWORD PTR [rsp+0x20],0x0
  40189a:	movsd  QWORD PTR [rsp+0x28],xmm4
  4018a0:	call   401ae8 <_head_lib64_libkernel32_a-0x7518>
  4018a5:	xor    edx,edx
  4018a7:	mov    r9,rsi
  4018aa:	mov    rcx,rbx
  4018ad:	lea    r8,[rip+0xfffffffffffffecc]        # 401780 <_head_lib64_libkernel32_a-0x7880>
  4018b4:	call   401ae0 <_head_lib64_libkernel32_a-0x7520>
  4018b9:	cmp    ebp,0x1
  4018bc:	je     4018c3 <_head_lib64_libkernel32_a-0x773d>
  4018be:	call   401b58 <_head_lib64_libkernel32_a-0x74a8>
  4018c3:	mov    edx,0x3
  4018c8:	mov    rax,QWORD PTR [rsp+0xd0]
  4018d0:	mov    DWORD PTR [rdi],0x1
  4018d6:	mov    rcx,rbx
  4018d9:	lea    rdi,[rip+0x6760]        # 408040 <_head_lib64_libkernel32_a-0xfc0>
  4018e0:	mov    QWORD PTR [rax],rdi
  4018e3:	mov    DWORD PTR [rip+0x675f],edx        # 408048 <_head_lib64_libkernel32_a-0xfb8>
  4018e9:	mov    DWORD PTR [rip+0x674d],0x15        # 408040 <_head_lib64_libkernel32_a-0xfc0>
  4018f3:	call   401b50 <_head_lib64_libkernel32_a-0x74b0>
  4018f8:	nop
  4018f9:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4018fe:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401903:	add    rsp,0x68
  401907:	pop    rbx
  401908:	pop    rsi
  401909:	pop    rdi
  40190a:	pop    rbp
  40190b:	pop    r12
  40190d:	pop    r13
  40190f:	pop    r14
  401911:	pop    r15
  401913:	ret    
  401914:	mov    ecx,DWORD PTR [rbx]
  401916:	call   401b30 <_head_lib64_libkernel32_a-0x74d0>
  40191b:	xor    edx,edx
  40191d:	test   eax,eax
  40191f:	je     4018c8 <_head_lib64_libkernel32_a-0x7738>
  401921:	lea    rdx,[rsp+0x20]
  401926:	mov    ecx,r12d
  401929:	call   401b20 <_head_lib64_libkernel32_a-0x74e0>
  40192e:	test   rax,rax
  401931:	mov    r14,rax
  401934:	je     4019de <_head_lib64_libkernel32_a-0x7622>
  40193a:	mov    r8d,DWORD PTR [rsp+0x20]
  40193f:	test   r8d,r8d
  401942:	jle    4019c5 <_head_lib64_libkernel32_a-0x763b>
  401948:	mov    rsi,rax
  40194b:	mov    r15,rax
  40194e:	xor    r13d,r13d
  401951:	pxor   xmm6,xmm6
  401955:	movsd  xmm7,QWORD PTR [rip+0x3a43]        # 4053a0 <_head_lib64_libkernel32_a-0x3c60>
  40195d:	nop    DWORD PTR [rax]
  401960:	mov    rcx,r15
  401963:	add    r13d,0x1
  401967:	add    r15,0x3
  40196b:	call   4015b0 <_head_lib64_libkernel32_a-0x7a50>
  401970:	mov    r8d,DWORD PTR [rsp+0x20]
  401975:	movapd xmm1,xmm0
  401979:	minsd  xmm0,xmm7
  40197d:	maxsd  xmm1,xmm6
  401981:	cmp    r13d,r8d
  401984:	movapd xmm7,xmm0
  401988:	movapd xmm6,xmm1
  40198c:	jl     401960 <_head_lib64_libkernel32_a-0x76a0>
  40198e:	test   r8d,r8d
  401991:	jle    4019c5 <_head_lib64_libkernel32_a-0x763b>
  401993:	xor    r13d,r13d
  401996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4019a0:	mov    rdx,rsi
  4019a3:	mov    rcx,rsi
  4019a6:	movapd xmm3,xmm6
  4019aa:	movapd xmm2,xmm7
  4019ae:	add    r13d,0x1
  4019b2:	add    rsi,0x3
  4019b6:	call   401660 <_head_lib64_libkernel32_a-0x79a0>
  4019bb:	mov    r8d,DWORD PTR [rsp+0x20]
  4019c0:	cmp    r13d,r8d
  4019c3:	jl     4019a0 <_head_lib64_libkernel32_a-0x7660>
  4019c5:	mov    rdx,r14
  4019c8:	mov    ecx,r12d
  4019cb:	call   401b18 <_head_lib64_libkernel32_a-0x74e8>
  4019d0:	cmp    ebp,0x1
  4019d3:	jne    4018be <_head_lib64_libkernel32_a-0x7742>
  4019d9:	jmp    4018c3 <_head_lib64_libkernel32_a-0x773d>
  4019de:	lea    r8,[rip+0x3683]        # 405068 <_head_lib64_libkernel32_a-0x3f98>
  4019e5:	mov    edx,0x20
  4019ea:	xor    ecx,ecx
  4019ec:	call   401b78 <_head_lib64_libkernel32_a-0x7488>
  4019f1:	call   401af0 <_head_lib64_libkernel32_a-0x7510>
  4019f6:	nop
  4019f7:	nop    WORD PTR [rax+rax*1+0x0]
  401a00:	sub    rsp,0x78
  401a04:	lea    rax,[rip+0x3915]        # 405320 <_head_lib64_libkernel32_a-0x3ce0>
  401a0b:	lea    r9,[rip+0x3674]        # 405086 <_head_lib64_libkernel32_a-0x3f7a>
  401a12:	lea    r8,[rip+0x367f]        # 405098 <_head_lib64_libkernel32_a-0x3f68>
  401a19:	lea    rdx,[rip+0x3808]        # 405228 <_head_lib64_libkernel32_a-0x3dd8>
  401a20:	lea    rcx,[rip+0x383a]        # 405261 <_head_lib64_libkernel32_a-0x3d9f>
  401a27:	mov    QWORD PTR [rsp+0x58],rax
  401a2c:	lea    rax,[rip+0x3844]        # 405277 <_head_lib64_libkernel32_a-0x3d89>
  401a33:	mov    QWORD PTR [rsp+0x38],rax
  401a38:	lea    rax,[rip+0x3847]        # 405286 <_head_lib64_libkernel32_a-0x3d7a>
  401a3f:	mov    QWORD PTR [rsp+0x30],rax
  401a44:	lea    rax,[rip+0x384a]        # 405295 <_head_lib64_libkernel32_a-0x3d6b>
  401a4b:	mov    QWORD PTR [rsp+0x60],0x0
  401a54:	mov    DWORD PTR [rsp+0x50],0x0
  401a5c:	mov    DWORD PTR [rsp+0x48],0x3
  401a64:	mov    DWORD PTR [rsp+0x40],0x1
  401a6c:	mov    QWORD PTR [rsp+0x28],rax
  401a71:	mov    QWORD PTR [rsp+0x20],r9
  401a76:	call   401b10 <_head_lib64_libkernel32_a-0x74f0>
  401a7b:	lea    rdx,[rip+0x3818]        # 40529a <_head_lib64_libkernel32_a-0x3d66>
  401a82:	lea    rcx,[rip+0x37d8]        # 405261 <_head_lib64_libkernel32_a-0x3d9f>
  401a89:	add    rsp,0x78
  401a8d:	jmp    401b00 <_head_lib64_libkernel32_a-0x7500>
  401a92:	nop    DWORD PTR [rax+0x0]
  401a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401aa0:	mov    rax,QWORD PTR [rip+0x3c19]        # 4056c0 <_head_lib64_libkernel32_a-0x3940>
  401aa7:	lea    rcx,[rip+0x38d2]        # 405380 <_head_lib64_libkernel32_a-0x3c80>
  401aae:	mov    rdx,QWORD PTR [rax]
  401ab1:	mov    rax,QWORD PTR [rip+0x3bf8]        # 4056b0 <_head_lib64_libkernel32_a-0x3950>
  401ab8:	mov    r8,QWORD PTR [rdx]
  401abb:	mov    rax,QWORD PTR [rax]
  401abe:	mov    edx,DWORD PTR [rax]
  401ac0:	jmp    401b08 <_head_lib64_libkernel32_a-0x74f8>
  401ac5:	nop
  401ac6:	nop
  401ac7:	nop
  401ac8:	nop
  401ac9:	nop
  401aca:	nop
  401acb:	nop
  401acc:	nop
  401acd:	nop
  401ace:	nop
  401acf:	nop
  401ad0:	jmp    QWORD PTR [rip+0x7ada]        # 4095b0 <__imp_gimp_tile_width>
  401ad6:	nop
  401ad7:	nop
  401ad8:	jmp    QWORD PTR [rip+0x7aca]        # 4095a8 <__imp_gimp_tile_cache_ntiles>
  401ade:	nop
  401adf:	nop
  401ae0:	jmp    QWORD PTR [rip+0x7aba]        # 4095a0 <__imp_gimp_rgn_iterate2>
  401ae6:	nop
  401ae7:	nop
  401ae8:	jmp    QWORD PTR [rip+0x7aaa]        # 409598 <__imp_gimp_rgn_iterate1>
  401aee:	nop
  401aef:	nop
  401af0:	jmp    QWORD PTR [rip+0x7a9a]        # 409590 <__imp_gimp_quit>
  401af6:	nop
  401af7:	nop
  401af8:	jmp    QWORD PTR [rip+0x7a8a]        # 409588 <__imp_gimp_progress_init>
  401afe:	nop
  401aff:	nop
  401b00:	jmp    QWORD PTR [rip+0x7a7a]        # 409580 <__imp_gimp_plugin_menu_register>
  401b06:	nop
  401b07:	nop
  401b08:	jmp    QWORD PTR [rip+0x7a6a]        # 409578 <__imp_gimp_main>
  401b0e:	nop
  401b0f:	nop
  401b10:	jmp    QWORD PTR [rip+0x7a5a]        # 409570 <__imp_gimp_install_procedure>
  401b16:	nop
  401b17:	nop
  401b18:	jmp    QWORD PTR [rip+0x7a4a]        # 409568 <__imp_gimp_image_set_colormap>
  401b1e:	nop
  401b1f:	nop
  401b20:	jmp    QWORD PTR [rip+0x7a3a]        # 409560 <__imp_gimp_image_get_colormap>
  401b26:	nop
  401b27:	nop
  401b28:	jmp    QWORD PTR [rip+0x7a2a]        # 409558 <__imp_gimp_drawable_is_rgb>
  401b2e:	nop
  401b2f:	nop
  401b30:	jmp    QWORD PTR [rip+0x7a1a]        # 409550 <__imp_gimp_drawable_is_indexed>
  401b36:	nop
  401b37:	nop
  401b38:	jmp    QWORD PTR [rip+0x7a0a]        # 409548 <__imp_gimp_drawable_is_gray>
  401b3e:	nop
  401b3f:	nop
  401b40:	jmp    QWORD PTR [rip+0x79fa]        # 409540 <__imp_gimp_drawable_has_alpha>
  401b46:	nop
  401b47:	nop
  401b48:	jmp    QWORD PTR [rip+0x79ea]        # 409538 <__imp_gimp_drawable_get>
  401b4e:	nop
  401b4f:	nop
  401b50:	jmp    QWORD PTR [rip+0x79da]        # 409530 <__imp_gimp_drawable_detach>
  401b56:	nop
  401b57:	nop
  401b58:	jmp    QWORD PTR [rip+0x79ca]        # 409528 <__imp_gimp_displays_flush>
  401b5e:	nop
  401b5f:	nop
  401b60:	jmp    QWORD PTR [rip+0x7a5a]        # 4095c0 <__imp_gimp_locale_directory>
  401b66:	nop
  401b67:	nop
  401b68:	jmp    QWORD PTR [rip+0x7a6a]        # 4095d8 <__imp_gimp_rgb_to_hsv4>
  401b6e:	nop
  401b6f:	nop
  401b70:	jmp    QWORD PTR [rip+0x7a5a]        # 4095d0 <__imp_gimp_hsv_to_rgb4>
  401b76:	nop
  401b77:	nop
  401b78:	jmp    QWORD PTR [rip+0x7a6a]        # 4095e8 <__imp_g_log>
  401b7e:	nop
  401b7f:	nop
  401b80:	jmp    QWORD PTR [rip+0x7a8a]        # 409610 <__imp_libintl_textdomain>
  401b86:	nop
  401b87:	nop
  401b88:	jmp    QWORD PTR [rip+0x7a7a]        # 409608 <__imp_libintl_gettext>
  401b8e:	nop
  401b8f:	nop
  401b90:	jmp    QWORD PTR [rip+0x7a6a]        # 409600 <__imp_libintl_bindtextdomain>
  401b96:	nop
  401b97:	nop
  401b98:	jmp    QWORD PTR [rip+0x7a5a]        # 4095f8 <__imp_libintl_bind_textdomain_codeset>
  401b9e:	nop
  401b9f:	nop
  401ba0:	push   rbx
  401ba1:	sub    rsp,0x30
  401ba5:	mov    rbx,rcx
  401ba8:	mov    rcx,QWORD PTR [rip+0x6ea1]        # 408a50 <_head_lib64_libkernel32_a-0x5b0>
  401baf:	call   402150 <_head_lib64_libkernel32_a-0x6eb0>
  401bb4:	cmp    rax,0xffffffffffffffff
  401bb8:	mov    QWORD PTR [rsp+0x20],rax
  401bbd:	je     401c35 <_head_lib64_libkernel32_a-0x73cb>
  401bbf:	mov    ecx,0x8
  401bc4:	call   403170 <_head_lib64_libkernel32_a-0x5e90>
  401bc9:	mov    rcx,QWORD PTR [rip+0x6e80]        # 408a50 <_head_lib64_libkernel32_a-0x5b0>
  401bd0:	call   402150 <_head_lib64_libkernel32_a-0x6eb0>
  401bd5:	mov    rcx,QWORD PTR [rip+0x6e7c]        # 408a58 <_head_lib64_libkernel32_a-0x5a8>
  401bdc:	mov    QWORD PTR [rsp+0x20],rax
  401be1:	call   402150 <_head_lib64_libkernel32_a-0x6eb0>
  401be6:	lea    rdx,[rsp+0x20]
  401beb:	lea    r8,[rsp+0x28]
  401bf0:	mov    rcx,rbx
  401bf3:	mov    QWORD PTR [rsp+0x28],rax
  401bf8:	call   4031b8 <_head_lib64_libkernel32_a-0x5e48>
  401bfd:	mov    rcx,QWORD PTR [rsp+0x20]
  401c02:	mov    rbx,rax
  401c05:	call   402160 <_head_lib64_libkernel32_a-0x6ea0>
  401c0a:	mov    rcx,QWORD PTR [rsp+0x28]
  401c0f:	mov    QWORD PTR [rip+0x6e3a],rax        # 408a50 <_head_lib64_libkernel32_a-0x5b0>
  401c16:	call   402160 <_head_lib64_libkernel32_a-0x6ea0>
  401c1b:	mov    ecx,0x8
  401c20:	mov    QWORD PTR [rip+0x6e31],rax        # 408a58 <_head_lib64_libkernel32_a-0x5a8>
  401c27:	call   403160 <_head_lib64_libkernel32_a-0x5ea0>
  401c2c:	mov    rax,rbx
  401c2f:	add    rsp,0x30
  401c33:	pop    rbx
  401c34:	ret    
  401c35:	mov    rax,QWORD PTR [rip+0x3ac4]        # 405700 <_head_lib64_libkernel32_a-0x3900>
  401c3c:	mov    rcx,rbx
  401c3f:	call   QWORD PTR [rax]
  401c41:	add    rsp,0x30
  401c45:	pop    rbx
  401c46:	ret    
  401c47:	nop    WORD PTR [rax+rax*1+0x0]
  401c50:	sub    rsp,0x28
  401c54:	call   401ba0 <_head_lib64_libkernel32_a-0x7460>
  401c59:	test   rax,rax
  401c5c:	sete   al
  401c5f:	movzx  eax,al
  401c62:	neg    eax
  401c64:	add    rsp,0x28
  401c68:	ret    
  401c69:	nop
  401c6a:	nop
  401c6b:	nop
  401c6c:	nop
  401c6d:	nop
  401c6e:	nop
  401c6f:	nop
  401c70:	sub    rsp,0x28
  401c74:	mov    rax,QWORD PTR [rip+0x2395]        # 404010 <_head_lib64_libkernel32_a-0x4ff0>
  401c7b:	mov    rax,QWORD PTR [rax]
  401c7e:	test   rax,rax
  401c81:	je     401ca0 <_head_lib64_libkernel32_a-0x7360>
  401c83:	call   rax
  401c85:	mov    rax,QWORD PTR [rip+0x2384]        # 404010 <_head_lib64_libkernel32_a-0x4ff0>
  401c8c:	lea    rdx,[rax+0x8]
  401c90:	mov    rax,QWORD PTR [rax+0x8]
  401c94:	mov    QWORD PTR [rip+0x2375],rdx        # 404010 <_head_lib64_libkernel32_a-0x4ff0>
  401c9b:	test   rax,rax
  401c9e:	jne    401c83 <_head_lib64_libkernel32_a-0x737d>
  401ca0:	add    rsp,0x28
  401ca4:	ret    
  401ca5:	nop
  401ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401cb0:	push   rsi
  401cb1:	push   rbx
  401cb2:	sub    rsp,0x28
  401cb6:	mov    rsi,QWORD PTR [rip+0x39a3]        # 405660 <_head_lib64_libkernel32_a-0x39a0>
  401cbd:	mov    rax,QWORD PTR [rsi]
  401cc0:	cmp    eax,0xffffffff
  401cc3:	mov    ebx,eax
  401cc5:	je     401cf0 <_head_lib64_libkernel32_a-0x7310>
  401cc7:	test   ebx,ebx
  401cc9:	je     401cda <_head_lib64_libkernel32_a-0x7326>
  401ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  401cd0:	mov    eax,ebx
  401cd2:	call   QWORD PTR [rsi+rax*8]
  401cd5:	sub    ebx,0x1
  401cd8:	jne    401cd0 <_head_lib64_libkernel32_a-0x7330>
  401cda:	lea    rcx,[rip+0xffffffffffffff8f]        # 401c70 <_head_lib64_libkernel32_a-0x7390>
  401ce1:	add    rsp,0x28
  401ce5:	pop    rbx
  401ce6:	pop    rsi
  401ce7:	jmp    401c50 <_head_lib64_libkernel32_a-0x73b0>
  401cec:	nop    DWORD PTR [rax+0x0]
  401cf0:	xor    ebx,ebx
  401cf2:	jmp    401cf6 <_head_lib64_libkernel32_a-0x730a>
  401cf4:	mov    ebx,eax
  401cf6:	lea    edx,[rbx+0x1]
  401cf9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  401cfe:	mov    rax,rdx
  401d01:	jne    401cf4 <_head_lib64_libkernel32_a-0x730c>
  401d03:	jmp    401cc7 <_head_lib64_libkernel32_a-0x7339>
  401d05:	nop
  401d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d10:	mov    eax,DWORD PTR [rip+0x636a]        # 408080 <_head_lib64_libkernel32_a-0xf80>
  401d16:	test   eax,eax
  401d18:	je     401d20 <_head_lib64_libkernel32_a-0x72e0>
  401d1a:	repz ret 
  401d1c:	nop    DWORD PTR [rax+0x0]
  401d20:	mov    DWORD PTR [rip+0x6356],0x1        # 408080 <_head_lib64_libkernel32_a-0xf80>
  401d2a:	jmp    401cb0 <_head_lib64_libkernel32_a-0x7350>
  401d2c:	nop
  401d2d:	nop
  401d2e:	nop
  401d2f:	nop
  401d30:	mov    rax,QWORD PTR [rip+0x7731]        # 409468 <__imp___lconv_init>
  401d37:	rex.W jmp rax
  401d3a:	nop
  401d3b:	nop
  401d3c:	nop
  401d3d:	nop
  401d3e:	nop
  401d3f:	nop
  401d40:	xor    eax,eax
  401d42:	ret    
  401d43:	nop
  401d44:	nop
  401d45:	nop
  401d46:	nop
  401d47:	nop
  401d48:	nop
  401d49:	nop
  401d4a:	nop
  401d4b:	nop
  401d4c:	nop
  401d4d:	nop
  401d4e:	nop
  401d4f:	nop
  401d50:	push   r12
  401d52:	push   rbp
  401d53:	push   rdi
  401d54:	push   rsi
  401d55:	push   rbx
  401d56:	sub    rsp,0x40
  401d5a:	mov    rbx,QWORD PTR [rip+0x230f]        # 404070 <_head_lib64_libkernel32_a-0x4f90>
  401d61:	movabs rax,0x2b992ddfa232
  401d6b:	mov    QWORD PTR [rsp+0x20],0x0
  401d74:	cmp    rbx,rax
  401d77:	je     401d90 <_head_lib64_libkernel32_a-0x7270>
  401d79:	not    rbx
  401d7c:	mov    QWORD PTR [rip+0x22fd],rbx        # 404080 <_head_lib64_libkernel32_a-0x4f80>
  401d83:	add    rsp,0x40
  401d87:	pop    rbx
  401d88:	pop    rsi
  401d89:	pop    rdi
  401d8a:	pop    rbp
  401d8b:	pop    r12
  401d8d:	ret    
  401d8e:	xchg   ax,ax
  401d90:	lea    rcx,[rsp+0x20]
  401d95:	call   QWORD PTR [rip+0x760d]        # 4093a8 <__imp_GetSystemTimeAsFileTime>
  401d9b:	mov    r12,QWORD PTR [rsp+0x20]
  401da0:	call   QWORD PTR [rip+0x75d2]        # 409378 <__imp_GetCurrentProcessId>
  401da6:	mov    ebp,eax
  401da8:	call   QWORD PTR [rip+0x75d2]        # 409380 <__imp_GetCurrentThreadId>
  401dae:	mov    edi,eax
  401db0:	call   QWORD PTR [rip+0x75fa]        # 4093b0 <__imp_GetTickCount>
  401db6:	lea    rcx,[rsp+0x30]
  401dbb:	mov    esi,eax
  401dbd:	call   QWORD PTR [rip+0x7605]        # 4093c8 <__imp_QueryPerformanceCounter>
  401dc3:	xor    r12,QWORD PTR [rsp+0x30]
  401dc8:	mov    edx,edi
  401dca:	movabs rax,0xffffffffffff
  401dd4:	xor    rbp,r12
  401dd7:	mov    rdi,rbp
  401dda:	xor    rdi,rdx
  401ddd:	mov    edx,esi
  401ddf:	xor    rdi,rdx
  401de2:	mov    rsi,rdi
  401de5:	and    rsi,rax
  401de8:	cmp    rsi,rbx
  401deb:	je     401e10 <_head_lib64_libkernel32_a-0x71f0>
  401ded:	mov    rax,rsi
  401df0:	not    rax
  401df3:	mov    QWORD PTR [rip+0x2276],rsi        # 404070 <_head_lib64_libkernel32_a-0x4f90>
  401dfa:	mov    QWORD PTR [rip+0x227f],rax        # 404080 <_head_lib64_libkernel32_a-0x4f80>
  401e01:	add    rsp,0x40
  401e05:	pop    rbx
  401e06:	pop    rsi
  401e07:	pop    rdi
  401e08:	pop    rbp
  401e09:	pop    r12
  401e0b:	ret    
  401e0c:	nop    DWORD PTR [rax+0x0]
  401e10:	movabs rax,0xffffd466d2205dcc
  401e1a:	movabs rsi,0x2b992ddfa233
  401e24:	jmp    401df3 <_head_lib64_libkernel32_a-0x720d>
  401e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e30:	push   rbp
  401e31:	push   rsi
  401e32:	push   rbx
  401e33:	mov    rbp,rsp
  401e36:	sub    rsp,0x70
  401e3a:	mov    rsi,rcx
  401e3d:	lea    rcx,[rip+0x627c]        # 4080c0 <_head_lib64_libkernel32_a-0xf40>
  401e44:	call   QWORD PTR [rip+0x758e]        # 4093d8 <__imp_RtlCaptureContext>
  401e4a:	mov    rbx,QWORD PTR [rip+0x6367]        # 4081b8 <_head_lib64_libkernel32_a-0xe48>
  401e51:	xor    r8d,r8d
  401e54:	lea    rdx,[rbp-0x28]
  401e58:	mov    rcx,rbx
  401e5b:	call   QWORD PTR [rip+0x757f]        # 4093e0 <__imp_RtlLookupFunctionEntry>
  401e61:	test   rax,rax
  401e64:	mov    r9,rax
  401e67:	je     401f10 <_head_lib64_libkernel32_a-0x70f0>
  401e6d:	lea    rax,[rbp-0x20]
  401e71:	mov    QWORD PTR [rsp+0x38],0x0
  401e7a:	mov    r8,rbx
  401e7d:	mov    rdx,QWORD PTR [rbp-0x28]
  401e81:	xor    ecx,ecx
  401e83:	mov    QWORD PTR [rsp+0x30],rax
  401e88:	lea    rax,[rbp-0x18]
  401e8c:	mov    QWORD PTR [rsp+0x28],rax
  401e91:	lea    rax,[rip+0x6228]        # 4080c0 <_head_lib64_libkernel32_a-0xf40>
  401e98:	mov    QWORD PTR [rsp+0x20],rax
  401e9d:	call   QWORD PTR [rip+0x7545]        # 4093e8 <__imp_RtlVirtualUnwind>
  401ea3:	mov    rax,QWORD PTR [rip+0x630e]        # 4081b8 <_head_lib64_libkernel32_a-0xe48>
  401eaa:	xor    ecx,ecx
  401eac:	mov    QWORD PTR [rip+0x628d],rsi        # 408140 <_head_lib64_libkernel32_a-0xec0>
  401eb3:	mov    DWORD PTR [rip+0x6703],0xc0000409        # 4085c0 <_head_lib64_libkernel32_a-0xa40>
  401ebd:	mov    DWORD PTR [rip+0x66fd],0x1        # 4085c4 <_head_lib64_libkernel32_a-0xa3c>
  401ec7:	mov    QWORD PTR [rip+0x6702],rax        # 4085d0 <_head_lib64_libkernel32_a-0xa30>
  401ece:	mov    rax,QWORD PTR [rip+0x219b]        # 404070 <_head_lib64_libkernel32_a-0x4f90>
  401ed5:	mov    QWORD PTR [rbp-0x10],rax
  401ed9:	mov    rax,QWORD PTR [rip+0x21a0]        # 404080 <_head_lib64_libkernel32_a-0x4f80>
  401ee0:	mov    QWORD PTR [rbp-0x8],rax
  401ee4:	call   QWORD PTR [rip+0x7506]        # 4093f0 <__imp_SetUnhandledExceptionFilter>
  401eea:	lea    rcx,[rip+0x34cf]        # 4053c0 <_head_lib64_libkernel32_a-0x3c40>
  401ef1:	call   QWORD PTR [rip+0x7519]        # 409410 <__imp_UnhandledExceptionFilter>
  401ef7:	call   QWORD PTR [rip+0x7473]        # 409370 <__imp_GetCurrentProcess>
  401efd:	mov    edx,0xc0000409
  401f02:	mov    rcx,rax
  401f05:	call   QWORD PTR [rip+0x74f5]        # 409400 <__imp_TerminateProcess>
  401f0b:	call   403158 <_head_lib64_libkernel32_a-0x5ea8>
  401f10:	mov    rax,QWORD PTR [rbp+0x18]
  401f14:	mov    QWORD PTR [rip+0x629d],rax        # 4081b8 <_head_lib64_libkernel32_a-0xe48>
  401f1b:	lea    rax,[rbp+0x8]
  401f1f:	mov    QWORD PTR [rip+0x6232],rax        # 408158 <_head_lib64_libkernel32_a-0xea8>
  401f26:	jmp    401ea3 <_head_lib64_libkernel32_a-0x715d>
  401f2b:	nop
  401f2c:	nop
  401f2d:	nop
  401f2e:	nop
  401f2f:	nop
  401f30:	sub    rsp,0x28
  401f34:	test   edx,edx
  401f36:	je     401f50 <_head_lib64_libkernel32_a-0x70b0>
  401f38:	cmp    edx,0x3
  401f3b:	je     401f50 <_head_lib64_libkernel32_a-0x70b0>
  401f3d:	mov    eax,0x1
  401f42:	add    rsp,0x28
  401f46:	ret    
  401f47:	nop    WORD PTR [rax+rax*1+0x0]
  401f50:	call   402c40 <_head_lib64_libkernel32_a-0x63c0>
  401f55:	mov    eax,0x1
  401f5a:	add    rsp,0x28
  401f5e:	ret    
  401f5f:	nop
  401f60:	push   rsi
  401f61:	push   rbx
  401f62:	sub    rsp,0x28
  401f66:	mov    rax,QWORD PTR [rip+0x36d3]        # 405640 <_head_lib64_libkernel32_a-0x39c0>
  401f6d:	cmp    DWORD PTR [rax],0x2
  401f70:	je     401f78 <_head_lib64_libkernel32_a-0x7088>
  401f72:	mov    DWORD PTR [rax],0x2
  401f78:	cmp    edx,0x2
  401f7b:	je     401f90 <_head_lib64_libkernel32_a-0x7070>
  401f7d:	cmp    edx,0x1
  401f80:	je     401fc2 <_head_lib64_libkernel32_a-0x703e>
  401f82:	mov    eax,0x1
  401f87:	add    rsp,0x28
  401f8b:	pop    rbx
  401f8c:	pop    rsi
  401f8d:	ret    
  401f8e:	xchg   ax,ax
  401f90:	lea    rbx,[rip+0x80c9]        # 40a060 <libintl_8_dll_iname+0x2c0>
  401f97:	lea    rsi,[rip+0x80c2]        # 40a060 <libintl_8_dll_iname+0x2c0>
  401f9e:	cmp    rbx,rsi
  401fa1:	je     401f82 <_head_lib64_libkernel32_a-0x707e>
  401fa3:	mov    rax,QWORD PTR [rbx]
  401fa6:	test   rax,rax
  401fa9:	je     401fad <_head_lib64_libkernel32_a-0x7053>
  401fab:	call   rax
  401fad:	add    rbx,0x8
  401fb1:	cmp    rbx,rsi
  401fb4:	jne    401fa3 <_head_lib64_libkernel32_a-0x705d>
  401fb6:	mov    eax,0x1
  401fbb:	add    rsp,0x28
  401fbf:	pop    rbx
  401fc0:	pop    rsi
  401fc1:	ret    
  401fc2:	call   402c40 <_head_lib64_libkernel32_a-0x63c0>
  401fc7:	jmp    401f82 <_head_lib64_libkernel32_a-0x707e>
  401fc9:	nop    DWORD PTR [rax+0x0]
  401fd0:	xor    eax,eax
  401fd2:	ret    
  401fd3:	nop
  401fd4:	nop
  401fd5:	nop
  401fd6:	nop
  401fd7:	nop
  401fd8:	nop
  401fd9:	nop
  401fda:	nop
  401fdb:	nop
  401fdc:	nop
  401fdd:	nop
  401fde:	nop
  401fdf:	nop
  401fe0:	sub    rsp,0x58
  401fe4:	mov    rax,QWORD PTR [rip+0x66b5]        # 4086a0 <_head_lib64_libkernel32_a-0x960>
  401feb:	test   rax,rax
  401fee:	je     40201c <_head_lib64_libkernel32_a-0x6fe4>
  401ff0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401ff9:	mov    DWORD PTR [rsp+0x20],ecx
  401ffd:	lea    rcx,[rsp+0x20]
  402002:	mov    QWORD PTR [rsp+0x28],rdx
  402007:	movsd  QWORD PTR [rsp+0x30],xmm2
  40200d:	movsd  QWORD PTR [rsp+0x38],xmm3
  402013:	movsd  QWORD PTR [rsp+0x40],xmm0
  402019:	call   rax
  40201b:	nop
  40201c:	add    rsp,0x58
  402020:	ret    
  402021:	nop    DWORD PTR [rax+rax*1+0x0]
  402026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402030:	mov    QWORD PTR [rip+0x6669],rcx        # 4086a0 <_head_lib64_libkernel32_a-0x960>
  402037:	jmp    403190 <_head_lib64_libkernel32_a-0x5e70>
  40203c:	nop    DWORD PTR [rax+0x0]
  402040:	push   rsi
  402041:	push   rbx
  402042:	sub    rsp,0x78
  402046:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40204b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  402050:	movaps XMMWORD PTR [rsp+0x60],xmm8
  402056:	cmp    DWORD PTR [rcx],0x6
  402059:	ja     402130 <_head_lib64_libkernel32_a-0x6ed0>
  40205f:	mov    edx,DWORD PTR [rcx]
  402061:	lea    rax,[rip+0x349c]        # 405504 <_head_lib64_libkernel32_a-0x3afc>
  402068:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40206c:	add    rax,rdx
  40206f:	jmp    rax
  402071:	lea    rbx,[rip+0x3368]        # 4053e0 <_head_lib64_libkernel32_a-0x3c20>
  402078:	nop    DWORD PTR [rax+rax*1+0x0]
  402080:	movsd  xmm8,QWORD PTR [rcx+0x20]
  402086:	mov    rsi,QWORD PTR [rcx+0x8]
  40208a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40208f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  402094:	call   4031a8 <_head_lib64_libkernel32_a-0x5e58>
  402099:	movsd  QWORD PTR [rsp+0x30],xmm8
  4020a0:	lea    rcx,[rax+0x60]
  4020a4:	lea    rdx,[rip+0x342d]        # 4054d8 <_head_lib64_libkernel32_a-0x3b28>
  4020ab:	movsd  QWORD PTR [rsp+0x28],xmm7
  4020b1:	mov    r9,rsi
  4020b4:	mov    r8,rbx
  4020b7:	movsd  QWORD PTR [rsp+0x20],xmm6
  4020bd:	call   403140 <_head_lib64_libkernel32_a-0x5ec0>
  4020c2:	nop
  4020c3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4020c8:	xor    eax,eax
  4020ca:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4020cf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4020d5:	add    rsp,0x78
  4020d9:	pop    rbx
  4020da:	pop    rsi
  4020db:	ret    
  4020dc:	nop    DWORD PTR [rax+0x0]
  4020e0:	lea    rbx,[rip+0x3318]        # 4053ff <_head_lib64_libkernel32_a-0x3c01>
  4020e7:	jmp    402080 <_head_lib64_libkernel32_a-0x6f80>
  4020e9:	nop    DWORD PTR [rax+0x0]
  4020f0:	lea    rbx,[rip+0x3329]        # 405420 <_head_lib64_libkernel32_a-0x3be0>
  4020f7:	jmp    402080 <_head_lib64_libkernel32_a-0x6f80>
  4020f9:	nop    DWORD PTR [rax+0x0]
  402100:	lea    rbx,[rip+0x3389]        # 405490 <_head_lib64_libkernel32_a-0x3b70>
  402107:	jmp    402080 <_head_lib64_libkernel32_a-0x6f80>
  40210c:	nop    DWORD PTR [rax+0x0]
  402110:	lea    rbx,[rip+0x3351]        # 405468 <_head_lib64_libkernel32_a-0x3b98>
  402117:	jmp    402080 <_head_lib64_libkernel32_a-0x6f80>
  40211c:	nop    DWORD PTR [rax+0x0]
  402120:	lea    rbx,[rip+0x3319]        # 405440 <_head_lib64_libkernel32_a-0x3bc0>
  402127:	jmp    402080 <_head_lib64_libkernel32_a-0x6f80>
  40212c:	nop    DWORD PTR [rax+0x0]
  402130:	lea    rbx,[rip+0x338f]        # 4054c6 <_head_lib64_libkernel32_a-0x3b3a>
  402137:	jmp    402080 <_head_lib64_libkernel32_a-0x6f80>
  40213c:	nop
  40213d:	nop
  40213e:	nop
  40213f:	nop
  402140:	fninit 
  402142:	ret    
  402143:	nop
  402144:	nop
  402145:	nop
  402146:	nop
  402147:	nop
  402148:	nop
  402149:	nop
  40214a:	nop
  40214b:	nop
  40214c:	nop
  40214d:	nop
  40214e:	nop
  40214f:	nop
  402150:	mov    rax,rcx
  402153:	ret    
  402154:	xchg   ax,ax
  402156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402160:	mov    rax,rcx
  402163:	ret    
  402164:	nop
  402165:	nop
  402166:	nop
  402167:	nop
  402168:	nop
  402169:	nop
  40216a:	nop
  40216b:	nop
  40216c:	nop
  40216d:	nop
  40216e:	nop
  40216f:	nop
  402170:	push   rsi
  402171:	push   rbx
  402172:	sub    rsp,0x38
  402176:	lea    rax,[rsp+0x58]
  40217b:	mov    rbx,rcx
  40217e:	mov    QWORD PTR [rsp+0x58],rdx
  402183:	mov    QWORD PTR [rsp+0x60],r8
  402188:	mov    QWORD PTR [rsp+0x68],r9
  40218d:	mov    QWORD PTR [rsp+0x28],rax
  402192:	call   4031a8 <_head_lib64_libkernel32_a-0x5e58>
  402197:	lea    rcx,[rip+0x3382]        # 405520 <_head_lib64_libkernel32_a-0x3ae0>
  40219e:	lea    r9,[rax+0x60]
  4021a2:	mov    r8d,0x1b
  4021a8:	mov    edx,0x1
  4021ad:	call   403130 <_head_lib64_libkernel32_a-0x5ed0>
  4021b2:	mov    rsi,QWORD PTR [rsp+0x28]
  4021b7:	call   4031a8 <_head_lib64_libkernel32_a-0x5e58>
  4021bc:	lea    rcx,[rax+0x60]
  4021c0:	mov    rdx,rbx
  4021c3:	mov    r8,rsi
  4021c6:	call   403100 <_head_lib64_libkernel32_a-0x5f00>
  4021cb:	call   403158 <_head_lib64_libkernel32_a-0x5ea8>
  4021d0:	nop
  4021d1:	nop    DWORD PTR [rax+rax*1+0x0]
  4021d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021e0:	push   r13
  4021e2:	push   r12
  4021e4:	push   rbp
  4021e5:	push   rdi
  4021e6:	push   rsi
  4021e7:	push   rbx
  4021e8:	sub    rsp,0x58
  4021ec:	movsxd rbp,DWORD PTR [rip+0x64d1]        # 4086c4 <_head_lib64_libkernel32_a-0x93c>
  4021f3:	mov    rbx,rcx
  4021f6:	mov    rsi,rdx
  4021f9:	mov    rdi,r8
  4021fc:	test   ebp,ebp
  4021fe:	jle    4022fa <_head_lib64_libkernel32_a-0x6d06>
  402204:	mov    rax,QWORD PTR [rip+0x64bd]        # 4086c8 <_head_lib64_libkernel32_a-0x938>
  40220b:	xor    r9d,r9d
  40220e:	add    rax,0x8
  402212:	mov    r10,QWORD PTR [rax]
  402215:	cmp    rbx,r10
  402218:	jb     40222e <_head_lib64_libkernel32_a-0x6dd2>
  40221a:	mov    rdx,QWORD PTR [rax+0x8]
  40221e:	mov    r11d,DWORD PTR [rdx+0x8]
  402222:	add    r10,r11
  402225:	cmp    rbx,r10
  402228:	jb     4022e0 <_head_lib64_libkernel32_a-0x6d20>
  40222e:	add    r9d,0x1
  402232:	add    rax,0x18
  402236:	cmp    r9d,ebp
  402239:	jne    402212 <_head_lib64_libkernel32_a-0x6dee>
  40223b:	mov    rcx,rbx
  40223e:	call   402e50 <_head_lib64_libkernel32_a-0x61b0>
  402243:	test   rax,rax
  402246:	mov    r12,rax
  402249:	je     402332 <_head_lib64_libkernel32_a-0x6cce>
  40224f:	lea    rbp,[rbp+rbp*2+0x0]
  402254:	shl    rbp,0x3
  402258:	mov    r13,rbp
  40225b:	add    r13,QWORD PTR [rip+0x6466]        # 4086c8 <_head_lib64_libkernel32_a-0x938>
  402262:	mov    QWORD PTR [r13+0x10],rax
  402266:	mov    DWORD PTR [r13+0x0],0x0
  40226e:	call   402f70 <_head_lib64_libkernel32_a-0x6090>
  402273:	mov    edx,DWORD PTR [r12+0xc]
  402278:	mov    r8d,0x30
  40227e:	add    rax,rdx
  402281:	lea    rdx,[rsp+0x20]
  402286:	mov    QWORD PTR [r13+0x8],rax
  40228a:	mov    rax,QWORD PTR [rip+0x6437]        # 4086c8 <_head_lib64_libkernel32_a-0x938>
  402291:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  402296:	call   QWORD PTR [rip+0x7184]        # 409420 <__imp_VirtualQuery>
  40229c:	test   rax,rax
  40229f:	je     402315 <_head_lib64_libkernel32_a-0x6ceb>
  4022a1:	mov    eax,DWORD PTR [rsp+0x44]
  4022a5:	lea    edx,[rax-0x4]
  4022a8:	and    edx,0xfffffffb
  4022ab:	je     4022d9 <_head_lib64_libkernel32_a-0x6d27>
  4022ad:	sub    eax,0x40
  4022b0:	and    eax,0xffffffbf
  4022b3:	je     4022d9 <_head_lib64_libkernel32_a-0x6d27>
  4022b5:	mov    r9,rbp
  4022b8:	add    r9,QWORD PTR [rip+0x6409]        # 4086c8 <_head_lib64_libkernel32_a-0x938>
  4022bf:	mov    r8d,0x40
  4022c5:	mov    rdx,QWORD PTR [rsp+0x38]
  4022ca:	mov    rcx,QWORD PTR [rsp+0x20]
  4022cf:	call   QWORD PTR [rip+0x7143]        # 409418 <__imp_VirtualProtect>
  4022d5:	test   eax,eax
  4022d7:	je     402301 <_head_lib64_libkernel32_a-0x6cff>
  4022d9:	add    DWORD PTR [rip+0x63e4],0x1        # 4086c4 <_head_lib64_libkernel32_a-0x93c>
  4022e0:	mov    r8,rdi
  4022e3:	mov    rdx,rsi
  4022e6:	mov    rcx,rbx
  4022e9:	add    rsp,0x58
  4022ed:	pop    rbx
  4022ee:	pop    rsi
  4022ef:	pop    rdi
  4022f0:	pop    rbp
  4022f1:	pop    r12
  4022f3:	pop    r13
  4022f5:	jmp    403120 <_head_lib64_libkernel32_a-0x5ee0>
  4022fa:	xor    ebp,ebp
  4022fc:	jmp    40223b <_head_lib64_libkernel32_a-0x6dc5>
  402301:	call   QWORD PTR [rip+0x7081]        # 409388 <__imp_GetLastError>
  402307:	lea    rcx,[rip+0x328a]        # 405598 <_head_lib64_libkernel32_a-0x3a68>
  40230e:	mov    edx,eax
  402310:	call   402170 <_head_lib64_libkernel32_a-0x6e90>
  402315:	mov    rax,QWORD PTR [rip+0x63ac]        # 4086c8 <_head_lib64_libkernel32_a-0x938>
  40231c:	mov    edx,DWORD PTR [r12+0x8]
  402321:	lea    rcx,[rip+0x3238]        # 405560 <_head_lib64_libkernel32_a-0x3aa0>
  402328:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40232d:	call   402170 <_head_lib64_libkernel32_a-0x6e90>
  402332:	lea    rcx,[rip+0x3207]        # 405540 <_head_lib64_libkernel32_a-0x3ac0>
  402339:	mov    rdx,rbx
  40233c:	call   402170 <_head_lib64_libkernel32_a-0x6e90>
  402341:	nop
  402342:	nop    DWORD PTR [rax+0x0]
  402346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402350:	push   rbp
  402351:	push   r14
  402353:	push   r13
  402355:	push   r12
  402357:	push   rdi
  402358:	push   rsi
  402359:	push   rbx
  40235a:	mov    rbp,rsp
  40235d:	sub    rsp,0x60
  402361:	mov    ebx,DWORD PTR [rip+0x6359]        # 4086c0 <_head_lib64_libkernel32_a-0x940>
  402367:	test   ebx,ebx
  402369:	je     402380 <_head_lib64_libkernel32_a-0x6c80>
  40236b:	mov    rsp,rbp
  40236e:	pop    rbx
  40236f:	pop    rsi
  402370:	pop    rdi
  402371:	pop    r12
  402373:	pop    r13
  402375:	pop    r14
  402377:	pop    rbp
  402378:	ret    
  402379:	nop    DWORD PTR [rax+0x0]
  402380:	mov    DWORD PTR [rip+0x6336],0x1        # 4086c0 <_head_lib64_libkernel32_a-0x940>
  40238a:	call   402ea0 <_head_lib64_libkernel32_a-0x6160>
  40238f:	cdqe   
  402391:	lea    rax,[rax+rax*2]
  402395:	lea    rax,[rax*8+0x1e]
  40239d:	and    rax,0xfffffffffffffff0
  4023a1:	call   4030c0 <_head_lib64_libkernel32_a-0x5f40>
  4023a6:	mov    rsi,QWORD PTR [rip+0x32c3]        # 405670 <_head_lib64_libkernel32_a-0x3990>
  4023ad:	mov    rbx,QWORD PTR [rip+0x32cc]        # 405680 <_head_lib64_libkernel32_a-0x3980>
  4023b4:	sub    rsp,rax
  4023b7:	mov    DWORD PTR [rip+0x6303],0x0        # 4086c4 <_head_lib64_libkernel32_a-0x93c>
  4023c1:	lea    rax,[rsp+0x20]
  4023c6:	mov    QWORD PTR [rip+0x62fb],rax        # 4086c8 <_head_lib64_libkernel32_a-0x938>
  4023cd:	mov    rax,rsi
  4023d0:	sub    rax,rbx
  4023d3:	cmp    rax,0x7
  4023d7:	jle    40236b <_head_lib64_libkernel32_a-0x6c95>
  4023d9:	cmp    rax,0xb
  4023dd:	jle    402405 <_head_lib64_libkernel32_a-0x6bfb>
  4023df:	mov    r11d,DWORD PTR [rbx]
  4023e2:	test   r11d,r11d
  4023e5:	jne    402530 <_head_lib64_libkernel32_a-0x6ad0>
  4023eb:	mov    r10d,DWORD PTR [rbx+0x4]
  4023ef:	test   r10d,r10d
  4023f2:	jne    402530 <_head_lib64_libkernel32_a-0x6ad0>
  4023f8:	mov    r9d,DWORD PTR [rbx+0x8]
  4023fc:	test   r9d,r9d
  4023ff:	jne    40241c <_head_lib64_libkernel32_a-0x6be4>
  402401:	add    rbx,0xc
  402405:	mov    r8d,DWORD PTR [rbx]
  402408:	test   r8d,r8d
  40240b:	jne    402530 <_head_lib64_libkernel32_a-0x6ad0>
  402411:	mov    ecx,DWORD PTR [rbx+0x4]
  402414:	test   ecx,ecx
  402416:	jne    402530 <_head_lib64_libkernel32_a-0x6ad0>
  40241c:	mov    edx,DWORD PTR [rbx+0x8]
  40241f:	cmp    edx,0x1
  402422:	jne    40263c <_head_lib64_libkernel32_a-0x69c4>
  402428:	add    rbx,0xc
  40242c:	cmp    rbx,rsi
  40242f:	jae    40236b <_head_lib64_libkernel32_a-0x6c95>
  402435:	mov    r12,QWORD PTR [rip+0x3264]        # 4056a0 <_head_lib64_libkernel32_a-0x3960>
  40243c:	lea    r13,[rbp-0x30]
  402440:	movabs r14,0xffffffff00000000
  40244a:	mov    ecx,DWORD PTR [rbx+0x4]
  40244d:	mov    eax,DWORD PTR [rbx]
  40244f:	movzx  edx,BYTE PTR [rbx+0x8]
  402453:	add    rax,r12
  402456:	add    rcx,r12
  402459:	cmp    edx,0x10
  40245c:	mov    r8,QWORD PTR [rax]
  40245f:	je     4025a6 <_head_lib64_libkernel32_a-0x6a5a>
  402465:	jbe    40256d <_head_lib64_libkernel32_a-0x6a93>
  40246b:	cmp    edx,0x20
  40246e:	je     4025ef <_head_lib64_libkernel32_a-0x6a11>
  402474:	cmp    edx,0x40
  402477:	jne    4025db <_head_lib64_libkernel32_a-0x6a25>
  40247d:	sub    r8,rax
  402480:	mov    rdx,r13
  402483:	mov    rdi,r13
  402486:	mov    rax,r8
  402489:	add    rax,QWORD PTR [rcx]
  40248c:	mov    r8d,0x8
  402492:	mov    QWORD PTR [rbp-0x30],rax
  402496:	call   4021e0 <_head_lib64_libkernel32_a-0x6e20>
  40249b:	add    rbx,0xc
  40249f:	cmp    rbx,rsi
  4024a2:	jb     40244a <_head_lib64_libkernel32_a-0x6bb6>
  4024a4:	mov    eax,DWORD PTR [rip+0x621a]        # 4086c4 <_head_lib64_libkernel32_a-0x93c>
  4024aa:	xor    ebx,ebx
  4024ac:	xor    esi,esi
  4024ae:	test   eax,eax
  4024b0:	jle    40236b <_head_lib64_libkernel32_a-0x6c95>
  4024b6:	mov    r14,QWORD PTR [rip+0x6f63]        # 409420 <__imp_VirtualQuery>
  4024bd:	lea    r13,[rbp-0x34]
  4024c1:	mov    r12,QWORD PTR [rip+0x6f50]        # 409418 <__imp_VirtualProtect>
  4024c8:	jmp    4024e3 <_head_lib64_libkernel32_a-0x6b1d>
  4024ca:	nop    WORD PTR [rax+rax*1+0x0]
  4024d0:	add    esi,0x1
  4024d3:	add    rbx,0x18
  4024d7:	cmp    esi,DWORD PTR [rip+0x61e7]        # 4086c4 <_head_lib64_libkernel32_a-0x93c>
  4024dd:	jge    40236b <_head_lib64_libkernel32_a-0x6c95>
  4024e3:	mov    rax,rbx
  4024e6:	add    rax,QWORD PTR [rip+0x61db]        # 4086c8 <_head_lib64_libkernel32_a-0x938>
  4024ed:	mov    edx,DWORD PTR [rax]
  4024ef:	test   edx,edx
  4024f1:	je     4024d0 <_head_lib64_libkernel32_a-0x6b30>
  4024f3:	mov    rcx,QWORD PTR [rax+0x8]
  4024f7:	mov    r8d,0x30
  4024fd:	mov    rdx,rdi
  402500:	call   r14
  402503:	test   rax,rax
  402506:	je     40261e <_head_lib64_libkernel32_a-0x69e2>
  40250c:	mov    rax,QWORD PTR [rip+0x61b5]        # 4086c8 <_head_lib64_libkernel32_a-0x938>
  402513:	mov    r9,r13
  402516:	mov    rdx,QWORD PTR [rbp-0x18]
  40251a:	mov    rcx,QWORD PTR [rbp-0x30]
  40251e:	mov    r8d,DWORD PTR [rax+rbx*1]
  402522:	call   r12
  402525:	jmp    4024d0 <_head_lib64_libkernel32_a-0x6b30>
  402527:	nop    WORD PTR [rax+rax*1+0x0]
  402530:	cmp    rbx,rsi
  402533:	jae    40236b <_head_lib64_libkernel32_a-0x6c95>
  402539:	mov    r12,QWORD PTR [rip+0x3160]        # 4056a0 <_head_lib64_libkernel32_a-0x3960>
  402540:	lea    rdi,[rbp-0x30]
  402544:	mov    ecx,DWORD PTR [rbx+0x4]
  402547:	mov    eax,DWORD PTR [rbx]
  402549:	mov    r8d,0x4
  40254f:	mov    rdx,rdi
  402552:	add    rbx,0x8
  402556:	add    rcx,r12
  402559:	add    eax,DWORD PTR [rcx]
  40255b:	mov    DWORD PTR [rbp-0x30],eax
  40255e:	call   4021e0 <_head_lib64_libkernel32_a-0x6e20>
  402563:	cmp    rbx,rsi
  402566:	jb     402544 <_head_lib64_libkernel32_a-0x6abc>
  402568:	jmp    4024a4 <_head_lib64_libkernel32_a-0x6b5c>
  40256d:	cmp    edx,0x8
  402570:	jne    4025db <_head_lib64_libkernel32_a-0x6a25>
  402572:	movzx  edx,BYTE PTR [rcx]
  402575:	mov    rdi,r13
  402578:	mov    r10,rdx
  40257b:	or     r10,0xffffffffffffff00
  402582:	test   dl,dl
  402584:	cmovs  rdx,r10
  402588:	sub    rdx,rax
  40258b:	lea    rax,[r8+rdx*1]
  40258f:	mov    r8d,0x1
  402595:	mov    rdx,r13
  402598:	mov    QWORD PTR [rbp-0x30],rax
  40259c:	call   4021e0 <_head_lib64_libkernel32_a-0x6e20>
  4025a1:	jmp    40249b <_head_lib64_libkernel32_a-0x6b65>
  4025a6:	movzx  edx,WORD PTR [rcx]
  4025a9:	mov    rdi,r13
  4025ac:	mov    r10,rdx
  4025af:	or     r10,0xffffffffffff0000
  4025b6:	test   dx,dx
  4025b9:	cmovs  rdx,r10
  4025bd:	sub    rdx,rax
  4025c0:	lea    rax,[r8+rdx*1]
  4025c4:	mov    r8d,0x2
  4025ca:	mov    rdx,r13
  4025cd:	mov    QWORD PTR [rbp-0x30],rax
  4025d1:	call   4021e0 <_head_lib64_libkernel32_a-0x6e20>
  4025d6:	jmp    40249b <_head_lib64_libkernel32_a-0x6b65>
  4025db:	lea    rcx,[rip+0x3016]        # 4055f8 <_head_lib64_libkernel32_a-0x3a08>
  4025e2:	mov    QWORD PTR [rbp-0x30],0x0
  4025ea:	call   402170 <_head_lib64_libkernel32_a-0x6e90>
  4025ef:	mov    edx,DWORD PTR [rcx]
  4025f1:	mov    rdi,r13
  4025f4:	mov    r10,rdx
  4025f7:	or     r10,r14
  4025fa:	test   edx,edx
  4025fc:	cmovs  rdx,r10
  402600:	sub    rdx,rax
  402603:	lea    rax,[r8+rdx*1]
  402607:	mov    r8d,0x4
  40260d:	mov    rdx,r13
  402610:	mov    QWORD PTR [rbp-0x30],rax
  402614:	call   4021e0 <_head_lib64_libkernel32_a-0x6e20>
  402619:	jmp    40249b <_head_lib64_libkernel32_a-0x6b65>
  40261e:	add    rbx,QWORD PTR [rip+0x60a3]        # 4086c8 <_head_lib64_libkernel32_a-0x938>
  402625:	lea    rcx,[rip+0x2f34]        # 405560 <_head_lib64_libkernel32_a-0x3aa0>
  40262c:	mov    rax,QWORD PTR [rbx+0x10]
  402630:	mov    r8,QWORD PTR [rbx+0x8]
  402634:	mov    edx,DWORD PTR [rax+0x8]
  402637:	call   402170 <_head_lib64_libkernel32_a-0x6e90>
  40263c:	lea    rcx,[rip+0x2f7d]        # 4055c0 <_head_lib64_libkernel32_a-0x3a40>
  402643:	call   402170 <_head_lib64_libkernel32_a-0x6e90>
  402648:	nop
  402649:	nop
  40264a:	nop
  40264b:	nop
  40264c:	nop
  40264d:	nop
  40264e:	nop
  40264f:	nop
  402650:	sub    rsp,0x28
  402654:	mov    eax,DWORD PTR [rcx]
  402656:	cmp    eax,0xc0000091
  40265b:	ja     4026c0 <_head_lib64_libkernel32_a-0x6940>
  40265d:	cmp    eax,0xc000008d
  402662:	jae    4026df <_head_lib64_libkernel32_a-0x6921>
  402664:	cmp    eax,0xc0000008
  402669:	je     402780 <_head_lib64_libkernel32_a-0x6880>
  40266f:	ja     402750 <_head_lib64_libkernel32_a-0x68b0>
  402675:	cmp    eax,0x80000002
  40267a:	je     402780 <_head_lib64_libkernel32_a-0x6880>
  402680:	cmp    eax,0xc0000005
  402685:	jne    40275e <_head_lib64_libkernel32_a-0x68a2>
  40268b:	xor    edx,edx
  40268d:	mov    ecx,0xb
  402692:	call   403118 <_head_lib64_libkernel32_a-0x5ee8>
  402697:	cmp    rax,0x1
  40269b:	je     4027e0 <_head_lib64_libkernel32_a-0x6820>
  4026a1:	test   rax,rax
  4026a4:	je     4027c0 <_head_lib64_libkernel32_a-0x6840>
  4026aa:	mov    ecx,0xb
  4026af:	call   rax
  4026b1:	xor    eax,eax
  4026b3:	add    rsp,0x28
  4026b7:	ret    
  4026b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4026c0:	cmp    eax,0xc0000094
  4026c5:	je     402790 <_head_lib64_libkernel32_a-0x6870>
  4026cb:	ja     402710 <_head_lib64_libkernel32_a-0x68f0>
  4026cd:	cmp    eax,0xc0000092
  4026d2:	je     402780 <_head_lib64_libkernel32_a-0x6880>
  4026d8:	cmp    eax,0xc0000093
  4026dd:	jne    40275e <_head_lib64_libkernel32_a-0x68a2>
  4026df:	xor    edx,edx
  4026e1:	mov    ecx,0x8
  4026e6:	call   403118 <_head_lib64_libkernel32_a-0x5ee8>
  4026eb:	cmp    rax,0x1
  4026ef:	mov    rdx,rax
  4026f2:	je     402768 <_head_lib64_libkernel32_a-0x6898>
  4026f4:	test   rdx,rdx
  4026f7:	mov    eax,0x1
  4026fc:	je     4026b3 <_head_lib64_libkernel32_a-0x694d>
  4026fe:	mov    ecx,0x8
  402703:	call   rdx
  402705:	xor    eax,eax
  402707:	add    rsp,0x28
  40270b:	ret    
  40270c:	nop    DWORD PTR [rax+0x0]
  402710:	cmp    eax,0xc0000095
  402715:	je     402780 <_head_lib64_libkernel32_a-0x6880>
  402717:	cmp    eax,0xc0000096
  40271c:	jne    40275e <_head_lib64_libkernel32_a-0x68a2>
  40271e:	xor    edx,edx
  402720:	mov    ecx,0x4
  402725:	call   403118 <_head_lib64_libkernel32_a-0x5ee8>
  40272a:	cmp    rax,0x1
  40272e:	je     4027ca <_head_lib64_libkernel32_a-0x6836>
  402734:	test   rax,rax
  402737:	je     4027c0 <_head_lib64_libkernel32_a-0x6840>
  40273d:	mov    ecx,0x4
  402742:	call   rax
  402744:	xor    eax,eax
  402746:	jmp    4026b3 <_head_lib64_libkernel32_a-0x694d>
  40274b:	nop    DWORD PTR [rax+rax*1+0x0]
  402750:	cmp    eax,0xc000001d
  402755:	je     40271e <_head_lib64_libkernel32_a-0x68e2>
  402757:	cmp    eax,0xc000008c
  40275c:	je     402780 <_head_lib64_libkernel32_a-0x6880>
  40275e:	mov    eax,0x1
  402763:	add    rsp,0x28
  402767:	ret    
  402768:	mov    edx,0x1
  40276d:	mov    ecx,0x8
  402772:	call   403118 <_head_lib64_libkernel32_a-0x5ee8>
  402777:	call   402140 <_head_lib64_libkernel32_a-0x6ec0>
  40277c:	nop    DWORD PTR [rax+0x0]
  402780:	xor    eax,eax
  402782:	add    rsp,0x28
  402786:	ret    
  402787:	nop    WORD PTR [rax+rax*1+0x0]
  402790:	xor    edx,edx
  402792:	mov    ecx,0x8
  402797:	call   403118 <_head_lib64_libkernel32_a-0x5ee8>
  40279c:	cmp    rax,0x1
  4027a0:	mov    rdx,rax
  4027a3:	jne    4026f4 <_head_lib64_libkernel32_a-0x690c>
  4027a9:	mov    edx,0x1
  4027ae:	mov    ecx,0x8
  4027b3:	call   403118 <_head_lib64_libkernel32_a-0x5ee8>
  4027b8:	xor    eax,eax
  4027ba:	jmp    4026b3 <_head_lib64_libkernel32_a-0x694d>
  4027bf:	nop
  4027c0:	mov    eax,0x4
  4027c5:	add    rsp,0x28
  4027c9:	ret    
  4027ca:	mov    edx,0x1
  4027cf:	mov    ecx,0x4
  4027d4:	call   403118 <_head_lib64_libkernel32_a-0x5ee8>
  4027d9:	xor    eax,eax
  4027db:	jmp    4026b3 <_head_lib64_libkernel32_a-0x694d>
  4027e0:	mov    edx,0x1
  4027e5:	mov    ecx,0xb
  4027ea:	call   403118 <_head_lib64_libkernel32_a-0x5ee8>
  4027ef:	xor    eax,eax
  4027f1:	jmp    4026b3 <_head_lib64_libkernel32_a-0x694d>
  4027f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402800:	push   r12
  402802:	push   rbp
  402803:	push   rdi
  402804:	push   rsi
  402805:	push   rbx
  402806:	sub    rsp,0x20
  40280a:	call   402f70 <_head_lib64_libkernel32_a-0x6090>
  40280f:	mov    rbp,rax
  402812:	mov    eax,DWORD PTR [rip+0x5ef0]        # 408708 <_head_lib64_libkernel32_a-0x8f8>
  402818:	test   eax,eax
  40281a:	jne    402841 <_head_lib64_libkernel32_a-0x67bf>
  40281c:	test   rbp,rbp
  40281f:	je     402841 <_head_lib64_libkernel32_a-0x67bf>
  402821:	lea    rcx,[rip+0x2e08]        # 405630 <_head_lib64_libkernel32_a-0x39d0>
  402828:	mov    DWORD PTR [rip+0x5ed6],0x1        # 408708 <_head_lib64_libkernel32_a-0x8f8>
  402832:	call   402db0 <_head_lib64_libkernel32_a-0x6250>
  402837:	test   rax,rax
  40283a:	je     402850 <_head_lib64_libkernel32_a-0x67b0>
  40283c:	mov    eax,0x1
  402841:	add    rsp,0x20
  402845:	pop    rbx
  402846:	pop    rsi
  402847:	pop    rdi
  402848:	pop    rbp
  402849:	pop    r12
  40284b:	ret    
  40284c:	nop    DWORD PTR [rax+0x0]
  402850:	lea    rbx,[rip+0x5fe9]        # 408840 <_head_lib64_libkernel32_a-0x7c0>
  402857:	mov    ecx,0x30
  40285c:	lea    rdx,[rip+0x5edd]        # 408740 <_head_lib64_libkernel32_a-0x8c0>
  402863:	lea    r12,[rip+0xfffffffffffffde6]        # 402650 <_head_lib64_libkernel32_a-0x69b0>
  40286a:	xor    esi,esi
  40286c:	mov    rdi,rbx
  40286f:	rep stos QWORD PTR es:[rdi],rax
  402872:	mov    rdi,rdx
  402875:	sub    r12,rbp
  402878:	mov    cl,0x20
  40287a:	rep stos QWORD PTR es:[rdi],rax
  40287d:	mov    rdi,rdx
  402880:	jmp    4028b0 <_head_lib64_libkernel32_a-0x6750>
  402882:	mov    BYTE PTR [rdi],0x9
  402885:	mov    DWORD PTR [rdi+0x4],r12d
  402889:	add    rsi,0x1
  40288d:	mov    edx,DWORD PTR [rax+0xc]
  402890:	add    rbx,0xc
  402894:	mov    DWORD PTR [rbx-0xc],edx
  402897:	add    edx,DWORD PTR [rax+0x8]
  40289a:	mov    rax,rdi
  40289d:	sub    rax,rbp
  4028a0:	add    rdi,0x8
  4028a4:	mov    DWORD PTR [rbx-0x4],eax
  4028a7:	mov    DWORD PTR [rbx-0x8],edx
  4028aa:	cmp    rsi,0x20
  4028ae:	je     4028e5 <_head_lib64_libkernel32_a-0x671b>
  4028b0:	mov    rcx,rsi
  4028b3:	call   402ee0 <_head_lib64_libkernel32_a-0x6120>
  4028b8:	test   rax,rax
  4028bb:	jne    402882 <_head_lib64_libkernel32_a-0x677e>
  4028bd:	test   rsi,rsi
  4028c0:	je     40283c <_head_lib64_libkernel32_a-0x67c4>
  4028c6:	mov    edx,esi
  4028c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4028d0:	mov    r8,rbp
  4028d3:	lea    rcx,[rip+0x5f66]        # 408840 <_head_lib64_libkernel32_a-0x7c0>
  4028da:	call   QWORD PTR [rip+0x6af0]        # 4093d0 <__imp_RtlAddFunctionTable>
  4028e0:	jmp    40283c <_head_lib64_libkernel32_a-0x67c4>
  4028e5:	mov    edx,0x20
  4028ea:	jmp    4028d0 <_head_lib64_libkernel32_a-0x6730>
  4028ec:	nop    DWORD PTR [rax+0x0]
  4028f0:	push   rbx
  4028f1:	sub    rsp,0x20
  4028f5:	mov    rdx,QWORD PTR [rcx]
  4028f8:	mov    eax,DWORD PTR [rdx]
  4028fa:	mov    r8d,eax
  4028fd:	and    r8d,0x20ffffff
  402904:	cmp    r8d,0x20474343
  40290b:	je     402a10 <_head_lib64_libkernel32_a-0x65f0>
  402911:	cmp    eax,0xc0000091
  402916:	mov    rbx,rcx
  402919:	ja     4029a0 <_head_lib64_libkernel32_a-0x6660>
  40291f:	cmp    eax,0xc000008d
  402924:	jae    4029b7 <_head_lib64_libkernel32_a-0x6649>
  40292a:	cmp    eax,0xc0000008
  40292f:	je     402963 <_head_lib64_libkernel32_a-0x669d>
  402931:	ja     402970 <_head_lib64_libkernel32_a-0x6690>
  402933:	cmp    eax,0x80000002
  402938:	je     402963 <_head_lib64_libkernel32_a-0x669d>
  40293a:	cmp    eax,0xc0000005
  40293f:	jne    402982 <_head_lib64_libkernel32_a-0x667e>
  402941:	xor    edx,edx
  402943:	mov    ecx,0xb
  402948:	call   403118 <_head_lib64_libkernel32_a-0x5ee8>
  40294d:	cmp    rax,0x1
  402951:	je     402a80 <_head_lib64_libkernel32_a-0x6580>
  402957:	test   rax,rax
  40295a:	je     402982 <_head_lib64_libkernel32_a-0x667e>
  40295c:	mov    ecx,0xb
  402961:	call   rax
  402963:	mov    eax,0xffffffff
  402968:	add    rsp,0x20
  40296c:	pop    rbx
  40296d:	ret    
  40296e:	xchg   ax,ax
  402970:	cmp    eax,0xc000001d
  402975:	je     402a36 <_head_lib64_libkernel32_a-0x65ca>
  40297b:	cmp    eax,0xc000008c
  402980:	je     402963 <_head_lib64_libkernel32_a-0x669d>
  402982:	mov    rax,QWORD PTR [rip+0x5d77]        # 408700 <_head_lib64_libkernel32_a-0x900>
  402989:	test   rax,rax
  40298c:	je     402968 <_head_lib64_libkernel32_a-0x6698>
  40298e:	mov    rcx,rbx
  402991:	add    rsp,0x20
  402995:	pop    rbx
  402996:	rex.W jmp rax
  402999:	nop    DWORD PTR [rax+0x0]
  4029a0:	cmp    eax,0xc0000094
  4029a5:	je     4029e2 <_head_lib64_libkernel32_a-0x661e>
  4029a7:	ja     402a20 <_head_lib64_libkernel32_a-0x65e0>
  4029a9:	cmp    eax,0xc0000092
  4029ae:	je     402963 <_head_lib64_libkernel32_a-0x669d>
  4029b0:	cmp    eax,0xc0000093
  4029b5:	jne    402982 <_head_lib64_libkernel32_a-0x667e>
  4029b7:	xor    edx,edx
  4029b9:	mov    ecx,0x8
  4029be:	call   403118 <_head_lib64_libkernel32_a-0x5ee8>
  4029c3:	cmp    rax,0x1
  4029c7:	jne    4029f4 <_head_lib64_libkernel32_a-0x660c>
  4029c9:	mov    edx,0x1
  4029ce:	mov    ecx,0x8
  4029d3:	call   403118 <_head_lib64_libkernel32_a-0x5ee8>
  4029d8:	call   402140 <_head_lib64_libkernel32_a-0x6ec0>
  4029dd:	jmp    402963 <_head_lib64_libkernel32_a-0x669d>
  4029e2:	xor    edx,edx
  4029e4:	mov    ecx,0x8
  4029e9:	call   403118 <_head_lib64_libkernel32_a-0x5ee8>
  4029ee:	cmp    rax,0x1
  4029f2:	je     402a62 <_head_lib64_libkernel32_a-0x659e>
  4029f4:	test   rax,rax
  4029f7:	je     402982 <_head_lib64_libkernel32_a-0x667e>
  4029f9:	mov    ecx,0x8
  4029fe:	call   rax
  402a00:	mov    eax,0xffffffff
  402a05:	jmp    402968 <_head_lib64_libkernel32_a-0x6698>
  402a0a:	nop    WORD PTR [rax+rax*1+0x0]
  402a10:	test   BYTE PTR [rdx+0x4],0x1
  402a14:	jne    402911 <_head_lib64_libkernel32_a-0x66ef>
  402a1a:	jmp    402963 <_head_lib64_libkernel32_a-0x669d>
  402a1f:	nop
  402a20:	cmp    eax,0xc0000095
  402a25:	je     402963 <_head_lib64_libkernel32_a-0x669d>
  402a2b:	cmp    eax,0xc0000096
  402a30:	jne    402982 <_head_lib64_libkernel32_a-0x667e>
  402a36:	xor    edx,edx
  402a38:	mov    ecx,0x4
  402a3d:	call   403118 <_head_lib64_libkernel32_a-0x5ee8>
  402a42:	cmp    rax,0x1
  402a46:	je     402a94 <_head_lib64_libkernel32_a-0x656c>
  402a48:	test   rax,rax
  402a4b:	je     402982 <_head_lib64_libkernel32_a-0x667e>
  402a51:	mov    ecx,0x4
  402a56:	call   rax
  402a58:	mov    eax,0xffffffff
  402a5d:	jmp    402968 <_head_lib64_libkernel32_a-0x6698>
  402a62:	mov    edx,0x1
  402a67:	mov    ecx,0x8
  402a6c:	call   403118 <_head_lib64_libkernel32_a-0x5ee8>
  402a71:	jmp    402963 <_head_lib64_libkernel32_a-0x669d>
  402a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a80:	mov    edx,0x1
  402a85:	mov    ecx,0xb
  402a8a:	call   403118 <_head_lib64_libkernel32_a-0x5ee8>
  402a8f:	jmp    402963 <_head_lib64_libkernel32_a-0x669d>
  402a94:	mov    edx,0x1
  402a99:	mov    ecx,0x4
  402a9e:	call   403118 <_head_lib64_libkernel32_a-0x5ee8>
  402aa3:	jmp    402963 <_head_lib64_libkernel32_a-0x669d>
  402aa8:	nop
  402aa9:	nop
  402aaa:	nop
  402aab:	nop
  402aac:	nop
  402aad:	nop
  402aae:	nop
  402aaf:	nop
  402ab0:	push   rbp
  402ab1:	push   rdi
  402ab2:	push   rsi
  402ab3:	push   rbx
  402ab4:	sub    rsp,0x28
  402ab8:	lea    rcx,[rip+0x5f21]        # 4089e0 <_head_lib64_libkernel32_a-0x620>
  402abf:	call   QWORD PTR [rip+0x68a3]        # 409368 <__imp_EnterCriticalSection>
  402ac5:	mov    rbx,QWORD PTR [rip+0x5ef4]        # 4089c0 <_head_lib64_libkernel32_a-0x640>
  402acc:	test   rbx,rbx
  402acf:	je     402b04 <_head_lib64_libkernel32_a-0x64fc>
  402ad1:	mov    rbp,QWORD PTR [rip+0x6930]        # 409408 <__imp_TlsGetValue>
  402ad8:	mov    rdi,QWORD PTR [rip+0x68a9]        # 409388 <__imp_GetLastError>
  402adf:	nop
  402ae0:	mov    ecx,DWORD PTR [rbx]
  402ae2:	call   rbp
  402ae4:	mov    rsi,rax
  402ae7:	call   rdi
  402ae9:	test   eax,eax
  402aeb:	jne    402afb <_head_lib64_libkernel32_a-0x6505>
  402aed:	test   rsi,rsi
  402af0:	je     402afb <_head_lib64_libkernel32_a-0x6505>
  402af2:	mov    rax,QWORD PTR [rbx+0x8]
  402af6:	mov    rcx,rsi
  402af9:	call   rax
  402afb:	mov    rbx,QWORD PTR [rbx+0x10]
  402aff:	test   rbx,rbx
  402b02:	jne    402ae0 <_head_lib64_libkernel32_a-0x6520>
  402b04:	mov    rax,QWORD PTR [rip+0x68b5]        # 4093c0 <__imp_LeaveCriticalSection>
  402b0b:	lea    rcx,[rip+0x5ece]        # 4089e0 <_head_lib64_libkernel32_a-0x620>
  402b12:	add    rsp,0x28
  402b16:	pop    rbx
  402b17:	pop    rsi
  402b18:	pop    rdi
  402b19:	pop    rbp
  402b1a:	rex.W jmp rax
  402b1d:	nop    DWORD PTR [rax]
  402b20:	push   rdi
  402b21:	push   rsi
  402b22:	push   rbx
  402b23:	sub    rsp,0x20
  402b27:	mov    eax,DWORD PTR [rip+0x5e9b]        # 4089c8 <_head_lib64_libkernel32_a-0x638>
  402b2d:	test   eax,eax
  402b2f:	jne    402b40 <_head_lib64_libkernel32_a-0x64c0>
  402b31:	add    rsp,0x20
  402b35:	pop    rbx
  402b36:	pop    rsi
  402b37:	pop    rdi
  402b38:	ret    
  402b39:	nop    DWORD PTR [rax+0x0]
  402b40:	mov    rsi,rdx
  402b43:	mov    edi,ecx
  402b45:	mov    edx,0x18
  402b4a:	mov    ecx,0x1
  402b4f:	call   403150 <_head_lib64_libkernel32_a-0x5eb0>
  402b54:	test   rax,rax
  402b57:	mov    rbx,rax
  402b5a:	je     402b98 <_head_lib64_libkernel32_a-0x6468>
  402b5c:	mov    DWORD PTR [rax],edi
  402b5e:	mov    QWORD PTR [rax+0x8],rsi
  402b62:	lea    rcx,[rip+0x5e77]        # 4089e0 <_head_lib64_libkernel32_a-0x620>
  402b69:	call   QWORD PTR [rip+0x67f9]        # 409368 <__imp_EnterCriticalSection>
  402b6f:	mov    rax,QWORD PTR [rip+0x5e4a]        # 4089c0 <_head_lib64_libkernel32_a-0x640>
  402b76:	lea    rcx,[rip+0x5e63]        # 4089e0 <_head_lib64_libkernel32_a-0x620>
  402b7d:	mov    QWORD PTR [rip+0x5e3c],rbx        # 4089c0 <_head_lib64_libkernel32_a-0x640>
  402b84:	mov    QWORD PTR [rbx+0x10],rax
  402b88:	call   QWORD PTR [rip+0x6832]        # 4093c0 <__imp_LeaveCriticalSection>
  402b8e:	xor    eax,eax
  402b90:	add    rsp,0x20
  402b94:	pop    rbx
  402b95:	pop    rsi
  402b96:	pop    rdi
  402b97:	ret    
  402b98:	mov    eax,0xffffffff
  402b9d:	jmp    402b31 <_head_lib64_libkernel32_a-0x64cf>
  402b9f:	nop
  402ba0:	push   rbx
  402ba1:	sub    rsp,0x20
  402ba5:	mov    eax,DWORD PTR [rip+0x5e1d]        # 4089c8 <_head_lib64_libkernel32_a-0x638>
  402bab:	test   eax,eax
  402bad:	jne    402bc0 <_head_lib64_libkernel32_a-0x6440>
  402baf:	xor    eax,eax
  402bb1:	add    rsp,0x20
  402bb5:	pop    rbx
  402bb6:	ret    
  402bb7:	nop    WORD PTR [rax+rax*1+0x0]
  402bc0:	mov    ebx,ecx
  402bc2:	lea    rcx,[rip+0x5e17]        # 4089e0 <_head_lib64_libkernel32_a-0x620>
  402bc9:	call   QWORD PTR [rip+0x6799]        # 409368 <__imp_EnterCriticalSection>
  402bcf:	mov    rdx,QWORD PTR [rip+0x5dea]        # 4089c0 <_head_lib64_libkernel32_a-0x640>
  402bd6:	test   rdx,rdx
  402bd9:	je     402bf7 <_head_lib64_libkernel32_a-0x6409>
  402bdb:	mov    eax,DWORD PTR [rdx]
  402bdd:	cmp    eax,ebx
  402bdf:	jne    402bee <_head_lib64_libkernel32_a-0x6412>
  402be1:	jmp    402c2f <_head_lib64_libkernel32_a-0x63d1>
  402be3:	mov    r8d,DWORD PTR [rax]
  402be6:	cmp    r8d,ebx
  402be9:	je     402c10 <_head_lib64_libkernel32_a-0x63f0>
  402beb:	mov    rdx,rax
  402bee:	mov    rax,QWORD PTR [rdx+0x10]
  402bf2:	test   rax,rax
  402bf5:	jne    402be3 <_head_lib64_libkernel32_a-0x641d>
  402bf7:	lea    rcx,[rip+0x5de2]        # 4089e0 <_head_lib64_libkernel32_a-0x620>
  402bfe:	call   QWORD PTR [rip+0x67bc]        # 4093c0 <__imp_LeaveCriticalSection>
  402c04:	xor    eax,eax
  402c06:	add    rsp,0x20
  402c0a:	pop    rbx
  402c0b:	ret    
  402c0c:	nop    DWORD PTR [rax+0x0]
  402c10:	mov    rcx,rax
  402c13:	mov    rax,QWORD PTR [rax+0x10]
  402c17:	mov    QWORD PTR [rdx+0x10],rax
  402c1b:	call   403138 <_head_lib64_libkernel32_a-0x5ec8>
  402c20:	lea    rcx,[rip+0x5db9]        # 4089e0 <_head_lib64_libkernel32_a-0x620>
  402c27:	call   QWORD PTR [rip+0x6793]        # 4093c0 <__imp_LeaveCriticalSection>
  402c2d:	jmp    402c04 <_head_lib64_libkernel32_a-0x63fc>
  402c2f:	mov    rax,QWORD PTR [rdx+0x10]
  402c33:	mov    rcx,rdx
  402c36:	mov    QWORD PTR [rip+0x5d83],rax        # 4089c0 <_head_lib64_libkernel32_a-0x640>
  402c3d:	jmp    402c1b <_head_lib64_libkernel32_a-0x63e5>
  402c3f:	nop
  402c40:	push   rbx
  402c41:	sub    rsp,0x20
  402c45:	cmp    edx,0x1
  402c48:	je     402ce0 <_head_lib64_libkernel32_a-0x6320>
  402c4e:	jb     402c80 <_head_lib64_libkernel32_a-0x6380>
  402c50:	cmp    edx,0x2
  402c53:	je     402c70 <_head_lib64_libkernel32_a-0x6390>
  402c55:	cmp    edx,0x3
  402c58:	jne    402c75 <_head_lib64_libkernel32_a-0x638b>
  402c5a:	mov    eax,DWORD PTR [rip+0x5d68]        # 4089c8 <_head_lib64_libkernel32_a-0x638>
  402c60:	test   eax,eax
  402c62:	je     402c75 <_head_lib64_libkernel32_a-0x638b>
  402c64:	call   402ab0 <_head_lib64_libkernel32_a-0x6550>
  402c69:	jmp    402c75 <_head_lib64_libkernel32_a-0x638b>
  402c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  402c70:	call   402140 <_head_lib64_libkernel32_a-0x6ec0>
  402c75:	mov    eax,0x1
  402c7a:	add    rsp,0x20
  402c7e:	pop    rbx
  402c7f:	ret    
  402c80:	mov    eax,DWORD PTR [rip+0x5d42]        # 4089c8 <_head_lib64_libkernel32_a-0x638>
  402c86:	test   eax,eax
  402c88:	jne    402d10 <_head_lib64_libkernel32_a-0x62f0>
  402c8e:	mov    eax,DWORD PTR [rip+0x5d34]        # 4089c8 <_head_lib64_libkernel32_a-0x638>
  402c94:	cmp    eax,0x1
  402c97:	jne    402c75 <_head_lib64_libkernel32_a-0x638b>
  402c99:	mov    rcx,QWORD PTR [rip+0x5d20]        # 4089c0 <_head_lib64_libkernel32_a-0x640>
  402ca0:	test   rcx,rcx
  402ca3:	je     402cb6 <_head_lib64_libkernel32_a-0x634a>
  402ca5:	mov    rbx,QWORD PTR [rcx+0x10]
  402ca9:	call   403138 <_head_lib64_libkernel32_a-0x5ec8>
  402cae:	test   rbx,rbx
  402cb1:	mov    rcx,rbx
  402cb4:	jne    402ca5 <_head_lib64_libkernel32_a-0x635b>
  402cb6:	lea    rcx,[rip+0x5d23]        # 4089e0 <_head_lib64_libkernel32_a-0x620>
  402cbd:	mov    QWORD PTR [rip+0x5cf8],0x0        # 4089c0 <_head_lib64_libkernel32_a-0x640>
  402cc8:	mov    DWORD PTR [rip+0x5cf6],0x0        # 4089c8 <_head_lib64_libkernel32_a-0x638>
  402cd2:	call   QWORD PTR [rip+0x6688]        # 409360 <__IAT_start__>
  402cd8:	jmp    402c75 <_head_lib64_libkernel32_a-0x638b>
  402cda:	nop    WORD PTR [rax+rax*1+0x0]
  402ce0:	mov    eax,DWORD PTR [rip+0x5ce2]        # 4089c8 <_head_lib64_libkernel32_a-0x638>
  402ce6:	test   eax,eax
  402ce8:	je     402d00 <_head_lib64_libkernel32_a-0x6300>
  402cea:	mov    eax,0x1
  402cef:	mov    DWORD PTR [rip+0x5ccf],0x1        # 4089c8 <_head_lib64_libkernel32_a-0x638>
  402cf9:	add    rsp,0x20
  402cfd:	pop    rbx
  402cfe:	ret    
  402cff:	nop
  402d00:	lea    rcx,[rip+0x5cd9]        # 4089e0 <_head_lib64_libkernel32_a-0x620>
  402d07:	call   QWORD PTR [rip+0x66ab]        # 4093b8 <__imp_InitializeCriticalSection>
  402d0d:	jmp    402cea <_head_lib64_libkernel32_a-0x6316>
  402d0f:	nop
  402d10:	call   402ab0 <_head_lib64_libkernel32_a-0x6550>
  402d15:	jmp    402c8e <_head_lib64_libkernel32_a-0x6372>
  402d1a:	nop
  402d1b:	nop
  402d1c:	nop
  402d1d:	nop
  402d1e:	nop
  402d1f:	nop
  402d20:	movsxd rax,DWORD PTR [rcx+0x3c]
  402d24:	add    rcx,rax
  402d27:	xor    eax,eax
  402d29:	cmp    DWORD PTR [rcx],0x4550
  402d2f:	je     402d33 <_head_lib64_libkernel32_a-0x62cd>
  402d31:	repz ret 
  402d33:	xor    eax,eax
  402d35:	cmp    WORD PTR [rcx+0x18],0x20b
  402d3b:	sete   al
  402d3e:	ret    
  402d3f:	nop
  402d40:	cmp    WORD PTR [rcx],0x5a4d
  402d45:	je     402d50 <_head_lib64_libkernel32_a-0x62b0>
  402d47:	xor    eax,eax
  402d49:	ret    
  402d4a:	nop    WORD PTR [rax+rax*1+0x0]
  402d50:	jmp    402d20 <_head_lib64_libkernel32_a-0x62e0>
  402d52:	nop    DWORD PTR [rax+0x0]
  402d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d60:	movsxd rax,DWORD PTR [rcx+0x3c]
  402d64:	add    rcx,rax
  402d67:	movzx  eax,WORD PTR [rcx+0x14]
  402d6b:	lea    rax,[rcx+rax*1+0x18]
  402d70:	movzx  ecx,WORD PTR [rcx+0x6]
  402d74:	test   ecx,ecx
  402d76:	je     402da1 <_head_lib64_libkernel32_a-0x625f>
  402d78:	sub    ecx,0x1
  402d7b:	lea    rcx,[rcx+rcx*4]
  402d7f:	lea    r9,[rax+rcx*8+0x28]
  402d84:	mov    r8d,DWORD PTR [rax+0xc]
  402d88:	cmp    r8,rdx
  402d8b:	mov    rcx,r8
  402d8e:	ja     402d98 <_head_lib64_libkernel32_a-0x6268>
  402d90:	add    ecx,DWORD PTR [rax+0x8]
  402d93:	cmp    rdx,rcx
  402d96:	jb     402da3 <_head_lib64_libkernel32_a-0x625d>
  402d98:	add    rax,0x28
  402d9c:	cmp    rax,r9
  402d9f:	jne    402d84 <_head_lib64_libkernel32_a-0x627c>
  402da1:	xor    eax,eax
  402da3:	repz ret 
  402da5:	nop
  402da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402db0:	push   rdi
  402db1:	push   rsi
  402db2:	push   rbx
  402db3:	sub    rsp,0x20
  402db7:	mov    rsi,rcx
  402dba:	call   403110 <_head_lib64_libkernel32_a-0x5ef0>
  402dbf:	cmp    rax,0x8
  402dc3:	ja     402de0 <_head_lib64_libkernel32_a-0x6220>
  402dc5:	mov    rbx,QWORD PTR [rip+0x28d4]        # 4056a0 <_head_lib64_libkernel32_a-0x3960>
  402dcc:	xor    edi,edi
  402dce:	cmp    WORD PTR [rbx],0x5a4d
  402dd3:	je     402df0 <_head_lib64_libkernel32_a-0x6210>
  402dd5:	mov    rax,rdi
  402dd8:	add    rsp,0x20
  402ddc:	pop    rbx
  402ddd:	pop    rsi
  402dde:	pop    rdi
  402ddf:	ret    
  402de0:	xor    edi,edi
  402de2:	mov    rax,rdi
  402de5:	add    rsp,0x20
  402de9:	pop    rbx
  402dea:	pop    rsi
  402deb:	pop    rdi
  402dec:	ret    
  402ded:	nop    DWORD PTR [rax]
  402df0:	mov    rcx,rbx
  402df3:	call   402d20 <_head_lib64_libkernel32_a-0x62e0>
  402df8:	test   eax,eax
  402dfa:	je     402dd5 <_head_lib64_libkernel32_a-0x622b>
  402dfc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402e00:	add    rdx,rbx
  402e03:	movzx  eax,WORD PTR [rdx+0x14]
  402e07:	lea    rbx,[rdx+rax*1+0x18]
  402e0c:	movzx  eax,WORD PTR [rdx+0x6]
  402e10:	test   eax,eax
  402e12:	je     402dd5 <_head_lib64_libkernel32_a-0x622b>
  402e14:	sub    eax,0x1
  402e17:	lea    rax,[rax+rax*4]
  402e1b:	lea    rdi,[rbx+rax*8+0x28]
  402e20:	jmp    402e2b <_head_lib64_libkernel32_a-0x61d5>
  402e22:	add    rbx,0x28
  402e26:	cmp    rbx,rdi
  402e29:	je     402de0 <_head_lib64_libkernel32_a-0x6220>
  402e2b:	mov    r8d,0x8
  402e31:	mov    rdx,rsi
  402e34:	mov    rcx,rbx
  402e37:	call   403108 <_head_lib64_libkernel32_a-0x5ef8>
  402e3c:	test   eax,eax
  402e3e:	jne    402e22 <_head_lib64_libkernel32_a-0x61de>
  402e40:	mov    rdi,rbx
  402e43:	mov    rax,rdi
  402e46:	add    rsp,0x20
  402e4a:	pop    rbx
  402e4b:	pop    rsi
  402e4c:	pop    rdi
  402e4d:	ret    
  402e4e:	xchg   ax,ax
  402e50:	push   rsi
  402e51:	push   rbx
  402e52:	sub    rsp,0x28
  402e56:	mov    rbx,QWORD PTR [rip+0x2843]        # 4056a0 <_head_lib64_libkernel32_a-0x3960>
  402e5d:	cmp    WORD PTR [rbx],0x5a4d
  402e62:	je     402e70 <_head_lib64_libkernel32_a-0x6190>
  402e64:	xor    eax,eax
  402e66:	add    rsp,0x28
  402e6a:	pop    rbx
  402e6b:	pop    rsi
  402e6c:	ret    
  402e6d:	nop    DWORD PTR [rax]
  402e70:	mov    rsi,rcx
  402e73:	mov    rcx,rbx
  402e76:	call   402d20 <_head_lib64_libkernel32_a-0x62e0>
  402e7b:	test   eax,eax
  402e7d:	je     402e64 <_head_lib64_libkernel32_a-0x619c>
  402e7f:	sub    rsi,rbx
  402e82:	mov    rcx,rbx
  402e85:	mov    rdx,rsi
  402e88:	add    rsp,0x28
  402e8c:	pop    rbx
  402e8d:	pop    rsi
  402e8e:	jmp    402d60 <_head_lib64_libkernel32_a-0x62a0>
  402e93:	nop    DWORD PTR [rax]
  402e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ea0:	push   rbx
  402ea1:	sub    rsp,0x20
  402ea5:	mov    rbx,QWORD PTR [rip+0x27f4]        # 4056a0 <_head_lib64_libkernel32_a-0x3960>
  402eac:	xor    eax,eax
  402eae:	cmp    WORD PTR [rbx],0x5a4d
  402eb3:	je     402ec0 <_head_lib64_libkernel32_a-0x6140>
  402eb5:	add    rsp,0x20
  402eb9:	pop    rbx
  402eba:	ret    
  402ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  402ec0:	mov    rcx,rbx
  402ec3:	call   402d20 <_head_lib64_libkernel32_a-0x62e0>
  402ec8:	test   eax,eax
  402eca:	je     402eb5 <_head_lib64_libkernel32_a-0x614b>
  402ecc:	movsxd rax,DWORD PTR [rbx+0x3c]
  402ed0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402ed5:	add    rsp,0x20
  402ed9:	pop    rbx
  402eda:	ret    
  402edb:	nop    DWORD PTR [rax+rax*1+0x0]
  402ee0:	push   rdi
  402ee1:	push   rsi
  402ee2:	push   rbx
  402ee3:	sub    rsp,0x20
  402ee7:	mov    rsi,QWORD PTR [rip+0x27b2]        # 4056a0 <_head_lib64_libkernel32_a-0x3960>
  402eee:	xor    edi,edi
  402ef0:	mov    rbx,rcx
  402ef3:	cmp    WORD PTR [rsi],0x5a4d
  402ef8:	je     402f05 <_head_lib64_libkernel32_a-0x60fb>
  402efa:	mov    rax,rdi
  402efd:	add    rsp,0x20
  402f01:	pop    rbx
  402f02:	pop    rsi
  402f03:	pop    rdi
  402f04:	ret    
  402f05:	mov    rcx,rsi
  402f08:	call   402d20 <_head_lib64_libkernel32_a-0x62e0>
  402f0d:	test   eax,eax
  402f0f:	je     402efa <_head_lib64_libkernel32_a-0x6106>
  402f11:	movsxd rax,DWORD PTR [rsi+0x3c]
  402f15:	add    rsi,rax
  402f18:	movzx  eax,WORD PTR [rsi+0x14]
  402f1c:	lea    rdx,[rsi+rax*1+0x18]
  402f21:	movzx  eax,WORD PTR [rsi+0x6]
  402f25:	test   eax,eax
  402f27:	je     402efa <_head_lib64_libkernel32_a-0x6106>
  402f29:	sub    eax,0x1
  402f2c:	lea    rax,[rax+rax*4]
  402f30:	lea    rax,[rdx+rax*8+0x28]
  402f35:	test   BYTE PTR [rdx+0x27],0x20
  402f39:	je     402f44 <_head_lib64_libkernel32_a-0x60bc>
  402f3b:	test   rbx,rbx
  402f3e:	je     402f60 <_head_lib64_libkernel32_a-0x60a0>
  402f40:	sub    rbx,0x1
  402f44:	add    rdx,0x28
  402f48:	cmp    rdx,rax
  402f4b:	jne    402f35 <_head_lib64_libkernel32_a-0x60cb>
  402f4d:	xor    edi,edi
  402f4f:	mov    rax,rdi
  402f52:	add    rsp,0x20
  402f56:	pop    rbx
  402f57:	pop    rsi
  402f58:	pop    rdi
  402f59:	ret    
  402f5a:	nop    WORD PTR [rax+rax*1+0x0]
  402f60:	mov    rdi,rdx
  402f63:	mov    rax,rdi
  402f66:	add    rsp,0x20
  402f6a:	pop    rbx
  402f6b:	pop    rsi
  402f6c:	pop    rdi
  402f6d:	ret    
  402f6e:	xchg   ax,ax
  402f70:	push   rsi
  402f71:	push   rbx
  402f72:	sub    rsp,0x28
  402f76:	mov    rsi,QWORD PTR [rip+0x2723]        # 4056a0 <_head_lib64_libkernel32_a-0x3960>
  402f7d:	xor    ebx,ebx
  402f7f:	cmp    WORD PTR [rsi],0x5a4d
  402f84:	je     402f90 <_head_lib64_libkernel32_a-0x6070>
  402f86:	mov    rax,rbx
  402f89:	add    rsp,0x28
  402f8d:	pop    rbx
  402f8e:	pop    rsi
  402f8f:	ret    
  402f90:	mov    rcx,rsi
  402f93:	call   402d20 <_head_lib64_libkernel32_a-0x62e0>
  402f98:	test   eax,eax
  402f9a:	cmovne rbx,rsi
  402f9e:	mov    rax,rbx
  402fa1:	add    rsp,0x28
  402fa5:	pop    rbx
  402fa6:	pop    rsi
  402fa7:	ret    
  402fa8:	nop    DWORD PTR [rax+rax*1+0x0]
  402fb0:	push   rsi
  402fb1:	push   rbx
  402fb2:	sub    rsp,0x28
  402fb6:	mov    rbx,QWORD PTR [rip+0x26e3]        # 4056a0 <_head_lib64_libkernel32_a-0x3960>
  402fbd:	xor    eax,eax
  402fbf:	cmp    WORD PTR [rbx],0x5a4d
  402fc4:	je     402fd0 <_head_lib64_libkernel32_a-0x6030>
  402fc6:	add    rsp,0x28
  402fca:	pop    rbx
  402fcb:	pop    rsi
  402fcc:	ret    
  402fcd:	nop    DWORD PTR [rax]
  402fd0:	mov    rsi,rcx
  402fd3:	mov    rcx,rbx
  402fd6:	call   402d20 <_head_lib64_libkernel32_a-0x62e0>
  402fdb:	test   eax,eax
  402fdd:	je     402fc6 <_head_lib64_libkernel32_a-0x603a>
  402fdf:	sub    rsi,rbx
  402fe2:	mov    rcx,rbx
  402fe5:	mov    rdx,rsi
  402fe8:	call   402d60 <_head_lib64_libkernel32_a-0x62a0>
  402fed:	test   rax,rax
  402ff0:	je     403001 <_head_lib64_libkernel32_a-0x5fff>
  402ff2:	mov    eax,DWORD PTR [rax+0x24]
  402ff5:	not    eax
  402ff7:	shr    eax,0x1f
  402ffa:	add    rsp,0x28
  402ffe:	pop    rbx
  402fff:	pop    rsi
  403000:	ret    
  403001:	xor    eax,eax
  403003:	jmp    402fc6 <_head_lib64_libkernel32_a-0x603a>
  403005:	nop
  403006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403010:	push   rbp
  403011:	push   rdi
  403012:	push   rsi
  403013:	push   rbx
  403014:	sub    rsp,0x28
  403018:	mov    rdi,QWORD PTR [rip+0x2681]        # 4056a0 <_head_lib64_libkernel32_a-0x3960>
  40301f:	xor    ebp,ebp
  403021:	mov    esi,ecx
  403023:	cmp    WORD PTR [rdi],0x5a4d
  403028:	je     403040 <_head_lib64_libkernel32_a-0x5fc0>
  40302a:	mov    rax,rbp
  40302d:	add    rsp,0x28
  403031:	pop    rbx
  403032:	pop    rsi
  403033:	pop    rdi
  403034:	pop    rbp
  403035:	ret    
  403036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403040:	mov    rcx,rdi
  403043:	call   402d20 <_head_lib64_libkernel32_a-0x62e0>
  403048:	test   eax,eax
  40304a:	je     40302a <_head_lib64_libkernel32_a-0x5fd6>
  40304c:	movsxd rax,DWORD PTR [rdi+0x3c]
  403050:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  403057:	test   edx,edx
  403059:	je     40302a <_head_lib64_libkernel32_a-0x5fd6>
  40305b:	mov    ebx,edx
  40305d:	mov    rcx,rdi
  403060:	mov    rdx,rbx
  403063:	call   402d60 <_head_lib64_libkernel32_a-0x62a0>
  403068:	test   rax,rax
  40306b:	je     40302a <_head_lib64_libkernel32_a-0x5fd6>
  40306d:	add    rbx,rdi
  403070:	mov    rdx,rbx
  403073:	jne    403087 <_head_lib64_libkernel32_a-0x5f79>
  403075:	jmp    40302a <_head_lib64_libkernel32_a-0x5fd6>
  403077:	nop    WORD PTR [rax+rax*1+0x0]
  403080:	sub    esi,0x1
  403083:	add    rdx,0x14
  403087:	mov    ecx,DWORD PTR [rdx+0x4]
  40308a:	test   ecx,ecx
  40308c:	jne    403095 <_head_lib64_libkernel32_a-0x5f6b>
  40308e:	mov    eax,DWORD PTR [rdx+0xc]
  403091:	test   eax,eax
  403093:	je     4030b0 <_head_lib64_libkernel32_a-0x5f50>
  403095:	test   esi,esi
  403097:	jg     403080 <_head_lib64_libkernel32_a-0x5f80>
  403099:	mov    ebp,DWORD PTR [rdx+0xc]
  40309c:	add    rbp,rdi
  40309f:	mov    rax,rbp
  4030a2:	add    rsp,0x28
  4030a6:	pop    rbx
  4030a7:	pop    rsi
  4030a8:	pop    rdi
  4030a9:	pop    rbp
  4030aa:	ret    
  4030ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4030b0:	xor    ebp,ebp
  4030b2:	mov    rax,rbp
  4030b5:	add    rsp,0x28
  4030b9:	pop    rbx
  4030ba:	pop    rsi
  4030bb:	pop    rdi
  4030bc:	pop    rbp
  4030bd:	ret    
  4030be:	nop
  4030bf:	nop
  4030c0:	push   rcx
  4030c1:	push   rax
  4030c2:	cmp    rax,0x1000
  4030c8:	lea    rcx,[rsp+0x18]
  4030cd:	jb     4030e8 <_head_lib64_libkernel32_a-0x5f18>
  4030cf:	sub    rcx,0x1000
  4030d6:	or     QWORD PTR [rcx],0x0
  4030da:	sub    rax,0x1000
  4030e0:	cmp    rax,0x1000
  4030e6:	ja     4030cf <_head_lib64_libkernel32_a-0x5f31>
  4030e8:	sub    rcx,rax
  4030eb:	or     QWORD PTR [rcx],0x0
  4030ef:	pop    rax
  4030f0:	pop    rcx
  4030f1:	ret    
  4030f2:	nop
  4030f3:	nop
  4030f4:	nop
  4030f5:	nop
  4030f6:	nop
  4030f7:	nop
  4030f8:	nop
  4030f9:	nop
  4030fa:	nop
  4030fb:	nop
  4030fc:	nop
  4030fd:	nop
  4030fe:	nop
  4030ff:	nop
  403100:	jmp    QWORD PTR [rip+0x6412]        # 409518 <__imp_vfprintf>
  403106:	nop
  403107:	nop
  403108:	jmp    QWORD PTR [rip+0x6402]        # 409510 <__imp_strncmp>
  40310e:	nop
  40310f:	nop
  403110:	jmp    QWORD PTR [rip+0x63f2]        # 409508 <__imp_strlen>
  403116:	nop
  403117:	nop
  403118:	jmp    QWORD PTR [rip+0x63e2]        # 409500 <__imp_signal>
  40311e:	nop
  40311f:	nop
  403120:	jmp    QWORD PTR [rip+0x63d2]        # 4094f8 <__imp_memcpy>
  403126:	nop
  403127:	nop
  403128:	jmp    QWORD PTR [rip+0x63c2]        # 4094f0 <__imp_malloc>
  40312e:	nop
  40312f:	nop
  403130:	jmp    QWORD PTR [rip+0x63b2]        # 4094e8 <__imp_fwrite>
  403136:	nop
  403137:	nop
  403138:	jmp    QWORD PTR [rip+0x63a2]        # 4094e0 <__imp_free>
  40313e:	nop
  40313f:	nop
  403140:	jmp    QWORD PTR [rip+0x6392]        # 4094d8 <__imp_fprintf>
  403146:	nop
  403147:	nop
  403148:	jmp    QWORD PTR [rip+0x6382]        # 4094d0 <__imp_exit>
  40314e:	nop
  40314f:	nop
  403150:	jmp    QWORD PTR [rip+0x6372]        # 4094c8 <__imp_calloc>
  403156:	nop
  403157:	nop
  403158:	jmp    QWORD PTR [rip+0x6362]        # 4094c0 <__imp_abort>
  40315e:	nop
  40315f:	nop
  403160:	jmp    QWORD PTR [rip+0x6352]        # 4094b8 <__imp__unlock>
  403166:	nop
  403167:	nop
  403168:	jmp    QWORD PTR [rip+0x6342]        # 4094b0 <__imp__onexit>
  40316e:	nop
  40316f:	nop
  403170:	jmp    QWORD PTR [rip+0x6332]        # 4094a8 <__imp__lock>
  403176:	nop
  403177:	nop
  403178:	jmp    QWORD PTR [rip+0x6322]        # 4094a0 <__imp__initterm>
  40317e:	nop
  40317f:	nop
  403180:	jmp    QWORD PTR [rip+0x630a]        # 409490 <__imp__cexit>
  403186:	nop
  403187:	nop
  403188:	jmp    QWORD PTR [rip+0x62fa]        # 409488 <__imp__amsg_exit>
  40318e:	nop
  40318f:	nop
  403190:	jmp    QWORD PTR [rip+0x62e2]        # 409478 <__imp___setusermatherr>
  403196:	nop
  403197:	nop
  403198:	jmp    QWORD PTR [rip+0x62d2]        # 409470 <__imp___set_app_type>
  40319e:	nop
  40319f:	nop
  4031a0:	jmp    QWORD PTR [rip+0x62c2]        # 409468 <__imp___lconv_init>
  4031a6:	nop
  4031a7:	nop
  4031a8:	jmp    QWORD PTR [rip+0x62b2]        # 409460 <__imp___iob_func>
  4031ae:	nop
  4031af:	nop
  4031b0:	jmp    QWORD PTR [rip+0x629a]        # 409450 <__imp___getmainargs>
  4031b6:	nop
  4031b7:	nop
  4031b8:	jmp    QWORD PTR [rip+0x628a]        # 409448 <__imp___dllonexit>
  4031be:	nop
  4031bf:	nop
  4031c0:	jmp    QWORD PTR [rip+0x626a]        # 409430 <__imp___C_specific_handler>
  4031c6:	nop
  4031c7:	nop
  4031c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4031d0:	mov    rax,QWORD PTR [rip+0x5859]        # 408a30 <_head_lib64_libkernel32_a-0x5d0>
  4031d7:	ret    
  4031d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4031e0:	mov    rax,rcx
  4031e3:	xchg   QWORD PTR [rip+0x5846],rax        # 408a30 <_head_lib64_libkernel32_a-0x5d0>
  4031ea:	ret    
  4031eb:	nop
  4031ec:	nop
  4031ed:	nop
  4031ee:	nop
  4031ef:	nop
  4031f0:	jmp    QWORD PTR [rip+0x622a]        # 409420 <__imp_VirtualQuery>
  4031f6:	nop
  4031f7:	nop
  4031f8:	jmp    QWORD PTR [rip+0x621a]        # 409418 <__imp_VirtualProtect>
  4031fe:	nop
  4031ff:	nop
  403200:	jmp    QWORD PTR [rip+0x620a]        # 409410 <__imp_UnhandledExceptionFilter>
  403206:	nop
  403207:	nop
  403208:	jmp    QWORD PTR [rip+0x61fa]        # 409408 <__imp_TlsGetValue>
  40320e:	nop
  40320f:	nop
  403210:	jmp    QWORD PTR [rip+0x61ea]        # 409400 <__imp_TerminateProcess>
  403216:	nop
  403217:	nop
  403218:	jmp    QWORD PTR [rip+0x61da]        # 4093f8 <__imp_Sleep>
  40321e:	nop
  40321f:	nop
  403220:	jmp    QWORD PTR [rip+0x61ca]        # 4093f0 <__imp_SetUnhandledExceptionFilter>
  403226:	nop
  403227:	nop
  403228:	jmp    QWORD PTR [rip+0x61ba]        # 4093e8 <__imp_RtlVirtualUnwind>
  40322e:	nop
  40322f:	nop
  403230:	jmp    QWORD PTR [rip+0x61aa]        # 4093e0 <__imp_RtlLookupFunctionEntry>
  403236:	nop
  403237:	nop
  403238:	jmp    QWORD PTR [rip+0x619a]        # 4093d8 <__imp_RtlCaptureContext>
  40323e:	nop
  40323f:	nop
  403240:	jmp    QWORD PTR [rip+0x618a]        # 4093d0 <__imp_RtlAddFunctionTable>
  403246:	nop
  403247:	nop
  403248:	jmp    QWORD PTR [rip+0x617a]        # 4093c8 <__imp_QueryPerformanceCounter>
  40324e:	nop
  40324f:	nop
  403250:	jmp    QWORD PTR [rip+0x616a]        # 4093c0 <__imp_LeaveCriticalSection>
  403256:	nop
  403257:	nop
  403258:	jmp    QWORD PTR [rip+0x615a]        # 4093b8 <__imp_InitializeCriticalSection>
  40325e:	nop
  40325f:	nop
  403260:	jmp    QWORD PTR [rip+0x614a]        # 4093b0 <__imp_GetTickCount>
  403266:	nop
  403267:	nop
  403268:	jmp    QWORD PTR [rip+0x613a]        # 4093a8 <__imp_GetSystemTimeAsFileTime>
  40326e:	nop
  40326f:	nop
  403270:	jmp    QWORD PTR [rip+0x612a]        # 4093a0 <__imp_GetStartupInfoA>
  403276:	nop
  403277:	nop
  403278:	jmp    QWORD PTR [rip+0x611a]        # 409398 <__imp_GetProcAddress>
  40327e:	nop
  40327f:	nop
  403280:	jmp    QWORD PTR [rip+0x610a]        # 409390 <__imp_GetModuleHandleA>
  403286:	nop
  403287:	nop
  403288:	jmp    QWORD PTR [rip+0x60fa]        # 409388 <__imp_GetLastError>
  40328e:	nop
  40328f:	nop
  403290:	jmp    QWORD PTR [rip+0x60ea]        # 409380 <__imp_GetCurrentThreadId>
  403296:	nop
  403297:	nop
  403298:	jmp    QWORD PTR [rip+0x60da]        # 409378 <__imp_GetCurrentProcessId>
  40329e:	nop
  40329f:	nop
  4032a0:	jmp    QWORD PTR [rip+0x60ca]        # 409370 <__imp_GetCurrentProcess>
  4032a6:	nop
  4032a7:	nop
  4032a8:	jmp    QWORD PTR [rip+0x60ba]        # 409368 <__imp_EnterCriticalSection>
  4032ae:	nop
  4032af:	nop
  4032b0:	jmp    QWORD PTR [rip+0x60aa]        # 409360 <__IAT_start__>
  4032b6:	nop
  4032b7:	nop
  4032b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4032c0:	sub    rsp,0x28
  4032c4:	call   401d10 <_head_lib64_libkernel32_a-0x72f0>
  4032c9:	mov    rax,QWORD PTR [rip+0x23f0]        # 4056c0 <_head_lib64_libkernel32_a-0x3940>
  4032d0:	lea    rcx,[rip+0x20a9]        # 405380 <_head_lib64_libkernel32_a-0x3c80>
  4032d7:	mov    rdx,QWORD PTR [rax]
  4032da:	mov    rax,QWORD PTR [rip+0x23cf]        # 4056b0 <_head_lib64_libkernel32_a-0x3950>
  4032e1:	mov    r8,QWORD PTR [rdx]
  4032e4:	mov    rax,QWORD PTR [rax]
  4032e7:	mov    edx,DWORD PTR [rax]
  4032e9:	add    rsp,0x28
  4032ed:	jmp    401b08 <_head_lib64_libkernel32_a-0x74f8>
  4032f2:	nop
  4032f3:	nop
  4032f4:	nop
  4032f5:	nop
  4032f6:	nop
  4032f7:	nop
  4032f8:	nop
  4032f9:	nop
  4032fa:	nop
  4032fb:	nop
  4032fc:	nop
  4032fd:	nop
  4032fe:	nop
  4032ff:	nop
  403300:	push   rbp
  403301:	mov    rbp,rsp
  403304:	pop    rbp
  403305:	jmp    401540 <_head_lib64_libkernel32_a-0x7ac0>
  40330a:	nop
  40330b:	nop
  40330c:	nop
  40330d:	nop
  40330e:	nop
  40330f:	nop
  403310:	(bad)  
  403311:	(bad)  
  403312:	(bad)  
  403313:	(bad)  
  403314:	(bad)  
  403315:	(bad)  
  403316:	(bad)  
  403317:	inc    DWORD PTR [rax]
  403319:	xor    eax,DWORD PTR [rax+0x0]
	...
  403328:	(bad)  
  403329:	(bad)  
  40332a:	(bad)  
  40332b:	(bad)  
  40332c:	(bad)  
  40332d:	(bad)  
  40332e:	(bad)  
  40332f:	inc    DWORD PTR [rax]
  403331:	add    BYTE PTR [rax],al
  403333:	add    BYTE PTR [rax],al
  403335:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404000 <.data>:
  404000:	or     al,BYTE PTR [rax]
	...
  40400e:	add    BYTE PTR [rax],al
  404010:	xor    BYTE PTR [rbx],dh
  404012:	add    BYTE PTR [rax],al
	...
  40401d:	add    BYTE PTR [rax],al
  40401f:	add    bh,bh
  404021:	(bad)  
  404022:	(bad)  
  404023:	(bad)  
  404024:	(bad)  
  404025:	(bad)  
  404026:	(bad)  
  404027:	inc    DWORD PTR [rax]
  404029:	add    BYTE PTR [rax],al
  40402b:	add    BYTE PTR [rax],al
  40402d:	add    BYTE PTR [rax],al
  40402f:	add    bh,bh
	...
  40403d:	add    BYTE PTR [rax],al
  40403f:	add    BYTE PTR [rdx],al
	...
  40404d:	add    BYTE PTR [rax],al
  40404f:	add    bh,bh
  404051:	(bad)  
  404052:	(bad)  
  404053:	inc    DWORD PTR [rax]
	...
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    al,dl
  404061:	xor    DWORD PTR [rax+0x0],eax
  404064:	add    BYTE PTR [rax],al
  404066:	add    BYTE PTR [rax],al
  404068:	loopne 40409b <_head_lib64_libkernel32_a-0x4f65>
  40406a:	add    BYTE PTR [rax],al
  40406d:	add    BYTE PTR [rax],al
  40406f:	add    BYTE PTR [rdx],dh
  404071:	movabs ds:0x2b992ddf,al
  40407a:	add    BYTE PTR [rax],al
  40407c:	add    BYTE PTR [rax],al
  40407e:	add    BYTE PTR [rax],al
  404080:	int    0x5d
  404082:	and    dl,dl
  404084:	data16 (bad) 
  404086:	(bad)  
  404087:	inc    DWORD PTR [rax]
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	ins    BYTE PTR es:[rdi],dx
  405001:	imul   esp,DWORD PTR [rdx+0x67],0x312d6a63
  405008:	ss cs fs ins BYTE PTR es:[rdi],dx
  40500c:	ins    BYTE PTR es:[rdi],dx
  40500d:	add    BYTE PTR [rdi+0x4a],bl
  405010:	jbe    405071 <_head_lib64_libkernel32_a-0x3f8f>
  405012:	push   rdx
  405013:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
  40501c:	(bad)  
  40501d:	jae    405092 <_head_lib64_libkernel32_a-0x3f6e>
  40501f:	gs jae 405022 <_head_lib64_libkernel32_a-0x3fde>
	...
  40503e:	add    BYTE PTR [rax],al
  405040:	imul   ebp,DWORD PTR [ebp+0x70],0x732d3032
  405048:	je     4050ae <_head_lib64_libkernel32_a-0x3f52>
  40504a:	sub    eax,0x67756c70
  40504f:	sub    eax,0x736e69
  405054:	push   rbp
  405055:	push   rsp
  405056:	rex.RX sub eax,0x6f430038
  40505c:	ins    BYTE PTR es:[rdi],dx
  40505d:	outs   dx,DWORD PTR ds:[rsi]
  40505e:	jb     405080 <_head_lib64_libkernel32_a-0x3f80>
  405060:	rex.RB outs dx,BYTE PTR ds:[rsi]
  405062:	push   0x65636e61
  405067:	add    BYTE PTR [rbx+0x6f],ah
  40506a:	ins    BYTE PTR es:[rdi],dx
  40506b:	outs   dx,DWORD PTR ds:[rsi]
  40506c:	jb     4050db <_head_lib64_libkernel32_a-0x3f25>
  40506e:	(bad)  
  40506f:	jo     405091 <_head_lib64_libkernel32_a-0x3f6f>
  405071:	ja     4050d4 <_head_lib64_libkernel32_a-0x3f2c>
  405073:	jae    405095 <_head_lib64_libkernel32_a-0x3f6b>
  405075:	rex.WRX push rbp
  405077:	rex.WR
  405078:	and    QWORD PTR [rax],r12
  40507b:	and    BYTE PTR [rcx+0x75],dl
  40507e:	imul   esi,DWORD PTR [rsp+rsi*2+0x69],0x2e676e
  405086:	rex.WRB (bad) 
  405088:	jb     4050fe <_head_lib64_libkernel32_a-0x3f02>
  40508a:	imul   ebp,DWORD PTR [rsi+0x20],0x65626557
  405091:	jb     405093 <_head_lib64_libkernel32_a-0x3f6d>
  405093:	add    BYTE PTR [rax],al
  405095:	add    BYTE PTR [rax],al
  405097:	add    BYTE PTR [rax+rbp*2+0x69],dl
  40509b:	jae    4050bd <_head_lib64_libkernel32_a-0x3f43>
  40509d:	jae    405108 <_head_lib64_libkernel32_a-0x3ef8>
  40509f:	ins    DWORD PTR es:[rdi],dx
  4050a0:	jo     40510e <_head_lib64_libkernel32_a-0x3ef2>
  4050a2:	and    BYTE PTR gs:[rax+0x6c],dh
  4050a6:	jne    40510f <_head_lib64_libkernel32_a-0x3ef1>
  4050a8:	sub    eax,0x64206e69
  4050ad:	outs   dx,DWORD PTR ds:[rsi]
  4050ae:	gs jae 4050d1 <_head_lib64_libkernel32_a-0x3f2f>
  4050b1:	(bad)  
  4050b2:	outs   dx,BYTE PTR ds:[rsi]
  4050b3:	and    BYTE PTR [rcx+0x75],ah
  4050b6:	je     405127 <_head_lib64_libkernel32_a-0x3ed9>
  4050b8:	ins    DWORD PTR es:[rdi],dx
  4050b9:	(bad)  
  4050ba:	je     405125 <_head_lib64_libkernel32_a-0x3edb>
  4050bc:	movsxd esp,DWORD PTR [rax]
  4050be:	jae    405121 <_head_lib64_libkernel32_a-0x3edf>
  4050c0:	je     405137 <_head_lib64_libkernel32_a-0x3ec9>
  4050c2:	jb     405125 <_head_lib64_libkernel32_a-0x3edb>
  4050c4:	je     40512f <_head_lib64_libkernel32_a-0x3ed1>
  4050c6:	outs   dx,DWORD PTR ds:[rsi]
  4050c7:	outs   dx,BYTE PTR ds:[rsi]
  4050c8:	and    BYTE PTR [rbx+0x74],dh
  4050cb:	jb     405132 <_head_lib64_libkernel32_a-0x3ece>
  4050cd:	je     405132 <_head_lib64_libkernel32_a-0x3ece>
  4050cf:	push   0x4620202e
  4050d4:	outs   dx,DWORD PTR ds:[rsi]
  4050d5:	jb     4050f7 <_head_lib64_libkernel32_a-0x3f09>
  4050d7:	gs (bad) 
  4050d9:	movsxd ebp,DWORD PTR [rax+0x20]
  4050dc:	movsxd ebp,DWORD PTR [rax+0x61]
  4050df:	outs   dx,BYTE PTR ds:[rsi]
  4050e0:	outs   dx,BYTE PTR ds:[rsi]
  4050e1:	gs ins BYTE PTR es:[rdi],dx
  4050e3:	and    BYTE PTR [rcx+0x6e],ch
  4050e6:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4050ea:	and    BYTE PTR [rcx+0x6d],ch
  4050ed:	(bad)  
  4050ee:	addr32 gs sub al,0x20
  4050f2:	imul   esi,DWORD PTR [rax+riz*1+0x66],0x73646e69
  4050fa:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4050fe:	and    BYTE PTR [rbp+0x69],ch
  405101:	outs   dx,BYTE PTR ds:[rsi]
  405102:	imul   ebp,DWORD PTR [rbp+0x75],0x6e61206d
  405109:	and    BYTE PTR fs:[rbp+0x61],ch
  40510d:	js     405178 <_head_lib64_libkernel32_a-0x3e88>
  40510f:	ins    DWORD PTR es:[rdi],dx
  405110:	jne    40517f <_head_lib64_libkernel32_a-0x3e81>
  405112:	and    BYTE PTR [rsi+0x61],dh
  405115:	ins    BYTE PTR es:[rdi],dx
  405116:	jne    40517d <_head_lib64_libkernel32_a-0x3e83>
  405118:	jae    405148 <_head_lib64_libkernel32_a-0x3eb8>
  40511a:	cs and BYTE PTR cs:[rcx+0x74],ch
  40511f:	and    BYTE PTR [rbp+0x73],dh
  405122:	gs jae 405145 <_head_lib64_libkernel32_a-0x3ebb>
  405125:	je     40518f <_head_lib64_libkernel32_a-0x3e71>
  405127:	outs   dx,DWORD PTR ds:[rsi]
  405128:	jae    40518f <_head_lib64_libkernel32_a-0x3e71>
  40512a:	and    BYTE PTR [rsi+0x61],dh
  40512d:	ins    BYTE PTR es:[rdi],dx
  40512e:	jne    405195 <_head_lib64_libkernel32_a-0x3e6b>
  405130:	jae    405152 <_head_lib64_libkernel32_a-0x3eae>
  405132:	je     4051a3 <_head_lib64_libkernel32_a-0x3e5d>
  405134:	and    BYTE PTR [rbx+0x74],dh
  405137:	jb     40519e <_head_lib64_libkernel32_a-0x3e62>
  405139:	je     40519e <_head_lib64_libkernel32_a-0x3e62>
  40513b:	push   0x65687420
  405140:	and    BYTE PTR [rcx+0x6e],ch
  405143:	imul   esi,DWORD PTR fs:[rsi+0x69],0x6c617564
  40514b:	and    BYTE PTR [rax+0x69],ch
  40514e:	jae    4051c4 <_head_lib64_libkernel32_a-0x3e3c>
  405150:	outs   dx,DWORD PTR ds:[rsi]
  405151:	addr32 jb 4051b5 <_head_lib64_libkernel32_a-0x3e4b>
  405154:	ins    DWORD PTR es:[rdi],dx
  405155:	jae    405177 <_head_lib64_libkernel32_a-0x3e89>
  405157:	je     4051c8 <_head_lib64_libkernel32_a-0x3e38>
  405159:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40515d:	and    BYTE PTR [rsi+0x75],ah
  405160:	ins    BYTE PTR es:[rdi],dx
  405161:	ins    BYTE PTR es:[rdi],dx
  405162:	and    BYTE PTR [rdx+0x61],dh
  405165:	outs   dx,BYTE PTR ds:[rsi]
  405166:	gs and BYTE PTR cs:[eax],ah
  40516b:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40516d:	jb     40518f <_head_lib64_libkernel32_a-0x3e71>
  40516f:	jae    4051e0 <_head_lib64_libkernel32_a-0x3e20>
  405171:	ins    DWORD PTR es:[rdi],dx
  405172:	and    BYTE PTR gs:[rcx+0x6d],ch
  405176:	(bad)  
  405177:	addr32 gs jae 40519b <_head_lib64_libkernel32_a-0x3e65>
  40517b:	imul   esi,DWORD PTR [rax+riz*1+0x6d],0x64207961
  405183:	outs   dx,DWORD PTR ds:[rsi]
  405184:	and    BYTE PTR [rdx+0x75],ch
  405187:	jae    4051fd <_head_lib64_libkernel32_a-0x3e03>
  405189:	and    BYTE PTR [rdi+0x68],dh
  40518c:	(bad)  
  40518d:	je     4051af <_head_lib64_libkernel32_a-0x3e51>
  40518f:	jns    405200 <_head_lib64_libkernel32_a-0x3e00>
  405191:	jne    4051b3 <_head_lib64_libkernel32_a-0x3e4d>
  405193:	ja     4051f6 <_head_lib64_libkernel32_a-0x3e0a>
  405195:	outs   dx,BYTE PTR ds:[rsi]
  405196:	je     4051d3 <_head_lib64_libkernel32_a-0x3e2d>
  405198:	and    BYTE PTR [rsi+0x6f],ah
  40519b:	jb     4051bd <_head_lib64_libkernel32_a-0x3e43>
  40519d:	outs   dx,DWORD PTR ds:[rsi]
  40519e:	je     405208 <_head_lib64_libkernel32_a-0x3df8>
  4051a0:	gs jb  405216 <_head_lib64_libkernel32_a-0x3dea>
  4051a3:	and    BYTE PTR [rcx+0x74],ch
  4051a6:	and    BYTE PTR [rbp+0x61],ch
  4051a9:	jns    4051cb <_head_lib64_libkernel32_a-0x3e35>
  4051ab:	outs   dx,BYTE PTR ds:[rsi]
  4051ac:	outs   dx,DWORD PTR ds:[rsi]
  4051ad:	je     4051cf <_head_lib64_libkernel32_a-0x3e31>
  4051af:	ja     405220 <_head_lib64_libkernel32_a-0x3de0>
  4051b1:	jb     40521e <_head_lib64_libkernel32_a-0x3de2>
  4051b3:	and    BYTE PTR [rax+rbp*2+0x61],dh
  4051b7:	je     4051d9 <_head_lib64_libkernel32_a-0x3e27>
  4051b9:	ja     405220 <_head_lib64_libkernel32_a-0x3de0>
  4051bb:	ins    BYTE PTR es:[rdi],dx
  4051bc:	ins    BYTE PTR es:[rdi],dx
  4051bd:	and    BYTE PTR cs:[rax],ah
  4051c0:	push   rsp
  4051c1:	push   0x76207369
  4051c6:	gs jb  40523c <_head_lib64_libkernel32_a-0x3dc4>
  4051c9:	imul   ebp,DWORD PTR [rdi+0x6e],0x66696420
  4051d0:	data16 gs jb 405247 <_head_lib64_libkernel32_a-0x3db9>
  4051d4:	and    BYTE PTR [rsi+0x72],ah
  4051d7:	outs   dx,DWORD PTR ds:[rsi]
  4051d8:	ins    DWORD PTR es:[rdi],dx
  4051d9:	and    BYTE PTR [rbx+0x6f],al
  4051dc:	outs   dx,BYTE PTR ds:[rsi]
  4051dd:	je     405251 <_head_lib64_libkernel32_a-0x3daf>
  4051df:	(bad)  
  4051e0:	jae    405256 <_head_lib64_libkernel32_a-0x3daa>
  4051e2:	and    BYTE PTR [rcx+0x75],al
  4051e5:	je     405256 <_head_lib64_libkernel32_a-0x3daa>
  4051e7:	jae    40525d <_head_lib64_libkernel32_a-0x3da3>
  4051e9:	jb     405250 <_head_lib64_libkernel32_a-0x3db0>
  4051eb:	je     405250 <_head_lib64_libkernel32_a-0x3db0>
  4051ed:	push   0x206e6920
  4051f2:	je     40525c <_head_lib64_libkernel32_a-0x3da4>
  4051f4:	(bad)  
  4051f5:	je     405217 <_head_lib64_libkernel32_a-0x3de9>
  4051f7:	imul   esi,DWORD PTR [rax+riz*1+0x77],0x736b726f
  4051ff:	and    BYTE PTR [rcx+0x6e],ch
  405202:	and    BYTE PTR [rax+0x53],cl
  405205:	push   rsi
  405206:	and    BYTE PTR [rbx+0x70],dh
  405209:	(bad)  
  40520a:	movsxd esp,DWORD PTR [rbp+0x2c]
  40520d:	and    BYTE PTR [rcx+0x6e],ah
  405210:	and    BYTE PTR fs:[rax+0x72],dh
  405214:	gs jae 40527c <_head_lib64_libkernel32_a-0x3d84>
  405217:	jb     40528f <_head_lib64_libkernel32_a-0x3d71>
  405219:	gs jae 40523c <_head_lib64_libkernel32_a-0x3dc4>
  40521c:	push   0x2e6575
  405221:	add    BYTE PTR [rax],al
  405223:	add    BYTE PTR [rax],al
  405225:	add    BYTE PTR [rax],al
  405227:	add    BYTE PTR [rbx+0x74],dl
  40522a:	jb     405291 <_head_lib64_libkernel32_a-0x3d6f>
  40522c:	je     405291 <_head_lib64_libkernel32_a-0x3d6f>
  40522e:	push   0x6c6f6320
  405233:	outs   dx,DWORD PTR ds:[rsi]
  405234:	jb     405256 <_head_lib64_libkernel32_a-0x3daa>
  405236:	jae    405299 <_head_lib64_libkernel32_a-0x3d67>
  405238:	je     4052af <_head_lib64_libkernel32_a-0x3d51>
  40523a:	jb     40529d <_head_lib64_libkernel32_a-0x3d63>
  40523c:	je     4052a7 <_head_lib64_libkernel32_a-0x3d59>
  40523e:	outs   dx,DWORD PTR ds:[rsi]
  40523f:	outs   dx,BYTE PTR ds:[rsi]
  405240:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  405244:	movsxd ebp,DWORD PTR [rdi+0x76]
  405247:	gs jb  40526a <_head_lib64_libkernel32_a-0x3d96>
  40524a:	ins    DWORD PTR es:[rdi],dx
  40524b:	(bad)  
  40524c:	js     4052b7 <_head_lib64_libkernel32_a-0x3d49>
  40524e:	ins    DWORD PTR es:[rdi],dx
  40524f:	jne    4052be <_head_lib64_libkernel32_a-0x3d42>
  405251:	and    BYTE PTR [rax+0x6f],dh
  405254:	jae    4052c9 <_head_lib64_libkernel32_a-0x3d37>
  405256:	imul   esp,DWORD PTR [rdx+0x6c],0x61722065
  40525d:	outs   dx,BYTE PTR ds:[rsi]
  40525e:	add    BYTE PTR gs:[eax+0x6c],dh
  405263:	jne    4052cc <_head_lib64_libkernel32_a-0x3d34>
  405265:	sub    eax,0x632d6e69
  40526a:	outs   dx,DWORD PTR ds:[rsi]
  40526b:	ins    BYTE PTR es:[rdi],dx
  40526c:	outs   dx,DWORD PTR ds:[rsi]
  40526d:	jb     40529c <_head_lib64_libkernel32_a-0x3d64>
  40526f:	outs   dx,BYTE PTR gs:[rsi]
  405271:	push   0x65636e61
  405276:	add    BYTE PTR [rdx+0x47],dl
  405279:	sub    bpl,BYTE PTR [rax+r12*1]
  40527d:	rex.WB
  40527e:	rex.WRX
  40527f:	rex.R
  405280:	rex.RB pop r8
  405282:	rex.RB
  405283:	sub    r8b,BYTE PTR [rax]
  405286:	pop    rdi
  405287:	rex.XB outs dx,DWORD PTR ds:[rsi]
  405289:	ins    BYTE PTR es:[rdi],dx
  40528a:	outs   dx,DWORD PTR ds:[rsi]
  40528b:	jb     4052ad <_head_lib64_libkernel32_a-0x3d53>
  40528d:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40528f:	push   0x65636e61
  405294:	add    BYTE PTR [rcx],dh
  405296:	cmp    DWORD PTR [rcx],edi
  405298:	(bad)  
  405299:	add    BYTE PTR [rcx+rcx*2],bh
  40529c:	ins    DWORD PTR es:[rdi],dx
  40529d:	(bad)  
  40529e:	addr32 gs ds (bad) 
  4052a2:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4052a4:	ins    BYTE PTR es:[rdi],dx
  4052a5:	outs   dx,DWORD PTR ds:[rsi]
  4052a6:	jb     40531b <_head_lib64_libkernel32_a-0x3ce5>
  4052a8:	(bad)  
  4052a9:	rex.B jne 405320 <_head_lib64_libkernel32_a-0x3ce0>
  4052ac:	outs   dx,DWORD PTR ds:[rsi]
  4052ad:	add    BYTE PTR [rdx+0x75],dh
  4052b0:	outs   dx,BYTE PTR ds:[rsi]
  4052b1:	sub    eax,0x65646f6d
  4052b6:	add    BYTE PTR [rax],al
  4052b8:	push   rsp
  4052b9:	push   0x75722065
  4052be:	outs   dx,BYTE PTR ds:[rsi]
  4052bf:	and    BYTE PTR [rbp+0x6f],ch
  4052c2:	fs and BYTE PTR gs:[rbx+0x20],bh
  4052c7:	push   rdx
  4052c8:	push   rbp
  4052c9:	rex.WRX sub rax,0x45544e49
  4052cf:	push   rdx
  4052d0:	rex.B
  4052d1:	rex.XB push r12
  4052d3:	rex.WB push r14
  4052d5:	and    BYTE PTR [r8],r13b
  4052d8:	xor    BYTE PTR [rcx],ch
  4052da:	sub    al,0x20
  4052dc:	push   rdx
  4052dd:	push   rbp
  4052de:	rex.WRX sub rax,0x494e4f4e
  4052e4:	rex.WRX push rsp
  4052e6:	rex.RB push r10
  4052e8:	rex.B
  4052e9:	rex.XB push r12
  4052eb:	rex.WB push r14
  4052ed:	and    BYTE PTR [r8],r13b
  4052f0:	xor    DWORD PTR [rcx],ebp
  4052f2:	and    BYTE PTR [rbp+0x0],bh
  4052f5:	imul   ebp,DWORD PTR [rbp+0x61],0x49006567
  4052fc:	outs   dx,BYTE PTR ds:[rsi]
  4052fd:	jo     405374 <_head_lib64_libkernel32_a-0x3c8c>
  4052ff:	je     405321 <_head_lib64_libkernel32_a-0x3cdf>
  405301:	imul   ebp,DWORD PTR [rbp+0x61],0x64006567
  405308:	jb     40536b <_head_lib64_libkernel32_a-0x3c95>
  40530a:	ja     40536d <_head_lib64_libkernel32_a-0x3c93>
  40530c:	(bad)  
  40530d:	ins    BYTE PTR es:[rdi],dx
  40530e:	add    BYTE PTR gs:[rcx+0x6e],cl
  405312:	jo     405389 <_head_lib64_libkernel32_a-0x3c77>
  405314:	je     405336 <_head_lib64_libkernel32_a-0x3cca>
  405316:	fs jb  40537a <_head_lib64_libkernel32_a-0x3c86>
  405319:	ja     40537c <_head_lib64_libkernel32_a-0x3c84>
  40531b:	(bad)  
  40531c:	ins    BYTE PTR es:[rdi],dx
  40531d:	add    BYTE PTR gs:[rax],al
	...
  405328:	scas   al,BYTE PTR es:[rdi]
  405329:	push   rdx
  40532a:	add    BYTE PTR [rax],al
  40532d:	add    BYTE PTR [rax],al
  40532f:	add    BYTE PTR [rax+0x4052],bh
  405335:	add    BYTE PTR [rax],al
  405337:	add    BYTE PTR [rip+0x0],cl        # 40533d <_head_lib64_libkernel32_a-0x3cc3>
  40533d:	add    BYTE PTR [rax],al
  40533f:	add    ch,dh
  405341:	push   rdx
  405342:	add    BYTE PTR [rax],al
  405345:	add    BYTE PTR [rax],al
  405347:	add    bl,bh
  405349:	push   rdx
  40534a:	add    BYTE PTR [rax],al
  40534d:	add    BYTE PTR [rax],al
  40534f:	add    BYTE PTR [rax],dl
  405351:	add    BYTE PTR [rax],al
  405353:	add    BYTE PTR [rax],al
  405355:	add    BYTE PTR [rax],al
  405357:	add    BYTE PTR [rdi],al
  405359:	push   rbx
  40535a:	add    BYTE PTR [rax],al
  40535d:	add    BYTE PTR [rax],al
  40535f:	add    BYTE PTR [rax],dl
  405361:	push   rbx
  405362:	add    BYTE PTR [rax],al
	...
  405391:	sbb    al,BYTE PTR [rax+0x0]
  405394:	add    BYTE PTR [rax],al
  405396:	add    BYTE PTR [rax],al
  405398:	rcl    BYTE PTR [rdi],0x40
	...
  4053a3:	add    BYTE PTR [rax],al
  4053a5:	add    al,dh
  4053a7:	(bad)  
	...
  4053c0:	rol    BYTE PTR [rbp+0x40],0x0
  4053c7:	add    al,al
  4053c9:	add    BYTE PTR [rax+0x0],0x0
  4053cd:	add    BYTE PTR [rax],al
  4053cf:	add    BYTE PTR [rax+0x1f],ah
  4053d2:	add    BYTE PTR [rax],al
	...
  4053dd:	add    BYTE PTR [rax],al
  4053df:	add    BYTE PTR [rcx+0x72],al
  4053e2:	addr32 jne 405452 <_head_lib64_libkernel32_a-0x3bae>
  4053e5:	outs   dx,BYTE PTR gs:[rsi]
  4053e7:	je     405409 <_head_lib64_libkernel32_a-0x3bf7>
  4053e9:	outs   dx,DWORD PTR fs:[rsi]
  4053eb:	ins    DWORD PTR es:[rdi],dx
  4053ec:	(bad)  
  4053ed:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4053f4:	jb     405416 <_head_lib64_libkernel32_a-0x3bea>
  4053f6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4053fa:	rex.B
  4053fb:	rex.WB
  4053fc:	rex.WRX sub QWORD PTR [rax],r8
  4053ff:	rex.B jb 405469 <_head_lib64_libkernel32_a-0x3b97>
  405402:	jne    405471 <_head_lib64_libkernel32_a-0x3b8f>
  405404:	outs   dx,BYTE PTR gs:[rsi]
  405406:	je     405428 <_head_lib64_libkernel32_a-0x3bd8>
  405408:	jae    405473 <_head_lib64_libkernel32_a-0x3b8d>
  40540a:	outs   dx,BYTE PTR ds:[rsi]
  40540b:	addr32 jne 40547a <_head_lib64_libkernel32_a-0x3b86>
  40540e:	(bad)  
  40540f:	jb     40547a <_head_lib64_libkernel32_a-0x3b86>
  405411:	je     40548c <_head_lib64_libkernel32_a-0x3b74>
  405413:	and    BYTE PTR [rax],ch
  405415:	push   rbx
  405416:	rex.WB
  405417:	rex.RXB
  405418:	rex.WRX sub QWORD PTR [rax],r8
  40541b:	add    BYTE PTR [rax],al
  40541d:	add    BYTE PTR [rax],al
  40541f:	add    BYTE PTR [rdi+0x76],cl
  405422:	gs jb  40548b <_head_lib64_libkernel32_a-0x3b75>
  405425:	ins    BYTE PTR es:[rdi],dx
  405426:	outs   dx,DWORD PTR ds:[rsi]
  405427:	ja     405449 <_head_lib64_libkernel32_a-0x3bb7>
  405429:	jb     40548c <_head_lib64_libkernel32_a-0x3b74>
  40542b:	outs   dx,BYTE PTR ds:[rsi]
  40542c:	and    BYTE PTR gs:[ebp+0x72],ah
  405431:	jb     4054a2 <_head_lib64_libkernel32_a-0x3b5e>
  405433:	jb     405455 <_head_lib64_libkernel32_a-0x3bab>
  405435:	sub    BYTE PTR [rdi+0x56],cl
  405438:	rex.RB push r10
  40543a:	rex.RX
  40543b:	rex.WR
  40543c:	rex.WRXB push r15
  40543e:	sub    DWORD PTR [rax],eax
  405440:	push   rax
  405441:	(bad)  
  405442:	jb     4054b8 <_head_lib64_libkernel32_a-0x3b48>
  405444:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40544b:	jae    40546d <_head_lib64_libkernel32_a-0x3b93>
  40544d:	outs   dx,DWORD PTR ds:[rsi]
  40544e:	data16 and BYTE PTR [rbx+0x69],dh
  405452:	outs   dx,BYTE PTR ds:[esi]
  405454:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40545b:	and    BYTE PTR gs:[rax],ch
  40545e:	push   rax
  40545f:	rex.WR
  405460:	rex.WRXB push r11
  405462:	push   rbx
  405463:	sub    DWORD PTR [rax],eax
  405465:	add    BYTE PTR [rax],al
  405467:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40546b:	(bad)  
  40546c:	ins    BYTE PTR es:[rdi],dx
  40546d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  405471:	jae    405493 <_head_lib64_libkernel32_a-0x3b6d>
  405473:	outs   dx,DWORD PTR ds:[rsi]
  405474:	data16 and BYTE PTR [rbx+0x69],dh
  405478:	outs   dx,BYTE PTR ds:[esi]
  40547a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  405481:	and    BYTE PTR gs:[rax],ch
  405484:	push   rsp
  405485:	rex.WR
  405486:	rex.WRXB push r11
  405488:	push   rbx
  405489:	sub    DWORD PTR [rax],eax
  40548b:	add    BYTE PTR [rax],al
  40548d:	add    BYTE PTR [rax],al
  40548f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  405493:	and    BYTE PTR [rdx+0x65],dh
  405496:	jae    40550d <_head_lib64_libkernel32_a-0x3af3>
  405498:	ins    BYTE PTR es:[rdi],dx
  405499:	je     4054bb <_head_lib64_libkernel32_a-0x3b45>
  40549b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  4054a2:	jae    405511 <_head_lib64_libkernel32_a-0x3aef>
  4054a4:	(bad)  
  4054a5:	ins    BYTE PTR es:[rdi],dx
  4054a6:	ins    BYTE PTR es:[rdi],dx
  4054a7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4054ab:	(bad)  
  4054ac:	and    BYTE PTR gs:[rdx+0x65],dh
  4054b0:	jo     405524 <_head_lib64_libkernel32_a-0x3adc>
  4054b2:	gs jae 40551a <_head_lib64_libkernel32_a-0x3ae6>
  4054b5:	outs   dx,BYTE PTR ds:[rsi]
  4054b6:	je     40551d <_head_lib64_libkernel32_a-0x3ae3>
  4054b8:	and    BYTE PTR fs:[rax],ch
  4054bb:	push   rbp
  4054bc:	rex.WRX
  4054bd:	rex.R
  4054be:	rex.RB push r10
  4054c0:	rex.RX
  4054c1:	rex.WR
  4054c2:	rex.WRXB push r15
  4054c4:	sub    DWORD PTR [rax],eax
  4054c6:	push   rbp
  4054c7:	outs   dx,BYTE PTR ds:[rsi]
  4054c8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4054cc:	outs   dx,BYTE PTR ds:[rsi]
  4054cd:	and    BYTE PTR [rbp+0x72],ah
  4054d0:	jb     405541 <_head_lib64_libkernel32_a-0x3abf>
  4054d2:	jb     4054d4 <_head_lib64_libkernel32_a-0x3b2c>
  4054d4:	add    BYTE PTR [rax],al
  4054d6:	add    BYTE PTR [rax],al
  4054d8:	pop    rdi
  4054d9:	ins    DWORD PTR es:[rdi],dx
  4054da:	(bad)  
  4054db:	je     405545 <_head_lib64_libkernel32_a-0x3abb>
  4054dd:	gs jb  405552 <_head_lib64_libkernel32_a-0x3aae>
  4054e0:	sub    BYTE PTR [rcx],ch
  4054e2:	cmp    ah,BYTE PTR [rax]
  4054e4:	and    eax,0x6e692073
  4054e9:	and    BYTE PTR [rip+0x67252873],ah        # 67657d62 <libintl_8_dll_iname+0x6724dfc2>
  4054ef:	sub    al,0x20
  4054f1:	and    eax,0x20202967
  4054f6:	sub    BYTE PTR [rdx+0x65],dh
  4054f9:	je     405571 <_head_lib64_libkernel32_a-0x3a8f>
  4054fb:	(bad)  
  4054fc:	ins    BYTE PTR es:[rdi],dx
  4054fd:	cmp    eax,0xa296725
  405502:	add    BYTE PTR [rax],al
  405504:	sub    al,0xcc
  405506:	(bad)  
  405507:	jmp    FWORD PTR [rbp-0x35]
  40550a:	(bad)  
  40550b:	(bad)  
  40550c:	fmul   st(3),st
  40550e:	(bad)  
  40550f:	(bad)  
  405510:	in     al,dx
  405511:	retf   
  405512:	(bad)  
  405513:	(bad)  
  405514:	cld    
  405515:	retf   
  405516:	(bad)  
  405517:	dec    DWORD PTR [rsp+rcx*8]
  40551a:	(bad)  
  40551b:	call   FWORD PTR [rsp+rcx*8]
  40551e:	(bad)  
  40551f:	dec    DWORD PTR [rbp+0x69]
  405522:	outs   dx,BYTE PTR ds:[rsi]
  405523:	addr32 ja 405553 <_head_lib64_libkernel32_a-0x3aad>
  405526:	ja     40555e <_head_lib64_libkernel32_a-0x3aa2>
  405528:	xor    al,0x20
  40552a:	jb     4055a1 <_head_lib64_libkernel32_a-0x3a5f>
  40552c:	outs   dx,BYTE PTR ds:[rsi]
  40552d:	je     405598 <_head_lib64_libkernel32_a-0x3a68>
  40552f:	ins    DWORD PTR es:[rdi],dx
  405530:	and    BYTE PTR gs:[rsi+0x61],ah
  405534:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40553c:	add    BYTE PTR [rax],al
  40553e:	add    BYTE PTR [rax],al
  405540:	rex.B
  405541:	fs fs jb 4055aa <_head_lib64_libkernel32_a-0x3a56>
  405545:	jae    4055ba <_head_lib64_libkernel32_a-0x3a46>
  405547:	and    BYTE PTR [rip+0x61682070],ah        # 61a875bd <libintl_8_dll_iname+0x6167d81d>
  40554d:	jae    40556f <_head_lib64_libkernel32_a-0x3a91>
  40554f:	outs   dx,BYTE PTR ds:[rsi]
  405550:	outs   dx,DWORD PTR ds:[rsi]
  405551:	and    BYTE PTR [rcx+0x6d],ch
  405554:	(bad)  
  405555:	addr32 gs sub eax,0x74636573
  40555c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  405563:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40556a:	jne    4055d1 <_head_lib64_libkernel32_a-0x3a2f>
  40556c:	jb     4055e7 <_head_lib64_libkernel32_a-0x3a19>
  40556e:	and    BYTE PTR [rsi+0x61],ah
  405571:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  405579:	and    BYTE PTR [rip+0x79622064],ah        # 79a275e3 <libintl_8_dll_iname+0x7961d843>
  40557f:	je     4055e6 <_head_lib64_libkernel32_a-0x3a1a>
  405581:	jae    4055a3 <_head_lib64_libkernel32_a-0x3a5d>
  405583:	(bad)  
  405584:	je     4055a6 <_head_lib64_libkernel32_a-0x3a5a>
  405586:	(bad)  
  405587:	fs fs jb 4055f0 <_head_lib64_libkernel32_a-0x3a10>
  40558b:	jae    405600 <_head_lib64_libkernel32_a-0x3a00>
  40558d:	and    BYTE PTR [rip+0x70],ah        # 405603 <_head_lib64_libkernel32_a-0x39fd>
  405593:	add    BYTE PTR [rax],al
  405595:	add    BYTE PTR [rax],al
  405597:	add    BYTE PTR [rax],ah
  405599:	and    BYTE PTR [rsi+0x69],dl
  40559c:	jb     405612 <_head_lib64_libkernel32_a-0x39ee>
  40559e:	jne    405601 <_head_lib64_libkernel32_a-0x39ff>
  4055a0:	ins    BYTE PTR es:[rdi],dx
  4055a1:	push   rax
  4055a2:	jb     405613 <_head_lib64_libkernel32_a-0x39ed>
  4055a4:	je     40560b <_head_lib64_libkernel32_a-0x39f5>
  4055a6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  4055aa:	(bad)  
  4055ab:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  4055b3:	push   0x646f6320
  4055b8:	and    BYTE PTR gs:[rax],dh
  4055bb:	js     4055e2 <_head_lib64_libkernel32_a-0x3a1e>
  4055bd:	js     4055bf <_head_lib64_libkernel32_a-0x3a41>
  4055bf:	add    BYTE PTR [rax],ah
  4055c1:	and    BYTE PTR [rbp+0x6e],dl
  4055c4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4055c8:	outs   dx,BYTE PTR ds:[rsi]
  4055c9:	and    BYTE PTR [rax+0x73],dh
  4055cc:	gs jne 405633 <_head_lib64_libkernel32_a-0x39cd>
  4055cf:	outs   dx,DWORD PTR ds:[rsi]
  4055d0:	and    BYTE PTR [rdx+0x65],dh
  4055d3:	ins    BYTE PTR es:[rdi],dx
  4055d4:	outs   dx,DWORD PTR ds:[rsi]
  4055d5:	movsxd esp,DWORD PTR [rcx+0x74]
  4055d8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  4055df:	je     405650 <_head_lib64_libkernel32_a-0x39b0>
  4055e1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4055e4:	and    BYTE PTR [rsi+0x65],dh
  4055e7:	jb     40565c <_head_lib64_libkernel32_a-0x39a4>
  4055e9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4055f0:	or     al,BYTE PTR [rax]
  4055f2:	add    BYTE PTR [rax],al
  4055f4:	add    BYTE PTR [rax],al
  4055f6:	add    BYTE PTR [rax],al
  4055f8:	and    BYTE PTR [rax],ah
  4055fa:	push   rbp
  4055fb:	outs   dx,BYTE PTR ds:[rsi]
  4055fc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405600:	outs   dx,BYTE PTR ds:[rsi]
  405601:	and    BYTE PTR [rax+0x73],dh
  405604:	gs jne 40566b <_head_lib64_libkernel32_a-0x3995>
  405607:	outs   dx,DWORD PTR ds:[rsi]
  405608:	and    BYTE PTR [rdx+0x65],dh
  40560b:	ins    BYTE PTR es:[rdi],dx
  40560c:	outs   dx,DWORD PTR ds:[rsi]
  40560d:	movsxd esp,DWORD PTR [rcx+0x74]
  405610:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  405617:	and    BYTE PTR [rbx+0x69],dh
  40561a:	jp     405681 <_head_lib64_libkernel32_a-0x397f>
  40561c:	and    BYTE PTR [rip+0xa2e64],ah        # 4a8486 <libintl_8_dll_iname+0x9e6e6>
	...
  40562e:	add    BYTE PTR [rax],al
  405630:	cs jo  405697 <_head_lib64_libkernel32_a-0x3969>
  405633:	(bad)  
  405634:	je     405697 <_head_lib64_libkernel32_a-0x3969>
	...
  40563e:	add    BYTE PTR [rax],al
  405640:	rex
  405641:	rex
  405642:	add    BYTE PTR [rax],al
	...
  40564d:	add    BYTE PTR [rax],al
  40564f:	add    BYTE PTR [rax+0x40],dl
  405652:	add    BYTE PTR [rax],al
	...
  40565d:	add    BYTE PTR [rax],al
  40565f:	add    BYTE PTR [rax],dl
  405661:	xor    eax,DWORD PTR [rax+0x0]
	...
  405670:	push   rax
  405671:	pop    rbp
  405672:	add    BYTE PTR [rax],al
	...
  40567d:	add    BYTE PTR [rax],al
  40567f:	add    BYTE PTR [rax+0x5d],dl
  405682:	add    BYTE PTR [rax],al
	...
  40568d:	add    BYTE PTR [rax],al
  40568f:	add    al,dl
  405691:	push   rbx
  405692:	add    BYTE PTR [rax],al
	...
  4056a1:	add    BYTE PTR [rax+0x0],al
	...
  4056b0:	cmp    BYTE PTR [rax+rax*2+0x0],dl
	...
  4056bf:	add    BYTE PTR [rax-0x6c],al
  4056c2:	add    BYTE PTR [rax],al
	...
  4056cd:	add    BYTE PTR [rax],al
  4056cf:	add    BYTE PTR [rax-0x6c],bl
  4056d2:	add    BYTE PTR [rax],al
	...
  4056dd:	add    BYTE PTR [rax],al
  4056df:	add    BYTE PTR [rax+0x4094],al
	...
  4056ed:	add    BYTE PTR [rax],al
  4056ef:	add    BYTE PTR [rax+0x4094],bl
	...
  4056fd:	add    BYTE PTR [rax],al
  4056ff:	add    BYTE PTR [rax+0x4094],dh
	...
  405711:	xchg   DWORD PTR [rax+0x0],eax
	...
  405720:	push   0x408a
	...
  40572d:	add    BYTE PTR [rax],al
  40572f:	add    BYTE PTR [rax-0x76],ah
  405732:	add    BYTE PTR [rax],al
	...
  40573d:	add    BYTE PTR [rax],al
  40573f:	add    BYTE PTR [rax-0x76],dl
  405742:	add    BYTE PTR [rax],al
	...
  40574d:	add    BYTE PTR [rax],al
  40574f:	add    BYTE PTR [rax-0x76],bl
  405752:	add    BYTE PTR [rax],al
	...
  405761:	movabs al,ds:0x40
  40576a:	add    BYTE PTR [rax],al
  40576c:	add    BYTE PTR [rax],al
  40576e:	add    BYTE PTR [rax],al
  405770:	adc    BYTE PTR [rax+0x40],ah
	...
  40577e:	add    BYTE PTR [rax],al
  405780:	sbb    BYTE PTR [rax+0x40],ah
	...
  40578e:	add    BYTE PTR [rax],al
  405790:	xor    BYTE PTR [rax+0x40],ah
	...
  40579e:	add    BYTE PTR [rax],al
  4057a0:	nop
  4057a1:	add    BYTE PTR [rax+0x0],0x0
	...
  4057ad:	add    BYTE PTR [rax],al
  4057af:	add    al,dl
  4057b1:	xchg   BYTE PTR [rax+0x0],al
	...
  4057c0:	lock sub BYTE PTR [rax+0x0],al
	...
  4057d0:	and    BYTE PTR [rax+0x0],al
	...
  4057e0:	add    BYTE PTR [rsi+0x40],0x0
	...
  4057ef:	add    BYTE PTR [rax+0x4086],dh
	...
  4057fd:	add    BYTE PTR [rax],al
  4057ff:	add    BYTE PTR [rax+0x4080],ah
	...
  40580d:	add    BYTE PTR [rax],al
  40580f:	add    BYTE PTR [rax+0x4086],bl
	...
  40581d:	add    BYTE PTR [rax],al
  40581f:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  40582e:	add    BYTE PTR [rax],al
  405830:	nop
  405831:	xchg   BYTE PTR [rax+0x0],al
	...
  405840:	rex.RXB
  405841:	rex.XB
  405842:	rex.XB cmp spl,BYTE PTR [r8]
  405845:	sub    BYTE PTR [rdi+0x65],al
  405848:	outs   dx,BYTE PTR ds:[rsi]
  405849:	je     4058ba <_head_lib64_libkernel32_a-0x3746>
  40584b:	outs   dx,DWORD PTR ds:[rsi]
  40584c:	and    BYTE PTR [rsi+rbp*1],dh
  40584f:	cmp    DWORD PTR [rsi],ebp
  405851:	xor    esp,DWORD PTR [rax]
  405853:	jo     405886 <_head_lib64_libkernel32_a-0x377a>
  405855:	xor    BYTE PTR cs:[rax+riz*1],ch
  405859:	jo     4058c4 <_head_lib64_libkernel32_a-0x373c>
  40585b:	gs sub eax,0x2e362e30
  405861:	xor    ch,BYTE PTR [rcx]
  405863:	and    BYTE PTR [rsi+rbp*1],dh
  405866:	cmp    DWORD PTR [rsi],ebp
  405868:	xor    eax,DWORD PTR [rax]
  40586a:	add    BYTE PTR [rax],al
  40586c:	add    BYTE PTR [rax],al
  40586e:	add    BYTE PTR [rax],al
  405870:	rex.RXB
  405871:	rex.XB
  405872:	rex.XB cmp spl,BYTE PTR [r8]
  405875:	sub    BYTE PTR [rdi+0x65],al
  405878:	outs   dx,BYTE PTR ds:[rsi]
  405879:	je     4058ea <_head_lib64_libkernel32_a-0x3716>
  40587b:	outs   dx,DWORD PTR ds:[rsi]
  40587c:	and    BYTE PTR [rip+0x302e342e],dh        # 306e8cb0 <libintl_8_dll_iname+0x302def10>
  405882:	sub    eax,0x70203372
  405887:	xor    DWORD PTR [rsi],ebp
  405889:	xor    ebp,DWORD PTR [rax+riz*1]
  40588c:	jo     4058f7 <_head_lib64_libkernel32_a-0x3709>
  40588e:	gs sub eax,0x2e362e30
  405894:	xor    eax,0x2e352029
  405899:	xor    al,0x2e
  40589b:	xor    BYTE PTR [rax],al
  40589d:	add    BYTE PTR [rax],al
  40589f:	add    BYTE PTR [rdi+0x43],al
  4058a2:	rex.XB cmp spl,BYTE PTR [r8]
  4058a5:	sub    BYTE PTR [rdi+0x65],al
  4058a8:	outs   dx,BYTE PTR ds:[rsi]
  4058a9:	je     40591a <_head_lib64_libkernel32_a-0x36e6>
  4058ab:	outs   dx,DWORD PTR ds:[rsi]
  4058ac:	and    BYTE PTR [rip+0x302e342e],dh        # 306e8ce0 <libintl_8_dll_iname+0x302def40>
  4058b2:	sub    eax,0x70203372
  4058b7:	xor    DWORD PTR [rsi],ebp
  4058b9:	xor    ebp,DWORD PTR [rax+riz*1]
  4058bc:	jo     405927 <_head_lib64_libkernel32_a-0x36d9>
  4058be:	gs sub eax,0x2e362e30
  4058c4:	xor    eax,0x2e352029
  4058c9:	xor    al,0x2e
  4058cb:	xor    BYTE PTR [rax],al
  4058cd:	add    BYTE PTR [rax],al
  4058cf:	add    BYTE PTR [rdi+0x43],al
  4058d2:	rex.XB cmp spl,BYTE PTR [r8]
  4058d5:	sub    BYTE PTR [rdi+0x65],al
  4058d8:	outs   dx,BYTE PTR ds:[rsi]
  4058d9:	je     40594a <_head_lib64_libkernel32_a-0x36b6>
  4058db:	outs   dx,DWORD PTR ds:[rsi]
  4058dc:	and    BYTE PTR [rsi+rbp*1],dh
  4058df:	cmp    DWORD PTR [rsi],ebp
  4058e1:	xor    esp,DWORD PTR [rax]
  4058e3:	jo     405916 <_head_lib64_libkernel32_a-0x36ea>
  4058e5:	xor    BYTE PTR cs:[rax+riz*1],ch
  4058e9:	jo     405954 <_head_lib64_libkernel32_a-0x36ac>
  4058eb:	gs sub eax,0x2e362e30
  4058f1:	xor    ch,BYTE PTR [rcx]
  4058f3:	and    BYTE PTR [rsi+rbp*1],dh
  4058f6:	cmp    DWORD PTR [rsi],ebp
  4058f8:	xor    eax,DWORD PTR [rax]
  4058fa:	add    BYTE PTR [rax],al
  4058fc:	add    BYTE PTR [rax],al
  4058fe:	add    BYTE PTR [rax],al
  405900:	rex.RXB
  405901:	rex.XB
  405902:	rex.XB cmp spl,BYTE PTR [r8]
  405905:	sub    BYTE PTR [rdi+0x65],al
  405908:	outs   dx,BYTE PTR ds:[rsi]
  405909:	je     40597a <_head_lib64_libkernel32_a-0x3686>
  40590b:	outs   dx,DWORD PTR ds:[rsi]
  40590c:	and    BYTE PTR [rsi+rbp*1],dh
  40590f:	cmp    DWORD PTR [rsi],ebp
  405911:	xor    esp,DWORD PTR [rax]
  405913:	jo     405946 <_head_lib64_libkernel32_a-0x36ba>
  405915:	xor    BYTE PTR cs:[rax+riz*1],ch
  405919:	jo     405984 <_head_lib64_libkernel32_a-0x367c>
  40591b:	gs sub eax,0x2e362e30
  405921:	xor    ch,BYTE PTR [rcx]
  405923:	and    BYTE PTR [rsi+rbp*1],dh
  405926:	cmp    DWORD PTR [rsi],ebp
  405928:	xor    eax,DWORD PTR [rax]
  40592a:	add    BYTE PTR [rax],al
  40592c:	add    BYTE PTR [rax],al
  40592e:	add    BYTE PTR [rax],al
  405930:	rex.RXB
  405931:	rex.XB
  405932:	rex.XB cmp spl,BYTE PTR [r8]
  405935:	sub    BYTE PTR [rdi+0x65],al
  405938:	outs   dx,BYTE PTR ds:[rsi]
  405939:	je     4059aa <_head_lib64_libkernel32_a-0x3656>
  40593b:	outs   dx,DWORD PTR ds:[rsi]
  40593c:	and    BYTE PTR [rsi+rbp*1],dh
  40593f:	cmp    DWORD PTR [rsi],ebp
  405941:	xor    esp,DWORD PTR [rax]
  405943:	jo     405976 <_head_lib64_libkernel32_a-0x368a>
  405945:	xor    BYTE PTR cs:[rax+riz*1],ch
  405949:	jo     4059b4 <_head_lib64_libkernel32_a-0x364c>
  40594b:	gs sub eax,0x2e362e30
  405951:	xor    ch,BYTE PTR [rcx]
  405953:	and    BYTE PTR [rsi+rbp*1],dh
  405956:	cmp    DWORD PTR [rsi],ebp
  405958:	xor    eax,DWORD PTR [rax]
  40595a:	add    BYTE PTR [rax],al
  40595c:	add    BYTE PTR [rax],al
  40595e:	add    BYTE PTR [rax],al
  405960:	rex.RXB
  405961:	rex.XB
  405962:	rex.XB cmp spl,BYTE PTR [r8]
  405965:	sub    BYTE PTR [rdi+0x65],al
  405968:	outs   dx,BYTE PTR ds:[rsi]
  405969:	je     4059da <_head_lib64_libkernel32_a-0x3626>
  40596b:	outs   dx,DWORD PTR ds:[rsi]
  40596c:	and    BYTE PTR [rsi+rbp*1],dh
  40596f:	cmp    DWORD PTR [rsi],ebp
  405971:	xor    esp,DWORD PTR [rax]
  405973:	jo     4059a6 <_head_lib64_libkernel32_a-0x365a>
  405975:	xor    BYTE PTR cs:[rax+riz*1],ch
  405979:	jo     4059e4 <_head_lib64_libkernel32_a-0x361c>
  40597b:	gs sub eax,0x2e362e30
  405981:	xor    ch,BYTE PTR [rcx]
  405983:	and    BYTE PTR [rsi+rbp*1],dh
  405986:	cmp    DWORD PTR [rsi],ebp
  405988:	xor    eax,DWORD PTR [rax]
  40598a:	add    BYTE PTR [rax],al
  40598c:	add    BYTE PTR [rax],al
  40598e:	add    BYTE PTR [rax],al
  405990:	rex.RXB
  405991:	rex.XB
  405992:	rex.XB cmp spl,BYTE PTR [r8]
  405995:	sub    BYTE PTR [rdi+0x65],al
  405998:	outs   dx,BYTE PTR ds:[rsi]
  405999:	je     405a0a <_head_lib64_libkernel32_a-0x35f6>
  40599b:	outs   dx,DWORD PTR ds:[rsi]
  40599c:	and    BYTE PTR [rsi+rbp*1],dh
  40599f:	cmp    DWORD PTR [rsi],ebp
  4059a1:	xor    esp,DWORD PTR [rax]
  4059a3:	jo     4059d6 <_head_lib64_libkernel32_a-0x362a>
  4059a5:	xor    BYTE PTR cs:[rax+riz*1],ch
  4059a9:	jo     405a14 <_head_lib64_libkernel32_a-0x35ec>
  4059ab:	gs sub eax,0x2e362e30
  4059b1:	xor    ch,BYTE PTR [rcx]
  4059b3:	and    BYTE PTR [rsi+rbp*1],dh
  4059b6:	cmp    DWORD PTR [rsi],ebp
  4059b8:	xor    eax,DWORD PTR [rax]
  4059ba:	add    BYTE PTR [rax],al
  4059bc:	add    BYTE PTR [rax],al
  4059be:	add    BYTE PTR [rax],al
  4059c0:	rex.RXB
  4059c1:	rex.XB
  4059c2:	rex.XB cmp spl,BYTE PTR [r8]
  4059c5:	sub    BYTE PTR [rdi+0x65],al
  4059c8:	outs   dx,BYTE PTR ds:[rsi]
  4059c9:	je     405a3a <_head_lib64_libkernel32_a-0x35c6>
  4059cb:	outs   dx,DWORD PTR ds:[rsi]
  4059cc:	and    BYTE PTR [rsi+rbp*1],dh
  4059cf:	cmp    DWORD PTR [rsi],ebp
  4059d1:	xor    esp,DWORD PTR [rax]
  4059d3:	jo     405a06 <_head_lib64_libkernel32_a-0x35fa>
  4059d5:	xor    BYTE PTR cs:[rax+riz*1],ch
  4059d9:	jo     405a44 <_head_lib64_libkernel32_a-0x35bc>
  4059db:	gs sub eax,0x2e362e30
  4059e1:	xor    ch,BYTE PTR [rcx]
  4059e3:	and    BYTE PTR [rsi+rbp*1],dh
  4059e6:	cmp    DWORD PTR [rsi],ebp
  4059e8:	xor    eax,DWORD PTR [rax]
  4059ea:	add    BYTE PTR [rax],al
  4059ec:	add    BYTE PTR [rax],al
  4059ee:	add    BYTE PTR [rax],al
  4059f0:	rex.RXB
  4059f1:	rex.XB
  4059f2:	rex.XB cmp spl,BYTE PTR [r8]
  4059f5:	sub    BYTE PTR [rdi+0x65],al
  4059f8:	outs   dx,BYTE PTR ds:[rsi]
  4059f9:	je     405a6a <_head_lib64_libkernel32_a-0x3596>
  4059fb:	outs   dx,DWORD PTR ds:[rsi]
  4059fc:	and    BYTE PTR [rsi+rbp*1],dh
  4059ff:	cmp    DWORD PTR [rsi],ebp
  405a01:	xor    esp,DWORD PTR [rax]
  405a03:	jo     405a36 <_head_lib64_libkernel32_a-0x35ca>
  405a05:	xor    BYTE PTR cs:[rax+riz*1],ch
  405a09:	jo     405a74 <_head_lib64_libkernel32_a-0x358c>
  405a0b:	gs sub eax,0x2e362e30
  405a11:	xor    ch,BYTE PTR [rcx]
  405a13:	and    BYTE PTR [rsi+rbp*1],dh
  405a16:	cmp    DWORD PTR [rsi],ebp
  405a18:	xor    eax,DWORD PTR [rax]
  405a1a:	add    BYTE PTR [rax],al
  405a1c:	add    BYTE PTR [rax],al
  405a1e:	add    BYTE PTR [rax],al
  405a20:	rex.RXB
  405a21:	rex.XB
  405a22:	rex.XB cmp spl,BYTE PTR [r8]
  405a25:	sub    BYTE PTR [rdi+0x65],al
  405a28:	outs   dx,BYTE PTR ds:[rsi]
  405a29:	je     405a9a <_head_lib64_libkernel32_a-0x3566>
  405a2b:	outs   dx,DWORD PTR ds:[rsi]
  405a2c:	and    BYTE PTR [rsi+rbp*1],dh
  405a2f:	cmp    DWORD PTR [rsi],ebp
  405a31:	xor    esp,DWORD PTR [rax]
  405a33:	jo     405a66 <_head_lib64_libkernel32_a-0x359a>
  405a35:	xor    BYTE PTR cs:[rax+riz*1],ch
  405a39:	jo     405aa4 <_head_lib64_libkernel32_a-0x355c>
  405a3b:	gs sub eax,0x2e362e30
  405a41:	xor    ch,BYTE PTR [rcx]
  405a43:	and    BYTE PTR [rsi+rbp*1],dh
  405a46:	cmp    DWORD PTR [rsi],ebp
  405a48:	xor    eax,DWORD PTR [rax]
  405a4a:	add    BYTE PTR [rax],al
  405a4c:	add    BYTE PTR [rax],al
  405a4e:	add    BYTE PTR [rax],al
  405a50:	rex.RXB
  405a51:	rex.XB
  405a52:	rex.XB cmp spl,BYTE PTR [r8]
  405a55:	sub    BYTE PTR [rdi+0x65],al
  405a58:	outs   dx,BYTE PTR ds:[rsi]
  405a59:	je     405aca <_head_lib64_libkernel32_a-0x3536>
  405a5b:	outs   dx,DWORD PTR ds:[rsi]
  405a5c:	and    BYTE PTR [rsi+rbp*1],dh
  405a5f:	cmp    DWORD PTR [rsi],ebp
  405a61:	xor    esp,DWORD PTR [rax]
  405a63:	jo     405a96 <_head_lib64_libkernel32_a-0x356a>
  405a65:	xor    BYTE PTR cs:[rax+riz*1],ch
  405a69:	jo     405ad4 <_head_lib64_libkernel32_a-0x352c>
  405a6b:	gs sub eax,0x2e362e30
  405a71:	xor    ch,BYTE PTR [rcx]
  405a73:	and    BYTE PTR [rsi+rbp*1],dh
  405a76:	cmp    DWORD PTR [rsi],ebp
  405a78:	xor    eax,DWORD PTR [rax]
  405a7a:	add    BYTE PTR [rax],al
  405a7c:	add    BYTE PTR [rax],al
  405a7e:	add    BYTE PTR [rax],al
  405a80:	rex.RXB
  405a81:	rex.XB
  405a82:	rex.XB cmp spl,BYTE PTR [r8]
  405a85:	sub    BYTE PTR [rdi+0x65],al
  405a88:	outs   dx,BYTE PTR ds:[rsi]
  405a89:	je     405afa <_head_lib64_libkernel32_a-0x3506>
  405a8b:	outs   dx,DWORD PTR ds:[rsi]
  405a8c:	and    BYTE PTR [rsi+rbp*1],dh
  405a8f:	cmp    DWORD PTR [rsi],ebp
  405a91:	xor    esp,DWORD PTR [rax]
  405a93:	jo     405ac6 <_head_lib64_libkernel32_a-0x353a>
  405a95:	xor    BYTE PTR cs:[rax+riz*1],ch
  405a99:	jo     405b04 <_head_lib64_libkernel32_a-0x34fc>
  405a9b:	gs sub eax,0x2e362e30
  405aa1:	xor    ch,BYTE PTR [rcx]
  405aa3:	and    BYTE PTR [rsi+rbp*1],dh
  405aa6:	cmp    DWORD PTR [rsi],ebp
  405aa8:	xor    eax,DWORD PTR [rax]
  405aaa:	add    BYTE PTR [rax],al
  405aac:	add    BYTE PTR [rax],al
  405aae:	add    BYTE PTR [rax],al
  405ab0:	rex.RXB
  405ab1:	rex.XB
  405ab2:	rex.XB cmp spl,BYTE PTR [r8]
  405ab5:	sub    BYTE PTR [rdi+0x65],al
  405ab8:	outs   dx,BYTE PTR ds:[rsi]
  405ab9:	je     405b2a <_head_lib64_libkernel32_a-0x34d6>
  405abb:	outs   dx,DWORD PTR ds:[rsi]
  405abc:	and    BYTE PTR [rsi+rbp*1],dh
  405abf:	cmp    DWORD PTR [rsi],ebp
  405ac1:	xor    esp,DWORD PTR [rax]
  405ac3:	jo     405af6 <_head_lib64_libkernel32_a-0x350a>
  405ac5:	xor    BYTE PTR cs:[rax+riz*1],ch
  405ac9:	jo     405b34 <_head_lib64_libkernel32_a-0x34cc>
  405acb:	gs sub eax,0x2e362e30
  405ad1:	xor    ch,BYTE PTR [rcx]
  405ad3:	and    BYTE PTR [rsi+rbp*1],dh
  405ad6:	cmp    DWORD PTR [rsi],ebp
  405ad8:	xor    eax,DWORD PTR [rax]
  405ada:	add    BYTE PTR [rax],al
  405adc:	add    BYTE PTR [rax],al
  405ade:	add    BYTE PTR [rax],al
  405ae0:	rex.RXB
  405ae1:	rex.XB
  405ae2:	rex.XB cmp spl,BYTE PTR [r8]
  405ae5:	sub    BYTE PTR [rdi+0x65],al
  405ae8:	outs   dx,BYTE PTR ds:[rsi]
  405ae9:	je     405b5a <_head_lib64_libkernel32_a-0x34a6>
  405aeb:	outs   dx,DWORD PTR ds:[rsi]
  405aec:	and    BYTE PTR [rsi+rbp*1],dh
  405aef:	cmp    DWORD PTR [rsi],ebp
  405af1:	xor    esp,DWORD PTR [rax]
  405af3:	jo     405b26 <_head_lib64_libkernel32_a-0x34da>
  405af5:	xor    BYTE PTR cs:[rax+riz*1],ch
  405af9:	jo     405b64 <_head_lib64_libkernel32_a-0x349c>
  405afb:	gs sub eax,0x2e362e30
  405b01:	xor    ch,BYTE PTR [rcx]
  405b03:	and    BYTE PTR [rsi+rbp*1],dh
  405b06:	cmp    DWORD PTR [rsi],ebp
  405b08:	xor    eax,DWORD PTR [rax]
  405b0a:	add    BYTE PTR [rax],al
  405b0c:	add    BYTE PTR [rax],al
  405b0e:	add    BYTE PTR [rax],al
  405b10:	rex.RXB
  405b11:	rex.XB
  405b12:	rex.XB cmp spl,BYTE PTR [r8]
  405b15:	sub    BYTE PTR [rdi+0x65],al
  405b18:	outs   dx,BYTE PTR ds:[rsi]
  405b19:	je     405b8a <_head_lib64_libkernel32_a-0x3476>
  405b1b:	outs   dx,DWORD PTR ds:[rsi]
  405b1c:	and    BYTE PTR [rsi+rbp*1],dh
  405b1f:	cmp    DWORD PTR [rsi],ebp
  405b21:	xor    esp,DWORD PTR [rax]
  405b23:	jo     405b56 <_head_lib64_libkernel32_a-0x34aa>
  405b25:	xor    BYTE PTR cs:[rax+riz*1],ch
  405b29:	jo     405b94 <_head_lib64_libkernel32_a-0x346c>
  405b2b:	gs sub eax,0x2e362e30
  405b31:	xor    ch,BYTE PTR [rcx]
  405b33:	and    BYTE PTR [rsi+rbp*1],dh
  405b36:	cmp    DWORD PTR [rsi],ebp
  405b38:	xor    eax,DWORD PTR [rax]
  405b3a:	add    BYTE PTR [rax],al
  405b3c:	add    BYTE PTR [rax],al
  405b3e:	add    BYTE PTR [rax],al
  405b40:	rex.RXB
  405b41:	rex.XB
  405b42:	rex.XB cmp spl,BYTE PTR [r8]
  405b45:	sub    BYTE PTR [rdi+0x65],al
  405b48:	outs   dx,BYTE PTR ds:[rsi]
  405b49:	je     405bba <_head_lib64_libkernel32_a-0x3446>
  405b4b:	outs   dx,DWORD PTR ds:[rsi]
  405b4c:	and    BYTE PTR [rsi+rbp*1],dh
  405b4f:	cmp    DWORD PTR [rsi],ebp
  405b51:	xor    esp,DWORD PTR [rax]
  405b53:	jo     405b86 <_head_lib64_libkernel32_a-0x347a>
  405b55:	xor    BYTE PTR cs:[rax+riz*1],ch
  405b59:	jo     405bc4 <_head_lib64_libkernel32_a-0x343c>
  405b5b:	gs sub eax,0x2e362e30
  405b61:	xor    ch,BYTE PTR [rcx]
  405b63:	and    BYTE PTR [rsi+rbp*1],dh
  405b66:	cmp    DWORD PTR [rsi],ebp
  405b68:	xor    eax,DWORD PTR [rax]
  405b6a:	add    BYTE PTR [rax],al
  405b6c:	add    BYTE PTR [rax],al
  405b6e:	add    BYTE PTR [rax],al
  405b70:	rex.RXB
  405b71:	rex.XB
  405b72:	rex.XB cmp spl,BYTE PTR [r8]
  405b75:	sub    BYTE PTR [rdi+0x65],al
  405b78:	outs   dx,BYTE PTR ds:[rsi]
  405b79:	je     405bea <_head_lib64_libkernel32_a-0x3416>
  405b7b:	outs   dx,DWORD PTR ds:[rsi]
  405b7c:	and    BYTE PTR [rsi+rbp*1],dh
  405b7f:	cmp    DWORD PTR [rsi],ebp
  405b81:	xor    esp,DWORD PTR [rax]
  405b83:	jo     405bb6 <_head_lib64_libkernel32_a-0x344a>
  405b85:	xor    BYTE PTR cs:[rax+riz*1],ch
  405b89:	jo     405bf4 <_head_lib64_libkernel32_a-0x340c>
  405b8b:	gs sub eax,0x2e362e30
  405b91:	xor    ch,BYTE PTR [rcx]
  405b93:	and    BYTE PTR [rsi+rbp*1],dh
  405b96:	cmp    DWORD PTR [rsi],ebp
  405b98:	xor    eax,DWORD PTR [rax]
  405b9a:	add    BYTE PTR [rax],al
  405b9c:	add    BYTE PTR [rax],al
  405b9e:	add    BYTE PTR [rax],al
  405ba0:	rex.RXB
  405ba1:	rex.XB
  405ba2:	rex.XB cmp spl,BYTE PTR [r8]
  405ba5:	sub    BYTE PTR [rdi+0x65],al
  405ba8:	outs   dx,BYTE PTR ds:[rsi]
  405ba9:	je     405c1a <_head_lib64_libkernel32_a-0x33e6>
  405bab:	outs   dx,DWORD PTR ds:[rsi]
  405bac:	and    BYTE PTR [rsi+rbp*1],dh
  405baf:	cmp    DWORD PTR [rsi],ebp
  405bb1:	xor    esp,DWORD PTR [rax]
  405bb3:	jo     405be6 <_head_lib64_libkernel32_a-0x341a>
  405bb5:	xor    BYTE PTR cs:[rax+riz*1],ch
  405bb9:	jo     405c24 <_head_lib64_libkernel32_a-0x33dc>
  405bbb:	gs sub eax,0x2e362e30
  405bc1:	xor    ch,BYTE PTR [rcx]
  405bc3:	and    BYTE PTR [rsi+rbp*1],dh
  405bc6:	cmp    DWORD PTR [rsi],ebp
  405bc8:	xor    eax,DWORD PTR [rax]
  405bca:	add    BYTE PTR [rax],al
  405bcc:	add    BYTE PTR [rax],al
  405bce:	add    BYTE PTR [rax],al
  405bd0:	rex.RXB
  405bd1:	rex.XB
  405bd2:	rex.XB cmp spl,BYTE PTR [r8]
  405bd5:	sub    BYTE PTR [rdi+0x65],al
  405bd8:	outs   dx,BYTE PTR ds:[rsi]
  405bd9:	je     405c4a <_head_lib64_libkernel32_a-0x33b6>
  405bdb:	outs   dx,DWORD PTR ds:[rsi]
  405bdc:	and    BYTE PTR [rsi+rbp*1],dh
  405bdf:	cmp    DWORD PTR [rsi],ebp
  405be1:	xor    esp,DWORD PTR [rax]
  405be3:	jo     405c16 <_head_lib64_libkernel32_a-0x33ea>
  405be5:	xor    BYTE PTR cs:[rax+riz*1],ch
  405be9:	jo     405c54 <_head_lib64_libkernel32_a-0x33ac>
  405beb:	gs sub eax,0x2e362e30
  405bf1:	xor    ch,BYTE PTR [rcx]
  405bf3:	and    BYTE PTR [rsi+rbp*1],dh
  405bf6:	cmp    DWORD PTR [rsi],ebp
  405bf8:	xor    eax,DWORD PTR [rax]
  405bfa:	add    BYTE PTR [rax],al
  405bfc:	add    BYTE PTR [rax],al
  405bfe:	add    BYTE PTR [rax],al
  405c00:	rex.RXB
  405c01:	rex.XB
  405c02:	rex.XB cmp spl,BYTE PTR [r8]
  405c05:	sub    BYTE PTR [rdi+0x65],al
  405c08:	outs   dx,BYTE PTR ds:[rsi]
  405c09:	je     405c7a <_head_lib64_libkernel32_a-0x3386>
  405c0b:	outs   dx,DWORD PTR ds:[rsi]
  405c0c:	and    BYTE PTR [rsi+rbp*1],dh
  405c0f:	cmp    DWORD PTR [rsi],ebp
  405c11:	xor    esp,DWORD PTR [rax]
  405c13:	jo     405c46 <_head_lib64_libkernel32_a-0x33ba>
  405c15:	xor    BYTE PTR cs:[rax+riz*1],ch
  405c19:	jo     405c84 <_head_lib64_libkernel32_a-0x337c>
  405c1b:	gs sub eax,0x2e362e30
  405c21:	xor    ch,BYTE PTR [rcx]
  405c23:	and    BYTE PTR [rsi+rbp*1],dh
  405c26:	cmp    DWORD PTR [rsi],ebp
  405c28:	xor    eax,DWORD PTR [rax]
  405c2a:	add    BYTE PTR [rax],al
  405c2c:	add    BYTE PTR [rax],al
  405c2e:	add    BYTE PTR [rax],al
  405c30:	rex.RXB
  405c31:	rex.XB
  405c32:	rex.XB cmp spl,BYTE PTR [r8]
  405c35:	sub    BYTE PTR [rdi+0x65],al
  405c38:	outs   dx,BYTE PTR ds:[rsi]
  405c39:	je     405caa <_head_lib64_libkernel32_a-0x3356>
  405c3b:	outs   dx,DWORD PTR ds:[rsi]
  405c3c:	and    BYTE PTR [rsi+rbp*1],dh
  405c3f:	cmp    DWORD PTR [rsi],ebp
  405c41:	xor    esp,DWORD PTR [rax]
  405c43:	jo     405c76 <_head_lib64_libkernel32_a-0x338a>
  405c45:	xor    BYTE PTR cs:[rax+riz*1],ch
  405c49:	jo     405cb4 <_head_lib64_libkernel32_a-0x334c>
  405c4b:	gs sub eax,0x2e362e30
  405c51:	xor    ch,BYTE PTR [rcx]
  405c53:	and    BYTE PTR [rsi+rbp*1],dh
  405c56:	cmp    DWORD PTR [rsi],ebp
  405c58:	xor    eax,DWORD PTR [rax]
  405c5a:	add    BYTE PTR [rax],al
  405c5c:	add    BYTE PTR [rax],al
  405c5e:	add    BYTE PTR [rax],al
  405c60:	rex.RXB
  405c61:	rex.XB
  405c62:	rex.XB cmp spl,BYTE PTR [r8]
  405c65:	sub    BYTE PTR [rdi+0x65],al
  405c68:	outs   dx,BYTE PTR ds:[rsi]
  405c69:	je     405cda <_head_lib64_libkernel32_a-0x3326>
  405c6b:	outs   dx,DWORD PTR ds:[rsi]
  405c6c:	and    BYTE PTR [rsi+rbp*1],dh
  405c6f:	cmp    DWORD PTR [rsi],ebp
  405c71:	xor    esp,DWORD PTR [rax]
  405c73:	jo     405ca6 <_head_lib64_libkernel32_a-0x335a>
  405c75:	xor    BYTE PTR cs:[rax+riz*1],ch
  405c79:	jo     405ce4 <_head_lib64_libkernel32_a-0x331c>
  405c7b:	gs sub eax,0x2e362e30
  405c81:	xor    ch,BYTE PTR [rcx]
  405c83:	and    BYTE PTR [rsi+rbp*1],dh
  405c86:	cmp    DWORD PTR [rsi],ebp
  405c88:	xor    eax,DWORD PTR [rax]
  405c8a:	add    BYTE PTR [rax],al
  405c8c:	add    BYTE PTR [rax],al
  405c8e:	add    BYTE PTR [rax],al
  405c90:	rex.RXB
  405c91:	rex.XB
  405c92:	rex.XB cmp spl,BYTE PTR [r8]
  405c95:	sub    BYTE PTR [rdi+0x65],al
  405c98:	outs   dx,BYTE PTR ds:[rsi]
  405c99:	je     405d0a <_head_lib64_libkernel32_a-0x32f6>
  405c9b:	outs   dx,DWORD PTR ds:[rsi]
  405c9c:	and    BYTE PTR [rip+0x302e342e],dh        # 306e90d0 <libintl_8_dll_iname+0x302df330>
  405ca2:	sub    eax,0x70203372
  405ca7:	xor    DWORD PTR [rsi],ebp
  405ca9:	xor    ebp,DWORD PTR [rax+riz*1]
  405cac:	jo     405d17 <_head_lib64_libkernel32_a-0x32e9>
  405cae:	gs sub eax,0x2e362e30
  405cb4:	xor    eax,0x2e352029
  405cb9:	xor    al,0x2e
  405cbb:	xor    BYTE PTR [rax],al
  405cbd:	add    BYTE PTR [rax],al
  405cbf:	add    BYTE PTR [rdi+0x43],al
  405cc2:	rex.XB cmp spl,BYTE PTR [r8]
  405cc5:	sub    BYTE PTR [rdi+0x65],al
  405cc8:	outs   dx,BYTE PTR ds:[rsi]
  405cc9:	je     405d3a <_head_lib64_libkernel32_a-0x32c6>
  405ccb:	outs   dx,DWORD PTR ds:[rsi]
  405ccc:	and    BYTE PTR [rsi+rbp*1],dh
  405ccf:	cmp    DWORD PTR [rsi],ebp
  405cd1:	xor    esp,DWORD PTR [rax]
  405cd3:	jo     405d06 <_head_lib64_libkernel32_a-0x32fa>
  405cd5:	xor    BYTE PTR cs:[rax+riz*1],ch
  405cd9:	jo     405d44 <_head_lib64_libkernel32_a-0x32bc>
  405cdb:	gs sub eax,0x2e362e30
  405ce1:	xor    ch,BYTE PTR [rcx]
  405ce3:	and    BYTE PTR [rsi+rbp*1],dh
  405ce6:	cmp    DWORD PTR [rsi],ebp
  405ce8:	xor    eax,DWORD PTR [rax]
  405cea:	add    BYTE PTR [rax],al
  405cec:	add    BYTE PTR [rax],al
  405cee:	add    BYTE PTR [rax],al
  405cf0:	rex.RXB
  405cf1:	rex.XB
  405cf2:	rex.XB cmp spl,BYTE PTR [r8]
  405cf5:	sub    BYTE PTR [rdi+0x65],al
  405cf8:	outs   dx,BYTE PTR ds:[rsi]
  405cf9:	je     405d6a <_head_lib64_libkernel32_a-0x3296>
  405cfb:	outs   dx,DWORD PTR ds:[rsi]
  405cfc:	and    BYTE PTR [rsi+rbp*1],dh
  405cff:	cmp    DWORD PTR [rsi],ebp
  405d01:	xor    esp,DWORD PTR [rax]
  405d03:	jo     405d36 <_head_lib64_libkernel32_a-0x32ca>
  405d05:	xor    BYTE PTR cs:[rax+riz*1],ch
  405d09:	jo     405d74 <_head_lib64_libkernel32_a-0x328c>
  405d0b:	gs sub eax,0x2e362e30
  405d11:	xor    ch,BYTE PTR [rcx]
  405d13:	and    BYTE PTR [rsi+rbp*1],dh
  405d16:	cmp    DWORD PTR [rsi],ebp
  405d18:	xor    eax,DWORD PTR [rax]
  405d1a:	add    BYTE PTR [rax],al
  405d1c:	add    BYTE PTR [rax],al
  405d1e:	add    BYTE PTR [rax],al
  405d20:	rex.RXB
  405d21:	rex.XB
  405d22:	rex.XB cmp spl,BYTE PTR [r8]
  405d25:	sub    BYTE PTR [rdi+0x65],al
  405d28:	outs   dx,BYTE PTR ds:[rsi]
  405d29:	je     405d9a <_head_lib64_libkernel32_a-0x3266>
  405d2b:	outs   dx,DWORD PTR ds:[rsi]
  405d2c:	and    BYTE PTR [rip+0x302e342e],dh        # 306e9160 <libintl_8_dll_iname+0x302df3c0>
  405d32:	sub    eax,0x70203372
  405d37:	xor    DWORD PTR [rsi],ebp
  405d39:	xor    ebp,DWORD PTR [rax+riz*1]
  405d3c:	jo     405da7 <_head_lib64_libkernel32_a-0x3259>
  405d3e:	gs sub eax,0x2e362e30
  405d44:	xor    eax,0x2e352029
  405d49:	xor    al,0x2e
  405d4b:	xor    BYTE PTR [rax],al
  405d4d:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     406023 <_head_lib64_libkernel32_a-0x2fdd>
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     40603b <_head_lib64_libkernel32_a-0x2fc5>
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 406047 <_head_lib64_libkernel32_a-0x2fb9>
  406047:	add    BYTE PTR [rax],dh
  406049:	adc    eax,0x15360000
  40604e:	add    BYTE PTR [rax],al
  406050:	push   0x40000070
  406055:	adc    eax,0x159c0000
  40605a:	add    BYTE PTR [rax],al
  40605c:	jo     4060ce <_head_lib64_libkernel32_a-0x2f32>
  40605e:	add    BYTE PTR [rax],al
  406060:	movabs al,ds:0x7c000015a6000015
  406069:	jo     40606b <_head_lib64_libkernel32_a-0x2f95>
  40606b:	add    BYTE PTR [rax+0x1b000015],dh
  406071:	(bad)  
  406072:	add    BYTE PTR [rax],al
  406074:	test   BYTE PTR [rax+0x0],dh
  406077:	add    BYTE PTR [rax],ah
  406079:	(bad)  
  40607a:	add    BYTE PTR [rax],al
  40607c:	pop    rbx
  40607d:	(bad)  
  40607e:	add    BYTE PTR [rax],al
  406080:	mov    WORD PTR [rax+0x0],?
  406083:	add    BYTE PTR [rax+0x16],ah
  406086:	add    BYTE PTR [rax],al
  406088:	jno    4060a1 <_head_lib64_libkernel32_a-0x2f5f>
  40608a:	add    BYTE PTR [rax],al
  40608c:	xchg   esp,eax
  40608d:	jo     40608f <_head_lib64_libkernel32_a-0x2f71>
  40608f:	add    BYTE PTR [rax-0x49ffffe9],al
  406095:	(bad)  
  406096:	add    BYTE PTR [rax],al
  406098:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  406099:	jo     40609b <_head_lib64_libkernel32_a-0x2f65>
  40609b:	add    al,al
  40609d:	(bad)  
  40609e:	add    BYTE PTR [rax],al
  4060a0:	neg    DWORD PTR [rcx]
  4060a2:	add    BYTE PTR [rax],al
  4060a4:	mov    al,0x70
  4060a6:	add    BYTE PTR [rax],al
  4060a8:	add    BYTE PTR [rdx],bl
  4060aa:	add    BYTE PTR [rax],al
  4060ac:	xchg   edx,eax
  4060ad:	sbb    al,BYTE PTR [rax]
  4060af:	add    al,dl
  4060b1:	jo     4060b3 <_head_lib64_libkernel32_a-0x2f4d>
  4060b3:	add    BYTE PTR [rax-0x3affffe6],ah
  4060b9:	sbb    al,BYTE PTR [rax]
  4060bb:	add    al,bl
  4060bd:	jo     4060bf <_head_lib64_libkernel32_a-0x2f41>
  4060bf:	add    BYTE PTR [rax+0x4700001b],ah
  4060c5:	sbb    al,0x0
  4060c7:	add    ah,ah
  4060c9:	jo     4060cb <_head_lib64_libkernel32_a-0x2f35>
  4060cb:	add    BYTE PTR [rax+0x1c],dl
  4060ce:	add    BYTE PTR [rax],al
  4060d0:	imul   ebx,DWORD PTR [rax+rax*1],0x70ec00
  4060d7:	add    BYTE PTR [rax+0x1c],dh
  4060da:	add    BYTE PTR [rax],al
  4060dc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4060dd:	sbb    al,0x0
  4060df:	add    ah,dh
  4060e1:	jo     4060e3 <_head_lib64_libkernel32_a-0x2f1d>
  4060e3:	add    BYTE PTR [rax+0x500001c],dh
  4060e9:	sbb    eax,0x70fc0000
  4060ee:	add    BYTE PTR [rax],al
  4060f0:	adc    BYTE PTR [rip+0x1d2c0000],bl        # 1d6c60f6 <libintl_8_dll_iname+0x1d2bc356>
  4060f6:	add    BYTE PTR [rax],al
  4060f8:	or     BYTE PTR [rcx+0x0],dh
  4060fb:	add    BYTE PTR [rax],dh
  4060fd:	sbb    eax,0x1d3a0000
  406102:	add    BYTE PTR [rax],al
  406104:	or     al,0x71
  406106:	add    BYTE PTR [rax],al
  406108:	rex sbb eax,0x1d430000
  40610e:	add    BYTE PTR [rax],al
  406110:	adc    BYTE PTR [rcx+0x0],dh
  406113:	add    BYTE PTR [rax+0x1d],dl
  406116:	add    BYTE PTR [rax],al
  406118:	es (bad) 
  40611a:	add    BYTE PTR [rax],al
  40611c:	adc    al,0x71
  40611e:	add    BYTE PTR [rax],al
  406120:	xor    BYTE PTR [rsi],bl
  406122:	add    BYTE PTR [rax],al
  406124:	sub    ebx,DWORD PTR [rdi]
  406126:	add    BYTE PTR [rax],al
  406128:	and    al,0x71
  40612a:	add    BYTE PTR [rax],al
  40612c:	xor    BYTE PTR [rdi],bl
  40612e:	add    BYTE PTR [rax],al
  406130:	pop    rdi
  406131:	(bad)  
  406132:	add    BYTE PTR [rax],al
  406134:	xor    al,0x71
  406136:	add    BYTE PTR [rax],al
  406138:	(bad)  
  406139:	(bad)  
  40613a:	add    BYTE PTR [rax],al
  40613c:	leave  
  40613d:	(bad)  
  40613e:	add    BYTE PTR [rax],al
  406140:	cmp    al,0x71
  406142:	add    BYTE PTR [rax],al
  406144:	rcr    BYTE PTR [rdi],1
  406146:	add    BYTE PTR [rax],al
  406148:	rcr    DWORD PTR [rdi],cl
  40614a:	add    BYTE PTR [rax],al
  40614c:	rex.W jno 40614f <_head_lib64_libkernel32_a-0x2eb1>
  40614f:	add    al,ah
  406151:	(bad)  
  406152:	add    BYTE PTR [rax],al
  406154:	and    DWORD PTR [rax],esp
  406156:	add    BYTE PTR [rax],al
  406158:	rex.WR jno 40615b <_head_lib64_libkernel32_a-0x2ea5>
  40615b:	add    BYTE PTR [rax],dh
  40615d:	and    BYTE PTR [rax],al
  40615f:	add    BYTE PTR [rax+riz*1],bh
  406162:	add    BYTE PTR [rax],al
  406164:	push   rsp
  406165:	jno    406167 <_head_lib64_libkernel32_a-0x2e99>
  406167:	add    BYTE PTR [rax+0x20],al
  40616a:	add    BYTE PTR [rax],al
  40616c:	cmp    al,0x21
  40616e:	add    BYTE PTR [rax],al
  406170:	pop    rax
  406171:	jno    406173 <_head_lib64_libkernel32_a-0x2e8d>
  406173:	add    BYTE PTR [rax+0x21],al
  406176:	add    BYTE PTR [rax],al
  406178:	rex.XB and DWORD PTR [r8],eax
  40617b:	add    BYTE PTR [rax+0x71],dh
  40617e:	add    BYTE PTR [rax],al
  406180:	push   rax
  406181:	and    DWORD PTR [rax],eax
  406183:	add    BYTE PTR [rcx+riz*1+0x0],dl
  406187:	add    BYTE PTR [rcx+rsi*2+0x0],dh
  40618b:	add    BYTE PTR [rax+0x21],ah
  40618e:	add    BYTE PTR [rax],al
  406190:	and    DWORD PTR fs:[rax],eax
  406193:	add    BYTE PTR [rax+0x71],bh
  406196:	add    BYTE PTR [rax],al
  406198:	jo     4061bb <_head_lib64_libkernel32_a-0x2e45>
  40619a:	add    BYTE PTR [rax],al
  40619c:	shl    DWORD PTR [rcx],1
  40619e:	add    BYTE PTR [rax],al
  4061a0:	jl     406213 <_head_lib64_libkernel32_a-0x2ded>
  4061a2:	add    BYTE PTR [rax],al
  4061a4:	loopne 4061c7 <_head_lib64_libkernel32_a-0x2e39>
  4061a6:	add    BYTE PTR [rax],al
  4061a8:	rex.X and eax,DWORD PTR [rax]
  4061ab:	add    BYTE PTR [rax+0x50000071],cl
  4061b1:	and    eax,DWORD PTR [rax]
  4061b3:	add    BYTE PTR [rcx+0x26],cl
  4061b6:	add    BYTE PTR [rax],al
  4061b8:	pushf  
  4061b9:	jno    4061bb <_head_lib64_libkernel32_a-0x2e45>
  4061bb:	add    BYTE PTR [rax+0x26],dl
  4061be:	add    BYTE PTR [rax],al
  4061c0:	mul    BYTE PTR [rdi]
  4061c2:	add    BYTE PTR [rax],al
  4061c4:	mov    ah,0x71
  4061c6:	add    BYTE PTR [rax],al
  4061c8:	add    BYTE PTR [rax],ch
  4061ca:	add    BYTE PTR [rax],al
  4061cc:	in     al,dx
  4061cd:	sub    BYTE PTR [rax],al
  4061cf:	add    BYTE PTR [rcx+rsi*2+0x28f00000],bh
  4061d6:	add    BYTE PTR [rax],al
  4061d8:	test   al,0x2a
  4061da:	add    BYTE PTR [rax],al
  4061dc:	int3   
  4061dd:	jno    4061df <_head_lib64_libkernel32_a-0x2e21>
  4061df:	add    BYTE PTR [rax+0x1d00002a],dh
  4061e5:	sub    eax,DWORD PTR [rax]
  4061e7:	add    ah,dl
  4061e9:	jno    4061eb <_head_lib64_libkernel32_a-0x2e15>
  4061eb:	add    BYTE PTR [rax],ah
  4061ed:	sub    eax,DWORD PTR [rax]
  4061ef:	add    BYTE PTR [rdi-0x1bffffd5],bl
  4061f5:	jno    4061f7 <_head_lib64_libkernel32_a-0x2e09>
  4061f7:	add    BYTE PTR [rax+0x3f00002b],ah
  4061fd:	sub    al,0x0
  4061ff:	add    al,dh
  406201:	jno    406203 <_head_lib64_libkernel32_a-0x2dfd>
  406203:	add    BYTE PTR [rax+0x2c],al
  406206:	add    BYTE PTR [rax],al
  406208:	sbb    ch,BYTE PTR [rip+0x71f80000]        # 7238620e <libintl_8_dll_iname+0x71f7c46e>
  40620e:	add    BYTE PTR [rax],al
  406210:	and    BYTE PTR [rip+0x2d3f0000],ch        # 2d7f6216 <libintl_8_dll_iname+0x2d3ec476>
  406216:	add    BYTE PTR [rax],al
  406218:	add    BYTE PTR [rdx+0x0],dh
  40621b:	add    BYTE PTR [rax+0x2d],al
  40621e:	add    BYTE PTR [rax],al
  406220:	push   rdx
  406221:	sub    eax,0x72040000
  406226:	add    BYTE PTR [rax],al
  406228:	(bad)  
  406229:	sub    eax,0x2da50000
  40622e:	add    BYTE PTR [rax],al
  406230:	or     BYTE PTR [rdx+0x0],dh
  406233:	add    BYTE PTR [rax+0x4e00002d],dh
  406239:	add    BYTE PTR cs:[rax],al
  40623c:	or     al,0x72
  40623e:	add    BYTE PTR [rax],al
  406240:	push   rax
  406241:	add    BYTE PTR cs:[rax],al
  406244:	xchg   ebx,eax
  406245:	add    BYTE PTR cs:[rax],al
  406248:	sbb    BYTE PTR [rdx+0x0],dh
  40624b:	add    BYTE PTR [rax-0x24ffffd2],ah
  406251:	add    BYTE PTR cs:[rax],al
  406254:	and    al,0x72
  406256:	add    BYTE PTR [rax],al
  406258:	loopne 406288 <_head_lib64_libkernel32_a-0x2d78>
  40625a:	add    BYTE PTR [rax],al
  40625c:	outs   dx,BYTE PTR ds:[rsi]
  40625d:	(bad)  
  40625e:	add    BYTE PTR [rax],al
  406260:	sub    al,0x72
  406262:	add    BYTE PTR [rax],al
  406264:	jo     406295 <_head_lib64_libkernel32_a-0x2d6b>
  406266:	add    BYTE PTR [rax],al
  406268:	test   al,0x2f
  40626a:	add    BYTE PTR [rax],al
  40626c:	cmp    BYTE PTR [rdx+0x0],dh
  40626f:	add    BYTE PTR [rax+0x500002f],dh
  406275:	xor    BYTE PTR [rax],al
  406277:	add    BYTE PTR [rdx+rsi*2+0x0],al
  40627b:	add    BYTE PTR [rax],dl
  40627d:	xor    BYTE PTR [rax],al
  40627f:	add    BYTE PTR [rsi+0x50000030],bh
  406285:	jb     406287 <_head_lib64_libkernel32_a-0x2d79>
  406287:	add    al,dl
  406289:	xor    DWORD PTR [rax],eax
  40628b:	add    al,bl
  40628d:	xor    DWORD PTR [rax],eax
  40628f:	add    BYTE PTR [rax+0x72],ah
  406292:	add    BYTE PTR [rax],al
  406294:	loopne 4062c7 <_head_lib64_libkernel32_a-0x2d39>
  406296:	add    BYTE PTR [rax],al
  406298:	jmp    4062cb <_head_lib64_libkernel32_a-0x2d35>
  40629a:	add    BYTE PTR [rax],al
  40629c:	fs jb  40629f <_head_lib64_libkernel32_a-0x2d61>
  40629f:	add    al,al
  4062a1:	xor    al,BYTE PTR [rax]
  4062a3:	add    dl,dh
  4062a5:	xor    al,BYTE PTR [rax]
  4062a7:	add    ah,bl
  4062a9:	jo     4062ab <_head_lib64_libkernel32_a-0x2d55>
  4062ab:	add    BYTE PTR [rax],al
  4062ad:	xor    eax,DWORD PTR [rax]
  4062af:	add    BYTE PTR [rdx],cl
  4062b1:	xor    eax,DWORD PTR [rax]
  4062b3:	add    BYTE PTR [rax+0x72],ch
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     407028 <_head_lib64_libkernel32_a-0x1fd8>
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	shl    BYTE PTR [rcx],0x0
  407033:	add    BYTE PTR [rcx],al
  407035:	add    BYTE PTR [rax],al
  407037:	add    ah,dl
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    al,dh
  407041:	sub    BYTE PTR [rax],al
  407043:	add    ah,ch
  407045:	adc    al,0x0
  407047:	add    BYTE PTR [rcx],cl
  407049:	add    al,0x1
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	shl    BYTE PTR [rcx],0x0
  407053:	add    BYTE PTR [rcx],al
  407055:	add    BYTE PTR [rax],al
  407057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40705e:	add    BYTE PTR [rax],al
  407060:	lock sub BYTE PTR [rax],al
  407063:	add    BYTE PTR [rdx*1+0x4010000],bl
  40706a:	add    al,BYTE PTR [rip+0x50010304]        # 50417374 <libintl_8_dll_iname+0x5000d5d4>
  407070:	add    DWORD PTR [rax],ecx
  407072:	add    eax,DWORD PTR [rip+0x3043208]        # 344a280 <libintl_8_dll_iname+0x30404e0>
  407078:	add    DWORD PTR [rax+0x0],edx
  40707b:	add    BYTE PTR [rcx],al
  40707d:	add    al,0x2
  40707f:	add    eax,0x50010304
  407084:	add    DWORD PTR [rcx+rax*1],eax
  407087:	add    BYTE PTR [rdx+rax*4],al
  40708a:	add    BYTE PTR [rax],al
  40708c:	add    DWORD PTR [rip+0x32050002],eax        # 32457094 <libintl_8_dll_iname+0x3204d2f4>
  407092:	add    DWORD PTR [rax],esi
  407094:	add    DWORD PTR [rsi+rax*1],ecx
  407097:	add    BYTE PTR [rax+rbp*2],cl
  40709a:	add    eax,0x3b20700
  40709f:	xor    BYTE PTR [rdx],al
  4070a1:	(bad)  
  4070a2:	add    DWORD PTR [rax+0x1],esi
  4070a5:	(bad)  
  4070a6:	add    al,0x0
  4070a8:	(bad)  
  4070a9:	xor    al,BYTE PTR [rbx]
  4070ab:	xor    BYTE PTR [rdx],al
  4070ad:	(bad)  
  4070ae:	add    DWORD PTR [rax+0x1],esi
  4070b1:	sbb    cl,BYTE PTR [rip+0x5781a00]        # 5b88ab7 <libintl_8_dll_iname+0x577ed17>
  4070b7:	add    BYTE PTR [rip+0x10000468],dl        # 10407525 <libintl_8_dll_iname+0xfffd785>
  4070bd:	ret    0x300c
  4070c0:	or     esp,DWORD PTR [rax+0xa]
  4070c3:	jo     4070ce <_head_lib64_libkernel32_a-0x1f32>
  4070c5:	push   rax
  4070c6:	or     al,al
  4070c8:	(bad)  
  4070c9:	rol    BYTE PTR [rax+riz*8],1
  4070cc:	add    dh,al
  4070ce:	add    BYTE PTR [rax],al
  4070d0:	add    DWORD PTR [rcx+rax*1],eax
  4070d3:	add    BYTE PTR [rdx+riz*8],al
  4070d6:	add    BYTE PTR [rax],al
  4070d8:	add    DWORD PTR [rax],eax
  4070da:	add    BYTE PTR [rax],al
  4070dc:	add    DWORD PTR [rcx+rax*1],eax
  4070df:	add    BYTE PTR [rdx+rax*2],al
  4070e2:	add    BYTE PTR [rax],al
  4070e4:	add    DWORD PTR [rip+0x52050002],eax        # 524570ec <libintl_8_dll_iname+0x5204d34c>
  4070ea:	add    DWORD PTR [rax],esi
  4070ec:	add    DWORD PTR [rcx+rax*1],eax
  4070ef:	add    BYTE PTR [rdx+rax*2],al
  4070f2:	add    BYTE PTR [rax],al
  4070f4:	add    DWORD PTR [rcx+rax*1],eax
  4070f7:	add    BYTE PTR [rdx+rax*2],al
  4070fa:	add    BYTE PTR [rax],al
  4070fc:	add    DWORD PTR [rsi],eax
  4070fe:	add    eax,DWORD PTR [rax]
  407100:	(bad)  
  407101:	rex.X add sil,BYTE PTR [rax]
  407104:	add    DWORD PTR [rax+0x0],esp
  407107:	add    BYTE PTR [rcx],al
  407109:	add    BYTE PTR [rax],al
  40710b:	add    BYTE PTR [rcx],al
  40710d:	add    BYTE PTR [rax],al
  40710f:	add    BYTE PTR [rcx],al
  407111:	add    BYTE PTR [rax],al
  407113:	add    BYTE PTR [rcx],al
  407115:	or     al,BYTE PTR [rsi]
  407117:	add    BYTE PTR [rdx],cl
  407119:	jb     407121 <_head_lib64_libkernel32_a-0x1edf>
  40711b:	xor    BYTE PTR [rip+0x3700460],al        # 3b07581 <libintl_8_dll_iname+0x36fd7e1>
  407121:	push   rax
  407122:	add    al,al
  407124:	add    DWORD PTR [rdx],ecx
  407126:	add    eax,0x6d20a05
  40712b:	add    eax,DWORD PTR [rbx]
  40712d:	xor    BYTE PTR [rdx],al
  40712f:	(bad)  
  407130:	add    DWORD PTR [rax+0x0],edx
  407133:	add    BYTE PTR [rcx],al
  407135:	add    al,0x1
  407137:	add    BYTE PTR [rdx+rax*2],al
  40713a:	add    BYTE PTR [rax],al
  40713c:	add    DWORD PTR [rsi],eax
  40713e:	add    eax,DWORD PTR [rax]
  407140:	(bad)  
  407141:	rex.X add sil,BYTE PTR [rax]
  407144:	add    DWORD PTR [rax+0x0],esp
  407147:	add    BYTE PTR [rcx],al
  407149:	add    BYTE PTR [rax],al
  40714b:	add    BYTE PTR [rcx],al
  40714d:	add    al,0x1
  40714f:	add    BYTE PTR [rdx+riz*4],al
  407152:	add    BYTE PTR [rax],al
  407154:	add    DWORD PTR [rax],eax
  407156:	add    BYTE PTR [rax],al
  407158:	add    DWORD PTR [rsi],edx
  40715a:	or     DWORD PTR [rax],eax
  40715c:	(bad)  
  40715d:	mov    BYTE PTR [rsi],al
  40715f:	add    BYTE PTR [rax],dl
  407161:	js     407168 <_head_lib64_libkernel32_a-0x1e98>
  407163:	add    BYTE PTR [rbx],cl
  407165:	push   0xffffffffe2060004
  40716a:	add    dh,BYTE PTR [rax]
  40716c:	add    DWORD PTR [rax+0x0],esp
  40716f:	add    BYTE PTR [rcx],al
  407171:	add    BYTE PTR [rax],al
  407173:	add    BYTE PTR [rcx],al
  407175:	add    BYTE PTR [rax],al
  407177:	add    BYTE PTR [rcx],al
  407179:	add    BYTE PTR [rax],al
  40717b:	add    BYTE PTR [rcx],al
  40717d:	(bad)  
  40717e:	add    eax,DWORD PTR [rax]
  407180:	(bad)  
  407181:	(bad)  
  407183:	xor    BYTE PTR [rcx],al
  407185:	(bad)  
  407186:	add    BYTE PTR [rax],al
  407188:	add    DWORD PTR [rdi+rax*1],ecx
  40718b:	add    BYTE PTR [rdx+riz*4],cl
  40718e:	or     BYTE PTR [rax],dh
  407190:	(bad)  
  407191:	(bad)  
  407192:	(bad)  
  407193:	jo     40719a <_head_lib64_libkernel32_a-0x1e66>
  407195:	push   rax
  407196:	add    al,0xc0
  407198:	add    dl,al
  40719a:	add    BYTE PTR [rax],al
  40719c:	add    DWORD PTR [rcx],edx
  40719e:	or     DWORD PTR [rip+0x30db211],eax        # 34e23b5 <libintl_8_dll_iname+0x30d8615>
  4071a4:	or     dh,BYTE PTR [rax]
  4071a6:	or     DWORD PTR [rax+0x8],esp
  4071a9:	jo     4071b2 <_head_lib64_libkernel32_a-0x1e4e>
  4071ab:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 2207582 <libintl_8_dll_iname+0x1dfd7e2>
  4071b2:	add    BYTE PTR [rax],al
  4071b4:	add    DWORD PTR [rcx+rax*1],eax
  4071b7:	add    BYTE PTR [rdx+rax*2],al
  4071ba:	add    BYTE PTR [rax],al
  4071bc:	add    DWORD PTR [rdx],ecx
  4071be:	(bad)  
  4071bf:	add    BYTE PTR [rdx],cl
  4071c1:	xor    al,BYTE PTR [rsi]
  4071c3:	xor    BYTE PTR [rip+0x3700460],al        # 3b07629 <libintl_8_dll_iname+0x36fd889>
  4071c9:	push   rax
  4071ca:	add    al,al
  4071cc:	add    DWORD PTR [rip+0x32050002],eax        # 324571d4 <libintl_8_dll_iname+0x3204d434>
  4071d2:	add    DWORD PTR [rax],esi
  4071d4:	add    DWORD PTR [rax],ecx
  4071d6:	add    eax,0x4420800
  4071db:	xor    BYTE PTR [rbx],al
  4071dd:	(bad)  
  4071de:	add    dh,BYTE PTR [rax+0x1]
  4071e1:	push   rax
  4071e2:	add    BYTE PTR [rax],al
  4071e4:	add    DWORD PTR [rdi],eax
  4071e6:	add    al,0x0
  4071e8:	(bad)  
  4071e9:	xor    al,BYTE PTR [rbx]
  4071eb:	xor    BYTE PTR [rdx],al
  4071ed:	(bad)  
  4071ee:	add    DWORD PTR [rax+0x1],esi
  4071f1:	add    eax,0x32050002
  4071f6:	add    DWORD PTR [rax],esi
  4071f8:	add    DWORD PTR [rip+0x32050002],eax        # 32457200 <libintl_8_dll_iname+0x3204d460>
  4071fe:	add    DWORD PTR [rax],esi
  407200:	add    DWORD PTR [rax],eax
  407202:	add    BYTE PTR [rax],al
  407204:	add    DWORD PTR [rax],eax
  407206:	add    BYTE PTR [rax],al
  407208:	add    DWORD PTR [rax],eax
  40720a:	add    BYTE PTR [rax],al
  40720c:	add    DWORD PTR [rdi],eax
  40720e:	add    al,0x0
  407210:	(bad)  
  407211:	xor    al,BYTE PTR [rbx]
  407213:	xor    BYTE PTR [rdx],al
  407215:	(bad)  
  407216:	add    DWORD PTR [rax+0x1],esi
  407219:	(bad)  
  40721a:	add    eax,DWORD PTR [rax]
  40721c:	(bad)  
  40721d:	rex.X add sil,BYTE PTR [rax]
  407220:	add    DWORD PTR [rax+0x0],esp
  407223:	add    BYTE PTR [rcx],al
  407225:	add    eax,0x32050002
  40722a:	add    DWORD PTR [rax],esi
  40722c:	add    DWORD PTR [rdi],eax
  40722e:	add    al,0x0
  407230:	(bad)  
  407231:	xor    al,BYTE PTR [rbx]
  407233:	xor    BYTE PTR [rdx],al
  407235:	(bad)  
  407236:	add    DWORD PTR [rax+0x1],esi
  407239:	(bad)  
  40723a:	add    eax,DWORD PTR [rax]
  40723c:	(bad)  
  40723d:	rex.X add sil,BYTE PTR [rax]
  407240:	add    DWORD PTR [rax+0x0],esp
  407243:	add    BYTE PTR [rcx],al
  407245:	(bad)  
  407246:	add    eax,DWORD PTR [rax]
  407248:	(bad)  
  407249:	rex.X add sil,BYTE PTR [rax]
  40724c:	add    DWORD PTR [rax+0x0],esp
  40724f:	add    BYTE PTR [rcx],al
  407251:	or     BYTE PTR [rip+0x4420800],al        # 4827a57 <libintl_8_dll_iname+0x441dcb7>
  407257:	xor    BYTE PTR [rbx],al
  407259:	(bad)  
  40725a:	add    dh,BYTE PTR [rax+0x1]
  40725d:	push   rax
  40725e:	add    BYTE PTR [rax],al
  407260:	add    DWORD PTR [rax],eax
  407262:	add    BYTE PTR [rax],al
  407264:	add    DWORD PTR [rax],eax
  407266:	add    BYTE PTR [rax],al
  407268:	add    DWORD PTR [rdx+rax*1],eax
  40726b:	add    eax,0x50010304

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <_head_lib64_libkernel32_a>:
  409000:	movabs al,ds:0x90
  409009:	add    BYTE PTR [rax],al
  40900b:	add    BYTE PTR [rsp+rbx*4+0x0],cl
  40900f:	add    BYTE PTR [rax-0x6d],ah
	...

0000000000409014 <_head_lib64_libmsvcrt_a>:
  409014:	jo     408fa7 <_head_lib64_libkernel32_a-0x59>
	...
  40901e:	add    BYTE PTR [rax],al
  409020:	(bad)  
  409021:	pushf  
  409022:	add    BYTE PTR [rax],al
  409024:	xor    BYTE PTR [rax+rax*1+0x926800],dl

0000000000409028 <_head_libgimp_2_0_0_dll>:
  409028:	push   0x92
  40902d:	add    BYTE PTR [rax],al
  40902f:	add    BYTE PTR [rax],al
  409031:	add    BYTE PTR [rax],al
  409033:	add    BYTE PTR [rax],ch
  409035:	popf   
  409036:	add    BYTE PTR [rax],al
  409038:	sub    BYTE PTR [rbp-0x6d000000],dl

000000000040903c <_head_libgimpbase_2_0_0_dll>:
  40903c:	add    BYTE PTR [rbx+0x0],dl
  409042:	add    BYTE PTR [rax],al
  409044:	add    BYTE PTR [rax],al
  409046:	add    BYTE PTR [rax],al
  409048:	rex popf 
  40904a:	add    BYTE PTR [rax],al
  40904c:	rcl    BYTE PTR [rbp-0x6cf00000],0x0

0000000000409050 <_head_libgimpcolor_2_0_0_dll>:
  409050:	adc    BYTE PTR [rbx+0x0],dl
  409056:	add    BYTE PTR [rax],al
  409058:	add    BYTE PTR [rax],al
  40905a:	add    BYTE PTR [rax],al
  40905c:	(bad)  
  40905d:	popf   
  40905e:	add    BYTE PTR [rax],al
  409060:	rcl    BYTE PTR [rbp-0x6cd80000],1

0000000000409064 <_head_libglib_2_0_0_dll>:
  409064:	sub    BYTE PTR [rbx+0x0],dl
  40906a:	add    BYTE PTR [rax],al
  40906c:	add    BYTE PTR [rax],al
  40906e:	add    BYTE PTR [rax],al
  409070:	jl     40900f <_head_lib64_libkernel32_a+0xf>
  409072:	add    BYTE PTR [rax],al
  409074:	call   3840910e <libintl_8_dll_iname+0x37fff36e>

0000000000409078 <_head_libintl_8_dll>:
  409078:	cmp    BYTE PTR [rbx+0x0],dl
  40907e:	add    BYTE PTR [rax],al
  409080:	add    BYTE PTR [rax],al
  409082:	add    BYTE PTR [rax],al
  409084:	movabs al,ds:0x95f800009d
	...
  40909d:	add    BYTE PTR [rax],al
  40909f:	add    BYTE PTR [rax],ah
  4090a1:	xchg   esi,eax
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	add    BYTE PTR [rax],al
  4090a6:	add    BYTE PTR [rax],al
  4090a8:	cmp    BYTE PTR [rsi+0x0],dl
  4090ae:	add    BYTE PTR [rax],al
  4090b0:	push   rax
  4090b1:	xchg   esi,eax
  4090b2:	add    BYTE PTR [rax],al
  4090b4:	add    BYTE PTR [rax],al
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	fs xchg esi,eax
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	add    BYTE PTR [rax],al
  4090be:	add    BYTE PTR [rax],al
  4090c0:	jp     409058 <_head_libgimpcolor_2_0_0_dll+0x8>
  4090c2:	add    BYTE PTR [rax],al
  4090c4:	add    BYTE PTR [rax],al
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	nop
  4090c9:	xchg   esi,eax
  4090ca:	add    BYTE PTR [rax],al
  4090cc:	add    BYTE PTR [rax],al
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	movabs al,ds:0xb400000000000096
  4090d9:	xchg   esi,eax
  4090da:	add    BYTE PTR [rax],al
  4090dc:	add    BYTE PTR [rax],al
  4090de:	add    BYTE PTR [rax],al
  4090e0:	(bad)  
  4090e1:	xchg   esi,eax
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	add    BYTE PTR [rax],al
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	fcom   DWORD PTR [rsi+0x0]
  4090ee:	add    BYTE PTR [rax],al
  4090f0:	repnz xchg esi,eax
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	add    BYTE PTR [rax],al
  4090f6:	add    BYTE PTR [rax],al
  4090f8:	add    dl,BYTE PTR [rdi+0x0]
  4090fe:	add    BYTE PTR [rax],al
  409100:	(bad)  
  409101:	xchg   edi,eax
  409102:	add    BYTE PTR [rax],al
  409104:	add    BYTE PTR [rax],al
  409106:	add    BYTE PTR [rax],al
  409108:	ss xchg edi,eax
  40910a:	add    BYTE PTR [rax],al
  40910c:	add    BYTE PTR [rax],al
  40910e:	add    BYTE PTR [rax],al
  409110:	push   rax
  409111:	xchg   edi,eax
  409112:	add    BYTE PTR [rax],al
  409114:	add    BYTE PTR [rax],al
  409116:	add    BYTE PTR [rax],al
  409118:	xchg   di,ax
  40911a:	add    BYTE PTR [rax],al
  40911c:	add    BYTE PTR [rax],al
  40911e:	add    BYTE PTR [rax],al
  409120:	jp     4090b9 <_head_libintl_8_dll+0x41>
  409122:	add    BYTE PTR [rax],al
  409124:	add    BYTE PTR [rax],al
  409126:	add    BYTE PTR [rax],al
  409128:	xchg   esp,eax
  409129:	xchg   edi,eax
  40912a:	add    BYTE PTR [rax],al
  40912c:	add    BYTE PTR [rax],al
  40912e:	add    BYTE PTR [rax],al
  409130:	test   al,0x97
  409132:	add    BYTE PTR [rax],al
  409134:	add    BYTE PTR [rax],al
  409136:	add    BYTE PTR [rax],al
  409138:	(bad)  
  409139:	xchg   edi,eax
  40913a:	add    BYTE PTR [rax],al
  40913c:	add    BYTE PTR [rax],al
  40913e:	add    BYTE PTR [rax],al
  409140:	(bad)  
  409141:	xchg   edi,eax
  409142:	add    BYTE PTR [rax],al
  409144:	add    BYTE PTR [rax],al
  409146:	add    BYTE PTR [rax],al
  409148:	loop   4090e1 <_head_libintl_8_dll+0x69>
  40914a:	add    BYTE PTR [rax],al
  40914c:	add    BYTE PTR [rax],al
  40914e:	add    BYTE PTR [rax],al
  409150:	lock xchg edi,eax
  409152:	add    BYTE PTR [rax],al
  409154:	add    BYTE PTR [rax],al
  409156:	add    BYTE PTR [rax],al
  409158:	or     al,0x98
  40915a:	add    BYTE PTR [rax],al
  40915c:	add    BYTE PTR [rax],al
  40915e:	add    BYTE PTR [rax],al
  409160:	(bad)  
  409161:	cwde   
	...
  40916e:	add    BYTE PTR [rax],al
  409170:	cs cwde 
  409172:	add    BYTE PTR [rax],al
  409174:	add    BYTE PTR [rax],al
  409176:	add    BYTE PTR [rax],al
  409178:	rex.RX cwde 
  40917a:	add    BYTE PTR [rax],al
  40917c:	add    BYTE PTR [rax],al
  40917e:	add    BYTE PTR [rax],al
  409180:	push   rax
  409181:	cwde   
  409182:	add    BYTE PTR [rax],al
  409184:	add    BYTE PTR [rax],al
  409186:	add    BYTE PTR [rax],al
  409188:	pop    rdx
  409189:	cwde   
  40918a:	add    BYTE PTR [rax],al
  40918c:	add    BYTE PTR [rax],al
  40918e:	add    BYTE PTR [rax],al
  409190:	push   0x98
  409195:	add    BYTE PTR [rax],al
  409197:	add    BYTE PTR [rax-0x68],bh
  40919a:	add    BYTE PTR [rax],al
  40919c:	add    BYTE PTR [rax],al
  40919e:	add    BYTE PTR [rax],al
  4091a0:	test   BYTE PTR [rax+0x0],bl
  4091a6:	add    BYTE PTR [rax],al
  4091a8:	xchg   edx,eax
  4091a9:	cwde   
  4091aa:	add    BYTE PTR [rax],al
  4091ac:	add    BYTE PTR [rax],al
  4091ae:	add    BYTE PTR [rax],al
  4091b0:	movabs ds:0xb400000000000098,al
  4091b9:	cwde   
  4091ba:	add    BYTE PTR [rax],al
  4091bc:	add    BYTE PTR [rax],al
  4091be:	add    BYTE PTR [rax],al
  4091c0:	enter  0x98,0x0
  4091c4:	add    BYTE PTR [rax],al
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	rcr    BYTE PTR [rax+0x0],cl
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	loopne 40916a <_head_libintl_8_dll+0xf2>
  4091d2:	add    BYTE PTR [rax],al
  4091d4:	add    BYTE PTR [rax],al
  4091d6:	add    BYTE PTR [rax],al
  4091d8:	(bad)  
  4091d9:	cwde   
  4091da:	add    BYTE PTR [rax],al
  4091dc:	add    BYTE PTR [rax],al
  4091de:	add    BYTE PTR [rax],al
  4091e0:	hlt    
  4091e1:	cwde   
  4091e2:	add    BYTE PTR [rax],al
  4091e4:	add    BYTE PTR [rax],al
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	add    BYTE PTR [rcx+0x0],bl
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	or     BYTE PTR [rcx+0x0],bl
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	adc    bl,BYTE PTR [rcx+0x0]
  4091fe:	add    BYTE PTR [rax],al
  409200:	sbb    al,0x99
  409202:	add    BYTE PTR [rax],al
  409204:	add    BYTE PTR [rax],al
  409206:	add    BYTE PTR [rax],al
  409208:	and    al,0x99
  40920a:	add    BYTE PTR [rax],al
  40920c:	add    BYTE PTR [rax],al
  40920e:	add    BYTE PTR [rax],al
  409210:	cs cdq 
  409212:	add    BYTE PTR [rax],al
  409214:	add    BYTE PTR [rax],al
  409216:	add    BYTE PTR [rax],al
  409218:	ss cdq 
  40921a:	add    BYTE PTR [rax],al
  40921c:	add    BYTE PTR [rax],al
  40921e:	add    BYTE PTR [rax],al
  409220:	rex cdq 
  409222:	add    BYTE PTR [rax],al
  409224:	add    BYTE PTR [rax],al
  409226:	add    BYTE PTR [rax],al
  409228:	cqo    
  40922a:	add    BYTE PTR [rax],al
  40922c:	add    BYTE PTR [rax],al
  40922e:	add    BYTE PTR [rax],al
  409230:	push   rdx
  409231:	cdq    
  409232:	add    BYTE PTR [rax],al
  409234:	add    BYTE PTR [rax],al
  409236:	add    BYTE PTR [rax],al
  409238:	pop    rsp
  409239:	cdq    
  40923a:	add    BYTE PTR [rax],al
  40923c:	add    BYTE PTR [rax],al
  40923e:	add    BYTE PTR [rax],al
  409240:	cwd    
  409242:	add    BYTE PTR [rax],al
  409244:	add    BYTE PTR [rax],al
  409246:	add    BYTE PTR [rax],al
  409248:	jo     4091e3 <_head_libintl_8_dll+0x16b>
  40924a:	add    BYTE PTR [rax],al
  40924c:	add    BYTE PTR [rax],al
  40924e:	add    BYTE PTR [rax],al
  409250:	jp     4091eb <_head_libintl_8_dll+0x173>
  409252:	add    BYTE PTR [rax],al
  409254:	add    BYTE PTR [rax],al
  409256:	add    BYTE PTR [rax],al
  409258:	test   BYTE PTR [rcx+0x0],bl
	...
  409266:	add    BYTE PTR [rax],al
  409268:	nop
  409269:	cdq    
  40926a:	add    BYTE PTR [rax],al
  40926c:	add    BYTE PTR [rax],al
  40926e:	add    BYTE PTR [rax],al
  409270:	test   al,0x99
  409272:	add    BYTE PTR [rax],al
  409274:	add    BYTE PTR [rax],al
  409276:	add    BYTE PTR [rax],al
  409278:	rcr    BYTE PTR [rcx+0x0],0x0
  40927f:	add    ah,dl
  409281:	cdq    
  409282:	add    BYTE PTR [rax],al
  409284:	add    BYTE PTR [rax],al
  409286:	add    BYTE PTR [rax],al
  409288:	lock cdq 
  40928a:	add    BYTE PTR [rax],al
  40928c:	add    BYTE PTR [rax],al
  40928e:	add    BYTE PTR [rax],al
  409290:	or     BYTE PTR [rdx+0x0],bl
  409296:	add    BYTE PTR [rax],al
  409298:	and    al,0x9a
  40929a:	add    BYTE PTR [rax],al
  40929c:	add    BYTE PTR [rax],al
  40929e:	add    BYTE PTR [rax],al
  4092a0:	cmp    al,0x9a
  4092a2:	add    BYTE PTR [rax],al
  4092a4:	add    BYTE PTR [rax],al
  4092a6:	add    BYTE PTR [rax],al
  4092a8:	pop    rax
  4092a9:	(bad)  
  4092aa:	add    BYTE PTR [rax],al
  4092ac:	add    BYTE PTR [rax],al
  4092ae:	add    BYTE PTR [rax],al
  4092b0:	je     40924c <_head_libintl_8_dll+0x1d4>
  4092b2:	add    BYTE PTR [rax],al
  4092b4:	add    BYTE PTR [rax],al
  4092b6:	add    BYTE PTR [rax],al
  4092b8:	nop
  4092b9:	(bad)  
  4092ba:	add    BYTE PTR [rax],al
  4092bc:	add    BYTE PTR [rax],al
  4092be:	add    BYTE PTR [rax],al
  4092c0:	pushf  
  4092c1:	(bad)  
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	add    BYTE PTR [rax],al
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	mov    eax,0x9a
  4092cd:	add    BYTE PTR [rax],al
  4092cf:	add    al,dl
  4092d1:	(bad)  
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	add    BYTE PTR [rax],al
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	fcomp  QWORD PTR [rdx+0x0]
  4092de:	add    BYTE PTR [rax],al
  4092e0:	lock (bad) 
  4092e2:	add    BYTE PTR [rax],al
  4092e4:	add    BYTE PTR [rax],al
  4092e6:	add    BYTE PTR [rax],al
  4092e8:	add    al,0x9b
  4092ea:	add    BYTE PTR [rax],al
  4092ec:	add    BYTE PTR [rax],al
  4092ee:	add    BYTE PTR [rax],al
  4092f0:	and    BYTE PTR [rbx+0x0],bl
	...
  4092fe:	add    BYTE PTR [rax],al
  409300:	xor    al,0x9b
	...
  40930e:	add    BYTE PTR [rax],al
  409310:	rex.WR
  409311:	fwait
  409312:	add    BYTE PTR [rax],al
  409314:	add    BYTE PTR [rax],al
  409316:	add    BYTE PTR [rax],al
  409318:	(bad)  
  409319:	fwait
	...
  409326:	add    BYTE PTR [rax],al
  409328:	je     4092c5 <_head_libintl_8_dll+0x24d>
	...
  409336:	add    BYTE PTR [rax],al
  409338:	jl     4092d5 <_head_libintl_8_dll+0x25d>
  40933a:	add    BYTE PTR [rax],al
  40933c:	add    BYTE PTR [rax],al
  40933e:	add    BYTE PTR [rax],al
  409340:	movabs al,ds:0xbc0000000000009b
  409349:	fwait
  40934a:	add    BYTE PTR [rax],al
  40934c:	add    BYTE PTR [rax],al
  40934e:	add    BYTE PTR [rax],al
  409350:	rcr    BYTE PTR [rbx+0x0],1
	...

0000000000409360 <__IAT_start__>:
  409360:	and    BYTE PTR [rsi+0x0],dl
	...

0000000000409368 <__imp_EnterCriticalSection>:
  409368:	cmp    BYTE PTR [rsi+0x0],dl
	...

0000000000409370 <__imp_GetCurrentProcess>:
  409370:	push   rax
  409371:	xchg   esi,eax
  409372:	add    BYTE PTR [rax],al
  409374:	add    BYTE PTR [rax],al
	...

0000000000409378 <__imp_GetCurrentProcessId>:
  409378:	fs xchg esi,eax
  40937a:	add    BYTE PTR [rax],al
  40937c:	add    BYTE PTR [rax],al
	...

0000000000409380 <__imp_GetCurrentThreadId>:
  409380:	jp     409318 <_head_libintl_8_dll+0x2a0>
  409382:	add    BYTE PTR [rax],al
  409384:	add    BYTE PTR [rax],al
	...

0000000000409388 <__imp_GetLastError>:
  409388:	nop
  409389:	xchg   esi,eax
  40938a:	add    BYTE PTR [rax],al
  40938c:	add    BYTE PTR [rax],al
	...

0000000000409390 <__imp_GetModuleHandleA>:
  409390:	movabs al,ds:0xb400000000000096

0000000000409398 <__imp_GetProcAddress>:
  409398:	mov    ah,0x96
  40939a:	add    BYTE PTR [rax],al
  40939c:	add    BYTE PTR [rax],al
	...

00000000004093a0 <__imp_GetStartupInfoA>:
  4093a0:	(bad)  
  4093a1:	xchg   esi,eax
  4093a2:	add    BYTE PTR [rax],al
  4093a4:	add    BYTE PTR [rax],al
	...

00000000004093a8 <__imp_GetSystemTimeAsFileTime>:
  4093a8:	fcom   DWORD PTR [rsi+0x0]
	...

00000000004093b0 <__imp_GetTickCount>:
  4093b0:	repnz xchg esi,eax
  4093b2:	add    BYTE PTR [rax],al
  4093b4:	add    BYTE PTR [rax],al
	...

00000000004093b8 <__imp_InitializeCriticalSection>:
  4093b8:	add    dl,BYTE PTR [rdi+0x0]
	...

00000000004093c0 <__imp_LeaveCriticalSection>:
  4093c0:	(bad)  
  4093c1:	xchg   edi,eax
  4093c2:	add    BYTE PTR [rax],al
  4093c4:	add    BYTE PTR [rax],al
	...

00000000004093c8 <__imp_QueryPerformanceCounter>:
  4093c8:	ss xchg edi,eax
  4093ca:	add    BYTE PTR [rax],al
  4093cc:	add    BYTE PTR [rax],al
	...

00000000004093d0 <__imp_RtlAddFunctionTable>:
  4093d0:	push   rax
  4093d1:	xchg   edi,eax
  4093d2:	add    BYTE PTR [rax],al
  4093d4:	add    BYTE PTR [rax],al
	...

00000000004093d8 <__imp_RtlCaptureContext>:
  4093d8:	xchg   di,ax
  4093da:	add    BYTE PTR [rax],al
  4093dc:	add    BYTE PTR [rax],al
	...

00000000004093e0 <__imp_RtlLookupFunctionEntry>:
  4093e0:	jp     409379 <__imp_GetCurrentProcessId+0x1>
  4093e2:	add    BYTE PTR [rax],al
  4093e4:	add    BYTE PTR [rax],al
	...

00000000004093e8 <__imp_RtlVirtualUnwind>:
  4093e8:	xchg   esp,eax
  4093e9:	xchg   edi,eax
  4093ea:	add    BYTE PTR [rax],al
  4093ec:	add    BYTE PTR [rax],al
	...

00000000004093f0 <__imp_SetUnhandledExceptionFilter>:
  4093f0:	test   al,0x97
  4093f2:	add    BYTE PTR [rax],al
  4093f4:	add    BYTE PTR [rax],al
	...

00000000004093f8 <__imp_Sleep>:
  4093f8:	(bad)  
  4093f9:	xchg   edi,eax
  4093fa:	add    BYTE PTR [rax],al
  4093fc:	add    BYTE PTR [rax],al
	...

0000000000409400 <__imp_TerminateProcess>:
  409400:	(bad)  
  409401:	xchg   edi,eax
  409402:	add    BYTE PTR [rax],al
  409404:	add    BYTE PTR [rax],al
	...

0000000000409408 <__imp_TlsGetValue>:
  409408:	loop   4093a1 <__imp_GetStartupInfoA+0x1>
  40940a:	add    BYTE PTR [rax],al
  40940c:	add    BYTE PTR [rax],al
	...

0000000000409410 <__imp_UnhandledExceptionFilter>:
  409410:	lock xchg edi,eax
  409412:	add    BYTE PTR [rax],al
  409414:	add    BYTE PTR [rax],al
	...

0000000000409418 <__imp_VirtualProtect>:
  409418:	or     al,0x98
  40941a:	add    BYTE PTR [rax],al
  40941c:	add    BYTE PTR [rax],al
	...

0000000000409420 <__imp_VirtualQuery>:
  409420:	(bad)  
  409421:	cwde   
	...

0000000000409430 <__imp___C_specific_handler>:
  409430:	cs cwde 
  409432:	add    BYTE PTR [rax],al
  409434:	add    BYTE PTR [rax],al
	...

0000000000409438 <__imp___argc>:
  409438:	rex.RX cwde 
  40943a:	add    BYTE PTR [rax],al
  40943c:	add    BYTE PTR [rax],al
	...

0000000000409440 <__imp___argv>:
  409440:	push   rax
  409441:	cwde   
  409442:	add    BYTE PTR [rax],al
  409444:	add    BYTE PTR [rax],al
	...

0000000000409448 <__imp___dllonexit>:
  409448:	pop    rdx
  409449:	cwde   
  40944a:	add    BYTE PTR [rax],al
  40944c:	add    BYTE PTR [rax],al
	...

0000000000409450 <__imp___getmainargs>:
  409450:	push   0x98
  409455:	add    BYTE PTR [rax],al
	...

0000000000409458 <__imp___initenv>:
  409458:	js     4093f2 <__imp_SetUnhandledExceptionFilter+0x2>
  40945a:	add    BYTE PTR [rax],al
  40945c:	add    BYTE PTR [rax],al
	...

0000000000409460 <__imp___iob_func>:
  409460:	test   BYTE PTR [rax+0x0],bl
	...

0000000000409468 <__imp___lconv_init>:
  409468:	xchg   edx,eax
  409469:	cwde   
  40946a:	add    BYTE PTR [rax],al
  40946c:	add    BYTE PTR [rax],al
	...

0000000000409470 <__imp___set_app_type>:
  409470:	movabs ds:0xb400000000000098,al

0000000000409478 <__imp___setusermatherr>:
  409478:	mov    ah,0x98
  40947a:	add    BYTE PTR [rax],al
  40947c:	add    BYTE PTR [rax],al
	...

0000000000409480 <__imp__acmdln>:
  409480:	enter  0x98,0x0
  409484:	add    BYTE PTR [rax],al
	...

0000000000409488 <__imp__amsg_exit>:
  409488:	rcr    BYTE PTR [rax+0x0],cl
	...

0000000000409490 <__imp__cexit>:
  409490:	loopne 40942a <__imp_VirtualQuery+0xa>
  409492:	add    BYTE PTR [rax],al
  409494:	add    BYTE PTR [rax],al
	...

0000000000409498 <__imp__fmode>:
  409498:	(bad)  
  409499:	cwde   
  40949a:	add    BYTE PTR [rax],al
  40949c:	add    BYTE PTR [rax],al
	...

00000000004094a0 <__imp__initterm>:
  4094a0:	hlt    
  4094a1:	cwde   
  4094a2:	add    BYTE PTR [rax],al
  4094a4:	add    BYTE PTR [rax],al
	...

00000000004094a8 <__imp__lock>:
  4094a8:	add    BYTE PTR [rcx+0x0],bl
	...

00000000004094b0 <__imp__onexit>:
  4094b0:	or     BYTE PTR [rcx+0x0],bl
	...

00000000004094b8 <__imp__unlock>:
  4094b8:	adc    bl,BYTE PTR [rcx+0x0]
	...

00000000004094c0 <__imp_abort>:
  4094c0:	sbb    al,0x99
  4094c2:	add    BYTE PTR [rax],al
  4094c4:	add    BYTE PTR [rax],al
	...

00000000004094c8 <__imp_calloc>:
  4094c8:	and    al,0x99
  4094ca:	add    BYTE PTR [rax],al
  4094cc:	add    BYTE PTR [rax],al
	...

00000000004094d0 <__imp_exit>:
  4094d0:	cs cdq 
  4094d2:	add    BYTE PTR [rax],al
  4094d4:	add    BYTE PTR [rax],al
	...

00000000004094d8 <__imp_fprintf>:
  4094d8:	ss cdq 
  4094da:	add    BYTE PTR [rax],al
  4094dc:	add    BYTE PTR [rax],al
	...

00000000004094e0 <__imp_free>:
  4094e0:	rex cdq 
  4094e2:	add    BYTE PTR [rax],al
  4094e4:	add    BYTE PTR [rax],al
	...

00000000004094e8 <__imp_fwrite>:
  4094e8:	cqo    
  4094ea:	add    BYTE PTR [rax],al
  4094ec:	add    BYTE PTR [rax],al
	...

00000000004094f0 <__imp_malloc>:
  4094f0:	push   rdx
  4094f1:	cdq    
  4094f2:	add    BYTE PTR [rax],al
  4094f4:	add    BYTE PTR [rax],al
	...

00000000004094f8 <__imp_memcpy>:
  4094f8:	pop    rsp
  4094f9:	cdq    
  4094fa:	add    BYTE PTR [rax],al
  4094fc:	add    BYTE PTR [rax],al
	...

0000000000409500 <__imp_signal>:
  409500:	cwd    
  409502:	add    BYTE PTR [rax],al
  409504:	add    BYTE PTR [rax],al
	...

0000000000409508 <__imp_strlen>:
  409508:	jo     4094a3 <__imp__initterm+0x3>
  40950a:	add    BYTE PTR [rax],al
  40950c:	add    BYTE PTR [rax],al
	...

0000000000409510 <__imp_strncmp>:
  409510:	jp     4094ab <__imp__lock+0x3>
  409512:	add    BYTE PTR [rax],al
  409514:	add    BYTE PTR [rax],al
	...

0000000000409518 <__imp_vfprintf>:
  409518:	test   BYTE PTR [rcx+0x0],bl
	...

0000000000409528 <__imp_gimp_displays_flush>:
  409528:	nop
  409529:	cdq    
  40952a:	add    BYTE PTR [rax],al
  40952c:	add    BYTE PTR [rax],al
	...

0000000000409530 <__imp_gimp_drawable_detach>:
  409530:	test   al,0x99
  409532:	add    BYTE PTR [rax],al
  409534:	add    BYTE PTR [rax],al
	...

0000000000409538 <__imp_gimp_drawable_get>:
  409538:	rcr    BYTE PTR [rcx+0x0],0x0
	...

0000000000409540 <__imp_gimp_drawable_has_alpha>:
  409540:	(bad)  
  409541:	cdq    
  409542:	add    BYTE PTR [rax],al
  409544:	add    BYTE PTR [rax],al
	...

0000000000409548 <__imp_gimp_drawable_is_gray>:
  409548:	lock cdq 
  40954a:	add    BYTE PTR [rax],al
  40954c:	add    BYTE PTR [rax],al
	...

0000000000409550 <__imp_gimp_drawable_is_indexed>:
  409550:	or     BYTE PTR [rdx+0x0],bl
	...

0000000000409558 <__imp_gimp_drawable_is_rgb>:
  409558:	and    al,0x9a
  40955a:	add    BYTE PTR [rax],al
  40955c:	add    BYTE PTR [rax],al
	...

0000000000409560 <__imp_gimp_image_get_colormap>:
  409560:	cmp    al,0x9a
  409562:	add    BYTE PTR [rax],al
  409564:	add    BYTE PTR [rax],al
	...

0000000000409568 <__imp_gimp_image_set_colormap>:
  409568:	pop    rax
  409569:	(bad)  
  40956a:	add    BYTE PTR [rax],al
  40956c:	add    BYTE PTR [rax],al
	...

0000000000409570 <__imp_gimp_install_procedure>:
  409570:	je     40950c <__imp_strlen+0x4>
  409572:	add    BYTE PTR [rax],al
  409574:	add    BYTE PTR [rax],al
	...

0000000000409578 <__imp_gimp_main>:
  409578:	nop
  409579:	(bad)  
  40957a:	add    BYTE PTR [rax],al
  40957c:	add    BYTE PTR [rax],al
	...

0000000000409580 <__imp_gimp_plugin_menu_register>:
  409580:	pushf  
  409581:	(bad)  
  409582:	add    BYTE PTR [rax],al
  409584:	add    BYTE PTR [rax],al
	...

0000000000409588 <__imp_gimp_progress_init>:
  409588:	mov    eax,0x9a
  40958d:	add    BYTE PTR [rax],al
	...

0000000000409590 <__imp_gimp_quit>:
  409590:	rcr    BYTE PTR [rdx+0x0],1
	...

0000000000409598 <__imp_gimp_rgn_iterate1>:
  409598:	fcomp  QWORD PTR [rdx+0x0]
	...

00000000004095a0 <__imp_gimp_rgn_iterate2>:
  4095a0:	lock (bad) 
  4095a2:	add    BYTE PTR [rax],al
  4095a4:	add    BYTE PTR [rax],al
	...

00000000004095a8 <__imp_gimp_tile_cache_ntiles>:
  4095a8:	add    al,0x9b
  4095aa:	add    BYTE PTR [rax],al
  4095ac:	add    BYTE PTR [rax],al
	...

00000000004095b0 <__imp_gimp_tile_width>:
  4095b0:	and    BYTE PTR [rbx+0x0],bl
	...

00000000004095c0 <__imp_gimp_locale_directory>:
  4095c0:	xor    al,0x9b
	...

00000000004095d0 <__imp_gimp_hsv_to_rgb4>:
  4095d0:	rex.WR
  4095d1:	fwait
  4095d2:	add    BYTE PTR [rax],al
  4095d4:	add    BYTE PTR [rax],al
	...

00000000004095d8 <__imp_gimp_rgb_to_hsv4>:
  4095d8:	(bad)  
  4095d9:	fwait
	...

00000000004095e8 <__imp_g_log>:
  4095e8:	je     409585 <__imp_gimp_plugin_menu_register+0x5>
	...

00000000004095f8 <__imp_libintl_bind_textdomain_codeset>:
  4095f8:	jl     409595 <__imp_gimp_quit+0x5>
  4095fa:	add    BYTE PTR [rax],al
  4095fc:	add    BYTE PTR [rax],al
	...

0000000000409600 <__imp_libintl_bindtextdomain>:
  409600:	movabs al,ds:0xbc0000000000009b

0000000000409608 <__imp_libintl_gettext>:
  409608:	mov    esp,0x9b
  40960d:	add    BYTE PTR [rax],al
	...

0000000000409610 <__imp_libintl_textdomain>:
  409610:	rcr    BYTE PTR [rbx+0x0],1
	...

0000000000409620 <__IAT_end__>:
  409620:	fadd   DWORD PTR [rax]
  409622:	rex.R
  409623:	gs ins BYTE PTR es:[rdi],dx
  409625:	gs je  40968d <__IAT_end__+0x6d>
  409628:	rex.XB jb 409694 <__IAT_end__+0x74>
  40962b:	je     409696 <__IAT_end__+0x76>
  40962d:	movsxd esp,DWORD PTR [rcx+0x6c]
  409630:	push   rbx
  409631:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409636:	outs   dx,BYTE PTR ds:[rsi]
  409637:	add    cl,bh
  409639:	add    BYTE PTR [rbp+0x6e],al
  40963c:	je     4096a3 <__IAT_end__+0x83>
  40963e:	jb     409683 <__IAT_end__+0x63>
  409640:	jb     4096ab <__IAT_end__+0x8b>
  409642:	je     4096ad <__IAT_end__+0x8d>
  409644:	movsxd esp,DWORD PTR [rcx+0x6c]
  409647:	push   rbx
  409648:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40964d:	outs   dx,BYTE PTR ds:[rsi]
  40964e:	add    BYTE PTR [rax],al
  409650:	(bad)  
  409651:	add    DWORD PTR [rdi+0x65],eax
  409654:	je     409699 <__IAT_end__+0x79>
  409656:	jne    4096ca <__IAT_end__+0xaa>
  409658:	jb     4096bf <__IAT_end__+0x9f>
  40965a:	outs   dx,BYTE PTR ds:[rsi]
  40965b:	je     4096ad <__IAT_end__+0x8d>
  40965d:	jb     4096ce <__IAT_end__+0xae>
  40965f:	movsxd esp,DWORD PTR [rbp+0x73]
  409662:	jae    409664 <__IAT_end__+0x44>
  409664:	iret   
  409665:	add    DWORD PTR [rdi+0x65],eax
  409668:	je     4096ad <__IAT_end__+0x8d>
  40966a:	jne    4096de <__IAT_end__+0xbe>
  40966c:	jb     4096d3 <__IAT_end__+0xb3>
  40966e:	outs   dx,BYTE PTR ds:[rsi]
  40966f:	je     4096c1 <__IAT_end__+0xa1>
  409671:	jb     4096e2 <__IAT_end__+0xc2>
  409673:	movsxd esp,DWORD PTR [rbp+0x73]
  409676:	jae    4096c1 <__IAT_end__+0xa1>
  409678:	fs add bl,dl
  40967b:	add    DWORD PTR [rdi+0x65],eax
  40967e:	je     4096c3 <__IAT_end__+0xa3>
  409680:	jne    4096f4 <__IAT_end__+0xd4>
  409682:	jb     4096e9 <__IAT_end__+0xc9>
  409684:	outs   dx,BYTE PTR ds:[rsi]
  409685:	je     4096db <__IAT_end__+0xbb>
  409687:	push   0x64616572
  40968c:	rex.WB
  40968d:	add    BYTE PTR fs:[rax],al
  409690:	adc    DWORD PTR [rdx],eax
  409692:	rex.RXB
  409693:	gs je  4096e2 <__IAT_end__+0xc2>
  409696:	(bad)  
  409697:	jae    40970d <__IAT_end__+0xed>
  409699:	rex.RB jb 40970e <__IAT_end__+0xee>
  40969c:	outs   dx,DWORD PTR ds:[rsi]
  40969d:	jb     40969f <__IAT_end__+0x7f>
  40969f:	add    BYTE PTR [rip+0x74654702],ah        # 74a5dda7 <libintl_8_dll_iname+0x74654007>
  4096a5:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  4096a7:	fs jne 409716 <__IAT_end__+0xf6>
  4096aa:	gs rex.W (bad) 
  4096ad:	outs   dx,BYTE PTR ds:[rsi]
  4096ae:	fs ins BYTE PTR es:[rdi],dx
  4096b0:	add    BYTE PTR gs:[r8],al
  4096b4:	push   rdi
  4096b5:	add    al,BYTE PTR [rdi+0x65]
  4096b8:	je     40970a <__IAT_end__+0xea>
  4096ba:	jb     40972b <__IAT_end__+0x10b>
  4096bc:	movsxd eax,DWORD PTR [rcx+0x64]
  4096bf:	fs jb  409727 <__IAT_end__+0x107>
  4096c2:	jae    409737 <__IAT_end__+0x117>
  4096c4:	add    BYTE PTR [rax],al
  4096c6:	je     4096ca <__IAT_end__+0xaa>
  4096c8:	rex.RXB
  4096c9:	gs je  40971f <__IAT_end__+0xff>
  4096cc:	je     40972f <__IAT_end__+0x10f>
  4096ce:	jb     409744 <__IAT_end__+0x124>
  4096d0:	jne    409742 <__IAT_end__+0x122>
  4096d2:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4096d4:	outs   dx,WORD PTR ds:[rsi]
  4096d6:	add    BYTE PTR [r11+0x74654702],cl
  4096dd:	push   rbx
  4096de:	jns    409753 <__IAT_end__+0x133>
  4096e0:	je     409747 <__IAT_end__+0x127>
  4096e2:	ins    DWORD PTR es:[rdi],dx
  4096e3:	push   rsp
  4096e4:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  4096eb:	ins    BYTE PTR es:[rdi],dx
  4096ec:	gs push rsp
  4096ee:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a600
  4096f5:	gs je  40974c <__IAT_end__+0x12c>
  4096f8:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  4096ff:	je     409701 <__IAT_end__+0xe1>
  409701:	add    dl,bh
  409703:	add    cl,BYTE PTR [rcx+0x6e]
  409706:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40970e:	rex.XB jb 40977a <__IAT_end__+0x15a>
  409711:	je     40977c <__IAT_end__+0x15c>
  409713:	movsxd esp,DWORD PTR [rcx+0x6c]
  409716:	push   rbx
  409717:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40971c:	outs   dx,BYTE PTR ds:[rsi]
  40971d:	add    BYTE PTR [rbx+rax*1+0x4c],cl
  409721:	gs (bad) 
  409723:	jbe    40978a <__IAT_end__+0x16a>
  409725:	rex.XB jb 409791 <__IAT_end__+0x171>
  409728:	je     409793 <__IAT_end__+0x173>
  40972a:	movsxd esp,DWORD PTR [rcx+0x6c]
  40972d:	push   rbx
  40972e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409733:	outs   dx,BYTE PTR ds:[rsi]
  409734:	add    BYTE PTR [rax],al
  409736:	mov    esi,0x65755103
  40973b:	jb     4097b6 <__IAT_end__+0x196>
  40973d:	push   rax
  40973e:	gs jb  4097a7 <__IAT_end__+0x187>
  409741:	outs   dx,DWORD PTR ds:[rsi]
  409742:	jb     4097b1 <__IAT_end__+0x191>
  409744:	(bad)  
  409745:	outs   dx,BYTE PTR ds:[rsi]
  409746:	movsxd esp,DWORD PTR [rbp+0x43]
  409749:	outs   dx,DWORD PTR ds:[rsi]
  40974a:	jne    4097ba <__IAT_end__+0x19a>
  40974c:	je     4097b3 <__IAT_end__+0x193>
  40974e:	jb     409750 <__IAT_end__+0x130>
  409750:	add    eax,0x6c745204
  409755:	rex.B
  409756:	fs fs rex.RX jne 4097c9 <__IAT_end__+0x1a9>
  40975b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40975f:	outs   dx,BYTE PTR ds:[rsi]
  409760:	push   rsp
  409761:	(bad)  
  409762:	(bad)  
  409763:	ins    BYTE PTR es:[rdi],dx
  409764:	add    BYTE PTR gs:[rsi],al
  409767:	add    al,0x52
  409769:	je     4097d7 <__IAT_end__+0x1b7>
  40976b:	rex.XB (bad) 
  40976d:	jo     4097e3 <__IAT_end__+0x1c3>
  40976f:	jne    4097e3 <__IAT_end__+0x1c3>
  409771:	rex.XB outs dx,DWORD PTR gs:[rsi]
  409774:	outs   dx,BYTE PTR ds:[rsi]
  409775:	je     4097dc <__IAT_end__+0x1bc>
  409777:	js     4097ed <__IAT_end__+0x1cd>
  409779:	add    BYTE PTR [rip+0x6c745204],cl        # 6cb4e983 <libintl_8_dll_iname+0x6c744be3>
  40977f:	rex.WR outs dx,DWORD PTR ds:[rsi]
  409781:	outs   dx,DWORD PTR ds:[rsi]
  409782:	imul   esi,DWORD PTR [rbp+0x70],0x46
  409786:	jne    4097f6 <__IAT_end__+0x1d6>
  409788:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40978c:	outs   dx,BYTE PTR ds:[rsi]
  40978d:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40978f:	je     409803 <__IAT_end__+0x1e3>
  409791:	jns    409793 <__IAT_end__+0x173>
  409793:	add    BYTE PTR [rsp+rax*1],dl
  409796:	push   rdx
  409797:	je     409805 <__IAT_end__+0x1e5>
  409799:	push   rsi
  40979a:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  4097a1:	outs   dx,BYTE PTR ds:[rsi]
  4097a2:	ja     40980d <__IAT_end__+0x1ed>
  4097a4:	outs   dx,BYTE PTR ds:[rsi]
  4097a5:	add    BYTE PTR fs:[rax],al
  4097a8:	movabs ds:0x61686e5574655304,eax
  4097b1:	outs   dx,BYTE PTR ds:[rsi]
  4097b2:	fs ins BYTE PTR es:[rdi],dx
  4097b4:	gs fs rex.RB js 40981c <__IAT_end__+0x1fc>
  4097b9:	gs jo  409830 <__IAT_end__+0x210>
  4097bc:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4097c3:	gs jb  4097c6 <__IAT_end__+0x1a6>
  4097c6:	mov    al,0x4
  4097c8:	push   rbx
  4097c9:	ins    BYTE PTR es:[rdi],dx
  4097ca:	gs gs jo 4097ce <__IAT_end__+0x1ae>
  4097ce:	mov    esi,0x72655404
  4097d3:	ins    DWORD PTR es:[rdi],dx
  4097d4:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  4097db:	outs   dx,DWORD PTR ds:[rsi]
  4097dc:	movsxd esp,DWORD PTR [rbp+0x73]
  4097df:	jae    4097e1 <__IAT_end__+0x1c1>
  4097e1:	add    ch,al
  4097e3:	add    al,0x54
  4097e5:	ins    BYTE PTR es:[rdi],dx
  4097e6:	jae    40982f <__IAT_end__+0x20f>
  4097e8:	gs je  409841 <__IAT_end__+0x221>
  4097eb:	(bad)  
  4097ec:	ins    BYTE PTR es:[rdi],dx
  4097ed:	jne    409854 <__IAT_end__+0x234>
  4097ef:	add    dl,dl
  4097f1:	add    al,0x55
  4097f3:	outs   dx,BYTE PTR ds:[rsi]
  4097f4:	push   0x6c646e61
  4097f9:	gs fs rex.RB js 409861 <__IAT_end__+0x241>
  4097fe:	gs jo  409875 <__IAT_end__+0x255>
  409801:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  409808:	gs jb  40980b <__IAT_end__+0x1eb>
  40980b:	add    al,dh
  40980d:	add    al,0x56
  40980f:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  409816:	jb     409887 <__IAT_end__+0x267>
  409818:	je     40987f <__IAT_end__+0x25f>
  40981a:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40981e:	repnz add al,0x56
  409821:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  409828:	jne    40988f <__IAT_end__+0x26f>
  40982a:	jb     4098a5 <__IAT_end__+0x285>
  40982c:	add    BYTE PTR [rax],al
  40982e:	(bad)  
  40982f:	add    BYTE PTR [rdi+0x5f],bl
  409832:	rex.XB pop r15
  409834:	jae    4098a6 <__IAT_end__+0x286>
  409836:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40983a:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  409841:	ins    BYTE PTR es:[rdi],dx
  409842:	gs jb  409845 <__IAT_end__+0x225>
  409845:	add    BYTE PTR [rbp+0x0],al
  409848:	pop    rdi
  409849:	pop    rdi
  40984a:	(bad)  
  40984b:	jb     4098b4 <__IAT_end__+0x294>
  40984d:	movsxd eax,DWORD PTR [rax]
  40984f:	add    BYTE PTR [rsi+0x0],al
  409852:	pop    rdi
  409853:	pop    rdi
  409854:	(bad)  
  409855:	jb     4098be <__IAT_end__+0x29e>
  409857:	jbe    409859 <__IAT_end__+0x239>
  409859:	add    BYTE PTR [rsi+0x0],cl
  40985c:	pop    rdi
  40985d:	pop    rdi
  40985e:	fs ins BYTE PTR es:[rdi],dx
  409860:	ins    BYTE PTR es:[rdi],dx
  409861:	outs   dx,DWORD PTR ds:[rsi]
  409862:	outs   dx,BYTE PTR ds:[rsi]
  409863:	gs js  4098cf <__IAT_end__+0x2af>
  409866:	je     409868 <__IAT_end__+0x248>
  409868:	push   rcx
  409869:	add    BYTE PTR [rdi+0x5f],bl
  40986c:	addr32 gs je 4098dd <__IAT_end__+0x2bd>
  409870:	(bad)  
  409871:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  409878:	push   rdx
  409879:	add    BYTE PTR [rdi+0x5f],bl
  40987c:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  409883:	add    BYTE PTR [rbx+0x0],dl
  409886:	pop    rdi
  409887:	pop    rdi
  409888:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40988f:	movsxd eax,DWORD PTR [rax]
  409891:	add    BYTE PTR [rdx+0x0],bl
  409894:	pop    rdi
  409895:	pop    rdi
  409896:	ins    BYTE PTR es:[rdi],dx
  409897:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40989a:	jbe    4098fb <__IAT_end__+0x2db>
  40989c:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  4098a3:	add    BYTE PTR [rdi+0x5f],bl
  4098a6:	jae    40990d <__IAT_end__+0x2ed>
  4098a8:	je     409909 <__IAT_end__+0x2e9>
  4098aa:	(bad)  
  4098ab:	jo     40991d <__IAT_end__+0x2fd>
  4098ad:	pop    rdi
  4098ae:	je     409929 <__IAT_end__+0x309>
  4098b0:	jo     409917 <__IAT_end__+0x2f7>
  4098b2:	add    BYTE PTR [rax],al
  4098b4:	(bad)  
  4098b5:	add    BYTE PTR [rdi+0x5f],bl
  4098b8:	jae    40991f <__IAT_end__+0x2ff>
  4098ba:	je     409931 <__IAT_end__+0x311>
  4098bc:	jae    409923 <__IAT_end__+0x303>
  4098be:	jb     40992d <__IAT_end__+0x30d>
  4098c0:	(bad)  
  4098c1:	je     40992b <__IAT_end__+0x30b>
  4098c3:	gs jb  409938 <__IAT_end__+0x318>
  4098c6:	add    BYTE PTR [rax],al
  4098c8:	jno    4098ca <__IAT_end__+0x2aa>
  4098ca:	pop    rdi
  4098cb:	(bad)  
  4098cc:	movsxd ebp,DWORD PTR [rbp+0x64]
  4098cf:	ins    BYTE PTR es:[rdi],dx
  4098d0:	outs   dx,BYTE PTR ds:[rsi]
  4098d1:	add    BYTE PTR [rax+0x0],bh
  4098d4:	pop    rdi
  4098d5:	(bad)  
  4098d6:	ins    DWORD PTR es:[rdi],dx
  4098d7:	jae    409940 <__IAT_end__+0x320>
  4098d9:	pop    rdi
  4098da:	gs js  409946 <__IAT_end__+0x326>
  4098dd:	je     4098df <__IAT_end__+0x2bf>
  4098df:	add    BYTE PTR [rdx+0x65635f00],cl
  4098e5:	js     409950 <__IAT_end__+0x330>
  4098e7:	je     4098e9 <__IAT_end__+0x2c9>
  4098e9:	add    dl,bl
  4098eb:	add    BYTE PTR [rdi+0x66],bl
  4098ee:	ins    DWORD PTR es:[rdi],dx
  4098ef:	outs   dx,DWORD PTR ds:[rsi]
  4098f0:	fs add BYTE PTR gs:[rax],al
  4098f4:	sbb    al,BYTE PTR [rcx]
  4098f6:	pop    rdi
  4098f7:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  4098fe:	ins    DWORD PTR es:[rdi],dx
  4098ff:	add    BYTE PTR [rax+0x6f6c5f01],al
  409905:	movsxd ebp,DWORD PTR [rbx+0x0]
  409908:	and    eax,0x6e6f5f02
  40990d:	gs js  409979 <__IAT_end__+0x359>
  409910:	je     409912 <__IAT_end__+0x2f2>
  409912:	leave  
  409913:	add    bl,BYTE PTR [rdi+0x75]
  409916:	outs   dx,BYTE PTR ds:[rsi]
  409917:	ins    BYTE PTR es:[rdi],dx
  409918:	outs   dx,DWORD PTR ds:[rsi]
  409919:	movsxd ebp,DWORD PTR [rbx+0x0]
  40991c:	test   DWORD PTR [rbx],eax
  40991e:	(bad)  
  40991f:	(bad)  
  409920:	outs   dx,DWORD PTR ds:[rsi]
  409921:	jb     409997 <__IAT_end__+0x377>
  409923:	add    BYTE PTR [rsi+0x6c616303],dl
  409929:	ins    BYTE PTR es:[rdi],dx
  40992a:	outs   dx,DWORD PTR ds:[rsi]
  40992b:	movsxd eax,DWORD PTR [rax]
  40992d:	add    BYTE PTR [rbx+0x69786503],ah
  409933:	je     409935 <__IAT_end__+0x315>
  409935:	add    BYTE PTR [rsi+0x72706603],dh
  40993b:	imul   ebp,DWORD PTR [rsi+0x74],0x3bd0066
  409942:	data16 jb 4099aa <__IAT_end__+0x38a>
  409945:	add    BYTE PTR gs:[rax],al
  409948:	enter  0x6603,0x77
  40994c:	jb     4099b7 <__IAT_end__+0x397>
  40994e:	je     4099b5 <__IAT_end__+0x395>
  409950:	add    BYTE PTR [rax],al
  409952:	test   BYTE PTR [rbx],0x6d
  409955:	(bad)  
  409956:	ins    BYTE PTR es:[rdi],dx
  409957:	ins    BYTE PTR es:[rdi],dx
  409958:	outs   dx,DWORD PTR ds:[rsi]
  409959:	movsxd eax,DWORD PTR [rax]
  40995b:	add    dh,bh
  40995d:	add    ebp,DWORD PTR [rbp+0x65]
  409960:	ins    DWORD PTR es:[rdi],dx
  409961:	movsxd esi,DWORD PTR [rax+0x79]
  409964:	add    BYTE PTR [rax],al
  409966:	sbb    al,0x4
  409968:	jae    4099d3 <__IAT_end__+0x3b3>
  40996a:	outs   dx,BYTE PTR ds:[esi]
  40996c:	(bad)  
  40996d:	ins    BYTE PTR es:[rdi],dx
  40996e:	add    BYTE PTR [rax],al
  409970:	xor    DWORD PTR [rbx+rsi*2],eax
  409973:	je     4099e7 <__IAT_end__+0x3c7>
  409975:	ins    BYTE PTR es:[rdi],dx
  409976:	outs   dx,BYTE PTR gs:[rsi]
  409978:	add    BYTE PTR [rax],al
  40997a:	xor    al,0x4
  40997c:	jae    4099f2 <__IAT_end__+0x3d2>
  40997e:	jb     4099ee <__IAT_end__+0x3ce>
  409980:	movsxd ebp,DWORD PTR [rbp+0x70]
  409983:	add    BYTE PTR [rsp+rax*1+0x76],dl
  409987:	data16 jo 4099fc <__IAT_end__+0x3dc>
  40998a:	imul   ebp,DWORD PTR [rsi+0x74],0xa4000066
  409991:	add    BYTE PTR [rdi+0x69],ah
  409994:	ins    DWORD PTR es:[rdi],dx
  409995:	jo     4099f6 <__IAT_end__+0x3d6>
  409997:	imul   esi,DWORD PTR fs:[rbx+0x70],0x7379616c
  40999f:	pop    rdi
  4099a0:	data16 ins BYTE PTR es:[rdi],dx
  4099a2:	jne    409a17 <__IAT_end__+0x3f7>
  4099a4:	push   0xffffffffab000000
  4099a9:	add    BYTE PTR [rdi+0x69],ah
  4099ac:	ins    DWORD PTR es:[rdi],dx
  4099ad:	jo     409a0e <__IAT_end__+0x3ee>
  4099af:	fs jb  409a13 <__IAT_end__+0x3f3>
  4099b2:	ja     409a15 <__IAT_end__+0x3f5>
  4099b4:	(bad)  
  4099b5:	ins    BYTE PTR es:[rdi],dx
  4099b6:	gs pop rdi
  4099b8:	fs gs je 409a1d <__IAT_end__+0x3fd>
  4099bc:	movsxd ebp,DWORD PTR [rax+0x0]
  4099bf:	add    BYTE PTR [rax+0x6d696700],dh
  4099c5:	jo     409a26 <__IAT_end__+0x406>
  4099c7:	fs jb  409a2b <__IAT_end__+0x40b>
  4099ca:	ja     409a2d <__IAT_end__+0x40d>
  4099cc:	(bad)  
  4099cd:	ins    BYTE PTR es:[rdi],dx
  4099ce:	gs pop rdi
  4099d0:	addr32 gs je 4099d4 <__IAT_end__+0x3b4>
  4099d4:	mov    esi,0x6d696700
  4099d9:	jo     409a3a <__IAT_end__+0x41a>
  4099db:	fs jb  409a3f <__IAT_end__+0x41f>
  4099de:	ja     409a41 <__IAT_end__+0x421>
  4099e0:	(bad)  
  4099e1:	ins    BYTE PTR es:[rdi],dx
  4099e2:	gs pop rdi
  4099e4:	push   0x615f7361
  4099e9:	ins    BYTE PTR es:[rdi],dx
  4099ea:	jo     409a54 <__IAT_end__+0x434>
  4099ec:	(bad)  
  4099ed:	add    BYTE PTR [rax],al
  4099ef:	add    cl,al
  4099f1:	add    BYTE PTR [rdi+0x69],ah
  4099f4:	ins    DWORD PTR es:[rdi],dx
  4099f5:	jo     409a56 <__IAT_end__+0x436>
  4099f7:	fs jb  409a5b <__IAT_end__+0x43b>
  4099fa:	ja     409a5d <__IAT_end__+0x43d>
  4099fc:	(bad)  
  4099fd:	ins    BYTE PTR es:[rdi],dx
  4099fe:	gs pop rdi
  409a00:	imul   esi,DWORD PTR [rbx+0x5f],0x79617267
  409a07:	add    dl,al
  409a09:	add    BYTE PTR [rdi+0x69],ah
  409a0c:	ins    DWORD PTR es:[rdi],dx
  409a0d:	jo     409a6e <__IAT_end__+0x44e>
  409a0f:	fs jb  409a73 <__IAT_end__+0x453>
  409a12:	ja     409a75 <__IAT_end__+0x455>
  409a14:	(bad)  
  409a15:	ins    BYTE PTR es:[rdi],dx
  409a16:	gs pop rdi
  409a18:	imul   esi,DWORD PTR [rbx+0x5f],0x65646e69
  409a1f:	js     409a86 <__IAT_end__+0x466>
  409a21:	add    BYTE PTR fs:[rax],al
  409a24:	(bad)
  409a27:	imul   ebp,DWORD PTR [rbp+0x70],0x6172645f
  409a2e:	ja     409a91 <__IAT_end__+0x471>
  409a30:	(bad)  
  409a31:	ins    BYTE PTR es:[rdi],dx
  409a32:	gs pop rdi
  409a34:	imul   esi,DWORD PTR [rbx+0x5f],0x626772
  409a3b:	add    BYTE PTR [rcx+0x6d696701],al
  409a41:	jo     409aa2 <__IAT_end__+0x482>
  409a43:	imul   ebp,DWORD PTR [rbp+0x61],0x675f6567
  409a4a:	gs je  409aac <__IAT_end__+0x48c>
  409a4d:	movsxd ebp,DWORD PTR [rdi+0x6c]
  409a50:	outs   dx,DWORD PTR ds:[rsi]
  409a51:	jb     409ac0 <__IAT_end__+0x4a0>
  409a53:	(bad)  
  409a54:	jo     409a56 <__IAT_end__+0x436>
  409a56:	add    BYTE PTR [rax],al
  409a58:	fiadd  DWORD PTR [rcx]
  409a5a:	imul   ebp,DWORD PTR [ebp+0x70],0x616d695f
  409a62:	addr32 gs pop rdi
  409a65:	jae    409acc <__IAT_end__+0x4ac>
  409a67:	je     409ac8 <__IAT_end__+0x4a8>
  409a69:	movsxd ebp,DWORD PTR [rdi+0x6c]
  409a6c:	outs   dx,DWORD PTR ds:[rsi]
  409a6d:	jb     409adc <__IAT_end__+0x4bc>
  409a6f:	(bad)  
  409a70:	jo     409a72 <__IAT_end__+0x452>
  409a72:	add    BYTE PTR [rax],al
  409a74:	in     al,dx
  409a75:	add    DWORD PTR [rdi+0x69],esp
  409a78:	ins    DWORD PTR es:[rdi],dx
  409a79:	jo     409ada <__IAT_end__+0x4ba>
  409a7b:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  409a82:	pop    rdi
  409a83:	jo     409af7 <__IAT_end__+0x4d7>
  409a85:	outs   dx,DWORD PTR ds:[rsi]
  409a86:	movsxd esp,DWORD PTR [rbp+0x64]
  409a89:	jne    409afd <__IAT_end__+0x4dd>
  409a8b:	add    BYTE PTR gs:[rax],al
  409a8e:	add    BYTE PTR [rax],al
  409a90:	cmp    al,BYTE PTR [rdx]
  409a92:	imul   ebp,DWORD PTR [ebp+0x70],0x69616d5f
  409a9a:	outs   dx,BYTE PTR ds:[rsi]
  409a9b:	add    BYTE PTR [rbp+0x6d696702],bl
  409aa1:	jo     409b02 <__IAT_end__+0x4e2>
  409aa3:	jo     409b11 <__IAT_end__+0x4f1>
  409aa5:	jne    409b0e <__IAT_end__+0x4ee>
  409aa7:	imul   ebp,DWORD PTR [rsi+0x5f],0x756e656d
  409aae:	pop    rdi
  409aaf:	jb     409b16 <__IAT_end__+0x4f6>
  409ab1:	imul   esi,DWORD PTR [ebx+0x74],0xad007265
  409ab9:	add    ah,BYTE PTR [rdi+0x69]
  409abc:	ins    DWORD PTR es:[rdi],dx
  409abd:	jo     409b1e <__IAT_end__+0x4fe>
  409abf:	jo     409b33 <__IAT_end__+0x513>
  409ac1:	outs   dx,DWORD PTR ds:[rsi]
  409ac2:	addr32 jb 409b2a <__IAT_end__+0x50a>
  409ac5:	jae    409b3a <__IAT_end__+0x51a>
  409ac7:	pop    rdi
  409ac8:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  409acf:	add    BYTE PTR [rsi+0x6d696702],dh
  409ad5:	jo     409b36 <__IAT_end__+0x516>
  409ad7:	jno    409b4e <__IAT_end__+0x52e>
  409ad9:	imul   esi,DWORD PTR [rax+rax*1-0x42],0x6d696702
  409ae1:	jo     409b42 <__IAT_end__+0x522>
  409ae3:	jb     409b4c <__IAT_end__+0x52c>
  409ae5:	outs   dx,BYTE PTR ds:[rsi]
  409ae6:	pop    rdi
  409ae7:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x31657461
  409aef:	add    BYTE PTR [rdi+0x6d696702],bh
  409af5:	jo     409b56 <__IAT_end__+0x536>
  409af7:	jb     409b60 <__IAT_end__+0x540>
  409af9:	outs   dx,BYTE PTR ds:[rsi]
  409afa:	pop    rdi
  409afb:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x32657461
  409b03:	add    BYTE PTR [rdx],cl
  409b05:	add    esp,DWORD PTR [rdi+0x69]
  409b08:	ins    DWORD PTR es:[rdi],dx
  409b09:	jo     409b6a <__IAT_end__+0x54a>
  409b0b:	je     409b76 <__IAT_end__+0x556>
  409b0d:	ins    BYTE PTR es:[rdi],dx
  409b0e:	gs pop rdi
  409b10:	movsxd esp,DWORD PTR [rcx+0x63]
  409b13:	push   0x746e5f65
  409b18:	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x0
  409b20:	adc    DWORD PTR [rbx],eax
  409b22:	imul   ebp,DWORD PTR [ebp+0x70],0x6c69745f
  409b2a:	gs pop rdi
  409b2c:	ja     409b97 <__IAT_end__+0x577>
  409b2e:	fs je  409b99 <__IAT_end__+0x579>
  409b31:	add    BYTE PTR [rax],al
  409b33:	add    BYTE PTR [rax+rax*1],ch
  409b36:	imul   ebp,DWORD PTR [ebp+0x70],0x636f6c5f
  409b3e:	(bad)  
  409b3f:	ins    BYTE PTR es:[rdi],dx
  409b40:	gs pop rdi
  409b42:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  409b4a:	jns    409b4c <__IAT_end__+0x52c>
  409b4c:	(bad)  
  409b4d:	add    BYTE PTR [rdi+0x69],ah
  409b50:	ins    DWORD PTR es:[rdi],dx
  409b51:	jo     409bb2 <__IAT_end__+0x592>
  409b53:	push   0x745f7673
  409b58:	outs   dx,DWORD PTR ds:[rsi]
  409b59:	pop    rdi
  409b5a:	jb     409bc3 <__IAT_end__+0x5a3>
  409b5c:	(bad)  
  409b5d:	xor    al,0x0
  409b5f:	add    BYTE PTR [rcx+0x0],al
  409b62:	imul   ebp,DWORD PTR [ebp+0x70],0x6267725f
  409b6a:	pop    rdi
  409b6b:	je     409bdc <__IAT_end__+0x5bc>
  409b6d:	pop    rdi
  409b6e:	push   0x347673
  409b73:	add    BYTE PTR [rsi+0x2],ah
  409b76:	addr32 pop rdi
  409b78:	ins    BYTE PTR es:[rdi],dx
  409b79:	outs   dx,DWORD PTR ds:[rsi]
  409b7a:	add    BYTE PTR [eax+eax*1],bl
  409b7e:	ins    BYTE PTR es:[rdi],dx
  409b7f:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  409b86:	(bad)  
  409b87:	imul   ebp,DWORD PTR [rsi+0x64],0x7865745f
  409b8e:	je     409bf4 <__IAT_end__+0x5d4>
  409b90:	outs   dx,DWORD PTR ds:[rsi]
  409b91:	ins    DWORD PTR es:[rdi],dx
  409b92:	(bad)  
  409b93:	imul   ebp,DWORD PTR [rsi+0x5f],0x65646f63
  409b9a:	jae    409c01 <__IAT_end__+0x5e1>
  409b9c:	je     409b9e <__IAT_end__+0x57e>
  409b9e:	add    BYTE PTR [rax],al
  409ba0:	sbb    eax,0x62696c00
  409ba5:	imul   ebp,DWORD PTR [rsi+0x74],0x69625f6c
  409bac:	outs   dx,BYTE PTR ds:[rsi]
  409bad:	fs je  409c15 <__IAT_end__+0x5f5>
  409bb0:	js     409c26 <__IAT_end__+0x606>
  409bb2:	outs   dx,DWORD PTR fs:[rsi]
  409bb4:	ins    DWORD PTR es:[rdi],dx
  409bb5:	(bad)  
  409bb6:	imul   ebp,DWORD PTR [rsi+0x0],0x25000000
  409bbd:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  409bc1:	imul   ebp,DWORD PTR [rsi+0x74],0x65675f6c
  409bc8:	je     409c3e <__IAT_end__+0x61e>
  409bca:	gs js  409c41 <__IAT_end__+0x621>
  409bcd:	add    BYTE PTR [rax],al
  409bcf:	add    BYTE PTR [rbp+0x0],al
  409bd2:	ins    BYTE PTR es:[rdi],dx
  409bd3:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  409bda:	je     409c41 <__IAT_end__+0x621>
  409bdc:	js     409c52 <__lib64_libkernel32_a_iname+0x6>
  409bde:	outs   dx,DWORD PTR fs:[rsi]
  409be0:	ins    DWORD PTR es:[rdi],dx
  409be1:	(bad)  
  409be2:	imul   ebp,DWORD PTR [rsi+0x0],0x0
  409be9:	nop
  409bea:	add    BYTE PTR [rax],al
  409bec:	add    BYTE PTR [rax-0x70000000],dl
  409bf2:	add    BYTE PTR [rax],al
  409bf4:	add    BYTE PTR [rax-0x70000000],dl
  409bfa:	add    BYTE PTR [rax],al
  409bfc:	add    BYTE PTR [rax-0x70000000],dl
  409c02:	add    BYTE PTR [rax],al
  409c04:	add    BYTE PTR [rax-0x70000000],dl
  409c0a:	add    BYTE PTR [rax],al
  409c0c:	add    BYTE PTR [rax-0x70000000],dl
  409c12:	add    BYTE PTR [rax],al
  409c14:	add    BYTE PTR [rax-0x70000000],dl
  409c1a:	add    BYTE PTR [rax],al
  409c1c:	add    BYTE PTR [rax-0x70000000],dl
  409c22:	add    BYTE PTR [rax],al
  409c24:	add    BYTE PTR [rax-0x70000000],dl
  409c2a:	add    BYTE PTR [rax],al
  409c2c:	add    BYTE PTR [rax-0x70000000],dl
  409c32:	add    BYTE PTR [rax],al
  409c34:	add    BYTE PTR [rax-0x70000000],dl
  409c3a:	add    BYTE PTR [rax],al
  409c3c:	add    BYTE PTR [rax-0x70000000],dl
  409c42:	add    BYTE PTR [rax],al
  409c44:	add    BYTE PTR [rax-0x70000000],dl
	...

0000000000409c4c <__lib64_libkernel32_a_iname>:
  409c4c:	rex.WXB
  409c4d:	rex.RB push r10
  409c4f:	rex.WRX
  409c50:	rex.RB
  409c51:	xor    r14,QWORD PTR [rdx]
  409c54:	cs fs ins BYTE PTR es:[rdi],dx
  409c57:	ins    BYTE PTR es:[rdi],dx
  409c58:	add    BYTE PTR [rax],al
  409c5a:	add    BYTE PTR [rax],al
  409c5c:	adc    al,0x90
  409c5e:	add    BYTE PTR [rax],al
  409c60:	adc    al,0x90
  409c62:	add    BYTE PTR [rax],al
  409c64:	adc    al,0x90
  409c66:	add    BYTE PTR [rax],al
  409c68:	adc    al,0x90
  409c6a:	add    BYTE PTR [rax],al
  409c6c:	adc    al,0x90
  409c6e:	add    BYTE PTR [rax],al
  409c70:	adc    al,0x90
  409c72:	add    BYTE PTR [rax],al
  409c74:	adc    al,0x90
  409c76:	add    BYTE PTR [rax],al
  409c78:	adc    al,0x90
  409c7a:	add    BYTE PTR [rax],al
  409c7c:	adc    al,0x90
  409c7e:	add    BYTE PTR [rax],al
  409c80:	adc    al,0x90
  409c82:	add    BYTE PTR [rax],al
  409c84:	adc    al,0x90
  409c86:	add    BYTE PTR [rax],al
  409c88:	adc    al,0x90
  409c8a:	add    BYTE PTR [rax],al
  409c8c:	adc    al,0x90
  409c8e:	add    BYTE PTR [rax],al
  409c90:	adc    al,0x90
  409c92:	add    BYTE PTR [rax],al
  409c94:	adc    al,0x90
  409c96:	add    BYTE PTR [rax],al
  409c98:	adc    al,0x90
  409c9a:	add    BYTE PTR [rax],al
  409c9c:	adc    al,0x90
  409c9e:	add    BYTE PTR [rax],al
  409ca0:	adc    al,0x90
  409ca2:	add    BYTE PTR [rax],al
  409ca4:	adc    al,0x90
  409ca6:	add    BYTE PTR [rax],al
  409ca8:	adc    al,0x90
  409caa:	add    BYTE PTR [rax],al
  409cac:	adc    al,0x90
  409cae:	add    BYTE PTR [rax],al
  409cb0:	adc    al,0x90
  409cb2:	add    BYTE PTR [rax],al
  409cb4:	adc    al,0x90
  409cb6:	add    BYTE PTR [rax],al
  409cb8:	adc    al,0x90
  409cba:	add    BYTE PTR [rax],al
  409cbc:	adc    al,0x90
  409cbe:	add    BYTE PTR [rax],al
  409cc0:	adc    al,0x90
  409cc2:	add    BYTE PTR [rax],al
  409cc4:	adc    al,0x90
  409cc6:	add    BYTE PTR [rax],al
  409cc8:	adc    al,0x90
  409cca:	add    BYTE PTR [rax],al
  409ccc:	adc    al,0x90
  409cce:	add    BYTE PTR [rax],al
  409cd0:	adc    al,0x90
	...

0000000000409cd4 <__lib64_libmsvcrt_a_iname>:
  409cd4:	ins    DWORD PTR es:[rdi],dx
  409cd5:	jae    409d4d <libgimpbase_2_0_0_dll_iname+0xd>
  409cd7:	movsxd esi,DWORD PTR [rdx+0x74]
  409cda:	cs fs ins BYTE PTR es:[rdi],dx
  409cdd:	ins    BYTE PTR es:[rdi],dx
  409cde:	add    BYTE PTR [rax],al
  409ce0:	sub    BYTE PTR [rax-0x6fd80000],dl
  409ce6:	add    BYTE PTR [rax],al
  409ce8:	sub    BYTE PTR [rax-0x6fd80000],dl
  409cee:	add    BYTE PTR [rax],al
  409cf0:	sub    BYTE PTR [rax-0x6fd80000],dl
  409cf6:	add    BYTE PTR [rax],al
  409cf8:	sub    BYTE PTR [rax-0x6fd80000],dl
  409cfe:	add    BYTE PTR [rax],al
  409d00:	sub    BYTE PTR [rax-0x6fd80000],dl
  409d06:	add    BYTE PTR [rax],al
  409d08:	sub    BYTE PTR [rax-0x6fd80000],dl
  409d0e:	add    BYTE PTR [rax],al
  409d10:	sub    BYTE PTR [rax-0x6fd80000],dl
  409d16:	add    BYTE PTR [rax],al
  409d18:	sub    BYTE PTR [rax-0x6fd80000],dl
  409d1e:	add    BYTE PTR [rax],al
  409d20:	sub    BYTE PTR [rax-0x6fd80000],dl
	...

0000000000409d28 <libgimp_2_0_0_dll_iname>:
  409d28:	ins    BYTE PTR es:[rdi],dx
  409d29:	imul   esp,DWORD PTR [rdx+0x67],0x2d706d69
  409d30:	xor    ch,BYTE PTR [rsi]
  409d32:	xor    BYTE PTR [rip+0x6c642e30],ch        # 6ca4cb68 <libintl_8_dll_iname+0x6c642dc8>
  409d38:	ins    BYTE PTR es:[rdi],dx
  409d39:	add    BYTE PTR [rax],al
  409d3b:	add    BYTE PTR [rax+rdx*4],bh
	...

0000000000409d40 <libgimpbase_2_0_0_dll_iname>:
  409d40:	ins    BYTE PTR es:[rdi],dx
  409d41:	imul   esp,DWORD PTR [rdx+0x67],0x62706d69
  409d48:	(bad)  
  409d49:	jae    409db0 <libintl_8_dll_iname+0x10>
  409d4b:	sub    eax,0x2d302e32
  409d50:	xor    BYTE PTR [rsi],ch
  409d52:	fs ins BYTE PTR es:[rdi],dx
  409d54:	ins    BYTE PTR es:[rdi],dx
  409d55:	add    BYTE PTR [rax],al
  409d57:	add    BYTE PTR [rax-0x70],dl
  409d5a:	add    BYTE PTR [rax],al
  409d5c:	push   rax
  409d5d:	nop
	...

0000000000409d60 <libgimpcolor_2_0_0_dll_iname>:
  409d60:	ins    BYTE PTR es:[rdi],dx
  409d61:	imul   esp,DWORD PTR [rdx+0x67],0x63706d69
  409d68:	outs   dx,DWORD PTR ds:[rsi]
  409d69:	ins    BYTE PTR es:[rdi],dx
  409d6a:	outs   dx,DWORD PTR ds:[rsi]
  409d6b:	jb     409d9a <libglib_2_0_0_dll_iname+0x1e>
  409d6d:	xor    ch,BYTE PTR [rsi]
  409d6f:	xor    BYTE PTR [rip+0x6c642e30],ch        # 6ca4cba5 <libintl_8_dll_iname+0x6c642e05>
  409d75:	ins    BYTE PTR es:[rdi],dx
  409d76:	add    BYTE PTR [rax],al
  409d78:	fs nop
	...

0000000000409d7c <libglib_2_0_0_dll_iname>:
  409d7c:	ins    BYTE PTR es:[rdi],dx
  409d7d:	imul   esp,DWORD PTR [rdx+0x67],0x2d62696c
  409d84:	xor    ch,BYTE PTR [rsi]
  409d86:	xor    BYTE PTR [rip+0x6c642e30],ch        # 6ca4cbbc <libintl_8_dll_iname+0x6c642e1c>
  409d8c:	ins    BYTE PTR es:[rdi],dx
  409d8d:	add    BYTE PTR [rax],al
  409d8f:	add    BYTE PTR [rax-0x70],bh
  409d92:	add    BYTE PTR [rax],al
  409d94:	js     409d26 <__lib64_libmsvcrt_a_iname+0x52>
  409d96:	add    BYTE PTR [rax],al
  409d98:	js     409d2a <libgimp_2_0_0_dll_iname+0x2>
  409d9a:	add    BYTE PTR [rax],al
  409d9c:	js     409d2e <libgimp_2_0_0_dll_iname+0x6>
	...

0000000000409da0 <libintl_8_dll_iname>:
  409da0:	ins    BYTE PTR es:[rdi],dx
  409da1:	imul   esp,DWORD PTR [rdx+0x69],0x2d6c746e
  409da8:	cmp    BYTE PTR [rsi],ch
  409daa:	fs ins BYTE PTR es:[rdi],dx
  409dac:	ins    BYTE PTR es:[rdi],dx
  409dad:	add    BYTE PTR [rax],al
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax],dh
  40a029:	sbb    eax,0x40
	...
  40a03e:	add    BYTE PTR [rax],al
  40a040:	(bad)  
  40a041:	(bad)  
  40a042:	add    BYTE PTR [rax],al
  40a045:	add    BYTE PTR [rax],al
  40a047:	add    BYTE PTR [rax],dh
  40a049:	(bad)  
  40a04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40b036:	add    BYTE PTR [rax],al
  40b038:	movabs al,ds:0x40
	...

Disassembly of section .rsrc:

000000000040c000 <.rsrc>:
	...
  40c00c:	add    BYTE PTR [rax],al
  40c00e:	add    al,0x0
  40c010:	add    eax,DWORD PTR [rax]
  40c012:	add    BYTE PTR [rax],al
  40c014:	xor    BYTE PTR [rax],al
  40c016:	add    BYTE PTR [rax+0xe],al
  40c01c:	add    BYTE PTR [rax],0x0
  40c01f:	adc    BYTE PTR [rax],0x0
  40c022:	add    BYTE PTR [rax],al
  40c024:	mov    al,0x0
  40c026:	add    BYTE PTR [rax+0x18],al
  40c02c:	loopne 40c02e <libintl_8_dll_iname+0x228e>
  40c02e:	add    BYTE PTR [rax+0x0],al
	...
  40c03c:	add    BYTE PTR [rax],al
  40c03e:	add    al,BYTE PTR [rax]
  40c040:	add    DWORD PTR [rax],eax
  40c042:	add    BYTE PTR [rax],al
  40c044:	push   rax
  40c045:	add    BYTE PTR [rax],al
  40c047:	add    BYTE PTR [rdx],0x0
  40c04a:	add    BYTE PTR [rax],al
  40c04c:	push   0x800000
	...
  40c05d:	add    BYTE PTR [rcx],al
  40c05f:	add    BYTE PTR [rcx],cl
  40c061:	add    al,0x0
  40c063:	add    BYTE PTR [rax],dl
  40c065:	add    DWORD PTR [rax],eax
	...
  40c073:	add    BYTE PTR [rax],al
  40c075:	add    BYTE PTR [rcx],al
  40c077:	add    BYTE PTR [rcx],cl
  40c079:	add    al,0x0
  40c07b:	add    BYTE PTR [rax],ah
  40c07d:	add    DWORD PTR [rax],eax
	...
  40c08b:	add    BYTE PTR [rax],al
  40c08d:	add    BYTE PTR [rcx],al
  40c08f:	add    BYTE PTR [rcx],al
  40c091:	add    BYTE PTR [rax],al
  40c093:	add    BYTE PTR [rax+0x800000],bl
	...
  40c0a5:	add    BYTE PTR [rcx],al
  40c0a7:	add    BYTE PTR [rcx],cl
  40c0a9:	add    al,0x0
  40c0ab:	add    BYTE PTR [rax],dh
  40c0ad:	add    DWORD PTR [rax],eax
	...
  40c0bb:	add    BYTE PTR [rax],al
  40c0bd:	add    BYTE PTR [rcx],al
  40c0bf:	add    BYTE PTR [rcx],al
  40c0c1:	add    BYTE PTR [rax],al
  40c0c3:	add    al,cl
  40c0c5:	add    BYTE PTR [rax],al
  40c0c7:	add    BYTE PTR [rax],0x0
	...
  40c0d6:	add    DWORD PTR [rax],eax
  40c0d8:	or     DWORD PTR [rax+rax*1],eax
  40c0db:	add    BYTE PTR [rax+0x1],al
	...
  40c0ee:	add    DWORD PTR [rax],eax
  40c0f0:	add    DWORD PTR [rax],eax
  40c0f2:	add    BYTE PTR [rax],al
  40c0f4:	clc    
  40c0f5:	add    BYTE PTR [rax],al
  40c0f7:	add    BYTE PTR [rax],0x0
	...
  40c106:	add    DWORD PTR [rax],eax
  40c108:	or     DWORD PTR [rax+rax*1],eax
  40c10b:	add    BYTE PTR [rax+0x1],dl
  40c10e:	add    BYTE PTR [rax],al
  40c110:	(bad)  
  40c111:	rol    DWORD PTR [rax],0x0
  40c114:	push   0x5
  40c119:	add    BYTE PTR [rax],al
  40c11b:	add    BYTE PTR [rax],al
  40c11d:	add    BYTE PTR [rax],al
  40c11f:	add    al,cl
  40c121:	mov    BYTE PTR [rax],0x0
  40c124:	push   0x4
  40c129:	add    BYTE PTR [rax],al
  40c12b:	add    BYTE PTR [rax],al
  40c12d:	add    BYTE PTR [rax],al
  40c12f:	add    BYTE PTR [rax],dh
  40c131:	retf   
  40c132:	add    BYTE PTR [rax],al
  40c134:	and    al,BYTE PTR [rax]
	...
  40c13e:	add    BYTE PTR [rax],al
  40c140:	pop    rax
  40c141:	retf   
  40c142:	add    BYTE PTR [rax],al
  40c144:	mov    WORD PTR [rbx],es
	...
  40c14e:	add    BYTE PTR [rax],al
  40c150:	call   ffffffffa940c223 <libintl_8_dll_iname+0xffffffffa9002483>
  40c155:	add    al,0x0
	...
  40c15f:	add    BYTE PTR [rax],ch
  40c161:	add    BYTE PTR [rax],al
  40c163:	add    BYTE PTR [rax],dl
  40c165:	add    BYTE PTR [rax],al
  40c167:	add    BYTE PTR [rax],ah
  40c169:	add    BYTE PTR [rax],al
  40c16b:	add    BYTE PTR [rcx],al
  40c16d:	add    BYTE PTR [rax],cl
  40c16f:	add    BYTE PTR [rax],al
  40c171:	add    BYTE PTR [rax],al
  40c173:	add    BYTE PTR [rax+0x1],al
	...
  40c18a:	add    BYTE PTR [rax],al
  40c18c:	addr32 jbe 40c20c <libintl_8_dll_iname+0x246c>
  40c18f:	add    BYTE PTR [rcx-0x80],dh
  40c192:	xchg   BYTE PTR [rax],al
  40c194:	(bad)  
  40c195:	(bad)  
  40c196:	inc    DWORD PTR [rax]
  40c198:	push   rdx
  40c199:	movsxd ebp,DWORD PTR [rbx+0x0]
  40c19c:	(bad)  
  40c19d:	femms  
  40c19f:	add    dh,dh
  40c1a1:	div    dh
  40c1a3:	add    bh,dh
  40c1a5:	div    edi
  40c1a7:	add    BYTE PTR [rbp+0x5d],cl
  40c1aa:	add    BYTE PTR fs:[rip+0xffffffff95002526],ah        # ffffffff9540e6d7 <libintl_8_dll_iname+0xffffffff95004937>
  40c1b1:	pushf  
  40c1b2:	pushf  
  40c1b3:	add    BYTE PTR [rdx-0x58ff4344],dh
  40c1b9:	mov    dl,0xb3
  40c1bb:	add    BYTE PTR [rax+rbp*4-0x616eff56],bl
  40c1c2:	movabs eax,ds:0x4b4b4600f4f4f400
  40c1cb:	add    BYTE PTR [rax],bh
  40c1cd:	cmp    DWORD PTR [rdi],esi
  40c1cf:	add    BYTE PTR [rsp+rbp*2+0x74],bl
  40c1d3:	add    BYTE PTR [rdi],ah
  40c1d5:	sub    BYTE PTR [rax],ch
  40c1d7:	add    BYTE PTR [rsi+0x68],ah
  40c1da:	add    BYTE PTR [edx-0x5dff6b6c],dl
  40c1e1:	movabs ds:0x959300a2a4a000a2,eax
  40c1ea:	xchg   esp,eax
  40c1eb:	add    BYTE PTR [rdx+rdx*4+0x65630091],cl
  40c1f2:	add    BYTE PTR fs:[rbp+0x5a],dl
  40c1f6:	pop    rbx
  40c1f7:	add    BYTE PTR [rcx+rdx*2+0x52],cl
  40c1fb:	add    bh,ah
  40c1fd:	out    dx,eax
  40c1fe:	out    dx,eax
  40c1ff:	add    BYTE PTR [rsi+0x60],cl
  40c202:	push   0x6b696300
  40c207:	add    BYTE PTR [rax-0x32ff5c5d],ah
  40c20d:	(bad)  
  40c20e:	(bad)  
  40c20f:	add    BYTE PTR [rax+rbp*4-0x3d40ff59],ah
  40c216:	rol    DWORD PTR [rax],0xe3
  40c219:	in     eax,0xe6
  40c21b:	add    BYTE PTR [rbp+0x6a009695],cl
  40c221:	je     40c29b <libintl_8_dll_iname+0x24fb>
  40c223:	add    BYTE PTR [rdx],bh
  40c225:	rex
  40c226:	rex.X add bl,spl
  40c229:	(bad)  
  40c22a:	jmp    40c22c <libintl_8_dll_iname+0x248c>
  40c22c:	rex.WXB pop r13
  40c22e:	add    BYTE PTR gs:[rbp+0x67],ah
  40c232:	addr32 add bl,ch
  40c235:	in     al,dx
  40c236:	in     al,dx
  40c237:	add    bl,bl
  40c239:	fcmovnu st,st(3)
  40c23b:	add    BYTE PTR [rax-0x10ff4345],bh
  40c241:	out    dx,eax
  40c242:	out    dx,eax
  40c243:	add    dl,dl
  40c245:	rcl    dl,cl
  40c247:	add    BYTE PTR [rbp+0x6400c2c1],bh
  40c24d:	jo     40c2c3 <libintl_8_dll_iname+0x2523>
  40c24f:	add    BYTE PTR [rbx],bh
  40c251:	rex
  40c252:	rex.XB add r8b,spl
  40c255:	out    0xe8,al
  40c257:	add    BYTE PTR [rdi+0x5a],al
  40c25a:	(bad)  
  40c25b:	add    bl,al
  40c25d:	ret    
  40c25e:	rol    DWORD PTR [rax],0x70
  40c261:	jo     40c2d1 <libintl_8_dll_iname+0x2531>
  40c263:	add    al,bl
  40c265:	fcomp  st(0)
  40c267:	add    BYTE PTR [rbx+riz*2+0x62],ah
  40c26b:	add    BYTE PTR [rax+rsi*4-0x5150ff4f],ch
  40c272:	scas   al,BYTE PTR es:[rdi]
  40c273:	add    BYTE PTR [rbx],bh
  40c275:	cmp    bh,BYTE PTR [rdx]
  40c277:	add    BYTE PTR [rsi+0x6200c3c2],bh
  40c27d:	outs   dx,BYTE PTR ds:[rsi]
  40c27e:	jae    40c280 <libintl_8_dll_iname+0x24e0>
  40c280:	ds rex.R
  40c282:	rex.RXB add r12b,r11b
  40c285:	loop   40c26b <libintl_8_dll_iname+0x24cb>
  40c287:	add    BYTE PTR [rdi+rdx*2+0x5f],al
  40c28b:	add    BYTE PTR [rdx+0x5800a8aa],ch
  40c291:	pop    rax
  40c292:	push   rbp
  40c293:	add    BYTE PTR [rbp+0x72],ch
  40c296:	je     40c298 <libintl_8_dll_iname+0x24f8>
  40c298:	mov    bl,0xb9
  40c29a:	mov    edx,0xa3a29900
  40c29f:	add    BYTE PTR [rbx-0x3dff4e4f],ch
  40c2a5:	(bad)  
  40c2a6:	(bad)  
  40c2a7:	add    BYTE PTR [rcx+0x6500bcbb],bh
  40c2ad:	outs   dx,BYTE PTR ds:[rsi]
  40c2ae:	jb     40c2b0 <libintl_8_dll_iname+0x2510>
  40c2b0:	push   rdi
  40c2b1:	(bad)  
  40c2b2:	data16 add BYTE PTR [rcx+0x45],al
  40c2b6:	add    r9b,r11b
  40c2b9:	fsubrp st(1),st
  40c2bb:	add    dh,dl
  40c2bd:	(bad)  
  40c2bf:	add    BYTE PTR [rax],bl
  40c2c1:	(bad)  
  40c2c2:	(bad)  
  40c2c4:	xor    DWORD PTR [rax+0x46],eax
  40c2c7:	add    BYTE PTR [rcx+0x5a],al
  40c2ca:	add    BYTE PTR fs:[rdx],bh
  40c2cd:	rex.WR push rsp
  40c2cf:	add    BYTE PTR [rbx+0x4f],al
  40c2d2:	push   rsp
  40c2d3:	add    BYTE PTR [rsi+0x53],al
  40c2d6:	pop    rax
  40c2d7:	add    BYTE PTR [rbx+0x51],al
  40c2da:	push   rsi
  40c2db:	add    BYTE PTR [rbx+0x50],al
  40c2de:	push   rsi
  40c2df:	add    BYTE PTR [rcx+0x57],dl
  40c2e2:	pop    rcx
  40c2e3:	add    BYTE PTR [rax+0x50],dl
  40c2e6:	rex.WRX add sil,r10b
  40c2e9:	fcmovu st,st(6)
  40c2eb:	add    BYTE PTR [rcx],ch
  40c2ed:	rex.X
  40c2ee:	rex.WX add BYTE PTR [rip+0x2a001516],dl        # 2a40d80b <libintl_8_dll_iname+0x2a003a6b>
  40c2f5:	sub    al,0x2b
  40c2f7:	add    BYTE PTR [rcx+0x5b],dl
  40c2fa:	pop    rsi
  40c2fb:	add    BYTE PTR [rsi+0x6c],bl
  40c2fe:	jb     40c300 <libintl_8_dll_iname+0x2560>
  40c300:	rex.WRXB pop r14
  40c302:	add    BYTE PTR fs:[rdi],bh
  40c305:	rex.WRX push rbp
  40c307:	add    BYTE PTR [rcx+rax*2],dh
  40c30a:	rex.W add BYTE PTR [rdx+rax*2],sil
  40c30e:	rex.WB add BYTE PTR [r13+0x60],dl
  40c312:	add    BYTE PTR gs:[rdx+0x46],al
  40c316:	rex.RXB add BYTE PTR [r8-0x2dff6367],r11b
  40c31d:	(bad)  
  40c31e:	fiadd  DWORD PTR [rax]
  40c320:	cmp    DWORD PTR [rdi+0x57],ecx
  40c323:	add    BYTE PTR [rdi],ch
  40c325:	rex.RXB
  40c326:	rex.WRX add BYTE PTR [r11*1+0x554f001c],r11b
  40c32e:	push   rsp
  40c32f:	add    BYTE PTR [rdi+0x5d],dl
  40c332:	pop    rdi
  40c333:	add    BYTE PTR [rbp+rbx*2+0x61],dl
  40c337:	add    BYTE PTR [rcx+0x63],bl
  40c33a:	push   0x67635a00
  40c33f:	add    BYTE PTR [rsi+0x54],cl
  40c342:	push   rsi
  40c343:	add    BYTE PTR [rbx+0x4f],cl
  40c346:	rex.WRXB add BYTE PTR [r11-0x30ff7172],r9b
  40c34d:	rcl    bh,cl
  40c34f:	add    BYTE PTR [rsi],dh
  40c351:	rex.WR push rsp
  40c353:	add    BYTE PTR [rdx-0x78],bh
  40c356:	mov    BYTE PTR [rax],al
  40c358:	mov    ch,0xc5
  40c35b:	add    BYTE PTR [rsi-0x68ff5150],ch
  40c361:	xchg   edi,eax
  40c362:	xchg   esi,eax
  40c363:	add    BYTE PTR [rbx+0x3d009494],dl
  40c369:	rex.WX
  40c36a:	rex.WXB add BYTE PTR [rip+0xffffffffc5004c47],sil        # ffffffffc5410fb8 <libintl_8_dll_iname+0xffffffffc5007218>
  40c371:	int    0xcd
  40c373:	add    ah,cl
  40c375:	(bad)  
  40c376:	(bad)  
  40c377:	add    BYTE PTR [rbx],dh
  40c379:	rex.WX push rdx
  40c37b:	add    BYTE PTR [rax-0x79],bh
  40c37e:	xchg   DWORD PTR [rax],eax
  40c380:	out    dx,al
  40c381:	out    dx,al
  40c382:	out    dx,al
  40c383:	add    dl,ch
  40c385:	out    dx,al
  40c386:	out    dx,al
  40c387:	add    dh,bl
  40c389:	in     al,0xe4
  40c38b:	add    BYTE PTR [rsp+rax*2],ch
  40c38e:	rex.WR add al,r9b
  40c391:	leave  
  40c392:	rol    BYTE PTR [rax],1
  40c394:	leave  
  40c395:	retf   0xd1
  40c398:	(bad)  
  40c399:	rex.RXB
  40c39a:	rex.WRXB add BYTE PTR [r9-0x7f],r14b
  40c39e:	add    DWORD PTR [rax],0xdedede
  40c3a4:	mov    dh,0xce
  40c3a7:	add    BYTE PTR [rbx+0x7b],ch
  40c3aa:	jnp    40c3ac <libintl_8_dll_iname+0x260c>
  40c3ac:	fs jne 40c425 <libintl_8_dll_iname+0x2685>
  40c3af:	add    BYTE PTR [rbp+0x6f],bl
  40c3b2:	jno    40c3b4 <libintl_8_dll_iname+0x2614>
  40c3b4:	push   rdi
  40c3b5:	imul   ebp,DWORD PTR [rax+rax*1+0x50],0x3c006763
  40c3bd:	push   rdx
  40c3be:	pop    rax
  40c3bf:	add    BYTE PTR [rsi],dh
  40c3c1:	rex.WRB push r11
	...
  40c587:	add    BYTE PTR [rax],al
  40c589:	add    BYTE PTR [rax-0x73747577],cl
  40c58f:	add    BYTE PTR [rax],al
  40c591:	lea    ecx,[rsi+0x5967]
  40c597:	add    BYTE PTR [rax],al
  40c599:	add    BYTE PTR [rbp+0x594d4d86],al
  40c59f:	add    BYTE PTR [rax],al
  40c5a1:	test   DWORD PTR [rdi+0x8187],eax
  40c5a7:	add    BYTE PTR [rax],al
  40c5a9:	add    BYTE PTR [rbp+0x7e],bh
  40c5ac:	jg     40c52e <libintl_8_dll_iname+0x278e>
  40c5ae:	add    DWORD PTR [rax],0x83827d00
  40c5b4:	test   BYTE PTR [rax],al
  40c5b6:	add    BYTE PTR [rax],al
  40c5b8:	add    BYTE PTR [rax],al
  40c5ba:	jae    40c630 <libintl_8_dll_iname+0x2890>
  40c5bc:	jne    40c634 <libintl_8_dll_iname+0x2894>
  40c5be:	ja     40c638 <libintl_8_dll_iname+0x2898>
  40c5c0:	jns    40c63c <libintl_8_dll_iname+0x289c>
  40c5c2:	jnp    40c63f <libintl_8_dll_iname+0x289f>
  40c5c4:	jl     40c5c6 <libintl_8_dll_iname+0x2826>
  40c5c6:	add    BYTE PTR [rax],al
  40c5c8:	add    BYTE PTR [rax],al
  40c5ca:	imul   ebp,DWORD PTR [rdx+0x6b],0x6f6e6d6c
  40c5d1:	jo     40c644 <libintl_8_dll_iname+0x28a4>
  40c5d3:	jno    40c647 <libintl_8_dll_iname+0x28a7>
  40c5d5:	add    BYTE PTR [rax],al
  40c5d7:	add    BYTE PTR [rax],al
  40c5d9:	pop    rbx
  40c5da:	pop    rsp
  40c5db:	pop    rbp
  40c5dc:	pop    rsi
  40c5dd:	pop    rdi
  40c5de:	(bad)  
  40c5df:	(bad)  
  40c5e0:	(bad)
  40c5e5:	addr32 pop rcx
  40c5e7:	add    BYTE PTR [rax],al
  40c5e9:	rex.WRX
  40c5ea:	rex.WRXB push r8
  40c5ec:	push   rcx
  40c5ed:	push   rdx
  40c5ee:	push   rbx
  40c5ef:	push   rsp
  40c5f0:	push   rbp
  40c5f1:	push   rsi
  40c5f2:	push   rdi
  40c5f3:	pop    rax
  40c5f4:	rex.WRB
  40c5f5:	rex.WRB
  40c5f6:	rex.WRB pop r9
  40c5f8:	rex.B
  40c5f9:	rex.X
  40c5fa:	rex.XB
  40c5fb:	rex.R
  40c5fc:	rex.RB
  40c5fd:	rex.RX
  40c5fe:	rex.RXB
  40c5ff:	rex.W
  40c600:	rex.WB
  40c601:	rex.WX
  40c602:	rex.WXB
  40c603:	rex.WR
  40c604:	rex.WRB
  40c605:	rex.WRB
  40c606:	rex.WRB add al,0x35
  40c609:	ss (bad) 
  40c60b:	cmp    BYTE PTR [rcx],bh
  40c60d:	(bad)  
  40c60e:	cmp    bh,BYTE PTR [rbx]
  40c610:	cmp    al,0x3d
  40c612:	ds (bad) 
  40c614:	adc    al,BYTE PTR [rax+rax*1]
  40c618:	add    BYTE PTR [rdx],ch
  40c61a:	sub    ebp,DWORD PTR [rbp*1+0x302f2e06]
  40c621:	xor    DWORD PTR [rdx],esi
  40c623:	xor    esi,DWORD PTR [rax+rax*1]
  40c626:	add    BYTE PTR [rax],al
  40c628:	add    BYTE PTR [rdi],bl
  40c62a:	and    BYTE PTR [rcx],ah
  40c62c:	and    ah,BYTE PTR [rbx]
  40c62e:	add    esp,DWORD PTR ds:0x29282726
  40c635:	add    BYTE PTR [rax],al
  40c637:	add    BYTE PTR [rax],al
  40c639:	sbb    al,0x14
  40c63b:	adc    eax,0x19181716
  40c640:	sbb    bl,BYTE PTR [rbx]
  40c642:	sbb    al,0x1d
  40c644:	(bad)  
  40c645:	add    BYTE PTR [rax],al
  40c647:	add    BYTE PTR [rax],al
  40c649:	adc    DWORD PTR [rdx],ecx
  40c64b:	or     ecx,DWORD PTR [rcx*1+0x100f070e]
  40c652:	adc    DWORD PTR [rdx],edx
  40c654:	add    al,0x0
	...
  40c65e:	add    al,BYTE PTR [rsi]
  40c660:	(bad)  
  40c661:	or     BYTE PTR [rcx],cl
	...
  40c66b:	add    BYTE PTR [rax],al
  40c66d:	add    BYTE PTR [rdx],al
  40c66f:	add    eax,DWORD PTR [rbx]
  40c671:	add    al,0x0
	...
  40c67f:	add    DWORD PTR [rcx],eax
  40c681:	add    BYTE PTR [rax],al
  40c683:	add    BYTE PTR [rax],al
  40c685:	add    BYTE PTR [rax],al
  40c687:	add    cl,al
  40c689:	xchg   DWORD PTR [rax],eax
  40c68b:	add    cl,al
  40c68d:	xchg   DWORD PTR [rax],eax
  40c68f:	add    cl,al
  40c691:	xchg   DWORD PTR [rax],eax
  40c693:	add    al,al
  40c695:	(bad)  
  40c696:	add    BYTE PTR [rax],al
  40c698:	rol    BYTE PTR [rdi],0x0
  40c69b:	add    BYTE PTR [rax+0x1],al
	...
  40c6a9:	add    DWORD PTR [rax],eax
  40c6ab:	add    BYTE PTR [rax-0x7ffffff9],al
  40c6b1:	(bad)  
  40c6b2:	add    BYTE PTR [rax],al
  40c6b4:	add    BYTE PTR [rdi],0x0
  40c6b7:	add    BYTE PTR [rax-0x3fffff9],al
  40c6bd:	(bad)  
  40c6be:	add    BYTE PTR [rax],al
  40c6c0:	cld    
  40c6c1:	(bad)  
  40c6c2:	add    BYTE PTR [rax],al
  40c6c4:	(bad)  
  40c6c5:	jg     40c6c7 <libintl_8_dll_iname+0x2927>
  40c6c7:	add    BYTE PTR [rax],ch
  40c6c9:	add    BYTE PTR [rax],al
  40c6cb:	add    BYTE PTR [rax],dl
  40c6cd:	add    BYTE PTR [rax],al
  40c6cf:	add    BYTE PTR [rax],ah
  40c6d1:	add    BYTE PTR [rax],al
  40c6d3:	add    BYTE PTR [rcx],al
  40c6d5:	add    BYTE PTR [rax],ah
  40c6d7:	add    BYTE PTR [rax],al
  40c6d9:	add    BYTE PTR [rax],al
  40c6db:	add    BYTE PTR [rax+0x4],al
	...
  40c6f6:	add    BYTE PTR [rax],al
  40c6f8:	imul   edi,DWORD PTR [rbx+0x7b],0xffffffff
  40c6fc:	fs jne 40c775 <libintl_8_dll_iname+0x29d5>
  40c6ff:	call   FWORD PTR [rbp+0x6f]
  40c702:	jno    40c703 <libintl_8_dll_iname+0x2963>
  40c704:	push   rdi
  40c705:	imul   ebp,DWORD PTR [rdi+rdi*8+0x50],0xff6763
  40c70d:	add    BYTE PTR [rax],al
  40c70f:	add    BYTE PTR [rax],al
  40c711:	add    BYTE PTR [rax],al
  40c713:	add    BYTE PTR [rdx+rdx*2],bh
  40c716:	pop    rax
  40c717:	push   QWORD PTR [rsi]
  40c719:	rex.WRB push r11
  40c71b:	jmp    FWORD PTR [rdi]
  40c71d:	rex.RXB
  40c71e:	rex.WRX jmp FWORD PTR [rcx]
  40c721:	rex.X
  40c722:	rex.WX inc QWORD PTR [rax]
	...
  40c735:	add    BYTE PTR [rax],al
  40c737:	add    BYTE PTR [rcx-0x7f],dh
  40c73a:	cmp    edi,0xffdedede
  40c740:	(bad)  
  40c741:	(bad)  
  40c743:	call   rsi
  40c745:	(bad)  
  40c747:	jmp    FWORD PTR [rcx]
  40c749:	rex.X
  40c74a:	rex.WX inc QWORD PTR [rax]
  40c74d:	add    BYTE PTR [rax],al
  40c74f:	add    BYTE PTR [rax],al
  40c751:	add    BYTE PTR [rax],al
  40c753:	add    BYTE PTR [rcx-0x7f],dh
  40c756:	cmp    edi,0xffcec6c6
  40c75c:	mov    dh,0xce
  40c75f:	jmp    FWORD PTR [rsp+rax*2]
  40c762:	rex.WR inc QWORD PTR [rax]
	...
  40c775:	add    BYTE PTR [rax],al
  40c777:	add    BYTE PTR [rax-0x79],bh
  40c77a:	xchg   edi,edi
  40c77c:	out    dx,al
  40c77d:	out    dx,al
  40c77e:	out    dx,al
  40c77f:	(bad)  
  40c780:	(bad)  
  40c781:	out    dx,al
  40c782:	out    dx,al
  40c783:	(bad)  
  40c784:	fsubrp st(4),st
  40c786:	in     al,0xff
  40c788:	sub    al,0x44
  40c78a:	rex.WR inc QWORD PTR [rax]
  40c78d:	add    BYTE PTR [rax],al
  40c78f:	add    BYTE PTR [rax],al
  40c791:	add    BYTE PTR [rax],al
  40c793:	add    BYTE PTR [rax-0x79],bh
  40c796:	xchg   edi,edi
  40c798:	enter  0xd0c9,0xff
  40c79c:	leave  
  40c79d:	retf   0xffd1
  40c7a0:	(bad)  
  40c7a1:	rex.RXB
  40c7a2:	rex.WRXB inc QWORD PTR [r8]
	...
  40c7b5:	add    BYTE PTR [rax],al
  40c7b7:	add    BYTE PTR [rdx-0x78],bh
  40c7ba:	mov    bh,bh
  40c7bc:	mov    ch,0xc5
  40c7bf:	jmp    FWORD PTR [rsi-0x68005150]
  40c7c5:	xchg   edi,eax
  40c7c6:	xchg   esi,eax
  40c7c7:	call   QWORD PTR [rbx+0x3dff9494]
  40c7cd:	rex.WX
  40c7ce:	rex.WXB push QWORD PTR [rip+0xffffffffc5ff4c47]        # ffffffffc640141c <libintl_8_dll_iname+0xffffffffc5ff767c>
  40c7d5:	int    0xcd
  40c7d7:	dec    esp
  40c7d9:	(bad)  
  40c7da:	(bad)  
  40c7db:	dec    esp
  40c7dd:	(bad)  
  40c7de:	(bad)  
  40c7df:	push   QWORD PTR [rbx]
  40c7e1:	rex.WX push rdx
  40c7e3:	inc    DWORD PTR [rax]
	...
  40c7f1:	add    BYTE PTR [rax],al
  40c7f3:	add    BYTE PTR [rbx*1+0x554f261c],bl
  40c7fa:	push   rsp
  40c7fb:	call   QWORD PTR [rdi+0x5d]
  40c7fe:	pop    rdi
  40c7ff:	call   QWORD PTR [rbp+rbx*2+0x61]
  40c803:	call   FWORD PTR [rcx+0x63]
  40c806:	push   0x67635aff
  40c80b:	dec    DWORD PTR [rsi+0x54]
  40c80e:	push   rsi
  40c80f:	dec    DWORD PTR [rbx+0x4f]
  40c812:	rex.WRXB dec QWORD PTR [r11-0x30007172]
  40c819:	rcl    bh,cl
  40c81b:	dec    edi
  40c81d:	rcl    bh,cl
  40c81f:	push   QWORD PTR [rsi]
  40c821:	rex.WR push rsp
  40c823:	inc    DWORD PTR [rax]
	...
  40c82d:	add    BYTE PTR [rax],al
  40c82f:	add    BYTE PTR [rip+0x2a461516],dl        # 2a86dd4b <libintl_8_dll_iname+0x2a463fab>
  40c835:	sub    al,0x2b
  40c837:	loopne 40c88a <libintl_8_dll_iname+0x2aea>
  40c839:	pop    rbx
  40c83a:	pop    rsi
  40c83b:	call   FWORD PTR [rsi+0x6c]
  40c83e:	jb     40c83f <libintl_8_dll_iname+0x2a9f>
  40c840:	rex.WRXB pop r14
  40c842:	fs (bad) 
  40c844:	(bad)  
  40c845:	rex.WRX push rbp
  40c847:	push   QWORD PTR [rcx+rax*2]
  40c84a:	rex.W push QWORD PTR [rdx+rax*2]
  40c84e:	rex.WB call QWORD PTR [r13+0x60]
  40c852:	inc    DWORD PTR gs:[rdx+0x46]
  40c856:	rex.RXB call FWORD PTR [r8-0x2d006367]
  40c85d:	(bad)  
  40c85e:	(bad)  
  40c860:	cmp    DWORD PTR [rdi+0x57],ecx
  40c863:	jmp    FWORD PTR [rdi]
  40c865:	rex.RXB
  40c866:	rex.WRX jmp FWORD PTR [rcx]
  40c869:	rex.X
  40c86a:	rex.WX inc QWORD PTR [rax]
  40c86d:	add    BYTE PTR [rax],al
  40c86f:	add    BYTE PTR [rax],al
  40c871:	add    BYTE PTR [rax],al
  40c873:	jmp    40c88d <libintl_8_dll_iname+0x2aed>
  40c875:	(bad)  
  40c876:	ud0    esi,DWORD PTR [rcx]
  40c879:	rex
  40c87a:	rex.RX inc DWORD PTR [rcx+0x5a]
  40c87e:	fs (bad) 
  40c880:	cmp    cl,BYTE PTR [rsp+rdx*2-0x1]
  40c884:	rex.XB
  40c885:	rex.WRXB push r12
  40c887:	inc    DWORD PTR [rsi+0x53]
  40c88a:	pop    rax
  40c88b:	inc    DWORD PTR [rbx+0x51]
  40c88e:	push   rsi
  40c88f:	inc    DWORD PTR [rbx+0x50]
  40c892:	push   rsi
  40c893:	call   QWORD PTR [rcx+0x57]
  40c896:	pop    rcx
  40c897:	call   QWORD PTR [rax+0x50]
  40c89a:	rex.WRX call rsi
  40c89d:	fcmovu st,st(6)
  40c89f:	call   rsi
  40c8a1:	(bad)  
  40c8a3:	call   rsi
  40c8a5:	(bad)  
  40c8a7:	call   rsi
  40c8a9:	(bad)  
  40c8ab:	jmp    FWORD PTR [rcx]
  40c8ad:	rex.X
  40c8ae:	rex.WX jmp FWORD PTR [rdx+0x58ffa8aa]
  40c8b5:	pop    rax
  40c8b6:	push   rbp
  40c8b7:	jmp    FWORD PTR [rbp+0x72]
  40c8ba:	je     40c8bb <libintl_8_dll_iname+0x2b1b>
  40c8bc:	mov    bl,0xb9
  40c8be:	mov    edx,0xa3a299ff
  40c8c3:	jmp    FWORD PTR [rbx-0x3d004e4f]
  40c8c9:	(bad)  
  40c8ca:	(bad)  
  40c8cb:	(bad)  
  40c8cc:	mov    ecx,0x65ffbcbb
  40c8d1:	outs   dx,BYTE PTR ds:[rsi]
  40c8d2:	jb     40c8d3 <libintl_8_dll_iname+0x2b33>
  40c8d4:	push   rdi
  40c8d5:	(bad)  
  40c8d6:	inc    WORD PTR [rcx+0x45]
  40c8da:	rex.RB (bad) 
  40c8dc:	(bad)  
  40c8de:	loope  40c8df <libintl_8_dll_iname+0x2b3f>
  40c8e0:	(bad)  
  40c8e1:	(bad)  
  40c8e3:	call   rsi
  40c8e5:	(bad)  
  40c8e7:	call   rsi
  40c8e9:	(bad)  
  40c8eb:	call   QWORD PTR [rdx+0x63]
  40c8ee:	imul   edi,edi,0xffffffc3
  40c8f1:	ret    
  40c8f2:	sar    edi,0x70
  40c8f5:	jo     40c965 <libintl_8_dll_iname+0x2bc5>
  40c8f7:	(bad)  
  40c8f8:	fcomp  st(0)
  40c8fa:	fdivr  st,st(7)
  40c8fc:	movsxd esp,DWORD PTR fs:[rdx-0x1]
  40c900:	lods   al,BYTE PTR ds:[rsi]
  40c901:	mov    al,0xb1
  40c903:	push   rsi
  40c905:	div    dh
  40c907:	jmp    FWORD PTR [rdi+0x3bffaeae]
  40c90d:	cmp    bh,BYTE PTR [rdx]
  40c90f:	(bad)  
  40c910:	mov    esi,0x62ffc3c2
  40c915:	outs   dx,BYTE PTR ds:[rsi]
  40c916:	jae    40c917 <libintl_8_dll_iname+0x2b77>
  40c918:	ds rex.R
  40c91a:	rex.RXB (bad) 
  40c91c:	fsubr  st(2),st
  40c91e:	in     al,0xff
  40c920:	rex.R push rdi
  40c922:	pop    rdi
  40c923:	call   FWORD PTR [rsp+rbp*2+0x74]
  40c927:	call   QWORD PTR [rdx+0x63]
  40c92a:	imul   edi,edi,0x0
  40c92d:	add    BYTE PTR [rax],al
  40c92f:	add    BYTE PTR [rax],al
  40c931:	add    BYTE PTR [rax],al
  40c933:	data16 gs addr32 addr32 (bad) 
  40c938:	jmp    40c926 <libintl_8_dll_iname+0x2b86>
  40c93a:	in     al,dx
  40c93b:	(bad)  
  40c93c:	fcmovnu st,st(3)
  40c93e:	(bad)  
  40c940:	mov    eax,0xf6ffbcbb
  40c945:	div    dh
  40c947:	(bad)  
  40c948:	out    dx,eax
  40c949:	out    dx,eax
  40c94a:	out    dx,eax
  40c94b:	call   rdx
  40c94d:	rcl    dl,cl
  40c94f:	(bad)  
  40c950:	mov    ebp,0x64ffc2c1
  40c955:	jo     40c9cb <libintl_8_dll_iname+0x2c2b>
  40c957:	(bad)  
  40c958:	cmp    eax,DWORD PTR [rax+0x43]
  40c95b:	jmp    rax
  40c95d:	out    0xe8,al
  40c95f:	inc    DWORD PTR [rdi+0x5a]
  40c962:	(bad)  
  40c963:	inc    DWORD PTR [rax]
	...
  40c971:	add    BYTE PTR [rax],al
  40c973:	add    BYTE PTR [rbx+0x69],ah
  40c976:	imul   ebp,DWORD PTR [rax-0x5c5c60],0xffffffcd
  40c97d:	(bad)  
  40c97e:	(bad)  
  40c97f:	jmp    QWORD PTR [rax+rbp*4-0x3d400059]
  40c986:	sar    edi,0xff
  40c989:	(bad)  
  40c98a:	(bad)  
  40c98b:	jmp    rbx
  40c98d:	in     eax,0xe6
  40c98f:	dec    DWORD PTR [rbp+0x6aff9695]
  40c995:	je     40ca0f <libintl_8_dll_iname+0x2c6f>
  40c997:	(bad)  
  40c998:	cmp    al,BYTE PTR [rax+0x42]
  40c99b:	jmp    rbx
  40c99d:	(bad)  
  40c99e:	jmp    40c99f <libintl_8_dll_iname+0x2bff>
  40c9a0:	rex.WXB pop r13
  40c9a2:	inc    DWORD PTR gs:[rax]
	...
  40c9b1:	add    BYTE PTR [rax],al
  40c9b3:	add    BYTE PTR [rdi],ah
  40c9b5:	sub    BYTE PTR [rax],ch
  40c9b7:	test   eax,0xff676866
  40c9bc:	xchg   edx,eax
  40c9bd:	xchg   esp,eax
  40c9be:	xchg   esp,eax
  40c9bf:	jmp    QWORD PTR [rdx-0x5f005d5d]
  40c9c5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40c9c6:	movabs ds:0x91928cff949593ff,al
  40c9cf:	jmp    QWORD PTR [rbx+0x65]
  40c9d2:	call   QWORD PTR fs:[rbp+0x5a]
  40c9d6:	pop    rbx
  40c9d7:	dec    DWORD PTR [rcx+rdx*2+0x52]
  40c9db:	jmp    rdi
  40c9dd:	out    dx,eax
  40c9de:	out    dx,eax
  40c9df:	dec    DWORD PTR [rsi+0x60]
  40c9e2:	push   0xff
	...
  40c9f3:	add    BYTE PTR [rip+0xffffffff95832526],ah        # ffffffff95c3ef1f <libintl_8_dll_iname+0xffffffff9583517f>
  40c9f9:	pushf  
  40c9fa:	pushf  
  40c9fb:	push   QWORD PTR [rdx-0x58004344]
  40ca01:	mov    dl,0xb3
  40ca03:	call   FWORD PTR [rax+rbp*4-0x616e0056]
  40ca0a:	movabs eax,ds:0xf4f4f4fff7f7f7ff
  40ca13:	inc    DWORD PTR [rsi+0x4b]
  40ca16:	rex.WXB (bad) 
  40ca18:	cmp    BYTE PTR [rcx],bh
  40ca1a:	(bad)  
  40ca1b:	call   FWORD PTR [rsp+rbp*2+0x74]
  40ca1f:	call   QWORD PTR [rdx+0x63]
  40ca22:	imul   edi,edi,0x0
	...
  40ca31:	add    BYTE PTR [rax],al
  40ca33:	add    BYTE PTR [rsi],cl
  40ca35:	femms  
  40ca37:	(bad)  
	...
  40ca48:	jno    40c9ca <libintl_8_dll_iname+0x2c2a>
  40ca4a:	xchg   bh,bh
  40ca4c:	div    dh
  40ca4e:	idiv   bh
  40ca50:	div    edi
  40ca52:	idiv   edi
  40ca54:	rex.WRB pop r13
  40ca56:	jmp    QWORD PTR fs:[rip+0xb62526]        # f6ef83 <libintl_8_dll_iname+0xb651e3>
	...
  40ca85:	add    BYTE PTR [rax],al
  40ca87:	add    BYTE PTR [rcx-0x80],dh
  40ca8a:	xchg   bh,bh
  40ca8c:	(bad)  
  40ca8d:	(bad)  
  40ca8e:	(bad)  
  40ca8f:	(bad)  
  40ca90:	(bad)  
  40ca91:	(bad)  
  40ca92:	(bad)  
  40ca93:	call   QWORD PTR [rdx+0x63]
  40ca96:	imul   edi,edi,0x0
	...
  40cac9:	add    BYTE PTR [rax],al
  40cacb:	add    BYTE PTR [rdi+0x76],ah
  40cace:	jge    40cacf <libintl_8_dll_iname+0x2d2f>
  40cad0:	addr32 jbe 40cb50 <libintl_8_dll_iname+0x2db0>
  40cad3:	inc    DWORD PTR [rax]
	...
  40caed:	add    BYTE PTR [rax],al
  40caef:	add    cl,al
  40caf1:	xchg   edi,edi
  40caf3:	inc    ecx
  40caf5:	xchg   edi,edi
  40caf7:	inc    ecx
  40caf9:	xchg   edi,edi
  40cafb:	inc    eax
  40cafd:	(bad)  
  40cafe:	(bad)  
  40caff:	inc    DWORD PTR [rax+0xffff07]
  40cb05:	add    edi,edi
  40cb07:	inc    DWORD PTR [rax]
  40cb09:	add    bh,bh
  40cb0b:	inc    DWORD PTR [rax]
  40cb0d:	add    bh,bh
  40cb0f:	inc    DWORD PTR [rax]
  40cb11:	add    edi,edi
  40cb13:	inc    DWORD PTR [rax]
  40cb15:	(bad)  
  40cb16:	(bad)  
  40cb17:	inc    DWORD PTR [rax-0x7f0000f9]
  40cb1d:	(bad)  
  40cb1e:	(bad)  
  40cb1f:	inc    DWORD PTR [rax-0x430000f9]
  40cb25:	(bad)  
  40cb26:	(bad)  
  40cb27:	(bad)  
  40cb28:	cld    
  40cb29:	(bad)  
  40cb2a:	(bad)  
  40cb2b:	(bad)  
  40cb2c:	(bad)  
  40cb2d:	jg     40cb2e <libintl_8_dll_iname+0x2d8e>
  40cb2f:	inc    DWORD PTR [rax]
  40cb31:	add    BYTE PTR [rcx],al
  40cb33:	add    BYTE PTR [rdx],al
  40cb35:	add    BYTE PTR [rax],dl
  40cb37:	adc    BYTE PTR [rax],al
  40cb39:	add    BYTE PTR [rcx],al
  40cb3b:	add    BYTE PTR [rax],cl
  40cb3d:	add    BYTE PTR [rax+0x5],ch
  40cb40:	add    BYTE PTR [rax],al
  40cb42:	add    DWORD PTR [rax],eax
  40cb44:	adc    BYTE PTR [rax],dl
  40cb46:	add    BYTE PTR [rax],al
  40cb48:	add    DWORD PTR [rax],eax
  40cb4a:	and    BYTE PTR [rax],al
  40cb4c:	push   0x2000004
  40cb51:	add    BYTE PTR [rax],al
  40cb53:	add    BYTE PTR [rax],al
  40cb55:	add    BYTE PTR [rax],al
  40cb57:	add    BYTE PTR [rbx+rax*1+0x34],cl
  40cb5e:	push   rsi
  40cb5f:	add    BYTE PTR [rbx+0x0],dl
  40cb62:	pop    rdi
  40cb63:	add    BYTE PTR [rsi+0x0],dl
  40cb66:	add    BYTE PTR [r10+0x0],r10b
  40cb6a:	push   rbx
  40cb6b:	add    BYTE PTR [rcx+0x0],cl
  40cb6e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
  40cb72:	pop    rdi
  40cb73:	add    BYTE PTR [rcx+0x0],cl
  40cb76:	rex.WRX add BYTE PTR [rsi+0x0],r8b
  40cb7a:	rex.WRXB add BYTE PTR [r8],r8b
  40cb7d:	add    BYTE PTR [rax],al
  40cb7f:	add    BYTE PTR [rbp+0xfeef04],bh
  40cb85:	add    BYTE PTR [rcx],al
  40cb87:	add    BYTE PTR [rax],cl
  40cb89:	add    BYTE PTR [rdx],al
  40cb8b:	add    BYTE PTR [rax],al
  40cb8d:	add    BYTE PTR [rsi],dl
  40cb8f:	add    BYTE PTR [rax],cl
  40cb91:	add    BYTE PTR [rdx],al
  40cb93:	add    BYTE PTR [rax],al
  40cb95:	add    BYTE PTR [rsi],dl
  40cb97:	add    BYTE PTR [rdi],bh
  40cb99:	add    BYTE PTR [rax],al
  40cb9b:	add    BYTE PTR [rax],al
  40cb9d:	add    BYTE PTR [rax],al
  40cb9f:	add    BYTE PTR [rax+rax*1],al
  40cba2:	add    BYTE PTR [rax],al
  40cba4:	add    DWORD PTR [rax],eax
	...
  40cbb2:	add    BYTE PTR [rax],al
  40cbb4:	in     al,dx
  40cbb5:	add    al,BYTE PTR [rax]
  40cbb7:	add    BYTE PTR [rcx],al
  40cbb9:	add    BYTE PTR [rbx+0x0],dl
  40cbbc:	je     40cbbe <libintl_8_dll_iname+0x2e1e>
  40cbbe:	jb     40cbc0 <libintl_8_dll_iname+0x2e20>
  40cbc0:	imul   eax,DWORD PTR [rax],0x67006e
  40cbc6:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40cbca:	ins    BYTE PTR es:[rdi],dx
  40cbcb:	add    BYTE PTR [rbp+0x0],ah
  40cbce:	rex.WB add BYTE PTR [r14+0x0],bpl
  40cbd2:	data16 add BYTE PTR [rdi+0x0],ch
  40cbd6:	add    BYTE PTR [rax],al
  40cbd8:	enter  0x2,0x0
  40cbdc:	add    DWORD PTR [rax],eax
  40cbde:	xor    BYTE PTR [rax],al
  40cbe0:	xor    al,0x0
  40cbe2:	xor    BYTE PTR [rax],al
  40cbe4:	cmp    DWORD PTR [rax],eax
  40cbe6:	xor    BYTE PTR [rax],al
  40cbe8:	xor    al,0x0
  40cbea:	rex.X add BYTE PTR [rax],sil
  40cbed:	add    BYTE PTR [rax],al
  40cbef:	add    BYTE PTR [rax+0x1003c00],bl
  40cbf5:	add    BYTE PTR [rbx+0x0],al
  40cbf8:	outs   dx,DWORD PTR ds:[rsi]
  40cbf9:	add    BYTE PTR [rbp+0x0],ch
  40cbfc:	jo     40cbfe <libintl_8_dll_iname+0x2e5e>
  40cbfe:	(bad)  
  40cbff:	add    BYTE PTR [rsi+0x0],ch
  40cc02:	jns    40cc04 <libintl_8_dll_iname+0x2e64>
  40cc04:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  40cc08:	ins    DWORD PTR es:[rdi],dx
  40cc09:	add    BYTE PTR [rbp+0x0],ah
  40cc0c:	add    BYTE PTR [rax],al
  40cc0e:	add    BYTE PTR [rax],al
  40cc10:	push   rbx
  40cc11:	add    BYTE PTR [rax+0x0],dh
  40cc14:	add    BYTE PTR gs:[rsi+0x0],ch
  40cc18:	movsxd eax,DWORD PTR [rax]
  40cc1a:	add    BYTE PTR gs:[rdx+0x0],dh
  40cc1e:	and    BYTE PTR [rax],al
  40cc20:	rex.WXB add BYTE PTR [r9+0x0],bpl
  40cc24:	ins    DWORD PTR es:[rdi],dx
  40cc25:	add    BYTE PTR [rdx+0x0],ah
  40cc28:	(bad)  
  40cc29:	add    BYTE PTR [rax+rax*1+0x6c],ch
  40cc2d:	add    BYTE PTR [rax+rax*1],ch
  40cc30:	and    BYTE PTR [rax],al
  40cc32:	push   rax
  40cc33:	add    BYTE PTR [rbp+0x0],ah
  40cc36:	je     40cc38 <libintl_8_dll_iname+0x2e98>
  40cc38:	add    BYTE PTR gs:[rdx+0x0],dh
  40cc3c:	and    BYTE PTR [rax],al
  40cc3e:	rex.WRB add BYTE PTR [r9+0x0],r12b
  40cc42:	je     40cc44 <libintl_8_dll_iname+0x2ea4>
  40cc44:	je     40cc46 <libintl_8_dll_iname+0x2ea6>
  40cc46:	imul   eax,DWORD PTR [rax],0x200073
  40cc4c:	(bad)  
  40cc4d:	add    BYTE PTR [rsi+0x0],ch
  40cc50:	add    BYTE PTR fs:[rax],ah
  40cc53:	add    BYTE PTR [rax+rax*1+0x68],dh
  40cc57:	add    BYTE PTR [rbp+0x0],ah
  40cc5a:	and    BYTE PTR [rax],al
  40cc5c:	rex.RXB add BYTE PTR [r9+0x0],r9b
  40cc60:	rex.WRB add BYTE PTR [r8+0x0],r10b
  40cc64:	and    BYTE PTR [rax],al
  40cc66:	add    BYTE PTR [rbp+0x0],r12b
  40cc6a:	jbe    40cc6c <libintl_8_dll_iname+0x2ecc>
  40cc6c:	add    BYTE PTR gs:[rax+rax*1+0x6f],ch
  40cc71:	add    BYTE PTR [rax+0x0],dh
  40cc74:	ins    DWORD PTR es:[rdi],dx
  40cc75:	add    BYTE PTR [rbp+0x0],ah
  40cc78:	outs   dx,BYTE PTR ds:[rsi]
  40cc79:	add    BYTE PTR [rax+rax*1+0x20],dh
  40cc7d:	add    BYTE PTR [rax+rax*1+0x65],dl
  40cc81:	add    BYTE PTR [rcx+0x0],ah
  40cc84:	ins    DWORD PTR es:[rdi],dx
  40cc85:	add    BYTE PTR [rax],al
  40cc87:	add    BYTE PTR [rsi+0x0],dh
  40cc8a:	(bad)  
  40cc8b:	add    BYTE PTR [rcx],al
  40cc8d:	add    BYTE PTR [rsi+0x0],al
  40cc90:	imul   eax,DWORD PTR [rax],0x65006c
  40cc96:	add    BYTE PTR [rbp+0x0],r12b
  40cc9a:	jae    40cc9c <libintl_8_dll_iname+0x2efc>
  40cc9c:	movsxd eax,DWORD PTR [rax]
  40cc9e:	jb     40cca0 <libintl_8_dll_iname+0x2f00>
  40cca0:	imul   eax,DWORD PTR [rax],0x740070
  40cca6:	imul   eax,DWORD PTR [rax],0x6e006f
  40ccac:	add    BYTE PTR [rax],al
  40ccae:	add    BYTE PTR [rax],al
  40ccb0:	rex.RXB add BYTE PTR [r14+0x0],r9b
  40ccb4:	push   rbp
  40ccb5:	add    BYTE PTR [rax],ah
  40ccb7:	add    BYTE PTR [rcx+0x0],cl
  40ccba:	ins    DWORD PTR es:[rdi],dx
  40ccbb:	add    BYTE PTR [rcx+0x0],ah
  40ccbe:	add    BYTE PTR [ebp+0x0],ah
  40ccc2:	and    BYTE PTR [rax],al
  40ccc4:	rex.WRB add BYTE PTR [r9+0x0],r12b
  40ccc8:	outs   dx,BYTE PTR ds:[rsi]
  40ccc9:	add    BYTE PTR [rcx+0x0],ch
  40cccc:	jo     40ccce <libintl_8_dll_iname+0x2f2e>
  40ccce:	jne    40ccd0 <libintl_8_dll_iname+0x2f30>
  40ccd0:	ins    BYTE PTR es:[rdi],dx
  40ccd1:	add    BYTE PTR [rcx+0x0],ah
  40ccd4:	je     40ccd6 <libintl_8_dll_iname+0x2f36>
  40ccd6:	imul   eax,DWORD PTR [rax],0x6e006f
  40ccdc:	and    BYTE PTR [rax],al
  40ccde:	push   rax
  40ccdf:	add    BYTE PTR [rdx+0x0],dh
  40cce2:	outs   dx,DWORD PTR ds:[rsi]
  40cce3:	add    BYTE PTR [rdi+0x0],ah
  40cce6:	jb     40cce8 <libintl_8_dll_iname+0x2f48>
  40cce8:	(bad)  
  40cce9:	add    BYTE PTR [rbp+0x0],ch
  40ccec:	and    BYTE PTR [rax],al
  40ccee:	push   rax
  40ccef:	add    BYTE PTR [rax+rax*1+0x75],ch
  40ccf3:	add    BYTE PTR [rdi+0x0],ah
  40ccf6:	sub    eax,0x6e004900
  40ccfb:	add    BYTE PTR [rax],al
  40ccfd:	add    BYTE PTR [rax],al
  40ccff:	add    BYTE PTR [rdx],dh
  40cd01:	add    BYTE PTR [rcx],cl
  40cd03:	add    BYTE PTR [rcx],al
  40cd05:	add    BYTE PTR [rsi+0x0],al
  40cd08:	imul   eax,DWORD PTR [rax],0x65006c
  40cd0e:	push   rsi
  40cd0f:	add    BYTE PTR [rbp+0x0],ah
  40cd12:	jb     40cd14 <libintl_8_dll_iname+0x2f74>
  40cd14:	jae    40cd16 <libintl_8_dll_iname+0x2f76>
  40cd16:	imul   eax,DWORD PTR [rax],0x6e006f
  40cd1c:	add    BYTE PTR [rax],al
  40cd1e:	add    BYTE PTR [rax],al
  40cd20:	xor    al,BYTE PTR [rax]
  40cd22:	add    BYTE PTR cs:[rax],bh
  40cd25:	add    BYTE PTR [rsi],ch
  40cd27:	add    BYTE PTR [rdx],dh
  40cd29:	add    BYTE PTR [rdx],dh
  40cd2b:	add    BYTE PTR [rsi],ch
  40cd2d:	add    BYTE PTR [rax],dh
  40cd2f:	add    BYTE PTR [rax],al
  40cd31:	add    BYTE PTR [rax],al
  40cd33:	add    BYTE PTR [rax+rax*1],bh
  40cd36:	(bad)  
  40cd37:	add    BYTE PTR [rcx],al
  40cd39:	add    BYTE PTR [rcx+0x0],cl
  40cd3c:	outs   dx,BYTE PTR ds:[rsi]
  40cd3d:	add    BYTE PTR [rax+rax*1+0x65],dh
  40cd41:	add    BYTE PTR [rdx+0x0],dh
  40cd44:	outs   dx,BYTE PTR ds:[rsi]
  40cd45:	add    BYTE PTR [rcx+0x0],ah
  40cd48:	ins    BYTE PTR es:[rdi],dx
  40cd49:	add    BYTE PTR [rsi+0x0],cl
  40cd4c:	(bad)  
  40cd4d:	add    BYTE PTR [rbp+0x0],ch
  40cd50:	add    BYTE PTR gs:[rax],al
  40cd53:	add    BYTE PTR [rbx+0x0],ah
  40cd56:	outs   dx,DWORD PTR ds:[rsi]
  40cd57:	add    BYTE PTR [rax+rax*1+0x6f],ch
  40cd5b:	add    BYTE PTR [rdx+0x0],dh
  40cd5e:	sub    eax,0x6e006500
  40cd63:	add    BYTE PTR [rax+0x0],ch
  40cd66:	(bad)  
  40cd67:	add    BYTE PTR [rsi+0x0],ch
  40cd6a:	movsxd eax,DWORD PTR [rax]
  40cd6c:	add    BYTE PTR gs:[rax],al
  40cd6f:	add    BYTE PTR [rax+rax*1+0x12],cl
  40cd73:	add    BYTE PTR [rcx],al
  40cd75:	add    BYTE PTR [rdi+0x0],cl
  40cd78:	jb     40cd7a <libintl_8_dll_iname+0x2fda>
  40cd7a:	imul   eax,DWORD PTR [rax],0x690067
  40cd80:	outs   dx,BYTE PTR ds:[rsi]
  40cd81:	add    BYTE PTR [rcx+0x0],ah
  40cd84:	ins    BYTE PTR es:[rdi],dx
  40cd85:	add    BYTE PTR [rsi+0x0],al
  40cd88:	imul   eax,DWORD PTR [rax],0x65006c
  40cd8e:	outs   dx,BYTE PTR ds:[rsi]
  40cd8f:	add    BYTE PTR [rcx+0x0],ah
  40cd92:	ins    DWORD PTR es:[rdi],dx
  40cd93:	add    BYTE PTR [rbp+0x0],ah
  40cd96:	add    BYTE PTR [rax],al
  40cd98:	movsxd eax,DWORD PTR [rax]
  40cd9a:	outs   dx,DWORD PTR ds:[rsi]
  40cd9b:	add    BYTE PTR [rax+rax*1+0x6f],ch
  40cd9f:	add    BYTE PTR [rdx+0x0],dh
  40cda2:	sub    eax,0x6e006500
  40cda7:	add    BYTE PTR [rax+0x0],ch
  40cdaa:	(bad)  
  40cdab:	add    BYTE PTR [rsi+0x0],ch
  40cdae:	movsxd eax,DWORD PTR [rax]
  40cdb0:	add    BYTE PTR gs:[rsi],ch
  40cdb3:	add    BYTE PTR [rbp+0x0],ah
  40cdb6:	js     40cdb8 <libintl_8_dll_iname+0x3018>
  40cdb8:	add    BYTE PTR gs:[rax],al
  40cdbb:	add    BYTE PTR [rsi+0x0],bl
  40cdbe:	(bad)  
  40cdbf:	add    BYTE PTR [rcx],al
  40cdc1:	add    BYTE PTR [rax+0x0],dl
  40cdc4:	jb     40cdc6 <libintl_8_dll_iname+0x3026>
  40cdc6:	outs   dx,DWORD PTR ds:[rsi]
  40cdc7:	add    BYTE PTR [rax+rax*1+0x75],ah
  40cdcb:	add    BYTE PTR [rbx+0x0],ah
  40cdce:	je     40cdd0 <libintl_8_dll_iname+0x3030>
  40cdd0:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  40cdd4:	ins    DWORD PTR es:[rdi],dx
  40cdd5:	add    BYTE PTR [rbp+0x0],ah
  40cdd8:	add    BYTE PTR [rax],al
  40cdda:	add    BYTE PTR [rax],al
  40cddc:	rex.RXB add BYTE PTR [r14+0x0],r9b
  40cde0:	push   rbp
  40cde1:	add    BYTE PTR [rax],ah
  40cde3:	add    BYTE PTR [rcx+0x0],cl
  40cde6:	ins    DWORD PTR es:[rdi],dx
  40cde7:	add    BYTE PTR [rcx+0x0],ah
  40cdea:	add    BYTE PTR [ebp+0x0],ah
  40cdee:	and    BYTE PTR [rax],al
  40cdf0:	rex.WRB add BYTE PTR [r9+0x0],r12b
  40cdf4:	outs   dx,BYTE PTR ds:[rsi]
  40cdf5:	add    BYTE PTR [rcx+0x0],ch
  40cdf8:	jo     40cdfa <libintl_8_dll_iname+0x305a>
  40cdfa:	jne    40cdfc <libintl_8_dll_iname+0x305c>
  40cdfc:	ins    BYTE PTR es:[rdi],dx
  40cdfd:	add    BYTE PTR [rcx+0x0],ah
  40ce00:	je     40ce02 <libintl_8_dll_iname+0x3062>
  40ce02:	imul   eax,DWORD PTR [rax],0x6e006f
  40ce08:	and    BYTE PTR [rax],al
  40ce0a:	push   rax
  40ce0b:	add    BYTE PTR [rdx+0x0],dh
  40ce0e:	outs   dx,DWORD PTR ds:[rsi]
  40ce0f:	add    BYTE PTR [rdi+0x0],ah
  40ce12:	jb     40ce14 <libintl_8_dll_iname+0x3074>
  40ce14:	(bad)  
  40ce15:	add    BYTE PTR [rbp+0x0],ch
  40ce18:	add    BYTE PTR [rax],al
  40ce1a:	add    BYTE PTR [rax],al
  40ce1c:	xor    al,BYTE PTR [rax]
  40ce1e:	(bad)  
  40ce1f:	add    BYTE PTR [rcx],al
  40ce21:	add    BYTE PTR [rax+0x0],dl
  40ce24:	jb     40ce26 <libintl_8_dll_iname+0x3086>
  40ce26:	outs   dx,DWORD PTR ds:[rsi]
  40ce27:	add    BYTE PTR [rax+rax*1+0x75],ah
  40ce2b:	add    BYTE PTR [rbx+0x0],ah
  40ce2e:	je     40ce30 <libintl_8_dll_iname+0x3090>
  40ce30:	push   rsi
  40ce31:	add    BYTE PTR [rbp+0x0],ah
  40ce34:	jb     40ce36 <libintl_8_dll_iname+0x3096>
  40ce36:	jae    40ce38 <libintl_8_dll_iname+0x3098>
  40ce38:	imul   eax,DWORD PTR [rax],0x6e006f
  40ce3e:	add    BYTE PTR [rax],al
  40ce40:	xor    al,BYTE PTR [rax]
  40ce42:	add    BYTE PTR cs:[rax],bh
  40ce45:	add    BYTE PTR [rsi],ch
  40ce47:	add    BYTE PTR [rdx],dh
  40ce49:	add    BYTE PTR [rdx],dh
  40ce4b:	add    BYTE PTR [rax],al
  40ce4d:	add    BYTE PTR [rax],al
  40ce4f:	add    BYTE PTR [rax+0x0],dl
  40ce52:	(bad)  
  40ce53:	add    BYTE PTR [rcx],al
  40ce55:	add    BYTE PTR [rax+rax*1+0x65],cl
  40ce59:	add    BYTE PTR [rdi+0x0],ah
  40ce5c:	(bad)  
  40ce5d:	add    BYTE PTR [rax+rax*1+0x43],ch
  40ce61:	add    BYTE PTR [rdi+0x0],ch
  40ce64:	jo     40ce66 <libintl_8_dll_iname+0x30c6>
  40ce66:	jns    40ce68 <libintl_8_dll_iname+0x30c8>
  40ce68:	jb     40ce6a <libintl_8_dll_iname+0x30ca>
  40ce6a:	imul   eax,DWORD PTR [rax],0x680067
  40ce70:	je     40ce72 <libintl_8_dll_iname+0x30d2>
  40ce72:	add    BYTE PTR [rax],al
  40ce74:	rex.XB add BYTE PTR [r15+0x0],bpl
  40ce78:	jo     40ce7a <libintl_8_dll_iname+0x30da>
  40ce7a:	jns    40ce7c <libintl_8_dll_iname+0x30dc>
  40ce7c:	jb     40ce7e <libintl_8_dll_iname+0x30de>
  40ce7e:	imul   eax,DWORD PTR [rax],0x680067
  40ce84:	je     40ce86 <libintl_8_dll_iname+0x30e6>
  40ce86:	and    BYTE PTR [rax],al
  40ce88:	test   eax,0x31002000
  40ce8d:	add    BYTE PTR [rcx],bh
  40ce8f:	add    BYTE PTR [rcx],bh
  40ce91:	add    BYTE PTR [rip+0x32002d00],dh        # 3240fb97 <libintl_8_dll_iname+0x32005df7>
  40ce97:	add    BYTE PTR [rax],dh
  40ce99:	add    BYTE PTR [rcx],dh
  40ce9b:	add    BYTE PTR [rdi],dh
  40ce9d:	add    BYTE PTR [rax],al
  40ce9f:	add    BYTE PTR [rax+rax*1+0x0],al
  40cea3:	add    BYTE PTR [rcx],al
  40cea5:	add    BYTE PTR [rsi+0x0],dl
  40cea8:	(bad)  
  40cea9:	add    BYTE PTR [rdx+0x0],dh
  40ceac:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40ceb0:	ins    BYTE PTR es:[rdi],dx
  40ceb1:	add    BYTE PTR [rbp+0x0],ah
  40ceb4:	rex.WB add BYTE PTR [r14+0x0],bpl
  40ceb8:	data16 add BYTE PTR [rdi+0x0],ch
  40cebc:	add    BYTE PTR [rax],al
  40cebe:	add    BYTE PTR [rax],al
  40cec0:	and    al,0x0
  40cec2:	add    al,0x0
  40cec4:	add    BYTE PTR [rax],al
  40cec6:	push   rsp
  40cec7:	add    BYTE PTR [rdx+0x0],dh
  40ceca:	(bad)  
  40cecb:	add    BYTE PTR [rsi+0x0],ch
  40cece:	jae    40ced0 <libintl_8_dll_iname+0x3130>
  40ced0:	ins    BYTE PTR es:[rdi],dx
  40ced1:	add    BYTE PTR [rcx+0x0],ah
  40ced4:	je     40ced6 <libintl_8_dll_iname+0x3136>
  40ced6:	imul   eax,DWORD PTR [rax],0x6e006f
  40cedc:	add    BYTE PTR [rax],al
  40cede:	add    BYTE PTR [rax],al
  40cee0:	or     DWORD PTR [rax+rsi*4],eax
  40cee3:	add    al,0x0
  40cee5:	add    BYTE PTR [rax],al
  40cee7:	add    BYTE PTR [rdi+rdi*1],bh
  40ceea:	js     40cf59 <libintl_8_dll_iname+0x31b9>
  40ceec:	ins    BYTE PTR es:[rdi],dx
  40ceed:	and    BYTE PTR [rsi+0x65],dh
  40cef0:	jb     40cf65 <libintl_8_dll_iname+0x31c5>
  40cef2:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  40cef9:	xor    BYTE PTR [rdx],ah
  40cefb:	and    BYTE PTR [rbp+0x6e],ah
  40cefe:	movsxd ebp,DWORD PTR [rdi+0x64]
  40cf01:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
  40cf08:	rex.RX sub eax,0x73202238
  40cf0e:	je     40cf71 <libintl_8_dll_iname+0x31d1>
  40cf10:	outs   dx,BYTE PTR ds:[rsi]
  40cf11:	fs (bad) 
  40cf13:	ins    BYTE PTR es:[rdi],dx
  40cf14:	outs   dx,DWORD PTR ds:[rsi]
  40cf15:	outs   dx,BYTE PTR ds:[rsi]
  40cf16:	gs cmp eax,0x73657922
  40cf1c:	and    bh,BYTE PTR [rdi]
  40cf1e:	or     bh,BYTE PTR ds:[rcx+riz*2]
  40cf22:	jae    40cf97 <libintl_8_dll_iname+0x31f7>
  40cf24:	gs ins DWORD PTR es:[rdi],dx
  40cf26:	(bad)  
  40cf27:	ins    BYTE PTR es:[rdi],dx
  40cf28:	jns    40cf4a <libintl_8_dll_iname+0x31aa>
  40cf2a:	js     40cf99 <libintl_8_dll_iname+0x31f9>
  40cf2c:	ins    BYTE PTR es:[rdi],dx
  40cf2d:	outs   dx,BYTE PTR ds:[rsi]
  40cf2e:	jae    40cf6d <libintl_8_dll_iname+0x31cd>
  40cf30:	and    dh,BYTE PTR [rbp+0x72]
  40cf33:	outs   dx,BYTE PTR ds:[rsi]
  40cf34:	cmp    dh,BYTE PTR [rbx+0x63]
  40cf37:	push   0x73616d65
  40cf3c:	sub    eax,0x7263696d
  40cf41:	outs   dx,DWORD PTR ds:[rsi]
  40cf42:	jae    40cfb3 <libintl_8_dll_iname+0x3213>
  40cf44:	data16 je 40cf74 <libintl_8_dll_iname+0x31d4>
  40cf47:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40cf4a:	cmp    ah,BYTE PTR [rcx+0x73]
  40cf4d:	ins    DWORD PTR es:[rdi],dx
  40cf4e:	cs jbe 40cf82 <libintl_8_dll_iname+0x31e2>
  40cf51:	and    ah,BYTE PTR [rax]
  40cf53:	ins    DWORD PTR es:[rdi],dx
  40cf54:	(bad)  
  40cf55:	outs   dx,BYTE PTR ds:[rsi]
  40cf56:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
  40cf5d:	jb     40cfd2 <libintl_8_dll_iname+0x3232>
  40cf5f:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  40cf66:	xor    BYTE PTR [rdx],ah
  40cf68:	and    BYTE PTR [rax+0x6d],bh
  40cf6b:	ins    BYTE PTR es:[rdi],dx
  40cf6c:	outs   dx,BYTE PTR ds:[rsi]
  40cf6d:	jae    40cfa9 <libintl_8_dll_iname+0x3209>
  40cf6f:	(bad)  
  40cf70:	jae    40cfdf <libintl_8_dll_iname+0x323f>
  40cf72:	jbe    40cfa7 <libintl_8_dll_iname+0x3207>
  40cf74:	cmp    eax,0x6e727522
  40cf79:	cmp    dh,BYTE PTR [rbx+0x63]
  40cf7c:	push   0x73616d65
  40cf81:	sub    eax,0x7263696d
  40cf86:	outs   dx,DWORD PTR ds:[rsi]
  40cf87:	jae    40cff8 <libintl_8_dll_iname+0x3258>
  40cf89:	data16 je 40cfb9 <libintl_8_dll_iname+0x3219>
  40cf8c:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40cf8f:	cmp    ah,BYTE PTR [rcx+0x73]
  40cf92:	ins    DWORD PTR es:[rdi],dx
  40cf93:	cs jbe 40cfc9 <libintl_8_dll_iname+0x3229>
  40cf96:	and    bh,BYTE PTR [rsi]
  40cf98:	or     cl,BYTE PTR [rcx]
  40cf9a:	cmp    al,0x61
  40cf9c:	jae    40d011 <libintl_8_dll_iname+0x3271>
  40cf9e:	gs ins DWORD PTR es:[rdi],dx
  40cfa0:	(bad)  
  40cfa1:	ins    BYTE PTR es:[rdi],dx
  40cfa2:	jns    40cfed <libintl_8_dll_iname+0x324d>
  40cfa4:	fs outs dx,BYTE PTR gs:[rsi]
  40cfa7:	je     40d012 <libintl_8_dll_iname+0x3272>
  40cfa9:	je     40d024 <libintl_8_dll_iname+0x3284>
  40cfab:	and    BYTE PTR [rsi+0x65],dh
  40cfae:	jb     40d023 <libintl_8_dll_iname+0x3283>
  40cfb0:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e32223d
  40cfb7:	xor    BYTE PTR [rsi],ch
  40cfb9:	xor    BYTE PTR [rsi],ch
  40cfbb:	xor    BYTE PTR [rdx],ah
  40cfbd:	and    BYTE PTR [rsi+0x61],ch
  40cfc0:	ins    DWORD PTR es:[rdi],dx
  40cfc1:	gs cmp eax,0x756e6722
  40cfc7:	outs   dx,BYTE PTR cs:[esi]
  40cfca:	outs   dx,DWORD PTR ds:[rsi]
  40cfcb:	ins    DWORD PTR es:[rdi],dx
  40cfcc:	gs imul ebp,DWORD PTR cs:[ebp+0x70],0x79742022
  40cfd6:	jo     40d03d <libintl_8_dll_iname+0x329d>
  40cfd8:	cmp    eax,0x6e697722
  40cfdd:	xor    esi,DWORD PTR [rdx]
  40cfdf:	and    ch,BYTE PTR [rdi]
  40cfe1:	or     cl,BYTE PTR ds:[rcx]
  40cfe4:	cmp    al,0x64
  40cfe6:	gs jae 40d04c <libintl_8_dll_iname+0x32ac>
  40cfe9:	jb     40d054 <libintl_8_dll_iname+0x32b4>
  40cfeb:	jo     40d061 <libintl_8_dll_iname+0x32c1>
  40cfed:	imul   ebp,DWORD PTR [rdi+0x6e],0x4d49473e
  40cff4:	push   rax
  40cff5:	cmp    al,0x2f
  40cff7:	fs gs jae 40d05e <libintl_8_dll_iname+0x32be>
  40cffb:	jb     40d066 <libintl_8_dll_iname+0x32c6>
  40cffd:	jo     40d073 <libintl_8_dll_iname+0x32d3>
  40cfff:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c090a3e
  40d006:	je     40d07a <libintl_8_dll_iname+0x32da>
  40d008:	jne    40d07d <libintl_8_dll_iname+0x32dd>
  40d00a:	je     40d055 <libintl_8_dll_iname+0x32b5>
  40d00c:	outs   dx,BYTE PTR ds:[rsi]
  40d00d:	outs   dx,WORD PTR ds:[rsi]
  40d00f:	and    BYTE PTR [rax+0x6d],bh
  40d012:	ins    BYTE PTR es:[rdi],dx
  40d013:	outs   dx,BYTE PTR ds:[rsi]
  40d014:	jae    40d053 <libintl_8_dll_iname+0x32b3>
  40d016:	and    dh,BYTE PTR [rbp+0x72]
  40d019:	outs   dx,BYTE PTR ds:[rsi]
  40d01a:	cmp    dh,BYTE PTR [rbx+0x63]
  40d01d:	push   0x73616d65
  40d022:	sub    eax,0x7263696d
  40d027:	outs   dx,DWORD PTR ds:[rsi]
  40d028:	jae    40d099 <libintl_8_dll_iname+0x32f9>
  40d02a:	data16 je 40d05a <libintl_8_dll_iname+0x32ba>
  40d02d:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40d030:	cmp    ah,BYTE PTR [rcx+0x73]
  40d033:	ins    DWORD PTR es:[rdi],dx
  40d034:	cs jbe 40d06a <libintl_8_dll_iname+0x32ca>
  40d037:	and    bh,BYTE PTR [rsi]
  40d039:	or     cl,BYTE PTR [rcx]
  40d03b:	or     DWORD PTR [rbx+rsi*2],edi
  40d03e:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  40d042:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x909090a
  40d04a:	cmp    al,0x72
  40d04c:	gs jno 40d0c4 <libintl_8_dll_iname+0x3324>
  40d04f:	gs jae 40d0c6 <libintl_8_dll_iname+0x3326>
  40d052:	gs fs push rax
  40d055:	jb     40d0c0 <libintl_8_dll_iname+0x3320>
  40d057:	jbe    40d0c2 <libintl_8_dll_iname+0x3322>
  40d059:	ins    BYTE PTR es:[rdi],dx
  40d05a:	gs addr32 gs jae 40d09d <libintl_8_dll_iname+0x32fd>
  40d05f:	or     cl,BYTE PTR [rcx]
  40d061:	or     DWORD PTR [rcx],ecx
  40d063:	or     DWORD PTR [rdx+rsi*2],edi
  40d066:	gs jno 40d0de <libintl_8_dll_iname+0x333e>
  40d069:	gs jae 40d0e0 <libintl_8_dll_iname+0x3340>
  40d06c:	gs fs rex.RB js 40d0d6 <libintl_8_dll_iname+0x3336>
  40d071:	movsxd esi,DWORD PTR [rbp+0x74]
  40d074:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
  40d07b:	ins    BYTE PTR es:[rdi],dx
  40d07c:	and    BYTE PTR [rbp+riz*2+0x76],ch
  40d080:	gs ins BYTE PTR es:[rdi],dx
  40d082:	cmp    eax,0x49736122
  40d087:	outs   dx,BYTE PTR ds:[rsi]
  40d088:	jbe    40d0f9 <libintl_8_dll_iname+0x3359>
  40d08a:	imul   esp,DWORD PTR [rbp+0x72],0x22
  40d08e:	and    BYTE PTR [rbp+0x69],dh
  40d091:	movsxd esp,DWORD PTR [r11+0x65]
  40d095:	jae    40d10a <libintl_8_dll_iname+0x336a>
  40d097:	cmp    eax,0x6c616622
  40d09c:	jae    40d103 <libintl_8_dll_iname+0x3363>
  40d09e:	and    ch,BYTE PTR [rdi]
  40d0a0:	or     cl,BYTE PTR ds:[rcx]
  40d0a3:	or     DWORD PTR [rcx],ecx
  40d0a5:	cmp    al,0x2f
  40d0a7:	jb     40d10e <libintl_8_dll_iname+0x336e>
  40d0a9:	jno    40d120 <libintl_8_dll_iname+0x3380>
  40d0ab:	gs jae 40d122 <libintl_8_dll_iname+0x3382>
  40d0ae:	gs fs push rax
  40d0b1:	jb     40d11c <libintl_8_dll_iname+0x337c>
  40d0b3:	jbe    40d11e <libintl_8_dll_iname+0x337e>
  40d0b5:	ins    BYTE PTR es:[rdi],dx
  40d0b6:	gs addr32 gs jae 40d0f9 <libintl_8_dll_iname+0x3359>
  40d0bb:	or     cl,BYTE PTR [rcx]
  40d0bd:	or     DWORD PTR [rdi+rbp*1],edi
  40d0c0:	jae    40d127 <libintl_8_dll_iname+0x3387>
  40d0c2:	movsxd esi,DWORD PTR [rbp+0x72]
  40d0c5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c090a
  40d0cd:	je     40d141 <libintl_8_dll_iname+0x33a1>
  40d0cf:	jne    40d144 <libintl_8_dll_iname+0x33a4>
  40d0d1:	je     40d11c <libintl_8_dll_iname+0x337c>
  40d0d3:	outs   dx,BYTE PTR ds:[rsi]
  40d0d4:	outs   dx,WORD PTR ds:[rsi]
  40d0d6:	or     cl,BYTE PTR ds:[rcx]
  40d0d9:	cmp    al,0x63
  40d0db:	outs   dx,DWORD PTR ds:[rsi]
  40d0dc:	ins    DWORD PTR es:[rdi],dx
  40d0dd:	jo     40d140 <libintl_8_dll_iname+0x33a0>
  40d0df:	je     40d14a <libintl_8_dll_iname+0x33aa>
  40d0e1:	(bad)  
  40d0e2:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6d782079
  40d0ea:	ins    BYTE PTR es:[rdi],dx
  40d0eb:	outs   dx,BYTE PTR ds:[rsi]
  40d0ec:	jae    40d12b <libintl_8_dll_iname+0x338b>
  40d0ee:	and    dh,BYTE PTR [rbp+0x72]
  40d0f1:	outs   dx,BYTE PTR ds:[rsi]
  40d0f2:	cmp    dh,BYTE PTR [rbx+0x63]
  40d0f5:	push   0x73616d65
  40d0fa:	sub    eax,0x7263696d
  40d0ff:	outs   dx,DWORD PTR ds:[rsi]
  40d100:	jae    40d171 <libintl_8_dll_iname+0x33d1>
  40d102:	data16 je 40d132 <libintl_8_dll_iname+0x3392>
  40d105:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40d108:	cmp    ah,BYTE PTR [rbx+0x6f]
  40d10b:	ins    DWORD PTR es:[rdi],dx
  40d10c:	jo     40d16f <libintl_8_dll_iname+0x33cf>
  40d10e:	je     40d179 <libintl_8_dll_iname+0x33d9>
  40d110:	(bad)  
  40d111:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x31762e79
  40d119:	and    bh,BYTE PTR [rsi]
  40d11b:	or     cl,BYTE PTR [rcx]
  40d11d:	or     DWORD PTR [rcx+riz*2],edi
  40d120:	jo     40d192 <libintl_8_dll_iname+0x33f2>
  40d122:	ins    BYTE PTR es:[rdi],dx
  40d123:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  40d12a:	or     cl,BYTE PTR ds:[rcx]
  40d12d:	or     DWORD PTR [rcx],ecx
  40d12f:	cmp    al,0x73
  40d131:	jne    40d1a3 <libintl_8_dll_iname+0x3403>
  40d133:	jo     40d1a4 <libintl_8_dll_iname+0x3404>
  40d135:	jb     40d1ab <libintl_8_dll_iname+0x340b>
  40d137:	gs fs rex.WRXB push r11
  40d13b:	and    BYTE PTR [rcx+0x64],cl
  40d13e:	cmp    eax,0x32657b22
  40d143:	xor    BYTE PTR [rcx],dh
  40d145:	xor    DWORD PTR [rsi*1+0x35312d37],esi
  40d14c:	xor    al,0x36
  40d14e:	sub    eax,0x35633334
  40d153:	sub    eax,0x65663561
  40d158:	sub    eax,0x64383030
  40d15d:	gs gs xor esp,DWORD PTR gs:[rbx+rsi*1+0x66]
  40d164:	xor    BYTE PTR [rbp+0x22],bh
  40d167:	(bad)  
  40d168:	ds cmp al,0x21
  40d16b:	sub    eax,0x6956202d
  40d170:	jae    40d1e6 <libintl_8_dll_iname+0x3446>
  40d172:	(bad)  
  40d173:	and    BYTE PTR [rip+0x90a3e2d],ch        # 94b0fa6 <libintl_8_dll_iname+0x90a7206>
  40d179:	or     DWORD PTR [rcx],ecx
  40d17b:	cmp    al,0x73
  40d17d:	jne    40d1ef <libintl_8_dll_iname+0x344f>
  40d17f:	jo     40d1f0 <libintl_8_dll_iname+0x3450>
  40d181:	jb     40d1f7 <libintl_8_dll_iname+0x3457>
  40d183:	gs fs rex.WRXB push r11
  40d187:	and    BYTE PTR [rcx+0x64],cl
  40d18a:	cmp    eax,0x35337b22
  40d18f:	xor    DWORD PTR [rbx],esi
  40d191:	cmp    BYTE PTR [rdx+0x39],ah
  40d194:	(bad)  
  40d195:	sub    eax,0x36396435
  40d19a:	sub    eax,0x64626634
  40d19f:	sub    eax,0x64326538
  40d1a4:	sub    eax,0x34343261
  40d1a9:	xor    BYTE PTR [rdx],dh
  40d1ab:	xor    dh,BYTE PTR [rip+0x61333966]        # 61740b17 <libintl_8_dll_iname+0x61336d77>
  40d1b1:	jge    40d1d5 <libintl_8_dll_iname+0x3435>
  40d1b3:	(bad)  
  40d1b4:	ds cmp al,0x21
  40d1b7:	sub    eax,0x6957202d
  40d1bc:	outs   dx,BYTE PTR ds:[rsi]
  40d1bd:	(bad)  
  40d1be:	and    BYTE PTR [rip+0x90a3e2d],ch        # 94b0ff1 <libintl_8_dll_iname+0x90a7251>
  40d1c4:	or     DWORD PTR [rcx],ecx
  40d1c6:	cmp    al,0x73
  40d1c8:	jne    40d23a <libintl_8_dll_iname+0x349a>
  40d1ca:	jo     40d23b <libintl_8_dll_iname+0x349b>
  40d1cc:	jb     40d242 <libintl_8_dll_iname+0x34a2>
  40d1ce:	gs fs rex.WRXB push r11
  40d1d2:	and    BYTE PTR [rcx+0x64],cl
  40d1d5:	cmp    eax,0x61347b22
  40d1da:	xor    ah,BYTE PTR [rsi+0x32]
  40d1dd:	cmp    BYTE PTR [rbp+0x33],ah
  40d1e0:	sub    eax,0x39623335
  40d1e5:	sub    eax,0x31343434
  40d1ea:	sub    eax,0x63396162
  40d1ef:	sub    eax,0x64393664
  40d1f4:	xor    al,0x61
  40d1f6:	xor    al,0x61
  40d1f8:	ss xor edi,DWORD PTR gs:[rax]
  40d1fc:	jge    40d220 <libintl_8_dll_iname+0x3480>
  40d1fe:	(bad)  
  40d1ff:	ds cmp al,0x21
  40d202:	sub    eax,0x6957202d
  40d207:	outs   dx,BYTE PTR ds:[rsi]
  40d208:	cmp    BYTE PTR [rax],ah
  40d20a:	sub    eax,0x90a3e2d
  40d20f:	or     DWORD PTR [rcx],ecx
  40d211:	cmp    al,0x73
  40d213:	jne    40d285 <libintl_8_dll_iname+0x34e5>
  40d215:	jo     40d286 <libintl_8_dll_iname+0x34e6>
  40d217:	jb     40d28d <libintl_8_dll_iname+0x34ed>
  40d219:	gs fs rex.WRXB push r11
  40d21d:	and    BYTE PTR [rcx+0x64],cl
  40d220:	cmp    eax,0x66317b22
  40d225:	ss (bad) 
  40d227:	movsxd esi,DWORD PTR ss:[rdi]
  40d22a:	ss sub eax,0x31653038
  40d230:	sub    eax,0x39333234
  40d235:	sub    eax,0x62623539
  40d23a:	sub    eax,0x30643338
  40d23f:	data16 ss xor BYTE PTR fs:[rcx+riz*2+0x37],ah
  40d246:	cmp    BYTE PTR [rbp+0x22],bh
  40d249:	(bad)  
  40d24a:	ds cmp al,0x21
  40d24d:	sub    eax,0x6957202d
  40d252:	outs   dx,BYTE PTR ds:[rsi]
  40d253:	cmp    BYTE PTR [rsi],ch
  40d255:	xor    DWORD PTR [rax],esp
  40d257:	sub    eax,0x90a3e2d
  40d25c:	or     DWORD PTR [rcx],ecx
  40d25e:	cmp    al,0x73
  40d260:	jne    40d2d2 <libintl_8_dll_iname+0x3532>
  40d262:	jo     40d2d3 <libintl_8_dll_iname+0x3533>
  40d264:	jb     40d2da <libintl_8_dll_iname+0x353a>
  40d266:	gs fs rex.WRXB push r11
  40d26a:	and    BYTE PTR [rcx+0x64],cl
  40d26d:	cmp    eax,0x65387b22
  40d272:	xor    BYTE PTR [rsi+0x37],ah
  40d275:	(bad)  
  40d276:	xor    DWORD PTR [rdx],esi
  40d278:	sub    eax,0x33626662
  40d27d:	sub    eax,0x38656634
  40d282:	sub    eax,0x35613962
  40d287:	sub    eax,0x64663834
  40d28c:	xor    eax,0x35316130
  40d291:	(bad)  
  40d292:	cmp    DWORD PTR [rcx+0x7d],esp
  40d295:	and    ch,BYTE PTR [rdi]
  40d297:	ds cmp al,0x21
  40d29a:	sub    eax,0x6957202d
  40d29f:	outs   dx,BYTE PTR ds:[rsi]
  40d2a0:	xor    DWORD PTR [rax],esi
  40d2a2:	and    BYTE PTR [rip+0x90a3e2d],ch        # 94b10d5 <libintl_8_dll_iname+0x90a7335>
  40d2a8:	or     DWORD PTR [rdi+rbp*1],edi
  40d2ab:	(bad)  
  40d2ac:	jo     40d31e <libintl_8_dll_iname+0x357e>
  40d2ae:	ins    BYTE PTR es:[rdi],dx
  40d2af:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  40d2b6:	or     cl,BYTE PTR ds:[rcx]
  40d2b9:	cmp    al,0x2f
  40d2bb:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40d2be:	jo     40d321 <libintl_8_dll_iname+0x3581>
  40d2c0:	je     40d32b <libintl_8_dll_iname+0x358b>
  40d2c2:	(bad)  
  40d2c3:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x90a3e79
  40d2cb:	cmp    al,0x61
  40d2cd:	jae    40d33c <libintl_8_dll_iname+0x359c>
  40d2cf:	jbe    40d304 <libintl_8_dll_iname+0x3564>
  40d2d1:	cmp    ah,BYTE PTR [rcx+0x70]
  40d2d4:	jo     40d342 <libintl_8_dll_iname+0x35a2>
  40d2d6:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  40d2dd:	or     cl,BYTE PTR ds:[rcx]
  40d2e0:	or     DWORD PTR [rcx+riz*2],edi
  40d2e3:	jae    40d352 <libintl_8_dll_iname+0x35b2>
  40d2e5:	jbe    40d31a <libintl_8_dll_iname+0x357a>
  40d2e7:	cmp    dh,BYTE PTR [rdi+0x69]
  40d2ea:	outs   dx,BYTE PTR ds:[rsi]
  40d2eb:	outs   dx,DWORD PTR fs:[rsi]
  40d2ed:	ja     40d362 <libintl_8_dll_iname+0x35c2>
  40d2ef:	push   rbx
  40d2f0:	gs je  40d367 <libintl_8_dll_iname+0x35c7>
  40d2f3:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
  40d2fa:	ins    BYTE PTR es:[rdi],dx
  40d2fb:	outs   dx,BYTE PTR ds:[rsi]
  40d2fc:	jae    40d33b <libintl_8_dll_iname+0x359b>
  40d2fe:	and    ch,BYTE PTR [rax+0x74]
  40d301:	je     40d373 <libintl_8_dll_iname+0x35d3>
  40d303:	cmp    ch,BYTE PTR [rdi]
  40d305:	(bad)  
  40d306:	jae    40d36b <libintl_8_dll_iname+0x35cb>
  40d308:	push   0x73616d65
  40d30d:	cs ins DWORD PTR es:[rdi],dx
  40d30f:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
  40d316:	je     40d346 <libintl_8_dll_iname+0x35a6>
  40d318:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40d31b:	(bad)  
  40d31c:	push   rbx
  40d31d:	rex.WRB
  40d31e:	rex.WB (bad) 
  40d320:	xor    dh,BYTE PTR [rax]
  40d322:	xor    BYTE PTR [rip+0x6e69572f],dh        # 6eaa2a57 <libintl_8_dll_iname+0x6e698cb7>
  40d328:	outs   dx,DWORD PTR fs:[rsi]
  40d32a:	ja     40d39f <libintl_8_dll_iname+0x35ff>
  40d32c:	push   rbx
  40d32d:	gs je  40d3a4 <libintl_8_dll_iname+0x3604>
  40d330:	imul   ebp,DWORD PTR [rsi+0x67],0xa3e2273
  40d337:	or     DWORD PTR [rcx],ecx
  40d339:	or     DWORD PTR [rsp+riz*2],edi
  40d33c:	jo     40d3a7 <libintl_8_dll_iname+0x3607>
  40d33e:	rex.B ja 40d3a2 <libintl_8_dll_iname+0x3602>
  40d341:	jb     40d3a8 <libintl_8_dll_iname+0x3608>
  40d343:	ds je  40d3b8 <libintl_8_dll_iname+0x3618>
  40d346:	jne    40d3ad <libintl_8_dll_iname+0x360d>
  40d348:	cmp    al,0x2f
  40d34a:	fs jo  40d3b6 <libintl_8_dll_iname+0x3616>
  40d34d:	rex.B ja 40d3b1 <libintl_8_dll_iname+0x3611>
  40d350:	jb     40d3b7 <libintl_8_dll_iname+0x3617>
  40d352:	or     cl,BYTE PTR ds:[rcx]
  40d355:	or     DWORD PTR [rdi+rbp*1],edi
  40d358:	(bad)  
  40d359:	jae    40d3c8 <libintl_8_dll_iname+0x3628>
  40d35b:	jbe    40d390 <libintl_8_dll_iname+0x35f0>
  40d35d:	cmp    dh,BYTE PTR [rdi+0x69]
  40d360:	outs   dx,BYTE PTR ds:[rsi]
  40d361:	outs   dx,DWORD PTR fs:[rsi]
  40d363:	ja     40d3d8 <libintl_8_dll_iname+0x3638>
  40d365:	push   rbx
  40d366:	gs je  40d3dd <libintl_8_dll_iname+0x363d>
  40d369:	imul   ebp,DWORD PTR [rsi+0x67],0x90a3e73
  40d370:	cmp    al,0x2f
  40d372:	(bad)  
  40d373:	jae    40d3e2 <libintl_8_dll_iname+0x3642>
  40d375:	jbe    40d3aa <libintl_8_dll_iname+0x360a>
  40d377:	cmp    ah,BYTE PTR [rcx+0x70]
  40d37a:	jo     40d3e8 <libintl_8_dll_iname+0x3648>
  40d37c:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  40d383:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  40d387:	(bad)  
  40d388:	jae    40d3fd <libintl_8_dll_iname+0x365d>
  40d38a:	gs ins DWORD PTR es:[rdi],dx
  40d38c:	(bad)  
  40d38d:	ins    BYTE PTR es:[rdi],dx
  40d38e:	jns    40d3ce <libintl_8_dll_iname+0x362e>
  40d390:	or     al,BYTE PTR [rax]
  40d392:	add    BYTE PTR [rax],al
  40d394:	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu_debuglink:

000000000040e000 <.gnu_debuglink>:
  40e000:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40e003:	outs   dx,DWORD PTR ds:[rsi]
  40e004:	jb     40e033 <libintl_8_dll_iname+0x4293>
  40e006:	outs   dx,BYTE PTR gs:[rsi]
  40e008:	push   0x65636e61
  40e00d:	cs gs js 40e076 <libintl_8_dll_iname+0x42d6>
  40e011:	cs fs gs (bad) 
  40e015:	jne    40e07e <libintl_8_dll_iname+0x42de>
  40e017:	.byte 0x0
  40e018:	mov    edx,DWORD PTR [rsi]
  40e01a:	add    esi,ebx
