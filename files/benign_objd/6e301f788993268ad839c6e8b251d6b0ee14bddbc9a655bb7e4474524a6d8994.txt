
6e301f788993268ad839c6e8b251d6b0ee14bddbc9a655bb7e4474524a6d8994.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x2cb9]        # 0x140003cc0
   140001007:	jmp    0x1400032d8
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	sub    rsp,0x28
   140001014:	call   0x1400010e0
   140001019:	lea    rcx,[rip+0x2cb0]        # 0x140003cd0
   140001020:	add    rsp,0x28
   140001024:	jmp    0x1400032d8
   140001029:	int3   
   14000102a:	int3   
   14000102b:	int3   
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	sub    rsp,0x28
   140001034:	call   0x140001100
   140001039:	lea    rcx,[rip+0x2ca0]        # 0x140003ce0
   140001040:	add    rsp,0x28
   140001044:	jmp    0x1400032d8
   140001049:	int3   
   14000104a:	int3   
   14000104b:	int3   
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	xor    edx,edx
   140001052:	lea    rcx,[rip+0x97cf]        # 0x14000a828
   140001059:	rex.W jmp QWORD PTR [rip+0x5228]        # 0x140006288
   140001060:	xor    edx,edx
   140001062:	lea    rcx,[rip+0x97b7]        # 0x14000a820
   140001069:	rex.W jmp QWORD PTR [rip+0x5218]        # 0x140006288
   140001070:	lea    rax,[rip+0x1899]        # 0x140002910
   140001077:	mov    QWORD PTR [rip+0x9762],rax        # 0x14000a7e0
   14000107e:	lea    rax,[rip+0x3a1b]        # 0x140004aa0
   140001085:	mov    QWORD PTR [rip+0x9744],rax        # 0x14000a7d0
   14000108c:	lea    rax,[rip+0x3a6d]        # 0x140004b00
   140001093:	mov    QWORD PTR [rip+0x973e],rax        # 0x14000a7d8
   14000109a:	ret    
   14000109b:	int3   
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	sub    rsp,0x28
   1400010a4:	xor    edx,edx
   1400010a6:	lea    rcx,[rip+0x9793]        # 0x14000a840
   1400010ad:	mov    r8d,0xa0
   1400010b3:	call   0x1400039b2
   1400010b8:	lea    rcx,[rip+0x2c31]        # 0x140003cf0
   1400010bf:	add    rsp,0x28
   1400010c3:	jmp    0x1400032d8
   1400010c8:	int3   
   1400010c9:	int3   
   1400010ca:	int3   
   1400010cb:	int3   
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	int3   
   1400010d1:	int3   
   1400010d2:	int3   
   1400010d3:	int3   
   1400010d4:	int3   
   1400010d5:	int3   
   1400010d6:	int3   
   1400010d7:	int3   
   1400010d8:	int3   
   1400010d9:	int3   
   1400010da:	int3   
   1400010db:	int3   
   1400010dc:	int3   
   1400010dd:	int3   
   1400010de:	int3   
   1400010df:	int3   
   1400010e0:	lea    rax,[rip+0x54c9]        # 0x1400065b0
   1400010e7:	mov    QWORD PTR [rip+0x971a],rax        # 0x14000a808
   1400010ee:	lea    rax,[rip+0x9713]        # 0x14000a808
   1400010f5:	ret    
   1400010f6:	int3   
   1400010f7:	int3   
   1400010f8:	int3   
   1400010f9:	int3   
   1400010fa:	int3   
   1400010fb:	int3   
   1400010fc:	int3   
   1400010fd:	int3   
   1400010fe:	int3   
   1400010ff:	int3   
   140001100:	lea    rax,[rip+0x5449]        # 0x140006550
   140001107:	mov    QWORD PTR [rip+0x96f2],rax        # 0x14000a800
   14000110e:	lea    rax,[rip+0x96eb]        # 0x14000a800
   140001115:	ret    
   140001116:	int3   
   140001117:	int3   
   140001118:	int3   
   140001119:	int3   
   14000111a:	int3   
   14000111b:	int3   
   14000111c:	int3   
   14000111d:	int3   
   14000111e:	int3   
   14000111f:	int3   
   140001120:	mov    QWORD PTR [rsp+0x8],rbx
   140001125:	mov    QWORD PTR [rsp+0x10],rbp
   14000112a:	mov    QWORD PTR [rsp+0x18],rsi
   14000112f:	mov    QWORD PTR [rsp+0x20],rdi
   140001134:	push   r14
   140001136:	sub    rsp,0x20
   14000113a:	mov    rsi,r8
   14000113d:	mov    BYTE PTR [rdx],0x0
   140001140:	mov    rdi,rdx
   140001143:	mov    rbp,rcx
   140001146:	xor    r14b,r14b
   140001149:	call   QWORD PTR [rip+0x4f19]        # 0x140006068
   14000114f:	mov    ebx,eax
   140001151:	mov    r10d,eax
   140001154:	movabs rax,0xcccccccccccccccd
   14000115e:	mul    r10
   140001161:	lea    rax,[rip+0x96d8]        # 0x14000a840
   140001168:	shr    rdx,0x4
   14000116c:	lea    r9,[rdx+rdx*4]
   140001170:	shl    r9,0x2
   140001174:	sub    rbx,r9
   140001177:	mov    rbx,QWORD PTR [rax+rbx*8]
   14000117b:	test   rbx,rbx
   14000117e:	jne    0x140003e6e
   140001184:	xor    ebx,ebx
   140001186:	test   rbx,rbx
   140001189:	jne    0x140003e86
   14000118f:	mov    rbx,QWORD PTR [rip+0x9782]        # 0x14000a918
   140001196:	test   rbx,rbx
   140001199:	jne    0x140003edb
   14000119f:	mov    rbx,QWORD PTR [rsp+0x30]
   1400011a4:	mov    rbp,QWORD PTR [rsp+0x38]
   1400011a9:	mov    rsi,QWORD PTR [rsp+0x40]
   1400011ae:	mov    rdi,QWORD PTR [rsp+0x48]
   1400011b3:	add    rsp,0x20
   1400011b7:	pop    r14
   1400011b9:	ret    
   1400011ba:	int3   
   1400011bb:	int3   
   1400011bc:	int3   
   1400011bd:	int3   
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	mov    QWORD PTR [rsp+0x18],rbx
   1400011c5:	mov    QWORD PTR [rsp+0x20],rdi
   1400011ca:	push   r12
   1400011cc:	push   r14
   1400011ce:	push   r15
   1400011d0:	sub    rsp,0x40
   1400011d4:	mov    rbx,QWORD PTR [rsp+0x90]
   1400011dc:	mov    r14,r9
   1400011df:	movzx  edi,r8b
   1400011e3:	mov    r15d,edx
   1400011e6:	mov    r12,rcx
   1400011e9:	test   rbx,rbx
   1400011ec:	je     0x140001237
   1400011ee:	mov    QWORD PTR [rsp+0x60],rbp
   1400011f3:	mov    eax,edx
   1400011f5:	mov    rbp,QWORD PTR [rsp+0x80]
   1400011fd:	mov    QWORD PTR [rsp+0x68],rsi
   140001202:	test   edx,edx
   140001204:	je     0x140001253
   140001206:	cmp    eax,0x1
   140001209:	jne    0x140001220
   14000120b:	test   r8b,r8b
   14000120e:	je     0x14000124c
   140001210:	movzx  eax,r8b
   140001214:	inc    eax
   140001216:	mov    DWORD PTR [rbx],eax
   140001218:	mov    QWORD PTR [rbx+0x10],r9
   14000121c:	mov    QWORD PTR [rbx+0x18],rbp
   140001220:	mov    rsi,QWORD PTR [rbx+0x28]
   140001224:	test   rsi,rsi
   140001227:	jne    0x140003ef4
   14000122d:	mov    rbp,QWORD PTR [rsp+0x60]
   140001232:	mov    rsi,QWORD PTR [rsp+0x68]
   140001237:	mov    rbx,QWORD PTR [rsp+0x70]
   14000123c:	mov    rdi,QWORD PTR [rsp+0x78]
   140001241:	add    rsp,0x40
   140001245:	pop    r15
   140001247:	pop    r14
   140001249:	pop    r12
   14000124b:	ret    
   14000124c:	mov    eax,0x100
   140001251:	jmp    0x140001216
   140001253:	mov    DWORD PTR [rbx],0x0
   140001259:	jmp    0x140001220
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	int3   
   140001261:	int3   
   140001262:	int3   
   140001263:	int3   
   140001264:	int3   
   140001265:	int3   
   140001266:	int3   
   140001267:	int3   
   140001268:	int3   
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	mov    rax,rsp
   140001273:	push   rbp
   140001274:	push   rdi
   140001275:	push   r12
   140001277:	push   r14
   140001279:	push   r15
   14000127b:	lea    rbp,[rax-0x48]
   14000127f:	sub    rsp,0x120
   140001286:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000128f:	mov    QWORD PTR [rax+0x10],rbx
   140001293:	mov    QWORD PTR [rax+0x18],rsi
   140001297:	mov    rax,QWORD PTR [rip+0x8d6a]        # 0x14000a008
   14000129e:	xor    rax,rsp
   1400012a1:	mov    QWORD PTR [rbp+0x10],rax
   1400012a5:	mov    rsi,rcx
   1400012a8:	mov    rax,QWORD PTR [rip+0x8d89]        # 0x14000a038
   1400012af:	movups xmm0,XMMWORD PTR [rax-0x10]
   1400012b3:	movups XMMWORD PTR [rsp+0x70],xmm0
   1400012b8:	xor    r12d,r12d
   1400012bb:	mov    QWORD PTR [rip+0x8d96],r12        # 0x14000a058
   1400012c2:	mov    QWORD PTR [rip+0x8d97],r12        # 0x14000a060
   1400012c9:	lea    r9,[rip+0x8d80]        # 0x14000a050
   1400012d0:	lea    r8,[rip+0x8d59]        # 0x14000a030
   1400012d7:	lea    rdx,[rip+0xfffffffffffffee2]        # 0x1400011c0
   1400012de:	lea    rcx,[rsp+0x70]
   1400012e3:	call   QWORD PTR [rip+0x4d17]        # 0x140006000
   1400012e9:	test   eax,eax
   1400012eb:	jne    0x140001308
   1400012ed:	mov    r8,QWORD PTR [rip+0x8d44]        # 0x14000a038
   1400012f4:	movzx  r9d,WORD PTR [r8]
   1400012f8:	lea    edx,[rax+0x2]
   1400012fb:	mov    rcx,QWORD PTR [rip+0x8d4e]        # 0x14000a050
   140001302:	call   QWORD PTR [rip+0x4d10]        # 0x140006018
   140001308:	lea    rax,[rip+0x14a1]        # 0x1400027b0
   14000130f:	mov    QWORD PTR [rip+0x94d2],rax        # 0x14000a7e8
   140001316:	mov    BYTE PTR [rip+0x946b],r12b        # 0x14000a788
   14000131d:	lea    r8,[rip+0x5494]        # 0x1400067b8
   140001324:	xor    edx,edx
   140001326:	xor    ecx,ecx
   140001328:	call   QWORD PTR [rip+0x4d22]        # 0x140006050
   14000132e:	mov    rbx,rax
   140001331:	mov    QWORD PTR [rsp+0x70],rax
   140001336:	test   rax,rax
   140001339:	je     0x140003f2e
   14000133f:	call   QWORD PTR [rip+0x4d33]        # 0x140006078
   140001345:	cmp    eax,0xb7
   14000134a:	je     0x140003f5d
   140001350:	mov    ecx,0x1
   140001355:	call   QWORD PTR [rip+0x4f05]        # 0x140006260
   14000135b:	mov    edi,eax
   14000135d:	test   eax,eax
   14000135f:	js     0x140003f8c
   140001365:	xor    eax,eax
   140001367:	mov    QWORD PTR [rbp-0x80],rax
   14000136b:	mov    QWORD PTR [rbp-0x78],r12
   14000136f:	xorps  xmm0,xmm0
   140001372:	movdqa XMMWORD PTR [rbp-0x70],xmm0
   140001377:	mov    QWORD PTR [rbp-0x60],r12
   14000137b:	mov    eax,0x2
   140001380:	mov    QWORD PTR [rbp-0x40],r12
   140001384:	sub    rax,0x1
   140001388:	jne    0x140001380
   14000138a:	mov    QWORD PTR [rbp-0x38],r12
   14000138e:	lea    rax,[rbp-0x28]
   140001392:	mov    QWORD PTR [rsp+0x30],rax
   140001397:	xor    edx,edx
   140001399:	lea    r8d,[rdx+0x28]
   14000139d:	lea    rcx,[rbp-0x28]
   1400013a1:	call   0x1400039b2
   1400013a6:	nop
   1400013a7:	lea    rcx,[rbp-0x28]
   1400013ab:	call   0x140002a70
   1400013b0:	test   eax,eax
   1400013b2:	js     0x140003fbe
   1400013b8:	mov    DWORD PTR [rbp+0x0],r12d
   1400013bc:	lea    rdx,[rbp-0x80]
   1400013c0:	mov    rcx,rsi
   1400013c3:	call   0x140001580
   1400013c8:	mov    edi,eax
   1400013ca:	test   eax,eax
   1400013cc:	js     0x140003fc6
   1400013d2:	xor    ecx,ecx
   1400013d4:	call   QWORD PTR [rip+0x4fe6]        # 0x1400063c0
   1400013da:	mov    edi,eax
   1400013dc:	test   eax,eax
   1400013de:	js     0x140003ff8
   1400013e4:	xor    edx,edx
   1400013e6:	lea    r8d,[rdx+0x30]
   1400013ea:	lea    rcx,[rsp+0x40]
   1400013ef:	call   0x1400039b2
   1400013f4:	xor    r9d,r9d
   1400013f7:	xor    r8d,r8d
   1400013fa:	xor    edx,edx
   1400013fc:	lea    rcx,[rsp+0x40]
   140001401:	call   QWORD PTR [rip+0x4d81]        # 0x140006188
   140001407:	test   eax,eax
   140001409:	je     0x140001438
   14000140b:	lea    rcx,[rsp+0x40]
   140001410:	call   QWORD PTR [rip+0x4d6a]        # 0x140006180
   140001416:	lea    rcx,[rsp+0x40]
   14000141b:	call   QWORD PTR [rip+0x4d57]        # 0x140006178
   140001421:	xor    r9d,r9d
   140001424:	xor    r8d,r8d
   140001427:	xor    edx,edx
   140001429:	lea    rcx,[rsp+0x40]
   14000142e:	call   QWORD PTR [rip+0x4d54]        # 0x140006188
   140001434:	test   eax,eax
   140001436:	jne    0x14000140b
   140001438:	mov    rcx,rbx
   14000143b:	call   QWORD PTR [rip+0x4c17]        # 0x140006058
   140001441:	mov    rbx,r12
   140001444:	mov    QWORD PTR [rsp+0x70],rbx
   140001449:	call   QWORD PTR [rip+0x4d51]        # 0x1400061a0
   14000144f:	mov    rcx,QWORD PTR [rip+0x8bfa]        # 0x14000a050
   140001456:	call   QWORD PTR [rip+0x4bac]        # 0x140006008
   14000145c:	mov    QWORD PTR [rip+0x8bed],r12        # 0x14000a050
   140001463:	mov    DWORD PTR [rip+0x8bc6],r12d        # 0x14000a030
   14000146a:	mov    edi,DWORD PTR [rsp+0x50]
   14000146e:	mov    rcx,QWORD PTR [rbp-0x38]
   140001472:	test   rcx,rcx
   140001475:	je     0x140001488
   140001477:	call   QWORD PTR [rip+0x4f2b]        # 0x1400063a8
   14000147d:	or     eax,0x10000000
   140001482:	jl     0x140001488
   140001484:	mov    QWORD PTR [rbp-0x38],r12
   140001488:	mov    DWORD PTR [rsp+0x30],r12d
   14000148d:	lea    r8,[rsp+0x30]
   140001492:	mov    edx,0x1
   140001497:	lea    rcx,[rbp-0x80]
   14000149b:	call   0x140001fb0
   1400014a0:	cmp    DWORD PTR [rsp+0x30],0x0
   1400014a5:	jne    0x14000402a
   1400014ab:	mov    rcx,QWORD PTR [rbp-0x78]
   1400014af:	test   rcx,rcx
   1400014b2:	je     0x1400014ba
   1400014b4:	call   QWORD PTR [rip+0x4c56]        # 0x140006110
   1400014ba:	mov    rcx,QWORD PTR [rbp-0x60]
   1400014be:	test   rcx,rcx
   1400014c1:	jne    0x14000403e
   1400014c7:	mov    rdx,QWORD PTR [rbp-0x70]
   1400014cb:	lea    rcx,[rip+0x510e]        # 0x1400065e0
   1400014d2:	call   QWORD PTR [rip+0x4c48]        # 0x140006120
   1400014d8:	nop
   1400014d9:	lea    rcx,[rbp-0x28]
   1400014dd:	call   QWORD PTR [rip+0x4bb5]        # 0x140006098
   1400014e3:	nop
   1400014e4:	lea    rax,[rbp-0x58]
   1400014e8:	mov    QWORD PTR [rsp+0x30],rax
   1400014ed:	mov    rcx,QWORD PTR [rbp-0x38]
   1400014f1:	test   rcx,rcx
   1400014f4:	jne    0x14000404a
   1400014fa:	mov    rsi,QWORD PTR [rbp-0x40]
   1400014fe:	test   rsi,rsi
   140001501:	je     0x140001536
   140001503:	lea    rax,[rbp-0x58]
   140001507:	cmp    rsi,rax
   14000150a:	je     0x140001569
   14000150c:	mov    r14b,0x1
   14000150f:	mov    rax,QWORD PTR [rsi]
   140001512:	mov    r15,QWORD PTR [rax+0x20]
   140001516:	lea    rax,[rip+0x673]        # 0x140001b90
   14000151d:	cmp    r15,rax
   140001520:	jne    0x140004066
   140001526:	movzx  edx,r14b
   14000152a:	mov    rcx,rsi
   14000152d:	call   0x140001b90
   140001532:	mov    QWORD PTR [rbp-0x40],r12
   140001536:	test   rbx,rbx
   140001539:	jne    0x14000407f
   14000153f:	mov    eax,edi
   140001541:	mov    rcx,QWORD PTR [rbp+0x10]
   140001545:	xor    rcx,rsp
   140001548:	call   0x140003210
   14000154d:	lea    r11,[rsp+0x120]
   140001555:	mov    rbx,QWORD PTR [r11+0x38]
   140001559:	mov    rsi,QWORD PTR [r11+0x40]
   14000155d:	mov    rsp,r11
   140001560:	pop    r15
   140001562:	pop    r14
   140001564:	pop    r12
   140001566:	pop    rdi
   140001567:	pop    rbp
   140001568:	ret    
   140001569:	xor    r14d,r14d
   14000156c:	jmp    0x14000150f
   14000156e:	int3   
   14000156f:	int3   
   140001570:	int3   
   140001571:	int3   
   140001572:	int3   
   140001573:	int3   
   140001574:	int3   
   140001575:	int3   
   140001576:	int3   
   140001577:	int3   
   140001578:	int3   
   140001579:	int3   
   14000157a:	int3   
   14000157b:	int3   
   14000157c:	int3   
   14000157d:	int3   
   14000157e:	int3   
   14000157f:	int3   
   140001580:	rex push rbp
   140001582:	push   rsi
   140001583:	push   rdi
   140001584:	push   r12
   140001586:	push   r13
   140001588:	push   r14
   14000158a:	push   r15
   14000158c:	lea    rbp,[rsp-0x2e0]
   140001594:	sub    rsp,0x3e0
   14000159b:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   1400015a3:	mov    QWORD PTR [rsp+0x430],rbx
   1400015ab:	mov    rax,QWORD PTR [rip+0x8a56]        # 0x14000a008
   1400015b2:	xor    rax,rsp
   1400015b5:	mov    QWORD PTR [rbp+0x2d0],rax
   1400015bc:	mov    rsi,rdx
   1400015bf:	mov    rdi,rcx
   1400015c2:	mov    r9d,0x64
   1400015c8:	lea    r8,[rbp-0x10]
   1400015cc:	lea    edx,[r9+0x2]
   1400015d0:	call   QWORD PTR [rip+0x4af2]        # 0x1400060c8
   1400015d6:	test   eax,eax
   1400015d8:	je     0x140004090
   1400015de:	xor    edx,edx
   1400015e0:	mov    r8d,0x208
   1400015e6:	lea    rcx,[rbp+0xc0]
   1400015ed:	call   0x1400039b2
   1400015f2:	mov    r8d,0x104
   1400015f8:	lea    rdx,[rbp+0xc0]
   1400015ff:	lea    rcx,[rip+0x506a]        # 0x140006670
   140001606:	call   QWORD PTR [rip+0x4a74]        # 0x140006080
   14000160c:	test   eax,eax
   14000160e:	je     0x1400040c1
   140001614:	xor    edx,edx
   140001616:	lea    r8d,[rdx+0x22]
   14000161a:	lea    rcx,[rbp+0xc0]
   140001621:	call   QWORD PTR [rip+0x4a01]        # 0x140006028
   140001627:	mov    rbx,rax
   14000162a:	mov    QWORD PTR [rbp-0x18],rax
   14000162e:	test   rax,rax
   140001631:	je     0x1400040f2
   140001637:	mov    QWORD PTR [rbp-0x58],rdi
   14000163b:	mov    edx,0xa
   140001640:	mov    rcx,rax
   140001643:	call   QWORD PTR [rip+0x4b47]        # 0x140006190
   140001649:	mov    QWORD PTR [rbp-0x50],rax
   14000164d:	test   rax,rax
   140001650:	je     0x140004125
   140001656:	mov    edx,0xa
   14000165b:	mov    rcx,rbx
   14000165e:	call   QWORD PTR [rip+0x4b2c]        # 0x140006190
   140001664:	mov    QWORD PTR [rbp-0x28],rax
   140001668:	test   rax,rax
   14000166b:	je     0x140004158
   140001671:	mov    edx,0x7f00
   140001676:	xor    ecx,ecx
   140001678:	call   QWORD PTR [rip+0x4a52]        # 0x1400060d0
   14000167e:	mov    QWORD PTR [rbp-0x48],rax
   140001682:	test   rax,rax
   140001685:	je     0x14000418b
   14000168b:	mov    DWORD PTR [rbp-0x70],0x50
   140001692:	mov    DWORD PTR [rbp-0x6c],0x3
   140001699:	lea    rax,[rip+0x250]        # 0x1400018f0
   1400016a0:	mov    QWORD PTR [rbp-0x68],rax
   1400016a4:	xor    r13d,r13d
   1400016a7:	mov    QWORD PTR [rbp-0x60],r13
   1400016ab:	mov    QWORD PTR [rbp-0x40],0x6
   1400016b3:	lea    r14,[rip+0x4f26]        # 0x1400065e0
   1400016ba:	mov    QWORD PTR [rbp-0x38],r14
   1400016be:	mov    QWORD PTR [rbp-0x30],r14
   1400016c2:	lea    rcx,[rbp-0x70]
   1400016c6:	call   QWORD PTR [rip+0x4a0c]        # 0x1400060d8
   1400016cc:	cmp    r13w,ax
   1400016d0:	je     0x1400041be
   1400016d6:	mov    QWORD PTR [rsp+0x58],rsi
   1400016db:	mov    QWORD PTR [rsp+0x50],rdi
   1400016e0:	mov    QWORD PTR [rsp+0x48],r13
   1400016e5:	mov    QWORD PTR [rsp+0x40],r13
   1400016ea:	mov    DWORD PTR [rsp+0x38],r13d
   1400016ef:	mov    DWORD PTR [rsp+0x30],0x80000000
   1400016f7:	mov    DWORD PTR [rsp+0x28],r13d
   1400016fc:	mov    DWORD PTR [rsp+0x20],0x80000000
   140001704:	mov    r9d,0xcf0000
   14000170a:	lea    r8,[rbp-0x10]
   14000170e:	mov    rdx,r14
   140001711:	xor    ecx,ecx
   140001713:	call   QWORD PTR [rip+0x49c7]        # 0x1400060e0
   140001719:	test   rax,rax
   14000171c:	je     0x1400041f1
   140001722:	mov    QWORD PTR [rsi+0x10],rdi
   140001726:	mov    QWORD PTR [rsi+0x18],rax
   14000172a:	mov    edx,0x3e9
   14000172f:	mov    rcx,rdi
   140001732:	call   QWORD PTR [rip+0x49f0]        # 0x140006128
   140001738:	mov    QWORD PTR [rsi+0x8],rax
   14000173c:	test   rax,rax
   14000173f:	je     0x140004224
   140001745:	mov    DWORD PTR [rsp+0x60],r13d
   14000174a:	lea    r8,[rsp+0x60]
   14000174f:	xor    edx,edx
   140001751:	mov    rcx,rsi
   140001754:	call   0x140001fb0
   140001759:	cmp    DWORD PTR [rsp+0x60],r13d
   14000175e:	je     0x14000176a
   140001760:	xor    edx,edx
   140001762:	mov    rcx,rsi
   140001765:	call   0x140001d60
   14000176a:	lea    rax,[rsp+0x70]
   14000176f:	mov    QWORD PTR [rsp+0x68],rax
   140001774:	mov    rdi,QWORD PTR [rip+0x5155]        # 0x1400068d0
   14000177b:	mov    QWORD PTR [rbp-0x78],r13
   14000177f:	mov    ecx,0x28
   140001784:	call   0x140002e18
   140001789:	mov    r14,rax
   14000178c:	test   rax,rax
   14000178f:	je     0x140004257
   140001795:	lea    rax,[rip+0x4f24]        # 0x1400066c0
   14000179c:	mov    QWORD PTR [r14],rax
   14000179f:	lea    rax,[rip+0x54a]        # 0x140001cf0
   1400017a6:	mov    QWORD PTR [r14+0x8],rax
   1400017aa:	mov    QWORD PTR [r14+0x18],rsi
   1400017ae:	mov    QWORD PTR [rbp-0x78],r14
   1400017b2:	lea    rax,[rsp+0x70]
   1400017b7:	mov    QWORD PTR [rsp+0x68],rax
   1400017bc:	lea    r15,[rsi+0x28]
   1400017c0:	mov    r12d,r13d
   1400017c3:	lea    rsi,[r15+0x20]
   1400017c7:	cmp    QWORD PTR [rsi],r12
   1400017ca:	jne    0x14000425e
   1400017d0:	mov    QWORD PTR [r15+0x28],rdi
   1400017d4:	lea    rax,[rsp+0x70]
   1400017d9:	cmp    r15,rax
   1400017dc:	je     0x140001826
   1400017de:	mov    r13,QWORD PTR [r15+0x18]
   1400017e2:	test   r13,r13
   1400017e5:	jne    0x140004269
   1400017eb:	test   r14,r14
   1400017ee:	je     0x14000429e
   1400017f4:	lea    rax,[rsp+0x70]
   1400017f9:	cmp    r14,rax
   1400017fc:	mov    rax,QWORD PTR [r14]
   1400017ff:	mov    rdi,QWORD PTR [rax]
   140001802:	je     0x1400042a7
   140001808:	lea    rax,[rip+0x481]        # 0x140001c90
   14000180f:	cmp    rdi,rax
   140001812:	jne    0x1400042b5
   140001818:	xor    edx,edx
   14000181a:	mov    rcx,r14
   14000181d:	call   0x140001c90
   140001822:	mov    QWORD PTR [r15+0x18],rax
   140001826:	mov    DWORD PTR [rsp+0x38],r13d
   14000182b:	mov    DWORD PTR [rsp+0x30],r13d
   140001830:	mov    QWORD PTR [rsp+0x28],r13
   140001835:	mov    QWORD PTR [rsp+0x20],r15
   14000183a:	lea    r9,[rip+0x22f]        # 0x140001a70
   140001841:	xor    r8d,r8d
   140001844:	mov    rdx,QWORD PTR [r15+0x28]
   140001848:	mov    rcx,rsi
   14000184b:	call   QWORD PTR [rip+0x4b5f]        # 0x1400063b0
   140001851:	mov    r14,QWORD PTR [rbp-0x78]
   140001855:	test   eax,eax
   140001857:	js     0x1400042cb
   14000185d:	test   r14,r14
   140001860:	je     0x140001892
   140001862:	lea    rax,[rsp+0x70]
   140001867:	cmp    r14,rax
   14000186a:	je     0x1400018d9
   14000186c:	mov    dil,0x1
   14000186f:	mov    rax,QWORD PTR [r14]
   140001872:	mov    rsi,QWORD PTR [rax+0x20]
   140001876:	lea    rax,[rip+0x313]        # 0x140001b90
   14000187d:	cmp    rsi,rax
   140001880:	jne    0x1400042d8
   140001886:	movzx  edx,dil
   14000188a:	mov    rcx,r14
   14000188d:	call   0x140001b90
   140001892:	test   r12d,r12d
   140001895:	js     0x1400042f0
   14000189b:	mov    r12d,r13d
   14000189e:	test   rbx,rbx
   1400018a1:	je     0x1400018ac
   1400018a3:	mov    rcx,rbx
   1400018a6:	call   QWORD PTR [rip+0x47dc]        # 0x140006088
   1400018ac:	mov    eax,r12d
   1400018af:	mov    rcx,QWORD PTR [rbp+0x2d0]
   1400018b6:	xor    rcx,rsp
   1400018b9:	call   0x140003210
   1400018be:	mov    rbx,QWORD PTR [rsp+0x430]
   1400018c6:	add    rsp,0x3e0
   1400018cd:	pop    r15
   1400018cf:	pop    r14
   1400018d1:	pop    r13
   1400018d3:	pop    r12
   1400018d5:	pop    rdi
   1400018d6:	pop    rsi
   1400018d7:	pop    rbp
   1400018d8:	ret    
   1400018d9:	xor    edi,edi
   1400018db:	jmp    0x14000186f
   1400018dd:	int3   
   1400018de:	int3   
   1400018df:	int3   
   1400018e0:	int3   
   1400018e1:	int3   
   1400018e2:	int3   
   1400018e3:	int3   
   1400018e4:	int3   
   1400018e5:	int3   
   1400018e6:	int3   
   1400018e7:	int3   
   1400018e8:	int3   
   1400018e9:	int3   
   1400018ea:	int3   
   1400018eb:	int3   
   1400018ec:	int3   
   1400018ed:	int3   
   1400018ee:	int3   
   1400018ef:	int3   
   1400018f0:	push   r14
   1400018f2:	sub    rsp,0x50
   1400018f6:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400018ff:	mov    QWORD PTR [rsp+0x60],rbx
   140001904:	mov    QWORD PTR [rsp+0x70],rsi
   140001909:	mov    QWORD PTR [rsp+0x78],rdi
   14000190e:	mov    r14,r9
   140001911:	mov    rsi,r8
   140001914:	mov    ebx,edx
   140001916:	mov    rdi,rcx
   140001919:	cmp    edx,0x1
   14000191c:	je     0x14000198a
   14000191e:	cmp    edx,0x111
   140001924:	je     0x140004328
   14000192a:	cmp    edx,0x2
   14000192d:	je     0x1400043cc
   140001933:	cmp    edx,0x401
   140001939:	je     0x1400043e7
   14000193f:	cmp    edx,0x113
   140001945:	je     0x14000199c
   140001947:	mov    eax,DWORD PTR [rip+0x8ec3]        # 0x14000a810
   14000194d:	test   al,0x1
   14000194f:	je     0x140001a0a
   140001955:	mov    eax,DWORD PTR [rip+0x8eb9]        # 0x14000a814
   14000195b:	cmp    ebx,eax
   14000195d:	je     0x140001a3a
   140001963:	mov    r9,r14
   140001966:	mov    r8,rsi
   140001969:	mov    edx,ebx
   14000196b:	mov    rcx,rdi
   14000196e:	call   QWORD PTR [rip+0x477c]        # 0x1400060f0
   140001974:	mov    rbx,QWORD PTR [rsp+0x60]
   140001979:	mov    rsi,QWORD PTR [rsp+0x70]
   14000197e:	mov    rdi,QWORD PTR [rsp+0x78]
   140001983:	add    rsp,0x50
   140001987:	pop    r14
   140001989:	ret    
   14000198a:	mov    r8,QWORD PTR [r9]
   14000198d:	mov    edx,0xffffffeb
   140001992:	call   QWORD PTR [rip+0x4750]        # 0x1400060e8
   140001998:	xor    eax,eax
   14000199a:	jmp    0x140001974
   14000199c:	cmp    r8,0x57
   1400019a0:	jne    0x140001947
   1400019a2:	lea    edx,[r8-0x6c]
   1400019a6:	call   QWORD PTR [rip+0x4754]        # 0x140006100
   1400019ac:	mov    rbx,rax
   1400019af:	test   rax,rax
   1400019b2:	je     0x140001998
   1400019b4:	lea    rdi,[rax+0x58]
   1400019b8:	mov    QWORD PTR [rsp+0x30],rdi
   1400019bd:	mov    rcx,rdi
   1400019c0:	call   QWORD PTR [rip+0x46da]        # 0x1400060a0
   1400019c6:	mov    BYTE PTR [rsp+0x38],0x1
   1400019cb:	mov    edx,0x57
   1400019d0:	mov    rcx,QWORD PTR [rbx+0x18]
   1400019d4:	call   QWORD PTR [rip+0x4796]        # 0x140006170
   1400019da:	test   eax,eax
   1400019dc:	je     0x14000441f
   1400019e2:	xor    eax,eax
   1400019e4:	mov    DWORD PTR [rsp+0x68],eax
   1400019e8:	lea    r8,[rsp+0x68]
   1400019ed:	lea    edx,[rax+0x2]
   1400019f0:	mov    rcx,rbx
   1400019f3:	call   0x140001fb0
   1400019f8:	cmp    DWORD PTR [rsp+0x68],0x2
   1400019fd:	je     0x140001a2b
   1400019ff:	mov    rcx,rdi
   140001a02:	call   QWORD PTR [rip+0x46a0]        # 0x1400060a8
   140001a08:	jmp    0x140001998
   140001a0a:	or     eax,0x1
   140001a0d:	mov    DWORD PTR [rip+0x8dfd],eax        # 0x14000a810
   140001a13:	lea    rcx,[rip+0x4bf6]        # 0x140006610
   140001a1a:	call   QWORD PTR [rip+0x46e8]        # 0x140006108
   140001a20:	mov    DWORD PTR [rip+0x8dee],eax        # 0x14000a814
   140001a26:	jmp    0x14000195b
   140001a2b:	mov    edx,0x2
   140001a30:	mov    rcx,rbx
   140001a33:	call   0x140001f50
   140001a38:	jmp    0x1400019ff
   140001a3a:	mov    edx,0xffffffeb
   140001a3f:	mov    rcx,rdi
   140001a42:	call   QWORD PTR [rip+0x46b8]        # 0x140006100
   140001a48:	test   rax,rax
   140001a4b:	je     0x140001963
   140001a51:	mov    rcx,rax
   140001a54:	call   0x140002af0
   140001a59:	jmp    0x140001963
   140001a5e:	int3   
   140001a5f:	int3   
   140001a60:	int3   
   140001a61:	int3   
   140001a62:	int3   
   140001a63:	int3   
   140001a64:	int3   
   140001a65:	int3   
   140001a66:	int3   
   140001a67:	int3   
   140001a68:	int3   
   140001a69:	int3   
   140001a6a:	int3   
   140001a6b:	int3   
   140001a6c:	int3   
   140001a6d:	int3   
   140001a6e:	int3   
   140001a6f:	int3   
   140001a70:	sub    rsp,0x38
   140001a74:	test   r9,r9
   140001a77:	je     0x140001b24
   140001a7d:	mov    QWORD PTR [rsp+0x40],rbx
   140001a82:	mov    rbx,QWORD PTR [r9+0x18]
   140001a86:	test   rbx,rbx
   140001a89:	je     0x140001b1f
   140001a8f:	mov    QWORD PTR [rsp+0x48],rbp
   140001a94:	mov    QWORD PTR [rsp+0x50],rsi
   140001a99:	mov    esi,DWORD PTR [rsp+0x68]
   140001a9d:	mov    QWORD PTR [rsp+0x30],rdi
   140001aa2:	mov    rdi,QWORD PTR [rsp+0x60]
   140001aa7:	mov    QWORD PTR [rsp+0x28],rdi
   140001aac:	mov    DWORD PTR [rsp+0x20],esi
   140001ab0:	mov    rax,QWORD PTR [rbx]
   140001ab3:	mov    rbp,QWORD PTR [rax+0x10]
   140001ab7:	lea    rax,[rip+0x132]        # 0x140001bf0
   140001abe:	cmp    rbp,rax
   140001ac1:	jne    0x14000447c
   140001ac7:	mov    rbp,QWORD PTR [rbx+0x18]
   140001acb:	lea    rax,[rip+0x21e]        # 0x140001cf0
   140001ad2:	mov    rbx,QWORD PTR [rbx+0x8]
   140001ad6:	cmp    rbx,rax
   140001ad9:	jne    0x140004462
   140001adf:	cmp    esi,0x4
   140001ae2:	jne    0x140001b10
   140001ae4:	test   rdi,rdi
   140001ae7:	je     0x140001b10
   140001ae9:	cmp    DWORD PTR [rdi],0x0
   140001aec:	lea    r8,[rsp+0x58]
   140001af1:	mov    DWORD PTR [rsp+0x58],0x0
   140001af9:	mov    rcx,rbp
   140001afc:	je     0x140001b2b
   140001afe:	xor    edx,edx
   140001b00:	call   0x140001fb0
   140001b05:	cmp    DWORD PTR [rsp+0x58],0x0
   140001b0a:	jne    0x140004452
   140001b10:	mov    rsi,QWORD PTR [rsp+0x50]
   140001b15:	mov    rbp,QWORD PTR [rsp+0x48]
   140001b1a:	mov    rdi,QWORD PTR [rsp+0x30]
   140001b1f:	mov    rbx,QWORD PTR [rsp+0x40]
   140001b24:	xor    eax,eax
   140001b26:	add    rsp,0x38
   140001b2a:	ret    
   140001b2b:	mov    edx,0x1
   140001b30:	call   0x140001fb0
   140001b35:	cmp    DWORD PTR [rsp+0x58],0x0
   140001b3a:	je     0x140001b10
   140001b3c:	mov    edx,0x2
   140001b41:	mov    rcx,rbp
   140001b44:	call   0x140001d60
   140001b49:	jmp    0x140001b10
   140001b4b:	int3   
   140001b4c:	int3   
   140001b4d:	int3   
   140001b4e:	int3   
   140001b4f:	int3   
   140001b50:	int3   
   140001b51:	int3   
   140001b52:	int3   
   140001b53:	int3   
   140001b54:	int3   
   140001b55:	int3   
   140001b56:	int3   
   140001b57:	int3   
   140001b58:	int3   
   140001b59:	int3   
   140001b5a:	int3   
   140001b5b:	int3   
   140001b5c:	int3   
   140001b5d:	int3   
   140001b5e:	int3   
   140001b5f:	int3   
   140001b60:	rex push rbx
   140001b62:	sub    rsp,0x20
   140001b66:	lea    rax,[rip+0x4ac3]        # 0x140006630
   140001b6d:	mov    rbx,rcx
   140001b70:	mov    QWORD PTR [rcx],rax
   140001b73:	test   dl,0x1
   140001b76:	jne    0x140001b81
   140001b78:	mov    rax,rbx
   140001b7b:	add    rsp,0x20
   140001b7f:	pop    rbx
   140001b80:	ret    
   140001b81:	call   QWORD PTR [rip+0x47f9]        # 0x140006380
   140001b87:	jmp    0x140001b78
   140001b89:	int3   
   140001b8a:	int3   
   140001b8b:	int3   
   140001b8c:	int3   
   140001b8d:	int3   
   140001b8e:	int3   
   140001b8f:	int3   
   140001b90:	mov    QWORD PTR [rsp+0x8],rbx
   140001b95:	mov    QWORD PTR [rsp+0x10],rsi
   140001b9a:	push   rdi
   140001b9b:	sub    rsp,0x20
   140001b9f:	mov    rax,QWORD PTR [rcx]
   140001ba2:	movzx  edi,dl
   140001ba5:	mov    rbx,rcx
   140001ba8:	mov    rsi,QWORD PTR [rax+0x28]
   140001bac:	lea    rax,[rip+0xffffffffffffffad]        # 0x140001b60
   140001bb3:	cmp    rsi,rax
   140001bb6:	jne    0x14000449a
   140001bbc:	lea    rax,[rip+0x4a6d]        # 0x140006630
   140001bc3:	mov    QWORD PTR [rcx],rax
   140001bc6:	test   dil,dil
   140001bc9:	je     0x140001bd4
   140001bcb:	mov    rcx,rbx
   140001bce:	call   QWORD PTR [rip+0x47ac]        # 0x140006380
   140001bd4:	mov    rbx,QWORD PTR [rsp+0x30]
   140001bd9:	mov    rsi,QWORD PTR [rsp+0x38]
   140001bde:	add    rsp,0x20
   140001be2:	pop    rdi
   140001be3:	ret    
   140001be4:	int3   
   140001be5:	int3   
   140001be6:	int3   
   140001be7:	int3   
   140001be8:	int3   
   140001be9:	int3   
   140001bea:	int3   
   140001beb:	int3   
   140001bec:	int3   
   140001bed:	int3   
   140001bee:	int3   
   140001bef:	int3   
   140001bf0:	mov    QWORD PTR [rsp+0x10],rbx
   140001bf5:	mov    QWORD PTR [rsp+0x18],rbp
   140001bfa:	mov    QWORD PTR [rsp+0x20],rsi
   140001bff:	push   rdi
   140001c00:	sub    rsp,0x20
   140001c04:	mov    rbp,QWORD PTR [rcx+0x8]
   140001c08:	lea    rax,[rip+0xe1]        # 0x140001cf0
   140001c0f:	mov    edi,DWORD PTR [r8]
   140001c12:	mov    rbx,QWORD PTR [rdx]
   140001c15:	mov    rsi,QWORD PTR [rcx+0x18]
   140001c19:	cmp    rbp,rax
   140001c1c:	jne    0x1400044c0
   140001c22:	cmp    edi,0x4
   140001c25:	jne    0x140001c53
   140001c27:	test   rbx,rbx
   140001c2a:	je     0x140001c53
   140001c2c:	cmp    DWORD PTR [rbx],0x0
   140001c2f:	lea    r8,[rsp+0x30]
   140001c34:	mov    DWORD PTR [rsp+0x30],0x0
   140001c3c:	mov    rcx,rsi
   140001c3f:	je     0x140001c68
   140001c41:	xor    edx,edx
   140001c43:	call   0x140001fb0
   140001c48:	cmp    DWORD PTR [rsp+0x30],0x0
   140001c4d:	jne    0x1400044b0
   140001c53:	mov    rbx,QWORD PTR [rsp+0x38]
   140001c58:	mov    rbp,QWORD PTR [rsp+0x40]
   140001c5d:	mov    rsi,QWORD PTR [rsp+0x48]
   140001c62:	add    rsp,0x20
   140001c66:	pop    rdi
   140001c67:	ret    
   140001c68:	mov    edx,0x1
   140001c6d:	call   0x140001fb0
   140001c72:	cmp    DWORD PTR [rsp+0x30],0x0
   140001c77:	je     0x140001c53
   140001c79:	mov    edx,0x2
   140001c7e:	mov    rcx,rsi
   140001c81:	call   0x140001d60
   140001c86:	jmp    0x140001c53
   140001c88:	int3   
   140001c89:	int3   
   140001c8a:	int3   
   140001c8b:	int3   
   140001c8c:	int3   
   140001c8d:	int3   
   140001c8e:	int3   
   140001c8f:	int3   
   140001c90:	rex push rbx
   140001c92:	sub    rsp,0x20
   140001c96:	mov    rbx,rcx
   140001c99:	test   rdx,rdx
   140001c9c:	jne    0x140001cb8
   140001c9e:	lea    ecx,[rdx+0x28]
   140001ca1:	call   0x140002e18
   140001ca6:	mov    rdx,rax
   140001ca9:	test   rax,rax
   140001cac:	je     0x140001cdb
   140001cae:	mov    QWORD PTR [rsp+0x38],rax
   140001cb3:	test   rax,rax
   140001cb6:	je     0x140001cd2
   140001cb8:	lea    rax,[rip+0x4a01]        # 0x1400066c0
   140001cbf:	mov    QWORD PTR [rdx],rax
   140001cc2:	mov    rax,QWORD PTR [rbx+0x8]
   140001cc6:	mov    QWORD PTR [rdx+0x8],rax
   140001cca:	mov    rax,QWORD PTR [rbx+0x18]
   140001cce:	mov    QWORD PTR [rdx+0x18],rax
   140001cd2:	mov    rax,rdx
   140001cd5:	add    rsp,0x20
   140001cd9:	pop    rbx
   140001cda:	ret    
   140001cdb:	call   QWORD PTR [rip+0x4597]        # 0x140006278
   140001ce1:	int3   
   140001ce2:	int3   
   140001ce3:	int3   
   140001ce4:	int3   
   140001ce5:	int3   
   140001ce6:	int3   
   140001ce7:	int3   
   140001ce8:	int3   
   140001ce9:	int3   
   140001cea:	int3   
   140001ceb:	int3   
   140001cec:	int3   
   140001ced:	int3   
   140001cee:	int3   
   140001cef:	int3   
   140001cf0:	cmp    r8d,0x4
   140001cf4:	jne    0x140001d28
   140001cf6:	push   rbx
   140001cf7:	sub    rsp,0x20
   140001cfb:	mov    rbx,rcx
   140001cfe:	test   rdx,rdx
   140001d01:	je     0x140001d23
   140001d03:	cmp    DWORD PTR [rdx],0x0
   140001d06:	lea    r8,[rsp+0x40]
   140001d0b:	mov    DWORD PTR [rsp+0x40],0x0
   140001d13:	je     0x140001d29
   140001d15:	xor    edx,edx
   140001d17:	call   0x140001fb0
   140001d1c:	cmp    DWORD PTR [rsp+0x40],0x0
   140001d21:	jne    0x140001d49
   140001d23:	add    rsp,0x20
   140001d27:	pop    rbx
   140001d28:	ret    
   140001d29:	mov    edx,0x1
   140001d2e:	call   0x140001fb0
   140001d33:	cmp    DWORD PTR [rsp+0x40],0x0
   140001d38:	je     0x140001d23
   140001d3a:	mov    edx,0x2
   140001d3f:	mov    rcx,rbx
   140001d42:	call   0x140001d60
   140001d47:	jmp    0x140001d23
   140001d49:	xor    edx,edx
   140001d4b:	jmp    0x140001d3f
   140001d4d:	int3   
   140001d4e:	int3   
   140001d4f:	int3   
   140001d50:	int3   
   140001d51:	int3   
   140001d52:	int3   
   140001d53:	int3   
   140001d54:	int3   
   140001d55:	int3   
   140001d56:	int3   
   140001d57:	int3   
   140001d58:	int3   
   140001d59:	int3   
   140001d5a:	int3   
   140001d5b:	int3   
   140001d5c:	int3   
   140001d5d:	int3   
   140001d5e:	int3   
   140001d5f:	int3   
   140001d60:	mov    r11,rsp
   140001d63:	push   rsi
   140001d64:	push   rdi
   140001d65:	push   r14
   140001d67:	sub    rsp,0x630
   140001d6e:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140001d77:	mov    QWORD PTR [r11+0x18],rbx
   140001d7b:	mov    QWORD PTR [r11+0x20],rbp
   140001d7f:	mov    rax,QWORD PTR [rip+0x8282]        # 0x14000a008
   140001d86:	xor    rax,rsp
   140001d89:	mov    QWORD PTR [rsp+0x620],rax
   140001d91:	mov    edi,edx
   140001d93:	mov    r14,rcx
   140001d96:	xor    edx,edx
   140001d98:	mov    r8d,0x208
   140001d9e:	lea    rcx,[r11-0x238]
   140001da5:	call   0x1400039b2
   140001daa:	mov    r8d,0x104
   140001db0:	lea    rdx,[rsp+0x410]
   140001db8:	lea    rcx,[rip+0x48b1]        # 0x140006670
   140001dbf:	call   QWORD PTR [rip+0x42bb]        # 0x140006080
   140001dc5:	test   eax,eax
   140001dc7:	je     0x140003cf6
   140001dcd:	xor    edx,edx
   140001dcf:	lea    r8d,[rdx+0x22]
   140001dd3:	lea    rcx,[rsp+0x410]
   140001ddb:	call   QWORD PTR [rip+0x4247]        # 0x140006028
   140001de1:	mov    rbx,rax
   140001de4:	mov    QWORD PTR [rsp+0x30],rax
   140001de9:	test   rax,rax
   140001dec:	je     0x140003d28
   140001df2:	xor    edx,edx
   140001df4:	mov    r8d,0x3d0
   140001dfa:	lea    rcx,[rsp+0x40]
   140001dff:	call   0x1400039b2
   140001e04:	mov    ecx,0x32
   140001e09:	call   QWORD PTR [rip+0x4331]        # 0x140006140
   140001e0f:	mov    esi,eax
   140001e11:	mov    ecx,0x31
   140001e16:	call   QWORD PTR [rip+0x4324]        # 0x140006140
   140001e1c:	mov    r9d,eax
   140001e1f:	xor    ebp,ebp
   140001e21:	mov    DWORD PTR [rsp+0x28],ebp
   140001e25:	mov    DWORD PTR [rsp+0x20],esi
   140001e29:	lea    edx,[rbp+0xa]
   140001e2c:	lea    r8d,[rbp+0x1]
   140001e30:	mov    rcx,rbx
   140001e33:	call   QWORD PTR [rip+0x42ff]        # 0x140006138
   140001e39:	mov    QWORD PTR [rsp+0x60],rax
   140001e3e:	test   rax,rax
   140001e41:	je     0x140003d56
   140001e47:	mov    DWORD PTR [rsp+0x40],0x3d0
   140001e4f:	mov    rax,QWORD PTR [r14+0x18]
   140001e53:	mov    QWORD PTR [rsp+0x48],rax
   140001e58:	mov    DWORD PTR [rsp+0x50],ebp
   140001e5c:	mov    DWORD PTR [rsp+0x54],0x27
   140001e64:	mov    DWORD PTR [rsp+0x58],0x401
   140001e6c:	movups xmm0,XMMWORD PTR [rip+0x4f6d]        # 0x140006de0
   140001e73:	movups XMMWORD PTR [rsp+0x3f8],xmm0
   140001e7b:	mov    r9d,0x80
   140001e81:	lea    r8,[rsp+0x68]
   140001e86:	lea    edx,[rbp+0x67]
   140001e89:	mov    rcx,QWORD PTR [r14+0x10]
   140001e8d:	call   QWORD PTR [rip+0x4235]        # 0x1400060c8
   140001e93:	test   eax,eax
   140001e95:	je     0x140003d64
   140001e9b:	lea    rdx,[rsp+0x40]
   140001ea0:	mov    ecx,edi
   140001ea2:	call   QWORD PTR [rip+0x4210]        # 0x1400060b8
   140001ea8:	test   eax,eax
   140001eaa:	je     0x140001f04
   140001eac:	cmp    edi,0x2
   140001eaf:	jne    0x140001ecc
   140001eb1:	xor    r9d,r9d
   140001eb4:	xor    r8d,r8d
   140001eb7:	lea    edx,[rbp+0x12]
   140001eba:	mov    rcx,QWORD PTR [r14+0x18]
   140001ebe:	call   QWORD PTR [rip+0x4284]        # 0x140006148
   140001ec4:	test   eax,eax
   140001ec6:	je     0x140003d72
   140001ecc:	test   rbx,rbx
   140001ecf:	je     0x140001eda
   140001ed1:	mov    rcx,rbx
   140001ed4:	call   QWORD PTR [rip+0x41ae]        # 0x140006088
   140001eda:	mov    eax,ebp
   140001edc:	mov    rcx,QWORD PTR [rsp+0x620]
   140001ee4:	xor    rcx,rsp
   140001ee7:	call   0x140003210
   140001eec:	lea    r11,[rsp+0x630]
   140001ef4:	mov    rbx,QWORD PTR [r11+0x30]
   140001ef8:	mov    rbp,QWORD PTR [r11+0x38]
   140001efc:	mov    rsp,r11
   140001eff:	pop    r14
   140001f01:	pop    rdi
   140001f02:	pop    rsi
   140001f03:	ret    
   140001f04:	mov    rcx,QWORD PTR [rsp+0x648]
   140001f0c:	mov    ebp,0x80004005
   140001f11:	mov    DWORD PTR [rsp+0x28],ebp
   140001f15:	lea    rax,[rip+0x4904]        # 0x140006820
   140001f1c:	mov    QWORD PTR [rsp+0x20],rax
   140001f21:	lea    r9,[rip+0x48c8]        # 0x1400067f0
   140001f28:	lea    r8,[rip+0x47d1]        # 0x140006700
   140001f2f:	mov    edx,0xe1
   140001f34:	call   0x140002cf0
   140001f39:	jmp    0x140001ecc
   140001f3b:	int3   
   140001f3c:	int3   
   140001f3d:	int3   
   140001f3e:	int3   
   140001f3f:	int3   
   140001f40:	int3   
   140001f41:	int3   
   140001f42:	int3   
   140001f43:	int3   
   140001f44:	int3   
   140001f45:	int3   
   140001f46:	int3   
   140001f47:	int3   
   140001f48:	int3   
   140001f49:	int3   
   140001f4a:	int3   
   140001f4b:	int3   
   140001f4c:	int3   
   140001f4d:	int3   
   140001f4e:	int3   
   140001f4f:	int3   
   140001f50:	mov    QWORD PTR [rsp+0x8],rbx
   140001f55:	push   rdi
   140001f56:	sub    rsp,0x30
   140001f5a:	mov    ebx,edx
   140001f5c:	mov    rdi,rcx
   140001f5f:	test   edx,edx
   140001f61:	je     0x140001f9d
   140001f63:	cmp    edx,0x2
   140001f66:	jne    0x1400044da
   140001f6c:	lea    edx,[rbx-0x1]
   140001f6f:	lea    r8,[rsp+0x48]
   140001f74:	mov    DWORD PTR [rsp+0x48],0x0
   140001f7c:	call   0x140001fb0
   140001f81:	cmp    DWORD PTR [rsp+0x48],0x0
   140001f86:	je     0x140001fa1
   140001f88:	mov    edx,ebx
   140001f8a:	mov    rcx,rdi
   140001f8d:	call   0x140001d60
   140001f92:	mov    rbx,QWORD PTR [rsp+0x40]
   140001f97:	add    rsp,0x30
   140001f9b:	pop    rdi
   140001f9c:	ret    
   140001f9d:	xor    edx,edx
   140001f9f:	jmp    0x140001f6f
   140001fa1:	xor    eax,eax
   140001fa3:	jmp    0x140001f92
   140001fa5:	int3   
   140001fa6:	int3   
   140001fa7:	int3   
   140001fa8:	int3   
   140001fa9:	int3   
   140001faa:	int3   
   140001fab:	int3   
   140001fac:	int3   
   140001fad:	int3   
   140001fae:	int3   
   140001faf:	int3   
   140001fb0:	rex push rbp
   140001fb2:	push   rbx
   140001fb3:	push   rsi
   140001fb4:	push   rdi
   140001fb5:	push   r12
   140001fb7:	push   r14
   140001fb9:	push   r15
   140001fbb:	lea    rbp,[rsp-0x27]
   140001fc0:	sub    rsp,0xe0
   140001fc7:	mov    QWORD PTR [rbp-0x59],0xfffffffffffffffe
   140001fcf:	mov    rax,QWORD PTR [rip+0x8032]        # 0x14000a008
   140001fd6:	xor    rax,rsp
   140001fd9:	mov    QWORD PTR [rbp+0x17],rax
   140001fdd:	mov    r12,r8
   140001fe0:	movsxd rdi,edx
   140001fe3:	mov    r15,rcx
   140001fe6:	lea    rbx,[rcx+0x58]
   140001fea:	mov    QWORD PTR [rbp-0x69],rbx
   140001fee:	mov    rcx,rbx
   140001ff1:	call   QWORD PTR [rip+0x40a9]        # 0x1400060a0
   140001ff7:	mov    BYTE PTR [rbp-0x61],0x1
   140001ffb:	xor    r14d,r14d
   140001ffe:	mov    DWORD PTR [r12],r14d
   140002002:	movsxd rsi,DWORD PTR [r15+0x80]
   140002009:	test   esi,esi
   14000200b:	je     0x140002211
   140002011:	cmp    esi,0x1
   140002014:	je     0x140002029
   140002016:	cmp    esi,0x2
   140002019:	je     0x1400022d7
   14000201f:	cmp    esi,0x3
   140002022:	je     0x140002033
   140002024:	jmp    0x14000226e
   140002029:	test   edi,edi
   14000202b:	jne    0x140002250
   140002031:	jmp    0x140002053
   140002033:	test   edi,edi
   140002035:	je     0x140002053
   140002037:	cmp    edi,0x1
   14000203a:	jne    0x140003e47
   140002040:	mov    DWORD PTR [r15+0x80],0x4
   14000204b:	mov    DWORD PTR [r12],0x2
   140002053:	cmp    DWORD PTR [rip+0x7fd6],0x5        # 0x14000a030
   14000205a:	jbe    0x1400021e7
   140002060:	lea    r8,[rip+0xffffffffffffdf99]        # 0x140000000
   140002067:	mov    rcx,QWORD PTR [r8+rdi*8+0x7010]
   14000206f:	lea    r9,[rip+0x45f2]        # 0x140006668
   140002076:	mov    rdx,r9
   140002079:	mov    rax,r14
   14000207c:	test   rcx,rcx
   14000207f:	je     0x14000209a
   140002081:	mov    rdx,rcx
   140002084:	or     rax,0xffffffffffffffff
   140002088:	nop    DWORD PTR [rax+rax*1+0x0]
   140002090:	inc    rax
   140002093:	cmp    WORD PTR [rcx+rax*2],r14w
   140002098:	jne    0x140002090
   14000209a:	mov    QWORD PTR [rbp-0x29],rdx
   14000209e:	lea    eax,[rax*2+0x2]
   1400020a5:	mov    DWORD PTR [rbp-0x21],eax
   1400020a8:	mov    DWORD PTR [rbp-0x1d],r14d
   1400020ac:	mov    rcx,QWORD PTR [r8+rsi*8+0x71e0]
   1400020b4:	mov    rdx,r9
   1400020b7:	mov    rax,r14
   1400020ba:	test   rcx,rcx
   1400020bd:	je     0x1400020d0
   1400020bf:	mov    rdx,rcx
   1400020c2:	or     rax,0xffffffffffffffff
   1400020c6:	inc    rax
   1400020c9:	cmp    WORD PTR [rcx+rax*2],r14w
   1400020ce:	jne    0x1400020c6
   1400020d0:	mov    QWORD PTR [rbp-0x19],rdx
   1400020d4:	lea    eax,[rax*2+0x2]
   1400020db:	mov    DWORD PTR [rbp-0x11],eax
   1400020de:	mov    DWORD PTR [rbp-0xd],r14d
   1400020e2:	movsxd rax,DWORD PTR [r15+0x80]
   1400020e9:	mov    rcx,QWORD PTR [r8+rax*8+0x71e0]
   1400020f1:	mov    rdx,r9
   1400020f4:	mov    rax,r14
   1400020f7:	test   rcx,rcx
   1400020fa:	je     0x14000210d
   1400020fc:	mov    rdx,rcx
   1400020ff:	or     rax,0xffffffffffffffff
   140002103:	inc    rax
   140002106:	cmp    WORD PTR [rcx+rax*2],r14w
   14000210b:	jne    0x140002103
   14000210d:	mov    QWORD PTR [rbp-0x9],rdx
   140002111:	lea    eax,[rax*2+0x2]
   140002118:	mov    DWORD PTR [rbp-0x1],eax
   14000211b:	mov    DWORD PTR [rbp+0x3],r14d
   14000211f:	movsxd rax,DWORD PTR [r12]
   140002123:	mov    rcx,QWORD PTR [r8+rax*8+0x6ff8]
   14000212b:	mov    rax,r14
   14000212e:	test   rcx,rcx
   140002131:	je     0x14000214a
   140002133:	mov    r9,rcx
   140002136:	or     rax,0xffffffffffffffff
   14000213a:	nop    WORD PTR [rax+rax*1+0x0]
   140002140:	inc    rax
   140002143:	cmp    WORD PTR [rcx+rax*2],r14w
   140002148:	jne    0x140002140
   14000214a:	mov    QWORD PTR [rbp+0x7],r9
   14000214e:	lea    ecx,[rax*2+0x2]
   140002155:	mov    DWORD PTR [rbp+0xf],ecx
   140002158:	mov    DWORD PTR [rbp+0x13],r14d
   14000215c:	lea    rcx,[rip+0x50ef]        # 0x140007252
   140002163:	lea    rax,[rip+0x509e]        # 0x140007208
   14000216a:	sub    ecx,eax
   14000216c:	movzx  eax,BYTE PTR [rip+0x51e7]        # 0x14000735a
   140002173:	or     ecx,0xb000000
   140002179:	mov    DWORD PTR [rbp-0x79],ecx
   14000217c:	movzx  eax,WORD PTR [rip+0x50d0]        # 0x140007253
   140002183:	mov    DWORD PTR [rbp-0x75],eax
   140002186:	mov    QWORD PTR [rbp-0x71],r14
   14000218a:	mov    rax,QWORD PTR [rip+0x7ea7]        # 0x14000a038
   140002191:	mov    QWORD PTR [rbp-0x49],rax
   140002195:	movzx  eax,WORD PTR [rax]
   140002198:	mov    DWORD PTR [rbp-0x41],eax
   14000219b:	mov    DWORD PTR [rbp-0x3d],0x2
   1400021a2:	lea    rax,[rip+0x50b4]        # 0x14000725d
   1400021a9:	mov    QWORD PTR [rbp-0x39],rax
   1400021ad:	mov    DWORD PTR [rbp-0x31],0x5e
   1400021b4:	mov    DWORD PTR [rbp-0x2d],0x1
   1400021bb:	lea    rax,[rbp-0x49]
   1400021bf:	mov    QWORD PTR [rsp+0x28],rax
   1400021c4:	mov    DWORD PTR [rsp+0x20],0x6
   1400021cc:	xor    r9d,r9d
   1400021cf:	xor    r8d,r8d
   1400021d2:	lea    rdx,[rbp-0x79]
   1400021d6:	mov    rcx,QWORD PTR [rip+0x7e73]        # 0x14000a050
   1400021dd:	call   QWORD PTR [rip+0x3e2d]        # 0x140006010
   1400021e3:	mov    rbx,QWORD PTR [rbp-0x69]
   1400021e7:	mov    rcx,rbx
   1400021ea:	call   QWORD PTR [rip+0x3eb8]        # 0x1400060a8
   1400021f0:	mov    eax,r14d
   1400021f3:	mov    rcx,QWORD PTR [rbp+0x17]
   1400021f7:	xor    rcx,rsp
   1400021fa:	call   0x140003210
   1400021ff:	add    rsp,0xe0
   140002206:	pop    r15
   140002208:	pop    r14
   14000220a:	pop    r12
   14000220c:	pop    rdi
   14000220d:	pop    rsi
   14000220e:	pop    rbx
   14000220f:	pop    rbp
   140002210:	ret    
   140002211:	test   edi,edi
   140002213:	jne    0x140003dc8
   140002219:	mov    DWORD PTR [r15+0x80],0x1
   140002224:	mov    DWORD PTR [r12],0x1
   14000222c:	xor    r9d,r9d
   14000222f:	lea    edx,[rdi+0x57]
   140002232:	mov    r8d,0x1388
   140002238:	mov    rcx,QWORD PTR [r15+0x18]
   14000223c:	call   QWORD PTR [rip+0x3eee]        # 0x140006130
   140002242:	test   rax,rax
   140002245:	jne    0x140002053
   14000224b:	jmp    0x140003da0
   140002250:	cmp    edi,0x1
   140002253:	je     0x1400022c7
   140002255:	cmp    edi,0x2
   140002258:	jne    0x140003ded
   14000225e:	mov    DWORD PTR [r15+0x80],0x3
   140002269:	jmp    0x140002053
   14000226e:	lea    r8,[rip+0xffffffffffffdd8b]        # 0x140000000
   140002275:	mov    rax,QWORD PTR [r8+rsi*8+0x71e0]
   14000227d:	mov    QWORD PTR [rsp+0x38],rax
   140002282:	lea    rax,[rip+0x4507]        # 0x140006790
   140002289:	mov    edx,0x82
   14000228e:	mov    QWORD PTR [rsp+0x30],rax
   140002293:	mov    edi,0x8000ffff
   140002298:	mov    DWORD PTR [rsp+0x28],edi
   14000229c:	lea    rax,[rip+0x44dd]        # 0x140006780
   1400022a3:	mov    QWORD PTR [rsp+0x20],rax
   1400022a8:	lea    r9,[rip+0x44a1]        # 0x140006750
   1400022af:	lea    r8,[rip+0x444a]        # 0x140006700
   1400022b6:	mov    rcx,QWORD PTR [rbp+0x5f]
   1400022ba:	call   0x140002310
   1400022bf:	mov    r14d,edi
   1400022c2:	jmp    0x1400021e7
   1400022c7:	mov    DWORD PTR [r15+0x80],0x2
   1400022d2:	jmp    0x140002053
   1400022d7:	test   edi,edi
   1400022d9:	je     0x140003e12
   1400022df:	cmp    edi,0x1
   1400022e2:	je     0x140002053
   1400022e8:	cmp    edi,0x2
   1400022eb:	jne    0x140003e22
   1400022f1:	mov    DWORD PTR [r15+0x80],0x3
   1400022fc:	jmp    0x14000204b
   140002301:	int3   
   140002302:	int3   
   140002303:	int3   
   140002304:	int3   
   140002305:	int3   
   140002306:	int3   
   140002307:	int3   
   140002308:	int3   
   140002309:	int3   
   14000230a:	int3   
   14000230b:	int3   
   14000230c:	int3   
   14000230d:	int3   
   14000230e:	int3   
   14000230f:	int3   
   140002310:	mov    r11,rsp
   140002313:	sub    rsp,0x58
   140002317:	mov    r10,QWORD PTR [rsp+0x58]
   14000231c:	lea    rax,[r11+0x40]
   140002320:	mov    QWORD PTR [r11-0x10],rax
   140002324:	mov    rax,QWORD PTR [r11+0x38]
   140002328:	mov    QWORD PTR [r11-0x18],rax
   14000232c:	mov    eax,DWORD PTR [rsp+0x88]
   140002333:	mov    DWORD PTR [rsp+0x38],eax
   140002337:	mov    rax,QWORD PTR [rsp+0x80]
   14000233f:	mov    QWORD PTR [r11-0x30],r10
   140002343:	mov    QWORD PTR [r11-0x38],rax
   140002347:	call   0x140002360
   14000234c:	add    rsp,0x58
   140002350:	ret    
   140002351:	int3   
   140002352:	int3   
   140002353:	int3   
   140002354:	int3   
   140002355:	int3   
   140002356:	int3   
   140002357:	int3   
   140002358:	int3   
   140002359:	int3   
   14000235a:	int3   
   14000235b:	int3   
   14000235c:	int3   
   14000235d:	int3   
   14000235e:	int3   
   14000235f:	int3   
   140002360:	rex push rbx
   140002362:	push   rbp
   140002363:	push   rsi
   140002364:	push   rdi
   140002365:	push   r12
   140002367:	push   r14
   140002369:	push   r15
   14000236b:	mov    eax,0x2060
   140002370:	call   0x1400039f0
   140002375:	sub    rsp,rax
   140002378:	mov    rax,QWORD PTR [rip+0x7c89]        # 0x14000a008
   14000237f:	xor    rax,rsp
   140002382:	mov    QWORD PTR [rsp+0x2050],rax
   14000238a:	mov    r14,QWORD PTR [rsp+0x20c0]
   140002392:	mov    rbp,r9
   140002395:	mov    r9,QWORD PTR [rsp+0x20e0]
   14000239d:	mov    rsi,r8
   1400023a0:	mov    r15,QWORD PTR [rsp+0x20c8]
   1400023a8:	mov    edi,edx
   1400023aa:	mov    r12,QWORD PTR [rsp+0x20e8]
   1400023b2:	mov    rbx,rcx
   1400023b5:	test   r9,r9
   1400023b8:	je     0x140004516
   1400023be:	lea    r8,[rip+0x43eb]        # 0x1400067b0
   1400023c5:	mov    edx,0x800
   1400023ca:	lea    rcx,[rsp+0x1050]
   1400023d2:	call   0x140002470
   1400023d7:	mov    r9,r12
   1400023da:	lea    r8,[rsp+0x1050]
   1400023e2:	mov    edx,0x7ff
   1400023e7:	lea    rcx,[rsp+0x50]
   1400023ec:	call   QWORD PTR [rip+0x3f5e]        # 0x140006350
   1400023f2:	test   eax,eax
   1400023f4:	js     0x14000245b
   1400023f6:	cdqe   
   1400023f8:	cmp    rax,0x7ff
   1400023fe:	ja     0x14000245b
   140002400:	je     0x14000245b
   140002402:	lea    rax,[rsp+0x50]
   140002407:	mov    r9,rbp
   14000240a:	mov    QWORD PTR [rsp+0x40],rax
   14000240f:	mov    r8,rsi
   140002412:	mov    eax,DWORD PTR [rsp+0x20d8]
   140002419:	mov    edx,edi
   14000241b:	mov    DWORD PTR [rsp+0x38],eax
   14000241f:	mov    rcx,rbx
   140002422:	mov    DWORD PTR [rsp+0x30],0x1
   14000242a:	mov    QWORD PTR [rsp+0x28],r15
   14000242f:	mov    QWORD PTR [rsp+0x20],r14
   140002434:	call   0x1400024f0
   140002439:	mov    rcx,QWORD PTR [rsp+0x2050]
   140002441:	xor    rcx,rsp
   140002444:	call   0x140003210
   140002449:	add    rsp,0x2060
   140002450:	pop    r15
   140002452:	pop    r14
   140002454:	pop    r12
   140002456:	pop    rdi
   140002457:	pop    rsi
   140002458:	pop    rbp
   140002459:	pop    rbx
   14000245a:	ret    
   14000245b:	xor    eax,eax
   14000245d:	mov    WORD PTR [rsp+0x104e],ax
   140002465:	jmp    0x140002402
   140002467:	int3   
   140002468:	int3   
   140002469:	int3   
   14000246a:	int3   
   14000246b:	int3   
   14000246c:	int3   
   14000246d:	int3   
   14000246e:	int3   
   14000246f:	int3   
   140002470:	mov    QWORD PTR [rsp+0x18],r8
   140002475:	mov    QWORD PTR [rsp+0x20],r9
   14000247a:	push   rsi
   14000247b:	push   rdi
   14000247c:	sub    rsp,0x28
   140002480:	xor    edi,edi
   140002482:	lea    rax,[rdx-0x1]
   140002486:	mov    rsi,rcx
   140002489:	mov    r9d,edi
   14000248c:	cmp    rax,0x7ffffffe
   140002492:	ja     0x1400024cf
   140002494:	test   r9d,r9d
   140002497:	js     0x140004522
   14000249d:	mov    QWORD PTR [rsp+0x20],rbx
   1400024a2:	lea    r9,[rsp+0x58]
   1400024a7:	lea    rbx,[rdx-0x1]
   1400024ab:	mov    rdx,rbx
   1400024ae:	call   QWORD PTR [rip+0x3e9c]        # 0x140006350
   1400024b4:	test   eax,eax
   1400024b6:	js     0x1400024dd
   1400024b8:	cdqe   
   1400024ba:	cmp    rax,rbx
   1400024bd:	ja     0x1400024dd
   1400024bf:	je     0x1400024d7
   1400024c1:	mov    rbx,QWORD PTR [rsp+0x20]
   1400024c6:	mov    eax,edi
   1400024c8:	add    rsp,0x28
   1400024cc:	pop    rdi
   1400024cd:	pop    rsi
   1400024ce:	ret    
   1400024cf:	mov    r9d,0x80070057
   1400024d5:	jmp    0x140002494
   1400024d7:	mov    WORD PTR [rsi+rbx*2],di
   1400024db:	jmp    0x1400024c1
   1400024dd:	mov    WORD PTR [rsi+rbx*2],di
   1400024e1:	mov    edi,0x8007007a
   1400024e6:	jmp    0x1400024c1
   1400024e8:	int3   
   1400024e9:	int3   
   1400024ea:	int3   
   1400024eb:	int3   
   1400024ec:	int3   
   1400024ed:	int3   
   1400024ee:	int3   
   1400024ef:	int3   
   1400024f0:	rex push rbx
   1400024f2:	push   rdi
   1400024f3:	mov    eax,0x15c8
   1400024f8:	call   0x1400039f0
   1400024fd:	sub    rsp,rax
   140002500:	mov    rax,QWORD PTR [rip+0x7b01]        # 0x14000a008
   140002507:	xor    rax,rsp
   14000250a:	mov    QWORD PTR [rsp+0x15b0],rax
   140002512:	mov    ebx,DWORD PTR [rsp+0x1610]
   140002519:	mov    r10,QWORD PTR [rsp+0x1600]
   140002521:	mov    r11,QWORD PTR [rsp+0x1608]
   140002529:	test   ebx,ebx
   14000252b:	je     0x140004536
   140002531:	xor    dil,dil
   140002534:	lea    rax,[rsp+0x120]
   14000253c:	mov    QWORD PTR [rsp+0x70],rax
   140002541:	lea    rax,[rsp+0x1b0]
   140002549:	mov    QWORD PTR [rsp+0x60],rax
   14000254e:	lea    rax,[rsp+0x5b0]
   140002556:	mov    QWORD PTR [rsp+0x50],rax
   14000255b:	mov    rax,QWORD PTR [rsp+0x1620]
   140002563:	mov    BYTE PTR [rsp+0x48],dil
   140002568:	mov    QWORD PTR [rsp+0x40],rax
   14000256d:	mov    eax,DWORD PTR [rsp+0x1618]
   140002574:	mov    DWORD PTR [rsp+0x38],eax
   140002578:	mov    DWORD PTR [rsp+0x30],ebx
   14000257c:	mov    QWORD PTR [rsp+0x28],r11
   140002581:	mov    QWORD PTR [rsp+0x20],r10
   140002586:	call   0x1400025c0
   14000258b:	cmp    ebx,0x4
   14000258e:	je     0x14000454c
   140002594:	test   ebx,ebx
   140002596:	je     0x140004558
   14000259c:	mov    rcx,QWORD PTR [rsp+0x15b0]
   1400025a4:	xor    rcx,rsp
   1400025a7:	call   0x140003210
   1400025ac:	add    rsp,0x15c8
   1400025b3:	pop    rdi
   1400025b4:	pop    rbx
   1400025b5:	ret    
   1400025b6:	int3   
   1400025b7:	int3   
   1400025b8:	int3   
   1400025b9:	int3   
   1400025ba:	int3   
   1400025bb:	int3   
   1400025bc:	int3   
   1400025bd:	int3   
   1400025be:	int3   
   1400025bf:	int3   
   1400025c0:	mov    QWORD PTR [rsp+0x18],rbx
   1400025c5:	mov    DWORD PTR [rsp+0x10],edx
   1400025c9:	mov    QWORD PTR [rsp+0x8],rcx
   1400025ce:	push   rbp
   1400025cf:	push   rsi
   1400025d0:	push   rdi
   1400025d1:	push   r12
   1400025d3:	push   r13
   1400025d5:	push   r14
   1400025d7:	push   r15
   1400025d9:	sub    rsp,0x40
   1400025dd:	mov    rax,QWORD PTR [rsp+0xd0]
   1400025e5:	xor    edi,edi
   1400025e7:	mov    r14,QWORD PTR [rsp+0xe0]
   1400025ef:	mov    r12,r9
   1400025f2:	mov    r15d,DWORD PTR [rsp+0xb0]
   1400025fa:	mov    r13,r8
   1400025fd:	mov    esi,DWORD PTR [rsp+0xb8]
   140002604:	mov    ebp,edi
   140002606:	mov    WORD PTR [rax],di
   140002609:	mov    BYTE PTR [r14],dil
   14000260c:	cmp    r15d,0x1
   140002610:	jne    0x1400045bc
   140002616:	mov    ecx,esi
   140002618:	call   0x140002a48
   14000261d:	mov    ebp,eax
   14000261f:	mov    rbx,QWORD PTR [rsp+0xf0]
   140002627:	mov    eax,0x1
   14000262c:	mov    DWORD PTR [rbx],r15d
   14000262f:	mov    DWORD PTR [rbx+0x4],esi
   140002632:	lock xadd DWORD PTR [rip+0x81c2],eax        # 0x14000a7fc
   14000263a:	inc    eax
   14000263c:	mov    DWORD PTR [rbx+0x8],eax
   14000263f:	mov    rax,QWORD PTR [rsp+0xc0]
   140002647:	test   rax,rax
   14000264a:	je     0x14000278e
   140002650:	cmp    WORD PTR [rax],di
   140002653:	je     0x14000278e
   140002659:	mov    QWORD PTR [rbx+0x10],rax
   14000265d:	call   QWORD PTR [rip+0x3a05]        # 0x140006068
   140002663:	mov    rsi,QWORD PTR [rip+0x8176]        # 0x14000a7e0
   14000266a:	mov    DWORD PTR [rbx+0x18],eax
   14000266d:	mov    eax,DWORD PTR [rsp+0x88]
   140002674:	mov    DWORD PTR [rbx+0x38],eax
   140002677:	mov    rax,QWORD PTR [rsp+0xa0]
   14000267f:	mov    QWORD PTR [rbx+0x20],rax
   140002683:	mov    rax,QWORD PTR [rsp+0xa8]
   14000268b:	mov    QWORD PTR [rbx+0x80],rax
   140002692:	mov    rax,QWORD PTR [rsp+0x80]
   14000269a:	mov    QWORD PTR [rbx+0x88],rax
   1400026a1:	mov    QWORD PTR [rbx+0x30],r13
   1400026a5:	mov    DWORD PTR [rbx+0x3c],ebp
   1400026a8:	mov    QWORD PTR [rbx+0x28],r12
   1400026ac:	mov    QWORD PTR [rbx+0x40],rdi
   1400026b0:	mov    DWORD PTR [rbx+0x60],edi
   1400026b3:	mov    QWORD PTR [rbx+0x68],rdi
   1400026b7:	mov    QWORD PTR [rbx+0x70],rdi
   1400026bb:	mov    DWORD PTR [rbx+0x48],edi
   1400026be:	mov    QWORD PTR [rbx+0x50],rdi
   1400026c2:	mov    QWORD PTR [rbx+0x58],rdi
   1400026c6:	test   rsi,rsi
   1400026c9:	je     0x1400026e3
   1400026cb:	lea    rax,[rip+0x23e]        # 0x140002910
   1400026d2:	cmp    rsi,rax
   1400026d5:	jne    0x140004645
   1400026db:	call   0x140002910
   1400026e0:	mov    rdi,rax
   1400026e3:	mov    r8d,0x400
   1400026e9:	mov    QWORD PTR [rbx+0x78],rdi
   1400026ed:	mov    rdx,r14
   1400026f0:	mov    rcx,rbx
   1400026f3:	call   0x140001120
   1400026f8:	mov    rdi,QWORD PTR [rip+0x8211]        # 0x14000a910
   1400026ff:	test   rdi,rdi
   140002702:	jne    0x140004656
   140002708:	cmp    DWORD PTR [rbx+0x4],0x0
   14000270c:	jge    0x14000466a
   140002712:	cmp    BYTE PTR [rip+0x806f],0x0        # 0x14000a788
   140002719:	mov    rdi,QWORD PTR [rip+0x80c8]        # 0x14000a7e8
   140002720:	jne    0x140002796
   140002722:	cmp    QWORD PTR [rip+0x81ee],0x0        # 0x14000a918
   14000272a:	jne    0x140002731
   14000272c:	test   rdi,rdi
   14000272f:	je     0x140002796
   140002731:	xor    sil,sil
   140002734:	cmp    BYTE PTR [rsp+0xc8],0x0
   14000273c:	jne    0x1400046b7
   140002742:	test   sil,sil
   140002745:	jne    0x1400046b7
   14000274b:	test   rdi,rdi
   14000274e:	je     0x140002776
   140002750:	cmp    BYTE PTR [rip+0x81d1],sil        # 0x14000a928
   140002757:	jne    0x140002776
   140002759:	lea    rax,[rip+0x50]        # 0x1400027b0
   140002760:	cmp    rdi,rax
   140002763:	jne    0x14000469e
   140002769:	xor    r8d,r8d
   14000276c:	xor    edx,edx
   14000276e:	mov    rcx,rbx
   140002771:	call   0x1400027b0
   140002776:	mov    rbx,QWORD PTR [rsp+0x90]
   14000277e:	add    rsp,0x40
   140002782:	pop    r15
   140002784:	pop    r14
   140002786:	pop    r13
   140002788:	pop    r12
   14000278a:	pop    rdi
   14000278b:	pop    rsi
   14000278c:	pop    rbp
   14000278d:	ret    
   14000278e:	mov    rax,rdi
   140002791:	jmp    0x140002659
   140002796:	mov    sil,0x1
   140002799:	jmp    0x140002734
   14000279b:	int3   
   14000279c:	int3   
   14000279d:	int3   
   14000279e:	int3   
   14000279f:	int3   
   1400027a0:	int3   
   1400027a1:	int3   
   1400027a2:	int3   
   1400027a3:	int3   
   1400027a4:	int3   
   1400027a5:	int3   
   1400027a6:	int3   
   1400027a7:	int3   
   1400027a8:	int3   
   1400027a9:	int3   
   1400027aa:	int3   
   1400027ab:	int3   
   1400027ac:	int3   
   1400027ad:	int3   
   1400027ae:	int3   
   1400027af:	int3   
   1400027b0:	mov    r11,rsp
   1400027b3:	sub    rsp,0xe8
   1400027ba:	mov    rax,QWORD PTR [rip+0x7847]        # 0x14000a008
   1400027c1:	xor    rax,rsp
   1400027c4:	mov    QWORD PTR [rsp+0xd0],rax
   1400027cc:	mov    eax,DWORD PTR [rcx]
   1400027ce:	dec    eax
   1400027d0:	test   eax,0xfffffffd
   1400027d5:	jne    0x14000283f
   1400027d7:	cmp    DWORD PTR [rip+0x7852],0x5        # 0x14000a030
   1400027de:	mov    r8d,DWORD PTR [rcx+0x38]
   1400027e2:	mov    r10d,DWORD PTR [rcx+0x4]
   1400027e6:	mov    QWORD PTR [r11+0x10],rbx
   1400027ea:	mov    rbx,QWORD PTR [rcx+0x30]
   1400027ee:	mov    QWORD PTR [r11+0x18],rbp
   1400027f2:	mov    rbp,QWORD PTR [rcx+0x10]
   1400027f6:	mov    QWORD PTR [r11+0x20],rsi
   1400027fa:	mov    rsi,QWORD PTR [rcx+0x28]
   1400027fe:	mov    QWORD PTR [r11-0x8],rdi
   140002802:	mov    rdi,QWORD PTR [rcx+0x20]
   140002806:	mov    DWORD PTR [rsp+0x48],r8d
   14000280b:	mov    DWORD PTR [rsp+0x40],r10d
   140002810:	ja     0x140002857
   140002812:	test   BYTE PTR [rip+0x80e7],0x8        # 0x14000a900
   140002819:	jne    0x140004716
   14000281f:	mov    rsi,QWORD PTR [rsp+0x108]
   140002827:	mov    rbp,QWORD PTR [rsp+0x100]
   14000282f:	mov    rbx,QWORD PTR [rsp+0xf8]
   140002837:	mov    rdi,QWORD PTR [rsp+0xe0]
   14000283f:	mov    rcx,QWORD PTR [rsp+0xd0]
   140002847:	xor    rcx,rsp
   14000284a:	call   0x140003210
   14000284f:	add    rsp,0xe8
   140002856:	ret    
   140002857:	movabs rdx,0x400000000000
   140002861:	call   0x140002d80
   140002866:	test   al,al
   140002868:	je     0x140002812
   14000286a:	lea    rax,[rsp+0x40]
   14000286f:	mov    QWORD PTR [rsp+0x78],0x4
   140002878:	mov    rdx,rbp
   14000287b:	mov    QWORD PTR [rsp+0x70],rax
   140002880:	lea    rcx,[rsp+0x80]
   140002888:	call   0x140002aa0
   14000288d:	lea    rcx,[rsp+0x90]
   140002895:	mov    rdx,rsi
   140002898:	call   0x140002ca0
   14000289d:	lea    rcx,[rsp+0xa0]
   1400028a5:	mov    rdx,rdi
   1400028a8:	call   0x140002ca0
   1400028ad:	lea    rcx,[rsp+0xb0]
   1400028b5:	mov    rdx,rbx
   1400028b8:	call   0x140002ca0
   1400028bd:	lea    rdx,[rsp+0x48]
   1400028c2:	mov    QWORD PTR [rsp+0xc8],0x4
   1400028ce:	mov    QWORD PTR [rsp+0xc0],rdx
   1400028d6:	lea    rax,[rsp+0x50]
   1400028db:	mov    QWORD PTR [rsp+0x28],rax
   1400028e0:	lea    rdx,[rip+0x49d5]        # 0x1400072bc
   1400028e7:	mov    DWORD PTR [rsp+0x20],0x8
   1400028ef:	call   0x140002bf0
   1400028f4:	mov    r8d,DWORD PTR [rsp+0x48]
   1400028f9:	mov    r10d,DWORD PTR [rsp+0x40]
   1400028fe:	jmp    0x140002812
   140002903:	int3   
   140002904:	int3   
   140002905:	int3   
   140002906:	int3   
   140002907:	int3   
   140002908:	int3   
   140002909:	int3   
   14000290a:	int3   
   14000290b:	int3   
   14000290c:	int3   
   14000290d:	int3   
   14000290e:	int3   
   14000290f:	int3   
   140002910:	rex push rdi
   140002912:	sub    rsp,0x150
   140002919:	mov    rax,QWORD PTR [rip+0x76e8]        # 0x14000a008
   140002920:	xor    rax,rsp
   140002923:	mov    QWORD PTR [rsp+0x140],rax
   14000292b:	movzx  eax,BYTE PTR [rip+0x7ebe]        # 0x14000a7f0
   140002932:	test   al,al
   140002934:	jne    0x140002a37
   14000293a:	mov    QWORD PTR [rsp+0x160],rbx
   140002942:	lea    rdi,[rip+0x7e47]        # 0x14000a790
   140002949:	mov    ebx,0x40
   14000294e:	xor    edx,edx
   140002950:	mov    r8d,ebx
   140002953:	mov    rcx,rdi
   140002956:	call   0x1400039b2
   14000295b:	lea    r8,[rsp+0x20]
   140002960:	mov    QWORD PTR [rsp+0x20],0x0
   140002969:	lea    rdx,[rip+0x10d0]        # 0x140003a40
   140002970:	lea    ecx,[rbx-0x3a]
   140002973:	call   QWORD PTR [rip+0x36b7]        # 0x140006030
   140002979:	test   eax,eax
   14000297b:	je     0x140002a0c
   140002981:	mov    rcx,QWORD PTR [rsp+0x20]
   140002986:	lea    rdx,[rsp+0x30]
   14000298b:	mov    r8d,0x104
   140002991:	call   QWORD PTR [rip+0x36b1]        # 0x140006048
   140002997:	test   eax,eax
   140002999:	je     0x140002a0c
   14000299b:	lea    rcx,[rsp+0x30]
   1400029a0:	or     rax,0xffffffffffffffff
   1400029a4:	inc    rax
   1400029a7:	cmp    BYTE PTR [rcx+rax*1],0x0
   1400029ab:	jne    0x1400029a4
   1400029ad:	lea    rcx,[rsp+0x30]
   1400029b2:	add    rax,rcx
   1400029b5:	lea    rcx,[rsp+0x30]
   1400029ba:	cmp    rax,rcx
   1400029bd:	jbe    0x1400029d3
   1400029bf:	nop
   1400029c0:	cmp    BYTE PTR [rax-0x1],0x5c
   1400029c4:	je     0x1400029d3
   1400029c6:	dec    rax
   1400029c9:	lea    rcx,[rsp+0x30]
   1400029ce:	cmp    rax,rcx
   1400029d1:	ja     0x1400029c0
   1400029d3:	mov    rdx,rdi
   1400029d6:	sub    rax,rdi
   1400029d9:	nop    DWORD PTR [rax+0x0]
   1400029e0:	lea    rcx,[rbx+0x7fffffbe]
   1400029e7:	test   rcx,rcx
   1400029ea:	je     0x140002a04
   1400029ec:	movzx  ecx,BYTE PTR [rax+rdx*1]
   1400029f0:	test   cl,cl
   1400029f2:	je     0x140002a04
   1400029f4:	mov    BYTE PTR [rdx],cl
   1400029f6:	inc    rdx
   1400029f9:	sub    rbx,0x1
   1400029fd:	jne    0x1400029e0
   1400029ff:	dec    rdx
   140002a02:	jmp    0x140002a09
   140002a04:	test   rbx,rbx
   140002a07:	je     0x1400029ff
   140002a09:	mov    BYTE PTR [rdx],0x0
   140002a0c:	mov    rbx,QWORD PTR [rsp+0x160]
   140002a14:	mov    rax,rdi
   140002a17:	mov    BYTE PTR [rip+0x7dd2],0x1        # 0x14000a7f0
   140002a1e:	mov    rcx,QWORD PTR [rsp+0x140]
   140002a26:	xor    rcx,rsp
   140002a29:	call   0x140003210
   140002a2e:	add    rsp,0x150
   140002a35:	pop    rdi
   140002a36:	ret    
   140002a37:	lea    rax,[rip+0x7d52]        # 0x14000a790
   140002a3e:	jmp    0x140002a1e
   140002a40:	int3   
   140002a41:	int3   
   140002a42:	int3   
   140002a43:	int3   
   140002a44:	int3   
   140002a45:	int3   
   140002a46:	int3   
   140002a47:	int3   
   140002a48:	mov    DWORD PTR [rip+0x7daa],ecx        # 0x14000a7f8
   140002a4e:	mov    eax,0x1
   140002a53:	lock xadd DWORD PTR [rip+0x7d99],eax        # 0x14000a7f4
   140002a5b:	inc    eax
   140002a5d:	ret    
   140002a5e:	int3   
   140002a5f:	int3   
   140002a60:	int3   
   140002a61:	int3   
   140002a62:	int3   
   140002a63:	int3   
   140002a64:	int3   
   140002a65:	int3   
   140002a66:	int3   
   140002a67:	int3   
   140002a68:	int3   
   140002a69:	int3   
   140002a6a:	int3   
   140002a6b:	int3   
   140002a6c:	int3   
   140002a6d:	int3   
   140002a6e:	int3   
   140002a6f:	int3   
   140002a70:	sub    rsp,0x38
   140002a74:	call   QWORD PTR [rip+0x3616]        # 0x140006090
   140002a7a:	xor    eax,eax
   140002a7c:	mov    DWORD PTR [rsp+0x20],eax
   140002a80:	jmp    0x140002a8b
   140002a82:	mov    eax,0x8007000e
   140002a87:	mov    DWORD PTR [rsp+0x20],eax
   140002a8b:	add    rsp,0x38
   140002a8f:	ret    
   140002a90:	int3   
   140002a91:	int3   
   140002a92:	int3   
   140002a93:	int3   
   140002a94:	int3   
   140002a95:	int3   
   140002a96:	int3   
   140002a97:	int3   
   140002a98:	int3   
   140002a99:	int3   
   140002a9a:	int3   
   140002a9b:	int3   
   140002a9c:	int3   
   140002a9d:	int3   
   140002a9e:	int3   
   140002a9f:	int3   
   140002aa0:	xor    eax,eax
   140002aa2:	mov    r8,rcx
   140002aa5:	lea    rcx,[rip+0x3bbc]        # 0x140006668
   140002aac:	test   rdx,rdx
   140002aaf:	je     0x140002aca
   140002ab1:	mov    rcx,rdx
   140002ab4:	or     rax,0xffffffffffffffff
   140002ab8:	nop    DWORD PTR [rax+rax*1+0x0]
   140002ac0:	inc    rax
   140002ac3:	cmp    WORD PTR [rdx+rax*2],0x0
   140002ac8:	jne    0x140002ac0
   140002aca:	mov    QWORD PTR [r8],rcx
   140002acd:	lea    ecx,[rax*2+0x2]
   140002ad4:	mov    DWORD PTR [r8+0x8],ecx
   140002ad8:	mov    DWORD PTR [r8+0xc],0x0
   140002ae0:	ret    
   140002ae1:	int3   
   140002ae2:	int3   
   140002ae3:	int3   
   140002ae4:	int3   
   140002ae5:	int3   
   140002ae6:	int3   
   140002ae7:	int3   
   140002ae8:	int3   
   140002ae9:	int3   
   140002aea:	int3   
   140002aeb:	int3   
   140002aec:	int3   
   140002aed:	int3   
   140002aee:	int3   
   140002aef:	int3   
   140002af0:	mov    QWORD PTR [rsp+0x10],rbx
   140002af5:	push   rdi
   140002af6:	sub    rsp,0x90
   140002afd:	mov    rax,QWORD PTR [rip+0x7504]        # 0x14000a008
   140002b04:	xor    rax,rsp
   140002b07:	mov    QWORD PTR [rsp+0x80],rax
   140002b0f:	mov    rbx,rcx
   140002b12:	lea    rdx,[rcx+0x58]
   140002b16:	lea    rcx,[rsp+0x30]
   140002b1b:	call   0x140002bc0
   140002b20:	cmp    BYTE PTR [rsp+0x38],0x0
   140002b25:	movsxd rdi,DWORD PTR [rbx+0x80]
   140002b2c:	je     0x140002b39
   140002b2e:	mov    rcx,QWORD PTR [rsp+0x30]
   140002b33:	call   QWORD PTR [rip+0x356f]        # 0x1400060a8
   140002b39:	cmp    edi,0x2
   140002b3c:	ja     0x140004768
   140002b42:	cmp    DWORD PTR [rip+0x74e7],0x5        # 0x14000a030
   140002b49:	jbe    0x140002b8f
   140002b4b:	lea    rdx,[rip+0x3d1e]        # 0x140006870
   140002b52:	lea    rcx,[rsp+0x60]
   140002b57:	call   0x140002ca0
   140002b5c:	lea    rax,[rip+0x467d]        # 0x1400071e0
   140002b63:	mov    rdx,QWORD PTR [rax+rdi*8]
   140002b67:	lea    rcx,[rsp+0x70]
   140002b6c:	call   0x140002aa0
   140002b71:	lea    rax,[rsp+0x40]
   140002b76:	mov    QWORD PTR [rsp+0x28],rax
   140002b7b:	lea    rdx,[rip+0x4697]        # 0x140007219
   140002b82:	mov    DWORD PTR [rsp+0x20],0x4
   140002b8a:	call   0x140002bf0
   140002b8f:	xor    edx,edx
   140002b91:	mov    rcx,rbx
   140002b94:	call   0x140001d60
   140002b99:	mov    rcx,QWORD PTR [rsp+0x80]
   140002ba1:	xor    rcx,rsp
   140002ba4:	call   0x140003210
   140002ba9:	mov    rbx,QWORD PTR [rsp+0xa8]
   140002bb1:	add    rsp,0x90
   140002bb8:	pop    rdi
   140002bb9:	ret    
   140002bba:	int3   
   140002bbb:	int3   
   140002bbc:	int3   
   140002bbd:	int3   
   140002bbe:	int3   
   140002bbf:	int3   
   140002bc0:	rex push rbx
   140002bc2:	sub    rsp,0x20
   140002bc6:	mov    rbx,rcx
   140002bc9:	mov    QWORD PTR [rcx],rdx
   140002bcc:	mov    BYTE PTR [rcx+0x8],0x0
   140002bd0:	mov    rcx,rdx
   140002bd3:	call   QWORD PTR [rip+0x34c7]        # 0x1400060a0
   140002bd9:	mov    rax,rbx
   140002bdc:	mov    BYTE PTR [rbx+0x8],0x1
   140002be0:	add    rsp,0x20
   140002be4:	pop    rbx
   140002be5:	ret    
   140002be6:	int3   
   140002be7:	int3   
   140002be8:	int3   
   140002be9:	int3   
   140002bea:	int3   
   140002beb:	int3   
   140002bec:	int3   
   140002bed:	int3   
   140002bee:	int3   
   140002bef:	int3   
   140002bf0:	sub    rsp,0x48
   140002bf4:	lea    r8,[rdx+0x1]
   140002bf8:	mov    ecx,edx
   140002bfa:	lea    rax,[rip+0x4607]        # 0x140007208
   140002c01:	xor    r9d,r9d
   140002c04:	sub    ecx,eax
   140002c06:	movzx  eax,BYTE PTR [rip+0x474d]        # 0x14000735a
   140002c0d:	movzx  eax,BYTE PTR [rdx]
   140002c10:	mov    rdx,QWORD PTR [rsp+0x78]
   140002c15:	shl    eax,0x18
   140002c18:	or     eax,ecx
   140002c1a:	mov    QWORD PTR [rsp+0x28],rdx
   140002c1f:	mov    DWORD PTR [rsp+0x30],eax
   140002c23:	movzx  eax,WORD PTR [r8]
   140002c27:	mov    DWORD PTR [rsp+0x34],eax
   140002c2b:	mov    eax,DWORD PTR [r8+0x2]
   140002c2f:	mov    DWORD PTR [rsp+0x38],eax
   140002c33:	mov    eax,DWORD PTR [r8+0x6]
   140002c37:	add    r8,0xa
   140002c3b:	mov    DWORD PTR [rsp+0x3c],eax
   140002c3f:	mov    rax,QWORD PTR [rip+0x73f2]        # 0x14000a038
   140002c46:	mov    QWORD PTR [rdx],rax
   140002c49:	mov    rax,QWORD PTR [rip+0x73e8]        # 0x14000a038
   140002c50:	movzx  ecx,WORD PTR [rax]
   140002c53:	mov    QWORD PTR [rdx+0x10],r8
   140002c57:	mov    DWORD PTR [rdx+0x8],ecx
   140002c5a:	mov    DWORD PTR [rdx+0xc],0x2
   140002c61:	movzx  eax,WORD PTR [r8]
   140002c65:	xor    r8d,r8d
   140002c68:	mov    DWORD PTR [rdx+0x18],eax
   140002c6b:	mov    eax,DWORD PTR [rsp+0x70]
   140002c6f:	mov    DWORD PTR [rdx+0x1c],0x1
   140002c76:	lea    rdx,[rsp+0x30]
   140002c7b:	mov    rcx,QWORD PTR [rip+0x73ce]        # 0x14000a050
   140002c82:	mov    DWORD PTR [rsp+0x20],eax
   140002c86:	call   QWORD PTR [rip+0x3384]        # 0x140006010
   140002c8c:	add    rsp,0x48
   140002c90:	ret    
   140002c91:	int3   
   140002c92:	int3   
   140002c93:	int3   
   140002c94:	int3   
   140002c95:	int3   
   140002c96:	int3   
   140002c97:	int3   
   140002c98:	int3   
   140002c99:	int3   
   140002c9a:	int3   
   140002c9b:	int3   
   140002c9c:	int3   
   140002c9d:	int3   
   140002c9e:	int3   
   140002c9f:	int3   
   140002ca0:	xor    eax,eax
   140002ca2:	mov    r8,rcx
   140002ca5:	lea    rcx,[rip+0x3bd5]        # 0x140006881
   140002cac:	test   rdx,rdx
   140002caf:	je     0x140002cc9
   140002cb1:	mov    rcx,rdx
   140002cb4:	or     rax,0xffffffffffffffff
   140002cb8:	nop    DWORD PTR [rax+rax*1+0x0]
   140002cc0:	inc    rax
   140002cc3:	cmp    BYTE PTR [rdx+rax*1],0x0
   140002cc7:	jne    0x140002cc0
   140002cc9:	mov    QWORD PTR [r8],rcx
   140002ccc:	lea    ecx,[rax+0x1]
   140002ccf:	mov    DWORD PTR [r8+0x8],ecx
   140002cd3:	mov    DWORD PTR [r8+0xc],0x0
   140002cdb:	ret    
   140002cdc:	int3   
   140002cdd:	int3   
   140002cde:	int3   
   140002cdf:	int3   
   140002ce0:	int3   
   140002ce1:	int3   
   140002ce2:	int3   
   140002ce3:	int3   
   140002ce4:	int3   
   140002ce5:	int3   
   140002ce6:	int3   
   140002ce7:	int3   
   140002ce8:	int3   
   140002ce9:	int3   
   140002cea:	int3   
   140002ceb:	int3   
   140002cec:	int3   
   140002ced:	int3   
   140002cee:	int3   
   140002cef:	int3   
   140002cf0:	sub    rsp,0x48
   140002cf4:	mov    eax,DWORD PTR [rsp+0x78]
   140002cf8:	mov    r10,QWORD PTR [rsp+0x48]
   140002cfd:	mov    DWORD PTR [rsp+0x38],eax
   140002d01:	mov    rax,QWORD PTR [rsp+0x70]
   140002d06:	mov    DWORD PTR [rsp+0x30],0x1
   140002d0e:	mov    QWORD PTR [rsp+0x28],r10
   140002d13:	mov    QWORD PTR [rsp+0x20],rax
   140002d18:	call   0x140002d30
   140002d1d:	add    rsp,0x48
   140002d21:	ret    
   140002d22:	int3   
   140002d23:	int3   
   140002d24:	int3   
   140002d25:	int3   
   140002d26:	int3   
   140002d27:	int3   
   140002d28:	int3   
   140002d29:	int3   
   140002d2a:	int3   
   140002d2b:	int3   
   140002d2c:	int3   
   140002d2d:	int3   
   140002d2e:	int3   
   140002d2f:	int3   
   140002d30:	sub    rsp,0x58
   140002d34:	mov    eax,DWORD PTR [rsp+0x98]
   140002d3b:	mov    QWORD PTR [rsp+0x40],0x0
   140002d44:	mov    DWORD PTR [rsp+0x38],eax
   140002d48:	mov    eax,DWORD PTR [rsp+0x90]
   140002d4f:	mov    DWORD PTR [rsp+0x30],eax
   140002d53:	mov    rax,QWORD PTR [rsp+0x88]
   140002d5b:	mov    QWORD PTR [rsp+0x28],rax
   140002d60:	mov    rax,QWORD PTR [rsp+0x80]
   140002d68:	mov    QWORD PTR [rsp+0x20],rax
   140002d6d:	call   0x1400024f0
   140002d72:	add    rsp,0x58
   140002d76:	ret    
   140002d77:	int3   
   140002d78:	int3   
   140002d79:	int3   
   140002d7a:	int3   
   140002d7b:	int3   
   140002d7c:	int3   
   140002d7d:	int3   
   140002d7e:	int3   
   140002d7f:	int3   
   140002d80:	test   rdx,rdx
   140002d83:	je     0x140002da1
   140002d85:	test   QWORD PTR [rip+0x72b4],rdx        # 0x14000a040
   140002d8c:	je     0x140002da4
   140002d8e:	mov    rax,QWORD PTR [rip+0x72b3]        # 0x14000a048
   140002d95:	and    rax,rdx
   140002d98:	cmp    rax,QWORD PTR [rip+0x72a9]        # 0x14000a048
   140002d9f:	jne    0x140002da4
   140002da1:	mov    al,0x1
   140002da3:	ret    
   140002da4:	xor    al,al
   140002da6:	ret    
   140002da7:	int3   
   140002da8:	int3   
   140002da9:	int3   
   140002daa:	int3   
   140002dab:	int3   
   140002dac:	int3   
   140002dad:	int3   
   140002dae:	int3   
   140002daf:	int3   
   140002db0:	int3   
   140002db1:	int3   
   140002db2:	int3   
   140002db3:	int3   
   140002db4:	int3   
   140002db5:	int3   
   140002db6:	int3   
   140002db7:	int3   
   140002db8:	mov    QWORD PTR [rsp+0x8],rbx
   140002dbd:	mov    QWORD PTR [rsp+0x10],rsi
   140002dc2:	push   rdi
   140002dc3:	sub    rsp,0x20
   140002dc7:	lea    rbx,[rip+0x7a72]        # 0x14000a840
   140002dce:	lea    rsi,[rip+0x7b0b]        # 0x14000a8e0
   140002dd5:	mov    rdi,QWORD PTR [rbx]
   140002dd8:	test   rdi,rdi
   140002ddb:	je     0x140002def
   140002ddd:	mov    rcx,rdi
   140002de0:	mov    rdi,QWORD PTR [rdi+0x10]
   140002de4:	call   QWORD PTR [rip+0x358e]        # 0x140006378
   140002dea:	test   rdi,rdi
   140002ded:	jne    0x140002ddd
   140002def:	mov    QWORD PTR [rbx],0x0
   140002df6:	add    rbx,0x8
   140002dfa:	cmp    rbx,rsi
   140002dfd:	jne    0x140002dd5
   140002dff:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e04:	mov    rsi,QWORD PTR [rsp+0x38]
   140002e09:	add    rsp,0x20
   140002e0d:	pop    rdi
   140002e0e:	ret    
   140002e0f:	int3   
   140002e10:	int3   
   140002e11:	int3   
   140002e12:	int3   
   140002e13:	int3   
   140002e14:	int3   
   140002e15:	int3   
   140002e16:	int3   
   140002e17:	int3   
   140002e18:	rex push rbx
   140002e1a:	sub    rsp,0x20
   140002e1e:	mov    rbx,rcx
   140002e21:	jmp    0x140002e32
   140002e23:	mov    rcx,rbx
   140002e26:	call   0x140003508
   140002e2b:	test   eax,eax
   140002e2d:	je     0x140002e42
   140002e2f:	mov    rcx,rbx
   140002e32:	call   0x140003346
   140002e37:	test   rax,rax
   140002e3a:	je     0x140002e23
   140002e3c:	add    rsp,0x20
   140002e40:	pop    rbx
   140002e41:	ret    
   140002e42:	call   QWORD PTR [rip+0x3430]        # 0x140006278
   140002e48:	int3   
   140002e49:	int3   
   140002e4a:	int3   
   140002e4b:	int3   
   140002e4c:	int3   
   140002e4d:	int3   
   140002e4e:	int3   
   140002e4f:	int3   
   140002e50:	sub    rsp,0x28
   140002e54:	mov    eax,0x5a4d
   140002e59:	cmp    WORD PTR [rip+0xffffffffffffd1a0],ax        # 0x140000000
   140002e60:	je     0x140002e66
   140002e62:	xor    eax,eax
   140002e64:	jmp    0x140002eb5
   140002e66:	movsxd rcx,DWORD PTR [rip+0xffffffffffffd1cf]        # 0x14000003c
   140002e6d:	lea    rax,[rip+0xffffffffffffd18c]        # 0x140000000
   140002e74:	add    rcx,rax
   140002e77:	cmp    DWORD PTR [rcx],0x4550
   140002e7d:	jne    0x140002e62
   140002e7f:	movzx  eax,WORD PTR [rcx+0x18]
   140002e83:	cmp    eax,0x10b
   140002e88:	je     0x140002ea4
   140002e8a:	cmp    eax,0x20b
   140002e8f:	jne    0x140002e62
   140002e91:	xor    eax,eax
   140002e93:	cmp    DWORD PTR [rcx+0x84],0xe
   140002e9a:	jbe    0x140002eb5
   140002e9c:	cmp    DWORD PTR [rcx+0xf8],eax
   140002ea2:	jmp    0x140002eb2
   140002ea4:	xor    eax,eax
   140002ea6:	cmp    DWORD PTR [rcx+0x74],0xe
   140002eaa:	jbe    0x140002eb5
   140002eac:	cmp    DWORD PTR [rcx+0xe8],eax
   140002eb2:	setne  al
   140002eb5:	mov    ecx,0x2
   140002eba:	mov    DWORD PTR [rip+0x7318],eax        # 0x14000a1d8
   140002ec0:	call   0x1400035e8
   140002ec5:	mov    ecx,eax
   140002ec7:	call   QWORD PTR [rip+0x345b]        # 0x140006328
   140002ecd:	mov    rcx,QWORD PTR [rip+0x340c]        # 0x1400062e0
   140002ed4:	or     rax,0xffffffffffffffff
   140002ed8:	mov    QWORD PTR [rip+0x7891],rax        # 0x14000a770
   140002edf:	mov    QWORD PTR [rip+0x7892],rax        # 0x14000a778
   140002ee6:	mov    eax,DWORD PTR [rip+0x7870]        # 0x14000a75c
   140002eec:	mov    DWORD PTR [rcx],eax
   140002eee:	mov    rcx,QWORD PTR [rip+0x33e3]        # 0x1400062d8
   140002ef5:	mov    eax,DWORD PTR [rip+0x7855]        # 0x14000a750
   140002efb:	mov    DWORD PTR [rcx],eax
   140002efd:	call   0x140003800
   140002f02:	cmp    DWORD PTR [rip+0x70f7],0x0        # 0x14000a000
   140002f09:	jne    0x140002f18
   140002f0b:	lea    rcx,[rip+0x8ee]        # 0x140003800
   140002f12:	call   QWORD PTR [rip+0x33e8]        # 0x140006300
   140002f18:	xor    eax,eax
   140002f1a:	add    rsp,0x28
   140002f1e:	ret    
   140002f1f:	int3   
   140002f20:	int3   
   140002f21:	int3   
   140002f22:	int3   
   140002f23:	int3   
   140002f24:	int3   
   140002f25:	int3   
   140002f26:	int3   
   140002f27:	int3   
   140002f28:	int3   
   140002f29:	int3   
   140002f2a:	int3   
   140002f2b:	int3   
   140002f2c:	int3   
   140002f2d:	int3   
   140002f2e:	int3   
   140002f2f:	int3   
   140002f30:	sub    rsp,0x38
   140002f34:	mov    eax,DWORD PTR [rip+0x781e]        # 0x14000a758
   140002f3a:	lea    r8,[rip+0x728f]        # 0x14000a1d0
   140002f41:	mov    r9d,DWORD PTR [rip+0x780c]        # 0x14000a754
   140002f48:	lea    rdx,[rip+0x7279]        # 0x14000a1c8
   140002f4f:	mov    DWORD PTR [rip+0x7287],eax        # 0x14000a1dc
   140002f55:	lea    rcx,[rip+0x7264]        # 0x14000a1c0
   140002f5c:	lea    rax,[rip+0x7279]        # 0x14000a1dc
   140002f63:	mov    QWORD PTR [rsp+0x20],rax
   140002f68:	call   QWORD PTR [rip+0x33c2]        # 0x140006330
   140002f6e:	mov    DWORD PTR [rip+0x7250],eax        # 0x14000a1c4
   140002f74:	add    rsp,0x38
   140002f78:	ret    
   140002f79:	int3   
   140002f7a:	int3   
   140002f7b:	int3   
   140002f7c:	int3   
   140002f7d:	int3   
   140002f7e:	int3   
   140002f7f:	int3   
   140002f80:	sub    rsp,0x28
   140002f84:	call   0x140003724
   140002f89:	add    rsp,0x28
   140002f8d:	jmp    0x140002f98
   140002f92:	int3   
   140002f93:	int3   
   140002f94:	int3   
   140002f95:	int3   
   140002f96:	int3   
   140002f97:	int3   
   140002f98:	mov    rax,rsp
   140002f9b:	mov    QWORD PTR [rax+0x8],rbx
   140002f9f:	mov    QWORD PTR [rax+0x10],rsi
   140002fa3:	mov    QWORD PTR [rax+0x18],rdi
   140002fa7:	push   r15
   140002fa9:	sub    rsp,0xb0
   140002fb0:	and    DWORD PTR [rsp+0x20],0x0
   140002fb5:	lea    rcx,[rax-0x78]
   140002fb9:	call   QWORD PTR [rip+0x3219]        # 0x1400061d8
   140002fbf:	nop
   140002fc0:	mov    rax,QWORD PTR gs:0x30
   140002fc9:	mov    rbx,QWORD PTR [rax+0x8]
   140002fcd:	xor    esi,esi
   140002fcf:	xor    eax,eax
   140002fd1:	lock cmpxchg QWORD PTR [rip+0x7786],rbx        # 0x14000a760
   140002fda:	je     0x140002ff5
   140002fdc:	cmp    rax,rbx
   140002fdf:	jne    0x140002fe8
   140002fe1:	mov    esi,0x1
   140002fe6:	jmp    0x140002ff5
   140002fe8:	mov    ecx,0x3e8
   140002fed:	call   QWORD PTR [rip+0x3235]        # 0x140006228
   140002ff3:	jmp    0x140002fcf
   140002ff5:	mov    eax,DWORD PTR [rip+0x776d]        # 0x14000a768
   140002ffb:	cmp    eax,0x1
   140002ffe:	jne    0x14000300a
   140003000:	lea    ecx,[rax+0x1e]
   140003003:	call   0x140003634
   140003008:	jmp    0x14000307b
   14000300a:	mov    eax,DWORD PTR [rip+0x7758]        # 0x14000a768
   140003010:	test   eax,eax
   140003012:	jne    0x140003071
   140003014:	mov    DWORD PTR [rip+0x774a],0x1        # 0x14000a768
   14000301e:	lea    r15,[rip+0x3423]        # 0x140006448
   140003025:	lea    rbx,[rip+0x3404]        # 0x140006430
   14000302c:	mov    QWORD PTR [rsp+0x38],rbx
   140003031:	mov    DWORD PTR [rsp+0x30],eax
   140003035:	cmp    rbx,r15
   140003038:	jae    0x140003063
   14000303a:	test   eax,eax
   14000303c:	jne    0x140003067
   14000303e:	mov    rdi,QWORD PTR [rbx]
   140003041:	test   rdi,rdi
   140003044:	je     0x140003058
   140003046:	mov    rcx,rdi
   140003049:	mov    rax,QWORD PTR [rip+0x3380]        # 0x1400063d0
   140003050:	call   rax
   140003052:	call   rdi
   140003054:	mov    DWORD PTR [rsp+0x30],eax
   140003058:	add    rbx,0x8
   14000305c:	mov    QWORD PTR [rsp+0x38],rbx
   140003061:	jmp    0x140003035
   140003063:	test   eax,eax
   140003065:	je     0x14000307b
   140003067:	mov    eax,0xff
   14000306c:	jmp    0x1400031d4
   140003071:	mov    DWORD PTR [rip+0x713d],0x1        # 0x14000a1b8
   14000307b:	mov    eax,DWORD PTR [rip+0x76e7]        # 0x14000a768
   140003081:	cmp    eax,0x1
   140003084:	jne    0x1400030a3
   140003086:	lea    rdx,[rip+0x339b]        # 0x140006428
   14000308d:	lea    rcx,[rip+0x334c]        # 0x1400063e0
   140003094:	call   0x14000380a
   140003099:	mov    DWORD PTR [rip+0x76c5],0x2        # 0x14000a768
   1400030a3:	test   esi,esi
   1400030a5:	jne    0x1400030b0
   1400030a7:	xor    eax,eax
   1400030a9:	xchg   QWORD PTR [rip+0x76b0],rax        # 0x14000a760
   1400030b0:	cmp    QWORD PTR [rip+0x76c8],0x0        # 0x14000a780
   1400030b8:	je     0x1400030e8
   1400030ba:	lea    rcx,[rip+0x76bf]        # 0x14000a780
   1400030c1:	call   0x140003690
   1400030c6:	test   eax,eax
   1400030c8:	je     0x1400030e8
   1400030ca:	mov    rbx,QWORD PTR [rip+0x76af]        # 0x14000a780
   1400030d1:	mov    rcx,rbx
   1400030d4:	mov    rax,QWORD PTR [rip+0x32f5]        # 0x1400063d0
   1400030db:	call   rax
   1400030dd:	xor    r8d,r8d
   1400030e0:	lea    edx,[r8+0x2]
   1400030e4:	xor    ecx,ecx
   1400030e6:	call   rbx
   1400030e8:	mov    rax,QWORD PTR [rip+0x31f9]        # 0x1400062e8
   1400030ef:	mov    rbx,QWORD PTR [rax]
   1400030f2:	mov    QWORD PTR [rsp+0x28],rbx
   1400030f7:	mov    edi,DWORD PTR [rsp+0x20]
   1400030fb:	cmp    BYTE PTR [rbx],0x20
   1400030fe:	ja     0x140003173
   140003100:	cmp    BYTE PTR [rbx],0x0
   140003103:	je     0x140003109
   140003105:	test   edi,edi
   140003107:	jne    0x140003173
   140003109:	mov    al,BYTE PTR [rbx]
   14000310b:	dec    al
   14000310d:	cmp    al,0x1f
   14000310f:	ja     0x14000311b
   140003111:	inc    rbx
   140003114:	mov    QWORD PTR [rsp+0x28],rbx
   140003119:	jmp    0x140003109
   14000311b:	mov    ecx,DWORD PTR [rsp+0x7c]
   14000311f:	movzx  eax,WORD PTR [rsp+0x80]
   140003127:	mov    r9d,0xa
   14000312d:	and    cl,0x1
   140003130:	cmovne r9d,eax
   140003134:	mov    r8,rbx
   140003137:	xor    edx,edx
   140003139:	lea    rcx,[rip+0xffffffffffffcec0]        # 0x140000000
   140003140:	call   0x140001270
   140003145:	mov    DWORD PTR [rip+0x7069],eax        # 0x14000a1b4
   14000314b:	cmp    DWORD PTR [rip+0x7086],0x0        # 0x14000a1d8
   140003152:	jne    0x14000315c
   140003154:	mov    ecx,eax
   140003156:	call   QWORD PTR [rip+0x31c4]        # 0x140006320
   14000315c:	cmp    DWORD PTR [rip+0x7055],0x0        # 0x14000a1b8
   140003163:	jne    0x140003171
   140003165:	call   QWORD PTR [rip+0x31a5]        # 0x140006310
   14000316b:	mov    eax,DWORD PTR [rip+0x7043]        # 0x14000a1b4
   140003171:	jmp    0x1400031d4
   140003173:	cmp    BYTE PTR [rbx],0x22
   140003176:	jne    0x140003185
   140003178:	xor    eax,eax
   14000317a:	test   edi,edi
   14000317c:	sete   al
   14000317f:	mov    edi,eax
   140003181:	mov    DWORD PTR [rsp+0x20],eax
   140003185:	movzx  ecx,BYTE PTR [rbx]
   140003188:	call   QWORD PTR [rip+0x317a]        # 0x140006308
   14000318e:	test   eax,eax
   140003190:	je     0x14000319a
   140003192:	inc    rbx
   140003195:	mov    QWORD PTR [rsp+0x28],rbx
   14000319a:	inc    rbx
   14000319d:	mov    QWORD PTR [rsp+0x28],rbx
   1400031a2:	jmp    0x1400030fb
   1400031a7:	mov    DWORD PTR [rip+0x7007],eax        # 0x14000a1b4
   1400031ad:	cmp    DWORD PTR [rip+0x7024],0x0        # 0x14000a1d8
   1400031b4:	jne    0x1400031bf
   1400031b6:	mov    ecx,eax
   1400031b8:	call   QWORD PTR [rip+0x315a]        # 0x140006318
   1400031be:	int3   
   1400031bf:	cmp    DWORD PTR [rip+0x6ff2],0x0        # 0x14000a1b8
   1400031c6:	jne    0x1400031d4
   1400031c8:	call   QWORD PTR [rip+0x3142]        # 0x140006310
   1400031ce:	mov    eax,DWORD PTR [rip+0x6fe0]        # 0x14000a1b4
   1400031d4:	lea    r11,[rsp+0xb0]
   1400031dc:	mov    rbx,QWORD PTR [r11+0x10]
   1400031e0:	mov    rsi,QWORD PTR [r11+0x18]
   1400031e4:	mov    rdi,QWORD PTR [r11+0x20]
   1400031e8:	mov    rsp,r11
   1400031eb:	pop    r15
   1400031ed:	ret    
   1400031ee:	int3   
   1400031ef:	int3   
   1400031f0:	int3   
   1400031f1:	int3   
   1400031f2:	int3   
   1400031f3:	int3   
   1400031f4:	jmp    QWORD PTR [rip+0x3186]        # 0x140006380
   1400031fa:	int3   
   1400031fb:	int3   
   1400031fc:	int3   
   1400031fd:	int3   
   1400031fe:	int3   
   1400031ff:	int3   
   140003200:	int3   
   140003201:	int3   
   140003202:	int3   
   140003203:	int3   
   140003204:	int3   
   140003205:	int3   
   140003206:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003210:	cmp    rcx,QWORD PTR [rip+0x6df1]        # 0x14000a008
   140003217:	jne    0x140003229
   140003219:	rol    rcx,0x10
   14000321d:	test   cx,0xffff
   140003222:	jne    0x140003225
   140003224:	ret    
   140003225:	ror    rcx,0x10
   140003229:	jmp    0x140003390
   14000322e:	int3   
   14000322f:	int3   
   140003230:	int3   
   140003231:	int3   
   140003232:	int3   
   140003233:	int3   
   140003234:	mov    QWORD PTR [rsp+0x8],rbx
   140003239:	push   rdi
   14000323a:	sub    rsp,0x20
   14000323e:	mov    rdi,rcx
   140003241:	mov    rax,QWORD PTR [rip+0x7530]        # 0x14000a778
   140003248:	mov    QWORD PTR [rsp+0x38],rax
   14000324d:	cmp    rax,0xffffffffffffffff
   140003251:	jne    0x14000326a
   140003253:	mov    rbx,QWORD PTR [rip+0x3056]        # 0x1400062b0
   14000325a:	mov    rcx,rbx
   14000325d:	call   QWORD PTR [rip+0x316d]        # 0x1400063d0
   140003263:	mov    rcx,rdi
   140003266:	call   rbx
   140003268:	jmp    0x1400032c7
   14000326a:	mov    ecx,0x8
   14000326f:	call   0x14000383a
   140003274:	nop
   140003275:	mov    rax,QWORD PTR [rip+0x74fc]        # 0x14000a778
   14000327c:	mov    QWORD PTR [rsp+0x38],rax
   140003281:	mov    rax,QWORD PTR [rip+0x74e8]        # 0x14000a770
   140003288:	mov    QWORD PTR [rsp+0x40],rax
   14000328d:	lea    r8,[rsp+0x40]
   140003292:	lea    rdx,[rsp+0x38]
   140003297:	mov    rcx,rdi
   14000329a:	call   0x140003852
   14000329f:	mov    rbx,rax
   1400032a2:	mov    rdx,QWORD PTR [rsp+0x38]
   1400032a7:	mov    QWORD PTR [rip+0x74ca],rdx        # 0x14000a778
   1400032ae:	mov    rdx,QWORD PTR [rsp+0x40]
   1400032b3:	mov    QWORD PTR [rip+0x74b6],rdx        # 0x14000a770
   1400032ba:	mov    ecx,0x8
   1400032bf:	call   0x140003846
   1400032c4:	mov    rax,rbx
   1400032c7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400032cc:	add    rsp,0x20
   1400032d0:	pop    rdi
   1400032d1:	ret    
   1400032d2:	int3   
   1400032d3:	int3   
   1400032d4:	int3   
   1400032d5:	int3   
   1400032d6:	int3   
   1400032d7:	int3   
   1400032d8:	sub    rsp,0x28
   1400032dc:	call   0x140003234
   1400032e1:	neg    rax
   1400032e4:	sbb    eax,eax
   1400032e6:	neg    eax
   1400032e8:	dec    eax
   1400032ea:	add    rsp,0x28
   1400032ee:	ret    
   1400032ef:	int3   
   1400032f0:	int3   
   1400032f1:	int3   
   1400032f2:	int3   
   1400032f3:	int3   
   1400032f4:	int3   
   1400032f5:	int3   
   1400032f6:	int3   
   1400032f7:	int3   
   1400032f8:	int3   
   1400032f9:	int3   
   1400032fa:	int3   
   1400032fb:	int3   
   1400032fc:	int3   
   1400032fd:	int3   
   1400032fe:	int3   
   1400032ff:	int3   
   140003300:	jmp    QWORD PTR [rip+0x305a]        # 0x140006360
   140003306:	int3   
   140003307:	int3   
   140003308:	int3   
   140003309:	int3   
   14000330a:	int3   
   14000330b:	int3   
   14000330c:	int3   
   14000330d:	int3   
   14000330e:	int3   
   14000330f:	int3   
   140003310:	mov    QWORD PTR [rsp+0x8],rbx
   140003315:	push   rdi
   140003316:	sub    rsp,0x20
   14000331a:	mov    ebx,edx
   14000331c:	mov    rdi,rcx
   14000331f:	call   QWORD PTR [rip+0x2f83]        # 0x1400062a8
   140003325:	test   bl,0x1
   140003328:	je     0x140003332
   14000332a:	mov    rcx,rdi
   14000332d:	call   0x1400031f4
   140003332:	mov    rax,rdi
   140003335:	mov    rbx,QWORD PTR [rsp+0x30]
   14000333a:	add    rsp,0x20
   14000333e:	pop    rdi
   14000333f:	ret    
   140003340:	int3   
   140003341:	int3   
   140003342:	int3   
   140003343:	int3   
   140003344:	int3   
   140003345:	int3   
   140003346:	jmp    QWORD PTR [rip+0x300c]        # 0x140006358
   14000334c:	int3   
   14000334d:	int3   
   14000334e:	int3   
   14000334f:	int3   
   140003350:	int3   
   140003351:	int3   
   140003352:	int3   
   140003353:	int3   
   140003354:	rex push rbx
   140003356:	sub    rsp,0x20
   14000335a:	mov    rbx,rcx
   14000335d:	xor    ecx,ecx
   14000335f:	call   QWORD PTR [rip+0x2e5b]        # 0x1400061c0
   140003365:	mov    rcx,rbx
   140003368:	call   QWORD PTR [rip+0x2e4a]        # 0x1400061b8
   14000336e:	call   QWORD PTR [rip+0x2e6c]        # 0x1400061e0
   140003374:	mov    rcx,rax
   140003377:	mov    edx,0xc0000409
   14000337c:	add    rsp,0x20
   140003380:	pop    rbx
   140003381:	rex.W jmp QWORD PTR [rip+0x2e48]        # 0x1400061d0
   140003388:	int3   
   140003389:	int3   
   14000338a:	int3   
   14000338b:	int3   
   14000338c:	int3   
   14000338d:	int3   
   14000338e:	int3   
   14000338f:	int3   
   140003390:	mov    QWORD PTR [rsp+0x8],rcx
   140003395:	sub    rsp,0x88
   14000339c:	lea    rcx,[rip+0x6edd]        # 0x14000a280
   1400033a3:	call   QWORD PTR [rip+0x2e67]        # 0x140006210
   1400033a9:	mov    rax,QWORD PTR [rip+0x6fc8]        # 0x14000a378
   1400033b0:	mov    QWORD PTR [rsp+0x48],rax
   1400033b5:	xor    r8d,r8d
   1400033b8:	lea    rdx,[rsp+0x50]
   1400033bd:	mov    rcx,QWORD PTR [rsp+0x48]
   1400033c2:	call   QWORD PTR [rip+0x2e40]        # 0x140006208
   1400033c8:	mov    QWORD PTR [rsp+0x40],rax
   1400033cd:	cmp    QWORD PTR [rsp+0x40],0x0
   1400033d3:	je     0x140003417
   1400033d5:	mov    QWORD PTR [rsp+0x38],0x0
   1400033de:	lea    rax,[rsp+0x58]
   1400033e3:	mov    QWORD PTR [rsp+0x30],rax
   1400033e8:	lea    rax,[rsp+0x60]
   1400033ed:	mov    QWORD PTR [rsp+0x28],rax
   1400033f2:	lea    rax,[rip+0x6e87]        # 0x14000a280
   1400033f9:	mov    QWORD PTR [rsp+0x20],rax
   1400033fe:	mov    r9,QWORD PTR [rsp+0x40]
   140003403:	mov    r8,QWORD PTR [rsp+0x48]
   140003408:	mov    rdx,QWORD PTR [rsp+0x50]
   14000340d:	xor    ecx,ecx
   14000340f:	call   QWORD PTR [rip+0x2e03]        # 0x140006218
   140003415:	jmp    0x14000343a
   140003417:	mov    rax,QWORD PTR [rip+0x6efa]        # 0x14000a318
   14000341e:	mov    rax,QWORD PTR [rax]
   140003421:	mov    QWORD PTR [rip+0x6f50],rax        # 0x14000a378
   140003428:	mov    rax,QWORD PTR [rip+0x6ee9]        # 0x14000a318
   14000342f:	add    rax,0x8
   140003433:	mov    QWORD PTR [rip+0x6ede],rax        # 0x14000a318
   14000343a:	mov    rax,QWORD PTR [rip+0x6f37]        # 0x14000a378
   140003441:	mov    QWORD PTR [rip+0x6da8],rax        # 0x14000a1f0
   140003448:	mov    rax,QWORD PTR [rsp+0x90]
   140003450:	mov    QWORD PTR [rip+0x6ea9],rax        # 0x14000a300
   140003457:	mov    DWORD PTR [rip+0x6d7f],0xc0000409        # 0x14000a1e0
   140003461:	mov    DWORD PTR [rip+0x6d79],0x1        # 0x14000a1e4
   14000346b:	mov    DWORD PTR [rip+0x6d83],0x3        # 0x14000a1f8
   140003475:	mov    eax,0x8
   14000347a:	imul   rax,rax,0x0
   14000347e:	lea    rcx,[rip+0x6d7b]        # 0x14000a200
   140003485:	mov    QWORD PTR [rcx+rax*1],0x2
   14000348d:	mov    eax,0x8
   140003492:	imul   rax,rax,0x1
   140003496:	lea    rcx,[rip+0x6d63]        # 0x14000a200
   14000349d:	mov    rdx,QWORD PTR [rip+0x6b64]        # 0x14000a008
   1400034a4:	mov    QWORD PTR [rcx+rax*1],rdx
   1400034a8:	mov    eax,0x8
   1400034ad:	imul   rax,rax,0x2
   1400034b1:	lea    rcx,[rip+0x6d48]        # 0x14000a200
   1400034b8:	mov    rdx,QWORD PTR [rip+0x6b51]        # 0x14000a010
   1400034bf:	mov    QWORD PTR [rcx+rax*1],rdx
   1400034c3:	mov    eax,0x8
   1400034c8:	imul   rax,rax,0x0
   1400034cc:	mov    rcx,QWORD PTR [rip+0x6b35]        # 0x14000a008
   1400034d3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400034d8:	mov    eax,0x8
   1400034dd:	imul   rax,rax,0x1
   1400034e1:	mov    rcx,QWORD PTR [rip+0x6b28]        # 0x14000a010
   1400034e8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400034ed:	lea    rcx,[rip+0x339c]        # 0x140006890
   1400034f4:	call   0x140003354
   1400034f9:	add    rsp,0x88
   140003500:	ret    
   140003501:	int3   
   140003502:	int3   
   140003503:	int3   
   140003504:	int3   
   140003505:	int3   
   140003506:	int3   
   140003507:	int3   
   140003508:	jmp    QWORD PTR [rip+0x2e3a]        # 0x140006348
   14000350e:	int3   
   14000350f:	int3   
   140003510:	int3   
   140003511:	int3   
   140003512:	int3   
   140003513:	int3   
   140003514:	int3   
   140003515:	int3   
   140003516:	int3   
   140003517:	int3   
   140003518:	int3   
   140003519:	int3   
   14000351a:	int3   
   14000351b:	int3   
   14000351c:	int3   
   14000351d:	int3   
   14000351e:	int3   
   14000351f:	int3   
   140003520:	sub    rsp,0x28
   140003524:	mov    rax,QWORD PTR [rcx]
   140003527:	cmp    DWORD PTR [rax],0xe06d7363
   14000352d:	jne    0x140003552
   14000352f:	cmp    DWORD PTR [rax+0x18],0x4
   140003533:	jne    0x140003552
   140003535:	mov    ecx,DWORD PTR [rax+0x20]
   140003538:	lea    eax,[rcx-0x19930520]
   14000353e:	cmp    eax,0x2
   140003541:	jbe    0x14000354b
   140003543:	cmp    ecx,0x1994000
   140003549:	jne    0x140003552
   14000354b:	call   QWORD PTR [rip+0x2d7f]        # 0x1400062d0
   140003551:	int3   
   140003552:	xor    eax,eax
   140003554:	add    rsp,0x28
   140003558:	ret    
   140003559:	int3   
   14000355a:	int3   
   14000355b:	int3   
   14000355c:	int3   
   14000355d:	int3   
   14000355e:	int3   
   14000355f:	int3   
   140003560:	sub    rsp,0x28
   140003564:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140003520
   14000356b:	call   QWORD PTR [rip+0x2c4f]        # 0x1400061c0
   140003571:	xor    eax,eax
   140003573:	add    rsp,0x28
   140003577:	ret    
   140003578:	int3   
   140003579:	int3   
   14000357a:	int3   
   14000357b:	int3   
   14000357c:	int3   
   14000357d:	int3   
   14000357e:	jmp    QWORD PTR [rip+0x2dbc]        # 0x140006340
   140003584:	int3   
   140003585:	int3   
   140003586:	int3   
   140003587:	int3   
   140003588:	int3   
   140003589:	int3   
   14000358a:	int3   
   14000358b:	int3   
   14000358c:	sub    rsp,0x18
   140003590:	xor    edx,edx
   140003592:	lea    rax,[rcx-0x1]
   140003596:	cmp    rax,0xfffffffffffffffd
   14000359a:	ja     0x1400035d8
   14000359c:	mov    eax,0x5a4d
   1400035a1:	cmp    WORD PTR [rcx],ax
   1400035a4:	jne    0x1400035d0
   1400035a6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400035a9:	jl     0x1400035d0
   1400035ab:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   1400035b2:	jae    0x1400035d0
   1400035b4:	movsxd rax,DWORD PTR [rcx+0x3c]
   1400035b8:	add    rax,rcx
   1400035bb:	mov    QWORD PTR [rsp],rax
   1400035bf:	cmp    DWORD PTR [rax],0x4550
   1400035c5:	cmovne rax,rdx
   1400035c9:	mov    rdx,rax
   1400035cc:	mov    QWORD PTR [rsp],rax
   1400035d0:	jmp    0x1400035d8
   1400035d2:	xor    edx,edx
   1400035d4:	mov    QWORD PTR [rsp],rdx
   1400035d8:	mov    rax,rdx
   1400035db:	add    rsp,0x18
   1400035df:	ret    
   1400035e0:	int3   
   1400035e1:	int3   
   1400035e2:	int3   
   1400035e3:	int3   
   1400035e4:	int3   
   1400035e5:	int3   
   1400035e6:	int3   
   1400035e7:	int3   
   1400035e8:	rex push rbx
   1400035ea:	sub    rsp,0x20
   1400035ee:	mov    ebx,ecx
   1400035f0:	xor    ecx,ecx
   1400035f2:	call   QWORD PTR [rip+0x2a40]        # 0x140006038
   1400035f8:	test   rax,rax
   1400035fb:	je     0x140003625
   1400035fd:	mov    rcx,rax
   140003600:	call   0x14000358c
   140003605:	test   rax,rax
   140003608:	je     0x140003625
   14000360a:	mov    ecx,0x2
   14000360f:	cmp    WORD PTR [rax+0x5c],cx
   140003613:	jne    0x140003619
   140003615:	mov    eax,ecx
   140003617:	jmp    0x140003627
   140003619:	cmp    WORD PTR [rax+0x5c],0x3
   14000361e:	mov    eax,0x1
   140003623:	je     0x140003627
   140003625:	mov    eax,ebx
   140003627:	add    rsp,0x20
   14000362b:	pop    rbx
   14000362c:	ret    
   14000362d:	int3   
   14000362e:	int3   
   14000362f:	int3   
   140003630:	int3   
   140003631:	int3   
   140003632:	int3   
   140003633:	int3   
   140003634:	jmp    QWORD PTR [rip+0x2cfe]        # 0x140006338
   14000363a:	int3   
   14000363b:	int3   
   14000363c:	int3   
   14000363d:	int3   
   14000363e:	int3   
   14000363f:	int3   
   140003640:	movsxd r8,DWORD PTR [rcx+0x3c]
   140003644:	xor    r9d,r9d
   140003647:	add    r8,rcx
   14000364a:	mov    r10,rdx
   14000364d:	movzx  eax,WORD PTR [r8+0x14]
   140003652:	movzx  r11d,WORD PTR [r8+0x6]
   140003657:	add    rax,0x18
   14000365b:	add    rax,r8
   14000365e:	test   r11d,r11d
   140003661:	je     0x140003681
   140003663:	mov    edx,DWORD PTR [rax+0xc]
   140003666:	cmp    r10,rdx
   140003669:	jb     0x140003675
   14000366b:	mov    ecx,DWORD PTR [rax+0x8]
   14000366e:	add    ecx,edx
   140003670:	cmp    r10,rcx
   140003673:	jb     0x140003683
   140003675:	inc    r9d
   140003678:	add    rax,0x28
   14000367c:	cmp    r9d,r11d
   14000367f:	jb     0x140003663
   140003681:	xor    eax,eax
   140003683:	ret    
   140003684:	int3   
   140003685:	int3   
   140003686:	int3   
   140003687:	int3   
   140003688:	int3   
   140003689:	int3   
   14000368a:	int3   
   14000368b:	int3   
   14000368c:	int3   
   14000368d:	int3   
   14000368e:	int3   
   14000368f:	int3   
   140003690:	mov    QWORD PTR [rsp+0x8],rbx
   140003695:	push   rdi
   140003696:	sub    rsp,0x20
   14000369a:	mov    rbx,rcx
   14000369d:	lea    rdi,[rip+0xffffffffffffc95c]        # 0x140000000
   1400036a4:	mov    rcx,rdi
   1400036a7:	call   0x1400036f0
   1400036ac:	test   eax,eax
   1400036ae:	je     0x1400036d2
   1400036b0:	sub    rbx,rdi
   1400036b3:	mov    rdx,rbx
   1400036b6:	mov    rcx,rdi
   1400036b9:	call   0x140003640
   1400036be:	test   rax,rax
   1400036c1:	je     0x1400036d2
   1400036c3:	mov    eax,DWORD PTR [rax+0x24]
   1400036c6:	shr    eax,0x1f
   1400036c9:	not    eax
   1400036cb:	and    eax,0x1
   1400036ce:	jmp    0x1400036d2
   1400036d0:	xor    eax,eax
   1400036d2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400036d7:	add    rsp,0x20
   1400036db:	pop    rdi
   1400036dc:	ret    
   1400036dd:	int3   
   1400036de:	int3   
   1400036df:	int3   
   1400036e0:	int3   
   1400036e1:	int3   
   1400036e2:	int3   
   1400036e3:	int3   
   1400036e4:	int3   
   1400036e5:	int3   
   1400036e6:	int3   
   1400036e7:	int3   
   1400036e8:	int3   
   1400036e9:	int3   
   1400036ea:	int3   
   1400036eb:	int3   
   1400036ec:	int3   
   1400036ed:	int3   
   1400036ee:	int3   
   1400036ef:	int3   
   1400036f0:	mov    rax,rcx
   1400036f3:	mov    ecx,0x5a4d
   1400036f8:	cmp    WORD PTR [rax],cx
   1400036fb:	je     0x140003700
   1400036fd:	xor    eax,eax
   1400036ff:	ret    
   140003700:	movsxd rcx,DWORD PTR [rax+0x3c]
   140003704:	add    rcx,rax
   140003707:	xor    eax,eax
   140003709:	cmp    DWORD PTR [rcx],0x4550
   14000370f:	jne    0x14000371d
   140003711:	mov    edx,0x20b
   140003716:	cmp    WORD PTR [rcx+0x18],dx
   14000371a:	sete   al
   14000371d:	ret    
   14000371e:	int3   
   14000371f:	int3   
   140003720:	int3   
   140003721:	int3   
   140003722:	int3   
   140003723:	int3   
   140003724:	mov    QWORD PTR [rsp+0x20],rbx
   140003729:	push   rbp
   14000372a:	mov    rbp,rsp
   14000372d:	sub    rsp,0x20
   140003731:	and    QWORD PTR [rbp+0x18],0x0
   140003736:	movabs rbx,0x2b992ddfa232
   140003740:	mov    rax,QWORD PTR [rip+0x68c1]        # 0x14000a008
   140003747:	cmp    rax,rbx
   14000374a:	jne    0x1400037df
   140003750:	lea    rcx,[rbp+0x18]
   140003754:	call   QWORD PTR [rip+0x2ae6]        # 0x140006240
   14000375a:	mov    rax,QWORD PTR [rbp+0x18]
   14000375e:	mov    QWORD PTR [rbp+0x10],rax
   140003762:	call   QWORD PTR [rip+0x2a80]        # 0x1400061e8
   140003768:	mov    eax,eax
   14000376a:	xor    QWORD PTR [rbp+0x10],rax
   14000376e:	call   QWORD PTR [rip+0x28f4]        # 0x140006068
   140003774:	mov    eax,eax
   140003776:	xor    QWORD PTR [rbp+0x10],rax
   14000377a:	call   QWORD PTR [rip+0x2ab8]        # 0x140006238
   140003780:	mov    eax,eax
   140003782:	shl    rax,0x18
   140003786:	xor    QWORD PTR [rbp+0x10],rax
   14000378a:	call   QWORD PTR [rip+0x2aa8]        # 0x140006238
   140003790:	mov    eax,eax
   140003792:	lea    rcx,[rbp+0x10]
   140003796:	xor    rax,QWORD PTR [rbp+0x10]
   14000379a:	xor    rax,rcx
   14000379d:	lea    rcx,[rbp+0x20]
   1400037a1:	mov    QWORD PTR [rbp+0x10],rax
   1400037a5:	call   QWORD PTR [rip+0x2a4d]        # 0x1400061f8
   1400037ab:	mov    eax,DWORD PTR [rbp+0x20]
   1400037ae:	movabs rcx,0xffffffffffff
   1400037b8:	shl    rax,0x20
   1400037bc:	xor    rax,QWORD PTR [rbp+0x20]
   1400037c0:	xor    rax,QWORD PTR [rbp+0x10]
   1400037c4:	and    rax,rcx
   1400037c7:	movabs rcx,0x2b992ddfa233
   1400037d1:	cmp    rax,rbx
   1400037d4:	cmove  rax,rcx
   1400037d8:	mov    QWORD PTR [rip+0x6829],rax        # 0x14000a008
   1400037df:	mov    rbx,QWORD PTR [rsp+0x48]
   1400037e4:	not    rax
   1400037e7:	mov    QWORD PTR [rip+0x6822],rax        # 0x14000a010
   1400037ee:	add    rsp,0x20
   1400037f2:	pop    rbp
   1400037f3:	ret    
   1400037f4:	int3   
   1400037f5:	int3   
   1400037f6:	int3   
   1400037f7:	int3   
   1400037f8:	int3   
   1400037f9:	int3   
   1400037fa:	int3   
   1400037fb:	int3   
   1400037fc:	int3   
   1400037fd:	int3   
   1400037fe:	int3   
   1400037ff:	int3   
   140003800:	xor    eax,eax
   140003802:	ret    
   140003803:	int3   
   140003804:	int3   
   140003805:	int3   
   140003806:	int3   
   140003807:	int3   
   140003808:	int3   
   140003809:	int3   
   14000380a:	jmp    QWORD PTR [rip+0x2ae8]        # 0x1400062f8
   140003810:	int3   
   140003811:	int3   
   140003812:	int3   
   140003813:	int3   
   140003814:	int3   
   140003815:	int3   
   140003816:	jmp    QWORD PTR [rip+0x2ad4]        # 0x1400062f0
   14000381c:	int3   
   14000381d:	int3   
   14000381e:	int3   
   14000381f:	int3   
   140003820:	int3   
   140003821:	int3   
   140003822:	int3   
   140003823:	int3   
   140003824:	int3   
   140003825:	int3   
   140003826:	int3   
   140003827:	int3   
   140003828:	int3   
   140003829:	int3   
   14000382a:	int3   
   14000382b:	int3   
   14000382c:	int3   
   14000382d:	int3   
   14000382e:	int3   
   14000382f:	int3   
   140003830:	ret    0x0
   140003833:	int3   
   140003834:	int3   
   140003835:	int3   
   140003836:	int3   
   140003837:	int3   
   140003838:	int3   
   140003839:	int3   
   14000383a:	jmp    QWORD PTR [rip+0x2a88]        # 0x1400062c8
   140003840:	int3   
   140003841:	int3   
   140003842:	int3   
   140003843:	int3   
   140003844:	int3   
   140003845:	int3   
   140003846:	jmp    QWORD PTR [rip+0x2a74]        # 0x1400062c0
   14000384c:	int3   
   14000384d:	int3   
   14000384e:	int3   
   14000384f:	int3   
   140003850:	int3   
   140003851:	int3   
   140003852:	jmp    QWORD PTR [rip+0x2a60]        # 0x1400062b8
   140003858:	int3   
   140003859:	int3   
   14000385a:	int3   
   14000385b:	int3   
   14000385c:	int3   
   14000385d:	int3   
   14000385e:	int3   
   14000385f:	int3   
   140003860:	int3   
   140003861:	int3   
   140003862:	int3   
   140003863:	int3   
   140003864:	int3   
   140003865:	int3   
   140003866:	jmp    QWORD PTR [rip+0x2b24]        # 0x140006390
   14000386c:	int3   
   14000386d:	int3   
   14000386e:	int3   
   14000386f:	int3   
   140003870:	int3   
   140003871:	int3   
   140003872:	jmp    QWORD PTR [rip+0x2af8]        # 0x140006370
   140003878:	int3   
   140003879:	int3   
   14000387a:	int3   
   14000387b:	int3   
   14000387c:	int3   
   14000387d:	int3   
   14000387e:	int3   
   14000387f:	int3   
   140003880:	sub    rsp,0x28
   140003884:	mov    r8,QWORD PTR [r9+0x38]
   140003888:	mov    rcx,rdx
   14000388b:	mov    rdx,r9
   14000388e:	call   0x1400038a4
   140003893:	mov    eax,0x1
   140003898:	add    rsp,0x28
   14000389c:	ret    
   14000389d:	int3   
   14000389e:	int3   
   14000389f:	int3   
   1400038a0:	int3   
   1400038a1:	int3   
   1400038a2:	int3   
   1400038a3:	int3   
   1400038a4:	rex push rbx
   1400038a6:	sub    rsp,0x20
   1400038aa:	mov    r11d,DWORD PTR [r8]
   1400038ad:	mov    rbx,rdx
   1400038b0:	and    r11d,0xfffffff8
   1400038b4:	mov    r9,rcx
   1400038b7:	test   BYTE PTR [r8],0x4
   1400038bb:	mov    r10,rcx
   1400038be:	je     0x1400038d3
   1400038c0:	mov    eax,DWORD PTR [r8+0x8]
   1400038c4:	movsxd r10,DWORD PTR [r8+0x4]
   1400038c8:	neg    eax
   1400038ca:	add    r10,rcx
   1400038cd:	movsxd rcx,eax
   1400038d0:	and    r10,rcx
   1400038d3:	movsxd rax,r11d
   1400038d6:	mov    rdx,QWORD PTR [rax+r10*1]
   1400038da:	mov    rax,QWORD PTR [rbx+0x10]
   1400038de:	mov    ecx,DWORD PTR [rax+0x8]
   1400038e1:	add    rcx,QWORD PTR [rbx+0x8]
   1400038e5:	test   BYTE PTR [rcx+0x3],0xf
   1400038e9:	je     0x1400038f7
   1400038eb:	movzx  eax,BYTE PTR [rcx+0x3]
   1400038ef:	and    eax,0xfffffff0
   1400038f2:	cdqe   
   1400038f4:	add    r9,rax
   1400038f7:	xor    r9,rdx
   1400038fa:	mov    rcx,r9
   1400038fd:	add    rsp,0x20
   140003901:	pop    rbx
   140003902:	jmp    0x140003210
   140003907:	int3   
   140003908:	int3   
   140003909:	int3   
   14000390a:	int3   
   14000390b:	int3   
   14000390c:	int3   
   14000390d:	int3   
   14000390e:	int3   
   14000390f:	int3   
   140003910:	mov    rax,rsp
   140003913:	mov    QWORD PTR [rax+0x8],rbx
   140003917:	mov    QWORD PTR [rax+0x10],rbp
   14000391b:	mov    QWORD PTR [rax+0x18],rsi
   14000391f:	mov    QWORD PTR [rax+0x20],rdi
   140003923:	push   r14
   140003925:	sub    rsp,0x20
   140003929:	mov    rbx,QWORD PTR [r9+0x38]
   14000392d:	mov    rsi,rdx
   140003930:	mov    r14,r8
   140003933:	mov    rbp,rcx
   140003936:	mov    rdx,r9
   140003939:	mov    rcx,rsi
   14000393c:	mov    rdi,r9
   14000393f:	lea    r8,[rbx+0x4]
   140003943:	call   0x1400038a4
   140003948:	mov    r11d,DWORD PTR [rbx+0x4]
   14000394c:	mov    r8d,0x1
   140003952:	mov    r10d,DWORD PTR [rbp+0x4]
   140003956:	mov    eax,r11d
   140003959:	and    eax,r8d
   14000395c:	and    r11d,0x2
   140003960:	and    r10b,0x66
   140003964:	cmove  r11d,eax
   140003968:	test   r11d,r11d
   14000396b:	je     0x140003981
   14000396d:	mov    r9,rdi
   140003970:	mov    r8,r14
   140003973:	mov    rdx,rsi
   140003976:	mov    rcx,rbp
   140003979:	call   0x140003872
   14000397e:	mov    r8d,eax
   140003981:	mov    rbx,QWORD PTR [rsp+0x30]
   140003986:	mov    eax,r8d
   140003989:	mov    rbp,QWORD PTR [rsp+0x38]
   14000398e:	mov    rsi,QWORD PTR [rsp+0x40]
   140003993:	mov    rdi,QWORD PTR [rsp+0x48]
   140003998:	add    rsp,0x20
   14000399c:	pop    r14
   14000399e:	ret    
   14000399f:	int3   
   1400039a0:	int3   
   1400039a1:	int3   
   1400039a2:	int3   
   1400039a3:	int3   
   1400039a4:	int3   
   1400039a5:	int3   
   1400039a6:	jmp    QWORD PTR [rip+0x29bc]        # 0x140006368
   1400039ac:	int3   
   1400039ad:	int3   
   1400039ae:	int3   
   1400039af:	int3   
   1400039b0:	int3   
   1400039b1:	int3   
   1400039b2:	jmp    QWORD PTR [rip+0x29e0]        # 0x140006398
   1400039b8:	int3   
   1400039b9:	int3   
   1400039ba:	int3   
   1400039bb:	int3   
   1400039bc:	int3   
   1400039bd:	int3   
   1400039be:	int3   
   1400039bf:	int3   
   1400039c0:	int3   
   1400039c1:	int3   
   1400039c2:	int3   
   1400039c3:	int3   
   1400039c4:	int3   
   1400039c5:	int3   
   1400039c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400039d0:	jmp    rax
   1400039d2:	int3   
   1400039d3:	int3   
   1400039d4:	int3   
   1400039d5:	int3   
   1400039d6:	int3   
   1400039d7:	int3   
   1400039d8:	int3   
   1400039d9:	int3   
   1400039da:	int3   
   1400039db:	int3   
   1400039dc:	int3   
   1400039dd:	int3   
   1400039de:	int3   
   1400039df:	int3   
   1400039e0:	int3   
   1400039e1:	int3   
   1400039e2:	int3   
   1400039e3:	int3   
   1400039e4:	int3   
   1400039e5:	int3   
   1400039e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400039f0:	sub    rsp,0x10
   1400039f4:	mov    QWORD PTR [rsp],r10
   1400039f8:	mov    QWORD PTR [rsp+0x8],r11
   1400039fd:	xor    r11,r11
   140003a00:	lea    r10,[rsp+0x18]
   140003a05:	sub    r10,rax
   140003a08:	cmovb  r10,r11
   140003a0c:	mov    r11,QWORD PTR gs:0x10
   140003a15:	cmp    r10,r11
   140003a18:	jae    0x140003a2f
   140003a1a:	and    r10w,0xf000
   140003a20:	lea    r11,[r11-0x1000]
   140003a27:	test   BYTE PTR [r11],r11b
   140003a2a:	cmp    r10,r11
   140003a2d:	jne    0x140003a20
   140003a2f:	mov    r10,QWORD PTR [rsp]
   140003a33:	mov    r11,QWORD PTR [rsp+0x8]
   140003a38:	add    rsp,0x10
   140003a3c:	ret    
   140003a3d:	int3   
   140003a3e:	int3   
   140003a3f:	int3   
   140003a40:	mov    DWORD PTR [rip+0x6d46],ecx        # 0x14000a78c
   140003a46:	mov    eax,0x1
   140003a4b:	ret    
   140003a4c:	int3   
   140003a4d:	int3   
   140003a4e:	int3   
   140003a4f:	int3   
   140003a50:	mov    DWORD PTR [rdx],r8d
   140003a53:	mov    rax,rdx
   140003a56:	mov    QWORD PTR [rdx+0x8],rcx
   140003a5a:	ret    
   140003a5b:	int3   
   140003a5c:	int3   
   140003a5d:	int3   
   140003a5e:	int3   
   140003a5f:	int3   
   140003a60:	lea    rax,[rip+0x2e39]        # 0x1400068a0
   140003a67:	ret    
   140003a68:	int3   
   140003a69:	int3   
   140003a6a:	int3   
   140003a6b:	int3   
   140003a6c:	int3   
   140003a6d:	int3   
   140003a6e:	int3   
   140003a6f:	int3   
   140003a70:	lea    rax,[rip+0x2e31]        # 0x1400068a8
   140003a77:	ret    
   140003a78:	int3   
   140003a79:	int3   
   140003a7a:	int3   
   140003a7b:	int3   
   140003a7c:	int3   
   140003a7d:	int3   
   140003a7e:	int3   
   140003a7f:	int3   
   140003a80:	lea    rax,[rip+0x2e2d]        # 0x1400068b4
   140003a87:	ret    
   140003a88:	mov    DWORD PTR [rip+0x6eb6],ecx        # 0x14000a944
   140003a8e:	mov    eax,0x1
   140003a93:	lock xadd DWORD PTR [rip+0x6ea5],eax        # 0x14000a940
   140003a9b:	inc    eax
   140003a9d:	ret    
   140003a9e:	int3   
   140003a9f:	int3   
   140003aa0:	mov    DWORD PTR [rip+0x6eae],ecx        # 0x14000a954
   140003aa6:	mov    eax,0x1
   140003aab:	lock xadd DWORD PTR [rip+0x6e9d],eax        # 0x14000a950
   140003ab3:	inc    eax
   140003ab5:	ret    
   140003ab6:	int3   
   140003ab7:	int3   
   140003ab8:	mov    DWORD PTR [rip+0x6e8e],ecx        # 0x14000a94c
   140003abe:	mov    eax,0x1
   140003ac3:	lock xadd DWORD PTR [rip+0x6e7d],eax        # 0x14000a948
   140003acb:	inc    eax
   140003acd:	ret    
   140003ace:	int3   
   140003acf:	int3   
   140003ad0:	xchg   ax,ax
   140003ad2:	ret    
   140003ad3:	int3   
   140003ad4:	int3   
   140003ad5:	int3   
   140003ad6:	int3   
   140003ad7:	int3   
   140003ad8:	int3   
   140003ad9:	int3   
   140003ada:	int3   
   140003adb:	int3   
   140003adc:	int3   
   140003add:	int3   
   140003ade:	int3   
   140003adf:	int3   
   140003ae0:	lea    rax,[rcx+0x8]
   140003ae4:	ret    
   140003ae5:	int3   
   140003ae6:	int3   
   140003ae7:	int3   
   140003ae8:	int3   
   140003ae9:	int3   
   140003aea:	int3   
   140003aeb:	int3   
   140003aec:	int3   
   140003aed:	int3   
   140003aee:	int3   
   140003aef:	int3   
   140003af0:	lea    rax,[rip+0x65b9]        # 0x14000a0b0
   140003af7:	ret    
   140003af8:	int3   
   140003af9:	int3   
   140003afa:	int3   
   140003afb:	int3   
   140003afc:	int3   
   140003afd:	int3   
   140003afe:	int3   
   140003aff:	int3   
   140003b00:	int3   
   140003b01:	int3   
   140003b02:	int3   
   140003b03:	int3   
   140003b04:	int3   
   140003b05:	int3   
   140003b06:	int3   
   140003b07:	int3   
   140003b08:	int3   
   140003b09:	int3   
   140003b0a:	int3   
   140003b0b:	int3   
   140003b0c:	int3   
   140003b0d:	int3   
   140003b0e:	int3   
   140003b0f:	int3   
   140003b10:	lea    rcx,[rdx+0x70]
   140003b17:	jmp    0x1400047d8
   140003b1c:	lea    rcx,[rdx+0x80]
   140003b23:	add    rcx,0x28
   140003b27:	jmp    0x140004818
   140003b2c:	mov    rcx,QWORD PTR [rdx+0x30]
   140003b33:	jmp    0x140003830
   140003b38:	lea    rcx,[rdx+0x80]
   140003b3f:	jmp    0x140004938
   140003b44:	lea    rcx,[rdx+0x80]
   140003b4b:	add    rcx,0x28
   140003b4f:	jmp    0x140004818
   140003b54:	lea    rcx,[rdx+0x80]
   140003b5b:	add    rcx,0x58
   140003b5f:	jmp    0x1400047c8
   140003b64:	mov    rcx,QWORD PTR [rdx+0x30]
   140003b6b:	jmp    0x14000488c
   140003b70:	int3   
   140003b71:	int3   
   140003b72:	int3   
   140003b73:	int3   
   140003b74:	int3   
   140003b75:	int3   
   140003b76:	int3   
   140003b77:	int3   
   140003b78:	int3   
   140003b79:	int3   
   140003b7a:	int3   
   140003b7b:	int3   
   140003b7c:	int3   
   140003b7d:	int3   
   140003b7e:	int3   
   140003b7f:	int3   
   140003b80:	lea    rcx,[rdx+0xe8]
   140003b87:	jmp    0x140004920
   140003b8c:	mov    rcx,QWORD PTR [rdx+0x68]
   140003b93:	jmp    0x140004914
   140003b98:	mov    rcx,QWORD PTR [rdx+0x68]
   140003b9f:	jmp    0x14000488c
   140003ba4:	int3   
   140003ba5:	int3   
   140003ba6:	int3   
   140003ba7:	int3   
   140003ba8:	int3   
   140003ba9:	int3   
   140003baa:	int3   
   140003bab:	int3   
   140003bac:	int3   
   140003bad:	int3   
   140003bae:	int3   
   140003baf:	int3   
   140003bb0:	lea    rcx,[rdx+0x30]
   140003bb7:	jmp    0x140005350
   140003bbc:	lea    rcx,[rdx+0x30]
   140003bc3:	jmp    0x1400049fc
   140003bc8:	rex push rbp
   140003bca:	mov    rbp,rdx
   140003bcd:	mov    eax,DWORD PTR [rip+0x6c3d]        # 0x14000a810
   140003bd3:	and    eax,0xfffffffe
   140003bd6:	mov    DWORD PTR [rip+0x6c34],eax        # 0x14000a810
   140003bdc:	pop    rbp
   140003bdd:	ret    
   140003bde:	int3   
   140003bdf:	int3   
   140003be0:	int3   
   140003be1:	int3   
   140003be2:	int3   
   140003be3:	int3   
   140003be4:	int3   
   140003be5:	int3   
   140003be6:	int3   
   140003be7:	int3   
   140003be8:	int3   
   140003be9:	int3   
   140003bea:	int3   
   140003beb:	int3   
   140003bec:	int3   
   140003bed:	int3   
   140003bee:	int3   
   140003bef:	int3   
   140003bf0:	lea    rcx,[rdx+0x30]
   140003bf7:	jmp    0x140004920
   140003bfc:	int3   
   140003bfd:	int3   
   140003bfe:	int3   
   140003bff:	int3   
   140003c00:	int3   
   140003c01:	int3   
   140003c02:	int3   
   140003c03:	int3   
   140003c04:	int3   
   140003c05:	int3   
   140003c06:	int3   
   140003c07:	int3   
   140003c08:	int3   
   140003c09:	int3   
   140003c0a:	int3   
   140003c0b:	int3   
   140003c0c:	int3   
   140003c0d:	int3   
   140003c0e:	int3   
   140003c0f:	int3   
   140003c10:	lea    rcx,[rdx+0x50]
   140003c17:	jmp    0x1400049fc
   140003c1c:	int3   
   140003c1d:	int3   
   140003c1e:	int3   
   140003c1f:	int3   
   140003c20:	int3   
   140003c21:	int3   
   140003c22:	int3   
   140003c23:	int3   
   140003c24:	int3   
   140003c25:	int3   
   140003c26:	int3   
   140003c27:	int3   
   140003c28:	int3   
   140003c29:	int3   
   140003c2a:	int3   
   140003c2b:	int3   
   140003c2c:	int3   
   140003c2d:	int3   
   140003c2e:	int3   
   140003c2f:	int3   
   140003c30:	rex push rbp
   140003c32:	sub    rsp,0x20
   140003c36:	mov    rbp,rdx
   140003c39:	mov    rax,QWORD PTR [rcx]
   140003c3c:	xor    ecx,ecx
   140003c3e:	cmp    DWORD PTR [rax],0xc0000017
   140003c44:	sete   cl
   140003c47:	mov    eax,ecx
   140003c49:	add    rsp,0x20
   140003c4d:	pop    rbp
   140003c4e:	ret    
   140003c4f:	int3   
   140003c50:	int3   
   140003c51:	int3   
   140003c52:	int3   
   140003c53:	int3   
   140003c54:	int3   
   140003c55:	int3   
   140003c56:	rex push rbp
   140003c58:	sub    rsp,0x20
   140003c5c:	mov    rbp,rdx
   140003c5f:	mov    rax,QWORD PTR [rcx]
   140003c62:	mov    rdx,rcx
   140003c65:	mov    ecx,DWORD PTR [rax]
   140003c67:	call   0x14000357e
   140003c6c:	nop
   140003c6d:	add    rsp,0x20
   140003c71:	pop    rbp
   140003c72:	ret    
   140003c73:	int3   
   140003c74:	int3   
   140003c75:	int3   
   140003c76:	int3   
   140003c77:	int3   
   140003c78:	int3   
   140003c79:	int3   
   140003c7a:	rex push rbp
   140003c7c:	sub    rsp,0x20
   140003c80:	mov    rbp,rdx
   140003c83:	mov    ecx,0x8
   140003c88:	call   0x140003846
   140003c8d:	nop
   140003c8e:	add    rsp,0x20
   140003c92:	pop    rbp
   140003c93:	ret    
   140003c94:	int3   
   140003c95:	int3   
   140003c96:	int3   
   140003c97:	int3   
   140003c98:	int3   
   140003c99:	int3   
   140003c9a:	int3   
   140003c9b:	int3   
   140003c9c:	int3   
   140003c9d:	int3   
   140003c9e:	int3   
   140003c9f:	int3   
   140003ca0:	rex push rbp
   140003ca2:	sub    rsp,0x20
   140003ca6:	mov    rbp,rdx
   140003ca9:	mov    rax,QWORD PTR [rcx]
   140003cac:	xor    ecx,ecx
   140003cae:	cmp    DWORD PTR [rax],0xc0000005
   140003cb4:	sete   cl
   140003cb7:	mov    eax,ecx
   140003cb9:	add    rsp,0x20
   140003cbd:	pop    rbp
   140003cbe:	ret    
   140003cbf:	int3   
   140003cc0:	lea    rax,[rip+0x2859]        # 0x140006520
   140003cc7:	mov    QWORD PTR [rip+0x63a2],rax        # 0x14000a070
   140003cce:	ret    
   140003ccf:	int3   
   140003cd0:	lea    rax,[rip+0x2849]        # 0x140006520
   140003cd7:	mov    QWORD PTR [rip+0x6b2a],rax        # 0x14000a808
   140003cde:	ret    
   140003cdf:	int3   
   140003ce0:	lea    rax,[rip+0x2839]        # 0x140006520
   140003ce7:	mov    QWORD PTR [rip+0x6b12],rax        # 0x14000a800
   140003cee:	ret    
   140003cef:	int3   
   140003cf0:	jmp    0x140002db8
   140003cf5:	int3   
   140003cf6:	mov    rcx,QWORD PTR [rsp+0x648]
   140003cfe:	lea    rax,[rip+0x387b]        # 0x140007580
   140003d05:	mov    QWORD PTR [rsp+0x20],rax
   140003d0a:	lea    r9,[rip+0x2adf]        # 0x1400067f0
   140003d11:	lea    r8,[rip+0x29e8]        # 0x140006700
   140003d18:	mov    edx,0xc9
   140003d1d:	call   0x14000583c
   140003d22:	nop
   140003d23:	jmp    0x140001edc
   140003d28:	mov    rcx,QWORD PTR [rsp+0x648]
   140003d30:	lea    rax,[rip+0x38c1]        # 0x1400075f8
   140003d37:	mov    QWORD PTR [rsp+0x20],rax
   140003d3c:	lea    r9,[rip+0x2aad]        # 0x1400067f0
   140003d43:	lea    r8,[rip+0x29b6]        # 0x140006700
   140003d4a:	mov    edx,0xcb
   140003d4f:	call   0x14000583c
   140003d54:	jmp    0x140003d97
   140003d56:	lea    rax,[rip+0x3d63]        # 0x140007ac0
   140003d5d:	mov    edx,0xd6
   140003d62:	jmp    0x140003d7e
   140003d64:	lea    rax,[rip+0x3e15]        # 0x140007b80
   140003d6b:	mov    edx,0xde
   140003d70:	jmp    0x140003d7e
   140003d72:	lea    rax,[rip+0x3e77]        # 0x140007bf0
   140003d79:	mov    edx,0xe6
   140003d7e:	mov    QWORD PTR [rsp+0x20],rax
   140003d83:	lea    r9,[rip+0x2a66]        # 0x1400067f0
   140003d8a:	mov    rcx,QWORD PTR [rsp+0x648]
   140003d92:	call   0x140005c60
   140003d97:	mov    ebp,eax
   140003d99:	jmp    0x140001ecc
   140003d9e:	int3   
   140003d9f:	int3   
   140003da0:	mov    rcx,QWORD PTR [rbp+0x5f]
   140003da4:	lea    rax,[rip+0x3ca5]        # 0x140007a50
   140003dab:	mov    QWORD PTR [rsp+0x20],rax
   140003db0:	lea    r9,[rip+0x2999]        # 0x140006750
   140003db7:	mov    edx,0x42
   140003dbc:	call   0x140005c60
   140003dc1:	mov    edi,eax
   140003dc3:	jmp    0x1400022bf
   140003dc8:	lea    r8,[rip+0xffffffffffffc231]        # 0x140000000
   140003dcf:	mov    rax,QWORD PTR [r8+rdi*8+0x7010]
   140003dd7:	mov    QWORD PTR [rsp+0x38],rax
   140003ddc:	lea    rax,[rip+0x3ca5]        # 0x140007a88
   140003de3:	mov    edx,0x46
   140003de8:	jmp    0x14000228e
   140003ded:	lea    r8,[rip+0xffffffffffffc20c]        # 0x140000000
   140003df4:	mov    rax,QWORD PTR [r8+rdi*8+0x7010]
   140003dfc:	mov    QWORD PTR [rsp+0x38],rax
   140003e01:	lea    rax,[rip+0x3c80]        # 0x140007a88
   140003e08:	mov    edx,0x59
   140003e0d:	jmp    0x14000228e
   140003e12:	mov    DWORD PTR [r15+0x80],0x1
   140003e1d:	jmp    0x140002053
   140003e22:	lea    r8,[rip+0xffffffffffffc1d7]        # 0x140000000
   140003e29:	mov    rax,QWORD PTR [r8+rdi*8+0x7010]
   140003e31:	mov    QWORD PTR [rsp+0x38],rax
   140003e36:	lea    rax,[rip+0x3c4b]        # 0x140007a88
   140003e3d:	mov    edx,0x6d
   140003e42:	jmp    0x14000228e
   140003e47:	lea    r8,[rip+0xffffffffffffc1b2]        # 0x140000000
   140003e4e:	mov    rax,QWORD PTR [r8+rdi*8+0x7010]
   140003e56:	mov    QWORD PTR [rsp+0x38],rax
   140003e5b:	lea    rax,[rip+0x3c26]        # 0x140007a88
   140003e62:	mov    edx,0x7d
   140003e67:	jmp    0x14000228e
   140003e6c:	int3   
   140003e6d:	int3   
   140003e6e:	cmp    DWORD PTR [rbx+0x8],r10d
   140003e72:	je     0x140001186
   140003e78:	mov    rbx,QWORD PTR [rbx+0x10]
   140003e7c:	test   rbx,rbx
   140003e7f:	jne    0x140003e6e
   140003e81:	jmp    0x140001184
   140003e86:	cmp    QWORD PTR [rbx],0x0
   140003e8a:	je     0x14000118f
   140003e90:	mov    BYTE PTR [rdi],0x0
   140003e93:	mov    r9,rsi
   140003e96:	mov    rdx,QWORD PTR [rbx]
   140003e99:	mov    r8,rdi
   140003e9c:	mov    rcx,rbp
   140003e9f:	call   0x1400055c8
   140003ea4:	test   al,al
   140003ea6:	je     0x140003eac
   140003ea8:	mov    QWORD PTR [rbp+0x40],rdi
   140003eac:	mov    rsi,QWORD PTR [rbx]
   140003eaf:	mov    rdi,QWORD PTR [rsi+0x8]
   140003eb3:	mov    rax,QWORD PTR [rdi]
   140003eb6:	mov    rbx,QWORD PTR [rax]
   140003eb9:	mov    rcx,rbx
   140003ebc:	call   QWORD PTR [rip+0x250e]        # 0x1400063d0
   140003ec2:	mov    rdx,rbp
   140003ec5:	mov    rcx,rdi
   140003ec8:	call   rbx
   140003eca:	mov    rsi,QWORD PTR [rsi+0x10]
   140003ece:	or     r14b,al
   140003ed1:	test   rsi,rsi
   140003ed4:	jne    0x140003eaf
   140003ed6:	jmp    0x14000118f
   140003edb:	mov    rcx,rbx
   140003ede:	call   QWORD PTR [rip+0x24ec]        # 0x1400063d0
   140003ee4:	mov    rdx,rbp
   140003ee7:	movzx  ecx,r14b
   140003eeb:	call   rbx
   140003eed:	nop
   140003eee:	jmp    0x14000119f
   140003ef3:	int3   
   140003ef4:	mov    rcx,rsi
   140003ef7:	call   QWORD PTR [rip+0x24d3]        # 0x1400063d0
   140003efd:	mov    rax,QWORD PTR [rbx+0x30]
   140003f01:	mov    r9,r14
   140003f04:	mov    QWORD PTR [rsp+0x30],rax
   140003f09:	movzx  r8d,dil
   140003f0d:	mov    rax,QWORD PTR [rsp+0x88]
   140003f15:	mov    edx,r15d
   140003f18:	mov    QWORD PTR [rsp+0x28],rax
   140003f1d:	mov    rcx,r12
   140003f20:	mov    QWORD PTR [rsp+0x20],rbp
   140003f25:	call   rsi
   140003f27:	nop
   140003f28:	jmp    0x14000122d
   140003f2d:	int3   
   140003f2e:	mov    rcx,QWORD PTR [rbp+0x48]
   140003f32:	lea    rax,[rip+0x34cf]        # 0x140007408
   140003f39:	mov    QWORD PTR [rsp+0x20],rax
   140003f3e:	lea    r9,[rip+0x34db]        # 0x140007420
   140003f45:	lea    r8,[rip+0x34e4]        # 0x140007430
   140003f4c:	mov    edx,0x18
   140003f51:	call   0x14000583c
   140003f56:	mov    edi,eax
   140003f58:	jmp    0x140001536
   140003f5d:	mov    rcx,QWORD PTR [rbp+0x48]
   140003f61:	lea    rax,[rip+0x3510]        # 0x140007478
   140003f68:	mov    QWORD PTR [rsp+0x20],rax
   140003f6d:	lea    r9,[rip+0x34ac]        # 0x140007420
   140003f74:	lea    r8,[rip+0x34b5]        # 0x140007430
   140003f7b:	mov    edx,0x19
   140003f80:	call   0x14000583c
   140003f85:	mov    edi,eax
   140003f87:	jmp    0x140001536
   140003f8c:	mov    rcx,QWORD PTR [rbp+0x48]
   140003f90:	mov    DWORD PTR [rsp+0x28],eax
   140003f94:	lea    rax,[rip+0x3505]        # 0x1400074a0
   140003f9b:	mov    QWORD PTR [rsp+0x20],rax
   140003fa0:	lea    r9,[rip+0x3479]        # 0x140007420
   140003fa7:	lea    r8,[rip+0x3482]        # 0x140007430
   140003fae:	mov    edx,0x1b
   140003fb3:	call   0x140002cf0
   140003fb8:	nop
   140003fb9:	jmp    0x140001536
   140003fbe:	mov    ecx,eax
   140003fc0:	call   0x140005c40
   140003fc5:	nop
   140003fc6:	mov    rcx,QWORD PTR [rbp+0x48]
   140003fca:	mov    DWORD PTR [rsp+0x28],eax
   140003fce:	lea    rax,[rip+0x3503]        # 0x1400074d8
   140003fd5:	mov    QWORD PTR [rsp+0x20],rax
   140003fda:	lea    r9,[rip+0x343f]        # 0x140007420
   140003fe1:	lea    r8,[rip+0x3448]        # 0x140007430
   140003fe8:	mov    edx,0x1e
   140003fed:	call   0x14000586c
   140003ff2:	nop
   140003ff3:	jmp    0x14000146e
   140003ff8:	mov    rcx,QWORD PTR [rbp+0x48]
   140003ffc:	mov    DWORD PTR [rsp+0x28],eax
   140004000:	lea    rax,[rip+0x3501]        # 0x140007508
   140004007:	mov    QWORD PTR [rsp+0x20],rax
   14000400c:	lea    r9,[rip+0x340d]        # 0x140007420
   140004013:	lea    r8,[rip+0x3416]        # 0x140007430
   14000401a:	mov    edx,0x20
   14000401f:	call   0x14000586c
   140004024:	nop
   140004025:	jmp    0x14000146e
   14000402a:	mov    edx,0x2
   14000402f:	lea    rcx,[rbp-0x80]
   140004033:	call   0x140001d60
   140004038:	nop
   140004039:	jmp    0x1400014ab
   14000403e:	call   QWORD PTR [rip+0x20d4]        # 0x140006118
   140004044:	nop
   140004045:	jmp    0x1400014c7
   14000404a:	call   QWORD PTR [rip+0x2358]        # 0x1400063a8
   140004050:	mov    rcx,QWORD PTR [rbp-0x38]
   140004054:	or     eax,0x10000000
   140004059:	cmovns rcx,r12
   14000405d:	mov    QWORD PTR [rbp-0x38],rcx
   140004061:	jmp    0x1400014fa
   140004066:	mov    rcx,r15
   140004069:	call   QWORD PTR [rip+0x2361]        # 0x1400063d0
   14000406f:	movzx  edx,r14b
   140004073:	mov    rcx,rsi
   140004076:	call   r15
   140004079:	nop
   14000407a:	jmp    0x140001532
   14000407f:	lea    rcx,[rsp+0x70]
   140004084:	call   0x1400047ec
   140004089:	nop
   14000408a:	jmp    0x14000153f
   14000408f:	int3   
   140004090:	mov    rcx,QWORD PTR [rbp+0x318]
   140004097:	lea    rax,[rip+0x3482]        # 0x140007520
   14000409e:	mov    QWORD PTR [rsp+0x20],rax
   1400040a3:	lea    r9,[rip+0x34be]        # 0x140007568
   1400040aa:	lea    r8,[rip+0x337f]        # 0x140007430
   1400040b1:	mov    edx,0x36
   1400040b6:	call   0x14000583c
   1400040bb:	nop
   1400040bc:	jmp    0x1400018af
   1400040c1:	mov    rcx,QWORD PTR [rbp+0x318]
   1400040c8:	lea    rax,[rip+0x34b1]        # 0x140007580
   1400040cf:	mov    QWORD PTR [rsp+0x20],rax
   1400040d4:	lea    r9,[rip+0x348d]        # 0x140007568
   1400040db:	lea    r8,[rip+0x334e]        # 0x140007430
   1400040e2:	mov    edx,0x3d
   1400040e7:	call   0x14000583c
   1400040ec:	nop
   1400040ed:	jmp    0x1400018af
   1400040f2:	mov    rcx,QWORD PTR [rbp+0x318]
   1400040f9:	lea    rax,[rip+0x34f8]        # 0x1400075f8
   140004100:	mov    QWORD PTR [rsp+0x20],rax
   140004105:	lea    r9,[rip+0x345c]        # 0x140007568
   14000410c:	lea    r8,[rip+0x331d]        # 0x140007430
   140004113:	mov    edx,0x3f
   140004118:	call   0x14000583c
   14000411d:	mov    r12d,eax
   140004120:	jmp    0x14000189e
   140004125:	mov    rcx,QWORD PTR [rbp+0x318]
   14000412c:	lea    rax,[rip+0x34dd]        # 0x140007610
   140004133:	mov    QWORD PTR [rsp+0x20],rax
   140004138:	lea    r9,[rip+0x3429]        # 0x140007568
   14000413f:	lea    r8,[rip+0x32ea]        # 0x140007430
   140004146:	mov    edx,0x43
   14000414b:	call   0x14000583c
   140004150:	mov    r12d,eax
   140004153:	jmp    0x14000189e
   140004158:	mov    rcx,QWORD PTR [rbp+0x318]
   14000415f:	lea    rax,[rip+0x350a]        # 0x140007670
   140004166:	mov    QWORD PTR [rsp+0x20],rax
   14000416b:	lea    r9,[rip+0x33f6]        # 0x140007568
   140004172:	lea    r8,[rip+0x32b7]        # 0x140007430
   140004179:	mov    edx,0x44
   14000417e:	call   0x14000583c
   140004183:	mov    r12d,eax
   140004186:	jmp    0x14000189e
   14000418b:	mov    rcx,QWORD PTR [rbp+0x318]
   140004192:	lea    rax,[rip+0x3537]        # 0x1400076d0
   140004199:	mov    QWORD PTR [rsp+0x20],rax
   14000419e:	lea    r9,[rip+0x33c3]        # 0x140007568
   1400041a5:	lea    r8,[rip+0x3284]        # 0x140007430
   1400041ac:	mov    edx,0x45
   1400041b1:	call   0x14000583c
   1400041b6:	mov    r12d,eax
   1400041b9:	jmp    0x14000189e
   1400041be:	mov    rcx,QWORD PTR [rbp+0x318]
   1400041c5:	lea    rax,[rip+0x3544]        # 0x140007710
   1400041cc:	mov    QWORD PTR [rsp+0x20],rax
   1400041d1:	lea    r9,[rip+0x3390]        # 0x140007568
   1400041d8:	lea    r8,[rip+0x3251]        # 0x140007430
   1400041df:	mov    edx,0x4e
   1400041e4:	call   0x14000583c
   1400041e9:	mov    r12d,eax
   1400041ec:	jmp    0x14000189e
   1400041f1:	mov    rcx,QWORD PTR [rbp+0x318]
   1400041f8:	lea    rax,[rip+0x3531]        # 0x140007730
   1400041ff:	mov    QWORD PTR [rsp+0x20],rax
   140004204:	lea    r9,[rip+0x335d]        # 0x140007568
   14000420b:	lea    r8,[rip+0x321e]        # 0x140007430
   140004212:	mov    edx,0x5c
   140004217:	call   0x14000583c
   14000421c:	mov    r12d,eax
   14000421f:	jmp    0x14000189e
   140004224:	mov    rcx,QWORD PTR [rbp+0x318]
   14000422b:	lea    rax,[rip+0x272e]        # 0x140006960
   140004232:	mov    QWORD PTR [rsp+0x20],rax
   140004237:	lea    r9,[rip+0x2772]        # 0x1400069b0
   14000423e:	lea    r8,[rip+0x24bb]        # 0x140006700
   140004245:	mov    edx,0x2a
   14000424a:	call   0x14000583c
   14000424f:	mov    r12d,eax
   140004252:	jmp    0x14000189e
   140004257:	call   QWORD PTR [rip+0x201b]        # 0x140006278
   14000425d:	nop
   14000425e:	mov    r12d,0x8000ffff
   140004264:	jmp    0x14000185d
   140004269:	cmp    r13,r15
   14000426c:	setne  dil
   140004270:	mov    rax,QWORD PTR [r13+0x0]
   140004274:	mov    rsi,QWORD PTR [rax+0x20]
   140004278:	mov    rcx,rsi
   14000427b:	call   QWORD PTR [rip+0x214f]        # 0x1400063d0
   140004281:	movzx  edx,dil
   140004285:	mov    rcx,r13
   140004288:	call   rsi
   14000428a:	xor    r13d,r13d
   14000428d:	mov    QWORD PTR [r15+0x18],r13
   140004291:	mov    r14,QWORD PTR [rbp-0x78]
   140004295:	lea    rsi,[r15+0x20]
   140004299:	jmp    0x1400017eb
   14000429e:	mov    QWORD PTR [r15+0x18],r13
   1400042a2:	jmp    0x140001826
   1400042a7:	mov    rcx,rdi
   1400042aa:	call   QWORD PTR [rip+0x2120]        # 0x1400063d0
   1400042b0:	mov    rdx,r15
   1400042b3:	jmp    0x1400042c0
   1400042b5:	mov    rcx,rdi
   1400042b8:	call   QWORD PTR [rip+0x2112]        # 0x1400063d0
   1400042be:	xor    edx,edx
   1400042c0:	mov    rcx,r14
   1400042c3:	call   rdi
   1400042c5:	nop
   1400042c6:	jmp    0x140001822
   1400042cb:	mov    r12d,eax
   1400042ce:	bts    r12d,0x1c
   1400042d3:	jmp    0x14000185d
   1400042d8:	mov    rcx,rsi
   1400042db:	call   QWORD PTR [rip+0x20ef]        # 0x1400063d0
   1400042e1:	movzx  edx,dil
   1400042e5:	mov    rcx,r14
   1400042e8:	call   rsi
   1400042ea:	nop
   1400042eb:	jmp    0x140001892
   1400042f0:	mov    rcx,QWORD PTR [rbp+0x318]
   1400042f7:	mov    DWORD PTR [rsp+0x28],r12d
   1400042fc:	lea    rax,[rip+0x26dd]        # 0x1400069e0
   140004303:	mov    QWORD PTR [rsp+0x20],rax
   140004308:	lea    r9,[rip+0x26a1]        # 0x1400069b0
   14000430f:	lea    r8,[rip+0x23ea]        # 0x140006700
   140004316:	mov    edx,0x31
   14000431b:	call   0x14000586c
   140004320:	nop
   140004321:	jmp    0x14000189e
   140004326:	int3   
   140004327:	int3   
   140004328:	cmp    r8w,0x9c41
   14000432e:	jne    0x1400043c2
   140004334:	xor    eax,eax
   140004336:	mov    QWORD PTR [rsp+0x30],rax
   14000433b:	lea    rax,[rsp+0x30]
   140004340:	mov    QWORD PTR [rsp+0x20],rax
   140004345:	lea    r9,[rip+0x358c]        # 0x1400078d8
   14000434c:	xor    edx,edx
   14000434e:	lea    r8d,[rdx+0x1]
   140004352:	lea    rcx,[rip+0x38e7]        # 0x140007c40
   140004359:	call   QWORD PTR [rip+0x1e49]        # 0x1400061a8
   14000435f:	test   eax,eax
   140004361:	js     0x140004399
   140004363:	mov    rbx,QWORD PTR [rsp+0x30]
   140004368:	mov    rax,QWORD PTR [rbx]
   14000436b:	mov    rdi,QWORD PTR [rax+0x18]
   14000436f:	mov    rcx,rdi
   140004372:	call   QWORD PTR [rip+0x2058]        # 0x1400063d0
   140004378:	lea    rax,[rsp+0x68]
   14000437d:	mov    QWORD PTR [rsp+0x20],rax
   140004382:	xor    r9d,r9d
   140004385:	lea    r8,[rip+0x3454]        # 0x1400077e0
   14000438c:	lea    rdx,[rip+0x349d]        # 0x140007830
   140004393:	mov    rcx,rbx
   140004396:	call   rdi
   140004398:	nop
   140004399:	mov    rbx,QWORD PTR [rsp+0x30]
   14000439e:	test   rbx,rbx
   1400043a1:	je     0x140001998
   1400043a7:	mov    rax,QWORD PTR [rbx]
   1400043aa:	mov    rdi,QWORD PTR [rax+0x10]
   1400043ae:	mov    rcx,rdi
   1400043b1:	call   QWORD PTR [rip+0x2019]        # 0x1400063d0
   1400043b7:	mov    rcx,rbx
   1400043ba:	call   rdi
   1400043bc:	nop
   1400043bd:	jmp    0x140001998
   1400043c2:	mov    edx,0x111
   1400043c7:	jmp    0x14000196e
   1400043cc:	xor    r8d,r8d
   1400043cf:	lea    edx,[r8-0x15]
   1400043d3:	call   QWORD PTR [rip+0x1d0f]        # 0x1400060e8
   1400043d9:	xor    ecx,ecx
   1400043db:	call   QWORD PTR [rip+0x1d17]        # 0x1400060f8
   1400043e1:	nop
   1400043e2:	jmp    0x140001998
   1400043e7:	mov    edx,0xffffffeb
   1400043ec:	call   QWORD PTR [rip+0x1d0e]        # 0x140006100
   1400043f2:	test   rax,rax
   1400043f5:	je     0x140001998
   1400043fb:	cmp    r14,0x202
   140004402:	je     0x140004411
   140004404:	cmp    r14,0x205
   14000440b:	jne    0x140001998
   140004411:	mov    rcx,rax
   140004414:	call   0x140005c98
   140004419:	nop
   14000441a:	jmp    0x140001998
   14000441f:	mov    rcx,QWORD PTR [rsp+0x58]
   140004424:	lea    rax,[rip+0x2705]        # 0x140006b30
   14000442b:	mov    QWORD PTR [rsp+0x20],rax
   140004430:	lea    r9,[rip+0x2729]        # 0x140006b60
   140004437:	mov    edx,0x118
   14000443c:	call   0x140005c60
   140004441:	nop
   140004442:	lea    rcx,[rsp+0x30]
   140004447:	call   0x1400049fc
   14000444c:	nop
   14000444d:	jmp    0x140001998
   140004452:	xor    edx,edx
   140004454:	mov    rcx,rbp
   140004457:	call   0x140001d60
   14000445c:	nop
   14000445d:	jmp    0x140001b10
   140004462:	mov    rcx,rbx
   140004465:	call   QWORD PTR [rip+0x1f65]        # 0x1400063d0
   14000446b:	mov    r8d,esi
   14000446e:	mov    rdx,rdi
   140004471:	mov    rcx,rbp
   140004474:	call   rbx
   140004476:	nop
   140004477:	jmp    0x140001b10
   14000447c:	mov    rcx,rbp
   14000447f:	call   QWORD PTR [rip+0x1f4b]        # 0x1400063d0
   140004485:	lea    r8,[rsp+0x20]
   14000448a:	mov    rcx,rbx
   14000448d:	lea    rdx,[rsp+0x28]
   140004492:	call   rbp
   140004494:	nop
   140004495:	jmp    0x140001b10
   14000449a:	mov    rcx,rsi
   14000449d:	call   QWORD PTR [rip+0x1f2d]        # 0x1400063d0
   1400044a3:	xor    edx,edx
   1400044a5:	mov    rcx,rbx
   1400044a8:	call   rsi
   1400044aa:	nop
   1400044ab:	jmp    0x140001bc6
   1400044b0:	xor    edx,edx
   1400044b2:	mov    rcx,rsi
   1400044b5:	call   0x140001d60
   1400044ba:	nop
   1400044bb:	jmp    0x140001c53
   1400044c0:	mov    rcx,rbp
   1400044c3:	call   QWORD PTR [rip+0x1f07]        # 0x1400063d0
   1400044c9:	mov    r8d,edi
   1400044cc:	mov    rdx,rbx
   1400044cf:	mov    rcx,rsi
   1400044d2:	call   rbp
   1400044d4:	nop
   1400044d5:	jmp    0x140001c53
   1400044da:	mov    rcx,QWORD PTR [rsp+0x38]
   1400044df:	lea    rdx,[rip+0x25da]        # 0x140006ac0
   1400044e6:	mov    DWORD PTR [rsp+0x28],0x80070057
   1400044ee:	lea    r9,[rip+0x2613]        # 0x140006b08
   1400044f5:	mov    QWORD PTR [rsp+0x20],rdx
   1400044fa:	lea    r8,[rip+0x21ff]        # 0x140006700
   140004501:	mov    edx,0xb4
   140004506:	call   0x140002cf0
   14000450b:	mov    eax,0x80070057
   140004510:	jmp    0x140001f92
   140004515:	int3   
   140004516:	xor    eax,eax
   140004518:	mov    WORD PTR [rsp+0x50],ax
   14000451d:	jmp    0x140002402
   140004522:	mov    eax,r9d
   140004525:	test   rdx,rdx
   140004528:	je     0x1400024c8
   14000452e:	mov    WORD PTR [rcx],di
   140004531:	jmp    0x1400024c8
   140004536:	cmp    QWORD PTR [rip+0x63e2],0x0        # 0x14000a920
   14000453e:	je     0x140002531
   140004544:	mov    dil,0x1
   140004547:	jmp    0x140002534
   14000454c:	mov    ecx,0x7
   140004551:	int    0x29
   140004553:	jmp    0x14000259c
   140004558:	test   dil,dil
   14000455b:	je     0x14000457f
   14000455d:	mov    rbx,QWORD PTR [rip+0x63bc]        # 0x14000a920
   140004564:	mov    rcx,rbx
   140004567:	call   QWORD PTR [rip+0x1e63]        # 0x1400063d0
   14000456d:	lea    rdx,[rsp+0x5b0]
   140004575:	lea    rcx,[rsp+0x120]
   14000457d:	call   rbx
   14000457f:	xor    eax,eax
   140004581:	lea    rdx,[rsp+0x120]
   140004589:	lea    rcx,[rsp+0x80]
   140004591:	mov    QWORD PTR [rsp+0x110],rax
   140004599:	mov    QWORD PTR [rsp+0x118],rax
   1400045a1:	call   0x1400058a4
   1400045a6:	lea    rdx,[rip+0x46ab]        # 0x140008c58
   1400045ad:	lea    rcx,[rsp+0x80]
   1400045b5:	call   0x140003866
   1400045ba:	int3   
   1400045bb:	int3   
   1400045bc:	mov    r8d,r15d
   1400045bf:	test   r15d,r15d
   1400045c2:	je     0x140004638
   1400045c4:	sub    r8d,0x2
   1400045c8:	je     0x14000462b
   1400045ca:	sub    r8d,0x1
   1400045ce:	je     0x1400045e7
   1400045d0:	cmp    r8d,0x1
   1400045d4:	jne    0x14000261f
   1400045da:	mov    ecx,esi
   1400045dc:	call   0x140003a40
   1400045e1:	nop
   1400045e2:	jmp    0x14000261d
   1400045e7:	test   esi,esi
   1400045e9:	js     0x14000461e
   1400045eb:	mov    rax,QWORD PTR [rsp+0xa8]
   1400045f3:	mov    esi,0x8007029c
   1400045f8:	mov    DWORD PTR [rsp+0x38],esi
   1400045fc:	mov    r8,r13
   1400045ff:	mov    DWORD PTR [rsp+0x30],0x3
   140004607:	mov    QWORD PTR [rsp+0x28],rax
   14000460c:	mov    rax,QWORD PTR [rsp+0xa0]
   140004614:	mov    QWORD PTR [rsp+0x20],rax
   140004619:	call   0x140002d30
   14000461e:	mov    ecx,esi
   140004620:	call   0x140003aa0
   140004625:	nop
   140004626:	jmp    0x14000261d
   14000462b:	mov    ecx,esi
   14000462d:	call   0x140003ab8
   140004632:	nop
   140004633:	jmp    0x14000261d
   140004638:	mov    ecx,esi
   14000463a:	call   0x140003a88
   14000463f:	nop
   140004640:	jmp    0x14000261d
   140004645:	mov    rcx,rsi
   140004648:	call   QWORD PTR [rip+0x1d82]        # 0x1400063d0
   14000464e:	call   rsi
   140004650:	nop
   140004651:	jmp    0x1400026e0
   140004656:	mov    rcx,rdi
   140004659:	call   QWORD PTR [rip+0x1d71]        # 0x1400063d0
   14000465f:	mov    rcx,rbx
   140004662:	call   rdi
   140004664:	nop
   140004665:	jmp    0x140002708
   14000466a:	cmp    r15d,0x4
   14000466e:	je     0x140002712
   140004674:	mov    rcx,QWORD PTR [rsp+0x78]
   140004679:	lea    rax,[rip+0x2258]        # 0x1400068d8
   140004680:	lea    r9,[rip+0x2291]        # 0x140006918
   140004687:	mov    QWORD PTR [rsp+0x20],rax
   14000468c:	lea    r8,[rip+0x22a5]        # 0x140006938
   140004693:	mov    edx,0xb46
   140004698:	call   0x140005b54
   14000469d:	int3   
   14000469e:	mov    rcx,rdi
   1400046a1:	call   QWORD PTR [rip+0x1d29]        # 0x1400063d0
   1400046a7:	xor    r8d,r8d
   1400046aa:	xor    edx,edx
   1400046ac:	mov    rcx,rbx
   1400046af:	call   rdi
   1400046b1:	nop
   1400046b2:	jmp    0x140002776
   1400046b7:	test   rdi,rdi
   1400046ba:	je     0x1400046d8
   1400046bc:	mov    rcx,rdi
   1400046bf:	call   QWORD PTR [rip+0x1d0b]        # 0x1400063d0
   1400046c5:	mov    rdx,QWORD PTR [rsp+0xd0]
   1400046cd:	mov    r8d,0x800
   1400046d3:	mov    rcx,rbx
   1400046d6:	call   rdi
   1400046d8:	mov    rax,QWORD PTR [rsp+0xd0]
   1400046e0:	cmp    WORD PTR [rax],0x0
   1400046e4:	jne    0x1400046fe
   1400046e6:	mov    r8,rbx
   1400046e9:	mov    edx,0x800
   1400046ee:	mov    rcx,rax
   1400046f1:	call   0x1400053a0
   1400046f6:	mov    rax,QWORD PTR [rsp+0xd0]
   1400046fe:	test   sil,sil
   140004701:	je     0x140002776
   140004707:	mov    rcx,rax
   14000470a:	call   QWORD PTR [rip+0x1950]        # 0x140006060
   140004710:	nop
   140004711:	jmp    0x140002776
   140004716:	test   rbx,rbx
   140004719:	mov    DWORD PTR [rsp+0x38],r8d
   14000471e:	lea    rdx,[rip+0x245f]        # 0x140006b84
   140004725:	mov    r8d,r10d
   140004728:	mov    rcx,rdx
   14000472b:	lea    r9,[rip+0x245e]        # 0x140006b90
   140004732:	cmovne rcx,rbx
   140004736:	mov    rax,rdx
   140004739:	test   rdi,rdi
   14000473c:	mov    QWORD PTR [rsp+0x30],rcx
   140004741:	cmovne rax,rdi
   140004745:	test   rsi,rsi
   140004748:	mov    QWORD PTR [rsp+0x28],rax
   14000474d:	cmovne rdx,rsi
   140004751:	test   rbp,rbp
   140004754:	mov    QWORD PTR [rsp+0x20],rdx
   140004759:	cmovne r9,rbp
   14000475d:	call   0x140005d78
   140004762:	nop
   140004763:	jmp    0x14000281f
   140004768:	cmp    DWORD PTR [rip+0x58c1],0x5        # 0x14000a030
   14000476f:	jbe    0x1400047b5
   140004771:	lea    rdx,[rip+0x3330]        # 0x140007aa8
   140004778:	lea    rcx,[rsp+0x60]
   14000477d:	call   0x140002ca0
   140004782:	lea    rax,[rip+0x2a57]        # 0x1400071e0
   140004789:	mov    rdx,QWORD PTR [rax+rdi*8]
   14000478d:	lea    rcx,[rsp+0x70]
   140004792:	call   0x140002aa0
   140004797:	lea    rax,[rsp+0x40]
   14000479c:	mov    QWORD PTR [rsp+0x28],rax
   1400047a1:	lea    rdx,[rip+0x2a71]        # 0x140007219
   1400047a8:	mov    DWORD PTR [rsp+0x20],0x4
   1400047b0:	call   0x140002bf0
   1400047b5:	mov    edx,0x2
   1400047ba:	jmp    0x140002b91
   1400047bf:	int3   
   1400047c0:	int3   
   1400047c1:	int3   
   1400047c2:	int3   
   1400047c3:	int3   
   1400047c4:	int3   
   1400047c5:	int3   
   1400047c6:	int3   
   1400047c7:	int3   
   1400047c8:	rex.W jmp QWORD PTR [rip+0x18c9]        # 0x140006098
   1400047cf:	int3   
   1400047d0:	int3   
   1400047d1:	int3   
   1400047d2:	int3   
   1400047d3:	int3   
   1400047d4:	int3   
   1400047d5:	int3   
   1400047d6:	int3   
   1400047d7:	int3   
   1400047d8:	cmp    QWORD PTR [rcx],0x0
   1400047dc:	jne    0x1400047ec
   1400047e2:	ret    
   1400047e3:	int3   
   1400047e4:	int3   
   1400047e5:	int3   
   1400047e6:	int3   
   1400047e7:	int3   
   1400047e8:	int3   
   1400047e9:	int3   
   1400047ea:	int3   
   1400047eb:	int3   
   1400047ec:	rex push rbx
   1400047ee:	sub    rsp,0x20
   1400047f2:	mov    rbx,rcx
   1400047f5:	mov    rcx,QWORD PTR [rcx]
   1400047f8:	test   rcx,rcx
   1400047fb:	je     0x14000480a
   1400047fd:	call   QWORD PTR [rip+0x1855]        # 0x140006058
   140004803:	mov    QWORD PTR [rbx],0x0
   14000480a:	add    rsp,0x20
   14000480e:	pop    rbx
   14000480f:	ret    
   140004810:	int3   
   140004811:	int3   
   140004812:	int3   
   140004813:	int3   
   140004814:	int3   
   140004815:	int3   
   140004816:	int3   
   140004817:	int3   
   140004818:	mov    QWORD PTR [rsp+0x8],rcx
   14000481d:	push   rbx
   14000481e:	sub    rsp,0x30
   140004822:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000482b:	mov    rbx,rcx
   14000482e:	call   0x140004854
   140004833:	nop
   140004834:	mov    rcx,rbx
   140004837:	add    rsp,0x30
   14000483b:	pop    rbx
   14000483c:	jmp    0x14000488c
   140004841:	mov    rcx,QWORD PTR [rdx+0x40]
   140004848:	jmp    0x14000488c
   14000484d:	int3   
   14000484e:	int3   
   14000484f:	int3   
   140004850:	int3   
   140004851:	int3   
   140004852:	int3   
   140004853:	int3   
   140004854:	rex push rbx
   140004856:	sub    rsp,0x20
   14000485a:	mov    rbx,rcx
   14000485d:	mov    rcx,QWORD PTR [rcx+0x20]
   140004861:	test   rcx,rcx
   140004864:	jne    0x14000486b
   140004866:	lea    eax,[rcx+0x1]
   140004869:	jmp    0x140004880
   14000486b:	call   QWORD PTR [rip+0x1b37]        # 0x1400063a8
   140004871:	or     eax,0x10000000
   140004876:	jl     0x140004880
   140004878:	mov    QWORD PTR [rbx+0x20],0x0
   140004880:	add    rsp,0x20
   140004884:	pop    rbx
   140004885:	ret    
   140004886:	int3   
   140004887:	int3   
   140004888:	int3   
   140004889:	int3   
   14000488a:	int3   
   14000488b:	int3   
   14000488c:	rex push rbx
   14000488e:	sub    rsp,0x20
   140004892:	mov    rbx,rcx
   140004895:	call   0x1400048b0
   14000489a:	mov    rcx,rbx
   14000489d:	add    rsp,0x20
   1400048a1:	pop    rbx
   1400048a2:	jmp    0x1400048b0
   1400048a7:	int3   
   1400048a8:	int3   
   1400048a9:	int3   
   1400048aa:	int3   
   1400048ab:	int3   
   1400048ac:	int3   
   1400048ad:	int3   
   1400048ae:	int3   
   1400048af:	int3   
   1400048b0:	mov    QWORD PTR [rsp+0x18],rbp
   1400048b5:	push   rsi
   1400048b6:	sub    rsp,0x20
   1400048ba:	mov    rsi,QWORD PTR [rcx+0x18]
   1400048be:	mov    rbp,rcx
   1400048c1:	test   rsi,rsi
   1400048c4:	je     0x140004900
   1400048c6:	mov    rax,QWORD PTR [rsi]
   1400048c9:	cmp    rsi,rcx
   1400048cc:	mov    QWORD PTR [rsp+0x30],rbx
   1400048d1:	mov    QWORD PTR [rsp+0x38],rdi
   1400048d6:	setne  bl
   1400048d9:	mov    rdi,QWORD PTR [rax+0x20]
   1400048dd:	mov    rcx,rdi
   1400048e0:	call   QWORD PTR [rip+0x1aea]        # 0x1400063d0
   1400048e6:	movzx  edx,bl
   1400048e9:	mov    rcx,rsi
   1400048ec:	call   rdi
   1400048ee:	mov    rdi,QWORD PTR [rsp+0x38]
   1400048f3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400048f8:	mov    QWORD PTR [rbp+0x18],0x0
   140004900:	mov    rbp,QWORD PTR [rsp+0x40]
   140004905:	add    rsp,0x20
   140004909:	pop    rsi
   14000490a:	ret    
   14000490b:	int3   
   14000490c:	int3   
   14000490d:	int3   
   14000490e:	int3   
   14000490f:	int3   
   140004910:	int3   
   140004911:	int3   
   140004912:	int3   
   140004913:	int3   
   140004914:	jmp    0x1400048b0
   140004919:	int3   
   14000491a:	int3   
   14000491b:	int3   
   14000491c:	int3   
   14000491d:	int3   
   14000491e:	int3   
   14000491f:	int3   
   140004920:	mov    rcx,QWORD PTR [rcx]
   140004923:	test   rcx,rcx
   140004926:	je     0x14000492f
   140004928:	rex.W jmp QWORD PTR [rip+0x1759]        # 0x140006088
   14000492f:	ret    
   140004930:	int3   
   140004931:	int3   
   140004932:	int3   
   140004933:	int3   
   140004934:	int3   
   140004935:	int3   
   140004936:	int3   
   140004937:	int3   
   140004938:	mov    QWORD PTR [rsp+0x8],rcx
   14000493d:	push   rdi
   14000493e:	sub    rsp,0x30
   140004942:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000494b:	mov    QWORD PTR [rsp+0x48],rbx
   140004950:	mov    rbx,rcx
   140004953:	lea    rdi,[rcx+0x28]
   140004957:	mov    rcx,rdi
   14000495a:	call   0x140004854
   14000495f:	mov    edx,0x2
   140004964:	mov    rcx,rbx
   140004967:	call   0x140001f50
   14000496c:	mov    rcx,QWORD PTR [rbx+0x8]
   140004970:	test   rcx,rcx
   140004973:	je     0x14000497b
   140004975:	call   QWORD PTR [rip+0x1795]        # 0x140006110
   14000497b:	mov    rcx,QWORD PTR [rbx+0x20]
   14000497f:	test   rcx,rcx
   140004982:	je     0x14000498a
   140004984:	call   QWORD PTR [rip+0x178e]        # 0x140006118
   14000498a:	mov    rdx,QWORD PTR [rbx+0x10]
   14000498e:	lea    rcx,[rip+0x1c4b]        # 0x1400065e0
   140004995:	call   QWORD PTR [rip+0x1785]        # 0x140006120
   14000499b:	nop
   14000499c:	lea    rcx,[rbx+0x58]
   1400049a0:	call   QWORD PTR [rip+0x16f2]        # 0x140006098
   1400049a6:	nop
   1400049a7:	mov    QWORD PTR [rsp+0x40],rdi
   1400049ac:	mov    rcx,rdi
   1400049af:	call   0x140004854
   1400049b4:	nop
   1400049b5:	mov    rcx,rdi
   1400049b8:	mov    rbx,QWORD PTR [rsp+0x48]
   1400049bd:	add    rsp,0x30
   1400049c1:	pop    rdi
   1400049c2:	jmp    0x14000488c
   1400049c7:	mov    rcx,QWORD PTR [rdx+0x40]
   1400049ce:	add    rcx,0x28
   1400049d2:	jmp    0x140004818
   1400049d7:	mov    rcx,QWORD PTR [rdx+0x40]
   1400049de:	add    rcx,0x58
   1400049e2:	jmp    0x1400047c8
   1400049e7:	mov    rcx,QWORD PTR [rdx+0x40]
   1400049ee:	jmp    0x14000488c
   1400049f3:	int3   
   1400049f4:	int3   
   1400049f5:	int3   
   1400049f6:	int3   
   1400049f7:	int3   
   1400049f8:	int3   
   1400049f9:	int3   
   1400049fa:	int3   
   1400049fb:	int3   
   1400049fc:	rex push rbx
   1400049fe:	sub    rsp,0x20
   140004a02:	cmp    BYTE PTR [rcx+0x8],0x0
   140004a06:	mov    rbx,rcx
   140004a09:	je     0x140004a18
   140004a0b:	mov    rcx,QWORD PTR [rcx]
   140004a0e:	call   QWORD PTR [rip+0x1694]        # 0x1400060a8
   140004a14:	mov    BYTE PTR [rbx+0x8],0x0
   140004a18:	add    rsp,0x20
   140004a1c:	pop    rbx
   140004a1d:	ret    
   140004a1e:	int3   
   140004a1f:	int3   
   140004a20:	int3   
   140004a21:	int3   
   140004a22:	int3   
   140004a23:	int3   
   140004a24:	rex push rbx
   140004a26:	sub    rsp,0x20
   140004a2a:	xor    r8d,r8d
   140004a2d:	mov    QWORD PTR [rcx+0x18],0xf
   140004a35:	mov    QWORD PTR [rcx+0x10],r8
   140004a39:	mov    rbx,rcx
   140004a3c:	mov    BYTE PTR [rcx],r8b
   140004a3f:	cmp    BYTE PTR [rdx],r8b
   140004a42:	je     0x140004a52
   140004a44:	or     r8,0xffffffffffffffff
   140004a48:	inc    r8
   140004a4b:	cmp    BYTE PTR [rdx+r8*1],0x0
   140004a50:	jne    0x140004a48
   140004a52:	call   0x140004ea4
   140004a57:	mov    rax,rbx
   140004a5a:	add    rsp,0x20
   140004a5e:	pop    rbx
   140004a5f:	ret    
   140004a60:	int3   
   140004a61:	int3   
   140004a62:	int3   
   140004a63:	int3   
   140004a64:	int3   
   140004a65:	int3   
   140004a66:	int3   
   140004a67:	int3   
   140004a68:	int3   
   140004a69:	int3   
   140004a6a:	int3   
   140004a6b:	int3   
   140004a6c:	int3   
   140004a6d:	int3   
   140004a6e:	int3   
   140004a6f:	int3   
   140004a70:	rex push rbx
   140004a72:	sub    rsp,0x20
   140004a76:	lea    rax,[rip+0x1aa3]        # 0x140006520
   140004a7d:	mov    rbx,rcx
   140004a80:	mov    QWORD PTR [rcx],rax
   140004a83:	test   dl,0x1
   140004a86:	je     0x140004a8e
   140004a88:	call   QWORD PTR [rip+0x18f2]        # 0x140006380
   140004a8e:	mov    rax,rbx
   140004a91:	add    rsp,0x20
   140004a95:	pop    rbx
   140004a96:	ret    
   140004a97:	int3   
   140004a98:	int3   
   140004a99:	int3   
   140004a9a:	int3   
   140004a9b:	int3   
   140004a9c:	int3   
   140004a9d:	int3   
   140004a9e:	int3   
   140004a9f:	int3   
   140004aa0:	sub    rsp,0x28
   140004aa4:	lea    rcx,[rip+0x28b5]        # 0x140007360
   140004aab:	call   QWORD PTR [rip+0x1587]        # 0x140006038
   140004ab1:	test   rax,rax
   140004ab4:	je     0x140004af0
   140004ab6:	lea    rdx,[rip+0x28bb]        # 0x140007378
   140004abd:	mov    QWORD PTR [rsp+0x20],rbx
   140004ac2:	mov    rcx,rax
   140004ac5:	call   QWORD PTR [rip+0x1575]        # 0x140006040
   140004acb:	mov    rbx,rax
   140004ace:	test   rax,rax
   140004ad1:	je     0x140004aeb
   140004ad3:	mov    rcx,rax
   140004ad6:	call   QWORD PTR [rip+0x18f4]        # 0x1400063d0
   140004adc:	mov    rax,rbx
   140004adf:	mov    rbx,QWORD PTR [rsp+0x20]
   140004ae4:	add    rsp,0x28
   140004ae8:	rex.W jmp rax
   140004aeb:	mov    rbx,QWORD PTR [rsp+0x20]
   140004af0:	add    rsp,0x28
   140004af4:	ret    
   140004af5:	int3   
   140004af6:	int3   
   140004af7:	int3   
   140004af8:	int3   
   140004af9:	int3   
   140004afa:	int3   
   140004afb:	int3   
   140004afc:	int3   
   140004afd:	int3   
   140004afe:	int3   
   140004aff:	int3   
   140004b00:	mov    QWORD PTR [rsp+0x8],rbx
   140004b05:	push   rdi
   140004b06:	sub    rsp,0x20
   140004b0a:	mov    rbx,QWORD PTR [rip+0x5e27]        # 0x14000a938
   140004b11:	mov    edi,ecx
   140004b13:	test   rbx,rbx
   140004b16:	jne    0x140004b5f
   140004b18:	mov    rax,QWORD PTR [rip+0x5e11]        # 0x14000a930
   140004b1f:	test   rax,rax
   140004b22:	jne    0x140004b40
   140004b24:	xor    edx,edx
   140004b26:	lea    rcx,[rip+0x2833]        # 0x140007360
   140004b2d:	mov    r8d,0x800
   140004b33:	call   QWORD PTR [rip+0x14ef]        # 0x140006028
   140004b39:	mov    QWORD PTR [rip+0x5df0],rax        # 0x14000a930
   140004b40:	lea    rdx,[rip+0x2851]        # 0x140007398
   140004b47:	mov    rcx,rax
   140004b4a:	call   QWORD PTR [rip+0x14f0]        # 0x140006040
   140004b50:	mov    QWORD PTR [rip+0x5de1],rax        # 0x14000a938
   140004b57:	mov    rbx,rax
   140004b5a:	test   rax,rax
   140004b5d:	je     0x140004b6c
   140004b5f:	mov    rcx,rbx
   140004b62:	call   QWORD PTR [rip+0x1868]        # 0x1400063d0
   140004b68:	mov    ecx,edi
   140004b6a:	call   rbx
   140004b6c:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b71:	add    rsp,0x20
   140004b75:	pop    rdi
   140004b76:	ret    
   140004b77:	int3   
   140004b78:	int3   
   140004b79:	int3   
   140004b7a:	int3   
   140004b7b:	int3   
   140004b7c:	int3   
   140004b7d:	int3   
   140004b7e:	int3   
   140004b7f:	int3   
   140004b80:	mov    QWORD PTR [rsp+0x18],r8
   140004b85:	mov    QWORD PTR [rsp+0x10],rdx
   140004b8a:	mov    QWORD PTR [rsp+0x8],rcx
   140004b8f:	push   rbx
   140004b90:	push   rsi
   140004b91:	push   rdi
   140004b92:	push   r14
   140004b94:	sub    rsp,0x38
   140004b98:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004ba1:	mov    rsi,r8
   140004ba4:	mov    rbx,rcx
   140004ba7:	mov    rdi,rdx
   140004baa:	or     rdi,0xf
   140004bae:	cmp    rdi,0xfffffffffffffffe
   140004bb2:	jbe    0x140004bb9
   140004bb4:	mov    rdi,rdx
   140004bb7:	jmp    0x140004bee
   140004bb9:	mov    r8,QWORD PTR [rcx+0x18]
   140004bbd:	mov    rcx,r8
   140004bc0:	shr    rcx,1
   140004bc3:	movabs rax,0xaaaaaaaaaaaaaaab
   140004bcd:	mul    rdi
   140004bd0:	shr    rdx,1
   140004bd3:	cmp    rcx,rdx
   140004bd6:	jbe    0x140004bee
   140004bd8:	mov    rdi,0xfffffffffffffffe
   140004bdf:	mov    rax,rdi
   140004be2:	sub    rax,rcx
   140004be5:	cmp    r8,rax
   140004be8:	ja     0x140004bee
   140004bea:	lea    rdi,[rcx+r8*1]
   140004bee:	lea    rcx,[rdi+0x1]
   140004bf2:	xor    r14d,r14d
   140004bf5:	test   rcx,rcx
   140004bf8:	je     0x140004c14
   140004bfa:	cmp    rcx,0xffffffffffffffff
   140004bfe:	ja     0x140004c0d
   140004c00:	call   0x140002e18
   140004c05:	mov    r14,rax
   140004c08:	test   rax,rax
   140004c0b:	jne    0x140004c14
   140004c0d:	call   QWORD PTR [rip+0x1665]        # 0x140006278
   140004c13:	nop
   140004c14:	jmp    0x140004c2a
   140004c16:	mov    rbx,QWORD PTR [rsp+0x60]
   140004c1b:	mov    rsi,QWORD PTR [rsp+0x70]
   140004c20:	mov    rdi,QWORD PTR [rsp+0x68]
   140004c25:	mov    r14,QWORD PTR [rsp+0x78]
   140004c2a:	test   rsi,rsi
   140004c2d:	je     0x140004c4e
   140004c2f:	cmp    QWORD PTR [rbx+0x18],0x10
   140004c34:	jb     0x140004c3b
   140004c36:	mov    rdx,QWORD PTR [rbx]
   140004c39:	jmp    0x140004c3e
   140004c3b:	mov    rdx,rbx
   140004c3e:	test   rsi,rsi
   140004c41:	je     0x140004c4e
   140004c43:	mov    r8,rsi
   140004c46:	mov    rcx,r14
   140004c49:	call   0x1400039a6
   140004c4e:	xor    r8d,r8d
   140004c51:	mov    dl,0x1
   140004c53:	mov    rcx,rbx
   140004c56:	call   0x140004d60
   140004c5b:	test   rbx,rbx
   140004c5e:	je     0x140004c63
   140004c60:	mov    QWORD PTR [rbx],r14
   140004c63:	mov    QWORD PTR [rbx+0x18],rdi
   140004c67:	mov    QWORD PTR [rbx+0x10],rsi
   140004c6b:	cmp    rdi,0x10
   140004c6f:	jb     0x140004c74
   140004c71:	mov    rbx,QWORD PTR [rbx]
   140004c74:	mov    BYTE PTR [rbx+rsi*1],0x0
   140004c78:	add    rsp,0x38
   140004c7c:	pop    r14
   140004c7e:	pop    rdi
   140004c7f:	pop    rsi
   140004c80:	pop    rbx
   140004c81:	ret    
   140004c82:	mov    QWORD PTR [rsp+0x10],rdx
   140004c87:	push   rbp
   140004c88:	sub    rsp,0x20
   140004c8c:	mov    rbp,rdx
   140004c8f:	mov    rcx,QWORD PTR [rbp+0x68]
   140004c93:	mov    QWORD PTR [rbp+0x68],rcx
   140004c97:	xor    eax,eax
   140004c99:	add    rcx,0x1
   140004c9d:	je     0x140004cb5
   140004c9f:	cmp    rcx,0xffffffffffffffff
   140004ca3:	ja     0x140004caf
   140004ca5:	call   0x140002e18
   140004caa:	test   rax,rax
   140004cad:	jne    0x140004cb5
   140004caf:	call   QWORD PTR [rip+0x15c3]        # 0x140006278
   140004cb5:	mov    QWORD PTR [rbp+0x78],rax
   140004cb9:	lea    rax,[rip+0xffffffffffffff56]        # 0x140004c16
   140004cc0:	add    rsp,0x20
   140004cc4:	pop    rbp
   140004cc5:	ret    
   140004cc6:	int3   
   140004cc7:	mov    QWORD PTR [rsp+0x10],rdx
   140004ccc:	push   rbp
   140004ccd:	sub    rsp,0x20
   140004cd1:	mov    rbp,rdx
   140004cd4:	xor    r8d,r8d
   140004cd7:	mov    dl,0x1
   140004cd9:	mov    rcx,QWORD PTR [rbp+0x60]
   140004cdd:	call   0x140004d60
   140004ce2:	xor    edx,edx
   140004ce4:	xor    ecx,ecx
   140004ce6:	call   0x140003866
   140004ceb:	nop
   140004cec:	int3   
   140004ced:	int3   
   140004cee:	int3   
   140004cef:	int3   
   140004cf0:	int3   
   140004cf1:	int3   
   140004cf2:	int3   
   140004cf3:	int3   
   140004cf4:	rex push rbx
   140004cf6:	sub    rsp,0x20
   140004cfa:	mov    rbx,rdx
   140004cfd:	cmp    rdx,0xfffffffffffffffe
   140004d01:	jbe    0x140004d11
   140004d03:	lea    rcx,[rip+0x26d6]        # 0x1400073e0
   140004d0a:	call   QWORD PTR [rip+0x1588]        # 0x140006298
   140004d10:	int3   
   140004d11:	mov    rax,QWORD PTR [rcx+0x18]
   140004d15:	mov    QWORD PTR [rsp+0x30],rdi
   140004d1a:	xor    edi,edi
   140004d1c:	cmp    rax,rdx
   140004d1f:	jae    0x140004d43
   140004d21:	mov    r8,QWORD PTR [rcx+0x10]
   140004d25:	call   0x140004b80
   140004d2a:	test   rbx,rbx
   140004d2d:	je     0x140004d34
   140004d2f:	mov    edi,0x1
   140004d34:	movzx  eax,dil
   140004d38:	mov    rdi,QWORD PTR [rsp+0x30]
   140004d3d:	add    rsp,0x20
   140004d41:	pop    rbx
   140004d42:	ret    
   140004d43:	test   rdx,rdx
   140004d46:	jne    0x140004d2a
   140004d48:	mov    QWORD PTR [rcx+0x10],rdi
   140004d4c:	cmp    rax,0x10
   140004d50:	jb     0x140004d55
   140004d52:	mov    rcx,QWORD PTR [rcx]
   140004d55:	mov    BYTE PTR [rcx],dil
   140004d58:	jmp    0x140004d34
   140004d5a:	int3   
   140004d5b:	int3   
   140004d5c:	int3   
   140004d5d:	int3   
   140004d5e:	int3   
   140004d5f:	int3   
   140004d60:	mov    QWORD PTR [rsp+0x10],rbx
   140004d65:	push   rdi
   140004d66:	sub    rsp,0x20
   140004d6a:	mov    rdi,r8
   140004d6d:	mov    rbx,rcx
   140004d70:	test   dl,dl
   140004d72:	je     0x140004d9e
   140004d74:	cmp    QWORD PTR [rcx+0x18],0x10
   140004d79:	jb     0x140004d9e
   140004d7b:	mov    QWORD PTR [rsp+0x30],rsi
   140004d80:	mov    rsi,QWORD PTR [rcx]
   140004d83:	test   r8,r8
   140004d86:	je     0x140004d90
   140004d88:	mov    rdx,rsi
   140004d8b:	call   0x1400039a6
   140004d90:	mov    rcx,rsi
   140004d93:	call   QWORD PTR [rip+0x15e7]        # 0x140006380
   140004d99:	mov    rsi,QWORD PTR [rsp+0x30]
   140004d9e:	mov    QWORD PTR [rbx+0x18],0xf
   140004da6:	mov    QWORD PTR [rbx+0x10],rdi
   140004daa:	mov    BYTE PTR [rdi+rbx*1],0x0
   140004dae:	mov    rbx,QWORD PTR [rsp+0x38]
   140004db3:	add    rsp,0x20
   140004db7:	pop    rdi
   140004db8:	ret    
   140004db9:	int3   
   140004dba:	int3   
   140004dbb:	int3   
   140004dbc:	int3   
   140004dbd:	int3   
   140004dbe:	int3   
   140004dbf:	int3   
   140004dc0:	mov    QWORD PTR [rsp+0x8],rbx
   140004dc5:	mov    QWORD PTR [rsp+0x10],rbp
   140004dca:	mov    QWORD PTR [rsp+0x18],rsi
   140004dcf:	push   rdi
   140004dd0:	sub    rsp,0x20
   140004dd4:	mov    rdi,QWORD PTR [rdx+0x10]
   140004dd8:	mov    rbp,r8
   140004ddb:	mov    rsi,rdx
   140004dde:	mov    rbx,rcx
   140004de1:	cmp    rdi,r8
   140004de4:	jae    0x140004df4
   140004de6:	lea    rcx,[rip+0x2603]        # 0x1400073f0
   140004ded:	call   QWORD PTR [rip+0x147d]        # 0x140006270
   140004df3:	int3   
   140004df4:	sub    rdi,r8
   140004df7:	cmp    r9,rdi
   140004dfa:	cmovb  rdi,r9
   140004dfe:	cmp    rcx,rdx
   140004e01:	jne    0x140004e37
   140004e03:	lea    rax,[rdi+r8*1]
   140004e07:	cmp    QWORD PTR [rcx+0x10],rax
   140004e0b:	jae    0x140004e1b
   140004e0d:	lea    rcx,[rip+0x25dc]        # 0x1400073f0
   140004e14:	call   QWORD PTR [rip+0x1456]        # 0x140006270
   140004e1a:	int3   
   140004e1b:	cmp    QWORD PTR [rcx+0x18],0x10
   140004e20:	mov    QWORD PTR [rcx+0x10],rax
   140004e24:	jb     0x140004e29
   140004e26:	mov    rcx,QWORD PTR [rcx]
   140004e29:	mov    BYTE PTR [rcx+rax*1],0x0
   140004e2d:	mov    rcx,rbx
   140004e30:	call   0x140005050
   140004e35:	jmp    0x140004e84
   140004e37:	mov    rdx,rdi
   140004e3a:	call   0x140004cf4
   140004e3f:	test   al,al
   140004e41:	je     0x140004e84
   140004e43:	cmp    QWORD PTR [rsi+0x18],0x10
   140004e48:	jb     0x140004e4d
   140004e4a:	mov    rsi,QWORD PTR [rsi]
   140004e4d:	cmp    QWORD PTR [rbx+0x18],0x10
   140004e52:	jb     0x140004e59
   140004e54:	mov    rcx,QWORD PTR [rbx]
   140004e57:	jmp    0x140004e5c
   140004e59:	mov    rcx,rbx
   140004e5c:	test   rdi,rdi
   140004e5f:	je     0x140004e6d
   140004e61:	lea    rdx,[rsi+rbp*1]
   140004e65:	mov    r8,rdi
   140004e68:	call   0x1400039a6
   140004e6d:	cmp    QWORD PTR [rbx+0x18],0x10
   140004e72:	mov    QWORD PTR [rbx+0x10],rdi
   140004e76:	jb     0x140004e7d
   140004e78:	mov    rax,QWORD PTR [rbx]
   140004e7b:	jmp    0x140004e80
   140004e7d:	mov    rax,rbx
   140004e80:	mov    BYTE PTR [rax+rdi*1],0x0
   140004e84:	mov    rbp,QWORD PTR [rsp+0x38]
   140004e89:	mov    rax,rbx
   140004e8c:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e91:	mov    rsi,QWORD PTR [rsp+0x40]
   140004e96:	add    rsp,0x20
   140004e9a:	pop    rdi
   140004e9b:	ret    
   140004e9c:	int3   
   140004e9d:	int3   
   140004e9e:	int3   
   140004e9f:	int3   
   140004ea0:	int3   
   140004ea1:	int3   
   140004ea2:	int3   
   140004ea3:	int3   
   140004ea4:	mov    QWORD PTR [rsp+0x8],rbx
   140004ea9:	mov    QWORD PTR [rsp+0x10],rsi
   140004eae:	push   rdi
   140004eaf:	sub    rsp,0x20
   140004eb3:	mov    rdi,r8
   140004eb6:	mov    rsi,rdx
   140004eb9:	mov    rbx,rcx
   140004ebc:	test   rdx,rdx
   140004ebf:	je     0x140004f0e
   140004ec1:	mov    rdx,QWORD PTR [rcx+0x18]
   140004ec5:	cmp    rdx,0x10
   140004ec9:	jb     0x140004ed0
   140004ecb:	mov    rax,QWORD PTR [rcx]
   140004ece:	jmp    0x140004ed3
   140004ed0:	mov    rax,rcx
   140004ed3:	cmp    rsi,rax
   140004ed6:	jb     0x140004f0e
   140004ed8:	cmp    rdx,0x10
   140004edc:	jb     0x140004ee1
   140004ede:	mov    rcx,QWORD PTR [rcx]
   140004ee1:	add    rcx,QWORD PTR [rbx+0x10]
   140004ee5:	cmp    rcx,rsi
   140004ee8:	jbe    0x140004f0e
   140004eea:	cmp    rdx,0x10
   140004eee:	jb     0x140004ef5
   140004ef0:	mov    rax,QWORD PTR [rbx]
   140004ef3:	jmp    0x140004ef8
   140004ef5:	mov    rax,rbx
   140004ef8:	sub    rsi,rax
   140004efb:	mov    r9,r8
   140004efe:	mov    r8,rsi
   140004f01:	mov    rdx,rbx
   140004f04:	mov    rcx,rbx
   140004f07:	call   0x140004dc0
   140004f0c:	jmp    0x140004f56
   140004f0e:	mov    rdx,r8
   140004f11:	mov    rcx,rbx
   140004f14:	call   0x140004cf4
   140004f19:	test   al,al
   140004f1b:	je     0x140004f53
   140004f1d:	cmp    QWORD PTR [rbx+0x18],0x10
   140004f22:	jb     0x140004f29
   140004f24:	mov    rcx,QWORD PTR [rbx]
   140004f27:	jmp    0x140004f2c
   140004f29:	mov    rcx,rbx
   140004f2c:	test   rdi,rdi
   140004f2f:	je     0x140004f3c
   140004f31:	mov    r8,rdi
   140004f34:	mov    rdx,rsi
   140004f37:	call   0x1400039a6
   140004f3c:	cmp    QWORD PTR [rbx+0x18],0x10
   140004f41:	mov    QWORD PTR [rbx+0x10],rdi
   140004f45:	jb     0x140004f4c
   140004f47:	mov    rax,QWORD PTR [rbx]
   140004f4a:	jmp    0x140004f4f
   140004f4c:	mov    rax,rbx
   140004f4f:	mov    BYTE PTR [rax+rdi*1],0x0
   140004f53:	mov    rax,rbx
   140004f56:	mov    rbx,QWORD PTR [rsp+0x30]
   140004f5b:	mov    rsi,QWORD PTR [rsp+0x38]
   140004f60:	add    rsp,0x20
   140004f64:	pop    rdi
   140004f65:	ret    
   140004f66:	int3   
   140004f67:	int3   
   140004f68:	int3   
   140004f69:	int3   
   140004f6a:	int3   
   140004f6b:	int3   
   140004f6c:	int3   
   140004f6d:	int3   
   140004f6e:	int3   
   140004f6f:	int3   
   140004f70:	mov    QWORD PTR [rsp+0x8],rbx
   140004f75:	push   rdi
   140004f76:	sub    rsp,0x20
   140004f7a:	mov    ecx,r8d
   140004f7d:	mov    edi,r8d
   140004f80:	mov    rbx,rdx
   140004f83:	call   QWORD PTR [rip+0x12f7]        # 0x140006280
   140004f89:	test   rax,rax
   140004f8c:	mov    DWORD PTR [rbx],edi
   140004f8e:	lea    rax,[rip+0x50db]        # 0x14000a070
   140004f95:	jne    0x140004f9e
   140004f97:	lea    rax,[rip+0x5862]        # 0x14000a800
   140004f9e:	mov    QWORD PTR [rbx+0x8],rax
   140004fa2:	mov    rax,rbx
   140004fa5:	mov    rbx,QWORD PTR [rsp+0x30]
   140004faa:	add    rsp,0x20
   140004fae:	pop    rdi
   140004faf:	ret    
   140004fb0:	int3   
   140004fb1:	int3   
   140004fb2:	int3   
   140004fb3:	int3   
   140004fb4:	int3   
   140004fb5:	int3   
   140004fb6:	int3   
   140004fb7:	int3   
   140004fb8:	int3   
   140004fb9:	int3   
   140004fba:	int3   
   140004fbb:	int3   
   140004fbc:	int3   
   140004fbd:	int3   
   140004fbe:	int3   
   140004fbf:	int3   
   140004fc0:	cmp    rcx,QWORD PTR [rdx+0x8]
   140004fc4:	jne    0x140004fce
   140004fc6:	cmp    DWORD PTR [rdx],r8d
   140004fc9:	jne    0x140004fce
   140004fcb:	mov    al,0x1
   140004fcd:	ret    
   140004fce:	xor    al,al
   140004fd0:	ret    
   140004fd1:	int3   
   140004fd2:	int3   
   140004fd3:	int3   
   140004fd4:	int3   
   140004fd5:	int3   
   140004fd6:	int3   
   140004fd7:	int3   
   140004fd8:	int3   
   140004fd9:	int3   
   140004fda:	int3   
   140004fdb:	int3   
   140004fdc:	int3   
   140004fdd:	int3   
   140004fde:	int3   
   140004fdf:	int3   
   140004fe0:	mov    QWORD PTR [rsp+0x8],rbx
   140004fe5:	mov    QWORD PTR [rsp+0x10],rsi
   140004fea:	mov    QWORD PTR [rsp+0x18],rdi
   140004fef:	push   r14
   140004ff1:	sub    rsp,0x30
   140004ff5:	mov    rax,QWORD PTR [rcx]
   140004ff8:	mov    rsi,rcx
   140004ffb:	mov    r14,r8
   140004ffe:	mov    edi,edx
   140005000:	mov    rbx,QWORD PTR [rax+0x18]
   140005004:	mov    rcx,rbx
   140005007:	call   QWORD PTR [rip+0x13c3]        # 0x1400063d0
   14000500d:	mov    r8d,edi
   140005010:	lea    rdx,[rsp+0x20]
   140005015:	mov    rcx,rsi
   140005018:	call   rbx
   14000501a:	mov    rcx,QWORD PTR [r14+0x8]
   14000501e:	cmp    QWORD PTR [rax+0x8],rcx
   140005022:	jne    0x14000502f
   140005024:	mov    ecx,DWORD PTR [r14]
   140005027:	cmp    DWORD PTR [rax],ecx
   140005029:	jne    0x14000502f
   14000502b:	mov    al,0x1
   14000502d:	jmp    0x140005031
   14000502f:	xor    al,al
   140005031:	mov    rbx,QWORD PTR [rsp+0x40]
   140005036:	mov    rsi,QWORD PTR [rsp+0x48]
   14000503b:	mov    rdi,QWORD PTR [rsp+0x50]
   140005040:	add    rsp,0x30
   140005044:	pop    r14
   140005046:	ret    
   140005047:	int3   
   140005048:	int3   
   140005049:	int3   
   14000504a:	int3   
   14000504b:	int3   
   14000504c:	int3   
   14000504d:	int3   
   14000504e:	int3   
   14000504f:	int3   
   140005050:	mov    QWORD PTR [rsp+0x8],rbx
   140005055:	push   rdi
   140005056:	sub    rsp,0x20
   14000505a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000505e:	mov    rbx,rcx
   140005061:	cmp    rdi,r8
   140005064:	ja     0x140005082
   140005066:	cmp    QWORD PTR [rcx+0x18],0x10
   14000506b:	mov    QWORD PTR [rcx+0x10],0x0
   140005073:	jb     0x14000507a
   140005075:	mov    rax,QWORD PTR [rcx]
   140005078:	jmp    0x14000507d
   14000507a:	mov    rax,rcx
   14000507d:	mov    BYTE PTR [rax],0x0
   140005080:	jmp    0x1400050ba
   140005082:	test   r8,r8
   140005085:	je     0x1400050ba
   140005087:	cmp    QWORD PTR [rcx+0x18],0x10
   14000508c:	jb     0x140005091
   14000508e:	mov    rcx,QWORD PTR [rcx]
   140005091:	sub    rdi,r8
   140005094:	je     0x1400050a3
   140005096:	lea    rdx,[rcx+r8*1]
   14000509a:	mov    r8,rdi
   14000509d:	call   QWORD PTR [rip+0x12e5]        # 0x140006388
   1400050a3:	cmp    QWORD PTR [rbx+0x18],0x10
   1400050a8:	mov    QWORD PTR [rbx+0x10],rdi
   1400050ac:	jb     0x1400050b3
   1400050ae:	mov    rax,QWORD PTR [rbx]
   1400050b1:	jmp    0x1400050b6
   1400050b3:	mov    rax,rbx
   1400050b6:	mov    BYTE PTR [rax+rdi*1],0x0
   1400050ba:	mov    rax,rbx
   1400050bd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400050c2:	add    rsp,0x20
   1400050c6:	pop    rdi
   1400050c7:	ret    
   1400050c8:	int3   
   1400050c9:	int3   
   1400050ca:	int3   
   1400050cb:	int3   
   1400050cc:	int3   
   1400050cd:	int3   
   1400050ce:	int3   
   1400050cf:	int3   
   1400050d0:	rex push rbx
   1400050d2:	sub    rsp,0x30
   1400050d6:	mov    ecx,r8d
   1400050d9:	mov    DWORD PTR [rsp+0x20],0x0
   1400050e1:	mov    rbx,rdx
   1400050e4:	call   QWORD PTR [rip+0x1196]        # 0x140006280
   1400050ea:	lea    rdx,[rip+0x22c7]        # 0x1400073b8
   1400050f1:	mov    rcx,rbx
   1400050f4:	test   rax,rax
   1400050f7:	cmovne rdx,rax
   1400050fb:	call   0x140004a24
   140005100:	mov    rax,rbx
   140005103:	add    rsp,0x30
   140005107:	pop    rbx
   140005108:	ret    
   140005109:	int3   
   14000510a:	int3   
   14000510b:	int3   
   14000510c:	int3   
   14000510d:	int3   
   14000510e:	int3   
   14000510f:	int3   
   140005110:	rex push rbx
   140005112:	sub    rsp,0x30
   140005116:	mov    DWORD PTR [rsp+0x20],0x0
   14000511e:	mov    rbx,rdx
   140005121:	cmp    r8d,0x1
   140005125:	jne    0x140005138
   140005127:	lea    rdx,[rip+0x229a]        # 0x1400073c8
   14000512e:	mov    rcx,rbx
   140005131:	call   0x140004a24
   140005136:	jmp    0x14000513d
   140005138:	call   0x1400050d0
   14000513d:	mov    rax,rbx
   140005140:	add    rsp,0x30
   140005144:	pop    rbx
   140005145:	ret    
   140005146:	int3   
   140005147:	int3   
   140005148:	int3   
   140005149:	int3   
   14000514a:	int3   
   14000514b:	int3   
   14000514c:	int3   
   14000514d:	int3   
   14000514e:	int3   
   14000514f:	int3   
   140005150:	rex push rbx
   140005152:	sub    rsp,0x30
   140005156:	mov    ecx,r8d
   140005159:	mov    DWORD PTR [rsp+0x20],0x0
   140005161:	mov    rbx,rdx
   140005164:	call   QWORD PTR [rip+0x1126]        # 0x140006290
   14000516a:	lea    rdx,[rip+0x2247]        # 0x1400073b8
   140005171:	mov    rcx,rbx
   140005174:	test   rax,rax
   140005177:	cmovne rdx,rax
   14000517b:	call   0x140004a24
   140005180:	mov    rax,rbx
   140005183:	add    rsp,0x30
   140005187:	pop    rbx
   140005188:	ret    
   140005189:	int3   
   14000518a:	int3   
   14000518b:	int3   
   14000518c:	int3   
   14000518d:	int3   
   14000518e:	int3   
   14000518f:	int3   
   140005190:	mov    QWORD PTR [rsp+0x10],rbx
   140005195:	mov    QWORD PTR [rsp+0x18],rsi
   14000519a:	mov    QWORD PTR [rsp+0x20],rdi
   14000519f:	push   r14
   1400051a1:	sub    rsp,0x20
   1400051a5:	mov    rdi,rcx
   1400051a8:	mov    BYTE PTR [rsp+0x30],0x0
   1400051ad:	test   r8,r8
   1400051b0:	lea    rcx,[rsp+0x30]
   1400051b5:	mov    r14,r9
   1400051b8:	mov    rbx,rdx
   1400051bb:	cmovne rcx,r8
   1400051bf:	call   0x1400057ec
   1400051c4:	sub    rbx,rdi
   1400051c7:	mov    rdx,rcx
   1400051ca:	cmp    rax,rbx
   1400051cd:	mov    rcx,rdi
   1400051d0:	mov    rsi,rax
   1400051d3:	cmovb  rbx,rax
   1400051d7:	mov    r8,rbx
   1400051da:	call   0x1400039a6
   1400051df:	xor    eax,eax
   1400051e1:	cmp    rbx,0x1
   1400051e5:	cmova  rax,rdi
   1400051e9:	test   r14,r14
   1400051ec:	je     0x1400051f1
   1400051ee:	mov    QWORD PTR [r14],rax
   1400051f1:	cmp    rbx,rsi
   1400051f4:	jae    0x140005201
   1400051f6:	test   rbx,rbx
   1400051f9:	je     0x140005201
   1400051fb:	xor    eax,eax
   1400051fd:	mov    BYTE PTR [rbx+rdi*1-0x1],al
   140005201:	mov    rsi,QWORD PTR [rsp+0x40]
   140005206:	lea    rax,[rbx+rdi*1]
   14000520a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000520f:	mov    rdi,QWORD PTR [rsp+0x48]
   140005214:	add    rsp,0x20
   140005218:	pop    r14
   14000521a:	ret    
   14000521b:	int3   
   14000521c:	int3   
   14000521d:	int3   
   14000521e:	int3   
   14000521f:	int3   
   140005220:	int3   
   140005221:	int3   
   140005222:	int3   
   140005223:	int3   
   140005224:	mov    QWORD PTR [rsp+0x10],rbx
   140005229:	mov    QWORD PTR [rsp+0x18],rbp
   14000522e:	mov    QWORD PTR [rsp+0x20],rsi
   140005233:	push   rdi
   140005234:	push   r14
   140005236:	push   r15
   140005238:	sub    rsp,0x20
   14000523c:	xor    r14d,r14d
   14000523f:	mov    rbx,rcx
   140005242:	test   r8,r8
   140005245:	mov    WORD PTR [rsp+0x40],r14w
   14000524b:	lea    rcx,[rsp+0x40]
   140005250:	mov    r15,r9
   140005253:	cmovne rcx,r8
   140005257:	mov    rsi,rdx
   14000525a:	call   0x140005810
   14000525f:	sub    rsi,rbx
   140005262:	mov    rbp,rax
   140005265:	shr    rbp,1
   140005268:	mov    rdx,rcx
   14000526b:	shr    rsi,1
   14000526e:	mov    rcx,rbx
   140005271:	cmp    rbp,rsi
   140005274:	cmovb  rsi,rbp
   140005278:	lea    rdi,[rsi+rsi*1]
   14000527c:	mov    r8,rdi
   14000527f:	call   0x1400039a6
   140005284:	cmp    rsi,0x1
   140005288:	cmova  r14,rbx
   14000528c:	test   r15,r15
   14000528f:	je     0x140005294
   140005291:	mov    QWORD PTR [r15],r14
   140005294:	cmp    rsi,rbp
   140005297:	jae    0x1400052a5
   140005299:	test   rsi,rsi
   14000529c:	je     0x1400052a5
   14000529e:	xor    eax,eax
   1400052a0:	mov    WORD PTR [rdi+rbx*1-0x2],ax
   1400052a5:	mov    rbp,QWORD PTR [rsp+0x50]
   1400052aa:	lea    rax,[rdi+rbx*1]
   1400052ae:	mov    rbx,QWORD PTR [rsp+0x48]
   1400052b3:	mov    rsi,QWORD PTR [rsp+0x58]
   1400052b8:	add    rsp,0x20
   1400052bc:	pop    r15
   1400052be:	pop    r14
   1400052c0:	pop    rdi
   1400052c1:	ret    
   1400052c2:	int3   
   1400052c3:	int3   
   1400052c4:	int3   
   1400052c5:	int3   
   1400052c6:	int3   
   1400052c7:	int3   
   1400052c8:	rex push rbx
   1400052ca:	sub    rsp,0x20
   1400052ce:	movups xmm0,XMMWORD PTR [rdx]
   1400052d1:	xor    eax,eax
   1400052d3:	mov    rbx,rcx
   1400052d6:	movups XMMWORD PTR [rcx],xmm0
   1400052d9:	movups xmm1,XMMWORD PTR [rdx+0x10]
   1400052dd:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400052e1:	movups xmm0,XMMWORD PTR [rdx+0x20]
   1400052e5:	movups XMMWORD PTR [rcx+0x20],xmm0
   1400052e9:	movups xmm1,XMMWORD PTR [rdx+0x30]
   1400052ed:	movups XMMWORD PTR [rcx+0x30],xmm1
   1400052f1:	movups xmm0,XMMWORD PTR [rdx+0x40]
   1400052f5:	movups XMMWORD PTR [rcx+0x40],xmm0
   1400052f9:	movups xmm1,XMMWORD PTR [rdx+0x50]
   1400052fd:	movups XMMWORD PTR [rcx+0x50],xmm1
   140005301:	movups xmm0,XMMWORD PTR [rdx+0x60]
   140005305:	movups XMMWORD PTR [rcx+0x60],xmm0
   140005309:	movups xmm1,XMMWORD PTR [rdx+0x70]
   14000530d:	movups XMMWORD PTR [rcx+0x70],xmm1
   140005311:	movups xmm0,XMMWORD PTR [rdx+0x80]
   140005318:	movups XMMWORD PTR [rcx+0x80],xmm0
   14000531f:	add    rcx,0x90
   140005326:	mov    QWORD PTR [rcx],rax
   140005329:	mov    QWORD PTR [rcx+0x8],rax
   14000532d:	mov    r8,QWORD PTR [rdx+0x98]
   140005334:	mov    rdx,QWORD PTR [rdx+0x90]
   14000533b:	call   0x140005b8c
   140005340:	mov    rax,rbx
   140005343:	add    rsp,0x20
   140005347:	pop    rbx
   140005348:	ret    
   140005349:	int3   
   14000534a:	int3   
   14000534b:	int3   
   14000534c:	int3   
   14000534d:	int3   
   14000534e:	int3   
   14000534f:	int3   
   140005350:	rex push rdi
   140005352:	sub    rsp,0x20
   140005356:	mov    rdi,QWORD PTR [rcx]
   140005359:	test   rdi,rdi
   14000535c:	je     0x14000537d
   14000535e:	mov    rax,QWORD PTR [rdi]
   140005361:	mov    QWORD PTR [rsp+0x30],rbx
   140005366:	mov    rbx,QWORD PTR [rax+0x10]
   14000536a:	mov    rcx,rbx
   14000536d:	call   QWORD PTR [rip+0x105d]        # 0x1400063d0
   140005373:	mov    rcx,rdi
   140005376:	call   rbx
   140005378:	mov    rbx,QWORD PTR [rsp+0x30]
   14000537d:	add    rsp,0x20
   140005381:	pop    rdi
   140005382:	ret    
   140005383:	int3   
   140005384:	int3   
   140005385:	int3   
   140005386:	int3   
   140005387:	int3   
   140005388:	int3   
   140005389:	int3   
   14000538a:	int3   
   14000538b:	int3   
   14000538c:	add    rcx,0x90
   140005393:	jmp    0x140005bd0
   140005398:	int3   
   140005399:	int3   
   14000539a:	int3   
   14000539b:	int3   
   14000539c:	int3   
   14000539d:	int3   
   14000539e:	int3   
   14000539f:	int3   
   1400053a0:	rex push rbx
   1400053a2:	push   rbp
   1400053a3:	push   rsi
   1400053a4:	push   rdi
   1400053a5:	push   r14
   1400053a7:	sub    rsp,0x250
   1400053ae:	mov    rax,QWORD PTR [rip+0x4c53]        # 0x14000a008
   1400053b5:	xor    rax,rsp
   1400053b8:	mov    QWORD PTR [rsp+0x240],rax
   1400053c0:	mov    r14,rcx
   1400053c3:	lea    rsi,[rip+0x14b7]        # 0x140006881
   1400053ca:	mov    ecx,DWORD PTR [r8]
   1400053cd:	mov    rbx,r8
   1400053d0:	mov    rdi,rdx
   1400053d3:	test   ecx,ecx
   1400053d5:	je     0x14000540f
   1400053d7:	sub    ecx,0x1
   1400053da:	je     0x140005406
   1400053dc:	sub    ecx,0x1
   1400053df:	je     0x1400053fd
   1400053e1:	sub    ecx,0x1
   1400053e4:	je     0x1400053f4
   1400053e6:	cmp    ecx,0x1
   1400053e9:	jne    0x140005416
   1400053eb:	lea    rsi,[rip+0x2536]        # 0x140007928
   1400053f2:	jmp    0x140005416
   1400053f4:	lea    rsi,[rip+0x2525]        # 0x140007920
   1400053fb:	jmp    0x140005416
   1400053fd:	lea    rsi,[rip+0x2504]        # 0x140007908
   140005404:	jmp    0x140005416
   140005406:	lea    rsi,[rip+0x24eb]        # 0x1400078f8
   14000540d:	jmp    0x140005416
   14000540f:	lea    rsi,[rip+0x24d2]        # 0x1400078e8
   140005416:	mov    r8d,DWORD PTR [r8+0x4]
   14000541a:	xor    eax,eax
   14000541c:	mov    QWORD PTR [rsp+0x30],rax
   140005421:	mov    r9d,0x400
   140005427:	mov    WORD PTR [rsp+0x40],ax
   14000542c:	xor    edx,edx
   14000542e:	lea    rax,[rsp+0x40]
   140005433:	mov    DWORD PTR [rsp+0x28],0x100
   14000543b:	mov    ecx,0x1200
   140005440:	mov    QWORD PTR [rsp+0x20],rax
   140005445:	call   QWORD PTR [rip+0xc25]        # 0x140006070
   14000544b:	mov    r9,QWORD PTR [rbx+0x30]
   14000544f:	lea    rdi,[r14+rdi*2]
   140005453:	mov    rax,QWORD PTR [rbx+0x80]
   14000545a:	mov    rdx,rdi
   14000545d:	mov    rcx,r14
   140005460:	test   r9,r9
   140005463:	je     0x140005488
   140005465:	mov    QWORD PTR [rsp+0x30],rax
   14000546a:	lea    r8,[rip+0x24c7]        # 0x140007938
   140005471:	mov    rax,QWORD PTR [rbx+0x78]
   140005475:	mov    QWORD PTR [rsp+0x28],rax
   14000547a:	mov    eax,DWORD PTR [rbx+0x38]
   14000547d:	mov    DWORD PTR [rsp+0x20],eax
   140005481:	call   0x1400056bc
   140005486:	jmp    0x14000549d
   140005488:	mov    r9,QWORD PTR [rbx+0x78]
   14000548c:	lea    r8,[rip+0x24cd]        # 0x140007960
   140005493:	mov    QWORD PTR [rsp+0x20],rax
   140005498:	call   0x1400056bc
   14000549d:	mov    r9,QWORD PTR [rbx+0x88]
   1400054a4:	mov    rbp,rax
   1400054a7:	test   r9,r9
   1400054aa:	je     0x1400054c1
   1400054ac:	lea    r8,[rip+0x24c5]        # 0x140007978
   1400054b3:	mov    rdx,rdi
   1400054b6:	mov    rcx,rax
   1400054b9:	call   0x1400056bc
   1400054be:	mov    rbp,rax
   1400054c1:	call   QWORD PTR [rip+0xba1]        # 0x140006068
   1400054c7:	lea    rcx,[rsp+0x40]
   1400054cc:	mov    r9,rsi
   1400054cf:	mov    QWORD PTR [rsp+0x38],rcx
   1400054d4:	lea    r8,[rip+0x24bd]        # 0x140007998
   1400054db:	mov    ecx,DWORD PTR [rbx+0x4]
   1400054de:	mov    rdx,rdi
   1400054e1:	mov    DWORD PTR [rsp+0x30],ecx
   1400054e5:	mov    rcx,rbp
   1400054e8:	mov    DWORD PTR [rsp+0x28],eax
   1400054ec:	mov    eax,DWORD PTR [rbx+0x3c]
   1400054ef:	mov    DWORD PTR [rsp+0x20],eax
   1400054f3:	call   0x1400056bc
   1400054f8:	cmp    QWORD PTR [rbx+0x10],0x0
   1400054fd:	jne    0x140005511
   1400054ff:	cmp    QWORD PTR [rbx+0x40],0x0
   140005504:	jne    0x140005511
   140005506:	cmp    QWORD PTR [rbx+0x28],0x0
   14000550b:	je     0x1400055a1
   140005511:	lea    r8,[rip+0x24b8]        # 0x1400079d0
   140005518:	mov    rdx,rdi
   14000551b:	mov    rcx,rax
   14000551e:	call   0x1400056bc
   140005523:	mov    r9,QWORD PTR [rbx+0x10]
   140005527:	test   r9,r9
   14000552a:	je     0x14000553e
   14000552c:	lea    r8,[rip+0x24ad]        # 0x1400079e0
   140005533:	mov    rdx,rdi
   140005536:	mov    rcx,rax
   140005539:	call   0x1400056bc
   14000553e:	mov    r9,QWORD PTR [rbx+0x40]
   140005542:	test   r9,r9
   140005545:	je     0x140005559
   140005547:	lea    r8,[rip+0x24aa]        # 0x1400079f8
   14000554e:	mov    rdx,rdi
   140005551:	mov    rcx,rax
   140005554:	call   0x1400056bc
   140005559:	mov    rcx,QWORD PTR [rbx+0x20]
   14000555d:	mov    rdx,rdi
   140005560:	mov    r9,QWORD PTR [rbx+0x28]
   140005564:	test   rcx,rcx
   140005567:	je     0x14000557f
   140005569:	mov    QWORD PTR [rsp+0x20],rcx
   14000556e:	lea    r8,[rip+0x24ab]        # 0x140007a20
   140005575:	mov    rcx,rax
   140005578:	call   0x1400056bc
   14000557d:	jmp    0x1400055a1
   14000557f:	mov    rcx,rax
   140005582:	test   r9,r9
   140005585:	je     0x140005595
   140005587:	lea    r8,[rip+0x24aa]        # 0x140007a38
   14000558e:	call   0x1400056bc
   140005593:	jmp    0x1400055a1
   140005595:	lea    r8,[rip+0x24ac]        # 0x140007a48
   14000559c:	call   0x1400056bc
   1400055a1:	xor    eax,eax
   1400055a3:	mov    rcx,QWORD PTR [rsp+0x240]
   1400055ab:	xor    rcx,rsp
   1400055ae:	call   0x140003210
   1400055b3:	add    rsp,0x250
   1400055ba:	pop    r14
   1400055bc:	pop    rdi
   1400055bd:	pop    rsi
   1400055be:	pop    rbp
   1400055bf:	pop    rbx
   1400055c0:	ret    
   1400055c1:	int3   
   1400055c2:	int3   
   1400055c3:	int3   
   1400055c4:	int3   
   1400055c5:	int3   
   1400055c6:	int3   
   1400055c7:	int3   
   1400055c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400055cd:	mov    QWORD PTR [rsp+0x10],rbp
   1400055d2:	mov    QWORD PTR [rsp+0x18],rsi
   1400055d7:	push   rdi
   1400055d8:	sub    rsp,0x20
   1400055dc:	xor    al,al
   1400055de:	mov    BYTE PTR [r8],0x0
   1400055e2:	mov    rbp,r9
   1400055e5:	mov    rbx,r8
   1400055e8:	mov    rsi,rdx
   1400055eb:	mov    rdi,rcx
   1400055ee:	test   rdx,rdx
   1400055f1:	je     0x1400056a0
   1400055f7:	mov    rdx,QWORD PTR [rdx+0x10]
   1400055fb:	call   0x1400055c8
   140005600:	mov    rdx,QWORD PTR [rsi+0x20]
   140005604:	test   rdx,rdx
   140005607:	je     0x1400056a0
   14000560d:	cmp    DWORD PTR [rdx],0x0
   140005610:	jne    0x140005623
   140005612:	mov    eax,0x1
   140005617:	lock xadd DWORD PTR [rip+0x4b89],eax        # 0x14000a1a8
   14000561f:	inc    eax
   140005621:	mov    DWORD PTR [rdx],eax
   140005623:	cmp    DWORD PTR [rdi+0x48],0x0
   140005627:	jne    0x14000563a
   140005629:	movups xmm0,XMMWORD PTR [rdx]
   14000562c:	movups XMMWORD PTR [rdi+0x48],xmm0
   140005630:	movsd  xmm1,QWORD PTR [rdx+0x10]
   140005635:	movsd  QWORD PTR [rdi+0x58],xmm1
   14000563a:	movups xmm0,XMMWORD PTR [rdx]
   14000563d:	or     rcx,0xffffffffffffffff
   140005641:	mov    rax,rcx
   140005644:	movups XMMWORD PTR [rdi+0x60],xmm0
   140005648:	movsd  xmm1,QWORD PTR [rdx+0x10]
   14000564d:	movsd  QWORD PTR [rdi+0x70],xmm1
   140005652:	lea    rdi,[rbx+rbp*1]
   140005656:	inc    rax
   140005659:	cmp    BYTE PTR [rbx+rax*1],0x0
   14000565d:	jne    0x140005656
   14000565f:	add    rbx,rax
   140005662:	mov    rax,rdi
   140005665:	sub    rax,rbx
   140005668:	cmp    rax,0x2
   14000566c:	jle    0x14000569e
   14000566e:	mov    BYTE PTR [rbx],0x5c
   140005671:	inc    rbx
   140005674:	mov    rdx,QWORD PTR [rdx+0x8]
   140005678:	inc    rcx
   14000567b:	cmp    BYTE PTR [rdx+rcx*1],0x0
   14000567f:	jne    0x140005678
   140005681:	inc    rcx
   140005684:	sub    rdi,rbx
   140005687:	cmp    rcx,rdi
   14000568a:	cmovb  rdi,rcx
   14000568e:	mov    rcx,rbx
   140005691:	mov    r8,rdi
   140005694:	call   0x1400039a6
   140005699:	mov    BYTE PTR [rdi+rbx*1-0x1],0x0
   14000569e:	mov    al,0x1
   1400056a0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400056a5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400056aa:	mov    rsi,QWORD PTR [rsp+0x40]
   1400056af:	add    rsp,0x20
   1400056b3:	pop    rdi
   1400056b4:	ret    
   1400056b5:	int3   
   1400056b6:	int3   
   1400056b7:	int3   
   1400056b8:	int3   
   1400056b9:	int3   
   1400056ba:	int3   
   1400056bb:	int3   
   1400056bc:	mov    QWORD PTR [rsp+0x18],r8
   1400056c1:	mov    QWORD PTR [rsp+0x20],r9
   1400056c6:	push   rbx
   1400056c7:	push   rdi
   1400056c8:	sub    rsp,0x28
   1400056cc:	mov    rbx,rdx
   1400056cf:	lea    r9,[rsp+0x58]
   1400056d4:	sub    rdx,rcx
   1400056d7:	mov    rdi,rcx
   1400056da:	sar    rdx,1
   1400056dd:	call   0x140005ad4
   1400056e2:	cmp    rbx,rdi
   1400056e5:	jne    0x1400056ec
   1400056e7:	mov    rax,rdi
   1400056ea:	jmp    0x140005700
   1400056ec:	or     rax,0xffffffffffffffff
   1400056f0:	cmp    WORD PTR [rdi+rax*2+0x2],0x0
   1400056f6:	lea    rax,[rax+0x1]
   1400056fa:	jne    0x1400056f0
   1400056fc:	lea    rax,[rdi+rax*2]
   140005700:	add    rsp,0x28
   140005704:	pop    rdi
   140005705:	pop    rbx
   140005706:	ret    
   140005707:	int3   
   140005708:	int3   
   140005709:	int3   
   14000570a:	int3   
   14000570b:	int3   
   14000570c:	int3   
   14000570d:	int3   
   14000570e:	int3   
   14000570f:	int3   
   140005710:	mov    QWORD PTR [rsp+0x8],rbx
   140005715:	mov    QWORD PTR [rsp+0x10],rbp
   14000571a:	mov    QWORD PTR [rsp+0x18],rsi
   14000571f:	mov    QWORD PTR [rsp+0x20],rdi
   140005724:	push   r12
   140005726:	push   r14
   140005728:	push   r15
   14000572a:	sub    rsp,0x50
   14000572e:	mov    rdi,r9
   140005731:	mov    rsi,r8
   140005734:	mov    ebp,edx
   140005736:	mov    r14,rcx
   140005739:	call   QWORD PTR [rip+0x939]        # 0x140006078
   14000573f:	mov    r15,QWORD PTR [rsp+0x98]
   140005747:	mov    ebx,eax
   140005749:	mov    r12,QWORD PTR [rsp+0x90]
   140005751:	test   eax,eax
   140005753:	jne    0x140005786
   140005755:	mov    DWORD PTR [rsp+0x38],0x8007029c
   14000575d:	mov    r9,rdi
   140005760:	mov    DWORD PTR [rsp+0x30],0x3
   140005768:	mov    r8,rsi
   14000576b:	mov    QWORD PTR [rsp+0x28],r15
   140005770:	mov    edx,ebp
   140005772:	mov    rcx,r14
   140005775:	mov    QWORD PTR [rsp+0x20],r12
   14000577a:	call   0x140002d30
   14000577f:	mov    ebx,0x29c
   140005784:	jmp    0x140005788
   140005786:	jle    0x140005791
   140005788:	movzx  ebx,bx
   14000578b:	or     ebx,0x80070000
   140005791:	mov    ecx,DWORD PTR [rsp+0xa0]
   140005798:	mov    r9,rdi
   14000579b:	mov    QWORD PTR [rsp+0x40],0x0
   1400057a4:	mov    r8,rsi
   1400057a7:	mov    DWORD PTR [rsp+0x38],ebx
   1400057ab:	mov    edx,ebp
   1400057ad:	mov    DWORD PTR [rsp+0x30],ecx
   1400057b1:	mov    rcx,r14
   1400057b4:	mov    QWORD PTR [rsp+0x28],r15
   1400057b9:	mov    QWORD PTR [rsp+0x20],r12
   1400057be:	call   0x1400024f0
   1400057c3:	lea    r11,[rsp+0x50]
   1400057c8:	mov    eax,ebx
   1400057ca:	mov    rbx,QWORD PTR [r11+0x20]
   1400057ce:	mov    rbp,QWORD PTR [r11+0x28]
   1400057d2:	mov    rsi,QWORD PTR [r11+0x30]
   1400057d6:	mov    rdi,QWORD PTR [r11+0x38]
   1400057da:	mov    rsp,r11
   1400057dd:	pop    r15
   1400057df:	pop    r14
   1400057e1:	pop    r12
   1400057e3:	ret    
   1400057e4:	int3   
   1400057e5:	int3   
   1400057e6:	int3   
   1400057e7:	int3   
   1400057e8:	int3   
   1400057e9:	int3   
   1400057ea:	int3   
   1400057eb:	int3   
   1400057ec:	test   rcx,rcx
   1400057ef:	jne    0x1400057f7
   1400057f1:	mov    eax,0x1
   1400057f6:	ret    
   1400057f7:	or     rax,0xffffffffffffffff
   1400057fb:	inc    rax
   1400057fe:	cmp    BYTE PTR [rcx+rax*1],0x0
   140005802:	jne    0x1400057fb
   140005804:	inc    rax
   140005807:	ret    
   140005808:	int3   
   140005809:	int3   
   14000580a:	int3   
   14000580b:	int3   
   14000580c:	int3   
   14000580d:	int3   
   14000580e:	int3   
   14000580f:	int3   
   140005810:	test   rcx,rcx
   140005813:	jne    0x14000581b
   140005815:	mov    eax,0x2
   14000581a:	ret    
   14000581b:	or     rax,0xffffffffffffffff
   14000581f:	cmp    WORD PTR [rcx+rax*2+0x2],0x0
   140005825:	lea    rax,[rax+0x1]
   140005829:	jne    0x14000581f
   14000582b:	lea    rax,[rax*2+0x2]
   140005833:	ret    
   140005834:	int3   
   140005835:	int3   
   140005836:	int3   
   140005837:	int3   
   140005838:	int3   
   140005839:	int3   
   14000583a:	int3   
   14000583b:	int3   
   14000583c:	sub    rsp,0x48
   140005840:	mov    rax,QWORD PTR [rsp+0x48]
   140005845:	mov    DWORD PTR [rsp+0x30],0x2
   14000584d:	mov    QWORD PTR [rsp+0x28],rax
   140005852:	mov    rax,QWORD PTR [rsp+0x70]
   140005857:	mov    QWORD PTR [rsp+0x20],rax
   14000585c:	call   0x140005710
   140005861:	add    rsp,0x48
   140005865:	ret    
   140005866:	int3   
   140005867:	int3   
   140005868:	int3   
   140005869:	int3   
   14000586a:	int3   
   14000586b:	int3   
   14000586c:	sub    rsp,0x48
   140005870:	mov    eax,DWORD PTR [rsp+0x78]
   140005874:	mov    r10,QWORD PTR [rsp+0x48]
   140005879:	mov    DWORD PTR [rsp+0x38],eax
   14000587d:	mov    rax,QWORD PTR [rsp+0x70]
   140005882:	mov    DWORD PTR [rsp+0x30],0x2
   14000588a:	mov    QWORD PTR [rsp+0x28],r10
   14000588f:	mov    QWORD PTR [rsp+0x20],rax
   140005894:	call   0x140002d30
   140005899:	add    rsp,0x48
   14000589d:	ret    
   14000589e:	int3   
   14000589f:	int3   
   1400058a0:	int3   
   1400058a1:	int3   
   1400058a2:	int3   
   1400058a3:	int3   
   1400058a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400058a9:	mov    QWORD PTR [rsp+0x10],rbp
   1400058ae:	mov    QWORD PTR [rsp+0x18],rsi
   1400058b3:	mov    QWORD PTR [rsp+0x20],rdi
   1400058b8:	push   r14
   1400058ba:	sub    rsp,0x20
   1400058be:	movaps xmm0,XMMWORD PTR [rdx]
   1400058c1:	mov    r14,rcx
   1400058c4:	movups XMMWORD PTR [rcx],xmm0
   1400058c7:	mov    rbp,rdx
   1400058ca:	movaps xmm1,XMMWORD PTR [rdx+0x10]
   1400058ce:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400058d2:	movaps xmm0,XMMWORD PTR [rdx+0x20]
   1400058d6:	movups XMMWORD PTR [rcx+0x20],xmm0
   1400058da:	movaps xmm1,XMMWORD PTR [rdx+0x30]
   1400058de:	movups XMMWORD PTR [rcx+0x30],xmm1
   1400058e2:	movaps xmm0,XMMWORD PTR [rdx+0x40]
   1400058e6:	movups XMMWORD PTR [rcx+0x40],xmm0
   1400058ea:	movaps xmm1,XMMWORD PTR [rdx+0x50]
   1400058ee:	movups XMMWORD PTR [rcx+0x50],xmm1
   1400058f2:	movaps xmm0,XMMWORD PTR [rdx+0x60]
   1400058f6:	movups XMMWORD PTR [rcx+0x60],xmm0
   1400058fa:	movaps xmm1,XMMWORD PTR [rdx+0x70]
   1400058fe:	movups XMMWORD PTR [rcx+0x70],xmm1
   140005902:	movaps xmm0,XMMWORD PTR [rdx+0x80]
   140005909:	movups XMMWORD PTR [rcx+0x80],xmm0
   140005910:	mov    rcx,QWORD PTR [rdx+0x70]
   140005914:	call   0x140005810
   140005919:	mov    rcx,QWORD PTR [rdx+0x58]
   14000591d:	mov    rbx,rax
   140005920:	call   0x140005810
   140005925:	mov    rcx,QWORD PTR [rdx+0x10]
   140005929:	add    rbx,rax
   14000592c:	call   0x140005810
   140005931:	mov    rcx,QWORD PTR [rdx+0x68]
   140005935:	add    rbx,rax
   140005938:	call   0x1400057ec
   14000593d:	mov    rcx,QWORD PTR [rdx+0x50]
   140005941:	add    rbx,rax
   140005944:	call   0x1400057ec
   140005949:	mov    rcx,QWORD PTR [rdx+0x40]
   14000594d:	add    rbx,rax
   140005950:	call   0x1400057ec
   140005955:	mov    rcx,QWORD PTR [rdx+0x30]
   140005959:	add    rbx,rax
   14000595c:	call   0x1400057ec
   140005961:	mov    rcx,QWORD PTR [rdx+0x28]
   140005965:	add    rbx,rax
   140005968:	call   0x1400057ec
   14000596d:	mov    rcx,QWORD PTR [rdx+0x20]
   140005971:	add    rbx,rax
   140005974:	call   0x1400057ec
   140005979:	mov    rcx,QWORD PTR [rdx+0x78]
   14000597d:	add    rbx,rax
   140005980:	call   0x1400057ec
   140005985:	add    rbx,rax
   140005988:	lea    rdi,[r14+0x90]
   14000598f:	mov    rax,QWORD PTR [rdi]
   140005992:	xor    esi,esi
   140005994:	test   rax,rax
   140005997:	je     0x1400059a7
   140005999:	cmp    DWORD PTR [rax],0x1
   14000599c:	jne    0x1400059a7
   14000599e:	cmp    QWORD PTR [r14+0x98],rbx
   1400059a5:	jae    0x1400059dd
   1400059a7:	mov    rcx,rdi
   1400059aa:	call   0x140005bd0
   1400059af:	test   rbx,rbx
   1400059b2:	jne    0x1400059be
   1400059b4:	mov    rcx,rdi
   1400059b7:	call   0x140005bd0
   1400059bc:	jmp    0x1400059dd
   1400059be:	lea    rcx,[rbx+0x4]
   1400059c2:	call   QWORD PTR [rip+0x990]        # 0x140006358
   1400059c8:	test   rax,rax
   1400059cb:	je     0x1400059dd
   1400059cd:	mov    r8,rbx
   1400059d0:	mov    DWORD PTR [rax],esi
   1400059d2:	mov    rdx,rax
   1400059d5:	mov    rcx,rdi
   1400059d8:	call   0x140005b8c
   1400059dd:	mov    rcx,QWORD PTR [rdi]
   1400059e0:	mov    rax,QWORD PTR [rdi+0x8]
   1400059e4:	test   rcx,rcx
   1400059e7:	jne    0x1400059ee
   1400059e9:	mov    rcx,rsi
   1400059ec:	jmp    0x1400059f8
   1400059ee:	add    rcx,0x4
   1400059f2:	je     0x1400059f8
   1400059f4:	lea    rsi,[rax+rcx*1]
   1400059f8:	mov    r8,QWORD PTR [rbp+0x10]
   1400059fc:	lea    r9,[r14+0x10]
   140005a00:	mov    rdx,rsi
   140005a03:	call   0x140005224
   140005a08:	mov    r8,QWORD PTR [rbp+0x20]
   140005a0c:	lea    r9,[r14+0x20]
   140005a10:	mov    rdx,rsi
   140005a13:	mov    rcx,rax
   140005a16:	call   0x140005190
   140005a1b:	mov    r8,QWORD PTR [rbp+0x28]
   140005a1f:	lea    r9,[r14+0x28]
   140005a23:	mov    rdx,rsi
   140005a26:	mov    rcx,rax
   140005a29:	call   0x140005190
   140005a2e:	mov    r8,QWORD PTR [rbp+0x30]
   140005a32:	lea    r9,[r14+0x30]
   140005a36:	mov    rdx,rsi
   140005a39:	mov    rcx,rax
   140005a3c:	call   0x140005190
   140005a41:	mov    r8,QWORD PTR [rbp+0x40]
   140005a45:	lea    r9,[r14+0x40]
   140005a49:	mov    rdx,rsi
   140005a4c:	mov    rcx,rax
   140005a4f:	call   0x140005190
   140005a54:	mov    r8,QWORD PTR [rbp+0x78]
   140005a58:	lea    r9,[r14+0x78]
   140005a5c:	mov    rdx,rsi
   140005a5f:	mov    rcx,rax
   140005a62:	call   0x140005190
   140005a67:	mov    r8,QWORD PTR [rbp+0x68]
   140005a6b:	lea    r9,[r14+0x68]
   140005a6f:	mov    rdx,rsi
   140005a72:	mov    rcx,rax
   140005a75:	call   0x140005190
   140005a7a:	mov    r8,QWORD PTR [rbp+0x70]
   140005a7e:	lea    r9,[r14+0x70]
   140005a82:	mov    rdx,rsi
   140005a85:	mov    rcx,rax
   140005a88:	call   0x140005224
   140005a8d:	mov    r8,QWORD PTR [rbp+0x50]
   140005a91:	lea    r9,[r14+0x50]
   140005a95:	mov    rdx,rsi
   140005a98:	mov    rcx,rax
   140005a9b:	call   0x140005190
   140005aa0:	mov    r8,QWORD PTR [rbp+0x58]
   140005aa4:	lea    r9,[r14+0x58]
   140005aa8:	mov    rdx,rsi
   140005aab:	mov    rcx,rax
   140005aae:	mov    rbx,QWORD PTR [rsp+0x30]
   140005ab3:	mov    rbp,QWORD PTR [rsp+0x38]
   140005ab8:	mov    rsi,QWORD PTR [rsp+0x40]
   140005abd:	mov    rdi,QWORD PTR [rsp+0x48]
   140005ac2:	add    rsp,0x20
   140005ac6:	pop    r14
   140005ac8:	jmp    0x140005224
   140005acd:	int3   
   140005ace:	int3   
   140005acf:	int3   
   140005ad0:	int3   
   140005ad1:	int3   
   140005ad2:	int3   
   140005ad3:	int3   
   140005ad4:	mov    QWORD PTR [rsp+0x10],rbx
   140005ad9:	push   rsi
   140005ada:	sub    rsp,0x20
   140005ade:	xor    ebx,ebx
   140005ae0:	lea    rax,[rdx-0x1]
   140005ae4:	cmp    rax,0x7ffffffe
   140005aea:	mov    rsi,rcx
   140005aed:	mov    ecx,ebx
   140005aef:	mov    r10d,0x80070057
   140005af5:	cmova  ecx,r10d
   140005af9:	test   ecx,ecx
   140005afb:	js     0x140005b37
   140005afd:	mov    QWORD PTR [rsp+0x30],rdi
   140005b02:	mov    rcx,rsi
   140005b05:	lea    rdi,[rdx-0x1]
   140005b09:	mov    rdx,rdi
   140005b0c:	call   QWORD PTR [rip+0x83e]        # 0x140006350
   140005b12:	test   eax,eax
   140005b14:	js     0x140005b25
   140005b16:	cdqe   
   140005b18:	cmp    rax,rdi
   140005b1b:	ja     0x140005b25
   140005b1d:	jne    0x140005b2e
   140005b1f:	mov    WORD PTR [rsi+rdi*2],bx
   140005b23:	jmp    0x140005b2e
   140005b25:	mov    WORD PTR [rsi+rdi*2],bx
   140005b29:	mov    ebx,0x8007007a
   140005b2e:	mov    rdi,QWORD PTR [rsp+0x30]
   140005b33:	mov    eax,ebx
   140005b35:	jmp    0x140005b41
   140005b37:	mov    eax,ecx
   140005b39:	test   rdx,rdx
   140005b3c:	je     0x140005b41
   140005b3e:	mov    WORD PTR [rsi],bx
   140005b41:	mov    rbx,QWORD PTR [rsp+0x38]
   140005b46:	add    rsp,0x20
   140005b4a:	pop    rsi
   140005b4b:	ret    
   140005b4c:	int3   
   140005b4d:	int3   
   140005b4e:	int3   
   140005b4f:	int3   
   140005b50:	int3   
   140005b51:	int3   
   140005b52:	int3   
   140005b53:	int3   
   140005b54:	sub    rsp,0x48
   140005b58:	mov    rax,QWORD PTR [rsp+0x48]
   140005b5d:	mov    DWORD PTR [rsp+0x38],0x8000ffff
   140005b65:	mov    DWORD PTR [rsp+0x30],0x4
   140005b6d:	mov    QWORD PTR [rsp+0x28],rax
   140005b72:	mov    rax,QWORD PTR [rsp+0x70]
   140005b77:	mov    QWORD PTR [rsp+0x20],rax
   140005b7c:	call   0x140002d30
   140005b81:	add    rsp,0x48
   140005b85:	ret    
   140005b86:	int3   
   140005b87:	int3   
   140005b88:	int3   
   140005b89:	int3   
   140005b8a:	int3   
   140005b8b:	int3   
   140005b8c:	mov    QWORD PTR [rsp+0x8],rbx
   140005b91:	mov    QWORD PTR [rsp+0x10],rsi
   140005b96:	push   rdi
   140005b97:	sub    rsp,0x20
   140005b9b:	mov    rsi,r8
   140005b9e:	mov    rbx,rdx
   140005ba1:	mov    rdi,rcx
   140005ba4:	call   0x140005bd0
   140005ba9:	test   rbx,rbx
   140005bac:	je     0x140005bb8
   140005bae:	mov    QWORD PTR [rdi],rbx
   140005bb1:	mov    QWORD PTR [rdi+0x8],rsi
   140005bb5:	lock inc DWORD PTR [rbx]
   140005bb8:	mov    rbx,QWORD PTR [rsp+0x30]
   140005bbd:	mov    rsi,QWORD PTR [rsp+0x38]
   140005bc2:	add    rsp,0x20
   140005bc6:	pop    rdi
   140005bc7:	ret    
   140005bc8:	int3   
   140005bc9:	int3   
   140005bca:	int3   
   140005bcb:	int3   
   140005bcc:	int3   
   140005bcd:	int3   
   140005bce:	int3   
   140005bcf:	int3   
   140005bd0:	rex push rbx
   140005bd2:	sub    rsp,0x20
   140005bd6:	mov    rbx,rcx
   140005bd9:	mov    rcx,QWORD PTR [rcx]
   140005bdc:	test   rcx,rcx
   140005bdf:	je     0x140005bff
   140005be1:	or     eax,0xffffffff
   140005be4:	lock xadd DWORD PTR [rcx],eax
   140005be8:	cmp    eax,0x1
   140005beb:	jne    0x140005bf6
   140005bed:	mov    rcx,QWORD PTR [rbx]
   140005bf0:	call   QWORD PTR [rip+0x782]        # 0x140006378
   140005bf6:	xor    eax,eax
   140005bf8:	mov    QWORD PTR [rbx],rax
   140005bfb:	mov    QWORD PTR [rbx+0x8],rax
   140005bff:	add    rsp,0x20
   140005c03:	pop    rbx
   140005c04:	ret    
   140005c05:	int3   
   140005c06:	int3   
   140005c07:	int3   
   140005c08:	int3   
   140005c09:	int3   
   140005c0a:	int3   
   140005c0b:	int3   
   140005c0c:	int3   
   140005c0d:	int3   
   140005c0e:	int3   
   140005c0f:	int3   
   140005c10:	rex push rbx
   140005c12:	sub    rsp,0x20
   140005c16:	lea    rax,[rip+0xa13]        # 0x140006630
   140005c1d:	mov    rbx,rcx
   140005c20:	mov    QWORD PTR [rcx],rax
   140005c23:	test   dl,0x1
   140005c26:	je     0x140005c2e
   140005c28:	call   QWORD PTR [rip+0x752]        # 0x140006380
   140005c2e:	mov    rax,rbx
   140005c31:	add    rsp,0x20
   140005c35:	pop    rbx
   140005c36:	ret    
   140005c37:	int3   
   140005c38:	int3   
   140005c39:	int3   
   140005c3a:	int3   
   140005c3b:	int3   
   140005c3c:	int3   
   140005c3d:	int3   
   140005c3e:	int3   
   140005c3f:	int3   
   140005c40:	sub    rsp,0x28
   140005c44:	mov    DWORD PTR [rsp+0x30],ecx
   140005c48:	lea    rdx,[rip+0x3061]        # 0x140008cb0
   140005c4f:	lea    rcx,[rsp+0x30]
   140005c54:	call   0x140003866
   140005c59:	int3   
   140005c5a:	int3   
   140005c5b:	int3   
   140005c5c:	int3   
   140005c5d:	int3   
   140005c5e:	int3   
   140005c5f:	int3   
   140005c60:	sub    rsp,0x48
   140005c64:	mov    rax,QWORD PTR [rsp+0x48]
   140005c69:	lea    r8,[rip+0xa90]        # 0x140006700
   140005c70:	mov    DWORD PTR [rsp+0x30],0x1
   140005c78:	mov    QWORD PTR [rsp+0x28],rax
   140005c7d:	mov    rax,QWORD PTR [rsp+0x70]
   140005c82:	mov    QWORD PTR [rsp+0x20],rax
   140005c87:	call   0x140005710
   140005c8c:	add    rsp,0x48
   140005c90:	ret    
   140005c91:	int3   
   140005c92:	int3   
   140005c93:	int3   
   140005c94:	int3   
   140005c95:	int3   
   140005c96:	int3   
   140005c97:	int3   
   140005c98:	rex push rbx
   140005c9a:	sub    rsp,0x30
   140005c9e:	mov    rbx,rcx
   140005ca1:	call   QWORD PTR [rip+0x4a9]        # 0x140006150
   140005ca7:	cmp    QWORD PTR [rbx+0x8],0x0
   140005cac:	je     0x140005d06
   140005cae:	mov    rcx,QWORD PTR [rbx+0x18]
   140005cb2:	call   QWORD PTR [rip+0x4a0]        # 0x140006158
   140005cb8:	mov    rcx,QWORD PTR [rbx+0x8]
   140005cbc:	xor    edx,edx
   140005cbe:	call   QWORD PTR [rip+0x49c]        # 0x140006160
   140005cc4:	mov    rcx,QWORD PTR [rbx+0x18]
   140005cc8:	mov    edx,0x18a
   140005ccd:	mov    r9d,DWORD PTR [rbx+0x4]
   140005cd1:	mov    r8d,DWORD PTR [rbx]
   140005cd4:	mov    QWORD PTR [rsp+0x28],0x0
   140005cdd:	mov    QWORD PTR [rsp+0x20],rcx
   140005ce2:	mov    rcx,rax
   140005ce5:	call   QWORD PTR [rip+0x47d]        # 0x140006168
   140005ceb:	mov    rcx,QWORD PTR [rbx+0x18]
   140005cef:	xor    r9d,r9d
   140005cf2:	mov    r8d,eax
   140005cf5:	mov    edx,0x111
   140005cfa:	add    rsp,0x30
   140005cfe:	pop    rbx
   140005cff:	rex.W jmp QWORD PTR [rip+0x442]        # 0x140006148
   140005d06:	add    rsp,0x30
   140005d0a:	pop    rbx
   140005d0b:	ret    
   140005d0c:	int3   
   140005d0d:	int3   
   140005d0e:	int3   
   140005d0f:	int3   
   140005d10:	int3   
   140005d11:	int3   
   140005d12:	int3   
   140005d13:	int3   
   140005d14:	int3   
   140005d15:	int3   
   140005d16:	int3   
   140005d17:	int3   
   140005d18:	int3   
   140005d19:	int3   
   140005d1a:	int3   
   140005d1b:	int3   
   140005d1c:	int3   
   140005d1d:	int3   
   140005d1e:	int3   
   140005d1f:	int3   
   140005d20:	rex push rbx
   140005d22:	sub    rsp,0x20
   140005d26:	mov    rbx,rcx
   140005d29:	test   rdx,rdx
   140005d2c:	jne    0x140005d4f
   140005d2e:	lea    ecx,[rdx+0x28]
   140005d31:	call   0x140002e18
   140005d36:	mov    rdx,rax
   140005d39:	test   rax,rax
   140005d3c:	jne    0x140005d45
   140005d3e:	call   QWORD PTR [rip+0x534]        # 0x140006278
   140005d44:	int3   
   140005d45:	mov    QWORD PTR [rsp+0x38],rax
   140005d4a:	test   rdx,rdx
   140005d4d:	je     0x140005d69
   140005d4f:	lea    rax,[rip+0x96a]        # 0x1400066c0
   140005d56:	mov    QWORD PTR [rdx],rax
   140005d59:	mov    rax,QWORD PTR [rbx+0x8]
   140005d5d:	mov    QWORD PTR [rdx+0x8],rax
   140005d61:	mov    rax,QWORD PTR [rbx+0x18]
   140005d65:	mov    QWORD PTR [rdx+0x18],rax
   140005d69:	mov    rax,rdx
   140005d6c:	add    rsp,0x20
   140005d70:	pop    rbx
   140005d71:	ret    
   140005d72:	int3   
   140005d73:	int3   
   140005d74:	int3   
   140005d75:	int3   
   140005d76:	int3   
   140005d77:	int3   
   140005d78:	mov    r11,rsp
   140005d7b:	mov    DWORD PTR [r11+0x18],r8d
   140005d7f:	sub    rsp,0x98
   140005d86:	mov    rax,QWORD PTR [rip+0x427b]        # 0x14000a008
   140005d8d:	xor    rax,rsp
   140005d90:	mov    QWORD PTR [rsp+0x80],rax
   140005d98:	lea    rax,[r11+0x18]
   140005d9c:	mov    QWORD PTR [r11-0x70],0x4
   140005da4:	mov    QWORD PTR [r11-0x78],rax
   140005da8:	xor    r8d,r8d
   140005dab:	or     rax,0xffffffffffffffff
   140005daf:	test   r9,r9
   140005db2:	je     0x140005dcc
   140005db4:	mov    rcx,rax
   140005db7:	cmp    WORD PTR [r9+rcx*2+0x2],r8w
   140005dbd:	lea    rcx,[rcx+0x1]
   140005dc1:	jne    0x140005db7
   140005dc3:	lea    edx,[rcx*2+0x2]
   140005dca:	jmp    0x140005dd8
   140005dcc:	mov    edx,0xa
   140005dd1:	lea    r9,[rip+0x1e50]        # 0x140007c28
   140005dd8:	mov    DWORD PTR [rsp+0x38],edx
   140005ddc:	mov    rdx,QWORD PTR [rsp+0xc0]
   140005de4:	mov    QWORD PTR [rsp+0x30],r9
   140005de9:	mov    DWORD PTR [rsp+0x3c],r8d
   140005dee:	test   rdx,rdx
   140005df1:	je     0x140005e03
   140005df3:	mov    rcx,rax
   140005df6:	inc    rcx
   140005df9:	cmp    BYTE PTR [rdx+rcx*1],r8b
   140005dfd:	jne    0x140005df6
   140005dff:	inc    ecx
   140005e01:	jmp    0x140005e0f
   140005e03:	mov    ecx,0x5
   140005e08:	lea    rdx,[rip+0x1e25]        # 0x140007c34
   140005e0f:	mov    QWORD PTR [rsp+0x40],rdx
   140005e14:	mov    rdx,QWORD PTR [rsp+0xc8]
   140005e1c:	mov    DWORD PTR [rsp+0x48],ecx
   140005e20:	mov    DWORD PTR [rsp+0x4c],r8d
   140005e25:	test   rdx,rdx
   140005e28:	je     0x140005e3a
   140005e2a:	mov    rcx,rax
   140005e2d:	inc    rcx
   140005e30:	cmp    BYTE PTR [rdx+rcx*1],r8b
   140005e34:	jne    0x140005e2d
   140005e36:	inc    ecx
   140005e38:	jmp    0x140005e46
   140005e3a:	mov    ecx,0x5
   140005e3f:	lea    rdx,[rip+0x1dee]        # 0x140007c34
   140005e46:	mov    DWORD PTR [rsp+0x58],ecx
   140005e4a:	mov    rcx,QWORD PTR [rsp+0xd0]
   140005e52:	mov    QWORD PTR [rsp+0x50],rdx
   140005e57:	mov    DWORD PTR [rsp+0x5c],r8d
   140005e5c:	test   rcx,rcx
   140005e5f:	je     0x140005e6e
   140005e61:	inc    rax
   140005e64:	cmp    BYTE PTR [rcx+rax*1],r8b
   140005e68:	jne    0x140005e61
   140005e6a:	inc    eax
   140005e6c:	jmp    0x140005e7a
   140005e6e:	mov    eax,0x5
   140005e73:	lea    rcx,[rip+0x1dba]        # 0x140007c34
   140005e7a:	mov    DWORD PTR [rsp+0x68],eax
   140005e7e:	lea    r9,[rsp+0x20]
   140005e83:	lea    rax,[rsp+0xd8]
   140005e8b:	mov    QWORD PTR [rsp+0x60],rcx
   140005e90:	mov    DWORD PTR [rsp+0x6c],r8d
   140005e95:	lea    rdx,[rip+0xa24]        # 0x1400068c0
   140005e9c:	mov    r8d,0x6
   140005ea2:	mov    QWORD PTR [rsp+0x70],rax
   140005ea7:	xor    ecx,ecx
   140005ea9:	mov    QWORD PTR [rsp+0x78],0x4
   140005eb2:	call   QWORD PTR [rip+0x398]        # 0x140006250
   140005eb8:	mov    rcx,QWORD PTR [rsp+0x80]
   140005ec0:	xor    rcx,rsp
   140005ec3:	call   0x140003210
   140005ec8:	add    rsp,0x98
   140005ecf:	ret    

Disassembly of section .rdata:

0000000140006000 <.rdata>:
   140006000:	(bad)  
   140006001:	xchg   edx,eax
   140006002:	add    BYTE PTR [rax],al
   140006004:	add    BYTE PTR [rax],al
   140006006:	add    BYTE PTR [rax],al
   140006008:	cs xchg edx,eax
   14000600a:	add    BYTE PTR [rax],al
   14000600c:	add    BYTE PTR [rax],al
   14000600e:	add    BYTE PTR [rax],al
   140006010:	rex xchg edx,eax
   140006012:	add    BYTE PTR [rax],al
   140006014:	add    BYTE PTR [rax],al
   140006016:	add    BYTE PTR [rax],al
   140006018:	or     BYTE PTR [rdx+0x0],dl
	...
   140006026:	add    BYTE PTR [rax],al
   140006028:	fs xchg edx,eax
   14000602a:	add    BYTE PTR [rax],al
   14000602c:	add    BYTE PTR [rax],al
   14000602e:	add    BYTE PTR [rax],al
   140006030:	jbe    0x140005fc4
   140006032:	add    BYTE PTR [rax],al
   140006034:	add    BYTE PTR [rax],al
   140006036:	add    BYTE PTR [rax],al
   140006038:	mov    WORD PTR [rdx+0x0],ss
   14000603e:	add    BYTE PTR [rax],al
   140006040:	movabs al,ds:0xb200000000000092
   140006049:	xchg   edx,eax
   14000604a:	add    BYTE PTR [rax],al
   14000604c:	add    BYTE PTR [rax],al
   14000604e:	add    BYTE PTR [rax],al
   140006050:	enter  0x92,0x0
   140006054:	add    BYTE PTR [rax],al
   140006056:	add    BYTE PTR [rax],al
   140006058:	fcom   DWORD PTR [rdx+0x0]
   14000605e:	add    BYTE PTR [rax],al
   140006060:	out    0x92,al
   140006062:	add    BYTE PTR [rax],al
   140006064:	add    BYTE PTR [rax],al
   140006066:	add    BYTE PTR [rax],al
   140006068:	cld    
   140006069:	xchg   edx,eax
   14000606a:	add    BYTE PTR [rax],al
   14000606c:	add    BYTE PTR [rax],al
   14000606e:	add    BYTE PTR [rax],al
   140006070:	adc    dl,BYTE PTR [rbx+0x0]
   140006076:	add    BYTE PTR [rax],al
   140006078:	and    al,0x93
   14000607a:	add    BYTE PTR [rax],al
   14000607c:	add    BYTE PTR [rax],al
   14000607e:	add    BYTE PTR [rax],al
   140006080:	xor    al,0x93
   140006082:	add    BYTE PTR [rax],al
   140006084:	add    BYTE PTR [rax],al
   140006086:	add    BYTE PTR [rax],al
   140006088:	push   rax
   140006089:	xchg   ebx,eax
   14000608a:	add    BYTE PTR [rax],al
   14000608c:	add    BYTE PTR [rax],al
   14000608e:	add    BYTE PTR [rax],al
   140006090:	pop    rsi
   140006091:	xchg   ebx,eax
   140006092:	add    BYTE PTR [rax],al
   140006094:	add    BYTE PTR [rax],al
   140006096:	add    BYTE PTR [rax],al
   140006098:	jp     0x14000602d
   14000609a:	add    BYTE PTR [rax],al
   14000609c:	add    BYTE PTR [rax],al
   14000609e:	add    BYTE PTR [rax],al
   1400060a0:	xchg   edx,eax
   1400060a1:	xchg   ebx,eax
   1400060a2:	add    BYTE PTR [rax],al
   1400060a4:	add    BYTE PTR [rax],al
   1400060a6:	add    BYTE PTR [rax],al
   1400060a8:	stos   BYTE PTR es:[rdi],al
   1400060a9:	xchg   ebx,eax
	...
   1400060b6:	add    BYTE PTR [rax],al
   1400060b8:	rex.WR (bad) 
	...
   1400060c6:	add    BYTE PTR [rax],al
   1400060c8:	(bad)  
   1400060c9:	xchg   esp,eax
   1400060ca:	add    BYTE PTR [rax],al
   1400060cc:	add    BYTE PTR [rax],al
   1400060ce:	add    BYTE PTR [rax],al
   1400060d0:	and    BYTE PTR [rax+rax*1+0x0],dl
   1400060d7:	add    BYTE PTR [rsi],ch
   1400060d9:	xchg   esp,eax
   1400060da:	add    BYTE PTR [rax],al
   1400060dc:	add    BYTE PTR [rax],al
   1400060de:	add    BYTE PTR [rax],al
   1400060e0:	rex.X xchg esp,eax
   1400060e2:	add    BYTE PTR [rax],al
   1400060e4:	add    BYTE PTR [rax],al
   1400060e6:	add    BYTE PTR [rax],al
   1400060e8:	push   rsp
   1400060e9:	xchg   esp,eax
   1400060ea:	add    BYTE PTR [rax],al
   1400060ec:	add    BYTE PTR [rax],al
   1400060ee:	add    BYTE PTR [rax],al
   1400060f0:	push   0x94
   1400060f5:	add    BYTE PTR [rax],al
   1400060f7:	add    BYTE PTR [rdx-0x6c],bh
   1400060fa:	add    BYTE PTR [rax],al
   1400060fc:	add    BYTE PTR [rax],al
   1400060fe:	add    BYTE PTR [rax],al
   140006100:	mov    WORD PTR [rax+rax*1+0x0],ss
   140006107:	add    BYTE PTR [rax+0x94],ah
   14000610d:	add    BYTE PTR [rax],al
   14000610f:	add    BYTE PTR [rdx+0x94],bh
   140006115:	add    BYTE PTR [rax],al
   140006117:	add    al,cl
   140006119:	xchg   esp,eax
   14000611a:	add    BYTE PTR [rax],al
   14000611c:	add    BYTE PTR [rax],al
   14000611e:	add    BYTE PTR [rax],al
   140006120:	(bad)  
   140006121:	xchg   esp,eax
   140006122:	add    BYTE PTR [rax],al
   140006124:	add    BYTE PTR [rax],al
   140006126:	add    BYTE PTR [rax],al
   140006128:	(bad)  
   140006129:	xchg   esp,eax
   14000612a:	add    BYTE PTR [rax],al
   14000612c:	add    BYTE PTR [rax],al
   14000612e:	add    BYTE PTR [rax],al
   140006130:	not    BYTE PTR [rax+rax*1+0x0]
   140006137:	add    BYTE PTR [rdx],al
   140006139:	xchg   ebp,eax
   14000613a:	add    BYTE PTR [rax],al
   14000613c:	add    BYTE PTR [rax],al
   14000613e:	add    BYTE PTR [rax],al
   140006140:	adc    BYTE PTR [rbp+0x0],dl
   140006146:	add    BYTE PTR [rax],al
   140006148:	and    al,0x95
   14000614a:	add    BYTE PTR [rax],al
   14000614c:	add    BYTE PTR [rax],al
   14000614e:	add    BYTE PTR [rax],al
   140006150:	xor    al,0x95
   140006152:	add    BYTE PTR [rax],al
   140006154:	add    BYTE PTR [rax],al
   140006156:	add    BYTE PTR [rax],al
   140006158:	rex.R xchg ebp,eax
   14000615a:	add    BYTE PTR [rax],al
   14000615c:	add    BYTE PTR [rax],al
   14000615e:	add    BYTE PTR [rax],al
   140006160:	pop    rdx
   140006161:	xchg   ebp,eax
   140006162:	add    BYTE PTR [rax],al
   140006164:	add    BYTE PTR [rax],al
   140006166:	add    BYTE PTR [rax],al
   140006168:	push   0x95
   14000616d:	add    BYTE PTR [rax],al
   14000616f:	add    BYTE PTR [rbp+rdx*4+0x0],bh
   140006173:	add    BYTE PTR [rax],al
   140006175:	add    BYTE PTR [rax],al
   140006177:	add    dl,dh
   140006179:	xchg   ebx,eax
   14000617a:	add    BYTE PTR [rax],al
   14000617c:	add    BYTE PTR [rax],al
   14000617e:	add    BYTE PTR [rax],al
   140006180:	ficom  WORD PTR [rbx+0x0]
   140006186:	add    BYTE PTR [rax],al
   140006188:	rcl    BYTE PTR [rbx+0x0],1
   14000618e:	add    BYTE PTR [rax],al
   140006190:	adc    al,0x94
	...
   14000619e:	add    BYTE PTR [rax],al
   1400061a0:	(bad)  
   1400061a1:	xchg   edi,eax
   1400061a2:	add    BYTE PTR [rax],al
   1400061a4:	add    BYTE PTR [rax],al
   1400061a6:	add    BYTE PTR [rax],al
   1400061a8:	out    0x97,al
	...
   1400061b6:	add    BYTE PTR [rax],al
   1400061b8:	push   rsi
   1400061b9:	cwde   
   1400061ba:	add    BYTE PTR [rax],al
   1400061bc:	add    BYTE PTR [rax],al
   1400061be:	add    BYTE PTR [rax],al
   1400061c0:	jb     0x14000615a
	...
   1400061ce:	add    BYTE PTR [rax],al
   1400061d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400061d1:	cwde   
   1400061d2:	add    BYTE PTR [rax],al
   1400061d4:	add    BYTE PTR [rax],al
   1400061d6:	add    BYTE PTR [rax],al
   1400061d8:	add    bl,BYTE PTR [rax+0x0]
   1400061de:	add    BYTE PTR [rax],al
   1400061e0:	nop
   1400061e1:	cwde   
   1400061e2:	add    BYTE PTR [rax],al
   1400061e4:	add    BYTE PTR [rax],al
   1400061e6:	add    BYTE PTR [rax],al
   1400061e8:	rcr    BYTE PTR [rax+0x0],cl
	...
   1400061f6:	add    BYTE PTR [rax],al
   1400061f8:	mov    eax,0x98
	...
   140006205:	add    BYTE PTR [rax],al
   140006207:	add    BYTE PTR [rax],ch
   140006209:	cwde   
   14000620a:	add    BYTE PTR [rax],al
   14000620c:	add    BYTE PTR [rax],al
   14000620e:	add    BYTE PTR [rax],al
   140006210:	adc    al,0x98
   140006212:	add    BYTE PTR [rax],al
   140006214:	add    BYTE PTR [rax],al
   140006216:	add    BYTE PTR [rax],al
   140006218:	rex.X cwde 
	...
   140006226:	add    BYTE PTR [rax],al
   140006228:	cli    
   140006229:	xchg   edi,eax
	...
   140006236:	add    BYTE PTR [rax],al
   140006238:	add    bl,BYTE PTR [rcx+0x0]
   14000623e:	add    BYTE PTR [rax],al
   140006240:	call   0x1400062dd
	...
   14000624d:	add    BYTE PTR [rax],al
   14000624f:	add    BYTE PTR [rdx],dl
   140006251:	cdq    
	...
   14000625e:	add    BYTE PTR [rax],al
   140006260:	xchg   BYTE PTR [rdx+0x0],bl
	...
   14000626e:	add    BYTE PTR [rax],al
   140006270:	out    dx,al
   140006271:	xchg   ebp,eax
   140006272:	add    BYTE PTR [rax],al
   140006274:	add    BYTE PTR [rax],al
   140006276:	add    BYTE PTR [rax],al
   140006278:	(bad)  
   140006279:	xchg   ebp,eax
   14000627a:	add    BYTE PTR [rax],al
   14000627c:	add    BYTE PTR [rax],al
   14000627e:	add    BYTE PTR [rax],al
   140006280:	mov    ah,0x95
   140006282:	add    BYTE PTR [rax],al
   140006284:	add    BYTE PTR [rax],al
   140006286:	add    BYTE PTR [rax],al
   140006288:	xor    dl,BYTE PTR [rsi+0x0]
   14000628e:	add    BYTE PTR [rax],al
   140006290:	xchg   esp,eax
   140006291:	xchg   ebp,eax
   140006292:	add    BYTE PTR [rax],al
   140006294:	add    BYTE PTR [rax],al
   140006296:	add    BYTE PTR [rax],al
   140006298:	adc    BYTE PTR [rsi+0x0],dl
	...
   1400062a6:	add    BYTE PTR [rax],al
   1400062a8:	mov    esp,0x97
   1400062ad:	add    BYTE PTR [rax],al
   1400062af:	add    BYTE PTR [rdx+0x97],dh
   1400062b5:	add    BYTE PTR [rax],al
   1400062b7:	add    BYTE PTR [rdi+rdx*4+0x0],ah
   1400062be:	add    BYTE PTR [rax],al
   1400062c0:	(bad)  
   1400062c1:	xchg   edi,eax
   1400062c2:	add    BYTE PTR [rax],al
   1400062c4:	add    BYTE PTR [rax],al
   1400062c6:	add    BYTE PTR [rax],al
   1400062c8:	xchg   edx,eax
   1400062c9:	xchg   edi,eax
   1400062ca:	add    BYTE PTR [rax],al
   1400062cc:	add    BYTE PTR [rax],al
   1400062ce:	add    BYTE PTR [rax],al
   1400062d0:	jle    0x140006269
   1400062d2:	add    BYTE PTR [rax],al
   1400062d4:	add    BYTE PTR [rax],al
   1400062d6:	add    BYTE PTR [rax],al
   1400062d8:	xchg   di,ax
   1400062da:	add    BYTE PTR [rax],al
   1400062dc:	add    BYTE PTR [rax],al
   1400062de:	add    BYTE PTR [rax],al
   1400062e0:	pop    rsp
   1400062e1:	xchg   edi,eax
   1400062e2:	add    BYTE PTR [rax],al
   1400062e4:	add    BYTE PTR [rax],al
   1400062e6:	add    BYTE PTR [rax],al
   1400062e8:	push   rdx
   1400062e9:	xchg   edi,eax
   1400062ea:	add    BYTE PTR [rax],al
   1400062ec:	add    BYTE PTR [rax],al
   1400062ee:	add    BYTE PTR [rax],al
   1400062f0:	cmp    dl,BYTE PTR [rdi+0x0]
   1400062f6:	add    BYTE PTR [rax],al
   1400062f8:	cs xchg edi,eax
   1400062fa:	add    BYTE PTR [rax],al
   1400062fc:	add    BYTE PTR [rax],al
   1400062fe:	add    BYTE PTR [rax],al
   140006300:	sbb    dl,BYTE PTR [rdi+0x0]
   140006306:	add    BYTE PTR [rax],al
   140006308:	or     al,0x97
   14000630a:	add    BYTE PTR [rax],al
   14000630c:	add    BYTE PTR [rax],al
   14000630e:	add    BYTE PTR [rax],al
   140006310:	add    dl,BYTE PTR [rdi+0x0]
   140006316:	add    BYTE PTR [rax],al
   140006318:	cli    
   140006319:	xchg   esi,eax
   14000631a:	add    BYTE PTR [rax],al
   14000631c:	add    BYTE PTR [rax],al
   14000631e:	add    BYTE PTR [rax],al
   140006320:	repnz xchg esi,eax
   140006322:	add    BYTE PTR [rax],al
   140006324:	add    BYTE PTR [rax],al
   140006326:	add    BYTE PTR [rax],al
   140006328:	loopne 0x1400062c0
   14000632a:	add    BYTE PTR [rax],al
   14000632c:	add    BYTE PTR [rax],al
   14000632e:	add    BYTE PTR [rax],al
   140006330:	rcl    BYTE PTR [rsi+0x0],1
   140006336:	add    BYTE PTR [rax],al
   140006338:	ret    0x96
   14000633b:	add    BYTE PTR [rax],al
   14000633d:	add    BYTE PTR [rax],al
   14000633f:	add    BYTE PTR [rsi+rdx*4+0x0],dh
   140006346:	add    BYTE PTR [rax],al
   140006348:	test   al,0x96
   14000634a:	add    BYTE PTR [rax],al
   14000634c:	add    BYTE PTR [rax],al
   14000634e:	add    BYTE PTR [rax],al
   140006350:	(bad)  
   140006351:	xchg   esi,eax
   140006352:	add    BYTE PTR [rax],al
   140006354:	add    BYTE PTR [rax],al
   140006356:	add    BYTE PTR [rax],al
   140006358:	nop
   140006359:	xchg   esi,eax
   14000635a:	add    BYTE PTR [rax],al
   14000635c:	add    BYTE PTR [rax],al
   14000635e:	add    BYTE PTR [rax],al
   140006360:	test   BYTE PTR [rsi+0x0],dl
   140006366:	add    BYTE PTR [rax],al
   140006368:	pop    rax
   140006369:	fwait
   14000636a:	add    BYTE PTR [rax],al
   14000636c:	add    BYTE PTR [rax],al
   14000636e:	add    BYTE PTR [rax],al
   140006370:	rex.X
   140006371:	fwait
   140006372:	add    BYTE PTR [rax],al
   140006374:	add    BYTE PTR [rax],al
   140006376:	add    BYTE PTR [rax],al
   140006378:	jl     0x140006310
   14000637a:	add    BYTE PTR [rax],al
   14000637c:	add    BYTE PTR [rax],al
   14000637e:	add    BYTE PTR [rax],al
   140006380:	(bad)  
   140006381:	xchg   esi,eax
   140006382:	add    BYTE PTR [rax],al
   140006384:	add    BYTE PTR [rax],al
   140006386:	add    BYTE PTR [rax],al
   140006388:	jb     0x140006320
   14000638a:	add    BYTE PTR [rax],al
   14000638c:	add    BYTE PTR [rax],al
   14000638e:	add    BYTE PTR [rax],al
   140006390:	sub    al,0x9b
   140006392:	add    BYTE PTR [rax],al
   140006394:	add    BYTE PTR [rax],al
   140006396:	add    BYTE PTR [rax],al
   140006398:	(bad)  
   140006399:	fwait
	...
   1400063a6:	add    BYTE PTR [rax],al
   1400063a8:	lock (bad) 
   1400063aa:	add    BYTE PTR [rax],al
   1400063ac:	add    BYTE PTR [rax],al
   1400063ae:	add    BYTE PTR [rax],al
   1400063b0:	(bad)  
   1400063b1:	(bad)  
	...
   1400063be:	add    BYTE PTR [rax],al
   1400063c0:	ins    BYTE PTR es:[rdi],dx
   1400063c1:	(bad)  
	...
   1400063ce:	add    BYTE PTR [rax],al
   1400063d0:	xor    BYTE PTR [rax],bh
   1400063d2:	add    BYTE PTR [rax+0x1],al
   1400063d5:	add    BYTE PTR [rax],al
   1400063d7:	add    al,dl
   1400063d9:	cmp    DWORD PTR [rax],eax
   1400063db:	rex add DWORD PTR [rax],eax
	...
   1400063e6:	add    BYTE PTR [rax],al
   1400063e8:	xor    BYTE PTR [rdi],ch
   1400063ea:	add    BYTE PTR [rax+0x1],al
   1400063ed:	add    BYTE PTR [rax],al
   1400063ef:	add    BYTE PTR [rax+0x10],dh
   1400063f2:	add    BYTE PTR [rax+0x1],al
   1400063f5:	add    BYTE PTR [rax],al
   1400063f7:	add    BYTE PTR [rax+0x1400010],ah
   1400063fd:	add    BYTE PTR [rax],al
   1400063ff:	add    BYTE PTR [rax],al
   140006401:	adc    BYTE PTR [rax],al
   140006403:	rex add DWORD PTR [rax],eax
   140006406:	add    BYTE PTR [rax],al
   140006408:	adc    BYTE PTR [rax],dl
   14000640a:	add    BYTE PTR [rax+0x1],al
   14000640d:	add    BYTE PTR [rax],al
   14000640f:	add    BYTE PTR [rax],dh
   140006411:	adc    BYTE PTR [rax],al
   140006413:	rex add DWORD PTR [rax],eax
   140006416:	add    BYTE PTR [rax],al
   140006418:	push   rax
   140006419:	adc    BYTE PTR [rax],al
   14000641b:	rex add DWORD PTR [rax],eax
   14000641e:	add    BYTE PTR [rax],al
   140006420:	(bad)  
   140006421:	adc    BYTE PTR [rax],al
   140006423:	rex add DWORD PTR [rax],eax
	...
   140006436:	add    BYTE PTR [rax],al
   140006438:	push   rax
   140006439:	add    BYTE PTR cs:[rax+0x1],al
   14000643d:	add    BYTE PTR [rax],al
   14000643f:	add    BYTE PTR [rax+0x35],ah
   140006442:	add    BYTE PTR [rax+0x1],al
	...
   140006451:	adc    BYTE PTR [rax],al
   140006453:	add    BYTE PTR [rax],dl
   140006455:	adc    BYTE PTR [rax],al
   140006457:	add    BYTE PTR [rax],dh
   140006459:	adc    BYTE PTR [rax],al
   14000645b:	add    BYTE PTR [rax+0x10],dl
   14000645e:	add    BYTE PTR [rax],al
   140006460:	(bad)  
   140006461:	adc    BYTE PTR [rax],al
   140006463:	add    BYTE PTR [rax+0x10],dh
   140006466:	add    BYTE PTR [rax],al
   140006468:	movabs al,ds:0xf0000011c0000010
   140006471:	sbb    BYTE PTR [rax],al
   140006473:	add    BYTE PTR [rax+0x1a],dh
   140006476:	add    BYTE PTR [rax],al
   140006478:	(bad)  
   140006479:	sbb    eax,DWORD PTR [rax]
   14000647b:	add    BYTE PTR [rax-0xfffffe5],dl
   140006481:	sbb    eax,DWORD PTR [rax]
   140006483:	add    BYTE PTR [rax-0xfffffe4],dl
   140006489:	sbb    al,0x0
   14000648b:	add    BYTE PTR [rax+0x10000027],dh
   140006491:	sub    DWORD PTR [rax],eax
   140006493:	add    BYTE PTR [rax+0x2e],dl
   140006496:	add    BYTE PTR [rax],al
   140006498:	xor    BYTE PTR [rdi],ch
   14000649a:	add    BYTE PTR [rax],al
   14000649c:	sub    BYTE PTR [rdi],0x0
   14000649f:	add    BYTE PTR [rax],al
   1400064a1:	xor    eax,DWORD PTR [rax]
   1400064a3:	add    BYTE PTR [rax],dl
   1400064a5:	xor    eax,DWORD PTR [rax]
   1400064a7:	add    BYTE PTR [rax+0x20000033],dl
   1400064ad:	xor    eax,0x35600000
   1400064b2:	add    BYTE PTR [rax],al
   1400064b4:	add    BYTE PTR [rax],bh
   1400064b6:	add    BYTE PTR [rax],al
   1400064b8:	xor    BYTE PTR [rax],bh
   1400064ba:	add    BYTE PTR [rax],al
   1400064bc:	cmp    al,BYTE PTR [rax]
   1400064bf:	add    BYTE PTR [rax+0x3a],dl
   1400064c2:	add    BYTE PTR [rax],al
   1400064c4:	(bad)  
   1400064c5:	cmp    al,BYTE PTR [rax]
   1400064c7:	add    BYTE PTR [rax+0x3a],dh
   1400064ca:	add    BYTE PTR [rax],al
   1400064cc:	cmp    BYTE PTR [rdx],0x0
   1400064cf:	add    al,dl
   1400064d1:	cmp    al,BYTE PTR [rax]
   1400064d3:	add    al,ah
   1400064d5:	cmp    al,BYTE PTR [rax]
   1400064d7:	add    al,dh
   1400064d9:	cmp    al,BYTE PTR [rax]
   1400064db:	add    al,al
   1400064dd:	cmp    al,0x0
   1400064df:	add    al,dl
   1400064e1:	cmp    al,0x0
   1400064e3:	add    al,ah
   1400064e5:	cmp    al,0x0
   1400064e7:	add    al,dh
   1400064e9:	cmp    al,0x0
   1400064eb:	add    BYTE PTR [rax+0x4a],dh
   1400064ee:	add    BYTE PTR [rax],al
   1400064f0:	movabs al,ds:0x7000004b0000004a
   1400064f9:	rex.WRXB add BYTE PTR [r8],r8b
   1400064fc:	ror    BYTE PTR [rdi+0x0],0x0
   140006500:	loopne 0x140006551
   140006502:	add    BYTE PTR [rax],al
   140006504:	rcl    BYTE PTR [rax+0x0],1
   140006507:	add    BYTE PTR [rax],dl
   140006509:	push   rcx
   14000650a:	add    BYTE PTR [rax],al
   14000650c:	push   rax
   14000650d:	push   rcx
   14000650e:	add    BYTE PTR [rax],al
   140006510:	adc    BYTE PTR [rax+rax*1+0x0],bl
   140006514:	and    BYTE PTR [rbp+0x0],bl
	...
   14000651f:	add    BYTE PTR [rax+0x4a],dh
   140006522:	add    BYTE PTR [rax+0x1],al
   140006525:	add    BYTE PTR [rax],al
   140006527:	add    BYTE PTR [rax],al
   140006529:	xor    eax,DWORD PTR [rax]
   14000652b:	rex add DWORD PTR [rax],eax
   14000652e:	add    BYTE PTR [rax],al
   140006530:	add    BYTE PTR [rbx],dh
   140006532:	add    BYTE PTR [rax+0x1],al
   140006535:	add    BYTE PTR [rax],al
   140006537:	add    BYTE PTR [rax+0x3a],dl
   14000653a:	add    BYTE PTR [rax+0x1],al
   14000653d:	add    BYTE PTR [rax],al
   14000653f:	add    al,al
   140006541:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140006545:	add    BYTE PTR [rax],al
   140006547:	add    al,ah
   140006549:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000654d:	add    BYTE PTR [rax],al
   14000654f:	add    BYTE PTR [rax+0x4a],dh
   140006552:	add    BYTE PTR [rax+0x1],al
   140006555:	add    BYTE PTR [rax],al
   140006557:	add    BYTE PTR [rax+0x140003a],al
   14000655d:	add    BYTE PTR [rax],al
   14000655f:	add    BYTE PTR [rax+0x51],dl
   140006562:	add    BYTE PTR [rax+0x1],al
   140006565:	add    BYTE PTR [rax],al
   140006567:	add    BYTE PTR [rax+0x4f],dh
   14000656a:	add    BYTE PTR [rax+0x1],al
   14000656d:	add    BYTE PTR [rax],al
   14000656f:	add    al,al
   140006571:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140006575:	add    BYTE PTR [rax],al
   140006577:	add    al,ah
   140006579:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000657d:	add    BYTE PTR [rax],al
   14000657f:	add    BYTE PTR [rax+0x4a],dh
   140006582:	add    BYTE PTR [rax+0x1],al
   140006585:	add    BYTE PTR [rax],al
   140006587:	add    BYTE PTR [rax+0x3a],ah
   14000658a:	add    BYTE PTR [rax+0x1],al
   14000658d:	add    BYTE PTR [rax],al
   14000658f:	add    al,dl
   140006591:	push   rax
   140006592:	add    BYTE PTR [rax+0x1],al
   140006595:	add    BYTE PTR [rax],al
   140006597:	add    BYTE PTR [rax+0x3a],dl
   14000659a:	add    BYTE PTR [rax+0x1],al
   14000659d:	add    BYTE PTR [rax],al
   14000659f:	add    al,al
   1400065a1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400065a5:	add    BYTE PTR [rax],al
   1400065a7:	add    al,ah
   1400065a9:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400065ad:	add    BYTE PTR [rax],al
   1400065af:	add    BYTE PTR [rax+0x4a],dh
   1400065b2:	add    BYTE PTR [rax+0x1],al
   1400065b5:	add    BYTE PTR [rax],al
   1400065b7:	add    BYTE PTR [rax+0x3a],dh
   1400065ba:	add    BYTE PTR [rax+0x1],al
   1400065bd:	add    BYTE PTR [rax],al
   1400065bf:	add    BYTE PTR [rax],dl
   1400065c1:	push   rcx
   1400065c2:	add    BYTE PTR [rax+0x1],al
   1400065c5:	add    BYTE PTR [rax],al
   1400065c7:	add    BYTE PTR [rax+0x3a],dl
   1400065ca:	add    BYTE PTR [rax+0x1],al
   1400065cd:	add    BYTE PTR [rax],al
   1400065cf:	add    al,al
   1400065d1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400065d5:	add    BYTE PTR [rax],al
   1400065d7:	add    al,ah
   1400065d9:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400065dd:	add    BYTE PTR [rax],al
   1400065df:	add    BYTE PTR [rax+rax*1+0x4f],cl
   1400065e3:	add    BYTE PTR [rbx+0x0],al
   1400065e6:	add    BYTE PTR [r8+rax*1+0x49],dl
   1400065eb:	add    BYTE PTR [rdi+0x0],cl
   1400065ee:	rex.WRX add BYTE PTR [rsi+0x0],r9b
   1400065f2:	rex.WRXB add BYTE PTR [r8+r8*1+0x49],r10b
   1400065f7:	add    BYTE PTR [rsi+0x0],al
   1400065fa:	rex.WB add BYTE PTR [r11+0x0],al
   1400065fe:	add    BYTE PTR [r8+rax*1+0x49],dl
   140006603:	add    BYTE PTR [rdi+0x0],cl
   140006606:	rex.WRX add BYTE PTR [rax],r8b
   140006609:	add    BYTE PTR [rax],al
   14000660b:	add    BYTE PTR [rax],al
   14000660d:	add    BYTE PTR [rax],al
   14000660f:	add    BYTE PTR [rax+rax*1+0x61],dl
   140006613:	add    BYTE PTR [rbx+0x0],dh
   140006616:	imul   eax,DWORD PTR [rax],0x62
   140006619:	add    BYTE PTR [rcx+0x0],ah
   14000661c:	jb     0x14000661e
   14000661e:	rex.XB add BYTE PTR [r10+0x0],sil
   140006622:	add    BYTE PTR gs:[rcx+0x0],ah
   140006626:	je     0x140006628
   140006628:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14000662d:	add    BYTE PTR [rax],al
   14000662f:	add    BYTE PTR [rax],al
   140006631:	xor    eax,DWORD PTR [rax]
   140006633:	rex add DWORD PTR [rax],eax
   140006636:	add    BYTE PTR [rax],al
   140006638:	add    BYTE PTR [rbx],dh
   14000663a:	add    BYTE PTR [rax+0x1],al
   14000663d:	add    BYTE PTR [rax],al
   14000663f:	add    BYTE PTR [rax],al
   140006641:	xor    eax,DWORD PTR [rax]
   140006643:	rex add DWORD PTR [rax],eax
   140006646:	add    BYTE PTR [rax],al
   140006648:	add    BYTE PTR [rbx],dh
   14000664a:	add    BYTE PTR [rax+0x1],al
   14000664d:	add    BYTE PTR [rax],al
   14000664f:	add    BYTE PTR [rax],al
   140006651:	xor    eax,DWORD PTR [rax]
   140006653:	rex add DWORD PTR [rax],eax
   140006656:	add    BYTE PTR [rax],al
   140006658:	adc    BYTE PTR [rax+rax*1+0x40],bl
   14000665c:	add    DWORD PTR [rax],eax
   14000665e:	add    BYTE PTR [rax],al
   140006660:	add    BYTE PTR [rbx],dh
   140006662:	add    BYTE PTR [rax+0x1],al
	...
   14000666d:	add    BYTE PTR [rax],al
   14000666f:	add    BYTE PTR [rip+0x79007300],ah        # 0x1b900d975
   140006675:	add    BYTE PTR [rbx+0x0],dh
   140006678:	je     0x14000667a
   14000667a:	add    BYTE PTR gs:[rbp+0x0],ch
   14000667e:	jb     0x140006680
   140006680:	outs   dx,DWORD PTR ds:[rsi]
   140006681:	add    BYTE PTR [rdi+0x0],ch
   140006684:	je     0x140006686
   140006686:	and    eax,0x73005c00
   14000668b:	add    BYTE PTR [rcx+0x0],bh
   14000668e:	jae    0x140006690
   140006690:	je     0x140006692
   140006692:	add    BYTE PTR gs:[rbp+0x0],ch
   140006696:	xor    eax,DWORD PTR [rax]
   140006698:	xor    al,BYTE PTR [rax]
   14000669a:	pop    rsp
   14000669b:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000669f:	add    BYTE PTR [rbx+0x0],dh
   1400066a2:	imul   eax,DWORD PTR [rax],0x62
   1400066a5:	add    BYTE PTR [rcx+0x0],ah
   1400066a8:	jb     0x1400066aa
   1400066aa:	movsxd eax,DWORD PTR [rax]
   1400066ac:	jo     0x1400066ae
   1400066ae:	ins    BYTE PTR es:[rdi],dx
   1400066af:	add    BYTE PTR [rsi],ch
   1400066b1:	add    BYTE PTR [rax+rax*1+0x6c],ah
   1400066b5:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400066b9:	add    BYTE PTR [rax],al
   1400066bb:	add    BYTE PTR [rax],al
   1400066bd:	add    BYTE PTR [rax],al
   1400066bf:	add    BYTE PTR [rax+0x140001c],dl
   1400066c5:	add    BYTE PTR [rax],al
   1400066c7:	add    BYTE PTR [rax],ah
   1400066c9:	pop    rbp
   1400066ca:	add    BYTE PTR [rax+0x1],al
   1400066cd:	add    BYTE PTR [rax],al
   1400066cf:	add    al,dh
   1400066d1:	sbb    eax,DWORD PTR [rax]
   1400066d3:	rex add DWORD PTR [rax],eax
   1400066d6:	add    BYTE PTR [rax],al
   1400066d8:	lock cmp al,BYTE PTR [rax]
   1400066db:	rex add DWORD PTR [rax],eax
   1400066de:	add    BYTE PTR [rax],al
   1400066e0:	nop
   1400066e1:	sbb    eax,DWORD PTR [rax]
   1400066e3:	rex add DWORD PTR [rax],eax
   1400066e6:	add    BYTE PTR [rax],al
   1400066e8:	(bad)  
   1400066e9:	sbb    eax,DWORD PTR [rax]
   1400066eb:	rex add DWORD PTR [rax],eax
   1400066ee:	add    BYTE PTR [rax],al
   1400066f0:	loopne 0x14000672c
   1400066f2:	add    BYTE PTR [rax+0x1],al
	...
   1400066fd:	add    BYTE PTR [rax],al
   1400066ff:	add    BYTE PTR [rdx+rsi*2+0x69],ah
   140006703:	jbe    0x14000676a
   140006705:	jb     0x14000677a
   140006707:	pop    rsp
   140006708:	ins    DWORD PTR es:[rdi],dx
   140006709:	outs   dx,DWORD PTR ds:[rsi]
   14000670a:	(bad)  
   14000670b:	imul   ebp,DWORD PTR [rbp+riz*2+0x70],0x6f6c5c63
   140006713:	movsxd esp,DWORD PTR [rcx+0x74]
   140006716:	imul   ebp,DWORD PTR [rdi+0x6e],0x766e6f63
   14000671d:	gs jb  0x140006787
   140006720:	outs   dx,BYTE PTR gs:[rsi]
   140006722:	movsxd esp,DWORD PTR [rbp+0x5c]
   140006725:	ja     0x140006790
   140006727:	outs   dx,BYTE PTR ds:[rsi]
   140006728:	outs   dx,BYTE PTR ds:[rsi]
   140006729:	outs   dx,DWORD PTR ds:[rsi]
   14000672a:	je     0x140006795
   14000672c:	imul   sp,WORD PTR [rbx+0x61],0x6974
   140006732:	outs   dx,DWORD PTR ds:[rsi]
   140006733:	outs   dx,BYTE PTR ds:[rsi]
   140006734:	pop    rsp
   140006735:	outs   dx,BYTE PTR ds:[rsi]
   140006736:	outs   dx,DWORD PTR ds:[rsi]
   140006737:	je     0x1400067a2
   140006739:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14000673f:	outs   dx,DWORD PTR ds:[rsi]
   140006740:	outs   dx,BYTE PTR ds:[rsi]
   140006741:	ins    DWORD PTR es:[rdi],dx
   140006742:	(bad)  
   140006743:	outs   dx,BYTE PTR ds:[rsi]
   140006744:	(bad)  
   140006745:	addr32 gs jb 0x140006777
   140006749:	movsxd esi,DWORD PTR [rax+0x70]
   14000674c:	add    BYTE PTR [rax],al
   14000674e:	add    BYTE PTR [rax],al
   140006750:	rex.XB
   140006751:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140006753:	je     0x1400067be
   140006755:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14000675b:	outs   dx,DWORD PTR ds:[rsi]
   14000675c:	outs   dx,BYTE PTR ds:[rsi]
   14000675d:	rex.WRB (bad) 
   14000675f:	outs   dx,BYTE PTR ds:[rsi]
   140006760:	(bad)  
   140006761:	addr32 gs jb 0x14000679f
   140006765:	cmp    dl,BYTE PTR [rbp+0x70]
   140006768:	fs (bad) 
   14000676a:	je     0x1400067d1
   14000676c:	push   rbx
   14000676d:	je     0x1400067d0
   14000676f:	je     0x1400067d6
   140006771:	rex.WRB (bad) 
   140006773:	movsxd ebp,DWORD PTR [rax+0x69]
   140006776:	outs   dx,BYTE PTR ds:[rsi]
   140006777:	add    BYTE PTR gs:[rax],al
   14000677a:	add    BYTE PTR [rax],al
   14000677c:	add    BYTE PTR [rax],al
   14000677e:	add    BYTE PTR [rax],al
   140006780:	rex.RB pop r15
   140006782:	push   rbp
   140006783:	rex.WRX
   140006784:	rex.RB pop r8
   140006786:	push   rax
   140006787:	rex.RB
   140006788:	rex.XB push r12
   14000678a:	rex.RB
   14000678b:	add    BYTE PTR [rax],r8b
   14000678e:	add    BYTE PTR [rax],al
   140006790:	imul   r12d,DWORD PTR [rax+riz*1+0x6e],0x6520746f
   140006799:	js     0x14000680b
   14000679b:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x73]
   1400067a0:	je     0x140006803
   1400067a2:	je     0x140006809
   1400067a4:	cmp    ah,BYTE PTR [rax]
   1400067a6:	and    eax,0x7377
   1400067ab:	add    BYTE PTR [rax],al
   1400067ad:	add    BYTE PTR [rax],al
   1400067af:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300cfb5
   1400067b5:	add    BYTE PTR [rax],al
   1400067b7:	add    BYTE PTR [rax+rax*1+0x4f],cl
   1400067bb:	add    BYTE PTR [rbx+0x0],al
   1400067be:	add    BYTE PTR [r8+rax*1+0x49],dl
   1400067c3:	add    BYTE PTR [rdi+0x0],cl
   1400067c6:	rex.WRX add BYTE PTR [rsi+0x0],r9b
   1400067ca:	rex.WRXB add BYTE PTR [r8+r8*1+0x49],r10b
   1400067cf:	add    BYTE PTR [rsi+0x0],al
   1400067d2:	rex.WB add BYTE PTR [r11+0x0],al
   1400067d6:	add    BYTE PTR [r8+rax*1+0x49],dl
   1400067db:	add    BYTE PTR [rdi+0x0],cl
   1400067de:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   1400067e2:	rex.WRB add BYTE PTR [r13+0x0],r10b
   1400067e6:	push   rsp
   1400067e7:	add    BYTE PTR [rbp+0x0],al
   1400067ea:	pop    rax
   1400067eb:	add    BYTE PTR [rax],al
   1400067ed:	add    BYTE PTR [rax],al
   1400067ef:	add    BYTE PTR [rbx+0x4e],al
   1400067f2:	outs   dx,DWORD PTR ds:[rsi]
   1400067f3:	je     0x14000685e
   1400067f5:	imul   sp,WORD PTR [rbx+0x61],0x6974
   1400067fb:	outs   dx,DWORD PTR ds:[rsi]
   1400067fc:	outs   dx,BYTE PTR ds:[rsi]
   1400067fd:	rex.WRB (bad) 
   1400067ff:	outs   dx,BYTE PTR ds:[rsi]
   140006800:	(bad)  
   140006801:	addr32 gs jb 0x14000683f
   140006805:	cmp    dl,BYTE PTR [rbx+0x68]
   140006808:	outs   dx,DWORD PTR ds:[rsi]
   140006809:	ja     0x140006859
   14000680b:	outs   dx,DWORD PTR ds:[rsi]
   14000680c:	je     0x140006877
   14000680e:	data16 jns 0x14000685a
   140006811:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140006814:	rex.W
   140006815:	gs ins BYTE PTR es:[rdi],dx
   140006817:	jo     0x14000687e
   140006819:	jb     0x14000681b
   14000681b:	add    BYTE PTR [rax],al
   14000681d:	add    BYTE PTR [rax],al
   14000681f:	add    BYTE PTR [rcx],ah
   140006821:	sub    BYTE PTR [rdi+0x69],dh
   140006824:	ins    BYTE PTR es:[rdi],dx
   140006825:	cmp    bh,BYTE PTR [rdx]
   140006827:	jbe    0x14000688e
   140006829:	jb     0x140006894
   14000682b:	data16 jns 0x14000688d
   14000682e:	(bad)  
   14000682f:	outs   dx,DWORD PTR ds:[rsi]
   140006830:	outs   dx,DWORD PTR ds:[rsi]
   140006831:	ins    BYTE PTR es:[rdi],dx
   140006832:	sub    BYTE PTR [rbx+0x68],dl
   140006835:	gs ins BYTE PTR es:[rdi],dx
   140006837:	ins    BYTE PTR es:[rdi],dx
   140006838:	pop    rdi
   140006839:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000683b:	je     0x1400068a6
   14000683d:	data16 jns 0x140006889
   140006840:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140006843:	push   rdi
   140006844:	sub    BYTE PTR [rax],ch
   140006846:	rex.R push rdi
   140006848:	rex.WRXB push r10
   14000684a:	sub    DWORD PTR [rdi+rsi*2+0x4d],r12d
   14000684f:	gs jae 0x1400068c5
   140006852:	(bad)  
   140006853:	addr32 gs sub al,0x20
   140006857:	outs   dx,BYTE PTR es:[rsi]
   140006859:	imul   esp,DWORD PTR [rbx+rdx*2+0x79],0x61727473
   140006861:	jns    0x1400068ac
   140006863:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140006866:	sub    DWORD PTR [rcx],ebp
   140006868:	sub    DWORD PTR [rax],eax
   14000686a:	add    BYTE PTR [rax],al
   14000686c:	add    BYTE PTR [rax],al
   14000686e:	add    BYTE PTR [rax],al
   140006870:	push   rbx
   140006871:	push   0x6e69776f
   140006876:	and    BYTE PTR [eax+ebp*2+0x65],dh
   14000687b:	and    BYTE PTR [rcx+0x63],ch
   14000687e:	outs   dx,DWORD PTR ds:[rsi]
   14000687f:	outs   dx,BYTE PTR ds:[rsi]
	...
   140006888:	adc    BYTE PTR [rbx],dh
   14000688a:	add    BYTE PTR [rax+0x1],al
   14000688d:	add    BYTE PTR [rax],al
   14000688f:	add    al,ah
   140006891:	movabs eax,ds:0xa280000000014000
   14000689a:	add    BYTE PTR [rax+0x1],al
   14000689d:	add    BYTE PTR [rax],al
   14000689f:	add    BYTE PTR [rdi+0x65],ah
   1400068a2:	outs   dx,BYTE PTR ds:[rsi]
   1400068a3:	gs jb  0x14000690f
   1400068a6:	movsxd eax,DWORD PTR [rax]
   1400068a8:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   1400068af:	ins    DWORD PTR es:[rdi],dx
   1400068b0:	add    BYTE PTR [rax],al
   1400068b2:	add    BYTE PTR [rax],al
   1400068b4:	jae    0x14000692f
   1400068b6:	jae    0x14000692c
   1400068b8:	gs ins DWORD PTR es:[rdi],dx
   1400068ba:	add    BYTE PTR [rax],al
   1400068bc:	add    BYTE PTR [rax],al
   1400068be:	add    BYTE PTR [rax],al
   1400068c0:	adc    BYTE PTR [rax],al
   1400068c2:	add    BYTE PTR [rax],dl
   1400068c4:	add    al,0x0
   1400068c6:	add    BYTE PTR [rax],al
   1400068c8:	add    eax,0x0
   1400068cd:	add    BYTE PTR [rax],al
   1400068cf:	xor    BYTE PTR [rbp+0x8],0xbc
   1400068d3:	movabs ds:0x4343555341950821,eax
   1400068dc:	rex.RB
   1400068dd:	rex.RB
   1400068de:	rex.R
   1400068df:	rex.RB
   1400068e0:	sub    BYTE PTR [rsi+0x61],r12b
   1400068e4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x683e2d65
   1400068ec:	jb     0x140006917
   1400068ee:	and    BYTE PTR [rsi],ah
   1400068f0:	and    BYTE PTR es:[rax],ch
   1400068f3:	je     0x14000696e
   1400068f5:	jo     0x14000695c
   1400068f7:	and    BYTE PTR [rcx],ah
   1400068f9:	cmp    eax,0x69614620
   1400068fe:	ins    BYTE PTR es:[rdi],dx
   1400068ff:	jne    0x140006973
   140006901:	gs push rsp
   140006903:	jns    0x140006975
   140006905:	cmp    bh,BYTE PTR gs:[rdx]
   140006908:	rex.RX (bad) 
   14000690a:	imul   ebp,DWORD PTR [rsi+rax*2+0x61],0x297473
   140006912:	add    BYTE PTR [rax],al
   140006914:	add    BYTE PTR [rax],al
   140006916:	add    BYTE PTR [rax],al
   140006918:	ja     0x140006983
   14000691a:	ins    BYTE PTR es:[rdi],dx
   14000691b:	cmp    bh,BYTE PTR [rdx]
   14000691d:	fs gs je 0x140006982
   140006921:	imul   ebp,DWORD PTR [rbx+rsi*2+0x3a],0x676f4c3a
   140006929:	rex.RX (bad) 
   14000692b:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x65
   140006933:	add    BYTE PTR [rax],al
   140006935:	add    BYTE PTR [rax],al
   140006937:	add    BYTE PTR [rcx+0x6e],ch
   14000693a:	je     0x1400069a1
   14000693c:	jb     0x1400069ac
   14000693e:	(bad)  
   14000693f:	ins    BYTE PTR es:[rdi],dx
   140006940:	pop    rsp
   140006941:	jae    0x1400069a7
   140006943:	imul   ebx,DWORD PTR [rcx+rbp*2+0x6e],0x63
   140006948:	pop    rsp
   140006949:	ja     0x1400069b4
   14000694b:	ins    BYTE PTR es:[rdi],dx
   14000694c:	pop    rsp
   14000694d:	push   rdx
   14000694e:	gs jae 0x1400069c6
   140006951:	ins    BYTE PTR es:[rdi],dx
   140006952:	je     0x140006982
   140006954:	push   0x0
   140006959:	add    BYTE PTR [rax],al
   14000695b:	add    BYTE PTR [rax],al
   14000695d:	add    BYTE PTR [rax],al
   14000695f:	add    BYTE PTR [rsi+0x75],ch
   140006962:	ins    BYTE PTR es:[rdi],dx
   140006963:	ins    BYTE PTR es:[rdi],dx
   140006964:	jo     0x1400069da
   140006966:	jb     0x140006988
   140006968:	cmp    eax,0x5f28203d
   14000696d:	push   0x756e654d
   140006972:	and    BYTE PTR [rip+0x616f4c20],bh        # 0x1a16fb598
   140006978:	fs rex.WRB
   14000697a:	outs   dx,BYTE PTR gs:[rsi]
   14000697c:	jne    0x1400069a6
   14000697e:	pop    rdi
   14000697f:	push   0x74736e49
   140006984:	sub    al,0x20
   140006986:	rex.WRB
   140006987:	rex.B
   140006988:	rex.WXB
   140006989:	rex.RB
   14000698a:	rex.WB
   14000698b:	rex.WRX push rsp
   14000698d:	push   rdx
   14000698e:	rex.RB push r11
   140006990:	rex.WRXB push r13
   140006992:	push   rdx
   140006993:	rex.XB
   140006994:	sub    BYTE PTR [r9+0x44],r9b
   140006998:	push   rdx
   140006999:	pop    rdi
   14000699a:	rex.XB
   14000699b:	rex.WRXB
   14000699c:	rex.WRX push rsp
   14000699e:	rex.RB pop r8
   1400069a0:	push   rsp
   1400069a1:	rex.WRB
   1400069a2:	rex.RB
   1400069a3:	rex.WRX push rbp
   1400069a5:	sub    DWORD PTR [rcx],ebp
   1400069a7:	sub    DWORD PTR [rax],eax
   1400069a9:	add    BYTE PTR [rax],al
   1400069ab:	add    BYTE PTR [rax],al
   1400069ad:	add    BYTE PTR [rax],al
   1400069af:	add    BYTE PTR [rbx+0x4e],al
   1400069b2:	outs   dx,DWORD PTR ds:[rsi]
   1400069b3:	je     0x140006a1e
   1400069b5:	imul   sp,WORD PTR [rbx+0x61],0x6974
   1400069bb:	outs   dx,DWORD PTR ds:[rsi]
   1400069bc:	outs   dx,BYTE PTR ds:[rsi]
   1400069bd:	rex.WRB (bad) 
   1400069bf:	outs   dx,BYTE PTR ds:[rsi]
   1400069c0:	(bad)  
   1400069c1:	addr32 gs jb 0x1400069ff
   1400069c5:	cmp    cl,BYTE PTR [rcx+0x6e]
   1400069c8:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
	...
   1400069e0:	pop    rdi
   1400069e1:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400069e3:	movsxd esp,DWORD PTR [rcx+0x74]
   1400069e6:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6349
   1400069ed:	push   rbx
   1400069ee:	je     0x140006a51
   1400069f0:	je     0x140006a57
   1400069f2:	push   rbx
   1400069f3:	jne    0x140006a57
   1400069f5:	jae    0x140006a5a
   1400069f7:	jb     0x140006a62
   1400069f9:	jo     0x140006a6f
   1400069fb:	imul   ebp,DWORD PTR [rdi+0x6e],0x6275532e
   140006a02:	jae    0x140006a67
   140006a04:	jb     0x140006a6f
   140006a06:	(bad)  
   140006a07:	gs push rsp
   140006a09:	outs   dx,DWORD PTR ds:[rsi]
   140006a0a:	push   rdi
   140006a0b:	outs   dx,BYTE PTR ds:[rsi]
   140006a0c:	push   bx
   140006a0e:	je     0x140006a71
   140006a10:	je     0x140006a77
   140006a12:	sub    BYTE PTR [rax],ah
   140006a14:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140006a16:	movsxd edx,DWORD PTR [rdi+0x6e]
   140006a19:	rex.XB outs dx,WORD PTR ds:[rsi]
   140006a1c:	ins    DWORD PTR es:[rdi],dx
   140006a1d:	ins    DWORD PTR es:[rdi],dx
   140006a1e:	outs   dx,DWORD PTR ds:[rsi]
   140006a1f:	outs   dx,BYTE PTR ds:[rsi]
   140006a20:	cmp    bh,BYTE PTR [rdx]
   140006a22:	movsxd esi,DWORD PTR [r13+rsi*2+0x61]
   140006a27:	ins    BYTE PTR es:[rdi],dx
   140006a28:	push   rbx
   140006a29:	je     0x140006a8c
   140006a2b:	je     0x140006a92
   140006a2d:	rex.WRX (bad) 
   140006a2f:	ins    DWORD PTR es:[rdi],dx
   140006a30:	gs push rsp
   140006a32:	outs   dx,DWORD PTR ds:[rsi]
   140006a33:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140006a35:	movsxd ebp,DWORD PTR [rax]
   140006a37:	push   rdi
   140006a38:	rex.WRX
   140006a39:	rex.RX pop rdi
   140006a3b:	rex.WR
   140006a3c:	rex.RX push rbx
   140006a3e:	pop    rdi
   140006a3f:	push   rbx
   140006a40:	push   rsp
   140006a41:	push   r12
   140006a43:	sub    DWORD PTR [r8+riz*1],r13d
   140006a47:	jae    0x140006abd
   140006a49:	cmp    bh,BYTE PTR fs:[rdx]
   140006a4c:	(bad)  
   140006a4d:	imul   ebp,DWORD PTR [rsi+0x64],0x4e432628
   140006a54:	outs   dx,DWORD PTR ds:[rsi]
   140006a55:	je     0x140006ac0
   140006a57:	imul   sp,WORD PTR [rbx+0x61],0x6974
   140006a5d:	outs   dx,DWORD PTR ds:[rsi]
   140006a5e:	outs   dx,BYTE PTR ds:[rsi]
   140006a5f:	rex.WRB (bad) 
   140006a61:	outs   dx,BYTE PTR ds:[rsi]
   140006a62:	(bad)  
   140006a63:	addr32 gs jb 0x140006aa1
   140006a67:	cmp    cl,BYTE PTR [rdi+rbp*2+0x63]
   140006a6b:	(bad)  
   140006a6c:	je     0x140006ad7
   140006a6e:	outs   dx,DWORD PTR ds:[rsi]
   140006a6f:	outs   dx,BYTE PTR ds:[rsi]
   140006a70:	movsxd rbp,DWORD PTR [r15+0x6e]
   140006a74:	push   rbx
   140006a75:	je     0x140006ad8
   140006a77:	je     0x140006ade
   140006a79:	push   rdi
   140006a7a:	outs   dx,BYTE PTR ds:[rsi]
   140006a7b:	data16 rex.RB jbe 0x140006ae4
   140006a7f:	outs   dx,BYTE PTR ds:[rsi]
   140006a80:	je     0x140006aae
   140006a82:	and    BYTE PTR [rax+rbp*2+0x69],dh
   140006a86:	jae    0x140006ab4
   140006a88:	and    BYTE PTR [rbx+0x74],dh
   140006a8b:	cmp    bh,BYTE PTR fs:[rdx]
   140006a8e:	jo     0x140006afc
   140006a90:	(bad)  
   140006a91:	movsxd esp,DWORD PTR [rbp+0x68]
   140006a94:	outs   dx,DWORD PTR ds:[rsi]
   140006a95:	ins    BYTE PTR es:[rdi],dx
   140006a96:	fs gs jb 0x140006b0d
   140006a9a:	cmp    bh,BYTE PTR [rdx]
   140006a9c:	pop    rdi
   140006a9d:	xor    DWORD PTR [rax+riz*1],ebp
   140006aa0:	jae    0x140006b16
   140006aa2:	cmp    bh,BYTE PTR fs:[rdx]
   140006aa5:	jo     0x140006b13
   140006aa7:	(bad)  
   140006aa8:	movsxd esp,DWORD PTR [rbp+0x68]
   140006aab:	outs   dx,DWORD PTR ds:[rsi]
   140006aac:	ins    BYTE PTR es:[rdi],dx
   140006aad:	fs gs jb 0x140006b24
   140006ab1:	cmp    bh,BYTE PTR [rdx]
   140006ab3:	pop    rdi
   140006ab4:	xor    ch,BYTE PTR [rcx]
   140006ab6:	sub    DWORD PTR [rax],eax
	...
   140006ac0:	and    DWORD PTR [rax],ebp
   140006ac2:	ja     0x140006b2d
   140006ac4:	ins    BYTE PTR es:[rdi],dx
   140006ac5:	cmp    bh,BYTE PTR [rdx]
   140006ac7:	jbe    0x140006b2e
   140006ac9:	jb     0x140006b34
   140006acb:	data16 jns 0x140006b2d
   140006ace:	(bad)  
   140006acf:	outs   dx,DWORD PTR ds:[rsi]
   140006ad0:	outs   dx,DWORD PTR ds:[rsi]
   140006ad1:	ins    BYTE PTR es:[rdi],dx
   140006ad2:	sub    BYTE PTR [rdi+rsi*2+0x4d],ah
   140006ad6:	gs jae 0x140006b4c
   140006ad9:	(bad)  
   140006ada:	and    BYTE PTR gs:[eip+0x7830203d],bh        # 0x1b8308b1f
   140006ae2:	xor    BYTE PTR [rax],dh
   140006ae4:	xor    BYTE PTR [rax],dh
   140006ae6:	xor    BYTE PTR [rax],dh
   140006ae8:	xor    BYTE PTR [rax],dh
   140006aea:	and    BYTE PTR [rsp+rdi*2+0x20],bh
   140006aee:	fs ja  0x140006b3e
   140006af1:	gs jae 0x140006b67
   140006af4:	(bad)  
   140006af5:	and    BYTE PTR gs:[eip+0x7830203d],bh        # 0x1b8308b3a
   140006afd:	xor    BYTE PTR [rax],dh
   140006aff:	xor    BYTE PTR [rax],dh
   140006b01:	xor    BYTE PTR [rax],dh
   140006b03:	xor    BYTE PTR [rdx],dh
   140006b05:	sub    DWORD PTR [rcx],ebp
   140006b07:	add    BYTE PTR [rbx+0x4e],al
   140006b0a:	outs   dx,DWORD PTR ds:[rsi]
   140006b0b:	je     0x140006b76
   140006b0d:	imul   sp,WORD PTR [rbx+0x61],0x6974
   140006b13:	outs   dx,DWORD PTR ds:[rsi]
   140006b14:	outs   dx,BYTE PTR ds:[rsi]
   140006b15:	rex.WRB (bad) 
   140006b17:	outs   dx,BYTE PTR ds:[rsi]
   140006b18:	(bad)  
   140006b19:	addr32 gs jb 0x140006b57
   140006b1d:	cmp    dl,BYTE PTR [rbx+0x68]
   140006b20:	outs   dx,DWORD PTR ds:[rsi]
   140006b21:	ja     0x140006b71
   140006b23:	outs   dx,DWORD PTR ds:[rsi]
   140006b24:	je     0x140006b8f
   140006b26:	data16 jns 0x140006b72
   140006b29:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140006b2c:	add    BYTE PTR [rax],al
   140006b2e:	add    BYTE PTR [rax],al
   140006b30:	and    DWORD PTR [rax],ebp
   140006b32:	ja     0x140006b9d
   140006b34:	ins    BYTE PTR es:[rdi],dx
   140006b35:	cmp    bh,BYTE PTR [rdx]
   140006b37:	jbe    0x140006b9e
   140006b39:	jb     0x140006ba4
   140006b3b:	data16 jns 0x140006b9d
   140006b3e:	(bad)  
   140006b3f:	outs   dx,DWORD PTR ds:[rsi]
   140006b40:	outs   dx,DWORD PTR ds:[rsi]
   140006b41:	ins    BYTE PTR es:[rdi],dx
   140006b42:	sub    BYTE PTR [rbx+0x69],cl
   140006b45:	ins    BYTE PTR es:[rdi],dx
   140006b46:	ins    BYTE PTR es:[rdi],dx
   140006b47:	push   rsp
   140006b48:	imul   ebp,DWORD PTR [rbp+0x65],0x685f2872
   140006b4f:	push   rdi
   140006b50:	outs   dx,BYTE PTR ds:[rsi]
   140006b51:	fs sub al,0x20
   140006b54:	rex.WB
   140006b55:	rex.R pop rdi
   140006b57:	push   rsp
   140006b58:	rex.WB
   140006b59:	rex.WRB
   140006b5a:	rex.RB push r10
   140006b5c:	sub    DWORD PTR [rcx],ebp
   140006b5e:	sub    DWORD PTR [rax],eax
   140006b60:	rex.XB
   140006b61:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140006b63:	je     0x140006bce
   140006b65:	imul   sp,WORD PTR [rbx+0x61],0x6974
   140006b6b:	outs   dx,DWORD PTR ds:[rsi]
   140006b6c:	outs   dx,BYTE PTR ds:[rsi]
   140006b6d:	rex.WRB (bad) 
   140006b6f:	outs   dx,BYTE PTR ds:[rsi]
   140006b70:	(bad)  
   140006b71:	addr32 gs jb 0x140006baf
   140006b75:	cmp    dl,BYTE PTR [rcx+rbp*2+0x6d]
   140006b79:	gs jb  0x140006bc1
   140006b7c:	jbe    0x140006be3
   140006b7e:	outs   dx,BYTE PTR ds:[rsi]
   140006b7f:	je     0x140006b81
   140006b81:	add    BYTE PTR [rax],al
   140006b83:	add    BYTE PTR [rsi+0x75],ch
   140006b86:	ins    BYTE PTR es:[rdi],dx
   140006b87:	ins    BYTE PTR es:[rdi],dx
	...
   140006b90:	outs   dx,BYTE PTR ds:[rsi]
   140006b91:	add    BYTE PTR [rbp+0x0],dh
   140006b94:	ins    BYTE PTR es:[rdi],dx
   140006b95:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006b99:	add    BYTE PTR [rax],al
   140006b9b:	add    BYTE PTR [rax],al
   140006b9d:	add    BYTE PTR [rax],al
   140006b9f:	add    BYTE PTR [rdx],ah
   140006ba1:	add    eax,0x41993
   140006ba6:	add    BYTE PTR [rax],al
   140006ba8:	push   rsp
   140006ba9:	mov    DWORD PTR [rax],eax
   140006bab:	add    BYTE PTR [rdx],al
   140006bad:	add    BYTE PTR [rax],al
   140006baf:	add    BYTE PTR [rcx+rcx*4+0x0],dh
   140006bb3:	add    BYTE PTR [rax],cl
   140006bb5:	add    BYTE PTR [rax],al
   140006bb7:	add    ah,al
   140006bb9:	mov    DWORD PTR [rax],eax
   140006bbb:	add    BYTE PTR [rax],ah
   140006bbd:	add    BYTE PTR [rax],al
   140006bbf:	add    BYTE PTR [rax],al
   140006bc1:	add    BYTE PTR [rax],al
   140006bc3:	add    BYTE PTR [rcx],al
   140006bc5:	add    BYTE PTR [rax],al
   140006bc7:	add    BYTE PTR [rdx],ah
   140006bc9:	add    eax,0x31993
   140006bce:	add    BYTE PTR [rax],al
   140006bd0:	jo     0x140006b55
	...
   140006bda:	add    BYTE PTR [rax],al
   140006bdc:	or     al,0x0
   140006bde:	add    BYTE PTR [rax],al
   140006be0:	mov    BYTE PTR [rbx+0x400000],al
   140006be6:	add    BYTE PTR [rax],al
   140006be8:	add    BYTE PTR [rax],al
   140006bea:	add    BYTE PTR [rax],al
   140006bec:	add    DWORD PTR [rax],eax
   140006bee:	add    BYTE PTR [rax],al
   140006bf0:	and    al,BYTE PTR [rip+0x31993]        # 0x140038589
   140006bf6:	add    BYTE PTR [rax],al
   140006bf8:	(bad)
	...
   140006c04:	or     eax,0xdc000000
   140006c09:	(bad)  
   140006c0a:	add    BYTE PTR [rax],al
   140006c0c:	loopne 0x140006c0e
   140006c0e:	add    BYTE PTR [rax],al
   140006c10:	add    BYTE PTR [rax],al
   140006c12:	add    BYTE PTR [rax],al
   140006c14:	add    DWORD PTR [rax],eax
   140006c16:	add    BYTE PTR [rax],al
   140006c18:	and    al,BYTE PTR [rip+0x71993]        # 0x1400785b1
   140006c1e:	add    BYTE PTR [rax],al
   140006c20:	mov    ah,0x81
	...
   140006c2a:	add    BYTE PTR [rax],al
   140006c2c:	adc    al,0x0
   140006c2e:	add    BYTE PTR [rax],al
   140006c30:	in     al,dx
   140006c31:	add    DWORD PTR [rax],0x3800
   140006c37:	add    BYTE PTR [rax],al
   140006c39:	add    BYTE PTR [rax],al
   140006c3b:	add    BYTE PTR [rcx],al
   140006c3d:	add    BYTE PTR [rax],al
   140006c3f:	add    BYTE PTR [rdx],ah
   140006c41:	add    eax,0x11993
   140006c46:	add    BYTE PTR [rax],al
   140006c48:	adc    BYTE PTR [rbp+0x0],al
   140006c4e:	add    BYTE PTR [rax],al
   140006c50:	add    BYTE PTR [rax],al
   140006c52:	add    BYTE PTR [rax],al
   140006c54:	(bad)  
   140006c55:	add    BYTE PTR [rax],al
   140006c57:	add    BYTE PTR [rax],bl
   140006c59:	test   DWORD PTR [rax],eax
   140006c5b:	add    BYTE PTR [rax],bh
   140006c5d:	add    BYTE PTR [rax],al
   140006c5f:	add    BYTE PTR [rax],al
   140006c61:	add    BYTE PTR [rax],al
   140006c63:	add    BYTE PTR [rcx],al
   140006c65:	add    BYTE PTR [rax],al
   140006c67:	add    BYTE PTR [rdx],ah
   140006c69:	add    eax,0x11993
   140006c6e:	add    BYTE PTR [rax],al
   140006c70:	cwde   
   140006c71:	test   DWORD PTR [rax],eax
	...
   140006c7b:	add    BYTE PTR [rip+0xffffffffa0000000],al        # 0xe0006c81
   140006c81:	test   DWORD PTR [rax],eax
   140006c83:	add    BYTE PTR [rax+0x0],ah
   140006c86:	add    BYTE PTR [rax],al
   140006c88:	add    BYTE PTR [rax],al
   140006c8a:	add    BYTE PTR [rax],al
   140006c8c:	add    DWORD PTR [rax],eax
   140006c8e:	add    BYTE PTR [rax],al
   140006c90:	and    al,BYTE PTR [rip+0x31993]        # 0x140038629
   140006c96:	add    BYTE PTR [rax],al
   140006c98:	xor    BYTE PTR [rax+0x0],cl
   140006c9e:	add    BYTE PTR [rax],al
   140006ca0:	add    BYTE PTR [rax],al
   140006ca2:	add    BYTE PTR [rax],al
   140006ca4:	(bad)  
   140006ca5:	add    BYTE PTR [rax],al
   140006ca7:	add    BYTE PTR [rax-0x78],cl
   140006caa:	add    BYTE PTR [rax],al
   140006cac:	and    BYTE PTR [rax],al
   140006cae:	add    BYTE PTR [rax],al
   140006cb0:	add    BYTE PTR [rax],al
   140006cb2:	add    BYTE PTR [rax],al
   140006cb4:	add    DWORD PTR [rax],eax
   140006cb6:	add    BYTE PTR [rax],al
   140006cb8:	and    al,BYTE PTR [rip+0x11993]        # 0x140018651
   140006cbe:	add    BYTE PTR [rax],al
   140006cc0:	enter  0x87,0x0
	...
   140006ccc:	add    eax,DWORD PTR [rax]
   140006cce:	add    BYTE PTR [rax],al
   140006cd0:	rol    BYTE PTR [rdi+0x200000],1
   140006cd6:	add    BYTE PTR [rax],al
   140006cd8:	add    BYTE PTR [rax],al
   140006cda:	add    BYTE PTR [rax],al
   140006cdc:	add    DWORD PTR [rax],eax
   140006cde:	add    BYTE PTR [rax],al
   140006ce0:	add    BYTE PTR [rax],al
   140006ce2:	add    BYTE PTR [rax],al
   140006ce4:	(bad)  
   140006ce5:	cmp    bl,BYTE PTR [rdi+0x55]
   140006ceb:	add    BYTE PTR [rdx],al
   140006ced:	add    BYTE PTR [rax],al
   140006cef:	add    BYTE PTR [rax],bh
   140006cf1:	add    BYTE PTR [rax],al
   140006cf3:	add    BYTE PTR [rax+0x7c],dl
   140006cf6:	add    BYTE PTR [rax],al
   140006cf8:	push   rax
   140006cf9:	jo     0x140006cfb
   140006cfb:	add    BYTE PTR [rax],al
   140006cfd:	add    BYTE PTR [rax],al
   140006cff:	add    BYTE PTR [rdi],dl
   140006d01:	cmp    bl,BYTE PTR [rdi+0x55]
   140006d07:	add    BYTE PTR [rip+0x3c000000],cl        # 0x17c006d0d
   140006d0d:	add    al,0x0
   140006d0f:	add    BYTE PTR [rsp+rdi*2+0x709c0000],bl
	...
   140006d3e:	add    BYTE PTR [rax],al
   140006d40:	movabs al,ds:0x0
	...
   140006d95:	add    BYTE PTR [rax],al
   140006d97:	add    BYTE PTR [rax],cl
   140006d99:	movabs al,ds:0x14000
	...
   140006dae:	add    BYTE PTR [rax],al
   140006db0:	shl    BYTE PTR [rbx+0x0],1
   140006db3:	rex add DWORD PTR [rax],eax
   140006db6:	add    BYTE PTR [rax],al
   140006db8:	fsub   DWORD PTR [rbx+0x0]
   140006dbb:	rex add DWORD PTR [rax],eax
   140006dbe:	add    BYTE PTR [rax],al
   140006dc0:	push   rax
   140006dc1:	add    BYTE PTR fs:[rax+0x1],al
   140006dc5:	add    BYTE PTR [rax],al
   140006dc7:	add    BYTE PTR [rdx],dh
	...
   140006dd1:	xor    eax,0x0
	...
   140006dde:	add    BYTE PTR [rax],al
   140006de0:	ja     0x140006d90
   140006de2:	and    BYTE PTR [rax-0x1d],bh
   140006de5:	and    ebp,DWORD PTR [rcx]
   140006de7:	rex.X (bad) 
   140006de9:	shl    esp,0x1c
   140006dec:	mov    dh,0x7d
   140006dee:	pop    rbx
   140006def:	pushf  
   140006df0:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140006df4:	je     0x140006df6
   140006df6:	imul   eax,DWORD PTR [rax],0x690066
   140006dfc:	movsxd eax,DWORD PTR [rax]
   140006dfe:	(bad)  
   140006dff:	add    BYTE PTR [rax+rax*1+0x69],dh
   140006e03:	add    BYTE PTR [rdi+0x0],ch
   140006e06:	outs   dx,BYTE PTR ds:[rsi]
   140006e07:	add    BYTE PTR [rbx+0x0],dl
   140006e0a:	je     0x140006e0c
   140006e0c:	(bad)  
   140006e0d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140006e11:	add    BYTE PTR [rbp+0x0],al
   140006e14:	jbe    0x140006e16
   140006e16:	add    BYTE PTR gs:[rsi+0x0],ch
   140006e1a:	je     0x140006e1c
   140006e1c:	cmp    al,BYTE PTR [rax]
   140006e1e:	cmp    al,BYTE PTR [rax]
   140006e20:	add    BYTE PTR [r8+rax*1+0x64],spl
   140006e25:	add    BYTE PTR [rcx+0x0],cl
   140006e28:	movsxd eax,DWORD PTR [rax]
   140006e2a:	outs   dx,DWORD PTR ds:[rsi]
   140006e2b:	add    BYTE PTR [rsi+0x0],ch
   140006e2e:	add    BYTE PTR [rax],al
   140006e30:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140006e34:	je     0x140006e36
   140006e36:	imul   eax,DWORD PTR [rax],0x690066
   140006e3c:	movsxd eax,DWORD PTR [rax]
   140006e3e:	(bad)  
   140006e3f:	add    BYTE PTR [rax+rax*1+0x69],dh
   140006e43:	add    BYTE PTR [rdi+0x0],ch
   140006e46:	outs   dx,BYTE PTR ds:[rsi]
   140006e47:	add    BYTE PTR [rbx+0x0],dl
   140006e4a:	je     0x140006e4c
   140006e4c:	(bad)  
   140006e4d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140006e51:	add    BYTE PTR [rbp+0x0],al
   140006e54:	jbe    0x140006e56
   140006e56:	add    BYTE PTR gs:[rsi+0x0],ch
   140006e5a:	je     0x140006e5c
   140006e5c:	cmp    al,BYTE PTR [rax]
   140006e5e:	cmp    al,BYTE PTR [rax]
   140006e60:	add    BYTE PTR [rbp+0x0],r12b
   140006e64:	ins    BYTE PTR es:[rdi],dx
   140006e65:	add    BYTE PTR [rbp+0x0],ah
   140006e68:	je     0x140006e6a
   140006e6a:	add    BYTE PTR gs:[rcx+0x0],cl
   140006e6e:	movsxd eax,DWORD PTR [rax]
   140006e70:	outs   dx,DWORD PTR ds:[rsi]
   140006e71:	add    BYTE PTR [rsi+0x0],ch
   140006e74:	add    BYTE PTR [rax],al
   140006e76:	add    BYTE PTR [rax],al
   140006e78:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140006e7c:	je     0x140006e7e
   140006e7e:	imul   eax,DWORD PTR [rax],0x690066
   140006e84:	movsxd eax,DWORD PTR [rax]
   140006e86:	(bad)  
   140006e87:	add    BYTE PTR [rax+rax*1+0x69],dh
   140006e8b:	add    BYTE PTR [rdi+0x0],ch
   140006e8e:	outs   dx,BYTE PTR ds:[rsi]
   140006e8f:	add    BYTE PTR [rbx+0x0],dl
   140006e92:	je     0x140006e94
   140006e94:	(bad)  
   140006e95:	add    BYTE PTR [rax+rax*1+0x65],dh
   140006e99:	add    BYTE PTR [rbp+0x0],al
   140006e9c:	jbe    0x140006e9e
   140006e9e:	add    BYTE PTR gs:[rsi+0x0],ch
   140006ea2:	je     0x140006ea4
   140006ea4:	cmp    al,BYTE PTR [rax]
   140006ea6:	cmp    al,BYTE PTR [rax]
   140006ea8:	push   rsp
   140006ea9:	add    BYTE PTR [rcx+0x0],ch
   140006eac:	ins    DWORD PTR es:[rdi],dx
   140006ead:	add    BYTE PTR [rbp+0x0],ah
   140006eb0:	jb     0x140006eb2
	...
   140006ebe:	add    BYTE PTR [rax],al
   140006ec0:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140006ec4:	je     0x140006ec6
   140006ec6:	imul   eax,DWORD PTR [rax],0x690066
   140006ecc:	movsxd eax,DWORD PTR [rax]
   140006ece:	(bad)  
   140006ecf:	add    BYTE PTR [rax+rax*1+0x69],dh
   140006ed3:	add    BYTE PTR [rdi+0x0],ch
   140006ed6:	outs   dx,BYTE PTR ds:[rsi]
   140006ed7:	add    BYTE PTR [rbx+0x0],dl
   140006eda:	je     0x140006edc
   140006edc:	(bad)  
   140006edd:	add    BYTE PTR [rax+rax*1+0x65],dh
   140006ee1:	add    BYTE PTR [rbp+0x0],al
   140006ee4:	jbe    0x140006ee6
   140006ee6:	add    BYTE PTR gs:[rsi+0x0],ch
   140006eea:	je     0x140006eec
   140006eec:	cmp    al,BYTE PTR [rax]
   140006eee:	cmp    al,BYTE PTR [rax]
   140006ef0:	push   rsp
   140006ef1:	add    BYTE PTR [rcx+0x0],ah
   140006ef4:	jae    0x140006ef6
   140006ef6:	imul   eax,DWORD PTR [rax],0x62
   140006ef9:	add    BYTE PTR [rcx+0x0],ah
   140006efc:	jb     0x140006efe
   140006efe:	rex.XB add BYTE PTR [r10+0x0],sil
   140006f02:	add    BYTE PTR gs:[rcx+0x0],ah
   140006f06:	je     0x140006f08
   140006f08:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   140006f0d:	add    BYTE PTR [rax],al
   140006f0f:	add    BYTE PTR [rsi+0x0],cl
   140006f12:	outs   dx,DWORD PTR ds:[rsi]
   140006f13:	add    BYTE PTR [rax+rax*1+0x69],dh
   140006f17:	add    BYTE PTR [rsi+0x0],ah
   140006f1a:	imul   eax,DWORD PTR [rax],0x610063
   140006f20:	je     0x140006f22
   140006f22:	imul   eax,DWORD PTR [rax],0x6e006f
   140006f28:	push   rbx
   140006f29:	add    BYTE PTR [rax+rax*1+0x61],dh
   140006f2d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140006f31:	add    BYTE PTR [rcx+0x0],al
   140006f34:	movsxd eax,DWORD PTR [rax]
   140006f36:	je     0x140006f38
   140006f38:	imul   eax,DWORD PTR [rax],0x6e006f
   140006f3e:	cmp    al,BYTE PTR [rax]
   140006f40:	cmp    al,BYTE PTR [rax]
   140006f42:	add    BYTE PTR [rdi+0x0],r13b
   140006f46:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140006f4a:	je     0x140006f4c
   140006f4c:	push   0x6e006900
   140006f51:	add    BYTE PTR [rdi+0x0],ah
	...
   140006f60:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140006f64:	je     0x140006f66
   140006f66:	imul   eax,DWORD PTR [rax],0x690066
   140006f6c:	movsxd eax,DWORD PTR [rax]
   140006f6e:	(bad)  
   140006f6f:	add    BYTE PTR [rax+rax*1+0x69],dh
   140006f73:	add    BYTE PTR [rdi+0x0],ch
   140006f76:	outs   dx,BYTE PTR ds:[rsi]
   140006f77:	add    BYTE PTR [rbx+0x0],dl
   140006f7a:	je     0x140006f7c
   140006f7c:	(bad)  
   140006f7d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140006f81:	add    BYTE PTR [rcx+0x0],al
   140006f84:	movsxd eax,DWORD PTR [rax]
   140006f86:	je     0x140006f88
   140006f88:	imul   eax,DWORD PTR [rax],0x6e006f
   140006f8e:	cmp    al,BYTE PTR [rax]
   140006f90:	cmp    al,BYTE PTR [rax]
   140006f92:	push   rbx
   140006f93:	add    BYTE PTR [rax+0x0],ch
   140006f96:	outs   dx,DWORD PTR ds:[rsi]
   140006f97:	add    BYTE PTR [rdi+0x0],dh
   140006f9a:	rex.WB add BYTE PTR [r11+0x0],spl
   140006f9e:	outs   dx,DWORD PTR ds:[rsi]
   140006f9f:	add    BYTE PTR [rsi+0x0],ch
	...
   140006fae:	add    BYTE PTR [rax],al
   140006fb0:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140006fb4:	je     0x140006fb6
   140006fb6:	imul   eax,DWORD PTR [rax],0x690066
   140006fbc:	movsxd eax,DWORD PTR [rax]
   140006fbe:	(bad)  
   140006fbf:	add    BYTE PTR [rax+rax*1+0x69],dh
   140006fc3:	add    BYTE PTR [rdi+0x0],ch
   140006fc6:	outs   dx,BYTE PTR ds:[rsi]
   140006fc7:	add    BYTE PTR [rbx+0x0],dl
   140006fca:	je     0x140006fcc
   140006fcc:	(bad)  
   140006fcd:	add    BYTE PTR [rax+rax*1+0x65],dh
   140006fd1:	add    BYTE PTR [rcx+0x0],al
   140006fd4:	movsxd eax,DWORD PTR [rax]
   140006fd6:	je     0x140006fd8
   140006fd8:	imul   eax,DWORD PTR [rax],0x6e006f
   140006fde:	cmp    al,BYTE PTR [rax]
   140006fe0:	cmp    al,BYTE PTR [rax]
   140006fe2:	rex.W add BYTE PTR [rcx+0x0],bpl
   140006fe6:	add    BYTE PTR fs:[rbp+0x0],ah
   140006fea:	rex.WB add BYTE PTR [r11+0x0],spl
   140006fee:	outs   dx,DWORD PTR ds:[rsi]
   140006fef:	add    BYTE PTR [rsi+0x0],ch
   140006ff2:	add    BYTE PTR [rax],al
   140006ff4:	add    BYTE PTR [rax],al
   140006ff6:	add    BYTE PTR [rax],al
   140006ff8:	adc    BYTE PTR [rdi+0x0],ch
   140006ffb:	rex add DWORD PTR [rax],eax
   140006ffe:	add    BYTE PTR [rax],al
   140007000:	(bad)  
   140007001:	outs   dx,DWORD PTR ds:[rsi]
   140007002:	add    BYTE PTR [rax+0x1],al
   140007005:	add    BYTE PTR [rax],al
   140007007:	add    BYTE PTR [rax+0x140006f],dh
   14000700d:	add    BYTE PTR [rax],al
   14000700f:	add    al,dh
   140007011:	ins    DWORD PTR es:[rdi],dx
   140007012:	add    BYTE PTR [rax+0x1],al
   140007015:	add    BYTE PTR [rax],al
   140007017:	add    BYTE PTR [rax],dh
   140007019:	outs   dx,BYTE PTR ds:[rsi]
   14000701a:	add    BYTE PTR [rax+0x1],al
   14000701d:	add    BYTE PTR [rax],al
   14000701f:	add    BYTE PTR [rax+0x6e],bh
   140007022:	add    BYTE PTR [rax+0x1],al
   140007025:	add    BYTE PTR [rax],al
   140007027:	add    al,al
   140007029:	outs   dx,BYTE PTR ds:[rsi]
   14000702a:	add    BYTE PTR [rax+0x1],al
   14000702d:	add    BYTE PTR [rax],al
   14000702f:	add    BYTE PTR [rsi+0x0],cl
   140007032:	outs   dx,DWORD PTR ds:[rsi]
   140007033:	add    BYTE PTR [rax+rax*1+0x69],dh
   140007037:	add    BYTE PTR [rsi+0x0],ah
   14000703a:	imul   eax,DWORD PTR [rax],0x610063
   140007040:	je     0x140007042
   140007042:	imul   eax,DWORD PTR [rax],0x6e006f
   140007048:	push   rbx
   140007049:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000704d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140007051:	add    BYTE PTR [rdx],bh
   140007053:	add    BYTE PTR [rdx],bh
   140007055:	add    BYTE PTR [rsi+0x0],cl
   140007058:	outs   dx,DWORD PTR ds:[rsi]
   140007059:	add    BYTE PTR [rax+rax*1+0x53],dh
   14000705d:	add    BYTE PTR [rax+rax*1+0x61],dh
   140007061:	add    BYTE PTR [rdx+0x0],dh
   140007064:	je     0x140007066
   140007066:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14000706b:	add    BYTE PTR [rax],al
   14000706d:	add    BYTE PTR [rax],al
   14000706f:	add    BYTE PTR [rsi+0x0],cl
   140007072:	outs   dx,DWORD PTR ds:[rsi]
   140007073:	add    BYTE PTR [rax+rax*1+0x69],dh
   140007077:	add    BYTE PTR [rsi+0x0],ah
   14000707a:	imul   eax,DWORD PTR [rax],0x610063
   140007080:	je     0x140007082
   140007082:	imul   eax,DWORD PTR [rax],0x6e006f
   140007088:	push   rbx
   140007089:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000708d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140007091:	add    BYTE PTR [rdx],bh
   140007093:	add    BYTE PTR [rdx],bh
   140007095:	add    BYTE PTR [rcx+0x0],cl
   140007098:	movsxd eax,DWORD PTR [rax]
   14000709a:	outs   dx,DWORD PTR ds:[rsi]
   14000709b:	add    BYTE PTR [rsi+0x0],ch
   14000709e:	push   rbx
   14000709f:	add    BYTE PTR [rax+0x0],ch
   1400070a2:	outs   dx,DWORD PTR ds:[rsi]
   1400070a3:	add    BYTE PTR [rdi+0x0],dh
   1400070a6:	imul   eax,DWORD PTR [rax],0x67006e
   1400070ac:	push   rsp
   1400070ad:	add    BYTE PTR [rcx+0x0],ch
   1400070b0:	ins    DWORD PTR es:[rdi],dx
   1400070b1:	add    BYTE PTR [rbp+0x0],ah
   1400070b4:	jb     0x1400070b6
   1400070b6:	push   rbx
   1400070b7:	add    BYTE PTR [rax+0x0],ch
   1400070ba:	outs   dx,DWORD PTR ds:[rsi]
   1400070bb:	add    BYTE PTR [rbp+0x0],dh
   1400070be:	ins    BYTE PTR es:[rdi],dx
   1400070bf:	add    BYTE PTR [rax+rax*1+0x4e],ah
   1400070c3:	add    BYTE PTR [rdi+0x0],ch
   1400070c6:	je     0x1400070c8
   1400070c8:	add    BYTE PTR [rbp+0x0],r12b
   1400070cc:	ins    BYTE PTR es:[rdi],dx
   1400070cd:	add    BYTE PTR [rbp+0x0],ah
   1400070d0:	je     0x1400070d2
   1400070d2:	add    BYTE PTR gs:[rax],al
	...
   1400070dd:	add    BYTE PTR [rax],al
   1400070df:	add    BYTE PTR [rsi+0x0],cl
   1400070e2:	outs   dx,DWORD PTR ds:[rsi]
   1400070e3:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400070e7:	add    BYTE PTR [rsi+0x0],ah
   1400070ea:	imul   eax,DWORD PTR [rax],0x610063
   1400070f0:	je     0x1400070f2
   1400070f2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400070f8:	push   rbx
   1400070f9:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400070fd:	add    BYTE PTR [rax+rax*1+0x65],dh
   140007101:	add    BYTE PTR [rdx],bh
   140007103:	add    BYTE PTR [rdx],bh
   140007105:	add    BYTE PTR [rcx+0x0],cl
   140007108:	movsxd eax,DWORD PTR [rax]
   14000710a:	outs   dx,DWORD PTR ds:[rsi]
   14000710b:	add    BYTE PTR [rsi+0x0],ch
   14000710e:	push   rbx
   14000710f:	add    BYTE PTR [rax+0x0],ch
   140007112:	outs   dx,DWORD PTR ds:[rsi]
   140007113:	add    BYTE PTR [rdi+0x0],dh
   140007116:	imul   eax,DWORD PTR [rax],0x67006e
   14000711c:	push   rsp
   14000711d:	add    BYTE PTR [rcx+0x0],ch
   140007120:	ins    DWORD PTR es:[rdi],dx
   140007121:	add    BYTE PTR [rbp+0x0],ah
   140007124:	jb     0x140007126
   140007126:	push   rbx
   140007127:	add    BYTE PTR [rax+0x0],ch
   14000712a:	outs   dx,DWORD PTR ds:[rsi]
   14000712b:	add    BYTE PTR [rbp+0x0],dh
   14000712e:	ins    BYTE PTR es:[rdi],dx
   14000712f:	add    BYTE PTR [rax+rax*1+0x44],ah
   140007133:	add    BYTE PTR [rbp+0x0],ah
   140007136:	ins    BYTE PTR es:[rdi],dx
   140007137:	add    BYTE PTR [rbp+0x0],ah
   14000713a:	je     0x14000713c
   14000713c:	add    BYTE PTR gs:[rax],al
   14000713f:	add    BYTE PTR [rsi+0x0],cl
   140007142:	outs   dx,DWORD PTR ds:[rsi]
   140007143:	add    BYTE PTR [rax+rax*1+0x69],dh
   140007147:	add    BYTE PTR [rsi+0x0],ah
   14000714a:	imul   eax,DWORD PTR [rax],0x610063
   140007150:	je     0x140007152
   140007152:	imul   eax,DWORD PTR [rax],0x6e006f
   140007158:	push   rbx
   140007159:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000715d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140007161:	add    BYTE PTR [rdx],bh
   140007163:	add    BYTE PTR [rdx],bh
   140007165:	add    BYTE PTR [rcx+0x0],cl
   140007168:	movsxd eax,DWORD PTR [rax]
   14000716a:	outs   dx,DWORD PTR ds:[rsi]
   14000716b:	add    BYTE PTR [rsi+0x0],ch
   14000716e:	push   rbx
   14000716f:	add    BYTE PTR [rax+0x0],ch
   140007172:	outs   dx,DWORD PTR ds:[rsi]
   140007173:	add    BYTE PTR [rdi+0x0],dh
   140007176:	imul   eax,DWORD PTR [rax],0x67006e
   14000717c:	push   rsp
   14000717d:	add    BYTE PTR [rcx+0x0],ch
   140007180:	ins    DWORD PTR es:[rdi],dx
   140007181:	add    BYTE PTR [rbp+0x0],ah
   140007184:	jb     0x140007186
   140007186:	add    BYTE PTR [rdi+0x0],r13b
   14000718a:	outs   dx,BYTE PTR ds:[rsi]
   14000718b:	add    BYTE PTR [rbp+0x0],ah
   14000718e:	add    BYTE PTR [rax],al
   140007190:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140007194:	je     0x140007196
   140007196:	imul   eax,DWORD PTR [rax],0x690066
   14000719c:	movsxd eax,DWORD PTR [rax]
   14000719e:	(bad)  
   14000719f:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400071a3:	add    BYTE PTR [rdi+0x0],ch
   1400071a6:	outs   dx,BYTE PTR ds:[rsi]
   1400071a7:	add    BYTE PTR [rbx+0x0],dl
   1400071aa:	je     0x1400071ac
   1400071ac:	(bad)  
   1400071ad:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400071b1:	add    BYTE PTR [rdx],bh
   1400071b3:	add    BYTE PTR [rdx],bh
   1400071b5:	add    BYTE PTR [rax+rax*1+0x6f],cl
   1400071b9:	add    BYTE PTR [rbx+0x0],ah
   1400071bc:	(bad)  
   1400071bd:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400071c1:	add    BYTE PTR [rdi+0x0],ch
   1400071c4:	outs   dx,BYTE PTR ds:[rsi]
   1400071c5:	add    BYTE PTR [rbp+0x0],dl
   1400071c8:	jae    0x1400071ca
   1400071ca:	(bad)  
   1400071cb:	add    BYTE PTR [rdi+0x0],ah
   1400071ce:	add    BYTE PTR gs:[rbx+0x0],dl
   1400071d2:	je     0x1400071d4
   1400071d4:	outs   dx,DWORD PTR ds:[rsi]
   1400071d5:	add    BYTE PTR [rax+0x0],dh
   1400071d8:	jo     0x1400071da
   1400071da:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   1400071df:	add    BYTE PTR [rax],dh
   1400071e1:	jo     0x1400071e3
   1400071e3:	rex add DWORD PTR [rax],eax
   1400071e6:	add    BYTE PTR [rax],al
   1400071e8:	jo     0x14000725a
   1400071ea:	add    BYTE PTR [rax+0x1],al
   1400071ed:	add    BYTE PTR [rax],al
   1400071ef:	add    al,ah
   1400071f1:	jo     0x1400071f3
   1400071f3:	rex add DWORD PTR [rax],eax
   1400071f6:	add    BYTE PTR [rax],al
   1400071f8:	rex jno 0x1400071fb
   1400071fb:	rex add DWORD PTR [rax],eax
   1400071fe:	add    BYTE PTR [rax],al
   140007200:	nop
   140007201:	jno    0x140007203
   140007203:	rex add DWORD PTR [rax],eax
   140007206:	add    BYTE PTR [rax],al
   140007208:	rex.RB push r12
   14000720a:	push   rdi
   14000720b:	xor    BYTE PTR [rax],dl
   14000720d:	add    BYTE PTR [rax],al
   14000720f:	add    DWORD PTR [rsi+0x2b88040e],eax
   140007215:	add    eax,0xb03bb8a
   14000721a:	add    eax,0x0
   14000721f:	add    BYTE PTR [rax],al
   140007221:	add    BYTE PTR [rax],al
   140007223:	add    BYTE PTR [rip+0x63490000],ch        # 0x1a3497229
   140007229:	outs   dx,DWORD PTR ds:[rsi]
   14000722a:	outs   dx,BYTE PTR ds:[rsi]
   14000722b:	push   rsp
   14000722c:	(bad)  
   14000722d:	jae    0x14000729a
   14000722f:	(bad)  
   140007231:	jb     0x140007276
   140007233:	jb     0x14000729a
   140007235:	(bad)  
   140007236:	je     0x14000729d
   140007238:	add    BYTE PTR fs:[rcx+0x63],al
   14000723c:	je     0x1400072a7
   14000723e:	outs   dx,DWORD PTR ds:[rsi]
   14000723f:	outs   dx,BYTE PTR ds:[rsi]
   140007240:	add    BYTE PTR [rdx],al
   140007242:	rex.XB jne 0x1400072b7
   140007245:	jb     0x1400072ac
   140007247:	outs   dx,BYTE PTR ds:[rsi]
   140007248:	je     0x14000726a
   14000724a:	jae    0x1400072c0
   14000724c:	(bad)  
   14000724d:	je     0x1400072b4
   14000724f:	add    BYTE PTR [rcx],al
   140007251:	add    ecx,DWORD PTR [rbx]
   140007253:	add    eax,0x0
   140007258:	add    BYTE PTR [rax],al
   14000725a:	add    BYTE PTR [rax],al
   14000725c:	add    BYTE PTR [rsi+0x0],bl
   14000725f:	add    BYTE PTR [rcx+0x63],cl
   140007262:	outs   dx,DWORD PTR ds:[rsi]
   140007263:	outs   dx,BYTE PTR ds:[rsi]
   140007264:	push   rbp
   140007265:	jo     0x1400072cb
   140007267:	(bad)  
   140007268:	je     0x1400072d3
   14000726a:	outs   dx,BYTE PTR ds:[rsi]
   14000726b:	addr32 push rbx
   14000726d:	je     0x1400072d0
   14000726f:	je     0x1400072d6
   140007271:	rex.WRB (bad) 
   140007273:	movsxd ebp,DWORD PTR [rax+0x69]
   140007276:	outs   dx,BYTE PTR ds:[rsi]
   140007277:	add    BYTE PTR gs:[rbp+0x76],al
   14000727b:	outs   dx,BYTE PTR gs:[rsi]
   14000727d:	je     0x14000729f
   14000727f:	push   rsp
   140007280:	push   0x48207461
   140007285:	(bad)  
   140007286:	jo     0x1400072f8
   140007288:	outs   dx,BYTE PTR gs:[rsi]
   14000728a:	gs add BYTE PTR fs:[rcx],al
   14000728e:	rex.WRXB jb 0x1400072fa
   140007291:	imul   ebp,DWORD PTR [esi+0x61],0x7473206c
   140007299:	(bad)  
   14000729a:	je     0x140007301
   14000729c:	add    BYTE PTR [rcx],al
   14000729e:	push   rbp
   14000729f:	jo     0x140007305
   1400072a1:	(bad)  
   1400072a2:	je     0x140007309
   1400072a4:	and    BYTE PTR fs:[rbx+0x74],dh
   1400072a8:	(bad)  
   1400072a9:	je     0x140007310
   1400072ab:	add    BYTE PTR [rcx],al
   1400072ad:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   1400072b2:	outs   dx,BYTE PTR ds:[rsi]
   1400072b3:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   1400072b7:	outs   dx,DWORD PTR fs:[rsi]
   1400072b9:	add    BYTE PTR [rcx],al
   1400072bb:	add    ecx,DWORD PTR [rbx]
   1400072bd:	add    eax,0x0
   1400072c2:	add    BYTE PTR [rax],al
   1400072c4:	add    BYTE PTR [rax],al
   1400072c7:	rex.WRXB add BYTE PTR [r8],r8b
   1400072ca:	rex.RX (bad) 
   1400072cc:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x676f4c65
   1400072d4:	push   rdx
   1400072d5:	gs jo  0x140007347
   1400072d8:	jb     0x14000734e
   1400072da:	add    BYTE PTR [rax+0x52],cl
   1400072dd:	add    BYTE PTR [rdi+0x7375430f],al
   1400072e3:	je     0x140007354
   1400072e5:	ins    DWORD PTR es:[rdi],dx
   1400072e6:	rex.WRB
   1400072e7:	gs jae 0x14000735d
   1400072ea:	(bad)  
   1400072eb:	add    BYTE PTR gs:[ecx],al
   1400072ef:	rex.RX jne 0x140007360
   1400072f2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400072f6:	outs   dx,BYTE PTR ds:[rsi]
   1400072f7:	add    BYTE PTR [rdx],al
   1400072f9:	rex.XB (bad) 
   1400072fb:	ins    BYTE PTR es:[rdi],dx
   1400072fc:	ins    BYTE PTR es:[rdi],dx
   1400072fd:	imul   ebp,DWORD PTR [rsi+0x67],0x65646f43
   140007304:	add    BYTE PTR [rdx],al
   140007306:	imul   r13d,DWORD PTR [rbp+r12*2+0x6e],0x656d61
   14000730f:	add    cl,BYTE PTR [rcx+rbp*2+0x6e]
   140007313:	add    BYTE PTR gs:[rax],cl
   140007316:	add    al,0xe8
   140007318:	mov    ebp,0x86e889df
   14000731d:	fwait
   14000731e:	cdqe   
   140007320:	addr32 out dx,al
   140007322:	std    
   140007323:	(bad)
   140007326:	fwait
   140007327:	xor    eax,DWORD PTR [rax]
   140007329:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140007331:	je     0x140007361
   140007333:	rex.RXB
   140007334:	outs   dx,DWORD PTR gs:[rsi]
   140007336:	ins    BYTE PTR es:[rdi],dx
   140007337:	outs   dx,DWORD PTR ds:[rsi]
   140007338:	movsxd esp,DWORD PTR [rcx+0x74]
   14000733b:	imul   ebp,DWORD PTR [rdi+0x6e],0x7265532e
   140007342:	jbe    0x1400073ad
   140007344:	movsxd esp,DWORD PTR [rbp+0x0]
   140007347:	adc    eax,DWORD PTR [rax]
   140007349:	add    DWORD PTR [rdx],ebx
   14000734b:	jae    0x14000739d
   14000734d:	rex.WRXB iretq 
   14000734f:	mov    DWORD PTR [rdx-0x231f4cb9],eax
   140007355:	call   0xfa767823
   14000735a:	add    DWORD PTR [rax],eax
   14000735c:	add    BYTE PTR [rax],al
   14000735e:	add    BYTE PTR [rax],al
   140007360:	outs   dx,BYTE PTR ds:[rsi]
   140007361:	add    BYTE PTR [rax+rax*1+0x64],dh
   140007365:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140007369:	add    BYTE PTR [rsi],ch
   14000736b:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000736f:	add    BYTE PTR [rax+rax*1+0x0],ch
   140007373:	add    BYTE PTR [rax],al
   140007375:	add    BYTE PTR [rax],al
   140007377:	add    BYTE PTR [rsp+riz*2+0x72],cl
   14000737b:	rex.RX (bad) 
   14000737d:	jae    0x1400073f3
   14000737f:	rex.RX (bad) 
   140007381:	imul   ebp,DWORD PTR [rcx+rcx*2+0x6e],0x64616f4c
   140007389:	gs jb  0x1400073cf
   14000738c:	(bad)  
   14000738d:	ins    BYTE PTR es:[rdi],dx
   14000738e:	ins    BYTE PTR es:[rdi],dx
   14000738f:	outs   dx,DWORD PTR ds:[rsi]
   140007390:	jne    0x140007406
   140007392:	add    BYTE PTR [rax],al
   140007394:	add    BYTE PTR [rax],al
   140007396:	add    BYTE PTR [rax],al
   140007398:	push   rdx
   140007399:	je     0x140007407
   14000739b:	rex.WRX je 0x1400073f1
   14000739e:	je     0x140007401
   1400073a0:	je     0x140007417
   1400073a2:	jae    0x1400073f8
   1400073a4:	outs   dx,DWORD PTR ds:[rsi]
   1400073a5:	rex.R outs dx,DWORD PTR ds:[rsi]
   1400073a7:	jae    0x1400073ee
   1400073a9:	jb     0x14000741d
   1400073ab:	outs   dx,DWORD PTR ds:[rsi]
   1400073ac:	jb     0x1400073fc
   1400073ae:	outs   dx,DWORD PTR ds:[rsi]
   1400073af:	push   rsp
   1400073b0:	gs (bad) 
   1400073b2:	add    BYTE PTR [rax],al
   1400073b4:	add    BYTE PTR [rax],al
   1400073b6:	add    BYTE PTR [rax],al
   1400073b8:	jne    0x140007428
   1400073ba:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   1400073be:	outs   dx,BYTE PTR ds:[rsi]
   1400073bf:	and    BYTE PTR [rbp+0x72],ah
   1400073c2:	jb     0x140007433
   1400073c4:	jb     0x1400073c6
   1400073c6:	add    BYTE PTR [rax],al
   1400073c8:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   1400073cf:	ins    DWORD PTR es:[rdi],dx
   1400073d0:	and    BYTE PTR [rbx+0x74],dh
   1400073d3:	jb     0x14000743a
   1400073d5:	(bad)  
   1400073d6:	ins    DWORD PTR es:[rdi],dx
   1400073d7:	and    BYTE PTR [rbp+0x72],ah
   1400073da:	jb     0x14000744b
   1400073dc:	jb     0x1400073de
   1400073de:	add    BYTE PTR [rax],al
   1400073e0:	jae    0x140007456
   1400073e2:	jb     0x14000744d
   1400073e4:	outs   dx,BYTE PTR ds:[rsi]
   1400073e5:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   1400073ea:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   1400073ee:	add    BYTE PTR [ecx+0x6e],ch
   1400073f2:	jbe    0x140007455
   1400073f4:	ins    BYTE PTR es:[rdi],dx
   1400073f5:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   1400073fd:	and    BYTE PTR [eax+0x6f],dh
   140007401:	jae    0x14000746c
   140007403:	je     0x14000746e
   140007405:	outs   dx,DWORD PTR ds:[rsi]
   140007406:	outs   dx,BYTE PTR ds:[rsi]
   140007407:	add    BYTE PTR [rsi+0x75],ch
   14000740a:	ins    BYTE PTR es:[rdi],dx
   14000740b:	ins    BYTE PTR es:[rdi],dx
   14000740c:	jo     0x140007482
   14000740e:	jb     0x140007430
   140007410:	cmp    eax,0x4d68203d
   140007415:	jne    0x14000748b
   140007417:	gs js  0x140007448
   14000741a:	ins    DWORD PTR es:[rdi],dx
   14000741b:	pop    rdi
   14000741c:	push   0x57000000
   140007421:	imul   ebp,DWORD PTR [rsi+0x4d],0x6e6961
	...
   140007430:	fs jb  0x14000749c
   140007433:	jbe    0x14000749a
   140007435:	jb     0x1400074aa
   140007437:	pop    rsp
   140007438:	ins    DWORD PTR es:[rdi],dx
   140007439:	outs   dx,DWORD PTR ds:[rsi]
   14000743a:	(bad)  
   14000743b:	imul   ebp,DWORD PTR [rbp+riz*2+0x70],0x6f6c5c63
   140007443:	movsxd esp,DWORD PTR [rcx+0x74]
   140007446:	imul   ebp,DWORD PTR [rdi+0x6e],0x766e6f63
   14000744d:	gs jb  0x1400074b7
   140007450:	outs   dx,BYTE PTR gs:[rsi]
   140007452:	movsxd esp,DWORD PTR [rbp+0x5c]
   140007455:	ja     0x1400074c0
   140007457:	outs   dx,BYTE PTR ds:[rsi]
   140007458:	outs   dx,BYTE PTR ds:[rsi]
   140007459:	outs   dx,DWORD PTR ds:[rsi]
   14000745a:	je     0x1400074c5
   14000745c:	imul   sp,WORD PTR [rbx+0x61],0x6974
   140007462:	outs   dx,DWORD PTR ds:[rsi]
   140007463:	outs   dx,BYTE PTR ds:[rsi]
   140007464:	pop    rsp
   140007465:	outs   dx,BYTE PTR ds:[rsi]
   140007466:	outs   dx,DWORD PTR ds:[rsi]
   140007467:	je     0x1400074d2
   140007469:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14000746f:	outs   dx,DWORD PTR ds:[rsi]
   140007470:	outs   dx,BYTE PTR ds:[rsi]
   140007471:	movsxd esi,DWORD PTR cs:[rax+0x70]
   140007475:	add    BYTE PTR [rax],al
   140007477:	add    BYTE PTR [rdi+0x65],al
   14000747a:	je     0x1400074c8
   14000747c:	(bad)  
   14000747d:	jae    0x1400074f3
   14000747f:	rex.RB jb 0x1400074f4
   140007482:	outs   dx,DWORD PTR ds:[rsi]
   140007483:	jb     0x1400074ad
   140007485:	sub    DWORD PTR [rax],esp
   140007487:	cmp    eax,0x5245203d
   14000748c:	push   rdx
   14000748d:	rex.WRXB push r10
   14000748f:	pop    rdi
   140007490:	rex.B
   140007491:	rex.WR push rdx
   140007493:	rex.RB
   140007494:	rex.B
   140007495:	rex.R pop rcx
   140007497:	pop    rdi
   140007498:	rex.RB pop r8
   14000749a:	rex.WB push r11
   14000749c:	push   rsp
   14000749d:	push   rbx
   14000749e:	add    BYTE PTR [rax],al
   1400074a0:	push   rbx
   1400074a1:	gs je  0x1400074f4
   1400074a4:	jb     0x140007515
   1400074a6:	movsxd esp,DWORD PTR [rbp+0x73]
   1400074a9:	jae    0x1400074ef
   1400074ab:	jo     0x140007516
   1400074ad:	rex.B ja 0x140007511
   1400074b0:	jb     0x140007517
   1400074b2:	outs   dx,BYTE PTR ds:[rsi]
   1400074b3:	gs jae 0x140007529
   1400074b6:	sub    BYTE PTR [rax+0x52],dl
   1400074b9:	rex.WRXB
   1400074ba:	rex.XB
   1400074bb:	rex.RB push r11
   1400074bd:	push   rbx
   1400074be:	pop    rdi
   1400074bf:	push   rbx
   1400074c0:	pop    rcx
   1400074c1:	push   rbx
   1400074c2:	push   rsp
   1400074c3:	rex.RB
   1400074c4:	rex.WRB pop r15
   1400074c6:	rex.R push rax
   1400074c8:	rex.WB pop r15
   1400074ca:	push   r15
   1400074cc:	push   r10
   1400074ce:	sub    DWORD PTR [r8],r8d
   1400074d1:	add    BYTE PTR [rax],al
   1400074d3:	add    BYTE PTR [rax],al
   1400074d5:	add    BYTE PTR [rax],al
   1400074d7:	add    BYTE PTR [rcx+0x6e],cl
   1400074da:	imul   esi,DWORD PTR [rcx+rcx*2+0x6e],0x6e617473
   1400074e2:	movsxd esp,DWORD PTR [rbp+0x28]
   1400074e5:	push   0x74736e49
   1400074ea:	(bad)  
   1400074eb:	outs   dx,BYTE PTR ds:[rsi]
   1400074ec:	movsxd esp,DWORD PTR [rbp+0x2c]
   1400074ef:	and    BYTE PTR [rsi+0x6f],ch
   1400074f2:	je     0x14000755d
   1400074f4:	imul   sp,WORD PTR [rbx+0x61],0x6974
   1400074fa:	outs   dx,DWORD PTR ds:[rsi]
   1400074fb:	outs   dx,BYTE PTR ds:[rsi]
   1400074fc:	rex.WRB (bad) 
   1400074fe:	outs   dx,BYTE PTR ds:[rsi]
   1400074ff:	addr32 gs jb 0x14000752c
   140007503:	add    BYTE PTR [rax],al
   140007505:	add    BYTE PTR [rax],al
   140007507:	add    BYTE PTR [rbx+0x6f],al
   14000750a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000750c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140007514:	sub    BYTE PTR [rsi+0x75],ch
   140007517:	ins    BYTE PTR es:[rdi],dx
   140007518:	ins    BYTE PTR es:[rdi],dx
   140007519:	jo     0x14000758f
   14000751b:	jb     0x140007546
   14000751d:	add    BYTE PTR [rax],al
   14000751f:	add    BYTE PTR [rax],dh
   140007521:	and    BYTE PTR [rip+0x6f4c203d],bh        # 0x1af4c9564
   140007527:	(bad)  
   140007528:	fs push rbx
   14000752a:	je     0x14000759e
   14000752c:	imul   ebp,DWORD PTR [rsi+0x67],0x6e496828
   140007533:	jae    0x1400075a9
   140007535:	(bad)  
   140007536:	outs   dx,BYTE PTR ds:[rsi]
   140007537:	movsxd esp,DWORD PTR [rbp+0x2c]
   14000753a:	and    BYTE PTR [rcx+0x44],cl
   14000753d:	push   rbx
   14000753e:	pop    rdi
   14000753f:	push   r8
   140007541:	push   rax
   140007542:	pop    rdi
   140007543:	push   rsp
   140007544:	rex.WB push r12
   140007546:	rex.WR
   140007547:	rex.RB sub al,0x20
   14000754a:	jae    0x1400075c6
   14000754c:	push   rsp
   14000754d:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x414d202c
   140007555:	pop    rax
   140007556:	pop    rdi
   140007557:	rex.WR
   140007558:	rex.WRXB
   140007559:	rex.B
   14000755a:	rex.R push rbx
   14000755c:	push   rsp
   14000755d:	push   rdx
   14000755e:	rex.WB
   14000755f:	rex.WRX
   140007560:	rex.RXB sub DWORD PTR [r8],r8d
   140007563:	add    BYTE PTR [rax],al
   140007565:	add    BYTE PTR [rax],al
   140007567:	add    BYTE PTR [rcx+0x6e],cl
   14000756a:	imul   esi,DWORD PTR [rcx+rcx*2+0x6e],0x6e617473
   140007572:	movsxd esp,DWORD PTR [rbp+0x0]
	...
   14000757d:	add    BYTE PTR [rax],al
   14000757f:	add    BYTE PTR [rbp+0x78],al
   140007582:	jo     0x1400075e5
   140007584:	outs   dx,BYTE PTR ds:[rsi]
   140007585:	rex.RB outs dx,BYTE PTR fs:[rsi]
   140007588:	jbe    0x1400075f3
   14000758a:	jb     0x1400075fb
   14000758c:	outs   dx,BYTE PTR ds:[rsi]
   14000758d:	ins    DWORD PTR es:[rdi],dx
   14000758e:	outs   dx,BYTE PTR gs:[rsi]
   140007590:	je     0x1400075e5
   140007592:	je     0x140007606
   140007594:	imul   ebp,DWORD PTR [rsi+0x67],0x4c202873
   14000759b:	and    ah,BYTE PTR [rip+0x74737973]        # 0x1b473ef14
   1400075a1:	gs ins DWORD PTR es:[rdi],dx
   1400075a3:	jb     0x140007614
   1400075a5:	outs   dx,DWORD PTR ds:[rsi]
   1400075a6:	je     0x1400075cd
   1400075a8:	pop    rsp
   1400075a9:	pop    rsp
   1400075aa:	jae    0x140007625
   1400075ac:	jae    0x140007622
   1400075ae:	gs ins DWORD PTR es:[rdi],dx
   1400075b0:	xor    esi,DWORD PTR [rdx]
   1400075b2:	pop    rsp
   1400075b3:	pop    rsp
   1400075b4:	je     0x140007617
   1400075b6:	jae    0x140007623
   1400075b8:	(bad)  
   1400075ba:	jb     0x14000761f
   1400075bc:	jo     0x14000762a
   1400075be:	cs fs ins BYTE PTR es:[rdi],dx
   1400075c1:	ins    BYTE PTR es:[rdi],dx
   1400075c2:	and    ch,BYTE PTR [rax+riz*1]
   1400075c5:	ja     0x14000763a
   1400075c7:	jp     0x14000761b
   1400075c9:	gs jae 0x14000763b
   1400075cc:	jne    0x140007640
   1400075ce:	movsxd esp,DWORD PTR [rbp+0x44]
   1400075d1:	ins    BYTE PTR es:[rdi],dx
   1400075d2:	ins    BYTE PTR es:[rdi],dx
   1400075d3:	sub    al,0x20
   1400075d5:	push   r10
   1400075d7:	push   rdx
   1400075d8:	pop    r9
   1400075da:	push   rbx
   1400075db:	rex.WB pop r10
   1400075dd:	sub    BYTE PTR [r15+0x73],r14b
   1400075e1:	jp     0x140007635
   1400075e3:	gs jae 0x140007655
   1400075e6:	jne    0x14000765a
   1400075e8:	movsxd esp,DWORD PTR [rbp+0x44]
   1400075eb:	ins    BYTE PTR es:[rdi],dx
   1400075ec:	ins    BYTE PTR es:[rdi],dx
   1400075ed:	sub    DWORD PTR [rcx],ebp
   1400075ef:	and    BYTE PTR [rip+0x30203d],bh        # 0x140309632
   1400075f5:	add    BYTE PTR [rax],al
   1400075f7:	add    BYTE PTR [rax+0x4d],ch
   1400075fa:	outs   dx,DWORD PTR ds:[rsi]
   1400075fb:	fs jne 0x14000766a
   1400075fe:	gs cs addr32 gs je 0x14000762c
   140007604:	sub    DWORD PTR [rax],eax
	...
   14000760e:	add    BYTE PTR [rax],al
   140007610:	outs   dx,BYTE PTR ds:[rsi]
   140007611:	jne    0x14000767f
   140007613:	ins    BYTE PTR es:[rdi],dx
   140007614:	jo     0x14000768a
   140007616:	jb     0x140007638
   140007618:	cmp    eax,0x7728203d
   14000761d:	movsxd esp,DWORD PTR [rbp+0x78]
   140007620:	cs push 0x6e6f6349
   140007626:	and    BYTE PTR [rip+0x616f4c20],bh        # 0x1a16fc24c
   14000762c:	movsxd rbp,DWORD PTR fs:[r15+0x6e]
   140007631:	sub    BYTE PTR [rax+0x4d],ch
   140007634:	outs   dx,DWORD PTR ds:[rsi]
   140007635:	fs jne 0x1400076a4
   140007638:	gs cs addr32 gs je 0x140007666
   14000763e:	sub    DWORD PTR [rax+riz*1],ebp
   140007641:	rex.WRB
   140007642:	rex.B
   140007643:	rex.WXB
   140007644:	rex.RB
   140007645:	rex.WB
   140007646:	rex.WRX push rsp
   140007648:	push   rdx
   140007649:	rex.RB push r11
   14000764b:	rex.WRXB push r13
   14000764d:	push   rdx
   14000764e:	rex.XB
   14000764f:	sub    BYTE PTR [r9+0x44],r9b
   140007653:	rex.WB pop r15
   140007655:	rex.RXB
   140007656:	rex.RB
   140007657:	rex.WRXB
   140007658:	rex.WR
   140007659:	rex.WRXB
   14000765a:	rex.XB
   14000765b:	push   r12
   14000765d:	rex.WB
   14000765e:	rex.WRXB
   14000765f:	rex.WRX pop rdi
   140007661:	push   rdi
   140007662:	rex.W
   140007663:	rex.WB push r12
   140007665:	sub    DWORD PTR [r9],r13d
   140007668:	sub    DWORD PTR [rax],eax
   14000766a:	add    BYTE PTR [rax],al
   14000766c:	add    BYTE PTR [rax],al
   14000766e:	add    BYTE PTR [rax],al
   140007670:	outs   dx,BYTE PTR ds:[rsi]
   140007671:	jne    0x1400076df
   140007673:	ins    BYTE PTR es:[rdi],dx
   140007674:	jo     0x1400076ea
   140007676:	jb     0x140007698
   140007678:	cmp    eax,0x7728203d
   14000767d:	movsxd esp,DWORD PTR [rbp+0x78]
   140007680:	cs push 0x6e6f6349
   140007686:	push   rbx
   140007687:	ins    DWORD PTR es:[rdi],dx
   140007688:	and    BYTE PTR [rip+0x616f4c20],bh        # 0x1a16fc2ae
   14000768e:	movsxd rbp,DWORD PTR fs:[r15+0x6e]
   140007693:	sub    BYTE PTR [rax+0x4d],ch
   140007696:	outs   dx,DWORD PTR ds:[rsi]
   140007697:	fs jne 0x140007706
   14000769a:	gs cs addr32 gs je 0x1400076c8
   1400076a0:	sub    DWORD PTR [rax+riz*1],ebp
   1400076a3:	rex.WRB
   1400076a4:	rex.B
   1400076a5:	rex.WXB
   1400076a6:	rex.RB
   1400076a7:	rex.WB
   1400076a8:	rex.WRX push rsp
   1400076aa:	push   rdx
   1400076ab:	rex.RB push r11
   1400076ad:	rex.WRXB push r13
   1400076af:	push   rdx
   1400076b0:	rex.XB
   1400076b1:	sub    BYTE PTR [r9+0x44],r9b
   1400076b5:	rex.WB pop r15
   1400076b7:	rex.RXB
   1400076b8:	rex.RB
   1400076b9:	rex.WRXB
   1400076ba:	rex.WR
   1400076bb:	rex.WRXB
   1400076bc:	rex.XB
   1400076bd:	push   r12
   1400076bf:	rex.WB
   1400076c0:	rex.WRXB
   1400076c1:	rex.WRX pop rdi
   1400076c3:	push   rdi
   1400076c4:	rex.W
   1400076c5:	rex.WB push r12
   1400076c7:	sub    DWORD PTR [r9],r13d
   1400076ca:	sub    DWORD PTR [rax],eax
   1400076cc:	add    BYTE PTR [rax],al
   1400076ce:	add    BYTE PTR [rax],al
   1400076d0:	outs   dx,BYTE PTR ds:[rsi]
   1400076d1:	jne    0x14000773f
   1400076d3:	ins    BYTE PTR es:[rdi],dx
   1400076d4:	jo     0x14000774a
   1400076d6:	jb     0x1400076f8
   1400076d8:	cmp    eax,0x7728203d
   1400076dd:	movsxd esp,DWORD PTR [rbp+0x78]
   1400076e0:	cs push 0x73727543
   1400076e6:	outs   dx,DWORD PTR ds:[rsi]
   1400076e7:	jb     0x140007709
   1400076e9:	cmp    eax,0x616f4c20
   1400076ee:	fs rex.XB jne 0x140007764
   1400076f2:	jae    0x140007763
   1400076f4:	jb     0x14000771e
   1400076f6:	outs   dx,BYTE PTR ds:[rsi]
   1400076f7:	jne    0x140007765
   1400076f9:	ins    BYTE PTR es:[rdi],dx
   1400076fa:	jo     0x140007770
   1400076fc:	jb     0x14000772a
   1400076fe:	and    BYTE PTR [rcx+0x44],cl
   140007701:	rex.XB pop r15
   140007703:	push   r10
   140007705:	push   rdx
   140007706:	rex.WRXB push r15
   140007708:	sub    DWORD PTR [rcx],ebp
   14000770a:	add    BYTE PTR [rax],al
   14000770c:	add    BYTE PTR [rax],al
   14000770e:	add    BYTE PTR [rax],al
   140007710:	xor    BYTE PTR [rax],ah
   140007712:	cmp    eax,0x6552203d
   140007717:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   14000771f:	(bad)  
   140007720:	jae    0x140007795
   140007722:	rex.RB js 0x14000774d
   140007725:	es ja  0x14000778b
   140007728:	gs js  0x140007754
   14000772b:	add    BYTE PTR [rax],al
   14000772d:	add    BYTE PTR [rax],al
   14000772f:	add    BYTE PTR [rsi+0x75],ch
   140007732:	ins    BYTE PTR es:[rdi],dx
   140007733:	ins    BYTE PTR es:[rdi],dx
   140007734:	jo     0x1400077aa
   140007736:	jb     0x140007758
   140007738:	cmp    eax,0x6828203d
   14000773d:	push   rdi
   14000773e:	outs   dx,BYTE PTR ds:[rsi]
   14000773f:	and    BYTE PTR fs:[rip+0x65724320],bh        # 0x1a572ba66
   140007746:	(bad)  
   140007747:	je     0x1400077ae
   140007749:	push   rdi
   14000774a:	imul   ebp,DWORD PTR [rsi+0x64],0x2028776f
   140007751:	rex.WRB
   140007752:	rex.B
   140007753:	rex.WB
   140007754:	rex.WRX push rdi
   140007756:	rex.WB
   140007757:	rex.WRX
   140007758:	rex.R
   140007759:	rex.WRXB push r15
   14000775b:	pop    rdi
   14000775c:	rex.XB
   14000775d:	rex.WR
   14000775e:	push   r11
   140007760:	push   rbx
   140007761:	rex.WRX
   140007762:	rex.B
   140007763:	rex.WRB
   140007764:	rex.RB sub al,0x20
   140007767:	jae    0x1400077e3
   140007769:	push   rsp
   14000776a:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x5357202c
   140007772:	pop    rdi
   140007773:	rex.WRXB push r14
   140007775:	rex.RB push r10
   140007777:	rex.WR
   140007778:	push   r8
   14000777a:	push   rax
   14000777b:	rex.RB
   14000777c:	rex.R push rdi
   14000777e:	rex.WB
   14000777f:	rex.WRX
   140007780:	rex.R
   140007781:	rex.WRXB push r15
   140007783:	sub    al,0x20
   140007785:	rex.XB push r15
   140007787:	pop    rdi
   140007788:	push   rbp
   140007789:	push   rbx
   14000778a:	rex.RB
   14000778b:	rex.R
   14000778c:	rex.RB
   14000778d:	rex.RX
   14000778e:	push   r13
   140007790:	rex.WR push rsp
   140007792:	sub    al,0x20
   140007794:	xor    BYTE PTR [rax+riz*1],ch
   140007797:	rex.XB push r15
   140007799:	pop    rdi
   14000779a:	push   rbp
   14000779b:	push   rbx
   14000779c:	rex.RB
   14000779d:	rex.R
   14000779e:	rex.RB
   14000779f:	rex.RX
   1400077a0:	push   r13
   1400077a2:	rex.WR push rsp
   1400077a4:	sub    al,0x20
   1400077a6:	xor    BYTE PTR [rax+riz*1],ch
   1400077a9:	outs   dx,BYTE PTR ds:[rsi]
   1400077aa:	jne    0x140007818
   1400077ac:	ins    BYTE PTR es:[rdi],dx
   1400077ad:	jo     0x140007823
   1400077af:	jb     0x1400077dd
   1400077b1:	and    BYTE PTR [rsi+0x75],ch
   1400077b4:	ins    BYTE PTR es:[rdi],dx
   1400077b5:	ins    BYTE PTR es:[rdi],dx
   1400077b6:	jo     0x14000782c
   1400077b8:	jb     0x1400077e6
   1400077ba:	and    BYTE PTR [rax+0x49],ch
   1400077bd:	outs   dx,BYTE PTR ds:[rsi]
   1400077be:	jae    0x140007834
   1400077c0:	(bad)  
   1400077c1:	outs   dx,BYTE PTR ds:[rsi]
   1400077c2:	movsxd esp,DWORD PTR [rbp+0x2c]
   1400077c5:	and    BYTE PTR [rsi],ah
   1400077c7:	outs   dx,BYTE PTR ds:[rsi]
   1400077c8:	outs   dx,DWORD PTR ds:[rsi]
   1400077c9:	je     0x140007834
   1400077cb:	imul   sp,WORD PTR [rbx+0x61],0x6974
   1400077d1:	outs   dx,DWORD PTR ds:[rsi]
   1400077d2:	outs   dx,BYTE PTR ds:[rsi]
   1400077d3:	rex.WRB (bad) 
   1400077d5:	outs   dx,BYTE PTR ds:[rsi]
   1400077d6:	addr32 gs jb 0x140007803
   1400077da:	sub    DWORD PTR [rax],eax
   1400077dc:	add    BYTE PTR [rax],al
   1400077de:	add    BYTE PTR [rax],al
   1400077e0:	jo     0x1400077e2
   1400077e2:	(bad)  
   1400077e3:	add    BYTE PTR [rdi+0x0],ah
   1400077e6:	add    BYTE PTR gs:[rip+0x65005300],bh        # 0x1a500caed
   1400077ed:	add    BYTE PTR [rax+rax*1+0x74],dh
   1400077f1:	add    BYTE PTR [rcx+0x0],ch
   1400077f4:	outs   dx,BYTE PTR ds:[rsi]
   1400077f5:	add    BYTE PTR [rdi+0x0],ah
   1400077f8:	jae    0x1400077fa
   1400077fa:	push   rax
   1400077fb:	add    BYTE PTR [rcx+0x0],ah
   1400077fe:	add    BYTE PTR [ebp+0x0],ah
   140007802:	push   rax
   140007803:	add    BYTE PTR [rdx+0x0],dh
   140007806:	imul   eax,DWORD PTR [rax],0x610076
   14000780c:	movsxd eax,DWORD PTR [rax]
   14000780e:	jns    0x140007810
   140007810:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140007814:	movsxd eax,DWORD PTR [rax]
   140007816:	(bad)  
   140007817:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000781b:	add    BYTE PTR [rdi+0x0],ch
   14000781e:	outs   dx,BYTE PTR ds:[rsi]
	...
   14000782f:	add    BYTE PTR [rdi+0x0],dh
   140007832:	imul   eax,DWORD PTR [rax],0x64006e
   140007838:	outs   dx,DWORD PTR ds:[rsi]
   140007839:	add    BYTE PTR [rdi+0x0],dh
   14000783c:	jae    0x14000783e
   14000783e:	add    BYTE PTR cs:[rcx+0x0],ch
   140007842:	ins    DWORD PTR es:[rdi],dx
   140007843:	add    BYTE PTR [rbp+0x0],ch
   140007846:	add    BYTE PTR gs:[rdx+0x0],dh
   14000784a:	jae    0x14000784c
   14000784c:	imul   eax,DWORD PTR [rax],0x650076
   140007852:	movsxd eax,DWORD PTR [rax]
   140007854:	outs   dx,DWORD PTR ds:[rsi]
   140007855:	add    BYTE PTR [rsi+0x0],ch
   140007858:	je     0x14000785a
   14000785a:	jb     0x14000785c
   14000785c:	outs   dx,DWORD PTR ds:[rsi]
   14000785d:	add    BYTE PTR [rax+rax*1+0x70],ch
   140007861:	add    BYTE PTR [rcx+0x0],ah
   140007864:	outs   dx,BYTE PTR ds:[rsi]
   140007865:	add    BYTE PTR [rbp+0x0],ah
   140007868:	ins    BYTE PTR es:[rdi],dx
   140007869:	add    BYTE PTR [rdi+0x0],bl
   14000786c:	movsxd eax,DWORD PTR [rax]
   14000786e:	ja     0x140007870
   140007870:	xor    eax,0x31006e00
   140007875:	add    BYTE PTR [rax+0x0],ch
   140007878:	xor    al,BYTE PTR [rax]
   14000787a:	je     0x14000787c
   14000787c:	js     0x14000787e
   14000787e:	jns    0x140007880
   140007880:	add    BYTE PTR gs:[rdi+0x0],dh
   140007884:	jns    0x140007886
   140007886:	and    DWORD PTR [rax],eax
   140007888:	ins    DWORD PTR es:[rdi],dx
   140007889:	add    BYTE PTR [rcx+0x0],ch
   14000788c:	movsxd eax,DWORD PTR [rax]
   14000788e:	jb     0x140007890
   140007890:	outs   dx,DWORD PTR ds:[rsi]
   140007891:	add    BYTE PTR [rbx+0x0],dh
   140007894:	outs   dx,DWORD PTR ds:[rsi]
   140007895:	add    BYTE PTR [rsi+0x0],ah
   140007898:	je     0x14000789a
   14000789a:	add    BYTE PTR cs:[rdi+0x0],dh
   14000789e:	imul   eax,DWORD PTR [rax],0x64006e
   1400078a4:	outs   dx,DWORD PTR ds:[rsi]
   1400078a5:	add    BYTE PTR [rdi+0x0],dh
   1400078a8:	jae    0x1400078aa
   1400078aa:	add    BYTE PTR cs:[rcx+0x0],ch
   1400078ae:	ins    DWORD PTR es:[rdi],dx
   1400078af:	add    BYTE PTR [rbp+0x0],ch
   1400078b2:	add    BYTE PTR gs:[rdx+0x0],dh
   1400078b6:	jae    0x1400078b8
   1400078b8:	imul   eax,DWORD PTR [rax],0x650076
   1400078be:	movsxd eax,DWORD PTR [rax]
   1400078c0:	outs   dx,DWORD PTR ds:[rsi]
   1400078c1:	add    BYTE PTR [rsi+0x0],ch
   1400078c4:	je     0x1400078c6
   1400078c6:	jb     0x1400078c8
   1400078c8:	outs   dx,DWORD PTR ds:[rsi]
   1400078c9:	add    BYTE PTR [rax+rax*1+0x70],ch
   1400078cd:	add    BYTE PTR [rcx+0x0],ah
   1400078d0:	outs   dx,BYTE PTR ds:[rsi]
   1400078d1:	add    BYTE PTR [rbp+0x0],ah
   1400078d4:	ins    BYTE PTR es:[rdi],dx
   1400078d5:	add    BYTE PTR [rax],al
   1400078d7:	add    BYTE PTR [rcx+0x11],al
   1400078da:	xchg   esp,eax
   1400078db:	cs xchg edi,eax
   1400078dd:	jg     0x140007935
   1400078df:	rex.RXB mov r10d,0xdeec9d1d
   1400078e5:	mov    DWORD PTR [rdx+0x3d],ecx
   1400078e8:	rex.RB js 0x14000794e
   1400078eb:	gs jo  0x140007962
   1400078ee:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   1400078f5:	add    BYTE PTR [rax],al
   1400078f7:	add    BYTE PTR [rdx+0x65],dl
   1400078fa:	je     0x140007971
   1400078fc:	jb     0x14000796c
   1400078fe:	rex.W jb 0x140007901
   140007901:	add    BYTE PTR [rax],al
   140007903:	add    BYTE PTR [rax],al
   140007905:	add    BYTE PTR [rax],al
   140007907:	add    BYTE PTR [rdx+0x65],dl
   14000790a:	je     0x140007981
   14000790c:	jb     0x14000797c
   14000790e:	rex.W jb 0x14000796c
   140007911:	push   rax
   140007912:	jb     0x140007979
   140007914:	push   rdx
   140007915:	gs ins BYTE PTR es:[rdi],dx
   140007917:	gs (bad) 
   140007919:	jae    0x140007980
   14000791b:	pop    rbp
   14000791c:	add    BYTE PTR [rax],al
   14000791e:	add    BYTE PTR [rax],al
   140007920:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140007922:	addr32 rex.W jb 0x140007926
   140007926:	add    BYTE PTR [rax],al
   140007928:	rex.RX (bad) 
   14000792a:	imul   ebp,DWORD PTR [rsi+rax*2+0x61],0x7473
   140007932:	add    BYTE PTR [rax],al
   140007934:	add    BYTE PTR [rax],al
   140007936:	add    BYTE PTR [rax],al
   140007938:	and    eax,0x73006800
   14000793d:	add    BYTE PTR [rax],ch
   14000793f:	add    BYTE PTR [rip+0x29006400],ah        # 0x16900dd45
   140007945:	add    BYTE PTR [rax+rax*1+0x25],bl
   140007949:	add    BYTE PTR [rax+0x0],ch
   14000794c:	jae    0x14000794e
   14000794e:	and    DWORD PTR [rax],eax
   140007950:	and    eax,0x3a007000
   140007955:	add    BYTE PTR [rax],ah
	...
   14000795f:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300e165
   140007965:	add    BYTE PTR [rcx],ah
   140007967:	add    BYTE PTR [rip+0x3a007000],ah        # 0x17a00e96d
   14000796d:	add    BYTE PTR [rax],ah
	...
   140007977:	add    BYTE PTR [rax],ch
   140007979:	add    BYTE PTR [rbx+0x0],ah
   14000797c:	(bad)  
   14000797d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140007981:	add    BYTE PTR [rbp+0x0],ah
   140007984:	jb     0x140007986
   140007986:	cmp    al,BYTE PTR [rax]
   140007988:	and    BYTE PTR [rax],al
   14000798a:	and    eax,0x29007000
   14000798f:	add    BYTE PTR [rax],ah
   140007991:	add    BYTE PTR [rax],al
   140007993:	add    BYTE PTR [rax],al
   140007995:	add    BYTE PTR [rax],al
   140007997:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300e19d
   14000799d:	add    BYTE PTR [rax],ch
   14000799f:	add    BYTE PTR [rip+0x29006400],ah        # 0x16900dda5
   1400079a5:	add    BYTE PTR [rax],ah
   1400079a7:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400079ab:	add    BYTE PTR [rax+rax*1+0x28],ah
   1400079af:	add    BYTE PTR [rip+0x29007800],ah        # 0x16900f1b5
   1400079b5:	add    BYTE PTR [rax],ah
   1400079b7:	add    BYTE PTR [rip+0x38003000],ah        # 0x17800a9bd
   1400079bd:	add    BYTE PTR [rax+0x0],bl
   1400079c0:	and    BYTE PTR [rax],al
   1400079c2:	and    eax,0x73007700
	...
   1400079cf:	add    BYTE PTR [rax],ah
   1400079d1:	add    BYTE PTR [rax],ah
   1400079d3:	add    BYTE PTR [rax],ah
   1400079d5:	add    BYTE PTR [rax],ah
	...
   1400079df:	add    BYTE PTR [rbp+0x0],cl
   1400079e2:	jae    0x1400079e4
   1400079e4:	add    BYTE PTR [edx],bh
   1400079e7:	add    BYTE PTR [rbx+0x0],bl
   1400079ea:	and    eax,0x73007700
   1400079ef:	add    BYTE PTR [rbp+0x0],bl
   1400079f2:	and    BYTE PTR [rax],al
   1400079f4:	add    BYTE PTR [rax],al
   1400079f6:	add    BYTE PTR [rax],al
   1400079f8:	rex.XB add BYTE PTR [r9+0x0],spl
   1400079fc:	ins    BYTE PTR es:[rdi],dx
   1400079fd:	add    BYTE PTR [rax+rax*1+0x43],ch
   140007a01:	add    BYTE PTR [rdi+0x0],ch
   140007a04:	outs   dx,BYTE PTR ds:[rsi]
   140007a05:	add    BYTE PTR [rax+rax*1+0x65],dh
   140007a09:	add    BYTE PTR [rax+0x0],bh
   140007a0c:	je     0x140007a0e
   140007a0e:	cmp    al,BYTE PTR [rax]
   140007a10:	pop    rbx
   140007a11:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300e217
   140007a17:	add    BYTE PTR [rbp+0x0],bl
   140007a1a:	and    BYTE PTR [rax],al
   140007a1c:	add    BYTE PTR [rax],al
   140007a1e:	add    BYTE PTR [rax],al
   140007a20:	pop    rbx
   140007a21:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300e227
   140007a27:	add    BYTE PTR [rax],ch
   140007a29:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300e22f
   140007a2f:	add    BYTE PTR [rcx],ch
   140007a31:	add    BYTE PTR [rbp+0x0],bl
   140007a34:	or     al,BYTE PTR [rax]
   140007a36:	add    BYTE PTR [rax],al
   140007a38:	pop    rbx
   140007a39:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300e23f
   140007a3f:	add    BYTE PTR [rbp+0x0],bl
   140007a42:	or     al,BYTE PTR [rax]
   140007a44:	add    BYTE PTR [rax],al
   140007a46:	add    BYTE PTR [rax],al
   140007a48:	or     al,BYTE PTR [rax]
   140007a4a:	add    BYTE PTR [rax],al
   140007a4c:	add    BYTE PTR [rax],al
   140007a4e:	add    BYTE PTR [rax],al
   140007a50:	push   rbx
   140007a51:	gs je  0x140007aa8
   140007a54:	imul   ebp,DWORD PTR [rbp+0x65],0x685f2872
   140007a5b:	push   rdi
   140007a5c:	outs   dx,BYTE PTR ds:[rsi]
   140007a5d:	fs sub al,0x20
   140007a60:	rex.WB
   140007a61:	rex.R pop rdi
   140007a63:	push   rsp
   140007a64:	rex.WB
   140007a65:	rex.WRB
   140007a66:	rex.RB push r10
   140007a68:	sub    al,0x20
   140007a6a:	push   rsp
   140007a6b:	rex.WB
   140007a6c:	rex.WRB
   140007a6d:	rex.RB push r10
   140007a6f:	pop    rdi
   140007a70:	rex.WRB push r11
   140007a72:	sub    al,0x20
   140007a74:	outs   dx,BYTE PTR ds:[rsi]
   140007a75:	jne    0x140007ae3
   140007a77:	ins    BYTE PTR es:[rdi],dx
   140007a78:	jo     0x140007aee
   140007a7a:	jb     0x140007aa5
   140007a7c:	and    BYTE PTR [rip+0x30203d],bh        # 0x140309abf
   140007a82:	add    BYTE PTR [rax],al
   140007a84:	add    BYTE PTR [rax],al
   140007a86:	add    BYTE PTR [rax],al
   140007a88:	imul   r12d,DWORD PTR [rax+riz*1+0x6e],0x6520746f
   140007a91:	js     0x140007b03
   140007a93:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x65]
   140007a98:	jbe    0x140007aff
   140007a9a:	outs   dx,BYTE PTR ds:[rsi]
   140007a9b:	je     0x140007ad7
   140007a9d:	and    BYTE PTR [rip+0x7377],ah        # 0x14000ee1a
   140007aa3:	add    BYTE PTR [rax],al
   140007aa5:	add    BYTE PTR [rax],al
   140007aa7:	add    BYTE PTR [rsi+0x6f],cl
   140007aaa:	je     0x140007acc
   140007aac:	jae    0x140007b16
   140007aae:	outs   dx,DWORD PTR ds:[rsi]
   140007aaf:	ja     0x140007b1a
   140007ab1:	outs   dx,BYTE PTR ds:[rsi]
   140007ab2:	and    BYTE PTR [eax+ebp*2+0x65],dh
   140007ab7:	and    BYTE PTR [rcx+0x63],ch
   140007aba:	outs   dx,DWORD PTR ds:[rsi]
   140007abb:	outs   dx,BYTE PTR ds:[rsi]
   140007abc:	add    BYTE PTR [rax],al
   140007abe:	add    BYTE PTR [rax],al
   140007ac0:	outs   dx,BYTE PTR ds:[rsi]
   140007ac1:	jne    0x140007b2f
   140007ac3:	ins    BYTE PTR es:[rdi],dx
   140007ac4:	jo     0x140007b3a
   140007ac6:	jb     0x140007ae8
   140007ac8:	cmp    eax,0x6e28203d
   140007acd:	imul   esp,DWORD PTR [rbx+rdx*2+0x79],0x61727473
   140007ad5:	jns    0x140007b20
   140007ad7:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140007ada:	cs push 0x6e6f6349
   140007ae0:	and    BYTE PTR [rip+0x49482820],bh        # 0x18948a306
   140007ae6:	rex.XB
   140007ae7:	rex.WRXB
   140007ae8:	sub    QWORD PTR [rdi+r13*2+0x61],r9
   140007aed:	fs rex.WB ins DWORD PTR es:[rdi],dx
   140007af0:	(bad)  
   140007af1:	sub    BYTE PTR gs:[eax],ah
   140007af5:	push   0x75646f4d
   140007afa:	ins    BYTE PTR es:[rdi],dx
   140007afb:	gs cs addr32 gs je 0x140007b29
   140007b01:	sub    DWORD PTR [rax+riz*1],ebp
   140007b04:	rex.WRB
   140007b05:	rex.B
   140007b06:	rex.WXB
   140007b07:	rex.RB
   140007b08:	rex.WB
   140007b09:	rex.WRX push rsp
   140007b0b:	push   rdx
   140007b0c:	rex.RB push r11
   140007b0e:	rex.WRXB push r13
   140007b10:	push   rdx
   140007b11:	rex.XB
   140007b12:	sub    BYTE PTR [r9+0x44],r9b
   140007b16:	rex.WB pop r15
   140007b18:	rex.RXB
   140007b19:	rex.RB
   140007b1a:	rex.WRXB
   140007b1b:	rex.WR
   140007b1c:	rex.WRXB
   140007b1d:	rex.XB
   140007b1e:	push   r12
   140007b20:	rex.WB
   140007b21:	rex.WRXB
   140007b22:	rex.WRX pop rdi
   140007b24:	push   rdi
   140007b25:	rex.W
   140007b26:	rex.WB push r12
   140007b28:	sub    DWORD PTR [r8+riz*1],r13d
   140007b2c:	rex.WB
   140007b2d:	rex.WRB
   140007b2e:	rex.B
   140007b2f:	rex.RXB
   140007b30:	rex.RB pop r15
   140007b32:	rex.WB
   140007b33:	rex.XB
   140007b34:	rex.WRXB
   140007b35:	rex.WRX sub al,0x20
   140007b38:	rex.RXB
   140007b39:	gs je  0x140007b8f
   140007b3c:	jns    0x140007bb1
   140007b3e:	je     0x140007ba5
   140007b40:	ins    DWORD PTR es:[rdi],dx
   140007b41:	rex.WRB
   140007b42:	gs je  0x140007bb7
   140007b45:	imul   esp,DWORD PTR [rbx+0x73],0x5f4d5328
   140007b4c:	rex.XB pop r8
   140007b4e:	push   rbx
   140007b4f:	rex.WRB
   140007b50:	rex.WB
   140007b51:	rex.XB
   140007b52:	rex.WRXB
   140007b53:	sub    QWORD PTR [rax+r12*1],r13
   140007b57:	rex.RXB
   140007b58:	gs je  0x140007bae
   140007b5b:	jns    0x140007bd0
   140007b5d:	je     0x140007bc4
   140007b5f:	ins    DWORD PTR es:[rdi],dx
   140007b60:	rex.WRB
   140007b61:	gs je  0x140007bd6
   140007b64:	imul   esp,DWORD PTR [rbx+0x73],0x5f4d5328
   140007b6b:	rex.XB pop r9
   140007b6d:	push   rbx
   140007b6e:	rex.WRB
   140007b6f:	rex.WB
   140007b70:	rex.XB
   140007b71:	rex.WRXB
   140007b72:	sub    QWORD PTR [rax+r12*1],r13
   140007b76:	xor    BYTE PTR [rcx],ch
   140007b78:	sub    DWORD PTR [rax],eax
   140007b7a:	add    BYTE PTR [rax],al
   140007b7c:	add    BYTE PTR [rax],al
   140007b7e:	add    BYTE PTR [rax],al
   140007b80:	xor    BYTE PTR [rax],ah
   140007b82:	cmp    eax,0x6f4c203d
   140007b87:	(bad)  
   140007b88:	fs push rbx
   140007b8a:	je     0x140007bfe
   140007b8c:	imul   ebp,DWORD PTR [rsi+0x67],0x49685f28
   140007b93:	outs   dx,BYTE PTR ds:[rsi]
   140007b94:	jae    0x140007c0a
   140007b96:	sub    al,0x20
   140007b98:	rex.WB
   140007b99:	rex.R push rbx
   140007b9b:	pop    rdi
   140007b9c:	push   rsp
   140007b9d:	rex.WRXB
   140007b9e:	rex.WRXB
   140007b9f:	rex.WR push rsp
   140007ba1:	rex.WB push r8
   140007ba3:	sub    al,0x20
   140007ba5:	outs   dx,BYTE PTR ds:[rsi]
   140007ba6:	imul   esp,DWORD PTR [rbx+rdx*2+0x79],0x61727473
   140007bae:	jns    0x140007bf9
   140007bb0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140007bb3:	cs jae 0x140007c30
   140007bb6:	push   rsp
   140007bb7:	imul   esi,DWORD PTR [rax+0x2c],0x7a697320
   140007bbe:	outs   dx,DWORD PTR gs:[rsi]
   140007bc0:	data16 sub BYTE PTR [rsi+0x69],ch
   140007bc4:	fs push rbx
   140007bc6:	jns    0x140007c3b
   140007bc8:	je     0x140007c3c
   140007bca:	(bad)  
   140007bcb:	jns    0x140007c16
   140007bcd:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140007bd0:	cs jae 0x140007c4d
   140007bd3:	push   rsp
   140007bd4:	imul   esi,DWORD PTR [rax+0x29],0x73202f20
   140007bdb:	imul   edi,DWORD PTR [rdx+0x65],0x5728666f
   140007be2:	rex.XB
   140007be3:	rex.W
   140007be4:	push   r10
   140007be6:	sub    DWORD PTR [rcx],ebp
	...
   140007bf0:	and    DWORD PTR [rax],ebp
   140007bf2:	ja     0x140007c5d
   140007bf4:	ins    BYTE PTR es:[rdi],dx
   140007bf5:	cmp    bh,BYTE PTR [rdx]
   140007bf7:	jbe    0x140007c5e
   140007bf9:	jb     0x140007c64
   140007bfb:	data16 jns 0x140007c5d
   140007bfe:	(bad)  
   140007bff:	outs   dx,DWORD PTR ds:[rsi]
   140007c00:	outs   dx,DWORD PTR ds:[rsi]
   140007c01:	ins    BYTE PTR es:[rdi],dx
   140007c02:	sub    BYTE PTR [rax+0x6f],dl
   140007c05:	jae    0x140007c7b
   140007c07:	rex.WRB
   140007c08:	gs jae 0x140007c7e
   140007c0b:	(bad)  
   140007c0c:	addr32 gs push rdi
   140007c0f:	sub    BYTE PTR [rdi+0x68],bl
   140007c12:	push   rdi
   140007c13:	outs   dx,BYTE PTR ds:[rsi]
   140007c14:	fs sub al,0x20
   140007c17:	xor    BYTE PTR [rax+0x30],bh
   140007c1a:	xor    BYTE PTR [rcx],dh
   140007c1c:	xor    ch,BYTE PTR [rax+riz*1]
   140007c1f:	xor    BYTE PTR [rax+riz*1],ch
   140007c22:	xor    BYTE PTR [rcx],ch
   140007c24:	sub    DWORD PTR [rcx],ebp
   140007c26:	add    BYTE PTR [rax],al
   140007c28:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   140007c2c:	rex.WR add BYTE PTR [rax+rax*1+0x0],r9b
   140007c31:	add    BYTE PTR [rax],al
   140007c33:	add    BYTE PTR [rsi+0x55],cl
   140007c36:	rex.WR
   140007c37:	rex.WR add BYTE PTR [rax],r8b
   140007c3a:	add    BYTE PTR [rax],al
   140007c3c:	add    BYTE PTR [rax],al
   140007c3e:	add    BYTE PTR [rax],al
   140007c40:	jge    0x140007c54
   140007c42:	mov    edx,0xea10a845
   140007c47:	rex.RX mov r14b,BYTE PTR [rdi+0x7890ea56]
   140007c4e:	xchg   esp,eax
   140007c4f:	cmp    al,0x52
   140007c51:	push   rbx
   140007c52:	rex.R push rbx
   140007c54:	lock out 0x36,eax
   140007c57:	or     esp,edx
   140007c59:	jge    0x140007beb
   140007c5b:	rex mov esp,0x733976d7
   140007c61:	mov    ecx,0x1b833
   140007c66:	add    BYTE PTR [rax],al
   140007c68:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140007c6a:	movsxd esp,DWORD PTR [rcx+0x74]
   140007c6d:	imul   ebp,DWORD PTR [rdi+0x6e],0x69746f4e
   140007c74:	imul   sp,WORD PTR [rbx+0x61],0x6974
   140007c7a:	outs   dx,DWORD PTR ds:[rsi]
   140007c7b:	outs   dx,BYTE PTR ds:[rsi]
   140007c7c:	push   rdi
   140007c7d:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   140007c84:	jo     0x140007cea
   140007c86:	(bad)  
	...
   140007c9b:	add    BYTE PTR [rax],al
   140007c9d:	push   rbp
   140007c9e:	rex.RXB push r8
   140007ca0:	add    BYTE PTR [rax],dl
   140007ca2:	add    BYTE PTR [rax],al
   140007ca4:	enter  0x0,0x0
   140007ca8:	cs je  0x140007d10
   140007cab:	js     0x140007d21
   140007cad:	and    al,0x64
   140007caf:	imul   eax,DWORD PTR [rax],0xd0000000
   140007cb5:	adc    BYTE PTR [rax],al
   140007cb7:	add    al,al
   140007cb9:	sbb    DWORD PTR [rax],eax
   140007cbb:	add    BYTE PTR [rsi],ch
   140007cbd:	je     0x140007d24
   140007cbf:	js     0x140007d35
   140007cc1:	and    al,0x6c
   140007cc3:	jo     0x140007cf5
   140007cc5:	xor    DWORD PTR [rdi+rbp*2+0x63],ebp
   140007cc9:	(bad)  
   140007cca:	je     0x140007d35
   140007ccc:	outs   dx,DWORD PTR ds:[rsi]
   140007ccd:	outs   dx,BYTE PTR ds:[rsi]
   140007cce:	outs   dx,BYTE PTR ds:[rsi]
   140007ccf:	outs   dx,DWORD PTR ds:[rsi]
   140007cd0:	je     0x140007d3b
   140007cd2:	imul   sp,WORD PTR [rbx+0x61],0x6974
   140007cd8:	outs   dx,DWORD PTR ds:[rsi]
   140007cd9:	outs   dx,BYTE PTR ds:[rsi]
   140007cda:	ja     0x140007d45
   140007cdc:	outs   dx,BYTE PTR ds:[rsi]
   140007cdd:	outs   dx,DWORD PTR fs:[rsi]
   140007cdf:	ja     0x140007d54
   140007ce1:	cs gs js 0x140007d4a
   140007ce5:	and    DWORD PTR [rdx],esi
   140007ce7:	xor    BYTE PTR [rdi+0x70],bl
   140007cea:	jb     0x140007d55
   140007cec:	(bad)  
   140007ced:	add    BYTE PTR [rax],al
   140007cef:	add    BYTE PTR [rax+0x1700002a],dl
   140007cf5:	add    eax,DWORD PTR [rax]
   140007cf7:	add    BYTE PTR [rsi],ch
   140007cf9:	je     0x140007d60
   140007cfb:	js     0x140007d71
   140007cfd:	and    al,0x6c
   140007cff:	jo     0x140007d31
   140007d01:	cmp    DWORD PTR [rdi+rbp*2+0x63],ebp
   140007d05:	(bad)  
   140007d06:	je     0x140007d71
   140007d08:	outs   dx,DWORD PTR ds:[rsi]
   140007d09:	outs   dx,BYTE PTR ds:[rsi]
   140007d0a:	outs   dx,BYTE PTR ds:[rsi]
   140007d0b:	outs   dx,DWORD PTR ds:[rsi]
   140007d0c:	je     0x140007d77
   140007d0e:	imul   sp,WORD PTR [rbx+0x61],0x6974
   140007d14:	outs   dx,DWORD PTR ds:[rsi]
   140007d15:	outs   dx,BYTE PTR ds:[rsi]
   140007d16:	ja     0x140007d81
   140007d18:	outs   dx,BYTE PTR ds:[rsi]
   140007d19:	outs   dx,DWORD PTR fs:[rsi]
   140007d1b:	ja     0x140007d90
   140007d1d:	cs gs js 0x140007d86
   140007d21:	and    DWORD PTR [rip+0x6f635f30],esi        # 0x1af63dc57
   140007d27:	ins    BYTE PTR es:[rdi],dx
   140007d28:	fs (bad) 
   140007d2a:	outs   dx,DWORD PTR ds:[rsi]
   140007d2b:	outs   dx,DWORD PTR ds:[rsi]
   140007d2c:	je     0x140007d2e
   140007d2e:	add    BYTE PTR [rax],al
   140007d30:	mov    al,0x2d
   140007d32:	add    BYTE PTR [rax],al
   140007d34:	or     BYTE PTR [rax+rax*1],cl
   140007d37:	add    BYTE PTR [rsi],ch
   140007d39:	je     0x140007da0
   140007d3b:	js     0x140007db1
   140007d3d:	and    al,0x6d
   140007d3f:	outs   dx,BYTE PTR ds:[rsi]
   140007d40:	add    BYTE PTR [rax],al
   140007d42:	add    BYTE PTR [rax],al
   140007d44:	sar    BYTE PTR [rcx],0x0
   140007d47:	add    BYTE PTR [rbp+0x0],bh
   140007d4a:	add    BYTE PTR [rax],al
   140007d4c:	cs je  0x140007db4
   140007d4f:	js     0x140007dc5
   140007d51:	and    al,0x6d
   140007d53:	outs   dx,BYTE PTR ds:[rsi]
   140007d54:	and    al,0x30
   140007d56:	xor    BYTE PTR [rax],al
   140007d58:	cmp    al,BYTE PTR [rax]
   140007d5b:	add    BYTE PTR [rax+0x2e000000],bh
   140007d61:	je     0x140007dc8
   140007d63:	js     0x140007dd9
   140007d65:	and    al,0x6e
   140007d67:	jo     0x140007d69
   140007d69:	add    BYTE PTR [rax],al
   140007d6b:	add    BYTE PTR [rax],al
   140007d6d:	cmp    eax,DWORD PTR [rax]
   140007d6f:	add    al,al
   140007d71:	add    DWORD PTR [rax],eax
   140007d73:	add    BYTE PTR [rsi],ch
   140007d75:	je     0x140007ddc
   140007d77:	js     0x140007ded
   140007d79:	and    al,0x78
   140007d7b:	add    al,al
   140007d7d:	cmp    al,0x0
   140007d7f:	add    BYTE PTR [rip+0x2e000000],dh        # 0x16e007d85
   140007d85:	je     0x140007dec
   140007d87:	js     0x140007dfd
   140007d89:	and    al,0x79
   140007d8b:	add    BYTE PTR fs:[rax],al
   140007d8e:	add    BYTE PTR [rax],al
   140007d90:	idiv   BYTE PTR [rax+rax*1]
   140007d93:	add    BYTE PTR [rdi+0x1],dh
   140007d96:	add    BYTE PTR [rax],al
   140007d98:	cs je  0x140007e00
   140007d9b:	js     0x140007e11
   140007d9d:	and    al,0x7a
   140007d9f:	jae    0x140007da1
   140007da1:	add    BYTE PTR [rax],al
   140007da3:	add    BYTE PTR [rsi+0x3e],ch
   140007da6:	add    BYTE PTR [rax],al
   140007da8:	push   rcx
   140007da9:	or     DWORD PTR [rax],eax
   140007dab:	add    BYTE PTR [rsi],ch
   140007dad:	je     0x140007e14
   140007daf:	js     0x140007e25
   140007db1:	and    al,0x7a
   140007db3:	jns    0x140007db5
   140007db5:	add    BYTE PTR [rax],al
   140007db7:	add    al,al
   140007db9:	rex.RXB add BYTE PTR [r8],r8b
   140007dbc:	adc    BYTE PTR [rdi],dl
   140007dbe:	add    BYTE PTR [rax],al
   140007dc0:	cs je  0x140007e28
   140007dc3:	js     0x140007e39
   140007dc5:	and    al,0x7a
   140007dc7:	jp     0x140007dc9
   140007dc9:	add    BYTE PTR [rax],al
   140007dcb:	add    BYTE PTR [rax],al
   140007dcd:	(bad)  
   140007dce:	add    BYTE PTR [rax],al
   140007dd0:	rol    BYTE PTR [rbx],1
   140007dd2:	add    BYTE PTR [rax],al
   140007dd4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140007ddd:	add    BYTE PTR [rax],al
   140007ddf:	add    al,dl
   140007de1:	movsxd eax,DWORD PTR [rax]
   140007de3:	add    BYTE PTR [rax],dl
   140007de5:	add    BYTE PTR [rax],al
   140007de7:	add    BYTE PTR [rsi],ch
   140007de9:	xor    BYTE PTR [rax],dh
   140007deb:	movsxd esp,DWORD PTR [rsi+0x67]
   140007dee:	add    BYTE PTR [rax],al
   140007df0:	loopne 0x140007e55
   140007df2:	add    BYTE PTR [rax],al
   140007df4:	or     BYTE PTR [rax],al
   140007df6:	add    BYTE PTR [rax],al
   140007df8:	cs rex.XB push r10
   140007dfb:	push   rsp
   140007dfc:	and    al,0x58
   140007dfe:	rex.XB
   140007dff:	add    BYTE PTR [r8],al
   140007e02:	add    BYTE PTR [rax],al
   140007e04:	call   0x148007e6c
   140007e09:	add    BYTE PTR [rax],al
   140007e0b:	add    BYTE PTR [rsi],ch
   140007e0d:	rex.XB push r10
   140007e0f:	push   rsp
   140007e10:	and    al,0x58
   140007e12:	rex.XB
   140007e13:	rex.B
   140007e14:	add    BYTE PTR [r8],al
   140007e17:	add    al,dh
   140007e19:	movsxd eax,DWORD PTR [rax]
   140007e1b:	add    BYTE PTR [rax],bh
   140007e1d:	add    BYTE PTR [rax],al
   140007e1f:	add    BYTE PTR [rsi],ch
   140007e21:	rex.XB push r10
   140007e23:	push   rsp
   140007e24:	and    al,0x58
   140007e26:	rex.XB push r13
   140007e28:	add    BYTE PTR [rax],al
   140007e2a:	add    BYTE PTR [rax],al
   140007e2c:	sub    BYTE PTR [rax+rax*1+0x0],ah
   140007e30:	or     BYTE PTR [rax],al
   140007e32:	add    BYTE PTR [rax],al
   140007e34:	cs rex.XB push r10
   140007e37:	push   rsp
   140007e38:	and    al,0x58
   140007e3a:	rex.XB pop r10
   140007e3c:	add    BYTE PTR [rax],al
   140007e3e:	add    BYTE PTR [rax],al
   140007e40:	xor    BYTE PTR [rax+rax*1+0x0],ah
   140007e44:	or     BYTE PTR [rax],al
   140007e46:	add    BYTE PTR [rax],al
   140007e48:	cs rex.XB push r10
   140007e4b:	push   rsp
   140007e4c:	and    al,0x58
   140007e4e:	rex.WB
   140007e4f:	add    BYTE PTR [r8],al
   140007e52:	add    BYTE PTR [rax],al
   140007e54:	cmp    BYTE PTR [rax+rax*1+0x0],ah
   140007e58:	or     BYTE PTR [rax],al
   140007e5a:	add    BYTE PTR [rax],al
   140007e5c:	cs rex.XB push r10
   140007e5f:	push   rsp
   140007e60:	and    al,0x58
   140007e62:	rex.WB
   140007e63:	rex.B
   140007e64:	add    BYTE PTR [r8],al
   140007e67:	add    BYTE PTR [rax+0x64],al
   140007e6a:	add    BYTE PTR [rax],al
   140007e6c:	or     BYTE PTR [rax],al
   140007e6e:	add    BYTE PTR [rax],al
   140007e70:	cs rex.XB push r10
   140007e73:	push   rsp
   140007e74:	and    al,0x58
   140007e76:	rex.WB pop r9
   140007e78:	add    BYTE PTR [rax],al
   140007e7a:	add    BYTE PTR [rax],al
   140007e7c:	rex.W
   140007e7d:	add    BYTE PTR fs:[rax],al
   140007e80:	or     BYTE PTR [rax],al
   140007e82:	add    BYTE PTR [rax],al
   140007e84:	cs rex.XB push r10
   140007e87:	push   rsp
   140007e88:	and    al,0x58
   140007e8a:	rex.WB pop r10
   140007e8c:	add    BYTE PTR [rax],al
   140007e8e:	add    BYTE PTR [rax],al
   140007e90:	push   rax
   140007e91:	add    BYTE PTR fs:[rax],al
   140007e94:	enter  0x0,0x0
   140007e98:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   140007ea1:	add    BYTE PTR [rax],al
   140007ea3:	add    BYTE PTR [rax],ah
   140007ea5:	add    BYTE PTR gs:[rax],al
   140007ea8:	ror    BYTE PTR [rax],0x0
   140007eab:	add    BYTE PTR [rsi],ch
   140007ead:	jb     0x140007f13
   140007eaf:	(bad)  
   140007eb0:	je     0x140007f13
   140007eb2:	add    BYTE PTR [rax],al
   140007eb4:	loopne 0x140007f23
   140007eb6:	add    BYTE PTR [rax],al
   140007eb8:	push   rax
   140007eb9:	add    al,BYTE PTR [rax]
   140007ebb:	add    BYTE PTR [rsi],ch
   140007ebd:	jb     0x140007f23
   140007ebf:	(bad)  
   140007ec0:	je     0x140007f23
   140007ec2:	and    al,0x30
   140007ec4:	xor    BYTE PTR [rax],al
   140007ec6:	add    BYTE PTR [rax],al
   140007ec8:	xor    BYTE PTR [rax+0x0],dh
   140007ecb:	add    al,bl
   140007ecd:	add    DWORD PTR [rax],eax
   140007ecf:	add    BYTE PTR [rsi],ch
   140007ed1:	jb     0x140007f37
   140007ed3:	(bad)  
   140007ed4:	je     0x140007f37
   140007ed6:	and    al,0x30
   140007ed8:	xor    DWORD PTR [rax],eax
   140007eda:	add    BYTE PTR [rax],al
   140007edc:	or     BYTE PTR [rdx+0x0],dh
   140007edf:	add    BYTE PTR [rax],dl
   140007ee1:	add    BYTE PTR [rax],al
   140007ee3:	add    BYTE PTR [rsi],ch
   140007ee5:	jb     0x140007f4b
   140007ee7:	(bad)  
   140007ee8:	je     0x140007f4b
   140007eea:	and    al,0x7a
   140007eec:	rex.RB push r12
   140007eee:	push   rdi
   140007eef:	xor    BYTE PTR [rax],al
   140007ef1:	add    BYTE PTR [rax],al
   140007ef3:	add    BYTE PTR [rax],bl
   140007ef5:	jb     0x140007ef7
   140007ef7:	add    dh,bh
   140007ef9:	add    BYTE PTR [rax],al
   140007efb:	add    BYTE PTR [rsi],ch
   140007efd:	jb     0x140007f63
   140007eff:	(bad)  
   140007f00:	je     0x140007f63
   140007f02:	and    al,0x7a
   140007f04:	rex.RB push r12
   140007f06:	push   rdi
   140007f07:	xor    DWORD PTR [rax],eax
   140007f09:	add    BYTE PTR [rax],al
   140007f0b:	add    BYTE PTR [rsi],dl
   140007f0d:	jae    0x140007f0f
   140007f0f:	add    BYTE PTR [rax+rax*1+0x0],al
   140007f13:	add    BYTE PTR [rsi],ch
   140007f15:	jb     0x140007f7b
   140007f17:	(bad)  
   140007f18:	je     0x140007f7b
   140007f1a:	and    al,0x7a
   140007f1c:	rex.RB push r12
   140007f1e:	push   rdi
   140007f1f:	xor    al,BYTE PTR [rax]
   140007f21:	add    BYTE PTR [rax],al
   140007f23:	add    BYTE PTR [rdx+0x73],bl
   140007f26:	add    BYTE PTR [rax],al
   140007f28:	add    DWORD PTR [rax],eax
   140007f2a:	add    BYTE PTR [rax],al
   140007f2c:	cs jb  0x140007f93
   140007f2f:	(bad)  
   140007f30:	je     0x140007f93
   140007f32:	and    al,0x7a
   140007f34:	rex.RB push r12
   140007f36:	push   rdi
   140007f37:	cmp    DWORD PTR [rax],eax
   140007f39:	add    BYTE PTR [rax],al
   140007f3b:	add    BYTE PTR [rax+0x73],ah
   140007f3e:	add    BYTE PTR [rax],al
   140007f40:	lock or BYTE PTR [rax],al
   140007f43:	add    BYTE PTR [rsi],ch
   140007f45:	jb     0x140007fab
   140007f47:	(bad)  
   140007f48:	je     0x140007fab
   140007f4a:	and    al,0x7a
   140007f4c:	jp     0x140007f4e
   140007f4e:	add    BYTE PTR [rax],al
   140007f50:	push   rax
   140007f51:	jl     0x140007f53
   140007f53:	add    BYTE PTR [rax+0x2e000004],cl
   140007f59:	jb     0x140007fbf
   140007f5b:	(bad)  
   140007f5c:	je     0x140007fbf
   140007f5e:	and    al,0x7a
   140007f60:	jp     0x140007fdc
   140007f62:	fs (bad) 
   140007f64:	add    BYTE PTR [eax],al
   140007f67:	add    al,bl
   140007f69:	add    BYTE PTR [rax],0x0
   140007f6c:	or     rax,QWORD PTR [rax]
   140007f6f:	add    BYTE PTR [rsi],ch
   140007f71:	js     0x140007fd7
   140007f73:	(bad)  
   140007f74:	je     0x140007fd7
   140007f76:	add    BYTE PTR [rax],al
   140007f78:	and    BYTE PTR [rax+rax*1+0xac00],cl
   140007f7f:	add    BYTE PTR [rsi],ch
   140007f81:	js     0x140007fe7
   140007f83:	(bad)  
   140007f84:	je     0x140007fe7
   140007f86:	and    al,0x78
   140007f88:	add    BYTE PTR [rax],al
   140007f8a:	add    BYTE PTR [rax],al
   140007f8c:	ror    BYTE PTR [rax+rax*1+0x15400],1
   140007f93:	add    BYTE PTR [rsi],ch
   140007f95:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   140007f9d:	add    BYTE PTR [rax],al
   140007f9f:	add    BYTE PTR [rsi+rcx*4],ah
   140007fa2:	add    BYTE PTR [rax],al
   140007fa4:	adc    al,0x0
   140007fa6:	add    BYTE PTR [rax],al
   140007fa8:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140007fb1:	add    BYTE PTR [rax],al
   140007fb3:	add    BYTE PTR [rax],bh
   140007fb5:	mov    es,WORD PTR [rax]
   140007fb7:	add    al,dl
   140007fb9:	add    eax,DWORD PTR [rax]
   140007fbb:	add    BYTE PTR [rsi],ch
   140007fbd:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   140007fc5:	add    BYTE PTR [rax],al
   140007fc7:	add    BYTE PTR [rax],cl
   140007fc9:	xchg   edx,eax
   140007fca:	add    BYTE PTR [rax],al
   140007fcc:	or     DWORD PTR fs:[rax],eax
   140007fcf:	add    BYTE PTR [rsi],ch
   140007fd1:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   140007fd9:	add    BYTE PTR [rax],al
   140007fdb:	add    BYTE PTR [rax],al
   140007fdd:	movabs al,ds:0x642e000000200000
   140007fe6:	(bad)  
   140007fe7:	je     0x14000804a
   140007fe9:	add    BYTE PTR [rax],al
   140007feb:	add    BYTE PTR [rax],ah
   140007fed:	movabs al,ds:0x642e000000080000
   140007ff6:	(bad)  
   140007ff7:	je     0x14000805a
   140007ff9:	and    al,0x30
   140007ffb:	xor    BYTE PTR [rax],al
   140007ffd:	add    BYTE PTR [rax],al
   140007fff:	add    BYTE PTR [rax],dh
   140008001:	movabs al,ds:0x642e000000480000
   14000800a:	(bad)  
   14000800b:	je     0x14000806e
   14000800d:	and    al,0x30
   14000800f:	xor    DWORD PTR [rax],eax
   140008011:	add    BYTE PTR [rax],al
   140008013:	add    BYTE PTR [rax+0x280000a0],al
   140008019:	add    DWORD PTR [rax],eax
   14000801b:	add    BYTE PTR [rsi],ch
   14000801d:	fs (bad) 
   14000801f:	je     0x140008082
   140008021:	and    al,0x72
   140008023:	add    BYTE PTR [rax+0x40000a1],ch
   140008029:	add    BYTE PTR [rax],al
   14000802b:	add    BYTE PTR [rsi],ch
   14000802d:	fs (bad) 
   14000802f:	je     0x140008092
   140008031:	and    al,0x7a
   140008033:	jp     0x140008035
   140008035:	add    BYTE PTR [rax],al
   140008037:	add    BYTE PTR [rax-0x27ffff5f],dh
   14000803d:	add    eax,0x622e0000
   140008042:	jae    0x1400080b7
   140008044:	add    BYTE PTR [rax],al
   140008046:	add    BYTE PTR [rax],al
   140008048:	mov    BYTE PTR [rdi+0x80000],ah
   14000804e:	add    BYTE PTR [rax],al
   140008050:	cs (bad) 
   140008053:	jae    0x140008079
   140008055:	xor    BYTE PTR [rax],dh
   140008057:	add    BYTE PTR [rax-0x77ffff59],dl
   14000805d:	add    BYTE PTR [rax],al
   14000805f:	add    BYTE PTR [rsi],ch
   140008061:	(bad)  
   140008063:	jae    0x140008089
   140008065:	xor    BYTE PTR [rcx],dh
   140008067:	add    BYTE PTR [rax],ah
   140008069:	test   al,0x0
   14000806b:	add    al,al
   14000806d:	add    BYTE PTR [rax],al
   14000806f:	add    BYTE PTR [rsi],ch
   140008071:	(bad)  
   140008073:	jae    0x140008099
   140008075:	imul   esi,DWORD PTR fs:[rax],0x30
   140008079:	add    BYTE PTR [rax],al
   14000807b:	add    BYTE PTR [rax],al
   14000807d:	test   eax,0x80000
   140008082:	add    BYTE PTR [rax],al
   140008084:	cs (bad) 
   140008087:	jae    0x1400080ad
   140008089:	jo     0x1400080fd
   14000808b:	xor    BYTE PTR [rax],dh
   14000808d:	add    BYTE PTR [rax],al
   14000808f:	add    BYTE PTR [rax],cl
   140008091:	test   eax,0x580000
   140008096:	add    BYTE PTR [rax],al
   140008098:	cs (bad) 
   14000809b:	jae    0x1400080c1
   14000809d:	jp     0x140008119
   14000809f:	add    BYTE PTR [rax],al
   1400080a1:	mov    al,0x0
   1400080a3:	add    ah,bh
   1400080a5:	(bad)  
   1400080a6:	add    BYTE PTR [rax],al
   1400080a8:	cs jo  0x14000810f
   1400080ab:	(bad)  
   1400080ac:	je     0x14000810f
   1400080ae:	add    BYTE PTR [rax],al
   1400080b0:	add    al,al
   1400080b2:	add    BYTE PTR [rax],al
   1400080b4:	test   al,0x0
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	cs jb  0x14000812e
   1400080bb:	jb     0x140008120
   1400080bd:	and    al,0x30
   1400080bf:	xor    DWORD PTR [rax],eax
   1400080c1:	add    BYTE PTR [rax],al
   1400080c3:	add    BYTE PTR [rax-0x5fffff40],dh
   1400080c9:	add    al,0x0
   1400080cb:	add    BYTE PTR [rsi],ch
   1400080cd:	jb     0x140008142
   1400080cf:	jb     0x140008134
   1400080d1:	and    al,0x30
   1400080d3:	xor    al,BYTE PTR [rax]
   1400080d5:	add    BYTE PTR [rax],al
   1400080d7:	add    BYTE PTR [rcx],al
   1400080d9:	clts   
   1400080db:	add    BYTE PTR [rdi],cl
   1400080dd:	fs (bad) 
   1400080df:	add    BYTE PTR [rdi],cl
   1400080e1:	xor    al,0x6
   1400080e3:	add    BYTE PTR [rdi],cl
   1400080e5:	xor    cl,BYTE PTR [rbx]
   1400080e7:	jo     0x1400080ea
   1400080e9:	sbb    cl,BYTE PTR [rdx]
   1400080eb:	add    BYTE PTR [rdx],bl
   1400080ed:	je     0x1400080f8
   1400080ef:	add    BYTE PTR [rdx],bl
   1400080f1:	or     BYTE PTR fs:[rax],al
   1400080f4:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   1400080f8:	sbb    dh,BYTE PTR [rsi+rax*1]
   1400080fb:	add    BYTE PTR [rdx],bl
   1400080fd:	xor    dl,BYTE PTR [rsi]
   1400080ff:	loopne 0x140008122
   140008101:	add    BYTE PTR [rax],al
   140008103:	add    BYTE PTR [rax],ah
   140008105:	adc    DWORD PTR [rax],eax
   140008107:	add    BYTE PTR [rdx-0x17ffffef],bh
   14000810d:	add    BYTE PTR [rax],0x0
   140008110:	add    DWORD PTR [rax+rcx*1],edx
   140008113:	add    BYTE PTR [rsp+rsi*2],dl
   140008116:	lldt   WORD PTR [rsp+rsi*1]
   14000811a:	(bad)  
   14000811b:	add    BYTE PTR [rdx+rsi*2],dl
   14000811e:	adc    al,dh
   140008120:	(bad)  
   140008121:	loopne 0x14000812f
   140008123:	shl    BYTE PTR [rcx],0x14
   140008126:	add    al,0x0
   140008128:	adc    al,0x64
   14000812a:	or     eax,0xc540500
   14000812f:	add    al,al
   140008131:	adc    DWORD PTR [rax],eax
   140008133:	add    dh,ch
   140008135:	adc    DWORD PTR [rax],eax
   140008137:	add    BYTE PTR [rax],dl
   140008139:	add    DWORD PTR [rax],0x2100
   14000813f:	add    al,al
   140008141:	adc    DWORD PTR [rax],eax
   140008143:	add    dh,ch
   140008145:	adc    DWORD PTR [rax],eax
   140008147:	add    BYTE PTR [rax],dl
   140008149:	add    DWORD PTR [rax],0x4002100
   14000814f:	add    BYTE PTR [rax],al
   140008151:	fs or  eax,0xc540000
   140008157:	add    al,al
   140008159:	adc    DWORD PTR [rax],eax
   14000815b:	add    dh,ch
   14000815d:	adc    DWORD PTR [rax],eax
   14000815f:	add    BYTE PTR [rax],dl
   140008161:	add    DWORD PTR [rax],0x4002100
   140008167:	add    BYTE PTR [rax],al
   140008169:	fs or  eax,0xc540000
   14000816f:	add    al,al
   140008171:	adc    DWORD PTR [rax],eax
   140008173:	add    dh,ch
   140008175:	adc    DWORD PTR [rax],eax
   140008177:	add    BYTE PTR [rax],dl
   140008179:	add    DWORD PTR [rax],0xb351900
   14000817f:	add    BYTE PTR [rdi],ah
   140008181:	fs sub al,0x0
   140008184:	and    esi,DWORD PTR [rbx+rbp*1]
   140008187:	add    BYTE PTR [rsi],dl
   140008189:	add    DWORD PTR [rax+rax*1],esp
   14000818c:	or     esi,eax
   14000818e:	or     eax,esp
   140008190:	(bad)  
   140008191:	rol    BYTE PTR [rip+0x500470],0x0        # 0x140508608
   140008198:	adc    BYTE PTR [rcx],bh
   14000819a:	add    BYTE PTR [rax],al
   14000819c:	sbb    BYTE PTR [rax+rax*1+0x0],ch
   1400081a0:	adc    al,BYTE PTR [rcx]
   1400081a2:	add    BYTE PTR [rax],al
   1400081a4:	and    DWORD PTR [rax],eax
   1400081a6:	add    BYTE PTR [rax],al
   1400081a8:	jo     0x1400081bc
   1400081aa:	add    BYTE PTR [rax],al
   1400081ac:	outs   dx,BYTE PTR ds:[rsi]
   1400081ad:	adc    eax,0x817c0000
   1400081b2:	add    BYTE PTR [rax],al
   1400081b4:	(bad)  
   1400081b5:	(bad)  
   1400081b6:	(bad)  
   1400081b7:	call   QWORD PTR [rax]
   1400081b9:	cmp    eax,DWORD PTR [rax]
   1400081bb:	add    BYTE PTR [rax],al
   1400081bd:	add    BYTE PTR [rax],al
   1400081bf:	add    BYTE PTR [rbx+rdi*1],bl
   1400081c2:	add    BYTE PTR [rax],al
   1400081c4:	add    DWORD PTR [rax],eax
   1400081c6:	add    BYTE PTR [rax],al
   1400081c8:	sub    al,0x3b
   1400081ca:	add    BYTE PTR [rax],al
   1400081cc:	add    BYTE PTR [rax],al
   1400081ce:	add    BYTE PTR [rax],al
   1400081d0:	cmp    BYTE PTR [rbx],bh
   1400081d2:	add    BYTE PTR [rax],al
   1400081d4:	add    BYTE PTR [rax],al
   1400081d6:	add    BYTE PTR [rax],al
   1400081d8:	cmp    r8d,DWORD PTR [rax]
   1400081db:	add    BYTE PTR [rax+rax*1],al
   1400081de:	add    BYTE PTR [rax],al
   1400081e0:	push   rsp
   1400081e1:	cmp    eax,DWORD PTR [rax]
   1400081e3:	add    BYTE PTR [rax],al
   1400081e5:	add    BYTE PTR [rax],al
   1400081e7:	add    BYTE PTR [rbx+rdi*1+0x0],ah
   1400081eb:	add    BYTE PTR [rax+0x12],dh
   1400081ee:	add    BYTE PTR [rax],al
   1400081f0:	(bad)  
   1400081f1:	(bad)  
   1400081f2:	(bad)  
   1400081f3:	push   QWORD PTR [rsi]
   1400081f5:	adc    eax,DWORD PTR [rax]
   1400081f7:	add    BYTE PTR [rax],al
   1400081f9:	add    BYTE PTR [rax],al
   1400081fb:	add    BYTE PTR [rsi+0x1000013],cl
   140008201:	add    BYTE PTR [rax],al
   140008203:	add    BYTE PTR [rdi+0x2000013],ah
   140008209:	add    BYTE PTR [rax],al
   14000820b:	add    BYTE PTR [rax+0x1000013],bh
   140008211:	add    BYTE PTR [rax],al
   140008213:	add    BYTE PTR [rbx+rdx*1+0x30000],bh
   14000821a:	add    BYTE PTR [rax],al
   14000821c:	outs   dx,BYTE PTR ds:[rsi]
   14000821d:	adc    al,0x0
   14000821f:	add    BYTE PTR [rip+0xffffffffd9000000],al        # 0x119008225
   140008225:	adc    al,0x0
   140008227:	add    BYTE PTR [rax+rax*1],al
   14000822a:	add    BYTE PTR [rax],al
   14000822c:	in     al,0x14
   14000822e:	add    BYTE PTR [rax],al
   140008230:	add    BYTE PTR [rax],al
   140008232:	add    BYTE PTR [rax],al
   140008234:	in     eax,dx
   140008235:	adc    al,0x0
   140008237:	add    BYTE PTR [rsi],al
   140008239:	add    BYTE PTR [rax],al
   14000823b:	add    dl,bh
   14000823d:	adc    al,0x0
   14000823f:	add    BYTE PTR [rax],al
   140008241:	add    BYTE PTR [rax],al
   140008243:	add    BYTE PTR [rsi],dh
   140008245:	adc    eax,0xffff0000
   14000824a:	(bad)  
   14000824b:	jmp    FWORD PTR [rcx+0x15]
   14000824e:	add    BYTE PTR [rax],al
   140008250:	add    BYTE PTR [rax],al
   140008252:	add    BYTE PTR [rax],al
   140008254:	cs (bad) 
   140008256:	add    BYTE PTR [rax],al
   140008258:	add    BYTE PTR [rax],al
   14000825a:	add    BYTE PTR [rax],al
   14000825c:	mov    esi,0x200003f
   140008261:	add    BYTE PTR [rax],al
   140008263:	add    dh,al
   140008265:	(bad)  
   140008266:	add    BYTE PTR [rax],al
   140008268:	add    eax,DWORD PTR [rax]
   14000826a:	add    BYTE PTR [rax],al
   14000826c:	sub    al,BYTE PTR [rax+0x0]
   14000826f:	add    BYTE PTR [rip+0x4a000000],al        # 0x18a008275
   140008275:	add    BYTE PTR [rax],al
   140008278:	(bad)  
   140008279:	add    BYTE PTR [rax],al
   14000827b:	add    BYTE PTR [rsi+0x40],ah
   14000827e:	add    BYTE PTR [rax],al
   140008280:	add    BYTE PTR [rax],al
   140008282:	add    BYTE PTR [rax],al
   140008284:	jg     0x1400082c6
   140008286:	add    BYTE PTR [rax],al
   140008288:	(bad)  
   140008289:	(bad)  
   14000828a:	(bad)  
   14000828b:	call   FWORD PTR [rcx]
   14000828d:	cmp    al,0xb
   14000828f:	add    BYTE PTR [rbx],ch
   140008291:	xor    al,0x86
   140008293:	add    BYTE PTR [rbx],bl
   140008295:	add    DWORD PTR [rax+rax*1+0xc],edi
   140008299:	lock or ah,al
   14000829c:	or     al,dl
   14000829e:	(bad)  
   14000829f:	rol    BYTE PTR [rax+rsi*2],0x3
   1400082a3:	(bad)  
   1400082a4:	add    dl,BYTE PTR [rax+0x0]
   1400082a7:	add    BYTE PTR [rax],dl
   1400082a9:	cmp    DWORD PTR [rax],eax
   1400082ab:	add    al,dh
   1400082ad:	imul   eax,DWORD PTR [rax],0x0
   1400082b0:	rol    BYTE PTR [rbx],cl
   1400082b2:	add    BYTE PTR [rax],al
   1400082b4:	and    DWORD PTR [rax],eax
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	adc    BYTE PTR [rip+0x18dd0000],0x0        # 0x158dd82bf
   1400082bf:	add    BYTE PTR [rdx+rax*4-0x10000],cl
   1400082c6:	(bad)  
   1400082c7:	inc    DWORD PTR [rax+0x3b]
   1400082cd:	add    BYTE PTR [rax],al
   1400082cf:	add    BYTE PTR [rbx+rdi*1+0x0],cl
   1400082d6:	add    BYTE PTR [rax],al
   1400082d8:	cwde   
   1400082d9:	cmp    eax,DWORD PTR [rax]
   1400082db:	add    BYTE PTR [rax-0xffffeb],al
   1400082e1:	(bad)  
   1400082e2:	(bad)  
   1400082e3:	jmp    FWORD PTR [rsi]
   1400082e5:	(bad)  
   1400082e6:	add    BYTE PTR [rax],al
   1400082e8:	add    BYTE PTR [rax],al
   1400082ea:	add    BYTE PTR [rax],al
   1400082ec:	jg     0x140008305
   1400082ee:	add    BYTE PTR [rax],al
   1400082f0:	add    DWORD PTR [rax],eax
   1400082f2:	add    BYTE PTR [rax],al
   1400082f4:	mov    dl,0x17
   1400082f6:	add    BYTE PTR [rax],al
   1400082f8:	add    BYTE PTR [rax],al
   1400082fa:	add    BYTE PTR [rax],al
   1400082fc:	rcl    BYTE PTR [rdi],0x0
   1400082ff:	add    BYTE PTR [rdx],al
   140008301:	add    BYTE PTR [rax],al
   140008303:	add    BYTE PTR [rbp+0x18],bl
   140008306:	add    BYTE PTR [rax],al
   140008308:	add    BYTE PTR [rax],al
   14000830a:	add    BYTE PTR [rax],al
   14000830c:	sahf   
   14000830d:	sbb    BYTE PTR [rax],al
   14000830f:	add    bh,bh
   140008311:	(bad)  
   140008312:	(bad)  
   140008313:	(bad)  
   140008314:	fstp   DWORD PTR [rax]
   140008316:	add    BYTE PTR [rax],al
   140008318:	add    BYTE PTR [rax],al
   14000831a:	add    BYTE PTR [rax],al
   14000831c:	nop
   14000831d:	add    BYTE PTR [rax],al
   140008320:	(bad)  
   140008321:	(bad)  
   140008322:	(bad)  
   140008323:	push   rdx
   140008325:	add    BYTE PTR [rax],al
   140008328:	add    BYTE PTR [rax],al
   14000832a:	add    BYTE PTR [rax],al
   14000832c:	push   rdi
   14000832d:	rex.X add BYTE PTR [rax],al
   140008330:	add    DWORD PTR [rax],eax
   140008332:	add    BYTE PTR [rax],al
   140008334:	pop    rsi
   140008335:	rex.X add BYTE PTR [rax],al
   140008338:	add    al,BYTE PTR [rax]
   14000833a:	add    BYTE PTR [rax],al
   14000833c:	fadd   DWORD PTR [rdx+0x0]
   14000833f:	add    BYTE PTR [rax],al
   140008341:	add    BYTE PTR [rax],al
   140008343:	add    BYTE PTR [rcx],dl
   140008345:	(bad)  
   140008346:	or     BYTE PTR [rax],al
   140008348:	(bad)  
   140008349:	je     0x14000835a
   14000834b:	add    BYTE PTR [rcx],bl
   14000834d:	fs (bad) 
   14000834f:	add    BYTE PTR [rsp+rsi*1],dl
   140008352:	or     al,0x0
   140008354:	(bad)  
   140008355:	xchg   edx,eax
   140008356:	add    ah,al
   140008358:	jb     0x140008392
   14000835a:	add    BYTE PTR [rax],al
   14000835c:	enter  0x6b,0x0
   140008360:	and    DWORD PTR [rax],eax
   140008362:	add    BYTE PTR [rax],al
   140008364:	lock sbb BYTE PTR [rax],al
   140008367:	add    BYTE PTR [rsi+0x1a],bl
   14000836a:	add    BYTE PTR [rax],al
   14000836c:	rex.R add DWORD PTR [rax],0x0
   140008370:	(bad)  
   140008371:	(bad)  
   140008372:	(bad)  
   140008373:	push   QWORD PTR [rax-0xffffc5]
   140008379:	(bad)  
   14000837a:	(bad)  
   14000837b:	(bad)  
   14000837c:	mov    esp,0xff00003b
   140008381:	(bad)  
   140008382:	(bad)  
   140008383:	dec    eax
   140008385:	cmp    eax,DWORD PTR [rax]
   140008387:	add    al,dh
   140008389:	sbb    BYTE PTR [rax],al
   14000838b:	add    bh,bh
   14000838d:	(bad)  
   14000838e:	(bad)  
   14000838f:	dec    ebx
   140008391:	sbb    DWORD PTR [rax],eax
   140008393:	add    BYTE PTR [rcx],al
   140008395:	add    BYTE PTR [rax],al
   140008397:	add    bh,bh
   140008399:	sbb    DWORD PTR [rax],eax
   14000839b:	add    bh,bh
   14000839d:	(bad)  
   14000839e:	(bad)  
   14000839f:	call   QWORD PTR [rbx]
   1400083a1:	sbb    al,BYTE PTR [rax]
   1400083a3:	add    BYTE PTR [rdx],al
   1400083a5:	add    BYTE PTR [rax],al
   1400083a7:	add    BYTE PTR [rsi],ah
   1400083a9:	sbb    al,BYTE PTR [rax]
   1400083ab:	add    bh,bh
   1400083ad:	(bad)  
   1400083ae:	(bad)  
   1400083af:	jmp    FWORD PTR [rbx]
   1400083b1:	sbb    al,BYTE PTR [rax]
   1400083b3:	add    BYTE PTR [rcx],al
   1400083b5:	add    BYTE PTR [rax],al
   1400083b7:	add    BYTE PTR [rdx],bh
   1400083b9:	sbb    al,BYTE PTR [rax]
   1400083bb:	add    bh,bh
   1400083bd:	(bad)  
   1400083be:	(bad)  
   1400083bf:	jmp    FWORD PTR [rax]
   1400083c1:	rex.XB add BYTE PTR [r8],al
   1400083c4:	(bad)  
   1400083c5:	(bad)  
   1400083c6:	(bad)  
   1400083c7:	(bad)  
   1400083c8:	cmp    eax,DWORD PTR [rbx+0x0]
   1400083cb:	add    BYTE PTR [rax],al
   1400083cd:	add    BYTE PTR [rax],al
   1400083cf:	add    BYTE PTR [rcx-0xffffbd],bl
   1400083d5:	(bad)  
   1400083d6:	(bad)  
   1400083d7:	call   FWORD PTR [rdi]
   1400083d9:	add    BYTE PTR [rax],r8b
   1400083dc:	add    DWORD PTR [rax],eax
   1400083de:	add    BYTE PTR [rax],al
   1400083e0:	rex.X
   1400083e1:	add    BYTE PTR [rax],r8b
   1400083e4:	(bad)  
   1400083e5:	(bad)  
   1400083e6:	(bad)  
   1400083e7:	inc    DWORD PTR [rcx]
   1400083e9:	add    al,BYTE PTR [rcx]
   1400083eb:	add    BYTE PTR [rdx],al
   1400083ed:	push   rax
   1400083ee:	add    BYTE PTR [rax],al
   1400083f0:	add    DWORD PTR [rcx+rax*1],eax
   1400083f3:	add    BYTE PTR [rdx+riz*2],al
   1400083f6:	add    BYTE PTR [rax],al
   1400083f8:	and    DWORD PTR [rip+0x34050002],eax        # 0x174058400
   1400083fe:	or     BYTE PTR [rax],al
   140008400:	jo     0x14000841c
   140008402:	add    BYTE PTR [rax],al
   140008404:	jge    0x140008420
   140008406:	add    BYTE PTR [rax],al
   140008408:	lock add DWORD PTR [rax],0x0
   14000840c:	and    DWORD PTR [rbx],edx
   14000840e:	(bad)  
   14000840f:	add    BYTE PTR [rbx],dl
   140008411:	je     0x140008419
   140008413:	add    BYTE PTR [rdx],cl
   140008415:	or     al,BYTE PTR fs:[rax]
   140008418:	add    eax,0x7d000954
   14000841d:	sbb    al,BYTE PTR [rax]
   14000841f:	add    BYTE PTR [rdi-0x7ffffe6],cl
   140008425:	add    DWORD PTR [rax],0x0
   140008428:	and    DWORD PTR [rax],eax
   14000842a:	add    BYTE PTR [rax],al
   14000842c:	jge    0x140008448
   14000842e:	add    BYTE PTR [rax],al
   140008430:	(bad)  
   140008431:	sbb    al,BYTE PTR [rax]
   140008433:	add    al,bh
   140008435:	add    DWORD PTR [rax],0x0
   140008438:	and    DWORD PTR [rax],eax
   14000843a:	add    BYTE PTR [rax],al
   14000843c:	jo     0x140008458
   14000843e:	add    BYTE PTR [rax],al
   140008440:	jge    0x14000845c
   140008442:	add    BYTE PTR [rax],al
   140008444:	lock add DWORD PTR [rax],0x0
   140008448:	and    DWORD PTR [rax],eax
   14000844a:	or     BYTE PTR [rax],al
   14000844c:	add    BYTE PTR [rsi+rax*1+0x0],dh
   140008450:	add    BYTE PTR [rdx+rcx*1+0x0],ah
   140008454:	add    BYTE PTR [rcx+rcx*1+0x0],dl
   140008458:	add    BYTE PTR [rax+rcx*1],dh
   14000845b:	add    BYTE PTR [rax+0x1a],dh
   14000845e:	add    BYTE PTR [rax],al
   140008460:	jge    0x14000847c
   140008462:	add    BYTE PTR [rax],al
   140008464:	lock add DWORD PTR [rax],0x0
   140008468:	and    DWORD PTR [rax],eax
   14000846a:	or     BYTE PTR [rax],al
   14000846c:	add    BYTE PTR [rsi+rax*1+0x0],dh
   140008470:	add    BYTE PTR [rdx+rcx*1+0x0],ah
   140008474:	add    BYTE PTR [rcx+rcx*1+0x0],dl
   140008478:	add    BYTE PTR [rax+rcx*1],dh
   14000847b:	add    BYTE PTR [rax+0x1a],dh
   14000847e:	add    BYTE PTR [rax],al
   140008480:	jge    0x14000849c
   140008482:	add    BYTE PTR [rax],al
   140008484:	lock add DWORD PTR [rax],0x0
   140008488:	add    DWORD PTR [rsi],eax
   14000848a:	add    al,BYTE PTR [rax]
   14000848c:	(bad)  
   14000848d:	xor    al,BYTE PTR [rdx]
   14000848f:	xor    BYTE PTR [rcx],al
   140008491:	clts   
   140008493:	add    BYTE PTR [rdi],cl
   140008495:	fs (bad) 
   140008497:	add    BYTE PTR [rdi],cl
   140008499:	xor    al,0x6
   14000849b:	add    BYTE PTR [rdi],cl
   14000849d:	xor    cl,BYTE PTR [rbx]
   14000849f:	jo     0x1400084c2
   1400084a1:	add    BYTE PTR [rax],al
   1400084a3:	add    BYTE PTR [rax-0x1bffffe5],dl
   1400084a9:	sbb    eax,DWORD PTR [rax]
   1400084ab:	add    BYTE PTR [rax+0x1000084],dl
   1400084b1:	adc    al,0x8
   1400084b3:	add    BYTE PTR [rsp+riz*2],dl
   1400084b6:	or     DWORD PTR [rax],eax
   1400084b8:	adc    al,0x54
   1400084ba:	or     BYTE PTR [rax],al
   1400084bc:	adc    al,0x34
   1400084be:	(bad)  
   1400084bf:	add    BYTE PTR [rdx+rsi*1],dl
   1400084c2:	adc    BYTE PTR [rax+0x21],dh
   1400084c5:	add    BYTE PTR [rax],al
   1400084c7:	add    al,dh
   1400084c9:	sbb    eax,DWORD PTR [rax]
   1400084cb:	add    BYTE PTR [rax-0x4fffffe4],cl
   1400084d1:	test   BYTE PTR [rax],al
   1400084d3:	add    BYTE PTR [rcx],al
   1400084d5:	or     eax,DWORD PTR [rdx]
   1400084d7:	add    BYTE PTR [rbx],cl
   1400084d9:	xor    al,BYTE PTR [rdi]
   1400084db:	xor    BYTE PTR [rcx],bl
   1400084dd:	xor    DWORD PTR [rcx],ecx
   1400084df:	add    BYTE PTR [rdi],bl
   1400084e1:	push   rsp
   1400084e2:	int    0x0
   1400084e4:	sbb    esi,DWORD PTR [rsp+rcx*8]
   1400084e7:	add    BYTE PTR [rsi],cl
   1400084e9:	add    esi,eax
   1400084eb:	add    BYTE PTR [rdi],al
   1400084ed:	loopne 0x1400084f4
   1400084ef:	jo     0x1400084f5
   1400084f1:	(bad)  
   1400084f2:	add    BYTE PTR [rax],al
   1400084f4:	adc    BYTE PTR [rcx],bh
   1400084f6:	add    BYTE PTR [rax],al
   1400084f8:	rex ins BYTE PTR es:[rdi],dx
   1400084fa:	add    BYTE PTR [rax],al
   1400084fc:	and    al,BYTE PTR [rsi]
   1400084fe:	add    BYTE PTR [rax],al
   140008500:	and    DWORD PTR [rax],eax
   140008502:	add    BYTE PTR [rax],al
   140008504:	(bad)  
   140008505:	sbb    eax,0x1f3b0000
   14000850a:	add    BYTE PTR [rax],al
   14000850c:	fadd   QWORD PTR [rax+rax*1-0x100]
   140008513:	push   rax
   140008515:	cmp    eax,DWORD PTR [rax]
   140008517:	add    BYTE PTR [rax+0x1d],ah
   14000851a:	add    BYTE PTR [rax],al
   14000851c:	(bad)  
   14000851d:	(bad)  
   14000851e:	(bad)  
   14000851f:	(bad)  
   140008520:	jmp    0x140008542
   140008525:	add    BYTE PTR [rax],al
   140008527:	add    ah,cl
   140008529:	(bad)  
   14000852a:	add    BYTE PTR [rax],al
   14000852c:	(bad)  
   14000852d:	(bad)  
   14000852e:	(bad)  
   14000852f:	inc    DWORD PTR [rdi+rbx*1]
   140008532:	add    BYTE PTR [rax],al
   140008534:	add    BYTE PTR [rax],al
   140008536:	add    BYTE PTR [rax],al
   140008538:	idiv   BYTE PTR [rax+rax*1]
   14000853b:	add    bh,bh
   14000853d:	(bad)  
   14000853e:	(bad)  
   14000853f:	jmp    FWORD PTR [rax]
   140008541:	cmp    eax,0x0
   140008546:	add    BYTE PTR [rax],al
   140008548:	add    DWORD PTR [rdx],ecx
   14000854a:	add    al,0x0
   14000854c:	or     dh,BYTE PTR [rax+rcx*1]
   14000854f:	add    BYTE PTR [rdx],cl
   140008551:	push   rdx
   140008552:	(bad)  
   140008553:	jo     0x140008576
   140008555:	add    BYTE PTR [rax],al
   140008557:	add    BYTE PTR [rax+0x1f],dl
   14000855a:	add    BYTE PTR [rax],al
   14000855c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000855d:	(bad)  
   14000855e:	add    BYTE PTR [rax],al
   140008560:	test   QWORD PTR [rax],rax
   140008563:	add    BYTE PTR [rcx],bl
   140008565:	sub    eax,0x1170009
   14000856a:	sbb    al,0x0
   14000856c:	or     esi,eax
   14000856e:	or     eax,esp
   140008570:	(bad)  
   140008571:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x1436089e8
   140008578:	add    dl,BYTE PTR [rax+0x0]
   14000857b:	add    BYTE PTR [rax],dl
   14000857d:	cmp    DWORD PTR [rax],eax
   14000857f:	add    BYTE PTR [rax+0x6c],ch
   140008582:	add    BYTE PTR [rax],al
   140008584:	rol    BYTE PTR [rax],cl
   140008586:	add    BYTE PTR [rax],al
   140008588:	and    DWORD PTR [rax],eax
   14000858a:	add    BYTE PTR [rax],al
   14000858c:	mov    al,0x1f
   14000858e:	add    BYTE PTR [rax],al
   140008590:	add    DWORD PTR [rbx],esp
   140008592:	add    BYTE PTR [rax],al
   140008594:	test   DWORD PTR fs:[rax],eax
   140008597:	add    bh,bh
   140008599:	(bad)  
   14000859a:	(bad)  
   14000859b:	call   QWORD PTR [rax]
   14000859d:	cmp    al,0x0
   14000859f:	add    BYTE PTR [rax-0xffffe1],dh
   1400085a5:	(bad)  
   1400085a6:	(bad)  
   1400085a7:	(bad)  
   1400085a8:	sti    
   1400085a9:	(bad)  
   1400085aa:	add    BYTE PTR [rax],al
   1400085ac:	add    BYTE PTR [rax],al
   1400085ae:	add    BYTE PTR [rax],al
   1400085b0:	out    0x21,eax
   1400085b2:	add    BYTE PTR [rax],al
   1400085b4:	(bad)  
   1400085b5:	(bad)  
   1400085b6:	(bad)  
   1400085b7:	call   QWORD PTR [rcx]
   1400085b9:	and    al,BYTE PTR [rax]
   1400085bb:	add    BYTE PTR [rax],al
   1400085bd:	add    BYTE PTR [rax],al
   1400085bf:	add    BYTE PTR [rax+0x3d],ah
   1400085c5:	add    BYTE PTR [rax],al
   1400085c7:	add    BYTE PTR [rcx],al
   1400085c9:	(bad)  
   1400085ca:	add    DWORD PTR [rax],eax
   1400085cc:	(bad)  
   1400085cd:	movabs ds:0x11800092a190000,al
   1400085d6:	or     al,0x4
   1400085d8:	or     esi,eax
   1400085da:	or     eax,esp
   1400085dc:	(bad)  
   1400085dd:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143608a54
   1400085e4:	add    dh,BYTE PTR [rax]
   1400085e6:	add    BYTE PTR [rax],al
   1400085e8:	cmp    BYTE PTR [rax],0x0
   1400085eb:	add    BYTE PTR [rax+0x20],dl
   1400085ee:	add    BYTE PTR [rax],al
   1400085f0:	and    DWORD PTR [rax],eax
   1400085f2:	add    BYTE PTR [rax],al
   1400085f4:	(bad)  
   1400085f5:	and    eax,DWORD PTR [rax]
   1400085f7:	add    BYTE PTR [rdi+0x24],ah
   1400085fa:	add    BYTE PTR [rax],al
   1400085fc:	rol    BYTE PTR [rbp+0x10010000],1
   140008602:	add    eax,DWORD PTR [rax]
   140008604:	adc    BYTE PTR [rdx+0xc],al
   140008607:	jo     0x140008614
   140008609:	(bad)  
   14000860a:	add    BYTE PTR [rax],al
   14000860c:	and    DWORD PTR [rip+0x34050002],eax        # 0x174058614
   140008612:	add    al,0x0
   140008614:	jo     0x14000863a
   140008616:	add    BYTE PTR [rax],al
   140008618:	popf   
   140008619:	and    al,0x0
   14000861b:	add    BYTE PTR [rax],al
   14000861d:	xchg   BYTE PTR [rax],al
   14000861f:	add    BYTE PTR [rcx],ah
   140008621:	add    BYTE PTR [rax],al
   140008623:	add    BYTE PTR [rax+0x24],dh
   140008626:	add    BYTE PTR [rax],al
   140008628:	popf   
   140008629:	and    al,0x0
   14000862b:	add    BYTE PTR [rax],al
   14000862d:	xchg   BYTE PTR [rax],al
   14000862f:	add    BYTE PTR [rcx],ah
   140008631:	add    BYTE PTR [rdx],al
   140008633:	add    BYTE PTR [rax],al
   140008635:	xor    al,0x4
   140008637:	add    BYTE PTR [rax+0x24],dh
   14000863a:	add    BYTE PTR [rax],al
   14000863c:	popf   
   14000863d:	and    al,0x0
   14000863f:	add    BYTE PTR [rax],al
   140008641:	xchg   BYTE PTR [rax],al
   140008643:	add    BYTE PTR [rcx],ah
   140008645:	add    BYTE PTR [rax],al
   140008647:	add    BYTE PTR [rax+0x24],dh
   14000864a:	add    BYTE PTR [rax],al
   14000864c:	popf   
   14000864d:	and    al,0x0
   14000864f:	add    BYTE PTR [rax],al
   140008651:	xchg   BYTE PTR [rax],al
   140008653:	add    BYTE PTR [rcx],bl
   140008655:	and    al,BYTE PTR [rax+rax*1]
   140008658:	adc    BYTE PTR [rcx],al
   14000865a:	mov    ecx,0x2700302
   14000865f:	xor    BYTE PTR [rax-0x4fffffc8],al
   140008665:	adc    eax,0x210000
   14000866a:	add    BYTE PTR [rax],al
   14000866c:	lock and al,0x0
   14000866f:	add    BYTE PTR [rsi+0x54000025],dh
   140008675:	xchg   BYTE PTR [rax],al
   140008677:	add    BYTE PTR [rcx],al
   140008679:	sbb    eax,0x341d000a
   14000867e:	adc    al,BYTE PTR [rax]
   140008680:	sbb    eax,0x17f01972
   140008685:	loopne 0x14000869c
   140008687:	rcl    BYTE PTR [rbx],1
   140008689:	rcl    BYTE PTR [rcx],0x70
   14000868c:	adc    BYTE PTR [rax+0xf],ah
   14000868f:	push   rax
   140008690:	and    DWORD PTR [rax],eax
   140008692:	add    BYTE PTR [rax],al
   140008694:	shl    BYTE PTR [rip+0x279b0000],0x0        # 0x1679b869b
   14000869b:	add    BYTE PTR [rax-0x7a],bh
   14000869e:	add    BYTE PTR [rax],al
   1400086a0:	sbb    DWORD PTR [rdx+rax*1],ebx
   1400086a3:	add    BYTE PTR [rdx],cl
   1400086a5:	add    DWORD PTR [rip+0x388000],ebx        # 0x1403906ab
   1400086ab:	add    al,dl
   1400086ad:	add    BYTE PTR [rax],al
   1400086af:	add    BYTE PTR [rcx],ah
   1400086b1:	sbb    al,0x8
   1400086b3:	add    BYTE PTR [rsp+rsi*2],bl
   1400086b6:	sbb    al,0x0
   1400086b8:	adc    al,0x64
   1400086ba:	and    DWORD PTR [rax],eax
   1400086bc:	or     al,0x54
   1400086be:	and    BYTE PTR [rax],al
   1400086c0:	add    al,0x34
   1400086c2:	(bad)  
   1400086c3:	add    BYTE PTR [rax-0x19ffffd9],dh
   1400086c9:	(bad)  
   1400086ca:	add    BYTE PTR [rax],al
   1400086cc:	movabs al,ds:0xb000000021000086
   1400086d5:	(bad)  
   1400086d6:	add    BYTE PTR [rax],al
   1400086d8:	out    0x27,al
   1400086da:	add    BYTE PTR [rax],al
   1400086dc:	movabs al,ds:0x80021000086
   1400086e5:	je     0x140008703
   1400086e7:	add    BYTE PTR [rax],al
   1400086e9:	and    DWORD PTR fs:[rax],eax
   1400086ec:	add    BYTE PTR [rax+riz*1+0x0],dl
   1400086f0:	add    BYTE PTR [rdi+rbx*1],dh
   1400086f3:	add    BYTE PTR [rax-0x19ffffd9],dh
   1400086f9:	(bad)  
   1400086fa:	add    BYTE PTR [rax],al
   1400086fc:	movabs al,ds:0x80021000086
   140008705:	je     0x140008723
   140008707:	add    BYTE PTR [rax],al
   140008709:	and    DWORD PTR fs:[rax],eax
   14000870c:	add    BYTE PTR [rax+riz*1+0x0],dl
   140008710:	add    BYTE PTR [rdi+rbx*1],dh
   140008713:	add    BYTE PTR [rax-0x19ffffd9],dh
   140008719:	(bad)  
   14000871a:	add    BYTE PTR [rax],al
   14000871c:	movabs al,ds:0x900031b19000086
   140008725:	add    DWORD PTR [rdx],ebp
   140008727:	add    BYTE PTR [rdx],al
   140008729:	jo     0x14000872b
   14000872b:	add    BYTE PTR [rax+0x40000038],al
   140008731:	add    DWORD PTR [rax],eax
   140008733:	add    BYTE PTR [rcx],ah
   140008735:	or     BYTE PTR [rdx],al
   140008737:	add    BYTE PTR [rax],cl
   140008739:	xor    al,0x2c
   14000873b:	add    BYTE PTR [rax],dl
   14000873d:	sub    DWORD PTR [rax],eax
   14000873f:	add    BYTE PTR [rdx],bh
   140008741:	sub    DWORD PTR [rax],eax
   140008743:	add    BYTE PTR [rax],ah
   140008745:	xchg   DWORD PTR [rax],eax
   140008747:	add    BYTE PTR [rcx],ah
   140008749:	add    BYTE PTR [rax],al
   14000874b:	add    BYTE PTR [rax],dl
   14000874d:	sub    DWORD PTR [rax],eax
   14000874f:	add    BYTE PTR [rdx],bh
   140008751:	sub    DWORD PTR [rax],eax
   140008753:	add    BYTE PTR [rax],ah
   140008755:	xchg   DWORD PTR [rax],eax
   140008757:	add    BYTE PTR [rcx],cl
   140008759:	add    al,0x1
   14000875b:	add    BYTE PTR [rdx+riz*2],al
   14000875e:	add    BYTE PTR [rax],al
   140008760:	(bad)  
   140008761:	cmp    BYTE PTR [rax],al
   140008763:	add    BYTE PTR [rcx],al
   140008765:	add    BYTE PTR [rax],al
   140008767:	add    BYTE PTR [rdx+rbp*1+0x0],dh
   14000876b:	add    BYTE PTR [rdx+0x3000002a],al
   140008771:	cmp    al,0x0
   140008773:	add    BYTE PTR [rdx+0x100002a],al
   140008779:	(bad)  
   14000877a:	add    al,BYTE PTR [rax]
   14000877c:	(bad)  
   14000877d:	xor    al,BYTE PTR [rdx]
   14000877f:	push   rax
   140008780:	sbb    DWORD PTR [rdi],ebx
   140008782:	add    eax,0x15340d00
   140008787:	add    BYTE PTR [rip+0x6001201],cl        # 0x14600998e
   14000878d:	jo     0x14000878f
   14000878f:	add    BYTE PTR [rax-0x7fffffc8],al
   140008795:	add    BYTE PTR [rax],al
   140008797:	add    BYTE PTR [rcx],ah
   140008799:	add    BYTE PTR [rax],al
   14000879b:	add    al,dh
   14000879d:	sub    al,BYTE PTR [rax]
   14000879f:	add    BYTE PTR [rdx-0x7fffffd5],bh
   1400087a5:	xchg   DWORD PTR [rax],eax
   1400087a7:	add    BYTE PTR [rcx],al
   1400087a9:	add    al,0x1
   1400087ab:	add    BYTE PTR [rdx+rax*4],al
   1400087ae:	add    BYTE PTR [rax],al
   1400087b0:	add    DWORD PTR [rcx+rax*1],eax
   1400087b3:	add    BYTE PTR [rdx+riz*4],al
   1400087b6:	add    BYTE PTR [rax],al
   1400087b8:	adc    DWORD PTR [rbx],edx
   1400087ba:	add    al,BYTE PTR [rax]
   1400087bc:	or     dl,BYTE PTR [rdx+0x6]
   1400087bf:	xor    BYTE PTR [rdx+0x38],dh
   1400087c2:	add    BYTE PTR [rax],al
   1400087c4:	mov    eax,0xff00006c
   1400087c9:	(bad)  
   1400087ca:	(bad)  
   1400087cb:	inc    DWORD PTR [rcx+0x48]
   1400087ce:	add    BYTE PTR [rax],al
   1400087d0:	sbb    BYTE PTR [rax+0x0],cl
   1400087d3:	add    bh,bh
   1400087d5:	(bad)  
   1400087d6:	(bad)  
   1400087d7:	jmp    FWORD PTR [rsi]
   1400087d9:	rex.W add BYTE PTR [rax],al
   1400087dc:	add    BYTE PTR [rax],al
   1400087de:	add    BYTE PTR [rax],al
   1400087e0:	xor    al,0x48
   1400087e2:	add    BYTE PTR [rax],al
   1400087e4:	(bad)  
   1400087e5:	(bad)  
   1400087e6:	(bad)  
   1400087e7:	inc    DWORD PTR [rcx]
   1400087e9:	or     al,BYTE PTR [rax+rax*1]
   1400087ec:	or     dl,BYTE PTR [rax+rcx*1+0x0]
   1400087f0:	or     dh,BYTE PTR [rdx]
   1400087f2:	(bad)  
   1400087f3:	(bad)  
   1400087f4:	and    DWORD PTR [rdx],ecx
   1400087f6:	add    al,0x0
   1400087f8:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   1400087fc:	add    eax,0xb0000634
   140008801:	rex.W add BYTE PTR [rax],al
   140008804:	int3   
   140008805:	rex.W add BYTE PTR [rax],al
   140008808:	call   0x161008894
   14000880d:	add    BYTE PTR [rax],al
   14000880f:	add    BYTE PTR [rax-0x33ffffb8],dh
   140008815:	rex.W add BYTE PTR [rax],al
   140008818:	call   0x1510088a4
   14000881d:	sbb    BYTE PTR [rax+rax*1],al
   140008820:	sbb    BYTE PTR [rcx+rcx*1],dh
   140008823:	add    BYTE PTR [rdx],cl
   140008825:	push   rdx
   140008826:	(bad)  
   140008827:	jo     0x14000889b
   140008829:	cmp    BYTE PTR [rax],al
   14000882b:	add    BYTE PTR [rax-0xffff94],dl
   140008831:	(bad)  
   140008832:	(bad)  
   140008833:	inc    edi
   140008835:	rex.WB add BYTE PTR [r8],al
   140008838:	add    BYTE PTR [rax],al
   14000883a:	add    BYTE PTR [rax],al
   14000883c:	xlat   BYTE PTR ds:[rbx]
   14000883d:	rex.WB add BYTE PTR [r8],al
   140008840:	(bad)  
   140008841:	(bad)  
   140008842:	(bad)  
   140008843:	jmp    rdi
   140008845:	rex.WB add BYTE PTR [r8],al
   140008848:	cmp    BYTE PTR [rcx+0x0],cl
   14000884b:	add    bh,bh
   14000884d:	(bad)  
   14000884e:	(bad)  
   14000884f:	call   QWORD PTR [rbx+0x49]
   140008852:	add    BYTE PTR [rax],al
   140008854:	add    DWORD PTR [rax],eax
   140008856:	add    BYTE PTR [rax],al
   140008858:	pushf  
   140008859:	rex.WB add BYTE PTR [r8],al
   14000885c:	add    BYTE PTR [rax],al
   14000885e:	add    BYTE PTR [rax],al
   140008860:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008861:	rex.WB add BYTE PTR [r8],al
   140008864:	(bad)  
   140008865:	(bad)  
   140008866:	(bad)  
   140008867:	jmp    FWORD PTR [rcx+rcx*2+0x20000]
   14000886e:	add    BYTE PTR [rax],al
   140008870:	mov    ch,0x49
   140008872:	add    BYTE PTR [rax],al
   140008874:	(bad)  
   140008875:	(bad)  
   140008876:	(bad)  
   140008877:	inc    DWORD PTR [rcx]
   140008879:	add    al,0x1
   14000887b:	add    BYTE PTR [rdx+riz*2],al
   14000887e:	add    BYTE PTR [rax],al
   140008880:	or     DWORD PTR [rax],ebx
   140008882:	or     DWORD PTR [rax],eax
   140008884:	sbb    BYTE PTR [rdx+rbx*1+0x0],dh
   140008888:	sbb    BYTE PTR [rcx+rbx*1+0x0],ah
   14000888c:	sbb    BYTE PTR [rax+rbx*1],dh
   14000888f:	add    BYTE PTR [rax],bl
   140008891:	add    DWORD PTR [rsi],edx
   140008893:	add    BYTE PTR [rcx],dl
   140008895:	lock add BYTE PTR [rax],al
   140008898:	(bad)  
   140008899:	cmp    BYTE PTR [rax],al
   14000889b:	add    BYTE PTR [rcx],al
   14000889d:	add    BYTE PTR [rax],al
   14000889f:	add    al,al
   1400088a1:	(bad)  
   1400088a2:	add    BYTE PTR [rax],al
   1400088a4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400088a5:	xor    DWORD PTR [rax],eax
   1400088a7:	add    BYTE PTR [rsi+0x3c],dl
   1400088aa:	add    BYTE PTR [rax],al
   1400088ac:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400088ad:	xor    DWORD PTR [rax],eax
   1400088af:	add    BYTE PTR [rcx],al
   1400088b1:	(bad)  
   1400088b2:	add    al,BYTE PTR [rax]
   1400088b4:	(bad)  
   1400088b5:	xor    al,BYTE PTR [rdx]
   1400088b7:	push   rax
   1400088b8:	add    DWORD PTR [rax],eax
   1400088ba:	add    BYTE PTR [rax],al
   1400088bc:	adc    DWORD PTR [rdx],ecx
   1400088be:	add    al,0x0
   1400088c0:	or     dh,BYTE PTR [rsi+rax*1]
   1400088c3:	add    BYTE PTR [rdx],cl
   1400088c5:	xor    al,BYTE PTR [rsi]
   1400088c7:	jo     0x1400088df
   1400088c9:	cmp    BYTE PTR [rax],al
   1400088cb:	add    BYTE PTR [rcx],al
   1400088cd:	add    BYTE PTR [rax],al
   1400088cf:	add    BYTE PTR [rbp+0x32],dh
   1400088d2:	add    BYTE PTR [rax],al
   1400088d4:	mov    edx,0x7a000032
   1400088d9:	cmp    al,0x0
   1400088db:	add    BYTE PTR [rax],al
   1400088dd:	add    BYTE PTR [rax],al
   1400088df:	add    BYTE PTR [rcx],al
   1400088e1:	or     al,0x2
   1400088e3:	add    BYTE PTR [rcx+rax*1],cl
   1400088e6:	adc    DWORD PTR [rax],eax
   1400088e8:	or     DWORD PTR [rcx+rax*1],eax
   1400088eb:	add    BYTE PTR [rdx+riz*1],al
   1400088ee:	add    BYTE PTR [rax],al
   1400088f0:	(bad)  
   1400088f1:	cmp    BYTE PTR [rax],al
   1400088f3:	add    BYTE PTR [rcx],al
   1400088f5:	add    BYTE PTR [rax],al
   1400088f7:	add    BYTE PTR [rbp+rsi*1+0x35d20000],bl
   1400088fe:	add    BYTE PTR [rax],al
   140008900:	add    DWORD PTR [rax],eax
   140008902:	add    BYTE PTR [rax],al
   140008904:	shl    BYTE PTR [rip+0xa090000],cl        # 0x14a09890a
   14000890a:	add    al,0x0
   14000890c:	or     dh,BYTE PTR [rsi+rax*1]
   14000890f:	add    BYTE PTR [rdx],cl
   140008911:	xor    al,BYTE PTR [rsi]
   140008913:	jo     0x14000892b
   140008915:	cmp    BYTE PTR [rax],al
   140008917:	add    BYTE PTR [rcx],al
   140008919:	add    BYTE PTR [rax],al
   14000891b:	add    BYTE PTR [rbp-0x2fffffca],bl
   140008921:	add    BYTE PTR ss:[rax],al
   140008924:	movabs al,ds:0x1000036d000003c
   14000892d:	or     eax,0x340d0004
   140008932:	or     DWORD PTR [rax],eax
   140008934:	or     eax,0x1500632
   140008939:	add    BYTE PTR [rax],al
   14000893b:	add    BYTE PTR [rcx],bl
   14000893d:	and    DWORD PTR [rip+0x14621800],eax        # 0x15462a143
   140008943:	loopne 0x140008957
   140008945:	jo     0x140008958
   140008947:	(bad)  
   140008948:	adc    BYTE PTR [rax],dh
   14000894a:	add    BYTE PTR [rax],al
   14000894c:	jb     0x140008986
   14000894e:	add    BYTE PTR [rax],al
   140008950:	movabs al,ds:0xffffffff00006b
   140008959:	add    BYTE PTR [rax],al
   14000895b:	add    bh,bh
   14000895d:	(bad)  
   14000895e:	(bad)  
   14000895f:	inc    DWORD PTR [rax]
   140008961:	add    BYTE PTR [rax],al
   140008963:	add    BYTE PTR [rcx],al
   140008965:	add    BYTE PTR [rax],al
   140008967:	add    BYTE PTR [rax],al
   140008969:	add    BYTE PTR [rax],al
   14000896b:	add    BYTE PTR [rcx],al
	...
   140008979:	add    BYTE PTR [rax],al
   14000897b:	add    BYTE PTR [rbx],al
   14000897d:	add    BYTE PTR [rax],al
   14000897f:	add    BYTE PTR [rcx],al
   140008981:	add    BYTE PTR [rax],al
   140008983:	add    BYTE PTR [rcx+rcx*4+0x20000],bl
   14000898a:	add    BYTE PTR [rax],al
   14000898c:	add    al,BYTE PTR [rax]
   14000898e:	add    BYTE PTR [rax],al
   140008990:	add    eax,DWORD PTR [rax]
   140008992:	add    BYTE PTR [rax],al
   140008994:	add    DWORD PTR [rax],eax
   140008996:	add    BYTE PTR [rax],al
   140008998:	mov    al,0x89
   14000899a:	add    BYTE PTR [rax],al
   14000899c:	add    BYTE PTR [rax],al
	...
   1400089a7:	add    BYTE PTR [rdx+0x3800004c],al
   1400089ad:	add    BYTE PTR [rax],al
   1400089af:	add    BYTE PTR [rax+0x0],al
	...
   1400089ba:	add    BYTE PTR [rax],al
   1400089bc:	(bad)  
   1400089bd:	rex.WR add BYTE PTR [rax],r8b
   1400089c0:	cmp    BYTE PTR [rax],al
   1400089c2:	add    BYTE PTR [rax],al
   1400089c4:	or     BYTE PTR [rbx+0x0],0x0
   1400089c8:	(bad)  
   1400089c9:	(bad)  
   1400089ca:	(bad)  
   1400089cb:	(bad)  
   1400089cc:	out    dx,al
   1400089cd:	rex.WXB add BYTE PTR [r8],al
   1400089d0:	add    BYTE PTR [rax],al
   1400089d2:	add    BYTE PTR [rax],al
   1400089d4:	adc    al,0x4c
   1400089d6:	add    BYTE PTR [rax],al
   1400089d8:	(bad)  
   1400089d9:	(bad)  
   1400089da:	(bad)  
   1400089db:	inc    DWORD PTR [rdx+0x4c]
   1400089e1:	add    BYTE PTR [rax],al
   1400089e3:	add    BYTE PTR [rdi+0x100004c],cl
   1400089e9:	add    BYTE PTR [rax],al
   1400089eb:	add    BYTE PTR [rdi+0x200004c],dl
   1400089f1:	add    BYTE PTR [rax],al
   1400089f3:	add    BYTE PTR [rcx+0x4c],bh
   1400089f9:	add    BYTE PTR [rax],al
   1400089fb:	add    ah,dl
   1400089fd:	rex.WR add BYTE PTR [rax],r8b
   140008a00:	add    eax,DWORD PTR [rax]
   140008a02:	add    BYTE PTR [rax],al
   140008a04:	sbb    DWORD PTR [rdx],ecx
   140008a06:	add    al,BYTE PTR [rax]
   140008a08:	or     dh,BYTE PTR [rdx]
   140008a0a:	(bad)  
   140008a0b:	push   rax
   140008a0c:	jb     0x140008a46
   140008a0e:	add    BYTE PTR [rax],al
   140008a10:	movabs al,ds:0xa00020a1900006b
   140008a19:	xor    al,BYTE PTR [rsi]
   140008a1b:	push   rax
   140008a1c:	jb     0x140008a56
   140008a1e:	add    BYTE PTR [rax],al
   140008a20:	movabs al,ds:0xa00040a0100006b
   140008a29:	xor    al,0x7
   140008a2b:	add    BYTE PTR [rdx],cl
   140008a2d:	xor    al,BYTE PTR [rsi]
   140008a2f:	jo     0x140008a52
   140008a31:	add    eax,0x64050002
   140008a36:	(bad)  
   140008a37:	add    BYTE PTR [rax+0x4d],ah
   140008a3a:	add    BYTE PTR [rax],al
   140008a3c:	jnp    0x140008a8b
   140008a3e:	add    BYTE PTR [rax],al
   140008a40:	and    al,0x8a
   140008a42:	add    BYTE PTR [rax],al
   140008a44:	and    DWORD PTR [rax],eax
   140008a46:	add    BYTE PTR [rax],al
   140008a48:	(bad)  
   140008a49:	rex.WRB add BYTE PTR [r8],r8b
   140008a4c:	jnp    0x140008a9b
   140008a4e:	add    BYTE PTR [rax],al
   140008a50:	and    al,0x8a
   140008a52:	add    BYTE PTR [rax],al
   140008a54:	add    DWORD PTR [rsi],eax
   140008a56:	add    al,BYTE PTR [rax]
   140008a58:	(bad)  
   140008a59:	xor    al,BYTE PTR [rdx]
   140008a5b:	xor    BYTE PTR [rcx],ah
   140008a5d:	add    eax,0x74050002
   140008a62:	(bad)  
   140008a63:	add    ah,dh
   140008a65:	rex.WR add BYTE PTR [rax],r8b
   140008a68:	adc    eax,0x5400004d
   140008a6d:	mov    al,BYTE PTR [rax]
   140008a6f:	add    BYTE PTR [rcx],ah
   140008a71:	add    BYTE PTR [rdx],al
   140008a73:	add    BYTE PTR [rax],al
   140008a75:	je     0x140008a7d
   140008a77:	add    ah,dh
   140008a79:	rex.WR add BYTE PTR [rax],r8b
   140008a7c:	adc    eax,0x5400004d
   140008a81:	mov    al,BYTE PTR [rax]
   140008a83:	add    BYTE PTR [rcx],al
   140008a85:	or     al,BYTE PTR [rax+rax*1]
   140008a88:	or     dh,BYTE PTR [rsi+rax*1]
   140008a8b:	add    BYTE PTR [rdx],cl
   140008a8d:	xor    al,BYTE PTR [rsi]
   140008a8f:	jo     0x140008a92
   140008a91:	(bad)  
   140008a92:	add    al,BYTE PTR [rax]
   140008a94:	(bad)  
   140008a95:	push   rdx
   140008a96:	add    dh,BYTE PTR [rax]
   140008a98:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b4158aa6
   140008a9e:	or     al,BYTE PTR [rax]
   140008aa0:	adc    eax,0x15000964
   140008aa5:	xor    al,0x8
   140008aa7:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e09bff
   140008aad:	add    al,0x1
   140008aaf:	add    BYTE PTR [rdx+rax*2],al
   140008ab2:	add    BYTE PTR [rax],al
   140008ab4:	and    DWORD PTR [rip+0x34050002],eax        # 0x174058abc
   140008aba:	add    al,0x0
   140008abc:	movabs al,ds:0xac00004abd00004a
   140008ac5:	mov    al,BYTE PTR [rax]
   140008ac7:	add    BYTE PTR [rcx],ah
   140008ac9:	add    BYTE PTR [rdx],al
   140008acb:	add    BYTE PTR [rax],al
   140008acd:	xor    al,0x4
   140008acf:	add    BYTE PTR [rax-0x42ffffb6],ah
   140008ad5:	rex.WX add BYTE PTR [rax],al
   140008ad8:	lods   al,BYTE PTR ds:[rsi]
   140008ad9:	mov    al,BYTE PTR [rax]
   140008adb:	add    BYTE PTR [rcx],ah
   140008add:	add    BYTE PTR [rax],al
   140008adf:	add    BYTE PTR [rax-0x42ffffb6],ah
   140008ae5:	rex.WX add BYTE PTR [rax],al
   140008ae8:	lods   al,BYTE PTR ds:[rsi]
   140008ae9:	mov    al,BYTE PTR [rax]
   140008aeb:	add    BYTE PTR [rcx],al
   140008aed:	(bad)  
   140008aee:	or     al,0x0
   140008af0:	(bad)  
   140008af1:	je     0x140008b04
   140008af3:	add    BYTE PTR [rsi],bl
   140008af5:	adc    BYTE PTR fs:[rax],al
   140008af8:	(bad)  
   140008af9:	push   rsp
   140008afa:	ltr    WORD PTR [rsi]
   140008afd:	xor    al,0xe
   140008aff:	add    BYTE PTR [rsi],bl
   140008b01:	xchg   edx,eax
   140008b02:	sbb    dh,al
   140008b04:	sbb    al,ah
   140008b06:	(bad)  
   140008b07:	rol    BYTE PTR [rcx],0x1a
   140008b0a:	or     al,BYTE PTR [rax]
   140008b0c:	sbb    dh,BYTE PTR [rcx+rcx*1+0x0]
   140008b10:	sbb    ah,BYTE PTR [rax+rcx*1+0x0]
   140008b14:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   140008b18:	sbb    dh,BYTE PTR [rsi+rax*1]
   140008b1b:	add    BYTE PTR [rdx],bl
   140008b1d:	xor    dl,BYTE PTR [rsi]
   140008b1f:	loopne 0x140008b22
   140008b21:	sbb    BYTE PTR [rdx],cl
   140008b23:	add    BYTE PTR [rax],bl
   140008b25:	or     eax,DWORD PTR fs:[rax]
   140008b28:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140008b2c:	sbb    BYTE PTR [rcx+rcx*1],dh
   140008b2f:	add    BYTE PTR [rax],bl
   140008b31:	xor    dl,BYTE PTR [rax+rsi*8]
   140008b34:	adc    ah,al
   140008b36:	adc    BYTE PTR [rax+0x1],dh
   140008b39:	adc    eax,0x74150008
   140008b3e:	or     DWORD PTR [rax],eax
   140008b40:	adc    eax,0x15000864
   140008b45:	xor    al,0x7
   140008b47:	add    BYTE PTR [rip+0x19e01132],dl        # 0x159e09c7f
   140008b4d:	and    BYTE PTR [rdi],al
   140008b4f:	add    BYTE PTR [rsi],cl
   140008b51:	add    DWORD PTR [rdx+0x0],ecx
   140008b54:	(bad)  
   140008b55:	loopne 0x140008b5c
   140008b57:	jo     0x140008b5d
   140008b59:	(bad)  
   140008b5a:	add    edx,DWORD PTR [rax+0x2]
   140008b5d:	xor    BYTE PTR [rax],al
   140008b5f:	add    BYTE PTR [rax+0x40000038],al
   140008b65:	add    al,BYTE PTR [rax]
   140008b67:	add    BYTE PTR [rcx],al
   140008b69:	adc    BYTE PTR [rbx],al
   140008b6b:	add    BYTE PTR [rax],dl
   140008b6d:	rex.X or al,0x70
   140008b70:	or     esi,DWORD PTR [rax]
   140008b72:	add    BYTE PTR [rax],al
   140008b74:	add    DWORD PTR [rdx],ecx
   140008b76:	add    al,0x0
   140008b78:	or     dh,BYTE PTR [rdi+rax*1]
   140008b7b:	add    BYTE PTR [rdx],cl
   140008b7d:	xor    al,BYTE PTR [rsi]
   140008b7f:	(bad)  
   140008b80:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4058b88
   140008b86:	(bad)  
   140008b87:	add    ah,dl
   140008b89:	pop    rdx
   140008b8a:	add    BYTE PTR [rax],al
   140008b8c:	std    
   140008b8d:	pop    rdx
   140008b8e:	add    BYTE PTR [rax],al
   140008b90:	je     0x140008b1d
   140008b92:	add    BYTE PTR [rax],al
   140008b94:	and    DWORD PTR [rax],eax
   140008b96:	add    BYTE PTR [rax],al
   140008b98:	(bad)  
   140008b99:	pop    rdx
   140008b9a:	add    BYTE PTR [rax],al
   140008b9c:	std    
   140008b9d:	pop    rdx
   140008b9e:	add    BYTE PTR [rax],al
   140008ba0:	je     0x140008b2d
   140008ba2:	add    BYTE PTR [rax],al
   140008ba4:	add    DWORD PTR [rax+rcx*1],edx
   140008ba7:	add    BYTE PTR [rsp+riz*2],dl
   140008baa:	or     BYTE PTR [rax],al
   140008bac:	adc    al,0x54
   140008bae:	(bad)  
   140008baf:	add    BYTE PTR [rsp+rsi*1],dl
   140008bb2:	(bad)  
   140008bb3:	add    BYTE PTR [rdx+rsi*1],dl
   140008bb6:	adc    BYTE PTR [rax+0x1],dh
   140008bb9:	(bad)  
   140008bba:	add    al,BYTE PTR [rax]
   140008bbc:	(bad)  
   140008bbd:	xor    al,BYTE PTR [rdx]
   140008bbf:	jo     0x140008be2
   140008bc1:	add    eax,0x34050002
   140008bc6:	(bad)  
   140008bc7:	add    BYTE PTR [rax+0x53],dl
   140008bca:	add    BYTE PTR [rax],al
   140008bcc:	(bad)  
   140008bcd:	push   rbx
   140008bce:	add    BYTE PTR [rax],al
   140008bd0:	mov    eax,0x2100008b
   140008bd5:	add    BYTE PTR [rax],al
   140008bd7:	add    BYTE PTR [rax+0x53],dl
   140008bda:	add    BYTE PTR [rax],al
   140008bdc:	(bad)  
   140008bdd:	push   rbx
   140008bde:	add    BYTE PTR [rax],al
   140008be0:	mov    eax,0x100008b
   140008be5:	add    al,0x1
   140008be7:	add    BYTE PTR [rdx+rax*2],al
   140008bea:	add    BYTE PTR [rax],al
   140008bec:	sbb    DWORD PTR [rax],esp
   140008bee:	add    al,BYTE PTR [rax]
   140008bf0:	(bad)  
   140008bf1:	add    DWORD PTR [rbx],edx
   140008bf3:	add    BYTE PTR [rax-0x7fffffc8],al
   140008bf9:	add    BYTE PTR [rax],al
   140008bfb:	add    BYTE PTR [rcx],al
   140008bfd:	sbb    DWORD PTR [rdx],ecx
   140008bff:	add    BYTE PTR [rcx],bl
   140008c01:	je     0x140008c0c
   140008c03:	add    BYTE PTR [rcx],bl
   140008c05:	or     BYTE PTR fs:[rax],al
   140008c08:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140008c0c:	sbb    DWORD PTR [rsi+rax*1],esi
   140008c0f:	add    BYTE PTR [rcx],bl
   140008c11:	xor    dl,BYTE PTR [rip+0xe0]        # 0x140008cf7
   140008c17:	add    BYTE PTR [rcx],al
   140008c19:	add    al,0x1
   140008c1b:	add    BYTE PTR [rdx+rdx*1],al
   140008c1e:	add    BYTE PTR [rax],al
   140008c20:	add    BYTE PTR [rax],al
   140008c22:	add    BYTE PTR [rax],al
   140008c24:	and    BYTE PTR [rax+0x0],0x0
   140008c2b:	add    bh,bh
   140008c2d:	(bad)  
   140008c2e:	(bad)  
   140008c2f:	inc    DWORD PTR [rax]
   140008c31:	add    BYTE PTR [rax],al
   140008c33:	add    BYTE PTR [rax-0x38000000],ah
   140008c39:	push   rdx
	...
   140008c46:	add    BYTE PTR [rax],al
   140008c48:	add    DWORD PTR [rax],eax
   140008c4a:	add    BYTE PTR [rax],al
   140008c4c:	and    BYTE PTR [rax+rax*1+0x0],cl
	...
   140008c5b:	add    BYTE PTR [rbx+rdx*2+0x0],cl
   140008c62:	add    BYTE PTR [rax],al
   140008c64:	rex.W mov WORD PTR [rax],es
	...
   140008c7b:	add    BYTE PTR [rax+0xa1],al
   140008c81:	add    BYTE PTR [rax],al
   140008c83:	add    bh,bh
   140008c85:	(bad)  
   140008c86:	(bad)  
   140008c87:	inc    DWORD PTR [rax]
   140008c89:	add    BYTE PTR [rax],al
   140008c8b:	add    BYTE PTR [rax+rax*1],al
	...
   140008c9e:	add    BYTE PTR [rax],al
   140008ca0:	add    DWORD PTR [rax],eax
   140008ca2:	add    BYTE PTR [rax],al
   140008ca4:	js     0x140008c32
	...
   140008cba:	add    BYTE PTR [rax],al
   140008cbc:	movabs al,ds:0x8c
	...
   140008ccd:	add    BYTE PTR [rax],al
   140008ccf:	add    BYTE PTR [rax],bh
   140008cd1:	mov    es,WORD PTR [rax]
	...
   140008cdb:	add    BYTE PTR [rsi-0x6e],dl
   140008cde:	add    BYTE PTR [rax],al
   140008ce0:	add    BYTE PTR [rax+0x0],ah
   140008ce3:	add    BYTE PTR [rax-0x72],ah
	...
   140008cee:	add    BYTE PTR [rax],al
   140008cf0:	ret    0x93
   140008cf3:	add    BYTE PTR [rax],ch
   140008cf5:	(bad)  
   140008cf6:	add    BYTE PTR [rax],al
   140008cf8:	add    BYTE PTR [rdi+0x0],cl
   140008cfe:	add    BYTE PTR [rax],al
   140008d00:	add    BYTE PTR [rax],al
   140008d02:	add    BYTE PTR [rax],al
   140008d04:	mov    BYTE PTR [rbp+0x60c80000],dl
   140008d0a:	add    BYTE PTR [rax],al
   140008d0c:	test   al,0x90
	...
   140008d16:	add    BYTE PTR [rax],al
   140008d18:	push   rax
   140008d19:	xchg   esi,eax
   140008d1a:	add    BYTE PTR [rax],al
   140008d1c:	jo     0x140008d80
   140008d1e:	add    BYTE PTR [rax],al
   140008d20:	loopne 0x140008cb2
	...
   140008d2a:	add    BYTE PTR [rax],al
   140008d2c:	jb     0x140008cc5
   140008d2e:	add    BYTE PTR [rax],al
   140008d30:	test   al,0x62
   140008d32:	add    BYTE PTR [rax],al
   140008d34:	fmul   DWORD PTR [rdi+0x0]
   140008d3a:	add    BYTE PTR [rax],al
   140008d3c:	add    BYTE PTR [rax],al
   140008d3e:	add    BYTE PTR [rax],al
   140008d40:	and    BYTE PTR [rcx+0x61a00000],bl
   140008d46:	add    BYTE PTR [rax],al
   140008d48:	(bad)  
   140008d49:	nop
	...
   140008d52:	add    BYTE PTR [rax],al
   140008d54:	rex cdq 
   140008d56:	add    BYTE PTR [rax],al
   140008d58:	sub    BYTE PTR [rdx+0x0],ah
   140008d5b:	add    BYTE PTR [rax],cl
   140008d5d:	nop
	...
   140008d66:	add    BYTE PTR [rax],al
   140008d68:	(bad)  
   140008d69:	cdq    
   140008d6a:	add    BYTE PTR [rax],al
   140008d6c:	shl    BYTE PTR [rcx+0x0],1
   140008d6f:	add    BYTE PTR [rax-0x70],al
	...
   140008d7a:	add    BYTE PTR [rax],al
   140008d7c:	mov    WORD PTR [rcx+0x62080000],ds
   140008d82:	add    BYTE PTR [rax],al
   140008d84:	lock pop QWORD PTR [rax]
	...
   140008d8f:	add    BYTE PTR [rdx-0x47ffff67],dh
   140008d95:	(bad)  
   140008d96:	add    BYTE PTR [rax],al
   140008d98:	xor    BYTE PTR [rax+0x0],dl
   140008d9e:	add    BYTE PTR [rax],al
   140008da0:	add    BYTE PTR [rax],al
   140008da2:	add    BYTE PTR [rax],al
   140008da4:	fcomp  QWORD PTR [rcx+0x61f80000]
   140008daa:	add    BYTE PTR [rax],al
   140008dac:	jo     0x140008d3e
	...
   140008db6:	add    BYTE PTR [rax],al
   140008db8:	add    BYTE PTR [rdx+0x62380000],bl
   140008dbe:	add    BYTE PTR [rax],al
   140008dc0:	mov    BYTE PTR [rax+0x0],dl
   140008dc6:	add    BYTE PTR [rax],al
   140008dc8:	add    BYTE PTR [rax],al
   140008dca:	add    BYTE PTR [rax],al
   140008dcc:	and    al,0x9a
   140008dce:	add    BYTE PTR [rax],al
   140008dd0:	push   rax
   140008dd1:	(bad)  
   140008dd2:	add    BYTE PTR [rax],al
   140008dd4:	lock mov es,WORD PTR [rax]
	...
   140008ddf:	add    BYTE PTR [rax-0x66],ah
   140008de2:	add    BYTE PTR [rax],al
   140008de4:	mov    eax,0xf8000060
   140008de9:	xchg   ecx,eax
	...
   140008df2:	add    BYTE PTR [rax],al
   140008df4:	jl     0x140008d90
   140008df6:	add    BYTE PTR [rax],al
   140008df8:	shl    BYTE PTR [rbx+0x0],0x0
   140008dfc:	cwde   
   140008dfd:	nop
	...
   140008e06:	add    BYTE PTR [rax],al
   140008e08:	movabs al,ds:0xe00000626000009a
   140008e11:	xchg   ecx,eax
	...
   140008e1a:	add    BYTE PTR [rax],al
   140008e1c:	and    bl,BYTE PTR [rbx+0x63a80000]
	...
   140008e36:	add    BYTE PTR [rax],al
   140008e38:	(bad)  
   140008e39:	xchg   edx,eax
   140008e3a:	add    BYTE PTR [rax],al
   140008e3c:	add    BYTE PTR [rax],al
   140008e3e:	add    BYTE PTR [rax],al
   140008e40:	cs xchg edx,eax
   140008e42:	add    BYTE PTR [rax],al
   140008e44:	add    BYTE PTR [rax],al
   140008e46:	add    BYTE PTR [rax],al
   140008e48:	rex xchg edx,eax
   140008e4a:	add    BYTE PTR [rax],al
   140008e4c:	add    BYTE PTR [rax],al
   140008e4e:	add    BYTE PTR [rax],al
   140008e50:	or     BYTE PTR [rdx+0x0],dl
	...
   140008e5e:	add    BYTE PTR [rax],al
   140008e60:	fs xchg edx,eax
   140008e62:	add    BYTE PTR [rax],al
   140008e64:	add    BYTE PTR [rax],al
   140008e66:	add    BYTE PTR [rax],al
   140008e68:	jbe    0x140008dfc
   140008e6a:	add    BYTE PTR [rax],al
   140008e6c:	add    BYTE PTR [rax],al
   140008e6e:	add    BYTE PTR [rax],al
   140008e70:	mov    WORD PTR [rdx+0x0],ss
   140008e76:	add    BYTE PTR [rax],al
   140008e78:	movabs al,ds:0xb200000000000092
   140008e81:	xchg   edx,eax
   140008e82:	add    BYTE PTR [rax],al
   140008e84:	add    BYTE PTR [rax],al
   140008e86:	add    BYTE PTR [rax],al
   140008e88:	enter  0x92,0x0
   140008e8c:	add    BYTE PTR [rax],al
   140008e8e:	add    BYTE PTR [rax],al
   140008e90:	fcom   DWORD PTR [rdx+0x0]
   140008e96:	add    BYTE PTR [rax],al
   140008e98:	out    0x92,al
   140008e9a:	add    BYTE PTR [rax],al
   140008e9c:	add    BYTE PTR [rax],al
   140008e9e:	add    BYTE PTR [rax],al
   140008ea0:	cld    
   140008ea1:	xchg   edx,eax
   140008ea2:	add    BYTE PTR [rax],al
   140008ea4:	add    BYTE PTR [rax],al
   140008ea6:	add    BYTE PTR [rax],al
   140008ea8:	adc    dl,BYTE PTR [rbx+0x0]
   140008eae:	add    BYTE PTR [rax],al
   140008eb0:	and    al,0x93
   140008eb2:	add    BYTE PTR [rax],al
   140008eb4:	add    BYTE PTR [rax],al
   140008eb6:	add    BYTE PTR [rax],al
   140008eb8:	xor    al,0x93
   140008eba:	add    BYTE PTR [rax],al
   140008ebc:	add    BYTE PTR [rax],al
   140008ebe:	add    BYTE PTR [rax],al
   140008ec0:	push   rax
   140008ec1:	xchg   ebx,eax
   140008ec2:	add    BYTE PTR [rax],al
   140008ec4:	add    BYTE PTR [rax],al
   140008ec6:	add    BYTE PTR [rax],al
   140008ec8:	pop    rsi
   140008ec9:	xchg   ebx,eax
   140008eca:	add    BYTE PTR [rax],al
   140008ecc:	add    BYTE PTR [rax],al
   140008ece:	add    BYTE PTR [rax],al
   140008ed0:	jp     0x140008e65
   140008ed2:	add    BYTE PTR [rax],al
   140008ed4:	add    BYTE PTR [rax],al
   140008ed6:	add    BYTE PTR [rax],al
   140008ed8:	xchg   edx,eax
   140008ed9:	xchg   ebx,eax
   140008eda:	add    BYTE PTR [rax],al
   140008edc:	add    BYTE PTR [rax],al
   140008ede:	add    BYTE PTR [rax],al
   140008ee0:	stos   BYTE PTR es:[rdi],al
   140008ee1:	xchg   ebx,eax
	...
   140008eee:	add    BYTE PTR [rax],al
   140008ef0:	rex.WR (bad) 
	...
   140008efe:	add    BYTE PTR [rax],al
   140008f00:	(bad)  
   140008f01:	xchg   esp,eax
   140008f02:	add    BYTE PTR [rax],al
   140008f04:	add    BYTE PTR [rax],al
   140008f06:	add    BYTE PTR [rax],al
   140008f08:	and    BYTE PTR [rax+rax*1+0x0],dl
   140008f0f:	add    BYTE PTR [rsi],ch
   140008f11:	xchg   esp,eax
   140008f12:	add    BYTE PTR [rax],al
   140008f14:	add    BYTE PTR [rax],al
   140008f16:	add    BYTE PTR [rax],al
   140008f18:	rex.X xchg esp,eax
   140008f1a:	add    BYTE PTR [rax],al
   140008f1c:	add    BYTE PTR [rax],al
   140008f1e:	add    BYTE PTR [rax],al
   140008f20:	push   rsp
   140008f21:	xchg   esp,eax
   140008f22:	add    BYTE PTR [rax],al
   140008f24:	add    BYTE PTR [rax],al
   140008f26:	add    BYTE PTR [rax],al
   140008f28:	push   0x94
   140008f2d:	add    BYTE PTR [rax],al
   140008f2f:	add    BYTE PTR [rdx-0x6c],bh
   140008f32:	add    BYTE PTR [rax],al
   140008f34:	add    BYTE PTR [rax],al
   140008f36:	add    BYTE PTR [rax],al
   140008f38:	mov    WORD PTR [rax+rax*1+0x0],ss
   140008f3f:	add    BYTE PTR [rax+0x94],ah
   140008f45:	add    BYTE PTR [rax],al
   140008f47:	add    BYTE PTR [rdx+0x94],bh
   140008f4d:	add    BYTE PTR [rax],al
   140008f4f:	add    al,cl
   140008f51:	xchg   esp,eax
   140008f52:	add    BYTE PTR [rax],al
   140008f54:	add    BYTE PTR [rax],al
   140008f56:	add    BYTE PTR [rax],al
   140008f58:	(bad)  
   140008f59:	xchg   esp,eax
   140008f5a:	add    BYTE PTR [rax],al
   140008f5c:	add    BYTE PTR [rax],al
   140008f5e:	add    BYTE PTR [rax],al
   140008f60:	(bad)  
   140008f61:	xchg   esp,eax
   140008f62:	add    BYTE PTR [rax],al
   140008f64:	add    BYTE PTR [rax],al
   140008f66:	add    BYTE PTR [rax],al
   140008f68:	not    BYTE PTR [rax+rax*1+0x0]
   140008f6f:	add    BYTE PTR [rdx],al
   140008f71:	xchg   ebp,eax
   140008f72:	add    BYTE PTR [rax],al
   140008f74:	add    BYTE PTR [rax],al
   140008f76:	add    BYTE PTR [rax],al
   140008f78:	adc    BYTE PTR [rbp+0x0],dl
   140008f7e:	add    BYTE PTR [rax],al
   140008f80:	and    al,0x95
   140008f82:	add    BYTE PTR [rax],al
   140008f84:	add    BYTE PTR [rax],al
   140008f86:	add    BYTE PTR [rax],al
   140008f88:	xor    al,0x95
   140008f8a:	add    BYTE PTR [rax],al
   140008f8c:	add    BYTE PTR [rax],al
   140008f8e:	add    BYTE PTR [rax],al
   140008f90:	rex.R xchg ebp,eax
   140008f92:	add    BYTE PTR [rax],al
   140008f94:	add    BYTE PTR [rax],al
   140008f96:	add    BYTE PTR [rax],al
   140008f98:	pop    rdx
   140008f99:	xchg   ebp,eax
   140008f9a:	add    BYTE PTR [rax],al
   140008f9c:	add    BYTE PTR [rax],al
   140008f9e:	add    BYTE PTR [rax],al
   140008fa0:	push   0x95
   140008fa5:	add    BYTE PTR [rax],al
   140008fa7:	add    BYTE PTR [rbp+rdx*4+0x0],bh
   140008fab:	add    BYTE PTR [rax],al
   140008fad:	add    BYTE PTR [rax],al
   140008faf:	add    dl,dh
   140008fb1:	xchg   ebx,eax
   140008fb2:	add    BYTE PTR [rax],al
   140008fb4:	add    BYTE PTR [rax],al
   140008fb6:	add    BYTE PTR [rax],al
   140008fb8:	ficom  WORD PTR [rbx+0x0]
   140008fbe:	add    BYTE PTR [rax],al
   140008fc0:	rcl    BYTE PTR [rbx+0x0],1
   140008fc6:	add    BYTE PTR [rax],al
   140008fc8:	adc    al,0x94
	...
   140008fd6:	add    BYTE PTR [rax],al
   140008fd8:	(bad)  
   140008fd9:	xchg   edi,eax
   140008fda:	add    BYTE PTR [rax],al
   140008fdc:	add    BYTE PTR [rax],al
   140008fde:	add    BYTE PTR [rax],al
   140008fe0:	out    0x97,al
	...
   140008fee:	add    BYTE PTR [rax],al
   140008ff0:	push   rsi
   140008ff1:	cwde   
   140008ff2:	add    BYTE PTR [rax],al
   140008ff4:	add    BYTE PTR [rax],al
   140008ff6:	add    BYTE PTR [rax],al
   140008ff8:	jb     0x140008f92
	...
   140009006:	add    BYTE PTR [rax],al
   140009008:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009009:	cwde   
   14000900a:	add    BYTE PTR [rax],al
   14000900c:	add    BYTE PTR [rax],al
   14000900e:	add    BYTE PTR [rax],al
   140009010:	add    bl,BYTE PTR [rax+0x0]
   140009016:	add    BYTE PTR [rax],al
   140009018:	nop
   140009019:	cwde   
   14000901a:	add    BYTE PTR [rax],al
   14000901c:	add    BYTE PTR [rax],al
   14000901e:	add    BYTE PTR [rax],al
   140009020:	rcr    BYTE PTR [rax+0x0],cl
	...
   14000902e:	add    BYTE PTR [rax],al
   140009030:	mov    eax,0x98
	...
   14000903d:	add    BYTE PTR [rax],al
   14000903f:	add    BYTE PTR [rax],ch
   140009041:	cwde   
   140009042:	add    BYTE PTR [rax],al
   140009044:	add    BYTE PTR [rax],al
   140009046:	add    BYTE PTR [rax],al
   140009048:	adc    al,0x98
   14000904a:	add    BYTE PTR [rax],al
   14000904c:	add    BYTE PTR [rax],al
   14000904e:	add    BYTE PTR [rax],al
   140009050:	rex.X cwde 
	...
   14000905e:	add    BYTE PTR [rax],al
   140009060:	cli    
   140009061:	xchg   edi,eax
	...
   14000906e:	add    BYTE PTR [rax],al
   140009070:	add    bl,BYTE PTR [rcx+0x0]
   140009076:	add    BYTE PTR [rax],al
   140009078:	call   0x140009115
	...
   140009085:	add    BYTE PTR [rax],al
   140009087:	add    BYTE PTR [rdx],dl
   140009089:	cdq    
	...
   140009096:	add    BYTE PTR [rax],al
   140009098:	xchg   BYTE PTR [rdx+0x0],bl
	...
   1400090a6:	add    BYTE PTR [rax],al
   1400090a8:	out    dx,al
   1400090a9:	xchg   ebp,eax
   1400090aa:	add    BYTE PTR [rax],al
   1400090ac:	add    BYTE PTR [rax],al
   1400090ae:	add    BYTE PTR [rax],al
   1400090b0:	(bad)  
   1400090b1:	xchg   ebp,eax
   1400090b2:	add    BYTE PTR [rax],al
   1400090b4:	add    BYTE PTR [rax],al
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	mov    ah,0x95
   1400090ba:	add    BYTE PTR [rax],al
   1400090bc:	add    BYTE PTR [rax],al
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	xor    dl,BYTE PTR [rsi+0x0]
   1400090c6:	add    BYTE PTR [rax],al
   1400090c8:	xchg   esp,eax
   1400090c9:	xchg   ebp,eax
   1400090ca:	add    BYTE PTR [rax],al
   1400090cc:	add    BYTE PTR [rax],al
   1400090ce:	add    BYTE PTR [rax],al
   1400090d0:	adc    BYTE PTR [rsi+0x0],dl
	...
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	mov    esp,0x97
   1400090e5:	add    BYTE PTR [rax],al
   1400090e7:	add    BYTE PTR [rdx+0x97],dh
   1400090ed:	add    BYTE PTR [rax],al
   1400090ef:	add    BYTE PTR [rdi+rdx*4+0x0],ah
   1400090f6:	add    BYTE PTR [rax],al
   1400090f8:	(bad)  
   1400090f9:	xchg   edi,eax
   1400090fa:	add    BYTE PTR [rax],al
   1400090fc:	add    BYTE PTR [rax],al
   1400090fe:	add    BYTE PTR [rax],al
   140009100:	xchg   edx,eax
   140009101:	xchg   edi,eax
   140009102:	add    BYTE PTR [rax],al
   140009104:	add    BYTE PTR [rax],al
   140009106:	add    BYTE PTR [rax],al
   140009108:	jle    0x1400090a1
   14000910a:	add    BYTE PTR [rax],al
   14000910c:	add    BYTE PTR [rax],al
   14000910e:	add    BYTE PTR [rax],al
   140009110:	xchg   di,ax
   140009112:	add    BYTE PTR [rax],al
   140009114:	add    BYTE PTR [rax],al
   140009116:	add    BYTE PTR [rax],al
   140009118:	pop    rsp
   140009119:	xchg   edi,eax
   14000911a:	add    BYTE PTR [rax],al
   14000911c:	add    BYTE PTR [rax],al
   14000911e:	add    BYTE PTR [rax],al
   140009120:	push   rdx
   140009121:	xchg   edi,eax
   140009122:	add    BYTE PTR [rax],al
   140009124:	add    BYTE PTR [rax],al
   140009126:	add    BYTE PTR [rax],al
   140009128:	cmp    dl,BYTE PTR [rdi+0x0]
   14000912e:	add    BYTE PTR [rax],al
   140009130:	cs xchg edi,eax
   140009132:	add    BYTE PTR [rax],al
   140009134:	add    BYTE PTR [rax],al
   140009136:	add    BYTE PTR [rax],al
   140009138:	sbb    dl,BYTE PTR [rdi+0x0]
   14000913e:	add    BYTE PTR [rax],al
   140009140:	or     al,0x97
   140009142:	add    BYTE PTR [rax],al
   140009144:	add    BYTE PTR [rax],al
   140009146:	add    BYTE PTR [rax],al
   140009148:	add    dl,BYTE PTR [rdi+0x0]
   14000914e:	add    BYTE PTR [rax],al
   140009150:	cli    
   140009151:	xchg   esi,eax
   140009152:	add    BYTE PTR [rax],al
   140009154:	add    BYTE PTR [rax],al
   140009156:	add    BYTE PTR [rax],al
   140009158:	repnz xchg esi,eax
   14000915a:	add    BYTE PTR [rax],al
   14000915c:	add    BYTE PTR [rax],al
   14000915e:	add    BYTE PTR [rax],al
   140009160:	loopne 0x1400090f8
   140009162:	add    BYTE PTR [rax],al
   140009164:	add    BYTE PTR [rax],al
   140009166:	add    BYTE PTR [rax],al
   140009168:	rcl    BYTE PTR [rsi+0x0],1
   14000916e:	add    BYTE PTR [rax],al
   140009170:	ret    0x96
   140009173:	add    BYTE PTR [rax],al
   140009175:	add    BYTE PTR [rax],al
   140009177:	add    BYTE PTR [rsi+rdx*4+0x0],dh
   14000917e:	add    BYTE PTR [rax],al
   140009180:	test   al,0x96
   140009182:	add    BYTE PTR [rax],al
   140009184:	add    BYTE PTR [rax],al
   140009186:	add    BYTE PTR [rax],al
   140009188:	(bad)  
   140009189:	xchg   esi,eax
   14000918a:	add    BYTE PTR [rax],al
   14000918c:	add    BYTE PTR [rax],al
   14000918e:	add    BYTE PTR [rax],al
   140009190:	nop
   140009191:	xchg   esi,eax
   140009192:	add    BYTE PTR [rax],al
   140009194:	add    BYTE PTR [rax],al
   140009196:	add    BYTE PTR [rax],al
   140009198:	test   BYTE PTR [rsi+0x0],dl
   14000919e:	add    BYTE PTR [rax],al
   1400091a0:	pop    rax
   1400091a1:	fwait
   1400091a2:	add    BYTE PTR [rax],al
   1400091a4:	add    BYTE PTR [rax],al
   1400091a6:	add    BYTE PTR [rax],al
   1400091a8:	rex.X
   1400091a9:	fwait
   1400091aa:	add    BYTE PTR [rax],al
   1400091ac:	add    BYTE PTR [rax],al
   1400091ae:	add    BYTE PTR [rax],al
   1400091b0:	jl     0x140009148
   1400091b2:	add    BYTE PTR [rax],al
   1400091b4:	add    BYTE PTR [rax],al
   1400091b6:	add    BYTE PTR [rax],al
   1400091b8:	(bad)  
   1400091b9:	xchg   esi,eax
   1400091ba:	add    BYTE PTR [rax],al
   1400091bc:	add    BYTE PTR [rax],al
   1400091be:	add    BYTE PTR [rax],al
   1400091c0:	jb     0x140009158
   1400091c2:	add    BYTE PTR [rax],al
   1400091c4:	add    BYTE PTR [rax],al
   1400091c6:	add    BYTE PTR [rax],al
   1400091c8:	sub    al,0x9b
   1400091ca:	add    BYTE PTR [rax],al
   1400091cc:	add    BYTE PTR [rax],al
   1400091ce:	add    BYTE PTR [rax],al
   1400091d0:	(bad)  
   1400091d1:	fwait
	...
   1400091de:	add    BYTE PTR [rax],al
   1400091e0:	lock (bad) 
   1400091e2:	add    BYTE PTR [rax],al
   1400091e4:	add    BYTE PTR [rax],al
   1400091e6:	add    BYTE PTR [rax],al
   1400091e8:	(bad)  
   1400091e9:	(bad)  
	...
   1400091f6:	add    BYTE PTR [rax],al
   1400091f8:	ins    BYTE PTR es:[rdi],dx
   1400091f9:	(bad)  
	...
   140009206:	add    BYTE PTR [rax],al
   140009208:	and    DWORD PTR [rcx],eax
   14000920a:	rex.RB jbe 0x140009272
   14000920d:	outs   dx,BYTE PTR ds:[rsi]
   14000920e:	je     0x140009263
   140009210:	gs je  0x14000925c
   140009213:	outs   dx,BYTE PTR ds:[rsi]
   140009214:	outs   dx,WORD PTR ds:[rsi]
   140009216:	jb     0x140009285
   140009218:	(bad)  
   140009219:	je     0x140009284
   14000921b:	outs   dx,DWORD PTR ds:[rsi]
   14000921c:	outs   dx,BYTE PTR ds:[rsi]
   14000921d:	add    BYTE PTR [rax],ah
   14000921f:	add    DWORD PTR [rbp+0x76],eax
   140009222:	outs   dx,BYTE PTR gs:[rsi]
   140009224:	je     0x140009278
   140009226:	imul   esi,DWORD PTR gs:[ebx+0x74],0x22007265
   14000922f:	add    DWORD PTR [rbp+0x76],eax
   140009232:	outs   dx,BYTE PTR gs:[rsi]
   140009234:	je     0x14000928b
   140009236:	outs   dx,BYTE PTR ds:[rsi]
   140009237:	jb     0x14000929e
   140009239:	imul   esi,DWORD PTR [ebx+0x74],0x28007265
   140009241:	add    DWORD PTR [rbp+0x76],eax
   140009244:	outs   dx,BYTE PTR gs:[rsi]
   140009246:	je     0x14000929f
   140009248:	jb     0x1400092b3
   14000924a:	je     0x1400092b1
   14000924c:	push   rsp
   14000924d:	jb     0x1400092b0
   14000924f:	outs   dx,BYTE PTR ds:[rsi]
   140009250:	jae    0x1400092b8
   140009252:	gs jb  0x140009255
   140009255:	add    BYTE PTR [rcx+0x44],al
   140009258:	push   rsi
   140009259:	push   r8
   14000925b:	xor    rsi,QWORD PTR [r10]
   14000925e:	cs fs ins BYTE PTR es:[rdi],dx
   140009261:	ins    BYTE PTR es:[rdi],dx
   140009262:	add    BYTE PTR [rax],al
   140009264:	scas   al,BYTE PTR es:[rdi]
   140009265:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   140009269:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140009272:	js     0x1400092cb
   140009274:	add    BYTE PTR [rax],al
   140009276:	ins    DWORD PTR es:[rdi],dx
   140009277:	add    al,BYTE PTR [rdi+0x65]
   14000927a:	je     0x1400092c9
   14000927c:	outs   dx,DWORD PTR ds:[rsi]
   14000927d:	fs jne 0x1400092ec
   140009280:	gs rex.W (bad) 
   140009283:	outs   dx,BYTE PTR ds:[rsi]
   140009284:	fs ins BYTE PTR es:[rdi],dx
   140009286:	gs rex.RB js 0x1400092e1
   14000928a:	add    BYTE PTR [rax],al
   14000928c:	outs   dx,BYTE PTR ds:[rsi]
   14000928d:	add    al,BYTE PTR [rdi+0x65]
   140009290:	je     0x1400092df
   140009292:	outs   dx,DWORD PTR ds:[rsi]
   140009293:	fs jne 0x140009302
   140009296:	gs rex.W (bad) 
   140009299:	outs   dx,BYTE PTR ds:[rsi]
   14000929a:	fs ins BYTE PTR es:[rdi],dx
   14000929c:	gs push rdi
   14000929e:	add    BYTE PTR [rax],al
   1400092a0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400092a1:	add    al,BYTE PTR [rdi+0x65]
   1400092a4:	je     0x1400092f6
   1400092a6:	jb     0x140009317
   1400092a8:	movsxd eax,DWORD PTR [rcx+0x64]
   1400092ab:	fs jb  0x140009313
   1400092ae:	jae    0x140009323
   1400092b0:	add    BYTE PTR [rax],al
   1400092b2:	imul   eax,DWORD PTR [rdx],0x4d746547
   1400092b8:	outs   dx,DWORD PTR ds:[rsi]
   1400092b9:	fs jne 0x140009328
   1400092bc:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   1400092c6:	add    BYTE PTR [rax],al
   1400092c8:	iret   
   1400092c9:	add    BYTE PTR [rbx+0x72],al
   1400092cc:	gs (bad) 
   1400092ce:	je     0x140009335
   1400092d0:	rex.WRB jne 0x140009347
   1400092d3:	gs js  0x14000932d
   1400092d6:	add    BYTE PTR [rax],al
   1400092d8:	jge    0x1400092da
   1400092da:	rex.XB ins BYTE PTR es:[rdi],dx
   1400092dc:	outs   dx,DWORD PTR ds:[rsi]
   1400092dd:	jae    0x140009344
   1400092df:	rex.W (bad) 
   1400092e1:	outs   dx,BYTE PTR ds:[rsi]
   1400092e2:	fs ins BYTE PTR es:[rdi],dx
   1400092e4:	add    BYTE PTR gs:[rdx],al
   1400092e7:	add    al,0x4f
   1400092e9:	jne    0x14000935f
   1400092eb:	jo     0x140009362
   1400092ed:	je     0x140009333
   1400092ef:	gs (bad) 
   1400092f1:	jne    0x14000935a
   1400092f3:	push   rbx
   1400092f4:	je     0x140009368
   1400092f6:	imul   ebp,DWORD PTR [rsi+0x67],0x15000057
   1400092fd:	add    al,BYTE PTR [rdi+0x65]
   140009300:	je     0x140009345
   140009302:	jne    0x140009376
   140009304:	jb     0x14000936b
   140009306:	outs   dx,BYTE PTR ds:[rsi]
   140009307:	je     0x14000935d
   140009309:	push   0x64616572
   14000930e:	rex.WB
   14000930f:	add    BYTE PTR fs:[rax],al
   140009312:	movabs al,ds:0x4d74616d726f4601
   14000931b:	gs jae 0x140009391
   14000931e:	(bad)  
   14000931f:	addr32 gs push rdi
   140009322:	add    BYTE PTR [rax],al
   140009324:	push   rdi
   140009325:	add    al,BYTE PTR [rdi+0x65]
   140009328:	je     0x140009376
   14000932a:	(bad)  
   14000932b:	jae    0x1400093a1
   14000932d:	rex.RB jb 0x1400093a2
   140009330:	outs   dx,DWORD PTR ds:[rsi]
   140009331:	jb     0x140009333
   140009333:	add    BYTE PTR [rbx+0x1],bl
   140009336:	rex.RB js 0x1400093a9
   140009339:	(bad)  
   14000933a:	outs   dx,BYTE PTR ds:[rsi]
   14000933b:	rex.RB outs dx,BYTE PTR fs:[rsi]
   14000933e:	jbe    0x1400093a9
   140009340:	jb     0x1400093b1
   140009342:	outs   dx,BYTE PTR ds:[rsi]
   140009343:	ins    DWORD PTR es:[rdi],dx
   140009344:	outs   dx,BYTE PTR gs:[rsi]
   140009346:	je     0x14000939b
   140009348:	je     0x1400093bc
   14000934a:	imul   ebp,DWORD PTR [rsi+0x67],0xa4005773
   140009351:	add    DWORD PTR [rsi+0x72],eax
   140009354:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   14000935e:	push   rsp
   14000935f:	add    ecx,DWORD PTR [rcx+0x6e]
   140009362:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000936a:	rex.XB jb 0x1400093d6
   14000936d:	je     0x1400093d8
   14000936f:	movsxd esp,DWORD PTR [rcx+0x6c]
   140009372:	push   rbx
   140009373:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140009378:	outs   dx,BYTE PTR ds:[rsi]
   140009379:	add    BYTE PTR [rip+0x6c654401],al        # 0x1ac65d780
   14000937f:	gs je  0x1400093e7
   140009382:	rex.XB jb 0x1400093ee
   140009385:	je     0x1400093f0
   140009387:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000938a:	push   rbx
   14000938b:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140009390:	outs   dx,BYTE PTR ds:[rsi]
   140009391:	add    BYTE PTR [rcx],ch
   140009393:	add    DWORD PTR [rbp+0x6e],eax
   140009396:	je     0x1400093fd
   140009398:	jb     0x1400093dd
   14000939a:	jb     0x140009405
   14000939c:	je     0x140009407
   14000939e:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400093a1:	push   rbx
   1400093a2:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400093a7:	outs   dx,BYTE PTR ds:[rsi]
   1400093a8:	add    BYTE PTR [rax],al
   1400093aa:	test   eax,0x61654c03
   1400093af:	jbe    0x140009416
   1400093b1:	rex.XB jb 0x14000941d
   1400093b4:	je     0x14000941f
   1400093b6:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400093b9:	push   rbx
   1400093ba:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400093bf:	outs   dx,BYTE PTR ds:[rsi]
   1400093c0:	add    BYTE PTR [rax],al
   1400093c2:	rex.WXB
   1400093c3:	rex.RB push r10
   1400093c5:	rex.WRX
   1400093c6:	rex.RB
   1400093c7:	xor    r14,QWORD PTR [rdx]
   1400093ca:	cs fs ins BYTE PTR es:[rdi],dx
   1400093cd:	ins    BYTE PTR es:[rdi],dx
   1400093ce:	add    BYTE PTR [rax],al
   1400093d0:	js     0x1400093d3
   1400093d2:	rex.RXB
   1400093d3:	gs je  0x140009423
   1400093d6:	gs jae 0x14000944c
   1400093d9:	(bad)  
   1400093da:	addr32 gs push rdi
   1400093dd:	add    BYTE PTR [rbx+0x3],ch
   1400093e0:	push   rsp
   1400093e1:	jb     0x140009444
   1400093e3:	outs   dx,BYTE PTR ds:[rsi]
   1400093e4:	jae    0x140009452
   1400093e6:	(bad)  
   1400093e7:	je     0x14000944e
   1400093e9:	rex.WRB
   1400093ea:	gs jae 0x140009460
   1400093ed:	(bad)  
   1400093ee:	add    BYTE PTR gs:[eax],al
   1400093f2:	mov    dh,0x0
   1400093f4:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   1400093fc:	rex.WRB
   1400093fd:	gs jae 0x140009473
   140009400:	(bad)  
   140009401:	addr32 gs push rdi
   140009404:	add    BYTE PTR [rax],al
   140009406:	add    cl,BYTE PTR [r15+r13*2+0x61]
   14000940b:	fs push rbx
   14000940d:	je     0x140009481
   14000940f:	imul   ebp,DWORD PTR [rsi+0x67],0x2360057
   140009416:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140009418:	(bad)  
   140009419:	movsxd rbp,DWORD PTR fs:[r15+0x6e]
   14000941e:	push   rdi
   14000941f:	add    BYTE PTR [rdx+rax*1],dh
   140009422:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140009424:	(bad)  
   140009425:	fs rex.XB jne 0x14000949b
   140009429:	jae    0x14000949a
   14000942b:	jb     0x140009484
   14000942d:	add    BYTE PTR [rdx+rax*1+0x69676552],ch
   140009434:	jae    0x1400094aa
   140009436:	gs jb  0x14000947c
   140009439:	ins    BYTE PTR es:[rdi],dx
   14000943a:	(bad)  
   14000943b:	jae    0x1400094b0
   14000943d:	rex.RB js 0x140009497
   140009440:	add    BYTE PTR [rax],al
   140009442:	jno    0x140009444
   140009444:	rex.XB jb 0x1400094ac
   140009447:	(bad)  
   140009448:	je     0x1400094af
   14000944a:	push   rdi
   14000944b:	imul   ebp,DWORD PTR [rsi+0x64],0x7845776f
   140009452:	push   rdi
   140009453:	add    BYTE PTR [rax],bh
   140009455:	add    edx,DWORD PTR [rbx+0x65]
   140009458:	je     0x1400094b1
   14000945a:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   140009461:	outs   dx,BYTE PTR ds:[rsi]
   140009462:	addr32 push rax
   140009464:	je     0x1400094d8
   140009466:	push   rdi
   140009467:	add    BYTE PTR [rdx+0x66654400],ah
   14000946d:	push   rdi
   14000946e:	imul   ebp,DWORD PTR [rsi+0x64],0x7250776f
   140009475:	outs   dx,DWORD PTR ds:[rsi]
   140009476:	movsxd edx,DWORD PTR [rdi+0x0]
   140009479:	add    BYTE PTR [rdx+rax*1+0x74736f50],al
   140009480:	push   rcx
   140009481:	jne    0x1400094ec
   140009483:	je     0x1400094d2
   140009485:	gs jae 0x1400094fb
   140009488:	(bad)  
   140009489:	addr32 gs add ch,cl
   14000948d:	add    DWORD PTR [rdi+0x65],eax
   140009490:	je     0x1400094e9
   140009492:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   140009499:	outs   dx,BYTE PTR ds:[rsi]
   14000949a:	addr32 push rax
   14000949c:	je     0x140009510
   14000949e:	push   rdi
   14000949f:	add    al,cl
   1400094a1:	add    dl,BYTE PTR [rdx+0x65]
   1400094a4:	imul   esi,DWORD PTR [ebx+0x74],0x69577265
   1400094ac:	outs   dx,BYTE PTR ds:[rsi]
   1400094ad:	outs   dx,DWORD PTR fs:[rsi]
   1400094af:	ja     0x1400094fe
   1400094b1:	gs jae 0x140009527
   1400094b4:	(bad)  
   1400094b5:	addr32 gs push rdi
   1400094b8:	add    BYTE PTR [rax],al
   1400094ba:	lods   al,BYTE PTR ds:[rsi]
   1400094bb:	add    BYTE PTR [rbp+riz*2+0x73],al
   1400094bf:	je     0x140009533
   1400094c1:	outs   dx,DWORD PTR ds:[rsi]
   1400094c2:	jns    0x140009511
   1400094c4:	outs   dx,BYTE PTR gs:[rsi]
   1400094c6:	jne    0x1400094c8
   1400094c8:	stos   DWORD PTR es:[rdi],eax
   1400094c9:	add    BYTE PTR [rbp+riz*2+0x73],al
   1400094cd:	je     0x140009541
   1400094cf:	outs   dx,DWORD PTR ds:[rsi]
   1400094d0:	jns    0x14000951b
   1400094d2:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400094d5:	add    BYTE PTR [rbp+0x3],dh
   1400094d8:	push   rbp
   1400094d9:	outs   dx,BYTE PTR ds:[rsi]
   1400094da:	jb     0x140009541
   1400094dc:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   1400094e4:	(bad)  
   1400094e5:	jae    0x14000955a
   1400094e7:	push   rdi
   1400094e8:	add    BYTE PTR [rax],al
   1400094ea:	add    cl,BYTE PTR [rdi+rbp*2+0x61]
   1400094ef:	fs rex.WRB
   1400094f1:	outs   dx,BYTE PTR gs:[rsi]
   1400094f3:	jne    0x14000954c
   1400094f5:	add    BYTE PTR [rbx],ch
   1400094f7:	add    edx,DWORD PTR [rbx+0x65]
   1400094fa:	je     0x140009550
   1400094fc:	imul   ebp,DWORD PTR [rbp+0x65],0x38000072
   140009503:	add    cl,BYTE PTR [rdi+rbp*2+0x61]
   140009507:	fs rex.WB ins DWORD PTR es:[rdi],dx
   14000950a:	(bad)  
   14000950b:	addr32 gs push rdi
   14000950e:	add    BYTE PTR [rax],al
   140009510:	mov    al,0x1
   140009512:	rex.RXB
   140009513:	gs je  0x140009569
   140009516:	jns    0x14000958b
   140009518:	je     0x14000957f
   14000951a:	ins    DWORD PTR es:[rdi],dx
   14000951b:	rex.WRB
   14000951c:	gs je  0x140009591
   14000951f:	imul   esp,DWORD PTR [rbx+0x73],0x2830000
   140009526:	push   rax
   140009527:	outs   dx,DWORD PTR ds:[rsi]
   140009528:	jae    0x14000959e
   14000952a:	rex.WRB
   14000952b:	gs jae 0x1400095a1
   14000952e:	(bad)  
   14000952f:	addr32 gs push rdi
   140009532:	add    BYTE PTR [rax],al
   140009534:	(bad)  
   140009535:	add    DWORD PTR [rdi+0x65],eax
   140009538:	je     0x14000957d
   14000953a:	jne    0x1400095ae
   14000953c:	jae    0x1400095ad
   14000953e:	jb     0x140009590
   140009540:	outs   dx,DWORD PTR ds:[rsi]
   140009541:	jae    0x140009543
   140009543:	add    dh,bh
   140009545:	add    dl,BYTE PTR [rbx+0x65]
   140009548:	je     0x140009590
   14000954a:	outs   dx,DWORD PTR ds:[rsi]
   14000954b:	jb     0x1400095b2
   14000954d:	addr32 jb 0x1400095bf
   140009550:	jne    0x1400095c0
   140009552:	fs push rdi
   140009554:	imul   ebp,DWORD PTR [rsi+0x64],0xac00776f
   14000955b:	add    DWORD PTR [rdi+0x65],eax
   14000955e:	je     0x1400095b3
   140009560:	jne    0x1400095c4
   140009562:	rex.WRB
   140009563:	outs   dx,BYTE PTR gs:[rsi]
   140009565:	jne    0x140009567
   140009567:	add    BYTE PTR [rsi+0x3],ah
   14000956a:	push   rsp
   14000956b:	jb     0x1400095ce
   14000956d:	movsxd ebp,DWORD PTR [rbx+0x50]
   140009570:	outs   dx,DWORD PTR ds:[rsi]
   140009571:	jo     0x1400095e8
   140009573:	jo     0x1400095c2
   140009575:	outs   dx,BYTE PTR gs:[rsi]
   140009577:	jne    0x1400095be
   140009579:	js     0x14000957b
   14000957b:	add    BYTE PTR [rdx+rax*1],ch
   14000957e:	imul   rbp,QWORD PTR [r12+r13*2+0x54],0x72656d69
   140009587:	add    BYTE PTR [rbp+0x53],dl
   14000958a:	rex.RB push r10
   14000958c:	xor    esi,DWORD PTR [rdx]
   14000958e:	cs fs ins BYTE PTR es:[rdi],dx
   140009591:	ins    BYTE PTR es:[rdi],dx
   140009592:	add    BYTE PTR [rax],al
   140009594:	ja     0x140009598
   140009596:	(bad)  
   140009597:	pop    rdi
   140009598:	push   rdi
   140009599:	imul   ebp,DWORD PTR [rsi+0x65],0x726f7272
   1400095a0:	pop    rdi
   1400095a1:	ins    DWORD PTR es:[rdi],dx
   1400095a2:	(bad)  
   1400095a3:	jo     0x1400095e5
   1400095a5:	jae    0x14000961b
   1400095a7:	fs rex
   1400095a9:	rex pop rcx
   1400095ab:	push   r8
   1400095ad:	rex.RB
   1400095ae:	rex.X
   1400095af:	rex.R
   1400095b0:	rex.W
   1400095b1:	rex pop rdx
   1400095b3:	add    BYTE PTR [rdi+0x2],ah
   1400095b6:	(bad)  
   1400095b7:	pop    rdi
   1400095b8:	push   rbx
   1400095b9:	jns    0x14000962e
   1400095bb:	gs jb  0x140009630
   1400095be:	outs   dx,DWORD PTR ds:[rsi]
   1400095bf:	jb     0x140009620
   1400095c1:	ins    DWORD PTR es:[rdi],dx
   1400095c2:	(bad)  
   1400095c3:	jo     0x140009605
   1400095c5:	jae    0x14000963b
   1400095c7:	fs rex
   1400095c9:	rex pop rcx
   1400095cb:	push   r8
   1400095cd:	rex.RB
   1400095ce:	rex.X
   1400095cf:	rex.R
   1400095d0:	rex.W
   1400095d1:	rex pop rdx
   1400095d3:	add    BYTE PTR [rbx+0x2],bh
   1400095d6:	(bad)  
   1400095d7:	pop    rdi
   1400095d8:	pop    rax
   1400095d9:	(bad)
   1400095de:	ins    BYTE PTR es:[rdi],dx
   1400095df:	ins    BYTE PTR es:[rdi],dx
   1400095e0:	outs   dx,DWORD PTR ds:[rsi]
   1400095e1:	movsxd eax,DWORD PTR [rax+0x73]
   1400095e4:	je     0x14000964a
   1400095e6:	rex
   1400095e7:	rex pop rcx
   1400095e9:	pop    r8
   1400095eb:	pop    rax
   1400095ec:	pop    rdx
   1400095ed:	add    BYTE PTR [rdi+0x2],bh
   1400095f0:	(bad)  
   1400095f1:	pop    rdi
   1400095f2:	pop    rax
   1400095f3:	outs   dx,DWORD PTR ds:[rsi]
   1400095f4:	jne    0x14000966a
   1400095f6:	pop    rdi
   1400095f7:	outs   dx,DWORD PTR ds:[rsi]
   1400095f8:	pop    di
   1400095fa:	jb     0x14000965d
   1400095fc:	outs   dx,BYTE PTR ds:[rsi]
   1400095fd:	addr32 gs rex jae 0x140009676
   140009602:	fs rex
   140009604:	rex pop rcx
   140009606:	pop    r8
   140009608:	push   rax
   140009609:	rex.RB
   14000960a:	rex.X
   14000960b:	rex.R
   14000960c:	rex pop rdx
   14000960e:	add    BYTE PTR [rax],al
   140009610:	jle    0x140009614
   140009612:	(bad)  
   140009613:	pop    rdi
   140009614:	pop    rax
   140009615:	ins    BYTE PTR es:[rdi],dx
   140009616:	outs   dx,BYTE PTR gs:[rsi]
   140009618:	addr32 je 0x140009683
   14000961b:	pop    rdi
   14000961c:	gs jb  0x140009691
   14000961f:	outs   dx,DWORD PTR ds:[rsi]
   140009620:	jb     0x140009662
   140009622:	jae    0x140009698
   140009624:	fs rex
   140009626:	rex pop rcx
   140009628:	pop    r8
   14000962a:	push   rax
   14000962b:	rex.RB
   14000962c:	rex.X
   14000962d:	rex.R
   14000962e:	rex pop rdx
   140009630:	add    BYTE PTR [rax],al
   140009632:	outs   dx,BYTE PTR ds:[rsi]
   140009633:	add    BYTE PTR [rdi],bh
   140009635:	(bad)  
   140009636:	xor    BYTE PTR [rcx+0x64],ch
   140009639:	rex ins BYTE PTR es:[rdi],dx
   14000963b:	outs   dx,DWORD PTR ds:[rsi]
   14000963c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000963f:	gs rex jae 0x1400096b7
   140009643:	fs rex
   140009645:	rex push rcx
   140009647:	rex.RB
   140009648:	rex.B
   140009649:	rex.B
   14000964a:	rex pop rdi
   14000964c:	rex.WXB
   14000964d:	rex pop rdx
   14000964f:	add    BYTE PTR [rbp+0x73],ch
   140009652:	jbe    0x1400096b7
   140009654:	jo     0x140009687
   140009656:	xor    DWORD PTR [rax],esi
   140009658:	pop    rdi
   140009659:	ja     0x1400096c4
   14000965b:	outs   dx,BYTE PTR ds:[rsi]
   14000965c:	cs fs ins BYTE PTR es:[rdi],dx
   14000965f:	ins    BYTE PTR es:[rdi],dx
   140009660:	add    BYTE PTR [rax],al
   140009662:	adc    al,0x0
   140009664:	(bad)  
   140009665:	(bad)  
   140009666:	xor    eax,DWORD PTR [rax+0x59]
   140009669:	pop    r8
   14000966b:	push   rax
   14000966c:	rex.RB
   14000966d:	pop    r8
   14000966f:	rex pop rdx
   140009671:	add    BYTE PTR [rsp+rax*1+0x6d6d656d],dl
   140009678:	outs   dx,DWORD PTR ds:[rsi]
   140009679:	jbe    0x1400096e0
   14000967b:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14000967f:	jb     0x1400096e6
   140009681:	add    BYTE PTR gs:[rax],al
   140009684:	sahf   
   140009685:	add    bl,BYTE PTR [rdi+0x70]
   140009688:	jne    0x1400096fc
   14000968a:	movsxd esp,DWORD PTR gs:[rcx+0x6c]
   14000968e:	ins    BYTE PTR es:[rdi],dx
   14000968f:	add    BYTE PTR [rsi+0x6c616d04],al
   140009695:	ins    BYTE PTR es:[rdi],dx
   140009696:	outs   dx,DWORD PTR ds:[rsi]
   140009697:	movsxd eax,DWORD PTR [rax]
   140009699:	add    BYTE PTR [rcx+0x3],ch
   14000969c:	pop    rdi
   14000969d:	jbe    0x140009712
   14000969f:	outs   dx,BYTE PTR ds:[rsi]
   1400096a0:	ja     0x140009712
   1400096a2:	jb     0x14000970d
   1400096a4:	outs   dx,BYTE PTR ds:[rsi]
   1400096a5:	je     0x14000970d
   1400096a7:	add    BYTE PTR [rdi+0x61635f00],bh
   1400096ad:	ins    BYTE PTR es:[rdi],dx
   1400096ae:	ins    BYTE PTR es:[rdi],dx
   1400096af:	outs   dx,BYTE PTR ds:[rsi]
   1400096b0:	gs ja  0x14000971b
   1400096b3:	add    BYTE PTR [rbp+0x0],dl
   1400096b6:	pop    rdi
   1400096b7:	pop    rax
   1400096b8:	movsxd esi,DWORD PTR [rax+0x74]
   1400096bb:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   1400096c4:	pop    rdi
   1400096c5:	(bad)  
   1400096c6:	ins    DWORD PTR es:[rdi],dx
   1400096c7:	jae    0x140009730
   1400096c9:	pop    rdi
   1400096ca:	gs js  0x140009736
   1400096cd:	je     0x1400096cf
   1400096cf:	add    BYTE PTR [rdi+0x0],bh
   1400096d2:	pop    rdi
   1400096d3:	pop    rdi
   1400096d4:	addr32 gs je 0x140009745
   1400096d8:	(bad)  
   1400096d9:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   1400096e0:	mov    es,WORD PTR [rax]
   1400096e2:	pop    rdi
   1400096e3:	pop    rdi
   1400096e4:	jae    0x14000974b
   1400096e6:	je     0x140009747
   1400096e8:	(bad)  
   1400096e9:	jo     0x14000975b
   1400096eb:	pop    rdi
   1400096ec:	je     0x140009767
   1400096ee:	jo     0x140009755
   1400096f0:	add    BYTE PTR [rax],al
   1400096f2:	xor    al,BYTE PTR [riz*2+0x746978]
   1400096f9:	add    BYTE PTR [rsi],cl
   1400096fb:	add    DWORD PTR [rdi+0x65],ebx
   1400096fe:	js     0x140009769
   140009700:	je     0x140009702
   140009702:	rol    DWORD PTR [rax],0x5f
   140009705:	movsxd esp,DWORD PTR [rbp+0x78]
   140009708:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0199
   140009710:	jae    0x14000977f
   140009712:	(bad)
   140009717:	add    BYTE PTR fs:[rax],al
   14000971a:	nop
   14000971b:	add    BYTE PTR [rdi+0x5f],bl
   14000971e:	jae    0x140009785
   140009720:	je     0x140009797
   140009722:	jae    0x140009789
   140009724:	jb     0x140009793
   140009726:	(bad)  
   140009727:	je     0x140009791
   140009729:	gs jb  0x14000979e
   14000972c:	add    BYTE PTR [rax],al
   14000972e:	jge    0x140009731
   140009730:	pop    rdi
   140009731:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140009738:	ins    DWORD PTR es:[rdi],dx
   140009739:	add    BYTE PTR [rdi+0x0],dl
   14000973c:	pop    rdi
   14000973d:	pop    rdi
   14000973e:	rex.XB pop r15
   140009740:	jae    0x1400097b2
   140009742:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140009746:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000974d:	ins    BYTE PTR es:[rdi],dx
   14000974e:	gs jb  0x140009751
   140009751:	add    BYTE PTR [rdx+0x63615f00],ah
   140009757:	ins    DWORD PTR es:[rdi],dx
   140009758:	fs ins BYTE PTR es:[rdi],dx
   14000975a:	outs   dx,BYTE PTR ds:[rsi]
   14000975b:	add    BYTE PTR [rdi],ah
   14000975d:	add    DWORD PTR [rdi+0x66],ebx
   140009760:	ins    DWORD PTR es:[rdi],dx
   140009761:	outs   dx,DWORD PTR ds:[rsi]
   140009762:	fs add BYTE PTR gs:[rax],al
   140009766:	rol    BYTE PTR [rax],cl
   140009768:	pop    rdi
   140009769:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000976c:	ins    DWORD PTR es:[rdi],dx
   14000976d:	outs   dx,DWORD PTR ds:[rsi]
   14000976e:	fs add BYTE PTR gs:[rax],al
   140009772:	ins    DWORD PTR es:[rdi],dx
   140009773:	jae    0x1400097eb
   140009775:	movsxd esi,DWORD PTR [rdx+0x74]
   140009778:	cs fs ins BYTE PTR es:[rdi],dx
   14000977b:	ins    BYTE PTR es:[rdi],dx
   14000977c:	add    BYTE PTR [rax],al
   14000977e:	(bad)  
   14000977f:	add    BYTE PTR [rdi],bh
   140009781:	je     0x1400097e8
   140009783:	jb     0x1400097f2
   140009785:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000978c:	pop    rcx
   14000978d:	pop    r8
   14000978f:	pop    rax
   140009790:	pop    rdx
   140009791:	add    dh,ah
   140009793:	add    DWORD PTR [rdi+0x6c],ebx
   140009796:	outs   dx,DWORD PTR ds:[rsi]
   140009797:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000979a:	add    ebx,DWORD PTR [r15+0x75]
   14000979e:	outs   dx,BYTE PTR ds:[rsi]
   14000979f:	ins    BYTE PTR es:[rdi],dx
   1400097a0:	outs   dx,DWORD PTR ds:[rsi]
   1400097a1:	movsxd ebp,DWORD PTR [rbx+0x0]
   1400097a4:	jnp    0x1400097a6
   1400097a6:	pop    rdi
   1400097a7:	pop    rdi
   1400097a8:	fs ins BYTE PTR es:[rdi],dx
   1400097aa:	ins    BYTE PTR es:[rdi],dx
   1400097ab:	outs   dx,DWORD PTR ds:[rsi]
   1400097ac:	outs   dx,BYTE PTR ds:[rsi]
   1400097ad:	gs js  0x140009819
   1400097b0:	je     0x1400097b2
   1400097b2:	nop
   1400097b3:	add    bl,BYTE PTR [rdi+0x6f]
   1400097b6:	outs   dx,BYTE PTR ds:[rsi]
   1400097b7:	gs js  0x140009823
   1400097ba:	je     0x1400097bc
   1400097bc:	adc    al,BYTE PTR [rax]
   1400097be:	(bad)  
   1400097bf:	(bad)  
   1400097c0:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   1400097c4:	gs pop rdi
   1400097c6:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   1400097cd:	rex.RB
   1400097ce:	rex.B
   1400097cf:	rex.B
   1400097d0:	rex pop rax
   1400097d2:	pop    rdx
   1400097d3:	add    BYTE PTR [rdx+0x0],al
   1400097d6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400097d8:	push   rbp
   1400097d9:	outs   dx,BYTE PTR ds:[rsi]
   1400097da:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   1400097e1:	imul   edi,DWORD PTR [rdx+0x65],0x80000
   1400097e8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400097ea:	rex.XB jb 0x140009852
   1400097ed:	(bad)  
   1400097ee:	je     0x140009855
   1400097f0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400097f2:	jae    0x140009868
   1400097f4:	(bad)  
   1400097f5:	outs   dx,BYTE PTR ds:[rsi]
   1400097f6:	movsxd esp,DWORD PTR [rbp+0x0]
   1400097f9:	add    BYTE PTR [rip+0x656c5300],ch        # 0x1a56ceaff
   1400097ff:	gs jo  0x140009802
   140009802:	and    BYTE PTR [rax],al
   140009804:	rex.RXB
   140009805:	gs je  0x14000985b
   140009808:	je     0x14000986b
   14000980a:	jb     0x140009880
   14000980c:	jne    0x14000987e
   14000980e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009810:	outs   dx,WORD PTR ds:[rsi]
   140009812:	push   rdi
   140009813:	add    BYTE PTR [rdx],al
   140009815:	add    BYTE PTR [rdx+0x74],dl
   140009818:	ins    BYTE PTR es:[rdi],dx
   140009819:	rex.XB (bad) 
   14000981b:	jo     0x140009891
   14000981d:	jne    0x140009891
   14000981f:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140009822:	outs   dx,BYTE PTR ds:[rsi]
   140009823:	je     0x14000988a
   140009825:	js     0x14000989b
   140009827:	add    BYTE PTR [rcx],cl
   140009829:	add    BYTE PTR [rdx+0x74],dl
   14000982c:	ins    BYTE PTR es:[rdi],dx
   14000982d:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000982f:	outs   dx,DWORD PTR ds:[rsi]
   140009830:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140009834:	jne    0x1400098a4
   140009836:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000983a:	outs   dx,BYTE PTR ds:[rsi]
   14000983b:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000983d:	je     0x1400098b1
   14000983f:	jns    0x140009841
   140009841:	add    BYTE PTR [rdi],cl
   140009843:	add    BYTE PTR [rdx+0x74],dl
   140009846:	ins    BYTE PTR es:[rdi],dx
   140009847:	push   rsi
   140009848:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000984f:	outs   dx,BYTE PTR ds:[rsi]
   140009850:	ja     0x1400098bb
   140009852:	outs   dx,BYTE PTR ds:[rsi]
   140009853:	add    BYTE PTR fs:[rax],al
   140009856:	adc    DWORD PTR [rax],eax
   140009858:	push   rbp
   140009859:	outs   dx,BYTE PTR ds:[rsi]
   14000985a:	push   0x6c646e61
   14000985f:	gs fs rex.RB js 0x1400098c7
   140009864:	gs jo  0x1400098db
   140009867:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000986e:	gs jb  0x140009871
   140009871:	add    BYTE PTR [rdi],cl
   140009873:	add    BYTE PTR [rbx+0x65],dl
   140009876:	je     0x1400098cd
   140009878:	outs   dx,BYTE PTR ds:[rsi]
   140009879:	push   0x6c646e61
   14000987e:	gs fs rex.RB js 0x1400098e6
   140009883:	gs jo  0x1400098fa
   140009886:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000988d:	gs jb  0x140009890
   140009890:	or     al,0x0
   140009892:	rex.RXB
   140009893:	gs je  0x1400098d9
   140009896:	jne    0x14000990a
   140009898:	jb     0x1400098ff
   14000989a:	outs   dx,BYTE PTR ds:[rsi]
   14000989b:	je     0x1400098ed
   14000989d:	jb     0x14000990e
   14000989f:	movsxd esp,DWORD PTR [rbp+0x73]
   1400098a2:	jae    0x1400098a4
   1400098a4:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   1400098a9:	ins    DWORD PTR es:[rdi],dx
   1400098aa:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   1400098b1:	outs   dx,DWORD PTR ds:[rsi]
   1400098b2:	movsxd esp,DWORD PTR [rbp+0x73]
   1400098b5:	jae    0x1400098b7
   1400098b7:	add    BYTE PTR [rax],al
   1400098b9:	add    BYTE PTR [rcx+0x75],dl
   1400098bc:	gs jb  0x140009938
   1400098bf:	push   rax
   1400098c0:	gs jb  0x140009929
   1400098c3:	outs   dx,DWORD PTR ds:[rsi]
   1400098c4:	jb     0x140009933
   1400098c6:	(bad)  
   1400098c7:	outs   dx,BYTE PTR ds:[rsi]
   1400098c8:	movsxd esp,DWORD PTR [rbp+0x43]
   1400098cb:	outs   dx,DWORD PTR ds:[rsi]
   1400098cc:	jne    0x14000993c
   1400098ce:	je     0x140009935
   1400098d0:	jb     0x1400098d2
   1400098d2:	or     eax,0x74654700
   1400098d7:	rex.XB jne 0x14000994c
   1400098da:	jb     0x140009941
   1400098dc:	outs   dx,BYTE PTR ds:[rsi]
   1400098dd:	je     0x14000992f
   1400098df:	jb     0x140009950
   1400098e1:	movsxd esp,DWORD PTR [rbp+0x73]
   1400098e4:	jae    0x14000992f
   1400098e6:	add    BYTE PTR fs:[rax+rax*1],dl
   1400098ea:	rex.RXB
   1400098eb:	gs je  0x140009941
   1400098ee:	jns    0x140009963
   1400098f0:	je     0x140009957
   1400098f2:	ins    DWORD PTR es:[rdi],dx
   1400098f3:	push   rsp
   1400098f4:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   1400098fb:	ins    BYTE PTR es:[rdi],dx
   1400098fc:	gs push rsp
   1400098fe:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   140009905:	gs je  0x14000995c
   140009908:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000990f:	je     0x140009911
   140009911:	add    BYTE PTR [rsi],al
   140009913:	add    BYTE PTR [rbp+0x76],al
   140009916:	outs   dx,BYTE PTR gs:[rsi]
   140009918:	je     0x140009971
   14000991a:	jb     0x140009985
   14000991c:	je     0x140009983
   14000991e:	add    BYTE PTR [rax],al
   140009920:	(bad)  
   140009921:	jo     0x14000998c
   140009923:	sub    eax,0x772d736d
   140009928:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000992f:	sub    eax,0x2d6d6f63
   140009934:	ins    BYTE PTR es:[rdi],dx
   140009935:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31c66c
   14000993b:	fs ins BYTE PTR es:[rdi],dx
   14000993d:	ins    BYTE PTR es:[rdi],dx
   14000993e:	add    BYTE PTR [rax],al
   140009940:	(bad)  
   140009941:	jo     0x1400099ac
   140009943:	sub    eax,0x772d736d
   140009948:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000994f:	sub    eax,0x636e7973
   140009954:	push   0x2d316c2d
   140009959:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64c78f
   14000995f:	ins    BYTE PTR es:[rdi],dx
   140009960:	add    BYTE PTR [rax],al
   140009962:	(bad)  
   140009963:	jo     0x1400099ce
   140009965:	sub    eax,0x772d736d
   14000996a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009971:	sub    eax,0x636f7270
   140009976:	gs jae 0x1400099ec
   140009979:	je     0x1400099e3
   14000997b:	jb     0x1400099e2
   14000997d:	(bad)  
   14000997e:	fs jae 0x1400099ae
   140009981:	ins    BYTE PTR es:[rdi],dx
   140009982:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32c6b9
   140009988:	fs ins BYTE PTR es:[rdi],dx
   14000998a:	ins    BYTE PTR es:[rdi],dx
   14000998b:	add    BYTE PTR [rcx+0x70],ah
   14000998e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0d05
   140009998:	outs   dx,DWORD PTR ds:[rsi]
   140009999:	jb     0x140009a00
   14000999b:	sub    eax,0x736c7472
   1400099a0:	jne    0x140009a12
   1400099a2:	jo     0x140009a13
   1400099a4:	jb     0x140009a1a
   1400099a6:	sub    eax,0x322d316c
   1400099ab:	sub    eax,0x6c642e30
   1400099b0:	ins    BYTE PTR es:[rdi],dx
   1400099b1:	add    BYTE PTR [rcx+0x70],ah
   1400099b4:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0d2b
   1400099be:	outs   dx,DWORD PTR ds:[rsi]
   1400099bf:	jb     0x140009a26
   1400099c1:	sub    eax,0x6f727265
   1400099c6:	jb     0x140009a30
   1400099c8:	(bad)  
   1400099c9:	outs   dx,BYTE PTR ds:[rsi]
   1400099ca:	fs ins BYTE PTR es:[rdi],dx
   1400099cc:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   1400099d3:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64c80a
   1400099d9:	ins    BYTE PTR es:[rdi],dx
   1400099da:	add    BYTE PTR [rax],al
   1400099dc:	(bad)  
   1400099dd:	jo     0x140009a48
   1400099df:	sub    eax,0x772d736d
   1400099e4:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400099eb:	sub    eax,0x666f7270
   1400099f0:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   1400099f8:	sub    eax,0x6c642e30
   1400099fd:	ins    BYTE PTR es:[rdi],dx
   1400099fe:	add    BYTE PTR [rax],al
   140009a00:	(bad)  
   140009a01:	jo     0x140009a6c
   140009a03:	sub    eax,0x772d736d
   140009a08:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009a0f:	sub    eax,0x69737973
   140009a14:	outs   dx,BYTE PTR ds:[rsi]
   140009a15:	outs   dx,WORD PTR ds:[rsi]
   140009a17:	sub    eax,0x322d316c
   140009a1c:	sub    eax,0x6c642e31
   140009a21:	ins    BYTE PTR es:[rdi],dx
   140009a22:	add    BYTE PTR [rax],al
   140009a24:	(bad)  
   140009a25:	jo     0x140009a90
   140009a27:	sub    eax,0x772d736d
   140009a2c:	imul   ebp,DWORD PTR [rsi+0x2d],0x6e657665
   140009a33:	je     0x140009a9e
   140009a35:	outs   dx,BYTE PTR ds:[rsi]
   140009a36:	addr32 sub eax,0x766f7270
   140009a3c:	imul   esp,DWORD PTR [rbp+riz*2+0x72],0x2d316c2d
   140009a44:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac64c87a
   140009a4a:	ins    BYTE PTR es:[rdi],dx
   140009a4b:	add    dl,al
   140009a4d:	add    DWORD PTR [rbx+0x68],edx
   140009a50:	gs ins BYTE PTR es:[rdi],dx
   140009a52:	ins    BYTE PTR es:[rdi],dx
   140009a53:	pop    rdi
   140009a54:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140009a56:	je     0x140009ac1
   140009a58:	data16 jns 0x140009aa4
   140009a5b:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140009a5e:	push   rdi
   140009a5f:	add    BYTE PTR [rbx+0x48],dl
   140009a62:	rex.RB
   140009a63:	rex.WR
   140009a64:	xor    r14,QWORD PTR [rdx]
   140009a67:	cs fs ins BYTE PTR es:[rdi],dx
   140009a6a:	ins    BYTE PTR es:[rdi],dx
   140009a6b:	add    BYTE PTR [rax+0x0],ah
   140009a6e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009a70:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009a72:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140009a7a:	add    BYTE PTR [rax],al
   140009a7c:	outs   dx,DWORD PTR ds:[rsi]
   140009a7d:	ins    BYTE PTR es:[rdi],dx
   140009a7e:	xor    esi,DWORD PTR gs:[rdx]
   140009a81:	cs fs ins BYTE PTR es:[rdi],dx
   140009a84:	ins    BYTE PTR es:[rdi],dx
   140009a85:	add    BYTE PTR [rax],cl
   140009a87:	add    BYTE PTR [rbx+0x65],dl
   140009a8a:	je     0x140009adc
   140009a8c:	jb     0x140009afd
   140009a8e:	movsxd esp,DWORD PTR [rbp+0x73]
   140009a91:	jae    0x140009ad7
   140009a93:	jo     0x140009afe
   140009a95:	rex.B ja 0x140009af9
   140009a98:	jb     0x140009aff
   140009a9a:	outs   dx,BYTE PTR ds:[rsi]
   140009a9b:	gs jae 0x140009b11
   140009a9e:	add    BYTE PTR [rax],al
   140009aa0:	(bad)  
   140009aa1:	jo     0x140009b0c
   140009aa3:	sub    eax,0x772d736d
   140009aa8:	imul   ebp,DWORD PTR [rsi+0x2d],0x6f636873
   140009aaf:	jb     0x140009b16
   140009ab1:	sub    eax,0x6c616373
   140009ab6:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140009abd:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64c8f4
   140009ac3:	ins    BYTE PTR es:[rdi],dx
   140009ac4:	add    BYTE PTR [rax],al
   140009ac6:	ds add eax,0x536c7452
   140009acc:	jne    0x140009b30
   140009ace:	jae    0x140009b33
   140009ad0:	jb     0x140009b3b
   140009ad2:	(bad)  
   140009ad3:	gs push rdi
   140009ad5:	outs   dx,BYTE PTR ds:[rsi]
   140009ad6:	push   bx
   140009ad8:	je     0x140009b3b
   140009ada:	je     0x140009b41
   140009adc:	rex.XB push 0x65676e61
   140009ae2:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140009ae4:	je     0x140009b4f
   140009ae6:	imul   sp,WORD PTR [rbx+0x61],0x6974
   140009aec:	outs   dx,DWORD PTR ds:[rsi]
   140009aed:	outs   dx,BYTE PTR ds:[rsi]
   140009aee:	add    BYTE PTR [rax],al
   140009af0:	outs   dx,DWORD PTR ds:[rsi]
   140009af1:	add    eax,0x556c7452
   140009af6:	outs   dx,BYTE PTR ds:[rsi]
   140009af7:	jae    0x140009b6e
   140009af9:	(bad)  
   140009afb:	movsxd esi,DWORD PTR [rdx+0x69]
   140009afe:	(bad)  
   140009aff:	gs push rdi
   140009b01:	outs   dx,BYTE PTR ds:[rsi]
   140009b02:	data16 rex.WRX outs dx,DWORD PTR ds:[rsi]
   140009b05:	je     0x140009b70
   140009b07:	imul   sp,WORD PTR [rbx+0x61],0x6974
   140009b0d:	outs   dx,DWORD PTR ds:[rsi]
   140009b0e:	outs   dx,BYTE PTR ds:[rsi]
   140009b0f:	push   rdi
   140009b10:	(bad)  
   140009b11:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6d6f4372
   140009b19:	jo     0x140009b87
   140009b1b:	gs je  0x140009b87
   140009b1e:	outs   dx,DWORD PTR ds:[rsi]
   140009b1f:	outs   dx,BYTE PTR ds:[rsi]
   140009b20:	add    BYTE PTR [rax],al
   140009b22:	outs   dx,BYTE PTR ds:[rsi]
   140009b23:	je     0x140009b89
   140009b25:	ins    BYTE PTR es:[rdi],dx
   140009b26:	ins    BYTE PTR es:[rdi],dx
   140009b27:	cs fs ins BYTE PTR es:[rdi],dx
   140009b2a:	ins    BYTE PTR es:[rdi],dx
   140009b2b:	add    BYTE PTR [rbx+0x0],cl
   140009b2e:	pop    rdi
   140009b2f:	rex.XB js 0x140009baa
   140009b32:	push   rsp
   140009b33:	push   0x45776f72
   140009b38:	js     0x140009b9d
   140009b3a:	gs jo  0x140009bb1
   140009b3d:	imul   ebp,DWORD PTR [rdi+0x6e],0x5b0000
   140009b44:	pop    rdi
   140009b45:	pop    rdi
   140009b46:	rex.XB js 0x140009bc1
   140009b49:	rex.RX jb 0x140009bad
   140009b4c:	ins    DWORD PTR es:[rdi],dx
   140009b4d:	gs rex.W (bad) 
   140009b50:	outs   dx,BYTE PTR ds:[rsi]
   140009b51:	fs ins BYTE PTR es:[rdi],dx
   140009b53:	gs jb  0x140009b89
   140009b56:	add    BYTE PTR [rax],al
   140009b58:	xchg   edx,eax
   140009b59:	add    al,0x6d
   140009b5b:	gs ins DWORD PTR es:[rdi],dx
   140009b5d:	movsxd esi,DWORD PTR [rax+0x79]
   140009b60:	add    BYTE PTR [rax],al
   140009b62:	xchg   esi,eax
   140009b63:	add    al,0x6d
   140009b65:	gs ins DWORD PTR es:[rdi],dx
   140009b67:	jae    0x140009bce
   140009b69:	je     0x140009b6b
	...

Disassembly of section .data:

000000014000a000 <.data>:
   14000a000:	add    DWORD PTR [rax],eax
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	add    BYTE PTR [rax],al
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	int    0x5d
   14000a012:	and    dl,dl
   14000a014:	data16 (bad) 
   14000a016:	(bad)  
   14000a017:	inc    DWORD PTR [rax]
   14000a019:	add    BYTE PTR [rax],al
   14000a01b:	add    BYTE PTR [rax],al
   14000a01d:	add    BYTE PTR [rax],al
   14000a01f:	add    BYTE PTR [rcx],al
	...
   14000a035:	add    BYTE PTR [rax],al
   14000a037:	add    BYTE PTR [rdi],ah
   14000a039:	jae    0x14000a03b
   14000a03b:	rex add DWORD PTR [rax],eax
	...
   14000a066:	add    BYTE PTR [rax],al
   14000a068:	sar    BYTE PTR [rdx],1
   14000a06a:	add    BYTE PTR [rax+0x1],al
   14000a06d:	add    BYTE PTR [rax],al
   14000a06f:	add    BYTE PTR [rax+0x1400065],al
	...
   14000a07d:	add    BYTE PTR [rax],al
   14000a07f:	add    BYTE PTR [rax+0x1400068],cl
	...
   14000a08d:	add    BYTE PTR [rax],al
   14000a08f:	add    BYTE PTR [rsi],ch
   14000a091:	(bad)  
   14000a092:	push   r14
   14000a094:	push   rdx
   14000a095:	gs jae 0x14000a10d
   14000a098:	ins    BYTE PTR es:[rdi],dx
   14000a099:	je     0x14000a0e0
   14000a09b:	js     0x14000a100
   14000a09d:	gs jo  0x14000a114
   14000a0a0:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c697740
   14000a0a7:	rex
   14000a0a8:	add    BYTE PTR [rax],al
   14000a0ab:	add    BYTE PTR [rax],al
   14000a0ad:	add    BYTE PTR [rax],al
   14000a0af:	add    BYTE PTR [rax+0x1400068],cl
	...
   14000a0bd:	add    BYTE PTR [rax],al
   14000a0bf:	add    BYTE PTR [rsi],ch
   14000a0c1:	(bad)  
   14000a0c2:	push   r14
   14000a0c4:	(bad)  
   14000a0c5:	and    al,0x5f
   14000a0c7:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x30302440
   14000a0cf:	pop    rax
   14000a0d0:	push   rbp
   14000a0d1:	(bad)  
   14000a0d2:	and    al,0x5f
   14000a0d4:	push   rax
   14000a0d5:	ins    DWORD PTR es:[rdi],dx
   14000a0d6:	pop    di
   14000a0d8:	ja     0x14000a14c
   14000a0da:	(bad)  
   14000a0db:	jo     0x14000a11d
   14000a0dd:	push   rax
   14000a0de:	cmp    BYTE PTR [rbx+0x4e],al
   14000a0e1:	outs   dx,DWORD PTR ds:[rsi]
   14000a0e2:	je     0x14000a14d
   14000a0e4:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14000a0ea:	outs   dx,DWORD PTR ds:[rsi]
   14000a0eb:	outs   dx,BYTE PTR ds:[rsi]
   14000a0ec:	rex.WRB (bad) 
   14000a0ee:	outs   dx,BYTE PTR ds:[rsi]
   14000a0ef:	(bad)  
   14000a0f0:	addr32 gs jb 0x14000a134
   14000a0f4:	rex
   14000a0f5:	rex.RB
   14000a0f6:	rex.B
   14000a0f7:	pop    r8
   14000a0f9:	push   rax
   14000a0fa:	rex.RB
   14000a0fb:	rex.X pop rax
   14000a0fd:	rex.WXB
   14000a0fe:	rex pop rdx
   14000a100:	pop    rax
   14000a101:	push   rsi
   14000a102:	xor    DWORD PTR [rax+0x50],eax
   14000a105:	rex.RB
   14000a106:	rex.X pop rax
   14000a108:	rex.WXB push r13
   14000a10a:	pop    rdi
   14000a10b:	imul   r13,QWORD PTR [rax+r8*2+0x73],0x40406474
   14000a114:	push   rbp
   14000a115:	xor    dh,BYTE PTR [rbx]
   14000a117:	rex push rbp
   14000a119:	xor    dh,BYTE PTR [rbx]
   14000a11b:	rex push rbp
   14000a11d:	xor    dh,BYTE PTR [rbx]
   14000a11f:	rex push rbp
   14000a121:	xor    dh,BYTE PTR [rbx]
   14000a123:	rex
   14000a124:	rex jae 0x14000a19b
   14000a127:	fs rex
   14000a129:	rex push rcx
   14000a12b:	rex.RB
   14000a12c:	push   r14
   14000a12e:	rex.XB
   14000a12f:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000a131:	je     0x14000a19c
   14000a133:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14000a139:	outs   dx,DWORD PTR ds:[rsi]
   14000a13a:	outs   dx,BYTE PTR ds:[rsi]
   14000a13b:	rex.WRB (bad) 
   14000a13d:	outs   dx,BYTE PTR ds:[rsi]
   14000a13e:	(bad)  
   14000a13f:	addr32 gs jb 0x14000a183
   14000a143:	rex
   14000a144:	rex.B
   14000a145:	rex.RB
   14000a146:	push   r14
   14000a148:	(bad)  
   14000a149:	and    al,0x5f
   14000a14b:	push   rax
   14000a14c:	push   0x30302440
   14000a151:	xor    al,BYTE PTR [rax+0x41]
   14000a155:	rex.RB
   14000a156:	push   r14
   14000a158:	(bad)  
   14000a159:	and    al,0x5f
   14000a15b:	push   rax
   14000a15c:	push   0x31302440
   14000a161:	xor    al,BYTE PTR [rax+0x55]
   14000a165:	pop    rdi
   14000a166:	imul   r13,QWORD PTR [rax+r8*2+0x32],0x32365540
   14000a16f:	rex push rbp
   14000a171:	xor    al,BYTE PTR ss:[rax+0x55]
   14000a175:	xor    al,BYTE PTR ss:[rax+0x40]
   14000a179:	jae    0x14000a1ef
   14000a17b:	fs rex
   14000a17d:	add    BYTE PTR [rax],al
   14000a180:	mov    BYTE PTR [rax+0x0],ch
   14000a183:	rex add DWORD PTR [rax],eax
	...
   14000a18e:	add    BYTE PTR [rax],al
   14000a190:	cs (bad) 
   14000a192:	push   r14
   14000a194:	rex.XB
   14000a195:	rex.B je 0x14000a204
   14000a198:	rex.RB js 0x14000a1fe
   14000a19b:	gs jo  0x14000a212
   14000a19e:	imul   ebp,DWORD PTR [rdi+0x6e],0x4c544140
   14000a1a5:	rex
   14000a1a6:	add    BYTE PTR [rcx],al
	...

Disassembly of section .pdata:

000000014000b000 <.pdata>:
   14000b000:	adc    BYTE PTR [rax],dl
   14000b002:	add    BYTE PTR [rax],al
   14000b004:	sub    DWORD PTR [rax],edx
   14000b006:	add    BYTE PTR [rax],al
   14000b008:	in     al,0x8b
   14000b00a:	add    BYTE PTR [rax],al
   14000b00c:	xor    BYTE PTR [rax],dl
   14000b00e:	add    BYTE PTR [rax],al
   14000b010:	rex.WB adc BYTE PTR [r8],al
   14000b013:	add    ah,ah
   14000b015:	mov    eax,DWORD PTR [rax]
   14000b017:	add    BYTE PTR [rax-0x37fffff0],ah
   14000b01d:	adc    BYTE PTR [rax],al
   14000b01f:	add    ah,ah
   14000b021:	mov    eax,DWORD PTR [rax]
   14000b023:	add    BYTE PTR [rax],ah
   14000b025:	adc    DWORD PTR [rax],eax
   14000b027:	add    BYTE PTR [rdx-0x17ffffef],bh
   14000b02d:	add    BYTE PTR [rax],0x0
   14000b030:	rcl    BYTE PTR [rcx],0x0
   14000b033:	add    dh,ch
   14000b035:	adc    DWORD PTR [rax],eax
   14000b037:	add    BYTE PTR [rax],dl
   14000b039:	add    DWORD PTR [rax],0x11ee00
   14000b03f:	add    BYTE PTR [rdi],dh
   14000b041:	adc    al,BYTE PTR [rax]
   14000b043:	add    BYTE PTR [rcx+rax*4],ah
   14000b046:	add    BYTE PTR [rax],al
   14000b048:	(bad)  
   14000b049:	adc    al,BYTE PTR [rax]
   14000b04b:	add    BYTE PTR [rdx+rdx*1+0x0],cl
   14000b04f:	add    BYTE PTR [rcx+rax*4],bh
   14000b052:	add    BYTE PTR [rax],al
   14000b054:	rex.WR adc r8b,BYTE PTR [rax]
   14000b057:	add    BYTE PTR [rbx+0x12],bl
   14000b05a:	add    BYTE PTR [rax],al
   14000b05c:	rex.WR add QWORD PTR [rax],0x127000
   14000b063:	add    BYTE PTR [rsi+0x15],ch
   14000b066:	add    BYTE PTR [rax],al
   14000b068:	jl     0x14000afeb
   14000b06a:	add    BYTE PTR [rax],al
   14000b06c:	adc    BYTE PTR [rip+0x18dd0000],0x0        # 0x158ddb073
   14000b073:	add    BYTE PTR [rdx+rax*4+0x18f00000],cl
   14000b07a:	add    BYTE PTR [rax],al
   14000b07c:	pop    rsi
   14000b07d:	sbb    al,BYTE PTR [rax]
   14000b07f:	add    BYTE PTR [rbx+rax*4+0x0],al
   14000b083:	add    BYTE PTR [rax+0x1a],dh
   14000b086:	add    BYTE PTR [rax],al
   14000b088:	jge    0x14000b0a4
   14000b08a:	add    BYTE PTR [rax],al
   14000b08c:	lock add DWORD PTR [rax],0x0
   14000b090:	jge    0x14000b0ac
   14000b092:	add    BYTE PTR [rax],al
   14000b094:	(bad)  
   14000b095:	sbb    al,BYTE PTR [rax]
   14000b097:	add    al,bh
   14000b099:	add    DWORD PTR [rax],0x0
   14000b09c:	(bad)  
   14000b09d:	sbb    al,BYTE PTR [rax]
   14000b09f:	add    BYTE PTR [rdi],bl
   14000b0a1:	sbb    eax,DWORD PTR [rax]
   14000b0a3:	add    BYTE PTR [rsp+rax*4],cl
   14000b0a6:	add    BYTE PTR [rax],al
   14000b0a8:	(bad)  
   14000b0a9:	sbb    eax,DWORD PTR [rax]
   14000b0ab:	add    BYTE PTR [rbx+rbx*1],ah
   14000b0ae:	add    BYTE PTR [rax],al
   14000b0b0:	sub    BYTE PTR [rax+rax*1+0x1b2400],al
   14000b0b7:	add    BYTE PTR [rbx],ch
   14000b0b9:	sbb    eax,DWORD PTR [rax]
   14000b0bb:	add    BYTE PTR [rax],bh
   14000b0bd:	test   BYTE PTR [rax],al
   14000b0bf:	add    BYTE PTR [rbx],ch
   14000b0c1:	sbb    eax,DWORD PTR [rax]
   14000b0c3:	add    BYTE PTR [rbx+0x1b],cl
   14000b0c6:	add    BYTE PTR [rax],al
   14000b0c8:	rex.W test BYTE PTR [rax],al
   14000b0cb:	add    BYTE PTR [rax+0x1b],ah
   14000b0ce:	add    BYTE PTR [rax],al
   14000b0d0:	mov    DWORD PTR [rbx],ebx
   14000b0d2:	add    BYTE PTR [rax],al
   14000b0d4:	mov    BYTE PTR [rax+rax*1+0x1b9000],al
   14000b0db:	add    ah,ah
   14000b0dd:	sbb    eax,DWORD PTR [rax]
   14000b0df:	add    BYTE PTR [rax-0xfffff7c],dl
   14000b0e5:	sbb    eax,DWORD PTR [rax]
   14000b0e7:	add    BYTE PTR [rax-0x4fffffe4],cl
   14000b0ed:	test   BYTE PTR [rax],al
   14000b0ef:	add    BYTE PTR [rax-0x1dffffe4],dl
   14000b0f5:	sbb    al,0x0
   14000b0f7:	add    BYTE PTR [rax-0xfffff7c],cl
   14000b0fd:	sbb    al,0x0
   14000b0ff:	add    BYTE PTR [rbp+0x1d],cl
   14000b102:	add    BYTE PTR [rax],al
   14000b104:	(bad)  
   14000b105:	test   BYTE PTR [rax],al
   14000b107:	add    BYTE PTR [rax+0x1d],ah
   14000b10a:	add    BYTE PTR [rax],al
   14000b10c:	cmp    ebx,DWORD PTR [rdi]
   14000b10e:	add    BYTE PTR [rax],al
   14000b110:	fadd   QWORD PTR [rax+rax*1+0x1f5000]
   14000b117:	add    BYTE PTR [rbp+0x4800001f],ah
   14000b11d:	test   DWORD PTR [rax],eax
   14000b11f:	add    BYTE PTR [rax+0x100001f],dh
   14000b125:	and    eax,DWORD PTR [rax]
   14000b127:	add    BYTE PTR [rbp+rax*4+0x0],ah
   14000b12b:	add    BYTE PTR [rax],dl
   14000b12d:	and    eax,DWORD PTR [rax]
   14000b12f:	add    BYTE PTR [rcx+0x23],dl
   14000b132:	add    BYTE PTR [rax],al
   14000b134:	enter  0x85,0x0
   14000b138:	(bad)  
   14000b139:	and    eax,DWORD PTR [rax]
   14000b13b:	add    BYTE PTR [rdi+0x24],ah
   14000b13e:	add    BYTE PTR [rax],al
   14000b140:	rol    BYTE PTR [rbp+0x24700000],1
   14000b146:	add    BYTE PTR [rax],al
   14000b148:	popf   
   14000b149:	and    al,0x0
   14000b14b:	add    BYTE PTR [rax],al
   14000b14d:	xchg   BYTE PTR [rax],al
   14000b14f:	add    BYTE PTR [rbp-0x37ffffdc],bl
   14000b155:	and    al,0x0
   14000b157:	add    BYTE PTR [rsi+rax*4],cl
   14000b15a:	add    BYTE PTR [rax],al
   14000b15c:	enter  0x24,0x0
   14000b160:	xlat   BYTE PTR ds:[rbx]
   14000b161:	and    al,0x0
   14000b163:	add    BYTE PTR [rax],ah
   14000b165:	xchg   BYTE PTR [rax],al
   14000b167:	add    bh,dl
   14000b169:	and    al,0x0
   14000b16b:	add    al,ch
   14000b16d:	and    al,0x0
   14000b16f:	add    BYTE PTR [rax],dh
   14000b171:	xchg   BYTE PTR [rax],al
   14000b173:	add    al,dh
   14000b175:	and    al,0x0
   14000b177:	add    BYTE PTR [rsi+0x54000025],dh
   14000b17d:	xchg   BYTE PTR [rax],al
   14000b17f:	add    al,al
   14000b181:	and    eax,0x279b0000
   14000b186:	add    BYTE PTR [rax],al
   14000b188:	js     0x14000b110
   14000b18a:	add    BYTE PTR [rax],al
   14000b18c:	mov    al,0x27
   14000b18e:	add    BYTE PTR [rax],al
   14000b190:	out    0x27,al
   14000b192:	add    BYTE PTR [rax],al
   14000b194:	movabs al,ds:0x3f000027e6000086
   14000b19d:	sub    BYTE PTR [rax],al
   14000b19f:	add    BYTE PTR [rax+0x3f000086],dh
   14000b1a5:	sub    BYTE PTR [rax],al
   14000b1a7:	add    BYTE PTR [rdi+0x28],dl
   14000b1aa:	add    BYTE PTR [rax],al
   14000b1ac:	rol    BYTE PTR [rsi+0x28570000],1
   14000b1b2:	add    BYTE PTR [rax],al
   14000b1b4:	add    ebp,DWORD PTR [rcx]
   14000b1b6:	add    BYTE PTR [rax],al
   14000b1b8:	loopne 0x14000b140
   14000b1ba:	add    BYTE PTR [rax],al
   14000b1bc:	adc    BYTE PTR [rcx],ch
   14000b1be:	add    BYTE PTR [rax],al
   14000b1c0:	cmp    ch,BYTE PTR [rcx]
   14000b1c2:	add    BYTE PTR [rax],al
   14000b1c4:	and    BYTE PTR [rdi+0x293a0000],al
   14000b1ca:	add    BYTE PTR [rax],al
   14000b1cc:	(bad)  
   14000b1cd:	sub    al,BYTE PTR [rax]
   14000b1cf:	add    BYTE PTR [rdi+rax*4],dh
   14000b1d2:	add    BYTE PTR [rax],al
   14000b1d4:	(bad)  
   14000b1d5:	sub    al,BYTE PTR [rax]
   14000b1d7:	add    BYTE PTR [rax+0x2a],al
   14000b1da:	add    BYTE PTR [rax],al
   14000b1dc:	xchg   QWORD PTR [rax],rax
   14000b1df:	add    BYTE PTR [rax+0x2a],dh
   14000b1e2:	add    BYTE PTR [rax],al
   14000b1e4:	nop
   14000b1e5:	sub    al,BYTE PTR [rax]
   14000b1e7:	add    BYTE PTR [rax-0x79],bl
   14000b1ea:	add    BYTE PTR [rax],al
   14000b1ec:	lock sub al,BYTE PTR [rax]
   14000b1ef:	add    BYTE PTR [rdx-0x7fffffd5],bh
   14000b1f5:	xchg   DWORD PTR [rax],eax
   14000b1f7:	add    al,al
   14000b1f9:	sub    eax,DWORD PTR [rax]
   14000b1fb:	add    dh,ah
   14000b1fd:	sub    eax,DWORD PTR [rax]
   14000b1ff:	add    BYTE PTR [rax-0xfffff7c],cl
   14000b205:	sub    eax,DWORD PTR [rax]
   14000b207:	add    BYTE PTR [rcx-0x57ffffd4],dl
   14000b20d:	xchg   DWORD PTR [rax],eax
   14000b20f:	add    al,dh
   14000b211:	sub    al,0x0
   14000b213:	add    BYTE PTR [rdx],ah
   14000b215:	sub    eax,0x87a80000
   14000b21a:	add    BYTE PTR [rax],al
   14000b21c:	xor    BYTE PTR [rip+0x2d770000],ch        # 0x16d77b222
   14000b222:	add    BYTE PTR [rax],al
   14000b224:	mov    al,0x87
   14000b226:	add    BYTE PTR [rax],al
   14000b228:	mov    eax,0xf00002d
   14000b22d:	add    BYTE PTR cs:[rax],al
   14000b230:	fadd   DWORD PTR [rax+0x2e180000]
   14000b236:	add    BYTE PTR [rax],al
   14000b238:	rex.WB
   14000b239:	add    BYTE PTR cs:[rax],al
   14000b23c:	mov    BYTE PTR [rax+rax*1+0x2e5000],al
   14000b243:	add    BYTE PTR [rdi],bl
   14000b245:	(bad)  
   14000b246:	add    BYTE PTR [rax],al
   14000b248:	in     al,0x8b
   14000b24a:	add    BYTE PTR [rax],al
   14000b24c:	xor    BYTE PTR [rdi],ch
   14000b24e:	add    BYTE PTR [rax],al
   14000b250:	jns    0x14000b281
   14000b252:	add    BYTE PTR [rax],al
   14000b254:	js     0x14000b1de
   14000b256:	add    BYTE PTR [rax],al
   14000b258:	sub    BYTE PTR [rdi],0x0
   14000b25b:	add    BYTE PTR [rdx-0x1bffffd1],dl
   14000b261:	mov    eax,DWORD PTR [rax]
   14000b263:	add    BYTE PTR [rax-0x11ffffd1],bl
   14000b269:	xor    DWORD PTR [rax],eax
   14000b26b:	add    BYTE PTR [rax+0x10000088],al
   14000b271:	xor    al,BYTE PTR [rax]
   14000b273:	add    BYTE PTR [rsi],ch
   14000b275:	xor    al,BYTE PTR [rax]
   14000b277:	add    BYTE PTR [rax+0x34000088],bh
   14000b27d:	xor    al,BYTE PTR [rax]
   14000b27f:	add    dl,dl
   14000b281:	xor    al,BYTE PTR [rax]
   14000b283:	add    BYTE PTR [rax+rcx*4+0x32d80000],bh
   14000b28a:	add    BYTE PTR [rax],al
   14000b28c:	out    dx,eax
   14000b28d:	xor    al,BYTE PTR [rax]
   14000b28f:	add    ah,ah
   14000b291:	mov    eax,DWORD PTR [rax]
   14000b293:	add    BYTE PTR [rax],dl
   14000b295:	xor    eax,DWORD PTR [rax]
   14000b297:	add    BYTE PTR [rax+0x33],al
   14000b29a:	add    BYTE PTR [rax],al
   14000b29c:	test   BYTE PTR [rdx+0x33540000],cl
   14000b2a2:	add    BYTE PTR [rax],al
   14000b2a4:	mov    BYTE PTR [rbx],dh
   14000b2a6:	add    BYTE PTR [rax],al
   14000b2a8:	mov    BYTE PTR [rax+rax*1+0x339000],al
   14000b2af:	add    BYTE PTR [rcx],al
   14000b2b1:	xor    eax,0x88e00000
   14000b2b6:	add    BYTE PTR [rax],al
   14000b2b8:	and    BYTE PTR [rip+0x35590000],dh        # 0x17559b2be
   14000b2be:	add    BYTE PTR [rax],al
   14000b2c0:	in     al,0x8b
   14000b2c2:	add    BYTE PTR [rax],al
   14000b2c4:	(bad)  
   14000b2c5:	xor    eax,0x35780000
   14000b2ca:	add    BYTE PTR [rax],al
   14000b2cc:	in     al,0x8b
   14000b2ce:	add    BYTE PTR [rax],al
   14000b2d0:	mov    WORD PTR [rip+0x35e00000],?        # 0x175e0b2d6
   14000b2d6:	add    BYTE PTR [rax],al
   14000b2d8:	call   0x12800b365
   14000b2dd:	xor    eax,0x362d0000
   14000b2e2:	add    BYTE PTR [rax],al
   14000b2e4:	mov    BYTE PTR [rax+rax*1+0x369000],al
   14000b2eb:	add    ch,bl
   14000b2ed:	add    BYTE PTR ss:[rax],al
   14000b2f0:	or     BYTE PTR [rcx+0x37240000],cl
   14000b2f6:	add    BYTE PTR [rax],al
   14000b2f8:	hlt    
   14000b2f9:	(bad)  
   14000b2fa:	add    BYTE PTR [rax],al
   14000b2fc:	sub    al,0x89
   14000b2fe:	add    BYTE PTR [rax],al
   14000b300:	cmp    BYTE PTR [rax],0x0
   14000b303:	add    BYTE PTR [rbp-0x1bffffc8],bl
   14000b309:	mov    eax,DWORD PTR [rax]
   14000b30b:	add    BYTE PTR [rax+rdi*1+0x39070000],ah
   14000b312:	add    BYTE PTR [rax],al
   14000b314:	mov    BYTE PTR [rax+rax*1+0x391000],al
   14000b31b:	add    BYTE PTR [rdi-0x3ffffc7],bl
   14000b321:	mov    eax,DWORD PTR [rax]
   14000b323:	add    al,dl
   14000b325:	cmp    DWORD PTR [rax],eax
   14000b327:	add    dl,dl
   14000b329:	cmp    DWORD PTR [rax],eax
   14000b32b:	add    BYTE PTR [rax],bh
   14000b32d:	mov    DWORD PTR [rax],eax
   14000b32f:	add    al,dh
   14000b331:	cmp    DWORD PTR [rax],eax
   14000b333:	add    BYTE PTR [rip+0x1800003a],bh        # 0x15800b373
   14000b339:	mov    WORD PTR [rax],es
   14000b33b:	add    al,cl
   14000b33d:	cmp    eax,DWORD PTR [rax]
   14000b33f:	add    dh,bl
   14000b341:	cmp    eax,DWORD PTR [rax]
   14000b343:	add    al,ch
   14000b345:	add    DWORD PTR [rax],0x0
   14000b348:	xor    BYTE PTR [rax+rax*1],bh
   14000b34b:	add    BYTE PTR [rax+0x3c],dl
   14000b34e:	add    BYTE PTR [rax],al
   14000b350:	js     0x14000b2d9
   14000b352:	add    BYTE PTR [rax],al
   14000b354:	push   rsi
   14000b355:	cmp    al,0x0
   14000b357:	add    BYTE PTR [rsp+rdi*1+0x0],dh
   14000b35b:	add    BYTE PTR [rax+0x7a000088],dh
   14000b361:	cmp    al,0x0
   14000b363:	add    BYTE PTR [rbp-0x4fffffc4],dl
   14000b369:	mov    BYTE PTR [rax],al
   14000b36b:	add    BYTE PTR [rax-0x3fffffc4],ah
   14000b371:	cmp    al,0x0
   14000b373:	add    BYTE PTR [rax-0x9ffff78],dh
   14000b379:	cmp    al,0x0
   14000b37b:	add    BYTE PTR [rdi+0x3d],bl
   14000b381:	test   DWORD PTR [rax],eax
   14000b383:	add    BYTE PTR [rax+0x6d00003d],ah
   14000b389:	add    BYTE PTR ds:[rax],al
   14000b38c:	mov    BYTE PTR [rbp+0x3e6e0000],al
   14000b392:	add    BYTE PTR [rax],al
   14000b394:	repz add BYTE PTR ds:[rax],al
   14000b398:	add    BYTE PTR [rcx+0x3ef40000],al
   14000b39e:	add    BYTE PTR [rax],al
   14000b3a0:	sub    eax,0x6400003f
   14000b3a5:	add    DWORD PTR [rax],0x3f2e00
   14000b3ab:	add    BYTE PTR [rdi-0x5bffffc0],cl
   14000b3b1:	add    DWORD PTR [rax],0x409000
   14000b3b7:	add    BYTE PTR [rdi],ah
   14000b3b9:	rex.XB add BYTE PTR [r8],al
   14000b3bc:	mov    ah,0x82
   14000b3be:	add    BYTE PTR [rax],al
   14000b3c0:	sub    BYTE PTR [rbx+0x0],al
   14000b3c3:	add    BYTE PTR [rdx+0x44],dl
   14000b3c6:	add    BYTE PTR [rax],al
   14000b3c8:	(bad)  
   14000b3c9:	add    DWORD PTR [rax],0x0
   14000b3cc:	push   rdx
   14000b3cd:	add    BYTE PTR [rax],r8b
   14000b3d0:	(bad)  
   14000b3d1:	add    BYTE PTR [rax],r8b
   14000b3d4:	push   0xffffffff9a000084
   14000b3d9:	add    BYTE PTR [rax],r8b
   14000b3dc:	mov    al,0x44
   14000b3de:	add    BYTE PTR [rax],al
   14000b3e0:	movabs al,ds:0xda000044b0000084
   14000b3e9:	add    BYTE PTR [rax],r8b
   14000b3ec:	(bad)  
   14000b3ed:	test   BYTE PTR [rax],al
   14000b3ef:	add    dl,bl
   14000b3f1:	add    BYTE PTR [rax],r8b
   14000b3f4:	adc    eax,0x54000045
   14000b3f9:	test   DWORD PTR [rax],eax
   14000b3fb:	add    BYTE PTR [rsi],dl
   14000b3fd:	add    BYTE PTR [r8],r8b
   14000b400:	and    al,BYTE PTR [rbp+0x0]
   14000b403:	add    al,dh
   14000b405:	test   DWORD PTR [rax],eax
   14000b407:	add    BYTE PTR [rdx],ah
   14000b409:	add    BYTE PTR [r8],r8b
   14000b40c:	add    BYTE PTR ss:[r8],r8b
   14000b410:	xchg   BYTE PTR [rax],r8b
   14000b413:	add    BYTE PTR [rsi],dh
   14000b415:	add    BYTE PTR [r8],r8b
   14000b418:	mov    ebx,0x68000045
   14000b41d:	xchg   BYTE PTR [rax],al
   14000b41f:	add    BYTE PTR [rbp+rax*2+0x47160000],bh
   14000b426:	add    BYTE PTR [rax],al
   14000b428:	nop
   14000b429:	xchg   BYTE PTR [rax],al
   14000b42b:	add    BYTE PTR [rsi],dl
   14000b42d:	rex.RXB add BYTE PTR [r8],r8b
   14000b430:	push   0x47
   14000b435:	xchg   DWORD PTR [rax],eax
   14000b437:	add    BYTE PTR [rax+0x47],ch
   14000b43a:	add    BYTE PTR [rax],al
   14000b43c:	mov    edi,0x98000047
   14000b441:	xchg   DWORD PTR [rax],eax
   14000b443:	add    ah,ch
   14000b445:	rex.RXB add BYTE PTR [r8],r8b
   14000b448:	adc    BYTE PTR [rax+0x0],cl
   14000b44b:	add    BYTE PTR [rax+0x18000084],cl
   14000b451:	rex.W add BYTE PTR [rax],al
   14000b454:	rex.B
   14000b455:	rex.W add BYTE PTR [rax],al
   14000b458:	mov    eax,0x54000087
   14000b45d:	rex.W add BYTE PTR [rax],al
   14000b460:	xchg   BYTE PTR [rax+0x0],cl
   14000b463:	add    BYTE PTR [rax-0x73ffff7c],cl
   14000b469:	rex.W add BYTE PTR [rax],al
   14000b46c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b46d:	rex.W add BYTE PTR [rax],al
   14000b470:	mov    BYTE PTR [rax+rax*1+0x48b000],al
   14000b477:	add    ah,cl
   14000b479:	rex.W add BYTE PTR [rax],al
   14000b47c:	call   0x10c00b508
   14000b481:	rex.W add BYTE PTR [rax],al
   14000b484:	add    BYTE PTR [rcx+0x0],cl
   14000b487:	add    ah,dh
   14000b489:	xchg   DWORD PTR [rax],eax
   14000b48b:	add    BYTE PTR [rax],al
   14000b48d:	rex.WB add BYTE PTR [r8],al
   14000b490:	or     ecx,DWORD PTR [rcx+0x0]
   14000b493:	add    BYTE PTR [rax+rcx*4],cl
   14000b496:	add    BYTE PTR [rax],al
   14000b498:	cmp    BYTE PTR [rcx+0x0],cl
   14000b49b:	add    bh,al
   14000b49d:	rex.WB add BYTE PTR [r8],al
   14000b4a0:	sbb    al,0x88
   14000b4a2:	add    BYTE PTR [rax],al
   14000b4a4:	cld    
   14000b4a5:	rex.WB add BYTE PTR [r8],al
   14000b4a8:	(bad)  
   14000b4a9:	rex.WX add BYTE PTR [rax],al
   14000b4ac:	mov    BYTE PTR [rax+rax*1+0x4a2400],al
   14000b4b3:	add    BYTE PTR [rax+0x4a],ah
   14000b4b6:	add    BYTE PTR [rax],al
   14000b4b8:	mov    BYTE PTR [rax+rax*1+0x4a7000],al
   14000b4bf:	add    BYTE PTR [rdi-0x77ffffb6],dl
   14000b4c5:	test   BYTE PTR [rax],al
   14000b4c7:	add    BYTE PTR [rax-0x42ffffb6],ah
   14000b4cd:	rex.WX add BYTE PTR [rax],al
   14000b4d0:	lods   al,BYTE PTR ds:[rsi]
   14000b4d1:	mov    al,BYTE PTR [rax]
   14000b4d3:	add    BYTE PTR [rbp-0x14ffffb6],bh
   14000b4d9:	rex.WX add BYTE PTR [rax],al
   14000b4dc:	mov    ah,0x8a
   14000b4de:	add    BYTE PTR [rax],al
   14000b4e0:	jmp    0x14000b52c
   14000b4e2:	add    BYTE PTR [rax],al
   14000b4e4:	lock rex.WX add BYTE PTR [rax],al
   14000b4e8:	enter  0x8a,0x0
   14000b4ec:	lock rex.WX add BYTE PTR [rax],al
   14000b4f0:	cmc    
   14000b4f1:	rex.WX add BYTE PTR [rax],al
   14000b4f4:	fmul   QWORD PTR [rdx+0x4b000000]
   14000b4fa:	add    BYTE PTR [rax],al
   14000b4fc:	ja     0x14000b549
   14000b4fe:	add    BYTE PTR [rax],al
   14000b500:	test   BYTE PTR [rdx+0x4b800000],cl
   14000b506:	add    BYTE PTR [rax],al
   14000b508:	(bad)  
   14000b509:	rex.WR add BYTE PTR [rax],r8b
   14000b50c:	cmp    al,0x89
   14000b50e:	add    BYTE PTR [rax],al
   14000b510:	(bad)  
   14000b511:	rex.WR add BYTE PTR [rax],r8b
   14000b514:	(bad)  
   14000b515:	rex.WR add BYTE PTR [rax],r8b
   14000b518:	add    al,0x8a
   14000b51a:	add    BYTE PTR [rax],al
   14000b51c:	(bad)  
   14000b51d:	rex.WR add BYTE PTR [rax],r8b
   14000b520:	in     al,dx
   14000b521:	rex.WR add BYTE PTR [rax],r8b
   14000b524:	adc    al,0x8a
   14000b526:	add    BYTE PTR [rax],al
   14000b528:	hlt    
   14000b529:	rex.WR add BYTE PTR [rax],r8b
   14000b52c:	adc    eax,0x5400004d
   14000b531:	mov    al,BYTE PTR [rax]
   14000b533:	add    BYTE PTR [rip+0x4300004d],dl        # 0x18300b586
   14000b539:	rex.WRB add BYTE PTR [r8],r8b
   14000b53c:	pop    rsp
   14000b53d:	mov    al,BYTE PTR [rax]
   14000b53f:	add    BYTE PTR [rbx+0x4d],al
   14000b542:	add    BYTE PTR [rax],al
   14000b544:	pop    rdx
   14000b545:	rex.WRB add BYTE PTR [r8],r8b
   14000b548:	jo     0x14000b4d4
   14000b54a:	add    BYTE PTR [rax],al
   14000b54c:	(bad)  
   14000b54d:	rex.WRB add BYTE PTR [r8],r8b
   14000b550:	jnp    0x14000b59f
   14000b552:	add    BYTE PTR [rax],al
   14000b554:	and    al,0x8a
   14000b556:	add    BYTE PTR [rax],al
   14000b558:	jnp    0x14000b5a7
   14000b55a:	add    BYTE PTR [rax],al
   14000b55c:	sahf   
   14000b55d:	rex.WRB add BYTE PTR [r8],r8b
   14000b560:	xor    BYTE PTR [rdx+0x4d9e0000],cl
   14000b566:	add    BYTE PTR [rax],al
   14000b568:	mov    ecx,0x4400004d
   14000b56d:	mov    al,BYTE PTR [rax]
   14000b56f:	add    al,al
   14000b571:	rex.WRB add BYTE PTR [r8],r8b
   14000b574:	pushf  
   14000b575:	rex.WRX add BYTE PTR [rax],r8b
   14000b578:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b579:	mov    eax,DWORD PTR [rax]
   14000b57b:	add    BYTE PTR [rsi+rcx*2+0x4f660000],ah
   14000b582:	add    BYTE PTR [rax],al
   14000b584:	fadd   DWORD PTR [rax+0x4f700000]
   14000b58a:	add    BYTE PTR [rax],al
   14000b58c:	mov    al,0x4f
   14000b58e:	add    BYTE PTR [rax],al
   14000b590:	test   BYTE PTR [rdx+0x4fe00000],cl
   14000b596:	add    BYTE PTR [rax],al
   14000b598:	rex.RXB push r8
   14000b59a:	add    BYTE PTR [rax],al
   14000b59c:	cwde   
   14000b59d:	mov    al,BYTE PTR [rax]
   14000b59f:	add    BYTE PTR [rax+0x50],dl
   14000b5a2:	add    BYTE PTR [rax],al
   14000b5a4:	enter  0x50,0x0
   14000b5a8:	test   BYTE PTR [rdx+0x50d00000],cl
   14000b5ae:	add    BYTE PTR [rax],al
   14000b5b0:	or     DWORD PTR [rcx+0x0],edx
   14000b5b3:	add    BYTE PTR [rax+0x1000008a],dl
   14000b5b9:	push   rcx
   14000b5ba:	add    BYTE PTR [rax],al
   14000b5bc:	rex.RX push rcx
   14000b5be:	add    BYTE PTR [rax],al
   14000b5c0:	nop
   14000b5c1:	mov    al,BYTE PTR [rax]
   14000b5c3:	add    BYTE PTR [rax+0x51],dl
   14000b5c6:	add    BYTE PTR [rax],al
   14000b5c8:	mov    DWORD PTR [rcx+0x0],edx
   14000b5cb:	add    BYTE PTR [rax-0x6fffff76],dl
   14000b5d1:	push   rcx
   14000b5d2:	add    BYTE PTR [rax],al
   14000b5d4:	sbb    edx,DWORD PTR [rdx+0x0]
   14000b5d7:	add    BYTE PTR [rax],bh
   14000b5d9:	mov    eax,DWORD PTR [rax]
   14000b5db:	add    BYTE PTR [rdx+rdx*2],ah
   14000b5de:	add    BYTE PTR [rax],al
   14000b5e0:	ret    0x52
   14000b5e3:	add    BYTE PTR [rax],ah
   14000b5e5:	mov    eax,DWORD PTR [rax]
   14000b5e7:	add    al,cl
   14000b5e9:	push   rdx
   14000b5ea:	add    BYTE PTR [rax],al
   14000b5ec:	rex.WB push r11
   14000b5ee:	add    BYTE PTR [rax],al
   14000b5f0:	mov    BYTE PTR [rax+rax*1+0x535000],al
   14000b5f7:	add    BYTE PTR [rcx+0x53],ah
   14000b5fa:	add    BYTE PTR [rax],al
   14000b5fc:	mov    eax,0x6100008b
   14000b601:	push   rbx
   14000b602:	add    BYTE PTR [rax],al
   14000b604:	jge    0x14000b659
   14000b606:	add    BYTE PTR [rax],al
   14000b608:	ror    BYTE PTR [rbx+0x537d0000],0x0
   14000b60f:	add    BYTE PTR [rbx-0x2bffffad],al
   14000b615:	mov    eax,DWORD PTR [rax]
   14000b617:	add    BYTE PTR [rax-0x3effffad],ah
   14000b61d:	push   rbp
   14000b61e:	add    BYTE PTR [rax],al
   14000b620:	mov    r8,QWORD PTR [rax]
   14000b623:	add    al,cl
   14000b625:	push   rbp
   14000b626:	add    BYTE PTR [rax],al
   14000b628:	mov    ch,0x56
   14000b62a:	add    BYTE PTR [rax],al
   14000b62c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b62d:	mov    eax,DWORD PTR [rax]
   14000b62f:	add    BYTE PTR [rsi+rdx*2+0x57070000],bh
   14000b636:	add    BYTE PTR [rax],al
   14000b638:	push   0x1000008b
   14000b63d:	push   rdi
   14000b63e:	add    BYTE PTR [rax],al
   14000b640:	in     al,0x57
   14000b642:	add    BYTE PTR [rax],al
   14000b644:	in     al,dx
   14000b645:	mov    al,BYTE PTR [rax]
   14000b647:	add    BYTE PTR [rax+rbx*2],bh
   14000b64a:	add    BYTE PTR [rax],al
   14000b64c:	pop    ax
   14000b64e:	add    BYTE PTR [rax],al
   14000b650:	test   al,0x87
   14000b652:	add    BYTE PTR [rax],al
   14000b654:	ins    BYTE PTR es:[rdi],dx
   14000b655:	pop    rax
   14000b656:	add    BYTE PTR [rax],al
   14000b658:	sahf   
   14000b659:	pop    rax
   14000b65a:	add    BYTE PTR [rax],al
   14000b65c:	test   al,0x87
   14000b65e:	add    BYTE PTR [rax],al
   14000b660:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b661:	pop    rax
   14000b662:	add    BYTE PTR [rax],al
   14000b664:	int    0x5a
   14000b666:	add    BYTE PTR [rax],al
   14000b668:	or     BYTE PTR [rbx+0x5ad40000],cl
   14000b66e:	add    BYTE PTR [rax],al
   14000b670:	std    
   14000b671:	pop    rdx
   14000b672:	add    BYTE PTR [rax],al
   14000b674:	je     0x14000b601
   14000b676:	add    BYTE PTR [rax],al
   14000b678:	std    
   14000b679:	pop    rdx
   14000b67a:	add    BYTE PTR [rax],al
   14000b67c:	(bad)  
   14000b67d:	pop    rbx
   14000b67e:	add    BYTE PTR [rax],al
   14000b680:	or     BYTE PTR [rbx+0x5b370000],0x0
   14000b687:	add    BYTE PTR [rbx+rbx*2+0x0],cl
   14000b68b:	add    BYTE PTR [rbx+rcx*4+0x5b540000],dl
   14000b692:	add    BYTE PTR [rax],al
   14000b694:	xchg   BYTE PTR [rbx+0x0],bl
   14000b697:	add    BYTE PTR [rax-0x73ffff79],ch
   14000b69d:	pop    rbx
   14000b69e:	add    BYTE PTR [rax],al
   14000b6a0:	enter  0x5b,0x0
   14000b6a4:	fadd   DWORD PTR [rax+0x5bd00000]
   14000b6aa:	add    BYTE PTR [rax],al
   14000b6ac:	add    eax,0x8800005c
   14000b6b1:	test   BYTE PTR [rax],al
   14000b6b3:	add    BYTE PTR [rax],dl
   14000b6b5:	pop    rsp
   14000b6b6:	add    BYTE PTR [rax],al
   14000b6b8:	(bad)  
   14000b6b9:	pop    rsp
   14000b6ba:	add    BYTE PTR [rax],al
   14000b6bc:	mov    BYTE PTR [rax+rax*1+0x5c4000],al
   14000b6c3:	add    BYTE PTR [rdx+0x5c],bl
   14000b6c6:	add    BYTE PTR [rax],al
   14000b6c8:	in     al,0x8b
   14000b6ca:	add    BYTE PTR [rax],al
   14000b6cc:	(bad)  
   14000b6cd:	pop    rsp
   14000b6ce:	add    BYTE PTR [rax],al
   14000b6d0:	xchg   ecx,eax
   14000b6d1:	pop    rsp
   14000b6d2:	add    BYTE PTR [rax],al
   14000b6d4:	test   al,0x87
   14000b6d6:	add    BYTE PTR [rax],al
   14000b6d8:	cwde   
   14000b6d9:	pop    rsp
   14000b6da:	add    BYTE PTR [rax],al
   14000b6dc:	or     al,0x5d
   14000b6de:	add    BYTE PTR [rax],al
   14000b6e0:	nop
   14000b6e1:	mov    al,BYTE PTR [rax]
   14000b6e3:	add    BYTE PTR [rax],ah
   14000b6e5:	pop    rbp
   14000b6e6:	add    BYTE PTR [rax],al
   14000b6e8:	jb     0x14000b747
   14000b6ea:	add    BYTE PTR [rax],al
   14000b6ec:	mov    BYTE PTR [rax+rax*1+0x5d7800],al
   14000b6f3:	add    al,dl
   14000b6f5:	pop    rsi
   14000b6f6:	add    BYTE PTR [rax],al
   14000b6f8:	in     al,dx
   14000b6f9:	mov    eax,DWORD PTR [rax]
	...

Disassembly of section .rsrc:

000000014000c000 <.rsrc>:
	...
   14000c00c:	add    DWORD PTR [rax],eax
   14000c00e:	add    DWORD PTR [rax],eax
   14000c010:	movabs al,ds:0x1080000020800000
   14000c019:	add    BYTE PTR [rax],al
   14000c01b:	add    BYTE PTR [rax],bh
   14000c01d:	add    BYTE PTR [rax],al
   14000c01f:	add    BYTE PTR [rax],0x0
	...
   14000c02e:	add    DWORD PTR [rax],eax
   14000c030:	add    DWORD PTR [rax],eax
   14000c032:	add    BYTE PTR [rax],al
   14000c034:	push   rax
   14000c035:	add    BYTE PTR [rax],al
   14000c037:	add    BYTE PTR [rax],0x0
	...
   14000c046:	add    DWORD PTR [rax],eax
   14000c048:	add    DWORD PTR [rax],eax
   14000c04a:	add    BYTE PTR [rax],al
   14000c04c:	push   0x800000
	...
   14000c05d:	add    BYTE PTR [rcx],al
   14000c05f:	add    BYTE PTR [rcx],cl
   14000c061:	add    al,0x0
   14000c063:	add    BYTE PTR [rax+0x0],al
	...
   14000c075:	add    BYTE PTR [rcx],al
   14000c077:	add    BYTE PTR [rcx],cl
   14000c079:	add    al,0x0
   14000c07b:	add    BYTE PTR [rax-0x80000000],dl
   14000c081:	(bad)  
   14000c082:	add    BYTE PTR [rax],al
   14000c084:	rol    BYTE PTR [rax],1
	...
   14000c08e:	add    BYTE PTR [rax],al
   14000c090:	mov    al,0xc0
   14000c092:	add    BYTE PTR [rax],al
   14000c094:	int3   
   14000c095:	add    eax,DWORD PTR [rax]
	...
   14000c09f:	add    BYTE PTR [rbx],al
   14000c0a1:	add    BYTE PTR [rbp+0x0],cl
   14000c0a4:	push   rbp
   14000c0a5:	add    BYTE PTR [rcx+0x0],cl
	...
   14000c0b0:	int3   
   14000c0b1:	add    esi,DWORD PTR [rax+rax*1]
   14000c0b4:	add    BYTE PTR [rax],al
   14000c0b6:	push   rsi
   14000c0b7:	add    BYTE PTR [rbx+0x0],dl
   14000c0ba:	pop    rdi
   14000c0bb:	add    BYTE PTR [rsi+0x0],dl
   14000c0be:	add    BYTE PTR [r10+0x0],r10b
   14000c0c2:	push   rbx
   14000c0c3:	add    BYTE PTR [rcx+0x0],cl
   14000c0c6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000c0ca:	pop    rdi
   14000c0cb:	add    BYTE PTR [rcx+0x0],cl
   14000c0ce:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000c0d2:	rex.WRXB add BYTE PTR [r8],r8b
   14000c0d5:	add    BYTE PTR [rax],al
   14000c0d7:	add    BYTE PTR [rbp+0xfeef04],bh
   14000c0dd:	add    BYTE PTR [rcx],al
   14000c0df:	add    BYTE PTR [rax],al
   14000c0e1:	add    BYTE PTR [rdx],cl
   14000c0e3:	add    BYTE PTR [rax],al
   14000c0e5:	add    BYTE PTR [rax],bpl
   14000c0e8:	add    BYTE PTR [rax],al
   14000c0ea:	or     al,BYTE PTR [rax]
   14000c0ec:	add    BYTE PTR [rax+0x0],al
   14000c0ef:	sub    BYTE PTR [rdi],bh
   14000c0f1:	add    BYTE PTR [rax],al
   14000c0f3:	add    BYTE PTR [rax],al
   14000c0f5:	add    BYTE PTR [rax],al
   14000c0f7:	add    BYTE PTR [rax+rax*1],al
   14000c0fa:	add    al,0x0
   14000c0fc:	add    DWORD PTR [rax],eax
	...
   14000c10a:	add    BYTE PTR [rax],al
   14000c10c:	sub    al,BYTE PTR [rbx]
   14000c10e:	add    BYTE PTR [rax],al
   14000c110:	add    DWORD PTR [rax],eax
   14000c112:	push   rbx
   14000c113:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000c117:	add    BYTE PTR [rcx+0x0],ch
   14000c11a:	outs   dx,BYTE PTR ds:[rsi]
   14000c11b:	add    BYTE PTR [rdi+0x0],ah
   14000c11e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c122:	ins    BYTE PTR es:[rdi],dx
   14000c123:	add    BYTE PTR [rbp+0x0],ah
   14000c126:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c12a:	data16 add BYTE PTR [rdi+0x0],ch
   14000c12e:	add    BYTE PTR [rax],al
   14000c130:	(bad)  
   14000c131:	add    eax,DWORD PTR [rax]
   14000c133:	add    BYTE PTR [rcx],al
   14000c135:	add    BYTE PTR [rax],dh
   14000c137:	add    BYTE PTR [rax+rax*1],dh
   14000c13a:	xor    BYTE PTR [rax],al
   14000c13c:	cmp    DWORD PTR [rax],eax
   14000c13e:	xor    BYTE PTR [rax],al
   14000c140:	xor    al,0x0
   14000c142:	rex.X add BYTE PTR [rax],sil
   14000c145:	add    BYTE PTR [rax],al
   14000c147:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000c14b:	add    BYTE PTR [rcx],al
   14000c14d:	add    BYTE PTR [rbx+0x0],al
   14000c150:	outs   dx,DWORD PTR ds:[rsi]
   14000c151:	add    BYTE PTR [rbp+0x0],ch
   14000c154:	jo     0x14000c156
   14000c156:	(bad)  
   14000c157:	add    BYTE PTR [rsi+0x0],ch
   14000c15a:	jns    0x14000c15c
   14000c15c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c160:	ins    DWORD PTR es:[rdi],dx
   14000c161:	add    BYTE PTR [rbp+0x0],ah
   14000c164:	add    BYTE PTR [rax],al
   14000c166:	add    BYTE PTR [rax],al
   14000c168:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c16c:	movsxd eax,DWORD PTR [rax]
   14000c16e:	jb     0x14000c170
   14000c170:	outs   dx,DWORD PTR ds:[rsi]
   14000c171:	add    BYTE PTR [rbx+0x0],dh
   14000c174:	outs   dx,DWORD PTR ds:[rsi]
   14000c175:	add    BYTE PTR [rsi+0x0],ah
   14000c178:	je     0x14000c17a
   14000c17a:	and    BYTE PTR [rax],al
   14000c17c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c180:	jb     0x14000c182
   14000c182:	jo     0x14000c184
   14000c184:	outs   dx,DWORD PTR ds:[rsi]
   14000c185:	add    BYTE PTR [rdx+0x0],dh
   14000c188:	(bad)  
   14000c189:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c18d:	add    BYTE PTR [rdi+0x0],ch
   14000c190:	outs   dx,BYTE PTR ds:[rsi]
   14000c191:	add    BYTE PTR [rax],al
   14000c193:	add    BYTE PTR [rax+rax*1+0x16],dl
   14000c197:	add    BYTE PTR [rcx],al
   14000c199:	add    BYTE PTR [rsi+0x0],al
   14000c19c:	imul   eax,DWORD PTR [rax],0x65006c
   14000c1a2:	add    BYTE PTR [rbp+0x0],r12b
   14000c1a6:	jae    0x14000c1a8
   14000c1a8:	movsxd eax,DWORD PTR [rax]
   14000c1aa:	jb     0x14000c1ac
   14000c1ac:	imul   eax,DWORD PTR [rax],0x740070
   14000c1b2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c1b8:	add    BYTE PTR [rax],al
   14000c1ba:	add    BYTE PTR [rax],al
   14000c1bc:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000c1c0:	movsxd eax,DWORD PTR [rax]
   14000c1c2:	(bad)  
   14000c1c3:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c1c7:	add    BYTE PTR [rdi+0x0],ch
   14000c1ca:	outs   dx,BYTE PTR ds:[rsi]
   14000c1cb:	add    BYTE PTR [rax],ah
   14000c1cd:	add    BYTE PTR [rsi+0x0],cl
   14000c1d0:	outs   dx,DWORD PTR ds:[rsi]
   14000c1d1:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c1d5:	add    BYTE PTR [rsi+0x0],ah
   14000c1d8:	imul   eax,DWORD PTR [rax],0x610063
   14000c1de:	je     0x14000c1e0
   14000c1e0:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c1e6:	add    BYTE PTR [rax],al
   14000c1e8:	data16 add BYTE PTR [rbx],ah
   14000c1eb:	add    BYTE PTR [rcx],al
   14000c1ed:	add    BYTE PTR [rsi+0x0],al
   14000c1f0:	imul   eax,DWORD PTR [rax],0x65006c
   14000c1f6:	push   rsi
   14000c1f7:	add    BYTE PTR [rbp+0x0],ah
   14000c1fa:	jb     0x14000c1fc
   14000c1fc:	jae    0x14000c1fe
   14000c1fe:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c204:	add    BYTE PTR [rax],al
   14000c206:	add    BYTE PTR [rax],al
   14000c208:	xor    DWORD PTR [rax],eax
   14000c20a:	xor    BYTE PTR [rax],al
   14000c20c:	add    BYTE PTR cs:[rax],dh
   14000c20f:	add    BYTE PTR [rsi],ch
   14000c211:	add    BYTE PTR [rcx],dh
   14000c213:	add    BYTE PTR [rax],dh
   14000c215:	add    BYTE PTR [rdx],dh
   14000c217:	add    BYTE PTR [rax+rax*1],dh
   14000c21a:	xor    BYTE PTR [rax],al
   14000c21c:	add    BYTE PTR cs:[rcx],dh
   14000c21f:	add    BYTE PTR [rsi],dh
   14000c221:	add    BYTE PTR [rbx],dh
   14000c223:	add    BYTE PTR [rax],bh
   14000c225:	add    BYTE PTR [rax+rax*1],dh
   14000c228:	and    BYTE PTR [rax],al
   14000c22a:	sub    BYTE PTR [rax],al
   14000c22c:	je     0x14000c22e
   14000c22e:	push   0x2e003100
   14000c233:	add    BYTE PTR [rcx],dh
   14000c235:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700f23b
   14000c23b:	add    BYTE PTR [rax],dh
   14000c23d:	add    BYTE PTR [rcx],bh
   14000c23f:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700f345
   14000c245:	add    BYTE PTR [rax],dh
   14000c247:	add    BYTE PTR [rax],dh
   14000c249:	add    BYTE PTR [rcx],ch
   14000c24b:	add    BYTE PTR [rax],al
   14000c24d:	add    BYTE PTR [rax],al
   14000c24f:	add    BYTE PTR [rdx+0x0],cl
   14000c252:	adc    eax,0x49000100
   14000c257:	add    BYTE PTR [rsi+0x0],ch
   14000c25a:	je     0x14000c25c
   14000c25c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c260:	outs   dx,BYTE PTR ds:[rsi]
   14000c261:	add    BYTE PTR [rcx+0x0],ah
   14000c264:	ins    BYTE PTR es:[rdi],dx
   14000c265:	add    BYTE PTR [rsi+0x0],cl
   14000c268:	(bad)  
   14000c269:	add    BYTE PTR [rbp+0x0],ch
   14000c26c:	add    BYTE PTR gs:[rax],al
   14000c26f:	add    BYTE PTR [rax+rax*1+0x6f],cl
   14000c273:	add    BYTE PTR [rbx+0x0],ah
   14000c276:	(bad)  
   14000c277:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c27b:	add    BYTE PTR [rdi+0x0],ch
   14000c27e:	outs   dx,BYTE PTR ds:[rsi]
   14000c27f:	add    BYTE PTR [rsi+0x0],cl
   14000c282:	outs   dx,DWORD PTR ds:[rsi]
   14000c283:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c287:	add    BYTE PTR [rsi+0x0],ah
   14000c28a:	imul   eax,DWORD PTR [rax],0x610063
   14000c290:	je     0x14000c292
   14000c292:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c298:	add    BYTE PTR [rax],al
   14000c29a:	add    BYTE PTR [rax],al
   14000c29c:	add    BYTE PTR [rax],0x2e
   14000c29f:	add    BYTE PTR [rcx],al
   14000c2a1:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c2a5:	add    BYTE PTR [rdi+0x0],ah
   14000c2a8:	(bad)  
   14000c2a9:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000c2ad:	add    BYTE PTR [rdi+0x0],ch
   14000c2b0:	jo     0x14000c2b2
   14000c2b2:	jns    0x14000c2b4
   14000c2b4:	jb     0x14000c2b6
   14000c2b6:	imul   eax,DWORD PTR [rax],0x680067
   14000c2bc:	je     0x14000c2be
   14000c2be:	add    BYTE PTR [rax],al
   14000c2c0:	test   eax,0x4d002000
   14000c2c5:	add    BYTE PTR [rcx+0x0],ch
   14000c2c8:	movsxd eax,DWORD PTR [rax]
   14000c2ca:	jb     0x14000c2cc
   14000c2cc:	outs   dx,DWORD PTR ds:[rsi]
   14000c2cd:	add    BYTE PTR [rbx+0x0],dh
   14000c2d0:	outs   dx,DWORD PTR ds:[rsi]
   14000c2d1:	add    BYTE PTR [rsi+0x0],ah
   14000c2d4:	je     0x14000c2d6
   14000c2d6:	and    BYTE PTR [rax],al
   14000c2d8:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c2dc:	jb     0x14000c2de
   14000c2de:	jo     0x14000c2e0
   14000c2e0:	outs   dx,DWORD PTR ds:[rsi]
   14000c2e1:	add    BYTE PTR [rdx+0x0],dh
   14000c2e4:	(bad)  
   14000c2e5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c2e9:	add    BYTE PTR [rdi+0x0],ch
   14000c2ec:	outs   dx,BYTE PTR ds:[rsi]
   14000c2ed:	add    BYTE PTR [rsi],ch
   14000c2ef:	add    BYTE PTR [rax],ah
   14000c2f1:	add    BYTE PTR [rcx+0x0],al
   14000c2f4:	ins    BYTE PTR es:[rdi],dx
   14000c2f5:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c2f9:	add    BYTE PTR [rdx+0x0],dh
   14000c2fc:	imul   eax,DWORD PTR [rax],0x680067
   14000c302:	je     0x14000c304
   14000c304:	jae    0x14000c306
   14000c306:	and    BYTE PTR [rax],al
   14000c308:	jb     0x14000c30a
   14000c30a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c30e:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c312:	jbe    0x14000c314
   14000c314:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000c319:	add    BYTE PTR [rax],al
   14000c31b:	add    BYTE PTR [rax+0x0],ch
   14000c31e:	and    BYTE PTR [rax],al
   14000c320:	add    DWORD PTR [rax],eax
   14000c322:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000c326:	imul   eax,DWORD PTR [rax],0x690067
   14000c32c:	outs   dx,BYTE PTR ds:[rsi]
   14000c32d:	add    BYTE PTR [rcx+0x0],ah
   14000c330:	ins    BYTE PTR es:[rdi],dx
   14000c331:	add    BYTE PTR [rsi+0x0],al
   14000c334:	imul   eax,DWORD PTR [rax],0x65006c
   14000c33a:	outs   dx,BYTE PTR ds:[rsi]
   14000c33b:	add    BYTE PTR [rcx+0x0],ah
   14000c33e:	ins    DWORD PTR es:[rdi],dx
   14000c33f:	add    BYTE PTR [rbp+0x0],ah
   14000c342:	add    BYTE PTR [rax],al
   14000c344:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000c348:	movsxd eax,DWORD PTR [rax]
   14000c34a:	(bad)  
   14000c34b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c34f:	add    BYTE PTR [rdi+0x0],ch
   14000c352:	outs   dx,BYTE PTR ds:[rsi]
   14000c353:	add    BYTE PTR [rsi+0x0],cl
   14000c356:	outs   dx,DWORD PTR ds:[rsi]
   14000c357:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c35b:	add    BYTE PTR [rsi+0x0],ah
   14000c35e:	imul   eax,DWORD PTR [rax],0x610063
   14000c364:	je     0x14000c366
   14000c366:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c36c:	push   rdi
   14000c36d:	add    BYTE PTR [rcx+0x0],ch
   14000c370:	outs   dx,BYTE PTR ds:[rsi]
   14000c371:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000c375:	add    BYTE PTR [rdi+0x0],dh
   14000c378:	jae    0x14000c37a
   14000c37a:	add    BYTE PTR cs:[rbp+0x0],ah
   14000c37e:	js     0x14000c380
   14000c380:	add    BYTE PTR gs:[rax],al
   14000c383:	add    BYTE PTR [rdx+0x0],ch
   14000c386:	and    eax,0x50000100
   14000c38b:	add    BYTE PTR [rdx+0x0],dh
   14000c38e:	outs   dx,DWORD PTR ds:[rsi]
   14000c38f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c393:	add    BYTE PTR [rbx+0x0],ah
   14000c396:	je     0x14000c398
   14000c398:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c39c:	ins    DWORD PTR es:[rdi],dx
   14000c39d:	add    BYTE PTR [rbp+0x0],ah
   14000c3a0:	add    BYTE PTR [rax],al
   14000c3a2:	add    BYTE PTR [rax],al
   14000c3a4:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c3a8:	movsxd eax,DWORD PTR [rax]
   14000c3aa:	jb     0x14000c3ac
   14000c3ac:	outs   dx,DWORD PTR ds:[rsi]
   14000c3ad:	add    BYTE PTR [rbx+0x0],dh
   14000c3b0:	outs   dx,DWORD PTR ds:[rsi]
   14000c3b1:	add    BYTE PTR [rsi+0x0],ah
   14000c3b4:	je     0x14000c3b6
   14000c3b6:	scas   al,BYTE PTR es:[rdi]
   14000c3b7:	add    BYTE PTR [rax],ah
   14000c3b9:	add    BYTE PTR [rdi+0x0],dl
   14000c3bc:	imul   eax,DWORD PTR [rax],0x64006e
   14000c3c2:	outs   dx,DWORD PTR ds:[rsi]
   14000c3c3:	add    BYTE PTR [rdi+0x0],dh
   14000c3c6:	jae    0x14000c3c8
   14000c3c8:	scas   al,BYTE PTR es:[rdi]
   14000c3c9:	add    BYTE PTR [rax],ah
   14000c3cb:	add    BYTE PTR [rdi+0x0],cl
   14000c3ce:	jo     0x14000c3d0
   14000c3d0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c3d4:	(bad)  
   14000c3d5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c3d9:	add    BYTE PTR [rsi+0x0],ch
   14000c3dc:	add    BYTE PTR [eax],ah
   14000c3df:	add    BYTE PTR [rbx+0x0],dl
   14000c3e2:	jns    0x14000c3e4
   14000c3e4:	jae    0x14000c3e6
   14000c3e6:	je     0x14000c3e8
   14000c3e8:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c3ec:	add    BYTE PTR [rax],al
   14000c3ee:	add    BYTE PTR [rax],al
   14000c3f0:	rex.RX add BYTE PTR [rcx],r10b
   14000c3f3:	add    BYTE PTR [rcx],al
   14000c3f5:	add    BYTE PTR [rax+0x0],dl
   14000c3f8:	jb     0x14000c3fa
   14000c3fa:	outs   dx,DWORD PTR ds:[rsi]
   14000c3fb:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c3ff:	add    BYTE PTR [rbx+0x0],ah
   14000c402:	je     0x14000c404
   14000c404:	push   rsi
   14000c405:	add    BYTE PTR [rbp+0x0],ah
   14000c408:	jb     0x14000c40a
   14000c40a:	jae    0x14000c40c
   14000c40c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c412:	add    BYTE PTR [rax],al
   14000c414:	xor    DWORD PTR [rax],eax
   14000c416:	xor    BYTE PTR [rax],al
   14000c418:	add    BYTE PTR cs:[rax],dh
   14000c41b:	add    BYTE PTR [rsi],ch
   14000c41d:	add    BYTE PTR [rcx],dh
   14000c41f:	add    BYTE PTR [rax],dh
   14000c421:	add    BYTE PTR [rdx],dh
   14000c423:	add    BYTE PTR [rax+rax*1],dh
   14000c426:	xor    BYTE PTR [rax],al
   14000c428:	add    BYTE PTR cs:[rcx],dh
   14000c42b:	add    BYTE PTR [rsi],dh
   14000c42d:	add    BYTE PTR [rbx],dh
   14000c42f:	add    BYTE PTR [rax],bh
   14000c431:	add    BYTE PTR [rax+rax*1],dh
   14000c434:	add    BYTE PTR [rax],al
   14000c436:	add    BYTE PTR [rax],al
   14000c438:	add    BYTE PTR [rax],r8b
   14000c43b:	add    BYTE PTR [rcx],al
   14000c43d:	add    BYTE PTR [rsi+0x0],dl
   14000c440:	(bad)  
   14000c441:	add    BYTE PTR [rdx+0x0],dh
   14000c444:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c448:	ins    BYTE PTR es:[rdi],dx
   14000c449:	add    BYTE PTR [rbp+0x0],ah
   14000c44c:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c450:	data16 add BYTE PTR [rdi+0x0],ch
   14000c454:	add    BYTE PTR [rax],al
   14000c456:	add    BYTE PTR [rax],al
   14000c458:	and    al,0x0
   14000c45a:	add    al,0x0
   14000c45c:	add    BYTE PTR [rax],al
   14000c45e:	push   rsp
   14000c45f:	add    BYTE PTR [rdx+0x0],dh
   14000c462:	(bad)  
   14000c463:	add    BYTE PTR [rsi+0x0],ch
   14000c466:	jae    0x14000c468
   14000c468:	ins    BYTE PTR es:[rdi],dx
   14000c469:	add    BYTE PTR [rcx+0x0],ah
   14000c46c:	je     0x14000c46e
   14000c46e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c474:	add    BYTE PTR [rax],al
   14000c476:	add    BYTE PTR [rax],al
   14000c478:	or     DWORD PTR [rax+rsi*4],eax
   14000c47b:	add    al,0x0
   14000c47d:	add    BYTE PTR [rax],al
   14000c47f:	add    ch,cl
   14000c481:	dec    ch
   14000c483:	(bad)  
   14000c484:	rol    BYTE PTR [rax],1
   14000c486:	add    BYTE PTR [rax],al
   14000c488:	add    BYTE PTR [rax],al
   14000c48a:	add    DWORD PTR [rax],eax
   14000c48c:	add    BYTE PTR [rax],al
   14000c48e:	add    BYTE PTR [rax],al
   14000c490:	adc    DWORD PTR [rax],eax
   14000c492:	add    BYTE PTR [rax],al
   14000c494:	add    BYTE PTR [rax],al
   14000c496:	add    BYTE PTR [rax],al
   14000c498:	add    al,BYTE PTR [rax]
   14000c49a:	add    BYTE PTR [rax],al
   14000c49c:	jb     0x14000c49d
   14000c49e:	jmp    QWORD PTR [rbx+0x409c3825]
   14000c4a4:	retf   
   14000c4a5:	(bad)  
   14000c4a6:	(bad)  
   14000c4a7:	xor    al,0x7a
   14000c4a9:	jb     0x14000c43c
   14000c4ab:	(bad)  
   14000c4ac:	sbb    BYTE PTR [rax+0x37],bl
   14000c4af:	pop    rsi
   14000c4b0:	pop    rsp
   14000c4b1:	(bad)  
   14000c4b2:	pop    rax
   14000c4b3:	(bad)  
   14000c4b4:	(bad)  
   14000c4b5:	and    BYTE PTR [rdx+0xe],dh
   14000c4b8:	jns    0x14000c4bd
   14000c4ba:	(bad)  
   14000c4bb:	mov    al,BYTE PTR [rax]
	...
   14000c4d1:	add    BYTE PTR [rax],al
   14000c4d3:	add    BYTE PTR [rax+0xe000000],cl
   14000c4d9:	add    BYTE PTR [rax],al
   14000c4db:	add    BYTE PTR [rax+0x4000000],bl
   14000c4e1:	add    BYTE PTR [rax],al
   14000c4e3:	add    BYTE PTR [rax+0xe000000],ah
   14000c4e9:	add    BYTE PTR [rax],al
   14000c4eb:	add    BYTE PTR [rax+0xc000000],dh
	...
   14000c4f9:	add    BYTE PTR [rax],al
   14000c4fb:	add    al,al
   14000c4fd:	add    BYTE PTR [rax],al
   14000c4ff:	add    BYTE PTR [rax+rax*1],cl
   14000c502:	add    BYTE PTR [rax],al
   14000c504:	add    BYTE PTR [rax],al
   14000c506:	add    BYTE PTR [rax],al
   14000c508:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000c50c:	rex.WB add BYTE PTR [r8],al
	...
   14000c517:	add    BYTE PTR [rax],dl
   14000c519:	add    BYTE PTR [rax],al
   14000c51b:	add    BYTE PTR [rax],al
   14000c51d:	add    BYTE PTR [rax],al
   14000c51f:	add    BYTE PTR [rbp+0x0],cl
   14000c522:	push   rbp
   14000c523:	add    BYTE PTR [rcx+0x0],cl
	...
   14000c52e:	add    BYTE PTR [rax],al
   14000c530:	add    al,0x0
   14000c532:	add    BYTE PTR [rax],al
   14000c534:	(bad)  
   14000c535:	add    BYTE PTR [rax],al
   14000c537:	add    BYTE PTR [rax],dl
   14000c539:	add    BYTE PTR [rax],al
   14000c53b:	add    BYTE PTR [rax],al
   14000c53d:	add    BYTE PTR [rax],al
   14000c53f:	add    BYTE PTR [rbp+0x0],ah
   14000c542:	outs   dx,BYTE PTR ds:[rsi]
   14000c543:	add    BYTE PTR [rip+0x53005500],ch        # 0x193011a49
   14000c549:	add    BYTE PTR [rax],al
   14000c54b:	add    BYTE PTR [rax],al
   14000c54d:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000d000 <.reloc>:
   14000d000:	add    BYTE PTR [rax+0x0],ah
   14000d003:	add    BYTE PTR [rax+rax*1+0x0],bh
   14000d007:	add    al,dl
   14000d009:	movabs ds:0xa3f8a3f0a3e8a3d8,eax
   14000d012:	add    BYTE PTR [rax+rcx*1+0x18a410a4],ah
   14000d019:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d01a:	and    BYTE PTR [rax+rdi*1+0x20a440a4],ah
   14000d021:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d022:	sub    BYTE PTR [rbp-0x5ac75ad0],ah
   14000d028:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d02a:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000d02c:	push   rax
   14000d02d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d02e:	pop    rax
   14000d02f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d030:	(bad)  
   14000d031:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d032:	push   0x78a570a5
   14000d037:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d038:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   14000d03f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d040:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   14000d049:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d04a:	enter  0xd0a5,0xa5
   14000d04e:	fsub   DWORD PTR [rbp-0x59c759d0]
   14000d054:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d056:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d058:	push   rax
   14000d059:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d05a:	pop    rax
   14000d05b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d05c:	(bad)  
   14000d05d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d05e:	shl    BYTE PTR [rsi-0x592f5938],0xd8
   14000d065:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d066:	loopne 0x14000d00e
   14000d068:	call   0xc8a7c113
   14000d06d:	test   al,0x90
   14000d06f:	test   al,0x98
   14000d071:	test   al,0x98
   14000d073:	lods   eax,DWORD PTR ds:[rsi]
   14000d074:	mov    al,0xad
   14000d076:	mov    eax,0xf8adc0ad
   14000d07b:	scas   eax,DWORD PTR es:[rdi]
   14000d07c:	add    BYTE PTR [rax+0x0],dh
   14000d07f:	add    BYTE PTR [rax],ah
   14000d081:	add    BYTE PTR [rax],al
   14000d083:	add    BYTE PTR [rax],al
   14000d085:	movabs al,ds:0xa020a018a010a008
   14000d08e:	sub    BYTE PTR [rax-0x5e175e20],ah
   14000d094:	lock movabs eax,ds:0xa0000000a200a1f8
   14000d09e:	add    BYTE PTR [rax],al
   14000d0a0:	adc    al,0x0
   14000d0a2:	add    BYTE PTR [rax],al
   14000d0a4:	cmp    BYTE PTR [rax-0x5f8f5f98],ah
   14000d0aa:	.byte 0x80
   14000d0ab:	.byte 0xa0
   14000d0ac:	mov    al,0xa0
   14000d0ae:	.byte 0x80
   14000d0af:	.byte 0xa1
